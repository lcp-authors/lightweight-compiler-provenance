
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-logind_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000406b30 <_init>:
  406b30:	stp	x29, x30, [sp, #-16]!
  406b34:	mov	x29, sp
  406b38:	bl	408058 <call_weak_fn>
  406b3c:	ldp	x29, x30, [sp], #16
  406b40:	ret

Disassembly of section .plt:

0000000000406b48 <__libc_start_main@plt-0x20>:
  406b48:	stp	x16, x30, [sp, #-16]!
  406b4c:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406b50:	ldr	x17, [x16, #1448]
  406b54:	add	x16, x16, #0x5a8
  406b58:	br	x17
  406b5c:	nop
  406b60:	nop
  406b64:	nop

0000000000406b68 <__libc_start_main@plt>:
  406b68:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406b6c:	ldr	x17, [x16, #1456]
  406b70:	add	x16, x16, #0x5b0
  406b74:	br	x17

0000000000406b78 <abort@plt>:
  406b78:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406b7c:	ldr	x17, [x16, #1464]
  406b80:	add	x16, x16, #0x5b8
  406b84:	br	x17

0000000000406b88 <__gmon_start__@plt>:
  406b88:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406b8c:	ldr	x17, [x16, #1472]
  406b90:	add	x16, x16, #0x5c0
  406b94:	br	x17

0000000000406b98 <ask_password_agent_close@plt>:
  406b98:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406b9c:	ldr	x17, [x16, #1480]
  406ba0:	add	x16, x16, #0x5c8
  406ba4:	br	x17

0000000000406ba8 <polkit_agent_close@plt>:
  406ba8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406bac:	ldr	x17, [x16, #1488]
  406bb0:	add	x16, x16, #0x5d0
  406bb4:	br	x17

0000000000406bb8 <pager_close@plt>:
  406bb8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406bbc:	ldr	x17, [x16, #1496]
  406bc0:	add	x16, x16, #0x5d8
  406bc4:	br	x17

0000000000406bc8 <mac_selinux_finish@plt>:
  406bc8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406bcc:	ldr	x17, [x16, #1504]
  406bd0:	add	x16, x16, #0x5e0
  406bd4:	br	x17

0000000000406bd8 <log_set_facility@plt>:
  406bd8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406bdc:	ldr	x17, [x16, #1512]
  406be0:	add	x16, x16, #0x5e8
  406be4:	br	x17

0000000000406be8 <log_setup_service@plt>:
  406be8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406bec:	ldr	x17, [x16, #1520]
  406bf0:	add	x16, x16, #0x5f0
  406bf4:	br	x17

0000000000406bf8 <umask@plt>:
  406bf8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406bfc:	ldr	x17, [x16, #1528]
  406c00:	add	x16, x16, #0x5f8
  406c04:	br	x17

0000000000406c08 <log_get_max_level_realm@plt>:
  406c08:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406c0c:	ldr	x17, [x16, #1536]
  406c10:	add	x16, x16, #0x600
  406c14:	br	x17

0000000000406c18 <log_internal_realm@plt>:
  406c18:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406c1c:	ldr	x17, [x16, #1544]
  406c20:	add	x16, x16, #0x608
  406c24:	br	x17

0000000000406c28 <abs@plt>:
  406c28:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406c2c:	ldr	x17, [x16, #1552]
  406c30:	add	x16, x16, #0x610
  406c34:	br	x17

0000000000406c38 <mac_selinux_init@plt>:
  406c38:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406c3c:	ldr	x17, [x16, #1560]
  406c40:	add	x16, x16, #0x618
  406c44:	br	x17

0000000000406c48 <mkdir_label@plt>:
  406c48:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406c4c:	ldr	x17, [x16, #1568]
  406c50:	add	x16, x16, #0x620
  406c54:	br	x17

0000000000406c58 <sigprocmask_many@plt>:
  406c58:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406c5c:	ldr	x17, [x16, #1576]
  406c60:	add	x16, x16, #0x628
  406c64:	br	x17

0000000000406c68 <log_assert_failed_realm@plt>:
  406c68:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406c6c:	ldr	x17, [x16, #1584]
  406c70:	add	x16, x16, #0x630
  406c74:	br	x17

0000000000406c78 <getpid_cached@plt>:
  406c78:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406c7c:	ldr	x17, [x16, #1592]
  406c80:	add	x16, x16, #0x638
  406c84:	br	x17

0000000000406c88 <sd_notify@plt>:
  406c88:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406c8c:	ldr	x17, [x16, #1600]
  406c90:	add	x16, x16, #0x640
  406c94:	br	x17

0000000000406c98 <memset@plt>:
  406c98:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406c9c:	ldr	x17, [x16, #1608]
  406ca0:	add	x16, x16, #0x648
  406ca4:	br	x17

0000000000406ca8 <now@plt>:
  406ca8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406cac:	ldr	x17, [x16, #1616]
  406cb0:	add	x16, x16, #0x650
  406cb4:	br	x17

0000000000406cb8 <memcpy@plt>:
  406cb8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406cbc:	ldr	x17, [x16, #1624]
  406cc0:	add	x16, x16, #0x658
  406cc4:	br	x17

0000000000406cc8 <internal_hashmap_new@plt>:
  406cc8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406ccc:	ldr	x17, [x16, #1632]
  406cd0:	add	x16, x16, #0x660
  406cd4:	br	x17

0000000000406cd8 <sd_event_default@plt>:
  406cd8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406cdc:	ldr	x17, [x16, #1640]
  406ce0:	add	x16, x16, #0x668
  406ce4:	br	x17

0000000000406ce8 <sd_event_add_signal@plt>:
  406ce8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406cec:	ldr	x17, [x16, #1648]
  406cf0:	add	x16, x16, #0x670
  406cf4:	br	x17

0000000000406cf8 <sd_event_set_watchdog@plt>:
  406cf8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406cfc:	ldr	x17, [x16, #1656]
  406d00:	add	x16, x16, #0x678
  406d04:	br	x17

0000000000406d08 <sd_event_get_state@plt>:
  406d08:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406d0c:	ldr	x17, [x16, #1664]
  406d10:	add	x16, x16, #0x680
  406d14:	br	x17

0000000000406d18 <sd_event_run@plt>:
  406d18:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406d1c:	ldr	x17, [x16, #1672]
  406d20:	add	x16, x16, #0x688
  406d24:	br	x17

0000000000406d28 <sd_event_source_unref@plt>:
  406d28:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406d2c:	ldr	x17, [x16, #1680]
  406d30:	add	x16, x16, #0x690
  406d34:	br	x17

0000000000406d38 <safe_close@plt>:
  406d38:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406d3c:	ldr	x17, [x16, #1688]
  406d40:	add	x16, x16, #0x698
  406d44:	br	x17

0000000000406d48 <sd_device_monitor_unref@plt>:
  406d48:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406d4c:	ldr	x17, [x16, #1696]
  406d50:	add	x16, x16, #0x6a0
  406d54:	br	x17

0000000000406d58 <unlink_or_warn@plt>:
  406d58:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406d5c:	ldr	x17, [x16, #1704]
  406d60:	add	x16, x16, #0x6a8
  406d64:	br	x17

0000000000406d68 <bus_verify_polkit_async_registry_free@plt>:
  406d68:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406d6c:	ldr	x17, [x16, #1712]
  406d70:	add	x16, x16, #0x6b0
  406d74:	br	x17

0000000000406d78 <sd_bus_flush_close_unref@plt>:
  406d78:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406d7c:	ldr	x17, [x16, #1720]
  406d80:	add	x16, x16, #0x6b8
  406d84:	br	x17

0000000000406d88 <sd_event_unref@plt>:
  406d88:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406d8c:	ldr	x17, [x16, #1728]
  406d90:	add	x16, x16, #0x6c0
  406d94:	br	x17

0000000000406d98 <strv_free@plt>:
  406d98:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406d9c:	ldr	x17, [x16, #1736]
  406da0:	add	x16, x16, #0x6c8
  406da4:	br	x17

0000000000406da8 <free@plt>:
  406da8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406dac:	ldr	x17, [x16, #1744]
  406db0:	add	x16, x16, #0x6d0
  406db4:	br	x17

0000000000406db8 <internal_hashmap_first_key_and_value@plt>:
  406db8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406dbc:	ldr	x17, [x16, #1752]
  406dc0:	add	x16, x16, #0x6d8
  406dc4:	br	x17

0000000000406dc8 <internal_hashmap_free@plt>:
  406dc8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406dcc:	ldr	x17, [x16, #1760]
  406dd0:	add	x16, x16, #0x6e0
  406dd4:	br	x17

0000000000406dd8 <malloc@plt>:
  406dd8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406ddc:	ldr	x17, [x16, #1768]
  406de0:	add	x16, x16, #0x6e8
  406de4:	br	x17

0000000000406de8 <access@plt>:
  406de8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406dec:	ldr	x17, [x16, #1776]
  406df0:	add	x16, x16, #0x6f0
  406df4:	br	x17

0000000000406df8 <open64@plt>:
  406df8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406dfc:	ldr	x17, [x16, #1784]
  406e00:	add	x16, x16, #0x6f8
  406e04:	br	x17

0000000000406e08 <__errno_location@plt>:
  406e08:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406e0c:	ldr	x17, [x16, #1792]
  406e10:	add	x16, x16, #0x700
  406e14:	br	x17

0000000000406e18 <sd_event_add_io@plt>:
  406e18:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406e1c:	ldr	x17, [x16, #1800]
  406e20:	add	x16, x16, #0x708
  406e24:	br	x17

0000000000406e28 <__libc_current_sigrtmin@plt>:
  406e28:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406e2c:	ldr	x17, [x16, #1808]
  406e30:	add	x16, x16, #0x710
  406e34:	br	x17

0000000000406e38 <__libc_current_sigrtmax@plt>:
  406e38:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406e3c:	ldr	x17, [x16, #1816]
  406e40:	add	x16, x16, #0x718
  406e44:	br	x17

0000000000406e48 <ignore_signals@plt>:
  406e48:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406e4c:	ldr	x17, [x16, #1824]
  406e50:	add	x16, x16, #0x720
  406e54:	br	x17

0000000000406e58 <sd_device_monitor_new@plt>:
  406e58:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406e5c:	ldr	x17, [x16, #1832]
  406e60:	add	x16, x16, #0x728
  406e64:	br	x17

0000000000406e68 <sd_device_monitor_filter_add_match_tag@plt>:
  406e68:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406e6c:	ldr	x17, [x16, #1840]
  406e70:	add	x16, x16, #0x730
  406e74:	br	x17

0000000000406e78 <sd_device_monitor_attach_event@plt>:
  406e78:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406e7c:	ldr	x17, [x16, #1848]
  406e80:	add	x16, x16, #0x738
  406e84:	br	x17

0000000000406e88 <sd_device_monitor_start@plt>:
  406e88:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406e8c:	ldr	x17, [x16, #1856]
  406e90:	add	x16, x16, #0x740
  406e94:	br	x17

0000000000406e98 <sd_device_monitor_get_event_source@plt>:
  406e98:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406e9c:	ldr	x17, [x16, #1864]
  406ea0:	add	x16, x16, #0x748
  406ea4:	br	x17

0000000000406ea8 <sd_event_source_set_description@plt>:
  406ea8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406eac:	ldr	x17, [x16, #1872]
  406eb0:	add	x16, x16, #0x750
  406eb4:	br	x17

0000000000406eb8 <sd_device_monitor_filter_add_match_subsystem_devtype@plt>:
  406eb8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406ebc:	ldr	x17, [x16, #1880]
  406ec0:	add	x16, x16, #0x758
  406ec4:	br	x17

0000000000406ec8 <sd_bus_default_system@plt>:
  406ec8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406ecc:	ldr	x17, [x16, #1888]
  406ed0:	add	x16, x16, #0x760
  406ed4:	br	x17

0000000000406ed8 <sd_bus_add_object_vtable@plt>:
  406ed8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406edc:	ldr	x17, [x16, #1896]
  406ee0:	add	x16, x16, #0x768
  406ee4:	br	x17

0000000000406ee8 <sd_bus_add_fallback_vtable@plt>:
  406ee8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406eec:	ldr	x17, [x16, #1904]
  406ef0:	add	x16, x16, #0x770
  406ef4:	br	x17

0000000000406ef8 <sd_bus_add_node_enumerator@plt>:
  406ef8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406efc:	ldr	x17, [x16, #1912]
  406f00:	add	x16, x16, #0x778
  406f04:	br	x17

0000000000406f08 <sd_bus_match_signal_async@plt>:
  406f08:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406f0c:	ldr	x17, [x16, #1920]
  406f10:	add	x16, x16, #0x780
  406f14:	br	x17

0000000000406f18 <sd_bus_call_method_async@plt>:
  406f18:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406f1c:	ldr	x17, [x16, #1928]
  406f20:	add	x16, x16, #0x788
  406f24:	br	x17

0000000000406f28 <sd_bus_request_name_async@plt>:
  406f28:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406f2c:	ldr	x17, [x16, #1936]
  406f30:	add	x16, x16, #0x790
  406f34:	br	x17

0000000000406f38 <sd_bus_attach_event@plt>:
  406f38:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406f3c:	ldr	x17, [x16, #1944]
  406f40:	add	x16, x16, #0x798
  406f44:	br	x17

0000000000406f48 <sd_device_enumerator_new@plt>:
  406f48:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406f4c:	ldr	x17, [x16, #1952]
  406f50:	add	x16, x16, #0x7a0
  406f54:	br	x17

0000000000406f58 <sd_device_enumerator_add_match_tag@plt>:
  406f58:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406f5c:	ldr	x17, [x16, #1960]
  406f60:	add	x16, x16, #0x7a8
  406f64:	br	x17

0000000000406f68 <sd_device_enumerator_get_device_first@plt>:
  406f68:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406f6c:	ldr	x17, [x16, #1968]
  406f70:	add	x16, x16, #0x7b0
  406f74:	br	x17

0000000000406f78 <sd_device_enumerator_get_device_next@plt>:
  406f78:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406f7c:	ldr	x17, [x16, #1976]
  406f80:	add	x16, x16, #0x7b8
  406f84:	br	x17

0000000000406f88 <opendir@plt>:
  406f88:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406f8c:	ldr	x17, [x16, #1984]
  406f90:	add	x16, x16, #0x7c0
  406f94:	br	x17

0000000000406f98 <readdir64@plt>:
  406f98:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406f9c:	ldr	x17, [x16, #1992]
  406fa0:	add	x16, x16, #0x7c8
  406fa4:	br	x17

0000000000406fa8 <hidden_or_backup_file@plt>:
  406fa8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406fac:	ldr	x17, [x16, #2000]
  406fb0:	add	x16, x16, #0x7d0
  406fb4:	br	x17

0000000000406fb8 <dirent_is_file@plt>:
  406fb8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406fbc:	ldr	x17, [x16, #2008]
  406fc0:	add	x16, x16, #0x7d8
  406fc4:	br	x17

0000000000406fc8 <dirfd@plt>:
  406fc8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406fcc:	ldr	x17, [x16, #2016]
  406fd0:	add	x16, x16, #0x7e0
  406fd4:	br	x17

0000000000406fd8 <unlinkat@plt>:
  406fd8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406fdc:	ldr	x17, [x16, #2024]
  406fe0:	add	x16, x16, #0x7e8
  406fe4:	br	x17

0000000000406fe8 <sd_device_enumerator_add_match_subsystem@plt>:
  406fe8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406fec:	ldr	x17, [x16, #2032]
  406ff0:	add	x16, x16, #0x7f0
  406ff4:	br	x17

0000000000406ff8 <asprintf@plt>:
  406ff8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  406ffc:	ldr	x17, [x16, #2040]
  407000:	add	x16, x16, #0x7f8
  407004:	br	x17

0000000000407008 <log_oom_internal@plt>:
  407008:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40700c:	ldr	x17, [x16, #2048]
  407010:	add	x16, x16, #0x800
  407014:	br	x17

0000000000407018 <internal_hashmap_iterate@plt>:
  407018:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40701c:	ldr	x17, [x16, #2056]
  407020:	add	x16, x16, #0x808
  407024:	br	x17

0000000000407028 <sd_event_add_time@plt>:
  407028:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40702c:	ldr	x17, [x16, #2064]
  407030:	add	x16, x16, #0x810
  407034:	br	x17

0000000000407038 <sd_event_source_set_priority@plt>:
  407038:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40703c:	ldr	x17, [x16, #2072]
  407040:	add	x16, x16, #0x818
  407044:	br	x17

0000000000407048 <sd_event_source_set_time@plt>:
  407048:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40704c:	ldr	x17, [x16, #2080]
  407050:	add	x16, x16, #0x820
  407054:	br	x17

0000000000407058 <sd_event_source_set_enabled@plt>:
  407058:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40705c:	ldr	x17, [x16, #2088]
  407060:	add	x16, x16, #0x828
  407064:	br	x17

0000000000407068 <open_terminal@plt>:
  407068:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40706c:	ldr	x17, [x16, #2096]
  407070:	add	x16, x16, #0x830
  407074:	br	x17

0000000000407078 <vt_release@plt>:
  407078:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40707c:	ldr	x17, [x16, #2104]
  407080:	add	x16, x16, #0x838
  407084:	br	x17

0000000000407088 <sd_device_get_sysname@plt>:
  407088:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40708c:	ldr	x17, [x16, #2112]
  407090:	add	x16, x16, #0x840
  407094:	br	x17

0000000000407098 <device_for_action@plt>:
  407098:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40709c:	ldr	x17, [x16, #2120]
  4070a0:	add	x16, x16, #0x848
  4070a4:	br	x17

00000000004070a8 <strlen@plt>:
  4070a8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4070ac:	ldr	x17, [x16, #2128]
  4070b0:	add	x16, x16, #0x850
  4070b4:	br	x17

00000000004070b8 <strncmp@plt>:
  4070b8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4070bc:	ldr	x17, [x16, #2136]
  4070c0:	add	x16, x16, #0x858
  4070c4:	br	x17

00000000004070c8 <sd_device_enumerator_unref@plt>:
  4070c8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4070cc:	ldr	x17, [x16, #2144]
  4070d0:	add	x16, x16, #0x860
  4070d4:	br	x17

00000000004070d8 <closedir@plt>:
  4070d8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4070dc:	ldr	x17, [x16, #2152]
  4070e0:	add	x16, x16, #0x868
  4070e4:	br	x17

00000000004070e8 <internal_hashmap_get@plt>:
  4070e8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4070ec:	ldr	x17, [x16, #2160]
  4070f0:	add	x16, x16, #0x870
  4070f4:	br	x17

00000000004070f8 <dirent_ensure_type@plt>:
  4070f8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4070fc:	ldr	x17, [x16, #2168]
  407100:	add	x16, x16, #0x878
  407104:	br	x17

0000000000407108 <sd_listen_fds_with_names@plt>:
  407108:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40710c:	ldr	x17, [x16, #2176]
  407110:	add	x16, x16, #0x880
  407114:	br	x17

0000000000407118 <sd_notifyf@plt>:
  407118:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40711c:	ldr	x17, [x16, #2184]
  407120:	add	x16, x16, #0x888
  407124:	br	x17

0000000000407128 <gnu_dev_major@plt>:
  407128:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40712c:	ldr	x17, [x16, #2192]
  407130:	add	x16, x16, #0x890
  407134:	br	x17

0000000000407138 <gnu_dev_minor@plt>:
  407138:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40713c:	ldr	x17, [x16, #2200]
  407140:	add	x16, x16, #0x898
  407144:	br	x17

0000000000407148 <strv_length@plt>:
  407148:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40714c:	ldr	x17, [x16, #2208]
  407150:	add	x16, x16, #0x8a0
  407154:	br	x17

0000000000407158 <strcmp@plt>:
  407158:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40715c:	ldr	x17, [x16, #2216]
  407160:	add	x16, x16, #0x8a8
  407164:	br	x17

0000000000407168 <strdup@plt>:
  407168:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40716c:	ldr	x17, [x16, #2224]
  407170:	add	x16, x16, #0x8b0
  407174:	br	x17

0000000000407178 <gnu_dev_makedev@plt>:
  407178:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40717c:	ldr	x17, [x16, #2232]
  407180:	add	x16, x16, #0x8b8
  407184:	br	x17

0000000000407188 <strv_split_full@plt>:
  407188:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40718c:	ldr	x17, [x16, #2240]
  407190:	add	x16, x16, #0x8c0
  407194:	br	x17

0000000000407198 <safe_atou_full@plt>:
  407198:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40719c:	ldr	x17, [x16, #2248]
  4071a0:	add	x16, x16, #0x8c8
  4071a4:	br	x17

00000000004071a8 <can_sleep@plt>:
  4071a8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4071ac:	ldr	x17, [x16, #2256]
  4071b0:	add	x16, x16, #0x8d0
  4071b4:	br	x17

00000000004071b8 <get_process_comm@plt>:
  4071b8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4071bc:	ldr	x17, [x16, #2264]
  4071c0:	add	x16, x16, #0x8d8
  4071c4:	br	x17

00000000004071c8 <uid_to_name@plt>:
  4071c8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4071cc:	ldr	x17, [x16, #2272]
  4071d0:	add	x16, x16, #0x8e0
  4071d4:	br	x17

00000000004071d8 <bus_error_message@plt>:
  4071d8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4071dc:	ldr	x17, [x16, #2280]
  4071e0:	add	x16, x16, #0x8e8
  4071e4:	br	x17

00000000004071e8 <sd_bus_error_free@plt>:
  4071e8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4071ec:	ldr	x17, [x16, #2288]
  4071f0:	add	x16, x16, #0x8f0
  4071f4:	br	x17

00000000004071f8 <string_table_lookup@plt>:
  4071f8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4071fc:	ldr	x17, [x16, #2296]
  407200:	add	x16, x16, #0x8f8
  407204:	br	x17

0000000000407208 <log_syntax_internal@plt>:
  407208:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40720c:	ldr	x17, [x16, #2304]
  407210:	add	x16, x16, #0x900
  407214:	br	x17

0000000000407218 <calloc@plt>:
  407218:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40721c:	ldr	x17, [x16, #2312]
  407220:	add	x16, x16, #0x908
  407224:	br	x17

0000000000407228 <hashmap_put@plt>:
  407228:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40722c:	ldr	x17, [x16, #2320]
  407230:	add	x16, x16, #0x910
  407234:	br	x17

0000000000407238 <close@plt>:
  407238:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40723c:	ldr	x17, [x16, #2328]
  407240:	add	x16, x16, #0x918
  407244:	br	x17

0000000000407248 <internal_hashmap_remove@plt>:
  407248:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40724c:	ldr	x17, [x16, #2336]
  407250:	add	x16, x16, #0x920
  407254:	br	x17

0000000000407258 <stpcpy@plt>:
  407258:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40725c:	ldr	x17, [x16, #2344]
  407260:	add	x16, x16, #0x928
  407264:	br	x17

0000000000407268 <ioctl@plt>:
  407268:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40726c:	ldr	x17, [x16, #2352]
  407270:	add	x16, x16, #0x930
  407274:	br	x17

0000000000407278 <read@plt>:
  407278:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40727c:	ldr	x17, [x16, #2360]
  407280:	add	x16, x16, #0x938
  407284:	br	x17

0000000000407288 <log_struct_internal@plt>:
  407288:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40728c:	ldr	x17, [x16, #2368]
  407290:	add	x16, x16, #0x940
  407294:	br	x17

0000000000407298 <sd_event_add_post@plt>:
  407298:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40729c:	ldr	x17, [x16, #2376]
  4072a0:	add	x16, x16, #0x948
  4072a4:	br	x17

00000000004072a8 <physical_memory_scale@plt>:
  4072a8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4072ac:	ldr	x17, [x16, #2384]
  4072b0:	add	x16, x16, #0x950
  4072b4:	br	x17

00000000004072b8 <config_parse_many_nulstr@plt>:
  4072b8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4072bc:	ldr	x17, [x16, #2392]
  4072c0:	add	x16, x16, #0x958
  4072c4:	br	x17

00000000004072c8 <get_user_creds@plt>:
  4072c8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4072cc:	ldr	x17, [x16, #2400]
  4072d0:	add	x16, x16, #0x960
  4072d4:	br	x17

00000000004072d8 <getpwuid@plt>:
  4072d8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4072dc:	ldr	x17, [x16, #2408]
  4072e0:	add	x16, x16, #0x968
  4072e4:	br	x17

00000000004072e8 <sd_device_get_syspath@plt>:
  4072e8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4072ec:	ldr	x17, [x16, #2416]
  4072f0:	add	x16, x16, #0x970
  4072f4:	br	x17

00000000004072f8 <sd_device_get_property_value@plt>:
  4072f8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4072fc:	ldr	x17, [x16, #2424]
  407300:	add	x16, x16, #0x978
  407304:	br	x17

0000000000407308 <log_object_internal@plt>:
  407308:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40730c:	ldr	x17, [x16, #2432]
  407310:	add	x16, x16, #0x980
  407314:	br	x17

0000000000407318 <sd_device_has_tag@plt>:
  407318:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40731c:	ldr	x17, [x16, #2440]
  407320:	add	x16, x16, #0x988
  407324:	br	x17

0000000000407328 <cg_pid_get_unit@plt>:
  407328:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40732c:	ldr	x17, [x16, #2448]
  407330:	add	x16, x16, #0x990
  407334:	br	x17

0000000000407338 <cg_pid_get_slice@plt>:
  407338:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40733c:	ldr	x17, [x16, #2456]
  407340:	add	x16, x16, #0x998
  407344:	br	x17

0000000000407348 <strv_find@plt>:
  407348:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40734c:	ldr	x17, [x16, #2464]
  407350:	add	x16, x16, #0x9a0
  407354:	br	x17

0000000000407358 <snprintf@plt>:
  407358:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40735c:	ldr	x17, [x16, #2472]
  407360:	add	x16, x16, #0x9a8
  407364:	br	x17

0000000000407368 <sd_bus_call_method@plt>:
  407368:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40736c:	ldr	x17, [x16, #2480]
  407370:	add	x16, x16, #0x9b0
  407374:	br	x17

0000000000407378 <sd_device_enumerator_allow_uninitialized@plt>:
  407378:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40737c:	ldr	x17, [x16, #2488]
  407380:	add	x16, x16, #0x9b8
  407384:	br	x17

0000000000407388 <sd_device_get_parent@plt>:
  407388:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40738c:	ldr	x17, [x16, #2496]
  407390:	add	x16, x16, #0x9c0
  407394:	br	x17

0000000000407398 <sd_device_get_subsystem@plt>:
  407398:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40739c:	ldr	x17, [x16, #2504]
  4073a0:	add	x16, x16, #0x9c8
  4073a4:	br	x17

00000000004073a8 <strchr@plt>:
  4073a8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4073ac:	ldr	x17, [x16, #2512]
  4073b0:	add	x16, x16, #0x9d0
  4073b4:	br	x17

00000000004073b8 <sd_device_get_sysattr_value@plt>:
  4073b8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4073bc:	ldr	x17, [x16, #2520]
  4073c0:	add	x16, x16, #0x9d8
  4073c4:	br	x17

00000000004073c8 <on_ac_power@plt>:
  4073c8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4073cc:	ldr	x17, [x16, #2528]
  4073d0:	add	x16, x16, #0x9e0
  4073d4:	br	x17

00000000004073d8 <utmpxname@plt>:
  4073d8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4073dc:	ldr	x17, [x16, #2536]
  4073e0:	add	x16, x16, #0x9e8
  4073e4:	br	x17

00000000004073e8 <setutxent@plt>:
  4073e8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4073ec:	ldr	x17, [x16, #2544]
  4073f0:	add	x16, x16, #0x9f0
  4073f4:	br	x17

00000000004073f8 <getutxent@plt>:
  4073f8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4073fc:	ldr	x17, [x16, #2552]
  407400:	add	x16, x16, #0x9f8
  407404:	br	x17

0000000000407408 <strndup@plt>:
  407408:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40740c:	ldr	x17, [x16, #2560]
  407410:	add	x16, x16, #0xa00
  407414:	br	x17

0000000000407418 <path_startswith@plt>:
  407418:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40741c:	ldr	x17, [x16, #2568]
  407420:	add	x16, x16, #0xa08
  407424:	br	x17

0000000000407428 <free_and_strdup@plt>:
  407428:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40742c:	ldr	x17, [x16, #2576]
  407430:	add	x16, x16, #0xa10
  407434:	br	x17

0000000000407438 <endutxent@plt>:
  407438:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40743c:	ldr	x17, [x16, #2584]
  407440:	add	x16, x16, #0xa18
  407444:	br	x17

0000000000407448 <strcmp_ptr@plt>:
  407448:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40744c:	ldr	x17, [x16, #2592]
  407450:	add	x16, x16, #0xa20
  407454:	br	x17

0000000000407458 <sd_event_add_inotify@plt>:
  407458:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40745c:	ldr	x17, [x16, #2600]
  407460:	add	x16, x16, #0xa28
  407464:	br	x17

0000000000407468 <sd_bus_error_setf@plt>:
  407468:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40746c:	ldr	x17, [x16, #2608]
  407470:	add	x16, x16, #0xa30
  407474:	br	x17

0000000000407478 <sd_bus_query_sender_creds@plt>:
  407478:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40747c:	ldr	x17, [x16, #2616]
  407480:	add	x16, x16, #0xa38
  407484:	br	x17

0000000000407488 <sd_bus_creds_get_session@plt>:
  407488:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40748c:	ldr	x17, [x16, #2624]
  407490:	add	x16, x16, #0xa40
  407494:	br	x17

0000000000407498 <sd_bus_creds_get_owner_uid@plt>:
  407498:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40749c:	ldr	x17, [x16, #2632]
  4074a0:	add	x16, x16, #0xa48
  4074a4:	br	x17

00000000004074a8 <uid_is_valid@plt>:
  4074a8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4074ac:	ldr	x17, [x16, #2640]
  4074b0:	add	x16, x16, #0xa50
  4074b4:	br	x17

00000000004074b8 <sd_event_source_get_time@plt>:
  4074b8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4074bc:	ldr	x17, [x16, #2648]
  4074c0:	add	x16, x16, #0xa58
  4074c4:	br	x17

00000000004074c8 <sd_bus_message_read@plt>:
  4074c8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4074cc:	ldr	x17, [x16, #2656]
  4074d0:	add	x16, x16, #0xa60
  4074d4:	br	x17

00000000004074d8 <unit_load_state@plt>:
  4074d8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4074dc:	ldr	x17, [x16, #2664]
  4074e0:	add	x16, x16, #0xa68
  4074e4:	br	x17

00000000004074e8 <sd_bus_emit_signal@plt>:
  4074e8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4074ec:	ldr	x17, [x16, #2672]
  4074f0:	add	x16, x16, #0xa70
  4074f4:	br	x17

00000000004074f8 <read_reboot_parameter@plt>:
  4074f8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4074fc:	ldr	x17, [x16, #2680]
  407500:	add	x16, x16, #0xa78
  407504:	br	x17

0000000000407508 <sd_bus_message_append@plt>:
  407508:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40750c:	ldr	x17, [x16, #2688]
  407510:	add	x16, x16, #0xa80
  407514:	br	x17

0000000000407518 <getenv_bool@plt>:
  407518:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40751c:	ldr	x17, [x16, #2696]
  407520:	add	x16, x16, #0xa88
  407524:	br	x17

0000000000407528 <efi_get_reboot_to_firmware@plt>:
  407528:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40752c:	ldr	x17, [x16, #2704]
  407530:	add	x16, x16, #0xa90
  407534:	br	x17

0000000000407538 <efi_get_variable_string@plt>:
  407538:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40753c:	ldr	x17, [x16, #2712]
  407540:	add	x16, x16, #0xa98
  407544:	br	x17

0000000000407548 <read_one_line_file@plt>:
  407548:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40754c:	ldr	x17, [x16, #2720]
  407550:	add	x16, x16, #0xaa0
  407554:	br	x17

0000000000407558 <efi_loader_entry_name_valid@plt>:
  407558:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40755c:	ldr	x17, [x16, #2728]
  407560:	add	x16, x16, #0xaa8
  407564:	br	x17

0000000000407568 <boot_entries_load_config_auto@plt>:
  407568:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40756c:	ldr	x17, [x16, #2736]
  407570:	add	x16, x16, #0xab0
  407574:	br	x17

0000000000407578 <boot_entries_augment_from_loader@plt>:
  407578:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40757c:	ldr	x17, [x16, #2744]
  407580:	add	x16, x16, #0xab8
  407584:	br	x17

0000000000407588 <sd_bus_message_open_container@plt>:
  407588:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40758c:	ldr	x17, [x16, #2752]
  407590:	add	x16, x16, #0xac0
  407594:	br	x17

0000000000407598 <sd_bus_message_close_container@plt>:
  407598:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40759c:	ldr	x17, [x16, #2760]
  4075a0:	add	x16, x16, #0xac8
  4075a4:	br	x17

00000000004075a8 <boot_config_free@plt>:
  4075a8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4075ac:	ldr	x17, [x16, #2768]
  4075b0:	add	x16, x16, #0xad0
  4075b4:	br	x17

00000000004075b8 <sd_bus_reply_method_return@plt>:
  4075b8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4075bc:	ldr	x17, [x16, #2776]
  4075c0:	add	x16, x16, #0xad8
  4075c4:	br	x17

00000000004075c8 <sd_bus_message_new_method_return@plt>:
  4075c8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4075cc:	ldr	x17, [x16, #2784]
  4075d0:	add	x16, x16, #0xae0
  4075d4:	br	x17

00000000004075d8 <sd_bus_send@plt>:
  4075d8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4075dc:	ldr	x17, [x16, #2792]
  4075e0:	add	x16, x16, #0xae8
  4075e4:	br	x17

00000000004075e8 <string_is_safe@plt>:
  4075e8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4075ec:	ldr	x17, [x16, #2800]
  4075f0:	add	x16, x16, #0xaf0
  4075f4:	br	x17

00000000004075f8 <tty_is_vc@plt>:
  4075f8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4075fc:	ldr	x17, [x16, #2808]
  407600:	add	x16, x16, #0xaf8
  407604:	br	x17

0000000000407608 <vtnr_from_tty@plt>:
  407608:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40760c:	ldr	x17, [x16, #2816]
  407610:	add	x16, x16, #0xb00
  407614:	br	x17

0000000000407618 <tty_is_console@plt>:
  407618:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40761c:	ldr	x17, [x16, #2824]
  407620:	add	x16, x16, #0xb08
  407624:	br	x17

0000000000407628 <sd_bus_creds_get_pid@plt>:
  407628:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40762c:	ldr	x17, [x16, #2832]
  407630:	add	x16, x16, #0xb10
  407634:	br	x17

0000000000407638 <audit_session_from_pid@plt>:
  407638:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40763c:	ldr	x17, [x16, #2840]
  407640:	add	x16, x16, #0xb18
  407644:	br	x17

0000000000407648 <sd_bus_message_enter_container@plt>:
  407648:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40764c:	ldr	x17, [x16, #2848]
  407650:	add	x16, x16, #0xb20
  407654:	br	x17

0000000000407658 <sd_bus_message_exit_container@plt>:
  407658:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40765c:	ldr	x17, [x16, #2856]
  407660:	add	x16, x16, #0xb28
  407664:	br	x17

0000000000407668 <sd_bus_message_ref@plt>:
  407668:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40766c:	ldr	x17, [x16, #2864]
  407670:	add	x16, x16, #0xb30
  407674:	br	x17

0000000000407678 <bus_verify_polkit_async@plt>:
  407678:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40767c:	ldr	x17, [x16, #2872]
  407680:	add	x16, x16, #0xb38
  407684:	br	x17

0000000000407688 <sd_bus_message_get_member@plt>:
  407688:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40768c:	ldr	x17, [x16, #2880]
  407690:	add	x16, x16, #0xb40
  407694:	br	x17

0000000000407698 <sd_bus_creds_get_euid@plt>:
  407698:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40769c:	ldr	x17, [x16, #2888]
  4076a0:	add	x16, x16, #0xb48
  4076a4:	br	x17

00000000004076a8 <mkdir_p_label@plt>:
  4076a8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4076ac:	ldr	x17, [x16, #2896]
  4076b0:	add	x16, x16, #0xb50
  4076b4:	br	x17

00000000004076b8 <mkdir_safe_label@plt>:
  4076b8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4076bc:	ldr	x17, [x16, #2904]
  4076c0:	add	x16, x16, #0xb58
  4076c4:	br	x17

00000000004076c8 <cescape@plt>:
  4076c8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4076cc:	ldr	x17, [x16, #2912]
  4076d0:	add	x16, x16, #0xb60
  4076d4:	br	x17

00000000004076d8 <touch@plt>:
  4076d8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4076dc:	ldr	x17, [x16, #2920]
  4076e0:	add	x16, x16, #0xb68
  4076e4:	br	x17

00000000004076e8 <unlink@plt>:
  4076e8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4076ec:	ldr	x17, [x16, #2928]
  4076f0:	add	x16, x16, #0xb70
  4076f4:	br	x17

00000000004076f8 <path_is_normalized@plt>:
  4076f8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4076fc:	ldr	x17, [x16, #2936]
  407700:	add	x16, x16, #0xb78
  407704:	br	x17

0000000000407708 <sd_bus_creds_get_uid@plt>:
  407708:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40770c:	ldr	x17, [x16, #2944]
  407710:	add	x16, x16, #0xb80
  407714:	br	x17

0000000000407718 <sd_bus_creds_get_tty@plt>:
  407718:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40771c:	ldr	x17, [x16, #2952]
  407720:	add	x16, x16, #0xb88
  407724:	br	x17

0000000000407728 <utmp_wall@plt>:
  407728:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40772c:	ldr	x17, [x16, #2960]
  407730:	add	x16, x16, #0xb90
  407734:	br	x17

0000000000407738 <detect_container@plt>:
  407738:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40773c:	ldr	x17, [x16, #2968]
  407740:	add	x16, x16, #0xb98
  407744:	br	x17

0000000000407748 <update_reboot_parameter_and_warn@plt>:
  407748:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40774c:	ldr	x17, [x16, #2976]
  407750:	add	x16, x16, #0xba0
  407754:	br	x17

0000000000407758 <efi_reboot_to_firmware_supported@plt>:
  407758:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40775c:	ldr	x17, [x16, #2984]
  407760:	add	x16, x16, #0xba8
  407764:	br	x17

0000000000407768 <efi_set_reboot_to_firmware@plt>:
  407768:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40776c:	ldr	x17, [x16, #2992]
  407770:	add	x16, x16, #0xbb0
  407774:	br	x17

0000000000407778 <efi_loader_get_features@plt>:
  407778:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40777c:	ldr	x17, [x16, #3000]
  407780:	add	x16, x16, #0xbb8
  407784:	br	x17

0000000000407788 <efi_set_variable@plt>:
  407788:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40778c:	ldr	x17, [x16, #3008]
  407790:	add	x16, x16, #0xbc0
  407794:	br	x17

0000000000407798 <efi_set_variable_string@plt>:
  407798:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40779c:	ldr	x17, [x16, #3016]
  4077a0:	add	x16, x16, #0xbc8
  4077a4:	br	x17

00000000004077a8 <sd_bus_message_get_path@plt>:
  4077a8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4077ac:	ldr	x17, [x16, #3024]
  4077b0:	add	x16, x16, #0xbd0
  4077b4:	br	x17

00000000004077b8 <unit_name_from_dbus_path@plt>:
  4077b8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4077bc:	ldr	x17, [x16, #3032]
  4077c0:	add	x16, x16, #0xbd8
  4077c4:	br	x17

00000000004077c8 <sd_bus_emit_properties_changed_strv@plt>:
  4077c8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4077cc:	ldr	x17, [x16, #3040]
  4077d0:	add	x16, x16, #0xbe0
  4077d4:	br	x17

00000000004077d8 <sd_bus_message_new_method_call@plt>:
  4077d8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4077dc:	ldr	x17, [x16, #3048]
  4077e0:	add	x16, x16, #0xbe8
  4077e4:	br	x17

00000000004077e8 <empty_or_root@plt>:
  4077e8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4077ec:	ldr	x17, [x16, #3056]
  4077f0:	add	x16, x16, #0xbf0
  4077f4:	br	x17

00000000004077f8 <sd_bus_message_copy@plt>:
  4077f8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4077fc:	ldr	x17, [x16, #3064]
  407800:	add	x16, x16, #0xbf8
  407804:	br	x17

0000000000407808 <sd_bus_call@plt>:
  407808:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40780c:	ldr	x17, [x16, #3072]
  407810:	add	x16, x16, #0xc00
  407814:	br	x17

0000000000407818 <sd_bus_message_unref@plt>:
  407818:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40781c:	ldr	x17, [x16, #3080]
  407820:	add	x16, x16, #0xc08
  407824:	br	x17

0000000000407828 <sd_bus_error_has_name@plt>:
  407828:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40782c:	ldr	x17, [x16, #3088]
  407830:	add	x16, x16, #0xc10
  407834:	br	x17

0000000000407838 <unit_dbus_path_from_name@plt>:
  407838:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40783c:	ldr	x17, [x16, #3096]
  407840:	add	x16, x16, #0xc18
  407844:	br	x17

0000000000407848 <sd_bus_error_move@plt>:
  407848:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40784c:	ldr	x17, [x16, #3104]
  407850:	add	x16, x16, #0xc20
  407854:	br	x17

0000000000407858 <sd_bus_get_property@plt>:
  407858:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40785c:	ldr	x17, [x16, #3112]
  407860:	add	x16, x16, #0xc28
  407864:	br	x17

0000000000407868 <sd_bus_creds_unref@plt>:
  407868:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40786c:	ldr	x17, [x16, #3120]
  407870:	add	x16, x16, #0xc30
  407874:	br	x17

0000000000407878 <safe_atollu@plt>:
  407878:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40787c:	ldr	x17, [x16, #3128]
  407880:	add	x16, x16, #0xc38
  407884:	br	x17

0000000000407888 <internal_hashmap_size@plt>:
  407888:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40788c:	ldr	x17, [x16, #3136]
  407890:	add	x16, x16, #0xc40
  407894:	br	x17

0000000000407898 <internal_hashmap_contains@plt>:
  407898:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40789c:	ldr	x17, [x16, #3144]
  4078a0:	add	x16, x16, #0xc48
  4078a4:	br	x17

00000000004078a8 <sd_device_new_from_syspath@plt>:
  4078a8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4078ac:	ldr	x17, [x16, #3152]
  4078b0:	add	x16, x16, #0xc50
  4078b4:	br	x17

00000000004078b8 <sd_device_unref@plt>:
  4078b8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4078bc:	ldr	x17, [x16, #3160]
  4078c0:	add	x16, x16, #0xc58
  4078c4:	br	x17

00000000004078c8 <write_string_file_atomic_label_ts@plt>:
  4078c8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4078cc:	ldr	x17, [x16, #3168]
  4078d0:	add	x16, x16, #0xc60
  4078d4:	br	x17

00000000004078d8 <sd_device_enumerator_add_match_parent@plt>:
  4078d8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4078dc:	ldr	x17, [x16, #3176]
  4078e0:	add	x16, x16, #0xc68
  4078e4:	br	x17

00000000004078e8 <path_join_internal@plt>:
  4078e8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4078ec:	ldr	x17, [x16, #3184]
  4078f0:	add	x16, x16, #0xc70
  4078f4:	br	x17

00000000004078f8 <write_string_file_ts@plt>:
  4078f8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4078fc:	ldr	x17, [x16, #3192]
  407900:	add	x16, x16, #0xc78
  407904:	br	x17

0000000000407908 <endswith@plt>:
  407908:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40790c:	ldr	x17, [x16, #3200]
  407910:	add	x16, x16, #0xc80
  407914:	br	x17

0000000000407918 <sd_bus_error_set@plt>:
  407918:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40791c:	ldr	x17, [x16, #3208]
  407920:	add	x16, x16, #0xc88
  407924:	br	x17

0000000000407928 <bus_test_polkit@plt>:
  407928:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40792c:	ldr	x17, [x16, #3216]
  407930:	add	x16, x16, #0xc90
  407934:	br	x17

0000000000407938 <log_assert_failed_unreachable_realm@plt>:
  407938:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40793c:	ldr	x17, [x16, #3224]
  407940:	add	x16, x16, #0xc98
  407944:	br	x17

0000000000407948 <create_shutdown_run_nologin_or_warn@plt>:
  407948:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40794c:	ldr	x17, [x16, #3232]
  407950:	add	x16, x16, #0xca0
  407954:	br	x17

0000000000407958 <fopen_temporary@plt>:
  407958:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40795c:	ldr	x17, [x16, #3240]
  407960:	add	x16, x16, #0xca8
  407964:	br	x17

0000000000407968 <fileno@plt>:
  407968:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40796c:	ldr	x17, [x16, #3248]
  407970:	add	x16, x16, #0xcb0
  407974:	br	x17

0000000000407978 <fchmod@plt>:
  407978:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40797c:	ldr	x17, [x16, #3256]
  407980:	add	x16, x16, #0xcb8
  407984:	br	x17

0000000000407988 <fprintf@plt>:
  407988:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40798c:	ldr	x17, [x16, #3264]
  407990:	add	x16, x16, #0xcc0
  407994:	br	x17

0000000000407998 <fflush_and_check@plt>:
  407998:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40799c:	ldr	x17, [x16, #3272]
  4079a0:	add	x16, x16, #0xcc8
  4079a4:	br	x17

00000000004079a8 <rename@plt>:
  4079a8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4079ac:	ldr	x17, [x16, #3280]
  4079b0:	add	x16, x16, #0xcd0
  4079b4:	br	x17

00000000004079b8 <safe_fclose@plt>:
  4079b8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4079bc:	ldr	x17, [x16, #3288]
  4079c0:	add	x16, x16, #0xcd8
  4079c4:	br	x17

00000000004079c8 <bus_property_get_bool@plt>:
  4079c8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4079cc:	ldr	x17, [x16, #3296]
  4079d0:	add	x16, x16, #0xce0
  4079d4:	br	x17

00000000004079d8 <dual_timestamp_get@plt>:
  4079d8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4079dc:	ldr	x17, [x16, #3304]
  4079e0:	add	x16, x16, #0xce8
  4079e4:	br	x17

00000000004079e8 <basename@plt>:
  4079e8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4079ec:	ldr	x17, [x16, #3312]
  4079f0:	add	x16, x16, #0xcf0
  4079f4:	br	x17

00000000004079f8 <parse_env_file_sentinel@plt>:
  4079f8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4079fc:	ldr	x17, [x16, #3320]
  407a00:	add	x16, x16, #0xcf8
  407a04:	br	x17

0000000000407a08 <parse_uid@plt>:
  407a08:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407a0c:	ldr	x17, [x16, #3328]
  407a10:	add	x16, x16, #0xd00
  407a14:	br	x17

0000000000407a18 <parse_pid@plt>:
  407a18:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407a1c:	ldr	x17, [x16, #3336]
  407a20:	add	x16, x16, #0xd08
  407a24:	br	x17

0000000000407a28 <cunescape@plt>:
  407a28:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407a2c:	ldr	x17, [x16, #3344]
  407a30:	add	x16, x16, #0xd10
  407a34:	br	x17

0000000000407a38 <split@plt>:
  407a38:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407a3c:	ldr	x17, [x16, #3352]
  407a40:	add	x16, x16, #0xd18
  407a44:	br	x17

0000000000407a48 <strjoin_real@plt>:
  407a48:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407a4c:	ldr	x17, [x16, #3360]
  407a50:	add	x16, x16, #0xd20
  407a54:	br	x17

0000000000407a58 <mkfifo@plt>:
  407a58:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407a5c:	ldr	x17, [x16, #3368]
  407a60:	add	x16, x16, #0xd28
  407a64:	br	x17

0000000000407a68 <pipe_eof@plt>:
  407a68:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407a6c:	ldr	x17, [x16, #3376]
  407a70:	add	x16, x16, #0xd30
  407a74:	br	x17

0000000000407a78 <sd_bus_get_current_message@plt>:
  407a78:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407a7c:	ldr	x17, [x16, #3384]
  407a80:	add	x16, x16, #0xd38
  407a84:	br	x17

0000000000407a88 <bus_label_unescape_n@plt>:
  407a88:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407a8c:	ldr	x17, [x16, #3392]
  407a90:	add	x16, x16, #0xd40
  407a94:	br	x17

0000000000407a98 <bus_label_escape@plt>:
  407a98:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407a9c:	ldr	x17, [x16, #3400]
  407aa0:	add	x16, x16, #0xd48
  407aa4:	br	x17

0000000000407aa8 <strv_consume@plt>:
  407aa8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407aac:	ldr	x17, [x16, #3408]
  407ab0:	add	x16, x16, #0xd50
  407ab4:	br	x17

0000000000407ab8 <strv_extend@plt>:
  407ab8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407abc:	ldr	x17, [x16, #3416]
  407ac0:	add	x16, x16, #0xd58
  407ac4:	br	x17

0000000000407ac8 <fputs@plt>:
  407ac8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407acc:	ldr	x17, [x16, #3424]
  407ad0:	add	x16, x16, #0xd60
  407ad4:	br	x17

0000000000407ad8 <chvt@plt>:
  407ad8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407adc:	ldr	x17, [x16, #3432]
  407ae0:	add	x16, x16, #0xd68
  407ae4:	br	x17

0000000000407ae8 <lseek64@plt>:
  407ae8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407aec:	ldr	x17, [x16, #3440]
  407af0:	add	x16, x16, #0xd70
  407af4:	br	x17

0000000000407af8 <truncate_nl@plt>:
  407af8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407afc:	ldr	x17, [x16, #3448]
  407b00:	add	x16, x16, #0xd78
  407b04:	br	x17

0000000000407b08 <strerror@plt>:
  407b08:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407b0c:	ldr	x17, [x16, #3456]
  407b10:	add	x16, x16, #0xd80
  407b14:	br	x17

0000000000407b18 <greedy_realloc0@plt>:
  407b18:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407b1c:	ldr	x17, [x16, #3464]
  407b20:	add	x16, x16, #0xd88
  407b24:	br	x17

0000000000407b28 <strstr@plt>:
  407b28:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407b2c:	ldr	x17, [x16, #3472]
  407b30:	add	x16, x16, #0xd90
  407b34:	br	x17

0000000000407b38 <sd_bus_message_get_sender@plt>:
  407b38:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407b3c:	ldr	x17, [x16, #3480]
  407b40:	add	x16, x16, #0xd98
  407b44:	br	x17

0000000000407b48 <filename_is_valid@plt>:
  407b48:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407b4c:	ldr	x17, [x16, #3488]
  407b50:	add	x16, x16, #0xda0
  407b54:	br	x17

0000000000407b58 <sd_device_new_from_subsystem_sysname@plt>:
  407b58:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407b5c:	ldr	x17, [x16, #3496]
  407b60:	add	x16, x16, #0xda8
  407b64:	br	x17

0000000000407b68 <sd_bus_error_set_errnof@plt>:
  407b68:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407b6c:	ldr	x17, [x16, #3504]
  407b70:	add	x16, x16, #0xdb0
  407b74:	br	x17

0000000000407b78 <sd_bus_error_is_set@plt>:
  407b78:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407b7c:	ldr	x17, [x16, #3512]
  407b80:	add	x16, x16, #0xdb8
  407b84:	br	x17

0000000000407b88 <sd_bus_reply_method_error@plt>:
  407b88:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407b8c:	ldr	x17, [x16, #3520]
  407b90:	add	x16, x16, #0xdc0
  407b94:	br	x17

0000000000407b98 <sd_device_new_from_devnum@plt>:
  407b98:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407b9c:	ldr	x17, [x16, #3528]
  407ba0:	add	x16, x16, #0xdc8
  407ba4:	br	x17

0000000000407ba8 <sd_device_get_devname@plt>:
  407ba8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407bac:	ldr	x17, [x16, #3536]
  407bb0:	add	x16, x16, #0xdd0
  407bb4:	br	x17

0000000000407bb8 <sd_device_get_parent_with_subsystem_devtype@plt>:
  407bb8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407bbc:	ldr	x17, [x16, #3544]
  407bc0:	add	x16, x16, #0xdd8
  407bc4:	br	x17

0000000000407bc8 <close_nointr@plt>:
  407bc8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407bcc:	ldr	x17, [x16, #3552]
  407bd0:	add	x16, x16, #0xde0
  407bd4:	br	x17

0000000000407bd8 <sd_bus_message_new_signal@plt>:
  407bd8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407bdc:	ldr	x17, [x16, #3560]
  407be0:	add	x16, x16, #0xde8
  407be4:	br	x17

0000000000407be8 <sd_bus_message_set_destination@plt>:
  407be8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407bec:	ldr	x17, [x16, #3568]
  407bf0:	add	x16, x16, #0xdf0
  407bf4:	br	x17

0000000000407bf8 <strcspn@plt>:
  407bf8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407bfc:	ldr	x17, [x16, #3576]
  407c00:	add	x16, x16, #0xdf8
  407c04:	br	x17

0000000000407c08 <sd_pid_notify_with_fds@plt>:
  407c08:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407c0c:	ldr	x17, [x16, #3584]
  407c10:	add	x16, x16, #0xe00
  407c14:	br	x17

0000000000407c18 <session_id_valid@plt>:
  407c18:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407c1c:	ldr	x17, [x16, #3592]
  407c20:	add	x16, x16, #0xe08
  407c24:	br	x17

0000000000407c28 <sd_bus_track_unref@plt>:
  407c28:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407c2c:	ldr	x17, [x16, #3600]
  407c30:	add	x16, x16, #0xe10
  407c34:	br	x17

0000000000407c38 <internal_hashmap_remove_value@plt>:
  407c38:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407c3c:	ldr	x17, [x16, #3608]
  407c40:	add	x16, x16, #0xe18
  407c44:	br	x17

0000000000407c48 <parse_boolean@plt>:
  407c48:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407c4c:	ldr	x17, [x16, #3616]
  407c50:	add	x16, x16, #0xe20
  407c54:	br	x17

0000000000407c58 <deserialize_usec@plt>:
  407c58:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407c5c:	ldr	x17, [x16, #3624]
  407c60:	add	x16, x16, #0xe28
  407c64:	br	x17

0000000000407c68 <bus_name_has_owner@plt>:
  407c68:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407c6c:	ldr	x17, [x16, #3632]
  407c70:	add	x16, x16, #0xe30
  407c74:	br	x17

0000000000407c78 <sd_bus_track_new@plt>:
  407c78:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407c7c:	ldr	x17, [x16, #3640]
  407c80:	add	x16, x16, #0xe38
  407c84:	br	x17

0000000000407c88 <sd_bus_track_add_name@plt>:
  407c88:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407c8c:	ldr	x17, [x16, #3648]
  407c90:	add	x16, x16, #0xe40
  407c94:	br	x17

0000000000407c98 <extract_first_word@plt>:
  407c98:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407c9c:	ldr	x17, [x16, #3656]
  407ca0:	add	x16, x16, #0xe48
  407ca4:	br	x17

0000000000407ca8 <parse_dev@plt>:
  407ca8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407cac:	ldr	x17, [x16, #3664]
  407cb0:	add	x16, x16, #0xe50
  407cb4:	br	x17

0000000000407cb8 <vt_restore@plt>:
  407cb8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407cbc:	ldr	x17, [x16, #3672]
  407cc0:	add	x16, x16, #0xe58
  407cc4:	br	x17

0000000000407cc8 <dual_timestamp_from_realtime@plt>:
  407cc8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407ccc:	ldr	x17, [x16, #3680]
  407cd0:	add	x16, x16, #0xe60
  407cd4:	br	x17

0000000000407cd8 <path_is_absolute@plt>:
  407cd8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407cdc:	ldr	x17, [x16, #3688]
  407ce0:	add	x16, x16, #0xe68
  407ce4:	br	x17

0000000000407ce8 <timespec_load@plt>:
  407ce8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407cec:	ldr	x17, [x16, #3696]
  407cf0:	add	x16, x16, #0xe70
  407cf4:	br	x17

0000000000407cf8 <get_ctty@plt>:
  407cf8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407cfc:	ldr	x17, [x16, #3704]
  407d00:	add	x16, x16, #0xe78
  407d04:	br	x17

0000000000407d08 <fchown@plt>:
  407d08:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407d0c:	ldr	x17, [x16, #3712]
  407d10:	add	x16, x16, #0xe80
  407d14:	br	x17

0000000000407d18 <sprintf@plt>:
  407d18:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407d1c:	ldr	x17, [x16, #3720]
  407d20:	add	x16, x16, #0xe88
  407d24:	br	x17

0000000000407d28 <path_simplify@plt>:
  407d28:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407d2c:	ldr	x17, [x16, #3728]
  407d30:	add	x16, x16, #0xe90
  407d34:	br	x17

0000000000407d38 <slice_build_subslice@plt>:
  407d38:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407d3c:	ldr	x17, [x16, #3736]
  407d40:	add	x16, x16, #0xe98
  407d44:	br	x17

0000000000407d48 <unit_name_build@plt>:
  407d48:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407d4c:	ldr	x17, [x16, #3744]
  407d50:	add	x16, x16, #0xea0
  407d54:	br	x17

0000000000407d58 <fputc@plt>:
  407d58:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407d5c:	ldr	x17, [x16, #3752]
  407d60:	add	x16, x16, #0xea8
  407d64:	br	x17

0000000000407d68 <clean_ipc_by_uid@plt>:
  407d68:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407d6c:	ldr	x17, [x16, #3760]
  407d70:	add	x16, x16, #0xeb0
  407d74:	br	x17

0000000000407d78 <format_timespan@plt>:
  407d78:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407d7c:	ldr	x17, [x16, #3768]
  407d80:	add	x16, x16, #0xeb8
  407d84:	br	x17

0000000000407d88 <parse_permille@plt>:
  407d88:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407d8c:	ldr	x17, [x16, #3776]
  407d90:	add	x16, x16, #0xec0
  407d94:	br	x17

0000000000407d98 <parse_size@plt>:
  407d98:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407d9c:	ldr	x17, [x16, #3784]
  407da0:	add	x16, x16, #0xec8
  407da4:	br	x17

0000000000407da8 <page_size@plt>:
  407da8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407dac:	ldr	x17, [x16, #3792]
  407db0:	add	x16, x16, #0xed0
  407db4:	br	x17

0000000000407db8 <format_timestamp@plt>:
  407db8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407dbc:	ldr	x17, [x16, #3800]
  407dc0:	add	x16, x16, #0xed8
  407dc4:	br	x17

0000000000407dc8 <acl_get_file@plt>:
  407dc8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407dcc:	ldr	x17, [x16, #3808]
  407dd0:	add	x16, x16, #0xee0
  407dd4:	br	x17

0000000000407dd8 <acl_find_uid@plt>:
  407dd8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407ddc:	ldr	x17, [x16, #3816]
  407de0:	add	x16, x16, #0xee8
  407de4:	br	x17

0000000000407de8 <acl_delete_entry@plt>:
  407de8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407dec:	ldr	x17, [x16, #3824]
  407df0:	add	x16, x16, #0xef0
  407df4:	br	x17

0000000000407df8 <acl_create_entry@plt>:
  407df8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407dfc:	ldr	x17, [x16, #3832]
  407e00:	add	x16, x16, #0xef8
  407e04:	br	x17

0000000000407e08 <acl_set_tag_type@plt>:
  407e08:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407e0c:	ldr	x17, [x16, #3840]
  407e10:	add	x16, x16, #0xf00
  407e14:	br	x17

0000000000407e18 <acl_set_qualifier@plt>:
  407e18:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407e1c:	ldr	x17, [x16, #3848]
  407e20:	add	x16, x16, #0xf08
  407e24:	br	x17

0000000000407e28 <acl_get_permset@plt>:
  407e28:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407e2c:	ldr	x17, [x16, #3856]
  407e30:	add	x16, x16, #0xf10
  407e34:	br	x17

0000000000407e38 <acl_get_perm@plt>:
  407e38:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407e3c:	ldr	x17, [x16, #3864]
  407e40:	add	x16, x16, #0xf18
  407e44:	br	x17

0000000000407e48 <acl_add_perm@plt>:
  407e48:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407e4c:	ldr	x17, [x16, #3872]
  407e50:	add	x16, x16, #0xf20
  407e54:	br	x17

0000000000407e58 <acl_calc_mask@plt>:
  407e58:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407e5c:	ldr	x17, [x16, #3880]
  407e60:	add	x16, x16, #0xf28
  407e64:	br	x17

0000000000407e68 <acl_set_file@plt>:
  407e68:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407e6c:	ldr	x17, [x16, #3888]
  407e70:	add	x16, x16, #0xf30
  407e74:	br	x17

0000000000407e78 <acl_free@plt>:
  407e78:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407e7c:	ldr	x17, [x16, #3896]
  407e80:	add	x16, x16, #0xf38
  407e84:	br	x17

0000000000407e88 <acl_get_entry@plt>:
  407e88:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407e8c:	ldr	x17, [x16, #3904]
  407e90:	add	x16, x16, #0xf40
  407e94:	br	x17

0000000000407e98 <acl_get_tag_type@plt>:
  407e98:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407e9c:	ldr	x17, [x16, #3912]
  407ea0:	add	x16, x16, #0xf48
  407ea4:	br	x17

0000000000407ea8 <internal_set_new@plt>:
  407ea8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407eac:	ldr	x17, [x16, #3920]
  407eb0:	add	x16, x16, #0xf50
  407eb4:	br	x17

0000000000407eb8 <set_put_strdup@plt>:
  407eb8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407ebc:	ldr	x17, [x16, #3928]
  407ec0:	add	x16, x16, #0xf58
  407ec4:	br	x17

0000000000407ec8 <set_consume@plt>:
  407ec8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407ecc:	ldr	x17, [x16, #3936]
  407ed0:	add	x16, x16, #0xf60
  407ed4:	br	x17

0000000000407ed8 <set_iterate@plt>:
  407ed8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407edc:	ldr	x17, [x16, #3944]
  407ee0:	add	x16, x16, #0xf68
  407ee4:	br	x17

0000000000407ee8 <config_parse_unsigned@plt>:
  407ee8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407eec:	ldr	x17, [x16, #3952]
  407ef0:	add	x16, x16, #0xf70
  407ef4:	br	x17

0000000000407ef8 <config_parse_uint64@plt>:
  407ef8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407efc:	ldr	x17, [x16, #3960]
  407f00:	add	x16, x16, #0xf78
  407f04:	br	x17

0000000000407f08 <config_parse_sec@plt>:
  407f08:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407f0c:	ldr	x17, [x16, #3968]
  407f10:	add	x16, x16, #0xf80
  407f14:	br	x17

0000000000407f18 <config_parse_bool@plt>:
  407f18:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407f1c:	ldr	x17, [x16, #3976]
  407f20:	add	x16, x16, #0xf88
  407f24:	br	x17

0000000000407f28 <config_parse_strv@plt>:
  407f28:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407f2c:	ldr	x17, [x16, #3984]
  407f30:	add	x16, x16, #0xf90
  407f34:	br	x17

0000000000407f38 <internal_hashmap_ensure_allocated@plt>:
  407f38:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407f3c:	ldr	x17, [x16, #3992]
  407f40:	add	x16, x16, #0xf98
  407f44:	br	x17

0000000000407f48 <sd_device_ref@plt>:
  407f48:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407f4c:	ldr	x17, [x16, #4000]
  407f50:	add	x16, x16, #0xfa0
  407f54:	br	x17

0000000000407f58 <sd_bus_message_get_expect_reply@plt>:
  407f58:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407f5c:	ldr	x17, [x16, #4008]
  407f60:	add	x16, x16, #0xfa8
  407f64:	br	x17

0000000000407f68 <internal_set_ensure_allocated@plt>:
  407f68:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407f6c:	ldr	x17, [x16, #4016]
  407f70:	add	x16, x16, #0xfb0
  407f74:	br	x17

0000000000407f78 <set_put@plt>:
  407f78:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407f7c:	ldr	x17, [x16, #4024]
  407f80:	add	x16, x16, #0xfb8
  407f84:	br	x17

0000000000407f88 <sd_device_set_sysattr_value@plt>:
  407f88:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407f8c:	ldr	x17, [x16, #4032]
  407f90:	add	x16, x16, #0xfc0
  407f94:	br	x17

0000000000407f98 <_exit@plt>:
  407f98:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407f9c:	ldr	x17, [x16, #4040]
  407fa0:	add	x16, x16, #0xfc8
  407fa4:	br	x17

0000000000407fa8 <sd_event_add_child@plt>:
  407fa8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407fac:	ldr	x17, [x16, #4048]
  407fb0:	add	x16, x16, #0xfd0
  407fb4:	br	x17

0000000000407fb8 <safe_fork_full@plt>:
  407fb8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407fbc:	ldr	x17, [x16, #4056]
  407fc0:	add	x16, x16, #0xfd8
  407fc4:	br	x17

0000000000407fc8 <sd_bus_reply_method_errnof@plt>:
  407fc8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407fcc:	ldr	x17, [x16, #4064]
  407fd0:	add	x16, x16, #0xfe0
  407fd4:	br	x17

0000000000407fd8 <string_hash_func@plt>:
  407fd8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407fdc:	ldr	x17, [x16, #4072]
  407fe0:	add	x16, x16, #0xfe8
  407fe4:	br	x17

0000000000407fe8 <__fxstat64@plt>:
  407fe8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407fec:	ldr	x17, [x16, #4080]
  407ff0:	add	x16, x16, #0xff0
  407ff4:	br	x17

0000000000407ff8 <__lxstat64@plt>:
  407ff8:	adrp	x16, 45f000 <logind_gperf_lookup.wordlist+0x388>
  407ffc:	ldr	x17, [x16, #4088]
  408000:	add	x16, x16, #0xff8
  408004:	br	x17

Disassembly of section .text:

0000000000408008 <_start>:
  408008:	mov	x29, #0x0                   	// #0
  40800c:	mov	x30, #0x0                   	// #0
  408010:	mov	x5, x0
  408014:	ldr	x1, [sp]
  408018:	add	x2, sp, #0x8
  40801c:	mov	x6, sp
  408020:	movz	x0, #0x0, lsl #48
  408024:	movk	x0, #0x0, lsl #32
  408028:	movk	x0, #0x40, lsl #16
  40802c:	movk	x0, #0x81d0
  408030:	movz	x3, #0x0, lsl #48
  408034:	movk	x3, #0x0, lsl #32
  408038:	movk	x3, #0x44, lsl #16
  40803c:	movk	x3, #0x328
  408040:	movz	x4, #0x0, lsl #48
  408044:	movk	x4, #0x0, lsl #32
  408048:	movk	x4, #0x44, lsl #16
  40804c:	movk	x4, #0x3a8
  408050:	bl	406b68 <__libc_start_main@plt>
  408054:	bl	406b78 <abort@plt>

0000000000408058 <call_weak_fn>:
  408058:	adrp	x0, 45f000 <logind_gperf_lookup.wordlist+0x388>
  40805c:	ldr	x0, [x0, #1344]
  408060:	cbz	x0, 408068 <call_weak_fn+0x10>
  408064:	b	406b88 <__gmon_start__@plt>
  408068:	ret

000000000040806c <deregister_tm_clones>:
  40806c:	stp	x29, x30, [sp, #-32]!
  408070:	mov	x29, sp
  408074:	adrp	x0, 460000 <__TMC_END__>
  408078:	add	x0, x0, #0x0
  40807c:	str	x0, [sp, #24]
  408080:	ldr	x0, [sp, #24]
  408084:	str	x0, [sp, #24]
  408088:	ldr	x1, [sp, #24]
  40808c:	adrp	x0, 460000 <__TMC_END__>
  408090:	add	x0, x0, #0x0
  408094:	cmp	x1, x0
  408098:	b.eq	4080d4 <deregister_tm_clones+0x68>  // b.none
  40809c:	adrp	x0, 440000 <on_brightness_writer_exit+0x15c>
  4080a0:	add	x0, x0, #0x3e0
  4080a4:	ldr	x0, [x0]
  4080a8:	str	x0, [sp, #16]
  4080ac:	ldr	x0, [sp, #16]
  4080b0:	str	x0, [sp, #16]
  4080b4:	ldr	x0, [sp, #16]
  4080b8:	cmp	x0, #0x0
  4080bc:	b.eq	4080d8 <deregister_tm_clones+0x6c>  // b.none
  4080c0:	ldr	x1, [sp, #16]
  4080c4:	adrp	x0, 460000 <__TMC_END__>
  4080c8:	add	x0, x0, #0x0
  4080cc:	blr	x1
  4080d0:	b	4080d8 <deregister_tm_clones+0x6c>
  4080d4:	nop
  4080d8:	ldp	x29, x30, [sp], #32
  4080dc:	ret

00000000004080e0 <register_tm_clones>:
  4080e0:	stp	x29, x30, [sp, #-48]!
  4080e4:	mov	x29, sp
  4080e8:	adrp	x0, 460000 <__TMC_END__>
  4080ec:	add	x0, x0, #0x0
  4080f0:	str	x0, [sp, #40]
  4080f4:	ldr	x0, [sp, #40]
  4080f8:	str	x0, [sp, #40]
  4080fc:	ldr	x1, [sp, #40]
  408100:	adrp	x0, 460000 <__TMC_END__>
  408104:	add	x0, x0, #0x0
  408108:	sub	x0, x1, x0
  40810c:	asr	x0, x0, #3
  408110:	lsr	x1, x0, #63
  408114:	add	x0, x1, x0
  408118:	asr	x0, x0, #1
  40811c:	str	x0, [sp, #32]
  408120:	ldr	x0, [sp, #32]
  408124:	cmp	x0, #0x0
  408128:	b.eq	408168 <register_tm_clones+0x88>  // b.none
  40812c:	adrp	x0, 440000 <on_brightness_writer_exit+0x15c>
  408130:	add	x0, x0, #0x3e8
  408134:	ldr	x0, [x0]
  408138:	str	x0, [sp, #24]
  40813c:	ldr	x0, [sp, #24]
  408140:	str	x0, [sp, #24]
  408144:	ldr	x0, [sp, #24]
  408148:	cmp	x0, #0x0
  40814c:	b.eq	40816c <register_tm_clones+0x8c>  // b.none
  408150:	ldr	x2, [sp, #24]
  408154:	ldr	x1, [sp, #32]
  408158:	adrp	x0, 460000 <__TMC_END__>
  40815c:	add	x0, x0, #0x0
  408160:	blr	x2
  408164:	b	40816c <register_tm_clones+0x8c>
  408168:	nop
  40816c:	ldp	x29, x30, [sp], #48
  408170:	ret

0000000000408174 <__do_global_dtors_aux>:
  408174:	stp	x29, x30, [sp, #-16]!
  408178:	mov	x29, sp
  40817c:	adrp	x0, 460000 <__TMC_END__>
  408180:	add	x0, x0, #0x90
  408184:	ldrb	w0, [x0]
  408188:	and	x0, x0, #0xff
  40818c:	cmp	x0, #0x0
  408190:	b.ne	4081ac <__do_global_dtors_aux+0x38>  // b.any
  408194:	bl	40806c <deregister_tm_clones>
  408198:	adrp	x0, 460000 <__TMC_END__>
  40819c:	add	x0, x0, #0x90
  4081a0:	mov	w1, #0x1                   	// #1
  4081a4:	strb	w1, [x0]
  4081a8:	b	4081b0 <__do_global_dtors_aux+0x3c>
  4081ac:	nop
  4081b0:	ldp	x29, x30, [sp], #16
  4081b4:	ret

00000000004081b8 <frame_dummy>:
  4081b8:	stp	x29, x30, [sp, #-16]!
  4081bc:	mov	x29, sp
  4081c0:	bl	4080e0 <register_tm_clones>
  4081c4:	nop
  4081c8:	ldp	x29, x30, [sp], #16
  4081cc:	ret

00000000004081d0 <main>:
  4081d0:	sub	sp, sp, #0x30
  4081d4:	stp	x29, x30, [sp, #32]
  4081d8:	add	x29, sp, #0x20
  4081dc:	mov	w8, wzr
  4081e0:	mov	w9, #0x1                   	// #1
  4081e4:	stur	wzr, [x29, #-4]
  4081e8:	stur	w0, [x29, #-8]
  4081ec:	str	x1, [sp, #16]
  4081f0:	ldur	w0, [x29, #-8]
  4081f4:	ldr	x1, [sp, #16]
  4081f8:	str	w8, [sp, #8]
  4081fc:	str	w9, [sp, #4]
  408200:	bl	408248 <save_argc_argv>
  408204:	ldur	w0, [x29, #-8]
  408208:	ldr	x1, [sp, #16]
  40820c:	bl	40827c <run>
  408210:	str	w0, [sp, #12]
  408214:	bl	406b98 <ask_password_agent_close@plt>
  408218:	bl	406ba8 <polkit_agent_close@plt>
  40821c:	bl	406bb8 <pager_close@plt>
  408220:	bl	406bc8 <mac_selinux_finish@plt>
  408224:	bl	4087a4 <static_destruct>
  408228:	ldr	w8, [sp, #12]
  40822c:	cmp	w8, #0x0
  408230:	ldr	w8, [sp, #4]
  408234:	ldr	w9, [sp, #8]
  408238:	csel	w0, w8, w9, lt  // lt = tstop
  40823c:	ldp	x29, x30, [sp, #32]
  408240:	add	sp, sp, #0x30
  408244:	ret

0000000000408248 <save_argc_argv>:
  408248:	sub	sp, sp, #0x10
  40824c:	adrp	x8, 460000 <__TMC_END__>
  408250:	add	x8, x8, #0x98
  408254:	adrp	x9, 460000 <__TMC_END__>
  408258:	add	x9, x9, #0xa0
  40825c:	str	w0, [sp, #12]
  408260:	str	x1, [sp]
  408264:	ldr	w10, [sp, #12]
  408268:	str	w10, [x8]
  40826c:	ldr	x8, [sp]
  408270:	str	x8, [x9]
  408274:	add	sp, sp, #0x10
  408278:	ret

000000000040827c <run>:
  40827c:	sub	sp, sp, #0xe0
  408280:	stp	x29, x30, [sp, #208]
  408284:	add	x29, sp, #0xd0
  408288:	mov	x8, xzr
  40828c:	mov	w9, #0x20                  	// #32
  408290:	mov	w10, #0x12                  	// #18
  408294:	adrp	x11, 440000 <on_brightness_writer_exit+0x15c>
  408298:	add	x11, x11, #0x3f0
  40829c:	add	x11, x11, #0x3
  4082a0:	adrp	x12, 440000 <on_brightness_writer_exit+0x15c>
  4082a4:	add	x12, x12, #0x406
  4082a8:	stur	w0, [x29, #-8]
  4082ac:	stur	x1, [x29, #-16]
  4082b0:	stur	x8, [x29, #-24]
  4082b4:	mov	w0, w9
  4082b8:	str	w10, [sp, #76]
  4082bc:	str	x11, [sp, #64]
  4082c0:	str	x12, [sp, #56]
  4082c4:	bl	406bd8 <log_set_facility@plt>
  4082c8:	bl	406be8 <log_setup_service@plt>
  4082cc:	ldr	w0, [sp, #76]
  4082d0:	bl	406bf8 <umask@plt>
  4082d4:	ldur	w9, [x29, #-8]
  4082d8:	cmp	w9, #0x1
  4082dc:	b.eq	408368 <run+0xec>  // b.none
  4082e0:	mov	w8, #0x3                   	// #3
  4082e4:	stur	w8, [x29, #-32]
  4082e8:	stur	wzr, [x29, #-36]
  4082ec:	stur	wzr, [x29, #-40]
  4082f0:	ldur	w0, [x29, #-40]
  4082f4:	bl	406c08 <log_get_max_level_realm@plt>
  4082f8:	ldur	w8, [x29, #-32]
  4082fc:	and	w8, w8, #0x7
  408300:	cmp	w0, w8
  408304:	b.lt	408338 <run+0xbc>  // b.tstop
  408308:	ldur	w8, [x29, #-40]
  40830c:	ldur	w9, [x29, #-32]
  408310:	orr	w0, w9, w8, lsl #10
  408314:	ldur	w1, [x29, #-36]
  408318:	ldr	x2, [sp, #64]
  40831c:	mov	w3, #0x4b2                 	// #1202
  408320:	ldr	x4, [sp, #56]
  408324:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  408328:	add	x5, x5, #0x40a
  40832c:	bl	406c18 <log_internal_realm@plt>
  408330:	str	w0, [sp, #52]
  408334:	b	40834c <run+0xd0>
  408338:	ldur	w0, [x29, #-36]
  40833c:	bl	406c28 <abs@plt>
  408340:	mov	w8, wzr
  408344:	subs	w8, w8, w0, uxtb
  408348:	str	w8, [sp, #52]
  40834c:	ldr	w8, [sp, #52]
  408350:	stur	w8, [x29, #-44]
  408354:	mov	w8, #0xffffffea            	// #-22
  408358:	stur	w8, [x29, #-4]
  40835c:	mov	w8, #0x1                   	// #1
  408360:	stur	w8, [x29, #-48]
  408364:	b	40878c <run+0x510>
  408368:	bl	406c38 <mac_selinux_init@plt>
  40836c:	stur	w0, [x29, #-28]
  408370:	ldur	w8, [x29, #-28]
  408374:	cmp	w8, #0x0
  408378:	cset	w8, ge  // ge = tcont
  40837c:	tbnz	w8, #0, 40840c <run+0x190>
  408380:	mov	w8, #0x3                   	// #3
  408384:	stur	w8, [x29, #-52]
  408388:	ldur	w8, [x29, #-28]
  40838c:	stur	w8, [x29, #-56]
  408390:	stur	wzr, [x29, #-60]
  408394:	ldur	w0, [x29, #-60]
  408398:	bl	406c08 <log_get_max_level_realm@plt>
  40839c:	ldur	w8, [x29, #-52]
  4083a0:	and	w8, w8, #0x7
  4083a4:	cmp	w0, w8
  4083a8:	b.lt	4083dc <run+0x160>  // b.tstop
  4083ac:	ldur	w8, [x29, #-60]
  4083b0:	ldur	w9, [x29, #-52]
  4083b4:	orr	w0, w9, w8, lsl #10
  4083b8:	ldur	w1, [x29, #-56]
  4083bc:	ldr	x2, [sp, #64]
  4083c0:	mov	w3, #0x4b8                 	// #1208
  4083c4:	ldr	x4, [sp, #56]
  4083c8:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  4083cc:	add	x5, x5, #0x42b
  4083d0:	bl	406c18 <log_internal_realm@plt>
  4083d4:	str	w0, [sp, #48]
  4083d8:	b	4083f0 <run+0x174>
  4083dc:	ldur	w0, [x29, #-56]
  4083e0:	bl	406c28 <abs@plt>
  4083e4:	mov	w8, wzr
  4083e8:	subs	w8, w8, w0, uxtb
  4083ec:	str	w8, [sp, #48]
  4083f0:	ldr	w8, [sp, #48]
  4083f4:	stur	w8, [x29, #-64]
  4083f8:	ldur	w8, [x29, #-64]
  4083fc:	stur	w8, [x29, #-4]
  408400:	mov	w8, #0x1                   	// #1
  408404:	stur	w8, [x29, #-48]
  408408:	b	40878c <run+0x510>
  40840c:	adrp	x0, 440000 <on_brightness_writer_exit+0x15c>
  408410:	add	x0, x0, #0x44e
  408414:	mov	w8, #0x1ed                 	// #493
  408418:	mov	w1, w8
  40841c:	str	w8, [sp, #44]
  408420:	bl	406c48 <mkdir_label@plt>
  408424:	adrp	x9, 440000 <on_brightness_writer_exit+0x15c>
  408428:	add	x9, x9, #0x461
  40842c:	mov	x0, x9
  408430:	ldr	w1, [sp, #44]
  408434:	bl	406c48 <mkdir_label@plt>
  408438:	adrp	x9, 440000 <on_brightness_writer_exit+0x15c>
  40843c:	add	x9, x9, #0x474
  408440:	mov	x0, x9
  408444:	ldr	w1, [sp, #44]
  408448:	bl	406c48 <mkdir_label@plt>
  40844c:	mov	w8, wzr
  408450:	mov	w0, w8
  408454:	mov	x9, xzr
  408458:	mov	x1, x9
  40845c:	mov	w2, #0x1                   	// #1
  408460:	mov	w3, #0xf                   	// #15
  408464:	mov	w4, #0x2                   	// #2
  408468:	mov	w5, #0x11                  	// #17
  40846c:	mov	w6, #0xffffffff            	// #-1
  408470:	bl	406c58 <sigprocmask_many@plt>
  408474:	cmp	w0, #0x0
  408478:	cset	w8, ge  // ge = tcont
  40847c:	mov	w10, #0x1                   	// #1
  408480:	eor	w8, w8, #0x1
  408484:	eor	w8, w8, w10
  408488:	eor	w8, w8, w10
  40848c:	and	w8, w8, #0x1
  408490:	mov	w1, w8
  408494:	sxtw	x9, w1
  408498:	cbz	x9, 4084c0 <run+0x244>
  40849c:	mov	w8, wzr
  4084a0:	mov	w0, w8
  4084a4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4084a8:	add	x1, x1, #0x48a
  4084ac:	ldr	x2, [sp, #64]
  4084b0:	mov	w3, #0x4c1                 	// #1217
  4084b4:	adrp	x4, 440000 <on_brightness_writer_exit+0x15c>
  4084b8:	add	x4, x4, #0x4d7
  4084bc:	bl	406c68 <log_assert_failed_realm@plt>
  4084c0:	sub	x0, x29, #0x18
  4084c4:	bl	408858 <manager_new>
  4084c8:	stur	w0, [x29, #-28]
  4084cc:	ldur	w8, [x29, #-28]
  4084d0:	cmp	w8, #0x0
  4084d4:	cset	w8, ge  // ge = tcont
  4084d8:	tbnz	w8, #0, 408568 <run+0x2ec>
  4084dc:	mov	w8, #0x3                   	// #3
  4084e0:	stur	w8, [x29, #-68]
  4084e4:	ldur	w8, [x29, #-28]
  4084e8:	stur	w8, [x29, #-72]
  4084ec:	stur	wzr, [x29, #-76]
  4084f0:	ldur	w0, [x29, #-76]
  4084f4:	bl	406c08 <log_get_max_level_realm@plt>
  4084f8:	ldur	w8, [x29, #-68]
  4084fc:	and	w8, w8, #0x7
  408500:	cmp	w0, w8
  408504:	b.lt	408538 <run+0x2bc>  // b.tstop
  408508:	ldur	w8, [x29, #-76]
  40850c:	ldur	w9, [x29, #-68]
  408510:	orr	w0, w9, w8, lsl #10
  408514:	ldur	w1, [x29, #-72]
  408518:	ldr	x2, [sp, #64]
  40851c:	mov	w3, #0x4c5                 	// #1221
  408520:	ldr	x4, [sp, #56]
  408524:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  408528:	add	x5, x5, #0x4ed
  40852c:	bl	406c18 <log_internal_realm@plt>
  408530:	str	w0, [sp, #40]
  408534:	b	40854c <run+0x2d0>
  408538:	ldur	w0, [x29, #-72]
  40853c:	bl	406c28 <abs@plt>
  408540:	mov	w8, wzr
  408544:	subs	w8, w8, w0, uxtb
  408548:	str	w8, [sp, #40]
  40854c:	ldr	w8, [sp, #40]
  408550:	stur	w8, [x29, #-80]
  408554:	ldur	w8, [x29, #-80]
  408558:	stur	w8, [x29, #-4]
  40855c:	mov	w8, #0x1                   	// #1
  408560:	stur	w8, [x29, #-48]
  408564:	b	40878c <run+0x510>
  408568:	ldur	x0, [x29, #-24]
  40856c:	bl	41143c <manager_parse_config_file>
  408570:	ldur	x8, [x29, #-24]
  408574:	mov	x0, x8
  408578:	bl	408ba8 <manager_startup>
  40857c:	stur	w0, [x29, #-28]
  408580:	ldur	w9, [x29, #-28]
  408584:	cmp	w9, #0x0
  408588:	cset	w9, ge  // ge = tcont
  40858c:	tbnz	w9, #0, 40861c <run+0x3a0>
  408590:	mov	w8, #0x3                   	// #3
  408594:	stur	w8, [x29, #-84]
  408598:	ldur	w8, [x29, #-28]
  40859c:	stur	w8, [x29, #-88]
  4085a0:	stur	wzr, [x29, #-92]
  4085a4:	ldur	w0, [x29, #-92]
  4085a8:	bl	406c08 <log_get_max_level_realm@plt>
  4085ac:	ldur	w8, [x29, #-84]
  4085b0:	and	w8, w8, #0x7
  4085b4:	cmp	w0, w8
  4085b8:	b.lt	4085ec <run+0x370>  // b.tstop
  4085bc:	ldur	w8, [x29, #-92]
  4085c0:	ldur	w9, [x29, #-84]
  4085c4:	orr	w0, w9, w8, lsl #10
  4085c8:	ldur	w1, [x29, #-88]
  4085cc:	ldr	x2, [sp, #64]
  4085d0:	mov	w3, #0x4cb                 	// #1227
  4085d4:	ldr	x4, [sp, #56]
  4085d8:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  4085dc:	add	x5, x5, #0x513
  4085e0:	bl	406c18 <log_internal_realm@plt>
  4085e4:	str	w0, [sp, #36]
  4085e8:	b	408600 <run+0x384>
  4085ec:	ldur	w0, [x29, #-88]
  4085f0:	bl	406c28 <abs@plt>
  4085f4:	mov	w8, wzr
  4085f8:	subs	w8, w8, w0, uxtb
  4085fc:	str	w8, [sp, #36]
  408600:	ldr	w8, [sp, #36]
  408604:	stur	w8, [x29, #-96]
  408608:	ldur	w8, [x29, #-96]
  40860c:	stur	w8, [x29, #-4]
  408610:	mov	w8, #0x1                   	// #1
  408614:	stur	w8, [x29, #-48]
  408618:	b	40878c <run+0x510>
  40861c:	mov	w8, #0x7                   	// #7
  408620:	stur	w8, [x29, #-100]
  408624:	str	wzr, [sp, #104]
  408628:	str	wzr, [sp, #100]
  40862c:	ldr	w0, [sp, #100]
  408630:	bl	406c08 <log_get_max_level_realm@plt>
  408634:	ldur	w8, [x29, #-100]
  408638:	and	w8, w8, #0x7
  40863c:	cmp	w0, w8
  408640:	b.lt	408694 <run+0x418>  // b.tstop
  408644:	ldr	w8, [sp, #100]
  408648:	ldur	w9, [x29, #-100]
  40864c:	orr	w0, w9, w8, lsl #10
  408650:	ldr	w1, [sp, #104]
  408654:	str	w0, [sp, #32]
  408658:	str	w1, [sp, #28]
  40865c:	bl	406c78 <getpid_cached@plt>
  408660:	ldr	w8, [sp, #32]
  408664:	str	w0, [sp, #24]
  408668:	mov	w0, w8
  40866c:	ldr	w1, [sp, #28]
  408670:	ldr	x2, [sp, #64]
  408674:	mov	w3, #0x4cd                 	// #1229
  408678:	ldr	x4, [sp, #56]
  40867c:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  408680:	add	x5, x5, #0x537
  408684:	ldr	w6, [sp, #24]
  408688:	bl	406c18 <log_internal_realm@plt>
  40868c:	str	w0, [sp, #20]
  408690:	b	4086a8 <run+0x42c>
  408694:	ldr	w0, [sp, #104]
  408698:	bl	406c28 <abs@plt>
  40869c:	mov	w8, wzr
  4086a0:	subs	w8, w8, w0, uxtb
  4086a4:	str	w8, [sp, #20]
  4086a8:	ldr	w8, [sp, #20]
  4086ac:	str	w8, [sp, #96]
  4086b0:	mov	w8, wzr
  4086b4:	mov	w0, w8
  4086b8:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4086bc:	add	x1, x1, #0x558
  4086c0:	bl	406c88 <sd_notify@plt>
  4086c4:	ldur	x9, [x29, #-24]
  4086c8:	mov	x0, x9
  4086cc:	bl	4094a0 <manager_run>
  4086d0:	stur	w0, [x29, #-28]
  4086d4:	mov	w8, #0x7                   	// #7
  4086d8:	str	w8, [sp, #92]
  4086dc:	str	wzr, [sp, #88]
  4086e0:	str	wzr, [sp, #84]
  4086e4:	ldr	w0, [sp, #84]
  4086e8:	bl	406c08 <log_get_max_level_realm@plt>
  4086ec:	ldr	w8, [sp, #92]
  4086f0:	and	w8, w8, #0x7
  4086f4:	cmp	w0, w8
  4086f8:	b.lt	40874c <run+0x4d0>  // b.tstop
  4086fc:	ldr	w8, [sp, #84]
  408700:	ldr	w9, [sp, #92]
  408704:	orr	w0, w9, w8, lsl #10
  408708:	ldr	w1, [sp, #88]
  40870c:	str	w0, [sp, #16]
  408710:	str	w1, [sp, #12]
  408714:	bl	406c78 <getpid_cached@plt>
  408718:	ldr	w8, [sp, #16]
  40871c:	str	w0, [sp, #8]
  408720:	mov	w0, w8
  408724:	ldr	w1, [sp, #12]
  408728:	ldr	x2, [sp, #64]
  40872c:	mov	w3, #0x4d4                 	// #1236
  408730:	ldr	x4, [sp, #56]
  408734:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  408738:	add	x5, x5, #0x57e
  40873c:	ldr	w6, [sp, #8]
  408740:	bl	406c18 <log_internal_realm@plt>
  408744:	str	w0, [sp, #4]
  408748:	b	408760 <run+0x4e4>
  40874c:	ldr	w0, [sp, #88]
  408750:	bl	406c28 <abs@plt>
  408754:	mov	w8, wzr
  408758:	subs	w8, w8, w0, uxtb
  40875c:	str	w8, [sp, #4]
  408760:	ldr	w8, [sp, #4]
  408764:	str	w8, [sp, #80]
  408768:	mov	w8, wzr
  40876c:	mov	w0, w8
  408770:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  408774:	add	x1, x1, #0x59f
  408778:	bl	406c88 <sd_notify@plt>
  40877c:	ldur	w8, [x29, #-28]
  408780:	stur	w8, [x29, #-4]
  408784:	mov	w8, #0x1                   	// #1
  408788:	stur	w8, [x29, #-48]
  40878c:	sub	x0, x29, #0x18
  408790:	bl	408824 <manager_unrefp>
  408794:	ldur	w0, [x29, #-4]
  408798:	ldp	x29, x30, [sp, #208]
  40879c:	add	sp, sp, #0xe0
  4087a0:	ret

00000000004087a4 <static_destruct>:
  4087a4:	sub	sp, sp, #0x20
  4087a8:	stp	x29, x30, [sp, #16]
  4087ac:	add	x29, sp, #0x10
  4087b0:	adrp	x8, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4087b4:	ldr	x8, [x8, #1352]
  4087b8:	str	x8, [sp]
  4087bc:	cbnz	x8, 4087c4 <static_destruct+0x20>
  4087c0:	b	408818 <static_destruct+0x74>
  4087c4:	ldr	x0, [sp]
  4087c8:	mov	x1, #0x8                   	// #8
  4087cc:	bl	40e6bc <ALIGN_TO>
  4087d0:	str	x0, [sp, #8]
  4087d4:	ldr	x8, [sp, #8]
  4087d8:	adrp	x9, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4087dc:	ldr	x9, [x9, #1360]
  4087e0:	cmp	x8, x9
  4087e4:	b.cs	408818 <static_destruct+0x74>  // b.hs, b.nlast
  4087e8:	ldr	x8, [sp, #8]
  4087ec:	ldr	x8, [x8, #8]
  4087f0:	ldr	x9, [sp, #8]
  4087f4:	ldr	x0, [x9]
  4087f8:	blr	x8
  4087fc:	ldr	x8, [sp, #8]
  408800:	add	x8, x8, #0x10
  408804:	mov	x0, x8
  408808:	mov	x1, #0x8                   	// #8
  40880c:	bl	40e6bc <ALIGN_TO>
  408810:	str	x0, [sp, #8]
  408814:	b	4087d4 <static_destruct+0x30>
  408818:	ldp	x29, x30, [sp, #16]
  40881c:	add	sp, sp, #0x20
  408820:	ret

0000000000408824 <manager_unrefp>:
  408824:	sub	sp, sp, #0x20
  408828:	stp	x29, x30, [sp, #16]
  40882c:	add	x29, sp, #0x10
  408830:	str	x0, [sp, #8]
  408834:	ldr	x8, [sp, #8]
  408838:	ldr	x8, [x8]
  40883c:	cbz	x8, 40884c <manager_unrefp+0x28>
  408840:	ldr	x8, [sp, #8]
  408844:	ldr	x0, [x8]
  408848:	bl	4095e8 <manager_unref>
  40884c:	ldp	x29, x30, [sp, #16]
  408850:	add	sp, sp, #0x20
  408854:	ret

0000000000408858 <manager_new>:
  408858:	stp	x29, x30, [sp, #-32]!
  40885c:	str	x28, [sp, #16]
  408860:	mov	x29, sp
  408864:	sub	sp, sp, #0x250
  408868:	mov	x8, xzr
  40886c:	adrp	x9, 45f000 <logind_gperf_lookup.wordlist+0x388>
  408870:	add	x9, x9, #0x2d8
  408874:	adrp	x10, 440000 <on_brightness_writer_exit+0x15c>
  408878:	add	x10, x10, #0x3f0
  40887c:	add	x2, x10, #0x3
  408880:	stur	x0, [x29, #-16]
  408884:	stur	x8, [x29, #-24]
  408888:	str	x9, [sp, #56]
  40888c:	str	x2, [sp, #48]
  408890:	ldur	x8, [x29, #-16]
  408894:	cmp	x8, #0x0
  408898:	cset	w9, ne  // ne = any
  40889c:	mov	w10, #0x1                   	// #1
  4088a0:	eor	w9, w9, #0x1
  4088a4:	eor	w9, w9, w10
  4088a8:	eor	w9, w9, w10
  4088ac:	and	w9, w9, #0x1
  4088b0:	mov	w0, w9
  4088b4:	sxtw	x8, w0
  4088b8:	cbz	x8, 4088e0 <manager_new+0x88>
  4088bc:	mov	w8, wzr
  4088c0:	mov	w0, w8
  4088c4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4088c8:	add	x1, x1, #0x5cf
  4088cc:	ldr	x2, [sp, #48]
  4088d0:	mov	w3, #0x29                  	// #41
  4088d4:	adrp	x4, 440000 <on_brightness_writer_exit+0x15c>
  4088d8:	add	x4, x4, #0x5d3
  4088dc:	bl	406c68 <log_assert_failed_realm@plt>
  4088e0:	mov	x0, #0x1e0                 	// #480
  4088e4:	mov	x1, #0x1                   	// #1
  4088e8:	bl	409990 <malloc_multiply>
  4088ec:	stur	x0, [x29, #-24]
  4088f0:	ldur	x8, [x29, #-24]
  4088f4:	cbnz	x8, 40890c <manager_new+0xb4>
  4088f8:	mov	w8, #0xfffffff4            	// #-12
  4088fc:	stur	w8, [x29, #-4]
  408900:	mov	w8, #0x1                   	// #1
  408904:	stur	w8, [x29, #-32]
  408908:	b	408b8c <manager_new+0x334>
  40890c:	ldur	x0, [x29, #-24]
  408910:	add	x8, sp, #0x50
  408914:	str	x0, [sp, #40]
  408918:	mov	x0, x8
  40891c:	mov	w9, wzr
  408920:	mov	w1, w9
  408924:	mov	x10, #0x1e0                 	// #480
  408928:	mov	x2, x10
  40892c:	str	x8, [sp, #32]
  408930:	str	x10, [sp, #24]
  408934:	bl	406c98 <memset@plt>
  408938:	mov	w9, #0xffffffff            	// #-1
  40893c:	str	w9, [sp, #232]
  408940:	str	w9, [sp, #244]
  408944:	mov	w0, #0x1                   	// #1
  408948:	bl	406ca8 <now@plt>
  40894c:	str	x0, [sp, #464]
  408950:	ldr	x0, [sp, #40]
  408954:	ldr	x1, [sp, #32]
  408958:	ldr	x2, [sp, #24]
  40895c:	bl	406cb8 <memcpy@plt>
  408960:	ldr	x0, [sp, #56]
  408964:	bl	406cc8 <internal_hashmap_new@plt>
  408968:	ldur	x8, [x29, #-24]
  40896c:	str	x0, [x8, #16]
  408970:	ldr	x0, [sp, #56]
  408974:	bl	406cc8 <internal_hashmap_new@plt>
  408978:	ldur	x8, [x29, #-24]
  40897c:	str	x0, [x8, #24]
  408980:	ldr	x0, [sp, #56]
  408984:	bl	406cc8 <internal_hashmap_new@plt>
  408988:	ldur	x8, [x29, #-24]
  40898c:	str	x0, [x8, #32]
  408990:	mov	x8, xzr
  408994:	mov	x0, x8
  408998:	str	x8, [sp, #16]
  40899c:	bl	406cc8 <internal_hashmap_new@plt>
  4089a0:	ldur	x8, [x29, #-24]
  4089a4:	str	x0, [x8, #40]
  4089a8:	ldr	x0, [sp, #16]
  4089ac:	bl	406cc8 <internal_hashmap_new@plt>
  4089b0:	ldur	x8, [x29, #-24]
  4089b4:	str	x0, [x8, #48]
  4089b8:	ldr	x0, [sp, #56]
  4089bc:	bl	406cc8 <internal_hashmap_new@plt>
  4089c0:	ldur	x8, [x29, #-24]
  4089c4:	str	x0, [x8, #56]
  4089c8:	ldr	x0, [sp, #56]
  4089cc:	bl	406cc8 <internal_hashmap_new@plt>
  4089d0:	ldur	x8, [x29, #-24]
  4089d4:	str	x0, [x8, #64]
  4089d8:	ldr	x0, [sp, #56]
  4089dc:	bl	406cc8 <internal_hashmap_new@plt>
  4089e0:	ldur	x8, [x29, #-24]
  4089e4:	str	x0, [x8, #224]
  4089e8:	ldr	x0, [sp, #56]
  4089ec:	bl	406cc8 <internal_hashmap_new@plt>
  4089f0:	ldur	x8, [x29, #-24]
  4089f4:	str	x0, [x8, #216]
  4089f8:	ldur	x8, [x29, #-24]
  4089fc:	ldr	x8, [x8, #16]
  408a00:	cbz	x8, 408a64 <manager_new+0x20c>
  408a04:	ldur	x8, [x29, #-24]
  408a08:	ldr	x8, [x8, #24]
  408a0c:	cbz	x8, 408a64 <manager_new+0x20c>
  408a10:	ldur	x8, [x29, #-24]
  408a14:	ldr	x8, [x8, #32]
  408a18:	cbz	x8, 408a64 <manager_new+0x20c>
  408a1c:	ldur	x8, [x29, #-24]
  408a20:	ldr	x8, [x8, #40]
  408a24:	cbz	x8, 408a64 <manager_new+0x20c>
  408a28:	ldur	x8, [x29, #-24]
  408a2c:	ldr	x8, [x8, #48]
  408a30:	cbz	x8, 408a64 <manager_new+0x20c>
  408a34:	ldur	x8, [x29, #-24]
  408a38:	ldr	x8, [x8, #56]
  408a3c:	cbz	x8, 408a64 <manager_new+0x20c>
  408a40:	ldur	x8, [x29, #-24]
  408a44:	ldr	x8, [x8, #64]
  408a48:	cbz	x8, 408a64 <manager_new+0x20c>
  408a4c:	ldur	x8, [x29, #-24]
  408a50:	ldr	x8, [x8, #224]
  408a54:	cbz	x8, 408a64 <manager_new+0x20c>
  408a58:	ldur	x8, [x29, #-24]
  408a5c:	ldr	x8, [x8, #216]
  408a60:	cbnz	x8, 408a78 <manager_new+0x220>
  408a64:	mov	w8, #0xfffffff4            	// #-12
  408a68:	stur	w8, [x29, #-4]
  408a6c:	mov	w8, #0x1                   	// #1
  408a70:	stur	w8, [x29, #-32]
  408a74:	b	408b8c <manager_new+0x334>
  408a78:	ldur	x0, [x29, #-24]
  408a7c:	bl	406cd8 <sd_event_default@plt>
  408a80:	stur	w0, [x29, #-28]
  408a84:	ldur	w8, [x29, #-28]
  408a88:	cmp	w8, #0x0
  408a8c:	cset	w8, ge  // ge = tcont
  408a90:	tbnz	w8, #0, 408aa8 <manager_new+0x250>
  408a94:	ldur	w8, [x29, #-28]
  408a98:	stur	w8, [x29, #-4]
  408a9c:	mov	w8, #0x1                   	// #1
  408aa0:	stur	w8, [x29, #-32]
  408aa4:	b	408b8c <manager_new+0x334>
  408aa8:	ldur	x8, [x29, #-24]
  408aac:	ldr	x0, [x8]
  408ab0:	mov	x8, xzr
  408ab4:	mov	x1, x8
  408ab8:	mov	w2, #0x2                   	// #2
  408abc:	mov	x3, x8
  408ac0:	mov	x4, x8
  408ac4:	bl	406ce8 <sd_event_add_signal@plt>
  408ac8:	stur	w0, [x29, #-28]
  408acc:	ldur	w9, [x29, #-28]
  408ad0:	cmp	w9, #0x0
  408ad4:	cset	w9, ge  // ge = tcont
  408ad8:	tbnz	w9, #0, 408af0 <manager_new+0x298>
  408adc:	ldur	w8, [x29, #-28]
  408ae0:	stur	w8, [x29, #-4]
  408ae4:	mov	w8, #0x1                   	// #1
  408ae8:	stur	w8, [x29, #-32]
  408aec:	b	408b8c <manager_new+0x334>
  408af0:	ldur	x8, [x29, #-24]
  408af4:	ldr	x0, [x8]
  408af8:	mov	x8, xzr
  408afc:	mov	x1, x8
  408b00:	mov	w2, #0xf                   	// #15
  408b04:	mov	x3, x8
  408b08:	mov	x4, x8
  408b0c:	bl	406ce8 <sd_event_add_signal@plt>
  408b10:	stur	w0, [x29, #-28]
  408b14:	ldur	w9, [x29, #-28]
  408b18:	cmp	w9, #0x0
  408b1c:	cset	w9, ge  // ge = tcont
  408b20:	tbnz	w9, #0, 408b38 <manager_new+0x2e0>
  408b24:	ldur	w8, [x29, #-28]
  408b28:	stur	w8, [x29, #-4]
  408b2c:	mov	w8, #0x1                   	// #1
  408b30:	stur	w8, [x29, #-32]
  408b34:	b	408b8c <manager_new+0x334>
  408b38:	ldur	x8, [x29, #-24]
  408b3c:	ldr	x0, [x8]
  408b40:	mov	w9, #0x1                   	// #1
  408b44:	mov	w1, w9
  408b48:	str	w9, [sp, #12]
  408b4c:	bl	406cf8 <sd_event_set_watchdog@plt>
  408b50:	ldur	x8, [x29, #-24]
  408b54:	mov	x0, x8
  408b58:	bl	411298 <manager_reset_config>
  408b5c:	ldur	x8, [x29, #-24]
  408b60:	str	x8, [sp, #72]
  408b64:	mov	x8, xzr
  408b68:	stur	x8, [x29, #-24]
  408b6c:	ldr	x8, [sp, #72]
  408b70:	str	x8, [sp, #64]
  408b74:	ldr	x8, [sp, #64]
  408b78:	ldur	x10, [x29, #-16]
  408b7c:	str	x8, [x10]
  408b80:	stur	wzr, [x29, #-4]
  408b84:	ldr	w9, [sp, #12]
  408b88:	stur	w9, [x29, #-32]
  408b8c:	sub	x0, x29, #0x18
  408b90:	bl	408824 <manager_unrefp>
  408b94:	ldur	w0, [x29, #-4]
  408b98:	add	sp, sp, #0x250
  408b9c:	ldr	x28, [sp, #16]
  408ba0:	ldp	x29, x30, [sp], #32
  408ba4:	ret

0000000000408ba8 <manager_startup>:
  408ba8:	sub	sp, sp, #0x1a0
  408bac:	stp	x29, x30, [sp, #384]
  408bb0:	str	x28, [sp, #400]
  408bb4:	add	x29, sp, #0x180
  408bb8:	adrp	x8, 440000 <on_brightness_writer_exit+0x15c>
  408bbc:	add	x8, x8, #0x3f0
  408bc0:	add	x8, x8, #0x3
  408bc4:	adrp	x9, 440000 <on_brightness_writer_exit+0x15c>
  408bc8:	add	x9, x9, #0x610
  408bcc:	stur	x0, [x29, #-16]
  408bd0:	str	x8, [sp, #56]
  408bd4:	str	x9, [sp, #48]
  408bd8:	ldur	x8, [x29, #-16]
  408bdc:	cmp	x8, #0x0
  408be0:	cset	w9, ne  // ne = any
  408be4:	mov	w10, #0x1                   	// #1
  408be8:	eor	w9, w9, #0x1
  408bec:	eor	w9, w9, w10
  408bf0:	eor	w9, w9, w10
  408bf4:	and	w9, w9, #0x1
  408bf8:	mov	w0, w9
  408bfc:	sxtw	x8, w0
  408c00:	cbz	x8, 408c28 <manager_startup+0x80>
  408c04:	mov	w8, wzr
  408c08:	mov	w0, w8
  408c0c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  408c10:	add	x1, x1, #0x5ef
  408c14:	ldr	x2, [sp, #56]
  408c18:	mov	w3, #0x42f                 	// #1071
  408c1c:	adrp	x4, 440000 <on_brightness_writer_exit+0x15c>
  408c20:	add	x4, x4, #0x5f1
  408c24:	bl	406c68 <log_assert_failed_realm@plt>
  408c28:	ldur	x8, [x29, #-16]
  408c2c:	ldr	x0, [x8]
  408c30:	ldur	x4, [x29, #-16]
  408c34:	mov	x8, xzr
  408c38:	mov	x1, x8
  408c3c:	mov	w2, #0x1                   	// #1
  408c40:	adrp	x3, 409000 <manager_startup+0x458>
  408c44:	add	x3, x3, #0xa74
  408c48:	bl	406ce8 <sd_event_add_signal@plt>
  408c4c:	stur	w0, [x29, #-20]
  408c50:	ldur	w9, [x29, #-20]
  408c54:	cmp	w9, #0x0
  408c58:	cset	w9, ge  // ge = tcont
  408c5c:	tbnz	w9, #0, 408ce4 <manager_startup+0x13c>
  408c60:	mov	w8, #0x3                   	// #3
  408c64:	stur	w8, [x29, #-84]
  408c68:	ldur	w8, [x29, #-20]
  408c6c:	stur	w8, [x29, #-88]
  408c70:	stur	wzr, [x29, #-92]
  408c74:	ldur	w0, [x29, #-92]
  408c78:	bl	406c08 <log_get_max_level_realm@plt>
  408c7c:	ldur	w8, [x29, #-84]
  408c80:	and	w8, w8, #0x7
  408c84:	cmp	w0, w8
  408c88:	b.lt	408cbc <manager_startup+0x114>  // b.tstop
  408c8c:	ldur	w8, [x29, #-92]
  408c90:	ldur	w9, [x29, #-84]
  408c94:	orr	w0, w9, w8, lsl #10
  408c98:	ldur	w1, [x29, #-88]
  408c9c:	ldr	x2, [sp, #56]
  408ca0:	mov	w3, #0x433                 	// #1075
  408ca4:	ldr	x4, [sp, #48]
  408ca8:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  408cac:	add	x5, x5, #0x620
  408cb0:	bl	406c18 <log_internal_realm@plt>
  408cb4:	str	w0, [sp, #44]
  408cb8:	b	408cd0 <manager_startup+0x128>
  408cbc:	ldur	w0, [x29, #-88]
  408cc0:	bl	406c28 <abs@plt>
  408cc4:	mov	w8, wzr
  408cc8:	subs	w8, w8, w0, uxtb
  408ccc:	str	w8, [sp, #44]
  408cd0:	ldr	w8, [sp, #44]
  408cd4:	stur	w8, [x29, #-96]
  408cd8:	ldur	w8, [x29, #-96]
  408cdc:	stur	w8, [x29, #-4]
  408ce0:	b	40948c <manager_startup+0x8e4>
  408ce4:	ldur	x0, [x29, #-16]
  408ce8:	bl	414078 <manager_connect_utmp>
  408cec:	ldur	x0, [x29, #-16]
  408cf0:	bl	409bd4 <manager_connect_console>
  408cf4:	stur	w0, [x29, #-20]
  408cf8:	ldur	w8, [x29, #-20]
  408cfc:	cmp	w8, #0x0
  408d00:	cset	w8, ge  // ge = tcont
  408d04:	tbnz	w8, #0, 408d14 <manager_startup+0x16c>
  408d08:	ldur	w8, [x29, #-20]
  408d0c:	stur	w8, [x29, #-4]
  408d10:	b	40948c <manager_startup+0x8e4>
  408d14:	ldur	x0, [x29, #-16]
  408d18:	bl	40a15c <manager_connect_udev>
  408d1c:	stur	w0, [x29, #-20]
  408d20:	ldur	w8, [x29, #-20]
  408d24:	cmp	w8, #0x0
  408d28:	cset	w8, ge  // ge = tcont
  408d2c:	tbnz	w8, #0, 408db4 <manager_startup+0x20c>
  408d30:	mov	w8, #0x3                   	// #3
  408d34:	stur	w8, [x29, #-100]
  408d38:	ldur	w8, [x29, #-20]
  408d3c:	stur	w8, [x29, #-104]
  408d40:	stur	wzr, [x29, #-108]
  408d44:	ldur	w0, [x29, #-108]
  408d48:	bl	406c08 <log_get_max_level_realm@plt>
  408d4c:	ldur	w8, [x29, #-100]
  408d50:	and	w8, w8, #0x7
  408d54:	cmp	w0, w8
  408d58:	b.lt	408d8c <manager_startup+0x1e4>  // b.tstop
  408d5c:	ldur	w8, [x29, #-108]
  408d60:	ldur	w9, [x29, #-100]
  408d64:	orr	w0, w9, w8, lsl #10
  408d68:	ldur	w1, [x29, #-104]
  408d6c:	ldr	x2, [sp, #56]
  408d70:	mov	w3, #0x440                 	// #1088
  408d74:	ldr	x4, [sp, #48]
  408d78:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  408d7c:	add	x5, x5, #0x646
  408d80:	bl	406c18 <log_internal_realm@plt>
  408d84:	str	w0, [sp, #40]
  408d88:	b	408da0 <manager_startup+0x1f8>
  408d8c:	ldur	w0, [x29, #-104]
  408d90:	bl	406c28 <abs@plt>
  408d94:	mov	w8, wzr
  408d98:	subs	w8, w8, w0, uxtb
  408d9c:	str	w8, [sp, #40]
  408da0:	ldr	w8, [sp, #40]
  408da4:	stur	w8, [x29, #-112]
  408da8:	ldur	w8, [x29, #-112]
  408dac:	stur	w8, [x29, #-4]
  408db0:	b	40948c <manager_startup+0x8e4>
  408db4:	ldur	x0, [x29, #-16]
  408db8:	bl	40a7c8 <manager_connect_bus>
  408dbc:	stur	w0, [x29, #-20]
  408dc0:	ldur	w8, [x29, #-20]
  408dc4:	cmp	w8, #0x0
  408dc8:	cset	w8, ge  // ge = tcont
  408dcc:	tbnz	w8, #0, 408ddc <manager_startup+0x234>
  408dd0:	ldur	w8, [x29, #-20]
  408dd4:	stur	w8, [x29, #-4]
  408dd8:	b	40948c <manager_startup+0x8e4>
  408ddc:	ldur	x0, [x29, #-16]
  408de0:	ldur	x8, [x29, #-16]
  408de4:	add	x2, x8, #0xa8
  408de8:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  408dec:	add	x1, x1, #0x669
  408df0:	bl	411688 <manager_add_seat>
  408df4:	stur	w0, [x29, #-20]
  408df8:	ldur	w9, [x29, #-20]
  408dfc:	cmp	w9, #0x0
  408e00:	cset	w9, ge  // ge = tcont
  408e04:	tbnz	w9, #0, 408e8c <manager_startup+0x2e4>
  408e08:	mov	w8, #0x3                   	// #3
  408e0c:	stur	w8, [x29, #-116]
  408e10:	ldur	w8, [x29, #-20]
  408e14:	stur	w8, [x29, #-120]
  408e18:	stur	wzr, [x29, #-124]
  408e1c:	ldur	w0, [x29, #-124]
  408e20:	bl	406c08 <log_get_max_level_realm@plt>
  408e24:	ldur	w8, [x29, #-116]
  408e28:	and	w8, w8, #0x7
  408e2c:	cmp	w0, w8
  408e30:	b.lt	408e64 <manager_startup+0x2bc>  // b.tstop
  408e34:	ldur	w8, [x29, #-124]
  408e38:	ldur	w9, [x29, #-116]
  408e3c:	orr	w0, w9, w8, lsl #10
  408e40:	ldur	w1, [x29, #-120]
  408e44:	ldr	x2, [sp, #56]
  408e48:	mov	w3, #0x44a                 	// #1098
  408e4c:	ldr	x4, [sp, #48]
  408e50:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  408e54:	add	x5, x5, #0x66f
  408e58:	bl	406c18 <log_internal_realm@plt>
  408e5c:	str	w0, [sp, #36]
  408e60:	b	408e78 <manager_startup+0x2d0>
  408e64:	ldur	w0, [x29, #-120]
  408e68:	bl	406c28 <abs@plt>
  408e6c:	mov	w8, wzr
  408e70:	subs	w8, w8, w0, uxtb
  408e74:	str	w8, [sp, #36]
  408e78:	ldr	w8, [sp, #36]
  408e7c:	stur	w8, [x29, #-128]
  408e80:	ldur	w8, [x29, #-128]
  408e84:	stur	w8, [x29, #-4]
  408e88:	b	40948c <manager_startup+0x8e4>
  408e8c:	ldur	x0, [x29, #-16]
  408e90:	ldur	x8, [x29, #-16]
  408e94:	ldr	x8, [x8, #440]
  408e98:	add	x1, x8, #0x0
  408e9c:	bl	414d2c <manager_set_lid_switch_ignore>
  408ea0:	stur	w0, [x29, #-20]
  408ea4:	ldur	w9, [x29, #-20]
  408ea8:	cmp	w9, #0x0
  408eac:	cset	w9, ge  // ge = tcont
  408eb0:	tbnz	w9, #0, 408f2c <manager_startup+0x384>
  408eb4:	mov	w8, #0x4                   	// #4
  408eb8:	stur	w8, [x29, #-132]
  408ebc:	ldur	w8, [x29, #-20]
  408ec0:	stur	w8, [x29, #-136]
  408ec4:	stur	wzr, [x29, #-140]
  408ec8:	ldur	w0, [x29, #-140]
  408ecc:	bl	406c08 <log_get_max_level_realm@plt>
  408ed0:	ldur	w8, [x29, #-132]
  408ed4:	and	w8, w8, #0x7
  408ed8:	cmp	w0, w8
  408edc:	b.lt	408f10 <manager_startup+0x368>  // b.tstop
  408ee0:	ldur	w8, [x29, #-140]
  408ee4:	ldur	w9, [x29, #-132]
  408ee8:	orr	w0, w9, w8, lsl #10
  408eec:	ldur	w1, [x29, #-136]
  408ef0:	ldr	x2, [sp, #56]
  408ef4:	mov	w3, #0x44e                 	// #1102
  408ef8:	ldr	x4, [sp, #48]
  408efc:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  408f00:	add	x5, x5, #0x687
  408f04:	bl	406c18 <log_internal_realm@plt>
  408f08:	str	w0, [sp, #32]
  408f0c:	b	408f24 <manager_startup+0x37c>
  408f10:	ldur	w0, [x29, #-136]
  408f14:	bl	406c28 <abs@plt>
  408f18:	mov	w8, wzr
  408f1c:	subs	w8, w8, w0, uxtb
  408f20:	str	w8, [sp, #32]
  408f24:	ldr	w8, [sp, #32]
  408f28:	stur	w8, [x29, #-144]
  408f2c:	ldur	x0, [x29, #-16]
  408f30:	bl	40b4ec <manager_enumerate_devices>
  408f34:	stur	w0, [x29, #-20]
  408f38:	ldur	w8, [x29, #-20]
  408f3c:	cmp	w8, #0x0
  408f40:	cset	w8, ge  // ge = tcont
  408f44:	tbnz	w8, #0, 408fc0 <manager_startup+0x418>
  408f48:	mov	w8, #0x4                   	// #4
  408f4c:	stur	w8, [x29, #-148]
  408f50:	ldur	w8, [x29, #-20]
  408f54:	stur	w8, [x29, #-152]
  408f58:	stur	wzr, [x29, #-156]
  408f5c:	ldur	w0, [x29, #-156]
  408f60:	bl	406c08 <log_get_max_level_realm@plt>
  408f64:	ldur	w8, [x29, #-148]
  408f68:	and	w8, w8, #0x7
  408f6c:	cmp	w0, w8
  408f70:	b.lt	408fa4 <manager_startup+0x3fc>  // b.tstop
  408f74:	ldur	w8, [x29, #-156]
  408f78:	ldur	w9, [x29, #-148]
  408f7c:	orr	w0, w9, w8, lsl #10
  408f80:	ldur	w1, [x29, #-152]
  408f84:	ldr	x2, [sp, #56]
  408f88:	mov	w3, #0x453                 	// #1107
  408f8c:	ldr	x4, [sp, #48]
  408f90:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  408f94:	add	x5, x5, #0x6bb
  408f98:	bl	406c18 <log_internal_realm@plt>
  408f9c:	str	w0, [sp, #28]
  408fa0:	b	408fb8 <manager_startup+0x410>
  408fa4:	ldur	w0, [x29, #-152]
  408fa8:	bl	406c28 <abs@plt>
  408fac:	mov	w8, wzr
  408fb0:	subs	w8, w8, w0, uxtb
  408fb4:	str	w8, [sp, #28]
  408fb8:	ldr	w8, [sp, #28]
  408fbc:	stur	w8, [x29, #-160]
  408fc0:	ldur	x0, [x29, #-16]
  408fc4:	bl	40b640 <manager_enumerate_seats>
  408fc8:	stur	w0, [x29, #-20]
  408fcc:	ldur	w8, [x29, #-20]
  408fd0:	cmp	w8, #0x0
  408fd4:	cset	w8, ge  // ge = tcont
  408fd8:	tbnz	w8, #0, 409054 <manager_startup+0x4ac>
  408fdc:	mov	w8, #0x4                   	// #4
  408fe0:	stur	w8, [x29, #-164]
  408fe4:	ldur	w8, [x29, #-20]
  408fe8:	stur	w8, [x29, #-168]
  408fec:	stur	wzr, [x29, #-172]
  408ff0:	ldur	w0, [x29, #-172]
  408ff4:	bl	406c08 <log_get_max_level_realm@plt>
  408ff8:	ldur	w8, [x29, #-164]
  408ffc:	and	w8, w8, #0x7
  409000:	cmp	w0, w8
  409004:	b.lt	409038 <manager_startup+0x490>  // b.tstop
  409008:	ldur	w8, [x29, #-172]
  40900c:	ldur	w9, [x29, #-164]
  409010:	orr	w0, w9, w8, lsl #10
  409014:	ldur	w1, [x29, #-168]
  409018:	ldr	x2, [sp, #56]
  40901c:	mov	w3, #0x457                 	// #1111
  409020:	ldr	x4, [sp, #48]
  409024:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  409028:	add	x5, x5, #0x6d9
  40902c:	bl	406c18 <log_internal_realm@plt>
  409030:	str	w0, [sp, #24]
  409034:	b	40904c <manager_startup+0x4a4>
  409038:	ldur	w0, [x29, #-168]
  40903c:	bl	406c28 <abs@plt>
  409040:	mov	w8, wzr
  409044:	subs	w8, w8, w0, uxtb
  409048:	str	w8, [sp, #24]
  40904c:	ldr	w8, [sp, #24]
  409050:	stur	w8, [x29, #-176]
  409054:	ldur	x0, [x29, #-16]
  409058:	bl	40b934 <manager_enumerate_users>
  40905c:	stur	w0, [x29, #-20]
  409060:	ldur	w8, [x29, #-20]
  409064:	cmp	w8, #0x0
  409068:	cset	w8, ge  // ge = tcont
  40906c:	tbnz	w8, #0, 4090e8 <manager_startup+0x540>
  409070:	mov	w8, #0x4                   	// #4
  409074:	stur	w8, [x29, #-180]
  409078:	ldur	w8, [x29, #-20]
  40907c:	stur	w8, [x29, #-184]
  409080:	stur	wzr, [x29, #-188]
  409084:	ldur	w0, [x29, #-188]
  409088:	bl	406c08 <log_get_max_level_realm@plt>
  40908c:	ldur	w8, [x29, #-180]
  409090:	and	w8, w8, #0x7
  409094:	cmp	w0, w8
  409098:	b.lt	4090cc <manager_startup+0x524>  // b.tstop
  40909c:	ldur	w8, [x29, #-188]
  4090a0:	ldur	w9, [x29, #-180]
  4090a4:	orr	w0, w9, w8, lsl #10
  4090a8:	ldur	w1, [x29, #-184]
  4090ac:	ldr	x2, [sp, #56]
  4090b0:	mov	w3, #0x45b                 	// #1115
  4090b4:	ldr	x4, [sp, #48]
  4090b8:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  4090bc:	add	x5, x5, #0x6f5
  4090c0:	bl	406c18 <log_internal_realm@plt>
  4090c4:	str	w0, [sp, #20]
  4090c8:	b	4090e0 <manager_startup+0x538>
  4090cc:	ldur	w0, [x29, #-184]
  4090d0:	bl	406c28 <abs@plt>
  4090d4:	mov	w8, wzr
  4090d8:	subs	w8, w8, w0, uxtb
  4090dc:	str	w8, [sp, #20]
  4090e0:	ldr	w8, [sp, #20]
  4090e4:	str	w8, [sp, #192]
  4090e8:	ldur	x0, [x29, #-16]
  4090ec:	bl	40bc24 <manager_enumerate_sessions>
  4090f0:	stur	w0, [x29, #-20]
  4090f4:	ldur	w8, [x29, #-20]
  4090f8:	cmp	w8, #0x0
  4090fc:	cset	w8, ge  // ge = tcont
  409100:	tbnz	w8, #0, 40917c <manager_startup+0x5d4>
  409104:	mov	w8, #0x4                   	// #4
  409108:	str	w8, [sp, #188]
  40910c:	ldur	w8, [x29, #-20]
  409110:	str	w8, [sp, #184]
  409114:	str	wzr, [sp, #180]
  409118:	ldr	w0, [sp, #180]
  40911c:	bl	406c08 <log_get_max_level_realm@plt>
  409120:	ldr	w8, [sp, #188]
  409124:	and	w8, w8, #0x7
  409128:	cmp	w0, w8
  40912c:	b.lt	409160 <manager_startup+0x5b8>  // b.tstop
  409130:	ldr	w8, [sp, #180]
  409134:	ldr	w9, [sp, #188]
  409138:	orr	w0, w9, w8, lsl #10
  40913c:	ldr	w1, [sp, #184]
  409140:	ldr	x2, [sp, #56]
  409144:	mov	w3, #0x45f                 	// #1119
  409148:	ldr	x4, [sp, #48]
  40914c:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  409150:	add	x5, x5, #0x711
  409154:	bl	406c18 <log_internal_realm@plt>
  409158:	str	w0, [sp, #16]
  40915c:	b	409174 <manager_startup+0x5cc>
  409160:	ldr	w0, [sp, #184]
  409164:	bl	406c28 <abs@plt>
  409168:	mov	w8, wzr
  40916c:	subs	w8, w8, w0, uxtb
  409170:	str	w8, [sp, #16]
  409174:	ldr	w8, [sp, #16]
  409178:	str	w8, [sp, #176]
  40917c:	ldur	x0, [x29, #-16]
  409180:	bl	40bf14 <manager_enumerate_inhibitors>
  409184:	stur	w0, [x29, #-20]
  409188:	ldur	w8, [x29, #-20]
  40918c:	cmp	w8, #0x0
  409190:	cset	w8, ge  // ge = tcont
  409194:	tbnz	w8, #0, 409210 <manager_startup+0x668>
  409198:	mov	w8, #0x4                   	// #4
  40919c:	str	w8, [sp, #172]
  4091a0:	ldur	w8, [x29, #-20]
  4091a4:	str	w8, [sp, #168]
  4091a8:	str	wzr, [sp, #164]
  4091ac:	ldr	w0, [sp, #164]
  4091b0:	bl	406c08 <log_get_max_level_realm@plt>
  4091b4:	ldr	w8, [sp, #172]
  4091b8:	and	w8, w8, #0x7
  4091bc:	cmp	w0, w8
  4091c0:	b.lt	4091f4 <manager_startup+0x64c>  // b.tstop
  4091c4:	ldr	w8, [sp, #164]
  4091c8:	ldr	w9, [sp, #172]
  4091cc:	orr	w0, w9, w8, lsl #10
  4091d0:	ldr	w1, [sp, #168]
  4091d4:	ldr	x2, [sp, #56]
  4091d8:	mov	w3, #0x463                 	// #1123
  4091dc:	ldr	x4, [sp, #48]
  4091e0:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  4091e4:	add	x5, x5, #0x730
  4091e8:	bl	406c18 <log_internal_realm@plt>
  4091ec:	str	w0, [sp, #12]
  4091f0:	b	409208 <manager_startup+0x660>
  4091f4:	ldr	w0, [sp, #168]
  4091f8:	bl	406c28 <abs@plt>
  4091fc:	mov	w8, wzr
  409200:	subs	w8, w8, w0, uxtb
  409204:	str	w8, [sp, #12]
  409208:	ldr	w8, [sp, #12]
  40920c:	str	w8, [sp, #160]
  409210:	ldur	x0, [x29, #-16]
  409214:	bl	40c1f4 <manager_enumerate_buttons>
  409218:	stur	w0, [x29, #-20]
  40921c:	ldur	w8, [x29, #-20]
  409220:	cmp	w8, #0x0
  409224:	cset	w8, ge  // ge = tcont
  409228:	tbnz	w8, #0, 4092a4 <manager_startup+0x6fc>
  40922c:	mov	w8, #0x4                   	// #4
  409230:	str	w8, [sp, #156]
  409234:	ldur	w8, [x29, #-20]
  409238:	str	w8, [sp, #152]
  40923c:	str	wzr, [sp, #148]
  409240:	ldr	w0, [sp, #148]
  409244:	bl	406c08 <log_get_max_level_realm@plt>
  409248:	ldr	w8, [sp, #156]
  40924c:	and	w8, w8, #0x7
  409250:	cmp	w0, w8
  409254:	b.lt	409288 <manager_startup+0x6e0>  // b.tstop
  409258:	ldr	w8, [sp, #148]
  40925c:	ldr	w9, [sp, #156]
  409260:	orr	w0, w9, w8, lsl #10
  409264:	ldr	w1, [sp, #152]
  409268:	ldr	x2, [sp, #56]
  40926c:	mov	w3, #0x467                 	// #1127
  409270:	ldr	x4, [sp, #48]
  409274:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  409278:	add	x5, x5, #0x751
  40927c:	bl	406c18 <log_internal_realm@plt>
  409280:	str	w0, [sp, #8]
  409284:	b	40929c <manager_startup+0x6f4>
  409288:	ldr	w0, [sp, #152]
  40928c:	bl	406c28 <abs@plt>
  409290:	mov	w8, wzr
  409294:	subs	w8, w8, w0, uxtb
  409298:	str	w8, [sp, #8]
  40929c:	ldr	w8, [sp, #8]
  4092a0:	str	w8, [sp, #144]
  4092a4:	ldur	x0, [x29, #-16]
  4092a8:	mov	w8, wzr
  4092ac:	and	w1, w8, #0x1
  4092b0:	bl	40c3a4 <manager_gc>
  4092b4:	ldur	x0, [x29, #-16]
  4092b8:	bl	40c8dc <manager_reserve_vt>
  4092bc:	ldur	x9, [x29, #-16]
  4092c0:	mov	x0, x9
  4092c4:	bl	413afc <manager_read_utmp>
  4092c8:	add	x9, sp, #0x80
  4092cc:	mov	w8, #0xfffffffe            	// #-2
  4092d0:	str	w8, [sp, #128]
  4092d4:	mov	x10, xzr
  4092d8:	str	x10, [x9, #8]
  4092dc:	ldr	q0, [sp, #128]
  4092e0:	stur	q0, [x29, #-80]
  4092e4:	ldur	x8, [x29, #-16]
  4092e8:	ldr	x0, [x8, #24]
  4092ec:	sub	x1, x29, #0x50
  4092f0:	sub	x2, x29, #0x20
  4092f4:	mov	x8, xzr
  4092f8:	mov	x3, x8
  4092fc:	bl	40cac8 <hashmap_iterate>
  409300:	tbnz	w0, #0, 409308 <manager_startup+0x760>
  409304:	b	409314 <manager_startup+0x76c>
  409308:	ldur	x0, [x29, #-32]
  40930c:	bl	42af94 <seat_start>
  409310:	b	4092e4 <manager_startup+0x73c>
  409314:	add	x8, sp, #0x70
  409318:	mov	w9, #0xfffffffe            	// #-2
  40931c:	str	w9, [sp, #112]
  409320:	mov	x10, xzr
  409324:	str	x10, [x8, #8]
  409328:	ldr	q0, [sp, #112]
  40932c:	stur	q0, [x29, #-80]
  409330:	ldur	x8, [x29, #-16]
  409334:	ldr	x0, [x8, #48]
  409338:	sub	x1, x29, #0x50
  40933c:	sub	x2, x29, #0x30
  409340:	mov	x8, xzr
  409344:	mov	x3, x8
  409348:	bl	40cac8 <hashmap_iterate>
  40934c:	tbnz	w0, #0, 409354 <manager_startup+0x7ac>
  409350:	b	409360 <manager_startup+0x7b8>
  409354:	ldur	x0, [x29, #-48]
  409358:	bl	43ae00 <user_start>
  40935c:	b	409330 <manager_startup+0x788>
  409360:	add	x8, sp, #0x60
  409364:	mov	w9, #0xfffffffe            	// #-2
  409368:	str	w9, [sp, #96]
  40936c:	mov	x10, xzr
  409370:	str	x10, [x8, #8]
  409374:	ldr	q0, [sp, #96]
  409378:	stur	q0, [x29, #-80]
  40937c:	ldur	x8, [x29, #-16]
  409380:	ldr	x0, [x8, #32]
  409384:	sub	x1, x29, #0x50
  409388:	sub	x2, x29, #0x28
  40938c:	mov	x8, xzr
  409390:	mov	x3, x8
  409394:	bl	40cac8 <hashmap_iterate>
  409398:	tbnz	w0, #0, 4093a0 <manager_startup+0x7f8>
  40939c:	b	4093b8 <manager_startup+0x810>
  4093a0:	ldur	x0, [x29, #-40]
  4093a4:	mov	x8, xzr
  4093a8:	mov	x1, x8
  4093ac:	mov	x2, x8
  4093b0:	bl	435080 <session_start>
  4093b4:	b	40937c <manager_startup+0x7d4>
  4093b8:	add	x8, sp, #0x50
  4093bc:	mov	w9, #0xfffffffe            	// #-2
  4093c0:	str	w9, [sp, #80]
  4093c4:	mov	x10, xzr
  4093c8:	str	x10, [x8, #8]
  4093cc:	ldr	q0, [sp, #80]
  4093d0:	stur	q0, [x29, #-80]
  4093d4:	ldur	x8, [x29, #-16]
  4093d8:	ldr	x0, [x8, #56]
  4093dc:	sub	x1, x29, #0x50
  4093e0:	sub	x2, x29, #0x40
  4093e4:	mov	x8, xzr
  4093e8:	mov	x3, x8
  4093ec:	bl	40cac8 <hashmap_iterate>
  4093f0:	tbnz	w0, #0, 4093f8 <manager_startup+0x850>
  4093f4:	b	409428 <manager_startup+0x880>
  4093f8:	ldur	x0, [x29, #-64]
  4093fc:	bl	425094 <inhibitor_start>
  409400:	ldur	x8, [x29, #-64]
  409404:	mov	x0, x8
  409408:	bl	426668 <inhibitor_is_orphan>
  40940c:	tbnz	w0, #0, 409414 <manager_startup+0x86c>
  409410:	b	409424 <manager_startup+0x87c>
  409414:	ldur	x0, [x29, #-64]
  409418:	bl	425760 <inhibitor_stop>
  40941c:	ldur	x0, [x29, #-64]
  409420:	bl	424f8c <inhibitor_free>
  409424:	b	4093d4 <manager_startup+0x82c>
  409428:	add	x8, sp, #0x40
  40942c:	mov	w9, #0xfffffffe            	// #-2
  409430:	str	w9, [sp, #64]
  409434:	mov	x10, xzr
  409438:	str	x10, [x8, #8]
  40943c:	ldr	q0, [sp, #64]
  409440:	stur	q0, [x29, #-80]
  409444:	ldur	x8, [x29, #-16]
  409448:	ldr	x0, [x8, #64]
  40944c:	sub	x1, x29, #0x50
  409450:	sub	x2, x29, #0x38
  409454:	mov	x8, xzr
  409458:	mov	x3, x8
  40945c:	bl	40cac8 <hashmap_iterate>
  409460:	tbnz	w0, #0, 409468 <manager_startup+0x8c0>
  409464:	b	409474 <manager_startup+0x8cc>
  409468:	ldur	x0, [x29, #-56]
  40946c:	bl	410dd4 <button_check_switches>
  409470:	b	409444 <manager_startup+0x89c>
  409474:	ldur	x2, [x29, #-16]
  409478:	mov	x8, xzr
  40947c:	mov	x0, x8
  409480:	mov	x1, x8
  409484:	bl	40cb08 <manager_dispatch_idle_action>
  409488:	stur	wzr, [x29, #-4]
  40948c:	ldur	w0, [x29, #-4]
  409490:	ldr	x28, [sp, #400]
  409494:	ldp	x29, x30, [sp, #384]
  409498:	add	sp, sp, #0x1a0
  40949c:	ret

00000000004094a0 <manager_run>:
  4094a0:	sub	sp, sp, #0x30
  4094a4:	stp	x29, x30, [sp, #32]
  4094a8:	add	x29, sp, #0x20
  4094ac:	adrp	x8, 440000 <on_brightness_writer_exit+0x15c>
  4094b0:	add	x8, x8, #0x3f0
  4094b4:	add	x2, x8, #0x3
  4094b8:	str	x0, [sp, #16]
  4094bc:	str	x2, [sp]
  4094c0:	ldr	x8, [sp, #16]
  4094c4:	cmp	x8, #0x0
  4094c8:	cset	w9, ne  // ne = any
  4094cc:	mov	w10, #0x1                   	// #1
  4094d0:	eor	w9, w9, #0x1
  4094d4:	eor	w9, w9, w10
  4094d8:	eor	w9, w9, w10
  4094dc:	and	w9, w9, #0x1
  4094e0:	mov	w0, w9
  4094e4:	sxtw	x8, w0
  4094e8:	cbz	x8, 409510 <manager_run+0x70>
  4094ec:	mov	w8, wzr
  4094f0:	mov	w0, w8
  4094f4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4094f8:	add	x1, x1, #0x5ef
  4094fc:	ldr	x2, [sp]
  409500:	mov	w3, #0x491                 	// #1169
  409504:	adrp	x4, 441000 <_fini+0xc30>
  409508:	add	x4, x4, #0x85e
  40950c:	bl	406c68 <log_assert_failed_realm@plt>
  409510:	ldr	x8, [sp, #16]
  409514:	ldr	x0, [x8]
  409518:	bl	406d08 <sd_event_get_state@plt>
  40951c:	str	w0, [sp, #12]
  409520:	ldr	w9, [sp, #12]
  409524:	cmp	w9, #0x0
  409528:	cset	w9, ge  // ge = tcont
  40952c:	tbnz	w9, #0, 40953c <manager_run+0x9c>
  409530:	ldr	w8, [sp, #12]
  409534:	stur	w8, [x29, #-4]
  409538:	b	4095d8 <manager_run+0x138>
  40953c:	ldr	w8, [sp, #12]
  409540:	cmp	w8, #0x5
  409544:	b.ne	409550 <manager_run+0xb0>  // b.any
  409548:	stur	wzr, [x29, #-4]
  40954c:	b	4095d8 <manager_run+0x138>
  409550:	ldr	x0, [sp, #16]
  409554:	mov	w8, #0x1                   	// #1
  409558:	and	w1, w8, #0x1
  40955c:	bl	40c3a4 <manager_gc>
  409560:	ldr	x0, [sp, #16]
  409564:	mov	w8, wzr
  409568:	and	w1, w8, #0x1
  40956c:	bl	414f74 <manager_dispatch_delayed>
  409570:	str	w0, [sp, #12]
  409574:	ldr	w8, [sp, #12]
  409578:	cmp	w8, #0x0
  40957c:	cset	w8, ge  // ge = tcont
  409580:	tbnz	w8, #0, 409590 <manager_run+0xf0>
  409584:	ldr	w8, [sp, #12]
  409588:	stur	w8, [x29, #-4]
  40958c:	b	4095d8 <manager_run+0x138>
  409590:	ldr	w8, [sp, #12]
  409594:	cmp	w8, #0x0
  409598:	cset	w8, le
  40959c:	tbnz	w8, #0, 4095a4 <manager_run+0x104>
  4095a0:	b	409510 <manager_run+0x70>
  4095a4:	ldr	x8, [sp, #16]
  4095a8:	ldr	x0, [x8]
  4095ac:	mov	x1, #0xffffffffffffffff    	// #-1
  4095b0:	bl	406d18 <sd_event_run@plt>
  4095b4:	str	w0, [sp, #12]
  4095b8:	ldr	w9, [sp, #12]
  4095bc:	cmp	w9, #0x0
  4095c0:	cset	w9, ge  // ge = tcont
  4095c4:	tbnz	w9, #0, 4095d4 <manager_run+0x134>
  4095c8:	ldr	w8, [sp, #12]
  4095cc:	stur	w8, [x29, #-4]
  4095d0:	b	4095d8 <manager_run+0x138>
  4095d4:	b	409510 <manager_run+0x70>
  4095d8:	ldur	w0, [x29, #-4]
  4095dc:	ldp	x29, x30, [sp, #32]
  4095e0:	add	sp, sp, #0x30
  4095e4:	ret

00000000004095e8 <manager_unref>:
  4095e8:	sub	sp, sp, #0x50
  4095ec:	stp	x29, x30, [sp, #64]
  4095f0:	add	x29, sp, #0x40
  4095f4:	stur	x0, [x29, #-16]
  4095f8:	ldur	x8, [x29, #-16]
  4095fc:	cbnz	x8, 40960c <manager_unref+0x24>
  409600:	mov	x8, xzr
  409604:	stur	x8, [x29, #-8]
  409608:	b	4098ec <manager_unref+0x304>
  40960c:	ldur	x8, [x29, #-16]
  409610:	ldr	x0, [x8, #32]
  409614:	bl	4098fc <hashmap_first>
  409618:	stur	x0, [x29, #-24]
  40961c:	cbz	x0, 40962c <manager_unref+0x44>
  409620:	ldur	x0, [x29, #-24]
  409624:	bl	432104 <session_free>
  409628:	b	40960c <manager_unref+0x24>
  40962c:	ldur	x8, [x29, #-16]
  409630:	ldr	x0, [x8, #48]
  409634:	bl	4098fc <hashmap_first>
  409638:	str	x0, [sp, #32]
  40963c:	cbz	x0, 40964c <manager_unref+0x64>
  409640:	ldr	x0, [sp, #32]
  409644:	bl	439fc0 <user_free>
  409648:	b	40962c <manager_unref+0x44>
  40964c:	ldur	x8, [x29, #-16]
  409650:	ldr	x0, [x8, #16]
  409654:	bl	4098fc <hashmap_first>
  409658:	str	x0, [sp, #24]
  40965c:	cbz	x0, 40966c <manager_unref+0x84>
  409660:	ldr	x0, [sp, #24]
  409664:	bl	424610 <device_free>
  409668:	b	40964c <manager_unref+0x64>
  40966c:	ldur	x8, [x29, #-16]
  409670:	ldr	x0, [x8, #24]
  409674:	bl	4098fc <hashmap_first>
  409678:	str	x0, [sp, #16]
  40967c:	cbz	x0, 40968c <manager_unref+0xa4>
  409680:	ldr	x0, [sp, #16]
  409684:	bl	4293c8 <seat_free>
  409688:	b	40966c <manager_unref+0x84>
  40968c:	ldur	x8, [x29, #-16]
  409690:	ldr	x0, [x8, #56]
  409694:	bl	4098fc <hashmap_first>
  409698:	str	x0, [sp, #8]
  40969c:	cbz	x0, 4096ac <manager_unref+0xc4>
  4096a0:	ldr	x0, [sp, #8]
  4096a4:	bl	424f8c <inhibitor_free>
  4096a8:	b	40968c <manager_unref+0xa4>
  4096ac:	ldur	x8, [x29, #-16]
  4096b0:	ldr	x0, [x8, #64]
  4096b4:	bl	4098fc <hashmap_first>
  4096b8:	str	x0, [sp]
  4096bc:	cbz	x0, 4096cc <manager_unref+0xe4>
  4096c0:	ldr	x0, [sp]
  4096c4:	bl	40f818 <button_free>
  4096c8:	b	4096ac <manager_unref+0xc4>
  4096cc:	ldur	x8, [x29, #-16]
  4096d0:	ldr	x0, [x8, #16]
  4096d4:	bl	409930 <hashmap_free>
  4096d8:	ldur	x8, [x29, #-16]
  4096dc:	ldr	x8, [x8, #24]
  4096e0:	mov	x0, x8
  4096e4:	bl	409930 <hashmap_free>
  4096e8:	ldur	x8, [x29, #-16]
  4096ec:	ldr	x8, [x8, #32]
  4096f0:	mov	x0, x8
  4096f4:	bl	409930 <hashmap_free>
  4096f8:	ldur	x8, [x29, #-16]
  4096fc:	ldr	x8, [x8, #40]
  409700:	mov	x0, x8
  409704:	bl	409930 <hashmap_free>
  409708:	ldur	x8, [x29, #-16]
  40970c:	ldr	x8, [x8, #48]
  409710:	mov	x0, x8
  409714:	bl	409930 <hashmap_free>
  409718:	ldur	x8, [x29, #-16]
  40971c:	ldr	x8, [x8, #56]
  409720:	mov	x0, x8
  409724:	bl	409930 <hashmap_free>
  409728:	ldur	x8, [x29, #-16]
  40972c:	ldr	x8, [x8, #64]
  409730:	mov	x0, x8
  409734:	bl	409930 <hashmap_free>
  409738:	ldur	x8, [x29, #-16]
  40973c:	ldr	x8, [x8, #72]
  409740:	mov	x0, x8
  409744:	bl	409930 <hashmap_free>
  409748:	ldur	x8, [x29, #-16]
  40974c:	ldr	x8, [x8, #224]
  409750:	mov	x0, x8
  409754:	bl	409930 <hashmap_free>
  409758:	ldur	x8, [x29, #-16]
  40975c:	ldr	x8, [x8, #216]
  409760:	mov	x0, x8
  409764:	bl	409930 <hashmap_free>
  409768:	ldur	x8, [x29, #-16]
  40976c:	ldr	x8, [x8, #368]
  409770:	mov	x0, x8
  409774:	bl	406d28 <sd_event_source_unref@plt>
  409778:	ldur	x8, [x29, #-16]
  40977c:	ldr	x8, [x8, #272]
  409780:	mov	x0, x8
  409784:	bl	406d28 <sd_event_source_unref@plt>
  409788:	ldur	x8, [x29, #-16]
  40978c:	ldr	x8, [x8, #296]
  409790:	mov	x0, x8
  409794:	bl	406d28 <sd_event_source_unref@plt>
  409798:	ldur	x8, [x29, #-16]
  40979c:	ldr	x8, [x8, #320]
  4097a0:	mov	x0, x8
  4097a4:	bl	406d28 <sd_event_source_unref@plt>
  4097a8:	ldur	x8, [x29, #-16]
  4097ac:	ldr	x8, [x8, #352]
  4097b0:	mov	x0, x8
  4097b4:	bl	406d28 <sd_event_source_unref@plt>
  4097b8:	ldur	x8, [x29, #-16]
  4097bc:	ldr	x8, [x8, #136]
  4097c0:	mov	x0, x8
  4097c4:	bl	406d28 <sd_event_source_unref@plt>
  4097c8:	ldur	x8, [x29, #-16]
  4097cc:	ldr	x8, [x8, #448]
  4097d0:	mov	x0, x8
  4097d4:	bl	406d28 <sd_event_source_unref@plt>
  4097d8:	ldur	x8, [x29, #-16]
  4097dc:	ldr	x8, [x8, #144]
  4097e0:	mov	x0, x8
  4097e4:	bl	406d28 <sd_event_source_unref@plt>
  4097e8:	ldur	x8, [x29, #-16]
  4097ec:	ldr	w9, [x8, #152]
  4097f0:	mov	w0, w9
  4097f4:	bl	406d38 <safe_close@plt>
  4097f8:	ldur	x8, [x29, #-16]
  4097fc:	ldr	x8, [x8, #104]
  409800:	mov	x0, x8
  409804:	bl	406d48 <sd_device_monitor_unref@plt>
  409808:	ldur	x8, [x29, #-16]
  40980c:	ldr	x8, [x8, #112]
  409810:	mov	x0, x8
  409814:	bl	406d48 <sd_device_monitor_unref@plt>
  409818:	ldur	x8, [x29, #-16]
  40981c:	ldr	x8, [x8, #120]
  409820:	mov	x0, x8
  409824:	bl	406d48 <sd_device_monitor_unref@plt>
  409828:	ldur	x8, [x29, #-16]
  40982c:	ldr	x8, [x8, #128]
  409830:	mov	x0, x8
  409834:	bl	406d48 <sd_device_monitor_unref@plt>
  409838:	ldur	x8, [x29, #-16]
  40983c:	ldrb	w9, [x8, #328]
  409840:	tbnz	w9, #0, 409848 <manager_unref+0x260>
  409844:	b	409854 <manager_unref+0x26c>
  409848:	adrp	x0, 440000 <on_brightness_writer_exit+0x15c>
  40984c:	add	x0, x0, #0x5c2
  409850:	bl	406d58 <unlink_or_warn@plt>
  409854:	ldur	x8, [x29, #-16]
  409858:	ldr	x0, [x8, #432]
  40985c:	bl	406d68 <bus_verify_polkit_async_registry_free@plt>
  409860:	ldur	x8, [x29, #-16]
  409864:	ldr	x0, [x8, #8]
  409868:	bl	406d78 <sd_bus_flush_close_unref@plt>
  40986c:	ldur	x8, [x29, #-16]
  409870:	ldr	x8, [x8]
  409874:	mov	x0, x8
  409878:	bl	406d88 <sd_event_unref@plt>
  40987c:	ldur	x8, [x29, #-16]
  409880:	ldr	w9, [x8, #164]
  409884:	mov	w0, w9
  409888:	bl	406d38 <safe_close@plt>
  40988c:	ldur	x8, [x29, #-16]
  409890:	ldr	x8, [x8, #176]
  409894:	mov	x0, x8
  409898:	bl	406d98 <strv_free@plt>
  40989c:	ldur	x8, [x29, #-16]
  4098a0:	ldr	x8, [x8, #184]
  4098a4:	mov	x0, x8
  4098a8:	bl	406d98 <strv_free@plt>
  4098ac:	ldur	x8, [x29, #-16]
  4098b0:	ldr	x8, [x8, #280]
  4098b4:	mov	x0, x8
  4098b8:	bl	406da8 <free@plt>
  4098bc:	ldur	x8, [x29, #-16]
  4098c0:	ldr	x0, [x8, #312]
  4098c4:	bl	406da8 <free@plt>
  4098c8:	ldur	x8, [x29, #-16]
  4098cc:	ldr	x0, [x8, #336]
  4098d0:	bl	406da8 <free@plt>
  4098d4:	ldur	x8, [x29, #-16]
  4098d8:	ldr	x0, [x8, #264]
  4098dc:	bl	406da8 <free@plt>
  4098e0:	ldur	x0, [x29, #-16]
  4098e4:	bl	409960 <mfree>
  4098e8:	stur	x0, [x29, #-8]
  4098ec:	ldur	x0, [x29, #-8]
  4098f0:	ldp	x29, x30, [sp, #64]
  4098f4:	add	sp, sp, #0x50
  4098f8:	ret

00000000004098fc <hashmap_first>:
  4098fc:	sub	sp, sp, #0x20
  409900:	stp	x29, x30, [sp, #16]
  409904:	add	x29, sp, #0x10
  409908:	mov	x8, xzr
  40990c:	str	x0, [sp, #8]
  409910:	ldr	x0, [sp, #8]
  409914:	mov	w9, wzr
  409918:	and	w1, w9, #0x1
  40991c:	mov	x2, x8
  409920:	bl	406db8 <internal_hashmap_first_key_and_value@plt>
  409924:	ldp	x29, x30, [sp, #16]
  409928:	add	sp, sp, #0x20
  40992c:	ret

0000000000409930 <hashmap_free>:
  409930:	sub	sp, sp, #0x20
  409934:	stp	x29, x30, [sp, #16]
  409938:	add	x29, sp, #0x10
  40993c:	mov	x8, xzr
  409940:	str	x0, [sp, #8]
  409944:	ldr	x0, [sp, #8]
  409948:	mov	x1, x8
  40994c:	mov	x2, x8
  409950:	bl	406dc8 <internal_hashmap_free@plt>
  409954:	ldp	x29, x30, [sp, #16]
  409958:	add	sp, sp, #0x20
  40995c:	ret

0000000000409960 <mfree>:
  409960:	sub	sp, sp, #0x20
  409964:	stp	x29, x30, [sp, #16]
  409968:	add	x29, sp, #0x10
  40996c:	mov	x8, xzr
  409970:	str	x0, [sp, #8]
  409974:	ldr	x0, [sp, #8]
  409978:	str	x8, [sp]
  40997c:	bl	406da8 <free@plt>
  409980:	ldr	x0, [sp]
  409984:	ldp	x29, x30, [sp, #16]
  409988:	add	sp, sp, #0x20
  40998c:	ret

0000000000409990 <malloc_multiply>:
  409990:	sub	sp, sp, #0x40
  409994:	stp	x29, x30, [sp, #48]
  409998:	add	x29, sp, #0x30
  40999c:	stur	x0, [x29, #-16]
  4099a0:	str	x1, [sp, #24]
  4099a4:	ldur	x0, [x29, #-16]
  4099a8:	ldr	x1, [sp, #24]
  4099ac:	bl	409a0c <size_multiply_overflow>
  4099b0:	tbnz	w0, #0, 4099b8 <malloc_multiply+0x28>
  4099b4:	b	4099c4 <malloc_multiply+0x34>
  4099b8:	mov	x8, xzr
  4099bc:	stur	x8, [x29, #-8]
  4099c0:	b	4099fc <malloc_multiply+0x6c>
  4099c4:	ldur	x8, [x29, #-16]
  4099c8:	ldr	x9, [sp, #24]
  4099cc:	mul	x8, x8, x9
  4099d0:	str	x8, [sp, #16]
  4099d4:	cbz	x8, 4099e4 <malloc_multiply+0x54>
  4099d8:	ldr	x8, [sp, #16]
  4099dc:	str	x8, [sp, #8]
  4099e0:	b	4099ec <malloc_multiply+0x5c>
  4099e4:	mov	x8, #0x1                   	// #1
  4099e8:	str	x8, [sp, #8]
  4099ec:	ldr	x8, [sp, #8]
  4099f0:	mov	x0, x8
  4099f4:	bl	406dd8 <malloc@plt>
  4099f8:	stur	x0, [x29, #-8]
  4099fc:	ldur	x0, [x29, #-8]
  409a00:	ldp	x29, x30, [sp, #48]
  409a04:	add	sp, sp, #0x40
  409a08:	ret

0000000000409a0c <size_multiply_overflow>:
  409a0c:	sub	sp, sp, #0x20
  409a10:	str	x0, [sp, #24]
  409a14:	str	x1, [sp, #16]
  409a18:	ldr	x8, [sp, #16]
  409a1c:	mov	w9, #0x0                   	// #0
  409a20:	str	w9, [sp, #12]
  409a24:	cbz	x8, 409a44 <size_multiply_overflow+0x38>
  409a28:	ldr	x8, [sp, #24]
  409a2c:	ldr	x9, [sp, #16]
  409a30:	mov	x10, #0xffffffffffffffff    	// #-1
  409a34:	udiv	x9, x10, x9
  409a38:	cmp	x8, x9
  409a3c:	cset	w11, hi  // hi = pmore
  409a40:	str	w11, [sp, #12]
  409a44:	ldr	w8, [sp, #12]
  409a48:	mov	w9, #0x1                   	// #1
  409a4c:	eor	w8, w8, #0x1
  409a50:	eor	w8, w8, w9
  409a54:	and	w8, w8, #0x1
  409a58:	mov	w0, w8
  409a5c:	sxtw	x10, w0
  409a60:	cmp	x10, #0x0
  409a64:	cset	w8, ne  // ne = any
  409a68:	and	w0, w8, #0x1
  409a6c:	add	sp, sp, #0x20
  409a70:	ret

0000000000409a74 <manager_dispatch_reload_signal>:
  409a74:	sub	sp, sp, #0x70
  409a78:	stp	x29, x30, [sp, #96]
  409a7c:	add	x29, sp, #0x60
  409a80:	adrp	x8, 440000 <on_brightness_writer_exit+0x15c>
  409a84:	add	x8, x8, #0x3f0
  409a88:	add	x8, x8, #0x3
  409a8c:	stur	x0, [x29, #-8]
  409a90:	stur	x1, [x29, #-16]
  409a94:	stur	x2, [x29, #-24]
  409a98:	ldur	x9, [x29, #-24]
  409a9c:	stur	x9, [x29, #-32]
  409aa0:	ldur	x0, [x29, #-32]
  409aa4:	str	x8, [sp, #16]
  409aa8:	bl	411298 <manager_reset_config>
  409aac:	ldur	x0, [x29, #-32]
  409ab0:	bl	41143c <manager_parse_config_file>
  409ab4:	stur	w0, [x29, #-36]
  409ab8:	ldur	w10, [x29, #-36]
  409abc:	cmp	w10, #0x0
  409ac0:	cset	w10, ge  // ge = tcont
  409ac4:	tbnz	w10, #0, 409b48 <manager_dispatch_reload_signal+0xd4>
  409ac8:	mov	w8, #0x4                   	// #4
  409acc:	stur	w8, [x29, #-40]
  409ad0:	ldur	w8, [x29, #-36]
  409ad4:	stur	w8, [x29, #-44]
  409ad8:	str	wzr, [sp, #48]
  409adc:	ldr	w0, [sp, #48]
  409ae0:	bl	406c08 <log_get_max_level_realm@plt>
  409ae4:	ldur	w8, [x29, #-40]
  409ae8:	and	w8, w8, #0x7
  409aec:	cmp	w0, w8
  409af0:	b.lt	409b28 <manager_dispatch_reload_signal+0xb4>  // b.tstop
  409af4:	ldr	w8, [sp, #48]
  409af8:	ldur	w9, [x29, #-40]
  409afc:	orr	w0, w9, w8, lsl #10
  409b00:	ldur	w1, [x29, #-44]
  409b04:	ldr	x2, [sp, #16]
  409b08:	mov	w3, #0x41f                 	// #1055
  409b0c:	adrp	x4, 440000 <on_brightness_writer_exit+0x15c>
  409b10:	add	x4, x4, #0x76f
  409b14:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  409b18:	add	x5, x5, #0x78e
  409b1c:	bl	406c18 <log_internal_realm@plt>
  409b20:	str	w0, [sp, #12]
  409b24:	b	409b3c <manager_dispatch_reload_signal+0xc8>
  409b28:	ldur	w0, [x29, #-44]
  409b2c:	bl	406c28 <abs@plt>
  409b30:	mov	w8, wzr
  409b34:	subs	w8, w8, w0, uxtb
  409b38:	str	w8, [sp, #12]
  409b3c:	ldr	w8, [sp, #12]
  409b40:	str	w8, [sp, #44]
  409b44:	b	409bc0 <manager_dispatch_reload_signal+0x14c>
  409b48:	mov	w8, #0x6                   	// #6
  409b4c:	str	w8, [sp, #40]
  409b50:	str	wzr, [sp, #36]
  409b54:	str	wzr, [sp, #32]
  409b58:	ldr	w0, [sp, #32]
  409b5c:	bl	406c08 <log_get_max_level_realm@plt>
  409b60:	ldr	w8, [sp, #40]
  409b64:	and	w8, w8, #0x7
  409b68:	cmp	w0, w8
  409b6c:	b.lt	409ba4 <manager_dispatch_reload_signal+0x130>  // b.tstop
  409b70:	ldr	w8, [sp, #32]
  409b74:	ldr	w9, [sp, #40]
  409b78:	orr	w0, w9, w8, lsl #10
  409b7c:	ldr	w1, [sp, #36]
  409b80:	ldr	x2, [sp, #16]
  409b84:	mov	w3, #0x421                 	// #1057
  409b88:	adrp	x4, 440000 <on_brightness_writer_exit+0x15c>
  409b8c:	add	x4, x4, #0x76f
  409b90:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  409b94:	add	x5, x5, #0x7be
  409b98:	bl	406c18 <log_internal_realm@plt>
  409b9c:	str	w0, [sp, #8]
  409ba0:	b	409bb8 <manager_dispatch_reload_signal+0x144>
  409ba4:	ldr	w0, [sp, #36]
  409ba8:	bl	406c28 <abs@plt>
  409bac:	mov	w8, wzr
  409bb0:	subs	w8, w8, w0, uxtb
  409bb4:	str	w8, [sp, #8]
  409bb8:	ldr	w8, [sp, #8]
  409bbc:	str	w8, [sp, #28]
  409bc0:	mov	w8, wzr
  409bc4:	mov	w0, w8
  409bc8:	ldp	x29, x30, [sp, #96]
  409bcc:	add	sp, sp, #0x70
  409bd0:	ret

0000000000409bd4 <manager_connect_console>:
  409bd4:	sub	sp, sp, #0xd0
  409bd8:	stp	x29, x30, [sp, #192]
  409bdc:	add	x29, sp, #0xc0
  409be0:	adrp	x8, 440000 <on_brightness_writer_exit+0x15c>
  409be4:	add	x8, x8, #0x3f0
  409be8:	add	x8, x8, #0x3
  409bec:	adrp	x9, 440000 <on_brightness_writer_exit+0x15c>
  409bf0:	add	x9, x9, #0x839
  409bf4:	adrp	x10, 440000 <on_brightness_writer_exit+0x15c>
  409bf8:	add	x10, x10, #0x7d4
  409bfc:	stur	x0, [x29, #-16]
  409c00:	str	x8, [sp, #80]
  409c04:	str	x9, [sp, #72]
  409c08:	str	x10, [sp, #64]
  409c0c:	ldur	x8, [x29, #-16]
  409c10:	cmp	x8, #0x0
  409c14:	cset	w9, ne  // ne = any
  409c18:	mov	w10, #0x1                   	// #1
  409c1c:	eor	w9, w9, #0x1
  409c20:	eor	w9, w9, w10
  409c24:	eor	w9, w9, w10
  409c28:	and	w9, w9, #0x1
  409c2c:	mov	w0, w9
  409c30:	sxtw	x8, w0
  409c34:	cbz	x8, 409c58 <manager_connect_console+0x84>
  409c38:	mov	w8, wzr
  409c3c:	mov	w0, w8
  409c40:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  409c44:	add	x1, x1, #0x5ef
  409c48:	ldr	x2, [sp, #80]
  409c4c:	mov	w3, #0x312                 	// #786
  409c50:	ldr	x4, [sp, #64]
  409c54:	bl	406c68 <log_assert_failed_realm@plt>
  409c58:	ldur	x8, [x29, #-16]
  409c5c:	ldr	w9, [x8, #152]
  409c60:	cmp	w9, #0x0
  409c64:	cset	w9, lt  // lt = tstop
  409c68:	mov	w10, #0x1                   	// #1
  409c6c:	eor	w9, w9, #0x1
  409c70:	eor	w9, w9, w10
  409c74:	eor	w9, w9, w10
  409c78:	and	w9, w9, #0x1
  409c7c:	mov	w0, w9
  409c80:	sxtw	x8, w0
  409c84:	cbz	x8, 409ca8 <manager_connect_console+0xd4>
  409c88:	mov	w8, wzr
  409c8c:	mov	w0, w8
  409c90:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  409c94:	add	x1, x1, #0x7fb
  409c98:	ldr	x2, [sp, #80]
  409c9c:	mov	w3, #0x313                 	// #787
  409ca0:	ldr	x4, [sp, #64]
  409ca4:	bl	406c68 <log_assert_failed_realm@plt>
  409ca8:	adrp	x0, 440000 <on_brightness_writer_exit+0x15c>
  409cac:	add	x0, x0, #0x814
  409cb0:	mov	w8, wzr
  409cb4:	mov	w1, w8
  409cb8:	bl	406de8 <access@plt>
  409cbc:	cmp	w0, #0x0
  409cc0:	cset	w8, ge  // ge = tcont
  409cc4:	tbnz	w8, #0, 409cd0 <manager_connect_console+0xfc>
  409cc8:	stur	wzr, [x29, #-4]
  409ccc:	b	40a14c <manager_connect_console+0x578>
  409cd0:	adrp	x0, 440000 <on_brightness_writer_exit+0x15c>
  409cd4:	add	x0, x0, #0x81e
  409cd8:	mov	w1, #0x100                 	// #256
  409cdc:	movk	w1, #0x8, lsl #16
  409ce0:	bl	406df8 <open64@plt>
  409ce4:	ldur	x8, [x29, #-16]
  409ce8:	str	w0, [x8, #152]
  409cec:	ldur	x8, [x29, #-16]
  409cf0:	ldr	w9, [x8, #152]
  409cf4:	cmp	w9, #0x0
  409cf8:	cset	w9, ge  // ge = tcont
  409cfc:	tbnz	w9, #0, 409e1c <manager_connect_console+0x248>
  409d00:	bl	406e08 <__errno_location@plt>
  409d04:	ldr	w8, [x0]
  409d08:	cmp	w8, #0x2
  409d0c:	b.ne	409d94 <manager_connect_console+0x1c0>  // b.any
  409d10:	mov	w8, #0x4                   	// #4
  409d14:	stur	w8, [x29, #-24]
  409d18:	bl	406e08 <__errno_location@plt>
  409d1c:	ldr	w8, [x0]
  409d20:	stur	w8, [x29, #-28]
  409d24:	stur	wzr, [x29, #-32]
  409d28:	ldur	w0, [x29, #-32]
  409d2c:	bl	406c08 <log_get_max_level_realm@plt>
  409d30:	ldur	w8, [x29, #-24]
  409d34:	and	w8, w8, #0x7
  409d38:	cmp	w0, w8
  409d3c:	b.lt	409d70 <manager_connect_console+0x19c>  // b.tstop
  409d40:	ldur	w8, [x29, #-32]
  409d44:	ldur	w9, [x29, #-24]
  409d48:	orr	w0, w9, w8, lsl #10
  409d4c:	ldur	w1, [x29, #-28]
  409d50:	ldr	x2, [sp, #80]
  409d54:	mov	w3, #0x321                 	// #801
  409d58:	ldr	x4, [sp, #72]
  409d5c:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  409d60:	add	x5, x5, #0x851
  409d64:	bl	406c18 <log_internal_realm@plt>
  409d68:	str	w0, [sp, #60]
  409d6c:	b	409d84 <manager_connect_console+0x1b0>
  409d70:	ldur	w0, [x29, #-28]
  409d74:	bl	406c28 <abs@plt>
  409d78:	mov	w8, wzr
  409d7c:	subs	w8, w8, w0, uxtb
  409d80:	str	w8, [sp, #60]
  409d84:	ldr	w8, [sp, #60]
  409d88:	stur	w8, [x29, #-36]
  409d8c:	stur	wzr, [x29, #-4]
  409d90:	b	40a14c <manager_connect_console+0x578>
  409d94:	mov	w8, #0x3                   	// #3
  409d98:	stur	w8, [x29, #-40]
  409d9c:	bl	406e08 <__errno_location@plt>
  409da0:	ldr	w8, [x0]
  409da4:	stur	w8, [x29, #-44]
  409da8:	stur	wzr, [x29, #-48]
  409dac:	ldur	w0, [x29, #-48]
  409db0:	bl	406c08 <log_get_max_level_realm@plt>
  409db4:	ldur	w8, [x29, #-40]
  409db8:	and	w8, w8, #0x7
  409dbc:	cmp	w0, w8
  409dc0:	b.lt	409df4 <manager_connect_console+0x220>  // b.tstop
  409dc4:	ldur	w8, [x29, #-48]
  409dc8:	ldur	w9, [x29, #-40]
  409dcc:	orr	w0, w9, w8, lsl #10
  409dd0:	ldur	w1, [x29, #-44]
  409dd4:	ldr	x2, [sp, #80]
  409dd8:	mov	w3, #0x325                 	// #805
  409ddc:	ldr	x4, [sp, #72]
  409de0:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  409de4:	add	x5, x5, #0x8a7
  409de8:	bl	406c18 <log_internal_realm@plt>
  409dec:	str	w0, [sp, #56]
  409df0:	b	409e08 <manager_connect_console+0x234>
  409df4:	ldur	w0, [x29, #-44]
  409df8:	bl	406c28 <abs@plt>
  409dfc:	mov	w8, wzr
  409e00:	subs	w8, w8, w0, uxtb
  409e04:	str	w8, [sp, #56]
  409e08:	ldr	w8, [sp, #56]
  409e0c:	stur	w8, [x29, #-52]
  409e10:	ldur	w8, [x29, #-52]
  409e14:	stur	w8, [x29, #-4]
  409e18:	b	40a14c <manager_connect_console+0x578>
  409e1c:	ldur	x8, [x29, #-16]
  409e20:	ldr	x0, [x8]
  409e24:	ldur	x8, [x29, #-16]
  409e28:	add	x1, x8, #0x88
  409e2c:	ldur	x8, [x29, #-16]
  409e30:	ldr	w2, [x8, #152]
  409e34:	ldur	x5, [x29, #-16]
  409e38:	mov	w9, wzr
  409e3c:	mov	w3, w9
  409e40:	adrp	x4, 40d000 <manager_dispatch_idle_action+0x4f8>
  409e44:	add	x4, x4, #0x60
  409e48:	bl	406e18 <sd_event_add_io@plt>
  409e4c:	stur	w0, [x29, #-20]
  409e50:	ldur	w9, [x29, #-20]
  409e54:	cmp	w9, #0x0
  409e58:	cset	w9, ge  // ge = tcont
  409e5c:	tbnz	w9, #0, 409ee4 <manager_connect_console+0x310>
  409e60:	mov	w8, #0x3                   	// #3
  409e64:	stur	w8, [x29, #-56]
  409e68:	ldur	w8, [x29, #-20]
  409e6c:	stur	w8, [x29, #-60]
  409e70:	stur	wzr, [x29, #-64]
  409e74:	ldur	w0, [x29, #-64]
  409e78:	bl	406c08 <log_get_max_level_realm@plt>
  409e7c:	ldur	w8, [x29, #-56]
  409e80:	and	w8, w8, #0x7
  409e84:	cmp	w0, w8
  409e88:	b.lt	409ebc <manager_connect_console+0x2e8>  // b.tstop
  409e8c:	ldur	w8, [x29, #-64]
  409e90:	ldur	w9, [x29, #-56]
  409e94:	orr	w0, w9, w8, lsl #10
  409e98:	ldur	w1, [x29, #-60]
  409e9c:	ldr	x2, [sp, #80]
  409ea0:	mov	w3, #0x32a                 	// #810
  409ea4:	ldr	x4, [sp, #72]
  409ea8:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  409eac:	add	x5, x5, #0x8d5
  409eb0:	bl	406c18 <log_internal_realm@plt>
  409eb4:	str	w0, [sp, #52]
  409eb8:	b	409ed0 <manager_connect_console+0x2fc>
  409ebc:	ldur	w0, [x29, #-60]
  409ec0:	bl	406c28 <abs@plt>
  409ec4:	mov	w8, wzr
  409ec8:	subs	w8, w8, w0, uxtb
  409ecc:	str	w8, [sp, #52]
  409ed0:	ldr	w8, [sp, #52]
  409ed4:	stur	w8, [x29, #-68]
  409ed8:	ldur	w8, [x29, #-68]
  409edc:	stur	w8, [x29, #-4]
  409ee0:	b	40a14c <manager_connect_console+0x578>
  409ee4:	bl	406e28 <__libc_current_sigrtmin@plt>
  409ee8:	add	w8, w0, #0x1
  409eec:	str	w8, [sp, #48]
  409ef0:	bl	406e38 <__libc_current_sigrtmax@plt>
  409ef4:	ldr	w8, [sp, #48]
  409ef8:	cmp	w8, w0
  409efc:	b.le	409fb4 <manager_connect_console+0x3e0>
  409f00:	mov	w8, #0x3                   	// #3
  409f04:	stur	w8, [x29, #-72]
  409f08:	mov	w8, #0x16                  	// #22
  409f0c:	movk	w8, #0x4000, lsl #16
  409f10:	stur	w8, [x29, #-76]
  409f14:	stur	wzr, [x29, #-80]
  409f18:	ldur	w0, [x29, #-80]
  409f1c:	bl	406c08 <log_get_max_level_realm@plt>
  409f20:	ldur	w8, [x29, #-72]
  409f24:	and	w8, w8, #0x7
  409f28:	cmp	w0, w8
  409f2c:	b.lt	409f8c <manager_connect_console+0x3b8>  // b.tstop
  409f30:	ldur	w8, [x29, #-80]
  409f34:	ldur	w9, [x29, #-72]
  409f38:	orr	w0, w9, w8, lsl #10
  409f3c:	ldur	w1, [x29, #-76]
  409f40:	str	w0, [sp, #44]
  409f44:	str	w1, [sp, #40]
  409f48:	bl	406e28 <__libc_current_sigrtmin@plt>
  409f4c:	str	w0, [sp, #36]
  409f50:	bl	406e38 <__libc_current_sigrtmax@plt>
  409f54:	ldr	w8, [sp, #44]
  409f58:	str	w0, [sp, #32]
  409f5c:	mov	w0, w8
  409f60:	ldr	w1, [sp, #40]
  409f64:	ldr	x2, [sp, #80]
  409f68:	mov	w3, #0x336                 	// #822
  409f6c:	ldr	x4, [sp, #72]
  409f70:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  409f74:	add	x5, x5, #0x8fc
  409f78:	ldr	w6, [sp, #36]
  409f7c:	ldr	w7, [sp, #32]
  409f80:	bl	406c18 <log_internal_realm@plt>
  409f84:	str	w0, [sp, #28]
  409f88:	b	409fa0 <manager_connect_console+0x3cc>
  409f8c:	ldur	w0, [x29, #-76]
  409f90:	bl	406c28 <abs@plt>
  409f94:	mov	w8, wzr
  409f98:	subs	w8, w8, w0, uxtb
  409f9c:	str	w8, [sp, #28]
  409fa0:	ldr	w8, [sp, #28]
  409fa4:	stur	w8, [x29, #-84]
  409fa8:	ldur	w8, [x29, #-84]
  409fac:	stur	w8, [x29, #-4]
  409fb0:	b	40a14c <manager_connect_console+0x578>
  409fb4:	bl	406e28 <__libc_current_sigrtmin@plt>
  409fb8:	add	w0, w0, #0x1
  409fbc:	mov	w1, #0xffffffff            	// #-1
  409fc0:	bl	406e48 <ignore_signals@plt>
  409fc4:	cmp	w0, #0x0
  409fc8:	cset	w8, ge  // ge = tcont
  409fcc:	mov	w9, #0x1                   	// #1
  409fd0:	eor	w8, w8, #0x1
  409fd4:	eor	w8, w8, w9
  409fd8:	eor	w8, w8, w9
  409fdc:	and	w8, w8, #0x1
  409fe0:	mov	w2, w8
  409fe4:	sxtw	x10, w2
  409fe8:	cbz	x10, 40a00c <manager_connect_console+0x438>
  409fec:	mov	w8, wzr
  409ff0:	mov	w0, w8
  409ff4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  409ff8:	add	x1, x1, #0x92a
  409ffc:	ldr	x2, [sp, #80]
  40a000:	mov	w3, #0x338                 	// #824
  40a004:	ldr	x4, [sp, #64]
  40a008:	bl	406c68 <log_assert_failed_realm@plt>
  40a00c:	bl	406e28 <__libc_current_sigrtmin@plt>
  40a010:	mov	w8, wzr
  40a014:	str	w0, [sp, #24]
  40a018:	mov	w0, w8
  40a01c:	mov	x9, xzr
  40a020:	mov	x1, x9
  40a024:	ldr	w2, [sp, #24]
  40a028:	mov	w3, #0xffffffff            	// #-1
  40a02c:	bl	406c58 <sigprocmask_many@plt>
  40a030:	cmp	w0, #0x0
  40a034:	cset	w8, ge  // ge = tcont
  40a038:	mov	w10, #0x1                   	// #1
  40a03c:	eor	w8, w8, #0x1
  40a040:	eor	w8, w8, w10
  40a044:	eor	w8, w8, w10
  40a048:	and	w8, w8, #0x1
  40a04c:	mov	w1, w8
  40a050:	sxtw	x9, w1
  40a054:	cbz	x9, 40a078 <manager_connect_console+0x4a4>
  40a058:	mov	w8, wzr
  40a05c:	mov	w0, w8
  40a060:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40a064:	add	x1, x1, #0x950
  40a068:	ldr	x2, [sp, #80]
  40a06c:	mov	w3, #0x339                 	// #825
  40a070:	ldr	x4, [sp, #64]
  40a074:	bl	406c68 <log_assert_failed_realm@plt>
  40a078:	ldur	x8, [x29, #-16]
  40a07c:	ldr	x0, [x8]
  40a080:	str	x0, [sp, #16]
  40a084:	bl	406e28 <__libc_current_sigrtmin@plt>
  40a088:	ldur	x4, [x29, #-16]
  40a08c:	ldr	x8, [sp, #16]
  40a090:	str	w0, [sp, #12]
  40a094:	mov	x0, x8
  40a098:	mov	x9, xzr
  40a09c:	mov	x1, x9
  40a0a0:	ldr	w2, [sp, #12]
  40a0a4:	adrp	x3, 40d000 <manager_dispatch_idle_action+0x4f8>
  40a0a8:	add	x3, x3, #0x1b0
  40a0ac:	bl	406ce8 <sd_event_add_signal@plt>
  40a0b0:	stur	w0, [x29, #-20]
  40a0b4:	ldur	w10, [x29, #-20]
  40a0b8:	cmp	w10, #0x0
  40a0bc:	cset	w10, ge  // ge = tcont
  40a0c0:	tbnz	w10, #0, 40a148 <manager_connect_console+0x574>
  40a0c4:	mov	w8, #0x3                   	// #3
  40a0c8:	stur	w8, [x29, #-88]
  40a0cc:	ldur	w8, [x29, #-20]
  40a0d0:	stur	w8, [x29, #-92]
  40a0d4:	str	wzr, [sp, #96]
  40a0d8:	ldr	w0, [sp, #96]
  40a0dc:	bl	406c08 <log_get_max_level_realm@plt>
  40a0e0:	ldur	w8, [x29, #-88]
  40a0e4:	and	w8, w8, #0x7
  40a0e8:	cmp	w0, w8
  40a0ec:	b.lt	40a120 <manager_connect_console+0x54c>  // b.tstop
  40a0f0:	ldr	w8, [sp, #96]
  40a0f4:	ldur	w9, [x29, #-88]
  40a0f8:	orr	w0, w9, w8, lsl #10
  40a0fc:	ldur	w1, [x29, #-92]
  40a100:	ldr	x2, [sp, #80]
  40a104:	mov	w3, #0x33d                 	// #829
  40a108:	ldr	x4, [sp, #72]
  40a10c:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  40a110:	add	x5, x5, #0x985
  40a114:	bl	406c18 <log_internal_realm@plt>
  40a118:	str	w0, [sp, #8]
  40a11c:	b	40a134 <manager_connect_console+0x560>
  40a120:	ldur	w0, [x29, #-92]
  40a124:	bl	406c28 <abs@plt>
  40a128:	mov	w8, wzr
  40a12c:	subs	w8, w8, w0, uxtb
  40a130:	str	w8, [sp, #8]
  40a134:	ldr	w8, [sp, #8]
  40a138:	str	w8, [sp, #92]
  40a13c:	ldr	w8, [sp, #92]
  40a140:	stur	w8, [x29, #-4]
  40a144:	b	40a14c <manager_connect_console+0x578>
  40a148:	stur	wzr, [x29, #-4]
  40a14c:	ldur	w0, [x29, #-4]
  40a150:	ldp	x29, x30, [sp, #192]
  40a154:	add	sp, sp, #0xd0
  40a158:	ret

000000000040a15c <manager_connect_udev>:
  40a15c:	sub	sp, sp, #0x40
  40a160:	stp	x29, x30, [sp, #48]
  40a164:	add	x29, sp, #0x30
  40a168:	adrp	x8, 440000 <on_brightness_writer_exit+0x15c>
  40a16c:	add	x8, x8, #0x3f0
  40a170:	add	x8, x8, #0x3
  40a174:	adrp	x9, 440000 <on_brightness_writer_exit+0x15c>
  40a178:	add	x9, x9, #0xafd
  40a17c:	stur	x0, [x29, #-16]
  40a180:	str	x8, [sp, #16]
  40a184:	str	x9, [sp, #8]
  40a188:	ldur	x8, [x29, #-16]
  40a18c:	cmp	x8, #0x0
  40a190:	cset	w9, ne  // ne = any
  40a194:	mov	w10, #0x1                   	// #1
  40a198:	eor	w9, w9, #0x1
  40a19c:	eor	w9, w9, w10
  40a1a0:	eor	w9, w9, w10
  40a1a4:	and	w9, w9, #0x1
  40a1a8:	mov	w0, w9
  40a1ac:	sxtw	x8, w0
  40a1b0:	cbz	x8, 40a1d4 <manager_connect_udev+0x78>
  40a1b4:	mov	w8, wzr
  40a1b8:	mov	w0, w8
  40a1bc:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40a1c0:	add	x1, x1, #0x5ef
  40a1c4:	ldr	x2, [sp, #16]
  40a1c8:	mov	w3, #0x345                 	// #837
  40a1cc:	ldr	x4, [sp, #8]
  40a1d0:	bl	406c68 <log_assert_failed_realm@plt>
  40a1d4:	ldur	x8, [x29, #-16]
  40a1d8:	ldr	x8, [x8, #104]
  40a1dc:	cmp	x8, #0x0
  40a1e0:	cset	w9, ne  // ne = any
  40a1e4:	mov	w10, #0x1                   	// #1
  40a1e8:	eor	w9, w9, #0x1
  40a1ec:	eor	w9, w9, w10
  40a1f0:	eor	w9, w9, w10
  40a1f4:	eor	w9, w9, w10
  40a1f8:	and	w9, w9, #0x1
  40a1fc:	mov	w0, w9
  40a200:	sxtw	x8, w0
  40a204:	cbz	x8, 40a228 <manager_connect_udev+0xcc>
  40a208:	mov	w8, wzr
  40a20c:	mov	w0, w8
  40a210:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40a214:	add	x1, x1, #0xb21
  40a218:	ldr	x2, [sp, #16]
  40a21c:	mov	w3, #0x346                 	// #838
  40a220:	ldr	x4, [sp, #8]
  40a224:	bl	406c68 <log_assert_failed_realm@plt>
  40a228:	ldur	x8, [x29, #-16]
  40a22c:	ldr	x8, [x8, #112]
  40a230:	cmp	x8, #0x0
  40a234:	cset	w9, ne  // ne = any
  40a238:	mov	w10, #0x1                   	// #1
  40a23c:	eor	w9, w9, #0x1
  40a240:	eor	w9, w9, w10
  40a244:	eor	w9, w9, w10
  40a248:	eor	w9, w9, w10
  40a24c:	and	w9, w9, #0x1
  40a250:	mov	w0, w9
  40a254:	sxtw	x8, w0
  40a258:	cbz	x8, 40a27c <manager_connect_udev+0x120>
  40a25c:	mov	w8, wzr
  40a260:	mov	w0, w8
  40a264:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40a268:	add	x1, x1, #0xb39
  40a26c:	ldr	x2, [sp, #16]
  40a270:	mov	w3, #0x347                 	// #839
  40a274:	ldr	x4, [sp, #8]
  40a278:	bl	406c68 <log_assert_failed_realm@plt>
  40a27c:	ldur	x8, [x29, #-16]
  40a280:	ldr	x8, [x8, #120]
  40a284:	cmp	x8, #0x0
  40a288:	cset	w9, ne  // ne = any
  40a28c:	mov	w10, #0x1                   	// #1
  40a290:	eor	w9, w9, #0x1
  40a294:	eor	w9, w9, w10
  40a298:	eor	w9, w9, w10
  40a29c:	eor	w9, w9, w10
  40a2a0:	and	w9, w9, #0x1
  40a2a4:	mov	w0, w9
  40a2a8:	sxtw	x8, w0
  40a2ac:	cbz	x8, 40a2d0 <manager_connect_udev+0x174>
  40a2b0:	mov	w8, wzr
  40a2b4:	mov	w0, w8
  40a2b8:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40a2bc:	add	x1, x1, #0xb4c
  40a2c0:	ldr	x2, [sp, #16]
  40a2c4:	mov	w3, #0x348                 	// #840
  40a2c8:	ldr	x4, [sp, #8]
  40a2cc:	bl	406c68 <log_assert_failed_realm@plt>
  40a2d0:	ldur	x8, [x29, #-16]
  40a2d4:	ldr	x8, [x8, #128]
  40a2d8:	cmp	x8, #0x0
  40a2dc:	cset	w9, ne  // ne = any
  40a2e0:	mov	w10, #0x1                   	// #1
  40a2e4:	eor	w9, w9, #0x1
  40a2e8:	eor	w9, w9, w10
  40a2ec:	eor	w9, w9, w10
  40a2f0:	eor	w9, w9, w10
  40a2f4:	and	w9, w9, #0x1
  40a2f8:	mov	w0, w9
  40a2fc:	sxtw	x8, w0
  40a300:	cbz	x8, 40a324 <manager_connect_udev+0x1c8>
  40a304:	mov	w8, wzr
  40a308:	mov	w0, w8
  40a30c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40a310:	add	x1, x1, #0xb64
  40a314:	ldr	x2, [sp, #16]
  40a318:	mov	w3, #0x349                 	// #841
  40a31c:	ldr	x4, [sp, #8]
  40a320:	bl	406c68 <log_assert_failed_realm@plt>
  40a324:	ldur	x8, [x29, #-16]
  40a328:	add	x0, x8, #0x68
  40a32c:	bl	406e58 <sd_device_monitor_new@plt>
  40a330:	stur	w0, [x29, #-20]
  40a334:	ldur	w9, [x29, #-20]
  40a338:	cmp	w9, #0x0
  40a33c:	cset	w9, ge  // ge = tcont
  40a340:	tbnz	w9, #0, 40a350 <manager_connect_udev+0x1f4>
  40a344:	ldur	w8, [x29, #-20]
  40a348:	stur	w8, [x29, #-4]
  40a34c:	b	40a7b8 <manager_connect_udev+0x65c>
  40a350:	ldur	x8, [x29, #-16]
  40a354:	ldr	x0, [x8, #104]
  40a358:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40a35c:	add	x1, x1, #0xb7e
  40a360:	bl	406e68 <sd_device_monitor_filter_add_match_tag@plt>
  40a364:	stur	w0, [x29, #-20]
  40a368:	ldur	w9, [x29, #-20]
  40a36c:	cmp	w9, #0x0
  40a370:	cset	w9, ge  // ge = tcont
  40a374:	tbnz	w9, #0, 40a384 <manager_connect_udev+0x228>
  40a378:	ldur	w8, [x29, #-20]
  40a37c:	stur	w8, [x29, #-4]
  40a380:	b	40a7b8 <manager_connect_udev+0x65c>
  40a384:	ldur	x8, [x29, #-16]
  40a388:	ldr	x0, [x8, #104]
  40a38c:	ldur	x8, [x29, #-16]
  40a390:	ldr	x1, [x8]
  40a394:	bl	406e78 <sd_device_monitor_attach_event@plt>
  40a398:	stur	w0, [x29, #-20]
  40a39c:	ldur	w9, [x29, #-20]
  40a3a0:	cmp	w9, #0x0
  40a3a4:	cset	w9, ge  // ge = tcont
  40a3a8:	tbnz	w9, #0, 40a3b8 <manager_connect_udev+0x25c>
  40a3ac:	ldur	w8, [x29, #-20]
  40a3b0:	stur	w8, [x29, #-4]
  40a3b4:	b	40a7b8 <manager_connect_udev+0x65c>
  40a3b8:	ldur	x8, [x29, #-16]
  40a3bc:	ldr	x0, [x8, #104]
  40a3c0:	ldur	x2, [x29, #-16]
  40a3c4:	adrp	x1, 40d000 <manager_dispatch_idle_action+0x4f8>
  40a3c8:	add	x1, x1, #0x510
  40a3cc:	bl	406e88 <sd_device_monitor_start@plt>
  40a3d0:	stur	w0, [x29, #-20]
  40a3d4:	ldur	w9, [x29, #-20]
  40a3d8:	cmp	w9, #0x0
  40a3dc:	cset	w9, ge  // ge = tcont
  40a3e0:	tbnz	w9, #0, 40a3f0 <manager_connect_udev+0x294>
  40a3e4:	ldur	w8, [x29, #-20]
  40a3e8:	stur	w8, [x29, #-4]
  40a3ec:	b	40a7b8 <manager_connect_udev+0x65c>
  40a3f0:	ldur	x8, [x29, #-16]
  40a3f4:	ldr	x0, [x8, #104]
  40a3f8:	bl	406e98 <sd_device_monitor_get_event_source@plt>
  40a3fc:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40a400:	add	x1, x1, #0xb8d
  40a404:	bl	406ea8 <sd_event_source_set_description@plt>
  40a408:	ldur	x8, [x29, #-16]
  40a40c:	add	x8, x8, #0x70
  40a410:	mov	x0, x8
  40a414:	bl	406e58 <sd_device_monitor_new@plt>
  40a418:	stur	w0, [x29, #-20]
  40a41c:	ldur	w9, [x29, #-20]
  40a420:	cmp	w9, #0x0
  40a424:	cset	w9, ge  // ge = tcont
  40a428:	tbnz	w9, #0, 40a438 <manager_connect_udev+0x2dc>
  40a42c:	ldur	w8, [x29, #-20]
  40a430:	stur	w8, [x29, #-4]
  40a434:	b	40a7b8 <manager_connect_udev+0x65c>
  40a438:	ldur	x8, [x29, #-16]
  40a43c:	ldr	x0, [x8, #112]
  40a440:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40a444:	add	x1, x1, #0xba1
  40a448:	mov	x8, xzr
  40a44c:	mov	x2, x8
  40a450:	bl	406eb8 <sd_device_monitor_filter_add_match_subsystem_devtype@plt>
  40a454:	stur	w0, [x29, #-20]
  40a458:	ldur	w9, [x29, #-20]
  40a45c:	cmp	w9, #0x0
  40a460:	cset	w9, ge  // ge = tcont
  40a464:	tbnz	w9, #0, 40a474 <manager_connect_udev+0x318>
  40a468:	ldur	w8, [x29, #-20]
  40a46c:	stur	w8, [x29, #-4]
  40a470:	b	40a7b8 <manager_connect_udev+0x65c>
  40a474:	ldur	x8, [x29, #-16]
  40a478:	ldr	x0, [x8, #112]
  40a47c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40a480:	add	x1, x1, #0xba7
  40a484:	mov	x8, xzr
  40a488:	mov	x2, x8
  40a48c:	bl	406eb8 <sd_device_monitor_filter_add_match_subsystem_devtype@plt>
  40a490:	stur	w0, [x29, #-20]
  40a494:	ldur	w9, [x29, #-20]
  40a498:	cmp	w9, #0x0
  40a49c:	cset	w9, ge  // ge = tcont
  40a4a0:	tbnz	w9, #0, 40a4b0 <manager_connect_udev+0x354>
  40a4a4:	ldur	w8, [x29, #-20]
  40a4a8:	stur	w8, [x29, #-4]
  40a4ac:	b	40a7b8 <manager_connect_udev+0x65c>
  40a4b0:	ldur	x8, [x29, #-16]
  40a4b4:	ldr	x0, [x8, #112]
  40a4b8:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40a4bc:	add	x1, x1, #0xbb0
  40a4c0:	mov	x8, xzr
  40a4c4:	mov	x2, x8
  40a4c8:	bl	406eb8 <sd_device_monitor_filter_add_match_subsystem_devtype@plt>
  40a4cc:	stur	w0, [x29, #-20]
  40a4d0:	ldur	w9, [x29, #-20]
  40a4d4:	cmp	w9, #0x0
  40a4d8:	cset	w9, ge  // ge = tcont
  40a4dc:	tbnz	w9, #0, 40a4ec <manager_connect_udev+0x390>
  40a4e0:	ldur	w8, [x29, #-20]
  40a4e4:	stur	w8, [x29, #-4]
  40a4e8:	b	40a7b8 <manager_connect_udev+0x65c>
  40a4ec:	ldur	x8, [x29, #-16]
  40a4f0:	ldr	x0, [x8, #112]
  40a4f4:	ldur	x8, [x29, #-16]
  40a4f8:	ldr	x1, [x8]
  40a4fc:	bl	406e78 <sd_device_monitor_attach_event@plt>
  40a500:	stur	w0, [x29, #-20]
  40a504:	ldur	w9, [x29, #-20]
  40a508:	cmp	w9, #0x0
  40a50c:	cset	w9, ge  // ge = tcont
  40a510:	tbnz	w9, #0, 40a520 <manager_connect_udev+0x3c4>
  40a514:	ldur	w8, [x29, #-20]
  40a518:	stur	w8, [x29, #-4]
  40a51c:	b	40a7b8 <manager_connect_udev+0x65c>
  40a520:	ldur	x8, [x29, #-16]
  40a524:	ldr	x0, [x8, #112]
  40a528:	ldur	x2, [x29, #-16]
  40a52c:	adrp	x1, 40d000 <manager_dispatch_idle_action+0x4f8>
  40a530:	add	x1, x1, #0x600
  40a534:	bl	406e88 <sd_device_monitor_start@plt>
  40a538:	stur	w0, [x29, #-20]
  40a53c:	ldur	w9, [x29, #-20]
  40a540:	cmp	w9, #0x0
  40a544:	cset	w9, ge  // ge = tcont
  40a548:	tbnz	w9, #0, 40a558 <manager_connect_udev+0x3fc>
  40a54c:	ldur	w8, [x29, #-20]
  40a550:	stur	w8, [x29, #-4]
  40a554:	b	40a7b8 <manager_connect_udev+0x65c>
  40a558:	ldur	x8, [x29, #-16]
  40a55c:	ldr	x0, [x8, #112]
  40a560:	bl	406e98 <sd_device_monitor_get_event_source@plt>
  40a564:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40a568:	add	x1, x1, #0xbb4
  40a56c:	bl	406ea8 <sd_event_source_set_description@plt>
  40a570:	ldur	x8, [x29, #-16]
  40a574:	mov	x0, x8
  40a578:	bl	413984 <manager_all_buttons_ignored>
  40a57c:	tbnz	w0, #0, 40a6a0 <manager_connect_udev+0x544>
  40a580:	ldur	x8, [x29, #-16]
  40a584:	add	x0, x8, #0x80
  40a588:	bl	406e58 <sd_device_monitor_new@plt>
  40a58c:	stur	w0, [x29, #-20]
  40a590:	ldur	w9, [x29, #-20]
  40a594:	cmp	w9, #0x0
  40a598:	cset	w9, ge  // ge = tcont
  40a59c:	tbnz	w9, #0, 40a5ac <manager_connect_udev+0x450>
  40a5a0:	ldur	w8, [x29, #-20]
  40a5a4:	stur	w8, [x29, #-4]
  40a5a8:	b	40a7b8 <manager_connect_udev+0x65c>
  40a5ac:	ldur	x8, [x29, #-16]
  40a5b0:	ldr	x0, [x8, #128]
  40a5b4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40a5b8:	add	x1, x1, #0xbca
  40a5bc:	bl	406e68 <sd_device_monitor_filter_add_match_tag@plt>
  40a5c0:	stur	w0, [x29, #-20]
  40a5c4:	ldur	w9, [x29, #-20]
  40a5c8:	cmp	w9, #0x0
  40a5cc:	cset	w9, ge  // ge = tcont
  40a5d0:	tbnz	w9, #0, 40a5e0 <manager_connect_udev+0x484>
  40a5d4:	ldur	w8, [x29, #-20]
  40a5d8:	stur	w8, [x29, #-4]
  40a5dc:	b	40a7b8 <manager_connect_udev+0x65c>
  40a5e0:	ldur	x8, [x29, #-16]
  40a5e4:	ldr	x0, [x8, #128]
  40a5e8:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40a5ec:	add	x1, x1, #0xba1
  40a5f0:	mov	x8, xzr
  40a5f4:	mov	x2, x8
  40a5f8:	bl	406eb8 <sd_device_monitor_filter_add_match_subsystem_devtype@plt>
  40a5fc:	stur	w0, [x29, #-20]
  40a600:	ldur	w9, [x29, #-20]
  40a604:	cmp	w9, #0x0
  40a608:	cset	w9, ge  // ge = tcont
  40a60c:	tbnz	w9, #0, 40a61c <manager_connect_udev+0x4c0>
  40a610:	ldur	w8, [x29, #-20]
  40a614:	stur	w8, [x29, #-4]
  40a618:	b	40a7b8 <manager_connect_udev+0x65c>
  40a61c:	ldur	x8, [x29, #-16]
  40a620:	ldr	x0, [x8, #128]
  40a624:	ldur	x8, [x29, #-16]
  40a628:	ldr	x1, [x8]
  40a62c:	bl	406e78 <sd_device_monitor_attach_event@plt>
  40a630:	stur	w0, [x29, #-20]
  40a634:	ldur	w9, [x29, #-20]
  40a638:	cmp	w9, #0x0
  40a63c:	cset	w9, ge  // ge = tcont
  40a640:	tbnz	w9, #0, 40a650 <manager_connect_udev+0x4f4>
  40a644:	ldur	w8, [x29, #-20]
  40a648:	stur	w8, [x29, #-4]
  40a64c:	b	40a7b8 <manager_connect_udev+0x65c>
  40a650:	ldur	x8, [x29, #-16]
  40a654:	ldr	x0, [x8, #128]
  40a658:	ldur	x2, [x29, #-16]
  40a65c:	adrp	x1, 40d000 <manager_dispatch_idle_action+0x4f8>
  40a660:	add	x1, x1, #0x6f0
  40a664:	bl	406e88 <sd_device_monitor_start@plt>
  40a668:	stur	w0, [x29, #-20]
  40a66c:	ldur	w9, [x29, #-20]
  40a670:	cmp	w9, #0x0
  40a674:	cset	w9, ge  // ge = tcont
  40a678:	tbnz	w9, #0, 40a688 <manager_connect_udev+0x52c>
  40a67c:	ldur	w8, [x29, #-20]
  40a680:	stur	w8, [x29, #-4]
  40a684:	b	40a7b8 <manager_connect_udev+0x65c>
  40a688:	ldur	x8, [x29, #-16]
  40a68c:	ldr	x0, [x8, #128]
  40a690:	bl	406e98 <sd_device_monitor_get_event_source@plt>
  40a694:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40a698:	add	x1, x1, #0xbd7
  40a69c:	bl	406ea8 <sd_event_source_set_description@plt>
  40a6a0:	ldur	x8, [x29, #-16]
  40a6a4:	ldr	w9, [x8, #156]
  40a6a8:	cmp	w9, #0x0
  40a6ac:	cset	w9, ls  // ls = plast
  40a6b0:	tbnz	w9, #0, 40a7b4 <manager_connect_udev+0x658>
  40a6b4:	ldur	x8, [x29, #-16]
  40a6b8:	ldr	w9, [x8, #152]
  40a6bc:	cmp	w9, #0x0
  40a6c0:	cset	w9, lt  // lt = tstop
  40a6c4:	tbnz	w9, #0, 40a7b4 <manager_connect_udev+0x658>
  40a6c8:	ldur	x8, [x29, #-16]
  40a6cc:	add	x0, x8, #0x78
  40a6d0:	bl	406e58 <sd_device_monitor_new@plt>
  40a6d4:	stur	w0, [x29, #-20]
  40a6d8:	ldur	w9, [x29, #-20]
  40a6dc:	cmp	w9, #0x0
  40a6e0:	cset	w9, ge  // ge = tcont
  40a6e4:	tbnz	w9, #0, 40a6f4 <manager_connect_udev+0x598>
  40a6e8:	ldur	w8, [x29, #-20]
  40a6ec:	stur	w8, [x29, #-4]
  40a6f0:	b	40a7b8 <manager_connect_udev+0x65c>
  40a6f4:	ldur	x8, [x29, #-16]
  40a6f8:	ldr	x0, [x8, #120]
  40a6fc:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40a700:	add	x1, x1, #0xbed
  40a704:	mov	x8, xzr
  40a708:	mov	x2, x8
  40a70c:	bl	406eb8 <sd_device_monitor_filter_add_match_subsystem_devtype@plt>
  40a710:	stur	w0, [x29, #-20]
  40a714:	ldur	w9, [x29, #-20]
  40a718:	cmp	w9, #0x0
  40a71c:	cset	w9, ge  // ge = tcont
  40a720:	tbnz	w9, #0, 40a730 <manager_connect_udev+0x5d4>
  40a724:	ldur	w8, [x29, #-20]
  40a728:	stur	w8, [x29, #-4]
  40a72c:	b	40a7b8 <manager_connect_udev+0x65c>
  40a730:	ldur	x8, [x29, #-16]
  40a734:	ldr	x0, [x8, #120]
  40a738:	ldur	x8, [x29, #-16]
  40a73c:	ldr	x1, [x8]
  40a740:	bl	406e78 <sd_device_monitor_attach_event@plt>
  40a744:	stur	w0, [x29, #-20]
  40a748:	ldur	w9, [x29, #-20]
  40a74c:	cmp	w9, #0x0
  40a750:	cset	w9, ge  // ge = tcont
  40a754:	tbnz	w9, #0, 40a764 <manager_connect_udev+0x608>
  40a758:	ldur	w8, [x29, #-20]
  40a75c:	stur	w8, [x29, #-4]
  40a760:	b	40a7b8 <manager_connect_udev+0x65c>
  40a764:	ldur	x8, [x29, #-16]
  40a768:	ldr	x0, [x8, #120]
  40a76c:	ldur	x2, [x29, #-16]
  40a770:	adrp	x1, 40d000 <manager_dispatch_idle_action+0x4f8>
  40a774:	add	x1, x1, #0x7e0
  40a778:	bl	406e88 <sd_device_monitor_start@plt>
  40a77c:	stur	w0, [x29, #-20]
  40a780:	ldur	w9, [x29, #-20]
  40a784:	cmp	w9, #0x0
  40a788:	cset	w9, ge  // ge = tcont
  40a78c:	tbnz	w9, #0, 40a79c <manager_connect_udev+0x640>
  40a790:	ldur	w8, [x29, #-20]
  40a794:	stur	w8, [x29, #-4]
  40a798:	b	40a7b8 <manager_connect_udev+0x65c>
  40a79c:	ldur	x8, [x29, #-16]
  40a7a0:	ldr	x0, [x8, #120]
  40a7a4:	bl	406e98 <sd_device_monitor_get_event_source@plt>
  40a7a8:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40a7ac:	add	x1, x1, #0xbf0
  40a7b0:	bl	406ea8 <sd_event_source_set_description@plt>
  40a7b4:	stur	wzr, [x29, #-4]
  40a7b8:	ldur	w0, [x29, #-4]
  40a7bc:	ldp	x29, x30, [sp, #48]
  40a7c0:	add	sp, sp, #0x40
  40a7c4:	ret

000000000040a7c8 <manager_connect_bus>:
  40a7c8:	sub	sp, sp, #0x1a0
  40a7cc:	stp	x29, x30, [sp, #384]
  40a7d0:	str	x28, [sp, #400]
  40a7d4:	add	x29, sp, #0x180
  40a7d8:	sub	x8, x29, #0x10
  40a7dc:	adrp	x9, 440000 <on_brightness_writer_exit+0x15c>
  40a7e0:	add	x9, x9, #0xf86
  40a7e4:	adrp	x10, 440000 <on_brightness_writer_exit+0x15c>
  40a7e8:	add	x10, x10, #0xf9f
  40a7ec:	adrp	x11, 440000 <on_brightness_writer_exit+0x15c>
  40a7f0:	add	x11, x11, #0xfb9
  40a7f4:	adrp	x12, 440000 <on_brightness_writer_exit+0x15c>
  40a7f8:	add	x12, x12, #0x3f0
  40a7fc:	add	x12, x12, #0x3
  40a800:	adrp	x13, 440000 <on_brightness_writer_exit+0x15c>
  40a804:	add	x13, x13, #0xd63
  40a808:	str	x0, [x8]
  40a80c:	str	x8, [sp, #112]
  40a810:	str	x9, [sp, #104]
  40a814:	str	x10, [sp, #96]
  40a818:	str	x11, [sp, #88]
  40a81c:	str	x12, [sp, #80]
  40a820:	str	x13, [sp, #72]
  40a824:	ldr	x8, [sp, #112]
  40a828:	ldr	x9, [x8]
  40a82c:	cmp	x9, #0x0
  40a830:	cset	w10, ne  // ne = any
  40a834:	mov	w11, #0x1                   	// #1
  40a838:	eor	w10, w10, #0x1
  40a83c:	eor	w10, w10, w11
  40a840:	eor	w10, w10, w11
  40a844:	and	w10, w10, #0x1
  40a848:	mov	w0, w10
  40a84c:	sxtw	x9, w0
  40a850:	cbz	x9, 40a878 <manager_connect_bus+0xb0>
  40a854:	mov	w8, wzr
  40a858:	mov	w0, w8
  40a85c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40a860:	add	x1, x1, #0x5ef
  40a864:	ldr	x2, [sp, #80]
  40a868:	mov	w3, #0x26a                 	// #618
  40a86c:	adrp	x4, 440000 <on_brightness_writer_exit+0x15c>
  40a870:	add	x4, x4, #0xd38
  40a874:	bl	406c68 <log_assert_failed_realm@plt>
  40a878:	ldr	x8, [sp, #112]
  40a87c:	ldr	x9, [x8]
  40a880:	ldr	x9, [x9, #8]
  40a884:	cmp	x9, #0x0
  40a888:	cset	w10, ne  // ne = any
  40a88c:	mov	w11, #0x1                   	// #1
  40a890:	eor	w10, w10, #0x1
  40a894:	eor	w10, w10, w11
  40a898:	eor	w10, w10, w11
  40a89c:	eor	w10, w10, w11
  40a8a0:	and	w10, w10, #0x1
  40a8a4:	mov	w0, w10
  40a8a8:	sxtw	x9, w0
  40a8ac:	cbz	x9, 40a8d4 <manager_connect_bus+0x10c>
  40a8b0:	mov	w8, wzr
  40a8b4:	mov	w0, w8
  40a8b8:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40a8bc:	add	x1, x1, #0xd5b
  40a8c0:	ldr	x2, [sp, #80]
  40a8c4:	mov	w3, #0x26b                 	// #619
  40a8c8:	adrp	x4, 440000 <on_brightness_writer_exit+0x15c>
  40a8cc:	add	x4, x4, #0xd38
  40a8d0:	bl	406c68 <log_assert_failed_realm@plt>
  40a8d4:	ldr	x8, [sp, #112]
  40a8d8:	ldr	x9, [x8]
  40a8dc:	add	x0, x9, #0x8
  40a8e0:	bl	406ec8 <sd_bus_default_system@plt>
  40a8e4:	stur	w0, [x29, #-20]
  40a8e8:	ldur	w10, [x29, #-20]
  40a8ec:	cmp	w10, #0x0
  40a8f0:	cset	w10, ge  // ge = tcont
  40a8f4:	tbnz	w10, #0, 40a97c <manager_connect_bus+0x1b4>
  40a8f8:	mov	w8, #0x3                   	// #3
  40a8fc:	stur	w8, [x29, #-24]
  40a900:	ldur	w8, [x29, #-20]
  40a904:	stur	w8, [x29, #-28]
  40a908:	stur	wzr, [x29, #-32]
  40a90c:	ldur	w0, [x29, #-32]
  40a910:	bl	406c08 <log_get_max_level_realm@plt>
  40a914:	ldur	w8, [x29, #-24]
  40a918:	and	w8, w8, #0x7
  40a91c:	cmp	w0, w8
  40a920:	b.lt	40a954 <manager_connect_bus+0x18c>  // b.tstop
  40a924:	ldur	w8, [x29, #-32]
  40a928:	ldur	w9, [x29, #-24]
  40a92c:	orr	w0, w9, w8, lsl #10
  40a930:	ldur	w1, [x29, #-28]
  40a934:	ldr	x2, [sp, #80]
  40a938:	mov	w3, #0x26f                 	// #623
  40a93c:	ldr	x4, [sp, #72]
  40a940:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  40a944:	add	x5, x5, #0xd77
  40a948:	bl	406c18 <log_internal_realm@plt>
  40a94c:	str	w0, [sp, #68]
  40a950:	b	40a968 <manager_connect_bus+0x1a0>
  40a954:	ldur	w0, [x29, #-28]
  40a958:	bl	406c28 <abs@plt>
  40a95c:	mov	w8, wzr
  40a960:	subs	w8, w8, w0, uxtb
  40a964:	str	w8, [sp, #68]
  40a968:	ldr	w8, [sp, #68]
  40a96c:	stur	w8, [x29, #-36]
  40a970:	ldur	w8, [x29, #-36]
  40a974:	stur	w8, [x29, #-4]
  40a978:	b	40b4d8 <manager_connect_bus+0xd10>
  40a97c:	ldr	x8, [sp, #112]
  40a980:	ldr	x9, [x8]
  40a984:	ldr	x0, [x9, #8]
  40a988:	ldr	x5, [x8]
  40a98c:	mov	x9, xzr
  40a990:	mov	x1, x9
  40a994:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  40a998:	add	x2, x2, #0xd9b
  40a99c:	adrp	x3, 440000 <on_brightness_writer_exit+0x15c>
  40a9a0:	add	x3, x3, #0xdb3
  40a9a4:	adrp	x4, 45c000 <__FRAME_END__+0x10118>
  40a9a8:	add	x4, x4, #0x408
  40a9ac:	bl	406ed8 <sd_bus_add_object_vtable@plt>
  40a9b0:	stur	w0, [x29, #-20]
  40a9b4:	ldur	w10, [x29, #-20]
  40a9b8:	cmp	w10, #0x0
  40a9bc:	cset	w10, ge  // ge = tcont
  40a9c0:	tbnz	w10, #0, 40aa48 <manager_connect_bus+0x280>
  40a9c4:	mov	w8, #0x3                   	// #3
  40a9c8:	stur	w8, [x29, #-40]
  40a9cc:	ldur	w8, [x29, #-20]
  40a9d0:	stur	w8, [x29, #-44]
  40a9d4:	stur	wzr, [x29, #-48]
  40a9d8:	ldur	w0, [x29, #-48]
  40a9dc:	bl	406c08 <log_get_max_level_realm@plt>
  40a9e0:	ldur	w8, [x29, #-40]
  40a9e4:	and	w8, w8, #0x7
  40a9e8:	cmp	w0, w8
  40a9ec:	b.lt	40aa20 <manager_connect_bus+0x258>  // b.tstop
  40a9f0:	ldur	w8, [x29, #-48]
  40a9f4:	ldur	w9, [x29, #-40]
  40a9f8:	orr	w0, w9, w8, lsl #10
  40a9fc:	ldur	w1, [x29, #-44]
  40aa00:	ldr	x2, [sp, #80]
  40aa04:	mov	w3, #0x273                 	// #627
  40aa08:	ldr	x4, [sp, #72]
  40aa0c:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  40aa10:	add	x5, x5, #0xdd2
  40aa14:	bl	406c18 <log_internal_realm@plt>
  40aa18:	str	w0, [sp, #64]
  40aa1c:	b	40aa34 <manager_connect_bus+0x26c>
  40aa20:	ldur	w0, [x29, #-44]
  40aa24:	bl	406c28 <abs@plt>
  40aa28:	mov	w8, wzr
  40aa2c:	subs	w8, w8, w0, uxtb
  40aa30:	str	w8, [sp, #64]
  40aa34:	ldr	w8, [sp, #64]
  40aa38:	stur	w8, [x29, #-52]
  40aa3c:	ldur	w8, [x29, #-52]
  40aa40:	stur	w8, [x29, #-4]
  40aa44:	b	40b4d8 <manager_connect_bus+0xd10>
  40aa48:	ldr	x8, [sp, #112]
  40aa4c:	ldr	x9, [x8]
  40aa50:	ldr	x0, [x9, #8]
  40aa54:	ldr	x6, [x8]
  40aa58:	mov	x9, xzr
  40aa5c:	mov	x1, x9
  40aa60:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  40aa64:	add	x2, x2, #0xdfa
  40aa68:	adrp	x3, 440000 <on_brightness_writer_exit+0x15c>
  40aa6c:	add	x3, x3, #0xe17
  40aa70:	adrp	x4, 45d000 <manager_vtable+0xbf8>
  40aa74:	add	x4, x4, #0xa40
  40aa78:	adrp	x5, 428000 <method_switch_to_previous+0x78>
  40aa7c:	add	x5, x5, #0xa4
  40aa80:	bl	406ee8 <sd_bus_add_fallback_vtable@plt>
  40aa84:	stur	w0, [x29, #-20]
  40aa88:	ldur	w10, [x29, #-20]
  40aa8c:	cmp	w10, #0x0
  40aa90:	cset	w10, ge  // ge = tcont
  40aa94:	tbnz	w10, #0, 40ab1c <manager_connect_bus+0x354>
  40aa98:	mov	w8, #0x3                   	// #3
  40aa9c:	stur	w8, [x29, #-56]
  40aaa0:	ldur	w8, [x29, #-20]
  40aaa4:	stur	w8, [x29, #-60]
  40aaa8:	stur	wzr, [x29, #-64]
  40aaac:	ldur	w0, [x29, #-64]
  40aab0:	bl	406c08 <log_get_max_level_realm@plt>
  40aab4:	ldur	w8, [x29, #-56]
  40aab8:	and	w8, w8, #0x7
  40aabc:	cmp	w0, w8
  40aac0:	b.lt	40aaf4 <manager_connect_bus+0x32c>  // b.tstop
  40aac4:	ldur	w8, [x29, #-64]
  40aac8:	ldur	w9, [x29, #-56]
  40aacc:	orr	w0, w9, w8, lsl #10
  40aad0:	ldur	w1, [x29, #-60]
  40aad4:	ldr	x2, [sp, #80]
  40aad8:	mov	w3, #0x277                 	// #631
  40aadc:	ldr	x4, [sp, #72]
  40aae0:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  40aae4:	add	x5, x5, #0xe33
  40aae8:	bl	406c18 <log_internal_realm@plt>
  40aaec:	str	w0, [sp, #60]
  40aaf0:	b	40ab08 <manager_connect_bus+0x340>
  40aaf4:	ldur	w0, [x29, #-60]
  40aaf8:	bl	406c28 <abs@plt>
  40aafc:	mov	w8, wzr
  40ab00:	subs	w8, w8, w0, uxtb
  40ab04:	str	w8, [sp, #60]
  40ab08:	ldr	w8, [sp, #60]
  40ab0c:	stur	w8, [x29, #-68]
  40ab10:	ldur	w8, [x29, #-68]
  40ab14:	stur	w8, [x29, #-4]
  40ab18:	b	40b4d8 <manager_connect_bus+0xd10>
  40ab1c:	ldr	x8, [sp, #112]
  40ab20:	ldr	x9, [x8]
  40ab24:	ldr	x0, [x9, #8]
  40ab28:	ldr	x4, [x8]
  40ab2c:	mov	x9, xzr
  40ab30:	mov	x1, x9
  40ab34:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  40ab38:	add	x2, x2, #0xdfa
  40ab3c:	adrp	x3, 428000 <method_switch_to_previous+0x78>
  40ab40:	add	x3, x3, #0x514
  40ab44:	bl	406ef8 <sd_bus_add_node_enumerator@plt>
  40ab48:	stur	w0, [x29, #-20]
  40ab4c:	ldur	w10, [x29, #-20]
  40ab50:	cmp	w10, #0x0
  40ab54:	cset	w10, ge  // ge = tcont
  40ab58:	tbnz	w10, #0, 40abe0 <manager_connect_bus+0x418>
  40ab5c:	mov	w8, #0x3                   	// #3
  40ab60:	stur	w8, [x29, #-72]
  40ab64:	ldur	w8, [x29, #-20]
  40ab68:	stur	w8, [x29, #-76]
  40ab6c:	stur	wzr, [x29, #-80]
  40ab70:	ldur	w0, [x29, #-80]
  40ab74:	bl	406c08 <log_get_max_level_realm@plt>
  40ab78:	ldur	w8, [x29, #-72]
  40ab7c:	and	w8, w8, #0x7
  40ab80:	cmp	w0, w8
  40ab84:	b.lt	40abb8 <manager_connect_bus+0x3f0>  // b.tstop
  40ab88:	ldur	w8, [x29, #-80]
  40ab8c:	ldur	w9, [x29, #-72]
  40ab90:	orr	w0, w9, w8, lsl #10
  40ab94:	ldur	w1, [x29, #-76]
  40ab98:	ldr	x2, [sp, #80]
  40ab9c:	mov	w3, #0x27b                 	// #635
  40aba0:	ldr	x4, [sp, #72]
  40aba4:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  40aba8:	add	x5, x5, #0xe58
  40abac:	bl	406c18 <log_internal_realm@plt>
  40abb0:	str	w0, [sp, #56]
  40abb4:	b	40abcc <manager_connect_bus+0x404>
  40abb8:	ldur	w0, [x29, #-76]
  40abbc:	bl	406c28 <abs@plt>
  40abc0:	mov	w8, wzr
  40abc4:	subs	w8, w8, w0, uxtb
  40abc8:	str	w8, [sp, #56]
  40abcc:	ldr	w8, [sp, #56]
  40abd0:	stur	w8, [x29, #-84]
  40abd4:	ldur	w8, [x29, #-84]
  40abd8:	stur	w8, [x29, #-4]
  40abdc:	b	40b4d8 <manager_connect_bus+0xd10>
  40abe0:	ldr	x8, [sp, #112]
  40abe4:	ldr	x9, [x8]
  40abe8:	ldr	x0, [x9, #8]
  40abec:	ldr	x6, [x8]
  40abf0:	mov	x9, xzr
  40abf4:	mov	x1, x9
  40abf8:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  40abfc:	add	x2, x2, #0xe7a
  40ac00:	adrp	x3, 440000 <on_brightness_writer_exit+0x15c>
  40ac04:	add	x3, x3, #0xe9a
  40ac08:	adrp	x4, 45d000 <manager_vtable+0xbf8>
  40ac0c:	add	x4, x4, #0xdd0
  40ac10:	adrp	x5, 42e000 <method_take_device+0x1b8>
  40ac14:	add	x5, x5, #0xa7c
  40ac18:	bl	406ee8 <sd_bus_add_fallback_vtable@plt>
  40ac1c:	stur	w0, [x29, #-20]
  40ac20:	ldur	w10, [x29, #-20]
  40ac24:	cmp	w10, #0x0
  40ac28:	cset	w10, ge  // ge = tcont
  40ac2c:	tbnz	w10, #0, 40acb4 <manager_connect_bus+0x4ec>
  40ac30:	mov	w8, #0x3                   	// #3
  40ac34:	stur	w8, [x29, #-88]
  40ac38:	ldur	w8, [x29, #-20]
  40ac3c:	stur	w8, [x29, #-92]
  40ac40:	stur	wzr, [x29, #-96]
  40ac44:	ldur	w0, [x29, #-96]
  40ac48:	bl	406c08 <log_get_max_level_realm@plt>
  40ac4c:	ldur	w8, [x29, #-88]
  40ac50:	and	w8, w8, #0x7
  40ac54:	cmp	w0, w8
  40ac58:	b.lt	40ac8c <manager_connect_bus+0x4c4>  // b.tstop
  40ac5c:	ldur	w8, [x29, #-96]
  40ac60:	ldur	w9, [x29, #-88]
  40ac64:	orr	w0, w9, w8, lsl #10
  40ac68:	ldur	w1, [x29, #-92]
  40ac6c:	ldr	x2, [sp, #80]
  40ac70:	mov	w3, #0x27f                 	// #639
  40ac74:	ldr	x4, [sp, #72]
  40ac78:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  40ac7c:	add	x5, x5, #0xeb9
  40ac80:	bl	406c18 <log_internal_realm@plt>
  40ac84:	str	w0, [sp, #52]
  40ac88:	b	40aca0 <manager_connect_bus+0x4d8>
  40ac8c:	ldur	w0, [x29, #-92]
  40ac90:	bl	406c28 <abs@plt>
  40ac94:	mov	w8, wzr
  40ac98:	subs	w8, w8, w0, uxtb
  40ac9c:	str	w8, [sp, #52]
  40aca0:	ldr	w8, [sp, #52]
  40aca4:	stur	w8, [x29, #-100]
  40aca8:	ldur	w8, [x29, #-100]
  40acac:	stur	w8, [x29, #-4]
  40acb0:	b	40b4d8 <manager_connect_bus+0xd10>
  40acb4:	ldr	x8, [sp, #112]
  40acb8:	ldr	x9, [x8]
  40acbc:	ldr	x0, [x9, #8]
  40acc0:	ldr	x4, [x8]
  40acc4:	mov	x9, xzr
  40acc8:	mov	x1, x9
  40accc:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  40acd0:	add	x2, x2, #0xe7a
  40acd4:	adrp	x3, 42e000 <method_take_device+0x1b8>
  40acd8:	add	x3, x3, #0xeec
  40acdc:	bl	406ef8 <sd_bus_add_node_enumerator@plt>
  40ace0:	stur	w0, [x29, #-20]
  40ace4:	ldur	w10, [x29, #-20]
  40ace8:	cmp	w10, #0x0
  40acec:	cset	w10, ge  // ge = tcont
  40acf0:	tbnz	w10, #0, 40ad78 <manager_connect_bus+0x5b0>
  40acf4:	mov	w8, #0x3                   	// #3
  40acf8:	stur	w8, [x29, #-104]
  40acfc:	ldur	w8, [x29, #-20]
  40ad00:	stur	w8, [x29, #-108]
  40ad04:	stur	wzr, [x29, #-112]
  40ad08:	ldur	w0, [x29, #-112]
  40ad0c:	bl	406c08 <log_get_max_level_realm@plt>
  40ad10:	ldur	w8, [x29, #-104]
  40ad14:	and	w8, w8, #0x7
  40ad18:	cmp	w0, w8
  40ad1c:	b.lt	40ad50 <manager_connect_bus+0x588>  // b.tstop
  40ad20:	ldur	w8, [x29, #-112]
  40ad24:	ldur	w9, [x29, #-104]
  40ad28:	orr	w0, w9, w8, lsl #10
  40ad2c:	ldur	w1, [x29, #-108]
  40ad30:	ldr	x2, [sp, #80]
  40ad34:	mov	w3, #0x283                 	// #643
  40ad38:	ldr	x4, [sp, #72]
  40ad3c:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  40ad40:	add	x5, x5, #0xee1
  40ad44:	bl	406c18 <log_internal_realm@plt>
  40ad48:	str	w0, [sp, #48]
  40ad4c:	b	40ad64 <manager_connect_bus+0x59c>
  40ad50:	ldur	w0, [x29, #-108]
  40ad54:	bl	406c28 <abs@plt>
  40ad58:	mov	w8, wzr
  40ad5c:	subs	w8, w8, w0, uxtb
  40ad60:	str	w8, [sp, #48]
  40ad64:	ldr	w8, [sp, #48]
  40ad68:	stur	w8, [x29, #-116]
  40ad6c:	ldur	w8, [x29, #-116]
  40ad70:	stur	w8, [x29, #-4]
  40ad74:	b	40b4d8 <manager_connect_bus+0xd10>
  40ad78:	ldr	x8, [sp, #112]
  40ad7c:	ldr	x9, [x8]
  40ad80:	ldr	x0, [x9, #8]
  40ad84:	ldr	x6, [x8]
  40ad88:	mov	x9, xzr
  40ad8c:	mov	x1, x9
  40ad90:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  40ad94:	add	x2, x2, #0xf06
  40ad98:	adrp	x3, 440000 <on_brightness_writer_exit+0x15c>
  40ad9c:	add	x3, x3, #0xf23
  40ada0:	adrp	x4, 45e000 <session_vtable+0x230>
  40ada4:	add	x4, x4, #0x810
  40ada8:	adrp	x5, 438000 <bus_user_method_terminate+0x140>
  40adac:	add	x5, x5, #0xca0
  40adb0:	bl	406ee8 <sd_bus_add_fallback_vtable@plt>
  40adb4:	stur	w0, [x29, #-20]
  40adb8:	ldur	w10, [x29, #-20]
  40adbc:	cmp	w10, #0x0
  40adc0:	cset	w10, ge  // ge = tcont
  40adc4:	tbnz	w10, #0, 40ae4c <manager_connect_bus+0x684>
  40adc8:	mov	w8, #0x3                   	// #3
  40adcc:	stur	w8, [x29, #-120]
  40add0:	ldur	w8, [x29, #-20]
  40add4:	stur	w8, [x29, #-124]
  40add8:	stur	wzr, [x29, #-128]
  40addc:	ldur	w0, [x29, #-128]
  40ade0:	bl	406c08 <log_get_max_level_realm@plt>
  40ade4:	ldur	w8, [x29, #-120]
  40ade8:	and	w8, w8, #0x7
  40adec:	cmp	w0, w8
  40adf0:	b.lt	40ae24 <manager_connect_bus+0x65c>  // b.tstop
  40adf4:	ldur	w8, [x29, #-128]
  40adf8:	ldur	w9, [x29, #-120]
  40adfc:	orr	w0, w9, w8, lsl #10
  40ae00:	ldur	w1, [x29, #-124]
  40ae04:	ldr	x2, [sp, #80]
  40ae08:	mov	w3, #0x287                 	// #647
  40ae0c:	ldr	x4, [sp, #72]
  40ae10:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  40ae14:	add	x5, x5, #0xf3f
  40ae18:	bl	406c18 <log_internal_realm@plt>
  40ae1c:	str	w0, [sp, #44]
  40ae20:	b	40ae38 <manager_connect_bus+0x670>
  40ae24:	ldur	w0, [x29, #-124]
  40ae28:	bl	406c28 <abs@plt>
  40ae2c:	mov	w8, wzr
  40ae30:	subs	w8, w8, w0, uxtb
  40ae34:	str	w8, [sp, #44]
  40ae38:	ldr	w8, [sp, #44]
  40ae3c:	stur	w8, [x29, #-132]
  40ae40:	ldur	w8, [x29, #-132]
  40ae44:	stur	w8, [x29, #-4]
  40ae48:	b	40b4d8 <manager_connect_bus+0xd10>
  40ae4c:	ldr	x8, [sp, #112]
  40ae50:	ldr	x9, [x8]
  40ae54:	ldr	x0, [x9, #8]
  40ae58:	ldr	x4, [x8]
  40ae5c:	mov	x9, xzr
  40ae60:	mov	x1, x9
  40ae64:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  40ae68:	add	x2, x2, #0xf06
  40ae6c:	adrp	x3, 439000 <hashmap_get+0x20>
  40ae70:	add	x3, x3, #0xc4
  40ae74:	bl	406ef8 <sd_bus_add_node_enumerator@plt>
  40ae78:	stur	w0, [x29, #-20]
  40ae7c:	ldur	w10, [x29, #-20]
  40ae80:	cmp	w10, #0x0
  40ae84:	cset	w10, ge  // ge = tcont
  40ae88:	tbnz	w10, #0, 40af10 <manager_connect_bus+0x748>
  40ae8c:	mov	w8, #0x3                   	// #3
  40ae90:	stur	w8, [x29, #-136]
  40ae94:	ldur	w8, [x29, #-20]
  40ae98:	stur	w8, [x29, #-140]
  40ae9c:	stur	wzr, [x29, #-144]
  40aea0:	ldur	w0, [x29, #-144]
  40aea4:	bl	406c08 <log_get_max_level_realm@plt>
  40aea8:	ldur	w8, [x29, #-136]
  40aeac:	and	w8, w8, #0x7
  40aeb0:	cmp	w0, w8
  40aeb4:	b.lt	40aee8 <manager_connect_bus+0x720>  // b.tstop
  40aeb8:	ldur	w8, [x29, #-144]
  40aebc:	ldur	w9, [x29, #-136]
  40aec0:	orr	w0, w9, w8, lsl #10
  40aec4:	ldur	w1, [x29, #-140]
  40aec8:	ldr	x2, [sp, #80]
  40aecc:	mov	w3, #0x28b                 	// #651
  40aed0:	ldr	x4, [sp, #72]
  40aed4:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  40aed8:	add	x5, x5, #0xf64
  40aedc:	bl	406c18 <log_internal_realm@plt>
  40aee0:	str	w0, [sp, #40]
  40aee4:	b	40aefc <manager_connect_bus+0x734>
  40aee8:	ldur	w0, [x29, #-140]
  40aeec:	bl	406c28 <abs@plt>
  40aef0:	mov	w8, wzr
  40aef4:	subs	w8, w8, w0, uxtb
  40aef8:	str	w8, [sp, #40]
  40aefc:	ldr	w8, [sp, #40]
  40af00:	stur	w8, [x29, #-148]
  40af04:	ldur	w8, [x29, #-148]
  40af08:	stur	w8, [x29, #-4]
  40af0c:	b	40b4d8 <manager_connect_bus+0xd10>
  40af10:	ldr	x8, [sp, #112]
  40af14:	ldr	x9, [x8]
  40af18:	ldr	x0, [x9, #8]
  40af1c:	ldr	x9, [x8]
  40af20:	mov	x10, xzr
  40af24:	mov	x1, x10
  40af28:	ldr	x2, [sp, #104]
  40af2c:	ldr	x3, [sp, #96]
  40af30:	ldr	x4, [sp, #88]
  40af34:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  40af38:	add	x5, x5, #0xfda
  40af3c:	adrp	x6, 41f000 <method_set_reboot_to_boot_loader_entry+0x5d4>
  40af40:	add	x6, x6, #0x23c
  40af44:	mov	x7, x10
  40af48:	mov	x10, sp
  40af4c:	str	x9, [x10]
  40af50:	bl	406f08 <sd_bus_match_signal_async@plt>
  40af54:	stur	w0, [x29, #-20]
  40af58:	ldur	w11, [x29, #-20]
  40af5c:	cmp	w11, #0x0
  40af60:	cset	w11, ge  // ge = tcont
  40af64:	tbnz	w11, #0, 40afec <manager_connect_bus+0x824>
  40af68:	mov	w8, #0x3                   	// #3
  40af6c:	stur	w8, [x29, #-152]
  40af70:	ldur	w8, [x29, #-20]
  40af74:	stur	w8, [x29, #-156]
  40af78:	stur	wzr, [x29, #-160]
  40af7c:	ldur	w0, [x29, #-160]
  40af80:	bl	406c08 <log_get_max_level_realm@plt>
  40af84:	ldur	w8, [x29, #-152]
  40af88:	and	w8, w8, #0x7
  40af8c:	cmp	w0, w8
  40af90:	b.lt	40afc4 <manager_connect_bus+0x7fc>  // b.tstop
  40af94:	ldur	w8, [x29, #-160]
  40af98:	ldur	w9, [x29, #-152]
  40af9c:	orr	w0, w9, w8, lsl #10
  40afa0:	ldur	w1, [x29, #-156]
  40afa4:	ldr	x2, [sp, #80]
  40afa8:	mov	w3, #0x296                 	// #662
  40afac:	ldr	x4, [sp, #72]
  40afb0:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  40afb4:	add	x5, x5, #0xfe5
  40afb8:	bl	406c18 <log_internal_realm@plt>
  40afbc:	str	w0, [sp, #36]
  40afc0:	b	40afd8 <manager_connect_bus+0x810>
  40afc4:	ldur	w0, [x29, #-156]
  40afc8:	bl	406c28 <abs@plt>
  40afcc:	mov	w8, wzr
  40afd0:	subs	w8, w8, w0, uxtb
  40afd4:	str	w8, [sp, #36]
  40afd8:	ldr	w8, [sp, #36]
  40afdc:	stur	w8, [x29, #-164]
  40afe0:	ldur	w8, [x29, #-164]
  40afe4:	stur	w8, [x29, #-4]
  40afe8:	b	40b4d8 <manager_connect_bus+0xd10>
  40afec:	ldr	x8, [sp, #112]
  40aff0:	ldr	x9, [x8]
  40aff4:	ldr	x0, [x9, #8]
  40aff8:	ldr	x9, [x8]
  40affc:	mov	x10, xzr
  40b000:	mov	x1, x10
  40b004:	ldr	x2, [sp, #104]
  40b008:	ldr	x3, [sp, #96]
  40b00c:	ldr	x4, [sp, #88]
  40b010:	adrp	x5, 441000 <_fini+0xc30>
  40b014:	add	x5, x5, #0x10
  40b018:	adrp	x6, 41f000 <method_set_reboot_to_boot_loader_entry+0x5d4>
  40b01c:	add	x6, x6, #0x7d8
  40b020:	mov	x7, x10
  40b024:	mov	x10, sp
  40b028:	str	x9, [x10]
  40b02c:	bl	406f08 <sd_bus_match_signal_async@plt>
  40b030:	stur	w0, [x29, #-20]
  40b034:	ldur	w11, [x29, #-20]
  40b038:	cmp	w11, #0x0
  40b03c:	cset	w11, ge  // ge = tcont
  40b040:	tbnz	w11, #0, 40b0c8 <manager_connect_bus+0x900>
  40b044:	mov	w8, #0x3                   	// #3
  40b048:	stur	w8, [x29, #-168]
  40b04c:	ldur	w8, [x29, #-20]
  40b050:	stur	w8, [x29, #-172]
  40b054:	stur	wzr, [x29, #-176]
  40b058:	ldur	w0, [x29, #-176]
  40b05c:	bl	406c08 <log_get_max_level_realm@plt>
  40b060:	ldur	w8, [x29, #-168]
  40b064:	and	w8, w8, #0x7
  40b068:	cmp	w0, w8
  40b06c:	b.lt	40b0a0 <manager_connect_bus+0x8d8>  // b.tstop
  40b070:	ldur	w8, [x29, #-176]
  40b074:	ldur	w9, [x29, #-168]
  40b078:	orr	w0, w9, w8, lsl #10
  40b07c:	ldur	w1, [x29, #-172]
  40b080:	ldr	x2, [sp, #80]
  40b084:	mov	w3, #0x2a1                 	// #673
  40b088:	ldr	x4, [sp, #72]
  40b08c:	adrp	x5, 441000 <_fini+0xc30>
  40b090:	add	x5, x5, #0x1c
  40b094:	bl	406c18 <log_internal_realm@plt>
  40b098:	str	w0, [sp, #32]
  40b09c:	b	40b0b4 <manager_connect_bus+0x8ec>
  40b0a0:	ldur	w0, [x29, #-172]
  40b0a4:	bl	406c28 <abs@plt>
  40b0a8:	mov	w8, wzr
  40b0ac:	subs	w8, w8, w0, uxtb
  40b0b0:	str	w8, [sp, #32]
  40b0b4:	ldr	w8, [sp, #32]
  40b0b8:	stur	w8, [x29, #-180]
  40b0bc:	ldur	w8, [x29, #-180]
  40b0c0:	stur	w8, [x29, #-4]
  40b0c4:	b	40b4d8 <manager_connect_bus+0xd10>
  40b0c8:	ldr	x8, [sp, #112]
  40b0cc:	ldr	x9, [x8]
  40b0d0:	ldr	x0, [x9, #8]
  40b0d4:	ldr	x9, [x8]
  40b0d8:	mov	x10, xzr
  40b0dc:	mov	x1, x10
  40b0e0:	ldr	x2, [sp, #104]
  40b0e4:	mov	x3, x10
  40b0e8:	adrp	x4, 441000 <_fini+0xc30>
  40b0ec:	add	x4, x4, #0x48
  40b0f0:	adrp	x5, 441000 <_fini+0xc30>
  40b0f4:	add	x5, x5, #0x68
  40b0f8:	adrp	x6, 41f000 <method_set_reboot_to_boot_loader_entry+0x5d4>
  40b0fc:	add	x6, x6, #0x9b4
  40b100:	mov	x7, x10
  40b104:	mov	x10, sp
  40b108:	str	x9, [x10]
  40b10c:	bl	406f08 <sd_bus_match_signal_async@plt>
  40b110:	stur	w0, [x29, #-20]
  40b114:	ldur	w11, [x29, #-20]
  40b118:	cmp	w11, #0x0
  40b11c:	cset	w11, ge  // ge = tcont
  40b120:	tbnz	w11, #0, 40b1a8 <manager_connect_bus+0x9e0>
  40b124:	mov	w8, #0x3                   	// #3
  40b128:	stur	w8, [x29, #-184]
  40b12c:	ldur	w8, [x29, #-20]
  40b130:	stur	w8, [x29, #-188]
  40b134:	str	wzr, [sp, #192]
  40b138:	ldr	w0, [sp, #192]
  40b13c:	bl	406c08 <log_get_max_level_realm@plt>
  40b140:	ldur	w8, [x29, #-184]
  40b144:	and	w8, w8, #0x7
  40b148:	cmp	w0, w8
  40b14c:	b.lt	40b180 <manager_connect_bus+0x9b8>  // b.tstop
  40b150:	ldr	w8, [sp, #192]
  40b154:	ldur	w9, [x29, #-184]
  40b158:	orr	w0, w9, w8, lsl #10
  40b15c:	ldur	w1, [x29, #-188]
  40b160:	ldr	x2, [sp, #80]
  40b164:	mov	w3, #0x2ac                 	// #684
  40b168:	ldr	x4, [sp, #72]
  40b16c:	adrp	x5, 441000 <_fini+0xc30>
  40b170:	add	x5, x5, #0x7a
  40b174:	bl	406c18 <log_internal_realm@plt>
  40b178:	str	w0, [sp, #28]
  40b17c:	b	40b194 <manager_connect_bus+0x9cc>
  40b180:	ldur	w0, [x29, #-188]
  40b184:	bl	406c28 <abs@plt>
  40b188:	mov	w8, wzr
  40b18c:	subs	w8, w8, w0, uxtb
  40b190:	str	w8, [sp, #28]
  40b194:	ldr	w8, [sp, #28]
  40b198:	str	w8, [sp, #188]
  40b19c:	ldr	w8, [sp, #188]
  40b1a0:	stur	w8, [x29, #-4]
  40b1a4:	b	40b4d8 <manager_connect_bus+0xd10>
  40b1a8:	ldr	x8, [sp, #112]
  40b1ac:	ldr	x9, [x8]
  40b1b0:	ldr	x0, [x9, #8]
  40b1b4:	ldr	x9, [x8]
  40b1b8:	mov	x10, xzr
  40b1bc:	mov	x1, x10
  40b1c0:	ldr	x2, [sp, #104]
  40b1c4:	ldr	x3, [sp, #96]
  40b1c8:	ldr	x4, [sp, #88]
  40b1cc:	adrp	x5, 441000 <_fini+0xc30>
  40b1d0:	add	x5, x5, #0xac
  40b1d4:	adrp	x6, 41f000 <method_set_reboot_to_boot_loader_entry+0x5d4>
  40b1d8:	add	x6, x6, #0xb88
  40b1dc:	mov	x7, x10
  40b1e0:	mov	x10, sp
  40b1e4:	str	x9, [x10]
  40b1e8:	bl	406f08 <sd_bus_match_signal_async@plt>
  40b1ec:	stur	w0, [x29, #-20]
  40b1f0:	ldur	w11, [x29, #-20]
  40b1f4:	cmp	w11, #0x0
  40b1f8:	cset	w11, ge  // ge = tcont
  40b1fc:	tbnz	w11, #0, 40b284 <manager_connect_bus+0xabc>
  40b200:	mov	w8, #0x3                   	// #3
  40b204:	str	w8, [sp, #184]
  40b208:	ldur	w8, [x29, #-20]
  40b20c:	str	w8, [sp, #180]
  40b210:	str	wzr, [sp, #176]
  40b214:	ldr	w0, [sp, #176]
  40b218:	bl	406c08 <log_get_max_level_realm@plt>
  40b21c:	ldr	w8, [sp, #184]
  40b220:	and	w8, w8, #0x7
  40b224:	cmp	w0, w8
  40b228:	b.lt	40b25c <manager_connect_bus+0xa94>  // b.tstop
  40b22c:	ldr	w8, [sp, #176]
  40b230:	ldr	w9, [sp, #184]
  40b234:	orr	w0, w9, w8, lsl #10
  40b238:	ldr	w1, [sp, #180]
  40b23c:	ldr	x2, [sp, #80]
  40b240:	mov	w3, #0x2b7                 	// #695
  40b244:	ldr	x4, [sp, #72]
  40b248:	adrp	x5, 441000 <_fini+0xc30>
  40b24c:	add	x5, x5, #0xb6
  40b250:	bl	406c18 <log_internal_realm@plt>
  40b254:	str	w0, [sp, #24]
  40b258:	b	40b270 <manager_connect_bus+0xaa8>
  40b25c:	ldr	w0, [sp, #180]
  40b260:	bl	406c28 <abs@plt>
  40b264:	mov	w8, wzr
  40b268:	subs	w8, w8, w0, uxtb
  40b26c:	str	w8, [sp, #24]
  40b270:	ldr	w8, [sp, #24]
  40b274:	str	w8, [sp, #172]
  40b278:	ldr	w8, [sp, #172]
  40b27c:	stur	w8, [x29, #-4]
  40b280:	b	40b4d8 <manager_connect_bus+0xd10>
  40b284:	ldr	x8, [sp, #112]
  40b288:	ldr	x9, [x8]
  40b28c:	ldr	x0, [x9, #8]
  40b290:	mov	x9, xzr
  40b294:	mov	x1, x9
  40b298:	ldr	x2, [sp, #104]
  40b29c:	ldr	x3, [sp, #96]
  40b2a0:	ldr	x4, [sp, #88]
  40b2a4:	adrp	x5, 441000 <_fini+0xc30>
  40b2a8:	add	x5, x5, #0xe0
  40b2ac:	mov	x6, x9
  40b2b0:	mov	x7, x9
  40b2b4:	mov	x10, sp
  40b2b8:	str	x9, [x10]
  40b2bc:	bl	406f18 <sd_bus_call_method_async@plt>
  40b2c0:	stur	w0, [x29, #-20]
  40b2c4:	ldur	w11, [x29, #-20]
  40b2c8:	cmp	w11, #0x0
  40b2cc:	cset	w11, ge  // ge = tcont
  40b2d0:	tbnz	w11, #0, 40b358 <manager_connect_bus+0xb90>
  40b2d4:	mov	w8, #0x3                   	// #3
  40b2d8:	str	w8, [sp, #168]
  40b2dc:	ldur	w8, [x29, #-20]
  40b2e0:	str	w8, [sp, #164]
  40b2e4:	str	wzr, [sp, #160]
  40b2e8:	ldr	w0, [sp, #160]
  40b2ec:	bl	406c08 <log_get_max_level_realm@plt>
  40b2f0:	ldr	w8, [sp, #168]
  40b2f4:	and	w8, w8, #0x7
  40b2f8:	cmp	w0, w8
  40b2fc:	b.lt	40b330 <manager_connect_bus+0xb68>  // b.tstop
  40b300:	ldr	w8, [sp, #160]
  40b304:	ldr	w9, [sp, #168]
  40b308:	orr	w0, w9, w8, lsl #10
  40b30c:	ldr	w1, [sp, #164]
  40b310:	ldr	x2, [sp, #80]
  40b314:	mov	w3, #0x2c3                 	// #707
  40b318:	ldr	x4, [sp, #72]
  40b31c:	adrp	x5, 441000 <_fini+0xc30>
  40b320:	add	x5, x5, #0xea
  40b324:	bl	406c18 <log_internal_realm@plt>
  40b328:	str	w0, [sp, #20]
  40b32c:	b	40b344 <manager_connect_bus+0xb7c>
  40b330:	ldr	w0, [sp, #164]
  40b334:	bl	406c28 <abs@plt>
  40b338:	mov	w8, wzr
  40b33c:	subs	w8, w8, w0, uxtb
  40b340:	str	w8, [sp, #20]
  40b344:	ldr	w8, [sp, #20]
  40b348:	str	w8, [sp, #156]
  40b34c:	ldr	w8, [sp, #156]
  40b350:	stur	w8, [x29, #-4]
  40b354:	b	40b4d8 <manager_connect_bus+0xd10>
  40b358:	ldr	x8, [sp, #112]
  40b35c:	ldr	x9, [x8]
  40b360:	ldr	x0, [x9, #8]
  40b364:	mov	x9, xzr
  40b368:	mov	x1, x9
  40b36c:	adrp	x2, 441000 <_fini+0xc30>
  40b370:	add	x2, x2, #0x10c
  40b374:	mov	x3, x9
  40b378:	mov	x4, x9
  40b37c:	mov	x5, x9
  40b380:	bl	406f28 <sd_bus_request_name_async@plt>
  40b384:	stur	w0, [x29, #-20]
  40b388:	ldur	w10, [x29, #-20]
  40b38c:	cmp	w10, #0x0
  40b390:	cset	w10, ge  // ge = tcont
  40b394:	tbnz	w10, #0, 40b41c <manager_connect_bus+0xc54>
  40b398:	mov	w8, #0x3                   	// #3
  40b39c:	str	w8, [sp, #152]
  40b3a0:	ldur	w8, [x29, #-20]
  40b3a4:	str	w8, [sp, #148]
  40b3a8:	str	wzr, [sp, #144]
  40b3ac:	ldr	w0, [sp, #144]
  40b3b0:	bl	406c08 <log_get_max_level_realm@plt>
  40b3b4:	ldr	w8, [sp, #152]
  40b3b8:	and	w8, w8, #0x7
  40b3bc:	cmp	w0, w8
  40b3c0:	b.lt	40b3f4 <manager_connect_bus+0xc2c>  // b.tstop
  40b3c4:	ldr	w8, [sp, #144]
  40b3c8:	ldr	w9, [sp, #152]
  40b3cc:	orr	w0, w9, w8, lsl #10
  40b3d0:	ldr	w1, [sp, #148]
  40b3d4:	ldr	x2, [sp, #80]
  40b3d8:	mov	w3, #0x2c7                 	// #711
  40b3dc:	ldr	x4, [sp, #72]
  40b3e0:	adrp	x5, 441000 <_fini+0xc30>
  40b3e4:	add	x5, x5, #0x123
  40b3e8:	bl	406c18 <log_internal_realm@plt>
  40b3ec:	str	w0, [sp, #16]
  40b3f0:	b	40b408 <manager_connect_bus+0xc40>
  40b3f4:	ldr	w0, [sp, #148]
  40b3f8:	bl	406c28 <abs@plt>
  40b3fc:	mov	w8, wzr
  40b400:	subs	w8, w8, w0, uxtb
  40b404:	str	w8, [sp, #16]
  40b408:	ldr	w8, [sp, #16]
  40b40c:	str	w8, [sp, #140]
  40b410:	ldr	w8, [sp, #140]
  40b414:	stur	w8, [x29, #-4]
  40b418:	b	40b4d8 <manager_connect_bus+0xd10>
  40b41c:	ldr	x8, [sp, #112]
  40b420:	ldr	x9, [x8]
  40b424:	ldr	x0, [x9, #8]
  40b428:	ldr	x9, [x8]
  40b42c:	ldr	x1, [x9]
  40b430:	mov	w10, wzr
  40b434:	mov	w2, w10
  40b438:	bl	406f38 <sd_bus_attach_event@plt>
  40b43c:	stur	w0, [x29, #-20]
  40b440:	ldur	w10, [x29, #-20]
  40b444:	cmp	w10, #0x0
  40b448:	cset	w10, ge  // ge = tcont
  40b44c:	tbnz	w10, #0, 40b4d4 <manager_connect_bus+0xd0c>
  40b450:	mov	w8, #0x3                   	// #3
  40b454:	str	w8, [sp, #136]
  40b458:	ldur	w8, [x29, #-20]
  40b45c:	str	w8, [sp, #132]
  40b460:	str	wzr, [sp, #128]
  40b464:	ldr	w0, [sp, #128]
  40b468:	bl	406c08 <log_get_max_level_realm@plt>
  40b46c:	ldr	w8, [sp, #136]
  40b470:	and	w8, w8, #0x7
  40b474:	cmp	w0, w8
  40b478:	b.lt	40b4ac <manager_connect_bus+0xce4>  // b.tstop
  40b47c:	ldr	w8, [sp, #128]
  40b480:	ldr	w9, [sp, #136]
  40b484:	orr	w0, w9, w8, lsl #10
  40b488:	ldr	w1, [sp, #132]
  40b48c:	ldr	x2, [sp, #80]
  40b490:	mov	w3, #0x2cb                 	// #715
  40b494:	ldr	x4, [sp, #72]
  40b498:	adrp	x5, 441000 <_fini+0xc30>
  40b49c:	add	x5, x5, #0x13e
  40b4a0:	bl	406c18 <log_internal_realm@plt>
  40b4a4:	str	w0, [sp, #12]
  40b4a8:	b	40b4c0 <manager_connect_bus+0xcf8>
  40b4ac:	ldr	w0, [sp, #132]
  40b4b0:	bl	406c28 <abs@plt>
  40b4b4:	mov	w8, wzr
  40b4b8:	subs	w8, w8, w0, uxtb
  40b4bc:	str	w8, [sp, #12]
  40b4c0:	ldr	w8, [sp, #12]
  40b4c4:	str	w8, [sp, #124]
  40b4c8:	ldr	w8, [sp, #124]
  40b4cc:	stur	w8, [x29, #-4]
  40b4d0:	b	40b4d8 <manager_connect_bus+0xd10>
  40b4d4:	stur	wzr, [x29, #-4]
  40b4d8:	ldur	w0, [x29, #-4]
  40b4dc:	ldr	x28, [sp, #400]
  40b4e0:	ldp	x29, x30, [sp, #384]
  40b4e4:	add	sp, sp, #0x1a0
  40b4e8:	ret

000000000040b4ec <manager_enumerate_devices>:
  40b4ec:	sub	sp, sp, #0x50
  40b4f0:	stp	x29, x30, [sp, #64]
  40b4f4:	add	x29, sp, #0x40
  40b4f8:	mov	x8, xzr
  40b4fc:	adrp	x9, 440000 <on_brightness_writer_exit+0x15c>
  40b500:	add	x9, x9, #0x3f0
  40b504:	add	x2, x9, #0x3
  40b508:	stur	x0, [x29, #-16]
  40b50c:	stur	x8, [x29, #-24]
  40b510:	str	x2, [sp, #8]
  40b514:	ldur	x8, [x29, #-16]
  40b518:	cmp	x8, #0x0
  40b51c:	cset	w9, ne  // ne = any
  40b520:	mov	w10, #0x1                   	// #1
  40b524:	eor	w9, w9, #0x1
  40b528:	eor	w9, w9, w10
  40b52c:	eor	w9, w9, w10
  40b530:	and	w9, w9, #0x1
  40b534:	mov	w0, w9
  40b538:	sxtw	x8, w0
  40b53c:	cbz	x8, 40b564 <manager_enumerate_devices+0x78>
  40b540:	mov	w8, wzr
  40b544:	mov	w0, w8
  40b548:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40b54c:	add	x1, x1, #0x5ef
  40b550:	ldr	x2, [sp, #8]
  40b554:	mov	w3, #0xae                  	// #174
  40b558:	adrp	x4, 441000 <_fini+0xc30>
  40b55c:	add	x4, x4, #0x165
  40b560:	bl	406c68 <log_assert_failed_realm@plt>
  40b564:	sub	x0, x29, #0x18
  40b568:	bl	406f48 <sd_device_enumerator_new@plt>
  40b56c:	str	w0, [sp, #28]
  40b570:	ldr	w8, [sp, #28]
  40b574:	cmp	w8, #0x0
  40b578:	cset	w8, ge  // ge = tcont
  40b57c:	tbnz	w8, #0, 40b594 <manager_enumerate_devices+0xa8>
  40b580:	ldr	w8, [sp, #28]
  40b584:	stur	w8, [x29, #-4]
  40b588:	mov	w8, #0x1                   	// #1
  40b58c:	str	w8, [sp, #24]
  40b590:	b	40b628 <manager_enumerate_devices+0x13c>
  40b594:	ldur	x0, [x29, #-24]
  40b598:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40b59c:	add	x1, x1, #0xb7e
  40b5a0:	bl	406f58 <sd_device_enumerator_add_match_tag@plt>
  40b5a4:	str	w0, [sp, #28]
  40b5a8:	ldr	w8, [sp, #28]
  40b5ac:	cmp	w8, #0x0
  40b5b0:	cset	w8, ge  // ge = tcont
  40b5b4:	tbnz	w8, #0, 40b5cc <manager_enumerate_devices+0xe0>
  40b5b8:	ldr	w8, [sp, #28]
  40b5bc:	stur	w8, [x29, #-4]
  40b5c0:	mov	w8, #0x1                   	// #1
  40b5c4:	str	w8, [sp, #24]
  40b5c8:	b	40b628 <manager_enumerate_devices+0x13c>
  40b5cc:	ldur	x0, [x29, #-24]
  40b5d0:	bl	406f68 <sd_device_enumerator_get_device_first@plt>
  40b5d4:	str	x0, [sp, #32]
  40b5d8:	ldr	x8, [sp, #32]
  40b5dc:	cbz	x8, 40b618 <manager_enumerate_devices+0x12c>
  40b5e0:	ldur	x0, [x29, #-16]
  40b5e4:	ldr	x1, [sp, #32]
  40b5e8:	bl	411f50 <manager_process_seat_device>
  40b5ec:	str	w0, [sp, #20]
  40b5f0:	ldr	w8, [sp, #20]
  40b5f4:	cmp	w8, #0x0
  40b5f8:	cset	w8, ge  // ge = tcont
  40b5fc:	tbnz	w8, #0, 40b608 <manager_enumerate_devices+0x11c>
  40b600:	ldr	w8, [sp, #20]
  40b604:	str	w8, [sp, #28]
  40b608:	ldur	x0, [x29, #-24]
  40b60c:	bl	406f78 <sd_device_enumerator_get_device_next@plt>
  40b610:	str	x0, [sp, #32]
  40b614:	b	40b5d8 <manager_enumerate_devices+0xec>
  40b618:	ldr	w8, [sp, #28]
  40b61c:	stur	w8, [x29, #-4]
  40b620:	mov	w8, #0x1                   	// #1
  40b624:	str	w8, [sp, #24]
  40b628:	sub	x0, x29, #0x18
  40b62c:	bl	40d970 <sd_device_enumerator_unrefp>
  40b630:	ldur	w0, [x29, #-4]
  40b634:	ldp	x29, x30, [sp, #64]
  40b638:	add	sp, sp, #0x50
  40b63c:	ret

000000000040b640 <manager_enumerate_seats>:
  40b640:	sub	sp, sp, #0x80
  40b644:	stp	x29, x30, [sp, #112]
  40b648:	add	x29, sp, #0x70
  40b64c:	mov	x8, xzr
  40b650:	adrp	x9, 440000 <on_brightness_writer_exit+0x15c>
  40b654:	add	x9, x9, #0x3f0
  40b658:	add	x9, x9, #0x3
  40b65c:	stur	x0, [x29, #-16]
  40b660:	stur	x8, [x29, #-24]
  40b664:	stur	wzr, [x29, #-36]
  40b668:	str	x9, [sp, #16]
  40b66c:	ldur	x8, [x29, #-16]
  40b670:	cmp	x8, #0x0
  40b674:	cset	w9, ne  // ne = any
  40b678:	mov	w10, #0x1                   	// #1
  40b67c:	eor	w9, w9, #0x1
  40b680:	eor	w9, w9, w10
  40b684:	eor	w9, w9, w10
  40b688:	and	w9, w9, #0x1
  40b68c:	mov	w0, w9
  40b690:	sxtw	x8, w0
  40b694:	cbz	x8, 40b6bc <manager_enumerate_seats+0x7c>
  40b698:	mov	w8, wzr
  40b69c:	mov	w0, w8
  40b6a0:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40b6a4:	add	x1, x1, #0x5ef
  40b6a8:	ldr	x2, [sp, #16]
  40b6ac:	mov	w3, #0xee                  	// #238
  40b6b0:	adrp	x4, 441000 <_fini+0xc30>
  40b6b4:	add	x4, x4, #0x18e
  40b6b8:	bl	406c68 <log_assert_failed_realm@plt>
  40b6bc:	adrp	x0, 440000 <on_brightness_writer_exit+0x15c>
  40b6c0:	add	x0, x0, #0x44e
  40b6c4:	bl	406f88 <opendir@plt>
  40b6c8:	stur	x0, [x29, #-24]
  40b6cc:	ldur	x8, [x29, #-24]
  40b6d0:	cbnz	x8, 40b788 <manager_enumerate_seats+0x148>
  40b6d4:	bl	406e08 <__errno_location@plt>
  40b6d8:	ldr	w8, [x0]
  40b6dc:	cmp	w8, #0x2
  40b6e0:	b.ne	40b6f4 <manager_enumerate_seats+0xb4>  // b.any
  40b6e4:	stur	wzr, [x29, #-4]
  40b6e8:	mov	w8, #0x1                   	// #1
  40b6ec:	stur	w8, [x29, #-40]
  40b6f0:	b	40b91c <manager_enumerate_seats+0x2dc>
  40b6f4:	mov	w8, #0x3                   	// #3
  40b6f8:	stur	w8, [x29, #-44]
  40b6fc:	bl	406e08 <__errno_location@plt>
  40b700:	ldr	w8, [x0]
  40b704:	stur	w8, [x29, #-48]
  40b708:	stur	wzr, [x29, #-52]
  40b70c:	ldur	w0, [x29, #-52]
  40b710:	bl	406c08 <log_get_max_level_realm@plt>
  40b714:	ldur	w8, [x29, #-44]
  40b718:	and	w8, w8, #0x7
  40b71c:	cmp	w0, w8
  40b720:	b.lt	40b758 <manager_enumerate_seats+0x118>  // b.tstop
  40b724:	ldur	w8, [x29, #-52]
  40b728:	ldur	w9, [x29, #-44]
  40b72c:	orr	w0, w9, w8, lsl #10
  40b730:	ldur	w1, [x29, #-48]
  40b734:	ldr	x2, [sp, #16]
  40b738:	mov	w3, #0xf9                  	// #249
  40b73c:	adrp	x4, 441000 <_fini+0xc30>
  40b740:	add	x4, x4, #0x1b5
  40b744:	adrp	x5, 441000 <_fini+0xc30>
  40b748:	add	x5, x5, #0x1cd
  40b74c:	bl	406c18 <log_internal_realm@plt>
  40b750:	str	w0, [sp, #12]
  40b754:	b	40b76c <manager_enumerate_seats+0x12c>
  40b758:	ldur	w0, [x29, #-48]
  40b75c:	bl	406c28 <abs@plt>
  40b760:	mov	w8, wzr
  40b764:	subs	w8, w8, w0, uxtb
  40b768:	str	w8, [sp, #12]
  40b76c:	ldr	w8, [sp, #12]
  40b770:	str	w8, [sp, #56]
  40b774:	ldr	w8, [sp, #56]
  40b778:	stur	w8, [x29, #-4]
  40b77c:	mov	w8, #0x1                   	// #1
  40b780:	stur	w8, [x29, #-40]
  40b784:	b	40b91c <manager_enumerate_seats+0x2dc>
  40b788:	bl	406e08 <__errno_location@plt>
  40b78c:	str	wzr, [x0]
  40b790:	ldur	x0, [x29, #-24]
  40b794:	bl	406f98 <readdir64@plt>
  40b798:	stur	x0, [x29, #-32]
  40b79c:	ldur	x8, [x29, #-32]
  40b7a0:	cbnz	x8, 40b7dc <manager_enumerate_seats+0x19c>
  40b7a4:	bl	406e08 <__errno_location@plt>
  40b7a8:	ldr	w8, [x0]
  40b7ac:	cmp	w8, #0x0
  40b7b0:	cset	w8, le
  40b7b4:	tbnz	w8, #0, 40b7d8 <manager_enumerate_seats+0x198>
  40b7b8:	bl	406e08 <__errno_location@plt>
  40b7bc:	ldr	w8, [x0]
  40b7c0:	mov	w9, wzr
  40b7c4:	subs	w8, w9, w8
  40b7c8:	stur	w8, [x29, #-4]
  40b7cc:	mov	w8, #0x1                   	// #1
  40b7d0:	stur	w8, [x29, #-40]
  40b7d4:	b	40b91c <manager_enumerate_seats+0x2dc>
  40b7d8:	b	40b90c <manager_enumerate_seats+0x2cc>
  40b7dc:	ldur	x8, [x29, #-32]
  40b7e0:	add	x0, x8, #0x13
  40b7e4:	bl	406fa8 <hidden_or_backup_file@plt>
  40b7e8:	tbnz	w0, #0, 40b7f0 <manager_enumerate_seats+0x1b0>
  40b7ec:	b	40b7f4 <manager_enumerate_seats+0x1b4>
  40b7f0:	b	40b8f4 <manager_enumerate_seats+0x2b4>
  40b7f4:	ldur	x0, [x29, #-32]
  40b7f8:	bl	406fb8 <dirent_is_file@plt>
  40b7fc:	tbnz	w0, #0, 40b804 <manager_enumerate_seats+0x1c4>
  40b800:	b	40b8f4 <manager_enumerate_seats+0x2b4>
  40b804:	ldur	x8, [x29, #-16]
  40b808:	ldr	x0, [x8, #24]
  40b80c:	ldur	x8, [x29, #-32]
  40b810:	add	x1, x8, #0x13
  40b814:	bl	40d9d8 <hashmap_get>
  40b818:	str	x0, [sp, #48]
  40b81c:	ldr	x8, [sp, #48]
  40b820:	cbnz	x8, 40b8d0 <manager_enumerate_seats+0x290>
  40b824:	ldur	x0, [x29, #-24]
  40b828:	bl	406fc8 <dirfd@plt>
  40b82c:	ldur	x8, [x29, #-32]
  40b830:	add	x1, x8, #0x13
  40b834:	mov	w9, wzr
  40b838:	mov	w2, w9
  40b83c:	bl	406fd8 <unlinkat@plt>
  40b840:	cmp	w0, #0x0
  40b844:	cset	w9, ge  // ge = tcont
  40b848:	tbnz	w9, #0, 40b8cc <manager_enumerate_seats+0x28c>
  40b84c:	mov	w8, #0x4                   	// #4
  40b850:	str	w8, [sp, #40]
  40b854:	str	wzr, [sp, #36]
  40b858:	str	wzr, [sp, #32]
  40b85c:	ldr	w0, [sp, #32]
  40b860:	bl	406c08 <log_get_max_level_realm@plt>
  40b864:	ldr	w8, [sp, #40]
  40b868:	and	w8, w8, #0x7
  40b86c:	cmp	w0, w8
  40b870:	b.lt	40b8b0 <manager_enumerate_seats+0x270>  // b.tstop
  40b874:	ldr	w8, [sp, #32]
  40b878:	ldr	w9, [sp, #40]
  40b87c:	orr	w0, w9, w8, lsl #10
  40b880:	ldr	w1, [sp, #36]
  40b884:	ldur	x10, [x29, #-32]
  40b888:	add	x6, x10, #0x13
  40b88c:	ldr	x2, [sp, #16]
  40b890:	mov	w3, #0x107                 	// #263
  40b894:	adrp	x4, 441000 <_fini+0xc30>
  40b898:	add	x4, x4, #0x1b5
  40b89c:	adrp	x5, 441000 <_fini+0xc30>
  40b8a0:	add	x5, x5, #0x1f3
  40b8a4:	bl	406c18 <log_internal_realm@plt>
  40b8a8:	str	w0, [sp, #8]
  40b8ac:	b	40b8c4 <manager_enumerate_seats+0x284>
  40b8b0:	ldr	w0, [sp, #36]
  40b8b4:	bl	406c28 <abs@plt>
  40b8b8:	mov	w8, wzr
  40b8bc:	subs	w8, w8, w0, uxtb
  40b8c0:	str	w8, [sp, #8]
  40b8c4:	ldr	w8, [sp, #8]
  40b8c8:	str	w8, [sp, #28]
  40b8cc:	b	40b8f4 <manager_enumerate_seats+0x2b4>
  40b8d0:	ldr	x0, [sp, #48]
  40b8d4:	bl	429d0c <seat_load>
  40b8d8:	str	w0, [sp, #44]
  40b8dc:	ldr	w8, [sp, #44]
  40b8e0:	cmp	w8, #0x0
  40b8e4:	cset	w8, ge  // ge = tcont
  40b8e8:	tbnz	w8, #0, 40b8f4 <manager_enumerate_seats+0x2b4>
  40b8ec:	ldr	w8, [sp, #44]
  40b8f0:	stur	w8, [x29, #-36]
  40b8f4:	bl	406e08 <__errno_location@plt>
  40b8f8:	str	wzr, [x0]
  40b8fc:	ldur	x0, [x29, #-24]
  40b900:	bl	406f98 <readdir64@plt>
  40b904:	stur	x0, [x29, #-32]
  40b908:	b	40b79c <manager_enumerate_seats+0x15c>
  40b90c:	ldur	w8, [x29, #-36]
  40b910:	stur	w8, [x29, #-4]
  40b914:	mov	w8, #0x1                   	// #1
  40b918:	stur	w8, [x29, #-40]
  40b91c:	sub	x0, x29, #0x18
  40b920:	bl	40d9a4 <closedirp>
  40b924:	ldur	w0, [x29, #-4]
  40b928:	ldp	x29, x30, [sp, #112]
  40b92c:	add	sp, sp, #0x80
  40b930:	ret

000000000040b934 <manager_enumerate_users>:
  40b934:	sub	sp, sp, #0x80
  40b938:	stp	x29, x30, [sp, #112]
  40b93c:	add	x29, sp, #0x70
  40b940:	mov	x8, xzr
  40b944:	adrp	x9, 440000 <on_brightness_writer_exit+0x15c>
  40b948:	add	x9, x9, #0x3f0
  40b94c:	add	x9, x9, #0x3
  40b950:	stur	x0, [x29, #-16]
  40b954:	stur	x8, [x29, #-24]
  40b958:	str	x9, [sp, #16]
  40b95c:	ldur	x8, [x29, #-16]
  40b960:	cmp	x8, #0x0
  40b964:	cset	w9, ne  // ne = any
  40b968:	mov	w10, #0x1                   	// #1
  40b96c:	eor	w9, w9, #0x1
  40b970:	eor	w9, w9, w10
  40b974:	eor	w9, w9, w10
  40b978:	and	w9, w9, #0x1
  40b97c:	mov	w0, w9
  40b980:	sxtw	x8, w0
  40b984:	cbz	x8, 40b9ac <manager_enumerate_users+0x78>
  40b988:	mov	w8, wzr
  40b98c:	mov	w0, w8
  40b990:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40b994:	add	x1, x1, #0x5ef
  40b998:	ldr	x2, [sp, #16]
  40b99c:	mov	w3, #0x136                 	// #310
  40b9a0:	adrp	x4, 441000 <_fini+0xc30>
  40b9a4:	add	x4, x4, #0x21e
  40b9a8:	bl	406c68 <log_assert_failed_realm@plt>
  40b9ac:	ldur	x0, [x29, #-16]
  40b9b0:	bl	40da04 <manager_enumerate_linger_users>
  40b9b4:	stur	w0, [x29, #-36]
  40b9b8:	adrp	x0, 440000 <on_brightness_writer_exit+0x15c>
  40b9bc:	add	x0, x0, #0x461
  40b9c0:	bl	406f88 <opendir@plt>
  40b9c4:	stur	x0, [x29, #-24]
  40b9c8:	ldur	x8, [x29, #-24]
  40b9cc:	cbnz	x8, 40ba84 <manager_enumerate_users+0x150>
  40b9d0:	bl	406e08 <__errno_location@plt>
  40b9d4:	ldr	w8, [x0]
  40b9d8:	cmp	w8, #0x2
  40b9dc:	b.ne	40b9f0 <manager_enumerate_users+0xbc>  // b.any
  40b9e0:	stur	wzr, [x29, #-4]
  40b9e4:	mov	w8, #0x1                   	// #1
  40b9e8:	stur	w8, [x29, #-44]
  40b9ec:	b	40bc0c <manager_enumerate_users+0x2d8>
  40b9f0:	mov	w8, #0x3                   	// #3
  40b9f4:	stur	w8, [x29, #-48]
  40b9f8:	bl	406e08 <__errno_location@plt>
  40b9fc:	ldr	w8, [x0]
  40ba00:	stur	w8, [x29, #-52]
  40ba04:	str	wzr, [sp, #56]
  40ba08:	ldr	w0, [sp, #56]
  40ba0c:	bl	406c08 <log_get_max_level_realm@plt>
  40ba10:	ldur	w8, [x29, #-48]
  40ba14:	and	w8, w8, #0x7
  40ba18:	cmp	w0, w8
  40ba1c:	b.lt	40ba54 <manager_enumerate_users+0x120>  // b.tstop
  40ba20:	ldr	w8, [sp, #56]
  40ba24:	ldur	w9, [x29, #-48]
  40ba28:	orr	w0, w9, w8, lsl #10
  40ba2c:	ldur	w1, [x29, #-52]
  40ba30:	ldr	x2, [sp, #16]
  40ba34:	mov	w3, #0x141                 	// #321
  40ba38:	adrp	x4, 441000 <_fini+0xc30>
  40ba3c:	add	x4, x4, #0x245
  40ba40:	adrp	x5, 441000 <_fini+0xc30>
  40ba44:	add	x5, x5, #0x25d
  40ba48:	bl	406c18 <log_internal_realm@plt>
  40ba4c:	str	w0, [sp, #12]
  40ba50:	b	40ba68 <manager_enumerate_users+0x134>
  40ba54:	ldur	w0, [x29, #-52]
  40ba58:	bl	406c28 <abs@plt>
  40ba5c:	mov	w8, wzr
  40ba60:	subs	w8, w8, w0, uxtb
  40ba64:	str	w8, [sp, #12]
  40ba68:	ldr	w8, [sp, #12]
  40ba6c:	str	w8, [sp, #52]
  40ba70:	ldr	w8, [sp, #52]
  40ba74:	stur	w8, [x29, #-4]
  40ba78:	mov	w8, #0x1                   	// #1
  40ba7c:	stur	w8, [x29, #-44]
  40ba80:	b	40bc0c <manager_enumerate_users+0x2d8>
  40ba84:	bl	406e08 <__errno_location@plt>
  40ba88:	str	wzr, [x0]
  40ba8c:	ldur	x0, [x29, #-24]
  40ba90:	bl	406f98 <readdir64@plt>
  40ba94:	stur	x0, [x29, #-32]
  40ba98:	ldur	x8, [x29, #-32]
  40ba9c:	cbnz	x8, 40bad8 <manager_enumerate_users+0x1a4>
  40baa0:	bl	406e08 <__errno_location@plt>
  40baa4:	ldr	w8, [x0]
  40baa8:	cmp	w8, #0x0
  40baac:	cset	w8, le
  40bab0:	tbnz	w8, #0, 40bad4 <manager_enumerate_users+0x1a0>
  40bab4:	bl	406e08 <__errno_location@plt>
  40bab8:	ldr	w8, [x0]
  40babc:	mov	w9, wzr
  40bac0:	subs	w8, w9, w8
  40bac4:	stur	w8, [x29, #-4]
  40bac8:	mov	w8, #0x1                   	// #1
  40bacc:	stur	w8, [x29, #-44]
  40bad0:	b	40bc0c <manager_enumerate_users+0x2d8>
  40bad4:	b	40bbfc <manager_enumerate_users+0x2c8>
  40bad8:	ldur	x8, [x29, #-32]
  40badc:	add	x0, x8, #0x13
  40bae0:	bl	406fa8 <hidden_or_backup_file@plt>
  40bae4:	tbnz	w0, #0, 40baec <manager_enumerate_users+0x1b8>
  40bae8:	b	40baf0 <manager_enumerate_users+0x1bc>
  40baec:	b	40bbe4 <manager_enumerate_users+0x2b0>
  40baf0:	ldur	x0, [x29, #-32]
  40baf4:	bl	406fb8 <dirent_is_file@plt>
  40baf8:	tbnz	w0, #0, 40bb00 <manager_enumerate_users+0x1cc>
  40bafc:	b	40bbe4 <manager_enumerate_users+0x2b0>
  40bb00:	ldur	x0, [x29, #-16]
  40bb04:	ldur	x8, [x29, #-32]
  40bb08:	add	x1, x8, #0x13
  40bb0c:	add	x2, sp, #0x28
  40bb10:	bl	411a60 <manager_add_user_by_name>
  40bb14:	stur	w0, [x29, #-40]
  40bb18:	ldur	w9, [x29, #-40]
  40bb1c:	cmp	w9, #0x0
  40bb20:	cset	w9, ge  // ge = tcont
  40bb24:	tbnz	w9, #0, 40bbb8 <manager_enumerate_users+0x284>
  40bb28:	mov	w8, #0x4                   	// #4
  40bb2c:	str	w8, [sp, #36]
  40bb30:	ldur	w8, [x29, #-40]
  40bb34:	str	w8, [sp, #32]
  40bb38:	str	wzr, [sp, #28]
  40bb3c:	ldr	w0, [sp, #28]
  40bb40:	bl	406c08 <log_get_max_level_realm@plt>
  40bb44:	ldr	w8, [sp, #36]
  40bb48:	and	w8, w8, #0x7
  40bb4c:	cmp	w0, w8
  40bb50:	b.lt	40bb90 <manager_enumerate_users+0x25c>  // b.tstop
  40bb54:	ldr	w8, [sp, #28]
  40bb58:	ldr	w9, [sp, #36]
  40bb5c:	orr	w0, w9, w8, lsl #10
  40bb60:	ldr	w1, [sp, #32]
  40bb64:	ldur	x10, [x29, #-32]
  40bb68:	add	x6, x10, #0x13
  40bb6c:	ldr	x2, [sp, #16]
  40bb70:	mov	w3, #0x14c                 	// #332
  40bb74:	adrp	x4, 441000 <_fini+0xc30>
  40bb78:	add	x4, x4, #0x245
  40bb7c:	adrp	x5, 441000 <_fini+0xc30>
  40bb80:	add	x5, x5, #0x283
  40bb84:	bl	406c18 <log_internal_realm@plt>
  40bb88:	str	w0, [sp, #8]
  40bb8c:	b	40bba4 <manager_enumerate_users+0x270>
  40bb90:	ldr	w0, [sp, #32]
  40bb94:	bl	406c28 <abs@plt>
  40bb98:	mov	w8, wzr
  40bb9c:	subs	w8, w8, w0, uxtb
  40bba0:	str	w8, [sp, #8]
  40bba4:	ldr	w8, [sp, #8]
  40bba8:	str	w8, [sp, #24]
  40bbac:	ldr	w8, [sp, #24]
  40bbb0:	stur	w8, [x29, #-36]
  40bbb4:	b	40bbe4 <manager_enumerate_users+0x2b0>
  40bbb8:	ldr	x0, [sp, #40]
  40bbbc:	bl	43b73c <user_add_to_gc_queue>
  40bbc0:	ldr	x0, [sp, #40]
  40bbc4:	bl	43aab8 <user_load>
  40bbc8:	stur	w0, [x29, #-40]
  40bbcc:	ldur	w8, [x29, #-40]
  40bbd0:	cmp	w8, #0x0
  40bbd4:	cset	w8, ge  // ge = tcont
  40bbd8:	tbnz	w8, #0, 40bbe4 <manager_enumerate_users+0x2b0>
  40bbdc:	ldur	w8, [x29, #-40]
  40bbe0:	stur	w8, [x29, #-36]
  40bbe4:	bl	406e08 <__errno_location@plt>
  40bbe8:	str	wzr, [x0]
  40bbec:	ldur	x0, [x29, #-24]
  40bbf0:	bl	406f98 <readdir64@plt>
  40bbf4:	stur	x0, [x29, #-32]
  40bbf8:	b	40ba98 <manager_enumerate_users+0x164>
  40bbfc:	ldur	w8, [x29, #-36]
  40bc00:	stur	w8, [x29, #-4]
  40bc04:	mov	w8, #0x1                   	// #1
  40bc08:	stur	w8, [x29, #-44]
  40bc0c:	sub	x0, x29, #0x18
  40bc10:	bl	40d9a4 <closedirp>
  40bc14:	ldur	w0, [x29, #-4]
  40bc18:	ldp	x29, x30, [sp, #112]
  40bc1c:	add	sp, sp, #0x80
  40bc20:	ret

000000000040bc24 <manager_enumerate_sessions>:
  40bc24:	sub	sp, sp, #0x80
  40bc28:	stp	x29, x30, [sp, #112]
  40bc2c:	add	x29, sp, #0x70
  40bc30:	mov	x8, xzr
  40bc34:	adrp	x9, 440000 <on_brightness_writer_exit+0x15c>
  40bc38:	add	x9, x9, #0x3f0
  40bc3c:	add	x9, x9, #0x3
  40bc40:	stur	x0, [x29, #-16]
  40bc44:	stur	x8, [x29, #-24]
  40bc48:	stur	wzr, [x29, #-36]
  40bc4c:	str	x9, [sp, #16]
  40bc50:	ldur	x8, [x29, #-16]
  40bc54:	cmp	x8, #0x0
  40bc58:	cset	w9, ne  // ne = any
  40bc5c:	mov	w10, #0x1                   	// #1
  40bc60:	eor	w9, w9, #0x1
  40bc64:	eor	w9, w9, w10
  40bc68:	eor	w9, w9, w10
  40bc6c:	and	w9, w9, #0x1
  40bc70:	mov	w0, w9
  40bc74:	sxtw	x8, w0
  40bc78:	cbz	x8, 40bca0 <manager_enumerate_sessions+0x7c>
  40bc7c:	mov	w8, wzr
  40bc80:	mov	w0, w8
  40bc84:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40bc88:	add	x1, x1, #0x5ef
  40bc8c:	ldr	x2, [sp, #16]
  40bc90:	mov	w3, #0x1cc                 	// #460
  40bc94:	adrp	x4, 441000 <_fini+0xc30>
  40bc98:	add	x4, x4, #0x372
  40bc9c:	bl	406c68 <log_assert_failed_realm@plt>
  40bca0:	adrp	x0, 440000 <on_brightness_writer_exit+0x15c>
  40bca4:	add	x0, x0, #0x474
  40bca8:	bl	406f88 <opendir@plt>
  40bcac:	stur	x0, [x29, #-24]
  40bcb0:	ldur	x8, [x29, #-24]
  40bcb4:	cbnz	x8, 40bd6c <manager_enumerate_sessions+0x148>
  40bcb8:	bl	406e08 <__errno_location@plt>
  40bcbc:	ldr	w8, [x0]
  40bcc0:	cmp	w8, #0x2
  40bcc4:	b.ne	40bcd8 <manager_enumerate_sessions+0xb4>  // b.any
  40bcc8:	stur	wzr, [x29, #-4]
  40bccc:	mov	w8, #0x1                   	// #1
  40bcd0:	stur	w8, [x29, #-44]
  40bcd4:	b	40befc <manager_enumerate_sessions+0x2d8>
  40bcd8:	mov	w8, #0x3                   	// #3
  40bcdc:	stur	w8, [x29, #-48]
  40bce0:	bl	406e08 <__errno_location@plt>
  40bce4:	ldr	w8, [x0]
  40bce8:	stur	w8, [x29, #-52]
  40bcec:	str	wzr, [sp, #56]
  40bcf0:	ldr	w0, [sp, #56]
  40bcf4:	bl	406c08 <log_get_max_level_realm@plt>
  40bcf8:	ldur	w8, [x29, #-48]
  40bcfc:	and	w8, w8, #0x7
  40bd00:	cmp	w0, w8
  40bd04:	b.lt	40bd3c <manager_enumerate_sessions+0x118>  // b.tstop
  40bd08:	ldr	w8, [sp, #56]
  40bd0c:	ldur	w9, [x29, #-48]
  40bd10:	orr	w0, w9, w8, lsl #10
  40bd14:	ldur	w1, [x29, #-52]
  40bd18:	ldr	x2, [sp, #16]
  40bd1c:	mov	w3, #0x1d4                 	// #468
  40bd20:	adrp	x4, 441000 <_fini+0xc30>
  40bd24:	add	x4, x4, #0x39c
  40bd28:	adrp	x5, 441000 <_fini+0xc30>
  40bd2c:	add	x5, x5, #0x3b7
  40bd30:	bl	406c18 <log_internal_realm@plt>
  40bd34:	str	w0, [sp, #12]
  40bd38:	b	40bd50 <manager_enumerate_sessions+0x12c>
  40bd3c:	ldur	w0, [x29, #-52]
  40bd40:	bl	406c28 <abs@plt>
  40bd44:	mov	w8, wzr
  40bd48:	subs	w8, w8, w0, uxtb
  40bd4c:	str	w8, [sp, #12]
  40bd50:	ldr	w8, [sp, #12]
  40bd54:	str	w8, [sp, #52]
  40bd58:	ldr	w8, [sp, #52]
  40bd5c:	stur	w8, [x29, #-4]
  40bd60:	mov	w8, #0x1                   	// #1
  40bd64:	stur	w8, [x29, #-44]
  40bd68:	b	40befc <manager_enumerate_sessions+0x2d8>
  40bd6c:	bl	406e08 <__errno_location@plt>
  40bd70:	str	wzr, [x0]
  40bd74:	ldur	x0, [x29, #-24]
  40bd78:	bl	406f98 <readdir64@plt>
  40bd7c:	stur	x0, [x29, #-32]
  40bd80:	ldur	x8, [x29, #-32]
  40bd84:	cbnz	x8, 40bdc0 <manager_enumerate_sessions+0x19c>
  40bd88:	bl	406e08 <__errno_location@plt>
  40bd8c:	ldr	w8, [x0]
  40bd90:	cmp	w8, #0x0
  40bd94:	cset	w8, le
  40bd98:	tbnz	w8, #0, 40bdbc <manager_enumerate_sessions+0x198>
  40bd9c:	bl	406e08 <__errno_location@plt>
  40bda0:	ldr	w8, [x0]
  40bda4:	mov	w9, wzr
  40bda8:	subs	w8, w9, w8
  40bdac:	stur	w8, [x29, #-4]
  40bdb0:	mov	w8, #0x1                   	// #1
  40bdb4:	stur	w8, [x29, #-44]
  40bdb8:	b	40befc <manager_enumerate_sessions+0x2d8>
  40bdbc:	b	40bee4 <manager_enumerate_sessions+0x2c0>
  40bdc0:	ldur	x8, [x29, #-32]
  40bdc4:	add	x0, x8, #0x13
  40bdc8:	bl	406fa8 <hidden_or_backup_file@plt>
  40bdcc:	tbnz	w0, #0, 40bdd4 <manager_enumerate_sessions+0x1b0>
  40bdd0:	b	40bdd8 <manager_enumerate_sessions+0x1b4>
  40bdd4:	b	40becc <manager_enumerate_sessions+0x2a8>
  40bdd8:	ldur	x0, [x29, #-32]
  40bddc:	bl	406fb8 <dirent_is_file@plt>
  40bde0:	tbnz	w0, #0, 40bde8 <manager_enumerate_sessions+0x1c4>
  40bde4:	b	40becc <manager_enumerate_sessions+0x2a8>
  40bde8:	ldur	x0, [x29, #-16]
  40bdec:	ldur	x8, [x29, #-32]
  40bdf0:	add	x1, x8, #0x13
  40bdf4:	add	x2, sp, #0x28
  40bdf8:	bl	4117c4 <manager_add_session>
  40bdfc:	stur	w0, [x29, #-40]
  40be00:	ldur	w9, [x29, #-40]
  40be04:	cmp	w9, #0x0
  40be08:	cset	w9, ge  // ge = tcont
  40be0c:	tbnz	w9, #0, 40bea0 <manager_enumerate_sessions+0x27c>
  40be10:	mov	w8, #0x4                   	// #4
  40be14:	str	w8, [sp, #36]
  40be18:	ldur	w8, [x29, #-40]
  40be1c:	str	w8, [sp, #32]
  40be20:	str	wzr, [sp, #28]
  40be24:	ldr	w0, [sp, #28]
  40be28:	bl	406c08 <log_get_max_level_realm@plt>
  40be2c:	ldr	w8, [sp, #36]
  40be30:	and	w8, w8, #0x7
  40be34:	cmp	w0, w8
  40be38:	b.lt	40be78 <manager_enumerate_sessions+0x254>  // b.tstop
  40be3c:	ldr	w8, [sp, #28]
  40be40:	ldr	w9, [sp, #36]
  40be44:	orr	w0, w9, w8, lsl #10
  40be48:	ldr	w1, [sp, #32]
  40be4c:	ldur	x10, [x29, #-32]
  40be50:	add	x6, x10, #0x13
  40be54:	ldr	x2, [sp, #16]
  40be58:	mov	w3, #0x1df                 	// #479
  40be5c:	adrp	x4, 441000 <_fini+0xc30>
  40be60:	add	x4, x4, #0x39c
  40be64:	adrp	x5, 441000 <_fini+0xc30>
  40be68:	add	x5, x5, #0x3e0
  40be6c:	bl	406c18 <log_internal_realm@plt>
  40be70:	str	w0, [sp, #8]
  40be74:	b	40be8c <manager_enumerate_sessions+0x268>
  40be78:	ldr	w0, [sp, #32]
  40be7c:	bl	406c28 <abs@plt>
  40be80:	mov	w8, wzr
  40be84:	subs	w8, w8, w0, uxtb
  40be88:	str	w8, [sp, #8]
  40be8c:	ldr	w8, [sp, #8]
  40be90:	str	w8, [sp, #24]
  40be94:	ldr	w8, [sp, #24]
  40be98:	stur	w8, [x29, #-36]
  40be9c:	b	40becc <manager_enumerate_sessions+0x2a8>
  40bea0:	ldr	x0, [sp, #40]
  40bea4:	bl	4362d0 <session_add_to_gc_queue>
  40bea8:	ldr	x0, [sp, #40]
  40beac:	bl	4338a4 <session_load>
  40beb0:	stur	w0, [x29, #-40]
  40beb4:	ldur	w8, [x29, #-40]
  40beb8:	cmp	w8, #0x0
  40bebc:	cset	w8, ge  // ge = tcont
  40bec0:	tbnz	w8, #0, 40becc <manager_enumerate_sessions+0x2a8>
  40bec4:	ldur	w8, [x29, #-40]
  40bec8:	stur	w8, [x29, #-36]
  40becc:	bl	406e08 <__errno_location@plt>
  40bed0:	str	wzr, [x0]
  40bed4:	ldur	x0, [x29, #-24]
  40bed8:	bl	406f98 <readdir64@plt>
  40bedc:	stur	x0, [x29, #-32]
  40bee0:	b	40bd80 <manager_enumerate_sessions+0x15c>
  40bee4:	ldur	x0, [x29, #-16]
  40bee8:	bl	40dcd0 <manager_attach_fds>
  40beec:	ldur	w8, [x29, #-36]
  40bef0:	stur	w8, [x29, #-4]
  40bef4:	mov	w8, #0x1                   	// #1
  40bef8:	stur	w8, [x29, #-44]
  40befc:	sub	x0, x29, #0x18
  40bf00:	bl	40d9a4 <closedirp>
  40bf04:	ldur	w0, [x29, #-4]
  40bf08:	ldp	x29, x30, [sp, #112]
  40bf0c:	add	sp, sp, #0x80
  40bf10:	ret

000000000040bf14 <manager_enumerate_inhibitors>:
  40bf14:	sub	sp, sp, #0x80
  40bf18:	stp	x29, x30, [sp, #112]
  40bf1c:	add	x29, sp, #0x70
  40bf20:	mov	x8, xzr
  40bf24:	adrp	x9, 440000 <on_brightness_writer_exit+0x15c>
  40bf28:	add	x9, x9, #0x3f0
  40bf2c:	add	x9, x9, #0x3
  40bf30:	stur	x0, [x29, #-16]
  40bf34:	stur	x8, [x29, #-24]
  40bf38:	stur	wzr, [x29, #-36]
  40bf3c:	str	x9, [sp, #16]
  40bf40:	ldur	x8, [x29, #-16]
  40bf44:	cmp	x8, #0x0
  40bf48:	cset	w9, ne  // ne = any
  40bf4c:	mov	w10, #0x1                   	// #1
  40bf50:	eor	w9, w9, #0x1
  40bf54:	eor	w9, w9, w10
  40bf58:	eor	w9, w9, w10
  40bf5c:	and	w9, w9, #0x1
  40bf60:	mov	w0, w9
  40bf64:	sxtw	x8, w0
  40bf68:	cbz	x8, 40bf90 <manager_enumerate_inhibitors+0x7c>
  40bf6c:	mov	w8, wzr
  40bf70:	mov	w0, w8
  40bf74:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40bf78:	add	x1, x1, #0x5ef
  40bf7c:	ldr	x2, [sp, #16]
  40bf80:	mov	w3, #0x1f6                 	// #502
  40bf84:	adrp	x4, 441000 <_fini+0xc30>
  40bf88:	add	x4, x4, #0x5d3
  40bf8c:	bl	406c68 <log_assert_failed_realm@plt>
  40bf90:	adrp	x0, 441000 <_fini+0xc30>
  40bf94:	add	x0, x0, #0x5ff
  40bf98:	bl	406f88 <opendir@plt>
  40bf9c:	stur	x0, [x29, #-24]
  40bfa0:	ldur	x8, [x29, #-24]
  40bfa4:	cbnz	x8, 40c05c <manager_enumerate_inhibitors+0x148>
  40bfa8:	bl	406e08 <__errno_location@plt>
  40bfac:	ldr	w8, [x0]
  40bfb0:	cmp	w8, #0x2
  40bfb4:	b.ne	40bfc8 <manager_enumerate_inhibitors+0xb4>  // b.any
  40bfb8:	stur	wzr, [x29, #-4]
  40bfbc:	mov	w8, #0x1                   	// #1
  40bfc0:	stur	w8, [x29, #-40]
  40bfc4:	b	40c1dc <manager_enumerate_inhibitors+0x2c8>
  40bfc8:	mov	w8, #0x3                   	// #3
  40bfcc:	stur	w8, [x29, #-44]
  40bfd0:	bl	406e08 <__errno_location@plt>
  40bfd4:	ldr	w8, [x0]
  40bfd8:	stur	w8, [x29, #-48]
  40bfdc:	stur	wzr, [x29, #-52]
  40bfe0:	ldur	w0, [x29, #-52]
  40bfe4:	bl	406c08 <log_get_max_level_realm@plt>
  40bfe8:	ldur	w8, [x29, #-44]
  40bfec:	and	w8, w8, #0x7
  40bff0:	cmp	w0, w8
  40bff4:	b.lt	40c02c <manager_enumerate_inhibitors+0x118>  // b.tstop
  40bff8:	ldur	w8, [x29, #-52]
  40bffc:	ldur	w9, [x29, #-44]
  40c000:	orr	w0, w9, w8, lsl #10
  40c004:	ldur	w1, [x29, #-48]
  40c008:	ldr	x2, [sp, #16]
  40c00c:	mov	w3, #0x1fd                 	// #509
  40c010:	adrp	x4, 441000 <_fini+0xc30>
  40c014:	add	x4, x4, #0x614
  40c018:	adrp	x5, 441000 <_fini+0xc30>
  40c01c:	add	x5, x5, #0x631
  40c020:	bl	406c18 <log_internal_realm@plt>
  40c024:	str	w0, [sp, #12]
  40c028:	b	40c040 <manager_enumerate_inhibitors+0x12c>
  40c02c:	ldur	w0, [x29, #-48]
  40c030:	bl	406c28 <abs@plt>
  40c034:	mov	w8, wzr
  40c038:	subs	w8, w8, w0, uxtb
  40c03c:	str	w8, [sp, #12]
  40c040:	ldr	w8, [sp, #12]
  40c044:	str	w8, [sp, #56]
  40c048:	ldr	w8, [sp, #56]
  40c04c:	stur	w8, [x29, #-4]
  40c050:	mov	w8, #0x1                   	// #1
  40c054:	stur	w8, [x29, #-40]
  40c058:	b	40c1dc <manager_enumerate_inhibitors+0x2c8>
  40c05c:	bl	406e08 <__errno_location@plt>
  40c060:	str	wzr, [x0]
  40c064:	ldur	x0, [x29, #-24]
  40c068:	bl	406f98 <readdir64@plt>
  40c06c:	stur	x0, [x29, #-32]
  40c070:	ldur	x8, [x29, #-32]
  40c074:	cbnz	x8, 40c0b0 <manager_enumerate_inhibitors+0x19c>
  40c078:	bl	406e08 <__errno_location@plt>
  40c07c:	ldr	w8, [x0]
  40c080:	cmp	w8, #0x0
  40c084:	cset	w8, le
  40c088:	tbnz	w8, #0, 40c0ac <manager_enumerate_inhibitors+0x198>
  40c08c:	bl	406e08 <__errno_location@plt>
  40c090:	ldr	w8, [x0]
  40c094:	mov	w9, wzr
  40c098:	subs	w8, w9, w8
  40c09c:	stur	w8, [x29, #-4]
  40c0a0:	mov	w8, #0x1                   	// #1
  40c0a4:	stur	w8, [x29, #-40]
  40c0a8:	b	40c1dc <manager_enumerate_inhibitors+0x2c8>
  40c0ac:	b	40c1cc <manager_enumerate_inhibitors+0x2b8>
  40c0b0:	ldur	x8, [x29, #-32]
  40c0b4:	add	x0, x8, #0x13
  40c0b8:	bl	406fa8 <hidden_or_backup_file@plt>
  40c0bc:	tbnz	w0, #0, 40c0c4 <manager_enumerate_inhibitors+0x1b0>
  40c0c0:	b	40c0c8 <manager_enumerate_inhibitors+0x1b4>
  40c0c4:	b	40c1b4 <manager_enumerate_inhibitors+0x2a0>
  40c0c8:	ldur	x0, [x29, #-32]
  40c0cc:	bl	406fb8 <dirent_is_file@plt>
  40c0d0:	tbnz	w0, #0, 40c0d8 <manager_enumerate_inhibitors+0x1c4>
  40c0d4:	b	40c1b4 <manager_enumerate_inhibitors+0x2a0>
  40c0d8:	ldur	x0, [x29, #-16]
  40c0dc:	ldur	x8, [x29, #-32]
  40c0e0:	add	x1, x8, #0x13
  40c0e4:	add	x2, sp, #0x28
  40c0e8:	bl	411ce4 <manager_add_inhibitor>
  40c0ec:	str	w0, [sp, #52]
  40c0f0:	ldr	w9, [sp, #52]
  40c0f4:	cmp	w9, #0x0
  40c0f8:	cset	w9, ge  // ge = tcont
  40c0fc:	tbnz	w9, #0, 40c190 <manager_enumerate_inhibitors+0x27c>
  40c100:	mov	w8, #0x4                   	// #4
  40c104:	str	w8, [sp, #36]
  40c108:	ldr	w8, [sp, #52]
  40c10c:	str	w8, [sp, #32]
  40c110:	str	wzr, [sp, #28]
  40c114:	ldr	w0, [sp, #28]
  40c118:	bl	406c08 <log_get_max_level_realm@plt>
  40c11c:	ldr	w8, [sp, #36]
  40c120:	and	w8, w8, #0x7
  40c124:	cmp	w0, w8
  40c128:	b.lt	40c168 <manager_enumerate_inhibitors+0x254>  // b.tstop
  40c12c:	ldr	w8, [sp, #28]
  40c130:	ldr	w9, [sp, #36]
  40c134:	orr	w0, w9, w8, lsl #10
  40c138:	ldr	w1, [sp, #32]
  40c13c:	ldur	x10, [x29, #-32]
  40c140:	add	x6, x10, #0x13
  40c144:	ldr	x2, [sp, #16]
  40c148:	mov	w3, #0x209                 	// #521
  40c14c:	adrp	x4, 441000 <_fini+0xc30>
  40c150:	add	x4, x4, #0x614
  40c154:	adrp	x5, 441000 <_fini+0xc30>
  40c158:	add	x5, x5, #0x659
  40c15c:	bl	406c18 <log_internal_realm@plt>
  40c160:	str	w0, [sp, #8]
  40c164:	b	40c17c <manager_enumerate_inhibitors+0x268>
  40c168:	ldr	w0, [sp, #32]
  40c16c:	bl	406c28 <abs@plt>
  40c170:	mov	w8, wzr
  40c174:	subs	w8, w8, w0, uxtb
  40c178:	str	w8, [sp, #8]
  40c17c:	ldr	w8, [sp, #8]
  40c180:	str	w8, [sp, #24]
  40c184:	ldr	w8, [sp, #24]
  40c188:	stur	w8, [x29, #-36]
  40c18c:	b	40c1b4 <manager_enumerate_inhibitors+0x2a0>
  40c190:	ldr	x0, [sp, #40]
  40c194:	bl	425a00 <inhibitor_load>
  40c198:	str	w0, [sp, #52]
  40c19c:	ldr	w8, [sp, #52]
  40c1a0:	cmp	w8, #0x0
  40c1a4:	cset	w8, ge  // ge = tcont
  40c1a8:	tbnz	w8, #0, 40c1b4 <manager_enumerate_inhibitors+0x2a0>
  40c1ac:	ldr	w8, [sp, #52]
  40c1b0:	stur	w8, [x29, #-36]
  40c1b4:	bl	406e08 <__errno_location@plt>
  40c1b8:	str	wzr, [x0]
  40c1bc:	ldur	x0, [x29, #-24]
  40c1c0:	bl	406f98 <readdir64@plt>
  40c1c4:	stur	x0, [x29, #-32]
  40c1c8:	b	40c070 <manager_enumerate_inhibitors+0x15c>
  40c1cc:	ldur	w8, [x29, #-36]
  40c1d0:	stur	w8, [x29, #-4]
  40c1d4:	mov	w8, #0x1                   	// #1
  40c1d8:	stur	w8, [x29, #-40]
  40c1dc:	sub	x0, x29, #0x18
  40c1e0:	bl	40d9a4 <closedirp>
  40c1e4:	ldur	w0, [x29, #-4]
  40c1e8:	ldp	x29, x30, [sp, #112]
  40c1ec:	add	sp, sp, #0x80
  40c1f0:	ret

000000000040c1f4 <manager_enumerate_buttons>:
  40c1f4:	sub	sp, sp, #0x50
  40c1f8:	stp	x29, x30, [sp, #64]
  40c1fc:	add	x29, sp, #0x40
  40c200:	mov	x8, xzr
  40c204:	adrp	x9, 440000 <on_brightness_writer_exit+0x15c>
  40c208:	add	x9, x9, #0x3f0
  40c20c:	add	x2, x9, #0x3
  40c210:	stur	x0, [x29, #-16]
  40c214:	stur	x8, [x29, #-24]
  40c218:	str	x2, [sp, #8]
  40c21c:	ldur	x8, [x29, #-16]
  40c220:	cmp	x8, #0x0
  40c224:	cset	w9, ne  // ne = any
  40c228:	mov	w10, #0x1                   	// #1
  40c22c:	eor	w9, w9, #0x1
  40c230:	eor	w9, w9, w10
  40c234:	eor	w9, w9, w10
  40c238:	and	w9, w9, #0x1
  40c23c:	mov	w0, w9
  40c240:	sxtw	x8, w0
  40c244:	cbz	x8, 40c26c <manager_enumerate_buttons+0x78>
  40c248:	mov	w8, wzr
  40c24c:	mov	w0, w8
  40c250:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40c254:	add	x1, x1, #0x5ef
  40c258:	ldr	x2, [sp, #8]
  40c25c:	mov	w3, #0xcb                  	// #203
  40c260:	adrp	x4, 441000 <_fini+0xc30>
  40c264:	add	x4, x4, #0x681
  40c268:	bl	406c68 <log_assert_failed_realm@plt>
  40c26c:	ldur	x0, [x29, #-16]
  40c270:	bl	413984 <manager_all_buttons_ignored>
  40c274:	tbnz	w0, #0, 40c27c <manager_enumerate_buttons+0x88>
  40c278:	b	40c28c <manager_enumerate_buttons+0x98>
  40c27c:	stur	wzr, [x29, #-4]
  40c280:	mov	w8, #0x1                   	// #1
  40c284:	str	w8, [sp, #24]
  40c288:	b	40c38c <manager_enumerate_buttons+0x198>
  40c28c:	sub	x0, x29, #0x18
  40c290:	bl	406f48 <sd_device_enumerator_new@plt>
  40c294:	str	w0, [sp, #28]
  40c298:	ldr	w8, [sp, #28]
  40c29c:	cmp	w8, #0x0
  40c2a0:	cset	w8, ge  // ge = tcont
  40c2a4:	tbnz	w8, #0, 40c2bc <manager_enumerate_buttons+0xc8>
  40c2a8:	ldr	w8, [sp, #28]
  40c2ac:	stur	w8, [x29, #-4]
  40c2b0:	mov	w8, #0x1                   	// #1
  40c2b4:	str	w8, [sp, #24]
  40c2b8:	b	40c38c <manager_enumerate_buttons+0x198>
  40c2bc:	ldur	x0, [x29, #-24]
  40c2c0:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40c2c4:	add	x1, x1, #0xba1
  40c2c8:	mov	w2, #0x1                   	// #1
  40c2cc:	bl	406fe8 <sd_device_enumerator_add_match_subsystem@plt>
  40c2d0:	str	w0, [sp, #28]
  40c2d4:	ldr	w8, [sp, #28]
  40c2d8:	cmp	w8, #0x0
  40c2dc:	cset	w8, ge  // ge = tcont
  40c2e0:	tbnz	w8, #0, 40c2f8 <manager_enumerate_buttons+0x104>
  40c2e4:	ldr	w8, [sp, #28]
  40c2e8:	stur	w8, [x29, #-4]
  40c2ec:	mov	w8, #0x1                   	// #1
  40c2f0:	str	w8, [sp, #24]
  40c2f4:	b	40c38c <manager_enumerate_buttons+0x198>
  40c2f8:	ldur	x0, [x29, #-24]
  40c2fc:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40c300:	add	x1, x1, #0xbca
  40c304:	bl	406f58 <sd_device_enumerator_add_match_tag@plt>
  40c308:	str	w0, [sp, #28]
  40c30c:	ldr	w8, [sp, #28]
  40c310:	cmp	w8, #0x0
  40c314:	cset	w8, ge  // ge = tcont
  40c318:	tbnz	w8, #0, 40c330 <manager_enumerate_buttons+0x13c>
  40c31c:	ldr	w8, [sp, #28]
  40c320:	stur	w8, [x29, #-4]
  40c324:	mov	w8, #0x1                   	// #1
  40c328:	str	w8, [sp, #24]
  40c32c:	b	40c38c <manager_enumerate_buttons+0x198>
  40c330:	ldur	x0, [x29, #-24]
  40c334:	bl	406f68 <sd_device_enumerator_get_device_first@plt>
  40c338:	str	x0, [sp, #32]
  40c33c:	ldr	x8, [sp, #32]
  40c340:	cbz	x8, 40c37c <manager_enumerate_buttons+0x188>
  40c344:	ldur	x0, [x29, #-16]
  40c348:	ldr	x1, [sp, #32]
  40c34c:	bl	4122b8 <manager_process_button_device>
  40c350:	str	w0, [sp, #20]
  40c354:	ldr	w8, [sp, #20]
  40c358:	cmp	w8, #0x0
  40c35c:	cset	w8, ge  // ge = tcont
  40c360:	tbnz	w8, #0, 40c36c <manager_enumerate_buttons+0x178>
  40c364:	ldr	w8, [sp, #20]
  40c368:	str	w8, [sp, #28]
  40c36c:	ldur	x0, [x29, #-24]
  40c370:	bl	406f78 <sd_device_enumerator_get_device_next@plt>
  40c374:	str	x0, [sp, #32]
  40c378:	b	40c33c <manager_enumerate_buttons+0x148>
  40c37c:	ldr	w8, [sp, #28]
  40c380:	stur	w8, [x29, #-4]
  40c384:	mov	w8, #0x1                   	// #1
  40c388:	str	w8, [sp, #24]
  40c38c:	sub	x0, x29, #0x18
  40c390:	bl	40d970 <sd_device_enumerator_unrefp>
  40c394:	ldur	w0, [x29, #-4]
  40c398:	ldp	x29, x30, [sp, #64]
  40c39c:	add	sp, sp, #0x50
  40c3a0:	ret

000000000040c3a4 <manager_gc>:
  40c3a4:	sub	sp, sp, #0x90
  40c3a8:	stp	x29, x30, [sp, #128]
  40c3ac:	add	x29, sp, #0x80
  40c3b0:	adrp	x8, 441000 <_fini+0xc30>
  40c3b4:	add	x8, x8, #0x6d2
  40c3b8:	adrp	x9, 440000 <on_brightness_writer_exit+0x15c>
  40c3bc:	add	x9, x9, #0x3f0
  40c3c0:	add	x9, x9, #0x3
  40c3c4:	adrp	x10, 441000 <_fini+0xc30>
  40c3c8:	add	x10, x10, #0x6aa
  40c3cc:	adrp	x11, 441000 <_fini+0xc30>
  40c3d0:	add	x11, x11, #0x6cc
  40c3d4:	stur	x0, [x29, #-8]
  40c3d8:	and	w12, w1, #0x1
  40c3dc:	sturb	w12, [x29, #-9]
  40c3e0:	str	x8, [sp, #32]
  40c3e4:	str	x9, [sp, #24]
  40c3e8:	str	x10, [sp, #16]
  40c3ec:	str	x11, [sp, #8]
  40c3f0:	ldur	x8, [x29, #-8]
  40c3f4:	cmp	x8, #0x0
  40c3f8:	cset	w9, ne  // ne = any
  40c3fc:	mov	w10, #0x1                   	// #1
  40c400:	eor	w9, w9, #0x1
  40c404:	eor	w9, w9, w10
  40c408:	eor	w9, w9, w10
  40c40c:	and	w9, w9, #0x1
  40c410:	mov	w0, w9
  40c414:	sxtw	x8, w0
  40c418:	cbz	x8, 40c43c <manager_gc+0x98>
  40c41c:	mov	w8, wzr
  40c420:	mov	w0, w8
  40c424:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40c428:	add	x1, x1, #0x5ef
  40c42c:	ldr	x2, [sp, #24]
  40c430:	mov	w3, #0x3ae                 	// #942
  40c434:	ldr	x4, [sp, #16]
  40c438:	bl	406c68 <log_assert_failed_realm@plt>
  40c43c:	ldur	x8, [x29, #-8]
  40c440:	ldr	x8, [x8, #80]
  40c444:	stur	x8, [x29, #-24]
  40c448:	cbz	x8, 40c5a8 <manager_gc+0x204>
  40c44c:	ldur	x8, [x29, #-8]
  40c450:	add	x8, x8, #0x50
  40c454:	stur	x8, [x29, #-48]
  40c458:	ldur	x8, [x29, #-24]
  40c45c:	stur	x8, [x29, #-56]
  40c460:	ldur	x8, [x29, #-56]
  40c464:	cmp	x8, #0x0
  40c468:	cset	w9, ne  // ne = any
  40c46c:	mov	w10, #0x1                   	// #1
  40c470:	eor	w9, w9, #0x1
  40c474:	eor	w9, w9, w10
  40c478:	eor	w9, w9, w10
  40c47c:	and	w9, w9, #0x1
  40c480:	mov	w0, w9
  40c484:	sxtw	x8, w0
  40c488:	cbz	x8, 40c4a8 <manager_gc+0x104>
  40c48c:	mov	w8, wzr
  40c490:	mov	w0, w8
  40c494:	ldr	x1, [sp, #8]
  40c498:	ldr	x2, [sp, #24]
  40c49c:	mov	w3, #0x3b1                 	// #945
  40c4a0:	ldr	x4, [sp, #16]
  40c4a4:	bl	406c68 <log_assert_failed_realm@plt>
  40c4a8:	ldur	x8, [x29, #-56]
  40c4ac:	ldr	x8, [x8, #80]
  40c4b0:	cbz	x8, 40c4c8 <manager_gc+0x124>
  40c4b4:	ldur	x8, [x29, #-56]
  40c4b8:	ldr	x8, [x8, #88]
  40c4bc:	ldur	x9, [x29, #-56]
  40c4c0:	ldr	x9, [x9, #80]
  40c4c4:	str	x8, [x9, #88]
  40c4c8:	ldur	x8, [x29, #-56]
  40c4cc:	ldr	x8, [x8, #88]
  40c4d0:	cbz	x8, 40c4ec <manager_gc+0x148>
  40c4d4:	ldur	x8, [x29, #-56]
  40c4d8:	ldr	x8, [x8, #80]
  40c4dc:	ldur	x9, [x29, #-56]
  40c4e0:	ldr	x9, [x9, #88]
  40c4e4:	str	x8, [x9, #80]
  40c4e8:	b	40c54c <manager_gc+0x1a8>
  40c4ec:	ldur	x8, [x29, #-48]
  40c4f0:	ldr	x8, [x8]
  40c4f4:	ldur	x9, [x29, #-56]
  40c4f8:	cmp	x8, x9
  40c4fc:	cset	w10, eq  // eq = none
  40c500:	mov	w11, #0x1                   	// #1
  40c504:	eor	w10, w10, #0x1
  40c508:	eor	w10, w10, w11
  40c50c:	eor	w10, w10, w11
  40c510:	and	w10, w10, #0x1
  40c514:	mov	w0, w10
  40c518:	sxtw	x8, w0
  40c51c:	cbz	x8, 40c53c <manager_gc+0x198>
  40c520:	mov	w8, wzr
  40c524:	mov	w0, w8
  40c528:	ldr	x1, [sp, #32]
  40c52c:	ldr	x2, [sp, #24]
  40c530:	mov	w3, #0x3b1                 	// #945
  40c534:	ldr	x4, [sp, #16]
  40c538:	bl	406c68 <log_assert_failed_realm@plt>
  40c53c:	ldur	x8, [x29, #-56]
  40c540:	ldr	x8, [x8, #80]
  40c544:	ldur	x9, [x29, #-48]
  40c548:	str	x8, [x9]
  40c54c:	ldur	x8, [x29, #-56]
  40c550:	mov	x9, xzr
  40c554:	str	x9, [x8, #88]
  40c558:	ldur	x8, [x29, #-56]
  40c55c:	str	x9, [x8, #80]
  40c560:	ldur	x8, [x29, #-24]
  40c564:	ldrb	w9, [x8, #72]
  40c568:	and	w9, w9, #0xfffffffe
  40c56c:	strb	w9, [x8, #72]
  40c570:	ldur	x0, [x29, #-24]
  40c574:	ldurb	w9, [x29, #-9]
  40c578:	and	w1, w9, #0x1
  40c57c:	bl	42bc0c <seat_may_gc>
  40c580:	tbnz	w0, #0, 40c588 <manager_gc+0x1e4>
  40c584:	b	40c5a4 <manager_gc+0x200>
  40c588:	ldur	x0, [x29, #-24]
  40c58c:	mov	w8, wzr
  40c590:	and	w1, w8, #0x1
  40c594:	bl	42b0ec <seat_stop>
  40c598:	ldur	x9, [x29, #-24]
  40c59c:	mov	x0, x9
  40c5a0:	bl	4293c8 <seat_free>
  40c5a4:	b	40c43c <manager_gc+0x98>
  40c5a8:	ldur	x8, [x29, #-8]
  40c5ac:	ldr	x8, [x8, #88]
  40c5b0:	stur	x8, [x29, #-32]
  40c5b4:	cbz	x8, 40c744 <manager_gc+0x3a0>
  40c5b8:	ldur	x8, [x29, #-8]
  40c5bc:	add	x8, x8, #0x58
  40c5c0:	str	x8, [sp, #64]
  40c5c4:	ldur	x8, [x29, #-32]
  40c5c8:	str	x8, [sp, #56]
  40c5cc:	ldr	x8, [sp, #56]
  40c5d0:	cmp	x8, #0x0
  40c5d4:	cset	w9, ne  // ne = any
  40c5d8:	mov	w10, #0x1                   	// #1
  40c5dc:	eor	w9, w9, #0x1
  40c5e0:	eor	w9, w9, w10
  40c5e4:	eor	w9, w9, w10
  40c5e8:	and	w9, w9, #0x1
  40c5ec:	mov	w0, w9
  40c5f0:	sxtw	x8, w0
  40c5f4:	cbz	x8, 40c614 <manager_gc+0x270>
  40c5f8:	mov	w8, wzr
  40c5fc:	mov	w0, w8
  40c600:	ldr	x1, [sp, #8]
  40c604:	ldr	x2, [sp, #24]
  40c608:	mov	w3, #0x3bb                 	// #955
  40c60c:	ldr	x4, [sp, #16]
  40c610:	bl	406c68 <log_assert_failed_realm@plt>
  40c614:	ldr	x8, [sp, #56]
  40c618:	ldr	x8, [x8, #288]
  40c61c:	cbz	x8, 40c634 <manager_gc+0x290>
  40c620:	ldr	x8, [sp, #56]
  40c624:	ldr	x8, [x8, #296]
  40c628:	ldr	x9, [sp, #56]
  40c62c:	ldr	x9, [x9, #288]
  40c630:	str	x8, [x9, #296]
  40c634:	ldr	x8, [sp, #56]
  40c638:	ldr	x8, [x8, #296]
  40c63c:	cbz	x8, 40c658 <manager_gc+0x2b4>
  40c640:	ldr	x8, [sp, #56]
  40c644:	ldr	x8, [x8, #288]
  40c648:	ldr	x9, [sp, #56]
  40c64c:	ldr	x9, [x9, #296]
  40c650:	str	x8, [x9, #288]
  40c654:	b	40c6b8 <manager_gc+0x314>
  40c658:	ldr	x8, [sp, #64]
  40c65c:	ldr	x8, [x8]
  40c660:	ldr	x9, [sp, #56]
  40c664:	cmp	x8, x9
  40c668:	cset	w10, eq  // eq = none
  40c66c:	mov	w11, #0x1                   	// #1
  40c670:	eor	w10, w10, #0x1
  40c674:	eor	w10, w10, w11
  40c678:	eor	w10, w10, w11
  40c67c:	and	w10, w10, #0x1
  40c680:	mov	w0, w10
  40c684:	sxtw	x8, w0
  40c688:	cbz	x8, 40c6a8 <manager_gc+0x304>
  40c68c:	mov	w8, wzr
  40c690:	mov	w0, w8
  40c694:	ldr	x1, [sp, #32]
  40c698:	ldr	x2, [sp, #24]
  40c69c:	mov	w3, #0x3bb                 	// #955
  40c6a0:	ldr	x4, [sp, #16]
  40c6a4:	bl	406c68 <log_assert_failed_realm@plt>
  40c6a8:	ldr	x8, [sp, #56]
  40c6ac:	ldr	x8, [x8, #288]
  40c6b0:	ldr	x9, [sp, #64]
  40c6b4:	str	x8, [x9]
  40c6b8:	ldr	x8, [sp, #56]
  40c6bc:	mov	x9, xzr
  40c6c0:	str	x9, [x8, #296]
  40c6c4:	ldr	x8, [sp, #56]
  40c6c8:	str	x9, [x8, #288]
  40c6cc:	ldur	x8, [x29, #-32]
  40c6d0:	ldrb	w9, [x8, #209]
  40c6d4:	and	w9, w9, #0xfffffffe
  40c6d8:	strb	w9, [x8, #209]
  40c6dc:	ldur	x0, [x29, #-32]
  40c6e0:	ldurb	w9, [x29, #-9]
  40c6e4:	and	w1, w9, #0x1
  40c6e8:	bl	436fa4 <session_may_gc>
  40c6ec:	tbnz	w0, #0, 40c6f4 <manager_gc+0x350>
  40c6f0:	b	40c714 <manager_gc+0x370>
  40c6f4:	ldur	x0, [x29, #-32]
  40c6f8:	bl	433524 <session_get_state>
  40c6fc:	cmp	w0, #0x3
  40c700:	b.eq	40c714 <manager_gc+0x370>  // b.none
  40c704:	ldur	x0, [x29, #-32]
  40c708:	mov	w8, wzr
  40c70c:	and	w1, w8, #0x1
  40c710:	bl	4359b4 <session_stop>
  40c714:	ldur	x0, [x29, #-32]
  40c718:	ldurb	w8, [x29, #-9]
  40c71c:	and	w1, w8, #0x1
  40c720:	bl	436fa4 <session_may_gc>
  40c724:	tbnz	w0, #0, 40c72c <manager_gc+0x388>
  40c728:	b	40c740 <manager_gc+0x39c>
  40c72c:	ldur	x0, [x29, #-32]
  40c730:	bl	436038 <session_finalize>
  40c734:	ldur	x8, [x29, #-32]
  40c738:	mov	x0, x8
  40c73c:	bl	432104 <session_free>
  40c740:	b	40c5a8 <manager_gc+0x204>
  40c744:	ldur	x8, [x29, #-8]
  40c748:	ldr	x8, [x8, #96]
  40c74c:	stur	x8, [x29, #-40]
  40c750:	cbz	x8, 40c8d0 <manager_gc+0x52c>
  40c754:	ldur	x8, [x29, #-8]
  40c758:	add	x8, x8, #0x60
  40c75c:	str	x8, [sp, #48]
  40c760:	ldur	x8, [x29, #-40]
  40c764:	str	x8, [sp, #40]
  40c768:	ldr	x8, [sp, #40]
  40c76c:	cmp	x8, #0x0
  40c770:	cset	w9, ne  // ne = any
  40c774:	mov	w10, #0x1                   	// #1
  40c778:	eor	w9, w9, #0x1
  40c77c:	eor	w9, w9, w10
  40c780:	eor	w9, w9, w10
  40c784:	and	w9, w9, #0x1
  40c788:	mov	w0, w9
  40c78c:	sxtw	x8, w0
  40c790:	cbz	x8, 40c7b0 <manager_gc+0x40c>
  40c794:	mov	w8, wzr
  40c798:	mov	w0, w8
  40c79c:	ldr	x1, [sp, #8]
  40c7a0:	ldr	x2, [sp, #24]
  40c7a4:	mov	w3, #0x3cd                 	// #973
  40c7a8:	ldr	x4, [sp, #16]
  40c7ac:	bl	406c68 <log_assert_failed_realm@plt>
  40c7b0:	ldr	x8, [sp, #40]
  40c7b4:	ldr	x8, [x8, #136]
  40c7b8:	cbz	x8, 40c7d0 <manager_gc+0x42c>
  40c7bc:	ldr	x8, [sp, #40]
  40c7c0:	ldr	x8, [x8, #144]
  40c7c4:	ldr	x9, [sp, #40]
  40c7c8:	ldr	x9, [x9, #136]
  40c7cc:	str	x8, [x9, #144]
  40c7d0:	ldr	x8, [sp, #40]
  40c7d4:	ldr	x8, [x8, #144]
  40c7d8:	cbz	x8, 40c7f4 <manager_gc+0x450>
  40c7dc:	ldr	x8, [sp, #40]
  40c7e0:	ldr	x8, [x8, #136]
  40c7e4:	ldr	x9, [sp, #40]
  40c7e8:	ldr	x9, [x9, #144]
  40c7ec:	str	x8, [x9, #136]
  40c7f0:	b	40c854 <manager_gc+0x4b0>
  40c7f4:	ldr	x8, [sp, #48]
  40c7f8:	ldr	x8, [x8]
  40c7fc:	ldr	x9, [sp, #40]
  40c800:	cmp	x8, x9
  40c804:	cset	w10, eq  // eq = none
  40c808:	mov	w11, #0x1                   	// #1
  40c80c:	eor	w10, w10, #0x1
  40c810:	eor	w10, w10, w11
  40c814:	eor	w10, w10, w11
  40c818:	and	w10, w10, #0x1
  40c81c:	mov	w0, w10
  40c820:	sxtw	x8, w0
  40c824:	cbz	x8, 40c844 <manager_gc+0x4a0>
  40c828:	mov	w8, wzr
  40c82c:	mov	w0, w8
  40c830:	ldr	x1, [sp, #32]
  40c834:	ldr	x2, [sp, #24]
  40c838:	mov	w3, #0x3cd                 	// #973
  40c83c:	ldr	x4, [sp, #16]
  40c840:	bl	406c68 <log_assert_failed_realm@plt>
  40c844:	ldr	x8, [sp, #40]
  40c848:	ldr	x8, [x8, #136]
  40c84c:	ldr	x9, [sp, #48]
  40c850:	str	x8, [x9]
  40c854:	ldr	x8, [sp, #40]
  40c858:	mov	x9, xzr
  40c85c:	str	x9, [x8, #144]
  40c860:	ldr	x8, [sp, #40]
  40c864:	str	x9, [x8, #136]
  40c868:	ldur	x8, [x29, #-40]
  40c86c:	ldrb	w9, [x8, #120]
  40c870:	and	w9, w9, #0xfffffffe
  40c874:	strb	w9, [x8, #120]
  40c878:	ldur	x0, [x29, #-40]
  40c87c:	ldurb	w9, [x29, #-9]
  40c880:	and	w1, w9, #0x1
  40c884:	bl	43bd50 <user_may_gc>
  40c888:	tbnz	w0, #0, 40c890 <manager_gc+0x4ec>
  40c88c:	b	40c8a0 <manager_gc+0x4fc>
  40c890:	ldur	x0, [x29, #-40]
  40c894:	mov	w8, wzr
  40c898:	and	w1, w8, #0x1
  40c89c:	bl	43b1d8 <user_stop>
  40c8a0:	ldur	x0, [x29, #-40]
  40c8a4:	ldurb	w8, [x29, #-9]
  40c8a8:	and	w1, w8, #0x1
  40c8ac:	bl	43bd50 <user_may_gc>
  40c8b0:	tbnz	w0, #0, 40c8b8 <manager_gc+0x514>
  40c8b4:	b	40c8cc <manager_gc+0x528>
  40c8b8:	ldur	x0, [x29, #-40]
  40c8bc:	bl	43b514 <user_finalize>
  40c8c0:	ldur	x8, [x29, #-40]
  40c8c4:	mov	x0, x8
  40c8c8:	bl	439fc0 <user_free>
  40c8cc:	b	40c744 <manager_gc+0x3a0>
  40c8d0:	ldp	x29, x30, [sp, #128]
  40c8d4:	add	sp, sp, #0x90
  40c8d8:	ret

000000000040c8dc <manager_reserve_vt>:
  40c8dc:	sub	sp, sp, #0x50
  40c8e0:	stp	x29, x30, [sp, #64]
  40c8e4:	add	x29, sp, #0x40
  40c8e8:	mov	x8, xzr
  40c8ec:	adrp	x9, 440000 <on_brightness_writer_exit+0x15c>
  40c8f0:	add	x9, x9, #0x3f0
  40c8f4:	add	x9, x9, #0x3
  40c8f8:	stur	x0, [x29, #-16]
  40c8fc:	stur	x8, [x29, #-24]
  40c900:	str	x9, [sp, #8]
  40c904:	ldur	x8, [x29, #-16]
  40c908:	cmp	x8, #0x0
  40c90c:	cset	w9, ne  // ne = any
  40c910:	mov	w10, #0x1                   	// #1
  40c914:	eor	w9, w9, #0x1
  40c918:	eor	w9, w9, w10
  40c91c:	eor	w9, w9, w10
  40c920:	and	w9, w9, #0x1
  40c924:	mov	w0, w9
  40c928:	sxtw	x8, w0
  40c92c:	cbz	x8, 40c954 <manager_reserve_vt+0x78>
  40c930:	mov	w8, wzr
  40c934:	mov	w0, w8
  40c938:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40c93c:	add	x1, x1, #0x5ef
  40c940:	ldr	x2, [sp, #8]
  40c944:	mov	w3, #0x253                 	// #595
  40c948:	adrp	x4, 441000 <_fini+0xc30>
  40c94c:	add	x4, x4, #0x6e2
  40c950:	bl	406c68 <log_assert_failed_realm@plt>
  40c954:	ldur	x8, [x29, #-16]
  40c958:	ldr	w9, [x8, #160]
  40c95c:	cmp	w9, #0x0
  40c960:	cset	w9, hi  // hi = pmore
  40c964:	tbnz	w9, #0, 40c978 <manager_reserve_vt+0x9c>
  40c968:	stur	wzr, [x29, #-4]
  40c96c:	mov	w8, #0x1                   	// #1
  40c970:	stur	w8, [x29, #-28]
  40c974:	b	40cab0 <manager_reserve_vt+0x1d4>
  40c978:	ldur	x8, [x29, #-16]
  40c97c:	ldr	w2, [x8, #160]
  40c980:	sub	x0, x29, #0x18
  40c984:	adrp	x1, 441000 <_fini+0xc30>
  40c988:	add	x1, x1, #0x704
  40c98c:	bl	406ff8 <asprintf@plt>
  40c990:	cmp	w0, #0x0
  40c994:	cset	w9, ge  // ge = tcont
  40c998:	tbnz	w9, #0, 40c9c8 <manager_reserve_vt+0xec>
  40c99c:	mov	w8, wzr
  40c9a0:	mov	w0, w8
  40c9a4:	ldr	x1, [sp, #8]
  40c9a8:	mov	w2, #0x259                 	// #601
  40c9ac:	adrp	x3, 441000 <_fini+0xc30>
  40c9b0:	add	x3, x3, #0x70f
  40c9b4:	bl	407008 <log_oom_internal@plt>
  40c9b8:	stur	w0, [x29, #-4]
  40c9bc:	mov	w8, #0x1                   	// #1
  40c9c0:	stur	w8, [x29, #-28]
  40c9c4:	b	40cab0 <manager_reserve_vt+0x1d4>
  40c9c8:	ldur	x0, [x29, #-24]
  40c9cc:	mov	w1, #0x902                 	// #2306
  40c9d0:	movk	w1, #0x8, lsl #16
  40c9d4:	bl	406df8 <open64@plt>
  40c9d8:	ldur	x8, [x29, #-16]
  40c9dc:	str	w0, [x8, #164]
  40c9e0:	ldur	x8, [x29, #-16]
  40c9e4:	ldr	w9, [x8, #164]
  40c9e8:	cmp	w9, #0x0
  40c9ec:	cset	w9, ge  // ge = tcont
  40c9f0:	tbnz	w9, #0, 40caa4 <manager_reserve_vt+0x1c8>
  40c9f4:	bl	406e08 <__errno_location@plt>
  40c9f8:	ldr	w8, [x0]
  40c9fc:	cmp	w8, #0x2
  40ca00:	b.eq	40ca84 <manager_reserve_vt+0x1a8>  // b.none
  40ca04:	mov	w8, #0x4                   	// #4
  40ca08:	str	w8, [sp, #32]
  40ca0c:	bl	406e08 <__errno_location@plt>
  40ca10:	ldr	w8, [x0]
  40ca14:	str	w8, [sp, #28]
  40ca18:	str	wzr, [sp, #24]
  40ca1c:	ldr	w0, [sp, #24]
  40ca20:	bl	406c08 <log_get_max_level_realm@plt>
  40ca24:	ldr	w8, [sp, #32]
  40ca28:	and	w8, w8, #0x7
  40ca2c:	cmp	w0, w8
  40ca30:	b.lt	40ca68 <manager_reserve_vt+0x18c>  // b.tstop
  40ca34:	ldr	w8, [sp, #24]
  40ca38:	ldr	w9, [sp, #32]
  40ca3c:	orr	w0, w9, w8, lsl #10
  40ca40:	ldr	w1, [sp, #28]
  40ca44:	ldr	x2, [sp, #8]
  40ca48:	mov	w3, #0x260                 	// #608
  40ca4c:	adrp	x4, 441000 <_fini+0xc30>
  40ca50:	add	x4, x4, #0x70f
  40ca54:	adrp	x5, 441000 <_fini+0xc30>
  40ca58:	add	x5, x5, #0x722
  40ca5c:	bl	406c18 <log_internal_realm@plt>
  40ca60:	str	w0, [sp, #4]
  40ca64:	b	40ca7c <manager_reserve_vt+0x1a0>
  40ca68:	ldr	w0, [sp, #28]
  40ca6c:	bl	406c28 <abs@plt>
  40ca70:	mov	w8, wzr
  40ca74:	subs	w8, w8, w0, uxtb
  40ca78:	str	w8, [sp, #4]
  40ca7c:	ldr	w8, [sp, #4]
  40ca80:	str	w8, [sp, #20]
  40ca84:	bl	406e08 <__errno_location@plt>
  40ca88:	ldr	w8, [x0]
  40ca8c:	mov	w9, wzr
  40ca90:	subs	w8, w9, w8
  40ca94:	stur	w8, [x29, #-4]
  40ca98:	mov	w8, #0x1                   	// #1
  40ca9c:	stur	w8, [x29, #-28]
  40caa0:	b	40cab0 <manager_reserve_vt+0x1d4>
  40caa4:	stur	wzr, [x29, #-4]
  40caa8:	mov	w8, #0x1                   	// #1
  40caac:	stur	w8, [x29, #-28]
  40cab0:	sub	x0, x29, #0x18
  40cab4:	bl	40e458 <freep>
  40cab8:	ldur	w0, [x29, #-4]
  40cabc:	ldp	x29, x30, [sp, #64]
  40cac0:	add	sp, sp, #0x50
  40cac4:	ret

000000000040cac8 <hashmap_iterate>:
  40cac8:	sub	sp, sp, #0x30
  40cacc:	stp	x29, x30, [sp, #32]
  40cad0:	add	x29, sp, #0x20
  40cad4:	stur	x0, [x29, #-8]
  40cad8:	str	x1, [sp, #16]
  40cadc:	str	x2, [sp, #8]
  40cae0:	str	x3, [sp]
  40cae4:	ldur	x0, [x29, #-8]
  40cae8:	ldr	x1, [sp, #16]
  40caec:	ldr	x2, [sp, #8]
  40caf0:	ldr	x3, [sp]
  40caf4:	bl	407018 <internal_hashmap_iterate@plt>
  40caf8:	and	w0, w0, #0x1
  40cafc:	ldp	x29, x30, [sp, #32]
  40cb00:	add	sp, sp, #0x30
  40cb04:	ret

000000000040cb08 <manager_dispatch_idle_action>:
  40cb08:	sub	sp, sp, #0x120
  40cb0c:	stp	x29, x30, [sp, #256]
  40cb10:	str	x28, [sp, #272]
  40cb14:	add	x29, sp, #0x100
  40cb18:	adrp	x8, 440000 <on_brightness_writer_exit+0x15c>
  40cb1c:	add	x8, x8, #0x3f0
  40cb20:	add	x8, x8, #0x3
  40cb24:	adrp	x9, 441000 <_fini+0xc30>
  40cb28:	add	x9, x9, #0x786
  40cb2c:	stur	x0, [x29, #-16]
  40cb30:	stur	x1, [x29, #-24]
  40cb34:	stur	x2, [x29, #-32]
  40cb38:	ldur	x10, [x29, #-32]
  40cb3c:	stur	x10, [x29, #-40]
  40cb40:	str	x8, [sp, #64]
  40cb44:	str	x9, [sp, #56]
  40cb48:	ldur	x8, [x29, #-40]
  40cb4c:	cmp	x8, #0x0
  40cb50:	cset	w9, ne  // ne = any
  40cb54:	mov	w10, #0x1                   	// #1
  40cb58:	eor	w9, w9, #0x1
  40cb5c:	eor	w9, w9, w10
  40cb60:	eor	w9, w9, w10
  40cb64:	and	w9, w9, #0x1
  40cb68:	mov	w0, w9
  40cb6c:	sxtw	x8, w0
  40cb70:	cbz	x8, 40cb98 <manager_dispatch_idle_action+0x90>
  40cb74:	mov	w8, wzr
  40cb78:	mov	w0, w8
  40cb7c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40cb80:	add	x1, x1, #0x5ef
  40cb84:	ldr	x2, [sp, #64]
  40cb88:	mov	w3, #0x3e2                 	// #994
  40cb8c:	adrp	x4, 441000 <_fini+0xc30>
  40cb90:	add	x4, x4, #0x740
  40cb94:	bl	406c68 <log_assert_failed_realm@plt>
  40cb98:	ldur	x8, [x29, #-40]
  40cb9c:	ldr	w9, [x8, #392]
  40cba0:	cbz	w9, 40cbb8 <manager_dispatch_idle_action+0xb0>
  40cba4:	ldur	x8, [x29, #-40]
  40cba8:	ldr	x8, [x8, #376]
  40cbac:	cmp	x8, #0x0
  40cbb0:	cset	w9, hi  // hi = pmore
  40cbb4:	tbnz	w9, #0, 40cbc0 <manager_dispatch_idle_action+0xb8>
  40cbb8:	stur	wzr, [x29, #-4]
  40cbbc:	b	40d04c <manager_dispatch_idle_action+0x544>
  40cbc0:	mov	w0, #0x1                   	// #1
  40cbc4:	bl	406ca8 <now@plt>
  40cbc8:	stur	x0, [x29, #-64]
  40cbcc:	ldur	x0, [x29, #-40]
  40cbd0:	sub	x1, x29, #0x38
  40cbd4:	bl	41273c <manager_get_idle_hint>
  40cbd8:	stur	w0, [x29, #-76]
  40cbdc:	ldur	w8, [x29, #-76]
  40cbe0:	cmp	w8, #0x0
  40cbe4:	cset	w8, gt
  40cbe8:	tbnz	w8, #0, 40cc04 <manager_dispatch_idle_action+0xfc>
  40cbec:	ldur	x8, [x29, #-64]
  40cbf0:	ldur	x9, [x29, #-40]
  40cbf4:	ldr	x9, [x9, #376]
  40cbf8:	add	x8, x8, x9
  40cbfc:	stur	x8, [x29, #-72]
  40cc00:	b	40cd78 <manager_dispatch_idle_action+0x270>
  40cc04:	ldur	x8, [x29, #-64]
  40cc08:	ldur	x9, [x29, #-48]
  40cc0c:	ldur	x10, [x29, #-40]
  40cc10:	ldr	x10, [x10, #376]
  40cc14:	add	x9, x9, x10
  40cc18:	cmp	x8, x9
  40cc1c:	b.cc	40cd24 <manager_dispatch_idle_action+0x21c>  // b.lo, b.ul, b.last
  40cc20:	ldur	x8, [x29, #-40]
  40cc24:	ldr	x8, [x8, #384]
  40cc28:	cmp	x8, #0x0
  40cc2c:	cset	w9, ls  // ls = plast
  40cc30:	tbnz	w9, #0, 40cc54 <manager_dispatch_idle_action+0x14c>
  40cc34:	ldur	x8, [x29, #-64]
  40cc38:	ldur	x9, [x29, #-40]
  40cc3c:	ldr	x9, [x9, #384]
  40cc40:	ldur	x10, [x29, #-40]
  40cc44:	ldr	x10, [x10, #376]
  40cc48:	add	x9, x9, x10
  40cc4c:	cmp	x8, x9
  40cc50:	b.cc	40cd24 <manager_dispatch_idle_action+0x21c>  // b.lo, b.ul, b.last
  40cc54:	mov	w8, #0x6                   	// #6
  40cc58:	stur	w8, [x29, #-80]
  40cc5c:	stur	wzr, [x29, #-84]
  40cc60:	stur	wzr, [x29, #-88]
  40cc64:	ldur	w0, [x29, #-88]
  40cc68:	bl	406c08 <log_get_max_level_realm@plt>
  40cc6c:	ldur	w8, [x29, #-80]
  40cc70:	and	w8, w8, #0x7
  40cc74:	cmp	w0, w8
  40cc78:	b.lt	40ccd8 <manager_dispatch_idle_action+0x1d0>  // b.tstop
  40cc7c:	ldur	w8, [x29, #-88]
  40cc80:	ldur	w9, [x29, #-80]
  40cc84:	orr	w0, w9, w8, lsl #10
  40cc88:	ldur	w1, [x29, #-84]
  40cc8c:	ldur	x10, [x29, #-40]
  40cc90:	ldr	w8, [x10, #392]
  40cc94:	str	w0, [sp, #52]
  40cc98:	mov	w0, w8
  40cc9c:	str	w1, [sp, #48]
  40cca0:	bl	40f30c <handle_action_to_string>
  40cca4:	ldr	w8, [sp, #52]
  40cca8:	str	x0, [sp, #40]
  40ccac:	mov	w0, w8
  40ccb0:	ldr	w1, [sp, #48]
  40ccb4:	ldr	x2, [sp, #64]
  40ccb8:	mov	w3, #0x3f4                 	// #1012
  40ccbc:	ldr	x4, [sp, #56]
  40ccc0:	adrp	x5, 441000 <_fini+0xc30>
  40ccc4:	add	x5, x5, #0x7a3
  40ccc8:	ldr	x6, [sp, #40]
  40cccc:	bl	406c18 <log_internal_realm@plt>
  40ccd0:	str	w0, [sp, #36]
  40ccd4:	b	40ccec <manager_dispatch_idle_action+0x1e4>
  40ccd8:	ldur	w0, [x29, #-84]
  40ccdc:	bl	406c28 <abs@plt>
  40cce0:	mov	w8, wzr
  40cce4:	subs	w8, w8, w0, uxtb
  40cce8:	str	w8, [sp, #36]
  40ccec:	ldr	w8, [sp, #36]
  40ccf0:	stur	w8, [x29, #-92]
  40ccf4:	ldur	x0, [x29, #-40]
  40ccf8:	ldur	x9, [x29, #-40]
  40ccfc:	ldr	w2, [x9, #392]
  40cd00:	mov	w8, wzr
  40cd04:	mov	w1, w8
  40cd08:	mov	w8, wzr
  40cd0c:	and	w3, w8, #0x1
  40cd10:	and	w4, w8, #0x1
  40cd14:	bl	40e7a4 <manager_handle_action>
  40cd18:	ldur	x9, [x29, #-64]
  40cd1c:	ldur	x10, [x29, #-40]
  40cd20:	str	x9, [x10, #384]
  40cd24:	ldur	x8, [x29, #-48]
  40cd28:	stur	x8, [x29, #-104]
  40cd2c:	ldur	x8, [x29, #-40]
  40cd30:	ldr	x8, [x8, #384]
  40cd34:	stur	x8, [x29, #-112]
  40cd38:	ldur	x8, [x29, #-104]
  40cd3c:	ldur	x9, [x29, #-112]
  40cd40:	cmp	x8, x9
  40cd44:	b.ls	40cd54 <manager_dispatch_idle_action+0x24c>  // b.plast
  40cd48:	ldur	x8, [x29, #-104]
  40cd4c:	str	x8, [sp, #24]
  40cd50:	b	40cd5c <manager_dispatch_idle_action+0x254>
  40cd54:	ldur	x8, [x29, #-112]
  40cd58:	str	x8, [sp, #24]
  40cd5c:	ldr	x8, [sp, #24]
  40cd60:	stur	x8, [x29, #-120]
  40cd64:	ldur	x8, [x29, #-120]
  40cd68:	ldur	x9, [x29, #-40]
  40cd6c:	ldr	x9, [x9, #376]
  40cd70:	add	x8, x8, x9
  40cd74:	stur	x8, [x29, #-72]
  40cd78:	ldur	x8, [x29, #-40]
  40cd7c:	ldr	x8, [x8, #368]
  40cd80:	cbnz	x8, 40cef8 <manager_dispatch_idle_action+0x3f0>
  40cd84:	ldur	x8, [x29, #-40]
  40cd88:	ldr	x0, [x8]
  40cd8c:	ldur	x8, [x29, #-40]
  40cd90:	add	x1, x8, #0x170
  40cd94:	ldur	x3, [x29, #-72]
  40cd98:	ldur	x6, [x29, #-40]
  40cd9c:	mov	w2, #0x1                   	// #1
  40cda0:	mov	x4, #0xc380                	// #50048
  40cda4:	movk	x4, #0x1c9, lsl #16
  40cda8:	adrp	x5, 40c000 <manager_enumerate_inhibitors+0xec>
  40cdac:	add	x5, x5, #0xb08
  40cdb0:	bl	407028 <sd_event_add_time@plt>
  40cdb4:	stur	w0, [x29, #-76]
  40cdb8:	ldur	w9, [x29, #-76]
  40cdbc:	cmp	w9, #0x0
  40cdc0:	cset	w9, ge  // ge = tcont
  40cdc4:	tbnz	w9, #0, 40ce4c <manager_dispatch_idle_action+0x344>
  40cdc8:	mov	w8, #0x3                   	// #3
  40cdcc:	stur	w8, [x29, #-124]
  40cdd0:	ldur	w8, [x29, #-76]
  40cdd4:	str	w8, [sp, #128]
  40cdd8:	str	wzr, [sp, #124]
  40cddc:	ldr	w0, [sp, #124]
  40cde0:	bl	406c08 <log_get_max_level_realm@plt>
  40cde4:	ldur	w8, [x29, #-124]
  40cde8:	and	w8, w8, #0x7
  40cdec:	cmp	w0, w8
  40cdf0:	b.lt	40ce24 <manager_dispatch_idle_action+0x31c>  // b.tstop
  40cdf4:	ldr	w8, [sp, #124]
  40cdf8:	ldur	w9, [x29, #-124]
  40cdfc:	orr	w0, w9, w8, lsl #10
  40ce00:	ldr	w1, [sp, #128]
  40ce04:	ldr	x2, [sp, #64]
  40ce08:	mov	w3, #0x406                 	// #1030
  40ce0c:	ldr	x4, [sp, #56]
  40ce10:	adrp	x5, 441000 <_fini+0xc30>
  40ce14:	add	x5, x5, #0x7c4
  40ce18:	bl	406c18 <log_internal_realm@plt>
  40ce1c:	str	w0, [sp, #20]
  40ce20:	b	40ce38 <manager_dispatch_idle_action+0x330>
  40ce24:	ldr	w0, [sp, #128]
  40ce28:	bl	406c28 <abs@plt>
  40ce2c:	mov	w8, wzr
  40ce30:	subs	w8, w8, w0, uxtb
  40ce34:	str	w8, [sp, #20]
  40ce38:	ldr	w8, [sp, #20]
  40ce3c:	str	w8, [sp, #120]
  40ce40:	ldr	w8, [sp, #120]
  40ce44:	stur	w8, [x29, #-4]
  40ce48:	b	40d04c <manager_dispatch_idle_action+0x544>
  40ce4c:	ldur	x8, [x29, #-40]
  40ce50:	ldr	x0, [x8, #368]
  40ce54:	mov	x1, #0x6e                  	// #110
  40ce58:	bl	407038 <sd_event_source_set_priority@plt>
  40ce5c:	stur	w0, [x29, #-76]
  40ce60:	ldur	w9, [x29, #-76]
  40ce64:	cmp	w9, #0x0
  40ce68:	cset	w9, ge  // ge = tcont
  40ce6c:	tbnz	w9, #0, 40cef4 <manager_dispatch_idle_action+0x3ec>
  40ce70:	mov	w8, #0x3                   	// #3
  40ce74:	str	w8, [sp, #116]
  40ce78:	ldur	w8, [x29, #-76]
  40ce7c:	str	w8, [sp, #112]
  40ce80:	str	wzr, [sp, #108]
  40ce84:	ldr	w0, [sp, #108]
  40ce88:	bl	406c08 <log_get_max_level_realm@plt>
  40ce8c:	ldr	w8, [sp, #116]
  40ce90:	and	w8, w8, #0x7
  40ce94:	cmp	w0, w8
  40ce98:	b.lt	40cecc <manager_dispatch_idle_action+0x3c4>  // b.tstop
  40ce9c:	ldr	w8, [sp, #108]
  40cea0:	ldr	w9, [sp, #116]
  40cea4:	orr	w0, w9, w8, lsl #10
  40cea8:	ldr	w1, [sp, #112]
  40ceac:	ldr	x2, [sp, #64]
  40ceb0:	mov	w3, #0x40a                 	// #1034
  40ceb4:	ldr	x4, [sp, #56]
  40ceb8:	adrp	x5, 441000 <_fini+0xc30>
  40cebc:	add	x5, x5, #0x7e8
  40cec0:	bl	406c18 <log_internal_realm@plt>
  40cec4:	str	w0, [sp, #16]
  40cec8:	b	40cee0 <manager_dispatch_idle_action+0x3d8>
  40cecc:	ldr	w0, [sp, #112]
  40ced0:	bl	406c28 <abs@plt>
  40ced4:	mov	w8, wzr
  40ced8:	subs	w8, w8, w0, uxtb
  40cedc:	str	w8, [sp, #16]
  40cee0:	ldr	w8, [sp, #16]
  40cee4:	str	w8, [sp, #104]
  40cee8:	ldr	w8, [sp, #104]
  40ceec:	stur	w8, [x29, #-4]
  40cef0:	b	40d04c <manager_dispatch_idle_action+0x544>
  40cef4:	b	40d048 <manager_dispatch_idle_action+0x540>
  40cef8:	ldur	x8, [x29, #-40]
  40cefc:	ldr	x0, [x8, #368]
  40cf00:	ldur	x1, [x29, #-72]
  40cf04:	bl	407048 <sd_event_source_set_time@plt>
  40cf08:	stur	w0, [x29, #-76]
  40cf0c:	ldur	w9, [x29, #-76]
  40cf10:	cmp	w9, #0x0
  40cf14:	cset	w9, ge  // ge = tcont
  40cf18:	tbnz	w9, #0, 40cfa0 <manager_dispatch_idle_action+0x498>
  40cf1c:	mov	w8, #0x3                   	// #3
  40cf20:	str	w8, [sp, #100]
  40cf24:	ldur	w8, [x29, #-76]
  40cf28:	str	w8, [sp, #96]
  40cf2c:	str	wzr, [sp, #92]
  40cf30:	ldr	w0, [sp, #92]
  40cf34:	bl	406c08 <log_get_max_level_realm@plt>
  40cf38:	ldr	w8, [sp, #100]
  40cf3c:	and	w8, w8, #0x7
  40cf40:	cmp	w0, w8
  40cf44:	b.lt	40cf78 <manager_dispatch_idle_action+0x470>  // b.tstop
  40cf48:	ldr	w8, [sp, #92]
  40cf4c:	ldr	w9, [sp, #100]
  40cf50:	orr	w0, w9, w8, lsl #10
  40cf54:	ldr	w1, [sp, #96]
  40cf58:	ldr	x2, [sp, #64]
  40cf5c:	mov	w3, #0x40e                 	// #1038
  40cf60:	ldr	x4, [sp, #56]
  40cf64:	adrp	x5, 441000 <_fini+0xc30>
  40cf68:	add	x5, x5, #0x815
  40cf6c:	bl	406c18 <log_internal_realm@plt>
  40cf70:	str	w0, [sp, #12]
  40cf74:	b	40cf8c <manager_dispatch_idle_action+0x484>
  40cf78:	ldr	w0, [sp, #96]
  40cf7c:	bl	406c28 <abs@plt>
  40cf80:	mov	w8, wzr
  40cf84:	subs	w8, w8, w0, uxtb
  40cf88:	str	w8, [sp, #12]
  40cf8c:	ldr	w8, [sp, #12]
  40cf90:	str	w8, [sp, #88]
  40cf94:	ldr	w8, [sp, #88]
  40cf98:	stur	w8, [x29, #-4]
  40cf9c:	b	40d04c <manager_dispatch_idle_action+0x544>
  40cfa0:	ldur	x8, [x29, #-40]
  40cfa4:	ldr	x0, [x8, #368]
  40cfa8:	mov	w1, #0xffffffff            	// #-1
  40cfac:	bl	407058 <sd_event_source_set_enabled@plt>
  40cfb0:	stur	w0, [x29, #-76]
  40cfb4:	ldur	w9, [x29, #-76]
  40cfb8:	cmp	w9, #0x0
  40cfbc:	cset	w9, ge  // ge = tcont
  40cfc0:	tbnz	w9, #0, 40d048 <manager_dispatch_idle_action+0x540>
  40cfc4:	mov	w8, #0x3                   	// #3
  40cfc8:	str	w8, [sp, #84]
  40cfcc:	ldur	w8, [x29, #-76]
  40cfd0:	str	w8, [sp, #80]
  40cfd4:	str	wzr, [sp, #76]
  40cfd8:	ldr	w0, [sp, #76]
  40cfdc:	bl	406c08 <log_get_max_level_realm@plt>
  40cfe0:	ldr	w8, [sp, #84]
  40cfe4:	and	w8, w8, #0x7
  40cfe8:	cmp	w0, w8
  40cfec:	b.lt	40d020 <manager_dispatch_idle_action+0x518>  // b.tstop
  40cff0:	ldr	w8, [sp, #76]
  40cff4:	ldr	w9, [sp, #84]
  40cff8:	orr	w0, w9, w8, lsl #10
  40cffc:	ldr	w1, [sp, #80]
  40d000:	ldr	x2, [sp, #64]
  40d004:	mov	w3, #0x412                 	// #1042
  40d008:	ldr	x4, [sp, #56]
  40d00c:	adrp	x5, 441000 <_fini+0xc30>
  40d010:	add	x5, x5, #0x838
  40d014:	bl	406c18 <log_internal_realm@plt>
  40d018:	str	w0, [sp, #8]
  40d01c:	b	40d034 <manager_dispatch_idle_action+0x52c>
  40d020:	ldr	w0, [sp, #80]
  40d024:	bl	406c28 <abs@plt>
  40d028:	mov	w8, wzr
  40d02c:	subs	w8, w8, w0, uxtb
  40d030:	str	w8, [sp, #8]
  40d034:	ldr	w8, [sp, #8]
  40d038:	str	w8, [sp, #72]
  40d03c:	ldr	w8, [sp, #72]
  40d040:	stur	w8, [x29, #-4]
  40d044:	b	40d04c <manager_dispatch_idle_action+0x544>
  40d048:	stur	wzr, [x29, #-4]
  40d04c:	ldur	w0, [x29, #-4]
  40d050:	ldr	x28, [sp, #272]
  40d054:	ldp	x29, x30, [sp, #256]
  40d058:	add	sp, sp, #0x120
  40d05c:	ret

000000000040d060 <manager_dispatch_console>:
  40d060:	sub	sp, sp, #0x40
  40d064:	stp	x29, x30, [sp, #48]
  40d068:	add	x29, sp, #0x30
  40d06c:	adrp	x8, 440000 <on_brightness_writer_exit+0x15c>
  40d070:	add	x8, x8, #0x3f0
  40d074:	add	x8, x8, #0x3
  40d078:	adrp	x9, 440000 <on_brightness_writer_exit+0x15c>
  40d07c:	add	x9, x9, #0x9a7
  40d080:	stur	x0, [x29, #-8]
  40d084:	stur	w1, [x29, #-12]
  40d088:	stur	w2, [x29, #-16]
  40d08c:	str	x3, [sp, #24]
  40d090:	ldr	x10, [sp, #24]
  40d094:	str	x10, [sp, #16]
  40d098:	str	x8, [sp, #8]
  40d09c:	str	x9, [sp]
  40d0a0:	ldr	x8, [sp, #16]
  40d0a4:	cmp	x8, #0x0
  40d0a8:	cset	w9, ne  // ne = any
  40d0ac:	mov	w10, #0x1                   	// #1
  40d0b0:	eor	w9, w9, #0x1
  40d0b4:	eor	w9, w9, w10
  40d0b8:	eor	w9, w9, w10
  40d0bc:	and	w9, w9, #0x1
  40d0c0:	mov	w0, w9
  40d0c4:	sxtw	x8, w0
  40d0c8:	cbz	x8, 40d0ec <manager_dispatch_console+0x8c>
  40d0cc:	mov	w8, wzr
  40d0d0:	mov	w0, w8
  40d0d4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40d0d8:	add	x1, x1, #0x5ef
  40d0dc:	ldr	x2, [sp, #8]
  40d0e0:	mov	w3, #0x248                 	// #584
  40d0e4:	ldr	x4, [sp]
  40d0e8:	bl	406c68 <log_assert_failed_realm@plt>
  40d0ec:	ldr	x8, [sp, #16]
  40d0f0:	ldr	x8, [x8, #168]
  40d0f4:	cmp	x8, #0x0
  40d0f8:	cset	w9, ne  // ne = any
  40d0fc:	mov	w10, #0x1                   	// #1
  40d100:	eor	w9, w9, #0x1
  40d104:	eor	w9, w9, w10
  40d108:	eor	w9, w9, w10
  40d10c:	and	w9, w9, #0x1
  40d110:	mov	w0, w9
  40d114:	sxtw	x8, w0
  40d118:	cbz	x8, 40d13c <manager_dispatch_console+0xdc>
  40d11c:	mov	w8, wzr
  40d120:	mov	w0, w8
  40d124:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40d128:	add	x1, x1, #0x9ee
  40d12c:	ldr	x2, [sp, #8]
  40d130:	mov	w3, #0x249                 	// #585
  40d134:	ldr	x4, [sp]
  40d138:	bl	406c68 <log_assert_failed_realm@plt>
  40d13c:	ldr	x8, [sp, #16]
  40d140:	ldr	w9, [x8, #152]
  40d144:	ldur	w10, [x29, #-12]
  40d148:	cmp	w9, w10
  40d14c:	cset	w9, eq  // eq = none
  40d150:	mov	w10, #0x1                   	// #1
  40d154:	eor	w9, w9, #0x1
  40d158:	eor	w9, w9, w10
  40d15c:	eor	w9, w9, w10
  40d160:	and	w9, w9, #0x1
  40d164:	mov	w0, w9
  40d168:	sxtw	x8, w0
  40d16c:	cbz	x8, 40d190 <manager_dispatch_console+0x130>
  40d170:	mov	w8, wzr
  40d174:	mov	w0, w8
  40d178:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40d17c:	add	x1, x1, #0x9f7
  40d180:	ldr	x2, [sp, #8]
  40d184:	mov	w3, #0x24a                 	// #586
  40d188:	ldr	x4, [sp]
  40d18c:	bl	406c68 <log_assert_failed_realm@plt>
  40d190:	ldr	x8, [sp, #16]
  40d194:	ldr	x0, [x8, #168]
  40d198:	bl	42ac20 <seat_read_active_vt>
  40d19c:	mov	w9, wzr
  40d1a0:	mov	w0, w9
  40d1a4:	ldp	x29, x30, [sp, #48]
  40d1a8:	add	sp, sp, #0x40
  40d1ac:	ret

000000000040d1b0 <manager_vt_switch>:
  40d1b0:	sub	sp, sp, #0xb0
  40d1b4:	stp	x29, x30, [sp, #160]
  40d1b8:	add	x29, sp, #0xa0
  40d1bc:	adrp	x8, 440000 <on_brightness_writer_exit+0x15c>
  40d1c0:	add	x8, x8, #0x3f0
  40d1c4:	add	x8, x8, #0x3
  40d1c8:	adrp	x9, 440000 <on_brightness_writer_exit+0x15c>
  40d1cc:	add	x9, x9, #0xa64
  40d1d0:	stur	x0, [x29, #-16]
  40d1d4:	stur	x1, [x29, #-24]
  40d1d8:	stur	x2, [x29, #-32]
  40d1dc:	ldur	x10, [x29, #-32]
  40d1e0:	stur	x10, [x29, #-40]
  40d1e4:	str	x8, [sp, #32]
  40d1e8:	str	x9, [sp, #24]
  40d1ec:	ldur	x8, [x29, #-40]
  40d1f0:	ldr	x8, [x8, #168]
  40d1f4:	cmp	x8, #0x0
  40d1f8:	cset	w9, ne  // ne = any
  40d1fc:	mov	w10, #0x1                   	// #1
  40d200:	eor	w9, w9, #0x1
  40d204:	eor	w9, w9, w10
  40d208:	eor	w9, w9, w10
  40d20c:	and	w9, w9, #0x1
  40d210:	mov	w0, w9
  40d214:	sxtw	x8, w0
  40d218:	cbz	x8, 40d240 <manager_vt_switch+0x90>
  40d21c:	mov	w8, wzr
  40d220:	mov	w0, w8
  40d224:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40d228:	add	x1, x1, #0x9ee
  40d22c:	ldr	x2, [sp, #32]
  40d230:	mov	w3, #0x2e2                 	// #738
  40d234:	adrp	x4, 440000 <on_brightness_writer_exit+0x15c>
  40d238:	add	x4, x4, #0xa12
  40d23c:	bl	406c68 <log_assert_failed_realm@plt>
  40d240:	ldur	x8, [x29, #-40]
  40d244:	ldr	x0, [x8, #168]
  40d248:	bl	42ac20 <seat_read_active_vt>
  40d24c:	ldur	x8, [x29, #-40]
  40d250:	ldr	x8, [x8, #168]
  40d254:	ldr	x8, [x8, #32]
  40d258:	stur	x8, [x29, #-48]
  40d25c:	ldur	x8, [x29, #-48]
  40d260:	cbz	x8, 40d274 <manager_vt_switch+0xc4>
  40d264:	ldur	x8, [x29, #-48]
  40d268:	ldr	w9, [x8, #144]
  40d26c:	cmp	w9, #0x1
  40d270:	b.cs	40d454 <manager_vt_switch+0x2a4>  // b.hs, b.nlast
  40d274:	mov	w8, #0xffffffff            	// #-1
  40d278:	stur	w8, [x29, #-60]
  40d27c:	mov	w8, #0x4                   	// #4
  40d280:	stur	w8, [x29, #-68]
  40d284:	stur	wzr, [x29, #-72]
  40d288:	stur	wzr, [x29, #-76]
  40d28c:	ldur	w0, [x29, #-76]
  40d290:	bl	406c08 <log_get_max_level_realm@plt>
  40d294:	ldur	w8, [x29, #-68]
  40d298:	and	w8, w8, #0x7
  40d29c:	cmp	w0, w8
  40d2a0:	b.lt	40d2d4 <manager_vt_switch+0x124>  // b.tstop
  40d2a4:	ldur	w8, [x29, #-76]
  40d2a8:	ldur	w9, [x29, #-68]
  40d2ac:	orr	w0, w9, w8, lsl #10
  40d2b0:	ldur	w1, [x29, #-72]
  40d2b4:	ldr	x2, [sp, #32]
  40d2b8:	mov	w3, #0x2f0                 	// #752
  40d2bc:	ldr	x4, [sp, #24]
  40d2c0:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  40d2c4:	add	x5, x5, #0xa76
  40d2c8:	bl	406c18 <log_internal_realm@plt>
  40d2cc:	str	w0, [sp, #20]
  40d2d0:	b	40d2e8 <manager_vt_switch+0x138>
  40d2d4:	ldur	w0, [x29, #-72]
  40d2d8:	bl	406c28 <abs@plt>
  40d2dc:	mov	w8, wzr
  40d2e0:	subs	w8, w8, w0, uxtb
  40d2e4:	str	w8, [sp, #20]
  40d2e8:	ldr	w8, [sp, #20]
  40d2ec:	str	w8, [sp, #80]
  40d2f0:	adrp	x0, 440000 <on_brightness_writer_exit+0x15c>
  40d2f4:	add	x0, x0, #0x814
  40d2f8:	mov	w1, #0x902                 	// #2306
  40d2fc:	movk	w1, #0x8, lsl #16
  40d300:	bl	407068 <open_terminal@plt>
  40d304:	stur	w0, [x29, #-60]
  40d308:	ldur	w8, [x29, #-60]
  40d30c:	cmp	w8, #0x0
  40d310:	cset	w8, ge  // ge = tcont
  40d314:	tbnz	w8, #0, 40d3a0 <manager_vt_switch+0x1f0>
  40d318:	mov	w8, #0x4                   	// #4
  40d31c:	str	w8, [sp, #76]
  40d320:	ldur	w8, [x29, #-60]
  40d324:	str	w8, [sp, #72]
  40d328:	str	wzr, [sp, #68]
  40d32c:	ldr	w0, [sp, #68]
  40d330:	bl	406c08 <log_get_max_level_realm@plt>
  40d334:	ldr	w8, [sp, #76]
  40d338:	and	w8, w8, #0x7
  40d33c:	cmp	w0, w8
  40d340:	b.lt	40d374 <manager_vt_switch+0x1c4>  // b.tstop
  40d344:	ldr	w8, [sp, #68]
  40d348:	ldr	w9, [sp, #76]
  40d34c:	orr	w0, w9, w8, lsl #10
  40d350:	ldr	w1, [sp, #72]
  40d354:	ldr	x2, [sp, #32]
  40d358:	mov	w3, #0x2f6                 	// #758
  40d35c:	ldr	x4, [sp, #24]
  40d360:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  40d364:	add	x5, x5, #0xabd
  40d368:	bl	406c18 <log_internal_realm@plt>
  40d36c:	str	w0, [sp, #16]
  40d370:	b	40d388 <manager_vt_switch+0x1d8>
  40d374:	ldr	w0, [sp, #72]
  40d378:	bl	406c28 <abs@plt>
  40d37c:	mov	w8, wzr
  40d380:	subs	w8, w8, w0, uxtb
  40d384:	str	w8, [sp, #16]
  40d388:	ldr	w8, [sp, #16]
  40d38c:	str	w8, [sp, #64]
  40d390:	stur	wzr, [x29, #-4]
  40d394:	mov	w8, #0x1                   	// #1
  40d398:	str	w8, [sp, #60]
  40d39c:	b	40d448 <manager_vt_switch+0x298>
  40d3a0:	ldur	w0, [x29, #-60]
  40d3a4:	mov	w8, #0x1                   	// #1
  40d3a8:	and	w1, w8, #0x1
  40d3ac:	bl	407078 <vt_release@plt>
  40d3b0:	stur	w0, [x29, #-64]
  40d3b4:	ldur	w8, [x29, #-64]
  40d3b8:	cmp	w8, #0x0
  40d3bc:	cset	w8, ge  // ge = tcont
  40d3c0:	tbnz	w8, #0, 40d43c <manager_vt_switch+0x28c>
  40d3c4:	mov	w8, #0x4                   	// #4
  40d3c8:	str	w8, [sp, #56]
  40d3cc:	ldur	w8, [x29, #-64]
  40d3d0:	str	w8, [sp, #52]
  40d3d4:	str	wzr, [sp, #48]
  40d3d8:	ldr	w0, [sp, #48]
  40d3dc:	bl	406c08 <log_get_max_level_realm@plt>
  40d3e0:	ldr	w8, [sp, #56]
  40d3e4:	and	w8, w8, #0x7
  40d3e8:	cmp	w0, w8
  40d3ec:	b.lt	40d420 <manager_vt_switch+0x270>  // b.tstop
  40d3f0:	ldr	w8, [sp, #48]
  40d3f4:	ldr	w9, [sp, #56]
  40d3f8:	orr	w0, w9, w8, lsl #10
  40d3fc:	ldr	w1, [sp, #52]
  40d400:	ldr	x2, [sp, #32]
  40d404:	mov	w3, #0x2fc                 	// #764
  40d408:	ldr	x4, [sp, #24]
  40d40c:	adrp	x5, 440000 <on_brightness_writer_exit+0x15c>
  40d410:	add	x5, x5, #0xada
  40d414:	bl	406c18 <log_internal_realm@plt>
  40d418:	str	w0, [sp, #12]
  40d41c:	b	40d434 <manager_vt_switch+0x284>
  40d420:	ldr	w0, [sp, #52]
  40d424:	bl	406c28 <abs@plt>
  40d428:	mov	w8, wzr
  40d42c:	subs	w8, w8, w0, uxtb
  40d430:	str	w8, [sp, #12]
  40d434:	ldr	w8, [sp, #12]
  40d438:	str	w8, [sp, #44]
  40d43c:	stur	wzr, [x29, #-4]
  40d440:	mov	w8, #0x1                   	// #1
  40d444:	str	w8, [sp, #60]
  40d448:	sub	x0, x29, #0x3c
  40d44c:	bl	40d4e8 <closep>
  40d450:	b	40d4d8 <manager_vt_switch+0x328>
  40d454:	ldur	x8, [x29, #-48]
  40d458:	ldr	w9, [x8, #148]
  40d45c:	cmp	w9, #0x0
  40d460:	cset	w9, lt  // lt = tstop
  40d464:	tbnz	w9, #0, 40d474 <manager_vt_switch+0x2c4>
  40d468:	ldur	x0, [x29, #-48]
  40d46c:	bl	43740c <session_leave_vt>
  40d470:	b	40d4d4 <manager_vt_switch+0x324>
  40d474:	ldur	x8, [x29, #-40]
  40d478:	ldr	x8, [x8, #168]
  40d47c:	ldr	x8, [x8, #48]
  40d480:	stur	x8, [x29, #-56]
  40d484:	ldur	x8, [x29, #-56]
  40d488:	cbz	x8, 40d4d4 <manager_vt_switch+0x324>
  40d48c:	ldur	x8, [x29, #-56]
  40d490:	ldr	w9, [x8, #144]
  40d494:	ldur	x8, [x29, #-48]
  40d498:	ldr	w10, [x8, #144]
  40d49c:	cmp	w9, w10
  40d4a0:	b.ne	40d4c4 <manager_vt_switch+0x314>  // b.any
  40d4a4:	ldur	x8, [x29, #-56]
  40d4a8:	ldr	w9, [x8, #148]
  40d4ac:	cmp	w9, #0x0
  40d4b0:	cset	w9, lt  // lt = tstop
  40d4b4:	tbnz	w9, #0, 40d4c4 <manager_vt_switch+0x314>
  40d4b8:	ldur	x0, [x29, #-56]
  40d4bc:	bl	43740c <session_leave_vt>
  40d4c0:	b	40d4d4 <manager_vt_switch+0x324>
  40d4c4:	ldur	x8, [x29, #-56]
  40d4c8:	ldr	x8, [x8, #272]
  40d4cc:	stur	x8, [x29, #-56]
  40d4d0:	b	40d484 <manager_vt_switch+0x2d4>
  40d4d4:	stur	wzr, [x29, #-4]
  40d4d8:	ldur	w0, [x29, #-4]
  40d4dc:	ldp	x29, x30, [sp, #160]
  40d4e0:	add	sp, sp, #0xb0
  40d4e4:	ret

000000000040d4e8 <closep>:
  40d4e8:	sub	sp, sp, #0x20
  40d4ec:	stp	x29, x30, [sp, #16]
  40d4f0:	add	x29, sp, #0x10
  40d4f4:	str	x0, [sp, #8]
  40d4f8:	ldr	x8, [sp, #8]
  40d4fc:	ldr	w0, [x8]
  40d500:	bl	406d38 <safe_close@plt>
  40d504:	ldp	x29, x30, [sp, #16]
  40d508:	add	sp, sp, #0x20
  40d50c:	ret

000000000040d510 <manager_dispatch_seat_udev>:
  40d510:	sub	sp, sp, #0x40
  40d514:	stp	x29, x30, [sp, #48]
  40d518:	add	x29, sp, #0x30
  40d51c:	adrp	x8, 440000 <on_brightness_writer_exit+0x15c>
  40d520:	add	x8, x8, #0x3f0
  40d524:	add	x8, x8, #0x3
  40d528:	stur	x0, [x29, #-8]
  40d52c:	stur	x1, [x29, #-16]
  40d530:	str	x2, [sp, #24]
  40d534:	ldr	x9, [sp, #24]
  40d538:	str	x9, [sp, #16]
  40d53c:	str	x8, [sp, #8]
  40d540:	ldr	x8, [sp, #16]
  40d544:	cmp	x8, #0x0
  40d548:	cset	w9, ne  // ne = any
  40d54c:	mov	w10, #0x1                   	// #1
  40d550:	eor	w9, w9, #0x1
  40d554:	eor	w9, w9, w10
  40d558:	eor	w9, w9, w10
  40d55c:	and	w9, w9, #0x1
  40d560:	mov	w0, w9
  40d564:	sxtw	x8, w0
  40d568:	cbz	x8, 40d590 <manager_dispatch_seat_udev+0x80>
  40d56c:	mov	w8, wzr
  40d570:	mov	w0, w8
  40d574:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40d578:	add	x1, x1, #0x5ef
  40d57c:	ldr	x2, [sp, #8]
  40d580:	mov	w3, #0x218                 	// #536
  40d584:	adrp	x4, 440000 <on_brightness_writer_exit+0x15c>
  40d588:	add	x4, x4, #0xc04
  40d58c:	bl	406c68 <log_assert_failed_realm@plt>
  40d590:	ldur	x8, [x29, #-16]
  40d594:	cmp	x8, #0x0
  40d598:	cset	w9, ne  // ne = any
  40d59c:	mov	w10, #0x1                   	// #1
  40d5a0:	eor	w9, w9, #0x1
  40d5a4:	eor	w9, w9, w10
  40d5a8:	eor	w9, w9, w10
  40d5ac:	and	w9, w9, #0x1
  40d5b0:	mov	w0, w9
  40d5b4:	sxtw	x8, w0
  40d5b8:	cbz	x8, 40d5e0 <manager_dispatch_seat_udev+0xd0>
  40d5bc:	mov	w8, wzr
  40d5c0:	mov	w0, w8
  40d5c4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40d5c8:	add	x1, x1, #0xc4d
  40d5cc:	ldr	x2, [sp, #8]
  40d5d0:	mov	w3, #0x219                 	// #537
  40d5d4:	adrp	x4, 440000 <on_brightness_writer_exit+0x15c>
  40d5d8:	add	x4, x4, #0xc04
  40d5dc:	bl	406c68 <log_assert_failed_realm@plt>
  40d5e0:	ldr	x0, [sp, #16]
  40d5e4:	ldur	x1, [x29, #-16]
  40d5e8:	bl	411f50 <manager_process_seat_device>
  40d5ec:	mov	w8, wzr
  40d5f0:	mov	w0, w8
  40d5f4:	ldp	x29, x30, [sp, #48]
  40d5f8:	add	sp, sp, #0x40
  40d5fc:	ret

000000000040d600 <manager_dispatch_device_udev>:
  40d600:	sub	sp, sp, #0x40
  40d604:	stp	x29, x30, [sp, #48]
  40d608:	add	x29, sp, #0x30
  40d60c:	adrp	x8, 440000 <on_brightness_writer_exit+0x15c>
  40d610:	add	x8, x8, #0x3f0
  40d614:	add	x8, x8, #0x3
  40d618:	stur	x0, [x29, #-8]
  40d61c:	stur	x1, [x29, #-16]
  40d620:	str	x2, [sp, #24]
  40d624:	ldr	x9, [sp, #24]
  40d628:	str	x9, [sp, #16]
  40d62c:	str	x8, [sp, #8]
  40d630:	ldr	x8, [sp, #16]
  40d634:	cmp	x8, #0x0
  40d638:	cset	w9, ne  // ne = any
  40d63c:	mov	w10, #0x1                   	// #1
  40d640:	eor	w9, w9, #0x1
  40d644:	eor	w9, w9, w10
  40d648:	eor	w9, w9, w10
  40d64c:	and	w9, w9, #0x1
  40d650:	mov	w0, w9
  40d654:	sxtw	x8, w0
  40d658:	cbz	x8, 40d680 <manager_dispatch_device_udev+0x80>
  40d65c:	mov	w8, wzr
  40d660:	mov	w0, w8
  40d664:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40d668:	add	x1, x1, #0x5ef
  40d66c:	ldr	x2, [sp, #8]
  40d670:	mov	w3, #0x222                 	// #546
  40d674:	adrp	x4, 440000 <on_brightness_writer_exit+0x15c>
  40d678:	add	x4, x4, #0xc54
  40d67c:	bl	406c68 <log_assert_failed_realm@plt>
  40d680:	ldur	x8, [x29, #-16]
  40d684:	cmp	x8, #0x0
  40d688:	cset	w9, ne  // ne = any
  40d68c:	mov	w10, #0x1                   	// #1
  40d690:	eor	w9, w9, #0x1
  40d694:	eor	w9, w9, w10
  40d698:	eor	w9, w9, w10
  40d69c:	and	w9, w9, #0x1
  40d6a0:	mov	w0, w9
  40d6a4:	sxtw	x8, w0
  40d6a8:	cbz	x8, 40d6d0 <manager_dispatch_device_udev+0xd0>
  40d6ac:	mov	w8, wzr
  40d6b0:	mov	w0, w8
  40d6b4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40d6b8:	add	x1, x1, #0xc4d
  40d6bc:	ldr	x2, [sp, #8]
  40d6c0:	mov	w3, #0x223                 	// #547
  40d6c4:	adrp	x4, 440000 <on_brightness_writer_exit+0x15c>
  40d6c8:	add	x4, x4, #0xc54
  40d6cc:	bl	406c68 <log_assert_failed_realm@plt>
  40d6d0:	ldr	x0, [sp, #16]
  40d6d4:	ldur	x1, [x29, #-16]
  40d6d8:	bl	411f50 <manager_process_seat_device>
  40d6dc:	mov	w8, wzr
  40d6e0:	mov	w0, w8
  40d6e4:	ldp	x29, x30, [sp, #48]
  40d6e8:	add	sp, sp, #0x40
  40d6ec:	ret

000000000040d6f0 <manager_dispatch_button_udev>:
  40d6f0:	sub	sp, sp, #0x40
  40d6f4:	stp	x29, x30, [sp, #48]
  40d6f8:	add	x29, sp, #0x30
  40d6fc:	adrp	x8, 440000 <on_brightness_writer_exit+0x15c>
  40d700:	add	x8, x8, #0x3f0
  40d704:	add	x8, x8, #0x3
  40d708:	stur	x0, [x29, #-8]
  40d70c:	stur	x1, [x29, #-16]
  40d710:	str	x2, [sp, #24]
  40d714:	ldr	x9, [sp, #24]
  40d718:	str	x9, [sp, #16]
  40d71c:	str	x8, [sp, #8]
  40d720:	ldr	x8, [sp, #16]
  40d724:	cmp	x8, #0x0
  40d728:	cset	w9, ne  // ne = any
  40d72c:	mov	w10, #0x1                   	// #1
  40d730:	eor	w9, w9, #0x1
  40d734:	eor	w9, w9, w10
  40d738:	eor	w9, w9, w10
  40d73c:	and	w9, w9, #0x1
  40d740:	mov	w0, w9
  40d744:	sxtw	x8, w0
  40d748:	cbz	x8, 40d770 <manager_dispatch_button_udev+0x80>
  40d74c:	mov	w8, wzr
  40d750:	mov	w0, w8
  40d754:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40d758:	add	x1, x1, #0x5ef
  40d75c:	ldr	x2, [sp, #8]
  40d760:	mov	w3, #0x23e                 	// #574
  40d764:	adrp	x4, 440000 <on_brightness_writer_exit+0x15c>
  40d768:	add	x4, x4, #0xc9f
  40d76c:	bl	406c68 <log_assert_failed_realm@plt>
  40d770:	ldur	x8, [x29, #-16]
  40d774:	cmp	x8, #0x0
  40d778:	cset	w9, ne  // ne = any
  40d77c:	mov	w10, #0x1                   	// #1
  40d780:	eor	w9, w9, #0x1
  40d784:	eor	w9, w9, w10
  40d788:	eor	w9, w9, w10
  40d78c:	and	w9, w9, #0x1
  40d790:	mov	w0, w9
  40d794:	sxtw	x8, w0
  40d798:	cbz	x8, 40d7c0 <manager_dispatch_button_udev+0xd0>
  40d79c:	mov	w8, wzr
  40d7a0:	mov	w0, w8
  40d7a4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40d7a8:	add	x1, x1, #0xc4d
  40d7ac:	ldr	x2, [sp, #8]
  40d7b0:	mov	w3, #0x23f                 	// #575
  40d7b4:	adrp	x4, 440000 <on_brightness_writer_exit+0x15c>
  40d7b8:	add	x4, x4, #0xc9f
  40d7bc:	bl	406c68 <log_assert_failed_realm@plt>
  40d7c0:	ldr	x0, [sp, #16]
  40d7c4:	ldur	x1, [x29, #-16]
  40d7c8:	bl	4122b8 <manager_process_button_device>
  40d7cc:	mov	w8, wzr
  40d7d0:	mov	w0, w8
  40d7d4:	ldp	x29, x30, [sp, #48]
  40d7d8:	add	sp, sp, #0x40
  40d7dc:	ret

000000000040d7e0 <manager_dispatch_vcsa_udev>:
  40d7e0:	sub	sp, sp, #0x40
  40d7e4:	stp	x29, x30, [sp, #48]
  40d7e8:	add	x29, sp, #0x30
  40d7ec:	adrp	x8, 440000 <on_brightness_writer_exit+0x15c>
  40d7f0:	add	x8, x8, #0x3f0
  40d7f4:	add	x8, x8, #0x3
  40d7f8:	stur	x0, [x29, #-8]
  40d7fc:	stur	x1, [x29, #-16]
  40d800:	str	x2, [sp, #24]
  40d804:	ldr	x9, [sp, #24]
  40d808:	str	x9, [sp, #16]
  40d80c:	str	x8, [sp]
  40d810:	ldr	x8, [sp, #16]
  40d814:	cmp	x8, #0x0
  40d818:	cset	w9, ne  // ne = any
  40d81c:	mov	w10, #0x1                   	// #1
  40d820:	eor	w9, w9, #0x1
  40d824:	eor	w9, w9, w10
  40d828:	eor	w9, w9, w10
  40d82c:	and	w9, w9, #0x1
  40d830:	mov	w0, w9
  40d834:	sxtw	x8, w0
  40d838:	cbz	x8, 40d860 <manager_dispatch_vcsa_udev+0x80>
  40d83c:	mov	w8, wzr
  40d840:	mov	w0, w8
  40d844:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40d848:	add	x1, x1, #0x5ef
  40d84c:	ldr	x2, [sp]
  40d850:	mov	w3, #0x22d                 	// #557
  40d854:	adrp	x4, 440000 <on_brightness_writer_exit+0x15c>
  40d858:	add	x4, x4, #0xcea
  40d85c:	bl	406c68 <log_assert_failed_realm@plt>
  40d860:	ldur	x8, [x29, #-16]
  40d864:	cmp	x8, #0x0
  40d868:	cset	w9, ne  // ne = any
  40d86c:	mov	w10, #0x1                   	// #1
  40d870:	eor	w9, w9, #0x1
  40d874:	eor	w9, w9, w10
  40d878:	eor	w9, w9, w10
  40d87c:	and	w9, w9, #0x1
  40d880:	mov	w0, w9
  40d884:	sxtw	x8, w0
  40d888:	cbz	x8, 40d8b0 <manager_dispatch_vcsa_udev+0xd0>
  40d88c:	mov	w8, wzr
  40d890:	mov	w0, w8
  40d894:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40d898:	add	x1, x1, #0xc4d
  40d89c:	ldr	x2, [sp]
  40d8a0:	mov	w3, #0x22e                 	// #558
  40d8a4:	adrp	x4, 440000 <on_brightness_writer_exit+0x15c>
  40d8a8:	add	x4, x4, #0xcea
  40d8ac:	bl	406c68 <log_assert_failed_realm@plt>
  40d8b0:	ldur	x0, [x29, #-16]
  40d8b4:	add	x1, sp, #0x8
  40d8b8:	bl	407088 <sd_device_get_sysname@plt>
  40d8bc:	cmp	w0, #0x0
  40d8c0:	cset	w8, lt  // lt = tstop
  40d8c4:	tbnz	w8, #0, 40d8fc <manager_dispatch_vcsa_udev+0x11c>
  40d8c8:	ldr	x0, [sp, #8]
  40d8cc:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40d8d0:	add	x1, x1, #0xd33
  40d8d4:	bl	40d910 <startswith>
  40d8d8:	cbz	x0, 40d8fc <manager_dispatch_vcsa_udev+0x11c>
  40d8dc:	ldur	x0, [x29, #-16]
  40d8e0:	mov	w1, #0x1                   	// #1
  40d8e4:	bl	407098 <device_for_action@plt>
  40d8e8:	tbnz	w0, #0, 40d8f0 <manager_dispatch_vcsa_udev+0x110>
  40d8ec:	b	40d8fc <manager_dispatch_vcsa_udev+0x11c>
  40d8f0:	ldr	x8, [sp, #16]
  40d8f4:	ldr	x0, [x8, #168]
  40d8f8:	bl	429d90 <seat_preallocate_vts>
  40d8fc:	mov	w8, wzr
  40d900:	mov	w0, w8
  40d904:	ldp	x29, x30, [sp, #48]
  40d908:	add	sp, sp, #0x40
  40d90c:	ret

000000000040d910 <startswith>:
  40d910:	sub	sp, sp, #0x30
  40d914:	stp	x29, x30, [sp, #32]
  40d918:	add	x29, sp, #0x20
  40d91c:	str	x0, [sp, #16]
  40d920:	str	x1, [sp, #8]
  40d924:	ldr	x0, [sp, #8]
  40d928:	bl	4070a8 <strlen@plt>
  40d92c:	str	x0, [sp]
  40d930:	ldr	x0, [sp, #16]
  40d934:	ldr	x1, [sp, #8]
  40d938:	ldr	x2, [sp]
  40d93c:	bl	4070b8 <strncmp@plt>
  40d940:	cbnz	w0, 40d958 <startswith+0x48>
  40d944:	ldr	x8, [sp, #16]
  40d948:	ldr	x9, [sp]
  40d94c:	add	x8, x8, x9
  40d950:	stur	x8, [x29, #-8]
  40d954:	b	40d960 <startswith+0x50>
  40d958:	mov	x8, xzr
  40d95c:	stur	x8, [x29, #-8]
  40d960:	ldur	x0, [x29, #-8]
  40d964:	ldp	x29, x30, [sp, #32]
  40d968:	add	sp, sp, #0x30
  40d96c:	ret

000000000040d970 <sd_device_enumerator_unrefp>:
  40d970:	sub	sp, sp, #0x20
  40d974:	stp	x29, x30, [sp, #16]
  40d978:	add	x29, sp, #0x10
  40d97c:	str	x0, [sp, #8]
  40d980:	ldr	x8, [sp, #8]
  40d984:	ldr	x8, [x8]
  40d988:	cbz	x8, 40d998 <sd_device_enumerator_unrefp+0x28>
  40d98c:	ldr	x8, [sp, #8]
  40d990:	ldr	x0, [x8]
  40d994:	bl	4070c8 <sd_device_enumerator_unref@plt>
  40d998:	ldp	x29, x30, [sp, #16]
  40d99c:	add	sp, sp, #0x20
  40d9a0:	ret

000000000040d9a4 <closedirp>:
  40d9a4:	sub	sp, sp, #0x20
  40d9a8:	stp	x29, x30, [sp, #16]
  40d9ac:	add	x29, sp, #0x10
  40d9b0:	str	x0, [sp, #8]
  40d9b4:	ldr	x8, [sp, #8]
  40d9b8:	ldr	x8, [x8]
  40d9bc:	cbz	x8, 40d9cc <closedirp+0x28>
  40d9c0:	ldr	x8, [sp, #8]
  40d9c4:	ldr	x0, [x8]
  40d9c8:	bl	4070d8 <closedir@plt>
  40d9cc:	ldp	x29, x30, [sp, #16]
  40d9d0:	add	sp, sp, #0x20
  40d9d4:	ret

000000000040d9d8 <hashmap_get>:
  40d9d8:	sub	sp, sp, #0x20
  40d9dc:	stp	x29, x30, [sp, #16]
  40d9e0:	add	x29, sp, #0x10
  40d9e4:	str	x0, [sp, #8]
  40d9e8:	str	x1, [sp]
  40d9ec:	ldr	x0, [sp, #8]
  40d9f0:	ldr	x1, [sp]
  40d9f4:	bl	4070e8 <internal_hashmap_get@plt>
  40d9f8:	ldp	x29, x30, [sp, #16]
  40d9fc:	add	sp, sp, #0x20
  40da00:	ret

000000000040da04 <manager_enumerate_linger_users>:
  40da04:	sub	sp, sp, #0x70
  40da08:	stp	x29, x30, [sp, #96]
  40da0c:	add	x29, sp, #0x60
  40da10:	mov	x8, xzr
  40da14:	adrp	x9, 440000 <on_brightness_writer_exit+0x15c>
  40da18:	add	x9, x9, #0x3f0
  40da1c:	add	x9, x9, #0x3
  40da20:	stur	x0, [x29, #-16]
  40da24:	stur	x8, [x29, #-24]
  40da28:	stur	wzr, [x29, #-36]
  40da2c:	str	x9, [sp, #8]
  40da30:	ldur	x8, [x29, #-16]
  40da34:	cmp	x8, #0x0
  40da38:	cset	w9, ne  // ne = any
  40da3c:	mov	w10, #0x1                   	// #1
  40da40:	eor	w9, w9, #0x1
  40da44:	eor	w9, w9, w10
  40da48:	eor	w9, w9, w10
  40da4c:	and	w9, w9, #0x1
  40da50:	mov	w0, w9
  40da54:	sxtw	x8, w0
  40da58:	cbz	x8, 40da80 <manager_enumerate_linger_users+0x7c>
  40da5c:	mov	w8, wzr
  40da60:	mov	w0, w8
  40da64:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40da68:	add	x1, x1, #0x5ef
  40da6c:	ldr	x2, [sp, #8]
  40da70:	mov	w3, #0x118                 	// #280
  40da74:	adrp	x4, 441000 <_fini+0xc30>
  40da78:	add	x4, x4, #0x2b4
  40da7c:	bl	406c68 <log_assert_failed_realm@plt>
  40da80:	adrp	x0, 441000 <_fini+0xc30>
  40da84:	add	x0, x0, #0x2e2
  40da88:	bl	406f88 <opendir@plt>
  40da8c:	stur	x0, [x29, #-24]
  40da90:	ldur	x8, [x29, #-24]
  40da94:	cbnz	x8, 40db4c <manager_enumerate_linger_users+0x148>
  40da98:	bl	406e08 <__errno_location@plt>
  40da9c:	ldr	w8, [x0]
  40daa0:	cmp	w8, #0x2
  40daa4:	b.ne	40dab8 <manager_enumerate_linger_users+0xb4>  // b.any
  40daa8:	stur	wzr, [x29, #-4]
  40daac:	mov	w8, #0x1                   	// #1
  40dab0:	stur	w8, [x29, #-40]
  40dab4:	b	40dcb8 <manager_enumerate_linger_users+0x2b4>
  40dab8:	mov	w8, #0x3                   	// #3
  40dabc:	stur	w8, [x29, #-44]
  40dac0:	bl	406e08 <__errno_location@plt>
  40dac4:	ldr	w8, [x0]
  40dac8:	str	w8, [sp, #48]
  40dacc:	str	wzr, [sp, #44]
  40dad0:	ldr	w0, [sp, #44]
  40dad4:	bl	406c08 <log_get_max_level_realm@plt>
  40dad8:	ldur	w8, [x29, #-44]
  40dadc:	and	w8, w8, #0x7
  40dae0:	cmp	w0, w8
  40dae4:	b.lt	40db1c <manager_enumerate_linger_users+0x118>  // b.tstop
  40dae8:	ldr	w8, [sp, #44]
  40daec:	ldur	w9, [x29, #-44]
  40daf0:	orr	w0, w9, w8, lsl #10
  40daf4:	ldr	w1, [sp, #48]
  40daf8:	ldr	x2, [sp, #8]
  40dafc:	mov	w3, #0x11f                 	// #287
  40db00:	adrp	x4, 441000 <_fini+0xc30>
  40db04:	add	x4, x4, #0x2fa
  40db08:	adrp	x5, 441000 <_fini+0xc30>
  40db0c:	add	x5, x5, #0x319
  40db10:	bl	406c18 <log_internal_realm@plt>
  40db14:	str	w0, [sp, #4]
  40db18:	b	40db30 <manager_enumerate_linger_users+0x12c>
  40db1c:	ldr	w0, [sp, #48]
  40db20:	bl	406c28 <abs@plt>
  40db24:	mov	w8, wzr
  40db28:	subs	w8, w8, w0, uxtb
  40db2c:	str	w8, [sp, #4]
  40db30:	ldr	w8, [sp, #4]
  40db34:	str	w8, [sp, #40]
  40db38:	ldr	w8, [sp, #40]
  40db3c:	stur	w8, [x29, #-4]
  40db40:	mov	w8, #0x1                   	// #1
  40db44:	stur	w8, [x29, #-40]
  40db48:	b	40dcb8 <manager_enumerate_linger_users+0x2b4>
  40db4c:	bl	406e08 <__errno_location@plt>
  40db50:	str	wzr, [x0]
  40db54:	ldur	x0, [x29, #-24]
  40db58:	bl	406f98 <readdir64@plt>
  40db5c:	stur	x0, [x29, #-32]
  40db60:	ldur	x8, [x29, #-32]
  40db64:	cbnz	x8, 40dba0 <manager_enumerate_linger_users+0x19c>
  40db68:	bl	406e08 <__errno_location@plt>
  40db6c:	ldr	w8, [x0]
  40db70:	cmp	w8, #0x0
  40db74:	cset	w8, le
  40db78:	tbnz	w8, #0, 40db9c <manager_enumerate_linger_users+0x198>
  40db7c:	bl	406e08 <__errno_location@plt>
  40db80:	ldr	w8, [x0]
  40db84:	mov	w9, wzr
  40db88:	subs	w8, w9, w8
  40db8c:	stur	w8, [x29, #-4]
  40db90:	mov	w8, #0x1                   	// #1
  40db94:	stur	w8, [x29, #-40]
  40db98:	b	40dcb8 <manager_enumerate_linger_users+0x2b4>
  40db9c:	b	40dca8 <manager_enumerate_linger_users+0x2a4>
  40dba0:	ldur	x8, [x29, #-32]
  40dba4:	add	x0, x8, #0x13
  40dba8:	bl	406fa8 <hidden_or_backup_file@plt>
  40dbac:	tbnz	w0, #0, 40dbb4 <manager_enumerate_linger_users+0x1b0>
  40dbb0:	b	40dbb8 <manager_enumerate_linger_users+0x1b4>
  40dbb4:	b	40dc90 <manager_enumerate_linger_users+0x28c>
  40dbb8:	ldur	x0, [x29, #-24]
  40dbbc:	ldur	x1, [x29, #-32]
  40dbc0:	bl	4070f8 <dirent_ensure_type@plt>
  40dbc4:	ldur	x8, [x29, #-32]
  40dbc8:	mov	x0, x8
  40dbcc:	bl	406fb8 <dirent_is_file@plt>
  40dbd0:	tbnz	w0, #0, 40dbd8 <manager_enumerate_linger_users+0x1d4>
  40dbd4:	b	40dc90 <manager_enumerate_linger_users+0x28c>
  40dbd8:	ldur	x0, [x29, #-16]
  40dbdc:	ldur	x8, [x29, #-32]
  40dbe0:	add	x1, x8, #0x13
  40dbe4:	mov	x8, xzr
  40dbe8:	mov	x2, x8
  40dbec:	bl	411a60 <manager_add_user_by_name>
  40dbf0:	str	w0, [sp, #36]
  40dbf4:	ldr	w9, [sp, #36]
  40dbf8:	cmp	w9, #0x0
  40dbfc:	cset	w9, ge  // ge = tcont
  40dc00:	tbnz	w9, #0, 40dc90 <manager_enumerate_linger_users+0x28c>
  40dc04:	mov	w8, #0x4                   	// #4
  40dc08:	str	w8, [sp, #32]
  40dc0c:	ldr	w8, [sp, #36]
  40dc10:	str	w8, [sp, #28]
  40dc14:	str	wzr, [sp, #24]
  40dc18:	ldr	w0, [sp, #24]
  40dc1c:	bl	406c08 <log_get_max_level_realm@plt>
  40dc20:	ldr	w8, [sp, #32]
  40dc24:	and	w8, w8, #0x7
  40dc28:	cmp	w0, w8
  40dc2c:	b.lt	40dc6c <manager_enumerate_linger_users+0x268>  // b.tstop
  40dc30:	ldr	w8, [sp, #24]
  40dc34:	ldr	w9, [sp, #32]
  40dc38:	orr	w0, w9, w8, lsl #10
  40dc3c:	ldr	w1, [sp, #28]
  40dc40:	ldur	x10, [x29, #-32]
  40dc44:	add	x6, x10, #0x13
  40dc48:	ldr	x2, [sp, #8]
  40dc4c:	mov	w3, #0x12b                 	// #299
  40dc50:	adrp	x4, 441000 <_fini+0xc30>
  40dc54:	add	x4, x4, #0x2fa
  40dc58:	adrp	x5, 441000 <_fini+0xc30>
  40dc5c:	add	x5, x5, #0x345
  40dc60:	bl	406c18 <log_internal_realm@plt>
  40dc64:	str	w0, [sp]
  40dc68:	b	40dc80 <manager_enumerate_linger_users+0x27c>
  40dc6c:	ldr	w0, [sp, #28]
  40dc70:	bl	406c28 <abs@plt>
  40dc74:	mov	w8, wzr
  40dc78:	subs	w8, w8, w0, uxtb
  40dc7c:	str	w8, [sp]
  40dc80:	ldr	w8, [sp]
  40dc84:	str	w8, [sp, #20]
  40dc88:	ldr	w8, [sp, #20]
  40dc8c:	stur	w8, [x29, #-36]
  40dc90:	bl	406e08 <__errno_location@plt>
  40dc94:	str	wzr, [x0]
  40dc98:	ldur	x0, [x29, #-24]
  40dc9c:	bl	406f98 <readdir64@plt>
  40dca0:	stur	x0, [x29, #-32]
  40dca4:	b	40db60 <manager_enumerate_linger_users+0x15c>
  40dca8:	ldur	w8, [x29, #-36]
  40dcac:	stur	w8, [x29, #-4]
  40dcb0:	mov	w8, #0x1                   	// #1
  40dcb4:	stur	w8, [x29, #-40]
  40dcb8:	sub	x0, x29, #0x18
  40dcbc:	bl	40d9a4 <closedirp>
  40dcc0:	ldur	w0, [x29, #-4]
  40dcc4:	ldp	x29, x30, [sp, #96]
  40dcc8:	add	sp, sp, #0x70
  40dccc:	ret

000000000040dcd0 <manager_attach_fds>:
  40dcd0:	sub	sp, sp, #0x60
  40dcd4:	stp	x29, x30, [sp, #80]
  40dcd8:	add	x29, sp, #0x50
  40dcdc:	mov	x8, xzr
  40dce0:	mov	w9, #0x1                   	// #1
  40dce4:	adrp	x10, 440000 <on_brightness_writer_exit+0x15c>
  40dce8:	add	x10, x10, #0x3f0
  40dcec:	add	x2, x10, #0x3
  40dcf0:	sub	x1, x29, #0x18
  40dcf4:	stur	x0, [x29, #-16]
  40dcf8:	stur	x8, [x29, #-24]
  40dcfc:	mov	w0, w9
  40dd00:	str	x2, [sp, #16]
  40dd04:	bl	407108 <sd_listen_fds_with_names@plt>
  40dd08:	stur	w0, [x29, #-28]
  40dd0c:	ldur	w9, [x29, #-28]
  40dd10:	cmp	w9, #0x0
  40dd14:	cset	w9, ge  // ge = tcont
  40dd18:	tbnz	w9, #0, 40ddac <manager_attach_fds+0xdc>
  40dd1c:	mov	w8, #0x4                   	// #4
  40dd20:	stur	w8, [x29, #-32]
  40dd24:	ldur	w8, [x29, #-28]
  40dd28:	stur	w8, [x29, #-36]
  40dd2c:	str	wzr, [sp, #40]
  40dd30:	ldr	w0, [sp, #40]
  40dd34:	bl	406c08 <log_get_max_level_realm@plt>
  40dd38:	ldur	w8, [x29, #-32]
  40dd3c:	and	w8, w8, #0x7
  40dd40:	cmp	w0, w8
  40dd44:	b.lt	40dd7c <manager_attach_fds+0xac>  // b.tstop
  40dd48:	ldr	w8, [sp, #40]
  40dd4c:	ldur	w9, [x29, #-32]
  40dd50:	orr	w0, w9, w8, lsl #10
  40dd54:	ldur	w1, [x29, #-36]
  40dd58:	ldr	x2, [sp, #16]
  40dd5c:	mov	w3, #0x1b1                 	// #433
  40dd60:	adrp	x4, 441000 <_fini+0xc30>
  40dd64:	add	x4, x4, #0x414
  40dd68:	adrp	x5, 441000 <_fini+0xc30>
  40dd6c:	add	x5, x5, #0x427
  40dd70:	bl	406c18 <log_internal_realm@plt>
  40dd74:	str	w0, [sp, #12]
  40dd78:	b	40dd90 <manager_attach_fds+0xc0>
  40dd7c:	ldur	w0, [x29, #-36]
  40dd80:	bl	406c28 <abs@plt>
  40dd84:	mov	w8, wzr
  40dd88:	subs	w8, w8, w0, uxtb
  40dd8c:	str	w8, [sp, #12]
  40dd90:	ldr	w8, [sp, #12]
  40dd94:	str	w8, [sp, #36]
  40dd98:	ldr	w8, [sp, #36]
  40dd9c:	stur	w8, [x29, #-4]
  40dda0:	mov	w8, #0x1                   	// #1
  40dda4:	str	w8, [sp, #32]
  40dda8:	b	40de68 <manager_attach_fds+0x198>
  40ddac:	ldur	w8, [x29, #-28]
  40ddb0:	cbnz	w8, 40ddc4 <manager_attach_fds+0xf4>
  40ddb4:	stur	wzr, [x29, #-4]
  40ddb8:	mov	w8, #0x1                   	// #1
  40ddbc:	str	w8, [sp, #32]
  40ddc0:	b	40de68 <manager_attach_fds+0x198>
  40ddc4:	str	wzr, [sp, #28]
  40ddc8:	ldr	w8, [sp, #28]
  40ddcc:	ldur	w9, [x29, #-28]
  40ddd0:	cmp	w8, w9
  40ddd4:	b.ge	40de5c <manager_attach_fds+0x18c>  // b.tcont
  40ddd8:	ldr	w8, [sp, #28]
  40dddc:	add	w8, w8, #0x3
  40dde0:	str	w8, [sp, #24]
  40dde4:	ldur	x0, [x29, #-16]
  40dde8:	ldur	x9, [x29, #-24]
  40ddec:	ldrsw	x10, [sp, #28]
  40ddf0:	mov	x11, #0x8                   	// #8
  40ddf4:	mul	x10, x11, x10
  40ddf8:	add	x9, x9, x10
  40ddfc:	ldr	x1, [x9]
  40de00:	ldr	w2, [sp, #24]
  40de04:	bl	40deb4 <deliver_fd>
  40de08:	cmp	w0, #0x0
  40de0c:	cset	w8, lt  // lt = tstop
  40de10:	tbnz	w8, #0, 40de18 <manager_attach_fds+0x148>
  40de14:	b	40de4c <manager_attach_fds+0x17c>
  40de18:	ldr	w0, [sp, #24]
  40de1c:	bl	406d38 <safe_close@plt>
  40de20:	ldur	x8, [x29, #-24]
  40de24:	ldrsw	x9, [sp, #28]
  40de28:	mov	x10, #0x8                   	// #8
  40de2c:	mul	x9, x10, x9
  40de30:	add	x8, x8, x9
  40de34:	ldr	x2, [x8]
  40de38:	mov	w11, wzr
  40de3c:	mov	w0, w11
  40de40:	adrp	x1, 441000 <_fini+0xc30>
  40de44:	add	x1, x1, #0x44c
  40de48:	bl	407118 <sd_notifyf@plt>
  40de4c:	ldr	w8, [sp, #28]
  40de50:	add	w8, w8, #0x1
  40de54:	str	w8, [sp, #28]
  40de58:	b	40ddc8 <manager_attach_fds+0xf8>
  40de5c:	stur	wzr, [x29, #-4]
  40de60:	mov	w8, #0x1                   	// #1
  40de64:	str	w8, [sp, #32]
  40de68:	sub	x0, x29, #0x18
  40de6c:	bl	40de80 <strv_freep>
  40de70:	ldur	w0, [x29, #-4]
  40de74:	ldp	x29, x30, [sp, #80]
  40de78:	add	sp, sp, #0x60
  40de7c:	ret

000000000040de80 <strv_freep>:
  40de80:	sub	sp, sp, #0x20
  40de84:	stp	x29, x30, [sp, #16]
  40de88:	add	x29, sp, #0x10
  40de8c:	str	x0, [sp, #8]
  40de90:	ldr	x8, [sp, #8]
  40de94:	ldr	x8, [x8]
  40de98:	cbz	x8, 40dea8 <strv_freep+0x28>
  40de9c:	ldr	x8, [sp, #8]
  40dea0:	ldr	x0, [x8]
  40dea4:	bl	406d98 <strv_free@plt>
  40dea8:	ldp	x29, x30, [sp, #16]
  40deac:	add	sp, sp, #0x20
  40deb0:	ret

000000000040deb4 <deliver_fd>:
  40deb4:	sub	sp, sp, #0x1a0
  40deb8:	stp	x29, x30, [sp, #384]
  40debc:	str	x28, [sp, #400]
  40dec0:	add	x29, sp, #0x180
  40dec4:	mov	x8, xzr
  40dec8:	adrp	x9, 440000 <on_brightness_writer_exit+0x15c>
  40decc:	add	x9, x9, #0x3f0
  40ded0:	add	x9, x9, #0x3
  40ded4:	adrp	x10, 441000 <_fini+0xc30>
  40ded8:	add	x10, x10, #0x49b
  40dedc:	stur	x0, [x29, #-16]
  40dee0:	stur	x1, [x29, #-24]
  40dee4:	stur	w2, [x29, #-28]
  40dee8:	stur	x8, [x29, #-40]
  40deec:	str	x9, [sp, #80]
  40def0:	str	x10, [sp, #72]
  40def4:	ldur	x8, [x29, #-16]
  40def8:	cmp	x8, #0x0
  40defc:	cset	w9, ne  // ne = any
  40df00:	mov	w10, #0x1                   	// #1
  40df04:	eor	w9, w9, #0x1
  40df08:	eor	w9, w9, w10
  40df0c:	eor	w9, w9, w10
  40df10:	and	w9, w9, #0x1
  40df14:	mov	w0, w9
  40df18:	sxtw	x8, w0
  40df1c:	cbz	x8, 40df44 <deliver_fd+0x90>
  40df20:	mov	w8, wzr
  40df24:	mov	w0, w8
  40df28:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40df2c:	add	x1, x1, #0x5ef
  40df30:	ldr	x2, [sp, #80]
  40df34:	mov	w3, #0x185                 	// #389
  40df38:	adrp	x4, 441000 <_fini+0xc30>
  40df3c:	add	x4, x4, #0x466
  40df40:	bl	406c68 <log_assert_failed_realm@plt>
  40df44:	ldur	w8, [x29, #-28]
  40df48:	cmp	w8, #0x0
  40df4c:	cset	w8, ge  // ge = tcont
  40df50:	mov	w9, #0x1                   	// #1
  40df54:	eor	w8, w8, #0x1
  40df58:	eor	w8, w8, w9
  40df5c:	eor	w8, w8, w9
  40df60:	and	w8, w8, #0x1
  40df64:	mov	w0, w8
  40df68:	sxtw	x10, w0
  40df6c:	cbz	x10, 40df94 <deliver_fd+0xe0>
  40df70:	mov	w8, wzr
  40df74:	mov	w0, w8
  40df78:	adrp	x1, 441000 <_fini+0xc30>
  40df7c:	add	x1, x1, #0x493
  40df80:	ldr	x2, [sp, #80]
  40df84:	mov	w3, #0x186                 	// #390
  40df88:	adrp	x4, 441000 <_fini+0xc30>
  40df8c:	add	x4, x4, #0x466
  40df90:	bl	406c68 <log_assert_failed_realm@plt>
  40df94:	ldur	x0, [x29, #-24]
  40df98:	sub	x1, x29, #0x28
  40df9c:	add	x2, sp, #0xc0
  40dfa0:	bl	40e480 <parse_fdname>
  40dfa4:	str	w0, [sp, #188]
  40dfa8:	ldr	w8, [sp, #188]
  40dfac:	cmp	w8, #0x0
  40dfb0:	cset	w8, ge  // ge = tcont
  40dfb4:	tbnz	w8, #0, 40e048 <deliver_fd+0x194>
  40dfb8:	mov	w8, #0x7                   	// #7
  40dfbc:	str	w8, [sp, #184]
  40dfc0:	ldr	w8, [sp, #188]
  40dfc4:	str	w8, [sp, #180]
  40dfc8:	str	wzr, [sp, #176]
  40dfcc:	ldr	w0, [sp, #176]
  40dfd0:	bl	406c08 <log_get_max_level_realm@plt>
  40dfd4:	ldr	w8, [sp, #184]
  40dfd8:	and	w8, w8, #0x7
  40dfdc:	cmp	w0, w8
  40dfe0:	b.lt	40e018 <deliver_fd+0x164>  // b.tstop
  40dfe4:	ldr	w8, [sp, #176]
  40dfe8:	ldr	w9, [sp, #184]
  40dfec:	orr	w0, w9, w8, lsl #10
  40dff0:	ldr	w1, [sp, #180]
  40dff4:	ldur	x6, [x29, #-24]
  40dff8:	ldr	x2, [sp, #80]
  40dffc:	mov	w3, #0x18a                 	// #394
  40e000:	ldr	x4, [sp, #72]
  40e004:	adrp	x5, 441000 <_fini+0xc30>
  40e008:	add	x5, x5, #0x4a6
  40e00c:	bl	406c18 <log_internal_realm@plt>
  40e010:	str	w0, [sp, #68]
  40e014:	b	40e02c <deliver_fd+0x178>
  40e018:	ldr	w0, [sp, #180]
  40e01c:	bl	406c28 <abs@plt>
  40e020:	mov	w8, wzr
  40e024:	subs	w8, w8, w0, uxtb
  40e028:	str	w8, [sp, #68]
  40e02c:	ldr	w8, [sp, #68]
  40e030:	str	w8, [sp, #172]
  40e034:	ldr	w8, [sp, #172]
  40e038:	stur	w8, [x29, #-4]
  40e03c:	mov	w8, #0x1                   	// #1
  40e040:	str	w8, [sp, #168]
  40e044:	b	40e43c <deliver_fd+0x588>
  40e048:	ldur	x8, [x29, #-16]
  40e04c:	ldr	x0, [x8, #32]
  40e050:	ldur	x1, [x29, #-40]
  40e054:	bl	40d9d8 <hashmap_get>
  40e058:	stur	x0, [x29, #-184]
  40e05c:	ldur	x8, [x29, #-184]
  40e060:	cbnz	x8, 40e0f8 <deliver_fd+0x244>
  40e064:	mov	w8, #0x7                   	// #7
  40e068:	str	w8, [sp, #164]
  40e06c:	mov	w8, #0x6                   	// #6
  40e070:	movk	w8, #0x4000, lsl #16
  40e074:	str	w8, [sp, #160]
  40e078:	str	wzr, [sp, #156]
  40e07c:	ldr	w0, [sp, #156]
  40e080:	bl	406c08 <log_get_max_level_realm@plt>
  40e084:	ldr	w8, [sp, #164]
  40e088:	and	w8, w8, #0x7
  40e08c:	cmp	w0, w8
  40e090:	b.lt	40e0c8 <deliver_fd+0x214>  // b.tstop
  40e094:	ldr	w8, [sp, #156]
  40e098:	ldr	w9, [sp, #164]
  40e09c:	orr	w0, w9, w8, lsl #10
  40e0a0:	ldr	w1, [sp, #160]
  40e0a4:	ldur	x6, [x29, #-40]
  40e0a8:	ldr	x2, [sp, #80]
  40e0ac:	mov	w3, #0x190                 	// #400
  40e0b0:	ldr	x4, [sp, #72]
  40e0b4:	adrp	x5, 441000 <_fini+0xc30>
  40e0b8:	add	x5, x5, #0x4c5
  40e0bc:	bl	406c18 <log_internal_realm@plt>
  40e0c0:	str	w0, [sp, #64]
  40e0c4:	b	40e0dc <deliver_fd+0x228>
  40e0c8:	ldr	w0, [sp, #160]
  40e0cc:	bl	406c28 <abs@plt>
  40e0d0:	mov	w8, wzr
  40e0d4:	subs	w8, w8, w0, uxtb
  40e0d8:	str	w8, [sp, #64]
  40e0dc:	ldr	w8, [sp, #64]
  40e0e0:	str	w8, [sp, #152]
  40e0e4:	ldr	w8, [sp, #152]
  40e0e8:	stur	w8, [x29, #-4]
  40e0ec:	mov	w8, #0x1                   	// #1
  40e0f0:	str	w8, [sp, #168]
  40e0f4:	b	40e43c <deliver_fd+0x588>
  40e0f8:	ldur	w0, [x29, #-28]
  40e0fc:	sub	x1, x29, #0xb0
  40e100:	bl	4403b0 <fstat64>
  40e104:	cmp	w0, #0x0
  40e108:	cset	w8, ge  // ge = tcont
  40e10c:	tbnz	w8, #0, 40e1a4 <deliver_fd+0x2f0>
  40e110:	mov	w8, #0x7                   	// #7
  40e114:	str	w8, [sp, #148]
  40e118:	bl	406e08 <__errno_location@plt>
  40e11c:	ldr	w8, [x0]
  40e120:	str	w8, [sp, #144]
  40e124:	str	wzr, [sp, #140]
  40e128:	ldr	w0, [sp, #140]
  40e12c:	bl	406c08 <log_get_max_level_realm@plt>
  40e130:	ldr	w8, [sp, #148]
  40e134:	and	w8, w8, #0x7
  40e138:	cmp	w0, w8
  40e13c:	b.lt	40e174 <deliver_fd+0x2c0>  // b.tstop
  40e140:	ldr	w8, [sp, #140]
  40e144:	ldr	w9, [sp, #148]
  40e148:	orr	w0, w9, w8, lsl #10
  40e14c:	ldr	w1, [sp, #144]
  40e150:	ldur	x6, [x29, #-40]
  40e154:	ldr	x2, [sp, #80]
  40e158:	mov	w3, #0x195                 	// #405
  40e15c:	ldr	x4, [sp, #72]
  40e160:	adrp	x5, 441000 <_fini+0xc30>
  40e164:	add	x5, x5, #0x4f1
  40e168:	bl	406c18 <log_internal_realm@plt>
  40e16c:	str	w0, [sp, #60]
  40e170:	b	40e188 <deliver_fd+0x2d4>
  40e174:	ldr	w0, [sp, #144]
  40e178:	bl	406c28 <abs@plt>
  40e17c:	mov	w8, wzr
  40e180:	subs	w8, w8, w0, uxtb
  40e184:	str	w8, [sp, #60]
  40e188:	ldr	w8, [sp, #60]
  40e18c:	str	w8, [sp, #136]
  40e190:	ldr	w8, [sp, #136]
  40e194:	stur	w8, [x29, #-4]
  40e198:	mov	w8, #0x1                   	// #1
  40e19c:	str	w8, [sp, #168]
  40e1a0:	b	40e43c <deliver_fd+0x588>
  40e1a4:	ldur	w8, [x29, #-160]
  40e1a8:	and	w8, w8, #0xf000
  40e1ac:	cmp	w8, #0x2, lsl #12
  40e1b0:	b.ne	40e1c4 <deliver_fd+0x310>  // b.any
  40e1b4:	ldur	x8, [x29, #-144]
  40e1b8:	ldr	x9, [sp, #192]
  40e1bc:	cmp	x8, x9
  40e1c0:	b.eq	40e254 <deliver_fd+0x3a0>  // b.none
  40e1c4:	mov	w8, #0x7                   	// #7
  40e1c8:	str	w8, [sp, #132]
  40e1cc:	mov	w8, #0x13                  	// #19
  40e1d0:	movk	w8, #0x4000, lsl #16
  40e1d4:	str	w8, [sp, #128]
  40e1d8:	str	wzr, [sp, #124]
  40e1dc:	ldr	w0, [sp, #124]
  40e1e0:	bl	406c08 <log_get_max_level_realm@plt>
  40e1e4:	ldr	w8, [sp, #132]
  40e1e8:	and	w8, w8, #0x7
  40e1ec:	cmp	w0, w8
  40e1f0:	b.lt	40e224 <deliver_fd+0x370>  // b.tstop
  40e1f4:	ldr	w8, [sp, #124]
  40e1f8:	ldr	w9, [sp, #132]
  40e1fc:	orr	w0, w9, w8, lsl #10
  40e200:	ldr	w1, [sp, #128]
  40e204:	ldr	x2, [sp, #80]
  40e208:	mov	w3, #0x198                 	// #408
  40e20c:	ldr	x4, [sp, #72]
  40e210:	adrp	x5, 441000 <_fini+0xc30>
  40e214:	add	x5, x5, #0x51d
  40e218:	bl	406c18 <log_internal_realm@plt>
  40e21c:	str	w0, [sp, #56]
  40e220:	b	40e238 <deliver_fd+0x384>
  40e224:	ldr	w0, [sp, #128]
  40e228:	bl	406c28 <abs@plt>
  40e22c:	mov	w8, wzr
  40e230:	subs	w8, w8, w0, uxtb
  40e234:	str	w8, [sp, #56]
  40e238:	ldr	w8, [sp, #56]
  40e23c:	str	w8, [sp, #120]
  40e240:	ldr	w8, [sp, #120]
  40e244:	stur	w8, [x29, #-4]
  40e248:	mov	w8, #0x1                   	// #1
  40e24c:	str	w8, [sp, #168]
  40e250:	b	40e43c <deliver_fd+0x588>
  40e254:	ldur	x8, [x29, #-184]
  40e258:	ldr	x0, [x8, #240]
  40e25c:	add	x1, sp, #0xc0
  40e260:	bl	40d9d8 <hashmap_get>
  40e264:	stur	x0, [x29, #-48]
  40e268:	ldur	x8, [x29, #-48]
  40e26c:	cbnz	x8, 40e34c <deliver_fd+0x498>
  40e270:	mov	w8, #0x4                   	// #4
  40e274:	str	w8, [sp, #116]
  40e278:	mov	w8, #0x13                  	// #19
  40e27c:	movk	w8, #0x4000, lsl #16
  40e280:	str	w8, [sp, #112]
  40e284:	str	wzr, [sp, #108]
  40e288:	ldr	w0, [sp, #108]
  40e28c:	bl	406c08 <log_get_max_level_realm@plt>
  40e290:	ldr	w8, [sp, #116]
  40e294:	and	w8, w8, #0x7
  40e298:	cmp	w0, w8
  40e29c:	b.lt	40e31c <deliver_fd+0x468>  // b.tstop
  40e2a0:	ldr	w8, [sp, #108]
  40e2a4:	ldr	w9, [sp, #116]
  40e2a8:	orr	w0, w9, w8, lsl #10
  40e2ac:	ldr	w1, [sp, #112]
  40e2b0:	ldr	x10, [sp, #192]
  40e2b4:	str	w0, [sp, #52]
  40e2b8:	mov	x0, x10
  40e2bc:	str	w1, [sp, #48]
  40e2c0:	bl	407128 <gnu_dev_major@plt>
  40e2c4:	ldr	x10, [sp, #192]
  40e2c8:	str	w0, [sp, #44]
  40e2cc:	mov	x0, x10
  40e2d0:	bl	407138 <gnu_dev_minor@plt>
  40e2d4:	ldur	x10, [x29, #-184]
  40e2d8:	ldr	x10, [x10, #8]
  40e2dc:	ldr	w8, [sp, #52]
  40e2e0:	str	w0, [sp, #40]
  40e2e4:	mov	w0, w8
  40e2e8:	ldr	w1, [sp, #48]
  40e2ec:	ldr	x2, [sp, #80]
  40e2f0:	mov	w3, #0x19f                 	// #415
  40e2f4:	ldr	x4, [sp, #72]
  40e2f8:	adrp	x5, 441000 <_fini+0xc30>
  40e2fc:	add	x5, x5, #0x55b
  40e300:	ldr	w6, [sp, #44]
  40e304:	ldr	w7, [sp, #40]
  40e308:	mov	x11, sp
  40e30c:	str	x10, [x11]
  40e310:	bl	406c18 <log_internal_realm@plt>
  40e314:	str	w0, [sp, #36]
  40e318:	b	40e330 <deliver_fd+0x47c>
  40e31c:	ldr	w0, [sp, #112]
  40e320:	bl	406c28 <abs@plt>
  40e324:	mov	w8, wzr
  40e328:	subs	w8, w8, w0, uxtb
  40e32c:	str	w8, [sp, #36]
  40e330:	ldr	w8, [sp, #36]
  40e334:	str	w8, [sp, #104]
  40e338:	ldr	w8, [sp, #104]
  40e33c:	stur	w8, [x29, #-4]
  40e340:	mov	w8, #0x1                   	// #1
  40e344:	str	w8, [sp, #168]
  40e348:	b	40e43c <deliver_fd+0x588>
  40e34c:	mov	w8, #0x7                   	// #7
  40e350:	str	w8, [sp, #100]
  40e354:	str	wzr, [sp, #96]
  40e358:	str	wzr, [sp, #92]
  40e35c:	ldr	w0, [sp, #92]
  40e360:	bl	406c08 <log_get_max_level_realm@plt>
  40e364:	ldr	w8, [sp, #100]
  40e368:	and	w8, w8, #0x7
  40e36c:	cmp	w0, w8
  40e370:	b.lt	40e3f0 <deliver_fd+0x53c>  // b.tstop
  40e374:	ldr	w8, [sp, #92]
  40e378:	ldr	w9, [sp, #100]
  40e37c:	orr	w0, w9, w8, lsl #10
  40e380:	ldr	w1, [sp, #96]
  40e384:	ldr	x10, [sp, #192]
  40e388:	str	w0, [sp, #32]
  40e38c:	mov	x0, x10
  40e390:	str	w1, [sp, #28]
  40e394:	bl	407128 <gnu_dev_major@plt>
  40e398:	ldr	x10, [sp, #192]
  40e39c:	str	w0, [sp, #24]
  40e3a0:	mov	x0, x10
  40e3a4:	bl	407138 <gnu_dev_minor@plt>
  40e3a8:	ldur	x10, [x29, #-184]
  40e3ac:	ldr	x10, [x10, #8]
  40e3b0:	ldr	w8, [sp, #32]
  40e3b4:	str	w0, [sp, #20]
  40e3b8:	mov	w0, w8
  40e3bc:	ldr	w1, [sp, #28]
  40e3c0:	ldr	x2, [sp, #80]
  40e3c4:	mov	w3, #0x1a2                 	// #418
  40e3c8:	ldr	x4, [sp, #72]
  40e3cc:	adrp	x5, 441000 <_fini+0xc30>
  40e3d0:	add	x5, x5, #0x593
  40e3d4:	ldr	w6, [sp, #24]
  40e3d8:	ldr	w7, [sp, #20]
  40e3dc:	mov	x11, sp
  40e3e0:	str	x10, [x11]
  40e3e4:	bl	406c18 <log_internal_realm@plt>
  40e3e8:	str	w0, [sp, #16]
  40e3ec:	b	40e404 <deliver_fd+0x550>
  40e3f0:	ldr	w0, [sp, #96]
  40e3f4:	bl	406c28 <abs@plt>
  40e3f8:	mov	w8, wzr
  40e3fc:	subs	w8, w8, w0, uxtb
  40e400:	str	w8, [sp, #16]
  40e404:	ldr	w8, [sp, #16]
  40e408:	str	w8, [sp, #88]
  40e40c:	ldur	x0, [x29, #-48]
  40e410:	ldur	w1, [x29, #-28]
  40e414:	ldur	x9, [x29, #-184]
  40e418:	ldrb	w8, [x9, #209]
  40e41c:	mov	w10, #0x3                   	// #3
  40e420:	lsr	w8, w8, w10
  40e424:	and	w8, w8, #0x1
  40e428:	and	w2, w8, #0x1
  40e42c:	bl	43172c <session_device_attach_fd>
  40e430:	stur	wzr, [x29, #-4]
  40e434:	mov	w8, #0x1                   	// #1
  40e438:	str	w8, [sp, #168]
  40e43c:	sub	x0, x29, #0x28
  40e440:	bl	40e458 <freep>
  40e444:	ldur	w0, [x29, #-4]
  40e448:	ldr	x28, [sp, #400]
  40e44c:	ldp	x29, x30, [sp, #384]
  40e450:	add	sp, sp, #0x1a0
  40e454:	ret

000000000040e458 <freep>:
  40e458:	sub	sp, sp, #0x20
  40e45c:	stp	x29, x30, [sp, #16]
  40e460:	add	x29, sp, #0x10
  40e464:	str	x0, [sp, #8]
  40e468:	ldr	x8, [sp, #8]
  40e46c:	ldr	x0, [x8]
  40e470:	bl	406da8 <free@plt>
  40e474:	ldp	x29, x30, [sp, #16]
  40e478:	add	sp, sp, #0x20
  40e47c:	ret

000000000040e480 <parse_fdname>:
  40e480:	sub	sp, sp, #0x60
  40e484:	stp	x29, x30, [sp, #80]
  40e488:	add	x29, sp, #0x50
  40e48c:	mov	x8, xzr
  40e490:	adrp	x9, 441000 <_fini+0xc30>
  40e494:	add	x9, x9, #0x5c9
  40e498:	stur	x0, [x29, #-16]
  40e49c:	stur	x1, [x29, #-24]
  40e4a0:	stur	x2, [x29, #-32]
  40e4a4:	str	x8, [sp, #40]
  40e4a8:	str	x8, [sp, #32]
  40e4ac:	ldur	x0, [x29, #-16]
  40e4b0:	mov	x1, x9
  40e4b4:	bl	40e654 <strv_split>
  40e4b8:	str	x0, [sp, #40]
  40e4bc:	ldr	x8, [sp, #40]
  40e4c0:	cbnz	x8, 40e4d8 <parse_fdname+0x58>
  40e4c4:	mov	w8, #0xfffffff4            	// #-12
  40e4c8:	stur	w8, [x29, #-4]
  40e4cc:	mov	w8, #0x1                   	// #1
  40e4d0:	str	w8, [sp, #16]
  40e4d4:	b	40e634 <parse_fdname+0x1b4>
  40e4d8:	ldr	x0, [sp, #40]
  40e4dc:	bl	407148 <strv_length@plt>
  40e4e0:	cmp	x0, #0x5
  40e4e4:	b.eq	40e4fc <parse_fdname+0x7c>  // b.none
  40e4e8:	mov	w8, #0xffffffea            	// #-22
  40e4ec:	stur	w8, [x29, #-4]
  40e4f0:	mov	w8, #0x1                   	// #1
  40e4f4:	str	w8, [sp, #16]
  40e4f8:	b	40e634 <parse_fdname+0x1b4>
  40e4fc:	ldr	x8, [sp, #40]
  40e500:	ldr	x0, [x8]
  40e504:	adrp	x1, 441000 <_fini+0xc30>
  40e508:	add	x1, x1, #0x5cb
  40e50c:	bl	407158 <strcmp@plt>
  40e510:	cbz	w0, 40e528 <parse_fdname+0xa8>
  40e514:	mov	w8, #0xffffffea            	// #-22
  40e518:	stur	w8, [x29, #-4]
  40e51c:	mov	w8, #0x1                   	// #1
  40e520:	str	w8, [sp, #16]
  40e524:	b	40e634 <parse_fdname+0x1b4>
  40e528:	ldr	x8, [sp, #40]
  40e52c:	ldr	x0, [x8, #8]
  40e530:	bl	407168 <strdup@plt>
  40e534:	str	x0, [sp, #32]
  40e538:	ldr	x8, [sp, #32]
  40e53c:	cbnz	x8, 40e554 <parse_fdname+0xd4>
  40e540:	mov	w8, #0xfffffff4            	// #-12
  40e544:	stur	w8, [x29, #-4]
  40e548:	mov	w8, #0x1                   	// #1
  40e54c:	str	w8, [sp, #16]
  40e550:	b	40e634 <parse_fdname+0x1b4>
  40e554:	ldr	x8, [sp, #40]
  40e558:	ldr	x0, [x8, #16]
  40e55c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40e560:	add	x1, x1, #0xc4d
  40e564:	bl	407158 <strcmp@plt>
  40e568:	cbz	w0, 40e580 <parse_fdname+0x100>
  40e56c:	mov	w8, #0xffffffea            	// #-22
  40e570:	stur	w8, [x29, #-4]
  40e574:	mov	w8, #0x1                   	// #1
  40e578:	str	w8, [sp, #16]
  40e57c:	b	40e634 <parse_fdname+0x1b4>
  40e580:	ldr	x8, [sp, #40]
  40e584:	ldr	x0, [x8, #24]
  40e588:	add	x1, sp, #0x1c
  40e58c:	bl	40e688 <safe_atou>
  40e590:	str	w0, [sp, #20]
  40e594:	ldr	w9, [sp, #20]
  40e598:	cmp	w9, #0x0
  40e59c:	cset	w9, ge  // ge = tcont
  40e5a0:	tbnz	w9, #0, 40e5b8 <parse_fdname+0x138>
  40e5a4:	ldr	w8, [sp, #20]
  40e5a8:	stur	w8, [x29, #-4]
  40e5ac:	mov	w8, #0x1                   	// #1
  40e5b0:	str	w8, [sp, #16]
  40e5b4:	b	40e634 <parse_fdname+0x1b4>
  40e5b8:	ldr	x8, [sp, #40]
  40e5bc:	ldr	x0, [x8, #32]
  40e5c0:	add	x1, sp, #0x18
  40e5c4:	bl	40e688 <safe_atou>
  40e5c8:	str	w0, [sp, #20]
  40e5cc:	ldr	w9, [sp, #20]
  40e5d0:	cmp	w9, #0x0
  40e5d4:	cset	w9, ge  // ge = tcont
  40e5d8:	tbnz	w9, #0, 40e5f0 <parse_fdname+0x170>
  40e5dc:	ldr	w8, [sp, #20]
  40e5e0:	stur	w8, [x29, #-4]
  40e5e4:	mov	w8, #0x1                   	// #1
  40e5e8:	str	w8, [sp, #16]
  40e5ec:	b	40e634 <parse_fdname+0x1b4>
  40e5f0:	ldr	w0, [sp, #28]
  40e5f4:	ldr	w1, [sp, #24]
  40e5f8:	bl	407178 <gnu_dev_makedev@plt>
  40e5fc:	ldur	x8, [x29, #-32]
  40e600:	str	x0, [x8]
  40e604:	ldr	x8, [sp, #32]
  40e608:	str	x8, [sp, #8]
  40e60c:	mov	x8, xzr
  40e610:	str	x8, [sp, #32]
  40e614:	ldr	x8, [sp, #8]
  40e618:	str	x8, [sp]
  40e61c:	ldr	x8, [sp]
  40e620:	ldur	x9, [x29, #-24]
  40e624:	str	x8, [x9]
  40e628:	stur	wzr, [x29, #-4]
  40e62c:	mov	w10, #0x1                   	// #1
  40e630:	str	w10, [sp, #16]
  40e634:	add	x0, sp, #0x20
  40e638:	bl	40e458 <freep>
  40e63c:	add	x0, sp, #0x28
  40e640:	bl	40de80 <strv_freep>
  40e644:	ldur	w0, [x29, #-4]
  40e648:	ldp	x29, x30, [sp, #80]
  40e64c:	add	sp, sp, #0x60
  40e650:	ret

000000000040e654 <strv_split>:
  40e654:	sub	sp, sp, #0x20
  40e658:	stp	x29, x30, [sp, #16]
  40e65c:	add	x29, sp, #0x10
  40e660:	mov	w8, wzr
  40e664:	str	x0, [sp, #8]
  40e668:	str	x1, [sp]
  40e66c:	ldr	x0, [sp, #8]
  40e670:	ldr	x1, [sp]
  40e674:	mov	w2, w8
  40e678:	bl	407188 <strv_split_full@plt>
  40e67c:	ldp	x29, x30, [sp, #16]
  40e680:	add	sp, sp, #0x20
  40e684:	ret

000000000040e688 <safe_atou>:
  40e688:	sub	sp, sp, #0x20
  40e68c:	stp	x29, x30, [sp, #16]
  40e690:	add	x29, sp, #0x10
  40e694:	mov	w8, wzr
  40e698:	str	x0, [sp, #8]
  40e69c:	str	x1, [sp]
  40e6a0:	ldr	x0, [sp, #8]
  40e6a4:	ldr	x2, [sp]
  40e6a8:	mov	w1, w8
  40e6ac:	bl	407198 <safe_atou_full@plt>
  40e6b0:	ldp	x29, x30, [sp, #16]
  40e6b4:	add	sp, sp, #0x20
  40e6b8:	ret

000000000040e6bc <ALIGN_TO>:
  40e6bc:	sub	sp, sp, #0x10
  40e6c0:	str	x0, [sp, #8]
  40e6c4:	str	x1, [sp]
  40e6c8:	ldr	x8, [sp, #8]
  40e6cc:	ldr	x9, [sp]
  40e6d0:	add	x8, x8, x9
  40e6d4:	subs	x8, x8, #0x1
  40e6d8:	ldr	x9, [sp]
  40e6dc:	subs	x9, x9, #0x1
  40e6e0:	bic	x0, x8, x9
  40e6e4:	add	sp, sp, #0x10
  40e6e8:	ret

000000000040e6ec <manager_target_for_action>:
  40e6ec:	sub	sp, sp, #0x30
  40e6f0:	stp	x29, x30, [sp, #32]
  40e6f4:	add	x29, sp, #0x20
  40e6f8:	adrp	x8, 441000 <_fini+0xc30>
  40e6fc:	add	x8, x8, #0x90e
  40e700:	add	x2, x8, #0x3
  40e704:	stur	w0, [x29, #-12]
  40e708:	str	x2, [sp, #8]
  40e70c:	ldur	w8, [x29, #-12]
  40e710:	cmp	w8, #0x0
  40e714:	cset	w8, ge  // ge = tcont
  40e718:	mov	w9, #0x1                   	// #1
  40e71c:	eor	w8, w8, #0x1
  40e720:	eor	w8, w8, w9
  40e724:	eor	w8, w8, w9
  40e728:	and	w8, w8, #0x1
  40e72c:	mov	w0, w8
  40e730:	sxtw	x10, w0
  40e734:	cbz	x10, 40e75c <manager_target_for_action+0x70>
  40e738:	mov	w8, wzr
  40e73c:	mov	w0, w8
  40e740:	adrp	x1, 441000 <_fini+0xc30>
  40e744:	add	x1, x1, #0x902
  40e748:	ldr	x2, [sp, #8]
  40e74c:	mov	w3, #0x20                  	// #32
  40e750:	adrp	x4, 441000 <_fini+0xc30>
  40e754:	add	x4, x4, #0x92b
  40e758:	bl	406c68 <log_assert_failed_realm@plt>
  40e75c:	ldursw	x8, [x29, #-12]
  40e760:	cmp	x8, #0xa
  40e764:	b.ge	40e78c <manager_target_for_action+0xa0>  // b.tcont
  40e768:	ldursw	x8, [x29, #-12]
  40e76c:	mov	x9, #0x8                   	// #8
  40e770:	mul	x8, x9, x8
  40e774:	adrp	x9, 45c000 <__FRAME_END__+0x10118>
  40e778:	add	x9, x9, #0x308
  40e77c:	add	x8, x9, x8
  40e780:	ldr	x8, [x8]
  40e784:	stur	x8, [x29, #-8]
  40e788:	b	40e794 <manager_target_for_action+0xa8>
  40e78c:	mov	x8, xzr
  40e790:	stur	x8, [x29, #-8]
  40e794:	ldur	x0, [x29, #-8]
  40e798:	ldp	x29, x30, [sp, #32]
  40e79c:	add	sp, sp, #0x30
  40e7a0:	ret

000000000040e7a4 <manager_handle_action>:
  40e7a4:	stp	x29, x30, [sp, #-32]!
  40e7a8:	str	x28, [sp, #16]
  40e7ac:	mov	x29, sp
  40e7b0:	sub	sp, sp, #0x220
  40e7b4:	mov	x8, xzr
  40e7b8:	mov	w9, #0x1                   	// #1
  40e7bc:	adrp	x10, 441000 <_fini+0xc30>
  40e7c0:	add	x10, x10, #0x90e
  40e7c4:	add	x10, x10, #0x3
  40e7c8:	adrp	x11, 441000 <_fini+0xc30>
  40e7cc:	add	x11, x11, #0xa47
  40e7d0:	stur	x0, [x29, #-16]
  40e7d4:	stur	w1, [x29, #-20]
  40e7d8:	stur	w2, [x29, #-24]
  40e7dc:	and	w12, w3, w9
  40e7e0:	sturb	w12, [x29, #-25]
  40e7e4:	and	w9, w4, w9
  40e7e8:	sturb	w9, [x29, #-26]
  40e7ec:	stur	xzr, [x29, #-56]
  40e7f0:	stur	xzr, [x29, #-48]
  40e7f4:	stur	xzr, [x29, #-40]
  40e7f8:	stur	x8, [x29, #-72]
  40e7fc:	str	x10, [sp, #256]
  40e800:	str	x11, [sp, #248]
  40e804:	ldur	x8, [x29, #-16]
  40e808:	cmp	x8, #0x0
  40e80c:	cset	w9, ne  // ne = any
  40e810:	mov	w10, #0x1                   	// #1
  40e814:	eor	w9, w9, #0x1
  40e818:	eor	w9, w9, w10
  40e81c:	eor	w9, w9, w10
  40e820:	and	w9, w9, #0x1
  40e824:	mov	w0, w9
  40e828:	sxtw	x8, w0
  40e82c:	cbz	x8, 40e854 <manager_handle_action+0xb0>
  40e830:	mov	w8, wzr
  40e834:	mov	w0, w8
  40e838:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40e83c:	add	x1, x1, #0x5ef
  40e840:	ldr	x2, [sp, #256]
  40e844:	mov	w3, #0x3f                  	// #63
  40e848:	adrp	x4, 441000 <_fini+0xc30>
  40e84c:	add	x4, x4, #0x9f9
  40e850:	bl	406c68 <log_assert_failed_realm@plt>
  40e854:	ldur	w8, [x29, #-24]
  40e858:	cbnz	w8, 40e8e0 <manager_handle_action+0x13c>
  40e85c:	mov	w8, #0x7                   	// #7
  40e860:	stur	w8, [x29, #-96]
  40e864:	stur	wzr, [x29, #-100]
  40e868:	stur	wzr, [x29, #-104]
  40e86c:	ldur	w0, [x29, #-104]
  40e870:	bl	406c08 <log_get_max_level_realm@plt>
  40e874:	ldur	w8, [x29, #-96]
  40e878:	and	w8, w8, #0x7
  40e87c:	cmp	w0, w8
  40e880:	b.lt	40e8b4 <manager_handle_action+0x110>  // b.tstop
  40e884:	ldur	w8, [x29, #-104]
  40e888:	ldur	w9, [x29, #-96]
  40e88c:	orr	w0, w9, w8, lsl #10
  40e890:	ldur	w1, [x29, #-100]
  40e894:	ldr	x2, [sp, #256]
  40e898:	mov	w3, #0x43                  	// #67
  40e89c:	ldr	x4, [sp, #248]
  40e8a0:	adrp	x5, 441000 <_fini+0xc30>
  40e8a4:	add	x5, x5, #0xa5d
  40e8a8:	bl	406c18 <log_internal_realm@plt>
  40e8ac:	str	w0, [sp, #244]
  40e8b0:	b	40e8c8 <manager_handle_action+0x124>
  40e8b4:	ldur	w0, [x29, #-100]
  40e8b8:	bl	406c28 <abs@plt>
  40e8bc:	mov	w8, wzr
  40e8c0:	subs	w8, w8, w0, uxtb
  40e8c4:	str	w8, [sp, #244]
  40e8c8:	ldr	w8, [sp, #244]
  40e8cc:	stur	w8, [x29, #-108]
  40e8d0:	stur	wzr, [x29, #-4]
  40e8d4:	mov	w8, #0x1                   	// #1
  40e8d8:	stur	w8, [x29, #-112]
  40e8dc:	b	40f2f0 <manager_handle_action+0xb4c>
  40e8e0:	ldur	w8, [x29, #-20]
  40e8e4:	cmp	w8, #0x40
  40e8e8:	b.ne	40e97c <manager_handle_action+0x1d8>  // b.any
  40e8ec:	ldur	x8, [x29, #-16]
  40e8f0:	ldr	x8, [x8, #448]
  40e8f4:	cbz	x8, 40e97c <manager_handle_action+0x1d8>
  40e8f8:	mov	w8, #0x7                   	// #7
  40e8fc:	stur	w8, [x29, #-116]
  40e900:	stur	wzr, [x29, #-120]
  40e904:	stur	wzr, [x29, #-124]
  40e908:	ldur	w0, [x29, #-124]
  40e90c:	bl	406c08 <log_get_max_level_realm@plt>
  40e910:	ldur	w8, [x29, #-116]
  40e914:	and	w8, w8, #0x7
  40e918:	cmp	w0, w8
  40e91c:	b.lt	40e950 <manager_handle_action+0x1ac>  // b.tstop
  40e920:	ldur	w8, [x29, #-124]
  40e924:	ldur	w9, [x29, #-116]
  40e928:	orr	w0, w9, w8, lsl #10
  40e92c:	ldur	w1, [x29, #-120]
  40e930:	ldr	x2, [sp, #256]
  40e934:	mov	w3, #0x4d                  	// #77
  40e938:	ldr	x4, [sp, #248]
  40e93c:	adrp	x5, 441000 <_fini+0xc30>
  40e940:	add	x5, x5, #0xa86
  40e944:	bl	406c18 <log_internal_realm@plt>
  40e948:	str	w0, [sp, #240]
  40e94c:	b	40e964 <manager_handle_action+0x1c0>
  40e950:	ldur	w0, [x29, #-120]
  40e954:	bl	406c28 <abs@plt>
  40e958:	mov	w8, wzr
  40e95c:	subs	w8, w8, w0, uxtb
  40e960:	str	w8, [sp, #240]
  40e964:	ldr	w8, [sp, #240]
  40e968:	stur	w8, [x29, #-128]
  40e96c:	stur	wzr, [x29, #-4]
  40e970:	mov	w8, #0x1                   	// #1
  40e974:	stur	w8, [x29, #-112]
  40e978:	b	40f2f0 <manager_handle_action+0xb4c>
  40e97c:	ldur	w8, [x29, #-20]
  40e980:	cmp	w8, #0x0
  40e984:	cset	w8, le
  40e988:	tbnz	w8, #0, 40ea88 <manager_handle_action+0x2e4>
  40e98c:	ldur	x0, [x29, #-16]
  40e990:	ldur	w1, [x29, #-20]
  40e994:	mov	w8, wzr
  40e998:	mov	w2, w8
  40e99c:	mov	x9, xzr
  40e9a0:	mov	x3, x9
  40e9a4:	mov	w10, #0x1                   	// #1
  40e9a8:	and	w4, w10, #0x1
  40e9ac:	mov	w10, wzr
  40e9b0:	and	w5, w10, #0x1
  40e9b4:	mov	w6, w8
  40e9b8:	mov	x7, x9
  40e9bc:	bl	4268b8 <manager_is_inhibited>
  40e9c0:	tbnz	w0, #0, 40e9c8 <manager_handle_action+0x224>
  40e9c4:	b	40ea88 <manager_handle_action+0x2e4>
  40e9c8:	mov	w8, #0x7                   	// #7
  40e9cc:	stur	w8, [x29, #-132]
  40e9d0:	stur	wzr, [x29, #-136]
  40e9d4:	stur	wzr, [x29, #-140]
  40e9d8:	ldur	w0, [x29, #-140]
  40e9dc:	bl	406c08 <log_get_max_level_realm@plt>
  40e9e0:	ldur	w8, [x29, #-132]
  40e9e4:	and	w8, w8, #0x7
  40e9e8:	cmp	w0, w8
  40e9ec:	b.lt	40ea5c <manager_handle_action+0x2b8>  // b.tstop
  40e9f0:	ldur	w8, [x29, #-140]
  40e9f4:	ldur	w9, [x29, #-132]
  40e9f8:	orr	w0, w9, w8, lsl #10
  40e9fc:	ldur	w1, [x29, #-136]
  40ea00:	ldur	w8, [x29, #-24]
  40ea04:	str	w0, [sp, #236]
  40ea08:	mov	w0, w8
  40ea0c:	str	w1, [sp, #232]
  40ea10:	bl	40f30c <handle_action_to_string>
  40ea14:	ldur	w8, [x29, #-20]
  40ea18:	str	x0, [sp, #224]
  40ea1c:	mov	w0, w8
  40ea20:	bl	426b8c <inhibit_what_to_string>
  40ea24:	ldr	w8, [sp, #236]
  40ea28:	str	x0, [sp, #216]
  40ea2c:	mov	w0, w8
  40ea30:	ldr	w1, [sp, #232]
  40ea34:	ldr	x2, [sp, #256]
  40ea38:	mov	w3, #0x57                  	// #87
  40ea3c:	ldr	x4, [sp, #248]
  40ea40:	adrp	x5, 441000 <_fini+0xc30>
  40ea44:	add	x5, x5, #0xac7
  40ea48:	ldr	x6, [sp, #224]
  40ea4c:	ldr	x7, [sp, #216]
  40ea50:	bl	406c18 <log_internal_realm@plt>
  40ea54:	str	w0, [sp, #212]
  40ea58:	b	40ea70 <manager_handle_action+0x2cc>
  40ea5c:	ldur	w0, [x29, #-136]
  40ea60:	bl	406c28 <abs@plt>
  40ea64:	mov	w8, wzr
  40ea68:	subs	w8, w8, w0, uxtb
  40ea6c:	str	w8, [sp, #212]
  40ea70:	ldr	w8, [sp, #212]
  40ea74:	stur	w8, [x29, #-144]
  40ea78:	stur	wzr, [x29, #-4]
  40ea7c:	mov	w8, #0x1                   	// #1
  40ea80:	stur	w8, [x29, #-112]
  40ea84:	b	40f2f0 <manager_handle_action+0xb4c>
  40ea88:	ldur	w8, [x29, #-24]
  40ea8c:	cmp	w8, #0x9
  40ea90:	b.ne	40eb40 <manager_handle_action+0x39c>  // b.any
  40ea94:	ldurb	w8, [x29, #-26]
  40ea98:	tbnz	w8, #0, 40eaac <manager_handle_action+0x308>
  40ea9c:	stur	wzr, [x29, #-4]
  40eaa0:	mov	w8, #0x1                   	// #1
  40eaa4:	stur	w8, [x29, #-112]
  40eaa8:	b	40f2f0 <manager_handle_action+0xb4c>
  40eaac:	mov	w8, #0x6                   	// #6
  40eab0:	stur	w8, [x29, #-148]
  40eab4:	stur	wzr, [x29, #-152]
  40eab8:	stur	wzr, [x29, #-156]
  40eabc:	ldur	w0, [x29, #-156]
  40eac0:	bl	406c08 <log_get_max_level_realm@plt>
  40eac4:	ldur	w8, [x29, #-148]
  40eac8:	and	w8, w8, #0x7
  40eacc:	cmp	w0, w8
  40ead0:	b.lt	40eb04 <manager_handle_action+0x360>  // b.tstop
  40ead4:	ldur	w8, [x29, #-156]
  40ead8:	ldur	w9, [x29, #-148]
  40eadc:	orr	w0, w9, w8, lsl #10
  40eae0:	ldur	w1, [x29, #-152]
  40eae4:	ldr	x2, [sp, #256]
  40eae8:	mov	w3, #0x61                  	// #97
  40eaec:	ldr	x4, [sp, #248]
  40eaf0:	adrp	x5, 441000 <_fini+0xc30>
  40eaf4:	add	x5, x5, #0xaef
  40eaf8:	bl	406c18 <log_internal_realm@plt>
  40eafc:	str	w0, [sp, #208]
  40eb00:	b	40eb18 <manager_handle_action+0x374>
  40eb04:	ldur	w0, [x29, #-152]
  40eb08:	bl	406c28 <abs@plt>
  40eb0c:	mov	w8, wzr
  40eb10:	subs	w8, w8, w0, uxtb
  40eb14:	str	w8, [sp, #208]
  40eb18:	ldr	w8, [sp, #208]
  40eb1c:	stur	w8, [x29, #-160]
  40eb20:	ldur	x0, [x29, #-16]
  40eb24:	mov	w8, #0x1                   	// #1
  40eb28:	and	w1, w8, #0x1
  40eb2c:	bl	42f8d0 <session_send_lock_all>
  40eb30:	mov	w8, #0x1                   	// #1
  40eb34:	stur	w8, [x29, #-4]
  40eb38:	stur	w8, [x29, #-112]
  40eb3c:	b	40f2f0 <manager_handle_action+0xb4c>
  40eb40:	ldur	w8, [x29, #-24]
  40eb44:	cmp	w8, #0x5
  40eb48:	b.ne	40eb6c <manager_handle_action+0x3c8>  // b.any
  40eb4c:	adrp	x0, 441000 <_fini+0xc30>
  40eb50:	add	x0, x0, #0xb03
  40eb54:	bl	4071a8 <can_sleep@plt>
  40eb58:	cmp	w0, #0x0
  40eb5c:	cset	w8, gt
  40eb60:	and	w8, w8, #0x1
  40eb64:	sturb	w8, [x29, #-73]
  40eb68:	b	40ec28 <manager_handle_action+0x484>
  40eb6c:	ldur	w8, [x29, #-24]
  40eb70:	cmp	w8, #0x6
  40eb74:	b.ne	40eb98 <manager_handle_action+0x3f4>  // b.any
  40eb78:	adrp	x0, 441000 <_fini+0xc30>
  40eb7c:	add	x0, x0, #0xb0b
  40eb80:	bl	4071a8 <can_sleep@plt>
  40eb84:	cmp	w0, #0x0
  40eb88:	cset	w8, gt
  40eb8c:	and	w8, w8, #0x1
  40eb90:	sturb	w8, [x29, #-73]
  40eb94:	b	40ec28 <manager_handle_action+0x484>
  40eb98:	ldur	w8, [x29, #-24]
  40eb9c:	cmp	w8, #0x7
  40eba0:	b.ne	40ebc4 <manager_handle_action+0x420>  // b.any
  40eba4:	adrp	x0, 441000 <_fini+0xc30>
  40eba8:	add	x0, x0, #0xb15
  40ebac:	bl	4071a8 <can_sleep@plt>
  40ebb0:	cmp	w0, #0x0
  40ebb4:	cset	w8, gt
  40ebb8:	and	w8, w8, #0x1
  40ebbc:	sturb	w8, [x29, #-73]
  40ebc0:	b	40ec28 <manager_handle_action+0x484>
  40ebc4:	ldur	w8, [x29, #-24]
  40ebc8:	cmp	w8, #0x8
  40ebcc:	b.ne	40ebf0 <manager_handle_action+0x44c>  // b.any
  40ebd0:	adrp	x0, 441000 <_fini+0xc30>
  40ebd4:	add	x0, x0, #0xb22
  40ebd8:	bl	4071a8 <can_sleep@plt>
  40ebdc:	cmp	w0, #0x0
  40ebe0:	cset	w8, gt
  40ebe4:	and	w8, w8, #0x1
  40ebe8:	sturb	w8, [x29, #-73]
  40ebec:	b	40ec28 <manager_handle_action+0x484>
  40ebf0:	ldur	w8, [x29, #-24]
  40ebf4:	cmp	w8, #0x4
  40ebf8:	b.ne	40ec20 <manager_handle_action+0x47c>  // b.any
  40ebfc:	adrp	x0, 441000 <_fini+0xc30>
  40ec00:	add	x0, x0, #0xb39
  40ec04:	mov	w1, #0x1                   	// #1
  40ec08:	bl	406de8 <access@plt>
  40ec0c:	cmp	w0, #0x0
  40ec10:	cset	w8, ge  // ge = tcont
  40ec14:	and	w8, w8, #0x1
  40ec18:	sturb	w8, [x29, #-73]
  40ec1c:	b	40ec28 <manager_handle_action+0x484>
  40ec20:	mov	w8, #0x1                   	// #1
  40ec24:	sturb	w8, [x29, #-73]
  40ec28:	ldurb	w8, [x29, #-73]
  40ec2c:	tbnz	w8, #0, 40ed44 <manager_handle_action+0x5a0>
  40ec30:	mov	w8, #0x0                   	// #0
  40ec34:	sturb	w8, [x29, #-161]
  40ec38:	ldur	w8, [x29, #-24]
  40ec3c:	subs	w8, w8, #0x6
  40ec40:	cmp	w8, #0x2
  40ec44:	cset	w8, ls  // ls = plast
  40ec48:	eor	w8, w8, #0x1
  40ec4c:	tbnz	w8, #0, 40ec60 <manager_handle_action+0x4bc>
  40ec50:	b	40ec54 <manager_handle_action+0x4b0>
  40ec54:	mov	w8, #0x1                   	// #1
  40ec58:	sturb	w8, [x29, #-161]
  40ec5c:	b	40ec60 <manager_handle_action+0x4bc>
  40ec60:	ldurb	w8, [x29, #-161]
  40ec64:	and	w8, w8, #0x1
  40ec68:	sturb	w8, [x29, #-162]
  40ec6c:	ldurb	w8, [x29, #-162]
  40ec70:	tbnz	w8, #0, 40ec78 <manager_handle_action+0x4d4>
  40ec74:	b	40ed44 <manager_handle_action+0x5a0>
  40ec78:	adrp	x0, 441000 <_fini+0xc30>
  40ec7c:	add	x0, x0, #0xb03
  40ec80:	bl	4071a8 <can_sleep@plt>
  40ec84:	cmp	w0, #0x0
  40ec88:	cset	w8, gt
  40ec8c:	and	w8, w8, #0x1
  40ec90:	sturb	w8, [x29, #-73]
  40ec94:	ldurb	w8, [x29, #-73]
  40ec98:	tbnz	w8, #0, 40eca0 <manager_handle_action+0x4fc>
  40ec9c:	b	40ed44 <manager_handle_action+0x5a0>
  40eca0:	mov	w8, #0x5                   	// #5
  40eca4:	stur	w8, [x29, #-168]
  40eca8:	stur	wzr, [x29, #-172]
  40ecac:	stur	wzr, [x29, #-176]
  40ecb0:	ldur	w0, [x29, #-176]
  40ecb4:	bl	406c08 <log_get_max_level_realm@plt>
  40ecb8:	ldur	w8, [x29, #-168]
  40ecbc:	and	w8, w8, #0x7
  40ecc0:	cmp	w0, w8
  40ecc4:	b.lt	40ed20 <manager_handle_action+0x57c>  // b.tstop
  40ecc8:	ldur	w8, [x29, #-176]
  40eccc:	ldur	w9, [x29, #-168]
  40ecd0:	orr	w0, w9, w8, lsl #10
  40ecd4:	ldur	w1, [x29, #-172]
  40ecd8:	ldur	w8, [x29, #-24]
  40ecdc:	str	w0, [sp, #204]
  40ece0:	mov	w0, w8
  40ece4:	str	w1, [sp, #200]
  40ece8:	bl	40f30c <handle_action_to_string>
  40ecec:	ldr	w8, [sp, #204]
  40ecf0:	str	x0, [sp, #192]
  40ecf4:	mov	w0, w8
  40ecf8:	ldr	w1, [sp, #200]
  40ecfc:	ldr	x2, [sp, #256]
  40ed00:	mov	w3, #0x77                  	// #119
  40ed04:	ldr	x4, [sp, #248]
  40ed08:	adrp	x5, 441000 <_fini+0xc30>
  40ed0c:	add	x5, x5, #0xb49
  40ed10:	ldr	x6, [sp, #192]
  40ed14:	bl	406c18 <log_internal_realm@plt>
  40ed18:	str	w0, [sp, #188]
  40ed1c:	b	40ed34 <manager_handle_action+0x590>
  40ed20:	ldur	w0, [x29, #-172]
  40ed24:	bl	406c28 <abs@plt>
  40ed28:	mov	w8, wzr
  40ed2c:	subs	w8, w8, w0, uxtb
  40ed30:	str	w8, [sp, #188]
  40ed34:	ldr	w8, [sp, #188]
  40ed38:	stur	w8, [x29, #-180]
  40ed3c:	mov	w8, #0x5                   	// #5
  40ed40:	stur	w8, [x29, #-24]
  40ed44:	ldurb	w8, [x29, #-73]
  40ed48:	tbnz	w8, #0, 40ee04 <manager_handle_action+0x660>
  40ed4c:	mov	w8, #0x4                   	// #4
  40ed50:	stur	w8, [x29, #-184]
  40ed54:	mov	w8, #0x5f                  	// #95
  40ed58:	movk	w8, #0x4000, lsl #16
  40ed5c:	stur	w8, [x29, #-188]
  40ed60:	stur	wzr, [x29, #-192]
  40ed64:	ldur	w0, [x29, #-192]
  40ed68:	bl	406c08 <log_get_max_level_realm@plt>
  40ed6c:	ldur	w8, [x29, #-184]
  40ed70:	and	w8, w8, #0x7
  40ed74:	cmp	w0, w8
  40ed78:	b.lt	40edd4 <manager_handle_action+0x630>  // b.tstop
  40ed7c:	ldur	w8, [x29, #-192]
  40ed80:	ldur	w9, [x29, #-184]
  40ed84:	orr	w0, w9, w8, lsl #10
  40ed88:	ldur	w1, [x29, #-188]
  40ed8c:	ldur	w8, [x29, #-24]
  40ed90:	str	w0, [sp, #184]
  40ed94:	mov	w0, w8
  40ed98:	str	w1, [sp, #180]
  40ed9c:	bl	40f30c <handle_action_to_string>
  40eda0:	ldr	w8, [sp, #184]
  40eda4:	str	x0, [sp, #168]
  40eda8:	mov	w0, w8
  40edac:	ldr	w1, [sp, #180]
  40edb0:	ldr	x2, [sp, #256]
  40edb4:	mov	w3, #0x7e                  	// #126
  40edb8:	ldr	x4, [sp, #248]
  40edbc:	adrp	x5, 441000 <_fini+0xc30>
  40edc0:	add	x5, x5, #0xb91
  40edc4:	ldr	x6, [sp, #168]
  40edc8:	bl	406c18 <log_internal_realm@plt>
  40edcc:	str	w0, [sp, #164]
  40edd0:	b	40ede8 <manager_handle_action+0x644>
  40edd4:	ldur	w0, [x29, #-188]
  40edd8:	bl	406c28 <abs@plt>
  40eddc:	mov	w8, wzr
  40ede0:	subs	w8, w8, w0, uxtb
  40ede4:	str	w8, [sp, #164]
  40ede8:	ldr	w8, [sp, #164]
  40edec:	stur	w8, [x29, #-196]
  40edf0:	ldur	w8, [x29, #-196]
  40edf4:	stur	w8, [x29, #-4]
  40edf8:	mov	w8, #0x1                   	// #1
  40edfc:	stur	w8, [x29, #-112]
  40ee00:	b	40f2f0 <manager_handle_action+0xb4c>
  40ee04:	ldur	x8, [x29, #-16]
  40ee08:	ldr	w9, [x8, #248]
  40ee0c:	cmp	w9, #0x0
  40ee10:	cset	w9, le
  40ee14:	tbnz	w9, #0, 40eee8 <manager_handle_action+0x744>
  40ee18:	mov	w8, #0x7                   	// #7
  40ee1c:	stur	w8, [x29, #-200]
  40ee20:	mov	w8, #0x72                  	// #114
  40ee24:	movk	w8, #0x4000, lsl #16
  40ee28:	stur	w8, [x29, #-204]
  40ee2c:	stur	wzr, [x29, #-208]
  40ee30:	ldur	w0, [x29, #-208]
  40ee34:	bl	406c08 <log_get_max_level_realm@plt>
  40ee38:	ldur	w8, [x29, #-200]
  40ee3c:	and	w8, w8, #0x7
  40ee40:	cmp	w0, w8
  40ee44:	b.lt	40eeb8 <manager_handle_action+0x714>  // b.tstop
  40ee48:	ldur	w8, [x29, #-208]
  40ee4c:	ldur	w9, [x29, #-200]
  40ee50:	orr	w0, w9, w8, lsl #10
  40ee54:	ldur	w1, [x29, #-204]
  40ee58:	ldur	x10, [x29, #-16]
  40ee5c:	ldr	w8, [x10, #248]
  40ee60:	str	w0, [sp, #160]
  40ee64:	mov	w0, w8
  40ee68:	str	w1, [sp, #156]
  40ee6c:	bl	426b8c <inhibit_what_to_string>
  40ee70:	ldur	w8, [x29, #-24]
  40ee74:	str	x0, [sp, #144]
  40ee78:	mov	w0, w8
  40ee7c:	bl	40f30c <handle_action_to_string>
  40ee80:	ldr	w8, [sp, #160]
  40ee84:	str	x0, [sp, #136]
  40ee88:	mov	w0, w8
  40ee8c:	ldr	w1, [sp, #156]
  40ee90:	ldr	x2, [sp, #256]
  40ee94:	mov	w3, #0x84                  	// #132
  40ee98:	ldr	x4, [sp, #248]
  40ee9c:	adrp	x5, 441000 <_fini+0xc30>
  40eea0:	add	x5, x5, #0xbc1
  40eea4:	ldr	x6, [sp, #144]
  40eea8:	ldr	x7, [sp, #136]
  40eeac:	bl	406c18 <log_internal_realm@plt>
  40eeb0:	str	w0, [sp, #132]
  40eeb4:	b	40eecc <manager_handle_action+0x728>
  40eeb8:	ldur	w0, [x29, #-204]
  40eebc:	bl	406c28 <abs@plt>
  40eec0:	mov	w8, wzr
  40eec4:	subs	w8, w8, w0, uxtb
  40eec8:	str	w8, [sp, #132]
  40eecc:	ldr	w8, [sp, #132]
  40eed0:	stur	w8, [x29, #-212]
  40eed4:	ldur	w8, [x29, #-212]
  40eed8:	stur	w8, [x29, #-4]
  40eedc:	mov	w8, #0x1                   	// #1
  40eee0:	stur	w8, [x29, #-112]
  40eee4:	b	40f2f0 <manager_handle_action+0xb4c>
  40eee8:	ldur	w0, [x29, #-24]
  40eeec:	bl	40e6ec <manager_target_for_action>
  40eef0:	stur	x0, [x29, #-88]
  40eef4:	cmp	x0, #0x0
  40eef8:	cset	w8, ne  // ne = any
  40eefc:	mov	w9, #0x1                   	// #1
  40ef00:	eor	w8, w8, #0x1
  40ef04:	eor	w8, w8, w9
  40ef08:	eor	w8, w8, w9
  40ef0c:	and	w8, w8, #0x1
  40ef10:	mov	w0, w8
  40ef14:	sxtw	x10, w0
  40ef18:	cbz	x10, 40ef40 <manager_handle_action+0x79c>
  40ef1c:	mov	w8, wzr
  40ef20:	mov	w0, w8
  40ef24:	adrp	x1, 441000 <_fini+0xc30>
  40ef28:	add	x1, x1, #0xc03
  40ef2c:	ldr	x2, [sp, #256]
  40ef30:	mov	w3, #0x86                  	// #134
  40ef34:	adrp	x4, 441000 <_fini+0xc30>
  40ef38:	add	x4, x4, #0x9f9
  40ef3c:	bl	406c68 <log_assert_failed_realm@plt>
  40ef40:	mov	w8, #0x0                   	// #0
  40ef44:	sturb	w8, [x29, #-213]
  40ef48:	ldur	w8, [x29, #-24]
  40ef4c:	subs	w8, w8, #0x5
  40ef50:	cmp	w8, #0x3
  40ef54:	cset	w8, ls  // ls = plast
  40ef58:	eor	w8, w8, #0x1
  40ef5c:	tbnz	w8, #0, 40ef70 <manager_handle_action+0x7cc>
  40ef60:	b	40ef64 <manager_handle_action+0x7c0>
  40ef64:	mov	w8, #0x1                   	// #1
  40ef68:	sturb	w8, [x29, #-213]
  40ef6c:	b	40ef70 <manager_handle_action+0x7cc>
  40ef70:	ldurb	w8, [x29, #-213]
  40ef74:	and	w8, w8, #0x1
  40ef78:	sturb	w8, [x29, #-214]
  40ef7c:	ldurb	w8, [x29, #-214]
  40ef80:	mov	w9, #0x2                   	// #2
  40ef84:	mov	w10, #0x1                   	// #1
  40ef88:	tst	w8, #0x1
  40ef8c:	csel	w8, w9, w10, ne  // ne = any
  40ef90:	stur	w8, [x29, #-60]
  40ef94:	ldurb	w8, [x29, #-25]
  40ef98:	tbnz	w8, #0, 40f160 <manager_handle_action+0x9bc>
  40ef9c:	ldur	x0, [x29, #-16]
  40efa0:	ldur	w1, [x29, #-60]
  40efa4:	mov	w8, wzr
  40efa8:	mov	w2, w8
  40efac:	mov	x9, xzr
  40efb0:	mov	x3, x9
  40efb4:	mov	w10, wzr
  40efb8:	and	w4, w10, #0x1
  40efbc:	and	w5, w10, #0x1
  40efc0:	mov	w6, w8
  40efc4:	sub	x7, x29, #0x48
  40efc8:	bl	4268b8 <manager_is_inhibited>
  40efcc:	tbnz	w0, #0, 40efd4 <manager_handle_action+0x830>
  40efd0:	b	40f160 <manager_handle_action+0x9bc>
  40efd4:	sub	x1, x29, #0xe0
  40efd8:	mov	x8, xzr
  40efdc:	stur	x8, [x29, #-224]
  40efe0:	stur	x8, [x29, #-232]
  40efe4:	ldur	x8, [x29, #-72]
  40efe8:	ldr	w0, [x8, #60]
  40efec:	bl	4071b8 <get_process_comm@plt>
  40eff0:	ldur	x8, [x29, #-72]
  40eff4:	ldr	w9, [x8, #64]
  40eff8:	mov	w0, w9
  40effc:	bl	4071c8 <uid_to_name@plt>
  40f000:	stur	x0, [x29, #-232]
  40f004:	ldurb	w9, [x29, #-26]
  40f008:	mov	w10, #0x3                   	// #3
  40f00c:	mov	w11, #0x7                   	// #7
  40f010:	tst	w9, #0x1
  40f014:	csel	w9, w10, w11, ne  // ne = any
  40f018:	stur	w9, [x29, #-236]
  40f01c:	stur	wzr, [x29, #-240]
  40f020:	stur	wzr, [x29, #-244]
  40f024:	ldur	w0, [x29, #-244]
  40f028:	bl	406c08 <log_get_max_level_realm@plt>
  40f02c:	ldur	w9, [x29, #-236]
  40f030:	and	w9, w9, #0x7
  40f034:	cmp	w0, w9
  40f038:	b.lt	40f110 <manager_handle_action+0x96c>  // b.tstop
  40f03c:	ldur	w8, [x29, #-244]
  40f040:	ldur	w9, [x29, #-236]
  40f044:	orr	w0, w9, w8, lsl #10
  40f048:	ldur	w1, [x29, #-240]
  40f04c:	ldur	w8, [x29, #-24]
  40f050:	str	w0, [sp, #128]
  40f054:	mov	w0, w8
  40f058:	str	w1, [sp, #124]
  40f05c:	bl	40f30c <handle_action_to_string>
  40f060:	ldur	w8, [x29, #-60]
  40f064:	str	x0, [sp, #112]
  40f068:	mov	w0, w8
  40f06c:	bl	426b8c <inhibit_what_to_string>
  40f070:	ldur	x10, [x29, #-72]
  40f074:	ldr	w8, [x10, #64]
  40f078:	ldur	x10, [x29, #-232]
  40f07c:	str	x0, [sp, #104]
  40f080:	mov	x0, x10
  40f084:	str	w8, [sp, #100]
  40f088:	bl	40f390 <strna>
  40f08c:	ldur	x10, [x29, #-72]
  40f090:	ldr	w8, [x10, #60]
  40f094:	ldur	x10, [x29, #-224]
  40f098:	str	x0, [sp, #88]
  40f09c:	mov	x0, x10
  40f0a0:	str	w8, [sp, #84]
  40f0a4:	bl	40f390 <strna>
  40f0a8:	ldr	w8, [sp, #128]
  40f0ac:	str	x0, [sp, #72]
  40f0b0:	mov	w0, w8
  40f0b4:	ldr	w1, [sp, #124]
  40f0b8:	ldr	x2, [sp, #256]
  40f0bc:	mov	w3, #0x9a                  	// #154
  40f0c0:	ldr	x4, [sp, #248]
  40f0c4:	adrp	x5, 441000 <_fini+0xc30>
  40f0c8:	add	x5, x5, #0xc2e
  40f0cc:	ldr	x6, [sp, #112]
  40f0d0:	ldr	x7, [sp, #104]
  40f0d4:	mov	x10, sp
  40f0d8:	ldr	w9, [sp, #100]
  40f0dc:	str	w9, [x10]
  40f0e0:	mov	x10, sp
  40f0e4:	ldr	x11, [sp, #88]
  40f0e8:	str	x11, [x10, #8]
  40f0ec:	mov	x10, sp
  40f0f0:	ldr	w12, [sp, #84]
  40f0f4:	str	w12, [x10, #16]
  40f0f8:	mov	x10, sp
  40f0fc:	ldr	x13, [sp, #72]
  40f100:	str	x13, [x10, #24]
  40f104:	bl	406c18 <log_internal_realm@plt>
  40f108:	str	w0, [sp, #68]
  40f10c:	b	40f124 <manager_handle_action+0x980>
  40f110:	ldur	w0, [x29, #-240]
  40f114:	bl	406c28 <abs@plt>
  40f118:	mov	w8, wzr
  40f11c:	subs	w8, w8, w0, uxtb
  40f120:	str	w8, [sp, #68]
  40f124:	ldr	w8, [sp, #68]
  40f128:	stur	w8, [x29, #-248]
  40f12c:	ldurb	w8, [x29, #-26]
  40f130:	mov	w9, #0xffffffff            	// #-1
  40f134:	mov	w10, wzr
  40f138:	tst	w8, #0x1
  40f13c:	csel	w8, w9, w10, ne  // ne = any
  40f140:	stur	w8, [x29, #-4]
  40f144:	mov	w8, #0x1                   	// #1
  40f148:	stur	w8, [x29, #-112]
  40f14c:	sub	x0, x29, #0xe8
  40f150:	bl	40f368 <freep>
  40f154:	sub	x0, x29, #0xe0
  40f158:	bl	40f368 <freep>
  40f15c:	b	40f2f0 <manager_handle_action+0xb4c>
  40f160:	mov	w8, #0x6                   	// #6
  40f164:	stur	w8, [x29, #-252]
  40f168:	stur	wzr, [x29, #-256]
  40f16c:	str	wzr, [sp, #284]
  40f170:	ldr	w0, [sp, #284]
  40f174:	bl	406c08 <log_get_max_level_realm@plt>
  40f178:	ldur	w8, [x29, #-252]
  40f17c:	and	w8, w8, #0x7
  40f180:	cmp	w0, w8
  40f184:	b.lt	40f1d4 <manager_handle_action+0xa30>  // b.tstop
  40f188:	ldr	w8, [sp, #284]
  40f18c:	ldur	w9, [x29, #-252]
  40f190:	orr	w0, w9, w8, lsl #10
  40f194:	ldur	w1, [x29, #-256]
  40f198:	ldursw	x10, [x29, #-24]
  40f19c:	mov	x11, #0x8                   	// #8
  40f1a0:	mul	x10, x11, x10
  40f1a4:	adrp	x11, 45c000 <__FRAME_END__+0x10118>
  40f1a8:	add	x11, x11, #0x358
  40f1ac:	add	x10, x11, x10
  40f1b0:	ldr	x6, [x10]
  40f1b4:	ldr	x2, [sp, #256]
  40f1b8:	mov	w3, #0x9f                  	// #159
  40f1bc:	ldr	x4, [sp, #248]
  40f1c0:	adrp	x5, 441000 <_fini+0xc30>
  40f1c4:	add	x5, x5, #0xc6e
  40f1c8:	bl	406c18 <log_internal_realm@plt>
  40f1cc:	str	w0, [sp, #64]
  40f1d0:	b	40f1e8 <manager_handle_action+0xa44>
  40f1d4:	ldur	w0, [x29, #-256]
  40f1d8:	bl	406c28 <abs@plt>
  40f1dc:	mov	w8, wzr
  40f1e0:	subs	w8, w8, w0, uxtb
  40f1e4:	str	w8, [sp, #64]
  40f1e8:	ldr	w8, [sp, #64]
  40f1ec:	str	w8, [sp, #280]
  40f1f0:	ldur	x0, [x29, #-16]
  40f1f4:	ldur	x1, [x29, #-88]
  40f1f8:	ldur	w2, [x29, #-60]
  40f1fc:	sub	x3, x29, #0x38
  40f200:	bl	415624 <bus_manager_shutdown_or_sleep_now_or_later>
  40f204:	stur	w0, [x29, #-92]
  40f208:	ldur	w8, [x29, #-92]
  40f20c:	cmp	w8, #0x0
  40f210:	cset	w8, ge  // ge = tcont
  40f214:	tbnz	w8, #0, 40f2e4 <manager_handle_action+0xb40>
  40f218:	mov	w8, #0x3                   	// #3
  40f21c:	str	w8, [sp, #276]
  40f220:	ldur	w8, [x29, #-92]
  40f224:	str	w8, [sp, #272]
  40f228:	str	wzr, [sp, #268]
  40f22c:	ldr	w0, [sp, #268]
  40f230:	bl	406c08 <log_get_max_level_realm@plt>
  40f234:	ldr	w8, [sp, #276]
  40f238:	and	w8, w8, #0x7
  40f23c:	cmp	w0, w8
  40f240:	b.lt	40f2b4 <manager_handle_action+0xb10>  // b.tstop
  40f244:	ldr	w8, [sp, #268]
  40f248:	ldr	w9, [sp, #276]
  40f24c:	orr	w0, w9, w8, lsl #10
  40f250:	ldr	w1, [sp, #272]
  40f254:	ldur	w8, [x29, #-24]
  40f258:	str	w0, [sp, #60]
  40f25c:	mov	w0, w8
  40f260:	str	w1, [sp, #56]
  40f264:	bl	40f30c <handle_action_to_string>
  40f268:	ldur	w1, [x29, #-92]
  40f26c:	sub	x10, x29, #0x38
  40f270:	str	x0, [sp, #48]
  40f274:	mov	x0, x10
  40f278:	bl	4071d8 <bus_error_message@plt>
  40f27c:	ldr	w8, [sp, #60]
  40f280:	str	x0, [sp, #40]
  40f284:	mov	w0, w8
  40f288:	ldr	w1, [sp, #56]
  40f28c:	ldr	x2, [sp, #256]
  40f290:	mov	w3, #0xa5                  	// #165
  40f294:	ldr	x4, [sp, #248]
  40f298:	adrp	x5, 441000 <_fini+0xc30>
  40f29c:	add	x5, x5, #0xc71
  40f2a0:	ldr	x6, [sp, #48]
  40f2a4:	ldr	x7, [sp, #40]
  40f2a8:	bl	406c18 <log_internal_realm@plt>
  40f2ac:	str	w0, [sp, #36]
  40f2b0:	b	40f2c8 <manager_handle_action+0xb24>
  40f2b4:	ldr	w0, [sp, #272]
  40f2b8:	bl	406c28 <abs@plt>
  40f2bc:	mov	w8, wzr
  40f2c0:	subs	w8, w8, w0, uxtb
  40f2c4:	str	w8, [sp, #36]
  40f2c8:	ldr	w8, [sp, #36]
  40f2cc:	str	w8, [sp, #264]
  40f2d0:	ldr	w8, [sp, #264]
  40f2d4:	stur	w8, [x29, #-4]
  40f2d8:	mov	w8, #0x1                   	// #1
  40f2dc:	stur	w8, [x29, #-112]
  40f2e0:	b	40f2f0 <manager_handle_action+0xb4c>
  40f2e4:	mov	w8, #0x1                   	// #1
  40f2e8:	stur	w8, [x29, #-4]
  40f2ec:	stur	w8, [x29, #-112]
  40f2f0:	sub	x0, x29, #0x38
  40f2f4:	bl	4071e8 <sd_bus_error_free@plt>
  40f2f8:	ldur	w0, [x29, #-4]
  40f2fc:	add	sp, sp, #0x220
  40f300:	ldr	x28, [sp, #16]
  40f304:	ldp	x29, x30, [sp], #32
  40f308:	ret

000000000040f30c <handle_action_to_string>:
  40f30c:	sub	sp, sp, #0x10
  40f310:	str	w0, [sp, #4]
  40f314:	ldr	w8, [sp, #4]
  40f318:	cmp	w8, #0x0
  40f31c:	cset	w8, lt  // lt = tstop
  40f320:	tbnz	w8, #0, 40f330 <handle_action_to_string+0x24>
  40f324:	ldr	w8, [sp, #4]
  40f328:	cmp	w8, #0xa
  40f32c:	b.lt	40f33c <handle_action_to_string+0x30>  // b.tstop
  40f330:	mov	x8, xzr
  40f334:	str	x8, [sp, #8]
  40f338:	b	40f35c <handle_action_to_string+0x50>
  40f33c:	ldrsw	x8, [sp, #4]
  40f340:	mov	x9, #0x8                   	// #8
  40f344:	mul	x8, x9, x8
  40f348:	adrp	x9, 45c000 <__FRAME_END__+0x10118>
  40f34c:	add	x9, x9, #0x3a8
  40f350:	add	x8, x9, x8
  40f354:	ldr	x8, [x8]
  40f358:	str	x8, [sp, #8]
  40f35c:	ldr	x0, [sp, #8]
  40f360:	add	sp, sp, #0x10
  40f364:	ret

000000000040f368 <freep>:
  40f368:	sub	sp, sp, #0x20
  40f36c:	stp	x29, x30, [sp, #16]
  40f370:	add	x29, sp, #0x10
  40f374:	str	x0, [sp, #8]
  40f378:	ldr	x8, [sp, #8]
  40f37c:	ldr	x0, [x8]
  40f380:	bl	406da8 <free@plt>
  40f384:	ldp	x29, x30, [sp, #16]
  40f388:	add	sp, sp, #0x20
  40f38c:	ret

000000000040f390 <strna>:
  40f390:	sub	sp, sp, #0x20
  40f394:	str	x0, [sp, #24]
  40f398:	ldr	x8, [sp, #24]
  40f39c:	str	x8, [sp, #16]
  40f3a0:	cbz	x8, 40f3b0 <strna+0x20>
  40f3a4:	ldr	x8, [sp, #16]
  40f3a8:	str	x8, [sp, #8]
  40f3ac:	b	40f3bc <strna+0x2c>
  40f3b0:	adrp	x8, 441000 <_fini+0xc30>
  40f3b4:	add	x8, x8, #0xd95
  40f3b8:	str	x8, [sp, #8]
  40f3bc:	ldr	x8, [sp, #8]
  40f3c0:	mov	x0, x8
  40f3c4:	add	sp, sp, #0x20
  40f3c8:	ret

000000000040f3cc <handle_action_from_string>:
  40f3cc:	sub	sp, sp, #0x20
  40f3d0:	stp	x29, x30, [sp, #16]
  40f3d4:	add	x29, sp, #0x10
  40f3d8:	adrp	x8, 45c000 <__FRAME_END__+0x10118>
  40f3dc:	add	x8, x8, #0x3a8
  40f3e0:	mov	x1, #0xa                   	// #10
  40f3e4:	str	x0, [sp, #8]
  40f3e8:	ldr	x2, [sp, #8]
  40f3ec:	mov	x0, x8
  40f3f0:	bl	4071f8 <string_table_lookup@plt>
  40f3f4:	ldp	x29, x30, [sp, #16]
  40f3f8:	add	sp, sp, #0x20
  40f3fc:	ret

000000000040f400 <config_parse_handle_action>:
  40f400:	sub	sp, sp, #0xb0
  40f404:	stp	x29, x30, [sp, #160]
  40f408:	add	x29, sp, #0xa0
  40f40c:	ldr	x8, [x29, #16]
  40f410:	ldr	x9, [x29, #24]
  40f414:	adrp	x10, 441000 <_fini+0xc30>
  40f418:	add	x10, x10, #0x90e
  40f41c:	add	x10, x10, #0x3
  40f420:	adrp	x11, 441000 <_fini+0xc30>
  40f424:	add	x11, x11, #0xc9d
  40f428:	stur	x0, [x29, #-16]
  40f42c:	stur	x1, [x29, #-24]
  40f430:	stur	w2, [x29, #-28]
  40f434:	stur	x3, [x29, #-40]
  40f438:	stur	w4, [x29, #-44]
  40f43c:	stur	x5, [x29, #-56]
  40f440:	stur	w6, [x29, #-60]
  40f444:	stur	x7, [x29, #-72]
  40f448:	str	x8, [sp, #80]
  40f44c:	str	x9, [sp, #72]
  40f450:	ldr	x8, [sp, #80]
  40f454:	str	x8, [sp, #64]
  40f458:	str	x10, [sp, #40]
  40f45c:	str	x11, [sp, #32]
  40f460:	ldur	x8, [x29, #-24]
  40f464:	cmp	x8, #0x0
  40f468:	cset	w9, ne  // ne = any
  40f46c:	mov	w10, #0x1                   	// #1
  40f470:	eor	w9, w9, #0x1
  40f474:	eor	w9, w9, w10
  40f478:	eor	w9, w9, w10
  40f47c:	and	w9, w9, #0x1
  40f480:	mov	w0, w9
  40f484:	sxtw	x8, w0
  40f488:	cbz	x8, 40f4ac <config_parse_handle_action+0xac>
  40f48c:	mov	w8, wzr
  40f490:	mov	w0, w8
  40f494:	adrp	x1, 441000 <_fini+0xc30>
  40f498:	add	x1, x1, #0xc94
  40f49c:	ldr	x2, [sp, #40]
  40f4a0:	mov	w3, #0xb8                  	// #184
  40f4a4:	ldr	x4, [sp, #32]
  40f4a8:	bl	406c68 <log_assert_failed_realm@plt>
  40f4ac:	ldur	x8, [x29, #-56]
  40f4b0:	cmp	x8, #0x0
  40f4b4:	cset	w9, ne  // ne = any
  40f4b8:	mov	w10, #0x1                   	// #1
  40f4bc:	eor	w9, w9, #0x1
  40f4c0:	eor	w9, w9, w10
  40f4c4:	eor	w9, w9, w10
  40f4c8:	and	w9, w9, #0x1
  40f4cc:	mov	w0, w9
  40f4d0:	sxtw	x8, w0
  40f4d4:	cbz	x8, 40f4f8 <config_parse_handle_action+0xf8>
  40f4d8:	mov	w8, wzr
  40f4dc:	mov	w0, w8
  40f4e0:	adrp	x1, 441000 <_fini+0xc30>
  40f4e4:	add	x1, x1, #0xd33
  40f4e8:	ldr	x2, [sp, #40]
  40f4ec:	mov	w3, #0xb8                  	// #184
  40f4f0:	ldr	x4, [sp, #32]
  40f4f4:	bl	406c68 <log_assert_failed_realm@plt>
  40f4f8:	ldur	x8, [x29, #-72]
  40f4fc:	cmp	x8, #0x0
  40f500:	cset	w9, ne  // ne = any
  40f504:	mov	w10, #0x1                   	// #1
  40f508:	eor	w9, w9, #0x1
  40f50c:	eor	w9, w9, w10
  40f510:	eor	w9, w9, w10
  40f514:	and	w9, w9, #0x1
  40f518:	mov	w0, w9
  40f51c:	sxtw	x8, w0
  40f520:	cbz	x8, 40f544 <config_parse_handle_action+0x144>
  40f524:	mov	w8, wzr
  40f528:	mov	w0, w8
  40f52c:	adrp	x1, 441000 <_fini+0xc30>
  40f530:	add	x1, x1, #0xd3a
  40f534:	ldr	x2, [sp, #40]
  40f538:	mov	w3, #0xb8                  	// #184
  40f53c:	ldr	x4, [sp, #32]
  40f540:	bl	406c68 <log_assert_failed_realm@plt>
  40f544:	ldr	x8, [sp, #80]
  40f548:	cmp	x8, #0x0
  40f54c:	cset	w9, ne  // ne = any
  40f550:	mov	w10, #0x1                   	// #1
  40f554:	eor	w9, w9, #0x1
  40f558:	eor	w9, w9, w10
  40f55c:	eor	w9, w9, w10
  40f560:	and	w9, w9, #0x1
  40f564:	mov	w0, w9
  40f568:	sxtw	x8, w0
  40f56c:	cbz	x8, 40f590 <config_parse_handle_action+0x190>
  40f570:	mov	w8, wzr
  40f574:	mov	w0, w8
  40f578:	adrp	x1, 441000 <_fini+0xc30>
  40f57c:	add	x1, x1, #0xd41
  40f580:	ldr	x2, [sp, #40]
  40f584:	mov	w3, #0xb8                  	// #184
  40f588:	ldr	x4, [sp, #32]
  40f58c:	bl	406c68 <log_assert_failed_realm@plt>
  40f590:	ldur	x0, [x29, #-72]
  40f594:	bl	40f3cc <handle_action_from_string>
  40f598:	str	w0, [sp, #60]
  40f59c:	ldr	w8, [sp, #60]
  40f5a0:	cmp	w8, #0x0
  40f5a4:	cset	w8, ge  // ge = tcont
  40f5a8:	tbnz	w8, #0, 40f644 <config_parse_handle_action+0x244>
  40f5ac:	mov	w8, #0x3                   	// #3
  40f5b0:	str	w8, [sp, #56]
  40f5b4:	mov	w8, wzr
  40f5b8:	str	wzr, [sp, #52]
  40f5bc:	mov	w0, w8
  40f5c0:	bl	406c08 <log_get_max_level_realm@plt>
  40f5c4:	ldr	w8, [sp, #56]
  40f5c8:	and	w8, w8, #0x7
  40f5cc:	cmp	w0, w8
  40f5d0:	b.lt	40f620 <config_parse_handle_action+0x220>  // b.tstop
  40f5d4:	ldur	x0, [x29, #-16]
  40f5d8:	ldr	w1, [sp, #56]
  40f5dc:	ldur	x2, [x29, #-24]
  40f5e0:	ldur	w3, [x29, #-28]
  40f5e4:	ldr	w4, [sp, #52]
  40f5e8:	ldur	x8, [x29, #-72]
  40f5ec:	ldr	x5, [sp, #40]
  40f5f0:	mov	w6, #0xb8                  	// #184
  40f5f4:	adrp	x7, 441000 <_fini+0xc30>
  40f5f8:	add	x7, x7, #0xd46
  40f5fc:	mov	x9, sp
  40f600:	adrp	x10, 441000 <_fini+0xc30>
  40f604:	add	x10, x10, #0xd61
  40f608:	str	x10, [x9]
  40f60c:	mov	x9, sp
  40f610:	str	x8, [x9, #8]
  40f614:	bl	407208 <log_syntax_internal@plt>
  40f618:	str	w0, [sp, #28]
  40f61c:	b	40f634 <config_parse_handle_action+0x234>
  40f620:	ldr	w0, [sp, #52]
  40f624:	bl	406c28 <abs@plt>
  40f628:	mov	w8, wzr
  40f62c:	subs	w8, w8, w0, uxtb
  40f630:	str	w8, [sp, #28]
  40f634:	ldr	w8, [sp, #28]
  40f638:	str	w8, [sp, #48]
  40f63c:	stur	wzr, [x29, #-4]
  40f640:	b	40f654 <config_parse_handle_action+0x254>
  40f644:	ldr	w8, [sp, #60]
  40f648:	ldr	x9, [sp, #64]
  40f64c:	str	w8, [x9]
  40f650:	stur	wzr, [x29, #-4]
  40f654:	ldur	w0, [x29, #-4]
  40f658:	ldp	x29, x30, [sp, #160]
  40f65c:	add	sp, sp, #0xb0
  40f660:	ret

000000000040f664 <button_new>:
  40f664:	sub	sp, sp, #0x40
  40f668:	stp	x29, x30, [sp, #48]
  40f66c:	add	x29, sp, #0x30
  40f670:	adrp	x8, 441000 <_fini+0xc30>
  40f674:	add	x8, x8, #0xdc0
  40f678:	add	x8, x8, #0x3
  40f67c:	stur	x0, [x29, #-16]
  40f680:	str	x1, [sp, #24]
  40f684:	str	x8, [sp, #8]
  40f688:	ldur	x8, [x29, #-16]
  40f68c:	cmp	x8, #0x0
  40f690:	cset	w9, ne  // ne = any
  40f694:	mov	w10, #0x1                   	// #1
  40f698:	eor	w9, w9, #0x1
  40f69c:	eor	w9, w9, w10
  40f6a0:	eor	w9, w9, w10
  40f6a4:	and	w9, w9, #0x1
  40f6a8:	mov	w0, w9
  40f6ac:	sxtw	x8, w0
  40f6b0:	cbz	x8, 40f6d8 <button_new+0x74>
  40f6b4:	mov	w8, wzr
  40f6b8:	mov	w0, w8
  40f6bc:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  40f6c0:	add	x1, x1, #0x5ef
  40f6c4:	ldr	x2, [sp, #8]
  40f6c8:	mov	w3, #0x20                  	// #32
  40f6cc:	adrp	x4, 441000 <_fini+0xc30>
  40f6d0:	add	x4, x4, #0xddd
  40f6d4:	bl	406c68 <log_assert_failed_realm@plt>
  40f6d8:	ldr	x8, [sp, #24]
  40f6dc:	cmp	x8, #0x0
  40f6e0:	cset	w9, ne  // ne = any
  40f6e4:	mov	w10, #0x1                   	// #1
  40f6e8:	eor	w9, w9, #0x1
  40f6ec:	eor	w9, w9, w10
  40f6f0:	eor	w9, w9, w10
  40f6f4:	and	w9, w9, #0x1
  40f6f8:	mov	w0, w9
  40f6fc:	sxtw	x8, w0
  40f700:	cbz	x8, 40f728 <button_new+0xc4>
  40f704:	mov	w8, wzr
  40f708:	mov	w0, w8
  40f70c:	adrp	x1, 441000 <_fini+0xc30>
  40f710:	add	x1, x1, #0xe09
  40f714:	ldr	x2, [sp, #8]
  40f718:	mov	w3, #0x21                  	// #33
  40f71c:	adrp	x4, 441000 <_fini+0xc30>
  40f720:	add	x4, x4, #0xddd
  40f724:	bl	406c68 <log_assert_failed_realm@plt>
  40f728:	mov	x0, #0x1                   	// #1
  40f72c:	mov	x1, #0x30                  	// #48
  40f730:	bl	407218 <calloc@plt>
  40f734:	str	x0, [sp, #16]
  40f738:	ldr	x8, [sp, #16]
  40f73c:	cbnz	x8, 40f74c <button_new+0xe8>
  40f740:	mov	x8, xzr
  40f744:	stur	x8, [x29, #-8]
  40f748:	b	40f7d8 <button_new+0x174>
  40f74c:	ldr	x0, [sp, #24]
  40f750:	bl	407168 <strdup@plt>
  40f754:	ldr	x8, [sp, #16]
  40f758:	str	x0, [x8, #24]
  40f75c:	ldr	x8, [sp, #16]
  40f760:	ldr	x8, [x8, #24]
  40f764:	cbnz	x8, 40f778 <button_new+0x114>
  40f768:	ldr	x0, [sp, #16]
  40f76c:	bl	40f7e8 <mfree>
  40f770:	stur	x0, [x29, #-8]
  40f774:	b	40f7d8 <button_new+0x174>
  40f778:	ldur	x8, [x29, #-16]
  40f77c:	ldr	x0, [x8, #64]
  40f780:	ldr	x8, [sp, #16]
  40f784:	ldr	x1, [x8, #24]
  40f788:	ldr	x2, [sp, #16]
  40f78c:	bl	407228 <hashmap_put@plt>
  40f790:	cmp	w0, #0x0
  40f794:	cset	w9, ge  // ge = tcont
  40f798:	tbnz	w9, #0, 40f7b8 <button_new+0x154>
  40f79c:	ldr	x8, [sp, #16]
  40f7a0:	ldr	x0, [x8, #24]
  40f7a4:	bl	406da8 <free@plt>
  40f7a8:	ldr	x0, [sp, #16]
  40f7ac:	bl	40f7e8 <mfree>
  40f7b0:	stur	x0, [x29, #-8]
  40f7b4:	b	40f7d8 <button_new+0x174>
  40f7b8:	ldur	x8, [x29, #-16]
  40f7bc:	ldr	x9, [sp, #16]
  40f7c0:	str	x8, [x9]
  40f7c4:	ldr	x8, [sp, #16]
  40f7c8:	mov	w10, #0xffffffff            	// #-1
  40f7cc:	str	w10, [x8, #40]
  40f7d0:	ldr	x8, [sp, #16]
  40f7d4:	stur	x8, [x29, #-8]
  40f7d8:	ldur	x0, [x29, #-8]
  40f7dc:	ldp	x29, x30, [sp, #48]
  40f7e0:	add	sp, sp, #0x40
  40f7e4:	ret

000000000040f7e8 <mfree>:
  40f7e8:	sub	sp, sp, #0x20
  40f7ec:	stp	x29, x30, [sp, #16]
  40f7f0:	add	x29, sp, #0x10
  40f7f4:	mov	x8, xzr
  40f7f8:	str	x0, [sp, #8]
  40f7fc:	ldr	x0, [sp, #8]
  40f800:	str	x8, [sp]
  40f804:	bl	406da8 <free@plt>
  40f808:	ldr	x0, [sp]
  40f80c:	ldp	x29, x30, [sp, #16]
  40f810:	add	sp, sp, #0x20
  40f814:	ret

000000000040f818 <button_free>:
  40f818:	sub	sp, sp, #0x20
  40f81c:	stp	x29, x30, [sp, #16]
  40f820:	add	x29, sp, #0x10
  40f824:	adrp	x8, 441000 <_fini+0xc30>
  40f828:	add	x8, x8, #0xdc0
  40f82c:	add	x2, x8, #0x3
  40f830:	str	x0, [sp, #8]
  40f834:	str	x2, [sp]
  40f838:	ldr	x8, [sp, #8]
  40f83c:	cmp	x8, #0x0
  40f840:	cset	w9, ne  // ne = any
  40f844:	mov	w10, #0x1                   	// #1
  40f848:	eor	w9, w9, #0x1
  40f84c:	eor	w9, w9, w10
  40f850:	eor	w9, w9, w10
  40f854:	and	w9, w9, #0x1
  40f858:	mov	w0, w9
  40f85c:	sxtw	x8, w0
  40f860:	cbz	x8, 40f888 <button_free+0x70>
  40f864:	mov	w8, wzr
  40f868:	mov	w0, w8
  40f86c:	adrp	x1, 441000 <_fini+0xc30>
  40f870:	add	x1, x1, #0xe0e
  40f874:	ldr	x2, [sp]
  40f878:	mov	w3, #0x37                  	// #55
  40f87c:	adrp	x4, 441000 <_fini+0xc30>
  40f880:	add	x4, x4, #0xe10
  40f884:	bl	406c68 <log_assert_failed_realm@plt>
  40f888:	ldr	x8, [sp, #8]
  40f88c:	ldr	x8, [x8]
  40f890:	ldr	x0, [x8, #64]
  40f894:	ldr	x8, [sp, #8]
  40f898:	ldr	x1, [x8, #24]
  40f89c:	bl	40f90c <hashmap_remove>
  40f8a0:	ldr	x8, [sp, #8]
  40f8a4:	ldr	x8, [x8, #8]
  40f8a8:	mov	x0, x8
  40f8ac:	bl	406d28 <sd_event_source_unref@plt>
  40f8b0:	ldr	x8, [sp, #8]
  40f8b4:	ldr	x8, [x8, #16]
  40f8b8:	mov	x0, x8
  40f8bc:	bl	406d28 <sd_event_source_unref@plt>
  40f8c0:	ldr	x8, [sp, #8]
  40f8c4:	ldr	w9, [x8, #40]
  40f8c8:	cmp	w9, #0x0
  40f8cc:	cset	w9, lt  // lt = tstop
  40f8d0:	tbnz	w9, #0, 40f8e0 <button_free+0xc8>
  40f8d4:	ldr	x8, [sp, #8]
  40f8d8:	ldr	w0, [x8, #40]
  40f8dc:	bl	407238 <close@plt>
  40f8e0:	ldr	x8, [sp, #8]
  40f8e4:	ldr	x0, [x8, #24]
  40f8e8:	bl	406da8 <free@plt>
  40f8ec:	ldr	x8, [sp, #8]
  40f8f0:	ldr	x0, [x8, #32]
  40f8f4:	bl	406da8 <free@plt>
  40f8f8:	ldr	x0, [sp, #8]
  40f8fc:	bl	406da8 <free@plt>
  40f900:	ldp	x29, x30, [sp, #16]
  40f904:	add	sp, sp, #0x20
  40f908:	ret

000000000040f90c <hashmap_remove>:
  40f90c:	sub	sp, sp, #0x20
  40f910:	stp	x29, x30, [sp, #16]
  40f914:	add	x29, sp, #0x10
  40f918:	str	x0, [sp, #8]
  40f91c:	str	x1, [sp]
  40f920:	ldr	x0, [sp, #8]
  40f924:	ldr	x1, [sp]
  40f928:	bl	407248 <internal_hashmap_remove@plt>
  40f92c:	ldp	x29, x30, [sp, #16]
  40f930:	add	sp, sp, #0x20
  40f934:	ret

000000000040f938 <button_set_seat>:
  40f938:	sub	sp, sp, #0x40
  40f93c:	stp	x29, x30, [sp, #48]
  40f940:	add	x29, sp, #0x30
  40f944:	adrp	x8, 441000 <_fini+0xc30>
  40f948:	add	x8, x8, #0xdc0
  40f94c:	add	x8, x8, #0x3
  40f950:	stur	x0, [x29, #-16]
  40f954:	str	x1, [sp, #24]
  40f958:	str	x8, [sp, #8]
  40f95c:	ldur	x8, [x29, #-16]
  40f960:	cmp	x8, #0x0
  40f964:	cset	w9, ne  // ne = any
  40f968:	mov	w10, #0x1                   	// #1
  40f96c:	eor	w9, w9, #0x1
  40f970:	eor	w9, w9, w10
  40f974:	eor	w9, w9, w10
  40f978:	and	w9, w9, #0x1
  40f97c:	mov	w0, w9
  40f980:	sxtw	x8, w0
  40f984:	cbz	x8, 40f9ac <button_set_seat+0x74>
  40f988:	mov	w8, wzr
  40f98c:	mov	w0, w8
  40f990:	adrp	x1, 441000 <_fini+0xc30>
  40f994:	add	x1, x1, #0xe0e
  40f998:	ldr	x2, [sp, #8]
  40f99c:	mov	w3, #0x4c                  	// #76
  40f9a0:	adrp	x4, 441000 <_fini+0xc30>
  40f9a4:	add	x4, x4, #0xe2b
  40f9a8:	bl	406c68 <log_assert_failed_realm@plt>
  40f9ac:	ldr	x8, [sp, #24]
  40f9b0:	cmp	x8, #0x0
  40f9b4:	cset	w9, ne  // ne = any
  40f9b8:	mov	w10, #0x1                   	// #1
  40f9bc:	eor	w9, w9, #0x1
  40f9c0:	eor	w9, w9, w10
  40f9c4:	eor	w9, w9, w10
  40f9c8:	and	w9, w9, #0x1
  40f9cc:	mov	w0, w9
  40f9d0:	sxtw	x8, w0
  40f9d4:	cbz	x8, 40f9fc <button_set_seat+0xc4>
  40f9d8:	mov	w8, wzr
  40f9dc:	mov	w0, w8
  40f9e0:	adrp	x1, 441000 <_fini+0xc30>
  40f9e4:	add	x1, x1, #0xe57
  40f9e8:	ldr	x2, [sp, #8]
  40f9ec:	mov	w3, #0x4d                  	// #77
  40f9f0:	adrp	x4, 441000 <_fini+0xc30>
  40f9f4:	add	x4, x4, #0xe2b
  40f9f8:	bl	406c68 <log_assert_failed_realm@plt>
  40f9fc:	ldr	x0, [sp, #24]
  40fa00:	bl	407168 <strdup@plt>
  40fa04:	str	x0, [sp, #16]
  40fa08:	ldr	x8, [sp, #16]
  40fa0c:	cbnz	x8, 40fa1c <button_set_seat+0xe4>
  40fa10:	mov	w8, #0xfffffff4            	// #-12
  40fa14:	stur	w8, [x29, #-4]
  40fa18:	b	40fa38 <button_set_seat+0x100>
  40fa1c:	ldur	x8, [x29, #-16]
  40fa20:	ldr	x0, [x8, #32]
  40fa24:	bl	406da8 <free@plt>
  40fa28:	ldr	x8, [sp, #16]
  40fa2c:	ldur	x9, [x29, #-16]
  40fa30:	str	x8, [x9, #32]
  40fa34:	stur	wzr, [x29, #-4]
  40fa38:	ldur	w0, [x29, #-4]
  40fa3c:	ldp	x29, x30, [sp, #48]
  40fa40:	add	sp, sp, #0x40
  40fa44:	ret

000000000040fa48 <button_open>:
  40fa48:	stp	x29, x30, [sp, #-32]!
  40fa4c:	stp	x28, x19, [sp, #16]
  40fa50:	mov	x29, sp
  40fa54:	sub	sp, sp, #0x220
  40fa58:	mov	x19, sp
  40fa5c:	add	x8, x19, #0xc8
  40fa60:	mov	w9, #0xffffffff            	// #-1
  40fa64:	adrp	x10, 441000 <_fini+0xc30>
  40fa68:	add	x10, x10, #0xdc0
  40fa6c:	add	x10, x10, #0x3
  40fa70:	adrp	x11, 441000 <_fini+0xc30>
  40fa74:	add	x11, x11, #0xeca
  40fa78:	adrp	x12, 441000 <_fini+0xc30>
  40fa7c:	add	x12, x12, #0xe5a
  40fa80:	str	x0, [x8, #328]
  40fa84:	stur	w9, [x29, #-20]
  40fa88:	str	x8, [x19, #56]
  40fa8c:	str	x10, [x19, #48]
  40fa90:	str	x11, [x19, #40]
  40fa94:	str	x12, [x19, #32]
  40fa98:	ldr	x8, [x19, #56]
  40fa9c:	ldr	x9, [x8, #328]
  40faa0:	cmp	x9, #0x0
  40faa4:	cset	w10, ne  // ne = any
  40faa8:	mov	w11, #0x1                   	// #1
  40faac:	eor	w10, w10, #0x1
  40fab0:	eor	w10, w10, w11
  40fab4:	eor	w10, w10, w11
  40fab8:	and	w10, w10, #0x1
  40fabc:	mov	w0, w10
  40fac0:	sxtw	x9, w0
  40fac4:	cbz	x9, 40fae8 <button_open+0xa0>
  40fac8:	mov	w8, wzr
  40facc:	mov	w0, w8
  40fad0:	adrp	x1, 441000 <_fini+0xc30>
  40fad4:	add	x1, x1, #0xe0e
  40fad8:	ldr	x2, [x19, #48]
  40fadc:	mov	w3, #0x13f                 	// #319
  40fae0:	ldr	x4, [x19, #32]
  40fae4:	bl	406c68 <log_assert_failed_realm@plt>
  40fae8:	ldr	x8, [x19, #56]
  40faec:	ldr	x9, [x8, #328]
  40faf0:	ldr	w0, [x9, #40]
  40faf4:	bl	406d38 <safe_close@plt>
  40faf8:	ldr	x8, [x19, #56]
  40fafc:	ldr	x9, [x8, #328]
  40fb00:	str	w0, [x9, #40]
  40fb04:	add	x9, x19, #0xe8
  40fb08:	adrp	x10, 441000 <_fini+0xc30>
  40fb0c:	add	x10, x10, #0xe74
  40fb10:	str	x10, [x8, #32]
  40fb14:	ldr	x10, [x8, #328]
  40fb18:	ldr	x10, [x10, #24]
  40fb1c:	str	x10, [x9, #8]
  40fb20:	str	xzr, [x8, #8]
  40fb24:	str	xzr, [x8]
  40fb28:	ldr	x8, [x19, #56]
  40fb2c:	ldr	x9, [x8]
  40fb30:	mov	w10, #0x0                   	// #0
  40fb34:	cmp	x9, #0x2
  40fb38:	str	w10, [x19, #28]
  40fb3c:	b.cs	40fb68 <button_open+0x120>  // b.hs, b.nlast
  40fb40:	ldr	x8, [x19, #56]
  40fb44:	ldr	x9, [x8]
  40fb48:	mov	x10, #0x8                   	// #8
  40fb4c:	mul	x9, x10, x9
  40fb50:	add	x10, x19, #0xe8
  40fb54:	add	x9, x10, x9
  40fb58:	ldr	x9, [x9]
  40fb5c:	cmp	x9, #0x0
  40fb60:	cset	w11, ne  // ne = any
  40fb64:	str	w11, [x19, #28]
  40fb68:	ldr	w8, [x19, #28]
  40fb6c:	tbnz	w8, #0, 40fb74 <button_open+0x12c>
  40fb70:	b	40fbb8 <button_open+0x170>
  40fb74:	ldr	x8, [x19, #56]
  40fb78:	ldr	x9, [x8]
  40fb7c:	mov	x10, #0x8                   	// #8
  40fb80:	mul	x9, x10, x9
  40fb84:	add	x10, x19, #0xe8
  40fb88:	add	x9, x10, x9
  40fb8c:	ldr	x0, [x9]
  40fb90:	bl	4070a8 <strlen@plt>
  40fb94:	ldr	x8, [x19, #56]
  40fb98:	ldr	x9, [x8, #8]
  40fb9c:	add	x9, x9, x0
  40fba0:	str	x9, [x8, #8]
  40fba4:	ldr	x8, [x19, #56]
  40fba8:	ldr	x9, [x8]
  40fbac:	add	x9, x9, #0x1
  40fbb0:	str	x9, [x8]
  40fbb4:	b	40fb28 <button_open+0xe0>
  40fbb8:	ldr	x8, [x19, #56]
  40fbbc:	ldr	x9, [x8, #8]
  40fbc0:	add	x9, x9, #0x1
  40fbc4:	str	x9, [x19, #192]
  40fbc8:	ldr	x1, [x19, #192]
  40fbcc:	mov	x0, #0x1                   	// #1
  40fbd0:	bl	410218 <size_multiply_overflow>
  40fbd4:	mov	w8, #0x1                   	// #1
  40fbd8:	eor	w9, w0, #0x1
  40fbdc:	eor	w9, w9, w8
  40fbe0:	eor	w9, w9, w8
  40fbe4:	eor	w8, w9, w8
  40fbe8:	and	w8, w8, #0x1
  40fbec:	mov	w1, w8
  40fbf0:	sxtw	x10, w1
  40fbf4:	cbz	x10, 40fc18 <button_open+0x1d0>
  40fbf8:	mov	w8, wzr
  40fbfc:	mov	w0, w8
  40fc00:	adrp	x1, 441000 <_fini+0xc30>
  40fc04:	add	x1, x1, #0xe80
  40fc08:	ldr	x2, [x19, #48]
  40fc0c:	mov	w3, #0x143                 	// #323
  40fc10:	ldr	x4, [x19, #32]
  40fc14:	bl	406c68 <log_assert_failed_realm@plt>
  40fc18:	ldr	x8, [x19, #192]
  40fc1c:	mov	x9, #0x1                   	// #1
  40fc20:	mul	x8, x9, x8
  40fc24:	cmp	x8, #0x400, lsl #12
  40fc28:	cset	w10, ls  // ls = plast
  40fc2c:	mov	w11, #0x1                   	// #1
  40fc30:	eor	w10, w10, #0x1
  40fc34:	eor	w10, w10, w11
  40fc38:	eor	w10, w10, w11
  40fc3c:	and	w10, w10, #0x1
  40fc40:	mov	w0, w10
  40fc44:	sxtw	x8, w0
  40fc48:	cbz	x8, 40fc6c <button_open+0x224>
  40fc4c:	mov	w8, wzr
  40fc50:	mov	w0, w8
  40fc54:	adrp	x1, 441000 <_fini+0xc30>
  40fc58:	add	x1, x1, #0xeab
  40fc5c:	ldr	x2, [x19, #48]
  40fc60:	mov	w3, #0x143                 	// #323
  40fc64:	ldr	x4, [x19, #32]
  40fc68:	bl	406c68 <log_assert_failed_realm@plt>
  40fc6c:	ldr	x8, [x19, #192]
  40fc70:	mov	x9, #0x1                   	// #1
  40fc74:	mul	x8, x9, x8
  40fc78:	mul	x8, x8, x9
  40fc7c:	add	x8, x8, #0xf
  40fc80:	and	x8, x8, #0xfffffffffffffff0
  40fc84:	mov	x9, sp
  40fc88:	subs	x8, x9, x8
  40fc8c:	mov	sp, x8
  40fc90:	str	x8, [x19, #184]
  40fc94:	ldr	x8, [x19, #184]
  40fc98:	ldr	x9, [x19, #56]
  40fc9c:	str	x8, [x9, #24]
  40fca0:	str	x8, [x9, #16]
  40fca4:	str	xzr, [x9]
  40fca8:	ldr	x8, [x19, #56]
  40fcac:	ldr	x9, [x8]
  40fcb0:	mov	w10, #0x0                   	// #0
  40fcb4:	cmp	x9, #0x2
  40fcb8:	str	w10, [x19, #24]
  40fcbc:	b.cs	40fce8 <button_open+0x2a0>  // b.hs, b.nlast
  40fcc0:	ldr	x8, [x19, #56]
  40fcc4:	ldr	x9, [x8]
  40fcc8:	mov	x10, #0x8                   	// #8
  40fccc:	mul	x9, x10, x9
  40fcd0:	add	x10, x19, #0xe8
  40fcd4:	add	x9, x10, x9
  40fcd8:	ldr	x9, [x9]
  40fcdc:	cmp	x9, #0x0
  40fce0:	cset	w11, ne  // ne = any
  40fce4:	str	w11, [x19, #24]
  40fce8:	ldr	w8, [x19, #24]
  40fcec:	tbnz	w8, #0, 40fcf4 <button_open+0x2ac>
  40fcf0:	b	40fd34 <button_open+0x2ec>
  40fcf4:	ldr	x8, [x19, #56]
  40fcf8:	ldr	x0, [x8, #16]
  40fcfc:	ldr	x9, [x8]
  40fd00:	mov	x10, #0x8                   	// #8
  40fd04:	mul	x9, x10, x9
  40fd08:	add	x10, x19, #0xe8
  40fd0c:	add	x9, x10, x9
  40fd10:	ldr	x1, [x9]
  40fd14:	bl	407258 <stpcpy@plt>
  40fd18:	ldr	x8, [x19, #56]
  40fd1c:	str	x0, [x8, #16]
  40fd20:	ldr	x8, [x19, #56]
  40fd24:	ldr	x9, [x8]
  40fd28:	add	x9, x9, #0x1
  40fd2c:	str	x9, [x8]
  40fd30:	b	40fca8 <button_open+0x260>
  40fd34:	ldr	x8, [x19, #56]
  40fd38:	ldr	x9, [x8, #16]
  40fd3c:	mov	w10, #0x0                   	// #0
  40fd40:	strb	w10, [x9]
  40fd44:	ldr	x9, [x8, #24]
  40fd48:	str	x9, [x19, #176]
  40fd4c:	ldr	x9, [x19, #176]
  40fd50:	str	x9, [x8, #312]
  40fd54:	ldr	x0, [x8, #312]
  40fd58:	mov	w1, #0x902                 	// #2306
  40fd5c:	movk	w1, #0x8, lsl #16
  40fd60:	bl	406df8 <open64@plt>
  40fd64:	stur	w0, [x29, #-20]
  40fd68:	ldur	w10, [x29, #-20]
  40fd6c:	cmp	w10, #0x0
  40fd70:	cset	w10, ge  // ge = tcont
  40fd74:	tbnz	w10, #0, 40fe10 <button_open+0x3c8>
  40fd78:	mov	w8, #0x4                   	// #4
  40fd7c:	str	w8, [x19, #172]
  40fd80:	bl	406e08 <__errno_location@plt>
  40fd84:	ldr	w8, [x0]
  40fd88:	str	w8, [x19, #168]
  40fd8c:	str	wzr, [x19, #164]
  40fd90:	ldr	w0, [x19, #164]
  40fd94:	bl	406c08 <log_get_max_level_realm@plt>
  40fd98:	ldr	w8, [x19, #172]
  40fd9c:	and	w8, w8, #0x7
  40fda0:	cmp	w0, w8
  40fda4:	b.lt	40fde0 <button_open+0x398>  // b.tstop
  40fda8:	ldr	w8, [x19, #164]
  40fdac:	ldr	w9, [x19, #172]
  40fdb0:	orr	w0, w9, w8, lsl #10
  40fdb4:	ldr	w1, [x19, #168]
  40fdb8:	ldr	x10, [x19, #56]
  40fdbc:	ldr	x6, [x10, #312]
  40fdc0:	ldr	x2, [x19, #48]
  40fdc4:	mov	w3, #0x147                 	// #327
  40fdc8:	ldr	x4, [x19, #40]
  40fdcc:	adrp	x5, 441000 <_fini+0xc30>
  40fdd0:	add	x5, x5, #0xed6
  40fdd4:	bl	406c18 <log_internal_realm@plt>
  40fdd8:	str	w0, [x19, #20]
  40fddc:	b	40fdf4 <button_open+0x3ac>
  40fde0:	ldr	w0, [x19, #168]
  40fde4:	bl	406c28 <abs@plt>
  40fde8:	mov	w8, wzr
  40fdec:	subs	w8, w8, w0, uxtb
  40fdf0:	str	w8, [x19, #20]
  40fdf4:	ldr	w8, [x19, #20]
  40fdf8:	str	w8, [x19, #160]
  40fdfc:	ldr	w8, [x19, #160]
  40fe00:	stur	w8, [x29, #-4]
  40fe04:	mov	w8, #0x1                   	// #1
  40fe08:	str	w8, [x19, #156]
  40fe0c:	b	4101d4 <button_open+0x78c>
  40fe10:	ldur	w0, [x29, #-20]
  40fe14:	bl	410280 <button_suitable>
  40fe18:	str	w0, [x19, #252]
  40fe1c:	ldr	w8, [x19, #252]
  40fe20:	cmp	w8, #0x0
  40fe24:	cset	w8, ge  // ge = tcont
  40fe28:	tbnz	w8, #0, 40fec0 <button_open+0x478>
  40fe2c:	mov	w8, #0x4                   	// #4
  40fe30:	str	w8, [x19, #152]
  40fe34:	ldr	w8, [x19, #252]
  40fe38:	str	w8, [x19, #148]
  40fe3c:	str	wzr, [x19, #144]
  40fe40:	ldr	w0, [x19, #144]
  40fe44:	bl	406c08 <log_get_max_level_realm@plt>
  40fe48:	ldr	w8, [x19, #152]
  40fe4c:	and	w8, w8, #0x7
  40fe50:	cmp	w0, w8
  40fe54:	b.lt	40fe90 <button_open+0x448>  // b.tstop
  40fe58:	ldr	w8, [x19, #144]
  40fe5c:	ldr	w9, [x19, #152]
  40fe60:	orr	w0, w9, w8, lsl #10
  40fe64:	ldr	w1, [x19, #148]
  40fe68:	ldr	x10, [x19, #56]
  40fe6c:	ldr	x6, [x10, #312]
  40fe70:	ldr	x2, [x19, #48]
  40fe74:	mov	w3, #0x14b                 	// #331
  40fe78:	ldr	x4, [x19, #40]
  40fe7c:	adrp	x5, 441000 <_fini+0xc30>
  40fe80:	add	x5, x5, #0xeec
  40fe84:	bl	406c18 <log_internal_realm@plt>
  40fe88:	str	w0, [x19, #16]
  40fe8c:	b	40fea4 <button_open+0x45c>
  40fe90:	ldr	w0, [x19, #148]
  40fe94:	bl	406c28 <abs@plt>
  40fe98:	mov	w8, wzr
  40fe9c:	subs	w8, w8, w0, uxtb
  40fea0:	str	w8, [x19, #16]
  40fea4:	ldr	w8, [x19, #16]
  40fea8:	str	w8, [x19, #140]
  40feac:	ldr	w8, [x19, #140]
  40feb0:	stur	w8, [x29, #-4]
  40feb4:	mov	w8, #0x1                   	// #1
  40feb8:	str	w8, [x19, #156]
  40febc:	b	4101d4 <button_open+0x78c>
  40fec0:	ldr	w8, [x19, #252]
  40fec4:	cbnz	w8, 40ff60 <button_open+0x518>
  40fec8:	mov	w8, #0x7                   	// #7
  40fecc:	str	w8, [x19, #136]
  40fed0:	mov	w8, #0x63                  	// #99
  40fed4:	movk	w8, #0x4000, lsl #16
  40fed8:	str	w8, [x19, #132]
  40fedc:	str	wzr, [x19, #128]
  40fee0:	ldr	w0, [x19, #128]
  40fee4:	bl	406c08 <log_get_max_level_realm@plt>
  40fee8:	ldr	w8, [x19, #136]
  40feec:	and	w8, w8, #0x7
  40fef0:	cmp	w0, w8
  40fef4:	b.lt	40ff30 <button_open+0x4e8>  // b.tstop
  40fef8:	ldr	w8, [x19, #128]
  40fefc:	ldr	w9, [x19, #136]
  40ff00:	orr	w0, w9, w8, lsl #10
  40ff04:	ldr	w1, [x19, #132]
  40ff08:	ldr	x10, [x19, #56]
  40ff0c:	ldr	x6, [x10, #312]
  40ff10:	ldr	x2, [x19, #48]
  40ff14:	mov	w3, #0x14e                 	// #334
  40ff18:	ldr	x4, [x19, #40]
  40ff1c:	adrp	x5, 441000 <_fini+0xc30>
  40ff20:	add	x5, x5, #0xf2e
  40ff24:	bl	406c18 <log_internal_realm@plt>
  40ff28:	str	w0, [x19, #12]
  40ff2c:	b	40ff44 <button_open+0x4fc>
  40ff30:	ldr	w0, [x19, #132]
  40ff34:	bl	406c28 <abs@plt>
  40ff38:	mov	w8, wzr
  40ff3c:	subs	w8, w8, w0, uxtb
  40ff40:	str	w8, [x19, #12]
  40ff44:	ldr	w8, [x19, #12]
  40ff48:	str	w8, [x19, #124]
  40ff4c:	ldr	w8, [x19, #124]
  40ff50:	stur	w8, [x29, #-4]
  40ff54:	mov	w8, #0x1                   	// #1
  40ff58:	str	w8, [x19, #156]
  40ff5c:	b	4101d4 <button_open+0x78c>
  40ff60:	ldur	w0, [x29, #-20]
  40ff64:	mov	x1, #0x4506                	// #17670
  40ff68:	movk	x1, #0x8100, lsl #16
  40ff6c:	add	x2, x19, #0x100
  40ff70:	bl	407268 <ioctl@plt>
  40ff74:	cmp	w0, #0x0
  40ff78:	cset	w8, ge  // ge = tcont
  40ff7c:	tbnz	w8, #0, 410018 <button_open+0x5d0>
  40ff80:	mov	w8, #0x3                   	// #3
  40ff84:	str	w8, [x19, #120]
  40ff88:	bl	406e08 <__errno_location@plt>
  40ff8c:	ldr	w8, [x0]
  40ff90:	str	w8, [x19, #116]
  40ff94:	str	wzr, [x19, #112]
  40ff98:	ldr	w0, [x19, #112]
  40ff9c:	bl	406c08 <log_get_max_level_realm@plt>
  40ffa0:	ldr	w8, [x19, #120]
  40ffa4:	and	w8, w8, #0x7
  40ffa8:	cmp	w0, w8
  40ffac:	b.lt	40ffe8 <button_open+0x5a0>  // b.tstop
  40ffb0:	ldr	w8, [x19, #112]
  40ffb4:	ldr	w9, [x19, #120]
  40ffb8:	orr	w0, w9, w8, lsl #10
  40ffbc:	ldr	w1, [x19, #116]
  40ffc0:	ldr	x10, [x19, #56]
  40ffc4:	ldr	x6, [x10, #312]
  40ffc8:	ldr	x2, [x19, #48]
  40ffcc:	mov	w3, #0x151                 	// #337
  40ffd0:	ldr	x4, [x19, #40]
  40ffd4:	adrp	x5, 441000 <_fini+0xc30>
  40ffd8:	add	x5, x5, #0xf73
  40ffdc:	bl	406c18 <log_internal_realm@plt>
  40ffe0:	str	w0, [x19, #8]
  40ffe4:	b	40fffc <button_open+0x5b4>
  40ffe8:	ldr	w0, [x19, #116]
  40ffec:	bl	406c28 <abs@plt>
  40fff0:	mov	w8, wzr
  40fff4:	subs	w8, w8, w0, uxtb
  40fff8:	str	w8, [x19, #8]
  40fffc:	ldr	w8, [x19, #8]
  410000:	str	w8, [x19, #108]
  410004:	ldr	w8, [x19, #108]
  410008:	stur	w8, [x29, #-4]
  41000c:	mov	w8, #0x1                   	// #1
  410010:	str	w8, [x19, #156]
  410014:	b	4101d4 <button_open+0x78c>
  410018:	ldr	x8, [x19, #56]
  41001c:	ldr	x9, [x8, #328]
  410020:	ldr	x0, [x9, #24]
  410024:	ldur	w1, [x29, #-20]
  410028:	bl	410458 <button_set_mask>
  41002c:	ldr	x8, [x19, #56]
  410030:	ldr	x9, [x8, #328]
  410034:	ldr	x9, [x9, #8]
  410038:	mov	x0, x9
  41003c:	bl	406d28 <sd_event_source_unref@plt>
  410040:	ldr	x8, [x19, #56]
  410044:	ldr	x9, [x8, #328]
  410048:	str	x0, [x9, #8]
  41004c:	ldr	x9, [x8, #328]
  410050:	ldr	x9, [x9]
  410054:	ldr	x0, [x9]
  410058:	ldr	x9, [x8, #328]
  41005c:	add	x1, x9, #0x8
  410060:	ldur	w2, [x29, #-20]
  410064:	ldr	x5, [x8, #328]
  410068:	mov	w3, #0x1                   	// #1
  41006c:	adrp	x4, 410000 <button_open+0x5b8>
  410070:	add	x4, x4, #0x8b8
  410074:	bl	406e18 <sd_event_add_io@plt>
  410078:	str	w0, [x19, #252]
  41007c:	ldr	w10, [x19, #252]
  410080:	cmp	w10, #0x0
  410084:	cset	w10, ge  // ge = tcont
  410088:	tbnz	w10, #0, 410120 <button_open+0x6d8>
  41008c:	mov	w8, #0x3                   	// #3
  410090:	str	w8, [x19, #104]
  410094:	ldr	w8, [x19, #252]
  410098:	str	w8, [x19, #100]
  41009c:	str	wzr, [x19, #96]
  4100a0:	ldr	w0, [x19, #96]
  4100a4:	bl	406c08 <log_get_max_level_realm@plt>
  4100a8:	ldr	w8, [x19, #104]
  4100ac:	and	w8, w8, #0x7
  4100b0:	cmp	w0, w8
  4100b4:	b.lt	4100f0 <button_open+0x6a8>  // b.tstop
  4100b8:	ldr	w8, [x19, #96]
  4100bc:	ldr	w9, [x19, #104]
  4100c0:	orr	w0, w9, w8, lsl #10
  4100c4:	ldr	w1, [x19, #100]
  4100c8:	ldr	x10, [x19, #56]
  4100cc:	ldr	x6, [x10, #312]
  4100d0:	ldr	x2, [x19, #48]
  4100d4:	mov	w3, #0x158                 	// #344
  4100d8:	ldr	x4, [x19, #40]
  4100dc:	adrp	x5, 441000 <_fini+0xc30>
  4100e0:	add	x5, x5, #0xf97
  4100e4:	bl	406c18 <log_internal_realm@plt>
  4100e8:	str	w0, [x19, #4]
  4100ec:	b	410104 <button_open+0x6bc>
  4100f0:	ldr	w0, [x19, #100]
  4100f4:	bl	406c28 <abs@plt>
  4100f8:	mov	w8, wzr
  4100fc:	subs	w8, w8, w0, uxtb
  410100:	str	w8, [x19, #4]
  410104:	ldr	w8, [x19, #4]
  410108:	str	w8, [x19, #92]
  41010c:	ldr	w8, [x19, #92]
  410110:	stur	w8, [x29, #-4]
  410114:	mov	w8, #0x1                   	// #1
  410118:	str	w8, [x19, #156]
  41011c:	b	4101d4 <button_open+0x78c>
  410120:	ldur	w8, [x29, #-20]
  410124:	str	w8, [x19, #88]
  410128:	mov	w8, #0xffffffff            	// #-1
  41012c:	stur	w8, [x29, #-20]
  410130:	ldr	w8, [x19, #88]
  410134:	str	w8, [x19, #84]
  410138:	ldr	w8, [x19, #84]
  41013c:	ldr	x9, [x19, #56]
  410140:	ldr	x10, [x9, #328]
  410144:	str	w8, [x10, #40]
  410148:	mov	w8, #0x6                   	// #6
  41014c:	str	w8, [x19, #80]
  410150:	str	wzr, [x19, #76]
  410154:	str	wzr, [x19, #72]
  410158:	ldr	w0, [x19, #72]
  41015c:	bl	406c08 <log_get_max_level_realm@plt>
  410160:	ldr	w8, [x19, #80]
  410164:	and	w8, w8, #0x7
  410168:	cmp	w0, w8
  41016c:	b.lt	4101ac <button_open+0x764>  // b.tstop
  410170:	ldr	w8, [x19, #72]
  410174:	ldr	w9, [x19, #80]
  410178:	orr	w0, w9, w8, lsl #10
  41017c:	ldr	w1, [x19, #76]
  410180:	ldr	x10, [x19, #56]
  410184:	ldr	x6, [x10, #312]
  410188:	ldr	x2, [x19, #48]
  41018c:	mov	w3, #0x15b                 	// #347
  410190:	ldr	x4, [x19, #40]
  410194:	adrp	x5, 441000 <_fini+0xc30>
  410198:	add	x5, x5, #0xfbd
  41019c:	add	x7, x19, #0x100
  4101a0:	bl	406c18 <log_internal_realm@plt>
  4101a4:	str	w0, [x19]
  4101a8:	b	4101c0 <button_open+0x778>
  4101ac:	ldr	w0, [x19, #76]
  4101b0:	bl	406c28 <abs@plt>
  4101b4:	mov	w8, wzr
  4101b8:	subs	w8, w8, w0, uxtb
  4101bc:	str	w8, [x19]
  4101c0:	ldr	w8, [x19]
  4101c4:	str	w8, [x19, #68]
  4101c8:	stur	wzr, [x29, #-4]
  4101cc:	mov	w8, #0x1                   	// #1
  4101d0:	str	w8, [x19, #156]
  4101d4:	sub	x0, x29, #0x14
  4101d8:	bl	4101f0 <closep>
  4101dc:	ldur	w0, [x29, #-4]
  4101e0:	mov	sp, x29
  4101e4:	ldp	x28, x19, [sp, #16]
  4101e8:	ldp	x29, x30, [sp], #32
  4101ec:	ret

00000000004101f0 <closep>:
  4101f0:	sub	sp, sp, #0x20
  4101f4:	stp	x29, x30, [sp, #16]
  4101f8:	add	x29, sp, #0x10
  4101fc:	str	x0, [sp, #8]
  410200:	ldr	x8, [sp, #8]
  410204:	ldr	w0, [x8]
  410208:	bl	406d38 <safe_close@plt>
  41020c:	ldp	x29, x30, [sp, #16]
  410210:	add	sp, sp, #0x20
  410214:	ret

0000000000410218 <size_multiply_overflow>:
  410218:	sub	sp, sp, #0x20
  41021c:	str	x0, [sp, #24]
  410220:	str	x1, [sp, #16]
  410224:	ldr	x8, [sp, #16]
  410228:	mov	w9, #0x0                   	// #0
  41022c:	str	w9, [sp, #12]
  410230:	cbz	x8, 410250 <size_multiply_overflow+0x38>
  410234:	ldr	x8, [sp, #24]
  410238:	ldr	x9, [sp, #16]
  41023c:	mov	x10, #0xffffffffffffffff    	// #-1
  410240:	udiv	x9, x10, x9
  410244:	cmp	x8, x9
  410248:	cset	w11, hi  // hi = pmore
  41024c:	str	w11, [sp, #12]
  410250:	ldr	w8, [sp, #12]
  410254:	mov	w9, #0x1                   	// #1
  410258:	eor	w8, w8, #0x1
  41025c:	eor	w8, w8, w9
  410260:	and	w8, w8, #0x1
  410264:	mov	w0, w8
  410268:	sxtw	x10, w0
  41026c:	cmp	x10, #0x0
  410270:	cset	w8, ne  // ne = any
  410274:	and	w0, w8, #0x1
  410278:	add	sp, sp, #0x20
  41027c:	ret

0000000000410280 <button_suitable>:
  410280:	sub	sp, sp, #0x60
  410284:	stp	x29, x30, [sp, #80]
  410288:	add	x29, sp, #0x50
  41028c:	adrp	x8, 441000 <_fini+0xc30>
  410290:	add	x8, x8, #0xdc0
  410294:	add	x2, x8, #0x3
  410298:	stur	w0, [x29, #-8]
  41029c:	str	x2, [sp]
  4102a0:	ldur	w8, [x29, #-8]
  4102a4:	cmp	w8, #0x0
  4102a8:	cset	w8, ge  // ge = tcont
  4102ac:	mov	w9, #0x1                   	// #1
  4102b0:	eor	w8, w8, #0x1
  4102b4:	eor	w8, w8, w9
  4102b8:	eor	w8, w8, w9
  4102bc:	and	w8, w8, #0x1
  4102c0:	mov	w0, w8
  4102c4:	sxtw	x10, w0
  4102c8:	cbz	x10, 4102f0 <button_suitable+0x70>
  4102cc:	mov	w8, wzr
  4102d0:	mov	w0, w8
  4102d4:	adrp	x1, 441000 <_fini+0xc30>
  4102d8:	add	x1, x1, #0x493
  4102dc:	ldr	x2, [sp]
  4102e0:	mov	w3, #0xe4                  	// #228
  4102e4:	adrp	x4, 442000 <_fini+0x1c30>
  4102e8:	add	x4, x4, #0x4
  4102ec:	bl	406c68 <log_assert_failed_realm@plt>
  4102f0:	ldur	w0, [x29, #-8]
  4102f4:	mov	x1, #0x4520                	// #17696
  4102f8:	movk	x1, #0x8008, lsl #16
  4102fc:	sub	x2, x29, #0x10
  410300:	bl	407268 <ioctl@plt>
  410304:	cmp	w0, #0x0
  410308:	cset	w8, ge  // ge = tcont
  41030c:	tbnz	w8, #0, 410328 <button_suitable+0xa8>
  410310:	bl	406e08 <__errno_location@plt>
  410314:	ldr	w8, [x0]
  410318:	mov	w9, wzr
  41031c:	subs	w8, w9, w8
  410320:	stur	w8, [x29, #-4]
  410324:	b	410448 <button_suitable+0x1c8>
  410328:	sub	x0, x29, #0x10
  41032c:	mov	w1, #0x1                   	// #1
  410330:	bl	410f10 <bitset_get>
  410334:	tbnz	w0, #0, 41033c <button_suitable+0xbc>
  410338:	b	4103c4 <button_suitable+0x144>
  41033c:	ldur	w0, [x29, #-8]
  410340:	mov	x1, #0x4521                	// #17697
  410344:	movk	x1, #0x8030, lsl #16
  410348:	add	x2, sp, #0x10
  41034c:	bl	407268 <ioctl@plt>
  410350:	cmp	w0, #0x0
  410354:	cset	w8, ge  // ge = tcont
  410358:	tbnz	w8, #0, 410374 <button_suitable+0xf4>
  41035c:	bl	406e08 <__errno_location@plt>
  410360:	ldr	w8, [x0]
  410364:	mov	w9, wzr
  410368:	subs	w8, w9, w8
  41036c:	stur	w8, [x29, #-4]
  410370:	b	410448 <button_suitable+0x1c8>
  410374:	add	x0, sp, #0x10
  410378:	mov	w1, #0x74                  	// #116
  41037c:	bl	410f10 <bitset_get>
  410380:	tbnz	w0, #0, 4103b8 <button_suitable+0x138>
  410384:	add	x0, sp, #0x10
  410388:	mov	w1, #0x164                 	// #356
  41038c:	bl	410f10 <bitset_get>
  410390:	tbnz	w0, #0, 4103b8 <button_suitable+0x138>
  410394:	add	x0, sp, #0x10
  410398:	mov	w1, #0x8e                  	// #142
  41039c:	bl	410f10 <bitset_get>
  4103a0:	tbnz	w0, #0, 4103b8 <button_suitable+0x138>
  4103a4:	add	x0, sp, #0x10
  4103a8:	mov	w1, #0xcd                  	// #205
  4103ac:	bl	410f10 <bitset_get>
  4103b0:	tbnz	w0, #0, 4103b8 <button_suitable+0x138>
  4103b4:	b	4103c4 <button_suitable+0x144>
  4103b8:	mov	w8, #0x1                   	// #1
  4103bc:	stur	w8, [x29, #-4]
  4103c0:	b	410448 <button_suitable+0x1c8>
  4103c4:	sub	x0, x29, #0x10
  4103c8:	mov	w1, #0x5                   	// #5
  4103cc:	bl	410f10 <bitset_get>
  4103d0:	tbnz	w0, #0, 4103d8 <button_suitable+0x158>
  4103d4:	b	410444 <button_suitable+0x1c4>
  4103d8:	ldur	w0, [x29, #-8]
  4103dc:	mov	x1, #0x4525                	// #17701
  4103e0:	movk	x1, #0x8008, lsl #16
  4103e4:	add	x2, sp, #0x8
  4103e8:	bl	407268 <ioctl@plt>
  4103ec:	cmp	w0, #0x0
  4103f0:	cset	w8, ge  // ge = tcont
  4103f4:	tbnz	w8, #0, 410410 <button_suitable+0x190>
  4103f8:	bl	406e08 <__errno_location@plt>
  4103fc:	ldr	w8, [x0]
  410400:	mov	w9, wzr
  410404:	subs	w8, w9, w8
  410408:	stur	w8, [x29, #-4]
  41040c:	b	410448 <button_suitable+0x1c8>
  410410:	add	x0, sp, #0x8
  410414:	mov	w8, wzr
  410418:	mov	w1, w8
  41041c:	bl	410f10 <bitset_get>
  410420:	tbnz	w0, #0, 410438 <button_suitable+0x1b8>
  410424:	add	x0, sp, #0x8
  410428:	mov	w1, #0x5                   	// #5
  41042c:	bl	410f10 <bitset_get>
  410430:	tbnz	w0, #0, 410438 <button_suitable+0x1b8>
  410434:	b	410444 <button_suitable+0x1c4>
  410438:	mov	w8, #0x1                   	// #1
  41043c:	stur	w8, [x29, #-4]
  410440:	b	410448 <button_suitable+0x1c8>
  410444:	stur	wzr, [x29, #-4]
  410448:	ldur	w0, [x29, #-4]
  41044c:	ldp	x29, x30, [sp, #80]
  410450:	add	sp, sp, #0x60
  410454:	ret

0000000000410458 <button_set_mask>:
  410458:	sub	sp, sp, #0x140
  41045c:	stp	x29, x30, [sp, #288]
  410460:	str	x28, [sp, #304]
  410464:	add	x29, sp, #0x120
  410468:	mov	x2, #0x30                  	// #48
  41046c:	mov	w8, wzr
  410470:	adrp	x9, 441000 <_fini+0xc30>
  410474:	add	x9, x9, #0xdc0
  410478:	add	x9, x9, #0x3
  41047c:	adrp	x10, 442000 <_fini+0x1c30>
  410480:	add	x10, x10, #0x44
  410484:	sub	x11, x29, #0x50
  410488:	stur	x0, [x29, #-16]
  41048c:	stur	w1, [x29, #-20]
  410490:	stur	xzr, [x29, #-32]
  410494:	mov	x0, x11
  410498:	mov	w1, w8
  41049c:	str	x9, [sp, #64]
  4104a0:	str	x10, [sp, #56]
  4104a4:	bl	406c98 <memset@plt>
  4104a8:	stur	xzr, [x29, #-88]
  4104ac:	ldur	x8, [x29, #-16]
  4104b0:	cmp	x8, #0x0
  4104b4:	cset	w9, ne  // ne = any
  4104b8:	mov	w10, #0x1                   	// #1
  4104bc:	eor	w9, w9, #0x1
  4104c0:	eor	w9, w9, w10
  4104c4:	eor	w9, w9, w10
  4104c8:	and	w9, w9, #0x1
  4104cc:	mov	w0, w9
  4104d0:	sxtw	x8, w0
  4104d4:	cbz	x8, 4104fc <button_set_mask+0xa4>
  4104d8:	mov	w8, wzr
  4104dc:	mov	w0, w8
  4104e0:	adrp	x1, 441000 <_fini+0xc30>
  4104e4:	add	x1, x1, #0xe09
  4104e8:	ldr	x2, [sp, #64]
  4104ec:	mov	w3, #0x10b                 	// #267
  4104f0:	adrp	x4, 442000 <_fini+0x1c30>
  4104f4:	add	x4, x4, #0x1d
  4104f8:	bl	406c68 <log_assert_failed_realm@plt>
  4104fc:	ldur	w8, [x29, #-20]
  410500:	cmp	w8, #0x0
  410504:	cset	w8, ge  // ge = tcont
  410508:	mov	w9, #0x1                   	// #1
  41050c:	eor	w8, w8, #0x1
  410510:	eor	w8, w8, w9
  410514:	eor	w8, w8, w9
  410518:	and	w8, w8, #0x1
  41051c:	mov	w0, w8
  410520:	sxtw	x10, w0
  410524:	cbz	x10, 41054c <button_set_mask+0xf4>
  410528:	mov	w8, wzr
  41052c:	mov	w0, w8
  410530:	adrp	x1, 441000 <_fini+0xc30>
  410534:	add	x1, x1, #0x493
  410538:	ldr	x2, [sp, #64]
  41053c:	mov	w3, #0x10c                 	// #268
  410540:	adrp	x4, 442000 <_fini+0x1c30>
  410544:	add	x4, x4, #0x1d
  410548:	bl	406c68 <log_assert_failed_realm@plt>
  41054c:	sub	x8, x29, #0x20
  410550:	mov	x0, x8
  410554:	mov	w1, #0x1                   	// #1
  410558:	str	x8, [sp, #48]
  41055c:	bl	41104c <bitset_put>
  410560:	ldr	x0, [sp, #48]
  410564:	mov	w1, #0x5                   	// #5
  410568:	bl	41104c <bitset_put>
  41056c:	stur	wzr, [x29, #-128]
  410570:	mov	w9, #0x8                   	// #8
  410574:	stur	w9, [x29, #-124]
  410578:	ldr	x8, [sp, #48]
  41057c:	stur	x8, [x29, #-120]
  410580:	ldur	q0, [x29, #-128]
  410584:	sub	x2, x29, #0x70
  410588:	stur	q0, [x29, #-112]
  41058c:	ldur	w0, [x29, #-20]
  410590:	mov	x1, #0x4593                	// #17811
  410594:	movk	x1, #0x4010, lsl #16
  410598:	bl	407268 <ioctl@plt>
  41059c:	cmp	w0, #0x0
  4105a0:	cset	w9, ge  // ge = tcont
  4105a4:	tbnz	w9, #0, 4106a4 <button_set_mask+0x24c>
  4105a8:	mov	w8, #0x0                   	// #0
  4105ac:	sturb	w8, [x29, #-133]
  4105b0:	bl	406e08 <__errno_location@plt>
  4105b4:	ldr	w8, [x0]
  4105b8:	cmp	w8, #0x16
  4105bc:	str	w8, [sp, #44]
  4105c0:	b.eq	4105f0 <button_set_mask+0x198>  // b.none
  4105c4:	b	4105c8 <button_set_mask+0x170>
  4105c8:	ldr	w8, [sp, #44]
  4105cc:	cmp	w8, #0x19
  4105d0:	b.eq	4105f0 <button_set_mask+0x198>  // b.none
  4105d4:	b	4105d8 <button_set_mask+0x180>
  4105d8:	ldr	w8, [sp, #44]
  4105dc:	cmp	w8, #0x5f
  4105e0:	cset	w9, eq  // eq = none
  4105e4:	eor	w9, w9, #0x1
  4105e8:	tbnz	w9, #0, 4105fc <button_set_mask+0x1a4>
  4105ec:	b	4105f0 <button_set_mask+0x198>
  4105f0:	mov	w8, #0x1                   	// #1
  4105f4:	sturb	w8, [x29, #-133]
  4105f8:	b	4105fc <button_set_mask+0x1a4>
  4105fc:	ldurb	w8, [x29, #-133]
  410600:	and	w8, w8, #0x1
  410604:	sturb	w8, [x29, #-134]
  410608:	ldurb	w8, [x29, #-134]
  41060c:	mov	w9, #0x7                   	// #7
  410610:	mov	w10, #0x4                   	// #4
  410614:	tst	w8, #0x1
  410618:	csel	w8, w9, w10, ne  // ne = any
  41061c:	stur	w8, [x29, #-132]
  410620:	bl	406e08 <__errno_location@plt>
  410624:	ldr	w8, [x0]
  410628:	stur	w8, [x29, #-140]
  41062c:	str	wzr, [sp, #144]
  410630:	ldr	w0, [sp, #144]
  410634:	bl	406c08 <log_get_max_level_realm@plt>
  410638:	ldur	w8, [x29, #-132]
  41063c:	and	w8, w8, #0x7
  410640:	cmp	w0, w8
  410644:	b.lt	41067c <button_set_mask+0x224>  // b.tstop
  410648:	ldr	w8, [sp, #144]
  41064c:	ldur	w9, [x29, #-132]
  410650:	orr	w0, w9, w8, lsl #10
  410654:	ldur	w1, [x29, #-140]
  410658:	ldur	x6, [x29, #-16]
  41065c:	ldr	x2, [sp, #64]
  410660:	mov	w3, #0x11a                 	// #282
  410664:	ldr	x4, [sp, #56]
  410668:	adrp	x5, 442000 <_fini+0x1c30>
  41066c:	add	x5, x5, #0x54
  410670:	bl	406c18 <log_internal_realm@plt>
  410674:	str	w0, [sp, #40]
  410678:	b	410690 <button_set_mask+0x238>
  41067c:	ldur	w0, [x29, #-140]
  410680:	bl	406c28 <abs@plt>
  410684:	mov	w8, wzr
  410688:	subs	w8, w8, w0, uxtb
  41068c:	str	w8, [sp, #40]
  410690:	ldr	w8, [sp, #40]
  410694:	str	w8, [sp, #140]
  410698:	ldr	w8, [sp, #140]
  41069c:	stur	w8, [x29, #-4]
  4106a0:	b	4108a4 <button_set_mask+0x44c>
  4106a4:	sub	x8, x29, #0x50
  4106a8:	mov	x0, x8
  4106ac:	mov	w1, #0x74                  	// #116
  4106b0:	str	x8, [sp, #32]
  4106b4:	bl	41104c <bitset_put>
  4106b8:	ldr	x0, [sp, #32]
  4106bc:	mov	w1, #0x164                 	// #356
  4106c0:	bl	41104c <bitset_put>
  4106c4:	ldr	x0, [sp, #32]
  4106c8:	mov	w1, #0x8e                  	// #142
  4106cc:	bl	41104c <bitset_put>
  4106d0:	ldr	x0, [sp, #32]
  4106d4:	mov	w1, #0xcd                  	// #205
  4106d8:	bl	41104c <bitset_put>
  4106dc:	mov	w9, #0x1                   	// #1
  4106e0:	str	w9, [sp, #120]
  4106e4:	mov	w9, #0x30                  	// #48
  4106e8:	str	w9, [sp, #124]
  4106ec:	ldr	x8, [sp, #32]
  4106f0:	str	x8, [sp, #128]
  4106f4:	ldur	q0, [sp, #120]
  4106f8:	sub	x2, x29, #0x70
  4106fc:	stur	q0, [x29, #-112]
  410700:	ldur	w0, [x29, #-20]
  410704:	mov	x1, #0x4593                	// #17811
  410708:	movk	x1, #0x4010, lsl #16
  41070c:	bl	407268 <ioctl@plt>
  410710:	cmp	w0, #0x0
  410714:	cset	w9, ge  // ge = tcont
  410718:	tbnz	w9, #0, 4107a8 <button_set_mask+0x350>
  41071c:	mov	w8, #0x4                   	// #4
  410720:	str	w8, [sp, #116]
  410724:	bl	406e08 <__errno_location@plt>
  410728:	ldr	w8, [x0]
  41072c:	str	w8, [sp, #112]
  410730:	str	wzr, [sp, #108]
  410734:	ldr	w0, [sp, #108]
  410738:	bl	406c08 <log_get_max_level_realm@plt>
  41073c:	ldr	w8, [sp, #116]
  410740:	and	w8, w8, #0x7
  410744:	cmp	w0, w8
  410748:	b.lt	410780 <button_set_mask+0x328>  // b.tstop
  41074c:	ldr	w8, [sp, #108]
  410750:	ldr	w9, [sp, #116]
  410754:	orr	w0, w9, w8, lsl #10
  410758:	ldr	w1, [sp, #112]
  41075c:	ldur	x6, [x29, #-16]
  410760:	ldr	x2, [sp, #64]
  410764:	mov	w3, #0x128                 	// #296
  410768:	ldr	x4, [sp, #56]
  41076c:	adrp	x5, 442000 <_fini+0x1c30>
  410770:	add	x5, x5, #0x89
  410774:	bl	406c18 <log_internal_realm@plt>
  410778:	str	w0, [sp, #28]
  41077c:	b	410794 <button_set_mask+0x33c>
  410780:	ldr	w0, [sp, #112]
  410784:	bl	406c28 <abs@plt>
  410788:	mov	w8, wzr
  41078c:	subs	w8, w8, w0, uxtb
  410790:	str	w8, [sp, #28]
  410794:	ldr	w8, [sp, #28]
  410798:	str	w8, [sp, #104]
  41079c:	ldr	w8, [sp, #104]
  4107a0:	stur	w8, [x29, #-4]
  4107a4:	b	4108a4 <button_set_mask+0x44c>
  4107a8:	sub	x8, x29, #0x58
  4107ac:	mov	x0, x8
  4107b0:	mov	w9, wzr
  4107b4:	mov	w1, w9
  4107b8:	str	x8, [sp, #16]
  4107bc:	bl	41104c <bitset_put>
  4107c0:	ldr	x0, [sp, #16]
  4107c4:	mov	w9, #0x5                   	// #5
  4107c8:	mov	w1, w9
  4107cc:	str	w9, [sp, #12]
  4107d0:	bl	41104c <bitset_put>
  4107d4:	ldr	w9, [sp, #12]
  4107d8:	str	w9, [sp, #88]
  4107dc:	mov	w10, #0x8                   	// #8
  4107e0:	str	w10, [sp, #92]
  4107e4:	ldr	x8, [sp, #16]
  4107e8:	str	x8, [sp, #96]
  4107ec:	ldur	q0, [sp, #88]
  4107f0:	sub	x2, x29, #0x70
  4107f4:	stur	q0, [x29, #-112]
  4107f8:	ldur	w0, [x29, #-20]
  4107fc:	mov	x1, #0x4593                	// #17811
  410800:	movk	x1, #0x4010, lsl #16
  410804:	bl	407268 <ioctl@plt>
  410808:	cmp	w0, #0x0
  41080c:	cset	w9, ge  // ge = tcont
  410810:	tbnz	w9, #0, 4108a0 <button_set_mask+0x448>
  410814:	mov	w8, #0x4                   	// #4
  410818:	str	w8, [sp, #84]
  41081c:	bl	406e08 <__errno_location@plt>
  410820:	ldr	w8, [x0]
  410824:	str	w8, [sp, #80]
  410828:	str	wzr, [sp, #76]
  41082c:	ldr	w0, [sp, #76]
  410830:	bl	406c08 <log_get_max_level_realm@plt>
  410834:	ldr	w8, [sp, #84]
  410838:	and	w8, w8, #0x7
  41083c:	cmp	w0, w8
  410840:	b.lt	410878 <button_set_mask+0x420>  // b.tstop
  410844:	ldr	w8, [sp, #76]
  410848:	ldr	w9, [sp, #84]
  41084c:	orr	w0, w9, w8, lsl #10
  410850:	ldr	w1, [sp, #80]
  410854:	ldur	x6, [x29, #-16]
  410858:	ldr	x2, [sp, #64]
  41085c:	mov	w3, #0x134                 	// #308
  410860:	ldr	x4, [sp, #56]
  410864:	adrp	x5, 442000 <_fini+0x1c30>
  410868:	add	x5, x5, #0xbe
  41086c:	bl	406c18 <log_internal_realm@plt>
  410870:	str	w0, [sp, #8]
  410874:	b	41088c <button_set_mask+0x434>
  410878:	ldr	w0, [sp, #80]
  41087c:	bl	406c28 <abs@plt>
  410880:	mov	w8, wzr
  410884:	subs	w8, w8, w0, uxtb
  410888:	str	w8, [sp, #8]
  41088c:	ldr	w8, [sp, #8]
  410890:	str	w8, [sp, #72]
  410894:	ldr	w8, [sp, #72]
  410898:	stur	w8, [x29, #-4]
  41089c:	b	4108a4 <button_set_mask+0x44c>
  4108a0:	stur	wzr, [x29, #-4]
  4108a4:	ldur	w0, [x29, #-4]
  4108a8:	ldr	x28, [sp, #304]
  4108ac:	ldp	x29, x30, [sp, #288]
  4108b0:	add	sp, sp, #0x140
  4108b4:	ret

00000000004108b8 <button_dispatch>:
  4108b8:	sub	sp, sp, #0x80
  4108bc:	stp	x29, x30, [sp, #112]
  4108c0:	add	x29, sp, #0x70
  4108c4:	adrp	x8, 441000 <_fini+0xc30>
  4108c8:	add	x8, x8, #0xdc0
  4108cc:	add	x8, x8, #0x3
  4108d0:	adrp	x9, 442000 <_fini+0x1c30>
  4108d4:	add	x9, x9, #0x13e
  4108d8:	adrp	x10, 442000 <_fini+0x1c30>
  4108dc:	add	x10, x10, #0xf4
  4108e0:	stur	x0, [x29, #-16]
  4108e4:	stur	w1, [x29, #-20]
  4108e8:	stur	w2, [x29, #-24]
  4108ec:	stur	x3, [x29, #-32]
  4108f0:	ldur	x11, [x29, #-32]
  4108f4:	stur	x11, [x29, #-40]
  4108f8:	str	x8, [sp, #32]
  4108fc:	str	x9, [sp, #24]
  410900:	str	x10, [sp, #16]
  410904:	ldur	x8, [x29, #-16]
  410908:	cmp	x8, #0x0
  41090c:	cset	w9, ne  // ne = any
  410910:	mov	w10, #0x1                   	// #1
  410914:	eor	w9, w9, #0x1
  410918:	eor	w9, w9, w10
  41091c:	eor	w9, w9, w10
  410920:	and	w9, w9, #0x1
  410924:	mov	w0, w9
  410928:	sxtw	x8, w0
  41092c:	cbz	x8, 410950 <button_dispatch+0x98>
  410930:	mov	w8, wzr
  410934:	mov	w0, w8
  410938:	adrp	x1, 442000 <_fini+0x1c30>
  41093c:	add	x1, x1, #0xf2
  410940:	ldr	x2, [sp, #32]
  410944:	mov	w3, #0x8a                  	// #138
  410948:	ldr	x4, [sp, #16]
  41094c:	bl	406c68 <log_assert_failed_realm@plt>
  410950:	ldur	w8, [x29, #-20]
  410954:	ldur	x9, [x29, #-40]
  410958:	ldr	w10, [x9, #40]
  41095c:	cmp	w8, w10
  410960:	cset	w8, eq  // eq = none
  410964:	mov	w10, #0x1                   	// #1
  410968:	eor	w8, w8, #0x1
  41096c:	eor	w8, w8, w10
  410970:	eor	w8, w8, w10
  410974:	and	w8, w8, #0x1
  410978:	mov	w0, w8
  41097c:	sxtw	x9, w0
  410980:	cbz	x9, 4109a4 <button_dispatch+0xec>
  410984:	mov	w8, wzr
  410988:	mov	w0, w8
  41098c:	adrp	x1, 442000 <_fini+0x1c30>
  410990:	add	x1, x1, #0x132
  410994:	ldr	x2, [sp, #32]
  410998:	mov	w3, #0x8b                  	// #139
  41099c:	ldr	x4, [sp, #16]
  4109a0:	bl	406c68 <log_assert_failed_realm@plt>
  4109a4:	ldur	x8, [x29, #-40]
  4109a8:	cmp	x8, #0x0
  4109ac:	cset	w9, ne  // ne = any
  4109b0:	mov	w10, #0x1                   	// #1
  4109b4:	eor	w9, w9, #0x1
  4109b8:	eor	w9, w9, w10
  4109bc:	eor	w9, w9, w10
  4109c0:	and	w9, w9, #0x1
  4109c4:	mov	w0, w9
  4109c8:	sxtw	x8, w0
  4109cc:	cbz	x8, 4109f0 <button_dispatch+0x138>
  4109d0:	mov	w8, wzr
  4109d4:	mov	w0, w8
  4109d8:	adrp	x1, 441000 <_fini+0xc30>
  4109dc:	add	x1, x1, #0xe0e
  4109e0:	ldr	x2, [sp, #32]
  4109e4:	mov	w3, #0x8c                  	// #140
  4109e8:	ldr	x4, [sp, #16]
  4109ec:	bl	406c68 <log_assert_failed_realm@plt>
  4109f0:	ldur	x8, [x29, #-40]
  4109f4:	ldr	w0, [x8, #40]
  4109f8:	add	x1, sp, #0x30
  4109fc:	mov	x2, #0x18                  	// #24
  410a00:	bl	407278 <read@plt>
  410a04:	str	x0, [sp, #40]
  410a08:	ldr	x8, [sp, #40]
  410a0c:	cmp	x8, #0x0
  410a10:	cset	w9, ge  // ge = tcont
  410a14:	tbnz	w9, #0, 410a54 <button_dispatch+0x19c>
  410a18:	bl	406e08 <__errno_location@plt>
  410a1c:	ldr	w8, [x0]
  410a20:	cmp	w8, #0xb
  410a24:	b.eq	410a40 <button_dispatch+0x188>  // b.none
  410a28:	bl	406e08 <__errno_location@plt>
  410a2c:	ldr	w8, [x0]
  410a30:	mov	w9, wzr
  410a34:	subs	w8, w9, w8
  410a38:	str	w8, [sp, #12]
  410a3c:	b	410a48 <button_dispatch+0x190>
  410a40:	mov	w8, wzr
  410a44:	str	w8, [sp, #12]
  410a48:	ldr	w8, [sp, #12]
  410a4c:	stur	w8, [x29, #-4]
  410a50:	b	410dc4 <button_dispatch+0x50c>
  410a54:	ldr	x8, [sp, #40]
  410a58:	cmp	x8, #0x18
  410a5c:	b.cs	410a6c <button_dispatch+0x1b4>  // b.hs, b.nlast
  410a60:	mov	w8, #0xfffffffb            	// #-5
  410a64:	stur	w8, [x29, #-4]
  410a68:	b	410dc4 <button_dispatch+0x50c>
  410a6c:	ldrh	w8, [sp, #64]
  410a70:	cmp	w8, #0x1
  410a74:	b.ne	410c24 <button_dispatch+0x36c>  // b.any
  410a78:	ldr	w8, [sp, #68]
  410a7c:	cmp	w8, #0x0
  410a80:	cset	w8, le
  410a84:	tbnz	w8, #0, 410c24 <button_dispatch+0x36c>
  410a88:	ldrh	w8, [sp, #66]
  410a8c:	cmp	w8, #0x74
  410a90:	str	w8, [sp, #8]
  410a94:	b.eq	410ad4 <button_dispatch+0x21c>  // b.none
  410a98:	b	410a9c <button_dispatch+0x1e4>
  410a9c:	ldr	w8, [sp, #8]
  410aa0:	cmp	w8, #0x8e
  410aa4:	b.eq	410b44 <button_dispatch+0x28c>  // b.none
  410aa8:	b	410aac <button_dispatch+0x1f4>
  410aac:	ldr	w8, [sp, #8]
  410ab0:	cmp	w8, #0xcd
  410ab4:	b.eq	410bb4 <button_dispatch+0x2fc>  // b.none
  410ab8:	b	410abc <button_dispatch+0x204>
  410abc:	ldr	w8, [sp, #8]
  410ac0:	cmp	w8, #0x164
  410ac4:	cset	w9, eq  // eq = none
  410ac8:	eor	w9, w9, #0x1
  410acc:	tbnz	w9, #0, 410c20 <button_dispatch+0x368>
  410ad0:	b	410ad4 <button_dispatch+0x21c>
  410ad4:	mov	w0, #0x6                   	// #6
  410ad8:	mov	w8, wzr
  410adc:	mov	w1, w8
  410ae0:	ldr	x2, [sp, #32]
  410ae4:	mov	w3, #0x9c                  	// #156
  410ae8:	ldr	x4, [sp, #24]
  410aec:	adrp	x5, 442000 <_fini+0x1c30>
  410af0:	add	x5, x5, #0x14e
  410af4:	adrp	x6, 442000 <_fini+0x1c30>
  410af8:	add	x6, x6, #0x169
  410afc:	mov	x9, xzr
  410b00:	mov	x7, x9
  410b04:	bl	407288 <log_struct_internal@plt>
  410b08:	ldur	x9, [x29, #-40]
  410b0c:	ldr	x9, [x9]
  410b10:	ldur	x10, [x29, #-40]
  410b14:	ldr	x10, [x10]
  410b18:	ldr	w2, [x10, #396]
  410b1c:	ldur	x10, [x29, #-40]
  410b20:	ldr	x10, [x10]
  410b24:	ldrb	w8, [x10, #420]
  410b28:	mov	x0, x9
  410b2c:	mov	w1, #0x8                   	// #8
  410b30:	mov	w11, #0x1                   	// #1
  410b34:	and	w3, w8, #0x1
  410b38:	and	w4, w11, #0x1
  410b3c:	bl	40e7a4 <manager_handle_action>
  410b40:	b	410c20 <button_dispatch+0x368>
  410b44:	mov	w0, #0x6                   	// #6
  410b48:	mov	w8, wzr
  410b4c:	mov	w1, w8
  410b50:	ldr	x2, [sp, #32]
  410b54:	mov	w3, #0xaa                  	// #170
  410b58:	ldr	x4, [sp, #24]
  410b5c:	adrp	x5, 442000 <_fini+0x1c30>
  410b60:	add	x5, x5, #0x195
  410b64:	adrp	x6, 442000 <_fini+0x1c30>
  410b68:	add	x6, x6, #0x1b2
  410b6c:	mov	x9, xzr
  410b70:	mov	x7, x9
  410b74:	bl	407288 <log_struct_internal@plt>
  410b78:	ldur	x9, [x29, #-40]
  410b7c:	ldr	x9, [x9]
  410b80:	ldur	x10, [x29, #-40]
  410b84:	ldr	x10, [x10]
  410b88:	ldr	w2, [x10, #400]
  410b8c:	ldur	x10, [x29, #-40]
  410b90:	ldr	x10, [x10]
  410b94:	ldrb	w8, [x10, #421]
  410b98:	mov	x0, x9
  410b9c:	mov	w1, #0x10                  	// #16
  410ba0:	mov	w11, #0x1                   	// #1
  410ba4:	and	w3, w8, #0x1
  410ba8:	and	w4, w11, #0x1
  410bac:	bl	40e7a4 <manager_handle_action>
  410bb0:	b	410c20 <button_dispatch+0x368>
  410bb4:	mov	w0, #0x6                   	// #6
  410bb8:	mov	w8, wzr
  410bbc:	mov	w1, w8
  410bc0:	ldr	x2, [sp, #32]
  410bc4:	mov	w3, #0xb2                  	// #178
  410bc8:	ldr	x4, [sp, #24]
  410bcc:	adrp	x5, 442000 <_fini+0x1c30>
  410bd0:	add	x5, x5, #0x1de
  410bd4:	adrp	x6, 442000 <_fini+0x1c30>
  410bd8:	add	x6, x6, #0x1fd
  410bdc:	mov	x9, xzr
  410be0:	mov	x7, x9
  410be4:	bl	407288 <log_struct_internal@plt>
  410be8:	ldur	x9, [x29, #-40]
  410bec:	ldr	x9, [x9]
  410bf0:	ldur	x10, [x29, #-40]
  410bf4:	ldr	x10, [x10]
  410bf8:	ldr	w2, [x10, #404]
  410bfc:	ldur	x10, [x29, #-40]
  410c00:	ldr	x10, [x10]
  410c04:	ldrb	w8, [x10, #422]
  410c08:	mov	x0, x9
  410c0c:	mov	w1, #0x20                  	// #32
  410c10:	mov	w11, #0x1                   	// #1
  410c14:	and	w3, w8, #0x1
  410c18:	and	w4, w11, #0x1
  410c1c:	bl	40e7a4 <manager_handle_action>
  410c20:	b	410dc0 <button_dispatch+0x508>
  410c24:	ldrh	w8, [sp, #64]
  410c28:	cmp	w8, #0x5
  410c2c:	b.ne	410cfc <button_dispatch+0x444>  // b.any
  410c30:	ldr	w8, [sp, #68]
  410c34:	cmp	w8, #0x0
  410c38:	cset	w8, le
  410c3c:	tbnz	w8, #0, 410cfc <button_dispatch+0x444>
  410c40:	ldrh	w8, [sp, #66]
  410c44:	cbnz	w8, 410cac <button_dispatch+0x3f4>
  410c48:	mov	w0, #0x6                   	// #6
  410c4c:	mov	w8, wzr
  410c50:	mov	w1, w8
  410c54:	ldr	x2, [sp, #32]
  410c58:	mov	w3, #0xbd                  	// #189
  410c5c:	ldr	x4, [sp, #24]
  410c60:	adrp	x5, 442000 <_fini+0x1c30>
  410c64:	add	x5, x5, #0x229
  410c68:	adrp	x6, 442000 <_fini+0x1c30>
  410c6c:	add	x6, x6, #0x23d
  410c70:	mov	x9, xzr
  410c74:	mov	x7, x9
  410c78:	bl	407288 <log_struct_internal@plt>
  410c7c:	ldur	x9, [x29, #-40]
  410c80:	mov	w8, #0x1                   	// #1
  410c84:	strb	w8, [x9, #44]
  410c88:	ldur	x9, [x29, #-40]
  410c8c:	ldr	x9, [x9]
  410c90:	mov	x0, x9
  410c94:	mov	w8, #0x1                   	// #1
  410c98:	and	w1, w8, #0x1
  410c9c:	bl	4110a8 <button_lid_switch_handle_action>
  410ca0:	ldur	x0, [x29, #-40]
  410ca4:	bl	410f60 <button_install_check_event_source>
  410ca8:	b	410cf8 <button_dispatch+0x440>
  410cac:	ldrh	w8, [sp, #66]
  410cb0:	cmp	w8, #0x5
  410cb4:	b.ne	410cf8 <button_dispatch+0x440>  // b.any
  410cb8:	mov	w0, #0x6                   	// #6
  410cbc:	mov	w8, wzr
  410cc0:	mov	w1, w8
  410cc4:	ldr	x2, [sp, #32]
  410cc8:	mov	w3, #0xc6                  	// #198
  410ccc:	ldr	x4, [sp, #24]
  410cd0:	adrp	x5, 442000 <_fini+0x1c30>
  410cd4:	add	x5, x5, #0x269
  410cd8:	adrp	x6, 442000 <_fini+0x1c30>
  410cdc:	add	x6, x6, #0x280
  410ce0:	mov	x9, xzr
  410ce4:	mov	x7, x9
  410ce8:	bl	407288 <log_struct_internal@plt>
  410cec:	ldur	x9, [x29, #-40]
  410cf0:	mov	w8, #0x1                   	// #1
  410cf4:	strb	w8, [x9, #45]
  410cf8:	b	410dc0 <button_dispatch+0x508>
  410cfc:	ldrh	w8, [sp, #64]
  410d00:	cmp	w8, #0x5
  410d04:	b.ne	410dc0 <button_dispatch+0x508>  // b.any
  410d08:	ldr	w8, [sp, #68]
  410d0c:	cbnz	w8, 410dc0 <button_dispatch+0x508>
  410d10:	ldrh	w8, [sp, #66]
  410d14:	cbnz	w8, 410d74 <button_dispatch+0x4bc>
  410d18:	mov	w0, #0x6                   	// #6
  410d1c:	mov	w8, wzr
  410d20:	mov	w1, w8
  410d24:	ldr	x2, [sp, #32]
  410d28:	mov	w3, #0xd0                  	// #208
  410d2c:	ldr	x4, [sp, #24]
  410d30:	adrp	x5, 442000 <_fini+0x1c30>
  410d34:	add	x5, x5, #0x2ac
  410d38:	adrp	x6, 442000 <_fini+0x1c30>
  410d3c:	add	x6, x6, #0x2c0
  410d40:	mov	x9, xzr
  410d44:	mov	x7, x9
  410d48:	bl	407288 <log_struct_internal@plt>
  410d4c:	ldur	x9, [x29, #-40]
  410d50:	mov	w8, #0x0                   	// #0
  410d54:	strb	w8, [x9, #44]
  410d58:	ldur	x9, [x29, #-40]
  410d5c:	ldr	x9, [x9, #16]
  410d60:	mov	x0, x9
  410d64:	bl	406d28 <sd_event_source_unref@plt>
  410d68:	ldur	x9, [x29, #-40]
  410d6c:	str	x0, [x9, #16]
  410d70:	b	410dc0 <button_dispatch+0x508>
  410d74:	ldrh	w8, [sp, #66]
  410d78:	cmp	w8, #0x5
  410d7c:	b.ne	410dc0 <button_dispatch+0x508>  // b.any
  410d80:	mov	w0, #0x6                   	// #6
  410d84:	mov	w8, wzr
  410d88:	mov	w1, w8
  410d8c:	ldr	x2, [sp, #32]
  410d90:	mov	w3, #0xd8                  	// #216
  410d94:	ldr	x4, [sp, #24]
  410d98:	adrp	x5, 442000 <_fini+0x1c30>
  410d9c:	add	x5, x5, #0x2ec
  410da0:	adrp	x6, 442000 <_fini+0x1c30>
  410da4:	add	x6, x6, #0x305
  410da8:	mov	x9, xzr
  410dac:	mov	x7, x9
  410db0:	bl	407288 <log_struct_internal@plt>
  410db4:	ldur	x9, [x29, #-40]
  410db8:	mov	w8, #0x0                   	// #0
  410dbc:	strb	w8, [x9, #45]
  410dc0:	stur	wzr, [x29, #-4]
  410dc4:	ldur	w0, [x29, #-4]
  410dc8:	ldp	x29, x30, [sp, #112]
  410dcc:	add	sp, sp, #0x80
  410dd0:	ret

0000000000410dd4 <button_check_switches>:
  410dd4:	sub	sp, sp, #0x40
  410dd8:	stp	x29, x30, [sp, #48]
  410ddc:	add	x29, sp, #0x30
  410de0:	adrp	x8, 441000 <_fini+0xc30>
  410de4:	add	x8, x8, #0xdc0
  410de8:	add	x2, x8, #0x3
  410dec:	stur	x0, [x29, #-16]
  410df0:	str	xzr, [sp, #24]
  410df4:	str	x2, [sp, #16]
  410df8:	ldur	x8, [x29, #-16]
  410dfc:	cmp	x8, #0x0
  410e00:	cset	w9, ne  // ne = any
  410e04:	mov	w10, #0x1                   	// #1
  410e08:	eor	w9, w9, #0x1
  410e0c:	eor	w9, w9, w10
  410e10:	eor	w9, w9, w10
  410e14:	and	w9, w9, #0x1
  410e18:	mov	w0, w9
  410e1c:	sxtw	x8, w0
  410e20:	cbz	x8, 410e48 <button_check_switches+0x74>
  410e24:	mov	w8, wzr
  410e28:	mov	w0, w8
  410e2c:	adrp	x1, 441000 <_fini+0xc30>
  410e30:	add	x1, x1, #0xe0e
  410e34:	ldr	x2, [sp, #16]
  410e38:	mov	w3, #0x161                 	// #353
  410e3c:	adrp	x4, 441000 <_fini+0xc30>
  410e40:	add	x4, x4, #0xfe0
  410e44:	bl	406c68 <log_assert_failed_realm@plt>
  410e48:	ldur	x8, [x29, #-16]
  410e4c:	ldr	w9, [x8, #40]
  410e50:	cmp	w9, #0x0
  410e54:	cset	w9, ge  // ge = tcont
  410e58:	tbnz	w9, #0, 410e68 <button_check_switches+0x94>
  410e5c:	mov	w8, #0xffffffea            	// #-22
  410e60:	stur	w8, [x29, #-4]
  410e64:	b	410f00 <button_check_switches+0x12c>
  410e68:	ldur	x8, [x29, #-16]
  410e6c:	ldr	w0, [x8, #40]
  410e70:	mov	x1, #0x451b                	// #17691
  410e74:	movk	x1, #0x8008, lsl #16
  410e78:	add	x2, sp, #0x18
  410e7c:	bl	407268 <ioctl@plt>
  410e80:	cmp	w0, #0x0
  410e84:	cset	w9, ge  // ge = tcont
  410e88:	tbnz	w9, #0, 410ea4 <button_check_switches+0xd0>
  410e8c:	bl	406e08 <__errno_location@plt>
  410e90:	ldr	w8, [x0]
  410e94:	mov	w9, wzr
  410e98:	subs	w8, w9, w8
  410e9c:	stur	w8, [x29, #-4]
  410ea0:	b	410f00 <button_check_switches+0x12c>
  410ea4:	add	x8, sp, #0x18
  410ea8:	mov	x0, x8
  410eac:	mov	w9, wzr
  410eb0:	mov	w1, w9
  410eb4:	str	x8, [sp, #8]
  410eb8:	bl	410f10 <bitset_get>
  410ebc:	ldur	x8, [x29, #-16]
  410ec0:	mov	w9, #0x1                   	// #1
  410ec4:	and	w9, w0, w9
  410ec8:	strb	w9, [x8, #44]
  410ecc:	ldr	x0, [sp, #8]
  410ed0:	mov	w1, #0x5                   	// #5
  410ed4:	bl	410f10 <bitset_get>
  410ed8:	ldur	x8, [x29, #-16]
  410edc:	and	w9, w0, #0x1
  410ee0:	strb	w9, [x8, #45]
  410ee4:	ldur	x8, [x29, #-16]
  410ee8:	ldrb	w9, [x8, #44]
  410eec:	tbnz	w9, #0, 410ef4 <button_check_switches+0x120>
  410ef0:	b	410efc <button_check_switches+0x128>
  410ef4:	ldur	x0, [x29, #-16]
  410ef8:	bl	410f60 <button_install_check_event_source>
  410efc:	stur	wzr, [x29, #-4]
  410f00:	ldur	w0, [x29, #-4]
  410f04:	ldp	x29, x30, [sp, #48]
  410f08:	add	sp, sp, #0x40
  410f0c:	ret

0000000000410f10 <bitset_get>:
  410f10:	sub	sp, sp, #0x10
  410f14:	mov	x8, #0x40                  	// #64
  410f18:	str	x0, [sp, #8]
  410f1c:	str	w1, [sp, #4]
  410f20:	ldr	x9, [sp, #8]
  410f24:	ldr	w10, [sp, #4]
  410f28:	mov	w11, w10
  410f2c:	udiv	x11, x11, x8
  410f30:	ldr	x9, [x9, x11, lsl #3]
  410f34:	ldr	w10, [sp, #4]
  410f38:	mov	w11, w10
  410f3c:	udiv	x12, x11, x8
  410f40:	mul	x8, x12, x8
  410f44:	subs	x8, x11, x8
  410f48:	lsr	x8, x9, x8
  410f4c:	tst	x8, #0x1
  410f50:	cset	w10, ne  // ne = any
  410f54:	and	w0, w10, #0x1
  410f58:	add	sp, sp, #0x10
  410f5c:	ret

0000000000410f60 <button_install_check_event_source>:
  410f60:	sub	sp, sp, #0x30
  410f64:	stp	x29, x30, [sp, #32]
  410f68:	add	x29, sp, #0x20
  410f6c:	adrp	x8, 441000 <_fini+0xc30>
  410f70:	add	x8, x8, #0xdc0
  410f74:	add	x2, x8, #0x3
  410f78:	str	x0, [sp, #16]
  410f7c:	str	x2, [sp]
  410f80:	ldr	x8, [sp, #16]
  410f84:	cmp	x8, #0x0
  410f88:	cset	w9, ne  // ne = any
  410f8c:	mov	w10, #0x1                   	// #1
  410f90:	eor	w9, w9, #0x1
  410f94:	eor	w9, w9, w10
  410f98:	eor	w9, w9, w10
  410f9c:	and	w9, w9, #0x1
  410fa0:	mov	w0, w9
  410fa4:	sxtw	x8, w0
  410fa8:	cbz	x8, 410fd0 <button_install_check_event_source+0x70>
  410fac:	mov	w8, wzr
  410fb0:	mov	w0, w8
  410fb4:	adrp	x1, 441000 <_fini+0xc30>
  410fb8:	add	x1, x1, #0xe0e
  410fbc:	ldr	x2, [sp]
  410fc0:	mov	w3, #0x77                  	// #119
  410fc4:	adrp	x4, 442000 <_fini+0x1c30>
  410fc8:	add	x4, x4, #0x370
  410fcc:	bl	406c68 <log_assert_failed_realm@plt>
  410fd0:	ldr	x8, [sp, #16]
  410fd4:	ldr	x8, [x8, #16]
  410fd8:	cbz	x8, 410fe4 <button_install_check_event_source+0x84>
  410fdc:	stur	wzr, [x29, #-4]
  410fe0:	b	41103c <button_install_check_event_source+0xdc>
  410fe4:	ldr	x8, [sp, #16]
  410fe8:	ldr	x8, [x8]
  410fec:	ldr	x0, [x8]
  410ff0:	ldr	x8, [sp, #16]
  410ff4:	add	x1, x8, #0x10
  410ff8:	ldr	x3, [sp, #16]
  410ffc:	adrp	x2, 411000 <button_install_check_event_source+0xa0>
  411000:	add	x2, x2, #0x1ac
  411004:	bl	407298 <sd_event_add_post@plt>
  411008:	str	w0, [sp, #12]
  41100c:	ldr	w9, [sp, #12]
  411010:	cmp	w9, #0x0
  411014:	cset	w9, ge  // ge = tcont
  411018:	tbnz	w9, #0, 411028 <button_install_check_event_source+0xc8>
  41101c:	ldr	w8, [sp, #12]
  411020:	stur	w8, [x29, #-4]
  411024:	b	41103c <button_install_check_event_source+0xdc>
  411028:	ldr	x8, [sp, #16]
  41102c:	ldr	x0, [x8, #16]
  411030:	mov	x1, #0x65                  	// #101
  411034:	bl	407038 <sd_event_source_set_priority@plt>
  411038:	stur	w0, [x29, #-4]
  41103c:	ldur	w0, [x29, #-4]
  411040:	ldp	x29, x30, [sp, #32]
  411044:	add	sp, sp, #0x30
  411048:	ret

000000000041104c <bitset_put>:
  41104c:	sub	sp, sp, #0x10
  411050:	mov	x8, #0x40                  	// #64
  411054:	mov	x9, #0x1                   	// #1
  411058:	str	x0, [sp, #8]
  41105c:	str	w1, [sp, #4]
  411060:	ldr	w10, [sp, #4]
  411064:	mov	w11, w10
  411068:	udiv	x12, x11, x8
  41106c:	mul	x12, x12, x8
  411070:	subs	x11, x11, x12
  411074:	lsl	x9, x9, x11
  411078:	ldr	x11, [sp, #8]
  41107c:	ldr	w10, [sp, #4]
  411080:	mov	w12, w10
  411084:	udiv	x8, x12, x8
  411088:	mov	x12, #0x8                   	// #8
  41108c:	mul	x8, x12, x8
  411090:	add	x8, x11, x8
  411094:	ldr	x11, [x8]
  411098:	orr	x9, x11, x9
  41109c:	str	x9, [x8]
  4110a0:	add	sp, sp, #0x10
  4110a4:	ret

00000000004110a8 <button_lid_switch_handle_action>:
  4110a8:	sub	sp, sp, #0x30
  4110ac:	stp	x29, x30, [sp, #32]
  4110b0:	add	x29, sp, #0x20
  4110b4:	adrp	x8, 441000 <_fini+0xc30>
  4110b8:	add	x8, x8, #0xdc0
  4110bc:	add	x2, x8, #0x3
  4110c0:	stur	x0, [x29, #-8]
  4110c4:	and	w9, w1, #0x1
  4110c8:	sturb	w9, [x29, #-9]
  4110cc:	str	x2, [sp, #8]
  4110d0:	ldur	x8, [x29, #-8]
  4110d4:	cmp	x8, #0x0
  4110d8:	cset	w9, ne  // ne = any
  4110dc:	mov	w10, #0x1                   	// #1
  4110e0:	eor	w9, w9, #0x1
  4110e4:	eor	w9, w9, w10
  4110e8:	eor	w9, w9, w10
  4110ec:	and	w9, w9, #0x1
  4110f0:	mov	w0, w9
  4110f4:	sxtw	x8, w0
  4110f8:	cbz	x8, 411120 <button_lid_switch_handle_action+0x78>
  4110fc:	mov	w8, wzr
  411100:	mov	w0, w8
  411104:	adrp	x1, 442000 <_fini+0x1c30>
  411108:	add	x1, x1, #0x331
  41110c:	ldr	x2, [sp, #8]
  411110:	mov	w3, #0x5c                  	// #92
  411114:	adrp	x4, 442000 <_fini+0x1c30>
  411118:	add	x4, x4, #0x339
  41111c:	bl	406c68 <log_assert_failed_realm@plt>
  411120:	ldur	x0, [x29, #-8]
  411124:	bl	413360 <manager_is_docked_or_external_displays>
  411128:	tbnz	w0, #0, 411130 <button_lid_switch_handle_action+0x88>
  41112c:	b	411140 <button_lid_switch_handle_action+0x98>
  411130:	ldur	x8, [x29, #-8]
  411134:	ldr	w9, [x8, #416]
  411138:	str	w9, [sp, #16]
  41113c:	b	41117c <button_lid_switch_handle_action+0xd4>
  411140:	ldur	x8, [x29, #-8]
  411144:	ldr	w9, [x8, #412]
  411148:	mov	w10, #0xffffffff            	// #-1
  41114c:	cmp	w9, w10
  411150:	b.eq	411170 <button_lid_switch_handle_action+0xc8>  // b.none
  411154:	bl	4138b8 <manager_is_on_external_power>
  411158:	tbnz	w0, #0, 411160 <button_lid_switch_handle_action+0xb8>
  41115c:	b	411170 <button_lid_switch_handle_action+0xc8>
  411160:	ldur	x8, [x29, #-8]
  411164:	ldr	w9, [x8, #412]
  411168:	str	w9, [sp, #16]
  41116c:	b	41117c <button_lid_switch_handle_action+0xd4>
  411170:	ldur	x8, [x29, #-8]
  411174:	ldr	w9, [x8, #408]
  411178:	str	w9, [sp, #16]
  41117c:	ldur	x0, [x29, #-8]
  411180:	ldr	w2, [sp, #16]
  411184:	ldur	x8, [x29, #-8]
  411188:	ldrb	w9, [x8, #423]
  41118c:	ldurb	w10, [x29, #-9]
  411190:	mov	w1, #0x40                  	// #64
  411194:	and	w3, w9, #0x1
  411198:	and	w4, w10, #0x1
  41119c:	bl	40e7a4 <manager_handle_action>
  4111a0:	ldp	x29, x30, [sp, #32]
  4111a4:	add	sp, sp, #0x30
  4111a8:	ret

00000000004111ac <button_recheck>:
  4111ac:	sub	sp, sp, #0x30
  4111b0:	stp	x29, x30, [sp, #32]
  4111b4:	add	x29, sp, #0x20
  4111b8:	adrp	x8, 441000 <_fini+0xc30>
  4111bc:	add	x8, x8, #0xdc0
  4111c0:	add	x8, x8, #0x3
  4111c4:	stur	x0, [x29, #-8]
  4111c8:	str	x1, [sp, #16]
  4111cc:	ldr	x9, [sp, #16]
  4111d0:	str	x9, [sp, #8]
  4111d4:	str	x8, [sp]
  4111d8:	ldr	x8, [sp, #8]
  4111dc:	cmp	x8, #0x0
  4111e0:	cset	w9, ne  // ne = any
  4111e4:	mov	w10, #0x1                   	// #1
  4111e8:	eor	w9, w9, #0x1
  4111ec:	eor	w9, w9, w10
  4111f0:	eor	w9, w9, w10
  4111f4:	and	w9, w9, #0x1
  4111f8:	mov	w0, w9
  4111fc:	sxtw	x8, w0
  411200:	cbz	x8, 411228 <button_recheck+0x7c>
  411204:	mov	w8, wzr
  411208:	mov	w0, w8
  41120c:	adrp	x1, 441000 <_fini+0xc30>
  411210:	add	x1, x1, #0xe0e
  411214:	ldr	x2, [sp]
  411218:	mov	w3, #0x6e                  	// #110
  41121c:	adrp	x4, 442000 <_fini+0x1c30>
  411220:	add	x4, x4, #0x3a0
  411224:	bl	406c68 <log_assert_failed_realm@plt>
  411228:	ldr	x8, [sp, #8]
  41122c:	ldrb	w9, [x8, #44]
  411230:	mov	w10, #0x1                   	// #1
  411234:	eor	w9, w9, #0x1
  411238:	eor	w9, w9, w10
  41123c:	eor	w9, w9, w10
  411240:	and	w9, w9, #0x1
  411244:	mov	w0, w9
  411248:	sxtw	x8, w0
  41124c:	cbz	x8, 411274 <button_recheck+0xc8>
  411250:	mov	w8, wzr
  411254:	mov	w0, w8
  411258:	adrp	x1, 442000 <_fini+0x1c30>
  41125c:	add	x1, x1, #0x3ce
  411260:	ldr	x2, [sp]
  411264:	mov	w3, #0x6f                  	// #111
  411268:	adrp	x4, 442000 <_fini+0x1c30>
  41126c:	add	x4, x4, #0x3a0
  411270:	bl	406c68 <log_assert_failed_realm@plt>
  411274:	ldr	x8, [sp, #8]
  411278:	ldr	x0, [x8]
  41127c:	mov	w9, wzr
  411280:	and	w1, w9, #0x1
  411284:	bl	4110a8 <button_lid_switch_handle_action>
  411288:	mov	w0, #0x1                   	// #1
  41128c:	ldp	x29, x30, [sp, #32]
  411290:	add	sp, sp, #0x30
  411294:	ret

0000000000411298 <manager_reset_config>:
  411298:	sub	sp, sp, #0x30
  41129c:	stp	x29, x30, [sp, #32]
  4112a0:	add	x29, sp, #0x20
  4112a4:	adrp	x8, 442000 <_fini+0x1c30>
  4112a8:	add	x8, x8, #0x3dc
  4112ac:	add	x2, x8, #0x3
  4112b0:	stur	x0, [x29, #-8]
  4112b4:	str	x2, [sp, #16]
  4112b8:	ldur	x8, [x29, #-8]
  4112bc:	cmp	x8, #0x0
  4112c0:	cset	w9, ne  // ne = any
  4112c4:	mov	w10, #0x1                   	// #1
  4112c8:	eor	w9, w9, #0x1
  4112cc:	eor	w9, w9, w10
  4112d0:	eor	w9, w9, w10
  4112d4:	and	w9, w9, #0x1
  4112d8:	mov	w0, w9
  4112dc:	sxtw	x8, w0
  4112e0:	cbz	x8, 411308 <manager_reset_config+0x70>
  4112e4:	mov	w8, wzr
  4112e8:	mov	w0, w8
  4112ec:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4112f0:	add	x1, x1, #0x5ef
  4112f4:	ldr	x2, [sp, #16]
  4112f8:	mov	w3, #0x20                  	// #32
  4112fc:	adrp	x4, 442000 <_fini+0x1c30>
  411300:	add	x4, x4, #0x3f7
  411304:	bl	406c68 <log_assert_failed_realm@plt>
  411308:	ldur	x8, [x29, #-8]
  41130c:	mov	w9, #0x6                   	// #6
  411310:	str	w9, [x8, #156]
  411314:	ldur	x8, [x29, #-8]
  411318:	str	w9, [x8, #160]
  41131c:	ldur	x8, [x29, #-8]
  411320:	mov	w10, #0x1                   	// #1
  411324:	strb	w10, [x8, #424]
  411328:	ldur	x8, [x29, #-8]
  41132c:	mov	x11, #0x4b40                	// #19264
  411330:	movk	x11, #0x4c, lsl #16
  411334:	str	x11, [x8, #232]
  411338:	ldur	x8, [x29, #-8]
  41133c:	mov	x11, #0x9680                	// #38528
  411340:	movk	x11, #0x98, lsl #16
  411344:	str	x11, [x8, #240]
  411348:	ldur	x8, [x29, #-8]
  41134c:	mov	w12, #0x1                   	// #1
  411350:	str	w12, [x8, #396]
  411354:	ldur	x8, [x29, #-8]
  411358:	mov	w12, #0x5                   	// #5
  41135c:	str	w12, [x8, #400]
  411360:	ldur	x8, [x29, #-8]
  411364:	str	w9, [x8, #404]
  411368:	ldur	x8, [x29, #-8]
  41136c:	str	w12, [x8, #408]
  411370:	ldur	x8, [x29, #-8]
  411374:	mov	w9, #0xffffffff            	// #-1
  411378:	str	w9, [x8, #412]
  41137c:	ldur	x8, [x29, #-8]
  411380:	str	wzr, [x8, #416]
  411384:	ldur	x8, [x29, #-8]
  411388:	mov	w9, #0x0                   	// #0
  41138c:	strb	w9, [x8, #420]
  411390:	ldur	x8, [x29, #-8]
  411394:	strb	w9, [x8, #421]
  411398:	ldur	x8, [x29, #-8]
  41139c:	strb	w9, [x8, #422]
  4113a0:	ldur	x8, [x29, #-8]
  4113a4:	strb	w10, [x8, #423]
  4113a8:	ldur	x8, [x29, #-8]
  4113ac:	mov	x11, #0xc380                	// #50048
  4113b0:	movk	x11, #0x1c9, lsl #16
  4113b4:	str	x11, [x8, #440]
  4113b8:	ldur	x8, [x29, #-8]
  4113bc:	mov	x11, #0xd200                	// #53760
  4113c0:	movk	x11, #0x6b49, lsl #16
  4113c4:	str	x11, [x8, #376]
  4113c8:	ldur	x8, [x29, #-8]
  4113cc:	str	wzr, [x8, #392]
  4113d0:	mov	x0, #0xa                   	// #10
  4113d4:	mov	x1, #0x64                  	// #100
  4113d8:	str	w10, [sp, #12]
  4113dc:	bl	4072a8 <physical_memory_scale@plt>
  4113e0:	ldur	x8, [x29, #-8]
  4113e4:	str	x0, [x8, #456]
  4113e8:	ldur	x8, [x29, #-8]
  4113ec:	mov	x11, #0x2000                	// #8192
  4113f0:	str	x11, [x8, #464]
  4113f4:	ldur	x8, [x29, #-8]
  4113f8:	str	x11, [x8, #472]
  4113fc:	ldur	x8, [x29, #-8]
  411400:	ldr	w9, [sp, #12]
  411404:	strb	w9, [x8, #192]
  411408:	ldur	x8, [x29, #-8]
  41140c:	ldr	x0, [x8, #176]
  411410:	bl	406d98 <strv_free@plt>
  411414:	ldur	x8, [x29, #-8]
  411418:	str	x0, [x8, #176]
  41141c:	ldur	x8, [x29, #-8]
  411420:	ldr	x0, [x8, #184]
  411424:	bl	406d98 <strv_free@plt>
  411428:	ldur	x8, [x29, #-8]
  41142c:	str	x0, [x8, #184]
  411430:	ldp	x29, x30, [sp, #32]
  411434:	add	sp, sp, #0x30
  411438:	ret

000000000041143c <manager_parse_config_file>:
  41143c:	sub	sp, sp, #0x20
  411440:	stp	x29, x30, [sp, #16]
  411444:	add	x29, sp, #0x10
  411448:	adrp	x8, 442000 <_fini+0x1c30>
  41144c:	add	x8, x8, #0x3dc
  411450:	add	x2, x8, #0x3
  411454:	str	x0, [sp, #8]
  411458:	str	x2, [sp]
  41145c:	ldr	x8, [sp, #8]
  411460:	cmp	x8, #0x0
  411464:	cset	w9, ne  // ne = any
  411468:	mov	w10, #0x1                   	// #1
  41146c:	eor	w9, w9, #0x1
  411470:	eor	w9, w9, w10
  411474:	eor	w9, w9, w10
  411478:	and	w9, w9, #0x1
  41147c:	mov	w0, w9
  411480:	sxtw	x8, w0
  411484:	cbz	x8, 4114ac <manager_parse_config_file+0x70>
  411488:	mov	w8, wzr
  41148c:	mov	w0, w8
  411490:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  411494:	add	x1, x1, #0x5ef
  411498:	ldr	x2, [sp]
  41149c:	mov	w3, #0x43                  	// #67
  4114a0:	adrp	x4, 442000 <_fini+0x1c30>
  4114a4:	add	x4, x4, #0x41c
  4114a8:	bl	406c68 <log_assert_failed_realm@plt>
  4114ac:	ldr	x6, [sp, #8]
  4114b0:	adrp	x0, 442000 <_fini+0x1c30>
  4114b4:	add	x0, x0, #0x445
  4114b8:	adrp	x1, 44b000 <_fini+0xac30>
  4114bc:	add	x1, x1, #0xb50
  4114c0:	adrp	x2, 44b000 <_fini+0xac30>
  4114c4:	add	x2, x2, #0xbe6
  4114c8:	adrp	x3, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4114cc:	ldr	x3, [x3, #1368]
  4114d0:	adrp	x4, 45f000 <logind_gperf_lookup.wordlist+0x388>
  4114d4:	ldr	x4, [x4, #1376]
  4114d8:	mov	w5, #0x4                   	// #4
  4114dc:	bl	4072b8 <config_parse_many_nulstr@plt>
  4114e0:	ldp	x29, x30, [sp, #16]
  4114e4:	add	sp, sp, #0x20
  4114e8:	ret

00000000004114ec <manager_add_device>:
  4114ec:	sub	sp, sp, #0x50
  4114f0:	stp	x29, x30, [sp, #64]
  4114f4:	add	x29, sp, #0x40
  4114f8:	adrp	x8, 442000 <_fini+0x1c30>
  4114fc:	add	x8, x8, #0x3dc
  411500:	add	x8, x8, #0x3
  411504:	stur	x0, [x29, #-16]
  411508:	stur	x1, [x29, #-24]
  41150c:	and	w9, w2, #0x1
  411510:	sturb	w9, [x29, #-25]
  411514:	str	x3, [sp, #24]
  411518:	str	x8, [sp, #8]
  41151c:	ldur	x8, [x29, #-16]
  411520:	cmp	x8, #0x0
  411524:	cset	w9, ne  // ne = any
  411528:	mov	w10, #0x1                   	// #1
  41152c:	eor	w9, w9, #0x1
  411530:	eor	w9, w9, w10
  411534:	eor	w9, w9, w10
  411538:	and	w9, w9, #0x1
  41153c:	mov	w0, w9
  411540:	sxtw	x8, w0
  411544:	cbz	x8, 41156c <manager_add_device+0x80>
  411548:	mov	w8, wzr
  41154c:	mov	w0, w8
  411550:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  411554:	add	x1, x1, #0x5ef
  411558:	ldr	x2, [sp, #8]
  41155c:	mov	w3, #0x4f                  	// #79
  411560:	adrp	x4, 442000 <_fini+0x1c30>
  411564:	add	x4, x4, #0x45e
  411568:	bl	406c68 <log_assert_failed_realm@plt>
  41156c:	ldur	x8, [x29, #-24]
  411570:	cmp	x8, #0x0
  411574:	cset	w9, ne  // ne = any
  411578:	mov	w10, #0x1                   	// #1
  41157c:	eor	w9, w9, #0x1
  411580:	eor	w9, w9, w10
  411584:	eor	w9, w9, w10
  411588:	and	w9, w9, #0x1
  41158c:	mov	w0, w9
  411590:	sxtw	x8, w0
  411594:	cbz	x8, 4115bc <manager_add_device+0xd0>
  411598:	mov	w8, wzr
  41159c:	mov	w0, w8
  4115a0:	adrp	x1, 442000 <_fini+0x1c30>
  4115a4:	add	x1, x1, #0x4a0
  4115a8:	ldr	x2, [sp, #8]
  4115ac:	mov	w3, #0x50                  	// #80
  4115b0:	adrp	x4, 442000 <_fini+0x1c30>
  4115b4:	add	x4, x4, #0x45e
  4115b8:	bl	406c68 <log_assert_failed_realm@plt>
  4115bc:	ldur	x8, [x29, #-16]
  4115c0:	ldr	x0, [x8, #16]
  4115c4:	ldur	x1, [x29, #-24]
  4115c8:	bl	41165c <hashmap_get>
  4115cc:	str	x0, [sp, #16]
  4115d0:	ldr	x8, [sp, #16]
  4115d4:	cbz	x8, 411608 <manager_add_device+0x11c>
  4115d8:	ldr	x8, [sp, #16]
  4115dc:	ldrb	w9, [x8, #24]
  4115e0:	mov	w10, #0x1                   	// #1
  4115e4:	str	w10, [sp, #4]
  4115e8:	tbnz	w9, #0, 4115f4 <manager_add_device+0x108>
  4115ec:	ldurb	w8, [x29, #-25]
  4115f0:	str	w8, [sp, #4]
  4115f4:	ldr	w8, [sp, #4]
  4115f8:	ldr	x9, [sp, #16]
  4115fc:	and	w8, w8, #0x1
  411600:	strb	w8, [x9, #24]
  411604:	b	411634 <manager_add_device+0x148>
  411608:	ldur	x0, [x29, #-16]
  41160c:	ldur	x1, [x29, #-24]
  411610:	ldurb	w8, [x29, #-25]
  411614:	and	w2, w8, #0x1
  411618:	bl	424444 <device_new>
  41161c:	str	x0, [sp, #16]
  411620:	ldr	x9, [sp, #16]
  411624:	cbnz	x9, 411634 <manager_add_device+0x148>
  411628:	mov	w8, #0xfffffff4            	// #-12
  41162c:	stur	w8, [x29, #-4]
  411630:	b	41164c <manager_add_device+0x160>
  411634:	ldr	x8, [sp, #24]
  411638:	cbz	x8, 411648 <manager_add_device+0x15c>
  41163c:	ldr	x8, [sp, #16]
  411640:	ldr	x9, [sp, #24]
  411644:	str	x8, [x9]
  411648:	stur	wzr, [x29, #-4]
  41164c:	ldur	w0, [x29, #-4]
  411650:	ldp	x29, x30, [sp, #64]
  411654:	add	sp, sp, #0x50
  411658:	ret

000000000041165c <hashmap_get>:
  41165c:	sub	sp, sp, #0x20
  411660:	stp	x29, x30, [sp, #16]
  411664:	add	x29, sp, #0x10
  411668:	str	x0, [sp, #8]
  41166c:	str	x1, [sp]
  411670:	ldr	x0, [sp, #8]
  411674:	ldr	x1, [sp]
  411678:	bl	4070e8 <internal_hashmap_get@plt>
  41167c:	ldp	x29, x30, [sp, #16]
  411680:	add	sp, sp, #0x20
  411684:	ret

0000000000411688 <manager_add_seat>:
  411688:	sub	sp, sp, #0x50
  41168c:	stp	x29, x30, [sp, #64]
  411690:	add	x29, sp, #0x40
  411694:	adrp	x8, 442000 <_fini+0x1c30>
  411698:	add	x8, x8, #0x3dc
  41169c:	add	x8, x8, #0x3
  4116a0:	stur	x0, [x29, #-16]
  4116a4:	stur	x1, [x29, #-24]
  4116a8:	str	x2, [sp, #32]
  4116ac:	str	x8, [sp, #8]
  4116b0:	ldur	x8, [x29, #-16]
  4116b4:	cmp	x8, #0x0
  4116b8:	cset	w9, ne  // ne = any
  4116bc:	mov	w10, #0x1                   	// #1
  4116c0:	eor	w9, w9, #0x1
  4116c4:	eor	w9, w9, w10
  4116c8:	eor	w9, w9, w10
  4116cc:	and	w9, w9, #0x1
  4116d0:	mov	w0, w9
  4116d4:	sxtw	x8, w0
  4116d8:	cbz	x8, 411700 <manager_add_seat+0x78>
  4116dc:	mov	w8, wzr
  4116e0:	mov	w0, w8
  4116e4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4116e8:	add	x1, x1, #0x5ef
  4116ec:	ldr	x2, [sp, #8]
  4116f0:	mov	w3, #0x66                  	// #102
  4116f4:	adrp	x4, 442000 <_fini+0x1c30>
  4116f8:	add	x4, x4, #0x4a6
  4116fc:	bl	406c68 <log_assert_failed_realm@plt>
  411700:	ldur	x8, [x29, #-24]
  411704:	cmp	x8, #0x0
  411708:	cset	w9, ne  // ne = any
  41170c:	mov	w10, #0x1                   	// #1
  411710:	eor	w9, w9, #0x1
  411714:	eor	w9, w9, w10
  411718:	eor	w9, w9, w10
  41171c:	and	w9, w9, #0x1
  411720:	mov	w0, w9
  411724:	sxtw	x8, w0
  411728:	cbz	x8, 411750 <manager_add_seat+0xc8>
  41172c:	mov	w8, wzr
  411730:	mov	w0, w8
  411734:	adrp	x1, 442000 <_fini+0x1c30>
  411738:	add	x1, x1, #0x4dd
  41173c:	ldr	x2, [sp, #8]
  411740:	mov	w3, #0x67                  	// #103
  411744:	adrp	x4, 442000 <_fini+0x1c30>
  411748:	add	x4, x4, #0x4a6
  41174c:	bl	406c68 <log_assert_failed_realm@plt>
  411750:	ldur	x8, [x29, #-16]
  411754:	ldr	x0, [x8, #24]
  411758:	ldur	x1, [x29, #-24]
  41175c:	bl	41165c <hashmap_get>
  411760:	str	x0, [sp, #24]
  411764:	ldr	x8, [sp, #24]
  411768:	cbnz	x8, 41179c <manager_add_seat+0x114>
  41176c:	ldur	x1, [x29, #-16]
  411770:	ldur	x2, [x29, #-24]
  411774:	add	x0, sp, #0x18
  411778:	bl	428f58 <seat_new>
  41177c:	str	w0, [sp, #20]
  411780:	ldr	w8, [sp, #20]
  411784:	cmp	w8, #0x0
  411788:	cset	w8, ge  // ge = tcont
  41178c:	tbnz	w8, #0, 41179c <manager_add_seat+0x114>
  411790:	ldr	w8, [sp, #20]
  411794:	stur	w8, [x29, #-4]
  411798:	b	4117b4 <manager_add_seat+0x12c>
  41179c:	ldr	x8, [sp, #32]
  4117a0:	cbz	x8, 4117b0 <manager_add_seat+0x128>
  4117a4:	ldr	x8, [sp, #24]
  4117a8:	ldr	x9, [sp, #32]
  4117ac:	str	x8, [x9]
  4117b0:	stur	wzr, [x29, #-4]
  4117b4:	ldur	w0, [x29, #-4]
  4117b8:	ldp	x29, x30, [sp, #64]
  4117bc:	add	sp, sp, #0x50
  4117c0:	ret

00000000004117c4 <manager_add_session>:
  4117c4:	sub	sp, sp, #0x50
  4117c8:	stp	x29, x30, [sp, #64]
  4117cc:	add	x29, sp, #0x40
  4117d0:	adrp	x8, 442000 <_fini+0x1c30>
  4117d4:	add	x8, x8, #0x3dc
  4117d8:	add	x8, x8, #0x3
  4117dc:	stur	x0, [x29, #-16]
  4117e0:	stur	x1, [x29, #-24]
  4117e4:	str	x2, [sp, #32]
  4117e8:	str	x8, [sp, #8]
  4117ec:	ldur	x8, [x29, #-16]
  4117f0:	cmp	x8, #0x0
  4117f4:	cset	w9, ne  // ne = any
  4117f8:	mov	w10, #0x1                   	// #1
  4117fc:	eor	w9, w9, #0x1
  411800:	eor	w9, w9, w10
  411804:	eor	w9, w9, w10
  411808:	and	w9, w9, #0x1
  41180c:	mov	w0, w9
  411810:	sxtw	x8, w0
  411814:	cbz	x8, 41183c <manager_add_session+0x78>
  411818:	mov	w8, wzr
  41181c:	mov	w0, w8
  411820:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  411824:	add	x1, x1, #0x5ef
  411828:	ldr	x2, [sp, #8]
  41182c:	mov	w3, #0x7a                  	// #122
  411830:	adrp	x4, 442000 <_fini+0x1c30>
  411834:	add	x4, x4, #0x4e0
  411838:	bl	406c68 <log_assert_failed_realm@plt>
  41183c:	ldur	x8, [x29, #-24]
  411840:	cmp	x8, #0x0
  411844:	cset	w9, ne  // ne = any
  411848:	mov	w10, #0x1                   	// #1
  41184c:	eor	w9, w9, #0x1
  411850:	eor	w9, w9, w10
  411854:	eor	w9, w9, w10
  411858:	and	w9, w9, #0x1
  41185c:	mov	w0, w9
  411860:	sxtw	x8, w0
  411864:	cbz	x8, 41188c <manager_add_session+0xc8>
  411868:	mov	w8, wzr
  41186c:	mov	w0, w8
  411870:	adrp	x1, 442000 <_fini+0x1c30>
  411874:	add	x1, x1, #0x4dd
  411878:	ldr	x2, [sp, #8]
  41187c:	mov	w3, #0x7b                  	// #123
  411880:	adrp	x4, 442000 <_fini+0x1c30>
  411884:	add	x4, x4, #0x4e0
  411888:	bl	406c68 <log_assert_failed_realm@plt>
  41188c:	ldur	x8, [x29, #-16]
  411890:	ldr	x0, [x8, #32]
  411894:	ldur	x1, [x29, #-24]
  411898:	bl	41165c <hashmap_get>
  41189c:	str	x0, [sp, #24]
  4118a0:	ldr	x8, [sp, #24]
  4118a4:	cbnz	x8, 4118d8 <manager_add_session+0x114>
  4118a8:	ldur	x1, [x29, #-16]
  4118ac:	ldur	x2, [x29, #-24]
  4118b0:	add	x0, sp, #0x18
  4118b4:	bl	431d78 <session_new>
  4118b8:	str	w0, [sp, #20]
  4118bc:	ldr	w8, [sp, #20]
  4118c0:	cmp	w8, #0x0
  4118c4:	cset	w8, ge  // ge = tcont
  4118c8:	tbnz	w8, #0, 4118d8 <manager_add_session+0x114>
  4118cc:	ldr	w8, [sp, #20]
  4118d0:	stur	w8, [x29, #-4]
  4118d4:	b	4118f0 <manager_add_session+0x12c>
  4118d8:	ldr	x8, [sp, #32]
  4118dc:	cbz	x8, 4118ec <manager_add_session+0x128>
  4118e0:	ldr	x8, [sp, #24]
  4118e4:	ldr	x9, [sp, #32]
  4118e8:	str	x8, [x9]
  4118ec:	stur	wzr, [x29, #-4]
  4118f0:	ldur	w0, [x29, #-4]
  4118f4:	ldp	x29, x30, [sp, #64]
  4118f8:	add	sp, sp, #0x50
  4118fc:	ret

0000000000411900 <manager_add_user>:
  411900:	sub	sp, sp, #0x60
  411904:	stp	x29, x30, [sp, #80]
  411908:	add	x29, sp, #0x50
  41190c:	adrp	x8, 442000 <_fini+0x1c30>
  411910:	add	x8, x8, #0x3dc
  411914:	add	x8, x8, #0x3
  411918:	stur	x0, [x29, #-16]
  41191c:	stur	w1, [x29, #-20]
  411920:	stur	w2, [x29, #-24]
  411924:	stur	x3, [x29, #-32]
  411928:	str	x4, [sp, #40]
  41192c:	str	x5, [sp, #32]
  411930:	str	x8, [sp, #8]
  411934:	ldur	x8, [x29, #-16]
  411938:	cmp	x8, #0x0
  41193c:	cset	w9, ne  // ne = any
  411940:	mov	w10, #0x1                   	// #1
  411944:	eor	w9, w9, #0x1
  411948:	eor	w9, w9, w10
  41194c:	eor	w9, w9, w10
  411950:	and	w9, w9, #0x1
  411954:	mov	w0, w9
  411958:	sxtw	x8, w0
  41195c:	cbz	x8, 411984 <manager_add_user+0x84>
  411960:	mov	w8, wzr
  411964:	mov	w0, w8
  411968:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41196c:	add	x1, x1, #0x5ef
  411970:	ldr	x2, [sp, #8]
  411974:	mov	w3, #0x95                  	// #149
  411978:	adrp	x4, 442000 <_fini+0x1c30>
  41197c:	add	x4, x4, #0x51d
  411980:	bl	406c68 <log_assert_failed_realm@plt>
  411984:	ldur	x8, [x29, #-32]
  411988:	cmp	x8, #0x0
  41198c:	cset	w9, ne  // ne = any
  411990:	mov	w10, #0x1                   	// #1
  411994:	eor	w9, w9, #0x1
  411998:	eor	w9, w9, w10
  41199c:	eor	w9, w9, w10
  4119a0:	and	w9, w9, #0x1
  4119a4:	mov	w0, w9
  4119a8:	sxtw	x8, w0
  4119ac:	cbz	x8, 4119d4 <manager_add_user+0xd4>
  4119b0:	mov	w8, wzr
  4119b4:	mov	w0, w8
  4119b8:	adrp	x1, 441000 <_fini+0xc30>
  4119bc:	add	x1, x1, #0xe09
  4119c0:	ldr	x2, [sp, #8]
  4119c4:	mov	w3, #0x96                  	// #150
  4119c8:	adrp	x4, 442000 <_fini+0x1c30>
  4119cc:	add	x4, x4, #0x51d
  4119d0:	bl	406c68 <log_assert_failed_realm@plt>
  4119d4:	ldur	x8, [x29, #-16]
  4119d8:	ldr	x0, [x8, #48]
  4119dc:	ldur	w9, [x29, #-20]
  4119e0:	mov	w8, w9
  4119e4:	add	x8, x8, #0x1
  4119e8:	mov	x1, x8
  4119ec:	bl	41165c <hashmap_get>
  4119f0:	str	x0, [sp, #24]
  4119f4:	ldr	x8, [sp, #24]
  4119f8:	cbnz	x8, 411a38 <manager_add_user+0x138>
  4119fc:	ldur	x1, [x29, #-16]
  411a00:	ldur	w2, [x29, #-20]
  411a04:	ldur	w3, [x29, #-24]
  411a08:	ldur	x4, [x29, #-32]
  411a0c:	ldr	x5, [sp, #40]
  411a10:	add	x0, sp, #0x18
  411a14:	bl	4399e4 <user_new>
  411a18:	str	w0, [sp, #20]
  411a1c:	ldr	w8, [sp, #20]
  411a20:	cmp	w8, #0x0
  411a24:	cset	w8, ge  // ge = tcont
  411a28:	tbnz	w8, #0, 411a38 <manager_add_user+0x138>
  411a2c:	ldr	w8, [sp, #20]
  411a30:	stur	w8, [x29, #-4]
  411a34:	b	411a50 <manager_add_user+0x150>
  411a38:	ldr	x8, [sp, #32]
  411a3c:	cbz	x8, 411a4c <manager_add_user+0x14c>
  411a40:	ldr	x8, [sp, #24]
  411a44:	ldr	x9, [sp, #32]
  411a48:	str	x8, [x9]
  411a4c:	stur	wzr, [x29, #-4]
  411a50:	ldur	w0, [x29, #-4]
  411a54:	ldp	x29, x30, [sp, #80]
  411a58:	add	sp, sp, #0x60
  411a5c:	ret

0000000000411a60 <manager_add_user_by_name>:
  411a60:	sub	sp, sp, #0x50
  411a64:	stp	x29, x30, [sp, #64]
  411a68:	add	x29, sp, #0x40
  411a6c:	mov	x8, xzr
  411a70:	adrp	x9, 442000 <_fini+0x1c30>
  411a74:	add	x9, x9, #0x3dc
  411a78:	add	x9, x9, #0x3
  411a7c:	stur	x0, [x29, #-16]
  411a80:	stur	x1, [x29, #-24]
  411a84:	str	x2, [sp, #32]
  411a88:	str	x8, [sp, #24]
  411a8c:	str	x9, [sp]
  411a90:	ldur	x8, [x29, #-16]
  411a94:	cmp	x8, #0x0
  411a98:	cset	w9, ne  // ne = any
  411a9c:	mov	w10, #0x1                   	// #1
  411aa0:	eor	w9, w9, #0x1
  411aa4:	eor	w9, w9, w10
  411aa8:	eor	w9, w9, w10
  411aac:	and	w9, w9, #0x1
  411ab0:	mov	w0, w9
  411ab4:	sxtw	x8, w0
  411ab8:	cbz	x8, 411ae0 <manager_add_user_by_name+0x80>
  411abc:	mov	w8, wzr
  411ac0:	mov	w0, w8
  411ac4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  411ac8:	add	x1, x1, #0x5ef
  411acc:	ldr	x2, [sp]
  411ad0:	mov	w3, #0xaf                  	// #175
  411ad4:	adrp	x4, 442000 <_fini+0x1c30>
  411ad8:	add	x4, x4, #0x570
  411adc:	bl	406c68 <log_assert_failed_realm@plt>
  411ae0:	ldur	x8, [x29, #-24]
  411ae4:	cmp	x8, #0x0
  411ae8:	cset	w9, ne  // ne = any
  411aec:	mov	w10, #0x1                   	// #1
  411af0:	eor	w9, w9, #0x1
  411af4:	eor	w9, w9, w10
  411af8:	eor	w9, w9, w10
  411afc:	and	w9, w9, #0x1
  411b00:	mov	w0, w9
  411b04:	sxtw	x8, w0
  411b08:	cbz	x8, 411b30 <manager_add_user_by_name+0xd0>
  411b0c:	mov	w8, wzr
  411b10:	mov	w0, w8
  411b14:	adrp	x1, 441000 <_fini+0xc30>
  411b18:	add	x1, x1, #0xe09
  411b1c:	ldr	x2, [sp]
  411b20:	mov	w3, #0xb0                  	// #176
  411b24:	adrp	x4, 442000 <_fini+0x1c30>
  411b28:	add	x4, x4, #0x570
  411b2c:	bl	406c68 <log_assert_failed_realm@plt>
  411b30:	sub	x0, x29, #0x18
  411b34:	add	x1, sp, #0x14
  411b38:	add	x2, sp, #0x10
  411b3c:	add	x3, sp, #0x18
  411b40:	mov	x8, xzr
  411b44:	mov	x4, x8
  411b48:	mov	w9, wzr
  411b4c:	mov	w5, w9
  411b50:	bl	4072c8 <get_user_creds@plt>
  411b54:	str	w0, [sp, #12]
  411b58:	ldr	w9, [sp, #12]
  411b5c:	cmp	w9, #0x0
  411b60:	cset	w9, ge  // ge = tcont
  411b64:	tbnz	w9, #0, 411b74 <manager_add_user_by_name+0x114>
  411b68:	ldr	w8, [sp, #12]
  411b6c:	stur	w8, [x29, #-4]
  411b70:	b	411b94 <manager_add_user_by_name+0x134>
  411b74:	ldur	x0, [x29, #-16]
  411b78:	ldr	w1, [sp, #20]
  411b7c:	ldr	w2, [sp, #16]
  411b80:	ldur	x3, [x29, #-24]
  411b84:	ldr	x4, [sp, #24]
  411b88:	ldr	x5, [sp, #32]
  411b8c:	bl	411900 <manager_add_user>
  411b90:	stur	w0, [x29, #-4]
  411b94:	ldur	w0, [x29, #-4]
  411b98:	ldp	x29, x30, [sp, #64]
  411b9c:	add	sp, sp, #0x50
  411ba0:	ret

0000000000411ba4 <manager_add_user_by_uid>:
  411ba4:	sub	sp, sp, #0x40
  411ba8:	stp	x29, x30, [sp, #48]
  411bac:	add	x29, sp, #0x30
  411bb0:	adrp	x8, 442000 <_fini+0x1c30>
  411bb4:	add	x8, x8, #0x3dc
  411bb8:	add	x8, x8, #0x3
  411bbc:	stur	x0, [x29, #-16]
  411bc0:	stur	w1, [x29, #-20]
  411bc4:	str	x2, [sp, #16]
  411bc8:	str	x8, [sp]
  411bcc:	ldur	x8, [x29, #-16]
  411bd0:	cmp	x8, #0x0
  411bd4:	cset	w9, ne  // ne = any
  411bd8:	mov	w10, #0x1                   	// #1
  411bdc:	eor	w9, w9, #0x1
  411be0:	eor	w9, w9, w10
  411be4:	eor	w9, w9, w10
  411be8:	and	w9, w9, #0x1
  411bec:	mov	w0, w9
  411bf0:	sxtw	x8, w0
  411bf4:	cbz	x8, 411c1c <manager_add_user_by_uid+0x78>
  411bf8:	mov	w8, wzr
  411bfc:	mov	w0, w8
  411c00:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  411c04:	add	x1, x1, #0x5ef
  411c08:	ldr	x2, [sp]
  411c0c:	mov	w3, #0xbc                  	// #188
  411c10:	adrp	x4, 442000 <_fini+0x1c30>
  411c14:	add	x4, x4, #0x5af
  411c18:	bl	406c68 <log_assert_failed_realm@plt>
  411c1c:	bl	406e08 <__errno_location@plt>
  411c20:	str	wzr, [x0]
  411c24:	ldur	w0, [x29, #-20]
  411c28:	bl	4072d8 <getpwuid@plt>
  411c2c:	str	x0, [sp, #8]
  411c30:	ldr	x8, [sp, #8]
  411c34:	cbnz	x8, 411c48 <manager_add_user_by_uid+0xa4>
  411c38:	mov	w0, #0x2                   	// #2
  411c3c:	bl	411c84 <errno_or_else>
  411c40:	stur	w0, [x29, #-4]
  411c44:	b	411c74 <manager_add_user_by_uid+0xd0>
  411c48:	ldur	x0, [x29, #-16]
  411c4c:	ldur	w1, [x29, #-20]
  411c50:	ldr	x8, [sp, #8]
  411c54:	ldr	w2, [x8, #20]
  411c58:	ldr	x8, [sp, #8]
  411c5c:	ldr	x3, [x8]
  411c60:	ldr	x8, [sp, #8]
  411c64:	ldr	x4, [x8, #32]
  411c68:	ldr	x5, [sp, #16]
  411c6c:	bl	411900 <manager_add_user>
  411c70:	stur	w0, [x29, #-4]
  411c74:	ldur	w0, [x29, #-4]
  411c78:	ldp	x29, x30, [sp, #48]
  411c7c:	add	sp, sp, #0x40
  411c80:	ret

0000000000411c84 <errno_or_else>:
  411c84:	sub	sp, sp, #0x20
  411c88:	stp	x29, x30, [sp, #16]
  411c8c:	add	x29, sp, #0x10
  411c90:	str	w0, [sp, #8]
  411c94:	bl	406e08 <__errno_location@plt>
  411c98:	ldr	w8, [x0]
  411c9c:	cmp	w8, #0x0
  411ca0:	cset	w8, le
  411ca4:	tbnz	w8, #0, 411cc0 <errno_or_else+0x3c>
  411ca8:	bl	406e08 <__errno_location@plt>
  411cac:	ldr	w8, [x0]
  411cb0:	mov	w9, wzr
  411cb4:	subs	w8, w9, w8
  411cb8:	stur	w8, [x29, #-4]
  411cbc:	b	411cd4 <errno_or_else+0x50>
  411cc0:	ldr	w0, [sp, #8]
  411cc4:	bl	406c28 <abs@plt>
  411cc8:	mov	w8, wzr
  411ccc:	subs	w8, w8, w0
  411cd0:	stur	w8, [x29, #-4]
  411cd4:	ldur	w0, [x29, #-4]
  411cd8:	ldp	x29, x30, [sp, #16]
  411cdc:	add	sp, sp, #0x20
  411ce0:	ret

0000000000411ce4 <manager_add_inhibitor>:
  411ce4:	sub	sp, sp, #0x50
  411ce8:	stp	x29, x30, [sp, #64]
  411cec:	add	x29, sp, #0x40
  411cf0:	adrp	x8, 442000 <_fini+0x1c30>
  411cf4:	add	x8, x8, #0x3dc
  411cf8:	add	x8, x8, #0x3
  411cfc:	stur	x0, [x29, #-16]
  411d00:	stur	x1, [x29, #-24]
  411d04:	str	x2, [sp, #32]
  411d08:	str	x8, [sp, #8]
  411d0c:	ldur	x8, [x29, #-16]
  411d10:	cmp	x8, #0x0
  411d14:	cset	w9, ne  // ne = any
  411d18:	mov	w10, #0x1                   	// #1
  411d1c:	eor	w9, w9, #0x1
  411d20:	eor	w9, w9, w10
  411d24:	eor	w9, w9, w10
  411d28:	and	w9, w9, #0x1
  411d2c:	mov	w0, w9
  411d30:	sxtw	x8, w0
  411d34:	cbz	x8, 411d5c <manager_add_inhibitor+0x78>
  411d38:	mov	w8, wzr
  411d3c:	mov	w0, w8
  411d40:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  411d44:	add	x1, x1, #0x5ef
  411d48:	ldr	x2, [sp, #8]
  411d4c:	mov	w3, #0xca                  	// #202
  411d50:	adrp	x4, 442000 <_fini+0x1c30>
  411d54:	add	x4, x4, #0x5e6
  411d58:	bl	406c68 <log_assert_failed_realm@plt>
  411d5c:	ldur	x8, [x29, #-24]
  411d60:	cmp	x8, #0x0
  411d64:	cset	w9, ne  // ne = any
  411d68:	mov	w10, #0x1                   	// #1
  411d6c:	eor	w9, w9, #0x1
  411d70:	eor	w9, w9, w10
  411d74:	eor	w9, w9, w10
  411d78:	and	w9, w9, #0x1
  411d7c:	mov	w0, w9
  411d80:	sxtw	x8, w0
  411d84:	cbz	x8, 411dac <manager_add_inhibitor+0xc8>
  411d88:	mov	w8, wzr
  411d8c:	mov	w0, w8
  411d90:	adrp	x1, 442000 <_fini+0x1c30>
  411d94:	add	x1, x1, #0x4dd
  411d98:	ldr	x2, [sp, #8]
  411d9c:	mov	w3, #0xcb                  	// #203
  411da0:	adrp	x4, 442000 <_fini+0x1c30>
  411da4:	add	x4, x4, #0x5e6
  411da8:	bl	406c68 <log_assert_failed_realm@plt>
  411dac:	ldur	x8, [x29, #-16]
  411db0:	ldr	x0, [x8, #56]
  411db4:	ldur	x1, [x29, #-24]
  411db8:	bl	41165c <hashmap_get>
  411dbc:	str	x0, [sp, #24]
  411dc0:	ldr	x8, [sp, #24]
  411dc4:	cbnz	x8, 411df8 <manager_add_inhibitor+0x114>
  411dc8:	ldur	x1, [x29, #-16]
  411dcc:	ldur	x2, [x29, #-24]
  411dd0:	add	x0, sp, #0x18
  411dd4:	bl	424c5c <inhibitor_new>
  411dd8:	str	w0, [sp, #20]
  411ddc:	ldr	w8, [sp, #20]
  411de0:	cmp	w8, #0x0
  411de4:	cset	w8, ge  // ge = tcont
  411de8:	tbnz	w8, #0, 411df8 <manager_add_inhibitor+0x114>
  411dec:	ldr	w8, [sp, #20]
  411df0:	stur	w8, [x29, #-4]
  411df4:	b	411e10 <manager_add_inhibitor+0x12c>
  411df8:	ldr	x8, [sp, #32]
  411dfc:	cbz	x8, 411e0c <manager_add_inhibitor+0x128>
  411e00:	ldr	x8, [sp, #24]
  411e04:	ldr	x9, [sp, #32]
  411e08:	str	x8, [x9]
  411e0c:	stur	wzr, [x29, #-4]
  411e10:	ldur	w0, [x29, #-4]
  411e14:	ldp	x29, x30, [sp, #64]
  411e18:	add	sp, sp, #0x50
  411e1c:	ret

0000000000411e20 <manager_add_button>:
  411e20:	sub	sp, sp, #0x40
  411e24:	stp	x29, x30, [sp, #48]
  411e28:	add	x29, sp, #0x30
  411e2c:	adrp	x8, 442000 <_fini+0x1c30>
  411e30:	add	x8, x8, #0x3dc
  411e34:	add	x8, x8, #0x3
  411e38:	stur	x0, [x29, #-16]
  411e3c:	str	x1, [sp, #24]
  411e40:	str	x2, [sp, #16]
  411e44:	str	x8, [sp]
  411e48:	ldur	x8, [x29, #-16]
  411e4c:	cmp	x8, #0x0
  411e50:	cset	w9, ne  // ne = any
  411e54:	mov	w10, #0x1                   	// #1
  411e58:	eor	w9, w9, #0x1
  411e5c:	eor	w9, w9, w10
  411e60:	eor	w9, w9, w10
  411e64:	and	w9, w9, #0x1
  411e68:	mov	w0, w9
  411e6c:	sxtw	x8, w0
  411e70:	cbz	x8, 411e98 <manager_add_button+0x78>
  411e74:	mov	w8, wzr
  411e78:	mov	w0, w8
  411e7c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  411e80:	add	x1, x1, #0x5ef
  411e84:	ldr	x2, [sp]
  411e88:	mov	w3, #0xdd                  	// #221
  411e8c:	adrp	x4, 442000 <_fini+0x1c30>
  411e90:	add	x4, x4, #0x627
  411e94:	bl	406c68 <log_assert_failed_realm@plt>
  411e98:	ldr	x8, [sp, #24]
  411e9c:	cmp	x8, #0x0
  411ea0:	cset	w9, ne  // ne = any
  411ea4:	mov	w10, #0x1                   	// #1
  411ea8:	eor	w9, w9, #0x1
  411eac:	eor	w9, w9, w10
  411eb0:	eor	w9, w9, w10
  411eb4:	and	w9, w9, #0x1
  411eb8:	mov	w0, w9
  411ebc:	sxtw	x8, w0
  411ec0:	cbz	x8, 411ee8 <manager_add_button+0xc8>
  411ec4:	mov	w8, wzr
  411ec8:	mov	w0, w8
  411ecc:	adrp	x1, 441000 <_fini+0xc30>
  411ed0:	add	x1, x1, #0xe09
  411ed4:	ldr	x2, [sp]
  411ed8:	mov	w3, #0xde                  	// #222
  411edc:	adrp	x4, 442000 <_fini+0x1c30>
  411ee0:	add	x4, x4, #0x627
  411ee4:	bl	406c68 <log_assert_failed_realm@plt>
  411ee8:	ldur	x8, [x29, #-16]
  411eec:	ldr	x0, [x8, #64]
  411ef0:	ldr	x1, [sp, #24]
  411ef4:	bl	41165c <hashmap_get>
  411ef8:	str	x0, [sp, #8]
  411efc:	ldr	x8, [sp, #8]
  411f00:	cbnz	x8, 411f28 <manager_add_button+0x108>
  411f04:	ldur	x0, [x29, #-16]
  411f08:	ldr	x1, [sp, #24]
  411f0c:	bl	40f664 <button_new>
  411f10:	str	x0, [sp, #8]
  411f14:	ldr	x8, [sp, #8]
  411f18:	cbnz	x8, 411f28 <manager_add_button+0x108>
  411f1c:	mov	w8, #0xfffffff4            	// #-12
  411f20:	stur	w8, [x29, #-4]
  411f24:	b	411f40 <manager_add_button+0x120>
  411f28:	ldr	x8, [sp, #16]
  411f2c:	cbz	x8, 411f3c <manager_add_button+0x11c>
  411f30:	ldr	x8, [sp, #8]
  411f34:	ldr	x9, [sp, #16]
  411f38:	str	x8, [x9]
  411f3c:	stur	wzr, [x29, #-4]
  411f40:	ldur	w0, [x29, #-4]
  411f44:	ldp	x29, x30, [sp, #48]
  411f48:	add	sp, sp, #0x40
  411f4c:	ret

0000000000411f50 <manager_process_seat_device>:
  411f50:	sub	sp, sp, #0xa0
  411f54:	stp	x29, x30, [sp, #144]
  411f58:	add	x29, sp, #0x90
  411f5c:	adrp	x8, 442000 <_fini+0x1c30>
  411f60:	add	x8, x8, #0x3dc
  411f64:	add	x8, x8, #0x3
  411f68:	stur	x0, [x29, #-16]
  411f6c:	stur	x1, [x29, #-24]
  411f70:	str	x8, [sp, #24]
  411f74:	ldur	x8, [x29, #-16]
  411f78:	cmp	x8, #0x0
  411f7c:	cset	w9, ne  // ne = any
  411f80:	mov	w10, #0x1                   	// #1
  411f84:	eor	w9, w9, #0x1
  411f88:	eor	w9, w9, w10
  411f8c:	eor	w9, w9, w10
  411f90:	and	w9, w9, #0x1
  411f94:	mov	w0, w9
  411f98:	sxtw	x8, w0
  411f9c:	cbz	x8, 411fc4 <manager_process_seat_device+0x74>
  411fa0:	mov	w8, wzr
  411fa4:	mov	w0, w8
  411fa8:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  411fac:	add	x1, x1, #0x5ef
  411fb0:	ldr	x2, [sp, #24]
  411fb4:	mov	w3, #0xf1                  	// #241
  411fb8:	adrp	x4, 442000 <_fini+0x1c30>
  411fbc:	add	x4, x4, #0x662
  411fc0:	bl	406c68 <log_assert_failed_realm@plt>
  411fc4:	ldur	x0, [x29, #-24]
  411fc8:	mov	w1, #0x1                   	// #1
  411fcc:	bl	407098 <device_for_action@plt>
  411fd0:	tbnz	w0, #0, 411fd8 <manager_process_seat_device+0x88>
  411fd4:	b	41203c <manager_process_seat_device+0xec>
  411fd8:	ldur	x0, [x29, #-24]
  411fdc:	sub	x1, x29, #0x30
  411fe0:	bl	4072e8 <sd_device_get_syspath@plt>
  411fe4:	stur	w0, [x29, #-36]
  411fe8:	ldur	w8, [x29, #-36]
  411fec:	cmp	w8, #0x0
  411ff0:	cset	w8, ge  // ge = tcont
  411ff4:	tbnz	w8, #0, 412000 <manager_process_seat_device+0xb0>
  411ff8:	stur	wzr, [x29, #-4]
  411ffc:	b	412268 <manager_process_seat_device+0x318>
  412000:	ldur	x8, [x29, #-16]
  412004:	ldr	x0, [x8, #16]
  412008:	ldur	x1, [x29, #-48]
  41200c:	bl	41165c <hashmap_get>
  412010:	stur	x0, [x29, #-32]
  412014:	ldur	x8, [x29, #-32]
  412018:	cbnz	x8, 412024 <manager_process_seat_device+0xd4>
  41201c:	stur	wzr, [x29, #-4]
  412020:	b	412268 <manager_process_seat_device+0x318>
  412024:	ldur	x8, [x29, #-32]
  412028:	ldr	x0, [x8, #16]
  41202c:	bl	42b340 <seat_add_to_gc_queue>
  412030:	ldur	x0, [x29, #-32]
  412034:	bl	424610 <device_free>
  412038:	b	412264 <manager_process_seat_device+0x314>
  41203c:	ldur	x0, [x29, #-24]
  412040:	adrp	x1, 442000 <_fini+0x1c30>
  412044:	add	x1, x1, #0x69a
  412048:	sub	x2, x29, #0x38
  41204c:	bl	4072f8 <sd_device_get_property_value@plt>
  412050:	cmp	w0, #0x0
  412054:	cset	w8, lt  // lt = tstop
  412058:	tbnz	w8, #0, 41206c <manager_process_seat_device+0x11c>
  41205c:	ldur	x0, [x29, #-56]
  412060:	bl	412278 <isempty>
  412064:	tbnz	w0, #0, 41206c <manager_process_seat_device+0x11c>
  412068:	b	412078 <manager_process_seat_device+0x128>
  41206c:	adrp	x8, 440000 <on_brightness_writer_exit+0x15c>
  412070:	add	x8, x8, #0x669
  412074:	stur	x8, [x29, #-56]
  412078:	ldur	x0, [x29, #-56]
  41207c:	bl	429218 <seat_name_is_valid>
  412080:	tbnz	w0, #0, 412154 <manager_process_seat_device+0x204>
  412084:	mov	x8, xzr
  412088:	str	x8, [sp, #56]
  41208c:	ldur	x8, [x29, #-24]
  412090:	str	x8, [sp, #48]
  412094:	mov	w9, #0x4                   	// #4
  412098:	str	w9, [sp, #44]
  41209c:	str	wzr, [sp, #40]
  4120a0:	ldr	x8, [sp, #48]
  4120a4:	cbz	x8, 4120e8 <manager_process_seat_device+0x198>
  4120a8:	mov	w8, wzr
  4120ac:	mov	w0, w8
  4120b0:	bl	406c08 <log_get_max_level_realm@plt>
  4120b4:	ldr	w8, [sp, #44]
  4120b8:	cmp	w0, w8
  4120bc:	cset	w8, ge  // ge = tcont
  4120c0:	mov	w9, #0x1                   	// #1
  4120c4:	eor	w8, w8, #0x1
  4120c8:	eor	w8, w8, w9
  4120cc:	and	w8, w8, #0x1
  4120d0:	mov	w1, w8
  4120d4:	sxtw	x10, w1
  4120d8:	cbz	x10, 4120e8 <manager_process_seat_device+0x198>
  4120dc:	ldr	x0, [sp, #48]
  4120e0:	add	x1, sp, #0x38
  4120e4:	bl	407088 <sd_device_get_sysname@plt>
  4120e8:	ldr	w0, [sp, #44]
  4120ec:	ldr	w1, [sp, #40]
  4120f0:	ldr	x8, [sp, #56]
  4120f4:	mov	x9, xzr
  4120f8:	adrp	x10, 442000 <_fini+0x1c30>
  4120fc:	add	x10, x10, #0x6be
  412100:	cmp	x8, #0x0
  412104:	csel	x5, x10, x9, ne  // ne = any
  412108:	ldr	x6, [sp, #56]
  41210c:	ldur	x8, [x29, #-56]
  412110:	ldr	x2, [sp, #24]
  412114:	mov	w3, #0x10a                 	// #266
  412118:	adrp	x4, 442000 <_fini+0x1c30>
  41211c:	add	x4, x4, #0x6a2
  412120:	mov	x7, x9
  412124:	mov	x10, sp
  412128:	str	x9, [x10]
  41212c:	mov	x9, sp
  412130:	adrp	x10, 442000 <_fini+0x1c30>
  412134:	add	x10, x10, #0x6c6
  412138:	str	x10, [x9, #8]
  41213c:	mov	x9, sp
  412140:	str	x8, [x9, #16]
  412144:	bl	407308 <log_object_internal@plt>
  412148:	str	w0, [sp, #36]
  41214c:	stur	wzr, [x29, #-4]
  412150:	b	412268 <manager_process_seat_device+0x318>
  412154:	ldur	x8, [x29, #-16]
  412158:	ldr	x0, [x8, #24]
  41215c:	ldur	x1, [x29, #-56]
  412160:	bl	41165c <hashmap_get>
  412164:	str	x0, [sp, #64]
  412168:	ldur	x0, [x29, #-24]
  41216c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  412170:	add	x1, x1, #0xb7e
  412174:	bl	407318 <sd_device_has_tag@plt>
  412178:	cmp	w0, #0x0
  41217c:	cset	w9, gt
  412180:	and	w9, w9, #0x1
  412184:	sturb	w9, [x29, #-65]
  412188:	ldurb	w9, [x29, #-65]
  41218c:	tbnz	w9, #0, 4121a0 <manager_process_seat_device+0x250>
  412190:	ldr	x8, [sp, #64]
  412194:	cbnz	x8, 4121a0 <manager_process_seat_device+0x250>
  412198:	stur	wzr, [x29, #-4]
  41219c:	b	412268 <manager_process_seat_device+0x318>
  4121a0:	ldur	x0, [x29, #-24]
  4121a4:	sub	x1, x29, #0x40
  4121a8:	bl	4072e8 <sd_device_get_syspath@plt>
  4121ac:	stur	w0, [x29, #-36]
  4121b0:	ldur	w8, [x29, #-36]
  4121b4:	cmp	w8, #0x0
  4121b8:	cset	w8, ge  // ge = tcont
  4121bc:	tbnz	w8, #0, 4121cc <manager_process_seat_device+0x27c>
  4121c0:	ldur	w8, [x29, #-36]
  4121c4:	stur	w8, [x29, #-4]
  4121c8:	b	412268 <manager_process_seat_device+0x318>
  4121cc:	ldur	x0, [x29, #-16]
  4121d0:	ldur	x1, [x29, #-64]
  4121d4:	ldurb	w8, [x29, #-65]
  4121d8:	and	w2, w8, #0x1
  4121dc:	sub	x3, x29, #0x20
  4121e0:	bl	4114ec <manager_add_device>
  4121e4:	stur	w0, [x29, #-36]
  4121e8:	ldur	w8, [x29, #-36]
  4121ec:	cmp	w8, #0x0
  4121f0:	cset	w8, ge  // ge = tcont
  4121f4:	tbnz	w8, #0, 412204 <manager_process_seat_device+0x2b4>
  4121f8:	ldur	w8, [x29, #-36]
  4121fc:	stur	w8, [x29, #-4]
  412200:	b	412268 <manager_process_seat_device+0x318>
  412204:	ldr	x8, [sp, #64]
  412208:	cbnz	x8, 412250 <manager_process_seat_device+0x300>
  41220c:	ldur	x0, [x29, #-16]
  412210:	ldur	x1, [x29, #-56]
  412214:	add	x2, sp, #0x40
  412218:	bl	411688 <manager_add_seat>
  41221c:	stur	w0, [x29, #-36]
  412220:	ldur	w8, [x29, #-36]
  412224:	cmp	w8, #0x0
  412228:	cset	w8, ge  // ge = tcont
  41222c:	tbnz	w8, #0, 412250 <manager_process_seat_device+0x300>
  412230:	ldur	x8, [x29, #-32]
  412234:	ldr	x8, [x8, #16]
  412238:	cbnz	x8, 412244 <manager_process_seat_device+0x2f4>
  41223c:	ldur	x0, [x29, #-32]
  412240:	bl	424610 <device_free>
  412244:	ldur	w8, [x29, #-36]
  412248:	stur	w8, [x29, #-4]
  41224c:	b	412268 <manager_process_seat_device+0x318>
  412250:	ldur	x0, [x29, #-32]
  412254:	ldr	x1, [sp, #64]
  412258:	bl	424904 <device_attach>
  41225c:	ldr	x0, [sp, #64]
  412260:	bl	42af94 <seat_start>
  412264:	stur	wzr, [x29, #-4]
  412268:	ldur	w0, [x29, #-4]
  41226c:	ldp	x29, x30, [sp, #144]
  412270:	add	sp, sp, #0xa0
  412274:	ret

0000000000412278 <isempty>:
  412278:	sub	sp, sp, #0x10
  41227c:	str	x0, [sp, #8]
  412280:	ldr	x8, [sp, #8]
  412284:	mov	w9, #0x1                   	// #1
  412288:	str	w9, [sp, #4]
  41228c:	cbz	x8, 4122a8 <isempty+0x30>
  412290:	ldr	x8, [sp, #8]
  412294:	ldrb	w9, [x8]
  412298:	cmp	w9, #0x0
  41229c:	cset	w9, ne  // ne = any
  4122a0:	eor	w9, w9, #0x1
  4122a4:	str	w9, [sp, #4]
  4122a8:	ldr	w8, [sp, #4]
  4122ac:	and	w0, w8, #0x1
  4122b0:	add	sp, sp, #0x10
  4122b4:	ret

00000000004122b8 <manager_process_button_device>:
  4122b8:	sub	sp, sp, #0x50
  4122bc:	stp	x29, x30, [sp, #64]
  4122c0:	add	x29, sp, #0x40
  4122c4:	adrp	x8, 442000 <_fini+0x1c30>
  4122c8:	add	x8, x8, #0x3dc
  4122cc:	add	x2, x8, #0x3
  4122d0:	stur	x0, [x29, #-16]
  4122d4:	stur	x1, [x29, #-24]
  4122d8:	str	x2, [sp]
  4122dc:	ldur	x8, [x29, #-16]
  4122e0:	cmp	x8, #0x0
  4122e4:	cset	w9, ne  // ne = any
  4122e8:	mov	w10, #0x1                   	// #1
  4122ec:	eor	w9, w9, #0x1
  4122f0:	eor	w9, w9, w10
  4122f4:	eor	w9, w9, w10
  4122f8:	and	w9, w9, #0x1
  4122fc:	mov	w0, w9
  412300:	sxtw	x8, w0
  412304:	cbz	x8, 41232c <manager_process_button_device+0x74>
  412308:	mov	w8, wzr
  41230c:	mov	w0, w8
  412310:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  412314:	add	x1, x1, #0x5ef
  412318:	ldr	x2, [sp]
  41231c:	mov	w3, #0x133                 	// #307
  412320:	adrp	x4, 442000 <_fini+0x1c30>
  412324:	add	x4, x4, #0x6f8
  412328:	bl	406c68 <log_assert_failed_realm@plt>
  41232c:	ldur	x0, [x29, #-24]
  412330:	add	x1, sp, #0x20
  412334:	bl	407088 <sd_device_get_sysname@plt>
  412338:	str	w0, [sp, #20]
  41233c:	ldr	w8, [sp, #20]
  412340:	cmp	w8, #0x0
  412344:	cset	w8, ge  // ge = tcont
  412348:	tbnz	w8, #0, 412358 <manager_process_button_device+0xa0>
  41234c:	ldr	w8, [sp, #20]
  412350:	stur	w8, [x29, #-4]
  412354:	b	412440 <manager_process_button_device+0x188>
  412358:	ldur	x0, [x29, #-24]
  41235c:	mov	w1, #0x1                   	// #1
  412360:	bl	407098 <device_for_action@plt>
  412364:	tbnz	w0, #0, 41236c <manager_process_button_device+0xb4>
  412368:	b	41239c <manager_process_button_device+0xe4>
  41236c:	ldur	x8, [x29, #-16]
  412370:	ldr	x0, [x8, #64]
  412374:	ldr	x1, [sp, #32]
  412378:	bl	41165c <hashmap_get>
  41237c:	str	x0, [sp, #24]
  412380:	ldr	x8, [sp, #24]
  412384:	cbnz	x8, 412390 <manager_process_button_device+0xd8>
  412388:	stur	wzr, [x29, #-4]
  41238c:	b	412440 <manager_process_button_device+0x188>
  412390:	ldr	x0, [sp, #24]
  412394:	bl	40f818 <button_free>
  412398:	b	41243c <manager_process_button_device+0x184>
  41239c:	ldur	x0, [x29, #-16]
  4123a0:	ldr	x1, [sp, #32]
  4123a4:	add	x2, sp, #0x18
  4123a8:	bl	411e20 <manager_add_button>
  4123ac:	str	w0, [sp, #20]
  4123b0:	ldr	w8, [sp, #20]
  4123b4:	cmp	w8, #0x0
  4123b8:	cset	w8, ge  // ge = tcont
  4123bc:	tbnz	w8, #0, 4123cc <manager_process_button_device+0x114>
  4123c0:	ldr	w8, [sp, #20]
  4123c4:	stur	w8, [x29, #-4]
  4123c8:	b	412440 <manager_process_button_device+0x188>
  4123cc:	ldur	x0, [x29, #-24]
  4123d0:	adrp	x1, 442000 <_fini+0x1c30>
  4123d4:	add	x1, x1, #0x69a
  4123d8:	add	x2, sp, #0x8
  4123dc:	bl	4072f8 <sd_device_get_property_value@plt>
  4123e0:	cmp	w0, #0x0
  4123e4:	cset	w8, lt  // lt = tstop
  4123e8:	tbnz	w8, #0, 4123fc <manager_process_button_device+0x144>
  4123ec:	ldr	x0, [sp, #8]
  4123f0:	bl	412278 <isempty>
  4123f4:	tbnz	w0, #0, 4123fc <manager_process_button_device+0x144>
  4123f8:	b	412408 <manager_process_button_device+0x150>
  4123fc:	adrp	x8, 440000 <on_brightness_writer_exit+0x15c>
  412400:	add	x8, x8, #0x669
  412404:	str	x8, [sp, #8]
  412408:	ldr	x0, [sp, #24]
  41240c:	ldr	x1, [sp, #8]
  412410:	bl	40f938 <button_set_seat>
  412414:	ldr	x8, [sp, #24]
  412418:	mov	x0, x8
  41241c:	bl	40fa48 <button_open>
  412420:	str	w0, [sp, #20]
  412424:	ldr	w9, [sp, #20]
  412428:	cmp	w9, #0x0
  41242c:	cset	w9, ge  // ge = tcont
  412430:	tbnz	w9, #0, 41243c <manager_process_button_device+0x184>
  412434:	ldr	x0, [sp, #24]
  412438:	bl	40f818 <button_free>
  41243c:	stur	wzr, [x29, #-4]
  412440:	ldur	w0, [x29, #-4]
  412444:	ldp	x29, x30, [sp, #64]
  412448:	add	sp, sp, #0x50
  41244c:	ret

0000000000412450 <manager_get_session_by_pid>:
  412450:	sub	sp, sp, #0x60
  412454:	stp	x29, x30, [sp, #80]
  412458:	add	x29, sp, #0x50
  41245c:	mov	x8, xzr
  412460:	adrp	x9, 442000 <_fini+0x1c30>
  412464:	add	x9, x9, #0x3dc
  412468:	add	x9, x9, #0x3
  41246c:	stur	x0, [x29, #-16]
  412470:	stur	w1, [x29, #-20]
  412474:	stur	x2, [x29, #-32]
  412478:	str	x8, [sp, #40]
  41247c:	str	x9, [sp, #16]
  412480:	ldur	x8, [x29, #-16]
  412484:	cmp	x8, #0x0
  412488:	cset	w9, ne  // ne = any
  41248c:	mov	w10, #0x1                   	// #1
  412490:	eor	w9, w9, #0x1
  412494:	eor	w9, w9, w10
  412498:	eor	w9, w9, w10
  41249c:	and	w9, w9, #0x1
  4124a0:	mov	w0, w9
  4124a4:	sxtw	x8, w0
  4124a8:	cbz	x8, 4124d0 <manager_get_session_by_pid+0x80>
  4124ac:	mov	w8, wzr
  4124b0:	mov	w0, w8
  4124b4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4124b8:	add	x1, x1, #0x5ef
  4124bc:	ldr	x2, [sp, #16]
  4124c0:	mov	w3, #0x15b                 	// #347
  4124c4:	adrp	x4, 442000 <_fini+0x1c30>
  4124c8:	add	x4, x4, #0x732
  4124cc:	bl	406c68 <log_assert_failed_realm@plt>
  4124d0:	ldur	w0, [x29, #-20]
  4124d4:	bl	4125d8 <pid_is_valid>
  4124d8:	tbnz	w0, #0, 4124f0 <manager_get_session_by_pid+0xa0>
  4124dc:	mov	w8, #0xffffffea            	// #-22
  4124e0:	stur	w8, [x29, #-4]
  4124e4:	mov	w8, #0x1                   	// #1
  4124e8:	str	w8, [sp, #24]
  4124ec:	b	412598 <manager_get_session_by_pid+0x148>
  4124f0:	ldur	x8, [x29, #-16]
  4124f4:	ldr	x0, [x8, #40]
  4124f8:	ldur	w9, [x29, #-20]
  4124fc:	str	x0, [sp, #8]
  412500:	mov	w0, w9
  412504:	bl	4125f8 <PID_TO_PTR>
  412508:	ldr	x8, [sp, #8]
  41250c:	str	x0, [sp]
  412510:	mov	x0, x8
  412514:	ldr	x1, [sp]
  412518:	bl	41165c <hashmap_get>
  41251c:	str	x0, [sp, #32]
  412520:	ldr	x8, [sp, #32]
  412524:	cbnz	x8, 41255c <manager_get_session_by_pid+0x10c>
  412528:	ldur	w0, [x29, #-20]
  41252c:	add	x1, sp, #0x28
  412530:	bl	407328 <cg_pid_get_unit@plt>
  412534:	str	w0, [sp, #28]
  412538:	ldr	w8, [sp, #28]
  41253c:	cmp	w8, #0x0
  412540:	cset	w8, lt  // lt = tstop
  412544:	tbnz	w8, #0, 41255c <manager_get_session_by_pid+0x10c>
  412548:	ldur	x8, [x29, #-16]
  41254c:	ldr	x0, [x8, #216]
  412550:	ldr	x1, [sp, #40]
  412554:	bl	41165c <hashmap_get>
  412558:	str	x0, [sp, #32]
  41255c:	ldur	x8, [x29, #-32]
  412560:	cbz	x8, 412570 <manager_get_session_by_pid+0x120>
  412564:	ldr	x8, [sp, #32]
  412568:	ldur	x9, [x29, #-32]
  41256c:	str	x8, [x9]
  412570:	ldr	x8, [sp, #32]
  412574:	cmp	x8, #0x0
  412578:	cset	w9, ne  // ne = any
  41257c:	mov	w10, #0x1                   	// #1
  412580:	eor	w9, w9, #0x1
  412584:	eor	w9, w9, w10
  412588:	and	w9, w9, #0x1
  41258c:	stur	w9, [x29, #-4]
  412590:	mov	w9, #0x1                   	// #1
  412594:	str	w9, [sp, #24]
  412598:	add	x0, sp, #0x28
  41259c:	bl	4125b0 <freep>
  4125a0:	ldur	w0, [x29, #-4]
  4125a4:	ldp	x29, x30, [sp, #80]
  4125a8:	add	sp, sp, #0x60
  4125ac:	ret

00000000004125b0 <freep>:
  4125b0:	sub	sp, sp, #0x20
  4125b4:	stp	x29, x30, [sp, #16]
  4125b8:	add	x29, sp, #0x10
  4125bc:	str	x0, [sp, #8]
  4125c0:	ldr	x8, [sp, #8]
  4125c4:	ldr	x0, [x8]
  4125c8:	bl	406da8 <free@plt>
  4125cc:	ldp	x29, x30, [sp, #16]
  4125d0:	add	sp, sp, #0x20
  4125d4:	ret

00000000004125d8 <pid_is_valid>:
  4125d8:	sub	sp, sp, #0x10
  4125dc:	str	w0, [sp, #12]
  4125e0:	ldr	w8, [sp, #12]
  4125e4:	cmp	w8, #0x0
  4125e8:	cset	w8, gt
  4125ec:	and	w0, w8, #0x1
  4125f0:	add	sp, sp, #0x10
  4125f4:	ret

00000000004125f8 <PID_TO_PTR>:
  4125f8:	sub	sp, sp, #0x10
  4125fc:	str	w0, [sp, #12]
  412600:	ldrsw	x8, [sp, #12]
  412604:	mov	x0, x8
  412608:	add	sp, sp, #0x10
  41260c:	ret

0000000000412610 <manager_get_user_by_pid>:
  412610:	sub	sp, sp, #0x50
  412614:	stp	x29, x30, [sp, #64]
  412618:	add	x29, sp, #0x40
  41261c:	mov	x8, xzr
  412620:	adrp	x9, 442000 <_fini+0x1c30>
  412624:	add	x9, x9, #0x3dc
  412628:	add	x9, x9, #0x3
  41262c:	stur	x0, [x29, #-16]
  412630:	stur	w1, [x29, #-20]
  412634:	str	x2, [sp, #32]
  412638:	str	x8, [sp, #24]
  41263c:	str	x8, [sp, #16]
  412640:	str	x9, [sp]
  412644:	ldur	x8, [x29, #-16]
  412648:	cmp	x8, #0x0
  41264c:	cset	w9, ne  // ne = any
  412650:	mov	w10, #0x1                   	// #1
  412654:	eor	w9, w9, #0x1
  412658:	eor	w9, w9, w10
  41265c:	eor	w9, w9, w10
  412660:	and	w9, w9, #0x1
  412664:	mov	w0, w9
  412668:	sxtw	x8, w0
  41266c:	cbz	x8, 412694 <manager_get_user_by_pid+0x84>
  412670:	mov	w8, wzr
  412674:	mov	w0, w8
  412678:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41267c:	add	x1, x1, #0x5ef
  412680:	ldr	x2, [sp]
  412684:	mov	w3, #0x172                 	// #370
  412688:	adrp	x4, 442000 <_fini+0x1c30>
  41268c:	add	x4, x4, #0x76f
  412690:	bl	406c68 <log_assert_failed_realm@plt>
  412694:	ldur	w0, [x29, #-20]
  412698:	bl	4125d8 <pid_is_valid>
  41269c:	tbnz	w0, #0, 4126b4 <manager_get_user_by_pid+0xa4>
  4126a0:	mov	w8, #0xffffffea            	// #-22
  4126a4:	stur	w8, [x29, #-4]
  4126a8:	mov	w8, #0x1                   	// #1
  4126ac:	str	w8, [sp, #8]
  4126b0:	b	412724 <manager_get_user_by_pid+0x114>
  4126b4:	ldur	w0, [x29, #-20]
  4126b8:	add	x1, sp, #0x18
  4126bc:	bl	407338 <cg_pid_get_slice@plt>
  4126c0:	str	w0, [sp, #12]
  4126c4:	ldr	w8, [sp, #12]
  4126c8:	cmp	w8, #0x0
  4126cc:	cset	w8, lt  // lt = tstop
  4126d0:	tbnz	w8, #0, 4126e8 <manager_get_user_by_pid+0xd8>
  4126d4:	ldur	x8, [x29, #-16]
  4126d8:	ldr	x0, [x8, #224]
  4126dc:	ldr	x1, [sp, #24]
  4126e0:	bl	41165c <hashmap_get>
  4126e4:	str	x0, [sp, #16]
  4126e8:	ldr	x8, [sp, #32]
  4126ec:	cbz	x8, 4126fc <manager_get_user_by_pid+0xec>
  4126f0:	ldr	x8, [sp, #16]
  4126f4:	ldr	x9, [sp, #32]
  4126f8:	str	x8, [x9]
  4126fc:	ldr	x8, [sp, #16]
  412700:	cmp	x8, #0x0
  412704:	cset	w9, ne  // ne = any
  412708:	mov	w10, #0x1                   	// #1
  41270c:	eor	w9, w9, #0x1
  412710:	eor	w9, w9, w10
  412714:	and	w9, w9, #0x1
  412718:	stur	w9, [x29, #-4]
  41271c:	mov	w9, #0x1                   	// #1
  412720:	str	w9, [sp, #8]
  412724:	add	x0, sp, #0x18
  412728:	bl	4125b0 <freep>
  41272c:	ldur	w0, [x29, #-4]
  412730:	ldp	x29, x30, [sp, #64]
  412734:	add	sp, sp, #0x50
  412738:	ret

000000000041273c <manager_get_idle_hint>:
  41273c:	sub	sp, sp, #0xa0
  412740:	stp	x29, x30, [sp, #144]
  412744:	add	x29, sp, #0x90
  412748:	adrp	x8, 442000 <_fini+0x1c30>
  41274c:	add	x8, x8, #0x3dc
  412750:	add	x2, x8, #0x3
  412754:	stur	x0, [x29, #-16]
  412758:	stur	x1, [x29, #-24]
  41275c:	stur	xzr, [x29, #-64]
  412760:	stur	xzr, [x29, #-56]
  412764:	str	x2, [sp, #16]
  412768:	ldur	x8, [x29, #-16]
  41276c:	cmp	x8, #0x0
  412770:	cset	w9, ne  // ne = any
  412774:	mov	w10, #0x1                   	// #1
  412778:	eor	w9, w9, #0x1
  41277c:	eor	w9, w9, w10
  412780:	eor	w9, w9, w10
  412784:	and	w9, w9, #0x1
  412788:	mov	w0, w9
  41278c:	sxtw	x8, w0
  412790:	cbz	x8, 4127b8 <manager_get_idle_hint+0x7c>
  412794:	mov	w8, wzr
  412798:	mov	w0, w8
  41279c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4127a0:	add	x1, x1, #0x5ef
  4127a4:	ldr	x2, [sp, #16]
  4127a8:	mov	w3, #0x187                 	// #391
  4127ac:	adrp	x4, 442000 <_fini+0x1c30>
  4127b0:	add	x4, x4, #0x7a6
  4127b4:	bl	406c68 <log_assert_failed_realm@plt>
  4127b8:	ldur	x0, [x29, #-16]
  4127bc:	ldur	x3, [x29, #-24]
  4127c0:	mov	w1, #0x4                   	// #4
  4127c4:	mov	w8, wzr
  4127c8:	mov	w2, w8
  4127cc:	mov	w9, #0x1                   	// #1
  4127d0:	mov	w10, wzr
  4127d4:	and	w4, w10, #0x1
  4127d8:	and	w5, w10, #0x1
  4127dc:	mov	w6, w8
  4127e0:	mov	x11, xzr
  4127e4:	mov	x7, x11
  4127e8:	str	w9, [sp, #12]
  4127ec:	str	x11, [sp]
  4127f0:	bl	4268b8 <manager_is_inhibited>
  4127f4:	eor	w8, w0, #0x1
  4127f8:	ldr	w9, [sp, #12]
  4127fc:	and	w8, w8, w9
  412800:	sturb	w8, [x29, #-33]
  412804:	add	x11, sp, #0x30
  412808:	mov	w8, #0xfffffffe            	// #-2
  41280c:	str	w8, [sp, #48]
  412810:	ldr	x12, [sp]
  412814:	str	x12, [x11, #8]
  412818:	ldr	q0, [sp, #48]
  41281c:	str	q0, [sp, #64]
  412820:	ldur	x8, [x29, #-16]
  412824:	ldr	x0, [x8, #32]
  412828:	add	x1, sp, #0x40
  41282c:	sub	x2, x29, #0x20
  412830:	mov	x8, xzr
  412834:	mov	x3, x8
  412838:	bl	412908 <hashmap_iterate>
  41283c:	tbnz	w0, #0, 412844 <manager_get_idle_hint+0x108>
  412840:	b	4128d8 <manager_get_idle_hint+0x19c>
  412844:	ldur	x0, [x29, #-32]
  412848:	add	x1, sp, #0x20
  41284c:	bl	4366ac <session_get_idle_hint>
  412850:	str	w0, [sp, #28]
  412854:	ldr	w8, [sp, #28]
  412858:	cmp	w8, #0x0
  41285c:	cset	w8, ge  // ge = tcont
  412860:	tbnz	w8, #0, 412870 <manager_get_idle_hint+0x134>
  412864:	ldr	w8, [sp, #28]
  412868:	stur	w8, [x29, #-4]
  41286c:	b	4128f8 <manager_get_idle_hint+0x1bc>
  412870:	ldr	w8, [sp, #28]
  412874:	cbnz	w8, 4128b0 <manager_get_idle_hint+0x174>
  412878:	ldurb	w8, [x29, #-33]
  41287c:	tbnz	w8, #0, 41289c <manager_get_idle_hint+0x160>
  412880:	ldr	x8, [sp, #40]
  412884:	ldur	x9, [x29, #-56]
  412888:	cmp	x8, x9
  41288c:	b.cs	412898 <manager_get_idle_hint+0x15c>  // b.hs, b.nlast
  412890:	ldr	q0, [sp, #32]
  412894:	stur	q0, [x29, #-64]
  412898:	b	4128ac <manager_get_idle_hint+0x170>
  41289c:	mov	w8, #0x0                   	// #0
  4128a0:	sturb	w8, [x29, #-33]
  4128a4:	ldr	q0, [sp, #32]
  4128a8:	stur	q0, [x29, #-64]
  4128ac:	b	4128d4 <manager_get_idle_hint+0x198>
  4128b0:	ldurb	w8, [x29, #-33]
  4128b4:	tbnz	w8, #0, 4128bc <manager_get_idle_hint+0x180>
  4128b8:	b	4128d4 <manager_get_idle_hint+0x198>
  4128bc:	ldr	x8, [sp, #40]
  4128c0:	ldur	x9, [x29, #-56]
  4128c4:	cmp	x8, x9
  4128c8:	b.ls	4128d4 <manager_get_idle_hint+0x198>  // b.plast
  4128cc:	ldr	q0, [sp, #32]
  4128d0:	stur	q0, [x29, #-64]
  4128d4:	b	412820 <manager_get_idle_hint+0xe4>
  4128d8:	ldur	x8, [x29, #-24]
  4128dc:	cbz	x8, 4128ec <manager_get_idle_hint+0x1b0>
  4128e0:	ldur	x8, [x29, #-24]
  4128e4:	ldur	q0, [x29, #-64]
  4128e8:	str	q0, [x8]
  4128ec:	ldurb	w8, [x29, #-33]
  4128f0:	and	w8, w8, #0x1
  4128f4:	stur	w8, [x29, #-4]
  4128f8:	ldur	w0, [x29, #-4]
  4128fc:	ldp	x29, x30, [sp, #144]
  412900:	add	sp, sp, #0xa0
  412904:	ret

0000000000412908 <hashmap_iterate>:
  412908:	sub	sp, sp, #0x30
  41290c:	stp	x29, x30, [sp, #32]
  412910:	add	x29, sp, #0x20
  412914:	stur	x0, [x29, #-8]
  412918:	str	x1, [sp, #16]
  41291c:	str	x2, [sp, #8]
  412920:	str	x3, [sp]
  412924:	ldur	x0, [x29, #-8]
  412928:	ldr	x1, [sp, #16]
  41292c:	ldr	x2, [sp, #8]
  412930:	ldr	x3, [sp]
  412934:	bl	407018 <internal_hashmap_iterate@plt>
  412938:	and	w0, w0, #0x1
  41293c:	ldp	x29, x30, [sp, #32]
  412940:	add	sp, sp, #0x30
  412944:	ret

0000000000412948 <manager_shall_kill>:
  412948:	sub	sp, sp, #0x30
  41294c:	stp	x29, x30, [sp, #32]
  412950:	add	x29, sp, #0x20
  412954:	adrp	x8, 442000 <_fini+0x1c30>
  412958:	add	x8, x8, #0x3dc
  41295c:	add	x8, x8, #0x3
  412960:	str	x0, [sp, #16]
  412964:	str	x1, [sp, #8]
  412968:	str	x8, [sp]
  41296c:	ldr	x8, [sp, #16]
  412970:	cmp	x8, #0x0
  412974:	cset	w9, ne  // ne = any
  412978:	mov	w10, #0x1                   	// #1
  41297c:	eor	w9, w9, #0x1
  412980:	eor	w9, w9, w10
  412984:	eor	w9, w9, w10
  412988:	and	w9, w9, #0x1
  41298c:	mov	w0, w9
  412990:	sxtw	x8, w0
  412994:	cbz	x8, 4129bc <manager_shall_kill+0x74>
  412998:	mov	w8, wzr
  41299c:	mov	w0, w8
  4129a0:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4129a4:	add	x1, x1, #0x5ef
  4129a8:	ldr	x2, [sp]
  4129ac:	mov	w3, #0x1a9                 	// #425
  4129b0:	adrp	x4, 442000 <_fini+0x1c30>
  4129b4:	add	x4, x4, #0x7dd
  4129b8:	bl	406c68 <log_assert_failed_realm@plt>
  4129bc:	ldr	x8, [sp, #8]
  4129c0:	cmp	x8, #0x0
  4129c4:	cset	w9, ne  // ne = any
  4129c8:	mov	w10, #0x1                   	// #1
  4129cc:	eor	w9, w9, #0x1
  4129d0:	eor	w9, w9, w10
  4129d4:	eor	w9, w9, w10
  4129d8:	and	w9, w9, #0x1
  4129dc:	mov	w0, w9
  4129e0:	sxtw	x8, w0
  4129e4:	cbz	x8, 412a0c <manager_shall_kill+0xc4>
  4129e8:	mov	w8, wzr
  4129ec:	mov	w0, w8
  4129f0:	adrp	x1, 442000 <_fini+0x1c30>
  4129f4:	add	x1, x1, #0x80f
  4129f8:	ldr	x2, [sp]
  4129fc:	mov	w3, #0x1aa                 	// #426
  412a00:	adrp	x4, 442000 <_fini+0x1c30>
  412a04:	add	x4, x4, #0x7dd
  412a08:	bl	406c68 <log_assert_failed_realm@plt>
  412a0c:	ldr	x8, [sp, #16]
  412a10:	ldr	x8, [x8, #184]
  412a14:	cbnz	x8, 412a3c <manager_shall_kill+0xf4>
  412a18:	ldr	x0, [sp, #8]
  412a1c:	adrp	x1, 442000 <_fini+0x1c30>
  412a20:	add	x1, x1, #0x814
  412a24:	bl	407158 <strcmp@plt>
  412a28:	cbnz	w0, 412a3c <manager_shall_kill+0xf4>
  412a2c:	mov	w8, wzr
  412a30:	and	w8, w8, #0x1
  412a34:	sturb	w8, [x29, #-1]
  412a38:	b	412ab0 <manager_shall_kill+0x168>
  412a3c:	ldr	x8, [sp, #16]
  412a40:	ldr	x0, [x8, #184]
  412a44:	ldr	x1, [sp, #8]
  412a48:	bl	407348 <strv_find@plt>
  412a4c:	cbz	x0, 412a60 <manager_shall_kill+0x118>
  412a50:	mov	w8, wzr
  412a54:	and	w8, w8, #0x1
  412a58:	sturb	w8, [x29, #-1]
  412a5c:	b	412ab0 <manager_shall_kill+0x168>
  412a60:	ldr	x8, [sp, #16]
  412a64:	ldr	x0, [x8, #176]
  412a68:	bl	412ac4 <strv_isempty>
  412a6c:	tbnz	w0, #0, 412aa0 <manager_shall_kill+0x158>
  412a70:	ldr	x8, [sp, #16]
  412a74:	ldr	x0, [x8, #176]
  412a78:	ldr	x1, [sp, #8]
  412a7c:	bl	407348 <strv_find@plt>
  412a80:	cmp	x0, #0x0
  412a84:	cset	w9, ne  // ne = any
  412a88:	mov	w10, #0x1                   	// #1
  412a8c:	eor	w9, w9, #0x1
  412a90:	eor	w9, w9, w10
  412a94:	and	w9, w9, w10
  412a98:	sturb	w9, [x29, #-1]
  412a9c:	b	412ab0 <manager_shall_kill+0x168>
  412aa0:	ldr	x8, [sp, #16]
  412aa4:	ldrb	w9, [x8, #192]
  412aa8:	and	w9, w9, #0x1
  412aac:	sturb	w9, [x29, #-1]
  412ab0:	ldurb	w8, [x29, #-1]
  412ab4:	and	w0, w8, #0x1
  412ab8:	ldp	x29, x30, [sp, #32]
  412abc:	add	sp, sp, #0x30
  412ac0:	ret

0000000000412ac4 <strv_isempty>:
  412ac4:	sub	sp, sp, #0x10
  412ac8:	str	x0, [sp, #8]
  412acc:	ldr	x8, [sp, #8]
  412ad0:	mov	w9, #0x1                   	// #1
  412ad4:	str	w9, [sp, #4]
  412ad8:	cbz	x8, 412af4 <strv_isempty+0x30>
  412adc:	ldr	x8, [sp, #8]
  412ae0:	ldr	x8, [x8]
  412ae4:	cmp	x8, #0x0
  412ae8:	cset	w9, ne  // ne = any
  412aec:	eor	w9, w9, #0x1
  412af0:	str	w9, [sp, #4]
  412af4:	ldr	w8, [sp, #4]
  412af8:	and	w0, w8, #0x1
  412afc:	add	sp, sp, #0x10
  412b00:	ret

0000000000412b04 <config_parse_n_autovts>:
  412b04:	sub	sp, sp, #0xc0
  412b08:	stp	x29, x30, [sp, #176]
  412b0c:	add	x29, sp, #0xb0
  412b10:	ldr	x8, [x29, #16]
  412b14:	ldr	x9, [x29, #24]
  412b18:	adrp	x10, 442000 <_fini+0x1c30>
  412b1c:	add	x10, x10, #0x3dc
  412b20:	add	x10, x10, #0x3
  412b24:	adrp	x11, 442000 <_fini+0x1c30>
  412b28:	add	x11, x11, #0x819
  412b2c:	stur	x0, [x29, #-16]
  412b30:	stur	x1, [x29, #-24]
  412b34:	stur	w2, [x29, #-28]
  412b38:	stur	x3, [x29, #-40]
  412b3c:	stur	w4, [x29, #-44]
  412b40:	stur	x5, [x29, #-56]
  412b44:	stur	w6, [x29, #-60]
  412b48:	stur	x7, [x29, #-72]
  412b4c:	stur	x8, [x29, #-80]
  412b50:	str	x9, [sp, #88]
  412b54:	ldur	x8, [x29, #-80]
  412b58:	str	x8, [sp, #80]
  412b5c:	str	x10, [sp, #40]
  412b60:	str	x11, [sp, #32]
  412b64:	ldur	x8, [x29, #-24]
  412b68:	cmp	x8, #0x0
  412b6c:	cset	w9, ne  // ne = any
  412b70:	mov	w10, #0x1                   	// #1
  412b74:	eor	w9, w9, #0x1
  412b78:	eor	w9, w9, w10
  412b7c:	eor	w9, w9, w10
  412b80:	and	w9, w9, #0x1
  412b84:	mov	w0, w9
  412b88:	sxtw	x8, w0
  412b8c:	cbz	x8, 412bb0 <config_parse_n_autovts+0xac>
  412b90:	mov	w8, wzr
  412b94:	mov	w0, w8
  412b98:	adrp	x1, 441000 <_fini+0xc30>
  412b9c:	add	x1, x1, #0xc94
  412ba0:	ldr	x2, [sp, #40]
  412ba4:	mov	w3, #0x1c8                 	// #456
  412ba8:	ldr	x4, [sp, #32]
  412bac:	bl	406c68 <log_assert_failed_realm@plt>
  412bb0:	ldur	x8, [x29, #-56]
  412bb4:	cmp	x8, #0x0
  412bb8:	cset	w9, ne  // ne = any
  412bbc:	mov	w10, #0x1                   	// #1
  412bc0:	eor	w9, w9, #0x1
  412bc4:	eor	w9, w9, w10
  412bc8:	eor	w9, w9, w10
  412bcc:	and	w9, w9, #0x1
  412bd0:	mov	w0, w9
  412bd4:	sxtw	x8, w0
  412bd8:	cbz	x8, 412bfc <config_parse_n_autovts+0xf8>
  412bdc:	mov	w8, wzr
  412be0:	mov	w0, w8
  412be4:	adrp	x1, 441000 <_fini+0xc30>
  412be8:	add	x1, x1, #0xd33
  412bec:	ldr	x2, [sp, #40]
  412bf0:	mov	w3, #0x1c9                 	// #457
  412bf4:	ldr	x4, [sp, #32]
  412bf8:	bl	406c68 <log_assert_failed_realm@plt>
  412bfc:	ldur	x8, [x29, #-72]
  412c00:	cmp	x8, #0x0
  412c04:	cset	w9, ne  // ne = any
  412c08:	mov	w10, #0x1                   	// #1
  412c0c:	eor	w9, w9, #0x1
  412c10:	eor	w9, w9, w10
  412c14:	eor	w9, w9, w10
  412c18:	and	w9, w9, #0x1
  412c1c:	mov	w0, w9
  412c20:	sxtw	x8, w0
  412c24:	cbz	x8, 412c48 <config_parse_n_autovts+0x144>
  412c28:	mov	w8, wzr
  412c2c:	mov	w0, w8
  412c30:	adrp	x1, 441000 <_fini+0xc30>
  412c34:	add	x1, x1, #0xd3a
  412c38:	ldr	x2, [sp, #40]
  412c3c:	mov	w3, #0x1ca                 	// #458
  412c40:	ldr	x4, [sp, #32]
  412c44:	bl	406c68 <log_assert_failed_realm@plt>
  412c48:	ldur	x8, [x29, #-80]
  412c4c:	cmp	x8, #0x0
  412c50:	cset	w9, ne  // ne = any
  412c54:	mov	w10, #0x1                   	// #1
  412c58:	eor	w9, w9, #0x1
  412c5c:	eor	w9, w9, w10
  412c60:	eor	w9, w9, w10
  412c64:	and	w9, w9, #0x1
  412c68:	mov	w0, w9
  412c6c:	sxtw	x8, w0
  412c70:	cbz	x8, 412c94 <config_parse_n_autovts+0x190>
  412c74:	mov	w8, wzr
  412c78:	mov	w0, w8
  412c7c:	adrp	x1, 441000 <_fini+0xc30>
  412c80:	add	x1, x1, #0xd41
  412c84:	ldr	x2, [sp, #40]
  412c88:	mov	w3, #0x1cb                 	// #459
  412c8c:	ldr	x4, [sp, #32]
  412c90:	bl	406c68 <log_assert_failed_realm@plt>
  412c94:	ldur	x0, [x29, #-72]
  412c98:	add	x1, sp, #0x4c
  412c9c:	bl	412e18 <safe_atou>
  412ca0:	str	w0, [sp, #72]
  412ca4:	ldr	w8, [sp, #72]
  412ca8:	cmp	w8, #0x0
  412cac:	cset	w8, ge  // ge = tcont
  412cb0:	tbnz	w8, #0, 412d50 <config_parse_n_autovts+0x24c>
  412cb4:	mov	w8, #0x3                   	// #3
  412cb8:	str	w8, [sp, #68]
  412cbc:	ldr	w8, [sp, #72]
  412cc0:	str	w8, [sp, #64]
  412cc4:	mov	w8, wzr
  412cc8:	mov	w0, w8
  412ccc:	bl	406c08 <log_get_max_level_realm@plt>
  412cd0:	ldr	w8, [sp, #68]
  412cd4:	and	w8, w8, #0x7
  412cd8:	cmp	w0, w8
  412cdc:	b.lt	412d2c <config_parse_n_autovts+0x228>  // b.tstop
  412ce0:	ldur	x0, [x29, #-16]
  412ce4:	ldr	w1, [sp, #68]
  412ce8:	ldur	x2, [x29, #-24]
  412cec:	ldur	w3, [x29, #-28]
  412cf0:	ldr	w4, [sp, #64]
  412cf4:	ldur	x8, [x29, #-72]
  412cf8:	ldr	x5, [sp, #40]
  412cfc:	mov	w6, #0x1cf                 	// #463
  412d00:	adrp	x7, 442000 <_fini+0x1c30>
  412d04:	add	x7, x7, #0x8ab
  412d08:	mov	x9, sp
  412d0c:	adrp	x10, 442000 <_fini+0x1c30>
  412d10:	add	x10, x10, #0x8c2
  412d14:	str	x10, [x9]
  412d18:	mov	x9, sp
  412d1c:	str	x8, [x9, #8]
  412d20:	bl	407208 <log_syntax_internal@plt>
  412d24:	str	w0, [sp, #28]
  412d28:	b	412d40 <config_parse_n_autovts+0x23c>
  412d2c:	ldr	w0, [sp, #64]
  412d30:	bl	406c28 <abs@plt>
  412d34:	mov	w8, wzr
  412d38:	subs	w8, w8, w0, uxtb
  412d3c:	str	w8, [sp, #28]
  412d40:	ldr	w8, [sp, #28]
  412d44:	str	w8, [sp, #60]
  412d48:	stur	wzr, [x29, #-4]
  412d4c:	b	412e08 <config_parse_n_autovts+0x304>
  412d50:	ldr	w8, [sp, #76]
  412d54:	cmp	w8, #0xf
  412d58:	b.ls	412df8 <config_parse_n_autovts+0x2f4>  // b.plast
  412d5c:	mov	w8, #0x3                   	// #3
  412d60:	str	w8, [sp, #56]
  412d64:	ldr	w8, [sp, #72]
  412d68:	str	w8, [sp, #52]
  412d6c:	mov	w8, wzr
  412d70:	mov	w0, w8
  412d74:	bl	406c08 <log_get_max_level_realm@plt>
  412d78:	ldr	w8, [sp, #56]
  412d7c:	and	w8, w8, #0x7
  412d80:	cmp	w0, w8
  412d84:	b.lt	412dd4 <config_parse_n_autovts+0x2d0>  // b.tstop
  412d88:	ldur	x0, [x29, #-16]
  412d8c:	ldr	w1, [sp, #56]
  412d90:	ldur	x2, [x29, #-24]
  412d94:	ldur	w3, [x29, #-28]
  412d98:	ldr	w4, [sp, #52]
  412d9c:	ldur	x8, [x29, #-72]
  412da0:	ldr	x5, [sp, #40]
  412da4:	mov	w6, #0x1d4                 	// #468
  412da8:	adrp	x7, 442000 <_fini+0x1c30>
  412dac:	add	x7, x7, #0x8ab
  412db0:	mov	x9, sp
  412db4:	adrp	x10, 442000 <_fini+0x1c30>
  412db8:	add	x10, x10, #0x8f2
  412dbc:	str	x10, [x9]
  412dc0:	mov	x9, sp
  412dc4:	str	x8, [x9, #8]
  412dc8:	bl	407208 <log_syntax_internal@plt>
  412dcc:	str	w0, [sp, #24]
  412dd0:	b	412de8 <config_parse_n_autovts+0x2e4>
  412dd4:	ldr	w0, [sp, #52]
  412dd8:	bl	406c28 <abs@plt>
  412ddc:	mov	w8, wzr
  412de0:	subs	w8, w8, w0, uxtb
  412de4:	str	w8, [sp, #24]
  412de8:	ldr	w8, [sp, #24]
  412dec:	str	w8, [sp, #48]
  412df0:	stur	wzr, [x29, #-4]
  412df4:	b	412e08 <config_parse_n_autovts+0x304>
  412df8:	ldr	w8, [sp, #76]
  412dfc:	ldr	x9, [sp, #80]
  412e00:	str	w8, [x9]
  412e04:	stur	wzr, [x29, #-4]
  412e08:	ldur	w0, [x29, #-4]
  412e0c:	ldp	x29, x30, [sp, #176]
  412e10:	add	sp, sp, #0xc0
  412e14:	ret

0000000000412e18 <safe_atou>:
  412e18:	sub	sp, sp, #0x20
  412e1c:	stp	x29, x30, [sp, #16]
  412e20:	add	x29, sp, #0x10
  412e24:	mov	w8, wzr
  412e28:	str	x0, [sp, #8]
  412e2c:	str	x1, [sp]
  412e30:	ldr	x0, [sp, #8]
  412e34:	ldr	x2, [sp]
  412e38:	mov	w1, w8
  412e3c:	bl	407198 <safe_atou_full@plt>
  412e40:	ldp	x29, x30, [sp, #16]
  412e44:	add	sp, sp, #0x20
  412e48:	ret

0000000000412e4c <manager_spawn_autovt>:
  412e4c:	sub	sp, sp, #0xb0
  412e50:	stp	x29, x30, [sp, #160]
  412e54:	add	x29, sp, #0xa0
  412e58:	adrp	x8, 442000 <_fini+0x1c30>
  412e5c:	add	x8, x8, #0x3dc
  412e60:	add	x8, x8, #0x3
  412e64:	stur	x0, [x29, #-16]
  412e68:	stur	w1, [x29, #-20]
  412e6c:	stur	xzr, [x29, #-48]
  412e70:	stur	xzr, [x29, #-40]
  412e74:	stur	xzr, [x29, #-32]
  412e78:	str	x8, [sp, #48]
  412e7c:	ldur	x8, [x29, #-16]
  412e80:	cmp	x8, #0x0
  412e84:	cset	w9, ne  // ne = any
  412e88:	mov	w10, #0x1                   	// #1
  412e8c:	eor	w9, w9, #0x1
  412e90:	eor	w9, w9, w10
  412e94:	eor	w9, w9, w10
  412e98:	and	w9, w9, #0x1
  412e9c:	mov	w0, w9
  412ea0:	sxtw	x8, w0
  412ea4:	cbz	x8, 412ecc <manager_spawn_autovt+0x80>
  412ea8:	mov	w8, wzr
  412eac:	mov	w0, w8
  412eb0:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  412eb4:	add	x1, x1, #0x5ef
  412eb8:	ldr	x2, [sp, #48]
  412ebc:	mov	w3, #0x1fd                 	// #509
  412ec0:	adrp	x4, 442000 <_fini+0x1c30>
  412ec4:	add	x4, x4, #0x926
  412ec8:	bl	406c68 <log_assert_failed_realm@plt>
  412ecc:	ldur	w8, [x29, #-20]
  412ed0:	cmp	w8, #0x1
  412ed4:	cset	w8, cs  // cs = hs, nlast
  412ed8:	mov	w9, #0x1                   	// #1
  412edc:	eor	w8, w8, #0x1
  412ee0:	eor	w8, w8, w9
  412ee4:	eor	w8, w8, w9
  412ee8:	and	w8, w8, #0x1
  412eec:	mov	w0, w8
  412ef0:	sxtw	x10, w0
  412ef4:	cbz	x10, 412f1c <manager_spawn_autovt+0xd0>
  412ef8:	mov	w8, wzr
  412efc:	mov	w0, w8
  412f00:	adrp	x1, 442000 <_fini+0x1c30>
  412f04:	add	x1, x1, #0x958
  412f08:	ldr	x2, [sp, #48]
  412f0c:	mov	w3, #0x1fe                 	// #510
  412f10:	adrp	x4, 442000 <_fini+0x1c30>
  412f14:	add	x4, x4, #0x926
  412f18:	bl	406c68 <log_assert_failed_realm@plt>
  412f1c:	ldur	w8, [x29, #-20]
  412f20:	ldur	x9, [x29, #-16]
  412f24:	ldr	w10, [x9, #156]
  412f28:	cmp	w8, w10
  412f2c:	b.ls	412f54 <manager_spawn_autovt+0x108>  // b.plast
  412f30:	ldur	w8, [x29, #-20]
  412f34:	ldur	x9, [x29, #-16]
  412f38:	ldr	w10, [x9, #160]
  412f3c:	cmp	w8, w10
  412f40:	b.eq	412f54 <manager_spawn_autovt+0x108>  // b.none
  412f44:	stur	wzr, [x29, #-4]
  412f48:	mov	w8, #0x1                   	// #1
  412f4c:	str	w8, [sp, #72]
  412f50:	b	413120 <manager_spawn_autovt+0x2d4>
  412f54:	ldur	w8, [x29, #-20]
  412f58:	ldur	x9, [x29, #-16]
  412f5c:	ldr	w10, [x9, #160]
  412f60:	cmp	w8, w10
  412f64:	b.eq	412fbc <manager_spawn_autovt+0x170>  // b.none
  412f68:	ldur	w0, [x29, #-20]
  412f6c:	bl	413138 <vt_is_busy>
  412f70:	str	w0, [sp, #76]
  412f74:	ldr	w8, [sp, #76]
  412f78:	cmp	w8, #0x0
  412f7c:	cset	w8, ge  // ge = tcont
  412f80:	tbnz	w8, #0, 412f98 <manager_spawn_autovt+0x14c>
  412f84:	ldr	w8, [sp, #76]
  412f88:	stur	w8, [x29, #-4]
  412f8c:	mov	w8, #0x1                   	// #1
  412f90:	str	w8, [sp, #72]
  412f94:	b	413120 <manager_spawn_autovt+0x2d4>
  412f98:	ldr	w8, [sp, #76]
  412f9c:	cmp	w8, #0x0
  412fa0:	cset	w8, le
  412fa4:	tbnz	w8, #0, 412fbc <manager_spawn_autovt+0x170>
  412fa8:	mov	w8, #0xfffffff0            	// #-16
  412fac:	stur	w8, [x29, #-4]
  412fb0:	mov	w8, #0x1                   	// #1
  412fb4:	str	w8, [sp, #72]
  412fb8:	b	413120 <manager_spawn_autovt+0x2d4>
  412fbc:	ldur	w3, [x29, #-20]
  412fc0:	sub	x8, x29, #0x4f
  412fc4:	mov	x0, x8
  412fc8:	mov	x1, #0x1f                  	// #31
  412fcc:	adrp	x2, 442000 <_fini+0x1c30>
  412fd0:	add	x2, x2, #0x962
  412fd4:	str	x8, [sp, #40]
  412fd8:	bl	407358 <snprintf@plt>
  412fdc:	ldur	x8, [x29, #-16]
  412fe0:	ldr	x8, [x8, #8]
  412fe4:	mov	x0, x8
  412fe8:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  412fec:	add	x1, x1, #0xf86
  412ff0:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  412ff4:	add	x2, x2, #0xf9f
  412ff8:	adrp	x3, 440000 <on_brightness_writer_exit+0x15c>
  412ffc:	add	x3, x3, #0xfb9
  413000:	adrp	x4, 442000 <_fini+0x1c30>
  413004:	add	x4, x4, #0x977
  413008:	sub	x5, x29, #0x30
  41300c:	mov	x8, xzr
  413010:	mov	x6, x8
  413014:	adrp	x7, 442000 <_fini+0x1c30>
  413018:	add	x7, x7, #0x981
  41301c:	mov	x8, sp
  413020:	ldr	x9, [sp, #40]
  413024:	str	x9, [x8]
  413028:	mov	x8, sp
  41302c:	adrp	x10, 442000 <_fini+0x1c30>
  413030:	add	x10, x10, #0x984
  413034:	str	x10, [x8, #8]
  413038:	bl	407368 <sd_bus_call_method@plt>
  41303c:	str	w0, [sp, #76]
  413040:	ldr	w11, [sp, #76]
  413044:	cmp	w11, #0x0
  413048:	cset	w11, ge  // ge = tcont
  41304c:	tbnz	w11, #0, 413114 <manager_spawn_autovt+0x2c8>
  413050:	mov	w8, #0x3                   	// #3
  413054:	str	w8, [sp, #68]
  413058:	ldr	w8, [sp, #76]
  41305c:	str	w8, [sp, #64]
  413060:	str	wzr, [sp, #60]
  413064:	ldr	w0, [sp, #60]
  413068:	bl	406c08 <log_get_max_level_realm@plt>
  41306c:	ldr	w8, [sp, #68]
  413070:	and	w8, w8, #0x7
  413074:	cmp	w0, w8
  413078:	b.lt	4130e4 <manager_spawn_autovt+0x298>  // b.tstop
  41307c:	ldr	w8, [sp, #60]
  413080:	ldr	w9, [sp, #68]
  413084:	orr	w0, w9, w8, lsl #10
  413088:	ldr	w1, [sp, #64]
  41308c:	ldr	w8, [sp, #76]
  413090:	sub	x10, x29, #0x30
  413094:	str	w0, [sp, #36]
  413098:	mov	x0, x10
  41309c:	str	w1, [sp, #32]
  4130a0:	mov	w1, w8
  4130a4:	bl	4071d8 <bus_error_message@plt>
  4130a8:	ldr	w8, [sp, #36]
  4130ac:	str	x0, [sp, #24]
  4130b0:	mov	w0, w8
  4130b4:	ldr	w1, [sp, #32]
  4130b8:	ldr	x2, [sp, #48]
  4130bc:	mov	w3, #0x21b                 	// #539
  4130c0:	adrp	x4, 442000 <_fini+0x1c30>
  4130c4:	add	x4, x4, #0x989
  4130c8:	adrp	x5, 442000 <_fini+0x1c30>
  4130cc:	add	x5, x5, #0x99e
  4130d0:	sub	x6, x29, #0x4f
  4130d4:	ldr	x7, [sp, #24]
  4130d8:	bl	406c18 <log_internal_realm@plt>
  4130dc:	str	w0, [sp, #20]
  4130e0:	b	4130f8 <manager_spawn_autovt+0x2ac>
  4130e4:	ldr	w0, [sp, #64]
  4130e8:	bl	406c28 <abs@plt>
  4130ec:	mov	w8, wzr
  4130f0:	subs	w8, w8, w0, uxtb
  4130f4:	str	w8, [sp, #20]
  4130f8:	ldr	w8, [sp, #20]
  4130fc:	str	w8, [sp, #56]
  413100:	ldr	w8, [sp, #56]
  413104:	stur	w8, [x29, #-4]
  413108:	mov	w8, #0x1                   	// #1
  41310c:	str	w8, [sp, #72]
  413110:	b	413120 <manager_spawn_autovt+0x2d4>
  413114:	stur	wzr, [x29, #-4]
  413118:	mov	w8, #0x1                   	// #1
  41311c:	str	w8, [sp, #72]
  413120:	sub	x0, x29, #0x30
  413124:	bl	4071e8 <sd_bus_error_free@plt>
  413128:	ldur	w0, [x29, #-4]
  41312c:	ldp	x29, x30, [sp, #160]
  413130:	add	sp, sp, #0xb0
  413134:	ret

0000000000413138 <vt_is_busy>:
  413138:	sub	sp, sp, #0x40
  41313c:	stp	x29, x30, [sp, #48]
  413140:	add	x29, sp, #0x30
  413144:	adrp	x8, 442000 <_fini+0x1c30>
  413148:	add	x8, x8, #0x3dc
  41314c:	add	x8, x8, #0x3
  413150:	stur	w0, [x29, #-8]
  413154:	stur	wzr, [x29, #-20]
  413158:	str	x8, [sp, #8]
  41315c:	ldur	w8, [x29, #-8]
  413160:	cmp	w8, #0x1
  413164:	cset	w8, cs  // cs = hs, nlast
  413168:	mov	w9, #0x1                   	// #1
  41316c:	eor	w8, w8, #0x1
  413170:	eor	w8, w8, w9
  413174:	eor	w8, w8, w9
  413178:	and	w8, w8, #0x1
  41317c:	mov	w0, w8
  413180:	sxtw	x10, w0
  413184:	cbz	x10, 4131ac <vt_is_busy+0x74>
  413188:	mov	w8, wzr
  41318c:	mov	w0, w8
  413190:	adrp	x1, 442000 <_fini+0x1c30>
  413194:	add	x1, x1, #0x958
  413198:	ldr	x2, [sp, #8]
  41319c:	mov	w3, #0x1e1                 	// #481
  4131a0:	adrp	x4, 442000 <_fini+0x1c30>
  4131a4:	add	x4, x4, #0xc99
  4131a8:	bl	406c68 <log_assert_failed_realm@plt>
  4131ac:	ldur	w8, [x29, #-8]
  4131b0:	cmp	w8, #0xf
  4131b4:	cset	w8, ls  // ls = plast
  4131b8:	mov	w9, #0x1                   	// #1
  4131bc:	eor	w8, w8, #0x1
  4131c0:	eor	w8, w8, w9
  4131c4:	eor	w8, w8, w9
  4131c8:	and	w8, w8, #0x1
  4131cc:	mov	w0, w8
  4131d0:	sxtw	x10, w0
  4131d4:	cbz	x10, 4131fc <vt_is_busy+0xc4>
  4131d8:	mov	w8, wzr
  4131dc:	mov	w0, w8
  4131e0:	adrp	x1, 442000 <_fini+0x1c30>
  4131e4:	add	x1, x1, #0xcb6
  4131e8:	ldr	x2, [sp, #8]
  4131ec:	mov	w3, #0x1e4                 	// #484
  4131f0:	adrp	x4, 442000 <_fini+0x1c30>
  4131f4:	add	x4, x4, #0xc99
  4131f8:	bl	406c68 <log_assert_failed_realm@plt>
  4131fc:	adrp	x0, 442000 <_fini+0x1c30>
  413200:	add	x0, x0, #0xcc1
  413204:	mov	w1, #0x102                 	// #258
  413208:	movk	w1, #0x8, lsl #16
  41320c:	bl	407068 <open_terminal@plt>
  413210:	str	w0, [sp, #24]
  413214:	ldr	w8, [sp, #24]
  413218:	cmp	w8, #0x0
  41321c:	cset	w8, ge  // ge = tcont
  413220:	tbnz	w8, #0, 413244 <vt_is_busy+0x10c>
  413224:	bl	406e08 <__errno_location@plt>
  413228:	ldr	w8, [x0]
  41322c:	mov	w9, wzr
  413230:	subs	w8, w9, w8
  413234:	stur	w8, [x29, #-4]
  413238:	mov	w8, #0x1                   	// #1
  41323c:	str	w8, [sp, #20]
  413240:	b	4132b4 <vt_is_busy+0x17c>
  413244:	ldr	w0, [sp, #24]
  413248:	mov	x1, #0x5603                	// #22019
  41324c:	sub	x2, x29, #0xe
  413250:	bl	407268 <ioctl@plt>
  413254:	cmp	w0, #0x0
  413258:	cset	w8, ge  // ge = tcont
  41325c:	tbnz	w8, #0, 413278 <vt_is_busy+0x140>
  413260:	bl	406e08 <__errno_location@plt>
  413264:	ldr	w8, [x0]
  413268:	mov	w9, wzr
  41326c:	subs	w8, w9, w8
  413270:	stur	w8, [x29, #-20]
  413274:	b	4132a4 <vt_is_busy+0x16c>
  413278:	ldurh	w8, [x29, #-10]
  41327c:	ldur	w9, [x29, #-8]
  413280:	mov	w10, #0x1                   	// #1
  413284:	lsl	w9, w10, w9
  413288:	tst	w8, w9
  41328c:	cset	w8, ne  // ne = any
  413290:	mov	w9, #0x1                   	// #1
  413294:	eor	w8, w8, #0x1
  413298:	eor	w8, w8, w9
  41329c:	and	w8, w8, #0x1
  4132a0:	stur	w8, [x29, #-20]
  4132a4:	ldur	w8, [x29, #-20]
  4132a8:	stur	w8, [x29, #-4]
  4132ac:	mov	w8, #0x1                   	// #1
  4132b0:	str	w8, [sp, #20]
  4132b4:	add	x0, sp, #0x18
  4132b8:	bl	4143dc <closep>
  4132bc:	ldur	w0, [x29, #-4]
  4132c0:	ldp	x29, x30, [sp, #48]
  4132c4:	add	sp, sp, #0x40
  4132c8:	ret

00000000004132cc <manager_is_lid_closed>:
  4132cc:	sub	sp, sp, #0x50
  4132d0:	stp	x29, x30, [sp, #64]
  4132d4:	add	x29, sp, #0x40
  4132d8:	mov	w8, #0xfffffffe            	// #-2
  4132dc:	mov	x9, xzr
  4132e0:	add	x10, sp, #0x8
  4132e4:	stur	x0, [x29, #-16]
  4132e8:	str	w8, [sp, #8]
  4132ec:	str	x9, [x10, #8]
  4132f0:	ldur	q0, [sp, #8]
  4132f4:	str	q0, [sp, #32]
  4132f8:	ldur	x8, [x29, #-16]
  4132fc:	ldr	x0, [x8, #64]
  413300:	add	x1, sp, #0x20
  413304:	add	x2, sp, #0x18
  413308:	mov	x8, xzr
  41330c:	mov	x3, x8
  413310:	bl	412908 <hashmap_iterate>
  413314:	tbnz	w0, #0, 41331c <manager_is_lid_closed+0x50>
  413318:	b	413340 <manager_is_lid_closed+0x74>
  41331c:	ldr	x8, [sp, #24]
  413320:	ldrb	w9, [x8, #44]
  413324:	tbnz	w9, #0, 41332c <manager_is_lid_closed+0x60>
  413328:	b	41333c <manager_is_lid_closed+0x70>
  41332c:	mov	w8, #0x1                   	// #1
  413330:	and	w8, w8, #0x1
  413334:	sturb	w8, [x29, #-1]
  413338:	b	41334c <manager_is_lid_closed+0x80>
  41333c:	b	4132f8 <manager_is_lid_closed+0x2c>
  413340:	mov	w8, wzr
  413344:	and	w8, w8, #0x1
  413348:	sturb	w8, [x29, #-1]
  41334c:	ldurb	w8, [x29, #-1]
  413350:	and	w0, w8, #0x1
  413354:	ldp	x29, x30, [sp, #64]
  413358:	add	sp, sp, #0x50
  41335c:	ret

0000000000413360 <manager_is_docked_or_external_displays>:
  413360:	sub	sp, sp, #0x80
  413364:	stp	x29, x30, [sp, #112]
  413368:	add	x29, sp, #0x70
  41336c:	adrp	x8, 442000 <_fini+0x1c30>
  413370:	add	x8, x8, #0x3dc
  413374:	add	x8, x8, #0x3
  413378:	adrp	x9, 442000 <_fini+0x1c30>
  41337c:	add	x9, x9, #0x9b5
  413380:	stur	x0, [x29, #-16]
  413384:	ldur	x0, [x29, #-16]
  413388:	str	x8, [sp, #32]
  41338c:	str	x9, [sp, #24]
  413390:	bl	41356c <manager_is_docked>
  413394:	tbnz	w0, #0, 41339c <manager_is_docked_or_external_displays+0x3c>
  413398:	b	413420 <manager_is_docked_or_external_displays+0xc0>
  41339c:	mov	w8, #0x7                   	// #7
  4133a0:	stur	w8, [x29, #-24]
  4133a4:	stur	wzr, [x29, #-28]
  4133a8:	stur	wzr, [x29, #-32]
  4133ac:	ldur	w0, [x29, #-32]
  4133b0:	bl	406c08 <log_get_max_level_realm@plt>
  4133b4:	ldur	w8, [x29, #-24]
  4133b8:	and	w8, w8, #0x7
  4133bc:	cmp	w0, w8
  4133c0:	b.lt	4133f4 <manager_is_docked_or_external_displays+0x94>  // b.tstop
  4133c4:	ldur	w8, [x29, #-32]
  4133c8:	ldur	w9, [x29, #-24]
  4133cc:	orr	w0, w9, w8, lsl #10
  4133d0:	ldur	w1, [x29, #-28]
  4133d4:	ldr	x2, [sp, #32]
  4133d8:	mov	w3, #0x278                 	// #632
  4133dc:	ldr	x4, [sp, #24]
  4133e0:	adrp	x5, 442000 <_fini+0x1c30>
  4133e4:	add	x5, x5, #0x9dc
  4133e8:	bl	406c18 <log_internal_realm@plt>
  4133ec:	str	w0, [sp, #20]
  4133f0:	b	413408 <manager_is_docked_or_external_displays+0xa8>
  4133f4:	ldur	w0, [x29, #-28]
  4133f8:	bl	406c28 <abs@plt>
  4133fc:	mov	w8, wzr
  413400:	subs	w8, w8, w0, uxtb
  413404:	str	w8, [sp, #20]
  413408:	ldr	w8, [sp, #20]
  41340c:	stur	w8, [x29, #-36]
  413410:	mov	w8, #0x1                   	// #1
  413414:	and	w8, w8, #0x1
  413418:	sturb	w8, [x29, #-1]
  41341c:	b	413558 <manager_is_docked_or_external_displays+0x1f8>
  413420:	ldur	x0, [x29, #-16]
  413424:	bl	413600 <manager_count_external_displays>
  413428:	stur	w0, [x29, #-20]
  41342c:	ldur	w8, [x29, #-20]
  413430:	cmp	w8, #0x0
  413434:	cset	w8, ge  // ge = tcont
  413438:	tbnz	w8, #0, 4134b8 <manager_is_docked_or_external_displays+0x158>
  41343c:	mov	w8, #0x4                   	// #4
  413440:	stur	w8, [x29, #-40]
  413444:	ldur	w8, [x29, #-20]
  413448:	stur	w8, [x29, #-44]
  41344c:	stur	wzr, [x29, #-48]
  413450:	ldur	w0, [x29, #-48]
  413454:	bl	406c08 <log_get_max_level_realm@plt>
  413458:	ldur	w8, [x29, #-40]
  41345c:	and	w8, w8, #0x7
  413460:	cmp	w0, w8
  413464:	b.lt	413498 <manager_is_docked_or_external_displays+0x138>  // b.tstop
  413468:	ldur	w8, [x29, #-48]
  41346c:	ldur	w9, [x29, #-40]
  413470:	orr	w0, w9, w8, lsl #10
  413474:	ldur	w1, [x29, #-44]
  413478:	ldr	x2, [sp, #32]
  41347c:	mov	w3, #0x280                 	// #640
  413480:	ldr	x4, [sp, #24]
  413484:	adrp	x5, 442000 <_fini+0x1c30>
  413488:	add	x5, x5, #0x9ee
  41348c:	bl	406c18 <log_internal_realm@plt>
  413490:	str	w0, [sp, #16]
  413494:	b	4134ac <manager_is_docked_or_external_displays+0x14c>
  413498:	ldur	w0, [x29, #-44]
  41349c:	bl	406c28 <abs@plt>
  4134a0:	mov	w8, wzr
  4134a4:	subs	w8, w8, w0, uxtb
  4134a8:	str	w8, [sp, #16]
  4134ac:	ldr	w8, [sp, #16]
  4134b0:	stur	w8, [x29, #-52]
  4134b4:	b	41354c <manager_is_docked_or_external_displays+0x1ec>
  4134b8:	ldur	w8, [x29, #-20]
  4134bc:	cmp	w8, #0x1
  4134c0:	b.lt	41354c <manager_is_docked_or_external_displays+0x1ec>  // b.tstop
  4134c4:	mov	w8, #0x7                   	// #7
  4134c8:	str	w8, [sp, #56]
  4134cc:	str	wzr, [sp, #52]
  4134d0:	str	wzr, [sp, #48]
  4134d4:	ldr	w0, [sp, #48]
  4134d8:	bl	406c08 <log_get_max_level_realm@plt>
  4134dc:	ldr	w8, [sp, #56]
  4134e0:	and	w8, w8, #0x7
  4134e4:	cmp	w0, w8
  4134e8:	b.lt	413520 <manager_is_docked_or_external_displays+0x1c0>  // b.tstop
  4134ec:	ldr	w8, [sp, #48]
  4134f0:	ldr	w9, [sp, #56]
  4134f4:	orr	w0, w9, w8, lsl #10
  4134f8:	ldr	w1, [sp, #52]
  4134fc:	ldur	w6, [x29, #-20]
  413500:	ldr	x2, [sp, #32]
  413504:	mov	w3, #0x282                 	// #642
  413508:	ldr	x4, [sp, #24]
  41350c:	adrp	x5, 442000 <_fini+0x1c30>
  413510:	add	x5, x5, #0xa0a
  413514:	bl	406c18 <log_internal_realm@plt>
  413518:	str	w0, [sp, #12]
  41351c:	b	413534 <manager_is_docked_or_external_displays+0x1d4>
  413520:	ldr	w0, [sp, #52]
  413524:	bl	406c28 <abs@plt>
  413528:	mov	w8, wzr
  41352c:	subs	w8, w8, w0, uxtb
  413530:	str	w8, [sp, #12]
  413534:	ldr	w8, [sp, #12]
  413538:	str	w8, [sp, #44]
  41353c:	mov	w8, #0x1                   	// #1
  413540:	and	w8, w8, #0x1
  413544:	sturb	w8, [x29, #-1]
  413548:	b	413558 <manager_is_docked_or_external_displays+0x1f8>
  41354c:	mov	w8, wzr
  413550:	and	w8, w8, #0x1
  413554:	sturb	w8, [x29, #-1]
  413558:	ldurb	w8, [x29, #-1]
  41355c:	and	w0, w8, #0x1
  413560:	ldp	x29, x30, [sp, #112]
  413564:	add	sp, sp, #0x80
  413568:	ret

000000000041356c <manager_is_docked>:
  41356c:	sub	sp, sp, #0x50
  413570:	stp	x29, x30, [sp, #64]
  413574:	add	x29, sp, #0x40
  413578:	mov	w8, #0xfffffffe            	// #-2
  41357c:	mov	x9, xzr
  413580:	add	x10, sp, #0x8
  413584:	stur	x0, [x29, #-16]
  413588:	str	w8, [sp, #8]
  41358c:	str	x9, [x10, #8]
  413590:	ldur	q0, [sp, #8]
  413594:	str	q0, [sp, #32]
  413598:	ldur	x8, [x29, #-16]
  41359c:	ldr	x0, [x8, #64]
  4135a0:	add	x1, sp, #0x20
  4135a4:	add	x2, sp, #0x18
  4135a8:	mov	x8, xzr
  4135ac:	mov	x3, x8
  4135b0:	bl	412908 <hashmap_iterate>
  4135b4:	tbnz	w0, #0, 4135bc <manager_is_docked+0x50>
  4135b8:	b	4135e0 <manager_is_docked+0x74>
  4135bc:	ldr	x8, [sp, #24]
  4135c0:	ldrb	w9, [x8, #45]
  4135c4:	tbnz	w9, #0, 4135cc <manager_is_docked+0x60>
  4135c8:	b	4135dc <manager_is_docked+0x70>
  4135cc:	mov	w8, #0x1                   	// #1
  4135d0:	and	w8, w8, #0x1
  4135d4:	sturb	w8, [x29, #-1]
  4135d8:	b	4135ec <manager_is_docked+0x80>
  4135dc:	b	413598 <manager_is_docked+0x2c>
  4135e0:	mov	w8, wzr
  4135e4:	and	w8, w8, #0x1
  4135e8:	sturb	w8, [x29, #-1]
  4135ec:	ldurb	w8, [x29, #-1]
  4135f0:	and	w0, w8, #0x1
  4135f4:	ldp	x29, x30, [sp, #64]
  4135f8:	add	sp, sp, #0x50
  4135fc:	ret

0000000000413600 <manager_count_external_displays>:
  413600:	sub	sp, sp, #0x100
  413604:	stp	x29, x30, [sp, #240]
  413608:	add	x29, sp, #0xf0
  41360c:	mov	x8, xzr
  413610:	sub	x9, x29, #0x18
  413614:	stur	x0, [x29, #-16]
  413618:	stur	x8, [x29, #-24]
  41361c:	stur	wzr, [x29, #-40]
  413620:	mov	x0, x9
  413624:	bl	406f48 <sd_device_enumerator_new@plt>
  413628:	stur	w0, [x29, #-36]
  41362c:	ldur	w10, [x29, #-36]
  413630:	cmp	w10, #0x0
  413634:	cset	w10, ge  // ge = tcont
  413638:	tbnz	w10, #0, 413650 <manager_count_external_displays+0x50>
  41363c:	ldur	w8, [x29, #-36]
  413640:	stur	w8, [x29, #-4]
  413644:	mov	w8, #0x1                   	// #1
  413648:	stur	w8, [x29, #-44]
  41364c:	b	4138a0 <manager_count_external_displays+0x2a0>
  413650:	ldur	x0, [x29, #-24]
  413654:	bl	407378 <sd_device_enumerator_allow_uninitialized@plt>
  413658:	stur	w0, [x29, #-36]
  41365c:	ldur	w8, [x29, #-36]
  413660:	cmp	w8, #0x0
  413664:	cset	w8, ge  // ge = tcont
  413668:	tbnz	w8, #0, 413680 <manager_count_external_displays+0x80>
  41366c:	ldur	w8, [x29, #-36]
  413670:	stur	w8, [x29, #-4]
  413674:	mov	w8, #0x1                   	// #1
  413678:	stur	w8, [x29, #-44]
  41367c:	b	4138a0 <manager_count_external_displays+0x2a0>
  413680:	ldur	x0, [x29, #-24]
  413684:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  413688:	add	x1, x1, #0xbb0
  41368c:	mov	w2, #0x1                   	// #1
  413690:	bl	406fe8 <sd_device_enumerator_add_match_subsystem@plt>
  413694:	stur	w0, [x29, #-36]
  413698:	ldur	w8, [x29, #-36]
  41369c:	cmp	w8, #0x0
  4136a0:	cset	w8, ge  // ge = tcont
  4136a4:	tbnz	w8, #0, 4136bc <manager_count_external_displays+0xbc>
  4136a8:	ldur	w8, [x29, #-36]
  4136ac:	stur	w8, [x29, #-4]
  4136b0:	mov	w8, #0x1                   	// #1
  4136b4:	stur	w8, [x29, #-44]
  4136b8:	b	4138a0 <manager_count_external_displays+0x2a0>
  4136bc:	ldur	x0, [x29, #-24]
  4136c0:	bl	406f68 <sd_device_enumerator_get_device_first@plt>
  4136c4:	stur	x0, [x29, #-32]
  4136c8:	ldur	x8, [x29, #-32]
  4136cc:	cbz	x8, 413890 <manager_count_external_displays+0x290>
  4136d0:	ldur	x0, [x29, #-32]
  4136d4:	sub	x1, x29, #0x60
  4136d8:	bl	407388 <sd_device_get_parent@plt>
  4136dc:	cmp	w0, #0x0
  4136e0:	cset	w8, ge  // ge = tcont
  4136e4:	tbnz	w8, #0, 4136ec <manager_count_external_displays+0xec>
  4136e8:	b	413880 <manager_count_external_displays+0x280>
  4136ec:	ldur	x0, [x29, #-96]
  4136f0:	sub	x1, x29, #0x58
  4136f4:	bl	407398 <sd_device_get_subsystem@plt>
  4136f8:	cmp	w0, #0x0
  4136fc:	cset	w8, lt  // lt = tstop
  413700:	tbnz	w8, #0, 413718 <manager_count_external_displays+0x118>
  413704:	ldur	x0, [x29, #-88]
  413708:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41370c:	add	x1, x1, #0xbb0
  413710:	bl	407158 <strcmp@plt>
  413714:	cbz	w0, 41371c <manager_count_external_displays+0x11c>
  413718:	b	413880 <manager_count_external_displays+0x280>
  41371c:	ldur	x0, [x29, #-32]
  413720:	sub	x1, x29, #0x50
  413724:	bl	407088 <sd_device_get_sysname@plt>
  413728:	cmp	w0, #0x0
  41372c:	cset	w8, ge  // ge = tcont
  413730:	tbnz	w8, #0, 413738 <manager_count_external_displays+0x138>
  413734:	b	413880 <manager_count_external_displays+0x280>
  413738:	ldur	x0, [x29, #-80]
  41373c:	mov	w1, #0x2d                  	// #45
  413740:	bl	4073a8 <strchr@plt>
  413744:	stur	x0, [x29, #-72]
  413748:	ldur	x8, [x29, #-72]
  41374c:	cbnz	x8, 413754 <manager_count_external_displays+0x154>
  413750:	b	413880 <manager_count_external_displays+0x280>
  413754:	ldur	x8, [x29, #-72]
  413758:	add	x8, x8, #0x1
  41375c:	stur	x8, [x29, #-72]
  413760:	ldur	x8, [x29, #-72]
  413764:	stur	x8, [x29, #-104]
  413768:	mov	x8, xzr
  41376c:	stur	x8, [x29, #-112]
  413770:	add	x8, sp, #0x18
  413774:	mov	x0, x8
  413778:	adrp	x1, 460000 <__TMC_END__>
  41377c:	add	x1, x1, #0x0
  413780:	mov	x2, #0x60                  	// #96
  413784:	str	x8, [sp, #8]
  413788:	bl	406cb8 <memcpy@plt>
  41378c:	ldr	x8, [sp, #8]
  413790:	str	x8, [sp, #120]
  413794:	ldr	x8, [sp, #120]
  413798:	mov	w9, #0x0                   	// #0
  41379c:	str	w9, [sp, #4]
  4137a0:	cbz	x8, 4137b8 <manager_count_external_displays+0x1b8>
  4137a4:	ldr	x8, [sp, #120]
  4137a8:	ldr	x8, [x8]
  4137ac:	cmp	x8, #0x0
  4137b0:	cset	w9, ne  // ne = any
  4137b4:	str	w9, [sp, #4]
  4137b8:	ldr	w8, [sp, #4]
  4137bc:	tbnz	w8, #0, 4137c4 <manager_count_external_displays+0x1c4>
  4137c0:	b	4137f4 <manager_count_external_displays+0x1f4>
  4137c4:	ldur	x0, [x29, #-104]
  4137c8:	ldr	x8, [sp, #120]
  4137cc:	ldr	x1, [x8]
  4137d0:	bl	414438 <startswith>
  4137d4:	stur	x0, [x29, #-112]
  4137d8:	ldur	x8, [x29, #-112]
  4137dc:	cbz	x8, 4137e4 <manager_count_external_displays+0x1e4>
  4137e0:	b	4137f4 <manager_count_external_displays+0x1f4>
  4137e4:	ldr	x8, [sp, #120]
  4137e8:	add	x8, x8, #0x8
  4137ec:	str	x8, [sp, #120]
  4137f0:	b	413794 <manager_count_external_displays+0x194>
  4137f4:	ldur	x8, [x29, #-112]
  4137f8:	str	x8, [sp, #16]
  4137fc:	ldr	x8, [sp, #16]
  413800:	cbnz	x8, 413808 <manager_count_external_displays+0x208>
  413804:	b	413880 <manager_count_external_displays+0x280>
  413808:	ldur	x0, [x29, #-32]
  41380c:	adrp	x1, 442000 <_fini+0x1c30>
  413810:	add	x1, x1, #0xd1f
  413814:	sub	x2, x29, #0x40
  413818:	bl	4073b8 <sd_device_get_sysattr_value@plt>
  41381c:	cmp	w0, #0x0
  413820:	cset	w8, lt  // lt = tstop
  413824:	tbnz	w8, #0, 41383c <manager_count_external_displays+0x23c>
  413828:	ldur	x0, [x29, #-64]
  41382c:	adrp	x1, 442000 <_fini+0x1c30>
  413830:	add	x1, x1, #0xd1f
  413834:	bl	407158 <strcmp@plt>
  413838:	cbz	w0, 413840 <manager_count_external_displays+0x240>
  41383c:	b	413880 <manager_count_external_displays+0x280>
  413840:	ldur	x0, [x29, #-32]
  413844:	adrp	x1, 442000 <_fini+0x1c30>
  413848:	add	x1, x1, #0xd27
  41384c:	sub	x2, x29, #0x38
  413850:	bl	4073b8 <sd_device_get_sysattr_value@plt>
  413854:	cmp	w0, #0x0
  413858:	cset	w8, lt  // lt = tstop
  41385c:	tbnz	w8, #0, 413874 <manager_count_external_displays+0x274>
  413860:	ldur	x0, [x29, #-56]
  413864:	adrp	x1, 442000 <_fini+0x1c30>
  413868:	add	x1, x1, #0xd2e
  41386c:	bl	407158 <strcmp@plt>
  413870:	cbz	w0, 413880 <manager_count_external_displays+0x280>
  413874:	ldur	w8, [x29, #-40]
  413878:	add	w8, w8, #0x1
  41387c:	stur	w8, [x29, #-40]
  413880:	ldur	x0, [x29, #-24]
  413884:	bl	406f78 <sd_device_enumerator_get_device_next@plt>
  413888:	stur	x0, [x29, #-32]
  41388c:	b	4136c8 <manager_count_external_displays+0xc8>
  413890:	ldur	w8, [x29, #-40]
  413894:	stur	w8, [x29, #-4]
  413898:	mov	w8, #0x1                   	// #1
  41389c:	stur	w8, [x29, #-44]
  4138a0:	sub	x0, x29, #0x18
  4138a4:	bl	414404 <sd_device_enumerator_unrefp>
  4138a8:	ldur	w0, [x29, #-4]
  4138ac:	ldp	x29, x30, [sp, #240]
  4138b0:	add	sp, sp, #0x100
  4138b4:	ret

00000000004138b8 <manager_is_on_external_power>:
  4138b8:	sub	sp, sp, #0x40
  4138bc:	stp	x29, x30, [sp, #48]
  4138c0:	add	x29, sp, #0x30
  4138c4:	adrp	x8, 442000 <_fini+0x1c30>
  4138c8:	add	x8, x8, #0x3dc
  4138cc:	add	x2, x8, #0x3
  4138d0:	str	x2, [sp, #16]
  4138d4:	bl	4073c8 <on_ac_power@plt>
  4138d8:	stur	w0, [x29, #-4]
  4138dc:	ldur	w9, [x29, #-4]
  4138e0:	cmp	w9, #0x0
  4138e4:	cset	w9, ge  // ge = tcont
  4138e8:	tbnz	w9, #0, 413968 <manager_is_on_external_power+0xb0>
  4138ec:	mov	w8, #0x4                   	// #4
  4138f0:	stur	w8, [x29, #-8]
  4138f4:	ldur	w8, [x29, #-4]
  4138f8:	stur	w8, [x29, #-12]
  4138fc:	stur	wzr, [x29, #-16]
  413900:	ldur	w0, [x29, #-16]
  413904:	bl	406c08 <log_get_max_level_realm@plt>
  413908:	ldur	w8, [x29, #-8]
  41390c:	and	w8, w8, #0x7
  413910:	cmp	w0, w8
  413914:	b.lt	41394c <manager_is_on_external_power+0x94>  // b.tstop
  413918:	ldur	w8, [x29, #-16]
  41391c:	ldur	w9, [x29, #-8]
  413920:	orr	w0, w9, w8, lsl #10
  413924:	ldur	w1, [x29, #-12]
  413928:	ldr	x2, [sp, #16]
  41392c:	mov	w3, #0x290                 	// #656
  413930:	adrp	x4, 442000 <_fini+0x1c30>
  413934:	add	x4, x4, #0xa2c
  413938:	adrp	x5, 442000 <_fini+0x1c30>
  41393c:	add	x5, x5, #0xa49
  413940:	bl	406c18 <log_internal_realm@plt>
  413944:	str	w0, [sp, #12]
  413948:	b	413960 <manager_is_on_external_power+0xa8>
  41394c:	ldur	w0, [x29, #-12]
  413950:	bl	406c28 <abs@plt>
  413954:	mov	w8, wzr
  413958:	subs	w8, w8, w0, uxtb
  41395c:	str	w8, [sp, #12]
  413960:	ldr	w8, [sp, #12]
  413964:	stur	w8, [x29, #-20]
  413968:	ldur	w8, [x29, #-4]
  41396c:	cmp	w8, #0x0
  413970:	cset	w8, ne  // ne = any
  413974:	and	w0, w8, #0x1
  413978:	ldp	x29, x30, [sp, #48]
  41397c:	add	sp, sp, #0x40
  413980:	ret

0000000000413984 <manager_all_buttons_ignored>:
  413984:	sub	sp, sp, #0x30
  413988:	stp	x29, x30, [sp, #32]
  41398c:	add	x29, sp, #0x20
  413990:	adrp	x8, 442000 <_fini+0x1c30>
  413994:	add	x8, x8, #0x3dc
  413998:	add	x2, x8, #0x3
  41399c:	str	x0, [sp, #16]
  4139a0:	str	x2, [sp]
  4139a4:	ldr	x8, [sp, #16]
  4139a8:	cmp	x8, #0x0
  4139ac:	cset	w9, ne  // ne = any
  4139b0:	mov	w10, #0x1                   	// #1
  4139b4:	eor	w9, w9, #0x1
  4139b8:	eor	w9, w9, w10
  4139bc:	eor	w9, w9, w10
  4139c0:	and	w9, w9, #0x1
  4139c4:	mov	w0, w9
  4139c8:	sxtw	x8, w0
  4139cc:	cbz	x8, 4139f4 <manager_all_buttons_ignored+0x70>
  4139d0:	mov	w8, wzr
  4139d4:	mov	w0, w8
  4139d8:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4139dc:	add	x1, x1, #0x5ef
  4139e0:	ldr	x2, [sp]
  4139e4:	mov	w3, #0x296                 	// #662
  4139e8:	adrp	x4, 442000 <_fini+0x1c30>
  4139ec:	add	x4, x4, #0xa6c
  4139f0:	bl	406c68 <log_assert_failed_realm@plt>
  4139f4:	ldr	x8, [sp, #16]
  4139f8:	ldr	w9, [x8, #396]
  4139fc:	cbz	w9, 413a10 <manager_all_buttons_ignored+0x8c>
  413a00:	mov	w8, wzr
  413a04:	and	w8, w8, #0x1
  413a08:	sturb	w8, [x29, #-1]
  413a0c:	b	413ae8 <manager_all_buttons_ignored+0x164>
  413a10:	ldr	x8, [sp, #16]
  413a14:	ldr	w9, [x8, #400]
  413a18:	cbz	w9, 413a2c <manager_all_buttons_ignored+0xa8>
  413a1c:	mov	w8, wzr
  413a20:	and	w8, w8, #0x1
  413a24:	sturb	w8, [x29, #-1]
  413a28:	b	413ae8 <manager_all_buttons_ignored+0x164>
  413a2c:	ldr	x8, [sp, #16]
  413a30:	ldr	w9, [x8, #404]
  413a34:	cbz	w9, 413a48 <manager_all_buttons_ignored+0xc4>
  413a38:	mov	w8, wzr
  413a3c:	and	w8, w8, #0x1
  413a40:	sturb	w8, [x29, #-1]
  413a44:	b	413ae8 <manager_all_buttons_ignored+0x164>
  413a48:	ldr	x8, [sp, #16]
  413a4c:	ldr	w9, [x8, #408]
  413a50:	cbz	w9, 413a64 <manager_all_buttons_ignored+0xe0>
  413a54:	mov	w8, wzr
  413a58:	and	w8, w8, #0x1
  413a5c:	sturb	w8, [x29, #-1]
  413a60:	b	413ae8 <manager_all_buttons_ignored+0x164>
  413a64:	mov	w8, #0x0                   	// #0
  413a68:	strb	w8, [sp, #15]
  413a6c:	ldr	x9, [sp, #16]
  413a70:	ldr	w8, [x9, #412]
  413a74:	add	w8, w8, #0x1
  413a78:	mov	w10, #0x1                   	// #1
  413a7c:	cmp	w8, #0x1
  413a80:	cset	w8, ls  // ls = plast
  413a84:	eor	w8, w8, w10
  413a88:	tbnz	w8, #0, 413a9c <manager_all_buttons_ignored+0x118>
  413a8c:	b	413a90 <manager_all_buttons_ignored+0x10c>
  413a90:	mov	w8, #0x1                   	// #1
  413a94:	strb	w8, [sp, #15]
  413a98:	b	413a9c <manager_all_buttons_ignored+0x118>
  413a9c:	ldrb	w8, [sp, #15]
  413aa0:	and	w8, w8, #0x1
  413aa4:	strb	w8, [sp, #14]
  413aa8:	ldrb	w8, [sp, #14]
  413aac:	tbnz	w8, #0, 413ac0 <manager_all_buttons_ignored+0x13c>
  413ab0:	mov	w8, wzr
  413ab4:	and	w8, w8, #0x1
  413ab8:	sturb	w8, [x29, #-1]
  413abc:	b	413ae8 <manager_all_buttons_ignored+0x164>
  413ac0:	ldr	x8, [sp, #16]
  413ac4:	ldr	w9, [x8, #416]
  413ac8:	cbz	w9, 413adc <manager_all_buttons_ignored+0x158>
  413acc:	mov	w8, wzr
  413ad0:	and	w8, w8, #0x1
  413ad4:	sturb	w8, [x29, #-1]
  413ad8:	b	413ae8 <manager_all_buttons_ignored+0x164>
  413adc:	mov	w8, #0x1                   	// #1
  413ae0:	and	w8, w8, #0x1
  413ae4:	sturb	w8, [x29, #-1]
  413ae8:	ldurb	w8, [x29, #-1]
  413aec:	and	w0, w8, #0x1
  413af0:	ldp	x29, x30, [sp, #32]
  413af4:	add	sp, sp, #0x30
  413af8:	ret

0000000000413afc <manager_read_utmp>:
  413afc:	sub	sp, sp, #0xe0
  413b00:	stp	x29, x30, [sp, #208]
  413b04:	add	x29, sp, #0xd0
  413b08:	adrp	x8, 442000 <_fini+0x1c30>
  413b0c:	add	x8, x8, #0x3dc
  413b10:	add	x8, x8, #0x3
  413b14:	adrp	x9, 442000 <_fini+0x1c30>
  413b18:	add	x9, x9, #0xac8
  413b1c:	stur	x0, [x29, #-16]
  413b20:	str	x8, [sp, #56]
  413b24:	str	x9, [sp, #48]
  413b28:	ldur	x8, [x29, #-16]
  413b2c:	cmp	x8, #0x0
  413b30:	cset	w9, ne  // ne = any
  413b34:	mov	w10, #0x1                   	// #1
  413b38:	eor	w9, w9, #0x1
  413b3c:	eor	w9, w9, w10
  413b40:	eor	w9, w9, w10
  413b44:	and	w9, w9, #0x1
  413b48:	mov	w0, w9
  413b4c:	sxtw	x8, w0
  413b50:	cbz	x8, 413b78 <manager_read_utmp+0x7c>
  413b54:	mov	w8, wzr
  413b58:	mov	w0, w8
  413b5c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  413b60:	add	x1, x1, #0x5ef
  413b64:	ldr	x2, [sp, #56]
  413b68:	mov	w3, #0x2ac                 	// #684
  413b6c:	adrp	x4, 442000 <_fini+0x1c30>
  413b70:	add	x4, x4, #0xa99
  413b74:	bl	406c68 <log_assert_failed_realm@plt>
  413b78:	adrp	x0, 442000 <_fini+0x1c30>
  413b7c:	add	x0, x0, #0xaba
  413b80:	bl	4073d8 <utmpxname@plt>
  413b84:	cmp	w0, #0x0
  413b88:	cset	w8, ge  // ge = tcont
  413b8c:	tbnz	w8, #0, 413c18 <manager_read_utmp+0x11c>
  413b90:	mov	w8, #0x3                   	// #3
  413b94:	stur	w8, [x29, #-24]
  413b98:	bl	406e08 <__errno_location@plt>
  413b9c:	ldr	w8, [x0]
  413ba0:	stur	w8, [x29, #-28]
  413ba4:	stur	wzr, [x29, #-32]
  413ba8:	ldur	w0, [x29, #-32]
  413bac:	bl	406c08 <log_get_max_level_realm@plt>
  413bb0:	ldur	w8, [x29, #-24]
  413bb4:	and	w8, w8, #0x7
  413bb8:	cmp	w0, w8
  413bbc:	b.lt	413bf0 <manager_read_utmp+0xf4>  // b.tstop
  413bc0:	ldur	w8, [x29, #-32]
  413bc4:	ldur	w9, [x29, #-24]
  413bc8:	orr	w0, w9, w8, lsl #10
  413bcc:	ldur	w1, [x29, #-28]
  413bd0:	ldr	x2, [sp, #56]
  413bd4:	mov	w3, #0x2af                 	// #687
  413bd8:	ldr	x4, [sp, #48]
  413bdc:	adrp	x5, 442000 <_fini+0x1c30>
  413be0:	add	x5, x5, #0xada
  413be4:	bl	406c18 <log_internal_realm@plt>
  413be8:	str	w0, [sp, #44]
  413bec:	b	413c04 <manager_read_utmp+0x108>
  413bf0:	ldur	w0, [x29, #-28]
  413bf4:	bl	406c28 <abs@plt>
  413bf8:	mov	w8, wzr
  413bfc:	subs	w8, w8, w0, uxtb
  413c00:	str	w8, [sp, #44]
  413c04:	ldr	w8, [sp, #44]
  413c08:	stur	w8, [x29, #-36]
  413c0c:	ldur	w8, [x29, #-36]
  413c10:	stur	w8, [x29, #-4]
  413c14:	b	414000 <manager_read_utmp+0x504>
  413c18:	bl	4073e8 <setutxent@plt>
  413c1c:	mov	x8, xzr
  413c20:	stur	x8, [x29, #-48]
  413c24:	bl	406e08 <__errno_location@plt>
  413c28:	str	wzr, [x0]
  413c2c:	bl	4073f8 <getutxent@plt>
  413c30:	stur	x0, [x29, #-56]
  413c34:	ldur	x8, [x29, #-56]
  413c38:	cbnz	x8, 413cd4 <manager_read_utmp+0x1d8>
  413c3c:	bl	406e08 <__errno_location@plt>
  413c40:	ldr	w8, [x0]
  413c44:	cbz	w8, 413cc4 <manager_read_utmp+0x1c8>
  413c48:	mov	w8, #0x4                   	// #4
  413c4c:	stur	w8, [x29, #-76]
  413c50:	bl	406e08 <__errno_location@plt>
  413c54:	ldr	w8, [x0]
  413c58:	stur	w8, [x29, #-80]
  413c5c:	stur	wzr, [x29, #-84]
  413c60:	ldur	w0, [x29, #-84]
  413c64:	bl	406c08 <log_get_max_level_realm@plt>
  413c68:	ldur	w8, [x29, #-76]
  413c6c:	and	w8, w8, #0x7
  413c70:	cmp	w0, w8
  413c74:	b.lt	413ca8 <manager_read_utmp+0x1ac>  // b.tstop
  413c78:	ldur	w8, [x29, #-84]
  413c7c:	ldur	w9, [x29, #-76]
  413c80:	orr	w0, w9, w8, lsl #10
  413c84:	ldur	w1, [x29, #-80]
  413c88:	ldr	x2, [sp, #56]
  413c8c:	mov	w3, #0x2bd                 	// #701
  413c90:	ldr	x4, [sp, #48]
  413c94:	adrp	x5, 442000 <_fini+0x1c30>
  413c98:	add	x5, x5, #0xb07
  413c9c:	bl	406c18 <log_internal_realm@plt>
  413ca0:	str	w0, [sp, #40]
  413ca4:	b	413cbc <manager_read_utmp+0x1c0>
  413ca8:	ldur	w0, [x29, #-80]
  413cac:	bl	406c28 <abs@plt>
  413cb0:	mov	w8, wzr
  413cb4:	subs	w8, w8, w0, uxtb
  413cb8:	str	w8, [sp, #40]
  413cbc:	ldr	w8, [sp, #40]
  413cc0:	stur	w8, [x29, #-88]
  413cc4:	stur	wzr, [x29, #-20]
  413cc8:	mov	w8, #0x4                   	// #4
  413ccc:	stur	w8, [x29, #-92]
  413cd0:	b	413fc4 <manager_read_utmp+0x4c8>
  413cd4:	ldur	x8, [x29, #-56]
  413cd8:	ldrsh	w9, [x8]
  413cdc:	cmp	w9, #0x7
  413ce0:	b.eq	413cf0 <manager_read_utmp+0x1f4>  // b.none
  413ce4:	mov	w8, #0x5                   	// #5
  413ce8:	stur	w8, [x29, #-92]
  413cec:	b	413fc4 <manager_read_utmp+0x4c8>
  413cf0:	ldur	x8, [x29, #-56]
  413cf4:	ldr	w0, [x8, #4]
  413cf8:	bl	4125d8 <pid_is_valid>
  413cfc:	tbnz	w0, #0, 413d0c <manager_read_utmp+0x210>
  413d00:	mov	w8, #0x5                   	// #5
  413d04:	stur	w8, [x29, #-92]
  413d08:	b	413fc4 <manager_read_utmp+0x4c8>
  413d0c:	ldur	x8, [x29, #-56]
  413d10:	add	x0, x8, #0x8
  413d14:	mov	x1, #0x20                  	// #32
  413d18:	bl	407408 <strndup@plt>
  413d1c:	stur	x0, [x29, #-48]
  413d20:	ldur	x8, [x29, #-48]
  413d24:	cbnz	x8, 413d50 <manager_read_utmp+0x254>
  413d28:	mov	w8, wzr
  413d2c:	mov	w0, w8
  413d30:	ldr	x1, [sp, #56]
  413d34:	mov	w2, #0x2ca                 	// #714
  413d38:	ldr	x3, [sp, #48]
  413d3c:	bl	407008 <log_oom_internal@plt>
  413d40:	stur	w0, [x29, #-20]
  413d44:	mov	w8, #0x4                   	// #4
  413d48:	stur	w8, [x29, #-92]
  413d4c:	b	413fc4 <manager_read_utmp+0x4c8>
  413d50:	ldur	x0, [x29, #-48]
  413d54:	adrp	x1, 442000 <_fini+0x1c30>
  413d58:	add	x1, x1, #0xb32
  413d5c:	bl	407418 <path_startswith@plt>
  413d60:	stur	x0, [x29, #-64]
  413d64:	ldur	x8, [x29, #-64]
  413d68:	cbz	x8, 413db0 <manager_read_utmp+0x2b4>
  413d6c:	ldur	x1, [x29, #-64]
  413d70:	sub	x0, x29, #0x30
  413d74:	bl	407428 <free_and_strdup@plt>
  413d78:	stur	w0, [x29, #-20]
  413d7c:	ldur	w8, [x29, #-20]
  413d80:	cmp	w8, #0x0
  413d84:	cset	w8, ge  // ge = tcont
  413d88:	tbnz	w8, #0, 413db0 <manager_read_utmp+0x2b4>
  413d8c:	mov	w8, wzr
  413d90:	mov	w0, w8
  413d94:	ldr	x1, [sp, #56]
  413d98:	mov	w2, #0x2d2                 	// #722
  413d9c:	ldr	x3, [sp, #48]
  413da0:	bl	407008 <log_oom_internal@plt>
  413da4:	mov	w8, #0x4                   	// #4
  413da8:	stur	w8, [x29, #-92]
  413dac:	b	413fc4 <manager_read_utmp+0x4c8>
  413db0:	ldur	x0, [x29, #-48]
  413db4:	bl	412278 <isempty>
  413db8:	tbnz	w0, #0, 413dc0 <manager_read_utmp+0x2c4>
  413dbc:	b	413dcc <manager_read_utmp+0x2d0>
  413dc0:	mov	w8, #0x5                   	// #5
  413dc4:	stur	w8, [x29, #-92]
  413dc8:	b	413fc4 <manager_read_utmp+0x4c8>
  413dcc:	ldur	x8, [x29, #-16]
  413dd0:	ldr	x0, [x8, #40]
  413dd4:	ldur	x8, [x29, #-56]
  413dd8:	ldr	w9, [x8, #4]
  413ddc:	str	x0, [sp, #32]
  413de0:	mov	w0, w9
  413de4:	bl	4125f8 <PID_TO_PTR>
  413de8:	ldr	x8, [sp, #32]
  413dec:	str	x0, [sp, #24]
  413df0:	mov	x0, x8
  413df4:	ldr	x1, [sp, #24]
  413df8:	bl	41165c <hashmap_get>
  413dfc:	stur	x0, [x29, #-72]
  413e00:	ldur	x8, [x29, #-72]
  413e04:	cbnz	x8, 413e14 <manager_read_utmp+0x318>
  413e08:	mov	w8, #0x5                   	// #5
  413e0c:	stur	w8, [x29, #-92]
  413e10:	b	413fc4 <manager_read_utmp+0x4c8>
  413e14:	ldur	x8, [x29, #-72]
  413e18:	ldr	w9, [x8, #80]
  413e1c:	cmp	w9, #0x1
  413e20:	b.ne	413ee0 <manager_read_utmp+0x3e4>  // b.any
  413e24:	ldur	x8, [x29, #-72]
  413e28:	ldr	x0, [x8, #72]
  413e2c:	ldur	x1, [x29, #-48]
  413e30:	bl	414010 <streq_ptr>
  413e34:	tbnz	w0, #0, 413ee0 <manager_read_utmp+0x3e4>
  413e38:	ldur	x8, [x29, #-72]
  413e3c:	ldr	x0, [x8, #72]
  413e40:	bl	414048 <mfree>
  413e44:	ldur	x8, [x29, #-72]
  413e48:	str	x0, [x8, #72]
  413e4c:	ldur	x8, [x29, #-72]
  413e50:	mov	w9, #0x2                   	// #2
  413e54:	str	w9, [x8, #80]
  413e58:	mov	w9, #0x7                   	// #7
  413e5c:	stur	w9, [x29, #-96]
  413e60:	stur	wzr, [x29, #-100]
  413e64:	str	wzr, [sp, #104]
  413e68:	ldr	w0, [sp, #104]
  413e6c:	bl	406c08 <log_get_max_level_realm@plt>
  413e70:	ldur	w9, [x29, #-96]
  413e74:	and	w9, w9, #0x7
  413e78:	cmp	w0, w9
  413e7c:	b.lt	413eb8 <manager_read_utmp+0x3bc>  // b.tstop
  413e80:	ldr	w8, [sp, #104]
  413e84:	ldur	w9, [x29, #-96]
  413e88:	orr	w0, w9, w8, lsl #10
  413e8c:	ldur	w1, [x29, #-100]
  413e90:	ldur	x10, [x29, #-72]
  413e94:	ldr	x6, [x10, #8]
  413e98:	ldr	x2, [sp, #56]
  413e9c:	mov	w3, #0x2e5                 	// #741
  413ea0:	ldr	x4, [sp, #48]
  413ea4:	adrp	x5, 442000 <_fini+0x1c30>
  413ea8:	add	x5, x5, #0xb38
  413eac:	bl	406c18 <log_internal_realm@plt>
  413eb0:	str	w0, [sp, #20]
  413eb4:	b	413ecc <manager_read_utmp+0x3d0>
  413eb8:	ldur	w0, [x29, #-100]
  413ebc:	bl	406c28 <abs@plt>
  413ec0:	mov	w8, wzr
  413ec4:	subs	w8, w8, w0, uxtb
  413ec8:	str	w8, [sp, #20]
  413ecc:	ldr	w8, [sp, #20]
  413ed0:	str	w8, [sp, #100]
  413ed4:	mov	w8, #0x5                   	// #5
  413ed8:	stur	w8, [x29, #-92]
  413edc:	b	413fc4 <manager_read_utmp+0x4c8>
  413ee0:	ldur	x8, [x29, #-72]
  413ee4:	ldr	x8, [x8, #72]
  413ee8:	cbnz	x8, 413f00 <manager_read_utmp+0x404>
  413eec:	ldur	x8, [x29, #-72]
  413ef0:	ldr	w9, [x8, #80]
  413ef4:	cmp	w9, #0x0
  413ef8:	cset	w9, lt  // lt = tstop
  413efc:	tbnz	w9, #0, 413f0c <manager_read_utmp+0x410>
  413f00:	mov	w8, #0x5                   	// #5
  413f04:	stur	w8, [x29, #-92]
  413f08:	b	413fc4 <manager_read_utmp+0x4c8>
  413f0c:	ldur	x8, [x29, #-48]
  413f10:	str	x8, [sp, #88]
  413f14:	mov	x8, xzr
  413f18:	stur	x8, [x29, #-48]
  413f1c:	ldr	x8, [sp, #88]
  413f20:	str	x8, [sp, #80]
  413f24:	ldr	x8, [sp, #80]
  413f28:	ldur	x9, [x29, #-72]
  413f2c:	str	x8, [x9, #72]
  413f30:	ldur	x8, [x29, #-72]
  413f34:	mov	w10, #0x1                   	// #1
  413f38:	str	w10, [x8, #80]
  413f3c:	mov	w10, #0x7                   	// #7
  413f40:	str	w10, [sp, #76]
  413f44:	str	wzr, [sp, #72]
  413f48:	str	wzr, [sp, #68]
  413f4c:	ldr	w0, [sp, #68]
  413f50:	bl	406c08 <log_get_max_level_realm@plt>
  413f54:	ldr	w10, [sp, #76]
  413f58:	and	w10, w10, #0x7
  413f5c:	cmp	w0, w10
  413f60:	b.lt	413fa4 <manager_read_utmp+0x4a8>  // b.tstop
  413f64:	ldr	w8, [sp, #68]
  413f68:	ldr	w9, [sp, #76]
  413f6c:	orr	w0, w9, w8, lsl #10
  413f70:	ldr	w1, [sp, #72]
  413f74:	ldur	x10, [x29, #-72]
  413f78:	ldr	x6, [x10, #72]
  413f7c:	ldur	x10, [x29, #-72]
  413f80:	ldr	x7, [x10, #8]
  413f84:	ldr	x2, [sp, #56]
  413f88:	mov	w3, #0x2ef                 	// #751
  413f8c:	ldr	x4, [sp, #48]
  413f90:	adrp	x5, 442000 <_fini+0x1c30>
  413f94:	add	x5, x5, #0xb81
  413f98:	bl	406c18 <log_internal_realm@plt>
  413f9c:	str	w0, [sp, #16]
  413fa0:	b	413fb8 <manager_read_utmp+0x4bc>
  413fa4:	ldr	w0, [sp, #72]
  413fa8:	bl	406c28 <abs@plt>
  413fac:	mov	w8, wzr
  413fb0:	subs	w8, w8, w0, uxtb
  413fb4:	str	w8, [sp, #16]
  413fb8:	ldr	w8, [sp, #16]
  413fbc:	str	w8, [sp, #64]
  413fc0:	stur	wzr, [x29, #-92]
  413fc4:	sub	x0, x29, #0x30
  413fc8:	bl	4125b0 <freep>
  413fcc:	ldur	w8, [x29, #-92]
  413fd0:	str	w8, [sp, #12]
  413fd4:	cbz	w8, 413ff0 <manager_read_utmp+0x4f4>
  413fd8:	b	413fdc <manager_read_utmp+0x4e0>
  413fdc:	ldr	w8, [sp, #12]
  413fe0:	cmp	w8, #0x4
  413fe4:	b.eq	413ff4 <manager_read_utmp+0x4f8>  // b.none
  413fe8:	b	413fec <manager_read_utmp+0x4f0>
  413fec:	b	413c1c <manager_read_utmp+0x120>
  413ff0:	b	413c1c <manager_read_utmp+0x120>
  413ff4:	bl	407438 <endutxent@plt>
  413ff8:	ldur	w8, [x29, #-20]
  413ffc:	stur	w8, [x29, #-4]
  414000:	ldur	w0, [x29, #-4]
  414004:	ldp	x29, x30, [sp, #208]
  414008:	add	sp, sp, #0xe0
  41400c:	ret

0000000000414010 <streq_ptr>:
  414010:	sub	sp, sp, #0x20
  414014:	stp	x29, x30, [sp, #16]
  414018:	add	x29, sp, #0x10
  41401c:	str	x0, [sp, #8]
  414020:	str	x1, [sp]
  414024:	ldr	x0, [sp, #8]
  414028:	ldr	x1, [sp]
  41402c:	bl	407448 <strcmp_ptr@plt>
  414030:	cmp	w0, #0x0
  414034:	cset	w8, eq  // eq = none
  414038:	and	w0, w8, #0x1
  41403c:	ldp	x29, x30, [sp, #16]
  414040:	add	sp, sp, #0x20
  414044:	ret

0000000000414048 <mfree>:
  414048:	sub	sp, sp, #0x20
  41404c:	stp	x29, x30, [sp, #16]
  414050:	add	x29, sp, #0x10
  414054:	mov	x8, xzr
  414058:	str	x0, [sp, #8]
  41405c:	ldr	x0, [sp, #8]
  414060:	str	x8, [sp]
  414064:	bl	406da8 <free@plt>
  414068:	ldr	x0, [sp]
  41406c:	ldp	x29, x30, [sp, #16]
  414070:	add	sp, sp, #0x20
  414074:	ret

0000000000414078 <manager_connect_utmp>:
  414078:	sub	sp, sp, #0x60
  41407c:	stp	x29, x30, [sp, #80]
  414080:	add	x29, sp, #0x50
  414084:	mov	x8, xzr
  414088:	adrp	x9, 442000 <_fini+0x1c30>
  41408c:	add	x9, x9, #0x3dc
  414090:	add	x9, x9, #0x3
  414094:	stur	x0, [x29, #-8]
  414098:	stur	x8, [x29, #-16]
  41409c:	str	x9, [sp, #16]
  4140a0:	ldur	x8, [x29, #-8]
  4140a4:	cmp	x8, #0x0
  4140a8:	cset	w9, ne  // ne = any
  4140ac:	mov	w10, #0x1                   	// #1
  4140b0:	eor	w9, w9, #0x1
  4140b4:	eor	w9, w9, w10
  4140b8:	eor	w9, w9, w10
  4140bc:	and	w9, w9, #0x1
  4140c0:	mov	w0, w9
  4140c4:	sxtw	x8, w0
  4140c8:	cbz	x8, 4140f0 <manager_connect_utmp+0x78>
  4140cc:	mov	w8, wzr
  4140d0:	mov	w0, w8
  4140d4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4140d8:	add	x1, x1, #0x5ef
  4140dc:	ldr	x2, [sp, #16]
  4140e0:	mov	w3, #0x30e                 	// #782
  4140e4:	adrp	x4, 442000 <_fini+0x1c30>
  4140e8:	add	x4, x4, #0xbbb
  4140ec:	bl	406c68 <log_assert_failed_realm@plt>
  4140f0:	ldur	x8, [x29, #-8]
  4140f4:	ldr	x0, [x8]
  4140f8:	ldur	x5, [x29, #-8]
  4140fc:	sub	x1, x29, #0x10
  414100:	adrp	x2, 442000 <_fini+0x1c30>
  414104:	add	x2, x2, #0xaba
  414108:	mov	w3, #0xc06                 	// #3078
  41410c:	adrp	x4, 414000 <manager_read_utmp+0x504>
  414110:	add	x4, x4, #0x290
  414114:	bl	407458 <sd_event_add_inotify@plt>
  414118:	stur	w0, [x29, #-20]
  41411c:	ldur	w9, [x29, #-20]
  414120:	cmp	w9, #0x0
  414124:	cset	w9, ge  // ge = tcont
  414128:	tbnz	w9, #0, 4141c0 <manager_connect_utmp+0x148>
  41412c:	ldur	w8, [x29, #-20]
  414130:	mov	w9, #0xfffffffe            	// #-2
  414134:	mov	w10, #0x7                   	// #7
  414138:	mov	w11, #0x4                   	// #4
  41413c:	cmp	w8, w9
  414140:	csel	w8, w10, w11, eq  // eq = none
  414144:	stur	w8, [x29, #-24]
  414148:	ldur	w8, [x29, #-20]
  41414c:	stur	w8, [x29, #-28]
  414150:	stur	wzr, [x29, #-32]
  414154:	ldur	w0, [x29, #-32]
  414158:	bl	406c08 <log_get_max_level_realm@plt>
  41415c:	ldur	w8, [x29, #-24]
  414160:	and	w8, w8, #0x7
  414164:	cmp	w0, w8
  414168:	b.lt	4141a0 <manager_connect_utmp+0x128>  // b.tstop
  41416c:	ldur	w8, [x29, #-32]
  414170:	ldur	w9, [x29, #-24]
  414174:	orr	w0, w9, w8, lsl #10
  414178:	ldur	w1, [x29, #-28]
  41417c:	ldr	x2, [sp, #16]
  414180:	mov	w3, #0x31a                 	// #794
  414184:	adrp	x4, 442000 <_fini+0x1c30>
  414188:	add	x4, x4, #0xbe0
  41418c:	adrp	x5, 442000 <_fini+0x1c30>
  414190:	add	x5, x5, #0xbf5
  414194:	bl	406c18 <log_internal_realm@plt>
  414198:	str	w0, [sp, #12]
  41419c:	b	4141b4 <manager_connect_utmp+0x13c>
  4141a0:	ldur	w0, [x29, #-28]
  4141a4:	bl	406c28 <abs@plt>
  4141a8:	mov	w8, wzr
  4141ac:	subs	w8, w8, w0, uxtb
  4141b0:	str	w8, [sp, #12]
  4141b4:	ldr	w8, [sp, #12]
  4141b8:	stur	w8, [x29, #-36]
  4141bc:	b	41426c <manager_connect_utmp+0x1f4>
  4141c0:	ldur	x0, [x29, #-16]
  4141c4:	mov	x1, #0x64                  	// #100
  4141c8:	bl	407038 <sd_event_source_set_priority@plt>
  4141cc:	stur	w0, [x29, #-20]
  4141d0:	ldur	w8, [x29, #-20]
  4141d4:	cmp	w8, #0x0
  4141d8:	cset	w8, ge  // ge = tcont
  4141dc:	tbnz	w8, #0, 41425c <manager_connect_utmp+0x1e4>
  4141e0:	mov	w8, #0x4                   	// #4
  4141e4:	str	w8, [sp, #40]
  4141e8:	ldur	w8, [x29, #-20]
  4141ec:	str	w8, [sp, #36]
  4141f0:	str	wzr, [sp, #32]
  4141f4:	ldr	w0, [sp, #32]
  4141f8:	bl	406c08 <log_get_max_level_realm@plt>
  4141fc:	ldr	w8, [sp, #40]
  414200:	and	w8, w8, #0x7
  414204:	cmp	w0, w8
  414208:	b.lt	414240 <manager_connect_utmp+0x1c8>  // b.tstop
  41420c:	ldr	w8, [sp, #32]
  414210:	ldr	w9, [sp, #40]
  414214:	orr	w0, w9, w8, lsl #10
  414218:	ldr	w1, [sp, #36]
  41421c:	ldr	x2, [sp, #16]
  414220:	mov	w3, #0x31e                 	// #798
  414224:	adrp	x4, 442000 <_fini+0x1c30>
  414228:	add	x4, x4, #0xbe0
  41422c:	adrp	x5, 442000 <_fini+0x1c30>
  414230:	add	x5, x5, #0xc33
  414234:	bl	406c18 <log_internal_realm@plt>
  414238:	str	w0, [sp, #8]
  41423c:	b	414254 <manager_connect_utmp+0x1dc>
  414240:	ldr	w0, [sp, #36]
  414244:	bl	406c28 <abs@plt>
  414248:	mov	w8, wzr
  41424c:	subs	w8, w8, w0, uxtb
  414250:	str	w8, [sp, #8]
  414254:	ldr	w8, [sp, #8]
  414258:	str	w8, [sp, #28]
  41425c:	ldur	x0, [x29, #-16]
  414260:	adrp	x1, 442000 <_fini+0x1c30>
  414264:	add	x1, x1, #0xc6d
  414268:	bl	406ea8 <sd_event_source_set_description@plt>
  41426c:	ldur	x8, [x29, #-8]
  414270:	ldr	x0, [x8, #144]
  414274:	bl	406d28 <sd_event_source_unref@plt>
  414278:	ldur	x8, [x29, #-16]
  41427c:	ldur	x9, [x29, #-8]
  414280:	str	x8, [x9, #144]
  414284:	ldp	x29, x30, [sp, #80]
  414288:	add	sp, sp, #0x60
  41428c:	ret

0000000000414290 <manager_dispatch_utmp>:
  414290:	sub	sp, sp, #0x40
  414294:	stp	x29, x30, [sp, #48]
  414298:	add	x29, sp, #0x30
  41429c:	adrp	x8, 442000 <_fini+0x1c30>
  4142a0:	add	x8, x8, #0x3dc
  4142a4:	add	x8, x8, #0x3
  4142a8:	stur	x0, [x29, #-8]
  4142ac:	stur	x1, [x29, #-16]
  4142b0:	str	x2, [sp, #24]
  4142b4:	ldr	x9, [sp, #24]
  4142b8:	str	x9, [sp, #16]
  4142bc:	str	x8, [sp, #8]
  4142c0:	ldr	x8, [sp, #16]
  4142c4:	cmp	x8, #0x0
  4142c8:	cset	w9, ne  // ne = any
  4142cc:	mov	w10, #0x1                   	// #1
  4142d0:	eor	w9, w9, #0x1
  4142d4:	eor	w9, w9, w10
  4142d8:	eor	w9, w9, w10
  4142dc:	and	w9, w9, #0x1
  4142e0:	mov	w0, w9
  4142e4:	sxtw	x8, w0
  4142e8:	cbz	x8, 414310 <manager_dispatch_utmp+0x80>
  4142ec:	mov	w8, wzr
  4142f0:	mov	w0, w8
  4142f4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4142f8:	add	x1, x1, #0x5ef
  4142fc:	ldr	x2, [sp, #8]
  414300:	mov	w3, #0x2fd                 	// #765
  414304:	adrp	x4, 442000 <_fini+0x1c30>
  414308:	add	x4, x4, #0xd3b
  41430c:	bl	406c68 <log_assert_failed_realm@plt>
  414310:	ldur	x8, [x29, #-16]
  414314:	ldr	w9, [x8, #4]
  414318:	mov	w10, #0x6c04                	// #27652
  41431c:	and	w9, w9, w10
  414320:	cbz	w9, 41432c <manager_dispatch_utmp+0x9c>
  414324:	ldr	x0, [sp, #16]
  414328:	bl	414078 <manager_connect_utmp>
  41432c:	ldr	x0, [sp, #16]
  414330:	bl	413afc <manager_read_utmp>
  414334:	mov	w8, wzr
  414338:	mov	w0, w8
  41433c:	ldp	x29, x30, [sp, #48]
  414340:	add	sp, sp, #0x40
  414344:	ret

0000000000414348 <manager_reconnect_utmp>:
  414348:	sub	sp, sp, #0x20
  41434c:	stp	x29, x30, [sp, #16]
  414350:	add	x29, sp, #0x10
  414354:	adrp	x8, 442000 <_fini+0x1c30>
  414358:	add	x8, x8, #0x3dc
  41435c:	add	x2, x8, #0x3
  414360:	str	x0, [sp, #8]
  414364:	str	x2, [sp]
  414368:	ldr	x8, [sp, #8]
  41436c:	cmp	x8, #0x0
  414370:	cset	w9, ne  // ne = any
  414374:	mov	w10, #0x1                   	// #1
  414378:	eor	w9, w9, #0x1
  41437c:	eor	w9, w9, w10
  414380:	eor	w9, w9, w10
  414384:	and	w9, w9, #0x1
  414388:	mov	w0, w9
  41438c:	sxtw	x8, w0
  414390:	cbz	x8, 4143b8 <manager_reconnect_utmp+0x70>
  414394:	mov	w8, wzr
  414398:	mov	w0, w8
  41439c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4143a0:	add	x1, x1, #0x5ef
  4143a4:	ldr	x2, [sp]
  4143a8:	mov	w3, #0x32a                 	// #810
  4143ac:	adrp	x4, 442000 <_fini+0x1c30>
  4143b0:	add	x4, x4, #0xc72
  4143b4:	bl	406c68 <log_assert_failed_realm@plt>
  4143b8:	ldr	x8, [sp, #8]
  4143bc:	ldr	x8, [x8, #144]
  4143c0:	cbz	x8, 4143c8 <manager_reconnect_utmp+0x80>
  4143c4:	b	4143d0 <manager_reconnect_utmp+0x88>
  4143c8:	ldr	x0, [sp, #8]
  4143cc:	bl	414078 <manager_connect_utmp>
  4143d0:	ldp	x29, x30, [sp, #16]
  4143d4:	add	sp, sp, #0x20
  4143d8:	ret

00000000004143dc <closep>:
  4143dc:	sub	sp, sp, #0x20
  4143e0:	stp	x29, x30, [sp, #16]
  4143e4:	add	x29, sp, #0x10
  4143e8:	str	x0, [sp, #8]
  4143ec:	ldr	x8, [sp, #8]
  4143f0:	ldr	w0, [x8]
  4143f4:	bl	406d38 <safe_close@plt>
  4143f8:	ldp	x29, x30, [sp, #16]
  4143fc:	add	sp, sp, #0x20
  414400:	ret

0000000000414404 <sd_device_enumerator_unrefp>:
  414404:	sub	sp, sp, #0x20
  414408:	stp	x29, x30, [sp, #16]
  41440c:	add	x29, sp, #0x10
  414410:	str	x0, [sp, #8]
  414414:	ldr	x8, [sp, #8]
  414418:	ldr	x8, [x8]
  41441c:	cbz	x8, 41442c <sd_device_enumerator_unrefp+0x28>
  414420:	ldr	x8, [sp, #8]
  414424:	ldr	x0, [x8]
  414428:	bl	4070c8 <sd_device_enumerator_unref@plt>
  41442c:	ldp	x29, x30, [sp, #16]
  414430:	add	sp, sp, #0x20
  414434:	ret

0000000000414438 <startswith>:
  414438:	sub	sp, sp, #0x30
  41443c:	stp	x29, x30, [sp, #32]
  414440:	add	x29, sp, #0x20
  414444:	str	x0, [sp, #16]
  414448:	str	x1, [sp, #8]
  41444c:	ldr	x0, [sp, #8]
  414450:	bl	4070a8 <strlen@plt>
  414454:	str	x0, [sp]
  414458:	ldr	x0, [sp, #16]
  41445c:	ldr	x1, [sp, #8]
  414460:	ldr	x2, [sp]
  414464:	bl	4070b8 <strncmp@plt>
  414468:	cbnz	w0, 414480 <startswith+0x48>
  41446c:	ldr	x8, [sp, #16]
  414470:	ldr	x9, [sp]
  414474:	add	x8, x8, x9
  414478:	stur	x8, [x29, #-8]
  41447c:	b	414488 <startswith+0x50>
  414480:	mov	x8, xzr
  414484:	stur	x8, [x29, #-8]
  414488:	ldur	x0, [x29, #-8]
  41448c:	ldp	x29, x30, [sp, #32]
  414490:	add	sp, sp, #0x30
  414494:	ret

0000000000414498 <manager_get_session_from_creds>:
  414498:	sub	sp, sp, #0x50
  41449c:	stp	x29, x30, [sp, #64]
  4144a0:	add	x29, sp, #0x40
  4144a4:	adrp	x8, 442000 <_fini+0x1c30>
  4144a8:	add	x8, x8, #0xd8e
  4144ac:	add	x8, x8, #0x3
  4144b0:	stur	x0, [x29, #-16]
  4144b4:	stur	x1, [x29, #-24]
  4144b8:	str	x2, [sp, #32]
  4144bc:	str	x3, [sp, #24]
  4144c0:	str	x4, [sp, #16]
  4144c4:	str	x8, [sp]
  4144c8:	ldur	x8, [x29, #-16]
  4144cc:	cmp	x8, #0x0
  4144d0:	cset	w9, ne  // ne = any
  4144d4:	mov	w10, #0x1                   	// #1
  4144d8:	eor	w9, w9, #0x1
  4144dc:	eor	w9, w9, w10
  4144e0:	eor	w9, w9, w10
  4144e4:	and	w9, w9, #0x1
  4144e8:	mov	w0, w9
  4144ec:	sxtw	x8, w0
  4144f0:	cbz	x8, 414518 <manager_get_session_from_creds+0x80>
  4144f4:	mov	w8, wzr
  4144f8:	mov	w0, w8
  4144fc:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  414500:	add	x1, x1, #0x5ef
  414504:	ldr	x2, [sp]
  414508:	mov	w3, #0x74                  	// #116
  41450c:	adrp	x4, 442000 <_fini+0x1c30>
  414510:	add	x4, x4, #0xda9
  414514:	bl	406c68 <log_assert_failed_realm@plt>
  414518:	ldr	x8, [sp, #16]
  41451c:	cmp	x8, #0x0
  414520:	cset	w9, ne  // ne = any
  414524:	mov	w10, #0x1                   	// #1
  414528:	eor	w9, w9, #0x1
  41452c:	eor	w9, w9, w10
  414530:	eor	w9, w9, w10
  414534:	and	w9, w9, #0x1
  414538:	mov	w0, w9
  41453c:	sxtw	x8, w0
  414540:	cbz	x8, 414568 <manager_get_session_from_creds+0xd0>
  414544:	mov	w8, wzr
  414548:	mov	w0, w8
  41454c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  414550:	add	x1, x1, #0x5cf
  414554:	ldr	x2, [sp]
  414558:	mov	w3, #0x75                  	// #117
  41455c:	adrp	x4, 442000 <_fini+0x1c30>
  414560:	add	x4, x4, #0xda9
  414564:	bl	406c68 <log_assert_failed_realm@plt>
  414568:	ldr	x0, [sp, #32]
  41456c:	bl	414630 <SEAT_IS_SELF>
  414570:	tbnz	w0, #0, 414578 <manager_get_session_from_creds+0xe0>
  414574:	b	41459c <manager_get_session_from_creds+0x104>
  414578:	ldur	x0, [x29, #-16]
  41457c:	ldur	x1, [x29, #-24]
  414580:	ldr	x3, [sp, #24]
  414584:	ldr	x4, [sp, #16]
  414588:	mov	w8, wzr
  41458c:	and	w2, w8, #0x1
  414590:	bl	414684 <get_sender_session>
  414594:	stur	w0, [x29, #-4]
  414598:	b	414620 <manager_get_session_from_creds+0x188>
  41459c:	ldr	x0, [sp, #32]
  4145a0:	bl	414870 <SEAT_IS_AUTO>
  4145a4:	tbnz	w0, #0, 4145ac <manager_get_session_from_creds+0x114>
  4145a8:	b	4145d0 <manager_get_session_from_creds+0x138>
  4145ac:	ldur	x0, [x29, #-16]
  4145b0:	ldur	x1, [x29, #-24]
  4145b4:	ldr	x3, [sp, #24]
  4145b8:	ldr	x4, [sp, #16]
  4145bc:	mov	w8, #0x1                   	// #1
  4145c0:	and	w2, w8, #0x1
  4145c4:	bl	414684 <get_sender_session>
  4145c8:	stur	w0, [x29, #-4]
  4145cc:	b	414620 <manager_get_session_from_creds+0x188>
  4145d0:	ldur	x8, [x29, #-16]
  4145d4:	ldr	x0, [x8, #32]
  4145d8:	ldr	x1, [sp, #32]
  4145dc:	bl	4148a0 <hashmap_get>
  4145e0:	str	x0, [sp, #8]
  4145e4:	ldr	x8, [sp, #8]
  4145e8:	cbnz	x8, 414610 <manager_get_session_from_creds+0x178>
  4145ec:	ldr	x0, [sp, #24]
  4145f0:	ldr	x3, [sp, #32]
  4145f4:	adrp	x1, 442000 <_fini+0x1c30>
  4145f8:	add	x1, x1, #0xe13
  4145fc:	adrp	x2, 442000 <_fini+0x1c30>
  414600:	add	x2, x2, #0xe38
  414604:	bl	407468 <sd_bus_error_setf@plt>
  414608:	stur	w0, [x29, #-4]
  41460c:	b	414620 <manager_get_session_from_creds+0x188>
  414610:	ldr	x8, [sp, #8]
  414614:	ldr	x9, [sp, #16]
  414618:	str	x8, [x9]
  41461c:	stur	wzr, [x29, #-4]
  414620:	ldur	w0, [x29, #-4]
  414624:	ldp	x29, x30, [sp, #64]
  414628:	add	sp, sp, #0x50
  41462c:	ret

0000000000414630 <SEAT_IS_SELF>:
  414630:	sub	sp, sp, #0x20
  414634:	stp	x29, x30, [sp, #16]
  414638:	add	x29, sp, #0x10
  41463c:	str	x0, [sp, #8]
  414640:	ldr	x0, [sp, #8]
  414644:	bl	42099c <isempty>
  414648:	mov	w8, #0x1                   	// #1
  41464c:	str	w8, [sp, #4]
  414650:	tbnz	w0, #0, 414670 <SEAT_IS_SELF+0x40>
  414654:	ldr	x0, [sp, #8]
  414658:	adrp	x1, 443000 <_fini+0x2c30>
  41465c:	add	x1, x1, #0xefa
  414660:	bl	407158 <strcmp@plt>
  414664:	cmp	w0, #0x0
  414668:	cset	w8, eq  // eq = none
  41466c:	str	w8, [sp, #4]
  414670:	ldr	w8, [sp, #4]
  414674:	and	w0, w8, #0x1
  414678:	ldp	x29, x30, [sp, #16]
  41467c:	add	sp, sp, #0x20
  414680:	ret

0000000000414684 <get_sender_session>:
  414684:	sub	sp, sp, #0x70
  414688:	stp	x29, x30, [sp, #96]
  41468c:	add	x29, sp, #0x60
  414690:	mov	x8, xzr
  414694:	mov	w9, #0x400000              	// #4194304
  414698:	mov	w10, wzr
  41469c:	mov	x11, #0x200000              	// #2097152
  4146a0:	movk	x11, #0x8000, lsl #48
  4146a4:	mov	w12, #0x1                   	// #1
  4146a8:	add	x13, sp, #0x28
  4146ac:	stur	x0, [x29, #-16]
  4146b0:	stur	x1, [x29, #-24]
  4146b4:	and	w12, w2, w12
  4146b8:	sturb	w12, [x29, #-25]
  4146bc:	stur	x3, [x29, #-40]
  4146c0:	str	x4, [sp, #48]
  4146c4:	str	x8, [sp, #40]
  4146c8:	str	x8, [sp, #32]
  4146cc:	ldur	x0, [x29, #-24]
  4146d0:	ldurb	w12, [x29, #-25]
  4146d4:	tst	w12, #0x1
  4146d8:	csel	w9, w9, w10, ne  // ne = any
  4146dc:	mov	w1, w9
  4146e0:	sxtw	x8, w1
  4146e4:	orr	x1, x11, x8
  4146e8:	mov	x2, x13
  4146ec:	bl	407478 <sd_bus_query_sender_creds@plt>
  4146f0:	str	w0, [sp, #20]
  4146f4:	ldr	w9, [sp, #20]
  4146f8:	cmp	w9, #0x0
  4146fc:	cset	w9, ge  // ge = tcont
  414700:	tbnz	w9, #0, 414718 <get_sender_session+0x94>
  414704:	ldr	w8, [sp, #20]
  414708:	stur	w8, [x29, #-4]
  41470c:	mov	w8, #0x1                   	// #1
  414710:	str	w8, [sp, #16]
  414714:	b	414858 <get_sender_session+0x1d4>
  414718:	ldr	x0, [sp, #40]
  41471c:	add	x1, sp, #0x18
  414720:	bl	407488 <sd_bus_creds_get_session@plt>
  414724:	str	w0, [sp, #20]
  414728:	ldr	w8, [sp, #20]
  41472c:	cmp	w8, #0x0
  414730:	cset	w8, ge  // ge = tcont
  414734:	tbnz	w8, #0, 4147e8 <get_sender_session+0x164>
  414738:	ldr	w8, [sp, #20]
  41473c:	mov	w9, #0xfffffffa            	// #-6
  414740:	cmp	w8, w9
  414744:	b.eq	41475c <get_sender_session+0xd8>  // b.none
  414748:	ldr	w8, [sp, #20]
  41474c:	stur	w8, [x29, #-4]
  414750:	mov	w8, #0x1                   	// #1
  414754:	str	w8, [sp, #16]
  414758:	b	414858 <get_sender_session+0x1d4>
  41475c:	ldurb	w8, [x29, #-25]
  414760:	tbnz	w8, #0, 414768 <get_sender_session+0xe4>
  414764:	b	4147e4 <get_sender_session+0x160>
  414768:	ldr	x0, [sp, #40]
  41476c:	add	x1, sp, #0xc
  414770:	bl	407498 <sd_bus_creds_get_owner_uid@plt>
  414774:	str	w0, [sp, #20]
  414778:	ldr	w8, [sp, #20]
  41477c:	cmp	w8, #0x0
  414780:	cset	w8, ge  // ge = tcont
  414784:	tbnz	w8, #0, 4147b0 <get_sender_session+0x12c>
  414788:	ldr	w8, [sp, #20]
  41478c:	mov	w9, #0xfffffffa            	// #-6
  414790:	cmp	w8, w9
  414794:	b.eq	4147ac <get_sender_session+0x128>  // b.none
  414798:	ldr	w8, [sp, #20]
  41479c:	stur	w8, [x29, #-4]
  4147a0:	mov	w8, #0x1                   	// #1
  4147a4:	str	w8, [sp, #16]
  4147a8:	b	414858 <get_sender_session+0x1d4>
  4147ac:	b	4147e4 <get_sender_session+0x160>
  4147b0:	ldur	x8, [x29, #-16]
  4147b4:	ldr	x0, [x8, #48]
  4147b8:	ldr	w9, [sp, #12]
  4147bc:	mov	w8, w9
  4147c0:	add	x8, x8, #0x1
  4147c4:	mov	x1, x8
  4147c8:	bl	4148a0 <hashmap_get>
  4147cc:	str	x0, [sp]
  4147d0:	ldr	x8, [sp]
  4147d4:	cbz	x8, 4147e4 <get_sender_session+0x160>
  4147d8:	ldr	x8, [sp]
  4147dc:	ldr	x8, [x8, #80]
  4147e0:	str	x8, [sp, #32]
  4147e4:	b	4147fc <get_sender_session+0x178>
  4147e8:	ldur	x8, [x29, #-16]
  4147ec:	ldr	x0, [x8, #32]
  4147f0:	ldr	x1, [sp, #24]
  4147f4:	bl	4148a0 <hashmap_get>
  4147f8:	str	x0, [sp, #32]
  4147fc:	ldr	x8, [sp, #32]
  414800:	cbnz	x8, 414840 <get_sender_session+0x1bc>
  414804:	ldur	x0, [x29, #-40]
  414808:	ldurb	w8, [x29, #-25]
  41480c:	adrp	x9, 443000 <_fini+0x2c30>
  414810:	add	x9, x9, #0xf78
  414814:	adrp	x10, 443000 <_fini+0x2c30>
  414818:	add	x10, x10, #0xf26
  41481c:	tst	w8, #0x1
  414820:	csel	x2, x10, x9, ne  // ne = any
  414824:	adrp	x1, 443000 <_fini+0x2c30>
  414828:	add	x1, x1, #0xeff
  41482c:	bl	407468 <sd_bus_error_setf@plt>
  414830:	stur	w0, [x29, #-4]
  414834:	mov	w8, #0x1                   	// #1
  414838:	str	w8, [sp, #16]
  41483c:	b	414858 <get_sender_session+0x1d4>
  414840:	ldr	x8, [sp, #32]
  414844:	ldr	x9, [sp, #48]
  414848:	str	x8, [x9]
  41484c:	stur	wzr, [x29, #-4]
  414850:	mov	w10, #0x1                   	// #1
  414854:	str	w10, [sp, #16]
  414858:	add	x0, sp, #0x28
  41485c:	bl	421604 <sd_bus_creds_unrefp>
  414860:	ldur	w0, [x29, #-4]
  414864:	ldp	x29, x30, [sp, #96]
  414868:	add	sp, sp, #0x70
  41486c:	ret

0000000000414870 <SEAT_IS_AUTO>:
  414870:	sub	sp, sp, #0x20
  414874:	stp	x29, x30, [sp, #16]
  414878:	add	x29, sp, #0x10
  41487c:	adrp	x1, 443000 <_fini+0x2c30>
  414880:	add	x1, x1, #0xfa5
  414884:	str	x0, [sp, #8]
  414888:	ldr	x0, [sp, #8]
  41488c:	bl	41f624 <streq_ptr>
  414890:	and	w0, w0, #0x1
  414894:	ldp	x29, x30, [sp, #16]
  414898:	add	sp, sp, #0x20
  41489c:	ret

00000000004148a0 <hashmap_get>:
  4148a0:	sub	sp, sp, #0x20
  4148a4:	stp	x29, x30, [sp, #16]
  4148a8:	add	x29, sp, #0x10
  4148ac:	str	x0, [sp, #8]
  4148b0:	str	x1, [sp]
  4148b4:	ldr	x0, [sp, #8]
  4148b8:	ldr	x1, [sp]
  4148bc:	bl	4070e8 <internal_hashmap_get@plt>
  4148c0:	ldp	x29, x30, [sp, #16]
  4148c4:	add	sp, sp, #0x20
  4148c8:	ret

00000000004148cc <manager_get_user_from_creds>:
  4148cc:	sub	sp, sp, #0x50
  4148d0:	stp	x29, x30, [sp, #64]
  4148d4:	add	x29, sp, #0x40
  4148d8:	adrp	x8, 442000 <_fini+0x1c30>
  4148dc:	add	x8, x8, #0xd8e
  4148e0:	add	x8, x8, #0x3
  4148e4:	stur	x0, [x29, #-16]
  4148e8:	stur	x1, [x29, #-24]
  4148ec:	stur	w2, [x29, #-28]
  4148f0:	str	x3, [sp, #24]
  4148f4:	str	x4, [sp, #16]
  4148f8:	str	x8, [sp]
  4148fc:	ldur	x8, [x29, #-16]
  414900:	cmp	x8, #0x0
  414904:	cset	w9, ne  // ne = any
  414908:	mov	w10, #0x1                   	// #1
  41490c:	eor	w9, w9, #0x1
  414910:	eor	w9, w9, w10
  414914:	eor	w9, w9, w10
  414918:	and	w9, w9, #0x1
  41491c:	mov	w0, w9
  414920:	sxtw	x8, w0
  414924:	cbz	x8, 41494c <manager_get_user_from_creds+0x80>
  414928:	mov	w8, wzr
  41492c:	mov	w0, w8
  414930:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  414934:	add	x1, x1, #0x5ef
  414938:	ldr	x2, [sp]
  41493c:	mov	w3, #0xa3                  	// #163
  414940:	adrp	x4, 442000 <_fini+0x1c30>
  414944:	add	x4, x4, #0xe4e
  414948:	bl	406c68 <log_assert_failed_realm@plt>
  41494c:	ldr	x8, [sp, #16]
  414950:	cmp	x8, #0x0
  414954:	cset	w9, ne  // ne = any
  414958:	mov	w10, #0x1                   	// #1
  41495c:	eor	w9, w9, #0x1
  414960:	eor	w9, w9, w10
  414964:	eor	w9, w9, w10
  414968:	and	w9, w9, #0x1
  41496c:	mov	w0, w9
  414970:	sxtw	x8, w0
  414974:	cbz	x8, 41499c <manager_get_user_from_creds+0xd0>
  414978:	mov	w8, wzr
  41497c:	mov	w0, w8
  414980:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  414984:	add	x1, x1, #0x5cf
  414988:	ldr	x2, [sp]
  41498c:	mov	w3, #0xa4                  	// #164
  414990:	adrp	x4, 442000 <_fini+0x1c30>
  414994:	add	x4, x4, #0xe4e
  414998:	bl	406c68 <log_assert_failed_realm@plt>
  41499c:	ldur	w0, [x29, #-28]
  4149a0:	bl	4074a8 <uid_is_valid@plt>
  4149a4:	tbnz	w0, #0, 4149c4 <manager_get_user_from_creds+0xf8>
  4149a8:	ldur	x0, [x29, #-16]
  4149ac:	ldur	x1, [x29, #-24]
  4149b0:	ldr	x2, [sp, #24]
  4149b4:	ldr	x3, [sp, #16]
  4149b8:	bl	414a30 <get_sender_user>
  4149bc:	stur	w0, [x29, #-4]
  4149c0:	b	414a20 <manager_get_user_from_creds+0x154>
  4149c4:	ldur	x8, [x29, #-16]
  4149c8:	ldr	x0, [x8, #48]
  4149cc:	ldur	w9, [x29, #-28]
  4149d0:	mov	w8, w9
  4149d4:	add	x8, x8, #0x1
  4149d8:	mov	x1, x8
  4149dc:	bl	4148a0 <hashmap_get>
  4149e0:	str	x0, [sp, #8]
  4149e4:	ldr	x8, [sp, #8]
  4149e8:	cbnz	x8, 414a10 <manager_get_user_from_creds+0x144>
  4149ec:	ldr	x0, [sp, #24]
  4149f0:	ldur	w3, [x29, #-28]
  4149f4:	adrp	x1, 442000 <_fini+0x1c30>
  4149f8:	add	x1, x1, #0xeab
  4149fc:	adrp	x2, 442000 <_fini+0x1c30>
  414a00:	add	x2, x2, #0xecd
  414a04:	bl	407468 <sd_bus_error_setf@plt>
  414a08:	stur	w0, [x29, #-4]
  414a0c:	b	414a20 <manager_get_user_from_creds+0x154>
  414a10:	ldr	x8, [sp, #8]
  414a14:	ldr	x9, [sp, #16]
  414a18:	str	x8, [x9]
  414a1c:	stur	wzr, [x29, #-4]
  414a20:	ldur	w0, [x29, #-4]
  414a24:	ldp	x29, x30, [sp, #64]
  414a28:	add	sp, sp, #0x50
  414a2c:	ret

0000000000414a30 <get_sender_user>:
  414a30:	sub	sp, sp, #0x60
  414a34:	stp	x29, x30, [sp, #80]
  414a38:	add	x29, sp, #0x50
  414a3c:	mov	x8, xzr
  414a40:	mov	x9, #0x400000              	// #4194304
  414a44:	movk	x9, #0x8000, lsl #48
  414a48:	add	x10, sp, #0x20
  414a4c:	stur	x0, [x29, #-16]
  414a50:	stur	x1, [x29, #-24]
  414a54:	stur	x2, [x29, #-32]
  414a58:	str	x3, [sp, #40]
  414a5c:	str	x8, [sp, #32]
  414a60:	ldur	x0, [x29, #-24]
  414a64:	mov	x1, x9
  414a68:	mov	x2, x10
  414a6c:	bl	407478 <sd_bus_query_sender_creds@plt>
  414a70:	str	w0, [sp, #12]
  414a74:	ldr	w11, [sp, #12]
  414a78:	cmp	w11, #0x0
  414a7c:	cset	w11, ge  // ge = tcont
  414a80:	tbnz	w11, #0, 414a98 <get_sender_user+0x68>
  414a84:	ldr	w8, [sp, #12]
  414a88:	stur	w8, [x29, #-4]
  414a8c:	mov	w8, #0x1                   	// #1
  414a90:	str	w8, [sp, #8]
  414a94:	b	414b50 <get_sender_user+0x120>
  414a98:	ldr	x0, [sp, #32]
  414a9c:	add	x1, sp, #0x1c
  414aa0:	bl	407498 <sd_bus_creds_get_owner_uid@plt>
  414aa4:	str	w0, [sp, #12]
  414aa8:	ldr	w8, [sp, #12]
  414aac:	cmp	w8, #0x0
  414ab0:	cset	w8, ge  // ge = tcont
  414ab4:	tbnz	w8, #0, 414ae8 <get_sender_user+0xb8>
  414ab8:	ldr	w8, [sp, #12]
  414abc:	mov	w9, #0xfffffffa            	// #-6
  414ac0:	cmp	w8, w9
  414ac4:	b.eq	414adc <get_sender_user+0xac>  // b.none
  414ac8:	ldr	w8, [sp, #12]
  414acc:	stur	w8, [x29, #-4]
  414ad0:	mov	w8, #0x1                   	// #1
  414ad4:	str	w8, [sp, #8]
  414ad8:	b	414b50 <get_sender_user+0x120>
  414adc:	mov	x8, xzr
  414ae0:	str	x8, [sp, #16]
  414ae4:	b	414b08 <get_sender_user+0xd8>
  414ae8:	ldur	x8, [x29, #-16]
  414aec:	ldr	x0, [x8, #48]
  414af0:	ldr	w9, [sp, #28]
  414af4:	mov	w8, w9
  414af8:	add	x8, x8, #0x1
  414afc:	mov	x1, x8
  414b00:	bl	4148a0 <hashmap_get>
  414b04:	str	x0, [sp, #16]
  414b08:	ldr	x8, [sp, #16]
  414b0c:	cbnz	x8, 414b38 <get_sender_user+0x108>
  414b10:	ldur	x0, [x29, #-32]
  414b14:	adrp	x1, 443000 <_fini+0x2c30>
  414b18:	add	x1, x1, #0xfaa
  414b1c:	adrp	x2, 443000 <_fini+0x2c30>
  414b20:	add	x2, x2, #0xfce
  414b24:	bl	407468 <sd_bus_error_setf@plt>
  414b28:	stur	w0, [x29, #-4]
  414b2c:	mov	w8, #0x1                   	// #1
  414b30:	str	w8, [sp, #8]
  414b34:	b	414b50 <get_sender_user+0x120>
  414b38:	ldr	x8, [sp, #16]
  414b3c:	ldr	x9, [sp, #40]
  414b40:	str	x8, [x9]
  414b44:	stur	wzr, [x29, #-4]
  414b48:	mov	w10, #0x1                   	// #1
  414b4c:	str	w10, [sp, #8]
  414b50:	add	x0, sp, #0x20
  414b54:	bl	421604 <sd_bus_creds_unrefp>
  414b58:	ldur	w0, [x29, #-4]
  414b5c:	ldp	x29, x30, [sp, #80]
  414b60:	add	sp, sp, #0x60
  414b64:	ret

0000000000414b68 <manager_get_seat_from_creds>:
  414b68:	sub	sp, sp, #0x60
  414b6c:	stp	x29, x30, [sp, #80]
  414b70:	add	x29, sp, #0x50
  414b74:	adrp	x8, 442000 <_fini+0x1c30>
  414b78:	add	x8, x8, #0xd8e
  414b7c:	add	x8, x8, #0x3
  414b80:	stur	x0, [x29, #-16]
  414b84:	stur	x1, [x29, #-24]
  414b88:	stur	x2, [x29, #-32]
  414b8c:	str	x3, [sp, #40]
  414b90:	str	x4, [sp, #32]
  414b94:	str	x8, [sp]
  414b98:	ldur	x8, [x29, #-16]
  414b9c:	cmp	x8, #0x0
  414ba0:	cset	w9, ne  // ne = any
  414ba4:	mov	w10, #0x1                   	// #1
  414ba8:	eor	w9, w9, #0x1
  414bac:	eor	w9, w9, w10
  414bb0:	eor	w9, w9, w10
  414bb4:	and	w9, w9, #0x1
  414bb8:	mov	w0, w9
  414bbc:	sxtw	x8, w0
  414bc0:	cbz	x8, 414be8 <manager_get_seat_from_creds+0x80>
  414bc4:	mov	w8, wzr
  414bc8:	mov	w0, w8
  414bcc:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  414bd0:	add	x1, x1, #0x5ef
  414bd4:	ldr	x2, [sp]
  414bd8:	mov	w3, #0xbc                  	// #188
  414bdc:	adrp	x4, 442000 <_fini+0x1c30>
  414be0:	add	x4, x4, #0xef6
  414be4:	bl	406c68 <log_assert_failed_realm@plt>
  414be8:	ldr	x8, [sp, #32]
  414bec:	cmp	x8, #0x0
  414bf0:	cset	w9, ne  // ne = any
  414bf4:	mov	w10, #0x1                   	// #1
  414bf8:	eor	w9, w9, #0x1
  414bfc:	eor	w9, w9, w10
  414c00:	eor	w9, w9, w10
  414c04:	and	w9, w9, #0x1
  414c08:	mov	w0, w9
  414c0c:	sxtw	x8, w0
  414c10:	cbz	x8, 414c38 <manager_get_seat_from_creds+0xd0>
  414c14:	mov	w8, wzr
  414c18:	mov	w0, w8
  414c1c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  414c20:	add	x1, x1, #0x5cf
  414c24:	ldr	x2, [sp]
  414c28:	mov	w3, #0xbd                  	// #189
  414c2c:	adrp	x4, 442000 <_fini+0x1c30>
  414c30:	add	x4, x4, #0xef6
  414c34:	bl	406c68 <log_assert_failed_realm@plt>
  414c38:	ldur	x0, [x29, #-32]
  414c3c:	bl	414630 <SEAT_IS_SELF>
  414c40:	tbnz	w0, #0, 414c54 <manager_get_seat_from_creds+0xec>
  414c44:	ldur	x0, [x29, #-32]
  414c48:	bl	414870 <SEAT_IS_AUTO>
  414c4c:	tbnz	w0, #0, 414c54 <manager_get_seat_from_creds+0xec>
  414c50:	b	414ccc <manager_get_seat_from_creds+0x164>
  414c54:	ldur	x0, [x29, #-16]
  414c58:	ldur	x1, [x29, #-24]
  414c5c:	ldur	x2, [x29, #-32]
  414c60:	ldr	x3, [sp, #40]
  414c64:	add	x4, sp, #0x8
  414c68:	bl	414498 <manager_get_session_from_creds>
  414c6c:	str	w0, [sp, #20]
  414c70:	ldr	w8, [sp, #20]
  414c74:	cmp	w8, #0x0
  414c78:	cset	w8, ge  // ge = tcont
  414c7c:	tbnz	w8, #0, 414c8c <manager_get_seat_from_creds+0x124>
  414c80:	ldr	w8, [sp, #20]
  414c84:	stur	w8, [x29, #-4]
  414c88:	b	414d1c <manager_get_seat_from_creds+0x1b4>
  414c8c:	ldr	x8, [sp, #8]
  414c90:	ldr	x8, [x8, #136]
  414c94:	str	x8, [sp, #24]
  414c98:	ldr	x8, [sp, #24]
  414c9c:	cbnz	x8, 414cc8 <manager_get_seat_from_creds+0x160>
  414ca0:	ldr	x0, [sp, #40]
  414ca4:	ldr	x8, [sp, #8]
  414ca8:	ldr	x3, [x8, #8]
  414cac:	adrp	x1, 442000 <_fini+0x1c30>
  414cb0:	add	x1, x1, #0xf5a
  414cb4:	adrp	x2, 442000 <_fini+0x1c30>
  414cb8:	add	x2, x2, #0xf7c
  414cbc:	bl	407468 <sd_bus_error_setf@plt>
  414cc0:	stur	w0, [x29, #-4]
  414cc4:	b	414d1c <manager_get_seat_from_creds+0x1b4>
  414cc8:	b	414d0c <manager_get_seat_from_creds+0x1a4>
  414ccc:	ldur	x8, [x29, #-16]
  414cd0:	ldr	x0, [x8, #24]
  414cd4:	ldur	x1, [x29, #-32]
  414cd8:	bl	4148a0 <hashmap_get>
  414cdc:	str	x0, [sp, #24]
  414ce0:	ldr	x8, [sp, #24]
  414ce4:	cbnz	x8, 414d0c <manager_get_seat_from_creds+0x1a4>
  414ce8:	ldr	x0, [sp, #40]
  414cec:	ldur	x3, [x29, #-32]
  414cf0:	adrp	x1, 442000 <_fini+0x1c30>
  414cf4:	add	x1, x1, #0xf5a
  414cf8:	adrp	x2, 442000 <_fini+0x1c30>
  414cfc:	add	x2, x2, #0xf96
  414d00:	bl	407468 <sd_bus_error_setf@plt>
  414d04:	stur	w0, [x29, #-4]
  414d08:	b	414d1c <manager_get_seat_from_creds+0x1b4>
  414d0c:	ldr	x8, [sp, #24]
  414d10:	ldr	x9, [sp, #32]
  414d14:	str	x8, [x9]
  414d18:	stur	wzr, [x29, #-4]
  414d1c:	ldur	w0, [x29, #-4]
  414d20:	ldp	x29, x30, [sp, #80]
  414d24:	add	sp, sp, #0x60
  414d28:	ret

0000000000414d2c <manager_set_lid_switch_ignore>:
  414d2c:	sub	sp, sp, #0x50
  414d30:	stp	x29, x30, [sp, #64]
  414d34:	add	x29, sp, #0x40
  414d38:	adrp	x8, 442000 <_fini+0x1c30>
  414d3c:	add	x8, x8, #0xd8e
  414d40:	add	x2, x8, #0x3
  414d44:	stur	x0, [x29, #-16]
  414d48:	stur	x1, [x29, #-24]
  414d4c:	str	x2, [sp, #16]
  414d50:	ldur	x8, [x29, #-16]
  414d54:	cmp	x8, #0x0
  414d58:	cset	w9, ne  // ne = any
  414d5c:	mov	w10, #0x1                   	// #1
  414d60:	eor	w9, w9, #0x1
  414d64:	eor	w9, w9, w10
  414d68:	eor	w9, w9, w10
  414d6c:	and	w9, w9, #0x1
  414d70:	mov	w0, w9
  414d74:	sxtw	x8, w0
  414d78:	cbz	x8, 414da0 <manager_set_lid_switch_ignore+0x74>
  414d7c:	mov	w8, wzr
  414d80:	mov	w0, w8
  414d84:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  414d88:	add	x1, x1, #0x5ef
  414d8c:	ldr	x2, [sp, #16]
  414d90:	mov	w3, #0x60b                 	// #1547
  414d94:	adrp	x4, 442000 <_fini+0x1c30>
  414d98:	add	x4, x4, #0xfa9
  414d9c:	bl	406c68 <log_assert_failed_realm@plt>
  414da0:	ldur	x8, [x29, #-24]
  414da4:	mov	w0, #0x1                   	// #1
  414da8:	str	x8, [sp, #8]
  414dac:	bl	406ca8 <now@plt>
  414db0:	ldr	x8, [sp, #8]
  414db4:	cmp	x8, x0
  414db8:	b.hi	414dc4 <manager_set_lid_switch_ignore+0x98>  // b.pmore
  414dbc:	stur	wzr, [x29, #-4]
  414dc0:	b	414e6c <manager_set_lid_switch_ignore+0x140>
  414dc4:	ldur	x8, [x29, #-16]
  414dc8:	ldr	x8, [x8, #448]
  414dcc:	cbz	x8, 414e30 <manager_set_lid_switch_ignore+0x104>
  414dd0:	ldur	x8, [x29, #-16]
  414dd4:	ldr	x0, [x8, #448]
  414dd8:	add	x1, sp, #0x18
  414ddc:	bl	4074b8 <sd_event_source_get_time@plt>
  414de0:	stur	w0, [x29, #-28]
  414de4:	ldur	w9, [x29, #-28]
  414de8:	cmp	w9, #0x0
  414dec:	cset	w9, ge  // ge = tcont
  414df0:	tbnz	w9, #0, 414e00 <manager_set_lid_switch_ignore+0xd4>
  414df4:	ldur	w8, [x29, #-28]
  414df8:	stur	w8, [x29, #-4]
  414dfc:	b	414e6c <manager_set_lid_switch_ignore+0x140>
  414e00:	ldur	x8, [x29, #-24]
  414e04:	ldr	x9, [sp, #24]
  414e08:	cmp	x8, x9
  414e0c:	b.hi	414e18 <manager_set_lid_switch_ignore+0xec>  // b.pmore
  414e10:	stur	wzr, [x29, #-4]
  414e14:	b	414e6c <manager_set_lid_switch_ignore+0x140>
  414e18:	ldur	x8, [x29, #-16]
  414e1c:	ldr	x0, [x8, #448]
  414e20:	ldur	x1, [x29, #-24]
  414e24:	bl	407048 <sd_event_source_set_time@plt>
  414e28:	stur	w0, [x29, #-28]
  414e2c:	b	414e64 <manager_set_lid_switch_ignore+0x138>
  414e30:	ldur	x8, [x29, #-16]
  414e34:	ldr	x0, [x8]
  414e38:	ldur	x8, [x29, #-16]
  414e3c:	add	x1, x8, #0x1c0
  414e40:	ldur	x3, [x29, #-24]
  414e44:	ldur	x6, [x29, #-16]
  414e48:	mov	w2, #0x1                   	// #1
  414e4c:	mov	x8, xzr
  414e50:	mov	x4, x8
  414e54:	adrp	x5, 414000 <manager_read_utmp+0x504>
  414e58:	add	x5, x5, #0xe7c
  414e5c:	bl	407028 <sd_event_add_time@plt>
  414e60:	stur	w0, [x29, #-28]
  414e64:	ldur	w8, [x29, #-28]
  414e68:	stur	w8, [x29, #-4]
  414e6c:	ldur	w0, [x29, #-4]
  414e70:	ldp	x29, x30, [sp, #64]
  414e74:	add	sp, sp, #0x50
  414e78:	ret

0000000000414e7c <lid_switch_ignore_handler>:
  414e7c:	sub	sp, sp, #0x40
  414e80:	stp	x29, x30, [sp, #48]
  414e84:	add	x29, sp, #0x30
  414e88:	adrp	x8, 442000 <_fini+0x1c30>
  414e8c:	add	x8, x8, #0xd8e
  414e90:	add	x8, x8, #0x3
  414e94:	stur	x0, [x29, #-8]
  414e98:	stur	x1, [x29, #-16]
  414e9c:	str	x2, [sp, #24]
  414ea0:	ldr	x9, [sp, #24]
  414ea4:	str	x9, [sp, #16]
  414ea8:	str	x8, [sp, #8]
  414eac:	ldur	x8, [x29, #-8]
  414eb0:	cmp	x8, #0x0
  414eb4:	cset	w9, ne  // ne = any
  414eb8:	mov	w10, #0x1                   	// #1
  414ebc:	eor	w9, w9, #0x1
  414ec0:	eor	w9, w9, w10
  414ec4:	eor	w9, w9, w10
  414ec8:	and	w9, w9, #0x1
  414ecc:	mov	w0, w9
  414ed0:	sxtw	x8, w0
  414ed4:	cbz	x8, 414efc <lid_switch_ignore_handler+0x80>
  414ed8:	mov	w8, wzr
  414edc:	mov	w0, w8
  414ee0:	adrp	x1, 444000 <_fini+0x3c30>
  414ee4:	add	x1, x1, #0x8
  414ee8:	ldr	x2, [sp, #8]
  414eec:	mov	w3, #0x601                 	// #1537
  414ef0:	adrp	x4, 444000 <_fini+0x3c30>
  414ef4:	add	x4, x4, #0xa
  414ef8:	bl	406c68 <log_assert_failed_realm@plt>
  414efc:	ldr	x8, [sp, #16]
  414f00:	cmp	x8, #0x0
  414f04:	cset	w9, ne  // ne = any
  414f08:	mov	w10, #0x1                   	// #1
  414f0c:	eor	w9, w9, #0x1
  414f10:	eor	w9, w9, w10
  414f14:	eor	w9, w9, w10
  414f18:	and	w9, w9, #0x1
  414f1c:	mov	w0, w9
  414f20:	sxtw	x8, w0
  414f24:	cbz	x8, 414f4c <lid_switch_ignore_handler+0xd0>
  414f28:	mov	w8, wzr
  414f2c:	mov	w0, w8
  414f30:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  414f34:	add	x1, x1, #0x5ef
  414f38:	ldr	x2, [sp, #8]
  414f3c:	mov	w3, #0x602                 	// #1538
  414f40:	adrp	x4, 444000 <_fini+0x3c30>
  414f44:	add	x4, x4, #0xa
  414f48:	bl	406c68 <log_assert_failed_realm@plt>
  414f4c:	ldr	x8, [sp, #16]
  414f50:	ldr	x0, [x8, #448]
  414f54:	bl	406d28 <sd_event_source_unref@plt>
  414f58:	ldr	x8, [sp, #16]
  414f5c:	str	x0, [x8, #448]
  414f60:	mov	w9, wzr
  414f64:	mov	w0, w9
  414f68:	ldp	x29, x30, [sp, #48]
  414f6c:	add	sp, sp, #0x40
  414f70:	ret

0000000000414f74 <manager_dispatch_delayed>:
  414f74:	sub	sp, sp, #0xe0
  414f78:	stp	x29, x30, [sp, #208]
  414f7c:	add	x29, sp, #0xd0
  414f80:	mov	x8, xzr
  414f84:	mov	w9, #0x1                   	// #1
  414f88:	adrp	x10, 442000 <_fini+0x1c30>
  414f8c:	add	x10, x10, #0xd8e
  414f90:	add	x10, x10, #0x3
  414f94:	stur	x0, [x29, #-16]
  414f98:	and	w9, w1, w9
  414f9c:	sturb	w9, [x29, #-17]
  414fa0:	stur	xzr, [x29, #-48]
  414fa4:	stur	xzr, [x29, #-40]
  414fa8:	stur	xzr, [x29, #-32]
  414fac:	stur	x8, [x29, #-56]
  414fb0:	str	x10, [sp, #88]
  414fb4:	ldur	x8, [x29, #-16]
  414fb8:	cmp	x8, #0x0
  414fbc:	cset	w9, ne  // ne = any
  414fc0:	mov	w10, #0x1                   	// #1
  414fc4:	eor	w9, w9, #0x1
  414fc8:	eor	w9, w9, w10
  414fcc:	eor	w9, w9, w10
  414fd0:	and	w9, w9, #0x1
  414fd4:	mov	w0, w9
  414fd8:	sxtw	x8, w0
  414fdc:	cbz	x8, 415004 <manager_dispatch_delayed+0x90>
  414fe0:	mov	w8, wzr
  414fe4:	mov	w0, w8
  414fe8:	adrp	x1, 442000 <_fini+0x1c30>
  414fec:	add	x1, x1, #0x331
  414ff0:	ldr	x2, [sp, #88]
  414ff4:	mov	w3, #0x674                 	// #1652
  414ff8:	adrp	x4, 442000 <_fini+0x1c30>
  414ffc:	add	x4, x4, #0xfde
  415000:	bl	406c68 <log_assert_failed_realm@plt>
  415004:	ldur	x8, [x29, #-16]
  415008:	ldr	w9, [x8, #248]
  41500c:	cbz	w9, 41501c <manager_dispatch_delayed+0xa8>
  415010:	ldur	x8, [x29, #-16]
  415014:	ldr	x8, [x8, #264]
  415018:	cbz	x8, 41502c <manager_dispatch_delayed+0xb8>
  41501c:	stur	wzr, [x29, #-4]
  415020:	mov	w8, #0x1                   	// #1
  415024:	stur	w8, [x29, #-64]
  415028:	b	4152cc <manager_dispatch_delayed+0x358>
  41502c:	ldur	x0, [x29, #-16]
  415030:	ldur	x8, [x29, #-16]
  415034:	ldr	w1, [x8, #248]
  415038:	mov	w2, #0x1                   	// #1
  41503c:	mov	x8, xzr
  415040:	mov	x3, x8
  415044:	mov	w9, wzr
  415048:	and	w4, w9, #0x1
  41504c:	and	w5, w9, #0x1
  415050:	mov	w9, wzr
  415054:	mov	w6, w9
  415058:	sub	x7, x29, #0x38
  41505c:	bl	4268b8 <manager_is_inhibited>
  415060:	tbnz	w0, #0, 415068 <manager_dispatch_delayed+0xf4>
  415064:	b	4151c0 <manager_dispatch_delayed+0x24c>
  415068:	mov	x8, xzr
  41506c:	stur	x8, [x29, #-72]
  415070:	stur	x8, [x29, #-80]
  415074:	ldurb	w9, [x29, #-17]
  415078:	tbnz	w9, #0, 41508c <manager_dispatch_delayed+0x118>
  41507c:	stur	wzr, [x29, #-4]
  415080:	mov	w8, #0x1                   	// #1
  415084:	stur	w8, [x29, #-64]
  415088:	b	415198 <manager_dispatch_delayed+0x224>
  41508c:	ldur	x8, [x29, #-56]
  415090:	ldr	w0, [x8, #60]
  415094:	sub	x1, x29, #0x48
  415098:	bl	4071b8 <get_process_comm@plt>
  41509c:	ldur	x8, [x29, #-56]
  4150a0:	ldr	w9, [x8, #64]
  4150a4:	mov	w0, w9
  4150a8:	bl	4071c8 <uid_to_name@plt>
  4150ac:	stur	x0, [x29, #-80]
  4150b0:	mov	w9, #0x5                   	// #5
  4150b4:	stur	w9, [x29, #-84]
  4150b8:	stur	wzr, [x29, #-88]
  4150bc:	stur	wzr, [x29, #-92]
  4150c0:	ldur	w0, [x29, #-92]
  4150c4:	bl	406c08 <log_get_max_level_realm@plt>
  4150c8:	ldur	w9, [x29, #-84]
  4150cc:	and	w9, w9, #0x7
  4150d0:	cmp	w0, w9
  4150d4:	b.lt	415178 <manager_dispatch_delayed+0x204>  // b.tstop
  4150d8:	ldur	w8, [x29, #-92]
  4150dc:	ldur	w9, [x29, #-84]
  4150e0:	orr	w0, w9, w8, lsl #10
  4150e4:	ldur	w1, [x29, #-88]
  4150e8:	ldur	x10, [x29, #-56]
  4150ec:	ldr	w6, [x10, #64]
  4150f0:	ldur	x10, [x29, #-80]
  4150f4:	str	w0, [sp, #84]
  4150f8:	mov	x0, x10
  4150fc:	str	w1, [sp, #80]
  415100:	str	w6, [sp, #76]
  415104:	bl	41530c <strna>
  415108:	ldur	x10, [x29, #-56]
  41510c:	ldr	w8, [x10, #60]
  415110:	ldur	x10, [x29, #-72]
  415114:	str	x0, [sp, #64]
  415118:	mov	x0, x10
  41511c:	str	w8, [sp, #60]
  415120:	bl	41530c <strna>
  415124:	ldr	w8, [sp, #84]
  415128:	str	x0, [sp, #48]
  41512c:	mov	w0, w8
  415130:	ldr	w1, [sp, #80]
  415134:	ldr	x2, [sp, #88]
  415138:	mov	w3, #0x684                 	// #1668
  41513c:	adrp	x4, 443000 <_fini+0x2c30>
  415140:	add	x4, x4, #0xd
  415144:	adrp	x5, 443000 <_fini+0x2c30>
  415148:	add	x5, x5, #0x26
  41514c:	ldr	w6, [sp, #76]
  415150:	ldr	x7, [sp, #64]
  415154:	mov	x10, sp
  415158:	ldr	w9, [sp, #60]
  41515c:	str	w9, [x10]
  415160:	mov	x10, sp
  415164:	ldr	x11, [sp, #48]
  415168:	str	x11, [x10, #8]
  41516c:	bl	406c18 <log_internal_realm@plt>
  415170:	str	w0, [sp, #44]
  415174:	b	41518c <manager_dispatch_delayed+0x218>
  415178:	ldur	w0, [x29, #-88]
  41517c:	bl	406c28 <abs@plt>
  415180:	mov	w8, wzr
  415184:	subs	w8, w8, w0, uxtb
  415188:	str	w8, [sp, #44]
  41518c:	ldr	w8, [sp, #44]
  415190:	stur	w8, [x29, #-96]
  415194:	stur	wzr, [x29, #-64]
  415198:	sub	x0, x29, #0x50
  41519c:	bl	4152e4 <freep>
  4151a0:	sub	x0, x29, #0x48
  4151a4:	bl	4152e4 <freep>
  4151a8:	ldur	w8, [x29, #-64]
  4151ac:	cmp	w8, #0x0
  4151b0:	cset	w8, eq  // eq = none
  4151b4:	eor	w8, w8, #0x1
  4151b8:	tbnz	w8, #0, 4152cc <manager_dispatch_delayed+0x358>
  4151bc:	b	4151c0 <manager_dispatch_delayed+0x24c>
  4151c0:	ldur	x0, [x29, #-16]
  4151c4:	ldur	x8, [x29, #-16]
  4151c8:	ldr	w1, [x8, #248]
  4151cc:	ldur	x8, [x29, #-16]
  4151d0:	ldr	x2, [x8, #256]
  4151d4:	sub	x3, x29, #0x30
  4151d8:	bl	415348 <execute_shutdown_or_sleep>
  4151dc:	stur	w0, [x29, #-60]
  4151e0:	ldur	w9, [x29, #-60]
  4151e4:	cmp	w9, #0x0
  4151e8:	cset	w9, ge  // ge = tcont
  4151ec:	tbnz	w9, #0, 4152c0 <manager_dispatch_delayed+0x34c>
  4151f0:	mov	w8, #0x4                   	// #4
  4151f4:	stur	w8, [x29, #-100]
  4151f8:	str	wzr, [sp, #104]
  4151fc:	str	wzr, [sp, #100]
  415200:	ldr	w0, [sp, #100]
  415204:	bl	406c08 <log_get_max_level_realm@plt>
  415208:	ldur	w8, [x29, #-100]
  41520c:	and	w8, w8, #0x7
  415210:	cmp	w0, w8
  415214:	b.lt	41527c <manager_dispatch_delayed+0x308>  // b.tstop
  415218:	ldr	w8, [sp, #100]
  41521c:	ldur	w9, [x29, #-100]
  415220:	orr	w0, w9, w8, lsl #10
  415224:	ldr	w1, [sp, #104]
  415228:	ldur	w8, [x29, #-60]
  41522c:	sub	x10, x29, #0x30
  415230:	str	w0, [sp, #40]
  415234:	mov	x0, x10
  415238:	str	w1, [sp, #36]
  41523c:	mov	w1, w8
  415240:	bl	4071d8 <bus_error_message@plt>
  415244:	ldr	w8, [sp, #40]
  415248:	str	x0, [sp, #24]
  41524c:	mov	w0, w8
  415250:	ldr	w1, [sp, #36]
  415254:	ldr	x2, [sp, #88]
  415258:	mov	w3, #0x68b                 	// #1675
  41525c:	adrp	x4, 443000 <_fini+0x2c30>
  415260:	add	x4, x4, #0xd
  415264:	adrp	x5, 443000 <_fini+0x2c30>
  415268:	add	x5, x5, #0x74
  41526c:	ldr	x6, [sp, #24]
  415270:	bl	406c18 <log_internal_realm@plt>
  415274:	str	w0, [sp, #20]
  415278:	b	415290 <manager_dispatch_delayed+0x31c>
  41527c:	ldr	w0, [sp, #104]
  415280:	bl	406c28 <abs@plt>
  415284:	mov	w8, wzr
  415288:	subs	w8, w8, w0, uxtb
  41528c:	str	w8, [sp, #20]
  415290:	ldr	w8, [sp, #20]
  415294:	str	w8, [sp, #96]
  415298:	ldur	x9, [x29, #-16]
  41529c:	mov	x10, xzr
  4152a0:	str	x10, [x9, #256]
  4152a4:	ldur	x9, [x29, #-16]
  4152a8:	str	wzr, [x9, #248]
  4152ac:	ldur	w8, [x29, #-60]
  4152b0:	stur	w8, [x29, #-4]
  4152b4:	mov	w8, #0x1                   	// #1
  4152b8:	stur	w8, [x29, #-64]
  4152bc:	b	4152cc <manager_dispatch_delayed+0x358>
  4152c0:	mov	w8, #0x1                   	// #1
  4152c4:	stur	w8, [x29, #-4]
  4152c8:	stur	w8, [x29, #-64]
  4152cc:	sub	x0, x29, #0x30
  4152d0:	bl	4071e8 <sd_bus_error_free@plt>
  4152d4:	ldur	w0, [x29, #-4]
  4152d8:	ldp	x29, x30, [sp, #208]
  4152dc:	add	sp, sp, #0xe0
  4152e0:	ret

00000000004152e4 <freep>:
  4152e4:	sub	sp, sp, #0x20
  4152e8:	stp	x29, x30, [sp, #16]
  4152ec:	add	x29, sp, #0x10
  4152f0:	str	x0, [sp, #8]
  4152f4:	ldr	x8, [sp, #8]
  4152f8:	ldr	x0, [x8]
  4152fc:	bl	406da8 <free@plt>
  415300:	ldp	x29, x30, [sp, #16]
  415304:	add	sp, sp, #0x20
  415308:	ret

000000000041530c <strna>:
  41530c:	sub	sp, sp, #0x20
  415310:	str	x0, [sp, #24]
  415314:	ldr	x8, [sp, #24]
  415318:	str	x8, [sp, #16]
  41531c:	cbz	x8, 41532c <strna+0x20>
  415320:	ldr	x8, [sp, #16]
  415324:	str	x8, [sp, #8]
  415328:	b	415338 <strna+0x2c>
  41532c:	adrp	x8, 441000 <_fini+0xc30>
  415330:	add	x8, x8, #0xd95
  415334:	str	x8, [sp, #8]
  415338:	ldr	x8, [sp, #8]
  41533c:	mov	x0, x8
  415340:	add	sp, sp, #0x20
  415344:	ret

0000000000415348 <execute_shutdown_or_sleep>:
  415348:	sub	sp, sp, #0x80
  41534c:	stp	x29, x30, [sp, #112]
  415350:	add	x29, sp, #0x70
  415354:	mov	x8, xzr
  415358:	adrp	x9, 442000 <_fini+0x1c30>
  41535c:	add	x9, x9, #0xd8e
  415360:	add	x9, x9, #0x3
  415364:	adrp	x10, 444000 <_fini+0x3c30>
  415368:	add	x10, x10, #0x4d
  41536c:	stur	x0, [x29, #-16]
  415370:	stur	w1, [x29, #-20]
  415374:	stur	x2, [x29, #-32]
  415378:	stur	x3, [x29, #-40]
  41537c:	stur	x8, [x29, #-48]
  415380:	str	x9, [sp, #40]
  415384:	str	x10, [sp, #32]
  415388:	ldur	x8, [x29, #-16]
  41538c:	cmp	x8, #0x0
  415390:	cset	w9, ne  // ne = any
  415394:	mov	w10, #0x1                   	// #1
  415398:	eor	w9, w9, #0x1
  41539c:	eor	w9, w9, w10
  4153a0:	eor	w9, w9, w10
  4153a4:	and	w9, w9, #0x1
  4153a8:	mov	w0, w9
  4153ac:	sxtw	x8, w0
  4153b0:	cbz	x8, 4153d4 <execute_shutdown_or_sleep+0x8c>
  4153b4:	mov	w8, wzr
  4153b8:	mov	w0, w8
  4153bc:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4153c0:	add	x1, x1, #0x5ef
  4153c4:	ldr	x2, [sp, #40]
  4153c8:	mov	w3, #0x643                 	// #1603
  4153cc:	ldr	x4, [sp, #32]
  4153d0:	bl	406c68 <log_assert_failed_realm@plt>
  4153d4:	ldur	w8, [x29, #-20]
  4153d8:	cmp	w8, #0x0
  4153dc:	cset	w8, gt
  4153e0:	mov	w9, #0x1                   	// #1
  4153e4:	eor	w8, w8, #0x1
  4153e8:	eor	w8, w8, w9
  4153ec:	eor	w8, w8, w9
  4153f0:	and	w8, w8, #0x1
  4153f4:	mov	w0, w8
  4153f8:	sxtw	x10, w0
  4153fc:	cbz	x10, 415420 <execute_shutdown_or_sleep+0xd8>
  415400:	mov	w8, wzr
  415404:	mov	w0, w8
  415408:	adrp	x1, 443000 <_fini+0x2c30>
  41540c:	add	x1, x1, #0x135
  415410:	ldr	x2, [sp, #40]
  415414:	mov	w3, #0x644                 	// #1604
  415418:	ldr	x4, [sp, #32]
  41541c:	bl	406c68 <log_assert_failed_realm@plt>
  415420:	ldur	w8, [x29, #-20]
  415424:	cmp	w8, #0x80
  415428:	cset	w8, lt  // lt = tstop
  41542c:	mov	w9, #0x1                   	// #1
  415430:	eor	w8, w8, #0x1
  415434:	eor	w8, w8, w9
  415438:	eor	w8, w8, w9
  41543c:	and	w8, w8, #0x1
  415440:	mov	w0, w8
  415444:	sxtw	x10, w0
  415448:	cbz	x10, 41546c <execute_shutdown_or_sleep+0x124>
  41544c:	mov	w8, wzr
  415450:	mov	w0, w8
  415454:	adrp	x1, 443000 <_fini+0x2c30>
  415458:	add	x1, x1, #0x13b
  41545c:	ldr	x2, [sp, #40]
  415460:	mov	w3, #0x645                 	// #1605
  415464:	ldr	x4, [sp, #32]
  415468:	bl	406c68 <log_assert_failed_realm@plt>
  41546c:	ldur	x8, [x29, #-32]
  415470:	cmp	x8, #0x0
  415474:	cset	w9, ne  // ne = any
  415478:	mov	w10, #0x1                   	// #1
  41547c:	eor	w9, w9, #0x1
  415480:	eor	w9, w9, w10
  415484:	eor	w9, w9, w10
  415488:	and	w9, w9, #0x1
  41548c:	mov	w0, w9
  415490:	sxtw	x8, w0
  415494:	cbz	x8, 4154b8 <execute_shutdown_or_sleep+0x170>
  415498:	mov	w8, wzr
  41549c:	mov	w0, w8
  4154a0:	adrp	x1, 443000 <_fini+0x2c30>
  4154a4:	add	x1, x1, #0x12b
  4154a8:	ldr	x2, [sp, #40]
  4154ac:	mov	w3, #0x646                 	// #1606
  4154b0:	ldr	x4, [sp, #32]
  4154b4:	bl	406c68 <log_assert_failed_realm@plt>
  4154b8:	ldur	w8, [x29, #-20]
  4154bc:	cmp	w8, #0x1
  4154c0:	b.ne	4154d0 <execute_shutdown_or_sleep+0x188>  // b.any
  4154c4:	ldur	x0, [x29, #-16]
  4154c8:	ldur	x1, [x29, #-32]
  4154cc:	bl	421638 <bus_manager_log_shutdown>
  4154d0:	ldur	x8, [x29, #-16]
  4154d4:	ldr	x0, [x8, #8]
  4154d8:	ldur	x5, [x29, #-40]
  4154dc:	ldur	x8, [x29, #-32]
  4154e0:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4154e4:	add	x1, x1, #0xf86
  4154e8:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  4154ec:	add	x2, x2, #0xf9f
  4154f0:	adrp	x3, 440000 <on_brightness_writer_exit+0x15c>
  4154f4:	add	x3, x3, #0xfb9
  4154f8:	adrp	x4, 442000 <_fini+0x1c30>
  4154fc:	add	x4, x4, #0x977
  415500:	sub	x6, x29, #0x30
  415504:	adrp	x7, 442000 <_fini+0x1c30>
  415508:	add	x7, x7, #0x981
  41550c:	mov	x9, sp
  415510:	str	x8, [x9]
  415514:	mov	x8, sp
  415518:	adrp	x9, 444000 <_fini+0x3c30>
  41551c:	add	x9, x9, #0xa1
  415520:	str	x9, [x8, #8]
  415524:	bl	407368 <sd_bus_call_method@plt>
  415528:	str	w0, [sp, #52]
  41552c:	ldr	w10, [sp, #52]
  415530:	cmp	w10, #0x0
  415534:	cset	w10, ge  // ge = tcont
  415538:	tbnz	w10, #0, 415540 <execute_shutdown_or_sleep+0x1f8>
  41553c:	b	4155e8 <execute_shutdown_or_sleep+0x2a0>
  415540:	ldur	x0, [x29, #-48]
  415544:	adrp	x1, 443000 <_fini+0x2c30>
  415548:	add	x1, x1, #0x465
  41554c:	add	x2, sp, #0x38
  415550:	bl	4074c8 <sd_bus_message_read@plt>
  415554:	str	w0, [sp, #52]
  415558:	ldr	w8, [sp, #52]
  41555c:	cmp	w8, #0x0
  415560:	cset	w8, ge  // ge = tcont
  415564:	tbnz	w8, #0, 41556c <execute_shutdown_or_sleep+0x224>
  415568:	b	4155e8 <execute_shutdown_or_sleep+0x2a0>
  41556c:	ldur	x8, [x29, #-16]
  415570:	add	x0, x8, #0x108
  415574:	ldr	x1, [sp, #56]
  415578:	bl	407428 <free_and_strdup@plt>
  41557c:	str	w0, [sp, #52]
  415580:	ldr	w9, [sp, #52]
  415584:	cmp	w9, #0x0
  415588:	cset	w9, ge  // ge = tcont
  41558c:	tbnz	w9, #0, 415594 <execute_shutdown_or_sleep+0x24c>
  415590:	b	4155e8 <execute_shutdown_or_sleep+0x2a0>
  415594:	ldur	x8, [x29, #-32]
  415598:	ldur	x9, [x29, #-16]
  41559c:	str	x8, [x9, #256]
  4155a0:	ldur	w10, [x29, #-20]
  4155a4:	ldur	x8, [x29, #-16]
  4155a8:	str	w10, [x8, #248]
  4155ac:	ldur	x0, [x29, #-16]
  4155b0:	mov	w10, #0x1                   	// #1
  4155b4:	str	x0, [sp, #24]
  4155b8:	mov	w0, w10
  4155bc:	str	w10, [sp, #20]
  4155c0:	bl	406ca8 <now@plt>
  4155c4:	ldur	x8, [x29, #-16]
  4155c8:	ldr	x8, [x8, #440]
  4155cc:	add	x1, x0, x8
  4155d0:	ldr	x0, [sp, #24]
  4155d4:	bl	414d2c <manager_set_lid_switch_ignore>
  4155d8:	stur	wzr, [x29, #-4]
  4155dc:	ldr	w10, [sp, #20]
  4155e0:	str	w10, [sp, #48]
  4155e4:	b	41560c <execute_shutdown_or_sleep+0x2c4>
  4155e8:	ldur	x0, [x29, #-16]
  4155ec:	ldur	w1, [x29, #-20]
  4155f0:	mov	w8, wzr
  4155f4:	and	w2, w8, #0x1
  4155f8:	bl	4159a8 <send_prepare_for>
  4155fc:	ldr	w8, [sp, #52]
  415600:	stur	w8, [x29, #-4]
  415604:	mov	w8, #0x1                   	// #1
  415608:	str	w8, [sp, #48]
  41560c:	sub	x0, x29, #0x30
  415610:	bl	42092c <sd_bus_message_unrefp>
  415614:	ldur	w0, [x29, #-4]
  415618:	ldp	x29, x30, [sp, #112]
  41561c:	add	sp, sp, #0x80
  415620:	ret

0000000000415624 <bus_manager_shutdown_or_sleep_now_or_later>:
  415624:	sub	sp, sp, #0x80
  415628:	stp	x29, x30, [sp, #112]
  41562c:	add	x29, sp, #0x70
  415630:	mov	x8, xzr
  415634:	adrp	x9, 442000 <_fini+0x1c30>
  415638:	add	x9, x9, #0xd8e
  41563c:	add	x9, x9, #0x3
  415640:	adrp	x10, 443000 <_fini+0x2c30>
  415644:	add	x10, x10, #0xc6
  415648:	stur	x0, [x29, #-16]
  41564c:	stur	x1, [x29, #-24]
  415650:	stur	w2, [x29, #-28]
  415654:	stur	x3, [x29, #-40]
  415658:	stur	x8, [x29, #-48]
  41565c:	str	x9, [sp, #24]
  415660:	str	x10, [sp, #16]
  415664:	ldur	x8, [x29, #-16]
  415668:	cmp	x8, #0x0
  41566c:	cset	w9, ne  // ne = any
  415670:	mov	w10, #0x1                   	// #1
  415674:	eor	w9, w9, #0x1
  415678:	eor	w9, w9, w10
  41567c:	eor	w9, w9, w10
  415680:	and	w9, w9, #0x1
  415684:	mov	w0, w9
  415688:	sxtw	x8, w0
  41568c:	cbz	x8, 4156b0 <bus_manager_shutdown_or_sleep_now_or_later+0x8c>
  415690:	mov	w8, wzr
  415694:	mov	w0, w8
  415698:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41569c:	add	x1, x1, #0x5ef
  4156a0:	ldr	x2, [sp, #24]
  4156a4:	mov	w3, #0x6d2                 	// #1746
  4156a8:	ldr	x4, [sp, #16]
  4156ac:	bl	406c68 <log_assert_failed_realm@plt>
  4156b0:	ldur	x8, [x29, #-24]
  4156b4:	cmp	x8, #0x0
  4156b8:	cset	w9, ne  // ne = any
  4156bc:	mov	w10, #0x1                   	// #1
  4156c0:	eor	w9, w9, #0x1
  4156c4:	eor	w9, w9, w10
  4156c8:	eor	w9, w9, w10
  4156cc:	and	w9, w9, #0x1
  4156d0:	mov	w0, w9
  4156d4:	sxtw	x8, w0
  4156d8:	cbz	x8, 4156fc <bus_manager_shutdown_or_sleep_now_or_later+0xd8>
  4156dc:	mov	w8, wzr
  4156e0:	mov	w0, w8
  4156e4:	adrp	x1, 443000 <_fini+0x2c30>
  4156e8:	add	x1, x1, #0x12b
  4156ec:	ldr	x2, [sp, #24]
  4156f0:	mov	w3, #0x6d3                 	// #1747
  4156f4:	ldr	x4, [sp, #16]
  4156f8:	bl	406c68 <log_assert_failed_realm@plt>
  4156fc:	ldur	w8, [x29, #-28]
  415700:	cmp	w8, #0x0
  415704:	cset	w8, gt
  415708:	mov	w9, #0x1                   	// #1
  41570c:	eor	w8, w8, #0x1
  415710:	eor	w8, w8, w9
  415714:	eor	w8, w8, w9
  415718:	and	w8, w8, #0x1
  41571c:	mov	w0, w8
  415720:	sxtw	x10, w0
  415724:	cbz	x10, 415748 <bus_manager_shutdown_or_sleep_now_or_later+0x124>
  415728:	mov	w8, wzr
  41572c:	mov	w0, w8
  415730:	adrp	x1, 443000 <_fini+0x2c30>
  415734:	add	x1, x1, #0x135
  415738:	ldr	x2, [sp, #24]
  41573c:	mov	w3, #0x6d4                 	// #1748
  415740:	ldr	x4, [sp, #16]
  415744:	bl	406c68 <log_assert_failed_realm@plt>
  415748:	ldur	w8, [x29, #-28]
  41574c:	cmp	w8, #0x80
  415750:	cset	w8, lt  // lt = tstop
  415754:	mov	w9, #0x1                   	// #1
  415758:	eor	w8, w8, #0x1
  41575c:	eor	w8, w8, w9
  415760:	eor	w8, w8, w9
  415764:	and	w8, w8, #0x1
  415768:	mov	w0, w8
  41576c:	sxtw	x10, w0
  415770:	cbz	x10, 415794 <bus_manager_shutdown_or_sleep_now_or_later+0x170>
  415774:	mov	w8, wzr
  415778:	mov	w0, w8
  41577c:	adrp	x1, 443000 <_fini+0x2c30>
  415780:	add	x1, x1, #0x13b
  415784:	ldr	x2, [sp, #24]
  415788:	mov	w3, #0x6d5                 	// #1749
  41578c:	ldr	x4, [sp, #16]
  415790:	bl	406c68 <log_assert_failed_realm@plt>
  415794:	ldur	x8, [x29, #-16]
  415798:	ldr	x8, [x8, #264]
  41579c:	cmp	x8, #0x0
  4157a0:	cset	w9, ne  // ne = any
  4157a4:	mov	w10, #0x1                   	// #1
  4157a8:	eor	w9, w9, #0x1
  4157ac:	eor	w9, w9, w10
  4157b0:	eor	w9, w9, w10
  4157b4:	eor	w9, w9, w10
  4157b8:	and	w9, w9, #0x1
  4157bc:	mov	w0, w9
  4157c0:	sxtw	x8, w0
  4157c4:	cbz	x8, 4157e8 <bus_manager_shutdown_or_sleep_now_or_later+0x1c4>
  4157c8:	mov	w8, wzr
  4157cc:	mov	w0, w8
  4157d0:	adrp	x1, 443000 <_fini+0x2c30>
  4157d4:	add	x1, x1, #0x151
  4157d8:	ldr	x2, [sp, #24]
  4157dc:	mov	w3, #0x6d6                 	// #1750
  4157e0:	ldr	x4, [sp, #16]
  4157e4:	bl	406c68 <log_assert_failed_realm@plt>
  4157e8:	ldur	x8, [x29, #-16]
  4157ec:	ldr	x0, [x8, #8]
  4157f0:	ldur	x1, [x29, #-24]
  4157f4:	sub	x2, x29, #0x30
  4157f8:	bl	4074d8 <unit_load_state@plt>
  4157fc:	str	w0, [sp, #56]
  415800:	ldr	w9, [sp, #56]
  415804:	cmp	w9, #0x0
  415808:	cset	w9, ge  // ge = tcont
  41580c:	tbnz	w9, #0, 415824 <bus_manager_shutdown_or_sleep_now_or_later+0x200>
  415810:	ldr	w8, [sp, #56]
  415814:	stur	w8, [x29, #-4]
  415818:	mov	w8, #0x1                   	// #1
  41581c:	str	w8, [sp, #52]
  415820:	b	415990 <bus_manager_shutdown_or_sleep_now_or_later+0x36c>
  415824:	ldur	x0, [x29, #-48]
  415828:	adrp	x1, 443000 <_fini+0x2c30>
  41582c:	add	x1, x1, #0x160
  415830:	bl	407158 <strcmp@plt>
  415834:	cbz	w0, 4158d4 <bus_manager_shutdown_or_sleep_now_or_later+0x2b0>
  415838:	mov	w8, #0x5                   	// #5
  41583c:	str	w8, [sp, #48]
  415840:	mov	w8, #0xd                   	// #13
  415844:	movk	w8, #0x4000, lsl #16
  415848:	str	w8, [sp, #44]
  41584c:	str	wzr, [sp, #40]
  415850:	ldr	w0, [sp, #40]
  415854:	bl	406c08 <log_get_max_level_realm@plt>
  415858:	ldr	w8, [sp, #48]
  41585c:	and	w8, w8, #0x7
  415860:	cmp	w0, w8
  415864:	b.lt	4158a4 <bus_manager_shutdown_or_sleep_now_or_later+0x280>  // b.tstop
  415868:	ldr	w8, [sp, #40]
  41586c:	ldr	w9, [sp, #48]
  415870:	orr	w0, w9, w8, lsl #10
  415874:	ldr	w1, [sp, #44]
  415878:	ldur	x6, [x29, #-24]
  41587c:	ldur	x7, [x29, #-48]
  415880:	ldr	x2, [sp, #24]
  415884:	mov	w3, #0x6df                 	// #1759
  415888:	adrp	x4, 443000 <_fini+0x2c30>
  41588c:	add	x4, x4, #0x167
  415890:	adrp	x5, 443000 <_fini+0x2c30>
  415894:	add	x5, x5, #0x192
  415898:	bl	406c18 <log_internal_realm@plt>
  41589c:	str	w0, [sp, #12]
  4158a0:	b	4158b8 <bus_manager_shutdown_or_sleep_now_or_later+0x294>
  4158a4:	ldr	w0, [sp, #44]
  4158a8:	bl	406c28 <abs@plt>
  4158ac:	mov	w8, wzr
  4158b0:	subs	w8, w8, w0, uxtb
  4158b4:	str	w8, [sp, #12]
  4158b8:	ldr	w8, [sp, #12]
  4158bc:	str	w8, [sp, #36]
  4158c0:	ldr	w8, [sp, #36]
  4158c4:	stur	w8, [x29, #-4]
  4158c8:	mov	w8, #0x1                   	// #1
  4158cc:	str	w8, [sp, #52]
  4158d0:	b	415990 <bus_manager_shutdown_or_sleep_now_or_later+0x36c>
  4158d4:	ldur	x0, [x29, #-16]
  4158d8:	ldur	w1, [x29, #-28]
  4158dc:	mov	w8, #0x1                   	// #1
  4158e0:	and	w2, w8, #0x1
  4158e4:	bl	4159a8 <send_prepare_for>
  4158e8:	ldur	x9, [x29, #-16]
  4158ec:	ldr	x9, [x9, #232]
  4158f0:	cmp	x9, #0x0
  4158f4:	cset	w8, ls  // ls = plast
  4158f8:	mov	w10, #0x0                   	// #0
  4158fc:	str	w10, [sp, #8]
  415900:	tbnz	w8, #0, 415938 <bus_manager_shutdown_or_sleep_now_or_later+0x314>
  415904:	ldur	x0, [x29, #-16]
  415908:	ldur	w1, [x29, #-28]
  41590c:	mov	w2, #0x1                   	// #1
  415910:	mov	x8, xzr
  415914:	mov	x3, x8
  415918:	mov	w9, wzr
  41591c:	and	w4, w9, #0x1
  415920:	and	w5, w9, #0x1
  415924:	mov	w9, wzr
  415928:	mov	w6, w9
  41592c:	mov	x7, x8
  415930:	bl	4268b8 <manager_is_inhibited>
  415934:	str	w0, [sp, #8]
  415938:	ldr	w8, [sp, #8]
  41593c:	and	w8, w8, #0x1
  415940:	sturb	w8, [x29, #-49]
  415944:	ldurb	w8, [x29, #-49]
  415948:	tbnz	w8, #0, 415950 <bus_manager_shutdown_or_sleep_now_or_later+0x32c>
  41594c:	b	415968 <bus_manager_shutdown_or_sleep_now_or_later+0x344>
  415950:	ldur	x0, [x29, #-16]
  415954:	ldur	w1, [x29, #-28]
  415958:	ldur	x2, [x29, #-24]
  41595c:	bl	415b0c <delay_shutdown_or_sleep>
  415960:	str	w0, [sp, #56]
  415964:	b	415980 <bus_manager_shutdown_or_sleep_now_or_later+0x35c>
  415968:	ldur	x0, [x29, #-16]
  41596c:	ldur	w1, [x29, #-28]
  415970:	ldur	x2, [x29, #-24]
  415974:	ldur	x3, [x29, #-40]
  415978:	bl	415348 <execute_shutdown_or_sleep>
  41597c:	str	w0, [sp, #56]
  415980:	ldr	w8, [sp, #56]
  415984:	stur	w8, [x29, #-4]
  415988:	mov	w8, #0x1                   	// #1
  41598c:	str	w8, [sp, #52]
  415990:	sub	x0, x29, #0x30
  415994:	bl	4152e4 <freep>
  415998:	ldur	w0, [x29, #-4]
  41599c:	ldp	x29, x30, [sp, #112]
  4159a0:	add	sp, sp, #0x80
  4159a4:	ret

00000000004159a8 <send_prepare_for>:
  4159a8:	sub	sp, sp, #0x30
  4159ac:	stp	x29, x30, [sp, #32]
  4159b0:	add	x29, sp, #0x20
  4159b4:	mov	w8, #0x1                   	// #1
  4159b8:	adrp	x9, 442000 <_fini+0x1c30>
  4159bc:	add	x9, x9, #0xd8e
  4159c0:	add	x9, x9, #0x3
  4159c4:	stur	x0, [x29, #-8]
  4159c8:	stur	w1, [x29, #-12]
  4159cc:	and	w8, w2, w8
  4159d0:	sturb	w8, [x29, #-13]
  4159d4:	ldurb	w8, [x29, #-13]
  4159d8:	and	w8, w8, #0x1
  4159dc:	str	w8, [sp, #12]
  4159e0:	str	x9, [sp]
  4159e4:	ldur	x8, [x29, #-8]
  4159e8:	cmp	x8, #0x0
  4159ec:	cset	w9, ne  // ne = any
  4159f0:	mov	w10, #0x1                   	// #1
  4159f4:	eor	w9, w9, #0x1
  4159f8:	eor	w9, w9, w10
  4159fc:	eor	w9, w9, w10
  415a00:	and	w9, w9, #0x1
  415a04:	mov	w0, w9
  415a08:	sxtw	x8, w0
  415a0c:	cbz	x8, 415a34 <send_prepare_for+0x8c>
  415a10:	mov	w8, wzr
  415a14:	mov	w0, w8
  415a18:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  415a1c:	add	x1, x1, #0x5ef
  415a20:	ldr	x2, [sp]
  415a24:	mov	w3, #0x62e                 	// #1582
  415a28:	adrp	x4, 444000 <_fini+0x3c30>
  415a2c:	add	x4, x4, #0x216
  415a30:	bl	406c68 <log_assert_failed_realm@plt>
  415a34:	mov	w8, #0x0                   	// #0
  415a38:	strb	w8, [sp, #11]
  415a3c:	ldur	w8, [x29, #-12]
  415a40:	subs	w8, w8, #0x1
  415a44:	mov	w9, #0x1                   	// #1
  415a48:	cmp	w8, #0x1
  415a4c:	cset	w8, ls  // ls = plast
  415a50:	eor	w8, w8, w9
  415a54:	tbnz	w8, #0, 415a68 <send_prepare_for+0xc0>
  415a58:	b	415a5c <send_prepare_for+0xb4>
  415a5c:	mov	w8, #0x1                   	// #1
  415a60:	strb	w8, [sp, #11]
  415a64:	b	415a68 <send_prepare_for+0xc0>
  415a68:	ldrb	w8, [sp, #11]
  415a6c:	mov	w9, #0x1                   	// #1
  415a70:	and	w8, w8, w9
  415a74:	strb	w8, [sp, #10]
  415a78:	ldrb	w8, [sp, #10]
  415a7c:	eor	w8, w8, #0x1
  415a80:	eor	w8, w8, w9
  415a84:	eor	w8, w8, w9
  415a88:	and	w8, w8, #0x1
  415a8c:	mov	w0, w8
  415a90:	sxtw	x10, w0
  415a94:	cbz	x10, 415abc <send_prepare_for+0x114>
  415a98:	mov	w8, wzr
  415a9c:	mov	w0, w8
  415aa0:	adrp	x1, 444000 <_fini+0x3c30>
  415aa4:	add	x1, x1, #0x24a
  415aa8:	ldr	x2, [sp]
  415aac:	mov	w3, #0x62f                 	// #1583
  415ab0:	adrp	x4, 444000 <_fini+0x3c30>
  415ab4:	add	x4, x4, #0x216
  415ab8:	bl	406c68 <log_assert_failed_realm@plt>
  415abc:	ldur	x8, [x29, #-8]
  415ac0:	ldr	x0, [x8, #8]
  415ac4:	ldur	w9, [x29, #-12]
  415ac8:	adrp	x8, 443000 <_fini+0x2c30>
  415acc:	add	x8, x8, #0x802
  415ad0:	adrp	x10, 443000 <_fini+0x2c30>
  415ad4:	add	x10, x10, #0x7ef
  415ad8:	cmp	w9, #0x1
  415adc:	csel	x3, x10, x8, eq  // eq = none
  415ae0:	ldr	w5, [sp, #12]
  415ae4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  415ae8:	add	x1, x1, #0xd9b
  415aec:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  415af0:	add	x2, x2, #0xdb3
  415af4:	adrp	x4, 441000 <_fini+0xc30>
  415af8:	add	x4, x4, #0xe0e
  415afc:	bl	4074e8 <sd_bus_emit_signal@plt>
  415b00:	ldp	x29, x30, [sp, #32]
  415b04:	add	sp, sp, #0x30
  415b08:	ret

0000000000415b0c <delay_shutdown_or_sleep>:
  415b0c:	sub	sp, sp, #0x80
  415b10:	stp	x29, x30, [sp, #112]
  415b14:	add	x29, sp, #0x70
  415b18:	adrp	x8, 442000 <_fini+0x1c30>
  415b1c:	add	x8, x8, #0xd8e
  415b20:	add	x8, x8, #0x3
  415b24:	adrp	x9, 444000 <_fini+0x3c30>
  415b28:	add	x9, x9, #0x275
  415b2c:	stur	x0, [x29, #-16]
  415b30:	stur	w1, [x29, #-20]
  415b34:	stur	x2, [x29, #-32]
  415b38:	str	x8, [sp, #24]
  415b3c:	str	x9, [sp, #16]
  415b40:	ldur	x8, [x29, #-16]
  415b44:	cmp	x8, #0x0
  415b48:	cset	w9, ne  // ne = any
  415b4c:	mov	w10, #0x1                   	// #1
  415b50:	eor	w9, w9, #0x1
  415b54:	eor	w9, w9, w10
  415b58:	eor	w9, w9, w10
  415b5c:	and	w9, w9, #0x1
  415b60:	mov	w0, w9
  415b64:	sxtw	x8, w0
  415b68:	cbz	x8, 415b8c <delay_shutdown_or_sleep+0x80>
  415b6c:	mov	w8, wzr
  415b70:	mov	w0, w8
  415b74:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  415b78:	add	x1, x1, #0x5ef
  415b7c:	ldr	x2, [sp, #24]
  415b80:	mov	w3, #0x6ac                 	// #1708
  415b84:	ldr	x4, [sp, #16]
  415b88:	bl	406c68 <log_assert_failed_realm@plt>
  415b8c:	ldur	w8, [x29, #-20]
  415b90:	cmp	w8, #0x0
  415b94:	cset	w8, ge  // ge = tcont
  415b98:	mov	w9, #0x1                   	// #1
  415b9c:	eor	w8, w8, #0x1
  415ba0:	eor	w8, w8, w9
  415ba4:	eor	w8, w8, w9
  415ba8:	and	w8, w8, #0x1
  415bac:	mov	w0, w8
  415bb0:	sxtw	x10, w0
  415bb4:	cbz	x10, 415bd8 <delay_shutdown_or_sleep+0xcc>
  415bb8:	mov	w8, wzr
  415bbc:	mov	w0, w8
  415bc0:	adrp	x1, 444000 <_fini+0x3c30>
  415bc4:	add	x1, x1, #0x2b7
  415bc8:	ldr	x2, [sp, #24]
  415bcc:	mov	w3, #0x6ad                 	// #1709
  415bd0:	ldr	x4, [sp, #16]
  415bd4:	bl	406c68 <log_assert_failed_realm@plt>
  415bd8:	ldur	w8, [x29, #-20]
  415bdc:	cmp	w8, #0x80
  415be0:	cset	w8, lt  // lt = tstop
  415be4:	mov	w9, #0x1                   	// #1
  415be8:	eor	w8, w8, #0x1
  415bec:	eor	w8, w8, w9
  415bf0:	eor	w8, w8, w9
  415bf4:	and	w8, w8, #0x1
  415bf8:	mov	w0, w8
  415bfc:	sxtw	x10, w0
  415c00:	cbz	x10, 415c24 <delay_shutdown_or_sleep+0x118>
  415c04:	mov	w8, wzr
  415c08:	mov	w0, w8
  415c0c:	adrp	x1, 443000 <_fini+0x2c30>
  415c10:	add	x1, x1, #0x13b
  415c14:	ldr	x2, [sp, #24]
  415c18:	mov	w3, #0x6ae                 	// #1710
  415c1c:	ldr	x4, [sp, #16]
  415c20:	bl	406c68 <log_assert_failed_realm@plt>
  415c24:	ldur	x8, [x29, #-32]
  415c28:	cmp	x8, #0x0
  415c2c:	cset	w9, ne  // ne = any
  415c30:	mov	w10, #0x1                   	// #1
  415c34:	eor	w9, w9, #0x1
  415c38:	eor	w9, w9, w10
  415c3c:	eor	w9, w9, w10
  415c40:	and	w9, w9, #0x1
  415c44:	mov	w0, w9
  415c48:	sxtw	x8, w0
  415c4c:	cbz	x8, 415c70 <delay_shutdown_or_sleep+0x164>
  415c50:	mov	w8, wzr
  415c54:	mov	w0, w8
  415c58:	adrp	x1, 443000 <_fini+0x2c30>
  415c5c:	add	x1, x1, #0x12b
  415c60:	ldr	x2, [sp, #24]
  415c64:	mov	w3, #0x6af                 	// #1711
  415c68:	ldr	x4, [sp, #16]
  415c6c:	bl	406c68 <log_assert_failed_realm@plt>
  415c70:	mov	w0, #0x1                   	// #1
  415c74:	bl	406ca8 <now@plt>
  415c78:	ldur	x8, [x29, #-16]
  415c7c:	ldr	x8, [x8, #232]
  415c80:	add	x8, x0, x8
  415c84:	stur	x8, [x29, #-48]
  415c88:	ldur	x8, [x29, #-16]
  415c8c:	ldr	x8, [x8, #272]
  415c90:	cbz	x8, 415df0 <delay_shutdown_or_sleep+0x2e4>
  415c94:	ldur	x8, [x29, #-16]
  415c98:	ldr	x0, [x8, #272]
  415c9c:	ldur	x1, [x29, #-48]
  415ca0:	bl	407048 <sd_event_source_set_time@plt>
  415ca4:	stur	w0, [x29, #-36]
  415ca8:	ldur	w9, [x29, #-36]
  415cac:	cmp	w9, #0x0
  415cb0:	cset	w9, ge  // ge = tcont
  415cb4:	tbnz	w9, #0, 415d40 <delay_shutdown_or_sleep+0x234>
  415cb8:	mov	w8, #0x3                   	// #3
  415cbc:	stur	w8, [x29, #-52]
  415cc0:	ldur	w8, [x29, #-36]
  415cc4:	str	w8, [sp, #56]
  415cc8:	str	wzr, [sp, #52]
  415ccc:	ldr	w0, [sp, #52]
  415cd0:	bl	406c08 <log_get_max_level_realm@plt>
  415cd4:	ldur	w8, [x29, #-52]
  415cd8:	and	w8, w8, #0x7
  415cdc:	cmp	w0, w8
  415ce0:	b.lt	415d18 <delay_shutdown_or_sleep+0x20c>  // b.tstop
  415ce4:	ldr	w8, [sp, #52]
  415ce8:	ldur	w9, [x29, #-52]
  415cec:	orr	w0, w9, w8, lsl #10
  415cf0:	ldr	w1, [sp, #56]
  415cf4:	ldr	x2, [sp, #24]
  415cf8:	mov	w3, #0x6b6                 	// #1718
  415cfc:	adrp	x4, 444000 <_fini+0x3c30>
  415d00:	add	x4, x4, #0x2be
  415d04:	adrp	x5, 444000 <_fini+0x3c30>
  415d08:	add	x5, x5, #0x2d6
  415d0c:	bl	406c18 <log_internal_realm@plt>
  415d10:	str	w0, [sp, #12]
  415d14:	b	415d2c <delay_shutdown_or_sleep+0x220>
  415d18:	ldr	w0, [sp, #56]
  415d1c:	bl	406c28 <abs@plt>
  415d20:	mov	w8, wzr
  415d24:	subs	w8, w8, w0, uxtb
  415d28:	str	w8, [sp, #12]
  415d2c:	ldr	w8, [sp, #12]
  415d30:	str	w8, [sp, #48]
  415d34:	ldr	w8, [sp, #48]
  415d38:	stur	w8, [x29, #-4]
  415d3c:	b	415e5c <delay_shutdown_or_sleep+0x350>
  415d40:	ldur	x8, [x29, #-16]
  415d44:	ldr	x0, [x8, #272]
  415d48:	mov	w1, #0xffffffff            	// #-1
  415d4c:	bl	407058 <sd_event_source_set_enabled@plt>
  415d50:	stur	w0, [x29, #-36]
  415d54:	ldur	w9, [x29, #-36]
  415d58:	cmp	w9, #0x0
  415d5c:	cset	w9, ge  // ge = tcont
  415d60:	tbnz	w9, #0, 415dec <delay_shutdown_or_sleep+0x2e0>
  415d64:	mov	w8, #0x3                   	// #3
  415d68:	str	w8, [sp, #44]
  415d6c:	ldur	w8, [x29, #-36]
  415d70:	str	w8, [sp, #40]
  415d74:	str	wzr, [sp, #36]
  415d78:	ldr	w0, [sp, #36]
  415d7c:	bl	406c08 <log_get_max_level_realm@plt>
  415d80:	ldr	w8, [sp, #44]
  415d84:	and	w8, w8, #0x7
  415d88:	cmp	w0, w8
  415d8c:	b.lt	415dc4 <delay_shutdown_or_sleep+0x2b8>  // b.tstop
  415d90:	ldr	w8, [sp, #36]
  415d94:	ldr	w9, [sp, #44]
  415d98:	orr	w0, w9, w8, lsl #10
  415d9c:	ldr	w1, [sp, #40]
  415da0:	ldr	x2, [sp, #24]
  415da4:	mov	w3, #0x6ba                 	// #1722
  415da8:	adrp	x4, 444000 <_fini+0x3c30>
  415dac:	add	x4, x4, #0x2be
  415db0:	adrp	x5, 444000 <_fini+0x3c30>
  415db4:	add	x5, x5, #0x2fc
  415db8:	bl	406c18 <log_internal_realm@plt>
  415dbc:	str	w0, [sp, #8]
  415dc0:	b	415dd8 <delay_shutdown_or_sleep+0x2cc>
  415dc4:	ldr	w0, [sp, #40]
  415dc8:	bl	406c28 <abs@plt>
  415dcc:	mov	w8, wzr
  415dd0:	subs	w8, w8, w0, uxtb
  415dd4:	str	w8, [sp, #8]
  415dd8:	ldr	w8, [sp, #8]
  415ddc:	str	w8, [sp, #32]
  415de0:	ldr	w8, [sp, #32]
  415de4:	stur	w8, [x29, #-4]
  415de8:	b	415e5c <delay_shutdown_or_sleep+0x350>
  415dec:	b	415e40 <delay_shutdown_or_sleep+0x334>
  415df0:	ldur	x8, [x29, #-16]
  415df4:	ldr	x0, [x8]
  415df8:	ldur	x8, [x29, #-16]
  415dfc:	add	x1, x8, #0x110
  415e00:	ldur	x3, [x29, #-48]
  415e04:	ldur	x6, [x29, #-16]
  415e08:	mov	w2, #0x1                   	// #1
  415e0c:	mov	x8, xzr
  415e10:	mov	x4, x8
  415e14:	adrp	x5, 421000 <manager_abandon_scope+0x1a0>
  415e18:	add	x5, x5, #0xc84
  415e1c:	bl	407028 <sd_event_add_time@plt>
  415e20:	stur	w0, [x29, #-36]
  415e24:	ldur	w9, [x29, #-36]
  415e28:	cmp	w9, #0x0
  415e2c:	cset	w9, ge  // ge = tcont
  415e30:	tbnz	w9, #0, 415e40 <delay_shutdown_or_sleep+0x334>
  415e34:	ldur	w8, [x29, #-36]
  415e38:	stur	w8, [x29, #-4]
  415e3c:	b	415e5c <delay_shutdown_or_sleep+0x350>
  415e40:	ldur	x8, [x29, #-32]
  415e44:	ldur	x9, [x29, #-16]
  415e48:	str	x8, [x9, #256]
  415e4c:	ldur	w10, [x29, #-20]
  415e50:	ldur	x8, [x29, #-16]
  415e54:	str	w10, [x8, #248]
  415e58:	stur	wzr, [x29, #-4]
  415e5c:	ldur	w0, [x29, #-4]
  415e60:	ldp	x29, x30, [sp, #112]
  415e64:	add	sp, sp, #0x80
  415e68:	ret

0000000000415e6c <property_get_reboot_parameter>:
  415e6c:	sub	sp, sp, #0x70
  415e70:	stp	x29, x30, [sp, #96]
  415e74:	add	x29, sp, #0x60
  415e78:	mov	x8, xzr
  415e7c:	adrp	x9, 442000 <_fini+0x1c30>
  415e80:	add	x9, x9, #0xd8e
  415e84:	add	x9, x9, #0x3
  415e88:	adrp	x10, 444000 <_fini+0x3c30>
  415e8c:	add	x10, x10, #0x397
  415e90:	stur	x0, [x29, #-16]
  415e94:	stur	x1, [x29, #-24]
  415e98:	stur	x2, [x29, #-32]
  415e9c:	stur	x3, [x29, #-40]
  415ea0:	str	x4, [sp, #48]
  415ea4:	str	x5, [sp, #40]
  415ea8:	str	x6, [sp, #32]
  415eac:	str	x8, [sp, #24]
  415eb0:	str	x9, [sp, #8]
  415eb4:	str	x10, [sp]
  415eb8:	ldur	x8, [x29, #-16]
  415ebc:	cmp	x8, #0x0
  415ec0:	cset	w9, ne  // ne = any
  415ec4:	mov	w10, #0x1                   	// #1
  415ec8:	eor	w9, w9, #0x1
  415ecc:	eor	w9, w9, w10
  415ed0:	eor	w9, w9, w10
  415ed4:	and	w9, w9, #0x1
  415ed8:	mov	w0, w9
  415edc:	sxtw	x8, w0
  415ee0:	cbz	x8, 415f04 <property_get_reboot_parameter+0x98>
  415ee4:	mov	w8, wzr
  415ee8:	mov	w0, w8
  415eec:	adrp	x1, 444000 <_fini+0x3c30>
  415ef0:	add	x1, x1, #0x393
  415ef4:	ldr	x2, [sp, #8]
  415ef8:	mov	w3, #0x9be                 	// #2494
  415efc:	ldr	x4, [sp]
  415f00:	bl	406c68 <log_assert_failed_realm@plt>
  415f04:	ldr	x8, [sp, #48]
  415f08:	cmp	x8, #0x0
  415f0c:	cset	w9, ne  // ne = any
  415f10:	mov	w10, #0x1                   	// #1
  415f14:	eor	w9, w9, #0x1
  415f18:	eor	w9, w9, w10
  415f1c:	eor	w9, w9, w10
  415f20:	and	w9, w9, #0x1
  415f24:	mov	w0, w9
  415f28:	sxtw	x8, w0
  415f2c:	cbz	x8, 415f50 <property_get_reboot_parameter+0xe4>
  415f30:	mov	w8, wzr
  415f34:	mov	w0, w8
  415f38:	adrp	x1, 444000 <_fini+0x3c30>
  415f3c:	add	x1, x1, #0x417
  415f40:	ldr	x2, [sp, #8]
  415f44:	mov	w3, #0x9bf                 	// #2495
  415f48:	ldr	x4, [sp]
  415f4c:	bl	406c68 <log_assert_failed_realm@plt>
  415f50:	ldr	x8, [sp, #40]
  415f54:	cmp	x8, #0x0
  415f58:	cset	w9, ne  // ne = any
  415f5c:	mov	w10, #0x1                   	// #1
  415f60:	eor	w9, w9, #0x1
  415f64:	eor	w9, w9, w10
  415f68:	eor	w9, w9, w10
  415f6c:	and	w9, w9, #0x1
  415f70:	mov	w0, w9
  415f74:	sxtw	x8, w0
  415f78:	cbz	x8, 415f9c <property_get_reboot_parameter+0x130>
  415f7c:	mov	w8, wzr
  415f80:	mov	w0, w8
  415f84:	adrp	x1, 444000 <_fini+0x3c30>
  415f88:	add	x1, x1, #0x41d
  415f8c:	ldr	x2, [sp, #8]
  415f90:	mov	w3, #0x9c0                 	// #2496
  415f94:	ldr	x4, [sp]
  415f98:	bl	406c68 <log_assert_failed_realm@plt>
  415f9c:	add	x0, sp, #0x18
  415fa0:	bl	4074f8 <read_reboot_parameter@plt>
  415fa4:	str	w0, [sp, #20]
  415fa8:	ldr	w8, [sp, #20]
  415fac:	cmp	w8, #0x0
  415fb0:	cset	w8, ge  // ge = tcont
  415fb4:	tbnz	w8, #0, 415fcc <property_get_reboot_parameter+0x160>
  415fb8:	ldr	w8, [sp, #20]
  415fbc:	stur	w8, [x29, #-4]
  415fc0:	mov	w8, #0x1                   	// #1
  415fc4:	str	w8, [sp, #16]
  415fc8:	b	415fec <property_get_reboot_parameter+0x180>
  415fcc:	ldr	x0, [sp, #48]
  415fd0:	ldr	x2, [sp, #24]
  415fd4:	adrp	x1, 442000 <_fini+0x1c30>
  415fd8:	add	x1, x1, #0xf2
  415fdc:	bl	407508 <sd_bus_message_append@plt>
  415fe0:	stur	w0, [x29, #-4]
  415fe4:	mov	w8, #0x1                   	// #1
  415fe8:	str	w8, [sp, #16]
  415fec:	add	x0, sp, #0x18
  415ff0:	bl	4152e4 <freep>
  415ff4:	ldur	w0, [x29, #-4]
  415ff8:	ldp	x29, x30, [sp, #96]
  415ffc:	add	sp, sp, #0x70
  416000:	ret

0000000000416004 <property_get_reboot_to_firmware_setup>:
  416004:	sub	sp, sp, #0xb0
  416008:	stp	x29, x30, [sp, #160]
  41600c:	add	x29, sp, #0xa0
  416010:	adrp	x8, 442000 <_fini+0x1c30>
  416014:	add	x8, x8, #0xd8e
  416018:	add	x8, x8, #0x3
  41601c:	adrp	x9, 444000 <_fini+0x3c30>
  416020:	add	x9, x9, #0x4cf
  416024:	adrp	x10, 444000 <_fini+0x3c30>
  416028:	add	x10, x10, #0x426
  41602c:	stur	x0, [x29, #-8]
  416030:	stur	x1, [x29, #-16]
  416034:	stur	x2, [x29, #-24]
  416038:	stur	x3, [x29, #-32]
  41603c:	stur	x4, [x29, #-40]
  416040:	stur	x5, [x29, #-48]
  416044:	stur	x6, [x29, #-56]
  416048:	str	x8, [sp, #40]
  41604c:	str	x9, [sp, #32]
  416050:	str	x10, [sp, #24]
  416054:	ldur	x8, [x29, #-8]
  416058:	cmp	x8, #0x0
  41605c:	cset	w9, ne  // ne = any
  416060:	mov	w10, #0x1                   	// #1
  416064:	eor	w9, w9, #0x1
  416068:	eor	w9, w9, w10
  41606c:	eor	w9, w9, w10
  416070:	and	w9, w9, #0x1
  416074:	mov	w0, w9
  416078:	sxtw	x8, w0
  41607c:	cbz	x8, 4160a0 <property_get_reboot_to_firmware_setup+0x9c>
  416080:	mov	w8, wzr
  416084:	mov	w0, w8
  416088:	adrp	x1, 444000 <_fini+0x3c30>
  41608c:	add	x1, x1, #0x393
  416090:	ldr	x2, [sp, #40]
  416094:	mov	w3, #0xa18                 	// #2584
  416098:	ldr	x4, [sp, #24]
  41609c:	bl	406c68 <log_assert_failed_realm@plt>
  4160a0:	ldur	x8, [x29, #-40]
  4160a4:	cmp	x8, #0x0
  4160a8:	cset	w9, ne  // ne = any
  4160ac:	mov	w10, #0x1                   	// #1
  4160b0:	eor	w9, w9, #0x1
  4160b4:	eor	w9, w9, w10
  4160b8:	eor	w9, w9, w10
  4160bc:	and	w9, w9, #0x1
  4160c0:	mov	w0, w9
  4160c4:	sxtw	x8, w0
  4160c8:	cbz	x8, 4160ec <property_get_reboot_to_firmware_setup+0xe8>
  4160cc:	mov	w8, wzr
  4160d0:	mov	w0, w8
  4160d4:	adrp	x1, 444000 <_fini+0x3c30>
  4160d8:	add	x1, x1, #0x417
  4160dc:	ldr	x2, [sp, #40]
  4160e0:	mov	w3, #0xa19                 	// #2585
  4160e4:	ldr	x4, [sp, #24]
  4160e8:	bl	406c68 <log_assert_failed_realm@plt>
  4160ec:	ldur	x8, [x29, #-48]
  4160f0:	cmp	x8, #0x0
  4160f4:	cset	w9, ne  // ne = any
  4160f8:	mov	w10, #0x1                   	// #1
  4160fc:	eor	w9, w9, #0x1
  416100:	eor	w9, w9, w10
  416104:	eor	w9, w9, w10
  416108:	and	w9, w9, #0x1
  41610c:	mov	w0, w9
  416110:	sxtw	x8, w0
  416114:	cbz	x8, 416138 <property_get_reboot_to_firmware_setup+0x134>
  416118:	mov	w8, wzr
  41611c:	mov	w0, w8
  416120:	adrp	x1, 444000 <_fini+0x3c30>
  416124:	add	x1, x1, #0x41d
  416128:	ldr	x2, [sp, #40]
  41612c:	mov	w3, #0xa1a                 	// #2586
  416130:	ldr	x4, [sp, #24]
  416134:	bl	406c68 <log_assert_failed_realm@plt>
  416138:	adrp	x0, 444000 <_fini+0x3c30>
  41613c:	add	x0, x0, #0x4ae
  416140:	bl	407518 <getenv_bool@plt>
  416144:	stur	w0, [x29, #-60]
  416148:	ldur	w8, [x29, #-60]
  41614c:	mov	w9, #0xfffffffa            	// #-6
  416150:	cmp	w8, w9
  416154:	b.ne	4161fc <property_get_reboot_to_firmware_setup+0x1f8>  // b.any
  416158:	bl	407528 <efi_get_reboot_to_firmware@plt>
  41615c:	stur	w0, [x29, #-60]
  416160:	ldur	w8, [x29, #-60]
  416164:	cmp	w8, #0x0
  416168:	cset	w8, ge  // ge = tcont
  41616c:	tbnz	w8, #0, 4161f8 <property_get_reboot_to_firmware_setup+0x1f4>
  416170:	ldur	w8, [x29, #-60]
  416174:	mov	w9, #0xffffffa1            	// #-95
  416178:	cmp	w8, w9
  41617c:	b.eq	4161f8 <property_get_reboot_to_firmware_setup+0x1f4>  // b.none
  416180:	mov	w8, #0x4                   	// #4
  416184:	stur	w8, [x29, #-64]
  416188:	ldur	w8, [x29, #-60]
  41618c:	stur	w8, [x29, #-68]
  416190:	stur	wzr, [x29, #-72]
  416194:	ldur	w0, [x29, #-72]
  416198:	bl	406c08 <log_get_max_level_realm@plt>
  41619c:	ldur	w8, [x29, #-64]
  4161a0:	and	w8, w8, #0x7
  4161a4:	cmp	w0, w8
  4161a8:	b.lt	4161dc <property_get_reboot_to_firmware_setup+0x1d8>  // b.tstop
  4161ac:	ldur	w8, [x29, #-72]
  4161b0:	ldur	w9, [x29, #-64]
  4161b4:	orr	w0, w9, w8, lsl #10
  4161b8:	ldur	w1, [x29, #-68]
  4161bc:	ldr	x2, [sp, #40]
  4161c0:	mov	w3, #0xa21                 	// #2593
  4161c4:	ldr	x4, [sp, #32]
  4161c8:	adrp	x5, 444000 <_fini+0x3c30>
  4161cc:	add	x5, x5, #0x4f5
  4161d0:	bl	406c18 <log_internal_realm@plt>
  4161d4:	str	w0, [sp, #20]
  4161d8:	b	4161f0 <property_get_reboot_to_firmware_setup+0x1ec>
  4161dc:	ldur	w0, [x29, #-68]
  4161e0:	bl	406c28 <abs@plt>
  4161e4:	mov	w8, wzr
  4161e8:	subs	w8, w8, w0, uxtb
  4161ec:	str	w8, [sp, #20]
  4161f0:	ldr	w8, [sp, #20]
  4161f4:	stur	w8, [x29, #-76]
  4161f8:	b	416354 <property_get_reboot_to_firmware_setup+0x350>
  4161fc:	ldur	w8, [x29, #-60]
  416200:	cmp	w8, #0x0
  416204:	cset	w8, ge  // ge = tcont
  416208:	tbnz	w8, #0, 416288 <property_get_reboot_to_firmware_setup+0x284>
  41620c:	mov	w8, #0x4                   	// #4
  416210:	str	w8, [sp, #80]
  416214:	ldur	w8, [x29, #-60]
  416218:	str	w8, [sp, #76]
  41621c:	str	wzr, [sp, #72]
  416220:	ldr	w0, [sp, #72]
  416224:	bl	406c08 <log_get_max_level_realm@plt>
  416228:	ldr	w8, [sp, #80]
  41622c:	and	w8, w8, #0x7
  416230:	cmp	w0, w8
  416234:	b.lt	416268 <property_get_reboot_to_firmware_setup+0x264>  // b.tstop
  416238:	ldr	w8, [sp, #72]
  41623c:	ldr	w9, [sp, #80]
  416240:	orr	w0, w9, w8, lsl #10
  416244:	ldr	w1, [sp, #76]
  416248:	ldr	x2, [sp, #40]
  41624c:	mov	w3, #0xa23                 	// #2595
  416250:	ldr	x4, [sp, #32]
  416254:	adrp	x5, 444000 <_fini+0x3c30>
  416258:	add	x5, x5, #0x52c
  41625c:	bl	406c18 <log_internal_realm@plt>
  416260:	str	w0, [sp, #16]
  416264:	b	41627c <property_get_reboot_to_firmware_setup+0x278>
  416268:	ldr	w0, [sp, #76]
  41626c:	bl	406c28 <abs@plt>
  416270:	mov	w8, wzr
  416274:	subs	w8, w8, w0, uxtb
  416278:	str	w8, [sp, #16]
  41627c:	ldr	w8, [sp, #16]
  416280:	str	w8, [sp, #68]
  416284:	b	416354 <property_get_reboot_to_firmware_setup+0x350>
  416288:	ldur	w8, [x29, #-60]
  41628c:	cmp	w8, #0x0
  416290:	cset	w8, le
  416294:	tbnz	w8, #0, 416354 <property_get_reboot_to_firmware_setup+0x350>
  416298:	adrp	x0, 444000 <_fini+0x3c30>
  41629c:	add	x0, x0, #0x562
  4162a0:	mov	w8, wzr
  4162a4:	mov	w1, w8
  4162a8:	bl	406de8 <access@plt>
  4162ac:	cmp	w0, #0x0
  4162b0:	cset	w8, ge  // ge = tcont
  4162b4:	tbnz	w8, #0, 41634c <property_get_reboot_to_firmware_setup+0x348>
  4162b8:	bl	406e08 <__errno_location@plt>
  4162bc:	ldr	w8, [x0]
  4162c0:	cmp	w8, #0x2
  4162c4:	b.eq	416344 <property_get_reboot_to_firmware_setup+0x340>  // b.none
  4162c8:	mov	w8, #0x4                   	// #4
  4162cc:	str	w8, [sp, #64]
  4162d0:	bl	406e08 <__errno_location@plt>
  4162d4:	ldr	w8, [x0]
  4162d8:	str	w8, [sp, #60]
  4162dc:	str	wzr, [sp, #56]
  4162e0:	ldr	w0, [sp, #56]
  4162e4:	bl	406c08 <log_get_max_level_realm@plt>
  4162e8:	ldr	w8, [sp, #64]
  4162ec:	and	w8, w8, #0x7
  4162f0:	cmp	w0, w8
  4162f4:	b.lt	416328 <property_get_reboot_to_firmware_setup+0x324>  // b.tstop
  4162f8:	ldr	w8, [sp, #56]
  4162fc:	ldr	w9, [sp, #64]
  416300:	orr	w0, w9, w8, lsl #10
  416304:	ldr	w1, [sp, #60]
  416308:	ldr	x2, [sp, #40]
  41630c:	mov	w3, #0xa28                 	// #2600
  416310:	ldr	x4, [sp, #32]
  416314:	adrp	x5, 444000 <_fini+0x3c30>
  416318:	add	x5, x5, #0x588
  41631c:	bl	406c18 <log_internal_realm@plt>
  416320:	str	w0, [sp, #12]
  416324:	b	41633c <property_get_reboot_to_firmware_setup+0x338>
  416328:	ldr	w0, [sp, #60]
  41632c:	bl	406c28 <abs@plt>
  416330:	mov	w8, wzr
  416334:	subs	w8, w8, w0, uxtb
  416338:	str	w8, [sp, #12]
  41633c:	ldr	w8, [sp, #12]
  416340:	str	w8, [sp, #52]
  416344:	stur	wzr, [x29, #-60]
  416348:	b	416354 <property_get_reboot_to_firmware_setup+0x350>
  41634c:	mov	w8, #0x1                   	// #1
  416350:	stur	w8, [x29, #-60]
  416354:	ldur	x0, [x29, #-40]
  416358:	ldur	w8, [x29, #-60]
  41635c:	cmp	w8, #0x0
  416360:	cset	w8, gt
  416364:	and	w2, w8, #0x1
  416368:	adrp	x1, 441000 <_fini+0xc30>
  41636c:	add	x1, x1, #0xe0e
  416370:	bl	407508 <sd_bus_message_append@plt>
  416374:	ldp	x29, x30, [sp, #160]
  416378:	add	sp, sp, #0xb0
  41637c:	ret

0000000000416380 <property_get_reboot_to_boot_loader_menu>:
  416380:	sub	sp, sp, #0x120
  416384:	stp	x29, x30, [sp, #256]
  416388:	str	x28, [sp, #272]
  41638c:	add	x29, sp, #0x100
  416390:	mov	x8, #0xffffffffffffffff    	// #-1
  416394:	adrp	x9, 442000 <_fini+0x1c30>
  416398:	add	x9, x9, #0xd8e
  41639c:	add	x9, x9, #0x3
  4163a0:	adrp	x10, 444000 <_fini+0x3c30>
  4163a4:	add	x10, x10, #0x699
  4163a8:	adrp	x11, 444000 <_fini+0x3c30>
  4163ac:	add	x11, x11, #0x5d1
  4163b0:	stur	x0, [x29, #-8]
  4163b4:	stur	x1, [x29, #-16]
  4163b8:	stur	x2, [x29, #-24]
  4163bc:	stur	x3, [x29, #-32]
  4163c0:	stur	x4, [x29, #-40]
  4163c4:	stur	x5, [x29, #-48]
  4163c8:	stur	x6, [x29, #-56]
  4163cc:	stur	x8, [x29, #-64]
  4163d0:	str	x9, [sp, #40]
  4163d4:	str	x10, [sp, #32]
  4163d8:	str	x11, [sp, #24]
  4163dc:	ldur	x8, [x29, #-8]
  4163e0:	cmp	x8, #0x0
  4163e4:	cset	w9, ne  // ne = any
  4163e8:	mov	w10, #0x1                   	// #1
  4163ec:	eor	w9, w9, #0x1
  4163f0:	eor	w9, w9, w10
  4163f4:	eor	w9, w9, w10
  4163f8:	and	w9, w9, #0x1
  4163fc:	mov	w0, w9
  416400:	sxtw	x8, w0
  416404:	cbz	x8, 416428 <property_get_reboot_to_boot_loader_menu+0xa8>
  416408:	mov	w8, wzr
  41640c:	mov	w0, w8
  416410:	adrp	x1, 444000 <_fini+0x3c30>
  416414:	add	x1, x1, #0x393
  416418:	ldr	x2, [sp, #40]
  41641c:	mov	w3, #0xaad                 	// #2733
  416420:	ldr	x4, [sp, #24]
  416424:	bl	406c68 <log_assert_failed_realm@plt>
  416428:	ldur	x8, [x29, #-40]
  41642c:	cmp	x8, #0x0
  416430:	cset	w9, ne  // ne = any
  416434:	mov	w10, #0x1                   	// #1
  416438:	eor	w9, w9, #0x1
  41643c:	eor	w9, w9, w10
  416440:	eor	w9, w9, w10
  416444:	and	w9, w9, #0x1
  416448:	mov	w0, w9
  41644c:	sxtw	x8, w0
  416450:	cbz	x8, 416474 <property_get_reboot_to_boot_loader_menu+0xf4>
  416454:	mov	w8, wzr
  416458:	mov	w0, w8
  41645c:	adrp	x1, 444000 <_fini+0x3c30>
  416460:	add	x1, x1, #0x417
  416464:	ldr	x2, [sp, #40]
  416468:	mov	w3, #0xaae                 	// #2734
  41646c:	ldr	x4, [sp, #24]
  416470:	bl	406c68 <log_assert_failed_realm@plt>
  416474:	ldur	x8, [x29, #-48]
  416478:	cmp	x8, #0x0
  41647c:	cset	w9, ne  // ne = any
  416480:	mov	w10, #0x1                   	// #1
  416484:	eor	w9, w9, #0x1
  416488:	eor	w9, w9, w10
  41648c:	eor	w9, w9, w10
  416490:	and	w9, w9, #0x1
  416494:	mov	w0, w9
  416498:	sxtw	x8, w0
  41649c:	cbz	x8, 4164c0 <property_get_reboot_to_boot_loader_menu+0x140>
  4164a0:	mov	w8, wzr
  4164a4:	mov	w0, w8
  4164a8:	adrp	x1, 444000 <_fini+0x3c30>
  4164ac:	add	x1, x1, #0x41d
  4164b0:	ldr	x2, [sp, #40]
  4164b4:	mov	w3, #0xaaf                 	// #2735
  4164b8:	ldr	x4, [sp, #24]
  4164bc:	bl	406c68 <log_assert_failed_realm@plt>
  4164c0:	adrp	x0, 444000 <_fini+0x3c30>
  4164c4:	add	x0, x0, #0x65b
  4164c8:	bl	407518 <getenv_bool@plt>
  4164cc:	stur	w0, [x29, #-68]
  4164d0:	ldur	w8, [x29, #-68]
  4164d4:	mov	w9, #0xfffffffa            	// #-6
  4164d8:	cmp	w8, w9
  4164dc:	b.ne	416774 <property_get_reboot_to_boot_loader_menu+0x3f4>  // b.any
  4164e0:	sub	x3, x29, #0x50
  4164e4:	mov	x8, xzr
  4164e8:	stur	x8, [x29, #-80]
  4164ec:	sub	x8, x29, #0x60
  4164f0:	mov	w9, #0x4a                  	// #74
  4164f4:	sturb	w9, [x29, #-96]
  4164f8:	mov	w9, #0x67                  	// #103
  4164fc:	strb	w9, [x8, #1]
  416500:	mov	w9, #0xb0                  	// #176
  416504:	strb	w9, [x8, #2]
  416508:	mov	w9, #0x82                  	// #130
  41650c:	strb	w9, [x8, #3]
  416510:	mov	w9, #0xa                   	// #10
  416514:	strb	w9, [x8, #4]
  416518:	mov	w9, #0x4c                  	// #76
  41651c:	strb	w9, [x8, #5]
  416520:	mov	w9, #0x41                  	// #65
  416524:	strb	w9, [x8, #6]
  416528:	mov	w9, #0xcf                  	// #207
  41652c:	strb	w9, [x8, #7]
  416530:	mov	w9, #0xb6                  	// #182
  416534:	strb	w9, [x8, #8]
  416538:	mov	w9, #0xc7                  	// #199
  41653c:	strb	w9, [x8, #9]
  416540:	mov	w9, #0x44                  	// #68
  416544:	strb	w9, [x8, #10]
  416548:	mov	w9, #0xb                   	// #11
  41654c:	strb	w9, [x8, #11]
  416550:	mov	w9, #0x29                  	// #41
  416554:	strb	w9, [x8, #12]
  416558:	mov	w9, #0xbb                  	// #187
  41655c:	strb	w9, [x8, #13]
  416560:	mov	w9, #0x8c                  	// #140
  416564:	strb	w9, [x8, #14]
  416568:	mov	w9, #0x4f                  	// #79
  41656c:	strb	w9, [x8, #15]
  416570:	ldur	x0, [x29, #-96]
  416574:	ldur	x1, [x29, #-88]
  416578:	adrp	x2, 444000 <_fini+0x3c30>
  41657c:	add	x2, x2, #0x67e
  416580:	bl	407538 <efi_get_variable_string@plt>
  416584:	stur	w0, [x29, #-68]
  416588:	ldur	w9, [x29, #-68]
  41658c:	cmp	w9, #0x0
  416590:	cset	w9, ge  // ge = tcont
  416594:	tbnz	w9, #0, 416624 <property_get_reboot_to_boot_loader_menu+0x2a4>
  416598:	ldur	w8, [x29, #-68]
  41659c:	mov	w9, #0xfffffffe            	// #-2
  4165a0:	cmp	w8, w9
  4165a4:	b.eq	416620 <property_get_reboot_to_boot_loader_menu+0x2a0>  // b.none
  4165a8:	mov	w8, #0x4                   	// #4
  4165ac:	stur	w8, [x29, #-100]
  4165b0:	ldur	w8, [x29, #-68]
  4165b4:	stur	w8, [x29, #-104]
  4165b8:	stur	wzr, [x29, #-108]
  4165bc:	ldur	w0, [x29, #-108]
  4165c0:	bl	406c08 <log_get_max_level_realm@plt>
  4165c4:	ldur	w8, [x29, #-100]
  4165c8:	and	w8, w8, #0x7
  4165cc:	cmp	w0, w8
  4165d0:	b.lt	416604 <property_get_reboot_to_boot_loader_menu+0x284>  // b.tstop
  4165d4:	ldur	w8, [x29, #-108]
  4165d8:	ldur	w9, [x29, #-100]
  4165dc:	orr	w0, w9, w8, lsl #10
  4165e0:	ldur	w1, [x29, #-104]
  4165e4:	ldr	x2, [sp, #40]
  4165e8:	mov	w3, #0xabf                 	// #2751
  4165ec:	ldr	x4, [sp, #32]
  4165f0:	adrp	x5, 444000 <_fini+0x3c30>
  4165f4:	add	x5, x5, #0x6c1
  4165f8:	bl	406c18 <log_internal_realm@plt>
  4165fc:	str	w0, [sp, #20]
  416600:	b	416618 <property_get_reboot_to_boot_loader_menu+0x298>
  416604:	ldur	w0, [x29, #-104]
  416608:	bl	406c28 <abs@plt>
  41660c:	mov	w8, wzr
  416610:	subs	w8, w8, w0, uxtb
  416614:	str	w8, [sp, #20]
  416618:	ldr	w8, [sp, #20]
  41661c:	stur	w8, [x29, #-112]
  416620:	b	416768 <property_get_reboot_to_boot_loader_menu+0x3e8>
  416624:	ldur	x0, [x29, #-80]
  416628:	sub	x1, x29, #0x78
  41662c:	bl	421da8 <safe_atou64>
  416630:	stur	w0, [x29, #-68]
  416634:	ldur	w8, [x29, #-68]
  416638:	cmp	w8, #0x0
  41663c:	cset	w8, ge  // ge = tcont
  416640:	tbnz	w8, #0, 4166c4 <property_get_reboot_to_boot_loader_menu+0x344>
  416644:	mov	w8, #0x4                   	// #4
  416648:	stur	w8, [x29, #-124]
  41664c:	ldur	w8, [x29, #-68]
  416650:	str	w8, [sp, #128]
  416654:	str	wzr, [sp, #124]
  416658:	ldr	w0, [sp, #124]
  41665c:	bl	406c08 <log_get_max_level_realm@plt>
  416660:	ldur	w8, [x29, #-124]
  416664:	and	w8, w8, #0x7
  416668:	cmp	w0, w8
  41666c:	b.lt	4166a4 <property_get_reboot_to_boot_loader_menu+0x324>  // b.tstop
  416670:	ldr	w8, [sp, #124]
  416674:	ldur	w9, [x29, #-124]
  416678:	orr	w0, w9, w8, lsl #10
  41667c:	ldr	w1, [sp, #128]
  416680:	ldur	x6, [x29, #-80]
  416684:	ldr	x2, [sp, #40]
  416688:	mov	w3, #0xac5                 	// #2757
  41668c:	ldr	x4, [sp, #32]
  416690:	adrp	x5, 444000 <_fini+0x3c30>
  416694:	add	x5, x5, #0x6f8
  416698:	bl	406c18 <log_internal_realm@plt>
  41669c:	str	w0, [sp, #16]
  4166a0:	b	4166b8 <property_get_reboot_to_boot_loader_menu+0x338>
  4166a4:	ldr	w0, [sp, #128]
  4166a8:	bl	406c28 <abs@plt>
  4166ac:	mov	w8, wzr
  4166b0:	subs	w8, w8, w0, uxtb
  4166b4:	str	w8, [sp, #16]
  4166b8:	ldr	w8, [sp, #16]
  4166bc:	str	w8, [sp, #120]
  4166c0:	b	416768 <property_get_reboot_to_boot_loader_menu+0x3e8>
  4166c4:	ldur	x8, [x29, #-120]
  4166c8:	mov	x9, #0xb5ed                	// #46573
  4166cc:	movk	x9, #0xf7a0, lsl #16
  4166d0:	movk	x9, #0x10c6, lsl #32
  4166d4:	cmp	x8, x9
  4166d8:	b.ls	416754 <property_get_reboot_to_boot_loader_menu+0x3d4>  // b.plast
  4166dc:	mov	w8, #0x4                   	// #4
  4166e0:	str	w8, [sp, #116]
  4166e4:	str	wzr, [sp, #112]
  4166e8:	str	wzr, [sp, #108]
  4166ec:	ldr	w0, [sp, #108]
  4166f0:	bl	406c08 <log_get_max_level_realm@plt>
  4166f4:	ldr	w8, [sp, #116]
  4166f8:	and	w8, w8, #0x7
  4166fc:	cmp	w0, w8
  416700:	b.lt	416734 <property_get_reboot_to_boot_loader_menu+0x3b4>  // b.tstop
  416704:	ldr	w8, [sp, #108]
  416708:	ldr	w9, [sp, #116]
  41670c:	orr	w0, w9, w8, lsl #10
  416710:	ldr	w1, [sp, #112]
  416714:	ldr	x2, [sp, #40]
  416718:	mov	w3, #0xac7                 	// #2759
  41671c:	ldr	x4, [sp, #32]
  416720:	adrp	x5, 444000 <_fini+0x3c30>
  416724:	add	x5, x5, #0x732
  416728:	bl	406c18 <log_internal_realm@plt>
  41672c:	str	w0, [sp, #12]
  416730:	b	416748 <property_get_reboot_to_boot_loader_menu+0x3c8>
  416734:	ldr	w0, [sp, #112]
  416738:	bl	406c28 <abs@plt>
  41673c:	mov	w8, wzr
  416740:	subs	w8, w8, w0, uxtb
  416744:	str	w8, [sp, #12]
  416748:	ldr	w8, [sp, #12]
  41674c:	str	w8, [sp, #104]
  416750:	b	416768 <property_get_reboot_to_boot_loader_menu+0x3e8>
  416754:	ldur	x8, [x29, #-120]
  416758:	mov	x9, #0x4240                	// #16960
  41675c:	movk	x9, #0xf, lsl #16
  416760:	mul	x8, x8, x9
  416764:	stur	x8, [x29, #-64]
  416768:	sub	x0, x29, #0x50
  41676c:	bl	4152e4 <freep>
  416770:	b	416968 <property_get_reboot_to_boot_loader_menu+0x5e8>
  416774:	ldur	w8, [x29, #-68]
  416778:	cmp	w8, #0x0
  41677c:	cset	w8, ge  // ge = tcont
  416780:	tbnz	w8, #0, 416800 <property_get_reboot_to_boot_loader_menu+0x480>
  416784:	mov	w8, #0x4                   	// #4
  416788:	str	w8, [sp, #100]
  41678c:	ldur	w8, [x29, #-68]
  416790:	str	w8, [sp, #96]
  416794:	str	wzr, [sp, #92]
  416798:	ldr	w0, [sp, #92]
  41679c:	bl	406c08 <log_get_max_level_realm@plt>
  4167a0:	ldr	w8, [sp, #100]
  4167a4:	and	w8, w8, #0x7
  4167a8:	cmp	w0, w8
  4167ac:	b.lt	4167e0 <property_get_reboot_to_boot_loader_menu+0x460>  // b.tstop
  4167b0:	ldr	w8, [sp, #92]
  4167b4:	ldr	w9, [sp, #100]
  4167b8:	orr	w0, w9, w8, lsl #10
  4167bc:	ldr	w1, [sp, #96]
  4167c0:	ldr	x2, [sp, #40]
  4167c4:	mov	w3, #0xacd                 	// #2765
  4167c8:	ldr	x4, [sp, #32]
  4167cc:	adrp	x5, 444000 <_fini+0x3c30>
  4167d0:	add	x5, x5, #0x765
  4167d4:	bl	406c18 <log_internal_realm@plt>
  4167d8:	str	w0, [sp, #8]
  4167dc:	b	4167f4 <property_get_reboot_to_boot_loader_menu+0x474>
  4167e0:	ldr	w0, [sp, #96]
  4167e4:	bl	406c28 <abs@plt>
  4167e8:	mov	w8, wzr
  4167ec:	subs	w8, w8, w0, uxtb
  4167f0:	str	w8, [sp, #8]
  4167f4:	ldr	w8, [sp, #8]
  4167f8:	str	w8, [sp, #88]
  4167fc:	b	416968 <property_get_reboot_to_boot_loader_menu+0x5e8>
  416800:	ldur	w8, [x29, #-68]
  416804:	cmp	w8, #0x0
  416808:	cset	w8, le
  41680c:	tbnz	w8, #0, 416968 <property_get_reboot_to_boot_loader_menu+0x5e8>
  416810:	add	x1, sp, #0x50
  416814:	mov	x8, xzr
  416818:	str	x8, [sp, #80]
  41681c:	adrp	x0, 444000 <_fini+0x3c30>
  416820:	add	x0, x0, #0x79d
  416824:	bl	407548 <read_one_line_file@plt>
  416828:	stur	w0, [x29, #-68]
  41682c:	ldur	w9, [x29, #-68]
  416830:	cmp	w9, #0x0
  416834:	cset	w9, ge  // ge = tcont
  416838:	tbnz	w9, #0, 4168c8 <property_get_reboot_to_boot_loader_menu+0x548>
  41683c:	ldur	w8, [x29, #-68]
  416840:	mov	w9, #0xfffffffe            	// #-2
  416844:	cmp	w8, w9
  416848:	b.eq	4168c4 <property_get_reboot_to_boot_loader_menu+0x544>  // b.none
  41684c:	mov	w8, #0x4                   	// #4
  416850:	str	w8, [sp, #76]
  416854:	ldur	w8, [x29, #-68]
  416858:	str	w8, [sp, #72]
  41685c:	str	wzr, [sp, #68]
  416860:	ldr	w0, [sp, #68]
  416864:	bl	406c08 <log_get_max_level_realm@plt>
  416868:	ldr	w8, [sp, #76]
  41686c:	and	w8, w8, #0x7
  416870:	cmp	w0, w8
  416874:	b.lt	4168a8 <property_get_reboot_to_boot_loader_menu+0x528>  // b.tstop
  416878:	ldr	w8, [sp, #68]
  41687c:	ldr	w9, [sp, #76]
  416880:	orr	w0, w9, w8, lsl #10
  416884:	ldr	w1, [sp, #72]
  416888:	ldr	x2, [sp, #40]
  41688c:	mov	w3, #0xad6                 	// #2774
  416890:	ldr	x4, [sp, #32]
  416894:	adrp	x5, 444000 <_fini+0x3c30>
  416898:	add	x5, x5, #0x7c5
  41689c:	bl	406c18 <log_internal_realm@plt>
  4168a0:	str	w0, [sp, #4]
  4168a4:	b	4168bc <property_get_reboot_to_boot_loader_menu+0x53c>
  4168a8:	ldr	w0, [sp, #72]
  4168ac:	bl	406c28 <abs@plt>
  4168b0:	mov	w8, wzr
  4168b4:	subs	w8, w8, w0, uxtb
  4168b8:	str	w8, [sp, #4]
  4168bc:	ldr	w8, [sp, #4]
  4168c0:	str	w8, [sp, #64]
  4168c4:	b	416960 <property_get_reboot_to_boot_loader_menu+0x5e0>
  4168c8:	ldr	x0, [sp, #80]
  4168cc:	sub	x1, x29, #0x40
  4168d0:	bl	421da8 <safe_atou64>
  4168d4:	stur	w0, [x29, #-68]
  4168d8:	ldur	w8, [x29, #-68]
  4168dc:	cmp	w8, #0x0
  4168e0:	cset	w8, ge  // ge = tcont
  4168e4:	tbnz	w8, #0, 416960 <property_get_reboot_to_boot_loader_menu+0x5e0>
  4168e8:	mov	w8, #0x4                   	// #4
  4168ec:	str	w8, [sp, #60]
  4168f0:	ldur	w8, [x29, #-68]
  4168f4:	str	w8, [sp, #56]
  4168f8:	str	wzr, [sp, #52]
  4168fc:	ldr	w0, [sp, #52]
  416900:	bl	406c08 <log_get_max_level_realm@plt>
  416904:	ldr	w8, [sp, #60]
  416908:	and	w8, w8, #0x7
  41690c:	cmp	w0, w8
  416910:	b.lt	416944 <property_get_reboot_to_boot_loader_menu+0x5c4>  // b.tstop
  416914:	ldr	w8, [sp, #52]
  416918:	ldr	w9, [sp, #60]
  41691c:	orr	w0, w9, w8, lsl #10
  416920:	ldr	w1, [sp, #56]
  416924:	ldr	x2, [sp, #40]
  416928:	mov	w3, #0xada                 	// #2778
  41692c:	ldr	x4, [sp, #32]
  416930:	adrp	x5, 444000 <_fini+0x3c30>
  416934:	add	x5, x5, #0x800
  416938:	bl	406c18 <log_internal_realm@plt>
  41693c:	str	w0, [sp]
  416940:	b	416958 <property_get_reboot_to_boot_loader_menu+0x5d8>
  416944:	ldr	w0, [sp, #56]
  416948:	bl	406c28 <abs@plt>
  41694c:	mov	w8, wzr
  416950:	subs	w8, w8, w0, uxtb
  416954:	str	w8, [sp]
  416958:	ldr	w8, [sp]
  41695c:	str	w8, [sp, #48]
  416960:	add	x0, sp, #0x50
  416964:	bl	4152e4 <freep>
  416968:	ldur	x0, [x29, #-40]
  41696c:	ldur	x2, [x29, #-64]
  416970:	adrp	x1, 443000 <_fini+0x2c30>
  416974:	add	x1, x1, #0x250
  416978:	bl	407508 <sd_bus_message_append@plt>
  41697c:	ldr	x28, [sp, #272]
  416980:	ldp	x29, x30, [sp, #256]
  416984:	add	sp, sp, #0x120
  416988:	ret

000000000041698c <property_get_reboot_to_boot_loader_entry>:
  41698c:	sub	sp, sp, #0x100
  416990:	stp	x29, x30, [sp, #240]
  416994:	add	x29, sp, #0xf0
  416998:	mov	x8, xzr
  41699c:	adrp	x9, 442000 <_fini+0x1c30>
  4169a0:	add	x9, x9, #0xd8e
  4169a4:	add	x9, x9, #0x3
  4169a8:	adrp	x10, 444000 <_fini+0x3c30>
  4169ac:	add	x10, x10, #0x8fe
  4169b0:	adrp	x11, 444000 <_fini+0x3c30>
  4169b4:	add	x11, x11, #0x83c
  4169b8:	stur	x0, [x29, #-8]
  4169bc:	stur	x1, [x29, #-16]
  4169c0:	stur	x2, [x29, #-24]
  4169c4:	stur	x3, [x29, #-32]
  4169c8:	stur	x4, [x29, #-40]
  4169cc:	stur	x5, [x29, #-48]
  4169d0:	stur	x6, [x29, #-56]
  4169d4:	stur	x8, [x29, #-64]
  4169d8:	str	x9, [sp, #64]
  4169dc:	str	x10, [sp, #56]
  4169e0:	str	x11, [sp, #48]
  4169e4:	ldur	x8, [x29, #-8]
  4169e8:	cmp	x8, #0x0
  4169ec:	cset	w9, ne  // ne = any
  4169f0:	mov	w10, #0x1                   	// #1
  4169f4:	eor	w9, w9, #0x1
  4169f8:	eor	w9, w9, w10
  4169fc:	eor	w9, w9, w10
  416a00:	and	w9, w9, #0x1
  416a04:	mov	w0, w9
  416a08:	sxtw	x8, w0
  416a0c:	cbz	x8, 416a30 <property_get_reboot_to_boot_loader_entry+0xa4>
  416a10:	mov	w8, wzr
  416a14:	mov	w0, w8
  416a18:	adrp	x1, 444000 <_fini+0x3c30>
  416a1c:	add	x1, x1, #0x393
  416a20:	ldr	x2, [sp, #64]
  416a24:	mov	w3, #0xb6a                 	// #2922
  416a28:	ldr	x4, [sp, #48]
  416a2c:	bl	406c68 <log_assert_failed_realm@plt>
  416a30:	ldur	x8, [x29, #-40]
  416a34:	cmp	x8, #0x0
  416a38:	cset	w9, ne  // ne = any
  416a3c:	mov	w10, #0x1                   	// #1
  416a40:	eor	w9, w9, #0x1
  416a44:	eor	w9, w9, w10
  416a48:	eor	w9, w9, w10
  416a4c:	and	w9, w9, #0x1
  416a50:	mov	w0, w9
  416a54:	sxtw	x8, w0
  416a58:	cbz	x8, 416a7c <property_get_reboot_to_boot_loader_entry+0xf0>
  416a5c:	mov	w8, wzr
  416a60:	mov	w0, w8
  416a64:	adrp	x1, 444000 <_fini+0x3c30>
  416a68:	add	x1, x1, #0x417
  416a6c:	ldr	x2, [sp, #64]
  416a70:	mov	w3, #0xb6b                 	// #2923
  416a74:	ldr	x4, [sp, #48]
  416a78:	bl	406c68 <log_assert_failed_realm@plt>
  416a7c:	ldur	x8, [x29, #-48]
  416a80:	cmp	x8, #0x0
  416a84:	cset	w9, ne  // ne = any
  416a88:	mov	w10, #0x1                   	// #1
  416a8c:	eor	w9, w9, #0x1
  416a90:	eor	w9, w9, w10
  416a94:	eor	w9, w9, w10
  416a98:	and	w9, w9, #0x1
  416a9c:	mov	w0, w9
  416aa0:	sxtw	x8, w0
  416aa4:	cbz	x8, 416ac8 <property_get_reboot_to_boot_loader_entry+0x13c>
  416aa8:	mov	w8, wzr
  416aac:	mov	w0, w8
  416ab0:	adrp	x1, 444000 <_fini+0x3c30>
  416ab4:	add	x1, x1, #0x41d
  416ab8:	ldr	x2, [sp, #64]
  416abc:	mov	w3, #0xb6c                 	// #2924
  416ac0:	ldr	x4, [sp, #48]
  416ac4:	bl	406c68 <log_assert_failed_realm@plt>
  416ac8:	adrp	x0, 444000 <_fini+0x3c30>
  416acc:	add	x0, x0, #0x8c7
  416ad0:	bl	407518 <getenv_bool@plt>
  416ad4:	stur	w0, [x29, #-68]
  416ad8:	ldur	w8, [x29, #-68]
  416adc:	mov	w9, #0xfffffffa            	// #-6
  416ae0:	cmp	w8, w9
  416ae4:	b.ne	416cb8 <property_get_reboot_to_boot_loader_entry+0x32c>  // b.any
  416ae8:	sub	x8, x29, #0x58
  416aec:	mov	w9, #0x4a                  	// #74
  416af0:	sturb	w9, [x29, #-88]
  416af4:	mov	w9, #0x67                  	// #103
  416af8:	strb	w9, [x8, #1]
  416afc:	mov	w9, #0xb0                  	// #176
  416b00:	strb	w9, [x8, #2]
  416b04:	mov	w9, #0x82                  	// #130
  416b08:	strb	w9, [x8, #3]
  416b0c:	mov	w9, #0xa                   	// #10
  416b10:	strb	w9, [x8, #4]
  416b14:	mov	w9, #0x4c                  	// #76
  416b18:	strb	w9, [x8, #5]
  416b1c:	mov	w9, #0x41                  	// #65
  416b20:	strb	w9, [x8, #6]
  416b24:	mov	w9, #0xcf                  	// #207
  416b28:	strb	w9, [x8, #7]
  416b2c:	mov	w9, #0xb6                  	// #182
  416b30:	strb	w9, [x8, #8]
  416b34:	mov	w9, #0xc7                  	// #199
  416b38:	strb	w9, [x8, #9]
  416b3c:	mov	w9, #0x44                  	// #68
  416b40:	strb	w9, [x8, #10]
  416b44:	mov	w9, #0xb                   	// #11
  416b48:	strb	w9, [x8, #11]
  416b4c:	mov	w9, #0x29                  	// #41
  416b50:	strb	w9, [x8, #12]
  416b54:	mov	w9, #0xbb                  	// #187
  416b58:	strb	w9, [x8, #13]
  416b5c:	mov	w9, #0x8c                  	// #140
  416b60:	strb	w9, [x8, #14]
  416b64:	mov	w9, #0x4f                  	// #79
  416b68:	strb	w9, [x8, #15]
  416b6c:	ldur	x0, [x29, #-88]
  416b70:	ldur	x1, [x29, #-80]
  416b74:	adrp	x2, 444000 <_fini+0x3c30>
  416b78:	add	x2, x2, #0x8eb
  416b7c:	sub	x3, x29, #0x40
  416b80:	bl	407538 <efi_get_variable_string@plt>
  416b84:	stur	w0, [x29, #-68]
  416b88:	ldur	w9, [x29, #-68]
  416b8c:	cmp	w9, #0x0
  416b90:	cset	w9, ge  // ge = tcont
  416b94:	tbnz	w9, #0, 416c24 <property_get_reboot_to_boot_loader_entry+0x298>
  416b98:	ldur	w8, [x29, #-68]
  416b9c:	mov	w9, #0xfffffffe            	// #-2
  416ba0:	cmp	w8, w9
  416ba4:	b.eq	416c20 <property_get_reboot_to_boot_loader_entry+0x294>  // b.none
  416ba8:	mov	w8, #0x4                   	// #4
  416bac:	stur	w8, [x29, #-92]
  416bb0:	ldur	w8, [x29, #-68]
  416bb4:	stur	w8, [x29, #-96]
  416bb8:	stur	wzr, [x29, #-100]
  416bbc:	ldur	w0, [x29, #-100]
  416bc0:	bl	406c08 <log_get_max_level_realm@plt>
  416bc4:	ldur	w8, [x29, #-92]
  416bc8:	and	w8, w8, #0x7
  416bcc:	cmp	w0, w8
  416bd0:	b.lt	416c04 <property_get_reboot_to_boot_loader_entry+0x278>  // b.tstop
  416bd4:	ldur	w8, [x29, #-100]
  416bd8:	ldur	w9, [x29, #-92]
  416bdc:	orr	w0, w9, w8, lsl #10
  416be0:	ldur	w1, [x29, #-96]
  416be4:	ldr	x2, [sp, #64]
  416be8:	mov	w3, #0xb75                 	// #2933
  416bec:	ldr	x4, [sp, #56]
  416bf0:	adrp	x5, 444000 <_fini+0x3c30>
  416bf4:	add	x5, x5, #0x927
  416bf8:	bl	406c18 <log_internal_realm@plt>
  416bfc:	str	w0, [sp, #44]
  416c00:	b	416c18 <property_get_reboot_to_boot_loader_entry+0x28c>
  416c04:	ldur	w0, [x29, #-96]
  416c08:	bl	406c28 <abs@plt>
  416c0c:	mov	w8, wzr
  416c10:	subs	w8, w8, w0, uxtb
  416c14:	str	w8, [sp, #44]
  416c18:	ldr	w8, [sp, #44]
  416c1c:	stur	w8, [x29, #-104]
  416c20:	b	416cb4 <property_get_reboot_to_boot_loader_entry+0x328>
  416c24:	ldur	x0, [x29, #-64]
  416c28:	bl	407558 <efi_loader_entry_name_valid@plt>
  416c2c:	tbnz	w0, #0, 416cb4 <property_get_reboot_to_boot_loader_entry+0x328>
  416c30:	mov	w8, #0x4                   	// #4
  416c34:	stur	w8, [x29, #-108]
  416c38:	stur	wzr, [x29, #-112]
  416c3c:	stur	wzr, [x29, #-116]
  416c40:	ldur	w0, [x29, #-116]
  416c44:	bl	406c08 <log_get_max_level_realm@plt>
  416c48:	ldur	w8, [x29, #-108]
  416c4c:	and	w8, w8, #0x7
  416c50:	cmp	w0, w8
  416c54:	b.lt	416c8c <property_get_reboot_to_boot_loader_entry+0x300>  // b.tstop
  416c58:	ldur	w8, [x29, #-116]
  416c5c:	ldur	w9, [x29, #-108]
  416c60:	orr	w0, w9, w8, lsl #10
  416c64:	ldur	w1, [x29, #-112]
  416c68:	ldur	x6, [x29, #-64]
  416c6c:	ldr	x2, [sp, #64]
  416c70:	mov	w3, #0xb77                 	// #2935
  416c74:	ldr	x4, [sp, #56]
  416c78:	adrp	x5, 444000 <_fini+0x3c30>
  416c7c:	add	x5, x5, #0x956
  416c80:	bl	406c18 <log_internal_realm@plt>
  416c84:	str	w0, [sp, #40]
  416c88:	b	416ca0 <property_get_reboot_to_boot_loader_entry+0x314>
  416c8c:	ldur	w0, [x29, #-112]
  416c90:	bl	406c28 <abs@plt>
  416c94:	mov	w8, wzr
  416c98:	subs	w8, w8, w0, uxtb
  416c9c:	str	w8, [sp, #40]
  416ca0:	ldr	w8, [sp, #40]
  416ca4:	str	w8, [sp, #120]
  416ca8:	ldur	x0, [x29, #-64]
  416cac:	bl	41f5f4 <mfree>
  416cb0:	stur	x0, [x29, #-64]
  416cb4:	b	416e90 <property_get_reboot_to_boot_loader_entry+0x504>
  416cb8:	ldur	w8, [x29, #-68]
  416cbc:	cmp	w8, #0x0
  416cc0:	cset	w8, ge  // ge = tcont
  416cc4:	tbnz	w8, #0, 416d44 <property_get_reboot_to_boot_loader_entry+0x3b8>
  416cc8:	mov	w8, #0x4                   	// #4
  416ccc:	str	w8, [sp, #116]
  416cd0:	ldur	w8, [x29, #-68]
  416cd4:	str	w8, [sp, #112]
  416cd8:	str	wzr, [sp, #108]
  416cdc:	ldr	w0, [sp, #108]
  416ce0:	bl	406c08 <log_get_max_level_realm@plt>
  416ce4:	ldr	w8, [sp, #116]
  416ce8:	and	w8, w8, #0x7
  416cec:	cmp	w0, w8
  416cf0:	b.lt	416d24 <property_get_reboot_to_boot_loader_entry+0x398>  // b.tstop
  416cf4:	ldr	w8, [sp, #108]
  416cf8:	ldr	w9, [sp, #116]
  416cfc:	orr	w0, w9, w8, lsl #10
  416d00:	ldr	w1, [sp, #112]
  416d04:	ldr	x2, [sp, #64]
  416d08:	mov	w3, #0xb7b                 	// #2939
  416d0c:	ldr	x4, [sp, #56]
  416d10:	adrp	x5, 444000 <_fini+0x3c30>
  416d14:	add	x5, x5, #0x995
  416d18:	bl	406c18 <log_internal_realm@plt>
  416d1c:	str	w0, [sp, #36]
  416d20:	b	416d38 <property_get_reboot_to_boot_loader_entry+0x3ac>
  416d24:	ldr	w0, [sp, #112]
  416d28:	bl	406c28 <abs@plt>
  416d2c:	mov	w8, wzr
  416d30:	subs	w8, w8, w0, uxtb
  416d34:	str	w8, [sp, #36]
  416d38:	ldr	w8, [sp, #36]
  416d3c:	str	w8, [sp, #104]
  416d40:	b	416e90 <property_get_reboot_to_boot_loader_entry+0x504>
  416d44:	ldur	w8, [x29, #-68]
  416d48:	cmp	w8, #0x0
  416d4c:	cset	w8, le
  416d50:	tbnz	w8, #0, 416e90 <property_get_reboot_to_boot_loader_entry+0x504>
  416d54:	adrp	x0, 444000 <_fini+0x3c30>
  416d58:	add	x0, x0, #0x9ce
  416d5c:	sub	x1, x29, #0x40
  416d60:	bl	407548 <read_one_line_file@plt>
  416d64:	stur	w0, [x29, #-68]
  416d68:	ldur	w8, [x29, #-68]
  416d6c:	cmp	w8, #0x0
  416d70:	cset	w8, ge  // ge = tcont
  416d74:	tbnz	w8, #0, 416e04 <property_get_reboot_to_boot_loader_entry+0x478>
  416d78:	ldur	w8, [x29, #-68]
  416d7c:	mov	w9, #0xfffffffe            	// #-2
  416d80:	cmp	w8, w9
  416d84:	b.eq	416e00 <property_get_reboot_to_boot_loader_entry+0x474>  // b.none
  416d88:	mov	w8, #0x4                   	// #4
  416d8c:	str	w8, [sp, #100]
  416d90:	ldur	w8, [x29, #-68]
  416d94:	str	w8, [sp, #96]
  416d98:	str	wzr, [sp, #92]
  416d9c:	ldr	w0, [sp, #92]
  416da0:	bl	406c08 <log_get_max_level_realm@plt>
  416da4:	ldr	w8, [sp, #100]
  416da8:	and	w8, w8, #0x7
  416dac:	cmp	w0, w8
  416db0:	b.lt	416de4 <property_get_reboot_to_boot_loader_entry+0x458>  // b.tstop
  416db4:	ldr	w8, [sp, #92]
  416db8:	ldr	w9, [sp, #100]
  416dbc:	orr	w0, w9, w8, lsl #10
  416dc0:	ldr	w1, [sp, #96]
  416dc4:	ldr	x2, [sp, #64]
  416dc8:	mov	w3, #0xb83                 	// #2947
  416dcc:	ldr	x4, [sp, #56]
  416dd0:	adrp	x5, 444000 <_fini+0x3c30>
  416dd4:	add	x5, x5, #0x9f7
  416dd8:	bl	406c18 <log_internal_realm@plt>
  416ddc:	str	w0, [sp, #32]
  416de0:	b	416df8 <property_get_reboot_to_boot_loader_entry+0x46c>
  416de4:	ldr	w0, [sp, #96]
  416de8:	bl	406c28 <abs@plt>
  416dec:	mov	w8, wzr
  416df0:	subs	w8, w8, w0, uxtb
  416df4:	str	w8, [sp, #32]
  416df8:	ldr	w8, [sp, #32]
  416dfc:	str	w8, [sp, #88]
  416e00:	b	416e90 <property_get_reboot_to_boot_loader_entry+0x504>
  416e04:	ldur	x0, [x29, #-64]
  416e08:	bl	407558 <efi_loader_entry_name_valid@plt>
  416e0c:	tbnz	w0, #0, 416e90 <property_get_reboot_to_boot_loader_entry+0x504>
  416e10:	mov	w8, #0x4                   	// #4
  416e14:	str	w8, [sp, #84]
  416e18:	str	wzr, [sp, #80]
  416e1c:	str	wzr, [sp, #76]
  416e20:	ldr	w0, [sp, #76]
  416e24:	bl	406c08 <log_get_max_level_realm@plt>
  416e28:	ldr	w8, [sp, #84]
  416e2c:	and	w8, w8, #0x7
  416e30:	cmp	w0, w8
  416e34:	b.lt	416e68 <property_get_reboot_to_boot_loader_entry+0x4dc>  // b.tstop
  416e38:	ldr	w8, [sp, #76]
  416e3c:	ldr	w9, [sp, #84]
  416e40:	orr	w0, w9, w8, lsl #10
  416e44:	ldr	w1, [sp, #80]
  416e48:	ldr	x2, [sp, #64]
  416e4c:	mov	w3, #0xb85                 	// #2949
  416e50:	ldr	x4, [sp, #56]
  416e54:	adrp	x5, 444000 <_fini+0x3c30>
  416e58:	add	x5, x5, #0xa33
  416e5c:	bl	406c18 <log_internal_realm@plt>
  416e60:	str	w0, [sp, #28]
  416e64:	b	416e7c <property_get_reboot_to_boot_loader_entry+0x4f0>
  416e68:	ldr	w0, [sp, #80]
  416e6c:	bl	406c28 <abs@plt>
  416e70:	mov	w8, wzr
  416e74:	subs	w8, w8, w0, uxtb
  416e78:	str	w8, [sp, #28]
  416e7c:	ldr	w8, [sp, #28]
  416e80:	str	w8, [sp, #72]
  416e84:	ldur	x0, [x29, #-64]
  416e88:	bl	41f5f4 <mfree>
  416e8c:	stur	x0, [x29, #-64]
  416e90:	ldur	x0, [x29, #-40]
  416e94:	sub	x8, x29, #0x40
  416e98:	ldur	x2, [x29, #-64]
  416e9c:	adrp	x1, 442000 <_fini+0x1c30>
  416ea0:	add	x1, x1, #0xf2
  416ea4:	str	x8, [sp, #16]
  416ea8:	bl	407508 <sd_bus_message_append@plt>
  416eac:	ldr	x8, [sp, #16]
  416eb0:	str	w0, [sp, #12]
  416eb4:	mov	x0, x8
  416eb8:	bl	4152e4 <freep>
  416ebc:	ldr	w0, [sp, #12]
  416ec0:	ldp	x29, x30, [sp, #240]
  416ec4:	add	sp, sp, #0x100
  416ec8:	ret

0000000000416ecc <property_get_boot_loader_entries>:
  416ecc:	sub	sp, sp, #0xd0
  416ed0:	stp	x29, x30, [sp, #192]
  416ed4:	add	x29, sp, #0xc0
  416ed8:	mov	x8, #0x58                  	// #88
  416edc:	mov	w9, wzr
  416ee0:	adrp	x10, 442000 <_fini+0x1c30>
  416ee4:	add	x10, x10, #0xd8e
  416ee8:	add	x10, x10, #0x3
  416eec:	adrp	x11, 444000 <_fini+0x3c30>
  416ef0:	add	x11, x11, #0xa74
  416ef4:	add	x12, sp, #0x28
  416ef8:	stur	x0, [x29, #-16]
  416efc:	stur	x1, [x29, #-24]
  416f00:	stur	x2, [x29, #-32]
  416f04:	stur	x3, [x29, #-40]
  416f08:	stur	x4, [x29, #-48]
  416f0c:	stur	x5, [x29, #-56]
  416f10:	stur	x6, [x29, #-64]
  416f14:	mov	x0, x12
  416f18:	mov	w1, w9
  416f1c:	mov	x2, x8
  416f20:	str	x10, [sp, #8]
  416f24:	str	x11, [sp]
  416f28:	bl	406c98 <memset@plt>
  416f2c:	ldur	x8, [x29, #-16]
  416f30:	cmp	x8, #0x0
  416f34:	cset	w9, ne  // ne = any
  416f38:	mov	w10, #0x1                   	// #1
  416f3c:	eor	w9, w9, #0x1
  416f40:	eor	w9, w9, w10
  416f44:	eor	w9, w9, w10
  416f48:	and	w9, w9, #0x1
  416f4c:	mov	w0, w9
  416f50:	sxtw	x8, w0
  416f54:	cbz	x8, 416f78 <property_get_boot_loader_entries+0xac>
  416f58:	mov	w8, wzr
  416f5c:	mov	w0, w8
  416f60:	adrp	x1, 444000 <_fini+0x3c30>
  416f64:	add	x1, x1, #0x393
  416f68:	ldr	x2, [sp, #8]
  416f6c:	mov	w3, #0xc2a                 	// #3114
  416f70:	ldr	x4, [sp]
  416f74:	bl	406c68 <log_assert_failed_realm@plt>
  416f78:	ldur	x8, [x29, #-48]
  416f7c:	cmp	x8, #0x0
  416f80:	cset	w9, ne  // ne = any
  416f84:	mov	w10, #0x1                   	// #1
  416f88:	eor	w9, w9, #0x1
  416f8c:	eor	w9, w9, w10
  416f90:	eor	w9, w9, w10
  416f94:	and	w9, w9, #0x1
  416f98:	mov	w0, w9
  416f9c:	sxtw	x8, w0
  416fa0:	cbz	x8, 416fc4 <property_get_boot_loader_entries+0xf8>
  416fa4:	mov	w8, wzr
  416fa8:	mov	w0, w8
  416fac:	adrp	x1, 444000 <_fini+0x3c30>
  416fb0:	add	x1, x1, #0x417
  416fb4:	ldr	x2, [sp, #8]
  416fb8:	mov	w3, #0xc2b                 	// #3115
  416fbc:	ldr	x4, [sp]
  416fc0:	bl	406c68 <log_assert_failed_realm@plt>
  416fc4:	ldur	x8, [x29, #-56]
  416fc8:	cmp	x8, #0x0
  416fcc:	cset	w9, ne  // ne = any
  416fd0:	mov	w10, #0x1                   	// #1
  416fd4:	eor	w9, w9, #0x1
  416fd8:	eor	w9, w9, w10
  416fdc:	eor	w9, w9, w10
  416fe0:	and	w9, w9, #0x1
  416fe4:	mov	w0, w9
  416fe8:	sxtw	x8, w0
  416fec:	cbz	x8, 417010 <property_get_boot_loader_entries+0x144>
  416ff0:	mov	w8, wzr
  416ff4:	mov	w0, w8
  416ff8:	adrp	x1, 444000 <_fini+0x3c30>
  416ffc:	add	x1, x1, #0x41d
  417000:	ldr	x2, [sp, #8]
  417004:	mov	w3, #0xc2c                 	// #3116
  417008:	ldr	x4, [sp]
  41700c:	bl	406c68 <log_assert_failed_realm@plt>
  417010:	mov	x8, xzr
  417014:	mov	x0, x8
  417018:	mov	x1, x8
  41701c:	add	x2, sp, #0x28
  417020:	bl	407568 <boot_entries_load_config_auto@plt>
  417024:	str	w0, [sp, #28]
  417028:	ldr	w9, [sp, #28]
  41702c:	cmp	w9, #0x0
  417030:	cset	w9, ge  // ge = tcont
  417034:	tbnz	w9, #0, 41705c <property_get_boot_loader_entries+0x190>
  417038:	ldr	w8, [sp, #28]
  41703c:	mov	w9, #0xffffff82            	// #-126
  417040:	cmp	w8, w9
  417044:	b.eq	41705c <property_get_boot_loader_entries+0x190>  // b.none
  417048:	ldr	w8, [sp, #28]
  41704c:	stur	w8, [x29, #-4]
  417050:	mov	w8, #0x1                   	// #1
  417054:	str	w8, [sp, #24]
  417058:	b	417140 <property_get_boot_loader_entries+0x274>
  41705c:	add	x0, sp, #0x28
  417060:	mov	w8, #0x1                   	// #1
  417064:	and	w1, w8, #0x1
  417068:	bl	407578 <boot_entries_augment_from_loader@plt>
  41706c:	ldur	x9, [x29, #-48]
  417070:	mov	x0, x9
  417074:	mov	w1, #0x61                  	// #97
  417078:	adrp	x2, 442000 <_fini+0x1c30>
  41707c:	add	x2, x2, #0xf2
  417080:	bl	407588 <sd_bus_message_open_container@plt>
  417084:	str	w0, [sp, #28]
  417088:	ldr	w8, [sp, #28]
  41708c:	cmp	w8, #0x0
  417090:	cset	w8, ge  // ge = tcont
  417094:	tbnz	w8, #0, 4170ac <property_get_boot_loader_entries+0x1e0>
  417098:	ldr	w8, [sp, #28]
  41709c:	stur	w8, [x29, #-4]
  4170a0:	mov	w8, #0x1                   	// #1
  4170a4:	str	w8, [sp, #24]
  4170a8:	b	417140 <property_get_boot_loader_entries+0x274>
  4170ac:	str	xzr, [sp, #32]
  4170b0:	ldr	x8, [sp, #32]
  4170b4:	ldr	x9, [sp, #112]
  4170b8:	cmp	x8, x9
  4170bc:	b.cs	41712c <property_get_boot_loader_entries+0x260>  // b.hs, b.nlast
  4170c0:	add	x8, sp, #0x28
  4170c4:	ldr	x8, [x8, #64]
  4170c8:	ldr	x9, [sp, #32]
  4170cc:	mov	x10, #0x70                  	// #112
  4170d0:	mul	x9, x10, x9
  4170d4:	add	x8, x8, x9
  4170d8:	str	x8, [sp, #16]
  4170dc:	ldur	x0, [x29, #-48]
  4170e0:	ldr	x8, [sp, #16]
  4170e4:	ldr	x2, [x8, #8]
  4170e8:	adrp	x1, 442000 <_fini+0x1c30>
  4170ec:	add	x1, x1, #0xf2
  4170f0:	bl	407508 <sd_bus_message_append@plt>
  4170f4:	str	w0, [sp, #28]
  4170f8:	ldr	w11, [sp, #28]
  4170fc:	cmp	w11, #0x0
  417100:	cset	w11, ge  // ge = tcont
  417104:	tbnz	w11, #0, 41711c <property_get_boot_loader_entries+0x250>
  417108:	ldr	w8, [sp, #28]
  41710c:	stur	w8, [x29, #-4]
  417110:	mov	w8, #0x1                   	// #1
  417114:	str	w8, [sp, #24]
  417118:	b	417140 <property_get_boot_loader_entries+0x274>
  41711c:	ldr	x8, [sp, #32]
  417120:	add	x8, x8, #0x1
  417124:	str	x8, [sp, #32]
  417128:	b	4170b0 <property_get_boot_loader_entries+0x1e4>
  41712c:	ldur	x0, [x29, #-48]
  417130:	bl	407598 <sd_bus_message_close_container@plt>
  417134:	stur	w0, [x29, #-4]
  417138:	mov	w8, #0x1                   	// #1
  41713c:	str	w8, [sp, #24]
  417140:	add	x0, sp, #0x28
  417144:	bl	4075a8 <boot_config_free@plt>
  417148:	ldur	w0, [x29, #-4]
  41714c:	ldp	x29, x30, [sp, #192]
  417150:	add	sp, sp, #0xd0
  417154:	ret

0000000000417158 <property_get_idle_hint>:
  417158:	sub	sp, sp, #0x70
  41715c:	stp	x29, x30, [sp, #96]
  417160:	add	x29, sp, #0x60
  417164:	adrp	x8, 442000 <_fini+0x1c30>
  417168:	add	x8, x8, #0xd8e
  41716c:	add	x8, x8, #0x3
  417170:	adrp	x9, 444000 <_fini+0x3c30>
  417174:	add	x9, x9, #0xaf7
  417178:	stur	x0, [x29, #-8]
  41717c:	stur	x1, [x29, #-16]
  417180:	stur	x2, [x29, #-24]
  417184:	stur	x3, [x29, #-32]
  417188:	stur	x4, [x29, #-40]
  41718c:	str	x5, [sp, #48]
  417190:	str	x6, [sp, #40]
  417194:	ldr	x10, [sp, #48]
  417198:	str	x10, [sp, #32]
  41719c:	str	x8, [sp, #24]
  4171a0:	str	x9, [sp, #16]
  4171a4:	ldur	x8, [x29, #-8]
  4171a8:	cmp	x8, #0x0
  4171ac:	cset	w9, ne  // ne = any
  4171b0:	mov	w10, #0x1                   	// #1
  4171b4:	eor	w9, w9, #0x1
  4171b8:	eor	w9, w9, w10
  4171bc:	eor	w9, w9, w10
  4171c0:	and	w9, w9, #0x1
  4171c4:	mov	w0, w9
  4171c8:	sxtw	x8, w0
  4171cc:	cbz	x8, 4171f0 <property_get_idle_hint+0x98>
  4171d0:	mov	w8, wzr
  4171d4:	mov	w0, w8
  4171d8:	adrp	x1, 444000 <_fini+0x3c30>
  4171dc:	add	x1, x1, #0x393
  4171e0:	ldr	x2, [sp, #24]
  4171e4:	mov	w3, #0xf9                  	// #249
  4171e8:	ldr	x4, [sp, #16]
  4171ec:	bl	406c68 <log_assert_failed_realm@plt>
  4171f0:	ldur	x8, [x29, #-40]
  4171f4:	cmp	x8, #0x0
  4171f8:	cset	w9, ne  // ne = any
  4171fc:	mov	w10, #0x1                   	// #1
  417200:	eor	w9, w9, #0x1
  417204:	eor	w9, w9, w10
  417208:	eor	w9, w9, w10
  41720c:	and	w9, w9, #0x1
  417210:	mov	w0, w9
  417214:	sxtw	x8, w0
  417218:	cbz	x8, 41723c <property_get_idle_hint+0xe4>
  41721c:	mov	w8, wzr
  417220:	mov	w0, w8
  417224:	adrp	x1, 444000 <_fini+0x3c30>
  417228:	add	x1, x1, #0x417
  41722c:	ldr	x2, [sp, #24]
  417230:	mov	w3, #0xfa                  	// #250
  417234:	ldr	x4, [sp, #16]
  417238:	bl	406c68 <log_assert_failed_realm@plt>
  41723c:	ldr	x8, [sp, #32]
  417240:	cmp	x8, #0x0
  417244:	cset	w9, ne  // ne = any
  417248:	mov	w10, #0x1                   	// #1
  41724c:	eor	w9, w9, #0x1
  417250:	eor	w9, w9, w10
  417254:	eor	w9, w9, w10
  417258:	and	w9, w9, #0x1
  41725c:	mov	w0, w9
  417260:	sxtw	x8, w0
  417264:	cbz	x8, 417288 <property_get_idle_hint+0x130>
  417268:	mov	w8, wzr
  41726c:	mov	w0, w8
  417270:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  417274:	add	x1, x1, #0x5ef
  417278:	ldr	x2, [sp, #24]
  41727c:	mov	w3, #0xfb                  	// #251
  417280:	ldr	x4, [sp, #16]
  417284:	bl	406c68 <log_assert_failed_realm@plt>
  417288:	ldur	x0, [x29, #-40]
  41728c:	ldr	x8, [sp, #32]
  417290:	str	x0, [sp, #8]
  417294:	mov	x0, x8
  417298:	mov	x8, xzr
  41729c:	mov	x1, x8
  4172a0:	bl	41273c <manager_get_idle_hint>
  4172a4:	cmp	w0, #0x0
  4172a8:	cset	w9, gt
  4172ac:	and	w2, w9, #0x1
  4172b0:	ldr	x0, [sp, #8]
  4172b4:	adrp	x1, 441000 <_fini+0xc30>
  4172b8:	add	x1, x1, #0xe0e
  4172bc:	bl	407508 <sd_bus_message_append@plt>
  4172c0:	ldp	x29, x30, [sp, #96]
  4172c4:	add	sp, sp, #0x70
  4172c8:	ret

00000000004172cc <property_get_idle_since_hint>:
  4172cc:	sub	sp, sp, #0x80
  4172d0:	stp	x29, x30, [sp, #112]
  4172d4:	add	x29, sp, #0x70
  4172d8:	adrp	x8, 442000 <_fini+0x1c30>
  4172dc:	add	x8, x8, #0xd8e
  4172e0:	add	x8, x8, #0x3
  4172e4:	adrp	x9, 444000 <_fini+0x3c30>
  4172e8:	add	x9, x9, #0xb70
  4172ec:	stur	x0, [x29, #-8]
  4172f0:	stur	x1, [x29, #-16]
  4172f4:	stur	x2, [x29, #-24]
  4172f8:	stur	x3, [x29, #-32]
  4172fc:	stur	x4, [x29, #-40]
  417300:	stur	x5, [x29, #-48]
  417304:	str	x6, [sp, #56]
  417308:	ldur	x10, [x29, #-48]
  41730c:	str	x10, [sp, #48]
  417310:	str	xzr, [sp, #32]
  417314:	str	xzr, [sp, #40]
  417318:	str	x8, [sp, #24]
  41731c:	str	x9, [sp, #16]
  417320:	ldur	x8, [x29, #-8]
  417324:	cmp	x8, #0x0
  417328:	cset	w9, ne  // ne = any
  41732c:	mov	w10, #0x1                   	// #1
  417330:	eor	w9, w9, #0x1
  417334:	eor	w9, w9, w10
  417338:	eor	w9, w9, w10
  41733c:	and	w9, w9, #0x1
  417340:	mov	w0, w9
  417344:	sxtw	x8, w0
  417348:	cbz	x8, 41736c <property_get_idle_since_hint+0xa0>
  41734c:	mov	w8, wzr
  417350:	mov	w0, w8
  417354:	adrp	x1, 444000 <_fini+0x3c30>
  417358:	add	x1, x1, #0x393
  41735c:	ldr	x2, [sp, #24]
  417360:	mov	w3, #0x10c                 	// #268
  417364:	ldr	x4, [sp, #16]
  417368:	bl	406c68 <log_assert_failed_realm@plt>
  41736c:	ldur	x8, [x29, #-40]
  417370:	cmp	x8, #0x0
  417374:	cset	w9, ne  // ne = any
  417378:	mov	w10, #0x1                   	// #1
  41737c:	eor	w9, w9, #0x1
  417380:	eor	w9, w9, w10
  417384:	eor	w9, w9, w10
  417388:	and	w9, w9, #0x1
  41738c:	mov	w0, w9
  417390:	sxtw	x8, w0
  417394:	cbz	x8, 4173b8 <property_get_idle_since_hint+0xec>
  417398:	mov	w8, wzr
  41739c:	mov	w0, w8
  4173a0:	adrp	x1, 444000 <_fini+0x3c30>
  4173a4:	add	x1, x1, #0x417
  4173a8:	ldr	x2, [sp, #24]
  4173ac:	mov	w3, #0x10d                 	// #269
  4173b0:	ldr	x4, [sp, #16]
  4173b4:	bl	406c68 <log_assert_failed_realm@plt>
  4173b8:	ldr	x8, [sp, #48]
  4173bc:	cmp	x8, #0x0
  4173c0:	cset	w9, ne  // ne = any
  4173c4:	mov	w10, #0x1                   	// #1
  4173c8:	eor	w9, w9, #0x1
  4173cc:	eor	w9, w9, w10
  4173d0:	eor	w9, w9, w10
  4173d4:	and	w9, w9, #0x1
  4173d8:	mov	w0, w9
  4173dc:	sxtw	x8, w0
  4173e0:	cbz	x8, 417404 <property_get_idle_since_hint+0x138>
  4173e4:	mov	w8, wzr
  4173e8:	mov	w0, w8
  4173ec:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4173f0:	add	x1, x1, #0x5ef
  4173f4:	ldr	x2, [sp, #24]
  4173f8:	mov	w3, #0x10e                 	// #270
  4173fc:	ldr	x4, [sp, #16]
  417400:	bl	406c68 <log_assert_failed_realm@plt>
  417404:	ldr	x0, [sp, #48]
  417408:	add	x1, sp, #0x20
  41740c:	bl	41273c <manager_get_idle_hint>
  417410:	ldur	x8, [x29, #-40]
  417414:	ldur	x9, [x29, #-32]
  417418:	mov	x0, x9
  41741c:	adrp	x1, 443000 <_fini+0x2c30>
  417420:	add	x1, x1, #0x285
  417424:	str	x8, [sp, #8]
  417428:	bl	407158 <strcmp@plt>
  41742c:	cbnz	w0, 41743c <property_get_idle_since_hint+0x170>
  417430:	ldr	x8, [sp, #32]
  417434:	str	x8, [sp]
  417438:	b	417444 <property_get_idle_since_hint+0x178>
  41743c:	ldr	x8, [sp, #40]
  417440:	str	x8, [sp]
  417444:	ldr	x8, [sp]
  417448:	ldr	x0, [sp, #8]
  41744c:	adrp	x1, 443000 <_fini+0x2c30>
  417450:	add	x1, x1, #0x250
  417454:	mov	x2, x8
  417458:	bl	407508 <sd_bus_message_append@plt>
  41745c:	ldp	x29, x30, [sp, #112]
  417460:	add	sp, sp, #0x80
  417464:	ret

0000000000417468 <property_get_inhibited>:
  417468:	sub	sp, sp, #0x80
  41746c:	stp	x29, x30, [sp, #112]
  417470:	add	x29, sp, #0x70
  417474:	adrp	x8, 442000 <_fini+0x1c30>
  417478:	add	x8, x8, #0xd8e
  41747c:	add	x8, x8, #0x3
  417480:	adrp	x9, 444000 <_fini+0x3c30>
  417484:	add	x9, x9, #0xbef
  417488:	stur	x0, [x29, #-8]
  41748c:	stur	x1, [x29, #-16]
  417490:	stur	x2, [x29, #-24]
  417494:	stur	x3, [x29, #-32]
  417498:	stur	x4, [x29, #-40]
  41749c:	stur	x5, [x29, #-48]
  4174a0:	str	x6, [sp, #56]
  4174a4:	ldur	x10, [x29, #-48]
  4174a8:	str	x10, [sp, #48]
  4174ac:	str	x8, [sp, #32]
  4174b0:	str	x9, [sp, #24]
  4174b4:	ldur	x8, [x29, #-8]
  4174b8:	cmp	x8, #0x0
  4174bc:	cset	w9, ne  // ne = any
  4174c0:	mov	w10, #0x1                   	// #1
  4174c4:	eor	w9, w9, #0x1
  4174c8:	eor	w9, w9, w10
  4174cc:	eor	w9, w9, w10
  4174d0:	and	w9, w9, #0x1
  4174d4:	mov	w0, w9
  4174d8:	sxtw	x8, w0
  4174dc:	cbz	x8, 417500 <property_get_inhibited+0x98>
  4174e0:	mov	w8, wzr
  4174e4:	mov	w0, w8
  4174e8:	adrp	x1, 444000 <_fini+0x3c30>
  4174ec:	add	x1, x1, #0x393
  4174f0:	ldr	x2, [sp, #32]
  4174f4:	mov	w3, #0x121                 	// #289
  4174f8:	ldr	x4, [sp, #24]
  4174fc:	bl	406c68 <log_assert_failed_realm@plt>
  417500:	ldur	x8, [x29, #-40]
  417504:	cmp	x8, #0x0
  417508:	cset	w9, ne  // ne = any
  41750c:	mov	w10, #0x1                   	// #1
  417510:	eor	w9, w9, #0x1
  417514:	eor	w9, w9, w10
  417518:	eor	w9, w9, w10
  41751c:	and	w9, w9, #0x1
  417520:	mov	w0, w9
  417524:	sxtw	x8, w0
  417528:	cbz	x8, 41754c <property_get_inhibited+0xe4>
  41752c:	mov	w8, wzr
  417530:	mov	w0, w8
  417534:	adrp	x1, 444000 <_fini+0x3c30>
  417538:	add	x1, x1, #0x417
  41753c:	ldr	x2, [sp, #32]
  417540:	mov	w3, #0x122                 	// #290
  417544:	ldr	x4, [sp, #24]
  417548:	bl	406c68 <log_assert_failed_realm@plt>
  41754c:	ldr	x8, [sp, #48]
  417550:	cmp	x8, #0x0
  417554:	cset	w9, ne  // ne = any
  417558:	mov	w10, #0x1                   	// #1
  41755c:	eor	w9, w9, #0x1
  417560:	eor	w9, w9, w10
  417564:	eor	w9, w9, w10
  417568:	and	w9, w9, #0x1
  41756c:	mov	w0, w9
  417570:	sxtw	x8, w0
  417574:	cbz	x8, 417598 <property_get_inhibited+0x130>
  417578:	mov	w8, wzr
  41757c:	mov	w0, w8
  417580:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  417584:	add	x1, x1, #0x5ef
  417588:	ldr	x2, [sp, #32]
  41758c:	mov	w3, #0x123                 	// #291
  417590:	ldr	x4, [sp, #24]
  417594:	bl	406c68 <log_assert_failed_realm@plt>
  417598:	ldr	x0, [sp, #48]
  41759c:	ldur	x8, [x29, #-32]
  4175a0:	str	x0, [sp, #16]
  4175a4:	mov	x0, x8
  4175a8:	adrp	x1, 443000 <_fini+0x2c30>
  4175ac:	add	x1, x1, #0x2aa
  4175b0:	bl	407158 <strcmp@plt>
  4175b4:	mov	w9, wzr
  4175b8:	mov	w10, #0x1                   	// #1
  4175bc:	cmp	w0, #0x0
  4175c0:	csel	w1, w9, w10, eq  // eq = none
  4175c4:	ldr	x0, [sp, #16]
  4175c8:	bl	426774 <manager_inhibit_what>
  4175cc:	str	w0, [sp, #44]
  4175d0:	ldur	x0, [x29, #-40]
  4175d4:	ldr	w9, [sp, #44]
  4175d8:	str	x0, [sp, #8]
  4175dc:	mov	w0, w9
  4175e0:	bl	426b8c <inhibit_what_to_string>
  4175e4:	ldr	x8, [sp, #8]
  4175e8:	str	x0, [sp]
  4175ec:	mov	x0, x8
  4175f0:	adrp	x1, 442000 <_fini+0x1c30>
  4175f4:	add	x1, x1, #0xf2
  4175f8:	ldr	x2, [sp]
  4175fc:	bl	407508 <sd_bus_message_append@plt>
  417600:	ldp	x29, x30, [sp, #112]
  417604:	add	sp, sp, #0x80
  417608:	ret

000000000041760c <property_get_handle_action>:
  41760c:	sub	sp, sp, #0x70
  417610:	stp	x29, x30, [sp, #96]
  417614:	add	x29, sp, #0x60
  417618:	adrp	x8, 442000 <_fini+0x1c30>
  41761c:	add	x8, x8, #0xd8e
  417620:	add	x8, x8, #0x3
  417624:	adrp	x9, 444000 <_fini+0x3c30>
  417628:	add	x9, x9, #0xc68
  41762c:	stur	x0, [x29, #-8]
  417630:	stur	x1, [x29, #-16]
  417634:	stur	x2, [x29, #-24]
  417638:	stur	x3, [x29, #-32]
  41763c:	stur	x4, [x29, #-40]
  417640:	str	x5, [sp, #48]
  417644:	str	x6, [sp, #40]
  417648:	ldr	x10, [sp, #48]
  41764c:	str	x10, [sp, #32]
  417650:	str	x8, [sp, #24]
  417654:	str	x9, [sp, #16]
  417658:	ldur	x8, [x29, #-8]
  41765c:	cmp	x8, #0x0
  417660:	cset	w9, ne  // ne = any
  417664:	mov	w10, #0x1                   	// #1
  417668:	eor	w9, w9, #0x1
  41766c:	eor	w9, w9, w10
  417670:	eor	w9, w9, w10
  417674:	and	w9, w9, #0x1
  417678:	mov	w0, w9
  41767c:	sxtw	x8, w0
  417680:	cbz	x8, 4176a4 <property_get_handle_action+0x98>
  417684:	mov	w8, wzr
  417688:	mov	w0, w8
  41768c:	adrp	x1, 444000 <_fini+0x3c30>
  417690:	add	x1, x1, #0x393
  417694:	ldr	x2, [sp, #24]
  417698:	mov	w3, #0x15d                 	// #349
  41769c:	ldr	x4, [sp, #16]
  4176a0:	bl	406c68 <log_assert_failed_realm@plt>
  4176a4:	ldur	x8, [x29, #-40]
  4176a8:	cmp	x8, #0x0
  4176ac:	cset	w9, ne  // ne = any
  4176b0:	mov	w10, #0x1                   	// #1
  4176b4:	eor	w9, w9, #0x1
  4176b8:	eor	w9, w9, w10
  4176bc:	eor	w9, w9, w10
  4176c0:	and	w9, w9, #0x1
  4176c4:	mov	w0, w9
  4176c8:	sxtw	x8, w0
  4176cc:	cbz	x8, 4176f0 <property_get_handle_action+0xe4>
  4176d0:	mov	w8, wzr
  4176d4:	mov	w0, w8
  4176d8:	adrp	x1, 444000 <_fini+0x3c30>
  4176dc:	add	x1, x1, #0x417
  4176e0:	ldr	x2, [sp, #24]
  4176e4:	mov	w3, #0x15d                 	// #349
  4176e8:	ldr	x4, [sp, #16]
  4176ec:	bl	406c68 <log_assert_failed_realm@plt>
  4176f0:	ldr	x8, [sp, #32]
  4176f4:	cmp	x8, #0x0
  4176f8:	cset	w9, ne  // ne = any
  4176fc:	mov	w10, #0x1                   	// #1
  417700:	eor	w9, w9, #0x1
  417704:	eor	w9, w9, w10
  417708:	eor	w9, w9, w10
  41770c:	and	w9, w9, #0x1
  417710:	mov	w0, w9
  417714:	sxtw	x8, w0
  417718:	cbz	x8, 41773c <property_get_handle_action+0x130>
  41771c:	mov	w8, wzr
  417720:	mov	w0, w8
  417724:	adrp	x1, 441000 <_fini+0xc30>
  417728:	add	x1, x1, #0xd41
  41772c:	ldr	x2, [sp, #24]
  417730:	mov	w3, #0x15d                 	// #349
  417734:	ldr	x4, [sp, #16]
  417738:	bl	406c68 <log_assert_failed_realm@plt>
  41773c:	ldur	x0, [x29, #-40]
  417740:	ldr	x8, [sp, #32]
  417744:	ldr	w9, [x8]
  417748:	str	x0, [sp, #8]
  41774c:	mov	w0, w9
  417750:	bl	40f30c <handle_action_to_string>
  417754:	ldr	x8, [sp, #8]
  417758:	str	x0, [sp]
  41775c:	mov	x0, x8
  417760:	adrp	x1, 442000 <_fini+0x1c30>
  417764:	add	x1, x1, #0xf2
  417768:	ldr	x2, [sp]
  41776c:	bl	407508 <sd_bus_message_append@plt>
  417770:	ldp	x29, x30, [sp, #96]
  417774:	add	sp, sp, #0x70
  417778:	ret

000000000041777c <property_get_preparing>:
  41777c:	sub	sp, sp, #0x70
  417780:	stp	x29, x30, [sp, #96]
  417784:	add	x29, sp, #0x60
  417788:	adrp	x8, 442000 <_fini+0x1c30>
  41778c:	add	x8, x8, #0xd8e
  417790:	add	x8, x8, #0x3
  417794:	adrp	x9, 444000 <_fini+0x3c30>
  417798:	add	x9, x9, #0xce5
  41779c:	stur	x0, [x29, #-8]
  4177a0:	stur	x1, [x29, #-16]
  4177a4:	stur	x2, [x29, #-24]
  4177a8:	stur	x3, [x29, #-32]
  4177ac:	stur	x4, [x29, #-40]
  4177b0:	str	x5, [sp, #48]
  4177b4:	str	x6, [sp, #40]
  4177b8:	ldr	x10, [sp, #48]
  4177bc:	str	x10, [sp, #32]
  4177c0:	str	x8, [sp, #16]
  4177c4:	str	x9, [sp, #8]
  4177c8:	ldur	x8, [x29, #-8]
  4177cc:	cmp	x8, #0x0
  4177d0:	cset	w9, ne  // ne = any
  4177d4:	mov	w10, #0x1                   	// #1
  4177d8:	eor	w9, w9, #0x1
  4177dc:	eor	w9, w9, w10
  4177e0:	eor	w9, w9, w10
  4177e4:	and	w9, w9, #0x1
  4177e8:	mov	w0, w9
  4177ec:	sxtw	x8, w0
  4177f0:	cbz	x8, 417814 <property_get_preparing+0x98>
  4177f4:	mov	w8, wzr
  4177f8:	mov	w0, w8
  4177fc:	adrp	x1, 444000 <_fini+0x3c30>
  417800:	add	x1, x1, #0x393
  417804:	ldr	x2, [sp, #16]
  417808:	mov	w3, #0x136                 	// #310
  41780c:	ldr	x4, [sp, #8]
  417810:	bl	406c68 <log_assert_failed_realm@plt>
  417814:	ldur	x8, [x29, #-40]
  417818:	cmp	x8, #0x0
  41781c:	cset	w9, ne  // ne = any
  417820:	mov	w10, #0x1                   	// #1
  417824:	eor	w9, w9, #0x1
  417828:	eor	w9, w9, w10
  41782c:	eor	w9, w9, w10
  417830:	and	w9, w9, #0x1
  417834:	mov	w0, w9
  417838:	sxtw	x8, w0
  41783c:	cbz	x8, 417860 <property_get_preparing+0xe4>
  417840:	mov	w8, wzr
  417844:	mov	w0, w8
  417848:	adrp	x1, 444000 <_fini+0x3c30>
  41784c:	add	x1, x1, #0x417
  417850:	ldr	x2, [sp, #16]
  417854:	mov	w3, #0x137                 	// #311
  417858:	ldr	x4, [sp, #8]
  41785c:	bl	406c68 <log_assert_failed_realm@plt>
  417860:	ldr	x8, [sp, #32]
  417864:	cmp	x8, #0x0
  417868:	cset	w9, ne  // ne = any
  41786c:	mov	w10, #0x1                   	// #1
  417870:	eor	w9, w9, #0x1
  417874:	eor	w9, w9, w10
  417878:	eor	w9, w9, w10
  41787c:	and	w9, w9, #0x1
  417880:	mov	w0, w9
  417884:	sxtw	x8, w0
  417888:	cbz	x8, 4178ac <property_get_preparing+0x130>
  41788c:	mov	w8, wzr
  417890:	mov	w0, w8
  417894:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  417898:	add	x1, x1, #0x5ef
  41789c:	ldr	x2, [sp, #16]
  4178a0:	mov	w3, #0x138                 	// #312
  4178a4:	ldr	x4, [sp, #8]
  4178a8:	bl	406c68 <log_assert_failed_realm@plt>
  4178ac:	ldur	x0, [x29, #-32]
  4178b0:	adrp	x1, 443000 <_fini+0x2c30>
  4178b4:	add	x1, x1, #0x391
  4178b8:	bl	407158 <strcmp@plt>
  4178bc:	cbnz	w0, 4178dc <property_get_preparing+0x160>
  4178c0:	ldr	x8, [sp, #32]
  4178c4:	ldr	w9, [x8, #248]
  4178c8:	tst	w9, #0x1
  4178cc:	cset	w9, ne  // ne = any
  4178d0:	and	w9, w9, #0x1
  4178d4:	strb	w9, [sp, #31]
  4178d8:	b	4178f4 <property_get_preparing+0x178>
  4178dc:	ldr	x8, [sp, #32]
  4178e0:	ldr	w9, [x8, #248]
  4178e4:	tst	w9, #0x2
  4178e8:	cset	w9, ne  // ne = any
  4178ec:	and	w9, w9, #0x1
  4178f0:	strb	w9, [sp, #31]
  4178f4:	ldur	x0, [x29, #-40]
  4178f8:	ldrb	w8, [sp, #31]
  4178fc:	and	w2, w8, #0x1
  417900:	adrp	x1, 441000 <_fini+0xc30>
  417904:	add	x1, x1, #0xe0e
  417908:	bl	407508 <sd_bus_message_append@plt>
  41790c:	ldp	x29, x30, [sp, #96]
  417910:	add	sp, sp, #0x70
  417914:	ret

0000000000417918 <property_get_scheduled_shutdown>:
  417918:	sub	sp, sp, #0x70
  41791c:	stp	x29, x30, [sp, #96]
  417920:	add	x29, sp, #0x60
  417924:	adrp	x8, 442000 <_fini+0x1c30>
  417928:	add	x8, x8, #0xd8e
  41792c:	add	x8, x8, #0x3
  417930:	adrp	x9, 444000 <_fini+0x3c30>
  417934:	add	x9, x9, #0xd5e
  417938:	stur	x0, [x29, #-16]
  41793c:	stur	x1, [x29, #-24]
  417940:	stur	x2, [x29, #-32]
  417944:	stur	x3, [x29, #-40]
  417948:	str	x4, [sp, #48]
  41794c:	str	x5, [sp, #40]
  417950:	str	x6, [sp, #32]
  417954:	ldr	x10, [sp, #40]
  417958:	str	x10, [sp, #24]
  41795c:	str	x8, [sp, #8]
  417960:	str	x9, [sp]
  417964:	ldur	x8, [x29, #-16]
  417968:	cmp	x8, #0x0
  41796c:	cset	w9, ne  // ne = any
  417970:	mov	w10, #0x1                   	// #1
  417974:	eor	w9, w9, #0x1
  417978:	eor	w9, w9, w10
  41797c:	eor	w9, w9, w10
  417980:	and	w9, w9, #0x1
  417984:	mov	w0, w9
  417988:	sxtw	x8, w0
  41798c:	cbz	x8, 4179b0 <property_get_scheduled_shutdown+0x98>
  417990:	mov	w8, wzr
  417994:	mov	w0, w8
  417998:	adrp	x1, 444000 <_fini+0x3c30>
  41799c:	add	x1, x1, #0x393
  4179a0:	ldr	x2, [sp, #8]
  4179a4:	mov	w3, #0x14e                 	// #334
  4179a8:	ldr	x4, [sp]
  4179ac:	bl	406c68 <log_assert_failed_realm@plt>
  4179b0:	ldr	x8, [sp, #48]
  4179b4:	cmp	x8, #0x0
  4179b8:	cset	w9, ne  // ne = any
  4179bc:	mov	w10, #0x1                   	// #1
  4179c0:	eor	w9, w9, #0x1
  4179c4:	eor	w9, w9, w10
  4179c8:	eor	w9, w9, w10
  4179cc:	and	w9, w9, #0x1
  4179d0:	mov	w0, w9
  4179d4:	sxtw	x8, w0
  4179d8:	cbz	x8, 4179fc <property_get_scheduled_shutdown+0xe4>
  4179dc:	mov	w8, wzr
  4179e0:	mov	w0, w8
  4179e4:	adrp	x1, 444000 <_fini+0x3c30>
  4179e8:	add	x1, x1, #0x417
  4179ec:	ldr	x2, [sp, #8]
  4179f0:	mov	w3, #0x14f                 	// #335
  4179f4:	ldr	x4, [sp]
  4179f8:	bl	406c68 <log_assert_failed_realm@plt>
  4179fc:	ldr	x8, [sp, #24]
  417a00:	cmp	x8, #0x0
  417a04:	cset	w9, ne  // ne = any
  417a08:	mov	w10, #0x1                   	// #1
  417a0c:	eor	w9, w9, #0x1
  417a10:	eor	w9, w9, w10
  417a14:	eor	w9, w9, w10
  417a18:	and	w9, w9, #0x1
  417a1c:	mov	w0, w9
  417a20:	sxtw	x8, w0
  417a24:	cbz	x8, 417a48 <property_get_scheduled_shutdown+0x130>
  417a28:	mov	w8, wzr
  417a2c:	mov	w0, w8
  417a30:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  417a34:	add	x1, x1, #0x5ef
  417a38:	ldr	x2, [sp, #8]
  417a3c:	mov	w3, #0x150                 	// #336
  417a40:	ldr	x4, [sp]
  417a44:	bl	406c68 <log_assert_failed_realm@plt>
  417a48:	ldr	x0, [sp, #48]
  417a4c:	mov	w1, #0x72                  	// #114
  417a50:	adrp	x2, 443000 <_fini+0x2c30>
  417a54:	add	x2, x2, #0x6a9
  417a58:	bl	407588 <sd_bus_message_open_container@plt>
  417a5c:	str	w0, [sp, #20]
  417a60:	ldr	w8, [sp, #20]
  417a64:	cmp	w8, #0x0
  417a68:	cset	w8, ge  // ge = tcont
  417a6c:	tbnz	w8, #0, 417a7c <property_get_scheduled_shutdown+0x164>
  417a70:	ldr	w8, [sp, #20]
  417a74:	stur	w8, [x29, #-4]
  417a78:	b	417ac8 <property_get_scheduled_shutdown+0x1b0>
  417a7c:	ldr	x0, [sp, #48]
  417a80:	ldr	x8, [sp, #24]
  417a84:	ldr	x2, [x8, #280]
  417a88:	ldr	x8, [sp, #24]
  417a8c:	ldr	x3, [x8, #288]
  417a90:	adrp	x1, 443000 <_fini+0x2c30>
  417a94:	add	x1, x1, #0x6a9
  417a98:	bl	407508 <sd_bus_message_append@plt>
  417a9c:	str	w0, [sp, #20]
  417aa0:	ldr	w9, [sp, #20]
  417aa4:	cmp	w9, #0x0
  417aa8:	cset	w9, ge  // ge = tcont
  417aac:	tbnz	w9, #0, 417abc <property_get_scheduled_shutdown+0x1a4>
  417ab0:	ldr	w8, [sp, #20]
  417ab4:	stur	w8, [x29, #-4]
  417ab8:	b	417ac8 <property_get_scheduled_shutdown+0x1b0>
  417abc:	ldr	x0, [sp, #48]
  417ac0:	bl	407598 <sd_bus_message_close_container@plt>
  417ac4:	stur	w0, [x29, #-4]
  417ac8:	ldur	w0, [x29, #-4]
  417acc:	ldp	x29, x30, [sp, #96]
  417ad0:	add	sp, sp, #0x70
  417ad4:	ret

0000000000417ad8 <property_get_docked>:
  417ad8:	sub	sp, sp, #0x70
  417adc:	stp	x29, x30, [sp, #96]
  417ae0:	add	x29, sp, #0x60
  417ae4:	adrp	x8, 442000 <_fini+0x1c30>
  417ae8:	add	x8, x8, #0xd8e
  417aec:	add	x8, x8, #0x3
  417af0:	adrp	x9, 444000 <_fini+0x3c30>
  417af4:	add	x9, x9, #0xde0
  417af8:	stur	x0, [x29, #-8]
  417afc:	stur	x1, [x29, #-16]
  417b00:	stur	x2, [x29, #-24]
  417b04:	stur	x3, [x29, #-32]
  417b08:	stur	x4, [x29, #-40]
  417b0c:	str	x5, [sp, #48]
  417b10:	str	x6, [sp, #40]
  417b14:	ldr	x10, [sp, #48]
  417b18:	str	x10, [sp, #32]
  417b1c:	str	x8, [sp, #24]
  417b20:	str	x9, [sp, #16]
  417b24:	ldur	x8, [x29, #-8]
  417b28:	cmp	x8, #0x0
  417b2c:	cset	w9, ne  // ne = any
  417b30:	mov	w10, #0x1                   	// #1
  417b34:	eor	w9, w9, #0x1
  417b38:	eor	w9, w9, w10
  417b3c:	eor	w9, w9, w10
  417b40:	and	w9, w9, #0x1
  417b44:	mov	w0, w9
  417b48:	sxtw	x8, w0
  417b4c:	cbz	x8, 417b70 <property_get_docked+0x98>
  417b50:	mov	w8, wzr
  417b54:	mov	w0, w8
  417b58:	adrp	x1, 444000 <_fini+0x3c30>
  417b5c:	add	x1, x1, #0x393
  417b60:	ldr	x2, [sp, #24]
  417b64:	mov	w3, #0x15e                 	// #350
  417b68:	ldr	x4, [sp, #16]
  417b6c:	bl	406c68 <log_assert_failed_realm@plt>
  417b70:	ldur	x8, [x29, #-40]
  417b74:	cmp	x8, #0x0
  417b78:	cset	w9, ne  // ne = any
  417b7c:	mov	w10, #0x1                   	// #1
  417b80:	eor	w9, w9, #0x1
  417b84:	eor	w9, w9, w10
  417b88:	eor	w9, w9, w10
  417b8c:	and	w9, w9, #0x1
  417b90:	mov	w0, w9
  417b94:	sxtw	x8, w0
  417b98:	cbz	x8, 417bbc <property_get_docked+0xe4>
  417b9c:	mov	w8, wzr
  417ba0:	mov	w0, w8
  417ba4:	adrp	x1, 444000 <_fini+0x3c30>
  417ba8:	add	x1, x1, #0x417
  417bac:	ldr	x2, [sp, #24]
  417bb0:	mov	w3, #0x15e                 	// #350
  417bb4:	ldr	x4, [sp, #16]
  417bb8:	bl	406c68 <log_assert_failed_realm@plt>
  417bbc:	ldr	x8, [sp, #32]
  417bc0:	cmp	x8, #0x0
  417bc4:	cset	w9, ne  // ne = any
  417bc8:	mov	w10, #0x1                   	// #1
  417bcc:	eor	w9, w9, #0x1
  417bd0:	eor	w9, w9, w10
  417bd4:	eor	w9, w9, w10
  417bd8:	and	w9, w9, #0x1
  417bdc:	mov	w0, w9
  417be0:	sxtw	x8, w0
  417be4:	cbz	x8, 417c08 <property_get_docked+0x130>
  417be8:	mov	w8, wzr
  417bec:	mov	w0, w8
  417bf0:	adrp	x1, 441000 <_fini+0xc30>
  417bf4:	add	x1, x1, #0xd41
  417bf8:	ldr	x2, [sp, #24]
  417bfc:	mov	w3, #0x15e                 	// #350
  417c00:	ldr	x4, [sp, #16]
  417c04:	bl	406c68 <log_assert_failed_realm@plt>
  417c08:	ldur	x0, [x29, #-40]
  417c0c:	ldr	x8, [sp, #32]
  417c10:	str	x0, [sp, #8]
  417c14:	mov	x0, x8
  417c18:	bl	413360 <manager_is_docked_or_external_displays>
  417c1c:	and	w2, w0, #0x1
  417c20:	ldr	x0, [sp, #8]
  417c24:	adrp	x1, 441000 <_fini+0xc30>
  417c28:	add	x1, x1, #0xe0e
  417c2c:	bl	407508 <sd_bus_message_append@plt>
  417c30:	ldp	x29, x30, [sp, #96]
  417c34:	add	sp, sp, #0x70
  417c38:	ret

0000000000417c3c <property_get_lid_closed>:
  417c3c:	sub	sp, sp, #0x70
  417c40:	stp	x29, x30, [sp, #96]
  417c44:	add	x29, sp, #0x60
  417c48:	adrp	x8, 442000 <_fini+0x1c30>
  417c4c:	add	x8, x8, #0xd8e
  417c50:	add	x8, x8, #0x3
  417c54:	adrp	x9, 444000 <_fini+0x3c30>
  417c58:	add	x9, x9, #0xe56
  417c5c:	stur	x0, [x29, #-8]
  417c60:	stur	x1, [x29, #-16]
  417c64:	stur	x2, [x29, #-24]
  417c68:	stur	x3, [x29, #-32]
  417c6c:	stur	x4, [x29, #-40]
  417c70:	str	x5, [sp, #48]
  417c74:	str	x6, [sp, #40]
  417c78:	ldr	x10, [sp, #48]
  417c7c:	str	x10, [sp, #32]
  417c80:	str	x8, [sp, #24]
  417c84:	str	x9, [sp, #16]
  417c88:	ldur	x8, [x29, #-8]
  417c8c:	cmp	x8, #0x0
  417c90:	cset	w9, ne  // ne = any
  417c94:	mov	w10, #0x1                   	// #1
  417c98:	eor	w9, w9, #0x1
  417c9c:	eor	w9, w9, w10
  417ca0:	eor	w9, w9, w10
  417ca4:	and	w9, w9, #0x1
  417ca8:	mov	w0, w9
  417cac:	sxtw	x8, w0
  417cb0:	cbz	x8, 417cd4 <property_get_lid_closed+0x98>
  417cb4:	mov	w8, wzr
  417cb8:	mov	w0, w8
  417cbc:	adrp	x1, 444000 <_fini+0x3c30>
  417cc0:	add	x1, x1, #0x393
  417cc4:	ldr	x2, [sp, #24]
  417cc8:	mov	w3, #0x15f                 	// #351
  417ccc:	ldr	x4, [sp, #16]
  417cd0:	bl	406c68 <log_assert_failed_realm@plt>
  417cd4:	ldur	x8, [x29, #-40]
  417cd8:	cmp	x8, #0x0
  417cdc:	cset	w9, ne  // ne = any
  417ce0:	mov	w10, #0x1                   	// #1
  417ce4:	eor	w9, w9, #0x1
  417ce8:	eor	w9, w9, w10
  417cec:	eor	w9, w9, w10
  417cf0:	and	w9, w9, #0x1
  417cf4:	mov	w0, w9
  417cf8:	sxtw	x8, w0
  417cfc:	cbz	x8, 417d20 <property_get_lid_closed+0xe4>
  417d00:	mov	w8, wzr
  417d04:	mov	w0, w8
  417d08:	adrp	x1, 444000 <_fini+0x3c30>
  417d0c:	add	x1, x1, #0x417
  417d10:	ldr	x2, [sp, #24]
  417d14:	mov	w3, #0x15f                 	// #351
  417d18:	ldr	x4, [sp, #16]
  417d1c:	bl	406c68 <log_assert_failed_realm@plt>
  417d20:	ldr	x8, [sp, #32]
  417d24:	cmp	x8, #0x0
  417d28:	cset	w9, ne  // ne = any
  417d2c:	mov	w10, #0x1                   	// #1
  417d30:	eor	w9, w9, #0x1
  417d34:	eor	w9, w9, w10
  417d38:	eor	w9, w9, w10
  417d3c:	and	w9, w9, #0x1
  417d40:	mov	w0, w9
  417d44:	sxtw	x8, w0
  417d48:	cbz	x8, 417d6c <property_get_lid_closed+0x130>
  417d4c:	mov	w8, wzr
  417d50:	mov	w0, w8
  417d54:	adrp	x1, 441000 <_fini+0xc30>
  417d58:	add	x1, x1, #0xd41
  417d5c:	ldr	x2, [sp, #24]
  417d60:	mov	w3, #0x15f                 	// #351
  417d64:	ldr	x4, [sp, #16]
  417d68:	bl	406c68 <log_assert_failed_realm@plt>
  417d6c:	ldur	x0, [x29, #-40]
  417d70:	ldr	x8, [sp, #32]
  417d74:	str	x0, [sp, #8]
  417d78:	mov	x0, x8
  417d7c:	bl	4132cc <manager_is_lid_closed>
  417d80:	and	w2, w0, #0x1
  417d84:	ldr	x0, [sp, #8]
  417d88:	adrp	x1, 441000 <_fini+0xc30>
  417d8c:	add	x1, x1, #0xe0e
  417d90:	bl	407508 <sd_bus_message_append@plt>
  417d94:	ldp	x29, x30, [sp, #96]
  417d98:	add	sp, sp, #0x70
  417d9c:	ret

0000000000417da0 <property_get_on_external_power>:
  417da0:	sub	sp, sp, #0x50
  417da4:	stp	x29, x30, [sp, #64]
  417da8:	add	x29, sp, #0x40
  417dac:	adrp	x8, 442000 <_fini+0x1c30>
  417db0:	add	x8, x8, #0xd8e
  417db4:	add	x8, x8, #0x3
  417db8:	stur	x0, [x29, #-8]
  417dbc:	stur	x1, [x29, #-16]
  417dc0:	stur	x2, [x29, #-24]
  417dc4:	str	x3, [sp, #32]
  417dc8:	str	x4, [sp, #24]
  417dcc:	str	x5, [sp, #16]
  417dd0:	str	x6, [sp, #8]
  417dd4:	str	x8, [sp]
  417dd8:	ldur	x8, [x29, #-8]
  417ddc:	cmp	x8, #0x0
  417de0:	cset	w9, ne  // ne = any
  417de4:	mov	w10, #0x1                   	// #1
  417de8:	eor	w9, w9, #0x1
  417dec:	eor	w9, w9, w10
  417df0:	eor	w9, w9, w10
  417df4:	and	w9, w9, #0x1
  417df8:	mov	w0, w9
  417dfc:	sxtw	x8, w0
  417e00:	cbz	x8, 417e28 <property_get_on_external_power+0x88>
  417e04:	mov	w8, wzr
  417e08:	mov	w0, w8
  417e0c:	adrp	x1, 444000 <_fini+0x3c30>
  417e10:	add	x1, x1, #0x393
  417e14:	ldr	x2, [sp]
  417e18:	mov	w3, #0x160                 	// #352
  417e1c:	adrp	x4, 444000 <_fini+0x3c30>
  417e20:	add	x4, x4, #0xed0
  417e24:	bl	406c68 <log_assert_failed_realm@plt>
  417e28:	ldr	x8, [sp, #24]
  417e2c:	cmp	x8, #0x0
  417e30:	cset	w9, ne  // ne = any
  417e34:	mov	w10, #0x1                   	// #1
  417e38:	eor	w9, w9, #0x1
  417e3c:	eor	w9, w9, w10
  417e40:	eor	w9, w9, w10
  417e44:	and	w9, w9, #0x1
  417e48:	mov	w0, w9
  417e4c:	sxtw	x8, w0
  417e50:	cbz	x8, 417e78 <property_get_on_external_power+0xd8>
  417e54:	mov	w8, wzr
  417e58:	mov	w0, w8
  417e5c:	adrp	x1, 444000 <_fini+0x3c30>
  417e60:	add	x1, x1, #0x417
  417e64:	ldr	x2, [sp]
  417e68:	mov	w3, #0x160                 	// #352
  417e6c:	adrp	x4, 444000 <_fini+0x3c30>
  417e70:	add	x4, x4, #0xed0
  417e74:	bl	406c68 <log_assert_failed_realm@plt>
  417e78:	ldr	x0, [sp, #24]
  417e7c:	adrp	x1, 441000 <_fini+0xc30>
  417e80:	add	x1, x1, #0xe0e
  417e84:	adrp	x2, 45f000 <logind_gperf_lookup.wordlist+0x388>
  417e88:	ldr	x2, [x2, #1384]
  417e8c:	bl	407508 <sd_bus_message_append@plt>
  417e90:	ldp	x29, x30, [sp, #64]
  417e94:	add	sp, sp, #0x50
  417e98:	ret

0000000000417e9c <property_get_hashmap_size>:
  417e9c:	sub	sp, sp, #0x70
  417ea0:	stp	x29, x30, [sp, #96]
  417ea4:	add	x29, sp, #0x60
  417ea8:	adrp	x8, 442000 <_fini+0x1c30>
  417eac:	add	x8, x8, #0xd8e
  417eb0:	add	x8, x8, #0x3
  417eb4:	adrp	x9, 444000 <_fini+0x3c30>
  417eb8:	add	x9, x9, #0xf51
  417ebc:	stur	x0, [x29, #-8]
  417ec0:	stur	x1, [x29, #-16]
  417ec4:	stur	x2, [x29, #-24]
  417ec8:	stur	x3, [x29, #-32]
  417ecc:	stur	x4, [x29, #-40]
  417ed0:	str	x5, [sp, #48]
  417ed4:	str	x6, [sp, #40]
  417ed8:	ldr	x10, [sp, #48]
  417edc:	str	x10, [sp, #32]
  417ee0:	str	x8, [sp, #24]
  417ee4:	str	x9, [sp, #16]
  417ee8:	ldur	x8, [x29, #-8]
  417eec:	cmp	x8, #0x0
  417ef0:	cset	w9, ne  // ne = any
  417ef4:	mov	w10, #0x1                   	// #1
  417ef8:	eor	w9, w9, #0x1
  417efc:	eor	w9, w9, w10
  417f00:	eor	w9, w9, w10
  417f04:	and	w9, w9, #0x1
  417f08:	mov	w0, w9
  417f0c:	sxtw	x8, w0
  417f10:	cbz	x8, 417f34 <property_get_hashmap_size+0x98>
  417f14:	mov	w8, wzr
  417f18:	mov	w0, w8
  417f1c:	adrp	x1, 444000 <_fini+0x3c30>
  417f20:	add	x1, x1, #0x393
  417f24:	ldr	x2, [sp, #24]
  417f28:	mov	w3, #0x162                 	// #354
  417f2c:	ldr	x4, [sp, #16]
  417f30:	bl	406c68 <log_assert_failed_realm@plt>
  417f34:	ldur	x8, [x29, #-40]
  417f38:	cmp	x8, #0x0
  417f3c:	cset	w9, ne  // ne = any
  417f40:	mov	w10, #0x1                   	// #1
  417f44:	eor	w9, w9, #0x1
  417f48:	eor	w9, w9, w10
  417f4c:	eor	w9, w9, w10
  417f50:	and	w9, w9, #0x1
  417f54:	mov	w0, w9
  417f58:	sxtw	x8, w0
  417f5c:	cbz	x8, 417f80 <property_get_hashmap_size+0xe4>
  417f60:	mov	w8, wzr
  417f64:	mov	w0, w8
  417f68:	adrp	x1, 444000 <_fini+0x3c30>
  417f6c:	add	x1, x1, #0x417
  417f70:	ldr	x2, [sp, #24]
  417f74:	mov	w3, #0x162                 	// #354
  417f78:	ldr	x4, [sp, #16]
  417f7c:	bl	406c68 <log_assert_failed_realm@plt>
  417f80:	ldr	x8, [sp, #32]
  417f84:	cmp	x8, #0x0
  417f88:	cset	w9, ne  // ne = any
  417f8c:	mov	w10, #0x1                   	// #1
  417f90:	eor	w9, w9, #0x1
  417f94:	eor	w9, w9, w10
  417f98:	eor	w9, w9, w10
  417f9c:	and	w9, w9, #0x1
  417fa0:	mov	w0, w9
  417fa4:	sxtw	x8, w0
  417fa8:	cbz	x8, 417fcc <property_get_hashmap_size+0x130>
  417fac:	mov	w8, wzr
  417fb0:	mov	w0, w8
  417fb4:	adrp	x1, 441000 <_fini+0xc30>
  417fb8:	add	x1, x1, #0xd41
  417fbc:	ldr	x2, [sp, #24]
  417fc0:	mov	w3, #0x162                 	// #354
  417fc4:	ldr	x4, [sp, #16]
  417fc8:	bl	406c68 <log_assert_failed_realm@plt>
  417fcc:	ldur	x0, [x29, #-40]
  417fd0:	ldr	x8, [sp, #32]
  417fd4:	ldr	x8, [x8]
  417fd8:	str	x0, [sp, #8]
  417fdc:	mov	x0, x8
  417fe0:	bl	421dd4 <hashmap_size>
  417fe4:	mov	w8, w0
  417fe8:	ubfx	x2, x8, #0, #32
  417fec:	ldr	x0, [sp, #8]
  417ff0:	adrp	x1, 443000 <_fini+0x2c30>
  417ff4:	add	x1, x1, #0x250
  417ff8:	bl	407508 <sd_bus_message_append@plt>
  417ffc:	ldp	x29, x30, [sp, #96]
  418000:	add	sp, sp, #0x70
  418004:	ret

0000000000418008 <property_get_compat_user_tasks_max>:
  418008:	sub	sp, sp, #0x50
  41800c:	stp	x29, x30, [sp, #64]
  418010:	add	x29, sp, #0x40
  418014:	adrp	x8, 442000 <_fini+0x1c30>
  418018:	add	x8, x8, #0xd8e
  41801c:	add	x8, x8, #0x3
  418020:	stur	x0, [x29, #-8]
  418024:	stur	x1, [x29, #-16]
  418028:	stur	x2, [x29, #-24]
  41802c:	str	x3, [sp, #32]
  418030:	str	x4, [sp, #24]
  418034:	str	x5, [sp, #16]
  418038:	str	x6, [sp, #8]
  41803c:	str	x8, [sp]
  418040:	ldur	x8, [x29, #-8]
  418044:	cmp	x8, #0x0
  418048:	cset	w9, ne  // ne = any
  41804c:	mov	w10, #0x1                   	// #1
  418050:	eor	w9, w9, #0x1
  418054:	eor	w9, w9, w10
  418058:	eor	w9, w9, w10
  41805c:	and	w9, w9, #0x1
  418060:	mov	w0, w9
  418064:	sxtw	x8, w0
  418068:	cbz	x8, 418090 <property_get_compat_user_tasks_max+0x88>
  41806c:	mov	w8, wzr
  418070:	mov	w0, w8
  418074:	adrp	x1, 444000 <_fini+0x3c30>
  418078:	add	x1, x1, #0x393
  41807c:	ldr	x2, [sp]
  418080:	mov	w3, #0x161                 	// #353
  418084:	adrp	x4, 444000 <_fini+0x3c30>
  418088:	add	x4, x4, #0xfcd
  41808c:	bl	406c68 <log_assert_failed_realm@plt>
  418090:	ldr	x8, [sp, #24]
  418094:	cmp	x8, #0x0
  418098:	cset	w9, ne  // ne = any
  41809c:	mov	w10, #0x1                   	// #1
  4180a0:	eor	w9, w9, #0x1
  4180a4:	eor	w9, w9, w10
  4180a8:	eor	w9, w9, w10
  4180ac:	and	w9, w9, #0x1
  4180b0:	mov	w0, w9
  4180b4:	sxtw	x8, w0
  4180b8:	cbz	x8, 4180e0 <property_get_compat_user_tasks_max+0xd8>
  4180bc:	mov	w8, wzr
  4180c0:	mov	w0, w8
  4180c4:	adrp	x1, 444000 <_fini+0x3c30>
  4180c8:	add	x1, x1, #0x417
  4180cc:	ldr	x2, [sp]
  4180d0:	mov	w3, #0x161                 	// #353
  4180d4:	adrp	x4, 444000 <_fini+0x3c30>
  4180d8:	add	x4, x4, #0xfcd
  4180dc:	bl	406c68 <log_assert_failed_realm@plt>
  4180e0:	ldr	x0, [sp, #24]
  4180e4:	adrp	x1, 443000 <_fini+0x2c30>
  4180e8:	add	x1, x1, #0x250
  4180ec:	mov	x2, #0xffffffffffffffff    	// #-1
  4180f0:	bl	407508 <sd_bus_message_append@plt>
  4180f4:	ldp	x29, x30, [sp, #64]
  4180f8:	add	sp, sp, #0x50
  4180fc:	ret

0000000000418100 <method_get_session>:
  418100:	sub	sp, sp, #0x60
  418104:	stp	x29, x30, [sp, #80]
  418108:	add	x29, sp, #0x50
  41810c:	mov	x8, xzr
  418110:	adrp	x9, 442000 <_fini+0x1c30>
  418114:	add	x9, x9, #0xd8e
  418118:	add	x9, x9, #0x3
  41811c:	stur	x0, [x29, #-16]
  418120:	stur	x1, [x29, #-24]
  418124:	stur	x2, [x29, #-32]
  418128:	str	x8, [sp, #40]
  41812c:	ldur	x8, [x29, #-24]
  418130:	str	x8, [sp, #32]
  418134:	str	x9, [sp]
  418138:	ldur	x8, [x29, #-16]
  41813c:	cmp	x8, #0x0
  418140:	cset	w9, ne  // ne = any
  418144:	mov	w10, #0x1                   	// #1
  418148:	eor	w9, w9, #0x1
  41814c:	eor	w9, w9, w10
  418150:	eor	w9, w9, w10
  418154:	and	w9, w9, #0x1
  418158:	mov	w0, w9
  41815c:	sxtw	x8, w0
  418160:	cbz	x8, 418188 <method_get_session+0x88>
  418164:	mov	w8, wzr
  418168:	mov	w0, w8
  41816c:	adrp	x1, 443000 <_fini+0x2c30>
  418170:	add	x1, x1, #0x812
  418174:	ldr	x2, [sp]
  418178:	mov	w3, #0x16b                 	// #363
  41817c:	adrp	x4, 445000 <_fini+0x4c30>
  418180:	add	x4, x4, #0x52
  418184:	bl	406c68 <log_assert_failed_realm@plt>
  418188:	ldr	x8, [sp, #32]
  41818c:	cmp	x8, #0x0
  418190:	cset	w9, ne  // ne = any
  418194:	mov	w10, #0x1                   	// #1
  418198:	eor	w9, w9, #0x1
  41819c:	eor	w9, w9, w10
  4181a0:	eor	w9, w9, w10
  4181a4:	and	w9, w9, #0x1
  4181a8:	mov	w0, w9
  4181ac:	sxtw	x8, w0
  4181b0:	cbz	x8, 4181d8 <method_get_session+0xd8>
  4181b4:	mov	w8, wzr
  4181b8:	mov	w0, w8
  4181bc:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4181c0:	add	x1, x1, #0x5ef
  4181c4:	ldr	x2, [sp]
  4181c8:	mov	w3, #0x16c                 	// #364
  4181cc:	adrp	x4, 445000 <_fini+0x4c30>
  4181d0:	add	x4, x4, #0x52
  4181d4:	bl	406c68 <log_assert_failed_realm@plt>
  4181d8:	ldur	x0, [x29, #-16]
  4181dc:	adrp	x1, 442000 <_fini+0x1c30>
  4181e0:	add	x1, x1, #0xf2
  4181e4:	add	x2, sp, #0x18
  4181e8:	bl	4074c8 <sd_bus_message_read@plt>
  4181ec:	str	w0, [sp, #12]
  4181f0:	ldr	w8, [sp, #12]
  4181f4:	cmp	w8, #0x0
  4181f8:	cset	w8, ge  // ge = tcont
  4181fc:	tbnz	w8, #0, 418214 <method_get_session+0x114>
  418200:	ldr	w8, [sp, #12]
  418204:	stur	w8, [x29, #-4]
  418208:	mov	w8, #0x1                   	// #1
  41820c:	str	w8, [sp, #8]
  418210:	b	41829c <method_get_session+0x19c>
  418214:	ldr	x0, [sp, #32]
  418218:	ldur	x1, [x29, #-16]
  41821c:	ldr	x2, [sp, #24]
  418220:	ldur	x3, [x29, #-32]
  418224:	add	x4, sp, #0x10
  418228:	bl	414498 <manager_get_session_from_creds>
  41822c:	str	w0, [sp, #12]
  418230:	ldr	w8, [sp, #12]
  418234:	cmp	w8, #0x0
  418238:	cset	w8, ge  // ge = tcont
  41823c:	tbnz	w8, #0, 418254 <method_get_session+0x154>
  418240:	ldr	w8, [sp, #12]
  418244:	stur	w8, [x29, #-4]
  418248:	mov	w8, #0x1                   	// #1
  41824c:	str	w8, [sp, #8]
  418250:	b	41829c <method_get_session+0x19c>
  418254:	ldr	x0, [sp, #16]
  418258:	bl	42ee0c <session_bus_path>
  41825c:	str	x0, [sp, #40]
  418260:	ldr	x8, [sp, #40]
  418264:	cbnz	x8, 41827c <method_get_session+0x17c>
  418268:	mov	w8, #0xfffffff4            	// #-12
  41826c:	stur	w8, [x29, #-4]
  418270:	mov	w8, #0x1                   	// #1
  418274:	str	w8, [sp, #8]
  418278:	b	41829c <method_get_session+0x19c>
  41827c:	ldur	x0, [x29, #-16]
  418280:	ldr	x2, [sp, #40]
  418284:	adrp	x1, 443000 <_fini+0x2c30>
  418288:	add	x1, x1, #0x465
  41828c:	bl	4075b8 <sd_bus_reply_method_return@plt>
  418290:	stur	w0, [x29, #-4]
  418294:	mov	w8, #0x1                   	// #1
  418298:	str	w8, [sp, #8]
  41829c:	add	x0, sp, #0x28
  4182a0:	bl	4152e4 <freep>
  4182a4:	ldur	w0, [x29, #-4]
  4182a8:	ldp	x29, x30, [sp, #80]
  4182ac:	add	sp, sp, #0x60
  4182b0:	ret

00000000004182b4 <method_get_session_by_pid>:
  4182b4:	sub	sp, sp, #0x60
  4182b8:	stp	x29, x30, [sp, #80]
  4182bc:	add	x29, sp, #0x50
  4182c0:	mov	x8, xzr
  4182c4:	adrp	x9, 442000 <_fini+0x1c30>
  4182c8:	add	x9, x9, #0xd8e
  4182cc:	add	x9, x9, #0x3
  4182d0:	stur	x0, [x29, #-16]
  4182d4:	stur	x1, [x29, #-24]
  4182d8:	stur	x2, [x29, #-32]
  4182dc:	str	x8, [sp, #40]
  4182e0:	str	x8, [sp, #32]
  4182e4:	ldur	x8, [x29, #-24]
  4182e8:	str	x8, [sp, #24]
  4182ec:	str	x9, [sp]
  4182f0:	ldur	x8, [x29, #-16]
  4182f4:	cmp	x8, #0x0
  4182f8:	cset	w9, ne  // ne = any
  4182fc:	mov	w10, #0x1                   	// #1
  418300:	eor	w9, w9, #0x1
  418304:	eor	w9, w9, w10
  418308:	eor	w9, w9, w10
  41830c:	and	w9, w9, #0x1
  418310:	mov	w0, w9
  418314:	sxtw	x8, w0
  418318:	cbz	x8, 418340 <method_get_session_by_pid+0x8c>
  41831c:	mov	w8, wzr
  418320:	mov	w0, w8
  418324:	adrp	x1, 443000 <_fini+0x2c30>
  418328:	add	x1, x1, #0x812
  41832c:	ldr	x2, [sp]
  418330:	mov	w3, #0x187                 	// #391
  418334:	adrp	x4, 445000 <_fini+0x4c30>
  418338:	add	x4, x4, #0x93
  41833c:	bl	406c68 <log_assert_failed_realm@plt>
  418340:	ldr	x8, [sp, #24]
  418344:	cmp	x8, #0x0
  418348:	cset	w9, ne  // ne = any
  41834c:	mov	w10, #0x1                   	// #1
  418350:	eor	w9, w9, #0x1
  418354:	eor	w9, w9, w10
  418358:	eor	w9, w9, w10
  41835c:	and	w9, w9, #0x1
  418360:	mov	w0, w9
  418364:	sxtw	x8, w0
  418368:	cbz	x8, 418390 <method_get_session_by_pid+0xdc>
  41836c:	mov	w8, wzr
  418370:	mov	w0, w8
  418374:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  418378:	add	x1, x1, #0x5ef
  41837c:	ldr	x2, [sp]
  418380:	mov	w3, #0x188                 	// #392
  418384:	adrp	x4, 445000 <_fini+0x4c30>
  418388:	add	x4, x4, #0x93
  41838c:	bl	406c68 <log_assert_failed_realm@plt>
  418390:	ldur	x0, [x29, #-16]
  418394:	adrp	x1, 443000 <_fini+0x2c30>
  418398:	add	x1, x1, #0x1dd
  41839c:	add	x2, sp, #0x14
  4183a0:	bl	4074c8 <sd_bus_message_read@plt>
  4183a4:	str	w0, [sp, #16]
  4183a8:	ldr	w8, [sp, #16]
  4183ac:	cmp	w8, #0x0
  4183b0:	cset	w8, ge  // ge = tcont
  4183b4:	tbnz	w8, #0, 4183cc <method_get_session_by_pid+0x118>
  4183b8:	ldr	w8, [sp, #16]
  4183bc:	stur	w8, [x29, #-4]
  4183c0:	mov	w8, #0x1                   	// #1
  4183c4:	str	w8, [sp, #12]
  4183c8:	b	4184f4 <method_get_session_by_pid+0x240>
  4183cc:	ldr	w8, [sp, #20]
  4183d0:	cmp	w8, #0x0
  4183d4:	cset	w8, ge  // ge = tcont
  4183d8:	tbnz	w8, #0, 4183f0 <method_get_session_by_pid+0x13c>
  4183dc:	mov	w8, #0xffffffea            	// #-22
  4183e0:	stur	w8, [x29, #-4]
  4183e4:	mov	w8, #0x1                   	// #1
  4183e8:	str	w8, [sp, #12]
  4183ec:	b	4184f4 <method_get_session_by_pid+0x240>
  4183f0:	ldr	w8, [sp, #20]
  4183f4:	cbnz	w8, 418440 <method_get_session_by_pid+0x18c>
  4183f8:	ldr	x0, [sp, #24]
  4183fc:	ldur	x1, [x29, #-16]
  418400:	ldur	x3, [x29, #-32]
  418404:	mov	x8, xzr
  418408:	mov	x2, x8
  41840c:	add	x4, sp, #0x20
  418410:	bl	414498 <manager_get_session_from_creds>
  418414:	str	w0, [sp, #16]
  418418:	ldr	w9, [sp, #16]
  41841c:	cmp	w9, #0x0
  418420:	cset	w9, ge  // ge = tcont
  418424:	tbnz	w9, #0, 41843c <method_get_session_by_pid+0x188>
  418428:	ldr	w8, [sp, #16]
  41842c:	stur	w8, [x29, #-4]
  418430:	mov	w8, #0x1                   	// #1
  418434:	str	w8, [sp, #12]
  418438:	b	4184f4 <method_get_session_by_pid+0x240>
  41843c:	b	4184ac <method_get_session_by_pid+0x1f8>
  418440:	ldr	x0, [sp, #24]
  418444:	ldr	w1, [sp, #20]
  418448:	add	x2, sp, #0x20
  41844c:	bl	412450 <manager_get_session_by_pid>
  418450:	str	w0, [sp, #16]
  418454:	ldr	w8, [sp, #16]
  418458:	cmp	w8, #0x0
  41845c:	cset	w8, ge  // ge = tcont
  418460:	tbnz	w8, #0, 418478 <method_get_session_by_pid+0x1c4>
  418464:	ldr	w8, [sp, #16]
  418468:	stur	w8, [x29, #-4]
  41846c:	mov	w8, #0x1                   	// #1
  418470:	str	w8, [sp, #12]
  418474:	b	4184f4 <method_get_session_by_pid+0x240>
  418478:	ldr	x8, [sp, #32]
  41847c:	cbnz	x8, 4184ac <method_get_session_by_pid+0x1f8>
  418480:	ldur	x0, [x29, #-32]
  418484:	ldr	w3, [sp, #20]
  418488:	adrp	x1, 443000 <_fini+0x2c30>
  41848c:	add	x1, x1, #0xeff
  418490:	adrp	x2, 445000 <_fini+0x4c30>
  418494:	add	x2, x2, #0xdb
  418498:	bl	407468 <sd_bus_error_setf@plt>
  41849c:	stur	w0, [x29, #-4]
  4184a0:	mov	w8, #0x1                   	// #1
  4184a4:	str	w8, [sp, #12]
  4184a8:	b	4184f4 <method_get_session_by_pid+0x240>
  4184ac:	ldr	x0, [sp, #32]
  4184b0:	bl	42ee0c <session_bus_path>
  4184b4:	str	x0, [sp, #40]
  4184b8:	ldr	x8, [sp, #40]
  4184bc:	cbnz	x8, 4184d4 <method_get_session_by_pid+0x220>
  4184c0:	mov	w8, #0xfffffff4            	// #-12
  4184c4:	stur	w8, [x29, #-4]
  4184c8:	mov	w8, #0x1                   	// #1
  4184cc:	str	w8, [sp, #12]
  4184d0:	b	4184f4 <method_get_session_by_pid+0x240>
  4184d4:	ldur	x0, [x29, #-16]
  4184d8:	ldr	x2, [sp, #40]
  4184dc:	adrp	x1, 443000 <_fini+0x2c30>
  4184e0:	add	x1, x1, #0x465
  4184e4:	bl	4075b8 <sd_bus_reply_method_return@plt>
  4184e8:	stur	w0, [x29, #-4]
  4184ec:	mov	w8, #0x1                   	// #1
  4184f0:	str	w8, [sp, #12]
  4184f4:	add	x0, sp, #0x28
  4184f8:	bl	4152e4 <freep>
  4184fc:	ldur	w0, [x29, #-4]
  418500:	ldp	x29, x30, [sp, #80]
  418504:	add	sp, sp, #0x60
  418508:	ret

000000000041850c <method_get_user>:
  41850c:	sub	sp, sp, #0x60
  418510:	stp	x29, x30, [sp, #80]
  418514:	add	x29, sp, #0x50
  418518:	mov	x8, xzr
  41851c:	adrp	x9, 442000 <_fini+0x1c30>
  418520:	add	x9, x9, #0xd8e
  418524:	add	x9, x9, #0x3
  418528:	stur	x0, [x29, #-16]
  41852c:	stur	x1, [x29, #-24]
  418530:	stur	x2, [x29, #-32]
  418534:	str	x8, [sp, #40]
  418538:	ldur	x8, [x29, #-24]
  41853c:	str	x8, [sp, #32]
  418540:	str	x9, [sp]
  418544:	ldur	x8, [x29, #-16]
  418548:	cmp	x8, #0x0
  41854c:	cset	w9, ne  // ne = any
  418550:	mov	w10, #0x1                   	// #1
  418554:	eor	w9, w9, #0x1
  418558:	eor	w9, w9, w10
  41855c:	eor	w9, w9, w10
  418560:	and	w9, w9, #0x1
  418564:	mov	w0, w9
  418568:	sxtw	x8, w0
  41856c:	cbz	x8, 418594 <method_get_user+0x88>
  418570:	mov	w8, wzr
  418574:	mov	w0, w8
  418578:	adrp	x1, 443000 <_fini+0x2c30>
  41857c:	add	x1, x1, #0x812
  418580:	ldr	x2, [sp]
  418584:	mov	w3, #0x1ae                 	// #430
  418588:	adrp	x4, 445000 <_fini+0x4c30>
  41858c:	add	x4, x4, #0x107
  418590:	bl	406c68 <log_assert_failed_realm@plt>
  418594:	ldr	x8, [sp, #32]
  418598:	cmp	x8, #0x0
  41859c:	cset	w9, ne  // ne = any
  4185a0:	mov	w10, #0x1                   	// #1
  4185a4:	eor	w9, w9, #0x1
  4185a8:	eor	w9, w9, w10
  4185ac:	eor	w9, w9, w10
  4185b0:	and	w9, w9, #0x1
  4185b4:	mov	w0, w9
  4185b8:	sxtw	x8, w0
  4185bc:	cbz	x8, 4185e4 <method_get_user+0xd8>
  4185c0:	mov	w8, wzr
  4185c4:	mov	w0, w8
  4185c8:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4185cc:	add	x1, x1, #0x5ef
  4185d0:	ldr	x2, [sp]
  4185d4:	mov	w3, #0x1af                 	// #431
  4185d8:	adrp	x4, 445000 <_fini+0x4c30>
  4185dc:	add	x4, x4, #0x107
  4185e0:	bl	406c68 <log_assert_failed_realm@plt>
  4185e4:	ldur	x0, [x29, #-16]
  4185e8:	adrp	x1, 443000 <_fini+0x2c30>
  4185ec:	add	x1, x1, #0x1dd
  4185f0:	add	x2, sp, #0x1c
  4185f4:	bl	4074c8 <sd_bus_message_read@plt>
  4185f8:	str	w0, [sp, #12]
  4185fc:	ldr	w8, [sp, #12]
  418600:	cmp	w8, #0x0
  418604:	cset	w8, ge  // ge = tcont
  418608:	tbnz	w8, #0, 418620 <method_get_user+0x114>
  41860c:	ldr	w8, [sp, #12]
  418610:	stur	w8, [x29, #-4]
  418614:	mov	w8, #0x1                   	// #1
  418618:	str	w8, [sp, #8]
  41861c:	b	4186a8 <method_get_user+0x19c>
  418620:	ldr	x0, [sp, #32]
  418624:	ldur	x1, [x29, #-16]
  418628:	ldr	w2, [sp, #28]
  41862c:	ldur	x3, [x29, #-32]
  418630:	add	x4, sp, #0x10
  418634:	bl	4148cc <manager_get_user_from_creds>
  418638:	str	w0, [sp, #12]
  41863c:	ldr	w8, [sp, #12]
  418640:	cmp	w8, #0x0
  418644:	cset	w8, ge  // ge = tcont
  418648:	tbnz	w8, #0, 418660 <method_get_user+0x154>
  41864c:	ldr	w8, [sp, #12]
  418650:	stur	w8, [x29, #-4]
  418654:	mov	w8, #0x1                   	// #1
  418658:	str	w8, [sp, #8]
  41865c:	b	4186a8 <method_get_user+0x19c>
  418660:	ldr	x0, [sp, #16]
  418664:	bl	43900c <user_bus_path>
  418668:	str	x0, [sp, #40]
  41866c:	ldr	x8, [sp, #40]
  418670:	cbnz	x8, 418688 <method_get_user+0x17c>
  418674:	mov	w8, #0xfffffff4            	// #-12
  418678:	stur	w8, [x29, #-4]
  41867c:	mov	w8, #0x1                   	// #1
  418680:	str	w8, [sp, #8]
  418684:	b	4186a8 <method_get_user+0x19c>
  418688:	ldur	x0, [x29, #-16]
  41868c:	ldr	x2, [sp, #40]
  418690:	adrp	x1, 443000 <_fini+0x2c30>
  418694:	add	x1, x1, #0x465
  418698:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41869c:	stur	w0, [x29, #-4]
  4186a0:	mov	w8, #0x1                   	// #1
  4186a4:	str	w8, [sp, #8]
  4186a8:	add	x0, sp, #0x28
  4186ac:	bl	4152e4 <freep>
  4186b0:	ldur	w0, [x29, #-4]
  4186b4:	ldp	x29, x30, [sp, #80]
  4186b8:	add	sp, sp, #0x60
  4186bc:	ret

00000000004186c0 <method_get_user_by_pid>:
  4186c0:	sub	sp, sp, #0x60
  4186c4:	stp	x29, x30, [sp, #80]
  4186c8:	add	x29, sp, #0x50
  4186cc:	mov	x8, xzr
  4186d0:	adrp	x9, 442000 <_fini+0x1c30>
  4186d4:	add	x9, x9, #0xd8e
  4186d8:	add	x9, x9, #0x3
  4186dc:	stur	x0, [x29, #-16]
  4186e0:	stur	x1, [x29, #-24]
  4186e4:	stur	x2, [x29, #-32]
  4186e8:	str	x8, [sp, #40]
  4186ec:	ldur	x10, [x29, #-24]
  4186f0:	str	x10, [sp, #32]
  4186f4:	str	x8, [sp, #24]
  4186f8:	str	x9, [sp]
  4186fc:	ldur	x8, [x29, #-16]
  418700:	cmp	x8, #0x0
  418704:	cset	w9, ne  // ne = any
  418708:	mov	w10, #0x1                   	// #1
  41870c:	eor	w9, w9, #0x1
  418710:	eor	w9, w9, w10
  418714:	eor	w9, w9, w10
  418718:	and	w9, w9, #0x1
  41871c:	mov	w0, w9
  418720:	sxtw	x8, w0
  418724:	cbz	x8, 41874c <method_get_user_by_pid+0x8c>
  418728:	mov	w8, wzr
  41872c:	mov	w0, w8
  418730:	adrp	x1, 443000 <_fini+0x2c30>
  418734:	add	x1, x1, #0x812
  418738:	ldr	x2, [sp]
  41873c:	mov	w3, #0x1c7                 	// #455
  418740:	adrp	x4, 445000 <_fini+0x4c30>
  418744:	add	x4, x4, #0x145
  418748:	bl	406c68 <log_assert_failed_realm@plt>
  41874c:	ldr	x8, [sp, #32]
  418750:	cmp	x8, #0x0
  418754:	cset	w9, ne  // ne = any
  418758:	mov	w10, #0x1                   	// #1
  41875c:	eor	w9, w9, #0x1
  418760:	eor	w9, w9, w10
  418764:	eor	w9, w9, w10
  418768:	and	w9, w9, #0x1
  41876c:	mov	w0, w9
  418770:	sxtw	x8, w0
  418774:	cbz	x8, 41879c <method_get_user_by_pid+0xdc>
  418778:	mov	w8, wzr
  41877c:	mov	w0, w8
  418780:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  418784:	add	x1, x1, #0x5ef
  418788:	ldr	x2, [sp]
  41878c:	mov	w3, #0x1c8                 	// #456
  418790:	adrp	x4, 445000 <_fini+0x4c30>
  418794:	add	x4, x4, #0x145
  418798:	bl	406c68 <log_assert_failed_realm@plt>
  41879c:	ldur	x0, [x29, #-16]
  4187a0:	adrp	x1, 443000 <_fini+0x2c30>
  4187a4:	add	x1, x1, #0x1dd
  4187a8:	add	x2, sp, #0x14
  4187ac:	bl	4074c8 <sd_bus_message_read@plt>
  4187b0:	str	w0, [sp, #16]
  4187b4:	ldr	w8, [sp, #16]
  4187b8:	cmp	w8, #0x0
  4187bc:	cset	w8, ge  // ge = tcont
  4187c0:	tbnz	w8, #0, 4187d8 <method_get_user_by_pid+0x118>
  4187c4:	ldr	w8, [sp, #16]
  4187c8:	stur	w8, [x29, #-4]
  4187cc:	mov	w8, #0x1                   	// #1
  4187d0:	str	w8, [sp, #12]
  4187d4:	b	4188fc <method_get_user_by_pid+0x23c>
  4187d8:	ldr	w8, [sp, #20]
  4187dc:	cmp	w8, #0x0
  4187e0:	cset	w8, ge  // ge = tcont
  4187e4:	tbnz	w8, #0, 4187fc <method_get_user_by_pid+0x13c>
  4187e8:	mov	w8, #0xffffffea            	// #-22
  4187ec:	stur	w8, [x29, #-4]
  4187f0:	mov	w8, #0x1                   	// #1
  4187f4:	str	w8, [sp, #12]
  4187f8:	b	4188fc <method_get_user_by_pid+0x23c>
  4187fc:	ldr	w8, [sp, #20]
  418800:	cbnz	w8, 418848 <method_get_user_by_pid+0x188>
  418804:	ldr	x0, [sp, #32]
  418808:	ldur	x1, [x29, #-16]
  41880c:	ldur	x3, [x29, #-32]
  418810:	mov	w2, #0xffffffff            	// #-1
  418814:	add	x4, sp, #0x18
  418818:	bl	4148cc <manager_get_user_from_creds>
  41881c:	str	w0, [sp, #16]
  418820:	ldr	w8, [sp, #16]
  418824:	cmp	w8, #0x0
  418828:	cset	w8, ge  // ge = tcont
  41882c:	tbnz	w8, #0, 418844 <method_get_user_by_pid+0x184>
  418830:	ldr	w8, [sp, #16]
  418834:	stur	w8, [x29, #-4]
  418838:	mov	w8, #0x1                   	// #1
  41883c:	str	w8, [sp, #12]
  418840:	b	4188fc <method_get_user_by_pid+0x23c>
  418844:	b	4188b4 <method_get_user_by_pid+0x1f4>
  418848:	ldr	x0, [sp, #32]
  41884c:	ldr	w1, [sp, #20]
  418850:	add	x2, sp, #0x18
  418854:	bl	412610 <manager_get_user_by_pid>
  418858:	str	w0, [sp, #16]
  41885c:	ldr	w8, [sp, #16]
  418860:	cmp	w8, #0x0
  418864:	cset	w8, ge  // ge = tcont
  418868:	tbnz	w8, #0, 418880 <method_get_user_by_pid+0x1c0>
  41886c:	ldr	w8, [sp, #16]
  418870:	stur	w8, [x29, #-4]
  418874:	mov	w8, #0x1                   	// #1
  418878:	str	w8, [sp, #12]
  41887c:	b	4188fc <method_get_user_by_pid+0x23c>
  418880:	ldr	x8, [sp, #24]
  418884:	cbnz	x8, 4188b4 <method_get_user_by_pid+0x1f4>
  418888:	ldur	x0, [x29, #-32]
  41888c:	ldr	w3, [sp, #20]
  418890:	adrp	x1, 443000 <_fini+0x2c30>
  418894:	add	x1, x1, #0xfaa
  418898:	adrp	x2, 445000 <_fini+0x4c30>
  41889c:	add	x2, x2, #0x18a
  4188a0:	bl	407468 <sd_bus_error_setf@plt>
  4188a4:	stur	w0, [x29, #-4]
  4188a8:	mov	w8, #0x1                   	// #1
  4188ac:	str	w8, [sp, #12]
  4188b0:	b	4188fc <method_get_user_by_pid+0x23c>
  4188b4:	ldr	x0, [sp, #24]
  4188b8:	bl	43900c <user_bus_path>
  4188bc:	str	x0, [sp, #40]
  4188c0:	ldr	x8, [sp, #40]
  4188c4:	cbnz	x8, 4188dc <method_get_user_by_pid+0x21c>
  4188c8:	mov	w8, #0xfffffff4            	// #-12
  4188cc:	stur	w8, [x29, #-4]
  4188d0:	mov	w8, #0x1                   	// #1
  4188d4:	str	w8, [sp, #12]
  4188d8:	b	4188fc <method_get_user_by_pid+0x23c>
  4188dc:	ldur	x0, [x29, #-16]
  4188e0:	ldr	x2, [sp, #40]
  4188e4:	adrp	x1, 443000 <_fini+0x2c30>
  4188e8:	add	x1, x1, #0x465
  4188ec:	bl	4075b8 <sd_bus_reply_method_return@plt>
  4188f0:	stur	w0, [x29, #-4]
  4188f4:	mov	w8, #0x1                   	// #1
  4188f8:	str	w8, [sp, #12]
  4188fc:	add	x0, sp, #0x28
  418900:	bl	4152e4 <freep>
  418904:	ldur	w0, [x29, #-4]
  418908:	ldp	x29, x30, [sp, #80]
  41890c:	add	sp, sp, #0x60
  418910:	ret

0000000000418914 <method_get_seat>:
  418914:	sub	sp, sp, #0x60
  418918:	stp	x29, x30, [sp, #80]
  41891c:	add	x29, sp, #0x50
  418920:	mov	x8, xzr
  418924:	adrp	x9, 442000 <_fini+0x1c30>
  418928:	add	x9, x9, #0xd8e
  41892c:	add	x9, x9, #0x3
  418930:	stur	x0, [x29, #-16]
  418934:	stur	x1, [x29, #-24]
  418938:	stur	x2, [x29, #-32]
  41893c:	str	x8, [sp, #40]
  418940:	ldur	x8, [x29, #-24]
  418944:	str	x8, [sp, #32]
  418948:	str	x9, [sp]
  41894c:	ldur	x8, [x29, #-16]
  418950:	cmp	x8, #0x0
  418954:	cset	w9, ne  // ne = any
  418958:	mov	w10, #0x1                   	// #1
  41895c:	eor	w9, w9, #0x1
  418960:	eor	w9, w9, w10
  418964:	eor	w9, w9, w10
  418968:	and	w9, w9, #0x1
  41896c:	mov	w0, w9
  418970:	sxtw	x8, w0
  418974:	cbz	x8, 41899c <method_get_seat+0x88>
  418978:	mov	w8, wzr
  41897c:	mov	w0, w8
  418980:	adrp	x1, 443000 <_fini+0x2c30>
  418984:	add	x1, x1, #0x812
  418988:	ldr	x2, [sp]
  41898c:	mov	w3, #0x1ee                 	// #494
  418990:	adrp	x4, 445000 <_fini+0x4c30>
  418994:	add	x4, x4, #0x1c9
  418998:	bl	406c68 <log_assert_failed_realm@plt>
  41899c:	ldr	x8, [sp, #32]
  4189a0:	cmp	x8, #0x0
  4189a4:	cset	w9, ne  // ne = any
  4189a8:	mov	w10, #0x1                   	// #1
  4189ac:	eor	w9, w9, #0x1
  4189b0:	eor	w9, w9, w10
  4189b4:	eor	w9, w9, w10
  4189b8:	and	w9, w9, #0x1
  4189bc:	mov	w0, w9
  4189c0:	sxtw	x8, w0
  4189c4:	cbz	x8, 4189ec <method_get_seat+0xd8>
  4189c8:	mov	w8, wzr
  4189cc:	mov	w0, w8
  4189d0:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4189d4:	add	x1, x1, #0x5ef
  4189d8:	ldr	x2, [sp]
  4189dc:	mov	w3, #0x1ef                 	// #495
  4189e0:	adrp	x4, 445000 <_fini+0x4c30>
  4189e4:	add	x4, x4, #0x1c9
  4189e8:	bl	406c68 <log_assert_failed_realm@plt>
  4189ec:	ldur	x0, [x29, #-16]
  4189f0:	adrp	x1, 442000 <_fini+0x1c30>
  4189f4:	add	x1, x1, #0xf2
  4189f8:	add	x2, sp, #0x18
  4189fc:	bl	4074c8 <sd_bus_message_read@plt>
  418a00:	str	w0, [sp, #12]
  418a04:	ldr	w8, [sp, #12]
  418a08:	cmp	w8, #0x0
  418a0c:	cset	w8, ge  // ge = tcont
  418a10:	tbnz	w8, #0, 418a28 <method_get_seat+0x114>
  418a14:	ldr	w8, [sp, #12]
  418a18:	stur	w8, [x29, #-4]
  418a1c:	mov	w8, #0x1                   	// #1
  418a20:	str	w8, [sp, #8]
  418a24:	b	418ab0 <method_get_seat+0x19c>
  418a28:	ldr	x0, [sp, #32]
  418a2c:	ldur	x1, [x29, #-16]
  418a30:	ldr	x2, [sp, #24]
  418a34:	ldur	x3, [x29, #-32]
  418a38:	add	x4, sp, #0x10
  418a3c:	bl	414b68 <manager_get_seat_from_creds>
  418a40:	str	w0, [sp, #12]
  418a44:	ldr	w8, [sp, #12]
  418a48:	cmp	w8, #0x0
  418a4c:	cset	w8, ge  // ge = tcont
  418a50:	tbnz	w8, #0, 418a68 <method_get_seat+0x154>
  418a54:	ldr	w8, [sp, #12]
  418a58:	stur	w8, [x29, #-4]
  418a5c:	mov	w8, #0x1                   	// #1
  418a60:	str	w8, [sp, #8]
  418a64:	b	418ab0 <method_get_seat+0x19c>
  418a68:	ldr	x0, [sp, #16]
  418a6c:	bl	428434 <seat_bus_path>
  418a70:	str	x0, [sp, #40]
  418a74:	ldr	x8, [sp, #40]
  418a78:	cbnz	x8, 418a90 <method_get_seat+0x17c>
  418a7c:	mov	w8, #0xfffffff4            	// #-12
  418a80:	stur	w8, [x29, #-4]
  418a84:	mov	w8, #0x1                   	// #1
  418a88:	str	w8, [sp, #8]
  418a8c:	b	418ab0 <method_get_seat+0x19c>
  418a90:	ldur	x0, [x29, #-16]
  418a94:	ldr	x2, [sp, #40]
  418a98:	adrp	x1, 443000 <_fini+0x2c30>
  418a9c:	add	x1, x1, #0x465
  418aa0:	bl	4075b8 <sd_bus_reply_method_return@plt>
  418aa4:	stur	w0, [x29, #-4]
  418aa8:	mov	w8, #0x1                   	// #1
  418aac:	str	w8, [sp, #8]
  418ab0:	add	x0, sp, #0x28
  418ab4:	bl	4152e4 <freep>
  418ab8:	ldur	w0, [x29, #-4]
  418abc:	ldp	x29, x30, [sp, #80]
  418ac0:	add	sp, sp, #0x60
  418ac4:	ret

0000000000418ac8 <method_list_sessions>:
  418ac8:	sub	sp, sp, #0xb0
  418acc:	stp	x29, x30, [sp, #160]
  418ad0:	add	x29, sp, #0xa0
  418ad4:	mov	x8, xzr
  418ad8:	adrp	x9, 442000 <_fini+0x1c30>
  418adc:	add	x9, x9, #0xd8e
  418ae0:	add	x9, x9, #0x3
  418ae4:	stur	x0, [x29, #-16]
  418ae8:	stur	x1, [x29, #-24]
  418aec:	stur	x2, [x29, #-32]
  418af0:	stur	x8, [x29, #-40]
  418af4:	ldur	x8, [x29, #-24]
  418af8:	stur	x8, [x29, #-48]
  418afc:	str	x9, [sp, #40]
  418b00:	ldur	x8, [x29, #-16]
  418b04:	cmp	x8, #0x0
  418b08:	cset	w9, ne  // ne = any
  418b0c:	mov	w10, #0x1                   	// #1
  418b10:	eor	w9, w9, #0x1
  418b14:	eor	w9, w9, w10
  418b18:	eor	w9, w9, w10
  418b1c:	and	w9, w9, #0x1
  418b20:	mov	w0, w9
  418b24:	sxtw	x8, w0
  418b28:	cbz	x8, 418b50 <method_list_sessions+0x88>
  418b2c:	mov	w8, wzr
  418b30:	mov	w0, w8
  418b34:	adrp	x1, 443000 <_fini+0x2c30>
  418b38:	add	x1, x1, #0x812
  418b3c:	ldr	x2, [sp, #40]
  418b40:	mov	w3, #0x207                 	// #519
  418b44:	adrp	x4, 445000 <_fini+0x4c30>
  418b48:	add	x4, x4, #0x207
  418b4c:	bl	406c68 <log_assert_failed_realm@plt>
  418b50:	ldur	x8, [x29, #-48]
  418b54:	cmp	x8, #0x0
  418b58:	cset	w9, ne  // ne = any
  418b5c:	mov	w10, #0x1                   	// #1
  418b60:	eor	w9, w9, #0x1
  418b64:	eor	w9, w9, w10
  418b68:	eor	w9, w9, w10
  418b6c:	and	w9, w9, #0x1
  418b70:	mov	w0, w9
  418b74:	sxtw	x8, w0
  418b78:	cbz	x8, 418ba0 <method_list_sessions+0xd8>
  418b7c:	mov	w8, wzr
  418b80:	mov	w0, w8
  418b84:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  418b88:	add	x1, x1, #0x5ef
  418b8c:	ldr	x2, [sp, #40]
  418b90:	mov	w3, #0x208                 	// #520
  418b94:	adrp	x4, 445000 <_fini+0x4c30>
  418b98:	add	x4, x4, #0x207
  418b9c:	bl	406c68 <log_assert_failed_realm@plt>
  418ba0:	ldur	x0, [x29, #-16]
  418ba4:	sub	x1, x29, #0x28
  418ba8:	bl	4075c8 <sd_bus_message_new_method_return@plt>
  418bac:	str	w0, [sp, #76]
  418bb0:	ldr	w8, [sp, #76]
  418bb4:	cmp	w8, #0x0
  418bb8:	cset	w8, ge  // ge = tcont
  418bbc:	tbnz	w8, #0, 418bd4 <method_list_sessions+0x10c>
  418bc0:	ldr	w8, [sp, #76]
  418bc4:	stur	w8, [x29, #-4]
  418bc8:	mov	w8, #0x1                   	// #1
  418bcc:	str	w8, [sp, #72]
  418bd0:	b	418da8 <method_list_sessions+0x2e0>
  418bd4:	ldur	x0, [x29, #-40]
  418bd8:	mov	w1, #0x61                  	// #97
  418bdc:	adrp	x2, 445000 <_fini+0x4c30>
  418be0:	add	x2, x2, #0x24a
  418be4:	bl	407588 <sd_bus_message_open_container@plt>
  418be8:	str	w0, [sp, #76]
  418bec:	ldr	w8, [sp, #76]
  418bf0:	cmp	w8, #0x0
  418bf4:	cset	w8, ge  // ge = tcont
  418bf8:	tbnz	w8, #0, 418c10 <method_list_sessions+0x148>
  418bfc:	ldr	w8, [sp, #76]
  418c00:	stur	w8, [x29, #-4]
  418c04:	mov	w8, #0x1                   	// #1
  418c08:	str	w8, [sp, #72]
  418c0c:	b	418da8 <method_list_sessions+0x2e0>
  418c10:	add	x8, sp, #0x38
  418c14:	mov	w9, #0xfffffffe            	// #-2
  418c18:	str	w9, [sp, #56]
  418c1c:	mov	x10, xzr
  418c20:	str	x10, [x8, #8]
  418c24:	ldur	q0, [sp, #56]
  418c28:	str	q0, [sp, #80]
  418c2c:	ldur	x8, [x29, #-48]
  418c30:	ldr	x0, [x8, #32]
  418c34:	add	x1, sp, #0x50
  418c38:	sub	x2, x29, #0x38
  418c3c:	mov	x8, xzr
  418c40:	mov	x3, x8
  418c44:	bl	41fdec <hashmap_iterate>
  418c48:	tbnz	w0, #0, 418c50 <method_list_sessions+0x188>
  418c4c:	b	418d58 <method_list_sessions+0x290>
  418c50:	mov	x8, xzr
  418c54:	str	x8, [sp, #48]
  418c58:	ldur	x0, [x29, #-56]
  418c5c:	bl	42ee0c <session_bus_path>
  418c60:	str	x0, [sp, #48]
  418c64:	ldr	x8, [sp, #48]
  418c68:	cbnz	x8, 418c80 <method_list_sessions+0x1b8>
  418c6c:	mov	w8, #0xfffffff4            	// #-12
  418c70:	stur	w8, [x29, #-4]
  418c74:	mov	w8, #0x1                   	// #1
  418c78:	str	w8, [sp, #72]
  418c7c:	b	418d34 <method_list_sessions+0x26c>
  418c80:	ldur	x0, [x29, #-40]
  418c84:	ldur	x8, [x29, #-56]
  418c88:	ldr	x2, [x8, #8]
  418c8c:	ldur	x8, [x29, #-56]
  418c90:	ldr	x8, [x8, #40]
  418c94:	ldr	w3, [x8, #8]
  418c98:	ldur	x8, [x29, #-56]
  418c9c:	ldr	x8, [x8, #40]
  418ca0:	ldr	x4, [x8, #16]
  418ca4:	ldur	x8, [x29, #-56]
  418ca8:	ldr	x8, [x8, #136]
  418cac:	str	x0, [sp, #32]
  418cb0:	str	x2, [sp, #24]
  418cb4:	str	w3, [sp, #20]
  418cb8:	str	x4, [sp, #8]
  418cbc:	cbz	x8, 418cd4 <method_list_sessions+0x20c>
  418cc0:	ldur	x8, [x29, #-56]
  418cc4:	ldr	x8, [x8, #136]
  418cc8:	ldr	x8, [x8, #8]
  418ccc:	str	x8, [sp]
  418cd0:	b	418ce0 <method_list_sessions+0x218>
  418cd4:	adrp	x8, 443000 <_fini+0x2c30>
  418cd8:	add	x8, x8, #0x467
  418cdc:	str	x8, [sp]
  418ce0:	ldr	x8, [sp]
  418ce4:	ldr	x6, [sp, #48]
  418ce8:	ldr	x0, [sp, #32]
  418cec:	adrp	x1, 445000 <_fini+0x4c30>
  418cf0:	add	x1, x1, #0x24a
  418cf4:	ldr	x2, [sp, #24]
  418cf8:	ldr	w3, [sp, #20]
  418cfc:	ldr	x4, [sp, #8]
  418d00:	mov	x5, x8
  418d04:	bl	407508 <sd_bus_message_append@plt>
  418d08:	str	w0, [sp, #76]
  418d0c:	ldr	w9, [sp, #76]
  418d10:	cmp	w9, #0x0
  418d14:	cset	w9, ge  // ge = tcont
  418d18:	tbnz	w9, #0, 418d30 <method_list_sessions+0x268>
  418d1c:	ldr	w8, [sp, #76]
  418d20:	stur	w8, [x29, #-4]
  418d24:	mov	w8, #0x1                   	// #1
  418d28:	str	w8, [sp, #72]
  418d2c:	b	418d34 <method_list_sessions+0x26c>
  418d30:	str	wzr, [sp, #72]
  418d34:	add	x0, sp, #0x30
  418d38:	bl	4152e4 <freep>
  418d3c:	ldr	w8, [sp, #72]
  418d40:	cmp	w8, #0x0
  418d44:	cset	w8, eq  // eq = none
  418d48:	eor	w8, w8, #0x1
  418d4c:	tbnz	w8, #0, 418da8 <method_list_sessions+0x2e0>
  418d50:	b	418d54 <method_list_sessions+0x28c>
  418d54:	b	418c2c <method_list_sessions+0x164>
  418d58:	ldur	x0, [x29, #-40]
  418d5c:	bl	407598 <sd_bus_message_close_container@plt>
  418d60:	str	w0, [sp, #76]
  418d64:	ldr	w8, [sp, #76]
  418d68:	cmp	w8, #0x0
  418d6c:	cset	w8, ge  // ge = tcont
  418d70:	tbnz	w8, #0, 418d88 <method_list_sessions+0x2c0>
  418d74:	ldr	w8, [sp, #76]
  418d78:	stur	w8, [x29, #-4]
  418d7c:	mov	w8, #0x1                   	// #1
  418d80:	str	w8, [sp, #72]
  418d84:	b	418da8 <method_list_sessions+0x2e0>
  418d88:	ldur	x1, [x29, #-40]
  418d8c:	mov	x8, xzr
  418d90:	mov	x0, x8
  418d94:	mov	x2, x8
  418d98:	bl	4075d8 <sd_bus_send@plt>
  418d9c:	stur	w0, [x29, #-4]
  418da0:	mov	w9, #0x1                   	// #1
  418da4:	str	w9, [sp, #72]
  418da8:	sub	x0, x29, #0x28
  418dac:	bl	42092c <sd_bus_message_unrefp>
  418db0:	ldur	w0, [x29, #-4]
  418db4:	ldp	x29, x30, [sp, #160]
  418db8:	add	sp, sp, #0xb0
  418dbc:	ret

0000000000418dc0 <method_list_users>:
  418dc0:	sub	sp, sp, #0x90
  418dc4:	stp	x29, x30, [sp, #128]
  418dc8:	add	x29, sp, #0x80
  418dcc:	mov	x8, xzr
  418dd0:	adrp	x9, 442000 <_fini+0x1c30>
  418dd4:	add	x9, x9, #0xd8e
  418dd8:	add	x9, x9, #0x3
  418ddc:	stur	x0, [x29, #-16]
  418de0:	stur	x1, [x29, #-24]
  418de4:	stur	x2, [x29, #-32]
  418de8:	stur	x8, [x29, #-40]
  418dec:	ldur	x8, [x29, #-24]
  418df0:	stur	x8, [x29, #-48]
  418df4:	str	x9, [sp, #8]
  418df8:	ldur	x8, [x29, #-16]
  418dfc:	cmp	x8, #0x0
  418e00:	cset	w9, ne  // ne = any
  418e04:	mov	w10, #0x1                   	// #1
  418e08:	eor	w9, w9, #0x1
  418e0c:	eor	w9, w9, w10
  418e10:	eor	w9, w9, w10
  418e14:	and	w9, w9, #0x1
  418e18:	mov	w0, w9
  418e1c:	sxtw	x8, w0
  418e20:	cbz	x8, 418e48 <method_list_users+0x88>
  418e24:	mov	w8, wzr
  418e28:	mov	w0, w8
  418e2c:	adrp	x1, 443000 <_fini+0x2c30>
  418e30:	add	x1, x1, #0x812
  418e34:	ldr	x2, [sp, #8]
  418e38:	mov	w3, #0x231                 	// #561
  418e3c:	adrp	x4, 445000 <_fini+0x4c30>
  418e40:	add	x4, x4, #0x252
  418e44:	bl	406c68 <log_assert_failed_realm@plt>
  418e48:	ldur	x8, [x29, #-48]
  418e4c:	cmp	x8, #0x0
  418e50:	cset	w9, ne  // ne = any
  418e54:	mov	w10, #0x1                   	// #1
  418e58:	eor	w9, w9, #0x1
  418e5c:	eor	w9, w9, w10
  418e60:	eor	w9, w9, w10
  418e64:	and	w9, w9, #0x1
  418e68:	mov	w0, w9
  418e6c:	sxtw	x8, w0
  418e70:	cbz	x8, 418e98 <method_list_users+0xd8>
  418e74:	mov	w8, wzr
  418e78:	mov	w0, w8
  418e7c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  418e80:	add	x1, x1, #0x5ef
  418e84:	ldr	x2, [sp, #8]
  418e88:	mov	w3, #0x232                 	// #562
  418e8c:	adrp	x4, 445000 <_fini+0x4c30>
  418e90:	add	x4, x4, #0x252
  418e94:	bl	406c68 <log_assert_failed_realm@plt>
  418e98:	ldur	x0, [x29, #-16]
  418e9c:	sub	x1, x29, #0x28
  418ea0:	bl	4075c8 <sd_bus_message_new_method_return@plt>
  418ea4:	str	w0, [sp, #44]
  418ea8:	ldr	w8, [sp, #44]
  418eac:	cmp	w8, #0x0
  418eb0:	cset	w8, ge  // ge = tcont
  418eb4:	tbnz	w8, #0, 418ecc <method_list_users+0x10c>
  418eb8:	ldr	w8, [sp, #44]
  418ebc:	stur	w8, [x29, #-4]
  418ec0:	mov	w8, #0x1                   	// #1
  418ec4:	str	w8, [sp, #40]
  418ec8:	b	41903c <method_list_users+0x27c>
  418ecc:	ldur	x0, [x29, #-40]
  418ed0:	mov	w1, #0x61                  	// #97
  418ed4:	adrp	x2, 445000 <_fini+0x4c30>
  418ed8:	add	x2, x2, #0x292
  418edc:	bl	407588 <sd_bus_message_open_container@plt>
  418ee0:	str	w0, [sp, #44]
  418ee4:	ldr	w8, [sp, #44]
  418ee8:	cmp	w8, #0x0
  418eec:	cset	w8, ge  // ge = tcont
  418ef0:	tbnz	w8, #0, 418f08 <method_list_users+0x148>
  418ef4:	ldr	w8, [sp, #44]
  418ef8:	stur	w8, [x29, #-4]
  418efc:	mov	w8, #0x1                   	// #1
  418f00:	str	w8, [sp, #40]
  418f04:	b	41903c <method_list_users+0x27c>
  418f08:	add	x8, sp, #0x18
  418f0c:	mov	w9, #0xfffffffe            	// #-2
  418f10:	str	w9, [sp, #24]
  418f14:	mov	x10, xzr
  418f18:	str	x10, [x8, #8]
  418f1c:	ldur	q0, [sp, #24]
  418f20:	str	q0, [sp, #48]
  418f24:	ldur	x8, [x29, #-48]
  418f28:	ldr	x0, [x8, #48]
  418f2c:	add	x1, sp, #0x30
  418f30:	sub	x2, x29, #0x38
  418f34:	mov	x8, xzr
  418f38:	mov	x3, x8
  418f3c:	bl	41fdec <hashmap_iterate>
  418f40:	tbnz	w0, #0, 418f48 <method_list_users+0x188>
  418f44:	b	418fec <method_list_users+0x22c>
  418f48:	mov	x8, xzr
  418f4c:	str	x8, [sp, #16]
  418f50:	ldur	x0, [x29, #-56]
  418f54:	bl	43900c <user_bus_path>
  418f58:	str	x0, [sp, #16]
  418f5c:	ldr	x8, [sp, #16]
  418f60:	cbnz	x8, 418f78 <method_list_users+0x1b8>
  418f64:	mov	w8, #0xfffffff4            	// #-12
  418f68:	stur	w8, [x29, #-4]
  418f6c:	mov	w8, #0x1                   	// #1
  418f70:	str	w8, [sp, #40]
  418f74:	b	418fc8 <method_list_users+0x208>
  418f78:	ldur	x0, [x29, #-40]
  418f7c:	ldur	x8, [x29, #-56]
  418f80:	ldr	w2, [x8, #8]
  418f84:	ldur	x8, [x29, #-56]
  418f88:	ldr	x3, [x8, #16]
  418f8c:	ldr	x4, [sp, #16]
  418f90:	adrp	x1, 445000 <_fini+0x4c30>
  418f94:	add	x1, x1, #0x292
  418f98:	bl	407508 <sd_bus_message_append@plt>
  418f9c:	str	w0, [sp, #44]
  418fa0:	ldr	w9, [sp, #44]
  418fa4:	cmp	w9, #0x0
  418fa8:	cset	w9, ge  // ge = tcont
  418fac:	tbnz	w9, #0, 418fc4 <method_list_users+0x204>
  418fb0:	ldr	w8, [sp, #44]
  418fb4:	stur	w8, [x29, #-4]
  418fb8:	mov	w8, #0x1                   	// #1
  418fbc:	str	w8, [sp, #40]
  418fc0:	b	418fc8 <method_list_users+0x208>
  418fc4:	str	wzr, [sp, #40]
  418fc8:	add	x0, sp, #0x10
  418fcc:	bl	4152e4 <freep>
  418fd0:	ldr	w8, [sp, #40]
  418fd4:	cmp	w8, #0x0
  418fd8:	cset	w8, eq  // eq = none
  418fdc:	eor	w8, w8, #0x1
  418fe0:	tbnz	w8, #0, 41903c <method_list_users+0x27c>
  418fe4:	b	418fe8 <method_list_users+0x228>
  418fe8:	b	418f24 <method_list_users+0x164>
  418fec:	ldur	x0, [x29, #-40]
  418ff0:	bl	407598 <sd_bus_message_close_container@plt>
  418ff4:	str	w0, [sp, #44]
  418ff8:	ldr	w8, [sp, #44]
  418ffc:	cmp	w8, #0x0
  419000:	cset	w8, ge  // ge = tcont
  419004:	tbnz	w8, #0, 41901c <method_list_users+0x25c>
  419008:	ldr	w8, [sp, #44]
  41900c:	stur	w8, [x29, #-4]
  419010:	mov	w8, #0x1                   	// #1
  419014:	str	w8, [sp, #40]
  419018:	b	41903c <method_list_users+0x27c>
  41901c:	ldur	x1, [x29, #-40]
  419020:	mov	x8, xzr
  419024:	mov	x0, x8
  419028:	mov	x2, x8
  41902c:	bl	4075d8 <sd_bus_send@plt>
  419030:	stur	w0, [x29, #-4]
  419034:	mov	w9, #0x1                   	// #1
  419038:	str	w9, [sp, #40]
  41903c:	sub	x0, x29, #0x28
  419040:	bl	42092c <sd_bus_message_unrefp>
  419044:	ldur	w0, [x29, #-4]
  419048:	ldp	x29, x30, [sp, #128]
  41904c:	add	sp, sp, #0x90
  419050:	ret

0000000000419054 <method_list_seats>:
  419054:	sub	sp, sp, #0x90
  419058:	stp	x29, x30, [sp, #128]
  41905c:	add	x29, sp, #0x80
  419060:	mov	x8, xzr
  419064:	adrp	x9, 442000 <_fini+0x1c30>
  419068:	add	x9, x9, #0xd8e
  41906c:	add	x9, x9, #0x3
  419070:	stur	x0, [x29, #-16]
  419074:	stur	x1, [x29, #-24]
  419078:	stur	x2, [x29, #-32]
  41907c:	stur	x8, [x29, #-40]
  419080:	ldur	x8, [x29, #-24]
  419084:	stur	x8, [x29, #-48]
  419088:	str	x9, [sp, #8]
  41908c:	ldur	x8, [x29, #-16]
  419090:	cmp	x8, #0x0
  419094:	cset	w9, ne  // ne = any
  419098:	mov	w10, #0x1                   	// #1
  41909c:	eor	w9, w9, #0x1
  4190a0:	eor	w9, w9, w10
  4190a4:	eor	w9, w9, w10
  4190a8:	and	w9, w9, #0x1
  4190ac:	mov	w0, w9
  4190b0:	sxtw	x8, w0
  4190b4:	cbz	x8, 4190dc <method_list_seats+0x88>
  4190b8:	mov	w8, wzr
  4190bc:	mov	w0, w8
  4190c0:	adrp	x1, 443000 <_fini+0x2c30>
  4190c4:	add	x1, x1, #0x812
  4190c8:	ldr	x2, [sp, #8]
  4190cc:	mov	w3, #0x259                 	// #601
  4190d0:	adrp	x4, 445000 <_fini+0x4c30>
  4190d4:	add	x4, x4, #0x298
  4190d8:	bl	406c68 <log_assert_failed_realm@plt>
  4190dc:	ldur	x8, [x29, #-48]
  4190e0:	cmp	x8, #0x0
  4190e4:	cset	w9, ne  // ne = any
  4190e8:	mov	w10, #0x1                   	// #1
  4190ec:	eor	w9, w9, #0x1
  4190f0:	eor	w9, w9, w10
  4190f4:	eor	w9, w9, w10
  4190f8:	and	w9, w9, #0x1
  4190fc:	mov	w0, w9
  419100:	sxtw	x8, w0
  419104:	cbz	x8, 41912c <method_list_seats+0xd8>
  419108:	mov	w8, wzr
  41910c:	mov	w0, w8
  419110:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  419114:	add	x1, x1, #0x5ef
  419118:	ldr	x2, [sp, #8]
  41911c:	mov	w3, #0x25a                 	// #602
  419120:	adrp	x4, 445000 <_fini+0x4c30>
  419124:	add	x4, x4, #0x298
  419128:	bl	406c68 <log_assert_failed_realm@plt>
  41912c:	ldur	x0, [x29, #-16]
  419130:	sub	x1, x29, #0x28
  419134:	bl	4075c8 <sd_bus_message_new_method_return@plt>
  419138:	str	w0, [sp, #44]
  41913c:	ldr	w8, [sp, #44]
  419140:	cmp	w8, #0x0
  419144:	cset	w8, ge  // ge = tcont
  419148:	tbnz	w8, #0, 419160 <method_list_seats+0x10c>
  41914c:	ldr	w8, [sp, #44]
  419150:	stur	w8, [x29, #-4]
  419154:	mov	w8, #0x1                   	// #1
  419158:	str	w8, [sp, #40]
  41915c:	b	4192c8 <method_list_seats+0x274>
  419160:	ldur	x0, [x29, #-40]
  419164:	mov	w1, #0x61                  	// #97
  419168:	adrp	x2, 445000 <_fini+0x4c30>
  41916c:	add	x2, x2, #0x2d8
  419170:	bl	407588 <sd_bus_message_open_container@plt>
  419174:	str	w0, [sp, #44]
  419178:	ldr	w8, [sp, #44]
  41917c:	cmp	w8, #0x0
  419180:	cset	w8, ge  // ge = tcont
  419184:	tbnz	w8, #0, 41919c <method_list_seats+0x148>
  419188:	ldr	w8, [sp, #44]
  41918c:	stur	w8, [x29, #-4]
  419190:	mov	w8, #0x1                   	// #1
  419194:	str	w8, [sp, #40]
  419198:	b	4192c8 <method_list_seats+0x274>
  41919c:	add	x8, sp, #0x18
  4191a0:	mov	w9, #0xfffffffe            	// #-2
  4191a4:	str	w9, [sp, #24]
  4191a8:	mov	x10, xzr
  4191ac:	str	x10, [x8, #8]
  4191b0:	ldur	q0, [sp, #24]
  4191b4:	str	q0, [sp, #48]
  4191b8:	ldur	x8, [x29, #-48]
  4191bc:	ldr	x0, [x8, #24]
  4191c0:	add	x1, sp, #0x30
  4191c4:	sub	x2, x29, #0x38
  4191c8:	mov	x8, xzr
  4191cc:	mov	x3, x8
  4191d0:	bl	41fdec <hashmap_iterate>
  4191d4:	tbnz	w0, #0, 4191dc <method_list_seats+0x188>
  4191d8:	b	419278 <method_list_seats+0x224>
  4191dc:	mov	x8, xzr
  4191e0:	str	x8, [sp, #16]
  4191e4:	ldur	x0, [x29, #-56]
  4191e8:	bl	428434 <seat_bus_path>
  4191ec:	str	x0, [sp, #16]
  4191f0:	ldr	x8, [sp, #16]
  4191f4:	cbnz	x8, 41920c <method_list_seats+0x1b8>
  4191f8:	mov	w8, #0xfffffff4            	// #-12
  4191fc:	stur	w8, [x29, #-4]
  419200:	mov	w8, #0x1                   	// #1
  419204:	str	w8, [sp, #40]
  419208:	b	419254 <method_list_seats+0x200>
  41920c:	ldur	x0, [x29, #-40]
  419210:	ldur	x8, [x29, #-56]
  419214:	ldr	x2, [x8, #8]
  419218:	ldr	x3, [sp, #16]
  41921c:	adrp	x1, 445000 <_fini+0x4c30>
  419220:	add	x1, x1, #0x2d8
  419224:	bl	407508 <sd_bus_message_append@plt>
  419228:	str	w0, [sp, #44]
  41922c:	ldr	w9, [sp, #44]
  419230:	cmp	w9, #0x0
  419234:	cset	w9, ge  // ge = tcont
  419238:	tbnz	w9, #0, 419250 <method_list_seats+0x1fc>
  41923c:	ldr	w8, [sp, #44]
  419240:	stur	w8, [x29, #-4]
  419244:	mov	w8, #0x1                   	// #1
  419248:	str	w8, [sp, #40]
  41924c:	b	419254 <method_list_seats+0x200>
  419250:	str	wzr, [sp, #40]
  419254:	add	x0, sp, #0x10
  419258:	bl	4152e4 <freep>
  41925c:	ldr	w8, [sp, #40]
  419260:	cmp	w8, #0x0
  419264:	cset	w8, eq  // eq = none
  419268:	eor	w8, w8, #0x1
  41926c:	tbnz	w8, #0, 4192c8 <method_list_seats+0x274>
  419270:	b	419274 <method_list_seats+0x220>
  419274:	b	4191b8 <method_list_seats+0x164>
  419278:	ldur	x0, [x29, #-40]
  41927c:	bl	407598 <sd_bus_message_close_container@plt>
  419280:	str	w0, [sp, #44]
  419284:	ldr	w8, [sp, #44]
  419288:	cmp	w8, #0x0
  41928c:	cset	w8, ge  // ge = tcont
  419290:	tbnz	w8, #0, 4192a8 <method_list_seats+0x254>
  419294:	ldr	w8, [sp, #44]
  419298:	stur	w8, [x29, #-4]
  41929c:	mov	w8, #0x1                   	// #1
  4192a0:	str	w8, [sp, #40]
  4192a4:	b	4192c8 <method_list_seats+0x274>
  4192a8:	ldur	x1, [x29, #-40]
  4192ac:	mov	x8, xzr
  4192b0:	mov	x0, x8
  4192b4:	mov	x2, x8
  4192b8:	bl	4075d8 <sd_bus_send@plt>
  4192bc:	stur	w0, [x29, #-4]
  4192c0:	mov	w9, #0x1                   	// #1
  4192c4:	str	w9, [sp, #40]
  4192c8:	sub	x0, x29, #0x28
  4192cc:	bl	42092c <sd_bus_message_unrefp>
  4192d0:	ldur	w0, [x29, #-4]
  4192d4:	ldp	x29, x30, [sp, #128]
  4192d8:	add	sp, sp, #0x90
  4192dc:	ret

00000000004192e0 <method_list_inhibitors>:
  4192e0:	sub	sp, sp, #0xb0
  4192e4:	stp	x29, x30, [sp, #160]
  4192e8:	add	x29, sp, #0xa0
  4192ec:	mov	x8, xzr
  4192f0:	adrp	x9, 442000 <_fini+0x1c30>
  4192f4:	add	x9, x9, #0xd8e
  4192f8:	add	x9, x9, #0x3
  4192fc:	stur	x0, [x29, #-16]
  419300:	stur	x1, [x29, #-24]
  419304:	stur	x2, [x29, #-32]
  419308:	stur	x8, [x29, #-40]
  41930c:	ldur	x8, [x29, #-24]
  419310:	stur	x8, [x29, #-48]
  419314:	str	x9, [sp, #48]
  419318:	ldur	x8, [x29, #-16]
  41931c:	cmp	x8, #0x0
  419320:	cset	w9, ne  // ne = any
  419324:	mov	w10, #0x1                   	// #1
  419328:	eor	w9, w9, #0x1
  41932c:	eor	w9, w9, w10
  419330:	eor	w9, w9, w10
  419334:	and	w9, w9, #0x1
  419338:	mov	w0, w9
  41933c:	sxtw	x8, w0
  419340:	cbz	x8, 419368 <method_list_inhibitors+0x88>
  419344:	mov	w8, wzr
  419348:	mov	w0, w8
  41934c:	adrp	x1, 443000 <_fini+0x2c30>
  419350:	add	x1, x1, #0x812
  419354:	ldr	x2, [sp, #48]
  419358:	mov	w3, #0x27e                 	// #638
  41935c:	adrp	x4, 445000 <_fini+0x4c30>
  419360:	add	x4, x4, #0x2dd
  419364:	bl	406c68 <log_assert_failed_realm@plt>
  419368:	ldur	x8, [x29, #-48]
  41936c:	cmp	x8, #0x0
  419370:	cset	w9, ne  // ne = any
  419374:	mov	w10, #0x1                   	// #1
  419378:	eor	w9, w9, #0x1
  41937c:	eor	w9, w9, w10
  419380:	eor	w9, w9, w10
  419384:	and	w9, w9, #0x1
  419388:	mov	w0, w9
  41938c:	sxtw	x8, w0
  419390:	cbz	x8, 4193b8 <method_list_inhibitors+0xd8>
  419394:	mov	w8, wzr
  419398:	mov	w0, w8
  41939c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4193a0:	add	x1, x1, #0x5ef
  4193a4:	ldr	x2, [sp, #48]
  4193a8:	mov	w3, #0x27f                 	// #639
  4193ac:	adrp	x4, 445000 <_fini+0x4c30>
  4193b0:	add	x4, x4, #0x2dd
  4193b4:	bl	406c68 <log_assert_failed_realm@plt>
  4193b8:	ldur	x0, [x29, #-16]
  4193bc:	sub	x1, x29, #0x28
  4193c0:	bl	4075c8 <sd_bus_message_new_method_return@plt>
  4193c4:	str	w0, [sp, #76]
  4193c8:	ldr	w8, [sp, #76]
  4193cc:	cmp	w8, #0x0
  4193d0:	cset	w8, ge  // ge = tcont
  4193d4:	tbnz	w8, #0, 4193ec <method_list_inhibitors+0x10c>
  4193d8:	ldr	w8, [sp, #76]
  4193dc:	stur	w8, [x29, #-4]
  4193e0:	mov	w8, #0x1                   	// #1
  4193e4:	str	w8, [sp, #72]
  4193e8:	b	419578 <method_list_inhibitors+0x298>
  4193ec:	ldur	x0, [x29, #-40]
  4193f0:	mov	w1, #0x61                  	// #97
  4193f4:	adrp	x2, 445000 <_fini+0x4c30>
  4193f8:	add	x2, x2, #0x322
  4193fc:	bl	407588 <sd_bus_message_open_container@plt>
  419400:	str	w0, [sp, #76]
  419404:	ldr	w8, [sp, #76]
  419408:	cmp	w8, #0x0
  41940c:	cset	w8, ge  // ge = tcont
  419410:	tbnz	w8, #0, 419428 <method_list_inhibitors+0x148>
  419414:	ldr	w8, [sp, #76]
  419418:	stur	w8, [x29, #-4]
  41941c:	mov	w8, #0x1                   	// #1
  419420:	str	w8, [sp, #72]
  419424:	b	419578 <method_list_inhibitors+0x298>
  419428:	add	x8, sp, #0x38
  41942c:	mov	w9, #0xfffffffe            	// #-2
  419430:	str	w9, [sp, #56]
  419434:	mov	x10, xzr
  419438:	str	x10, [x8, #8]
  41943c:	ldur	q0, [sp, #56]
  419440:	str	q0, [sp, #80]
  419444:	ldur	x8, [x29, #-48]
  419448:	ldr	x0, [x8, #56]
  41944c:	add	x1, sp, #0x50
  419450:	sub	x2, x29, #0x38
  419454:	mov	x8, xzr
  419458:	mov	x3, x8
  41945c:	bl	41fdec <hashmap_iterate>
  419460:	tbnz	w0, #0, 419468 <method_list_inhibitors+0x188>
  419464:	b	419528 <method_list_inhibitors+0x248>
  419468:	ldur	x0, [x29, #-40]
  41946c:	ldur	x8, [x29, #-56]
  419470:	ldr	w9, [x8, #36]
  419474:	str	x0, [sp, #40]
  419478:	mov	w0, w9
  41947c:	bl	426b8c <inhibit_what_to_string>
  419480:	bl	420960 <strempty>
  419484:	ldur	x8, [x29, #-56]
  419488:	ldr	x8, [x8, #40]
  41948c:	str	x0, [sp, #32]
  419490:	mov	x0, x8
  419494:	bl	420960 <strempty>
  419498:	ldur	x8, [x29, #-56]
  41949c:	ldr	x8, [x8, #48]
  4194a0:	str	x0, [sp, #24]
  4194a4:	mov	x0, x8
  4194a8:	bl	420960 <strempty>
  4194ac:	ldur	x8, [x29, #-56]
  4194b0:	ldr	w9, [x8, #56]
  4194b4:	str	x0, [sp, #16]
  4194b8:	mov	w0, w9
  4194bc:	bl	4252a8 <inhibit_mode_to_string>
  4194c0:	bl	420960 <strempty>
  4194c4:	ldur	x8, [x29, #-56]
  4194c8:	ldr	w6, [x8, #64]
  4194cc:	ldur	x8, [x29, #-56]
  4194d0:	ldr	w7, [x8, #60]
  4194d4:	ldr	x8, [sp, #40]
  4194d8:	str	x0, [sp, #8]
  4194dc:	mov	x0, x8
  4194e0:	adrp	x1, 445000 <_fini+0x4c30>
  4194e4:	add	x1, x1, #0x322
  4194e8:	ldr	x2, [sp, #32]
  4194ec:	ldr	x3, [sp, #24]
  4194f0:	ldr	x4, [sp, #16]
  4194f4:	ldr	x5, [sp, #8]
  4194f8:	bl	407508 <sd_bus_message_append@plt>
  4194fc:	str	w0, [sp, #76]
  419500:	ldr	w9, [sp, #76]
  419504:	cmp	w9, #0x0
  419508:	cset	w9, ge  // ge = tcont
  41950c:	tbnz	w9, #0, 419524 <method_list_inhibitors+0x244>
  419510:	ldr	w8, [sp, #76]
  419514:	stur	w8, [x29, #-4]
  419518:	mov	w8, #0x1                   	// #1
  41951c:	str	w8, [sp, #72]
  419520:	b	419578 <method_list_inhibitors+0x298>
  419524:	b	419444 <method_list_inhibitors+0x164>
  419528:	ldur	x0, [x29, #-40]
  41952c:	bl	407598 <sd_bus_message_close_container@plt>
  419530:	str	w0, [sp, #76]
  419534:	ldr	w8, [sp, #76]
  419538:	cmp	w8, #0x0
  41953c:	cset	w8, ge  // ge = tcont
  419540:	tbnz	w8, #0, 419558 <method_list_inhibitors+0x278>
  419544:	ldr	w8, [sp, #76]
  419548:	stur	w8, [x29, #-4]
  41954c:	mov	w8, #0x1                   	// #1
  419550:	str	w8, [sp, #72]
  419554:	b	419578 <method_list_inhibitors+0x298>
  419558:	ldur	x1, [x29, #-40]
  41955c:	mov	x8, xzr
  419560:	mov	x0, x8
  419564:	mov	x2, x8
  419568:	bl	4075d8 <sd_bus_send@plt>
  41956c:	stur	w0, [x29, #-4]
  419570:	mov	w9, #0x1                   	// #1
  419574:	str	w9, [sp, #72]
  419578:	sub	x0, x29, #0x28
  41957c:	bl	42092c <sd_bus_message_unrefp>
  419580:	ldur	w0, [x29, #-4]
  419584:	ldp	x29, x30, [sp, #160]
  419588:	add	sp, sp, #0xb0
  41958c:	ret

0000000000419590 <method_create_session>:
  419590:	sub	sp, sp, #0x160
  419594:	stp	x29, x30, [sp, #320]
  419598:	str	x28, [sp, #336]
  41959c:	add	x29, sp, #0x140
  4195a0:	mov	x8, xzr
  4195a4:	adrp	x9, 445000 <_fini+0x4c30>
  4195a8:	add	x9, x9, #0x37d
  4195ac:	adrp	x10, 442000 <_fini+0x1c30>
  4195b0:	add	x10, x10, #0xd8e
  4195b4:	add	x10, x10, #0x3
  4195b8:	adrp	x11, 445000 <_fini+0x4c30>
  4195bc:	add	x11, x11, #0x32b
  4195c0:	stur	x0, [x29, #-16]
  4195c4:	stur	x1, [x29, #-24]
  4195c8:	stur	x2, [x29, #-32]
  4195cc:	stur	x8, [x29, #-112]
  4195d0:	stur	x8, [x29, #-120]
  4195d4:	stur	wzr, [x29, #-124]
  4195d8:	ldur	x12, [x29, #-24]
  4195dc:	stur	x12, [x29, #-136]
  4195e0:	stur	x8, [x29, #-144]
  4195e4:	stur	x8, [x29, #-152]
  4195e8:	str	wzr, [sp, #152]
  4195ec:	str	x9, [sp, #96]
  4195f0:	str	x10, [sp, #88]
  4195f4:	str	x11, [sp, #80]
  4195f8:	ldur	x8, [x29, #-16]
  4195fc:	cmp	x8, #0x0
  419600:	cset	w9, ne  // ne = any
  419604:	mov	w10, #0x1                   	// #1
  419608:	eor	w9, w9, #0x1
  41960c:	eor	w9, w9, w10
  419610:	eor	w9, w9, w10
  419614:	and	w9, w9, #0x1
  419618:	mov	w0, w9
  41961c:	sxtw	x8, w0
  419620:	cbz	x8, 419644 <method_create_session+0xb4>
  419624:	mov	w8, wzr
  419628:	mov	w0, w8
  41962c:	adrp	x1, 443000 <_fini+0x2c30>
  419630:	add	x1, x1, #0x812
  419634:	ldr	x2, [sp, #88]
  419638:	mov	w3, #0x2ad                 	// #685
  41963c:	ldr	x4, [sp, #80]
  419640:	bl	406c68 <log_assert_failed_realm@plt>
  419644:	ldur	x8, [x29, #-136]
  419648:	cmp	x8, #0x0
  41964c:	cset	w9, ne  // ne = any
  419650:	mov	w10, #0x1                   	// #1
  419654:	eor	w9, w9, #0x1
  419658:	eor	w9, w9, w10
  41965c:	eor	w9, w9, w10
  419660:	and	w9, w9, #0x1
  419664:	mov	w0, w9
  419668:	sxtw	x8, w0
  41966c:	cbz	x8, 419690 <method_create_session+0x100>
  419670:	mov	w8, wzr
  419674:	mov	w0, w8
  419678:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41967c:	add	x1, x1, #0x5ef
  419680:	ldr	x2, [sp, #88]
  419684:	mov	w3, #0x2ae                 	// #686
  419688:	ldr	x4, [sp, #80]
  41968c:	bl	406c68 <log_assert_failed_realm@plt>
  419690:	ldur	x0, [x29, #-16]
  419694:	adrp	x1, 445000 <_fini+0x4c30>
  419698:	add	x1, x1, #0x36f
  41969c:	add	x2, sp, #0xa0
  4196a0:	sub	x3, x29, #0x9c
  4196a4:	sub	x4, x29, #0x28
  4196a8:	sub	x5, x29, #0x30
  4196ac:	sub	x6, x29, #0x38
  4196b0:	sub	x7, x29, #0x68
  4196b4:	mov	x8, sp
  4196b8:	sub	x9, x29, #0x40
  4196bc:	str	x9, [x8]
  4196c0:	mov	x8, sp
  4196c4:	add	x9, sp, #0x98
  4196c8:	str	x9, [x8, #8]
  4196cc:	mov	x8, sp
  4196d0:	sub	x9, x29, #0x48
  4196d4:	str	x9, [x8, #16]
  4196d8:	mov	x8, sp
  4196dc:	sub	x9, x29, #0x50
  4196e0:	str	x9, [x8, #24]
  4196e4:	mov	x8, sp
  4196e8:	add	x9, sp, #0x9c
  4196ec:	str	x9, [x8, #32]
  4196f0:	mov	x8, sp
  4196f4:	sub	x9, x29, #0x58
  4196f8:	str	x9, [x8, #40]
  4196fc:	mov	x8, sp
  419700:	sub	x9, x29, #0x60
  419704:	str	x9, [x8, #48]
  419708:	bl	4074c8 <sd_bus_message_read@plt>
  41970c:	str	w0, [sp, #140]
  419710:	ldr	w10, [sp, #140]
  419714:	cmp	w10, #0x0
  419718:	cset	w10, ge  // ge = tcont
  41971c:	tbnz	w10, #0, 419734 <method_create_session+0x1a4>
  419720:	ldr	w8, [sp, #140]
  419724:	stur	w8, [x29, #-4]
  419728:	mov	w8, #0x1                   	// #1
  41972c:	str	w8, [sp, #136]
  419730:	b	41a2cc <method_create_session+0xd3c>
  419734:	ldr	w0, [sp, #160]
  419738:	bl	4074a8 <uid_is_valid@plt>
  41973c:	tbnz	w0, #0, 419764 <method_create_session+0x1d4>
  419740:	ldur	x0, [x29, #-32]
  419744:	ldr	x1, [sp, #96]
  419748:	adrp	x2, 445000 <_fini+0x4c30>
  41974c:	add	x2, x2, #0x3a4
  419750:	bl	407468 <sd_bus_error_setf@plt>
  419754:	stur	w0, [x29, #-4]
  419758:	mov	w8, #0x1                   	// #1
  41975c:	str	w8, [sp, #136]
  419760:	b	41a2cc <method_create_session+0xd3c>
  419764:	ldur	w8, [x29, #-156]
  419768:	cmp	w8, #0x0
  41976c:	cset	w8, lt  // lt = tstop
  419770:	tbnz	w8, #0, 419798 <method_create_session+0x208>
  419774:	ldur	w8, [x29, #-156]
  419778:	cmp	w8, #0x1
  41977c:	b.eq	419798 <method_create_session+0x208>  // b.none
  419780:	ldur	w8, [x29, #-156]
  419784:	str	w8, [sp, #76]
  419788:	bl	406c78 <getpid_cached@plt>
  41978c:	ldr	w8, [sp, #76]
  419790:	cmp	w8, w0
  419794:	b.ne	4197bc <method_create_session+0x22c>  // b.any
  419798:	ldur	x0, [x29, #-32]
  41979c:	ldr	x1, [sp, #96]
  4197a0:	adrp	x2, 445000 <_fini+0x4c30>
  4197a4:	add	x2, x2, #0x3b0
  4197a8:	bl	407468 <sd_bus_error_setf@plt>
  4197ac:	stur	w0, [x29, #-4]
  4197b0:	mov	w8, #0x1                   	// #1
  4197b4:	str	w8, [sp, #136]
  4197b8:	b	41a2cc <method_create_session+0xd3c>
  4197bc:	ldur	x0, [x29, #-48]
  4197c0:	bl	42099c <isempty>
  4197c4:	tbnz	w0, #0, 4197cc <method_create_session+0x23c>
  4197c8:	b	4197d8 <method_create_session+0x248>
  4197cc:	mov	w8, #0xffffffff            	// #-1
  4197d0:	str	w8, [sp, #148]
  4197d4:	b	41981c <method_create_session+0x28c>
  4197d8:	ldur	x0, [x29, #-48]
  4197dc:	bl	43460c <session_type_from_string>
  4197e0:	str	w0, [sp, #148]
  4197e4:	ldr	w8, [sp, #148]
  4197e8:	cmp	w8, #0x0
  4197ec:	cset	w8, ge  // ge = tcont
  4197f0:	tbnz	w8, #0, 41981c <method_create_session+0x28c>
  4197f4:	ldur	x0, [x29, #-32]
  4197f8:	ldur	x3, [x29, #-48]
  4197fc:	ldr	x1, [sp, #96]
  419800:	adrp	x2, 445000 <_fini+0x4c30>
  419804:	add	x2, x2, #0x3c3
  419808:	bl	407468 <sd_bus_error_setf@plt>
  41980c:	stur	w0, [x29, #-4]
  419810:	mov	w8, #0x1                   	// #1
  419814:	str	w8, [sp, #136]
  419818:	b	41a2cc <method_create_session+0xd3c>
  41981c:	ldur	x0, [x29, #-56]
  419820:	bl	42099c <isempty>
  419824:	tbnz	w0, #0, 41982c <method_create_session+0x29c>
  419828:	b	419838 <method_create_session+0x2a8>
  41982c:	mov	w8, #0xffffffff            	// #-1
  419830:	str	w8, [sp, #144]
  419834:	b	41987c <method_create_session+0x2ec>
  419838:	ldur	x0, [x29, #-56]
  41983c:	bl	434640 <session_class_from_string>
  419840:	str	w0, [sp, #144]
  419844:	ldr	w8, [sp, #144]
  419848:	cmp	w8, #0x0
  41984c:	cset	w8, ge  // ge = tcont
  419850:	tbnz	w8, #0, 41987c <method_create_session+0x2ec>
  419854:	ldur	x0, [x29, #-32]
  419858:	ldur	x3, [x29, #-56]
  41985c:	ldr	x1, [sp, #96]
  419860:	adrp	x2, 445000 <_fini+0x4c30>
  419864:	add	x2, x2, #0x3db
  419868:	bl	407468 <sd_bus_error_setf@plt>
  41986c:	stur	w0, [x29, #-4]
  419870:	mov	w8, #0x1                   	// #1
  419874:	str	w8, [sp, #136]
  419878:	b	41a2cc <method_create_session+0xd3c>
  41987c:	ldur	x0, [x29, #-104]
  419880:	bl	42099c <isempty>
  419884:	tbnz	w0, #0, 41988c <method_create_session+0x2fc>
  419888:	b	419898 <method_create_session+0x308>
  41988c:	mov	x8, xzr
  419890:	stur	x8, [x29, #-104]
  419894:	b	4198cc <method_create_session+0x33c>
  419898:	ldur	x0, [x29, #-104]
  41989c:	bl	4075e8 <string_is_safe@plt>
  4198a0:	tbnz	w0, #0, 4198cc <method_create_session+0x33c>
  4198a4:	ldur	x0, [x29, #-32]
  4198a8:	ldur	x3, [x29, #-104]
  4198ac:	ldr	x1, [sp, #96]
  4198b0:	adrp	x2, 445000 <_fini+0x4c30>
  4198b4:	add	x2, x2, #0x3f4
  4198b8:	bl	407468 <sd_bus_error_setf@plt>
  4198bc:	stur	w0, [x29, #-4]
  4198c0:	mov	w8, #0x1                   	// #1
  4198c4:	str	w8, [sp, #136]
  4198c8:	b	41a2cc <method_create_session+0xd3c>
  4198cc:	ldur	x0, [x29, #-64]
  4198d0:	bl	42099c <isempty>
  4198d4:	tbnz	w0, #0, 4198dc <method_create_session+0x34c>
  4198d8:	b	4198e8 <method_create_session+0x358>
  4198dc:	mov	x8, xzr
  4198e0:	stur	x8, [x29, #-152]
  4198e4:	b	419930 <method_create_session+0x3a0>
  4198e8:	ldur	x8, [x29, #-136]
  4198ec:	ldr	x0, [x8, #24]
  4198f0:	ldur	x1, [x29, #-64]
  4198f4:	bl	4148a0 <hashmap_get>
  4198f8:	stur	x0, [x29, #-152]
  4198fc:	ldur	x8, [x29, #-152]
  419900:	cbnz	x8, 419930 <method_create_session+0x3a0>
  419904:	ldur	x0, [x29, #-32]
  419908:	ldur	x3, [x29, #-64]
  41990c:	adrp	x1, 442000 <_fini+0x1c30>
  419910:	add	x1, x1, #0xf5a
  419914:	adrp	x2, 442000 <_fini+0x1c30>
  419918:	add	x2, x2, #0xf96
  41991c:	bl	407468 <sd_bus_error_setf@plt>
  419920:	stur	w0, [x29, #-4]
  419924:	mov	w8, #0x1                   	// #1
  419928:	str	w8, [sp, #136]
  41992c:	b	41a2cc <method_create_session+0xd3c>
  419930:	ldur	x0, [x29, #-72]
  419934:	bl	4075f8 <tty_is_vc@plt>
  419938:	tbnz	w0, #0, 419940 <method_create_session+0x3b0>
  41993c:	b	419a2c <method_create_session+0x49c>
  419940:	ldur	x8, [x29, #-152]
  419944:	cbnz	x8, 419958 <method_create_session+0x3c8>
  419948:	ldur	x8, [x29, #-136]
  41994c:	ldr	x8, [x8, #168]
  419950:	stur	x8, [x29, #-152]
  419954:	b	41999c <method_create_session+0x40c>
  419958:	ldur	x8, [x29, #-152]
  41995c:	ldur	x9, [x29, #-136]
  419960:	ldr	x9, [x9, #168]
  419964:	cmp	x8, x9
  419968:	b.eq	41999c <method_create_session+0x40c>  // b.none
  41996c:	ldur	x0, [x29, #-32]
  419970:	ldur	x3, [x29, #-72]
  419974:	ldur	x8, [x29, #-152]
  419978:	ldr	x4, [x8, #8]
  41997c:	ldr	x1, [sp, #96]
  419980:	adrp	x2, 445000 <_fini+0x4c30>
  419984:	add	x2, x2, #0x40e
  419988:	bl	407468 <sd_bus_error_setf@plt>
  41998c:	stur	w0, [x29, #-4]
  419990:	mov	w9, #0x1                   	// #1
  419994:	str	w9, [sp, #136]
  419998:	b	41a2cc <method_create_session+0xd3c>
  41999c:	ldur	x0, [x29, #-72]
  4199a0:	bl	407608 <vtnr_from_tty@plt>
  4199a4:	str	w0, [sp, #132]
  4199a8:	ldr	w8, [sp, #132]
  4199ac:	cmp	w8, #0x0
  4199b0:	cset	w8, gt
  4199b4:	tbnz	w8, #0, 4199e0 <method_create_session+0x450>
  4199b8:	ldur	x0, [x29, #-32]
  4199bc:	ldur	x3, [x29, #-72]
  4199c0:	ldr	x1, [sp, #96]
  4199c4:	adrp	x2, 445000 <_fini+0x4c30>
  4199c8:	add	x2, x2, #0x441
  4199cc:	bl	407468 <sd_bus_error_setf@plt>
  4199d0:	stur	w0, [x29, #-4]
  4199d4:	mov	w8, #0x1                   	// #1
  4199d8:	str	w8, [sp, #136]
  4199dc:	b	41a2cc <method_create_session+0xd3c>
  4199e0:	ldr	w8, [sp, #152]
  4199e4:	cbnz	w8, 4199f4 <method_create_session+0x464>
  4199e8:	ldr	w8, [sp, #132]
  4199ec:	str	w8, [sp, #152]
  4199f0:	b	419a28 <method_create_session+0x498>
  4199f4:	ldr	w8, [sp, #152]
  4199f8:	ldr	w9, [sp, #132]
  4199fc:	cmp	w8, w9
  419a00:	b.eq	419a28 <method_create_session+0x498>  // b.none
  419a04:	ldur	x0, [x29, #-32]
  419a08:	ldr	x1, [sp, #96]
  419a0c:	adrp	x2, 445000 <_fini+0x4c30>
  419a10:	add	x2, x2, #0x478
  419a14:	bl	407468 <sd_bus_error_setf@plt>
  419a18:	stur	w0, [x29, #-4]
  419a1c:	mov	w8, #0x1                   	// #1
  419a20:	str	w8, [sp, #136]
  419a24:	b	41a2cc <method_create_session+0xd3c>
  419a28:	b	419ab8 <method_create_session+0x528>
  419a2c:	ldur	x0, [x29, #-72]
  419a30:	bl	407618 <tty_is_console@plt>
  419a34:	tbnz	w0, #0, 419a3c <method_create_session+0x4ac>
  419a38:	b	419ab8 <method_create_session+0x528>
  419a3c:	ldur	x8, [x29, #-152]
  419a40:	cbnz	x8, 419a54 <method_create_session+0x4c4>
  419a44:	ldur	x8, [x29, #-136]
  419a48:	ldr	x8, [x8, #168]
  419a4c:	stur	x8, [x29, #-152]
  419a50:	b	419a8c <method_create_session+0x4fc>
  419a54:	ldur	x8, [x29, #-152]
  419a58:	ldur	x9, [x29, #-136]
  419a5c:	ldr	x9, [x9, #168]
  419a60:	cmp	x8, x9
  419a64:	b.eq	419a8c <method_create_session+0x4fc>  // b.none
  419a68:	ldur	x0, [x29, #-32]
  419a6c:	ldr	x1, [sp, #96]
  419a70:	adrp	x2, 445000 <_fini+0x4c30>
  419a74:	add	x2, x2, #0x4a1
  419a78:	bl	407468 <sd_bus_error_setf@plt>
  419a7c:	stur	w0, [x29, #-4]
  419a80:	mov	w8, #0x1                   	// #1
  419a84:	str	w8, [sp, #136]
  419a88:	b	41a2cc <method_create_session+0xd3c>
  419a8c:	ldr	w8, [sp, #152]
  419a90:	cbz	w8, 419ab8 <method_create_session+0x528>
  419a94:	ldur	x0, [x29, #-32]
  419a98:	ldr	x1, [sp, #96]
  419a9c:	adrp	x2, 445000 <_fini+0x4c30>
  419aa0:	add	x2, x2, #0x4cd
  419aa4:	bl	407468 <sd_bus_error_setf@plt>
  419aa8:	stur	w0, [x29, #-4]
  419aac:	mov	w8, #0x1                   	// #1
  419ab0:	str	w8, [sp, #136]
  419ab4:	b	41a2cc <method_create_session+0xd3c>
  419ab8:	ldur	x8, [x29, #-152]
  419abc:	cbz	x8, 419b40 <method_create_session+0x5b0>
  419ac0:	ldur	x0, [x29, #-152]
  419ac4:	bl	429ff0 <seat_has_vts>
  419ac8:	tbnz	w0, #0, 419ad0 <method_create_session+0x540>
  419acc:	b	419b14 <method_create_session+0x584>
  419ad0:	ldr	w8, [sp, #152]
  419ad4:	cmp	w8, #0x0
  419ad8:	cset	w8, ls  // ls = plast
  419adc:	tbnz	w8, #0, 419aec <method_create_session+0x55c>
  419ae0:	ldr	w8, [sp, #152]
  419ae4:	cmp	w8, #0x3f
  419ae8:	b.ls	419b10 <method_create_session+0x580>  // b.plast
  419aec:	ldur	x0, [x29, #-32]
  419af0:	ldr	x1, [sp, #96]
  419af4:	adrp	x2, 445000 <_fini+0x4c30>
  419af8:	add	x2, x2, #0x4fa
  419afc:	bl	407468 <sd_bus_error_setf@plt>
  419b00:	stur	w0, [x29, #-4]
  419b04:	mov	w8, #0x1                   	// #1
  419b08:	str	w8, [sp, #136]
  419b0c:	b	41a2cc <method_create_session+0xd3c>
  419b10:	b	419b40 <method_create_session+0x5b0>
  419b14:	ldr	w8, [sp, #152]
  419b18:	cbz	w8, 419b40 <method_create_session+0x5b0>
  419b1c:	ldur	x0, [x29, #-32]
  419b20:	ldr	x1, [sp, #96]
  419b24:	adrp	x2, 445000 <_fini+0x4c30>
  419b28:	add	x2, x2, #0x511
  419b2c:	bl	407468 <sd_bus_error_setf@plt>
  419b30:	stur	w0, [x29, #-4]
  419b34:	mov	w8, #0x1                   	// #1
  419b38:	str	w8, [sp, #136]
  419b3c:	b	41a2cc <method_create_session+0xd3c>
  419b40:	ldr	w8, [sp, #148]
  419b44:	mov	w9, #0xffffffff            	// #-1
  419b48:	cmp	w8, w9
  419b4c:	b.ne	419b84 <method_create_session+0x5f4>  // b.any
  419b50:	ldur	x0, [x29, #-80]
  419b54:	bl	42099c <isempty>
  419b58:	tbnz	w0, #0, 419b68 <method_create_session+0x5d8>
  419b5c:	mov	w8, #0x2                   	// #2
  419b60:	str	w8, [sp, #148]
  419b64:	b	419b84 <method_create_session+0x5f4>
  419b68:	ldur	x0, [x29, #-72]
  419b6c:	bl	42099c <isempty>
  419b70:	tbnz	w0, #0, 419b80 <method_create_session+0x5f0>
  419b74:	mov	w8, #0x1                   	// #1
  419b78:	str	w8, [sp, #148]
  419b7c:	b	419b84 <method_create_session+0x5f4>
  419b80:	str	wzr, [sp, #148]
  419b84:	ldr	w8, [sp, #144]
  419b88:	mov	w9, #0xffffffff            	// #-1
  419b8c:	cmp	w8, w9
  419b90:	b.ne	419bac <method_create_session+0x61c>  // b.any
  419b94:	ldr	w8, [sp, #148]
  419b98:	cbnz	w8, 419ba8 <method_create_session+0x618>
  419b9c:	mov	w8, #0x3                   	// #3
  419ba0:	str	w8, [sp, #144]
  419ba4:	b	419bac <method_create_session+0x61c>
  419ba8:	str	wzr, [sp, #144]
  419bac:	ldur	w8, [x29, #-156]
  419bb0:	cbnz	w8, 419c4c <method_create_session+0x6bc>
  419bb4:	add	x2, sp, #0x78
  419bb8:	mov	x8, xzr
  419bbc:	str	x8, [sp, #120]
  419bc0:	ldur	x0, [x29, #-16]
  419bc4:	mov	x1, #0x1                   	// #1
  419bc8:	bl	407478 <sd_bus_query_sender_creds@plt>
  419bcc:	str	w0, [sp, #140]
  419bd0:	ldr	w9, [sp, #140]
  419bd4:	cmp	w9, #0x0
  419bd8:	cset	w9, ge  // ge = tcont
  419bdc:	tbnz	w9, #0, 419bf4 <method_create_session+0x664>
  419be0:	ldr	w8, [sp, #140]
  419be4:	stur	w8, [x29, #-4]
  419be8:	mov	w8, #0x1                   	// #1
  419bec:	str	w8, [sp, #136]
  419bf0:	b	419c2c <method_create_session+0x69c>
  419bf4:	ldr	x0, [sp, #120]
  419bf8:	sub	x1, x29, #0x9c
  419bfc:	bl	407628 <sd_bus_creds_get_pid@plt>
  419c00:	str	w0, [sp, #140]
  419c04:	ldr	w8, [sp, #140]
  419c08:	cmp	w8, #0x0
  419c0c:	cset	w8, ge  // ge = tcont
  419c10:	tbnz	w8, #0, 419c28 <method_create_session+0x698>
  419c14:	ldr	w8, [sp, #140]
  419c18:	stur	w8, [x29, #-4]
  419c1c:	mov	w8, #0x1                   	// #1
  419c20:	str	w8, [sp, #136]
  419c24:	b	419c2c <method_create_session+0x69c>
  419c28:	str	wzr, [sp, #136]
  419c2c:	add	x0, sp, #0x78
  419c30:	bl	421604 <sd_bus_creds_unrefp>
  419c34:	ldr	w8, [sp, #136]
  419c38:	cmp	w8, #0x0
  419c3c:	cset	w8, eq  // eq = none
  419c40:	eor	w8, w8, #0x1
  419c44:	tbnz	w8, #0, 41a2cc <method_create_session+0xd3c>
  419c48:	b	419c4c <method_create_session+0x6bc>
  419c4c:	ldur	x0, [x29, #-136]
  419c50:	ldur	w1, [x29, #-156]
  419c54:	mov	x8, xzr
  419c58:	mov	x2, x8
  419c5c:	bl	412610 <manager_get_user_by_pid>
  419c60:	str	w0, [sp, #140]
  419c64:	ldr	w9, [sp, #140]
  419c68:	cmp	w9, #0x0
  419c6c:	cset	w9, ge  // ge = tcont
  419c70:	tbnz	w9, #0, 419c88 <method_create_session+0x6f8>
  419c74:	ldr	w8, [sp, #140]
  419c78:	stur	w8, [x29, #-4]
  419c7c:	mov	w8, #0x1                   	// #1
  419c80:	str	w8, [sp, #136]
  419c84:	b	41a2cc <method_create_session+0xd3c>
  419c88:	ldr	w8, [sp, #140]
  419c8c:	cmp	w8, #0x0
  419c90:	cset	w8, le
  419c94:	tbnz	w8, #0, 419cc0 <method_create_session+0x730>
  419c98:	ldur	x0, [x29, #-32]
  419c9c:	adrp	x1, 445000 <_fini+0x4c30>
  419ca0:	add	x1, x1, #0x535
  419ca4:	adrp	x2, 445000 <_fini+0x4c30>
  419ca8:	add	x2, x2, #0x558
  419cac:	bl	407468 <sd_bus_error_setf@plt>
  419cb0:	stur	w0, [x29, #-4]
  419cb4:	mov	w8, #0x1                   	// #1
  419cb8:	str	w8, [sp, #136]
  419cbc:	b	41a2cc <method_create_session+0xd3c>
  419cc0:	ldr	w8, [sp, #144]
  419cc4:	cmp	w8, #0x1
  419cc8:	b.eq	419d78 <method_create_session+0x7e8>  // b.none
  419ccc:	ldr	w8, [sp, #152]
  419cd0:	cmp	w8, #0x0
  419cd4:	cset	w8, ls  // ls = plast
  419cd8:	tbnz	w8, #0, 419d78 <method_create_session+0x7e8>
  419cdc:	ldr	w8, [sp, #152]
  419ce0:	mov	w9, w8
  419ce4:	ldur	x10, [x29, #-136]
  419ce8:	ldr	x10, [x10, #168]
  419cec:	ldr	x10, [x10, #64]
  419cf0:	cmp	x9, x10
  419cf4:	b.cs	419d78 <method_create_session+0x7e8>  // b.hs, b.nlast
  419cf8:	ldur	x8, [x29, #-136]
  419cfc:	ldr	x8, [x8, #168]
  419d00:	ldr	x8, [x8, #56]
  419d04:	ldr	w9, [sp, #152]
  419d08:	mov	w10, w9
  419d0c:	mov	x11, #0x8                   	// #8
  419d10:	mul	x10, x11, x10
  419d14:	add	x8, x8, x10
  419d18:	ldr	x8, [x8]
  419d1c:	cbz	x8, 419d78 <method_create_session+0x7e8>
  419d20:	ldur	x8, [x29, #-136]
  419d24:	ldr	x8, [x8, #168]
  419d28:	ldr	x8, [x8, #56]
  419d2c:	ldr	w9, [sp, #152]
  419d30:	mov	w10, w9
  419d34:	mov	x11, #0x8                   	// #8
  419d38:	mul	x10, x11, x10
  419d3c:	add	x8, x8, x10
  419d40:	ldr	x8, [x8]
  419d44:	ldr	w9, [x8, #24]
  419d48:	cmp	w9, #0x1
  419d4c:	b.eq	419d78 <method_create_session+0x7e8>  // b.none
  419d50:	ldur	x0, [x29, #-32]
  419d54:	adrp	x1, 445000 <_fini+0x4c30>
  419d58:	add	x1, x1, #0x535
  419d5c:	adrp	x2, 445000 <_fini+0x4c30>
  419d60:	add	x2, x2, #0x583
  419d64:	bl	407468 <sd_bus_error_setf@plt>
  419d68:	stur	w0, [x29, #-4]
  419d6c:	mov	w8, #0x1                   	// #1
  419d70:	str	w8, [sp, #136]
  419d74:	b	41a2cc <method_create_session+0xd3c>
  419d78:	ldur	x8, [x29, #-136]
  419d7c:	ldr	x0, [x8, #32]
  419d80:	bl	421dd4 <hashmap_size>
  419d84:	mov	w8, w0
  419d88:	ubfx	x8, x8, #0, #32
  419d8c:	ldur	x9, [x29, #-136]
  419d90:	ldr	x9, [x9, #464]
  419d94:	cmp	x8, x9
  419d98:	b.cc	419dcc <method_create_session+0x83c>  // b.lo, b.ul, b.last
  419d9c:	ldur	x0, [x29, #-32]
  419da0:	ldur	x8, [x29, #-136]
  419da4:	ldr	x3, [x8, #464]
  419da8:	adrp	x1, 445000 <_fini+0x4c30>
  419dac:	add	x1, x1, #0x5a1
  419db0:	adrp	x2, 445000 <_fini+0x4c30>
  419db4:	add	x2, x2, #0x5cb
  419db8:	bl	407468 <sd_bus_error_setf@plt>
  419dbc:	stur	w0, [x29, #-4]
  419dc0:	mov	w9, #0x1                   	// #1
  419dc4:	str	w9, [sp, #136]
  419dc8:	b	41a2cc <method_create_session+0xd3c>
  419dcc:	ldur	w0, [x29, #-156]
  419dd0:	sub	x1, x29, #0x7c
  419dd4:	bl	407638 <audit_session_from_pid@plt>
  419dd8:	ldur	w8, [x29, #-124]
  419ddc:	mov	w0, w8
  419de0:	bl	421df8 <audit_session_is_valid>
  419de4:	tbnz	w0, #0, 419dec <method_create_session+0x85c>
  419de8:	b	419ec8 <method_create_session+0x938>
  419dec:	ldur	w2, [x29, #-124]
  419df0:	sub	x0, x29, #0x70
  419df4:	adrp	x1, 445000 <_fini+0x4c30>
  419df8:	add	x1, x1, #0x610
  419dfc:	bl	406ff8 <asprintf@plt>
  419e00:	cmp	w0, #0x0
  419e04:	cset	w8, ge  // ge = tcont
  419e08:	tbnz	w8, #0, 419e20 <method_create_session+0x890>
  419e0c:	mov	w8, #0xfffffff4            	// #-12
  419e10:	stur	w8, [x29, #-4]
  419e14:	mov	w8, #0x1                   	// #1
  419e18:	str	w8, [sp, #136]
  419e1c:	b	41a2cc <method_create_session+0xd3c>
  419e20:	ldur	x8, [x29, #-136]
  419e24:	ldr	x0, [x8, #32]
  419e28:	ldur	x1, [x29, #-112]
  419e2c:	bl	421e3c <hashmap_contains>
  419e30:	tbnz	w0, #0, 419e38 <method_create_session+0x8a8>
  419e34:	b	419ec8 <method_create_session+0x938>
  419e38:	mov	w8, #0x4                   	// #4
  419e3c:	str	w8, [sp, #116]
  419e40:	str	wzr, [sp, #112]
  419e44:	str	wzr, [sp, #108]
  419e48:	ldr	w0, [sp, #108]
  419e4c:	bl	406c08 <log_get_max_level_realm@plt>
  419e50:	ldr	w8, [sp, #116]
  419e54:	and	w8, w8, #0x7
  419e58:	cmp	w0, w8
  419e5c:	b.lt	419e98 <method_create_session+0x908>  // b.tstop
  419e60:	ldr	w8, [sp, #108]
  419e64:	ldr	w9, [sp, #116]
  419e68:	orr	w0, w9, w8, lsl #10
  419e6c:	ldr	w1, [sp, #112]
  419e70:	ldur	x6, [x29, #-112]
  419e74:	ldr	x2, [sp, #88]
  419e78:	mov	w3, #0x353                 	// #851
  419e7c:	adrp	x4, 445000 <_fini+0x4c30>
  419e80:	add	x4, x4, #0x613
  419e84:	adrp	x5, 445000 <_fini+0x4c30>
  419e88:	add	x5, x5, #0x629
  419e8c:	bl	406c18 <log_internal_realm@plt>
  419e90:	str	w0, [sp, #72]
  419e94:	b	419eac <method_create_session+0x91c>
  419e98:	ldr	w0, [sp, #112]
  419e9c:	bl	406c28 <abs@plt>
  419ea0:	mov	w8, wzr
  419ea4:	subs	w8, w8, w0, uxtb
  419ea8:	str	w8, [sp, #72]
  419eac:	ldr	w8, [sp, #72]
  419eb0:	str	w8, [sp, #104]
  419eb4:	mov	w8, #0xffffffff            	// #-1
  419eb8:	stur	w8, [x29, #-124]
  419ebc:	ldur	x0, [x29, #-112]
  419ec0:	bl	41f5f4 <mfree>
  419ec4:	stur	x0, [x29, #-112]
  419ec8:	ldur	x8, [x29, #-112]
  419ecc:	cbnz	x8, 419f40 <method_create_session+0x9b0>
  419ed0:	sub	x0, x29, #0x70
  419ed4:	ldur	x8, [x29, #-112]
  419ed8:	str	x0, [sp, #64]
  419edc:	mov	x0, x8
  419ee0:	bl	41f5f4 <mfree>
  419ee4:	stur	x0, [x29, #-112]
  419ee8:	ldur	x8, [x29, #-136]
  419eec:	ldr	x9, [x8, #200]
  419ef0:	add	x9, x9, #0x1
  419ef4:	str	x9, [x8, #200]
  419ef8:	ldr	x0, [sp, #64]
  419efc:	adrp	x1, 445000 <_fini+0x4c30>
  419f00:	add	x1, x1, #0x66c
  419f04:	mov	x2, x9
  419f08:	bl	406ff8 <asprintf@plt>
  419f0c:	cmp	w0, #0x0
  419f10:	cset	w10, ge  // ge = tcont
  419f14:	tbnz	w10, #0, 419f2c <method_create_session+0x99c>
  419f18:	mov	w8, #0xfffffff4            	// #-12
  419f1c:	stur	w8, [x29, #-4]
  419f20:	mov	w8, #0x1                   	// #1
  419f24:	str	w8, [sp, #136]
  419f28:	b	41a2cc <method_create_session+0xd3c>
  419f2c:	ldur	x8, [x29, #-136]
  419f30:	ldr	x0, [x8, #32]
  419f34:	ldur	x1, [x29, #-112]
  419f38:	bl	421e3c <hashmap_contains>
  419f3c:	tbnz	w0, #0, 419ed0 <method_create_session+0x940>
  419f40:	ldur	x0, [x29, #-112]
  419f44:	bl	421e6c <SESSION_IS_SELF>
  419f48:	mov	w8, #0x1                   	// #1
  419f4c:	eor	w9, w0, #0x1
  419f50:	eor	w9, w9, w8
  419f54:	eor	w9, w9, w8
  419f58:	eor	w8, w9, w8
  419f5c:	and	w8, w8, #0x1
  419f60:	mov	w1, w8
  419f64:	sxtw	x10, w1
  419f68:	cbz	x10, 419f8c <method_create_session+0x9fc>
  419f6c:	mov	w8, wzr
  419f70:	mov	w0, w8
  419f74:	adrp	x1, 445000 <_fini+0x4c30>
  419f78:	add	x1, x1, #0x671
  419f7c:	ldr	x2, [sp, #88]
  419f80:	mov	w3, #0x364                 	// #868
  419f84:	ldr	x4, [sp, #80]
  419f88:	bl	406c68 <log_assert_failed_realm@plt>
  419f8c:	ldur	x0, [x29, #-112]
  419f90:	bl	421ec0 <SESSION_IS_AUTO>
  419f94:	mov	w8, #0x1                   	// #1
  419f98:	eor	w9, w0, #0x1
  419f9c:	eor	w9, w9, w8
  419fa0:	eor	w9, w9, w8
  419fa4:	eor	w8, w9, w8
  419fa8:	and	w8, w8, #0x1
  419fac:	mov	w1, w8
  419fb0:	sxtw	x10, w1
  419fb4:	cbz	x10, 419fd8 <method_create_session+0xa48>
  419fb8:	mov	w8, wzr
  419fbc:	mov	w0, w8
  419fc0:	adrp	x1, 445000 <_fini+0x4c30>
  419fc4:	add	x1, x1, #0x686
  419fc8:	ldr	x2, [sp, #88]
  419fcc:	mov	w3, #0x365                 	// #869
  419fd0:	ldr	x4, [sp, #80]
  419fd4:	bl	406c68 <log_assert_failed_realm@plt>
  419fd8:	ldur	x0, [x29, #-136]
  419fdc:	bl	414348 <manager_reconnect_utmp>
  419fe0:	ldur	x0, [x29, #-136]
  419fe4:	ldr	w1, [sp, #160]
  419fe8:	sub	x2, x29, #0x90
  419fec:	bl	411ba4 <manager_add_user_by_uid>
  419ff0:	str	w0, [sp, #140]
  419ff4:	ldr	w8, [sp, #140]
  419ff8:	cmp	w8, #0x0
  419ffc:	cset	w8, ge  // ge = tcont
  41a000:	tbnz	w8, #0, 41a008 <method_create_session+0xa78>
  41a004:	b	41a29c <method_create_session+0xd0c>
  41a008:	ldur	x0, [x29, #-136]
  41a00c:	ldur	x1, [x29, #-112]
  41a010:	sub	x2, x29, #0x78
  41a014:	bl	4117c4 <manager_add_session>
  41a018:	str	w0, [sp, #140]
  41a01c:	ldr	w8, [sp, #140]
  41a020:	cmp	w8, #0x0
  41a024:	cset	w8, ge  // ge = tcont
  41a028:	tbnz	w8, #0, 41a030 <method_create_session+0xaa0>
  41a02c:	b	41a29c <method_create_session+0xd0c>
  41a030:	ldur	x0, [x29, #-120]
  41a034:	ldur	x1, [x29, #-144]
  41a038:	bl	4328f0 <session_set_user>
  41a03c:	ldur	x0, [x29, #-120]
  41a040:	ldur	w1, [x29, #-156]
  41a044:	bl	432a7c <session_set_leader>
  41a048:	str	w0, [sp, #140]
  41a04c:	ldr	w8, [sp, #140]
  41a050:	cmp	w8, #0x0
  41a054:	cset	w8, ge  // ge = tcont
  41a058:	tbnz	w8, #0, 41a060 <method_create_session+0xad0>
  41a05c:	b	41a29c <method_create_session+0xd0c>
  41a060:	ldr	w8, [sp, #148]
  41a064:	ldur	x9, [x29, #-120]
  41a068:	str	w8, [x9, #20]
  41a06c:	ldr	w8, [sp, #144]
  41a070:	ldur	x9, [x29, #-120]
  41a074:	str	w8, [x9, #24]
  41a078:	ldr	w8, [sp, #156]
  41a07c:	cmp	w8, #0x0
  41a080:	cset	w8, ne  // ne = any
  41a084:	ldur	x9, [x29, #-120]
  41a088:	and	w8, w8, #0x1
  41a08c:	strb	w8, [x9, #84]
  41a090:	ldr	w8, [sp, #152]
  41a094:	ldur	x9, [x29, #-120]
  41a098:	str	w8, [x9, #144]
  41a09c:	ldur	x0, [x29, #-72]
  41a0a0:	bl	42099c <isempty>
  41a0a4:	tbnz	w0, #0, 41a0d8 <method_create_session+0xb48>
  41a0a8:	ldur	x0, [x29, #-72]
  41a0ac:	bl	407168 <strdup@plt>
  41a0b0:	ldur	x8, [x29, #-120]
  41a0b4:	str	x0, [x8, #72]
  41a0b8:	ldur	x8, [x29, #-120]
  41a0bc:	ldr	x8, [x8, #72]
  41a0c0:	cbnz	x8, 41a0d0 <method_create_session+0xb40>
  41a0c4:	mov	w8, #0xfffffff4            	// #-12
  41a0c8:	str	w8, [sp, #140]
  41a0cc:	b	41a29c <method_create_session+0xd0c>
  41a0d0:	ldur	x8, [x29, #-120]
  41a0d4:	str	wzr, [x8, #80]
  41a0d8:	ldur	x0, [x29, #-80]
  41a0dc:	bl	42099c <isempty>
  41a0e0:	tbnz	w0, #0, 41a10c <method_create_session+0xb7c>
  41a0e4:	ldur	x0, [x29, #-80]
  41a0e8:	bl	407168 <strdup@plt>
  41a0ec:	ldur	x8, [x29, #-120]
  41a0f0:	str	x0, [x8, #64]
  41a0f4:	ldur	x8, [x29, #-120]
  41a0f8:	ldr	x8, [x8, #64]
  41a0fc:	cbnz	x8, 41a10c <method_create_session+0xb7c>
  41a100:	mov	w8, #0xfffffff4            	// #-12
  41a104:	str	w8, [sp, #140]
  41a108:	b	41a29c <method_create_session+0xd0c>
  41a10c:	ldur	x0, [x29, #-88]
  41a110:	bl	42099c <isempty>
  41a114:	tbnz	w0, #0, 41a140 <method_create_session+0xbb0>
  41a118:	ldur	x0, [x29, #-88]
  41a11c:	bl	407168 <strdup@plt>
  41a120:	ldur	x8, [x29, #-120]
  41a124:	str	x0, [x8, #88]
  41a128:	ldur	x8, [x29, #-120]
  41a12c:	ldr	x8, [x8, #88]
  41a130:	cbnz	x8, 41a140 <method_create_session+0xbb0>
  41a134:	mov	w8, #0xfffffff4            	// #-12
  41a138:	str	w8, [sp, #140]
  41a13c:	b	41a29c <method_create_session+0xd0c>
  41a140:	ldur	x0, [x29, #-96]
  41a144:	bl	42099c <isempty>
  41a148:	tbnz	w0, #0, 41a174 <method_create_session+0xbe4>
  41a14c:	ldur	x0, [x29, #-96]
  41a150:	bl	407168 <strdup@plt>
  41a154:	ldur	x8, [x29, #-120]
  41a158:	str	x0, [x8, #96]
  41a15c:	ldur	x8, [x29, #-120]
  41a160:	ldr	x8, [x8, #96]
  41a164:	cbnz	x8, 41a174 <method_create_session+0xbe4>
  41a168:	mov	w8, #0xfffffff4            	// #-12
  41a16c:	str	w8, [sp, #140]
  41a170:	b	41a29c <method_create_session+0xd0c>
  41a174:	ldur	x0, [x29, #-40]
  41a178:	bl	42099c <isempty>
  41a17c:	tbnz	w0, #0, 41a1a8 <method_create_session+0xc18>
  41a180:	ldur	x0, [x29, #-40]
  41a184:	bl	407168 <strdup@plt>
  41a188:	ldur	x8, [x29, #-120]
  41a18c:	str	x0, [x8, #104]
  41a190:	ldur	x8, [x29, #-120]
  41a194:	ldr	x8, [x8, #104]
  41a198:	cbnz	x8, 41a1a8 <method_create_session+0xc18>
  41a19c:	mov	w8, #0xfffffff4            	// #-12
  41a1a0:	str	w8, [sp, #140]
  41a1a4:	b	41a29c <method_create_session+0xd0c>
  41a1a8:	ldur	x0, [x29, #-104]
  41a1ac:	bl	42099c <isempty>
  41a1b0:	tbnz	w0, #0, 41a1dc <method_create_session+0xc4c>
  41a1b4:	ldur	x0, [x29, #-104]
  41a1b8:	bl	407168 <strdup@plt>
  41a1bc:	ldur	x8, [x29, #-120]
  41a1c0:	str	x0, [x8, #112]
  41a1c4:	ldur	x8, [x29, #-120]
  41a1c8:	ldr	x8, [x8, #112]
  41a1cc:	cbnz	x8, 41a1dc <method_create_session+0xc4c>
  41a1d0:	mov	w8, #0xfffffff4            	// #-12
  41a1d4:	str	w8, [sp, #140]
  41a1d8:	b	41a29c <method_create_session+0xd0c>
  41a1dc:	ldur	x8, [x29, #-152]
  41a1e0:	cbz	x8, 41a208 <method_create_session+0xc78>
  41a1e4:	ldur	x0, [x29, #-152]
  41a1e8:	ldur	x1, [x29, #-120]
  41a1ec:	bl	42b660 <seat_attach_session>
  41a1f0:	str	w0, [sp, #140]
  41a1f4:	ldr	w8, [sp, #140]
  41a1f8:	cmp	w8, #0x0
  41a1fc:	cset	w8, ge  // ge = tcont
  41a200:	tbnz	w8, #0, 41a208 <method_create_session+0xc78>
  41a204:	b	41a29c <method_create_session+0xd0c>
  41a208:	ldur	x0, [x29, #-16]
  41a20c:	mov	w1, #0x61                  	// #97
  41a210:	adrp	x2, 443000 <_fini+0x2c30>
  41a214:	add	x2, x2, #0xb2c
  41a218:	bl	407648 <sd_bus_message_enter_container@plt>
  41a21c:	str	w0, [sp, #140]
  41a220:	ldr	w8, [sp, #140]
  41a224:	cmp	w8, #0x0
  41a228:	cset	w8, ge  // ge = tcont
  41a22c:	tbnz	w8, #0, 41a234 <method_create_session+0xca4>
  41a230:	b	41a29c <method_create_session+0xd0c>
  41a234:	ldur	x0, [x29, #-120]
  41a238:	ldur	x1, [x29, #-16]
  41a23c:	ldur	x2, [x29, #-32]
  41a240:	bl	435080 <session_start>
  41a244:	str	w0, [sp, #140]
  41a248:	ldr	w8, [sp, #140]
  41a24c:	cmp	w8, #0x0
  41a250:	cset	w8, ge  // ge = tcont
  41a254:	tbnz	w8, #0, 41a25c <method_create_session+0xccc>
  41a258:	b	41a29c <method_create_session+0xd0c>
  41a25c:	ldur	x0, [x29, #-16]
  41a260:	bl	407658 <sd_bus_message_exit_container@plt>
  41a264:	str	w0, [sp, #140]
  41a268:	ldr	w8, [sp, #140]
  41a26c:	cmp	w8, #0x0
  41a270:	cset	w8, ge  // ge = tcont
  41a274:	tbnz	w8, #0, 41a27c <method_create_session+0xcec>
  41a278:	b	41a29c <method_create_session+0xd0c>
  41a27c:	ldur	x0, [x29, #-16]
  41a280:	bl	407668 <sd_bus_message_ref@plt>
  41a284:	ldur	x8, [x29, #-120]
  41a288:	str	x0, [x8, #216]
  41a28c:	mov	w9, #0x1                   	// #1
  41a290:	stur	w9, [x29, #-4]
  41a294:	str	w9, [sp, #136]
  41a298:	b	41a2cc <method_create_session+0xd3c>
  41a29c:	ldur	x8, [x29, #-120]
  41a2a0:	cbz	x8, 41a2ac <method_create_session+0xd1c>
  41a2a4:	ldur	x0, [x29, #-120]
  41a2a8:	bl	4362d0 <session_add_to_gc_queue>
  41a2ac:	ldur	x8, [x29, #-144]
  41a2b0:	cbz	x8, 41a2bc <method_create_session+0xd2c>
  41a2b4:	ldur	x0, [x29, #-144]
  41a2b8:	bl	43b73c <user_add_to_gc_queue>
  41a2bc:	ldr	w8, [sp, #140]
  41a2c0:	stur	w8, [x29, #-4]
  41a2c4:	mov	w8, #0x1                   	// #1
  41a2c8:	str	w8, [sp, #136]
  41a2cc:	sub	x0, x29, #0x70
  41a2d0:	bl	4152e4 <freep>
  41a2d4:	ldur	w0, [x29, #-4]
  41a2d8:	ldr	x28, [sp, #336]
  41a2dc:	ldp	x29, x30, [sp, #320]
  41a2e0:	add	sp, sp, #0x160
  41a2e4:	ret

000000000041a2e8 <method_release_session>:
  41a2e8:	sub	sp, sp, #0x60
  41a2ec:	stp	x29, x30, [sp, #80]
  41a2f0:	add	x29, sp, #0x50
  41a2f4:	adrp	x8, 442000 <_fini+0x1c30>
  41a2f8:	add	x8, x8, #0xd8e
  41a2fc:	add	x8, x8, #0x3
  41a300:	stur	x0, [x29, #-16]
  41a304:	stur	x1, [x29, #-24]
  41a308:	stur	x2, [x29, #-32]
  41a30c:	ldur	x9, [x29, #-24]
  41a310:	str	x9, [sp, #40]
  41a314:	str	x8, [sp, #8]
  41a318:	ldur	x8, [x29, #-16]
  41a31c:	cmp	x8, #0x0
  41a320:	cset	w9, ne  // ne = any
  41a324:	mov	w10, #0x1                   	// #1
  41a328:	eor	w9, w9, #0x1
  41a32c:	eor	w9, w9, w10
  41a330:	eor	w9, w9, w10
  41a334:	and	w9, w9, #0x1
  41a338:	mov	w0, w9
  41a33c:	sxtw	x8, w0
  41a340:	cbz	x8, 41a368 <method_release_session+0x80>
  41a344:	mov	w8, wzr
  41a348:	mov	w0, w8
  41a34c:	adrp	x1, 443000 <_fini+0x2c30>
  41a350:	add	x1, x1, #0x812
  41a354:	ldr	x2, [sp, #8]
  41a358:	mov	w3, #0x3d7                 	// #983
  41a35c:	adrp	x4, 445000 <_fini+0x4c30>
  41a360:	add	x4, x4, #0x69b
  41a364:	bl	406c68 <log_assert_failed_realm@plt>
  41a368:	ldr	x8, [sp, #40]
  41a36c:	cmp	x8, #0x0
  41a370:	cset	w9, ne  // ne = any
  41a374:	mov	w10, #0x1                   	// #1
  41a378:	eor	w9, w9, #0x1
  41a37c:	eor	w9, w9, w10
  41a380:	eor	w9, w9, w10
  41a384:	and	w9, w9, #0x1
  41a388:	mov	w0, w9
  41a38c:	sxtw	x8, w0
  41a390:	cbz	x8, 41a3b8 <method_release_session+0xd0>
  41a394:	mov	w8, wzr
  41a398:	mov	w0, w8
  41a39c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41a3a0:	add	x1, x1, #0x5ef
  41a3a4:	ldr	x2, [sp, #8]
  41a3a8:	mov	w3, #0x3d8                 	// #984
  41a3ac:	adrp	x4, 445000 <_fini+0x4c30>
  41a3b0:	add	x4, x4, #0x69b
  41a3b4:	bl	406c68 <log_assert_failed_realm@plt>
  41a3b8:	ldur	x0, [x29, #-16]
  41a3bc:	adrp	x1, 442000 <_fini+0x1c30>
  41a3c0:	add	x1, x1, #0xf2
  41a3c4:	add	x2, sp, #0x18
  41a3c8:	bl	4074c8 <sd_bus_message_read@plt>
  41a3cc:	str	w0, [sp, #20]
  41a3d0:	ldr	w8, [sp, #20]
  41a3d4:	cmp	w8, #0x0
  41a3d8:	cset	w8, ge  // ge = tcont
  41a3dc:	tbnz	w8, #0, 41a3ec <method_release_session+0x104>
  41a3e0:	ldr	w8, [sp, #20]
  41a3e4:	stur	w8, [x29, #-4]
  41a3e8:	b	41a460 <method_release_session+0x178>
  41a3ec:	ldr	x0, [sp, #40]
  41a3f0:	ldur	x1, [x29, #-16]
  41a3f4:	ldr	x2, [sp, #24]
  41a3f8:	ldur	x3, [x29, #-32]
  41a3fc:	add	x4, sp, #0x20
  41a400:	bl	414498 <manager_get_session_from_creds>
  41a404:	str	w0, [sp, #20]
  41a408:	ldr	w8, [sp, #20]
  41a40c:	cmp	w8, #0x0
  41a410:	cset	w8, ge  // ge = tcont
  41a414:	tbnz	w8, #0, 41a424 <method_release_session+0x13c>
  41a418:	ldr	w8, [sp, #20]
  41a41c:	stur	w8, [x29, #-4]
  41a420:	b	41a460 <method_release_session+0x178>
  41a424:	ldr	x0, [sp, #32]
  41a428:	bl	43641c <session_release>
  41a42c:	str	w0, [sp, #20]
  41a430:	ldr	w8, [sp, #20]
  41a434:	cmp	w8, #0x0
  41a438:	cset	w8, ge  // ge = tcont
  41a43c:	tbnz	w8, #0, 41a44c <method_release_session+0x164>
  41a440:	ldr	w8, [sp, #20]
  41a444:	stur	w8, [x29, #-4]
  41a448:	b	41a460 <method_release_session+0x178>
  41a44c:	ldur	x0, [x29, #-16]
  41a450:	mov	x8, xzr
  41a454:	mov	x1, x8
  41a458:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41a45c:	stur	w0, [x29, #-4]
  41a460:	ldur	w0, [x29, #-4]
  41a464:	ldp	x29, x30, [sp, #80]
  41a468:	add	sp, sp, #0x60
  41a46c:	ret

000000000041a470 <method_activate_session>:
  41a470:	sub	sp, sp, #0x60
  41a474:	stp	x29, x30, [sp, #80]
  41a478:	add	x29, sp, #0x50
  41a47c:	adrp	x8, 442000 <_fini+0x1c30>
  41a480:	add	x8, x8, #0xd8e
  41a484:	add	x8, x8, #0x3
  41a488:	stur	x0, [x29, #-16]
  41a48c:	stur	x1, [x29, #-24]
  41a490:	stur	x2, [x29, #-32]
  41a494:	ldur	x9, [x29, #-24]
  41a498:	str	x9, [sp, #40]
  41a49c:	str	x8, [sp, #8]
  41a4a0:	ldur	x8, [x29, #-16]
  41a4a4:	cmp	x8, #0x0
  41a4a8:	cset	w9, ne  // ne = any
  41a4ac:	mov	w10, #0x1                   	// #1
  41a4b0:	eor	w9, w9, #0x1
  41a4b4:	eor	w9, w9, w10
  41a4b8:	eor	w9, w9, w10
  41a4bc:	and	w9, w9, #0x1
  41a4c0:	mov	w0, w9
  41a4c4:	sxtw	x8, w0
  41a4c8:	cbz	x8, 41a4f0 <method_activate_session+0x80>
  41a4cc:	mov	w8, wzr
  41a4d0:	mov	w0, w8
  41a4d4:	adrp	x1, 443000 <_fini+0x2c30>
  41a4d8:	add	x1, x1, #0x812
  41a4dc:	ldr	x2, [sp, #8]
  41a4e0:	mov	w3, #0x3ef                 	// #1007
  41a4e4:	adrp	x4, 445000 <_fini+0x4c30>
  41a4e8:	add	x4, x4, #0x6e0
  41a4ec:	bl	406c68 <log_assert_failed_realm@plt>
  41a4f0:	ldr	x8, [sp, #40]
  41a4f4:	cmp	x8, #0x0
  41a4f8:	cset	w9, ne  // ne = any
  41a4fc:	mov	w10, #0x1                   	// #1
  41a500:	eor	w9, w9, #0x1
  41a504:	eor	w9, w9, w10
  41a508:	eor	w9, w9, w10
  41a50c:	and	w9, w9, #0x1
  41a510:	mov	w0, w9
  41a514:	sxtw	x8, w0
  41a518:	cbz	x8, 41a540 <method_activate_session+0xd0>
  41a51c:	mov	w8, wzr
  41a520:	mov	w0, w8
  41a524:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41a528:	add	x1, x1, #0x5ef
  41a52c:	ldr	x2, [sp, #8]
  41a530:	mov	w3, #0x3f0                 	// #1008
  41a534:	adrp	x4, 445000 <_fini+0x4c30>
  41a538:	add	x4, x4, #0x6e0
  41a53c:	bl	406c68 <log_assert_failed_realm@plt>
  41a540:	ldur	x0, [x29, #-16]
  41a544:	adrp	x1, 442000 <_fini+0x1c30>
  41a548:	add	x1, x1, #0xf2
  41a54c:	add	x2, sp, #0x18
  41a550:	bl	4074c8 <sd_bus_message_read@plt>
  41a554:	str	w0, [sp, #20]
  41a558:	ldr	w8, [sp, #20]
  41a55c:	cmp	w8, #0x0
  41a560:	cset	w8, ge  // ge = tcont
  41a564:	tbnz	w8, #0, 41a574 <method_activate_session+0x104>
  41a568:	ldr	w8, [sp, #20]
  41a56c:	stur	w8, [x29, #-4]
  41a570:	b	41a5c0 <method_activate_session+0x150>
  41a574:	ldr	x0, [sp, #40]
  41a578:	ldur	x1, [x29, #-16]
  41a57c:	ldr	x2, [sp, #24]
  41a580:	ldur	x3, [x29, #-32]
  41a584:	add	x4, sp, #0x20
  41a588:	bl	414498 <manager_get_session_from_creds>
  41a58c:	str	w0, [sp, #20]
  41a590:	ldr	w8, [sp, #20]
  41a594:	cmp	w8, #0x0
  41a598:	cset	w8, ge  // ge = tcont
  41a59c:	tbnz	w8, #0, 41a5ac <method_activate_session+0x13c>
  41a5a0:	ldr	w8, [sp, #20]
  41a5a4:	stur	w8, [x29, #-4]
  41a5a8:	b	41a5c0 <method_activate_session+0x150>
  41a5ac:	ldur	x0, [x29, #-16]
  41a5b0:	ldr	x1, [sp, #32]
  41a5b4:	ldur	x2, [x29, #-32]
  41a5b8:	bl	42c058 <bus_session_method_activate>
  41a5bc:	stur	w0, [x29, #-4]
  41a5c0:	ldur	w0, [x29, #-4]
  41a5c4:	ldp	x29, x30, [sp, #80]
  41a5c8:	add	sp, sp, #0x60
  41a5cc:	ret

000000000041a5d0 <method_activate_session_on_seat>:
  41a5d0:	sub	sp, sp, #0x70
  41a5d4:	stp	x29, x30, [sp, #96]
  41a5d8:	add	x29, sp, #0x60
  41a5dc:	adrp	x8, 442000 <_fini+0x1c30>
  41a5e0:	add	x8, x8, #0xd8e
  41a5e4:	add	x8, x8, #0x3
  41a5e8:	stur	x0, [x29, #-16]
  41a5ec:	stur	x1, [x29, #-24]
  41a5f0:	stur	x2, [x29, #-32]
  41a5f4:	ldur	x9, [x29, #-24]
  41a5f8:	str	x9, [sp, #40]
  41a5fc:	str	x8, [sp, #8]
  41a600:	ldur	x8, [x29, #-16]
  41a604:	cmp	x8, #0x0
  41a608:	cset	w9, ne  // ne = any
  41a60c:	mov	w10, #0x1                   	// #1
  41a610:	eor	w9, w9, #0x1
  41a614:	eor	w9, w9, w10
  41a618:	eor	w9, w9, w10
  41a61c:	and	w9, w9, #0x1
  41a620:	mov	w0, w9
  41a624:	sxtw	x8, w0
  41a628:	cbz	x8, 41a650 <method_activate_session_on_seat+0x80>
  41a62c:	mov	w8, wzr
  41a630:	mov	w0, w8
  41a634:	adrp	x1, 443000 <_fini+0x2c30>
  41a638:	add	x1, x1, #0x812
  41a63c:	ldr	x2, [sp, #8]
  41a640:	mov	w3, #0x404                 	// #1028
  41a644:	adrp	x4, 445000 <_fini+0x4c30>
  41a648:	add	x4, x4, #0x726
  41a64c:	bl	406c68 <log_assert_failed_realm@plt>
  41a650:	ldr	x8, [sp, #40]
  41a654:	cmp	x8, #0x0
  41a658:	cset	w9, ne  // ne = any
  41a65c:	mov	w10, #0x1                   	// #1
  41a660:	eor	w9, w9, #0x1
  41a664:	eor	w9, w9, w10
  41a668:	eor	w9, w9, w10
  41a66c:	and	w9, w9, #0x1
  41a670:	mov	w0, w9
  41a674:	sxtw	x8, w0
  41a678:	cbz	x8, 41a6a0 <method_activate_session_on_seat+0xd0>
  41a67c:	mov	w8, wzr
  41a680:	mov	w0, w8
  41a684:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41a688:	add	x1, x1, #0x5ef
  41a68c:	ldr	x2, [sp, #8]
  41a690:	mov	w3, #0x405                 	// #1029
  41a694:	adrp	x4, 445000 <_fini+0x4c30>
  41a698:	add	x4, x4, #0x726
  41a69c:	bl	406c68 <log_assert_failed_realm@plt>
  41a6a0:	ldur	x0, [x29, #-16]
  41a6a4:	adrp	x1, 442000 <_fini+0x1c30>
  41a6a8:	add	x1, x1, #0x981
  41a6ac:	sub	x2, x29, #0x28
  41a6b0:	add	x3, sp, #0x30
  41a6b4:	bl	4074c8 <sd_bus_message_read@plt>
  41a6b8:	str	w0, [sp, #20]
  41a6bc:	ldr	w8, [sp, #20]
  41a6c0:	cmp	w8, #0x0
  41a6c4:	cset	w8, ge  // ge = tcont
  41a6c8:	tbnz	w8, #0, 41a6d8 <method_activate_session_on_seat+0x108>
  41a6cc:	ldr	w8, [sp, #20]
  41a6d0:	stur	w8, [x29, #-4]
  41a6d4:	b	41a7c0 <method_activate_session_on_seat+0x1f0>
  41a6d8:	ldr	x0, [sp, #40]
  41a6dc:	ldur	x1, [x29, #-16]
  41a6e0:	ldur	x2, [x29, #-40]
  41a6e4:	ldur	x3, [x29, #-32]
  41a6e8:	add	x4, sp, #0x20
  41a6ec:	bl	414498 <manager_get_session_from_creds>
  41a6f0:	str	w0, [sp, #20]
  41a6f4:	ldr	w8, [sp, #20]
  41a6f8:	cmp	w8, #0x0
  41a6fc:	cset	w8, ge  // ge = tcont
  41a700:	tbnz	w8, #0, 41a710 <method_activate_session_on_seat+0x140>
  41a704:	ldr	w8, [sp, #20]
  41a708:	stur	w8, [x29, #-4]
  41a70c:	b	41a7c0 <method_activate_session_on_seat+0x1f0>
  41a710:	ldr	x0, [sp, #40]
  41a714:	ldur	x1, [x29, #-16]
  41a718:	ldr	x2, [sp, #48]
  41a71c:	ldur	x3, [x29, #-32]
  41a720:	add	x4, sp, #0x18
  41a724:	bl	414b68 <manager_get_seat_from_creds>
  41a728:	str	w0, [sp, #20]
  41a72c:	ldr	w8, [sp, #20]
  41a730:	cmp	w8, #0x0
  41a734:	cset	w8, ge  // ge = tcont
  41a738:	tbnz	w8, #0, 41a748 <method_activate_session_on_seat+0x178>
  41a73c:	ldr	w8, [sp, #20]
  41a740:	stur	w8, [x29, #-4]
  41a744:	b	41a7c0 <method_activate_session_on_seat+0x1f0>
  41a748:	ldr	x8, [sp, #32]
  41a74c:	ldr	x8, [x8, #136]
  41a750:	ldr	x9, [sp, #24]
  41a754:	cmp	x8, x9
  41a758:	b.eq	41a784 <method_activate_session_on_seat+0x1b4>  // b.none
  41a75c:	ldur	x0, [x29, #-32]
  41a760:	ldur	x3, [x29, #-40]
  41a764:	ldr	x4, [sp, #48]
  41a768:	adrp	x1, 445000 <_fini+0x4c30>
  41a76c:	add	x1, x1, #0x774
  41a770:	adrp	x2, 445000 <_fini+0x4c30>
  41a774:	add	x2, x2, #0x79c
  41a778:	bl	407468 <sd_bus_error_setf@plt>
  41a77c:	stur	w0, [x29, #-4]
  41a780:	b	41a7c0 <method_activate_session_on_seat+0x1f0>
  41a784:	ldr	x0, [sp, #32]
  41a788:	bl	434f00 <session_activate>
  41a78c:	str	w0, [sp, #20]
  41a790:	ldr	w8, [sp, #20]
  41a794:	cmp	w8, #0x0
  41a798:	cset	w8, ge  // ge = tcont
  41a79c:	tbnz	w8, #0, 41a7ac <method_activate_session_on_seat+0x1dc>
  41a7a0:	ldr	w8, [sp, #20]
  41a7a4:	stur	w8, [x29, #-4]
  41a7a8:	b	41a7c0 <method_activate_session_on_seat+0x1f0>
  41a7ac:	ldur	x0, [x29, #-16]
  41a7b0:	mov	x8, xzr
  41a7b4:	mov	x1, x8
  41a7b8:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41a7bc:	stur	w0, [x29, #-4]
  41a7c0:	ldur	w0, [x29, #-4]
  41a7c4:	ldp	x29, x30, [sp, #96]
  41a7c8:	add	sp, sp, #0x70
  41a7cc:	ret

000000000041a7d0 <method_lock_session>:
  41a7d0:	sub	sp, sp, #0x60
  41a7d4:	stp	x29, x30, [sp, #80]
  41a7d8:	add	x29, sp, #0x50
  41a7dc:	adrp	x8, 442000 <_fini+0x1c30>
  41a7e0:	add	x8, x8, #0xd8e
  41a7e4:	add	x8, x8, #0x3
  41a7e8:	stur	x0, [x29, #-16]
  41a7ec:	stur	x1, [x29, #-24]
  41a7f0:	stur	x2, [x29, #-32]
  41a7f4:	ldur	x9, [x29, #-24]
  41a7f8:	str	x9, [sp, #40]
  41a7fc:	str	x8, [sp, #8]
  41a800:	ldur	x8, [x29, #-16]
  41a804:	cmp	x8, #0x0
  41a808:	cset	w9, ne  // ne = any
  41a80c:	mov	w10, #0x1                   	// #1
  41a810:	eor	w9, w9, #0x1
  41a814:	eor	w9, w9, w10
  41a818:	eor	w9, w9, w10
  41a81c:	and	w9, w9, #0x1
  41a820:	mov	w0, w9
  41a824:	sxtw	x8, w0
  41a828:	cbz	x8, 41a850 <method_lock_session+0x80>
  41a82c:	mov	w8, wzr
  41a830:	mov	w0, w8
  41a834:	adrp	x1, 443000 <_fini+0x2c30>
  41a838:	add	x1, x1, #0x812
  41a83c:	ldr	x2, [sp, #8]
  41a840:	mov	w3, #0x426                 	// #1062
  41a844:	adrp	x4, 445000 <_fini+0x4c30>
  41a848:	add	x4, x4, #0x7b6
  41a84c:	bl	406c68 <log_assert_failed_realm@plt>
  41a850:	ldr	x8, [sp, #40]
  41a854:	cmp	x8, #0x0
  41a858:	cset	w9, ne  // ne = any
  41a85c:	mov	w10, #0x1                   	// #1
  41a860:	eor	w9, w9, #0x1
  41a864:	eor	w9, w9, w10
  41a868:	eor	w9, w9, w10
  41a86c:	and	w9, w9, #0x1
  41a870:	mov	w0, w9
  41a874:	sxtw	x8, w0
  41a878:	cbz	x8, 41a8a0 <method_lock_session+0xd0>
  41a87c:	mov	w8, wzr
  41a880:	mov	w0, w8
  41a884:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41a888:	add	x1, x1, #0x5ef
  41a88c:	ldr	x2, [sp, #8]
  41a890:	mov	w3, #0x427                 	// #1063
  41a894:	adrp	x4, 445000 <_fini+0x4c30>
  41a898:	add	x4, x4, #0x7b6
  41a89c:	bl	406c68 <log_assert_failed_realm@plt>
  41a8a0:	ldur	x0, [x29, #-16]
  41a8a4:	adrp	x1, 442000 <_fini+0x1c30>
  41a8a8:	add	x1, x1, #0xf2
  41a8ac:	add	x2, sp, #0x18
  41a8b0:	bl	4074c8 <sd_bus_message_read@plt>
  41a8b4:	str	w0, [sp, #20]
  41a8b8:	ldr	w8, [sp, #20]
  41a8bc:	cmp	w8, #0x0
  41a8c0:	cset	w8, ge  // ge = tcont
  41a8c4:	tbnz	w8, #0, 41a8d4 <method_lock_session+0x104>
  41a8c8:	ldr	w8, [sp, #20]
  41a8cc:	stur	w8, [x29, #-4]
  41a8d0:	b	41a920 <method_lock_session+0x150>
  41a8d4:	ldr	x0, [sp, #40]
  41a8d8:	ldur	x1, [x29, #-16]
  41a8dc:	ldr	x2, [sp, #24]
  41a8e0:	ldur	x3, [x29, #-32]
  41a8e4:	add	x4, sp, #0x20
  41a8e8:	bl	414498 <manager_get_session_from_creds>
  41a8ec:	str	w0, [sp, #20]
  41a8f0:	ldr	w8, [sp, #20]
  41a8f4:	cmp	w8, #0x0
  41a8f8:	cset	w8, ge  // ge = tcont
  41a8fc:	tbnz	w8, #0, 41a90c <method_lock_session+0x13c>
  41a900:	ldr	w8, [sp, #20]
  41a904:	stur	w8, [x29, #-4]
  41a908:	b	41a920 <method_lock_session+0x150>
  41a90c:	ldur	x0, [x29, #-16]
  41a910:	ldr	x1, [sp, #32]
  41a914:	ldur	x2, [x29, #-32]
  41a918:	bl	42c174 <bus_session_method_lock>
  41a91c:	stur	w0, [x29, #-4]
  41a920:	ldur	w0, [x29, #-4]
  41a924:	ldp	x29, x30, [sp, #80]
  41a928:	add	sp, sp, #0x60
  41a92c:	ret

000000000041a930 <method_lock_sessions>:
  41a930:	sub	sp, sp, #0x50
  41a934:	stp	x29, x30, [sp, #64]
  41a938:	add	x29, sp, #0x40
  41a93c:	adrp	x8, 442000 <_fini+0x1c30>
  41a940:	add	x8, x8, #0xd8e
  41a944:	add	x8, x8, #0x3
  41a948:	stur	x0, [x29, #-16]
  41a94c:	stur	x1, [x29, #-24]
  41a950:	str	x2, [sp, #32]
  41a954:	ldur	x9, [x29, #-24]
  41a958:	str	x9, [sp, #24]
  41a95c:	str	x8, [sp, #8]
  41a960:	ldur	x8, [x29, #-16]
  41a964:	cmp	x8, #0x0
  41a968:	cset	w9, ne  // ne = any
  41a96c:	mov	w10, #0x1                   	// #1
  41a970:	eor	w9, w9, #0x1
  41a974:	eor	w9, w9, w10
  41a978:	eor	w9, w9, w10
  41a97c:	and	w9, w9, #0x1
  41a980:	mov	w0, w9
  41a984:	sxtw	x8, w0
  41a988:	cbz	x8, 41a9b0 <method_lock_sessions+0x80>
  41a98c:	mov	w8, wzr
  41a990:	mov	w0, w8
  41a994:	adrp	x1, 443000 <_fini+0x2c30>
  41a998:	add	x1, x1, #0x812
  41a99c:	ldr	x2, [sp, #8]
  41a9a0:	mov	w3, #0x438                 	// #1080
  41a9a4:	adrp	x4, 445000 <_fini+0x4c30>
  41a9a8:	add	x4, x4, #0x7f8
  41a9ac:	bl	406c68 <log_assert_failed_realm@plt>
  41a9b0:	ldr	x8, [sp, #24]
  41a9b4:	cmp	x8, #0x0
  41a9b8:	cset	w9, ne  // ne = any
  41a9bc:	mov	w10, #0x1                   	// #1
  41a9c0:	eor	w9, w9, #0x1
  41a9c4:	eor	w9, w9, w10
  41a9c8:	eor	w9, w9, w10
  41a9cc:	and	w9, w9, #0x1
  41a9d0:	mov	w0, w9
  41a9d4:	sxtw	x8, w0
  41a9d8:	cbz	x8, 41aa00 <method_lock_sessions+0xd0>
  41a9dc:	mov	w8, wzr
  41a9e0:	mov	w0, w8
  41a9e4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41a9e8:	add	x1, x1, #0x5ef
  41a9ec:	ldr	x2, [sp, #8]
  41a9f0:	mov	w3, #0x439                 	// #1081
  41a9f4:	adrp	x4, 445000 <_fini+0x4c30>
  41a9f8:	add	x4, x4, #0x7f8
  41a9fc:	bl	406c68 <log_assert_failed_realm@plt>
  41aa00:	ldur	x0, [x29, #-16]
  41aa04:	ldr	x8, [sp, #24]
  41aa08:	add	x6, x8, #0x1b0
  41aa0c:	ldr	x7, [sp, #32]
  41aa10:	mov	w1, #0x15                  	// #21
  41aa14:	adrp	x2, 445000 <_fini+0x4c30>
  41aa18:	add	x2, x2, #0x83b
  41aa1c:	mov	x8, xzr
  41aa20:	mov	x3, x8
  41aa24:	mov	w9, wzr
  41aa28:	and	w4, w9, #0x1
  41aa2c:	mov	w5, #0xffffffff            	// #-1
  41aa30:	bl	407678 <bus_verify_polkit_async@plt>
  41aa34:	str	w0, [sp, #20]
  41aa38:	ldr	w9, [sp, #20]
  41aa3c:	cmp	w9, #0x0
  41aa40:	cset	w9, ge  // ge = tcont
  41aa44:	tbnz	w9, #0, 41aa54 <method_lock_sessions+0x124>
  41aa48:	ldr	w8, [sp, #20]
  41aa4c:	stur	w8, [x29, #-4]
  41aa50:	b	41aad0 <method_lock_sessions+0x1a0>
  41aa54:	ldr	w8, [sp, #20]
  41aa58:	cbnz	w8, 41aa68 <method_lock_sessions+0x138>
  41aa5c:	mov	w8, #0x1                   	// #1
  41aa60:	stur	w8, [x29, #-4]
  41aa64:	b	41aad0 <method_lock_sessions+0x1a0>
  41aa68:	ldr	x0, [sp, #24]
  41aa6c:	ldur	x8, [x29, #-16]
  41aa70:	str	x0, [sp]
  41aa74:	mov	x0, x8
  41aa78:	bl	407688 <sd_bus_message_get_member@plt>
  41aa7c:	adrp	x1, 443000 <_fini+0x2c30>
  41aa80:	add	x1, x1, #0x55e
  41aa84:	bl	407158 <strcmp@plt>
  41aa88:	cmp	w0, #0x0
  41aa8c:	cset	w9, eq  // eq = none
  41aa90:	ldr	x0, [sp]
  41aa94:	and	w1, w9, #0x1
  41aa98:	bl	42f8d0 <session_send_lock_all>
  41aa9c:	str	w0, [sp, #20]
  41aaa0:	ldr	w9, [sp, #20]
  41aaa4:	cmp	w9, #0x0
  41aaa8:	cset	w9, ge  // ge = tcont
  41aaac:	tbnz	w9, #0, 41aabc <method_lock_sessions+0x18c>
  41aab0:	ldr	w8, [sp, #20]
  41aab4:	stur	w8, [x29, #-4]
  41aab8:	b	41aad0 <method_lock_sessions+0x1a0>
  41aabc:	ldur	x0, [x29, #-16]
  41aac0:	mov	x8, xzr
  41aac4:	mov	x1, x8
  41aac8:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41aacc:	stur	w0, [x29, #-4]
  41aad0:	ldur	w0, [x29, #-4]
  41aad4:	ldp	x29, x30, [sp, #64]
  41aad8:	add	sp, sp, #0x50
  41aadc:	ret

000000000041aae0 <method_kill_session>:
  41aae0:	sub	sp, sp, #0x60
  41aae4:	stp	x29, x30, [sp, #80]
  41aae8:	add	x29, sp, #0x50
  41aaec:	adrp	x8, 442000 <_fini+0x1c30>
  41aaf0:	add	x8, x8, #0xd8e
  41aaf4:	add	x8, x8, #0x3
  41aaf8:	stur	x0, [x29, #-16]
  41aafc:	stur	x1, [x29, #-24]
  41ab00:	stur	x2, [x29, #-32]
  41ab04:	ldur	x9, [x29, #-24]
  41ab08:	str	x9, [sp, #32]
  41ab0c:	str	x8, [sp, #8]
  41ab10:	ldur	x8, [x29, #-16]
  41ab14:	cmp	x8, #0x0
  41ab18:	cset	w9, ne  // ne = any
  41ab1c:	mov	w10, #0x1                   	// #1
  41ab20:	eor	w9, w9, #0x1
  41ab24:	eor	w9, w9, w10
  41ab28:	eor	w9, w9, w10
  41ab2c:	and	w9, w9, #0x1
  41ab30:	mov	w0, w9
  41ab34:	sxtw	x8, w0
  41ab38:	cbz	x8, 41ab60 <method_kill_session+0x80>
  41ab3c:	mov	w8, wzr
  41ab40:	mov	w0, w8
  41ab44:	adrp	x1, 443000 <_fini+0x2c30>
  41ab48:	add	x1, x1, #0x812
  41ab4c:	ldr	x2, [sp, #8]
  41ab50:	mov	w3, #0x456                 	// #1110
  41ab54:	adrp	x4, 445000 <_fini+0x4c30>
  41ab58:	add	x4, x4, #0x860
  41ab5c:	bl	406c68 <log_assert_failed_realm@plt>
  41ab60:	ldr	x8, [sp, #32]
  41ab64:	cmp	x8, #0x0
  41ab68:	cset	w9, ne  // ne = any
  41ab6c:	mov	w10, #0x1                   	// #1
  41ab70:	eor	w9, w9, #0x1
  41ab74:	eor	w9, w9, w10
  41ab78:	eor	w9, w9, w10
  41ab7c:	and	w9, w9, #0x1
  41ab80:	mov	w0, w9
  41ab84:	sxtw	x8, w0
  41ab88:	cbz	x8, 41abb0 <method_kill_session+0xd0>
  41ab8c:	mov	w8, wzr
  41ab90:	mov	w0, w8
  41ab94:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41ab98:	add	x1, x1, #0x5ef
  41ab9c:	ldr	x2, [sp, #8]
  41aba0:	mov	w3, #0x457                 	// #1111
  41aba4:	adrp	x4, 445000 <_fini+0x4c30>
  41aba8:	add	x4, x4, #0x860
  41abac:	bl	406c68 <log_assert_failed_realm@plt>
  41abb0:	ldur	x0, [x29, #-16]
  41abb4:	adrp	x1, 442000 <_fini+0x1c30>
  41abb8:	add	x1, x1, #0xf2
  41abbc:	add	x2, sp, #0x28
  41abc0:	bl	4074c8 <sd_bus_message_read@plt>
  41abc4:	str	w0, [sp, #20]
  41abc8:	ldr	w8, [sp, #20]
  41abcc:	cmp	w8, #0x0
  41abd0:	cset	w8, ge  // ge = tcont
  41abd4:	tbnz	w8, #0, 41abe4 <method_kill_session+0x104>
  41abd8:	ldr	w8, [sp, #20]
  41abdc:	stur	w8, [x29, #-4]
  41abe0:	b	41ac30 <method_kill_session+0x150>
  41abe4:	ldr	x0, [sp, #32]
  41abe8:	ldur	x1, [x29, #-16]
  41abec:	ldr	x2, [sp, #40]
  41abf0:	ldur	x3, [x29, #-32]
  41abf4:	add	x4, sp, #0x18
  41abf8:	bl	414498 <manager_get_session_from_creds>
  41abfc:	str	w0, [sp, #20]
  41ac00:	ldr	w8, [sp, #20]
  41ac04:	cmp	w8, #0x0
  41ac08:	cset	w8, ge  // ge = tcont
  41ac0c:	tbnz	w8, #0, 41ac1c <method_kill_session+0x13c>
  41ac10:	ldr	w8, [sp, #20]
  41ac14:	stur	w8, [x29, #-4]
  41ac18:	b	41ac30 <method_kill_session+0x150>
  41ac1c:	ldur	x0, [x29, #-16]
  41ac20:	ldr	x1, [sp, #24]
  41ac24:	ldur	x2, [x29, #-32]
  41ac28:	bl	42c440 <bus_session_method_kill>
  41ac2c:	stur	w0, [x29, #-4]
  41ac30:	ldur	w0, [x29, #-4]
  41ac34:	ldp	x29, x30, [sp, #80]
  41ac38:	add	sp, sp, #0x60
  41ac3c:	ret

000000000041ac40 <method_kill_user>:
  41ac40:	sub	sp, sp, #0x60
  41ac44:	stp	x29, x30, [sp, #80]
  41ac48:	add	x29, sp, #0x50
  41ac4c:	adrp	x8, 442000 <_fini+0x1c30>
  41ac50:	add	x8, x8, #0xd8e
  41ac54:	add	x8, x8, #0x3
  41ac58:	stur	x0, [x29, #-16]
  41ac5c:	stur	x1, [x29, #-24]
  41ac60:	stur	x2, [x29, #-32]
  41ac64:	ldur	x9, [x29, #-24]
  41ac68:	str	x9, [sp, #40]
  41ac6c:	str	x8, [sp, #8]
  41ac70:	ldur	x8, [x29, #-16]
  41ac74:	cmp	x8, #0x0
  41ac78:	cset	w9, ne  // ne = any
  41ac7c:	mov	w10, #0x1                   	// #1
  41ac80:	eor	w9, w9, #0x1
  41ac84:	eor	w9, w9, w10
  41ac88:	eor	w9, w9, w10
  41ac8c:	and	w9, w9, #0x1
  41ac90:	mov	w0, w9
  41ac94:	sxtw	x8, w0
  41ac98:	cbz	x8, 41acc0 <method_kill_user+0x80>
  41ac9c:	mov	w8, wzr
  41aca0:	mov	w0, w8
  41aca4:	adrp	x1, 443000 <_fini+0x2c30>
  41aca8:	add	x1, x1, #0x812
  41acac:	ldr	x2, [sp, #8]
  41acb0:	mov	w3, #0x46a                 	// #1130
  41acb4:	adrp	x4, 445000 <_fini+0x4c30>
  41acb8:	add	x4, x4, #0x8a2
  41acbc:	bl	406c68 <log_assert_failed_realm@plt>
  41acc0:	ldr	x8, [sp, #40]
  41acc4:	cmp	x8, #0x0
  41acc8:	cset	w9, ne  // ne = any
  41accc:	mov	w10, #0x1                   	// #1
  41acd0:	eor	w9, w9, #0x1
  41acd4:	eor	w9, w9, w10
  41acd8:	eor	w9, w9, w10
  41acdc:	and	w9, w9, #0x1
  41ace0:	mov	w0, w9
  41ace4:	sxtw	x8, w0
  41ace8:	cbz	x8, 41ad10 <method_kill_user+0xd0>
  41acec:	mov	w8, wzr
  41acf0:	mov	w0, w8
  41acf4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41acf8:	add	x1, x1, #0x5ef
  41acfc:	ldr	x2, [sp, #8]
  41ad00:	mov	w3, #0x46b                 	// #1131
  41ad04:	adrp	x4, 445000 <_fini+0x4c30>
  41ad08:	add	x4, x4, #0x8a2
  41ad0c:	bl	406c68 <log_assert_failed_realm@plt>
  41ad10:	ldur	x0, [x29, #-16]
  41ad14:	adrp	x1, 443000 <_fini+0x2c30>
  41ad18:	add	x1, x1, #0x1dd
  41ad1c:	add	x2, sp, #0x24
  41ad20:	bl	4074c8 <sd_bus_message_read@plt>
  41ad24:	str	w0, [sp, #20]
  41ad28:	ldr	w8, [sp, #20]
  41ad2c:	cmp	w8, #0x0
  41ad30:	cset	w8, ge  // ge = tcont
  41ad34:	tbnz	w8, #0, 41ad44 <method_kill_user+0x104>
  41ad38:	ldr	w8, [sp, #20]
  41ad3c:	stur	w8, [x29, #-4]
  41ad40:	b	41ad90 <method_kill_user+0x150>
  41ad44:	ldr	x0, [sp, #40]
  41ad48:	ldur	x1, [x29, #-16]
  41ad4c:	ldr	w2, [sp, #36]
  41ad50:	ldur	x3, [x29, #-32]
  41ad54:	add	x4, sp, #0x18
  41ad58:	bl	4148cc <manager_get_user_from_creds>
  41ad5c:	str	w0, [sp, #20]
  41ad60:	ldr	w8, [sp, #20]
  41ad64:	cmp	w8, #0x0
  41ad68:	cset	w8, ge  // ge = tcont
  41ad6c:	tbnz	w8, #0, 41ad7c <method_kill_user+0x13c>
  41ad70:	ldr	w8, [sp, #20]
  41ad74:	stur	w8, [x29, #-4]
  41ad78:	b	41ad90 <method_kill_user+0x150>
  41ad7c:	ldur	x0, [x29, #-16]
  41ad80:	ldr	x1, [sp, #24]
  41ad84:	ldur	x2, [x29, #-32]
  41ad88:	bl	438054 <bus_user_method_kill>
  41ad8c:	stur	w0, [x29, #-4]
  41ad90:	ldur	w0, [x29, #-4]
  41ad94:	ldp	x29, x30, [sp, #80]
  41ad98:	add	sp, sp, #0x60
  41ad9c:	ret

000000000041ada0 <method_terminate_session>:
  41ada0:	sub	sp, sp, #0x60
  41ada4:	stp	x29, x30, [sp, #80]
  41ada8:	add	x29, sp, #0x50
  41adac:	adrp	x8, 442000 <_fini+0x1c30>
  41adb0:	add	x8, x8, #0xd8e
  41adb4:	add	x8, x8, #0x3
  41adb8:	stur	x0, [x29, #-16]
  41adbc:	stur	x1, [x29, #-24]
  41adc0:	stur	x2, [x29, #-32]
  41adc4:	ldur	x9, [x29, #-24]
  41adc8:	str	x9, [sp, #40]
  41adcc:	str	x8, [sp, #8]
  41add0:	ldur	x8, [x29, #-16]
  41add4:	cmp	x8, #0x0
  41add8:	cset	w9, ne  // ne = any
  41addc:	mov	w10, #0x1                   	// #1
  41ade0:	eor	w9, w9, #0x1
  41ade4:	eor	w9, w9, w10
  41ade8:	eor	w9, w9, w10
  41adec:	and	w9, w9, #0x1
  41adf0:	mov	w0, w9
  41adf4:	sxtw	x8, w0
  41adf8:	cbz	x8, 41ae20 <method_terminate_session+0x80>
  41adfc:	mov	w8, wzr
  41ae00:	mov	w0, w8
  41ae04:	adrp	x1, 443000 <_fini+0x2c30>
  41ae08:	add	x1, x1, #0x812
  41ae0c:	ldr	x2, [sp, #8]
  41ae10:	mov	w3, #0x47e                 	// #1150
  41ae14:	adrp	x4, 445000 <_fini+0x4c30>
  41ae18:	add	x4, x4, #0x8e1
  41ae1c:	bl	406c68 <log_assert_failed_realm@plt>
  41ae20:	ldr	x8, [sp, #40]
  41ae24:	cmp	x8, #0x0
  41ae28:	cset	w9, ne  // ne = any
  41ae2c:	mov	w10, #0x1                   	// #1
  41ae30:	eor	w9, w9, #0x1
  41ae34:	eor	w9, w9, w10
  41ae38:	eor	w9, w9, w10
  41ae3c:	and	w9, w9, #0x1
  41ae40:	mov	w0, w9
  41ae44:	sxtw	x8, w0
  41ae48:	cbz	x8, 41ae70 <method_terminate_session+0xd0>
  41ae4c:	mov	w8, wzr
  41ae50:	mov	w0, w8
  41ae54:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41ae58:	add	x1, x1, #0x5ef
  41ae5c:	ldr	x2, [sp, #8]
  41ae60:	mov	w3, #0x47f                 	// #1151
  41ae64:	adrp	x4, 445000 <_fini+0x4c30>
  41ae68:	add	x4, x4, #0x8e1
  41ae6c:	bl	406c68 <log_assert_failed_realm@plt>
  41ae70:	ldur	x0, [x29, #-16]
  41ae74:	adrp	x1, 442000 <_fini+0x1c30>
  41ae78:	add	x1, x1, #0xf2
  41ae7c:	add	x2, sp, #0x20
  41ae80:	bl	4074c8 <sd_bus_message_read@plt>
  41ae84:	str	w0, [sp, #20]
  41ae88:	ldr	w8, [sp, #20]
  41ae8c:	cmp	w8, #0x0
  41ae90:	cset	w8, ge  // ge = tcont
  41ae94:	tbnz	w8, #0, 41aea4 <method_terminate_session+0x104>
  41ae98:	ldr	w8, [sp, #20]
  41ae9c:	stur	w8, [x29, #-4]
  41aea0:	b	41aef0 <method_terminate_session+0x150>
  41aea4:	ldr	x0, [sp, #40]
  41aea8:	ldur	x1, [x29, #-16]
  41aeac:	ldr	x2, [sp, #32]
  41aeb0:	ldur	x3, [x29, #-32]
  41aeb4:	add	x4, sp, #0x18
  41aeb8:	bl	414498 <manager_get_session_from_creds>
  41aebc:	str	w0, [sp, #20]
  41aec0:	ldr	w8, [sp, #20]
  41aec4:	cmp	w8, #0x0
  41aec8:	cset	w8, ge  // ge = tcont
  41aecc:	tbnz	w8, #0, 41aedc <method_terminate_session+0x13c>
  41aed0:	ldr	w8, [sp, #20]
  41aed4:	stur	w8, [x29, #-4]
  41aed8:	b	41aef0 <method_terminate_session+0x150>
  41aedc:	ldur	x0, [x29, #-16]
  41aee0:	ldr	x1, [sp, #24]
  41aee4:	ldur	x2, [x29, #-32]
  41aee8:	bl	42bec0 <bus_session_method_terminate>
  41aeec:	stur	w0, [x29, #-4]
  41aef0:	ldur	w0, [x29, #-4]
  41aef4:	ldp	x29, x30, [sp, #80]
  41aef8:	add	sp, sp, #0x60
  41aefc:	ret

000000000041af00 <method_terminate_user>:
  41af00:	sub	sp, sp, #0x60
  41af04:	stp	x29, x30, [sp, #80]
  41af08:	add	x29, sp, #0x50
  41af0c:	adrp	x8, 442000 <_fini+0x1c30>
  41af10:	add	x8, x8, #0xd8e
  41af14:	add	x8, x8, #0x3
  41af18:	stur	x0, [x29, #-16]
  41af1c:	stur	x1, [x29, #-24]
  41af20:	stur	x2, [x29, #-32]
  41af24:	ldur	x9, [x29, #-24]
  41af28:	str	x9, [sp, #40]
  41af2c:	str	x8, [sp, #8]
  41af30:	ldur	x8, [x29, #-16]
  41af34:	cmp	x8, #0x0
  41af38:	cset	w9, ne  // ne = any
  41af3c:	mov	w10, #0x1                   	// #1
  41af40:	eor	w9, w9, #0x1
  41af44:	eor	w9, w9, w10
  41af48:	eor	w9, w9, w10
  41af4c:	and	w9, w9, #0x1
  41af50:	mov	w0, w9
  41af54:	sxtw	x8, w0
  41af58:	cbz	x8, 41af80 <method_terminate_user+0x80>
  41af5c:	mov	w8, wzr
  41af60:	mov	w0, w8
  41af64:	adrp	x1, 443000 <_fini+0x2c30>
  41af68:	add	x1, x1, #0x812
  41af6c:	ldr	x2, [sp, #8]
  41af70:	mov	w3, #0x492                 	// #1170
  41af74:	adrp	x4, 445000 <_fini+0x4c30>
  41af78:	add	x4, x4, #0x928
  41af7c:	bl	406c68 <log_assert_failed_realm@plt>
  41af80:	ldr	x8, [sp, #40]
  41af84:	cmp	x8, #0x0
  41af88:	cset	w9, ne  // ne = any
  41af8c:	mov	w10, #0x1                   	// #1
  41af90:	eor	w9, w9, #0x1
  41af94:	eor	w9, w9, w10
  41af98:	eor	w9, w9, w10
  41af9c:	and	w9, w9, #0x1
  41afa0:	mov	w0, w9
  41afa4:	sxtw	x8, w0
  41afa8:	cbz	x8, 41afd0 <method_terminate_user+0xd0>
  41afac:	mov	w8, wzr
  41afb0:	mov	w0, w8
  41afb4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41afb8:	add	x1, x1, #0x5ef
  41afbc:	ldr	x2, [sp, #8]
  41afc0:	mov	w3, #0x493                 	// #1171
  41afc4:	adrp	x4, 445000 <_fini+0x4c30>
  41afc8:	add	x4, x4, #0x928
  41afcc:	bl	406c68 <log_assert_failed_realm@plt>
  41afd0:	ldur	x0, [x29, #-16]
  41afd4:	adrp	x1, 443000 <_fini+0x2c30>
  41afd8:	add	x1, x1, #0x1dd
  41afdc:	add	x2, sp, #0x24
  41afe0:	bl	4074c8 <sd_bus_message_read@plt>
  41afe4:	str	w0, [sp, #20]
  41afe8:	ldr	w8, [sp, #20]
  41afec:	cmp	w8, #0x0
  41aff0:	cset	w8, ge  // ge = tcont
  41aff4:	tbnz	w8, #0, 41b004 <method_terminate_user+0x104>
  41aff8:	ldr	w8, [sp, #20]
  41affc:	stur	w8, [x29, #-4]
  41b000:	b	41b050 <method_terminate_user+0x150>
  41b004:	ldr	x0, [sp, #40]
  41b008:	ldur	x1, [x29, #-16]
  41b00c:	ldr	w2, [sp, #36]
  41b010:	ldur	x3, [x29, #-32]
  41b014:	add	x4, sp, #0x18
  41b018:	bl	4148cc <manager_get_user_from_creds>
  41b01c:	str	w0, [sp, #20]
  41b020:	ldr	w8, [sp, #20]
  41b024:	cmp	w8, #0x0
  41b028:	cset	w8, ge  // ge = tcont
  41b02c:	tbnz	w8, #0, 41b03c <method_terminate_user+0x13c>
  41b030:	ldr	w8, [sp, #20]
  41b034:	stur	w8, [x29, #-4]
  41b038:	b	41b050 <method_terminate_user+0x150>
  41b03c:	ldur	x0, [x29, #-16]
  41b040:	ldr	x1, [sp, #24]
  41b044:	ldur	x2, [x29, #-32]
  41b048:	bl	437ec0 <bus_user_method_terminate>
  41b04c:	stur	w0, [x29, #-4]
  41b050:	ldur	w0, [x29, #-4]
  41b054:	ldp	x29, x30, [sp, #80]
  41b058:	add	sp, sp, #0x60
  41b05c:	ret

000000000041b060 <method_terminate_seat>:
  41b060:	sub	sp, sp, #0x60
  41b064:	stp	x29, x30, [sp, #80]
  41b068:	add	x29, sp, #0x50
  41b06c:	adrp	x8, 442000 <_fini+0x1c30>
  41b070:	add	x8, x8, #0xd8e
  41b074:	add	x8, x8, #0x3
  41b078:	stur	x0, [x29, #-16]
  41b07c:	stur	x1, [x29, #-24]
  41b080:	stur	x2, [x29, #-32]
  41b084:	ldur	x9, [x29, #-24]
  41b088:	str	x9, [sp, #40]
  41b08c:	str	x8, [sp, #8]
  41b090:	ldur	x8, [x29, #-16]
  41b094:	cmp	x8, #0x0
  41b098:	cset	w9, ne  // ne = any
  41b09c:	mov	w10, #0x1                   	// #1
  41b0a0:	eor	w9, w9, #0x1
  41b0a4:	eor	w9, w9, w10
  41b0a8:	eor	w9, w9, w10
  41b0ac:	and	w9, w9, #0x1
  41b0b0:	mov	w0, w9
  41b0b4:	sxtw	x8, w0
  41b0b8:	cbz	x8, 41b0e0 <method_terminate_seat+0x80>
  41b0bc:	mov	w8, wzr
  41b0c0:	mov	w0, w8
  41b0c4:	adrp	x1, 443000 <_fini+0x2c30>
  41b0c8:	add	x1, x1, #0x812
  41b0cc:	ldr	x2, [sp, #8]
  41b0d0:	mov	w3, #0x4a6                 	// #1190
  41b0d4:	adrp	x4, 445000 <_fini+0x4c30>
  41b0d8:	add	x4, x4, #0x96c
  41b0dc:	bl	406c68 <log_assert_failed_realm@plt>
  41b0e0:	ldr	x8, [sp, #40]
  41b0e4:	cmp	x8, #0x0
  41b0e8:	cset	w9, ne  // ne = any
  41b0ec:	mov	w10, #0x1                   	// #1
  41b0f0:	eor	w9, w9, #0x1
  41b0f4:	eor	w9, w9, w10
  41b0f8:	eor	w9, w9, w10
  41b0fc:	and	w9, w9, #0x1
  41b100:	mov	w0, w9
  41b104:	sxtw	x8, w0
  41b108:	cbz	x8, 41b130 <method_terminate_seat+0xd0>
  41b10c:	mov	w8, wzr
  41b110:	mov	w0, w8
  41b114:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41b118:	add	x1, x1, #0x5ef
  41b11c:	ldr	x2, [sp, #8]
  41b120:	mov	w3, #0x4a7                 	// #1191
  41b124:	adrp	x4, 445000 <_fini+0x4c30>
  41b128:	add	x4, x4, #0x96c
  41b12c:	bl	406c68 <log_assert_failed_realm@plt>
  41b130:	ldur	x0, [x29, #-16]
  41b134:	adrp	x1, 442000 <_fini+0x1c30>
  41b138:	add	x1, x1, #0xf2
  41b13c:	add	x2, sp, #0x20
  41b140:	bl	4074c8 <sd_bus_message_read@plt>
  41b144:	str	w0, [sp, #20]
  41b148:	ldr	w8, [sp, #20]
  41b14c:	cmp	w8, #0x0
  41b150:	cset	w8, ge  // ge = tcont
  41b154:	tbnz	w8, #0, 41b164 <method_terminate_seat+0x104>
  41b158:	ldr	w8, [sp, #20]
  41b15c:	stur	w8, [x29, #-4]
  41b160:	b	41b1b0 <method_terminate_seat+0x150>
  41b164:	ldr	x0, [sp, #40]
  41b168:	ldur	x1, [x29, #-16]
  41b16c:	ldr	x2, [sp, #32]
  41b170:	ldur	x3, [x29, #-32]
  41b174:	add	x4, sp, #0x18
  41b178:	bl	414b68 <manager_get_seat_from_creds>
  41b17c:	str	w0, [sp, #20]
  41b180:	ldr	w8, [sp, #20]
  41b184:	cmp	w8, #0x0
  41b188:	cset	w8, ge  // ge = tcont
  41b18c:	tbnz	w8, #0, 41b19c <method_terminate_seat+0x13c>
  41b190:	ldr	w8, [sp, #20]
  41b194:	stur	w8, [x29, #-4]
  41b198:	b	41b1b0 <method_terminate_seat+0x150>
  41b19c:	ldur	x0, [x29, #-16]
  41b1a0:	ldr	x1, [sp, #24]
  41b1a4:	ldur	x2, [x29, #-32]
  41b1a8:	bl	426dec <bus_seat_method_terminate>
  41b1ac:	stur	w0, [x29, #-4]
  41b1b0:	ldur	w0, [x29, #-4]
  41b1b4:	ldp	x29, x30, [sp, #80]
  41b1b8:	add	sp, sp, #0x60
  41b1bc:	ret

000000000041b1c0 <method_set_user_linger>:
  41b1c0:	stp	x29, x30, [sp, #-16]!
  41b1c4:	mov	x29, sp
  41b1c8:	sub	sp, sp, #0xe0
  41b1cc:	mov	x8, xzr
  41b1d0:	adrp	x9, 442000 <_fini+0x1c30>
  41b1d4:	add	x9, x9, #0xd8e
  41b1d8:	add	x9, x9, #0x3
  41b1dc:	adrp	x10, 445000 <_fini+0x4c30>
  41b1e0:	add	x10, x10, #0x9b0
  41b1e4:	stur	x0, [x29, #-16]
  41b1e8:	stur	x1, [x29, #-24]
  41b1ec:	stur	x2, [x29, #-32]
  41b1f0:	stur	x8, [x29, #-40]
  41b1f4:	stur	x8, [x29, #-48]
  41b1f8:	ldur	x8, [x29, #-24]
  41b1fc:	stur	x8, [x29, #-56]
  41b200:	stur	x9, [x29, #-200]
  41b204:	stur	x10, [x29, #-208]
  41b208:	ldur	x8, [x29, #-16]
  41b20c:	cmp	x8, #0x0
  41b210:	cset	w9, ne  // ne = any
  41b214:	mov	w10, #0x1                   	// #1
  41b218:	eor	w9, w9, #0x1
  41b21c:	eor	w9, w9, w10
  41b220:	eor	w9, w9, w10
  41b224:	and	w9, w9, #0x1
  41b228:	mov	w0, w9
  41b22c:	sxtw	x8, w0
  41b230:	cbz	x8, 41b254 <method_set_user_linger+0x94>
  41b234:	mov	w8, wzr
  41b238:	mov	w0, w8
  41b23c:	adrp	x1, 443000 <_fini+0x2c30>
  41b240:	add	x1, x1, #0x812
  41b244:	ldur	x2, [x29, #-200]
  41b248:	mov	w3, #0x4bd                 	// #1213
  41b24c:	ldur	x4, [x29, #-208]
  41b250:	bl	406c68 <log_assert_failed_realm@plt>
  41b254:	ldur	x8, [x29, #-56]
  41b258:	cmp	x8, #0x0
  41b25c:	cset	w9, ne  // ne = any
  41b260:	mov	w10, #0x1                   	// #1
  41b264:	eor	w9, w9, #0x1
  41b268:	eor	w9, w9, w10
  41b26c:	eor	w9, w9, w10
  41b270:	and	w9, w9, #0x1
  41b274:	mov	w0, w9
  41b278:	sxtw	x8, w0
  41b27c:	cbz	x8, 41b2a0 <method_set_user_linger+0xe0>
  41b280:	mov	w8, wzr
  41b284:	mov	w0, w8
  41b288:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41b28c:	add	x1, x1, #0x5ef
  41b290:	ldur	x2, [x29, #-200]
  41b294:	mov	w3, #0x4be                 	// #1214
  41b298:	ldur	x4, [x29, #-208]
  41b29c:	bl	406c68 <log_assert_failed_realm@plt>
  41b2a0:	ldur	x0, [x29, #-16]
  41b2a4:	adrp	x1, 443000 <_fini+0x2c30>
  41b2a8:	add	x1, x1, #0x5d1
  41b2ac:	sub	x2, x29, #0x5c
  41b2b0:	sub	x3, x29, #0x40
  41b2b4:	sub	x4, x29, #0x44
  41b2b8:	bl	4074c8 <sd_bus_message_read@plt>
  41b2bc:	stur	w0, [x29, #-60]
  41b2c0:	ldur	w8, [x29, #-60]
  41b2c4:	cmp	w8, #0x0
  41b2c8:	cset	w8, ge  // ge = tcont
  41b2cc:	tbnz	w8, #0, 41b2e4 <method_set_user_linger+0x124>
  41b2d0:	ldur	w8, [x29, #-60]
  41b2d4:	stur	w8, [x29, #-4]
  41b2d8:	mov	w8, #0x1                   	// #1
  41b2dc:	stur	w8, [x29, #-100]
  41b2e0:	b	41b800 <method_set_user_linger+0x640>
  41b2e4:	ldur	x0, [x29, #-16]
  41b2e8:	mov	x1, #0x10                  	// #16
  41b2ec:	movk	x1, #0x40, lsl #16
  41b2f0:	movk	x1, #0x8000, lsl #48
  41b2f4:	sub	x2, x29, #0x28
  41b2f8:	bl	407478 <sd_bus_query_sender_creds@plt>
  41b2fc:	stur	w0, [x29, #-60]
  41b300:	ldur	w8, [x29, #-60]
  41b304:	cmp	w8, #0x0
  41b308:	cset	w8, ge  // ge = tcont
  41b30c:	tbnz	w8, #0, 41b324 <method_set_user_linger+0x164>
  41b310:	ldur	w8, [x29, #-60]
  41b314:	stur	w8, [x29, #-4]
  41b318:	mov	w8, #0x1                   	// #1
  41b31c:	stur	w8, [x29, #-100]
  41b320:	b	41b800 <method_set_user_linger+0x640>
  41b324:	ldur	w0, [x29, #-92]
  41b328:	bl	4074a8 <uid_is_valid@plt>
  41b32c:	tbnz	w0, #0, 41b364 <method_set_user_linger+0x1a4>
  41b330:	ldur	x0, [x29, #-40]
  41b334:	sub	x1, x29, #0x5c
  41b338:	bl	407498 <sd_bus_creds_get_owner_uid@plt>
  41b33c:	stur	w0, [x29, #-60]
  41b340:	ldur	w8, [x29, #-60]
  41b344:	cmp	w8, #0x0
  41b348:	cset	w8, ge  // ge = tcont
  41b34c:	tbnz	w8, #0, 41b364 <method_set_user_linger+0x1a4>
  41b350:	ldur	w8, [x29, #-60]
  41b354:	stur	w8, [x29, #-4]
  41b358:	mov	w8, #0x1                   	// #1
  41b35c:	stur	w8, [x29, #-100]
  41b360:	b	41b800 <method_set_user_linger+0x640>
  41b364:	ldur	x0, [x29, #-40]
  41b368:	sub	x1, x29, #0x60
  41b36c:	bl	407698 <sd_bus_creds_get_euid@plt>
  41b370:	stur	w0, [x29, #-60]
  41b374:	ldur	w8, [x29, #-60]
  41b378:	cmp	w8, #0x0
  41b37c:	cset	w8, ge  // ge = tcont
  41b380:	tbnz	w8, #0, 41b398 <method_set_user_linger+0x1d8>
  41b384:	ldur	w8, [x29, #-60]
  41b388:	stur	w8, [x29, #-4]
  41b38c:	mov	w8, #0x1                   	// #1
  41b390:	stur	w8, [x29, #-100]
  41b394:	b	41b800 <method_set_user_linger+0x640>
  41b398:	bl	406e08 <__errno_location@plt>
  41b39c:	str	wzr, [x0]
  41b3a0:	ldur	w0, [x29, #-92]
  41b3a4:	bl	4072d8 <getpwuid@plt>
  41b3a8:	stur	x0, [x29, #-80]
  41b3ac:	ldur	x8, [x29, #-80]
  41b3b0:	cbnz	x8, 41b3cc <method_set_user_linger+0x20c>
  41b3b4:	mov	w0, #0x2                   	// #2
  41b3b8:	bl	421ef0 <errno_or_else>
  41b3bc:	stur	w0, [x29, #-4]
  41b3c0:	mov	w8, #0x1                   	// #1
  41b3c4:	stur	w8, [x29, #-100]
  41b3c8:	b	41b800 <method_set_user_linger+0x640>
  41b3cc:	ldur	x0, [x29, #-16]
  41b3d0:	ldur	w8, [x29, #-92]
  41b3d4:	ldur	w9, [x29, #-96]
  41b3d8:	adrp	x10, 445000 <_fini+0x4c30>
  41b3dc:	add	x10, x10, #0xa1c
  41b3e0:	adrp	x11, 445000 <_fini+0x4c30>
  41b3e4:	add	x11, x11, #0x9f5
  41b3e8:	cmp	w8, w9
  41b3ec:	csel	x2, x11, x10, eq  // eq = none
  41b3f0:	ldur	w8, [x29, #-68]
  41b3f4:	cmp	w8, #0x0
  41b3f8:	cset	w8, ne  // ne = any
  41b3fc:	ldur	x10, [x29, #-56]
  41b400:	add	x6, x10, #0x1b0
  41b404:	ldur	x7, [x29, #-32]
  41b408:	mov	w1, #0x15                  	// #21
  41b40c:	mov	x10, xzr
  41b410:	mov	x3, x10
  41b414:	and	w4, w8, #0x1
  41b418:	mov	w5, #0xffffffff            	// #-1
  41b41c:	bl	407678 <bus_verify_polkit_async@plt>
  41b420:	stur	w0, [x29, #-60]
  41b424:	ldur	w8, [x29, #-60]
  41b428:	cmp	w8, #0x0
  41b42c:	cset	w8, ge  // ge = tcont
  41b430:	tbnz	w8, #0, 41b448 <method_set_user_linger+0x288>
  41b434:	ldur	w8, [x29, #-60]
  41b438:	stur	w8, [x29, #-4]
  41b43c:	mov	w8, #0x1                   	// #1
  41b440:	stur	w8, [x29, #-100]
  41b444:	b	41b800 <method_set_user_linger+0x640>
  41b448:	ldur	w8, [x29, #-60]
  41b44c:	cbnz	w8, 41b460 <method_set_user_linger+0x2a0>
  41b450:	mov	w8, #0x1                   	// #1
  41b454:	stur	w8, [x29, #-4]
  41b458:	stur	w8, [x29, #-100]
  41b45c:	b	41b800 <method_set_user_linger+0x640>
  41b460:	adrp	x0, 445000 <_fini+0x4c30>
  41b464:	add	x0, x0, #0xa43
  41b468:	mov	w8, #0x1ed                 	// #493
  41b46c:	mov	w1, w8
  41b470:	stur	w8, [x29, #-212]
  41b474:	bl	4076a8 <mkdir_p_label@plt>
  41b478:	adrp	x9, 441000 <_fini+0xc30>
  41b47c:	add	x9, x9, #0x2e2
  41b480:	mov	x0, x9
  41b484:	ldur	w1, [x29, #-212]
  41b488:	mov	w8, wzr
  41b48c:	mov	w2, w8
  41b490:	mov	w3, w8
  41b494:	mov	w4, #0x2                   	// #2
  41b498:	bl	4076b8 <mkdir_safe_label@plt>
  41b49c:	stur	w0, [x29, #-60]
  41b4a0:	ldur	w8, [x29, #-60]
  41b4a4:	cmp	w8, #0x0
  41b4a8:	cset	w8, ge  // ge = tcont
  41b4ac:	tbnz	w8, #0, 41b4c4 <method_set_user_linger+0x304>
  41b4b0:	ldur	w8, [x29, #-60]
  41b4b4:	stur	w8, [x29, #-4]
  41b4b8:	mov	w8, #0x1                   	// #1
  41b4bc:	stur	w8, [x29, #-100]
  41b4c0:	b	41b800 <method_set_user_linger+0x640>
  41b4c4:	ldur	x8, [x29, #-80]
  41b4c8:	ldr	x0, [x8]
  41b4cc:	bl	4076c8 <cescape@plt>
  41b4d0:	stur	x0, [x29, #-48]
  41b4d4:	ldur	x8, [x29, #-48]
  41b4d8:	cbnz	x8, 41b4f0 <method_set_user_linger+0x330>
  41b4dc:	mov	w8, #0xfffffff4            	// #-12
  41b4e0:	stur	w8, [x29, #-4]
  41b4e4:	mov	w8, #0x1                   	// #1
  41b4e8:	stur	w8, [x29, #-100]
  41b4ec:	b	41b800 <method_set_user_linger+0x640>
  41b4f0:	sub	x8, x29, #0x78
  41b4f4:	adrp	x9, 445000 <_fini+0x4c30>
  41b4f8:	add	x9, x9, #0xa54
  41b4fc:	stur	x9, [x29, #-120]
  41b500:	ldur	x9, [x29, #-48]
  41b504:	str	x9, [x8, #8]
  41b508:	stur	xzr, [x29, #-144]
  41b50c:	stur	xzr, [x29, #-152]
  41b510:	ldur	x8, [x29, #-152]
  41b514:	mov	w9, #0x0                   	// #0
  41b518:	cmp	x8, #0x2
  41b51c:	stur	w9, [x29, #-216]
  41b520:	b.cs	41b548 <method_set_user_linger+0x388>  // b.hs, b.nlast
  41b524:	ldur	x8, [x29, #-152]
  41b528:	mov	x9, #0x8                   	// #8
  41b52c:	mul	x8, x9, x8
  41b530:	sub	x9, x29, #0x78
  41b534:	add	x8, x9, x8
  41b538:	ldr	x8, [x8]
  41b53c:	cmp	x8, #0x0
  41b540:	cset	w10, ne  // ne = any
  41b544:	stur	w10, [x29, #-216]
  41b548:	ldur	w8, [x29, #-216]
  41b54c:	tbnz	w8, #0, 41b554 <method_set_user_linger+0x394>
  41b550:	b	41b58c <method_set_user_linger+0x3cc>
  41b554:	ldur	x8, [x29, #-152]
  41b558:	mov	x9, #0x8                   	// #8
  41b55c:	mul	x8, x9, x8
  41b560:	sub	x9, x29, #0x78
  41b564:	add	x8, x9, x8
  41b568:	ldr	x0, [x8]
  41b56c:	bl	4070a8 <strlen@plt>
  41b570:	ldur	x8, [x29, #-144]
  41b574:	add	x8, x8, x0
  41b578:	stur	x8, [x29, #-144]
  41b57c:	ldur	x8, [x29, #-152]
  41b580:	add	x8, x8, #0x1
  41b584:	stur	x8, [x29, #-152]
  41b588:	b	41b510 <method_set_user_linger+0x350>
  41b58c:	ldur	x8, [x29, #-144]
  41b590:	add	x8, x8, #0x1
  41b594:	stur	x8, [x29, #-160]
  41b598:	ldur	x1, [x29, #-160]
  41b59c:	mov	x0, #0x1                   	// #1
  41b5a0:	bl	420174 <size_multiply_overflow>
  41b5a4:	mov	w8, #0x1                   	// #1
  41b5a8:	eor	w9, w0, #0x1
  41b5ac:	eor	w9, w9, w8
  41b5b0:	eor	w9, w9, w8
  41b5b4:	eor	w8, w9, w8
  41b5b8:	and	w8, w8, #0x1
  41b5bc:	mov	w1, w8
  41b5c0:	sxtw	x10, w1
  41b5c4:	cbz	x10, 41b5e8 <method_set_user_linger+0x428>
  41b5c8:	mov	w8, wzr
  41b5cc:	mov	w0, w8
  41b5d0:	adrp	x1, 441000 <_fini+0xc30>
  41b5d4:	add	x1, x1, #0xe80
  41b5d8:	ldur	x2, [x29, #-200]
  41b5dc:	mov	w3, #0x4f3                 	// #1267
  41b5e0:	ldur	x4, [x29, #-208]
  41b5e4:	bl	406c68 <log_assert_failed_realm@plt>
  41b5e8:	ldur	x8, [x29, #-160]
  41b5ec:	mov	x9, #0x1                   	// #1
  41b5f0:	mul	x8, x9, x8
  41b5f4:	cmp	x8, #0x400, lsl #12
  41b5f8:	cset	w10, ls  // ls = plast
  41b5fc:	mov	w11, #0x1                   	// #1
  41b600:	eor	w10, w10, #0x1
  41b604:	eor	w10, w10, w11
  41b608:	eor	w10, w10, w11
  41b60c:	and	w10, w10, #0x1
  41b610:	mov	w0, w10
  41b614:	sxtw	x8, w0
  41b618:	cbz	x8, 41b63c <method_set_user_linger+0x47c>
  41b61c:	mov	w8, wzr
  41b620:	mov	w0, w8
  41b624:	adrp	x1, 441000 <_fini+0xc30>
  41b628:	add	x1, x1, #0xeab
  41b62c:	ldur	x2, [x29, #-200]
  41b630:	mov	w3, #0x4f3                 	// #1267
  41b634:	ldur	x4, [x29, #-208]
  41b638:	bl	406c68 <log_assert_failed_realm@plt>
  41b63c:	ldur	x8, [x29, #-160]
  41b640:	mov	x9, #0x1                   	// #1
  41b644:	mul	x8, x9, x8
  41b648:	mul	x8, x8, x9
  41b64c:	add	x8, x8, #0xf
  41b650:	and	x8, x8, #0xfffffffffffffff0
  41b654:	mov	x9, sp
  41b658:	subs	x8, x9, x8
  41b65c:	mov	sp, x8
  41b660:	stur	x8, [x29, #-168]
  41b664:	ldur	x8, [x29, #-168]
  41b668:	stur	x8, [x29, #-128]
  41b66c:	stur	x8, [x29, #-136]
  41b670:	stur	xzr, [x29, #-152]
  41b674:	ldur	x8, [x29, #-152]
  41b678:	mov	w9, #0x0                   	// #0
  41b67c:	cmp	x8, #0x2
  41b680:	stur	w9, [x29, #-220]
  41b684:	b.cs	41b6ac <method_set_user_linger+0x4ec>  // b.hs, b.nlast
  41b688:	ldur	x8, [x29, #-152]
  41b68c:	mov	x9, #0x8                   	// #8
  41b690:	mul	x8, x9, x8
  41b694:	sub	x9, x29, #0x78
  41b698:	add	x8, x9, x8
  41b69c:	ldr	x8, [x8]
  41b6a0:	cmp	x8, #0x0
  41b6a4:	cset	w10, ne  // ne = any
  41b6a8:	stur	w10, [x29, #-220]
  41b6ac:	ldur	w8, [x29, #-220]
  41b6b0:	tbnz	w8, #0, 41b6b8 <method_set_user_linger+0x4f8>
  41b6b4:	b	41b6ec <method_set_user_linger+0x52c>
  41b6b8:	ldur	x0, [x29, #-136]
  41b6bc:	ldur	x8, [x29, #-152]
  41b6c0:	mov	x9, #0x8                   	// #8
  41b6c4:	mul	x8, x9, x8
  41b6c8:	sub	x9, x29, #0x78
  41b6cc:	add	x8, x9, x8
  41b6d0:	ldr	x1, [x8]
  41b6d4:	bl	407258 <stpcpy@plt>
  41b6d8:	stur	x0, [x29, #-136]
  41b6dc:	ldur	x8, [x29, #-152]
  41b6e0:	add	x8, x8, #0x1
  41b6e4:	stur	x8, [x29, #-152]
  41b6e8:	b	41b674 <method_set_user_linger+0x4b4>
  41b6ec:	ldur	x8, [x29, #-136]
  41b6f0:	mov	w9, #0x0                   	// #0
  41b6f4:	strb	w9, [x8]
  41b6f8:	ldur	x8, [x29, #-128]
  41b6fc:	stur	x8, [x29, #-176]
  41b700:	ldur	x8, [x29, #-176]
  41b704:	stur	x8, [x29, #-88]
  41b708:	ldur	w9, [x29, #-64]
  41b70c:	cbz	w9, 41b768 <method_set_user_linger+0x5a8>
  41b710:	ldur	x0, [x29, #-88]
  41b714:	bl	4076d8 <touch@plt>
  41b718:	stur	w0, [x29, #-60]
  41b71c:	ldur	w8, [x29, #-60]
  41b720:	cmp	w8, #0x0
  41b724:	cset	w8, ge  // ge = tcont
  41b728:	tbnz	w8, #0, 41b740 <method_set_user_linger+0x580>
  41b72c:	ldur	w8, [x29, #-60]
  41b730:	stur	w8, [x29, #-4]
  41b734:	mov	w8, #0x1                   	// #1
  41b738:	stur	w8, [x29, #-100]
  41b73c:	b	41b800 <method_set_user_linger+0x640>
  41b740:	ldur	x0, [x29, #-56]
  41b744:	ldur	w1, [x29, #-92]
  41b748:	sub	x2, x29, #0xb8
  41b74c:	bl	411ba4 <manager_add_user_by_uid>
  41b750:	cmp	w0, #0x0
  41b754:	cset	w8, lt  // lt = tstop
  41b758:	tbnz	w8, #0, 41b764 <method_set_user_linger+0x5a4>
  41b75c:	ldur	x0, [x29, #-184]
  41b760:	bl	43ae00 <user_start>
  41b764:	b	41b7e4 <method_set_user_linger+0x624>
  41b768:	ldur	x0, [x29, #-88]
  41b76c:	bl	4076e8 <unlink@plt>
  41b770:	stur	w0, [x29, #-60]
  41b774:	ldur	w8, [x29, #-60]
  41b778:	cmp	w8, #0x0
  41b77c:	cset	w8, ge  // ge = tcont
  41b780:	tbnz	w8, #0, 41b7b4 <method_set_user_linger+0x5f4>
  41b784:	bl	406e08 <__errno_location@plt>
  41b788:	ldr	w8, [x0]
  41b78c:	cmp	w8, #0x2
  41b790:	b.eq	41b7b4 <method_set_user_linger+0x5f4>  // b.none
  41b794:	bl	406e08 <__errno_location@plt>
  41b798:	ldr	w8, [x0]
  41b79c:	mov	w9, wzr
  41b7a0:	subs	w8, w9, w8
  41b7a4:	stur	w8, [x29, #-4]
  41b7a8:	mov	w8, #0x1                   	// #1
  41b7ac:	stur	w8, [x29, #-100]
  41b7b0:	b	41b800 <method_set_user_linger+0x640>
  41b7b4:	ldur	x8, [x29, #-56]
  41b7b8:	ldr	x0, [x8, #48]
  41b7bc:	ldur	w9, [x29, #-92]
  41b7c0:	mov	w8, w9
  41b7c4:	add	x8, x8, #0x1
  41b7c8:	mov	x1, x8
  41b7cc:	bl	4148a0 <hashmap_get>
  41b7d0:	stur	x0, [x29, #-192]
  41b7d4:	ldur	x8, [x29, #-192]
  41b7d8:	cbz	x8, 41b7e4 <method_set_user_linger+0x624>
  41b7dc:	ldur	x0, [x29, #-192]
  41b7e0:	bl	43b73c <user_add_to_gc_queue>
  41b7e4:	ldur	x0, [x29, #-16]
  41b7e8:	mov	x8, xzr
  41b7ec:	mov	x1, x8
  41b7f0:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41b7f4:	stur	w0, [x29, #-4]
  41b7f8:	mov	w9, #0x1                   	// #1
  41b7fc:	stur	w9, [x29, #-100]
  41b800:	sub	x0, x29, #0x30
  41b804:	bl	4152e4 <freep>
  41b808:	sub	x0, x29, #0x28
  41b80c:	bl	421604 <sd_bus_creds_unrefp>
  41b810:	ldur	w0, [x29, #-4]
  41b814:	mov	sp, x29
  41b818:	ldp	x29, x30, [sp], #16
  41b81c:	ret

000000000041b820 <method_attach_device>:
  41b820:	sub	sp, sp, #0x70
  41b824:	stp	x29, x30, [sp, #96]
  41b828:	add	x29, sp, #0x60
  41b82c:	adrp	x8, 445000 <_fini+0x4c30>
  41b830:	add	x8, x8, #0x37d
  41b834:	adrp	x9, 442000 <_fini+0x1c30>
  41b838:	add	x9, x9, #0xd8e
  41b83c:	add	x9, x9, #0x3
  41b840:	stur	x0, [x29, #-16]
  41b844:	stur	x1, [x29, #-24]
  41b848:	stur	x2, [x29, #-32]
  41b84c:	ldur	x10, [x29, #-24]
  41b850:	str	x10, [sp, #40]
  41b854:	str	x8, [sp, #16]
  41b858:	str	x9, [sp, #8]
  41b85c:	ldur	x8, [x29, #-16]
  41b860:	cmp	x8, #0x0
  41b864:	cset	w9, ne  // ne = any
  41b868:	mov	w10, #0x1                   	// #1
  41b86c:	eor	w9, w9, #0x1
  41b870:	eor	w9, w9, w10
  41b874:	eor	w9, w9, w10
  41b878:	and	w9, w9, #0x1
  41b87c:	mov	w0, w9
  41b880:	sxtw	x8, w0
  41b884:	cbz	x8, 41b8ac <method_attach_device+0x8c>
  41b888:	mov	w8, wzr
  41b88c:	mov	w0, w8
  41b890:	adrp	x1, 443000 <_fini+0x2c30>
  41b894:	add	x1, x1, #0x812
  41b898:	ldr	x2, [sp, #8]
  41b89c:	mov	w3, #0x579                 	// #1401
  41b8a0:	adrp	x4, 445000 <_fini+0x4c30>
  41b8a4:	add	x4, x4, #0xa6d
  41b8a8:	bl	406c68 <log_assert_failed_realm@plt>
  41b8ac:	ldr	x8, [sp, #40]
  41b8b0:	cmp	x8, #0x0
  41b8b4:	cset	w9, ne  // ne = any
  41b8b8:	mov	w10, #0x1                   	// #1
  41b8bc:	eor	w9, w9, #0x1
  41b8c0:	eor	w9, w9, w10
  41b8c4:	eor	w9, w9, w10
  41b8c8:	and	w9, w9, #0x1
  41b8cc:	mov	w0, w9
  41b8d0:	sxtw	x8, w0
  41b8d4:	cbz	x8, 41b8fc <method_attach_device+0xdc>
  41b8d8:	mov	w8, wzr
  41b8dc:	mov	w0, w8
  41b8e0:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41b8e4:	add	x1, x1, #0x5ef
  41b8e8:	ldr	x2, [sp, #8]
  41b8ec:	mov	w3, #0x57a                 	// #1402
  41b8f0:	adrp	x4, 445000 <_fini+0x4c30>
  41b8f4:	add	x4, x4, #0xa6d
  41b8f8:	bl	406c68 <log_assert_failed_realm@plt>
  41b8fc:	ldur	x0, [x29, #-16]
  41b900:	adrp	x1, 443000 <_fini+0x2c30>
  41b904:	add	x1, x1, #0x5e2
  41b908:	add	x2, sp, #0x30
  41b90c:	sub	x3, x29, #0x28
  41b910:	add	x4, sp, #0x24
  41b914:	bl	4074c8 <sd_bus_message_read@plt>
  41b918:	str	w0, [sp, #32]
  41b91c:	ldr	w8, [sp, #32]
  41b920:	cmp	w8, #0x0
  41b924:	cset	w8, ge  // ge = tcont
  41b928:	tbnz	w8, #0, 41b938 <method_attach_device+0x118>
  41b92c:	ldr	w8, [sp, #32]
  41b930:	stur	w8, [x29, #-4]
  41b934:	b	41badc <method_attach_device+0x2bc>
  41b938:	ldur	x0, [x29, #-40]
  41b93c:	bl	4076f8 <path_is_normalized@plt>
  41b940:	tbnz	w0, #0, 41b964 <method_attach_device+0x144>
  41b944:	ldur	x0, [x29, #-32]
  41b948:	ldur	x3, [x29, #-40]
  41b94c:	ldr	x1, [sp, #16]
  41b950:	adrp	x2, 445000 <_fini+0x4c30>
  41b954:	add	x2, x2, #0xab0
  41b958:	bl	407468 <sd_bus_error_setf@plt>
  41b95c:	stur	w0, [x29, #-4]
  41b960:	b	41badc <method_attach_device+0x2bc>
  41b964:	ldur	x0, [x29, #-40]
  41b968:	adrp	x1, 445000 <_fini+0x4c30>
  41b96c:	add	x1, x1, #0xaca
  41b970:	bl	407418 <path_startswith@plt>
  41b974:	cbnz	x0, 41b998 <method_attach_device+0x178>
  41b978:	ldur	x0, [x29, #-32]
  41b97c:	ldur	x3, [x29, #-40]
  41b980:	ldr	x1, [sp, #16]
  41b984:	adrp	x2, 445000 <_fini+0x4c30>
  41b988:	add	x2, x2, #0xacf
  41b98c:	bl	407468 <sd_bus_error_setf@plt>
  41b990:	stur	w0, [x29, #-4]
  41b994:	b	41badc <method_attach_device+0x2bc>
  41b998:	ldr	x0, [sp, #48]
  41b99c:	bl	414630 <SEAT_IS_SELF>
  41b9a0:	tbnz	w0, #0, 41b9b4 <method_attach_device+0x194>
  41b9a4:	ldr	x0, [sp, #48]
  41b9a8:	bl	414870 <SEAT_IS_AUTO>
  41b9ac:	tbnz	w0, #0, 41b9b4 <method_attach_device+0x194>
  41b9b0:	b	41b9fc <method_attach_device+0x1dc>
  41b9b4:	ldr	x0, [sp, #40]
  41b9b8:	ldur	x1, [x29, #-16]
  41b9bc:	ldr	x2, [sp, #48]
  41b9c0:	ldur	x3, [x29, #-32]
  41b9c4:	add	x4, sp, #0x18
  41b9c8:	bl	414b68 <manager_get_seat_from_creds>
  41b9cc:	str	w0, [sp, #32]
  41b9d0:	ldr	w8, [sp, #32]
  41b9d4:	cmp	w8, #0x0
  41b9d8:	cset	w8, ge  // ge = tcont
  41b9dc:	tbnz	w8, #0, 41b9ec <method_attach_device+0x1cc>
  41b9e0:	ldr	w8, [sp, #32]
  41b9e4:	stur	w8, [x29, #-4]
  41b9e8:	b	41badc <method_attach_device+0x2bc>
  41b9ec:	ldr	x8, [sp, #24]
  41b9f0:	ldr	x8, [x8, #8]
  41b9f4:	str	x8, [sp, #48]
  41b9f8:	b	41ba28 <method_attach_device+0x208>
  41b9fc:	ldr	x0, [sp, #48]
  41ba00:	bl	429218 <seat_name_is_valid>
  41ba04:	tbnz	w0, #0, 41ba28 <method_attach_device+0x208>
  41ba08:	ldur	x0, [x29, #-32]
  41ba0c:	ldr	x3, [sp, #48]
  41ba10:	ldr	x1, [sp, #16]
  41ba14:	adrp	x2, 445000 <_fini+0x4c30>
  41ba18:	add	x2, x2, #0xae6
  41ba1c:	bl	407468 <sd_bus_error_setf@plt>
  41ba20:	stur	w0, [x29, #-4]
  41ba24:	b	41badc <method_attach_device+0x2bc>
  41ba28:	ldur	x0, [x29, #-16]
  41ba2c:	ldr	w8, [sp, #36]
  41ba30:	cmp	w8, #0x0
  41ba34:	cset	w8, ne  // ne = any
  41ba38:	ldr	x9, [sp, #40]
  41ba3c:	add	x6, x9, #0x1b0
  41ba40:	ldur	x7, [x29, #-32]
  41ba44:	mov	w1, #0x15                  	// #21
  41ba48:	adrp	x2, 445000 <_fini+0x4c30>
  41ba4c:	add	x2, x2, #0xb00
  41ba50:	mov	x9, xzr
  41ba54:	mov	x3, x9
  41ba58:	and	w4, w8, #0x1
  41ba5c:	mov	w5, #0xffffffff            	// #-1
  41ba60:	bl	407678 <bus_verify_polkit_async@plt>
  41ba64:	str	w0, [sp, #32]
  41ba68:	ldr	w8, [sp, #32]
  41ba6c:	cmp	w8, #0x0
  41ba70:	cset	w8, ge  // ge = tcont
  41ba74:	tbnz	w8, #0, 41ba84 <method_attach_device+0x264>
  41ba78:	ldr	w8, [sp, #32]
  41ba7c:	stur	w8, [x29, #-4]
  41ba80:	b	41badc <method_attach_device+0x2bc>
  41ba84:	ldr	w8, [sp, #32]
  41ba88:	cbnz	w8, 41ba98 <method_attach_device+0x278>
  41ba8c:	mov	w8, #0x1                   	// #1
  41ba90:	stur	w8, [x29, #-4]
  41ba94:	b	41badc <method_attach_device+0x2bc>
  41ba98:	ldr	x0, [sp, #40]
  41ba9c:	ldr	x1, [sp, #48]
  41baa0:	ldur	x2, [x29, #-40]
  41baa4:	bl	421f50 <attach_device>
  41baa8:	str	w0, [sp, #32]
  41baac:	ldr	w8, [sp, #32]
  41bab0:	cmp	w8, #0x0
  41bab4:	cset	w8, ge  // ge = tcont
  41bab8:	tbnz	w8, #0, 41bac8 <method_attach_device+0x2a8>
  41babc:	ldr	w8, [sp, #32]
  41bac0:	stur	w8, [x29, #-4]
  41bac4:	b	41badc <method_attach_device+0x2bc>
  41bac8:	ldur	x0, [x29, #-16]
  41bacc:	mov	x8, xzr
  41bad0:	mov	x1, x8
  41bad4:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41bad8:	stur	w0, [x29, #-4]
  41badc:	ldur	w0, [x29, #-4]
  41bae0:	ldp	x29, x30, [sp, #96]
  41bae4:	add	sp, sp, #0x70
  41bae8:	ret

000000000041baec <method_flush_devices>:
  41baec:	sub	sp, sp, #0x50
  41baf0:	stp	x29, x30, [sp, #64]
  41baf4:	add	x29, sp, #0x40
  41baf8:	adrp	x8, 442000 <_fini+0x1c30>
  41bafc:	add	x8, x8, #0xd8e
  41bb00:	add	x8, x8, #0x3
  41bb04:	stur	x0, [x29, #-16]
  41bb08:	stur	x1, [x29, #-24]
  41bb0c:	str	x2, [sp, #32]
  41bb10:	ldur	x9, [x29, #-24]
  41bb14:	str	x9, [sp, #24]
  41bb18:	str	x8, [sp, #8]
  41bb1c:	ldur	x8, [x29, #-16]
  41bb20:	cmp	x8, #0x0
  41bb24:	cset	w9, ne  // ne = any
  41bb28:	mov	w10, #0x1                   	// #1
  41bb2c:	eor	w9, w9, #0x1
  41bb30:	eor	w9, w9, w10
  41bb34:	eor	w9, w9, w10
  41bb38:	and	w9, w9, #0x1
  41bb3c:	mov	w0, w9
  41bb40:	sxtw	x8, w0
  41bb44:	cbz	x8, 41bb6c <method_flush_devices+0x80>
  41bb48:	mov	w8, wzr
  41bb4c:	mov	w0, w8
  41bb50:	adrp	x1, 443000 <_fini+0x2c30>
  41bb54:	add	x1, x1, #0x812
  41bb58:	ldr	x2, [sp, #8]
  41bb5c:	mov	w3, #0x5aa                 	// #1450
  41bb60:	adrp	x4, 445000 <_fini+0x4c30>
  41bb64:	add	x4, x4, #0xc14
  41bb68:	bl	406c68 <log_assert_failed_realm@plt>
  41bb6c:	ldr	x8, [sp, #24]
  41bb70:	cmp	x8, #0x0
  41bb74:	cset	w9, ne  // ne = any
  41bb78:	mov	w10, #0x1                   	// #1
  41bb7c:	eor	w9, w9, #0x1
  41bb80:	eor	w9, w9, w10
  41bb84:	eor	w9, w9, w10
  41bb88:	and	w9, w9, #0x1
  41bb8c:	mov	w0, w9
  41bb90:	sxtw	x8, w0
  41bb94:	cbz	x8, 41bbbc <method_flush_devices+0xd0>
  41bb98:	mov	w8, wzr
  41bb9c:	mov	w0, w8
  41bba0:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41bba4:	add	x1, x1, #0x5ef
  41bba8:	ldr	x2, [sp, #8]
  41bbac:	mov	w3, #0x5ab                 	// #1451
  41bbb0:	adrp	x4, 445000 <_fini+0x4c30>
  41bbb4:	add	x4, x4, #0xc14
  41bbb8:	bl	406c68 <log_assert_failed_realm@plt>
  41bbbc:	ldur	x0, [x29, #-16]
  41bbc0:	adrp	x1, 441000 <_fini+0xc30>
  41bbc4:	add	x1, x1, #0xe0e
  41bbc8:	add	x2, sp, #0x14
  41bbcc:	bl	4074c8 <sd_bus_message_read@plt>
  41bbd0:	str	w0, [sp, #16]
  41bbd4:	ldr	w8, [sp, #16]
  41bbd8:	cmp	w8, #0x0
  41bbdc:	cset	w8, ge  // ge = tcont
  41bbe0:	tbnz	w8, #0, 41bbf0 <method_flush_devices+0x104>
  41bbe4:	ldr	w8, [sp, #16]
  41bbe8:	stur	w8, [x29, #-4]
  41bbec:	b	41bc9c <method_flush_devices+0x1b0>
  41bbf0:	ldur	x0, [x29, #-16]
  41bbf4:	ldr	w8, [sp, #20]
  41bbf8:	cmp	w8, #0x0
  41bbfc:	cset	w8, ne  // ne = any
  41bc00:	ldr	x9, [sp, #24]
  41bc04:	add	x6, x9, #0x1b0
  41bc08:	ldr	x7, [sp, #32]
  41bc0c:	mov	w1, #0x15                  	// #21
  41bc10:	adrp	x2, 445000 <_fini+0x4c30>
  41bc14:	add	x2, x2, #0xc57
  41bc18:	mov	x9, xzr
  41bc1c:	mov	x3, x9
  41bc20:	and	w4, w8, #0x1
  41bc24:	mov	w5, #0xffffffff            	// #-1
  41bc28:	bl	407678 <bus_verify_polkit_async@plt>
  41bc2c:	str	w0, [sp, #16]
  41bc30:	ldr	w8, [sp, #16]
  41bc34:	cmp	w8, #0x0
  41bc38:	cset	w8, ge  // ge = tcont
  41bc3c:	tbnz	w8, #0, 41bc4c <method_flush_devices+0x160>
  41bc40:	ldr	w8, [sp, #16]
  41bc44:	stur	w8, [x29, #-4]
  41bc48:	b	41bc9c <method_flush_devices+0x1b0>
  41bc4c:	ldr	w8, [sp, #16]
  41bc50:	cbnz	w8, 41bc60 <method_flush_devices+0x174>
  41bc54:	mov	w8, #0x1                   	// #1
  41bc58:	stur	w8, [x29, #-4]
  41bc5c:	b	41bc9c <method_flush_devices+0x1b0>
  41bc60:	ldr	x0, [sp, #24]
  41bc64:	bl	4224e8 <flush_devices>
  41bc68:	str	w0, [sp, #16]
  41bc6c:	ldr	w8, [sp, #16]
  41bc70:	cmp	w8, #0x0
  41bc74:	cset	w8, ge  // ge = tcont
  41bc78:	tbnz	w8, #0, 41bc88 <method_flush_devices+0x19c>
  41bc7c:	ldr	w8, [sp, #16]
  41bc80:	stur	w8, [x29, #-4]
  41bc84:	b	41bc9c <method_flush_devices+0x1b0>
  41bc88:	ldur	x0, [x29, #-16]
  41bc8c:	mov	x8, xzr
  41bc90:	mov	x1, x8
  41bc94:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41bc98:	stur	w0, [x29, #-4]
  41bc9c:	ldur	w0, [x29, #-4]
  41bca0:	ldp	x29, x30, [sp, #64]
  41bca4:	add	sp, sp, #0x50
  41bca8:	ret

000000000041bcac <method_poweroff>:
  41bcac:	sub	sp, sp, #0x40
  41bcb0:	stp	x29, x30, [sp, #48]
  41bcb4:	add	x29, sp, #0x30
  41bcb8:	adrp	x8, 441000 <_fini+0xc30>
  41bcbc:	add	x8, x8, #0x879
  41bcc0:	mov	w3, #0x1                   	// #1
  41bcc4:	adrp	x4, 445000 <_fini+0x4c30>
  41bcc8:	add	x4, x4, #0xcf4
  41bccc:	adrp	x5, 445000 <_fini+0x4c30>
  41bcd0:	add	x5, x5, #0xd15
  41bcd4:	adrp	x6, 445000 <_fini+0x4c30>
  41bcd8:	add	x6, x6, #0xd48
  41bcdc:	mov	x9, xzr
  41bce0:	stur	x0, [x29, #-8]
  41bce4:	stur	x1, [x29, #-16]
  41bce8:	str	x2, [sp, #24]
  41bcec:	ldur	x10, [x29, #-16]
  41bcf0:	str	x10, [sp, #16]
  41bcf4:	ldr	x0, [sp, #16]
  41bcf8:	ldur	x1, [x29, #-8]
  41bcfc:	ldr	x10, [sp, #24]
  41bd00:	mov	x2, x8
  41bd04:	mov	x7, x9
  41bd08:	mov	x8, sp
  41bd0c:	str	x10, [x8]
  41bd10:	bl	422820 <method_do_shutdown_or_sleep>
  41bd14:	ldp	x29, x30, [sp, #48]
  41bd18:	add	sp, sp, #0x40
  41bd1c:	ret

000000000041bd20 <method_reboot>:
  41bd20:	sub	sp, sp, #0x40
  41bd24:	stp	x29, x30, [sp, #48]
  41bd28:	add	x29, sp, #0x30
  41bd2c:	adrp	x8, 441000 <_fini+0xc30>
  41bd30:	add	x8, x8, #0x889
  41bd34:	mov	w3, #0x1                   	// #1
  41bd38:	adrp	x4, 445000 <_fini+0x4c30>
  41bd3c:	add	x4, x4, #0xfb7
  41bd40:	adrp	x5, 445000 <_fini+0x4c30>
  41bd44:	add	x5, x5, #0xfd5
  41bd48:	adrp	x6, 446000 <_fini+0x5c30>
  41bd4c:	add	x6, x6, #0x5
  41bd50:	mov	x9, xzr
  41bd54:	stur	x0, [x29, #-8]
  41bd58:	stur	x1, [x29, #-16]
  41bd5c:	str	x2, [sp, #24]
  41bd60:	ldur	x10, [x29, #-16]
  41bd64:	str	x10, [sp, #16]
  41bd68:	ldr	x0, [sp, #16]
  41bd6c:	ldur	x1, [x29, #-8]
  41bd70:	ldr	x10, [sp, #24]
  41bd74:	mov	x2, x8
  41bd78:	mov	x7, x9
  41bd7c:	mov	x8, sp
  41bd80:	str	x10, [x8]
  41bd84:	bl	422820 <method_do_shutdown_or_sleep>
  41bd88:	ldp	x29, x30, [sp, #48]
  41bd8c:	add	sp, sp, #0x40
  41bd90:	ret

000000000041bd94 <method_halt>:
  41bd94:	sub	sp, sp, #0x40
  41bd98:	stp	x29, x30, [sp, #48]
  41bd9c:	add	x29, sp, #0x30
  41bda0:	adrp	x8, 441000 <_fini+0xc30>
  41bda4:	add	x8, x8, #0x897
  41bda8:	mov	w3, #0x1                   	// #1
  41bdac:	adrp	x4, 446000 <_fini+0x5c30>
  41bdb0:	add	x4, x4, #0x32
  41bdb4:	adrp	x5, 446000 <_fini+0x5c30>
  41bdb8:	add	x5, x5, #0x4e
  41bdbc:	adrp	x6, 446000 <_fini+0x5c30>
  41bdc0:	add	x6, x6, #0x7c
  41bdc4:	mov	x9, xzr
  41bdc8:	stur	x0, [x29, #-8]
  41bdcc:	stur	x1, [x29, #-16]
  41bdd0:	str	x2, [sp, #24]
  41bdd4:	ldur	x10, [x29, #-16]
  41bdd8:	str	x10, [sp, #16]
  41bddc:	ldr	x0, [sp, #16]
  41bde0:	ldur	x1, [x29, #-8]
  41bde4:	ldr	x10, [sp, #24]
  41bde8:	mov	x2, x8
  41bdec:	mov	x7, x9
  41bdf0:	mov	x8, sp
  41bdf4:	str	x10, [x8]
  41bdf8:	bl	422820 <method_do_shutdown_or_sleep>
  41bdfc:	ldp	x29, x30, [sp, #48]
  41be00:	add	sp, sp, #0x40
  41be04:	ret

000000000041be08 <method_suspend>:
  41be08:	sub	sp, sp, #0x40
  41be0c:	stp	x29, x30, [sp, #48]
  41be10:	add	x29, sp, #0x30
  41be14:	adrp	x8, 441000 <_fini+0xc30>
  41be18:	add	x8, x8, #0x8b0
  41be1c:	mov	w3, #0x2                   	// #2
  41be20:	adrp	x4, 446000 <_fini+0x5c30>
  41be24:	add	x4, x4, #0xa7
  41be28:	adrp	x5, 446000 <_fini+0x5c30>
  41be2c:	add	x5, x5, #0xc6
  41be30:	adrp	x6, 446000 <_fini+0x5c30>
  41be34:	add	x6, x6, #0xf7
  41be38:	adrp	x7, 441000 <_fini+0xc30>
  41be3c:	add	x7, x7, #0xb03
  41be40:	stur	x0, [x29, #-8]
  41be44:	stur	x1, [x29, #-16]
  41be48:	str	x2, [sp, #24]
  41be4c:	ldur	x9, [x29, #-16]
  41be50:	str	x9, [sp, #16]
  41be54:	ldr	x0, [sp, #16]
  41be58:	ldur	x1, [x29, #-8]
  41be5c:	ldr	x9, [sp, #24]
  41be60:	mov	x2, x8
  41be64:	mov	x8, sp
  41be68:	str	x9, [x8]
  41be6c:	bl	422820 <method_do_shutdown_or_sleep>
  41be70:	ldp	x29, x30, [sp, #48]
  41be74:	add	sp, sp, #0x40
  41be78:	ret

000000000041be7c <method_hibernate>:
  41be7c:	sub	sp, sp, #0x40
  41be80:	stp	x29, x30, [sp, #48]
  41be84:	add	x29, sp, #0x30
  41be88:	adrp	x8, 441000 <_fini+0xc30>
  41be8c:	add	x8, x8, #0x8bf
  41be90:	mov	w3, #0x2                   	// #2
  41be94:	adrp	x4, 446000 <_fini+0x5c30>
  41be98:	add	x4, x4, #0x125
  41be9c:	adrp	x5, 446000 <_fini+0x5c30>
  41bea0:	add	x5, x5, #0x146
  41bea4:	adrp	x6, 446000 <_fini+0x5c30>
  41bea8:	add	x6, x6, #0x179
  41beac:	adrp	x7, 441000 <_fini+0xc30>
  41beb0:	add	x7, x7, #0xb0b
  41beb4:	stur	x0, [x29, #-8]
  41beb8:	stur	x1, [x29, #-16]
  41bebc:	str	x2, [sp, #24]
  41bec0:	ldur	x9, [x29, #-16]
  41bec4:	str	x9, [sp, #16]
  41bec8:	ldr	x0, [sp, #16]
  41becc:	ldur	x1, [x29, #-8]
  41bed0:	ldr	x9, [sp, #24]
  41bed4:	mov	x2, x8
  41bed8:	mov	x8, sp
  41bedc:	str	x9, [x8]
  41bee0:	bl	422820 <method_do_shutdown_or_sleep>
  41bee4:	ldp	x29, x30, [sp, #48]
  41bee8:	add	sp, sp, #0x40
  41beec:	ret

000000000041bef0 <method_hybrid_sleep>:
  41bef0:	sub	sp, sp, #0x40
  41bef4:	stp	x29, x30, [sp, #48]
  41bef8:	add	x29, sp, #0x30
  41befc:	adrp	x8, 441000 <_fini+0xc30>
  41bf00:	add	x8, x8, #0x8d0
  41bf04:	mov	w3, #0x2                   	// #2
  41bf08:	adrp	x4, 446000 <_fini+0x5c30>
  41bf0c:	add	x4, x4, #0x125
  41bf10:	adrp	x5, 446000 <_fini+0x5c30>
  41bf14:	add	x5, x5, #0x146
  41bf18:	adrp	x6, 446000 <_fini+0x5c30>
  41bf1c:	add	x6, x6, #0x179
  41bf20:	adrp	x7, 441000 <_fini+0xc30>
  41bf24:	add	x7, x7, #0xb15
  41bf28:	stur	x0, [x29, #-8]
  41bf2c:	stur	x1, [x29, #-16]
  41bf30:	str	x2, [sp, #24]
  41bf34:	ldur	x9, [x29, #-16]
  41bf38:	str	x9, [sp, #16]
  41bf3c:	ldr	x0, [sp, #16]
  41bf40:	ldur	x1, [x29, #-8]
  41bf44:	ldr	x9, [sp, #24]
  41bf48:	mov	x2, x8
  41bf4c:	mov	x8, sp
  41bf50:	str	x9, [x8]
  41bf54:	bl	422820 <method_do_shutdown_or_sleep>
  41bf58:	ldp	x29, x30, [sp, #48]
  41bf5c:	add	sp, sp, #0x40
  41bf60:	ret

000000000041bf64 <method_suspend_then_hibernate>:
  41bf64:	sub	sp, sp, #0x40
  41bf68:	stp	x29, x30, [sp, #48]
  41bf6c:	add	x29, sp, #0x30
  41bf70:	adrp	x8, 441000 <_fini+0xc30>
  41bf74:	add	x8, x8, #0x8e4
  41bf78:	mov	w3, #0x2                   	// #2
  41bf7c:	adrp	x4, 446000 <_fini+0x5c30>
  41bf80:	add	x4, x4, #0x125
  41bf84:	adrp	x5, 446000 <_fini+0x5c30>
  41bf88:	add	x5, x5, #0x146
  41bf8c:	adrp	x6, 446000 <_fini+0x5c30>
  41bf90:	add	x6, x6, #0x179
  41bf94:	adrp	x7, 441000 <_fini+0xc30>
  41bf98:	add	x7, x7, #0xb15
  41bf9c:	stur	x0, [x29, #-8]
  41bfa0:	stur	x1, [x29, #-16]
  41bfa4:	str	x2, [sp, #24]
  41bfa8:	ldur	x9, [x29, #-16]
  41bfac:	str	x9, [sp, #16]
  41bfb0:	ldr	x0, [sp, #16]
  41bfb4:	ldur	x1, [x29, #-8]
  41bfb8:	ldr	x9, [sp, #24]
  41bfbc:	mov	x2, x8
  41bfc0:	mov	x8, sp
  41bfc4:	str	x9, [x8]
  41bfc8:	bl	422820 <method_do_shutdown_or_sleep>
  41bfcc:	ldp	x29, x30, [sp, #48]
  41bfd0:	add	sp, sp, #0x40
  41bfd4:	ret

000000000041bfd8 <method_can_poweroff>:
  41bfd8:	sub	sp, sp, #0x30
  41bfdc:	stp	x29, x30, [sp, #32]
  41bfe0:	add	x29, sp, #0x20
  41bfe4:	mov	w8, #0x1                   	// #1
  41bfe8:	adrp	x3, 445000 <_fini+0x4c30>
  41bfec:	add	x3, x3, #0xcf4
  41bff0:	adrp	x4, 445000 <_fini+0x4c30>
  41bff4:	add	x4, x4, #0xd15
  41bff8:	adrp	x5, 445000 <_fini+0x4c30>
  41bffc:	add	x5, x5, #0xd48
  41c000:	mov	x9, xzr
  41c004:	stur	x0, [x29, #-8]
  41c008:	str	x1, [sp, #16]
  41c00c:	str	x2, [sp, #8]
  41c010:	ldr	x10, [sp, #16]
  41c014:	str	x10, [sp]
  41c018:	ldr	x0, [sp]
  41c01c:	ldur	x1, [x29, #-8]
  41c020:	ldr	x7, [sp, #8]
  41c024:	mov	w2, w8
  41c028:	mov	x6, x9
  41c02c:	bl	4230b0 <method_can_shutdown_or_sleep>
  41c030:	ldp	x29, x30, [sp, #32]
  41c034:	add	sp, sp, #0x30
  41c038:	ret

000000000041c03c <method_can_reboot>:
  41c03c:	sub	sp, sp, #0x30
  41c040:	stp	x29, x30, [sp, #32]
  41c044:	add	x29, sp, #0x20
  41c048:	mov	w8, #0x1                   	// #1
  41c04c:	adrp	x3, 445000 <_fini+0x4c30>
  41c050:	add	x3, x3, #0xfb7
  41c054:	adrp	x4, 445000 <_fini+0x4c30>
  41c058:	add	x4, x4, #0xfd5
  41c05c:	adrp	x5, 446000 <_fini+0x5c30>
  41c060:	add	x5, x5, #0x5
  41c064:	mov	x9, xzr
  41c068:	stur	x0, [x29, #-8]
  41c06c:	str	x1, [sp, #16]
  41c070:	str	x2, [sp, #8]
  41c074:	ldr	x10, [sp, #16]
  41c078:	str	x10, [sp]
  41c07c:	ldr	x0, [sp]
  41c080:	ldur	x1, [x29, #-8]
  41c084:	ldr	x7, [sp, #8]
  41c088:	mov	w2, w8
  41c08c:	mov	x6, x9
  41c090:	bl	4230b0 <method_can_shutdown_or_sleep>
  41c094:	ldp	x29, x30, [sp, #32]
  41c098:	add	sp, sp, #0x30
  41c09c:	ret

000000000041c0a0 <method_can_halt>:
  41c0a0:	sub	sp, sp, #0x30
  41c0a4:	stp	x29, x30, [sp, #32]
  41c0a8:	add	x29, sp, #0x20
  41c0ac:	mov	w8, #0x1                   	// #1
  41c0b0:	adrp	x3, 446000 <_fini+0x5c30>
  41c0b4:	add	x3, x3, #0x32
  41c0b8:	adrp	x4, 446000 <_fini+0x5c30>
  41c0bc:	add	x4, x4, #0x4e
  41c0c0:	adrp	x5, 446000 <_fini+0x5c30>
  41c0c4:	add	x5, x5, #0x7c
  41c0c8:	mov	x9, xzr
  41c0cc:	stur	x0, [x29, #-8]
  41c0d0:	str	x1, [sp, #16]
  41c0d4:	str	x2, [sp, #8]
  41c0d8:	ldr	x10, [sp, #16]
  41c0dc:	str	x10, [sp]
  41c0e0:	ldr	x0, [sp]
  41c0e4:	ldur	x1, [x29, #-8]
  41c0e8:	ldr	x7, [sp, #8]
  41c0ec:	mov	w2, w8
  41c0f0:	mov	x6, x9
  41c0f4:	bl	4230b0 <method_can_shutdown_or_sleep>
  41c0f8:	ldp	x29, x30, [sp, #32]
  41c0fc:	add	sp, sp, #0x30
  41c100:	ret

000000000041c104 <method_can_suspend>:
  41c104:	sub	sp, sp, #0x30
  41c108:	stp	x29, x30, [sp, #32]
  41c10c:	add	x29, sp, #0x20
  41c110:	mov	w8, #0x2                   	// #2
  41c114:	adrp	x3, 446000 <_fini+0x5c30>
  41c118:	add	x3, x3, #0xa7
  41c11c:	adrp	x4, 446000 <_fini+0x5c30>
  41c120:	add	x4, x4, #0xc6
  41c124:	adrp	x5, 446000 <_fini+0x5c30>
  41c128:	add	x5, x5, #0xf7
  41c12c:	adrp	x6, 441000 <_fini+0xc30>
  41c130:	add	x6, x6, #0xb03
  41c134:	stur	x0, [x29, #-8]
  41c138:	str	x1, [sp, #16]
  41c13c:	str	x2, [sp, #8]
  41c140:	ldr	x9, [sp, #16]
  41c144:	str	x9, [sp]
  41c148:	ldr	x0, [sp]
  41c14c:	ldur	x1, [x29, #-8]
  41c150:	ldr	x7, [sp, #8]
  41c154:	mov	w2, w8
  41c158:	bl	4230b0 <method_can_shutdown_or_sleep>
  41c15c:	ldp	x29, x30, [sp, #32]
  41c160:	add	sp, sp, #0x30
  41c164:	ret

000000000041c168 <method_can_hibernate>:
  41c168:	sub	sp, sp, #0x30
  41c16c:	stp	x29, x30, [sp, #32]
  41c170:	add	x29, sp, #0x20
  41c174:	mov	w8, #0x2                   	// #2
  41c178:	adrp	x3, 446000 <_fini+0x5c30>
  41c17c:	add	x3, x3, #0x125
  41c180:	adrp	x4, 446000 <_fini+0x5c30>
  41c184:	add	x4, x4, #0x146
  41c188:	adrp	x5, 446000 <_fini+0x5c30>
  41c18c:	add	x5, x5, #0x179
  41c190:	adrp	x6, 441000 <_fini+0xc30>
  41c194:	add	x6, x6, #0xb0b
  41c198:	stur	x0, [x29, #-8]
  41c19c:	str	x1, [sp, #16]
  41c1a0:	str	x2, [sp, #8]
  41c1a4:	ldr	x9, [sp, #16]
  41c1a8:	str	x9, [sp]
  41c1ac:	ldr	x0, [sp]
  41c1b0:	ldur	x1, [x29, #-8]
  41c1b4:	ldr	x7, [sp, #8]
  41c1b8:	mov	w2, w8
  41c1bc:	bl	4230b0 <method_can_shutdown_or_sleep>
  41c1c0:	ldp	x29, x30, [sp, #32]
  41c1c4:	add	sp, sp, #0x30
  41c1c8:	ret

000000000041c1cc <method_can_hybrid_sleep>:
  41c1cc:	sub	sp, sp, #0x30
  41c1d0:	stp	x29, x30, [sp, #32]
  41c1d4:	add	x29, sp, #0x20
  41c1d8:	mov	w8, #0x2                   	// #2
  41c1dc:	adrp	x3, 446000 <_fini+0x5c30>
  41c1e0:	add	x3, x3, #0x125
  41c1e4:	adrp	x4, 446000 <_fini+0x5c30>
  41c1e8:	add	x4, x4, #0x146
  41c1ec:	adrp	x5, 446000 <_fini+0x5c30>
  41c1f0:	add	x5, x5, #0x179
  41c1f4:	adrp	x6, 441000 <_fini+0xc30>
  41c1f8:	add	x6, x6, #0xb15
  41c1fc:	stur	x0, [x29, #-8]
  41c200:	str	x1, [sp, #16]
  41c204:	str	x2, [sp, #8]
  41c208:	ldr	x9, [sp, #16]
  41c20c:	str	x9, [sp]
  41c210:	ldr	x0, [sp]
  41c214:	ldur	x1, [x29, #-8]
  41c218:	ldr	x7, [sp, #8]
  41c21c:	mov	w2, w8
  41c220:	bl	4230b0 <method_can_shutdown_or_sleep>
  41c224:	ldp	x29, x30, [sp, #32]
  41c228:	add	sp, sp, #0x30
  41c22c:	ret

000000000041c230 <method_can_suspend_then_hibernate>:
  41c230:	sub	sp, sp, #0x30
  41c234:	stp	x29, x30, [sp, #32]
  41c238:	add	x29, sp, #0x20
  41c23c:	mov	w8, #0x2                   	// #2
  41c240:	adrp	x3, 446000 <_fini+0x5c30>
  41c244:	add	x3, x3, #0x125
  41c248:	adrp	x4, 446000 <_fini+0x5c30>
  41c24c:	add	x4, x4, #0x146
  41c250:	adrp	x5, 446000 <_fini+0x5c30>
  41c254:	add	x5, x5, #0x179
  41c258:	adrp	x6, 441000 <_fini+0xc30>
  41c25c:	add	x6, x6, #0xb22
  41c260:	stur	x0, [x29, #-8]
  41c264:	str	x1, [sp, #16]
  41c268:	str	x2, [sp, #8]
  41c26c:	ldr	x9, [sp, #16]
  41c270:	str	x9, [sp]
  41c274:	ldr	x0, [sp]
  41c278:	ldur	x1, [x29, #-8]
  41c27c:	ldr	x7, [sp, #8]
  41c280:	mov	w2, w8
  41c284:	bl	4230b0 <method_can_shutdown_or_sleep>
  41c288:	ldp	x29, x30, [sp, #32]
  41c28c:	add	sp, sp, #0x30
  41c290:	ret

000000000041c294 <method_schedule_shutdown>:
  41c294:	sub	sp, sp, #0x120
  41c298:	stp	x29, x30, [sp, #256]
  41c29c:	str	x28, [sp, #272]
  41c2a0:	add	x29, sp, #0x100
  41c2a4:	mov	x8, xzr
  41c2a8:	mov	w9, #0x0                   	// #0
  41c2ac:	adrp	x10, 442000 <_fini+0x1c30>
  41c2b0:	add	x10, x10, #0xd8e
  41c2b4:	add	x10, x10, #0x3
  41c2b8:	adrp	x11, 446000 <_fini+0x5c30>
  41c2bc:	add	x11, x11, #0x2ec
  41c2c0:	stur	x0, [x29, #-16]
  41c2c4:	stur	x1, [x29, #-24]
  41c2c8:	stur	x2, [x29, #-32]
  41c2cc:	ldur	x12, [x29, #-24]
  41c2d0:	stur	x12, [x29, #-40]
  41c2d4:	stur	x8, [x29, #-48]
  41c2d8:	stur	x8, [x29, #-56]
  41c2dc:	stur	x8, [x29, #-64]
  41c2e0:	stur	x8, [x29, #-72]
  41c2e4:	sturb	w9, [x29, #-93]
  41c2e8:	str	x10, [sp, #40]
  41c2ec:	str	x11, [sp, #32]
  41c2f0:	ldur	x8, [x29, #-40]
  41c2f4:	cmp	x8, #0x0
  41c2f8:	cset	w9, ne  // ne = any
  41c2fc:	mov	w10, #0x1                   	// #1
  41c300:	eor	w9, w9, #0x1
  41c304:	eor	w9, w9, w10
  41c308:	eor	w9, w9, w10
  41c30c:	and	w9, w9, #0x1
  41c310:	mov	w0, w9
  41c314:	sxtw	x8, w0
  41c318:	cbz	x8, 41c340 <method_schedule_shutdown+0xac>
  41c31c:	mov	w8, wzr
  41c320:	mov	w0, w8
  41c324:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41c328:	add	x1, x1, #0x5ef
  41c32c:	ldr	x2, [sp, #40]
  41c330:	mov	w3, #0x865                 	// #2149
  41c334:	adrp	x4, 446000 <_fini+0x5c30>
  41c338:	add	x4, x4, #0x286
  41c33c:	bl	406c68 <log_assert_failed_realm@plt>
  41c340:	ldur	x8, [x29, #-16]
  41c344:	cmp	x8, #0x0
  41c348:	cset	w9, ne  // ne = any
  41c34c:	mov	w10, #0x1                   	// #1
  41c350:	eor	w9, w9, #0x1
  41c354:	eor	w9, w9, w10
  41c358:	eor	w9, w9, w10
  41c35c:	and	w9, w9, #0x1
  41c360:	mov	w0, w9
  41c364:	sxtw	x8, w0
  41c368:	cbz	x8, 41c390 <method_schedule_shutdown+0xfc>
  41c36c:	mov	w8, wzr
  41c370:	mov	w0, w8
  41c374:	adrp	x1, 443000 <_fini+0x2c30>
  41c378:	add	x1, x1, #0x812
  41c37c:	ldr	x2, [sp, #40]
  41c380:	mov	w3, #0x866                 	// #2150
  41c384:	adrp	x4, 446000 <_fini+0x5c30>
  41c388:	add	x4, x4, #0x286
  41c38c:	bl	406c68 <log_assert_failed_realm@plt>
  41c390:	ldur	x0, [x29, #-16]
  41c394:	adrp	x1, 443000 <_fini+0x2c30>
  41c398:	add	x1, x1, #0x6a9
  41c39c:	sub	x2, x29, #0x58
  41c3a0:	sub	x3, x29, #0x50
  41c3a4:	bl	4074c8 <sd_bus_message_read@plt>
  41c3a8:	stur	w0, [x29, #-92]
  41c3ac:	ldur	w8, [x29, #-92]
  41c3b0:	cmp	w8, #0x0
  41c3b4:	cset	w8, ge  // ge = tcont
  41c3b8:	tbnz	w8, #0, 41c3d0 <method_schedule_shutdown+0x13c>
  41c3bc:	ldur	w8, [x29, #-92]
  41c3c0:	stur	w8, [x29, #-4]
  41c3c4:	mov	w8, #0x1                   	// #1
  41c3c8:	stur	w8, [x29, #-100]
  41c3cc:	b	41cb6c <method_schedule_shutdown+0x8d8>
  41c3d0:	ldur	x0, [x29, #-88]
  41c3d4:	adrp	x1, 446000 <_fini+0x5c30>
  41c3d8:	add	x1, x1, #0x2cd
  41c3dc:	bl	4227c0 <startswith>
  41c3e0:	cbz	x0, 41c3f8 <method_schedule_shutdown+0x164>
  41c3e4:	ldur	x8, [x29, #-88]
  41c3e8:	add	x8, x8, #0x4
  41c3ec:	stur	x8, [x29, #-88]
  41c3f0:	mov	w9, #0x1                   	// #1
  41c3f4:	sturb	w9, [x29, #-93]
  41c3f8:	ldur	x0, [x29, #-88]
  41c3fc:	adrp	x1, 441000 <_fini+0xc30>
  41c400:	add	x1, x1, #0xda0
  41c404:	bl	407158 <strcmp@plt>
  41c408:	cbnz	w0, 41c434 <method_schedule_shutdown+0x1a0>
  41c40c:	adrp	x8, 445000 <_fini+0x4c30>
  41c410:	add	x8, x8, #0xcf4
  41c414:	stur	x8, [x29, #-72]
  41c418:	adrp	x8, 445000 <_fini+0x4c30>
  41c41c:	add	x8, x8, #0xd15
  41c420:	stur	x8, [x29, #-56]
  41c424:	adrp	x8, 445000 <_fini+0x4c30>
  41c428:	add	x8, x8, #0xd48
  41c42c:	stur	x8, [x29, #-64]
  41c430:	b	41c4d4 <method_schedule_shutdown+0x240>
  41c434:	ldur	x0, [x29, #-88]
  41c438:	adrp	x1, 441000 <_fini+0xc30>
  41c43c:	add	x1, x1, #0xda9
  41c440:	bl	407158 <strcmp@plt>
  41c444:	cbnz	w0, 41c470 <method_schedule_shutdown+0x1dc>
  41c448:	adrp	x8, 445000 <_fini+0x4c30>
  41c44c:	add	x8, x8, #0xfb7
  41c450:	stur	x8, [x29, #-72]
  41c454:	adrp	x8, 445000 <_fini+0x4c30>
  41c458:	add	x8, x8, #0xfd5
  41c45c:	stur	x8, [x29, #-56]
  41c460:	adrp	x8, 446000 <_fini+0x5c30>
  41c464:	add	x8, x8, #0x5
  41c468:	stur	x8, [x29, #-64]
  41c46c:	b	41c4d4 <method_schedule_shutdown+0x240>
  41c470:	ldur	x0, [x29, #-88]
  41c474:	adrp	x1, 441000 <_fini+0xc30>
  41c478:	add	x1, x1, #0xdb0
  41c47c:	bl	407158 <strcmp@plt>
  41c480:	cbnz	w0, 41c4ac <method_schedule_shutdown+0x218>
  41c484:	adrp	x8, 446000 <_fini+0x5c30>
  41c488:	add	x8, x8, #0x32
  41c48c:	stur	x8, [x29, #-72]
  41c490:	adrp	x8, 446000 <_fini+0x5c30>
  41c494:	add	x8, x8, #0x4e
  41c498:	stur	x8, [x29, #-56]
  41c49c:	adrp	x8, 446000 <_fini+0x5c30>
  41c4a0:	add	x8, x8, #0x7c
  41c4a4:	stur	x8, [x29, #-64]
  41c4a8:	b	41c4d4 <method_schedule_shutdown+0x240>
  41c4ac:	ldur	x0, [x29, #-32]
  41c4b0:	adrp	x1, 445000 <_fini+0x4c30>
  41c4b4:	add	x1, x1, #0x37d
  41c4b8:	adrp	x2, 446000 <_fini+0x5c30>
  41c4bc:	add	x2, x2, #0x2d2
  41c4c0:	bl	407468 <sd_bus_error_setf@plt>
  41c4c4:	stur	w0, [x29, #-4]
  41c4c8:	mov	w8, #0x1                   	// #1
  41c4cc:	stur	w8, [x29, #-100]
  41c4d0:	b	41cb6c <method_schedule_shutdown+0x8d8>
  41c4d4:	ldur	x0, [x29, #-40]
  41c4d8:	ldur	x1, [x29, #-16]
  41c4dc:	ldur	x4, [x29, #-72]
  41c4e0:	ldur	x5, [x29, #-56]
  41c4e4:	ldur	x6, [x29, #-64]
  41c4e8:	ldur	x7, [x29, #-32]
  41c4ec:	mov	w2, #0x1                   	// #1
  41c4f0:	mov	w8, wzr
  41c4f4:	and	w3, w8, #0x1
  41c4f8:	bl	422b80 <verify_shutdown_creds>
  41c4fc:	stur	w0, [x29, #-92]
  41c500:	ldur	w8, [x29, #-92]
  41c504:	cbz	w8, 41c51c <method_schedule_shutdown+0x288>
  41c508:	ldur	w8, [x29, #-92]
  41c50c:	stur	w8, [x29, #-4]
  41c510:	mov	w8, #0x1                   	// #1
  41c514:	stur	w8, [x29, #-100]
  41c518:	b	41cb6c <method_schedule_shutdown+0x8d8>
  41c51c:	ldur	x8, [x29, #-40]
  41c520:	ldr	x8, [x8, #296]
  41c524:	cbz	x8, 41c68c <method_schedule_shutdown+0x3f8>
  41c528:	ldur	x8, [x29, #-40]
  41c52c:	ldr	x0, [x8, #296]
  41c530:	ldur	x1, [x29, #-80]
  41c534:	bl	407048 <sd_event_source_set_time@plt>
  41c538:	stur	w0, [x29, #-92]
  41c53c:	ldur	w9, [x29, #-92]
  41c540:	cmp	w9, #0x0
  41c544:	cset	w9, ge  // ge = tcont
  41c548:	tbnz	w9, #0, 41c5d8 <method_schedule_shutdown+0x344>
  41c54c:	mov	w8, #0x3                   	// #3
  41c550:	stur	w8, [x29, #-104]
  41c554:	ldur	w8, [x29, #-92]
  41c558:	stur	w8, [x29, #-108]
  41c55c:	stur	wzr, [x29, #-112]
  41c560:	ldur	w0, [x29, #-112]
  41c564:	bl	406c08 <log_get_max_level_realm@plt>
  41c568:	ldur	w8, [x29, #-104]
  41c56c:	and	w8, w8, #0x7
  41c570:	cmp	w0, w8
  41c574:	b.lt	41c5a8 <method_schedule_shutdown+0x314>  // b.tstop
  41c578:	ldur	w8, [x29, #-112]
  41c57c:	ldur	w9, [x29, #-104]
  41c580:	orr	w0, w9, w8, lsl #10
  41c584:	ldur	w1, [x29, #-108]
  41c588:	ldr	x2, [sp, #40]
  41c58c:	mov	w3, #0x888                 	// #2184
  41c590:	ldr	x4, [sp, #32]
  41c594:	adrp	x5, 444000 <_fini+0x3c30>
  41c598:	add	x5, x5, #0x2d6
  41c59c:	bl	406c18 <log_internal_realm@plt>
  41c5a0:	str	w0, [sp, #28]
  41c5a4:	b	41c5bc <method_schedule_shutdown+0x328>
  41c5a8:	ldur	w0, [x29, #-108]
  41c5ac:	bl	406c28 <abs@plt>
  41c5b0:	mov	w8, wzr
  41c5b4:	subs	w8, w8, w0, uxtb
  41c5b8:	str	w8, [sp, #28]
  41c5bc:	ldr	w8, [sp, #28]
  41c5c0:	stur	w8, [x29, #-116]
  41c5c4:	ldur	w8, [x29, #-116]
  41c5c8:	stur	w8, [x29, #-4]
  41c5cc:	mov	w8, #0x1                   	// #1
  41c5d0:	stur	w8, [x29, #-100]
  41c5d4:	b	41cb6c <method_schedule_shutdown+0x8d8>
  41c5d8:	ldur	x8, [x29, #-40]
  41c5dc:	ldr	x0, [x8, #296]
  41c5e0:	mov	w1, #0xffffffff            	// #-1
  41c5e4:	bl	407058 <sd_event_source_set_enabled@plt>
  41c5e8:	stur	w0, [x29, #-92]
  41c5ec:	ldur	w9, [x29, #-92]
  41c5f0:	cmp	w9, #0x0
  41c5f4:	cset	w9, ge  // ge = tcont
  41c5f8:	tbnz	w9, #0, 41c688 <method_schedule_shutdown+0x3f4>
  41c5fc:	mov	w8, #0x3                   	// #3
  41c600:	stur	w8, [x29, #-120]
  41c604:	ldur	w8, [x29, #-92]
  41c608:	stur	w8, [x29, #-124]
  41c60c:	str	wzr, [sp, #128]
  41c610:	ldr	w0, [sp, #128]
  41c614:	bl	406c08 <log_get_max_level_realm@plt>
  41c618:	ldur	w8, [x29, #-120]
  41c61c:	and	w8, w8, #0x7
  41c620:	cmp	w0, w8
  41c624:	b.lt	41c658 <method_schedule_shutdown+0x3c4>  // b.tstop
  41c628:	ldr	w8, [sp, #128]
  41c62c:	ldur	w9, [x29, #-120]
  41c630:	orr	w0, w9, w8, lsl #10
  41c634:	ldur	w1, [x29, #-124]
  41c638:	ldr	x2, [sp, #40]
  41c63c:	mov	w3, #0x88c                 	// #2188
  41c640:	ldr	x4, [sp, #32]
  41c644:	adrp	x5, 444000 <_fini+0x3c30>
  41c648:	add	x5, x5, #0x2fc
  41c64c:	bl	406c18 <log_internal_realm@plt>
  41c650:	str	w0, [sp, #24]
  41c654:	b	41c66c <method_schedule_shutdown+0x3d8>
  41c658:	ldur	w0, [x29, #-124]
  41c65c:	bl	406c28 <abs@plt>
  41c660:	mov	w8, wzr
  41c664:	subs	w8, w8, w0, uxtb
  41c668:	str	w8, [sp, #24]
  41c66c:	ldr	w8, [sp, #24]
  41c670:	str	w8, [sp, #124]
  41c674:	ldr	w8, [sp, #124]
  41c678:	stur	w8, [x29, #-4]
  41c67c:	mov	w8, #0x1                   	// #1
  41c680:	stur	w8, [x29, #-100]
  41c684:	b	41cb6c <method_schedule_shutdown+0x8d8>
  41c688:	b	41c760 <method_schedule_shutdown+0x4cc>
  41c68c:	ldur	x8, [x29, #-40]
  41c690:	ldr	x0, [x8]
  41c694:	ldur	x8, [x29, #-40]
  41c698:	add	x1, x8, #0x128
  41c69c:	ldur	x3, [x29, #-80]
  41c6a0:	ldur	x6, [x29, #-40]
  41c6a4:	mov	w9, wzr
  41c6a8:	mov	w2, w9
  41c6ac:	mov	x8, xzr
  41c6b0:	mov	x4, x8
  41c6b4:	adrp	x5, 423000 <have_multiple_sessions+0x4c>
  41c6b8:	add	x5, x5, #0x7d0
  41c6bc:	bl	407028 <sd_event_add_time@plt>
  41c6c0:	stur	w0, [x29, #-92]
  41c6c4:	ldur	w9, [x29, #-92]
  41c6c8:	cmp	w9, #0x0
  41c6cc:	cset	w9, ge  // ge = tcont
  41c6d0:	tbnz	w9, #0, 41c760 <method_schedule_shutdown+0x4cc>
  41c6d4:	mov	w8, #0x3                   	// #3
  41c6d8:	str	w8, [sp, #120]
  41c6dc:	ldur	w8, [x29, #-92]
  41c6e0:	str	w8, [sp, #116]
  41c6e4:	str	wzr, [sp, #112]
  41c6e8:	ldr	w0, [sp, #112]
  41c6ec:	bl	406c08 <log_get_max_level_realm@plt>
  41c6f0:	ldr	w8, [sp, #120]
  41c6f4:	and	w8, w8, #0x7
  41c6f8:	cmp	w0, w8
  41c6fc:	b.lt	41c730 <method_schedule_shutdown+0x49c>  // b.tstop
  41c700:	ldr	w8, [sp, #112]
  41c704:	ldr	w9, [sp, #120]
  41c708:	orr	w0, w9, w8, lsl #10
  41c70c:	ldr	w1, [sp, #116]
  41c710:	ldr	x2, [sp, #40]
  41c714:	mov	w3, #0x891                 	// #2193
  41c718:	ldr	x4, [sp, #32]
  41c71c:	adrp	x5, 446000 <_fini+0x5c30>
  41c720:	add	x5, x5, #0x305
  41c724:	bl	406c18 <log_internal_realm@plt>
  41c728:	str	w0, [sp, #20]
  41c72c:	b	41c744 <method_schedule_shutdown+0x4b0>
  41c730:	ldr	w0, [sp, #116]
  41c734:	bl	406c28 <abs@plt>
  41c738:	mov	w8, wzr
  41c73c:	subs	w8, w8, w0, uxtb
  41c740:	str	w8, [sp, #20]
  41c744:	ldr	w8, [sp, #20]
  41c748:	str	w8, [sp, #108]
  41c74c:	ldr	w8, [sp, #108]
  41c750:	stur	w8, [x29, #-4]
  41c754:	mov	w8, #0x1                   	// #1
  41c758:	stur	w8, [x29, #-100]
  41c75c:	b	41cb6c <method_schedule_shutdown+0x8d8>
  41c760:	ldur	x8, [x29, #-40]
  41c764:	add	x0, x8, #0x118
  41c768:	ldur	x1, [x29, #-88]
  41c76c:	bl	407428 <free_and_strdup@plt>
  41c770:	stur	w0, [x29, #-92]
  41c774:	ldur	w9, [x29, #-92]
  41c778:	cmp	w9, #0x0
  41c77c:	cset	w9, ge  // ge = tcont
  41c780:	tbnz	w9, #0, 41c7c0 <method_schedule_shutdown+0x52c>
  41c784:	ldur	x8, [x29, #-40]
  41c788:	ldr	x0, [x8, #296]
  41c78c:	bl	406d28 <sd_event_source_unref@plt>
  41c790:	ldur	x8, [x29, #-40]
  41c794:	str	x0, [x8, #296]
  41c798:	mov	w9, wzr
  41c79c:	mov	w0, w9
  41c7a0:	ldr	x1, [sp, #40]
  41c7a4:	mov	w2, #0x897                 	// #2199
  41c7a8:	ldr	x3, [sp, #32]
  41c7ac:	bl	407008 <log_oom_internal@plt>
  41c7b0:	stur	w0, [x29, #-4]
  41c7b4:	mov	w9, #0x1                   	// #1
  41c7b8:	stur	w9, [x29, #-100]
  41c7bc:	b	41cb6c <method_schedule_shutdown+0x8d8>
  41c7c0:	ldurb	w8, [x29, #-93]
  41c7c4:	ldur	x9, [x29, #-40]
  41c7c8:	and	w8, w8, #0x1
  41c7cc:	strb	w8, [x9, #360]
  41c7d0:	ldur	x9, [x29, #-40]
  41c7d4:	ldr	x9, [x9, #320]
  41c7d8:	cbz	x9, 41c940 <method_schedule_shutdown+0x6ac>
  41c7dc:	ldur	x8, [x29, #-40]
  41c7e0:	ldr	x0, [x8, #320]
  41c7e4:	ldur	x1, [x29, #-80]
  41c7e8:	bl	407048 <sd_event_source_set_time@plt>
  41c7ec:	stur	w0, [x29, #-92]
  41c7f0:	ldur	w9, [x29, #-92]
  41c7f4:	cmp	w9, #0x0
  41c7f8:	cset	w9, ge  // ge = tcont
  41c7fc:	tbnz	w9, #0, 41c88c <method_schedule_shutdown+0x5f8>
  41c800:	mov	w8, #0x3                   	// #3
  41c804:	str	w8, [sp, #104]
  41c808:	ldur	w8, [x29, #-92]
  41c80c:	str	w8, [sp, #100]
  41c810:	str	wzr, [sp, #96]
  41c814:	ldr	w0, [sp, #96]
  41c818:	bl	406c08 <log_get_max_level_realm@plt>
  41c81c:	ldr	w8, [sp, #104]
  41c820:	and	w8, w8, #0x7
  41c824:	cmp	w0, w8
  41c828:	b.lt	41c85c <method_schedule_shutdown+0x5c8>  // b.tstop
  41c82c:	ldr	w8, [sp, #96]
  41c830:	ldr	w9, [sp, #104]
  41c834:	orr	w0, w9, w8, lsl #10
  41c838:	ldr	w1, [sp, #100]
  41c83c:	ldr	x2, [sp, #40]
  41c840:	mov	w3, #0x89f                 	// #2207
  41c844:	ldr	x4, [sp, #32]
  41c848:	adrp	x5, 444000 <_fini+0x3c30>
  41c84c:	add	x5, x5, #0x2d6
  41c850:	bl	406c18 <log_internal_realm@plt>
  41c854:	str	w0, [sp, #16]
  41c858:	b	41c870 <method_schedule_shutdown+0x5dc>
  41c85c:	ldr	w0, [sp, #100]
  41c860:	bl	406c28 <abs@plt>
  41c864:	mov	w8, wzr
  41c868:	subs	w8, w8, w0, uxtb
  41c86c:	str	w8, [sp, #16]
  41c870:	ldr	w8, [sp, #16]
  41c874:	str	w8, [sp, #92]
  41c878:	ldr	w8, [sp, #92]
  41c87c:	stur	w8, [x29, #-4]
  41c880:	mov	w8, #0x1                   	// #1
  41c884:	stur	w8, [x29, #-100]
  41c888:	b	41cb6c <method_schedule_shutdown+0x8d8>
  41c88c:	ldur	x8, [x29, #-40]
  41c890:	ldr	x0, [x8, #320]
  41c894:	mov	w1, #0xffffffff            	// #-1
  41c898:	bl	407058 <sd_event_source_set_enabled@plt>
  41c89c:	stur	w0, [x29, #-92]
  41c8a0:	ldur	w9, [x29, #-92]
  41c8a4:	cmp	w9, #0x0
  41c8a8:	cset	w9, ge  // ge = tcont
  41c8ac:	tbnz	w9, #0, 41c93c <method_schedule_shutdown+0x6a8>
  41c8b0:	mov	w8, #0x3                   	// #3
  41c8b4:	str	w8, [sp, #88]
  41c8b8:	ldur	w8, [x29, #-92]
  41c8bc:	str	w8, [sp, #84]
  41c8c0:	str	wzr, [sp, #80]
  41c8c4:	ldr	w0, [sp, #80]
  41c8c8:	bl	406c08 <log_get_max_level_realm@plt>
  41c8cc:	ldr	w8, [sp, #88]
  41c8d0:	and	w8, w8, #0x7
  41c8d4:	cmp	w0, w8
  41c8d8:	b.lt	41c90c <method_schedule_shutdown+0x678>  // b.tstop
  41c8dc:	ldr	w8, [sp, #80]
  41c8e0:	ldr	w9, [sp, #88]
  41c8e4:	orr	w0, w9, w8, lsl #10
  41c8e8:	ldr	w1, [sp, #84]
  41c8ec:	ldr	x2, [sp, #40]
  41c8f0:	mov	w3, #0x8a3                 	// #2211
  41c8f4:	ldr	x4, [sp, #32]
  41c8f8:	adrp	x5, 444000 <_fini+0x3c30>
  41c8fc:	add	x5, x5, #0x2fc
  41c900:	bl	406c18 <log_internal_realm@plt>
  41c904:	str	w0, [sp, #12]
  41c908:	b	41c920 <method_schedule_shutdown+0x68c>
  41c90c:	ldr	w0, [sp, #84]
  41c910:	bl	406c28 <abs@plt>
  41c914:	mov	w8, wzr
  41c918:	subs	w8, w8, w0, uxtb
  41c91c:	str	w8, [sp, #12]
  41c920:	ldr	w8, [sp, #12]
  41c924:	str	w8, [sp, #76]
  41c928:	ldr	w8, [sp, #76]
  41c92c:	stur	w8, [x29, #-4]
  41c930:	mov	w8, #0x1                   	// #1
  41c934:	stur	w8, [x29, #-100]
  41c938:	b	41cb6c <method_schedule_shutdown+0x8d8>
  41c93c:	b	41ca20 <method_schedule_shutdown+0x78c>
  41c940:	ldur	x8, [x29, #-40]
  41c944:	ldr	x0, [x8]
  41c948:	ldur	x8, [x29, #-40]
  41c94c:	add	x1, x8, #0x140
  41c950:	ldur	x8, [x29, #-80]
  41c954:	mov	x9, #0xa300                	// #41728
  41c958:	movk	x9, #0x11e1, lsl #16
  41c95c:	subs	x3, x8, x9
  41c960:	ldur	x6, [x29, #-40]
  41c964:	mov	w10, wzr
  41c968:	mov	w2, w10
  41c96c:	mov	x8, xzr
  41c970:	mov	x4, x8
  41c974:	adrp	x5, 423000 <have_multiple_sessions+0x4c>
  41c978:	add	x5, x5, #0xb54
  41c97c:	bl	407028 <sd_event_add_time@plt>
  41c980:	stur	w0, [x29, #-92]
  41c984:	ldur	w10, [x29, #-92]
  41c988:	cmp	w10, #0x0
  41c98c:	cset	w10, ge  // ge = tcont
  41c990:	tbnz	w10, #0, 41ca20 <method_schedule_shutdown+0x78c>
  41c994:	mov	w8, #0x3                   	// #3
  41c998:	str	w8, [sp, #72]
  41c99c:	ldur	w8, [x29, #-92]
  41c9a0:	str	w8, [sp, #68]
  41c9a4:	str	wzr, [sp, #64]
  41c9a8:	ldr	w0, [sp, #64]
  41c9ac:	bl	406c08 <log_get_max_level_realm@plt>
  41c9b0:	ldr	w8, [sp, #72]
  41c9b4:	and	w8, w8, #0x7
  41c9b8:	cmp	w0, w8
  41c9bc:	b.lt	41c9f0 <method_schedule_shutdown+0x75c>  // b.tstop
  41c9c0:	ldr	w8, [sp, #64]
  41c9c4:	ldr	w9, [sp, #72]
  41c9c8:	orr	w0, w9, w8, lsl #10
  41c9cc:	ldr	w1, [sp, #68]
  41c9d0:	ldr	x2, [sp, #40]
  41c9d4:	mov	w3, #0x8a8                 	// #2216
  41c9d8:	ldr	x4, [sp, #32]
  41c9dc:	adrp	x5, 446000 <_fini+0x5c30>
  41c9e0:	add	x5, x5, #0x305
  41c9e4:	bl	406c18 <log_internal_realm@plt>
  41c9e8:	str	w0, [sp, #8]
  41c9ec:	b	41ca04 <method_schedule_shutdown+0x770>
  41c9f0:	ldr	w0, [sp, #68]
  41c9f4:	bl	406c28 <abs@plt>
  41c9f8:	mov	w8, wzr
  41c9fc:	subs	w8, w8, w0, uxtb
  41ca00:	str	w8, [sp, #8]
  41ca04:	ldr	w8, [sp, #8]
  41ca08:	str	w8, [sp, #60]
  41ca0c:	ldr	w8, [sp, #60]
  41ca10:	stur	w8, [x29, #-4]
  41ca14:	mov	w8, #0x1                   	// #1
  41ca18:	stur	w8, [x29, #-100]
  41ca1c:	b	41cb6c <method_schedule_shutdown+0x8d8>
  41ca20:	ldur	x8, [x29, #-80]
  41ca24:	ldur	x9, [x29, #-40]
  41ca28:	str	x8, [x9, #288]
  41ca2c:	ldur	x0, [x29, #-16]
  41ca30:	mov	x1, #0x8                   	// #8
  41ca34:	movk	x1, #0x4000, lsl #16
  41ca38:	movk	x1, #0x8000, lsl #48
  41ca3c:	sub	x2, x29, #0x30
  41ca40:	bl	407478 <sd_bus_query_sender_creds@plt>
  41ca44:	stur	w0, [x29, #-92]
  41ca48:	ldur	w10, [x29, #-92]
  41ca4c:	cmp	w10, #0x0
  41ca50:	cset	w10, lt  // lt = tstop
  41ca54:	tbnz	w10, #0, 41caf0 <method_schedule_shutdown+0x85c>
  41ca58:	add	x1, sp, #0x30
  41ca5c:	mov	x8, xzr
  41ca60:	str	x8, [sp, #48]
  41ca64:	ldur	x0, [x29, #-48]
  41ca68:	ldur	x8, [x29, #-40]
  41ca6c:	add	x8, x8, #0x130
  41ca70:	str	x1, [sp]
  41ca74:	mov	x1, x8
  41ca78:	bl	407708 <sd_bus_creds_get_uid@plt>
  41ca7c:	ldur	x8, [x29, #-48]
  41ca80:	mov	x0, x8
  41ca84:	ldr	x1, [sp]
  41ca88:	bl	407718 <sd_bus_creds_get_tty@plt>
  41ca8c:	ldur	x8, [x29, #-40]
  41ca90:	add	x8, x8, #0x138
  41ca94:	ldr	x1, [sp, #48]
  41ca98:	mov	x0, x8
  41ca9c:	bl	407428 <free_and_strdup@plt>
  41caa0:	stur	w0, [x29, #-92]
  41caa4:	ldur	w9, [x29, #-92]
  41caa8:	cmp	w9, #0x0
  41caac:	cset	w9, ge  // ge = tcont
  41cab0:	tbnz	w9, #0, 41caf0 <method_schedule_shutdown+0x85c>
  41cab4:	ldur	x8, [x29, #-40]
  41cab8:	ldr	x0, [x8, #296]
  41cabc:	bl	406d28 <sd_event_source_unref@plt>
  41cac0:	ldur	x8, [x29, #-40]
  41cac4:	str	x0, [x8, #296]
  41cac8:	mov	w9, wzr
  41cacc:	mov	w0, w9
  41cad0:	ldr	x1, [sp, #40]
  41cad4:	mov	w2, #0x8b7                 	// #2231
  41cad8:	ldr	x3, [sp, #32]
  41cadc:	bl	407008 <log_oom_internal@plt>
  41cae0:	stur	w0, [x29, #-4]
  41cae4:	mov	w9, #0x1                   	// #1
  41cae8:	stur	w9, [x29, #-100]
  41caec:	b	41cb6c <method_schedule_shutdown+0x8d8>
  41caf0:	ldur	x0, [x29, #-40]
  41caf4:	bl	43d7e0 <manager_setup_wall_message_timer>
  41caf8:	stur	w0, [x29, #-92]
  41cafc:	ldur	w8, [x29, #-92]
  41cb00:	cmp	w8, #0x0
  41cb04:	cset	w8, ge  // ge = tcont
  41cb08:	tbnz	w8, #0, 41cb20 <method_schedule_shutdown+0x88c>
  41cb0c:	ldur	w8, [x29, #-92]
  41cb10:	stur	w8, [x29, #-4]
  41cb14:	mov	w8, #0x1                   	// #1
  41cb18:	stur	w8, [x29, #-100]
  41cb1c:	b	41cb6c <method_schedule_shutdown+0x8d8>
  41cb20:	ldur	x0, [x29, #-40]
  41cb24:	bl	423c28 <update_schedule_file>
  41cb28:	stur	w0, [x29, #-92]
  41cb2c:	ldur	w8, [x29, #-92]
  41cb30:	cmp	w8, #0x0
  41cb34:	cset	w8, ge  // ge = tcont
  41cb38:	tbnz	w8, #0, 41cb50 <method_schedule_shutdown+0x8bc>
  41cb3c:	ldur	w8, [x29, #-92]
  41cb40:	stur	w8, [x29, #-4]
  41cb44:	mov	w8, #0x1                   	// #1
  41cb48:	stur	w8, [x29, #-100]
  41cb4c:	b	41cb6c <method_schedule_shutdown+0x8d8>
  41cb50:	ldur	x0, [x29, #-16]
  41cb54:	mov	x8, xzr
  41cb58:	mov	x1, x8
  41cb5c:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41cb60:	stur	w0, [x29, #-4]
  41cb64:	mov	w9, #0x1                   	// #1
  41cb68:	stur	w9, [x29, #-100]
  41cb6c:	sub	x0, x29, #0x30
  41cb70:	bl	421604 <sd_bus_creds_unrefp>
  41cb74:	ldur	w0, [x29, #-4]
  41cb78:	ldr	x28, [sp, #272]
  41cb7c:	ldp	x29, x30, [sp, #256]
  41cb80:	add	sp, sp, #0x120
  41cb84:	ret

000000000041cb88 <method_cancel_scheduled_shutdown>:
  41cb88:	sub	sp, sp, #0x70
  41cb8c:	stp	x29, x30, [sp, #96]
  41cb90:	add	x29, sp, #0x60
  41cb94:	adrp	x8, 442000 <_fini+0x1c30>
  41cb98:	add	x8, x8, #0xd8e
  41cb9c:	add	x8, x8, #0x3
  41cba0:	stur	x0, [x29, #-8]
  41cba4:	stur	x1, [x29, #-16]
  41cba8:	stur	x2, [x29, #-24]
  41cbac:	ldur	x9, [x29, #-16]
  41cbb0:	stur	x9, [x29, #-32]
  41cbb4:	str	x8, [sp, #16]
  41cbb8:	ldur	x8, [x29, #-32]
  41cbbc:	cmp	x8, #0x0
  41cbc0:	cset	w9, ne  // ne = any
  41cbc4:	mov	w10, #0x1                   	// #1
  41cbc8:	eor	w9, w9, #0x1
  41cbcc:	eor	w9, w9, w10
  41cbd0:	eor	w9, w9, w10
  41cbd4:	and	w9, w9, #0x1
  41cbd8:	mov	w0, w9
  41cbdc:	sxtw	x8, w0
  41cbe0:	cbz	x8, 41cc08 <method_cancel_scheduled_shutdown+0x80>
  41cbe4:	mov	w8, wzr
  41cbe8:	mov	w0, w8
  41cbec:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41cbf0:	add	x1, x1, #0x5ef
  41cbf4:	ldr	x2, [sp, #16]
  41cbf8:	mov	w3, #0x8ca                 	// #2250
  41cbfc:	adrp	x4, 446000 <_fini+0x5c30>
  41cc00:	add	x4, x4, #0x5f9
  41cc04:	bl	406c68 <log_assert_failed_realm@plt>
  41cc08:	ldur	x8, [x29, #-8]
  41cc0c:	cmp	x8, #0x0
  41cc10:	cset	w9, ne  // ne = any
  41cc14:	mov	w10, #0x1                   	// #1
  41cc18:	eor	w9, w9, #0x1
  41cc1c:	eor	w9, w9, w10
  41cc20:	eor	w9, w9, w10
  41cc24:	and	w9, w9, #0x1
  41cc28:	mov	w0, w9
  41cc2c:	sxtw	x8, w0
  41cc30:	cbz	x8, 41cc58 <method_cancel_scheduled_shutdown+0xd0>
  41cc34:	mov	w8, wzr
  41cc38:	mov	w0, w8
  41cc3c:	adrp	x1, 443000 <_fini+0x2c30>
  41cc40:	add	x1, x1, #0x812
  41cc44:	ldr	x2, [sp, #16]
  41cc48:	mov	w3, #0x8cb                 	// #2251
  41cc4c:	adrp	x4, 446000 <_fini+0x5c30>
  41cc50:	add	x4, x4, #0x5f9
  41cc54:	bl	406c68 <log_assert_failed_realm@plt>
  41cc58:	ldur	x8, [x29, #-32]
  41cc5c:	ldr	x8, [x8, #280]
  41cc60:	cmp	x8, #0x0
  41cc64:	cset	w9, ne  // ne = any
  41cc68:	and	w9, w9, #0x1
  41cc6c:	sturb	w9, [x29, #-33]
  41cc70:	ldur	x0, [x29, #-32]
  41cc74:	bl	424008 <reset_scheduled_shutdown>
  41cc78:	ldurb	w9, [x29, #-33]
  41cc7c:	tbnz	w9, #0, 41cc84 <method_cancel_scheduled_shutdown+0xfc>
  41cc80:	b	41cd34 <method_cancel_scheduled_shutdown+0x1ac>
  41cc84:	ldur	x8, [x29, #-32]
  41cc88:	ldr	w9, [x8, #344]
  41cc8c:	cbz	w9, 41cd34 <method_cancel_scheduled_shutdown+0x1ac>
  41cc90:	add	x2, sp, #0x30
  41cc94:	mov	x8, xzr
  41cc98:	str	x8, [sp, #48]
  41cc9c:	str	x8, [sp, #40]
  41cca0:	str	x8, [sp, #32]
  41cca4:	str	wzr, [sp, #28]
  41cca8:	ldur	x0, [x29, #-8]
  41ccac:	mov	x1, #0x8                   	// #8
  41ccb0:	movk	x1, #0x4000, lsl #16
  41ccb4:	movk	x1, #0x8000, lsl #48
  41ccb8:	bl	407478 <sd_bus_query_sender_creds@plt>
  41ccbc:	str	w0, [sp, #24]
  41ccc0:	ldr	w9, [sp, #24]
  41ccc4:	cmp	w9, #0x0
  41ccc8:	cset	w9, lt  // lt = tstop
  41cccc:	tbnz	w9, #0, 41ccec <method_cancel_scheduled_shutdown+0x164>
  41ccd0:	ldr	x0, [sp, #48]
  41ccd4:	add	x1, sp, #0x1c
  41ccd8:	bl	407708 <sd_bus_creds_get_uid@plt>
  41ccdc:	ldr	x8, [sp, #48]
  41cce0:	mov	x0, x8
  41cce4:	add	x1, sp, #0x20
  41cce8:	bl	407718 <sd_bus_creds_get_tty@plt>
  41ccec:	ldr	w0, [sp, #28]
  41ccf0:	bl	4071c8 <uid_to_name@plt>
  41ccf4:	add	x8, sp, #0x28
  41ccf8:	str	x0, [sp, #40]
  41ccfc:	ldr	x1, [sp, #40]
  41cd00:	ldr	x2, [sp, #32]
  41cd04:	ldur	x4, [x29, #-32]
  41cd08:	adrp	x0, 446000 <_fini+0x5c30>
  41cd0c:	add	x0, x0, #0x648
  41cd10:	adrp	x3, 45f000 <logind_gperf_lookup.wordlist+0x388>
  41cd14:	ldr	x3, [x3, #1392]
  41cd18:	str	x8, [sp, #8]
  41cd1c:	bl	407728 <utmp_wall@plt>
  41cd20:	ldr	x8, [sp, #8]
  41cd24:	mov	x0, x8
  41cd28:	bl	4152e4 <freep>
  41cd2c:	add	x0, sp, #0x30
  41cd30:	bl	421604 <sd_bus_creds_unrefp>
  41cd34:	ldur	x0, [x29, #-8]
  41cd38:	ldurb	w8, [x29, #-33]
  41cd3c:	and	w2, w8, #0x1
  41cd40:	adrp	x1, 441000 <_fini+0xc30>
  41cd44:	add	x1, x1, #0xe0e
  41cd48:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41cd4c:	ldp	x29, x30, [sp, #96]
  41cd50:	add	sp, sp, #0x70
  41cd54:	ret

000000000041cd58 <method_inhibit>:
  41cd58:	sub	sp, sp, #0xe0
  41cd5c:	stp	x29, x30, [sp, #208]
  41cd60:	add	x29, sp, #0xd0
  41cd64:	mov	x8, xzr
  41cd68:	mov	w9, #0xffffffff            	// #-1
  41cd6c:	adrp	x10, 445000 <_fini+0x4c30>
  41cd70:	add	x10, x10, #0x37d
  41cd74:	adrp	x11, 442000 <_fini+0x1c30>
  41cd78:	add	x11, x11, #0xd8e
  41cd7c:	add	x11, x11, #0x3
  41cd80:	stur	x0, [x29, #-16]
  41cd84:	stur	x1, [x29, #-24]
  41cd88:	stur	x2, [x29, #-32]
  41cd8c:	stur	x8, [x29, #-40]
  41cd90:	stur	x8, [x29, #-80]
  41cd94:	stur	w9, [x29, #-84]
  41cd98:	ldur	x12, [x29, #-24]
  41cd9c:	stur	x12, [x29, #-96]
  41cda0:	str	x8, [sp, #104]
  41cda4:	str	x10, [sp, #72]
  41cda8:	str	x11, [sp, #64]
  41cdac:	ldur	x8, [x29, #-16]
  41cdb0:	cmp	x8, #0x0
  41cdb4:	cset	w9, ne  // ne = any
  41cdb8:	mov	w10, #0x1                   	// #1
  41cdbc:	eor	w9, w9, #0x1
  41cdc0:	eor	w9, w9, w10
  41cdc4:	eor	w9, w9, w10
  41cdc8:	and	w9, w9, #0x1
  41cdcc:	mov	w0, w9
  41cdd0:	sxtw	x8, w0
  41cdd4:	cbz	x8, 41cdfc <method_inhibit+0xa4>
  41cdd8:	mov	w8, wzr
  41cddc:	mov	w0, w8
  41cde0:	adrp	x1, 443000 <_fini+0x2c30>
  41cde4:	add	x1, x1, #0x812
  41cde8:	ldr	x2, [sp, #64]
  41cdec:	mov	w3, #0xc77                 	// #3191
  41cdf0:	adrp	x4, 446000 <_fini+0x5c30>
  41cdf4:	add	x4, x4, #0x66f
  41cdf8:	bl	406c68 <log_assert_failed_realm@plt>
  41cdfc:	ldur	x8, [x29, #-96]
  41ce00:	cmp	x8, #0x0
  41ce04:	cset	w9, ne  // ne = any
  41ce08:	mov	w10, #0x1                   	// #1
  41ce0c:	eor	w9, w9, #0x1
  41ce10:	eor	w9, w9, w10
  41ce14:	eor	w9, w9, w10
  41ce18:	and	w9, w9, #0x1
  41ce1c:	mov	w0, w9
  41ce20:	sxtw	x8, w0
  41ce24:	cbz	x8, 41ce4c <method_inhibit+0xf4>
  41ce28:	mov	w8, wzr
  41ce2c:	mov	w0, w8
  41ce30:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41ce34:	add	x1, x1, #0x5ef
  41ce38:	ldr	x2, [sp, #64]
  41ce3c:	mov	w3, #0xc78                 	// #3192
  41ce40:	adrp	x4, 446000 <_fini+0x5c30>
  41ce44:	add	x4, x4, #0x66f
  41ce48:	bl	406c68 <log_assert_failed_realm@plt>
  41ce4c:	ldur	x0, [x29, #-16]
  41ce50:	adrp	x1, 443000 <_fini+0x2c30>
  41ce54:	add	x1, x1, #0x6cc
  41ce58:	sub	x2, x29, #0x40
  41ce5c:	sub	x3, x29, #0x30
  41ce60:	sub	x4, x29, #0x38
  41ce64:	sub	x5, x29, #0x48
  41ce68:	bl	4074c8 <sd_bus_message_read@plt>
  41ce6c:	str	w0, [sp, #84]
  41ce70:	ldr	w8, [sp, #84]
  41ce74:	cmp	w8, #0x0
  41ce78:	cset	w8, ge  // ge = tcont
  41ce7c:	tbnz	w8, #0, 41ce94 <method_inhibit+0x13c>
  41ce80:	ldr	w8, [sp, #84]
  41ce84:	stur	w8, [x29, #-4]
  41ce88:	mov	w8, #0x1                   	// #1
  41ce8c:	str	w8, [sp, #80]
  41ce90:	b	41d3a0 <method_inhibit+0x648>
  41ce94:	ldur	x0, [x29, #-64]
  41ce98:	bl	426024 <inhibit_what_from_string>
  41ce9c:	str	w0, [sp, #96]
  41cea0:	ldr	w8, [sp, #96]
  41cea4:	cmp	w8, #0x0
  41cea8:	cset	w8, gt
  41ceac:	tbnz	w8, #0, 41ced8 <method_inhibit+0x180>
  41ceb0:	ldur	x0, [x29, #-32]
  41ceb4:	ldur	x3, [x29, #-64]
  41ceb8:	ldr	x1, [sp, #72]
  41cebc:	adrp	x2, 446000 <_fini+0x5c30>
  41cec0:	add	x2, x2, #0x6ac
  41cec4:	bl	407468 <sd_bus_error_setf@plt>
  41cec8:	stur	w0, [x29, #-4]
  41cecc:	mov	w8, #0x1                   	// #1
  41ced0:	str	w8, [sp, #80]
  41ced4:	b	41d3a0 <method_inhibit+0x648>
  41ced8:	ldur	x0, [x29, #-72]
  41cedc:	bl	426220 <inhibit_mode_from_string>
  41cee0:	str	w0, [sp, #100]
  41cee4:	ldr	w8, [sp, #100]
  41cee8:	cmp	w8, #0x0
  41ceec:	cset	w8, ge  // ge = tcont
  41cef0:	tbnz	w8, #0, 41cf1c <method_inhibit+0x1c4>
  41cef4:	ldur	x0, [x29, #-32]
  41cef8:	ldur	x3, [x29, #-72]
  41cefc:	ldr	x1, [sp, #72]
  41cf00:	adrp	x2, 446000 <_fini+0x5c30>
  41cf04:	add	x2, x2, #0x6ca
  41cf08:	bl	407468 <sd_bus_error_setf@plt>
  41cf0c:	stur	w0, [x29, #-4]
  41cf10:	mov	w8, #0x1                   	// #1
  41cf14:	str	w8, [sp, #80]
  41cf18:	b	41d3a0 <method_inhibit+0x648>
  41cf1c:	ldr	w8, [sp, #100]
  41cf20:	cmp	w8, #0x1
  41cf24:	b.ne	41cf58 <method_inhibit+0x200>  // b.any
  41cf28:	ldr	w8, [sp, #96]
  41cf2c:	and	w8, w8, #0xfffffffc
  41cf30:	cbz	w8, 41cf58 <method_inhibit+0x200>
  41cf34:	ldur	x0, [x29, #-32]
  41cf38:	ldr	x1, [sp, #72]
  41cf3c:	adrp	x2, 446000 <_fini+0x5c30>
  41cf40:	add	x2, x2, #0x6e8
  41cf44:	bl	407468 <sd_bus_error_setf@plt>
  41cf48:	stur	w0, [x29, #-4]
  41cf4c:	mov	w8, #0x1                   	// #1
  41cf50:	str	w8, [sp, #80]
  41cf54:	b	41d3a0 <method_inhibit+0x648>
  41cf58:	ldur	x8, [x29, #-96]
  41cf5c:	ldr	w9, [x8, #248]
  41cf60:	ldr	w10, [sp, #96]
  41cf64:	and	w9, w9, w10
  41cf68:	cbz	w9, 41cf94 <method_inhibit+0x23c>
  41cf6c:	ldur	x0, [x29, #-32]
  41cf70:	adrp	x1, 445000 <_fini+0x4c30>
  41cf74:	add	x1, x1, #0xe2f
  41cf78:	adrp	x2, 446000 <_fini+0x5c30>
  41cf7c:	add	x2, x2, #0x71f
  41cf80:	bl	407468 <sd_bus_error_setf@plt>
  41cf84:	stur	w0, [x29, #-4]
  41cf88:	mov	w8, #0x1                   	// #1
  41cf8c:	str	w8, [sp, #80]
  41cf90:	b	41d3a0 <method_inhibit+0x648>
  41cf94:	ldur	x0, [x29, #-16]
  41cf98:	ldr	w8, [sp, #96]
  41cf9c:	cmp	w8, #0x1
  41cfa0:	str	x0, [sp, #56]
  41cfa4:	b.ne	41cfcc <method_inhibit+0x274>  // b.any
  41cfa8:	ldr	w8, [sp, #100]
  41cfac:	adrp	x9, 446000 <_fini+0x5c30>
  41cfb0:	add	x9, x9, #0x790
  41cfb4:	adrp	x10, 446000 <_fini+0x5c30>
  41cfb8:	add	x10, x10, #0x762
  41cfbc:	cmp	w8, #0x0
  41cfc0:	csel	x9, x10, x9, eq  // eq = none
  41cfc4:	str	x9, [sp, #48]
  41cfc8:	b	41d090 <method_inhibit+0x338>
  41cfcc:	ldr	w8, [sp, #96]
  41cfd0:	cmp	w8, #0x2
  41cfd4:	b.ne	41cffc <method_inhibit+0x2a4>  // b.any
  41cfd8:	ldr	w8, [sp, #100]
  41cfdc:	adrp	x9, 446000 <_fini+0x5c30>
  41cfe0:	add	x9, x9, #0x7e9
  41cfe4:	adrp	x10, 446000 <_fini+0x5c30>
  41cfe8:	add	x10, x10, #0x7be
  41cfec:	cmp	w8, #0x0
  41cff0:	csel	x9, x10, x9, eq  // eq = none
  41cff4:	str	x9, [sp, #40]
  41cff8:	b	41d088 <method_inhibit+0x330>
  41cffc:	ldr	w8, [sp, #96]
  41d000:	cmp	w8, #0x4
  41d004:	b.ne	41d018 <method_inhibit+0x2c0>  // b.any
  41d008:	adrp	x8, 446000 <_fini+0x5c30>
  41d00c:	add	x8, x8, #0x814
  41d010:	str	x8, [sp, #32]
  41d014:	b	41d080 <method_inhibit+0x328>
  41d018:	ldr	w8, [sp, #96]
  41d01c:	cmp	w8, #0x8
  41d020:	b.ne	41d034 <method_inhibit+0x2dc>  // b.any
  41d024:	adrp	x8, 446000 <_fini+0x5c30>
  41d028:	add	x8, x8, #0x83e
  41d02c:	str	x8, [sp, #24]
  41d030:	b	41d078 <method_inhibit+0x320>
  41d034:	ldr	w8, [sp, #96]
  41d038:	cmp	w8, #0x10
  41d03c:	b.ne	41d050 <method_inhibit+0x2f8>  // b.any
  41d040:	adrp	x8, 446000 <_fini+0x5c30>
  41d044:	add	x8, x8, #0x86e
  41d048:	str	x8, [sp, #16]
  41d04c:	b	41d070 <method_inhibit+0x318>
  41d050:	ldr	w8, [sp, #96]
  41d054:	adrp	x9, 446000 <_fini+0x5c30>
  41d058:	add	x9, x9, #0x8d4
  41d05c:	adrp	x10, 446000 <_fini+0x5c30>
  41d060:	add	x10, x10, #0x8a0
  41d064:	cmp	w8, #0x20
  41d068:	csel	x9, x10, x9, eq  // eq = none
  41d06c:	str	x9, [sp, #16]
  41d070:	ldr	x8, [sp, #16]
  41d074:	str	x8, [sp, #24]
  41d078:	ldr	x8, [sp, #24]
  41d07c:	str	x8, [sp, #32]
  41d080:	ldr	x8, [sp, #32]
  41d084:	str	x8, [sp, #40]
  41d088:	ldr	x8, [sp, #40]
  41d08c:	str	x8, [sp, #48]
  41d090:	ldr	x8, [sp, #48]
  41d094:	ldur	x9, [x29, #-96]
  41d098:	add	x6, x9, #0x1b0
  41d09c:	ldur	x7, [x29, #-32]
  41d0a0:	ldr	x0, [sp, #56]
  41d0a4:	mov	w1, #0x16                  	// #22
  41d0a8:	mov	x2, x8
  41d0ac:	mov	x8, xzr
  41d0b0:	mov	x3, x8
  41d0b4:	mov	w10, wzr
  41d0b8:	and	w4, w10, #0x1
  41d0bc:	mov	w5, #0xffffffff            	// #-1
  41d0c0:	bl	407678 <bus_verify_polkit_async@plt>
  41d0c4:	str	w0, [sp, #84]
  41d0c8:	ldr	w10, [sp, #84]
  41d0cc:	cmp	w10, #0x0
  41d0d0:	cset	w10, ge  // ge = tcont
  41d0d4:	tbnz	w10, #0, 41d0ec <method_inhibit+0x394>
  41d0d8:	ldr	w8, [sp, #84]
  41d0dc:	stur	w8, [x29, #-4]
  41d0e0:	mov	w8, #0x1                   	// #1
  41d0e4:	str	w8, [sp, #80]
  41d0e8:	b	41d3a0 <method_inhibit+0x648>
  41d0ec:	ldr	w8, [sp, #84]
  41d0f0:	cbnz	w8, 41d104 <method_inhibit+0x3ac>
  41d0f4:	mov	w8, #0x1                   	// #1
  41d0f8:	stur	w8, [x29, #-4]
  41d0fc:	str	w8, [sp, #80]
  41d100:	b	41d3a0 <method_inhibit+0x648>
  41d104:	ldur	x0, [x29, #-16]
  41d108:	mov	x1, #0x11                  	// #17
  41d10c:	sub	x2, x29, #0x28
  41d110:	bl	407478 <sd_bus_query_sender_creds@plt>
  41d114:	str	w0, [sp, #84]
  41d118:	ldr	w8, [sp, #84]
  41d11c:	cmp	w8, #0x0
  41d120:	cset	w8, ge  // ge = tcont
  41d124:	tbnz	w8, #0, 41d13c <method_inhibit+0x3e4>
  41d128:	ldr	w8, [sp, #84]
  41d12c:	stur	w8, [x29, #-4]
  41d130:	mov	w8, #0x1                   	// #1
  41d134:	str	w8, [sp, #80]
  41d138:	b	41d3a0 <method_inhibit+0x648>
  41d13c:	ldur	x0, [x29, #-40]
  41d140:	add	x1, sp, #0x58
  41d144:	bl	407698 <sd_bus_creds_get_euid@plt>
  41d148:	str	w0, [sp, #84]
  41d14c:	ldr	w8, [sp, #84]
  41d150:	cmp	w8, #0x0
  41d154:	cset	w8, ge  // ge = tcont
  41d158:	tbnz	w8, #0, 41d170 <method_inhibit+0x418>
  41d15c:	ldr	w8, [sp, #84]
  41d160:	stur	w8, [x29, #-4]
  41d164:	mov	w8, #0x1                   	// #1
  41d168:	str	w8, [sp, #80]
  41d16c:	b	41d3a0 <method_inhibit+0x648>
  41d170:	ldur	x0, [x29, #-40]
  41d174:	add	x1, sp, #0x5c
  41d178:	bl	407628 <sd_bus_creds_get_pid@plt>
  41d17c:	str	w0, [sp, #84]
  41d180:	ldr	w8, [sp, #84]
  41d184:	cmp	w8, #0x0
  41d188:	cset	w8, ge  // ge = tcont
  41d18c:	tbnz	w8, #0, 41d1a4 <method_inhibit+0x44c>
  41d190:	ldr	w8, [sp, #84]
  41d194:	stur	w8, [x29, #-4]
  41d198:	mov	w8, #0x1                   	// #1
  41d19c:	str	w8, [sp, #80]
  41d1a0:	b	41d3a0 <method_inhibit+0x648>
  41d1a4:	ldur	x8, [x29, #-96]
  41d1a8:	ldr	x0, [x8, #56]
  41d1ac:	bl	421dd4 <hashmap_size>
  41d1b0:	mov	w8, w0
  41d1b4:	ubfx	x8, x8, #0, #32
  41d1b8:	ldur	x9, [x29, #-96]
  41d1bc:	ldr	x9, [x9, #472]
  41d1c0:	cmp	x8, x9
  41d1c4:	b.cc	41d1f8 <method_inhibit+0x4a0>  // b.lo, b.ul, b.last
  41d1c8:	ldur	x0, [x29, #-32]
  41d1cc:	ldur	x8, [x29, #-96]
  41d1d0:	ldr	x3, [x8, #472]
  41d1d4:	adrp	x1, 445000 <_fini+0x4c30>
  41d1d8:	add	x1, x1, #0x5a1
  41d1dc:	adrp	x2, 446000 <_fini+0x5c30>
  41d1e0:	add	x2, x2, #0x905
  41d1e4:	bl	407468 <sd_bus_error_setf@plt>
  41d1e8:	stur	w0, [x29, #-4]
  41d1ec:	mov	w9, #0x1                   	// #1
  41d1f0:	str	w9, [sp, #80]
  41d1f4:	b	41d3a0 <method_inhibit+0x648>
  41d1f8:	sub	x0, x29, #0x50
  41d1fc:	ldur	x8, [x29, #-80]
  41d200:	str	x0, [sp, #8]
  41d204:	mov	x0, x8
  41d208:	bl	41f5f4 <mfree>
  41d20c:	stur	x0, [x29, #-80]
  41d210:	ldur	x8, [x29, #-96]
  41d214:	ldr	x9, [x8, #208]
  41d218:	add	x9, x9, #0x1
  41d21c:	str	x9, [x8, #208]
  41d220:	ldr	x0, [sp, #8]
  41d224:	adrp	x1, 446000 <_fini+0x5c30>
  41d228:	add	x1, x1, #0x94e
  41d22c:	mov	x2, x9
  41d230:	bl	406ff8 <asprintf@plt>
  41d234:	cmp	w0, #0x0
  41d238:	cset	w10, ge  // ge = tcont
  41d23c:	tbnz	w10, #0, 41d254 <method_inhibit+0x4fc>
  41d240:	mov	w8, #0xfffffff4            	// #-12
  41d244:	stur	w8, [x29, #-4]
  41d248:	mov	w8, #0x1                   	// #1
  41d24c:	str	w8, [sp, #80]
  41d250:	b	41d3a0 <method_inhibit+0x648>
  41d254:	ldur	x8, [x29, #-96]
  41d258:	ldr	x0, [x8, #56]
  41d25c:	ldur	x1, [x29, #-80]
  41d260:	bl	4148a0 <hashmap_get>
  41d264:	cbnz	x0, 41d1f8 <method_inhibit+0x4a0>
  41d268:	ldur	x0, [x29, #-96]
  41d26c:	ldur	x1, [x29, #-80]
  41d270:	add	x2, sp, #0x68
  41d274:	bl	411ce4 <manager_add_inhibitor>
  41d278:	str	w0, [sp, #84]
  41d27c:	ldr	w8, [sp, #84]
  41d280:	cmp	w8, #0x0
  41d284:	cset	w8, ge  // ge = tcont
  41d288:	tbnz	w8, #0, 41d2a0 <method_inhibit+0x548>
  41d28c:	ldr	w8, [sp, #84]
  41d290:	stur	w8, [x29, #-4]
  41d294:	mov	w8, #0x1                   	// #1
  41d298:	str	w8, [sp, #80]
  41d29c:	b	41d3a0 <method_inhibit+0x648>
  41d2a0:	ldr	w8, [sp, #96]
  41d2a4:	ldr	x9, [sp, #104]
  41d2a8:	str	w8, [x9, #36]
  41d2ac:	ldr	w8, [sp, #100]
  41d2b0:	ldr	x9, [sp, #104]
  41d2b4:	str	w8, [x9, #56]
  41d2b8:	ldr	w8, [sp, #92]
  41d2bc:	ldr	x9, [sp, #104]
  41d2c0:	str	w8, [x9, #60]
  41d2c4:	ldr	w8, [sp, #88]
  41d2c8:	ldr	x9, [sp, #104]
  41d2cc:	str	w8, [x9, #64]
  41d2d0:	ldur	x0, [x29, #-56]
  41d2d4:	bl	407168 <strdup@plt>
  41d2d8:	ldr	x9, [sp, #104]
  41d2dc:	str	x0, [x9, #48]
  41d2e0:	ldur	x0, [x29, #-48]
  41d2e4:	bl	407168 <strdup@plt>
  41d2e8:	ldr	x9, [sp, #104]
  41d2ec:	str	x0, [x9, #40]
  41d2f0:	ldr	x9, [sp, #104]
  41d2f4:	ldr	x9, [x9, #48]
  41d2f8:	cbz	x9, 41d308 <method_inhibit+0x5b0>
  41d2fc:	ldr	x8, [sp, #104]
  41d300:	ldr	x8, [x8, #40]
  41d304:	cbnz	x8, 41d314 <method_inhibit+0x5bc>
  41d308:	mov	w8, #0xfffffff4            	// #-12
  41d30c:	str	w8, [sp, #84]
  41d310:	b	41d380 <method_inhibit+0x628>
  41d314:	ldr	x0, [sp, #104]
  41d318:	bl	42627c <inhibitor_create_fifo>
  41d31c:	stur	w0, [x29, #-84]
  41d320:	ldur	w8, [x29, #-84]
  41d324:	cmp	w8, #0x0
  41d328:	cset	w8, ge  // ge = tcont
  41d32c:	tbnz	w8, #0, 41d33c <method_inhibit+0x5e4>
  41d330:	ldur	w8, [x29, #-84]
  41d334:	str	w8, [sp, #84]
  41d338:	b	41d380 <method_inhibit+0x628>
  41d33c:	ldr	x0, [sp, #104]
  41d340:	bl	425094 <inhibitor_start>
  41d344:	str	w0, [sp, #84]
  41d348:	ldr	w8, [sp, #84]
  41d34c:	cmp	w8, #0x0
  41d350:	cset	w8, ge  // ge = tcont
  41d354:	tbnz	w8, #0, 41d35c <method_inhibit+0x604>
  41d358:	b	41d380 <method_inhibit+0x628>
  41d35c:	ldur	x0, [x29, #-16]
  41d360:	ldur	w2, [x29, #-84]
  41d364:	adrp	x1, 443000 <_fini+0x2c30>
  41d368:	add	x1, x1, #0x6d1
  41d36c:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41d370:	stur	w0, [x29, #-4]
  41d374:	mov	w8, #0x1                   	// #1
  41d378:	str	w8, [sp, #80]
  41d37c:	b	41d3a0 <method_inhibit+0x648>
  41d380:	ldr	x8, [sp, #104]
  41d384:	cbz	x8, 41d390 <method_inhibit+0x638>
  41d388:	ldr	x0, [sp, #104]
  41d38c:	bl	424f8c <inhibitor_free>
  41d390:	ldr	w8, [sp, #84]
  41d394:	stur	w8, [x29, #-4]
  41d398:	mov	w8, #0x1                   	// #1
  41d39c:	str	w8, [sp, #80]
  41d3a0:	sub	x0, x29, #0x54
  41d3a4:	bl	424144 <closep>
  41d3a8:	sub	x0, x29, #0x50
  41d3ac:	bl	4152e4 <freep>
  41d3b0:	sub	x0, x29, #0x28
  41d3b4:	bl	421604 <sd_bus_creds_unrefp>
  41d3b8:	ldur	w0, [x29, #-4]
  41d3bc:	ldp	x29, x30, [sp, #208]
  41d3c0:	add	sp, sp, #0xe0
  41d3c4:	ret

000000000041d3c8 <method_can_reboot_parameter>:
  41d3c8:	sub	sp, sp, #0x50
  41d3cc:	stp	x29, x30, [sp, #64]
  41d3d0:	add	x29, sp, #0x40
  41d3d4:	adrp	x8, 442000 <_fini+0x1c30>
  41d3d8:	add	x8, x8, #0xd8e
  41d3dc:	add	x8, x8, #0x3
  41d3e0:	stur	x0, [x29, #-16]
  41d3e4:	stur	x1, [x29, #-24]
  41d3e8:	str	x2, [sp, #32]
  41d3ec:	ldur	x9, [x29, #-24]
  41d3f0:	str	x9, [sp, #24]
  41d3f4:	str	x8, [sp, #8]
  41d3f8:	ldur	x8, [x29, #-16]
  41d3fc:	cmp	x8, #0x0
  41d400:	cset	w9, ne  // ne = any
  41d404:	mov	w10, #0x1                   	// #1
  41d408:	eor	w9, w9, #0x1
  41d40c:	eor	w9, w9, w10
  41d410:	eor	w9, w9, w10
  41d414:	and	w9, w9, #0x1
  41d418:	mov	w0, w9
  41d41c:	sxtw	x8, w0
  41d420:	cbz	x8, 41d448 <method_can_reboot_parameter+0x80>
  41d424:	mov	w8, wzr
  41d428:	mov	w0, w8
  41d42c:	adrp	x1, 443000 <_fini+0x2c30>
  41d430:	add	x1, x1, #0x812
  41d434:	ldr	x2, [sp, #8]
  41d438:	mov	w3, #0x9fc                 	// #2556
  41d43c:	adrp	x4, 446000 <_fini+0x5c30>
  41d440:	add	x4, x4, #0x952
  41d444:	bl	406c68 <log_assert_failed_realm@plt>
  41d448:	ldr	x8, [sp, #24]
  41d44c:	cmp	x8, #0x0
  41d450:	cset	w9, ne  // ne = any
  41d454:	mov	w10, #0x1                   	// #1
  41d458:	eor	w9, w9, #0x1
  41d45c:	eor	w9, w9, w10
  41d460:	eor	w9, w9, w10
  41d464:	and	w9, w9, #0x1
  41d468:	mov	w0, w9
  41d46c:	sxtw	x8, w0
  41d470:	cbz	x8, 41d498 <method_can_reboot_parameter+0xd0>
  41d474:	mov	w8, wzr
  41d478:	mov	w0, w8
  41d47c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41d480:	add	x1, x1, #0x5ef
  41d484:	ldr	x2, [sp, #8]
  41d488:	mov	w3, #0x9fd                 	// #2557
  41d48c:	adrp	x4, 446000 <_fini+0x5c30>
  41d490:	add	x4, x4, #0x952
  41d494:	bl	406c68 <log_assert_failed_realm@plt>
  41d498:	bl	407738 <detect_container@plt>
  41d49c:	str	w0, [sp, #20]
  41d4a0:	ldr	w8, [sp, #20]
  41d4a4:	cmp	w8, #0x0
  41d4a8:	cset	w8, ge  // ge = tcont
  41d4ac:	tbnz	w8, #0, 41d4bc <method_can_reboot_parameter+0xf4>
  41d4b0:	ldr	w8, [sp, #20]
  41d4b4:	stur	w8, [x29, #-4]
  41d4b8:	b	41d514 <method_can_reboot_parameter+0x14c>
  41d4bc:	ldr	w8, [sp, #20]
  41d4c0:	cmp	w8, #0x0
  41d4c4:	cset	w8, le
  41d4c8:	tbnz	w8, #0, 41d4ec <method_can_reboot_parameter+0x124>
  41d4cc:	ldur	x0, [x29, #-16]
  41d4d0:	adrp	x1, 442000 <_fini+0x1c30>
  41d4d4:	add	x1, x1, #0xf2
  41d4d8:	adrp	x2, 446000 <_fini+0x5c30>
  41d4dc:	add	x2, x2, #0x272
  41d4e0:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41d4e4:	stur	w0, [x29, #-4]
  41d4e8:	b	41d514 <method_can_reboot_parameter+0x14c>
  41d4ec:	ldur	x0, [x29, #-16]
  41d4f0:	ldr	x5, [sp, #32]
  41d4f4:	mov	w1, #0x15                  	// #21
  41d4f8:	adrp	x2, 446000 <_fini+0x5c30>
  41d4fc:	add	x2, x2, #0x99c
  41d500:	mov	x8, xzr
  41d504:	mov	x3, x8
  41d508:	mov	w4, #0xffffffff            	// #-1
  41d50c:	bl	42416c <return_test_polkit>
  41d510:	stur	w0, [x29, #-4]
  41d514:	ldur	w0, [x29, #-4]
  41d518:	ldp	x29, x30, [sp, #64]
  41d51c:	add	sp, sp, #0x50
  41d520:	ret

000000000041d524 <method_set_reboot_parameter>:
  41d524:	sub	sp, sp, #0x50
  41d528:	stp	x29, x30, [sp, #64]
  41d52c:	add	x29, sp, #0x40
  41d530:	adrp	x8, 442000 <_fini+0x1c30>
  41d534:	add	x8, x8, #0xd8e
  41d538:	add	x8, x8, #0x3
  41d53c:	stur	x0, [x29, #-16]
  41d540:	stur	x1, [x29, #-24]
  41d544:	str	x2, [sp, #32]
  41d548:	ldur	x9, [x29, #-24]
  41d54c:	str	x9, [sp, #24]
  41d550:	str	x8, [sp]
  41d554:	ldur	x8, [x29, #-16]
  41d558:	cmp	x8, #0x0
  41d55c:	cset	w9, ne  // ne = any
  41d560:	mov	w10, #0x1                   	// #1
  41d564:	eor	w9, w9, #0x1
  41d568:	eor	w9, w9, w10
  41d56c:	eor	w9, w9, w10
  41d570:	and	w9, w9, #0x1
  41d574:	mov	w0, w9
  41d578:	sxtw	x8, w0
  41d57c:	cbz	x8, 41d5a4 <method_set_reboot_parameter+0x80>
  41d580:	mov	w8, wzr
  41d584:	mov	w0, w8
  41d588:	adrp	x1, 443000 <_fini+0x2c30>
  41d58c:	add	x1, x1, #0x812
  41d590:	ldr	x2, [sp]
  41d594:	mov	w3, #0x9d2                 	// #2514
  41d598:	adrp	x4, 446000 <_fini+0x5c30>
  41d59c:	add	x4, x4, #0x9c8
  41d5a0:	bl	406c68 <log_assert_failed_realm@plt>
  41d5a4:	ldr	x8, [sp, #24]
  41d5a8:	cmp	x8, #0x0
  41d5ac:	cset	w9, ne  // ne = any
  41d5b0:	mov	w10, #0x1                   	// #1
  41d5b4:	eor	w9, w9, #0x1
  41d5b8:	eor	w9, w9, w10
  41d5bc:	eor	w9, w9, w10
  41d5c0:	and	w9, w9, #0x1
  41d5c4:	mov	w0, w9
  41d5c8:	sxtw	x8, w0
  41d5cc:	cbz	x8, 41d5f4 <method_set_reboot_parameter+0xd0>
  41d5d0:	mov	w8, wzr
  41d5d4:	mov	w0, w8
  41d5d8:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41d5dc:	add	x1, x1, #0x5ef
  41d5e0:	ldr	x2, [sp]
  41d5e4:	mov	w3, #0x9d3                 	// #2515
  41d5e8:	adrp	x4, 446000 <_fini+0x5c30>
  41d5ec:	add	x4, x4, #0x9c8
  41d5f0:	bl	406c68 <log_assert_failed_realm@plt>
  41d5f4:	ldur	x0, [x29, #-16]
  41d5f8:	adrp	x1, 442000 <_fini+0x1c30>
  41d5fc:	add	x1, x1, #0xf2
  41d600:	add	x2, sp, #0x10
  41d604:	bl	4074c8 <sd_bus_message_read@plt>
  41d608:	str	w0, [sp, #12]
  41d60c:	ldr	w8, [sp, #12]
  41d610:	cmp	w8, #0x0
  41d614:	cset	w8, ge  // ge = tcont
  41d618:	tbnz	w8, #0, 41d628 <method_set_reboot_parameter+0x104>
  41d61c:	ldr	w8, [sp, #12]
  41d620:	stur	w8, [x29, #-4]
  41d624:	b	41d728 <method_set_reboot_parameter+0x204>
  41d628:	bl	407738 <detect_container@plt>
  41d62c:	str	w0, [sp, #12]
  41d630:	ldr	w8, [sp, #12]
  41d634:	cmp	w8, #0x0
  41d638:	cset	w8, ge  // ge = tcont
  41d63c:	tbnz	w8, #0, 41d64c <method_set_reboot_parameter+0x128>
  41d640:	ldr	w8, [sp, #12]
  41d644:	stur	w8, [x29, #-4]
  41d648:	b	41d728 <method_set_reboot_parameter+0x204>
  41d64c:	ldr	w8, [sp, #12]
  41d650:	cmp	w8, #0x0
  41d654:	cset	w8, le
  41d658:	tbnz	w8, #0, 41d67c <method_set_reboot_parameter+0x158>
  41d65c:	ldr	x0, [sp, #32]
  41d660:	adrp	x1, 446000 <_fini+0x5c30>
  41d664:	add	x1, x1, #0xa12
  41d668:	adrp	x2, 446000 <_fini+0x5c30>
  41d66c:	add	x2, x2, #0xa3a
  41d670:	bl	407468 <sd_bus_error_setf@plt>
  41d674:	stur	w0, [x29, #-4]
  41d678:	b	41d728 <method_set_reboot_parameter+0x204>
  41d67c:	ldur	x0, [x29, #-16]
  41d680:	ldr	x8, [sp, #24]
  41d684:	add	x6, x8, #0x1b0
  41d688:	ldr	x7, [sp, #32]
  41d68c:	mov	w1, #0x15                  	// #21
  41d690:	adrp	x2, 446000 <_fini+0x5c30>
  41d694:	add	x2, x2, #0x99c
  41d698:	mov	x8, xzr
  41d69c:	mov	x3, x8
  41d6a0:	mov	w9, wzr
  41d6a4:	and	w4, w9, #0x1
  41d6a8:	mov	w5, #0xffffffff            	// #-1
  41d6ac:	bl	407678 <bus_verify_polkit_async@plt>
  41d6b0:	str	w0, [sp, #12]
  41d6b4:	ldr	w9, [sp, #12]
  41d6b8:	cmp	w9, #0x0
  41d6bc:	cset	w9, ge  // ge = tcont
  41d6c0:	tbnz	w9, #0, 41d6d0 <method_set_reboot_parameter+0x1ac>
  41d6c4:	ldr	w8, [sp, #12]
  41d6c8:	stur	w8, [x29, #-4]
  41d6cc:	b	41d728 <method_set_reboot_parameter+0x204>
  41d6d0:	ldr	w8, [sp, #12]
  41d6d4:	cbnz	w8, 41d6e4 <method_set_reboot_parameter+0x1c0>
  41d6d8:	mov	w8, #0x1                   	// #1
  41d6dc:	stur	w8, [x29, #-4]
  41d6e0:	b	41d728 <method_set_reboot_parameter+0x204>
  41d6e4:	ldr	x0, [sp, #16]
  41d6e8:	mov	w8, wzr
  41d6ec:	and	w1, w8, #0x1
  41d6f0:	bl	407748 <update_reboot_parameter_and_warn@plt>
  41d6f4:	str	w0, [sp, #12]
  41d6f8:	ldr	w8, [sp, #12]
  41d6fc:	cmp	w8, #0x0
  41d700:	cset	w8, ge  // ge = tcont
  41d704:	tbnz	w8, #0, 41d714 <method_set_reboot_parameter+0x1f0>
  41d708:	ldr	w8, [sp, #12]
  41d70c:	stur	w8, [x29, #-4]
  41d710:	b	41d728 <method_set_reboot_parameter+0x204>
  41d714:	ldur	x0, [x29, #-16]
  41d718:	mov	x8, xzr
  41d71c:	mov	x1, x8
  41d720:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41d724:	stur	w0, [x29, #-4]
  41d728:	ldur	w0, [x29, #-4]
  41d72c:	ldp	x29, x30, [sp, #64]
  41d730:	add	sp, sp, #0x50
  41d734:	ret

000000000041d738 <method_can_reboot_to_firmware_setup>:
  41d738:	sub	sp, sp, #0x70
  41d73c:	stp	x29, x30, [sp, #96]
  41d740:	add	x29, sp, #0x60
  41d744:	adrp	x8, 442000 <_fini+0x1c30>
  41d748:	add	x8, x8, #0xd8e
  41d74c:	add	x8, x8, #0x3
  41d750:	stur	x0, [x29, #-16]
  41d754:	stur	x1, [x29, #-24]
  41d758:	stur	x2, [x29, #-32]
  41d75c:	ldur	x9, [x29, #-24]
  41d760:	stur	x9, [x29, #-40]
  41d764:	str	x8, [sp, #8]
  41d768:	ldur	x8, [x29, #-16]
  41d76c:	cmp	x8, #0x0
  41d770:	cset	w9, ne  // ne = any
  41d774:	mov	w10, #0x1                   	// #1
  41d778:	eor	w9, w9, #0x1
  41d77c:	eor	w9, w9, w10
  41d780:	eor	w9, w9, w10
  41d784:	and	w9, w9, #0x1
  41d788:	mov	w0, w9
  41d78c:	sxtw	x8, w0
  41d790:	cbz	x8, 41d7b8 <method_can_reboot_to_firmware_setup+0x80>
  41d794:	mov	w8, wzr
  41d798:	mov	w0, w8
  41d79c:	adrp	x1, 443000 <_fini+0x2c30>
  41d7a0:	add	x1, x1, #0x812
  41d7a4:	ldr	x2, [sp, #8]
  41d7a8:	mov	w3, #0xa80                 	// #2688
  41d7ac:	adrp	x4, 446000 <_fini+0x5c30>
  41d7b0:	add	x4, x4, #0xa72
  41d7b4:	bl	406c68 <log_assert_failed_realm@plt>
  41d7b8:	ldur	x8, [x29, #-40]
  41d7bc:	cmp	x8, #0x0
  41d7c0:	cset	w9, ne  // ne = any
  41d7c4:	mov	w10, #0x1                   	// #1
  41d7c8:	eor	w9, w9, #0x1
  41d7cc:	eor	w9, w9, w10
  41d7d0:	eor	w9, w9, w10
  41d7d4:	and	w9, w9, #0x1
  41d7d8:	mov	w0, w9
  41d7dc:	sxtw	x8, w0
  41d7e0:	cbz	x8, 41d808 <method_can_reboot_to_firmware_setup+0xd0>
  41d7e4:	mov	w8, wzr
  41d7e8:	mov	w0, w8
  41d7ec:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41d7f0:	add	x1, x1, #0x5ef
  41d7f4:	ldr	x2, [sp, #8]
  41d7f8:	mov	w3, #0xa81                 	// #2689
  41d7fc:	adrp	x4, 446000 <_fini+0x5c30>
  41d800:	add	x4, x4, #0xa72
  41d804:	bl	406c68 <log_assert_failed_realm@plt>
  41d808:	adrp	x0, 444000 <_fini+0x3c30>
  41d80c:	add	x0, x0, #0x4ae
  41d810:	bl	407518 <getenv_bool@plt>
  41d814:	stur	w0, [x29, #-44]
  41d818:	ldur	w8, [x29, #-44]
  41d81c:	mov	w9, #0xfffffffa            	// #-6
  41d820:	cmp	w8, w9
  41d824:	b.ne	41d8f0 <method_can_reboot_to_firmware_setup+0x1b8>  // b.any
  41d828:	bl	407758 <efi_reboot_to_firmware_supported@plt>
  41d82c:	stur	w0, [x29, #-44]
  41d830:	ldur	w8, [x29, #-44]
  41d834:	cmp	w8, #0x0
  41d838:	cset	w8, ge  // ge = tcont
  41d83c:	tbnz	w8, #0, 41d8ec <method_can_reboot_to_firmware_setup+0x1b4>
  41d840:	ldur	w8, [x29, #-44]
  41d844:	mov	w9, #0xffffffa1            	// #-95
  41d848:	cmp	w8, w9
  41d84c:	b.eq	41d8cc <method_can_reboot_to_firmware_setup+0x194>  // b.none
  41d850:	mov	w8, #0x4                   	// #4
  41d854:	str	w8, [sp, #48]
  41d858:	ldur	w8, [x29, #-44]
  41d85c:	str	w8, [sp, #44]
  41d860:	str	wzr, [sp, #40]
  41d864:	ldr	w0, [sp, #40]
  41d868:	bl	406c08 <log_get_max_level_realm@plt>
  41d86c:	ldr	w8, [sp, #48]
  41d870:	and	w8, w8, #0x7
  41d874:	cmp	w0, w8
  41d878:	b.lt	41d8b0 <method_can_reboot_to_firmware_setup+0x178>  // b.tstop
  41d87c:	ldr	w8, [sp, #40]
  41d880:	ldr	w9, [sp, #48]
  41d884:	orr	w0, w9, w8, lsl #10
  41d888:	ldr	w1, [sp, #44]
  41d88c:	ldr	x2, [sp, #8]
  41d890:	mov	w3, #0xa8a                 	// #2698
  41d894:	adrp	x4, 446000 <_fini+0x5c30>
  41d898:	add	x4, x4, #0xac4
  41d89c:	adrp	x5, 446000 <_fini+0x5c30>
  41d8a0:	add	x5, x5, #0xae8
  41d8a4:	bl	406c18 <log_internal_realm@plt>
  41d8a8:	str	w0, [sp, #4]
  41d8ac:	b	41d8c4 <method_can_reboot_to_firmware_setup+0x18c>
  41d8b0:	ldr	w0, [sp, #44]
  41d8b4:	bl	406c28 <abs@plt>
  41d8b8:	mov	w8, wzr
  41d8bc:	subs	w8, w8, w0, uxtb
  41d8c0:	str	w8, [sp, #4]
  41d8c4:	ldr	w8, [sp, #4]
  41d8c8:	str	w8, [sp, #36]
  41d8cc:	ldur	x0, [x29, #-16]
  41d8d0:	adrp	x1, 442000 <_fini+0x1c30>
  41d8d4:	add	x1, x1, #0xf2
  41d8d8:	adrp	x2, 446000 <_fini+0x5c30>
  41d8dc:	add	x2, x2, #0x272
  41d8e0:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41d8e4:	stur	w0, [x29, #-4]
  41d8e8:	b	41d9d4 <method_can_reboot_to_firmware_setup+0x29c>
  41d8ec:	b	41d9ac <method_can_reboot_to_firmware_setup+0x274>
  41d8f0:	ldur	w8, [x29, #-44]
  41d8f4:	cmp	w8, #0x0
  41d8f8:	cset	w8, gt
  41d8fc:	tbnz	w8, #0, 41d9ac <method_can_reboot_to_firmware_setup+0x274>
  41d900:	ldur	w8, [x29, #-44]
  41d904:	cmp	w8, #0x0
  41d908:	cset	w8, ge  // ge = tcont
  41d90c:	tbnz	w8, #0, 41d98c <method_can_reboot_to_firmware_setup+0x254>
  41d910:	mov	w8, #0x4                   	// #4
  41d914:	str	w8, [sp, #32]
  41d918:	ldur	w8, [x29, #-44]
  41d91c:	str	w8, [sp, #28]
  41d920:	str	wzr, [sp, #24]
  41d924:	ldr	w0, [sp, #24]
  41d928:	bl	406c08 <log_get_max_level_realm@plt>
  41d92c:	ldr	w8, [sp, #32]
  41d930:	and	w8, w8, #0x7
  41d934:	cmp	w0, w8
  41d938:	b.lt	41d970 <method_can_reboot_to_firmware_setup+0x238>  // b.tstop
  41d93c:	ldr	w8, [sp, #24]
  41d940:	ldr	w9, [sp, #32]
  41d944:	orr	w0, w9, w8, lsl #10
  41d948:	ldr	w1, [sp, #28]
  41d94c:	ldr	x2, [sp, #8]
  41d950:	mov	w3, #0xa93                 	// #2707
  41d954:	adrp	x4, 446000 <_fini+0x5c30>
  41d958:	add	x4, x4, #0xac4
  41d95c:	adrp	x5, 444000 <_fini+0x3c30>
  41d960:	add	x5, x5, #0x52c
  41d964:	bl	406c18 <log_internal_realm@plt>
  41d968:	str	w0, [sp]
  41d96c:	b	41d984 <method_can_reboot_to_firmware_setup+0x24c>
  41d970:	ldr	w0, [sp, #28]
  41d974:	bl	406c28 <abs@plt>
  41d978:	mov	w8, wzr
  41d97c:	subs	w8, w8, w0, uxtb
  41d980:	str	w8, [sp]
  41d984:	ldr	w8, [sp]
  41d988:	str	w8, [sp, #20]
  41d98c:	ldur	x0, [x29, #-16]
  41d990:	adrp	x1, 442000 <_fini+0x1c30>
  41d994:	add	x1, x1, #0xf2
  41d998:	adrp	x2, 446000 <_fini+0x5c30>
  41d99c:	add	x2, x2, #0x272
  41d9a0:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41d9a4:	stur	w0, [x29, #-4]
  41d9a8:	b	41d9d4 <method_can_reboot_to_firmware_setup+0x29c>
  41d9ac:	ldur	x0, [x29, #-16]
  41d9b0:	ldur	x5, [x29, #-32]
  41d9b4:	mov	w1, #0x15                  	// #21
  41d9b8:	adrp	x2, 446000 <_fini+0x5c30>
  41d9bc:	add	x2, x2, #0xb28
  41d9c0:	mov	x8, xzr
  41d9c4:	mov	x3, x8
  41d9c8:	mov	w4, #0xffffffff            	// #-1
  41d9cc:	bl	42416c <return_test_polkit>
  41d9d0:	stur	w0, [x29, #-4]
  41d9d4:	ldur	w0, [x29, #-4]
  41d9d8:	ldp	x29, x30, [sp, #96]
  41d9dc:	add	sp, sp, #0x70
  41d9e0:	ret

000000000041d9e4 <method_set_reboot_to_firmware_setup>:
  41d9e4:	sub	sp, sp, #0x70
  41d9e8:	stp	x29, x30, [sp, #96]
  41d9ec:	add	x29, sp, #0x60
  41d9f0:	adrp	x8, 442000 <_fini+0x1c30>
  41d9f4:	add	x8, x8, #0xd8e
  41d9f8:	add	x8, x8, #0x3
  41d9fc:	stur	x0, [x29, #-16]
  41da00:	stur	x1, [x29, #-24]
  41da04:	stur	x2, [x29, #-32]
  41da08:	ldur	x9, [x29, #-24]
  41da0c:	stur	x9, [x29, #-40]
  41da10:	str	x8, [sp, #16]
  41da14:	ldur	x8, [x29, #-16]
  41da18:	cmp	x8, #0x0
  41da1c:	cset	w9, ne  // ne = any
  41da20:	mov	w10, #0x1                   	// #1
  41da24:	eor	w9, w9, #0x1
  41da28:	eor	w9, w9, w10
  41da2c:	eor	w9, w9, w10
  41da30:	and	w9, w9, #0x1
  41da34:	mov	w0, w9
  41da38:	sxtw	x8, w0
  41da3c:	cbz	x8, 41da64 <method_set_reboot_to_firmware_setup+0x80>
  41da40:	mov	w8, wzr
  41da44:	mov	w0, w8
  41da48:	adrp	x1, 443000 <_fini+0x2c30>
  41da4c:	add	x1, x1, #0x812
  41da50:	ldr	x2, [sp, #16]
  41da54:	mov	w3, #0xa3b                 	// #2619
  41da58:	adrp	x4, 446000 <_fini+0x5c30>
  41da5c:	add	x4, x4, #0xb5c
  41da60:	bl	406c68 <log_assert_failed_realm@plt>
  41da64:	ldur	x8, [x29, #-40]
  41da68:	cmp	x8, #0x0
  41da6c:	cset	w9, ne  // ne = any
  41da70:	mov	w10, #0x1                   	// #1
  41da74:	eor	w9, w9, #0x1
  41da78:	eor	w9, w9, w10
  41da7c:	eor	w9, w9, w10
  41da80:	and	w9, w9, #0x1
  41da84:	mov	w0, w9
  41da88:	sxtw	x8, w0
  41da8c:	cbz	x8, 41dab4 <method_set_reboot_to_firmware_setup+0xd0>
  41da90:	mov	w8, wzr
  41da94:	mov	w0, w8
  41da98:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41da9c:	add	x1, x1, #0x5ef
  41daa0:	ldr	x2, [sp, #16]
  41daa4:	mov	w3, #0xa3c                 	// #2620
  41daa8:	adrp	x4, 446000 <_fini+0x5c30>
  41daac:	add	x4, x4, #0xb5c
  41dab0:	bl	406c68 <log_assert_failed_realm@plt>
  41dab4:	ldur	x0, [x29, #-16]
  41dab8:	adrp	x1, 441000 <_fini+0xc30>
  41dabc:	add	x1, x1, #0xe0e
  41dac0:	add	x2, sp, #0x30
  41dac4:	bl	4074c8 <sd_bus_message_read@plt>
  41dac8:	str	w0, [sp, #44]
  41dacc:	ldr	w8, [sp, #44]
  41dad0:	cmp	w8, #0x0
  41dad4:	cset	w8, ge  // ge = tcont
  41dad8:	tbnz	w8, #0, 41dae8 <method_set_reboot_to_firmware_setup+0x104>
  41dadc:	ldr	w8, [sp, #44]
  41dae0:	stur	w8, [x29, #-4]
  41dae4:	b	41dd64 <method_set_reboot_to_firmware_setup+0x380>
  41dae8:	adrp	x0, 444000 <_fini+0x3c30>
  41daec:	add	x0, x0, #0x4ae
  41daf0:	bl	407518 <getenv_bool@plt>
  41daf4:	str	w0, [sp, #44]
  41daf8:	ldr	w8, [sp, #44]
  41dafc:	mov	w9, #0xfffffffa            	// #-6
  41db00:	cmp	w8, w9
  41db04:	b.ne	41db68 <method_set_reboot_to_firmware_setup+0x184>  // b.any
  41db08:	bl	407758 <efi_reboot_to_firmware_supported@plt>
  41db0c:	str	w0, [sp, #44]
  41db10:	ldr	w8, [sp, #44]
  41db14:	mov	w9, #0xffffffa1            	// #-95
  41db18:	cmp	w8, w9
  41db1c:	b.ne	41db40 <method_set_reboot_to_firmware_setup+0x15c>  // b.any
  41db20:	ldur	x0, [x29, #-32]
  41db24:	adrp	x1, 446000 <_fini+0x5c30>
  41db28:	add	x1, x1, #0xa12
  41db2c:	adrp	x2, 446000 <_fini+0x5c30>
  41db30:	add	x2, x2, #0xbae
  41db34:	bl	407468 <sd_bus_error_setf@plt>
  41db38:	stur	w0, [x29, #-4]
  41db3c:	b	41dd64 <method_set_reboot_to_firmware_setup+0x380>
  41db40:	ldr	w8, [sp, #44]
  41db44:	cmp	w8, #0x0
  41db48:	cset	w8, ge  // ge = tcont
  41db4c:	tbnz	w8, #0, 41db5c <method_set_reboot_to_firmware_setup+0x178>
  41db50:	ldr	w8, [sp, #44]
  41db54:	stur	w8, [x29, #-4]
  41db58:	b	41dd64 <method_set_reboot_to_firmware_setup+0x380>
  41db5c:	mov	w8, #0x1                   	// #1
  41db60:	sturb	w8, [x29, #-41]
  41db64:	b	41dc2c <method_set_reboot_to_firmware_setup+0x248>
  41db68:	ldr	w8, [sp, #44]
  41db6c:	cmp	w8, #0x0
  41db70:	cset	w8, gt
  41db74:	tbnz	w8, #0, 41dc24 <method_set_reboot_to_firmware_setup+0x240>
  41db78:	ldr	w8, [sp, #44]
  41db7c:	cmp	w8, #0x0
  41db80:	cset	w8, ge  // ge = tcont
  41db84:	tbnz	w8, #0, 41dc04 <method_set_reboot_to_firmware_setup+0x220>
  41db88:	mov	w8, #0x4                   	// #4
  41db8c:	str	w8, [sp, #40]
  41db90:	ldr	w8, [sp, #44]
  41db94:	str	w8, [sp, #36]
  41db98:	str	wzr, [sp, #32]
  41db9c:	ldr	w0, [sp, #32]
  41dba0:	bl	406c08 <log_get_max_level_realm@plt>
  41dba4:	ldr	w8, [sp, #40]
  41dba8:	and	w8, w8, #0x7
  41dbac:	cmp	w0, w8
  41dbb0:	b.lt	41dbe8 <method_set_reboot_to_firmware_setup+0x204>  // b.tstop
  41dbb4:	ldr	w8, [sp, #32]
  41dbb8:	ldr	w9, [sp, #40]
  41dbbc:	orr	w0, w9, w8, lsl #10
  41dbc0:	ldr	w1, [sp, #36]
  41dbc4:	ldr	x2, [sp, #16]
  41dbc8:	mov	w3, #0xa52                 	// #2642
  41dbcc:	adrp	x4, 446000 <_fini+0x5c30>
  41dbd0:	add	x4, x4, #0xbdc
  41dbd4:	adrp	x5, 444000 <_fini+0x3c30>
  41dbd8:	add	x5, x5, #0x52c
  41dbdc:	bl	406c18 <log_internal_realm@plt>
  41dbe0:	str	w0, [sp, #12]
  41dbe4:	b	41dbfc <method_set_reboot_to_firmware_setup+0x218>
  41dbe8:	ldr	w0, [sp, #36]
  41dbec:	bl	406c28 <abs@plt>
  41dbf0:	mov	w8, wzr
  41dbf4:	subs	w8, w8, w0, uxtb
  41dbf8:	str	w8, [sp, #12]
  41dbfc:	ldr	w8, [sp, #12]
  41dc00:	str	w8, [sp, #28]
  41dc04:	ldur	x0, [x29, #-32]
  41dc08:	adrp	x1, 446000 <_fini+0x5c30>
  41dc0c:	add	x1, x1, #0xa12
  41dc10:	adrp	x2, 446000 <_fini+0x5c30>
  41dc14:	add	x2, x2, #0xbae
  41dc18:	bl	407468 <sd_bus_error_setf@plt>
  41dc1c:	stur	w0, [x29, #-4]
  41dc20:	b	41dd64 <method_set_reboot_to_firmware_setup+0x380>
  41dc24:	mov	w8, #0x0                   	// #0
  41dc28:	sturb	w8, [x29, #-41]
  41dc2c:	ldur	x0, [x29, #-16]
  41dc30:	ldur	x8, [x29, #-40]
  41dc34:	add	x6, x8, #0x1b0
  41dc38:	ldur	x7, [x29, #-32]
  41dc3c:	mov	w1, #0x15                  	// #21
  41dc40:	adrp	x2, 446000 <_fini+0x5c30>
  41dc44:	add	x2, x2, #0xb28
  41dc48:	mov	x8, xzr
  41dc4c:	mov	x3, x8
  41dc50:	mov	w9, wzr
  41dc54:	and	w4, w9, #0x1
  41dc58:	mov	w5, #0xffffffff            	// #-1
  41dc5c:	bl	407678 <bus_verify_polkit_async@plt>
  41dc60:	str	w0, [sp, #44]
  41dc64:	ldr	w9, [sp, #44]
  41dc68:	cmp	w9, #0x0
  41dc6c:	cset	w9, ge  // ge = tcont
  41dc70:	tbnz	w9, #0, 41dc80 <method_set_reboot_to_firmware_setup+0x29c>
  41dc74:	ldr	w8, [sp, #44]
  41dc78:	stur	w8, [x29, #-4]
  41dc7c:	b	41dd64 <method_set_reboot_to_firmware_setup+0x380>
  41dc80:	ldr	w8, [sp, #44]
  41dc84:	cbnz	w8, 41dc94 <method_set_reboot_to_firmware_setup+0x2b0>
  41dc88:	mov	w8, #0x1                   	// #1
  41dc8c:	stur	w8, [x29, #-4]
  41dc90:	b	41dd64 <method_set_reboot_to_firmware_setup+0x380>
  41dc94:	ldurb	w8, [x29, #-41]
  41dc98:	tbnz	w8, #0, 41dca0 <method_set_reboot_to_firmware_setup+0x2bc>
  41dc9c:	b	41dcd8 <method_set_reboot_to_firmware_setup+0x2f4>
  41dca0:	ldr	w8, [sp, #48]
  41dca4:	cmp	w8, #0x0
  41dca8:	cset	w8, ne  // ne = any
  41dcac:	and	w0, w8, #0x1
  41dcb0:	bl	407768 <efi_set_reboot_to_firmware@plt>
  41dcb4:	str	w0, [sp, #44]
  41dcb8:	ldr	w8, [sp, #44]
  41dcbc:	cmp	w8, #0x0
  41dcc0:	cset	w8, ge  // ge = tcont
  41dcc4:	tbnz	w8, #0, 41dcd4 <method_set_reboot_to_firmware_setup+0x2f0>
  41dcc8:	ldr	w8, [sp, #44]
  41dccc:	stur	w8, [x29, #-4]
  41dcd0:	b	41dd64 <method_set_reboot_to_firmware_setup+0x380>
  41dcd4:	b	41dd50 <method_set_reboot_to_firmware_setup+0x36c>
  41dcd8:	ldr	w8, [sp, #48]
  41dcdc:	cbz	w8, 41dd10 <method_set_reboot_to_firmware_setup+0x32c>
  41dce0:	adrp	x0, 444000 <_fini+0x3c30>
  41dce4:	add	x0, x0, #0x562
  41dce8:	bl	4076d8 <touch@plt>
  41dcec:	str	w0, [sp, #44]
  41dcf0:	ldr	w8, [sp, #44]
  41dcf4:	cmp	w8, #0x0
  41dcf8:	cset	w8, ge  // ge = tcont
  41dcfc:	tbnz	w8, #0, 41dd0c <method_set_reboot_to_firmware_setup+0x328>
  41dd00:	ldr	w8, [sp, #44]
  41dd04:	stur	w8, [x29, #-4]
  41dd08:	b	41dd64 <method_set_reboot_to_firmware_setup+0x380>
  41dd0c:	b	41dd50 <method_set_reboot_to_firmware_setup+0x36c>
  41dd10:	adrp	x0, 444000 <_fini+0x3c30>
  41dd14:	add	x0, x0, #0x562
  41dd18:	bl	4076e8 <unlink@plt>
  41dd1c:	cmp	w0, #0x0
  41dd20:	cset	w8, ge  // ge = tcont
  41dd24:	tbnz	w8, #0, 41dd50 <method_set_reboot_to_firmware_setup+0x36c>
  41dd28:	bl	406e08 <__errno_location@plt>
  41dd2c:	ldr	w8, [x0]
  41dd30:	cmp	w8, #0x2
  41dd34:	b.eq	41dd50 <method_set_reboot_to_firmware_setup+0x36c>  // b.none
  41dd38:	bl	406e08 <__errno_location@plt>
  41dd3c:	ldr	w8, [x0]
  41dd40:	mov	w9, wzr
  41dd44:	subs	w8, w9, w8
  41dd48:	stur	w8, [x29, #-4]
  41dd4c:	b	41dd64 <method_set_reboot_to_firmware_setup+0x380>
  41dd50:	ldur	x0, [x29, #-16]
  41dd54:	mov	x8, xzr
  41dd58:	mov	x1, x8
  41dd5c:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41dd60:	stur	w0, [x29, #-4]
  41dd64:	ldur	w0, [x29, #-4]
  41dd68:	ldp	x29, x30, [sp, #96]
  41dd6c:	add	sp, sp, #0x70
  41dd70:	ret

000000000041dd74 <method_can_reboot_to_boot_loader_menu>:
  41dd74:	sub	sp, sp, #0x80
  41dd78:	stp	x29, x30, [sp, #112]
  41dd7c:	add	x29, sp, #0x70
  41dd80:	adrp	x8, 442000 <_fini+0x1c30>
  41dd84:	add	x8, x8, #0xd8e
  41dd88:	add	x8, x8, #0x3
  41dd8c:	stur	x0, [x29, #-16]
  41dd90:	stur	x1, [x29, #-24]
  41dd94:	stur	x2, [x29, #-32]
  41dd98:	ldur	x9, [x29, #-24]
  41dd9c:	stur	x9, [x29, #-40]
  41dda0:	str	x8, [sp, #16]
  41dda4:	ldur	x8, [x29, #-16]
  41dda8:	cmp	x8, #0x0
  41ddac:	cset	w9, ne  // ne = any
  41ddb0:	mov	w10, #0x1                   	// #1
  41ddb4:	eor	w9, w9, #0x1
  41ddb8:	eor	w9, w9, w10
  41ddbc:	eor	w9, w9, w10
  41ddc0:	and	w9, w9, #0x1
  41ddc4:	mov	w0, w9
  41ddc8:	sxtw	x8, w0
  41ddcc:	cbz	x8, 41ddf4 <method_can_reboot_to_boot_loader_menu+0x80>
  41ddd0:	mov	w8, wzr
  41ddd4:	mov	w0, w8
  41ddd8:	adrp	x1, 443000 <_fini+0x2c30>
  41dddc:	add	x1, x1, #0x812
  41dde0:	ldr	x2, [sp, #16]
  41dde4:	mov	w3, #0xb3d                 	// #2877
  41dde8:	adrp	x4, 446000 <_fini+0x5c30>
  41ddec:	add	x4, x4, #0xc00
  41ddf0:	bl	406c68 <log_assert_failed_realm@plt>
  41ddf4:	ldur	x8, [x29, #-40]
  41ddf8:	cmp	x8, #0x0
  41ddfc:	cset	w9, ne  // ne = any
  41de00:	mov	w10, #0x1                   	// #1
  41de04:	eor	w9, w9, #0x1
  41de08:	eor	w9, w9, w10
  41de0c:	eor	w9, w9, w10
  41de10:	and	w9, w9, #0x1
  41de14:	mov	w0, w9
  41de18:	sxtw	x8, w0
  41de1c:	cbz	x8, 41de44 <method_can_reboot_to_boot_loader_menu+0xd0>
  41de20:	mov	w8, wzr
  41de24:	mov	w0, w8
  41de28:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41de2c:	add	x1, x1, #0x5ef
  41de30:	ldr	x2, [sp, #16]
  41de34:	mov	w3, #0xb3e                 	// #2878
  41de38:	adrp	x4, 446000 <_fini+0x5c30>
  41de3c:	add	x4, x4, #0xc00
  41de40:	bl	406c68 <log_assert_failed_realm@plt>
  41de44:	adrp	x0, 444000 <_fini+0x3c30>
  41de48:	add	x0, x0, #0x65b
  41de4c:	bl	407518 <getenv_bool@plt>
  41de50:	stur	w0, [x29, #-44]
  41de54:	ldur	w8, [x29, #-44]
  41de58:	mov	w9, #0xfffffffa            	// #-6
  41de5c:	cmp	w8, w9
  41de60:	b.ne	41df44 <method_can_reboot_to_boot_loader_menu+0x1d0>  // b.any
  41de64:	add	x0, sp, #0x38
  41de68:	str	xzr, [sp, #56]
  41de6c:	bl	407778 <efi_loader_get_features@plt>
  41de70:	stur	w0, [x29, #-44]
  41de74:	ldur	w8, [x29, #-44]
  41de78:	cmp	w8, #0x0
  41de7c:	cset	w8, ge  // ge = tcont
  41de80:	tbnz	w8, #0, 41df00 <method_can_reboot_to_boot_loader_menu+0x18c>
  41de84:	mov	w8, #0x4                   	// #4
  41de88:	str	w8, [sp, #52]
  41de8c:	ldur	w8, [x29, #-44]
  41de90:	str	w8, [sp, #48]
  41de94:	str	wzr, [sp, #44]
  41de98:	ldr	w0, [sp, #44]
  41de9c:	bl	406c08 <log_get_max_level_realm@plt>
  41dea0:	ldr	w8, [sp, #52]
  41dea4:	and	w8, w8, #0x7
  41dea8:	cmp	w0, w8
  41deac:	b.lt	41dee4 <method_can_reboot_to_boot_loader_menu+0x170>  // b.tstop
  41deb0:	ldr	w8, [sp, #44]
  41deb4:	ldr	w9, [sp, #52]
  41deb8:	orr	w0, w9, w8, lsl #10
  41debc:	ldr	w1, [sp, #48]
  41dec0:	ldr	x2, [sp, #16]
  41dec4:	mov	w3, #0xb48                 	// #2888
  41dec8:	adrp	x4, 446000 <_fini+0x5c30>
  41decc:	add	x4, x4, #0xc54
  41ded0:	adrp	x5, 446000 <_fini+0x5c30>
  41ded4:	add	x5, x5, #0xc7a
  41ded8:	bl	406c18 <log_internal_realm@plt>
  41dedc:	str	w0, [sp, #12]
  41dee0:	b	41def8 <method_can_reboot_to_boot_loader_menu+0x184>
  41dee4:	ldr	w0, [sp, #48]
  41dee8:	bl	406c28 <abs@plt>
  41deec:	mov	w8, wzr
  41def0:	subs	w8, w8, w0, uxtb
  41def4:	str	w8, [sp, #12]
  41def8:	ldr	w8, [sp, #12]
  41defc:	str	w8, [sp, #40]
  41df00:	ldur	w8, [x29, #-44]
  41df04:	cmp	w8, #0x0
  41df08:	cset	w8, lt  // lt = tstop
  41df0c:	tbnz	w8, #0, 41df20 <method_can_reboot_to_boot_loader_menu+0x1ac>
  41df10:	ldr	x8, [sp, #56]
  41df14:	mvn	x8, x8
  41df18:	and	x8, x8, #0x2
  41df1c:	cbz	x8, 41df40 <method_can_reboot_to_boot_loader_menu+0x1cc>
  41df20:	ldur	x0, [x29, #-16]
  41df24:	adrp	x1, 442000 <_fini+0x1c30>
  41df28:	add	x1, x1, #0xf2
  41df2c:	adrp	x2, 446000 <_fini+0x5c30>
  41df30:	add	x2, x2, #0x272
  41df34:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41df38:	stur	w0, [x29, #-4]
  41df3c:	b	41e028 <method_can_reboot_to_boot_loader_menu+0x2b4>
  41df40:	b	41e000 <method_can_reboot_to_boot_loader_menu+0x28c>
  41df44:	ldur	w8, [x29, #-44]
  41df48:	cmp	w8, #0x0
  41df4c:	cset	w8, gt
  41df50:	tbnz	w8, #0, 41e000 <method_can_reboot_to_boot_loader_menu+0x28c>
  41df54:	ldur	w8, [x29, #-44]
  41df58:	cmp	w8, #0x0
  41df5c:	cset	w8, ge  // ge = tcont
  41df60:	tbnz	w8, #0, 41dfe0 <method_can_reboot_to_boot_loader_menu+0x26c>
  41df64:	mov	w8, #0x4                   	// #4
  41df68:	str	w8, [sp, #36]
  41df6c:	ldur	w8, [x29, #-44]
  41df70:	str	w8, [sp, #32]
  41df74:	str	wzr, [sp, #28]
  41df78:	ldr	w0, [sp, #28]
  41df7c:	bl	406c08 <log_get_max_level_realm@plt>
  41df80:	ldr	w8, [sp, #36]
  41df84:	and	w8, w8, #0x7
  41df88:	cmp	w0, w8
  41df8c:	b.lt	41dfc4 <method_can_reboot_to_boot_loader_menu+0x250>  // b.tstop
  41df90:	ldr	w8, [sp, #28]
  41df94:	ldr	w9, [sp, #36]
  41df98:	orr	w0, w9, w8, lsl #10
  41df9c:	ldr	w1, [sp, #32]
  41dfa0:	ldr	x2, [sp, #16]
  41dfa4:	mov	w3, #0xb50                 	// #2896
  41dfa8:	adrp	x4, 446000 <_fini+0x5c30>
  41dfac:	add	x4, x4, #0xc54
  41dfb0:	adrp	x5, 444000 <_fini+0x3c30>
  41dfb4:	add	x5, x5, #0x765
  41dfb8:	bl	406c18 <log_internal_realm@plt>
  41dfbc:	str	w0, [sp, #8]
  41dfc0:	b	41dfd8 <method_can_reboot_to_boot_loader_menu+0x264>
  41dfc4:	ldr	w0, [sp, #32]
  41dfc8:	bl	406c28 <abs@plt>
  41dfcc:	mov	w8, wzr
  41dfd0:	subs	w8, w8, w0, uxtb
  41dfd4:	str	w8, [sp, #8]
  41dfd8:	ldr	w8, [sp, #8]
  41dfdc:	str	w8, [sp, #24]
  41dfe0:	ldur	x0, [x29, #-16]
  41dfe4:	adrp	x1, 442000 <_fini+0x1c30>
  41dfe8:	add	x1, x1, #0xf2
  41dfec:	adrp	x2, 446000 <_fini+0x5c30>
  41dff0:	add	x2, x2, #0x272
  41dff4:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41dff8:	stur	w0, [x29, #-4]
  41dffc:	b	41e028 <method_can_reboot_to_boot_loader_menu+0x2b4>
  41e000:	ldur	x0, [x29, #-16]
  41e004:	ldur	x5, [x29, #-32]
  41e008:	mov	w1, #0x15                  	// #21
  41e00c:	adrp	x2, 446000 <_fini+0x5c30>
  41e010:	add	x2, x2, #0xcc2
  41e014:	mov	x8, xzr
  41e018:	mov	x3, x8
  41e01c:	mov	w4, #0xffffffff            	// #-1
  41e020:	bl	42416c <return_test_polkit>
  41e024:	stur	w0, [x29, #-4]
  41e028:	ldur	w0, [x29, #-4]
  41e02c:	ldp	x29, x30, [sp, #112]
  41e030:	add	sp, sp, #0x80
  41e034:	ret

000000000041e038 <method_set_reboot_to_boot_loader_menu>:
  41e038:	sub	sp, sp, #0x120
  41e03c:	stp	x29, x30, [sp, #256]
  41e040:	str	x28, [sp, #272]
  41e044:	add	x29, sp, #0x100
  41e048:	sub	x8, x29, #0x4c
  41e04c:	adrp	x9, 442000 <_fini+0x1c30>
  41e050:	add	x9, x9, #0xd8e
  41e054:	add	x9, x9, #0x3
  41e058:	adrp	x10, 446000 <_fini+0x5c30>
  41e05c:	add	x10, x10, #0xcf8
  41e060:	stur	x0, [x8, #60]
  41e064:	stur	x1, [x8, #52]
  41e068:	stur	x2, [x8, #44]
  41e06c:	ldur	x11, [x8, #52]
  41e070:	stur	x11, [x8, #36]
  41e074:	str	x8, [sp, #40]
  41e078:	str	x9, [sp, #32]
  41e07c:	str	x10, [sp, #24]
  41e080:	ldr	x8, [sp, #40]
  41e084:	ldur	x9, [x8, #60]
  41e088:	cmp	x9, #0x0
  41e08c:	cset	w10, ne  // ne = any
  41e090:	mov	w11, #0x1                   	// #1
  41e094:	eor	w10, w10, #0x1
  41e098:	eor	w10, w10, w11
  41e09c:	eor	w10, w10, w11
  41e0a0:	and	w10, w10, #0x1
  41e0a4:	mov	w0, w10
  41e0a8:	sxtw	x9, w0
  41e0ac:	cbz	x9, 41e0d0 <method_set_reboot_to_boot_loader_menu+0x98>
  41e0b0:	mov	w8, wzr
  41e0b4:	mov	w0, w8
  41e0b8:	adrp	x1, 443000 <_fini+0x2c30>
  41e0bc:	add	x1, x1, #0x812
  41e0c0:	ldr	x2, [sp, #32]
  41e0c4:	mov	w3, #0xaeb                 	// #2795
  41e0c8:	ldr	x4, [sp, #24]
  41e0cc:	bl	406c68 <log_assert_failed_realm@plt>
  41e0d0:	ldr	x8, [sp, #40]
  41e0d4:	ldur	x9, [x8, #36]
  41e0d8:	cmp	x9, #0x0
  41e0dc:	cset	w10, ne  // ne = any
  41e0e0:	mov	w11, #0x1                   	// #1
  41e0e4:	eor	w10, w10, #0x1
  41e0e8:	eor	w10, w10, w11
  41e0ec:	eor	w10, w10, w11
  41e0f0:	and	w10, w10, #0x1
  41e0f4:	mov	w0, w10
  41e0f8:	sxtw	x9, w0
  41e0fc:	cbz	x9, 41e120 <method_set_reboot_to_boot_loader_menu+0xe8>
  41e100:	mov	w8, wzr
  41e104:	mov	w0, w8
  41e108:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41e10c:	add	x1, x1, #0x5ef
  41e110:	ldr	x2, [sp, #32]
  41e114:	mov	w3, #0xaec                 	// #2796
  41e118:	ldr	x4, [sp, #24]
  41e11c:	bl	406c68 <log_assert_failed_realm@plt>
  41e120:	ldr	x8, [sp, #40]
  41e124:	ldur	x0, [x8, #60]
  41e128:	adrp	x1, 443000 <_fini+0x2c30>
  41e12c:	add	x1, x1, #0x250
  41e130:	sub	x2, x29, #0x38
  41e134:	bl	4074c8 <sd_bus_message_read@plt>
  41e138:	ldr	x8, [sp, #40]
  41e13c:	str	w0, [x8, #16]
  41e140:	ldr	w9, [x8, #16]
  41e144:	cmp	w9, #0x0
  41e148:	cset	w9, ge  // ge = tcont
  41e14c:	tbnz	w9, #0, 41e160 <method_set_reboot_to_boot_loader_menu+0x128>
  41e150:	ldr	x8, [sp, #40]
  41e154:	ldr	w9, [x8, #16]
  41e158:	str	w9, [x8, #72]
  41e15c:	b	41e750 <method_set_reboot_to_boot_loader_menu+0x718>
  41e160:	adrp	x0, 444000 <_fini+0x3c30>
  41e164:	add	x0, x0, #0x65b
  41e168:	bl	407518 <getenv_bool@plt>
  41e16c:	ldr	x8, [sp, #40]
  41e170:	str	w0, [x8, #16]
  41e174:	ldr	w9, [x8, #16]
  41e178:	mov	w10, #0xfffffffa            	// #-6
  41e17c:	cmp	w9, w10
  41e180:	b.ne	41e288 <method_set_reboot_to_boot_loader_menu+0x250>  // b.any
  41e184:	sub	x0, x29, #0x48
  41e188:	bl	407778 <efi_loader_get_features@plt>
  41e18c:	ldr	x8, [sp, #40]
  41e190:	str	w0, [x8, #16]
  41e194:	ldr	w9, [x8, #16]
  41e198:	cmp	w9, #0x0
  41e19c:	cset	w9, ge  // ge = tcont
  41e1a0:	tbnz	w9, #0, 41e22c <method_set_reboot_to_boot_loader_menu+0x1f4>
  41e1a4:	mov	w8, #0x4                   	// #4
  41e1a8:	ldr	x9, [sp, #40]
  41e1ac:	str	w8, [x9]
  41e1b0:	ldr	w8, [x9, #16]
  41e1b4:	stur	w8, [x29, #-80]
  41e1b8:	stur	wzr, [x29, #-84]
  41e1bc:	ldur	w0, [x29, #-84]
  41e1c0:	bl	406c08 <log_get_max_level_realm@plt>
  41e1c4:	ldr	x9, [sp, #40]
  41e1c8:	ldr	w8, [x9]
  41e1cc:	and	w8, w8, #0x7
  41e1d0:	cmp	w0, w8
  41e1d4:	b.lt	41e210 <method_set_reboot_to_boot_loader_menu+0x1d8>  // b.tstop
  41e1d8:	ldur	w8, [x29, #-84]
  41e1dc:	ldr	x9, [sp, #40]
  41e1e0:	ldr	w10, [x9]
  41e1e4:	orr	w0, w10, w8, lsl #10
  41e1e8:	ldur	w1, [x29, #-80]
  41e1ec:	ldr	x2, [sp, #32]
  41e1f0:	mov	w3, #0xafa                 	// #2810
  41e1f4:	adrp	x4, 446000 <_fini+0x5c30>
  41e1f8:	add	x4, x4, #0xd4c
  41e1fc:	adrp	x5, 446000 <_fini+0x5c30>
  41e200:	add	x5, x5, #0xc7a
  41e204:	bl	406c18 <log_internal_realm@plt>
  41e208:	str	w0, [sp, #20]
  41e20c:	b	41e224 <method_set_reboot_to_boot_loader_menu+0x1ec>
  41e210:	ldur	w0, [x29, #-80]
  41e214:	bl	406c28 <abs@plt>
  41e218:	mov	w8, wzr
  41e21c:	subs	w8, w8, w0, uxtb
  41e220:	str	w8, [sp, #20]
  41e224:	ldr	w8, [sp, #20]
  41e228:	stur	w8, [x29, #-88]
  41e22c:	ldr	x8, [sp, #40]
  41e230:	ldr	w9, [x8, #16]
  41e234:	cmp	w9, #0x0
  41e238:	cset	w9, lt  // lt = tstop
  41e23c:	tbnz	w9, #0, 41e254 <method_set_reboot_to_boot_loader_menu+0x21c>
  41e240:	ldr	x8, [sp, #40]
  41e244:	ldur	x9, [x8, #4]
  41e248:	mvn	x9, x9
  41e24c:	and	x9, x9, #0x2
  41e250:	cbz	x9, 41e27c <method_set_reboot_to_boot_loader_menu+0x244>
  41e254:	ldr	x8, [sp, #40]
  41e258:	ldur	x0, [x8, #44]
  41e25c:	adrp	x1, 446000 <_fini+0x5c30>
  41e260:	add	x1, x1, #0xa12
  41e264:	adrp	x2, 446000 <_fini+0x5c30>
  41e268:	add	x2, x2, #0xd72
  41e26c:	bl	407468 <sd_bus_error_setf@plt>
  41e270:	ldr	x8, [sp, #40]
  41e274:	str	w0, [x8, #72]
  41e278:	b	41e750 <method_set_reboot_to_boot_loader_menu+0x718>
  41e27c:	mov	w8, #0x1                   	// #1
  41e280:	sturb	w8, [x29, #-41]
  41e284:	b	41e360 <method_set_reboot_to_boot_loader_menu+0x328>
  41e288:	ldr	x8, [sp, #40]
  41e28c:	ldr	w9, [x8, #16]
  41e290:	cmp	w9, #0x0
  41e294:	cset	w9, gt
  41e298:	tbnz	w9, #0, 41e358 <method_set_reboot_to_boot_loader_menu+0x320>
  41e29c:	ldr	x8, [sp, #40]
  41e2a0:	ldr	w9, [x8, #16]
  41e2a4:	cmp	w9, #0x0
  41e2a8:	cset	w9, ge  // ge = tcont
  41e2ac:	tbnz	w9, #0, 41e330 <method_set_reboot_to_boot_loader_menu+0x2f8>
  41e2b0:	mov	w8, #0x4                   	// #4
  41e2b4:	stur	w8, [x29, #-92]
  41e2b8:	ldr	x9, [sp, #40]
  41e2bc:	ldr	w8, [x9, #16]
  41e2c0:	stur	w8, [x29, #-96]
  41e2c4:	stur	wzr, [x29, #-100]
  41e2c8:	ldur	w0, [x29, #-100]
  41e2cc:	bl	406c08 <log_get_max_level_realm@plt>
  41e2d0:	ldur	w8, [x29, #-92]
  41e2d4:	and	w8, w8, #0x7
  41e2d8:	cmp	w0, w8
  41e2dc:	b.lt	41e314 <method_set_reboot_to_boot_loader_menu+0x2dc>  // b.tstop
  41e2e0:	ldur	w8, [x29, #-100]
  41e2e4:	ldur	w9, [x29, #-92]
  41e2e8:	orr	w0, w9, w8, lsl #10
  41e2ec:	ldur	w1, [x29, #-96]
  41e2f0:	ldr	x2, [sp, #32]
  41e2f4:	mov	w3, #0xb04                 	// #2820
  41e2f8:	adrp	x4, 446000 <_fini+0x5c30>
  41e2fc:	add	x4, x4, #0xd4c
  41e300:	adrp	x5, 444000 <_fini+0x3c30>
  41e304:	add	x5, x5, #0x765
  41e308:	bl	406c18 <log_internal_realm@plt>
  41e30c:	str	w0, [sp, #16]
  41e310:	b	41e328 <method_set_reboot_to_boot_loader_menu+0x2f0>
  41e314:	ldur	w0, [x29, #-96]
  41e318:	bl	406c28 <abs@plt>
  41e31c:	mov	w8, wzr
  41e320:	subs	w8, w8, w0, uxtb
  41e324:	str	w8, [sp, #16]
  41e328:	ldr	w8, [sp, #16]
  41e32c:	stur	w8, [x29, #-104]
  41e330:	ldr	x8, [sp, #40]
  41e334:	ldur	x0, [x8, #44]
  41e338:	adrp	x1, 446000 <_fini+0x5c30>
  41e33c:	add	x1, x1, #0xa12
  41e340:	adrp	x2, 446000 <_fini+0x5c30>
  41e344:	add	x2, x2, #0xd72
  41e348:	bl	407468 <sd_bus_error_setf@plt>
  41e34c:	ldr	x8, [sp, #40]
  41e350:	str	w0, [x8, #72]
  41e354:	b	41e750 <method_set_reboot_to_boot_loader_menu+0x718>
  41e358:	mov	w8, #0x0                   	// #0
  41e35c:	sturb	w8, [x29, #-41]
  41e360:	ldr	x8, [sp, #40]
  41e364:	ldur	x0, [x8, #60]
  41e368:	ldur	x9, [x8, #36]
  41e36c:	add	x6, x9, #0x1b0
  41e370:	ldur	x7, [x8, #44]
  41e374:	mov	w1, #0x15                  	// #21
  41e378:	adrp	x2, 446000 <_fini+0x5c30>
  41e37c:	add	x2, x2, #0xcc2
  41e380:	mov	x9, xzr
  41e384:	mov	x3, x9
  41e388:	mov	w10, wzr
  41e38c:	and	w4, w10, #0x1
  41e390:	mov	w5, #0xffffffff            	// #-1
  41e394:	bl	407678 <bus_verify_polkit_async@plt>
  41e398:	ldr	x8, [sp, #40]
  41e39c:	str	w0, [x8, #16]
  41e3a0:	ldr	w10, [x8, #16]
  41e3a4:	cmp	w10, #0x0
  41e3a8:	cset	w10, ge  // ge = tcont
  41e3ac:	tbnz	w10, #0, 41e3c0 <method_set_reboot_to_boot_loader_menu+0x388>
  41e3b0:	ldr	x8, [sp, #40]
  41e3b4:	ldr	w9, [x8, #16]
  41e3b8:	str	w9, [x8, #72]
  41e3bc:	b	41e750 <method_set_reboot_to_boot_loader_menu+0x718>
  41e3c0:	ldr	x8, [sp, #40]
  41e3c4:	ldr	w9, [x8, #16]
  41e3c8:	cbnz	w9, 41e3dc <method_set_reboot_to_boot_loader_menu+0x3a4>
  41e3cc:	mov	w8, #0x1                   	// #1
  41e3d0:	ldr	x9, [sp, #40]
  41e3d4:	str	w8, [x9, #72]
  41e3d8:	b	41e750 <method_set_reboot_to_boot_loader_menu+0x718>
  41e3dc:	ldurb	w8, [x29, #-41]
  41e3e0:	tbnz	w8, #0, 41e3e8 <method_set_reboot_to_boot_loader_menu+0x3b0>
  41e3e4:	b	41e634 <method_set_reboot_to_boot_loader_menu+0x5fc>
  41e3e8:	ldr	x8, [sp, #40]
  41e3ec:	ldur	x9, [x8, #20]
  41e3f0:	mov	x10, #0xffffffffffffffff    	// #-1
  41e3f4:	cmp	x9, x10
  41e3f8:	b.ne	41e4ac <method_set_reboot_to_boot_loader_menu+0x474>  // b.any
  41e3fc:	sub	x8, x29, #0x78
  41e400:	mov	w9, #0x4a                  	// #74
  41e404:	sturb	w9, [x29, #-120]
  41e408:	mov	w9, #0x67                  	// #103
  41e40c:	strb	w9, [x8, #1]
  41e410:	mov	w9, #0xb0                  	// #176
  41e414:	strb	w9, [x8, #2]
  41e418:	mov	w9, #0x82                  	// #130
  41e41c:	strb	w9, [x8, #3]
  41e420:	mov	w9, #0xa                   	// #10
  41e424:	strb	w9, [x8, #4]
  41e428:	mov	w9, #0x4c                  	// #76
  41e42c:	strb	w9, [x8, #5]
  41e430:	mov	w9, #0x41                  	// #65
  41e434:	strb	w9, [x8, #6]
  41e438:	mov	w9, #0xcf                  	// #207
  41e43c:	strb	w9, [x8, #7]
  41e440:	mov	w9, #0xb6                  	// #182
  41e444:	strb	w9, [x8, #8]
  41e448:	mov	w9, #0xc7                  	// #199
  41e44c:	strb	w9, [x8, #9]
  41e450:	mov	w9, #0x44                  	// #68
  41e454:	strb	w9, [x8, #10]
  41e458:	mov	w9, #0xb                   	// #11
  41e45c:	strb	w9, [x8, #11]
  41e460:	mov	w9, #0x29                  	// #41
  41e464:	strb	w9, [x8, #12]
  41e468:	mov	w9, #0xbb                  	// #187
  41e46c:	strb	w9, [x8, #13]
  41e470:	mov	w9, #0x8c                  	// #140
  41e474:	strb	w9, [x8, #14]
  41e478:	mov	w9, #0x4f                  	// #79
  41e47c:	strb	w9, [x8, #15]
  41e480:	ldur	x0, [x29, #-120]
  41e484:	ldur	x1, [x29, #-112]
  41e488:	adrp	x2, 444000 <_fini+0x3c30>
  41e48c:	add	x2, x2, #0x67e
  41e490:	mov	x8, xzr
  41e494:	mov	x3, x8
  41e498:	mov	x4, x8
  41e49c:	bl	407788 <efi_set_variable@plt>
  41e4a0:	ldr	x8, [sp, #40]
  41e4a4:	str	w0, [x8, #16]
  41e4a8:	b	41e60c <method_set_reboot_to_boot_loader_menu+0x5d4>
  41e4ac:	ldr	x8, [sp, #40]
  41e4b0:	ldur	x9, [x8, #20]
  41e4b4:	str	x9, [sp, #104]
  41e4b8:	mov	x9, #0x4240                	// #16960
  41e4bc:	movk	x9, #0xf, lsl #16
  41e4c0:	str	x9, [sp, #96]
  41e4c4:	ldr	x10, [sp, #104]
  41e4c8:	udiv	x10, x10, x9
  41e4cc:	ldr	x11, [sp, #104]
  41e4d0:	udiv	x12, x11, x9
  41e4d4:	mul	x9, x12, x9
  41e4d8:	subs	x9, x11, x9
  41e4dc:	cmp	x9, #0x0
  41e4e0:	cset	w13, ne  // ne = any
  41e4e4:	mov	w14, #0x1                   	// #1
  41e4e8:	eor	w13, w13, #0x1
  41e4ec:	eor	w13, w13, w14
  41e4f0:	and	w13, w13, #0x1
  41e4f4:	add	x9, x10, w13, sxtw
  41e4f8:	str	x9, [sp, #88]
  41e4fc:	ldr	x3, [sp, #88]
  41e500:	add	x0, sp, #0x71
  41e504:	mov	x1, #0x17                  	// #23
  41e508:	adrp	x2, 446000 <_fini+0x5c30>
  41e50c:	add	x2, x2, #0x94e
  41e510:	str	w14, [sp, #12]
  41e514:	bl	407358 <snprintf@plt>
  41e518:	mov	w1, w0
  41e51c:	sxtw	x8, w1
  41e520:	cmp	x8, #0x17
  41e524:	cset	w13, cc  // cc = lo, ul, last
  41e528:	ldr	w14, [sp, #12]
  41e52c:	eor	w13, w13, w14
  41e530:	eor	w13, w13, w14
  41e534:	eor	w13, w13, w14
  41e538:	and	w13, w13, #0x1
  41e53c:	mov	w1, w13
  41e540:	sxtw	x8, w1
  41e544:	cbz	x8, 41e568 <method_set_reboot_to_boot_loader_menu+0x530>
  41e548:	mov	w8, wzr
  41e54c:	mov	w0, w8
  41e550:	adrp	x1, 446000 <_fini+0x5c30>
  41e554:	add	x1, x1, #0xdab
  41e558:	ldr	x2, [sp, #32]
  41e55c:	mov	w3, #0xb1d                 	// #2845
  41e560:	ldr	x4, [sp, #24]
  41e564:	bl	406c68 <log_assert_failed_realm@plt>
  41e568:	add	x8, sp, #0x48
  41e56c:	mov	w9, #0x4a                  	// #74
  41e570:	strb	w9, [sp, #72]
  41e574:	mov	w9, #0x67                  	// #103
  41e578:	strb	w9, [x8, #1]
  41e57c:	mov	w9, #0xb0                  	// #176
  41e580:	strb	w9, [x8, #2]
  41e584:	mov	w9, #0x82                  	// #130
  41e588:	strb	w9, [x8, #3]
  41e58c:	mov	w9, #0xa                   	// #10
  41e590:	strb	w9, [x8, #4]
  41e594:	mov	w9, #0x4c                  	// #76
  41e598:	strb	w9, [x8, #5]
  41e59c:	mov	w9, #0x41                  	// #65
  41e5a0:	strb	w9, [x8, #6]
  41e5a4:	mov	w9, #0xcf                  	// #207
  41e5a8:	strb	w9, [x8, #7]
  41e5ac:	mov	w9, #0xb6                  	// #182
  41e5b0:	strb	w9, [x8, #8]
  41e5b4:	mov	w9, #0xc7                  	// #199
  41e5b8:	strb	w9, [x8, #9]
  41e5bc:	mov	w9, #0x44                  	// #68
  41e5c0:	strb	w9, [x8, #10]
  41e5c4:	mov	w9, #0xb                   	// #11
  41e5c8:	strb	w9, [x8, #11]
  41e5cc:	mov	w9, #0x29                  	// #41
  41e5d0:	strb	w9, [x8, #12]
  41e5d4:	mov	w9, #0xbb                  	// #187
  41e5d8:	strb	w9, [x8, #13]
  41e5dc:	mov	w9, #0x8c                  	// #140
  41e5e0:	strb	w9, [x8, #14]
  41e5e4:	mov	w9, #0x4f                  	// #79
  41e5e8:	strb	w9, [x8, #15]
  41e5ec:	ldr	x0, [sp, #72]
  41e5f0:	ldr	x1, [sp, #80]
  41e5f4:	adrp	x2, 444000 <_fini+0x3c30>
  41e5f8:	add	x2, x2, #0x67e
  41e5fc:	add	x3, sp, #0x71
  41e600:	bl	407798 <efi_set_variable_string@plt>
  41e604:	ldr	x8, [sp, #40]
  41e608:	str	w0, [x8, #16]
  41e60c:	ldr	x8, [sp, #40]
  41e610:	ldr	w9, [x8, #16]
  41e614:	cmp	w9, #0x0
  41e618:	cset	w9, ge  // ge = tcont
  41e61c:	tbnz	w9, #0, 41e630 <method_set_reboot_to_boot_loader_menu+0x5f8>
  41e620:	ldr	x8, [sp, #40]
  41e624:	ldr	w9, [x8, #16]
  41e628:	str	w9, [x8, #72]
  41e62c:	b	41e750 <method_set_reboot_to_boot_loader_menu+0x718>
  41e630:	b	41e734 <method_set_reboot_to_boot_loader_menu+0x6fc>
  41e634:	ldr	x8, [sp, #40]
  41e638:	ldur	x9, [x8, #20]
  41e63c:	mov	x10, #0xffffffffffffffff    	// #-1
  41e640:	cmp	x9, x10
  41e644:	b.ne	41e690 <method_set_reboot_to_boot_loader_menu+0x658>  // b.any
  41e648:	adrp	x0, 446000 <_fini+0x5c30>
  41e64c:	add	x0, x0, #0xdce
  41e650:	bl	4076e8 <unlink@plt>
  41e654:	cmp	w0, #0x0
  41e658:	cset	w8, ge  // ge = tcont
  41e65c:	tbnz	w8, #0, 41e68c <method_set_reboot_to_boot_loader_menu+0x654>
  41e660:	bl	406e08 <__errno_location@plt>
  41e664:	ldr	w8, [x0]
  41e668:	cmp	w8, #0x2
  41e66c:	b.eq	41e68c <method_set_reboot_to_boot_loader_menu+0x654>  // b.none
  41e670:	bl	406e08 <__errno_location@plt>
  41e674:	ldr	w8, [x0]
  41e678:	mov	w9, wzr
  41e67c:	subs	w8, w9, w8
  41e680:	ldr	x10, [sp, #40]
  41e684:	str	w8, [x10, #72]
  41e688:	b	41e750 <method_set_reboot_to_boot_loader_menu+0x718>
  41e68c:	b	41e734 <method_set_reboot_to_boot_loader_menu+0x6fc>
  41e690:	ldr	x8, [sp, #40]
  41e694:	ldur	x3, [x8, #20]
  41e698:	add	x0, sp, #0x31
  41e69c:	mov	x1, #0x17                  	// #23
  41e6a0:	adrp	x2, 446000 <_fini+0x5c30>
  41e6a4:	add	x2, x2, #0x94e
  41e6a8:	bl	407358 <snprintf@plt>
  41e6ac:	mov	w1, w0
  41e6b0:	sxtw	x8, w1
  41e6b4:	cmp	x8, #0x17
  41e6b8:	cset	w9, cc  // cc = lo, ul, last
  41e6bc:	mov	w10, #0x1                   	// #1
  41e6c0:	eor	w9, w9, #0x1
  41e6c4:	eor	w9, w9, w10
  41e6c8:	eor	w9, w9, w10
  41e6cc:	and	w9, w9, #0x1
  41e6d0:	mov	w1, w9
  41e6d4:	sxtw	x8, w1
  41e6d8:	cbz	x8, 41e6fc <method_set_reboot_to_boot_loader_menu+0x6c4>
  41e6dc:	mov	w8, wzr
  41e6e0:	mov	w0, w8
  41e6e4:	adrp	x1, 446000 <_fini+0x5c30>
  41e6e8:	add	x1, x1, #0xdab
  41e6ec:	ldr	x2, [sp, #32]
  41e6f0:	mov	w3, #0xb2a                 	// #2858
  41e6f4:	ldr	x4, [sp, #24]
  41e6f8:	bl	406c68 <log_assert_failed_realm@plt>
  41e6fc:	adrp	x0, 446000 <_fini+0x5c30>
  41e700:	add	x0, x0, #0xdce
  41e704:	add	x1, sp, #0x31
  41e708:	bl	422238 <write_string_file_atomic_label>
  41e70c:	ldr	x8, [sp, #40]
  41e710:	str	w0, [x8, #16]
  41e714:	ldr	w9, [x8, #16]
  41e718:	cmp	w9, #0x0
  41e71c:	cset	w9, ge  // ge = tcont
  41e720:	tbnz	w9, #0, 41e734 <method_set_reboot_to_boot_loader_menu+0x6fc>
  41e724:	ldr	x8, [sp, #40]
  41e728:	ldr	w9, [x8, #16]
  41e72c:	str	w9, [x8, #72]
  41e730:	b	41e750 <method_set_reboot_to_boot_loader_menu+0x718>
  41e734:	ldr	x8, [sp, #40]
  41e738:	ldur	x0, [x8, #60]
  41e73c:	mov	x9, xzr
  41e740:	mov	x1, x9
  41e744:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41e748:	ldr	x8, [sp, #40]
  41e74c:	str	w0, [x8, #72]
  41e750:	ldr	x8, [sp, #40]
  41e754:	ldr	w0, [x8, #72]
  41e758:	ldr	x28, [sp, #272]
  41e75c:	ldp	x29, x30, [sp, #256]
  41e760:	add	sp, sp, #0x120
  41e764:	ret

000000000041e768 <method_can_reboot_to_boot_loader_entry>:
  41e768:	sub	sp, sp, #0x80
  41e76c:	stp	x29, x30, [sp, #112]
  41e770:	add	x29, sp, #0x70
  41e774:	adrp	x8, 442000 <_fini+0x1c30>
  41e778:	add	x8, x8, #0xd8e
  41e77c:	add	x8, x8, #0x3
  41e780:	stur	x0, [x29, #-16]
  41e784:	stur	x1, [x29, #-24]
  41e788:	stur	x2, [x29, #-32]
  41e78c:	ldur	x9, [x29, #-24]
  41e790:	stur	x9, [x29, #-40]
  41e794:	str	x8, [sp, #16]
  41e798:	ldur	x8, [x29, #-16]
  41e79c:	cmp	x8, #0x0
  41e7a0:	cset	w9, ne  // ne = any
  41e7a4:	mov	w10, #0x1                   	// #1
  41e7a8:	eor	w9, w9, #0x1
  41e7ac:	eor	w9, w9, w10
  41e7b0:	eor	w9, w9, w10
  41e7b4:	and	w9, w9, #0x1
  41e7b8:	mov	w0, w9
  41e7bc:	sxtw	x8, w0
  41e7c0:	cbz	x8, 41e7e8 <method_can_reboot_to_boot_loader_entry+0x80>
  41e7c4:	mov	w8, wzr
  41e7c8:	mov	w0, w8
  41e7cc:	adrp	x1, 443000 <_fini+0x2c30>
  41e7d0:	add	x1, x1, #0x812
  41e7d4:	ldr	x2, [sp, #16]
  41e7d8:	mov	w3, #0xbfc                 	// #3068
  41e7dc:	adrp	x4, 446000 <_fini+0x5c30>
  41e7e0:	add	x4, x4, #0xdf1
  41e7e4:	bl	406c68 <log_assert_failed_realm@plt>
  41e7e8:	ldur	x8, [x29, #-40]
  41e7ec:	cmp	x8, #0x0
  41e7f0:	cset	w9, ne  // ne = any
  41e7f4:	mov	w10, #0x1                   	// #1
  41e7f8:	eor	w9, w9, #0x1
  41e7fc:	eor	w9, w9, w10
  41e800:	eor	w9, w9, w10
  41e804:	and	w9, w9, #0x1
  41e808:	mov	w0, w9
  41e80c:	sxtw	x8, w0
  41e810:	cbz	x8, 41e838 <method_can_reboot_to_boot_loader_entry+0xd0>
  41e814:	mov	w8, wzr
  41e818:	mov	w0, w8
  41e81c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41e820:	add	x1, x1, #0x5ef
  41e824:	ldr	x2, [sp, #16]
  41e828:	mov	w3, #0xbfd                 	// #3069
  41e82c:	adrp	x4, 446000 <_fini+0x5c30>
  41e830:	add	x4, x4, #0xdf1
  41e834:	bl	406c68 <log_assert_failed_realm@plt>
  41e838:	adrp	x0, 444000 <_fini+0x3c30>
  41e83c:	add	x0, x0, #0x8c7
  41e840:	bl	407518 <getenv_bool@plt>
  41e844:	stur	w0, [x29, #-44]
  41e848:	ldur	w8, [x29, #-44]
  41e84c:	mov	w9, #0xfffffffa            	// #-6
  41e850:	cmp	w8, w9
  41e854:	b.ne	41e938 <method_can_reboot_to_boot_loader_entry+0x1d0>  // b.any
  41e858:	add	x0, sp, #0x38
  41e85c:	str	xzr, [sp, #56]
  41e860:	bl	407778 <efi_loader_get_features@plt>
  41e864:	stur	w0, [x29, #-44]
  41e868:	ldur	w8, [x29, #-44]
  41e86c:	cmp	w8, #0x0
  41e870:	cset	w8, ge  // ge = tcont
  41e874:	tbnz	w8, #0, 41e8f4 <method_can_reboot_to_boot_loader_entry+0x18c>
  41e878:	mov	w8, #0x4                   	// #4
  41e87c:	str	w8, [sp, #52]
  41e880:	ldur	w8, [x29, #-44]
  41e884:	str	w8, [sp, #48]
  41e888:	str	wzr, [sp, #44]
  41e88c:	ldr	w0, [sp, #44]
  41e890:	bl	406c08 <log_get_max_level_realm@plt>
  41e894:	ldr	w8, [sp, #52]
  41e898:	and	w8, w8, #0x7
  41e89c:	cmp	w0, w8
  41e8a0:	b.lt	41e8d8 <method_can_reboot_to_boot_loader_entry+0x170>  // b.tstop
  41e8a4:	ldr	w8, [sp, #44]
  41e8a8:	ldr	w9, [sp, #52]
  41e8ac:	orr	w0, w9, w8, lsl #10
  41e8b0:	ldr	w1, [sp, #48]
  41e8b4:	ldr	x2, [sp, #16]
  41e8b8:	mov	w3, #0xc07                 	// #3079
  41e8bc:	adrp	x4, 446000 <_fini+0x5c30>
  41e8c0:	add	x4, x4, #0xe46
  41e8c4:	adrp	x5, 446000 <_fini+0x5c30>
  41e8c8:	add	x5, x5, #0xe6d
  41e8cc:	bl	406c18 <log_internal_realm@plt>
  41e8d0:	str	w0, [sp, #12]
  41e8d4:	b	41e8ec <method_can_reboot_to_boot_loader_entry+0x184>
  41e8d8:	ldr	w0, [sp, #48]
  41e8dc:	bl	406c28 <abs@plt>
  41e8e0:	mov	w8, wzr
  41e8e4:	subs	w8, w8, w0, uxtb
  41e8e8:	str	w8, [sp, #12]
  41e8ec:	ldr	w8, [sp, #12]
  41e8f0:	str	w8, [sp, #40]
  41e8f4:	ldur	w8, [x29, #-44]
  41e8f8:	cmp	w8, #0x0
  41e8fc:	cset	w8, lt  // lt = tstop
  41e900:	tbnz	w8, #0, 41e914 <method_can_reboot_to_boot_loader_entry+0x1ac>
  41e904:	ldr	x8, [sp, #56]
  41e908:	mvn	x8, x8
  41e90c:	and	x8, x8, #0x8
  41e910:	cbz	x8, 41e934 <method_can_reboot_to_boot_loader_entry+0x1cc>
  41e914:	ldur	x0, [x29, #-16]
  41e918:	adrp	x1, 442000 <_fini+0x1c30>
  41e91c:	add	x1, x1, #0xf2
  41e920:	adrp	x2, 446000 <_fini+0x5c30>
  41e924:	add	x2, x2, #0x272
  41e928:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41e92c:	stur	w0, [x29, #-4]
  41e930:	b	41ea1c <method_can_reboot_to_boot_loader_entry+0x2b4>
  41e934:	b	41e9f4 <method_can_reboot_to_boot_loader_entry+0x28c>
  41e938:	ldur	w8, [x29, #-44]
  41e93c:	cmp	w8, #0x0
  41e940:	cset	w8, gt
  41e944:	tbnz	w8, #0, 41e9f4 <method_can_reboot_to_boot_loader_entry+0x28c>
  41e948:	ldur	w8, [x29, #-44]
  41e94c:	cmp	w8, #0x0
  41e950:	cset	w8, ge  // ge = tcont
  41e954:	tbnz	w8, #0, 41e9d4 <method_can_reboot_to_boot_loader_entry+0x26c>
  41e958:	mov	w8, #0x4                   	// #4
  41e95c:	str	w8, [sp, #36]
  41e960:	ldur	w8, [x29, #-44]
  41e964:	str	w8, [sp, #32]
  41e968:	str	wzr, [sp, #28]
  41e96c:	ldr	w0, [sp, #28]
  41e970:	bl	406c08 <log_get_max_level_realm@plt>
  41e974:	ldr	w8, [sp, #36]
  41e978:	and	w8, w8, #0x7
  41e97c:	cmp	w0, w8
  41e980:	b.lt	41e9b8 <method_can_reboot_to_boot_loader_entry+0x250>  // b.tstop
  41e984:	ldr	w8, [sp, #28]
  41e988:	ldr	w9, [sp, #36]
  41e98c:	orr	w0, w9, w8, lsl #10
  41e990:	ldr	w1, [sp, #32]
  41e994:	ldr	x2, [sp, #16]
  41e998:	mov	w3, #0xc0f                 	// #3087
  41e99c:	adrp	x4, 446000 <_fini+0x5c30>
  41e9a0:	add	x4, x4, #0xe46
  41e9a4:	adrp	x5, 444000 <_fini+0x3c30>
  41e9a8:	add	x5, x5, #0x995
  41e9ac:	bl	406c18 <log_internal_realm@plt>
  41e9b0:	str	w0, [sp, #8]
  41e9b4:	b	41e9cc <method_can_reboot_to_boot_loader_entry+0x264>
  41e9b8:	ldr	w0, [sp, #32]
  41e9bc:	bl	406c28 <abs@plt>
  41e9c0:	mov	w8, wzr
  41e9c4:	subs	w8, w8, w0, uxtb
  41e9c8:	str	w8, [sp, #8]
  41e9cc:	ldr	w8, [sp, #8]
  41e9d0:	str	w8, [sp, #24]
  41e9d4:	ldur	x0, [x29, #-16]
  41e9d8:	adrp	x1, 442000 <_fini+0x1c30>
  41e9dc:	add	x1, x1, #0xf2
  41e9e0:	adrp	x2, 446000 <_fini+0x5c30>
  41e9e4:	add	x2, x2, #0x272
  41e9e8:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41e9ec:	stur	w0, [x29, #-4]
  41e9f0:	b	41ea1c <method_can_reboot_to_boot_loader_entry+0x2b4>
  41e9f4:	ldur	x0, [x29, #-16]
  41e9f8:	ldur	x5, [x29, #-32]
  41e9fc:	mov	w1, #0x15                  	// #21
  41ea00:	adrp	x2, 446000 <_fini+0x5c30>
  41ea04:	add	x2, x2, #0xeb6
  41ea08:	mov	x8, xzr
  41ea0c:	mov	x3, x8
  41ea10:	mov	w4, #0xffffffff            	// #-1
  41ea14:	bl	42416c <return_test_polkit>
  41ea18:	stur	w0, [x29, #-4]
  41ea1c:	ldur	w0, [x29, #-4]
  41ea20:	ldp	x29, x30, [sp, #112]
  41ea24:	add	sp, sp, #0x80
  41ea28:	ret

000000000041ea2c <method_set_reboot_to_boot_loader_entry>:
  41ea2c:	sub	sp, sp, #0xb0
  41ea30:	stp	x29, x30, [sp, #160]
  41ea34:	add	x29, sp, #0xa0
  41ea38:	adrp	x8, 446000 <_fini+0x5c30>
  41ea3c:	add	x8, x8, #0xa12
  41ea40:	adrp	x9, 442000 <_fini+0x1c30>
  41ea44:	add	x9, x9, #0xd8e
  41ea48:	add	x9, x9, #0x3
  41ea4c:	stur	x0, [x29, #-16]
  41ea50:	stur	x1, [x29, #-24]
  41ea54:	stur	x2, [x29, #-32]
  41ea58:	ldur	x10, [x29, #-24]
  41ea5c:	stur	x10, [x29, #-40]
  41ea60:	str	x8, [sp, #16]
  41ea64:	str	x9, [sp, #8]
  41ea68:	ldur	x8, [x29, #-16]
  41ea6c:	cmp	x8, #0x0
  41ea70:	cset	w9, ne  // ne = any
  41ea74:	mov	w10, #0x1                   	// #1
  41ea78:	eor	w9, w9, #0x1
  41ea7c:	eor	w9, w9, w10
  41ea80:	eor	w9, w9, w10
  41ea84:	and	w9, w9, #0x1
  41ea88:	mov	w0, w9
  41ea8c:	sxtw	x8, w0
  41ea90:	cbz	x8, 41eab8 <method_set_reboot_to_boot_loader_entry+0x8c>
  41ea94:	mov	w8, wzr
  41ea98:	mov	w0, w8
  41ea9c:	adrp	x1, 443000 <_fini+0x2c30>
  41eaa0:	add	x1, x1, #0x812
  41eaa4:	ldr	x2, [sp, #8]
  41eaa8:	mov	w3, #0xba6                 	// #2982
  41eaac:	adrp	x4, 446000 <_fini+0x5c30>
  41eab0:	add	x4, x4, #0xeed
  41eab4:	bl	406c68 <log_assert_failed_realm@plt>
  41eab8:	ldur	x8, [x29, #-40]
  41eabc:	cmp	x8, #0x0
  41eac0:	cset	w9, ne  // ne = any
  41eac4:	mov	w10, #0x1                   	// #1
  41eac8:	eor	w9, w9, #0x1
  41eacc:	eor	w9, w9, w10
  41ead0:	eor	w9, w9, w10
  41ead4:	and	w9, w9, #0x1
  41ead8:	mov	w0, w9
  41eadc:	sxtw	x8, w0
  41eae0:	cbz	x8, 41eb08 <method_set_reboot_to_boot_loader_entry+0xdc>
  41eae4:	mov	w8, wzr
  41eae8:	mov	w0, w8
  41eaec:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41eaf0:	add	x1, x1, #0x5ef
  41eaf4:	ldr	x2, [sp, #8]
  41eaf8:	mov	w3, #0xba7                 	// #2983
  41eafc:	adrp	x4, 446000 <_fini+0x5c30>
  41eb00:	add	x4, x4, #0xeed
  41eb04:	bl	406c68 <log_assert_failed_realm@plt>
  41eb08:	ldur	x0, [x29, #-16]
  41eb0c:	adrp	x1, 442000 <_fini+0x1c30>
  41eb10:	add	x1, x1, #0xf2
  41eb14:	sub	x2, x29, #0x38
  41eb18:	bl	4074c8 <sd_bus_message_read@plt>
  41eb1c:	stur	w0, [x29, #-60]
  41eb20:	ldur	w8, [x29, #-60]
  41eb24:	cmp	w8, #0x0
  41eb28:	cset	w8, ge  // ge = tcont
  41eb2c:	tbnz	w8, #0, 41eb3c <method_set_reboot_to_boot_loader_entry+0x110>
  41eb30:	ldur	w8, [x29, #-60]
  41eb34:	stur	w8, [x29, #-4]
  41eb38:	b	41f028 <method_set_reboot_to_boot_loader_entry+0x5fc>
  41eb3c:	ldur	x0, [x29, #-56]
  41eb40:	bl	42099c <isempty>
  41eb44:	tbnz	w0, #0, 41eb4c <method_set_reboot_to_boot_loader_entry+0x120>
  41eb48:	b	41eb58 <method_set_reboot_to_boot_loader_entry+0x12c>
  41eb4c:	mov	x8, xzr
  41eb50:	stur	x8, [x29, #-56]
  41eb54:	b	41ebe0 <method_set_reboot_to_boot_loader_entry+0x1b4>
  41eb58:	ldur	x0, [x29, #-56]
  41eb5c:	bl	407558 <efi_loader_entry_name_valid@plt>
  41eb60:	tbnz	w0, #0, 41eb68 <method_set_reboot_to_boot_loader_entry+0x13c>
  41eb64:	b	41ebbc <method_set_reboot_to_boot_loader_entry+0x190>
  41eb68:	ldur	x0, [x29, #-56]
  41eb6c:	bl	424244 <boot_loader_entry_exists>
  41eb70:	stur	w0, [x29, #-60]
  41eb74:	ldur	w8, [x29, #-60]
  41eb78:	cmp	w8, #0x0
  41eb7c:	cset	w8, ge  // ge = tcont
  41eb80:	tbnz	w8, #0, 41eb90 <method_set_reboot_to_boot_loader_entry+0x164>
  41eb84:	ldur	w8, [x29, #-60]
  41eb88:	stur	w8, [x29, #-4]
  41eb8c:	b	41f028 <method_set_reboot_to_boot_loader_entry+0x5fc>
  41eb90:	ldur	w8, [x29, #-60]
  41eb94:	cbnz	w8, 41ebb8 <method_set_reboot_to_boot_loader_entry+0x18c>
  41eb98:	ldur	x0, [x29, #-32]
  41eb9c:	ldur	x3, [x29, #-56]
  41eba0:	ldr	x1, [sp, #16]
  41eba4:	adrp	x2, 446000 <_fini+0x5c30>
  41eba8:	add	x2, x2, #0xf42
  41ebac:	bl	407468 <sd_bus_error_setf@plt>
  41ebb0:	stur	w0, [x29, #-4]
  41ebb4:	b	41f028 <method_set_reboot_to_boot_loader_entry+0x5fc>
  41ebb8:	b	41ebe0 <method_set_reboot_to_boot_loader_entry+0x1b4>
  41ebbc:	ldur	x0, [x29, #-32]
  41ebc0:	ldur	x3, [x29, #-56]
  41ebc4:	adrp	x1, 445000 <_fini+0x4c30>
  41ebc8:	add	x1, x1, #0x37d
  41ebcc:	adrp	x2, 446000 <_fini+0x5c30>
  41ebd0:	add	x2, x2, #0xf67
  41ebd4:	bl	407468 <sd_bus_error_setf@plt>
  41ebd8:	stur	w0, [x29, #-4]
  41ebdc:	b	41f028 <method_set_reboot_to_boot_loader_entry+0x5fc>
  41ebe0:	adrp	x0, 444000 <_fini+0x3c30>
  41ebe4:	add	x0, x0, #0x8c7
  41ebe8:	bl	407518 <getenv_bool@plt>
  41ebec:	stur	w0, [x29, #-60]
  41ebf0:	ldur	w8, [x29, #-60]
  41ebf4:	mov	w9, #0xfffffffa            	// #-6
  41ebf8:	cmp	w8, w9
  41ebfc:	b.ne	41ece0 <method_set_reboot_to_boot_loader_entry+0x2b4>  // b.any
  41ec00:	sub	x0, x29, #0x48
  41ec04:	bl	407778 <efi_loader_get_features@plt>
  41ec08:	stur	w0, [x29, #-60]
  41ec0c:	ldur	w8, [x29, #-60]
  41ec10:	cmp	w8, #0x0
  41ec14:	cset	w8, ge  // ge = tcont
  41ec18:	tbnz	w8, #0, 41ec98 <method_set_reboot_to_boot_loader_entry+0x26c>
  41ec1c:	mov	w8, #0x4                   	// #4
  41ec20:	stur	w8, [x29, #-76]
  41ec24:	ldur	w8, [x29, #-60]
  41ec28:	str	w8, [sp, #80]
  41ec2c:	str	wzr, [sp, #76]
  41ec30:	ldr	w0, [sp, #76]
  41ec34:	bl	406c08 <log_get_max_level_realm@plt>
  41ec38:	ldur	w8, [x29, #-76]
  41ec3c:	and	w8, w8, #0x7
  41ec40:	cmp	w0, w8
  41ec44:	b.lt	41ec7c <method_set_reboot_to_boot_loader_entry+0x250>  // b.tstop
  41ec48:	ldr	w8, [sp, #76]
  41ec4c:	ldur	w9, [x29, #-76]
  41ec50:	orr	w0, w9, w8, lsl #10
  41ec54:	ldr	w1, [sp, #80]
  41ec58:	ldr	x2, [sp, #8]
  41ec5c:	mov	w3, #0xbc0                 	// #3008
  41ec60:	adrp	x4, 446000 <_fini+0x5c30>
  41ec64:	add	x4, x4, #0xf9b
  41ec68:	adrp	x5, 446000 <_fini+0x5c30>
  41ec6c:	add	x5, x5, #0xfc2
  41ec70:	bl	406c18 <log_internal_realm@plt>
  41ec74:	str	w0, [sp, #4]
  41ec78:	b	41ec90 <method_set_reboot_to_boot_loader_entry+0x264>
  41ec7c:	ldr	w0, [sp, #80]
  41ec80:	bl	406c28 <abs@plt>
  41ec84:	mov	w8, wzr
  41ec88:	subs	w8, w8, w0, uxtb
  41ec8c:	str	w8, [sp, #4]
  41ec90:	ldr	w8, [sp, #4]
  41ec94:	str	w8, [sp, #72]
  41ec98:	ldur	w8, [x29, #-60]
  41ec9c:	cmp	w8, #0x0
  41eca0:	cset	w8, lt  // lt = tstop
  41eca4:	tbnz	w8, #0, 41ecb8 <method_set_reboot_to_boot_loader_entry+0x28c>
  41eca8:	ldur	x8, [x29, #-72]
  41ecac:	mvn	x8, x8
  41ecb0:	and	x8, x8, #0x8
  41ecb4:	cbz	x8, 41ecd4 <method_set_reboot_to_boot_loader_entry+0x2a8>
  41ecb8:	ldur	x0, [x29, #-32]
  41ecbc:	ldr	x1, [sp, #16]
  41ecc0:	adrp	x2, 447000 <_fini+0x6c30>
  41ecc4:	add	x2, x2, #0xd
  41ecc8:	bl	407468 <sd_bus_error_setf@plt>
  41eccc:	stur	w0, [x29, #-4]
  41ecd0:	b	41f028 <method_set_reboot_to_boot_loader_entry+0x5fc>
  41ecd4:	mov	w8, #0x1                   	// #1
  41ecd8:	sturb	w8, [x29, #-41]
  41ecdc:	b	41eda0 <method_set_reboot_to_boot_loader_entry+0x374>
  41ece0:	ldur	w8, [x29, #-60]
  41ece4:	cmp	w8, #0x0
  41ece8:	cset	w8, gt
  41ecec:	tbnz	w8, #0, 41ed98 <method_set_reboot_to_boot_loader_entry+0x36c>
  41ecf0:	ldur	w8, [x29, #-60]
  41ecf4:	cmp	w8, #0x0
  41ecf8:	cset	w8, ge  // ge = tcont
  41ecfc:	tbnz	w8, #0, 41ed7c <method_set_reboot_to_boot_loader_entry+0x350>
  41ed00:	mov	w8, #0x4                   	// #4
  41ed04:	str	w8, [sp, #68]
  41ed08:	ldur	w8, [x29, #-60]
  41ed0c:	str	w8, [sp, #64]
  41ed10:	str	wzr, [sp, #60]
  41ed14:	ldr	w0, [sp, #60]
  41ed18:	bl	406c08 <log_get_max_level_realm@plt>
  41ed1c:	ldr	w8, [sp, #68]
  41ed20:	and	w8, w8, #0x7
  41ed24:	cmp	w0, w8
  41ed28:	b.lt	41ed60 <method_set_reboot_to_boot_loader_entry+0x334>  // b.tstop
  41ed2c:	ldr	w8, [sp, #60]
  41ed30:	ldr	w9, [sp, #68]
  41ed34:	orr	w0, w9, w8, lsl #10
  41ed38:	ldr	w1, [sp, #64]
  41ed3c:	ldr	x2, [sp, #8]
  41ed40:	mov	w3, #0xbca                 	// #3018
  41ed44:	adrp	x4, 446000 <_fini+0x5c30>
  41ed48:	add	x4, x4, #0xf9b
  41ed4c:	adrp	x5, 444000 <_fini+0x3c30>
  41ed50:	add	x5, x5, #0x995
  41ed54:	bl	406c18 <log_internal_realm@plt>
  41ed58:	str	w0, [sp]
  41ed5c:	b	41ed74 <method_set_reboot_to_boot_loader_entry+0x348>
  41ed60:	ldr	w0, [sp, #64]
  41ed64:	bl	406c28 <abs@plt>
  41ed68:	mov	w8, wzr
  41ed6c:	subs	w8, w8, w0, uxtb
  41ed70:	str	w8, [sp]
  41ed74:	ldr	w8, [sp]
  41ed78:	str	w8, [sp, #56]
  41ed7c:	ldur	x0, [x29, #-32]
  41ed80:	ldr	x1, [sp, #16]
  41ed84:	adrp	x2, 447000 <_fini+0x6c30>
  41ed88:	add	x2, x2, #0xd
  41ed8c:	bl	407468 <sd_bus_error_setf@plt>
  41ed90:	stur	w0, [x29, #-4]
  41ed94:	b	41f028 <method_set_reboot_to_boot_loader_entry+0x5fc>
  41ed98:	mov	w8, #0x0                   	// #0
  41ed9c:	sturb	w8, [x29, #-41]
  41eda0:	ldur	x0, [x29, #-16]
  41eda4:	ldur	x8, [x29, #-40]
  41eda8:	add	x6, x8, #0x1b0
  41edac:	ldur	x7, [x29, #-32]
  41edb0:	mov	w1, #0x15                  	// #21
  41edb4:	adrp	x2, 446000 <_fini+0x5c30>
  41edb8:	add	x2, x2, #0xeb6
  41edbc:	mov	x8, xzr
  41edc0:	mov	x3, x8
  41edc4:	mov	w9, wzr
  41edc8:	and	w4, w9, #0x1
  41edcc:	mov	w5, #0xffffffff            	// #-1
  41edd0:	bl	407678 <bus_verify_polkit_async@plt>
  41edd4:	stur	w0, [x29, #-60]
  41edd8:	ldur	w9, [x29, #-60]
  41eddc:	cmp	w9, #0x0
  41ede0:	cset	w9, ge  // ge = tcont
  41ede4:	tbnz	w9, #0, 41edf4 <method_set_reboot_to_boot_loader_entry+0x3c8>
  41ede8:	ldur	w8, [x29, #-60]
  41edec:	stur	w8, [x29, #-4]
  41edf0:	b	41f028 <method_set_reboot_to_boot_loader_entry+0x5fc>
  41edf4:	ldur	w8, [x29, #-60]
  41edf8:	cbnz	w8, 41ee08 <method_set_reboot_to_boot_loader_entry+0x3dc>
  41edfc:	mov	w8, #0x1                   	// #1
  41ee00:	stur	w8, [x29, #-4]
  41ee04:	b	41f028 <method_set_reboot_to_boot_loader_entry+0x5fc>
  41ee08:	ldurb	w8, [x29, #-41]
  41ee0c:	tbnz	w8, #0, 41ee14 <method_set_reboot_to_boot_loader_entry+0x3e8>
  41ee10:	b	41ef90 <method_set_reboot_to_boot_loader_entry+0x564>
  41ee14:	ldur	x0, [x29, #-56]
  41ee18:	bl	42099c <isempty>
  41ee1c:	tbnz	w0, #0, 41ee24 <method_set_reboot_to_boot_loader_entry+0x3f8>
  41ee20:	b	41eed0 <method_set_reboot_to_boot_loader_entry+0x4a4>
  41ee24:	add	x8, sp, #0x28
  41ee28:	mov	w9, #0x4a                  	// #74
  41ee2c:	strb	w9, [sp, #40]
  41ee30:	mov	w9, #0x67                  	// #103
  41ee34:	strb	w9, [x8, #1]
  41ee38:	mov	w9, #0xb0                  	// #176
  41ee3c:	strb	w9, [x8, #2]
  41ee40:	mov	w9, #0x82                  	// #130
  41ee44:	strb	w9, [x8, #3]
  41ee48:	mov	w9, #0xa                   	// #10
  41ee4c:	strb	w9, [x8, #4]
  41ee50:	mov	w9, #0x4c                  	// #76
  41ee54:	strb	w9, [x8, #5]
  41ee58:	mov	w9, #0x41                  	// #65
  41ee5c:	strb	w9, [x8, #6]
  41ee60:	mov	w9, #0xcf                  	// #207
  41ee64:	strb	w9, [x8, #7]
  41ee68:	mov	w9, #0xb6                  	// #182
  41ee6c:	strb	w9, [x8, #8]
  41ee70:	mov	w9, #0xc7                  	// #199
  41ee74:	strb	w9, [x8, #9]
  41ee78:	mov	w9, #0x44                  	// #68
  41ee7c:	strb	w9, [x8, #10]
  41ee80:	mov	w9, #0xb                   	// #11
  41ee84:	strb	w9, [x8, #11]
  41ee88:	mov	w9, #0x29                  	// #41
  41ee8c:	strb	w9, [x8, #12]
  41ee90:	mov	w9, #0xbb                  	// #187
  41ee94:	strb	w9, [x8, #13]
  41ee98:	mov	w9, #0x8c                  	// #140
  41ee9c:	strb	w9, [x8, #14]
  41eea0:	mov	w9, #0x4f                  	// #79
  41eea4:	strb	w9, [x8, #15]
  41eea8:	ldr	x0, [sp, #40]
  41eeac:	ldr	x1, [sp, #48]
  41eeb0:	adrp	x2, 444000 <_fini+0x3c30>
  41eeb4:	add	x2, x2, #0x8eb
  41eeb8:	mov	x8, xzr
  41eebc:	mov	x3, x8
  41eec0:	mov	x4, x8
  41eec4:	bl	407788 <efi_set_variable@plt>
  41eec8:	stur	w0, [x29, #-60]
  41eecc:	b	41ef70 <method_set_reboot_to_boot_loader_entry+0x544>
  41eed0:	add	x8, sp, #0x18
  41eed4:	mov	w9, #0x4a                  	// #74
  41eed8:	strb	w9, [sp, #24]
  41eedc:	mov	w9, #0x67                  	// #103
  41eee0:	strb	w9, [x8, #1]
  41eee4:	mov	w9, #0xb0                  	// #176
  41eee8:	strb	w9, [x8, #2]
  41eeec:	mov	w9, #0x82                  	// #130
  41eef0:	strb	w9, [x8, #3]
  41eef4:	mov	w9, #0xa                   	// #10
  41eef8:	strb	w9, [x8, #4]
  41eefc:	mov	w9, #0x4c                  	// #76
  41ef00:	strb	w9, [x8, #5]
  41ef04:	mov	w9, #0x41                  	// #65
  41ef08:	strb	w9, [x8, #6]
  41ef0c:	mov	w9, #0xcf                  	// #207
  41ef10:	strb	w9, [x8, #7]
  41ef14:	mov	w9, #0xb6                  	// #182
  41ef18:	strb	w9, [x8, #8]
  41ef1c:	mov	w9, #0xc7                  	// #199
  41ef20:	strb	w9, [x8, #9]
  41ef24:	mov	w9, #0x44                  	// #68
  41ef28:	strb	w9, [x8, #10]
  41ef2c:	mov	w9, #0xb                   	// #11
  41ef30:	strb	w9, [x8, #11]
  41ef34:	mov	w9, #0x29                  	// #41
  41ef38:	strb	w9, [x8, #12]
  41ef3c:	mov	w9, #0xbb                  	// #187
  41ef40:	strb	w9, [x8, #13]
  41ef44:	mov	w9, #0x8c                  	// #140
  41ef48:	strb	w9, [x8, #14]
  41ef4c:	mov	w9, #0x4f                  	// #79
  41ef50:	strb	w9, [x8, #15]
  41ef54:	ldur	x3, [x29, #-56]
  41ef58:	ldr	x0, [sp, #24]
  41ef5c:	ldr	x1, [sp, #32]
  41ef60:	adrp	x2, 444000 <_fini+0x3c30>
  41ef64:	add	x2, x2, #0x8eb
  41ef68:	bl	407798 <efi_set_variable_string@plt>
  41ef6c:	stur	w0, [x29, #-60]
  41ef70:	ldur	w8, [x29, #-60]
  41ef74:	cmp	w8, #0x0
  41ef78:	cset	w8, ge  // ge = tcont
  41ef7c:	tbnz	w8, #0, 41ef8c <method_set_reboot_to_boot_loader_entry+0x560>
  41ef80:	ldur	w8, [x29, #-60]
  41ef84:	stur	w8, [x29, #-4]
  41ef88:	b	41f028 <method_set_reboot_to_boot_loader_entry+0x5fc>
  41ef8c:	b	41f014 <method_set_reboot_to_boot_loader_entry+0x5e8>
  41ef90:	ldur	x0, [x29, #-56]
  41ef94:	bl	42099c <isempty>
  41ef98:	tbnz	w0, #0, 41efa0 <method_set_reboot_to_boot_loader_entry+0x574>
  41ef9c:	b	41efe4 <method_set_reboot_to_boot_loader_entry+0x5b8>
  41efa0:	adrp	x0, 444000 <_fini+0x3c30>
  41efa4:	add	x0, x0, #0x9ce
  41efa8:	bl	4076e8 <unlink@plt>
  41efac:	cmp	w0, #0x0
  41efb0:	cset	w8, ge  // ge = tcont
  41efb4:	tbnz	w8, #0, 41efe0 <method_set_reboot_to_boot_loader_entry+0x5b4>
  41efb8:	bl	406e08 <__errno_location@plt>
  41efbc:	ldr	w8, [x0]
  41efc0:	cmp	w8, #0x2
  41efc4:	b.eq	41efe0 <method_set_reboot_to_boot_loader_entry+0x5b4>  // b.none
  41efc8:	bl	406e08 <__errno_location@plt>
  41efcc:	ldr	w8, [x0]
  41efd0:	mov	w9, wzr
  41efd4:	subs	w8, w9, w8
  41efd8:	stur	w8, [x29, #-4]
  41efdc:	b	41f028 <method_set_reboot_to_boot_loader_entry+0x5fc>
  41efe0:	b	41f014 <method_set_reboot_to_boot_loader_entry+0x5e8>
  41efe4:	ldur	x1, [x29, #-56]
  41efe8:	adrp	x0, 447000 <_fini+0x6c30>
  41efec:	add	x0, x0, #0x42
  41eff0:	bl	422238 <write_string_file_atomic_label>
  41eff4:	stur	w0, [x29, #-60]
  41eff8:	ldur	w8, [x29, #-60]
  41effc:	cmp	w8, #0x0
  41f000:	cset	w8, ge  // ge = tcont
  41f004:	tbnz	w8, #0, 41f014 <method_set_reboot_to_boot_loader_entry+0x5e8>
  41f008:	ldur	w8, [x29, #-60]
  41f00c:	stur	w8, [x29, #-4]
  41f010:	b	41f028 <method_set_reboot_to_boot_loader_entry+0x5fc>
  41f014:	ldur	x0, [x29, #-16]
  41f018:	mov	x8, xzr
  41f01c:	mov	x1, x8
  41f020:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41f024:	stur	w0, [x29, #-4]
  41f028:	ldur	w0, [x29, #-4]
  41f02c:	ldp	x29, x30, [sp, #160]
  41f030:	add	sp, sp, #0xb0
  41f034:	ret

000000000041f038 <method_set_wall_message>:
  41f038:	sub	sp, sp, #0x70
  41f03c:	stp	x29, x30, [sp, #96]
  41f040:	add	x29, sp, #0x60
  41f044:	adrp	x8, 442000 <_fini+0x1c30>
  41f048:	add	x8, x8, #0xd8e
  41f04c:	add	x8, x8, #0x3
  41f050:	stur	x0, [x29, #-16]
  41f054:	stur	x1, [x29, #-24]
  41f058:	stur	x2, [x29, #-32]
  41f05c:	ldur	x9, [x29, #-24]
  41f060:	str	x9, [sp, #48]
  41f064:	str	x8, [sp, #24]
  41f068:	ldur	x8, [x29, #-16]
  41f06c:	cmp	x8, #0x0
  41f070:	cset	w9, ne  // ne = any
  41f074:	mov	w10, #0x1                   	// #1
  41f078:	eor	w9, w9, #0x1
  41f07c:	eor	w9, w9, w10
  41f080:	eor	w9, w9, w10
  41f084:	and	w9, w9, #0x1
  41f088:	mov	w0, w9
  41f08c:	sxtw	x8, w0
  41f090:	cbz	x8, 41f0b8 <method_set_wall_message+0x80>
  41f094:	mov	w8, wzr
  41f098:	mov	w0, w8
  41f09c:	adrp	x1, 443000 <_fini+0x2c30>
  41f0a0:	add	x1, x1, #0x812
  41f0a4:	ldr	x2, [sp, #24]
  41f0a8:	mov	w3, #0xc4d                 	// #3149
  41f0ac:	adrp	x4, 447000 <_fini+0x6c30>
  41f0b0:	add	x4, x4, #0x96
  41f0b4:	bl	406c68 <log_assert_failed_realm@plt>
  41f0b8:	ldr	x8, [sp, #48]
  41f0bc:	cmp	x8, #0x0
  41f0c0:	cset	w9, ne  // ne = any
  41f0c4:	mov	w10, #0x1                   	// #1
  41f0c8:	eor	w9, w9, #0x1
  41f0cc:	eor	w9, w9, w10
  41f0d0:	eor	w9, w9, w10
  41f0d4:	and	w9, w9, #0x1
  41f0d8:	mov	w0, w9
  41f0dc:	sxtw	x8, w0
  41f0e0:	cbz	x8, 41f108 <method_set_wall_message+0xd0>
  41f0e4:	mov	w8, wzr
  41f0e8:	mov	w0, w8
  41f0ec:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41f0f0:	add	x1, x1, #0x5ef
  41f0f4:	ldr	x2, [sp, #24]
  41f0f8:	mov	w3, #0xc4e                 	// #3150
  41f0fc:	adrp	x4, 447000 <_fini+0x6c30>
  41f100:	add	x4, x4, #0x96
  41f104:	bl	406c68 <log_assert_failed_realm@plt>
  41f108:	ldur	x0, [x29, #-16]
  41f10c:	adrp	x1, 443000 <_fini+0x2c30>
  41f110:	add	x1, x1, #0x7a4
  41f114:	add	x2, sp, #0x28
  41f118:	add	x3, sp, #0x24
  41f11c:	bl	4074c8 <sd_bus_message_read@plt>
  41f120:	stur	w0, [x29, #-36]
  41f124:	ldur	w8, [x29, #-36]
  41f128:	cmp	w8, #0x0
  41f12c:	cset	w8, ge  // ge = tcont
  41f130:	tbnz	w8, #0, 41f140 <method_set_wall_message+0x108>
  41f134:	ldur	w8, [x29, #-36]
  41f138:	stur	w8, [x29, #-4]
  41f13c:	b	41f22c <method_set_wall_message+0x1f4>
  41f140:	ldur	x0, [x29, #-16]
  41f144:	ldr	x8, [sp, #48]
  41f148:	add	x6, x8, #0x1b0
  41f14c:	ldur	x7, [x29, #-32]
  41f150:	mov	w1, #0x15                  	// #21
  41f154:	adrp	x2, 447000 <_fini+0x6c30>
  41f158:	add	x2, x2, #0xdc
  41f15c:	mov	x8, xzr
  41f160:	mov	x3, x8
  41f164:	mov	w9, wzr
  41f168:	and	w4, w9, #0x1
  41f16c:	mov	w5, #0xffffffff            	// #-1
  41f170:	bl	407678 <bus_verify_polkit_async@plt>
  41f174:	stur	w0, [x29, #-36]
  41f178:	ldur	w9, [x29, #-36]
  41f17c:	cmp	w9, #0x0
  41f180:	cset	w9, ge  // ge = tcont
  41f184:	tbnz	w9, #0, 41f194 <method_set_wall_message+0x15c>
  41f188:	ldur	w8, [x29, #-36]
  41f18c:	stur	w8, [x29, #-4]
  41f190:	b	41f22c <method_set_wall_message+0x1f4>
  41f194:	ldur	w8, [x29, #-36]
  41f198:	cbnz	w8, 41f1a8 <method_set_wall_message+0x170>
  41f19c:	mov	w8, #0x1                   	// #1
  41f1a0:	stur	w8, [x29, #-4]
  41f1a4:	b	41f22c <method_set_wall_message+0x1f4>
  41f1a8:	ldr	x8, [sp, #48]
  41f1ac:	add	x0, x8, #0x150
  41f1b0:	ldr	x8, [sp, #40]
  41f1b4:	str	x0, [sp, #16]
  41f1b8:	mov	x0, x8
  41f1bc:	bl	4243fc <empty_to_null>
  41f1c0:	ldr	x8, [sp, #16]
  41f1c4:	str	x0, [sp, #8]
  41f1c8:	mov	x0, x8
  41f1cc:	ldr	x1, [sp, #8]
  41f1d0:	bl	407428 <free_and_strdup@plt>
  41f1d4:	stur	w0, [x29, #-36]
  41f1d8:	ldur	w9, [x29, #-36]
  41f1dc:	cmp	w9, #0x0
  41f1e0:	cset	w9, ge  // ge = tcont
  41f1e4:	tbnz	w9, #0, 41f20c <method_set_wall_message+0x1d4>
  41f1e8:	mov	w8, wzr
  41f1ec:	mov	w0, w8
  41f1f0:	ldr	x1, [sp, #24]
  41f1f4:	mov	w2, #0xc63                 	// #3171
  41f1f8:	adrp	x3, 447000 <_fini+0x6c30>
  41f1fc:	add	x3, x3, #0x104
  41f200:	bl	407008 <log_oom_internal@plt>
  41f204:	stur	w0, [x29, #-4]
  41f208:	b	41f22c <method_set_wall_message+0x1f4>
  41f20c:	ldr	w8, [sp, #36]
  41f210:	ldr	x9, [sp, #48]
  41f214:	str	w8, [x9, #344]
  41f218:	ldur	x0, [x29, #-16]
  41f21c:	mov	x9, xzr
  41f220:	mov	x1, x9
  41f224:	bl	4075b8 <sd_bus_reply_method_return@plt>
  41f228:	stur	w0, [x29, #-4]
  41f22c:	ldur	w0, [x29, #-4]
  41f230:	ldp	x29, x30, [sp, #96]
  41f234:	add	sp, sp, #0x70
  41f238:	ret

000000000041f23c <match_job_removed>:
  41f23c:	sub	sp, sp, #0xc0
  41f240:	stp	x29, x30, [sp, #176]
  41f244:	add	x29, sp, #0xb0
  41f248:	adrp	x8, 442000 <_fini+0x1c30>
  41f24c:	add	x8, x8, #0xd8e
  41f250:	add	x8, x8, #0x3
  41f254:	stur	x0, [x29, #-16]
  41f258:	stur	x1, [x29, #-24]
  41f25c:	stur	x2, [x29, #-32]
  41f260:	ldur	x9, [x29, #-24]
  41f264:	stur	x9, [x29, #-64]
  41f268:	str	x8, [sp, #40]
  41f26c:	ldur	x8, [x29, #-16]
  41f270:	cmp	x8, #0x0
  41f274:	cset	w9, ne  // ne = any
  41f278:	mov	w10, #0x1                   	// #1
  41f27c:	eor	w9, w9, #0x1
  41f280:	eor	w9, w9, w10
  41f284:	eor	w9, w9, w10
  41f288:	and	w9, w9, #0x1
  41f28c:	mov	w0, w9
  41f290:	sxtw	x8, w0
  41f294:	cbz	x8, 41f2bc <match_job_removed+0x80>
  41f298:	mov	w8, wzr
  41f29c:	mov	w0, w8
  41f2a0:	adrp	x1, 443000 <_fini+0x2c30>
  41f2a4:	add	x1, x1, #0x812
  41f2a8:	ldr	x2, [sp, #40]
  41f2ac:	mov	w3, #0xd6c                 	// #3436
  41f2b0:	adrp	x4, 443000 <_fini+0x2c30>
  41f2b4:	add	x4, x4, #0x81a
  41f2b8:	bl	406c68 <log_assert_failed_realm@plt>
  41f2bc:	ldur	x8, [x29, #-64]
  41f2c0:	cmp	x8, #0x0
  41f2c4:	cset	w9, ne  // ne = any
  41f2c8:	mov	w10, #0x1                   	// #1
  41f2cc:	eor	w9, w9, #0x1
  41f2d0:	eor	w9, w9, w10
  41f2d4:	eor	w9, w9, w10
  41f2d8:	and	w9, w9, #0x1
  41f2dc:	mov	w0, w9
  41f2e0:	sxtw	x8, w0
  41f2e4:	cbz	x8, 41f30c <match_job_removed+0xd0>
  41f2e8:	mov	w8, wzr
  41f2ec:	mov	w0, w8
  41f2f0:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41f2f4:	add	x1, x1, #0x5ef
  41f2f8:	ldr	x2, [sp, #40]
  41f2fc:	mov	w3, #0xd6d                 	// #3437
  41f300:	adrp	x4, 443000 <_fini+0x2c30>
  41f304:	add	x4, x4, #0x81a
  41f308:	bl	406c68 <log_assert_failed_realm@plt>
  41f30c:	ldur	x0, [x29, #-16]
  41f310:	adrp	x1, 443000 <_fini+0x2c30>
  41f314:	add	x1, x1, #0x85a
  41f318:	sub	x2, x29, #0x4c
  41f31c:	sub	x3, x29, #0x28
  41f320:	sub	x4, x29, #0x38
  41f324:	sub	x5, x29, #0x30
  41f328:	bl	4074c8 <sd_bus_message_read@plt>
  41f32c:	str	w0, [sp, #84]
  41f330:	ldr	w8, [sp, #84]
  41f334:	cmp	w8, #0x0
  41f338:	cset	w8, ge  // ge = tcont
  41f33c:	tbnz	w8, #0, 41f3c4 <match_job_removed+0x188>
  41f340:	mov	w8, #0x3                   	// #3
  41f344:	str	w8, [sp, #80]
  41f348:	ldr	w8, [sp, #84]
  41f34c:	str	w8, [sp, #76]
  41f350:	str	wzr, [sp, #72]
  41f354:	ldr	w0, [sp, #72]
  41f358:	bl	406c08 <log_get_max_level_realm@plt>
  41f35c:	ldr	w8, [sp, #80]
  41f360:	and	w8, w8, #0x7
  41f364:	cmp	w0, w8
  41f368:	b.lt	41f3a0 <match_job_removed+0x164>  // b.tstop
  41f36c:	ldr	w8, [sp, #72]
  41f370:	ldr	w9, [sp, #80]
  41f374:	orr	w0, w9, w8, lsl #10
  41f378:	ldr	w1, [sp, #76]
  41f37c:	ldr	x2, [sp, #40]
  41f380:	mov	w3, #0xd71                 	// #3441
  41f384:	adrp	x4, 443000 <_fini+0x2c30>
  41f388:	add	x4, x4, #0x85f
  41f38c:	adrp	x5, 443000 <_fini+0x2c30>
  41f390:	add	x5, x5, #0x871
  41f394:	bl	406c18 <log_internal_realm@plt>
  41f398:	str	w0, [sp, #36]
  41f39c:	b	41f3b4 <match_job_removed+0x178>
  41f3a0:	ldr	w0, [sp, #76]
  41f3a4:	bl	406c28 <abs@plt>
  41f3a8:	mov	w8, wzr
  41f3ac:	subs	w8, w8, w0, uxtb
  41f3b0:	str	w8, [sp, #36]
  41f3b4:	ldr	w8, [sp, #36]
  41f3b8:	str	w8, [sp, #68]
  41f3bc:	stur	wzr, [x29, #-4]
  41f3c0:	b	41f5e4 <match_job_removed+0x3a8>
  41f3c4:	ldur	x8, [x29, #-64]
  41f3c8:	ldr	x8, [x8, #264]
  41f3cc:	cbz	x8, 41f4d4 <match_job_removed+0x298>
  41f3d0:	ldur	x8, [x29, #-64]
  41f3d4:	ldr	x0, [x8, #264]
  41f3d8:	ldur	x1, [x29, #-40]
  41f3dc:	bl	407158 <strcmp@plt>
  41f3e0:	cbnz	w0, 41f4d4 <match_job_removed+0x298>
  41f3e4:	mov	w8, #0x6                   	// #6
  41f3e8:	str	w8, [sp, #64]
  41f3ec:	str	wzr, [sp, #60]
  41f3f0:	str	wzr, [sp, #56]
  41f3f4:	ldr	w0, [sp, #56]
  41f3f8:	bl	406c08 <log_get_max_level_realm@plt>
  41f3fc:	ldr	w8, [sp, #64]
  41f400:	and	w8, w8, #0x7
  41f404:	cmp	w0, w8
  41f408:	b.lt	41f46c <match_job_removed+0x230>  // b.tstop
  41f40c:	ldr	w8, [sp, #56]
  41f410:	ldr	w9, [sp, #64]
  41f414:	orr	w0, w9, w8, lsl #10
  41f418:	ldr	w1, [sp, #60]
  41f41c:	ldur	x10, [x29, #-64]
  41f420:	ldr	w8, [x10, #248]
  41f424:	str	w0, [sp, #32]
  41f428:	mov	w0, w8
  41f42c:	str	w1, [sp, #28]
  41f430:	bl	426b8c <inhibit_what_to_string>
  41f434:	ldr	w8, [sp, #32]
  41f438:	str	x0, [sp, #16]
  41f43c:	mov	w0, w8
  41f440:	ldr	w1, [sp, #28]
  41f444:	ldr	x2, [sp, #40]
  41f448:	mov	w3, #0xd76                 	// #3446
  41f44c:	adrp	x4, 443000 <_fini+0x2c30>
  41f450:	add	x4, x4, #0x85f
  41f454:	adrp	x5, 443000 <_fini+0x2c30>
  41f458:	add	x5, x5, #0x891
  41f45c:	ldr	x6, [sp, #16]
  41f460:	bl	406c18 <log_internal_realm@plt>
  41f464:	str	w0, [sp, #12]
  41f468:	b	41f480 <match_job_removed+0x244>
  41f46c:	ldr	w0, [sp, #60]
  41f470:	bl	406c28 <abs@plt>
  41f474:	mov	w8, wzr
  41f478:	subs	w8, w8, w0, uxtb
  41f47c:	str	w8, [sp, #12]
  41f480:	ldr	w8, [sp, #12]
  41f484:	str	w8, [sp, #52]
  41f488:	ldur	x0, [x29, #-64]
  41f48c:	ldur	x9, [x29, #-64]
  41f490:	ldr	w1, [x9, #248]
  41f494:	mov	w8, wzr
  41f498:	and	w2, w8, #0x1
  41f49c:	bl	4159a8 <send_prepare_for>
  41f4a0:	ldur	x9, [x29, #-64]
  41f4a4:	ldr	x9, [x9, #264]
  41f4a8:	mov	x0, x9
  41f4ac:	bl	41f5f4 <mfree>
  41f4b0:	ldur	x9, [x29, #-64]
  41f4b4:	str	x0, [x9, #264]
  41f4b8:	ldur	x9, [x29, #-64]
  41f4bc:	mov	x10, xzr
  41f4c0:	str	x10, [x9, #256]
  41f4c4:	ldur	x9, [x29, #-64]
  41f4c8:	str	wzr, [x9, #248]
  41f4cc:	stur	wzr, [x29, #-4]
  41f4d0:	b	41f5e4 <match_job_removed+0x3a8>
  41f4d4:	ldur	x8, [x29, #-64]
  41f4d8:	ldr	x0, [x8, #216]
  41f4dc:	ldur	x1, [x29, #-56]
  41f4e0:	bl	4148a0 <hashmap_get>
  41f4e4:	stur	x0, [x29, #-72]
  41f4e8:	ldur	x8, [x29, #-72]
  41f4ec:	cbz	x8, 41f550 <match_job_removed+0x314>
  41f4f0:	ldur	x0, [x29, #-40]
  41f4f4:	ldur	x8, [x29, #-72]
  41f4f8:	ldr	x1, [x8, #128]
  41f4fc:	bl	41f624 <streq_ptr>
  41f500:	tbnz	w0, #0, 41f508 <match_job_removed+0x2cc>
  41f504:	b	41f548 <match_job_removed+0x30c>
  41f508:	ldur	x8, [x29, #-72]
  41f50c:	ldr	x0, [x8, #128]
  41f510:	bl	41f5f4 <mfree>
  41f514:	ldur	x8, [x29, #-72]
  41f518:	str	x0, [x8, #128]
  41f51c:	ldur	x0, [x29, #-72]
  41f520:	ldur	x1, [x29, #-56]
  41f524:	ldur	x2, [x29, #-48]
  41f528:	bl	41f65c <session_jobs_reply>
  41f52c:	ldur	x8, [x29, #-72]
  41f530:	mov	x0, x8
  41f534:	bl	432bf8 <session_save>
  41f538:	ldur	x8, [x29, #-72]
  41f53c:	ldr	x8, [x8, #40]
  41f540:	mov	x0, x8
  41f544:	bl	43a320 <user_save>
  41f548:	ldur	x0, [x29, #-72]
  41f54c:	bl	4362d0 <session_add_to_gc_queue>
  41f550:	ldur	x8, [x29, #-64]
  41f554:	ldr	x0, [x8, #224]
  41f558:	ldur	x1, [x29, #-56]
  41f55c:	bl	4148a0 <hashmap_get>
  41f560:	str	x0, [sp, #88]
  41f564:	ldr	x8, [sp, #88]
  41f568:	cbz	x8, 41f5e0 <match_job_removed+0x3a4>
  41f56c:	ldur	x0, [x29, #-40]
  41f570:	ldr	x8, [sp, #88]
  41f574:	ldr	x1, [x8, #72]
  41f578:	bl	41f624 <streq_ptr>
  41f57c:	tbnz	w0, #0, 41f584 <match_job_removed+0x348>
  41f580:	b	41f5d8 <match_job_removed+0x39c>
  41f584:	ldr	x8, [sp, #88]
  41f588:	ldr	x0, [x8, #72]
  41f58c:	bl	41f5f4 <mfree>
  41f590:	ldr	x8, [sp, #88]
  41f594:	str	x0, [x8, #72]
  41f598:	ldr	x8, [sp, #88]
  41f59c:	ldr	x8, [x8, #128]
  41f5a0:	stur	x8, [x29, #-72]
  41f5a4:	ldur	x8, [x29, #-72]
  41f5a8:	cbz	x8, 41f5d0 <match_job_removed+0x394>
  41f5ac:	ldur	x0, [x29, #-72]
  41f5b0:	ldur	x1, [x29, #-56]
  41f5b4:	mov	x8, xzr
  41f5b8:	mov	x2, x8
  41f5bc:	bl	41f65c <session_jobs_reply>
  41f5c0:	ldur	x8, [x29, #-72]
  41f5c4:	ldr	x8, [x8, #256]
  41f5c8:	stur	x8, [x29, #-72]
  41f5cc:	b	41f5a4 <match_job_removed+0x368>
  41f5d0:	ldr	x0, [sp, #88]
  41f5d4:	bl	43a320 <user_save>
  41f5d8:	ldr	x0, [sp, #88]
  41f5dc:	bl	43b73c <user_add_to_gc_queue>
  41f5e0:	stur	wzr, [x29, #-4]
  41f5e4:	ldur	w0, [x29, #-4]
  41f5e8:	ldp	x29, x30, [sp, #176]
  41f5ec:	add	sp, sp, #0xc0
  41f5f0:	ret

000000000041f5f4 <mfree>:
  41f5f4:	sub	sp, sp, #0x20
  41f5f8:	stp	x29, x30, [sp, #16]
  41f5fc:	add	x29, sp, #0x10
  41f600:	mov	x8, xzr
  41f604:	str	x0, [sp, #8]
  41f608:	ldr	x0, [sp, #8]
  41f60c:	str	x8, [sp]
  41f610:	bl	406da8 <free@plt>
  41f614:	ldr	x0, [sp]
  41f618:	ldp	x29, x30, [sp, #16]
  41f61c:	add	sp, sp, #0x20
  41f620:	ret

000000000041f624 <streq_ptr>:
  41f624:	sub	sp, sp, #0x20
  41f628:	stp	x29, x30, [sp, #16]
  41f62c:	add	x29, sp, #0x10
  41f630:	str	x0, [sp, #8]
  41f634:	str	x1, [sp]
  41f638:	ldr	x0, [sp, #8]
  41f63c:	ldr	x1, [sp]
  41f640:	bl	407448 <strcmp_ptr@plt>
  41f644:	cmp	w0, #0x0
  41f648:	cset	w8, eq  // eq = none
  41f64c:	and	w0, w8, #0x1
  41f650:	ldp	x29, x30, [sp, #16]
  41f654:	add	sp, sp, #0x20
  41f658:	ret

000000000041f65c <session_jobs_reply>:
  41f65c:	sub	sp, sp, #0x60
  41f660:	stp	x29, x30, [sp, #80]
  41f664:	add	x29, sp, #0x50
  41f668:	adrp	x8, 442000 <_fini+0x1c30>
  41f66c:	add	x8, x8, #0xd8e
  41f670:	add	x8, x8, #0x3
  41f674:	stur	x0, [x29, #-16]
  41f678:	stur	x1, [x29, #-24]
  41f67c:	stur	x2, [x29, #-32]
  41f680:	str	x8, [sp, #16]
  41f684:	ldur	x8, [x29, #-16]
  41f688:	cmp	x8, #0x0
  41f68c:	cset	w9, ne  // ne = any
  41f690:	mov	w10, #0x1                   	// #1
  41f694:	eor	w9, w9, #0x1
  41f698:	eor	w9, w9, w10
  41f69c:	eor	w9, w9, w10
  41f6a0:	and	w9, w9, #0x1
  41f6a4:	mov	w0, w9
  41f6a8:	sxtw	x8, w0
  41f6ac:	cbz	x8, 41f6d4 <session_jobs_reply+0x78>
  41f6b0:	mov	w8, wzr
  41f6b4:	mov	w0, w8
  41f6b8:	adrp	x1, 442000 <_fini+0x1c30>
  41f6bc:	add	x1, x1, #0xf2
  41f6c0:	ldr	x2, [sp, #16]
  41f6c4:	mov	w3, #0xd53                 	// #3411
  41f6c8:	adrp	x4, 447000 <_fini+0x6c30>
  41f6cc:	add	x4, x4, #0x11c
  41f6d0:	bl	406c68 <log_assert_failed_realm@plt>
  41f6d4:	ldur	x8, [x29, #-24]
  41f6d8:	cmp	x8, #0x0
  41f6dc:	cset	w9, ne  // ne = any
  41f6e0:	mov	w10, #0x1                   	// #1
  41f6e4:	eor	w9, w9, #0x1
  41f6e8:	eor	w9, w9, w10
  41f6ec:	eor	w9, w9, w10
  41f6f0:	and	w9, w9, #0x1
  41f6f4:	mov	w0, w9
  41f6f8:	sxtw	x8, w0
  41f6fc:	cbz	x8, 41f724 <session_jobs_reply+0xc8>
  41f700:	mov	w8, wzr
  41f704:	mov	w0, w8
  41f708:	adrp	x1, 443000 <_fini+0x2c30>
  41f70c:	add	x1, x1, #0xc05
  41f710:	ldr	x2, [sp, #16]
  41f714:	mov	w3, #0xd54                 	// #3412
  41f718:	adrp	x4, 447000 <_fini+0x6c30>
  41f71c:	add	x4, x4, #0x11c
  41f720:	bl	406c68 <log_assert_failed_realm@plt>
  41f724:	ldur	x8, [x29, #-16]
  41f728:	ldrb	w9, [x8, #209]
  41f72c:	mov	w10, #0x1                   	// #1
  41f730:	lsr	w9, w9, w10
  41f734:	and	w9, w9, w10
  41f738:	tbnz	w9, #0, 41f744 <session_jobs_reply+0xe8>
  41f73c:	stur	wzr, [x29, #-4]
  41f740:	b	41f7c8 <session_jobs_reply+0x16c>
  41f744:	ldur	x8, [x29, #-32]
  41f748:	cbz	x8, 41f7b4 <session_jobs_reply+0x158>
  41f74c:	ldur	x0, [x29, #-32]
  41f750:	adrp	x1, 447000 <_fini+0x6c30>
  41f754:	add	x1, x1, #0x15a
  41f758:	bl	407158 <strcmp@plt>
  41f75c:	cbz	w0, 41f7b4 <session_jobs_reply+0x158>
  41f760:	add	x8, sp, #0x18
  41f764:	str	xzr, [sp, #24]
  41f768:	str	xzr, [sp, #32]
  41f76c:	str	xzr, [sp, #40]
  41f770:	ldur	x3, [x29, #-24]
  41f774:	ldur	x4, [x29, #-32]
  41f778:	mov	x0, x8
  41f77c:	adrp	x1, 447000 <_fini+0x6c30>
  41f780:	add	x1, x1, #0x15f
  41f784:	adrp	x2, 447000 <_fini+0x6c30>
  41f788:	add	x2, x2, #0x182
  41f78c:	str	x8, [sp, #8]
  41f790:	bl	407468 <sd_bus_error_setf@plt>
  41f794:	ldur	x8, [x29, #-16]
  41f798:	mov	x0, x8
  41f79c:	ldr	x1, [sp, #8]
  41f7a0:	bl	42f9cc <session_send_create_reply>
  41f7a4:	stur	w0, [x29, #-4]
  41f7a8:	ldr	x0, [sp, #8]
  41f7ac:	bl	4071e8 <sd_bus_error_free@plt>
  41f7b0:	b	41f7c8 <session_jobs_reply+0x16c>
  41f7b4:	ldur	x0, [x29, #-16]
  41f7b8:	mov	x8, xzr
  41f7bc:	mov	x1, x8
  41f7c0:	bl	42f9cc <session_send_create_reply>
  41f7c4:	stur	w0, [x29, #-4]
  41f7c8:	ldur	w0, [x29, #-4]
  41f7cc:	ldp	x29, x30, [sp, #80]
  41f7d0:	add	sp, sp, #0x60
  41f7d4:	ret

000000000041f7d8 <match_unit_removed>:
  41f7d8:	sub	sp, sp, #0x80
  41f7dc:	stp	x29, x30, [sp, #112]
  41f7e0:	add	x29, sp, #0x70
  41f7e4:	adrp	x8, 442000 <_fini+0x1c30>
  41f7e8:	add	x8, x8, #0xd8e
  41f7ec:	add	x8, x8, #0x3
  41f7f0:	stur	x0, [x29, #-16]
  41f7f4:	stur	x1, [x29, #-24]
  41f7f8:	stur	x2, [x29, #-32]
  41f7fc:	ldur	x9, [x29, #-24]
  41f800:	str	x9, [sp, #56]
  41f804:	str	x8, [sp, #8]
  41f808:	ldur	x8, [x29, #-16]
  41f80c:	cmp	x8, #0x0
  41f810:	cset	w9, ne  // ne = any
  41f814:	mov	w10, #0x1                   	// #1
  41f818:	eor	w9, w9, #0x1
  41f81c:	eor	w9, w9, w10
  41f820:	eor	w9, w9, w10
  41f824:	and	w9, w9, #0x1
  41f828:	mov	w0, w9
  41f82c:	sxtw	x8, w0
  41f830:	cbz	x8, 41f858 <match_unit_removed+0x80>
  41f834:	mov	w8, wzr
  41f838:	mov	w0, w8
  41f83c:	adrp	x1, 443000 <_fini+0x2c30>
  41f840:	add	x1, x1, #0x812
  41f844:	ldr	x2, [sp, #8]
  41f848:	mov	w3, #0xda6                 	// #3494
  41f84c:	adrp	x4, 443000 <_fini+0x2c30>
  41f850:	add	x4, x4, #0x8aa
  41f854:	bl	406c68 <log_assert_failed_realm@plt>
  41f858:	ldr	x8, [sp, #56]
  41f85c:	cmp	x8, #0x0
  41f860:	cset	w9, ne  // ne = any
  41f864:	mov	w10, #0x1                   	// #1
  41f868:	eor	w9, w9, #0x1
  41f86c:	eor	w9, w9, w10
  41f870:	eor	w9, w9, w10
  41f874:	and	w9, w9, #0x1
  41f878:	mov	w0, w9
  41f87c:	sxtw	x8, w0
  41f880:	cbz	x8, 41f8a8 <match_unit_removed+0xd0>
  41f884:	mov	w8, wzr
  41f888:	mov	w0, w8
  41f88c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41f890:	add	x1, x1, #0x5ef
  41f894:	ldr	x2, [sp, #8]
  41f898:	mov	w3, #0xda7                 	// #3495
  41f89c:	adrp	x4, 443000 <_fini+0x2c30>
  41f8a0:	add	x4, x4, #0x8aa
  41f8a4:	bl	406c68 <log_assert_failed_realm@plt>
  41f8a8:	ldur	x0, [x29, #-16]
  41f8ac:	adrp	x1, 443000 <_fini+0x2c30>
  41f8b0:	add	x1, x1, #0x7b2
  41f8b4:	sub	x2, x29, #0x30
  41f8b8:	sub	x3, x29, #0x28
  41f8bc:	bl	4074c8 <sd_bus_message_read@plt>
  41f8c0:	str	w0, [sp, #36]
  41f8c4:	ldr	w8, [sp, #36]
  41f8c8:	cmp	w8, #0x0
  41f8cc:	cset	w8, ge  // ge = tcont
  41f8d0:	tbnz	w8, #0, 41f958 <match_unit_removed+0x180>
  41f8d4:	mov	w8, #0x3                   	// #3
  41f8d8:	str	w8, [sp, #32]
  41f8dc:	ldr	w8, [sp, #36]
  41f8e0:	str	w8, [sp, #28]
  41f8e4:	str	wzr, [sp, #24]
  41f8e8:	ldr	w0, [sp, #24]
  41f8ec:	bl	406c08 <log_get_max_level_realm@plt>
  41f8f0:	ldr	w8, [sp, #32]
  41f8f4:	and	w8, w8, #0x7
  41f8f8:	cmp	w0, w8
  41f8fc:	b.lt	41f934 <match_unit_removed+0x15c>  // b.tstop
  41f900:	ldr	w8, [sp, #24]
  41f904:	ldr	w9, [sp, #32]
  41f908:	orr	w0, w9, w8, lsl #10
  41f90c:	ldr	w1, [sp, #28]
  41f910:	ldr	x2, [sp, #8]
  41f914:	mov	w3, #0xdab                 	// #3499
  41f918:	adrp	x4, 443000 <_fini+0x2c30>
  41f91c:	add	x4, x4, #0x8eb
  41f920:	adrp	x5, 443000 <_fini+0x2c30>
  41f924:	add	x5, x5, #0x871
  41f928:	bl	406c18 <log_internal_realm@plt>
  41f92c:	str	w0, [sp, #4]
  41f930:	b	41f948 <match_unit_removed+0x170>
  41f934:	ldr	w0, [sp, #28]
  41f938:	bl	406c28 <abs@plt>
  41f93c:	mov	w8, wzr
  41f940:	subs	w8, w8, w0, uxtb
  41f944:	str	w8, [sp, #4]
  41f948:	ldr	w8, [sp, #4]
  41f94c:	str	w8, [sp, #20]
  41f950:	stur	wzr, [x29, #-4]
  41f954:	b	41f9a4 <match_unit_removed+0x1cc>
  41f958:	ldr	x8, [sp, #56]
  41f95c:	ldr	x0, [x8, #216]
  41f960:	ldur	x1, [x29, #-48]
  41f964:	bl	4148a0 <hashmap_get>
  41f968:	str	x0, [sp, #48]
  41f96c:	ldr	x8, [sp, #48]
  41f970:	cbz	x8, 41f97c <match_unit_removed+0x1a4>
  41f974:	ldr	x0, [sp, #48]
  41f978:	bl	4362d0 <session_add_to_gc_queue>
  41f97c:	ldr	x8, [sp, #56]
  41f980:	ldr	x0, [x8, #224]
  41f984:	ldur	x1, [x29, #-48]
  41f988:	bl	4148a0 <hashmap_get>
  41f98c:	str	x0, [sp, #40]
  41f990:	ldr	x8, [sp, #40]
  41f994:	cbz	x8, 41f9a0 <match_unit_removed+0x1c8>
  41f998:	ldr	x0, [sp, #40]
  41f99c:	bl	43b73c <user_add_to_gc_queue>
  41f9a0:	stur	wzr, [x29, #-4]
  41f9a4:	ldur	w0, [x29, #-4]
  41f9a8:	ldp	x29, x30, [sp, #112]
  41f9ac:	add	sp, sp, #0x80
  41f9b0:	ret

000000000041f9b4 <match_properties_changed>:
  41f9b4:	sub	sp, sp, #0x70
  41f9b8:	stp	x29, x30, [sp, #96]
  41f9bc:	add	x29, sp, #0x60
  41f9c0:	mov	x8, xzr
  41f9c4:	adrp	x9, 442000 <_fini+0x1c30>
  41f9c8:	add	x9, x9, #0xd8e
  41f9cc:	add	x9, x9, #0x3
  41f9d0:	stur	x0, [x29, #-16]
  41f9d4:	stur	x1, [x29, #-24]
  41f9d8:	stur	x2, [x29, #-32]
  41f9dc:	stur	x8, [x29, #-40]
  41f9e0:	ldur	x8, [x29, #-24]
  41f9e4:	str	x8, [sp, #48]
  41f9e8:	str	x9, [sp, #8]
  41f9ec:	ldur	x8, [x29, #-16]
  41f9f0:	cmp	x8, #0x0
  41f9f4:	cset	w9, ne  // ne = any
  41f9f8:	mov	w10, #0x1                   	// #1
  41f9fc:	eor	w9, w9, #0x1
  41fa00:	eor	w9, w9, w10
  41fa04:	eor	w9, w9, w10
  41fa08:	and	w9, w9, #0x1
  41fa0c:	mov	w0, w9
  41fa10:	sxtw	x8, w0
  41fa14:	cbz	x8, 41fa3c <match_properties_changed+0x88>
  41fa18:	mov	w8, wzr
  41fa1c:	mov	w0, w8
  41fa20:	adrp	x1, 443000 <_fini+0x2c30>
  41fa24:	add	x1, x1, #0x812
  41fa28:	ldr	x2, [sp, #8]
  41fa2c:	mov	w3, #0xdc2                 	// #3522
  41fa30:	adrp	x4, 443000 <_fini+0x2c30>
  41fa34:	add	x4, x4, #0x8fe
  41fa38:	bl	406c68 <log_assert_failed_realm@plt>
  41fa3c:	ldr	x8, [sp, #48]
  41fa40:	cmp	x8, #0x0
  41fa44:	cset	w9, ne  // ne = any
  41fa48:	mov	w10, #0x1                   	// #1
  41fa4c:	eor	w9, w9, #0x1
  41fa50:	eor	w9, w9, w10
  41fa54:	eor	w9, w9, w10
  41fa58:	and	w9, w9, #0x1
  41fa5c:	mov	w0, w9
  41fa60:	sxtw	x8, w0
  41fa64:	cbz	x8, 41fa8c <match_properties_changed+0xd8>
  41fa68:	mov	w8, wzr
  41fa6c:	mov	w0, w8
  41fa70:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41fa74:	add	x1, x1, #0x5ef
  41fa78:	ldr	x2, [sp, #8]
  41fa7c:	mov	w3, #0xdc3                 	// #3523
  41fa80:	adrp	x4, 443000 <_fini+0x2c30>
  41fa84:	add	x4, x4, #0x8fe
  41fa88:	bl	406c68 <log_assert_failed_realm@plt>
  41fa8c:	ldur	x0, [x29, #-16]
  41fa90:	bl	4077a8 <sd_bus_message_get_path@plt>
  41fa94:	str	x0, [sp, #40]
  41fa98:	ldr	x8, [sp, #40]
  41fa9c:	cbnz	x8, 41fab0 <match_properties_changed+0xfc>
  41faa0:	stur	wzr, [x29, #-4]
  41faa4:	mov	w8, #0x1                   	// #1
  41faa8:	str	w8, [sp, #16]
  41faac:	b	41fb70 <match_properties_changed+0x1bc>
  41fab0:	ldr	x0, [sp, #40]
  41fab4:	sub	x1, x29, #0x28
  41fab8:	bl	4077b8 <unit_name_from_dbus_path@plt>
  41fabc:	str	w0, [sp, #20]
  41fac0:	ldr	w8, [sp, #20]
  41fac4:	mov	w9, #0xffffffea            	// #-22
  41fac8:	cmp	w8, w9
  41facc:	b.ne	41fae0 <match_properties_changed+0x12c>  // b.any
  41fad0:	stur	wzr, [x29, #-4]
  41fad4:	mov	w8, #0x1                   	// #1
  41fad8:	str	w8, [sp, #16]
  41fadc:	b	41fb70 <match_properties_changed+0x1bc>
  41fae0:	ldr	w8, [sp, #20]
  41fae4:	cmp	w8, #0x0
  41fae8:	cset	w8, ge  // ge = tcont
  41faec:	tbnz	w8, #0, 41fb1c <match_properties_changed+0x168>
  41faf0:	mov	w8, wzr
  41faf4:	mov	w0, w8
  41faf8:	ldr	x1, [sp, #8]
  41fafc:	mov	w2, #0xdcd                 	// #3533
  41fb00:	adrp	x3, 443000 <_fini+0x2c30>
  41fb04:	add	x3, x3, #0x945
  41fb08:	bl	407008 <log_oom_internal@plt>
  41fb0c:	stur	wzr, [x29, #-4]
  41fb10:	mov	w8, #0x1                   	// #1
  41fb14:	str	w8, [sp, #16]
  41fb18:	b	41fb70 <match_properties_changed+0x1bc>
  41fb1c:	ldr	x8, [sp, #48]
  41fb20:	ldr	x0, [x8, #216]
  41fb24:	ldur	x1, [x29, #-40]
  41fb28:	bl	4148a0 <hashmap_get>
  41fb2c:	str	x0, [sp, #32]
  41fb30:	ldr	x8, [sp, #32]
  41fb34:	cbz	x8, 41fb40 <match_properties_changed+0x18c>
  41fb38:	ldr	x0, [sp, #32]
  41fb3c:	bl	4362d0 <session_add_to_gc_queue>
  41fb40:	ldr	x8, [sp, #48]
  41fb44:	ldr	x0, [x8, #224]
  41fb48:	ldur	x1, [x29, #-40]
  41fb4c:	bl	4148a0 <hashmap_get>
  41fb50:	str	x0, [sp, #24]
  41fb54:	ldr	x8, [sp, #24]
  41fb58:	cbz	x8, 41fb64 <match_properties_changed+0x1b0>
  41fb5c:	ldr	x0, [sp, #24]
  41fb60:	bl	43b73c <user_add_to_gc_queue>
  41fb64:	stur	wzr, [x29, #-4]
  41fb68:	mov	w8, #0x1                   	// #1
  41fb6c:	str	w8, [sp, #16]
  41fb70:	sub	x0, x29, #0x28
  41fb74:	bl	4152e4 <freep>
  41fb78:	ldur	w0, [x29, #-4]
  41fb7c:	ldp	x29, x30, [sp, #96]
  41fb80:	add	sp, sp, #0x70
  41fb84:	ret

000000000041fb88 <match_reloading>:
  41fb88:	sub	sp, sp, #0xa0
  41fb8c:	stp	x29, x30, [sp, #144]
  41fb90:	add	x29, sp, #0x90
  41fb94:	adrp	x8, 442000 <_fini+0x1c30>
  41fb98:	add	x8, x8, #0xd8e
  41fb9c:	add	x8, x8, #0x3
  41fba0:	stur	x0, [x29, #-16]
  41fba4:	stur	x1, [x29, #-24]
  41fba8:	stur	x2, [x29, #-32]
  41fbac:	ldur	x9, [x29, #-24]
  41fbb0:	stur	x9, [x29, #-40]
  41fbb4:	str	x8, [sp, #16]
  41fbb8:	ldur	x8, [x29, #-16]
  41fbbc:	cmp	x8, #0x0
  41fbc0:	cset	w9, ne  // ne = any
  41fbc4:	mov	w10, #0x1                   	// #1
  41fbc8:	eor	w9, w9, #0x1
  41fbcc:	eor	w9, w9, w10
  41fbd0:	eor	w9, w9, w10
  41fbd4:	and	w9, w9, #0x1
  41fbd8:	mov	w0, w9
  41fbdc:	sxtw	x8, w0
  41fbe0:	cbz	x8, 41fc08 <match_reloading+0x80>
  41fbe4:	mov	w8, wzr
  41fbe8:	mov	w0, w8
  41fbec:	adrp	x1, 443000 <_fini+0x2c30>
  41fbf0:	add	x1, x1, #0x812
  41fbf4:	ldr	x2, [sp, #16]
  41fbf8:	mov	w3, #0xde2                 	// #3554
  41fbfc:	adrp	x4, 443000 <_fini+0x2c30>
  41fc00:	add	x4, x4, #0x95e
  41fc04:	bl	406c68 <log_assert_failed_realm@plt>
  41fc08:	ldur	x8, [x29, #-40]
  41fc0c:	cmp	x8, #0x0
  41fc10:	cset	w9, ne  // ne = any
  41fc14:	mov	w10, #0x1                   	// #1
  41fc18:	eor	w9, w9, #0x1
  41fc1c:	eor	w9, w9, w10
  41fc20:	eor	w9, w9, w10
  41fc24:	and	w9, w9, #0x1
  41fc28:	mov	w0, w9
  41fc2c:	sxtw	x8, w0
  41fc30:	cbz	x8, 41fc58 <match_reloading+0xd0>
  41fc34:	mov	w8, wzr
  41fc38:	mov	w0, w8
  41fc3c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  41fc40:	add	x1, x1, #0x5ef
  41fc44:	ldr	x2, [sp, #16]
  41fc48:	mov	w3, #0xde3                 	// #3555
  41fc4c:	adrp	x4, 443000 <_fini+0x2c30>
  41fc50:	add	x4, x4, #0x95e
  41fc54:	bl	406c68 <log_assert_failed_realm@plt>
  41fc58:	ldur	x0, [x29, #-16]
  41fc5c:	adrp	x1, 441000 <_fini+0xc30>
  41fc60:	add	x1, x1, #0xe0e
  41fc64:	sub	x2, x29, #0x44
  41fc68:	bl	4074c8 <sd_bus_message_read@plt>
  41fc6c:	str	w0, [sp, #72]
  41fc70:	ldr	w8, [sp, #72]
  41fc74:	cmp	w8, #0x0
  41fc78:	cset	w8, ge  // ge = tcont
  41fc7c:	tbnz	w8, #0, 41fd04 <match_reloading+0x17c>
  41fc80:	mov	w8, #0x3                   	// #3
  41fc84:	str	w8, [sp, #68]
  41fc88:	ldr	w8, [sp, #72]
  41fc8c:	str	w8, [sp, #64]
  41fc90:	str	wzr, [sp, #60]
  41fc94:	ldr	w0, [sp, #60]
  41fc98:	bl	406c08 <log_get_max_level_realm@plt>
  41fc9c:	ldr	w8, [sp, #68]
  41fca0:	and	w8, w8, #0x7
  41fca4:	cmp	w0, w8
  41fca8:	b.lt	41fce0 <match_reloading+0x158>  // b.tstop
  41fcac:	ldr	w8, [sp, #60]
  41fcb0:	ldr	w9, [sp, #68]
  41fcb4:	orr	w0, w9, w8, lsl #10
  41fcb8:	ldr	w1, [sp, #64]
  41fcbc:	ldr	x2, [sp, #16]
  41fcc0:	mov	w3, #0xde7                 	// #3559
  41fcc4:	adrp	x4, 443000 <_fini+0x2c30>
  41fcc8:	add	x4, x4, #0x99c
  41fccc:	adrp	x5, 443000 <_fini+0x2c30>
  41fcd0:	add	x5, x5, #0x871
  41fcd4:	bl	406c18 <log_internal_realm@plt>
  41fcd8:	str	w0, [sp, #12]
  41fcdc:	b	41fcf4 <match_reloading+0x16c>
  41fce0:	ldr	w0, [sp, #64]
  41fce4:	bl	406c28 <abs@plt>
  41fce8:	mov	w8, wzr
  41fcec:	subs	w8, w8, w0, uxtb
  41fcf0:	str	w8, [sp, #12]
  41fcf4:	ldr	w8, [sp, #12]
  41fcf8:	str	w8, [sp, #56]
  41fcfc:	stur	wzr, [x29, #-4]
  41fd00:	b	41fddc <match_reloading+0x254>
  41fd04:	ldur	w8, [x29, #-68]
  41fd08:	cbz	w8, 41fd14 <match_reloading+0x18c>
  41fd0c:	stur	wzr, [x29, #-4]
  41fd10:	b	41fddc <match_reloading+0x254>
  41fd14:	mov	w8, #0x7                   	// #7
  41fd18:	str	w8, [sp, #52]
  41fd1c:	str	wzr, [sp, #48]
  41fd20:	str	wzr, [sp, #44]
  41fd24:	ldr	w0, [sp, #44]
  41fd28:	bl	406c08 <log_get_max_level_realm@plt>
  41fd2c:	ldr	w8, [sp, #52]
  41fd30:	and	w8, w8, #0x7
  41fd34:	cmp	w0, w8
  41fd38:	b.lt	41fd70 <match_reloading+0x1e8>  // b.tstop
  41fd3c:	ldr	w8, [sp, #44]
  41fd40:	ldr	w9, [sp, #52]
  41fd44:	orr	w0, w9, w8, lsl #10
  41fd48:	ldr	w1, [sp, #48]
  41fd4c:	ldr	x2, [sp, #16]
  41fd50:	mov	w3, #0xdef                 	// #3567
  41fd54:	adrp	x4, 443000 <_fini+0x2c30>
  41fd58:	add	x4, x4, #0x99c
  41fd5c:	adrp	x5, 443000 <_fini+0x2c30>
  41fd60:	add	x5, x5, #0x9ac
  41fd64:	bl	406c18 <log_internal_realm@plt>
  41fd68:	str	w0, [sp, #8]
  41fd6c:	b	41fd84 <match_reloading+0x1fc>
  41fd70:	ldr	w0, [sp, #48]
  41fd74:	bl	406c28 <abs@plt>
  41fd78:	mov	w8, wzr
  41fd7c:	subs	w8, w8, w0, uxtb
  41fd80:	str	w8, [sp, #8]
  41fd84:	ldr	w8, [sp, #8]
  41fd88:	str	w8, [sp, #40]
  41fd8c:	add	x9, sp, #0x18
  41fd90:	mov	w8, #0xfffffffe            	// #-2
  41fd94:	str	w8, [sp, #24]
  41fd98:	mov	x10, xzr
  41fd9c:	str	x10, [x9, #8]
  41fda0:	ldur	q0, [sp, #24]
  41fda4:	stur	q0, [x29, #-64]
  41fda8:	ldur	x8, [x29, #-40]
  41fdac:	ldr	x0, [x8, #32]
  41fdb0:	sub	x1, x29, #0x40
  41fdb4:	sub	x2, x29, #0x30
  41fdb8:	mov	x8, xzr
  41fdbc:	mov	x3, x8
  41fdc0:	bl	41fdec <hashmap_iterate>
  41fdc4:	tbnz	w0, #0, 41fdcc <match_reloading+0x244>
  41fdc8:	b	41fdd8 <match_reloading+0x250>
  41fdcc:	ldur	x0, [x29, #-48]
  41fdd0:	bl	4362d0 <session_add_to_gc_queue>
  41fdd4:	b	41fda8 <match_reloading+0x220>
  41fdd8:	stur	wzr, [x29, #-4]
  41fddc:	ldur	w0, [x29, #-4]
  41fde0:	ldp	x29, x30, [sp, #144]
  41fde4:	add	sp, sp, #0xa0
  41fde8:	ret

000000000041fdec <hashmap_iterate>:
  41fdec:	sub	sp, sp, #0x30
  41fdf0:	stp	x29, x30, [sp, #32]
  41fdf4:	add	x29, sp, #0x20
  41fdf8:	stur	x0, [x29, #-8]
  41fdfc:	str	x1, [sp, #16]
  41fe00:	str	x2, [sp, #8]
  41fe04:	str	x3, [sp]
  41fe08:	ldur	x0, [x29, #-8]
  41fe0c:	ldr	x1, [sp, #16]
  41fe10:	ldr	x2, [sp, #8]
  41fe14:	ldr	x3, [sp]
  41fe18:	bl	407018 <internal_hashmap_iterate@plt>
  41fe1c:	and	w0, w0, #0x1
  41fe20:	ldp	x29, x30, [sp, #32]
  41fe24:	add	sp, sp, #0x30
  41fe28:	ret

000000000041fe2c <manager_send_changed>:
  41fe2c:	stp	x29, x30, [sp, #-32]!
  41fe30:	stp	x28, x19, [sp, #16]
  41fe34:	mov	x29, sp
  41fe38:	sub	sp, sp, #0x140
  41fe3c:	mov	x19, sp
  41fe40:	str	q7, [x19, #160]
  41fe44:	str	q6, [x19, #144]
  41fe48:	str	q5, [x19, #128]
  41fe4c:	str	q4, [x19, #112]
  41fe50:	str	q3, [x19, #96]
  41fe54:	str	q2, [x19, #80]
  41fe58:	str	q1, [x19, #64]
  41fe5c:	str	q0, [x19, #48]
  41fe60:	stur	x7, [x29, #-104]
  41fe64:	stur	x6, [x29, #-112]
  41fe68:	stur	x5, [x29, #-120]
  41fe6c:	stur	x4, [x29, #-128]
  41fe70:	stur	x3, [x29, #-136]
  41fe74:	stur	x2, [x29, #-144]
  41fe78:	stur	x0, [x29, #-8]
  41fe7c:	stur	x1, [x29, #-16]
  41fe80:	b	41fe84 <manager_send_changed+0x58>
  41fe84:	ldur	x8, [x29, #-8]
  41fe88:	cbnz	x8, 41feb4 <manager_send_changed+0x88>
  41fe8c:	b	41fe90 <manager_send_changed+0x64>
  41fe90:	adrp	x1, 442000 <_fini+0x1c30>
  41fe94:	add	x1, x1, #0x331
  41fe98:	adrp	x2, 442000 <_fini+0x1c30>
  41fe9c:	add	x2, x2, #0xd91
  41fea0:	adrp	x4, 443000 <_fini+0x2c30>
  41fea4:	add	x4, x4, #0x9e5
  41fea8:	mov	w0, wzr
  41feac:	mov	w3, #0xdfa                 	// #3578
  41feb0:	bl	406c68 <log_assert_failed_realm@plt>
  41feb4:	b	41feb8 <manager_send_changed+0x8c>
  41feb8:	ldur	x8, [x29, #-16]
  41febc:	cbnz	x8, 41fed0 <manager_send_changed+0xa4>
  41fec0:	b	41fec4 <manager_send_changed+0x98>
  41fec4:	sub	x8, x29, #0x10
  41fec8:	stur	x8, [x29, #-32]
  41fecc:	b	420134 <manager_send_changed+0x308>
  41fed0:	mov	w8, #0x1                   	// #1
  41fed4:	mov	w9, w8
  41fed8:	stur	x9, [x29, #-40]
  41fedc:	mov	w8, #0xffffff80            	// #-128
  41fee0:	stur	w8, [x29, #-44]
  41fee4:	mov	w8, #0xffffffd0            	// #-48
  41fee8:	stur	w8, [x29, #-48]
  41feec:	add	x9, x19, #0x30
  41fef0:	add	x9, x9, #0x80
  41fef4:	stur	x9, [x29, #-56]
  41fef8:	sub	x9, x29, #0x90
  41fefc:	add	x9, x9, #0x30
  41ff00:	stur	x9, [x29, #-64]
  41ff04:	add	x9, x29, #0x20
  41ff08:	stur	x9, [x29, #-72]
  41ff0c:	b	41ff10 <manager_send_changed+0xe4>
  41ff10:	sub	x8, x29, #0x48
  41ff14:	add	x8, x8, #0x18
  41ff18:	ldur	w9, [x29, #-48]
  41ff1c:	mov	w10, w9
  41ff20:	str	x8, [x19, #40]
  41ff24:	str	w10, [x19, #36]
  41ff28:	tbz	w9, #31, 41ff60 <manager_send_changed+0x134>
  41ff2c:	b	41ff30 <manager_send_changed+0x104>
  41ff30:	ldr	w8, [x19, #36]
  41ff34:	add	w9, w8, #0x8
  41ff38:	ldr	x10, [x19, #40]
  41ff3c:	str	w9, [x10]
  41ff40:	subs	w9, w9, #0x0
  41ff44:	b.gt	41ff60 <manager_send_changed+0x134>
  41ff48:	b	41ff4c <manager_send_changed+0x120>
  41ff4c:	ldur	x8, [x29, #-64]
  41ff50:	ldr	w9, [x19, #36]
  41ff54:	add	x8, x8, w9, sxtw
  41ff58:	str	x8, [x19, #24]
  41ff5c:	b	41ff74 <manager_send_changed+0x148>
  41ff60:	ldur	x8, [x29, #-72]
  41ff64:	add	x9, x8, #0x8
  41ff68:	stur	x9, [x29, #-72]
  41ff6c:	str	x8, [x19, #24]
  41ff70:	b	41ff74 <manager_send_changed+0x148>
  41ff74:	ldr	x8, [x19, #24]
  41ff78:	ldr	x8, [x8]
  41ff7c:	cbz	x8, 41ff94 <manager_send_changed+0x168>
  41ff80:	b	41ff84 <manager_send_changed+0x158>
  41ff84:	ldur	x8, [x29, #-40]
  41ff88:	add	x8, x8, #0x1
  41ff8c:	stur	x8, [x29, #-40]
  41ff90:	b	41ff10 <manager_send_changed+0xe4>
  41ff94:	ldur	x8, [x29, #-40]
  41ff98:	add	x8, x8, #0x1
  41ff9c:	stur	x8, [x29, #-80]
  41ffa0:	b	41ffa4 <manager_send_changed+0x178>
  41ffa4:	ldur	x1, [x29, #-80]
  41ffa8:	mov	w8, #0x8                   	// #8
  41ffac:	mov	w0, w8
  41ffb0:	bl	420174 <size_multiply_overflow>
  41ffb4:	tbz	w0, #0, 41ffe0 <manager_send_changed+0x1b4>
  41ffb8:	b	41ffbc <manager_send_changed+0x190>
  41ffbc:	adrp	x1, 443000 <_fini+0x2c30>
  41ffc0:	add	x1, x1, #0xa1c
  41ffc4:	adrp	x2, 442000 <_fini+0x1c30>
  41ffc8:	add	x2, x2, #0xd91
  41ffcc:	adrp	x4, 443000 <_fini+0x2c30>
  41ffd0:	add	x4, x4, #0x9e5
  41ffd4:	mov	w0, wzr
  41ffd8:	mov	w3, #0xdfc                 	// #3580
  41ffdc:	bl	406c68 <log_assert_failed_realm@plt>
  41ffe0:	b	41ffe4 <manager_send_changed+0x1b8>
  41ffe4:	b	41ffe8 <manager_send_changed+0x1bc>
  41ffe8:	ldur	x8, [x29, #-80]
  41ffec:	lsl	x8, x8, #3
  41fff0:	subs	x8, x8, #0x400, lsl #12
  41fff4:	b.ls	420020 <manager_send_changed+0x1f4>  // b.plast
  41fff8:	b	41fffc <manager_send_changed+0x1d0>
  41fffc:	adrp	x1, 443000 <_fini+0x2c30>
  420000:	add	x1, x1, #0xa48
  420004:	adrp	x2, 442000 <_fini+0x1c30>
  420008:	add	x2, x2, #0xd91
  42000c:	adrp	x4, 443000 <_fini+0x2c30>
  420010:	add	x4, x4, #0x9e5
  420014:	mov	w0, wzr
  420018:	mov	w3, #0xdfc                 	// #3580
  42001c:	bl	406c68 <log_assert_failed_realm@plt>
  420020:	b	420024 <manager_send_changed+0x1f8>
  420024:	ldur	x8, [x29, #-80]
  420028:	lsl	x8, x8, #3
  42002c:	add	x8, x8, #0xf
  420030:	and	x8, x8, #0xfffffffffffffff0
  420034:	mov	x9, sp
  420038:	subs	x8, x9, x8
  42003c:	mov	sp, x8
  420040:	stur	x8, [x29, #-88]
  420044:	ldur	x8, [x29, #-88]
  420048:	stur	x8, [x29, #-32]
  42004c:	ldur	x8, [x29, #-16]
  420050:	ldur	x9, [x29, #-32]
  420054:	mov	x10, xzr
  420058:	stur	x10, [x29, #-40]
  42005c:	str	x8, [x9]
  420060:	mov	w11, #0xffffff80            	// #-128
  420064:	stur	w11, [x29, #-44]
  420068:	mov	w11, #0xffffffd0            	// #-48
  42006c:	stur	w11, [x29, #-48]
  420070:	add	x8, x19, #0x30
  420074:	add	x8, x8, #0x80
  420078:	stur	x8, [x29, #-56]
  42007c:	sub	x8, x29, #0x90
  420080:	add	x8, x8, #0x30
  420084:	stur	x8, [x29, #-64]
  420088:	add	x8, x29, #0x20
  42008c:	stur	x8, [x29, #-72]
  420090:	b	420094 <manager_send_changed+0x268>
  420094:	sub	x8, x29, #0x48
  420098:	add	x8, x8, #0x18
  42009c:	ldur	w9, [x29, #-48]
  4200a0:	mov	w10, w9
  4200a4:	str	x8, [x19, #16]
  4200a8:	str	w10, [x19, #12]
  4200ac:	tbz	w9, #31, 4200e4 <manager_send_changed+0x2b8>
  4200b0:	b	4200b4 <manager_send_changed+0x288>
  4200b4:	ldr	w8, [x19, #12]
  4200b8:	add	w9, w8, #0x8
  4200bc:	ldr	x10, [x19, #16]
  4200c0:	str	w9, [x10]
  4200c4:	subs	w9, w9, #0x0
  4200c8:	b.gt	4200e4 <manager_send_changed+0x2b8>
  4200cc:	b	4200d0 <manager_send_changed+0x2a4>
  4200d0:	ldur	x8, [x29, #-64]
  4200d4:	ldr	w9, [x19, #12]
  4200d8:	add	x8, x8, w9, sxtw
  4200dc:	str	x8, [x19]
  4200e0:	b	4200f8 <manager_send_changed+0x2cc>
  4200e4:	ldur	x8, [x29, #-72]
  4200e8:	add	x9, x8, #0x8
  4200ec:	stur	x9, [x29, #-72]
  4200f0:	str	x8, [x19]
  4200f4:	b	4200f8 <manager_send_changed+0x2cc>
  4200f8:	ldr	x8, [x19]
  4200fc:	ldr	x8, [x8]
  420100:	ldur	x9, [x29, #-32]
  420104:	ldur	x10, [x29, #-40]
  420108:	add	x10, x10, #0x1
  42010c:	stur	x10, [x29, #-40]
  420110:	str	x8, [x9, x10, lsl #3]
  420114:	ldur	x8, [x29, #-32]
  420118:	ldur	x9, [x29, #-40]
  42011c:	ldr	x8, [x8, x9, lsl #3]
  420120:	cbnz	x8, 42012c <manager_send_changed+0x300>
  420124:	b	420128 <manager_send_changed+0x2fc>
  420128:	b	420130 <manager_send_changed+0x304>
  42012c:	b	420094 <manager_send_changed+0x268>
  420130:	b	420134 <manager_send_changed+0x308>
  420134:	ldur	x8, [x29, #-32]
  420138:	stur	x8, [x29, #-96]
  42013c:	ldur	x8, [x29, #-96]
  420140:	stur	x8, [x29, #-24]
  420144:	ldur	x8, [x29, #-8]
  420148:	ldr	x0, [x8, #8]
  42014c:	ldur	x3, [x29, #-24]
  420150:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  420154:	add	x1, x1, #0xd9b
  420158:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  42015c:	add	x2, x2, #0xdb3
  420160:	bl	4077c8 <sd_bus_emit_properties_changed_strv@plt>
  420164:	mov	sp, x29
  420168:	ldp	x28, x19, [sp, #16]
  42016c:	ldp	x29, x30, [sp], #32
  420170:	ret

0000000000420174 <size_multiply_overflow>:
  420174:	sub	sp, sp, #0x20
  420178:	str	x0, [sp, #24]
  42017c:	str	x1, [sp, #16]
  420180:	ldr	x8, [sp, #16]
  420184:	mov	w9, #0x0                   	// #0
  420188:	str	w9, [sp, #12]
  42018c:	cbz	x8, 4201ac <size_multiply_overflow+0x38>
  420190:	ldr	x8, [sp, #24]
  420194:	ldr	x9, [sp, #16]
  420198:	mov	x10, #0xffffffffffffffff    	// #-1
  42019c:	udiv	x9, x10, x9
  4201a0:	cmp	x8, x9
  4201a4:	cset	w11, hi  // hi = pmore
  4201a8:	str	w11, [sp, #12]
  4201ac:	ldr	w8, [sp, #12]
  4201b0:	mov	w9, #0x1                   	// #1
  4201b4:	eor	w8, w8, #0x1
  4201b8:	eor	w8, w8, w9
  4201bc:	and	w8, w8, #0x1
  4201c0:	mov	w0, w8
  4201c4:	sxtw	x10, w0
  4201c8:	cmp	x10, #0x0
  4201cc:	cset	w8, ne  // ne = any
  4201d0:	and	w0, w8, #0x1
  4201d4:	add	sp, sp, #0x20
  4201d8:	ret

00000000004201dc <manager_start_scope>:
  4201dc:	sub	sp, sp, #0xe0
  4201e0:	stp	x29, x30, [sp, #208]
  4201e4:	add	x29, sp, #0xd0
  4201e8:	ldr	x8, [x29, #16]
  4201ec:	ldr	x9, [x29, #24]
  4201f0:	ldr	x10, [x29, #32]
  4201f4:	mov	x11, xzr
  4201f8:	adrp	x12, 443000 <_fini+0x2c30>
  4201fc:	add	x12, x12, #0xb2c
  420200:	adrp	x13, 443000 <_fini+0x2c30>
  420204:	add	x13, x13, #0x1ed
  420208:	adrp	x14, 442000 <_fini+0x1c30>
  42020c:	add	x14, x14, #0xd8e
  420210:	add	x14, x14, #0x3
  420214:	adrp	x15, 443000 <_fini+0x2c30>
  420218:	add	x15, x15, #0xa68
  42021c:	stur	x0, [x29, #-16]
  420220:	stur	x1, [x29, #-24]
  420224:	stur	w2, [x29, #-28]
  420228:	stur	x3, [x29, #-40]
  42022c:	stur	x4, [x29, #-48]
  420230:	stur	x5, [x29, #-56]
  420234:	stur	x6, [x29, #-64]
  420238:	stur	x7, [x29, #-72]
  42023c:	stur	x8, [x29, #-80]
  420240:	stur	x9, [x29, #-88]
  420244:	stur	x10, [x29, #-96]
  420248:	str	x11, [sp, #104]
  42024c:	str	x11, [sp, #96]
  420250:	str	x12, [sp, #56]
  420254:	str	x13, [sp, #48]
  420258:	str	x14, [sp, #40]
  42025c:	str	x15, [sp, #32]
  420260:	ldur	x8, [x29, #-16]
  420264:	cmp	x8, #0x0
  420268:	cset	w9, ne  // ne = any
  42026c:	mov	w10, #0x1                   	// #1
  420270:	eor	w9, w9, #0x1
  420274:	eor	w9, w9, w10
  420278:	eor	w9, w9, w10
  42027c:	and	w9, w9, #0x1
  420280:	mov	w0, w9
  420284:	sxtw	x8, w0
  420288:	cbz	x8, 4202ac <manager_start_scope+0xd0>
  42028c:	mov	w8, wzr
  420290:	mov	w0, w8
  420294:	adrp	x1, 442000 <_fini+0x1c30>
  420298:	add	x1, x1, #0x331
  42029c:	ldr	x2, [sp, #40]
  4202a0:	mov	w3, #0xe27                 	// #3623
  4202a4:	ldr	x4, [sp, #32]
  4202a8:	bl	406c68 <log_assert_failed_realm@plt>
  4202ac:	ldur	x8, [x29, #-24]
  4202b0:	cmp	x8, #0x0
  4202b4:	cset	w9, ne  // ne = any
  4202b8:	mov	w10, #0x1                   	// #1
  4202bc:	eor	w9, w9, #0x1
  4202c0:	eor	w9, w9, w10
  4202c4:	eor	w9, w9, w10
  4202c8:	and	w9, w9, #0x1
  4202cc:	mov	w0, w9
  4202d0:	sxtw	x8, w0
  4202d4:	cbz	x8, 4202f8 <manager_start_scope+0x11c>
  4202d8:	mov	w8, wzr
  4202dc:	mov	w0, w8
  4202e0:	adrp	x1, 443000 <_fini+0x2c30>
  4202e4:	add	x1, x1, #0xb07
  4202e8:	ldr	x2, [sp, #40]
  4202ec:	mov	w3, #0xe28                 	// #3624
  4202f0:	ldr	x4, [sp, #32]
  4202f4:	bl	406c68 <log_assert_failed_realm@plt>
  4202f8:	ldur	w8, [x29, #-28]
  4202fc:	cmp	w8, #0x1
  420300:	cset	w8, gt
  420304:	mov	w9, #0x1                   	// #1
  420308:	eor	w8, w8, #0x1
  42030c:	eor	w8, w8, w9
  420310:	eor	w8, w8, w9
  420314:	and	w8, w8, #0x1
  420318:	mov	w0, w8
  42031c:	sxtw	x10, w0
  420320:	cbz	x10, 420344 <manager_start_scope+0x168>
  420324:	mov	w8, wzr
  420328:	mov	w0, w8
  42032c:	adrp	x1, 443000 <_fini+0x2c30>
  420330:	add	x1, x1, #0xb0d
  420334:	ldr	x2, [sp, #40]
  420338:	mov	w3, #0xe29                 	// #3625
  42033c:	ldr	x4, [sp, #32]
  420340:	bl	406c68 <log_assert_failed_realm@plt>
  420344:	ldur	x8, [x29, #-96]
  420348:	cmp	x8, #0x0
  42034c:	cset	w9, ne  // ne = any
  420350:	mov	w10, #0x1                   	// #1
  420354:	eor	w9, w9, #0x1
  420358:	eor	w9, w9, w10
  42035c:	eor	w9, w9, w10
  420360:	and	w9, w9, #0x1
  420364:	mov	w0, w9
  420368:	sxtw	x8, w0
  42036c:	cbz	x8, 420390 <manager_start_scope+0x1b4>
  420370:	mov	w8, wzr
  420374:	mov	w0, w8
  420378:	adrp	x1, 443000 <_fini+0x2c30>
  42037c:	add	x1, x1, #0xb15
  420380:	ldr	x2, [sp, #40]
  420384:	mov	w3, #0xe2a                 	// #3626
  420388:	ldr	x4, [sp, #32]
  42038c:	bl	406c68 <log_assert_failed_realm@plt>
  420390:	ldur	x8, [x29, #-16]
  420394:	ldr	x0, [x8, #8]
  420398:	add	x1, sp, #0x68
  42039c:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  4203a0:	add	x2, x2, #0xf86
  4203a4:	adrp	x3, 440000 <on_brightness_writer_exit+0x15c>
  4203a8:	add	x3, x3, #0xf9f
  4203ac:	adrp	x4, 440000 <on_brightness_writer_exit+0x15c>
  4203b0:	add	x4, x4, #0xfb9
  4203b4:	adrp	x5, 443000 <_fini+0x2c30>
  4203b8:	add	x5, x5, #0xb19
  4203bc:	bl	4077d8 <sd_bus_message_new_method_call@plt>
  4203c0:	str	w0, [sp, #84]
  4203c4:	ldr	w9, [sp, #84]
  4203c8:	cmp	w9, #0x0
  4203cc:	cset	w9, ge  // ge = tcont
  4203d0:	tbnz	w9, #0, 4203e8 <manager_start_scope+0x20c>
  4203d4:	ldr	w8, [sp, #84]
  4203d8:	stur	w8, [x29, #-4]
  4203dc:	mov	w8, #0x1                   	// #1
  4203e0:	str	w8, [sp, #80]
  4203e4:	b	42090c <manager_start_scope+0x730>
  4203e8:	ldr	x0, [sp, #104]
  4203ec:	ldur	x8, [x29, #-24]
  4203f0:	str	x0, [sp, #24]
  4203f4:	mov	x0, x8
  4203f8:	bl	420960 <strempty>
  4203fc:	ldr	x8, [sp, #24]
  420400:	str	x0, [sp, #16]
  420404:	mov	x0, x8
  420408:	adrp	x1, 442000 <_fini+0x1c30>
  42040c:	add	x1, x1, #0x981
  420410:	ldr	x2, [sp, #16]
  420414:	adrp	x3, 442000 <_fini+0x1c30>
  420418:	add	x3, x3, #0x984
  42041c:	bl	407508 <sd_bus_message_append@plt>
  420420:	str	w0, [sp, #84]
  420424:	ldr	w9, [sp, #84]
  420428:	cmp	w9, #0x0
  42042c:	cset	w9, ge  // ge = tcont
  420430:	tbnz	w9, #0, 420448 <manager_start_scope+0x26c>
  420434:	ldr	w8, [sp, #84]
  420438:	stur	w8, [x29, #-4]
  42043c:	mov	w8, #0x1                   	// #1
  420440:	str	w8, [sp, #80]
  420444:	b	42090c <manager_start_scope+0x730>
  420448:	ldr	x0, [sp, #104]
  42044c:	mov	w1, #0x61                  	// #97
  420450:	ldr	x2, [sp, #56]
  420454:	bl	407588 <sd_bus_message_open_container@plt>
  420458:	str	w0, [sp, #84]
  42045c:	ldr	w8, [sp, #84]
  420460:	cmp	w8, #0x0
  420464:	cset	w8, ge  // ge = tcont
  420468:	tbnz	w8, #0, 420480 <manager_start_scope+0x2a4>
  42046c:	ldr	w8, [sp, #84]
  420470:	stur	w8, [x29, #-4]
  420474:	mov	w8, #0x1                   	// #1
  420478:	str	w8, [sp, #80]
  42047c:	b	42090c <manager_start_scope+0x730>
  420480:	ldur	x0, [x29, #-40]
  420484:	bl	42099c <isempty>
  420488:	tbnz	w0, #0, 4204d4 <manager_start_scope+0x2f8>
  42048c:	ldr	x0, [sp, #104]
  420490:	ldur	x4, [x29, #-40]
  420494:	ldr	x1, [sp, #56]
  420498:	adrp	x2, 443000 <_fini+0x2c30>
  42049c:	add	x2, x2, #0xb31
  4204a0:	adrp	x3, 442000 <_fini+0x1c30>
  4204a4:	add	x3, x3, #0xf2
  4204a8:	bl	407508 <sd_bus_message_append@plt>
  4204ac:	str	w0, [sp, #84]
  4204b0:	ldr	w8, [sp, #84]
  4204b4:	cmp	w8, #0x0
  4204b8:	cset	w8, ge  // ge = tcont
  4204bc:	tbnz	w8, #0, 4204d4 <manager_start_scope+0x2f8>
  4204c0:	ldr	w8, [sp, #84]
  4204c4:	stur	w8, [x29, #-4]
  4204c8:	mov	w8, #0x1                   	// #1
  4204cc:	str	w8, [sp, #80]
  4204d0:	b	42090c <manager_start_scope+0x730>
  4204d4:	ldur	x0, [x29, #-48]
  4204d8:	bl	42099c <isempty>
  4204dc:	tbnz	w0, #0, 420528 <manager_start_scope+0x34c>
  4204e0:	ldr	x0, [sp, #104]
  4204e4:	ldur	x4, [x29, #-48]
  4204e8:	ldr	x1, [sp, #56]
  4204ec:	adrp	x2, 443000 <_fini+0x2c30>
  4204f0:	add	x2, x2, #0xb37
  4204f4:	adrp	x3, 442000 <_fini+0x1c30>
  4204f8:	add	x3, x3, #0xf2
  4204fc:	bl	407508 <sd_bus_message_append@plt>
  420500:	str	w0, [sp, #84]
  420504:	ldr	w8, [sp, #84]
  420508:	cmp	w8, #0x0
  42050c:	cset	w8, ge  // ge = tcont
  420510:	tbnz	w8, #0, 420528 <manager_start_scope+0x34c>
  420514:	ldr	w8, [sp, #84]
  420518:	stur	w8, [x29, #-4]
  42051c:	mov	w8, #0x1                   	// #1
  420520:	str	w8, [sp, #80]
  420524:	b	42090c <manager_start_scope+0x730>
  420528:	ldur	x8, [x29, #-56]
  42052c:	str	x8, [sp, #88]
  420530:	ldr	x8, [sp, #88]
  420534:	mov	w9, #0x0                   	// #0
  420538:	str	w9, [sp, #12]
  42053c:	cbz	x8, 420554 <manager_start_scope+0x378>
  420540:	ldr	x8, [sp, #88]
  420544:	ldr	x8, [x8]
  420548:	cmp	x8, #0x0
  42054c:	cset	w9, ne  // ne = any
  420550:	str	w9, [sp, #12]
  420554:	ldr	w8, [sp, #12]
  420558:	tbnz	w8, #0, 420560 <manager_start_scope+0x384>
  42055c:	b	4205bc <manager_start_scope+0x3e0>
  420560:	ldr	x0, [sp, #104]
  420564:	ldr	x8, [sp, #88]
  420568:	ldr	x5, [x8]
  42056c:	ldr	x1, [sp, #56]
  420570:	adrp	x2, 443000 <_fini+0x2c30>
  420574:	add	x2, x2, #0xb43
  420578:	ldr	x3, [sp, #48]
  42057c:	mov	w4, #0x1                   	// #1
  420580:	bl	407508 <sd_bus_message_append@plt>
  420584:	str	w0, [sp, #84]
  420588:	ldr	w9, [sp, #84]
  42058c:	cmp	w9, #0x0
  420590:	cset	w9, ge  // ge = tcont
  420594:	tbnz	w9, #0, 4205ac <manager_start_scope+0x3d0>
  420598:	ldr	w8, [sp, #84]
  42059c:	stur	w8, [x29, #-4]
  4205a0:	mov	w8, #0x1                   	// #1
  4205a4:	str	w8, [sp, #80]
  4205a8:	b	42090c <manager_start_scope+0x730>
  4205ac:	ldr	x8, [sp, #88]
  4205b0:	add	x8, x8, #0x8
  4205b4:	str	x8, [sp, #88]
  4205b8:	b	420530 <manager_start_scope+0x354>
  4205bc:	ldur	x8, [x29, #-64]
  4205c0:	str	x8, [sp, #88]
  4205c4:	ldr	x8, [sp, #88]
  4205c8:	mov	w9, #0x0                   	// #0
  4205cc:	str	w9, [sp, #8]
  4205d0:	cbz	x8, 4205e8 <manager_start_scope+0x40c>
  4205d4:	ldr	x8, [sp, #88]
  4205d8:	ldr	x8, [x8]
  4205dc:	cmp	x8, #0x0
  4205e0:	cset	w9, ne  // ne = any
  4205e4:	str	w9, [sp, #8]
  4205e8:	ldr	w8, [sp, #8]
  4205ec:	tbnz	w8, #0, 4205f4 <manager_start_scope+0x418>
  4205f0:	b	420650 <manager_start_scope+0x474>
  4205f4:	ldr	x0, [sp, #104]
  4205f8:	ldr	x8, [sp, #88]
  4205fc:	ldr	x5, [x8]
  420600:	ldr	x1, [sp, #56]
  420604:	adrp	x2, 443000 <_fini+0x2c30>
  420608:	add	x2, x2, #0xb49
  42060c:	ldr	x3, [sp, #48]
  420610:	mov	w4, #0x1                   	// #1
  420614:	bl	407508 <sd_bus_message_append@plt>
  420618:	str	w0, [sp, #84]
  42061c:	ldr	w9, [sp, #84]
  420620:	cmp	w9, #0x0
  420624:	cset	w9, ge  // ge = tcont
  420628:	tbnz	w9, #0, 420640 <manager_start_scope+0x464>
  42062c:	ldr	w8, [sp, #84]
  420630:	stur	w8, [x29, #-4]
  420634:	mov	w8, #0x1                   	// #1
  420638:	str	w8, [sp, #80]
  42063c:	b	42090c <manager_start_scope+0x730>
  420640:	ldr	x8, [sp, #88]
  420644:	add	x8, x8, #0x8
  420648:	str	x8, [sp, #88]
  42064c:	b	4205c4 <manager_start_scope+0x3e8>
  420650:	ldur	x0, [x29, #-72]
  420654:	bl	4077e8 <empty_or_root@plt>
  420658:	tbnz	w0, #0, 4206a4 <manager_start_scope+0x4c8>
  42065c:	ldr	x0, [sp, #104]
  420660:	ldur	x5, [x29, #-72]
  420664:	ldr	x1, [sp, #56]
  420668:	adrp	x2, 443000 <_fini+0x2c30>
  42066c:	add	x2, x2, #0xb4f
  420670:	ldr	x3, [sp, #48]
  420674:	mov	w4, #0x1                   	// #1
  420678:	bl	407508 <sd_bus_message_append@plt>
  42067c:	str	w0, [sp, #84]
  420680:	ldr	w8, [sp, #84]
  420684:	cmp	w8, #0x0
  420688:	cset	w8, ge  // ge = tcont
  42068c:	tbnz	w8, #0, 4206a4 <manager_start_scope+0x4c8>
  420690:	ldr	w8, [sp, #84]
  420694:	stur	w8, [x29, #-4]
  420698:	mov	w8, #0x1                   	// #1
  42069c:	str	w8, [sp, #80]
  4206a0:	b	42090c <manager_start_scope+0x730>
  4206a4:	ldr	x0, [sp, #104]
  4206a8:	ldr	x1, [sp, #56]
  4206ac:	adrp	x2, 443000 <_fini+0x2c30>
  4206b0:	add	x2, x2, #0xb61
  4206b4:	adrp	x3, 441000 <_fini+0xc30>
  4206b8:	add	x3, x3, #0xe0e
  4206bc:	mov	w4, #0x1                   	// #1
  4206c0:	bl	407508 <sd_bus_message_append@plt>
  4206c4:	str	w0, [sp, #84]
  4206c8:	ldr	w8, [sp, #84]
  4206cc:	cmp	w8, #0x0
  4206d0:	cset	w8, ge  // ge = tcont
  4206d4:	tbnz	w8, #0, 4206ec <manager_start_scope+0x510>
  4206d8:	ldr	w8, [sp, #84]
  4206dc:	stur	w8, [x29, #-4]
  4206e0:	mov	w8, #0x1                   	// #1
  4206e4:	str	w8, [sp, #80]
  4206e8:	b	42090c <manager_start_scope+0x730>
  4206ec:	ldr	x0, [sp, #104]
  4206f0:	ldur	w5, [x29, #-28]
  4206f4:	ldr	x1, [sp, #56]
  4206f8:	adrp	x2, 443000 <_fini+0x2c30>
  4206fc:	add	x2, x2, #0xb6c
  420700:	adrp	x3, 443000 <_fini+0x2c30>
  420704:	add	x3, x3, #0xb71
  420708:	mov	w4, #0x1                   	// #1
  42070c:	bl	407508 <sd_bus_message_append@plt>
  420710:	str	w0, [sp, #84]
  420714:	ldr	w8, [sp, #84]
  420718:	cmp	w8, #0x0
  42071c:	cset	w8, ge  // ge = tcont
  420720:	tbnz	w8, #0, 420738 <manager_start_scope+0x55c>
  420724:	ldr	w8, [sp, #84]
  420728:	stur	w8, [x29, #-4]
  42072c:	mov	w8, #0x1                   	// #1
  420730:	str	w8, [sp, #80]
  420734:	b	42090c <manager_start_scope+0x730>
  420738:	ldr	x0, [sp, #104]
  42073c:	ldr	x1, [sp, #56]
  420740:	adrp	x2, 443000 <_fini+0x2c30>
  420744:	add	x2, x2, #0xb74
  420748:	adrp	x3, 443000 <_fini+0x2c30>
  42074c:	add	x3, x3, #0x250
  420750:	mov	x4, #0xffffffffffffffff    	// #-1
  420754:	bl	407508 <sd_bus_message_append@plt>
  420758:	str	w0, [sp, #84]
  42075c:	ldr	w8, [sp, #84]
  420760:	cmp	w8, #0x0
  420764:	cset	w8, ge  // ge = tcont
  420768:	tbnz	w8, #0, 4207fc <manager_start_scope+0x620>
  42076c:	mov	w8, #0x3                   	// #3
  420770:	str	w8, [sp, #76]
  420774:	ldr	w8, [sp, #84]
  420778:	str	w8, [sp, #72]
  42077c:	str	wzr, [sp, #68]
  420780:	ldr	w0, [sp, #68]
  420784:	bl	406c08 <log_get_max_level_realm@plt>
  420788:	ldr	w8, [sp, #76]
  42078c:	and	w8, w8, #0x7
  420790:	cmp	w0, w8
  420794:	b.lt	4207cc <manager_start_scope+0x5f0>  // b.tstop
  420798:	ldr	w8, [sp, #68]
  42079c:	ldr	w9, [sp, #76]
  4207a0:	orr	w0, w9, w8, lsl #10
  4207a4:	ldr	w1, [sp, #72]
  4207a8:	ldr	x2, [sp, #40]
  4207ac:	mov	w3, #0xe69                 	// #3689
  4207b0:	adrp	x4, 443000 <_fini+0x2c30>
  4207b4:	add	x4, x4, #0xb7d
  4207b8:	adrp	x5, 443000 <_fini+0x2c30>
  4207bc:	add	x5, x5, #0xb91
  4207c0:	bl	406c18 <log_internal_realm@plt>
  4207c4:	str	w0, [sp, #4]
  4207c8:	b	4207e0 <manager_start_scope+0x604>
  4207cc:	ldr	w0, [sp, #72]
  4207d0:	bl	406c28 <abs@plt>
  4207d4:	mov	w8, wzr
  4207d8:	subs	w8, w8, w0, uxtb
  4207dc:	str	w8, [sp, #4]
  4207e0:	ldr	w8, [sp, #4]
  4207e4:	str	w8, [sp, #64]
  4207e8:	ldr	w8, [sp, #64]
  4207ec:	stur	w8, [x29, #-4]
  4207f0:	mov	w8, #0x1                   	// #1
  4207f4:	str	w8, [sp, #80]
  4207f8:	b	42090c <manager_start_scope+0x730>
  4207fc:	ldur	x8, [x29, #-80]
  420800:	cbz	x8, 42083c <manager_start_scope+0x660>
  420804:	ldr	x0, [sp, #104]
  420808:	ldur	x1, [x29, #-80]
  42080c:	mov	w2, #0x1                   	// #1
  420810:	bl	4077f8 <sd_bus_message_copy@plt>
  420814:	str	w0, [sp, #84]
  420818:	ldr	w8, [sp, #84]
  42081c:	cmp	w8, #0x0
  420820:	cset	w8, ge  // ge = tcont
  420824:	tbnz	w8, #0, 42083c <manager_start_scope+0x660>
  420828:	ldr	w8, [sp, #84]
  42082c:	stur	w8, [x29, #-4]
  420830:	mov	w8, #0x1                   	// #1
  420834:	str	w8, [sp, #80]
  420838:	b	42090c <manager_start_scope+0x730>
  42083c:	ldr	x0, [sp, #104]
  420840:	bl	407598 <sd_bus_message_close_container@plt>
  420844:	str	w0, [sp, #84]
  420848:	ldr	w8, [sp, #84]
  42084c:	cmp	w8, #0x0
  420850:	cset	w8, ge  // ge = tcont
  420854:	tbnz	w8, #0, 42086c <manager_start_scope+0x690>
  420858:	ldr	w8, [sp, #84]
  42085c:	stur	w8, [x29, #-4]
  420860:	mov	w8, #0x1                   	// #1
  420864:	str	w8, [sp, #80]
  420868:	b	42090c <manager_start_scope+0x730>
  42086c:	ldr	x0, [sp, #104]
  420870:	adrp	x1, 443000 <_fini+0x2c30>
  420874:	add	x1, x1, #0xbb2
  420878:	mov	w8, wzr
  42087c:	mov	w2, w8
  420880:	bl	407508 <sd_bus_message_append@plt>
  420884:	str	w0, [sp, #84]
  420888:	ldr	w8, [sp, #84]
  42088c:	cmp	w8, #0x0
  420890:	cset	w8, ge  // ge = tcont
  420894:	tbnz	w8, #0, 4208ac <manager_start_scope+0x6d0>
  420898:	ldr	w8, [sp, #84]
  42089c:	stur	w8, [x29, #-4]
  4208a0:	mov	w8, #0x1                   	// #1
  4208a4:	str	w8, [sp, #80]
  4208a8:	b	42090c <manager_start_scope+0x730>
  4208ac:	ldur	x8, [x29, #-16]
  4208b0:	ldr	x0, [x8, #8]
  4208b4:	ldr	x1, [sp, #104]
  4208b8:	ldur	x3, [x29, #-88]
  4208bc:	mov	x8, xzr
  4208c0:	mov	x2, x8
  4208c4:	add	x4, sp, #0x60
  4208c8:	bl	407808 <sd_bus_call@plt>
  4208cc:	str	w0, [sp, #84]
  4208d0:	ldr	w9, [sp, #84]
  4208d4:	cmp	w9, #0x0
  4208d8:	cset	w9, ge  // ge = tcont
  4208dc:	tbnz	w9, #0, 4208f4 <manager_start_scope+0x718>
  4208e0:	ldr	w8, [sp, #84]
  4208e4:	stur	w8, [x29, #-4]
  4208e8:	mov	w8, #0x1                   	// #1
  4208ec:	str	w8, [sp, #80]
  4208f0:	b	42090c <manager_start_scope+0x730>
  4208f4:	ldr	x0, [sp, #96]
  4208f8:	ldur	x1, [x29, #-96]
  4208fc:	bl	4209dc <strdup_job>
  420900:	stur	w0, [x29, #-4]
  420904:	mov	w8, #0x1                   	// #1
  420908:	str	w8, [sp, #80]
  42090c:	add	x0, sp, #0x60
  420910:	bl	42092c <sd_bus_message_unrefp>
  420914:	add	x0, sp, #0x68
  420918:	bl	42092c <sd_bus_message_unrefp>
  42091c:	ldur	w0, [x29, #-4]
  420920:	ldp	x29, x30, [sp, #208]
  420924:	add	sp, sp, #0xe0
  420928:	ret

000000000042092c <sd_bus_message_unrefp>:
  42092c:	sub	sp, sp, #0x20
  420930:	stp	x29, x30, [sp, #16]
  420934:	add	x29, sp, #0x10
  420938:	str	x0, [sp, #8]
  42093c:	ldr	x8, [sp, #8]
  420940:	ldr	x8, [x8]
  420944:	cbz	x8, 420954 <sd_bus_message_unrefp+0x28>
  420948:	ldr	x8, [sp, #8]
  42094c:	ldr	x0, [x8]
  420950:	bl	407818 <sd_bus_message_unref@plt>
  420954:	ldp	x29, x30, [sp, #16]
  420958:	add	sp, sp, #0x20
  42095c:	ret

0000000000420960 <strempty>:
  420960:	sub	sp, sp, #0x20
  420964:	str	x0, [sp, #24]
  420968:	ldr	x8, [sp, #24]
  42096c:	str	x8, [sp, #16]
  420970:	cbz	x8, 420980 <strempty+0x20>
  420974:	ldr	x8, [sp, #16]
  420978:	str	x8, [sp, #8]
  42097c:	b	42098c <strempty+0x2c>
  420980:	adrp	x8, 443000 <_fini+0x2c30>
  420984:	add	x8, x8, #0x467
  420988:	str	x8, [sp, #8]
  42098c:	ldr	x8, [sp, #8]
  420990:	mov	x0, x8
  420994:	add	sp, sp, #0x20
  420998:	ret

000000000042099c <isempty>:
  42099c:	sub	sp, sp, #0x10
  4209a0:	str	x0, [sp, #8]
  4209a4:	ldr	x8, [sp, #8]
  4209a8:	mov	w9, #0x1                   	// #1
  4209ac:	str	w9, [sp, #4]
  4209b0:	cbz	x8, 4209cc <isempty+0x30>
  4209b4:	ldr	x8, [sp, #8]
  4209b8:	ldrb	w9, [x8]
  4209bc:	cmp	w9, #0x0
  4209c0:	cset	w9, ne  // ne = any
  4209c4:	eor	w9, w9, #0x1
  4209c8:	str	w9, [sp, #4]
  4209cc:	ldr	w8, [sp, #4]
  4209d0:	and	w0, w8, #0x1
  4209d4:	add	sp, sp, #0x10
  4209d8:	ret

00000000004209dc <strdup_job>:
  4209dc:	sub	sp, sp, #0x40
  4209e0:	stp	x29, x30, [sp, #48]
  4209e4:	add	x29, sp, #0x30
  4209e8:	adrp	x8, 443000 <_fini+0x2c30>
  4209ec:	add	x8, x8, #0x465
  4209f0:	add	x2, sp, #0x10
  4209f4:	stur	x0, [x29, #-16]
  4209f8:	str	x1, [sp, #24]
  4209fc:	ldur	x0, [x29, #-16]
  420a00:	mov	x1, x8
  420a04:	bl	4074c8 <sd_bus_message_read@plt>
  420a08:	str	w0, [sp, #4]
  420a0c:	ldr	w9, [sp, #4]
  420a10:	cmp	w9, #0x0
  420a14:	cset	w9, ge  // ge = tcont
  420a18:	tbnz	w9, #0, 420a28 <strdup_job+0x4c>
  420a1c:	ldr	w8, [sp, #4]
  420a20:	stur	w8, [x29, #-4]
  420a24:	b	420a5c <strdup_job+0x80>
  420a28:	ldr	x0, [sp, #16]
  420a2c:	bl	407168 <strdup@plt>
  420a30:	str	x0, [sp, #8]
  420a34:	ldr	x8, [sp, #8]
  420a38:	cbnz	x8, 420a48 <strdup_job+0x6c>
  420a3c:	mov	w8, #0xfffffff4            	// #-12
  420a40:	stur	w8, [x29, #-4]
  420a44:	b	420a5c <strdup_job+0x80>
  420a48:	ldr	x8, [sp, #8]
  420a4c:	ldr	x9, [sp, #24]
  420a50:	str	x8, [x9]
  420a54:	mov	w10, #0x1                   	// #1
  420a58:	stur	w10, [x29, #-4]
  420a5c:	ldur	w0, [x29, #-4]
  420a60:	ldp	x29, x30, [sp, #48]
  420a64:	add	sp, sp, #0x40
  420a68:	ret

0000000000420a6c <manager_start_unit>:
  420a6c:	sub	sp, sp, #0x70
  420a70:	stp	x29, x30, [sp, #96]
  420a74:	add	x29, sp, #0x60
  420a78:	mov	x8, xzr
  420a7c:	adrp	x9, 442000 <_fini+0x1c30>
  420a80:	add	x9, x9, #0xd8e
  420a84:	add	x9, x9, #0x3
  420a88:	adrp	x10, 443000 <_fini+0x2c30>
  420a8c:	add	x10, x10, #0xbbc
  420a90:	stur	x0, [x29, #-16]
  420a94:	stur	x1, [x29, #-24]
  420a98:	stur	x2, [x29, #-32]
  420a9c:	stur	x3, [x29, #-40]
  420aa0:	str	x8, [sp, #48]
  420aa4:	str	x9, [sp, #32]
  420aa8:	str	x10, [sp, #24]
  420aac:	ldur	x8, [x29, #-16]
  420ab0:	cmp	x8, #0x0
  420ab4:	cset	w9, ne  // ne = any
  420ab8:	mov	w10, #0x1                   	// #1
  420abc:	eor	w9, w9, #0x1
  420ac0:	eor	w9, w9, w10
  420ac4:	eor	w9, w9, w10
  420ac8:	and	w9, w9, #0x1
  420acc:	mov	w0, w9
  420ad0:	sxtw	x8, w0
  420ad4:	cbz	x8, 420af8 <manager_start_unit+0x8c>
  420ad8:	mov	w8, wzr
  420adc:	mov	w0, w8
  420ae0:	adrp	x1, 442000 <_fini+0x1c30>
  420ae4:	add	x1, x1, #0x331
  420ae8:	ldr	x2, [sp, #32]
  420aec:	mov	w3, #0xe85                 	// #3717
  420af0:	ldr	x4, [sp, #24]
  420af4:	bl	406c68 <log_assert_failed_realm@plt>
  420af8:	ldur	x8, [x29, #-24]
  420afc:	cmp	x8, #0x0
  420b00:	cset	w9, ne  // ne = any
  420b04:	mov	w10, #0x1                   	// #1
  420b08:	eor	w9, w9, #0x1
  420b0c:	eor	w9, w9, w10
  420b10:	eor	w9, w9, w10
  420b14:	and	w9, w9, #0x1
  420b18:	mov	w0, w9
  420b1c:	sxtw	x8, w0
  420b20:	cbz	x8, 420b44 <manager_start_unit+0xd8>
  420b24:	mov	w8, wzr
  420b28:	mov	w0, w8
  420b2c:	adrp	x1, 443000 <_fini+0x2c30>
  420b30:	add	x1, x1, #0xc05
  420b34:	ldr	x2, [sp, #32]
  420b38:	mov	w3, #0xe86                 	// #3718
  420b3c:	ldr	x4, [sp, #24]
  420b40:	bl	406c68 <log_assert_failed_realm@plt>
  420b44:	ldur	x8, [x29, #-40]
  420b48:	cmp	x8, #0x0
  420b4c:	cset	w9, ne  // ne = any
  420b50:	mov	w10, #0x1                   	// #1
  420b54:	eor	w9, w9, #0x1
  420b58:	eor	w9, w9, w10
  420b5c:	eor	w9, w9, w10
  420b60:	and	w9, w9, #0x1
  420b64:	mov	w0, w9
  420b68:	sxtw	x8, w0
  420b6c:	cbz	x8, 420b90 <manager_start_unit+0x124>
  420b70:	mov	w8, wzr
  420b74:	mov	w0, w8
  420b78:	adrp	x1, 443000 <_fini+0x2c30>
  420b7c:	add	x1, x1, #0xb15
  420b80:	ldr	x2, [sp, #32]
  420b84:	mov	w3, #0xe87                 	// #3719
  420b88:	ldr	x4, [sp, #24]
  420b8c:	bl	406c68 <log_assert_failed_realm@plt>
  420b90:	ldur	x8, [x29, #-16]
  420b94:	ldr	x0, [x8, #8]
  420b98:	ldur	x5, [x29, #-32]
  420b9c:	ldur	x8, [x29, #-24]
  420ba0:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  420ba4:	add	x1, x1, #0xf86
  420ba8:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  420bac:	add	x2, x2, #0xf9f
  420bb0:	adrp	x3, 440000 <on_brightness_writer_exit+0x15c>
  420bb4:	add	x3, x3, #0xfb9
  420bb8:	adrp	x4, 442000 <_fini+0x1c30>
  420bbc:	add	x4, x4, #0x977
  420bc0:	add	x6, sp, #0x30
  420bc4:	adrp	x7, 442000 <_fini+0x1c30>
  420bc8:	add	x7, x7, #0x981
  420bcc:	mov	x9, sp
  420bd0:	str	x8, [x9]
  420bd4:	mov	x8, sp
  420bd8:	adrp	x9, 443000 <_fini+0x2c30>
  420bdc:	add	x9, x9, #0xc0a
  420be0:	str	x9, [x8, #8]
  420be4:	bl	407368 <sd_bus_call_method@plt>
  420be8:	str	w0, [sp, #44]
  420bec:	ldr	w10, [sp, #44]
  420bf0:	cmp	w10, #0x0
  420bf4:	cset	w10, ge  // ge = tcont
  420bf8:	tbnz	w10, #0, 420c10 <manager_start_unit+0x1a4>
  420bfc:	ldr	w8, [sp, #44]
  420c00:	stur	w8, [x29, #-4]
  420c04:	mov	w8, #0x1                   	// #1
  420c08:	str	w8, [sp, #40]
  420c0c:	b	420c28 <manager_start_unit+0x1bc>
  420c10:	ldr	x0, [sp, #48]
  420c14:	ldur	x1, [x29, #-40]
  420c18:	bl	4209dc <strdup_job>
  420c1c:	stur	w0, [x29, #-4]
  420c20:	mov	w8, #0x1                   	// #1
  420c24:	str	w8, [sp, #40]
  420c28:	add	x0, sp, #0x30
  420c2c:	bl	42092c <sd_bus_message_unrefp>
  420c30:	ldur	w0, [x29, #-4]
  420c34:	ldp	x29, x30, [sp, #96]
  420c38:	add	sp, sp, #0x70
  420c3c:	ret

0000000000420c40 <manager_stop_unit>:
  420c40:	sub	sp, sp, #0x70
  420c44:	stp	x29, x30, [sp, #96]
  420c48:	add	x29, sp, #0x60
  420c4c:	mov	x8, xzr
  420c50:	adrp	x9, 442000 <_fini+0x1c30>
  420c54:	add	x9, x9, #0xd8e
  420c58:	add	x9, x9, #0x3
  420c5c:	adrp	x10, 443000 <_fini+0x2c30>
  420c60:	add	x10, x10, #0xc12
  420c64:	stur	x0, [x29, #-16]
  420c68:	stur	x1, [x29, #-24]
  420c6c:	stur	x2, [x29, #-32]
  420c70:	stur	x3, [x29, #-40]
  420c74:	str	x8, [sp, #48]
  420c78:	str	x9, [sp, #32]
  420c7c:	str	x10, [sp, #24]
  420c80:	ldur	x8, [x29, #-16]
  420c84:	cmp	x8, #0x0
  420c88:	cset	w9, ne  // ne = any
  420c8c:	mov	w10, #0x1                   	// #1
  420c90:	eor	w9, w9, #0x1
  420c94:	eor	w9, w9, w10
  420c98:	eor	w9, w9, w10
  420c9c:	and	w9, w9, #0x1
  420ca0:	mov	w0, w9
  420ca4:	sxtw	x8, w0
  420ca8:	cbz	x8, 420ccc <manager_stop_unit+0x8c>
  420cac:	mov	w8, wzr
  420cb0:	mov	w0, w8
  420cb4:	adrp	x1, 442000 <_fini+0x1c30>
  420cb8:	add	x1, x1, #0x331
  420cbc:	ldr	x2, [sp, #32]
  420cc0:	mov	w3, #0xe9c                 	// #3740
  420cc4:	ldr	x4, [sp, #24]
  420cc8:	bl	406c68 <log_assert_failed_realm@plt>
  420ccc:	ldur	x8, [x29, #-24]
  420cd0:	cmp	x8, #0x0
  420cd4:	cset	w9, ne  // ne = any
  420cd8:	mov	w10, #0x1                   	// #1
  420cdc:	eor	w9, w9, #0x1
  420ce0:	eor	w9, w9, w10
  420ce4:	eor	w9, w9, w10
  420ce8:	and	w9, w9, #0x1
  420cec:	mov	w0, w9
  420cf0:	sxtw	x8, w0
  420cf4:	cbz	x8, 420d18 <manager_stop_unit+0xd8>
  420cf8:	mov	w8, wzr
  420cfc:	mov	w0, w8
  420d00:	adrp	x1, 443000 <_fini+0x2c30>
  420d04:	add	x1, x1, #0xc05
  420d08:	ldr	x2, [sp, #32]
  420d0c:	mov	w3, #0xe9d                 	// #3741
  420d10:	ldr	x4, [sp, #24]
  420d14:	bl	406c68 <log_assert_failed_realm@plt>
  420d18:	ldur	x8, [x29, #-40]
  420d1c:	cmp	x8, #0x0
  420d20:	cset	w9, ne  // ne = any
  420d24:	mov	w10, #0x1                   	// #1
  420d28:	eor	w9, w9, #0x1
  420d2c:	eor	w9, w9, w10
  420d30:	eor	w9, w9, w10
  420d34:	and	w9, w9, #0x1
  420d38:	mov	w0, w9
  420d3c:	sxtw	x8, w0
  420d40:	cbz	x8, 420d64 <manager_stop_unit+0x124>
  420d44:	mov	w8, wzr
  420d48:	mov	w0, w8
  420d4c:	adrp	x1, 443000 <_fini+0x2c30>
  420d50:	add	x1, x1, #0xb15
  420d54:	ldr	x2, [sp, #32]
  420d58:	mov	w3, #0xe9e                 	// #3742
  420d5c:	ldr	x4, [sp, #24]
  420d60:	bl	406c68 <log_assert_failed_realm@plt>
  420d64:	ldur	x8, [x29, #-16]
  420d68:	ldr	x0, [x8, #8]
  420d6c:	ldur	x5, [x29, #-32]
  420d70:	ldur	x8, [x29, #-24]
  420d74:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  420d78:	add	x1, x1, #0xf86
  420d7c:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  420d80:	add	x2, x2, #0xf9f
  420d84:	adrp	x3, 440000 <on_brightness_writer_exit+0x15c>
  420d88:	add	x3, x3, #0xfb9
  420d8c:	adrp	x4, 443000 <_fini+0x2c30>
  420d90:	add	x4, x4, #0xc5a
  420d94:	add	x6, sp, #0x30
  420d98:	adrp	x7, 442000 <_fini+0x1c30>
  420d9c:	add	x7, x7, #0x981
  420da0:	mov	x9, sp
  420da4:	str	x8, [x9]
  420da8:	mov	x8, sp
  420dac:	adrp	x9, 442000 <_fini+0x1c30>
  420db0:	add	x9, x9, #0x984
  420db4:	str	x9, [x8, #8]
  420db8:	bl	407368 <sd_bus_call_method@plt>
  420dbc:	str	w0, [sp, #44]
  420dc0:	ldr	w10, [sp, #44]
  420dc4:	cmp	w10, #0x0
  420dc8:	cset	w10, ge  // ge = tcont
  420dcc:	tbnz	w10, #0, 420e30 <manager_stop_unit+0x1f0>
  420dd0:	ldur	x0, [x29, #-32]
  420dd4:	adrp	x1, 443000 <_fini+0x2c30>
  420dd8:	add	x1, x1, #0xc63
  420ddc:	bl	407828 <sd_bus_error_has_name@plt>
  420de0:	cbnz	w0, 420df8 <manager_stop_unit+0x1b8>
  420de4:	ldur	x0, [x29, #-32]
  420de8:	adrp	x1, 443000 <_fini+0x2c30>
  420dec:	add	x1, x1, #0xc87
  420df0:	bl	407828 <sd_bus_error_has_name@plt>
  420df4:	cbz	w0, 420e1c <manager_stop_unit+0x1dc>
  420df8:	ldur	x8, [x29, #-40]
  420dfc:	mov	x9, xzr
  420e00:	str	x9, [x8]
  420e04:	ldur	x0, [x29, #-32]
  420e08:	bl	4071e8 <sd_bus_error_free@plt>
  420e0c:	stur	wzr, [x29, #-4]
  420e10:	mov	w10, #0x1                   	// #1
  420e14:	str	w10, [sp, #40]
  420e18:	b	420e48 <manager_stop_unit+0x208>
  420e1c:	ldr	w8, [sp, #44]
  420e20:	stur	w8, [x29, #-4]
  420e24:	mov	w8, #0x1                   	// #1
  420e28:	str	w8, [sp, #40]
  420e2c:	b	420e48 <manager_stop_unit+0x208>
  420e30:	ldr	x0, [sp, #48]
  420e34:	ldur	x1, [x29, #-40]
  420e38:	bl	4209dc <strdup_job>
  420e3c:	stur	w0, [x29, #-4]
  420e40:	mov	w8, #0x1                   	// #1
  420e44:	str	w8, [sp, #40]
  420e48:	add	x0, sp, #0x30
  420e4c:	bl	42092c <sd_bus_message_unrefp>
  420e50:	ldur	w0, [x29, #-4]
  420e54:	ldp	x29, x30, [sp, #96]
  420e58:	add	sp, sp, #0x70
  420e5c:	ret

0000000000420e60 <manager_abandon_scope>:
  420e60:	sub	sp, sp, #0x60
  420e64:	stp	x29, x30, [sp, #80]
  420e68:	add	x29, sp, #0x50
  420e6c:	mov	x8, xzr
  420e70:	adrp	x9, 442000 <_fini+0x1c30>
  420e74:	add	x9, x9, #0xd8e
  420e78:	add	x9, x9, #0x3
  420e7c:	stur	x0, [x29, #-16]
  420e80:	stur	x1, [x29, #-24]
  420e84:	stur	x2, [x29, #-32]
  420e88:	str	xzr, [sp, #24]
  420e8c:	str	xzr, [sp, #32]
  420e90:	str	xzr, [sp, #40]
  420e94:	str	x8, [sp, #16]
  420e98:	str	x9, [sp]
  420e9c:	ldur	x8, [x29, #-16]
  420ea0:	cmp	x8, #0x0
  420ea4:	cset	w9, ne  // ne = any
  420ea8:	mov	w10, #0x1                   	// #1
  420eac:	eor	w9, w9, #0x1
  420eb0:	eor	w9, w9, w10
  420eb4:	eor	w9, w9, w10
  420eb8:	and	w9, w9, #0x1
  420ebc:	mov	w0, w9
  420ec0:	sxtw	x8, w0
  420ec4:	cbz	x8, 420eec <manager_abandon_scope+0x8c>
  420ec8:	mov	w8, wzr
  420ecc:	mov	w0, w8
  420ed0:	adrp	x1, 442000 <_fini+0x1c30>
  420ed4:	add	x1, x1, #0x331
  420ed8:	ldr	x2, [sp]
  420edc:	mov	w3, #0xebd                 	// #3773
  420ee0:	adrp	x4, 443000 <_fini+0x2c30>
  420ee4:	add	x4, x4, #0xcab
  420ee8:	bl	406c68 <log_assert_failed_realm@plt>
  420eec:	ldur	x8, [x29, #-24]
  420ef0:	cmp	x8, #0x0
  420ef4:	cset	w9, ne  // ne = any
  420ef8:	mov	w10, #0x1                   	// #1
  420efc:	eor	w9, w9, #0x1
  420f00:	eor	w9, w9, w10
  420f04:	eor	w9, w9, w10
  420f08:	and	w9, w9, #0x1
  420f0c:	mov	w0, w9
  420f10:	sxtw	x8, w0
  420f14:	cbz	x8, 420f3c <manager_abandon_scope+0xdc>
  420f18:	mov	w8, wzr
  420f1c:	mov	w0, w8
  420f20:	adrp	x1, 443000 <_fini+0x2c30>
  420f24:	add	x1, x1, #0xb07
  420f28:	ldr	x2, [sp]
  420f2c:	mov	w3, #0xebe                 	// #3774
  420f30:	adrp	x4, 443000 <_fini+0x2c30>
  420f34:	add	x4, x4, #0xcab
  420f38:	bl	406c68 <log_assert_failed_realm@plt>
  420f3c:	ldur	x0, [x29, #-24]
  420f40:	bl	407838 <unit_dbus_path_from_name@plt>
  420f44:	str	x0, [sp, #16]
  420f48:	ldr	x8, [sp, #16]
  420f4c:	cbnz	x8, 420f64 <manager_abandon_scope+0x104>
  420f50:	mov	w8, #0xfffffff4            	// #-12
  420f54:	stur	w8, [x29, #-4]
  420f58:	mov	w8, #0x1                   	// #1
  420f5c:	str	w8, [sp, #8]
  420f60:	b	421028 <manager_abandon_scope+0x1c8>
  420f64:	ldur	x8, [x29, #-16]
  420f68:	ldr	x0, [x8, #8]
  420f6c:	ldr	x2, [sp, #16]
  420f70:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  420f74:	add	x1, x1, #0xf86
  420f78:	adrp	x3, 443000 <_fini+0x2c30>
  420f7c:	add	x3, x3, #0xcee
  420f80:	adrp	x4, 443000 <_fini+0x2c30>
  420f84:	add	x4, x4, #0xd0d
  420f88:	add	x5, sp, #0x18
  420f8c:	mov	x8, xzr
  420f90:	mov	x6, x8
  420f94:	mov	x7, x8
  420f98:	bl	407368 <sd_bus_call_method@plt>
  420f9c:	str	w0, [sp, #12]
  420fa0:	ldr	w9, [sp, #12]
  420fa4:	cmp	w9, #0x0
  420fa8:	cset	w9, ge  // ge = tcont
  420fac:	tbnz	w9, #0, 42101c <manager_abandon_scope+0x1bc>
  420fb0:	add	x0, sp, #0x18
  420fb4:	adrp	x1, 443000 <_fini+0x2c30>
  420fb8:	add	x1, x1, #0xc63
  420fbc:	bl	407828 <sd_bus_error_has_name@plt>
  420fc0:	cbnz	w0, 420fec <manager_abandon_scope+0x18c>
  420fc4:	add	x0, sp, #0x18
  420fc8:	adrp	x1, 443000 <_fini+0x2c30>
  420fcc:	add	x1, x1, #0xc87
  420fd0:	bl	407828 <sd_bus_error_has_name@plt>
  420fd4:	cbnz	w0, 420fec <manager_abandon_scope+0x18c>
  420fd8:	add	x0, sp, #0x18
  420fdc:	adrp	x1, 443000 <_fini+0x2c30>
  420fe0:	add	x1, x1, #0xd15
  420fe4:	bl	407828 <sd_bus_error_has_name@plt>
  420fe8:	cbz	w0, 420ffc <manager_abandon_scope+0x19c>
  420fec:	stur	wzr, [x29, #-4]
  420ff0:	mov	w8, #0x1                   	// #1
  420ff4:	str	w8, [sp, #8]
  420ff8:	b	421028 <manager_abandon_scope+0x1c8>
  420ffc:	ldur	x0, [x29, #-32]
  421000:	add	x1, sp, #0x18
  421004:	bl	407848 <sd_bus_error_move@plt>
  421008:	ldr	w8, [sp, #12]
  42100c:	stur	w8, [x29, #-4]
  421010:	mov	w8, #0x1                   	// #1
  421014:	str	w8, [sp, #8]
  421018:	b	421028 <manager_abandon_scope+0x1c8>
  42101c:	mov	w8, #0x1                   	// #1
  421020:	stur	w8, [x29, #-4]
  421024:	str	w8, [sp, #8]
  421028:	add	x0, sp, #0x10
  42102c:	bl	4152e4 <freep>
  421030:	add	x0, sp, #0x18
  421034:	bl	4071e8 <sd_bus_error_free@plt>
  421038:	ldur	w0, [x29, #-4]
  42103c:	ldp	x29, x30, [sp, #80]
  421040:	add	sp, sp, #0x60
  421044:	ret

0000000000421048 <manager_kill_unit>:
  421048:	sub	sp, sp, #0x50
  42104c:	stp	x29, x30, [sp, #64]
  421050:	add	x29, sp, #0x40
  421054:	adrp	x8, 442000 <_fini+0x1c30>
  421058:	add	x8, x8, #0xd8e
  42105c:	add	x8, x8, #0x3
  421060:	stur	x0, [x29, #-8]
  421064:	stur	x1, [x29, #-16]
  421068:	stur	w2, [x29, #-20]
  42106c:	stur	w3, [x29, #-24]
  421070:	str	x4, [sp, #32]
  421074:	str	x8, [sp, #24]
  421078:	ldur	x8, [x29, #-8]
  42107c:	cmp	x8, #0x0
  421080:	cset	w9, ne  // ne = any
  421084:	mov	w10, #0x1                   	// #1
  421088:	eor	w9, w9, #0x1
  42108c:	eor	w9, w9, w10
  421090:	eor	w9, w9, w10
  421094:	and	w9, w9, #0x1
  421098:	mov	w0, w9
  42109c:	sxtw	x8, w0
  4210a0:	cbz	x8, 4210c8 <manager_kill_unit+0x80>
  4210a4:	mov	w8, wzr
  4210a8:	mov	w0, w8
  4210ac:	adrp	x1, 442000 <_fini+0x1c30>
  4210b0:	add	x1, x1, #0x331
  4210b4:	ldr	x2, [sp, #24]
  4210b8:	mov	w3, #0xedb                 	// #3803
  4210bc:	adrp	x4, 443000 <_fini+0x2c30>
  4210c0:	add	x4, x4, #0xd3e
  4210c4:	bl	406c68 <log_assert_failed_realm@plt>
  4210c8:	ldur	x8, [x29, #-16]
  4210cc:	cmp	x8, #0x0
  4210d0:	cset	w9, ne  // ne = any
  4210d4:	mov	w10, #0x1                   	// #1
  4210d8:	eor	w9, w9, #0x1
  4210dc:	eor	w9, w9, w10
  4210e0:	eor	w9, w9, w10
  4210e4:	and	w9, w9, #0x1
  4210e8:	mov	w0, w9
  4210ec:	sxtw	x8, w0
  4210f0:	cbz	x8, 421118 <manager_kill_unit+0xd0>
  4210f4:	mov	w8, wzr
  4210f8:	mov	w0, w8
  4210fc:	adrp	x1, 443000 <_fini+0x2c30>
  421100:	add	x1, x1, #0xc05
  421104:	ldr	x2, [sp, #24]
  421108:	mov	w3, #0xedc                 	// #3804
  42110c:	adrp	x4, 443000 <_fini+0x2c30>
  421110:	add	x4, x4, #0xd3e
  421114:	bl	406c68 <log_assert_failed_realm@plt>
  421118:	ldur	x8, [x29, #-8]
  42111c:	ldr	x0, [x8, #8]
  421120:	ldr	x5, [sp, #32]
  421124:	ldur	x8, [x29, #-16]
  421128:	ldur	w9, [x29, #-20]
  42112c:	adrp	x10, 443000 <_fini+0x2c30>
  421130:	add	x10, x10, #0xd99
  421134:	adrp	x11, 443000 <_fini+0x2c30>
  421138:	add	x11, x11, #0xd94
  42113c:	cmp	w9, #0x0
  421140:	csel	x10, x11, x10, eq  // eq = none
  421144:	ldur	w9, [x29, #-24]
  421148:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  42114c:	add	x1, x1, #0xf86
  421150:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  421154:	add	x2, x2, #0xf9f
  421158:	adrp	x3, 440000 <on_brightness_writer_exit+0x15c>
  42115c:	add	x3, x3, #0xfb9
  421160:	adrp	x4, 443000 <_fini+0x2c30>
  421164:	add	x4, x4, #0xd8b
  421168:	mov	x11, xzr
  42116c:	mov	x6, x11
  421170:	adrp	x7, 443000 <_fini+0x2c30>
  421174:	add	x7, x7, #0x586
  421178:	mov	x11, sp
  42117c:	str	x8, [x11]
  421180:	mov	x8, sp
  421184:	str	x10, [x8, #8]
  421188:	mov	x8, sp
  42118c:	str	w9, [x8, #16]
  421190:	bl	407368 <sd_bus_call_method@plt>
  421194:	ldp	x29, x30, [sp, #64]
  421198:	add	sp, sp, #0x50
  42119c:	ret

00000000004211a0 <manager_unit_is_active>:
  4211a0:	sub	sp, sp, #0x90
  4211a4:	stp	x29, x30, [sp, #128]
  4211a8:	add	x29, sp, #0x80
  4211ac:	mov	x8, xzr
  4211b0:	adrp	x9, 442000 <_fini+0x1c30>
  4211b4:	add	x9, x9, #0xd8e
  4211b8:	add	x9, x9, #0x3
  4211bc:	stur	x0, [x29, #-16]
  4211c0:	stur	x1, [x29, #-24]
  4211c4:	stur	x2, [x29, #-32]
  4211c8:	stur	xzr, [x29, #-56]
  4211cc:	stur	xzr, [x29, #-48]
  4211d0:	stur	xzr, [x29, #-40]
  4211d4:	str	x8, [sp, #64]
  4211d8:	str	x8, [sp, #56]
  4211dc:	str	x9, [sp, #8]
  4211e0:	ldur	x8, [x29, #-16]
  4211e4:	cmp	x8, #0x0
  4211e8:	cset	w9, ne  // ne = any
  4211ec:	mov	w10, #0x1                   	// #1
  4211f0:	eor	w9, w9, #0x1
  4211f4:	eor	w9, w9, w10
  4211f8:	eor	w9, w9, w10
  4211fc:	and	w9, w9, #0x1
  421200:	mov	w0, w9
  421204:	sxtw	x8, w0
  421208:	cbz	x8, 421230 <manager_unit_is_active+0x90>
  42120c:	mov	w8, wzr
  421210:	mov	w0, w8
  421214:	adrp	x1, 442000 <_fini+0x1c30>
  421218:	add	x1, x1, #0x331
  42121c:	ldr	x2, [sp, #8]
  421220:	mov	w3, #0xef0                 	// #3824
  421224:	adrp	x4, 443000 <_fini+0x2c30>
  421228:	add	x4, x4, #0xd9d
  42122c:	bl	406c68 <log_assert_failed_realm@plt>
  421230:	ldur	x8, [x29, #-24]
  421234:	cmp	x8, #0x0
  421238:	cset	w9, ne  // ne = any
  42123c:	mov	w10, #0x1                   	// #1
  421240:	eor	w9, w9, #0x1
  421244:	eor	w9, w9, w10
  421248:	eor	w9, w9, w10
  42124c:	and	w9, w9, #0x1
  421250:	mov	w0, w9
  421254:	sxtw	x8, w0
  421258:	cbz	x8, 421280 <manager_unit_is_active+0xe0>
  42125c:	mov	w8, wzr
  421260:	mov	w0, w8
  421264:	adrp	x1, 443000 <_fini+0x2c30>
  421268:	add	x1, x1, #0xc05
  42126c:	ldr	x2, [sp, #8]
  421270:	mov	w3, #0xef1                 	// #3825
  421274:	adrp	x4, 443000 <_fini+0x2c30>
  421278:	add	x4, x4, #0xd9d
  42127c:	bl	406c68 <log_assert_failed_realm@plt>
  421280:	ldur	x0, [x29, #-24]
  421284:	bl	407838 <unit_dbus_path_from_name@plt>
  421288:	str	x0, [sp, #56]
  42128c:	ldr	x8, [sp, #56]
  421290:	cbnz	x8, 4212a8 <manager_unit_is_active+0x108>
  421294:	mov	w8, #0xfffffff4            	// #-12
  421298:	stur	w8, [x29, #-4]
  42129c:	mov	w8, #0x1                   	// #1
  4212a0:	str	w8, [sp, #40]
  4212a4:	b	42140c <manager_unit_is_active+0x26c>
  4212a8:	ldur	x8, [x29, #-16]
  4212ac:	ldr	x0, [x8, #8]
  4212b0:	ldr	x2, [sp, #56]
  4212b4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4212b8:	add	x1, x1, #0xf86
  4212bc:	adrp	x3, 443000 <_fini+0x2c30>
  4212c0:	add	x3, x3, #0xde1
  4212c4:	adrp	x4, 443000 <_fini+0x2c30>
  4212c8:	add	x4, x4, #0xdff
  4212cc:	sub	x5, x29, #0x38
  4212d0:	add	x6, sp, #0x40
  4212d4:	adrp	x7, 442000 <_fini+0x1c30>
  4212d8:	add	x7, x7, #0xf2
  4212dc:	bl	407858 <sd_bus_get_property@plt>
  4212e0:	str	w0, [sp, #44]
  4212e4:	ldr	w9, [sp, #44]
  4212e8:	cmp	w9, #0x0
  4212ec:	cset	w9, ge  // ge = tcont
  4212f0:	tbnz	w9, #0, 421384 <manager_unit_is_active+0x1e4>
  4212f4:	sub	x0, x29, #0x38
  4212f8:	adrp	x1, 443000 <_fini+0x2c30>
  4212fc:	add	x1, x1, #0xe0b
  421300:	bl	407828 <sd_bus_error_has_name@plt>
  421304:	cbnz	w0, 42131c <manager_unit_is_active+0x17c>
  421308:	sub	x0, x29, #0x38
  42130c:	adrp	x1, 443000 <_fini+0x2c30>
  421310:	add	x1, x1, #0xe2e
  421314:	bl	407828 <sd_bus_error_has_name@plt>
  421318:	cbz	w0, 42132c <manager_unit_is_active+0x18c>
  42131c:	mov	w8, #0x1                   	// #1
  421320:	stur	w8, [x29, #-4]
  421324:	str	w8, [sp, #40]
  421328:	b	42140c <manager_unit_is_active+0x26c>
  42132c:	sub	x0, x29, #0x38
  421330:	adrp	x1, 443000 <_fini+0x2c30>
  421334:	add	x1, x1, #0xc63
  421338:	bl	407828 <sd_bus_error_has_name@plt>
  42133c:	cbnz	w0, 421354 <manager_unit_is_active+0x1b4>
  421340:	sub	x0, x29, #0x38
  421344:	adrp	x1, 443000 <_fini+0x2c30>
  421348:	add	x1, x1, #0xc87
  42134c:	bl	407828 <sd_bus_error_has_name@plt>
  421350:	cbz	w0, 421364 <manager_unit_is_active+0x1c4>
  421354:	stur	wzr, [x29, #-4]
  421358:	mov	w8, #0x1                   	// #1
  42135c:	str	w8, [sp, #40]
  421360:	b	42140c <manager_unit_is_active+0x26c>
  421364:	ldur	x0, [x29, #-32]
  421368:	sub	x1, x29, #0x38
  42136c:	bl	407848 <sd_bus_error_move@plt>
  421370:	ldr	w8, [sp, #44]
  421374:	stur	w8, [x29, #-4]
  421378:	mov	w8, #0x1                   	// #1
  42137c:	str	w8, [sp, #40]
  421380:	b	42140c <manager_unit_is_active+0x26c>
  421384:	ldr	x0, [sp, #64]
  421388:	adrp	x1, 442000 <_fini+0x1c30>
  42138c:	add	x1, x1, #0xf2
  421390:	add	x2, sp, #0x30
  421394:	bl	4074c8 <sd_bus_message_read@plt>
  421398:	str	w0, [sp, #44]
  42139c:	ldr	w8, [sp, #44]
  4213a0:	cmp	w8, #0x0
  4213a4:	cset	w8, ge  // ge = tcont
  4213a8:	tbnz	w8, #0, 4213c0 <manager_unit_is_active+0x220>
  4213ac:	ldr	w8, [sp, #44]
  4213b0:	stur	w8, [x29, #-4]
  4213b4:	mov	w8, #0x1                   	// #1
  4213b8:	str	w8, [sp, #40]
  4213bc:	b	42140c <manager_unit_is_active+0x26c>
  4213c0:	adrp	x8, 460000 <__TMC_END__>
  4213c4:	add	x8, x8, #0x60
  4213c8:	ldr	q0, [x8]
  4213cc:	add	x0, sp, #0x10
  4213d0:	str	q0, [sp, #16]
  4213d4:	ldr	x8, [x8, #16]
  4213d8:	str	x8, [sp, #32]
  4213dc:	ldr	x1, [sp, #48]
  4213e0:	bl	407348 <strv_find@plt>
  4213e4:	cmp	x0, #0x0
  4213e8:	cset	w9, ne  // ne = any
  4213ec:	mov	w10, #0x1                   	// #1
  4213f0:	eor	w9, w9, #0x1
  4213f4:	eor	w9, w9, w10
  4213f8:	eor	w9, w9, w10
  4213fc:	and	w9, w9, #0x1
  421400:	stur	w9, [x29, #-4]
  421404:	mov	w9, #0x1                   	// #1
  421408:	str	w9, [sp, #40]
  42140c:	add	x0, sp, #0x38
  421410:	bl	4152e4 <freep>
  421414:	add	x0, sp, #0x40
  421418:	bl	42092c <sd_bus_message_unrefp>
  42141c:	sub	x0, x29, #0x38
  421420:	bl	4071e8 <sd_bus_error_free@plt>
  421424:	ldur	w0, [x29, #-4]
  421428:	ldp	x29, x30, [sp, #128]
  42142c:	add	sp, sp, #0x90
  421430:	ret

0000000000421434 <manager_job_is_active>:
  421434:	sub	sp, sp, #0x60
  421438:	stp	x29, x30, [sp, #80]
  42143c:	add	x29, sp, #0x50
  421440:	mov	x8, xzr
  421444:	adrp	x9, 442000 <_fini+0x1c30>
  421448:	add	x9, x9, #0xd8e
  42144c:	add	x9, x9, #0x3
  421450:	stur	x0, [x29, #-16]
  421454:	stur	x1, [x29, #-24]
  421458:	stur	x2, [x29, #-32]
  42145c:	str	xzr, [sp, #24]
  421460:	str	xzr, [sp, #32]
  421464:	str	xzr, [sp, #40]
  421468:	str	x8, [sp, #16]
  42146c:	str	x9, [sp]
  421470:	ldur	x8, [x29, #-16]
  421474:	cmp	x8, #0x0
  421478:	cset	w9, ne  // ne = any
  42147c:	mov	w10, #0x1                   	// #1
  421480:	eor	w9, w9, #0x1
  421484:	eor	w9, w9, w10
  421488:	eor	w9, w9, w10
  42148c:	and	w9, w9, #0x1
  421490:	mov	w0, w9
  421494:	sxtw	x8, w0
  421498:	cbz	x8, 4214c0 <manager_job_is_active+0x8c>
  42149c:	mov	w8, wzr
  4214a0:	mov	w0, w8
  4214a4:	adrp	x1, 442000 <_fini+0x1c30>
  4214a8:	add	x1, x1, #0x331
  4214ac:	ldr	x2, [sp]
  4214b0:	mov	w3, #0xf1d                 	// #3869
  4214b4:	adrp	x4, 443000 <_fini+0x2c30>
  4214b8:	add	x4, x4, #0xe66
  4214bc:	bl	406c68 <log_assert_failed_realm@plt>
  4214c0:	ldur	x8, [x29, #-24]
  4214c4:	cmp	x8, #0x0
  4214c8:	cset	w9, ne  // ne = any
  4214cc:	mov	w10, #0x1                   	// #1
  4214d0:	eor	w9, w9, #0x1
  4214d4:	eor	w9, w9, w10
  4214d8:	eor	w9, w9, w10
  4214dc:	and	w9, w9, #0x1
  4214e0:	mov	w0, w9
  4214e4:	sxtw	x8, w0
  4214e8:	cbz	x8, 421510 <manager_job_is_active+0xdc>
  4214ec:	mov	w8, wzr
  4214f0:	mov	w0, w8
  4214f4:	adrp	x1, 443000 <_fini+0x2c30>
  4214f8:	add	x1, x1, #0xea9
  4214fc:	ldr	x2, [sp]
  421500:	mov	w3, #0xf1e                 	// #3870
  421504:	adrp	x4, 443000 <_fini+0x2c30>
  421508:	add	x4, x4, #0xe66
  42150c:	bl	406c68 <log_assert_failed_realm@plt>
  421510:	ldur	x8, [x29, #-16]
  421514:	ldr	x0, [x8, #8]
  421518:	ldur	x2, [x29, #-24]
  42151c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  421520:	add	x1, x1, #0xf86
  421524:	adrp	x3, 443000 <_fini+0x2c30>
  421528:	add	x3, x3, #0xeae
  42152c:	adrp	x4, 443000 <_fini+0x2c30>
  421530:	add	x4, x4, #0xecb
  421534:	add	x5, sp, #0x18
  421538:	add	x6, sp, #0x10
  42153c:	adrp	x7, 442000 <_fini+0x1c30>
  421540:	add	x7, x7, #0xf2
  421544:	bl	407858 <sd_bus_get_property@plt>
  421548:	str	w0, [sp, #12]
  42154c:	ldr	w9, [sp, #12]
  421550:	cmp	w9, #0x0
  421554:	cset	w9, ge  // ge = tcont
  421558:	tbnz	w9, #0, 4215d8 <manager_job_is_active+0x1a4>
  42155c:	add	x0, sp, #0x18
  421560:	adrp	x1, 443000 <_fini+0x2c30>
  421564:	add	x1, x1, #0xe0b
  421568:	bl	407828 <sd_bus_error_has_name@plt>
  42156c:	cbnz	w0, 421584 <manager_job_is_active+0x150>
  421570:	add	x0, sp, #0x18
  421574:	adrp	x1, 443000 <_fini+0x2c30>
  421578:	add	x1, x1, #0xe2e
  42157c:	bl	407828 <sd_bus_error_has_name@plt>
  421580:	cbz	w0, 421594 <manager_job_is_active+0x160>
  421584:	mov	w8, #0x1                   	// #1
  421588:	stur	w8, [x29, #-4]
  42158c:	str	w8, [sp, #8]
  421590:	b	4215e4 <manager_job_is_active+0x1b0>
  421594:	add	x0, sp, #0x18
  421598:	adrp	x1, 443000 <_fini+0x2c30>
  42159c:	add	x1, x1, #0xed1
  4215a0:	bl	407828 <sd_bus_error_has_name@plt>
  4215a4:	cbz	w0, 4215b8 <manager_job_is_active+0x184>
  4215a8:	stur	wzr, [x29, #-4]
  4215ac:	mov	w8, #0x1                   	// #1
  4215b0:	str	w8, [sp, #8]
  4215b4:	b	4215e4 <manager_job_is_active+0x1b0>
  4215b8:	ldur	x0, [x29, #-32]
  4215bc:	add	x1, sp, #0x18
  4215c0:	bl	407848 <sd_bus_error_move@plt>
  4215c4:	ldr	w8, [sp, #12]
  4215c8:	stur	w8, [x29, #-4]
  4215cc:	mov	w8, #0x1                   	// #1
  4215d0:	str	w8, [sp, #8]
  4215d4:	b	4215e4 <manager_job_is_active+0x1b0>
  4215d8:	mov	w8, #0x1                   	// #1
  4215dc:	stur	w8, [x29, #-4]
  4215e0:	str	w8, [sp, #8]
  4215e4:	add	x0, sp, #0x10
  4215e8:	bl	42092c <sd_bus_message_unrefp>
  4215ec:	add	x0, sp, #0x18
  4215f0:	bl	4071e8 <sd_bus_error_free@plt>
  4215f4:	ldur	w0, [x29, #-4]
  4215f8:	ldp	x29, x30, [sp, #80]
  4215fc:	add	sp, sp, #0x60
  421600:	ret

0000000000421604 <sd_bus_creds_unrefp>:
  421604:	sub	sp, sp, #0x20
  421608:	stp	x29, x30, [sp, #16]
  42160c:	add	x29, sp, #0x10
  421610:	str	x0, [sp, #8]
  421614:	ldr	x8, [sp, #8]
  421618:	ldr	x8, [x8]
  42161c:	cbz	x8, 42162c <sd_bus_creds_unrefp+0x28>
  421620:	ldr	x8, [sp, #8]
  421624:	ldr	x0, [x8]
  421628:	bl	407868 <sd_bus_creds_unref@plt>
  42162c:	ldp	x29, x30, [sp, #16]
  421630:	add	sp, sp, #0x20
  421634:	ret

0000000000421638 <bus_manager_log_shutdown>:
  421638:	stp	x29, x30, [sp, #-16]!
  42163c:	mov	x29, sp
  421640:	sub	sp, sp, #0xe0
  421644:	adrp	x8, 442000 <_fini+0x1c30>
  421648:	add	x8, x8, #0xd8e
  42164c:	add	x8, x8, #0x3
  421650:	adrp	x9, 444000 <_fini+0x3c30>
  421654:	add	x9, x9, #0xb6
  421658:	stur	x0, [x29, #-8]
  42165c:	stur	x1, [x29, #-16]
  421660:	stur	x8, [x29, #-200]
  421664:	stur	x9, [x29, #-208]
  421668:	ldur	x8, [x29, #-8]
  42166c:	cmp	x8, #0x0
  421670:	cset	w9, ne  // ne = any
  421674:	mov	w10, #0x1                   	// #1
  421678:	eor	w9, w9, #0x1
  42167c:	eor	w9, w9, w10
  421680:	eor	w9, w9, w10
  421684:	and	w9, w9, #0x1
  421688:	mov	w0, w9
  42168c:	sxtw	x8, w0
  421690:	cbz	x8, 4216b4 <bus_manager_log_shutdown+0x7c>
  421694:	mov	w8, wzr
  421698:	mov	w0, w8
  42169c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4216a0:	add	x1, x1, #0x5ef
  4216a4:	ldur	x2, [x29, #-200]
  4216a8:	mov	w3, #0x5df                 	// #1503
  4216ac:	ldur	x4, [x29, #-208]
  4216b0:	bl	406c68 <log_assert_failed_realm@plt>
  4216b4:	ldur	x8, [x29, #-16]
  4216b8:	cmp	x8, #0x0
  4216bc:	cset	w9, ne  // ne = any
  4216c0:	mov	w10, #0x1                   	// #1
  4216c4:	eor	w9, w9, #0x1
  4216c8:	eor	w9, w9, w10
  4216cc:	eor	w9, w9, w10
  4216d0:	and	w9, w9, #0x1
  4216d4:	mov	w0, w9
  4216d8:	sxtw	x8, w0
  4216dc:	cbz	x8, 421700 <bus_manager_log_shutdown+0xc8>
  4216e0:	mov	w8, wzr
  4216e4:	mov	w0, w8
  4216e8:	adrp	x1, 443000 <_fini+0x2c30>
  4216ec:	add	x1, x1, #0x12b
  4216f0:	ldur	x2, [x29, #-200]
  4216f4:	mov	w3, #0x5e0                 	// #1504
  4216f8:	ldur	x4, [x29, #-208]
  4216fc:	bl	406c68 <log_assert_failed_realm@plt>
  421700:	ldur	x0, [x29, #-16]
  421704:	adrp	x1, 441000 <_fini+0xc30>
  421708:	add	x1, x1, #0x879
  42170c:	bl	407158 <strcmp@plt>
  421710:	cbnz	w0, 421730 <bus_manager_log_shutdown+0xf8>
  421714:	adrp	x8, 444000 <_fini+0x3c30>
  421718:	add	x8, x8, #0xec
  42171c:	stur	x8, [x29, #-24]
  421720:	adrp	x8, 444000 <_fini+0x3c30>
  421724:	add	x8, x8, #0x10c
  421728:	stur	x8, [x29, #-32]
  42172c:	b	4217d4 <bus_manager_log_shutdown+0x19c>
  421730:	ldur	x0, [x29, #-16]
  421734:	adrp	x1, 441000 <_fini+0xc30>
  421738:	add	x1, x1, #0x889
  42173c:	bl	407158 <strcmp@plt>
  421740:	cbnz	w0, 421760 <bus_manager_log_shutdown+0x128>
  421744:	adrp	x8, 444000 <_fini+0x3c30>
  421748:	add	x8, x8, #0x11f
  42174c:	stur	x8, [x29, #-24]
  421750:	adrp	x8, 444000 <_fini+0x3c30>
  421754:	add	x8, x8, #0x13b
  421758:	stur	x8, [x29, #-32]
  42175c:	b	4217d4 <bus_manager_log_shutdown+0x19c>
  421760:	ldur	x0, [x29, #-16]
  421764:	adrp	x1, 441000 <_fini+0xc30>
  421768:	add	x1, x1, #0x897
  42176c:	bl	407158 <strcmp@plt>
  421770:	cbnz	w0, 421790 <bus_manager_log_shutdown+0x158>
  421774:	adrp	x8, 444000 <_fini+0x3c30>
  421778:	add	x8, x8, #0x14b
  42177c:	stur	x8, [x29, #-24]
  421780:	adrp	x8, 444000 <_fini+0x3c30>
  421784:	add	x8, x8, #0x165
  421788:	stur	x8, [x29, #-32]
  42178c:	b	4217d4 <bus_manager_log_shutdown+0x19c>
  421790:	ldur	x0, [x29, #-16]
  421794:	adrp	x1, 441000 <_fini+0xc30>
  421798:	add	x1, x1, #0x8a3
  42179c:	bl	407158 <strcmp@plt>
  4217a0:	cbnz	w0, 4217c0 <bus_manager_log_shutdown+0x188>
  4217a4:	adrp	x8, 444000 <_fini+0x3c30>
  4217a8:	add	x8, x8, #0x173
  4217ac:	stur	x8, [x29, #-24]
  4217b0:	adrp	x8, 444000 <_fini+0x3c30>
  4217b4:	add	x8, x8, #0x19a
  4217b8:	stur	x8, [x29, #-32]
  4217bc:	b	4217d4 <bus_manager_log_shutdown+0x19c>
  4217c0:	adrp	x8, 444000 <_fini+0x3c30>
  4217c4:	add	x8, x8, #0x1a9
  4217c8:	stur	x8, [x29, #-24]
  4217cc:	mov	x8, xzr
  4217d0:	stur	x8, [x29, #-32]
  4217d4:	ldur	x8, [x29, #-8]
  4217d8:	ldr	x0, [x8, #336]
  4217dc:	bl	42099c <isempty>
  4217e0:	tbnz	w0, #0, 4217e8 <bus_manager_log_shutdown+0x1b0>
  4217e4:	b	421a04 <bus_manager_log_shutdown+0x3cc>
  4217e8:	ldur	x8, [x29, #-24]
  4217ec:	sub	x9, x29, #0x30
  4217f0:	stur	x8, [x29, #-48]
  4217f4:	adrp	x8, 444000 <_fini+0x3c30>
  4217f8:	add	x8, x8, #0x1c9
  4217fc:	str	x8, [x9, #8]
  421800:	stur	xzr, [x29, #-72]
  421804:	stur	xzr, [x29, #-80]
  421808:	ldur	x8, [x29, #-80]
  42180c:	mov	w9, #0x0                   	// #0
  421810:	cmp	x8, #0x2
  421814:	stur	w9, [x29, #-212]
  421818:	b.cs	421840 <bus_manager_log_shutdown+0x208>  // b.hs, b.nlast
  42181c:	ldur	x8, [x29, #-80]
  421820:	mov	x9, #0x8                   	// #8
  421824:	mul	x8, x9, x8
  421828:	sub	x9, x29, #0x30
  42182c:	add	x8, x9, x8
  421830:	ldr	x8, [x8]
  421834:	cmp	x8, #0x0
  421838:	cset	w10, ne  // ne = any
  42183c:	stur	w10, [x29, #-212]
  421840:	ldur	w8, [x29, #-212]
  421844:	tbnz	w8, #0, 42184c <bus_manager_log_shutdown+0x214>
  421848:	b	421884 <bus_manager_log_shutdown+0x24c>
  42184c:	ldur	x8, [x29, #-80]
  421850:	mov	x9, #0x8                   	// #8
  421854:	mul	x8, x9, x8
  421858:	sub	x9, x29, #0x30
  42185c:	add	x8, x9, x8
  421860:	ldr	x0, [x8]
  421864:	bl	4070a8 <strlen@plt>
  421868:	ldur	x8, [x29, #-72]
  42186c:	add	x8, x8, x0
  421870:	stur	x8, [x29, #-72]
  421874:	ldur	x8, [x29, #-80]
  421878:	add	x8, x8, #0x1
  42187c:	stur	x8, [x29, #-80]
  421880:	b	421808 <bus_manager_log_shutdown+0x1d0>
  421884:	ldur	x8, [x29, #-72]
  421888:	add	x8, x8, #0x1
  42188c:	stur	x8, [x29, #-88]
  421890:	ldur	x1, [x29, #-88]
  421894:	mov	x0, #0x1                   	// #1
  421898:	bl	420174 <size_multiply_overflow>
  42189c:	mov	w8, #0x1                   	// #1
  4218a0:	eor	w9, w0, #0x1
  4218a4:	eor	w9, w9, w8
  4218a8:	eor	w9, w9, w8
  4218ac:	eor	w8, w9, w8
  4218b0:	and	w8, w8, #0x1
  4218b4:	mov	w1, w8
  4218b8:	sxtw	x10, w1
  4218bc:	cbz	x10, 4218e0 <bus_manager_log_shutdown+0x2a8>
  4218c0:	mov	w8, wzr
  4218c4:	mov	w0, w8
  4218c8:	adrp	x1, 441000 <_fini+0xc30>
  4218cc:	add	x1, x1, #0xe80
  4218d0:	ldur	x2, [x29, #-200]
  4218d4:	mov	w3, #0x5f4                 	// #1524
  4218d8:	ldur	x4, [x29, #-208]
  4218dc:	bl	406c68 <log_assert_failed_realm@plt>
  4218e0:	ldur	x8, [x29, #-88]
  4218e4:	mov	x9, #0x1                   	// #1
  4218e8:	mul	x8, x9, x8
  4218ec:	cmp	x8, #0x400, lsl #12
  4218f0:	cset	w10, ls  // ls = plast
  4218f4:	mov	w11, #0x1                   	// #1
  4218f8:	eor	w10, w10, #0x1
  4218fc:	eor	w10, w10, w11
  421900:	eor	w10, w10, w11
  421904:	and	w10, w10, #0x1
  421908:	mov	w0, w10
  42190c:	sxtw	x8, w0
  421910:	cbz	x8, 421934 <bus_manager_log_shutdown+0x2fc>
  421914:	mov	w8, wzr
  421918:	mov	w0, w8
  42191c:	adrp	x1, 441000 <_fini+0xc30>
  421920:	add	x1, x1, #0xeab
  421924:	ldur	x2, [x29, #-200]
  421928:	mov	w3, #0x5f4                 	// #1524
  42192c:	ldur	x4, [x29, #-208]
  421930:	bl	406c68 <log_assert_failed_realm@plt>
  421934:	ldur	x8, [x29, #-88]
  421938:	mov	x9, #0x1                   	// #1
  42193c:	mul	x8, x9, x8
  421940:	mul	x8, x8, x9
  421944:	add	x8, x8, #0xf
  421948:	and	x8, x8, #0xfffffffffffffff0
  42194c:	mov	x9, sp
  421950:	subs	x8, x9, x8
  421954:	mov	sp, x8
  421958:	stur	x8, [x29, #-96]
  42195c:	ldur	x8, [x29, #-96]
  421960:	stur	x8, [x29, #-56]
  421964:	stur	x8, [x29, #-64]
  421968:	stur	xzr, [x29, #-80]
  42196c:	ldur	x8, [x29, #-80]
  421970:	mov	w9, #0x0                   	// #0
  421974:	cmp	x8, #0x2
  421978:	stur	w9, [x29, #-216]
  42197c:	b.cs	4219a4 <bus_manager_log_shutdown+0x36c>  // b.hs, b.nlast
  421980:	ldur	x8, [x29, #-80]
  421984:	mov	x9, #0x8                   	// #8
  421988:	mul	x8, x9, x8
  42198c:	sub	x9, x29, #0x30
  421990:	add	x8, x9, x8
  421994:	ldr	x8, [x8]
  421998:	cmp	x8, #0x0
  42199c:	cset	w10, ne  // ne = any
  4219a0:	stur	w10, [x29, #-216]
  4219a4:	ldur	w8, [x29, #-216]
  4219a8:	tbnz	w8, #0, 4219b0 <bus_manager_log_shutdown+0x378>
  4219ac:	b	4219e4 <bus_manager_log_shutdown+0x3ac>
  4219b0:	ldur	x0, [x29, #-64]
  4219b4:	ldur	x8, [x29, #-80]
  4219b8:	mov	x9, #0x8                   	// #8
  4219bc:	mul	x8, x9, x8
  4219c0:	sub	x9, x29, #0x30
  4219c4:	add	x8, x9, x8
  4219c8:	ldr	x1, [x8]
  4219cc:	bl	407258 <stpcpy@plt>
  4219d0:	stur	x0, [x29, #-64]
  4219d4:	ldur	x8, [x29, #-80]
  4219d8:	add	x8, x8, #0x1
  4219dc:	stur	x8, [x29, #-80]
  4219e0:	b	42196c <bus_manager_log_shutdown+0x334>
  4219e4:	ldur	x8, [x29, #-64]
  4219e8:	mov	w9, #0x0                   	// #0
  4219ec:	strb	w9, [x8]
  4219f0:	ldur	x8, [x29, #-56]
  4219f4:	stur	x8, [x29, #-104]
  4219f8:	ldur	x8, [x29, #-104]
  4219fc:	stur	x8, [x29, #-24]
  421a00:	b	421c34 <bus_manager_log_shutdown+0x5fc>
  421a04:	ldur	x8, [x29, #-24]
  421a08:	sub	x9, x29, #0x88
  421a0c:	stur	x8, [x29, #-136]
  421a10:	adrp	x8, 444000 <_fini+0x3c30>
  421a14:	add	x8, x8, #0x1cb
  421a18:	str	x8, [x9, #8]
  421a1c:	ldur	x8, [x29, #-8]
  421a20:	ldr	x8, [x8, #336]
  421a24:	str	x8, [x9, #16]
  421a28:	adrp	x8, 444000 <_fini+0x3c30>
  421a2c:	add	x8, x8, #0x1ce
  421a30:	str	x8, [x9, #24]
  421a34:	stur	xzr, [x29, #-160]
  421a38:	stur	xzr, [x29, #-168]
  421a3c:	ldur	x8, [x29, #-168]
  421a40:	mov	w9, #0x0                   	// #0
  421a44:	cmp	x8, #0x4
  421a48:	stur	w9, [x29, #-220]
  421a4c:	b.cs	421a74 <bus_manager_log_shutdown+0x43c>  // b.hs, b.nlast
  421a50:	ldur	x8, [x29, #-168]
  421a54:	mov	x9, #0x8                   	// #8
  421a58:	mul	x8, x9, x8
  421a5c:	sub	x9, x29, #0x88
  421a60:	add	x8, x9, x8
  421a64:	ldr	x8, [x8]
  421a68:	cmp	x8, #0x0
  421a6c:	cset	w10, ne  // ne = any
  421a70:	stur	w10, [x29, #-220]
  421a74:	ldur	w8, [x29, #-220]
  421a78:	tbnz	w8, #0, 421a80 <bus_manager_log_shutdown+0x448>
  421a7c:	b	421ab8 <bus_manager_log_shutdown+0x480>
  421a80:	ldur	x8, [x29, #-168]
  421a84:	mov	x9, #0x8                   	// #8
  421a88:	mul	x8, x9, x8
  421a8c:	sub	x9, x29, #0x88
  421a90:	add	x8, x9, x8
  421a94:	ldr	x0, [x8]
  421a98:	bl	4070a8 <strlen@plt>
  421a9c:	ldur	x8, [x29, #-160]
  421aa0:	add	x8, x8, x0
  421aa4:	stur	x8, [x29, #-160]
  421aa8:	ldur	x8, [x29, #-168]
  421aac:	add	x8, x8, #0x1
  421ab0:	stur	x8, [x29, #-168]
  421ab4:	b	421a3c <bus_manager_log_shutdown+0x404>
  421ab8:	ldur	x8, [x29, #-160]
  421abc:	add	x8, x8, #0x1
  421ac0:	stur	x8, [x29, #-176]
  421ac4:	ldur	x1, [x29, #-176]
  421ac8:	mov	x0, #0x1                   	// #1
  421acc:	bl	420174 <size_multiply_overflow>
  421ad0:	mov	w8, #0x1                   	// #1
  421ad4:	eor	w9, w0, #0x1
  421ad8:	eor	w9, w9, w8
  421adc:	eor	w9, w9, w8
  421ae0:	eor	w8, w9, w8
  421ae4:	and	w8, w8, #0x1
  421ae8:	mov	w1, w8
  421aec:	sxtw	x10, w1
  421af0:	cbz	x10, 421b14 <bus_manager_log_shutdown+0x4dc>
  421af4:	mov	w8, wzr
  421af8:	mov	w0, w8
  421afc:	adrp	x1, 441000 <_fini+0xc30>
  421b00:	add	x1, x1, #0xe80
  421b04:	ldur	x2, [x29, #-200]
  421b08:	mov	w3, #0x5f6                 	// #1526
  421b0c:	ldur	x4, [x29, #-208]
  421b10:	bl	406c68 <log_assert_failed_realm@plt>
  421b14:	ldur	x8, [x29, #-176]
  421b18:	mov	x9, #0x1                   	// #1
  421b1c:	mul	x8, x9, x8
  421b20:	cmp	x8, #0x400, lsl #12
  421b24:	cset	w10, ls  // ls = plast
  421b28:	mov	w11, #0x1                   	// #1
  421b2c:	eor	w10, w10, #0x1
  421b30:	eor	w10, w10, w11
  421b34:	eor	w10, w10, w11
  421b38:	and	w10, w10, #0x1
  421b3c:	mov	w0, w10
  421b40:	sxtw	x8, w0
  421b44:	cbz	x8, 421b68 <bus_manager_log_shutdown+0x530>
  421b48:	mov	w8, wzr
  421b4c:	mov	w0, w8
  421b50:	adrp	x1, 441000 <_fini+0xc30>
  421b54:	add	x1, x1, #0xeab
  421b58:	ldur	x2, [x29, #-200]
  421b5c:	mov	w3, #0x5f6                 	// #1526
  421b60:	ldur	x4, [x29, #-208]
  421b64:	bl	406c68 <log_assert_failed_realm@plt>
  421b68:	ldur	x8, [x29, #-176]
  421b6c:	mov	x9, #0x1                   	// #1
  421b70:	mul	x8, x9, x8
  421b74:	mul	x8, x8, x9
  421b78:	add	x8, x8, #0xf
  421b7c:	and	x8, x8, #0xfffffffffffffff0
  421b80:	mov	x9, sp
  421b84:	subs	x8, x9, x8
  421b88:	mov	sp, x8
  421b8c:	stur	x8, [x29, #-184]
  421b90:	ldur	x8, [x29, #-184]
  421b94:	stur	x8, [x29, #-144]
  421b98:	stur	x8, [x29, #-152]
  421b9c:	stur	xzr, [x29, #-168]
  421ba0:	ldur	x8, [x29, #-168]
  421ba4:	mov	w9, #0x0                   	// #0
  421ba8:	cmp	x8, #0x4
  421bac:	stur	w9, [x29, #-224]
  421bb0:	b.cs	421bd8 <bus_manager_log_shutdown+0x5a0>  // b.hs, b.nlast
  421bb4:	ldur	x8, [x29, #-168]
  421bb8:	mov	x9, #0x8                   	// #8
  421bbc:	mul	x8, x9, x8
  421bc0:	sub	x9, x29, #0x88
  421bc4:	add	x8, x9, x8
  421bc8:	ldr	x8, [x8]
  421bcc:	cmp	x8, #0x0
  421bd0:	cset	w10, ne  // ne = any
  421bd4:	stur	w10, [x29, #-224]
  421bd8:	ldur	w8, [x29, #-224]
  421bdc:	tbnz	w8, #0, 421be4 <bus_manager_log_shutdown+0x5ac>
  421be0:	b	421c18 <bus_manager_log_shutdown+0x5e0>
  421be4:	ldur	x0, [x29, #-152]
  421be8:	ldur	x8, [x29, #-168]
  421bec:	mov	x9, #0x8                   	// #8
  421bf0:	mul	x8, x9, x8
  421bf4:	sub	x9, x29, #0x88
  421bf8:	add	x8, x9, x8
  421bfc:	ldr	x1, [x8]
  421c00:	bl	407258 <stpcpy@plt>
  421c04:	stur	x0, [x29, #-152]
  421c08:	ldur	x8, [x29, #-168]
  421c0c:	add	x8, x8, #0x1
  421c10:	stur	x8, [x29, #-168]
  421c14:	b	421ba0 <bus_manager_log_shutdown+0x568>
  421c18:	ldur	x8, [x29, #-152]
  421c1c:	mov	w9, #0x0                   	// #0
  421c20:	strb	w9, [x8]
  421c24:	ldur	x8, [x29, #-144]
  421c28:	stur	x8, [x29, #-192]
  421c2c:	ldur	x8, [x29, #-192]
  421c30:	stur	x8, [x29, #-24]
  421c34:	ldur	x6, [x29, #-24]
  421c38:	ldur	x7, [x29, #-32]
  421c3c:	sub	sp, sp, #0x10
  421c40:	mov	w0, #0x5                   	// #5
  421c44:	mov	w8, wzr
  421c48:	mov	w1, w8
  421c4c:	ldur	x2, [x29, #-200]
  421c50:	mov	w3, #0x5fb                 	// #1531
  421c54:	adrp	x4, 444000 <_fini+0x3c30>
  421c58:	add	x4, x4, #0x1d1
  421c5c:	adrp	x5, 444000 <_fini+0x3c30>
  421c60:	add	x5, x5, #0x1ea
  421c64:	mov	x9, sp
  421c68:	mov	x10, xzr
  421c6c:	str	x10, [x9]
  421c70:	bl	407288 <log_struct_internal@plt>
  421c74:	add	sp, sp, #0x10
  421c78:	mov	sp, x29
  421c7c:	ldp	x29, x30, [sp], #16
  421c80:	ret

0000000000421c84 <manager_inhibit_timeout_handler>:
  421c84:	sub	sp, sp, #0x50
  421c88:	stp	x29, x30, [sp, #64]
  421c8c:	add	x29, sp, #0x40
  421c90:	adrp	x8, 442000 <_fini+0x1c30>
  421c94:	add	x8, x8, #0xd8e
  421c98:	add	x8, x8, #0x3
  421c9c:	stur	x0, [x29, #-8]
  421ca0:	stur	x1, [x29, #-16]
  421ca4:	stur	x2, [x29, #-24]
  421ca8:	ldur	x9, [x29, #-24]
  421cac:	str	x9, [sp, #32]
  421cb0:	str	x8, [sp, #16]
  421cb4:	ldr	x8, [sp, #32]
  421cb8:	cmp	x8, #0x0
  421cbc:	cset	w9, ne  // ne = any
  421cc0:	mov	w10, #0x1                   	// #1
  421cc4:	eor	w9, w9, #0x1
  421cc8:	eor	w9, w9, w10
  421ccc:	eor	w9, w9, w10
  421cd0:	and	w9, w9, #0x1
  421cd4:	mov	w0, w9
  421cd8:	sxtw	x8, w0
  421cdc:	cbz	x8, 421d04 <manager_inhibit_timeout_handler+0x80>
  421ce0:	mov	w8, wzr
  421ce4:	mov	w0, w8
  421ce8:	adrp	x1, 442000 <_fini+0x1c30>
  421cec:	add	x1, x1, #0x331
  421cf0:	ldr	x2, [sp, #16]
  421cf4:	mov	w3, #0x69d                 	// #1693
  421cf8:	adrp	x4, 444000 <_fini+0x3c30>
  421cfc:	add	x4, x4, #0x325
  421d00:	bl	406c68 <log_assert_failed_realm@plt>
  421d04:	ldr	x8, [sp, #32]
  421d08:	ldr	x8, [x8, #272]
  421d0c:	ldur	x9, [x29, #-8]
  421d10:	cmp	x8, x9
  421d14:	cset	w10, eq  // eq = none
  421d18:	mov	w11, #0x1                   	// #1
  421d1c:	eor	w10, w10, #0x1
  421d20:	eor	w10, w10, w11
  421d24:	eor	w10, w10, w11
  421d28:	and	w10, w10, #0x1
  421d2c:	mov	w0, w10
  421d30:	sxtw	x8, w0
  421d34:	cbz	x8, 421d5c <manager_inhibit_timeout_handler+0xd8>
  421d38:	mov	w8, wzr
  421d3c:	mov	w0, w8
  421d40:	adrp	x1, 444000 <_fini+0x3c30>
  421d44:	add	x1, x1, #0x36e
  421d48:	ldr	x2, [sp, #16]
  421d4c:	mov	w3, #0x69e                 	// #1694
  421d50:	adrp	x4, 444000 <_fini+0x3c30>
  421d54:	add	x4, x4, #0x325
  421d58:	bl	406c68 <log_assert_failed_realm@plt>
  421d5c:	ldr	x0, [sp, #32]
  421d60:	mov	w8, #0x1                   	// #1
  421d64:	and	w1, w8, #0x1
  421d68:	bl	414f74 <manager_dispatch_delayed>
  421d6c:	str	w0, [sp, #28]
  421d70:	ldr	w8, [sp, #28]
  421d74:	cmp	w8, #0x0
  421d78:	cset	w8, ge  // ge = tcont
  421d7c:	tbnz	w8, #0, 421d8c <manager_inhibit_timeout_handler+0x108>
  421d80:	ldr	w8, [sp, #28]
  421d84:	str	w8, [sp, #12]
  421d88:	b	421d94 <manager_inhibit_timeout_handler+0x110>
  421d8c:	mov	w8, wzr
  421d90:	str	w8, [sp, #12]
  421d94:	ldr	w8, [sp, #12]
  421d98:	mov	w0, w8
  421d9c:	ldp	x29, x30, [sp, #64]
  421da0:	add	sp, sp, #0x50
  421da4:	ret

0000000000421da8 <safe_atou64>:
  421da8:	sub	sp, sp, #0x20
  421dac:	stp	x29, x30, [sp, #16]
  421db0:	add	x29, sp, #0x10
  421db4:	str	x0, [sp, #8]
  421db8:	str	x1, [sp]
  421dbc:	ldr	x0, [sp, #8]
  421dc0:	ldr	x1, [sp]
  421dc4:	bl	407878 <safe_atollu@plt>
  421dc8:	ldp	x29, x30, [sp, #16]
  421dcc:	add	sp, sp, #0x20
  421dd0:	ret

0000000000421dd4 <hashmap_size>:
  421dd4:	sub	sp, sp, #0x20
  421dd8:	stp	x29, x30, [sp, #16]
  421ddc:	add	x29, sp, #0x10
  421de0:	str	x0, [sp, #8]
  421de4:	ldr	x0, [sp, #8]
  421de8:	bl	407888 <internal_hashmap_size@plt>
  421dec:	ldp	x29, x30, [sp, #16]
  421df0:	add	sp, sp, #0x20
  421df4:	ret

0000000000421df8 <audit_session_is_valid>:
  421df8:	sub	sp, sp, #0x10
  421dfc:	str	w0, [sp, #12]
  421e00:	ldr	w8, [sp, #12]
  421e04:	cmp	w8, #0x0
  421e08:	cset	w8, ls  // ls = plast
  421e0c:	mov	w9, #0x0                   	// #0
  421e10:	str	w9, [sp, #8]
  421e14:	tbnz	w8, #0, 421e2c <audit_session_is_valid+0x34>
  421e18:	ldr	w8, [sp, #12]
  421e1c:	mov	w9, #0xffffffff            	// #-1
  421e20:	cmp	w8, w9
  421e24:	cset	w8, ne  // ne = any
  421e28:	str	w8, [sp, #8]
  421e2c:	ldr	w8, [sp, #8]
  421e30:	and	w0, w8, #0x1
  421e34:	add	sp, sp, #0x10
  421e38:	ret

0000000000421e3c <hashmap_contains>:
  421e3c:	sub	sp, sp, #0x20
  421e40:	stp	x29, x30, [sp, #16]
  421e44:	add	x29, sp, #0x10
  421e48:	str	x0, [sp, #8]
  421e4c:	str	x1, [sp]
  421e50:	ldr	x0, [sp, #8]
  421e54:	ldr	x1, [sp]
  421e58:	bl	407898 <internal_hashmap_contains@plt>
  421e5c:	and	w0, w0, #0x1
  421e60:	ldp	x29, x30, [sp, #16]
  421e64:	add	sp, sp, #0x20
  421e68:	ret

0000000000421e6c <SESSION_IS_SELF>:
  421e6c:	sub	sp, sp, #0x20
  421e70:	stp	x29, x30, [sp, #16]
  421e74:	add	x29, sp, #0x10
  421e78:	str	x0, [sp, #8]
  421e7c:	ldr	x0, [sp, #8]
  421e80:	bl	42099c <isempty>
  421e84:	mov	w8, #0x1                   	// #1
  421e88:	str	w8, [sp, #4]
  421e8c:	tbnz	w0, #0, 421eac <SESSION_IS_SELF+0x40>
  421e90:	ldr	x0, [sp, #8]
  421e94:	adrp	x1, 443000 <_fini+0x2c30>
  421e98:	add	x1, x1, #0xefa
  421e9c:	bl	407158 <strcmp@plt>
  421ea0:	cmp	w0, #0x0
  421ea4:	cset	w8, eq  // eq = none
  421ea8:	str	w8, [sp, #4]
  421eac:	ldr	w8, [sp, #4]
  421eb0:	and	w0, w8, #0x1
  421eb4:	ldp	x29, x30, [sp, #16]
  421eb8:	add	sp, sp, #0x20
  421ebc:	ret

0000000000421ec0 <SESSION_IS_AUTO>:
  421ec0:	sub	sp, sp, #0x20
  421ec4:	stp	x29, x30, [sp, #16]
  421ec8:	add	x29, sp, #0x10
  421ecc:	adrp	x1, 443000 <_fini+0x2c30>
  421ed0:	add	x1, x1, #0xfa5
  421ed4:	str	x0, [sp, #8]
  421ed8:	ldr	x0, [sp, #8]
  421edc:	bl	41f624 <streq_ptr>
  421ee0:	and	w0, w0, #0x1
  421ee4:	ldp	x29, x30, [sp, #16]
  421ee8:	add	sp, sp, #0x20
  421eec:	ret

0000000000421ef0 <errno_or_else>:
  421ef0:	sub	sp, sp, #0x20
  421ef4:	stp	x29, x30, [sp, #16]
  421ef8:	add	x29, sp, #0x10
  421efc:	str	w0, [sp, #8]
  421f00:	bl	406e08 <__errno_location@plt>
  421f04:	ldr	w8, [x0]
  421f08:	cmp	w8, #0x0
  421f0c:	cset	w8, le
  421f10:	tbnz	w8, #0, 421f2c <errno_or_else+0x3c>
  421f14:	bl	406e08 <__errno_location@plt>
  421f18:	ldr	w8, [x0]
  421f1c:	mov	w9, wzr
  421f20:	subs	w8, w9, w8
  421f24:	stur	w8, [x29, #-4]
  421f28:	b	421f40 <errno_or_else+0x50>
  421f2c:	ldr	w0, [sp, #8]
  421f30:	bl	406c28 <abs@plt>
  421f34:	mov	w8, wzr
  421f38:	subs	w8, w8, w0
  421f3c:	stur	w8, [x29, #-4]
  421f40:	ldur	w0, [x29, #-4]
  421f44:	ldp	x29, x30, [sp, #16]
  421f48:	add	sp, sp, #0x20
  421f4c:	ret

0000000000421f50 <attach_device>:
  421f50:	sub	sp, sp, #0x70
  421f54:	stp	x29, x30, [sp, #96]
  421f58:	add	x29, sp, #0x60
  421f5c:	mov	x8, xzr
  421f60:	adrp	x9, 442000 <_fini+0x1c30>
  421f64:	add	x9, x9, #0xd8e
  421f68:	add	x9, x9, #0x3
  421f6c:	adrp	x10, 445000 <_fini+0x4c30>
  421f70:	add	x10, x10, #0xb25
  421f74:	stur	x0, [x29, #-16]
  421f78:	stur	x1, [x29, #-24]
  421f7c:	stur	x2, [x29, #-32]
  421f80:	stur	x8, [x29, #-40]
  421f84:	str	x8, [sp, #48]
  421f88:	str	x8, [sp, #40]
  421f8c:	str	x9, [sp, #16]
  421f90:	str	x10, [sp, #8]
  421f94:	ldur	x8, [x29, #-16]
  421f98:	cmp	x8, #0x0
  421f9c:	cset	w9, ne  // ne = any
  421fa0:	mov	w10, #0x1                   	// #1
  421fa4:	eor	w9, w9, #0x1
  421fa8:	eor	w9, w9, w10
  421fac:	eor	w9, w9, w10
  421fb0:	and	w9, w9, #0x1
  421fb4:	mov	w0, w9
  421fb8:	sxtw	x8, w0
  421fbc:	cbz	x8, 421fe0 <attach_device+0x90>
  421fc0:	mov	w8, wzr
  421fc4:	mov	w0, w8
  421fc8:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  421fcc:	add	x1, x1, #0x5ef
  421fd0:	ldr	x2, [sp, #16]
  421fd4:	mov	w3, #0x539                 	// #1337
  421fd8:	ldr	x4, [sp, #8]
  421fdc:	bl	406c68 <log_assert_failed_realm@plt>
  421fe0:	ldur	x8, [x29, #-24]
  421fe4:	cmp	x8, #0x0
  421fe8:	cset	w9, ne  // ne = any
  421fec:	mov	w10, #0x1                   	// #1
  421ff0:	eor	w9, w9, #0x1
  421ff4:	eor	w9, w9, w10
  421ff8:	eor	w9, w9, w10
  421ffc:	and	w9, w9, #0x1
  422000:	mov	w0, w9
  422004:	sxtw	x8, w0
  422008:	cbz	x8, 42202c <attach_device+0xdc>
  42200c:	mov	w8, wzr
  422010:	mov	w0, w8
  422014:	adrp	x1, 445000 <_fini+0x4c30>
  422018:	add	x1, x1, #0xb5e
  42201c:	ldr	x2, [sp, #16]
  422020:	mov	w3, #0x53a                 	// #1338
  422024:	ldr	x4, [sp, #8]
  422028:	bl	406c68 <log_assert_failed_realm@plt>
  42202c:	ldur	x8, [x29, #-32]
  422030:	cmp	x8, #0x0
  422034:	cset	w9, ne  // ne = any
  422038:	mov	w10, #0x1                   	// #1
  42203c:	eor	w9, w9, #0x1
  422040:	eor	w9, w9, w10
  422044:	eor	w9, w9, w10
  422048:	and	w9, w9, #0x1
  42204c:	mov	w0, w9
  422050:	sxtw	x8, w0
  422054:	cbz	x8, 422078 <attach_device+0x128>
  422058:	mov	w8, wzr
  42205c:	mov	w0, w8
  422060:	adrp	x1, 442000 <_fini+0x1c30>
  422064:	add	x1, x1, #0x4a0
  422068:	ldr	x2, [sp, #16]
  42206c:	mov	w3, #0x53b                 	// #1339
  422070:	ldr	x4, [sp, #8]
  422074:	bl	406c68 <log_assert_failed_realm@plt>
  422078:	ldur	x1, [x29, #-32]
  42207c:	sub	x0, x29, #0x28
  422080:	bl	4078a8 <sd_device_new_from_syspath@plt>
  422084:	str	w0, [sp, #28]
  422088:	ldr	w8, [sp, #28]
  42208c:	cmp	w8, #0x0
  422090:	cset	w8, ge  // ge = tcont
  422094:	tbnz	w8, #0, 4220ac <attach_device+0x15c>
  422098:	ldr	w8, [sp, #28]
  42209c:	stur	w8, [x29, #-4]
  4220a0:	mov	w8, #0x1                   	// #1
  4220a4:	str	w8, [sp, #24]
  4220a8:	b	4221dc <attach_device+0x28c>
  4220ac:	ldur	x0, [x29, #-40]
  4220b0:	adrp	x1, 445000 <_fini+0x4c30>
  4220b4:	add	x1, x1, #0xb5e
  4220b8:	bl	407318 <sd_device_has_tag@plt>
  4220bc:	cmp	w0, #0x0
  4220c0:	cset	w8, gt
  4220c4:	tbnz	w8, #0, 4220dc <attach_device+0x18c>
  4220c8:	mov	w8, #0xffffffed            	// #-19
  4220cc:	stur	w8, [x29, #-4]
  4220d0:	mov	w8, #0x1                   	// #1
  4220d4:	str	w8, [sp, #24]
  4220d8:	b	4221dc <attach_device+0x28c>
  4220dc:	ldur	x0, [x29, #-40]
  4220e0:	adrp	x1, 445000 <_fini+0x4c30>
  4220e4:	add	x1, x1, #0xb63
  4220e8:	add	x2, sp, #0x20
  4220ec:	bl	4072f8 <sd_device_get_property_value@plt>
  4220f0:	cmp	w0, #0x0
  4220f4:	cset	w8, ge  // ge = tcont
  4220f8:	tbnz	w8, #0, 422110 <attach_device+0x1c0>
  4220fc:	mov	w8, #0xffffffed            	// #-19
  422100:	stur	w8, [x29, #-4]
  422104:	mov	w8, #0x1                   	// #1
  422108:	str	w8, [sp, #24]
  42210c:	b	4221dc <attach_device+0x28c>
  422110:	ldr	x2, [sp, #32]
  422114:	add	x0, sp, #0x28
  422118:	adrp	x1, 445000 <_fini+0x4c30>
  42211c:	add	x1, x1, #0xb6f
  422120:	bl	406ff8 <asprintf@plt>
  422124:	cmp	w0, #0x0
  422128:	cset	w8, ge  // ge = tcont
  42212c:	tbnz	w8, #0, 422144 <attach_device+0x1f4>
  422130:	mov	w8, #0xfffffff4            	// #-12
  422134:	stur	w8, [x29, #-4]
  422138:	mov	w8, #0x1                   	// #1
  42213c:	str	w8, [sp, #24]
  422140:	b	4221dc <attach_device+0x28c>
  422144:	ldr	x2, [sp, #32]
  422148:	ldur	x3, [x29, #-24]
  42214c:	add	x0, sp, #0x30
  422150:	adrp	x1, 445000 <_fini+0x4c30>
  422154:	add	x1, x1, #0xb92
  422158:	bl	406ff8 <asprintf@plt>
  42215c:	cmp	w0, #0x0
  422160:	cset	w8, ge  // ge = tcont
  422164:	tbnz	w8, #0, 42217c <attach_device+0x22c>
  422168:	mov	w8, #0xfffffff4            	// #-12
  42216c:	stur	w8, [x29, #-4]
  422170:	mov	w8, #0x1                   	// #1
  422174:	str	w8, [sp, #24]
  422178:	b	4221dc <attach_device+0x28c>
  42217c:	adrp	x0, 445000 <_fini+0x4c30>
  422180:	add	x0, x0, #0xbc9
  422184:	mov	w1, #0x1ed                 	// #493
  422188:	bl	4076a8 <mkdir_p_label@plt>
  42218c:	ldr	x8, [sp, #40]
  422190:	ldr	x1, [sp, #48]
  422194:	mov	x0, x8
  422198:	bl	422238 <write_string_file_atomic_label>
  42219c:	str	w0, [sp, #28]
  4221a0:	ldr	w9, [sp, #28]
  4221a4:	cmp	w9, #0x0
  4221a8:	cset	w9, ge  // ge = tcont
  4221ac:	tbnz	w9, #0, 4221c4 <attach_device+0x274>
  4221b0:	ldr	w8, [sp, #28]
  4221b4:	stur	w8, [x29, #-4]
  4221b8:	mov	w8, #0x1                   	// #1
  4221bc:	str	w8, [sp, #24]
  4221c0:	b	4221dc <attach_device+0x28c>
  4221c4:	ldur	x0, [x29, #-16]
  4221c8:	ldur	x1, [x29, #-40]
  4221cc:	bl	42226c <trigger_device>
  4221d0:	stur	w0, [x29, #-4]
  4221d4:	mov	w8, #0x1                   	// #1
  4221d8:	str	w8, [sp, #24]
  4221dc:	add	x0, sp, #0x28
  4221e0:	bl	4152e4 <freep>
  4221e4:	add	x0, sp, #0x30
  4221e8:	bl	4152e4 <freep>
  4221ec:	sub	x0, x29, #0x28
  4221f0:	bl	422204 <sd_device_unrefp>
  4221f4:	ldur	w0, [x29, #-4]
  4221f8:	ldp	x29, x30, [sp, #96]
  4221fc:	add	sp, sp, #0x70
  422200:	ret

0000000000422204 <sd_device_unrefp>:
  422204:	sub	sp, sp, #0x20
  422208:	stp	x29, x30, [sp, #16]
  42220c:	add	x29, sp, #0x10
  422210:	str	x0, [sp, #8]
  422214:	ldr	x8, [sp, #8]
  422218:	ldr	x8, [x8]
  42221c:	cbz	x8, 42222c <sd_device_unrefp+0x28>
  422220:	ldr	x8, [sp, #8]
  422224:	ldr	x0, [x8]
  422228:	bl	4078b8 <sd_device_unref@plt>
  42222c:	ldp	x29, x30, [sp, #16]
  422230:	add	sp, sp, #0x20
  422234:	ret

0000000000422238 <write_string_file_atomic_label>:
  422238:	sub	sp, sp, #0x20
  42223c:	stp	x29, x30, [sp, #16]
  422240:	add	x29, sp, #0x10
  422244:	mov	x8, xzr
  422248:	str	x0, [sp, #8]
  42224c:	str	x1, [sp]
  422250:	ldr	x0, [sp, #8]
  422254:	ldr	x1, [sp]
  422258:	mov	x2, x8
  42225c:	bl	4078c8 <write_string_file_atomic_label_ts@plt>
  422260:	ldp	x29, x30, [sp, #16]
  422264:	add	sp, sp, #0x20
  422268:	ret

000000000042226c <trigger_device>:
  42226c:	sub	sp, sp, #0x50
  422270:	stp	x29, x30, [sp, #64]
  422274:	add	x29, sp, #0x40
  422278:	mov	x8, xzr
  42227c:	adrp	x9, 442000 <_fini+0x1c30>
  422280:	add	x9, x9, #0xd8e
  422284:	add	x2, x9, #0x3
  422288:	stur	x0, [x29, #-16]
  42228c:	stur	x1, [x29, #-24]
  422290:	str	x8, [sp, #32]
  422294:	str	x2, [sp]
  422298:	ldur	x8, [x29, #-16]
  42229c:	cmp	x8, #0x0
  4222a0:	cset	w9, ne  // ne = any
  4222a4:	mov	w10, #0x1                   	// #1
  4222a8:	eor	w9, w9, #0x1
  4222ac:	eor	w9, w9, w10
  4222b0:	eor	w9, w9, w10
  4222b4:	and	w9, w9, #0x1
  4222b8:	mov	w0, w9
  4222bc:	sxtw	x8, w0
  4222c0:	cbz	x8, 4222e8 <trigger_device+0x7c>
  4222c4:	mov	w8, wzr
  4222c8:	mov	w0, w8
  4222cc:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4222d0:	add	x1, x1, #0x5ef
  4222d4:	ldr	x2, [sp]
  4222d8:	mov	w3, #0x511                 	// #1297
  4222dc:	adrp	x4, 445000 <_fini+0x4c30>
  4222e0:	add	x4, x4, #0xbdb
  4222e4:	bl	406c68 <log_assert_failed_realm@plt>
  4222e8:	add	x0, sp, #0x20
  4222ec:	bl	406f48 <sd_device_enumerator_new@plt>
  4222f0:	str	w0, [sp, #28]
  4222f4:	ldr	w8, [sp, #28]
  4222f8:	cmp	w8, #0x0
  4222fc:	cset	w8, ge  // ge = tcont
  422300:	tbnz	w8, #0, 422318 <trigger_device+0xac>
  422304:	ldr	w8, [sp, #28]
  422308:	stur	w8, [x29, #-4]
  42230c:	mov	w8, #0x1                   	// #1
  422310:	str	w8, [sp, #24]
  422314:	b	422460 <trigger_device+0x1f4>
  422318:	ldr	x0, [sp, #32]
  42231c:	bl	407378 <sd_device_enumerator_allow_uninitialized@plt>
  422320:	str	w0, [sp, #28]
  422324:	ldr	w8, [sp, #28]
  422328:	cmp	w8, #0x0
  42232c:	cset	w8, ge  // ge = tcont
  422330:	tbnz	w8, #0, 422348 <trigger_device+0xdc>
  422334:	ldr	w8, [sp, #28]
  422338:	stur	w8, [x29, #-4]
  42233c:	mov	w8, #0x1                   	// #1
  422340:	str	w8, [sp, #24]
  422344:	b	422460 <trigger_device+0x1f4>
  422348:	ldur	x8, [x29, #-24]
  42234c:	cbz	x8, 422384 <trigger_device+0x118>
  422350:	ldr	x0, [sp, #32]
  422354:	ldur	x1, [x29, #-24]
  422358:	bl	4078d8 <sd_device_enumerator_add_match_parent@plt>
  42235c:	str	w0, [sp, #28]
  422360:	ldr	w8, [sp, #28]
  422364:	cmp	w8, #0x0
  422368:	cset	w8, ge  // ge = tcont
  42236c:	tbnz	w8, #0, 422384 <trigger_device+0x118>
  422370:	ldr	w8, [sp, #28]
  422374:	stur	w8, [x29, #-4]
  422378:	mov	w8, #0x1                   	// #1
  42237c:	str	w8, [sp, #24]
  422380:	b	422460 <trigger_device+0x1f4>
  422384:	ldr	x0, [sp, #32]
  422388:	bl	406f68 <sd_device_enumerator_get_device_first@plt>
  42238c:	stur	x0, [x29, #-24]
  422390:	ldur	x8, [x29, #-24]
  422394:	cbz	x8, 422454 <trigger_device+0x1e8>
  422398:	mov	x8, xzr
  42239c:	str	x8, [sp, #16]
  4223a0:	ldur	x0, [x29, #-24]
  4223a4:	add	x1, sp, #0x8
  4223a8:	bl	4072e8 <sd_device_get_syspath@plt>
  4223ac:	str	w0, [sp, #28]
  4223b0:	ldr	w9, [sp, #28]
  4223b4:	cmp	w9, #0x0
  4223b8:	cset	w9, ge  // ge = tcont
  4223bc:	tbnz	w9, #0, 4223d4 <trigger_device+0x168>
  4223c0:	ldr	w8, [sp, #28]
  4223c4:	stur	w8, [x29, #-4]
  4223c8:	mov	w8, #0x1                   	// #1
  4223cc:	str	w8, [sp, #24]
  4223d0:	b	422424 <trigger_device+0x1b8>
  4223d4:	ldr	x0, [sp, #8]
  4223d8:	adrp	x1, 445000 <_fini+0x4c30>
  4223dc:	add	x1, x1, #0xc06
  4223e0:	mov	x8, #0xffffffffffffffff    	// #-1
  4223e4:	mov	x2, x8
  4223e8:	bl	4078e8 <path_join_internal@plt>
  4223ec:	str	x0, [sp, #16]
  4223f0:	ldr	x8, [sp, #16]
  4223f4:	cbnz	x8, 42240c <trigger_device+0x1a0>
  4223f8:	mov	w8, #0xfffffff4            	// #-12
  4223fc:	stur	w8, [x29, #-4]
  422400:	mov	w8, #0x1                   	// #1
  422404:	str	w8, [sp, #24]
  422408:	b	422424 <trigger_device+0x1b8>
  42240c:	ldr	x0, [sp, #16]
  422410:	adrp	x1, 445000 <_fini+0x4c30>
  422414:	add	x1, x1, #0xc0d
  422418:	mov	w2, #0x20                  	// #32
  42241c:	bl	4224ac <write_string_file>
  422420:	str	wzr, [sp, #24]
  422424:	add	x0, sp, #0x10
  422428:	bl	4152e4 <freep>
  42242c:	ldr	w8, [sp, #24]
  422430:	cmp	w8, #0x0
  422434:	cset	w8, eq  // eq = none
  422438:	eor	w8, w8, #0x1
  42243c:	tbnz	w8, #0, 422460 <trigger_device+0x1f4>
  422440:	b	422444 <trigger_device+0x1d8>
  422444:	ldr	x0, [sp, #32]
  422448:	bl	406f78 <sd_device_enumerator_get_device_next@plt>
  42244c:	stur	x0, [x29, #-24]
  422450:	b	422390 <trigger_device+0x124>
  422454:	stur	wzr, [x29, #-4]
  422458:	mov	w8, #0x1                   	// #1
  42245c:	str	w8, [sp, #24]
  422460:	add	x0, sp, #0x20
  422464:	bl	422478 <sd_device_enumerator_unrefp>
  422468:	ldur	w0, [x29, #-4]
  42246c:	ldp	x29, x30, [sp, #64]
  422470:	add	sp, sp, #0x50
  422474:	ret

0000000000422478 <sd_device_enumerator_unrefp>:
  422478:	sub	sp, sp, #0x20
  42247c:	stp	x29, x30, [sp, #16]
  422480:	add	x29, sp, #0x10
  422484:	str	x0, [sp, #8]
  422488:	ldr	x8, [sp, #8]
  42248c:	ldr	x8, [x8]
  422490:	cbz	x8, 4224a0 <sd_device_enumerator_unrefp+0x28>
  422494:	ldr	x8, [sp, #8]
  422498:	ldr	x0, [x8]
  42249c:	bl	4070c8 <sd_device_enumerator_unref@plt>
  4224a0:	ldp	x29, x30, [sp, #16]
  4224a4:	add	sp, sp, #0x20
  4224a8:	ret

00000000004224ac <write_string_file>:
  4224ac:	sub	sp, sp, #0x30
  4224b0:	stp	x29, x30, [sp, #32]
  4224b4:	add	x29, sp, #0x20
  4224b8:	mov	x8, xzr
  4224bc:	stur	x0, [x29, #-8]
  4224c0:	str	x1, [sp, #16]
  4224c4:	str	w2, [sp, #12]
  4224c8:	ldur	x0, [x29, #-8]
  4224cc:	ldr	x1, [sp, #16]
  4224d0:	ldr	w2, [sp, #12]
  4224d4:	mov	x3, x8
  4224d8:	bl	4078f8 <write_string_file_ts@plt>
  4224dc:	ldp	x29, x30, [sp, #32]
  4224e0:	add	sp, sp, #0x30
  4224e4:	ret

00000000004224e8 <flush_devices>:
  4224e8:	sub	sp, sp, #0x60
  4224ec:	stp	x29, x30, [sp, #80]
  4224f0:	add	x29, sp, #0x50
  4224f4:	adrp	x8, 442000 <_fini+0x1c30>
  4224f8:	add	x8, x8, #0xd8e
  4224fc:	add	x8, x8, #0x3
  422500:	stur	x0, [x29, #-8]
  422504:	str	x8, [sp, #16]
  422508:	ldur	x8, [x29, #-8]
  42250c:	cmp	x8, #0x0
  422510:	cset	w9, ne  // ne = any
  422514:	mov	w10, #0x1                   	// #1
  422518:	eor	w9, w9, #0x1
  42251c:	eor	w9, w9, w10
  422520:	eor	w9, w9, w10
  422524:	and	w9, w9, #0x1
  422528:	mov	w0, w9
  42252c:	sxtw	x8, w0
  422530:	cbz	x8, 422558 <flush_devices+0x70>
  422534:	mov	w8, wzr
  422538:	mov	w0, w8
  42253c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  422540:	add	x1, x1, #0x5ef
  422544:	ldr	x2, [sp, #16]
  422548:	mov	w3, #0x558                 	// #1368
  42254c:	adrp	x4, 445000 <_fini+0x4c30>
  422550:	add	x4, x4, #0xc7c
  422554:	bl	406c68 <log_assert_failed_realm@plt>
  422558:	adrp	x0, 445000 <_fini+0x4c30>
  42255c:	add	x0, x0, #0xbc9
  422560:	bl	406f88 <opendir@plt>
  422564:	stur	x0, [x29, #-16]
  422568:	ldur	x8, [x29, #-16]
  42256c:	cbnz	x8, 422604 <flush_devices+0x11c>
  422570:	bl	406e08 <__errno_location@plt>
  422574:	ldr	w8, [x0]
  422578:	cmp	w8, #0x2
  42257c:	b.eq	422600 <flush_devices+0x118>  // b.none
  422580:	mov	w8, #0x4                   	// #4
  422584:	stur	w8, [x29, #-20]
  422588:	bl	406e08 <__errno_location@plt>
  42258c:	ldr	w8, [x0]
  422590:	stur	w8, [x29, #-24]
  422594:	stur	wzr, [x29, #-28]
  422598:	ldur	w0, [x29, #-28]
  42259c:	bl	406c08 <log_get_max_level_realm@plt>
  4225a0:	ldur	w8, [x29, #-20]
  4225a4:	and	w8, w8, #0x7
  4225a8:	cmp	w0, w8
  4225ac:	b.lt	4225e4 <flush_devices+0xfc>  // b.tstop
  4225b0:	ldur	w8, [x29, #-28]
  4225b4:	ldur	w9, [x29, #-20]
  4225b8:	orr	w0, w9, w8, lsl #10
  4225bc:	ldur	w1, [x29, #-24]
  4225c0:	ldr	x2, [sp, #16]
  4225c4:	mov	w3, #0x55d                 	// #1373
  4225c8:	adrp	x4, 445000 <_fini+0x4c30>
  4225cc:	add	x4, x4, #0xc99
  4225d0:	adrp	x5, 445000 <_fini+0x4c30>
  4225d4:	add	x5, x5, #0xca7
  4225d8:	bl	406c18 <log_internal_realm@plt>
  4225dc:	str	w0, [sp, #12]
  4225e0:	b	4225f8 <flush_devices+0x110>
  4225e4:	ldur	w0, [x29, #-24]
  4225e8:	bl	406c28 <abs@plt>
  4225ec:	mov	w8, wzr
  4225f0:	subs	w8, w8, w0, uxtb
  4225f4:	str	w8, [sp, #12]
  4225f8:	ldr	w8, [sp, #12]
  4225fc:	stur	w8, [x29, #-32]
  422600:	b	42275c <flush_devices+0x274>
  422604:	bl	406e08 <__errno_location@plt>
  422608:	str	wzr, [x0]
  42260c:	ldur	x0, [x29, #-16]
  422610:	bl	406f98 <readdir64@plt>
  422614:	str	x0, [sp, #40]
  422618:	ldr	x8, [sp, #40]
  42261c:	cbnz	x8, 42263c <flush_devices+0x154>
  422620:	bl	406e08 <__errno_location@plt>
  422624:	ldr	w8, [x0]
  422628:	cmp	w8, #0x0
  42262c:	cset	w8, le
  422630:	tbnz	w8, #0, 422638 <flush_devices+0x150>
  422634:	b	42275c <flush_devices+0x274>
  422638:	b	42275c <flush_devices+0x274>
  42263c:	ldur	x0, [x29, #-16]
  422640:	ldr	x1, [sp, #40]
  422644:	bl	4070f8 <dirent_ensure_type@plt>
  422648:	ldr	x8, [sp, #40]
  42264c:	mov	x0, x8
  422650:	bl	406fb8 <dirent_is_file@plt>
  422654:	tbnz	w0, #0, 42265c <flush_devices+0x174>
  422658:	b	422744 <flush_devices+0x25c>
  42265c:	ldr	x8, [sp, #40]
  422660:	add	x0, x8, #0x13
  422664:	adrp	x1, 445000 <_fini+0x4c30>
  422668:	add	x1, x1, #0xccc
  42266c:	bl	4227c0 <startswith>
  422670:	cbnz	x0, 422678 <flush_devices+0x190>
  422674:	b	422744 <flush_devices+0x25c>
  422678:	ldr	x8, [sp, #40]
  42267c:	add	x0, x8, #0x13
  422680:	adrp	x1, 445000 <_fini+0x4c30>
  422684:	add	x1, x1, #0xcd5
  422688:	bl	407908 <endswith@plt>
  42268c:	cbnz	x0, 422694 <flush_devices+0x1ac>
  422690:	b	422744 <flush_devices+0x25c>
  422694:	ldur	x0, [x29, #-16]
  422698:	bl	406fc8 <dirfd@plt>
  42269c:	ldr	x8, [sp, #40]
  4226a0:	add	x1, x8, #0x13
  4226a4:	mov	w9, wzr
  4226a8:	mov	w2, w9
  4226ac:	bl	406fd8 <unlinkat@plt>
  4226b0:	cmp	w0, #0x0
  4226b4:	cset	w9, ge  // ge = tcont
  4226b8:	tbnz	w9, #0, 422744 <flush_devices+0x25c>
  4226bc:	mov	w8, #0x4                   	// #4
  4226c0:	str	w8, [sp, #36]
  4226c4:	bl	406e08 <__errno_location@plt>
  4226c8:	ldr	w8, [x0]
  4226cc:	str	w8, [sp, #32]
  4226d0:	str	wzr, [sp, #28]
  4226d4:	ldr	w0, [sp, #28]
  4226d8:	bl	406c08 <log_get_max_level_realm@plt>
  4226dc:	ldr	w8, [sp, #36]
  4226e0:	and	w8, w8, #0x7
  4226e4:	cmp	w0, w8
  4226e8:	b.lt	422728 <flush_devices+0x240>  // b.tstop
  4226ec:	ldr	w8, [sp, #28]
  4226f0:	ldr	w9, [sp, #36]
  4226f4:	orr	w0, w9, w8, lsl #10
  4226f8:	ldr	w1, [sp, #32]
  4226fc:	ldr	x10, [sp, #40]
  422700:	add	x6, x10, #0x13
  422704:	ldr	x2, [sp, #16]
  422708:	mov	w3, #0x56d                 	// #1389
  42270c:	adrp	x4, 445000 <_fini+0x4c30>
  422710:	add	x4, x4, #0xc99
  422714:	adrp	x5, 445000 <_fini+0x4c30>
  422718:	add	x5, x5, #0xcdc
  42271c:	bl	406c18 <log_internal_realm@plt>
  422720:	str	w0, [sp, #8]
  422724:	b	42273c <flush_devices+0x254>
  422728:	ldr	w0, [sp, #32]
  42272c:	bl	406c28 <abs@plt>
  422730:	mov	w8, wzr
  422734:	subs	w8, w8, w0, uxtb
  422738:	str	w8, [sp, #8]
  42273c:	ldr	w8, [sp, #8]
  422740:	str	w8, [sp, #24]
  422744:	bl	406e08 <__errno_location@plt>
  422748:	str	wzr, [x0]
  42274c:	ldur	x0, [x29, #-16]
  422750:	bl	406f98 <readdir64@plt>
  422754:	str	x0, [sp, #40]
  422758:	b	422618 <flush_devices+0x130>
  42275c:	ldur	x0, [x29, #-8]
  422760:	mov	x8, xzr
  422764:	mov	x1, x8
  422768:	bl	42226c <trigger_device>
  42276c:	sub	x8, x29, #0x10
  422770:	str	w0, [sp, #4]
  422774:	mov	x0, x8
  422778:	bl	42278c <closedirp>
  42277c:	ldr	w0, [sp, #4]
  422780:	ldp	x29, x30, [sp, #80]
  422784:	add	sp, sp, #0x60
  422788:	ret

000000000042278c <closedirp>:
  42278c:	sub	sp, sp, #0x20
  422790:	stp	x29, x30, [sp, #16]
  422794:	add	x29, sp, #0x10
  422798:	str	x0, [sp, #8]
  42279c:	ldr	x8, [sp, #8]
  4227a0:	ldr	x8, [x8]
  4227a4:	cbz	x8, 4227b4 <closedirp+0x28>
  4227a8:	ldr	x8, [sp, #8]
  4227ac:	ldr	x0, [x8]
  4227b0:	bl	4070d8 <closedir@plt>
  4227b4:	ldp	x29, x30, [sp, #16]
  4227b8:	add	sp, sp, #0x20
  4227bc:	ret

00000000004227c0 <startswith>:
  4227c0:	sub	sp, sp, #0x30
  4227c4:	stp	x29, x30, [sp, #32]
  4227c8:	add	x29, sp, #0x20
  4227cc:	str	x0, [sp, #16]
  4227d0:	str	x1, [sp, #8]
  4227d4:	ldr	x0, [sp, #8]
  4227d8:	bl	4070a8 <strlen@plt>
  4227dc:	str	x0, [sp]
  4227e0:	ldr	x0, [sp, #16]
  4227e4:	ldr	x1, [sp, #8]
  4227e8:	ldr	x2, [sp]
  4227ec:	bl	4070b8 <strncmp@plt>
  4227f0:	cbnz	w0, 422808 <startswith+0x48>
  4227f4:	ldr	x8, [sp, #16]
  4227f8:	ldr	x9, [sp]
  4227fc:	add	x8, x8, x9
  422800:	stur	x8, [x29, #-8]
  422804:	b	422810 <startswith+0x50>
  422808:	mov	x8, xzr
  42280c:	stur	x8, [x29, #-8]
  422810:	ldur	x0, [x29, #-8]
  422814:	ldp	x29, x30, [sp, #32]
  422818:	add	sp, sp, #0x30
  42281c:	ret

0000000000422820 <method_do_shutdown_or_sleep>:
  422820:	sub	sp, sp, #0x80
  422824:	stp	x29, x30, [sp, #112]
  422828:	add	x29, sp, #0x70
  42282c:	ldr	x8, [x29, #16]
  422830:	adrp	x9, 442000 <_fini+0x1c30>
  422834:	add	x9, x9, #0xd8e
  422838:	add	x9, x9, #0x3
  42283c:	adrp	x10, 445000 <_fini+0x4c30>
  422840:	add	x10, x10, #0xd78
  422844:	stur	x0, [x29, #-16]
  422848:	stur	x1, [x29, #-24]
  42284c:	stur	x2, [x29, #-32]
  422850:	stur	w3, [x29, #-36]
  422854:	stur	x4, [x29, #-48]
  422858:	str	x5, [sp, #56]
  42285c:	str	x6, [sp, #48]
  422860:	str	x7, [sp, #40]
  422864:	str	x8, [sp, #32]
  422868:	str	x9, [sp, #16]
  42286c:	str	x10, [sp, #8]
  422870:	ldur	x8, [x29, #-16]
  422874:	cmp	x8, #0x0
  422878:	cset	w9, ne  // ne = any
  42287c:	mov	w10, #0x1                   	// #1
  422880:	eor	w9, w9, #0x1
  422884:	eor	w9, w9, w10
  422888:	eor	w9, w9, w10
  42288c:	and	w9, w9, #0x1
  422890:	mov	w0, w9
  422894:	sxtw	x8, w0
  422898:	cbz	x8, 4228bc <method_do_shutdown_or_sleep+0x9c>
  42289c:	mov	w8, wzr
  4228a0:	mov	w0, w8
  4228a4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4228a8:	add	x1, x1, #0x5ef
  4228ac:	ldr	x2, [sp, #16]
  4228b0:	mov	w3, #0x73f                 	// #1855
  4228b4:	ldr	x4, [sp, #8]
  4228b8:	bl	406c68 <log_assert_failed_realm@plt>
  4228bc:	ldur	x8, [x29, #-24]
  4228c0:	cmp	x8, #0x0
  4228c4:	cset	w9, ne  // ne = any
  4228c8:	mov	w10, #0x1                   	// #1
  4228cc:	eor	w9, w9, #0x1
  4228d0:	eor	w9, w9, w10
  4228d4:	eor	w9, w9, w10
  4228d8:	and	w9, w9, #0x1
  4228dc:	mov	w0, w9
  4228e0:	sxtw	x8, w0
  4228e4:	cbz	x8, 422908 <method_do_shutdown_or_sleep+0xe8>
  4228e8:	mov	w8, wzr
  4228ec:	mov	w0, w8
  4228f0:	adrp	x1, 443000 <_fini+0x2c30>
  4228f4:	add	x1, x1, #0x812
  4228f8:	ldr	x2, [sp, #16]
  4228fc:	mov	w3, #0x740                 	// #1856
  422900:	ldr	x4, [sp, #8]
  422904:	bl	406c68 <log_assert_failed_realm@plt>
  422908:	ldur	x8, [x29, #-32]
  42290c:	cmp	x8, #0x0
  422910:	cset	w9, ne  // ne = any
  422914:	mov	w10, #0x1                   	// #1
  422918:	eor	w9, w9, #0x1
  42291c:	eor	w9, w9, w10
  422920:	eor	w9, w9, w10
  422924:	and	w9, w9, #0x1
  422928:	mov	w0, w9
  42292c:	sxtw	x8, w0
  422930:	cbz	x8, 422954 <method_do_shutdown_or_sleep+0x134>
  422934:	mov	w8, wzr
  422938:	mov	w0, w8
  42293c:	adrp	x1, 443000 <_fini+0x2c30>
  422940:	add	x1, x1, #0x12b
  422944:	ldr	x2, [sp, #16]
  422948:	mov	w3, #0x741                 	// #1857
  42294c:	ldr	x4, [sp, #8]
  422950:	bl	406c68 <log_assert_failed_realm@plt>
  422954:	ldur	w8, [x29, #-36]
  422958:	cmp	w8, #0x0
  42295c:	cset	w8, ge  // ge = tcont
  422960:	mov	w9, #0x1                   	// #1
  422964:	eor	w8, w8, #0x1
  422968:	eor	w8, w8, w9
  42296c:	eor	w8, w8, w9
  422970:	and	w8, w8, #0x1
  422974:	mov	w0, w8
  422978:	sxtw	x10, w0
  42297c:	cbz	x10, 4229a0 <method_do_shutdown_or_sleep+0x180>
  422980:	mov	w8, wzr
  422984:	mov	w0, w8
  422988:	adrp	x1, 444000 <_fini+0x3c30>
  42298c:	add	x1, x1, #0x2b7
  422990:	ldr	x2, [sp, #16]
  422994:	mov	w3, #0x742                 	// #1858
  422998:	ldr	x4, [sp, #8]
  42299c:	bl	406c68 <log_assert_failed_realm@plt>
  4229a0:	ldur	w8, [x29, #-36]
  4229a4:	cmp	w8, #0x80
  4229a8:	cset	w8, le
  4229ac:	mov	w9, #0x1                   	// #1
  4229b0:	eor	w8, w8, #0x1
  4229b4:	eor	w8, w8, w9
  4229b8:	eor	w8, w8, w9
  4229bc:	and	w8, w8, #0x1
  4229c0:	mov	w0, w8
  4229c4:	sxtw	x10, w0
  4229c8:	cbz	x10, 4229ec <method_do_shutdown_or_sleep+0x1cc>
  4229cc:	mov	w8, wzr
  4229d0:	mov	w0, w8
  4229d4:	adrp	x1, 445000 <_fini+0x4c30>
  4229d8:	add	x1, x1, #0xe18
  4229dc:	ldr	x2, [sp, #16]
  4229e0:	mov	w3, #0x743                 	// #1859
  4229e4:	ldr	x4, [sp, #8]
  4229e8:	bl	406c68 <log_assert_failed_realm@plt>
  4229ec:	ldur	x0, [x29, #-24]
  4229f0:	adrp	x1, 441000 <_fini+0xc30>
  4229f4:	add	x1, x1, #0xe0e
  4229f8:	add	x2, sp, #0x1c
  4229fc:	bl	4074c8 <sd_bus_message_read@plt>
  422a00:	str	w0, [sp, #24]
  422a04:	ldr	w8, [sp, #24]
  422a08:	cmp	w8, #0x0
  422a0c:	cset	w8, ge  // ge = tcont
  422a10:	tbnz	w8, #0, 422a20 <method_do_shutdown_or_sleep+0x200>
  422a14:	ldr	w8, [sp, #24]
  422a18:	stur	w8, [x29, #-4]
  422a1c:	b	422b70 <method_do_shutdown_or_sleep+0x350>
  422a20:	ldur	x8, [x29, #-16]
  422a24:	ldr	w9, [x8, #248]
  422a28:	cmp	w9, #0x0
  422a2c:	cset	w9, le
  422a30:	tbnz	w9, #0, 422a54 <method_do_shutdown_or_sleep+0x234>
  422a34:	ldr	x0, [sp, #32]
  422a38:	adrp	x1, 445000 <_fini+0x4c30>
  422a3c:	add	x1, x1, #0xe2f
  422a40:	adrp	x2, 445000 <_fini+0x4c30>
  422a44:	add	x2, x2, #0xe5a
  422a48:	bl	407468 <sd_bus_error_setf@plt>
  422a4c:	stur	w0, [x29, #-4]
  422a50:	b	422b70 <method_do_shutdown_or_sleep+0x350>
  422a54:	ldr	x8, [sp, #40]
  422a58:	cbz	x8, 422ae0 <method_do_shutdown_or_sleep+0x2c0>
  422a5c:	ldr	x0, [sp, #40]
  422a60:	bl	4071a8 <can_sleep@plt>
  422a64:	str	w0, [sp, #24]
  422a68:	ldr	w8, [sp, #24]
  422a6c:	mov	w9, #0xffffffe4            	// #-28
  422a70:	cmp	w8, w9
  422a74:	b.ne	422a98 <method_do_shutdown_or_sleep+0x278>  // b.any
  422a78:	ldr	x0, [sp, #32]
  422a7c:	adrp	x1, 445000 <_fini+0x4c30>
  422a80:	add	x1, x1, #0xe94
  422a84:	adrp	x2, 445000 <_fini+0x4c30>
  422a88:	add	x2, x2, #0xec1
  422a8c:	bl	407918 <sd_bus_error_set@plt>
  422a90:	stur	w0, [x29, #-4]
  422a94:	b	422b70 <method_do_shutdown_or_sleep+0x350>
  422a98:	ldr	w8, [sp, #24]
  422a9c:	cbnz	w8, 422ac4 <method_do_shutdown_or_sleep+0x2a4>
  422aa0:	ldr	x0, [sp, #32]
  422aa4:	ldr	x3, [sp, #40]
  422aa8:	adrp	x1, 445000 <_fini+0x4c30>
  422aac:	add	x1, x1, #0xe94
  422ab0:	adrp	x2, 445000 <_fini+0x4c30>
  422ab4:	add	x2, x2, #0xee7
  422ab8:	bl	407468 <sd_bus_error_setf@plt>
  422abc:	stur	w0, [x29, #-4]
  422ac0:	b	422b70 <method_do_shutdown_or_sleep+0x350>
  422ac4:	ldr	w8, [sp, #24]
  422ac8:	cmp	w8, #0x0
  422acc:	cset	w8, ge  // ge = tcont
  422ad0:	tbnz	w8, #0, 422ae0 <method_do_shutdown_or_sleep+0x2c0>
  422ad4:	ldr	w8, [sp, #24]
  422ad8:	stur	w8, [x29, #-4]
  422adc:	b	422b70 <method_do_shutdown_or_sleep+0x350>
  422ae0:	ldur	x0, [x29, #-16]
  422ae4:	ldur	x1, [x29, #-24]
  422ae8:	ldur	w2, [x29, #-36]
  422aec:	ldr	w8, [sp, #28]
  422af0:	cmp	w8, #0x0
  422af4:	cset	w8, ne  // ne = any
  422af8:	ldur	x4, [x29, #-48]
  422afc:	ldr	x5, [sp, #56]
  422b00:	ldr	x6, [sp, #48]
  422b04:	ldr	x7, [sp, #32]
  422b08:	and	w3, w8, #0x1
  422b0c:	bl	422b80 <verify_shutdown_creds>
  422b10:	str	w0, [sp, #24]
  422b14:	ldr	w8, [sp, #24]
  422b18:	cbz	w8, 422b28 <method_do_shutdown_or_sleep+0x308>
  422b1c:	ldr	w8, [sp, #24]
  422b20:	stur	w8, [x29, #-4]
  422b24:	b	422b70 <method_do_shutdown_or_sleep+0x350>
  422b28:	ldur	x0, [x29, #-16]
  422b2c:	ldur	x1, [x29, #-32]
  422b30:	ldur	w2, [x29, #-36]
  422b34:	ldr	x3, [sp, #32]
  422b38:	bl	415624 <bus_manager_shutdown_or_sleep_now_or_later>
  422b3c:	str	w0, [sp, #24]
  422b40:	ldr	w8, [sp, #24]
  422b44:	cmp	w8, #0x0
  422b48:	cset	w8, ge  // ge = tcont
  422b4c:	tbnz	w8, #0, 422b5c <method_do_shutdown_or_sleep+0x33c>
  422b50:	ldr	w8, [sp, #24]
  422b54:	stur	w8, [x29, #-4]
  422b58:	b	422b70 <method_do_shutdown_or_sleep+0x350>
  422b5c:	ldur	x0, [x29, #-24]
  422b60:	mov	x8, xzr
  422b64:	mov	x1, x8
  422b68:	bl	4075b8 <sd_bus_reply_method_return@plt>
  422b6c:	stur	w0, [x29, #-4]
  422b70:	ldur	w0, [x29, #-4]
  422b74:	ldp	x29, x30, [sp, #112]
  422b78:	add	sp, sp, #0x80
  422b7c:	ret

0000000000422b80 <verify_shutdown_creds>:
  422b80:	sub	sp, sp, #0x80
  422b84:	stp	x29, x30, [sp, #112]
  422b88:	add	x29, sp, #0x70
  422b8c:	mov	x8, xzr
  422b90:	mov	w9, #0x1                   	// #1
  422b94:	adrp	x10, 442000 <_fini+0x1c30>
  422b98:	add	x10, x10, #0xd8e
  422b9c:	add	x10, x10, #0x3
  422ba0:	adrp	x11, 445000 <_fini+0x4c30>
  422ba4:	add	x11, x11, #0xf05
  422ba8:	stur	x0, [x29, #-16]
  422bac:	stur	x1, [x29, #-24]
  422bb0:	stur	w2, [x29, #-28]
  422bb4:	and	w9, w3, w9
  422bb8:	sturb	w9, [x29, #-29]
  422bbc:	stur	x4, [x29, #-40]
  422bc0:	stur	x5, [x29, #-48]
  422bc4:	str	x6, [sp, #56]
  422bc8:	str	x7, [sp, #48]
  422bcc:	str	x8, [sp, #40]
  422bd0:	str	x10, [sp, #16]
  422bd4:	str	x11, [sp, #8]
  422bd8:	ldur	x8, [x29, #-16]
  422bdc:	cmp	x8, #0x0
  422be0:	cset	w9, ne  // ne = any
  422be4:	mov	w10, #0x1                   	// #1
  422be8:	eor	w9, w9, #0x1
  422bec:	eor	w9, w9, w10
  422bf0:	eor	w9, w9, w10
  422bf4:	and	w9, w9, #0x1
  422bf8:	mov	w0, w9
  422bfc:	sxtw	x8, w0
  422c00:	cbz	x8, 422c24 <verify_shutdown_creds+0xa4>
  422c04:	mov	w8, wzr
  422c08:	mov	w0, w8
  422c0c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  422c10:	add	x1, x1, #0x5ef
  422c14:	ldr	x2, [sp, #16]
  422c18:	mov	w3, #0x703                 	// #1795
  422c1c:	ldr	x4, [sp, #8]
  422c20:	bl	406c68 <log_assert_failed_realm@plt>
  422c24:	ldur	x8, [x29, #-24]
  422c28:	cmp	x8, #0x0
  422c2c:	cset	w9, ne  // ne = any
  422c30:	mov	w10, #0x1                   	// #1
  422c34:	eor	w9, w9, #0x1
  422c38:	eor	w9, w9, w10
  422c3c:	eor	w9, w9, w10
  422c40:	and	w9, w9, #0x1
  422c44:	mov	w0, w9
  422c48:	sxtw	x8, w0
  422c4c:	cbz	x8, 422c70 <verify_shutdown_creds+0xf0>
  422c50:	mov	w8, wzr
  422c54:	mov	w0, w8
  422c58:	adrp	x1, 443000 <_fini+0x2c30>
  422c5c:	add	x1, x1, #0x812
  422c60:	ldr	x2, [sp, #16]
  422c64:	mov	w3, #0x704                 	// #1796
  422c68:	ldr	x4, [sp, #8]
  422c6c:	bl	406c68 <log_assert_failed_realm@plt>
  422c70:	ldur	w8, [x29, #-28]
  422c74:	cmp	w8, #0x0
  422c78:	cset	w8, ge  // ge = tcont
  422c7c:	mov	w9, #0x1                   	// #1
  422c80:	eor	w8, w8, #0x1
  422c84:	eor	w8, w8, w9
  422c88:	eor	w8, w8, w9
  422c8c:	and	w8, w8, #0x1
  422c90:	mov	w0, w8
  422c94:	sxtw	x10, w0
  422c98:	cbz	x10, 422cbc <verify_shutdown_creds+0x13c>
  422c9c:	mov	w8, wzr
  422ca0:	mov	w0, w8
  422ca4:	adrp	x1, 444000 <_fini+0x3c30>
  422ca8:	add	x1, x1, #0x2b7
  422cac:	ldr	x2, [sp, #16]
  422cb0:	mov	w3, #0x705                 	// #1797
  422cb4:	ldr	x4, [sp, #8]
  422cb8:	bl	406c68 <log_assert_failed_realm@plt>
  422cbc:	ldur	w8, [x29, #-28]
  422cc0:	cmp	w8, #0x80
  422cc4:	cset	w8, le
  422cc8:	mov	w9, #0x1                   	// #1
  422ccc:	eor	w8, w8, #0x1
  422cd0:	eor	w8, w8, w9
  422cd4:	eor	w8, w8, w9
  422cd8:	and	w8, w8, #0x1
  422cdc:	mov	w0, w8
  422ce0:	sxtw	x10, w0
  422ce4:	cbz	x10, 422d08 <verify_shutdown_creds+0x188>
  422ce8:	mov	w8, wzr
  422cec:	mov	w0, w8
  422cf0:	adrp	x1, 445000 <_fini+0x4c30>
  422cf4:	add	x1, x1, #0xe18
  422cf8:	ldr	x2, [sp, #16]
  422cfc:	mov	w3, #0x706                 	// #1798
  422d00:	ldr	x4, [sp, #8]
  422d04:	bl	406c68 <log_assert_failed_realm@plt>
  422d08:	ldur	x0, [x29, #-24]
  422d0c:	mov	x1, #0x10                  	// #16
  422d10:	add	x2, sp, #0x28
  422d14:	bl	407478 <sd_bus_query_sender_creds@plt>
  422d18:	str	w0, [sp, #28]
  422d1c:	ldr	w8, [sp, #28]
  422d20:	cmp	w8, #0x0
  422d24:	cset	w8, ge  // ge = tcont
  422d28:	tbnz	w8, #0, 422d40 <verify_shutdown_creds+0x1c0>
  422d2c:	ldr	w8, [sp, #28]
  422d30:	stur	w8, [x29, #-4]
  422d34:	mov	w8, #0x1                   	// #1
  422d38:	str	w8, [sp, #24]
  422d3c:	b	422f9c <verify_shutdown_creds+0x41c>
  422d40:	ldr	x0, [sp, #40]
  422d44:	add	x1, sp, #0x20
  422d48:	bl	407698 <sd_bus_creds_get_euid@plt>
  422d4c:	str	w0, [sp, #28]
  422d50:	ldr	w8, [sp, #28]
  422d54:	cmp	w8, #0x0
  422d58:	cset	w8, ge  // ge = tcont
  422d5c:	tbnz	w8, #0, 422d74 <verify_shutdown_creds+0x1f4>
  422d60:	ldr	w8, [sp, #28]
  422d64:	stur	w8, [x29, #-4]
  422d68:	mov	w8, #0x1                   	// #1
  422d6c:	str	w8, [sp, #24]
  422d70:	b	422f9c <verify_shutdown_creds+0x41c>
  422d74:	ldur	x0, [x29, #-16]
  422d78:	ldr	w1, [sp, #32]
  422d7c:	bl	422fb4 <have_multiple_sessions>
  422d80:	str	w0, [sp, #28]
  422d84:	ldr	w8, [sp, #28]
  422d88:	cmp	w8, #0x0
  422d8c:	cset	w8, ge  // ge = tcont
  422d90:	tbnz	w8, #0, 422da8 <verify_shutdown_creds+0x228>
  422d94:	ldr	w8, [sp, #28]
  422d98:	stur	w8, [x29, #-4]
  422d9c:	mov	w8, #0x1                   	// #1
  422da0:	str	w8, [sp, #24]
  422da4:	b	422f9c <verify_shutdown_creds+0x41c>
  422da8:	ldr	w8, [sp, #28]
  422dac:	mov	w9, wzr
  422db0:	cmp	w8, #0x0
  422db4:	cset	w8, gt
  422db8:	mov	w10, #0x1                   	// #1
  422dbc:	and	w8, w8, w10
  422dc0:	strb	w8, [sp, #39]
  422dc4:	ldur	x0, [x29, #-16]
  422dc8:	ldur	w1, [x29, #-28]
  422dcc:	ldr	w6, [sp, #32]
  422dd0:	mov	w2, w9
  422dd4:	mov	x11, xzr
  422dd8:	mov	x3, x11
  422ddc:	mov	w8, wzr
  422de0:	and	w4, w8, #0x1
  422de4:	and	w5, w10, #0x1
  422de8:	mov	x7, x11
  422dec:	str	w10, [sp, #4]
  422df0:	bl	4268b8 <manager_is_inhibited>
  422df4:	ldr	w8, [sp, #4]
  422df8:	and	w9, w0, w8
  422dfc:	strb	w9, [sp, #38]
  422e00:	ldrb	w9, [sp, #39]
  422e04:	tbnz	w9, #0, 422e0c <verify_shutdown_creds+0x28c>
  422e08:	b	422e84 <verify_shutdown_creds+0x304>
  422e0c:	ldur	x8, [x29, #-48]
  422e10:	cbz	x8, 422e84 <verify_shutdown_creds+0x304>
  422e14:	ldur	x0, [x29, #-24]
  422e18:	ldur	x2, [x29, #-48]
  422e1c:	ldurb	w8, [x29, #-29]
  422e20:	ldur	x9, [x29, #-16]
  422e24:	add	x6, x9, #0x1b0
  422e28:	ldr	x7, [sp, #48]
  422e2c:	mov	w1, #0x16                  	// #22
  422e30:	mov	x9, xzr
  422e34:	mov	x3, x9
  422e38:	and	w4, w8, #0x1
  422e3c:	mov	w5, #0xffffffff            	// #-1
  422e40:	bl	407678 <bus_verify_polkit_async@plt>
  422e44:	str	w0, [sp, #28]
  422e48:	ldr	w8, [sp, #28]
  422e4c:	cmp	w8, #0x0
  422e50:	cset	w8, ge  // ge = tcont
  422e54:	tbnz	w8, #0, 422e6c <verify_shutdown_creds+0x2ec>
  422e58:	ldr	w8, [sp, #28]
  422e5c:	stur	w8, [x29, #-4]
  422e60:	mov	w8, #0x1                   	// #1
  422e64:	str	w8, [sp, #24]
  422e68:	b	422f9c <verify_shutdown_creds+0x41c>
  422e6c:	ldr	w8, [sp, #28]
  422e70:	cbnz	w8, 422e84 <verify_shutdown_creds+0x304>
  422e74:	mov	w8, #0x1                   	// #1
  422e78:	stur	w8, [x29, #-4]
  422e7c:	str	w8, [sp, #24]
  422e80:	b	422f9c <verify_shutdown_creds+0x41c>
  422e84:	ldrb	w8, [sp, #38]
  422e88:	tbnz	w8, #0, 422e90 <verify_shutdown_creds+0x310>
  422e8c:	b	422f08 <verify_shutdown_creds+0x388>
  422e90:	ldr	x8, [sp, #56]
  422e94:	cbz	x8, 422f08 <verify_shutdown_creds+0x388>
  422e98:	ldur	x0, [x29, #-24]
  422e9c:	ldr	x2, [sp, #56]
  422ea0:	ldurb	w8, [x29, #-29]
  422ea4:	ldur	x9, [x29, #-16]
  422ea8:	add	x6, x9, #0x1b0
  422eac:	ldr	x7, [sp, #48]
  422eb0:	mov	w1, #0x16                  	// #22
  422eb4:	mov	x9, xzr
  422eb8:	mov	x3, x9
  422ebc:	and	w4, w8, #0x1
  422ec0:	mov	w5, #0xffffffff            	// #-1
  422ec4:	bl	407678 <bus_verify_polkit_async@plt>
  422ec8:	str	w0, [sp, #28]
  422ecc:	ldr	w8, [sp, #28]
  422ed0:	cmp	w8, #0x0
  422ed4:	cset	w8, ge  // ge = tcont
  422ed8:	tbnz	w8, #0, 422ef0 <verify_shutdown_creds+0x370>
  422edc:	ldr	w8, [sp, #28]
  422ee0:	stur	w8, [x29, #-4]
  422ee4:	mov	w8, #0x1                   	// #1
  422ee8:	str	w8, [sp, #24]
  422eec:	b	422f9c <verify_shutdown_creds+0x41c>
  422ef0:	ldr	w8, [sp, #28]
  422ef4:	cbnz	w8, 422f08 <verify_shutdown_creds+0x388>
  422ef8:	mov	w8, #0x1                   	// #1
  422efc:	stur	w8, [x29, #-4]
  422f00:	str	w8, [sp, #24]
  422f04:	b	422f9c <verify_shutdown_creds+0x41c>
  422f08:	ldrb	w8, [sp, #39]
  422f0c:	tbnz	w8, #0, 422f90 <verify_shutdown_creds+0x410>
  422f10:	ldrb	w8, [sp, #38]
  422f14:	tbnz	w8, #0, 422f90 <verify_shutdown_creds+0x410>
  422f18:	ldur	x8, [x29, #-40]
  422f1c:	cbz	x8, 422f90 <verify_shutdown_creds+0x410>
  422f20:	ldur	x0, [x29, #-24]
  422f24:	ldur	x2, [x29, #-40]
  422f28:	ldurb	w8, [x29, #-29]
  422f2c:	ldur	x9, [x29, #-16]
  422f30:	add	x6, x9, #0x1b0
  422f34:	ldr	x7, [sp, #48]
  422f38:	mov	w1, #0x16                  	// #22
  422f3c:	mov	x9, xzr
  422f40:	mov	x3, x9
  422f44:	and	w4, w8, #0x1
  422f48:	mov	w5, #0xffffffff            	// #-1
  422f4c:	bl	407678 <bus_verify_polkit_async@plt>
  422f50:	str	w0, [sp, #28]
  422f54:	ldr	w8, [sp, #28]
  422f58:	cmp	w8, #0x0
  422f5c:	cset	w8, ge  // ge = tcont
  422f60:	tbnz	w8, #0, 422f78 <verify_shutdown_creds+0x3f8>
  422f64:	ldr	w8, [sp, #28]
  422f68:	stur	w8, [x29, #-4]
  422f6c:	mov	w8, #0x1                   	// #1
  422f70:	str	w8, [sp, #24]
  422f74:	b	422f9c <verify_shutdown_creds+0x41c>
  422f78:	ldr	w8, [sp, #28]
  422f7c:	cbnz	w8, 422f90 <verify_shutdown_creds+0x410>
  422f80:	mov	w8, #0x1                   	// #1
  422f84:	stur	w8, [x29, #-4]
  422f88:	str	w8, [sp, #24]
  422f8c:	b	422f9c <verify_shutdown_creds+0x41c>
  422f90:	stur	wzr, [x29, #-4]
  422f94:	mov	w8, #0x1                   	// #1
  422f98:	str	w8, [sp, #24]
  422f9c:	add	x0, sp, #0x28
  422fa0:	bl	421604 <sd_bus_creds_unrefp>
  422fa4:	ldur	w0, [x29, #-4]
  422fa8:	ldp	x29, x30, [sp, #112]
  422fac:	add	sp, sp, #0x80
  422fb0:	ret

0000000000422fb4 <have_multiple_sessions>:
  422fb4:	sub	sp, sp, #0x60
  422fb8:	stp	x29, x30, [sp, #80]
  422fbc:	add	x29, sp, #0x50
  422fc0:	adrp	x8, 442000 <_fini+0x1c30>
  422fc4:	add	x8, x8, #0xd8e
  422fc8:	add	x2, x8, #0x3
  422fcc:	stur	x0, [x29, #-16]
  422fd0:	stur	w1, [x29, #-20]
  422fd4:	str	x2, [sp, #8]
  422fd8:	ldur	x8, [x29, #-16]
  422fdc:	cmp	x8, #0x0
  422fe0:	cset	w9, ne  // ne = any
  422fe4:	mov	w10, #0x1                   	// #1
  422fe8:	eor	w9, w9, #0x1
  422fec:	eor	w9, w9, w10
  422ff0:	eor	w9, w9, w10
  422ff4:	and	w9, w9, #0x1
  422ff8:	mov	w0, w9
  422ffc:	sxtw	x8, w0
  423000:	cbz	x8, 423028 <have_multiple_sessions+0x74>
  423004:	mov	w8, wzr
  423008:	mov	w0, w8
  42300c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  423010:	add	x1, x1, #0x5ef
  423014:	ldr	x2, [sp, #8]
  423018:	mov	w3, #0x5cd                 	// #1485
  42301c:	adrp	x4, 445000 <_fini+0x4c30>
  423020:	add	x4, x4, #0xf8a
  423024:	bl	406c68 <log_assert_failed_realm@plt>
  423028:	add	x8, sp, #0x10
  42302c:	mov	w9, #0xfffffffe            	// #-2
  423030:	str	w9, [sp, #16]
  423034:	mov	x10, xzr
  423038:	str	x10, [x8, #8]
  42303c:	ldr	q0, [sp, #16]
  423040:	str	q0, [sp, #32]
  423044:	ldur	x8, [x29, #-16]
  423048:	ldr	x0, [x8, #32]
  42304c:	add	x1, sp, #0x20
  423050:	sub	x2, x29, #0x20
  423054:	mov	x8, xzr
  423058:	mov	x3, x8
  42305c:	bl	41fdec <hashmap_iterate>
  423060:	tbnz	w0, #0, 423068 <have_multiple_sessions+0xb4>
  423064:	b	42309c <have_multiple_sessions+0xe8>
  423068:	ldur	x8, [x29, #-32]
  42306c:	ldr	w9, [x8, #24]
  423070:	cbnz	w9, 423098 <have_multiple_sessions+0xe4>
  423074:	ldur	x8, [x29, #-32]
  423078:	ldr	x8, [x8, #40]
  42307c:	ldr	w9, [x8, #8]
  423080:	ldur	w10, [x29, #-20]
  423084:	cmp	w9, w10
  423088:	b.eq	423098 <have_multiple_sessions+0xe4>  // b.none
  42308c:	mov	w8, #0x1                   	// #1
  423090:	stur	w8, [x29, #-4]
  423094:	b	4230a0 <have_multiple_sessions+0xec>
  423098:	b	423044 <have_multiple_sessions+0x90>
  42309c:	stur	wzr, [x29, #-4]
  4230a0:	ldur	w0, [x29, #-4]
  4230a4:	ldp	x29, x30, [sp, #80]
  4230a8:	add	sp, sp, #0x60
  4230ac:	ret

00000000004230b0 <method_can_shutdown_or_sleep>:
  4230b0:	sub	sp, sp, #0xd0
  4230b4:	stp	x29, x30, [sp, #192]
  4230b8:	add	x29, sp, #0xc0
  4230bc:	mov	x8, xzr
  4230c0:	adrp	x9, 446000 <_fini+0x5c30>
  4230c4:	add	x9, x9, #0x275
  4230c8:	adrp	x10, 446000 <_fini+0x5c30>
  4230cc:	add	x10, x10, #0x27c
  4230d0:	adrp	x11, 446000 <_fini+0x5c30>
  4230d4:	add	x11, x11, #0x278
  4230d8:	adrp	x12, 442000 <_fini+0x1c30>
  4230dc:	add	x12, x12, #0xd8e
  4230e0:	add	x12, x12, #0x3
  4230e4:	adrp	x13, 446000 <_fini+0x5c30>
  4230e8:	add	x13, x13, #0x1a9
  4230ec:	stur	x0, [x29, #-16]
  4230f0:	stur	x1, [x29, #-24]
  4230f4:	stur	w2, [x29, #-28]
  4230f8:	stur	x3, [x29, #-40]
  4230fc:	stur	x4, [x29, #-48]
  423100:	stur	x5, [x29, #-56]
  423104:	stur	x6, [x29, #-64]
  423108:	stur	x7, [x29, #-72]
  42310c:	stur	x8, [x29, #-80]
  423110:	str	x8, [sp, #96]
  423114:	str	x9, [sp, #56]
  423118:	str	x10, [sp, #48]
  42311c:	str	x11, [sp, #40]
  423120:	str	x12, [sp, #32]
  423124:	str	x13, [sp, #24]
  423128:	ldur	x8, [x29, #-16]
  42312c:	cmp	x8, #0x0
  423130:	cset	w9, ne  // ne = any
  423134:	mov	w10, #0x1                   	// #1
  423138:	eor	w9, w9, #0x1
  42313c:	eor	w9, w9, w10
  423140:	eor	w9, w9, w10
  423144:	and	w9, w9, #0x1
  423148:	mov	w0, w9
  42314c:	sxtw	x8, w0
  423150:	cbz	x8, 423174 <method_can_shutdown_or_sleep+0xc4>
  423154:	mov	w8, wzr
  423158:	mov	w0, w8
  42315c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  423160:	add	x1, x1, #0x5ef
  423164:	ldr	x2, [sp, #32]
  423168:	mov	w3, #0x8f6                 	// #2294
  42316c:	ldr	x4, [sp, #24]
  423170:	bl	406c68 <log_assert_failed_realm@plt>
  423174:	ldur	x8, [x29, #-24]
  423178:	cmp	x8, #0x0
  42317c:	cset	w9, ne  // ne = any
  423180:	mov	w10, #0x1                   	// #1
  423184:	eor	w9, w9, #0x1
  423188:	eor	w9, w9, w10
  42318c:	eor	w9, w9, w10
  423190:	and	w9, w9, #0x1
  423194:	mov	w0, w9
  423198:	sxtw	x8, w0
  42319c:	cbz	x8, 4231c0 <method_can_shutdown_or_sleep+0x110>
  4231a0:	mov	w8, wzr
  4231a4:	mov	w0, w8
  4231a8:	adrp	x1, 443000 <_fini+0x2c30>
  4231ac:	add	x1, x1, #0x812
  4231b0:	ldr	x2, [sp, #32]
  4231b4:	mov	w3, #0x8f7                 	// #2295
  4231b8:	ldr	x4, [sp, #24]
  4231bc:	bl	406c68 <log_assert_failed_realm@plt>
  4231c0:	ldur	w8, [x29, #-28]
  4231c4:	cmp	w8, #0x0
  4231c8:	cset	w8, ge  // ge = tcont
  4231cc:	mov	w9, #0x1                   	// #1
  4231d0:	eor	w8, w8, #0x1
  4231d4:	eor	w8, w8, w9
  4231d8:	eor	w8, w8, w9
  4231dc:	and	w8, w8, #0x1
  4231e0:	mov	w0, w8
  4231e4:	sxtw	x10, w0
  4231e8:	cbz	x10, 42320c <method_can_shutdown_or_sleep+0x15c>
  4231ec:	mov	w8, wzr
  4231f0:	mov	w0, w8
  4231f4:	adrp	x1, 444000 <_fini+0x3c30>
  4231f8:	add	x1, x1, #0x2b7
  4231fc:	ldr	x2, [sp, #32]
  423200:	mov	w3, #0x8f8                 	// #2296
  423204:	ldr	x4, [sp, #24]
  423208:	bl	406c68 <log_assert_failed_realm@plt>
  42320c:	ldur	w8, [x29, #-28]
  423210:	cmp	w8, #0x80
  423214:	cset	w8, le
  423218:	mov	w9, #0x1                   	// #1
  42321c:	eor	w8, w8, #0x1
  423220:	eor	w8, w8, w9
  423224:	eor	w8, w8, w9
  423228:	and	w8, w8, #0x1
  42322c:	mov	w0, w8
  423230:	sxtw	x10, w0
  423234:	cbz	x10, 423258 <method_can_shutdown_or_sleep+0x1a8>
  423238:	mov	w8, wzr
  42323c:	mov	w0, w8
  423240:	adrp	x1, 445000 <_fini+0x4c30>
  423244:	add	x1, x1, #0xe18
  423248:	ldr	x2, [sp, #32]
  42324c:	mov	w3, #0x8f9                 	// #2297
  423250:	ldr	x4, [sp, #24]
  423254:	bl	406c68 <log_assert_failed_realm@plt>
  423258:	ldur	x8, [x29, #-40]
  42325c:	cmp	x8, #0x0
  423260:	cset	w9, ne  // ne = any
  423264:	mov	w10, #0x1                   	// #1
  423268:	eor	w9, w9, #0x1
  42326c:	eor	w9, w9, w10
  423270:	eor	w9, w9, w10
  423274:	and	w9, w9, #0x1
  423278:	mov	w0, w9
  42327c:	sxtw	x8, w0
  423280:	cbz	x8, 4232a4 <method_can_shutdown_or_sleep+0x1f4>
  423284:	mov	w8, wzr
  423288:	mov	w0, w8
  42328c:	adrp	x1, 446000 <_fini+0x5c30>
  423290:	add	x1, x1, #0x23c
  423294:	ldr	x2, [sp, #32]
  423298:	mov	w3, #0x8fa                 	// #2298
  42329c:	ldr	x4, [sp, #24]
  4232a0:	bl	406c68 <log_assert_failed_realm@plt>
  4232a4:	ldur	x8, [x29, #-48]
  4232a8:	cmp	x8, #0x0
  4232ac:	cset	w9, ne  // ne = any
  4232b0:	mov	w10, #0x1                   	// #1
  4232b4:	eor	w9, w9, #0x1
  4232b8:	eor	w9, w9, w10
  4232bc:	eor	w9, w9, w10
  4232c0:	and	w9, w9, #0x1
  4232c4:	mov	w0, w9
  4232c8:	sxtw	x8, w0
  4232cc:	cbz	x8, 4232f0 <method_can_shutdown_or_sleep+0x240>
  4232d0:	mov	w8, wzr
  4232d4:	mov	w0, w8
  4232d8:	adrp	x1, 446000 <_fini+0x5c30>
  4232dc:	add	x1, x1, #0x243
  4232e0:	ldr	x2, [sp, #32]
  4232e4:	mov	w3, #0x8fb                 	// #2299
  4232e8:	ldr	x4, [sp, #24]
  4232ec:	bl	406c68 <log_assert_failed_realm@plt>
  4232f0:	ldur	x8, [x29, #-56]
  4232f4:	cmp	x8, #0x0
  4232f8:	cset	w9, ne  // ne = any
  4232fc:	mov	w10, #0x1                   	// #1
  423300:	eor	w9, w9, #0x1
  423304:	eor	w9, w9, w10
  423308:	eor	w9, w9, w10
  42330c:	and	w9, w9, #0x1
  423310:	mov	w0, w9
  423314:	sxtw	x8, w0
  423318:	cbz	x8, 42333c <method_can_shutdown_or_sleep+0x28c>
  42331c:	mov	w8, wzr
  423320:	mov	w0, w8
  423324:	adrp	x1, 446000 <_fini+0x5c30>
  423328:	add	x1, x1, #0x25c
  42332c:	ldr	x2, [sp, #32]
  423330:	mov	w3, #0x8fc                 	// #2300
  423334:	ldr	x4, [sp, #24]
  423338:	bl	406c68 <log_assert_failed_realm@plt>
  42333c:	ldur	x8, [x29, #-64]
  423340:	cbz	x8, 4233f8 <method_can_shutdown_or_sleep+0x348>
  423344:	ldur	x0, [x29, #-64]
  423348:	bl	4071a8 <can_sleep@plt>
  42334c:	str	w0, [sp, #88]
  423350:	mov	w8, #0x0                   	// #0
  423354:	strb	w8, [sp, #87]
  423358:	ldr	w8, [sp, #88]
  42335c:	mov	w9, #0xffffffe4            	// #-28
  423360:	cmp	w8, w9
  423364:	str	w8, [sp, #20]
  423368:	b.eq	423388 <method_can_shutdown_or_sleep+0x2d8>  // b.none
  42336c:	b	423370 <method_can_shutdown_or_sleep+0x2c0>
  423370:	ldr	w8, [sp, #20]
  423374:	cmp	w8, #0x0
  423378:	cset	w9, eq  // eq = none
  42337c:	eor	w9, w9, #0x1
  423380:	tbnz	w9, #0, 423394 <method_can_shutdown_or_sleep+0x2e4>
  423384:	b	423388 <method_can_shutdown_or_sleep+0x2d8>
  423388:	mov	w8, #0x1                   	// #1
  42338c:	strb	w8, [sp, #87]
  423390:	b	423394 <method_can_shutdown_or_sleep+0x2e4>
  423394:	ldrb	w8, [sp, #87]
  423398:	and	w8, w8, #0x1
  42339c:	strb	w8, [sp, #86]
  4233a0:	ldrb	w8, [sp, #86]
  4233a4:	tbnz	w8, #0, 4233ac <method_can_shutdown_or_sleep+0x2fc>
  4233a8:	b	4233d4 <method_can_shutdown_or_sleep+0x324>
  4233ac:	ldur	x0, [x29, #-24]
  4233b0:	adrp	x1, 442000 <_fini+0x1c30>
  4233b4:	add	x1, x1, #0xf2
  4233b8:	adrp	x2, 446000 <_fini+0x5c30>
  4233bc:	add	x2, x2, #0x272
  4233c0:	bl	4075b8 <sd_bus_reply_method_return@plt>
  4233c4:	stur	w0, [x29, #-4]
  4233c8:	mov	w8, #0x1                   	// #1
  4233cc:	str	w8, [sp, #80]
  4233d0:	b	4237b8 <method_can_shutdown_or_sleep+0x708>
  4233d4:	ldr	w8, [sp, #88]
  4233d8:	cmp	w8, #0x0
  4233dc:	cset	w8, ge  // ge = tcont
  4233e0:	tbnz	w8, #0, 4233f8 <method_can_shutdown_or_sleep+0x348>
  4233e4:	ldr	w8, [sp, #88]
  4233e8:	stur	w8, [x29, #-4]
  4233ec:	mov	w8, #0x1                   	// #1
  4233f0:	str	w8, [sp, #80]
  4233f4:	b	4237b8 <method_can_shutdown_or_sleep+0x708>
  4233f8:	ldur	x0, [x29, #-24]
  4233fc:	mov	x1, #0x10                  	// #16
  423400:	sub	x2, x29, #0x50
  423404:	bl	407478 <sd_bus_query_sender_creds@plt>
  423408:	str	w0, [sp, #88]
  42340c:	ldr	w8, [sp, #88]
  423410:	cmp	w8, #0x0
  423414:	cset	w8, ge  // ge = tcont
  423418:	tbnz	w8, #0, 423430 <method_can_shutdown_or_sleep+0x380>
  42341c:	ldr	w8, [sp, #88]
  423420:	stur	w8, [x29, #-4]
  423424:	mov	w8, #0x1                   	// #1
  423428:	str	w8, [sp, #80]
  42342c:	b	4237b8 <method_can_shutdown_or_sleep+0x708>
  423430:	ldur	x0, [x29, #-80]
  423434:	add	x1, sp, #0x5c
  423438:	bl	407698 <sd_bus_creds_get_euid@plt>
  42343c:	str	w0, [sp, #88]
  423440:	ldr	w8, [sp, #88]
  423444:	cmp	w8, #0x0
  423448:	cset	w8, ge  // ge = tcont
  42344c:	tbnz	w8, #0, 423464 <method_can_shutdown_or_sleep+0x3b4>
  423450:	ldr	w8, [sp, #88]
  423454:	stur	w8, [x29, #-4]
  423458:	mov	w8, #0x1                   	// #1
  42345c:	str	w8, [sp, #80]
  423460:	b	4237b8 <method_can_shutdown_or_sleep+0x708>
  423464:	ldur	x0, [x29, #-16]
  423468:	ldr	w1, [sp, #92]
  42346c:	bl	422fb4 <have_multiple_sessions>
  423470:	str	w0, [sp, #88]
  423474:	ldr	w8, [sp, #88]
  423478:	cmp	w8, #0x0
  42347c:	cset	w8, ge  // ge = tcont
  423480:	tbnz	w8, #0, 423498 <method_can_shutdown_or_sleep+0x3e8>
  423484:	ldr	w8, [sp, #88]
  423488:	stur	w8, [x29, #-4]
  42348c:	mov	w8, #0x1                   	// #1
  423490:	str	w8, [sp, #80]
  423494:	b	4237b8 <method_can_shutdown_or_sleep+0x708>
  423498:	ldr	w8, [sp, #88]
  42349c:	mov	w9, wzr
  4234a0:	cmp	w8, #0x0
  4234a4:	cset	w8, gt
  4234a8:	mov	w10, #0x1                   	// #1
  4234ac:	and	w8, w8, w10
  4234b0:	sturb	w8, [x29, #-85]
  4234b4:	ldur	x0, [x29, #-16]
  4234b8:	ldur	w1, [x29, #-28]
  4234bc:	ldr	w6, [sp, #92]
  4234c0:	mov	w2, w9
  4234c4:	mov	x11, xzr
  4234c8:	mov	x3, x11
  4234cc:	mov	w8, wzr
  4234d0:	and	w4, w8, #0x1
  4234d4:	and	w5, w10, #0x1
  4234d8:	mov	x7, x11
  4234dc:	str	w10, [sp, #16]
  4234e0:	bl	4268b8 <manager_is_inhibited>
  4234e4:	ldr	w8, [sp, #16]
  4234e8:	and	w9, w0, w8
  4234ec:	sturb	w9, [x29, #-87]
  4234f0:	ldur	x0, [x29, #-64]
  4234f4:	bl	40f3cc <handle_action_from_string>
  4234f8:	stur	w0, [x29, #-84]
  4234fc:	ldur	w8, [x29, #-84]
  423500:	cmp	w8, #0x0
  423504:	cset	w8, lt  // lt = tstop
  423508:	tbnz	w8, #0, 4235b8 <method_can_shutdown_or_sleep+0x508>
  42350c:	ldur	w0, [x29, #-84]
  423510:	bl	40e6ec <manager_target_for_action>
  423514:	str	x0, [sp, #72]
  423518:	ldr	x8, [sp, #72]
  42351c:	cbz	x8, 4235b8 <method_can_shutdown_or_sleep+0x508>
  423520:	add	x2, sp, #0x40
  423524:	mov	x8, xzr
  423528:	str	x8, [sp, #64]
  42352c:	ldur	x8, [x29, #-16]
  423530:	ldr	x0, [x8, #8]
  423534:	ldr	x1, [sp, #72]
  423538:	bl	4074d8 <unit_load_state@plt>
  42353c:	str	w0, [sp, #88]
  423540:	ldr	w9, [sp, #88]
  423544:	cmp	w9, #0x0
  423548:	cset	w9, ge  // ge = tcont
  42354c:	tbnz	w9, #0, 423564 <method_can_shutdown_or_sleep+0x4b4>
  423550:	ldr	w8, [sp, #88]
  423554:	stur	w8, [x29, #-4]
  423558:	mov	w8, #0x1                   	// #1
  42355c:	str	w8, [sp, #80]
  423560:	b	423590 <method_can_shutdown_or_sleep+0x4e0>
  423564:	ldr	x0, [sp, #64]
  423568:	adrp	x1, 443000 <_fini+0x2c30>
  42356c:	add	x1, x1, #0x160
  423570:	bl	407158 <strcmp@plt>
  423574:	cbz	w0, 42358c <method_can_shutdown_or_sleep+0x4dc>
  423578:	ldr	x8, [sp, #56]
  42357c:	str	x8, [sp, #96]
  423580:	mov	w9, #0x11                  	// #17
  423584:	str	w9, [sp, #80]
  423588:	b	423590 <method_can_shutdown_or_sleep+0x4e0>
  42358c:	str	wzr, [sp, #80]
  423590:	add	x0, sp, #0x40
  423594:	bl	4152e4 <freep>
  423598:	ldr	w8, [sp, #80]
  42359c:	str	w8, [sp, #12]
  4235a0:	cbz	w8, 4235b8 <method_can_shutdown_or_sleep+0x508>
  4235a4:	b	4235a8 <method_can_shutdown_or_sleep+0x4f8>
  4235a8:	ldr	w8, [sp, #12]
  4235ac:	cmp	w8, #0x11
  4235b0:	b.eq	423798 <method_can_shutdown_or_sleep+0x6e8>  // b.none
  4235b4:	b	4237b8 <method_can_shutdown_or_sleep+0x708>
  4235b8:	ldurb	w8, [x29, #-85]
  4235bc:	tbnz	w8, #0, 4235c4 <method_can_shutdown_or_sleep+0x514>
  4235c0:	b	42364c <method_can_shutdown_or_sleep+0x59c>
  4235c4:	ldur	x0, [x29, #-24]
  4235c8:	ldur	x2, [x29, #-48]
  4235cc:	ldur	x6, [x29, #-72]
  4235d0:	mov	w1, #0x16                  	// #22
  4235d4:	mov	x8, xzr
  4235d8:	mov	x3, x8
  4235dc:	mov	w4, #0xffffffff            	// #-1
  4235e0:	sub	x5, x29, #0x56
  4235e4:	bl	407928 <bus_test_polkit@plt>
  4235e8:	str	w0, [sp, #88]
  4235ec:	ldr	w9, [sp, #88]
  4235f0:	cmp	w9, #0x0
  4235f4:	cset	w9, ge  // ge = tcont
  4235f8:	tbnz	w9, #0, 423610 <method_can_shutdown_or_sleep+0x560>
  4235fc:	ldr	w8, [sp, #88]
  423600:	stur	w8, [x29, #-4]
  423604:	mov	w8, #0x1                   	// #1
  423608:	str	w8, [sp, #80]
  42360c:	b	4237b8 <method_can_shutdown_or_sleep+0x708>
  423610:	ldr	w8, [sp, #88]
  423614:	cmp	w8, #0x0
  423618:	cset	w8, le
  42361c:	tbnz	w8, #0, 42362c <method_can_shutdown_or_sleep+0x57c>
  423620:	ldr	x8, [sp, #40]
  423624:	str	x8, [sp, #96]
  423628:	b	42364c <method_can_shutdown_or_sleep+0x59c>
  42362c:	ldurb	w8, [x29, #-86]
  423630:	tbnz	w8, #0, 423638 <method_can_shutdown_or_sleep+0x588>
  423634:	b	423644 <method_can_shutdown_or_sleep+0x594>
  423638:	ldr	x8, [sp, #48]
  42363c:	str	x8, [sp, #96]
  423640:	b	42364c <method_can_shutdown_or_sleep+0x59c>
  423644:	ldr	x8, [sp, #56]
  423648:	str	x8, [sp, #96]
  42364c:	ldurb	w8, [x29, #-87]
  423650:	tbnz	w8, #0, 423658 <method_can_shutdown_or_sleep+0x5a8>
  423654:	b	423700 <method_can_shutdown_or_sleep+0x650>
  423658:	ldur	x0, [x29, #-24]
  42365c:	ldur	x2, [x29, #-56]
  423660:	ldur	x6, [x29, #-72]
  423664:	mov	w1, #0x16                  	// #22
  423668:	mov	x8, xzr
  42366c:	mov	x3, x8
  423670:	mov	w4, #0xffffffff            	// #-1
  423674:	sub	x5, x29, #0x56
  423678:	bl	407928 <bus_test_polkit@plt>
  42367c:	str	w0, [sp, #88]
  423680:	ldr	w9, [sp, #88]
  423684:	cmp	w9, #0x0
  423688:	cset	w9, ge  // ge = tcont
  42368c:	tbnz	w9, #0, 4236a4 <method_can_shutdown_or_sleep+0x5f4>
  423690:	ldr	w8, [sp, #88]
  423694:	stur	w8, [x29, #-4]
  423698:	mov	w8, #0x1                   	// #1
  42369c:	str	w8, [sp, #80]
  4236a0:	b	4237b8 <method_can_shutdown_or_sleep+0x708>
  4236a4:	ldr	w8, [sp, #88]
  4236a8:	cmp	w8, #0x0
  4236ac:	cset	w8, le
  4236b0:	tbnz	w8, #0, 4236c8 <method_can_shutdown_or_sleep+0x618>
  4236b4:	ldr	x8, [sp, #96]
  4236b8:	cbnz	x8, 4236c4 <method_can_shutdown_or_sleep+0x614>
  4236bc:	ldr	x8, [sp, #40]
  4236c0:	str	x8, [sp, #96]
  4236c4:	b	423700 <method_can_shutdown_or_sleep+0x650>
  4236c8:	ldurb	w8, [x29, #-86]
  4236cc:	tbnz	w8, #0, 4236d4 <method_can_shutdown_or_sleep+0x624>
  4236d0:	b	4236f8 <method_can_shutdown_or_sleep+0x648>
  4236d4:	ldr	x8, [sp, #96]
  4236d8:	cbz	x8, 4236ec <method_can_shutdown_or_sleep+0x63c>
  4236dc:	ldr	x0, [sp, #96]
  4236e0:	ldr	x1, [sp, #40]
  4236e4:	bl	407158 <strcmp@plt>
  4236e8:	cbnz	w0, 4236f4 <method_can_shutdown_or_sleep+0x644>
  4236ec:	ldr	x8, [sp, #48]
  4236f0:	str	x8, [sp, #96]
  4236f4:	b	423700 <method_can_shutdown_or_sleep+0x650>
  4236f8:	ldr	x8, [sp, #56]
  4236fc:	str	x8, [sp, #96]
  423700:	ldurb	w8, [x29, #-85]
  423704:	tbnz	w8, #0, 423798 <method_can_shutdown_or_sleep+0x6e8>
  423708:	ldurb	w8, [x29, #-87]
  42370c:	tbnz	w8, #0, 423798 <method_can_shutdown_or_sleep+0x6e8>
  423710:	ldur	x0, [x29, #-24]
  423714:	ldur	x2, [x29, #-40]
  423718:	ldur	x6, [x29, #-72]
  42371c:	mov	w1, #0x16                  	// #22
  423720:	mov	x8, xzr
  423724:	mov	x3, x8
  423728:	mov	w4, #0xffffffff            	// #-1
  42372c:	sub	x5, x29, #0x56
  423730:	bl	407928 <bus_test_polkit@plt>
  423734:	str	w0, [sp, #88]
  423738:	ldr	w9, [sp, #88]
  42373c:	cmp	w9, #0x0
  423740:	cset	w9, ge  // ge = tcont
  423744:	tbnz	w9, #0, 42375c <method_can_shutdown_or_sleep+0x6ac>
  423748:	ldr	w8, [sp, #88]
  42374c:	stur	w8, [x29, #-4]
  423750:	mov	w8, #0x1                   	// #1
  423754:	str	w8, [sp, #80]
  423758:	b	4237b8 <method_can_shutdown_or_sleep+0x708>
  42375c:	ldr	w8, [sp, #88]
  423760:	cmp	w8, #0x0
  423764:	cset	w8, le
  423768:	tbnz	w8, #0, 423778 <method_can_shutdown_or_sleep+0x6c8>
  42376c:	ldr	x8, [sp, #40]
  423770:	str	x8, [sp, #96]
  423774:	b	423798 <method_can_shutdown_or_sleep+0x6e8>
  423778:	ldurb	w8, [x29, #-86]
  42377c:	tbnz	w8, #0, 423784 <method_can_shutdown_or_sleep+0x6d4>
  423780:	b	423790 <method_can_shutdown_or_sleep+0x6e0>
  423784:	ldr	x8, [sp, #48]
  423788:	str	x8, [sp, #96]
  42378c:	b	423798 <method_can_shutdown_or_sleep+0x6e8>
  423790:	ldr	x8, [sp, #56]
  423794:	str	x8, [sp, #96]
  423798:	ldur	x0, [x29, #-24]
  42379c:	ldr	x2, [sp, #96]
  4237a0:	adrp	x1, 442000 <_fini+0x1c30>
  4237a4:	add	x1, x1, #0xf2
  4237a8:	bl	4075b8 <sd_bus_reply_method_return@plt>
  4237ac:	stur	w0, [x29, #-4]
  4237b0:	mov	w8, #0x1                   	// #1
  4237b4:	str	w8, [sp, #80]
  4237b8:	sub	x0, x29, #0x50
  4237bc:	bl	421604 <sd_bus_creds_unrefp>
  4237c0:	ldur	w0, [x29, #-4]
  4237c4:	ldp	x29, x30, [sp, #192]
  4237c8:	add	sp, sp, #0xd0
  4237cc:	ret

00000000004237d0 <manager_scheduled_shutdown_handler>:
  4237d0:	sub	sp, sp, #0xb0
  4237d4:	stp	x29, x30, [sp, #160]
  4237d8:	add	x29, sp, #0xa0
  4237dc:	adrp	x8, 442000 <_fini+0x1c30>
  4237e0:	add	x8, x8, #0xd8e
  4237e4:	add	x8, x8, #0x3
  4237e8:	adrp	x9, 446000 <_fini+0x5c30>
  4237ec:	add	x9, x9, #0x389
  4237f0:	stur	x0, [x29, #-16]
  4237f4:	stur	x1, [x29, #-24]
  4237f8:	stur	x2, [x29, #-32]
  4237fc:	stur	xzr, [x29, #-56]
  423800:	stur	xzr, [x29, #-48]
  423804:	stur	xzr, [x29, #-40]
  423808:	ldur	x10, [x29, #-32]
  42380c:	stur	x10, [x29, #-64]
  423810:	str	x8, [sp, #24]
  423814:	str	x9, [sp, #16]
  423818:	ldur	x8, [x29, #-64]
  42381c:	cmp	x8, #0x0
  423820:	cset	w9, ne  // ne = any
  423824:	mov	w10, #0x1                   	// #1
  423828:	eor	w9, w9, #0x1
  42382c:	eor	w9, w9, w10
  423830:	eor	w9, w9, w10
  423834:	and	w9, w9, #0x1
  423838:	mov	w0, w9
  42383c:	sxtw	x8, w0
  423840:	cbz	x8, 423868 <manager_scheduled_shutdown_handler+0x98>
  423844:	mov	w8, wzr
  423848:	mov	w0, w8
  42384c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  423850:	add	x1, x1, #0x5ef
  423854:	ldr	x2, [sp, #24]
  423858:	mov	w3, #0x82b                 	// #2091
  42385c:	adrp	x4, 446000 <_fini+0x5c30>
  423860:	add	x4, x4, #0x324
  423864:	bl	406c68 <log_assert_failed_realm@plt>
  423868:	ldur	x8, [x29, #-64]
  42386c:	ldr	x0, [x8, #280]
  423870:	bl	42099c <isempty>
  423874:	tbnz	w0, #0, 42387c <manager_scheduled_shutdown_handler+0xac>
  423878:	b	42388c <manager_scheduled_shutdown_handler+0xbc>
  42387c:	stur	wzr, [x29, #-4]
  423880:	mov	w8, #0x1                   	// #1
  423884:	str	w8, [sp, #80]
  423888:	b	423b3c <manager_scheduled_shutdown_handler+0x36c>
  42388c:	ldur	x8, [x29, #-64]
  423890:	ldr	x0, [x8, #280]
  423894:	adrp	x1, 441000 <_fini+0xc30>
  423898:	add	x1, x1, #0xda0
  42389c:	bl	407158 <strcmp@plt>
  4238a0:	cbnz	w0, 4238b4 <manager_scheduled_shutdown_handler+0xe4>
  4238a4:	adrp	x8, 441000 <_fini+0xc30>
  4238a8:	add	x8, x8, #0x879
  4238ac:	stur	x8, [x29, #-72]
  4238b0:	b	423928 <manager_scheduled_shutdown_handler+0x158>
  4238b4:	ldur	x8, [x29, #-64]
  4238b8:	ldr	x0, [x8, #280]
  4238bc:	adrp	x1, 441000 <_fini+0xc30>
  4238c0:	add	x1, x1, #0xda9
  4238c4:	bl	407158 <strcmp@plt>
  4238c8:	cbnz	w0, 4238dc <manager_scheduled_shutdown_handler+0x10c>
  4238cc:	adrp	x8, 441000 <_fini+0xc30>
  4238d0:	add	x8, x8, #0x889
  4238d4:	stur	x8, [x29, #-72]
  4238d8:	b	423928 <manager_scheduled_shutdown_handler+0x158>
  4238dc:	ldur	x8, [x29, #-64]
  4238e0:	ldr	x0, [x8, #280]
  4238e4:	adrp	x1, 441000 <_fini+0xc30>
  4238e8:	add	x1, x1, #0xdb0
  4238ec:	bl	407158 <strcmp@plt>
  4238f0:	cbnz	w0, 423904 <manager_scheduled_shutdown_handler+0x134>
  4238f4:	adrp	x8, 441000 <_fini+0xc30>
  4238f8:	add	x8, x8, #0x897
  4238fc:	stur	x8, [x29, #-72]
  423900:	b	423928 <manager_scheduled_shutdown_handler+0x158>
  423904:	mov	w8, wzr
  423908:	mov	w0, w8
  42390c:	adrp	x1, 446000 <_fini+0x5c30>
  423910:	add	x1, x1, #0x370
  423914:	ldr	x2, [sp, #24]
  423918:	mov	w3, #0x837                 	// #2103
  42391c:	adrp	x4, 446000 <_fini+0x5c30>
  423920:	add	x4, x4, #0x324
  423924:	bl	407938 <log_assert_failed_unreachable_realm@plt>
  423928:	ldur	x8, [x29, #-64]
  42392c:	ldr	w9, [x8, #248]
  423930:	cmp	w9, #0x0
  423934:	cset	w9, le
  423938:	tbnz	w9, #0, 4239c0 <manager_scheduled_shutdown_handler+0x1f0>
  42393c:	mov	w8, #0xffffff8e            	// #-114
  423940:	stur	w8, [x29, #-76]
  423944:	mov	w8, #0x3                   	// #3
  423948:	str	w8, [sp, #76]
  42394c:	str	wzr, [sp, #72]
  423950:	str	wzr, [sp, #68]
  423954:	ldr	w0, [sp, #68]
  423958:	bl	406c08 <log_get_max_level_realm@plt>
  42395c:	ldr	w8, [sp, #76]
  423960:	and	w8, w8, #0x7
  423964:	cmp	w0, w8
  423968:	b.lt	4239a0 <manager_scheduled_shutdown_handler+0x1d0>  // b.tstop
  42396c:	ldr	w8, [sp, #68]
  423970:	ldr	w9, [sp, #76]
  423974:	orr	w0, w9, w8, lsl #10
  423978:	ldr	w1, [sp, #72]
  42397c:	ldur	x6, [x29, #-72]
  423980:	ldr	x2, [sp, #24]
  423984:	mov	w3, #0x83c                 	// #2108
  423988:	ldr	x4, [sp, #16]
  42398c:	adrp	x5, 446000 <_fini+0x5c30>
  423990:	add	x5, x5, #0x3ac
  423994:	bl	406c18 <log_internal_realm@plt>
  423998:	str	w0, [sp, #12]
  42399c:	b	4239b4 <manager_scheduled_shutdown_handler+0x1e4>
  4239a0:	ldr	w0, [sp, #72]
  4239a4:	bl	406c28 <abs@plt>
  4239a8:	mov	w8, wzr
  4239ac:	subs	w8, w8, w0, uxtb
  4239b0:	str	w8, [sp, #12]
  4239b4:	ldr	w8, [sp, #12]
  4239b8:	str	w8, [sp, #64]
  4239bc:	b	423b24 <manager_scheduled_shutdown_handler+0x354>
  4239c0:	ldur	x8, [x29, #-64]
  4239c4:	ldrb	w9, [x8, #360]
  4239c8:	tbnz	w9, #0, 4239d0 <manager_scheduled_shutdown_handler+0x200>
  4239cc:	b	423a6c <manager_scheduled_shutdown_handler+0x29c>
  4239d0:	ldur	x0, [x29, #-64]
  4239d4:	ldur	x1, [x29, #-72]
  4239d8:	bl	421638 <bus_manager_log_shutdown>
  4239dc:	mov	w8, #0x6                   	// #6
  4239e0:	str	w8, [sp, #60]
  4239e4:	str	wzr, [sp, #56]
  4239e8:	str	wzr, [sp, #52]
  4239ec:	ldr	w8, [sp, #52]
  4239f0:	mov	w0, w8
  4239f4:	bl	406c08 <log_get_max_level_realm@plt>
  4239f8:	ldr	w8, [sp, #60]
  4239fc:	and	w8, w8, #0x7
  423a00:	cmp	w0, w8
  423a04:	b.lt	423a38 <manager_scheduled_shutdown_handler+0x268>  // b.tstop
  423a08:	ldr	w8, [sp, #52]
  423a0c:	ldr	w9, [sp, #60]
  423a10:	orr	w0, w9, w8, lsl #10
  423a14:	ldr	w1, [sp, #56]
  423a18:	ldr	x2, [sp, #24]
  423a1c:	mov	w3, #0x847                 	// #2119
  423a20:	ldr	x4, [sp, #16]
  423a24:	adrp	x5, 446000 <_fini+0x5c30>
  423a28:	add	x5, x5, #0x3fd
  423a2c:	bl	406c18 <log_internal_realm@plt>
  423a30:	str	w0, [sp, #8]
  423a34:	b	423a4c <manager_scheduled_shutdown_handler+0x27c>
  423a38:	ldr	w0, [sp, #56]
  423a3c:	bl	406c28 <abs@plt>
  423a40:	mov	w8, wzr
  423a44:	subs	w8, w8, w0, uxtb
  423a48:	str	w8, [sp, #8]
  423a4c:	ldr	w8, [sp, #8]
  423a50:	str	w8, [sp, #48]
  423a54:	ldur	x0, [x29, #-64]
  423a58:	bl	424008 <reset_scheduled_shutdown>
  423a5c:	stur	wzr, [x29, #-4]
  423a60:	mov	w8, #0x1                   	// #1
  423a64:	str	w8, [sp, #80]
  423a68:	b	423b3c <manager_scheduled_shutdown_handler+0x36c>
  423a6c:	ldur	x0, [x29, #-64]
  423a70:	ldur	x1, [x29, #-72]
  423a74:	mov	w2, #0x1                   	// #1
  423a78:	sub	x3, x29, #0x38
  423a7c:	bl	415624 <bus_manager_shutdown_or_sleep_now_or_later>
  423a80:	stur	w0, [x29, #-76]
  423a84:	ldur	w8, [x29, #-76]
  423a88:	cmp	w8, #0x0
  423a8c:	cset	w8, ge  // ge = tcont
  423a90:	tbnz	w8, #0, 423b14 <manager_scheduled_shutdown_handler+0x344>
  423a94:	mov	w8, #0x3                   	// #3
  423a98:	str	w8, [sp, #44]
  423a9c:	ldur	w8, [x29, #-76]
  423aa0:	str	w8, [sp, #40]
  423aa4:	str	wzr, [sp, #36]
  423aa8:	ldr	w0, [sp, #36]
  423aac:	bl	406c08 <log_get_max_level_realm@plt>
  423ab0:	ldr	w8, [sp, #44]
  423ab4:	and	w8, w8, #0x7
  423ab8:	cmp	w0, w8
  423abc:	b.lt	423af4 <manager_scheduled_shutdown_handler+0x324>  // b.tstop
  423ac0:	ldr	w8, [sp, #36]
  423ac4:	ldr	w9, [sp, #44]
  423ac8:	orr	w0, w9, w8, lsl #10
  423acc:	ldr	w1, [sp, #40]
  423ad0:	ldur	x6, [x29, #-72]
  423ad4:	ldr	x2, [sp, #24]
  423ad8:	mov	w3, #0x84f                 	// #2127
  423adc:	ldr	x4, [sp, #16]
  423ae0:	adrp	x5, 446000 <_fini+0x5c30>
  423ae4:	add	x5, x5, #0x425
  423ae8:	bl	406c18 <log_internal_realm@plt>
  423aec:	str	w0, [sp, #4]
  423af0:	b	423b08 <manager_scheduled_shutdown_handler+0x338>
  423af4:	ldr	w0, [sp, #40]
  423af8:	bl	406c28 <abs@plt>
  423afc:	mov	w8, wzr
  423b00:	subs	w8, w8, w0, uxtb
  423b04:	str	w8, [sp, #4]
  423b08:	ldr	w8, [sp, #4]
  423b0c:	str	w8, [sp, #32]
  423b10:	b	423b24 <manager_scheduled_shutdown_handler+0x354>
  423b14:	stur	wzr, [x29, #-4]
  423b18:	mov	w8, #0x1                   	// #1
  423b1c:	str	w8, [sp, #80]
  423b20:	b	423b3c <manager_scheduled_shutdown_handler+0x36c>
  423b24:	ldur	x0, [x29, #-64]
  423b28:	bl	424008 <reset_scheduled_shutdown>
  423b2c:	ldur	w8, [x29, #-76]
  423b30:	stur	w8, [x29, #-4]
  423b34:	mov	w8, #0x1                   	// #1
  423b38:	str	w8, [sp, #80]
  423b3c:	sub	x0, x29, #0x38
  423b40:	bl	4071e8 <sd_bus_error_free@plt>
  423b44:	ldur	w0, [x29, #-4]
  423b48:	ldp	x29, x30, [sp, #160]
  423b4c:	add	sp, sp, #0xb0
  423b50:	ret

0000000000423b54 <nologin_timeout_handler>:
  423b54:	sub	sp, sp, #0x50
  423b58:	stp	x29, x30, [sp, #64]
  423b5c:	add	x29, sp, #0x40
  423b60:	mov	w8, #0x6                   	// #6
  423b64:	adrp	x9, 442000 <_fini+0x1c30>
  423b68:	add	x9, x9, #0xd8e
  423b6c:	add	x9, x9, #0x3
  423b70:	stur	x0, [x29, #-8]
  423b74:	stur	x1, [x29, #-16]
  423b78:	stur	x2, [x29, #-24]
  423b7c:	ldur	x10, [x29, #-24]
  423b80:	str	x10, [sp, #32]
  423b84:	str	w8, [sp, #28]
  423b88:	str	wzr, [sp, #24]
  423b8c:	str	wzr, [sp, #20]
  423b90:	ldr	w0, [sp, #20]
  423b94:	str	x9, [sp, #8]
  423b98:	bl	406c08 <log_get_max_level_realm@plt>
  423b9c:	ldr	w8, [sp, #28]
  423ba0:	and	w8, w8, #0x7
  423ba4:	cmp	w0, w8
  423ba8:	b.lt	423be0 <nologin_timeout_handler+0x8c>  // b.tstop
  423bac:	ldr	w8, [sp, #20]
  423bb0:	ldr	w9, [sp, #28]
  423bb4:	orr	w0, w9, w8, lsl #10
  423bb8:	ldr	w1, [sp, #24]
  423bbc:	ldr	x2, [sp, #8]
  423bc0:	mov	w3, #0x7cf                 	// #1999
  423bc4:	adrp	x4, 446000 <_fini+0x5c30>
  423bc8:	add	x4, x4, #0x492
  423bcc:	adrp	x5, 446000 <_fini+0x5c30>
  423bd0:	add	x5, x5, #0x4aa
  423bd4:	bl	406c18 <log_internal_realm@plt>
  423bd8:	str	w0, [sp, #4]
  423bdc:	b	423bf4 <nologin_timeout_handler+0xa0>
  423be0:	ldr	w0, [sp, #24]
  423be4:	bl	406c28 <abs@plt>
  423be8:	mov	w8, wzr
  423bec:	subs	w8, w8, w0, uxtb
  423bf0:	str	w8, [sp, #4]
  423bf4:	ldr	w8, [sp, #4]
  423bf8:	str	w8, [sp, #16]
  423bfc:	bl	407948 <create_shutdown_run_nologin_or_warn@plt>
  423c00:	mov	w8, wzr
  423c04:	cmp	w0, #0x0
  423c08:	cset	w9, ge  // ge = tcont
  423c0c:	ldr	x10, [sp, #32]
  423c10:	and	w9, w9, #0x1
  423c14:	strb	w9, [x10, #328]
  423c18:	mov	w0, w8
  423c1c:	ldp	x29, x30, [sp, #64]
  423c20:	add	sp, sp, #0x50
  423c24:	ret

0000000000423c28 <update_schedule_file>:
  423c28:	sub	sp, sp, #0xa0
  423c2c:	stp	x29, x30, [sp, #144]
  423c30:	add	x29, sp, #0x90
  423c34:	mov	x8, xzr
  423c38:	adrp	x9, 446000 <_fini+0x5c30>
  423c3c:	add	x9, x9, #0x472
  423c40:	adrp	x10, 442000 <_fini+0x1c30>
  423c44:	add	x10, x10, #0xd8e
  423c48:	add	x10, x10, #0x3
  423c4c:	adrp	x11, 446000 <_fini+0x5c30>
  423c50:	add	x11, x11, #0x516
  423c54:	stur	x0, [x29, #-16]
  423c58:	stur	x8, [x29, #-24]
  423c5c:	stur	x8, [x29, #-32]
  423c60:	str	x9, [sp, #40]
  423c64:	str	x10, [sp, #32]
  423c68:	str	x11, [sp, #24]
  423c6c:	ldur	x8, [x29, #-16]
  423c70:	cmp	x8, #0x0
  423c74:	cset	w9, ne  // ne = any
  423c78:	mov	w10, #0x1                   	// #1
  423c7c:	eor	w9, w9, #0x1
  423c80:	eor	w9, w9, w10
  423c84:	eor	w9, w9, w10
  423c88:	and	w9, w9, #0x1
  423c8c:	mov	w0, w9
  423c90:	sxtw	x8, w0
  423c94:	cbz	x8, 423cbc <update_schedule_file+0x94>
  423c98:	mov	w8, wzr
  423c9c:	mov	w0, w8
  423ca0:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  423ca4:	add	x1, x1, #0x5ef
  423ca8:	ldr	x2, [sp, #32]
  423cac:	mov	w3, #0x7dc                 	// #2012
  423cb0:	adrp	x4, 446000 <_fini+0x5c30>
  423cb4:	add	x4, x4, #0x4dc
  423cb8:	bl	406c68 <log_assert_failed_realm@plt>
  423cbc:	adrp	x0, 446000 <_fini+0x5c30>
  423cc0:	add	x0, x0, #0x500
  423cc4:	mov	w1, #0x1ed                 	// #493
  423cc8:	mov	w8, wzr
  423ccc:	mov	w2, w8
  423cd0:	mov	w3, w8
  423cd4:	mov	w4, #0x2                   	// #2
  423cd8:	bl	4076b8 <mkdir_safe_label@plt>
  423cdc:	stur	w0, [x29, #-36]
  423ce0:	ldur	w8, [x29, #-36]
  423ce4:	cmp	w8, #0x0
  423ce8:	cset	w8, ge  // ge = tcont
  423cec:	tbnz	w8, #0, 423d7c <update_schedule_file+0x154>
  423cf0:	mov	w8, #0x3                   	// #3
  423cf4:	stur	w8, [x29, #-40]
  423cf8:	ldur	w8, [x29, #-36]
  423cfc:	stur	w8, [x29, #-44]
  423d00:	stur	wzr, [x29, #-48]
  423d04:	ldur	w0, [x29, #-48]
  423d08:	bl	406c08 <log_get_max_level_realm@plt>
  423d0c:	ldur	w8, [x29, #-40]
  423d10:	and	w8, w8, #0x7
  423d14:	cmp	w0, w8
  423d18:	b.lt	423d4c <update_schedule_file+0x124>  // b.tstop
  423d1c:	ldur	w8, [x29, #-48]
  423d20:	ldur	w9, [x29, #-40]
  423d24:	orr	w0, w9, w8, lsl #10
  423d28:	ldur	w1, [x29, #-44]
  423d2c:	ldr	x2, [sp, #32]
  423d30:	mov	w3, #0x7e0                 	// #2016
  423d34:	ldr	x4, [sp, #24]
  423d38:	adrp	x5, 446000 <_fini+0x5c30>
  423d3c:	add	x5, x5, #0x52b
  423d40:	bl	406c18 <log_internal_realm@plt>
  423d44:	str	w0, [sp, #20]
  423d48:	b	423d60 <update_schedule_file+0x138>
  423d4c:	ldur	w0, [x29, #-44]
  423d50:	bl	406c28 <abs@plt>
  423d54:	mov	w8, wzr
  423d58:	subs	w8, w8, w0, uxtb
  423d5c:	str	w8, [sp, #20]
  423d60:	ldr	w8, [sp, #20]
  423d64:	stur	w8, [x29, #-52]
  423d68:	ldur	w8, [x29, #-52]
  423d6c:	stur	w8, [x29, #-4]
  423d70:	mov	w8, #0x1                   	// #1
  423d74:	stur	w8, [x29, #-56]
  423d78:	b	423fe8 <update_schedule_file+0x3c0>
  423d7c:	ldr	x0, [sp, #40]
  423d80:	sub	x1, x29, #0x20
  423d84:	sub	x2, x29, #0x18
  423d88:	bl	407958 <fopen_temporary@plt>
  423d8c:	stur	w0, [x29, #-36]
  423d90:	ldur	w8, [x29, #-36]
  423d94:	cmp	w8, #0x0
  423d98:	cset	w8, ge  // ge = tcont
  423d9c:	tbnz	w8, #0, 423e2c <update_schedule_file+0x204>
  423da0:	mov	w8, #0x3                   	// #3
  423da4:	stur	w8, [x29, #-60]
  423da8:	ldur	w8, [x29, #-36]
  423dac:	stur	w8, [x29, #-64]
  423db0:	stur	wzr, [x29, #-68]
  423db4:	ldur	w0, [x29, #-68]
  423db8:	bl	406c08 <log_get_max_level_realm@plt>
  423dbc:	ldur	w8, [x29, #-60]
  423dc0:	and	w8, w8, #0x7
  423dc4:	cmp	w0, w8
  423dc8:	b.lt	423dfc <update_schedule_file+0x1d4>  // b.tstop
  423dcc:	ldur	w8, [x29, #-68]
  423dd0:	ldur	w9, [x29, #-60]
  423dd4:	orr	w0, w9, w8, lsl #10
  423dd8:	ldur	w1, [x29, #-64]
  423ddc:	ldr	x2, [sp, #32]
  423de0:	mov	w3, #0x7e4                 	// #2020
  423de4:	ldr	x4, [sp, #24]
  423de8:	adrp	x5, 446000 <_fini+0x5c30>
  423dec:	add	x5, x5, #0x556
  423df0:	bl	406c18 <log_internal_realm@plt>
  423df4:	str	w0, [sp, #16]
  423df8:	b	423e10 <update_schedule_file+0x1e8>
  423dfc:	ldur	w0, [x29, #-64]
  423e00:	bl	406c28 <abs@plt>
  423e04:	mov	w8, wzr
  423e08:	subs	w8, w8, w0, uxtb
  423e0c:	str	w8, [sp, #16]
  423e10:	ldr	w8, [sp, #16]
  423e14:	str	w8, [sp, #72]
  423e18:	ldr	w8, [sp, #72]
  423e1c:	stur	w8, [x29, #-4]
  423e20:	mov	w8, #0x1                   	// #1
  423e24:	stur	w8, [x29, #-56]
  423e28:	b	423fe8 <update_schedule_file+0x3c0>
  423e2c:	ldur	x0, [x29, #-32]
  423e30:	bl	407968 <fileno@plt>
  423e34:	mov	w1, #0x1a4                 	// #420
  423e38:	bl	407978 <fchmod@plt>
  423e3c:	ldur	x8, [x29, #-32]
  423e40:	ldur	x9, [x29, #-16]
  423e44:	ldr	x2, [x9, #288]
  423e48:	ldur	x9, [x29, #-16]
  423e4c:	ldr	w3, [x9, #344]
  423e50:	ldur	x9, [x29, #-16]
  423e54:	ldr	x4, [x9, #280]
  423e58:	mov	x0, x8
  423e5c:	adrp	x1, 446000 <_fini+0x5c30>
  423e60:	add	x1, x1, #0x58f
  423e64:	bl	407988 <fprintf@plt>
  423e68:	ldur	x8, [x29, #-16]
  423e6c:	ldr	x8, [x8, #336]
  423e70:	mov	x0, x8
  423e74:	bl	42099c <isempty>
  423e78:	tbnz	w0, #0, 423ee8 <update_schedule_file+0x2c0>
  423e7c:	ldur	x8, [x29, #-16]
  423e80:	ldr	x0, [x8, #336]
  423e84:	bl	4076c8 <cescape@plt>
  423e88:	str	x0, [sp, #64]
  423e8c:	ldr	x8, [sp, #64]
  423e90:	cbnz	x8, 423ea8 <update_schedule_file+0x280>
  423e94:	mov	w8, #0xfffffff4            	// #-12
  423e98:	stur	w8, [x29, #-36]
  423e9c:	mov	w8, #0x4                   	// #4
  423ea0:	stur	w8, [x29, #-56]
  423ea4:	b	423ec0 <update_schedule_file+0x298>
  423ea8:	ldur	x0, [x29, #-32]
  423eac:	ldr	x2, [sp, #64]
  423eb0:	adrp	x1, 446000 <_fini+0x5c30>
  423eb4:	add	x1, x1, #0x5ae
  423eb8:	bl	407988 <fprintf@plt>
  423ebc:	stur	wzr, [x29, #-56]
  423ec0:	add	x0, sp, #0x40
  423ec4:	bl	4152e4 <freep>
  423ec8:	ldur	w8, [x29, #-56]
  423ecc:	str	w8, [sp, #12]
  423ed0:	cbz	w8, 423ee8 <update_schedule_file+0x2c0>
  423ed4:	b	423ed8 <update_schedule_file+0x2b0>
  423ed8:	ldr	w8, [sp, #12]
  423edc:	cmp	w8, #0x4
  423ee0:	b.eq	423f48 <update_schedule_file+0x320>  // b.none
  423ee4:	b	423fe8 <update_schedule_file+0x3c0>
  423ee8:	ldur	x0, [x29, #-32]
  423eec:	bl	407998 <fflush_and_check@plt>
  423ef0:	stur	w0, [x29, #-36]
  423ef4:	ldur	w8, [x29, #-36]
  423ef8:	cmp	w8, #0x0
  423efc:	cset	w8, ge  // ge = tcont
  423f00:	tbnz	w8, #0, 423f08 <update_schedule_file+0x2e0>
  423f04:	b	423f48 <update_schedule_file+0x320>
  423f08:	ldur	x0, [x29, #-24]
  423f0c:	ldr	x1, [sp, #40]
  423f10:	bl	4079a8 <rename@plt>
  423f14:	cmp	w0, #0x0
  423f18:	cset	w8, ge  // ge = tcont
  423f1c:	tbnz	w8, #0, 423f38 <update_schedule_file+0x310>
  423f20:	bl	406e08 <__errno_location@plt>
  423f24:	ldr	w8, [x0]
  423f28:	mov	w9, wzr
  423f2c:	subs	w8, w9, w8
  423f30:	stur	w8, [x29, #-36]
  423f34:	b	423f48 <update_schedule_file+0x320>
  423f38:	stur	wzr, [x29, #-4]
  423f3c:	mov	w8, #0x1                   	// #1
  423f40:	stur	w8, [x29, #-56]
  423f44:	b	423fe8 <update_schedule_file+0x3c0>
  423f48:	ldur	x0, [x29, #-24]
  423f4c:	bl	4076e8 <unlink@plt>
  423f50:	ldr	x8, [sp, #40]
  423f54:	mov	x0, x8
  423f58:	bl	4076e8 <unlink@plt>
  423f5c:	mov	w9, #0x3                   	// #3
  423f60:	str	w9, [sp, #60]
  423f64:	ldur	w9, [x29, #-36]
  423f68:	str	w9, [sp, #56]
  423f6c:	str	wzr, [sp, #52]
  423f70:	ldr	w9, [sp, #52]
  423f74:	mov	w0, w9
  423f78:	bl	406c08 <log_get_max_level_realm@plt>
  423f7c:	ldr	w9, [sp, #60]
  423f80:	and	w9, w9, #0x7
  423f84:	cmp	w0, w9
  423f88:	b.lt	423fbc <update_schedule_file+0x394>  // b.tstop
  423f8c:	ldr	w8, [sp, #52]
  423f90:	ldr	w9, [sp, #60]
  423f94:	orr	w0, w9, w8, lsl #10
  423f98:	ldr	w1, [sp, #56]
  423f9c:	ldr	x2, [sp, #32]
  423fa0:	mov	w3, #0x80b                 	// #2059
  423fa4:	ldr	x4, [sp, #24]
  423fa8:	adrp	x5, 446000 <_fini+0x5c30>
  423fac:	add	x5, x5, #0x5bf
  423fb0:	bl	406c18 <log_internal_realm@plt>
  423fb4:	str	w0, [sp, #8]
  423fb8:	b	423fd0 <update_schedule_file+0x3a8>
  423fbc:	ldr	w0, [sp, #56]
  423fc0:	bl	406c28 <abs@plt>
  423fc4:	mov	w8, wzr
  423fc8:	subs	w8, w8, w0, uxtb
  423fcc:	str	w8, [sp, #8]
  423fd0:	ldr	w8, [sp, #8]
  423fd4:	str	w8, [sp, #48]
  423fd8:	ldr	w8, [sp, #48]
  423fdc:	stur	w8, [x29, #-4]
  423fe0:	mov	w8, #0x1                   	// #1
  423fe4:	stur	w8, [x29, #-56]
  423fe8:	sub	x0, x29, #0x20
  423fec:	bl	42411c <fclosep>
  423ff0:	sub	x0, x29, #0x18
  423ff4:	bl	4152e4 <freep>
  423ff8:	ldur	w0, [x29, #-4]
  423ffc:	ldp	x29, x30, [sp, #144]
  424000:	add	sp, sp, #0xa0
  424004:	ret

0000000000424008 <reset_scheduled_shutdown>:
  424008:	sub	sp, sp, #0x20
  42400c:	stp	x29, x30, [sp, #16]
  424010:	add	x29, sp, #0x10
  424014:	adrp	x8, 442000 <_fini+0x1c30>
  424018:	add	x8, x8, #0xd8e
  42401c:	add	x2, x8, #0x3
  424020:	str	x0, [sp, #8]
  424024:	str	x2, [sp]
  424028:	ldr	x8, [sp, #8]
  42402c:	cmp	x8, #0x0
  424030:	cset	w9, ne  // ne = any
  424034:	mov	w10, #0x1                   	// #1
  424038:	eor	w9, w9, #0x1
  42403c:	eor	w9, w9, w10
  424040:	eor	w9, w9, w10
  424044:	and	w9, w9, #0x1
  424048:	mov	w0, w9
  42404c:	sxtw	x8, w0
  424050:	cbz	x8, 424078 <reset_scheduled_shutdown+0x70>
  424054:	mov	w8, wzr
  424058:	mov	w0, w8
  42405c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  424060:	add	x1, x1, #0x5ef
  424064:	ldr	x2, [sp]
  424068:	mov	w3, #0x80f                 	// #2063
  42406c:	adrp	x4, 446000 <_fini+0x5c30>
  424070:	add	x4, x4, #0x449
  424074:	bl	406c68 <log_assert_failed_realm@plt>
  424078:	ldr	x8, [sp, #8]
  42407c:	ldr	x0, [x8, #296]
  424080:	bl	406d28 <sd_event_source_unref@plt>
  424084:	ldr	x8, [sp, #8]
  424088:	str	x0, [x8, #296]
  42408c:	ldr	x8, [sp, #8]
  424090:	ldr	x0, [x8, #352]
  424094:	bl	406d28 <sd_event_source_unref@plt>
  424098:	ldr	x8, [sp, #8]
  42409c:	str	x0, [x8, #352]
  4240a0:	ldr	x8, [sp, #8]
  4240a4:	ldr	x0, [x8, #320]
  4240a8:	bl	406d28 <sd_event_source_unref@plt>
  4240ac:	ldr	x8, [sp, #8]
  4240b0:	str	x0, [x8, #320]
  4240b4:	ldr	x8, [sp, #8]
  4240b8:	ldr	x0, [x8, #280]
  4240bc:	bl	41f5f4 <mfree>
  4240c0:	ldr	x8, [sp, #8]
  4240c4:	str	x0, [x8, #280]
  4240c8:	ldr	x8, [sp, #8]
  4240cc:	str	xzr, [x8, #288]
  4240d0:	ldr	x8, [sp, #8]
  4240d4:	mov	w9, #0x0                   	// #0
  4240d8:	strb	w9, [x8, #360]
  4240dc:	ldr	x8, [sp, #8]
  4240e0:	ldrb	w9, [x8, #328]
  4240e4:	tbnz	w9, #0, 4240ec <reset_scheduled_shutdown+0xe4>
  4240e8:	b	424104 <reset_scheduled_shutdown+0xfc>
  4240ec:	adrp	x0, 440000 <on_brightness_writer_exit+0x15c>
  4240f0:	add	x0, x0, #0x5c2
  4240f4:	bl	406d58 <unlink_or_warn@plt>
  4240f8:	ldr	x8, [sp, #8]
  4240fc:	mov	w9, #0x0                   	// #0
  424100:	strb	w9, [x8, #328]
  424104:	adrp	x0, 446000 <_fini+0x5c30>
  424108:	add	x0, x0, #0x472
  42410c:	bl	4076e8 <unlink@plt>
  424110:	ldp	x29, x30, [sp, #16]
  424114:	add	sp, sp, #0x20
  424118:	ret

000000000042411c <fclosep>:
  42411c:	sub	sp, sp, #0x20
  424120:	stp	x29, x30, [sp, #16]
  424124:	add	x29, sp, #0x10
  424128:	str	x0, [sp, #8]
  42412c:	ldr	x8, [sp, #8]
  424130:	ldr	x0, [x8]
  424134:	bl	4079b8 <safe_fclose@plt>
  424138:	ldp	x29, x30, [sp, #16]
  42413c:	add	sp, sp, #0x20
  424140:	ret

0000000000424144 <closep>:
  424144:	sub	sp, sp, #0x20
  424148:	stp	x29, x30, [sp, #16]
  42414c:	add	x29, sp, #0x10
  424150:	str	x0, [sp, #8]
  424154:	ldr	x8, [sp, #8]
  424158:	ldr	w0, [x8]
  42415c:	bl	406d38 <safe_close@plt>
  424160:	ldp	x29, x30, [sp, #16]
  424164:	add	sp, sp, #0x20
  424168:	ret

000000000042416c <return_test_polkit>:
  42416c:	sub	sp, sp, #0x60
  424170:	stp	x29, x30, [sp, #80]
  424174:	add	x29, sp, #0x50
  424178:	add	x8, sp, #0xf
  42417c:	stur	x0, [x29, #-16]
  424180:	stur	w1, [x29, #-20]
  424184:	stur	x2, [x29, #-32]
  424188:	str	x3, [sp, #40]
  42418c:	str	w4, [sp, #36]
  424190:	str	x5, [sp, #24]
  424194:	ldur	x0, [x29, #-16]
  424198:	ldur	w1, [x29, #-20]
  42419c:	ldur	x2, [x29, #-32]
  4241a0:	ldr	x3, [sp, #40]
  4241a4:	ldr	w4, [sp, #36]
  4241a8:	ldr	x6, [sp, #24]
  4241ac:	mov	x5, x8
  4241b0:	bl	407928 <bus_test_polkit@plt>
  4241b4:	str	w0, [sp, #8]
  4241b8:	ldr	w9, [sp, #8]
  4241bc:	cmp	w9, #0x0
  4241c0:	cset	w9, ge  // ge = tcont
  4241c4:	tbnz	w9, #0, 4241d4 <return_test_polkit+0x68>
  4241c8:	ldr	w8, [sp, #8]
  4241cc:	stur	w8, [x29, #-4]
  4241d0:	b	424234 <return_test_polkit+0xc8>
  4241d4:	ldr	w8, [sp, #8]
  4241d8:	cmp	w8, #0x0
  4241dc:	cset	w8, le
  4241e0:	tbnz	w8, #0, 4241f4 <return_test_polkit+0x88>
  4241e4:	adrp	x8, 446000 <_fini+0x5c30>
  4241e8:	add	x8, x8, #0x278
  4241ec:	str	x8, [sp, #16]
  4241f0:	b	42421c <return_test_polkit+0xb0>
  4241f4:	ldrb	w8, [sp, #15]
  4241f8:	tbnz	w8, #0, 424200 <return_test_polkit+0x94>
  4241fc:	b	424210 <return_test_polkit+0xa4>
  424200:	adrp	x8, 446000 <_fini+0x5c30>
  424204:	add	x8, x8, #0x27c
  424208:	str	x8, [sp, #16]
  42420c:	b	42421c <return_test_polkit+0xb0>
  424210:	adrp	x8, 446000 <_fini+0x5c30>
  424214:	add	x8, x8, #0x275
  424218:	str	x8, [sp, #16]
  42421c:	ldur	x0, [x29, #-16]
  424220:	ldr	x2, [sp, #16]
  424224:	adrp	x1, 442000 <_fini+0x1c30>
  424228:	add	x1, x1, #0xf2
  42422c:	bl	4075b8 <sd_bus_reply_method_return@plt>
  424230:	stur	w0, [x29, #-4]
  424234:	ldur	w0, [x29, #-4]
  424238:	ldp	x29, x30, [sp, #80]
  42423c:	add	sp, sp, #0x60
  424240:	ret

0000000000424244 <boot_loader_entry_exists>:
  424244:	sub	sp, sp, #0x90
  424248:	stp	x29, x30, [sp, #128]
  42424c:	add	x29, sp, #0x80
  424250:	mov	x2, #0x58                  	// #88
  424254:	mov	w8, wzr
  424258:	adrp	x9, 442000 <_fini+0x1c30>
  42425c:	add	x9, x9, #0xd8e
  424260:	add	x9, x9, #0x3
  424264:	add	x10, sp, #0x18
  424268:	stur	x0, [x29, #-16]
  42426c:	mov	x0, x10
  424270:	mov	w1, w8
  424274:	str	x9, [sp, #8]
  424278:	bl	406c98 <memset@plt>
  42427c:	ldur	x8, [x29, #-16]
  424280:	cmp	x8, #0x0
  424284:	cset	w9, ne  // ne = any
  424288:	mov	w10, #0x1                   	// #1
  42428c:	eor	w9, w9, #0x1
  424290:	eor	w9, w9, w10
  424294:	eor	w9, w9, w10
  424298:	and	w9, w9, #0x1
  42429c:	mov	w0, w9
  4242a0:	sxtw	x8, w0
  4242a4:	cbz	x8, 4242cc <boot_loader_entry_exists+0x88>
  4242a8:	mov	w8, wzr
  4242ac:	mov	w0, w8
  4242b0:	adrp	x1, 442000 <_fini+0x1c30>
  4242b4:	add	x1, x1, #0x4dd
  4242b8:	ldr	x2, [sp, #8]
  4242bc:	mov	w3, #0xb91                 	// #2961
  4242c0:	adrp	x4, 447000 <_fini+0x6c30>
  4242c4:	add	x4, x4, #0x6b
  4242c8:	bl	406c68 <log_assert_failed_realm@plt>
  4242cc:	mov	x8, xzr
  4242d0:	mov	x0, x8
  4242d4:	mov	x1, x8
  4242d8:	add	x2, sp, #0x18
  4242dc:	bl	407568 <boot_entries_load_config_auto@plt>
  4242e0:	str	w0, [sp, #20]
  4242e4:	ldr	w9, [sp, #20]
  4242e8:	cmp	w9, #0x0
  4242ec:	cset	w9, ge  // ge = tcont
  4242f0:	tbnz	w9, #0, 424318 <boot_loader_entry_exists+0xd4>
  4242f4:	ldr	w8, [sp, #20]
  4242f8:	mov	w9, #0xffffff82            	// #-126
  4242fc:	cmp	w8, w9
  424300:	b.eq	424318 <boot_loader_entry_exists+0xd4>  // b.none
  424304:	ldr	w8, [sp, #20]
  424308:	stur	w8, [x29, #-4]
  42430c:	mov	w8, #0x1                   	// #1
  424310:	str	w8, [sp, #16]
  424314:	b	424350 <boot_loader_entry_exists+0x10c>
  424318:	add	x8, sp, #0x18
  42431c:	mov	x0, x8
  424320:	mov	w9, #0x1                   	// #1
  424324:	and	w1, w9, #0x1
  424328:	str	x8, [sp]
  42432c:	bl	407578 <boot_entries_augment_from_loader@plt>
  424330:	ldur	x1, [x29, #-16]
  424334:	ldr	x8, [sp]
  424338:	mov	x0, x8
  42433c:	bl	424368 <boot_config_has_entry>
  424340:	and	w9, w0, #0x1
  424344:	stur	w9, [x29, #-4]
  424348:	mov	w9, #0x1                   	// #1
  42434c:	str	w9, [sp, #16]
  424350:	add	x0, sp, #0x18
  424354:	bl	4075a8 <boot_config_free@plt>
  424358:	ldur	w0, [x29, #-4]
  42435c:	ldp	x29, x30, [sp, #128]
  424360:	add	sp, sp, #0x90
  424364:	ret

0000000000424368 <boot_config_has_entry>:
  424368:	sub	sp, sp, #0x30
  42436c:	stp	x29, x30, [sp, #32]
  424370:	add	x29, sp, #0x20
  424374:	str	x0, [sp, #16]
  424378:	str	x1, [sp, #8]
  42437c:	str	xzr, [sp]
  424380:	ldr	x8, [sp]
  424384:	ldr	x9, [sp, #16]
  424388:	ldr	x9, [x9, #72]
  42438c:	cmp	x8, x9
  424390:	b.cs	4243dc <boot_config_has_entry+0x74>  // b.hs, b.nlast
  424394:	ldr	x8, [sp, #16]
  424398:	ldr	x8, [x8, #64]
  42439c:	ldr	x9, [sp]
  4243a0:	mov	x10, #0x70                  	// #112
  4243a4:	mul	x9, x10, x9
  4243a8:	add	x8, x8, x9
  4243ac:	ldr	x0, [x8, #8]
  4243b0:	ldr	x1, [sp, #8]
  4243b4:	bl	407158 <strcmp@plt>
  4243b8:	cbnz	w0, 4243cc <boot_config_has_entry+0x64>
  4243bc:	mov	w8, #0x1                   	// #1
  4243c0:	and	w8, w8, #0x1
  4243c4:	sturb	w8, [x29, #-1]
  4243c8:	b	4243e8 <boot_config_has_entry+0x80>
  4243cc:	ldr	x8, [sp]
  4243d0:	add	x8, x8, #0x1
  4243d4:	str	x8, [sp]
  4243d8:	b	424380 <boot_config_has_entry+0x18>
  4243dc:	mov	w8, wzr
  4243e0:	and	w8, w8, #0x1
  4243e4:	sturb	w8, [x29, #-1]
  4243e8:	ldurb	w8, [x29, #-1]
  4243ec:	and	w0, w8, #0x1
  4243f0:	ldp	x29, x30, [sp, #32]
  4243f4:	add	sp, sp, #0x30
  4243f8:	ret

00000000004243fc <empty_to_null>:
  4243fc:	sub	sp, sp, #0x20
  424400:	stp	x29, x30, [sp, #16]
  424404:	add	x29, sp, #0x10
  424408:	str	x0, [sp, #8]
  42440c:	ldr	x0, [sp, #8]
  424410:	bl	42099c <isempty>
  424414:	tbnz	w0, #0, 42441c <empty_to_null+0x20>
  424418:	b	424428 <empty_to_null+0x2c>
  42441c:	mov	x8, xzr
  424420:	str	x8, [sp]
  424424:	b	424430 <empty_to_null+0x34>
  424428:	ldr	x8, [sp, #8]
  42442c:	str	x8, [sp]
  424430:	ldr	x8, [sp]
  424434:	mov	x0, x8
  424438:	ldp	x29, x30, [sp, #16]
  42443c:	add	sp, sp, #0x20
  424440:	ret

0000000000424444 <device_new>:
  424444:	sub	sp, sp, #0x40
  424448:	stp	x29, x30, [sp, #48]
  42444c:	add	x29, sp, #0x30
  424450:	adrp	x8, 447000 <_fini+0x6c30>
  424454:	add	x8, x8, #0x1ab
  424458:	add	x8, x8, #0x3
  42445c:	stur	x0, [x29, #-16]
  424460:	str	x1, [sp, #24]
  424464:	and	w9, w2, #0x1
  424468:	strb	w9, [sp, #23]
  42446c:	str	x8, [sp]
  424470:	ldur	x8, [x29, #-16]
  424474:	cmp	x8, #0x0
  424478:	cset	w9, ne  // ne = any
  42447c:	mov	w10, #0x1                   	// #1
  424480:	eor	w9, w9, #0x1
  424484:	eor	w9, w9, w10
  424488:	eor	w9, w9, w10
  42448c:	and	w9, w9, #0x1
  424490:	mov	w0, w9
  424494:	sxtw	x8, w0
  424498:	cbz	x8, 4244c0 <device_new+0x7c>
  42449c:	mov	w8, wzr
  4244a0:	mov	w0, w8
  4244a4:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4244a8:	add	x1, x1, #0x5ef
  4244ac:	ldr	x2, [sp]
  4244b0:	mov	w3, #0xd                   	// #13
  4244b4:	adrp	x4, 447000 <_fini+0x6c30>
  4244b8:	add	x4, x4, #0x1c8
  4244bc:	bl	406c68 <log_assert_failed_realm@plt>
  4244c0:	ldr	x8, [sp, #24]
  4244c4:	cmp	x8, #0x0
  4244c8:	cset	w9, ne  // ne = any
  4244cc:	mov	w10, #0x1                   	// #1
  4244d0:	eor	w9, w9, #0x1
  4244d4:	eor	w9, w9, w10
  4244d8:	eor	w9, w9, w10
  4244dc:	and	w9, w9, #0x1
  4244e0:	mov	w0, w9
  4244e4:	sxtw	x8, w0
  4244e8:	cbz	x8, 424510 <device_new+0xcc>
  4244ec:	mov	w8, wzr
  4244f0:	mov	w0, w8
  4244f4:	adrp	x1, 442000 <_fini+0x1c30>
  4244f8:	add	x1, x1, #0x4a0
  4244fc:	ldr	x2, [sp]
  424500:	mov	w3, #0xe                   	// #14
  424504:	adrp	x4, 447000 <_fini+0x6c30>
  424508:	add	x4, x4, #0x1c8
  42450c:	bl	406c68 <log_assert_failed_realm@plt>
  424510:	mov	x0, #0x1                   	// #1
  424514:	mov	x1, #0x48                  	// #72
  424518:	bl	407218 <calloc@plt>
  42451c:	str	x0, [sp, #8]
  424520:	ldr	x8, [sp, #8]
  424524:	cbnz	x8, 424534 <device_new+0xf0>
  424528:	mov	x8, xzr
  42452c:	stur	x8, [x29, #-8]
  424530:	b	4245d0 <device_new+0x18c>
  424534:	ldr	x0, [sp, #24]
  424538:	bl	407168 <strdup@plt>
  42453c:	ldr	x8, [sp, #8]
  424540:	str	x0, [x8, #8]
  424544:	ldr	x8, [sp, #8]
  424548:	ldr	x8, [x8, #8]
  42454c:	cbnz	x8, 424560 <device_new+0x11c>
  424550:	ldr	x0, [sp, #8]
  424554:	bl	4245e0 <mfree>
  424558:	stur	x0, [x29, #-8]
  42455c:	b	4245d0 <device_new+0x18c>
  424560:	ldur	x8, [x29, #-16]
  424564:	ldr	x0, [x8, #16]
  424568:	ldr	x8, [sp, #8]
  42456c:	ldr	x1, [x8, #8]
  424570:	ldr	x2, [sp, #8]
  424574:	bl	407228 <hashmap_put@plt>
  424578:	cmp	w0, #0x0
  42457c:	cset	w9, ge  // ge = tcont
  424580:	tbnz	w9, #0, 4245a0 <device_new+0x15c>
  424584:	ldr	x8, [sp, #8]
  424588:	ldr	x0, [x8, #8]
  42458c:	bl	406da8 <free@plt>
  424590:	ldr	x0, [sp, #8]
  424594:	bl	4245e0 <mfree>
  424598:	stur	x0, [x29, #-8]
  42459c:	b	4245d0 <device_new+0x18c>
  4245a0:	ldur	x8, [x29, #-16]
  4245a4:	ldr	x9, [sp, #8]
  4245a8:	str	x8, [x9]
  4245ac:	ldrb	w10, [sp, #23]
  4245b0:	ldr	x8, [sp, #8]
  4245b4:	and	w10, w10, #0x1
  4245b8:	strb	w10, [x8, #24]
  4245bc:	ldr	x8, [sp, #8]
  4245c0:	add	x0, x8, #0x20
  4245c4:	bl	4079d8 <dual_timestamp_get@plt>
  4245c8:	ldr	x8, [sp, #8]
  4245cc:	stur	x8, [x29, #-8]
  4245d0:	ldur	x0, [x29, #-8]
  4245d4:	ldp	x29, x30, [sp, #48]
  4245d8:	add	sp, sp, #0x40
  4245dc:	ret

00000000004245e0 <mfree>:
  4245e0:	sub	sp, sp, #0x20
  4245e4:	stp	x29, x30, [sp, #16]
  4245e8:	add	x29, sp, #0x10
  4245ec:	mov	x8, xzr
  4245f0:	str	x0, [sp, #8]
  4245f4:	ldr	x0, [sp, #8]
  4245f8:	str	x8, [sp]
  4245fc:	bl	406da8 <free@plt>
  424600:	ldr	x0, [sp]
  424604:	ldp	x29, x30, [sp, #16]
  424608:	add	sp, sp, #0x20
  42460c:	ret

0000000000424610 <device_free>:
  424610:	sub	sp, sp, #0x20
  424614:	stp	x29, x30, [sp, #16]
  424618:	add	x29, sp, #0x10
  42461c:	adrp	x8, 447000 <_fini+0x6c30>
  424620:	add	x8, x8, #0x1ab
  424624:	add	x2, x8, #0x3
  424628:	str	x0, [sp, #8]
  42462c:	str	x2, [sp]
  424630:	ldr	x8, [sp, #8]
  424634:	cmp	x8, #0x0
  424638:	cset	w9, ne  // ne = any
  42463c:	mov	w10, #0x1                   	// #1
  424640:	eor	w9, w9, #0x1
  424644:	eor	w9, w9, w10
  424648:	eor	w9, w9, w10
  42464c:	and	w9, w9, #0x1
  424650:	mov	w0, w9
  424654:	sxtw	x8, w0
  424658:	cbz	x8, 424680 <device_free+0x70>
  42465c:	mov	w8, wzr
  424660:	mov	w0, w8
  424664:	adrp	x1, 447000 <_fini+0x6c30>
  424668:	add	x1, x1, #0x1fb
  42466c:	ldr	x2, [sp]
  424670:	mov	w3, #0x3b                  	// #59
  424674:	adrp	x4, 447000 <_fini+0x6c30>
  424678:	add	x4, x4, #0x1fd
  42467c:	bl	406c68 <log_assert_failed_realm@plt>
  424680:	ldr	x0, [sp, #8]
  424684:	bl	4246c4 <device_detach>
  424688:	ldr	x8, [sp, #8]
  42468c:	ldr	x8, [x8]
  424690:	ldr	x0, [x8, #16]
  424694:	ldr	x8, [sp, #8]
  424698:	ldr	x1, [x8, #8]
  42469c:	bl	4248d8 <hashmap_remove>
  4246a0:	ldr	x8, [sp, #8]
  4246a4:	ldr	x8, [x8, #8]
  4246a8:	mov	x0, x8
  4246ac:	bl	406da8 <free@plt>
  4246b0:	ldr	x0, [sp, #8]
  4246b4:	bl	406da8 <free@plt>
  4246b8:	ldp	x29, x30, [sp, #16]
  4246bc:	add	sp, sp, #0x20
  4246c0:	ret

00000000004246c4 <device_detach>:
  4246c4:	sub	sp, sp, #0x50
  4246c8:	stp	x29, x30, [sp, #64]
  4246cc:	add	x29, sp, #0x40
  4246d0:	adrp	x8, 447000 <_fini+0x6c30>
  4246d4:	add	x8, x8, #0x1ab
  4246d8:	add	x8, x8, #0x3
  4246dc:	adrp	x9, 447000 <_fini+0x6c30>
  4246e0:	add	x9, x9, #0x24d
  4246e4:	stur	x0, [x29, #-8]
  4246e8:	str	x8, [sp, #16]
  4246ec:	str	x9, [sp, #8]
  4246f0:	ldur	x8, [x29, #-8]
  4246f4:	cmp	x8, #0x0
  4246f8:	cset	w9, ne  // ne = any
  4246fc:	mov	w10, #0x1                   	// #1
  424700:	eor	w9, w9, #0x1
  424704:	eor	w9, w9, w10
  424708:	eor	w9, w9, w10
  42470c:	and	w9, w9, #0x1
  424710:	mov	w0, w9
  424714:	sxtw	x8, w0
  424718:	cbz	x8, 42473c <device_detach+0x78>
  42471c:	mov	w8, wzr
  424720:	mov	w0, w8
  424724:	adrp	x1, 447000 <_fini+0x6c30>
  424728:	add	x1, x1, #0x1fb
  42472c:	ldr	x2, [sp, #16]
  424730:	mov	w3, #0x28                  	// #40
  424734:	ldr	x4, [sp, #8]
  424738:	bl	406c68 <log_assert_failed_realm@plt>
  42473c:	ldur	x8, [x29, #-8]
  424740:	ldr	x8, [x8, #16]
  424744:	cbnz	x8, 42474c <device_detach+0x88>
  424748:	b	4248cc <device_detach+0x208>
  42474c:	ldur	x8, [x29, #-8]
  424750:	ldr	x8, [x8, #64]
  424754:	stur	x8, [x29, #-24]
  424758:	cbz	x8, 424768 <device_detach+0xa4>
  42475c:	ldur	x0, [x29, #-24]
  424760:	bl	4307a4 <session_device_free>
  424764:	b	42474c <device_detach+0x88>
  424768:	ldur	x8, [x29, #-8]
  42476c:	ldr	x8, [x8, #16]
  424770:	stur	x8, [x29, #-16]
  424774:	ldur	x8, [x29, #-8]
  424778:	ldr	x8, [x8, #16]
  42477c:	add	x8, x8, #0x18
  424780:	str	x8, [sp, #32]
  424784:	ldur	x8, [x29, #-8]
  424788:	str	x8, [sp, #24]
  42478c:	ldr	x8, [sp, #24]
  424790:	cmp	x8, #0x0
  424794:	cset	w9, ne  // ne = any
  424798:	mov	w10, #0x1                   	// #1
  42479c:	eor	w9, w9, #0x1
  4247a0:	eor	w9, w9, w10
  4247a4:	eor	w9, w9, w10
  4247a8:	and	w9, w9, #0x1
  4247ac:	mov	w0, w9
  4247b0:	sxtw	x8, w0
  4247b4:	cbz	x8, 4247d8 <device_detach+0x114>
  4247b8:	mov	w8, wzr
  4247bc:	mov	w0, w8
  4247c0:	adrp	x1, 441000 <_fini+0xc30>
  4247c4:	add	x1, x1, #0x6cc
  4247c8:	ldr	x2, [sp, #16]
  4247cc:	mov	w3, #0x31                  	// #49
  4247d0:	ldr	x4, [sp, #8]
  4247d4:	bl	406c68 <log_assert_failed_realm@plt>
  4247d8:	ldr	x8, [sp, #24]
  4247dc:	ldr	x8, [x8, #48]
  4247e0:	cbz	x8, 4247f8 <device_detach+0x134>
  4247e4:	ldr	x8, [sp, #24]
  4247e8:	ldr	x8, [x8, #56]
  4247ec:	ldr	x9, [sp, #24]
  4247f0:	ldr	x9, [x9, #48]
  4247f4:	str	x8, [x9, #56]
  4247f8:	ldr	x8, [sp, #24]
  4247fc:	ldr	x8, [x8, #56]
  424800:	cbz	x8, 42481c <device_detach+0x158>
  424804:	ldr	x8, [sp, #24]
  424808:	ldr	x8, [x8, #48]
  42480c:	ldr	x9, [sp, #24]
  424810:	ldr	x9, [x9, #56]
  424814:	str	x8, [x9, #48]
  424818:	b	424880 <device_detach+0x1bc>
  42481c:	ldr	x8, [sp, #32]
  424820:	ldr	x8, [x8]
  424824:	ldr	x9, [sp, #24]
  424828:	cmp	x8, x9
  42482c:	cset	w10, eq  // eq = none
  424830:	mov	w11, #0x1                   	// #1
  424834:	eor	w10, w10, #0x1
  424838:	eor	w10, w10, w11
  42483c:	eor	w10, w10, w11
  424840:	and	w10, w10, #0x1
  424844:	mov	w0, w10
  424848:	sxtw	x8, w0
  42484c:	cbz	x8, 424870 <device_detach+0x1ac>
  424850:	mov	w8, wzr
  424854:	mov	w0, w8
  424858:	adrp	x1, 441000 <_fini+0xc30>
  42485c:	add	x1, x1, #0x6d2
  424860:	ldr	x2, [sp, #16]
  424864:	mov	w3, #0x31                  	// #49
  424868:	ldr	x4, [sp, #8]
  42486c:	bl	406c68 <log_assert_failed_realm@plt>
  424870:	ldr	x8, [sp, #24]
  424874:	ldr	x8, [x8, #48]
  424878:	ldr	x9, [sp, #32]
  42487c:	str	x8, [x9]
  424880:	ldr	x8, [sp, #24]
  424884:	mov	x9, xzr
  424888:	str	x9, [x8, #56]
  42488c:	ldr	x8, [sp, #24]
  424890:	str	x9, [x8, #48]
  424894:	ldur	x8, [x29, #-8]
  424898:	mov	x9, xzr
  42489c:	str	x9, [x8, #16]
  4248a0:	ldur	x0, [x29, #-16]
  4248a4:	bl	42b9fc <seat_has_master_device>
  4248a8:	tbnz	w0, #0, 4248cc <device_detach+0x208>
  4248ac:	ldur	x0, [x29, #-16]
  4248b0:	bl	42b340 <seat_add_to_gc_queue>
  4248b4:	ldur	x0, [x29, #-16]
  4248b8:	adrp	x1, 447000 <_fini+0x6c30>
  4248bc:	add	x1, x1, #0x240
  4248c0:	mov	x8, xzr
  4248c4:	mov	x2, x8
  4248c8:	bl	428aec <seat_send_changed>
  4248cc:	ldp	x29, x30, [sp, #64]
  4248d0:	add	sp, sp, #0x50
  4248d4:	ret

00000000004248d8 <hashmap_remove>:
  4248d8:	sub	sp, sp, #0x20
  4248dc:	stp	x29, x30, [sp, #16]
  4248e0:	add	x29, sp, #0x10
  4248e4:	str	x0, [sp, #8]
  4248e8:	str	x1, [sp]
  4248ec:	ldr	x0, [sp, #8]
  4248f0:	ldr	x1, [sp]
  4248f4:	bl	407248 <internal_hashmap_remove@plt>
  4248f8:	ldp	x29, x30, [sp, #16]
  4248fc:	add	sp, sp, #0x20
  424900:	ret

0000000000424904 <device_attach>:
  424904:	sub	sp, sp, #0x70
  424908:	stp	x29, x30, [sp, #96]
  42490c:	add	x29, sp, #0x60
  424910:	adrp	x8, 447000 <_fini+0x6c30>
  424914:	add	x8, x8, #0x1ab
  424918:	add	x8, x8, #0x3
  42491c:	adrp	x9, 447000 <_fini+0x6c30>
  424920:	add	x9, x9, #0x218
  424924:	stur	x0, [x29, #-8]
  424928:	stur	x1, [x29, #-16]
  42492c:	str	x8, [sp, #16]
  424930:	str	x9, [sp, #8]
  424934:	ldur	x8, [x29, #-8]
  424938:	cmp	x8, #0x0
  42493c:	cset	w9, ne  // ne = any
  424940:	mov	w10, #0x1                   	// #1
  424944:	eor	w9, w9, #0x1
  424948:	eor	w9, w9, w10
  42494c:	eor	w9, w9, w10
  424950:	and	w9, w9, #0x1
  424954:	mov	w0, w9
  424958:	sxtw	x8, w0
  42495c:	cbz	x8, 424980 <device_attach+0x7c>
  424960:	mov	w8, wzr
  424964:	mov	w0, w8
  424968:	adrp	x1, 447000 <_fini+0x6c30>
  42496c:	add	x1, x1, #0x1fb
  424970:	ldr	x2, [sp, #16]
  424974:	mov	w3, #0x49                  	// #73
  424978:	ldr	x4, [sp, #8]
  42497c:	bl	406c68 <log_assert_failed_realm@plt>
  424980:	ldur	x8, [x29, #-16]
  424984:	cmp	x8, #0x0
  424988:	cset	w9, ne  // ne = any
  42498c:	mov	w10, #0x1                   	// #1
  424990:	eor	w9, w9, #0x1
  424994:	eor	w9, w9, w10
  424998:	eor	w9, w9, w10
  42499c:	and	w9, w9, #0x1
  4249a0:	mov	w0, w9
  4249a4:	sxtw	x8, w0
  4249a8:	cbz	x8, 4249cc <device_attach+0xc8>
  4249ac:	mov	w8, wzr
  4249b0:	mov	w0, w8
  4249b4:	adrp	x1, 442000 <_fini+0x1c30>
  4249b8:	add	x1, x1, #0xf2
  4249bc:	ldr	x2, [sp, #16]
  4249c0:	mov	w3, #0x4a                  	// #74
  4249c4:	ldr	x4, [sp, #8]
  4249c8:	bl	406c68 <log_assert_failed_realm@plt>
  4249cc:	ldur	x8, [x29, #-8]
  4249d0:	ldr	x8, [x8, #16]
  4249d4:	ldur	x9, [x29, #-16]
  4249d8:	cmp	x8, x9
  4249dc:	b.ne	4249e4 <device_attach+0xe0>  // b.any
  4249e0:	b	424c50 <device_attach+0x34c>
  4249e4:	ldur	x8, [x29, #-8]
  4249e8:	ldr	x8, [x8, #16]
  4249ec:	cbz	x8, 4249f8 <device_attach+0xf4>
  4249f0:	ldur	x0, [x29, #-8]
  4249f4:	bl	4246c4 <device_detach>
  4249f8:	ldur	x8, [x29, #-16]
  4249fc:	ldur	x9, [x29, #-8]
  424a00:	str	x8, [x9, #16]
  424a04:	ldur	x0, [x29, #-16]
  424a08:	bl	42b9fc <seat_has_master_device>
  424a0c:	and	w10, w0, #0x1
  424a10:	sturb	w10, [x29, #-25]
  424a14:	ldur	x8, [x29, #-8]
  424a18:	ldrb	w10, [x8, #24]
  424a1c:	tbnz	w10, #0, 424a2c <device_attach+0x128>
  424a20:	ldur	x8, [x29, #-16]
  424a24:	ldr	x8, [x8, #24]
  424a28:	cbnz	x8, 424acc <device_attach+0x1c8>
  424a2c:	ldur	x8, [x29, #-16]
  424a30:	add	x8, x8, #0x18
  424a34:	stur	x8, [x29, #-40]
  424a38:	ldur	x8, [x29, #-8]
  424a3c:	str	x8, [sp, #48]
  424a40:	ldr	x8, [sp, #48]
  424a44:	cmp	x8, #0x0
  424a48:	cset	w9, ne  // ne = any
  424a4c:	mov	w10, #0x1                   	// #1
  424a50:	eor	w9, w9, #0x1
  424a54:	eor	w9, w9, w10
  424a58:	eor	w9, w9, w10
  424a5c:	and	w9, w9, #0x1
  424a60:	mov	w0, w9
  424a64:	sxtw	x8, w0
  424a68:	cbz	x8, 424a8c <device_attach+0x188>
  424a6c:	mov	w8, wzr
  424a70:	mov	w0, w8
  424a74:	adrp	x1, 441000 <_fini+0xc30>
  424a78:	add	x1, x1, #0x6cc
  424a7c:	ldr	x2, [sp, #16]
  424a80:	mov	w3, #0x5d                  	// #93
  424a84:	ldr	x4, [sp, #8]
  424a88:	bl	406c68 <log_assert_failed_realm@plt>
  424a8c:	ldur	x8, [x29, #-40]
  424a90:	ldr	x8, [x8]
  424a94:	ldr	x9, [sp, #48]
  424a98:	str	x8, [x9, #48]
  424a9c:	cbz	x8, 424ab0 <device_attach+0x1ac>
  424aa0:	ldr	x8, [sp, #48]
  424aa4:	ldr	x9, [sp, #48]
  424aa8:	ldr	x9, [x9, #48]
  424aac:	str	x8, [x9, #56]
  424ab0:	ldr	x8, [sp, #48]
  424ab4:	mov	x9, xzr
  424ab8:	str	x9, [x8, #56]
  424abc:	ldr	x8, [sp, #48]
  424ac0:	ldur	x9, [x29, #-40]
  424ac4:	str	x8, [x9]
  424ac8:	b	424bf8 <device_attach+0x2f4>
  424acc:	ldur	x8, [x29, #-16]
  424ad0:	ldr	x8, [x8, #24]
  424ad4:	stur	x8, [x29, #-24]
  424ad8:	ldur	x8, [x29, #-24]
  424adc:	cbz	x8, 424bf8 <device_attach+0x2f4>
  424ae0:	ldur	x8, [x29, #-24]
  424ae4:	ldr	x8, [x8, #48]
  424ae8:	cbz	x8, 424af8 <device_attach+0x1f4>
  424aec:	ldur	x8, [x29, #-24]
  424af0:	ldrb	w9, [x8, #24]
  424af4:	tbnz	w9, #0, 424be8 <device_attach+0x2e4>
  424af8:	ldur	x8, [x29, #-16]
  424afc:	add	x8, x8, #0x18
  424b00:	str	x8, [sp, #40]
  424b04:	ldur	x8, [x29, #-24]
  424b08:	str	x8, [sp, #32]
  424b0c:	ldur	x8, [x29, #-8]
  424b10:	str	x8, [sp, #24]
  424b14:	ldr	x8, [sp, #24]
  424b18:	cmp	x8, #0x0
  424b1c:	cset	w9, ne  // ne = any
  424b20:	mov	w10, #0x1                   	// #1
  424b24:	eor	w9, w9, #0x1
  424b28:	eor	w9, w9, w10
  424b2c:	eor	w9, w9, w10
  424b30:	and	w9, w9, #0x1
  424b34:	mov	w0, w9
  424b38:	sxtw	x8, w0
  424b3c:	cbz	x8, 424b60 <device_attach+0x25c>
  424b40:	mov	w8, wzr
  424b44:	mov	w0, w8
  424b48:	adrp	x1, 447000 <_fini+0x6c30>
  424b4c:	add	x1, x1, #0x23d
  424b50:	ldr	x2, [sp, #16]
  424b54:	mov	w3, #0x61                  	// #97
  424b58:	ldr	x4, [sp, #8]
  424b5c:	bl	406c68 <log_assert_failed_realm@plt>
  424b60:	ldr	x8, [sp, #32]
  424b64:	cbnz	x8, 424ba8 <device_attach+0x2a4>
  424b68:	ldr	x8, [sp, #40]
  424b6c:	ldr	x8, [x8]
  424b70:	ldr	x9, [sp, #24]
  424b74:	str	x8, [x9, #48]
  424b78:	cbz	x8, 424b8c <device_attach+0x288>
  424b7c:	ldr	x8, [sp, #24]
  424b80:	ldr	x9, [sp, #24]
  424b84:	ldr	x9, [x9, #48]
  424b88:	str	x8, [x9, #56]
  424b8c:	ldr	x8, [sp, #24]
  424b90:	mov	x9, xzr
  424b94:	str	x9, [x8, #56]
  424b98:	ldr	x8, [sp, #24]
  424b9c:	ldr	x9, [sp, #40]
  424ba0:	str	x8, [x9]
  424ba4:	b	424be4 <device_attach+0x2e0>
  424ba8:	ldr	x8, [sp, #32]
  424bac:	ldr	x8, [x8, #48]
  424bb0:	ldr	x9, [sp, #24]
  424bb4:	str	x8, [x9, #48]
  424bb8:	cbz	x8, 424bcc <device_attach+0x2c8>
  424bbc:	ldr	x8, [sp, #24]
  424bc0:	ldr	x9, [sp, #24]
  424bc4:	ldr	x9, [x9, #48]
  424bc8:	str	x8, [x9, #56]
  424bcc:	ldr	x8, [sp, #32]
  424bd0:	ldr	x9, [sp, #24]
  424bd4:	str	x8, [x9, #56]
  424bd8:	ldr	x8, [sp, #24]
  424bdc:	ldr	x9, [sp, #32]
  424be0:	str	x8, [x9, #48]
  424be4:	b	424bf8 <device_attach+0x2f4>
  424be8:	ldur	x8, [x29, #-24]
  424bec:	ldr	x8, [x8, #48]
  424bf0:	stur	x8, [x29, #-24]
  424bf4:	b	424ad8 <device_attach+0x1d4>
  424bf8:	ldurb	w8, [x29, #-25]
  424bfc:	tbnz	w8, #0, 424c50 <device_attach+0x34c>
  424c00:	ldur	x8, [x29, #-8]
  424c04:	ldrb	w9, [x8, #24]
  424c08:	tbnz	w9, #0, 424c10 <device_attach+0x30c>
  424c0c:	b	424c50 <device_attach+0x34c>
  424c10:	ldur	x8, [x29, #-16]
  424c14:	ldrb	w9, [x8, #72]
  424c18:	mov	w10, #0x1                   	// #1
  424c1c:	lsr	w9, w9, w10
  424c20:	and	w9, w9, w10
  424c24:	tbnz	w9, #0, 424c2c <device_attach+0x328>
  424c28:	b	424c50 <device_attach+0x34c>
  424c2c:	ldur	x0, [x29, #-16]
  424c30:	bl	429674 <seat_save>
  424c34:	ldur	x8, [x29, #-16]
  424c38:	mov	x0, x8
  424c3c:	adrp	x1, 447000 <_fini+0x6c30>
  424c40:	add	x1, x1, #0x240
  424c44:	mov	x8, xzr
  424c48:	mov	x2, x8
  424c4c:	bl	428aec <seat_send_changed>
  424c50:	ldp	x29, x30, [sp, #96]
  424c54:	add	sp, sp, #0x70
  424c58:	ret

0000000000424c5c <inhibitor_new>:
  424c5c:	sub	sp, sp, #0xe0
  424c60:	stp	x29, x30, [sp, #208]
  424c64:	add	x29, sp, #0xd0
  424c68:	mov	x8, xzr
  424c6c:	adrp	x9, 447000 <_fini+0x6c30>
  424c70:	add	x9, x9, #0x26a
  424c74:	add	x9, x9, #0x3
  424c78:	adrp	x10, 447000 <_fini+0x6c30>
  424c7c:	add	x10, x10, #0x288
  424c80:	stur	x0, [x29, #-16]
  424c84:	stur	x1, [x29, #-24]
  424c88:	stur	x2, [x29, #-32]
  424c8c:	stur	x8, [x29, #-40]
  424c90:	str	x9, [sp, #32]
  424c94:	str	x10, [sp, #24]
  424c98:	ldur	x8, [x29, #-16]
  424c9c:	cmp	x8, #0x0
  424ca0:	cset	w9, ne  // ne = any
  424ca4:	mov	w10, #0x1                   	// #1
  424ca8:	eor	w9, w9, #0x1
  424cac:	eor	w9, w9, w10
  424cb0:	eor	w9, w9, w10
  424cb4:	and	w9, w9, #0x1
  424cb8:	mov	w0, w9
  424cbc:	sxtw	x8, w0
  424cc0:	cbz	x8, 424ce4 <inhibitor_new+0x88>
  424cc4:	mov	w8, wzr
  424cc8:	mov	w0, w8
  424ccc:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  424cd0:	add	x1, x1, #0x5cf
  424cd4:	ldr	x2, [sp, #32]
  424cd8:	mov	w3, #0x21                  	// #33
  424cdc:	ldr	x4, [sp, #24]
  424ce0:	bl	406c68 <log_assert_failed_realm@plt>
  424ce4:	ldur	x8, [x29, #-24]
  424ce8:	cmp	x8, #0x0
  424cec:	cset	w9, ne  // ne = any
  424cf0:	mov	w10, #0x1                   	// #1
  424cf4:	eor	w9, w9, #0x1
  424cf8:	eor	w9, w9, w10
  424cfc:	eor	w9, w9, w10
  424d00:	and	w9, w9, #0x1
  424d04:	mov	w0, w9
  424d08:	sxtw	x8, w0
  424d0c:	cbz	x8, 424d30 <inhibitor_new+0xd4>
  424d10:	mov	w8, wzr
  424d14:	mov	w0, w8
  424d18:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  424d1c:	add	x1, x1, #0x5ef
  424d20:	ldr	x2, [sp, #32]
  424d24:	mov	w3, #0x22                  	// #34
  424d28:	ldr	x4, [sp, #24]
  424d2c:	bl	406c68 <log_assert_failed_realm@plt>
  424d30:	ldur	x8, [x29, #-32]
  424d34:	cmp	x8, #0x0
  424d38:	cset	w9, ne  // ne = any
  424d3c:	mov	w10, #0x1                   	// #1
  424d40:	eor	w9, w9, #0x1
  424d44:	eor	w9, w9, w10
  424d48:	eor	w9, w9, w10
  424d4c:	and	w9, w9, #0x1
  424d50:	mov	w0, w9
  424d54:	sxtw	x8, w0
  424d58:	cbz	x8, 424d7c <inhibitor_new+0x120>
  424d5c:	mov	w8, wzr
  424d60:	mov	w0, w8
  424d64:	adrp	x1, 442000 <_fini+0x1c30>
  424d68:	add	x1, x1, #0x4dd
  424d6c:	ldr	x2, [sp, #32]
  424d70:	mov	w3, #0x23                  	// #35
  424d74:	ldr	x4, [sp, #24]
  424d78:	bl	406c68 <log_assert_failed_realm@plt>
  424d7c:	mov	x0, #0x68                  	// #104
  424d80:	mov	x1, #0x1                   	// #1
  424d84:	bl	424f10 <malloc_multiply>
  424d88:	stur	x0, [x29, #-40]
  424d8c:	ldur	x8, [x29, #-40]
  424d90:	cbnz	x8, 424da8 <inhibitor_new+0x14c>
  424d94:	mov	w8, #0xfffffff4            	// #-12
  424d98:	stur	w8, [x29, #-4]
  424d9c:	mov	w8, #0x1                   	// #1
  424da0:	stur	w8, [x29, #-48]
  424da4:	b	424ec4 <inhibitor_new+0x268>
  424da8:	ldur	x0, [x29, #-40]
  424dac:	add	x8, sp, #0x38
  424db0:	str	x0, [sp, #16]
  424db4:	mov	x0, x8
  424db8:	mov	w9, wzr
  424dbc:	mov	w1, w9
  424dc0:	mov	x10, #0x68                  	// #104
  424dc4:	mov	x2, x10
  424dc8:	str	x8, [sp, #8]
  424dcc:	str	x10, [sp]
  424dd0:	bl	406c98 <memset@plt>
  424dd4:	ldur	x8, [x29, #-24]
  424dd8:	str	x8, [sp, #56]
  424ddc:	mov	w9, #0xffffffff            	// #-1
  424de0:	str	w9, [sp, #92]
  424de4:	str	w9, [sp, #112]
  424de8:	str	w9, [sp, #120]
  424dec:	str	w9, [sp, #152]
  424df0:	ldr	x0, [sp, #16]
  424df4:	ldr	x1, [sp, #8]
  424df8:	ldr	x2, [sp]
  424dfc:	bl	406cb8 <memcpy@plt>
  424e00:	ldur	x1, [x29, #-32]
  424e04:	adrp	x0, 441000 <_fini+0xc30>
  424e08:	add	x0, x0, #0x5ff
  424e0c:	mov	x8, #0xffffffffffffffff    	// #-1
  424e10:	mov	x2, x8
  424e14:	bl	4078e8 <path_join_internal@plt>
  424e18:	ldur	x8, [x29, #-40]
  424e1c:	str	x0, [x8, #24]
  424e20:	ldur	x8, [x29, #-40]
  424e24:	ldr	x8, [x8, #24]
  424e28:	cbnz	x8, 424e40 <inhibitor_new+0x1e4>
  424e2c:	mov	w8, #0xfffffff4            	// #-12
  424e30:	stur	w8, [x29, #-4]
  424e34:	mov	w8, #0x1                   	// #1
  424e38:	stur	w8, [x29, #-48]
  424e3c:	b	424ec4 <inhibitor_new+0x268>
  424e40:	ldur	x8, [x29, #-40]
  424e44:	ldr	x0, [x8, #24]
  424e48:	bl	4079e8 <basename@plt>
  424e4c:	ldur	x8, [x29, #-40]
  424e50:	str	x0, [x8, #16]
  424e54:	ldur	x8, [x29, #-24]
  424e58:	ldr	x0, [x8, #56]
  424e5c:	ldur	x8, [x29, #-40]
  424e60:	ldr	x1, [x8, #16]
  424e64:	ldur	x2, [x29, #-40]
  424e68:	bl	407228 <hashmap_put@plt>
  424e6c:	stur	w0, [x29, #-44]
  424e70:	ldur	w9, [x29, #-44]
  424e74:	cmp	w9, #0x0
  424e78:	cset	w9, ge  // ge = tcont
  424e7c:	tbnz	w9, #0, 424e94 <inhibitor_new+0x238>
  424e80:	ldur	w8, [x29, #-44]
  424e84:	stur	w8, [x29, #-4]
  424e88:	mov	w8, #0x1                   	// #1
  424e8c:	stur	w8, [x29, #-48]
  424e90:	b	424ec4 <inhibitor_new+0x268>
  424e94:	ldur	x8, [x29, #-40]
  424e98:	str	x8, [sp, #48]
  424e9c:	mov	x8, xzr
  424ea0:	stur	x8, [x29, #-40]
  424ea4:	ldr	x8, [sp, #48]
  424ea8:	str	x8, [sp, #40]
  424eac:	ldr	x8, [sp, #40]
  424eb0:	ldur	x9, [x29, #-16]
  424eb4:	str	x8, [x9]
  424eb8:	stur	wzr, [x29, #-4]
  424ebc:	mov	w10, #0x1                   	// #1
  424ec0:	stur	w10, [x29, #-48]
  424ec4:	sub	x0, x29, #0x28
  424ec8:	bl	424edc <inhibitor_freep>
  424ecc:	ldur	w0, [x29, #-4]
  424ed0:	ldp	x29, x30, [sp, #208]
  424ed4:	add	sp, sp, #0xe0
  424ed8:	ret

0000000000424edc <inhibitor_freep>:
  424edc:	sub	sp, sp, #0x20
  424ee0:	stp	x29, x30, [sp, #16]
  424ee4:	add	x29, sp, #0x10
  424ee8:	str	x0, [sp, #8]
  424eec:	ldr	x8, [sp, #8]
  424ef0:	ldr	x8, [x8]
  424ef4:	cbz	x8, 424f04 <inhibitor_freep+0x28>
  424ef8:	ldr	x8, [sp, #8]
  424efc:	ldr	x0, [x8]
  424f00:	bl	424f8c <inhibitor_free>
  424f04:	ldp	x29, x30, [sp, #16]
  424f08:	add	sp, sp, #0x20
  424f0c:	ret

0000000000424f10 <malloc_multiply>:
  424f10:	sub	sp, sp, #0x40
  424f14:	stp	x29, x30, [sp, #48]
  424f18:	add	x29, sp, #0x30
  424f1c:	stur	x0, [x29, #-16]
  424f20:	str	x1, [sp, #24]
  424f24:	ldur	x0, [x29, #-16]
  424f28:	ldr	x1, [sp, #24]
  424f2c:	bl	426d5c <size_multiply_overflow>
  424f30:	tbnz	w0, #0, 424f38 <malloc_multiply+0x28>
  424f34:	b	424f44 <malloc_multiply+0x34>
  424f38:	mov	x8, xzr
  424f3c:	stur	x8, [x29, #-8]
  424f40:	b	424f7c <malloc_multiply+0x6c>
  424f44:	ldur	x8, [x29, #-16]
  424f48:	ldr	x9, [sp, #24]
  424f4c:	mul	x8, x8, x9
  424f50:	str	x8, [sp, #16]
  424f54:	cbz	x8, 424f64 <malloc_multiply+0x54>
  424f58:	ldr	x8, [sp, #16]
  424f5c:	str	x8, [sp, #8]
  424f60:	b	424f6c <malloc_multiply+0x5c>
  424f64:	mov	x8, #0x1                   	// #1
  424f68:	str	x8, [sp, #8]
  424f6c:	ldr	x8, [sp, #8]
  424f70:	mov	x0, x8
  424f74:	bl	406dd8 <malloc@plt>
  424f78:	stur	x0, [x29, #-8]
  424f7c:	ldur	x0, [x29, #-8]
  424f80:	ldp	x29, x30, [sp, #48]
  424f84:	add	sp, sp, #0x40
  424f88:	ret

0000000000424f8c <inhibitor_free>:
  424f8c:	sub	sp, sp, #0x20
  424f90:	stp	x29, x30, [sp, #16]
  424f94:	add	x29, sp, #0x10
  424f98:	str	x0, [sp]
  424f9c:	ldr	x8, [sp]
  424fa0:	cbnz	x8, 424fb0 <inhibitor_free+0x24>
  424fa4:	mov	x8, xzr
  424fa8:	str	x8, [sp, #8]
  424fac:	b	425028 <inhibitor_free+0x9c>
  424fb0:	ldr	x8, [sp]
  424fb4:	ldr	x0, [x8, #40]
  424fb8:	bl	406da8 <free@plt>
  424fbc:	ldr	x8, [sp]
  424fc0:	ldr	x0, [x8, #48]
  424fc4:	bl	406da8 <free@plt>
  424fc8:	ldr	x8, [sp]
  424fcc:	ldr	x0, [x8, #8]
  424fd0:	bl	406d28 <sd_event_source_unref@plt>
  424fd4:	ldr	x8, [sp]
  424fd8:	ldr	w9, [x8, #96]
  424fdc:	mov	w0, w9
  424fe0:	bl	406d38 <safe_close@plt>
  424fe4:	ldr	x8, [sp]
  424fe8:	ldr	x8, [x8]
  424fec:	ldr	x8, [x8, #56]
  424ff0:	ldr	x10, [sp]
  424ff4:	ldr	x1, [x10, #16]
  424ff8:	mov	x0, x8
  424ffc:	bl	425038 <hashmap_remove>
  425000:	ldr	x8, [sp]
  425004:	ldr	x8, [x8, #24]
  425008:	mov	x0, x8
  42500c:	bl	406da8 <free@plt>
  425010:	ldr	x8, [sp]
  425014:	ldr	x0, [x8, #88]
  425018:	bl	406da8 <free@plt>
  42501c:	ldr	x0, [sp]
  425020:	bl	425064 <mfree>
  425024:	str	x0, [sp, #8]
  425028:	ldr	x0, [sp, #8]
  42502c:	ldp	x29, x30, [sp, #16]
  425030:	add	sp, sp, #0x20
  425034:	ret

0000000000425038 <hashmap_remove>:
  425038:	sub	sp, sp, #0x20
  42503c:	stp	x29, x30, [sp, #16]
  425040:	add	x29, sp, #0x10
  425044:	str	x0, [sp, #8]
  425048:	str	x1, [sp]
  42504c:	ldr	x0, [sp, #8]
  425050:	ldr	x1, [sp]
  425054:	bl	407248 <internal_hashmap_remove@plt>
  425058:	ldp	x29, x30, [sp, #16]
  42505c:	add	sp, sp, #0x20
  425060:	ret

0000000000425064 <mfree>:
  425064:	sub	sp, sp, #0x20
  425068:	stp	x29, x30, [sp, #16]
  42506c:	add	x29, sp, #0x10
  425070:	mov	x8, xzr
  425074:	str	x0, [sp, #8]
  425078:	ldr	x0, [sp, #8]
  42507c:	str	x8, [sp]
  425080:	bl	406da8 <free@plt>
  425084:	ldr	x0, [sp]
  425088:	ldp	x29, x30, [sp, #16]
  42508c:	add	sp, sp, #0x20
  425090:	ret

0000000000425094 <inhibitor_start>:
  425094:	sub	sp, sp, #0x80
  425098:	stp	x29, x30, [sp, #112]
  42509c:	add	x29, sp, #0x70
  4250a0:	adrp	x8, 447000 <_fini+0x6c30>
  4250a4:	add	x8, x8, #0x26a
  4250a8:	add	x8, x8, #0x3
  4250ac:	stur	x0, [x29, #-16]
  4250b0:	stur	x8, [x29, #-40]
  4250b4:	ldur	x8, [x29, #-16]
  4250b8:	cmp	x8, #0x0
  4250bc:	cset	w9, ne  // ne = any
  4250c0:	mov	w10, #0x1                   	// #1
  4250c4:	eor	w9, w9, #0x1
  4250c8:	eor	w9, w9, w10
  4250cc:	eor	w9, w9, w10
  4250d0:	and	w9, w9, #0x1
  4250d4:	mov	w0, w9
  4250d8:	sxtw	x8, w0
  4250dc:	cbz	x8, 425104 <inhibitor_start+0x70>
  4250e0:	mov	w8, wzr
  4250e4:	mov	w0, w8
  4250e8:	adrp	x1, 447000 <_fini+0x6c30>
  4250ec:	add	x1, x1, #0x2c1
  4250f0:	ldur	x2, [x29, #-40]
  4250f4:	mov	w3, #0xaa                  	// #170
  4250f8:	adrp	x4, 447000 <_fini+0x6c30>
  4250fc:	add	x4, x4, #0x2c3
  425100:	bl	406c68 <log_assert_failed_realm@plt>
  425104:	ldur	x8, [x29, #-16]
  425108:	ldrb	w9, [x8, #32]
  42510c:	tbnz	w9, #0, 425114 <inhibitor_start+0x80>
  425110:	b	42511c <inhibitor_start+0x88>
  425114:	stur	wzr, [x29, #-4]
  425118:	b	42525c <inhibitor_start+0x1c8>
  42511c:	ldur	x8, [x29, #-16]
  425120:	add	x0, x8, #0x48
  425124:	bl	4079d8 <dual_timestamp_get@plt>
  425128:	mov	w9, #0x7                   	// #7
  42512c:	stur	w9, [x29, #-20]
  425130:	stur	wzr, [x29, #-24]
  425134:	stur	wzr, [x29, #-28]
  425138:	ldur	w9, [x29, #-28]
  42513c:	mov	w0, w9
  425140:	bl	406c08 <log_get_max_level_realm@plt>
  425144:	ldur	w9, [x29, #-20]
  425148:	and	w9, w9, #0x7
  42514c:	cmp	w0, w9
  425150:	b.lt	42521c <inhibitor_start+0x188>  // b.tstop
  425154:	ldur	w8, [x29, #-28]
  425158:	ldur	w9, [x29, #-20]
  42515c:	orr	w0, w9, w8, lsl #10
  425160:	ldur	w1, [x29, #-24]
  425164:	ldur	x10, [x29, #-16]
  425168:	ldr	x10, [x10, #40]
  42516c:	stur	w0, [x29, #-44]
  425170:	mov	x0, x10
  425174:	stur	w1, [x29, #-48]
  425178:	bl	42526c <strna>
  42517c:	ldur	x10, [x29, #-16]
  425180:	ldr	x10, [x10, #48]
  425184:	str	x0, [sp, #56]
  425188:	mov	x0, x10
  42518c:	bl	42526c <strna>
  425190:	ldur	x10, [x29, #-16]
  425194:	ldr	w8, [x10, #60]
  425198:	ldur	x10, [x29, #-16]
  42519c:	ldr	w9, [x10, #64]
  4251a0:	ldur	x10, [x29, #-16]
  4251a4:	ldr	w11, [x10, #56]
  4251a8:	str	x0, [sp, #48]
  4251ac:	mov	w0, w11
  4251b0:	str	w8, [sp, #44]
  4251b4:	str	w9, [sp, #40]
  4251b8:	bl	4252a8 <inhibit_mode_to_string>
  4251bc:	ldur	w8, [x29, #-44]
  4251c0:	str	x0, [sp, #32]
  4251c4:	mov	w0, w8
  4251c8:	ldur	w1, [x29, #-48]
  4251cc:	ldur	x2, [x29, #-40]
  4251d0:	mov	w3, #0xb4                  	// #180
  4251d4:	adrp	x4, 447000 <_fini+0x6c30>
  4251d8:	add	x4, x4, #0x2e4
  4251dc:	adrp	x5, 447000 <_fini+0x6c30>
  4251e0:	add	x5, x5, #0x2f4
  4251e4:	ldr	x6, [sp, #56]
  4251e8:	ldr	x7, [sp, #48]
  4251ec:	mov	x10, sp
  4251f0:	ldr	w9, [sp, #44]
  4251f4:	str	w9, [x10]
  4251f8:	mov	x10, sp
  4251fc:	ldr	w11, [sp, #40]
  425200:	str	w11, [x10, #8]
  425204:	mov	x10, sp
  425208:	ldr	x12, [sp, #32]
  42520c:	str	x12, [x10, #16]
  425210:	bl	406c18 <log_internal_realm@plt>
  425214:	str	w0, [sp, #28]
  425218:	b	425230 <inhibitor_start+0x19c>
  42521c:	ldur	w0, [x29, #-24]
  425220:	bl	406c28 <abs@plt>
  425224:	mov	w8, wzr
  425228:	subs	w8, w8, w0, uxtb
  42522c:	str	w8, [sp, #28]
  425230:	ldr	w8, [sp, #28]
  425234:	stur	w8, [x29, #-32]
  425238:	ldur	x9, [x29, #-16]
  42523c:	mov	w8, #0x1                   	// #1
  425240:	strb	w8, [x9, #32]
  425244:	ldur	x0, [x29, #-16]
  425248:	bl	425304 <inhibitor_save>
  42524c:	ldur	x9, [x29, #-16]
  425250:	mov	x0, x9
  425254:	bl	4256a8 <bus_manager_send_inhibited_change>
  425258:	stur	wzr, [x29, #-4]
  42525c:	ldur	w0, [x29, #-4]
  425260:	ldp	x29, x30, [sp, #112]
  425264:	add	sp, sp, #0x80
  425268:	ret

000000000042526c <strna>:
  42526c:	sub	sp, sp, #0x20
  425270:	str	x0, [sp, #24]
  425274:	ldr	x8, [sp, #24]
  425278:	str	x8, [sp, #16]
  42527c:	cbz	x8, 42528c <strna+0x20>
  425280:	ldr	x8, [sp, #16]
  425284:	str	x8, [sp, #8]
  425288:	b	425298 <strna+0x2c>
  42528c:	adrp	x8, 441000 <_fini+0xc30>
  425290:	add	x8, x8, #0xd95
  425294:	str	x8, [sp, #8]
  425298:	ldr	x8, [sp, #8]
  42529c:	mov	x0, x8
  4252a0:	add	sp, sp, #0x20
  4252a4:	ret

00000000004252a8 <inhibit_mode_to_string>:
  4252a8:	sub	sp, sp, #0x10
  4252ac:	str	w0, [sp, #4]
  4252b0:	ldr	w8, [sp, #4]
  4252b4:	cmp	w8, #0x0
  4252b8:	cset	w8, lt  // lt = tstop
  4252bc:	tbnz	w8, #0, 4252cc <inhibit_mode_to_string+0x24>
  4252c0:	ldr	w8, [sp, #4]
  4252c4:	cmp	w8, #0x2
  4252c8:	b.lt	4252d8 <inhibit_mode_to_string+0x30>  // b.tstop
  4252cc:	mov	x8, xzr
  4252d0:	str	x8, [sp, #8]
  4252d4:	b	4252f8 <inhibit_mode_to_string+0x50>
  4252d8:	ldrsw	x8, [sp, #4]
  4252dc:	mov	x9, #0x8                   	// #8
  4252e0:	mul	x8, x9, x8
  4252e4:	adrp	x9, 45d000 <manager_vtable+0xbf8>
  4252e8:	add	x9, x9, #0xa20
  4252ec:	add	x8, x9, x8
  4252f0:	ldr	x8, [x8]
  4252f4:	str	x8, [sp, #8]
  4252f8:	ldr	x0, [sp, #8]
  4252fc:	add	sp, sp, #0x10
  425300:	ret

0000000000425304 <inhibitor_save>:
  425304:	sub	sp, sp, #0x90
  425308:	stp	x29, x30, [sp, #128]
  42530c:	add	x29, sp, #0x80
  425310:	mov	x8, xzr
  425314:	adrp	x9, 447000 <_fini+0x6c30>
  425318:	add	x9, x9, #0x26a
  42531c:	add	x9, x9, #0x3
  425320:	stur	x0, [x29, #-16]
  425324:	stur	x8, [x29, #-24]
  425328:	stur	x8, [x29, #-32]
  42532c:	str	x9, [sp, #40]
  425330:	ldur	x8, [x29, #-16]
  425334:	cmp	x8, #0x0
  425338:	cset	w9, ne  // ne = any
  42533c:	mov	w10, #0x1                   	// #1
  425340:	eor	w9, w9, #0x1
  425344:	eor	w9, w9, w10
  425348:	eor	w9, w9, w10
  42534c:	and	w9, w9, #0x1
  425350:	mov	w0, w9
  425354:	sxtw	x8, w0
  425358:	cbz	x8, 425380 <inhibitor_save+0x7c>
  42535c:	mov	w8, wzr
  425360:	mov	w0, w8
  425364:	adrp	x1, 447000 <_fini+0x6c30>
  425368:	add	x1, x1, #0x2c1
  42536c:	ldr	x2, [sp, #40]
  425370:	mov	w3, #0x59                  	// #89
  425374:	adrp	x4, 447000 <_fini+0x6c30>
  425378:	add	x4, x4, #0x639
  42537c:	bl	406c68 <log_assert_failed_realm@plt>
  425380:	adrp	x0, 441000 <_fini+0xc30>
  425384:	add	x0, x0, #0x5ff
  425388:	mov	w1, #0x1ed                 	// #493
  42538c:	mov	w8, wzr
  425390:	mov	w2, w8
  425394:	mov	w3, w8
  425398:	mov	w4, #0x2                   	// #2
  42539c:	bl	4076b8 <mkdir_safe_label@plt>
  4253a0:	stur	w0, [x29, #-36]
  4253a4:	ldur	w8, [x29, #-36]
  4253a8:	cmp	w8, #0x0
  4253ac:	cset	w8, ge  // ge = tcont
  4253b0:	tbnz	w8, #0, 4253b8 <inhibitor_save+0xb4>
  4253b4:	b	4255d8 <inhibitor_save+0x2d4>
  4253b8:	ldur	x8, [x29, #-16]
  4253bc:	ldr	x0, [x8, #24]
  4253c0:	sub	x1, x29, #0x20
  4253c4:	sub	x2, x29, #0x18
  4253c8:	bl	407958 <fopen_temporary@plt>
  4253cc:	stur	w0, [x29, #-36]
  4253d0:	ldur	w9, [x29, #-36]
  4253d4:	cmp	w9, #0x0
  4253d8:	cset	w9, ge  // ge = tcont
  4253dc:	tbnz	w9, #0, 4253e4 <inhibitor_save+0xe0>
  4253e0:	b	4255d8 <inhibitor_save+0x2d4>
  4253e4:	ldur	x0, [x29, #-32]
  4253e8:	bl	407968 <fileno@plt>
  4253ec:	mov	w1, #0x1a4                 	// #420
  4253f0:	bl	407978 <fchmod@plt>
  4253f4:	ldur	x8, [x29, #-32]
  4253f8:	ldur	x9, [x29, #-16]
  4253fc:	ldr	w10, [x9, #36]
  425400:	mov	w0, w10
  425404:	str	x8, [sp, #32]
  425408:	bl	426b8c <inhibit_what_to_string>
  42540c:	ldur	x8, [x29, #-16]
  425410:	ldr	w10, [x8, #56]
  425414:	str	x0, [sp, #24]
  425418:	mov	w0, w10
  42541c:	bl	4252a8 <inhibit_mode_to_string>
  425420:	ldur	x8, [x29, #-16]
  425424:	ldr	w4, [x8, #64]
  425428:	ldur	x8, [x29, #-16]
  42542c:	ldr	w5, [x8, #60]
  425430:	ldr	x8, [sp, #32]
  425434:	str	x0, [sp, #16]
  425438:	mov	x0, x8
  42543c:	adrp	x1, 447000 <_fini+0x6c30>
  425440:	add	x1, x1, #0x659
  425444:	ldr	x2, [sp, #24]
  425448:	ldr	x3, [sp, #16]
  42544c:	bl	407988 <fprintf@plt>
  425450:	ldur	x8, [x29, #-16]
  425454:	ldr	x8, [x8, #40]
  425458:	cbz	x8, 4254d0 <inhibitor_save+0x1cc>
  42545c:	mov	x8, xzr
  425460:	stur	x8, [x29, #-48]
  425464:	ldur	x8, [x29, #-16]
  425468:	ldr	x0, [x8, #40]
  42546c:	bl	4076c8 <cescape@plt>
  425470:	stur	x0, [x29, #-48]
  425474:	ldur	x8, [x29, #-48]
  425478:	cbnz	x8, 425490 <inhibitor_save+0x18c>
  42547c:	mov	w8, #0xfffffff4            	// #-12
  425480:	stur	w8, [x29, #-36]
  425484:	mov	w8, #0x4                   	// #4
  425488:	stur	w8, [x29, #-52]
  42548c:	b	4254a8 <inhibitor_save+0x1a4>
  425490:	ldur	x0, [x29, #-32]
  425494:	ldur	x2, [x29, #-48]
  425498:	adrp	x1, 447000 <_fini+0x6c30>
  42549c:	add	x1, x1, #0x69e
  4254a0:	bl	407988 <fprintf@plt>
  4254a4:	stur	wzr, [x29, #-52]
  4254a8:	sub	x0, x29, #0x30
  4254ac:	bl	425ffc <freep>
  4254b0:	ldur	w8, [x29, #-52]
  4254b4:	str	w8, [sp, #12]
  4254b8:	cbz	w8, 4254d0 <inhibitor_save+0x1cc>
  4254bc:	b	4254c0 <inhibitor_save+0x1bc>
  4254c0:	ldr	w8, [sp, #12]
  4254c4:	cmp	w8, #0x4
  4254c8:	b.eq	4255d8 <inhibitor_save+0x2d4>  // b.none
  4254cc:	b	425688 <inhibitor_save+0x384>
  4254d0:	ldur	x8, [x29, #-16]
  4254d4:	ldr	x8, [x8, #48]
  4254d8:	cbz	x8, 425550 <inhibitor_save+0x24c>
  4254dc:	mov	x8, xzr
  4254e0:	str	x8, [sp, #64]
  4254e4:	ldur	x8, [x29, #-16]
  4254e8:	ldr	x0, [x8, #48]
  4254ec:	bl	4076c8 <cescape@plt>
  4254f0:	str	x0, [sp, #64]
  4254f4:	ldr	x8, [sp, #64]
  4254f8:	cbnz	x8, 425510 <inhibitor_save+0x20c>
  4254fc:	mov	w8, #0xfffffff4            	// #-12
  425500:	stur	w8, [x29, #-36]
  425504:	mov	w8, #0x4                   	// #4
  425508:	stur	w8, [x29, #-52]
  42550c:	b	425528 <inhibitor_save+0x224>
  425510:	ldur	x0, [x29, #-32]
  425514:	ldr	x2, [sp, #64]
  425518:	adrp	x1, 447000 <_fini+0x6c30>
  42551c:	add	x1, x1, #0x6a6
  425520:	bl	407988 <fprintf@plt>
  425524:	stur	wzr, [x29, #-52]
  425528:	add	x0, sp, #0x40
  42552c:	bl	425ffc <freep>
  425530:	ldur	w8, [x29, #-52]
  425534:	str	w8, [sp, #8]
  425538:	cbz	w8, 425550 <inhibitor_save+0x24c>
  42553c:	b	425540 <inhibitor_save+0x23c>
  425540:	ldr	w8, [sp, #8]
  425544:	cmp	w8, #0x4
  425548:	b.eq	4255d8 <inhibitor_save+0x2d4>  // b.none
  42554c:	b	425688 <inhibitor_save+0x384>
  425550:	ldur	x8, [x29, #-16]
  425554:	ldr	x8, [x8, #88]
  425558:	cbz	x8, 425574 <inhibitor_save+0x270>
  42555c:	ldur	x0, [x29, #-32]
  425560:	ldur	x8, [x29, #-16]
  425564:	ldr	x2, [x8, #88]
  425568:	adrp	x1, 447000 <_fini+0x6c30>
  42556c:	add	x1, x1, #0x6ae
  425570:	bl	407988 <fprintf@plt>
  425574:	ldur	x0, [x29, #-32]
  425578:	bl	407998 <fflush_and_check@plt>
  42557c:	stur	w0, [x29, #-36]
  425580:	ldur	w8, [x29, #-36]
  425584:	cmp	w8, #0x0
  425588:	cset	w8, ge  // ge = tcont
  42558c:	tbnz	w8, #0, 425594 <inhibitor_save+0x290>
  425590:	b	4255d8 <inhibitor_save+0x2d4>
  425594:	ldur	x0, [x29, #-24]
  425598:	ldur	x8, [x29, #-16]
  42559c:	ldr	x1, [x8, #24]
  4255a0:	bl	4079a8 <rename@plt>
  4255a4:	cmp	w0, #0x0
  4255a8:	cset	w9, ge  // ge = tcont
  4255ac:	tbnz	w9, #0, 4255c8 <inhibitor_save+0x2c4>
  4255b0:	bl	406e08 <__errno_location@plt>
  4255b4:	ldr	w8, [x0]
  4255b8:	mov	w9, wzr
  4255bc:	subs	w8, w9, w8
  4255c0:	stur	w8, [x29, #-36]
  4255c4:	b	4255d8 <inhibitor_save+0x2d4>
  4255c8:	stur	wzr, [x29, #-4]
  4255cc:	mov	w8, #0x1                   	// #1
  4255d0:	stur	w8, [x29, #-52]
  4255d4:	b	425688 <inhibitor_save+0x384>
  4255d8:	ldur	x8, [x29, #-16]
  4255dc:	ldr	x0, [x8, #24]
  4255e0:	bl	4076e8 <unlink@plt>
  4255e4:	ldur	x8, [x29, #-24]
  4255e8:	cbz	x8, 4255f4 <inhibitor_save+0x2f0>
  4255ec:	ldur	x0, [x29, #-24]
  4255f0:	bl	4076e8 <unlink@plt>
  4255f4:	mov	w8, #0x3                   	// #3
  4255f8:	str	w8, [sp, #60]
  4255fc:	ldur	w8, [x29, #-36]
  425600:	str	w8, [sp, #56]
  425604:	str	wzr, [sp, #52]
  425608:	ldr	w0, [sp, #52]
  42560c:	bl	406c08 <log_get_max_level_realm@plt>
  425610:	ldr	w8, [sp, #60]
  425614:	and	w8, w8, #0x7
  425618:	cmp	w0, w8
  42561c:	b.lt	42565c <inhibitor_save+0x358>  // b.tstop
  425620:	ldr	w8, [sp, #52]
  425624:	ldr	w9, [sp, #60]
  425628:	orr	w0, w9, w8, lsl #10
  42562c:	ldr	w1, [sp, #56]
  425630:	ldur	x10, [x29, #-16]
  425634:	ldr	x6, [x10, #24]
  425638:	ldr	x2, [sp, #40]
  42563c:	mov	w3, #0x9c                  	// #156
  425640:	adrp	x4, 447000 <_fini+0x6c30>
  425644:	add	x4, x4, #0x6b7
  425648:	adrp	x5, 447000 <_fini+0x6c30>
  42564c:	add	x5, x5, #0x6c6
  425650:	bl	406c18 <log_internal_realm@plt>
  425654:	str	w0, [sp, #4]
  425658:	b	425670 <inhibitor_save+0x36c>
  42565c:	ldr	w0, [sp, #56]
  425660:	bl	406c28 <abs@plt>
  425664:	mov	w8, wzr
  425668:	subs	w8, w8, w0, uxtb
  42566c:	str	w8, [sp, #4]
  425670:	ldr	w8, [sp, #4]
  425674:	str	w8, [sp, #48]
  425678:	ldr	w8, [sp, #48]
  42567c:	stur	w8, [x29, #-4]
  425680:	mov	w8, #0x1                   	// #1
  425684:	stur	w8, [x29, #-52]
  425688:	sub	x0, x29, #0x20
  42568c:	bl	426dc4 <fclosep>
  425690:	sub	x0, x29, #0x18
  425694:	bl	425ffc <freep>
  425698:	ldur	w0, [x29, #-4]
  42569c:	ldp	x29, x30, [sp, #128]
  4256a0:	add	sp, sp, #0x90
  4256a4:	ret

00000000004256a8 <bus_manager_send_inhibited_change>:
  4256a8:	sub	sp, sp, #0x30
  4256ac:	stp	x29, x30, [sp, #32]
  4256b0:	add	x29, sp, #0x20
  4256b4:	adrp	x8, 447000 <_fini+0x6c30>
  4256b8:	add	x8, x8, #0x26a
  4256bc:	add	x2, x8, #0x3
  4256c0:	stur	x0, [x29, #-8]
  4256c4:	str	x2, [sp, #8]
  4256c8:	ldur	x8, [x29, #-8]
  4256cc:	cmp	x8, #0x0
  4256d0:	cset	w9, ne  // ne = any
  4256d4:	mov	w10, #0x1                   	// #1
  4256d8:	eor	w9, w9, #0x1
  4256dc:	eor	w9, w9, w10
  4256e0:	eor	w9, w9, w10
  4256e4:	and	w9, w9, #0x1
  4256e8:	mov	w0, w9
  4256ec:	sxtw	x8, w0
  4256f0:	cbz	x8, 425718 <bus_manager_send_inhibited_change+0x70>
  4256f4:	mov	w8, wzr
  4256f8:	mov	w0, w8
  4256fc:	adrp	x1, 447000 <_fini+0x6c30>
  425700:	add	x1, x1, #0x2c1
  425704:	ldr	x2, [sp, #8]
  425708:	mov	w3, #0xa2                  	// #162
  42570c:	adrp	x4, 447000 <_fini+0x6c30>
  425710:	add	x4, x4, #0x6e9
  425714:	bl	406c68 <log_assert_failed_realm@plt>
  425718:	ldur	x8, [x29, #-8]
  42571c:	ldr	w9, [x8, #56]
  425720:	adrp	x8, 443000 <_fini+0x2c30>
  425724:	add	x8, x8, #0x2b9
  425728:	adrp	x10, 443000 <_fini+0x2c30>
  42572c:	add	x10, x10, #0x2aa
  425730:	cmp	w9, #0x0
  425734:	csel	x8, x10, x8, eq  // eq = none
  425738:	str	x8, [sp, #16]
  42573c:	ldur	x8, [x29, #-8]
  425740:	ldr	x0, [x8]
  425744:	ldr	x1, [sp, #16]
  425748:	mov	x8, xzr
  42574c:	mov	x2, x8
  425750:	bl	41fe2c <manager_send_changed>
  425754:	ldp	x29, x30, [sp, #32]
  425758:	add	sp, sp, #0x30
  42575c:	ret

0000000000425760 <inhibitor_stop>:
  425760:	sub	sp, sp, #0x80
  425764:	stp	x29, x30, [sp, #112]
  425768:	add	x29, sp, #0x70
  42576c:	adrp	x8, 447000 <_fini+0x6c30>
  425770:	add	x8, x8, #0x26a
  425774:	add	x8, x8, #0x3
  425778:	stur	x0, [x29, #-8]
  42577c:	stur	x8, [x29, #-32]
  425780:	ldur	x8, [x29, #-8]
  425784:	cmp	x8, #0x0
  425788:	cset	w9, ne  // ne = any
  42578c:	mov	w10, #0x1                   	// #1
  425790:	eor	w9, w9, #0x1
  425794:	eor	w9, w9, w10
  425798:	eor	w9, w9, w10
  42579c:	and	w9, w9, #0x1
  4257a0:	mov	w0, w9
  4257a4:	sxtw	x8, w0
  4257a8:	cbz	x8, 4257d0 <inhibitor_stop+0x70>
  4257ac:	mov	w8, wzr
  4257b0:	mov	w0, w8
  4257b4:	adrp	x1, 447000 <_fini+0x6c30>
  4257b8:	add	x1, x1, #0x2c1
  4257bc:	ldur	x2, [x29, #-32]
  4257c0:	mov	w3, #0xc0                  	// #192
  4257c4:	adrp	x4, 447000 <_fini+0x6c30>
  4257c8:	add	x4, x4, #0x325
  4257cc:	bl	406c68 <log_assert_failed_realm@plt>
  4257d0:	ldur	x8, [x29, #-8]
  4257d4:	ldrb	w9, [x8, #32]
  4257d8:	tbnz	w9, #0, 4257e0 <inhibitor_stop+0x80>
  4257dc:	b	4258ec <inhibitor_stop+0x18c>
  4257e0:	mov	w8, #0x7                   	// #7
  4257e4:	stur	w8, [x29, #-12]
  4257e8:	stur	wzr, [x29, #-16]
  4257ec:	stur	wzr, [x29, #-20]
  4257f0:	ldur	w0, [x29, #-20]
  4257f4:	bl	406c08 <log_get_max_level_realm@plt>
  4257f8:	ldur	w8, [x29, #-12]
  4257fc:	and	w8, w8, #0x7
  425800:	cmp	w0, w8
  425804:	b.lt	4258d0 <inhibitor_stop+0x170>  // b.tstop
  425808:	ldur	w8, [x29, #-20]
  42580c:	ldur	w9, [x29, #-12]
  425810:	orr	w0, w9, w8, lsl #10
  425814:	ldur	w1, [x29, #-16]
  425818:	ldur	x10, [x29, #-8]
  42581c:	ldr	x10, [x10, #40]
  425820:	stur	w0, [x29, #-36]
  425824:	mov	x0, x10
  425828:	stur	w1, [x29, #-40]
  42582c:	bl	42526c <strna>
  425830:	ldur	x10, [x29, #-8]
  425834:	ldr	x10, [x10, #48]
  425838:	stur	x0, [x29, #-48]
  42583c:	mov	x0, x10
  425840:	bl	42526c <strna>
  425844:	ldur	x10, [x29, #-8]
  425848:	ldr	w8, [x10, #60]
  42584c:	ldur	x10, [x29, #-8]
  425850:	ldr	w9, [x10, #64]
  425854:	ldur	x10, [x29, #-8]
  425858:	ldr	w11, [x10, #56]
  42585c:	str	x0, [sp, #56]
  425860:	mov	w0, w11
  425864:	str	w8, [sp, #52]
  425868:	str	w9, [sp, #48]
  42586c:	bl	4252a8 <inhibit_mode_to_string>
  425870:	ldur	w8, [x29, #-36]
  425874:	str	x0, [sp, #40]
  425878:	mov	w0, w8
  42587c:	ldur	w1, [x29, #-40]
  425880:	ldur	x2, [x29, #-32]
  425884:	mov	w3, #0xc6                  	// #198
  425888:	adrp	x4, 447000 <_fini+0x6c30>
  42588c:	add	x4, x4, #0x346
  425890:	adrp	x5, 447000 <_fini+0x6c30>
  425894:	add	x5, x5, #0x355
  425898:	ldur	x6, [x29, #-48]
  42589c:	ldr	x7, [sp, #56]
  4258a0:	mov	x10, sp
  4258a4:	ldr	w9, [sp, #52]
  4258a8:	str	w9, [x10]
  4258ac:	mov	x10, sp
  4258b0:	ldr	w11, [sp, #48]
  4258b4:	str	w11, [x10, #8]
  4258b8:	mov	x10, sp
  4258bc:	ldr	x12, [sp, #40]
  4258c0:	str	x12, [x10, #16]
  4258c4:	bl	406c18 <log_internal_realm@plt>
  4258c8:	str	w0, [sp, #36]
  4258cc:	b	4258e4 <inhibitor_stop+0x184>
  4258d0:	ldur	w0, [x29, #-16]
  4258d4:	bl	406c28 <abs@plt>
  4258d8:	mov	w8, wzr
  4258dc:	subs	w8, w8, w0, uxtb
  4258e0:	str	w8, [sp, #36]
  4258e4:	ldr	w8, [sp, #36]
  4258e8:	stur	w8, [x29, #-24]
  4258ec:	ldur	x0, [x29, #-8]
  4258f0:	bl	42592c <inhibitor_remove_fifo>
  4258f4:	ldur	x8, [x29, #-8]
  4258f8:	ldr	x8, [x8, #24]
  4258fc:	cbz	x8, 42590c <inhibitor_stop+0x1ac>
  425900:	ldur	x8, [x29, #-8]
  425904:	ldr	x0, [x8, #24]
  425908:	bl	4076e8 <unlink@plt>
  42590c:	ldur	x8, [x29, #-8]
  425910:	mov	w9, #0x0                   	// #0
  425914:	strb	w9, [x8, #32]
  425918:	ldur	x0, [x29, #-8]
  42591c:	bl	4256a8 <bus_manager_send_inhibited_change>
  425920:	ldp	x29, x30, [sp, #112]
  425924:	add	sp, sp, #0x80
  425928:	ret

000000000042592c <inhibitor_remove_fifo>:
  42592c:	sub	sp, sp, #0x20
  425930:	stp	x29, x30, [sp, #16]
  425934:	add	x29, sp, #0x10
  425938:	adrp	x8, 447000 <_fini+0x6c30>
  42593c:	add	x8, x8, #0x26a
  425940:	add	x2, x8, #0x3
  425944:	str	x0, [sp, #8]
  425948:	str	x2, [sp]
  42594c:	ldr	x8, [sp, #8]
  425950:	cmp	x8, #0x0
  425954:	cset	w9, ne  // ne = any
  425958:	mov	w10, #0x1                   	// #1
  42595c:	eor	w9, w9, #0x1
  425960:	eor	w9, w9, w10
  425964:	eor	w9, w9, w10
  425968:	and	w9, w9, #0x1
  42596c:	mov	w0, w9
  425970:	sxtw	x8, w0
  425974:	cbz	x8, 42599c <inhibitor_remove_fifo+0x70>
  425978:	mov	w8, wzr
  42597c:	mov	w0, w8
  425980:	adrp	x1, 447000 <_fini+0x6c30>
  425984:	add	x1, x1, #0x2c1
  425988:	ldr	x2, [sp]
  42598c:	mov	w3, #0x158                 	// #344
  425990:	adrp	x4, 447000 <_fini+0x6c30>
  425994:	add	x4, x4, #0x773
  425998:	bl	406c68 <log_assert_failed_realm@plt>
  42599c:	ldr	x8, [sp, #8]
  4259a0:	ldr	x0, [x8, #8]
  4259a4:	bl	406d28 <sd_event_source_unref@plt>
  4259a8:	ldr	x8, [sp, #8]
  4259ac:	str	x0, [x8, #8]
  4259b0:	ldr	x8, [sp, #8]
  4259b4:	ldr	w0, [x8, #96]
  4259b8:	bl	406d38 <safe_close@plt>
  4259bc:	ldr	x8, [sp, #8]
  4259c0:	str	w0, [x8, #96]
  4259c4:	ldr	x8, [sp, #8]
  4259c8:	ldr	x8, [x8, #88]
  4259cc:	cbz	x8, 4259f4 <inhibitor_remove_fifo+0xc8>
  4259d0:	ldr	x8, [sp, #8]
  4259d4:	ldr	x0, [x8, #88]
  4259d8:	bl	4076e8 <unlink@plt>
  4259dc:	ldr	x8, [sp, #8]
  4259e0:	ldr	x8, [x8, #88]
  4259e4:	mov	x0, x8
  4259e8:	bl	425064 <mfree>
  4259ec:	ldr	x8, [sp, #8]
  4259f0:	str	x0, [x8, #88]
  4259f4:	ldp	x29, x30, [sp, #16]
  4259f8:	add	sp, sp, #0x20
  4259fc:	ret

0000000000425a00 <inhibitor_load>:
  425a00:	sub	sp, sp, #0x160
  425a04:	stp	x29, x30, [sp, #304]
  425a08:	str	x28, [sp, #320]
  425a0c:	stp	x20, x19, [sp, #336]
  425a10:	add	x29, sp, #0x130
  425a14:	sub	x8, x29, #0x20
  425a18:	mov	x9, xzr
  425a1c:	mov	x1, x9
  425a20:	adrp	x2, 447000 <_fini+0x6c30>
  425a24:	add	x2, x2, #0x386
  425a28:	adrp	x4, 447000 <_fini+0x6c30>
  425a2c:	add	x4, x4, #0x38b
  425a30:	adrp	x6, 447000 <_fini+0x6c30>
  425a34:	add	x6, x6, #0x38f
  425a38:	adrp	x10, 447000 <_fini+0x6c30>
  425a3c:	add	x10, x10, #0x393
  425a40:	adrp	x11, 447000 <_fini+0x6c30>
  425a44:	add	x11, x11, #0x397
  425a48:	adrp	x12, 447000 <_fini+0x6c30>
  425a4c:	add	x12, x12, #0x39b
  425a50:	adrp	x13, 447000 <_fini+0x6c30>
  425a54:	add	x13, x13, #0x3a0
  425a58:	adrp	x14, 447000 <_fini+0x6c30>
  425a5c:	add	x14, x14, #0x26a
  425a60:	add	x14, x14, #0x3
  425a64:	adrp	x15, 447000 <_fini+0x6c30>
  425a68:	add	x15, x15, #0x3a5
  425a6c:	sub	x3, x29, #0x18
  425a70:	sub	x5, x29, #0x20
  425a74:	sub	x7, x29, #0x28
  425a78:	sub	x16, x29, #0x30
  425a7c:	sub	x17, x29, #0x38
  425a80:	sub	x18, x29, #0x40
  425a84:	str	x0, [x8, #16]
  425a88:	str	x9, [x8, #8]
  425a8c:	str	x9, [x8]
  425a90:	stur	x9, [x29, #-40]
  425a94:	stur	x9, [x29, #-48]
  425a98:	stur	x9, [x29, #-56]
  425a9c:	stur	x9, [x29, #-64]
  425aa0:	ldr	x0, [x8, #16]
  425aa4:	ldr	x0, [x0, #24]
  425aa8:	ldr	x19, [x8, #16]
  425aac:	add	x19, x19, #0x58
  425ab0:	str	x0, [sp, #128]
  425ab4:	mov	x0, x1
  425ab8:	ldr	x1, [sp, #128]
  425abc:	mov	x20, sp
  425ac0:	str	x10, [x20]
  425ac4:	mov	x10, sp
  425ac8:	str	x16, [x10, #8]
  425acc:	mov	x10, sp
  425ad0:	str	x11, [x10, #16]
  425ad4:	mov	x10, sp
  425ad8:	str	x17, [x10, #24]
  425adc:	mov	x10, sp
  425ae0:	str	x12, [x10, #32]
  425ae4:	mov	x10, sp
  425ae8:	str	x18, [x10, #40]
  425aec:	mov	x10, sp
  425af0:	str	x13, [x10, #48]
  425af4:	mov	x10, sp
  425af8:	str	x19, [x10, #56]
  425afc:	mov	x10, sp
  425b00:	str	x9, [x10, #64]
  425b04:	str	x8, [sp, #120]
  425b08:	str	x14, [sp, #112]
  425b0c:	str	x15, [sp, #104]
  425b10:	bl	4079f8 <parse_env_file_sentinel@plt>
  425b14:	stur	w0, [x29, #-84]
  425b18:	ldur	w0, [x29, #-84]
  425b1c:	cmp	w0, #0x0
  425b20:	cset	w0, ge  // ge = tcont
  425b24:	tbnz	w0, #0, 425bc0 <inhibitor_load+0x1c0>
  425b28:	mov	w8, #0x3                   	// #3
  425b2c:	stur	w8, [x29, #-88]
  425b30:	ldur	w8, [x29, #-84]
  425b34:	stur	w8, [x29, #-92]
  425b38:	stur	wzr, [x29, #-96]
  425b3c:	ldur	w0, [x29, #-96]
  425b40:	bl	406c08 <log_get_max_level_realm@plt>
  425b44:	ldur	w8, [x29, #-88]
  425b48:	and	w8, w8, #0x7
  425b4c:	cmp	w0, w8
  425b50:	b.lt	425b90 <inhibitor_load+0x190>  // b.tstop
  425b54:	ldur	w8, [x29, #-96]
  425b58:	ldur	w9, [x29, #-88]
  425b5c:	orr	w0, w9, w8, lsl #10
  425b60:	ldur	w1, [x29, #-92]
  425b64:	ldr	x10, [sp, #120]
  425b68:	ldr	x11, [x10, #16]
  425b6c:	ldr	x6, [x11, #24]
  425b70:	ldr	x2, [sp, #112]
  425b74:	mov	w3, #0xea                  	// #234
  425b78:	ldr	x4, [sp, #104]
  425b7c:	adrp	x5, 447000 <_fini+0x6c30>
  425b80:	add	x5, x5, #0x3b4
  425b84:	bl	406c18 <log_internal_realm@plt>
  425b88:	str	w0, [sp, #100]
  425b8c:	b	425ba4 <inhibitor_load+0x1a4>
  425b90:	ldur	w0, [x29, #-92]
  425b94:	bl	406c28 <abs@plt>
  425b98:	mov	w8, wzr
  425b9c:	subs	w8, w8, w0, uxtb
  425ba0:	str	w8, [sp, #100]
  425ba4:	ldr	w8, [sp, #100]
  425ba8:	stur	w8, [x29, #-100]
  425bac:	ldur	w8, [x29, #-100]
  425bb0:	stur	w8, [x29, #-4]
  425bb4:	mov	w8, #0x1                   	// #1
  425bb8:	stur	w8, [x29, #-104]
  425bbc:	b	425fb4 <inhibitor_load+0x5b4>
  425bc0:	ldr	x8, [sp, #120]
  425bc4:	ldr	x9, [x8, #8]
  425bc8:	cbz	x9, 425be0 <inhibitor_load+0x1e0>
  425bcc:	ldr	x8, [sp, #120]
  425bd0:	ldr	x0, [x8, #8]
  425bd4:	bl	426024 <inhibit_what_from_string>
  425bd8:	str	w0, [sp, #96]
  425bdc:	b	425be8 <inhibitor_load+0x1e8>
  425be0:	mov	w8, wzr
  425be4:	str	w8, [sp, #96]
  425be8:	ldr	w8, [sp, #96]
  425bec:	stur	w8, [x29, #-68]
  425bf0:	ldur	w8, [x29, #-68]
  425bf4:	cmp	w8, #0x0
  425bf8:	cset	w8, lt  // lt = tstop
  425bfc:	tbnz	w8, #0, 425c10 <inhibitor_load+0x210>
  425c00:	ldur	w8, [x29, #-68]
  425c04:	ldr	x9, [sp, #120]
  425c08:	ldr	x10, [x9, #16]
  425c0c:	str	w8, [x10, #36]
  425c10:	ldur	x8, [x29, #-64]
  425c14:	cbz	x8, 425c28 <inhibitor_load+0x228>
  425c18:	ldur	x0, [x29, #-64]
  425c1c:	bl	426220 <inhibit_mode_from_string>
  425c20:	str	w0, [sp, #92]
  425c24:	b	425c30 <inhibitor_load+0x230>
  425c28:	mov	w8, wzr
  425c2c:	str	w8, [sp, #92]
  425c30:	ldr	w8, [sp, #92]
  425c34:	stur	w8, [x29, #-72]
  425c38:	ldur	w8, [x29, #-72]
  425c3c:	cmp	w8, #0x0
  425c40:	cset	w8, lt  // lt = tstop
  425c44:	tbnz	w8, #0, 425c58 <inhibitor_load+0x258>
  425c48:	ldur	w8, [x29, #-72]
  425c4c:	ldr	x9, [sp, #120]
  425c50:	ldr	x10, [x9, #16]
  425c54:	str	w8, [x10, #56]
  425c58:	ldr	x8, [sp, #120]
  425c5c:	ldr	x9, [x8]
  425c60:	cbz	x9, 425d0c <inhibitor_load+0x30c>
  425c64:	ldr	x8, [sp, #120]
  425c68:	ldr	x0, [x8]
  425c6c:	ldr	x9, [x8, #16]
  425c70:	add	x1, x9, #0x40
  425c74:	bl	407a08 <parse_uid@plt>
  425c78:	stur	w0, [x29, #-84]
  425c7c:	ldur	w10, [x29, #-84]
  425c80:	cmp	w10, #0x0
  425c84:	cset	w10, ge  // ge = tcont
  425c88:	tbnz	w10, #0, 425d0c <inhibitor_load+0x30c>
  425c8c:	mov	w8, #0x7                   	// #7
  425c90:	stur	w8, [x29, #-108]
  425c94:	ldur	w8, [x29, #-84]
  425c98:	stur	w8, [x29, #-112]
  425c9c:	stur	wzr, [x29, #-116]
  425ca0:	ldur	w0, [x29, #-116]
  425ca4:	bl	406c08 <log_get_max_level_realm@plt>
  425ca8:	ldur	w8, [x29, #-108]
  425cac:	and	w8, w8, #0x7
  425cb0:	cmp	w0, w8
  425cb4:	b.lt	425cf0 <inhibitor_load+0x2f0>  // b.tstop
  425cb8:	ldur	w8, [x29, #-116]
  425cbc:	ldur	w9, [x29, #-108]
  425cc0:	orr	w0, w9, w8, lsl #10
  425cc4:	ldur	w1, [x29, #-112]
  425cc8:	ldr	x10, [sp, #120]
  425ccc:	ldr	x6, [x10]
  425cd0:	ldr	x2, [sp, #112]
  425cd4:	mov	w3, #0xf7                  	// #247
  425cd8:	ldr	x4, [sp, #104]
  425cdc:	adrp	x5, 447000 <_fini+0x6c30>
  425ce0:	add	x5, x5, #0x3ca
  425ce4:	bl	406c18 <log_internal_realm@plt>
  425ce8:	str	w0, [sp, #88]
  425cec:	b	425d04 <inhibitor_load+0x304>
  425cf0:	ldur	w0, [x29, #-112]
  425cf4:	bl	406c28 <abs@plt>
  425cf8:	mov	w8, wzr
  425cfc:	subs	w8, w8, w0, uxtb
  425d00:	str	w8, [sp, #88]
  425d04:	ldr	w8, [sp, #88]
  425d08:	stur	w8, [x29, #-120]
  425d0c:	ldur	x8, [x29, #-40]
  425d10:	cbz	x8, 425db8 <inhibitor_load+0x3b8>
  425d14:	ldur	x0, [x29, #-40]
  425d18:	ldr	x8, [sp, #120]
  425d1c:	ldr	x9, [x8, #16]
  425d20:	add	x1, x9, #0x3c
  425d24:	bl	407a18 <parse_pid@plt>
  425d28:	stur	w0, [x29, #-84]
  425d2c:	ldur	w10, [x29, #-84]
  425d30:	cmp	w10, #0x0
  425d34:	cset	w10, ge  // ge = tcont
  425d38:	tbnz	w10, #0, 425db8 <inhibitor_load+0x3b8>
  425d3c:	mov	w8, #0x7                   	// #7
  425d40:	stur	w8, [x29, #-124]
  425d44:	ldur	w8, [x29, #-84]
  425d48:	stur	w8, [x29, #-128]
  425d4c:	stur	wzr, [x29, #-132]
  425d50:	ldur	w0, [x29, #-132]
  425d54:	bl	406c08 <log_get_max_level_realm@plt>
  425d58:	ldur	w8, [x29, #-124]
  425d5c:	and	w8, w8, #0x7
  425d60:	cmp	w0, w8
  425d64:	b.lt	425d9c <inhibitor_load+0x39c>  // b.tstop
  425d68:	ldur	w8, [x29, #-132]
  425d6c:	ldur	w9, [x29, #-124]
  425d70:	orr	w0, w9, w8, lsl #10
  425d74:	ldur	w1, [x29, #-128]
  425d78:	ldur	x6, [x29, #-40]
  425d7c:	ldr	x2, [sp, #112]
  425d80:	mov	w3, #0xfd                  	// #253
  425d84:	ldr	x4, [sp, #104]
  425d88:	adrp	x5, 447000 <_fini+0x6c30>
  425d8c:	add	x5, x5, #0x3ef
  425d90:	bl	406c18 <log_internal_realm@plt>
  425d94:	str	w0, [sp, #84]
  425d98:	b	425db0 <inhibitor_load+0x3b0>
  425d9c:	ldur	w0, [x29, #-128]
  425da0:	bl	406c28 <abs@plt>
  425da4:	mov	w8, wzr
  425da8:	subs	w8, w8, w0, uxtb
  425dac:	str	w8, [sp, #84]
  425db0:	ldr	w8, [sp, #84]
  425db4:	stur	w8, [x29, #-136]
  425db8:	ldur	x8, [x29, #-48]
  425dbc:	cbz	x8, 425e3c <inhibitor_load+0x43c>
  425dc0:	ldur	x0, [x29, #-48]
  425dc4:	mov	w8, wzr
  425dc8:	mov	w1, w8
  425dcc:	sub	x2, x29, #0x50
  425dd0:	bl	407a28 <cunescape@plt>
  425dd4:	stur	w0, [x29, #-84]
  425dd8:	ldur	w8, [x29, #-84]
  425ddc:	cmp	w8, #0x0
  425de0:	cset	w8, ge  // ge = tcont
  425de4:	tbnz	w8, #0, 425e10 <inhibitor_load+0x410>
  425de8:	mov	w8, wzr
  425dec:	mov	w0, w8
  425df0:	ldr	x1, [sp, #112]
  425df4:	mov	w2, #0x103                 	// #259
  425df8:	ldr	x3, [sp, #104]
  425dfc:	bl	407008 <log_oom_internal@plt>
  425e00:	stur	w0, [x29, #-4]
  425e04:	mov	w8, #0x1                   	// #1
  425e08:	stur	w8, [x29, #-104]
  425e0c:	b	425fb4 <inhibitor_load+0x5b4>
  425e10:	ldr	x8, [sp, #120]
  425e14:	ldr	x9, [x8, #16]
  425e18:	ldr	x0, [x9, #40]
  425e1c:	bl	406da8 <free@plt>
  425e20:	ldur	x8, [x29, #-80]
  425e24:	ldr	x9, [sp, #120]
  425e28:	ldr	x10, [x9, #16]
  425e2c:	str	x8, [x10, #40]
  425e30:	mov	x8, xzr
  425e34:	stur	x8, [x29, #-80]
  425e38:	stur	wzr, [x29, #-140]
  425e3c:	ldur	x8, [x29, #-56]
  425e40:	cbz	x8, 425ec0 <inhibitor_load+0x4c0>
  425e44:	ldur	x0, [x29, #-56]
  425e48:	mov	w8, wzr
  425e4c:	mov	w1, w8
  425e50:	sub	x2, x29, #0x50
  425e54:	bl	407a28 <cunescape@plt>
  425e58:	stur	w0, [x29, #-84]
  425e5c:	ldur	w8, [x29, #-84]
  425e60:	cmp	w8, #0x0
  425e64:	cset	w8, ge  // ge = tcont
  425e68:	tbnz	w8, #0, 425e94 <inhibitor_load+0x494>
  425e6c:	mov	w8, wzr
  425e70:	mov	w0, w8
  425e74:	ldr	x1, [sp, #112]
  425e78:	mov	w2, #0x10b                 	// #267
  425e7c:	ldr	x3, [sp, #104]
  425e80:	bl	407008 <log_oom_internal@plt>
  425e84:	stur	w0, [x29, #-4]
  425e88:	mov	w8, #0x1                   	// #1
  425e8c:	stur	w8, [x29, #-104]
  425e90:	b	425fb4 <inhibitor_load+0x5b4>
  425e94:	ldr	x8, [sp, #120]
  425e98:	ldr	x9, [x8, #16]
  425e9c:	ldr	x0, [x9, #48]
  425ea0:	bl	406da8 <free@plt>
  425ea4:	ldur	x8, [x29, #-80]
  425ea8:	ldr	x9, [sp, #120]
  425eac:	ldr	x10, [x9, #16]
  425eb0:	str	x8, [x10, #48]
  425eb4:	mov	x8, xzr
  425eb8:	stur	x8, [x29, #-80]
  425ebc:	stur	wzr, [x29, #-144]
  425ec0:	ldr	x8, [sp, #120]
  425ec4:	ldr	x9, [x8, #16]
  425ec8:	ldr	x9, [x9, #88]
  425ecc:	cbz	x9, 425fa8 <inhibitor_load+0x5a8>
  425ed0:	mov	w8, #0xffffffff            	// #-1
  425ed4:	stur	w8, [x29, #-148]
  425ed8:	ldr	x9, [sp, #120]
  425edc:	ldr	x0, [x9, #16]
  425ee0:	bl	42627c <inhibitor_create_fifo>
  425ee4:	stur	w0, [x29, #-148]
  425ee8:	ldur	w8, [x29, #-148]
  425eec:	cmp	w8, #0x0
  425ef0:	cset	w8, ge  // ge = tcont
  425ef4:	tbnz	w8, #0, 425f84 <inhibitor_load+0x584>
  425ef8:	mov	w8, #0x3                   	// #3
  425efc:	str	w8, [sp, #152]
  425f00:	ldur	w8, [x29, #-148]
  425f04:	str	w8, [sp, #148]
  425f08:	str	wzr, [sp, #144]
  425f0c:	ldr	w0, [sp, #144]
  425f10:	bl	406c08 <log_get_max_level_realm@plt>
  425f14:	ldr	w8, [sp, #152]
  425f18:	and	w8, w8, #0x7
  425f1c:	cmp	w0, w8
  425f20:	b.lt	425f54 <inhibitor_load+0x554>  // b.tstop
  425f24:	ldr	w8, [sp, #144]
  425f28:	ldr	w9, [sp, #152]
  425f2c:	orr	w0, w9, w8, lsl #10
  425f30:	ldr	w1, [sp, #148]
  425f34:	ldr	x2, [sp, #112]
  425f38:	mov	w3, #0x116                 	// #278
  425f3c:	ldr	x4, [sp, #104]
  425f40:	adrp	x5, 447000 <_fini+0x6c30>
  425f44:	add	x5, x5, #0x414
  425f48:	bl	406c18 <log_internal_realm@plt>
  425f4c:	str	w0, [sp, #80]
  425f50:	b	425f68 <inhibitor_load+0x568>
  425f54:	ldr	w0, [sp, #148]
  425f58:	bl	406c28 <abs@plt>
  425f5c:	mov	w8, wzr
  425f60:	subs	w8, w8, w0, uxtb
  425f64:	str	w8, [sp, #80]
  425f68:	ldr	w8, [sp, #80]
  425f6c:	str	w8, [sp, #140]
  425f70:	ldr	w8, [sp, #140]
  425f74:	stur	w8, [x29, #-4]
  425f78:	mov	w8, #0x1                   	// #1
  425f7c:	stur	w8, [x29, #-104]
  425f80:	b	425f88 <inhibitor_load+0x588>
  425f84:	stur	wzr, [x29, #-104]
  425f88:	sub	x0, x29, #0x94
  425f8c:	bl	426254 <closep>
  425f90:	ldur	w8, [x29, #-104]
  425f94:	cmp	w8, #0x0
  425f98:	cset	w8, eq  // eq = none
  425f9c:	eor	w8, w8, #0x1
  425fa0:	tbnz	w8, #0, 425fb4 <inhibitor_load+0x5b4>
  425fa4:	b	425fa8 <inhibitor_load+0x5a8>
  425fa8:	stur	wzr, [x29, #-4]
  425fac:	mov	w8, #0x1                   	// #1
  425fb0:	stur	w8, [x29, #-104]
  425fb4:	sub	x0, x29, #0x40
  425fb8:	bl	425ffc <freep>
  425fbc:	sub	x0, x29, #0x38
  425fc0:	bl	425ffc <freep>
  425fc4:	sub	x0, x29, #0x30
  425fc8:	bl	425ffc <freep>
  425fcc:	sub	x0, x29, #0x28
  425fd0:	bl	425ffc <freep>
  425fd4:	sub	x0, x29, #0x20
  425fd8:	bl	425ffc <freep>
  425fdc:	sub	x0, x29, #0x18
  425fe0:	bl	425ffc <freep>
  425fe4:	ldur	w0, [x29, #-4]
  425fe8:	ldp	x20, x19, [sp, #336]
  425fec:	ldr	x28, [sp, #320]
  425ff0:	ldp	x29, x30, [sp, #304]
  425ff4:	add	sp, sp, #0x160
  425ff8:	ret

0000000000425ffc <freep>:
  425ffc:	sub	sp, sp, #0x20
  426000:	stp	x29, x30, [sp, #16]
  426004:	add	x29, sp, #0x10
  426008:	str	x0, [sp, #8]
  42600c:	ldr	x8, [sp, #8]
  426010:	ldr	x0, [x8]
  426014:	bl	406da8 <free@plt>
  426018:	ldp	x29, x30, [sp, #16]
  42601c:	add	sp, sp, #0x20
  426020:	ret

0000000000426024 <inhibit_what_from_string>:
  426024:	sub	sp, sp, #0x40
  426028:	stp	x29, x30, [sp, #48]
  42602c:	add	x29, sp, #0x30
  426030:	mov	w8, wzr
  426034:	adrp	x2, 447000 <_fini+0x6c30>
  426038:	add	x2, x2, #0x5d8
  42603c:	add	x9, sp, #0x8
  426040:	mov	x1, sp
  426044:	stur	x0, [x29, #-16]
  426048:	stur	wzr, [x29, #-20]
  42604c:	ldur	x10, [x29, #-16]
  426050:	str	x10, [sp, #8]
  426054:	mov	x0, x9
  426058:	mov	w3, w8
  42605c:	bl	407a38 <split@plt>
  426060:	str	x0, [sp, #16]
  426064:	ldr	x8, [sp, #16]
  426068:	cbz	x8, 426208 <inhibit_what_from_string+0x1e4>
  42606c:	ldr	x8, [sp]
  426070:	cmp	x8, #0x8
  426074:	b.ne	4260a0 <inhibit_what_from_string+0x7c>  // b.any
  426078:	ldr	x0, [sp, #16]
  42607c:	ldr	x2, [sp]
  426080:	adrp	x1, 447000 <_fini+0x6c30>
  426084:	add	x1, x1, #0x5da
  426088:	bl	4070b8 <strncmp@plt>
  42608c:	cbnz	w0, 4260a0 <inhibit_what_from_string+0x7c>
  426090:	ldur	w8, [x29, #-20]
  426094:	orr	w8, w8, #0x1
  426098:	stur	w8, [x29, #-20]
  42609c:	b	4261e4 <inhibit_what_from_string+0x1c0>
  4260a0:	ldr	x8, [sp]
  4260a4:	cmp	x8, #0x5
  4260a8:	b.ne	4260d4 <inhibit_what_from_string+0xb0>  // b.any
  4260ac:	ldr	x0, [sp, #16]
  4260b0:	ldr	x2, [sp]
  4260b4:	adrp	x1, 447000 <_fini+0x6c30>
  4260b8:	add	x1, x1, #0x5e3
  4260bc:	bl	4070b8 <strncmp@plt>
  4260c0:	cbnz	w0, 4260d4 <inhibit_what_from_string+0xb0>
  4260c4:	ldur	w8, [x29, #-20]
  4260c8:	orr	w8, w8, #0x2
  4260cc:	stur	w8, [x29, #-20]
  4260d0:	b	4261e4 <inhibit_what_from_string+0x1c0>
  4260d4:	ldr	x8, [sp]
  4260d8:	cmp	x8, #0x4
  4260dc:	b.ne	426108 <inhibit_what_from_string+0xe4>  // b.any
  4260e0:	ldr	x0, [sp, #16]
  4260e4:	ldr	x2, [sp]
  4260e8:	adrp	x1, 447000 <_fini+0x6c30>
  4260ec:	add	x1, x1, #0x5e9
  4260f0:	bl	4070b8 <strncmp@plt>
  4260f4:	cbnz	w0, 426108 <inhibit_what_from_string+0xe4>
  4260f8:	ldur	w8, [x29, #-20]
  4260fc:	orr	w8, w8, #0x4
  426100:	stur	w8, [x29, #-20]
  426104:	b	4261e4 <inhibit_what_from_string+0x1c0>
  426108:	ldr	x8, [sp]
  42610c:	cmp	x8, #0x10
  426110:	b.ne	42613c <inhibit_what_from_string+0x118>  // b.any
  426114:	ldr	x0, [sp, #16]
  426118:	ldr	x2, [sp]
  42611c:	adrp	x1, 447000 <_fini+0x6c30>
  426120:	add	x1, x1, #0x5ee
  426124:	bl	4070b8 <strncmp@plt>
  426128:	cbnz	w0, 42613c <inhibit_what_from_string+0x118>
  42612c:	ldur	w8, [x29, #-20]
  426130:	orr	w8, w8, #0x8
  426134:	stur	w8, [x29, #-20]
  426138:	b	4261e4 <inhibit_what_from_string+0x1c0>
  42613c:	ldr	x8, [sp]
  426140:	cmp	x8, #0x12
  426144:	b.ne	426170 <inhibit_what_from_string+0x14c>  // b.any
  426148:	ldr	x0, [sp, #16]
  42614c:	ldr	x2, [sp]
  426150:	adrp	x1, 447000 <_fini+0x6c30>
  426154:	add	x1, x1, #0x5ff
  426158:	bl	4070b8 <strncmp@plt>
  42615c:	cbnz	w0, 426170 <inhibit_what_from_string+0x14c>
  426160:	ldur	w8, [x29, #-20]
  426164:	orr	w8, w8, #0x10
  426168:	stur	w8, [x29, #-20]
  42616c:	b	4261e4 <inhibit_what_from_string+0x1c0>
  426170:	ldr	x8, [sp]
  426174:	cmp	x8, #0x14
  426178:	b.ne	4261a4 <inhibit_what_from_string+0x180>  // b.any
  42617c:	ldr	x0, [sp, #16]
  426180:	ldr	x2, [sp]
  426184:	adrp	x1, 447000 <_fini+0x6c30>
  426188:	add	x1, x1, #0x612
  42618c:	bl	4070b8 <strncmp@plt>
  426190:	cbnz	w0, 4261a4 <inhibit_what_from_string+0x180>
  426194:	ldur	w8, [x29, #-20]
  426198:	orr	w8, w8, #0x20
  42619c:	stur	w8, [x29, #-20]
  4261a0:	b	4261e4 <inhibit_what_from_string+0x1c0>
  4261a4:	ldr	x8, [sp]
  4261a8:	cmp	x8, #0x11
  4261ac:	b.ne	4261d8 <inhibit_what_from_string+0x1b4>  // b.any
  4261b0:	ldr	x0, [sp, #16]
  4261b4:	ldr	x2, [sp]
  4261b8:	adrp	x1, 447000 <_fini+0x6c30>
  4261bc:	add	x1, x1, #0x627
  4261c0:	bl	4070b8 <strncmp@plt>
  4261c4:	cbnz	w0, 4261d8 <inhibit_what_from_string+0x1b4>
  4261c8:	ldur	w8, [x29, #-20]
  4261cc:	orr	w8, w8, #0x40
  4261d0:	stur	w8, [x29, #-20]
  4261d4:	b	4261e4 <inhibit_what_from_string+0x1c0>
  4261d8:	mov	w8, #0xffffffff            	// #-1
  4261dc:	stur	w8, [x29, #-4]
  4261e0:	b	426210 <inhibit_what_from_string+0x1ec>
  4261e4:	add	x0, sp, #0x8
  4261e8:	mov	x1, sp
  4261ec:	adrp	x2, 447000 <_fini+0x6c30>
  4261f0:	add	x2, x2, #0x5d8
  4261f4:	mov	w8, wzr
  4261f8:	mov	w3, w8
  4261fc:	bl	407a38 <split@plt>
  426200:	str	x0, [sp, #16]
  426204:	b	426064 <inhibit_what_from_string+0x40>
  426208:	ldur	w8, [x29, #-20]
  42620c:	stur	w8, [x29, #-4]
  426210:	ldur	w0, [x29, #-4]
  426214:	ldp	x29, x30, [sp, #48]
  426218:	add	sp, sp, #0x40
  42621c:	ret

0000000000426220 <inhibit_mode_from_string>:
  426220:	sub	sp, sp, #0x20
  426224:	stp	x29, x30, [sp, #16]
  426228:	add	x29, sp, #0x10
  42622c:	adrp	x8, 45d000 <manager_vtable+0xbf8>
  426230:	add	x8, x8, #0xa20
  426234:	mov	x1, #0x2                   	// #2
  426238:	str	x0, [sp, #8]
  42623c:	ldr	x2, [sp, #8]
  426240:	mov	x0, x8
  426244:	bl	4071f8 <string_table_lookup@plt>
  426248:	ldp	x29, x30, [sp, #16]
  42624c:	add	sp, sp, #0x20
  426250:	ret

0000000000426254 <closep>:
  426254:	sub	sp, sp, #0x20
  426258:	stp	x29, x30, [sp, #16]
  42625c:	add	x29, sp, #0x10
  426260:	str	x0, [sp, #8]
  426264:	ldr	x8, [sp, #8]
  426268:	ldr	w0, [x8]
  42626c:	bl	406d38 <safe_close@plt>
  426270:	ldp	x29, x30, [sp, #16]
  426274:	add	sp, sp, #0x20
  426278:	ret

000000000042627c <inhibitor_create_fifo>:
  42627c:	sub	sp, sp, #0x30
  426280:	stp	x29, x30, [sp, #32]
  426284:	add	x29, sp, #0x20
  426288:	adrp	x8, 447000 <_fini+0x6c30>
  42628c:	add	x8, x8, #0x26a
  426290:	add	x2, x8, #0x3
  426294:	str	x0, [sp, #16]
  426298:	str	x2, [sp]
  42629c:	ldr	x8, [sp, #16]
  4262a0:	cmp	x8, #0x0
  4262a4:	cset	w9, ne  // ne = any
  4262a8:	mov	w10, #0x1                   	// #1
  4262ac:	eor	w9, w9, #0x1
  4262b0:	eor	w9, w9, w10
  4262b4:	eor	w9, w9, w10
  4262b8:	and	w9, w9, #0x1
  4262bc:	mov	w0, w9
  4262c0:	sxtw	x8, w0
  4262c4:	cbz	x8, 4262ec <inhibitor_create_fifo+0x70>
  4262c8:	mov	w8, wzr
  4262cc:	mov	w0, w8
  4262d0:	adrp	x1, 447000 <_fini+0x6c30>
  4262d4:	add	x1, x1, #0x2c1
  4262d8:	ldr	x2, [sp]
  4262dc:	mov	w3, #0x12c                 	// #300
  4262e0:	adrp	x4, 447000 <_fini+0x6c30>
  4262e4:	add	x4, x4, #0x42e
  4262e8:	bl	406c68 <log_assert_failed_realm@plt>
  4262ec:	ldr	x8, [sp, #16]
  4262f0:	ldr	x8, [x8, #88]
  4262f4:	cbnz	x8, 4263c0 <inhibitor_create_fifo+0x144>
  4262f8:	adrp	x0, 441000 <_fini+0xc30>
  4262fc:	add	x0, x0, #0x5ff
  426300:	mov	w1, #0x1ed                 	// #493
  426304:	mov	w8, wzr
  426308:	mov	w2, w8
  42630c:	mov	w3, w8
  426310:	mov	w4, #0x2                   	// #2
  426314:	bl	4076b8 <mkdir_safe_label@plt>
  426318:	str	w0, [sp, #12]
  42631c:	ldr	w8, [sp, #12]
  426320:	cmp	w8, #0x0
  426324:	cset	w8, ge  // ge = tcont
  426328:	tbnz	w8, #0, 426338 <inhibitor_create_fifo+0xbc>
  42632c:	ldr	w8, [sp, #12]
  426330:	stur	w8, [x29, #-4]
  426334:	b	426508 <inhibitor_create_fifo+0x28c>
  426338:	ldr	x8, [sp, #16]
  42633c:	ldr	x1, [x8, #16]
  426340:	adrp	x0, 447000 <_fini+0x6c30>
  426344:	add	x0, x0, #0x455
  426348:	adrp	x2, 447000 <_fini+0x6c30>
  42634c:	add	x2, x2, #0x46b
  426350:	mov	x8, xzr
  426354:	mov	x3, x8
  426358:	bl	407a48 <strjoin_real@plt>
  42635c:	ldr	x8, [sp, #16]
  426360:	str	x0, [x8, #88]
  426364:	ldr	x8, [sp, #16]
  426368:	ldr	x8, [x8, #88]
  42636c:	cbnz	x8, 42637c <inhibitor_create_fifo+0x100>
  426370:	mov	w8, #0xfffffff4            	// #-12
  426374:	stur	w8, [x29, #-4]
  426378:	b	426508 <inhibitor_create_fifo+0x28c>
  42637c:	ldr	x8, [sp, #16]
  426380:	ldr	x0, [x8, #88]
  426384:	mov	w1, #0x180                 	// #384
  426388:	bl	407a58 <mkfifo@plt>
  42638c:	cmp	w0, #0x0
  426390:	cset	w9, ge  // ge = tcont
  426394:	tbnz	w9, #0, 4263c0 <inhibitor_create_fifo+0x144>
  426398:	bl	406e08 <__errno_location@plt>
  42639c:	ldr	w8, [x0]
  4263a0:	cmp	w8, #0x11
  4263a4:	b.eq	4263c0 <inhibitor_create_fifo+0x144>  // b.none
  4263a8:	bl	406e08 <__errno_location@plt>
  4263ac:	ldr	w8, [x0]
  4263b0:	mov	w9, wzr
  4263b4:	subs	w8, w9, w8
  4263b8:	stur	w8, [x29, #-4]
  4263bc:	b	426508 <inhibitor_create_fifo+0x28c>
  4263c0:	ldr	x8, [sp, #16]
  4263c4:	ldr	w9, [x8, #96]
  4263c8:	cmp	w9, #0x0
  4263cc:	cset	w9, ge  // ge = tcont
  4263d0:	tbnz	w9, #0, 42641c <inhibitor_create_fifo+0x1a0>
  4263d4:	ldr	x8, [sp, #16]
  4263d8:	ldr	x0, [x8, #88]
  4263dc:	mov	w1, #0x800                 	// #2048
  4263e0:	movk	w1, #0x8, lsl #16
  4263e4:	bl	406df8 <open64@plt>
  4263e8:	ldr	x8, [sp, #16]
  4263ec:	str	w0, [x8, #96]
  4263f0:	ldr	x8, [sp, #16]
  4263f4:	ldr	w9, [x8, #96]
  4263f8:	cmp	w9, #0x0
  4263fc:	cset	w9, ge  // ge = tcont
  426400:	tbnz	w9, #0, 42641c <inhibitor_create_fifo+0x1a0>
  426404:	bl	406e08 <__errno_location@plt>
  426408:	ldr	w8, [x0]
  42640c:	mov	w9, wzr
  426410:	subs	w8, w9, w8
  426414:	stur	w8, [x29, #-4]
  426418:	b	426508 <inhibitor_create_fifo+0x28c>
  42641c:	ldr	x8, [sp, #16]
  426420:	ldr	x8, [x8, #8]
  426424:	cbnz	x8, 4264c0 <inhibitor_create_fifo+0x244>
  426428:	ldr	x8, [sp, #16]
  42642c:	ldr	x8, [x8]
  426430:	ldr	x0, [x8]
  426434:	ldr	x8, [sp, #16]
  426438:	add	x1, x8, #0x8
  42643c:	ldr	x8, [sp, #16]
  426440:	ldr	w2, [x8, #96]
  426444:	ldr	x5, [sp, #16]
  426448:	mov	w9, wzr
  42644c:	mov	w3, w9
  426450:	adrp	x4, 426000 <freep+0x4>
  426454:	add	x4, x4, #0x518
  426458:	bl	406e18 <sd_event_add_io@plt>
  42645c:	str	w0, [sp, #12]
  426460:	ldr	w9, [sp, #12]
  426464:	cmp	w9, #0x0
  426468:	cset	w9, ge  // ge = tcont
  42646c:	tbnz	w9, #0, 42647c <inhibitor_create_fifo+0x200>
  426470:	ldr	w8, [sp, #12]
  426474:	stur	w8, [x29, #-4]
  426478:	b	426508 <inhibitor_create_fifo+0x28c>
  42647c:	ldr	x8, [sp, #16]
  426480:	ldr	x0, [x8, #8]
  426484:	mov	x1, #0x5a                  	// #90
  426488:	bl	407038 <sd_event_source_set_priority@plt>
  42648c:	str	w0, [sp, #12]
  426490:	ldr	w9, [sp, #12]
  426494:	cmp	w9, #0x0
  426498:	cset	w9, ge  // ge = tcont
  42649c:	tbnz	w9, #0, 4264ac <inhibitor_create_fifo+0x230>
  4264a0:	ldr	w8, [sp, #12]
  4264a4:	stur	w8, [x29, #-4]
  4264a8:	b	426508 <inhibitor_create_fifo+0x28c>
  4264ac:	ldr	x8, [sp, #16]
  4264b0:	ldr	x0, [x8, #8]
  4264b4:	adrp	x1, 447000 <_fini+0x6c30>
  4264b8:	add	x1, x1, #0x470
  4264bc:	bl	406ea8 <sd_event_source_set_description@plt>
  4264c0:	ldr	x8, [sp, #16]
  4264c4:	ldr	x0, [x8, #88]
  4264c8:	mov	w1, #0x801                 	// #2049
  4264cc:	movk	w1, #0x8, lsl #16
  4264d0:	bl	406df8 <open64@plt>
  4264d4:	str	w0, [sp, #12]
  4264d8:	ldr	w9, [sp, #12]
  4264dc:	cmp	w9, #0x0
  4264e0:	cset	w9, ge  // ge = tcont
  4264e4:	tbnz	w9, #0, 426500 <inhibitor_create_fifo+0x284>
  4264e8:	bl	406e08 <__errno_location@plt>
  4264ec:	ldr	w8, [x0]
  4264f0:	mov	w9, wzr
  4264f4:	subs	w8, w9, w8
  4264f8:	stur	w8, [x29, #-4]
  4264fc:	b	426508 <inhibitor_create_fifo+0x28c>
  426500:	ldr	w8, [sp, #12]
  426504:	stur	w8, [x29, #-4]
  426508:	ldur	w0, [x29, #-4]
  42650c:	ldp	x29, x30, [sp, #32]
  426510:	add	sp, sp, #0x30
  426514:	ret

0000000000426518 <inhibitor_dispatch_fifo>:
  426518:	sub	sp, sp, #0x40
  42651c:	stp	x29, x30, [sp, #48]
  426520:	add	x29, sp, #0x30
  426524:	adrp	x8, 447000 <_fini+0x6c30>
  426528:	add	x8, x8, #0x26a
  42652c:	add	x8, x8, #0x3
  426530:	adrp	x9, 447000 <_fini+0x6c30>
  426534:	add	x9, x9, #0x71c
  426538:	stur	x0, [x29, #-8]
  42653c:	stur	w1, [x29, #-12]
  426540:	stur	w2, [x29, #-16]
  426544:	str	x3, [sp, #24]
  426548:	ldr	x10, [sp, #24]
  42654c:	str	x10, [sp, #16]
  426550:	str	x8, [sp, #8]
  426554:	str	x9, [sp]
  426558:	ldur	x8, [x29, #-8]
  42655c:	cmp	x8, #0x0
  426560:	cset	w9, ne  // ne = any
  426564:	mov	w10, #0x1                   	// #1
  426568:	eor	w9, w9, #0x1
  42656c:	eor	w9, w9, w10
  426570:	eor	w9, w9, w10
  426574:	and	w9, w9, #0x1
  426578:	mov	w0, w9
  42657c:	sxtw	x8, w0
  426580:	cbz	x8, 4265a4 <inhibitor_dispatch_fifo+0x8c>
  426584:	mov	w8, wzr
  426588:	mov	w0, w8
  42658c:	adrp	x1, 442000 <_fini+0x1c30>
  426590:	add	x1, x1, #0xf2
  426594:	ldr	x2, [sp, #8]
  426598:	mov	w3, #0x11f                 	// #287
  42659c:	ldr	x4, [sp]
  4265a0:	bl	406c68 <log_assert_failed_realm@plt>
  4265a4:	ldur	w8, [x29, #-12]
  4265a8:	ldr	x9, [sp, #16]
  4265ac:	ldr	w10, [x9, #96]
  4265b0:	cmp	w8, w10
  4265b4:	cset	w8, eq  // eq = none
  4265b8:	mov	w10, #0x1                   	// #1
  4265bc:	eor	w8, w8, #0x1
  4265c0:	eor	w8, w8, w10
  4265c4:	eor	w8, w8, w10
  4265c8:	and	w8, w8, #0x1
  4265cc:	mov	w0, w8
  4265d0:	sxtw	x9, w0
  4265d4:	cbz	x9, 4265f8 <inhibitor_dispatch_fifo+0xe0>
  4265d8:	mov	w8, wzr
  4265dc:	mov	w0, w8
  4265e0:	adrp	x1, 447000 <_fini+0x6c30>
  4265e4:	add	x1, x1, #0x762
  4265e8:	ldr	x2, [sp, #8]
  4265ec:	mov	w3, #0x120                 	// #288
  4265f0:	ldr	x4, [sp]
  4265f4:	bl	406c68 <log_assert_failed_realm@plt>
  4265f8:	ldr	x8, [sp, #16]
  4265fc:	cmp	x8, #0x0
  426600:	cset	w9, ne  // ne = any
  426604:	mov	w10, #0x1                   	// #1
  426608:	eor	w9, w9, #0x1
  42660c:	eor	w9, w9, w10
  426610:	eor	w9, w9, w10
  426614:	and	w9, w9, #0x1
  426618:	mov	w0, w9
  42661c:	sxtw	x8, w0
  426620:	cbz	x8, 426644 <inhibitor_dispatch_fifo+0x12c>
  426624:	mov	w8, wzr
  426628:	mov	w0, w8
  42662c:	adrp	x1, 447000 <_fini+0x6c30>
  426630:	add	x1, x1, #0x2c1
  426634:	ldr	x2, [sp, #8]
  426638:	mov	w3, #0x121                 	// #289
  42663c:	ldr	x4, [sp]
  426640:	bl	406c68 <log_assert_failed_realm@plt>
  426644:	ldr	x0, [sp, #16]
  426648:	bl	425760 <inhibitor_stop>
  42664c:	ldr	x0, [sp, #16]
  426650:	bl	424f8c <inhibitor_free>
  426654:	mov	w8, wzr
  426658:	mov	w0, w8
  42665c:	ldp	x29, x30, [sp, #48]
  426660:	add	sp, sp, #0x40
  426664:	ret

0000000000426668 <inhibitor_is_orphan>:
  426668:	sub	sp, sp, #0x30
  42666c:	stp	x29, x30, [sp, #32]
  426670:	add	x29, sp, #0x20
  426674:	adrp	x8, 447000 <_fini+0x6c30>
  426678:	add	x8, x8, #0x26a
  42667c:	add	x2, x8, #0x3
  426680:	str	x0, [sp, #16]
  426684:	str	x2, [sp, #8]
  426688:	ldr	x8, [sp, #16]
  42668c:	cmp	x8, #0x0
  426690:	cset	w9, ne  // ne = any
  426694:	mov	w10, #0x1                   	// #1
  426698:	eor	w9, w9, #0x1
  42669c:	eor	w9, w9, w10
  4266a0:	eor	w9, w9, w10
  4266a4:	and	w9, w9, #0x1
  4266a8:	mov	w0, w9
  4266ac:	sxtw	x8, w0
  4266b0:	cbz	x8, 4266d8 <inhibitor_is_orphan+0x70>
  4266b4:	mov	w8, wzr
  4266b8:	mov	w0, w8
  4266bc:	adrp	x1, 447000 <_fini+0x6c30>
  4266c0:	add	x1, x1, #0x2c1
  4266c4:	ldr	x2, [sp, #8]
  4266c8:	mov	w3, #0x164                 	// #356
  4266cc:	adrp	x4, 447000 <_fini+0x6c30>
  4266d0:	add	x4, x4, #0x47e
  4266d4:	bl	406c68 <log_assert_failed_realm@plt>
  4266d8:	ldr	x8, [sp, #16]
  4266dc:	ldrb	w9, [x8, #32]
  4266e0:	tbnz	w9, #0, 4266f4 <inhibitor_is_orphan+0x8c>
  4266e4:	mov	w8, #0x1                   	// #1
  4266e8:	and	w8, w8, #0x1
  4266ec:	sturb	w8, [x29, #-1]
  4266f0:	b	426760 <inhibitor_is_orphan+0xf8>
  4266f4:	ldr	x8, [sp, #16]
  4266f8:	ldr	x8, [x8, #88]
  4266fc:	cbnz	x8, 426710 <inhibitor_is_orphan+0xa8>
  426700:	mov	w8, #0x1                   	// #1
  426704:	and	w8, w8, #0x1
  426708:	sturb	w8, [x29, #-1]
  42670c:	b	426760 <inhibitor_is_orphan+0xf8>
  426710:	ldr	x8, [sp, #16]
  426714:	ldr	w9, [x8, #96]
  426718:	cmp	w9, #0x0
  42671c:	cset	w9, ge  // ge = tcont
  426720:	tbnz	w9, #0, 426734 <inhibitor_is_orphan+0xcc>
  426724:	mov	w8, #0x1                   	// #1
  426728:	and	w8, w8, #0x1
  42672c:	sturb	w8, [x29, #-1]
  426730:	b	426760 <inhibitor_is_orphan+0xf8>
  426734:	ldr	x8, [sp, #16]
  426738:	ldr	w0, [x8, #96]
  42673c:	bl	407a68 <pipe_eof@plt>
  426740:	cbz	w0, 426754 <inhibitor_is_orphan+0xec>
  426744:	mov	w8, #0x1                   	// #1
  426748:	and	w8, w8, #0x1
  42674c:	sturb	w8, [x29, #-1]
  426750:	b	426760 <inhibitor_is_orphan+0xf8>
  426754:	mov	w8, wzr
  426758:	and	w8, w8, #0x1
  42675c:	sturb	w8, [x29, #-1]
  426760:	ldurb	w8, [x29, #-1]
  426764:	and	w0, w8, #0x1
  426768:	ldp	x29, x30, [sp, #32]
  42676c:	add	sp, sp, #0x30
  426770:	ret

0000000000426774 <manager_inhibit_what>:
  426774:	sub	sp, sp, #0x60
  426778:	stp	x29, x30, [sp, #80]
  42677c:	add	x29, sp, #0x50
  426780:	adrp	x8, 447000 <_fini+0x6c30>
  426784:	add	x8, x8, #0x26a
  426788:	add	x2, x8, #0x3
  42678c:	stur	x0, [x29, #-8]
  426790:	stur	w1, [x29, #-12]
  426794:	str	wzr, [sp, #28]
  426798:	str	x2, [sp]
  42679c:	ldur	x8, [x29, #-8]
  4267a0:	cmp	x8, #0x0
  4267a4:	cset	w9, ne  // ne = any
  4267a8:	mov	w10, #0x1                   	// #1
  4267ac:	eor	w9, w9, #0x1
  4267b0:	eor	w9, w9, w10
  4267b4:	eor	w9, w9, w10
  4267b8:	and	w9, w9, #0x1
  4267bc:	mov	w0, w9
  4267c0:	sxtw	x8, w0
  4267c4:	cbz	x8, 4267ec <manager_inhibit_what+0x78>
  4267c8:	mov	w8, wzr
  4267cc:	mov	w0, w8
  4267d0:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4267d4:	add	x1, x1, #0x5ef
  4267d8:	ldr	x2, [sp]
  4267dc:	mov	w3, #0x17a                 	// #378
  4267e0:	adrp	x4, 447000 <_fini+0x6c30>
  4267e4:	add	x4, x4, #0x4a5
  4267e8:	bl	406c68 <log_assert_failed_realm@plt>
  4267ec:	add	x8, sp, #0x8
  4267f0:	mov	w9, #0xfffffffe            	// #-2
  4267f4:	str	w9, [sp, #8]
  4267f8:	mov	x10, xzr
  4267fc:	str	x10, [x8, #8]
  426800:	ldur	q0, [sp, #8]
  426804:	str	q0, [sp, #32]
  426808:	ldur	x8, [x29, #-8]
  42680c:	ldr	x0, [x8, #56]
  426810:	add	x1, sp, #0x20
  426814:	sub	x2, x29, #0x18
  426818:	mov	x8, xzr
  42681c:	mov	x3, x8
  426820:	bl	426878 <hashmap_iterate>
  426824:	tbnz	w0, #0, 42682c <manager_inhibit_what+0xb8>
  426828:	b	426868 <manager_inhibit_what+0xf4>
  42682c:	ldur	x8, [x29, #-24]
  426830:	ldr	w9, [x8, #56]
  426834:	ldur	w10, [x29, #-12]
  426838:	cmp	w9, w10
  42683c:	b.ne	426864 <manager_inhibit_what+0xf0>  // b.any
  426840:	ldur	x8, [x29, #-24]
  426844:	ldrb	w9, [x8, #32]
  426848:	tbnz	w9, #0, 426850 <manager_inhibit_what+0xdc>
  42684c:	b	426864 <manager_inhibit_what+0xf0>
  426850:	ldur	x8, [x29, #-24]
  426854:	ldr	w9, [x8, #36]
  426858:	ldr	w10, [sp, #28]
  42685c:	orr	w9, w10, w9
  426860:	str	w9, [sp, #28]
  426864:	b	426808 <manager_inhibit_what+0x94>
  426868:	ldr	w0, [sp, #28]
  42686c:	ldp	x29, x30, [sp, #80]
  426870:	add	sp, sp, #0x60
  426874:	ret

0000000000426878 <hashmap_iterate>:
  426878:	sub	sp, sp, #0x30
  42687c:	stp	x29, x30, [sp, #32]
  426880:	add	x29, sp, #0x20
  426884:	stur	x0, [x29, #-8]
  426888:	str	x1, [sp, #16]
  42688c:	str	x2, [sp, #8]
  426890:	str	x3, [sp]
  426894:	ldur	x0, [x29, #-8]
  426898:	ldr	x1, [sp, #16]
  42689c:	ldr	x2, [sp, #8]
  4268a0:	ldr	x3, [sp]
  4268a4:	bl	407018 <internal_hashmap_iterate@plt>
  4268a8:	and	w0, w0, #0x1
  4268ac:	ldp	x29, x30, [sp, #32]
  4268b0:	add	sp, sp, #0x30
  4268b4:	ret

00000000004268b8 <manager_is_inhibited>:
  4268b8:	sub	sp, sp, #0x90
  4268bc:	stp	x29, x30, [sp, #128]
  4268c0:	add	x29, sp, #0x80
  4268c4:	mov	w8, #0x0                   	// #0
  4268c8:	adrp	x9, 447000 <_fini+0x6c30>
  4268cc:	add	x9, x9, #0x26a
  4268d0:	add	x9, x9, #0x3
  4268d4:	stur	x0, [x29, #-8]
  4268d8:	stur	w1, [x29, #-12]
  4268dc:	stur	w2, [x29, #-16]
  4268e0:	stur	x3, [x29, #-24]
  4268e4:	mov	w10, #0x1                   	// #1
  4268e8:	and	w10, w4, w10
  4268ec:	sturb	w10, [x29, #-25]
  4268f0:	and	w10, w5, #0x1
  4268f4:	sturb	w10, [x29, #-26]
  4268f8:	stur	w6, [x29, #-32]
  4268fc:	stur	x7, [x29, #-40]
  426900:	str	xzr, [sp, #48]
  426904:	str	xzr, [sp, #56]
  426908:	strb	w8, [sp, #47]
  42690c:	str	x9, [sp, #16]
  426910:	ldur	x8, [x29, #-8]
  426914:	cmp	x8, #0x0
  426918:	cset	w9, ne  // ne = any
  42691c:	mov	w10, #0x1                   	// #1
  426920:	eor	w9, w9, #0x1
  426924:	eor	w9, w9, w10
  426928:	eor	w9, w9, w10
  42692c:	and	w9, w9, #0x1
  426930:	mov	w0, w9
  426934:	sxtw	x8, w0
  426938:	cbz	x8, 426960 <manager_is_inhibited+0xa8>
  42693c:	mov	w8, wzr
  426940:	mov	w0, w8
  426944:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  426948:	add	x1, x1, #0x5ef
  42694c:	ldr	x2, [sp, #16]
  426950:	mov	w3, #0x1a4                 	// #420
  426954:	adrp	x4, 447000 <_fini+0x6c30>
  426958:	add	x4, x4, #0x4de
  42695c:	bl	406c68 <log_assert_failed_realm@plt>
  426960:	ldur	w8, [x29, #-12]
  426964:	cmp	w8, #0x0
  426968:	cset	w8, le
  42696c:	mov	w9, #0x0                   	// #0
  426970:	str	w9, [sp, #12]
  426974:	tbnz	w8, #0, 426988 <manager_is_inhibited+0xd0>
  426978:	ldur	w8, [x29, #-12]
  42697c:	cmp	w8, #0x80
  426980:	cset	w8, lt  // lt = tstop
  426984:	str	w8, [sp, #12]
  426988:	ldr	w8, [sp, #12]
  42698c:	mov	w9, #0x1                   	// #1
  426990:	eor	w8, w8, #0x1
  426994:	eor	w8, w8, w9
  426998:	eor	w8, w8, w9
  42699c:	and	w8, w8, #0x1
  4269a0:	mov	w0, w8
  4269a4:	sxtw	x10, w0
  4269a8:	cbz	x10, 4269d0 <manager_is_inhibited+0x118>
  4269ac:	mov	w8, wzr
  4269b0:	mov	w0, w8
  4269b4:	adrp	x1, 447000 <_fini+0x6c30>
  4269b8:	add	x1, x1, #0x553
  4269bc:	ldr	x2, [sp, #16]
  4269c0:	mov	w3, #0x1a5                 	// #421
  4269c4:	adrp	x4, 447000 <_fini+0x6c30>
  4269c8:	add	x4, x4, #0x4de
  4269cc:	bl	406c68 <log_assert_failed_realm@plt>
  4269d0:	add	x8, sp, #0x18
  4269d4:	mov	w9, #0xfffffffe            	// #-2
  4269d8:	str	w9, [sp, #24]
  4269dc:	mov	x10, xzr
  4269e0:	str	x10, [x8, #8]
  4269e4:	ldur	q0, [sp, #24]
  4269e8:	str	q0, [sp, #64]
  4269ec:	ldur	x8, [x29, #-8]
  4269f0:	ldr	x0, [x8, #56]
  4269f4:	add	x1, sp, #0x40
  4269f8:	sub	x2, x29, #0x30
  4269fc:	mov	x8, xzr
  426a00:	mov	x3, x8
  426a04:	bl	426878 <hashmap_iterate>
  426a08:	tbnz	w0, #0, 426a10 <manager_is_inhibited+0x158>
  426a0c:	b	426aec <manager_is_inhibited+0x234>
  426a10:	ldur	x8, [x29, #-48]
  426a14:	ldrb	w9, [x8, #32]
  426a18:	tbnz	w9, #0, 426a20 <manager_is_inhibited+0x168>
  426a1c:	b	4269ec <manager_is_inhibited+0x134>
  426a20:	ldur	x8, [x29, #-48]
  426a24:	ldr	w9, [x8, #36]
  426a28:	ldur	w10, [x29, #-12]
  426a2c:	and	w9, w9, w10
  426a30:	cbnz	w9, 426a38 <manager_is_inhibited+0x180>
  426a34:	b	4269ec <manager_is_inhibited+0x134>
  426a38:	ldur	x8, [x29, #-48]
  426a3c:	ldr	w9, [x8, #56]
  426a40:	ldur	w10, [x29, #-16]
  426a44:	cmp	w9, w10
  426a48:	b.eq	426a50 <manager_is_inhibited+0x198>  // b.none
  426a4c:	b	4269ec <manager_is_inhibited+0x134>
  426a50:	ldurb	w8, [x29, #-25]
  426a54:	tbnz	w8, #0, 426a5c <manager_is_inhibited+0x1a4>
  426a58:	b	426a7c <manager_is_inhibited+0x1c4>
  426a5c:	ldur	x0, [x29, #-8]
  426a60:	ldur	x8, [x29, #-48]
  426a64:	ldr	w1, [x8, #60]
  426a68:	bl	426b14 <pid_is_active>
  426a6c:	cmp	w0, #0x0
  426a70:	cset	w9, gt
  426a74:	tbnz	w9, #0, 426a7c <manager_is_inhibited+0x1c4>
  426a78:	b	4269ec <manager_is_inhibited+0x134>
  426a7c:	ldurb	w8, [x29, #-26]
  426a80:	tbnz	w8, #0, 426a88 <manager_is_inhibited+0x1d0>
  426a84:	b	426aa0 <manager_is_inhibited+0x1e8>
  426a88:	ldur	x8, [x29, #-48]
  426a8c:	ldr	w9, [x8, #64]
  426a90:	ldur	w10, [x29, #-32]
  426a94:	cmp	w9, w10
  426a98:	b.ne	426aa0 <manager_is_inhibited+0x1e8>  // b.any
  426a9c:	b	4269ec <manager_is_inhibited+0x134>
  426aa0:	ldrb	w8, [sp, #47]
  426aa4:	tbnz	w8, #0, 426aac <manager_is_inhibited+0x1f4>
  426aa8:	b	426ac0 <manager_is_inhibited+0x208>
  426aac:	ldur	x8, [x29, #-48]
  426ab0:	ldr	x8, [x8, #80]
  426ab4:	ldr	x9, [sp, #56]
  426ab8:	cmp	x8, x9
  426abc:	b.cs	426acc <manager_is_inhibited+0x214>  // b.hs, b.nlast
  426ac0:	ldur	x8, [x29, #-48]
  426ac4:	ldur	q0, [x8, #72]
  426ac8:	str	q0, [sp, #48]
  426acc:	mov	w8, #0x1                   	// #1
  426ad0:	strb	w8, [sp, #47]
  426ad4:	ldur	x9, [x29, #-40]
  426ad8:	cbz	x9, 426ae8 <manager_is_inhibited+0x230>
  426adc:	ldur	x8, [x29, #-48]
  426ae0:	ldur	x9, [x29, #-40]
  426ae4:	str	x8, [x9]
  426ae8:	b	4269ec <manager_is_inhibited+0x134>
  426aec:	ldur	x8, [x29, #-24]
  426af0:	cbz	x8, 426b00 <manager_is_inhibited+0x248>
  426af4:	ldur	x8, [x29, #-24]
  426af8:	ldr	q0, [sp, #48]
  426afc:	str	q0, [x8]
  426b00:	ldrb	w8, [sp, #47]
  426b04:	and	w0, w8, #0x1
  426b08:	ldp	x29, x30, [sp, #128]
  426b0c:	add	sp, sp, #0x90
  426b10:	ret

0000000000426b14 <pid_is_active>:
  426b14:	sub	sp, sp, #0x40
  426b18:	stp	x29, x30, [sp, #48]
  426b1c:	add	x29, sp, #0x30
  426b20:	add	x2, sp, #0x10
  426b24:	stur	x0, [x29, #-16]
  426b28:	stur	w1, [x29, #-20]
  426b2c:	ldur	x0, [x29, #-16]
  426b30:	ldur	w1, [x29, #-20]
  426b34:	bl	412450 <manager_get_session_by_pid>
  426b38:	str	w0, [sp, #12]
  426b3c:	ldr	w8, [sp, #12]
  426b40:	cmp	w8, #0x0
  426b44:	cset	w8, ge  // ge = tcont
  426b48:	tbnz	w8, #0, 426b58 <pid_is_active+0x44>
  426b4c:	ldr	w8, [sp, #12]
  426b50:	stur	w8, [x29, #-4]
  426b54:	b	426b7c <pid_is_active+0x68>
  426b58:	ldr	w8, [sp, #12]
  426b5c:	cbnz	w8, 426b6c <pid_is_active+0x58>
  426b60:	mov	w8, #0x1                   	// #1
  426b64:	stur	w8, [x29, #-4]
  426b68:	b	426b7c <pid_is_active+0x68>
  426b6c:	ldr	x0, [sp, #16]
  426b70:	bl	433408 <session_is_active>
  426b74:	and	w8, w0, #0x1
  426b78:	stur	w8, [x29, #-4]
  426b7c:	ldur	w0, [x29, #-4]
  426b80:	ldp	x29, x30, [sp, #48]
  426b84:	add	sp, sp, #0x40
  426b88:	ret

0000000000426b8c <inhibit_what_to_string>:
  426b8c:	sub	sp, sp, #0x30
  426b90:	stp	x29, x30, [sp, #32]
  426b94:	add	x29, sp, #0x20
  426b98:	stur	w0, [x29, #-12]
  426b9c:	ldur	w8, [x29, #-12]
  426ba0:	tbnz	w8, #31, 426bb8 <inhibit_what_to_string+0x2c>
  426ba4:	b	426ba8 <inhibit_what_to_string+0x1c>
  426ba8:	ldur	w8, [x29, #-12]
  426bac:	subs	w8, w8, #0x80
  426bb0:	b.lt	426bc4 <inhibit_what_to_string+0x38>  // b.tstop
  426bb4:	b	426bb8 <inhibit_what_to_string+0x2c>
  426bb8:	mov	x8, xzr
  426bbc:	stur	x8, [x29, #-8]
  426bc0:	b	426d4c <inhibit_what_to_string+0x1c0>
  426bc4:	movz	x0, #0x0, lsl #16
  426bc8:	movk	x0, #0x10
  426bcc:	nop
  426bd0:	nop
  426bd4:	mrs	x8, tpidr_el0
  426bd8:	add	x8, x8, x0
  426bdc:	str	x8, [sp, #8]
  426be0:	ldurb	w9, [x29, #-12]
  426be4:	tbz	w9, #0, 426c04 <inhibit_what_to_string+0x78>
  426be8:	b	426bec <inhibit_what_to_string+0x60>
  426bec:	ldr	x0, [sp, #8]
  426bf0:	adrp	x1, 447000 <_fini+0x6c30>
  426bf4:	add	x1, x1, #0x572
  426bf8:	bl	407258 <stpcpy@plt>
  426bfc:	str	x0, [sp, #8]
  426c00:	b	426c04 <inhibit_what_to_string+0x78>
  426c04:	ldurb	w8, [x29, #-12]
  426c08:	tbz	w8, #1, 426c28 <inhibit_what_to_string+0x9c>
  426c0c:	b	426c10 <inhibit_what_to_string+0x84>
  426c10:	ldr	x0, [sp, #8]
  426c14:	adrp	x1, 447000 <_fini+0x6c30>
  426c18:	add	x1, x1, #0x57c
  426c1c:	bl	407258 <stpcpy@plt>
  426c20:	str	x0, [sp, #8]
  426c24:	b	426c28 <inhibit_what_to_string+0x9c>
  426c28:	ldurb	w8, [x29, #-12]
  426c2c:	tbz	w8, #2, 426c4c <inhibit_what_to_string+0xc0>
  426c30:	b	426c34 <inhibit_what_to_string+0xa8>
  426c34:	ldr	x0, [sp, #8]
  426c38:	adrp	x1, 447000 <_fini+0x6c30>
  426c3c:	add	x1, x1, #0x583
  426c40:	bl	407258 <stpcpy@plt>
  426c44:	str	x0, [sp, #8]
  426c48:	b	426c4c <inhibit_what_to_string+0xc0>
  426c4c:	ldurb	w8, [x29, #-12]
  426c50:	tbz	w8, #3, 426c70 <inhibit_what_to_string+0xe4>
  426c54:	b	426c58 <inhibit_what_to_string+0xcc>
  426c58:	ldr	x0, [sp, #8]
  426c5c:	adrp	x1, 447000 <_fini+0x6c30>
  426c60:	add	x1, x1, #0x589
  426c64:	bl	407258 <stpcpy@plt>
  426c68:	str	x0, [sp, #8]
  426c6c:	b	426c70 <inhibit_what_to_string+0xe4>
  426c70:	ldurb	w8, [x29, #-12]
  426c74:	tbz	w8, #4, 426c94 <inhibit_what_to_string+0x108>
  426c78:	b	426c7c <inhibit_what_to_string+0xf0>
  426c7c:	ldr	x0, [sp, #8]
  426c80:	adrp	x1, 447000 <_fini+0x6c30>
  426c84:	add	x1, x1, #0x59b
  426c88:	bl	407258 <stpcpy@plt>
  426c8c:	str	x0, [sp, #8]
  426c90:	b	426c94 <inhibit_what_to_string+0x108>
  426c94:	ldurb	w8, [x29, #-12]
  426c98:	tbz	w8, #5, 426cb8 <inhibit_what_to_string+0x12c>
  426c9c:	b	426ca0 <inhibit_what_to_string+0x114>
  426ca0:	ldr	x0, [sp, #8]
  426ca4:	adrp	x1, 447000 <_fini+0x6c30>
  426ca8:	add	x1, x1, #0x5af
  426cac:	bl	407258 <stpcpy@plt>
  426cb0:	str	x0, [sp, #8]
  426cb4:	b	426cb8 <inhibit_what_to_string+0x12c>
  426cb8:	ldurb	w8, [x29, #-12]
  426cbc:	tbz	w8, #6, 426cdc <inhibit_what_to_string+0x150>
  426cc0:	b	426cc4 <inhibit_what_to_string+0x138>
  426cc4:	ldr	x0, [sp, #8]
  426cc8:	adrp	x1, 447000 <_fini+0x6c30>
  426ccc:	add	x1, x1, #0x5c5
  426cd0:	bl	407258 <stpcpy@plt>
  426cd4:	str	x0, [sp, #8]
  426cd8:	b	426cdc <inhibit_what_to_string+0x150>
  426cdc:	ldr	x8, [sp, #8]
  426ce0:	str	x8, [sp]
  426ce4:	movz	x0, #0x0, lsl #16
  426ce8:	movk	x0, #0x10
  426cec:	nop
  426cf0:	nop
  426cf4:	mrs	x8, tpidr_el0
  426cf8:	add	x8, x8, x0
  426cfc:	ldr	x9, [sp]
  426d00:	subs	x8, x9, x8
  426d04:	b.ls	426d1c <inhibit_what_to_string+0x190>  // b.plast
  426d08:	b	426d0c <inhibit_what_to_string+0x180>
  426d0c:	ldr	x8, [sp, #8]
  426d10:	mov	w9, wzr
  426d14:	sturb	w9, [x8, #-1]
  426d18:	b	426d2c <inhibit_what_to_string+0x1a0>
  426d1c:	ldr	x8, [sp, #8]
  426d20:	mov	w9, wzr
  426d24:	strb	w9, [x8]
  426d28:	b	426d2c <inhibit_what_to_string+0x1a0>
  426d2c:	movz	x0, #0x0, lsl #16
  426d30:	movk	x0, #0x10
  426d34:	nop
  426d38:	nop
  426d3c:	mrs	x8, tpidr_el0
  426d40:	add	x8, x8, x0
  426d44:	stur	x8, [x29, #-8]
  426d48:	b	426d4c <inhibit_what_to_string+0x1c0>
  426d4c:	ldur	x0, [x29, #-8]
  426d50:	ldp	x29, x30, [sp, #32]
  426d54:	add	sp, sp, #0x30
  426d58:	ret

0000000000426d5c <size_multiply_overflow>:
  426d5c:	sub	sp, sp, #0x20
  426d60:	str	x0, [sp, #24]
  426d64:	str	x1, [sp, #16]
  426d68:	ldr	x8, [sp, #16]
  426d6c:	mov	w9, #0x0                   	// #0
  426d70:	str	w9, [sp, #12]
  426d74:	cbz	x8, 426d94 <size_multiply_overflow+0x38>
  426d78:	ldr	x8, [sp, #24]
  426d7c:	ldr	x9, [sp, #16]
  426d80:	mov	x10, #0xffffffffffffffff    	// #-1
  426d84:	udiv	x9, x10, x9
  426d88:	cmp	x8, x9
  426d8c:	cset	w11, hi  // hi = pmore
  426d90:	str	w11, [sp, #12]
  426d94:	ldr	w8, [sp, #12]
  426d98:	mov	w9, #0x1                   	// #1
  426d9c:	eor	w8, w8, #0x1
  426da0:	eor	w8, w8, w9
  426da4:	and	w8, w8, #0x1
  426da8:	mov	w0, w8
  426dac:	sxtw	x10, w0
  426db0:	cmp	x10, #0x0
  426db4:	cset	w8, ne  // ne = any
  426db8:	and	w0, w8, #0x1
  426dbc:	add	sp, sp, #0x20
  426dc0:	ret

0000000000426dc4 <fclosep>:
  426dc4:	sub	sp, sp, #0x20
  426dc8:	stp	x29, x30, [sp, #16]
  426dcc:	add	x29, sp, #0x10
  426dd0:	str	x0, [sp, #8]
  426dd4:	ldr	x8, [sp, #8]
  426dd8:	ldr	x0, [x8]
  426ddc:	bl	4079b8 <safe_fclose@plt>
  426de0:	ldp	x29, x30, [sp, #16]
  426de4:	add	sp, sp, #0x20
  426de8:	ret

0000000000426dec <bus_seat_method_terminate>:
  426dec:	sub	sp, sp, #0x50
  426df0:	stp	x29, x30, [sp, #64]
  426df4:	add	x29, sp, #0x40
  426df8:	adrp	x8, 447000 <_fini+0x6c30>
  426dfc:	add	x8, x8, #0x7a7
  426e00:	add	x8, x8, #0x3
  426e04:	stur	x0, [x29, #-16]
  426e08:	stur	x1, [x29, #-24]
  426e0c:	str	x2, [sp, #32]
  426e10:	ldur	x9, [x29, #-24]
  426e14:	str	x9, [sp, #24]
  426e18:	str	x8, [sp, #8]
  426e1c:	ldur	x8, [x29, #-16]
  426e20:	cmp	x8, #0x0
  426e24:	cset	w9, ne  // ne = any
  426e28:	mov	w10, #0x1                   	// #1
  426e2c:	eor	w9, w9, #0x1
  426e30:	eor	w9, w9, w10
  426e34:	eor	w9, w9, w10
  426e38:	and	w9, w9, #0x1
  426e3c:	mov	w0, w9
  426e40:	sxtw	x8, w0
  426e44:	cbz	x8, 426e6c <bus_seat_method_terminate+0x80>
  426e48:	mov	w8, wzr
  426e4c:	mov	w0, w8
  426e50:	adrp	x1, 443000 <_fini+0x2c30>
  426e54:	add	x1, x1, #0x812
  426e58:	ldr	x2, [sp, #8]
  426e5c:	mov	w3, #0x88                  	// #136
  426e60:	adrp	x4, 447000 <_fini+0x6c30>
  426e64:	add	x4, x4, #0x7c7
  426e68:	bl	406c68 <log_assert_failed_realm@plt>
  426e6c:	ldr	x8, [sp, #24]
  426e70:	cmp	x8, #0x0
  426e74:	cset	w9, ne  // ne = any
  426e78:	mov	w10, #0x1                   	// #1
  426e7c:	eor	w9, w9, #0x1
  426e80:	eor	w9, w9, w10
  426e84:	eor	w9, w9, w10
  426e88:	and	w9, w9, #0x1
  426e8c:	mov	w0, w9
  426e90:	sxtw	x8, w0
  426e94:	cbz	x8, 426ebc <bus_seat_method_terminate+0xd0>
  426e98:	mov	w8, wzr
  426e9c:	mov	w0, w8
  426ea0:	adrp	x1, 442000 <_fini+0x1c30>
  426ea4:	add	x1, x1, #0xf2
  426ea8:	ldr	x2, [sp, #8]
  426eac:	mov	w3, #0x89                  	// #137
  426eb0:	adrp	x4, 447000 <_fini+0x6c30>
  426eb4:	add	x4, x4, #0x7c7
  426eb8:	bl	406c68 <log_assert_failed_realm@plt>
  426ebc:	ldur	x0, [x29, #-16]
  426ec0:	ldr	x8, [sp, #24]
  426ec4:	ldr	x8, [x8]
  426ec8:	add	x6, x8, #0x1b0
  426ecc:	ldr	x7, [sp, #32]
  426ed0:	mov	w1, #0x5                   	// #5
  426ed4:	adrp	x2, 447000 <_fini+0x6c30>
  426ed8:	add	x2, x2, #0x80f
  426edc:	mov	x8, xzr
  426ee0:	mov	x3, x8
  426ee4:	mov	w9, wzr
  426ee8:	and	w4, w9, #0x1
  426eec:	mov	w5, #0xffffffff            	// #-1
  426ef0:	bl	407678 <bus_verify_polkit_async@plt>
  426ef4:	str	w0, [sp, #20]
  426ef8:	ldr	w9, [sp, #20]
  426efc:	cmp	w9, #0x0
  426f00:	cset	w9, ge  // ge = tcont
  426f04:	tbnz	w9, #0, 426f14 <bus_seat_method_terminate+0x128>
  426f08:	ldr	w8, [sp, #20]
  426f0c:	stur	w8, [x29, #-4]
  426f10:	b	426f6c <bus_seat_method_terminate+0x180>
  426f14:	ldr	w8, [sp, #20]
  426f18:	cbnz	w8, 426f28 <bus_seat_method_terminate+0x13c>
  426f1c:	mov	w8, #0x1                   	// #1
  426f20:	stur	w8, [x29, #-4]
  426f24:	b	426f6c <bus_seat_method_terminate+0x180>
  426f28:	ldr	x0, [sp, #24]
  426f2c:	mov	w8, #0x1                   	// #1
  426f30:	and	w1, w8, #0x1
  426f34:	bl	42b264 <seat_stop_sessions>
  426f38:	str	w0, [sp, #20]
  426f3c:	ldr	w8, [sp, #20]
  426f40:	cmp	w8, #0x0
  426f44:	cset	w8, ge  // ge = tcont
  426f48:	tbnz	w8, #0, 426f58 <bus_seat_method_terminate+0x16c>
  426f4c:	ldr	w8, [sp, #20]
  426f50:	stur	w8, [x29, #-4]
  426f54:	b	426f6c <bus_seat_method_terminate+0x180>
  426f58:	ldur	x0, [x29, #-16]
  426f5c:	mov	x8, xzr
  426f60:	mov	x1, x8
  426f64:	bl	4075b8 <sd_bus_reply_method_return@plt>
  426f68:	stur	w0, [x29, #-4]
  426f6c:	ldur	w0, [x29, #-4]
  426f70:	ldp	x29, x30, [sp, #64]
  426f74:	add	sp, sp, #0x50
  426f78:	ret

0000000000426f7c <property_get_active_session>:
  426f7c:	sub	sp, sp, #0x90
  426f80:	stp	x29, x30, [sp, #128]
  426f84:	add	x29, sp, #0x80
  426f88:	mov	x8, xzr
  426f8c:	adrp	x9, 447000 <_fini+0x6c30>
  426f90:	add	x9, x9, #0x7a7
  426f94:	add	x9, x9, #0x3
  426f98:	adrp	x10, 447000 <_fini+0x6c30>
  426f9c:	add	x10, x10, #0xa27
  426fa0:	stur	x0, [x29, #-16]
  426fa4:	stur	x1, [x29, #-24]
  426fa8:	stur	x2, [x29, #-32]
  426fac:	stur	x3, [x29, #-40]
  426fb0:	stur	x4, [x29, #-48]
  426fb4:	stur	x5, [x29, #-56]
  426fb8:	str	x6, [sp, #64]
  426fbc:	str	x8, [sp, #56]
  426fc0:	ldur	x8, [x29, #-56]
  426fc4:	str	x8, [sp, #48]
  426fc8:	str	x9, [sp, #32]
  426fcc:	str	x10, [sp, #24]
  426fd0:	ldur	x8, [x29, #-16]
  426fd4:	cmp	x8, #0x0
  426fd8:	cset	w9, ne  // ne = any
  426fdc:	mov	w10, #0x1                   	// #1
  426fe0:	eor	w9, w9, #0x1
  426fe4:	eor	w9, w9, w10
  426fe8:	eor	w9, w9, w10
  426fec:	and	w9, w9, #0x1
  426ff0:	mov	w0, w9
  426ff4:	sxtw	x8, w0
  426ff8:	cbz	x8, 42701c <property_get_active_session+0xa0>
  426ffc:	mov	w8, wzr
  427000:	mov	w0, w8
  427004:	adrp	x1, 444000 <_fini+0x3c30>
  427008:	add	x1, x1, #0x393
  42700c:	ldr	x2, [sp, #32]
  427010:	mov	w3, #0x23                  	// #35
  427014:	ldr	x4, [sp, #24]
  427018:	bl	406c68 <log_assert_failed_realm@plt>
  42701c:	ldur	x8, [x29, #-48]
  427020:	cmp	x8, #0x0
  427024:	cset	w9, ne  // ne = any
  427028:	mov	w10, #0x1                   	// #1
  42702c:	eor	w9, w9, #0x1
  427030:	eor	w9, w9, w10
  427034:	eor	w9, w9, w10
  427038:	and	w9, w9, #0x1
  42703c:	mov	w0, w9
  427040:	sxtw	x8, w0
  427044:	cbz	x8, 427068 <property_get_active_session+0xec>
  427048:	mov	w8, wzr
  42704c:	mov	w0, w8
  427050:	adrp	x1, 444000 <_fini+0x3c30>
  427054:	add	x1, x1, #0x417
  427058:	ldr	x2, [sp, #32]
  42705c:	mov	w3, #0x24                  	// #36
  427060:	ldr	x4, [sp, #24]
  427064:	bl	406c68 <log_assert_failed_realm@plt>
  427068:	ldr	x8, [sp, #48]
  42706c:	cmp	x8, #0x0
  427070:	cset	w9, ne  // ne = any
  427074:	mov	w10, #0x1                   	// #1
  427078:	eor	w9, w9, #0x1
  42707c:	eor	w9, w9, w10
  427080:	eor	w9, w9, w10
  427084:	and	w9, w9, #0x1
  427088:	mov	w0, w9
  42708c:	sxtw	x8, w0
  427090:	cbz	x8, 4270b4 <property_get_active_session+0x138>
  427094:	mov	w8, wzr
  427098:	mov	w0, w8
  42709c:	adrp	x1, 442000 <_fini+0x1c30>
  4270a0:	add	x1, x1, #0xf2
  4270a4:	ldr	x2, [sp, #32]
  4270a8:	mov	w3, #0x25                  	// #37
  4270ac:	ldr	x4, [sp, #24]
  4270b0:	bl	406c68 <log_assert_failed_realm@plt>
  4270b4:	ldr	x8, [sp, #48]
  4270b8:	ldr	x8, [x8, #32]
  4270bc:	cbz	x8, 4270d4 <property_get_active_session+0x158>
  4270c0:	ldr	x8, [sp, #48]
  4270c4:	ldr	x0, [x8, #32]
  4270c8:	bl	42ee0c <session_bus_path>
  4270cc:	str	x0, [sp, #16]
  4270d0:	b	4270e4 <property_get_active_session+0x168>
  4270d4:	adrp	x0, 447000 <_fini+0x6c30>
  4270d8:	add	x0, x0, #0xaa5
  4270dc:	bl	407168 <strdup@plt>
  4270e0:	str	x0, [sp, #16]
  4270e4:	ldr	x8, [sp, #16]
  4270e8:	str	x8, [sp, #56]
  4270ec:	ldr	x8, [sp, #56]
  4270f0:	cbnz	x8, 427108 <property_get_active_session+0x18c>
  4270f4:	mov	w8, #0xfffffff4            	// #-12
  4270f8:	stur	w8, [x29, #-4]
  4270fc:	mov	w8, #0x1                   	// #1
  427100:	str	w8, [sp, #44]
  427104:	b	427164 <property_get_active_session+0x1e8>
  427108:	ldur	x0, [x29, #-48]
  42710c:	ldr	x8, [sp, #48]
  427110:	ldr	x8, [x8, #32]
  427114:	str	x0, [sp, #8]
  427118:	cbz	x8, 427130 <property_get_active_session+0x1b4>
  42711c:	ldr	x8, [sp, #48]
  427120:	ldr	x8, [x8, #32]
  427124:	ldr	x8, [x8, #8]
  427128:	str	x8, [sp]
  42712c:	b	42713c <property_get_active_session+0x1c0>
  427130:	adrp	x8, 443000 <_fini+0x2c30>
  427134:	add	x8, x8, #0x467
  427138:	str	x8, [sp]
  42713c:	ldr	x8, [sp]
  427140:	ldr	x3, [sp, #56]
  427144:	ldr	x0, [sp, #8]
  427148:	adrp	x1, 445000 <_fini+0x4c30>
  42714c:	add	x1, x1, #0x2d8
  427150:	mov	x2, x8
  427154:	bl	407508 <sd_bus_message_append@plt>
  427158:	stur	w0, [x29, #-4]
  42715c:	mov	w9, #0x1                   	// #1
  427160:	str	w9, [sp, #44]
  427164:	add	x0, sp, #0x38
  427168:	bl	428368 <freep>
  42716c:	ldur	w0, [x29, #-4]
  427170:	ldp	x29, x30, [sp, #128]
  427174:	add	sp, sp, #0x90
  427178:	ret

000000000042717c <property_get_can_multi_session>:
  42717c:	sub	sp, sp, #0x70
  427180:	stp	x29, x30, [sp, #96]
  427184:	add	x29, sp, #0x60
  427188:	adrp	x8, 447000 <_fini+0x6c30>
  42718c:	add	x8, x8, #0x7a7
  427190:	add	x8, x8, #0x3
  427194:	adrp	x9, 447000 <_fini+0x6c30>
  427198:	add	x9, x9, #0xaa7
  42719c:	stur	x0, [x29, #-8]
  4271a0:	stur	x1, [x29, #-16]
  4271a4:	stur	x2, [x29, #-24]
  4271a8:	stur	x3, [x29, #-32]
  4271ac:	stur	x4, [x29, #-40]
  4271b0:	str	x5, [sp, #48]
  4271b4:	str	x6, [sp, #40]
  4271b8:	ldr	x10, [sp, #48]
  4271bc:	str	x10, [sp, #32]
  4271c0:	str	x8, [sp, #24]
  4271c4:	str	x9, [sp, #16]
  4271c8:	ldur	x8, [x29, #-8]
  4271cc:	cmp	x8, #0x0
  4271d0:	cset	w9, ne  // ne = any
  4271d4:	mov	w10, #0x1                   	// #1
  4271d8:	eor	w9, w9, #0x1
  4271dc:	eor	w9, w9, w10
  4271e0:	eor	w9, w9, w10
  4271e4:	and	w9, w9, #0x1
  4271e8:	mov	w0, w9
  4271ec:	sxtw	x8, w0
  4271f0:	cbz	x8, 427214 <property_get_can_multi_session+0x98>
  4271f4:	mov	w8, wzr
  4271f8:	mov	w0, w8
  4271fc:	adrp	x1, 444000 <_fini+0x3c30>
  427200:	add	x1, x1, #0x393
  427204:	ldr	x2, [sp, #24]
  427208:	mov	w3, #0x13                  	// #19
  42720c:	ldr	x4, [sp, #16]
  427210:	bl	406c68 <log_assert_failed_realm@plt>
  427214:	ldur	x8, [x29, #-40]
  427218:	cmp	x8, #0x0
  42721c:	cset	w9, ne  // ne = any
  427220:	mov	w10, #0x1                   	// #1
  427224:	eor	w9, w9, #0x1
  427228:	eor	w9, w9, w10
  42722c:	eor	w9, w9, w10
  427230:	and	w9, w9, #0x1
  427234:	mov	w0, w9
  427238:	sxtw	x8, w0
  42723c:	cbz	x8, 427260 <property_get_can_multi_session+0xe4>
  427240:	mov	w8, wzr
  427244:	mov	w0, w8
  427248:	adrp	x1, 444000 <_fini+0x3c30>
  42724c:	add	x1, x1, #0x417
  427250:	ldr	x2, [sp, #24]
  427254:	mov	w3, #0x13                  	// #19
  427258:	ldr	x4, [sp, #16]
  42725c:	bl	406c68 <log_assert_failed_realm@plt>
  427260:	ldr	x8, [sp, #32]
  427264:	cmp	x8, #0x0
  427268:	cset	w9, ne  // ne = any
  42726c:	mov	w10, #0x1                   	// #1
  427270:	eor	w9, w9, #0x1
  427274:	eor	w9, w9, w10
  427278:	eor	w9, w9, w10
  42727c:	and	w9, w9, #0x1
  427280:	mov	w0, w9
  427284:	sxtw	x8, w0
  427288:	cbz	x8, 4272ac <property_get_can_multi_session+0x130>
  42728c:	mov	w8, wzr
  427290:	mov	w0, w8
  427294:	adrp	x1, 441000 <_fini+0xc30>
  427298:	add	x1, x1, #0xd41
  42729c:	ldr	x2, [sp, #24]
  4272a0:	mov	w3, #0x13                  	// #19
  4272a4:	ldr	x4, [sp, #16]
  4272a8:	bl	406c68 <log_assert_failed_realm@plt>
  4272ac:	ldur	x0, [x29, #-40]
  4272b0:	ldr	x8, [sp, #32]
  4272b4:	str	x0, [sp, #8]
  4272b8:	mov	x0, x8
  4272bc:	bl	429b74 <seat_can_multi_session>
  4272c0:	and	w2, w0, #0x1
  4272c4:	ldr	x0, [sp, #8]
  4272c8:	adrp	x1, 441000 <_fini+0xc30>
  4272cc:	add	x1, x1, #0xe0e
  4272d0:	bl	407508 <sd_bus_message_append@plt>
  4272d4:	ldp	x29, x30, [sp, #96]
  4272d8:	add	sp, sp, #0x70
  4272dc:	ret

00000000004272e0 <property_get_can_tty>:
  4272e0:	sub	sp, sp, #0x70
  4272e4:	stp	x29, x30, [sp, #96]
  4272e8:	add	x29, sp, #0x60
  4272ec:	adrp	x8, 447000 <_fini+0x6c30>
  4272f0:	add	x8, x8, #0x7a7
  4272f4:	add	x8, x8, #0x3
  4272f8:	adrp	x9, 447000 <_fini+0x6c30>
  4272fc:	add	x9, x9, #0xb28
  427300:	stur	x0, [x29, #-8]
  427304:	stur	x1, [x29, #-16]
  427308:	stur	x2, [x29, #-24]
  42730c:	stur	x3, [x29, #-32]
  427310:	stur	x4, [x29, #-40]
  427314:	str	x5, [sp, #48]
  427318:	str	x6, [sp, #40]
  42731c:	ldr	x10, [sp, #48]
  427320:	str	x10, [sp, #32]
  427324:	str	x8, [sp, #24]
  427328:	str	x9, [sp, #16]
  42732c:	ldur	x8, [x29, #-8]
  427330:	cmp	x8, #0x0
  427334:	cset	w9, ne  // ne = any
  427338:	mov	w10, #0x1                   	// #1
  42733c:	eor	w9, w9, #0x1
  427340:	eor	w9, w9, w10
  427344:	eor	w9, w9, w10
  427348:	and	w9, w9, #0x1
  42734c:	mov	w0, w9
  427350:	sxtw	x8, w0
  427354:	cbz	x8, 427378 <property_get_can_tty+0x98>
  427358:	mov	w8, wzr
  42735c:	mov	w0, w8
  427360:	adrp	x1, 444000 <_fini+0x3c30>
  427364:	add	x1, x1, #0x393
  427368:	ldr	x2, [sp, #24]
  42736c:	mov	w3, #0x14                  	// #20
  427370:	ldr	x4, [sp, #16]
  427374:	bl	406c68 <log_assert_failed_realm@plt>
  427378:	ldur	x8, [x29, #-40]
  42737c:	cmp	x8, #0x0
  427380:	cset	w9, ne  // ne = any
  427384:	mov	w10, #0x1                   	// #1
  427388:	eor	w9, w9, #0x1
  42738c:	eor	w9, w9, w10
  427390:	eor	w9, w9, w10
  427394:	and	w9, w9, #0x1
  427398:	mov	w0, w9
  42739c:	sxtw	x8, w0
  4273a0:	cbz	x8, 4273c4 <property_get_can_tty+0xe4>
  4273a4:	mov	w8, wzr
  4273a8:	mov	w0, w8
  4273ac:	adrp	x1, 444000 <_fini+0x3c30>
  4273b0:	add	x1, x1, #0x417
  4273b4:	ldr	x2, [sp, #24]
  4273b8:	mov	w3, #0x14                  	// #20
  4273bc:	ldr	x4, [sp, #16]
  4273c0:	bl	406c68 <log_assert_failed_realm@plt>
  4273c4:	ldr	x8, [sp, #32]
  4273c8:	cmp	x8, #0x0
  4273cc:	cset	w9, ne  // ne = any
  4273d0:	mov	w10, #0x1                   	// #1
  4273d4:	eor	w9, w9, #0x1
  4273d8:	eor	w9, w9, w10
  4273dc:	eor	w9, w9, w10
  4273e0:	and	w9, w9, #0x1
  4273e4:	mov	w0, w9
  4273e8:	sxtw	x8, w0
  4273ec:	cbz	x8, 427410 <property_get_can_tty+0x130>
  4273f0:	mov	w8, wzr
  4273f4:	mov	w0, w8
  4273f8:	adrp	x1, 441000 <_fini+0xc30>
  4273fc:	add	x1, x1, #0xd41
  427400:	ldr	x2, [sp, #24]
  427404:	mov	w3, #0x14                  	// #20
  427408:	ldr	x4, [sp, #16]
  42740c:	bl	406c68 <log_assert_failed_realm@plt>
  427410:	ldur	x0, [x29, #-40]
  427414:	ldr	x8, [sp, #32]
  427418:	str	x0, [sp, #8]
  42741c:	mov	x0, x8
  427420:	bl	429bfc <seat_can_tty>
  427424:	and	w2, w0, #0x1
  427428:	ldr	x0, [sp, #8]
  42742c:	adrp	x1, 441000 <_fini+0xc30>
  427430:	add	x1, x1, #0xe0e
  427434:	bl	407508 <sd_bus_message_append@plt>
  427438:	ldp	x29, x30, [sp, #96]
  42743c:	add	sp, sp, #0x70
  427440:	ret

0000000000427444 <property_get_can_graphical>:
  427444:	sub	sp, sp, #0x70
  427448:	stp	x29, x30, [sp, #96]
  42744c:	add	x29, sp, #0x60
  427450:	adrp	x8, 447000 <_fini+0x6c30>
  427454:	add	x8, x8, #0x7a7
  427458:	add	x8, x8, #0x3
  42745c:	adrp	x9, 447000 <_fini+0x6c30>
  427460:	add	x9, x9, #0xb9f
  427464:	stur	x0, [x29, #-8]
  427468:	stur	x1, [x29, #-16]
  42746c:	stur	x2, [x29, #-24]
  427470:	stur	x3, [x29, #-32]
  427474:	stur	x4, [x29, #-40]
  427478:	str	x5, [sp, #48]
  42747c:	str	x6, [sp, #40]
  427480:	ldr	x10, [sp, #48]
  427484:	str	x10, [sp, #32]
  427488:	str	x8, [sp, #24]
  42748c:	str	x9, [sp, #16]
  427490:	ldur	x8, [x29, #-8]
  427494:	cmp	x8, #0x0
  427498:	cset	w9, ne  // ne = any
  42749c:	mov	w10, #0x1                   	// #1
  4274a0:	eor	w9, w9, #0x1
  4274a4:	eor	w9, w9, w10
  4274a8:	eor	w9, w9, w10
  4274ac:	and	w9, w9, #0x1
  4274b0:	mov	w0, w9
  4274b4:	sxtw	x8, w0
  4274b8:	cbz	x8, 4274dc <property_get_can_graphical+0x98>
  4274bc:	mov	w8, wzr
  4274c0:	mov	w0, w8
  4274c4:	adrp	x1, 444000 <_fini+0x3c30>
  4274c8:	add	x1, x1, #0x393
  4274cc:	ldr	x2, [sp, #24]
  4274d0:	mov	w3, #0x15                  	// #21
  4274d4:	ldr	x4, [sp, #16]
  4274d8:	bl	406c68 <log_assert_failed_realm@plt>
  4274dc:	ldur	x8, [x29, #-40]
  4274e0:	cmp	x8, #0x0
  4274e4:	cset	w9, ne  // ne = any
  4274e8:	mov	w10, #0x1                   	// #1
  4274ec:	eor	w9, w9, #0x1
  4274f0:	eor	w9, w9, w10
  4274f4:	eor	w9, w9, w10
  4274f8:	and	w9, w9, #0x1
  4274fc:	mov	w0, w9
  427500:	sxtw	x8, w0
  427504:	cbz	x8, 427528 <property_get_can_graphical+0xe4>
  427508:	mov	w8, wzr
  42750c:	mov	w0, w8
  427510:	adrp	x1, 444000 <_fini+0x3c30>
  427514:	add	x1, x1, #0x417
  427518:	ldr	x2, [sp, #24]
  42751c:	mov	w3, #0x15                  	// #21
  427520:	ldr	x4, [sp, #16]
  427524:	bl	406c68 <log_assert_failed_realm@plt>
  427528:	ldr	x8, [sp, #32]
  42752c:	cmp	x8, #0x0
  427530:	cset	w9, ne  // ne = any
  427534:	mov	w10, #0x1                   	// #1
  427538:	eor	w9, w9, #0x1
  42753c:	eor	w9, w9, w10
  427540:	eor	w9, w9, w10
  427544:	and	w9, w9, #0x1
  427548:	mov	w0, w9
  42754c:	sxtw	x8, w0
  427550:	cbz	x8, 427574 <property_get_can_graphical+0x130>
  427554:	mov	w8, wzr
  427558:	mov	w0, w8
  42755c:	adrp	x1, 441000 <_fini+0xc30>
  427560:	add	x1, x1, #0xd41
  427564:	ldr	x2, [sp, #24]
  427568:	mov	w3, #0x15                  	// #21
  42756c:	ldr	x4, [sp, #16]
  427570:	bl	406c68 <log_assert_failed_realm@plt>
  427574:	ldur	x0, [x29, #-40]
  427578:	ldr	x8, [sp, #32]
  42757c:	str	x0, [sp, #8]
  427580:	mov	x0, x8
  427584:	bl	429c84 <seat_can_graphical>
  427588:	and	w2, w0, #0x1
  42758c:	ldr	x0, [sp, #8]
  427590:	adrp	x1, 441000 <_fini+0xc30>
  427594:	add	x1, x1, #0xe0e
  427598:	bl	407508 <sd_bus_message_append@plt>
  42759c:	ldp	x29, x30, [sp, #96]
  4275a0:	add	sp, sp, #0x70
  4275a4:	ret

00000000004275a8 <property_get_sessions>:
  4275a8:	sub	sp, sp, #0x90
  4275ac:	stp	x29, x30, [sp, #128]
  4275b0:	add	x29, sp, #0x80
  4275b4:	adrp	x8, 447000 <_fini+0x6c30>
  4275b8:	add	x8, x8, #0x7a7
  4275bc:	add	x8, x8, #0x3
  4275c0:	adrp	x9, 447000 <_fini+0x6c30>
  4275c4:	add	x9, x9, #0xc1c
  4275c8:	stur	x0, [x29, #-16]
  4275cc:	stur	x1, [x29, #-24]
  4275d0:	stur	x2, [x29, #-32]
  4275d4:	stur	x3, [x29, #-40]
  4275d8:	stur	x4, [x29, #-48]
  4275dc:	stur	x5, [x29, #-56]
  4275e0:	str	x6, [sp, #64]
  4275e4:	ldur	x10, [x29, #-56]
  4275e8:	str	x10, [sp, #56]
  4275ec:	str	x8, [sp, #16]
  4275f0:	str	x9, [sp, #8]
  4275f4:	ldur	x8, [x29, #-16]
  4275f8:	cmp	x8, #0x0
  4275fc:	cset	w9, ne  // ne = any
  427600:	mov	w10, #0x1                   	// #1
  427604:	eor	w9, w9, #0x1
  427608:	eor	w9, w9, w10
  42760c:	eor	w9, w9, w10
  427610:	and	w9, w9, #0x1
  427614:	mov	w0, w9
  427618:	sxtw	x8, w0
  42761c:	cbz	x8, 427640 <property_get_sessions+0x98>
  427620:	mov	w8, wzr
  427624:	mov	w0, w8
  427628:	adrp	x1, 444000 <_fini+0x3c30>
  42762c:	add	x1, x1, #0x393
  427630:	ldr	x2, [sp, #16]
  427634:	mov	w3, #0x3b                  	// #59
  427638:	ldr	x4, [sp, #8]
  42763c:	bl	406c68 <log_assert_failed_realm@plt>
  427640:	ldur	x8, [x29, #-48]
  427644:	cmp	x8, #0x0
  427648:	cset	w9, ne  // ne = any
  42764c:	mov	w10, #0x1                   	// #1
  427650:	eor	w9, w9, #0x1
  427654:	eor	w9, w9, w10
  427658:	eor	w9, w9, w10
  42765c:	and	w9, w9, #0x1
  427660:	mov	w0, w9
  427664:	sxtw	x8, w0
  427668:	cbz	x8, 42768c <property_get_sessions+0xe4>
  42766c:	mov	w8, wzr
  427670:	mov	w0, w8
  427674:	adrp	x1, 444000 <_fini+0x3c30>
  427678:	add	x1, x1, #0x417
  42767c:	ldr	x2, [sp, #16]
  427680:	mov	w3, #0x3c                  	// #60
  427684:	ldr	x4, [sp, #8]
  427688:	bl	406c68 <log_assert_failed_realm@plt>
  42768c:	ldr	x8, [sp, #56]
  427690:	cmp	x8, #0x0
  427694:	cset	w9, ne  // ne = any
  427698:	mov	w10, #0x1                   	// #1
  42769c:	eor	w9, w9, #0x1
  4276a0:	eor	w9, w9, w10
  4276a4:	eor	w9, w9, w10
  4276a8:	and	w9, w9, #0x1
  4276ac:	mov	w0, w9
  4276b0:	sxtw	x8, w0
  4276b4:	cbz	x8, 4276d8 <property_get_sessions+0x130>
  4276b8:	mov	w8, wzr
  4276bc:	mov	w0, w8
  4276c0:	adrp	x1, 442000 <_fini+0x1c30>
  4276c4:	add	x1, x1, #0xf2
  4276c8:	ldr	x2, [sp, #16]
  4276cc:	mov	w3, #0x3d                  	// #61
  4276d0:	ldr	x4, [sp, #8]
  4276d4:	bl	406c68 <log_assert_failed_realm@plt>
  4276d8:	ldur	x0, [x29, #-48]
  4276dc:	mov	w1, #0x61                  	// #97
  4276e0:	adrp	x2, 445000 <_fini+0x4c30>
  4276e4:	add	x2, x2, #0x2d8
  4276e8:	bl	407588 <sd_bus_message_open_container@plt>
  4276ec:	str	w0, [sp, #44]
  4276f0:	ldr	w8, [sp, #44]
  4276f4:	cmp	w8, #0x0
  4276f8:	cset	w8, ge  // ge = tcont
  4276fc:	tbnz	w8, #0, 42770c <property_get_sessions+0x164>
  427700:	ldr	w8, [sp, #44]
  427704:	stur	w8, [x29, #-4]
  427708:	b	4277f0 <property_get_sessions+0x248>
  42770c:	ldr	x8, [sp, #56]
  427710:	ldr	x8, [x8, #48]
  427714:	str	x8, [sp, #48]
  427718:	ldr	x8, [sp, #48]
  42771c:	cbz	x8, 4277c0 <property_get_sessions+0x218>
  427720:	mov	x8, xzr
  427724:	str	x8, [sp, #32]
  427728:	ldr	x0, [sp, #48]
  42772c:	bl	42ee0c <session_bus_path>
  427730:	str	x0, [sp, #32]
  427734:	ldr	x8, [sp, #32]
  427738:	cbnz	x8, 427750 <property_get_sessions+0x1a8>
  42773c:	mov	w8, #0xfffffff4            	// #-12
  427740:	stur	w8, [x29, #-4]
  427744:	mov	w8, #0x1                   	// #1
  427748:	str	w8, [sp, #28]
  42774c:	b	427798 <property_get_sessions+0x1f0>
  427750:	ldur	x0, [x29, #-48]
  427754:	ldr	x8, [sp, #48]
  427758:	ldr	x2, [x8, #8]
  42775c:	ldr	x3, [sp, #32]
  427760:	adrp	x1, 445000 <_fini+0x4c30>
  427764:	add	x1, x1, #0x2d8
  427768:	bl	407508 <sd_bus_message_append@plt>
  42776c:	str	w0, [sp, #44]
  427770:	ldr	w9, [sp, #44]
  427774:	cmp	w9, #0x0
  427778:	cset	w9, ge  // ge = tcont
  42777c:	tbnz	w9, #0, 427794 <property_get_sessions+0x1ec>
  427780:	ldr	w8, [sp, #44]
  427784:	stur	w8, [x29, #-4]
  427788:	mov	w8, #0x1                   	// #1
  42778c:	str	w8, [sp, #28]
  427790:	b	427798 <property_get_sessions+0x1f0>
  427794:	str	wzr, [sp, #28]
  427798:	add	x0, sp, #0x20
  42779c:	bl	428368 <freep>
  4277a0:	ldr	w8, [sp, #28]
  4277a4:	cbz	w8, 4277b0 <property_get_sessions+0x208>
  4277a8:	b	4277ac <property_get_sessions+0x204>
  4277ac:	b	4277f0 <property_get_sessions+0x248>
  4277b0:	ldr	x8, [sp, #48]
  4277b4:	ldr	x8, [x8, #272]
  4277b8:	str	x8, [sp, #48]
  4277bc:	b	427718 <property_get_sessions+0x170>
  4277c0:	ldur	x0, [x29, #-48]
  4277c4:	bl	407598 <sd_bus_message_close_container@plt>
  4277c8:	str	w0, [sp, #44]
  4277cc:	ldr	w8, [sp, #44]
  4277d0:	cmp	w8, #0x0
  4277d4:	cset	w8, ge  // ge = tcont
  4277d8:	tbnz	w8, #0, 4277e8 <property_get_sessions+0x240>
  4277dc:	ldr	w8, [sp, #44]
  4277e0:	stur	w8, [x29, #-4]
  4277e4:	b	4277f0 <property_get_sessions+0x248>
  4277e8:	mov	w8, #0x1                   	// #1
  4277ec:	stur	w8, [x29, #-4]
  4277f0:	ldur	w0, [x29, #-4]
  4277f4:	ldp	x29, x30, [sp, #128]
  4277f8:	add	sp, sp, #0x90
  4277fc:	ret

0000000000427800 <property_get_idle_hint>:
  427800:	sub	sp, sp, #0x70
  427804:	stp	x29, x30, [sp, #96]
  427808:	add	x29, sp, #0x60
  42780c:	adrp	x8, 447000 <_fini+0x6c30>
  427810:	add	x8, x8, #0x7a7
  427814:	add	x8, x8, #0x3
  427818:	adrp	x9, 444000 <_fini+0x3c30>
  42781c:	add	x9, x9, #0xaf7
  427820:	stur	x0, [x29, #-8]
  427824:	stur	x1, [x29, #-16]
  427828:	stur	x2, [x29, #-24]
  42782c:	stur	x3, [x29, #-32]
  427830:	stur	x4, [x29, #-40]
  427834:	str	x5, [sp, #48]
  427838:	str	x6, [sp, #40]
  42783c:	ldr	x10, [sp, #48]
  427840:	str	x10, [sp, #32]
  427844:	str	x8, [sp, #24]
  427848:	str	x9, [sp, #16]
  42784c:	ldur	x8, [x29, #-8]
  427850:	cmp	x8, #0x0
  427854:	cset	w9, ne  // ne = any
  427858:	mov	w10, #0x1                   	// #1
  42785c:	eor	w9, w9, #0x1
  427860:	eor	w9, w9, w10
  427864:	eor	w9, w9, w10
  427868:	and	w9, w9, #0x1
  42786c:	mov	w0, w9
  427870:	sxtw	x8, w0
  427874:	cbz	x8, 427898 <property_get_idle_hint+0x98>
  427878:	mov	w8, wzr
  42787c:	mov	w0, w8
  427880:	adrp	x1, 444000 <_fini+0x3c30>
  427884:	add	x1, x1, #0x393
  427888:	ldr	x2, [sp, #24]
  42788c:	mov	w3, #0x62                  	// #98
  427890:	ldr	x4, [sp, #16]
  427894:	bl	406c68 <log_assert_failed_realm@plt>
  427898:	ldur	x8, [x29, #-40]
  42789c:	cmp	x8, #0x0
  4278a0:	cset	w9, ne  // ne = any
  4278a4:	mov	w10, #0x1                   	// #1
  4278a8:	eor	w9, w9, #0x1
  4278ac:	eor	w9, w9, w10
  4278b0:	eor	w9, w9, w10
  4278b4:	and	w9, w9, #0x1
  4278b8:	mov	w0, w9
  4278bc:	sxtw	x8, w0
  4278c0:	cbz	x8, 4278e4 <property_get_idle_hint+0xe4>
  4278c4:	mov	w8, wzr
  4278c8:	mov	w0, w8
  4278cc:	adrp	x1, 444000 <_fini+0x3c30>
  4278d0:	add	x1, x1, #0x417
  4278d4:	ldr	x2, [sp, #24]
  4278d8:	mov	w3, #0x63                  	// #99
  4278dc:	ldr	x4, [sp, #16]
  4278e0:	bl	406c68 <log_assert_failed_realm@plt>
  4278e4:	ldr	x8, [sp, #32]
  4278e8:	cmp	x8, #0x0
  4278ec:	cset	w9, ne  // ne = any
  4278f0:	mov	w10, #0x1                   	// #1
  4278f4:	eor	w9, w9, #0x1
  4278f8:	eor	w9, w9, w10
  4278fc:	eor	w9, w9, w10
  427900:	and	w9, w9, #0x1
  427904:	mov	w0, w9
  427908:	sxtw	x8, w0
  42790c:	cbz	x8, 427930 <property_get_idle_hint+0x130>
  427910:	mov	w8, wzr
  427914:	mov	w0, w8
  427918:	adrp	x1, 442000 <_fini+0x1c30>
  42791c:	add	x1, x1, #0xf2
  427920:	ldr	x2, [sp, #24]
  427924:	mov	w3, #0x64                  	// #100
  427928:	ldr	x4, [sp, #16]
  42792c:	bl	406c68 <log_assert_failed_realm@plt>
  427930:	ldur	x0, [x29, #-40]
  427934:	ldr	x8, [sp, #32]
  427938:	str	x0, [sp, #8]
  42793c:	mov	x0, x8
  427940:	mov	x8, xzr
  427944:	mov	x1, x8
  427948:	bl	42baa4 <seat_get_idle_hint>
  42794c:	cmp	w0, #0x0
  427950:	cset	w9, gt
  427954:	and	w2, w9, #0x1
  427958:	ldr	x0, [sp, #8]
  42795c:	adrp	x1, 441000 <_fini+0xc30>
  427960:	add	x1, x1, #0xe0e
  427964:	bl	407508 <sd_bus_message_append@plt>
  427968:	ldp	x29, x30, [sp, #96]
  42796c:	add	sp, sp, #0x70
  427970:	ret

0000000000427974 <property_get_idle_since_hint>:
  427974:	sub	sp, sp, #0x90
  427978:	stp	x29, x30, [sp, #128]
  42797c:	add	x29, sp, #0x80
  427980:	adrp	x8, 447000 <_fini+0x6c30>
  427984:	add	x8, x8, #0x7a7
  427988:	add	x8, x8, #0x3
  42798c:	adrp	x9, 444000 <_fini+0x3c30>
  427990:	add	x9, x9, #0xb70
  427994:	stur	x0, [x29, #-16]
  427998:	stur	x1, [x29, #-24]
  42799c:	stur	x2, [x29, #-32]
  4279a0:	stur	x3, [x29, #-40]
  4279a4:	stur	x4, [x29, #-48]
  4279a8:	stur	x5, [x29, #-56]
  4279ac:	str	x6, [sp, #64]
  4279b0:	ldur	x10, [x29, #-56]
  4279b4:	str	x10, [sp, #56]
  4279b8:	str	x8, [sp, #16]
  4279bc:	str	x9, [sp, #8]
  4279c0:	ldur	x8, [x29, #-16]
  4279c4:	cmp	x8, #0x0
  4279c8:	cset	w9, ne  // ne = any
  4279cc:	mov	w10, #0x1                   	// #1
  4279d0:	eor	w9, w9, #0x1
  4279d4:	eor	w9, w9, w10
  4279d8:	eor	w9, w9, w10
  4279dc:	and	w9, w9, #0x1
  4279e0:	mov	w0, w9
  4279e4:	sxtw	x8, w0
  4279e8:	cbz	x8, 427a0c <property_get_idle_since_hint+0x98>
  4279ec:	mov	w8, wzr
  4279f0:	mov	w0, w8
  4279f4:	adrp	x1, 444000 <_fini+0x3c30>
  4279f8:	add	x1, x1, #0x393
  4279fc:	ldr	x2, [sp, #16]
  427a00:	mov	w3, #0x77                  	// #119
  427a04:	ldr	x4, [sp, #8]
  427a08:	bl	406c68 <log_assert_failed_realm@plt>
  427a0c:	ldur	x8, [x29, #-48]
  427a10:	cmp	x8, #0x0
  427a14:	cset	w9, ne  // ne = any
  427a18:	mov	w10, #0x1                   	// #1
  427a1c:	eor	w9, w9, #0x1
  427a20:	eor	w9, w9, w10
  427a24:	eor	w9, w9, w10
  427a28:	and	w9, w9, #0x1
  427a2c:	mov	w0, w9
  427a30:	sxtw	x8, w0
  427a34:	cbz	x8, 427a58 <property_get_idle_since_hint+0xe4>
  427a38:	mov	w8, wzr
  427a3c:	mov	w0, w8
  427a40:	adrp	x1, 444000 <_fini+0x3c30>
  427a44:	add	x1, x1, #0x417
  427a48:	ldr	x2, [sp, #16]
  427a4c:	mov	w3, #0x78                  	// #120
  427a50:	ldr	x4, [sp, #8]
  427a54:	bl	406c68 <log_assert_failed_realm@plt>
  427a58:	ldr	x8, [sp, #56]
  427a5c:	cmp	x8, #0x0
  427a60:	cset	w9, ne  // ne = any
  427a64:	mov	w10, #0x1                   	// #1
  427a68:	eor	w9, w9, #0x1
  427a6c:	eor	w9, w9, w10
  427a70:	eor	w9, w9, w10
  427a74:	and	w9, w9, #0x1
  427a78:	mov	w0, w9
  427a7c:	sxtw	x8, w0
  427a80:	cbz	x8, 427aa4 <property_get_idle_since_hint+0x130>
  427a84:	mov	w8, wzr
  427a88:	mov	w0, w8
  427a8c:	adrp	x1, 442000 <_fini+0x1c30>
  427a90:	add	x1, x1, #0xf2
  427a94:	ldr	x2, [sp, #16]
  427a98:	mov	w3, #0x79                  	// #121
  427a9c:	ldr	x4, [sp, #8]
  427aa0:	bl	406c68 <log_assert_failed_realm@plt>
  427aa4:	ldr	x0, [sp, #56]
  427aa8:	add	x1, sp, #0x28
  427aac:	bl	42baa4 <seat_get_idle_hint>
  427ab0:	str	w0, [sp, #28]
  427ab4:	ldr	w8, [sp, #28]
  427ab8:	cmp	w8, #0x0
  427abc:	cset	w8, ge  // ge = tcont
  427ac0:	tbnz	w8, #0, 427ad0 <property_get_idle_since_hint+0x15c>
  427ac4:	ldr	w8, [sp, #28]
  427ac8:	stur	w8, [x29, #-4]
  427acc:	b	427b18 <property_get_idle_since_hint+0x1a4>
  427ad0:	ldur	x0, [x29, #-40]
  427ad4:	adrp	x1, 443000 <_fini+0x2c30>
  427ad8:	add	x1, x1, #0x285
  427adc:	bl	407158 <strcmp@plt>
  427ae0:	cbnz	w0, 427af0 <property_get_idle_since_hint+0x17c>
  427ae4:	ldr	x8, [sp, #40]
  427ae8:	str	x8, [sp]
  427aec:	b	427af8 <property_get_idle_since_hint+0x184>
  427af0:	ldr	x8, [sp, #48]
  427af4:	str	x8, [sp]
  427af8:	ldr	x8, [sp]
  427afc:	str	x8, [sp, #32]
  427b00:	ldur	x0, [x29, #-48]
  427b04:	ldr	x2, [sp, #32]
  427b08:	adrp	x1, 443000 <_fini+0x2c30>
  427b0c:	add	x1, x1, #0x250
  427b10:	bl	407508 <sd_bus_message_append@plt>
  427b14:	stur	w0, [x29, #-4]
  427b18:	ldur	w0, [x29, #-4]
  427b1c:	ldp	x29, x30, [sp, #128]
  427b20:	add	sp, sp, #0x90
  427b24:	ret

0000000000427b28 <method_activate_session>:
  427b28:	sub	sp, sp, #0x60
  427b2c:	stp	x29, x30, [sp, #80]
  427b30:	add	x29, sp, #0x50
  427b34:	adrp	x8, 447000 <_fini+0x6c30>
  427b38:	add	x8, x8, #0x7a7
  427b3c:	add	x8, x8, #0x3
  427b40:	stur	x0, [x29, #-16]
  427b44:	stur	x1, [x29, #-24]
  427b48:	stur	x2, [x29, #-32]
  427b4c:	ldur	x9, [x29, #-24]
  427b50:	str	x9, [sp, #40]
  427b54:	str	x8, [sp, #8]
  427b58:	ldur	x8, [x29, #-16]
  427b5c:	cmp	x8, #0x0
  427b60:	cset	w9, ne  // ne = any
  427b64:	mov	w10, #0x1                   	// #1
  427b68:	eor	w9, w9, #0x1
  427b6c:	eor	w9, w9, w10
  427b70:	eor	w9, w9, w10
  427b74:	and	w9, w9, #0x1
  427b78:	mov	w0, w9
  427b7c:	sxtw	x8, w0
  427b80:	cbz	x8, 427ba8 <method_activate_session+0x80>
  427b84:	mov	w8, wzr
  427b88:	mov	w0, w8
  427b8c:	adrp	x1, 443000 <_fini+0x2c30>
  427b90:	add	x1, x1, #0x812
  427b94:	ldr	x2, [sp, #8]
  427b98:	mov	w3, #0xa6                  	// #166
  427b9c:	adrp	x4, 445000 <_fini+0x4c30>
  427ba0:	add	x4, x4, #0x6e0
  427ba4:	bl	406c68 <log_assert_failed_realm@plt>
  427ba8:	ldr	x8, [sp, #40]
  427bac:	cmp	x8, #0x0
  427bb0:	cset	w9, ne  // ne = any
  427bb4:	mov	w10, #0x1                   	// #1
  427bb8:	eor	w9, w9, #0x1
  427bbc:	eor	w9, w9, w10
  427bc0:	eor	w9, w9, w10
  427bc4:	and	w9, w9, #0x1
  427bc8:	mov	w0, w9
  427bcc:	sxtw	x8, w0
  427bd0:	cbz	x8, 427bf8 <method_activate_session+0xd0>
  427bd4:	mov	w8, wzr
  427bd8:	mov	w0, w8
  427bdc:	adrp	x1, 442000 <_fini+0x1c30>
  427be0:	add	x1, x1, #0xf2
  427be4:	ldr	x2, [sp, #8]
  427be8:	mov	w3, #0xa7                  	// #167
  427bec:	adrp	x4, 445000 <_fini+0x4c30>
  427bf0:	add	x4, x4, #0x6e0
  427bf4:	bl	406c68 <log_assert_failed_realm@plt>
  427bf8:	ldur	x0, [x29, #-16]
  427bfc:	adrp	x1, 442000 <_fini+0x1c30>
  427c00:	add	x1, x1, #0xf2
  427c04:	add	x2, sp, #0x20
  427c08:	bl	4074c8 <sd_bus_message_read@plt>
  427c0c:	str	w0, [sp, #20]
  427c10:	ldr	w8, [sp, #20]
  427c14:	cmp	w8, #0x0
  427c18:	cset	w8, ge  // ge = tcont
  427c1c:	tbnz	w8, #0, 427c2c <method_activate_session+0x104>
  427c20:	ldr	w8, [sp, #20]
  427c24:	stur	w8, [x29, #-4]
  427c28:	b	427cec <method_activate_session+0x1c4>
  427c2c:	ldr	x8, [sp, #40]
  427c30:	ldr	x8, [x8]
  427c34:	ldr	x0, [x8, #32]
  427c38:	ldr	x1, [sp, #32]
  427c3c:	bl	4289a0 <hashmap_get>
  427c40:	str	x0, [sp, #24]
  427c44:	ldr	x8, [sp, #24]
  427c48:	cbnz	x8, 427c70 <method_activate_session+0x148>
  427c4c:	ldur	x0, [x29, #-32]
  427c50:	ldr	x3, [sp, #32]
  427c54:	adrp	x1, 442000 <_fini+0x1c30>
  427c58:	add	x1, x1, #0xe13
  427c5c:	adrp	x2, 442000 <_fini+0x1c30>
  427c60:	add	x2, x2, #0xe38
  427c64:	bl	407468 <sd_bus_error_setf@plt>
  427c68:	stur	w0, [x29, #-4]
  427c6c:	b	427cec <method_activate_session+0x1c4>
  427c70:	ldr	x8, [sp, #24]
  427c74:	ldr	x8, [x8, #136]
  427c78:	ldr	x9, [sp, #40]
  427c7c:	cmp	x8, x9
  427c80:	b.eq	427cb0 <method_activate_session+0x188>  // b.none
  427c84:	ldur	x0, [x29, #-32]
  427c88:	ldr	x3, [sp, #32]
  427c8c:	ldr	x8, [sp, #40]
  427c90:	ldr	x4, [x8, #8]
  427c94:	adrp	x1, 445000 <_fini+0x4c30>
  427c98:	add	x1, x1, #0x774
  427c9c:	adrp	x2, 445000 <_fini+0x4c30>
  427ca0:	add	x2, x2, #0x79c
  427ca4:	bl	407468 <sd_bus_error_setf@plt>
  427ca8:	stur	w0, [x29, #-4]
  427cac:	b	427cec <method_activate_session+0x1c4>
  427cb0:	ldr	x0, [sp, #24]
  427cb4:	bl	434f00 <session_activate>
  427cb8:	str	w0, [sp, #20]
  427cbc:	ldr	w8, [sp, #20]
  427cc0:	cmp	w8, #0x0
  427cc4:	cset	w8, ge  // ge = tcont
  427cc8:	tbnz	w8, #0, 427cd8 <method_activate_session+0x1b0>
  427ccc:	ldr	w8, [sp, #20]
  427cd0:	stur	w8, [x29, #-4]
  427cd4:	b	427cec <method_activate_session+0x1c4>
  427cd8:	ldur	x0, [x29, #-16]
  427cdc:	mov	x8, xzr
  427ce0:	mov	x1, x8
  427ce4:	bl	4075b8 <sd_bus_reply_method_return@plt>
  427ce8:	stur	w0, [x29, #-4]
  427cec:	ldur	w0, [x29, #-4]
  427cf0:	ldp	x29, x30, [sp, #80]
  427cf4:	add	sp, sp, #0x60
  427cf8:	ret

0000000000427cfc <method_switch_to>:
  427cfc:	sub	sp, sp, #0x50
  427d00:	stp	x29, x30, [sp, #64]
  427d04:	add	x29, sp, #0x40
  427d08:	adrp	x8, 447000 <_fini+0x6c30>
  427d0c:	add	x8, x8, #0x7a7
  427d10:	add	x8, x8, #0x3
  427d14:	stur	x0, [x29, #-16]
  427d18:	stur	x1, [x29, #-24]
  427d1c:	str	x2, [sp, #32]
  427d20:	ldur	x9, [x29, #-24]
  427d24:	str	x9, [sp, #24]
  427d28:	str	x8, [sp, #8]
  427d2c:	ldur	x8, [x29, #-16]
  427d30:	cmp	x8, #0x0
  427d34:	cset	w9, ne  // ne = any
  427d38:	mov	w10, #0x1                   	// #1
  427d3c:	eor	w9, w9, #0x1
  427d40:	eor	w9, w9, w10
  427d44:	eor	w9, w9, w10
  427d48:	and	w9, w9, #0x1
  427d4c:	mov	w0, w9
  427d50:	sxtw	x8, w0
  427d54:	cbz	x8, 427d7c <method_switch_to+0x80>
  427d58:	mov	w8, wzr
  427d5c:	mov	w0, w8
  427d60:	adrp	x1, 443000 <_fini+0x2c30>
  427d64:	add	x1, x1, #0x812
  427d68:	ldr	x2, [sp, #8]
  427d6c:	mov	w3, #0xc0                  	// #192
  427d70:	adrp	x4, 447000 <_fini+0x6c30>
  427d74:	add	x4, x4, #0xc94
  427d78:	bl	406c68 <log_assert_failed_realm@plt>
  427d7c:	ldr	x8, [sp, #24]
  427d80:	cmp	x8, #0x0
  427d84:	cset	w9, ne  // ne = any
  427d88:	mov	w10, #0x1                   	// #1
  427d8c:	eor	w9, w9, #0x1
  427d90:	eor	w9, w9, w10
  427d94:	eor	w9, w9, w10
  427d98:	and	w9, w9, #0x1
  427d9c:	mov	w0, w9
  427da0:	sxtw	x8, w0
  427da4:	cbz	x8, 427dcc <method_switch_to+0xd0>
  427da8:	mov	w8, wzr
  427dac:	mov	w0, w8
  427db0:	adrp	x1, 442000 <_fini+0x1c30>
  427db4:	add	x1, x1, #0xf2
  427db8:	ldr	x2, [sp, #8]
  427dbc:	mov	w3, #0xc1                  	// #193
  427dc0:	adrp	x4, 447000 <_fini+0x6c30>
  427dc4:	add	x4, x4, #0xc94
  427dc8:	bl	406c68 <log_assert_failed_realm@plt>
  427dcc:	ldur	x0, [x29, #-16]
  427dd0:	adrp	x1, 443000 <_fini+0x2c30>
  427dd4:	add	x1, x1, #0x1dd
  427dd8:	add	x2, sp, #0x14
  427ddc:	bl	4074c8 <sd_bus_message_read@plt>
  427de0:	str	w0, [sp, #16]
  427de4:	ldr	w8, [sp, #16]
  427de8:	cmp	w8, #0x0
  427dec:	cset	w8, ge  // ge = tcont
  427df0:	tbnz	w8, #0, 427e00 <method_switch_to+0x104>
  427df4:	ldr	w8, [sp, #16]
  427df8:	stur	w8, [x29, #-4]
  427dfc:	b	427e5c <method_switch_to+0x160>
  427e00:	ldr	w8, [sp, #20]
  427e04:	cmp	w8, #0x0
  427e08:	cset	w8, hi  // hi = pmore
  427e0c:	tbnz	w8, #0, 427e1c <method_switch_to+0x120>
  427e10:	mov	w8, #0xffffffea            	// #-22
  427e14:	stur	w8, [x29, #-4]
  427e18:	b	427e5c <method_switch_to+0x160>
  427e1c:	ldr	x0, [sp, #24]
  427e20:	ldr	w1, [sp, #20]
  427e24:	bl	42a61c <seat_switch_to>
  427e28:	str	w0, [sp, #16]
  427e2c:	ldr	w8, [sp, #16]
  427e30:	cmp	w8, #0x0
  427e34:	cset	w8, ge  // ge = tcont
  427e38:	tbnz	w8, #0, 427e48 <method_switch_to+0x14c>
  427e3c:	ldr	w8, [sp, #16]
  427e40:	stur	w8, [x29, #-4]
  427e44:	b	427e5c <method_switch_to+0x160>
  427e48:	ldur	x0, [x29, #-16]
  427e4c:	mov	x8, xzr
  427e50:	mov	x1, x8
  427e54:	bl	4075b8 <sd_bus_reply_method_return@plt>
  427e58:	stur	w0, [x29, #-4]
  427e5c:	ldur	w0, [x29, #-4]
  427e60:	ldp	x29, x30, [sp, #64]
  427e64:	add	sp, sp, #0x50
  427e68:	ret

0000000000427e6c <method_switch_to_next>:
  427e6c:	sub	sp, sp, #0x50
  427e70:	stp	x29, x30, [sp, #64]
  427e74:	add	x29, sp, #0x40
  427e78:	adrp	x8, 447000 <_fini+0x6c30>
  427e7c:	add	x8, x8, #0x7a7
  427e80:	add	x8, x8, #0x3
  427e84:	stur	x0, [x29, #-16]
  427e88:	stur	x1, [x29, #-24]
  427e8c:	str	x2, [sp, #32]
  427e90:	ldur	x9, [x29, #-24]
  427e94:	str	x9, [sp, #24]
  427e98:	str	x8, [sp, #8]
  427e9c:	ldur	x8, [x29, #-16]
  427ea0:	cmp	x8, #0x0
  427ea4:	cset	w9, ne  // ne = any
  427ea8:	mov	w10, #0x1                   	// #1
  427eac:	eor	w9, w9, #0x1
  427eb0:	eor	w9, w9, w10
  427eb4:	eor	w9, w9, w10
  427eb8:	and	w9, w9, #0x1
  427ebc:	mov	w0, w9
  427ec0:	sxtw	x8, w0
  427ec4:	cbz	x8, 427eec <method_switch_to_next+0x80>
  427ec8:	mov	w8, wzr
  427ecc:	mov	w0, w8
  427ed0:	adrp	x1, 443000 <_fini+0x2c30>
  427ed4:	add	x1, x1, #0x812
  427ed8:	ldr	x2, [sp, #8]
  427edc:	mov	w3, #0xd5                  	// #213
  427ee0:	adrp	x4, 447000 <_fini+0x6c30>
  427ee4:	add	x4, x4, #0xcd3
  427ee8:	bl	406c68 <log_assert_failed_realm@plt>
  427eec:	ldr	x8, [sp, #24]
  427ef0:	cmp	x8, #0x0
  427ef4:	cset	w9, ne  // ne = any
  427ef8:	mov	w10, #0x1                   	// #1
  427efc:	eor	w9, w9, #0x1
  427f00:	eor	w9, w9, w10
  427f04:	eor	w9, w9, w10
  427f08:	and	w9, w9, #0x1
  427f0c:	mov	w0, w9
  427f10:	sxtw	x8, w0
  427f14:	cbz	x8, 427f3c <method_switch_to_next+0xd0>
  427f18:	mov	w8, wzr
  427f1c:	mov	w0, w8
  427f20:	adrp	x1, 442000 <_fini+0x1c30>
  427f24:	add	x1, x1, #0xf2
  427f28:	ldr	x2, [sp, #8]
  427f2c:	mov	w3, #0xd6                  	// #214
  427f30:	adrp	x4, 447000 <_fini+0x6c30>
  427f34:	add	x4, x4, #0xcd3
  427f38:	bl	406c68 <log_assert_failed_realm@plt>
  427f3c:	ldr	x0, [sp, #24]
  427f40:	bl	42a6f0 <seat_switch_to_next>
  427f44:	str	w0, [sp, #20]
  427f48:	ldr	w8, [sp, #20]
  427f4c:	cmp	w8, #0x0
  427f50:	cset	w8, ge  // ge = tcont
  427f54:	tbnz	w8, #0, 427f64 <method_switch_to_next+0xf8>
  427f58:	ldr	w8, [sp, #20]
  427f5c:	stur	w8, [x29, #-4]
  427f60:	b	427f78 <method_switch_to_next+0x10c>
  427f64:	ldur	x0, [x29, #-16]
  427f68:	mov	x8, xzr
  427f6c:	mov	x1, x8
  427f70:	bl	4075b8 <sd_bus_reply_method_return@plt>
  427f74:	stur	w0, [x29, #-4]
  427f78:	ldur	w0, [x29, #-4]
  427f7c:	ldp	x29, x30, [sp, #64]
  427f80:	add	sp, sp, #0x50
  427f84:	ret

0000000000427f88 <method_switch_to_previous>:
  427f88:	sub	sp, sp, #0x50
  427f8c:	stp	x29, x30, [sp, #64]
  427f90:	add	x29, sp, #0x40
  427f94:	adrp	x8, 447000 <_fini+0x6c30>
  427f98:	add	x8, x8, #0x7a7
  427f9c:	add	x8, x8, #0x3
  427fa0:	stur	x0, [x29, #-16]
  427fa4:	stur	x1, [x29, #-24]
  427fa8:	str	x2, [sp, #32]
  427fac:	ldur	x9, [x29, #-24]
  427fb0:	str	x9, [sp, #24]
  427fb4:	str	x8, [sp, #8]
  427fb8:	ldur	x8, [x29, #-16]
  427fbc:	cmp	x8, #0x0
  427fc0:	cset	w9, ne  // ne = any
  427fc4:	mov	w10, #0x1                   	// #1
  427fc8:	eor	w9, w9, #0x1
  427fcc:	eor	w9, w9, w10
  427fd0:	eor	w9, w9, w10
  427fd4:	and	w9, w9, #0x1
  427fd8:	mov	w0, w9
  427fdc:	sxtw	x8, w0
  427fe0:	cbz	x8, 428008 <method_switch_to_previous+0x80>
  427fe4:	mov	w8, wzr
  427fe8:	mov	w0, w8
  427fec:	adrp	x1, 443000 <_fini+0x2c30>
  427ff0:	add	x1, x1, #0x812
  427ff4:	ldr	x2, [sp, #8]
  427ff8:	mov	w3, #0xe3                  	// #227
  427ffc:	adrp	x4, 447000 <_fini+0x6c30>
  428000:	add	x4, x4, #0xd17
  428004:	bl	406c68 <log_assert_failed_realm@plt>
  428008:	ldr	x8, [sp, #24]
  42800c:	cmp	x8, #0x0
  428010:	cset	w9, ne  // ne = any
  428014:	mov	w10, #0x1                   	// #1
  428018:	eor	w9, w9, #0x1
  42801c:	eor	w9, w9, w10
  428020:	eor	w9, w9, w10
  428024:	and	w9, w9, #0x1
  428028:	mov	w0, w9
  42802c:	sxtw	x8, w0
  428030:	cbz	x8, 428058 <method_switch_to_previous+0xd0>
  428034:	mov	w8, wzr
  428038:	mov	w0, w8
  42803c:	adrp	x1, 442000 <_fini+0x1c30>
  428040:	add	x1, x1, #0xf2
  428044:	ldr	x2, [sp, #8]
  428048:	mov	w3, #0xe4                  	// #228
  42804c:	adrp	x4, 447000 <_fini+0x6c30>
  428050:	add	x4, x4, #0xd17
  428054:	bl	406c68 <log_assert_failed_realm@plt>
  428058:	ldr	x0, [sp, #24]
  42805c:	bl	42a868 <seat_switch_to_previous>
  428060:	str	w0, [sp, #20]
  428064:	ldr	w8, [sp, #20]
  428068:	cmp	w8, #0x0
  42806c:	cset	w8, ge  // ge = tcont
  428070:	tbnz	w8, #0, 428080 <method_switch_to_previous+0xf8>
  428074:	ldr	w8, [sp, #20]
  428078:	stur	w8, [x29, #-4]
  42807c:	b	428094 <method_switch_to_previous+0x10c>
  428080:	ldur	x0, [x29, #-16]
  428084:	mov	x8, xzr
  428088:	mov	x1, x8
  42808c:	bl	4075b8 <sd_bus_reply_method_return@plt>
  428090:	stur	w0, [x29, #-4]
  428094:	ldur	w0, [x29, #-4]
  428098:	ldp	x29, x30, [sp, #64]
  42809c:	add	sp, sp, #0x50
  4280a0:	ret

00000000004280a4 <seat_object_find>:
  4280a4:	sub	sp, sp, #0x90
  4280a8:	stp	x29, x30, [sp, #128]
  4280ac:	add	x29, sp, #0x80
  4280b0:	mov	x8, xzr
  4280b4:	adrp	x9, 447000 <_fini+0x6c30>
  4280b8:	add	x9, x9, #0x7a7
  4280bc:	add	x9, x9, #0x3
  4280c0:	adrp	x10, 447000 <_fini+0x6c30>
  4280c4:	add	x10, x10, #0x88f
  4280c8:	stur	x0, [x29, #-16]
  4280cc:	stur	x1, [x29, #-24]
  4280d0:	stur	x2, [x29, #-32]
  4280d4:	stur	x3, [x29, #-40]
  4280d8:	stur	x4, [x29, #-48]
  4280dc:	stur	x5, [x29, #-56]
  4280e0:	str	x8, [sp, #64]
  4280e4:	ldur	x8, [x29, #-40]
  4280e8:	str	x8, [sp, #48]
  4280ec:	str	x9, [sp, #16]
  4280f0:	str	x10, [sp, #8]
  4280f4:	ldur	x8, [x29, #-16]
  4280f8:	cmp	x8, #0x0
  4280fc:	cset	w9, ne  // ne = any
  428100:	mov	w10, #0x1                   	// #1
  428104:	eor	w9, w9, #0x1
  428108:	eor	w9, w9, w10
  42810c:	eor	w9, w9, w10
  428110:	and	w9, w9, #0x1
  428114:	mov	w0, w9
  428118:	sxtw	x8, w0
  42811c:	cbz	x8, 428140 <seat_object_find+0x9c>
  428120:	mov	w8, wzr
  428124:	mov	w0, w8
  428128:	adrp	x1, 444000 <_fini+0x3c30>
  42812c:	add	x1, x1, #0x393
  428130:	ldr	x2, [sp, #16]
  428134:	mov	w3, #0x10b                 	// #267
  428138:	ldr	x4, [sp, #8]
  42813c:	bl	406c68 <log_assert_failed_realm@plt>
  428140:	ldur	x8, [x29, #-24]
  428144:	cmp	x8, #0x0
  428148:	cset	w9, ne  // ne = any
  42814c:	mov	w10, #0x1                   	// #1
  428150:	eor	w9, w9, #0x1
  428154:	eor	w9, w9, w10
  428158:	eor	w9, w9, w10
  42815c:	and	w9, w9, #0x1
  428160:	mov	w0, w9
  428164:	sxtw	x8, w0
  428168:	cbz	x8, 42818c <seat_object_find+0xe8>
  42816c:	mov	w8, wzr
  428170:	mov	w0, w8
  428174:	adrp	x1, 443000 <_fini+0x2c30>
  428178:	add	x1, x1, #0xea9
  42817c:	ldr	x2, [sp, #16]
  428180:	mov	w3, #0x10c                 	// #268
  428184:	ldr	x4, [sp, #8]
  428188:	bl	406c68 <log_assert_failed_realm@plt>
  42818c:	ldur	x8, [x29, #-32]
  428190:	cmp	x8, #0x0
  428194:	cset	w9, ne  // ne = any
  428198:	mov	w10, #0x1                   	// #1
  42819c:	eor	w9, w9, #0x1
  4281a0:	eor	w9, w9, w10
  4281a4:	eor	w9, w9, w10
  4281a8:	and	w9, w9, #0x1
  4281ac:	mov	w0, w9
  4281b0:	sxtw	x8, w0
  4281b4:	cbz	x8, 4281d8 <seat_object_find+0x134>
  4281b8:	mov	w8, wzr
  4281bc:	mov	w0, w8
  4281c0:	adrp	x1, 447000 <_fini+0x6c30>
  4281c4:	add	x1, x1, #0x8eb
  4281c8:	ldr	x2, [sp, #16]
  4281cc:	mov	w3, #0x10d                 	// #269
  4281d0:	ldr	x4, [sp, #8]
  4281d4:	bl	406c68 <log_assert_failed_realm@plt>
  4281d8:	ldur	x8, [x29, #-48]
  4281dc:	cmp	x8, #0x0
  4281e0:	cset	w9, ne  // ne = any
  4281e4:	mov	w10, #0x1                   	// #1
  4281e8:	eor	w9, w9, #0x1
  4281ec:	eor	w9, w9, w10
  4281f0:	eor	w9, w9, w10
  4281f4:	and	w9, w9, #0x1
  4281f8:	mov	w0, w9
  4281fc:	sxtw	x8, w0
  428200:	cbz	x8, 428224 <seat_object_find+0x180>
  428204:	mov	w8, wzr
  428208:	mov	w0, w8
  42820c:	adrp	x1, 447000 <_fini+0x6c30>
  428210:	add	x1, x1, #0x8f5
  428214:	ldr	x2, [sp, #16]
  428218:	mov	w3, #0x10e                 	// #270
  42821c:	ldr	x4, [sp, #8]
  428220:	bl	406c68 <log_assert_failed_realm@plt>
  428224:	ldr	x8, [sp, #48]
  428228:	cmp	x8, #0x0
  42822c:	cset	w9, ne  // ne = any
  428230:	mov	w10, #0x1                   	// #1
  428234:	eor	w9, w9, #0x1
  428238:	eor	w9, w9, w10
  42823c:	eor	w9, w9, w10
  428240:	and	w9, w9, #0x1
  428244:	mov	w0, w9
  428248:	sxtw	x8, w0
  42824c:	cbz	x8, 428270 <seat_object_find+0x1cc>
  428250:	mov	w8, wzr
  428254:	mov	w0, w8
  428258:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  42825c:	add	x1, x1, #0x5ef
  428260:	ldr	x2, [sp, #16]
  428264:	mov	w3, #0x10f                 	// #271
  428268:	ldr	x4, [sp, #8]
  42826c:	bl	406c68 <log_assert_failed_realm@plt>
  428270:	ldur	x0, [x29, #-24]
  428274:	adrp	x1, 447000 <_fini+0x6c30>
  428278:	add	x1, x1, #0x8fb
  42827c:	bl	428390 <startswith>
  428280:	str	x0, [sp, #40]
  428284:	ldr	x8, [sp, #40]
  428288:	cbnz	x8, 42829c <seat_object_find+0x1f8>
  42828c:	stur	wzr, [x29, #-4]
  428290:	mov	w8, #0x1                   	// #1
  428294:	str	w8, [sp, #24]
  428298:	b	428350 <seat_object_find+0x2ac>
  42829c:	ldr	x0, [sp, #40]
  4282a0:	bl	4283f0 <bus_label_unescape>
  4282a4:	str	x0, [sp, #64]
  4282a8:	ldr	x8, [sp, #64]
  4282ac:	cbnz	x8, 4282c4 <seat_object_find+0x220>
  4282b0:	mov	w8, #0xfffffff4            	// #-12
  4282b4:	stur	w8, [x29, #-4]
  4282b8:	mov	w8, #0x1                   	// #1
  4282bc:	str	w8, [sp, #24]
  4282c0:	b	428350 <seat_object_find+0x2ac>
  4282c4:	ldur	x0, [x29, #-16]
  4282c8:	bl	407a78 <sd_bus_get_current_message@plt>
  4282cc:	str	x0, [sp, #56]
  4282d0:	ldr	x0, [sp, #48]
  4282d4:	ldr	x1, [sp, #56]
  4282d8:	ldr	x2, [sp, #64]
  4282dc:	ldur	x3, [x29, #-56]
  4282e0:	add	x4, sp, #0x20
  4282e4:	bl	414b68 <manager_get_seat_from_creds>
  4282e8:	str	w0, [sp, #28]
  4282ec:	ldr	w8, [sp, #28]
  4282f0:	mov	w9, #0xfffffffa            	// #-6
  4282f4:	cmp	w8, w9
  4282f8:	b.ne	428314 <seat_object_find+0x270>  // b.any
  4282fc:	ldur	x0, [x29, #-56]
  428300:	bl	4071e8 <sd_bus_error_free@plt>
  428304:	stur	wzr, [x29, #-4]
  428308:	mov	w8, #0x1                   	// #1
  42830c:	str	w8, [sp, #24]
  428310:	b	428350 <seat_object_find+0x2ac>
  428314:	ldr	w8, [sp, #28]
  428318:	cmp	w8, #0x0
  42831c:	cset	w8, ge  // ge = tcont
  428320:	tbnz	w8, #0, 428338 <seat_object_find+0x294>
  428324:	ldr	w8, [sp, #28]
  428328:	stur	w8, [x29, #-4]
  42832c:	mov	w8, #0x1                   	// #1
  428330:	str	w8, [sp, #24]
  428334:	b	428350 <seat_object_find+0x2ac>
  428338:	ldr	x8, [sp, #32]
  42833c:	ldur	x9, [x29, #-48]
  428340:	str	x8, [x9]
  428344:	mov	w10, #0x1                   	// #1
  428348:	stur	w10, [x29, #-4]
  42834c:	str	w10, [sp, #24]
  428350:	add	x0, sp, #0x40
  428354:	bl	428368 <freep>
  428358:	ldur	w0, [x29, #-4]
  42835c:	ldp	x29, x30, [sp, #128]
  428360:	add	sp, sp, #0x90
  428364:	ret

0000000000428368 <freep>:
  428368:	sub	sp, sp, #0x20
  42836c:	stp	x29, x30, [sp, #16]
  428370:	add	x29, sp, #0x10
  428374:	str	x0, [sp, #8]
  428378:	ldr	x8, [sp, #8]
  42837c:	ldr	x0, [x8]
  428380:	bl	406da8 <free@plt>
  428384:	ldp	x29, x30, [sp, #16]
  428388:	add	sp, sp, #0x20
  42838c:	ret

0000000000428390 <startswith>:
  428390:	sub	sp, sp, #0x30
  428394:	stp	x29, x30, [sp, #32]
  428398:	add	x29, sp, #0x20
  42839c:	str	x0, [sp, #16]
  4283a0:	str	x1, [sp, #8]
  4283a4:	ldr	x0, [sp, #8]
  4283a8:	bl	4070a8 <strlen@plt>
  4283ac:	str	x0, [sp]
  4283b0:	ldr	x0, [sp, #16]
  4283b4:	ldr	x1, [sp, #8]
  4283b8:	ldr	x2, [sp]
  4283bc:	bl	4070b8 <strncmp@plt>
  4283c0:	cbnz	w0, 4283d8 <startswith+0x48>
  4283c4:	ldr	x8, [sp, #16]
  4283c8:	ldr	x9, [sp]
  4283cc:	add	x8, x8, x9
  4283d0:	stur	x8, [x29, #-8]
  4283d4:	b	4283e0 <startswith+0x50>
  4283d8:	mov	x8, xzr
  4283dc:	stur	x8, [x29, #-8]
  4283e0:	ldur	x0, [x29, #-8]
  4283e4:	ldp	x29, x30, [sp, #32]
  4283e8:	add	sp, sp, #0x30
  4283ec:	ret

00000000004283f0 <bus_label_unescape>:
  4283f0:	sub	sp, sp, #0x30
  4283f4:	stp	x29, x30, [sp, #32]
  4283f8:	add	x29, sp, #0x20
  4283fc:	stur	x0, [x29, #-8]
  428400:	ldur	x0, [x29, #-8]
  428404:	ldur	x8, [x29, #-8]
  428408:	str	x0, [sp, #16]
  42840c:	mov	x0, x8
  428410:	bl	428f1c <strlen_ptr>
  428414:	ldr	x8, [sp, #16]
  428418:	str	x0, [sp, #8]
  42841c:	mov	x0, x8
  428420:	ldr	x1, [sp, #8]
  428424:	bl	407a88 <bus_label_unescape_n@plt>
  428428:	ldp	x29, x30, [sp, #32]
  42842c:	add	sp, sp, #0x30
  428430:	ret

0000000000428434 <seat_bus_path>:
  428434:	sub	sp, sp, #0x40
  428438:	stp	x29, x30, [sp, #48]
  42843c:	add	x29, sp, #0x30
  428440:	mov	x8, xzr
  428444:	adrp	x9, 447000 <_fini+0x6c30>
  428448:	add	x9, x9, #0x7a7
  42844c:	add	x2, x9, #0x3
  428450:	stur	x0, [x29, #-16]
  428454:	str	x8, [sp, #24]
  428458:	str	x2, [sp, #8]
  42845c:	ldur	x8, [x29, #-16]
  428460:	cmp	x8, #0x0
  428464:	cset	w9, ne  // ne = any
  428468:	mov	w10, #0x1                   	// #1
  42846c:	eor	w9, w9, #0x1
  428470:	eor	w9, w9, w10
  428474:	eor	w9, w9, w10
  428478:	and	w9, w9, #0x1
  42847c:	mov	w0, w9
  428480:	sxtw	x8, w0
  428484:	cbz	x8, 4284ac <seat_bus_path+0x78>
  428488:	mov	w8, wzr
  42848c:	mov	w0, w8
  428490:	adrp	x1, 442000 <_fini+0x1c30>
  428494:	add	x1, x1, #0xf2
  428498:	ldr	x2, [sp, #8]
  42849c:	mov	w3, #0x12a                 	// #298
  4284a0:	adrp	x4, 447000 <_fini+0x6c30>
  4284a4:	add	x4, x4, #0x919
  4284a8:	bl	406c68 <log_assert_failed_realm@plt>
  4284ac:	ldur	x8, [x29, #-16]
  4284b0:	ldr	x0, [x8, #8]
  4284b4:	bl	407a98 <bus_label_escape@plt>
  4284b8:	str	x0, [sp, #24]
  4284bc:	ldr	x8, [sp, #24]
  4284c0:	cbnz	x8, 4284d8 <seat_bus_path+0xa4>
  4284c4:	mov	x8, xzr
  4284c8:	stur	x8, [x29, #-8]
  4284cc:	mov	w9, #0x1                   	// #1
  4284d0:	str	w9, [sp, #20]
  4284d4:	b	4284fc <seat_bus_path+0xc8>
  4284d8:	ldr	x1, [sp, #24]
  4284dc:	adrp	x0, 447000 <_fini+0x6c30>
  4284e0:	add	x0, x0, #0x8fb
  4284e4:	mov	x8, xzr
  4284e8:	mov	x2, x8
  4284ec:	bl	407a48 <strjoin_real@plt>
  4284f0:	stur	x0, [x29, #-8]
  4284f4:	mov	w9, #0x1                   	// #1
  4284f8:	str	w9, [sp, #20]
  4284fc:	add	x0, sp, #0x18
  428500:	bl	428368 <freep>
  428504:	ldur	x0, [x29, #-8]
  428508:	ldp	x29, x30, [sp, #48]
  42850c:	add	sp, sp, #0x40
  428510:	ret

0000000000428514 <seat_node_enumerator>:
  428514:	sub	sp, sp, #0xf0
  428518:	stp	x29, x30, [sp, #224]
  42851c:	add	x29, sp, #0xe0
  428520:	mov	x8, xzr
  428524:	adrp	x9, 447000 <_fini+0x6c30>
  428528:	add	x9, x9, #0x7a7
  42852c:	add	x9, x9, #0x3
  428530:	adrp	x10, 447000 <_fini+0x6c30>
  428534:	add	x10, x10, #0x935
  428538:	stur	x0, [x29, #-16]
  42853c:	stur	x1, [x29, #-24]
  428540:	stur	x2, [x29, #-32]
  428544:	stur	x3, [x29, #-40]
  428548:	stur	x4, [x29, #-48]
  42854c:	stur	x8, [x29, #-56]
  428550:	ldur	x8, [x29, #-32]
  428554:	stur	x8, [x29, #-72]
  428558:	str	x9, [sp, #16]
  42855c:	str	x10, [sp, #8]
  428560:	ldur	x8, [x29, #-16]
  428564:	cmp	x8, #0x0
  428568:	cset	w9, ne  // ne = any
  42856c:	mov	w10, #0x1                   	// #1
  428570:	eor	w9, w9, #0x1
  428574:	eor	w9, w9, w10
  428578:	eor	w9, w9, w10
  42857c:	and	w9, w9, #0x1
  428580:	mov	w0, w9
  428584:	sxtw	x8, w0
  428588:	cbz	x8, 4285ac <seat_node_enumerator+0x98>
  42858c:	mov	w8, wzr
  428590:	mov	w0, w8
  428594:	adrp	x1, 444000 <_fini+0x3c30>
  428598:	add	x1, x1, #0x393
  42859c:	ldr	x2, [sp, #16]
  4285a0:	mov	w3, #0x13b                 	// #315
  4285a4:	ldr	x4, [sp, #8]
  4285a8:	bl	406c68 <log_assert_failed_realm@plt>
  4285ac:	ldur	x8, [x29, #-24]
  4285b0:	cmp	x8, #0x0
  4285b4:	cset	w9, ne  // ne = any
  4285b8:	mov	w10, #0x1                   	// #1
  4285bc:	eor	w9, w9, #0x1
  4285c0:	eor	w9, w9, w10
  4285c4:	eor	w9, w9, w10
  4285c8:	and	w9, w9, #0x1
  4285cc:	mov	w0, w9
  4285d0:	sxtw	x8, w0
  4285d4:	cbz	x8, 4285f8 <seat_node_enumerator+0xe4>
  4285d8:	mov	w8, wzr
  4285dc:	mov	w0, w8
  4285e0:	adrp	x1, 443000 <_fini+0x2c30>
  4285e4:	add	x1, x1, #0xea9
  4285e8:	ldr	x2, [sp, #16]
  4285ec:	mov	w3, #0x13c                 	// #316
  4285f0:	ldr	x4, [sp, #8]
  4285f4:	bl	406c68 <log_assert_failed_realm@plt>
  4285f8:	ldur	x8, [x29, #-40]
  4285fc:	cmp	x8, #0x0
  428600:	cset	w9, ne  // ne = any
  428604:	mov	w10, #0x1                   	// #1
  428608:	eor	w9, w9, #0x1
  42860c:	eor	w9, w9, w10
  428610:	eor	w9, w9, w10
  428614:	and	w9, w9, #0x1
  428618:	mov	w0, w9
  42861c:	sxtw	x8, w0
  428620:	cbz	x8, 428644 <seat_node_enumerator+0x130>
  428624:	mov	w8, wzr
  428628:	mov	w0, w8
  42862c:	adrp	x1, 447000 <_fini+0x6c30>
  428630:	add	x1, x1, #0x988
  428634:	ldr	x2, [sp, #16]
  428638:	mov	w3, #0x13d                 	// #317
  42863c:	ldr	x4, [sp, #8]
  428640:	bl	406c68 <log_assert_failed_realm@plt>
  428644:	add	x8, sp, #0x68
  428648:	mov	w9, #0xfffffffe            	// #-2
  42864c:	str	w9, [sp, #104]
  428650:	mov	x10, xzr
  428654:	str	x10, [x8, #8]
  428658:	ldur	q0, [sp, #104]
  42865c:	stur	q0, [x29, #-96]
  428660:	ldur	x8, [x29, #-72]
  428664:	ldr	x0, [x8, #24]
  428668:	sub	x1, x29, #0x60
  42866c:	sub	x2, x29, #0x50
  428670:	mov	x8, xzr
  428674:	mov	x3, x8
  428678:	bl	42892c <hashmap_iterate>
  42867c:	tbnz	w0, #0, 428684 <seat_node_enumerator+0x170>
  428680:	b	4286e4 <seat_node_enumerator+0x1d0>
  428684:	ldur	x0, [x29, #-80]
  428688:	bl	428434 <seat_bus_path>
  42868c:	str	x0, [sp, #96]
  428690:	ldr	x8, [sp, #96]
  428694:	cbnz	x8, 4286ac <seat_node_enumerator+0x198>
  428698:	mov	w8, #0xfffffff4            	// #-12
  42869c:	stur	w8, [x29, #-4]
  4286a0:	mov	w8, #0x1                   	// #1
  4286a4:	str	w8, [sp, #92]
  4286a8:	b	4288e0 <seat_node_enumerator+0x3cc>
  4286ac:	ldr	x1, [sp, #96]
  4286b0:	sub	x0, x29, #0x38
  4286b4:	bl	407aa8 <strv_consume@plt>
  4286b8:	stur	w0, [x29, #-100]
  4286bc:	ldur	w8, [x29, #-100]
  4286c0:	cmp	w8, #0x0
  4286c4:	cset	w8, ge  // ge = tcont
  4286c8:	tbnz	w8, #0, 4286e0 <seat_node_enumerator+0x1cc>
  4286cc:	ldur	w8, [x29, #-100]
  4286d0:	stur	w8, [x29, #-4]
  4286d4:	mov	w8, #0x1                   	// #1
  4286d8:	str	w8, [sp, #92]
  4286dc:	b	4288e0 <seat_node_enumerator+0x3cc>
  4286e0:	b	428660 <seat_node_enumerator+0x14c>
  4286e4:	ldur	x0, [x29, #-16]
  4286e8:	bl	407a78 <sd_bus_get_current_message@plt>
  4286ec:	stur	x0, [x29, #-64]
  4286f0:	ldur	x8, [x29, #-64]
  4286f4:	cbz	x8, 4288b0 <seat_node_enumerator+0x39c>
  4286f8:	add	x2, sp, #0x50
  4286fc:	mov	x8, xzr
  428700:	str	x8, [sp, #80]
  428704:	ldur	x0, [x29, #-64]
  428708:	mov	x1, #0x600000              	// #6291456
  42870c:	movk	x1, #0x8000, lsl #48
  428710:	bl	407478 <sd_bus_query_sender_creds@plt>
  428714:	stur	w0, [x29, #-100]
  428718:	ldur	w9, [x29, #-100]
  42871c:	cmp	w9, #0x0
  428720:	cset	w9, lt  // lt = tstop
  428724:	tbnz	w9, #0, 42888c <seat_node_enumerator+0x378>
  428728:	mov	w8, #0x0                   	// #0
  42872c:	strb	w8, [sp, #79]
  428730:	ldr	x0, [sp, #80]
  428734:	add	x1, sp, #0x40
  428738:	bl	407488 <sd_bus_creds_get_session@plt>
  42873c:	stur	w0, [x29, #-100]
  428740:	ldur	w8, [x29, #-100]
  428744:	cmp	w8, #0x0
  428748:	cset	w8, lt  // lt = tstop
  42874c:	tbnz	w8, #0, 4287b8 <seat_node_enumerator+0x2a4>
  428750:	ldur	x8, [x29, #-72]
  428754:	ldr	x0, [x8, #32]
  428758:	ldr	x1, [sp, #64]
  42875c:	bl	4289a0 <hashmap_get>
  428760:	str	x0, [sp, #56]
  428764:	ldr	x8, [sp, #56]
  428768:	cbz	x8, 4287b8 <seat_node_enumerator+0x2a4>
  42876c:	ldr	x8, [sp, #56]
  428770:	ldr	x8, [x8, #136]
  428774:	cbz	x8, 4287b8 <seat_node_enumerator+0x2a4>
  428778:	sub	x0, x29, #0x38
  42877c:	adrp	x1, 447000 <_fini+0x6c30>
  428780:	add	x1, x1, #0x98e
  428784:	bl	407ab8 <strv_extend@plt>
  428788:	stur	w0, [x29, #-100]
  42878c:	ldur	w8, [x29, #-100]
  428790:	cmp	w8, #0x0
  428794:	cset	w8, ge  // ge = tcont
  428798:	tbnz	w8, #0, 4287b0 <seat_node_enumerator+0x29c>
  42879c:	ldur	w8, [x29, #-100]
  4287a0:	stur	w8, [x29, #-4]
  4287a4:	mov	w8, #0x1                   	// #1
  4287a8:	str	w8, [sp, #92]
  4287ac:	b	428890 <seat_node_enumerator+0x37c>
  4287b0:	mov	w8, #0x1                   	// #1
  4287b4:	strb	w8, [sp, #79]
  4287b8:	ldrb	w8, [sp, #79]
  4287bc:	tbnz	w8, #0, 428848 <seat_node_enumerator+0x334>
  4287c0:	ldr	x0, [sp, #80]
  4287c4:	add	x1, sp, #0x34
  4287c8:	bl	407498 <sd_bus_creds_get_owner_uid@plt>
  4287cc:	stur	w0, [x29, #-100]
  4287d0:	ldur	w8, [x29, #-100]
  4287d4:	cmp	w8, #0x0
  4287d8:	cset	w8, lt  // lt = tstop
  4287dc:	tbnz	w8, #0, 428848 <seat_node_enumerator+0x334>
  4287e0:	ldur	x8, [x29, #-72]
  4287e4:	ldr	x0, [x8, #48]
  4287e8:	ldr	w9, [sp, #52]
  4287ec:	mov	w8, w9
  4287f0:	add	x8, x8, #0x1
  4287f4:	mov	x1, x8
  4287f8:	bl	4289a0 <hashmap_get>
  4287fc:	str	x0, [sp, #40]
  428800:	ldr	x8, [sp, #40]
  428804:	mov	w9, #0x0                   	// #0
  428808:	str	w9, [sp, #4]
  42880c:	cbz	x8, 42883c <seat_node_enumerator+0x328>
  428810:	ldr	x8, [sp, #40]
  428814:	ldr	x8, [x8, #80]
  428818:	mov	w9, #0x0                   	// #0
  42881c:	str	w9, [sp, #4]
  428820:	cbz	x8, 42883c <seat_node_enumerator+0x328>
  428824:	ldr	x8, [sp, #40]
  428828:	ldr	x8, [x8, #80]
  42882c:	ldr	x8, [x8, #136]
  428830:	cmp	x8, #0x0
  428834:	cset	w9, ne  // ne = any
  428838:	str	w9, [sp, #4]
  42883c:	ldr	w8, [sp, #4]
  428840:	and	w8, w8, #0x1
  428844:	strb	w8, [sp, #79]
  428848:	ldrb	w8, [sp, #79]
  42884c:	tbnz	w8, #0, 428854 <seat_node_enumerator+0x340>
  428850:	b	42888c <seat_node_enumerator+0x378>
  428854:	sub	x0, x29, #0x38
  428858:	adrp	x1, 447000 <_fini+0x6c30>
  42885c:	add	x1, x1, #0x9b0
  428860:	bl	407ab8 <strv_extend@plt>
  428864:	stur	w0, [x29, #-100]
  428868:	ldur	w8, [x29, #-100]
  42886c:	cmp	w8, #0x0
  428870:	cset	w8, ge  // ge = tcont
  428874:	tbnz	w8, #0, 42888c <seat_node_enumerator+0x378>
  428878:	ldur	w8, [x29, #-100]
  42887c:	stur	w8, [x29, #-4]
  428880:	mov	w8, #0x1                   	// #1
  428884:	str	w8, [sp, #92]
  428888:	b	428890 <seat_node_enumerator+0x37c>
  42888c:	str	wzr, [sp, #92]
  428890:	add	x0, sp, #0x50
  428894:	bl	42896c <sd_bus_creds_unrefp>
  428898:	ldr	w8, [sp, #92]
  42889c:	cmp	w8, #0x0
  4288a0:	cset	w8, eq  // eq = none
  4288a4:	eor	w8, w8, #0x1
  4288a8:	tbnz	w8, #0, 4288e0 <seat_node_enumerator+0x3cc>
  4288ac:	b	4288b0 <seat_node_enumerator+0x39c>
  4288b0:	ldur	x8, [x29, #-56]
  4288b4:	str	x8, [sp, #32]
  4288b8:	mov	x8, xzr
  4288bc:	stur	x8, [x29, #-56]
  4288c0:	ldr	x8, [sp, #32]
  4288c4:	str	x8, [sp, #24]
  4288c8:	ldr	x8, [sp, #24]
  4288cc:	ldur	x9, [x29, #-40]
  4288d0:	str	x8, [x9]
  4288d4:	mov	w10, #0x1                   	// #1
  4288d8:	stur	w10, [x29, #-4]
  4288dc:	str	w10, [sp, #92]
  4288e0:	sub	x0, x29, #0x38
  4288e4:	bl	4288f8 <strv_freep>
  4288e8:	ldur	w0, [x29, #-4]
  4288ec:	ldp	x29, x30, [sp, #224]
  4288f0:	add	sp, sp, #0xf0
  4288f4:	ret

00000000004288f8 <strv_freep>:
  4288f8:	sub	sp, sp, #0x20
  4288fc:	stp	x29, x30, [sp, #16]
  428900:	add	x29, sp, #0x10
  428904:	str	x0, [sp, #8]
  428908:	ldr	x8, [sp, #8]
  42890c:	ldr	x8, [x8]
  428910:	cbz	x8, 428920 <strv_freep+0x28>
  428914:	ldr	x8, [sp, #8]
  428918:	ldr	x0, [x8]
  42891c:	bl	406d98 <strv_free@plt>
  428920:	ldp	x29, x30, [sp, #16]
  428924:	add	sp, sp, #0x20
  428928:	ret

000000000042892c <hashmap_iterate>:
  42892c:	sub	sp, sp, #0x30
  428930:	stp	x29, x30, [sp, #32]
  428934:	add	x29, sp, #0x20
  428938:	stur	x0, [x29, #-8]
  42893c:	str	x1, [sp, #16]
  428940:	str	x2, [sp, #8]
  428944:	str	x3, [sp]
  428948:	ldur	x0, [x29, #-8]
  42894c:	ldr	x1, [sp, #16]
  428950:	ldr	x2, [sp, #8]
  428954:	ldr	x3, [sp]
  428958:	bl	407018 <internal_hashmap_iterate@plt>
  42895c:	and	w0, w0, #0x1
  428960:	ldp	x29, x30, [sp, #32]
  428964:	add	sp, sp, #0x30
  428968:	ret

000000000042896c <sd_bus_creds_unrefp>:
  42896c:	sub	sp, sp, #0x20
  428970:	stp	x29, x30, [sp, #16]
  428974:	add	x29, sp, #0x10
  428978:	str	x0, [sp, #8]
  42897c:	ldr	x8, [sp, #8]
  428980:	ldr	x8, [x8]
  428984:	cbz	x8, 428994 <sd_bus_creds_unrefp+0x28>
  428988:	ldr	x8, [sp, #8]
  42898c:	ldr	x0, [x8]
  428990:	bl	407868 <sd_bus_creds_unref@plt>
  428994:	ldp	x29, x30, [sp, #16]
  428998:	add	sp, sp, #0x20
  42899c:	ret

00000000004289a0 <hashmap_get>:
  4289a0:	sub	sp, sp, #0x20
  4289a4:	stp	x29, x30, [sp, #16]
  4289a8:	add	x29, sp, #0x10
  4289ac:	str	x0, [sp, #8]
  4289b0:	str	x1, [sp]
  4289b4:	ldr	x0, [sp, #8]
  4289b8:	ldr	x1, [sp]
  4289bc:	bl	4070e8 <internal_hashmap_get@plt>
  4289c0:	ldp	x29, x30, [sp, #16]
  4289c4:	add	sp, sp, #0x20
  4289c8:	ret

00000000004289cc <seat_send_signal>:
  4289cc:	sub	sp, sp, #0x40
  4289d0:	stp	x29, x30, [sp, #48]
  4289d4:	add	x29, sp, #0x30
  4289d8:	mov	x8, xzr
  4289dc:	mov	w9, #0x1                   	// #1
  4289e0:	adrp	x10, 447000 <_fini+0x6c30>
  4289e4:	add	x10, x10, #0x7a7
  4289e8:	add	x2, x10, #0x3
  4289ec:	stur	x0, [x29, #-16]
  4289f0:	and	w9, w1, w9
  4289f4:	sturb	w9, [x29, #-17]
  4289f8:	str	x8, [sp, #16]
  4289fc:	str	x2, [sp]
  428a00:	ldur	x8, [x29, #-16]
  428a04:	cmp	x8, #0x0
  428a08:	cset	w9, ne  // ne = any
  428a0c:	mov	w10, #0x1                   	// #1
  428a10:	eor	w9, w9, #0x1
  428a14:	eor	w9, w9, w10
  428a18:	eor	w9, w9, w10
  428a1c:	and	w9, w9, #0x1
  428a20:	mov	w0, w9
  428a24:	sxtw	x8, w0
  428a28:	cbz	x8, 428a50 <seat_send_signal+0x84>
  428a2c:	mov	w8, wzr
  428a30:	mov	w0, w8
  428a34:	adrp	x1, 442000 <_fini+0x1c30>
  428a38:	add	x1, x1, #0xf2
  428a3c:	ldr	x2, [sp]
  428a40:	mov	w3, #0x17d                 	// #381
  428a44:	adrp	x4, 447000 <_fini+0x6c30>
  428a48:	add	x4, x4, #0x9d2
  428a4c:	bl	406c68 <log_assert_failed_realm@plt>
  428a50:	ldur	x0, [x29, #-16]
  428a54:	bl	428434 <seat_bus_path>
  428a58:	str	x0, [sp, #16]
  428a5c:	ldr	x8, [sp, #16]
  428a60:	cbnz	x8, 428a78 <seat_send_signal+0xac>
  428a64:	mov	w8, #0xfffffff4            	// #-12
  428a68:	stur	w8, [x29, #-4]
  428a6c:	mov	w8, #0x1                   	// #1
  428a70:	str	w8, [sp, #12]
  428a74:	b	428ad4 <seat_send_signal+0x108>
  428a78:	ldur	x8, [x29, #-16]
  428a7c:	ldr	x8, [x8]
  428a80:	ldr	x0, [x8, #8]
  428a84:	ldurb	w9, [x29, #-17]
  428a88:	adrp	x8, 443000 <_fini+0x2c30>
  428a8c:	add	x8, x8, #0x7e3
  428a90:	adrp	x10, 443000 <_fini+0x2c30>
  428a94:	add	x10, x10, #0x7db
  428a98:	tst	w9, #0x1
  428a9c:	csel	x3, x10, x8, ne  // ne = any
  428aa0:	ldur	x8, [x29, #-16]
  428aa4:	ldr	x5, [x8, #8]
  428aa8:	ldr	x6, [sp, #16]
  428aac:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  428ab0:	add	x1, x1, #0xd9b
  428ab4:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  428ab8:	add	x2, x2, #0xdb3
  428abc:	adrp	x4, 443000 <_fini+0x2c30>
  428ac0:	add	x4, x4, #0x7b2
  428ac4:	bl	4074e8 <sd_bus_emit_signal@plt>
  428ac8:	stur	w0, [x29, #-4]
  428acc:	mov	w9, #0x1                   	// #1
  428ad0:	str	w9, [sp, #12]
  428ad4:	add	x0, sp, #0x10
  428ad8:	bl	428368 <freep>
  428adc:	ldur	w0, [x29, #-4]
  428ae0:	ldp	x29, x30, [sp, #48]
  428ae4:	add	sp, sp, #0x40
  428ae8:	ret

0000000000428aec <seat_send_changed>:
  428aec:	stp	x29, x30, [sp, #-32]!
  428af0:	stp	x28, x19, [sp, #16]
  428af4:	mov	x29, sp
  428af8:	sub	sp, sp, #0x160
  428afc:	mov	x19, sp
  428b00:	str	q7, [x19, #160]
  428b04:	str	q6, [x19, #144]
  428b08:	str	q5, [x19, #128]
  428b0c:	str	q4, [x19, #112]
  428b10:	str	q3, [x19, #96]
  428b14:	str	q2, [x19, #80]
  428b18:	str	q1, [x19, #64]
  428b1c:	str	q0, [x19, #48]
  428b20:	stur	x7, [x29, #-128]
  428b24:	stur	x6, [x29, #-136]
  428b28:	stur	x5, [x29, #-144]
  428b2c:	stur	x4, [x29, #-152]
  428b30:	stur	x3, [x29, #-160]
  428b34:	stur	x2, [x29, #-168]
  428b38:	stur	x0, [x29, #-16]
  428b3c:	stur	x1, [x29, #-24]
  428b40:	mov	x8, xzr
  428b44:	stur	x8, [x29, #-32]
  428b48:	b	428b4c <seat_send_changed+0x60>
  428b4c:	ldur	x8, [x29, #-16]
  428b50:	cbnz	x8, 428b7c <seat_send_changed+0x90>
  428b54:	b	428b58 <seat_send_changed+0x6c>
  428b58:	adrp	x1, 442000 <_fini+0x1c30>
  428b5c:	add	x1, x1, #0xf2
  428b60:	adrp	x2, 447000 <_fini+0x6c30>
  428b64:	add	x2, x2, #0x7aa
  428b68:	adrp	x4, 447000 <_fini+0x6c30>
  428b6c:	add	x4, x4, #0x9f6
  428b70:	mov	w0, wzr
  428b74:	mov	w3, #0x18f                 	// #399
  428b78:	bl	406c68 <log_assert_failed_realm@plt>
  428b7c:	b	428b80 <seat_send_changed+0x94>
  428b80:	b	428b84 <seat_send_changed+0x98>
  428b84:	ldur	x8, [x29, #-16]
  428b88:	ldrb	w9, [x8, #72]
  428b8c:	tbnz	w9, #1, 428ba8 <seat_send_changed+0xbc>
  428b90:	b	428b94 <seat_send_changed+0xa8>
  428b94:	mov	w8, wzr
  428b98:	stur	w8, [x29, #-4]
  428b9c:	mov	w8, #0x1                   	// #1
  428ba0:	stur	w8, [x29, #-44]
  428ba4:	b	428e98 <seat_send_changed+0x3ac>
  428ba8:	ldur	x0, [x29, #-16]
  428bac:	bl	428434 <seat_bus_path>
  428bb0:	stur	x0, [x29, #-32]
  428bb4:	ldur	x8, [x29, #-32]
  428bb8:	cbnz	x8, 428bd4 <seat_send_changed+0xe8>
  428bbc:	b	428bc0 <seat_send_changed+0xd4>
  428bc0:	mov	w8, #0xfffffff4            	// #-12
  428bc4:	stur	w8, [x29, #-4]
  428bc8:	mov	w8, #0x1                   	// #1
  428bcc:	stur	w8, [x29, #-44]
  428bd0:	b	428e98 <seat_send_changed+0x3ac>
  428bd4:	ldur	x8, [x29, #-24]
  428bd8:	cbnz	x8, 428bec <seat_send_changed+0x100>
  428bdc:	b	428be0 <seat_send_changed+0xf4>
  428be0:	sub	x8, x29, #0x18
  428be4:	stur	x8, [x29, #-56]
  428be8:	b	428e58 <seat_send_changed+0x36c>
  428bec:	mov	w8, #0x1                   	// #1
  428bf0:	mov	w9, w8
  428bf4:	stur	x9, [x29, #-64]
  428bf8:	mov	w8, #0xffffff80            	// #-128
  428bfc:	stur	w8, [x29, #-68]
  428c00:	mov	w8, #0xffffffd0            	// #-48
  428c04:	stur	w8, [x29, #-72]
  428c08:	add	x9, x19, #0x30
  428c0c:	add	x9, x9, #0x80
  428c10:	stur	x9, [x29, #-80]
  428c14:	sub	x9, x29, #0xa8
  428c18:	add	x9, x9, #0x30
  428c1c:	stur	x9, [x29, #-88]
  428c20:	add	x9, x29, #0x20
  428c24:	stur	x9, [x29, #-96]
  428c28:	b	428c2c <seat_send_changed+0x140>
  428c2c:	sub	x8, x29, #0x60
  428c30:	add	x8, x8, #0x18
  428c34:	ldur	w9, [x29, #-72]
  428c38:	mov	w10, w9
  428c3c:	str	x8, [x19, #40]
  428c40:	str	w10, [x19, #36]
  428c44:	tbz	w9, #31, 428c7c <seat_send_changed+0x190>
  428c48:	b	428c4c <seat_send_changed+0x160>
  428c4c:	ldr	w8, [x19, #36]
  428c50:	add	w9, w8, #0x8
  428c54:	ldr	x10, [x19, #40]
  428c58:	str	w9, [x10]
  428c5c:	subs	w9, w9, #0x0
  428c60:	b.gt	428c7c <seat_send_changed+0x190>
  428c64:	b	428c68 <seat_send_changed+0x17c>
  428c68:	ldur	x8, [x29, #-88]
  428c6c:	ldr	w9, [x19, #36]
  428c70:	add	x8, x8, w9, sxtw
  428c74:	str	x8, [x19, #24]
  428c78:	b	428c90 <seat_send_changed+0x1a4>
  428c7c:	ldur	x8, [x29, #-96]
  428c80:	add	x9, x8, #0x8
  428c84:	stur	x9, [x29, #-96]
  428c88:	str	x8, [x19, #24]
  428c8c:	b	428c90 <seat_send_changed+0x1a4>
  428c90:	ldr	x8, [x19, #24]
  428c94:	ldr	x8, [x8]
  428c98:	cbz	x8, 428cb0 <seat_send_changed+0x1c4>
  428c9c:	b	428ca0 <seat_send_changed+0x1b4>
  428ca0:	ldur	x8, [x29, #-64]
  428ca4:	add	x8, x8, #0x1
  428ca8:	stur	x8, [x29, #-64]
  428cac:	b	428c2c <seat_send_changed+0x140>
  428cb0:	ldur	x8, [x29, #-64]
  428cb4:	add	x8, x8, #0x1
  428cb8:	stur	x8, [x29, #-104]
  428cbc:	b	428cc0 <seat_send_changed+0x1d4>
  428cc0:	ldur	x1, [x29, #-104]
  428cc4:	mov	w8, #0x8                   	// #8
  428cc8:	mov	w0, w8
  428ccc:	bl	428eb4 <size_multiply_overflow>
  428cd0:	tbz	w0, #0, 428cfc <seat_send_changed+0x210>
  428cd4:	b	428cd8 <seat_send_changed+0x1ec>
  428cd8:	adrp	x1, 443000 <_fini+0x2c30>
  428cdc:	add	x1, x1, #0xa1c
  428ce0:	adrp	x2, 447000 <_fini+0x6c30>
  428ce4:	add	x2, x2, #0x7aa
  428ce8:	adrp	x4, 447000 <_fini+0x6c30>
  428cec:	add	x4, x4, #0x9f6
  428cf0:	mov	w0, wzr
  428cf4:	mov	w3, #0x198                 	// #408
  428cf8:	bl	406c68 <log_assert_failed_realm@plt>
  428cfc:	b	428d00 <seat_send_changed+0x214>
  428d00:	b	428d04 <seat_send_changed+0x218>
  428d04:	b	428d08 <seat_send_changed+0x21c>
  428d08:	ldur	x8, [x29, #-104]
  428d0c:	lsl	x8, x8, #3
  428d10:	subs	x8, x8, #0x400, lsl #12
  428d14:	b.ls	428d40 <seat_send_changed+0x254>  // b.plast
  428d18:	b	428d1c <seat_send_changed+0x230>
  428d1c:	adrp	x1, 443000 <_fini+0x2c30>
  428d20:	add	x1, x1, #0xa48
  428d24:	adrp	x2, 447000 <_fini+0x6c30>
  428d28:	add	x2, x2, #0x7aa
  428d2c:	adrp	x4, 447000 <_fini+0x6c30>
  428d30:	add	x4, x4, #0x9f6
  428d34:	mov	w0, wzr
  428d38:	mov	w3, #0x198                 	// #408
  428d3c:	bl	406c68 <log_assert_failed_realm@plt>
  428d40:	b	428d44 <seat_send_changed+0x258>
  428d44:	b	428d48 <seat_send_changed+0x25c>
  428d48:	ldur	x8, [x29, #-104]
  428d4c:	lsl	x8, x8, #3
  428d50:	add	x8, x8, #0xf
  428d54:	and	x8, x8, #0xfffffffffffffff0
  428d58:	mov	x9, sp
  428d5c:	subs	x8, x9, x8
  428d60:	mov	sp, x8
  428d64:	stur	x8, [x29, #-112]
  428d68:	ldur	x8, [x29, #-112]
  428d6c:	stur	x8, [x29, #-56]
  428d70:	ldur	x8, [x29, #-24]
  428d74:	ldur	x9, [x29, #-56]
  428d78:	mov	x10, xzr
  428d7c:	stur	x10, [x29, #-64]
  428d80:	str	x8, [x9]
  428d84:	mov	w11, #0xffffff80            	// #-128
  428d88:	stur	w11, [x29, #-68]
  428d8c:	mov	w11, #0xffffffd0            	// #-48
  428d90:	stur	w11, [x29, #-72]
  428d94:	add	x8, x19, #0x30
  428d98:	add	x8, x8, #0x80
  428d9c:	stur	x8, [x29, #-80]
  428da0:	sub	x8, x29, #0xa8
  428da4:	add	x8, x8, #0x30
  428da8:	stur	x8, [x29, #-88]
  428dac:	add	x8, x29, #0x20
  428db0:	stur	x8, [x29, #-96]
  428db4:	b	428db8 <seat_send_changed+0x2cc>
  428db8:	sub	x8, x29, #0x60
  428dbc:	add	x8, x8, #0x18
  428dc0:	ldur	w9, [x29, #-72]
  428dc4:	mov	w10, w9
  428dc8:	str	x8, [x19, #16]
  428dcc:	str	w10, [x19, #12]
  428dd0:	tbz	w9, #31, 428e08 <seat_send_changed+0x31c>
  428dd4:	b	428dd8 <seat_send_changed+0x2ec>
  428dd8:	ldr	w8, [x19, #12]
  428ddc:	add	w9, w8, #0x8
  428de0:	ldr	x10, [x19, #16]
  428de4:	str	w9, [x10]
  428de8:	subs	w9, w9, #0x0
  428dec:	b.gt	428e08 <seat_send_changed+0x31c>
  428df0:	b	428df4 <seat_send_changed+0x308>
  428df4:	ldur	x8, [x29, #-88]
  428df8:	ldr	w9, [x19, #12]
  428dfc:	add	x8, x8, w9, sxtw
  428e00:	str	x8, [x19]
  428e04:	b	428e1c <seat_send_changed+0x330>
  428e08:	ldur	x8, [x29, #-96]
  428e0c:	add	x9, x8, #0x8
  428e10:	stur	x9, [x29, #-96]
  428e14:	str	x8, [x19]
  428e18:	b	428e1c <seat_send_changed+0x330>
  428e1c:	ldr	x8, [x19]
  428e20:	ldr	x8, [x8]
  428e24:	ldur	x9, [x29, #-56]
  428e28:	ldur	x10, [x29, #-64]
  428e2c:	add	x10, x10, #0x1
  428e30:	stur	x10, [x29, #-64]
  428e34:	str	x8, [x9, x10, lsl #3]
  428e38:	ldur	x8, [x29, #-56]
  428e3c:	ldur	x9, [x29, #-64]
  428e40:	ldr	x8, [x8, x9, lsl #3]
  428e44:	cbnz	x8, 428e50 <seat_send_changed+0x364>
  428e48:	b	428e4c <seat_send_changed+0x360>
  428e4c:	b	428e54 <seat_send_changed+0x368>
  428e50:	b	428db8 <seat_send_changed+0x2cc>
  428e54:	b	428e58 <seat_send_changed+0x36c>
  428e58:	ldur	x8, [x29, #-56]
  428e5c:	stur	x8, [x29, #-120]
  428e60:	ldur	x8, [x29, #-120]
  428e64:	stur	x8, [x29, #-40]
  428e68:	ldur	x8, [x29, #-16]
  428e6c:	ldr	x8, [x8]
  428e70:	ldr	x0, [x8, #8]
  428e74:	ldur	x1, [x29, #-32]
  428e78:	ldur	x3, [x29, #-40]
  428e7c:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  428e80:	add	x2, x2, #0xe17
  428e84:	bl	4077c8 <sd_bus_emit_properties_changed_strv@plt>
  428e88:	stur	w0, [x29, #-4]
  428e8c:	mov	w9, #0x1                   	// #1
  428e90:	stur	w9, [x29, #-44]
  428e94:	b	428e98 <seat_send_changed+0x3ac>
  428e98:	sub	x0, x29, #0x20
  428e9c:	bl	428368 <freep>
  428ea0:	ldur	w0, [x29, #-4]
  428ea4:	mov	sp, x29
  428ea8:	ldp	x28, x19, [sp, #16]
  428eac:	ldp	x29, x30, [sp], #32
  428eb0:	ret

0000000000428eb4 <size_multiply_overflow>:
  428eb4:	sub	sp, sp, #0x20
  428eb8:	str	x0, [sp, #24]
  428ebc:	str	x1, [sp, #16]
  428ec0:	ldr	x8, [sp, #16]
  428ec4:	mov	w9, #0x0                   	// #0
  428ec8:	str	w9, [sp, #12]
  428ecc:	cbz	x8, 428eec <size_multiply_overflow+0x38>
  428ed0:	ldr	x8, [sp, #24]
  428ed4:	ldr	x9, [sp, #16]
  428ed8:	mov	x10, #0xffffffffffffffff    	// #-1
  428edc:	udiv	x9, x10, x9
  428ee0:	cmp	x8, x9
  428ee4:	cset	w11, hi  // hi = pmore
  428ee8:	str	w11, [sp, #12]
  428eec:	ldr	w8, [sp, #12]
  428ef0:	mov	w9, #0x1                   	// #1
  428ef4:	eor	w8, w8, #0x1
  428ef8:	eor	w8, w8, w9
  428efc:	and	w8, w8, #0x1
  428f00:	mov	w0, w8
  428f04:	sxtw	x10, w0
  428f08:	cmp	x10, #0x0
  428f0c:	cset	w8, ne  // ne = any
  428f10:	and	w0, w8, #0x1
  428f14:	add	sp, sp, #0x20
  428f18:	ret

0000000000428f1c <strlen_ptr>:
  428f1c:	sub	sp, sp, #0x20
  428f20:	stp	x29, x30, [sp, #16]
  428f24:	add	x29, sp, #0x10
  428f28:	str	x0, [sp]
  428f2c:	ldr	x8, [sp]
  428f30:	cbnz	x8, 428f3c <strlen_ptr+0x20>
  428f34:	str	xzr, [sp, #8]
  428f38:	b	428f48 <strlen_ptr+0x2c>
  428f3c:	ldr	x0, [sp]
  428f40:	bl	4070a8 <strlen@plt>
  428f44:	str	x0, [sp, #8]
  428f48:	ldr	x0, [sp, #8]
  428f4c:	ldp	x29, x30, [sp, #16]
  428f50:	add	sp, sp, #0x20
  428f54:	ret

0000000000428f58 <seat_new>:
  428f58:	sub	sp, sp, #0xe0
  428f5c:	stp	x29, x30, [sp, #208]
  428f60:	add	x29, sp, #0xd0
  428f64:	mov	x8, xzr
  428f68:	adrp	x9, 447000 <_fini+0x6c30>
  428f6c:	add	x9, x9, #0xd5f
  428f70:	add	x9, x9, #0x3
  428f74:	adrp	x10, 447000 <_fini+0x6c30>
  428f78:	add	x10, x10, #0xd7a
  428f7c:	stur	x0, [x29, #-16]
  428f80:	stur	x1, [x29, #-24]
  428f84:	stur	x2, [x29, #-32]
  428f88:	stur	x8, [x29, #-40]
  428f8c:	str	x9, [sp, #40]
  428f90:	str	x10, [sp, #32]
  428f94:	ldur	x8, [x29, #-16]
  428f98:	cmp	x8, #0x0
  428f9c:	cset	w9, ne  // ne = any
  428fa0:	mov	w10, #0x1                   	// #1
  428fa4:	eor	w9, w9, #0x1
  428fa8:	eor	w9, w9, w10
  428fac:	eor	w9, w9, w10
  428fb0:	and	w9, w9, #0x1
  428fb4:	mov	w0, w9
  428fb8:	sxtw	x8, w0
  428fbc:	cbz	x8, 428fe0 <seat_new+0x88>
  428fc0:	mov	w8, wzr
  428fc4:	mov	w0, w8
  428fc8:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  428fcc:	add	x1, x1, #0x5cf
  428fd0:	ldr	x2, [sp, #40]
  428fd4:	mov	w3, #0x20                  	// #32
  428fd8:	ldr	x4, [sp, #32]
  428fdc:	bl	406c68 <log_assert_failed_realm@plt>
  428fe0:	ldur	x8, [x29, #-24]
  428fe4:	cmp	x8, #0x0
  428fe8:	cset	w9, ne  // ne = any
  428fec:	mov	w10, #0x1                   	// #1
  428ff0:	eor	w9, w9, #0x1
  428ff4:	eor	w9, w9, w10
  428ff8:	eor	w9, w9, w10
  428ffc:	and	w9, w9, #0x1
  429000:	mov	w0, w9
  429004:	sxtw	x8, w0
  429008:	cbz	x8, 42902c <seat_new+0xd4>
  42900c:	mov	w8, wzr
  429010:	mov	w0, w8
  429014:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  429018:	add	x1, x1, #0x5ef
  42901c:	ldr	x2, [sp, #40]
  429020:	mov	w3, #0x21                  	// #33
  429024:	ldr	x4, [sp, #32]
  429028:	bl	406c68 <log_assert_failed_realm@plt>
  42902c:	ldur	x8, [x29, #-32]
  429030:	cmp	x8, #0x0
  429034:	cset	w9, ne  // ne = any
  429038:	mov	w10, #0x1                   	// #1
  42903c:	eor	w9, w9, #0x1
  429040:	eor	w9, w9, w10
  429044:	eor	w9, w9, w10
  429048:	and	w9, w9, #0x1
  42904c:	mov	w0, w9
  429050:	sxtw	x8, w0
  429054:	cbz	x8, 429078 <seat_new+0x120>
  429058:	mov	w8, wzr
  42905c:	mov	w0, w8
  429060:	adrp	x1, 442000 <_fini+0x1c30>
  429064:	add	x1, x1, #0x4dd
  429068:	ldr	x2, [sp, #40]
  42906c:	mov	w3, #0x22                  	// #34
  429070:	ldr	x4, [sp, #32]
  429074:	bl	406c68 <log_assert_failed_realm@plt>
  429078:	ldur	x0, [x29, #-32]
  42907c:	bl	429218 <seat_name_is_valid>
  429080:	tbnz	w0, #0, 429098 <seat_new+0x140>
  429084:	mov	w8, #0xffffffea            	// #-22
  429088:	stur	w8, [x29, #-4]
  42908c:	mov	w8, #0x1                   	// #1
  429090:	stur	w8, [x29, #-48]
  429094:	b	4291cc <seat_new+0x274>
  429098:	mov	x0, #0x60                  	// #96
  42909c:	mov	x1, #0x1                   	// #1
  4290a0:	bl	42934c <malloc_multiply>
  4290a4:	stur	x0, [x29, #-40]
  4290a8:	ldur	x8, [x29, #-40]
  4290ac:	cbnz	x8, 4290c4 <seat_new+0x16c>
  4290b0:	mov	w8, #0xfffffff4            	// #-12
  4290b4:	stur	w8, [x29, #-4]
  4290b8:	mov	w8, #0x1                   	// #1
  4290bc:	stur	w8, [x29, #-48]
  4290c0:	b	4291cc <seat_new+0x274>
  4290c4:	ldur	x0, [x29, #-40]
  4290c8:	add	x8, sp, #0x40
  4290cc:	str	x0, [sp, #24]
  4290d0:	mov	x0, x8
  4290d4:	mov	w9, wzr
  4290d8:	mov	w1, w9
  4290dc:	mov	x10, #0x60                  	// #96
  4290e0:	mov	x2, x10
  4290e4:	str	x8, [sp, #16]
  4290e8:	str	x10, [sp, #8]
  4290ec:	bl	406c98 <memset@plt>
  4290f0:	ldur	x8, [x29, #-24]
  4290f4:	str	x8, [sp, #64]
  4290f8:	ldr	x0, [sp, #24]
  4290fc:	ldr	x1, [sp, #16]
  429100:	ldr	x2, [sp, #8]
  429104:	bl	406cb8 <memcpy@plt>
  429108:	ldur	x1, [x29, #-32]
  42910c:	adrp	x0, 440000 <on_brightness_writer_exit+0x15c>
  429110:	add	x0, x0, #0x44e
  429114:	mov	x8, #0xffffffffffffffff    	// #-1
  429118:	mov	x2, x8
  42911c:	bl	4078e8 <path_join_internal@plt>
  429120:	ldur	x8, [x29, #-40]
  429124:	str	x0, [x8, #16]
  429128:	ldur	x8, [x29, #-40]
  42912c:	ldr	x8, [x8, #16]
  429130:	cbnz	x8, 429148 <seat_new+0x1f0>
  429134:	mov	w8, #0xfffffff4            	// #-12
  429138:	stur	w8, [x29, #-4]
  42913c:	mov	w8, #0x1                   	// #1
  429140:	stur	w8, [x29, #-48]
  429144:	b	4291cc <seat_new+0x274>
  429148:	ldur	x8, [x29, #-40]
  42914c:	ldr	x0, [x8, #16]
  429150:	bl	4079e8 <basename@plt>
  429154:	ldur	x8, [x29, #-40]
  429158:	str	x0, [x8, #8]
  42915c:	ldur	x8, [x29, #-24]
  429160:	ldr	x0, [x8, #24]
  429164:	ldur	x8, [x29, #-40]
  429168:	ldr	x1, [x8, #8]
  42916c:	ldur	x2, [x29, #-40]
  429170:	bl	407228 <hashmap_put@plt>
  429174:	stur	w0, [x29, #-44]
  429178:	ldur	w9, [x29, #-44]
  42917c:	cmp	w9, #0x0
  429180:	cset	w9, ge  // ge = tcont
  429184:	tbnz	w9, #0, 42919c <seat_new+0x244>
  429188:	ldur	w8, [x29, #-44]
  42918c:	stur	w8, [x29, #-4]
  429190:	mov	w8, #0x1                   	// #1
  429194:	stur	w8, [x29, #-48]
  429198:	b	4291cc <seat_new+0x274>
  42919c:	ldur	x8, [x29, #-40]
  4291a0:	str	x8, [sp, #56]
  4291a4:	mov	x8, xzr
  4291a8:	stur	x8, [x29, #-40]
  4291ac:	ldr	x8, [sp, #56]
  4291b0:	str	x8, [sp, #48]
  4291b4:	ldr	x8, [sp, #48]
  4291b8:	ldur	x9, [x29, #-16]
  4291bc:	str	x8, [x9]
  4291c0:	stur	wzr, [x29, #-4]
  4291c4:	mov	w10, #0x1                   	// #1
  4291c8:	stur	w10, [x29, #-48]
  4291cc:	sub	x0, x29, #0x28
  4291d0:	bl	4291e4 <seat_freep>
  4291d4:	ldur	w0, [x29, #-4]
  4291d8:	ldp	x29, x30, [sp, #208]
  4291dc:	add	sp, sp, #0xe0
  4291e0:	ret

00000000004291e4 <seat_freep>:
  4291e4:	sub	sp, sp, #0x20
  4291e8:	stp	x29, x30, [sp, #16]
  4291ec:	add	x29, sp, #0x10
  4291f0:	str	x0, [sp, #8]
  4291f4:	ldr	x8, [sp, #8]
  4291f8:	ldr	x8, [x8]
  4291fc:	cbz	x8, 42920c <seat_freep+0x28>
  429200:	ldr	x8, [sp, #8]
  429204:	ldr	x0, [x8]
  429208:	bl	4293c8 <seat_free>
  42920c:	ldp	x29, x30, [sp, #16]
  429210:	add	sp, sp, #0x20
  429214:	ret

0000000000429218 <seat_name_is_valid>:
  429218:	sub	sp, sp, #0x30
  42921c:	stp	x29, x30, [sp, #32]
  429220:	add	x29, sp, #0x20
  429224:	adrp	x8, 447000 <_fini+0x6c30>
  429228:	add	x8, x8, #0xd5f
  42922c:	add	x2, x8, #0x3
  429230:	str	x0, [sp, #16]
  429234:	str	x2, [sp]
  429238:	ldr	x8, [sp, #16]
  42923c:	cmp	x8, #0x0
  429240:	cset	w9, ne  // ne = any
  429244:	mov	w10, #0x1                   	// #1
  429248:	eor	w9, w9, #0x1
  42924c:	eor	w9, w9, w10
  429250:	eor	w9, w9, w10
  429254:	and	w9, w9, #0x1
  429258:	mov	w0, w9
  42925c:	sxtw	x8, w0
  429260:	cbz	x8, 429288 <seat_name_is_valid+0x70>
  429264:	mov	w8, wzr
  429268:	mov	w0, w8
  42926c:	adrp	x1, 441000 <_fini+0xc30>
  429270:	add	x1, x1, #0xe09
  429274:	ldr	x2, [sp]
  429278:	mov	w3, #0x28f                 	// #655
  42927c:	adrp	x4, 448000 <_fini+0x7c30>
  429280:	add	x4, x4, #0x379
  429284:	bl	406c68 <log_assert_failed_realm@plt>
  429288:	ldr	x0, [sp, #16]
  42928c:	adrp	x1, 445000 <_fini+0x4c30>
  429290:	add	x1, x1, #0xb5e
  429294:	bl	42bd04 <startswith>
  429298:	cbnz	x0, 4292ac <seat_name_is_valid+0x94>
  42929c:	mov	w8, wzr
  4292a0:	and	w8, w8, #0x1
  4292a4:	sturb	w8, [x29, #-1]
  4292a8:	b	429338 <seat_name_is_valid+0x120>
  4292ac:	ldr	x8, [sp, #16]
  4292b0:	ldrb	w9, [x8, #4]
  4292b4:	cbnz	w9, 4292c8 <seat_name_is_valid+0xb0>
  4292b8:	mov	w8, wzr
  4292bc:	and	w8, w8, #0x1
  4292c0:	sturb	w8, [x29, #-1]
  4292c4:	b	429338 <seat_name_is_valid+0x120>
  4292c8:	ldr	x8, [sp, #16]
  4292cc:	str	x8, [sp, #8]
  4292d0:	ldr	x8, [sp, #8]
  4292d4:	ldrb	w9, [x8]
  4292d8:	cbz	w9, 42930c <seat_name_is_valid+0xf4>
  4292dc:	ldr	x8, [sp, #8]
  4292e0:	ldrb	w0, [x8]
  4292e4:	bl	42bd64 <seat_name_valid_char>
  4292e8:	tbnz	w0, #0, 4292fc <seat_name_is_valid+0xe4>
  4292ec:	mov	w8, wzr
  4292f0:	and	w8, w8, #0x1
  4292f4:	sturb	w8, [x29, #-1]
  4292f8:	b	429338 <seat_name_is_valid+0x120>
  4292fc:	ldr	x8, [sp, #8]
  429300:	add	x8, x8, #0x1
  429304:	str	x8, [sp, #8]
  429308:	b	4292d0 <seat_name_is_valid+0xb8>
  42930c:	ldr	x0, [sp, #16]
  429310:	bl	4070a8 <strlen@plt>
  429314:	cmp	x0, #0xff
  429318:	b.ls	42932c <seat_name_is_valid+0x114>  // b.plast
  42931c:	mov	w8, wzr
  429320:	and	w8, w8, #0x1
  429324:	sturb	w8, [x29, #-1]
  429328:	b	429338 <seat_name_is_valid+0x120>
  42932c:	mov	w8, #0x1                   	// #1
  429330:	and	w8, w8, #0x1
  429334:	sturb	w8, [x29, #-1]
  429338:	ldurb	w8, [x29, #-1]
  42933c:	and	w0, w8, #0x1
  429340:	ldp	x29, x30, [sp, #32]
  429344:	add	sp, sp, #0x30
  429348:	ret

000000000042934c <malloc_multiply>:
  42934c:	sub	sp, sp, #0x40
  429350:	stp	x29, x30, [sp, #48]
  429354:	add	x29, sp, #0x30
  429358:	stur	x0, [x29, #-16]
  42935c:	str	x1, [sp, #24]
  429360:	ldur	x0, [x29, #-16]
  429364:	ldr	x1, [sp, #24]
  429368:	bl	42be30 <size_multiply_overflow>
  42936c:	tbnz	w0, #0, 429374 <malloc_multiply+0x28>
  429370:	b	429380 <malloc_multiply+0x34>
  429374:	mov	x8, xzr
  429378:	stur	x8, [x29, #-8]
  42937c:	b	4293b8 <malloc_multiply+0x6c>
  429380:	ldur	x8, [x29, #-16]
  429384:	ldr	x9, [sp, #24]
  429388:	mul	x8, x8, x9
  42938c:	str	x8, [sp, #16]
  429390:	cbz	x8, 4293a0 <malloc_multiply+0x54>
  429394:	ldr	x8, [sp, #16]
  429398:	str	x8, [sp, #8]
  42939c:	b	4293a8 <malloc_multiply+0x5c>
  4293a0:	mov	x8, #0x1                   	// #1
  4293a4:	str	x8, [sp, #8]
  4293a8:	ldr	x8, [sp, #8]
  4293ac:	mov	x0, x8
  4293b0:	bl	406dd8 <malloc@plt>
  4293b4:	stur	x0, [x29, #-8]
  4293b8:	ldur	x0, [x29, #-8]
  4293bc:	ldp	x29, x30, [sp, #48]
  4293c0:	add	sp, sp, #0x40
  4293c4:	ret

00000000004293c8 <seat_free>:
  4293c8:	sub	sp, sp, #0x40
  4293cc:	stp	x29, x30, [sp, #48]
  4293d0:	add	x29, sp, #0x30
  4293d4:	adrp	x8, 447000 <_fini+0x6c30>
  4293d8:	add	x8, x8, #0xd5f
  4293dc:	add	x8, x8, #0x3
  4293e0:	adrp	x9, 447000 <_fini+0x6c30>
  4293e4:	add	x9, x9, #0xda9
  4293e8:	stur	x0, [x29, #-16]
  4293ec:	ldur	x10, [x29, #-16]
  4293f0:	str	x8, [sp, #8]
  4293f4:	str	x9, [sp]
  4293f8:	cbnz	x10, 429408 <seat_free+0x40>
  4293fc:	mov	x8, xzr
  429400:	stur	x8, [x29, #-8]
  429404:	b	429608 <seat_free+0x240>
  429408:	ldur	x8, [x29, #-16]
  42940c:	ldrb	w9, [x8, #72]
  429410:	and	w9, w9, #0x1
  429414:	tbnz	w9, #0, 42941c <seat_free+0x54>
  429418:	b	42953c <seat_free+0x174>
  42941c:	ldur	x8, [x29, #-16]
  429420:	ldr	x8, [x8]
  429424:	add	x8, x8, #0x50
  429428:	str	x8, [sp, #24]
  42942c:	ldur	x8, [x29, #-16]
  429430:	str	x8, [sp, #16]
  429434:	ldr	x8, [sp, #16]
  429438:	cmp	x8, #0x0
  42943c:	cset	w9, ne  // ne = any
  429440:	mov	w10, #0x1                   	// #1
  429444:	eor	w9, w9, #0x1
  429448:	eor	w9, w9, w10
  42944c:	eor	w9, w9, w10
  429450:	and	w9, w9, #0x1
  429454:	mov	w0, w9
  429458:	sxtw	x8, w0
  42945c:	cbz	x8, 429480 <seat_free+0xb8>
  429460:	mov	w8, wzr
  429464:	mov	w0, w8
  429468:	adrp	x1, 441000 <_fini+0xc30>
  42946c:	add	x1, x1, #0x6cc
  429470:	ldr	x2, [sp, #8]
  429474:	mov	w3, #0x42                  	// #66
  429478:	ldr	x4, [sp]
  42947c:	bl	406c68 <log_assert_failed_realm@plt>
  429480:	ldr	x8, [sp, #16]
  429484:	ldr	x8, [x8, #80]
  429488:	cbz	x8, 4294a0 <seat_free+0xd8>
  42948c:	ldr	x8, [sp, #16]
  429490:	ldr	x8, [x8, #88]
  429494:	ldr	x9, [sp, #16]
  429498:	ldr	x9, [x9, #80]
  42949c:	str	x8, [x9, #88]
  4294a0:	ldr	x8, [sp, #16]
  4294a4:	ldr	x8, [x8, #88]
  4294a8:	cbz	x8, 4294c4 <seat_free+0xfc>
  4294ac:	ldr	x8, [sp, #16]
  4294b0:	ldr	x8, [x8, #80]
  4294b4:	ldr	x9, [sp, #16]
  4294b8:	ldr	x9, [x9, #88]
  4294bc:	str	x8, [x9, #80]
  4294c0:	b	429528 <seat_free+0x160>
  4294c4:	ldr	x8, [sp, #24]
  4294c8:	ldr	x8, [x8]
  4294cc:	ldr	x9, [sp, #16]
  4294d0:	cmp	x8, x9
  4294d4:	cset	w10, eq  // eq = none
  4294d8:	mov	w11, #0x1                   	// #1
  4294dc:	eor	w10, w10, #0x1
  4294e0:	eor	w10, w10, w11
  4294e4:	eor	w10, w10, w11
  4294e8:	and	w10, w10, #0x1
  4294ec:	mov	w0, w10
  4294f0:	sxtw	x8, w0
  4294f4:	cbz	x8, 429518 <seat_free+0x150>
  4294f8:	mov	w8, wzr
  4294fc:	mov	w0, w8
  429500:	adrp	x1, 441000 <_fini+0xc30>
  429504:	add	x1, x1, #0x6d2
  429508:	ldr	x2, [sp, #8]
  42950c:	mov	w3, #0x42                  	// #66
  429510:	ldr	x4, [sp]
  429514:	bl	406c68 <log_assert_failed_realm@plt>
  429518:	ldr	x8, [sp, #16]
  42951c:	ldr	x8, [x8, #80]
  429520:	ldr	x9, [sp, #24]
  429524:	str	x8, [x9]
  429528:	ldr	x8, [sp, #16]
  42952c:	mov	x9, xzr
  429530:	str	x9, [x8, #88]
  429534:	ldr	x8, [sp, #16]
  429538:	str	x9, [x8, #80]
  42953c:	ldur	x8, [x29, #-16]
  429540:	ldr	x8, [x8, #48]
  429544:	cbz	x8, 429558 <seat_free+0x190>
  429548:	ldur	x8, [x29, #-16]
  42954c:	ldr	x0, [x8, #48]
  429550:	bl	432104 <session_free>
  429554:	b	42953c <seat_free+0x174>
  429558:	ldur	x8, [x29, #-16]
  42955c:	ldr	x8, [x8, #32]
  429560:	cmp	x8, #0x0
  429564:	cset	w9, ne  // ne = any
  429568:	mov	w10, #0x1                   	// #1
  42956c:	eor	w9, w9, #0x1
  429570:	eor	w9, w9, w10
  429574:	eor	w9, w9, w10
  429578:	eor	w9, w9, w10
  42957c:	and	w9, w9, #0x1
  429580:	mov	w0, w9
  429584:	sxtw	x8, w0
  429588:	cbz	x8, 4295ac <seat_free+0x1e4>
  42958c:	mov	w8, wzr
  429590:	mov	w0, w8
  429594:	adrp	x1, 447000 <_fini+0x6c30>
  429598:	add	x1, x1, #0xdc1
  42959c:	ldr	x2, [sp, #8]
  4295a0:	mov	w3, #0x47                  	// #71
  4295a4:	ldr	x4, [sp]
  4295a8:	bl	406c68 <log_assert_failed_realm@plt>
  4295ac:	ldur	x8, [x29, #-16]
  4295b0:	ldr	x8, [x8, #24]
  4295b4:	cbz	x8, 4295c8 <seat_free+0x200>
  4295b8:	ldur	x8, [x29, #-16]
  4295bc:	ldr	x0, [x8, #24]
  4295c0:	bl	424610 <device_free>
  4295c4:	b	4295ac <seat_free+0x1e4>
  4295c8:	ldur	x8, [x29, #-16]
  4295cc:	ldr	x8, [x8]
  4295d0:	ldr	x0, [x8, #24]
  4295d4:	ldur	x8, [x29, #-16]
  4295d8:	ldr	x1, [x8, #8]
  4295dc:	bl	429618 <hashmap_remove>
  4295e0:	ldur	x8, [x29, #-16]
  4295e4:	ldr	x8, [x8, #56]
  4295e8:	mov	x0, x8
  4295ec:	bl	406da8 <free@plt>
  4295f0:	ldur	x8, [x29, #-16]
  4295f4:	ldr	x0, [x8, #16]
  4295f8:	bl	406da8 <free@plt>
  4295fc:	ldur	x0, [x29, #-16]
  429600:	bl	429644 <mfree>
  429604:	stur	x0, [x29, #-8]
  429608:	ldur	x0, [x29, #-8]
  42960c:	ldp	x29, x30, [sp, #48]
  429610:	add	sp, sp, #0x40
  429614:	ret

0000000000429618 <hashmap_remove>:
  429618:	sub	sp, sp, #0x20
  42961c:	stp	x29, x30, [sp, #16]
  429620:	add	x29, sp, #0x10
  429624:	str	x0, [sp, #8]
  429628:	str	x1, [sp]
  42962c:	ldr	x0, [sp, #8]
  429630:	ldr	x1, [sp]
  429634:	bl	407248 <internal_hashmap_remove@plt>
  429638:	ldp	x29, x30, [sp, #16]
  42963c:	add	sp, sp, #0x20
  429640:	ret

0000000000429644 <mfree>:
  429644:	sub	sp, sp, #0x20
  429648:	stp	x29, x30, [sp, #16]
  42964c:	add	x29, sp, #0x10
  429650:	mov	x8, xzr
  429654:	str	x0, [sp, #8]
  429658:	ldr	x0, [sp, #8]
  42965c:	str	x8, [sp]
  429660:	bl	406da8 <free@plt>
  429664:	ldr	x0, [sp]
  429668:	ldp	x29, x30, [sp, #16]
  42966c:	add	sp, sp, #0x20
  429670:	ret

0000000000429674 <seat_save>:
  429674:	sub	sp, sp, #0x70
  429678:	stp	x29, x30, [sp, #96]
  42967c:	add	x29, sp, #0x60
  429680:	mov	x8, xzr
  429684:	adrp	x9, 447000 <_fini+0x6c30>
  429688:	add	x9, x9, #0xd5f
  42968c:	add	x9, x9, #0x3
  429690:	stur	x0, [x29, #-16]
  429694:	stur	x8, [x29, #-24]
  429698:	stur	x8, [x29, #-32]
  42969c:	str	x9, [sp, #24]
  4296a0:	ldur	x8, [x29, #-16]
  4296a4:	cmp	x8, #0x0
  4296a8:	cset	w9, ne  // ne = any
  4296ac:	mov	w10, #0x1                   	// #1
  4296b0:	eor	w9, w9, #0x1
  4296b4:	eor	w9, w9, w10
  4296b8:	eor	w9, w9, w10
  4296bc:	and	w9, w9, #0x1
  4296c0:	mov	w0, w9
  4296c4:	sxtw	x8, w0
  4296c8:	cbz	x8, 4296f0 <seat_save+0x7c>
  4296cc:	mov	w8, wzr
  4296d0:	mov	w0, w8
  4296d4:	adrp	x1, 442000 <_fini+0x1c30>
  4296d8:	add	x1, x1, #0xf2
  4296dc:	ldr	x2, [sp, #24]
  4296e0:	mov	w3, #0x59                  	// #89
  4296e4:	adrp	x4, 447000 <_fini+0x6c30>
  4296e8:	add	x4, x4, #0xdcc
  4296ec:	bl	406c68 <log_assert_failed_realm@plt>
  4296f0:	ldur	x8, [x29, #-16]
  4296f4:	ldrb	w9, [x8, #72]
  4296f8:	mov	w10, #0x1                   	// #1
  4296fc:	lsr	w9, w9, w10
  429700:	and	w9, w9, w10
  429704:	tbnz	w9, #0, 429718 <seat_save+0xa4>
  429708:	stur	wzr, [x29, #-4]
  42970c:	mov	w8, #0x1                   	// #1
  429710:	stur	w8, [x29, #-40]
  429714:	b	429a6c <seat_save+0x3f8>
  429718:	adrp	x0, 440000 <on_brightness_writer_exit+0x15c>
  42971c:	add	x0, x0, #0x44e
  429720:	mov	w1, #0x1ed                 	// #493
  429724:	mov	w8, wzr
  429728:	mov	w2, w8
  42972c:	mov	w3, w8
  429730:	mov	w4, #0x2                   	// #2
  429734:	bl	4076b8 <mkdir_safe_label@plt>
  429738:	stur	w0, [x29, #-36]
  42973c:	ldur	w8, [x29, #-36]
  429740:	cmp	w8, #0x0
  429744:	cset	w8, ge  // ge = tcont
  429748:	tbnz	w8, #0, 429750 <seat_save+0xdc>
  42974c:	b	4299bc <seat_save+0x348>
  429750:	ldur	x8, [x29, #-16]
  429754:	ldr	x0, [x8, #16]
  429758:	sub	x1, x29, #0x20
  42975c:	sub	x2, x29, #0x18
  429760:	bl	407958 <fopen_temporary@plt>
  429764:	stur	w0, [x29, #-36]
  429768:	ldur	w9, [x29, #-36]
  42976c:	cmp	w9, #0x0
  429770:	cset	w9, ge  // ge = tcont
  429774:	tbnz	w9, #0, 42977c <seat_save+0x108>
  429778:	b	4299bc <seat_save+0x348>
  42977c:	ldur	x0, [x29, #-32]
  429780:	bl	407968 <fileno@plt>
  429784:	mov	w1, #0x1a4                 	// #420
  429788:	bl	407978 <fchmod@plt>
  42978c:	ldur	x8, [x29, #-32]
  429790:	ldur	x9, [x29, #-16]
  429794:	mov	x0, x9
  429798:	str	x8, [sp, #16]
  42979c:	bl	429adc <seat_is_seat0>
  4297a0:	and	w2, w0, #0x1
  4297a4:	ldur	x0, [x29, #-16]
  4297a8:	str	w2, [sp, #12]
  4297ac:	bl	429b74 <seat_can_multi_session>
  4297b0:	and	w3, w0, #0x1
  4297b4:	ldur	x0, [x29, #-16]
  4297b8:	str	w3, [sp, #8]
  4297bc:	bl	429bfc <seat_can_tty>
  4297c0:	and	w4, w0, #0x1
  4297c4:	ldur	x0, [x29, #-16]
  4297c8:	str	w4, [sp, #4]
  4297cc:	bl	429c84 <seat_can_graphical>
  4297d0:	and	w5, w0, #0x1
  4297d4:	ldr	x0, [sp, #16]
  4297d8:	adrp	x1, 447000 <_fini+0x6c30>
  4297dc:	add	x1, x1, #0xde2
  4297e0:	ldr	w2, [sp, #12]
  4297e4:	ldr	w3, [sp, #8]
  4297e8:	ldr	w4, [sp, #4]
  4297ec:	bl	407988 <fprintf@plt>
  4297f0:	ldur	x8, [x29, #-16]
  4297f4:	ldr	x8, [x8, #32]
  4297f8:	cbz	x8, 429880 <seat_save+0x20c>
  4297fc:	ldur	x8, [x29, #-16]
  429800:	ldr	x8, [x8, #32]
  429804:	ldr	x8, [x8, #40]
  429808:	cmp	x8, #0x0
  42980c:	cset	w9, ne  // ne = any
  429810:	mov	w10, #0x1                   	// #1
  429814:	eor	w9, w9, #0x1
  429818:	eor	w9, w9, w10
  42981c:	eor	w9, w9, w10
  429820:	and	w9, w9, #0x1
  429824:	mov	w0, w9
  429828:	sxtw	x8, w0
  42982c:	cbz	x8, 429854 <seat_save+0x1e0>
  429830:	mov	w8, wzr
  429834:	mov	w0, w8
  429838:	adrp	x1, 447000 <_fini+0x6c30>
  42983c:	add	x1, x1, #0xe46
  429840:	ldr	x2, [sp, #24]
  429844:	mov	w3, #0x74                  	// #116
  429848:	adrp	x4, 447000 <_fini+0x6c30>
  42984c:	add	x4, x4, #0xdcc
  429850:	bl	406c68 <log_assert_failed_realm@plt>
  429854:	ldur	x0, [x29, #-32]
  429858:	ldur	x8, [x29, #-16]
  42985c:	ldr	x8, [x8, #32]
  429860:	ldr	x2, [x8, #8]
  429864:	ldur	x8, [x29, #-16]
  429868:	ldr	x8, [x8, #32]
  42986c:	ldr	x8, [x8, #40]
  429870:	ldr	w3, [x8, #8]
  429874:	adrp	x1, 447000 <_fini+0x6c30>
  429878:	add	x1, x1, #0xe56
  42987c:	bl	407988 <fprintf@plt>
  429880:	ldur	x8, [x29, #-16]
  429884:	ldr	x8, [x8, #48]
  429888:	cbz	x8, 429958 <seat_save+0x2e4>
  42988c:	ldur	x1, [x29, #-32]
  429890:	adrp	x0, 447000 <_fini+0x6c30>
  429894:	add	x0, x0, #0xe6f
  429898:	bl	407ac8 <fputs@plt>
  42989c:	ldur	x8, [x29, #-16]
  4298a0:	ldr	x8, [x8, #48]
  4298a4:	str	x8, [sp, #48]
  4298a8:	ldr	x8, [sp, #48]
  4298ac:	cbz	x8, 4298f0 <seat_save+0x27c>
  4298b0:	ldur	x0, [x29, #-32]
  4298b4:	ldr	x8, [sp, #48]
  4298b8:	ldr	x2, [x8, #8]
  4298bc:	ldr	x8, [sp, #48]
  4298c0:	ldr	x8, [x8, #272]
  4298c4:	mov	w9, #0xa                   	// #10
  4298c8:	mov	w10, #0x20                  	// #32
  4298cc:	cmp	x8, #0x0
  4298d0:	csel	w3, w10, w9, ne  // ne = any
  4298d4:	adrp	x1, 447000 <_fini+0x6c30>
  4298d8:	add	x1, x1, #0xe79
  4298dc:	bl	407988 <fprintf@plt>
  4298e0:	ldr	x8, [sp, #48]
  4298e4:	ldr	x8, [x8, #272]
  4298e8:	str	x8, [sp, #48]
  4298ec:	b	4298a8 <seat_save+0x234>
  4298f0:	ldur	x1, [x29, #-32]
  4298f4:	adrp	x0, 447000 <_fini+0x6c30>
  4298f8:	add	x0, x0, #0xe7e
  4298fc:	bl	407ac8 <fputs@plt>
  429900:	ldur	x8, [x29, #-16]
  429904:	ldr	x8, [x8, #48]
  429908:	str	x8, [sp, #48]
  42990c:	ldr	x8, [sp, #48]
  429910:	cbz	x8, 429958 <seat_save+0x2e4>
  429914:	ldur	x0, [x29, #-32]
  429918:	ldr	x8, [sp, #48]
  42991c:	ldr	x8, [x8, #40]
  429920:	ldr	w2, [x8, #8]
  429924:	ldr	x8, [sp, #48]
  429928:	ldr	x8, [x8, #272]
  42992c:	mov	w9, #0xa                   	// #10
  429930:	mov	w10, #0x20                  	// #32
  429934:	cmp	x8, #0x0
  429938:	csel	w3, w10, w9, ne  // ne = any
  42993c:	adrp	x1, 447000 <_fini+0x6c30>
  429940:	add	x1, x1, #0xe84
  429944:	bl	407988 <fprintf@plt>
  429948:	ldr	x8, [sp, #48]
  42994c:	ldr	x8, [x8, #272]
  429950:	str	x8, [sp, #48]
  429954:	b	42990c <seat_save+0x298>
  429958:	ldur	x0, [x29, #-32]
  42995c:	bl	407998 <fflush_and_check@plt>
  429960:	stur	w0, [x29, #-36]
  429964:	ldur	w8, [x29, #-36]
  429968:	cmp	w8, #0x0
  42996c:	cset	w8, ge  // ge = tcont
  429970:	tbnz	w8, #0, 429978 <seat_save+0x304>
  429974:	b	4299bc <seat_save+0x348>
  429978:	ldur	x0, [x29, #-24]
  42997c:	ldur	x8, [x29, #-16]
  429980:	ldr	x1, [x8, #16]
  429984:	bl	4079a8 <rename@plt>
  429988:	cmp	w0, #0x0
  42998c:	cset	w9, ge  // ge = tcont
  429990:	tbnz	w9, #0, 4299ac <seat_save+0x338>
  429994:	bl	406e08 <__errno_location@plt>
  429998:	ldr	w8, [x0]
  42999c:	mov	w9, wzr
  4299a0:	subs	w8, w9, w8
  4299a4:	stur	w8, [x29, #-36]
  4299a8:	b	4299bc <seat_save+0x348>
  4299ac:	stur	wzr, [x29, #-4]
  4299b0:	mov	w8, #0x1                   	// #1
  4299b4:	stur	w8, [x29, #-40]
  4299b8:	b	429a6c <seat_save+0x3f8>
  4299bc:	ldur	x8, [x29, #-16]
  4299c0:	ldr	x0, [x8, #16]
  4299c4:	bl	4076e8 <unlink@plt>
  4299c8:	ldur	x8, [x29, #-24]
  4299cc:	cbz	x8, 4299d8 <seat_save+0x364>
  4299d0:	ldur	x0, [x29, #-24]
  4299d4:	bl	4076e8 <unlink@plt>
  4299d8:	mov	w8, #0x3                   	// #3
  4299dc:	str	w8, [sp, #44]
  4299e0:	ldur	w8, [x29, #-36]
  4299e4:	str	w8, [sp, #40]
  4299e8:	str	wzr, [sp, #36]
  4299ec:	ldr	w0, [sp, #36]
  4299f0:	bl	406c08 <log_get_max_level_realm@plt>
  4299f4:	ldr	w8, [sp, #44]
  4299f8:	and	w8, w8, #0x7
  4299fc:	cmp	w0, w8
  429a00:	b.lt	429a40 <seat_save+0x3cc>  // b.tstop
  429a04:	ldr	w8, [sp, #36]
  429a08:	ldr	w9, [sp, #44]
  429a0c:	orr	w0, w9, w8, lsl #10
  429a10:	ldr	w1, [sp, #40]
  429a14:	ldur	x10, [x29, #-16]
  429a18:	ldr	x6, [x10, #16]
  429a1c:	ldr	x2, [sp, #24]
  429a20:	mov	w3, #0xa1                  	// #161
  429a24:	adrp	x4, 447000 <_fini+0x6c30>
  429a28:	add	x4, x4, #0xe89
  429a2c:	adrp	x5, 447000 <_fini+0x6c30>
  429a30:	add	x5, x5, #0xe93
  429a34:	bl	406c18 <log_internal_realm@plt>
  429a38:	str	w0, [sp]
  429a3c:	b	429a54 <seat_save+0x3e0>
  429a40:	ldr	w0, [sp, #40]
  429a44:	bl	406c28 <abs@plt>
  429a48:	mov	w8, wzr
  429a4c:	subs	w8, w8, w0, uxtb
  429a50:	str	w8, [sp]
  429a54:	ldr	w8, [sp]
  429a58:	str	w8, [sp, #32]
  429a5c:	ldr	w8, [sp, #32]
  429a60:	stur	w8, [x29, #-4]
  429a64:	mov	w8, #0x1                   	// #1
  429a68:	stur	w8, [x29, #-40]
  429a6c:	sub	x0, x29, #0x20
  429a70:	bl	429ab4 <fclosep>
  429a74:	sub	x0, x29, #0x18
  429a78:	bl	429a8c <freep>
  429a7c:	ldur	w0, [x29, #-4]
  429a80:	ldp	x29, x30, [sp, #96]
  429a84:	add	sp, sp, #0x70
  429a88:	ret

0000000000429a8c <freep>:
  429a8c:	sub	sp, sp, #0x20
  429a90:	stp	x29, x30, [sp, #16]
  429a94:	add	x29, sp, #0x10
  429a98:	str	x0, [sp, #8]
  429a9c:	ldr	x8, [sp, #8]
  429aa0:	ldr	x0, [x8]
  429aa4:	bl	406da8 <free@plt>
  429aa8:	ldp	x29, x30, [sp, #16]
  429aac:	add	sp, sp, #0x20
  429ab0:	ret

0000000000429ab4 <fclosep>:
  429ab4:	sub	sp, sp, #0x20
  429ab8:	stp	x29, x30, [sp, #16]
  429abc:	add	x29, sp, #0x10
  429ac0:	str	x0, [sp, #8]
  429ac4:	ldr	x8, [sp, #8]
  429ac8:	ldr	x0, [x8]
  429acc:	bl	4079b8 <safe_fclose@plt>
  429ad0:	ldp	x29, x30, [sp, #16]
  429ad4:	add	sp, sp, #0x20
  429ad8:	ret

0000000000429adc <seat_is_seat0>:
  429adc:	sub	sp, sp, #0x20
  429ae0:	stp	x29, x30, [sp, #16]
  429ae4:	add	x29, sp, #0x10
  429ae8:	adrp	x8, 447000 <_fini+0x6c30>
  429aec:	add	x8, x8, #0xd5f
  429af0:	add	x2, x8, #0x3
  429af4:	str	x0, [sp, #8]
  429af8:	str	x2, [sp]
  429afc:	ldr	x8, [sp, #8]
  429b00:	cmp	x8, #0x0
  429b04:	cset	w9, ne  // ne = any
  429b08:	mov	w10, #0x1                   	// #1
  429b0c:	eor	w9, w9, #0x1
  429b10:	eor	w9, w9, w10
  429b14:	eor	w9, w9, w10
  429b18:	and	w9, w9, #0x1
  429b1c:	mov	w0, w9
  429b20:	sxtw	x8, w0
  429b24:	cbz	x8, 429b4c <seat_is_seat0+0x70>
  429b28:	mov	w8, wzr
  429b2c:	mov	w0, w8
  429b30:	adrp	x1, 442000 <_fini+0x1c30>
  429b34:	add	x1, x1, #0xf2
  429b38:	ldr	x2, [sp]
  429b3c:	mov	w3, #0x22c                 	// #556
  429b40:	adrp	x4, 448000 <_fini+0x7c30>
  429b44:	add	x4, x4, #0x263
  429b48:	bl	406c68 <log_assert_failed_realm@plt>
  429b4c:	ldr	x8, [sp, #8]
  429b50:	ldr	x8, [x8]
  429b54:	ldr	x8, [x8, #168]
  429b58:	ldr	x9, [sp, #8]
  429b5c:	cmp	x8, x9
  429b60:	cset	w10, eq  // eq = none
  429b64:	and	w0, w10, #0x1
  429b68:	ldp	x29, x30, [sp, #16]
  429b6c:	add	sp, sp, #0x20
  429b70:	ret

0000000000429b74 <seat_can_multi_session>:
  429b74:	sub	sp, sp, #0x20
  429b78:	stp	x29, x30, [sp, #16]
  429b7c:	add	x29, sp, #0x10
  429b80:	adrp	x8, 447000 <_fini+0x6c30>
  429b84:	add	x8, x8, #0xd5f
  429b88:	add	x2, x8, #0x3
  429b8c:	str	x0, [sp, #8]
  429b90:	str	x2, [sp]
  429b94:	ldr	x8, [sp, #8]
  429b98:	cmp	x8, #0x0
  429b9c:	cset	w9, ne  // ne = any
  429ba0:	mov	w10, #0x1                   	// #1
  429ba4:	eor	w9, w9, #0x1
  429ba8:	eor	w9, w9, w10
  429bac:	eor	w9, w9, w10
  429bb0:	and	w9, w9, #0x1
  429bb4:	mov	w0, w9
  429bb8:	sxtw	x8, w0
  429bbc:	cbz	x8, 429be4 <seat_can_multi_session+0x70>
  429bc0:	mov	w8, wzr
  429bc4:	mov	w0, w8
  429bc8:	adrp	x1, 442000 <_fini+0x1c30>
  429bcc:	add	x1, x1, #0xf2
  429bd0:	ldr	x2, [sp]
  429bd4:	mov	w3, #0x232                 	// #562
  429bd8:	adrp	x4, 448000 <_fini+0x7c30>
  429bdc:	add	x4, x4, #0x27f
  429be0:	bl	406c68 <log_assert_failed_realm@plt>
  429be4:	ldr	x0, [sp, #8]
  429be8:	bl	429ff0 <seat_has_vts>
  429bec:	and	w0, w0, #0x1
  429bf0:	ldp	x29, x30, [sp, #16]
  429bf4:	add	sp, sp, #0x20
  429bf8:	ret

0000000000429bfc <seat_can_tty>:
  429bfc:	sub	sp, sp, #0x20
  429c00:	stp	x29, x30, [sp, #16]
  429c04:	add	x29, sp, #0x10
  429c08:	adrp	x8, 447000 <_fini+0x6c30>
  429c0c:	add	x8, x8, #0xd5f
  429c10:	add	x2, x8, #0x3
  429c14:	str	x0, [sp, #8]
  429c18:	str	x2, [sp]
  429c1c:	ldr	x8, [sp, #8]
  429c20:	cmp	x8, #0x0
  429c24:	cset	w9, ne  // ne = any
  429c28:	mov	w10, #0x1                   	// #1
  429c2c:	eor	w9, w9, #0x1
  429c30:	eor	w9, w9, w10
  429c34:	eor	w9, w9, w10
  429c38:	and	w9, w9, #0x1
  429c3c:	mov	w0, w9
  429c40:	sxtw	x8, w0
  429c44:	cbz	x8, 429c6c <seat_can_tty+0x70>
  429c48:	mov	w8, wzr
  429c4c:	mov	w0, w8
  429c50:	adrp	x1, 442000 <_fini+0x1c30>
  429c54:	add	x1, x1, #0xf2
  429c58:	ldr	x2, [sp]
  429c5c:	mov	w3, #0x238                 	// #568
  429c60:	adrp	x4, 448000 <_fini+0x7c30>
  429c64:	add	x4, x4, #0x2a4
  429c68:	bl	406c68 <log_assert_failed_realm@plt>
  429c6c:	ldr	x0, [sp, #8]
  429c70:	bl	429ff0 <seat_has_vts>
  429c74:	and	w0, w0, #0x1
  429c78:	ldp	x29, x30, [sp, #16]
  429c7c:	add	sp, sp, #0x20
  429c80:	ret

0000000000429c84 <seat_can_graphical>:
  429c84:	sub	sp, sp, #0x20
  429c88:	stp	x29, x30, [sp, #16]
  429c8c:	add	x29, sp, #0x10
  429c90:	adrp	x8, 447000 <_fini+0x6c30>
  429c94:	add	x8, x8, #0xd5f
  429c98:	add	x2, x8, #0x3
  429c9c:	str	x0, [sp, #8]
  429ca0:	str	x2, [sp]
  429ca4:	ldr	x8, [sp, #8]
  429ca8:	cmp	x8, #0x0
  429cac:	cset	w9, ne  // ne = any
  429cb0:	mov	w10, #0x1                   	// #1
  429cb4:	eor	w9, w9, #0x1
  429cb8:	eor	w9, w9, w10
  429cbc:	eor	w9, w9, w10
  429cc0:	and	w9, w9, #0x1
  429cc4:	mov	w0, w9
  429cc8:	sxtw	x8, w0
  429ccc:	cbz	x8, 429cf4 <seat_can_graphical+0x70>
  429cd0:	mov	w8, wzr
  429cd4:	mov	w0, w8
  429cd8:	adrp	x1, 442000 <_fini+0x1c30>
  429cdc:	add	x1, x1, #0xf2
  429ce0:	ldr	x2, [sp]
  429ce4:	mov	w3, #0x245                 	// #581
  429ce8:	adrp	x4, 448000 <_fini+0x7c30>
  429cec:	add	x4, x4, #0x2e4
  429cf0:	bl	406c68 <log_assert_failed_realm@plt>
  429cf4:	ldr	x0, [sp, #8]
  429cf8:	bl	42b9fc <seat_has_master_device>
  429cfc:	and	w0, w0, #0x1
  429d00:	ldp	x29, x30, [sp, #16]
  429d04:	add	sp, sp, #0x20
  429d08:	ret

0000000000429d0c <seat_load>:
  429d0c:	sub	sp, sp, #0x20
  429d10:	stp	x29, x30, [sp, #16]
  429d14:	add	x29, sp, #0x10
  429d18:	adrp	x8, 447000 <_fini+0x6c30>
  429d1c:	add	x8, x8, #0xd5f
  429d20:	add	x2, x8, #0x3
  429d24:	str	x0, [sp, #8]
  429d28:	str	x2, [sp]
  429d2c:	ldr	x8, [sp, #8]
  429d30:	cmp	x8, #0x0
  429d34:	cset	w9, ne  // ne = any
  429d38:	mov	w10, #0x1                   	// #1
  429d3c:	eor	w9, w9, #0x1
  429d40:	eor	w9, w9, w10
  429d44:	eor	w9, w9, w10
  429d48:	and	w9, w9, #0x1
  429d4c:	mov	w0, w9
  429d50:	sxtw	x8, w0
  429d54:	cbz	x8, 429d7c <seat_load+0x70>
  429d58:	mov	w8, wzr
  429d5c:	mov	w0, w8
  429d60:	adrp	x1, 442000 <_fini+0x1c30>
  429d64:	add	x1, x1, #0xf2
  429d68:	ldr	x2, [sp]
  429d6c:	mov	w3, #0xa5                  	// #165
  429d70:	adrp	x4, 447000 <_fini+0x6c30>
  429d74:	add	x4, x4, #0xeb3
  429d78:	bl	406c68 <log_assert_failed_realm@plt>
  429d7c:	mov	w8, wzr
  429d80:	mov	w0, w8
  429d84:	ldp	x29, x30, [sp, #16]
  429d88:	add	sp, sp, #0x20
  429d8c:	ret

0000000000429d90 <seat_preallocate_vts>:
  429d90:	sub	sp, sp, #0x60
  429d94:	stp	x29, x30, [sp, #80]
  429d98:	add	x29, sp, #0x50
  429d9c:	adrp	x8, 447000 <_fini+0x6c30>
  429da0:	add	x8, x8, #0xd5f
  429da4:	add	x8, x8, #0x3
  429da8:	stur	x0, [x29, #-16]
  429dac:	stur	wzr, [x29, #-20]
  429db0:	str	x8, [sp, #8]
  429db4:	ldur	x8, [x29, #-16]
  429db8:	cmp	x8, #0x0
  429dbc:	cset	w9, ne  // ne = any
  429dc0:	mov	w10, #0x1                   	// #1
  429dc4:	eor	w9, w9, #0x1
  429dc8:	eor	w9, w9, w10
  429dcc:	eor	w9, w9, w10
  429dd0:	and	w9, w9, #0x1
  429dd4:	mov	w0, w9
  429dd8:	sxtw	x8, w0
  429ddc:	cbz	x8, 429e04 <seat_preallocate_vts+0x74>
  429de0:	mov	w8, wzr
  429de4:	mov	w0, w8
  429de8:	adrp	x1, 442000 <_fini+0x1c30>
  429dec:	add	x1, x1, #0xf2
  429df0:	ldr	x2, [sp, #8]
  429df4:	mov	w3, #0xbe                  	// #190
  429df8:	adrp	x4, 447000 <_fini+0x6c30>
  429dfc:	add	x4, x4, #0xec9
  429e00:	bl	406c68 <log_assert_failed_realm@plt>
  429e04:	ldur	x8, [x29, #-16]
  429e08:	ldr	x8, [x8]
  429e0c:	cmp	x8, #0x0
  429e10:	cset	w9, ne  // ne = any
  429e14:	mov	w10, #0x1                   	// #1
  429e18:	eor	w9, w9, #0x1
  429e1c:	eor	w9, w9, w10
  429e20:	eor	w9, w9, w10
  429e24:	and	w9, w9, #0x1
  429e28:	mov	w0, w9
  429e2c:	sxtw	x8, w0
  429e30:	cbz	x8, 429e58 <seat_preallocate_vts+0xc8>
  429e34:	mov	w8, wzr
  429e38:	mov	w0, w8
  429e3c:	adrp	x1, 447000 <_fini+0x6c30>
  429e40:	add	x1, x1, #0xeea
  429e44:	ldr	x2, [sp, #8]
  429e48:	mov	w3, #0xbf                  	// #191
  429e4c:	adrp	x4, 447000 <_fini+0x6c30>
  429e50:	add	x4, x4, #0xec9
  429e54:	bl	406c68 <log_assert_failed_realm@plt>
  429e58:	ldur	x8, [x29, #-16]
  429e5c:	ldr	x8, [x8]
  429e60:	ldr	w9, [x8, #156]
  429e64:	cmp	w9, #0x0
  429e68:	cset	w9, hi  // hi = pmore
  429e6c:	tbnz	w9, #0, 429e78 <seat_preallocate_vts+0xe8>
  429e70:	stur	wzr, [x29, #-4]
  429e74:	b	429fe0 <seat_preallocate_vts+0x250>
  429e78:	ldur	x0, [x29, #-16]
  429e7c:	bl	429ff0 <seat_has_vts>
  429e80:	tbnz	w0, #0, 429e8c <seat_preallocate_vts+0xfc>
  429e84:	stur	wzr, [x29, #-4]
  429e88:	b	429fe0 <seat_preallocate_vts+0x250>
  429e8c:	mov	w8, #0x7                   	// #7
  429e90:	stur	w8, [x29, #-28]
  429e94:	stur	wzr, [x29, #-32]
  429e98:	stur	wzr, [x29, #-36]
  429e9c:	ldur	w0, [x29, #-36]
  429ea0:	bl	406c08 <log_get_max_level_realm@plt>
  429ea4:	ldur	w8, [x29, #-28]
  429ea8:	and	w8, w8, #0x7
  429eac:	cmp	w0, w8
  429eb0:	b.lt	429ee8 <seat_preallocate_vts+0x158>  // b.tstop
  429eb4:	ldur	w8, [x29, #-36]
  429eb8:	ldur	w9, [x29, #-28]
  429ebc:	orr	w0, w9, w8, lsl #10
  429ec0:	ldur	w1, [x29, #-32]
  429ec4:	ldr	x2, [sp, #8]
  429ec8:	mov	w3, #0xc7                  	// #199
  429ecc:	adrp	x4, 447000 <_fini+0x6c30>
  429ed0:	add	x4, x4, #0xef5
  429ed4:	adrp	x5, 447000 <_fini+0x6c30>
  429ed8:	add	x5, x5, #0xf0a
  429edc:	bl	406c18 <log_internal_realm@plt>
  429ee0:	str	w0, [sp, #4]
  429ee4:	b	429efc <seat_preallocate_vts+0x16c>
  429ee8:	ldur	w0, [x29, #-32]
  429eec:	bl	406c28 <abs@plt>
  429ef0:	mov	w8, wzr
  429ef4:	subs	w8, w8, w0, uxtb
  429ef8:	str	w8, [sp, #4]
  429efc:	ldr	w8, [sp, #4]
  429f00:	str	w8, [sp, #40]
  429f04:	mov	w8, #0x1                   	// #1
  429f08:	stur	w8, [x29, #-24]
  429f0c:	ldur	w8, [x29, #-24]
  429f10:	ldur	x9, [x29, #-16]
  429f14:	ldr	x9, [x9]
  429f18:	ldr	w10, [x9, #156]
  429f1c:	cmp	w8, w10
  429f20:	b.hi	429fd8 <seat_preallocate_vts+0x248>  // b.pmore
  429f24:	ldur	w0, [x29, #-24]
  429f28:	bl	42a0a4 <vt_allocate>
  429f2c:	str	w0, [sp, #36]
  429f30:	ldr	w8, [sp, #36]
  429f34:	cmp	w8, #0x0
  429f38:	cset	w8, ge  // ge = tcont
  429f3c:	tbnz	w8, #0, 429fc8 <seat_preallocate_vts+0x238>
  429f40:	mov	w8, #0x3                   	// #3
  429f44:	str	w8, [sp, #32]
  429f48:	ldr	w8, [sp, #36]
  429f4c:	str	w8, [sp, #28]
  429f50:	str	wzr, [sp, #24]
  429f54:	ldr	w0, [sp, #24]
  429f58:	bl	406c08 <log_get_max_level_realm@plt>
  429f5c:	ldr	w8, [sp, #32]
  429f60:	and	w8, w8, #0x7
  429f64:	cmp	w0, w8
  429f68:	b.lt	429fa4 <seat_preallocate_vts+0x214>  // b.tstop
  429f6c:	ldr	w8, [sp, #24]
  429f70:	ldr	w9, [sp, #32]
  429f74:	orr	w0, w9, w8, lsl #10
  429f78:	ldr	w1, [sp, #28]
  429f7c:	ldur	w6, [x29, #-24]
  429f80:	ldr	x2, [sp, #8]
  429f84:	mov	w3, #0xce                  	// #206
  429f88:	adrp	x4, 447000 <_fini+0x6c30>
  429f8c:	add	x4, x4, #0xef5
  429f90:	adrp	x5, 447000 <_fini+0x6c30>
  429f94:	add	x5, x5, #0xf1f
  429f98:	bl	406c18 <log_internal_realm@plt>
  429f9c:	str	w0, [sp]
  429fa0:	b	429fb8 <seat_preallocate_vts+0x228>
  429fa4:	ldr	w0, [sp, #28]
  429fa8:	bl	406c28 <abs@plt>
  429fac:	mov	w8, wzr
  429fb0:	subs	w8, w8, w0, uxtb
  429fb4:	str	w8, [sp]
  429fb8:	ldr	w8, [sp]
  429fbc:	str	w8, [sp, #20]
  429fc0:	ldr	w8, [sp, #20]
  429fc4:	stur	w8, [x29, #-20]
  429fc8:	ldur	w8, [x29, #-24]
  429fcc:	add	w8, w8, #0x1
  429fd0:	stur	w8, [x29, #-24]
  429fd4:	b	429f0c <seat_preallocate_vts+0x17c>
  429fd8:	ldur	w8, [x29, #-20]
  429fdc:	stur	w8, [x29, #-4]
  429fe0:	ldur	w0, [x29, #-4]
  429fe4:	ldp	x29, x30, [sp, #80]
  429fe8:	add	sp, sp, #0x60
  429fec:	ret

0000000000429ff0 <seat_has_vts>:
  429ff0:	sub	sp, sp, #0x30
  429ff4:	stp	x29, x30, [sp, #32]
  429ff8:	add	x29, sp, #0x20
  429ffc:	adrp	x8, 447000 <_fini+0x6c30>
  42a000:	add	x8, x8, #0xd5f
  42a004:	add	x2, x8, #0x3
  42a008:	stur	x0, [x29, #-8]
  42a00c:	str	x2, [sp, #16]
  42a010:	ldur	x8, [x29, #-8]
  42a014:	cmp	x8, #0x0
  42a018:	cset	w9, ne  // ne = any
  42a01c:	mov	w10, #0x1                   	// #1
  42a020:	eor	w9, w9, #0x1
  42a024:	eor	w9, w9, w10
  42a028:	eor	w9, w9, w10
  42a02c:	and	w9, w9, #0x1
  42a030:	mov	w0, w9
  42a034:	sxtw	x8, w0
  42a038:	cbz	x8, 42a060 <seat_has_vts+0x70>
  42a03c:	mov	w8, wzr
  42a040:	mov	w0, w8
  42a044:	adrp	x1, 442000 <_fini+0x1c30>
  42a048:	add	x1, x1, #0xf2
  42a04c:	ldr	x2, [sp, #16]
  42a050:	mov	w3, #0x226                 	// #550
  42a054:	adrp	x4, 448000 <_fini+0x7c30>
  42a058:	add	x4, x4, #0x248
  42a05c:	bl	406c68 <log_assert_failed_realm@plt>
  42a060:	ldur	x0, [x29, #-8]
  42a064:	bl	429adc <seat_is_seat0>
  42a068:	mov	w8, #0x0                   	// #0
  42a06c:	str	w8, [sp, #12]
  42a070:	tbnz	w0, #0, 42a078 <seat_has_vts+0x88>
  42a074:	b	42a090 <seat_has_vts+0xa0>
  42a078:	ldur	x8, [x29, #-8]
  42a07c:	ldr	x8, [x8]
  42a080:	ldr	w9, [x8, #152]
  42a084:	cmp	w9, #0x0
  42a088:	cset	w9, ge  // ge = tcont
  42a08c:	str	w9, [sp, #12]
  42a090:	ldr	w8, [sp, #12]
  42a094:	and	w0, w8, #0x1
  42a098:	ldp	x29, x30, [sp, #32]
  42a09c:	add	sp, sp, #0x30
  42a0a0:	ret

000000000042a0a4 <vt_allocate>:
  42a0a4:	sub	sp, sp, #0x40
  42a0a8:	stp	x29, x30, [sp, #48]
  42a0ac:	add	x29, sp, #0x30
  42a0b0:	mov	w8, #0xffffffff            	// #-1
  42a0b4:	adrp	x9, 447000 <_fini+0x6c30>
  42a0b8:	add	x9, x9, #0xd5f
  42a0bc:	add	x9, x9, #0x3
  42a0c0:	stur	w0, [x29, #-8]
  42a0c4:	str	w8, [sp, #12]
  42a0c8:	str	x9, [sp]
  42a0cc:	ldur	w8, [x29, #-8]
  42a0d0:	cmp	w8, #0x1
  42a0d4:	cset	w8, cs  // cs = hs, nlast
  42a0d8:	mov	w9, #0x1                   	// #1
  42a0dc:	eor	w8, w8, #0x1
  42a0e0:	eor	w8, w8, w9
  42a0e4:	eor	w8, w8, w9
  42a0e8:	and	w8, w8, #0x1
  42a0ec:	mov	w0, w8
  42a0f0:	sxtw	x10, w0
  42a0f4:	cbz	x10, 42a11c <vt_allocate+0x78>
  42a0f8:	mov	w8, wzr
  42a0fc:	mov	w0, w8
  42a100:	adrp	x1, 442000 <_fini+0x1c30>
  42a104:	add	x1, x1, #0x958
  42a108:	ldr	x2, [sp]
  42a10c:	mov	w3, #0xb0                  	// #176
  42a110:	adrp	x4, 448000 <_fini+0x7c30>
  42a114:	add	x4, x4, #0x3a0
  42a118:	bl	406c68 <log_assert_failed_realm@plt>
  42a11c:	ldur	w3, [x29, #-8]
  42a120:	add	x0, sp, #0x13
  42a124:	mov	x1, #0x15                  	// #21
  42a128:	adrp	x2, 441000 <_fini+0xc30>
  42a12c:	add	x2, x2, #0x704
  42a130:	bl	407358 <snprintf@plt>
  42a134:	mov	w1, w0
  42a138:	sxtw	x8, w1
  42a13c:	cmp	x8, #0x15
  42a140:	cset	w9, cc  // cc = lo, ul, last
  42a144:	mov	w10, #0x1                   	// #1
  42a148:	eor	w9, w9, #0x1
  42a14c:	eor	w9, w9, w10
  42a150:	eor	w9, w9, w10
  42a154:	and	w9, w9, #0x1
  42a158:	mov	w1, w9
  42a15c:	sxtw	x8, w1
  42a160:	cbz	x8, 42a188 <vt_allocate+0xe4>
  42a164:	mov	w8, wzr
  42a168:	mov	w0, w8
  42a16c:	adrp	x1, 448000 <_fini+0x7c30>
  42a170:	add	x1, x1, #0x3be
  42a174:	ldr	x2, [sp]
  42a178:	mov	w3, #0xb2                  	// #178
  42a17c:	adrp	x4, 448000 <_fini+0x7c30>
  42a180:	add	x4, x4, #0x3a0
  42a184:	bl	406c68 <log_assert_failed_realm@plt>
  42a188:	add	x0, sp, #0x13
  42a18c:	mov	w1, #0x102                 	// #258
  42a190:	movk	w1, #0x8, lsl #16
  42a194:	bl	407068 <open_terminal@plt>
  42a198:	str	w0, [sp, #12]
  42a19c:	ldr	w8, [sp, #12]
  42a1a0:	cmp	w8, #0x0
  42a1a4:	cset	w8, ge  // ge = tcont
  42a1a8:	tbnz	w8, #0, 42a1c0 <vt_allocate+0x11c>
  42a1ac:	ldr	w8, [sp, #12]
  42a1b0:	stur	w8, [x29, #-4]
  42a1b4:	mov	w8, #0x1                   	// #1
  42a1b8:	str	w8, [sp, #8]
  42a1bc:	b	42a1cc <vt_allocate+0x128>
  42a1c0:	stur	wzr, [x29, #-4]
  42a1c4:	mov	w8, #0x1                   	// #1
  42a1c8:	str	w8, [sp, #8]
  42a1cc:	add	x0, sp, #0xc
  42a1d0:	bl	42be98 <closep>
  42a1d4:	ldur	w0, [x29, #-4]
  42a1d8:	ldp	x29, x30, [sp, #48]
  42a1dc:	add	sp, sp, #0x40
  42a1e0:	ret

000000000042a1e4 <seat_apply_acls>:
  42a1e4:	sub	sp, sp, #0x70
  42a1e8:	stp	x29, x30, [sp, #96]
  42a1ec:	add	x29, sp, #0x60
  42a1f0:	adrp	x8, 447000 <_fini+0x6c30>
  42a1f4:	add	x8, x8, #0xd5f
  42a1f8:	add	x8, x8, #0x3
  42a1fc:	stur	x0, [x29, #-16]
  42a200:	stur	x1, [x29, #-24]
  42a204:	str	x8, [sp, #40]
  42a208:	ldur	x8, [x29, #-16]
  42a20c:	cmp	x8, #0x0
  42a210:	cset	w9, ne  // ne = any
  42a214:	mov	w10, #0x1                   	// #1
  42a218:	eor	w9, w9, #0x1
  42a21c:	eor	w9, w9, w10
  42a220:	eor	w9, w9, w10
  42a224:	and	w9, w9, #0x1
  42a228:	mov	w0, w9
  42a22c:	sxtw	x8, w0
  42a230:	cbz	x8, 42a258 <seat_apply_acls+0x74>
  42a234:	mov	w8, wzr
  42a238:	mov	w0, w8
  42a23c:	adrp	x1, 442000 <_fini+0x1c30>
  42a240:	add	x1, x1, #0xf2
  42a244:	ldr	x2, [sp, #40]
  42a248:	mov	w3, #0xd7                  	// #215
  42a24c:	adrp	x4, 447000 <_fini+0x6c30>
  42a250:	add	x4, x4, #0xf3f
  42a254:	bl	406c68 <log_assert_failed_realm@plt>
  42a258:	ldur	x8, [x29, #-16]
  42a25c:	ldr	x0, [x8, #8]
  42a260:	ldur	x8, [x29, #-24]
  42a264:	cmp	x8, #0x0
  42a268:	cset	w9, ne  // ne = any
  42a26c:	mov	w10, #0x1                   	// #1
  42a270:	eor	w9, w9, #0x1
  42a274:	eor	w9, w9, w10
  42a278:	ldur	x8, [x29, #-24]
  42a27c:	str	x0, [sp, #32]
  42a280:	str	w9, [sp, #28]
  42a284:	cbz	x8, 42a29c <seat_apply_acls+0xb8>
  42a288:	ldur	x8, [x29, #-24]
  42a28c:	ldr	x8, [x8, #40]
  42a290:	ldr	w9, [x8, #8]
  42a294:	str	w9, [sp, #24]
  42a298:	b	42a2a4 <seat_apply_acls+0xc0>
  42a29c:	mov	w8, wzr
  42a2a0:	str	w8, [sp, #24]
  42a2a4:	ldr	w8, [sp, #24]
  42a2a8:	ldur	x9, [x29, #-16]
  42a2ac:	ldr	x9, [x9, #32]
  42a2b0:	cmp	x9, #0x0
  42a2b4:	cset	w10, ne  // ne = any
  42a2b8:	mov	w11, #0x1                   	// #1
  42a2bc:	eor	w10, w10, #0x1
  42a2c0:	eor	w10, w10, w11
  42a2c4:	ldur	x9, [x29, #-16]
  42a2c8:	ldr	x9, [x9, #32]
  42a2cc:	str	w8, [sp, #20]
  42a2d0:	str	w10, [sp, #16]
  42a2d4:	cbz	x9, 42a2f0 <seat_apply_acls+0x10c>
  42a2d8:	ldur	x8, [x29, #-16]
  42a2dc:	ldr	x8, [x8, #32]
  42a2e0:	ldr	x8, [x8, #40]
  42a2e4:	ldr	w9, [x8, #8]
  42a2e8:	str	w9, [sp, #12]
  42a2ec:	b	42a2f8 <seat_apply_acls+0x114>
  42a2f0:	mov	w8, wzr
  42a2f4:	str	w8, [sp, #12]
  42a2f8:	ldr	w8, [sp, #12]
  42a2fc:	ldr	x0, [sp, #32]
  42a300:	mov	w9, wzr
  42a304:	and	w1, w9, #0x1
  42a308:	ldr	w9, [sp, #28]
  42a30c:	and	w2, w9, #0x1
  42a310:	ldr	w3, [sp, #20]
  42a314:	ldr	w10, [sp, #16]
  42a318:	and	w4, w10, #0x1
  42a31c:	mov	w5, w8
  42a320:	bl	43e710 <devnode_acl_all>
  42a324:	stur	w0, [x29, #-28]
  42a328:	ldur	w8, [x29, #-28]
  42a32c:	cmp	w8, #0x0
  42a330:	cset	w8, ge  // ge = tcont
  42a334:	tbnz	w8, #0, 42a3c0 <seat_apply_acls+0x1dc>
  42a338:	mov	w8, #0x3                   	// #3
  42a33c:	stur	w8, [x29, #-32]
  42a340:	ldur	w8, [x29, #-28]
  42a344:	stur	w8, [x29, #-36]
  42a348:	stur	wzr, [x29, #-40]
  42a34c:	ldur	w0, [x29, #-40]
  42a350:	bl	406c08 <log_get_max_level_realm@plt>
  42a354:	ldur	w8, [x29, #-32]
  42a358:	and	w8, w8, #0x7
  42a35c:	cmp	w0, w8
  42a360:	b.lt	42a398 <seat_apply_acls+0x1b4>  // b.tstop
  42a364:	ldur	w8, [x29, #-40]
  42a368:	ldur	w9, [x29, #-32]
  42a36c:	orr	w0, w9, w8, lsl #10
  42a370:	ldur	w1, [x29, #-36]
  42a374:	ldr	x2, [sp, #40]
  42a378:	mov	w3, #0xdf                  	// #223
  42a37c:	adrp	x4, 447000 <_fini+0x6c30>
  42a380:	add	x4, x4, #0xf66
  42a384:	adrp	x5, 447000 <_fini+0x6c30>
  42a388:	add	x5, x5, #0xf76
  42a38c:	bl	406c18 <log_internal_realm@plt>
  42a390:	str	w0, [sp, #8]
  42a394:	b	42a3ac <seat_apply_acls+0x1c8>
  42a398:	ldur	w0, [x29, #-36]
  42a39c:	bl	406c28 <abs@plt>
  42a3a0:	mov	w8, wzr
  42a3a4:	subs	w8, w8, w0, uxtb
  42a3a8:	str	w8, [sp, #8]
  42a3ac:	ldr	w8, [sp, #8]
  42a3b0:	stur	w8, [x29, #-44]
  42a3b4:	ldur	w8, [x29, #-44]
  42a3b8:	stur	w8, [x29, #-4]
  42a3bc:	b	42a3c4 <seat_apply_acls+0x1e0>
  42a3c0:	stur	wzr, [x29, #-4]
  42a3c4:	ldur	w0, [x29, #-4]
  42a3c8:	ldp	x29, x30, [sp, #96]
  42a3cc:	add	sp, sp, #0x70
  42a3d0:	ret

000000000042a3d4 <seat_set_active>:
  42a3d4:	sub	sp, sp, #0x40
  42a3d8:	stp	x29, x30, [sp, #48]
  42a3dc:	add	x29, sp, #0x30
  42a3e0:	adrp	x8, 447000 <_fini+0x6c30>
  42a3e4:	add	x8, x8, #0xd5f
  42a3e8:	add	x8, x8, #0x3
  42a3ec:	stur	x0, [x29, #-16]
  42a3f0:	str	x1, [sp, #24]
  42a3f4:	str	x8, [sp, #8]
  42a3f8:	ldur	x8, [x29, #-16]
  42a3fc:	cmp	x8, #0x0
  42a400:	cset	w9, ne  // ne = any
  42a404:	mov	w10, #0x1                   	// #1
  42a408:	eor	w9, w9, #0x1
  42a40c:	eor	w9, w9, w10
  42a410:	eor	w9, w9, w10
  42a414:	and	w9, w9, #0x1
  42a418:	mov	w0, w9
  42a41c:	sxtw	x8, w0
  42a420:	cbz	x8, 42a448 <seat_set_active+0x74>
  42a424:	mov	w8, wzr
  42a428:	mov	w0, w8
  42a42c:	adrp	x1, 442000 <_fini+0x1c30>
  42a430:	add	x1, x1, #0xf2
  42a434:	ldr	x2, [sp, #8]
  42a438:	mov	w3, #0xe7                  	// #231
  42a43c:	adrp	x4, 447000 <_fini+0x6c30>
  42a440:	add	x4, x4, #0xf8f
  42a444:	bl	406c68 <log_assert_failed_realm@plt>
  42a448:	ldr	x8, [sp, #24]
  42a44c:	mov	w9, #0x1                   	// #1
  42a450:	str	w9, [sp, #4]
  42a454:	cbz	x8, 42a470 <seat_set_active+0x9c>
  42a458:	ldr	x8, [sp, #24]
  42a45c:	ldr	x8, [x8, #136]
  42a460:	ldur	x9, [x29, #-16]
  42a464:	cmp	x8, x9
  42a468:	cset	w10, eq  // eq = none
  42a46c:	str	w10, [sp, #4]
  42a470:	ldr	w8, [sp, #4]
  42a474:	mov	w9, #0x1                   	// #1
  42a478:	eor	w8, w8, #0x1
  42a47c:	eor	w8, w8, w9
  42a480:	eor	w8, w8, w9
  42a484:	and	w8, w8, #0x1
  42a488:	mov	w0, w8
  42a48c:	sxtw	x10, w0
  42a490:	cbz	x10, 42a4b8 <seat_set_active+0xe4>
  42a494:	mov	w8, wzr
  42a498:	mov	w0, w8
  42a49c:	adrp	x1, 447000 <_fini+0x6c30>
  42a4a0:	add	x1, x1, #0xfb6
  42a4a4:	ldr	x2, [sp, #8]
  42a4a8:	mov	w3, #0xe8                  	// #232
  42a4ac:	adrp	x4, 447000 <_fini+0x6c30>
  42a4b0:	add	x4, x4, #0xf8f
  42a4b4:	bl	406c68 <log_assert_failed_realm@plt>
  42a4b8:	ldr	x8, [sp, #24]
  42a4bc:	ldur	x9, [x29, #-16]
  42a4c0:	ldr	x9, [x9, #32]
  42a4c4:	cmp	x8, x9
  42a4c8:	b.ne	42a4d4 <seat_set_active+0x100>  // b.any
  42a4cc:	stur	wzr, [x29, #-4]
  42a4d0:	b	42a60c <seat_set_active+0x238>
  42a4d4:	ldur	x8, [x29, #-16]
  42a4d8:	ldr	x8, [x8, #32]
  42a4dc:	str	x8, [sp, #16]
  42a4e0:	ldr	x8, [sp, #24]
  42a4e4:	ldur	x9, [x29, #-16]
  42a4e8:	str	x8, [x9, #32]
  42a4ec:	ldr	x8, [sp, #16]
  42a4f0:	cbz	x8, 42a514 <seat_set_active+0x140>
  42a4f4:	ldr	x0, [sp, #16]
  42a4f8:	bl	431518 <session_device_pause_all>
  42a4fc:	ldr	x0, [sp, #16]
  42a500:	adrp	x1, 447000 <_fini+0x6c30>
  42a504:	add	x1, x1, #0xfd5
  42a508:	mov	x8, xzr
  42a50c:	mov	x2, x8
  42a510:	bl	42f4a0 <session_send_changed>
  42a514:	ldur	x0, [x29, #-16]
  42a518:	ldr	x1, [sp, #16]
  42a51c:	bl	42a1e4 <seat_apply_acls>
  42a520:	ldr	x8, [sp, #24]
  42a524:	cbz	x8, 42a568 <seat_set_active+0x194>
  42a528:	ldr	x8, [sp, #24]
  42a52c:	ldrb	w9, [x8, #209]
  42a530:	mov	w10, #0x1                   	// #1
  42a534:	lsr	w9, w9, w10
  42a538:	and	w9, w9, w10
  42a53c:	tbnz	w9, #0, 42a544 <seat_set_active+0x170>
  42a540:	b	42a568 <seat_set_active+0x194>
  42a544:	ldr	x0, [sp, #24]
  42a548:	adrp	x1, 447000 <_fini+0x6c30>
  42a54c:	add	x1, x1, #0xfd5
  42a550:	mov	x8, xzr
  42a554:	mov	x2, x8
  42a558:	bl	42f4a0 <session_send_changed>
  42a55c:	ldr	x8, [sp, #24]
  42a560:	mov	x0, x8
  42a564:	bl	430f80 <session_device_resume_all>
  42a568:	ldr	x8, [sp, #24]
  42a56c:	cbz	x8, 42a58c <seat_set_active+0x1b8>
  42a570:	ldr	x8, [sp, #24]
  42a574:	ldrb	w9, [x8, #209]
  42a578:	mov	w10, #0x1                   	// #1
  42a57c:	lsr	w9, w9, w10
  42a580:	and	w9, w9, w10
  42a584:	tbnz	w9, #0, 42a58c <seat_set_active+0x1b8>
  42a588:	b	42a5a4 <seat_set_active+0x1d0>
  42a58c:	ldur	x0, [x29, #-16]
  42a590:	adrp	x1, 447000 <_fini+0x6c30>
  42a594:	add	x1, x1, #0x830
  42a598:	mov	x8, xzr
  42a59c:	mov	x2, x8
  42a5a0:	bl	428aec <seat_send_changed>
  42a5a4:	ldur	x0, [x29, #-16]
  42a5a8:	bl	429674 <seat_save>
  42a5ac:	ldr	x8, [sp, #24]
  42a5b0:	cbz	x8, 42a5cc <seat_set_active+0x1f8>
  42a5b4:	ldr	x0, [sp, #24]
  42a5b8:	bl	432bf8 <session_save>
  42a5bc:	ldr	x8, [sp, #24]
  42a5c0:	ldr	x8, [x8, #40]
  42a5c4:	mov	x0, x8
  42a5c8:	bl	43a320 <user_save>
  42a5cc:	ldr	x8, [sp, #16]
  42a5d0:	cbz	x8, 42a608 <seat_set_active+0x234>
  42a5d4:	ldr	x0, [sp, #16]
  42a5d8:	bl	432bf8 <session_save>
  42a5dc:	ldr	x8, [sp, #24]
  42a5e0:	cbz	x8, 42a5fc <seat_set_active+0x228>
  42a5e4:	ldr	x8, [sp, #24]
  42a5e8:	ldr	x8, [x8, #40]
  42a5ec:	ldr	x9, [sp, #16]
  42a5f0:	ldr	x9, [x9, #40]
  42a5f4:	cmp	x8, x9
  42a5f8:	b.eq	42a608 <seat_set_active+0x234>  // b.none
  42a5fc:	ldr	x8, [sp, #16]
  42a600:	ldr	x0, [x8, #40]
  42a604:	bl	43a320 <user_save>
  42a608:	stur	wzr, [x29, #-4]
  42a60c:	ldur	w0, [x29, #-4]
  42a610:	ldp	x29, x30, [sp, #48]
  42a614:	add	sp, sp, #0x40
  42a618:	ret

000000000042a61c <seat_switch_to>:
  42a61c:	sub	sp, sp, #0x30
  42a620:	stp	x29, x30, [sp, #32]
  42a624:	add	x29, sp, #0x20
  42a628:	str	x0, [sp, #16]
  42a62c:	str	w1, [sp, #12]
  42a630:	ldr	w8, [sp, #12]
  42a634:	cbnz	w8, 42a644 <seat_switch_to+0x28>
  42a638:	mov	w8, #0xffffffea            	// #-22
  42a63c:	stur	w8, [x29, #-4]
  42a640:	b	42a6e0 <seat_switch_to+0xc4>
  42a644:	ldr	w8, [sp, #12]
  42a648:	mov	w9, w8
  42a64c:	ldr	x10, [sp, #16]
  42a650:	ldr	x10, [x10, #64]
  42a654:	cmp	x9, x10
  42a658:	b.cs	42a680 <seat_switch_to+0x64>  // b.hs, b.nlast
  42a65c:	ldr	x8, [sp, #16]
  42a660:	ldr	x8, [x8, #56]
  42a664:	ldr	w9, [sp, #12]
  42a668:	mov	w10, w9
  42a66c:	mov	x11, #0x8                   	// #8
  42a670:	mul	x10, x11, x10
  42a674:	add	x8, x8, x10
  42a678:	ldr	x8, [x8]
  42a67c:	cbnz	x8, 42a6b8 <seat_switch_to+0x9c>
  42a680:	ldr	x0, [sp, #16]
  42a684:	bl	429ff0 <seat_has_vts>
  42a688:	tbnz	w0, #0, 42a690 <seat_switch_to+0x74>
  42a68c:	b	42a6ac <seat_switch_to+0x90>
  42a690:	ldr	w8, [sp, #12]
  42a694:	cmp	w8, #0x40
  42a698:	b.cs	42a6ac <seat_switch_to+0x90>  // b.hs, b.nlast
  42a69c:	ldr	w0, [sp, #12]
  42a6a0:	bl	407ad8 <chvt@plt>
  42a6a4:	stur	w0, [x29, #-4]
  42a6a8:	b	42a6e0 <seat_switch_to+0xc4>
  42a6ac:	mov	w8, #0xffffffea            	// #-22
  42a6b0:	stur	w8, [x29, #-4]
  42a6b4:	b	42a6e0 <seat_switch_to+0xc4>
  42a6b8:	ldr	x8, [sp, #16]
  42a6bc:	ldr	x8, [x8, #56]
  42a6c0:	ldr	w9, [sp, #12]
  42a6c4:	mov	w10, w9
  42a6c8:	mov	x11, #0x8                   	// #8
  42a6cc:	mul	x10, x11, x10
  42a6d0:	add	x8, x8, x10
  42a6d4:	ldr	x0, [x8]
  42a6d8:	bl	434f00 <session_activate>
  42a6dc:	stur	w0, [x29, #-4]
  42a6e0:	ldur	w0, [x29, #-4]
  42a6e4:	ldp	x29, x30, [sp, #32]
  42a6e8:	add	sp, sp, #0x30
  42a6ec:	ret

000000000042a6f0 <seat_switch_to_next>:
  42a6f0:	sub	sp, sp, #0x30
  42a6f4:	stp	x29, x30, [sp, #32]
  42a6f8:	add	x29, sp, #0x20
  42a6fc:	str	x0, [sp, #16]
  42a700:	ldr	x8, [sp, #16]
  42a704:	ldr	x8, [x8, #64]
  42a708:	cbnz	x8, 42a718 <seat_switch_to_next+0x28>
  42a70c:	mov	w8, #0xffffffea            	// #-22
  42a710:	stur	w8, [x29, #-4]
  42a714:	b	42a858 <seat_switch_to_next+0x168>
  42a718:	mov	w8, #0x1                   	// #1
  42a71c:	str	w8, [sp, #12]
  42a720:	ldr	x9, [sp, #16]
  42a724:	ldr	x9, [x9, #32]
  42a728:	cbz	x9, 42a754 <seat_switch_to_next+0x64>
  42a72c:	ldr	x8, [sp, #16]
  42a730:	ldr	x8, [x8, #32]
  42a734:	ldr	w9, [x8, #16]
  42a738:	cmp	w9, #0x0
  42a73c:	cset	w9, ls  // ls = plast
  42a740:	tbnz	w9, #0, 42a754 <seat_switch_to_next+0x64>
  42a744:	ldr	x8, [sp, #16]
  42a748:	ldr	x8, [x8, #32]
  42a74c:	ldr	w9, [x8, #16]
  42a750:	str	w9, [sp, #12]
  42a754:	ldr	w8, [sp, #12]
  42a758:	add	w8, w8, #0x1
  42a75c:	str	w8, [sp, #8]
  42a760:	ldr	w8, [sp, #8]
  42a764:	mov	w9, w8
  42a768:	ldr	x10, [sp, #16]
  42a76c:	ldr	x10, [x10, #64]
  42a770:	cmp	x9, x10
  42a774:	b.cs	42a7d8 <seat_switch_to_next+0xe8>  // b.hs, b.nlast
  42a778:	ldr	x8, [sp, #16]
  42a77c:	ldr	x8, [x8, #56]
  42a780:	ldr	w9, [sp, #8]
  42a784:	mov	w10, w9
  42a788:	mov	x11, #0x8                   	// #8
  42a78c:	mul	x10, x11, x10
  42a790:	add	x8, x8, x10
  42a794:	ldr	x8, [x8]
  42a798:	cbz	x8, 42a7c8 <seat_switch_to_next+0xd8>
  42a79c:	ldr	x8, [sp, #16]
  42a7a0:	ldr	x8, [x8, #56]
  42a7a4:	ldr	w9, [sp, #8]
  42a7a8:	mov	w10, w9
  42a7ac:	mov	x11, #0x8                   	// #8
  42a7b0:	mul	x10, x11, x10
  42a7b4:	add	x8, x8, x10
  42a7b8:	ldr	x0, [x8]
  42a7bc:	bl	434f00 <session_activate>
  42a7c0:	stur	w0, [x29, #-4]
  42a7c4:	b	42a858 <seat_switch_to_next+0x168>
  42a7c8:	ldr	w8, [sp, #8]
  42a7cc:	add	w8, w8, #0x1
  42a7d0:	str	w8, [sp, #8]
  42a7d4:	b	42a760 <seat_switch_to_next+0x70>
  42a7d8:	mov	w8, #0x1                   	// #1
  42a7dc:	str	w8, [sp, #8]
  42a7e0:	ldr	w8, [sp, #8]
  42a7e4:	ldr	w9, [sp, #12]
  42a7e8:	cmp	w8, w9
  42a7ec:	b.cs	42a850 <seat_switch_to_next+0x160>  // b.hs, b.nlast
  42a7f0:	ldr	x8, [sp, #16]
  42a7f4:	ldr	x8, [x8, #56]
  42a7f8:	ldr	w9, [sp, #8]
  42a7fc:	mov	w10, w9
  42a800:	mov	x11, #0x8                   	// #8
  42a804:	mul	x10, x11, x10
  42a808:	add	x8, x8, x10
  42a80c:	ldr	x8, [x8]
  42a810:	cbz	x8, 42a840 <seat_switch_to_next+0x150>
  42a814:	ldr	x8, [sp, #16]
  42a818:	ldr	x8, [x8, #56]
  42a81c:	ldr	w9, [sp, #8]
  42a820:	mov	w10, w9
  42a824:	mov	x11, #0x8                   	// #8
  42a828:	mul	x10, x11, x10
  42a82c:	add	x8, x8, x10
  42a830:	ldr	x0, [x8]
  42a834:	bl	434f00 <session_activate>
  42a838:	stur	w0, [x29, #-4]
  42a83c:	b	42a858 <seat_switch_to_next+0x168>
  42a840:	ldr	w8, [sp, #8]
  42a844:	add	w8, w8, #0x1
  42a848:	str	w8, [sp, #8]
  42a84c:	b	42a7e0 <seat_switch_to_next+0xf0>
  42a850:	mov	w8, #0xffffffea            	// #-22
  42a854:	stur	w8, [x29, #-4]
  42a858:	ldur	w0, [x29, #-4]
  42a85c:	ldp	x29, x30, [sp, #32]
  42a860:	add	sp, sp, #0x30
  42a864:	ret

000000000042a868 <seat_switch_to_previous>:
  42a868:	sub	sp, sp, #0x30
  42a86c:	stp	x29, x30, [sp, #32]
  42a870:	add	x29, sp, #0x20
  42a874:	str	x0, [sp, #16]
  42a878:	ldr	x8, [sp, #16]
  42a87c:	ldr	x8, [x8, #64]
  42a880:	cbnz	x8, 42a890 <seat_switch_to_previous+0x28>
  42a884:	mov	w8, #0xffffffea            	// #-22
  42a888:	stur	w8, [x29, #-4]
  42a88c:	b	42a9d0 <seat_switch_to_previous+0x168>
  42a890:	mov	w8, #0x1                   	// #1
  42a894:	str	w8, [sp, #12]
  42a898:	ldr	x9, [sp, #16]
  42a89c:	ldr	x9, [x9, #32]
  42a8a0:	cbz	x9, 42a8cc <seat_switch_to_previous+0x64>
  42a8a4:	ldr	x8, [sp, #16]
  42a8a8:	ldr	x8, [x8, #32]
  42a8ac:	ldr	w9, [x8, #16]
  42a8b0:	cmp	w9, #0x0
  42a8b4:	cset	w9, ls  // ls = plast
  42a8b8:	tbnz	w9, #0, 42a8cc <seat_switch_to_previous+0x64>
  42a8bc:	ldr	x8, [sp, #16]
  42a8c0:	ldr	x8, [x8, #32]
  42a8c4:	ldr	w9, [x8, #16]
  42a8c8:	str	w9, [sp, #12]
  42a8cc:	ldr	w8, [sp, #12]
  42a8d0:	subs	w8, w8, #0x1
  42a8d4:	str	w8, [sp, #8]
  42a8d8:	ldr	w8, [sp, #8]
  42a8dc:	cmp	w8, #0x0
  42a8e0:	cset	w8, ls  // ls = plast
  42a8e4:	tbnz	w8, #0, 42a948 <seat_switch_to_previous+0xe0>
  42a8e8:	ldr	x8, [sp, #16]
  42a8ec:	ldr	x8, [x8, #56]
  42a8f0:	ldr	w9, [sp, #8]
  42a8f4:	mov	w10, w9
  42a8f8:	mov	x11, #0x8                   	// #8
  42a8fc:	mul	x10, x11, x10
  42a900:	add	x8, x8, x10
  42a904:	ldr	x8, [x8]
  42a908:	cbz	x8, 42a938 <seat_switch_to_previous+0xd0>
  42a90c:	ldr	x8, [sp, #16]
  42a910:	ldr	x8, [x8, #56]
  42a914:	ldr	w9, [sp, #8]
  42a918:	mov	w10, w9
  42a91c:	mov	x11, #0x8                   	// #8
  42a920:	mul	x10, x11, x10
  42a924:	add	x8, x8, x10
  42a928:	ldr	x0, [x8]
  42a92c:	bl	434f00 <session_activate>
  42a930:	stur	w0, [x29, #-4]
  42a934:	b	42a9d0 <seat_switch_to_previous+0x168>
  42a938:	ldr	w8, [sp, #8]
  42a93c:	subs	w8, w8, #0x1
  42a940:	str	w8, [sp, #8]
  42a944:	b	42a8d8 <seat_switch_to_previous+0x70>
  42a948:	ldr	x8, [sp, #16]
  42a94c:	ldr	x8, [x8, #64]
  42a950:	subs	x8, x8, #0x1
  42a954:	str	w8, [sp, #8]
  42a958:	ldr	w8, [sp, #8]
  42a95c:	ldr	w9, [sp, #12]
  42a960:	cmp	w8, w9
  42a964:	b.ls	42a9c8 <seat_switch_to_previous+0x160>  // b.plast
  42a968:	ldr	x8, [sp, #16]
  42a96c:	ldr	x8, [x8, #56]
  42a970:	ldr	w9, [sp, #8]
  42a974:	mov	w10, w9
  42a978:	mov	x11, #0x8                   	// #8
  42a97c:	mul	x10, x11, x10
  42a980:	add	x8, x8, x10
  42a984:	ldr	x8, [x8]
  42a988:	cbz	x8, 42a9b8 <seat_switch_to_previous+0x150>
  42a98c:	ldr	x8, [sp, #16]
  42a990:	ldr	x8, [x8, #56]
  42a994:	ldr	w9, [sp, #8]
  42a998:	mov	w10, w9
  42a99c:	mov	x11, #0x8                   	// #8
  42a9a0:	mul	x10, x11, x10
  42a9a4:	add	x8, x8, x10
  42a9a8:	ldr	x0, [x8]
  42a9ac:	bl	434f00 <session_activate>
  42a9b0:	stur	w0, [x29, #-4]
  42a9b4:	b	42a9d0 <seat_switch_to_previous+0x168>
  42a9b8:	ldr	w8, [sp, #8]
  42a9bc:	subs	w8, w8, #0x1
  42a9c0:	str	w8, [sp, #8]
  42a9c4:	b	42a958 <seat_switch_to_previous+0xf0>
  42a9c8:	mov	w8, #0xffffffea            	// #-22
  42a9cc:	stur	w8, [x29, #-4]
  42a9d0:	ldur	w0, [x29, #-4]
  42a9d4:	ldp	x29, x30, [sp, #32]
  42a9d8:	add	sp, sp, #0x30
  42a9dc:	ret

000000000042a9e0 <seat_active_vt_changed>:
  42a9e0:	sub	sp, sp, #0x60
  42a9e4:	stp	x29, x30, [sp, #80]
  42a9e8:	add	x29, sp, #0x50
  42a9ec:	mov	x8, xzr
  42a9f0:	adrp	x9, 447000 <_fini+0x6c30>
  42a9f4:	add	x9, x9, #0xd5f
  42a9f8:	add	x9, x9, #0x3
  42a9fc:	stur	x0, [x29, #-16]
  42aa00:	stur	w1, [x29, #-20]
  42aa04:	str	x8, [sp, #40]
  42aa08:	str	x9, [sp, #8]
  42aa0c:	ldur	x8, [x29, #-16]
  42aa10:	cmp	x8, #0x0
  42aa14:	cset	w9, ne  // ne = any
  42aa18:	mov	w10, #0x1                   	// #1
  42aa1c:	eor	w9, w9, #0x1
  42aa20:	eor	w9, w9, w10
  42aa24:	eor	w9, w9, w10
  42aa28:	and	w9, w9, #0x1
  42aa2c:	mov	w0, w9
  42aa30:	sxtw	x8, w0
  42aa34:	cbz	x8, 42aa5c <seat_active_vt_changed+0x7c>
  42aa38:	mov	w8, wzr
  42aa3c:	mov	w0, w8
  42aa40:	adrp	x1, 442000 <_fini+0x1c30>
  42aa44:	add	x1, x1, #0xf2
  42aa48:	ldr	x2, [sp, #8]
  42aa4c:	mov	w3, #0x14e                 	// #334
  42aa50:	adrp	x4, 447000 <_fini+0x6c30>
  42aa54:	add	x4, x4, #0xfdc
  42aa58:	bl	406c68 <log_assert_failed_realm@plt>
  42aa5c:	ldur	w8, [x29, #-20]
  42aa60:	cmp	w8, #0x1
  42aa64:	cset	w8, cs  // cs = hs, nlast
  42aa68:	mov	w9, #0x1                   	// #1
  42aa6c:	eor	w8, w8, #0x1
  42aa70:	eor	w8, w8, w9
  42aa74:	eor	w8, w8, w9
  42aa78:	and	w8, w8, #0x1
  42aa7c:	mov	w0, w8
  42aa80:	sxtw	x10, w0
  42aa84:	cbz	x10, 42aaac <seat_active_vt_changed+0xcc>
  42aa88:	mov	w8, wzr
  42aa8c:	mov	w0, w8
  42aa90:	adrp	x1, 442000 <_fini+0x1c30>
  42aa94:	add	x1, x1, #0x958
  42aa98:	ldr	x2, [sp, #8]
  42aa9c:	mov	w3, #0x14f                 	// #335
  42aaa0:	adrp	x4, 447000 <_fini+0x6c30>
  42aaa4:	add	x4, x4, #0xfdc
  42aaa8:	bl	406c68 <log_assert_failed_realm@plt>
  42aaac:	ldur	x0, [x29, #-16]
  42aab0:	bl	429ff0 <seat_has_vts>
  42aab4:	tbnz	w0, #0, 42aac4 <seat_active_vt_changed+0xe4>
  42aab8:	mov	w8, #0xffffffea            	// #-22
  42aabc:	stur	w8, [x29, #-4]
  42aac0:	b	42ac10 <seat_active_vt_changed+0x230>
  42aac4:	mov	w8, #0x7                   	// #7
  42aac8:	str	w8, [sp, #32]
  42aacc:	str	wzr, [sp, #28]
  42aad0:	str	wzr, [sp, #24]
  42aad4:	ldr	w0, [sp, #24]
  42aad8:	bl	406c08 <log_get_max_level_realm@plt>
  42aadc:	ldr	w8, [sp, #32]
  42aae0:	and	w8, w8, #0x7
  42aae4:	cmp	w0, w8
  42aae8:	b.lt	42ab24 <seat_active_vt_changed+0x144>  // b.tstop
  42aaec:	ldr	w8, [sp, #24]
  42aaf0:	ldr	w9, [sp, #32]
  42aaf4:	orr	w0, w9, w8, lsl #10
  42aaf8:	ldr	w1, [sp, #28]
  42aafc:	ldur	w6, [x29, #-20]
  42ab00:	ldr	x2, [sp, #8]
  42ab04:	mov	w3, #0x154                 	// #340
  42ab08:	adrp	x4, 448000 <_fini+0x7c30>
  42ab0c:	add	x4, x4, #0xd
  42ab10:	adrp	x5, 448000 <_fini+0x7c30>
  42ab14:	add	x5, x5, #0x24
  42ab18:	bl	406c18 <log_internal_realm@plt>
  42ab1c:	str	w0, [sp, #4]
  42ab20:	b	42ab38 <seat_active_vt_changed+0x158>
  42ab24:	ldr	w0, [sp, #28]
  42ab28:	bl	406c28 <abs@plt>
  42ab2c:	mov	w8, wzr
  42ab30:	subs	w8, w8, w0, uxtb
  42ab34:	str	w8, [sp, #4]
  42ab38:	ldr	w8, [sp, #4]
  42ab3c:	str	w8, [sp, #20]
  42ab40:	ldur	x9, [x29, #-16]
  42ab44:	ldr	x9, [x9, #48]
  42ab48:	stur	x9, [x29, #-32]
  42ab4c:	ldur	x8, [x29, #-32]
  42ab50:	cbz	x8, 42ab9c <seat_active_vt_changed+0x1bc>
  42ab54:	ldur	x8, [x29, #-32]
  42ab58:	ldr	w9, [x8, #144]
  42ab5c:	ldur	w10, [x29, #-20]
  42ab60:	cmp	w9, w10
  42ab64:	b.ne	42ab8c <seat_active_vt_changed+0x1ac>  // b.any
  42ab68:	ldur	x8, [x29, #-32]
  42ab6c:	ldrb	w9, [x8, #209]
  42ab70:	mov	w10, #0x2                   	// #2
  42ab74:	lsr	w9, w9, w10
  42ab78:	and	w9, w9, #0x1
  42ab7c:	tbnz	w9, #0, 42ab8c <seat_active_vt_changed+0x1ac>
  42ab80:	ldur	x8, [x29, #-32]
  42ab84:	str	x8, [sp, #40]
  42ab88:	b	42ab9c <seat_active_vt_changed+0x1bc>
  42ab8c:	ldur	x8, [x29, #-32]
  42ab90:	ldr	x8, [x8, #272]
  42ab94:	stur	x8, [x29, #-32]
  42ab98:	b	42ab4c <seat_active_vt_changed+0x16c>
  42ab9c:	ldr	x8, [sp, #40]
  42aba0:	cbnz	x8, 42abe8 <seat_active_vt_changed+0x208>
  42aba4:	ldur	x8, [x29, #-16]
  42aba8:	ldr	x8, [x8, #48]
  42abac:	stur	x8, [x29, #-32]
  42abb0:	ldur	x8, [x29, #-32]
  42abb4:	cbz	x8, 42abe8 <seat_active_vt_changed+0x208>
  42abb8:	ldur	x8, [x29, #-32]
  42abbc:	ldr	w9, [x8, #144]
  42abc0:	ldur	w10, [x29, #-20]
  42abc4:	cmp	w9, w10
  42abc8:	b.ne	42abd8 <seat_active_vt_changed+0x1f8>  // b.any
  42abcc:	ldur	x8, [x29, #-32]
  42abd0:	str	x8, [sp, #40]
  42abd4:	b	42abe8 <seat_active_vt_changed+0x208>
  42abd8:	ldur	x8, [x29, #-32]
  42abdc:	ldr	x8, [x8, #272]
  42abe0:	stur	x8, [x29, #-32]
  42abe4:	b	42abb0 <seat_active_vt_changed+0x1d0>
  42abe8:	ldur	x0, [x29, #-16]
  42abec:	ldr	x1, [sp, #40]
  42abf0:	bl	42a3d4 <seat_set_active>
  42abf4:	str	w0, [sp, #36]
  42abf8:	ldur	x8, [x29, #-16]
  42abfc:	ldr	x0, [x8]
  42ac00:	ldur	w1, [x29, #-20]
  42ac04:	bl	412e4c <manager_spawn_autovt>
  42ac08:	ldr	w9, [sp, #36]
  42ac0c:	stur	w9, [x29, #-4]
  42ac10:	ldur	w0, [x29, #-4]
  42ac14:	ldp	x29, x30, [sp, #80]
  42ac18:	add	sp, sp, #0x60
  42ac1c:	ret

000000000042ac20 <seat_read_active_vt>:
  42ac20:	sub	sp, sp, #0xe0
  42ac24:	stp	x29, x30, [sp, #208]
  42ac28:	add	x29, sp, #0xd0
  42ac2c:	adrp	x8, 447000 <_fini+0x6c30>
  42ac30:	add	x8, x8, #0xd5f
  42ac34:	add	x8, x8, #0x3
  42ac38:	adrp	x9, 448000 <_fini+0x7c30>
  42ac3c:	add	x9, x9, #0x55
  42ac40:	stur	x0, [x29, #-16]
  42ac44:	str	x8, [sp, #56]
  42ac48:	str	x9, [sp, #48]
  42ac4c:	ldur	x8, [x29, #-16]
  42ac50:	cmp	x8, #0x0
  42ac54:	cset	w9, ne  // ne = any
  42ac58:	mov	w10, #0x1                   	// #1
  42ac5c:	eor	w9, w9, #0x1
  42ac60:	eor	w9, w9, w10
  42ac64:	eor	w9, w9, w10
  42ac68:	and	w9, w9, #0x1
  42ac6c:	mov	w0, w9
  42ac70:	sxtw	x8, w0
  42ac74:	cbz	x8, 42ac9c <seat_read_active_vt+0x7c>
  42ac78:	mov	w8, wzr
  42ac7c:	mov	w0, w8
  42ac80:	adrp	x1, 442000 <_fini+0x1c30>
  42ac84:	add	x1, x1, #0xf2
  42ac88:	ldr	x2, [sp, #56]
  42ac8c:	mov	w3, #0x173                 	// #371
  42ac90:	adrp	x4, 448000 <_fini+0x7c30>
  42ac94:	add	x4, x4, #0x35
  42ac98:	bl	406c68 <log_assert_failed_realm@plt>
  42ac9c:	ldur	x0, [x29, #-16]
  42aca0:	bl	429ff0 <seat_has_vts>
  42aca4:	tbnz	w0, #0, 42acb0 <seat_read_active_vt+0x90>
  42aca8:	stur	wzr, [x29, #-4]
  42acac:	b	42af5c <seat_read_active_vt+0x33c>
  42acb0:	ldur	x8, [x29, #-16]
  42acb4:	ldr	x8, [x8]
  42acb8:	ldr	w0, [x8, #152]
  42acbc:	mov	x8, xzr
  42acc0:	mov	x1, x8
  42acc4:	mov	w9, wzr
  42acc8:	mov	w2, w9
  42accc:	bl	407ae8 <lseek64@plt>
  42acd0:	cmp	x0, #0x0
  42acd4:	cset	w9, ge  // ge = tcont
  42acd8:	tbnz	w9, #0, 42ad64 <seat_read_active_vt+0x144>
  42acdc:	mov	w8, #0x3                   	// #3
  42ace0:	stur	w8, [x29, #-96]
  42ace4:	bl	406e08 <__errno_location@plt>
  42ace8:	ldr	w8, [x0]
  42acec:	stur	w8, [x29, #-100]
  42acf0:	str	wzr, [sp, #104]
  42acf4:	ldr	w0, [sp, #104]
  42acf8:	bl	406c08 <log_get_max_level_realm@plt>
  42acfc:	ldur	w8, [x29, #-96]
  42ad00:	and	w8, w8, #0x7
  42ad04:	cmp	w0, w8
  42ad08:	b.lt	42ad3c <seat_read_active_vt+0x11c>  // b.tstop
  42ad0c:	ldr	w8, [sp, #104]
  42ad10:	ldur	w9, [x29, #-96]
  42ad14:	orr	w0, w9, w8, lsl #10
  42ad18:	ldur	w1, [x29, #-100]
  42ad1c:	ldr	x2, [sp, #56]
  42ad20:	mov	w3, #0x179                 	// #377
  42ad24:	ldr	x4, [sp, #48]
  42ad28:	adrp	x5, 448000 <_fini+0x7c30>
  42ad2c:	add	x5, x5, #0x69
  42ad30:	bl	406c18 <log_internal_realm@plt>
  42ad34:	str	w0, [sp, #44]
  42ad38:	b	42ad50 <seat_read_active_vt+0x130>
  42ad3c:	ldur	w0, [x29, #-100]
  42ad40:	bl	406c28 <abs@plt>
  42ad44:	mov	w8, wzr
  42ad48:	subs	w8, w8, w0, uxtb
  42ad4c:	str	w8, [sp, #44]
  42ad50:	ldr	w8, [sp, #44]
  42ad54:	str	w8, [sp, #100]
  42ad58:	ldr	w8, [sp, #100]
  42ad5c:	stur	w8, [x29, #-4]
  42ad60:	b	42af5c <seat_read_active_vt+0x33c>
  42ad64:	ldur	x8, [x29, #-16]
  42ad68:	ldr	x8, [x8]
  42ad6c:	ldr	w0, [x8, #152]
  42ad70:	sub	x1, x29, #0x50
  42ad74:	mov	x2, #0x3f                  	// #63
  42ad78:	bl	407278 <read@plt>
  42ad7c:	stur	x0, [x29, #-88]
  42ad80:	ldur	x8, [x29, #-88]
  42ad84:	cmp	x8, #0x0
  42ad88:	cset	w9, gt
  42ad8c:	tbnz	w9, #0, 42ae88 <seat_read_active_vt+0x268>
  42ad90:	mov	w8, #0x3                   	// #3
  42ad94:	str	w8, [sp, #96]
  42ad98:	str	wzr, [sp, #92]
  42ad9c:	str	wzr, [sp, #88]
  42ada0:	ldr	w0, [sp, #88]
  42ada4:	bl	406c08 <log_get_max_level_realm@plt>
  42ada8:	ldr	w8, [sp, #96]
  42adac:	and	w8, w8, #0x7
  42adb0:	cmp	w0, w8
  42adb4:	b.lt	42ae30 <seat_read_active_vt+0x210>  // b.tstop
  42adb8:	ldr	w8, [sp, #88]
  42adbc:	ldr	w9, [sp, #96]
  42adc0:	orr	w0, w9, w8, lsl #10
  42adc4:	ldr	w1, [sp, #92]
  42adc8:	ldur	x10, [x29, #-88]
  42adcc:	cmp	x10, #0x0
  42add0:	cset	w8, ge  // ge = tcont
  42add4:	str	w0, [sp, #40]
  42add8:	str	w1, [sp, #36]
  42addc:	tbnz	w8, #0, 42adf4 <seat_read_active_vt+0x1d4>
  42ade0:	bl	406e08 <__errno_location@plt>
  42ade4:	ldr	w0, [x0]
  42ade8:	bl	42af6c <strerror_safe>
  42adec:	str	x0, [sp, #24]
  42adf0:	b	42ae00 <seat_read_active_vt+0x1e0>
  42adf4:	adrp	x8, 448000 <_fini+0x7c30>
  42adf8:	add	x8, x8, #0xb2
  42adfc:	str	x8, [sp, #24]
  42ae00:	ldr	x8, [sp, #24]
  42ae04:	ldr	w0, [sp, #40]
  42ae08:	ldr	w1, [sp, #36]
  42ae0c:	ldr	x2, [sp, #56]
  42ae10:	mov	w3, #0x17d                 	// #381
  42ae14:	ldr	x4, [sp, #48]
  42ae18:	adrp	x5, 448000 <_fini+0x7c30>
  42ae1c:	add	x5, x5, #0x8f
  42ae20:	mov	x6, x8
  42ae24:	bl	406c18 <log_internal_realm@plt>
  42ae28:	str	w0, [sp, #20]
  42ae2c:	b	42ae44 <seat_read_active_vt+0x224>
  42ae30:	ldr	w0, [sp, #92]
  42ae34:	bl	406c28 <abs@plt>
  42ae38:	mov	w8, wzr
  42ae3c:	subs	w8, w8, w0, uxtb
  42ae40:	str	w8, [sp, #20]
  42ae44:	ldr	w8, [sp, #20]
  42ae48:	str	w8, [sp, #84]
  42ae4c:	ldur	x9, [x29, #-88]
  42ae50:	cmp	x9, #0x0
  42ae54:	cset	w8, ge  // ge = tcont
  42ae58:	tbnz	w8, #0, 42ae74 <seat_read_active_vt+0x254>
  42ae5c:	bl	406e08 <__errno_location@plt>
  42ae60:	ldr	w8, [x0]
  42ae64:	mov	w9, wzr
  42ae68:	subs	w8, w9, w8
  42ae6c:	str	w8, [sp, #16]
  42ae70:	b	42ae7c <seat_read_active_vt+0x25c>
  42ae74:	mov	w8, #0xfffffffb            	// #-5
  42ae78:	str	w8, [sp, #16]
  42ae7c:	ldr	w8, [sp, #16]
  42ae80:	stur	w8, [x29, #-4]
  42ae84:	b	42af5c <seat_read_active_vt+0x33c>
  42ae88:	ldur	x8, [x29, #-88]
  42ae8c:	sub	x9, x29, #0x50
  42ae90:	add	x8, x9, x8
  42ae94:	mov	w10, #0x0                   	// #0
  42ae98:	strb	w10, [x8]
  42ae9c:	mov	x0, x9
  42aea0:	str	x9, [sp, #8]
  42aea4:	bl	407af8 <truncate_nl@plt>
  42aea8:	ldr	x8, [sp, #8]
  42aeac:	mov	x0, x8
  42aeb0:	bl	407608 <vtnr_from_tty@plt>
  42aeb4:	stur	w0, [x29, #-92]
  42aeb8:	ldur	w10, [x29, #-92]
  42aebc:	cmp	w10, #0x0
  42aec0:	cset	w10, ge  // ge = tcont
  42aec4:	tbnz	w10, #0, 42af4c <seat_read_active_vt+0x32c>
  42aec8:	mov	w8, #0x3                   	// #3
  42aecc:	str	w8, [sp, #80]
  42aed0:	ldur	w8, [x29, #-92]
  42aed4:	str	w8, [sp, #76]
  42aed8:	str	wzr, [sp, #72]
  42aedc:	ldr	w0, [sp, #72]
  42aee0:	bl	406c08 <log_get_max_level_realm@plt>
  42aee4:	ldr	w8, [sp, #80]
  42aee8:	and	w8, w8, #0x7
  42aeec:	cmp	w0, w8
  42aef0:	b.lt	42af24 <seat_read_active_vt+0x304>  // b.tstop
  42aef4:	ldr	w8, [sp, #72]
  42aef8:	ldr	w9, [sp, #80]
  42aefc:	orr	w0, w9, w8, lsl #10
  42af00:	ldr	w1, [sp, #76]
  42af04:	ldr	x2, [sp, #56]
  42af08:	mov	w3, #0x186                 	// #390
  42af0c:	ldr	x4, [sp, #48]
  42af10:	adrp	x5, 448000 <_fini+0x7c30>
  42af14:	add	x5, x5, #0xb6
  42af18:	bl	406c18 <log_internal_realm@plt>
  42af1c:	str	w0, [sp, #4]
  42af20:	b	42af38 <seat_read_active_vt+0x318>
  42af24:	ldr	w0, [sp, #76]
  42af28:	bl	406c28 <abs@plt>
  42af2c:	mov	w8, wzr
  42af30:	subs	w8, w8, w0, uxtb
  42af34:	str	w8, [sp, #4]
  42af38:	ldr	w8, [sp, #4]
  42af3c:	str	w8, [sp, #68]
  42af40:	mov	w8, #0xfffffffb            	// #-5
  42af44:	stur	w8, [x29, #-4]
  42af48:	b	42af5c <seat_read_active_vt+0x33c>
  42af4c:	ldur	x0, [x29, #-16]
  42af50:	ldur	w1, [x29, #-92]
  42af54:	bl	42a9e0 <seat_active_vt_changed>
  42af58:	stur	w0, [x29, #-4]
  42af5c:	ldur	w0, [x29, #-4]
  42af60:	ldp	x29, x30, [sp, #208]
  42af64:	add	sp, sp, #0xe0
  42af68:	ret

000000000042af6c <strerror_safe>:
  42af6c:	sub	sp, sp, #0x20
  42af70:	stp	x29, x30, [sp, #16]
  42af74:	add	x29, sp, #0x10
  42af78:	stur	w0, [x29, #-4]
  42af7c:	ldur	w0, [x29, #-4]
  42af80:	bl	406c28 <abs@plt>
  42af84:	bl	407b08 <strerror@plt>
  42af88:	ldp	x29, x30, [sp, #16]
  42af8c:	add	sp, sp, #0x20
  42af90:	ret

000000000042af94 <seat_start>:
  42af94:	sub	sp, sp, #0x40
  42af98:	stp	x29, x30, [sp, #48]
  42af9c:	add	x29, sp, #0x30
  42afa0:	adrp	x8, 447000 <_fini+0x6c30>
  42afa4:	add	x8, x8, #0xd5f
  42afa8:	add	x8, x8, #0x3
  42afac:	stur	x0, [x29, #-16]
  42afb0:	str	x8, [sp, #24]
  42afb4:	ldur	x8, [x29, #-16]
  42afb8:	cmp	x8, #0x0
  42afbc:	cset	w9, ne  // ne = any
  42afc0:	mov	w10, #0x1                   	// #1
  42afc4:	eor	w9, w9, #0x1
  42afc8:	eor	w9, w9, w10
  42afcc:	eor	w9, w9, w10
  42afd0:	and	w9, w9, #0x1
  42afd4:	mov	w0, w9
  42afd8:	sxtw	x8, w0
  42afdc:	cbz	x8, 42b004 <seat_start+0x70>
  42afe0:	mov	w8, wzr
  42afe4:	mov	w0, w8
  42afe8:	adrp	x1, 442000 <_fini+0x1c30>
  42afec:	add	x1, x1, #0xf2
  42aff0:	ldr	x2, [sp, #24]
  42aff4:	mov	w3, #0x18e                 	// #398
  42aff8:	adrp	x4, 448000 <_fini+0x7c30>
  42affc:	add	x4, x4, #0xec
  42b000:	bl	406c68 <log_assert_failed_realm@plt>
  42b004:	ldur	x8, [x29, #-16]
  42b008:	ldrb	w9, [x8, #72]
  42b00c:	mov	w10, #0x1                   	// #1
  42b010:	lsr	w9, w9, w10
  42b014:	and	w9, w9, w10
  42b018:	tbnz	w9, #0, 42b020 <seat_start+0x8c>
  42b01c:	b	42b028 <seat_start+0x94>
  42b020:	stur	wzr, [x29, #-4]
  42b024:	b	42b0dc <seat_start+0x148>
  42b028:	ldur	x8, [x29, #-16]
  42b02c:	ldr	x7, [x8, #8]
  42b030:	ldur	x8, [x29, #-16]
  42b034:	ldr	x8, [x8, #8]
  42b038:	mov	w0, #0x6                   	// #6
  42b03c:	mov	w9, wzr
  42b040:	mov	w1, w9
  42b044:	ldr	x2, [sp, #24]
  42b048:	mov	w3, #0x196                 	// #406
  42b04c:	adrp	x4, 448000 <_fini+0x7c30>
  42b050:	add	x4, x4, #0x103
  42b054:	adrp	x5, 448000 <_fini+0x7c30>
  42b058:	add	x5, x5, #0x10e
  42b05c:	adrp	x6, 448000 <_fini+0x7c30>
  42b060:	add	x6, x6, #0x13a
  42b064:	mov	x10, sp
  42b068:	adrp	x11, 448000 <_fini+0x7c30>
  42b06c:	add	x11, x11, #0x145
  42b070:	str	x11, [x10]
  42b074:	mov	x10, sp
  42b078:	str	x8, [x10, #8]
  42b07c:	mov	x8, sp
  42b080:	mov	x10, xzr
  42b084:	str	x10, [x8, #16]
  42b088:	bl	407288 <log_struct_internal@plt>
  42b08c:	ldur	x8, [x29, #-16]
  42b090:	mov	x0, x8
  42b094:	bl	429d90 <seat_preallocate_vts>
  42b098:	ldur	x8, [x29, #-16]
  42b09c:	mov	x0, x8
  42b0a0:	bl	42ac20 <seat_read_active_vt>
  42b0a4:	ldur	x8, [x29, #-16]
  42b0a8:	ldrb	w9, [x8, #72]
  42b0ac:	and	w9, w9, #0xfffffffd
  42b0b0:	orr	w9, w9, #0x2
  42b0b4:	strb	w9, [x8, #72]
  42b0b8:	ldur	x8, [x29, #-16]
  42b0bc:	mov	x0, x8
  42b0c0:	bl	429674 <seat_save>
  42b0c4:	ldur	x8, [x29, #-16]
  42b0c8:	mov	x0, x8
  42b0cc:	mov	w9, #0x1                   	// #1
  42b0d0:	and	w1, w9, #0x1
  42b0d4:	bl	4289cc <seat_send_signal>
  42b0d8:	stur	wzr, [x29, #-4]
  42b0dc:	ldur	w0, [x29, #-4]
  42b0e0:	ldp	x29, x30, [sp, #48]
  42b0e4:	add	sp, sp, #0x40
  42b0e8:	ret

000000000042b0ec <seat_stop>:
  42b0ec:	sub	sp, sp, #0x50
  42b0f0:	stp	x29, x30, [sp, #64]
  42b0f4:	add	x29, sp, #0x40
  42b0f8:	adrp	x8, 447000 <_fini+0x6c30>
  42b0fc:	add	x8, x8, #0xd5f
  42b100:	add	x8, x8, #0x3
  42b104:	stur	x0, [x29, #-8]
  42b108:	and	w9, w1, #0x1
  42b10c:	sturb	w9, [x29, #-9]
  42b110:	stur	x8, [x29, #-24]
  42b114:	ldur	x8, [x29, #-8]
  42b118:	cmp	x8, #0x0
  42b11c:	cset	w9, ne  // ne = any
  42b120:	mov	w10, #0x1                   	// #1
  42b124:	eor	w9, w9, #0x1
  42b128:	eor	w9, w9, w10
  42b12c:	eor	w9, w9, w10
  42b130:	and	w9, w9, #0x1
  42b134:	mov	w0, w9
  42b138:	sxtw	x8, w0
  42b13c:	cbz	x8, 42b164 <seat_stop+0x78>
  42b140:	mov	w8, wzr
  42b144:	mov	w0, w8
  42b148:	adrp	x1, 442000 <_fini+0x1c30>
  42b14c:	add	x1, x1, #0xf2
  42b150:	ldur	x2, [x29, #-24]
  42b154:	mov	w3, #0x1ab                 	// #427
  42b158:	adrp	x4, 448000 <_fini+0x7c30>
  42b15c:	add	x4, x4, #0x15a
  42b160:	bl	406c68 <log_assert_failed_realm@plt>
  42b164:	ldur	x8, [x29, #-8]
  42b168:	ldrb	w9, [x8, #72]
  42b16c:	mov	w10, #0x1                   	// #1
  42b170:	lsr	w9, w9, w10
  42b174:	and	w9, w9, w10
  42b178:	tbnz	w9, #0, 42b180 <seat_stop+0x94>
  42b17c:	b	42b1e4 <seat_stop+0xf8>
  42b180:	ldur	x8, [x29, #-8]
  42b184:	ldr	x7, [x8, #8]
  42b188:	ldur	x8, [x29, #-8]
  42b18c:	ldr	x8, [x8, #8]
  42b190:	mov	w0, #0x6                   	// #6
  42b194:	mov	w9, wzr
  42b198:	mov	w1, w9
  42b19c:	ldur	x2, [x29, #-24]
  42b1a0:	mov	w3, #0x1b1                 	// #433
  42b1a4:	adrp	x4, 448000 <_fini+0x7c30>
  42b1a8:	add	x4, x4, #0x177
  42b1ac:	adrp	x5, 448000 <_fini+0x7c30>
  42b1b0:	add	x5, x5, #0x181
  42b1b4:	adrp	x6, 448000 <_fini+0x7c30>
  42b1b8:	add	x6, x6, #0x13a
  42b1bc:	mov	x10, sp
  42b1c0:	adrp	x11, 448000 <_fini+0x7c30>
  42b1c4:	add	x11, x11, #0x1ad
  42b1c8:	str	x11, [x10]
  42b1cc:	mov	x10, sp
  42b1d0:	str	x8, [x10, #8]
  42b1d4:	mov	x8, sp
  42b1d8:	mov	x10, xzr
  42b1dc:	str	x10, [x8, #16]
  42b1e0:	bl	407288 <log_struct_internal@plt>
  42b1e4:	ldur	x0, [x29, #-8]
  42b1e8:	ldurb	w8, [x29, #-9]
  42b1ec:	mov	w9, #0x1                   	// #1
  42b1f0:	and	w1, w8, #0x1
  42b1f4:	stur	w9, [x29, #-28]
  42b1f8:	bl	42b264 <seat_stop_sessions>
  42b1fc:	stur	w0, [x29, #-16]
  42b200:	ldur	x10, [x29, #-8]
  42b204:	ldr	x0, [x10, #16]
  42b208:	bl	4076e8 <unlink@plt>
  42b20c:	ldur	x10, [x29, #-8]
  42b210:	mov	x0, x10
  42b214:	bl	42b340 <seat_add_to_gc_queue>
  42b218:	ldur	x10, [x29, #-8]
  42b21c:	ldrb	w8, [x10, #72]
  42b220:	ldur	w9, [x29, #-28]
  42b224:	lsr	w8, w8, w9
  42b228:	and	w8, w8, w9
  42b22c:	tbnz	w8, #0, 42b234 <seat_stop+0x148>
  42b230:	b	42b244 <seat_stop+0x158>
  42b234:	ldur	x0, [x29, #-8]
  42b238:	mov	w8, wzr
  42b23c:	and	w1, w8, #0x1
  42b240:	bl	4289cc <seat_send_signal>
  42b244:	ldur	x8, [x29, #-8]
  42b248:	ldrb	w9, [x8, #72]
  42b24c:	and	w9, w9, #0xfffffffd
  42b250:	strb	w9, [x8, #72]
  42b254:	ldur	w0, [x29, #-16]
  42b258:	ldp	x29, x30, [sp, #64]
  42b25c:	add	sp, sp, #0x50
  42b260:	ret

000000000042b264 <seat_stop_sessions>:
  42b264:	sub	sp, sp, #0x40
  42b268:	stp	x29, x30, [sp, #48]
  42b26c:	add	x29, sp, #0x30
  42b270:	adrp	x8, 447000 <_fini+0x6c30>
  42b274:	add	x8, x8, #0xd5f
  42b278:	add	x2, x8, #0x3
  42b27c:	stur	x0, [x29, #-8]
  42b280:	and	w9, w1, #0x1
  42b284:	sturb	w9, [x29, #-9]
  42b288:	str	wzr, [sp, #20]
  42b28c:	str	x2, [sp, #8]
  42b290:	ldur	x8, [x29, #-8]
  42b294:	cmp	x8, #0x0
  42b298:	cset	w9, ne  // ne = any
  42b29c:	mov	w10, #0x1                   	// #1
  42b2a0:	eor	w9, w9, #0x1
  42b2a4:	eor	w9, w9, w10
  42b2a8:	eor	w9, w9, w10
  42b2ac:	and	w9, w9, #0x1
  42b2b0:	mov	w0, w9
  42b2b4:	sxtw	x8, w0
  42b2b8:	cbz	x8, 42b2e0 <seat_stop_sessions+0x7c>
  42b2bc:	mov	w8, wzr
  42b2c0:	mov	w0, w8
  42b2c4:	adrp	x1, 442000 <_fini+0x1c30>
  42b2c8:	add	x1, x1, #0xf2
  42b2cc:	ldr	x2, [sp, #8]
  42b2d0:	mov	w3, #0x1c4                 	// #452
  42b2d4:	adrp	x4, 448000 <_fini+0x7c30>
  42b2d8:	add	x4, x4, #0x1c6
  42b2dc:	bl	406c68 <log_assert_failed_realm@plt>
  42b2e0:	ldur	x8, [x29, #-8]
  42b2e4:	ldr	x8, [x8, #48]
  42b2e8:	str	x8, [sp, #24]
  42b2ec:	ldr	x8, [sp, #24]
  42b2f0:	cbz	x8, 42b330 <seat_stop_sessions+0xcc>
  42b2f4:	ldr	x0, [sp, #24]
  42b2f8:	ldurb	w8, [x29, #-9]
  42b2fc:	and	w1, w8, #0x1
  42b300:	bl	4359b4 <session_stop>
  42b304:	str	w0, [sp, #16]
  42b308:	ldr	w8, [sp, #16]
  42b30c:	cmp	w8, #0x0
  42b310:	cset	w8, ge  // ge = tcont
  42b314:	tbnz	w8, #0, 42b320 <seat_stop_sessions+0xbc>
  42b318:	ldr	w8, [sp, #16]
  42b31c:	str	w8, [sp, #20]
  42b320:	ldr	x8, [sp, #24]
  42b324:	ldr	x8, [x8, #272]
  42b328:	str	x8, [sp, #24]
  42b32c:	b	42b2ec <seat_stop_sessions+0x88>
  42b330:	ldr	w0, [sp, #20]
  42b334:	ldp	x29, x30, [sp, #48]
  42b338:	add	sp, sp, #0x40
  42b33c:	ret

000000000042b340 <seat_add_to_gc_queue>:
  42b340:	sub	sp, sp, #0x30
  42b344:	stp	x29, x30, [sp, #32]
  42b348:	add	x29, sp, #0x20
  42b34c:	adrp	x8, 447000 <_fini+0x6c30>
  42b350:	add	x8, x8, #0xd5f
  42b354:	add	x8, x8, #0x3
  42b358:	stur	x0, [x29, #-8]
  42b35c:	str	x8, [sp]
  42b360:	ldur	x8, [x29, #-8]
  42b364:	cmp	x8, #0x0
  42b368:	cset	w9, ne  // ne = any
  42b36c:	mov	w10, #0x1                   	// #1
  42b370:	eor	w9, w9, #0x1
  42b374:	eor	w9, w9, w10
  42b378:	eor	w9, w9, w10
  42b37c:	and	w9, w9, #0x1
  42b380:	mov	w0, w9
  42b384:	sxtw	x8, w0
  42b388:	cbz	x8, 42b3b0 <seat_add_to_gc_queue+0x70>
  42b38c:	mov	w8, wzr
  42b390:	mov	w0, w8
  42b394:	adrp	x1, 442000 <_fini+0x1c30>
  42b398:	add	x1, x1, #0xf2
  42b39c:	ldr	x2, [sp]
  42b3a0:	mov	w3, #0x27b                 	// #635
  42b3a4:	adrp	x4, 448000 <_fini+0x7c30>
  42b3a8:	add	x4, x4, #0x357
  42b3ac:	bl	406c68 <log_assert_failed_realm@plt>
  42b3b0:	ldur	x8, [x29, #-8]
  42b3b4:	ldrb	w9, [x8, #72]
  42b3b8:	and	w9, w9, #0x1
  42b3bc:	tbnz	w9, #0, 42b3c4 <seat_add_to_gc_queue+0x84>
  42b3c0:	b	42b3c8 <seat_add_to_gc_queue+0x88>
  42b3c4:	b	42b480 <seat_add_to_gc_queue+0x140>
  42b3c8:	ldur	x8, [x29, #-8]
  42b3cc:	ldr	x8, [x8]
  42b3d0:	add	x8, x8, #0x50
  42b3d4:	str	x8, [sp, #16]
  42b3d8:	ldur	x8, [x29, #-8]
  42b3dc:	str	x8, [sp, #8]
  42b3e0:	ldr	x8, [sp, #8]
  42b3e4:	cmp	x8, #0x0
  42b3e8:	cset	w9, ne  // ne = any
  42b3ec:	mov	w10, #0x1                   	// #1
  42b3f0:	eor	w9, w9, #0x1
  42b3f4:	eor	w9, w9, w10
  42b3f8:	eor	w9, w9, w10
  42b3fc:	and	w9, w9, #0x1
  42b400:	mov	w0, w9
  42b404:	sxtw	x8, w0
  42b408:	cbz	x8, 42b430 <seat_add_to_gc_queue+0xf0>
  42b40c:	mov	w8, wzr
  42b410:	mov	w0, w8
  42b414:	adrp	x1, 441000 <_fini+0xc30>
  42b418:	add	x1, x1, #0x6cc
  42b41c:	ldr	x2, [sp]
  42b420:	mov	w3, #0x280                 	// #640
  42b424:	adrp	x4, 448000 <_fini+0x7c30>
  42b428:	add	x4, x4, #0x357
  42b42c:	bl	406c68 <log_assert_failed_realm@plt>
  42b430:	ldr	x8, [sp, #16]
  42b434:	ldr	x8, [x8]
  42b438:	ldr	x9, [sp, #8]
  42b43c:	str	x8, [x9, #80]
  42b440:	cbz	x8, 42b454 <seat_add_to_gc_queue+0x114>
  42b444:	ldr	x8, [sp, #8]
  42b448:	ldr	x9, [sp, #8]
  42b44c:	ldr	x9, [x9, #80]
  42b450:	str	x8, [x9, #88]
  42b454:	ldr	x8, [sp, #8]
  42b458:	mov	x9, xzr
  42b45c:	str	x9, [x8, #88]
  42b460:	ldr	x8, [sp, #8]
  42b464:	ldr	x9, [sp, #16]
  42b468:	str	x8, [x9]
  42b46c:	ldur	x8, [x29, #-8]
  42b470:	ldrb	w9, [x8, #72]
  42b474:	and	w9, w9, #0xfffffffe
  42b478:	orr	w9, w9, #0x1
  42b47c:	strb	w9, [x8, #72]
  42b480:	ldp	x29, x30, [sp, #32]
  42b484:	add	sp, sp, #0x30
  42b488:	ret

000000000042b48c <seat_evict_position>:
  42b48c:	sub	sp, sp, #0x30
  42b490:	stp	x29, x30, [sp, #32]
  42b494:	add	x29, sp, #0x20
  42b498:	stur	x0, [x29, #-8]
  42b49c:	str	x1, [sp, #16]
  42b4a0:	ldr	x8, [sp, #16]
  42b4a4:	ldr	w9, [x8, #16]
  42b4a8:	str	w9, [sp, #4]
  42b4ac:	ldr	x8, [sp, #16]
  42b4b0:	str	wzr, [x8, #16]
  42b4b4:	ldr	w9, [sp, #4]
  42b4b8:	cbnz	w9, 42b4c0 <seat_evict_position+0x34>
  42b4bc:	b	42b598 <seat_evict_position+0x10c>
  42b4c0:	ldr	w8, [sp, #4]
  42b4c4:	mov	w9, w8
  42b4c8:	ldur	x10, [x29, #-8]
  42b4cc:	ldr	x10, [x10, #64]
  42b4d0:	cmp	x9, x10
  42b4d4:	b.cs	42b598 <seat_evict_position+0x10c>  // b.hs, b.nlast
  42b4d8:	ldur	x8, [x29, #-8]
  42b4dc:	ldr	x8, [x8, #56]
  42b4e0:	ldr	w9, [sp, #4]
  42b4e4:	mov	w10, w9
  42b4e8:	mov	x11, #0x8                   	// #8
  42b4ec:	mul	x10, x11, x10
  42b4f0:	add	x8, x8, x10
  42b4f4:	ldr	x8, [x8]
  42b4f8:	ldr	x10, [sp, #16]
  42b4fc:	cmp	x8, x10
  42b500:	b.ne	42b598 <seat_evict_position+0x10c>  // b.any
  42b504:	ldur	x8, [x29, #-8]
  42b508:	ldr	x8, [x8, #56]
  42b50c:	ldr	w9, [sp, #4]
  42b510:	mov	w10, w9
  42b514:	mov	x11, #0x8                   	// #8
  42b518:	mul	x10, x11, x10
  42b51c:	add	x8, x8, x10
  42b520:	mov	x10, xzr
  42b524:	str	x10, [x8]
  42b528:	ldur	x8, [x29, #-8]
  42b52c:	ldr	x8, [x8, #48]
  42b530:	str	x8, [sp, #8]
  42b534:	ldr	x8, [sp, #8]
  42b538:	cbz	x8, 42b598 <seat_evict_position+0x10c>
  42b53c:	ldr	x8, [sp, #8]
  42b540:	ldr	w9, [x8, #16]
  42b544:	ldr	w10, [sp, #4]
  42b548:	cmp	w9, w10
  42b54c:	b.ne	42b588 <seat_evict_position+0xfc>  // b.any
  42b550:	ldr	x0, [sp, #8]
  42b554:	bl	433524 <session_get_state>
  42b558:	cmp	w0, #0x3
  42b55c:	b.eq	42b588 <seat_evict_position+0xfc>  // b.none
  42b560:	ldr	x8, [sp, #8]
  42b564:	ldur	x9, [x29, #-8]
  42b568:	ldr	x9, [x9, #56]
  42b56c:	ldr	w10, [sp, #4]
  42b570:	mov	w11, w10
  42b574:	mov	x12, #0x8                   	// #8
  42b578:	mul	x11, x12, x11
  42b57c:	add	x9, x9, x11
  42b580:	str	x8, [x9]
  42b584:	b	42b598 <seat_evict_position+0x10c>
  42b588:	ldr	x8, [sp, #8]
  42b58c:	ldr	x8, [x8, #272]
  42b590:	str	x8, [sp, #8]
  42b594:	b	42b534 <seat_evict_position+0xa8>
  42b598:	ldp	x29, x30, [sp, #32]
  42b59c:	add	sp, sp, #0x30
  42b5a0:	ret

000000000042b5a4 <seat_claim_position>:
  42b5a4:	sub	sp, sp, #0x30
  42b5a8:	stp	x29, x30, [sp, #32]
  42b5ac:	add	x29, sp, #0x20
  42b5b0:	stur	x0, [x29, #-8]
  42b5b4:	str	x1, [sp, #16]
  42b5b8:	str	w2, [sp, #12]
  42b5bc:	ldur	x0, [x29, #-8]
  42b5c0:	bl	429ff0 <seat_has_vts>
  42b5c4:	tbnz	w0, #0, 42b5cc <seat_claim_position+0x28>
  42b5c8:	b	42b5d8 <seat_claim_position+0x34>
  42b5cc:	ldr	x8, [sp, #16]
  42b5d0:	ldr	w9, [x8, #144]
  42b5d4:	str	w9, [sp, #12]
  42b5d8:	ldur	x8, [x29, #-8]
  42b5dc:	add	x0, x8, #0x38
  42b5e0:	ldur	x8, [x29, #-8]
  42b5e4:	add	x1, x8, #0x40
  42b5e8:	ldr	w9, [sp, #12]
  42b5ec:	add	w9, w9, #0x1
  42b5f0:	mov	w8, w9
  42b5f4:	ubfx	x2, x8, #0, #32
  42b5f8:	mov	x3, #0x8                   	// #8
  42b5fc:	bl	407b18 <greedy_realloc0@plt>
  42b600:	cbnz	x0, 42b608 <seat_claim_position+0x64>
  42b604:	b	42b654 <seat_claim_position+0xb0>
  42b608:	ldur	x0, [x29, #-8]
  42b60c:	ldr	x1, [sp, #16]
  42b610:	bl	42b48c <seat_evict_position>
  42b614:	ldr	w8, [sp, #12]
  42b618:	ldr	x9, [sp, #16]
  42b61c:	str	w8, [x9, #16]
  42b620:	ldr	w8, [sp, #12]
  42b624:	cmp	w8, #0x0
  42b628:	cset	w8, ls  // ls = plast
  42b62c:	tbnz	w8, #0, 42b654 <seat_claim_position+0xb0>
  42b630:	ldr	x8, [sp, #16]
  42b634:	ldur	x9, [x29, #-8]
  42b638:	ldr	x9, [x9, #56]
  42b63c:	ldr	w10, [sp, #12]
  42b640:	mov	w11, w10
  42b644:	mov	x12, #0x8                   	// #8
  42b648:	mul	x11, x12, x11
  42b64c:	add	x9, x9, x11
  42b650:	str	x8, [x9]
  42b654:	ldp	x29, x30, [sp, #32]
  42b658:	add	sp, sp, #0x30
  42b65c:	ret

000000000042b660 <seat_attach_session>:
  42b660:	sub	sp, sp, #0x50
  42b664:	stp	x29, x30, [sp, #64]
  42b668:	add	x29, sp, #0x40
  42b66c:	adrp	x8, 447000 <_fini+0x6c30>
  42b670:	add	x8, x8, #0xd5f
  42b674:	add	x8, x8, #0x3
  42b678:	adrp	x9, 448000 <_fini+0x7c30>
  42b67c:	add	x9, x9, #0x1ec
  42b680:	stur	x0, [x29, #-16]
  42b684:	stur	x1, [x29, #-24]
  42b688:	str	x8, [sp, #16]
  42b68c:	str	x9, [sp, #8]
  42b690:	ldur	x8, [x29, #-16]
  42b694:	cmp	x8, #0x0
  42b698:	cset	w9, ne  // ne = any
  42b69c:	mov	w10, #0x1                   	// #1
  42b6a0:	eor	w9, w9, #0x1
  42b6a4:	eor	w9, w9, w10
  42b6a8:	eor	w9, w9, w10
  42b6ac:	and	w9, w9, #0x1
  42b6b0:	mov	w0, w9
  42b6b4:	sxtw	x8, w0
  42b6b8:	cbz	x8, 42b6dc <seat_attach_session+0x7c>
  42b6bc:	mov	w8, wzr
  42b6c0:	mov	w0, w8
  42b6c4:	adrp	x1, 442000 <_fini+0x1c30>
  42b6c8:	add	x1, x1, #0xf2
  42b6cc:	ldr	x2, [sp, #16]
  42b6d0:	mov	w3, #0x204                 	// #516
  42b6d4:	ldr	x4, [sp, #8]
  42b6d8:	bl	406c68 <log_assert_failed_realm@plt>
  42b6dc:	ldur	x8, [x29, #-24]
  42b6e0:	cmp	x8, #0x0
  42b6e4:	cset	w9, ne  // ne = any
  42b6e8:	mov	w10, #0x1                   	// #1
  42b6ec:	eor	w9, w9, #0x1
  42b6f0:	eor	w9, w9, w10
  42b6f4:	eor	w9, w9, w10
  42b6f8:	and	w9, w9, #0x1
  42b6fc:	mov	w0, w9
  42b700:	sxtw	x8, w0
  42b704:	cbz	x8, 42b728 <seat_attach_session+0xc8>
  42b708:	mov	w8, wzr
  42b70c:	mov	w0, w8
  42b710:	adrp	x1, 441000 <_fini+0xc30>
  42b714:	add	x1, x1, #0x5cb
  42b718:	ldr	x2, [sp, #16]
  42b71c:	mov	w3, #0x205                 	// #517
  42b720:	ldr	x4, [sp, #8]
  42b724:	bl	406c68 <log_assert_failed_realm@plt>
  42b728:	ldur	x8, [x29, #-24]
  42b72c:	ldr	x8, [x8, #136]
  42b730:	cmp	x8, #0x0
  42b734:	cset	w9, ne  // ne = any
  42b738:	mov	w10, #0x1                   	// #1
  42b73c:	eor	w9, w9, #0x1
  42b740:	eor	w9, w9, w10
  42b744:	eor	w9, w9, w10
  42b748:	eor	w9, w9, w10
  42b74c:	and	w9, w9, #0x1
  42b750:	mov	w0, w9
  42b754:	sxtw	x8, w0
  42b758:	cbz	x8, 42b77c <seat_attach_session+0x11c>
  42b75c:	mov	w8, wzr
  42b760:	mov	w0, w8
  42b764:	adrp	x1, 448000 <_fini+0x7c30>
  42b768:	add	x1, x1, #0x217
  42b76c:	ldr	x2, [sp, #16]
  42b770:	mov	w3, #0x206                 	// #518
  42b774:	ldr	x4, [sp, #8]
  42b778:	bl	406c68 <log_assert_failed_realm@plt>
  42b77c:	ldur	x0, [x29, #-16]
  42b780:	bl	429ff0 <seat_has_vts>
  42b784:	mov	w8, #0x1                   	// #1
  42b788:	eor	w9, w0, #0x1
  42b78c:	and	w9, w9, #0x1
  42b790:	ldur	x10, [x29, #-24]
  42b794:	ldr	w11, [x10, #144]
  42b798:	cmp	w11, #0x0
  42b79c:	cset	w11, ne  // ne = any
  42b7a0:	eor	w8, w11, w8
  42b7a4:	and	w8, w8, #0x1
  42b7a8:	cmp	w9, w8
  42b7ac:	b.eq	42b7bc <seat_attach_session+0x15c>  // b.none
  42b7b0:	mov	w8, #0xffffffea            	// #-22
  42b7b4:	stur	w8, [x29, #-4]
  42b7b8:	b	42b88c <seat_attach_session+0x22c>
  42b7bc:	ldur	x8, [x29, #-16]
  42b7c0:	ldur	x9, [x29, #-24]
  42b7c4:	str	x8, [x9, #136]
  42b7c8:	ldur	x8, [x29, #-16]
  42b7cc:	add	x8, x8, #0x30
  42b7d0:	str	x8, [sp, #32]
  42b7d4:	ldur	x8, [x29, #-24]
  42b7d8:	str	x8, [sp, #24]
  42b7dc:	ldr	x8, [sp, #24]
  42b7e0:	cmp	x8, #0x0
  42b7e4:	cset	w9, ne  // ne = any
  42b7e8:	mov	w10, #0x1                   	// #1
  42b7ec:	eor	w9, w9, #0x1
  42b7f0:	eor	w9, w9, w10
  42b7f4:	eor	w9, w9, w10
  42b7f8:	and	w9, w9, #0x1
  42b7fc:	mov	w0, w9
  42b800:	sxtw	x8, w0
  42b804:	cbz	x8, 42b828 <seat_attach_session+0x1c8>
  42b808:	mov	w8, wzr
  42b80c:	mov	w0, w8
  42b810:	adrp	x1, 441000 <_fini+0xc30>
  42b814:	add	x1, x1, #0x6cc
  42b818:	ldr	x2, [sp, #16]
  42b81c:	mov	w3, #0x20c                 	// #524
  42b820:	ldr	x4, [sp, #8]
  42b824:	bl	406c68 <log_assert_failed_realm@plt>
  42b828:	ldr	x8, [sp, #32]
  42b82c:	ldr	x8, [x8]
  42b830:	ldr	x9, [sp, #24]
  42b834:	str	x8, [x9, #272]
  42b838:	cbz	x8, 42b84c <seat_attach_session+0x1ec>
  42b83c:	ldr	x8, [sp, #24]
  42b840:	ldr	x9, [sp, #24]
  42b844:	ldr	x9, [x9, #272]
  42b848:	str	x8, [x9, #280]
  42b84c:	ldr	x8, [sp, #24]
  42b850:	mov	x9, xzr
  42b854:	str	x9, [x8, #280]
  42b858:	ldr	x8, [sp, #24]
  42b85c:	ldr	x9, [sp, #32]
  42b860:	str	x8, [x9]
  42b864:	ldur	x0, [x29, #-16]
  42b868:	ldur	x1, [x29, #-24]
  42b86c:	bl	42b89c <seat_assign_position>
  42b870:	ldur	x0, [x29, #-16]
  42b874:	bl	429ff0 <seat_has_vts>
  42b878:	tbnz	w0, #0, 42b888 <seat_attach_session+0x228>
  42b87c:	ldur	x0, [x29, #-16]
  42b880:	ldur	x1, [x29, #-24]
  42b884:	bl	42a3d4 <seat_set_active>
  42b888:	stur	wzr, [x29, #-4]
  42b88c:	ldur	w0, [x29, #-4]
  42b890:	ldp	x29, x30, [sp, #64]
  42b894:	add	sp, sp, #0x50
  42b898:	ret

000000000042b89c <seat_assign_position>:
  42b89c:	sub	sp, sp, #0x30
  42b8a0:	stp	x29, x30, [sp, #32]
  42b8a4:	add	x29, sp, #0x20
  42b8a8:	stur	x0, [x29, #-8]
  42b8ac:	str	x1, [sp, #16]
  42b8b0:	ldr	x8, [sp, #16]
  42b8b4:	ldr	w9, [x8, #16]
  42b8b8:	cmp	w9, #0x0
  42b8bc:	cset	w9, ls  // ls = plast
  42b8c0:	tbnz	w9, #0, 42b8c8 <seat_assign_position+0x2c>
  42b8c4:	b	42b930 <seat_assign_position+0x94>
  42b8c8:	mov	w8, #0x1                   	// #1
  42b8cc:	str	w8, [sp, #12]
  42b8d0:	ldr	w8, [sp, #12]
  42b8d4:	mov	w9, w8
  42b8d8:	ldur	x10, [x29, #-8]
  42b8dc:	ldr	x10, [x10, #64]
  42b8e0:	cmp	x9, x10
  42b8e4:	b.cs	42b920 <seat_assign_position+0x84>  // b.hs, b.nlast
  42b8e8:	ldur	x8, [x29, #-8]
  42b8ec:	ldr	x8, [x8, #56]
  42b8f0:	ldr	w9, [sp, #12]
  42b8f4:	mov	w10, w9
  42b8f8:	mov	x11, #0x8                   	// #8
  42b8fc:	mul	x10, x11, x10
  42b900:	add	x8, x8, x10
  42b904:	ldr	x8, [x8]
  42b908:	cbnz	x8, 42b910 <seat_assign_position+0x74>
  42b90c:	b	42b920 <seat_assign_position+0x84>
  42b910:	ldr	w8, [sp, #12]
  42b914:	add	w8, w8, #0x1
  42b918:	str	w8, [sp, #12]
  42b91c:	b	42b8d0 <seat_assign_position+0x34>
  42b920:	ldur	x0, [x29, #-8]
  42b924:	ldr	x1, [sp, #16]
  42b928:	ldr	w2, [sp, #12]
  42b92c:	bl	42b5a4 <seat_claim_position>
  42b930:	ldp	x29, x30, [sp, #32]
  42b934:	add	sp, sp, #0x30
  42b938:	ret

000000000042b93c <seat_complete_switch>:
  42b93c:	sub	sp, sp, #0x40
  42b940:	stp	x29, x30, [sp, #48]
  42b944:	add	x29, sp, #0x30
  42b948:	adrp	x8, 447000 <_fini+0x6c30>
  42b94c:	add	x8, x8, #0xd5f
  42b950:	add	x2, x8, #0x3
  42b954:	stur	x0, [x29, #-8]
  42b958:	str	x2, [sp, #8]
  42b95c:	ldur	x8, [x29, #-8]
  42b960:	cmp	x8, #0x0
  42b964:	cset	w9, ne  // ne = any
  42b968:	mov	w10, #0x1                   	// #1
  42b96c:	eor	w9, w9, #0x1
  42b970:	eor	w9, w9, w10
  42b974:	eor	w9, w9, w10
  42b978:	and	w9, w9, #0x1
  42b97c:	mov	w0, w9
  42b980:	sxtw	x8, w0
  42b984:	cbz	x8, 42b9ac <seat_complete_switch+0x70>
  42b988:	mov	w8, wzr
  42b98c:	mov	w0, w8
  42b990:	adrp	x1, 442000 <_fini+0x1c30>
  42b994:	add	x1, x1, #0xf2
  42b998:	ldr	x2, [sp, #8]
  42b99c:	mov	w3, #0x21a                 	// #538
  42b9a0:	adrp	x4, 448000 <_fini+0x7c30>
  42b9a4:	add	x4, x4, #0x226
  42b9a8:	bl	406c68 <log_assert_failed_realm@plt>
  42b9ac:	ldur	x8, [x29, #-8]
  42b9b0:	ldr	x8, [x8, #40]
  42b9b4:	cbnz	x8, 42b9bc <seat_complete_switch+0x80>
  42b9b8:	b	42b9f0 <seat_complete_switch+0xb4>
  42b9bc:	ldur	x8, [x29, #-8]
  42b9c0:	ldr	x8, [x8, #40]
  42b9c4:	str	x8, [sp, #24]
  42b9c8:	ldur	x8, [x29, #-8]
  42b9cc:	mov	x9, xzr
  42b9d0:	str	x9, [x8, #40]
  42b9d4:	ldr	x8, [sp, #24]
  42b9d8:	str	x8, [sp, #16]
  42b9dc:	ldr	x8, [sp, #16]
  42b9e0:	stur	x8, [x29, #-16]
  42b9e4:	ldur	x0, [x29, #-8]
  42b9e8:	ldur	x1, [x29, #-16]
  42b9ec:	bl	42a3d4 <seat_set_active>
  42b9f0:	ldp	x29, x30, [sp, #48]
  42b9f4:	add	sp, sp, #0x40
  42b9f8:	ret

000000000042b9fc <seat_has_master_device>:
  42b9fc:	sub	sp, sp, #0x30
  42ba00:	stp	x29, x30, [sp, #32]
  42ba04:	add	x29, sp, #0x20
  42ba08:	adrp	x8, 447000 <_fini+0x6c30>
  42ba0c:	add	x8, x8, #0xd5f
  42ba10:	add	x2, x8, #0x3
  42ba14:	stur	x0, [x29, #-8]
  42ba18:	str	x2, [sp, #16]
  42ba1c:	ldur	x8, [x29, #-8]
  42ba20:	cmp	x8, #0x0
  42ba24:	cset	w9, ne  // ne = any
  42ba28:	mov	w10, #0x1                   	// #1
  42ba2c:	eor	w9, w9, #0x1
  42ba30:	eor	w9, w9, w10
  42ba34:	eor	w9, w9, w10
  42ba38:	and	w9, w9, #0x1
  42ba3c:	mov	w0, w9
  42ba40:	sxtw	x8, w0
  42ba44:	cbz	x8, 42ba6c <seat_has_master_device+0x70>
  42ba48:	mov	w8, wzr
  42ba4c:	mov	w0, w8
  42ba50:	adrp	x1, 442000 <_fini+0x1c30>
  42ba54:	add	x1, x1, #0xf2
  42ba58:	ldr	x2, [sp, #16]
  42ba5c:	mov	w3, #0x23e                 	// #574
  42ba60:	adrp	x4, 448000 <_fini+0x7c30>
  42ba64:	add	x4, x4, #0x2bf
  42ba68:	bl	406c68 <log_assert_failed_realm@plt>
  42ba6c:	ldur	x8, [x29, #-8]
  42ba70:	ldr	x8, [x8, #24]
  42ba74:	mov	w9, #0x0                   	// #0
  42ba78:	str	w9, [sp, #12]
  42ba7c:	cbz	x8, 42ba90 <seat_has_master_device+0x94>
  42ba80:	ldur	x8, [x29, #-8]
  42ba84:	ldr	x8, [x8, #24]
  42ba88:	ldrb	w9, [x8, #24]
  42ba8c:	str	w9, [sp, #12]
  42ba90:	ldr	w8, [sp, #12]
  42ba94:	and	w0, w8, #0x1
  42ba98:	ldp	x29, x30, [sp, #32]
  42ba9c:	add	sp, sp, #0x30
  42baa0:	ret

000000000042baa4 <seat_get_idle_hint>:
  42baa4:	sub	sp, sp, #0x70
  42baa8:	stp	x29, x30, [sp, #96]
  42baac:	add	x29, sp, #0x60
  42bab0:	mov	w8, #0x1                   	// #1
  42bab4:	adrp	x9, 447000 <_fini+0x6c30>
  42bab8:	add	x9, x9, #0xd5f
  42babc:	add	x2, x9, #0x3
  42bac0:	stur	x0, [x29, #-16]
  42bac4:	stur	x1, [x29, #-24]
  42bac8:	sturb	w8, [x29, #-33]
  42bacc:	str	xzr, [sp, #32]
  42bad0:	str	xzr, [sp, #40]
  42bad4:	str	x2, [sp]
  42bad8:	ldur	x8, [x29, #-16]
  42badc:	cmp	x8, #0x0
  42bae0:	cset	w9, ne  // ne = any
  42bae4:	mov	w10, #0x1                   	// #1
  42bae8:	eor	w9, w9, #0x1
  42baec:	eor	w9, w9, w10
  42baf0:	eor	w9, w9, w10
  42baf4:	and	w9, w9, #0x1
  42baf8:	mov	w0, w9
  42bafc:	sxtw	x8, w0
  42bb00:	cbz	x8, 42bb28 <seat_get_idle_hint+0x84>
  42bb04:	mov	w8, wzr
  42bb08:	mov	w0, w8
  42bb0c:	adrp	x1, 442000 <_fini+0x1c30>
  42bb10:	add	x1, x1, #0xf2
  42bb14:	ldr	x2, [sp]
  42bb18:	mov	w3, #0x24f                 	// #591
  42bb1c:	adrp	x4, 448000 <_fini+0x7c30>
  42bb20:	add	x4, x4, #0x305
  42bb24:	bl	406c68 <log_assert_failed_realm@plt>
  42bb28:	ldur	x8, [x29, #-16]
  42bb2c:	ldr	x8, [x8, #48]
  42bb30:	stur	x8, [x29, #-32]
  42bb34:	ldur	x8, [x29, #-32]
  42bb38:	cbz	x8, 42bbdc <seat_get_idle_hint+0x138>
  42bb3c:	ldur	x0, [x29, #-32]
  42bb40:	add	x1, sp, #0x10
  42bb44:	bl	4366ac <session_get_idle_hint>
  42bb48:	str	w0, [sp, #12]
  42bb4c:	ldr	w8, [sp, #12]
  42bb50:	cmp	w8, #0x0
  42bb54:	cset	w8, ge  // ge = tcont
  42bb58:	tbnz	w8, #0, 42bb68 <seat_get_idle_hint+0xc4>
  42bb5c:	ldr	w8, [sp, #12]
  42bb60:	stur	w8, [x29, #-4]
  42bb64:	b	42bbfc <seat_get_idle_hint+0x158>
  42bb68:	ldr	w8, [sp, #12]
  42bb6c:	cbnz	w8, 42bba8 <seat_get_idle_hint+0x104>
  42bb70:	ldurb	w8, [x29, #-33]
  42bb74:	tbnz	w8, #0, 42bb94 <seat_get_idle_hint+0xf0>
  42bb78:	ldr	x8, [sp, #24]
  42bb7c:	ldr	x9, [sp, #40]
  42bb80:	cmp	x8, x9
  42bb84:	b.ls	42bb90 <seat_get_idle_hint+0xec>  // b.plast
  42bb88:	ldr	q0, [sp, #16]
  42bb8c:	str	q0, [sp, #32]
  42bb90:	b	42bba4 <seat_get_idle_hint+0x100>
  42bb94:	mov	w8, #0x0                   	// #0
  42bb98:	sturb	w8, [x29, #-33]
  42bb9c:	ldr	q0, [sp, #16]
  42bba0:	str	q0, [sp, #32]
  42bba4:	b	42bbcc <seat_get_idle_hint+0x128>
  42bba8:	ldurb	w8, [x29, #-33]
  42bbac:	tbnz	w8, #0, 42bbb4 <seat_get_idle_hint+0x110>
  42bbb0:	b	42bbcc <seat_get_idle_hint+0x128>
  42bbb4:	ldr	x8, [sp, #24]
  42bbb8:	ldr	x9, [sp, #40]
  42bbbc:	cmp	x8, x9
  42bbc0:	b.ls	42bbcc <seat_get_idle_hint+0x128>  // b.plast
  42bbc4:	ldr	q0, [sp, #16]
  42bbc8:	str	q0, [sp, #32]
  42bbcc:	ldur	x8, [x29, #-32]
  42bbd0:	ldr	x8, [x8, #272]
  42bbd4:	stur	x8, [x29, #-32]
  42bbd8:	b	42bb34 <seat_get_idle_hint+0x90>
  42bbdc:	ldur	x8, [x29, #-24]
  42bbe0:	cbz	x8, 42bbf0 <seat_get_idle_hint+0x14c>
  42bbe4:	ldur	x8, [x29, #-24]
  42bbe8:	ldr	q0, [sp, #32]
  42bbec:	str	q0, [x8]
  42bbf0:	ldurb	w8, [x29, #-33]
  42bbf4:	and	w8, w8, #0x1
  42bbf8:	stur	w8, [x29, #-4]
  42bbfc:	ldur	w0, [x29, #-4]
  42bc00:	ldp	x29, x30, [sp, #96]
  42bc04:	add	sp, sp, #0x70
  42bc08:	ret

000000000042bc0c <seat_may_gc>:
  42bc0c:	sub	sp, sp, #0x30
  42bc10:	stp	x29, x30, [sp, #32]
  42bc14:	add	x29, sp, #0x20
  42bc18:	adrp	x8, 447000 <_fini+0x6c30>
  42bc1c:	add	x8, x8, #0xd5f
  42bc20:	add	x2, x8, #0x3
  42bc24:	str	x0, [sp, #16]
  42bc28:	and	w9, w1, #0x1
  42bc2c:	strb	w9, [sp, #15]
  42bc30:	str	x2, [sp]
  42bc34:	ldr	x8, [sp, #16]
  42bc38:	cmp	x8, #0x0
  42bc3c:	cset	w9, ne  // ne = any
  42bc40:	mov	w10, #0x1                   	// #1
  42bc44:	eor	w9, w9, #0x1
  42bc48:	eor	w9, w9, w10
  42bc4c:	eor	w9, w9, w10
  42bc50:	and	w9, w9, #0x1
  42bc54:	mov	w0, w9
  42bc58:	sxtw	x8, w0
  42bc5c:	cbz	x8, 42bc84 <seat_may_gc+0x78>
  42bc60:	mov	w8, wzr
  42bc64:	mov	w0, w8
  42bc68:	adrp	x1, 442000 <_fini+0x1c30>
  42bc6c:	add	x1, x1, #0xf2
  42bc70:	ldr	x2, [sp]
  42bc74:	mov	w3, #0x26f                 	// #623
  42bc78:	adrp	x4, 448000 <_fini+0x7c30>
  42bc7c:	add	x4, x4, #0x336
  42bc80:	bl	406c68 <log_assert_failed_realm@plt>
  42bc84:	ldrb	w8, [sp, #15]
  42bc88:	tbnz	w8, #0, 42bc90 <seat_may_gc+0x84>
  42bc8c:	b	42bcb8 <seat_may_gc+0xac>
  42bc90:	ldr	x8, [sp, #16]
  42bc94:	ldrb	w9, [x8, #72]
  42bc98:	mov	w10, #0x1                   	// #1
  42bc9c:	lsr	w9, w9, w10
  42bca0:	and	w9, w9, w10
  42bca4:	tbnz	w9, #0, 42bcb8 <seat_may_gc+0xac>
  42bca8:	mov	w8, #0x1                   	// #1
  42bcac:	and	w8, w8, #0x1
  42bcb0:	sturb	w8, [x29, #-1]
  42bcb4:	b	42bcf0 <seat_may_gc+0xe4>
  42bcb8:	ldr	x0, [sp, #16]
  42bcbc:	bl	429adc <seat_is_seat0>
  42bcc0:	tbnz	w0, #0, 42bcc8 <seat_may_gc+0xbc>
  42bcc4:	b	42bcd8 <seat_may_gc+0xcc>
  42bcc8:	mov	w8, wzr
  42bccc:	and	w8, w8, #0x1
  42bcd0:	sturb	w8, [x29, #-1]
  42bcd4:	b	42bcf0 <seat_may_gc+0xe4>
  42bcd8:	ldr	x0, [sp, #16]
  42bcdc:	bl	42b9fc <seat_has_master_device>
  42bce0:	mov	w8, #0x1                   	// #1
  42bce4:	eor	w9, w0, #0x1
  42bce8:	and	w8, w9, w8
  42bcec:	sturb	w8, [x29, #-1]
  42bcf0:	ldurb	w8, [x29, #-1]
  42bcf4:	and	w0, w8, #0x1
  42bcf8:	ldp	x29, x30, [sp, #32]
  42bcfc:	add	sp, sp, #0x30
  42bd00:	ret

000000000042bd04 <startswith>:
  42bd04:	sub	sp, sp, #0x30
  42bd08:	stp	x29, x30, [sp, #32]
  42bd0c:	add	x29, sp, #0x20
  42bd10:	str	x0, [sp, #16]
  42bd14:	str	x1, [sp, #8]
  42bd18:	ldr	x0, [sp, #8]
  42bd1c:	bl	4070a8 <strlen@plt>
  42bd20:	str	x0, [sp]
  42bd24:	ldr	x0, [sp, #16]
  42bd28:	ldr	x1, [sp, #8]
  42bd2c:	ldr	x2, [sp]
  42bd30:	bl	4070b8 <strncmp@plt>
  42bd34:	cbnz	w0, 42bd4c <startswith+0x48>
  42bd38:	ldr	x8, [sp, #16]
  42bd3c:	ldr	x9, [sp]
  42bd40:	add	x8, x8, x9
  42bd44:	stur	x8, [x29, #-8]
  42bd48:	b	42bd54 <startswith+0x50>
  42bd4c:	mov	x8, xzr
  42bd50:	stur	x8, [x29, #-8]
  42bd54:	ldur	x0, [x29, #-8]
  42bd58:	ldp	x29, x30, [sp, #32]
  42bd5c:	add	sp, sp, #0x30
  42bd60:	ret

000000000042bd64 <seat_name_valid_char>:
  42bd64:	sub	sp, sp, #0x10
  42bd68:	strb	w0, [sp, #15]
  42bd6c:	ldrb	w8, [sp, #15]
  42bd70:	cmp	w8, #0x61
  42bd74:	b.lt	42bd8c <seat_name_valid_char+0x28>  // b.tstop
  42bd78:	ldrb	w8, [sp, #15]
  42bd7c:	mov	w9, #0x1                   	// #1
  42bd80:	cmp	w8, #0x7a
  42bd84:	str	w9, [sp, #8]
  42bd88:	b.le	42be20 <seat_name_valid_char+0xbc>
  42bd8c:	ldrb	w8, [sp, #15]
  42bd90:	cmp	w8, #0x41
  42bd94:	b.lt	42bdac <seat_name_valid_char+0x48>  // b.tstop
  42bd98:	ldrb	w8, [sp, #15]
  42bd9c:	mov	w9, #0x1                   	// #1
  42bda0:	cmp	w8, #0x5a
  42bda4:	str	w9, [sp, #8]
  42bda8:	b.le	42be20 <seat_name_valid_char+0xbc>
  42bdac:	ldrb	w8, [sp, #15]
  42bdb0:	cmp	w8, #0x30
  42bdb4:	b.lt	42bdcc <seat_name_valid_char+0x68>  // b.tstop
  42bdb8:	ldrb	w8, [sp, #15]
  42bdbc:	mov	w9, #0x1                   	// #1
  42bdc0:	cmp	w8, #0x39
  42bdc4:	str	w9, [sp, #8]
  42bdc8:	b.le	42be20 <seat_name_valid_char+0xbc>
  42bdcc:	mov	w8, #0x0                   	// #0
  42bdd0:	strb	w8, [sp, #14]
  42bdd4:	ldrb	w8, [sp, #15]
  42bdd8:	cmp	w8, #0x2d
  42bddc:	str	w8, [sp, #4]
  42bde0:	b.eq	42be00 <seat_name_valid_char+0x9c>  // b.none
  42bde4:	b	42bde8 <seat_name_valid_char+0x84>
  42bde8:	ldr	w8, [sp, #4]
  42bdec:	cmp	w8, #0x5f
  42bdf0:	cset	w9, eq  // eq = none
  42bdf4:	eor	w9, w9, #0x1
  42bdf8:	tbnz	w9, #0, 42be0c <seat_name_valid_char+0xa8>
  42bdfc:	b	42be00 <seat_name_valid_char+0x9c>
  42be00:	mov	w8, #0x1                   	// #1
  42be04:	strb	w8, [sp, #14]
  42be08:	b	42be0c <seat_name_valid_char+0xa8>
  42be0c:	ldrb	w8, [sp, #14]
  42be10:	and	w8, w8, #0x1
  42be14:	strb	w8, [sp, #13]
  42be18:	ldrb	w8, [sp, #13]
  42be1c:	str	w8, [sp, #8]
  42be20:	ldr	w8, [sp, #8]
  42be24:	and	w0, w8, #0x1
  42be28:	add	sp, sp, #0x10
  42be2c:	ret

000000000042be30 <size_multiply_overflow>:
  42be30:	sub	sp, sp, #0x20
  42be34:	str	x0, [sp, #24]
  42be38:	str	x1, [sp, #16]
  42be3c:	ldr	x8, [sp, #16]
  42be40:	mov	w9, #0x0                   	// #0
  42be44:	str	w9, [sp, #12]
  42be48:	cbz	x8, 42be68 <size_multiply_overflow+0x38>
  42be4c:	ldr	x8, [sp, #24]
  42be50:	ldr	x9, [sp, #16]
  42be54:	mov	x10, #0xffffffffffffffff    	// #-1
  42be58:	udiv	x9, x10, x9
  42be5c:	cmp	x8, x9
  42be60:	cset	w11, hi  // hi = pmore
  42be64:	str	w11, [sp, #12]
  42be68:	ldr	w8, [sp, #12]
  42be6c:	mov	w9, #0x1                   	// #1
  42be70:	eor	w8, w8, #0x1
  42be74:	eor	w8, w8, w9
  42be78:	and	w8, w8, #0x1
  42be7c:	mov	w0, w8
  42be80:	sxtw	x10, w0
  42be84:	cmp	x10, #0x0
  42be88:	cset	w8, ne  // ne = any
  42be8c:	and	w0, w8, #0x1
  42be90:	add	sp, sp, #0x20
  42be94:	ret

000000000042be98 <closep>:
  42be98:	sub	sp, sp, #0x20
  42be9c:	stp	x29, x30, [sp, #16]
  42bea0:	add	x29, sp, #0x10
  42bea4:	str	x0, [sp, #8]
  42bea8:	ldr	x8, [sp, #8]
  42beac:	ldr	w0, [x8]
  42beb0:	bl	406d38 <safe_close@plt>
  42beb4:	ldp	x29, x30, [sp, #16]
  42beb8:	add	sp, sp, #0x20
  42bebc:	ret

000000000042bec0 <bus_session_method_terminate>:
  42bec0:	sub	sp, sp, #0x50
  42bec4:	stp	x29, x30, [sp, #64]
  42bec8:	add	x29, sp, #0x40
  42becc:	adrp	x8, 448000 <_fini+0x7c30>
  42bed0:	add	x8, x8, #0x3df
  42bed4:	add	x8, x8, #0x3
  42bed8:	stur	x0, [x29, #-16]
  42bedc:	stur	x1, [x29, #-24]
  42bee0:	str	x2, [sp, #32]
  42bee4:	ldur	x9, [x29, #-24]
  42bee8:	str	x9, [sp, #24]
  42beec:	str	x8, [sp, #8]
  42bef0:	ldur	x8, [x29, #-16]
  42bef4:	cmp	x8, #0x0
  42bef8:	cset	w9, ne  // ne = any
  42befc:	mov	w10, #0x1                   	// #1
  42bf00:	eor	w9, w9, #0x1
  42bf04:	eor	w9, w9, w10
  42bf08:	eor	w9, w9, w10
  42bf0c:	and	w9, w9, #0x1
  42bf10:	mov	w0, w9
  42bf14:	sxtw	x8, w0
  42bf18:	cbz	x8, 42bf40 <bus_session_method_terminate+0x80>
  42bf1c:	mov	w8, wzr
  42bf20:	mov	w0, w8
  42bf24:	adrp	x1, 443000 <_fini+0x2c30>
  42bf28:	add	x1, x1, #0x812
  42bf2c:	ldr	x2, [sp, #8]
  42bf30:	mov	w3, #0xa2                  	// #162
  42bf34:	adrp	x4, 448000 <_fini+0x7c30>
  42bf38:	add	x4, x4, #0x402
  42bf3c:	bl	406c68 <log_assert_failed_realm@plt>
  42bf40:	ldr	x8, [sp, #24]
  42bf44:	cmp	x8, #0x0
  42bf48:	cset	w9, ne  // ne = any
  42bf4c:	mov	w10, #0x1                   	// #1
  42bf50:	eor	w9, w9, #0x1
  42bf54:	eor	w9, w9, w10
  42bf58:	eor	w9, w9, w10
  42bf5c:	and	w9, w9, #0x1
  42bf60:	mov	w0, w9
  42bf64:	sxtw	x8, w0
  42bf68:	cbz	x8, 42bf90 <bus_session_method_terminate+0xd0>
  42bf6c:	mov	w8, wzr
  42bf70:	mov	w0, w8
  42bf74:	adrp	x1, 442000 <_fini+0x1c30>
  42bf78:	add	x1, x1, #0xf2
  42bf7c:	ldr	x2, [sp, #8]
  42bf80:	mov	w3, #0xa3                  	// #163
  42bf84:	adrp	x4, 448000 <_fini+0x7c30>
  42bf88:	add	x4, x4, #0x402
  42bf8c:	bl	406c68 <log_assert_failed_realm@plt>
  42bf90:	ldur	x0, [x29, #-16]
  42bf94:	ldr	x8, [sp, #24]
  42bf98:	ldr	x8, [x8, #40]
  42bf9c:	ldr	w5, [x8, #8]
  42bfa0:	ldr	x8, [sp, #24]
  42bfa4:	ldr	x8, [x8]
  42bfa8:	add	x6, x8, #0x1b0
  42bfac:	ldr	x7, [sp, #32]
  42bfb0:	mov	w1, #0x5                   	// #5
  42bfb4:	adrp	x2, 447000 <_fini+0x6c30>
  42bfb8:	add	x2, x2, #0x80f
  42bfbc:	mov	x8, xzr
  42bfc0:	mov	x3, x8
  42bfc4:	mov	w9, wzr
  42bfc8:	and	w4, w9, #0x1
  42bfcc:	bl	407678 <bus_verify_polkit_async@plt>
  42bfd0:	str	w0, [sp, #20]
  42bfd4:	ldr	w9, [sp, #20]
  42bfd8:	cmp	w9, #0x0
  42bfdc:	cset	w9, ge  // ge = tcont
  42bfe0:	tbnz	w9, #0, 42bff0 <bus_session_method_terminate+0x130>
  42bfe4:	ldr	w8, [sp, #20]
  42bfe8:	stur	w8, [x29, #-4]
  42bfec:	b	42c048 <bus_session_method_terminate+0x188>
  42bff0:	ldr	w8, [sp, #20]
  42bff4:	cbnz	w8, 42c004 <bus_session_method_terminate+0x144>
  42bff8:	mov	w8, #0x1                   	// #1
  42bffc:	stur	w8, [x29, #-4]
  42c000:	b	42c048 <bus_session_method_terminate+0x188>
  42c004:	ldr	x0, [sp, #24]
  42c008:	mov	w8, #0x1                   	// #1
  42c00c:	and	w1, w8, #0x1
  42c010:	bl	4359b4 <session_stop>
  42c014:	str	w0, [sp, #20]
  42c018:	ldr	w8, [sp, #20]
  42c01c:	cmp	w8, #0x0
  42c020:	cset	w8, ge  // ge = tcont
  42c024:	tbnz	w8, #0, 42c034 <bus_session_method_terminate+0x174>
  42c028:	ldr	w8, [sp, #20]
  42c02c:	stur	w8, [x29, #-4]
  42c030:	b	42c048 <bus_session_method_terminate+0x188>
  42c034:	ldur	x0, [x29, #-16]
  42c038:	mov	x8, xzr
  42c03c:	mov	x1, x8
  42c040:	bl	4075b8 <sd_bus_reply_method_return@plt>
  42c044:	stur	w0, [x29, #-4]
  42c048:	ldur	w0, [x29, #-4]
  42c04c:	ldp	x29, x30, [sp, #64]
  42c050:	add	sp, sp, #0x50
  42c054:	ret

000000000042c058 <bus_session_method_activate>:
  42c058:	sub	sp, sp, #0x50
  42c05c:	stp	x29, x30, [sp, #64]
  42c060:	add	x29, sp, #0x40
  42c064:	adrp	x8, 448000 <_fini+0x7c30>
  42c068:	add	x8, x8, #0x3df
  42c06c:	add	x8, x8, #0x3
  42c070:	stur	x0, [x29, #-16]
  42c074:	stur	x1, [x29, #-24]
  42c078:	str	x2, [sp, #32]
  42c07c:	ldur	x9, [x29, #-24]
  42c080:	str	x9, [sp, #24]
  42c084:	str	x8, [sp, #8]
  42c088:	ldur	x8, [x29, #-16]
  42c08c:	cmp	x8, #0x0
  42c090:	cset	w9, ne  // ne = any
  42c094:	mov	w10, #0x1                   	// #1
  42c098:	eor	w9, w9, #0x1
  42c09c:	eor	w9, w9, w10
  42c0a0:	eor	w9, w9, w10
  42c0a4:	and	w9, w9, #0x1
  42c0a8:	mov	w0, w9
  42c0ac:	sxtw	x8, w0
  42c0b0:	cbz	x8, 42c0d8 <bus_session_method_activate+0x80>
  42c0b4:	mov	w8, wzr
  42c0b8:	mov	w0, w8
  42c0bc:	adrp	x1, 443000 <_fini+0x2c30>
  42c0c0:	add	x1, x1, #0x812
  42c0c4:	ldr	x2, [sp, #8]
  42c0c8:	mov	w3, #0xbe                  	// #190
  42c0cc:	adrp	x4, 448000 <_fini+0x7c30>
  42c0d0:	add	x4, x4, #0x44d
  42c0d4:	bl	406c68 <log_assert_failed_realm@plt>
  42c0d8:	ldr	x8, [sp, #24]
  42c0dc:	cmp	x8, #0x0
  42c0e0:	cset	w9, ne  // ne = any
  42c0e4:	mov	w10, #0x1                   	// #1
  42c0e8:	eor	w9, w9, #0x1
  42c0ec:	eor	w9, w9, w10
  42c0f0:	eor	w9, w9, w10
  42c0f4:	and	w9, w9, #0x1
  42c0f8:	mov	w0, w9
  42c0fc:	sxtw	x8, w0
  42c100:	cbz	x8, 42c128 <bus_session_method_activate+0xd0>
  42c104:	mov	w8, wzr
  42c108:	mov	w0, w8
  42c10c:	adrp	x1, 442000 <_fini+0x1c30>
  42c110:	add	x1, x1, #0xf2
  42c114:	ldr	x2, [sp, #8]
  42c118:	mov	w3, #0xbf                  	// #191
  42c11c:	adrp	x4, 448000 <_fini+0x7c30>
  42c120:	add	x4, x4, #0x44d
  42c124:	bl	406c68 <log_assert_failed_realm@plt>
  42c128:	ldr	x0, [sp, #24]
  42c12c:	bl	434f00 <session_activate>
  42c130:	str	w0, [sp, #20]
  42c134:	ldr	w8, [sp, #20]
  42c138:	cmp	w8, #0x0
  42c13c:	cset	w8, ge  // ge = tcont
  42c140:	tbnz	w8, #0, 42c150 <bus_session_method_activate+0xf8>
  42c144:	ldr	w8, [sp, #20]
  42c148:	stur	w8, [x29, #-4]
  42c14c:	b	42c164 <bus_session_method_activate+0x10c>
  42c150:	ldur	x0, [x29, #-16]
  42c154:	mov	x8, xzr
  42c158:	mov	x1, x8
  42c15c:	bl	4075b8 <sd_bus_reply_method_return@plt>
  42c160:	stur	w0, [x29, #-4]
  42c164:	ldur	w0, [x29, #-4]
  42c168:	ldp	x29, x30, [sp, #64]
  42c16c:	add	sp, sp, #0x50
  42c170:	ret

000000000042c174 <bus_session_method_lock>:
  42c174:	sub	sp, sp, #0x50
  42c178:	stp	x29, x30, [sp, #64]
  42c17c:	add	x29, sp, #0x40
  42c180:	adrp	x8, 448000 <_fini+0x7c30>
  42c184:	add	x8, x8, #0x3df
  42c188:	add	x8, x8, #0x3
  42c18c:	stur	x0, [x29, #-16]
  42c190:	stur	x1, [x29, #-24]
  42c194:	str	x2, [sp, #32]
  42c198:	ldur	x9, [x29, #-24]
  42c19c:	str	x9, [sp, #24]
  42c1a0:	str	x8, [sp, #8]
  42c1a4:	ldur	x8, [x29, #-16]
  42c1a8:	cmp	x8, #0x0
  42c1ac:	cset	w9, ne  // ne = any
  42c1b0:	mov	w10, #0x1                   	// #1
  42c1b4:	eor	w9, w9, #0x1
  42c1b8:	eor	w9, w9, w10
  42c1bc:	eor	w9, w9, w10
  42c1c0:	and	w9, w9, #0x1
  42c1c4:	mov	w0, w9
  42c1c8:	sxtw	x8, w0
  42c1cc:	cbz	x8, 42c1f4 <bus_session_method_lock+0x80>
  42c1d0:	mov	w8, wzr
  42c1d4:	mov	w0, w8
  42c1d8:	adrp	x1, 443000 <_fini+0x2c30>
  42c1dc:	add	x1, x1, #0x812
  42c1e0:	ldr	x2, [sp, #8]
  42c1e4:	mov	w3, #0xcc                  	// #204
  42c1e8:	adrp	x4, 448000 <_fini+0x7c30>
  42c1ec:	add	x4, x4, #0x497
  42c1f0:	bl	406c68 <log_assert_failed_realm@plt>
  42c1f4:	ldr	x8, [sp, #24]
  42c1f8:	cmp	x8, #0x0
  42c1fc:	cset	w9, ne  // ne = any
  42c200:	mov	w10, #0x1                   	// #1
  42c204:	eor	w9, w9, #0x1
  42c208:	eor	w9, w9, w10
  42c20c:	eor	w9, w9, w10
  42c210:	and	w9, w9, #0x1
  42c214:	mov	w0, w9
  42c218:	sxtw	x8, w0
  42c21c:	cbz	x8, 42c244 <bus_session_method_lock+0xd0>
  42c220:	mov	w8, wzr
  42c224:	mov	w0, w8
  42c228:	adrp	x1, 442000 <_fini+0x1c30>
  42c22c:	add	x1, x1, #0xf2
  42c230:	ldr	x2, [sp, #8]
  42c234:	mov	w3, #0xcd                  	// #205
  42c238:	adrp	x4, 448000 <_fini+0x7c30>
  42c23c:	add	x4, x4, #0x497
  42c240:	bl	406c68 <log_assert_failed_realm@plt>
  42c244:	ldur	x0, [x29, #-16]
  42c248:	ldr	x8, [sp, #24]
  42c24c:	ldr	x8, [x8, #40]
  42c250:	ldr	w5, [x8, #8]
  42c254:	ldr	x8, [sp, #24]
  42c258:	ldr	x8, [x8]
  42c25c:	add	x6, x8, #0x1b0
  42c260:	ldr	x7, [sp, #32]
  42c264:	mov	w1, #0x15                  	// #21
  42c268:	adrp	x2, 445000 <_fini+0x4c30>
  42c26c:	add	x2, x2, #0x83b
  42c270:	mov	x8, xzr
  42c274:	mov	x3, x8
  42c278:	mov	w9, wzr
  42c27c:	and	w4, w9, #0x1
  42c280:	bl	407678 <bus_verify_polkit_async@plt>
  42c284:	str	w0, [sp, #20]
  42c288:	ldr	w9, [sp, #20]
  42c28c:	cmp	w9, #0x0
  42c290:	cset	w9, ge  // ge = tcont
  42c294:	tbnz	w9, #0, 42c2a4 <bus_session_method_lock+0x130>
  42c298:	ldr	w8, [sp, #20]
  42c29c:	stur	w8, [x29, #-4]
  42c2a0:	b	42c320 <bus_session_method_lock+0x1ac>
  42c2a4:	ldr	w8, [sp, #20]
  42c2a8:	cbnz	w8, 42c2b8 <bus_session_method_lock+0x144>
  42c2ac:	mov	w8, #0x1                   	// #1
  42c2b0:	stur	w8, [x29, #-4]
  42c2b4:	b	42c320 <bus_session_method_lock+0x1ac>
  42c2b8:	ldr	x0, [sp, #24]
  42c2bc:	ldur	x8, [x29, #-16]
  42c2c0:	str	x0, [sp]
  42c2c4:	mov	x0, x8
  42c2c8:	bl	407688 <sd_bus_message_get_member@plt>
  42c2cc:	adrp	x1, 448000 <_fini+0x7c30>
  42c2d0:	add	x1, x1, #0x4dd
  42c2d4:	bl	407b28 <strstr@plt>
  42c2d8:	cmp	x0, #0x0
  42c2dc:	cset	w9, ne  // ne = any
  42c2e0:	ldr	x0, [sp]
  42c2e4:	and	w1, w9, #0x1
  42c2e8:	bl	42c330 <session_send_lock>
  42c2ec:	str	w0, [sp, #20]
  42c2f0:	ldr	w9, [sp, #20]
  42c2f4:	cmp	w9, #0x0
  42c2f8:	cset	w9, ge  // ge = tcont
  42c2fc:	tbnz	w9, #0, 42c30c <bus_session_method_lock+0x198>
  42c300:	ldr	w8, [sp, #20]
  42c304:	stur	w8, [x29, #-4]
  42c308:	b	42c320 <bus_session_method_lock+0x1ac>
  42c30c:	ldur	x0, [x29, #-16]
  42c310:	mov	x8, xzr
  42c314:	mov	x1, x8
  42c318:	bl	4075b8 <sd_bus_reply_method_return@plt>
  42c31c:	stur	w0, [x29, #-4]
  42c320:	ldur	w0, [x29, #-4]
  42c324:	ldp	x29, x30, [sp, #64]
  42c328:	add	sp, sp, #0x50
  42c32c:	ret

000000000042c330 <session_send_lock>:
  42c330:	sub	sp, sp, #0x40
  42c334:	stp	x29, x30, [sp, #48]
  42c338:	add	x29, sp, #0x30
  42c33c:	mov	x8, xzr
  42c340:	mov	w9, #0x1                   	// #1
  42c344:	adrp	x10, 448000 <_fini+0x7c30>
  42c348:	add	x10, x10, #0x3df
  42c34c:	add	x2, x10, #0x3
  42c350:	stur	x0, [x29, #-16]
  42c354:	and	w9, w1, w9
  42c358:	sturb	w9, [x29, #-17]
  42c35c:	str	x8, [sp, #16]
  42c360:	str	x2, [sp]
  42c364:	ldur	x8, [x29, #-16]
  42c368:	cmp	x8, #0x0
  42c36c:	cset	w9, ne  // ne = any
  42c370:	mov	w10, #0x1                   	// #1
  42c374:	eor	w9, w9, #0x1
  42c378:	eor	w9, w9, w10
  42c37c:	eor	w9, w9, w10
  42c380:	and	w9, w9, #0x1
  42c384:	mov	w0, w9
  42c388:	sxtw	x8, w0
  42c38c:	cbz	x8, 42c3b4 <session_send_lock+0x84>
  42c390:	mov	w8, wzr
  42c394:	mov	w0, w8
  42c398:	adrp	x1, 442000 <_fini+0x1c30>
  42c39c:	add	x1, x1, #0xf2
  42c3a0:	ldr	x2, [sp]
  42c3a4:	mov	w3, #0x2e8                 	// #744
  42c3a8:	adrp	x4, 448000 <_fini+0x7c30>
  42c3ac:	add	x4, x4, #0x844
  42c3b0:	bl	406c68 <log_assert_failed_realm@plt>
  42c3b4:	ldur	x0, [x29, #-16]
  42c3b8:	bl	42ee0c <session_bus_path>
  42c3bc:	str	x0, [sp, #16]
  42c3c0:	ldr	x8, [sp, #16]
  42c3c4:	cbnz	x8, 42c3dc <session_send_lock+0xac>
  42c3c8:	mov	w8, #0xfffffff4            	// #-12
  42c3cc:	stur	w8, [x29, #-4]
  42c3d0:	mov	w8, #0x1                   	// #1
  42c3d4:	str	w8, [sp, #12]
  42c3d8:	b	42c428 <session_send_lock+0xf8>
  42c3dc:	ldur	x8, [x29, #-16]
  42c3e0:	ldr	x8, [x8]
  42c3e4:	ldr	x0, [x8, #8]
  42c3e8:	ldr	x1, [sp, #16]
  42c3ec:	ldurb	w9, [x29, #-17]
  42c3f0:	adrp	x8, 448000 <_fini+0x7c30>
  42c3f4:	add	x8, x8, #0x5fa
  42c3f8:	adrp	x10, 448000 <_fini+0x7c30>
  42c3fc:	add	x10, x10, #0x4dd
  42c400:	tst	w9, #0x1
  42c404:	csel	x3, x10, x8, ne  // ne = any
  42c408:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  42c40c:	add	x2, x2, #0xe9a
  42c410:	mov	x8, xzr
  42c414:	mov	x4, x8
  42c418:	bl	4074e8 <sd_bus_emit_signal@plt>
  42c41c:	stur	w0, [x29, #-4]
  42c420:	mov	w9, #0x1                   	// #1
  42c424:	str	w9, [sp, #12]
  42c428:	add	x0, sp, #0x10
  42c42c:	bl	42ed40 <freep>
  42c430:	ldur	w0, [x29, #-4]
  42c434:	ldp	x29, x30, [sp, #48]
  42c438:	add	sp, sp, #0x40
  42c43c:	ret

000000000042c440 <bus_session_method_kill>:
  42c440:	sub	sp, sp, #0x60
  42c444:	stp	x29, x30, [sp, #80]
  42c448:	add	x29, sp, #0x50
  42c44c:	adrp	x8, 448000 <_fini+0x7c30>
  42c450:	add	x8, x8, #0x3df
  42c454:	add	x8, x8, #0x3
  42c458:	stur	x0, [x29, #-16]
  42c45c:	stur	x1, [x29, #-24]
  42c460:	stur	x2, [x29, #-32]
  42c464:	ldur	x9, [x29, #-24]
  42c468:	str	x9, [sp, #40]
  42c46c:	str	x8, [sp, #8]
  42c470:	ldur	x8, [x29, #-16]
  42c474:	cmp	x8, #0x0
  42c478:	cset	w9, ne  // ne = any
  42c47c:	mov	w10, #0x1                   	// #1
  42c480:	eor	w9, w9, #0x1
  42c484:	eor	w9, w9, w10
  42c488:	eor	w9, w9, w10
  42c48c:	and	w9, w9, #0x1
  42c490:	mov	w0, w9
  42c494:	sxtw	x8, w0
  42c498:	cbz	x8, 42c4c0 <bus_session_method_kill+0x80>
  42c49c:	mov	w8, wzr
  42c4a0:	mov	w0, w8
  42c4a4:	adrp	x1, 443000 <_fini+0x2c30>
  42c4a8:	add	x1, x1, #0x812
  42c4ac:	ldr	x2, [sp, #8]
  42c4b0:	mov	w3, #0x125                 	// #293
  42c4b4:	adrp	x4, 448000 <_fini+0x7c30>
  42c4b8:	add	x4, x4, #0x4e2
  42c4bc:	bl	406c68 <log_assert_failed_realm@plt>
  42c4c0:	ldr	x8, [sp, #40]
  42c4c4:	cmp	x8, #0x0
  42c4c8:	cset	w9, ne  // ne = any
  42c4cc:	mov	w10, #0x1                   	// #1
  42c4d0:	eor	w9, w9, #0x1
  42c4d4:	eor	w9, w9, w10
  42c4d8:	eor	w9, w9, w10
  42c4dc:	and	w9, w9, #0x1
  42c4e0:	mov	w0, w9
  42c4e4:	sxtw	x8, w0
  42c4e8:	cbz	x8, 42c510 <bus_session_method_kill+0xd0>
  42c4ec:	mov	w8, wzr
  42c4f0:	mov	w0, w8
  42c4f4:	adrp	x1, 442000 <_fini+0x1c30>
  42c4f8:	add	x1, x1, #0xf2
  42c4fc:	ldr	x2, [sp, #8]
  42c500:	mov	w3, #0x126                 	// #294
  42c504:	adrp	x4, 448000 <_fini+0x7c30>
  42c508:	add	x4, x4, #0x4e2
  42c50c:	bl	406c68 <log_assert_failed_realm@plt>
  42c510:	ldur	x0, [x29, #-16]
  42c514:	adrp	x1, 448000 <_fini+0x7c30>
  42c518:	add	x1, x1, #0x528
  42c51c:	add	x2, sp, #0x20
  42c520:	add	x3, sp, #0x1c
  42c524:	bl	4074c8 <sd_bus_message_read@plt>
  42c528:	str	w0, [sp, #20]
  42c52c:	ldr	w8, [sp, #20]
  42c530:	cmp	w8, #0x0
  42c534:	cset	w8, ge  // ge = tcont
  42c538:	tbnz	w8, #0, 42c548 <bus_session_method_kill+0x108>
  42c53c:	ldr	w8, [sp, #20]
  42c540:	stur	w8, [x29, #-4]
  42c544:	b	42c68c <bus_session_method_kill+0x24c>
  42c548:	ldr	x0, [sp, #32]
  42c54c:	bl	42c69c <isempty>
  42c550:	tbnz	w0, #0, 42c558 <bus_session_method_kill+0x118>
  42c554:	b	42c564 <bus_session_method_kill+0x124>
  42c558:	mov	w8, #0x1                   	// #1
  42c55c:	str	w8, [sp, #24]
  42c560:	b	42c5a4 <bus_session_method_kill+0x164>
  42c564:	ldr	x0, [sp, #32]
  42c568:	bl	437be8 <kill_who_from_string>
  42c56c:	str	w0, [sp, #24]
  42c570:	ldr	w8, [sp, #24]
  42c574:	cmp	w8, #0x0
  42c578:	cset	w8, ge  // ge = tcont
  42c57c:	tbnz	w8, #0, 42c5a4 <bus_session_method_kill+0x164>
  42c580:	ldur	x0, [x29, #-32]
  42c584:	ldr	x3, [sp, #32]
  42c588:	adrp	x1, 445000 <_fini+0x4c30>
  42c58c:	add	x1, x1, #0x37d
  42c590:	adrp	x2, 448000 <_fini+0x7c30>
  42c594:	add	x2, x2, #0x52b
  42c598:	bl	407468 <sd_bus_error_setf@plt>
  42c59c:	stur	w0, [x29, #-4]
  42c5a0:	b	42c68c <bus_session_method_kill+0x24c>
  42c5a4:	ldr	w0, [sp, #28]
  42c5a8:	bl	42c6dc <SIGNAL_VALID>
  42c5ac:	tbnz	w0, #0, 42c5d4 <bus_session_method_kill+0x194>
  42c5b0:	ldur	x0, [x29, #-32]
  42c5b4:	ldr	w3, [sp, #28]
  42c5b8:	adrp	x1, 445000 <_fini+0x4c30>
  42c5bc:	add	x1, x1, #0x37d
  42c5c0:	adrp	x2, 448000 <_fini+0x7c30>
  42c5c4:	add	x2, x2, #0x547
  42c5c8:	bl	407468 <sd_bus_error_setf@plt>
  42c5cc:	stur	w0, [x29, #-4]
  42c5d0:	b	42c68c <bus_session_method_kill+0x24c>
  42c5d4:	ldur	x0, [x29, #-16]
  42c5d8:	ldr	x8, [sp, #40]
  42c5dc:	ldr	x8, [x8, #40]
  42c5e0:	ldr	w5, [x8, #8]
  42c5e4:	ldr	x8, [sp, #40]
  42c5e8:	ldr	x8, [x8]
  42c5ec:	add	x6, x8, #0x1b0
  42c5f0:	ldur	x7, [x29, #-32]
  42c5f4:	mov	w1, #0x5                   	// #5
  42c5f8:	adrp	x2, 447000 <_fini+0x6c30>
  42c5fc:	add	x2, x2, #0x80f
  42c600:	mov	x8, xzr
  42c604:	mov	x3, x8
  42c608:	mov	w9, wzr
  42c60c:	and	w4, w9, #0x1
  42c610:	bl	407678 <bus_verify_polkit_async@plt>
  42c614:	str	w0, [sp, #20]
  42c618:	ldr	w9, [sp, #20]
  42c61c:	cmp	w9, #0x0
  42c620:	cset	w9, ge  // ge = tcont
  42c624:	tbnz	w9, #0, 42c634 <bus_session_method_kill+0x1f4>
  42c628:	ldr	w8, [sp, #20]
  42c62c:	stur	w8, [x29, #-4]
  42c630:	b	42c68c <bus_session_method_kill+0x24c>
  42c634:	ldr	w8, [sp, #20]
  42c638:	cbnz	w8, 42c648 <bus_session_method_kill+0x208>
  42c63c:	mov	w8, #0x1                   	// #1
  42c640:	stur	w8, [x29, #-4]
  42c644:	b	42c68c <bus_session_method_kill+0x24c>
  42c648:	ldr	x0, [sp, #40]
  42c64c:	ldr	w1, [sp, #24]
  42c650:	ldr	w2, [sp, #28]
  42c654:	bl	437344 <session_kill>
  42c658:	str	w0, [sp, #20]
  42c65c:	ldr	w8, [sp, #20]
  42c660:	cmp	w8, #0x0
  42c664:	cset	w8, ge  // ge = tcont
  42c668:	tbnz	w8, #0, 42c678 <bus_session_method_kill+0x238>
  42c66c:	ldr	w8, [sp, #20]
  42c670:	stur	w8, [x29, #-4]
  42c674:	b	42c68c <bus_session_method_kill+0x24c>
  42c678:	ldur	x0, [x29, #-16]
  42c67c:	mov	x8, xzr
  42c680:	mov	x1, x8
  42c684:	bl	4075b8 <sd_bus_reply_method_return@plt>
  42c688:	stur	w0, [x29, #-4]
  42c68c:	ldur	w0, [x29, #-4]
  42c690:	ldp	x29, x30, [sp, #80]
  42c694:	add	sp, sp, #0x60
  42c698:	ret

000000000042c69c <isempty>:
  42c69c:	sub	sp, sp, #0x10
  42c6a0:	str	x0, [sp, #8]
  42c6a4:	ldr	x8, [sp, #8]
  42c6a8:	mov	w9, #0x1                   	// #1
  42c6ac:	str	w9, [sp, #4]
  42c6b0:	cbz	x8, 42c6cc <isempty+0x30>
  42c6b4:	ldr	x8, [sp, #8]
  42c6b8:	ldrb	w9, [x8]
  42c6bc:	cmp	w9, #0x0
  42c6c0:	cset	w9, ne  // ne = any
  42c6c4:	eor	w9, w9, #0x1
  42c6c8:	str	w9, [sp, #4]
  42c6cc:	ldr	w8, [sp, #4]
  42c6d0:	and	w0, w8, #0x1
  42c6d4:	add	sp, sp, #0x10
  42c6d8:	ret

000000000042c6dc <SIGNAL_VALID>:
  42c6dc:	sub	sp, sp, #0x10
  42c6e0:	str	w0, [sp, #12]
  42c6e4:	ldr	w8, [sp, #12]
  42c6e8:	cmp	w8, #0x0
  42c6ec:	cset	w8, le
  42c6f0:	mov	w9, #0x0                   	// #0
  42c6f4:	str	w9, [sp, #8]
  42c6f8:	tbnz	w8, #0, 42c70c <SIGNAL_VALID+0x30>
  42c6fc:	ldr	w8, [sp, #12]
  42c700:	cmp	w8, #0x41
  42c704:	cset	w8, lt  // lt = tstop
  42c708:	str	w8, [sp, #8]
  42c70c:	ldr	w8, [sp, #8]
  42c710:	and	w0, w8, #0x1
  42c714:	add	sp, sp, #0x10
  42c718:	ret

000000000042c71c <property_get_user>:
  42c71c:	sub	sp, sp, #0x80
  42c720:	stp	x29, x30, [sp, #112]
  42c724:	add	x29, sp, #0x70
  42c728:	mov	x8, xzr
  42c72c:	adrp	x9, 448000 <_fini+0x7c30>
  42c730:	add	x9, x9, #0x3df
  42c734:	add	x9, x9, #0x3
  42c738:	adrp	x10, 448000 <_fini+0x7c30>
  42c73c:	add	x10, x10, #0x95a
  42c740:	stur	x0, [x29, #-16]
  42c744:	stur	x1, [x29, #-24]
  42c748:	stur	x2, [x29, #-32]
  42c74c:	stur	x3, [x29, #-40]
  42c750:	stur	x4, [x29, #-48]
  42c754:	str	x5, [sp, #56]
  42c758:	str	x6, [sp, #48]
  42c75c:	str	x8, [sp, #40]
  42c760:	ldr	x8, [sp, #56]
  42c764:	str	x8, [sp, #32]
  42c768:	str	x9, [sp, #16]
  42c76c:	str	x10, [sp, #8]
  42c770:	ldur	x8, [x29, #-16]
  42c774:	cmp	x8, #0x0
  42c778:	cset	w9, ne  // ne = any
  42c77c:	mov	w10, #0x1                   	// #1
  42c780:	eor	w9, w9, #0x1
  42c784:	eor	w9, w9, w10
  42c788:	eor	w9, w9, w10
  42c78c:	and	w9, w9, #0x1
  42c790:	mov	w0, w9
  42c794:	sxtw	x8, w0
  42c798:	cbz	x8, 42c7bc <property_get_user+0xa0>
  42c79c:	mov	w8, wzr
  42c7a0:	mov	w0, w8
  42c7a4:	adrp	x1, 444000 <_fini+0x3c30>
  42c7a8:	add	x1, x1, #0x393
  42c7ac:	ldr	x2, [sp, #16]
  42c7b0:	mov	w3, #0x26                  	// #38
  42c7b4:	ldr	x4, [sp, #8]
  42c7b8:	bl	406c68 <log_assert_failed_realm@plt>
  42c7bc:	ldur	x8, [x29, #-48]
  42c7c0:	cmp	x8, #0x0
  42c7c4:	cset	w9, ne  // ne = any
  42c7c8:	mov	w10, #0x1                   	// #1
  42c7cc:	eor	w9, w9, #0x1
  42c7d0:	eor	w9, w9, w10
  42c7d4:	eor	w9, w9, w10
  42c7d8:	and	w9, w9, #0x1
  42c7dc:	mov	w0, w9
  42c7e0:	sxtw	x8, w0
  42c7e4:	cbz	x8, 42c808 <property_get_user+0xec>
  42c7e8:	mov	w8, wzr
  42c7ec:	mov	w0, w8
  42c7f0:	adrp	x1, 444000 <_fini+0x3c30>
  42c7f4:	add	x1, x1, #0x417
  42c7f8:	ldr	x2, [sp, #16]
  42c7fc:	mov	w3, #0x27                  	// #39
  42c800:	ldr	x4, [sp, #8]
  42c804:	bl	406c68 <log_assert_failed_realm@plt>
  42c808:	ldr	x8, [sp, #32]
  42c80c:	cmp	x8, #0x0
  42c810:	cset	w9, ne  // ne = any
  42c814:	mov	w10, #0x1                   	// #1
  42c818:	eor	w9, w9, #0x1
  42c81c:	eor	w9, w9, w10
  42c820:	eor	w9, w9, w10
  42c824:	and	w9, w9, #0x1
  42c828:	mov	w0, w9
  42c82c:	sxtw	x8, w0
  42c830:	cbz	x8, 42c854 <property_get_user+0x138>
  42c834:	mov	w8, wzr
  42c838:	mov	w0, w8
  42c83c:	adrp	x1, 442000 <_fini+0x1c30>
  42c840:	add	x1, x1, #0xf2
  42c844:	ldr	x2, [sp, #16]
  42c848:	mov	w3, #0x28                  	// #40
  42c84c:	ldr	x4, [sp, #8]
  42c850:	bl	406c68 <log_assert_failed_realm@plt>
  42c854:	ldr	x8, [sp, #32]
  42c858:	ldr	x0, [x8, #40]
  42c85c:	bl	43900c <user_bus_path>
  42c860:	str	x0, [sp, #40]
  42c864:	ldr	x8, [sp, #40]
  42c868:	cbnz	x8, 42c880 <property_get_user+0x164>
  42c86c:	mov	w8, #0xfffffff4            	// #-12
  42c870:	stur	w8, [x29, #-4]
  42c874:	mov	w8, #0x1                   	// #1
  42c878:	str	w8, [sp, #28]
  42c87c:	b	42c8ac <property_get_user+0x190>
  42c880:	ldur	x0, [x29, #-48]
  42c884:	ldr	x8, [sp, #32]
  42c888:	ldr	x8, [x8, #40]
  42c88c:	ldr	w2, [x8, #8]
  42c890:	ldr	x3, [sp, #40]
  42c894:	adrp	x1, 448000 <_fini+0x7c30>
  42c898:	add	x1, x1, #0x55e
  42c89c:	bl	407508 <sd_bus_message_append@plt>
  42c8a0:	stur	w0, [x29, #-4]
  42c8a4:	mov	w9, #0x1                   	// #1
  42c8a8:	str	w9, [sp, #28]
  42c8ac:	add	x0, sp, #0x28
  42c8b0:	bl	42ed40 <freep>
  42c8b4:	ldur	w0, [x29, #-4]
  42c8b8:	ldp	x29, x30, [sp, #112]
  42c8bc:	add	sp, sp, #0x80
  42c8c0:	ret

000000000042c8c4 <property_get_name>:
  42c8c4:	sub	sp, sp, #0x60
  42c8c8:	stp	x29, x30, [sp, #80]
  42c8cc:	add	x29, sp, #0x50
  42c8d0:	adrp	x8, 448000 <_fini+0x7c30>
  42c8d4:	add	x8, x8, #0x3df
  42c8d8:	add	x8, x8, #0x3
  42c8dc:	adrp	x9, 448000 <_fini+0x7c30>
  42c8e0:	add	x9, x9, #0x9ce
  42c8e4:	stur	x0, [x29, #-8]
  42c8e8:	stur	x1, [x29, #-16]
  42c8ec:	stur	x2, [x29, #-24]
  42c8f0:	stur	x3, [x29, #-32]
  42c8f4:	str	x4, [sp, #40]
  42c8f8:	str	x5, [sp, #32]
  42c8fc:	str	x6, [sp, #24]
  42c900:	ldr	x10, [sp, #32]
  42c904:	str	x10, [sp, #16]
  42c908:	str	x8, [sp, #8]
  42c90c:	str	x9, [sp]
  42c910:	ldur	x8, [x29, #-8]
  42c914:	cmp	x8, #0x0
  42c918:	cset	w9, ne  // ne = any
  42c91c:	mov	w10, #0x1                   	// #1
  42c920:	eor	w9, w9, #0x1
  42c924:	eor	w9, w9, w10
  42c928:	eor	w9, w9, w10
  42c92c:	and	w9, w9, #0x1
  42c930:	mov	w0, w9
  42c934:	sxtw	x8, w0
  42c938:	cbz	x8, 42c95c <property_get_name+0x98>
  42c93c:	mov	w8, wzr
  42c940:	mov	w0, w8
  42c944:	adrp	x1, 444000 <_fini+0x3c30>
  42c948:	add	x1, x1, #0x393
  42c94c:	ldr	x2, [sp, #8]
  42c950:	mov	w3, #0x3c                  	// #60
  42c954:	ldr	x4, [sp]
  42c958:	bl	406c68 <log_assert_failed_realm@plt>
  42c95c:	ldr	x8, [sp, #40]
  42c960:	cmp	x8, #0x0
  42c964:	cset	w9, ne  // ne = any
  42c968:	mov	w10, #0x1                   	// #1
  42c96c:	eor	w9, w9, #0x1
  42c970:	eor	w9, w9, w10
  42c974:	eor	w9, w9, w10
  42c978:	and	w9, w9, #0x1
  42c97c:	mov	w0, w9
  42c980:	sxtw	x8, w0
  42c984:	cbz	x8, 42c9a8 <property_get_name+0xe4>
  42c988:	mov	w8, wzr
  42c98c:	mov	w0, w8
  42c990:	adrp	x1, 444000 <_fini+0x3c30>
  42c994:	add	x1, x1, #0x417
  42c998:	ldr	x2, [sp, #8]
  42c99c:	mov	w3, #0x3d                  	// #61
  42c9a0:	ldr	x4, [sp]
  42c9a4:	bl	406c68 <log_assert_failed_realm@plt>
  42c9a8:	ldr	x8, [sp, #16]
  42c9ac:	cmp	x8, #0x0
  42c9b0:	cset	w9, ne  // ne = any
  42c9b4:	mov	w10, #0x1                   	// #1
  42c9b8:	eor	w9, w9, #0x1
  42c9bc:	eor	w9, w9, w10
  42c9c0:	eor	w9, w9, w10
  42c9c4:	and	w9, w9, #0x1
  42c9c8:	mov	w0, w9
  42c9cc:	sxtw	x8, w0
  42c9d0:	cbz	x8, 42c9f4 <property_get_name+0x130>
  42c9d4:	mov	w8, wzr
  42c9d8:	mov	w0, w8
  42c9dc:	adrp	x1, 442000 <_fini+0x1c30>
  42c9e0:	add	x1, x1, #0xf2
  42c9e4:	ldr	x2, [sp, #8]
  42c9e8:	mov	w3, #0x3e                  	// #62
  42c9ec:	ldr	x4, [sp]
  42c9f0:	bl	406c68 <log_assert_failed_realm@plt>
  42c9f4:	ldr	x0, [sp, #40]
  42c9f8:	ldr	x8, [sp, #16]
  42c9fc:	ldr	x8, [x8, #40]
  42ca00:	ldr	x2, [x8, #16]
  42ca04:	adrp	x1, 442000 <_fini+0x1c30>
  42ca08:	add	x1, x1, #0xf2
  42ca0c:	bl	407508 <sd_bus_message_append@plt>
  42ca10:	ldp	x29, x30, [sp, #80]
  42ca14:	add	sp, sp, #0x60
  42ca18:	ret

000000000042ca1c <property_get_seat>:
  42ca1c:	sub	sp, sp, #0x90
  42ca20:	stp	x29, x30, [sp, #128]
  42ca24:	add	x29, sp, #0x80
  42ca28:	mov	x8, xzr
  42ca2c:	adrp	x9, 448000 <_fini+0x7c30>
  42ca30:	add	x9, x9, #0x3df
  42ca34:	add	x9, x9, #0x3
  42ca38:	adrp	x10, 448000 <_fini+0x7c30>
  42ca3c:	add	x10, x10, #0xa42
  42ca40:	stur	x0, [x29, #-16]
  42ca44:	stur	x1, [x29, #-24]
  42ca48:	stur	x2, [x29, #-32]
  42ca4c:	stur	x3, [x29, #-40]
  42ca50:	stur	x4, [x29, #-48]
  42ca54:	stur	x5, [x29, #-56]
  42ca58:	str	x6, [sp, #64]
  42ca5c:	str	x8, [sp, #56]
  42ca60:	ldur	x8, [x29, #-56]
  42ca64:	str	x8, [sp, #48]
  42ca68:	str	x9, [sp, #32]
  42ca6c:	str	x10, [sp, #24]
  42ca70:	ldur	x8, [x29, #-16]
  42ca74:	cmp	x8, #0x0
  42ca78:	cset	w9, ne  // ne = any
  42ca7c:	mov	w10, #0x1                   	// #1
  42ca80:	eor	w9, w9, #0x1
  42ca84:	eor	w9, w9, w10
  42ca88:	eor	w9, w9, w10
  42ca8c:	and	w9, w9, #0x1
  42ca90:	mov	w0, w9
  42ca94:	sxtw	x8, w0
  42ca98:	cbz	x8, 42cabc <property_get_seat+0xa0>
  42ca9c:	mov	w8, wzr
  42caa0:	mov	w0, w8
  42caa4:	adrp	x1, 444000 <_fini+0x3c30>
  42caa8:	add	x1, x1, #0x393
  42caac:	ldr	x2, [sp, #32]
  42cab0:	mov	w3, #0x4f                  	// #79
  42cab4:	ldr	x4, [sp, #24]
  42cab8:	bl	406c68 <log_assert_failed_realm@plt>
  42cabc:	ldur	x8, [x29, #-48]
  42cac0:	cmp	x8, #0x0
  42cac4:	cset	w9, ne  // ne = any
  42cac8:	mov	w10, #0x1                   	// #1
  42cacc:	eor	w9, w9, #0x1
  42cad0:	eor	w9, w9, w10
  42cad4:	eor	w9, w9, w10
  42cad8:	and	w9, w9, #0x1
  42cadc:	mov	w0, w9
  42cae0:	sxtw	x8, w0
  42cae4:	cbz	x8, 42cb08 <property_get_seat+0xec>
  42cae8:	mov	w8, wzr
  42caec:	mov	w0, w8
  42caf0:	adrp	x1, 444000 <_fini+0x3c30>
  42caf4:	add	x1, x1, #0x417
  42caf8:	ldr	x2, [sp, #32]
  42cafc:	mov	w3, #0x50                  	// #80
  42cb00:	ldr	x4, [sp, #24]
  42cb04:	bl	406c68 <log_assert_failed_realm@plt>
  42cb08:	ldr	x8, [sp, #48]
  42cb0c:	cmp	x8, #0x0
  42cb10:	cset	w9, ne  // ne = any
  42cb14:	mov	w10, #0x1                   	// #1
  42cb18:	eor	w9, w9, #0x1
  42cb1c:	eor	w9, w9, w10
  42cb20:	eor	w9, w9, w10
  42cb24:	and	w9, w9, #0x1
  42cb28:	mov	w0, w9
  42cb2c:	sxtw	x8, w0
  42cb30:	cbz	x8, 42cb54 <property_get_seat+0x138>
  42cb34:	mov	w8, wzr
  42cb38:	mov	w0, w8
  42cb3c:	adrp	x1, 442000 <_fini+0x1c30>
  42cb40:	add	x1, x1, #0xf2
  42cb44:	ldr	x2, [sp, #32]
  42cb48:	mov	w3, #0x51                  	// #81
  42cb4c:	ldr	x4, [sp, #24]
  42cb50:	bl	406c68 <log_assert_failed_realm@plt>
  42cb54:	ldr	x8, [sp, #48]
  42cb58:	ldr	x8, [x8, #136]
  42cb5c:	cbz	x8, 42cb74 <property_get_seat+0x158>
  42cb60:	ldr	x8, [sp, #48]
  42cb64:	ldr	x0, [x8, #136]
  42cb68:	bl	428434 <seat_bus_path>
  42cb6c:	str	x0, [sp, #16]
  42cb70:	b	42cb84 <property_get_seat+0x168>
  42cb74:	adrp	x0, 447000 <_fini+0x6c30>
  42cb78:	add	x0, x0, #0xaa5
  42cb7c:	bl	407168 <strdup@plt>
  42cb80:	str	x0, [sp, #16]
  42cb84:	ldr	x8, [sp, #16]
  42cb88:	str	x8, [sp, #56]
  42cb8c:	ldr	x8, [sp, #56]
  42cb90:	cbnz	x8, 42cba8 <property_get_seat+0x18c>
  42cb94:	mov	w8, #0xfffffff4            	// #-12
  42cb98:	stur	w8, [x29, #-4]
  42cb9c:	mov	w8, #0x1                   	// #1
  42cba0:	str	w8, [sp, #44]
  42cba4:	b	42cc04 <property_get_seat+0x1e8>
  42cba8:	ldur	x0, [x29, #-48]
  42cbac:	ldr	x8, [sp, #48]
  42cbb0:	ldr	x8, [x8, #136]
  42cbb4:	str	x0, [sp, #8]
  42cbb8:	cbz	x8, 42cbd0 <property_get_seat+0x1b4>
  42cbbc:	ldr	x8, [sp, #48]
  42cbc0:	ldr	x8, [x8, #136]
  42cbc4:	ldr	x8, [x8, #8]
  42cbc8:	str	x8, [sp]
  42cbcc:	b	42cbdc <property_get_seat+0x1c0>
  42cbd0:	adrp	x8, 443000 <_fini+0x2c30>
  42cbd4:	add	x8, x8, #0x467
  42cbd8:	str	x8, [sp]
  42cbdc:	ldr	x8, [sp]
  42cbe0:	ldr	x3, [sp, #56]
  42cbe4:	ldr	x0, [sp, #8]
  42cbe8:	adrp	x1, 445000 <_fini+0x4c30>
  42cbec:	add	x1, x1, #0x2d8
  42cbf0:	mov	x2, x8
  42cbf4:	bl	407508 <sd_bus_message_append@plt>
  42cbf8:	stur	w0, [x29, #-4]
  42cbfc:	mov	w9, #0x1                   	// #1
  42cc00:	str	w9, [sp, #44]
  42cc04:	add	x0, sp, #0x38
  42cc08:	bl	42ed40 <freep>
  42cc0c:	ldur	w0, [x29, #-4]
  42cc10:	ldp	x29, x30, [sp, #128]
  42cc14:	add	sp, sp, #0x90
  42cc18:	ret

000000000042cc1c <property_get_type>:
  42cc1c:	sub	sp, sp, #0x70
  42cc20:	stp	x29, x30, [sp, #96]
  42cc24:	add	x29, sp, #0x60
  42cc28:	adrp	x8, 448000 <_fini+0x7c30>
  42cc2c:	add	x8, x8, #0x3df
  42cc30:	add	x8, x8, #0x3
  42cc34:	adrp	x9, 448000 <_fini+0x7c30>
  42cc38:	add	x9, x9, #0xab6
  42cc3c:	stur	x0, [x29, #-8]
  42cc40:	stur	x1, [x29, #-16]
  42cc44:	stur	x2, [x29, #-24]
  42cc48:	stur	x3, [x29, #-32]
  42cc4c:	stur	x4, [x29, #-40]
  42cc50:	str	x5, [sp, #48]
  42cc54:	str	x6, [sp, #40]
  42cc58:	ldr	x10, [sp, #48]
  42cc5c:	str	x10, [sp, #32]
  42cc60:	str	x8, [sp, #24]
  42cc64:	str	x9, [sp, #16]
  42cc68:	ldur	x8, [x29, #-8]
  42cc6c:	cmp	x8, #0x0
  42cc70:	cset	w9, ne  // ne = any
  42cc74:	mov	w10, #0x1                   	// #1
  42cc78:	eor	w9, w9, #0x1
  42cc7c:	eor	w9, w9, w10
  42cc80:	eor	w9, w9, w10
  42cc84:	and	w9, w9, #0x1
  42cc88:	mov	w0, w9
  42cc8c:	sxtw	x8, w0
  42cc90:	cbz	x8, 42ccb4 <property_get_type+0x98>
  42cc94:	mov	w8, wzr
  42cc98:	mov	w0, w8
  42cc9c:	adrp	x1, 444000 <_fini+0x3c30>
  42cca0:	add	x1, x1, #0x393
  42cca4:	ldr	x2, [sp, #24]
  42cca8:	mov	w3, #0x5a                  	// #90
  42ccac:	ldr	x4, [sp, #16]
  42ccb0:	bl	406c68 <log_assert_failed_realm@plt>
  42ccb4:	ldur	x8, [x29, #-40]
  42ccb8:	cmp	x8, #0x0
  42ccbc:	cset	w9, ne  // ne = any
  42ccc0:	mov	w10, #0x1                   	// #1
  42ccc4:	eor	w9, w9, #0x1
  42ccc8:	eor	w9, w9, w10
  42cccc:	eor	w9, w9, w10
  42ccd0:	and	w9, w9, #0x1
  42ccd4:	mov	w0, w9
  42ccd8:	sxtw	x8, w0
  42ccdc:	cbz	x8, 42cd00 <property_get_type+0xe4>
  42cce0:	mov	w8, wzr
  42cce4:	mov	w0, w8
  42cce8:	adrp	x1, 444000 <_fini+0x3c30>
  42ccec:	add	x1, x1, #0x417
  42ccf0:	ldr	x2, [sp, #24]
  42ccf4:	mov	w3, #0x5a                  	// #90
  42ccf8:	ldr	x4, [sp, #16]
  42ccfc:	bl	406c68 <log_assert_failed_realm@plt>
  42cd00:	ldr	x8, [sp, #32]
  42cd04:	cmp	x8, #0x0
  42cd08:	cset	w9, ne  // ne = any
  42cd0c:	mov	w10, #0x1                   	// #1
  42cd10:	eor	w9, w9, #0x1
  42cd14:	eor	w9, w9, w10
  42cd18:	eor	w9, w9, w10
  42cd1c:	and	w9, w9, #0x1
  42cd20:	mov	w0, w9
  42cd24:	sxtw	x8, w0
  42cd28:	cbz	x8, 42cd4c <property_get_type+0x130>
  42cd2c:	mov	w8, wzr
  42cd30:	mov	w0, w8
  42cd34:	adrp	x1, 441000 <_fini+0xc30>
  42cd38:	add	x1, x1, #0xd41
  42cd3c:	ldr	x2, [sp, #24]
  42cd40:	mov	w3, #0x5a                  	// #90
  42cd44:	ldr	x4, [sp, #16]
  42cd48:	bl	406c68 <log_assert_failed_realm@plt>
  42cd4c:	ldur	x0, [x29, #-40]
  42cd50:	ldr	x8, [sp, #32]
  42cd54:	ldr	w9, [x8]
  42cd58:	str	x0, [sp, #8]
  42cd5c:	mov	w0, w9
  42cd60:	bl	433620 <session_type_to_string>
  42cd64:	ldr	x8, [sp, #8]
  42cd68:	str	x0, [sp]
  42cd6c:	mov	x0, x8
  42cd70:	adrp	x1, 442000 <_fini+0x1c30>
  42cd74:	add	x1, x1, #0xf2
  42cd78:	ldr	x2, [sp]
  42cd7c:	bl	407508 <sd_bus_message_append@plt>
  42cd80:	ldp	x29, x30, [sp, #96]
  42cd84:	add	sp, sp, #0x70
  42cd88:	ret

000000000042cd8c <property_get_class>:
  42cd8c:	sub	sp, sp, #0x70
  42cd90:	stp	x29, x30, [sp, #96]
  42cd94:	add	x29, sp, #0x60
  42cd98:	adrp	x8, 448000 <_fini+0x7c30>
  42cd9c:	add	x8, x8, #0x3df
  42cda0:	add	x8, x8, #0x3
  42cda4:	adrp	x9, 448000 <_fini+0x7c30>
  42cda8:	add	x9, x9, #0xb2a
  42cdac:	stur	x0, [x29, #-8]
  42cdb0:	stur	x1, [x29, #-16]
  42cdb4:	stur	x2, [x29, #-24]
  42cdb8:	stur	x3, [x29, #-32]
  42cdbc:	stur	x4, [x29, #-40]
  42cdc0:	str	x5, [sp, #48]
  42cdc4:	str	x6, [sp, #40]
  42cdc8:	ldr	x10, [sp, #48]
  42cdcc:	str	x10, [sp, #32]
  42cdd0:	str	x8, [sp, #24]
  42cdd4:	str	x9, [sp, #16]
  42cdd8:	ldur	x8, [x29, #-8]
  42cddc:	cmp	x8, #0x0
  42cde0:	cset	w9, ne  // ne = any
  42cde4:	mov	w10, #0x1                   	// #1
  42cde8:	eor	w9, w9, #0x1
  42cdec:	eor	w9, w9, w10
  42cdf0:	eor	w9, w9, w10
  42cdf4:	and	w9, w9, #0x1
  42cdf8:	mov	w0, w9
  42cdfc:	sxtw	x8, w0
  42ce00:	cbz	x8, 42ce24 <property_get_class+0x98>
  42ce04:	mov	w8, wzr
  42ce08:	mov	w0, w8
  42ce0c:	adrp	x1, 444000 <_fini+0x3c30>
  42ce10:	add	x1, x1, #0x393
  42ce14:	ldr	x2, [sp, #24]
  42ce18:	mov	w3, #0x5b                  	// #91
  42ce1c:	ldr	x4, [sp, #16]
  42ce20:	bl	406c68 <log_assert_failed_realm@plt>
  42ce24:	ldur	x8, [x29, #-40]
  42ce28:	cmp	x8, #0x0
  42ce2c:	cset	w9, ne  // ne = any
  42ce30:	mov	w10, #0x1                   	// #1
  42ce34:	eor	w9, w9, #0x1
  42ce38:	eor	w9, w9, w10
  42ce3c:	eor	w9, w9, w10
  42ce40:	and	w9, w9, #0x1
  42ce44:	mov	w0, w9
  42ce48:	sxtw	x8, w0
  42ce4c:	cbz	x8, 42ce70 <property_get_class+0xe4>
  42ce50:	mov	w8, wzr
  42ce54:	mov	w0, w8
  42ce58:	adrp	x1, 444000 <_fini+0x3c30>
  42ce5c:	add	x1, x1, #0x417
  42ce60:	ldr	x2, [sp, #24]
  42ce64:	mov	w3, #0x5b                  	// #91
  42ce68:	ldr	x4, [sp, #16]
  42ce6c:	bl	406c68 <log_assert_failed_realm@plt>
  42ce70:	ldr	x8, [sp, #32]
  42ce74:	cmp	x8, #0x0
  42ce78:	cset	w9, ne  // ne = any
  42ce7c:	mov	w10, #0x1                   	// #1
  42ce80:	eor	w9, w9, #0x1
  42ce84:	eor	w9, w9, w10
  42ce88:	eor	w9, w9, w10
  42ce8c:	and	w9, w9, #0x1
  42ce90:	mov	w0, w9
  42ce94:	sxtw	x8, w0
  42ce98:	cbz	x8, 42cebc <property_get_class+0x130>
  42ce9c:	mov	w8, wzr
  42cea0:	mov	w0, w8
  42cea4:	adrp	x1, 441000 <_fini+0xc30>
  42cea8:	add	x1, x1, #0xd41
  42ceac:	ldr	x2, [sp, #24]
  42ceb0:	mov	w3, #0x5b                  	// #91
  42ceb4:	ldr	x4, [sp, #16]
  42ceb8:	bl	406c68 <log_assert_failed_realm@plt>
  42cebc:	ldur	x0, [x29, #-40]
  42cec0:	ldr	x8, [sp, #32]
  42cec4:	ldr	w9, [x8]
  42cec8:	str	x0, [sp, #8]
  42cecc:	mov	w0, w9
  42ced0:	bl	43367c <session_class_to_string>
  42ced4:	ldr	x8, [sp, #8]
  42ced8:	str	x0, [sp]
  42cedc:	mov	x0, x8
  42cee0:	adrp	x1, 442000 <_fini+0x1c30>
  42cee4:	add	x1, x1, #0xf2
  42cee8:	ldr	x2, [sp]
  42ceec:	bl	407508 <sd_bus_message_append@plt>
  42cef0:	ldp	x29, x30, [sp, #96]
  42cef4:	add	sp, sp, #0x70
  42cef8:	ret

000000000042cefc <property_get_active>:
  42cefc:	sub	sp, sp, #0x70
  42cf00:	stp	x29, x30, [sp, #96]
  42cf04:	add	x29, sp, #0x60
  42cf08:	adrp	x8, 448000 <_fini+0x7c30>
  42cf0c:	add	x8, x8, #0x3df
  42cf10:	add	x8, x8, #0x3
  42cf14:	adrp	x9, 448000 <_fini+0x7c30>
  42cf18:	add	x9, x9, #0xb9f
  42cf1c:	stur	x0, [x29, #-8]
  42cf20:	stur	x1, [x29, #-16]
  42cf24:	stur	x2, [x29, #-24]
  42cf28:	stur	x3, [x29, #-32]
  42cf2c:	stur	x4, [x29, #-40]
  42cf30:	str	x5, [sp, #48]
  42cf34:	str	x6, [sp, #40]
  42cf38:	ldr	x10, [sp, #48]
  42cf3c:	str	x10, [sp, #32]
  42cf40:	str	x8, [sp, #24]
  42cf44:	str	x9, [sp, #16]
  42cf48:	ldur	x8, [x29, #-8]
  42cf4c:	cmp	x8, #0x0
  42cf50:	cset	w9, ne  // ne = any
  42cf54:	mov	w10, #0x1                   	// #1
  42cf58:	eor	w9, w9, #0x1
  42cf5c:	eor	w9, w9, w10
  42cf60:	eor	w9, w9, w10
  42cf64:	and	w9, w9, #0x1
  42cf68:	mov	w0, w9
  42cf6c:	sxtw	x8, w0
  42cf70:	cbz	x8, 42cf94 <property_get_active+0x98>
  42cf74:	mov	w8, wzr
  42cf78:	mov	w0, w8
  42cf7c:	adrp	x1, 444000 <_fini+0x3c30>
  42cf80:	add	x1, x1, #0x393
  42cf84:	ldr	x2, [sp, #24]
  42cf88:	mov	w3, #0x5c                  	// #92
  42cf8c:	ldr	x4, [sp, #16]
  42cf90:	bl	406c68 <log_assert_failed_realm@plt>
  42cf94:	ldur	x8, [x29, #-40]
  42cf98:	cmp	x8, #0x0
  42cf9c:	cset	w9, ne  // ne = any
  42cfa0:	mov	w10, #0x1                   	// #1
  42cfa4:	eor	w9, w9, #0x1
  42cfa8:	eor	w9, w9, w10
  42cfac:	eor	w9, w9, w10
  42cfb0:	and	w9, w9, #0x1
  42cfb4:	mov	w0, w9
  42cfb8:	sxtw	x8, w0
  42cfbc:	cbz	x8, 42cfe0 <property_get_active+0xe4>
  42cfc0:	mov	w8, wzr
  42cfc4:	mov	w0, w8
  42cfc8:	adrp	x1, 444000 <_fini+0x3c30>
  42cfcc:	add	x1, x1, #0x417
  42cfd0:	ldr	x2, [sp, #24]
  42cfd4:	mov	w3, #0x5c                  	// #92
  42cfd8:	ldr	x4, [sp, #16]
  42cfdc:	bl	406c68 <log_assert_failed_realm@plt>
  42cfe0:	ldr	x8, [sp, #32]
  42cfe4:	cmp	x8, #0x0
  42cfe8:	cset	w9, ne  // ne = any
  42cfec:	mov	w10, #0x1                   	// #1
  42cff0:	eor	w9, w9, #0x1
  42cff4:	eor	w9, w9, w10
  42cff8:	eor	w9, w9, w10
  42cffc:	and	w9, w9, #0x1
  42d000:	mov	w0, w9
  42d004:	sxtw	x8, w0
  42d008:	cbz	x8, 42d02c <property_get_active+0x130>
  42d00c:	mov	w8, wzr
  42d010:	mov	w0, w8
  42d014:	adrp	x1, 441000 <_fini+0xc30>
  42d018:	add	x1, x1, #0xd41
  42d01c:	ldr	x2, [sp, #24]
  42d020:	mov	w3, #0x5c                  	// #92
  42d024:	ldr	x4, [sp, #16]
  42d028:	bl	406c68 <log_assert_failed_realm@plt>
  42d02c:	ldur	x0, [x29, #-40]
  42d030:	ldr	x8, [sp, #32]
  42d034:	str	x0, [sp, #8]
  42d038:	mov	x0, x8
  42d03c:	bl	433408 <session_is_active>
  42d040:	and	w2, w0, #0x1
  42d044:	ldr	x0, [sp, #8]
  42d048:	adrp	x1, 441000 <_fini+0xc30>
  42d04c:	add	x1, x1, #0xe0e
  42d050:	bl	407508 <sd_bus_message_append@plt>
  42d054:	ldp	x29, x30, [sp, #96]
  42d058:	add	sp, sp, #0x70
  42d05c:	ret

000000000042d060 <property_get_state>:
  42d060:	sub	sp, sp, #0x70
  42d064:	stp	x29, x30, [sp, #96]
  42d068:	add	x29, sp, #0x60
  42d06c:	adrp	x8, 448000 <_fini+0x7c30>
  42d070:	add	x8, x8, #0x3df
  42d074:	add	x8, x8, #0x3
  42d078:	adrp	x9, 448000 <_fini+0x7c30>
  42d07c:	add	x9, x9, #0xc15
  42d080:	stur	x0, [x29, #-8]
  42d084:	stur	x1, [x29, #-16]
  42d088:	stur	x2, [x29, #-24]
  42d08c:	stur	x3, [x29, #-32]
  42d090:	stur	x4, [x29, #-40]
  42d094:	str	x5, [sp, #48]
  42d098:	str	x6, [sp, #40]
  42d09c:	ldr	x10, [sp, #48]
  42d0a0:	str	x10, [sp, #32]
  42d0a4:	str	x8, [sp, #24]
  42d0a8:	str	x9, [sp, #16]
  42d0ac:	ldur	x8, [x29, #-8]
  42d0b0:	cmp	x8, #0x0
  42d0b4:	cset	w9, ne  // ne = any
  42d0b8:	mov	w10, #0x1                   	// #1
  42d0bc:	eor	w9, w9, #0x1
  42d0c0:	eor	w9, w9, w10
  42d0c4:	eor	w9, w9, w10
  42d0c8:	and	w9, w9, #0x1
  42d0cc:	mov	w0, w9
  42d0d0:	sxtw	x8, w0
  42d0d4:	cbz	x8, 42d0f8 <property_get_state+0x98>
  42d0d8:	mov	w8, wzr
  42d0dc:	mov	w0, w8
  42d0e0:	adrp	x1, 444000 <_fini+0x3c30>
  42d0e4:	add	x1, x1, #0x393
  42d0e8:	ldr	x2, [sp, #24]
  42d0ec:	mov	w3, #0x5d                  	// #93
  42d0f0:	ldr	x4, [sp, #16]
  42d0f4:	bl	406c68 <log_assert_failed_realm@plt>
  42d0f8:	ldur	x8, [x29, #-40]
  42d0fc:	cmp	x8, #0x0
  42d100:	cset	w9, ne  // ne = any
  42d104:	mov	w10, #0x1                   	// #1
  42d108:	eor	w9, w9, #0x1
  42d10c:	eor	w9, w9, w10
  42d110:	eor	w9, w9, w10
  42d114:	and	w9, w9, #0x1
  42d118:	mov	w0, w9
  42d11c:	sxtw	x8, w0
  42d120:	cbz	x8, 42d144 <property_get_state+0xe4>
  42d124:	mov	w8, wzr
  42d128:	mov	w0, w8
  42d12c:	adrp	x1, 444000 <_fini+0x3c30>
  42d130:	add	x1, x1, #0x417
  42d134:	ldr	x2, [sp, #24]
  42d138:	mov	w3, #0x5d                  	// #93
  42d13c:	ldr	x4, [sp, #16]
  42d140:	bl	406c68 <log_assert_failed_realm@plt>
  42d144:	ldr	x8, [sp, #32]
  42d148:	cmp	x8, #0x0
  42d14c:	cset	w9, ne  // ne = any
  42d150:	mov	w10, #0x1                   	// #1
  42d154:	eor	w9, w9, #0x1
  42d158:	eor	w9, w9, w10
  42d15c:	eor	w9, w9, w10
  42d160:	and	w9, w9, #0x1
  42d164:	mov	w0, w9
  42d168:	sxtw	x8, w0
  42d16c:	cbz	x8, 42d190 <property_get_state+0x130>
  42d170:	mov	w8, wzr
  42d174:	mov	w0, w8
  42d178:	adrp	x1, 441000 <_fini+0xc30>
  42d17c:	add	x1, x1, #0xd41
  42d180:	ldr	x2, [sp, #24]
  42d184:	mov	w3, #0x5d                  	// #93
  42d188:	ldr	x4, [sp, #16]
  42d18c:	bl	406c68 <log_assert_failed_realm@plt>
  42d190:	ldur	x0, [x29, #-40]
  42d194:	ldr	x8, [sp, #32]
  42d198:	str	x0, [sp, #8]
  42d19c:	mov	x0, x8
  42d1a0:	bl	433524 <session_get_state>
  42d1a4:	bl	4334c8 <session_state_to_string>
  42d1a8:	ldr	x8, [sp, #8]
  42d1ac:	str	x0, [sp]
  42d1b0:	mov	x0, x8
  42d1b4:	adrp	x1, 442000 <_fini+0x1c30>
  42d1b8:	add	x1, x1, #0xf2
  42d1bc:	ldr	x2, [sp]
  42d1c0:	bl	407508 <sd_bus_message_append@plt>
  42d1c4:	ldp	x29, x30, [sp, #96]
  42d1c8:	add	sp, sp, #0x70
  42d1cc:	ret

000000000042d1d0 <property_get_idle_hint>:
  42d1d0:	sub	sp, sp, #0x70
  42d1d4:	stp	x29, x30, [sp, #96]
  42d1d8:	add	x29, sp, #0x60
  42d1dc:	adrp	x8, 448000 <_fini+0x7c30>
  42d1e0:	add	x8, x8, #0x3df
  42d1e4:	add	x8, x8, #0x3
  42d1e8:	adrp	x9, 444000 <_fini+0x3c30>
  42d1ec:	add	x9, x9, #0xaf7
  42d1f0:	stur	x0, [x29, #-8]
  42d1f4:	stur	x1, [x29, #-16]
  42d1f8:	stur	x2, [x29, #-24]
  42d1fc:	stur	x3, [x29, #-32]
  42d200:	stur	x4, [x29, #-40]
  42d204:	str	x5, [sp, #48]
  42d208:	str	x6, [sp, #40]
  42d20c:	ldr	x10, [sp, #48]
  42d210:	str	x10, [sp, #32]
  42d214:	str	x8, [sp, #24]
  42d218:	str	x9, [sp, #16]
  42d21c:	ldur	x8, [x29, #-8]
  42d220:	cmp	x8, #0x0
  42d224:	cset	w9, ne  // ne = any
  42d228:	mov	w10, #0x1                   	// #1
  42d22c:	eor	w9, w9, #0x1
  42d230:	eor	w9, w9, w10
  42d234:	eor	w9, w9, w10
  42d238:	and	w9, w9, #0x1
  42d23c:	mov	w0, w9
  42d240:	sxtw	x8, w0
  42d244:	cbz	x8, 42d268 <property_get_idle_hint+0x98>
  42d248:	mov	w8, wzr
  42d24c:	mov	w0, w8
  42d250:	adrp	x1, 444000 <_fini+0x3c30>
  42d254:	add	x1, x1, #0x393
  42d258:	ldr	x2, [sp, #24]
  42d25c:	mov	w3, #0x6a                  	// #106
  42d260:	ldr	x4, [sp, #16]
  42d264:	bl	406c68 <log_assert_failed_realm@plt>
  42d268:	ldur	x8, [x29, #-40]
  42d26c:	cmp	x8, #0x0
  42d270:	cset	w9, ne  // ne = any
  42d274:	mov	w10, #0x1                   	// #1
  42d278:	eor	w9, w9, #0x1
  42d27c:	eor	w9, w9, w10
  42d280:	eor	w9, w9, w10
  42d284:	and	w9, w9, #0x1
  42d288:	mov	w0, w9
  42d28c:	sxtw	x8, w0
  42d290:	cbz	x8, 42d2b4 <property_get_idle_hint+0xe4>
  42d294:	mov	w8, wzr
  42d298:	mov	w0, w8
  42d29c:	adrp	x1, 444000 <_fini+0x3c30>
  42d2a0:	add	x1, x1, #0x417
  42d2a4:	ldr	x2, [sp, #24]
  42d2a8:	mov	w3, #0x6b                  	// #107
  42d2ac:	ldr	x4, [sp, #16]
  42d2b0:	bl	406c68 <log_assert_failed_realm@plt>
  42d2b4:	ldr	x8, [sp, #32]
  42d2b8:	cmp	x8, #0x0
  42d2bc:	cset	w9, ne  // ne = any
  42d2c0:	mov	w10, #0x1                   	// #1
  42d2c4:	eor	w9, w9, #0x1
  42d2c8:	eor	w9, w9, w10
  42d2cc:	eor	w9, w9, w10
  42d2d0:	and	w9, w9, #0x1
  42d2d4:	mov	w0, w9
  42d2d8:	sxtw	x8, w0
  42d2dc:	cbz	x8, 42d300 <property_get_idle_hint+0x130>
  42d2e0:	mov	w8, wzr
  42d2e4:	mov	w0, w8
  42d2e8:	adrp	x1, 442000 <_fini+0x1c30>
  42d2ec:	add	x1, x1, #0xf2
  42d2f0:	ldr	x2, [sp, #24]
  42d2f4:	mov	w3, #0x6c                  	// #108
  42d2f8:	ldr	x4, [sp, #16]
  42d2fc:	bl	406c68 <log_assert_failed_realm@plt>
  42d300:	ldur	x0, [x29, #-40]
  42d304:	ldr	x8, [sp, #32]
  42d308:	str	x0, [sp, #8]
  42d30c:	mov	x0, x8
  42d310:	mov	x8, xzr
  42d314:	mov	x1, x8
  42d318:	bl	4366ac <session_get_idle_hint>
  42d31c:	cmp	w0, #0x0
  42d320:	cset	w9, gt
  42d324:	and	w2, w9, #0x1
  42d328:	ldr	x0, [sp, #8]
  42d32c:	adrp	x1, 441000 <_fini+0xc30>
  42d330:	add	x1, x1, #0xe0e
  42d334:	bl	407508 <sd_bus_message_append@plt>
  42d338:	ldp	x29, x30, [sp, #96]
  42d33c:	add	sp, sp, #0x70
  42d340:	ret

000000000042d344 <property_get_idle_since_hint>:
  42d344:	sub	sp, sp, #0x90
  42d348:	stp	x29, x30, [sp, #128]
  42d34c:	add	x29, sp, #0x80
  42d350:	adrp	x8, 448000 <_fini+0x7c30>
  42d354:	add	x8, x8, #0x3df
  42d358:	add	x8, x8, #0x3
  42d35c:	adrp	x9, 444000 <_fini+0x3c30>
  42d360:	add	x9, x9, #0xb70
  42d364:	stur	x0, [x29, #-16]
  42d368:	stur	x1, [x29, #-24]
  42d36c:	stur	x2, [x29, #-32]
  42d370:	stur	x3, [x29, #-40]
  42d374:	stur	x4, [x29, #-48]
  42d378:	stur	x5, [x29, #-56]
  42d37c:	str	x6, [sp, #64]
  42d380:	ldur	x10, [x29, #-56]
  42d384:	str	x10, [sp, #56]
  42d388:	str	xzr, [sp, #40]
  42d38c:	str	xzr, [sp, #48]
  42d390:	str	x8, [sp, #16]
  42d394:	str	x9, [sp, #8]
  42d398:	ldur	x8, [x29, #-16]
  42d39c:	cmp	x8, #0x0
  42d3a0:	cset	w9, ne  // ne = any
  42d3a4:	mov	w10, #0x1                   	// #1
  42d3a8:	eor	w9, w9, #0x1
  42d3ac:	eor	w9, w9, w10
  42d3b0:	eor	w9, w9, w10
  42d3b4:	and	w9, w9, #0x1
  42d3b8:	mov	w0, w9
  42d3bc:	sxtw	x8, w0
  42d3c0:	cbz	x8, 42d3e4 <property_get_idle_since_hint+0xa0>
  42d3c4:	mov	w8, wzr
  42d3c8:	mov	w0, w8
  42d3cc:	adrp	x1, 444000 <_fini+0x3c30>
  42d3d0:	add	x1, x1, #0x393
  42d3d4:	ldr	x2, [sp, #16]
  42d3d8:	mov	w3, #0x7f                  	// #127
  42d3dc:	ldr	x4, [sp, #8]
  42d3e0:	bl	406c68 <log_assert_failed_realm@plt>
  42d3e4:	ldur	x8, [x29, #-48]
  42d3e8:	cmp	x8, #0x0
  42d3ec:	cset	w9, ne  // ne = any
  42d3f0:	mov	w10, #0x1                   	// #1
  42d3f4:	eor	w9, w9, #0x1
  42d3f8:	eor	w9, w9, w10
  42d3fc:	eor	w9, w9, w10
  42d400:	and	w9, w9, #0x1
  42d404:	mov	w0, w9
  42d408:	sxtw	x8, w0
  42d40c:	cbz	x8, 42d430 <property_get_idle_since_hint+0xec>
  42d410:	mov	w8, wzr
  42d414:	mov	w0, w8
  42d418:	adrp	x1, 444000 <_fini+0x3c30>
  42d41c:	add	x1, x1, #0x417
  42d420:	ldr	x2, [sp, #16]
  42d424:	mov	w3, #0x80                  	// #128
  42d428:	ldr	x4, [sp, #8]
  42d42c:	bl	406c68 <log_assert_failed_realm@plt>
  42d430:	ldr	x8, [sp, #56]
  42d434:	cmp	x8, #0x0
  42d438:	cset	w9, ne  // ne = any
  42d43c:	mov	w10, #0x1                   	// #1
  42d440:	eor	w9, w9, #0x1
  42d444:	eor	w9, w9, w10
  42d448:	eor	w9, w9, w10
  42d44c:	and	w9, w9, #0x1
  42d450:	mov	w0, w9
  42d454:	sxtw	x8, w0
  42d458:	cbz	x8, 42d47c <property_get_idle_since_hint+0x138>
  42d45c:	mov	w8, wzr
  42d460:	mov	w0, w8
  42d464:	adrp	x1, 442000 <_fini+0x1c30>
  42d468:	add	x1, x1, #0xf2
  42d46c:	ldr	x2, [sp, #16]
  42d470:	mov	w3, #0x81                  	// #129
  42d474:	ldr	x4, [sp, #8]
  42d478:	bl	406c68 <log_assert_failed_realm@plt>
  42d47c:	ldr	x0, [sp, #56]
  42d480:	add	x1, sp, #0x28
  42d484:	bl	4366ac <session_get_idle_hint>
  42d488:	str	w0, [sp, #28]
  42d48c:	ldr	w8, [sp, #28]
  42d490:	cmp	w8, #0x0
  42d494:	cset	w8, ge  // ge = tcont
  42d498:	tbnz	w8, #0, 42d4a8 <property_get_idle_since_hint+0x164>
  42d49c:	ldr	w8, [sp, #28]
  42d4a0:	stur	w8, [x29, #-4]
  42d4a4:	b	42d4f0 <property_get_idle_since_hint+0x1ac>
  42d4a8:	ldur	x0, [x29, #-40]
  42d4ac:	adrp	x1, 443000 <_fini+0x2c30>
  42d4b0:	add	x1, x1, #0x285
  42d4b4:	bl	407158 <strcmp@plt>
  42d4b8:	cbnz	w0, 42d4c8 <property_get_idle_since_hint+0x184>
  42d4bc:	ldr	x8, [sp, #40]
  42d4c0:	str	x8, [sp]
  42d4c4:	b	42d4d0 <property_get_idle_since_hint+0x18c>
  42d4c8:	ldr	x8, [sp, #48]
  42d4cc:	str	x8, [sp]
  42d4d0:	ldr	x8, [sp]
  42d4d4:	str	x8, [sp, #32]
  42d4d8:	ldur	x0, [x29, #-48]
  42d4dc:	ldr	x2, [sp, #32]
  42d4e0:	adrp	x1, 443000 <_fini+0x2c30>
  42d4e4:	add	x1, x1, #0x250
  42d4e8:	bl	407508 <sd_bus_message_append@plt>
  42d4ec:	stur	w0, [x29, #-4]
  42d4f0:	ldur	w0, [x29, #-4]
  42d4f4:	ldp	x29, x30, [sp, #128]
  42d4f8:	add	sp, sp, #0x90
  42d4fc:	ret

000000000042d500 <property_get_locked_hint>:
  42d500:	sub	sp, sp, #0x70
  42d504:	stp	x29, x30, [sp, #96]
  42d508:	add	x29, sp, #0x60
  42d50c:	adrp	x8, 448000 <_fini+0x7c30>
  42d510:	add	x8, x8, #0x3df
  42d514:	add	x8, x8, #0x3
  42d518:	adrp	x9, 448000 <_fini+0x7c30>
  42d51c:	add	x9, x9, #0xc8a
  42d520:	stur	x0, [x29, #-8]
  42d524:	stur	x1, [x29, #-16]
  42d528:	stur	x2, [x29, #-24]
  42d52c:	stur	x3, [x29, #-32]
  42d530:	stur	x4, [x29, #-40]
  42d534:	str	x5, [sp, #48]
  42d538:	str	x6, [sp, #40]
  42d53c:	ldr	x10, [sp, #48]
  42d540:	str	x10, [sp, #32]
  42d544:	str	x8, [sp, #24]
  42d548:	str	x9, [sp, #16]
  42d54c:	ldur	x8, [x29, #-8]
  42d550:	cmp	x8, #0x0
  42d554:	cset	w9, ne  // ne = any
  42d558:	mov	w10, #0x1                   	// #1
  42d55c:	eor	w9, w9, #0x1
  42d560:	eor	w9, w9, w10
  42d564:	eor	w9, w9, w10
  42d568:	and	w9, w9, #0x1
  42d56c:	mov	w0, w9
  42d570:	sxtw	x8, w0
  42d574:	cbz	x8, 42d598 <property_get_locked_hint+0x98>
  42d578:	mov	w8, wzr
  42d57c:	mov	w0, w8
  42d580:	adrp	x1, 444000 <_fini+0x3c30>
  42d584:	add	x1, x1, #0x393
  42d588:	ldr	x2, [sp, #24]
  42d58c:	mov	w3, #0x97                  	// #151
  42d590:	ldr	x4, [sp, #16]
  42d594:	bl	406c68 <log_assert_failed_realm@plt>
  42d598:	ldur	x8, [x29, #-40]
  42d59c:	cmp	x8, #0x0
  42d5a0:	cset	w9, ne  // ne = any
  42d5a4:	mov	w10, #0x1                   	// #1
  42d5a8:	eor	w9, w9, #0x1
  42d5ac:	eor	w9, w9, w10
  42d5b0:	eor	w9, w9, w10
  42d5b4:	and	w9, w9, #0x1
  42d5b8:	mov	w0, w9
  42d5bc:	sxtw	x8, w0
  42d5c0:	cbz	x8, 42d5e4 <property_get_locked_hint+0xe4>
  42d5c4:	mov	w8, wzr
  42d5c8:	mov	w0, w8
  42d5cc:	adrp	x1, 444000 <_fini+0x3c30>
  42d5d0:	add	x1, x1, #0x417
  42d5d4:	ldr	x2, [sp, #24]
  42d5d8:	mov	w3, #0x98                  	// #152
  42d5dc:	ldr	x4, [sp, #16]
  42d5e0:	bl	406c68 <log_assert_failed_realm@plt>
  42d5e4:	ldr	x8, [sp, #32]
  42d5e8:	cmp	x8, #0x0
  42d5ec:	cset	w9, ne  // ne = any
  42d5f0:	mov	w10, #0x1                   	// #1
  42d5f4:	eor	w9, w9, #0x1
  42d5f8:	eor	w9, w9, w10
  42d5fc:	eor	w9, w9, w10
  42d600:	and	w9, w9, #0x1
  42d604:	mov	w0, w9
  42d608:	sxtw	x8, w0
  42d60c:	cbz	x8, 42d630 <property_get_locked_hint+0x130>
  42d610:	mov	w8, wzr
  42d614:	mov	w0, w8
  42d618:	adrp	x1, 442000 <_fini+0x1c30>
  42d61c:	add	x1, x1, #0xf2
  42d620:	ldr	x2, [sp, #24]
  42d624:	mov	w3, #0x99                  	// #153
  42d628:	ldr	x4, [sp, #16]
  42d62c:	bl	406c68 <log_assert_failed_realm@plt>
  42d630:	ldur	x0, [x29, #-40]
  42d634:	ldr	x8, [sp, #32]
  42d638:	str	x0, [sp, #8]
  42d63c:	mov	x0, x8
  42d640:	bl	436d48 <session_get_locked_hint>
  42d644:	cmp	w0, #0x0
  42d648:	cset	w9, gt
  42d64c:	and	w2, w9, #0x1
  42d650:	ldr	x0, [sp, #8]
  42d654:	adrp	x1, 441000 <_fini+0xc30>
  42d658:	add	x1, x1, #0xe0e
  42d65c:	bl	407508 <sd_bus_message_append@plt>
  42d660:	ldp	x29, x30, [sp, #96]
  42d664:	add	sp, sp, #0x70
  42d668:	ret

000000000042d66c <method_set_idle_hint>:
  42d66c:	sub	sp, sp, #0x60
  42d670:	stp	x29, x30, [sp, #80]
  42d674:	add	x29, sp, #0x50
  42d678:	mov	x8, xzr
  42d67c:	adrp	x9, 448000 <_fini+0x7c30>
  42d680:	add	x9, x9, #0x3df
  42d684:	add	x9, x9, #0x3
  42d688:	stur	x0, [x29, #-16]
  42d68c:	stur	x1, [x29, #-24]
  42d690:	stur	x2, [x29, #-32]
  42d694:	str	x8, [sp, #40]
  42d698:	ldur	x8, [x29, #-24]
  42d69c:	str	x8, [sp, #32]
  42d6a0:	str	x9, [sp, #8]
  42d6a4:	ldur	x8, [x29, #-16]
  42d6a8:	cmp	x8, #0x0
  42d6ac:	cset	w9, ne  // ne = any
  42d6b0:	mov	w10, #0x1                   	// #1
  42d6b4:	eor	w9, w9, #0x1
  42d6b8:	eor	w9, w9, w10
  42d6bc:	eor	w9, w9, w10
  42d6c0:	and	w9, w9, #0x1
  42d6c4:	mov	w0, w9
  42d6c8:	sxtw	x8, w0
  42d6cc:	cbz	x8, 42d6f4 <method_set_idle_hint+0x88>
  42d6d0:	mov	w8, wzr
  42d6d4:	mov	w0, w8
  42d6d8:	adrp	x1, 443000 <_fini+0x2c30>
  42d6dc:	add	x1, x1, #0x812
  42d6e0:	ldr	x2, [sp, #8]
  42d6e4:	mov	w3, #0xea                  	// #234
  42d6e8:	adrp	x4, 448000 <_fini+0x7c30>
  42d6ec:	add	x4, x4, #0xd05
  42d6f0:	bl	406c68 <log_assert_failed_realm@plt>
  42d6f4:	ldr	x8, [sp, #32]
  42d6f8:	cmp	x8, #0x0
  42d6fc:	cset	w9, ne  // ne = any
  42d700:	mov	w10, #0x1                   	// #1
  42d704:	eor	w9, w9, #0x1
  42d708:	eor	w9, w9, w10
  42d70c:	eor	w9, w9, w10
  42d710:	and	w9, w9, #0x1
  42d714:	mov	w0, w9
  42d718:	sxtw	x8, w0
  42d71c:	cbz	x8, 42d744 <method_set_idle_hint+0xd8>
  42d720:	mov	w8, wzr
  42d724:	mov	w0, w8
  42d728:	adrp	x1, 442000 <_fini+0x1c30>
  42d72c:	add	x1, x1, #0xf2
  42d730:	ldr	x2, [sp, #8]
  42d734:	mov	w3, #0xeb                  	// #235
  42d738:	adrp	x4, 448000 <_fini+0x7c30>
  42d73c:	add	x4, x4, #0xd05
  42d740:	bl	406c68 <log_assert_failed_realm@plt>
  42d744:	ldur	x0, [x29, #-16]
  42d748:	adrp	x1, 441000 <_fini+0xc30>
  42d74c:	add	x1, x1, #0xe0e
  42d750:	add	x2, sp, #0x14
  42d754:	bl	4074c8 <sd_bus_message_read@plt>
  42d758:	str	w0, [sp, #24]
  42d75c:	ldr	w8, [sp, #24]
  42d760:	cmp	w8, #0x0
  42d764:	cset	w8, ge  // ge = tcont
  42d768:	tbnz	w8, #0, 42d780 <method_set_idle_hint+0x114>
  42d76c:	ldr	w8, [sp, #24]
  42d770:	stur	w8, [x29, #-4]
  42d774:	mov	w8, #0x1                   	// #1
  42d778:	str	w8, [sp, #16]
  42d77c:	b	42d868 <method_set_idle_hint+0x1fc>
  42d780:	ldur	x0, [x29, #-16]
  42d784:	mov	x1, #0x10                  	// #16
  42d788:	add	x2, sp, #0x28
  42d78c:	bl	407478 <sd_bus_query_sender_creds@plt>
  42d790:	str	w0, [sp, #24]
  42d794:	ldr	w8, [sp, #24]
  42d798:	cmp	w8, #0x0
  42d79c:	cset	w8, ge  // ge = tcont
  42d7a0:	tbnz	w8, #0, 42d7b8 <method_set_idle_hint+0x14c>
  42d7a4:	ldr	w8, [sp, #24]
  42d7a8:	stur	w8, [x29, #-4]
  42d7ac:	mov	w8, #0x1                   	// #1
  42d7b0:	str	w8, [sp, #16]
  42d7b4:	b	42d868 <method_set_idle_hint+0x1fc>
  42d7b8:	ldr	x0, [sp, #40]
  42d7bc:	add	x1, sp, #0x1c
  42d7c0:	bl	407698 <sd_bus_creds_get_euid@plt>
  42d7c4:	str	w0, [sp, #24]
  42d7c8:	ldr	w8, [sp, #24]
  42d7cc:	cmp	w8, #0x0
  42d7d0:	cset	w8, ge  // ge = tcont
  42d7d4:	tbnz	w8, #0, 42d7ec <method_set_idle_hint+0x180>
  42d7d8:	ldr	w8, [sp, #24]
  42d7dc:	stur	w8, [x29, #-4]
  42d7e0:	mov	w8, #0x1                   	// #1
  42d7e4:	str	w8, [sp, #16]
  42d7e8:	b	42d868 <method_set_idle_hint+0x1fc>
  42d7ec:	ldr	w8, [sp, #28]
  42d7f0:	cbz	w8, 42d834 <method_set_idle_hint+0x1c8>
  42d7f4:	ldr	w8, [sp, #28]
  42d7f8:	ldr	x9, [sp, #32]
  42d7fc:	ldr	x9, [x9, #40]
  42d800:	ldr	w10, [x9, #8]
  42d804:	cmp	w8, w10
  42d808:	b.eq	42d834 <method_set_idle_hint+0x1c8>  // b.none
  42d80c:	ldur	x0, [x29, #-32]
  42d810:	adrp	x1, 448000 <_fini+0x7c30>
  42d814:	add	x1, x1, #0xd48
  42d818:	adrp	x2, 448000 <_fini+0x7c30>
  42d81c:	add	x2, x2, #0xd70
  42d820:	bl	407468 <sd_bus_error_setf@plt>
  42d824:	stur	w0, [x29, #-4]
  42d828:	mov	w8, #0x1                   	// #1
  42d82c:	str	w8, [sp, #16]
  42d830:	b	42d868 <method_set_idle_hint+0x1fc>
  42d834:	ldr	x0, [sp, #32]
  42d838:	ldr	w8, [sp, #20]
  42d83c:	cmp	w8, #0x0
  42d840:	cset	w8, ne  // ne = any
  42d844:	and	w1, w8, #0x1
  42d848:	bl	436bd4 <session_set_idle_hint>
  42d84c:	ldur	x0, [x29, #-16]
  42d850:	mov	x9, xzr
  42d854:	mov	x1, x9
  42d858:	bl	4075b8 <sd_bus_reply_method_return@plt>
  42d85c:	stur	w0, [x29, #-4]
  42d860:	mov	w8, #0x1                   	// #1
  42d864:	str	w8, [sp, #16]
  42d868:	add	x0, sp, #0x28
  42d86c:	bl	42f320 <sd_bus_creds_unrefp>
  42d870:	ldur	w0, [x29, #-4]
  42d874:	ldp	x29, x30, [sp, #80]
  42d878:	add	sp, sp, #0x60
  42d87c:	ret

000000000042d880 <method_set_locked_hint>:
  42d880:	sub	sp, sp, #0x60
  42d884:	stp	x29, x30, [sp, #80]
  42d888:	add	x29, sp, #0x50
  42d88c:	mov	x8, xzr
  42d890:	adrp	x9, 448000 <_fini+0x7c30>
  42d894:	add	x9, x9, #0x3df
  42d898:	add	x9, x9, #0x3
  42d89c:	stur	x0, [x29, #-16]
  42d8a0:	stur	x1, [x29, #-24]
  42d8a4:	stur	x2, [x29, #-32]
  42d8a8:	str	x8, [sp, #40]
  42d8ac:	ldur	x8, [x29, #-24]
  42d8b0:	str	x8, [sp, #32]
  42d8b4:	str	x9, [sp, #8]
  42d8b8:	ldur	x8, [x29, #-16]
  42d8bc:	cmp	x8, #0x0
  42d8c0:	cset	w9, ne  // ne = any
  42d8c4:	mov	w10, #0x1                   	// #1
  42d8c8:	eor	w9, w9, #0x1
  42d8cc:	eor	w9, w9, w10
  42d8d0:	eor	w9, w9, w10
  42d8d4:	and	w9, w9, #0x1
  42d8d8:	mov	w0, w9
  42d8dc:	sxtw	x8, w0
  42d8e0:	cbz	x8, 42d908 <method_set_locked_hint+0x88>
  42d8e4:	mov	w8, wzr
  42d8e8:	mov	w0, w8
  42d8ec:	adrp	x1, 443000 <_fini+0x2c30>
  42d8f0:	add	x1, x1, #0x812
  42d8f4:	ldr	x2, [sp, #8]
  42d8f8:	mov	w3, #0x107                 	// #263
  42d8fc:	adrp	x4, 448000 <_fini+0x7c30>
  42d900:	add	x4, x4, #0xd98
  42d904:	bl	406c68 <log_assert_failed_realm@plt>
  42d908:	ldr	x8, [sp, #32]
  42d90c:	cmp	x8, #0x0
  42d910:	cset	w9, ne  // ne = any
  42d914:	mov	w10, #0x1                   	// #1
  42d918:	eor	w9, w9, #0x1
  42d91c:	eor	w9, w9, w10
  42d920:	eor	w9, w9, w10
  42d924:	and	w9, w9, #0x1
  42d928:	mov	w0, w9
  42d92c:	sxtw	x8, w0
  42d930:	cbz	x8, 42d958 <method_set_locked_hint+0xd8>
  42d934:	mov	w8, wzr
  42d938:	mov	w0, w8
  42d93c:	adrp	x1, 442000 <_fini+0x1c30>
  42d940:	add	x1, x1, #0xf2
  42d944:	ldr	x2, [sp, #8]
  42d948:	mov	w3, #0x108                 	// #264
  42d94c:	adrp	x4, 448000 <_fini+0x7c30>
  42d950:	add	x4, x4, #0xd98
  42d954:	bl	406c68 <log_assert_failed_realm@plt>
  42d958:	ldur	x0, [x29, #-16]
  42d95c:	adrp	x1, 441000 <_fini+0xc30>
  42d960:	add	x1, x1, #0xe0e
  42d964:	add	x2, sp, #0x14
  42d968:	bl	4074c8 <sd_bus_message_read@plt>
  42d96c:	str	w0, [sp, #24]
  42d970:	ldr	w8, [sp, #24]
  42d974:	cmp	w8, #0x0
  42d978:	cset	w8, ge  // ge = tcont
  42d97c:	tbnz	w8, #0, 42d994 <method_set_locked_hint+0x114>
  42d980:	ldr	w8, [sp, #24]
  42d984:	stur	w8, [x29, #-4]
  42d988:	mov	w8, #0x1                   	// #1
  42d98c:	str	w8, [sp, #16]
  42d990:	b	42da7c <method_set_locked_hint+0x1fc>
  42d994:	ldur	x0, [x29, #-16]
  42d998:	mov	x1, #0x10                  	// #16
  42d99c:	add	x2, sp, #0x28
  42d9a0:	bl	407478 <sd_bus_query_sender_creds@plt>
  42d9a4:	str	w0, [sp, #24]
  42d9a8:	ldr	w8, [sp, #24]
  42d9ac:	cmp	w8, #0x0
  42d9b0:	cset	w8, ge  // ge = tcont
  42d9b4:	tbnz	w8, #0, 42d9cc <method_set_locked_hint+0x14c>
  42d9b8:	ldr	w8, [sp, #24]
  42d9bc:	stur	w8, [x29, #-4]
  42d9c0:	mov	w8, #0x1                   	// #1
  42d9c4:	str	w8, [sp, #16]
  42d9c8:	b	42da7c <method_set_locked_hint+0x1fc>
  42d9cc:	ldr	x0, [sp, #40]
  42d9d0:	add	x1, sp, #0x1c
  42d9d4:	bl	407698 <sd_bus_creds_get_euid@plt>
  42d9d8:	str	w0, [sp, #24]
  42d9dc:	ldr	w8, [sp, #24]
  42d9e0:	cmp	w8, #0x0
  42d9e4:	cset	w8, ge  // ge = tcont
  42d9e8:	tbnz	w8, #0, 42da00 <method_set_locked_hint+0x180>
  42d9ec:	ldr	w8, [sp, #24]
  42d9f0:	stur	w8, [x29, #-4]
  42d9f4:	mov	w8, #0x1                   	// #1
  42d9f8:	str	w8, [sp, #16]
  42d9fc:	b	42da7c <method_set_locked_hint+0x1fc>
  42da00:	ldr	w8, [sp, #28]
  42da04:	cbz	w8, 42da48 <method_set_locked_hint+0x1c8>
  42da08:	ldr	w8, [sp, #28]
  42da0c:	ldr	x9, [sp, #32]
  42da10:	ldr	x9, [x9, #40]
  42da14:	ldr	w10, [x9, #8]
  42da18:	cmp	w8, w10
  42da1c:	b.eq	42da48 <method_set_locked_hint+0x1c8>  // b.none
  42da20:	ldur	x0, [x29, #-32]
  42da24:	adrp	x1, 448000 <_fini+0x7c30>
  42da28:	add	x1, x1, #0xd48
  42da2c:	adrp	x2, 448000 <_fini+0x7c30>
  42da30:	add	x2, x2, #0xddd
  42da34:	bl	407468 <sd_bus_error_setf@plt>
  42da38:	stur	w0, [x29, #-4]
  42da3c:	mov	w8, #0x1                   	// #1
  42da40:	str	w8, [sp, #16]
  42da44:	b	42da7c <method_set_locked_hint+0x1fc>
  42da48:	ldr	x0, [sp, #32]
  42da4c:	ldr	w8, [sp, #20]
  42da50:	cmp	w8, #0x0
  42da54:	cset	w8, ne  // ne = any
  42da58:	and	w1, w8, #0x1
  42da5c:	bl	436dd0 <session_set_locked_hint>
  42da60:	ldur	x0, [x29, #-16]
  42da64:	mov	x9, xzr
  42da68:	mov	x1, x9
  42da6c:	bl	4075b8 <sd_bus_reply_method_return@plt>
  42da70:	stur	w0, [x29, #-4]
  42da74:	mov	w8, #0x1                   	// #1
  42da78:	str	w8, [sp, #16]
  42da7c:	add	x0, sp, #0x28
  42da80:	bl	42f320 <sd_bus_creds_unrefp>
  42da84:	ldur	w0, [x29, #-4]
  42da88:	ldp	x29, x30, [sp, #80]
  42da8c:	add	sp, sp, #0x60
  42da90:	ret

000000000042da94 <method_take_control>:
  42da94:	sub	sp, sp, #0x70
  42da98:	stp	x29, x30, [sp, #96]
  42da9c:	add	x29, sp, #0x60
  42daa0:	mov	x8, xzr
  42daa4:	adrp	x9, 448000 <_fini+0x7c30>
  42daa8:	add	x9, x9, #0x3df
  42daac:	add	x9, x9, #0x3
  42dab0:	stur	x0, [x29, #-16]
  42dab4:	stur	x1, [x29, #-24]
  42dab8:	stur	x2, [x29, #-32]
  42dabc:	stur	x8, [x29, #-40]
  42dac0:	ldur	x8, [x29, #-24]
  42dac4:	str	x8, [sp, #48]
  42dac8:	str	x9, [sp, #24]
  42dacc:	ldur	x8, [x29, #-16]
  42dad0:	cmp	x8, #0x0
  42dad4:	cset	w9, ne  // ne = any
  42dad8:	mov	w10, #0x1                   	// #1
  42dadc:	eor	w9, w9, #0x1
  42dae0:	eor	w9, w9, w10
  42dae4:	eor	w9, w9, w10
  42dae8:	and	w9, w9, #0x1
  42daec:	mov	w0, w9
  42daf0:	sxtw	x8, w0
  42daf4:	cbz	x8, 42db1c <method_take_control+0x88>
  42daf8:	mov	w8, wzr
  42dafc:	mov	w0, w8
  42db00:	adrp	x1, 443000 <_fini+0x2c30>
  42db04:	add	x1, x1, #0x812
  42db08:	ldr	x2, [sp, #24]
  42db0c:	mov	w3, #0x152                 	// #338
  42db10:	adrp	x4, 448000 <_fini+0x7c30>
  42db14:	add	x4, x4, #0xe07
  42db18:	bl	406c68 <log_assert_failed_realm@plt>
  42db1c:	ldr	x8, [sp, #48]
  42db20:	cmp	x8, #0x0
  42db24:	cset	w9, ne  // ne = any
  42db28:	mov	w10, #0x1                   	// #1
  42db2c:	eor	w9, w9, #0x1
  42db30:	eor	w9, w9, w10
  42db34:	eor	w9, w9, w10
  42db38:	and	w9, w9, #0x1
  42db3c:	mov	w0, w9
  42db40:	sxtw	x8, w0
  42db44:	cbz	x8, 42db6c <method_take_control+0xd8>
  42db48:	mov	w8, wzr
  42db4c:	mov	w0, w8
  42db50:	adrp	x1, 442000 <_fini+0x1c30>
  42db54:	add	x1, x1, #0xf2
  42db58:	ldr	x2, [sp, #24]
  42db5c:	mov	w3, #0x153                 	// #339
  42db60:	adrp	x4, 448000 <_fini+0x7c30>
  42db64:	add	x4, x4, #0xe07
  42db68:	bl	406c68 <log_assert_failed_realm@plt>
  42db6c:	ldur	x0, [x29, #-16]
  42db70:	adrp	x1, 441000 <_fini+0xc30>
  42db74:	add	x1, x1, #0xe0e
  42db78:	add	x2, sp, #0x28
  42db7c:	bl	4074c8 <sd_bus_message_read@plt>
  42db80:	str	w0, [sp, #44]
  42db84:	ldr	w8, [sp, #44]
  42db88:	cmp	w8, #0x0
  42db8c:	cset	w8, ge  // ge = tcont
  42db90:	tbnz	w8, #0, 42dba8 <method_take_control+0x114>
  42db94:	ldr	w8, [sp, #44]
  42db98:	stur	w8, [x29, #-4]
  42db9c:	mov	w8, #0x1                   	// #1
  42dba0:	str	w8, [sp, #32]
  42dba4:	b	42dce8 <method_take_control+0x254>
  42dba8:	ldur	x0, [x29, #-16]
  42dbac:	mov	x1, #0x10                  	// #16
  42dbb0:	sub	x2, x29, #0x28
  42dbb4:	bl	407478 <sd_bus_query_sender_creds@plt>
  42dbb8:	str	w0, [sp, #44]
  42dbbc:	ldr	w8, [sp, #44]
  42dbc0:	cmp	w8, #0x0
  42dbc4:	cset	w8, ge  // ge = tcont
  42dbc8:	tbnz	w8, #0, 42dbe0 <method_take_control+0x14c>
  42dbcc:	ldr	w8, [sp, #44]
  42dbd0:	stur	w8, [x29, #-4]
  42dbd4:	mov	w8, #0x1                   	// #1
  42dbd8:	str	w8, [sp, #32]
  42dbdc:	b	42dce8 <method_take_control+0x254>
  42dbe0:	ldur	x0, [x29, #-40]
  42dbe4:	add	x1, sp, #0x24
  42dbe8:	bl	407698 <sd_bus_creds_get_euid@plt>
  42dbec:	str	w0, [sp, #44]
  42dbf0:	ldr	w8, [sp, #44]
  42dbf4:	cmp	w8, #0x0
  42dbf8:	cset	w8, ge  // ge = tcont
  42dbfc:	tbnz	w8, #0, 42dc14 <method_take_control+0x180>
  42dc00:	ldr	w8, [sp, #44]
  42dc04:	stur	w8, [x29, #-4]
  42dc08:	mov	w8, #0x1                   	// #1
  42dc0c:	str	w8, [sp, #32]
  42dc10:	b	42dce8 <method_take_control+0x254>
  42dc14:	ldr	w8, [sp, #36]
  42dc18:	cbz	w8, 42dc64 <method_take_control+0x1d0>
  42dc1c:	ldr	w8, [sp, #40]
  42dc20:	cbnz	w8, 42dc3c <method_take_control+0x1a8>
  42dc24:	ldr	w8, [sp, #36]
  42dc28:	ldr	x9, [sp, #48]
  42dc2c:	ldr	x9, [x9, #40]
  42dc30:	ldr	w10, [x9, #8]
  42dc34:	cmp	w8, w10
  42dc38:	b.eq	42dc64 <method_take_control+0x1d0>  // b.none
  42dc3c:	ldur	x0, [x29, #-32]
  42dc40:	adrp	x1, 448000 <_fini+0x7c30>
  42dc44:	add	x1, x1, #0xd48
  42dc48:	adrp	x2, 448000 <_fini+0x7c30>
  42dc4c:	add	x2, x2, #0xe49
  42dc50:	bl	407468 <sd_bus_error_setf@plt>
  42dc54:	stur	w0, [x29, #-4]
  42dc58:	mov	w8, #0x1                   	// #1
  42dc5c:	str	w8, [sp, #32]
  42dc60:	b	42dce8 <method_take_control+0x254>
  42dc64:	ldr	x0, [sp, #48]
  42dc68:	ldur	x8, [x29, #-16]
  42dc6c:	str	x0, [sp, #16]
  42dc70:	mov	x0, x8
  42dc74:	bl	407b38 <sd_bus_message_get_sender@plt>
  42dc78:	ldr	w9, [sp, #40]
  42dc7c:	cmp	w9, #0x0
  42dc80:	cset	w9, ne  // ne = any
  42dc84:	ldr	x8, [sp, #16]
  42dc88:	str	x0, [sp, #8]
  42dc8c:	mov	x0, x8
  42dc90:	ldr	x1, [sp, #8]
  42dc94:	mov	w10, #0x1                   	// #1
  42dc98:	and	w2, w9, #0x1
  42dc9c:	and	w3, w10, #0x1
  42dca0:	bl	4348fc <session_set_controller>
  42dca4:	str	w0, [sp, #44]
  42dca8:	ldr	w9, [sp, #44]
  42dcac:	cmp	w9, #0x0
  42dcb0:	cset	w9, ge  // ge = tcont
  42dcb4:	tbnz	w9, #0, 42dccc <method_take_control+0x238>
  42dcb8:	ldr	w8, [sp, #44]
  42dcbc:	stur	w8, [x29, #-4]
  42dcc0:	mov	w8, #0x1                   	// #1
  42dcc4:	str	w8, [sp, #32]
  42dcc8:	b	42dce8 <method_take_control+0x254>
  42dccc:	ldur	x0, [x29, #-16]
  42dcd0:	mov	x8, xzr
  42dcd4:	mov	x1, x8
  42dcd8:	bl	4075b8 <sd_bus_reply_method_return@plt>
  42dcdc:	stur	w0, [x29, #-4]
  42dce0:	mov	w9, #0x1                   	// #1
  42dce4:	str	w9, [sp, #32]
  42dce8:	sub	x0, x29, #0x28
  42dcec:	bl	42f320 <sd_bus_creds_unrefp>
  42dcf0:	ldur	w0, [x29, #-4]
  42dcf4:	ldp	x29, x30, [sp, #96]
  42dcf8:	add	sp, sp, #0x70
  42dcfc:	ret

000000000042dd00 <method_release_control>:
  42dd00:	sub	sp, sp, #0x50
  42dd04:	stp	x29, x30, [sp, #64]
  42dd08:	add	x29, sp, #0x40
  42dd0c:	adrp	x8, 448000 <_fini+0x7c30>
  42dd10:	add	x8, x8, #0x3df
  42dd14:	add	x8, x8, #0x3
  42dd18:	stur	x0, [x29, #-16]
  42dd1c:	stur	x1, [x29, #-24]
  42dd20:	str	x2, [sp, #32]
  42dd24:	ldur	x9, [x29, #-24]
  42dd28:	str	x9, [sp, #24]
  42dd2c:	str	x8, [sp, #16]
  42dd30:	ldur	x8, [x29, #-16]
  42dd34:	cmp	x8, #0x0
  42dd38:	cset	w9, ne  // ne = any
  42dd3c:	mov	w10, #0x1                   	// #1
  42dd40:	eor	w9, w9, #0x1
  42dd44:	eor	w9, w9, w10
  42dd48:	eor	w9, w9, w10
  42dd4c:	and	w9, w9, #0x1
  42dd50:	mov	w0, w9
  42dd54:	sxtw	x8, w0
  42dd58:	cbz	x8, 42dd80 <method_release_control+0x80>
  42dd5c:	mov	w8, wzr
  42dd60:	mov	w0, w8
  42dd64:	adrp	x1, 443000 <_fini+0x2c30>
  42dd68:	add	x1, x1, #0x812
  42dd6c:	ldr	x2, [sp, #16]
  42dd70:	mov	w3, #0x16e                 	// #366
  42dd74:	adrp	x4, 448000 <_fini+0x7c30>
  42dd78:	add	x4, x4, #0xe70
  42dd7c:	bl	406c68 <log_assert_failed_realm@plt>
  42dd80:	ldr	x8, [sp, #24]
  42dd84:	cmp	x8, #0x0
  42dd88:	cset	w9, ne  // ne = any
  42dd8c:	mov	w10, #0x1                   	// #1
  42dd90:	eor	w9, w9, #0x1
  42dd94:	eor	w9, w9, w10
  42dd98:	eor	w9, w9, w10
  42dd9c:	and	w9, w9, #0x1
  42dda0:	mov	w0, w9
  42dda4:	sxtw	x8, w0
  42dda8:	cbz	x8, 42ddd0 <method_release_control+0xd0>
  42ddac:	mov	w8, wzr
  42ddb0:	mov	w0, w8
  42ddb4:	adrp	x1, 442000 <_fini+0x1c30>
  42ddb8:	add	x1, x1, #0xf2
  42ddbc:	ldr	x2, [sp, #16]
  42ddc0:	mov	w3, #0x16f                 	// #367
  42ddc4:	adrp	x4, 448000 <_fini+0x7c30>
  42ddc8:	add	x4, x4, #0xe70
  42ddcc:	bl	406c68 <log_assert_failed_realm@plt>
  42ddd0:	ldr	x0, [sp, #24]
  42ddd4:	ldur	x8, [x29, #-16]
  42ddd8:	str	x0, [sp, #8]
  42dddc:	mov	x0, x8
  42dde0:	bl	407b38 <sd_bus_message_get_sender@plt>
  42dde4:	ldr	x8, [sp, #8]
  42dde8:	str	x0, [sp]
  42ddec:	mov	x0, x8
  42ddf0:	ldr	x1, [sp]
  42ddf4:	bl	437554 <session_is_controller>
  42ddf8:	tbnz	w0, #0, 42de1c <method_release_control+0x11c>
  42ddfc:	ldr	x0, [sp, #32]
  42de00:	adrp	x1, 448000 <_fini+0x7c30>
  42de04:	add	x1, x1, #0xeb5
  42de08:	adrp	x2, 448000 <_fini+0x7c30>
  42de0c:	add	x2, x2, #0xed9
  42de10:	bl	407468 <sd_bus_error_setf@plt>
  42de14:	stur	w0, [x29, #-4]
  42de18:	b	42de38 <method_release_control+0x138>
  42de1c:	ldr	x0, [sp, #24]
  42de20:	bl	432700 <session_drop_controller>
  42de24:	ldur	x0, [x29, #-16]
  42de28:	mov	x8, xzr
  42de2c:	mov	x1, x8
  42de30:	bl	4075b8 <sd_bus_reply_method_return@plt>
  42de34:	stur	w0, [x29, #-4]
  42de38:	ldur	w0, [x29, #-4]
  42de3c:	ldp	x29, x30, [sp, #64]
  42de40:	add	sp, sp, #0x50
  42de44:	ret

000000000042de48 <method_take_device>:
  42de48:	sub	sp, sp, #0x90
  42de4c:	stp	x29, x30, [sp, #128]
  42de50:	add	x29, sp, #0x80
  42de54:	adrp	x8, 448000 <_fini+0x7c30>
  42de58:	add	x8, x8, #0x3df
  42de5c:	add	x8, x8, #0x3
  42de60:	stur	x0, [x29, #-16]
  42de64:	stur	x1, [x29, #-24]
  42de68:	stur	x2, [x29, #-32]
  42de6c:	ldur	x9, [x29, #-24]
  42de70:	stur	x9, [x29, #-40]
  42de74:	str	x8, [sp, #24]
  42de78:	ldur	x8, [x29, #-16]
  42de7c:	cmp	x8, #0x0
  42de80:	cset	w9, ne  // ne = any
  42de84:	mov	w10, #0x1                   	// #1
  42de88:	eor	w9, w9, #0x1
  42de8c:	eor	w9, w9, w10
  42de90:	eor	w9, w9, w10
  42de94:	and	w9, w9, #0x1
  42de98:	mov	w0, w9
  42de9c:	sxtw	x8, w0
  42dea0:	cbz	x8, 42dec8 <method_take_device+0x80>
  42dea4:	mov	w8, wzr
  42dea8:	mov	w0, w8
  42deac:	adrp	x1, 443000 <_fini+0x2c30>
  42deb0:	add	x1, x1, #0x812
  42deb4:	ldr	x2, [sp, #24]
  42deb8:	mov	w3, #0x180                 	// #384
  42debc:	adrp	x4, 448000 <_fini+0x7c30>
  42dec0:	add	x4, x4, #0xf00
  42dec4:	bl	406c68 <log_assert_failed_realm@plt>
  42dec8:	ldur	x8, [x29, #-40]
  42decc:	cmp	x8, #0x0
  42ded0:	cset	w9, ne  // ne = any
  42ded4:	mov	w10, #0x1                   	// #1
  42ded8:	eor	w9, w9, #0x1
  42dedc:	eor	w9, w9, w10
  42dee0:	eor	w9, w9, w10
  42dee4:	and	w9, w9, #0x1
  42dee8:	mov	w0, w9
  42deec:	sxtw	x8, w0
  42def0:	cbz	x8, 42df18 <method_take_device+0xd0>
  42def4:	mov	w8, wzr
  42def8:	mov	w0, w8
  42defc:	adrp	x1, 442000 <_fini+0x1c30>
  42df00:	add	x1, x1, #0xf2
  42df04:	ldr	x2, [sp, #24]
  42df08:	mov	w3, #0x181                 	// #385
  42df0c:	adrp	x4, 448000 <_fini+0x7c30>
  42df10:	add	x4, x4, #0xf00
  42df14:	bl	406c68 <log_assert_failed_realm@plt>
  42df18:	ldur	x0, [x29, #-16]
  42df1c:	adrp	x1, 448000 <_fini+0x7c30>
  42df20:	add	x1, x1, #0x646
  42df24:	sub	x2, x29, #0x2c
  42df28:	sub	x3, x29, #0x30
  42df2c:	bl	4074c8 <sd_bus_message_read@plt>
  42df30:	str	w0, [sp, #60]
  42df34:	ldr	w8, [sp, #60]
  42df38:	cmp	w8, #0x0
  42df3c:	cset	w8, ge  // ge = tcont
  42df40:	tbnz	w8, #0, 42df50 <method_take_device+0x108>
  42df44:	ldr	w8, [sp, #60]
  42df48:	stur	w8, [x29, #-4]
  42df4c:	b	42e164 <method_take_device+0x31c>
  42df50:	ldur	w8, [x29, #-44]
  42df54:	str	w8, [sp, #56]
  42df58:	str	wzr, [sp, #52]
  42df5c:	ldr	w8, [sp, #56]
  42df60:	ldr	w9, [sp, #52]
  42df64:	mov	w10, #0x0                   	// #0
  42df68:	cmp	w8, w9
  42df6c:	str	w10, [sp, #20]
  42df70:	b.cc	42df84 <method_take_device+0x13c>  // b.lo, b.ul, b.last
  42df74:	ldr	w8, [sp, #56]
  42df78:	cmp	w8, #0x1, lsl #12
  42df7c:	cset	w8, cc  // cc = lo, ul, last
  42df80:	str	w8, [sp, #20]
  42df84:	ldr	w8, [sp, #20]
  42df88:	and	w8, w8, #0x1
  42df8c:	str	w8, [sp, #48]
  42df90:	ldr	w8, [sp, #48]
  42df94:	cbz	w8, 42dfe0 <method_take_device+0x198>
  42df98:	ldur	w8, [x29, #-48]
  42df9c:	str	w8, [sp, #44]
  42dfa0:	str	wzr, [sp, #40]
  42dfa4:	ldr	w8, [sp, #44]
  42dfa8:	ldr	w9, [sp, #40]
  42dfac:	mov	w10, #0x0                   	// #0
  42dfb0:	cmp	w8, w9
  42dfb4:	str	w10, [sp, #16]
  42dfb8:	b.cc	42dfcc <method_take_device+0x184>  // b.lo, b.ul, b.last
  42dfbc:	ldr	w8, [sp, #44]
  42dfc0:	cmp	w8, #0x100, lsl #12
  42dfc4:	cset	w8, cc  // cc = lo, ul, last
  42dfc8:	str	w8, [sp, #16]
  42dfcc:	ldr	w8, [sp, #16]
  42dfd0:	and	w8, w8, #0x1
  42dfd4:	str	w8, [sp, #36]
  42dfd8:	ldr	w8, [sp, #36]
  42dfdc:	cbnz	w8, 42e000 <method_take_device+0x1b8>
  42dfe0:	ldur	x0, [x29, #-32]
  42dfe4:	adrp	x1, 445000 <_fini+0x4c30>
  42dfe8:	add	x1, x1, #0x37d
  42dfec:	adrp	x2, 448000 <_fini+0x7c30>
  42dff0:	add	x2, x2, #0xf41
  42dff4:	bl	407468 <sd_bus_error_setf@plt>
  42dff8:	stur	w0, [x29, #-4]
  42dffc:	b	42e164 <method_take_device+0x31c>
  42e000:	ldur	x0, [x29, #-40]
  42e004:	ldur	x8, [x29, #-16]
  42e008:	str	x0, [sp, #8]
  42e00c:	mov	x0, x8
  42e010:	bl	407b38 <sd_bus_message_get_sender@plt>
  42e014:	ldr	x8, [sp, #8]
  42e018:	str	x0, [sp]
  42e01c:	mov	x0, x8
  42e020:	ldr	x1, [sp]
  42e024:	bl	437554 <session_is_controller>
  42e028:	tbnz	w0, #0, 42e04c <method_take_device+0x204>
  42e02c:	ldur	x0, [x29, #-32]
  42e030:	adrp	x1, 448000 <_fini+0x7c30>
  42e034:	add	x1, x1, #0xeb5
  42e038:	adrp	x2, 448000 <_fini+0x7c30>
  42e03c:	add	x2, x2, #0xed9
  42e040:	bl	407468 <sd_bus_error_setf@plt>
  42e044:	stur	w0, [x29, #-4]
  42e048:	b	42e164 <method_take_device+0x31c>
  42e04c:	ldur	w0, [x29, #-44]
  42e050:	ldur	w1, [x29, #-48]
  42e054:	bl	407178 <gnu_dev_makedev@plt>
  42e058:	add	x1, sp, #0x40
  42e05c:	str	x0, [sp, #64]
  42e060:	ldur	x8, [x29, #-40]
  42e064:	ldr	x0, [x8, #240]
  42e068:	bl	42f354 <hashmap_get>
  42e06c:	stur	x0, [x29, #-56]
  42e070:	ldur	x8, [x29, #-56]
  42e074:	cbz	x8, 42e098 <method_take_device+0x250>
  42e078:	ldur	x0, [x29, #-32]
  42e07c:	adrp	x1, 448000 <_fini+0x7c30>
  42e080:	add	x1, x1, #0xf62
  42e084:	adrp	x2, 448000 <_fini+0x7c30>
  42e088:	add	x2, x2, #0xf87
  42e08c:	bl	407468 <sd_bus_error_setf@plt>
  42e090:	stur	w0, [x29, #-4]
  42e094:	b	42e164 <method_take_device+0x31c>
  42e098:	ldur	x0, [x29, #-40]
  42e09c:	ldr	x1, [sp, #64]
  42e0a0:	mov	w8, #0x1                   	// #1
  42e0a4:	and	w2, w8, #0x1
  42e0a8:	sub	x3, x29, #0x38
  42e0ac:	bl	42ff28 <session_device_new>
  42e0b0:	str	w0, [sp, #60]
  42e0b4:	ldr	w8, [sp, #60]
  42e0b8:	cmp	w8, #0x0
  42e0bc:	cset	w8, ge  // ge = tcont
  42e0c0:	tbnz	w8, #0, 42e0d0 <method_take_device+0x288>
  42e0c4:	ldr	w8, [sp, #60]
  42e0c8:	stur	w8, [x29, #-4]
  42e0cc:	b	42e164 <method_take_device+0x31c>
  42e0d0:	ldur	x0, [x29, #-56]
  42e0d4:	bl	431304 <session_device_save>
  42e0d8:	str	w0, [sp, #60]
  42e0dc:	ldr	w8, [sp, #60]
  42e0e0:	cmp	w8, #0x0
  42e0e4:	cset	w8, ge  // ge = tcont
  42e0e8:	tbnz	w8, #0, 42e0f0 <method_take_device+0x2a8>
  42e0ec:	b	42e154 <method_take_device+0x30c>
  42e0f0:	ldur	x0, [x29, #-16]
  42e0f4:	ldur	x8, [x29, #-56]
  42e0f8:	ldr	w2, [x8, #32]
  42e0fc:	ldur	x8, [x29, #-56]
  42e100:	ldrb	w9, [x8, #36]
  42e104:	mov	w10, #0x3                   	// #3
  42e108:	lsr	w9, w9, w10
  42e10c:	mov	w10, #0x1                   	// #1
  42e110:	and	w9, w9, #0x1
  42e114:	eor	w9, w9, w10
  42e118:	and	w3, w9, #0x1
  42e11c:	adrp	x1, 448000 <_fini+0x7c30>
  42e120:	add	x1, x1, #0x649
  42e124:	bl	4075b8 <sd_bus_reply_method_return@plt>
  42e128:	str	w0, [sp, #60]
  42e12c:	ldr	w9, [sp, #60]
  42e130:	cmp	w9, #0x0
  42e134:	cset	w9, ge  // ge = tcont
  42e138:	tbnz	w9, #0, 42e140 <method_take_device+0x2f8>
  42e13c:	b	42e154 <method_take_device+0x30c>
  42e140:	ldur	x0, [x29, #-40]
  42e144:	bl	432bf8 <session_save>
  42e148:	mov	w8, #0x1                   	// #1
  42e14c:	stur	w8, [x29, #-4]
  42e150:	b	42e164 <method_take_device+0x31c>
  42e154:	ldur	x0, [x29, #-56]
  42e158:	bl	4307a4 <session_device_free>
  42e15c:	ldr	w8, [sp, #60]
  42e160:	stur	w8, [x29, #-4]
  42e164:	ldur	w0, [x29, #-4]
  42e168:	ldp	x29, x30, [sp, #128]
  42e16c:	add	sp, sp, #0x90
  42e170:	ret

000000000042e174 <method_release_device>:
  42e174:	sub	sp, sp, #0x90
  42e178:	stp	x29, x30, [sp, #128]
  42e17c:	add	x29, sp, #0x80
  42e180:	adrp	x8, 448000 <_fini+0x7c30>
  42e184:	add	x8, x8, #0x3df
  42e188:	add	x8, x8, #0x3
  42e18c:	stur	x0, [x29, #-16]
  42e190:	stur	x1, [x29, #-24]
  42e194:	stur	x2, [x29, #-32]
  42e198:	ldur	x9, [x29, #-24]
  42e19c:	stur	x9, [x29, #-40]
  42e1a0:	str	x8, [sp, #24]
  42e1a4:	ldur	x8, [x29, #-16]
  42e1a8:	cmp	x8, #0x0
  42e1ac:	cset	w9, ne  // ne = any
  42e1b0:	mov	w10, #0x1                   	// #1
  42e1b4:	eor	w9, w9, #0x1
  42e1b8:	eor	w9, w9, w10
  42e1bc:	eor	w9, w9, w10
  42e1c0:	and	w9, w9, #0x1
  42e1c4:	mov	w0, w9
  42e1c8:	sxtw	x8, w0
  42e1cc:	cbz	x8, 42e1f4 <method_release_device+0x80>
  42e1d0:	mov	w8, wzr
  42e1d4:	mov	w0, w8
  42e1d8:	adrp	x1, 443000 <_fini+0x2c30>
  42e1dc:	add	x1, x1, #0x812
  42e1e0:	ldr	x2, [sp, #24]
  42e1e4:	mov	w3, #0x1b2                 	// #434
  42e1e8:	adrp	x4, 448000 <_fini+0x7c30>
  42e1ec:	add	x4, x4, #0xf9c
  42e1f0:	bl	406c68 <log_assert_failed_realm@plt>
  42e1f4:	ldur	x8, [x29, #-40]
  42e1f8:	cmp	x8, #0x0
  42e1fc:	cset	w9, ne  // ne = any
  42e200:	mov	w10, #0x1                   	// #1
  42e204:	eor	w9, w9, #0x1
  42e208:	eor	w9, w9, w10
  42e20c:	eor	w9, w9, w10
  42e210:	and	w9, w9, #0x1
  42e214:	mov	w0, w9
  42e218:	sxtw	x8, w0
  42e21c:	cbz	x8, 42e244 <method_release_device+0xd0>
  42e220:	mov	w8, wzr
  42e224:	mov	w0, w8
  42e228:	adrp	x1, 442000 <_fini+0x1c30>
  42e22c:	add	x1, x1, #0xf2
  42e230:	ldr	x2, [sp, #24]
  42e234:	mov	w3, #0x1b3                 	// #435
  42e238:	adrp	x4, 448000 <_fini+0x7c30>
  42e23c:	add	x4, x4, #0xf9c
  42e240:	bl	406c68 <log_assert_failed_realm@plt>
  42e244:	ldur	x0, [x29, #-16]
  42e248:	adrp	x1, 448000 <_fini+0x7c30>
  42e24c:	add	x1, x1, #0x646
  42e250:	sub	x2, x29, #0x2c
  42e254:	sub	x3, x29, #0x30
  42e258:	bl	4074c8 <sd_bus_message_read@plt>
  42e25c:	str	w0, [sp, #60]
  42e260:	ldr	w8, [sp, #60]
  42e264:	cmp	w8, #0x0
  42e268:	cset	w8, ge  // ge = tcont
  42e26c:	tbnz	w8, #0, 42e27c <method_release_device+0x108>
  42e270:	ldr	w8, [sp, #60]
  42e274:	stur	w8, [x29, #-4]
  42e278:	b	42e3ec <method_release_device+0x278>
  42e27c:	ldur	w8, [x29, #-44]
  42e280:	str	w8, [sp, #56]
  42e284:	str	wzr, [sp, #52]
  42e288:	ldr	w8, [sp, #56]
  42e28c:	ldr	w9, [sp, #52]
  42e290:	mov	w10, #0x0                   	// #0
  42e294:	cmp	w8, w9
  42e298:	str	w10, [sp, #20]
  42e29c:	b.cc	42e2b0 <method_release_device+0x13c>  // b.lo, b.ul, b.last
  42e2a0:	ldr	w8, [sp, #56]
  42e2a4:	cmp	w8, #0x1, lsl #12
  42e2a8:	cset	w8, cc  // cc = lo, ul, last
  42e2ac:	str	w8, [sp, #20]
  42e2b0:	ldr	w8, [sp, #20]
  42e2b4:	and	w8, w8, #0x1
  42e2b8:	str	w8, [sp, #48]
  42e2bc:	ldr	w8, [sp, #48]
  42e2c0:	cbz	w8, 42e30c <method_release_device+0x198>
  42e2c4:	ldur	w8, [x29, #-48]
  42e2c8:	str	w8, [sp, #44]
  42e2cc:	str	wzr, [sp, #40]
  42e2d0:	ldr	w8, [sp, #44]
  42e2d4:	ldr	w9, [sp, #40]
  42e2d8:	mov	w10, #0x0                   	// #0
  42e2dc:	cmp	w8, w9
  42e2e0:	str	w10, [sp, #16]
  42e2e4:	b.cc	42e2f8 <method_release_device+0x184>  // b.lo, b.ul, b.last
  42e2e8:	ldr	w8, [sp, #44]
  42e2ec:	cmp	w8, #0x100, lsl #12
  42e2f0:	cset	w8, cc  // cc = lo, ul, last
  42e2f4:	str	w8, [sp, #16]
  42e2f8:	ldr	w8, [sp, #16]
  42e2fc:	and	w8, w8, #0x1
  42e300:	str	w8, [sp, #36]
  42e304:	ldr	w8, [sp, #36]
  42e308:	cbnz	w8, 42e32c <method_release_device+0x1b8>
  42e30c:	ldur	x0, [x29, #-32]
  42e310:	adrp	x1, 445000 <_fini+0x4c30>
  42e314:	add	x1, x1, #0x37d
  42e318:	adrp	x2, 448000 <_fini+0x7c30>
  42e31c:	add	x2, x2, #0xf41
  42e320:	bl	407468 <sd_bus_error_setf@plt>
  42e324:	stur	w0, [x29, #-4]
  42e328:	b	42e3ec <method_release_device+0x278>
  42e32c:	ldur	x0, [x29, #-40]
  42e330:	ldur	x8, [x29, #-16]
  42e334:	str	x0, [sp, #8]
  42e338:	mov	x0, x8
  42e33c:	bl	407b38 <sd_bus_message_get_sender@plt>
  42e340:	ldr	x8, [sp, #8]
  42e344:	str	x0, [sp]
  42e348:	mov	x0, x8
  42e34c:	ldr	x1, [sp]
  42e350:	bl	437554 <session_is_controller>
  42e354:	tbnz	w0, #0, 42e378 <method_release_device+0x204>
  42e358:	ldur	x0, [x29, #-32]
  42e35c:	adrp	x1, 448000 <_fini+0x7c30>
  42e360:	add	x1, x1, #0xeb5
  42e364:	adrp	x2, 448000 <_fini+0x7c30>
  42e368:	add	x2, x2, #0xed9
  42e36c:	bl	407468 <sd_bus_error_setf@plt>
  42e370:	stur	w0, [x29, #-4]
  42e374:	b	42e3ec <method_release_device+0x278>
  42e378:	ldur	w0, [x29, #-44]
  42e37c:	ldur	w1, [x29, #-48]
  42e380:	bl	407178 <gnu_dev_makedev@plt>
  42e384:	add	x1, sp, #0x40
  42e388:	str	x0, [sp, #64]
  42e38c:	ldur	x8, [x29, #-40]
  42e390:	ldr	x0, [x8, #240]
  42e394:	bl	42f354 <hashmap_get>
  42e398:	stur	x0, [x29, #-56]
  42e39c:	ldur	x8, [x29, #-56]
  42e3a0:	cbnz	x8, 42e3c4 <method_release_device+0x250>
  42e3a4:	ldur	x0, [x29, #-32]
  42e3a8:	adrp	x1, 448000 <_fini+0x7c30>
  42e3ac:	add	x1, x1, #0xfe0
  42e3b0:	adrp	x2, 449000 <_fini+0x8c30>
  42e3b4:	add	x2, x2, #0x6
  42e3b8:	bl	407468 <sd_bus_error_setf@plt>
  42e3bc:	stur	w0, [x29, #-4]
  42e3c0:	b	42e3ec <method_release_device+0x278>
  42e3c4:	ldur	x0, [x29, #-56]
  42e3c8:	bl	4307a4 <session_device_free>
  42e3cc:	ldur	x0, [x29, #-40]
  42e3d0:	bl	432bf8 <session_save>
  42e3d4:	ldur	x8, [x29, #-16]
  42e3d8:	mov	x0, x8
  42e3dc:	mov	x8, xzr
  42e3e0:	mov	x1, x8
  42e3e4:	bl	4075b8 <sd_bus_reply_method_return@plt>
  42e3e8:	stur	w0, [x29, #-4]
  42e3ec:	ldur	w0, [x29, #-4]
  42e3f0:	ldp	x29, x30, [sp, #128]
  42e3f4:	add	sp, sp, #0x90
  42e3f8:	ret

000000000042e3fc <method_pause_device_complete>:
  42e3fc:	sub	sp, sp, #0x90
  42e400:	stp	x29, x30, [sp, #128]
  42e404:	add	x29, sp, #0x80
  42e408:	adrp	x8, 448000 <_fini+0x7c30>
  42e40c:	add	x8, x8, #0x3df
  42e410:	add	x8, x8, #0x3
  42e414:	stur	x0, [x29, #-16]
  42e418:	stur	x1, [x29, #-24]
  42e41c:	stur	x2, [x29, #-32]
  42e420:	ldur	x9, [x29, #-24]
  42e424:	stur	x9, [x29, #-40]
  42e428:	str	x8, [sp, #24]
  42e42c:	ldur	x8, [x29, #-16]
  42e430:	cmp	x8, #0x0
  42e434:	cset	w9, ne  // ne = any
  42e438:	mov	w10, #0x1                   	// #1
  42e43c:	eor	w9, w9, #0x1
  42e440:	eor	w9, w9, w10
  42e444:	eor	w9, w9, w10
  42e448:	and	w9, w9, #0x1
  42e44c:	mov	w0, w9
  42e450:	sxtw	x8, w0
  42e454:	cbz	x8, 42e47c <method_pause_device_complete+0x80>
  42e458:	mov	w8, wzr
  42e45c:	mov	w0, w8
  42e460:	adrp	x1, 443000 <_fini+0x2c30>
  42e464:	add	x1, x1, #0x812
  42e468:	ldr	x2, [sp, #24]
  42e46c:	mov	w3, #0x1d1                 	// #465
  42e470:	adrp	x4, 449000 <_fini+0x8c30>
  42e474:	add	x4, x4, #0x17
  42e478:	bl	406c68 <log_assert_failed_realm@plt>
  42e47c:	ldur	x8, [x29, #-40]
  42e480:	cmp	x8, #0x0
  42e484:	cset	w9, ne  // ne = any
  42e488:	mov	w10, #0x1                   	// #1
  42e48c:	eor	w9, w9, #0x1
  42e490:	eor	w9, w9, w10
  42e494:	eor	w9, w9, w10
  42e498:	and	w9, w9, #0x1
  42e49c:	mov	w0, w9
  42e4a0:	sxtw	x8, w0
  42e4a4:	cbz	x8, 42e4cc <method_pause_device_complete+0xd0>
  42e4a8:	mov	w8, wzr
  42e4ac:	mov	w0, w8
  42e4b0:	adrp	x1, 442000 <_fini+0x1c30>
  42e4b4:	add	x1, x1, #0xf2
  42e4b8:	ldr	x2, [sp, #24]
  42e4bc:	mov	w3, #0x1d2                 	// #466
  42e4c0:	adrp	x4, 449000 <_fini+0x8c30>
  42e4c4:	add	x4, x4, #0x17
  42e4c8:	bl	406c68 <log_assert_failed_realm@plt>
  42e4cc:	ldur	x0, [x29, #-16]
  42e4d0:	adrp	x1, 448000 <_fini+0x7c30>
  42e4d4:	add	x1, x1, #0x646
  42e4d8:	sub	x2, x29, #0x2c
  42e4dc:	sub	x3, x29, #0x30
  42e4e0:	bl	4074c8 <sd_bus_message_read@plt>
  42e4e4:	str	w0, [sp, #60]
  42e4e8:	ldr	w8, [sp, #60]
  42e4ec:	cmp	w8, #0x0
  42e4f0:	cset	w8, ge  // ge = tcont
  42e4f4:	tbnz	w8, #0, 42e504 <method_pause_device_complete+0x108>
  42e4f8:	ldr	w8, [sp, #60]
  42e4fc:	stur	w8, [x29, #-4]
  42e500:	b	42e668 <method_pause_device_complete+0x26c>
  42e504:	ldur	w8, [x29, #-44]
  42e508:	str	w8, [sp, #56]
  42e50c:	str	wzr, [sp, #52]
  42e510:	ldr	w8, [sp, #56]
  42e514:	ldr	w9, [sp, #52]
  42e518:	mov	w10, #0x0                   	// #0
  42e51c:	cmp	w8, w9
  42e520:	str	w10, [sp, #20]
  42e524:	b.cc	42e538 <method_pause_device_complete+0x13c>  // b.lo, b.ul, b.last
  42e528:	ldr	w8, [sp, #56]
  42e52c:	cmp	w8, #0x1, lsl #12
  42e530:	cset	w8, cc  // cc = lo, ul, last
  42e534:	str	w8, [sp, #20]
  42e538:	ldr	w8, [sp, #20]
  42e53c:	and	w8, w8, #0x1
  42e540:	str	w8, [sp, #48]
  42e544:	ldr	w8, [sp, #48]
  42e548:	cbz	w8, 42e594 <method_pause_device_complete+0x198>
  42e54c:	ldur	w8, [x29, #-48]
  42e550:	str	w8, [sp, #44]
  42e554:	str	wzr, [sp, #40]
  42e558:	ldr	w8, [sp, #44]
  42e55c:	ldr	w9, [sp, #40]
  42e560:	mov	w10, #0x0                   	// #0
  42e564:	cmp	w8, w9
  42e568:	str	w10, [sp, #16]
  42e56c:	b.cc	42e580 <method_pause_device_complete+0x184>  // b.lo, b.ul, b.last
  42e570:	ldr	w8, [sp, #44]
  42e574:	cmp	w8, #0x100, lsl #12
  42e578:	cset	w8, cc  // cc = lo, ul, last
  42e57c:	str	w8, [sp, #16]
  42e580:	ldr	w8, [sp, #16]
  42e584:	and	w8, w8, #0x1
  42e588:	str	w8, [sp, #36]
  42e58c:	ldr	w8, [sp, #36]
  42e590:	cbnz	w8, 42e5b4 <method_pause_device_complete+0x1b8>
  42e594:	ldur	x0, [x29, #-32]
  42e598:	adrp	x1, 445000 <_fini+0x4c30>
  42e59c:	add	x1, x1, #0x37d
  42e5a0:	adrp	x2, 448000 <_fini+0x7c30>
  42e5a4:	add	x2, x2, #0xf41
  42e5a8:	bl	407468 <sd_bus_error_setf@plt>
  42e5ac:	stur	w0, [x29, #-4]
  42e5b0:	b	42e668 <method_pause_device_complete+0x26c>
  42e5b4:	ldur	x0, [x29, #-40]
  42e5b8:	ldur	x8, [x29, #-16]
  42e5bc:	str	x0, [sp, #8]
  42e5c0:	mov	x0, x8
  42e5c4:	bl	407b38 <sd_bus_message_get_sender@plt>
  42e5c8:	ldr	x8, [sp, #8]
  42e5cc:	str	x0, [sp]
  42e5d0:	mov	x0, x8
  42e5d4:	ldr	x1, [sp]
  42e5d8:	bl	437554 <session_is_controller>
  42e5dc:	tbnz	w0, #0, 42e600 <method_pause_device_complete+0x204>
  42e5e0:	ldur	x0, [x29, #-32]
  42e5e4:	adrp	x1, 448000 <_fini+0x7c30>
  42e5e8:	add	x1, x1, #0xeb5
  42e5ec:	adrp	x2, 448000 <_fini+0x7c30>
  42e5f0:	add	x2, x2, #0xed9
  42e5f4:	bl	407468 <sd_bus_error_setf@plt>
  42e5f8:	stur	w0, [x29, #-4]
  42e5fc:	b	42e668 <method_pause_device_complete+0x26c>
  42e600:	ldur	w0, [x29, #-44]
  42e604:	ldur	w1, [x29, #-48]
  42e608:	bl	407178 <gnu_dev_makedev@plt>
  42e60c:	add	x1, sp, #0x40
  42e610:	str	x0, [sp, #64]
  42e614:	ldur	x8, [x29, #-40]
  42e618:	ldr	x0, [x8, #240]
  42e61c:	bl	42f354 <hashmap_get>
  42e620:	stur	x0, [x29, #-56]
  42e624:	ldur	x8, [x29, #-56]
  42e628:	cbnz	x8, 42e64c <method_pause_device_complete+0x250>
  42e62c:	ldur	x0, [x29, #-32]
  42e630:	adrp	x1, 448000 <_fini+0x7c30>
  42e634:	add	x1, x1, #0xfe0
  42e638:	adrp	x2, 449000 <_fini+0x8c30>
  42e63c:	add	x2, x2, #0x6
  42e640:	bl	407468 <sd_bus_error_setf@plt>
  42e644:	stur	w0, [x29, #-4]
  42e648:	b	42e668 <method_pause_device_complete+0x26c>
  42e64c:	ldur	x0, [x29, #-56]
  42e650:	bl	430e88 <session_device_complete_pause>
  42e654:	ldur	x0, [x29, #-16]
  42e658:	mov	x8, xzr
  42e65c:	mov	x1, x8
  42e660:	bl	4075b8 <sd_bus_reply_method_return@plt>
  42e664:	stur	w0, [x29, #-4]
  42e668:	ldur	w0, [x29, #-4]
  42e66c:	ldp	x29, x30, [sp, #128]
  42e670:	add	sp, sp, #0x90
  42e674:	ret

000000000042e678 <method_set_brightness>:
  42e678:	sub	sp, sp, #0xa0
  42e67c:	stp	x29, x30, [sp, #144]
  42e680:	add	x29, sp, #0x90
  42e684:	mov	x8, xzr
  42e688:	adrp	x9, 449000 <_fini+0x8c30>
  42e68c:	add	x9, x9, #0x122
  42e690:	adrp	x10, 448000 <_fini+0x7c30>
  42e694:	add	x10, x10, #0x3df
  42e698:	add	x10, x10, #0x3
  42e69c:	stur	x0, [x29, #-16]
  42e6a0:	stur	x1, [x29, #-24]
  42e6a4:	stur	x2, [x29, #-32]
  42e6a8:	stur	x8, [x29, #-40]
  42e6ac:	stur	x8, [x29, #-48]
  42e6b0:	ldur	x8, [x29, #-24]
  42e6b4:	str	x8, [sp, #64]
  42e6b8:	str	x9, [sp, #8]
  42e6bc:	str	x10, [sp]
  42e6c0:	ldur	x8, [x29, #-16]
  42e6c4:	cmp	x8, #0x0
  42e6c8:	cset	w9, ne  // ne = any
  42e6cc:	mov	w10, #0x1                   	// #1
  42e6d0:	eor	w9, w9, #0x1
  42e6d4:	eor	w9, w9, w10
  42e6d8:	eor	w9, w9, w10
  42e6dc:	and	w9, w9, #0x1
  42e6e0:	mov	w0, w9
  42e6e4:	sxtw	x8, w0
  42e6e8:	cbz	x8, 42e710 <method_set_brightness+0x98>
  42e6ec:	mov	w8, wzr
  42e6f0:	mov	w0, w8
  42e6f4:	adrp	x1, 443000 <_fini+0x2c30>
  42e6f8:	add	x1, x1, #0x812
  42e6fc:	ldr	x2, [sp]
  42e700:	mov	w3, #0x1f1                 	// #497
  42e704:	adrp	x4, 449000 <_fini+0x8c30>
  42e708:	add	x4, x4, #0x62
  42e70c:	bl	406c68 <log_assert_failed_realm@plt>
  42e710:	ldr	x8, [sp, #64]
  42e714:	cmp	x8, #0x0
  42e718:	cset	w9, ne  // ne = any
  42e71c:	mov	w10, #0x1                   	// #1
  42e720:	eor	w9, w9, #0x1
  42e724:	eor	w9, w9, w10
  42e728:	eor	w9, w9, w10
  42e72c:	and	w9, w9, #0x1
  42e730:	mov	w0, w9
  42e734:	sxtw	x8, w0
  42e738:	cbz	x8, 42e760 <method_set_brightness+0xe8>
  42e73c:	mov	w8, wzr
  42e740:	mov	w0, w8
  42e744:	adrp	x1, 442000 <_fini+0x1c30>
  42e748:	add	x1, x1, #0xf2
  42e74c:	ldr	x2, [sp]
  42e750:	mov	w3, #0x1f2                 	// #498
  42e754:	adrp	x4, 449000 <_fini+0x8c30>
  42e758:	add	x4, x4, #0x62
  42e75c:	bl	406c68 <log_assert_failed_realm@plt>
  42e760:	ldur	x0, [x29, #-16]
  42e764:	adrp	x1, 448000 <_fini+0x7c30>
  42e768:	add	x1, x1, #0x67c
  42e76c:	sub	x2, x29, #0x38
  42e770:	sub	x3, x29, #0x40
  42e774:	add	x4, sp, #0x3c
  42e778:	bl	4074c8 <sd_bus_message_read@plt>
  42e77c:	str	w0, [sp, #52]
  42e780:	ldr	w8, [sp, #52]
  42e784:	cmp	w8, #0x0
  42e788:	cset	w8, ge  // ge = tcont
  42e78c:	tbnz	w8, #0, 42e7a4 <method_set_brightness+0x12c>
  42e790:	ldr	w8, [sp, #52]
  42e794:	stur	w8, [x29, #-4]
  42e798:	mov	w8, #0x1                   	// #1
  42e79c:	str	w8, [sp, #48]
  42e7a0:	b	42ea5c <method_set_brightness+0x3e4>
  42e7a4:	adrp	x8, 460000 <__TMC_END__>
  42e7a8:	add	x8, x8, #0x78
  42e7ac:	ldr	q0, [x8]
  42e7b0:	add	x0, sp, #0x10
  42e7b4:	str	q0, [sp, #16]
  42e7b8:	ldr	x8, [x8, #16]
  42e7bc:	str	x8, [sp, #32]
  42e7c0:	ldur	x1, [x29, #-56]
  42e7c4:	bl	407348 <strv_find@plt>
  42e7c8:	cbnz	x0, 42e7f8 <method_set_brightness+0x180>
  42e7cc:	ldur	x0, [x29, #-32]
  42e7d0:	ldur	x3, [x29, #-56]
  42e7d4:	adrp	x1, 446000 <_fini+0x5c30>
  42e7d8:	add	x1, x1, #0xa12
  42e7dc:	adrp	x2, 449000 <_fini+0x8c30>
  42e7e0:	add	x2, x2, #0xb5
  42e7e4:	bl	407468 <sd_bus_error_setf@plt>
  42e7e8:	stur	w0, [x29, #-4]
  42e7ec:	mov	w8, #0x1                   	// #1
  42e7f0:	str	w8, [sp, #48]
  42e7f4:	b	42ea5c <method_set_brightness+0x3e4>
  42e7f8:	ldur	x0, [x29, #-64]
  42e7fc:	bl	407b48 <filename_is_valid@plt>
  42e800:	tbnz	w0, #0, 42e830 <method_set_brightness+0x1b8>
  42e804:	ldur	x0, [x29, #-32]
  42e808:	ldur	x3, [x29, #-64]
  42e80c:	adrp	x1, 445000 <_fini+0x4c30>
  42e810:	add	x1, x1, #0x37d
  42e814:	adrp	x2, 449000 <_fini+0x8c30>
  42e818:	add	x2, x2, #0xfc
  42e81c:	bl	407468 <sd_bus_error_setf@plt>
  42e820:	stur	w0, [x29, #-4]
  42e824:	mov	w8, #0x1                   	// #1
  42e828:	str	w8, [sp, #48]
  42e82c:	b	42ea5c <method_set_brightness+0x3e4>
  42e830:	ldr	x8, [sp, #64]
  42e834:	ldr	x8, [x8, #136]
  42e838:	cbnz	x8, 42e860 <method_set_brightness+0x1e8>
  42e83c:	ldur	x0, [x29, #-32]
  42e840:	ldr	x1, [sp, #8]
  42e844:	adrp	x2, 449000 <_fini+0x8c30>
  42e848:	add	x2, x2, #0x147
  42e84c:	bl	407468 <sd_bus_error_setf@plt>
  42e850:	stur	w0, [x29, #-4]
  42e854:	mov	w8, #0x1                   	// #1
  42e858:	str	w8, [sp, #48]
  42e85c:	b	42ea5c <method_set_brightness+0x3e4>
  42e860:	ldr	x8, [sp, #64]
  42e864:	ldr	x8, [x8, #136]
  42e868:	ldr	x8, [x8, #32]
  42e86c:	ldr	x9, [sp, #64]
  42e870:	cmp	x8, x9
  42e874:	b.eq	42e89c <method_set_brightness+0x224>  // b.none
  42e878:	ldur	x0, [x29, #-32]
  42e87c:	ldr	x1, [sp, #8]
  42e880:	adrp	x2, 449000 <_fini+0x8c30>
  42e884:	add	x2, x2, #0x16b
  42e888:	bl	407468 <sd_bus_error_setf@plt>
  42e88c:	stur	w0, [x29, #-4]
  42e890:	mov	w8, #0x1                   	// #1
  42e894:	str	w8, [sp, #48]
  42e898:	b	42ea5c <method_set_brightness+0x3e4>
  42e89c:	ldur	x0, [x29, #-16]
  42e8a0:	mov	x1, #0x10                  	// #16
  42e8a4:	sub	x2, x29, #0x28
  42e8a8:	bl	407478 <sd_bus_query_sender_creds@plt>
  42e8ac:	str	w0, [sp, #52]
  42e8b0:	ldr	w8, [sp, #52]
  42e8b4:	cmp	w8, #0x0
  42e8b8:	cset	w8, ge  // ge = tcont
  42e8bc:	tbnz	w8, #0, 42e8d4 <method_set_brightness+0x25c>
  42e8c0:	ldr	w8, [sp, #52]
  42e8c4:	stur	w8, [x29, #-4]
  42e8c8:	mov	w8, #0x1                   	// #1
  42e8cc:	str	w8, [sp, #48]
  42e8d0:	b	42ea5c <method_set_brightness+0x3e4>
  42e8d4:	ldur	x0, [x29, #-40]
  42e8d8:	add	x1, sp, #0x38
  42e8dc:	bl	407698 <sd_bus_creds_get_euid@plt>
  42e8e0:	str	w0, [sp, #52]
  42e8e4:	ldr	w8, [sp, #52]
  42e8e8:	cmp	w8, #0x0
  42e8ec:	cset	w8, ge  // ge = tcont
  42e8f0:	tbnz	w8, #0, 42e908 <method_set_brightness+0x290>
  42e8f4:	ldr	w8, [sp, #52]
  42e8f8:	stur	w8, [x29, #-4]
  42e8fc:	mov	w8, #0x1                   	// #1
  42e900:	str	w8, [sp, #48]
  42e904:	b	42ea5c <method_set_brightness+0x3e4>
  42e908:	ldr	w8, [sp, #56]
  42e90c:	cbz	w8, 42e950 <method_set_brightness+0x2d8>
  42e910:	ldr	w8, [sp, #56]
  42e914:	ldr	x9, [sp, #64]
  42e918:	ldr	x9, [x9, #40]
  42e91c:	ldr	w10, [x9, #8]
  42e920:	cmp	w8, w10
  42e924:	b.eq	42e950 <method_set_brightness+0x2d8>  // b.none
  42e928:	ldur	x0, [x29, #-32]
  42e92c:	adrp	x1, 448000 <_fini+0x7c30>
  42e930:	add	x1, x1, #0xd48
  42e934:	adrp	x2, 449000 <_fini+0x8c30>
  42e938:	add	x2, x2, #0x193
  42e93c:	bl	407468 <sd_bus_error_setf@plt>
  42e940:	stur	w0, [x29, #-4]
  42e944:	mov	w8, #0x1                   	// #1
  42e948:	str	w8, [sp, #48]
  42e94c:	b	42ea5c <method_set_brightness+0x3e4>
  42e950:	ldur	x1, [x29, #-56]
  42e954:	ldur	x2, [x29, #-64]
  42e958:	sub	x0, x29, #0x30
  42e95c:	bl	407b58 <sd_device_new_from_subsystem_sysname@plt>
  42e960:	str	w0, [sp, #52]
  42e964:	ldr	w8, [sp, #52]
  42e968:	cmp	w8, #0x0
  42e96c:	cset	w8, ge  // ge = tcont
  42e970:	tbnz	w8, #0, 42e9a0 <method_set_brightness+0x328>
  42e974:	ldur	x0, [x29, #-32]
  42e978:	ldr	w1, [sp, #52]
  42e97c:	ldur	x3, [x29, #-56]
  42e980:	ldur	x4, [x29, #-64]
  42e984:	adrp	x2, 449000 <_fini+0x8c30>
  42e988:	add	x2, x2, #0x1c0
  42e98c:	bl	407b68 <sd_bus_error_set_errnof@plt>
  42e990:	stur	w0, [x29, #-4]
  42e994:	mov	w8, #0x1                   	// #1
  42e998:	str	w8, [sp, #48]
  42e99c:	b	42ea5c <method_set_brightness+0x3e4>
  42e9a0:	ldur	x0, [x29, #-48]
  42e9a4:	adrp	x1, 442000 <_fini+0x1c30>
  42e9a8:	add	x1, x1, #0x69a
  42e9ac:	add	x2, sp, #0x48
  42e9b0:	bl	4072f8 <sd_device_get_property_value@plt>
  42e9b4:	cmp	w0, #0x0
  42e9b8:	cset	w8, lt  // lt = tstop
  42e9bc:	tbnz	w8, #0, 42ea10 <method_set_brightness+0x398>
  42e9c0:	ldr	x0, [sp, #72]
  42e9c4:	ldr	x8, [sp, #64]
  42e9c8:	ldr	x8, [x8, #136]
  42e9cc:	ldr	x1, [x8, #8]
  42e9d0:	bl	42feb4 <streq_ptr>
  42e9d4:	tbnz	w0, #0, 42ea10 <method_set_brightness+0x398>
  42e9d8:	ldur	x0, [x29, #-32]
  42e9dc:	ldur	x3, [x29, #-56]
  42e9e0:	ldur	x4, [x29, #-64]
  42e9e4:	ldr	x8, [sp, #64]
  42e9e8:	ldr	x8, [x8, #136]
  42e9ec:	ldr	x5, [x8, #8]
  42e9f0:	ldr	x1, [sp, #8]
  42e9f4:	adrp	x2, 449000 <_fini+0x8c30>
  42e9f8:	add	x2, x2, #0x1e0
  42e9fc:	bl	407468 <sd_bus_error_setf@plt>
  42ea00:	stur	w0, [x29, #-4]
  42ea04:	mov	w9, #0x1                   	// #1
  42ea08:	str	w9, [sp, #48]
  42ea0c:	b	42ea5c <method_set_brightness+0x3e4>
  42ea10:	ldr	x8, [sp, #64]
  42ea14:	ldr	x0, [x8]
  42ea18:	ldur	x1, [x29, #-48]
  42ea1c:	ldr	w2, [sp, #60]
  42ea20:	ldur	x3, [x29, #-16]
  42ea24:	bl	43f0c0 <manager_write_brightness>
  42ea28:	str	w0, [sp, #52]
  42ea2c:	ldr	w9, [sp, #52]
  42ea30:	cmp	w9, #0x0
  42ea34:	cset	w9, ge  // ge = tcont
  42ea38:	tbnz	w9, #0, 42ea50 <method_set_brightness+0x3d8>
  42ea3c:	ldr	w8, [sp, #52]
  42ea40:	stur	w8, [x29, #-4]
  42ea44:	mov	w8, #0x1                   	// #1
  42ea48:	str	w8, [sp, #48]
  42ea4c:	b	42ea5c <method_set_brightness+0x3e4>
  42ea50:	mov	w8, #0x1                   	// #1
  42ea54:	stur	w8, [x29, #-4]
  42ea58:	str	w8, [sp, #48]
  42ea5c:	sub	x0, x29, #0x30
  42ea60:	bl	42fe80 <sd_device_unrefp>
  42ea64:	sub	x0, x29, #0x28
  42ea68:	bl	42f320 <sd_bus_creds_unrefp>
  42ea6c:	ldur	w0, [x29, #-4]
  42ea70:	ldp	x29, x30, [sp, #144]
  42ea74:	add	sp, sp, #0xa0
  42ea78:	ret

000000000042ea7c <session_object_find>:
  42ea7c:	sub	sp, sp, #0x90
  42ea80:	stp	x29, x30, [sp, #128]
  42ea84:	add	x29, sp, #0x80
  42ea88:	mov	x8, xzr
  42ea8c:	adrp	x9, 448000 <_fini+0x7c30>
  42ea90:	add	x9, x9, #0x3df
  42ea94:	add	x9, x9, #0x3
  42ea98:	adrp	x10, 448000 <_fini+0x7c30>
  42ea9c:	add	x10, x10, #0x6a1
  42eaa0:	stur	x0, [x29, #-16]
  42eaa4:	stur	x1, [x29, #-24]
  42eaa8:	stur	x2, [x29, #-32]
  42eaac:	stur	x3, [x29, #-40]
  42eab0:	stur	x4, [x29, #-48]
  42eab4:	stur	x5, [x29, #-56]
  42eab8:	str	x8, [sp, #64]
  42eabc:	ldur	x8, [x29, #-40]
  42eac0:	str	x8, [sp, #48]
  42eac4:	str	x9, [sp, #16]
  42eac8:	str	x10, [sp, #8]
  42eacc:	ldur	x8, [x29, #-16]
  42ead0:	cmp	x8, #0x0
  42ead4:	cset	w9, ne  // ne = any
  42ead8:	mov	w10, #0x1                   	// #1
  42eadc:	eor	w9, w9, #0x1
  42eae0:	eor	w9, w9, w10
  42eae4:	eor	w9, w9, w10
  42eae8:	and	w9, w9, #0x1
  42eaec:	mov	w0, w9
  42eaf0:	sxtw	x8, w0
  42eaf4:	cbz	x8, 42eb18 <session_object_find+0x9c>
  42eaf8:	mov	w8, wzr
  42eafc:	mov	w0, w8
  42eb00:	adrp	x1, 444000 <_fini+0x3c30>
  42eb04:	add	x1, x1, #0x393
  42eb08:	ldr	x2, [sp, #16]
  42eb0c:	mov	w3, #0x255                 	// #597
  42eb10:	ldr	x4, [sp, #8]
  42eb14:	bl	406c68 <log_assert_failed_realm@plt>
  42eb18:	ldur	x8, [x29, #-24]
  42eb1c:	cmp	x8, #0x0
  42eb20:	cset	w9, ne  // ne = any
  42eb24:	mov	w10, #0x1                   	// #1
  42eb28:	eor	w9, w9, #0x1
  42eb2c:	eor	w9, w9, w10
  42eb30:	eor	w9, w9, w10
  42eb34:	and	w9, w9, #0x1
  42eb38:	mov	w0, w9
  42eb3c:	sxtw	x8, w0
  42eb40:	cbz	x8, 42eb64 <session_object_find+0xe8>
  42eb44:	mov	w8, wzr
  42eb48:	mov	w0, w8
  42eb4c:	adrp	x1, 443000 <_fini+0x2c30>
  42eb50:	add	x1, x1, #0xea9
  42eb54:	ldr	x2, [sp, #16]
  42eb58:	mov	w3, #0x256                 	// #598
  42eb5c:	ldr	x4, [sp, #8]
  42eb60:	bl	406c68 <log_assert_failed_realm@plt>
  42eb64:	ldur	x8, [x29, #-32]
  42eb68:	cmp	x8, #0x0
  42eb6c:	cset	w9, ne  // ne = any
  42eb70:	mov	w10, #0x1                   	// #1
  42eb74:	eor	w9, w9, #0x1
  42eb78:	eor	w9, w9, w10
  42eb7c:	eor	w9, w9, w10
  42eb80:	and	w9, w9, #0x1
  42eb84:	mov	w0, w9
  42eb88:	sxtw	x8, w0
  42eb8c:	cbz	x8, 42ebb0 <session_object_find+0x134>
  42eb90:	mov	w8, wzr
  42eb94:	mov	w0, w8
  42eb98:	adrp	x1, 447000 <_fini+0x6c30>
  42eb9c:	add	x1, x1, #0x8eb
  42eba0:	ldr	x2, [sp, #16]
  42eba4:	mov	w3, #0x257                 	// #599
  42eba8:	ldr	x4, [sp, #8]
  42ebac:	bl	406c68 <log_assert_failed_realm@plt>
  42ebb0:	ldur	x8, [x29, #-48]
  42ebb4:	cmp	x8, #0x0
  42ebb8:	cset	w9, ne  // ne = any
  42ebbc:	mov	w10, #0x1                   	// #1
  42ebc0:	eor	w9, w9, #0x1
  42ebc4:	eor	w9, w9, w10
  42ebc8:	eor	w9, w9, w10
  42ebcc:	and	w9, w9, #0x1
  42ebd0:	mov	w0, w9
  42ebd4:	sxtw	x8, w0
  42ebd8:	cbz	x8, 42ebfc <session_object_find+0x180>
  42ebdc:	mov	w8, wzr
  42ebe0:	mov	w0, w8
  42ebe4:	adrp	x1, 447000 <_fini+0x6c30>
  42ebe8:	add	x1, x1, #0x8f5
  42ebec:	ldr	x2, [sp, #16]
  42ebf0:	mov	w3, #0x258                 	// #600
  42ebf4:	ldr	x4, [sp, #8]
  42ebf8:	bl	406c68 <log_assert_failed_realm@plt>
  42ebfc:	ldr	x8, [sp, #48]
  42ec00:	cmp	x8, #0x0
  42ec04:	cset	w9, ne  // ne = any
  42ec08:	mov	w10, #0x1                   	// #1
  42ec0c:	eor	w9, w9, #0x1
  42ec10:	eor	w9, w9, w10
  42ec14:	eor	w9, w9, w10
  42ec18:	and	w9, w9, #0x1
  42ec1c:	mov	w0, w9
  42ec20:	sxtw	x8, w0
  42ec24:	cbz	x8, 42ec48 <session_object_find+0x1cc>
  42ec28:	mov	w8, wzr
  42ec2c:	mov	w0, w8
  42ec30:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  42ec34:	add	x1, x1, #0x5ef
  42ec38:	ldr	x2, [sp, #16]
  42ec3c:	mov	w3, #0x259                 	// #601
  42ec40:	ldr	x4, [sp, #8]
  42ec44:	bl	406c68 <log_assert_failed_realm@plt>
  42ec48:	ldur	x0, [x29, #-24]
  42ec4c:	adrp	x1, 448000 <_fini+0x7c30>
  42ec50:	add	x1, x1, #0x700
  42ec54:	bl	42ed68 <startswith>
  42ec58:	str	x0, [sp, #32]
  42ec5c:	ldr	x8, [sp, #32]
  42ec60:	cbnz	x8, 42ec74 <session_object_find+0x1f8>
  42ec64:	stur	wzr, [x29, #-4]
  42ec68:	mov	w8, #0x1                   	// #1
  42ec6c:	str	w8, [sp, #24]
  42ec70:	b	42ed28 <session_object_find+0x2ac>
  42ec74:	ldr	x0, [sp, #32]
  42ec78:	bl	42edc8 <bus_label_unescape>
  42ec7c:	str	x0, [sp, #64]
  42ec80:	ldr	x8, [sp, #64]
  42ec84:	cbnz	x8, 42ec9c <session_object_find+0x220>
  42ec88:	mov	w8, #0xfffffff4            	// #-12
  42ec8c:	stur	w8, [x29, #-4]
  42ec90:	mov	w8, #0x1                   	// #1
  42ec94:	str	w8, [sp, #24]
  42ec98:	b	42ed28 <session_object_find+0x2ac>
  42ec9c:	ldur	x0, [x29, #-16]
  42eca0:	bl	407a78 <sd_bus_get_current_message@plt>
  42eca4:	str	x0, [sp, #56]
  42eca8:	ldr	x0, [sp, #48]
  42ecac:	ldr	x1, [sp, #56]
  42ecb0:	ldr	x2, [sp, #64]
  42ecb4:	ldur	x3, [x29, #-56]
  42ecb8:	add	x4, sp, #0x28
  42ecbc:	bl	414498 <manager_get_session_from_creds>
  42ecc0:	str	w0, [sp, #28]
  42ecc4:	ldr	w8, [sp, #28]
  42ecc8:	mov	w9, #0xfffffffa            	// #-6
  42eccc:	cmp	w8, w9
  42ecd0:	b.ne	42ecec <session_object_find+0x270>  // b.any
  42ecd4:	ldur	x0, [x29, #-56]
  42ecd8:	bl	4071e8 <sd_bus_error_free@plt>
  42ecdc:	stur	wzr, [x29, #-4]
  42ece0:	mov	w8, #0x1                   	// #1
  42ece4:	str	w8, [sp, #24]
  42ece8:	b	42ed28 <session_object_find+0x2ac>
  42ecec:	ldr	w8, [sp, #28]
  42ecf0:	cmp	w8, #0x0
  42ecf4:	cset	w8, ge  // ge = tcont
  42ecf8:	tbnz	w8, #0, 42ed10 <session_object_find+0x294>
  42ecfc:	ldr	w8, [sp, #28]
  42ed00:	stur	w8, [x29, #-4]
  42ed04:	mov	w8, #0x1                   	// #1
  42ed08:	str	w8, [sp, #24]
  42ed0c:	b	42ed28 <session_object_find+0x2ac>
  42ed10:	ldr	x8, [sp, #40]
  42ed14:	ldur	x9, [x29, #-48]
  42ed18:	str	x8, [x9]
  42ed1c:	mov	w10, #0x1                   	// #1
  42ed20:	stur	w10, [x29, #-4]
  42ed24:	str	w10, [sp, #24]
  42ed28:	add	x0, sp, #0x40
  42ed2c:	bl	42ed40 <freep>
  42ed30:	ldur	w0, [x29, #-4]
  42ed34:	ldp	x29, x30, [sp, #128]
  42ed38:	add	sp, sp, #0x90
  42ed3c:	ret

000000000042ed40 <freep>:
  42ed40:	sub	sp, sp, #0x20
  42ed44:	stp	x29, x30, [sp, #16]
  42ed48:	add	x29, sp, #0x10
  42ed4c:	str	x0, [sp, #8]
  42ed50:	ldr	x8, [sp, #8]
  42ed54:	ldr	x0, [x8]
  42ed58:	bl	406da8 <free@plt>
  42ed5c:	ldp	x29, x30, [sp, #16]
  42ed60:	add	sp, sp, #0x20
  42ed64:	ret

000000000042ed68 <startswith>:
  42ed68:	sub	sp, sp, #0x30
  42ed6c:	stp	x29, x30, [sp, #32]
  42ed70:	add	x29, sp, #0x20
  42ed74:	str	x0, [sp, #16]
  42ed78:	str	x1, [sp, #8]
  42ed7c:	ldr	x0, [sp, #8]
  42ed80:	bl	4070a8 <strlen@plt>
  42ed84:	str	x0, [sp]
  42ed88:	ldr	x0, [sp, #16]
  42ed8c:	ldr	x1, [sp, #8]
  42ed90:	ldr	x2, [sp]
  42ed94:	bl	4070b8 <strncmp@plt>
  42ed98:	cbnz	w0, 42edb0 <startswith+0x48>
  42ed9c:	ldr	x8, [sp, #16]
  42eda0:	ldr	x9, [sp]
  42eda4:	add	x8, x8, x9
  42eda8:	stur	x8, [x29, #-8]
  42edac:	b	42edb8 <startswith+0x50>
  42edb0:	mov	x8, xzr
  42edb4:	stur	x8, [x29, #-8]
  42edb8:	ldur	x0, [x29, #-8]
  42edbc:	ldp	x29, x30, [sp, #32]
  42edc0:	add	sp, sp, #0x30
  42edc4:	ret

000000000042edc8 <bus_label_unescape>:
  42edc8:	sub	sp, sp, #0x30
  42edcc:	stp	x29, x30, [sp, #32]
  42edd0:	add	x29, sp, #0x20
  42edd4:	stur	x0, [x29, #-8]
  42edd8:	ldur	x0, [x29, #-8]
  42eddc:	ldur	x8, [x29, #-8]
  42ede0:	str	x0, [sp, #16]
  42ede4:	mov	x0, x8
  42ede8:	bl	42feec <strlen_ptr>
  42edec:	ldr	x8, [sp, #16]
  42edf0:	str	x0, [sp, #8]
  42edf4:	mov	x0, x8
  42edf8:	ldr	x1, [sp, #8]
  42edfc:	bl	407a88 <bus_label_unescape_n@plt>
  42ee00:	ldp	x29, x30, [sp, #32]
  42ee04:	add	sp, sp, #0x30
  42ee08:	ret

000000000042ee0c <session_bus_path>:
  42ee0c:	sub	sp, sp, #0x40
  42ee10:	stp	x29, x30, [sp, #48]
  42ee14:	add	x29, sp, #0x30
  42ee18:	mov	x8, xzr
  42ee1c:	adrp	x9, 448000 <_fini+0x7c30>
  42ee20:	add	x9, x9, #0x3df
  42ee24:	add	x2, x9, #0x3
  42ee28:	stur	x0, [x29, #-16]
  42ee2c:	str	x8, [sp, #24]
  42ee30:	str	x2, [sp, #8]
  42ee34:	ldur	x8, [x29, #-16]
  42ee38:	cmp	x8, #0x0
  42ee3c:	cset	w9, ne  // ne = any
  42ee40:	mov	w10, #0x1                   	// #1
  42ee44:	eor	w9, w9, #0x1
  42ee48:	eor	w9, w9, w10
  42ee4c:	eor	w9, w9, w10
  42ee50:	and	w9, w9, #0x1
  42ee54:	mov	w0, w9
  42ee58:	sxtw	x8, w0
  42ee5c:	cbz	x8, 42ee84 <session_bus_path+0x78>
  42ee60:	mov	w8, wzr
  42ee64:	mov	w0, w8
  42ee68:	adrp	x1, 442000 <_fini+0x1c30>
  42ee6c:	add	x1, x1, #0xf2
  42ee70:	ldr	x2, [sp, #8]
  42ee74:	mov	w3, #0x274                 	// #628
  42ee78:	adrp	x4, 448000 <_fini+0x7c30>
  42ee7c:	add	x4, x4, #0x721
  42ee80:	bl	406c68 <log_assert_failed_realm@plt>
  42ee84:	ldur	x8, [x29, #-16]
  42ee88:	ldr	x0, [x8, #8]
  42ee8c:	bl	407a98 <bus_label_escape@plt>
  42ee90:	str	x0, [sp, #24]
  42ee94:	ldr	x8, [sp, #24]
  42ee98:	cbnz	x8, 42eeb0 <session_bus_path+0xa4>
  42ee9c:	mov	x8, xzr
  42eea0:	stur	x8, [x29, #-8]
  42eea4:	mov	w9, #0x1                   	// #1
  42eea8:	str	w9, [sp, #20]
  42eeac:	b	42eed4 <session_bus_path+0xc8>
  42eeb0:	ldr	x1, [sp, #24]
  42eeb4:	adrp	x0, 448000 <_fini+0x7c30>
  42eeb8:	add	x0, x0, #0x700
  42eebc:	mov	x8, xzr
  42eec0:	mov	x2, x8
  42eec4:	bl	407a48 <strjoin_real@plt>
  42eec8:	stur	x0, [x29, #-8]
  42eecc:	mov	w9, #0x1                   	// #1
  42eed0:	str	w9, [sp, #20]
  42eed4:	add	x0, sp, #0x18
  42eed8:	bl	42ed40 <freep>
  42eedc:	ldur	x0, [x29, #-8]
  42eee0:	ldp	x29, x30, [sp, #48]
  42eee4:	add	sp, sp, #0x40
  42eee8:	ret

000000000042eeec <session_node_enumerator>:
  42eeec:	sub	sp, sp, #0xf0
  42eef0:	stp	x29, x30, [sp, #224]
  42eef4:	add	x29, sp, #0xe0
  42eef8:	mov	x8, xzr
  42eefc:	adrp	x9, 448000 <_fini+0x7c30>
  42ef00:	add	x9, x9, #0x3df
  42ef04:	add	x9, x9, #0x3
  42ef08:	adrp	x10, 448000 <_fini+0x7c30>
  42ef0c:	add	x10, x10, #0x743
  42ef10:	stur	x0, [x29, #-16]
  42ef14:	stur	x1, [x29, #-24]
  42ef18:	stur	x2, [x29, #-32]
  42ef1c:	stur	x3, [x29, #-40]
  42ef20:	stur	x4, [x29, #-48]
  42ef24:	stur	x8, [x29, #-56]
  42ef28:	ldur	x8, [x29, #-32]
  42ef2c:	stur	x8, [x29, #-72]
  42ef30:	str	x9, [sp, #24]
  42ef34:	str	x10, [sp, #16]
  42ef38:	ldur	x8, [x29, #-16]
  42ef3c:	cmp	x8, #0x0
  42ef40:	cset	w9, ne  // ne = any
  42ef44:	mov	w10, #0x1                   	// #1
  42ef48:	eor	w9, w9, #0x1
  42ef4c:	eor	w9, w9, w10
  42ef50:	eor	w9, w9, w10
  42ef54:	and	w9, w9, #0x1
  42ef58:	mov	w0, w9
  42ef5c:	sxtw	x8, w0
  42ef60:	cbz	x8, 42ef84 <session_node_enumerator+0x98>
  42ef64:	mov	w8, wzr
  42ef68:	mov	w0, w8
  42ef6c:	adrp	x1, 444000 <_fini+0x3c30>
  42ef70:	add	x1, x1, #0x393
  42ef74:	ldr	x2, [sp, #24]
  42ef78:	mov	w3, #0x285                 	// #645
  42ef7c:	ldr	x4, [sp, #16]
  42ef80:	bl	406c68 <log_assert_failed_realm@plt>
  42ef84:	ldur	x8, [x29, #-24]
  42ef88:	cmp	x8, #0x0
  42ef8c:	cset	w9, ne  // ne = any
  42ef90:	mov	w10, #0x1                   	// #1
  42ef94:	eor	w9, w9, #0x1
  42ef98:	eor	w9, w9, w10
  42ef9c:	eor	w9, w9, w10
  42efa0:	and	w9, w9, #0x1
  42efa4:	mov	w0, w9
  42efa8:	sxtw	x8, w0
  42efac:	cbz	x8, 42efd0 <session_node_enumerator+0xe4>
  42efb0:	mov	w8, wzr
  42efb4:	mov	w0, w8
  42efb8:	adrp	x1, 443000 <_fini+0x2c30>
  42efbc:	add	x1, x1, #0xea9
  42efc0:	ldr	x2, [sp, #24]
  42efc4:	mov	w3, #0x286                 	// #646
  42efc8:	ldr	x4, [sp, #16]
  42efcc:	bl	406c68 <log_assert_failed_realm@plt>
  42efd0:	ldur	x8, [x29, #-40]
  42efd4:	cmp	x8, #0x0
  42efd8:	cset	w9, ne  // ne = any
  42efdc:	mov	w10, #0x1                   	// #1
  42efe0:	eor	w9, w9, #0x1
  42efe4:	eor	w9, w9, w10
  42efe8:	eor	w9, w9, w10
  42efec:	and	w9, w9, #0x1
  42eff0:	mov	w0, w9
  42eff4:	sxtw	x8, w0
  42eff8:	cbz	x8, 42f01c <session_node_enumerator+0x130>
  42effc:	mov	w8, wzr
  42f000:	mov	w0, w8
  42f004:	adrp	x1, 447000 <_fini+0x6c30>
  42f008:	add	x1, x1, #0x988
  42f00c:	ldr	x2, [sp, #24]
  42f010:	mov	w3, #0x287                 	// #647
  42f014:	ldr	x4, [sp, #16]
  42f018:	bl	406c68 <log_assert_failed_realm@plt>
  42f01c:	add	x8, sp, #0x68
  42f020:	mov	w9, #0xfffffffe            	// #-2
  42f024:	str	w9, [sp, #104]
  42f028:	mov	x10, xzr
  42f02c:	str	x10, [x8, #8]
  42f030:	ldur	q0, [sp, #104]
  42f034:	stur	q0, [x29, #-96]
  42f038:	ldur	x8, [x29, #-72]
  42f03c:	ldr	x0, [x8, #32]
  42f040:	sub	x1, x29, #0x60
  42f044:	sub	x2, x29, #0x50
  42f048:	mov	x8, xzr
  42f04c:	mov	x3, x8
  42f050:	bl	42f2e0 <hashmap_iterate>
  42f054:	tbnz	w0, #0, 42f05c <session_node_enumerator+0x170>
  42f058:	b	42f0bc <session_node_enumerator+0x1d0>
  42f05c:	ldur	x0, [x29, #-80]
  42f060:	bl	42ee0c <session_bus_path>
  42f064:	str	x0, [sp, #96]
  42f068:	ldr	x8, [sp, #96]
  42f06c:	cbnz	x8, 42f084 <session_node_enumerator+0x198>
  42f070:	mov	w8, #0xfffffff4            	// #-12
  42f074:	stur	w8, [x29, #-4]
  42f078:	mov	w8, #0x1                   	// #1
  42f07c:	str	w8, [sp, #92]
  42f080:	b	42f294 <session_node_enumerator+0x3a8>
  42f084:	ldr	x1, [sp, #96]
  42f088:	sub	x0, x29, #0x38
  42f08c:	bl	407aa8 <strv_consume@plt>
  42f090:	stur	w0, [x29, #-100]
  42f094:	ldur	w8, [x29, #-100]
  42f098:	cmp	w8, #0x0
  42f09c:	cset	w8, ge  // ge = tcont
  42f0a0:	tbnz	w8, #0, 42f0b8 <session_node_enumerator+0x1cc>
  42f0a4:	ldur	w8, [x29, #-100]
  42f0a8:	stur	w8, [x29, #-4]
  42f0ac:	mov	w8, #0x1                   	// #1
  42f0b0:	str	w8, [sp, #92]
  42f0b4:	b	42f294 <session_node_enumerator+0x3a8>
  42f0b8:	b	42f038 <session_node_enumerator+0x14c>
  42f0bc:	ldur	x0, [x29, #-16]
  42f0c0:	bl	407a78 <sd_bus_get_current_message@plt>
  42f0c4:	stur	x0, [x29, #-64]
  42f0c8:	ldur	x8, [x29, #-64]
  42f0cc:	cbz	x8, 42f264 <session_node_enumerator+0x378>
  42f0d0:	add	x2, sp, #0x50
  42f0d4:	mov	x8, xzr
  42f0d8:	str	x8, [sp, #80]
  42f0dc:	ldur	x0, [x29, #-64]
  42f0e0:	mov	x1, #0x600000              	// #6291456
  42f0e4:	movk	x1, #0x8000, lsl #48
  42f0e8:	bl	407478 <sd_bus_query_sender_creds@plt>
  42f0ec:	stur	w0, [x29, #-100]
  42f0f0:	ldur	w9, [x29, #-100]
  42f0f4:	cmp	w9, #0x0
  42f0f8:	cset	w9, lt  // lt = tstop
  42f0fc:	tbnz	w9, #0, 42f240 <session_node_enumerator+0x354>
  42f100:	mov	w8, #0x0                   	// #0
  42f104:	strb	w8, [sp, #79]
  42f108:	ldr	x0, [sp, #80]
  42f10c:	add	x1, sp, #0x40
  42f110:	bl	407488 <sd_bus_creds_get_session@plt>
  42f114:	stur	w0, [x29, #-100]
  42f118:	ldur	w8, [x29, #-100]
  42f11c:	cmp	w8, #0x0
  42f120:	cset	w8, lt  // lt = tstop
  42f124:	tbnz	w8, #0, 42f184 <session_node_enumerator+0x298>
  42f128:	ldur	x8, [x29, #-72]
  42f12c:	ldr	x0, [x8, #32]
  42f130:	ldr	x1, [sp, #64]
  42f134:	bl	42f354 <hashmap_get>
  42f138:	stur	x0, [x29, #-80]
  42f13c:	ldur	x8, [x29, #-80]
  42f140:	cbz	x8, 42f184 <session_node_enumerator+0x298>
  42f144:	sub	x0, x29, #0x38
  42f148:	adrp	x1, 448000 <_fini+0x7c30>
  42f14c:	add	x1, x1, #0x799
  42f150:	bl	407ab8 <strv_extend@plt>
  42f154:	stur	w0, [x29, #-100]
  42f158:	ldur	w8, [x29, #-100]
  42f15c:	cmp	w8, #0x0
  42f160:	cset	w8, ge  // ge = tcont
  42f164:	tbnz	w8, #0, 42f17c <session_node_enumerator+0x290>
  42f168:	ldur	w8, [x29, #-100]
  42f16c:	stur	w8, [x29, #-4]
  42f170:	mov	w8, #0x1                   	// #1
  42f174:	str	w8, [sp, #92]
  42f178:	b	42f244 <session_node_enumerator+0x358>
  42f17c:	mov	w8, #0x1                   	// #1
  42f180:	strb	w8, [sp, #79]
  42f184:	ldrb	w8, [sp, #79]
  42f188:	tbnz	w8, #0, 42f1fc <session_node_enumerator+0x310>
  42f18c:	ldr	x0, [sp, #80]
  42f190:	add	x1, sp, #0x3c
  42f194:	bl	407498 <sd_bus_creds_get_owner_uid@plt>
  42f198:	stur	w0, [x29, #-100]
  42f19c:	ldur	w8, [x29, #-100]
  42f1a0:	cmp	w8, #0x0
  42f1a4:	cset	w8, lt  // lt = tstop
  42f1a8:	tbnz	w8, #0, 42f1fc <session_node_enumerator+0x310>
  42f1ac:	ldur	x8, [x29, #-72]
  42f1b0:	ldr	x0, [x8, #48]
  42f1b4:	ldr	w9, [sp, #60]
  42f1b8:	mov	w8, w9
  42f1bc:	add	x8, x8, #0x1
  42f1c0:	mov	x1, x8
  42f1c4:	bl	42f354 <hashmap_get>
  42f1c8:	str	x0, [sp, #48]
  42f1cc:	ldr	x8, [sp, #48]
  42f1d0:	mov	w9, #0x0                   	// #0
  42f1d4:	str	w9, [sp, #12]
  42f1d8:	cbz	x8, 42f1f0 <session_node_enumerator+0x304>
  42f1dc:	ldr	x8, [sp, #48]
  42f1e0:	ldr	x8, [x8, #80]
  42f1e4:	cmp	x8, #0x0
  42f1e8:	cset	w9, ne  // ne = any
  42f1ec:	str	w9, [sp, #12]
  42f1f0:	ldr	w8, [sp, #12]
  42f1f4:	and	w8, w8, #0x1
  42f1f8:	strb	w8, [sp, #79]
  42f1fc:	ldrb	w8, [sp, #79]
  42f200:	tbnz	w8, #0, 42f208 <session_node_enumerator+0x31c>
  42f204:	b	42f240 <session_node_enumerator+0x354>
  42f208:	sub	x0, x29, #0x38
  42f20c:	adrp	x1, 448000 <_fini+0x7c30>
  42f210:	add	x1, x1, #0x7be
  42f214:	bl	407ab8 <strv_extend@plt>
  42f218:	stur	w0, [x29, #-100]
  42f21c:	ldur	w8, [x29, #-100]
  42f220:	cmp	w8, #0x0
  42f224:	cset	w8, ge  // ge = tcont
  42f228:	tbnz	w8, #0, 42f240 <session_node_enumerator+0x354>
  42f22c:	ldur	w8, [x29, #-100]
  42f230:	stur	w8, [x29, #-4]
  42f234:	mov	w8, #0x1                   	// #1
  42f238:	str	w8, [sp, #92]
  42f23c:	b	42f244 <session_node_enumerator+0x358>
  42f240:	str	wzr, [sp, #92]
  42f244:	add	x0, sp, #0x50
  42f248:	bl	42f320 <sd_bus_creds_unrefp>
  42f24c:	ldr	w8, [sp, #92]
  42f250:	cmp	w8, #0x0
  42f254:	cset	w8, eq  // eq = none
  42f258:	eor	w8, w8, #0x1
  42f25c:	tbnz	w8, #0, 42f294 <session_node_enumerator+0x3a8>
  42f260:	b	42f264 <session_node_enumerator+0x378>
  42f264:	ldur	x8, [x29, #-56]
  42f268:	str	x8, [sp, #40]
  42f26c:	mov	x8, xzr
  42f270:	stur	x8, [x29, #-56]
  42f274:	ldr	x8, [sp, #40]
  42f278:	str	x8, [sp, #32]
  42f27c:	ldr	x8, [sp, #32]
  42f280:	ldur	x9, [x29, #-40]
  42f284:	str	x8, [x9]
  42f288:	mov	w10, #0x1                   	// #1
  42f28c:	stur	w10, [x29, #-4]
  42f290:	str	w10, [sp, #92]
  42f294:	sub	x0, x29, #0x38
  42f298:	bl	42f2ac <strv_freep>
  42f29c:	ldur	w0, [x29, #-4]
  42f2a0:	ldp	x29, x30, [sp, #224]
  42f2a4:	add	sp, sp, #0xf0
  42f2a8:	ret

000000000042f2ac <strv_freep>:
  42f2ac:	sub	sp, sp, #0x20
  42f2b0:	stp	x29, x30, [sp, #16]
  42f2b4:	add	x29, sp, #0x10
  42f2b8:	str	x0, [sp, #8]
  42f2bc:	ldr	x8, [sp, #8]
  42f2c0:	ldr	x8, [x8]
  42f2c4:	cbz	x8, 42f2d4 <strv_freep+0x28>
  42f2c8:	ldr	x8, [sp, #8]
  42f2cc:	ldr	x0, [x8]
  42f2d0:	bl	406d98 <strv_free@plt>
  42f2d4:	ldp	x29, x30, [sp, #16]
  42f2d8:	add	sp, sp, #0x20
  42f2dc:	ret

000000000042f2e0 <hashmap_iterate>:
  42f2e0:	sub	sp, sp, #0x30
  42f2e4:	stp	x29, x30, [sp, #32]
  42f2e8:	add	x29, sp, #0x20
  42f2ec:	stur	x0, [x29, #-8]
  42f2f0:	str	x1, [sp, #16]
  42f2f4:	str	x2, [sp, #8]
  42f2f8:	str	x3, [sp]
  42f2fc:	ldur	x0, [x29, #-8]
  42f300:	ldr	x1, [sp, #16]
  42f304:	ldr	x2, [sp, #8]
  42f308:	ldr	x3, [sp]
  42f30c:	bl	407018 <internal_hashmap_iterate@plt>
  42f310:	and	w0, w0, #0x1
  42f314:	ldp	x29, x30, [sp, #32]
  42f318:	add	sp, sp, #0x30
  42f31c:	ret

000000000042f320 <sd_bus_creds_unrefp>:
  42f320:	sub	sp, sp, #0x20
  42f324:	stp	x29, x30, [sp, #16]
  42f328:	add	x29, sp, #0x10
  42f32c:	str	x0, [sp, #8]
  42f330:	ldr	x8, [sp, #8]
  42f334:	ldr	x8, [x8]
  42f338:	cbz	x8, 42f348 <sd_bus_creds_unrefp+0x28>
  42f33c:	ldr	x8, [sp, #8]
  42f340:	ldr	x0, [x8]
  42f344:	bl	407868 <sd_bus_creds_unref@plt>
  42f348:	ldp	x29, x30, [sp, #16]
  42f34c:	add	sp, sp, #0x20
  42f350:	ret

000000000042f354 <hashmap_get>:
  42f354:	sub	sp, sp, #0x20
  42f358:	stp	x29, x30, [sp, #16]
  42f35c:	add	x29, sp, #0x10
  42f360:	str	x0, [sp, #8]
  42f364:	str	x1, [sp]
  42f368:	ldr	x0, [sp, #8]
  42f36c:	ldr	x1, [sp]
  42f370:	bl	4070e8 <internal_hashmap_get@plt>
  42f374:	ldp	x29, x30, [sp, #16]
  42f378:	add	sp, sp, #0x20
  42f37c:	ret

000000000042f380 <session_send_signal>:
  42f380:	sub	sp, sp, #0x40
  42f384:	stp	x29, x30, [sp, #48]
  42f388:	add	x29, sp, #0x30
  42f38c:	mov	x8, xzr
  42f390:	mov	w9, #0x1                   	// #1
  42f394:	adrp	x10, 448000 <_fini+0x7c30>
  42f398:	add	x10, x10, #0x3df
  42f39c:	add	x2, x10, #0x3
  42f3a0:	stur	x0, [x29, #-16]
  42f3a4:	and	w9, w1, w9
  42f3a8:	sturb	w9, [x29, #-17]
  42f3ac:	str	x8, [sp, #16]
  42f3b0:	str	x2, [sp]
  42f3b4:	ldur	x8, [x29, #-16]
  42f3b8:	cmp	x8, #0x0
  42f3bc:	cset	w9, ne  // ne = any
  42f3c0:	mov	w10, #0x1                   	// #1
  42f3c4:	eor	w9, w9, #0x1
  42f3c8:	eor	w9, w9, w10
  42f3cc:	eor	w9, w9, w10
  42f3d0:	and	w9, w9, #0x1
  42f3d4:	mov	w0, w9
  42f3d8:	sxtw	x8, w0
  42f3dc:	cbz	x8, 42f404 <session_send_signal+0x84>
  42f3e0:	mov	w8, wzr
  42f3e4:	mov	w0, w8
  42f3e8:	adrp	x1, 442000 <_fini+0x1c30>
  42f3ec:	add	x1, x1, #0xf2
  42f3f0:	ldr	x2, [sp]
  42f3f4:	mov	w3, #0x2c5                 	// #709
  42f3f8:	adrp	x4, 448000 <_fini+0x7c30>
  42f3fc:	add	x4, x4, #0x7e3
  42f400:	bl	406c68 <log_assert_failed_realm@plt>
  42f404:	ldur	x0, [x29, #-16]
  42f408:	bl	42ee0c <session_bus_path>
  42f40c:	str	x0, [sp, #16]
  42f410:	ldr	x8, [sp, #16]
  42f414:	cbnz	x8, 42f42c <session_send_signal+0xac>
  42f418:	mov	w8, #0xfffffff4            	// #-12
  42f41c:	stur	w8, [x29, #-4]
  42f420:	mov	w8, #0x1                   	// #1
  42f424:	str	w8, [sp, #12]
  42f428:	b	42f488 <session_send_signal+0x108>
  42f42c:	ldur	x8, [x29, #-16]
  42f430:	ldr	x8, [x8]
  42f434:	ldr	x0, [x8, #8]
  42f438:	ldurb	w9, [x29, #-17]
  42f43c:	adrp	x8, 443000 <_fini+0x2c30>
  42f440:	add	x8, x8, #0x7b5
  42f444:	adrp	x10, 443000 <_fini+0x2c30>
  42f448:	add	x10, x10, #0x7a7
  42f44c:	tst	w9, #0x1
  42f450:	csel	x3, x10, x8, ne  // ne = any
  42f454:	ldur	x8, [x29, #-16]
  42f458:	ldr	x5, [x8, #8]
  42f45c:	ldr	x6, [sp, #16]
  42f460:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  42f464:	add	x1, x1, #0xd9b
  42f468:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  42f46c:	add	x2, x2, #0xdb3
  42f470:	adrp	x4, 443000 <_fini+0x2c30>
  42f474:	add	x4, x4, #0x7b2
  42f478:	bl	4074e8 <sd_bus_emit_signal@plt>
  42f47c:	stur	w0, [x29, #-4]
  42f480:	mov	w9, #0x1                   	// #1
  42f484:	str	w9, [sp, #12]
  42f488:	add	x0, sp, #0x10
  42f48c:	bl	42ed40 <freep>
  42f490:	ldur	w0, [x29, #-4]
  42f494:	ldp	x29, x30, [sp, #48]
  42f498:	add	sp, sp, #0x40
  42f49c:	ret

000000000042f4a0 <session_send_changed>:
  42f4a0:	stp	x29, x30, [sp, #-32]!
  42f4a4:	stp	x28, x19, [sp, #16]
  42f4a8:	mov	x29, sp
  42f4ac:	sub	sp, sp, #0x160
  42f4b0:	mov	x19, sp
  42f4b4:	str	q7, [x19, #160]
  42f4b8:	str	q6, [x19, #144]
  42f4bc:	str	q5, [x19, #128]
  42f4c0:	str	q4, [x19, #112]
  42f4c4:	str	q3, [x19, #96]
  42f4c8:	str	q2, [x19, #80]
  42f4cc:	str	q1, [x19, #64]
  42f4d0:	str	q0, [x19, #48]
  42f4d4:	stur	x7, [x29, #-128]
  42f4d8:	stur	x6, [x29, #-136]
  42f4dc:	stur	x5, [x29, #-144]
  42f4e0:	stur	x4, [x29, #-152]
  42f4e4:	stur	x3, [x29, #-160]
  42f4e8:	stur	x2, [x29, #-168]
  42f4ec:	stur	x0, [x29, #-16]
  42f4f0:	stur	x1, [x29, #-24]
  42f4f4:	mov	x8, xzr
  42f4f8:	stur	x8, [x29, #-32]
  42f4fc:	b	42f500 <session_send_changed+0x60>
  42f500:	ldur	x8, [x29, #-16]
  42f504:	cbnz	x8, 42f530 <session_send_changed+0x90>
  42f508:	b	42f50c <session_send_changed+0x6c>
  42f50c:	adrp	x1, 442000 <_fini+0x1c30>
  42f510:	add	x1, x1, #0xf2
  42f514:	adrp	x2, 448000 <_fini+0x7c30>
  42f518:	add	x2, x2, #0x3e2
  42f51c:	adrp	x4, 448000 <_fini+0x7c30>
  42f520:	add	x4, x4, #0x80d
  42f524:	mov	w0, wzr
  42f528:	mov	w3, #0x2d7                 	// #727
  42f52c:	bl	406c68 <log_assert_failed_realm@plt>
  42f530:	b	42f534 <session_send_changed+0x94>
  42f534:	b	42f538 <session_send_changed+0x98>
  42f538:	ldur	x8, [x29, #-16]
  42f53c:	ldrb	w9, [x8, #209]
  42f540:	tbnz	w9, #1, 42f55c <session_send_changed+0xbc>
  42f544:	b	42f548 <session_send_changed+0xa8>
  42f548:	mov	w8, wzr
  42f54c:	stur	w8, [x29, #-4]
  42f550:	mov	w8, #0x1                   	// #1
  42f554:	stur	w8, [x29, #-44]
  42f558:	b	42f84c <session_send_changed+0x3ac>
  42f55c:	ldur	x0, [x29, #-16]
  42f560:	bl	42ee0c <session_bus_path>
  42f564:	stur	x0, [x29, #-32]
  42f568:	ldur	x8, [x29, #-32]
  42f56c:	cbnz	x8, 42f588 <session_send_changed+0xe8>
  42f570:	b	42f574 <session_send_changed+0xd4>
  42f574:	mov	w8, #0xfffffff4            	// #-12
  42f578:	stur	w8, [x29, #-4]
  42f57c:	mov	w8, #0x1                   	// #1
  42f580:	stur	w8, [x29, #-44]
  42f584:	b	42f84c <session_send_changed+0x3ac>
  42f588:	ldur	x8, [x29, #-24]
  42f58c:	cbnz	x8, 42f5a0 <session_send_changed+0x100>
  42f590:	b	42f594 <session_send_changed+0xf4>
  42f594:	sub	x8, x29, #0x18
  42f598:	stur	x8, [x29, #-56]
  42f59c:	b	42f80c <session_send_changed+0x36c>
  42f5a0:	mov	w8, #0x1                   	// #1
  42f5a4:	mov	w9, w8
  42f5a8:	stur	x9, [x29, #-64]
  42f5ac:	mov	w8, #0xffffff80            	// #-128
  42f5b0:	stur	w8, [x29, #-68]
  42f5b4:	mov	w8, #0xffffffd0            	// #-48
  42f5b8:	stur	w8, [x29, #-72]
  42f5bc:	add	x9, x19, #0x30
  42f5c0:	add	x9, x9, #0x80
  42f5c4:	stur	x9, [x29, #-80]
  42f5c8:	sub	x9, x29, #0xa8
  42f5cc:	add	x9, x9, #0x30
  42f5d0:	stur	x9, [x29, #-88]
  42f5d4:	add	x9, x29, #0x20
  42f5d8:	stur	x9, [x29, #-96]
  42f5dc:	b	42f5e0 <session_send_changed+0x140>
  42f5e0:	sub	x8, x29, #0x60
  42f5e4:	add	x8, x8, #0x18
  42f5e8:	ldur	w9, [x29, #-72]
  42f5ec:	mov	w10, w9
  42f5f0:	str	x8, [x19, #40]
  42f5f4:	str	w10, [x19, #36]
  42f5f8:	tbz	w9, #31, 42f630 <session_send_changed+0x190>
  42f5fc:	b	42f600 <session_send_changed+0x160>
  42f600:	ldr	w8, [x19, #36]
  42f604:	add	w9, w8, #0x8
  42f608:	ldr	x10, [x19, #40]
  42f60c:	str	w9, [x10]
  42f610:	subs	w9, w9, #0x0
  42f614:	b.gt	42f630 <session_send_changed+0x190>
  42f618:	b	42f61c <session_send_changed+0x17c>
  42f61c:	ldur	x8, [x29, #-88]
  42f620:	ldr	w9, [x19, #36]
  42f624:	add	x8, x8, w9, sxtw
  42f628:	str	x8, [x19, #24]
  42f62c:	b	42f644 <session_send_changed+0x1a4>
  42f630:	ldur	x8, [x29, #-96]
  42f634:	add	x9, x8, #0x8
  42f638:	stur	x9, [x29, #-96]
  42f63c:	str	x8, [x19, #24]
  42f640:	b	42f644 <session_send_changed+0x1a4>
  42f644:	ldr	x8, [x19, #24]
  42f648:	ldr	x8, [x8]
  42f64c:	cbz	x8, 42f664 <session_send_changed+0x1c4>
  42f650:	b	42f654 <session_send_changed+0x1b4>
  42f654:	ldur	x8, [x29, #-64]
  42f658:	add	x8, x8, #0x1
  42f65c:	stur	x8, [x29, #-64]
  42f660:	b	42f5e0 <session_send_changed+0x140>
  42f664:	ldur	x8, [x29, #-64]
  42f668:	add	x8, x8, #0x1
  42f66c:	stur	x8, [x29, #-104]
  42f670:	b	42f674 <session_send_changed+0x1d4>
  42f674:	ldur	x1, [x29, #-104]
  42f678:	mov	w8, #0x8                   	// #8
  42f67c:	mov	w0, w8
  42f680:	bl	42f868 <size_multiply_overflow>
  42f684:	tbz	w0, #0, 42f6b0 <session_send_changed+0x210>
  42f688:	b	42f68c <session_send_changed+0x1ec>
  42f68c:	adrp	x1, 443000 <_fini+0x2c30>
  42f690:	add	x1, x1, #0xa1c
  42f694:	adrp	x2, 448000 <_fini+0x7c30>
  42f698:	add	x2, x2, #0x3e2
  42f69c:	adrp	x4, 448000 <_fini+0x7c30>
  42f6a0:	add	x4, x4, #0x80d
  42f6a4:	mov	w0, wzr
  42f6a8:	mov	w3, #0x2e0                 	// #736
  42f6ac:	bl	406c68 <log_assert_failed_realm@plt>
  42f6b0:	b	42f6b4 <session_send_changed+0x214>
  42f6b4:	b	42f6b8 <session_send_changed+0x218>
  42f6b8:	b	42f6bc <session_send_changed+0x21c>
  42f6bc:	ldur	x8, [x29, #-104]
  42f6c0:	lsl	x8, x8, #3
  42f6c4:	subs	x8, x8, #0x400, lsl #12
  42f6c8:	b.ls	42f6f4 <session_send_changed+0x254>  // b.plast
  42f6cc:	b	42f6d0 <session_send_changed+0x230>
  42f6d0:	adrp	x1, 443000 <_fini+0x2c30>
  42f6d4:	add	x1, x1, #0xa48
  42f6d8:	adrp	x2, 448000 <_fini+0x7c30>
  42f6dc:	add	x2, x2, #0x3e2
  42f6e0:	adrp	x4, 448000 <_fini+0x7c30>
  42f6e4:	add	x4, x4, #0x80d
  42f6e8:	mov	w0, wzr
  42f6ec:	mov	w3, #0x2e0                 	// #736
  42f6f0:	bl	406c68 <log_assert_failed_realm@plt>
  42f6f4:	b	42f6f8 <session_send_changed+0x258>
  42f6f8:	b	42f6fc <session_send_changed+0x25c>
  42f6fc:	ldur	x8, [x29, #-104]
  42f700:	lsl	x8, x8, #3
  42f704:	add	x8, x8, #0xf
  42f708:	and	x8, x8, #0xfffffffffffffff0
  42f70c:	mov	x9, sp
  42f710:	subs	x8, x9, x8
  42f714:	mov	sp, x8
  42f718:	stur	x8, [x29, #-112]
  42f71c:	ldur	x8, [x29, #-112]
  42f720:	stur	x8, [x29, #-56]
  42f724:	ldur	x8, [x29, #-24]
  42f728:	ldur	x9, [x29, #-56]
  42f72c:	mov	x10, xzr
  42f730:	stur	x10, [x29, #-64]
  42f734:	str	x8, [x9]
  42f738:	mov	w11, #0xffffff80            	// #-128
  42f73c:	stur	w11, [x29, #-68]
  42f740:	mov	w11, #0xffffffd0            	// #-48
  42f744:	stur	w11, [x29, #-72]
  42f748:	add	x8, x19, #0x30
  42f74c:	add	x8, x8, #0x80
  42f750:	stur	x8, [x29, #-80]
  42f754:	sub	x8, x29, #0xa8
  42f758:	add	x8, x8, #0x30
  42f75c:	stur	x8, [x29, #-88]
  42f760:	add	x8, x29, #0x20
  42f764:	stur	x8, [x29, #-96]
  42f768:	b	42f76c <session_send_changed+0x2cc>
  42f76c:	sub	x8, x29, #0x60
  42f770:	add	x8, x8, #0x18
  42f774:	ldur	w9, [x29, #-72]
  42f778:	mov	w10, w9
  42f77c:	str	x8, [x19, #16]
  42f780:	str	w10, [x19, #12]
  42f784:	tbz	w9, #31, 42f7bc <session_send_changed+0x31c>
  42f788:	b	42f78c <session_send_changed+0x2ec>
  42f78c:	ldr	w8, [x19, #12]
  42f790:	add	w9, w8, #0x8
  42f794:	ldr	x10, [x19, #16]
  42f798:	str	w9, [x10]
  42f79c:	subs	w9, w9, #0x0
  42f7a0:	b.gt	42f7bc <session_send_changed+0x31c>
  42f7a4:	b	42f7a8 <session_send_changed+0x308>
  42f7a8:	ldur	x8, [x29, #-88]
  42f7ac:	ldr	w9, [x19, #12]
  42f7b0:	add	x8, x8, w9, sxtw
  42f7b4:	str	x8, [x19]
  42f7b8:	b	42f7d0 <session_send_changed+0x330>
  42f7bc:	ldur	x8, [x29, #-96]
  42f7c0:	add	x9, x8, #0x8
  42f7c4:	stur	x9, [x29, #-96]
  42f7c8:	str	x8, [x19]
  42f7cc:	b	42f7d0 <session_send_changed+0x330>
  42f7d0:	ldr	x8, [x19]
  42f7d4:	ldr	x8, [x8]
  42f7d8:	ldur	x9, [x29, #-56]
  42f7dc:	ldur	x10, [x29, #-64]
  42f7e0:	add	x10, x10, #0x1
  42f7e4:	stur	x10, [x29, #-64]
  42f7e8:	str	x8, [x9, x10, lsl #3]
  42f7ec:	ldur	x8, [x29, #-56]
  42f7f0:	ldur	x9, [x29, #-64]
  42f7f4:	ldr	x8, [x8, x9, lsl #3]
  42f7f8:	cbnz	x8, 42f804 <session_send_changed+0x364>
  42f7fc:	b	42f800 <session_send_changed+0x360>
  42f800:	b	42f808 <session_send_changed+0x368>
  42f804:	b	42f76c <session_send_changed+0x2cc>
  42f808:	b	42f80c <session_send_changed+0x36c>
  42f80c:	ldur	x8, [x29, #-56]
  42f810:	stur	x8, [x29, #-120]
  42f814:	ldur	x8, [x29, #-120]
  42f818:	stur	x8, [x29, #-40]
  42f81c:	ldur	x8, [x29, #-16]
  42f820:	ldr	x8, [x8]
  42f824:	ldr	x0, [x8, #8]
  42f828:	ldur	x1, [x29, #-32]
  42f82c:	ldur	x3, [x29, #-40]
  42f830:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  42f834:	add	x2, x2, #0xe9a
  42f838:	bl	4077c8 <sd_bus_emit_properties_changed_strv@plt>
  42f83c:	stur	w0, [x29, #-4]
  42f840:	mov	w9, #0x1                   	// #1
  42f844:	stur	w9, [x29, #-44]
  42f848:	b	42f84c <session_send_changed+0x3ac>
  42f84c:	sub	x0, x29, #0x20
  42f850:	bl	42ed40 <freep>
  42f854:	ldur	w0, [x29, #-4]
  42f858:	mov	sp, x29
  42f85c:	ldp	x28, x19, [sp, #16]
  42f860:	ldp	x29, x30, [sp], #32
  42f864:	ret

000000000042f868 <size_multiply_overflow>:
  42f868:	sub	sp, sp, #0x20
  42f86c:	str	x0, [sp, #24]
  42f870:	str	x1, [sp, #16]
  42f874:	ldr	x8, [sp, #16]
  42f878:	mov	w9, #0x0                   	// #0
  42f87c:	str	w9, [sp, #12]
  42f880:	cbz	x8, 42f8a0 <size_multiply_overflow+0x38>
  42f884:	ldr	x8, [sp, #24]
  42f888:	ldr	x9, [sp, #16]
  42f88c:	mov	x10, #0xffffffffffffffff    	// #-1
  42f890:	udiv	x9, x10, x9
  42f894:	cmp	x8, x9
  42f898:	cset	w11, hi  // hi = pmore
  42f89c:	str	w11, [sp, #12]
  42f8a0:	ldr	w8, [sp, #12]
  42f8a4:	mov	w9, #0x1                   	// #1
  42f8a8:	eor	w8, w8, #0x1
  42f8ac:	eor	w8, w8, w9
  42f8b0:	and	w8, w8, #0x1
  42f8b4:	mov	w0, w8
  42f8b8:	sxtw	x10, w0
  42f8bc:	cmp	x10, #0x0
  42f8c0:	cset	w8, ne  // ne = any
  42f8c4:	and	w0, w8, #0x1
  42f8c8:	add	sp, sp, #0x20
  42f8cc:	ret

000000000042f8d0 <session_send_lock_all>:
  42f8d0:	sub	sp, sp, #0x70
  42f8d4:	stp	x29, x30, [sp, #96]
  42f8d8:	add	x29, sp, #0x60
  42f8dc:	adrp	x8, 448000 <_fini+0x7c30>
  42f8e0:	add	x8, x8, #0x3df
  42f8e4:	add	x2, x8, #0x3
  42f8e8:	stur	x0, [x29, #-8]
  42f8ec:	and	w9, w1, #0x1
  42f8f0:	sturb	w9, [x29, #-9]
  42f8f4:	str	wzr, [sp, #44]
  42f8f8:	str	x2, [sp, #8]
  42f8fc:	ldur	x8, [x29, #-8]
  42f900:	cmp	x8, #0x0
  42f904:	cset	w9, ne  // ne = any
  42f908:	mov	w10, #0x1                   	// #1
  42f90c:	eor	w9, w9, #0x1
  42f910:	eor	w9, w9, w10
  42f914:	eor	w9, w9, w10
  42f918:	and	w9, w9, #0x1
  42f91c:	mov	w0, w9
  42f920:	sxtw	x8, w0
  42f924:	cbz	x8, 42f94c <session_send_lock_all+0x7c>
  42f928:	mov	w8, wzr
  42f92c:	mov	w0, w8
  42f930:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  42f934:	add	x1, x1, #0x5ef
  42f938:	ldr	x2, [sp, #8]
  42f93c:	mov	w3, #0x2fb                 	// #763
  42f940:	adrp	x4, 448000 <_fini+0x7c30>
  42f944:	add	x4, x4, #0x86c
  42f948:	bl	406c68 <log_assert_failed_realm@plt>
  42f94c:	add	x8, sp, #0x18
  42f950:	mov	w9, #0xfffffffe            	// #-2
  42f954:	str	w9, [sp, #24]
  42f958:	mov	x10, xzr
  42f95c:	str	x10, [x8, #8]
  42f960:	ldur	q0, [sp, #24]
  42f964:	str	q0, [sp, #48]
  42f968:	ldur	x8, [x29, #-8]
  42f96c:	ldr	x0, [x8, #32]
  42f970:	add	x1, sp, #0x30
  42f974:	sub	x2, x29, #0x18
  42f978:	mov	x8, xzr
  42f97c:	mov	x3, x8
  42f980:	bl	42f2e0 <hashmap_iterate>
  42f984:	tbnz	w0, #0, 42f98c <session_send_lock_all+0xbc>
  42f988:	b	42f9bc <session_send_lock_all+0xec>
  42f98c:	ldur	x0, [x29, #-24]
  42f990:	ldurb	w8, [x29, #-9]
  42f994:	and	w1, w8, #0x1
  42f998:	bl	42c330 <session_send_lock>
  42f99c:	str	w0, [sp, #20]
  42f9a0:	ldr	w8, [sp, #20]
  42f9a4:	cmp	w8, #0x0
  42f9a8:	cset	w8, ge  // ge = tcont
  42f9ac:	tbnz	w8, #0, 42f9b8 <session_send_lock_all+0xe8>
  42f9b0:	ldr	w8, [sp, #20]
  42f9b4:	str	w8, [sp, #44]
  42f9b8:	b	42f968 <session_send_lock_all+0x98>
  42f9bc:	ldr	w0, [sp, #44]
  42f9c0:	ldp	x29, x30, [sp, #96]
  42f9c4:	add	sp, sp, #0x70
  42f9c8:	ret

000000000042f9cc <session_send_create_reply>:
  42f9cc:	sub	sp, sp, #0x120
  42f9d0:	stp	x29, x30, [sp, #256]
  42f9d4:	str	x28, [sp, #272]
  42f9d8:	add	x29, sp, #0x100
  42f9dc:	mov	x8, xzr
  42f9e0:	mov	w9, #0xffffffff            	// #-1
  42f9e4:	adrp	x10, 448000 <_fini+0x7c30>
  42f9e8:	add	x10, x10, #0x3df
  42f9ec:	add	x10, x10, #0x3
  42f9f0:	stur	x0, [x29, #-16]
  42f9f4:	stur	x1, [x29, #-24]
  42f9f8:	stur	x8, [x29, #-32]
  42f9fc:	stur	w9, [x29, #-36]
  42fa00:	stur	x8, [x29, #-48]
  42fa04:	stur	x10, [x29, #-96]
  42fa08:	ldur	x8, [x29, #-16]
  42fa0c:	cmp	x8, #0x0
  42fa10:	cset	w9, ne  // ne = any
  42fa14:	mov	w10, #0x1                   	// #1
  42fa18:	eor	w9, w9, #0x1
  42fa1c:	eor	w9, w9, w10
  42fa20:	eor	w9, w9, w10
  42fa24:	and	w9, w9, #0x1
  42fa28:	mov	w0, w9
  42fa2c:	sxtw	x8, w0
  42fa30:	cbz	x8, 42fa58 <session_send_create_reply+0x8c>
  42fa34:	mov	w8, wzr
  42fa38:	mov	w0, w8
  42fa3c:	adrp	x1, 442000 <_fini+0x1c30>
  42fa40:	add	x1, x1, #0xf2
  42fa44:	ldur	x2, [x29, #-96]
  42fa48:	mov	w3, #0x316                 	// #790
  42fa4c:	adrp	x4, 448000 <_fini+0x7c30>
  42fa50:	add	x4, x4, #0x898
  42fa54:	bl	406c68 <log_assert_failed_realm@plt>
  42fa58:	ldur	x8, [x29, #-16]
  42fa5c:	ldr	x8, [x8, #216]
  42fa60:	cbnz	x8, 42fa74 <session_send_create_reply+0xa8>
  42fa64:	stur	wzr, [x29, #-4]
  42fa68:	mov	w8, #0x1                   	// #1
  42fa6c:	stur	w8, [x29, #-52]
  42fa70:	b	42fd44 <session_send_create_reply+0x378>
  42fa74:	ldur	x0, [x29, #-24]
  42fa78:	bl	407b78 <sd_bus_error_is_set@plt>
  42fa7c:	cbnz	w0, 42fa9c <session_send_create_reply+0xd0>
  42fa80:	ldur	x0, [x29, #-16]
  42fa84:	bl	42fdcc <session_ready>
  42fa88:	tbnz	w0, #0, 42fa9c <session_send_create_reply+0xd0>
  42fa8c:	stur	wzr, [x29, #-4]
  42fa90:	mov	w8, #0x1                   	// #1
  42fa94:	stur	w8, [x29, #-52]
  42fa98:	b	42fd44 <session_send_create_reply+0x378>
  42fa9c:	ldur	x8, [x29, #-16]
  42faa0:	ldr	x8, [x8, #216]
  42faa4:	stur	x8, [x29, #-64]
  42faa8:	ldur	x8, [x29, #-16]
  42faac:	mov	x9, xzr
  42fab0:	str	x9, [x8, #216]
  42fab4:	ldur	x8, [x29, #-64]
  42fab8:	stur	x8, [x29, #-72]
  42fabc:	ldur	x8, [x29, #-72]
  42fac0:	stur	x8, [x29, #-32]
  42fac4:	ldur	x8, [x29, #-24]
  42fac8:	cbz	x8, 42fae8 <session_send_create_reply+0x11c>
  42facc:	ldur	x0, [x29, #-32]
  42fad0:	ldur	x1, [x29, #-24]
  42fad4:	bl	407b88 <sd_bus_reply_method_error@plt>
  42fad8:	stur	w0, [x29, #-4]
  42fadc:	mov	w8, #0x1                   	// #1
  42fae0:	stur	w8, [x29, #-52]
  42fae4:	b	42fd44 <session_send_create_reply+0x378>
  42fae8:	ldur	x0, [x29, #-16]
  42faec:	bl	434674 <session_create_fifo>
  42faf0:	stur	w0, [x29, #-36]
  42faf4:	ldur	w8, [x29, #-36]
  42faf8:	cmp	w8, #0x0
  42fafc:	cset	w8, ge  // ge = tcont
  42fb00:	tbnz	w8, #0, 42fb18 <session_send_create_reply+0x14c>
  42fb04:	ldur	w8, [x29, #-36]
  42fb08:	stur	w8, [x29, #-4]
  42fb0c:	mov	w8, #0x1                   	// #1
  42fb10:	stur	w8, [x29, #-52]
  42fb14:	b	42fd44 <session_send_create_reply+0x378>
  42fb18:	ldur	x0, [x29, #-16]
  42fb1c:	bl	432bf8 <session_save>
  42fb20:	ldur	x8, [x29, #-16]
  42fb24:	mov	x0, x8
  42fb28:	bl	42ee0c <session_bus_path>
  42fb2c:	stur	x0, [x29, #-48]
  42fb30:	ldur	x8, [x29, #-48]
  42fb34:	cbnz	x8, 42fb4c <session_send_create_reply+0x180>
  42fb38:	mov	w8, #0xfffffff4            	// #-12
  42fb3c:	stur	w8, [x29, #-4]
  42fb40:	mov	w8, #0x1                   	// #1
  42fb44:	stur	w8, [x29, #-52]
  42fb48:	b	42fd44 <session_send_create_reply+0x378>
  42fb4c:	mov	w8, #0x7                   	// #7
  42fb50:	stur	w8, [x29, #-76]
  42fb54:	stur	wzr, [x29, #-80]
  42fb58:	stur	wzr, [x29, #-84]
  42fb5c:	ldur	w0, [x29, #-84]
  42fb60:	bl	406c08 <log_get_max_level_realm@plt>
  42fb64:	ldur	w8, [x29, #-76]
  42fb68:	and	w8, w8, #0x7
  42fb6c:	cmp	w0, w8
  42fb70:	b.lt	42fc68 <session_send_create_reply+0x29c>  // b.tstop
  42fb74:	ldur	w8, [x29, #-84]
  42fb78:	ldur	w9, [x29, #-76]
  42fb7c:	orr	w0, w9, w8, lsl #10
  42fb80:	ldur	w1, [x29, #-80]
  42fb84:	ldur	x10, [x29, #-16]
  42fb88:	ldr	x6, [x10, #8]
  42fb8c:	ldur	x7, [x29, #-48]
  42fb90:	ldur	x10, [x29, #-16]
  42fb94:	ldr	x10, [x10, #40]
  42fb98:	ldr	w8, [x10, #8]
  42fb9c:	ldur	x10, [x29, #-16]
  42fba0:	ldr	x10, [x10, #40]
  42fba4:	ldr	x10, [x10, #40]
  42fba8:	ldur	w9, [x29, #-36]
  42fbac:	ldur	x11, [x29, #-16]
  42fbb0:	ldr	x11, [x11, #136]
  42fbb4:	stur	w0, [x29, #-100]
  42fbb8:	stur	w1, [x29, #-104]
  42fbbc:	stur	x6, [x29, #-112]
  42fbc0:	stur	x7, [x29, #-120]
  42fbc4:	stur	w8, [x29, #-124]
  42fbc8:	str	x10, [sp, #120]
  42fbcc:	str	w9, [sp, #116]
  42fbd0:	cbz	x11, 42fbe8 <session_send_create_reply+0x21c>
  42fbd4:	ldur	x8, [x29, #-16]
  42fbd8:	ldr	x8, [x8, #136]
  42fbdc:	ldr	x8, [x8, #8]
  42fbe0:	str	x8, [sp, #104]
  42fbe4:	b	42fbf4 <session_send_create_reply+0x228>
  42fbe8:	adrp	x8, 443000 <_fini+0x2c30>
  42fbec:	add	x8, x8, #0x467
  42fbf0:	str	x8, [sp, #104]
  42fbf4:	ldr	x8, [sp, #104]
  42fbf8:	ldur	x9, [x29, #-16]
  42fbfc:	ldr	w10, [x9, #144]
  42fc00:	ldur	w0, [x29, #-100]
  42fc04:	ldur	w1, [x29, #-104]
  42fc08:	ldur	x2, [x29, #-96]
  42fc0c:	mov	w3, #0x339                 	// #825
  42fc10:	adrp	x4, 448000 <_fini+0x7c30>
  42fc14:	add	x4, x4, #0x8d1
  42fc18:	adrp	x5, 448000 <_fini+0x7c30>
  42fc1c:	add	x5, x5, #0x8eb
  42fc20:	ldur	x6, [x29, #-112]
  42fc24:	ldur	x7, [x29, #-120]
  42fc28:	mov	x9, sp
  42fc2c:	ldur	w11, [x29, #-124]
  42fc30:	str	w11, [x9]
  42fc34:	mov	x9, sp
  42fc38:	ldr	x12, [sp, #120]
  42fc3c:	str	x12, [x9, #8]
  42fc40:	mov	x9, sp
  42fc44:	ldr	w13, [sp, #116]
  42fc48:	str	w13, [x9, #16]
  42fc4c:	mov	x9, sp
  42fc50:	str	x8, [x9, #24]
  42fc54:	mov	x8, sp
  42fc58:	str	w10, [x8, #32]
  42fc5c:	bl	406c18 <log_internal_realm@plt>
  42fc60:	str	w0, [sp, #100]
  42fc64:	b	42fc7c <session_send_create_reply+0x2b0>
  42fc68:	ldur	w0, [x29, #-80]
  42fc6c:	bl	406c28 <abs@plt>
  42fc70:	mov	w8, wzr
  42fc74:	subs	w8, w8, w0, uxtb
  42fc78:	str	w8, [sp, #100]
  42fc7c:	ldr	w8, [sp, #100]
  42fc80:	stur	w8, [x29, #-88]
  42fc84:	ldur	x0, [x29, #-32]
  42fc88:	ldur	x9, [x29, #-16]
  42fc8c:	ldr	x2, [x9, #8]
  42fc90:	ldur	x3, [x29, #-48]
  42fc94:	ldur	x9, [x29, #-16]
  42fc98:	ldr	x9, [x9, #40]
  42fc9c:	ldr	x4, [x9, #40]
  42fca0:	ldur	w5, [x29, #-36]
  42fca4:	ldur	x9, [x29, #-16]
  42fca8:	ldr	x9, [x9, #40]
  42fcac:	ldr	w6, [x9, #8]
  42fcb0:	ldur	x9, [x29, #-16]
  42fcb4:	ldr	x9, [x9, #136]
  42fcb8:	str	x0, [sp, #88]
  42fcbc:	str	x2, [sp, #80]
  42fcc0:	str	x3, [sp, #72]
  42fcc4:	str	x4, [sp, #64]
  42fcc8:	str	w5, [sp, #60]
  42fccc:	str	w6, [sp, #56]
  42fcd0:	cbz	x9, 42fce8 <session_send_create_reply+0x31c>
  42fcd4:	ldur	x8, [x29, #-16]
  42fcd8:	ldr	x8, [x8, #136]
  42fcdc:	ldr	x8, [x8, #8]
  42fce0:	str	x8, [sp, #48]
  42fce4:	b	42fcf4 <session_send_create_reply+0x328>
  42fce8:	adrp	x8, 443000 <_fini+0x2c30>
  42fcec:	add	x8, x8, #0x467
  42fcf0:	str	x8, [sp, #48]
  42fcf4:	ldr	x8, [sp, #48]
  42fcf8:	ldur	x9, [x29, #-16]
  42fcfc:	ldr	w10, [x9, #144]
  42fd00:	ldr	x0, [sp, #88]
  42fd04:	adrp	x1, 443000 <_fini+0x2c30>
  42fd08:	add	x1, x1, #0x506
  42fd0c:	ldr	x2, [sp, #80]
  42fd10:	ldr	x3, [sp, #72]
  42fd14:	ldr	x4, [sp, #64]
  42fd18:	ldr	w5, [sp, #60]
  42fd1c:	ldr	w6, [sp, #56]
  42fd20:	mov	x7, x8
  42fd24:	mov	x8, sp
  42fd28:	str	w10, [x8]
  42fd2c:	mov	x8, sp
  42fd30:	str	wzr, [x8, #8]
  42fd34:	bl	4075b8 <sd_bus_reply_method_return@plt>
  42fd38:	stur	w0, [x29, #-4]
  42fd3c:	mov	w10, #0x1                   	// #1
  42fd40:	stur	w10, [x29, #-52]
  42fd44:	sub	x0, x29, #0x30
  42fd48:	bl	42ed40 <freep>
  42fd4c:	sub	x0, x29, #0x24
  42fd50:	bl	42fda4 <closep>
  42fd54:	sub	x0, x29, #0x20
  42fd58:	bl	42fd70 <sd_bus_message_unrefp>
  42fd5c:	ldur	w0, [x29, #-4]
  42fd60:	ldr	x28, [sp, #272]
  42fd64:	ldp	x29, x30, [sp, #256]
  42fd68:	add	sp, sp, #0x120
  42fd6c:	ret

000000000042fd70 <sd_bus_message_unrefp>:
  42fd70:	sub	sp, sp, #0x20
  42fd74:	stp	x29, x30, [sp, #16]
  42fd78:	add	x29, sp, #0x10
  42fd7c:	str	x0, [sp, #8]
  42fd80:	ldr	x8, [sp, #8]
  42fd84:	ldr	x8, [x8]
  42fd88:	cbz	x8, 42fd98 <sd_bus_message_unrefp+0x28>
  42fd8c:	ldr	x8, [sp, #8]
  42fd90:	ldr	x0, [x8]
  42fd94:	bl	407818 <sd_bus_message_unref@plt>
  42fd98:	ldp	x29, x30, [sp, #16]
  42fd9c:	add	sp, sp, #0x20
  42fda0:	ret

000000000042fda4 <closep>:
  42fda4:	sub	sp, sp, #0x20
  42fda8:	stp	x29, x30, [sp, #16]
  42fdac:	add	x29, sp, #0x10
  42fdb0:	str	x0, [sp, #8]
  42fdb4:	ldr	x8, [sp, #8]
  42fdb8:	ldr	w0, [x8]
  42fdbc:	bl	406d38 <safe_close@plt>
  42fdc0:	ldp	x29, x30, [sp, #16]
  42fdc4:	add	sp, sp, #0x20
  42fdc8:	ret

000000000042fdcc <session_ready>:
  42fdcc:	sub	sp, sp, #0x30
  42fdd0:	stp	x29, x30, [sp, #32]
  42fdd4:	add	x29, sp, #0x20
  42fdd8:	adrp	x8, 448000 <_fini+0x7c30>
  42fddc:	add	x8, x8, #0x3df
  42fde0:	add	x2, x8, #0x3
  42fde4:	stur	x0, [x29, #-8]
  42fde8:	str	x2, [sp, #16]
  42fdec:	ldur	x8, [x29, #-8]
  42fdf0:	cmp	x8, #0x0
  42fdf4:	cset	w9, ne  // ne = any
  42fdf8:	mov	w10, #0x1                   	// #1
  42fdfc:	eor	w9, w9, #0x1
  42fe00:	eor	w9, w9, w10
  42fe04:	eor	w9, w9, w10
  42fe08:	and	w9, w9, #0x1
  42fe0c:	mov	w0, w9
  42fe10:	sxtw	x8, w0
  42fe14:	cbz	x8, 42fe3c <session_ready+0x70>
  42fe18:	mov	w8, wzr
  42fe1c:	mov	w0, w8
  42fe20:	adrp	x1, 442000 <_fini+0x1c30>
  42fe24:	add	x1, x1, #0xf2
  42fe28:	ldr	x2, [sp, #16]
  42fe2c:	mov	w3, #0x309                 	// #777
  42fe30:	adrp	x4, 449000 <_fini+0x8c30>
  42fe34:	add	x4, x4, #0x218
  42fe38:	bl	406c68 <log_assert_failed_realm@plt>
  42fe3c:	ldur	x8, [x29, #-8]
  42fe40:	ldr	x8, [x8, #128]
  42fe44:	mov	w9, #0x0                   	// #0
  42fe48:	str	w9, [sp, #12]
  42fe4c:	cbnz	x8, 42fe6c <session_ready+0xa0>
  42fe50:	ldur	x8, [x29, #-8]
  42fe54:	ldr	x8, [x8, #40]
  42fe58:	ldr	x8, [x8, #72]
  42fe5c:	cmp	x8, #0x0
  42fe60:	cset	w9, ne  // ne = any
  42fe64:	eor	w9, w9, #0x1
  42fe68:	str	w9, [sp, #12]
  42fe6c:	ldr	w8, [sp, #12]
  42fe70:	and	w0, w8, #0x1
  42fe74:	ldp	x29, x30, [sp, #32]
  42fe78:	add	sp, sp, #0x30
  42fe7c:	ret

000000000042fe80 <sd_device_unrefp>:
  42fe80:	sub	sp, sp, #0x20
  42fe84:	stp	x29, x30, [sp, #16]
  42fe88:	add	x29, sp, #0x10
  42fe8c:	str	x0, [sp, #8]
  42fe90:	ldr	x8, [sp, #8]
  42fe94:	ldr	x8, [x8]
  42fe98:	cbz	x8, 42fea8 <sd_device_unrefp+0x28>
  42fe9c:	ldr	x8, [sp, #8]
  42fea0:	ldr	x0, [x8]
  42fea4:	bl	4078b8 <sd_device_unref@plt>
  42fea8:	ldp	x29, x30, [sp, #16]
  42feac:	add	sp, sp, #0x20
  42feb0:	ret

000000000042feb4 <streq_ptr>:
  42feb4:	sub	sp, sp, #0x20
  42feb8:	stp	x29, x30, [sp, #16]
  42febc:	add	x29, sp, #0x10
  42fec0:	str	x0, [sp, #8]
  42fec4:	str	x1, [sp]
  42fec8:	ldr	x0, [sp, #8]
  42fecc:	ldr	x1, [sp]
  42fed0:	bl	407448 <strcmp_ptr@plt>
  42fed4:	cmp	w0, #0x0
  42fed8:	cset	w8, eq  // eq = none
  42fedc:	and	w0, w8, #0x1
  42fee0:	ldp	x29, x30, [sp, #16]
  42fee4:	add	sp, sp, #0x20
  42fee8:	ret

000000000042feec <strlen_ptr>:
  42feec:	sub	sp, sp, #0x20
  42fef0:	stp	x29, x30, [sp, #16]
  42fef4:	add	x29, sp, #0x10
  42fef8:	str	x0, [sp]
  42fefc:	ldr	x8, [sp]
  42ff00:	cbnz	x8, 42ff0c <strlen_ptr+0x20>
  42ff04:	str	xzr, [sp, #8]
  42ff08:	b	42ff18 <strlen_ptr+0x2c>
  42ff0c:	ldr	x0, [sp]
  42ff10:	bl	4070a8 <strlen@plt>
  42ff14:	str	x0, [sp, #8]
  42ff18:	ldr	x0, [sp, #8]
  42ff1c:	ldp	x29, x30, [sp, #16]
  42ff20:	add	sp, sp, #0x20
  42ff24:	ret

000000000042ff28 <session_device_new>:
  42ff28:	sub	sp, sp, #0x70
  42ff2c:	stp	x29, x30, [sp, #96]
  42ff30:	add	x29, sp, #0x60
  42ff34:	adrp	x8, 449000 <_fini+0x8c30>
  42ff38:	add	x8, x8, #0x237
  42ff3c:	add	x8, x8, #0x3
  42ff40:	adrp	x9, 449000 <_fini+0x8c30>
  42ff44:	add	x9, x9, #0x25c
  42ff48:	stur	x0, [x29, #-16]
  42ff4c:	stur	x1, [x29, #-24]
  42ff50:	and	w10, w2, #0x1
  42ff54:	sturb	w10, [x29, #-25]
  42ff58:	stur	x3, [x29, #-40]
  42ff5c:	str	x8, [sp, #16]
  42ff60:	str	x9, [sp, #8]
  42ff64:	ldur	x8, [x29, #-16]
  42ff68:	cmp	x8, #0x0
  42ff6c:	cset	w9, ne  // ne = any
  42ff70:	mov	w10, #0x1                   	// #1
  42ff74:	eor	w9, w9, #0x1
  42ff78:	eor	w9, w9, w10
  42ff7c:	eor	w9, w9, w10
  42ff80:	and	w9, w9, #0x1
  42ff84:	mov	w0, w9
  42ff88:	sxtw	x8, w0
  42ff8c:	cbz	x8, 42ffb0 <session_device_new+0x88>
  42ff90:	mov	w8, wzr
  42ff94:	mov	w0, w8
  42ff98:	adrp	x1, 442000 <_fini+0x1c30>
  42ff9c:	add	x1, x1, #0xf2
  42ffa0:	ldr	x2, [sp, #16]
  42ffa4:	mov	w3, #0x14d                 	// #333
  42ffa8:	ldr	x4, [sp, #8]
  42ffac:	bl	406c68 <log_assert_failed_realm@plt>
  42ffb0:	ldur	x8, [x29, #-40]
  42ffb4:	cmp	x8, #0x0
  42ffb8:	cset	w9, ne  // ne = any
  42ffbc:	mov	w10, #0x1                   	// #1
  42ffc0:	eor	w9, w9, #0x1
  42ffc4:	eor	w9, w9, w10
  42ffc8:	eor	w9, w9, w10
  42ffcc:	and	w9, w9, #0x1
  42ffd0:	mov	w0, w9
  42ffd4:	sxtw	x8, w0
  42ffd8:	cbz	x8, 42fffc <session_device_new+0xd4>
  42ffdc:	mov	w8, wzr
  42ffe0:	mov	w0, w8
  42ffe4:	adrp	x1, 449000 <_fini+0x8c30>
  42ffe8:	add	x1, x1, #0x29e
  42ffec:	ldr	x2, [sp, #16]
  42fff0:	mov	w3, #0x14e                 	// #334
  42fff4:	ldr	x4, [sp, #8]
  42fff8:	bl	406c68 <log_assert_failed_realm@plt>
  42fffc:	ldur	x8, [x29, #-16]
  430000:	ldr	x8, [x8, #136]
  430004:	cbnz	x8, 430014 <session_device_new+0xec>
  430008:	mov	w8, #0xffffffff            	// #-1
  43000c:	stur	w8, [x29, #-4]
  430010:	b	43027c <session_device_new+0x354>
  430014:	mov	x0, #0x1                   	// #1
  430018:	mov	x1, #0x38                  	// #56
  43001c:	bl	407218 <calloc@plt>
  430020:	str	x0, [sp, #48]
  430024:	ldr	x8, [sp, #48]
  430028:	cbnz	x8, 430038 <session_device_new+0x110>
  43002c:	mov	w8, #0xfffffff4            	// #-12
  430030:	stur	w8, [x29, #-4]
  430034:	b	43027c <session_device_new+0x354>
  430038:	ldur	x8, [x29, #-16]
  43003c:	ldr	x9, [sp, #48]
  430040:	str	x8, [x9]
  430044:	ldur	x8, [x29, #-24]
  430048:	ldr	x9, [sp, #48]
  43004c:	str	x8, [x9, #16]
  430050:	ldr	x8, [sp, #48]
  430054:	mov	w10, #0xffffffff            	// #-1
  430058:	str	w10, [x8, #32]
  43005c:	ldr	x8, [sp, #48]
  430060:	ldrb	w10, [x8, #36]
  430064:	and	w10, w10, #0xfffffff8
  430068:	strb	w10, [x8, #36]
  43006c:	ldr	x0, [sp, #48]
  430070:	bl	43028c <session_device_verify>
  430074:	str	w0, [sp, #44]
  430078:	ldr	w10, [sp, #44]
  43007c:	cmp	w10, #0x0
  430080:	cset	w10, ge  // ge = tcont
  430084:	tbnz	w10, #0, 43008c <session_device_new+0x164>
  430088:	b	430248 <session_device_new+0x320>
  43008c:	ldur	x8, [x29, #-16]
  430090:	ldr	x0, [x8, #240]
  430094:	ldr	x8, [sp, #48]
  430098:	add	x1, x8, #0x10
  43009c:	ldr	x2, [sp, #48]
  4300a0:	bl	407228 <hashmap_put@plt>
  4300a4:	str	w0, [sp, #44]
  4300a8:	ldr	w9, [sp, #44]
  4300ac:	cmp	w9, #0x0
  4300b0:	cset	w9, ge  // ge = tcont
  4300b4:	tbnz	w9, #0, 4300bc <session_device_new+0x194>
  4300b8:	b	430248 <session_device_new+0x320>
  4300bc:	ldurb	w8, [x29, #-25]
  4300c0:	tbnz	w8, #0, 4300c8 <session_device_new+0x1a0>
  4300c4:	b	430194 <session_device_new+0x26c>
  4300c8:	ldur	x0, [x29, #-16]
  4300cc:	bl	433408 <session_is_active>
  4300d0:	ldr	x8, [sp, #48]
  4300d4:	ldrb	w9, [x8, #36]
  4300d8:	mov	w10, #0x3                   	// #3
  4300dc:	mov	w11, #0x1                   	// #1
  4300e0:	and	w12, w0, #0x1
  4300e4:	lsl	w12, w12, #3
  4300e8:	and	w9, w9, #0xfffffff7
  4300ec:	orr	w9, w9, w12
  4300f0:	strb	w9, [x8, #36]
  4300f4:	ldr	x0, [sp, #48]
  4300f8:	ldr	x8, [sp, #48]
  4300fc:	ldrb	w9, [x8, #36]
  430100:	lsr	w9, w9, w10
  430104:	and	w9, w9, w11
  430108:	and	w1, w9, #0x1
  43010c:	bl	43055c <session_device_open>
  430110:	str	w0, [sp, #44]
  430114:	ldr	w9, [sp, #44]
  430118:	cmp	w9, #0x0
  43011c:	cset	w9, ge  // ge = tcont
  430120:	tbnz	w9, #0, 430188 <session_device_new+0x260>
  430124:	ldr	x8, [sp, #48]
  430128:	ldrb	w9, [x8, #36]
  43012c:	mov	w10, #0x3                   	// #3
  430130:	lsr	w9, w9, w10
  430134:	and	w9, w9, #0x1
  430138:	tbnz	w9, #0, 430140 <session_device_new+0x218>
  43013c:	b	430174 <session_device_new+0x24c>
  430140:	ldr	w8, [sp, #44]
  430144:	mov	w9, #0xffffffea            	// #-22
  430148:	cmp	w8, w9
  43014c:	b.ne	430174 <session_device_new+0x24c>  // b.any
  430150:	ldr	x8, [sp, #48]
  430154:	ldrb	w9, [x8, #36]
  430158:	and	w9, w9, #0xfffffff7
  43015c:	strb	w9, [x8, #36]
  430160:	ldr	x0, [sp, #48]
  430164:	mov	w9, wzr
  430168:	and	w1, w9, #0x1
  43016c:	bl	43055c <session_device_open>
  430170:	str	w0, [sp, #44]
  430174:	ldr	w8, [sp, #44]
  430178:	cmp	w8, #0x0
  43017c:	cset	w8, ge  // ge = tcont
  430180:	tbnz	w8, #0, 430188 <session_device_new+0x260>
  430184:	b	430248 <session_device_new+0x320>
  430188:	ldr	w8, [sp, #44]
  43018c:	ldr	x9, [sp, #48]
  430190:	str	w8, [x9, #32]
  430194:	ldr	x8, [sp, #48]
  430198:	ldr	x8, [x8, #8]
  43019c:	add	x8, x8, #0x40
  4301a0:	str	x8, [sp, #32]
  4301a4:	ldr	x8, [sp, #48]
  4301a8:	str	x8, [sp, #24]
  4301ac:	ldr	x8, [sp, #24]
  4301b0:	cmp	x8, #0x0
  4301b4:	cset	w9, ne  // ne = any
  4301b8:	mov	w10, #0x1                   	// #1
  4301bc:	eor	w9, w9, #0x1
  4301c0:	eor	w9, w9, w10
  4301c4:	eor	w9, w9, w10
  4301c8:	and	w9, w9, #0x1
  4301cc:	mov	w0, w9
  4301d0:	sxtw	x8, w0
  4301d4:	cbz	x8, 4301f8 <session_device_new+0x2d0>
  4301d8:	mov	w8, wzr
  4301dc:	mov	w0, w8
  4301e0:	adrp	x1, 441000 <_fini+0xc30>
  4301e4:	add	x1, x1, #0x6cc
  4301e8:	ldr	x2, [sp, #16]
  4301ec:	mov	w3, #0x177                 	// #375
  4301f0:	ldr	x4, [sp, #8]
  4301f4:	bl	406c68 <log_assert_failed_realm@plt>
  4301f8:	ldr	x8, [sp, #32]
  4301fc:	ldr	x8, [x8]
  430200:	ldr	x9, [sp, #24]
  430204:	str	x8, [x9, #40]
  430208:	cbz	x8, 43021c <session_device_new+0x2f4>
  43020c:	ldr	x8, [sp, #24]
  430210:	ldr	x9, [sp, #24]
  430214:	ldr	x9, [x9, #40]
  430218:	str	x8, [x9, #48]
  43021c:	ldr	x8, [sp, #24]
  430220:	mov	x9, xzr
  430224:	str	x9, [x8, #48]
  430228:	ldr	x8, [sp, #24]
  43022c:	ldr	x9, [sp, #32]
  430230:	str	x8, [x9]
  430234:	ldr	x8, [sp, #48]
  430238:	ldur	x9, [x29, #-40]
  43023c:	str	x8, [x9]
  430240:	stur	wzr, [x29, #-4]
  430244:	b	43027c <session_device_new+0x354>
  430248:	ldur	x8, [x29, #-16]
  43024c:	ldr	x0, [x8, #240]
  430250:	ldr	x8, [sp, #48]
  430254:	add	x1, x8, #0x10
  430258:	bl	430778 <hashmap_remove>
  43025c:	ldr	x8, [sp, #48]
  430260:	ldr	x8, [x8, #24]
  430264:	mov	x0, x8
  430268:	bl	406da8 <free@plt>
  43026c:	ldr	x0, [sp, #48]
  430270:	bl	406da8 <free@plt>
  430274:	ldr	w9, [sp, #44]
  430278:	stur	w9, [x29, #-4]
  43027c:	ldur	w0, [x29, #-4]
  430280:	ldp	x29, x30, [sp, #96]
  430284:	add	sp, sp, #0x70
  430288:	ret

000000000043028c <session_device_verify>:
  43028c:	sub	sp, sp, #0x50
  430290:	stp	x29, x30, [sp, #64]
  430294:	add	x29, sp, #0x40
  430298:	mov	x8, xzr
  43029c:	sub	x9, x29, #0x18
  4302a0:	stur	x0, [x29, #-16]
  4302a4:	stur	x8, [x29, #-24]
  4302a8:	ldur	x8, [x29, #-16]
  4302ac:	ldr	x2, [x8, #16]
  4302b0:	mov	x0, x9
  4302b4:	mov	w1, #0x63                  	// #99
  4302b8:	bl	407b98 <sd_device_new_from_devnum@plt>
  4302bc:	str	w0, [sp, #12]
  4302c0:	ldr	w10, [sp, #12]
  4302c4:	cmp	w10, #0x0
  4302c8:	cset	w10, ge  // ge = tcont
  4302cc:	tbnz	w10, #0, 4302e4 <session_device_verify+0x58>
  4302d0:	ldr	w8, [sp, #12]
  4302d4:	stur	w8, [x29, #-4]
  4302d8:	mov	w8, #0x1                   	// #1
  4302dc:	str	w8, [sp, #8]
  4302e0:	b	430544 <session_device_verify+0x2b8>
  4302e4:	ldur	x8, [x29, #-24]
  4302e8:	str	x8, [sp, #16]
  4302ec:	ldr	x0, [sp, #16]
  4302f0:	add	x1, sp, #0x20
  4302f4:	bl	4072e8 <sd_device_get_syspath@plt>
  4302f8:	cmp	w0, #0x0
  4302fc:	cset	w9, lt  // lt = tstop
  430300:	tbnz	w9, #0, 43031c <session_device_verify+0x90>
  430304:	ldr	x0, [sp, #16]
  430308:	add	x1, sp, #0x18
  43030c:	bl	407ba8 <sd_device_get_devname@plt>
  430310:	cmp	w0, #0x0
  430314:	cset	w8, ge  // ge = tcont
  430318:	tbnz	w8, #0, 430330 <session_device_verify+0xa4>
  43031c:	mov	w8, #0xffffffea            	// #-22
  430320:	stur	w8, [x29, #-4]
  430324:	mov	w8, #0x1                   	// #1
  430328:	str	w8, [sp, #8]
  43032c:	b	430544 <session_device_verify+0x2b8>
  430330:	ldr	x0, [sp, #16]
  430334:	bl	431924 <detect_device_type>
  430338:	ldur	x8, [x29, #-16]
  43033c:	ldrb	w9, [x8, #36]
  430340:	mov	w10, #0x7                   	// #7
  430344:	and	w11, w0, #0x7
  430348:	and	w9, w9, #0xfffffff8
  43034c:	orr	w9, w9, w11
  430350:	strb	w9, [x8, #36]
  430354:	ldur	x8, [x29, #-16]
  430358:	ldrb	w9, [x8, #36]
  43035c:	and	w9, w9, w10
  430360:	and	w9, w9, #0xff
  430364:	cbnz	w9, 43037c <session_device_verify+0xf0>
  430368:	mov	w8, #0xffffffed            	// #-19
  43036c:	stur	w8, [x29, #-4]
  430370:	mov	w8, #0x1                   	// #1
  430374:	str	w8, [sp, #8]
  430378:	b	430544 <session_device_verify+0x2b8>
  43037c:	ldur	x8, [x29, #-16]
  430380:	ldrb	w9, [x8, #36]
  430384:	and	w9, w9, #0x7
  430388:	and	w9, w9, #0xff
  43038c:	cmp	w9, #0x2
  430390:	b.ne	430400 <session_device_verify+0x174>  // b.any
  430394:	ldur	x0, [x29, #-24]
  430398:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  43039c:	add	x1, x1, #0xba1
  4303a0:	mov	x8, xzr
  4303a4:	mov	x2, x8
  4303a8:	add	x3, sp, #0x10
  4303ac:	bl	407bb8 <sd_device_get_parent_with_subsystem_devtype@plt>
  4303b0:	cmp	w0, #0x0
  4303b4:	cset	w9, ge  // ge = tcont
  4303b8:	tbnz	w9, #0, 4303d0 <session_device_verify+0x144>
  4303bc:	mov	w8, #0xffffffed            	// #-19
  4303c0:	stur	w8, [x29, #-4]
  4303c4:	mov	w8, #0x1                   	// #1
  4303c8:	str	w8, [sp, #8]
  4303cc:	b	430544 <session_device_verify+0x2b8>
  4303d0:	ldr	x0, [sp, #16]
  4303d4:	add	x1, sp, #0x20
  4303d8:	bl	4072e8 <sd_device_get_syspath@plt>
  4303dc:	cmp	w0, #0x0
  4303e0:	cset	w8, ge  // ge = tcont
  4303e4:	tbnz	w8, #0, 4303fc <session_device_verify+0x170>
  4303e8:	mov	w8, #0xffffffed            	// #-19
  4303ec:	stur	w8, [x29, #-4]
  4303f0:	mov	w8, #0x1                   	// #1
  4303f4:	str	w8, [sp, #8]
  4303f8:	b	430544 <session_device_verify+0x2b8>
  4303fc:	b	43042c <session_device_verify+0x1a0>
  430400:	ldur	x8, [x29, #-16]
  430404:	ldrb	w9, [x8, #36]
  430408:	and	w9, w9, #0x7
  43040c:	and	w9, w9, #0xff
  430410:	cmp	w9, #0x1
  430414:	b.eq	43042c <session_device_verify+0x1a0>  // b.none
  430418:	mov	w8, #0xffffffed            	// #-19
  43041c:	stur	w8, [x29, #-4]
  430420:	mov	w8, #0x1                   	// #1
  430424:	str	w8, [sp, #8]
  430428:	b	430544 <session_device_verify+0x2b8>
  43042c:	ldur	x8, [x29, #-16]
  430430:	ldr	x8, [x8]
  430434:	ldr	x8, [x8]
  430438:	ldr	x0, [x8, #16]
  43043c:	ldr	x1, [sp, #32]
  430440:	bl	4319f0 <hashmap_get>
  430444:	ldur	x8, [x29, #-16]
  430448:	str	x0, [x8, #8]
  43044c:	ldur	x8, [x29, #-16]
  430450:	ldr	x8, [x8, #8]
  430454:	cbnz	x8, 4304d4 <session_device_verify+0x248>
  430458:	ldur	x8, [x29, #-16]
  43045c:	ldr	x8, [x8]
  430460:	ldr	x0, [x8]
  430464:	ldr	x1, [sp, #16]
  430468:	bl	411f50 <manager_process_seat_device>
  43046c:	str	w0, [sp, #12]
  430470:	ldr	w9, [sp, #12]
  430474:	cmp	w9, #0x0
  430478:	cset	w9, ge  // ge = tcont
  43047c:	tbnz	w9, #0, 430494 <session_device_verify+0x208>
  430480:	ldr	w8, [sp, #12]
  430484:	stur	w8, [x29, #-4]
  430488:	mov	w8, #0x1                   	// #1
  43048c:	str	w8, [sp, #8]
  430490:	b	430544 <session_device_verify+0x2b8>
  430494:	ldur	x8, [x29, #-16]
  430498:	ldr	x8, [x8]
  43049c:	ldr	x8, [x8]
  4304a0:	ldr	x0, [x8, #16]
  4304a4:	ldr	x1, [sp, #32]
  4304a8:	bl	4319f0 <hashmap_get>
  4304ac:	ldur	x8, [x29, #-16]
  4304b0:	str	x0, [x8, #8]
  4304b4:	ldur	x8, [x29, #-16]
  4304b8:	ldr	x8, [x8, #8]
  4304bc:	cbnz	x8, 4304d4 <session_device_verify+0x248>
  4304c0:	mov	w8, #0xffffffed            	// #-19
  4304c4:	stur	w8, [x29, #-4]
  4304c8:	mov	w8, #0x1                   	// #1
  4304cc:	str	w8, [sp, #8]
  4304d0:	b	430544 <session_device_verify+0x2b8>
  4304d4:	ldur	x8, [x29, #-16]
  4304d8:	ldr	x8, [x8, #8]
  4304dc:	ldr	x8, [x8, #16]
  4304e0:	ldur	x9, [x29, #-16]
  4304e4:	ldr	x9, [x9]
  4304e8:	ldr	x9, [x9, #136]
  4304ec:	cmp	x8, x9
  4304f0:	b.eq	430508 <session_device_verify+0x27c>  // b.none
  4304f4:	mov	w8, #0xffffffff            	// #-1
  4304f8:	stur	w8, [x29, #-4]
  4304fc:	mov	w8, #0x1                   	// #1
  430500:	str	w8, [sp, #8]
  430504:	b	430544 <session_device_verify+0x2b8>
  430508:	ldr	x0, [sp, #24]
  43050c:	bl	407168 <strdup@plt>
  430510:	ldur	x8, [x29, #-16]
  430514:	str	x0, [x8, #24]
  430518:	ldur	x8, [x29, #-16]
  43051c:	ldr	x8, [x8, #24]
  430520:	cbnz	x8, 430538 <session_device_verify+0x2ac>
  430524:	mov	w8, #0xfffffff4            	// #-12
  430528:	stur	w8, [x29, #-4]
  43052c:	mov	w8, #0x1                   	// #1
  430530:	str	w8, [sp, #8]
  430534:	b	430544 <session_device_verify+0x2b8>
  430538:	stur	wzr, [x29, #-4]
  43053c:	mov	w8, #0x1                   	// #1
  430540:	str	w8, [sp, #8]
  430544:	sub	x0, x29, #0x18
  430548:	bl	4318f0 <sd_device_unrefp>
  43054c:	ldur	w0, [x29, #-4]
  430550:	ldp	x29, x30, [sp, #64]
  430554:	add	sp, sp, #0x50
  430558:	ret

000000000043055c <session_device_open>:
  43055c:	sub	sp, sp, #0x50
  430560:	stp	x29, x30, [sp, #64]
  430564:	add	x29, sp, #0x40
  430568:	mov	w8, #0x1                   	// #1
  43056c:	adrp	x9, 449000 <_fini+0x8c30>
  430570:	add	x9, x9, #0x237
  430574:	add	x9, x9, #0x3
  430578:	adrp	x10, 449000 <_fini+0x8c30>
  43057c:	add	x10, x10, #0x45c
  430580:	stur	x0, [x29, #-16]
  430584:	and	w8, w1, w8
  430588:	sturb	w8, [x29, #-17]
  43058c:	str	x9, [sp, #24]
  430590:	str	x10, [sp, #16]
  430594:	ldur	x8, [x29, #-16]
  430598:	cmp	x8, #0x0
  43059c:	cset	w9, ne  // ne = any
  4305a0:	mov	w10, #0x1                   	// #1
  4305a4:	eor	w9, w9, #0x1
  4305a8:	eor	w9, w9, w10
  4305ac:	eor	w9, w9, w10
  4305b0:	and	w9, w9, #0x1
  4305b4:	mov	w0, w9
  4305b8:	sxtw	x8, w0
  4305bc:	cbz	x8, 4305e0 <session_device_open+0x84>
  4305c0:	mov	w8, wzr
  4305c4:	mov	w0, w8
  4305c8:	adrp	x1, 449000 <_fini+0x8c30>
  4305cc:	add	x1, x1, #0x2a2
  4305d0:	ldr	x2, [sp, #24]
  4305d4:	mov	w3, #0x7f                  	// #127
  4305d8:	ldr	x4, [sp, #16]
  4305dc:	bl	406c68 <log_assert_failed_realm@plt>
  4305e0:	ldur	x8, [x29, #-16]
  4305e4:	ldrb	w9, [x8, #36]
  4305e8:	and	w9, w9, #0x7
  4305ec:	tst	w9, #0xff
  4305f0:	cset	w9, ne  // ne = any
  4305f4:	mov	w10, #0x1                   	// #1
  4305f8:	eor	w9, w9, #0x1
  4305fc:	eor	w9, w9, w10
  430600:	eor	w9, w9, w10
  430604:	and	w9, w9, #0x1
  430608:	mov	w0, w9
  43060c:	sxtw	x8, w0
  430610:	cbz	x8, 430634 <session_device_open+0xd8>
  430614:	mov	w8, wzr
  430618:	mov	w0, w8
  43061c:	adrp	x1, 449000 <_fini+0x8c30>
  430620:	add	x1, x1, #0x48c
  430624:	ldr	x2, [sp, #24]
  430628:	mov	w3, #0x80                  	// #128
  43062c:	ldr	x4, [sp, #16]
  430630:	bl	406c68 <log_assert_failed_realm@plt>
  430634:	ldur	x8, [x29, #-16]
  430638:	ldr	x8, [x8, #24]
  43063c:	cmp	x8, #0x0
  430640:	cset	w9, ne  // ne = any
  430644:	mov	w10, #0x1                   	// #1
  430648:	eor	w9, w9, #0x1
  43064c:	eor	w9, w9, w10
  430650:	eor	w9, w9, w10
  430654:	and	w9, w9, #0x1
  430658:	mov	w0, w9
  43065c:	sxtw	x8, w0
  430660:	cbz	x8, 430684 <session_device_open+0x128>
  430664:	mov	w8, wzr
  430668:	mov	w0, w8
  43066c:	adrp	x1, 449000 <_fini+0x8c30>
  430670:	add	x1, x1, #0x4ac
  430674:	ldr	x2, [sp, #24]
  430678:	mov	w3, #0x81                  	// #129
  43067c:	ldr	x4, [sp, #16]
  430680:	bl	406c68 <log_assert_failed_realm@plt>
  430684:	ldur	x8, [x29, #-16]
  430688:	ldr	x0, [x8, #24]
  43068c:	mov	w1, #0x902                 	// #2306
  430690:	movk	w1, #0x8, lsl #16
  430694:	bl	406df8 <open64@plt>
  430698:	stur	w0, [x29, #-24]
  43069c:	ldur	w9, [x29, #-24]
  4306a0:	cmp	w9, #0x0
  4306a4:	cset	w9, ge  // ge = tcont
  4306a8:	tbnz	w9, #0, 4306c4 <session_device_open+0x168>
  4306ac:	bl	406e08 <__errno_location@plt>
  4306b0:	ldr	w8, [x0]
  4306b4:	mov	w9, wzr
  4306b8:	subs	w8, w9, w8
  4306bc:	stur	w8, [x29, #-4]
  4306c0:	b	430768 <session_device_open+0x20c>
  4306c4:	ldur	x8, [x29, #-16]
  4306c8:	ldrb	w9, [x8, #36]
  4306cc:	and	w9, w9, #0x7
  4306d0:	and	w9, w9, #0xff
  4306d4:	str	w9, [sp, #12]
  4306d8:	cbz	w9, 430760 <session_device_open+0x204>
  4306dc:	b	4306e0 <session_device_open+0x184>
  4306e0:	ldr	w8, [sp, #12]
  4306e4:	cmp	w8, #0x1
  4306e8:	b.eq	430700 <session_device_open+0x1a4>  // b.none
  4306ec:	b	4306f0 <session_device_open+0x194>
  4306f0:	ldr	w8, [sp, #12]
  4306f4:	cmp	w8, #0x2
  4306f8:	b.eq	43074c <session_device_open+0x1f0>  // b.none
  4306fc:	b	430760 <session_device_open+0x204>
  430700:	ldurb	w8, [x29, #-17]
  430704:	tbnz	w8, #0, 43070c <session_device_open+0x1b0>
  430708:	b	430740 <session_device_open+0x1e4>
  43070c:	ldur	w0, [x29, #-24]
  430710:	bl	431a7c <sd_drmsetmaster>
  430714:	stur	w0, [x29, #-28]
  430718:	ldur	w8, [x29, #-28]
  43071c:	cmp	w8, #0x0
  430720:	cset	w8, ge  // ge = tcont
  430724:	tbnz	w8, #0, 43073c <session_device_open+0x1e0>
  430728:	ldur	w0, [x29, #-24]
  43072c:	bl	407bc8 <close_nointr@plt>
  430730:	ldur	w8, [x29, #-28]
  430734:	stur	w8, [x29, #-4]
  430738:	b	430768 <session_device_open+0x20c>
  43073c:	b	430748 <session_device_open+0x1ec>
  430740:	ldur	w0, [x29, #-24]
  430744:	bl	431b38 <sd_drmdropmaster>
  430748:	b	430760 <session_device_open+0x204>
  43074c:	ldurb	w8, [x29, #-17]
  430750:	tbnz	w8, #0, 43075c <session_device_open+0x200>
  430754:	ldur	w0, [x29, #-24]
  430758:	bl	431bf4 <sd_eviocrevoke>
  43075c:	b	430760 <session_device_open+0x204>
  430760:	ldur	w8, [x29, #-24]
  430764:	stur	w8, [x29, #-4]
  430768:	ldur	w0, [x29, #-4]
  43076c:	ldp	x29, x30, [sp, #64]
  430770:	add	sp, sp, #0x50
  430774:	ret

0000000000430778 <hashmap_remove>:
  430778:	sub	sp, sp, #0x20
  43077c:	stp	x29, x30, [sp, #16]
  430780:	add	x29, sp, #0x10
  430784:	str	x0, [sp, #8]
  430788:	str	x1, [sp]
  43078c:	ldr	x0, [sp, #8]
  430790:	ldr	x1, [sp]
  430794:	bl	407248 <internal_hashmap_remove@plt>
  430798:	ldp	x29, x30, [sp, #16]
  43079c:	add	sp, sp, #0x20
  4307a0:	ret

00000000004307a4 <session_device_free>:
  4307a4:	sub	sp, sp, #0x50
  4307a8:	stp	x29, x30, [sp, #64]
  4307ac:	add	x29, sp, #0x40
  4307b0:	adrp	x8, 449000 <_fini+0x8c30>
  4307b4:	add	x8, x8, #0x237
  4307b8:	add	x8, x8, #0x3
  4307bc:	adrp	x9, 449000 <_fini+0x8c30>
  4307c0:	add	x9, x9, #0x2a5
  4307c4:	stur	x0, [x29, #-8]
  4307c8:	str	x8, [sp, #32]
  4307cc:	str	x9, [sp, #24]
  4307d0:	ldur	x8, [x29, #-8]
  4307d4:	cmp	x8, #0x0
  4307d8:	cset	w9, ne  // ne = any
  4307dc:	mov	w10, #0x1                   	// #1
  4307e0:	eor	w9, w9, #0x1
  4307e4:	eor	w9, w9, w10
  4307e8:	eor	w9, w9, w10
  4307ec:	and	w9, w9, #0x1
  4307f0:	mov	w0, w9
  4307f4:	sxtw	x8, w0
  4307f8:	cbz	x8, 43081c <session_device_free+0x78>
  4307fc:	mov	w8, wzr
  430800:	mov	w0, w8
  430804:	adrp	x1, 449000 <_fini+0x8c30>
  430808:	add	x1, x1, #0x2a2
  43080c:	ldr	x2, [sp, #32]
  430810:	mov	w3, #0x184                 	// #388
  430814:	ldr	x4, [sp, #24]
  430818:	bl	406c68 <log_assert_failed_realm@plt>
  43081c:	ldur	x8, [x29, #-8]
  430820:	ldrb	w9, [x8, #36]
  430824:	mov	w10, #0x4                   	// #4
  430828:	lsr	w9, w9, w10
  43082c:	and	w9, w9, #0x1
  430830:	tbnz	w9, #0, 430838 <session_device_free+0x94>
  430834:	b	43088c <session_device_free+0xe8>
  430838:	ldur	x8, [x29, #-8]
  43083c:	ldr	x8, [x8]
  430840:	ldr	x2, [x8, #8]
  430844:	ldur	x8, [x29, #-8]
  430848:	ldr	x0, [x8, #16]
  43084c:	str	x2, [sp, #16]
  430850:	bl	407128 <gnu_dev_major@plt>
  430854:	ldur	x8, [x29, #-8]
  430858:	ldr	x8, [x8, #16]
  43085c:	str	w0, [sp, #12]
  430860:	mov	x0, x8
  430864:	bl	407138 <gnu_dev_minor@plt>
  430868:	mov	w9, wzr
  43086c:	str	w0, [sp, #8]
  430870:	mov	w0, w9
  430874:	adrp	x1, 449000 <_fini+0x8c30>
  430878:	add	x1, x1, #0x2cf
  43087c:	ldr	x2, [sp, #16]
  430880:	ldr	w3, [sp, #12]
  430884:	ldr	w4, [sp, #8]
  430888:	bl	407118 <sd_notifyf@plt>
  43088c:	ldur	x0, [x29, #-8]
  430890:	bl	430a0c <session_device_stop>
  430894:	ldur	x0, [x29, #-8]
  430898:	mov	w1, #0x3                   	// #3
  43089c:	bl	430ba0 <session_device_notify>
  4308a0:	ldur	x8, [x29, #-8]
  4308a4:	ldr	w9, [x8, #32]
  4308a8:	mov	w0, w9
  4308ac:	bl	406d38 <safe_close@plt>
  4308b0:	ldur	x8, [x29, #-8]
  4308b4:	ldr	x8, [x8, #8]
  4308b8:	add	x8, x8, #0x40
  4308bc:	stur	x8, [x29, #-16]
  4308c0:	ldur	x8, [x29, #-8]
  4308c4:	stur	x8, [x29, #-24]
  4308c8:	ldur	x8, [x29, #-24]
  4308cc:	cmp	x8, #0x0
  4308d0:	cset	w9, ne  // ne = any
  4308d4:	mov	w10, #0x1                   	// #1
  4308d8:	eor	w9, w9, #0x1
  4308dc:	eor	w9, w9, w10
  4308e0:	eor	w9, w9, w10
  4308e4:	and	w9, w9, #0x1
  4308e8:	mov	w0, w9
  4308ec:	sxtw	x8, w0
  4308f0:	cbz	x8, 430914 <session_device_free+0x170>
  4308f4:	mov	w8, wzr
  4308f8:	mov	w0, w8
  4308fc:	adrp	x1, 441000 <_fini+0xc30>
  430900:	add	x1, x1, #0x6cc
  430904:	ldr	x2, [sp, #32]
  430908:	mov	w3, #0x191                 	// #401
  43090c:	ldr	x4, [sp, #24]
  430910:	bl	406c68 <log_assert_failed_realm@plt>
  430914:	ldur	x8, [x29, #-24]
  430918:	ldr	x8, [x8, #40]
  43091c:	cbz	x8, 430934 <session_device_free+0x190>
  430920:	ldur	x8, [x29, #-24]
  430924:	ldr	x8, [x8, #48]
  430928:	ldur	x9, [x29, #-24]
  43092c:	ldr	x9, [x9, #40]
  430930:	str	x8, [x9, #48]
  430934:	ldur	x8, [x29, #-24]
  430938:	ldr	x8, [x8, #48]
  43093c:	cbz	x8, 430958 <session_device_free+0x1b4>
  430940:	ldur	x8, [x29, #-24]
  430944:	ldr	x8, [x8, #40]
  430948:	ldur	x9, [x29, #-24]
  43094c:	ldr	x9, [x9, #48]
  430950:	str	x8, [x9, #40]
  430954:	b	4309bc <session_device_free+0x218>
  430958:	ldur	x8, [x29, #-16]
  43095c:	ldr	x8, [x8]
  430960:	ldur	x9, [x29, #-24]
  430964:	cmp	x8, x9
  430968:	cset	w10, eq  // eq = none
  43096c:	mov	w11, #0x1                   	// #1
  430970:	eor	w10, w10, #0x1
  430974:	eor	w10, w10, w11
  430978:	eor	w10, w10, w11
  43097c:	and	w10, w10, #0x1
  430980:	mov	w0, w10
  430984:	sxtw	x8, w0
  430988:	cbz	x8, 4309ac <session_device_free+0x208>
  43098c:	mov	w8, wzr
  430990:	mov	w0, w8
  430994:	adrp	x1, 441000 <_fini+0xc30>
  430998:	add	x1, x1, #0x6d2
  43099c:	ldr	x2, [sp, #32]
  4309a0:	mov	w3, #0x191                 	// #401
  4309a4:	ldr	x4, [sp, #24]
  4309a8:	bl	406c68 <log_assert_failed_realm@plt>
  4309ac:	ldur	x8, [x29, #-24]
  4309b0:	ldr	x8, [x8, #40]
  4309b4:	ldur	x9, [x29, #-16]
  4309b8:	str	x8, [x9]
  4309bc:	ldur	x8, [x29, #-24]
  4309c0:	mov	x9, xzr
  4309c4:	str	x9, [x8, #48]
  4309c8:	ldur	x8, [x29, #-24]
  4309cc:	str	x9, [x8, #40]
  4309d0:	ldur	x8, [x29, #-8]
  4309d4:	ldr	x8, [x8]
  4309d8:	ldr	x0, [x8, #240]
  4309dc:	ldur	x8, [x29, #-8]
  4309e0:	add	x1, x8, #0x10
  4309e4:	bl	430778 <hashmap_remove>
  4309e8:	ldur	x8, [x29, #-8]
  4309ec:	ldr	x8, [x8, #24]
  4309f0:	mov	x0, x8
  4309f4:	bl	406da8 <free@plt>
  4309f8:	ldur	x0, [x29, #-8]
  4309fc:	bl	406da8 <free@plt>
  430a00:	ldp	x29, x30, [sp, #64]
  430a04:	add	sp, sp, #0x50
  430a08:	ret

0000000000430a0c <session_device_stop>:
  430a0c:	sub	sp, sp, #0x40
  430a10:	stp	x29, x30, [sp, #48]
  430a14:	add	x29, sp, #0x30
  430a18:	adrp	x8, 449000 <_fini+0x8c30>
  430a1c:	add	x8, x8, #0x237
  430a20:	add	x8, x8, #0x3
  430a24:	stur	x0, [x29, #-8]
  430a28:	str	x8, [sp, #16]
  430a2c:	ldur	x8, [x29, #-8]
  430a30:	cmp	x8, #0x0
  430a34:	cset	w9, ne  // ne = any
  430a38:	mov	w10, #0x1                   	// #1
  430a3c:	eor	w9, w9, #0x1
  430a40:	eor	w9, w9, w10
  430a44:	eor	w9, w9, w10
  430a48:	and	w9, w9, #0x1
  430a4c:	mov	w0, w9
  430a50:	sxtw	x8, w0
  430a54:	cbz	x8, 430a7c <session_device_stop+0x70>
  430a58:	mov	w8, wzr
  430a5c:	mov	w0, w8
  430a60:	adrp	x1, 449000 <_fini+0x8c30>
  430a64:	add	x1, x1, #0x2a2
  430a68:	ldr	x2, [sp, #16]
  430a6c:	mov	w3, #0xd5                  	// #213
  430a70:	adrp	x4, 449000 <_fini+0x8c30>
  430a74:	add	x4, x4, #0x53d
  430a78:	bl	406c68 <log_assert_failed_realm@plt>
  430a7c:	ldur	x8, [x29, #-8]
  430a80:	ldrb	w9, [x8, #36]
  430a84:	mov	w10, #0x3                   	// #3
  430a88:	lsr	w9, w9, w10
  430a8c:	and	w9, w9, #0x1
  430a90:	tbnz	w9, #0, 430a98 <session_device_stop+0x8c>
  430a94:	b	430b94 <session_device_stop+0x188>
  430a98:	ldur	x8, [x29, #-8]
  430a9c:	ldrb	w9, [x8, #36]
  430aa0:	and	w9, w9, #0x7
  430aa4:	and	w9, w9, #0xff
  430aa8:	str	w9, [sp, #12]
  430aac:	cbz	w9, 430b84 <session_device_stop+0x178>
  430ab0:	b	430ab4 <session_device_stop+0xa8>
  430ab4:	ldr	w8, [sp, #12]
  430ab8:	cmp	w8, #0x1
  430abc:	b.eq	430ad4 <session_device_stop+0xc8>  // b.none
  430ac0:	b	430ac4 <session_device_stop+0xb8>
  430ac4:	ldr	w8, [sp, #12]
  430ac8:	cmp	w8, #0x2
  430acc:	b.eq	430b74 <session_device_stop+0x168>  // b.none
  430ad0:	b	430b84 <session_device_stop+0x178>
  430ad4:	ldur	x8, [x29, #-8]
  430ad8:	ldr	w9, [x8, #32]
  430adc:	cmp	w9, #0x0
  430ae0:	cset	w9, ge  // ge = tcont
  430ae4:	tbnz	w9, #0, 430b64 <session_device_stop+0x158>
  430ae8:	mov	w8, #0x3                   	// #3
  430aec:	stur	w8, [x29, #-12]
  430af0:	stur	wzr, [x29, #-16]
  430af4:	stur	wzr, [x29, #-20]
  430af8:	ldur	w0, [x29, #-20]
  430afc:	bl	406c08 <log_get_max_level_realm@plt>
  430b00:	ldur	w8, [x29, #-12]
  430b04:	and	w8, w8, #0x7
  430b08:	cmp	w0, w8
  430b0c:	b.lt	430b44 <session_device_stop+0x138>  // b.tstop
  430b10:	ldur	w8, [x29, #-20]
  430b14:	ldur	w9, [x29, #-12]
  430b18:	orr	w0, w9, w8, lsl #10
  430b1c:	ldur	w1, [x29, #-16]
  430b20:	ldr	x2, [sp, #16]
  430b24:	mov	w3, #0xde                  	// #222
  430b28:	adrp	x4, 449000 <_fini+0x8c30>
  430b2c:	add	x4, x4, #0x567
  430b30:	adrp	x5, 449000 <_fini+0x8c30>
  430b34:	add	x5, x5, #0x57b
  430b38:	bl	406c18 <log_internal_realm@plt>
  430b3c:	str	w0, [sp, #8]
  430b40:	b	430b58 <session_device_stop+0x14c>
  430b44:	ldur	w0, [x29, #-16]
  430b48:	bl	406c28 <abs@plt>
  430b4c:	mov	w8, wzr
  430b50:	subs	w8, w8, w0, uxtb
  430b54:	str	w8, [sp, #8]
  430b58:	ldr	w8, [sp, #8]
  430b5c:	str	w8, [sp, #24]
  430b60:	b	430b94 <session_device_stop+0x188>
  430b64:	ldur	x8, [x29, #-8]
  430b68:	ldr	w0, [x8, #32]
  430b6c:	bl	431b38 <sd_drmdropmaster>
  430b70:	b	430b84 <session_device_stop+0x178>
  430b74:	ldur	x8, [x29, #-8]
  430b78:	ldr	w0, [x8, #32]
  430b7c:	bl	431bf4 <sd_eviocrevoke>
  430b80:	b	430b84 <session_device_stop+0x178>
  430b84:	ldur	x8, [x29, #-8]
  430b88:	ldrb	w9, [x8, #36]
  430b8c:	and	w9, w9, #0xfffffff7
  430b90:	strb	w9, [x8, #36]
  430b94:	ldp	x29, x30, [sp, #48]
  430b98:	add	sp, sp, #0x40
  430b9c:	ret

0000000000430ba0 <session_device_notify>:
  430ba0:	sub	sp, sp, #0x60
  430ba4:	stp	x29, x30, [sp, #80]
  430ba8:	add	x29, sp, #0x50
  430bac:	mov	x8, xzr
  430bb0:	adrp	x9, 449000 <_fini+0x8c30>
  430bb4:	add	x9, x9, #0x237
  430bb8:	add	x2, x9, #0x3
  430bbc:	stur	x0, [x29, #-16]
  430bc0:	stur	w1, [x29, #-20]
  430bc4:	stur	x8, [x29, #-32]
  430bc8:	str	x8, [sp, #40]
  430bcc:	str	x8, [sp, #32]
  430bd0:	str	x2, [sp, #8]
  430bd4:	ldur	x8, [x29, #-16]
  430bd8:	cmp	x8, #0x0
  430bdc:	cset	w9, ne  // ne = any
  430be0:	mov	w10, #0x1                   	// #1
  430be4:	eor	w9, w9, #0x1
  430be8:	eor	w9, w9, w10
  430bec:	eor	w9, w9, w10
  430bf0:	and	w9, w9, #0x1
  430bf4:	mov	w0, w9
  430bf8:	sxtw	x8, w0
  430bfc:	cbz	x8, 430c24 <session_device_notify+0x84>
  430c00:	mov	w8, wzr
  430c04:	mov	w0, w8
  430c08:	adrp	x1, 449000 <_fini+0x8c30>
  430c0c:	add	x1, x1, #0x2a2
  430c10:	ldr	x2, [sp, #8]
  430c14:	mov	w3, #0x23                  	// #35
  430c18:	adrp	x4, 449000 <_fini+0x8c30>
  430c1c:	add	x4, x4, #0x5cf
  430c20:	bl	406c68 <log_assert_failed_realm@plt>
  430c24:	ldur	x8, [x29, #-16]
  430c28:	ldr	x0, [x8, #16]
  430c2c:	bl	407128 <gnu_dev_major@plt>
  430c30:	str	w0, [sp, #28]
  430c34:	ldur	x8, [x29, #-16]
  430c38:	ldr	x0, [x8, #16]
  430c3c:	bl	407138 <gnu_dev_minor@plt>
  430c40:	str	w0, [sp, #24]
  430c44:	ldur	x8, [x29, #-16]
  430c48:	ldr	x8, [x8]
  430c4c:	ldr	x8, [x8, #232]
  430c50:	cbnz	x8, 430c64 <session_device_notify+0xc4>
  430c54:	stur	wzr, [x29, #-4]
  430c58:	mov	w8, #0x1                   	// #1
  430c5c:	str	w8, [sp, #16]
  430c60:	b	430e68 <session_device_notify+0x2c8>
  430c64:	ldur	x8, [x29, #-16]
  430c68:	ldr	x0, [x8]
  430c6c:	bl	42ee0c <session_bus_path>
  430c70:	str	x0, [sp, #40]
  430c74:	ldr	x8, [sp, #40]
  430c78:	cbnz	x8, 430c90 <session_device_notify+0xf0>
  430c7c:	mov	w8, #0xfffffff4            	// #-12
  430c80:	stur	w8, [x29, #-4]
  430c84:	mov	w8, #0x1                   	// #1
  430c88:	str	w8, [sp, #16]
  430c8c:	b	430e68 <session_device_notify+0x2c8>
  430c90:	ldur	x8, [x29, #-16]
  430c94:	ldr	x8, [x8]
  430c98:	ldr	x8, [x8]
  430c9c:	ldr	x0, [x8, #8]
  430ca0:	ldr	x2, [sp, #40]
  430ca4:	ldur	w9, [x29, #-20]
  430ca8:	adrp	x8, 448000 <_fini+0x7c30>
  430cac:	add	x8, x8, #0x680
  430cb0:	adrp	x10, 448000 <_fini+0x7c30>
  430cb4:	add	x10, x10, #0x690
  430cb8:	cmp	w9, #0x0
  430cbc:	csel	x4, x10, x8, eq  // eq = none
  430cc0:	sub	x1, x29, #0x20
  430cc4:	adrp	x3, 440000 <on_brightness_writer_exit+0x15c>
  430cc8:	add	x3, x3, #0xe9a
  430ccc:	bl	407bd8 <sd_bus_message_new_signal@plt>
  430cd0:	str	w0, [sp, #20]
  430cd4:	ldur	x8, [x29, #-32]
  430cd8:	cbnz	x8, 430cf0 <session_device_notify+0x150>
  430cdc:	ldr	w8, [sp, #20]
  430ce0:	stur	w8, [x29, #-4]
  430ce4:	mov	w8, #0x1                   	// #1
  430ce8:	str	w8, [sp, #16]
  430cec:	b	430e68 <session_device_notify+0x2c8>
  430cf0:	ldur	x0, [x29, #-32]
  430cf4:	ldur	x8, [x29, #-16]
  430cf8:	ldr	x8, [x8]
  430cfc:	ldr	x1, [x8, #232]
  430d00:	bl	407be8 <sd_bus_message_set_destination@plt>
  430d04:	str	w0, [sp, #20]
  430d08:	ldr	w9, [sp, #20]
  430d0c:	cmp	w9, #0x0
  430d10:	cset	w9, ge  // ge = tcont
  430d14:	tbnz	w9, #0, 430d2c <session_device_notify+0x18c>
  430d18:	ldr	w8, [sp, #20]
  430d1c:	stur	w8, [x29, #-4]
  430d20:	mov	w8, #0x1                   	// #1
  430d24:	str	w8, [sp, #16]
  430d28:	b	430e68 <session_device_notify+0x2c8>
  430d2c:	ldur	w8, [x29, #-20]
  430d30:	subs	w8, w8, #0x0
  430d34:	mov	w9, w8
  430d38:	ubfx	x9, x9, #0, #32
  430d3c:	cmp	x9, #0x3
  430d40:	str	x9, [sp]
  430d44:	b.hi	430ddc <session_device_notify+0x23c>  // b.pmore
  430d48:	adrp	x8, 44b000 <_fini+0xac30>
  430d4c:	add	x8, x8, #0xc10
  430d50:	ldr	x11, [sp]
  430d54:	ldrsw	x10, [x8, x11, lsl #2]
  430d58:	add	x9, x8, x10
  430d5c:	br	x9
  430d60:	ldur	x0, [x29, #-32]
  430d64:	ldr	w2, [sp, #28]
  430d68:	ldr	w3, [sp, #24]
  430d6c:	ldur	x8, [x29, #-16]
  430d70:	ldr	w4, [x8, #32]
  430d74:	adrp	x1, 448000 <_fini+0x7c30>
  430d78:	add	x1, x1, #0x69d
  430d7c:	bl	407508 <sd_bus_message_append@plt>
  430d80:	str	w0, [sp, #20]
  430d84:	ldr	w9, [sp, #20]
  430d88:	cmp	w9, #0x0
  430d8c:	cset	w9, ge  // ge = tcont
  430d90:	tbnz	w9, #0, 430da8 <session_device_notify+0x208>
  430d94:	ldr	w8, [sp, #20]
  430d98:	stur	w8, [x29, #-4]
  430d9c:	mov	w8, #0x1                   	// #1
  430da0:	str	w8, [sp, #16]
  430da4:	b	430e68 <session_device_notify+0x2c8>
  430da8:	b	430df0 <session_device_notify+0x250>
  430dac:	adrp	x8, 449000 <_fini+0x8c30>
  430db0:	add	x8, x8, #0x61b
  430db4:	str	x8, [sp, #32]
  430db8:	b	430df0 <session_device_notify+0x250>
  430dbc:	adrp	x8, 449000 <_fini+0x8c30>
  430dc0:	add	x8, x8, #0x621
  430dc4:	str	x8, [sp, #32]
  430dc8:	b	430df0 <session_device_notify+0x250>
  430dcc:	adrp	x8, 449000 <_fini+0x8c30>
  430dd0:	add	x8, x8, #0x627
  430dd4:	str	x8, [sp, #32]
  430dd8:	b	430df0 <session_device_notify+0x250>
  430ddc:	mov	w8, #0xffffffea            	// #-22
  430de0:	stur	w8, [x29, #-4]
  430de4:	mov	w8, #0x1                   	// #1
  430de8:	str	w8, [sp, #16]
  430dec:	b	430e68 <session_device_notify+0x2c8>
  430df0:	ldr	x8, [sp, #32]
  430df4:	cbz	x8, 430e3c <session_device_notify+0x29c>
  430df8:	ldur	x0, [x29, #-32]
  430dfc:	ldr	w2, [sp, #28]
  430e00:	ldr	w3, [sp, #24]
  430e04:	ldr	x4, [sp, #32]
  430e08:	adrp	x1, 448000 <_fini+0x7c30>
  430e0c:	add	x1, x1, #0x68c
  430e10:	bl	407508 <sd_bus_message_append@plt>
  430e14:	str	w0, [sp, #20]
  430e18:	ldr	w8, [sp, #20]
  430e1c:	cmp	w8, #0x0
  430e20:	cset	w8, ge  // ge = tcont
  430e24:	tbnz	w8, #0, 430e3c <session_device_notify+0x29c>
  430e28:	ldr	w8, [sp, #20]
  430e2c:	stur	w8, [x29, #-4]
  430e30:	mov	w8, #0x1                   	// #1
  430e34:	str	w8, [sp, #16]
  430e38:	b	430e68 <session_device_notify+0x2c8>
  430e3c:	ldur	x8, [x29, #-16]
  430e40:	ldr	x8, [x8]
  430e44:	ldr	x8, [x8]
  430e48:	ldr	x0, [x8, #8]
  430e4c:	ldur	x1, [x29, #-32]
  430e50:	mov	x8, xzr
  430e54:	mov	x2, x8
  430e58:	bl	4075d8 <sd_bus_send@plt>
  430e5c:	stur	w0, [x29, #-4]
  430e60:	mov	w9, #0x1                   	// #1
  430e64:	str	w9, [sp, #16]
  430e68:	add	x0, sp, #0x28
  430e6c:	bl	431704 <freep>
  430e70:	sub	x0, x29, #0x20
  430e74:	bl	431d44 <sd_bus_message_unrefp>
  430e78:	ldur	w0, [x29, #-4]
  430e7c:	ldp	x29, x30, [sp, #80]
  430e80:	add	sp, sp, #0x60
  430e84:	ret

0000000000430e88 <session_device_complete_pause>:
  430e88:	sub	sp, sp, #0x40
  430e8c:	stp	x29, x30, [sp, #48]
  430e90:	add	x29, sp, #0x30
  430e94:	stur	x0, [x29, #-8]
  430e98:	ldur	x8, [x29, #-8]
  430e9c:	ldrb	w9, [x8, #36]
  430ea0:	mov	w10, #0x3                   	// #3
  430ea4:	lsr	w9, w9, w10
  430ea8:	and	w9, w9, #0x1
  430eac:	tbnz	w9, #0, 430eb4 <session_device_complete_pause+0x2c>
  430eb0:	b	430f34 <session_device_complete_pause+0xac>
  430eb4:	ldur	x0, [x29, #-8]
  430eb8:	bl	430a0c <session_device_stop>
  430ebc:	mov	x8, sp
  430ec0:	mov	w9, #0xfffffffe            	// #-2
  430ec4:	str	w9, [sp]
  430ec8:	mov	x10, xzr
  430ecc:	str	x10, [x8, #8]
  430ed0:	ldr	q0, [sp]
  430ed4:	str	q0, [sp, #16]
  430ed8:	ldur	x8, [x29, #-8]
  430edc:	ldr	x8, [x8]
  430ee0:	ldr	x0, [x8, #240]
  430ee4:	add	x1, sp, #0x10
  430ee8:	sub	x2, x29, #0x10
  430eec:	mov	x8, xzr
  430ef0:	mov	x3, x8
  430ef4:	bl	430f40 <hashmap_iterate>
  430ef8:	tbnz	w0, #0, 430f00 <session_device_complete_pause+0x78>
  430efc:	b	430f24 <session_device_complete_pause+0x9c>
  430f00:	ldur	x8, [x29, #-16]
  430f04:	ldrb	w9, [x8, #36]
  430f08:	mov	w10, #0x3                   	// #3
  430f0c:	lsr	w9, w9, w10
  430f10:	and	w9, w9, #0x1
  430f14:	tbnz	w9, #0, 430f1c <session_device_complete_pause+0x94>
  430f18:	b	430f20 <session_device_complete_pause+0x98>
  430f1c:	b	430f34 <session_device_complete_pause+0xac>
  430f20:	b	430ed8 <session_device_complete_pause+0x50>
  430f24:	ldur	x8, [x29, #-8]
  430f28:	ldr	x8, [x8]
  430f2c:	ldr	x0, [x8, #136]
  430f30:	bl	42b93c <seat_complete_switch>
  430f34:	ldp	x29, x30, [sp, #48]
  430f38:	add	sp, sp, #0x40
  430f3c:	ret

0000000000430f40 <hashmap_iterate>:
  430f40:	sub	sp, sp, #0x30
  430f44:	stp	x29, x30, [sp, #32]
  430f48:	add	x29, sp, #0x20
  430f4c:	stur	x0, [x29, #-8]
  430f50:	str	x1, [sp, #16]
  430f54:	str	x2, [sp, #8]
  430f58:	str	x3, [sp]
  430f5c:	ldur	x0, [x29, #-8]
  430f60:	ldr	x1, [sp, #16]
  430f64:	ldr	x2, [sp, #8]
  430f68:	ldr	x3, [sp]
  430f6c:	bl	407018 <internal_hashmap_iterate@plt>
  430f70:	and	w0, w0, #0x1
  430f74:	ldp	x29, x30, [sp, #32]
  430f78:	add	sp, sp, #0x30
  430f7c:	ret

0000000000430f80 <session_device_resume_all>:
  430f80:	sub	sp, sp, #0x50
  430f84:	stp	x29, x30, [sp, #64]
  430f88:	add	x29, sp, #0x40
  430f8c:	adrp	x8, 449000 <_fini+0x8c30>
  430f90:	add	x8, x8, #0x237
  430f94:	add	x2, x8, #0x3
  430f98:	stur	x0, [x29, #-8]
  430f9c:	str	x2, [sp, #8]
  430fa0:	ldur	x8, [x29, #-8]
  430fa4:	cmp	x8, #0x0
  430fa8:	cset	w9, ne  // ne = any
  430fac:	mov	w10, #0x1                   	// #1
  430fb0:	eor	w9, w9, #0x1
  430fb4:	eor	w9, w9, w10
  430fb8:	eor	w9, w9, w10
  430fbc:	and	w9, w9, #0x1
  430fc0:	mov	w0, w9
  430fc4:	sxtw	x8, w0
  430fc8:	cbz	x8, 430ff0 <session_device_resume_all+0x70>
  430fcc:	mov	w8, wzr
  430fd0:	mov	w0, w8
  430fd4:	adrp	x1, 442000 <_fini+0x1c30>
  430fd8:	add	x1, x1, #0xf2
  430fdc:	ldr	x2, [sp, #8]
  430fe0:	mov	w3, #0x1af                 	// #431
  430fe4:	adrp	x4, 449000 <_fini+0x8c30>
  430fe8:	add	x4, x4, #0x2fe
  430fec:	bl	406c68 <log_assert_failed_realm@plt>
  430ff0:	add	x8, sp, #0x10
  430ff4:	mov	w9, #0xfffffffe            	// #-2
  430ff8:	str	w9, [sp, #16]
  430ffc:	mov	x10, xzr
  431000:	str	x10, [x8, #8]
  431004:	ldr	q0, [sp, #16]
  431008:	str	q0, [sp, #32]
  43100c:	ldur	x8, [x29, #-8]
  431010:	ldr	x0, [x8, #240]
  431014:	add	x1, sp, #0x20
  431018:	sub	x2, x29, #0x10
  43101c:	mov	x8, xzr
  431020:	mov	x3, x8
  431024:	bl	430f40 <hashmap_iterate>
  431028:	tbnz	w0, #0, 431030 <session_device_resume_all+0xb0>
  43102c:	b	431094 <session_device_resume_all+0x114>
  431030:	ldur	x8, [x29, #-16]
  431034:	ldrb	w9, [x8, #36]
  431038:	mov	w10, #0x3                   	// #3
  43103c:	lsr	w9, w9, w10
  431040:	and	w9, w9, #0x1
  431044:	tbnz	w9, #0, 43104c <session_device_resume_all+0xcc>
  431048:	b	431050 <session_device_resume_all+0xd0>
  43104c:	b	43100c <session_device_resume_all+0x8c>
  431050:	ldur	x0, [x29, #-16]
  431054:	bl	4310a0 <session_device_start>
  431058:	cmp	w0, #0x0
  43105c:	cset	w8, ge  // ge = tcont
  431060:	tbnz	w8, #0, 431068 <session_device_resume_all+0xe8>
  431064:	b	43100c <session_device_resume_all+0x8c>
  431068:	ldur	x0, [x29, #-16]
  43106c:	bl	431304 <session_device_save>
  431070:	cmp	w0, #0x0
  431074:	cset	w8, ge  // ge = tcont
  431078:	tbnz	w8, #0, 431080 <session_device_resume_all+0x100>
  43107c:	b	43100c <session_device_resume_all+0x8c>
  431080:	ldur	x0, [x29, #-16]
  431084:	mov	w8, wzr
  431088:	mov	w1, w8
  43108c:	bl	430ba0 <session_device_notify>
  431090:	b	43100c <session_device_resume_all+0x8c>
  431094:	ldp	x29, x30, [sp, #64]
  431098:	add	sp, sp, #0x50
  43109c:	ret

00000000004310a0 <session_device_start>:
  4310a0:	sub	sp, sp, #0x50
  4310a4:	stp	x29, x30, [sp, #64]
  4310a8:	add	x29, sp, #0x40
  4310ac:	adrp	x8, 449000 <_fini+0x8c30>
  4310b0:	add	x8, x8, #0x237
  4310b4:	add	x8, x8, #0x3
  4310b8:	stur	x0, [x29, #-16]
  4310bc:	str	x8, [sp, #16]
  4310c0:	ldur	x8, [x29, #-16]
  4310c4:	cmp	x8, #0x0
  4310c8:	cset	w9, ne  // ne = any
  4310cc:	mov	w10, #0x1                   	// #1
  4310d0:	eor	w9, w9, #0x1
  4310d4:	eor	w9, w9, w10
  4310d8:	eor	w9, w9, w10
  4310dc:	and	w9, w9, #0x1
  4310e0:	mov	w0, w9
  4310e4:	sxtw	x8, w0
  4310e8:	cbz	x8, 431110 <session_device_start+0x70>
  4310ec:	mov	w8, wzr
  4310f0:	mov	w0, w8
  4310f4:	adrp	x1, 449000 <_fini+0x8c30>
  4310f8:	add	x1, x1, #0x2a2
  4310fc:	ldr	x2, [sp, #16]
  431100:	mov	w3, #0xaa                  	// #170
  431104:	adrp	x4, 449000 <_fini+0x8c30>
  431108:	add	x4, x4, #0x62c
  43110c:	bl	406c68 <log_assert_failed_realm@plt>
  431110:	ldur	x8, [x29, #-16]
  431114:	ldr	x0, [x8]
  431118:	bl	433408 <session_is_active>
  43111c:	mov	w9, #0x1                   	// #1
  431120:	eor	w10, w0, #0x1
  431124:	eor	w10, w10, w9
  431128:	eor	w9, w10, w9
  43112c:	and	w9, w9, #0x1
  431130:	mov	w1, w9
  431134:	sxtw	x8, w1
  431138:	cbz	x8, 431160 <session_device_start+0xc0>
  43113c:	mov	w8, wzr
  431140:	mov	w0, w8
  431144:	adrp	x1, 449000 <_fini+0x8c30>
  431148:	add	x1, x1, #0x656
  43114c:	ldr	x2, [sp, #16]
  431150:	mov	w3, #0xab                  	// #171
  431154:	adrp	x4, 449000 <_fini+0x8c30>
  431158:	add	x4, x4, #0x62c
  43115c:	bl	406c68 <log_assert_failed_realm@plt>
  431160:	ldur	x8, [x29, #-16]
  431164:	ldrb	w9, [x8, #36]
  431168:	mov	w10, #0x3                   	// #3
  43116c:	lsr	w9, w9, w10
  431170:	and	w9, w9, #0x1
  431174:	tbnz	w9, #0, 43117c <session_device_start+0xdc>
  431178:	b	431184 <session_device_start+0xe4>
  43117c:	stur	wzr, [x29, #-4]
  431180:	b	4312f4 <session_device_start+0x254>
  431184:	ldur	x8, [x29, #-16]
  431188:	ldrb	w9, [x8, #36]
  43118c:	and	w9, w9, #0x7
  431190:	and	w9, w9, #0xff
  431194:	str	w9, [sp, #12]
  431198:	cbz	w9, 4312dc <session_device_start+0x23c>
  43119c:	b	4311a0 <session_device_start+0x100>
  4311a0:	ldr	w8, [sp, #12]
  4311a4:	cmp	w8, #0x1
  4311a8:	b.eq	4311c0 <session_device_start+0x120>  // b.none
  4311ac:	b	4311b0 <session_device_start+0x110>
  4311b0:	ldr	w8, [sp, #12]
  4311b4:	cmp	w8, #0x2
  4311b8:	b.eq	431290 <session_device_start+0x1f0>  // b.none
  4311bc:	b	4312dc <session_device_start+0x23c>
  4311c0:	ldur	x8, [x29, #-16]
  4311c4:	ldr	w9, [x8, #32]
  4311c8:	cmp	w9, #0x0
  4311cc:	cset	w9, ge  // ge = tcont
  4311d0:	tbnz	w9, #0, 431260 <session_device_start+0x1c0>
  4311d4:	mov	w8, #0x3                   	// #3
  4311d8:	stur	w8, [x29, #-24]
  4311dc:	mov	w8, #0x9                   	// #9
  4311e0:	movk	w8, #0x4000, lsl #16
  4311e4:	stur	w8, [x29, #-28]
  4311e8:	str	wzr, [sp, #32]
  4311ec:	ldr	w0, [sp, #32]
  4311f0:	bl	406c08 <log_get_max_level_realm@plt>
  4311f4:	ldur	w8, [x29, #-24]
  4311f8:	and	w8, w8, #0x7
  4311fc:	cmp	w0, w8
  431200:	b.lt	431238 <session_device_start+0x198>  // b.tstop
  431204:	ldr	w8, [sp, #32]
  431208:	ldur	w9, [x29, #-24]
  43120c:	orr	w0, w9, w8, lsl #10
  431210:	ldur	w1, [x29, #-28]
  431214:	ldr	x2, [sp, #16]
  431218:	mov	w3, #0xb5                  	// #181
  43121c:	adrp	x4, 449000 <_fini+0x8c30>
  431220:	add	x4, x4, #0x675
  431224:	adrp	x5, 449000 <_fini+0x8c30>
  431228:	add	x5, x5, #0x68a
  43122c:	bl	406c18 <log_internal_realm@plt>
  431230:	str	w0, [sp, #8]
  431234:	b	43124c <session_device_start+0x1ac>
  431238:	ldur	w0, [x29, #-28]
  43123c:	bl	406c28 <abs@plt>
  431240:	mov	w8, wzr
  431244:	subs	w8, w8, w0, uxtb
  431248:	str	w8, [sp, #8]
  43124c:	ldr	w8, [sp, #8]
  431250:	str	w8, [sp, #28]
  431254:	ldr	w8, [sp, #28]
  431258:	stur	w8, [x29, #-4]
  43125c:	b	4312f4 <session_device_start+0x254>
  431260:	ldur	x8, [x29, #-16]
  431264:	ldr	w0, [x8, #32]
  431268:	bl	431a7c <sd_drmsetmaster>
  43126c:	stur	w0, [x29, #-20]
  431270:	ldur	w9, [x29, #-20]
  431274:	cmp	w9, #0x0
  431278:	cset	w9, ge  // ge = tcont
  43127c:	tbnz	w9, #0, 43128c <session_device_start+0x1ec>
  431280:	ldur	w8, [x29, #-20]
  431284:	stur	w8, [x29, #-4]
  431288:	b	4312f4 <session_device_start+0x254>
  43128c:	b	4312dc <session_device_start+0x23c>
  431290:	ldur	x0, [x29, #-16]
  431294:	mov	w8, #0x1                   	// #1
  431298:	and	w1, w8, #0x1
  43129c:	bl	43055c <session_device_open>
  4312a0:	stur	w0, [x29, #-20]
  4312a4:	ldur	w8, [x29, #-20]
  4312a8:	cmp	w8, #0x0
  4312ac:	cset	w8, ge  // ge = tcont
  4312b0:	tbnz	w8, #0, 4312c0 <session_device_start+0x220>
  4312b4:	ldur	w8, [x29, #-20]
  4312b8:	stur	w8, [x29, #-4]
  4312bc:	b	4312f4 <session_device_start+0x254>
  4312c0:	ldur	x8, [x29, #-16]
  4312c4:	ldr	w0, [x8, #32]
  4312c8:	bl	406d38 <safe_close@plt>
  4312cc:	ldur	w9, [x29, #-20]
  4312d0:	ldur	x8, [x29, #-16]
  4312d4:	str	w9, [x8, #32]
  4312d8:	b	4312dc <session_device_start+0x23c>
  4312dc:	ldur	x8, [x29, #-16]
  4312e0:	ldrb	w9, [x8, #36]
  4312e4:	and	w9, w9, #0xfffffff7
  4312e8:	orr	w9, w9, #0x8
  4312ec:	strb	w9, [x8, #36]
  4312f0:	stur	wzr, [x29, #-4]
  4312f4:	ldur	w0, [x29, #-4]
  4312f8:	ldp	x29, x30, [sp, #64]
  4312fc:	add	sp, sp, #0x50
  431300:	ret

0000000000431304 <session_device_save>:
  431304:	sub	sp, sp, #0x60
  431308:	stp	x29, x30, [sp, #80]
  43130c:	add	x29, sp, #0x50
  431310:	mov	x8, xzr
  431314:	adrp	x9, 449000 <_fini+0x8c30>
  431318:	add	x9, x9, #0x237
  43131c:	add	x9, x9, #0x3
  431320:	stur	x0, [x29, #-16]
  431324:	stur	x8, [x29, #-24]
  431328:	str	x9, [sp, #32]
  43132c:	ldur	x8, [x29, #-16]
  431330:	cmp	x8, #0x0
  431334:	cset	w9, ne  // ne = any
  431338:	mov	w10, #0x1                   	// #1
  43133c:	eor	w9, w9, #0x1
  431340:	eor	w9, w9, w10
  431344:	eor	w9, w9, w10
  431348:	and	w9, w9, #0x1
  43134c:	mov	w0, w9
  431350:	sxtw	x8, w0
  431354:	cbz	x8, 43137c <session_device_save+0x78>
  431358:	mov	w8, wzr
  43135c:	mov	w0, w8
  431360:	adrp	x1, 449000 <_fini+0x8c30>
  431364:	add	x1, x1, #0x2a2
  431368:	ldr	x2, [sp, #32]
  43136c:	mov	w3, #0x1e4                 	// #484
  431370:	adrp	x4, 449000 <_fini+0x8c30>
  431374:	add	x4, x4, #0x386
  431378:	bl	406c68 <log_assert_failed_realm@plt>
  43137c:	ldur	x8, [x29, #-16]
  431380:	ldrb	w9, [x8, #36]
  431384:	mov	w10, #0x4                   	// #4
  431388:	lsr	w9, w9, w10
  43138c:	and	w9, w9, #0x1
  431390:	tbnz	w9, #0, 431398 <session_device_save+0x94>
  431394:	b	4313a8 <session_device_save+0xa4>
  431398:	stur	wzr, [x29, #-4]
  43139c:	mov	w8, #0x1                   	// #1
  4313a0:	str	w8, [sp, #40]
  4313a4:	b	431500 <session_device_save+0x1fc>
  4313a8:	ldur	x8, [x29, #-16]
  4313ac:	ldr	x8, [x8]
  4313b0:	ldr	x8, [x8, #8]
  4313b4:	stur	x8, [x29, #-32]
  4313b8:	ldur	x8, [x29, #-32]
  4313bc:	ldur	x0, [x29, #-32]
  4313c0:	adrp	x1, 449000 <_fini+0x8c30>
  4313c4:	add	x1, x1, #0x3af
  4313c8:	str	x8, [sp, #24]
  4313cc:	bl	407bf8 <strcspn@plt>
  4313d0:	ldr	x8, [sp, #24]
  4313d4:	ldrb	w9, [x8, x0]
  4313d8:	cmp	w9, #0x0
  4313dc:	cset	w9, eq  // eq = none
  4313e0:	mov	w10, #0x1                   	// #1
  4313e4:	eor	w9, w9, #0x1
  4313e8:	eor	w9, w9, w10
  4313ec:	eor	w9, w9, w10
  4313f0:	and	w9, w9, #0x1
  4313f4:	mov	w0, w9
  4313f8:	sxtw	x11, w0
  4313fc:	cbz	x11, 431424 <session_device_save+0x120>
  431400:	mov	w8, wzr
  431404:	mov	w0, w8
  431408:	adrp	x1, 449000 <_fini+0x8c30>
  43140c:	add	x1, x1, #0x3b2
  431410:	ldr	x2, [sp, #32]
  431414:	mov	w3, #0x1f2                 	// #498
  431418:	adrp	x4, 449000 <_fini+0x8c30>
  43141c:	add	x4, x4, #0x386
  431420:	bl	406c68 <log_assert_failed_realm@plt>
  431424:	ldur	x2, [x29, #-32]
  431428:	ldur	x8, [x29, #-16]
  43142c:	ldr	x0, [x8, #16]
  431430:	str	x2, [sp, #16]
  431434:	bl	407128 <gnu_dev_major@plt>
  431438:	ldur	x8, [x29, #-16]
  43143c:	ldr	x8, [x8, #16]
  431440:	str	w0, [sp, #12]
  431444:	mov	x0, x8
  431448:	bl	407138 <gnu_dev_minor@plt>
  43144c:	sub	x8, x29, #0x18
  431450:	str	w0, [sp, #8]
  431454:	mov	x0, x8
  431458:	adrp	x1, 449000 <_fini+0x8c30>
  43145c:	add	x1, x1, #0x3d5
  431460:	ldr	x2, [sp, #16]
  431464:	ldr	w3, [sp, #12]
  431468:	ldr	w4, [sp, #8]
  43146c:	bl	406ff8 <asprintf@plt>
  431470:	stur	w0, [x29, #-36]
  431474:	ldur	w9, [x29, #-36]
  431478:	cmp	w9, #0x0
  43147c:	cset	w9, ge  // ge = tcont
  431480:	tbnz	w9, #0, 431498 <session_device_save+0x194>
  431484:	ldur	w8, [x29, #-36]
  431488:	stur	w8, [x29, #-4]
  43148c:	mov	w8, #0x1                   	// #1
  431490:	str	w8, [sp, #40]
  431494:	b	431500 <session_device_save+0x1fc>
  431498:	ldur	x2, [x29, #-24]
  43149c:	ldur	x8, [x29, #-16]
  4314a0:	add	x3, x8, #0x20
  4314a4:	mov	w9, wzr
  4314a8:	mov	w0, w9
  4314ac:	mov	w1, w9
  4314b0:	mov	w4, #0x1                   	// #1
  4314b4:	bl	407c08 <sd_pid_notify_with_fds@plt>
  4314b8:	stur	w0, [x29, #-36]
  4314bc:	ldur	w9, [x29, #-36]
  4314c0:	cmp	w9, #0x0
  4314c4:	cset	w9, ge  // ge = tcont
  4314c8:	tbnz	w9, #0, 4314e0 <session_device_save+0x1dc>
  4314cc:	ldur	w8, [x29, #-36]
  4314d0:	stur	w8, [x29, #-4]
  4314d4:	mov	w8, #0x1                   	// #1
  4314d8:	str	w8, [sp, #40]
  4314dc:	b	431500 <session_device_save+0x1fc>
  4314e0:	ldur	x8, [x29, #-16]
  4314e4:	ldrb	w9, [x8, #36]
  4314e8:	and	w9, w9, #0xffffffef
  4314ec:	orr	w9, w9, #0x10
  4314f0:	strb	w9, [x8, #36]
  4314f4:	mov	w9, #0x1                   	// #1
  4314f8:	stur	w9, [x29, #-4]
  4314fc:	str	w9, [sp, #40]
  431500:	sub	x0, x29, #0x18
  431504:	bl	431704 <freep>
  431508:	ldur	w0, [x29, #-4]
  43150c:	ldp	x29, x30, [sp, #80]
  431510:	add	sp, sp, #0x60
  431514:	ret

0000000000431518 <session_device_pause_all>:
  431518:	sub	sp, sp, #0x50
  43151c:	stp	x29, x30, [sp, #64]
  431520:	add	x29, sp, #0x40
  431524:	adrp	x8, 449000 <_fini+0x8c30>
  431528:	add	x8, x8, #0x237
  43152c:	add	x2, x8, #0x3
  431530:	stur	x0, [x29, #-8]
  431534:	str	x2, [sp, #8]
  431538:	ldur	x8, [x29, #-8]
  43153c:	cmp	x8, #0x0
  431540:	cset	w9, ne  // ne = any
  431544:	mov	w10, #0x1                   	// #1
  431548:	eor	w9, w9, #0x1
  43154c:	eor	w9, w9, w10
  431550:	eor	w9, w9, w10
  431554:	and	w9, w9, #0x1
  431558:	mov	w0, w9
  43155c:	sxtw	x8, w0
  431560:	cbz	x8, 431588 <session_device_pause_all+0x70>
  431564:	mov	w8, wzr
  431568:	mov	w0, w8
  43156c:	adrp	x1, 442000 <_fini+0x1c30>
  431570:	add	x1, x1, #0xf2
  431574:	ldr	x2, [sp, #8]
  431578:	mov	w3, #0x1c2                 	// #450
  43157c:	adrp	x4, 449000 <_fini+0x8c30>
  431580:	add	x4, x4, #0x328
  431584:	bl	406c68 <log_assert_failed_realm@plt>
  431588:	add	x8, sp, #0x10
  43158c:	mov	w9, #0xfffffffe            	// #-2
  431590:	str	w9, [sp, #16]
  431594:	mov	x10, xzr
  431598:	str	x10, [x8, #8]
  43159c:	ldr	q0, [sp, #16]
  4315a0:	str	q0, [sp, #32]
  4315a4:	ldur	x8, [x29, #-8]
  4315a8:	ldr	x0, [x8, #240]
  4315ac:	add	x1, sp, #0x20
  4315b0:	sub	x2, x29, #0x10
  4315b4:	mov	x8, xzr
  4315b8:	mov	x3, x8
  4315bc:	bl	430f40 <hashmap_iterate>
  4315c0:	tbnz	w0, #0, 4315c8 <session_device_pause_all+0xb0>
  4315c4:	b	4315fc <session_device_pause_all+0xe4>
  4315c8:	ldur	x8, [x29, #-16]
  4315cc:	ldrb	w9, [x8, #36]
  4315d0:	mov	w10, #0x3                   	// #3
  4315d4:	lsr	w9, w9, w10
  4315d8:	and	w9, w9, #0x1
  4315dc:	tbnz	w9, #0, 4315e4 <session_device_pause_all+0xcc>
  4315e0:	b	4315a4 <session_device_pause_all+0x8c>
  4315e4:	ldur	x0, [x29, #-16]
  4315e8:	bl	430a0c <session_device_stop>
  4315ec:	ldur	x0, [x29, #-16]
  4315f0:	mov	w1, #0x2                   	// #2
  4315f4:	bl	430ba0 <session_device_notify>
  4315f8:	b	4315a4 <session_device_pause_all+0x8c>
  4315fc:	ldp	x29, x30, [sp, #64]
  431600:	add	sp, sp, #0x50
  431604:	ret

0000000000431608 <session_device_try_pause_all>:
  431608:	sub	sp, sp, #0x60
  43160c:	stp	x29, x30, [sp, #80]
  431610:	add	x29, sp, #0x50
  431614:	adrp	x8, 449000 <_fini+0x8c30>
  431618:	add	x8, x8, #0x237
  43161c:	add	x2, x8, #0x3
  431620:	stur	x0, [x29, #-8]
  431624:	stur	wzr, [x29, #-12]
  431628:	str	x2, [sp, #8]
  43162c:	ldur	x8, [x29, #-8]
  431630:	cmp	x8, #0x0
  431634:	cset	w9, ne  // ne = any
  431638:	mov	w10, #0x1                   	// #1
  43163c:	eor	w9, w9, #0x1
  431640:	eor	w9, w9, w10
  431644:	eor	w9, w9, w10
  431648:	and	w9, w9, #0x1
  43164c:	mov	w0, w9
  431650:	sxtw	x8, w0
  431654:	cbz	x8, 43167c <session_device_try_pause_all+0x74>
  431658:	mov	w8, wzr
  43165c:	mov	w0, w8
  431660:	adrp	x1, 442000 <_fini+0x1c30>
  431664:	add	x1, x1, #0xf2
  431668:	ldr	x2, [sp, #8]
  43166c:	mov	w3, #0x1d2                 	// #466
  431670:	adrp	x4, 449000 <_fini+0x8c30>
  431674:	add	x4, x4, #0x351
  431678:	bl	406c68 <log_assert_failed_realm@plt>
  43167c:	add	x8, sp, #0x10
  431680:	mov	w9, #0xfffffffe            	// #-2
  431684:	str	w9, [sp, #16]
  431688:	mov	x10, xzr
  43168c:	str	x10, [x8, #8]
  431690:	ldr	q0, [sp, #16]
  431694:	str	q0, [sp, #32]
  431698:	ldur	x8, [x29, #-8]
  43169c:	ldr	x0, [x8, #240]
  4316a0:	add	x1, sp, #0x20
  4316a4:	sub	x2, x29, #0x18
  4316a8:	mov	x8, xzr
  4316ac:	mov	x3, x8
  4316b0:	bl	430f40 <hashmap_iterate>
  4316b4:	tbnz	w0, #0, 4316bc <session_device_try_pause_all+0xb4>
  4316b8:	b	4316f4 <session_device_try_pause_all+0xec>
  4316bc:	ldur	x8, [x29, #-24]
  4316c0:	ldrb	w9, [x8, #36]
  4316c4:	mov	w10, #0x3                   	// #3
  4316c8:	lsr	w9, w9, w10
  4316cc:	and	w9, w9, #0x1
  4316d0:	tbnz	w9, #0, 4316d8 <session_device_try_pause_all+0xd0>
  4316d4:	b	431698 <session_device_try_pause_all+0x90>
  4316d8:	ldur	x0, [x29, #-24]
  4316dc:	mov	w1, #0x1                   	// #1
  4316e0:	bl	430ba0 <session_device_notify>
  4316e4:	ldur	w8, [x29, #-12]
  4316e8:	add	w8, w8, #0x1
  4316ec:	stur	w8, [x29, #-12]
  4316f0:	b	431698 <session_device_try_pause_all+0x90>
  4316f4:	ldur	w0, [x29, #-12]
  4316f8:	ldp	x29, x30, [sp, #80]
  4316fc:	add	sp, sp, #0x60
  431700:	ret

0000000000431704 <freep>:
  431704:	sub	sp, sp, #0x20
  431708:	stp	x29, x30, [sp, #16]
  43170c:	add	x29, sp, #0x10
  431710:	str	x0, [sp, #8]
  431714:	ldr	x8, [sp, #8]
  431718:	ldr	x0, [x8]
  43171c:	bl	406da8 <free@plt>
  431720:	ldp	x29, x30, [sp, #16]
  431724:	add	sp, sp, #0x20
  431728:	ret

000000000043172c <session_device_attach_fd>:
  43172c:	sub	sp, sp, #0x30
  431730:	stp	x29, x30, [sp, #32]
  431734:	add	x29, sp, #0x20
  431738:	adrp	x8, 449000 <_fini+0x8c30>
  43173c:	add	x8, x8, #0x237
  431740:	add	x8, x8, #0x3
  431744:	adrp	x9, 449000 <_fini+0x8c30>
  431748:	add	x9, x9, #0x3ff
  43174c:	stur	x0, [x29, #-8]
  431750:	stur	w1, [x29, #-12]
  431754:	and	w10, w2, #0x1
  431758:	sturb	w10, [x29, #-13]
  43175c:	str	x8, [sp, #8]
  431760:	str	x9, [sp]
  431764:	ldur	w8, [x29, #-12]
  431768:	cmp	w8, #0x0
  43176c:	cset	w8, ge  // ge = tcont
  431770:	mov	w9, #0x1                   	// #1
  431774:	eor	w8, w8, #0x1
  431778:	eor	w8, w8, w9
  43177c:	eor	w8, w8, w9
  431780:	and	w8, w8, #0x1
  431784:	mov	w0, w8
  431788:	sxtw	x10, w0
  43178c:	cbz	x10, 4317b0 <session_device_attach_fd+0x84>
  431790:	mov	w8, wzr
  431794:	mov	w0, w8
  431798:	adrp	x1, 441000 <_fini+0xc30>
  43179c:	add	x1, x1, #0x493
  4317a0:	ldr	x2, [sp, #8]
  4317a4:	mov	w3, #0x203                 	// #515
  4317a8:	ldr	x4, [sp]
  4317ac:	bl	406c68 <log_assert_failed_realm@plt>
  4317b0:	ldur	x8, [x29, #-8]
  4317b4:	cmp	x8, #0x0
  4317b8:	cset	w9, ne  // ne = any
  4317bc:	mov	w10, #0x1                   	// #1
  4317c0:	eor	w9, w9, #0x1
  4317c4:	eor	w9, w9, w10
  4317c8:	eor	w9, w9, w10
  4317cc:	and	w9, w9, #0x1
  4317d0:	mov	w0, w9
  4317d4:	sxtw	x8, w0
  4317d8:	cbz	x8, 4317fc <session_device_attach_fd+0xd0>
  4317dc:	mov	w8, wzr
  4317e0:	mov	w0, w8
  4317e4:	adrp	x1, 449000 <_fini+0x8c30>
  4317e8:	add	x1, x1, #0x2a2
  4317ec:	ldr	x2, [sp, #8]
  4317f0:	mov	w3, #0x204                 	// #516
  4317f4:	ldr	x4, [sp]
  4317f8:	bl	406c68 <log_assert_failed_realm@plt>
  4317fc:	ldur	x8, [x29, #-8]
  431800:	ldr	w9, [x8, #32]
  431804:	cmp	w9, #0x0
  431808:	cset	w9, lt  // lt = tstop
  43180c:	mov	w10, #0x1                   	// #1
  431810:	eor	w9, w9, #0x1
  431814:	eor	w9, w9, w10
  431818:	eor	w9, w9, w10
  43181c:	and	w9, w9, #0x1
  431820:	mov	w0, w9
  431824:	sxtw	x8, w0
  431828:	cbz	x8, 43184c <session_device_attach_fd+0x120>
  43182c:	mov	w8, wzr
  431830:	mov	w0, w8
  431834:	adrp	x1, 449000 <_fini+0x8c30>
  431838:	add	x1, x1, #0x43a
  43183c:	ldr	x2, [sp, #8]
  431840:	mov	w3, #0x205                 	// #517
  431844:	ldr	x4, [sp]
  431848:	bl	406c68 <log_assert_failed_realm@plt>
  43184c:	ldur	x8, [x29, #-8]
  431850:	ldrb	w9, [x8, #36]
  431854:	mov	w10, #0x3                   	// #3
  431858:	lsr	w9, w9, w10
  43185c:	mov	w10, #0x1                   	// #1
  431860:	and	w9, w9, #0x1
  431864:	eor	w9, w9, w10
  431868:	eor	w9, w9, w10
  43186c:	eor	w9, w9, w10
  431870:	eor	w9, w9, w10
  431874:	and	w9, w9, #0x1
  431878:	mov	w0, w9
  43187c:	sxtw	x8, w0
  431880:	cbz	x8, 4318a4 <session_device_attach_fd+0x178>
  431884:	mov	w8, wzr
  431888:	mov	w0, w8
  43188c:	adrp	x1, 449000 <_fini+0x8c30>
  431890:	add	x1, x1, #0x445
  431894:	ldr	x2, [sp, #8]
  431898:	mov	w3, #0x206                 	// #518
  43189c:	ldr	x4, [sp]
  4318a0:	bl	406c68 <log_assert_failed_realm@plt>
  4318a4:	ldur	w8, [x29, #-12]
  4318a8:	ldur	x9, [x29, #-8]
  4318ac:	str	w8, [x9, #32]
  4318b0:	ldur	x9, [x29, #-8]
  4318b4:	ldrb	w8, [x9, #36]
  4318b8:	and	w8, w8, #0xffffffef
  4318bc:	orr	w8, w8, #0x10
  4318c0:	strb	w8, [x9, #36]
  4318c4:	ldurb	w8, [x29, #-13]
  4318c8:	ldur	x9, [x29, #-8]
  4318cc:	ldrb	w10, [x9, #36]
  4318d0:	and	w8, w8, #0x1
  4318d4:	lsl	w8, w8, #3
  4318d8:	and	w10, w10, #0xfffffff7
  4318dc:	orr	w8, w10, w8
  4318e0:	strb	w8, [x9, #36]
  4318e4:	ldp	x29, x30, [sp, #32]
  4318e8:	add	sp, sp, #0x30
  4318ec:	ret

00000000004318f0 <sd_device_unrefp>:
  4318f0:	sub	sp, sp, #0x20
  4318f4:	stp	x29, x30, [sp, #16]
  4318f8:	add	x29, sp, #0x10
  4318fc:	str	x0, [sp, #8]
  431900:	ldr	x8, [sp, #8]
  431904:	ldr	x8, [x8]
  431908:	cbz	x8, 431918 <sd_device_unrefp+0x28>
  43190c:	ldr	x8, [sp, #8]
  431910:	ldr	x0, [x8]
  431914:	bl	4078b8 <sd_device_unref@plt>
  431918:	ldp	x29, x30, [sp, #16]
  43191c:	add	sp, sp, #0x20
  431920:	ret

0000000000431924 <detect_device_type>:
  431924:	sub	sp, sp, #0x40
  431928:	stp	x29, x30, [sp, #48]
  43192c:	add	x29, sp, #0x30
  431930:	add	x1, sp, #0x18
  431934:	stur	x0, [x29, #-16]
  431938:	str	wzr, [sp, #12]
  43193c:	ldur	x0, [x29, #-16]
  431940:	bl	407088 <sd_device_get_sysname@plt>
  431944:	cmp	w0, #0x0
  431948:	cset	w8, lt  // lt = tstop
  43194c:	tbnz	w8, #0, 431968 <detect_device_type+0x44>
  431950:	ldur	x0, [x29, #-16]
  431954:	add	x1, sp, #0x10
  431958:	bl	407398 <sd_device_get_subsystem@plt>
  43195c:	cmp	w0, #0x0
  431960:	cset	w8, ge  // ge = tcont
  431964:	tbnz	w8, #0, 431974 <detect_device_type+0x50>
  431968:	ldr	w8, [sp, #12]
  43196c:	stur	w8, [x29, #-4]
  431970:	b	4319e0 <detect_device_type+0xbc>
  431974:	ldr	x0, [sp, #16]
  431978:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  43197c:	add	x1, x1, #0xbb0
  431980:	bl	407158 <strcmp@plt>
  431984:	cbnz	w0, 4319a8 <detect_device_type+0x84>
  431988:	ldr	x0, [sp, #24]
  43198c:	adrp	x1, 449000 <_fini+0x8c30>
  431990:	add	x1, x1, #0x451
  431994:	bl	431a1c <startswith>
  431998:	cbz	x0, 4319a4 <detect_device_type+0x80>
  43199c:	mov	w8, #0x1                   	// #1
  4319a0:	str	w8, [sp, #12]
  4319a4:	b	4319d8 <detect_device_type+0xb4>
  4319a8:	ldr	x0, [sp, #16]
  4319ac:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  4319b0:	add	x1, x1, #0xba1
  4319b4:	bl	407158 <strcmp@plt>
  4319b8:	cbnz	w0, 4319d8 <detect_device_type+0xb4>
  4319bc:	ldr	x0, [sp, #24]
  4319c0:	adrp	x1, 449000 <_fini+0x8c30>
  4319c4:	add	x1, x1, #0x456
  4319c8:	bl	431a1c <startswith>
  4319cc:	cbz	x0, 4319d8 <detect_device_type+0xb4>
  4319d0:	mov	w8, #0x2                   	// #2
  4319d4:	str	w8, [sp, #12]
  4319d8:	ldr	w8, [sp, #12]
  4319dc:	stur	w8, [x29, #-4]
  4319e0:	ldur	w0, [x29, #-4]
  4319e4:	ldp	x29, x30, [sp, #48]
  4319e8:	add	sp, sp, #0x40
  4319ec:	ret

00000000004319f0 <hashmap_get>:
  4319f0:	sub	sp, sp, #0x20
  4319f4:	stp	x29, x30, [sp, #16]
  4319f8:	add	x29, sp, #0x10
  4319fc:	str	x0, [sp, #8]
  431a00:	str	x1, [sp]
  431a04:	ldr	x0, [sp, #8]
  431a08:	ldr	x1, [sp]
  431a0c:	bl	4070e8 <internal_hashmap_get@plt>
  431a10:	ldp	x29, x30, [sp, #16]
  431a14:	add	sp, sp, #0x20
  431a18:	ret

0000000000431a1c <startswith>:
  431a1c:	sub	sp, sp, #0x30
  431a20:	stp	x29, x30, [sp, #32]
  431a24:	add	x29, sp, #0x20
  431a28:	str	x0, [sp, #16]
  431a2c:	str	x1, [sp, #8]
  431a30:	ldr	x0, [sp, #8]
  431a34:	bl	4070a8 <strlen@plt>
  431a38:	str	x0, [sp]
  431a3c:	ldr	x0, [sp, #16]
  431a40:	ldr	x1, [sp, #8]
  431a44:	ldr	x2, [sp]
  431a48:	bl	4070b8 <strncmp@plt>
  431a4c:	cbnz	w0, 431a64 <startswith+0x48>
  431a50:	ldr	x8, [sp, #16]
  431a54:	ldr	x9, [sp]
  431a58:	add	x8, x8, x9
  431a5c:	stur	x8, [x29, #-8]
  431a60:	b	431a6c <startswith+0x50>
  431a64:	mov	x8, xzr
  431a68:	stur	x8, [x29, #-8]
  431a6c:	ldur	x0, [x29, #-8]
  431a70:	ldp	x29, x30, [sp, #32]
  431a74:	add	sp, sp, #0x30
  431a78:	ret

0000000000431a7c <sd_drmsetmaster>:
  431a7c:	sub	sp, sp, #0x20
  431a80:	stp	x29, x30, [sp, #16]
  431a84:	add	x29, sp, #0x10
  431a88:	adrp	x8, 449000 <_fini+0x8c30>
  431a8c:	add	x8, x8, #0x237
  431a90:	add	x2, x8, #0x3
  431a94:	str	w0, [sp, #8]
  431a98:	str	x2, [sp]
  431a9c:	ldr	w8, [sp, #8]
  431aa0:	cmp	w8, #0x0
  431aa4:	cset	w8, ge  // ge = tcont
  431aa8:	mov	w9, #0x1                   	// #1
  431aac:	eor	w8, w8, #0x1
  431ab0:	eor	w8, w8, w9
  431ab4:	eor	w8, w8, w9
  431ab8:	and	w8, w8, #0x1
  431abc:	mov	w0, w8
  431ac0:	sxtw	x10, w0
  431ac4:	cbz	x10, 431aec <sd_drmsetmaster+0x70>
  431ac8:	mov	w8, wzr
  431acc:	mov	w0, w8
  431ad0:	adrp	x1, 441000 <_fini+0xc30>
  431ad4:	add	x1, x1, #0x493
  431ad8:	ldr	x2, [sp]
  431adc:	mov	w3, #0x6b                  	// #107
  431ae0:	adrp	x4, 449000 <_fini+0x8c30>
  431ae4:	add	x4, x4, #0x4b5
  431ae8:	bl	406c68 <log_assert_failed_realm@plt>
  431aec:	ldr	w0, [sp, #8]
  431af0:	mov	x1, #0x641e                	// #25630
  431af4:	mov	w8, wzr
  431af8:	mov	w2, w8
  431afc:	bl	407268 <ioctl@plt>
  431b00:	cmp	w0, #0x0
  431b04:	cset	w8, ge  // ge = tcont
  431b08:	tbnz	w8, #0, 431b24 <sd_drmsetmaster+0xa8>
  431b0c:	bl	406e08 <__errno_location@plt>
  431b10:	ldr	w8, [x0]
  431b14:	mov	w9, wzr
  431b18:	subs	w8, w9, w8
  431b1c:	stur	w8, [x29, #-4]
  431b20:	b	431b28 <sd_drmsetmaster+0xac>
  431b24:	stur	wzr, [x29, #-4]
  431b28:	ldur	w0, [x29, #-4]
  431b2c:	ldp	x29, x30, [sp, #16]
  431b30:	add	sp, sp, #0x20
  431b34:	ret

0000000000431b38 <sd_drmdropmaster>:
  431b38:	sub	sp, sp, #0x20
  431b3c:	stp	x29, x30, [sp, #16]
  431b40:	add	x29, sp, #0x10
  431b44:	adrp	x8, 449000 <_fini+0x8c30>
  431b48:	add	x8, x8, #0x237
  431b4c:	add	x2, x8, #0x3
  431b50:	str	w0, [sp, #8]
  431b54:	str	x2, [sp]
  431b58:	ldr	w8, [sp, #8]
  431b5c:	cmp	w8, #0x0
  431b60:	cset	w8, ge  // ge = tcont
  431b64:	mov	w9, #0x1                   	// #1
  431b68:	eor	w8, w8, #0x1
  431b6c:	eor	w8, w8, w9
  431b70:	eor	w8, w8, w9
  431b74:	and	w8, w8, #0x1
  431b78:	mov	w0, w8
  431b7c:	sxtw	x10, w0
  431b80:	cbz	x10, 431ba8 <sd_drmdropmaster+0x70>
  431b84:	mov	w8, wzr
  431b88:	mov	w0, w8
  431b8c:	adrp	x1, 441000 <_fini+0xc30>
  431b90:	add	x1, x1, #0x493
  431b94:	ldr	x2, [sp]
  431b98:	mov	w3, #0x74                  	// #116
  431b9c:	adrp	x4, 449000 <_fini+0x8c30>
  431ba0:	add	x4, x4, #0x4ce
  431ba4:	bl	406c68 <log_assert_failed_realm@plt>
  431ba8:	ldr	w0, [sp, #8]
  431bac:	mov	x1, #0x641f                	// #25631
  431bb0:	mov	w8, wzr
  431bb4:	mov	w2, w8
  431bb8:	bl	407268 <ioctl@plt>
  431bbc:	cmp	w0, #0x0
  431bc0:	cset	w8, ge  // ge = tcont
  431bc4:	tbnz	w8, #0, 431be0 <sd_drmdropmaster+0xa8>
  431bc8:	bl	406e08 <__errno_location@plt>
  431bcc:	ldr	w8, [x0]
  431bd0:	mov	w9, wzr
  431bd4:	subs	w8, w9, w8
  431bd8:	stur	w8, [x29, #-4]
  431bdc:	b	431be4 <sd_drmdropmaster+0xac>
  431be0:	stur	wzr, [x29, #-4]
  431be4:	ldur	w0, [x29, #-4]
  431be8:	ldp	x29, x30, [sp, #16]
  431bec:	add	sp, sp, #0x20
  431bf0:	ret

0000000000431bf4 <sd_eviocrevoke>:
  431bf4:	sub	sp, sp, #0x40
  431bf8:	stp	x29, x30, [sp, #48]
  431bfc:	add	x29, sp, #0x30
  431c00:	adrp	x8, 449000 <_fini+0x8c30>
  431c04:	add	x8, x8, #0x237
  431c08:	add	x8, x8, #0x3
  431c0c:	stur	w0, [x29, #-4]
  431c10:	str	x8, [sp, #16]
  431c14:	ldur	w8, [x29, #-4]
  431c18:	cmp	w8, #0x0
  431c1c:	cset	w8, ge  // ge = tcont
  431c20:	mov	w9, #0x1                   	// #1
  431c24:	eor	w8, w8, #0x1
  431c28:	eor	w8, w8, w9
  431c2c:	eor	w8, w8, w9
  431c30:	and	w8, w8, #0x1
  431c34:	mov	w0, w8
  431c38:	sxtw	x10, w0
  431c3c:	cbz	x10, 431c64 <sd_eviocrevoke+0x70>
  431c40:	mov	w8, wzr
  431c44:	mov	w0, w8
  431c48:	adrp	x1, 441000 <_fini+0xc30>
  431c4c:	add	x1, x1, #0x493
  431c50:	ldr	x2, [sp, #16]
  431c54:	mov	w3, #0x5f                  	// #95
  431c58:	adrp	x4, 449000 <_fini+0x8c30>
  431c5c:	add	x4, x4, #0x4e8
  431c60:	bl	406c68 <log_assert_failed_realm@plt>
  431c64:	ldur	w0, [x29, #-4]
  431c68:	mov	x1, #0x4591                	// #17809
  431c6c:	movk	x1, #0x4004, lsl #16
  431c70:	mov	x8, xzr
  431c74:	mov	x2, x8
  431c78:	bl	407268 <ioctl@plt>
  431c7c:	cmp	w0, #0x0
  431c80:	cset	w9, ge  // ge = tcont
  431c84:	tbnz	w9, #0, 431d38 <sd_eviocrevoke+0x144>
  431c88:	bl	406e08 <__errno_location@plt>
  431c8c:	ldr	w8, [x0]
  431c90:	cmp	w8, #0x16
  431c94:	b.ne	431d38 <sd_eviocrevoke+0x144>  // b.any
  431c98:	adrp	x8, 460000 <__TMC_END__>
  431c9c:	add	x8, x8, #0x91
  431ca0:	ldrb	w9, [x8]
  431ca4:	tbnz	w9, #0, 431d38 <sd_eviocrevoke+0x144>
  431ca8:	mov	w8, #0x4                   	// #4
  431cac:	stur	w8, [x29, #-8]
  431cb0:	bl	406e08 <__errno_location@plt>
  431cb4:	ldr	w8, [x0]
  431cb8:	stur	w8, [x29, #-12]
  431cbc:	stur	wzr, [x29, #-16]
  431cc0:	ldur	w0, [x29, #-16]
  431cc4:	bl	406c08 <log_get_max_level_realm@plt>
  431cc8:	ldur	w8, [x29, #-8]
  431ccc:	and	w8, w8, #0x7
  431cd0:	cmp	w0, w8
  431cd4:	b.lt	431d0c <sd_eviocrevoke+0x118>  // b.tstop
  431cd8:	ldur	w8, [x29, #-16]
  431cdc:	ldur	w9, [x29, #-8]
  431ce0:	orr	w0, w9, w8, lsl #10
  431ce4:	ldur	w1, [x29, #-12]
  431ce8:	ldr	x2, [sp, #16]
  431cec:	mov	w3, #0x64                  	// #100
  431cf0:	adrp	x4, 449000 <_fini+0x8c30>
  431cf4:	add	x4, x4, #0x501
  431cf8:	adrp	x5, 449000 <_fini+0x8c30>
  431cfc:	add	x5, x5, #0x510
  431d00:	bl	406c18 <log_internal_realm@plt>
  431d04:	str	w0, [sp, #12]
  431d08:	b	431d20 <sd_eviocrevoke+0x12c>
  431d0c:	ldur	w0, [x29, #-12]
  431d10:	bl	406c28 <abs@plt>
  431d14:	mov	w8, wzr
  431d18:	subs	w8, w8, w0, uxtb
  431d1c:	str	w8, [sp, #12]
  431d20:	ldr	w8, [sp, #12]
  431d24:	stur	w8, [x29, #-20]
  431d28:	mov	w8, #0x1                   	// #1
  431d2c:	adrp	x9, 460000 <__TMC_END__>
  431d30:	add	x9, x9, #0x91
  431d34:	strb	w8, [x9]
  431d38:	ldp	x29, x30, [sp, #48]
  431d3c:	add	sp, sp, #0x40
  431d40:	ret

0000000000431d44 <sd_bus_message_unrefp>:
  431d44:	sub	sp, sp, #0x20
  431d48:	stp	x29, x30, [sp, #16]
  431d4c:	add	x29, sp, #0x10
  431d50:	str	x0, [sp, #8]
  431d54:	ldr	x8, [sp, #8]
  431d58:	ldr	x8, [x8]
  431d5c:	cbz	x8, 431d6c <sd_bus_message_unrefp+0x28>
  431d60:	ldr	x8, [sp, #8]
  431d64:	ldr	x0, [x8]
  431d68:	bl	407818 <sd_bus_message_unref@plt>
  431d6c:	ldp	x29, x30, [sp, #16]
  431d70:	add	sp, sp, #0x20
  431d74:	ret

0000000000431d78 <session_new>:
  431d78:	sub	sp, sp, #0x1c0
  431d7c:	stp	x29, x30, [sp, #416]
  431d80:	str	x28, [sp, #432]
  431d84:	add	x29, sp, #0x1a0
  431d88:	mov	x8, xzr
  431d8c:	adrp	x9, 449000 <_fini+0x8c30>
  431d90:	add	x9, x9, #0x6de
  431d94:	add	x9, x9, #0x3
  431d98:	adrp	x10, 449000 <_fini+0x8c30>
  431d9c:	add	x10, x10, #0x6fc
  431da0:	stur	x0, [x29, #-16]
  431da4:	stur	x1, [x29, #-24]
  431da8:	stur	x2, [x29, #-32]
  431dac:	stur	x8, [x29, #-40]
  431db0:	str	x9, [sp, #40]
  431db4:	str	x10, [sp, #32]
  431db8:	ldur	x8, [x29, #-16]
  431dbc:	cmp	x8, #0x0
  431dc0:	cset	w9, ne  // ne = any
  431dc4:	mov	w10, #0x1                   	// #1
  431dc8:	eor	w9, w9, #0x1
  431dcc:	eor	w9, w9, w10
  431dd0:	eor	w9, w9, w10
  431dd4:	and	w9, w9, #0x1
  431dd8:	mov	w0, w9
  431ddc:	sxtw	x8, w0
  431de0:	cbz	x8, 431e04 <session_new+0x8c>
  431de4:	mov	w8, wzr
  431de8:	mov	w0, w8
  431dec:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  431df0:	add	x1, x1, #0x5cf
  431df4:	ldr	x2, [sp, #40]
  431df8:	mov	w3, #0x32                  	// #50
  431dfc:	ldr	x4, [sp, #32]
  431e00:	bl	406c68 <log_assert_failed_realm@plt>
  431e04:	ldur	x8, [x29, #-24]
  431e08:	cmp	x8, #0x0
  431e0c:	cset	w9, ne  // ne = any
  431e10:	mov	w10, #0x1                   	// #1
  431e14:	eor	w9, w9, #0x1
  431e18:	eor	w9, w9, w10
  431e1c:	eor	w9, w9, w10
  431e20:	and	w9, w9, #0x1
  431e24:	mov	w0, w9
  431e28:	sxtw	x8, w0
  431e2c:	cbz	x8, 431e50 <session_new+0xd8>
  431e30:	mov	w8, wzr
  431e34:	mov	w0, w8
  431e38:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  431e3c:	add	x1, x1, #0x5ef
  431e40:	ldr	x2, [sp, #40]
  431e44:	mov	w3, #0x33                  	// #51
  431e48:	ldr	x4, [sp, #32]
  431e4c:	bl	406c68 <log_assert_failed_realm@plt>
  431e50:	ldur	x8, [x29, #-32]
  431e54:	cmp	x8, #0x0
  431e58:	cset	w9, ne  // ne = any
  431e5c:	mov	w10, #0x1                   	// #1
  431e60:	eor	w9, w9, #0x1
  431e64:	eor	w9, w9, w10
  431e68:	eor	w9, w9, w10
  431e6c:	and	w9, w9, #0x1
  431e70:	mov	w0, w9
  431e74:	sxtw	x8, w0
  431e78:	cbz	x8, 431e9c <session_new+0x124>
  431e7c:	mov	w8, wzr
  431e80:	mov	w0, w8
  431e84:	adrp	x1, 442000 <_fini+0x1c30>
  431e88:	add	x1, x1, #0x4dd
  431e8c:	ldr	x2, [sp, #40]
  431e90:	mov	w3, #0x34                  	// #52
  431e94:	ldr	x4, [sp, #32]
  431e98:	bl	406c68 <log_assert_failed_realm@plt>
  431e9c:	ldur	x0, [x29, #-32]
  431ea0:	bl	407c18 <session_id_valid@plt>
  431ea4:	tbnz	w0, #0, 431ebc <session_new+0x144>
  431ea8:	mov	w8, #0xffffffea            	// #-22
  431eac:	stur	w8, [x29, #-4]
  431eb0:	mov	w8, #0x1                   	// #1
  431eb4:	stur	w8, [x29, #-48]
  431eb8:	b	432038 <session_new+0x2c0>
  431ebc:	mov	x0, #0x130                 	// #304
  431ec0:	mov	x1, #0x1                   	// #1
  431ec4:	bl	432088 <malloc_multiply>
  431ec8:	stur	x0, [x29, #-40]
  431ecc:	ldur	x8, [x29, #-40]
  431ed0:	cbnz	x8, 431ee8 <session_new+0x170>
  431ed4:	mov	w8, #0xfffffff4            	// #-12
  431ed8:	stur	w8, [x29, #-4]
  431edc:	mov	w8, #0x1                   	// #1
  431ee0:	stur	w8, [x29, #-48]
  431ee4:	b	432038 <session_new+0x2c0>
  431ee8:	ldur	x0, [x29, #-40]
  431eec:	add	x8, sp, #0x40
  431ef0:	str	x0, [sp, #24]
  431ef4:	mov	x0, x8
  431ef8:	mov	w9, wzr
  431efc:	mov	w1, w9
  431f00:	mov	x10, #0x130                 	// #304
  431f04:	mov	x2, x10
  431f08:	str	x8, [sp, #16]
  431f0c:	str	x10, [sp, #8]
  431f10:	bl	406c98 <memset@plt>
  431f14:	ldur	x8, [x29, #-24]
  431f18:	str	x8, [sp, #64]
  431f1c:	mov	w9, #0xffffffff            	// #-1
  431f20:	str	w9, [sp, #144]
  431f24:	str	w9, [sp, #212]
  431f28:	str	w9, [sp, #220]
  431f2c:	str	w9, [sp, #224]
  431f30:	ldr	x0, [sp, #24]
  431f34:	ldr	x1, [sp, #16]
  431f38:	ldr	x2, [sp, #8]
  431f3c:	bl	406cb8 <memcpy@plt>
  431f40:	ldur	x1, [x29, #-32]
  431f44:	adrp	x0, 440000 <on_brightness_writer_exit+0x15c>
  431f48:	add	x0, x0, #0x474
  431f4c:	mov	x8, #0xffffffffffffffff    	// #-1
  431f50:	mov	x2, x8
  431f54:	bl	4078e8 <path_join_internal@plt>
  431f58:	ldur	x8, [x29, #-40]
  431f5c:	str	x0, [x8, #32]
  431f60:	ldur	x8, [x29, #-40]
  431f64:	ldr	x8, [x8, #32]
  431f68:	cbnz	x8, 431f80 <session_new+0x208>
  431f6c:	mov	w8, #0xfffffff4            	// #-12
  431f70:	stur	w8, [x29, #-4]
  431f74:	mov	w8, #0x1                   	// #1
  431f78:	stur	w8, [x29, #-48]
  431f7c:	b	432038 <session_new+0x2c0>
  431f80:	ldur	x8, [x29, #-40]
  431f84:	ldr	x0, [x8, #32]
  431f88:	bl	4079e8 <basename@plt>
  431f8c:	ldur	x8, [x29, #-40]
  431f90:	str	x0, [x8, #8]
  431f94:	adrp	x0, 45f000 <logind_gperf_lookup.wordlist+0x388>
  431f98:	ldr	x0, [x0, #1400]
  431f9c:	bl	406cc8 <internal_hashmap_new@plt>
  431fa0:	ldur	x8, [x29, #-40]
  431fa4:	str	x0, [x8, #240]
  431fa8:	ldur	x8, [x29, #-40]
  431fac:	ldr	x8, [x8, #240]
  431fb0:	cbnz	x8, 431fc8 <session_new+0x250>
  431fb4:	mov	w8, #0xfffffff4            	// #-12
  431fb8:	stur	w8, [x29, #-4]
  431fbc:	mov	w8, #0x1                   	// #1
  431fc0:	stur	w8, [x29, #-48]
  431fc4:	b	432038 <session_new+0x2c0>
  431fc8:	ldur	x8, [x29, #-24]
  431fcc:	ldr	x0, [x8, #32]
  431fd0:	ldur	x8, [x29, #-40]
  431fd4:	ldr	x1, [x8, #8]
  431fd8:	ldur	x2, [x29, #-40]
  431fdc:	bl	407228 <hashmap_put@plt>
  431fe0:	stur	w0, [x29, #-44]
  431fe4:	ldur	w9, [x29, #-44]
  431fe8:	cmp	w9, #0x0
  431fec:	cset	w9, ge  // ge = tcont
  431ff0:	tbnz	w9, #0, 432008 <session_new+0x290>
  431ff4:	ldur	w8, [x29, #-44]
  431ff8:	stur	w8, [x29, #-4]
  431ffc:	mov	w8, #0x1                   	// #1
  432000:	stur	w8, [x29, #-48]
  432004:	b	432038 <session_new+0x2c0>
  432008:	ldur	x8, [x29, #-40]
  43200c:	str	x8, [sp, #56]
  432010:	mov	x8, xzr
  432014:	stur	x8, [x29, #-40]
  432018:	ldr	x8, [sp, #56]
  43201c:	str	x8, [sp, #48]
  432020:	ldr	x8, [sp, #48]
  432024:	ldur	x9, [x29, #-16]
  432028:	str	x8, [x9]
  43202c:	stur	wzr, [x29, #-4]
  432030:	mov	w10, #0x1                   	// #1
  432034:	stur	w10, [x29, #-48]
  432038:	sub	x0, x29, #0x28
  43203c:	bl	432054 <session_freep>
  432040:	ldur	w0, [x29, #-4]
  432044:	ldr	x28, [sp, #432]
  432048:	ldp	x29, x30, [sp, #416]
  43204c:	add	sp, sp, #0x1c0
  432050:	ret

0000000000432054 <session_freep>:
  432054:	sub	sp, sp, #0x20
  432058:	stp	x29, x30, [sp, #16]
  43205c:	add	x29, sp, #0x10
  432060:	str	x0, [sp, #8]
  432064:	ldr	x8, [sp, #8]
  432068:	ldr	x8, [x8]
  43206c:	cbz	x8, 43207c <session_freep+0x28>
  432070:	ldr	x8, [sp, #8]
  432074:	ldr	x0, [x8]
  432078:	bl	432104 <session_free>
  43207c:	ldp	x29, x30, [sp, #16]
  432080:	add	sp, sp, #0x20
  432084:	ret

0000000000432088 <malloc_multiply>:
  432088:	sub	sp, sp, #0x40
  43208c:	stp	x29, x30, [sp, #48]
  432090:	add	x29, sp, #0x30
  432094:	stur	x0, [x29, #-16]
  432098:	str	x1, [sp, #24]
  43209c:	ldur	x0, [x29, #-16]
  4320a0:	ldr	x1, [sp, #24]
  4320a4:	bl	437c1c <size_multiply_overflow>
  4320a8:	tbnz	w0, #0, 4320b0 <malloc_multiply+0x28>
  4320ac:	b	4320bc <malloc_multiply+0x34>
  4320b0:	mov	x8, xzr
  4320b4:	stur	x8, [x29, #-8]
  4320b8:	b	4320f4 <malloc_multiply+0x6c>
  4320bc:	ldur	x8, [x29, #-16]
  4320c0:	ldr	x9, [sp, #24]
  4320c4:	mul	x8, x8, x9
  4320c8:	str	x8, [sp, #16]
  4320cc:	cbz	x8, 4320dc <malloc_multiply+0x54>
  4320d0:	ldr	x8, [sp, #16]
  4320d4:	str	x8, [sp, #8]
  4320d8:	b	4320e4 <malloc_multiply+0x5c>
  4320dc:	mov	x8, #0x1                   	// #1
  4320e0:	str	x8, [sp, #8]
  4320e4:	ldr	x8, [sp, #8]
  4320e8:	mov	x0, x8
  4320ec:	bl	406dd8 <malloc@plt>
  4320f0:	stur	x0, [x29, #-8]
  4320f4:	ldur	x0, [x29, #-8]
  4320f8:	ldp	x29, x30, [sp, #48]
  4320fc:	add	sp, sp, #0x40
  432100:	ret

0000000000432104 <session_free>:
  432104:	sub	sp, sp, #0x90
  432108:	stp	x29, x30, [sp, #128]
  43210c:	add	x29, sp, #0x80
  432110:	adrp	x8, 441000 <_fini+0xc30>
  432114:	add	x8, x8, #0x6d2
  432118:	adrp	x9, 449000 <_fini+0x8c30>
  43211c:	add	x9, x9, #0x6de
  432120:	add	x9, x9, #0x3
  432124:	adrp	x10, 449000 <_fini+0x8c30>
  432128:	add	x10, x10, #0x731
  43212c:	adrp	x11, 441000 <_fini+0xc30>
  432130:	add	x11, x11, #0x6cc
  432134:	stur	x0, [x29, #-16]
  432138:	ldur	x12, [x29, #-16]
  43213c:	str	x8, [sp, #48]
  432140:	str	x9, [sp, #40]
  432144:	str	x10, [sp, #32]
  432148:	str	x11, [sp, #24]
  43214c:	cbnz	x12, 43215c <session_free+0x58>
  432150:	mov	x8, xzr
  432154:	stur	x8, [x29, #-8]
  432158:	b	4326f0 <session_free+0x5ec>
  43215c:	ldur	x8, [x29, #-16]
  432160:	ldrb	w9, [x8, #209]
  432164:	and	w9, w9, #0x1
  432168:	tbnz	w9, #0, 432170 <session_free+0x6c>
  43216c:	b	432288 <session_free+0x184>
  432170:	ldur	x8, [x29, #-16]
  432174:	ldr	x8, [x8]
  432178:	add	x8, x8, #0x58
  43217c:	stur	x8, [x29, #-32]
  432180:	ldur	x8, [x29, #-16]
  432184:	stur	x8, [x29, #-40]
  432188:	ldur	x8, [x29, #-40]
  43218c:	cmp	x8, #0x0
  432190:	cset	w9, ne  // ne = any
  432194:	mov	w10, #0x1                   	// #1
  432198:	eor	w9, w9, #0x1
  43219c:	eor	w9, w9, w10
  4321a0:	eor	w9, w9, w10
  4321a4:	and	w9, w9, #0x1
  4321a8:	mov	w0, w9
  4321ac:	sxtw	x8, w0
  4321b0:	cbz	x8, 4321d0 <session_free+0xcc>
  4321b4:	mov	w8, wzr
  4321b8:	mov	w0, w8
  4321bc:	ldr	x1, [sp, #24]
  4321c0:	ldr	x2, [sp, #40]
  4321c4:	mov	w3, #0x5e                  	// #94
  4321c8:	ldr	x4, [sp, #32]
  4321cc:	bl	406c68 <log_assert_failed_realm@plt>
  4321d0:	ldur	x8, [x29, #-40]
  4321d4:	ldr	x8, [x8, #288]
  4321d8:	cbz	x8, 4321f0 <session_free+0xec>
  4321dc:	ldur	x8, [x29, #-40]
  4321e0:	ldr	x8, [x8, #296]
  4321e4:	ldur	x9, [x29, #-40]
  4321e8:	ldr	x9, [x9, #288]
  4321ec:	str	x8, [x9, #296]
  4321f0:	ldur	x8, [x29, #-40]
  4321f4:	ldr	x8, [x8, #296]
  4321f8:	cbz	x8, 432214 <session_free+0x110>
  4321fc:	ldur	x8, [x29, #-40]
  432200:	ldr	x8, [x8, #288]
  432204:	ldur	x9, [x29, #-40]
  432208:	ldr	x9, [x9, #296]
  43220c:	str	x8, [x9, #288]
  432210:	b	432274 <session_free+0x170>
  432214:	ldur	x8, [x29, #-32]
  432218:	ldr	x8, [x8]
  43221c:	ldur	x9, [x29, #-40]
  432220:	cmp	x8, x9
  432224:	cset	w10, eq  // eq = none
  432228:	mov	w11, #0x1                   	// #1
  43222c:	eor	w10, w10, #0x1
  432230:	eor	w10, w10, w11
  432234:	eor	w10, w10, w11
  432238:	and	w10, w10, #0x1
  43223c:	mov	w0, w10
  432240:	sxtw	x8, w0
  432244:	cbz	x8, 432264 <session_free+0x160>
  432248:	mov	w8, wzr
  43224c:	mov	w0, w8
  432250:	ldr	x1, [sp, #48]
  432254:	ldr	x2, [sp, #40]
  432258:	mov	w3, #0x5e                  	// #94
  43225c:	ldr	x4, [sp, #32]
  432260:	bl	406c68 <log_assert_failed_realm@plt>
  432264:	ldur	x8, [x29, #-40]
  432268:	ldr	x8, [x8, #288]
  43226c:	ldur	x9, [x29, #-32]
  432270:	str	x8, [x9]
  432274:	ldur	x8, [x29, #-40]
  432278:	mov	x9, xzr
  43227c:	str	x9, [x8, #296]
  432280:	ldur	x8, [x29, #-40]
  432284:	str	x9, [x8, #288]
  432288:	ldur	x8, [x29, #-16]
  43228c:	ldr	x0, [x8, #224]
  432290:	bl	406d28 <sd_event_source_unref@plt>
  432294:	ldur	x8, [x29, #-16]
  432298:	str	x0, [x8, #224]
  43229c:	ldur	x0, [x29, #-16]
  4322a0:	bl	432700 <session_drop_controller>
  4322a4:	ldur	x8, [x29, #-16]
  4322a8:	ldr	x0, [x8, #240]
  4322ac:	bl	4327c4 <hashmap_first>
  4322b0:	stur	x0, [x29, #-24]
  4322b4:	cbz	x0, 4322c4 <session_free+0x1c0>
  4322b8:	ldur	x0, [x29, #-24]
  4322bc:	bl	4307a4 <session_device_free>
  4322c0:	b	4322a4 <session_free+0x1a0>
  4322c4:	ldur	x8, [x29, #-16]
  4322c8:	ldr	x0, [x8, #240]
  4322cc:	bl	4327f8 <hashmap_free>
  4322d0:	ldur	x8, [x29, #-16]
  4322d4:	ldr	x8, [x8, #40]
  4322d8:	cbz	x8, 432428 <session_free+0x324>
  4322dc:	ldur	x8, [x29, #-16]
  4322e0:	ldr	x8, [x8, #40]
  4322e4:	add	x8, x8, #0x80
  4322e8:	stur	x8, [x29, #-48]
  4322ec:	ldur	x8, [x29, #-16]
  4322f0:	stur	x8, [x29, #-56]
  4322f4:	ldur	x8, [x29, #-56]
  4322f8:	cmp	x8, #0x0
  4322fc:	cset	w9, ne  // ne = any
  432300:	mov	w10, #0x1                   	// #1
  432304:	eor	w9, w9, #0x1
  432308:	eor	w9, w9, w10
  43230c:	eor	w9, w9, w10
  432310:	and	w9, w9, #0x1
  432314:	mov	w0, w9
  432318:	sxtw	x8, w0
  43231c:	cbz	x8, 43233c <session_free+0x238>
  432320:	mov	w8, wzr
  432324:	mov	w0, w8
  432328:	ldr	x1, [sp, #24]
  43232c:	ldr	x2, [sp, #40]
  432330:	mov	w3, #0x6a                  	// #106
  432334:	ldr	x4, [sp, #32]
  432338:	bl	406c68 <log_assert_failed_realm@plt>
  43233c:	ldur	x8, [x29, #-56]
  432340:	ldr	x8, [x8, #256]
  432344:	cbz	x8, 43235c <session_free+0x258>
  432348:	ldur	x8, [x29, #-56]
  43234c:	ldr	x8, [x8, #264]
  432350:	ldur	x9, [x29, #-56]
  432354:	ldr	x9, [x9, #256]
  432358:	str	x8, [x9, #264]
  43235c:	ldur	x8, [x29, #-56]
  432360:	ldr	x8, [x8, #264]
  432364:	cbz	x8, 432380 <session_free+0x27c>
  432368:	ldur	x8, [x29, #-56]
  43236c:	ldr	x8, [x8, #256]
  432370:	ldur	x9, [x29, #-56]
  432374:	ldr	x9, [x9, #264]
  432378:	str	x8, [x9, #256]
  43237c:	b	4323e0 <session_free+0x2dc>
  432380:	ldur	x8, [x29, #-48]
  432384:	ldr	x8, [x8]
  432388:	ldur	x9, [x29, #-56]
  43238c:	cmp	x8, x9
  432390:	cset	w10, eq  // eq = none
  432394:	mov	w11, #0x1                   	// #1
  432398:	eor	w10, w10, #0x1
  43239c:	eor	w10, w10, w11
  4323a0:	eor	w10, w10, w11
  4323a4:	and	w10, w10, #0x1
  4323a8:	mov	w0, w10
  4323ac:	sxtw	x8, w0
  4323b0:	cbz	x8, 4323d0 <session_free+0x2cc>
  4323b4:	mov	w8, wzr
  4323b8:	mov	w0, w8
  4323bc:	ldr	x1, [sp, #48]
  4323c0:	ldr	x2, [sp, #40]
  4323c4:	mov	w3, #0x6a                  	// #106
  4323c8:	ldr	x4, [sp, #32]
  4323cc:	bl	406c68 <log_assert_failed_realm@plt>
  4323d0:	ldur	x8, [x29, #-56]
  4323d4:	ldr	x8, [x8, #256]
  4323d8:	ldur	x9, [x29, #-48]
  4323dc:	str	x8, [x9]
  4323e0:	ldur	x8, [x29, #-56]
  4323e4:	mov	x9, xzr
  4323e8:	str	x9, [x8, #264]
  4323ec:	ldur	x8, [x29, #-56]
  4323f0:	str	x9, [x8, #256]
  4323f4:	ldur	x8, [x29, #-16]
  4323f8:	ldr	x8, [x8, #40]
  4323fc:	ldr	x8, [x8, #80]
  432400:	ldur	x9, [x29, #-16]
  432404:	cmp	x8, x9
  432408:	b.ne	43241c <session_free+0x318>  // b.any
  43240c:	ldur	x8, [x29, #-16]
  432410:	ldr	x8, [x8, #40]
  432414:	mov	x9, xzr
  432418:	str	x9, [x8, #80]
  43241c:	ldur	x8, [x29, #-16]
  432420:	ldr	x0, [x8, #40]
  432424:	bl	43cb80 <user_update_last_session_timer>
  432428:	ldur	x8, [x29, #-16]
  43242c:	ldr	x8, [x8, #136]
  432430:	cbz	x8, 4325ac <session_free+0x4a8>
  432434:	ldur	x8, [x29, #-16]
  432438:	ldr	x8, [x8, #136]
  43243c:	ldr	x8, [x8, #32]
  432440:	ldur	x9, [x29, #-16]
  432444:	cmp	x8, x9
  432448:	b.ne	43245c <session_free+0x358>  // b.any
  43244c:	ldur	x8, [x29, #-16]
  432450:	ldr	x8, [x8, #136]
  432454:	mov	x9, xzr
  432458:	str	x9, [x8, #32]
  43245c:	ldur	x8, [x29, #-16]
  432460:	ldr	x8, [x8, #136]
  432464:	ldr	x8, [x8, #40]
  432468:	ldur	x9, [x29, #-16]
  43246c:	cmp	x8, x9
  432470:	b.ne	432484 <session_free+0x380>  // b.any
  432474:	ldur	x8, [x29, #-16]
  432478:	ldr	x8, [x8, #136]
  43247c:	mov	x9, xzr
  432480:	str	x9, [x8, #40]
  432484:	ldur	x8, [x29, #-16]
  432488:	ldr	x0, [x8, #136]
  43248c:	ldur	x1, [x29, #-16]
  432490:	bl	42b48c <seat_evict_position>
  432494:	ldur	x8, [x29, #-16]
  432498:	ldr	x8, [x8, #136]
  43249c:	add	x8, x8, #0x30
  4324a0:	str	x8, [sp, #64]
  4324a4:	ldur	x8, [x29, #-16]
  4324a8:	str	x8, [sp, #56]
  4324ac:	ldr	x8, [sp, #56]
  4324b0:	cmp	x8, #0x0
  4324b4:	cset	w9, ne  // ne = any
  4324b8:	mov	w10, #0x1                   	// #1
  4324bc:	eor	w9, w9, #0x1
  4324c0:	eor	w9, w9, w10
  4324c4:	eor	w9, w9, w10
  4324c8:	and	w9, w9, #0x1
  4324cc:	mov	w0, w9
  4324d0:	sxtw	x8, w0
  4324d4:	cbz	x8, 4324f4 <session_free+0x3f0>
  4324d8:	mov	w8, wzr
  4324dc:	mov	w0, w8
  4324e0:	ldr	x1, [sp, #24]
  4324e4:	ldr	x2, [sp, #40]
  4324e8:	mov	w3, #0x79                  	// #121
  4324ec:	ldr	x4, [sp, #32]
  4324f0:	bl	406c68 <log_assert_failed_realm@plt>
  4324f4:	ldr	x8, [sp, #56]
  4324f8:	ldr	x8, [x8, #272]
  4324fc:	cbz	x8, 432514 <session_free+0x410>
  432500:	ldr	x8, [sp, #56]
  432504:	ldr	x8, [x8, #280]
  432508:	ldr	x9, [sp, #56]
  43250c:	ldr	x9, [x9, #272]
  432510:	str	x8, [x9, #280]
  432514:	ldr	x8, [sp, #56]
  432518:	ldr	x8, [x8, #280]
  43251c:	cbz	x8, 432538 <session_free+0x434>
  432520:	ldr	x8, [sp, #56]
  432524:	ldr	x8, [x8, #272]
  432528:	ldr	x9, [sp, #56]
  43252c:	ldr	x9, [x9, #280]
  432530:	str	x8, [x9, #272]
  432534:	b	432598 <session_free+0x494>
  432538:	ldr	x8, [sp, #64]
  43253c:	ldr	x8, [x8]
  432540:	ldr	x9, [sp, #56]
  432544:	cmp	x8, x9
  432548:	cset	w10, eq  // eq = none
  43254c:	mov	w11, #0x1                   	// #1
  432550:	eor	w10, w10, #0x1
  432554:	eor	w10, w10, w11
  432558:	eor	w10, w10, w11
  43255c:	and	w10, w10, #0x1
  432560:	mov	w0, w10
  432564:	sxtw	x8, w0
  432568:	cbz	x8, 432588 <session_free+0x484>
  43256c:	mov	w8, wzr
  432570:	mov	w0, w8
  432574:	ldr	x1, [sp, #48]
  432578:	ldr	x2, [sp, #40]
  43257c:	mov	w3, #0x79                  	// #121
  432580:	ldr	x4, [sp, #32]
  432584:	bl	406c68 <log_assert_failed_realm@plt>
  432588:	ldr	x8, [sp, #56]
  43258c:	ldr	x8, [x8, #272]
  432590:	ldr	x9, [sp, #64]
  432594:	str	x8, [x9]
  432598:	ldr	x8, [sp, #56]
  43259c:	mov	x9, xzr
  4325a0:	str	x9, [x8, #280]
  4325a4:	ldr	x8, [sp, #56]
  4325a8:	str	x9, [x8, #272]
  4325ac:	ldur	x8, [x29, #-16]
  4325b0:	ldr	x8, [x8, #120]
  4325b4:	cbz	x8, 4325e0 <session_free+0x4dc>
  4325b8:	ldur	x8, [x29, #-16]
  4325bc:	ldr	x8, [x8]
  4325c0:	ldr	x0, [x8, #216]
  4325c4:	ldur	x8, [x29, #-16]
  4325c8:	ldr	x1, [x8, #120]
  4325cc:	bl	432828 <hashmap_remove>
  4325d0:	ldur	x8, [x29, #-16]
  4325d4:	ldr	x8, [x8, #120]
  4325d8:	mov	x0, x8
  4325dc:	bl	406da8 <free@plt>
  4325e0:	ldur	x8, [x29, #-16]
  4325e4:	ldr	w0, [x8, #152]
  4325e8:	bl	432854 <pid_is_valid>
  4325ec:	tbnz	w0, #0, 4325f4 <session_free+0x4f0>
  4325f0:	b	43262c <session_free+0x528>
  4325f4:	ldur	x8, [x29, #-16]
  4325f8:	ldr	x8, [x8]
  4325fc:	ldr	x0, [x8, #40]
  432600:	ldur	x8, [x29, #-16]
  432604:	ldr	w9, [x8, #152]
  432608:	str	x0, [sp, #16]
  43260c:	mov	w0, w9
  432610:	bl	4328a8 <PID_TO_PTR>
  432614:	ldur	x2, [x29, #-16]
  432618:	ldr	x8, [sp, #16]
  43261c:	str	x0, [sp, #8]
  432620:	mov	x0, x8
  432624:	ldr	x1, [sp, #8]
  432628:	bl	432874 <hashmap_remove_value>
  43262c:	ldur	x8, [x29, #-16]
  432630:	ldr	x0, [x8, #128]
  432634:	bl	406da8 <free@plt>
  432638:	ldur	x8, [x29, #-16]
  43263c:	ldr	x0, [x8, #216]
  432640:	bl	407818 <sd_bus_message_unref@plt>
  432644:	ldur	x8, [x29, #-16]
  432648:	ldr	x8, [x8, #72]
  43264c:	mov	x0, x8
  432650:	bl	406da8 <free@plt>
  432654:	ldur	x8, [x29, #-16]
  432658:	ldr	x0, [x8, #64]
  43265c:	bl	406da8 <free@plt>
  432660:	ldur	x8, [x29, #-16]
  432664:	ldr	x0, [x8, #96]
  432668:	bl	406da8 <free@plt>
  43266c:	ldur	x8, [x29, #-16]
  432670:	ldr	x0, [x8, #88]
  432674:	bl	406da8 <free@plt>
  432678:	ldur	x8, [x29, #-16]
  43267c:	ldr	x0, [x8, #104]
  432680:	bl	406da8 <free@plt>
  432684:	ldur	x8, [x29, #-16]
  432688:	ldr	x0, [x8, #112]
  43268c:	bl	406da8 <free@plt>
  432690:	ldur	x8, [x29, #-16]
  432694:	ldr	x8, [x8]
  432698:	ldr	x0, [x8, #32]
  43269c:	ldur	x8, [x29, #-16]
  4326a0:	ldr	x1, [x8, #8]
  4326a4:	bl	432828 <hashmap_remove>
  4326a8:	ldur	x8, [x29, #-16]
  4326ac:	ldr	x8, [x8, #176]
  4326b0:	mov	x0, x8
  4326b4:	bl	406d28 <sd_event_source_unref@plt>
  4326b8:	ldur	x8, [x29, #-16]
  4326bc:	ldr	w9, [x8, #160]
  4326c0:	mov	w0, w9
  4326c4:	bl	406d38 <safe_close@plt>
  4326c8:	ldur	x8, [x29, #-16]
  4326cc:	ldr	x8, [x8, #32]
  4326d0:	mov	x0, x8
  4326d4:	bl	406da8 <free@plt>
  4326d8:	ldur	x8, [x29, #-16]
  4326dc:	ldr	x0, [x8, #168]
  4326e0:	bl	406da8 <free@plt>
  4326e4:	ldur	x0, [x29, #-16]
  4326e8:	bl	4328c0 <mfree>
  4326ec:	stur	x0, [x29, #-8]
  4326f0:	ldur	x0, [x29, #-8]
  4326f4:	ldp	x29, x30, [sp, #128]
  4326f8:	add	sp, sp, #0x90
  4326fc:	ret

0000000000432700 <session_drop_controller>:
  432700:	sub	sp, sp, #0x20
  432704:	stp	x29, x30, [sp, #16]
  432708:	add	x29, sp, #0x10
  43270c:	adrp	x8, 449000 <_fini+0x8c30>
  432710:	add	x8, x8, #0x6de
  432714:	add	x2, x8, #0x3
  432718:	str	x0, [sp, #8]
  43271c:	str	x2, [sp]
  432720:	ldr	x8, [sp, #8]
  432724:	cmp	x8, #0x0
  432728:	cset	w9, ne  // ne = any
  43272c:	mov	w10, #0x1                   	// #1
  432730:	eor	w9, w9, #0x1
  432734:	eor	w9, w9, w10
  432738:	eor	w9, w9, w10
  43273c:	and	w9, w9, #0x1
  432740:	mov	w0, w9
  432744:	sxtw	x8, w0
  432748:	cbz	x8, 432770 <session_drop_controller+0x70>
  43274c:	mov	w8, wzr
  432750:	mov	w0, w8
  432754:	adrp	x1, 442000 <_fini+0x1c30>
  432758:	add	x1, x1, #0xf2
  43275c:	ldr	x2, [sp]
  432760:	mov	w3, #0x567                 	// #1383
  432764:	adrp	x4, 44a000 <_fini+0x9c30>
  432768:	add	x4, x4, #0x1e
  43276c:	bl	406c68 <log_assert_failed_realm@plt>
  432770:	ldr	x8, [sp, #8]
  432774:	ldr	x8, [x8, #232]
  432778:	cbnz	x8, 432780 <session_drop_controller+0x80>
  43277c:	b	4327b8 <session_drop_controller+0xb8>
  432780:	ldr	x8, [sp, #8]
  432784:	ldr	x0, [x8, #248]
  432788:	bl	407c28 <sd_bus_track_unref@plt>
  43278c:	ldr	x8, [sp, #8]
  432790:	str	x0, [x8, #248]
  432794:	ldr	x0, [sp, #8]
  432798:	mov	w9, wzr
  43279c:	and	w1, w9, #0x1
  4327a0:	bl	437aa4 <session_release_controller>
  4327a4:	ldr	x0, [sp, #8]
  4327a8:	bl	432bf8 <session_save>
  4327ac:	ldr	x8, [sp, #8]
  4327b0:	mov	x0, x8
  4327b4:	bl	434db4 <session_restore_vt>
  4327b8:	ldp	x29, x30, [sp, #16]
  4327bc:	add	sp, sp, #0x20
  4327c0:	ret

00000000004327c4 <hashmap_first>:
  4327c4:	sub	sp, sp, #0x20
  4327c8:	stp	x29, x30, [sp, #16]
  4327cc:	add	x29, sp, #0x10
  4327d0:	mov	x8, xzr
  4327d4:	str	x0, [sp, #8]
  4327d8:	ldr	x0, [sp, #8]
  4327dc:	mov	w9, wzr
  4327e0:	and	w1, w9, #0x1
  4327e4:	mov	x2, x8
  4327e8:	bl	406db8 <internal_hashmap_first_key_and_value@plt>
  4327ec:	ldp	x29, x30, [sp, #16]
  4327f0:	add	sp, sp, #0x20
  4327f4:	ret

00000000004327f8 <hashmap_free>:
  4327f8:	sub	sp, sp, #0x20
  4327fc:	stp	x29, x30, [sp, #16]
  432800:	add	x29, sp, #0x10
  432804:	mov	x8, xzr
  432808:	str	x0, [sp, #8]
  43280c:	ldr	x0, [sp, #8]
  432810:	mov	x1, x8
  432814:	mov	x2, x8
  432818:	bl	406dc8 <internal_hashmap_free@plt>
  43281c:	ldp	x29, x30, [sp, #16]
  432820:	add	sp, sp, #0x20
  432824:	ret

0000000000432828 <hashmap_remove>:
  432828:	sub	sp, sp, #0x20
  43282c:	stp	x29, x30, [sp, #16]
  432830:	add	x29, sp, #0x10
  432834:	str	x0, [sp, #8]
  432838:	str	x1, [sp]
  43283c:	ldr	x0, [sp, #8]
  432840:	ldr	x1, [sp]
  432844:	bl	407248 <internal_hashmap_remove@plt>
  432848:	ldp	x29, x30, [sp, #16]
  43284c:	add	sp, sp, #0x20
  432850:	ret

0000000000432854 <pid_is_valid>:
  432854:	sub	sp, sp, #0x10
  432858:	str	w0, [sp, #12]
  43285c:	ldr	w8, [sp, #12]
  432860:	cmp	w8, #0x0
  432864:	cset	w8, gt
  432868:	and	w0, w8, #0x1
  43286c:	add	sp, sp, #0x10
  432870:	ret

0000000000432874 <hashmap_remove_value>:
  432874:	sub	sp, sp, #0x30
  432878:	stp	x29, x30, [sp, #32]
  43287c:	add	x29, sp, #0x20
  432880:	stur	x0, [x29, #-8]
  432884:	str	x1, [sp, #16]
  432888:	str	x2, [sp, #8]
  43288c:	ldur	x0, [x29, #-8]
  432890:	ldr	x1, [sp, #16]
  432894:	ldr	x2, [sp, #8]
  432898:	bl	407c38 <internal_hashmap_remove_value@plt>
  43289c:	ldp	x29, x30, [sp, #32]
  4328a0:	add	sp, sp, #0x30
  4328a4:	ret

00000000004328a8 <PID_TO_PTR>:
  4328a8:	sub	sp, sp, #0x10
  4328ac:	str	w0, [sp, #12]
  4328b0:	ldrsw	x8, [sp, #12]
  4328b4:	mov	x0, x8
  4328b8:	add	sp, sp, #0x10
  4328bc:	ret

00000000004328c0 <mfree>:
  4328c0:	sub	sp, sp, #0x20
  4328c4:	stp	x29, x30, [sp, #16]
  4328c8:	add	x29, sp, #0x10
  4328cc:	mov	x8, xzr
  4328d0:	str	x0, [sp, #8]
  4328d4:	ldr	x0, [sp, #8]
  4328d8:	str	x8, [sp]
  4328dc:	bl	406da8 <free@plt>
  4328e0:	ldr	x0, [sp]
  4328e4:	ldp	x29, x30, [sp, #16]
  4328e8:	add	sp, sp, #0x20
  4328ec:	ret

00000000004328f0 <session_set_user>:
  4328f0:	sub	sp, sp, #0x40
  4328f4:	stp	x29, x30, [sp, #48]
  4328f8:	add	x29, sp, #0x30
  4328fc:	adrp	x8, 449000 <_fini+0x8c30>
  432900:	add	x8, x8, #0x6de
  432904:	add	x8, x8, #0x3
  432908:	adrp	x9, 449000 <_fini+0x8c30>
  43290c:	add	x9, x9, #0x752
  432910:	stur	x0, [x29, #-8]
  432914:	stur	x1, [x29, #-16]
  432918:	str	x8, [sp, #8]
  43291c:	str	x9, [sp]
  432920:	ldur	x8, [x29, #-8]
  432924:	cmp	x8, #0x0
  432928:	cset	w9, ne  // ne = any
  43292c:	mov	w10, #0x1                   	// #1
  432930:	eor	w9, w9, #0x1
  432934:	eor	w9, w9, w10
  432938:	eor	w9, w9, w10
  43293c:	and	w9, w9, #0x1
  432940:	mov	w0, w9
  432944:	sxtw	x8, w0
  432948:	cbz	x8, 43296c <session_set_user+0x7c>
  43294c:	mov	w8, wzr
  432950:	mov	w0, w8
  432954:	adrp	x1, 442000 <_fini+0x1c30>
  432958:	add	x1, x1, #0xf2
  43295c:	ldr	x2, [sp, #8]
  432960:	mov	w3, #0x9d                  	// #157
  432964:	ldr	x4, [sp]
  432968:	bl	406c68 <log_assert_failed_realm@plt>
  43296c:	ldur	x8, [x29, #-8]
  432970:	ldr	x8, [x8, #40]
  432974:	cmp	x8, #0x0
  432978:	cset	w9, ne  // ne = any
  43297c:	mov	w10, #0x1                   	// #1
  432980:	eor	w9, w9, #0x1
  432984:	eor	w9, w9, w10
  432988:	eor	w9, w9, w10
  43298c:	eor	w9, w9, w10
  432990:	and	w9, w9, #0x1
  432994:	mov	w0, w9
  432998:	sxtw	x8, w0
  43299c:	cbz	x8, 4329c0 <session_set_user+0xd0>
  4329a0:	mov	w8, wzr
  4329a4:	mov	w0, w8
  4329a8:	adrp	x1, 449000 <_fini+0x8c30>
  4329ac:	add	x1, x1, #0x77b
  4329b0:	ldr	x2, [sp, #8]
  4329b4:	mov	w3, #0x9e                  	// #158
  4329b8:	ldr	x4, [sp]
  4329bc:	bl	406c68 <log_assert_failed_realm@plt>
  4329c0:	ldur	x8, [x29, #-16]
  4329c4:	ldur	x9, [x29, #-8]
  4329c8:	str	x8, [x9, #40]
  4329cc:	ldur	x8, [x29, #-16]
  4329d0:	add	x8, x8, #0x80
  4329d4:	str	x8, [sp, #24]
  4329d8:	ldur	x8, [x29, #-8]
  4329dc:	str	x8, [sp, #16]
  4329e0:	ldr	x8, [sp, #16]
  4329e4:	cmp	x8, #0x0
  4329e8:	cset	w9, ne  // ne = any
  4329ec:	mov	w10, #0x1                   	// #1
  4329f0:	eor	w9, w9, #0x1
  4329f4:	eor	w9, w9, w10
  4329f8:	eor	w9, w9, w10
  4329fc:	and	w9, w9, #0x1
  432a00:	mov	w0, w9
  432a04:	sxtw	x8, w0
  432a08:	cbz	x8, 432a2c <session_set_user+0x13c>
  432a0c:	mov	w8, wzr
  432a10:	mov	w0, w8
  432a14:	adrp	x1, 441000 <_fini+0xc30>
  432a18:	add	x1, x1, #0x6cc
  432a1c:	ldr	x2, [sp, #8]
  432a20:	mov	w3, #0xa1                  	// #161
  432a24:	ldr	x4, [sp]
  432a28:	bl	406c68 <log_assert_failed_realm@plt>
  432a2c:	ldr	x8, [sp, #24]
  432a30:	ldr	x8, [x8]
  432a34:	ldr	x9, [sp, #16]
  432a38:	str	x8, [x9, #256]
  432a3c:	cbz	x8, 432a50 <session_set_user+0x160>
  432a40:	ldr	x8, [sp, #16]
  432a44:	ldr	x9, [sp, #16]
  432a48:	ldr	x9, [x9, #256]
  432a4c:	str	x8, [x9, #264]
  432a50:	ldr	x8, [sp, #16]
  432a54:	mov	x9, xzr
  432a58:	str	x9, [x8, #264]
  432a5c:	ldr	x8, [sp, #16]
  432a60:	ldr	x9, [sp, #24]
  432a64:	str	x8, [x9]
  432a68:	ldur	x0, [x29, #-16]
  432a6c:	bl	43cb80 <user_update_last_session_timer>
  432a70:	ldp	x29, x30, [sp, #48]
  432a74:	add	sp, sp, #0x40
  432a78:	ret

0000000000432a7c <session_set_leader>:
  432a7c:	sub	sp, sp, #0x50
  432a80:	stp	x29, x30, [sp, #64]
  432a84:	add	x29, sp, #0x40
  432a88:	adrp	x8, 449000 <_fini+0x8c30>
  432a8c:	add	x8, x8, #0x6de
  432a90:	add	x2, x8, #0x3
  432a94:	stur	x0, [x29, #-16]
  432a98:	stur	w1, [x29, #-20]
  432a9c:	str	x2, [sp, #32]
  432aa0:	ldur	x8, [x29, #-16]
  432aa4:	cmp	x8, #0x0
  432aa8:	cset	w9, ne  // ne = any
  432aac:	mov	w10, #0x1                   	// #1
  432ab0:	eor	w9, w9, #0x1
  432ab4:	eor	w9, w9, w10
  432ab8:	eor	w9, w9, w10
  432abc:	and	w9, w9, #0x1
  432ac0:	mov	w0, w9
  432ac4:	sxtw	x8, w0
  432ac8:	cbz	x8, 432af0 <session_set_leader+0x74>
  432acc:	mov	w8, wzr
  432ad0:	mov	w0, w8
  432ad4:	adrp	x1, 442000 <_fini+0x1c30>
  432ad8:	add	x1, x1, #0xf2
  432adc:	ldr	x2, [sp, #32]
  432ae0:	mov	w3, #0xa9                  	// #169
  432ae4:	adrp	x4, 449000 <_fini+0x8c30>
  432ae8:	add	x4, x4, #0x784
  432aec:	bl	406c68 <log_assert_failed_realm@plt>
  432af0:	ldur	w0, [x29, #-20]
  432af4:	bl	432854 <pid_is_valid>
  432af8:	tbnz	w0, #0, 432b08 <session_set_leader+0x8c>
  432afc:	mov	w8, #0xffffffea            	// #-22
  432b00:	stur	w8, [x29, #-4]
  432b04:	b	432be8 <session_set_leader+0x16c>
  432b08:	ldur	x8, [x29, #-16]
  432b0c:	ldr	w9, [x8, #152]
  432b10:	ldur	w10, [x29, #-20]
  432b14:	cmp	w9, w10
  432b18:	b.ne	432b24 <session_set_leader+0xa8>  // b.any
  432b1c:	stur	wzr, [x29, #-4]
  432b20:	b	432be8 <session_set_leader+0x16c>
  432b24:	ldur	x8, [x29, #-16]
  432b28:	ldr	x8, [x8]
  432b2c:	ldr	x0, [x8, #40]
  432b30:	ldur	w9, [x29, #-20]
  432b34:	str	x0, [sp, #24]
  432b38:	mov	w0, w9
  432b3c:	bl	4328a8 <PID_TO_PTR>
  432b40:	ldur	x2, [x29, #-16]
  432b44:	ldr	x8, [sp, #24]
  432b48:	str	x0, [sp, #16]
  432b4c:	mov	x0, x8
  432b50:	ldr	x1, [sp, #16]
  432b54:	bl	407228 <hashmap_put@plt>
  432b58:	stur	w0, [x29, #-24]
  432b5c:	ldur	w9, [x29, #-24]
  432b60:	cmp	w9, #0x0
  432b64:	cset	w9, ge  // ge = tcont
  432b68:	tbnz	w9, #0, 432b78 <session_set_leader+0xfc>
  432b6c:	ldur	w8, [x29, #-24]
  432b70:	stur	w8, [x29, #-4]
  432b74:	b	432be8 <session_set_leader+0x16c>
  432b78:	ldur	x8, [x29, #-16]
  432b7c:	ldr	w0, [x8, #152]
  432b80:	bl	432854 <pid_is_valid>
  432b84:	tbnz	w0, #0, 432b8c <session_set_leader+0x110>
  432b88:	b	432bc4 <session_set_leader+0x148>
  432b8c:	ldur	x8, [x29, #-16]
  432b90:	ldr	x8, [x8]
  432b94:	ldr	x0, [x8, #40]
  432b98:	ldur	x8, [x29, #-16]
  432b9c:	ldr	w9, [x8, #152]
  432ba0:	str	x0, [sp, #8]
  432ba4:	mov	w0, w9
  432ba8:	bl	4328a8 <PID_TO_PTR>
  432bac:	ldur	x2, [x29, #-16]
  432bb0:	ldr	x8, [sp, #8]
  432bb4:	str	x0, [sp]
  432bb8:	mov	x0, x8
  432bbc:	ldr	x1, [sp]
  432bc0:	bl	432874 <hashmap_remove_value>
  432bc4:	ldur	w8, [x29, #-20]
  432bc8:	ldur	x9, [x29, #-16]
  432bcc:	str	w8, [x9, #152]
  432bd0:	ldur	w0, [x29, #-20]
  432bd4:	ldur	x9, [x29, #-16]
  432bd8:	add	x1, x9, #0x9c
  432bdc:	bl	407638 <audit_session_from_pid@plt>
  432be0:	mov	w8, #0x1                   	// #1
  432be4:	stur	w8, [x29, #-4]
  432be8:	ldur	w0, [x29, #-4]
  432bec:	ldp	x29, x30, [sp, #64]
  432bf0:	add	sp, sp, #0x50
  432bf4:	ret

0000000000432bf8 <session_save>:
  432bf8:	sub	sp, sp, #0xe0
  432bfc:	stp	x29, x30, [sp, #208]
  432c00:	add	x29, sp, #0xd0
  432c04:	mov	x8, xzr
  432c08:	adrp	x9, 449000 <_fini+0x8c30>
  432c0c:	add	x9, x9, #0x6de
  432c10:	add	x9, x9, #0x3
  432c14:	stur	x0, [x29, #-16]
  432c18:	stur	x8, [x29, #-24]
  432c1c:	stur	x8, [x29, #-32]
  432c20:	stur	wzr, [x29, #-36]
  432c24:	stur	x9, [x29, #-96]
  432c28:	ldur	x8, [x29, #-16]
  432c2c:	cmp	x8, #0x0
  432c30:	cset	w9, ne  // ne = any
  432c34:	mov	w10, #0x1                   	// #1
  432c38:	eor	w9, w9, #0x1
  432c3c:	eor	w9, w9, w10
  432c40:	eor	w9, w9, w10
  432c44:	and	w9, w9, #0x1
  432c48:	mov	w0, w9
  432c4c:	sxtw	x8, w0
  432c50:	cbz	x8, 432c78 <session_save+0x80>
  432c54:	mov	w8, wzr
  432c58:	mov	w0, w8
  432c5c:	adrp	x1, 442000 <_fini+0x1c30>
  432c60:	add	x1, x1, #0xf2
  432c64:	ldur	x2, [x29, #-96]
  432c68:	mov	w3, #0xcf                  	// #207
  432c6c:	adrp	x4, 449000 <_fini+0x8c30>
  432c70:	add	x4, x4, #0x7ad
  432c74:	bl	406c68 <log_assert_failed_realm@plt>
  432c78:	ldur	x8, [x29, #-16]
  432c7c:	ldr	x8, [x8, #40]
  432c80:	cbnz	x8, 432c98 <session_save+0xa0>
  432c84:	mov	w8, #0xffffff8c            	// #-116
  432c88:	stur	w8, [x29, #-4]
  432c8c:	mov	w8, #0x1                   	// #1
  432c90:	stur	w8, [x29, #-40]
  432c94:	b	433398 <session_save+0x7a0>
  432c98:	ldur	x8, [x29, #-16]
  432c9c:	ldrb	w9, [x8, #209]
  432ca0:	mov	w10, #0x1                   	// #1
  432ca4:	lsr	w9, w9, w10
  432ca8:	and	w9, w9, w10
  432cac:	tbnz	w9, #0, 432cc0 <session_save+0xc8>
  432cb0:	stur	wzr, [x29, #-4]
  432cb4:	mov	w8, #0x1                   	// #1
  432cb8:	stur	w8, [x29, #-40]
  432cbc:	b	433398 <session_save+0x7a0>
  432cc0:	adrp	x0, 440000 <on_brightness_writer_exit+0x15c>
  432cc4:	add	x0, x0, #0x474
  432cc8:	mov	w1, #0x1ed                 	// #493
  432ccc:	mov	w8, wzr
  432cd0:	mov	w2, w8
  432cd4:	mov	w3, w8
  432cd8:	mov	w4, #0x2                   	// #2
  432cdc:	bl	4076b8 <mkdir_safe_label@plt>
  432ce0:	stur	w0, [x29, #-36]
  432ce4:	ldur	w8, [x29, #-36]
  432ce8:	cmp	w8, #0x0
  432cec:	cset	w8, ge  // ge = tcont
  432cf0:	tbnz	w8, #0, 432cf8 <session_save+0x100>
  432cf4:	b	4332e8 <session_save+0x6f0>
  432cf8:	ldur	x8, [x29, #-16]
  432cfc:	ldr	x0, [x8, #32]
  432d00:	sub	x1, x29, #0x20
  432d04:	sub	x2, x29, #0x18
  432d08:	bl	407958 <fopen_temporary@plt>
  432d0c:	stur	w0, [x29, #-36]
  432d10:	ldur	w9, [x29, #-36]
  432d14:	cmp	w9, #0x0
  432d18:	cset	w9, ge  // ge = tcont
  432d1c:	tbnz	w9, #0, 432d24 <session_save+0x12c>
  432d20:	b	4332e8 <session_save+0x6f0>
  432d24:	ldur	x0, [x29, #-32]
  432d28:	bl	407968 <fileno@plt>
  432d2c:	mov	w1, #0x1a4                 	// #420
  432d30:	bl	407978 <fchmod@plt>
  432d34:	ldur	x8, [x29, #-32]
  432d38:	ldur	x9, [x29, #-16]
  432d3c:	ldr	x9, [x9, #40]
  432d40:	ldr	w2, [x9, #8]
  432d44:	ldur	x9, [x29, #-16]
  432d48:	ldr	x9, [x9, #40]
  432d4c:	ldr	x3, [x9, #16]
  432d50:	ldur	x9, [x29, #-16]
  432d54:	mov	x0, x9
  432d58:	str	x8, [sp, #104]
  432d5c:	str	w2, [sp, #100]
  432d60:	str	x3, [sp, #88]
  432d64:	bl	433408 <session_is_active>
  432d68:	and	w4, w0, #0x1
  432d6c:	ldur	x8, [x29, #-16]
  432d70:	ldr	x8, [x8, #40]
  432d74:	ldr	x8, [x8, #80]
  432d78:	ldur	x9, [x29, #-16]
  432d7c:	cmp	x8, x9
  432d80:	cset	w10, eq  // eq = none
  432d84:	and	w5, w10, #0x1
  432d88:	ldur	x0, [x29, #-16]
  432d8c:	str	w4, [sp, #84]
  432d90:	str	w5, [sp, #80]
  432d94:	bl	433524 <session_get_state>
  432d98:	bl	4334c8 <session_state_to_string>
  432d9c:	ldur	x8, [x29, #-16]
  432da0:	ldrb	w10, [x8, #84]
  432da4:	and	w7, w10, #0x1
  432da8:	ldr	x8, [sp, #104]
  432dac:	str	x0, [sp, #72]
  432db0:	mov	x0, x8
  432db4:	adrp	x1, 449000 <_fini+0x8c30>
  432db8:	add	x1, x1, #0x7c9
  432dbc:	ldr	w2, [sp, #100]
  432dc0:	ldr	x3, [sp, #88]
  432dc4:	ldr	w4, [sp, #84]
  432dc8:	ldr	w5, [sp, #80]
  432dcc:	ldr	x6, [sp, #72]
  432dd0:	bl	407988 <fprintf@plt>
  432dd4:	ldur	x8, [x29, #-16]
  432dd8:	ldr	w10, [x8, #20]
  432ddc:	cmp	w10, #0x0
  432de0:	cset	w10, lt  // lt = tstop
  432de4:	tbnz	w10, #0, 432e1c <session_save+0x224>
  432de8:	ldur	x0, [x29, #-32]
  432dec:	ldur	x8, [x29, #-16]
  432df0:	ldr	w9, [x8, #20]
  432df4:	str	x0, [sp, #64]
  432df8:	mov	w0, w9
  432dfc:	bl	433620 <session_type_to_string>
  432e00:	ldr	x8, [sp, #64]
  432e04:	str	x0, [sp, #56]
  432e08:	mov	x0, x8
  432e0c:	adrp	x1, 449000 <_fini+0x8c30>
  432e10:	add	x1, x1, #0x82a
  432e14:	ldr	x2, [sp, #56]
  432e18:	bl	407988 <fprintf@plt>
  432e1c:	ldur	x8, [x29, #-16]
  432e20:	ldr	w9, [x8, #24]
  432e24:	cmp	w9, #0x0
  432e28:	cset	w9, lt  // lt = tstop
  432e2c:	tbnz	w9, #0, 432e64 <session_save+0x26c>
  432e30:	ldur	x0, [x29, #-32]
  432e34:	ldur	x8, [x29, #-16]
  432e38:	ldr	w9, [x8, #24]
  432e3c:	str	x0, [sp, #48]
  432e40:	mov	w0, w9
  432e44:	bl	43367c <session_class_to_string>
  432e48:	ldr	x8, [sp, #48]
  432e4c:	str	x0, [sp, #40]
  432e50:	mov	x0, x8
  432e54:	adrp	x1, 449000 <_fini+0x8c30>
  432e58:	add	x1, x1, #0x833
  432e5c:	ldr	x2, [sp, #40]
  432e60:	bl	407988 <fprintf@plt>
  432e64:	ldur	x8, [x29, #-16]
  432e68:	ldr	x8, [x8, #120]
  432e6c:	cbz	x8, 432e88 <session_save+0x290>
  432e70:	ldur	x0, [x29, #-32]
  432e74:	ldur	x8, [x29, #-16]
  432e78:	ldr	x2, [x8, #120]
  432e7c:	adrp	x1, 449000 <_fini+0x8c30>
  432e80:	add	x1, x1, #0x83d
  432e84:	bl	407988 <fprintf@plt>
  432e88:	ldur	x8, [x29, #-16]
  432e8c:	ldr	x8, [x8, #128]
  432e90:	cbz	x8, 432eac <session_save+0x2b4>
  432e94:	ldur	x0, [x29, #-32]
  432e98:	ldur	x8, [x29, #-16]
  432e9c:	ldr	x2, [x8, #128]
  432ea0:	adrp	x1, 449000 <_fini+0x8c30>
  432ea4:	add	x1, x1, #0x847
  432ea8:	bl	407988 <fprintf@plt>
  432eac:	ldur	x8, [x29, #-16]
  432eb0:	ldr	x8, [x8, #168]
  432eb4:	cbz	x8, 432ed0 <session_save+0x2d8>
  432eb8:	ldur	x0, [x29, #-32]
  432ebc:	ldur	x8, [x29, #-16]
  432ec0:	ldr	x2, [x8, #168]
  432ec4:	adrp	x1, 447000 <_fini+0x6c30>
  432ec8:	add	x1, x1, #0x6ae
  432ecc:	bl	407988 <fprintf@plt>
  432ed0:	ldur	x8, [x29, #-16]
  432ed4:	ldr	x8, [x8, #136]
  432ed8:	cbz	x8, 432ef8 <session_save+0x300>
  432edc:	ldur	x0, [x29, #-32]
  432ee0:	ldur	x8, [x29, #-16]
  432ee4:	ldr	x8, [x8, #136]
  432ee8:	ldr	x2, [x8, #8]
  432eec:	adrp	x1, 449000 <_fini+0x8c30>
  432ef0:	add	x1, x1, #0x855
  432ef4:	bl	407988 <fprintf@plt>
  432ef8:	ldur	x8, [x29, #-16]
  432efc:	ldr	x8, [x8, #72]
  432f00:	cbz	x8, 432f1c <session_save+0x324>
  432f04:	ldur	x0, [x29, #-32]
  432f08:	ldur	x8, [x29, #-16]
  432f0c:	ldr	x2, [x8, #72]
  432f10:	adrp	x1, 449000 <_fini+0x8c30>
  432f14:	add	x1, x1, #0x85e
  432f18:	bl	407988 <fprintf@plt>
  432f1c:	ldur	x8, [x29, #-16]
  432f20:	ldr	w9, [x8, #80]
  432f24:	cmp	w9, #0x0
  432f28:	cset	w9, lt  // lt = tstop
  432f2c:	tbnz	w9, #0, 432f64 <session_save+0x36c>
  432f30:	ldur	x0, [x29, #-32]
  432f34:	ldur	x8, [x29, #-16]
  432f38:	ldr	w9, [x8, #80]
  432f3c:	str	x0, [sp, #32]
  432f40:	mov	w0, w9
  432f44:	bl	4336d8 <tty_validity_to_string>
  432f48:	ldr	x8, [sp, #32]
  432f4c:	str	x0, [sp, #24]
  432f50:	mov	x0, x8
  432f54:	adrp	x1, 449000 <_fini+0x8c30>
  432f58:	add	x1, x1, #0x866
  432f5c:	ldr	x2, [sp, #24]
  432f60:	bl	407988 <fprintf@plt>
  432f64:	ldur	x8, [x29, #-16]
  432f68:	ldr	x8, [x8, #64]
  432f6c:	cbz	x8, 432f88 <session_save+0x390>
  432f70:	ldur	x0, [x29, #-32]
  432f74:	ldur	x8, [x29, #-16]
  432f78:	ldr	x2, [x8, #64]
  432f7c:	adrp	x1, 449000 <_fini+0x8c30>
  432f80:	add	x1, x1, #0x877
  432f84:	bl	407988 <fprintf@plt>
  432f88:	ldur	x8, [x29, #-16]
  432f8c:	ldr	x8, [x8, #96]
  432f90:	cbz	x8, 433000 <session_save+0x408>
  432f94:	ldur	x8, [x29, #-16]
  432f98:	ldr	x0, [x8, #96]
  432f9c:	bl	4076c8 <cescape@plt>
  432fa0:	stur	x0, [x29, #-48]
  432fa4:	ldur	x8, [x29, #-48]
  432fa8:	cbnz	x8, 432fc0 <session_save+0x3c8>
  432fac:	mov	w8, #0xfffffff4            	// #-12
  432fb0:	stur	w8, [x29, #-36]
  432fb4:	mov	w8, #0x4                   	// #4
  432fb8:	stur	w8, [x29, #-40]
  432fbc:	b	432fd8 <session_save+0x3e0>
  432fc0:	ldur	x0, [x29, #-32]
  432fc4:	ldur	x2, [x29, #-48]
  432fc8:	adrp	x1, 449000 <_fini+0x8c30>
  432fcc:	add	x1, x1, #0x883
  432fd0:	bl	407988 <fprintf@plt>
  432fd4:	stur	wzr, [x29, #-40]
  432fd8:	sub	x0, x29, #0x30
  432fdc:	bl	4333b8 <freep>
  432fe0:	ldur	w8, [x29, #-40]
  432fe4:	str	w8, [sp, #20]
  432fe8:	cbz	w8, 433000 <session_save+0x408>
  432fec:	b	432ff0 <session_save+0x3f8>
  432ff0:	ldr	w8, [sp, #20]
  432ff4:	cmp	w8, #0x4
  432ff8:	b.eq	4332e8 <session_save+0x6f0>  // b.none
  432ffc:	b	433398 <session_save+0x7a0>
  433000:	ldur	x8, [x29, #-16]
  433004:	ldr	x8, [x8, #88]
  433008:	cbz	x8, 433078 <session_save+0x480>
  43300c:	ldur	x8, [x29, #-16]
  433010:	ldr	x0, [x8, #88]
  433014:	bl	4076c8 <cescape@plt>
  433018:	stur	x0, [x29, #-56]
  43301c:	ldur	x8, [x29, #-56]
  433020:	cbnz	x8, 433038 <session_save+0x440>
  433024:	mov	w8, #0xfffffff4            	// #-12
  433028:	stur	w8, [x29, #-36]
  43302c:	mov	w8, #0x4                   	// #4
  433030:	stur	w8, [x29, #-40]
  433034:	b	433050 <session_save+0x458>
  433038:	ldur	x0, [x29, #-32]
  43303c:	ldur	x2, [x29, #-56]
  433040:	adrp	x1, 449000 <_fini+0x8c30>
  433044:	add	x1, x1, #0x893
  433048:	bl	407988 <fprintf@plt>
  43304c:	stur	wzr, [x29, #-40]
  433050:	sub	x0, x29, #0x38
  433054:	bl	4333b8 <freep>
  433058:	ldur	w8, [x29, #-40]
  43305c:	str	w8, [sp, #16]
  433060:	cbz	w8, 433078 <session_save+0x480>
  433064:	b	433068 <session_save+0x470>
  433068:	ldr	w8, [sp, #16]
  43306c:	cmp	w8, #0x4
  433070:	b.eq	4332e8 <session_save+0x6f0>  // b.none
  433074:	b	433398 <session_save+0x7a0>
  433078:	ldur	x8, [x29, #-16]
  43307c:	ldr	x8, [x8, #104]
  433080:	cbz	x8, 4330f0 <session_save+0x4f8>
  433084:	ldur	x8, [x29, #-16]
  433088:	ldr	x0, [x8, #104]
  43308c:	bl	4076c8 <cescape@plt>
  433090:	stur	x0, [x29, #-64]
  433094:	ldur	x8, [x29, #-64]
  433098:	cbnz	x8, 4330b0 <session_save+0x4b8>
  43309c:	mov	w8, #0xfffffff4            	// #-12
  4330a0:	stur	w8, [x29, #-36]
  4330a4:	mov	w8, #0x4                   	// #4
  4330a8:	stur	w8, [x29, #-40]
  4330ac:	b	4330c8 <session_save+0x4d0>
  4330b0:	ldur	x0, [x29, #-32]
  4330b4:	ldur	x2, [x29, #-64]
  4330b8:	adrp	x1, 449000 <_fini+0x8c30>
  4330bc:	add	x1, x1, #0x8a3
  4330c0:	bl	407988 <fprintf@plt>
  4330c4:	stur	wzr, [x29, #-40]
  4330c8:	sub	x0, x29, #0x40
  4330cc:	bl	4333b8 <freep>
  4330d0:	ldur	w8, [x29, #-40]
  4330d4:	str	w8, [sp, #12]
  4330d8:	cbz	w8, 4330f0 <session_save+0x4f8>
  4330dc:	b	4330e0 <session_save+0x4e8>
  4330e0:	ldr	w8, [sp, #12]
  4330e4:	cmp	w8, #0x4
  4330e8:	b.eq	4332e8 <session_save+0x6f0>  // b.none
  4330ec:	b	433398 <session_save+0x7a0>
  4330f0:	ldur	x8, [x29, #-16]
  4330f4:	ldr	x8, [x8, #112]
  4330f8:	cbz	x8, 433168 <session_save+0x570>
  4330fc:	ldur	x8, [x29, #-16]
  433100:	ldr	x0, [x8, #112]
  433104:	bl	4076c8 <cescape@plt>
  433108:	stur	x0, [x29, #-72]
  43310c:	ldur	x8, [x29, #-72]
  433110:	cbnz	x8, 433128 <session_save+0x530>
  433114:	mov	w8, #0xfffffff4            	// #-12
  433118:	stur	w8, [x29, #-36]
  43311c:	mov	w8, #0x4                   	// #4
  433120:	stur	w8, [x29, #-40]
  433124:	b	433140 <session_save+0x548>
  433128:	ldur	x0, [x29, #-32]
  43312c:	ldur	x2, [x29, #-72]
  433130:	adrp	x1, 449000 <_fini+0x8c30>
  433134:	add	x1, x1, #0x8af
  433138:	bl	407988 <fprintf@plt>
  43313c:	stur	wzr, [x29, #-40]
  433140:	sub	x0, x29, #0x48
  433144:	bl	4333b8 <freep>
  433148:	ldur	w8, [x29, #-40]
  43314c:	str	w8, [sp, #8]
  433150:	cbz	w8, 433168 <session_save+0x570>
  433154:	b	433158 <session_save+0x560>
  433158:	ldr	w8, [sp, #8]
  43315c:	cmp	w8, #0x4
  433160:	b.eq	4332e8 <session_save+0x6f0>  // b.none
  433164:	b	433398 <session_save+0x7a0>
  433168:	ldur	x8, [x29, #-16]
  43316c:	ldr	x8, [x8, #136]
  433170:	cbz	x8, 4331a0 <session_save+0x5a8>
  433174:	ldur	x8, [x29, #-16]
  433178:	ldr	x0, [x8, #136]
  43317c:	bl	429ff0 <seat_has_vts>
  433180:	tbnz	w0, #0, 433188 <session_save+0x590>
  433184:	b	4331a0 <session_save+0x5a8>
  433188:	ldur	x0, [x29, #-32]
  43318c:	ldur	x8, [x29, #-16]
  433190:	ldr	w2, [x8, #144]
  433194:	adrp	x1, 449000 <_fini+0x8c30>
  433198:	add	x1, x1, #0x8bb
  43319c:	bl	407988 <fprintf@plt>
  4331a0:	ldur	x8, [x29, #-16]
  4331a4:	ldr	w9, [x8, #144]
  4331a8:	cbnz	w9, 4331c4 <session_save+0x5cc>
  4331ac:	ldur	x0, [x29, #-32]
  4331b0:	ldur	x8, [x29, #-16]
  4331b4:	ldr	w2, [x8, #16]
  4331b8:	adrp	x1, 449000 <_fini+0x8c30>
  4331bc:	add	x1, x1, #0x8c4
  4331c0:	bl	407988 <fprintf@plt>
  4331c4:	ldur	x8, [x29, #-16]
  4331c8:	ldr	w0, [x8, #152]
  4331cc:	bl	432854 <pid_is_valid>
  4331d0:	tbnz	w0, #0, 4331d8 <session_save+0x5e0>
  4331d4:	b	4331f0 <session_save+0x5f8>
  4331d8:	ldur	x0, [x29, #-32]
  4331dc:	ldur	x8, [x29, #-16]
  4331e0:	ldr	w2, [x8, #152]
  4331e4:	adrp	x1, 449000 <_fini+0x8c30>
  4331e8:	add	x1, x1, #0x8d1
  4331ec:	bl	407988 <fprintf@plt>
  4331f0:	ldur	x8, [x29, #-16]
  4331f4:	ldr	w0, [x8, #156]
  4331f8:	bl	433734 <audit_session_is_valid>
  4331fc:	tbnz	w0, #0, 433204 <session_save+0x60c>
  433200:	b	43321c <session_save+0x624>
  433204:	ldur	x0, [x29, #-32]
  433208:	ldur	x8, [x29, #-16]
  43320c:	ldr	w2, [x8, #156]
  433210:	adrp	x1, 449000 <_fini+0x8c30>
  433214:	add	x1, x1, #0x8dc
  433218:	bl	407988 <fprintf@plt>
  43321c:	ldur	x8, [x29, #-16]
  433220:	add	x0, x8, #0x30
  433224:	bl	433778 <dual_timestamp_is_set>
  433228:	tbnz	w0, #0, 433230 <session_save+0x638>
  43322c:	b	433250 <session_save+0x658>
  433230:	ldur	x0, [x29, #-32]
  433234:	ldur	x8, [x29, #-16]
  433238:	ldr	x2, [x8, #48]
  43323c:	ldur	x8, [x29, #-16]
  433240:	ldr	x3, [x8, #56]
  433244:	adrp	x1, 449000 <_fini+0x8c30>
  433248:	add	x1, x1, #0x8e6
  43324c:	bl	407988 <fprintf@plt>
  433250:	ldur	x8, [x29, #-16]
  433254:	ldr	x8, [x8, #232]
  433258:	cbz	x8, 433284 <session_save+0x68c>
  43325c:	ldur	x0, [x29, #-32]
  433260:	ldur	x8, [x29, #-16]
  433264:	ldr	x2, [x8, #232]
  433268:	adrp	x1, 449000 <_fini+0x8c30>
  43326c:	add	x1, x1, #0x902
  433270:	bl	407988 <fprintf@plt>
  433274:	ldur	x8, [x29, #-16]
  433278:	ldur	x1, [x29, #-32]
  43327c:	mov	x0, x8
  433280:	bl	4337c4 <session_save_devices>
  433284:	ldur	x0, [x29, #-32]
  433288:	bl	407998 <fflush_and_check@plt>
  43328c:	stur	w0, [x29, #-36]
  433290:	ldur	w8, [x29, #-36]
  433294:	cmp	w8, #0x0
  433298:	cset	w8, ge  // ge = tcont
  43329c:	tbnz	w8, #0, 4332a4 <session_save+0x6ac>
  4332a0:	b	4332e8 <session_save+0x6f0>
  4332a4:	ldur	x0, [x29, #-24]
  4332a8:	ldur	x8, [x29, #-16]
  4332ac:	ldr	x1, [x8, #32]
  4332b0:	bl	4079a8 <rename@plt>
  4332b4:	cmp	w0, #0x0
  4332b8:	cset	w9, ge  // ge = tcont
  4332bc:	tbnz	w9, #0, 4332d8 <session_save+0x6e0>
  4332c0:	bl	406e08 <__errno_location@plt>
  4332c4:	ldr	w8, [x0]
  4332c8:	mov	w9, wzr
  4332cc:	subs	w8, w9, w8
  4332d0:	stur	w8, [x29, #-36]
  4332d4:	b	4332e8 <session_save+0x6f0>
  4332d8:	stur	wzr, [x29, #-4]
  4332dc:	mov	w8, #0x1                   	// #1
  4332e0:	stur	w8, [x29, #-40]
  4332e4:	b	433398 <session_save+0x7a0>
  4332e8:	ldur	x8, [x29, #-16]
  4332ec:	ldr	x0, [x8, #32]
  4332f0:	bl	4076e8 <unlink@plt>
  4332f4:	ldur	x8, [x29, #-24]
  4332f8:	cbz	x8, 433304 <session_save+0x70c>
  4332fc:	ldur	x0, [x29, #-24]
  433300:	bl	4076e8 <unlink@plt>
  433304:	mov	w8, #0x3                   	// #3
  433308:	stur	w8, [x29, #-76]
  43330c:	ldur	w8, [x29, #-36]
  433310:	stur	w8, [x29, #-80]
  433314:	stur	wzr, [x29, #-84]
  433318:	ldur	w0, [x29, #-84]
  43331c:	bl	406c08 <log_get_max_level_realm@plt>
  433320:	ldur	w8, [x29, #-76]
  433324:	and	w8, w8, #0x7
  433328:	cmp	w0, w8
  43332c:	b.lt	43336c <session_save+0x774>  // b.tstop
  433330:	ldur	w8, [x29, #-84]
  433334:	ldur	w9, [x29, #-76]
  433338:	orr	w0, w9, w8, lsl #10
  43333c:	ldur	w1, [x29, #-80]
  433340:	ldur	x10, [x29, #-16]
  433344:	ldr	x6, [x10, #32]
  433348:	ldur	x2, [x29, #-96]
  43334c:	mov	w3, #0x163                 	// #355
  433350:	adrp	x4, 449000 <_fini+0x8c30>
  433354:	add	x4, x4, #0x911
  433358:	adrp	x5, 449000 <_fini+0x8c30>
  43335c:	add	x5, x5, #0x91e
  433360:	bl	406c18 <log_internal_realm@plt>
  433364:	str	w0, [sp, #4]
  433368:	b	433380 <session_save+0x788>
  43336c:	ldur	w0, [x29, #-80]
  433370:	bl	406c28 <abs@plt>
  433374:	mov	w8, wzr
  433378:	subs	w8, w8, w0, uxtb
  43337c:	str	w8, [sp, #4]
  433380:	ldr	w8, [sp, #4]
  433384:	stur	w8, [x29, #-88]
  433388:	ldur	w8, [x29, #-88]
  43338c:	stur	w8, [x29, #-4]
  433390:	mov	w8, #0x1                   	// #1
  433394:	stur	w8, [x29, #-40]
  433398:	sub	x0, x29, #0x20
  43339c:	bl	4333e0 <fclosep>
  4333a0:	sub	x0, x29, #0x18
  4333a4:	bl	4333b8 <freep>
  4333a8:	ldur	w0, [x29, #-4]
  4333ac:	ldp	x29, x30, [sp, #208]
  4333b0:	add	sp, sp, #0xe0
  4333b4:	ret

00000000004333b8 <freep>:
  4333b8:	sub	sp, sp, #0x20
  4333bc:	stp	x29, x30, [sp, #16]
  4333c0:	add	x29, sp, #0x10
  4333c4:	str	x0, [sp, #8]
  4333c8:	ldr	x8, [sp, #8]
  4333cc:	ldr	x0, [x8]
  4333d0:	bl	406da8 <free@plt>
  4333d4:	ldp	x29, x30, [sp, #16]
  4333d8:	add	sp, sp, #0x20
  4333dc:	ret

00000000004333e0 <fclosep>:
  4333e0:	sub	sp, sp, #0x20
  4333e4:	stp	x29, x30, [sp, #16]
  4333e8:	add	x29, sp, #0x10
  4333ec:	str	x0, [sp, #8]
  4333f0:	ldr	x8, [sp, #8]
  4333f4:	ldr	x0, [x8]
  4333f8:	bl	4079b8 <safe_fclose@plt>
  4333fc:	ldp	x29, x30, [sp, #16]
  433400:	add	sp, sp, #0x20
  433404:	ret

0000000000433408 <session_is_active>:
  433408:	sub	sp, sp, #0x30
  43340c:	stp	x29, x30, [sp, #32]
  433410:	add	x29, sp, #0x20
  433414:	adrp	x8, 449000 <_fini+0x8c30>
  433418:	add	x8, x8, #0x6de
  43341c:	add	x2, x8, #0x3
  433420:	str	x0, [sp, #16]
  433424:	str	x2, [sp, #8]
  433428:	ldr	x8, [sp, #16]
  43342c:	cmp	x8, #0x0
  433430:	cset	w9, ne  // ne = any
  433434:	mov	w10, #0x1                   	// #1
  433438:	eor	w9, w9, #0x1
  43343c:	eor	w9, w9, w10
  433440:	eor	w9, w9, w10
  433444:	and	w9, w9, #0x1
  433448:	mov	w0, w9
  43344c:	sxtw	x8, w0
  433450:	cbz	x8, 433478 <session_is_active+0x70>
  433454:	mov	w8, wzr
  433458:	mov	w0, w8
  43345c:	adrp	x1, 442000 <_fini+0x1c30>
  433460:	add	x1, x1, #0xf2
  433464:	ldr	x2, [sp, #8]
  433468:	mov	w3, #0x379                 	// #889
  43346c:	adrp	x4, 449000 <_fini+0x8c30>
  433470:	add	x4, x4, #0xd05
  433474:	bl	406c68 <log_assert_failed_realm@plt>
  433478:	ldr	x8, [sp, #16]
  43347c:	ldr	x8, [x8, #136]
  433480:	cbnz	x8, 433494 <session_is_active+0x8c>
  433484:	mov	w8, #0x1                   	// #1
  433488:	and	w8, w8, #0x1
  43348c:	sturb	w8, [x29, #-1]
  433490:	b	4334b4 <session_is_active+0xac>
  433494:	ldr	x8, [sp, #16]
  433498:	ldr	x8, [x8, #136]
  43349c:	ldr	x8, [x8, #32]
  4334a0:	ldr	x9, [sp, #16]
  4334a4:	cmp	x8, x9
  4334a8:	cset	w10, eq  // eq = none
  4334ac:	and	w10, w10, #0x1
  4334b0:	sturb	w10, [x29, #-1]
  4334b4:	ldurb	w8, [x29, #-1]
  4334b8:	and	w0, w8, #0x1
  4334bc:	ldp	x29, x30, [sp, #32]
  4334c0:	add	sp, sp, #0x30
  4334c4:	ret

00000000004334c8 <session_state_to_string>:
  4334c8:	sub	sp, sp, #0x10
  4334cc:	str	w0, [sp, #4]
  4334d0:	ldr	w8, [sp, #4]
  4334d4:	cmp	w8, #0x0
  4334d8:	cset	w8, lt  // lt = tstop
  4334dc:	tbnz	w8, #0, 4334ec <session_state_to_string+0x24>
  4334e0:	ldr	w8, [sp, #4]
  4334e4:	cmp	w8, #0x4
  4334e8:	b.lt	4334f8 <session_state_to_string+0x30>  // b.tstop
  4334ec:	mov	x8, xzr
  4334f0:	str	x8, [sp, #8]
  4334f4:	b	433518 <session_state_to_string+0x50>
  4334f8:	ldrsw	x8, [sp, #4]
  4334fc:	mov	x9, #0x8                   	// #8
  433500:	mul	x8, x9, x8
  433504:	adrp	x9, 45e000 <session_vtable+0x230>
  433508:	add	x9, x9, #0x778
  43350c:	add	x8, x9, x8
  433510:	ldr	x8, [x8]
  433514:	str	x8, [sp, #8]
  433518:	ldr	x0, [sp, #8]
  43351c:	add	sp, sp, #0x10
  433520:	ret

0000000000433524 <session_get_state>:
  433524:	sub	sp, sp, #0x30
  433528:	stp	x29, x30, [sp, #32]
  43352c:	add	x29, sp, #0x20
  433530:	adrp	x8, 449000 <_fini+0x8c30>
  433534:	add	x8, x8, #0x6de
  433538:	add	x2, x8, #0x3
  43353c:	str	x0, [sp, #16]
  433540:	str	x2, [sp, #8]
  433544:	ldr	x8, [sp, #16]
  433548:	cmp	x8, #0x0
  43354c:	cset	w9, ne  // ne = any
  433550:	mov	w10, #0x1                   	// #1
  433554:	eor	w9, w9, #0x1
  433558:	eor	w9, w9, w10
  43355c:	eor	w9, w9, w10
  433560:	and	w9, w9, #0x1
  433564:	mov	w0, w9
  433568:	sxtw	x8, w0
  43356c:	cbz	x8, 433594 <session_get_state+0x70>
  433570:	mov	w8, wzr
  433574:	mov	w0, w8
  433578:	adrp	x1, 442000 <_fini+0x1c30>
  43357c:	add	x1, x1, #0xf2
  433580:	ldr	x2, [sp, #8]
  433584:	mov	w3, #0x478                 	// #1144
  433588:	adrp	x4, 449000 <_fini+0x8c30>
  43358c:	add	x4, x4, #0xef6
  433590:	bl	406c68 <log_assert_failed_realm@plt>
  433594:	ldr	x8, [sp, #16]
  433598:	ldrb	w9, [x8, #209]
  43359c:	mov	w10, #0x2                   	// #2
  4335a0:	lsr	w9, w9, w10
  4335a4:	and	w9, w9, #0x1
  4335a8:	tbnz	w9, #0, 4335b8 <session_get_state+0x94>
  4335ac:	ldr	x8, [sp, #16]
  4335b0:	ldr	x8, [x8, #224]
  4335b4:	cbz	x8, 4335c4 <session_get_state+0xa0>
  4335b8:	mov	w8, #0x3                   	// #3
  4335bc:	stur	w8, [x29, #-4]
  4335c0:	b	433610 <session_get_state+0xec>
  4335c4:	ldr	x8, [sp, #16]
  4335c8:	ldr	x8, [x8, #128]
  4335cc:	cbnz	x8, 4335e4 <session_get_state+0xc0>
  4335d0:	ldr	x8, [sp, #16]
  4335d4:	ldr	w9, [x8, #160]
  4335d8:	cmp	w9, #0x0
  4335dc:	cset	w9, ge  // ge = tcont
  4335e0:	tbnz	w9, #0, 4335ec <session_get_state+0xc8>
  4335e4:	stur	wzr, [x29, #-4]
  4335e8:	b	433610 <session_get_state+0xec>
  4335ec:	ldr	x0, [sp, #16]
  4335f0:	bl	433408 <session_is_active>
  4335f4:	tbnz	w0, #0, 4335fc <session_get_state+0xd8>
  4335f8:	b	433608 <session_get_state+0xe4>
  4335fc:	mov	w8, #0x2                   	// #2
  433600:	stur	w8, [x29, #-4]
  433604:	b	433610 <session_get_state+0xec>
  433608:	mov	w8, #0x1                   	// #1
  43360c:	stur	w8, [x29, #-4]
  433610:	ldur	w0, [x29, #-4]
  433614:	ldp	x29, x30, [sp, #32]
  433618:	add	sp, sp, #0x30
  43361c:	ret

0000000000433620 <session_type_to_string>:
  433620:	sub	sp, sp, #0x10
  433624:	str	w0, [sp, #4]
  433628:	ldr	w8, [sp, #4]
  43362c:	cmp	w8, #0x0
  433630:	cset	w8, lt  // lt = tstop
  433634:	tbnz	w8, #0, 433644 <session_type_to_string+0x24>
  433638:	ldr	w8, [sp, #4]
  43363c:	cmp	w8, #0x6
  433640:	b.lt	433650 <session_type_to_string+0x30>  // b.tstop
  433644:	mov	x8, xzr
  433648:	str	x8, [sp, #8]
  43364c:	b	433670 <session_type_to_string+0x50>
  433650:	ldrsw	x8, [sp, #4]
  433654:	mov	x9, #0x8                   	// #8
  433658:	mul	x8, x9, x8
  43365c:	adrp	x9, 45e000 <session_vtable+0x230>
  433660:	add	x9, x9, #0x798
  433664:	add	x8, x9, x8
  433668:	ldr	x8, [x8]
  43366c:	str	x8, [sp, #8]
  433670:	ldr	x0, [sp, #8]
  433674:	add	sp, sp, #0x10
  433678:	ret

000000000043367c <session_class_to_string>:
  43367c:	sub	sp, sp, #0x10
  433680:	str	w0, [sp, #4]
  433684:	ldr	w8, [sp, #4]
  433688:	cmp	w8, #0x0
  43368c:	cset	w8, lt  // lt = tstop
  433690:	tbnz	w8, #0, 4336a0 <session_class_to_string+0x24>
  433694:	ldr	w8, [sp, #4]
  433698:	cmp	w8, #0x4
  43369c:	b.lt	4336ac <session_class_to_string+0x30>  // b.tstop
  4336a0:	mov	x8, xzr
  4336a4:	str	x8, [sp, #8]
  4336a8:	b	4336cc <session_class_to_string+0x50>
  4336ac:	ldrsw	x8, [sp, #4]
  4336b0:	mov	x9, #0x8                   	// #8
  4336b4:	mul	x8, x9, x8
  4336b8:	adrp	x9, 45e000 <session_vtable+0x230>
  4336bc:	add	x9, x9, #0x7c8
  4336c0:	add	x8, x9, x8
  4336c4:	ldr	x8, [x8]
  4336c8:	str	x8, [sp, #8]
  4336cc:	ldr	x0, [sp, #8]
  4336d0:	add	sp, sp, #0x10
  4336d4:	ret

00000000004336d8 <tty_validity_to_string>:
  4336d8:	sub	sp, sp, #0x10
  4336dc:	str	w0, [sp, #4]
  4336e0:	ldr	w8, [sp, #4]
  4336e4:	cmp	w8, #0x0
  4336e8:	cset	w8, lt  // lt = tstop
  4336ec:	tbnz	w8, #0, 4336fc <tty_validity_to_string+0x24>
  4336f0:	ldr	w8, [sp, #4]
  4336f4:	cmp	w8, #0x3
  4336f8:	b.lt	433708 <tty_validity_to_string+0x30>  // b.tstop
  4336fc:	mov	x8, xzr
  433700:	str	x8, [sp, #8]
  433704:	b	433728 <tty_validity_to_string+0x50>
  433708:	ldrsw	x8, [sp, #4]
  43370c:	mov	x9, #0x8                   	// #8
  433710:	mul	x8, x9, x8
  433714:	adrp	x9, 45e000 <session_vtable+0x230>
  433718:	add	x9, x9, #0x7f8
  43371c:	add	x8, x9, x8
  433720:	ldr	x8, [x8]
  433724:	str	x8, [sp, #8]
  433728:	ldr	x0, [sp, #8]
  43372c:	add	sp, sp, #0x10
  433730:	ret

0000000000433734 <audit_session_is_valid>:
  433734:	sub	sp, sp, #0x10
  433738:	str	w0, [sp, #12]
  43373c:	ldr	w8, [sp, #12]
  433740:	cmp	w8, #0x0
  433744:	cset	w8, ls  // ls = plast
  433748:	mov	w9, #0x0                   	// #0
  43374c:	str	w9, [sp, #8]
  433750:	tbnz	w8, #0, 433768 <audit_session_is_valid+0x34>
  433754:	ldr	w8, [sp, #12]
  433758:	mov	w9, #0xffffffff            	// #-1
  43375c:	cmp	w8, w9
  433760:	cset	w8, ne  // ne = any
  433764:	str	w8, [sp, #8]
  433768:	ldr	w8, [sp, #8]
  43376c:	and	w0, w8, #0x1
  433770:	add	sp, sp, #0x10
  433774:	ret

0000000000433778 <dual_timestamp_is_set>:
  433778:	sub	sp, sp, #0x20
  43377c:	stp	x29, x30, [sp, #16]
  433780:	add	x29, sp, #0x10
  433784:	str	x0, [sp, #8]
  433788:	ldr	x8, [sp, #8]
  43378c:	ldr	x0, [x8]
  433790:	bl	437c84 <timestamp_is_set>
  433794:	mov	w9, #0x1                   	// #1
  433798:	str	w9, [sp, #4]
  43379c:	tbnz	w0, #0, 4337b0 <dual_timestamp_is_set+0x38>
  4337a0:	ldr	x8, [sp, #8]
  4337a4:	ldr	x0, [x8, #8]
  4337a8:	bl	437c84 <timestamp_is_set>
  4337ac:	str	w0, [sp, #4]
  4337b0:	ldr	w8, [sp, #4]
  4337b4:	and	w0, w8, #0x1
  4337b8:	ldp	x29, x30, [sp, #16]
  4337bc:	add	sp, sp, #0x20
  4337c0:	ret

00000000004337c4 <session_save_devices>:
  4337c4:	sub	sp, sp, #0x60
  4337c8:	stp	x29, x30, [sp, #80]
  4337cc:	add	x29, sp, #0x50
  4337d0:	stur	x0, [x29, #-8]
  4337d4:	stur	x1, [x29, #-16]
  4337d8:	ldur	x8, [x29, #-8]
  4337dc:	ldr	x0, [x8, #240]
  4337e0:	bl	437cc8 <hashmap_isempty>
  4337e4:	tbnz	w0, #0, 433898 <session_save_devices+0xd4>
  4337e8:	ldur	x0, [x29, #-16]
  4337ec:	adrp	x1, 44a000 <_fini+0x9c30>
  4337f0:	add	x1, x1, #0x46
  4337f4:	bl	407988 <fprintf@plt>
  4337f8:	add	x8, sp, #0x10
  4337fc:	mov	w9, #0xfffffffe            	// #-2
  433800:	str	w9, [sp, #16]
  433804:	mov	x10, xzr
  433808:	str	x10, [x8, #8]
  43380c:	ldr	q0, [sp, #16]
  433810:	str	q0, [sp, #32]
  433814:	ldur	x8, [x29, #-8]
  433818:	ldr	x0, [x8, #240]
  43381c:	add	x1, sp, #0x20
  433820:	sub	x2, x29, #0x18
  433824:	mov	x8, xzr
  433828:	mov	x3, x8
  43382c:	bl	437cf8 <hashmap_iterate>
  433830:	tbnz	w0, #0, 433838 <session_save_devices+0x74>
  433834:	b	433888 <session_save_devices+0xc4>
  433838:	ldur	x0, [x29, #-16]
  43383c:	ldur	x8, [x29, #-24]
  433840:	ldr	x8, [x8, #16]
  433844:	str	x0, [sp, #8]
  433848:	mov	x0, x8
  43384c:	bl	407128 <gnu_dev_major@plt>
  433850:	ldur	x8, [x29, #-24]
  433854:	ldr	x8, [x8, #16]
  433858:	str	w0, [sp, #4]
  43385c:	mov	x0, x8
  433860:	bl	407138 <gnu_dev_minor@plt>
  433864:	ldr	x8, [sp, #8]
  433868:	str	w0, [sp]
  43386c:	mov	x0, x8
  433870:	adrp	x1, 44a000 <_fini+0x9c30>
  433874:	add	x1, x1, #0x4f
  433878:	ldr	w2, [sp, #4]
  43387c:	ldr	w3, [sp]
  433880:	bl	407988 <fprintf@plt>
  433884:	b	433814 <session_save_devices+0x50>
  433888:	ldur	x0, [x29, #-16]
  43388c:	adrp	x1, 44a000 <_fini+0x9c30>
  433890:	add	x1, x1, #0x56
  433894:	bl	407988 <fprintf@plt>
  433898:	ldp	x29, x30, [sp, #80]
  43389c:	add	sp, sp, #0x60
  4338a0:	ret

00000000004338a4 <session_load>:
  4338a4:	stp	x29, x30, [sp, #-32]!
  4338a8:	str	x28, [sp, #16]
  4338ac:	mov	x29, sp
  4338b0:	sub	sp, sp, #0x300
  4338b4:	mov	x8, xzr
  4338b8:	adrp	x9, 449000 <_fini+0x8c30>
  4338bc:	add	x9, x9, #0x6de
  4338c0:	add	x9, x9, #0x3
  4338c4:	adrp	x10, 449000 <_fini+0x8c30>
  4338c8:	add	x10, x10, #0xa14
  4338cc:	stur	x0, [x29, #-16]
  4338d0:	stur	x8, [x29, #-24]
  4338d4:	stur	x8, [x29, #-32]
  4338d8:	stur	x8, [x29, #-40]
  4338dc:	stur	x8, [x29, #-48]
  4338e0:	stur	x8, [x29, #-56]
  4338e4:	stur	x8, [x29, #-64]
  4338e8:	stur	x8, [x29, #-72]
  4338ec:	stur	x8, [x29, #-80]
  4338f0:	stur	x8, [x29, #-88]
  4338f4:	stur	x8, [x29, #-96]
  4338f8:	stur	x8, [x29, #-104]
  4338fc:	stur	x8, [x29, #-112]
  433900:	stur	x8, [x29, #-120]
  433904:	stur	x8, [x29, #-128]
  433908:	stur	x8, [x29, #-136]
  43390c:	stur	x8, [x29, #-144]
  433910:	str	x9, [sp, #416]
  433914:	str	x10, [sp, #408]
  433918:	ldur	x8, [x29, #-16]
  43391c:	cmp	x8, #0x0
  433920:	cset	w9, ne  // ne = any
  433924:	mov	w10, #0x1                   	// #1
  433928:	eor	w9, w9, #0x1
  43392c:	eor	w9, w9, w10
  433930:	eor	w9, w9, w10
  433934:	and	w9, w9, #0x1
  433938:	mov	w0, w9
  43393c:	sxtw	x8, w0
  433940:	cbz	x8, 433968 <session_load+0xc4>
  433944:	mov	w8, wzr
  433948:	mov	w0, w8
  43394c:	adrp	x1, 442000 <_fini+0x1c30>
  433950:	add	x1, x1, #0xf2
  433954:	ldr	x2, [sp, #416]
  433958:	mov	w3, #0x1a0                 	// #416
  43395c:	adrp	x4, 449000 <_fini+0x8c30>
  433960:	add	x4, x4, #0x941
  433964:	bl	406c68 <log_assert_failed_realm@plt>
  433968:	ldur	x8, [x29, #-16]
  43396c:	ldr	x1, [x8, #32]
  433970:	ldur	x8, [x29, #-16]
  433974:	add	x5, x8, #0x78
  433978:	ldur	x8, [x29, #-16]
  43397c:	add	x7, x8, #0x80
  433980:	ldur	x8, [x29, #-16]
  433984:	add	x8, x8, #0xa8
  433988:	ldur	x9, [x29, #-16]
  43398c:	add	x9, x9, #0x48
  433990:	ldur	x10, [x29, #-16]
  433994:	add	x10, x10, #0x40
  433998:	ldur	x11, [x29, #-16]
  43399c:	add	x11, x11, #0x60
  4339a0:	ldur	x12, [x29, #-16]
  4339a4:	add	x12, x12, #0x58
  4339a8:	ldur	x13, [x29, #-16]
  4339ac:	add	x13, x13, #0x68
  4339b0:	ldur	x14, [x29, #-16]
  4339b4:	add	x14, x14, #0x70
  4339b8:	mov	x15, xzr
  4339bc:	mov	x0, x15
  4339c0:	adrp	x2, 449000 <_fini+0x8c30>
  4339c4:	add	x2, x2, #0x95d
  4339c8:	sub	x3, x29, #0x18
  4339cc:	adrp	x4, 449000 <_fini+0x8c30>
  4339d0:	add	x4, x4, #0x964
  4339d4:	adrp	x6, 449000 <_fini+0x8c30>
  4339d8:	add	x6, x6, #0x96a
  4339dc:	mov	x16, sp
  4339e0:	adrp	x17, 447000 <_fini+0x6c30>
  4339e4:	add	x17, x17, #0x3a0
  4339e8:	str	x17, [x16]
  4339ec:	mov	x16, sp
  4339f0:	str	x8, [x16, #8]
  4339f4:	mov	x8, sp
  4339f8:	adrp	x16, 449000 <_fini+0x8c30>
  4339fc:	add	x16, x16, #0x974
  433a00:	str	x16, [x8, #16]
  433a04:	mov	x8, sp
  433a08:	sub	x16, x29, #0x20
  433a0c:	str	x16, [x8, #24]
  433a10:	mov	x8, sp
  433a14:	adrp	x16, 448000 <_fini+0x7c30>
  433a18:	add	x16, x16, #0x58f
  433a1c:	str	x16, [x8, #32]
  433a20:	mov	x8, sp
  433a24:	str	x9, [x8, #40]
  433a28:	mov	x8, sp
  433a2c:	adrp	x9, 449000 <_fini+0x8c30>
  433a30:	add	x9, x9, #0x979
  433a34:	str	x9, [x8, #48]
  433a38:	mov	x8, sp
  433a3c:	sub	x9, x29, #0x28
  433a40:	str	x9, [x8, #56]
  433a44:	mov	x8, sp
  433a48:	adrp	x9, 449000 <_fini+0x8c30>
  433a4c:	add	x9, x9, #0x986
  433a50:	str	x9, [x8, #64]
  433a54:	mov	x8, sp
  433a58:	str	x10, [x8, #72]
  433a5c:	mov	x8, sp
  433a60:	adrp	x9, 449000 <_fini+0x8c30>
  433a64:	add	x9, x9, #0x98e
  433a68:	str	x9, [x8, #80]
  433a6c:	mov	x8, sp
  433a70:	str	x11, [x8, #88]
  433a74:	mov	x8, sp
  433a78:	adrp	x9, 449000 <_fini+0x8c30>
  433a7c:	add	x9, x9, #0x99a
  433a80:	str	x9, [x8, #96]
  433a84:	mov	x8, sp
  433a88:	str	x12, [x8, #104]
  433a8c:	mov	x8, sp
  433a90:	adrp	x9, 449000 <_fini+0x8c30>
  433a94:	add	x9, x9, #0x9a6
  433a98:	str	x9, [x8, #112]
  433a9c:	mov	x8, sp
  433aa0:	str	x13, [x8, #120]
  433aa4:	mov	x8, sp
  433aa8:	adrp	x9, 449000 <_fini+0x8c30>
  433aac:	add	x9, x9, #0x9ae
  433ab0:	str	x9, [x8, #128]
  433ab4:	mov	x8, sp
  433ab8:	str	x14, [x8, #136]
  433abc:	mov	x8, sp
  433ac0:	adrp	x9, 449000 <_fini+0x8c30>
  433ac4:	add	x9, x9, #0x9b6
  433ac8:	str	x9, [x8, #144]
  433acc:	mov	x8, sp
  433ad0:	sub	x9, x29, #0x30
  433ad4:	str	x9, [x8, #152]
  433ad8:	mov	x8, sp
  433adc:	adrp	x9, 449000 <_fini+0x8c30>
  433ae0:	add	x9, x9, #0x9bb
  433ae4:	str	x9, [x8, #160]
  433ae8:	mov	x8, sp
  433aec:	sub	x9, x29, #0x38
  433af0:	str	x9, [x8, #168]
  433af4:	mov	x8, sp
  433af8:	adrp	x9, 449000 <_fini+0x8c30>
  433afc:	add	x9, x9, #0x9c1
  433b00:	str	x9, [x8, #176]
  433b04:	mov	x8, sp
  433b08:	sub	x9, x29, #0x40
  433b0c:	str	x9, [x8, #184]
  433b10:	mov	x8, sp
  433b14:	adrp	x9, 449000 <_fini+0x8c30>
  433b18:	add	x9, x9, #0x9ca
  433b1c:	str	x9, [x8, #192]
  433b20:	mov	x8, sp
  433b24:	sub	x9, x29, #0x48
  433b28:	str	x9, [x8, #200]
  433b2c:	mov	x8, sp
  433b30:	adrp	x9, 449000 <_fini+0x8c30>
  433b34:	add	x9, x9, #0x9d1
  433b38:	str	x9, [x8, #208]
  433b3c:	mov	x8, sp
  433b40:	sub	x9, x29, #0x50
  433b44:	str	x9, [x8, #216]
  433b48:	mov	x8, sp
  433b4c:	adrp	x9, 449000 <_fini+0x8c30>
  433b50:	add	x9, x9, #0x9d6
  433b54:	str	x9, [x8, #224]
  433b58:	mov	x8, sp
  433b5c:	sub	x9, x29, #0x58
  433b60:	str	x9, [x8, #232]
  433b64:	mov	x8, sp
  433b68:	adrp	x9, 447000 <_fini+0x6c30>
  433b6c:	add	x9, x9, #0x38b
  433b70:	str	x9, [x8, #240]
  433b74:	mov	x8, sp
  433b78:	sub	x9, x29, #0x60
  433b7c:	str	x9, [x8, #248]
  433b80:	mov	x8, sp
  433b84:	adrp	x9, 449000 <_fini+0x8c30>
  433b88:	add	x9, x9, #0x9dc
  433b8c:	str	x9, [x8, #256]
  433b90:	mov	x8, sp
  433b94:	sub	x9, x29, #0x68
  433b98:	str	x9, [x8, #264]
  433b9c:	mov	x8, sp
  433ba0:	adrp	x9, 449000 <_fini+0x8c30>
  433ba4:	add	x9, x9, #0x9e5
  433ba8:	str	x9, [x8, #272]
  433bac:	mov	x8, sp
  433bb0:	sub	x9, x29, #0x70
  433bb4:	str	x9, [x8, #280]
  433bb8:	mov	x8, sp
  433bbc:	adrp	x9, 449000 <_fini+0x8c30>
  433bc0:	add	x9, x9, #0x9ef
  433bc4:	str	x9, [x8, #288]
  433bc8:	mov	x8, sp
  433bcc:	sub	x9, x29, #0x78
  433bd0:	str	x9, [x8, #296]
  433bd4:	mov	x8, sp
  433bd8:	adrp	x9, 449000 <_fini+0x8c30>
  433bdc:	add	x9, x9, #0x9fa
  433be0:	str	x9, [x8, #304]
  433be4:	mov	x8, sp
  433be8:	sub	x9, x29, #0x80
  433bec:	str	x9, [x8, #312]
  433bf0:	mov	x8, sp
  433bf4:	adrp	x9, 449000 <_fini+0x8c30>
  433bf8:	add	x9, x9, #0xa01
  433bfc:	str	x9, [x8, #320]
  433c00:	mov	x8, sp
  433c04:	sub	x9, x29, #0x88
  433c08:	str	x9, [x8, #328]
  433c0c:	mov	x8, sp
  433c10:	adrp	x9, 449000 <_fini+0x8c30>
  433c14:	add	x9, x9, #0xa09
  433c18:	str	x9, [x8, #336]
  433c1c:	mov	x8, sp
  433c20:	sub	x9, x29, #0x90
  433c24:	str	x9, [x8, #344]
  433c28:	mov	x8, sp
  433c2c:	str	x15, [x8, #352]
  433c30:	bl	4079f8 <parse_env_file_sentinel@plt>
  433c34:	stur	w0, [x29, #-152]
  433c38:	ldur	w18, [x29, #-152]
  433c3c:	cmp	w18, #0x0
  433c40:	cset	w18, ge  // ge = tcont
  433c44:	tbnz	w18, #0, 433cdc <session_load+0x438>
  433c48:	mov	w8, #0x3                   	// #3
  433c4c:	stur	w8, [x29, #-156]
  433c50:	ldur	w8, [x29, #-152]
  433c54:	stur	w8, [x29, #-160]
  433c58:	stur	wzr, [x29, #-164]
  433c5c:	ldur	w0, [x29, #-164]
  433c60:	bl	406c08 <log_get_max_level_realm@plt>
  433c64:	ldur	w8, [x29, #-156]
  433c68:	and	w8, w8, #0x7
  433c6c:	cmp	w0, w8
  433c70:	b.lt	433cac <session_load+0x408>  // b.tstop
  433c74:	ldur	w8, [x29, #-164]
  433c78:	ldur	w9, [x29, #-156]
  433c7c:	orr	w0, w9, w8, lsl #10
  433c80:	ldur	w1, [x29, #-160]
  433c84:	ldur	x10, [x29, #-16]
  433c88:	ldr	x6, [x10, #32]
  433c8c:	ldr	x2, [sp, #416]
  433c90:	mov	w3, #0x1be                 	// #446
  433c94:	ldr	x4, [sp, #408]
  433c98:	adrp	x5, 447000 <_fini+0x6c30>
  433c9c:	add	x5, x5, #0x3b4
  433ca0:	bl	406c18 <log_internal_realm@plt>
  433ca4:	str	w0, [sp, #404]
  433ca8:	b	433cc0 <session_load+0x41c>
  433cac:	ldur	w0, [x29, #-160]
  433cb0:	bl	406c28 <abs@plt>
  433cb4:	mov	w8, wzr
  433cb8:	subs	w8, w8, w0, uxtb
  433cbc:	str	w8, [sp, #404]
  433cc0:	ldr	w8, [sp, #404]
  433cc4:	stur	w8, [x29, #-168]
  433cc8:	ldur	w8, [x29, #-168]
  433ccc:	stur	w8, [x29, #-4]
  433cd0:	mov	w8, #0x1                   	// #1
  433cd4:	stur	w8, [x29, #-172]
  433cd8:	b	4344e4 <session_load+0xc40>
  433cdc:	ldur	x8, [x29, #-16]
  433ce0:	ldr	x8, [x8, #40]
  433ce4:	cbnz	x8, 433f0c <session_load+0x668>
  433ce8:	ldur	x8, [x29, #-96]
  433cec:	cbnz	x8, 433d88 <session_load+0x4e4>
  433cf0:	mov	w8, #0x3                   	// #3
  433cf4:	stur	w8, [x29, #-188]
  433cf8:	mov	w8, #0x2                   	// #2
  433cfc:	movk	w8, #0x4000, lsl #16
  433d00:	stur	w8, [x29, #-192]
  433d04:	stur	wzr, [x29, #-196]
  433d08:	ldur	w0, [x29, #-196]
  433d0c:	bl	406c08 <log_get_max_level_realm@plt>
  433d10:	ldur	w8, [x29, #-188]
  433d14:	and	w8, w8, #0x7
  433d18:	cmp	w0, w8
  433d1c:	b.lt	433d58 <session_load+0x4b4>  // b.tstop
  433d20:	ldur	w8, [x29, #-196]
  433d24:	ldur	w9, [x29, #-188]
  433d28:	orr	w0, w9, w8, lsl #10
  433d2c:	ldur	w1, [x29, #-192]
  433d30:	ldur	x10, [x29, #-16]
  433d34:	ldr	x6, [x10, #8]
  433d38:	ldr	x2, [sp, #416]
  433d3c:	mov	w3, #0x1c7                 	// #455
  433d40:	ldr	x4, [sp, #408]
  433d44:	adrp	x5, 449000 <_fini+0x8c30>
  433d48:	add	x5, x5, #0xa21
  433d4c:	bl	406c18 <log_internal_realm@plt>
  433d50:	str	w0, [sp, #400]
  433d54:	b	433d6c <session_load+0x4c8>
  433d58:	ldur	w0, [x29, #-192]
  433d5c:	bl	406c28 <abs@plt>
  433d60:	mov	w8, wzr
  433d64:	subs	w8, w8, w0, uxtb
  433d68:	str	w8, [sp, #400]
  433d6c:	ldr	w8, [sp, #400]
  433d70:	stur	w8, [x29, #-200]
  433d74:	ldur	w8, [x29, #-200]
  433d78:	stur	w8, [x29, #-4]
  433d7c:	mov	w8, #0x1                   	// #1
  433d80:	stur	w8, [x29, #-172]
  433d84:	b	4344e4 <session_load+0xc40>
  433d88:	ldur	x0, [x29, #-96]
  433d8c:	sub	x1, x29, #0xb0
  433d90:	bl	407a08 <parse_uid@plt>
  433d94:	stur	w0, [x29, #-152]
  433d98:	ldur	w8, [x29, #-152]
  433d9c:	cmp	w8, #0x0
  433da0:	cset	w8, ge  // ge = tcont
  433da4:	tbnz	w8, #0, 433e3c <session_load+0x598>
  433da8:	mov	w8, #0x3                   	// #3
  433dac:	stur	w8, [x29, #-204]
  433db0:	stur	wzr, [x29, #-208]
  433db4:	stur	wzr, [x29, #-212]
  433db8:	ldur	w0, [x29, #-212]
  433dbc:	bl	406c08 <log_get_max_level_realm@plt>
  433dc0:	ldur	w8, [x29, #-204]
  433dc4:	and	w8, w8, #0x7
  433dc8:	cmp	w0, w8
  433dcc:	b.lt	433e0c <session_load+0x568>  // b.tstop
  433dd0:	ldur	w8, [x29, #-212]
  433dd4:	ldur	w9, [x29, #-204]
  433dd8:	orr	w0, w9, w8, lsl #10
  433ddc:	ldur	w1, [x29, #-208]
  433de0:	ldur	x6, [x29, #-96]
  433de4:	ldur	x10, [x29, #-16]
  433de8:	ldr	x7, [x10, #8]
  433dec:	ldr	x2, [sp, #416]
  433df0:	mov	w3, #0x1cb                 	// #459
  433df4:	ldr	x4, [sp, #408]
  433df8:	adrp	x5, 449000 <_fini+0x8c30>
  433dfc:	add	x5, x5, #0xa42
  433e00:	bl	406c18 <log_internal_realm@plt>
  433e04:	str	w0, [sp, #396]
  433e08:	b	433e20 <session_load+0x57c>
  433e0c:	ldur	w0, [x29, #-208]
  433e10:	bl	406c28 <abs@plt>
  433e14:	mov	w8, wzr
  433e18:	subs	w8, w8, w0, uxtb
  433e1c:	str	w8, [sp, #396]
  433e20:	ldr	w8, [sp, #396]
  433e24:	stur	w8, [x29, #-216]
  433e28:	ldur	w8, [x29, #-152]
  433e2c:	stur	w8, [x29, #-4]
  433e30:	mov	w8, #0x1                   	// #1
  433e34:	stur	w8, [x29, #-172]
  433e38:	b	4344e4 <session_load+0xc40>
  433e3c:	ldur	x8, [x29, #-16]
  433e40:	ldr	x8, [x8]
  433e44:	ldr	x0, [x8, #48]
  433e48:	ldur	w9, [x29, #-176]
  433e4c:	mov	w8, w9
  433e50:	add	x8, x8, #0x1
  433e54:	mov	x1, x8
  433e58:	bl	434578 <hashmap_get>
  433e5c:	stur	x0, [x29, #-184]
  433e60:	ldur	x8, [x29, #-184]
  433e64:	cbnz	x8, 433f00 <session_load+0x65c>
  433e68:	mov	w8, #0x3                   	// #3
  433e6c:	stur	w8, [x29, #-220]
  433e70:	mov	w8, #0x2                   	// #2
  433e74:	movk	w8, #0x4000, lsl #16
  433e78:	stur	w8, [x29, #-224]
  433e7c:	stur	wzr, [x29, #-228]
  433e80:	ldur	w0, [x29, #-228]
  433e84:	bl	406c08 <log_get_max_level_realm@plt>
  433e88:	ldur	w8, [x29, #-220]
  433e8c:	and	w8, w8, #0x7
  433e90:	cmp	w0, w8
  433e94:	b.lt	433ed0 <session_load+0x62c>  // b.tstop
  433e98:	ldur	w8, [x29, #-228]
  433e9c:	ldur	w9, [x29, #-220]
  433ea0:	orr	w0, w9, w8, lsl #10
  433ea4:	ldur	w1, [x29, #-224]
  433ea8:	ldur	x10, [x29, #-16]
  433eac:	ldr	x6, [x10, #8]
  433eb0:	ldr	x2, [sp, #416]
  433eb4:	mov	w3, #0x1d3                 	// #467
  433eb8:	ldr	x4, [sp, #408]
  433ebc:	adrp	x5, 449000 <_fini+0x8c30>
  433ec0:	add	x5, x5, #0xa6f
  433ec4:	bl	406c18 <log_internal_realm@plt>
  433ec8:	str	w0, [sp, #392]
  433ecc:	b	433ee4 <session_load+0x640>
  433ed0:	ldur	w0, [x29, #-224]
  433ed4:	bl	406c28 <abs@plt>
  433ed8:	mov	w8, wzr
  433edc:	subs	w8, w8, w0, uxtb
  433ee0:	str	w8, [sp, #392]
  433ee4:	ldr	w8, [sp, #392]
  433ee8:	stur	w8, [x29, #-232]
  433eec:	ldur	w8, [x29, #-232]
  433ef0:	stur	w8, [x29, #-4]
  433ef4:	mov	w8, #0x1                   	// #1
  433ef8:	stur	w8, [x29, #-172]
  433efc:	b	4344e4 <session_load+0xc40>
  433f00:	ldur	x0, [x29, #-16]
  433f04:	ldur	x1, [x29, #-184]
  433f08:	bl	4328f0 <session_set_user>
  433f0c:	ldur	x8, [x29, #-24]
  433f10:	cbz	x8, 433f48 <session_load+0x6a4>
  433f14:	ldur	x0, [x29, #-24]
  433f18:	bl	407c48 <parse_boolean@plt>
  433f1c:	stur	w0, [x29, #-148]
  433f20:	ldur	w8, [x29, #-148]
  433f24:	cmp	w8, #0x0
  433f28:	cset	w8, lt  // lt = tstop
  433f2c:	tbnz	w8, #0, 433f48 <session_load+0x6a4>
  433f30:	ldur	w8, [x29, #-148]
  433f34:	cmp	w8, #0x0
  433f38:	cset	w8, ne  // ne = any
  433f3c:	ldur	x9, [x29, #-16]
  433f40:	and	w8, w8, #0x1
  433f44:	strb	w8, [x9, #84]
  433f48:	ldur	x8, [x29, #-48]
  433f4c:	cbz	x8, 433f60 <session_load+0x6bc>
  433f50:	ldur	x0, [x29, #-48]
  433f54:	ldur	x8, [x29, #-16]
  433f58:	add	x1, x8, #0x90
  433f5c:	bl	4345a4 <safe_atou>
  433f60:	ldur	x8, [x29, #-32]
  433f64:	cbz	x8, 43403c <session_load+0x798>
  433f68:	ldur	x8, [x29, #-16]
  433f6c:	ldr	x8, [x8, #136]
  433f70:	cbnz	x8, 43403c <session_load+0x798>
  433f74:	ldur	x8, [x29, #-16]
  433f78:	ldr	x8, [x8]
  433f7c:	ldr	x0, [x8, #24]
  433f80:	ldur	x1, [x29, #-32]
  433f84:	bl	434578 <hashmap_get>
  433f88:	stur	x0, [x29, #-240]
  433f8c:	ldur	x8, [x29, #-240]
  433f90:	cbz	x8, 433fa4 <session_load+0x700>
  433f94:	ldur	x0, [x29, #-240]
  433f98:	ldur	x1, [x29, #-16]
  433f9c:	bl	42b660 <seat_attach_session>
  433fa0:	stur	w0, [x29, #-152]
  433fa4:	ldur	x8, [x29, #-240]
  433fa8:	cbz	x8, 433fbc <session_load+0x718>
  433fac:	ldur	w8, [x29, #-152]
  433fb0:	cmp	w8, #0x0
  433fb4:	cset	w8, ge  // ge = tcont
  433fb8:	tbnz	w8, #0, 43403c <session_load+0x798>
  433fbc:	mov	w8, #0x3                   	// #3
  433fc0:	stur	w8, [x29, #-244]
  433fc4:	stur	wzr, [x29, #-248]
  433fc8:	stur	wzr, [x29, #-252]
  433fcc:	ldur	w0, [x29, #-252]
  433fd0:	bl	406c08 <log_get_max_level_realm@plt>
  433fd4:	ldur	w8, [x29, #-244]
  433fd8:	and	w8, w8, #0x7
  433fdc:	cmp	w0, w8
  433fe0:	b.lt	434020 <session_load+0x77c>  // b.tstop
  433fe4:	ldur	w8, [x29, #-252]
  433fe8:	ldur	w9, [x29, #-244]
  433fec:	orr	w0, w9, w8, lsl #10
  433ff0:	ldur	w1, [x29, #-248]
  433ff4:	ldur	x10, [x29, #-16]
  433ff8:	ldr	x6, [x10, #8]
  433ffc:	ldur	x7, [x29, #-32]
  434000:	ldr	x2, [sp, #416]
  434004:	mov	w3, #0x1e8                 	// #488
  434008:	ldr	x4, [sp, #408]
  43400c:	adrp	x5, 449000 <_fini+0x8c30>
  434010:	add	x5, x5, #0xa8d
  434014:	bl	406c18 <log_internal_realm@plt>
  434018:	str	w0, [sp, #388]
  43401c:	b	434034 <session_load+0x790>
  434020:	ldur	w0, [x29, #-248]
  434024:	bl	406c28 <abs@plt>
  434028:	mov	w8, wzr
  43402c:	subs	w8, w8, w0, uxtb
  434030:	str	w8, [sp, #388]
  434034:	ldr	w8, [sp, #388]
  434038:	stur	w8, [x29, #-256]
  43403c:	ldur	x8, [x29, #-16]
  434040:	ldr	x8, [x8, #136]
  434044:	cbz	x8, 434058 <session_load+0x7b4>
  434048:	ldur	x8, [x29, #-16]
  43404c:	ldr	x0, [x8, #136]
  434050:	bl	429ff0 <seat_has_vts>
  434054:	tbnz	w0, #0, 434060 <session_load+0x7bc>
  434058:	ldur	x8, [x29, #-16]
  43405c:	str	wzr, [x8, #144]
  434060:	ldur	x8, [x29, #-64]
  434064:	cbz	x8, 434098 <session_load+0x7f4>
  434068:	ldur	x8, [x29, #-16]
  43406c:	ldr	x8, [x8, #136]
  434070:	cbz	x8, 434098 <session_load+0x7f4>
  434074:	ldur	x0, [x29, #-64]
  434078:	add	x1, sp, #0x1fc
  43407c:	bl	4345a4 <safe_atou>
  434080:	ldur	x8, [x29, #-16]
  434084:	ldr	x8, [x8, #136]
  434088:	ldur	x1, [x29, #-16]
  43408c:	ldr	w2, [sp, #508]
  434090:	mov	x0, x8
  434094:	bl	42b5a4 <seat_claim_position>
  434098:	ldur	x8, [x29, #-40]
  43409c:	cbz	x8, 434144 <session_load+0x8a0>
  4340a0:	ldur	x0, [x29, #-40]
  4340a4:	bl	4345d8 <tty_validity_from_string>
  4340a8:	str	w0, [sp, #504]
  4340ac:	ldr	w8, [sp, #504]
  4340b0:	cmp	w8, #0x0
  4340b4:	cset	w8, ge  // ge = tcont
  4340b8:	tbnz	w8, #0, 434138 <session_load+0x894>
  4340bc:	mov	w8, #0x7                   	// #7
  4340c0:	str	w8, [sp, #500]
  4340c4:	str	wzr, [sp, #496]
  4340c8:	str	wzr, [sp, #492]
  4340cc:	ldr	w0, [sp, #492]
  4340d0:	bl	406c08 <log_get_max_level_realm@plt>
  4340d4:	ldr	w8, [sp, #500]
  4340d8:	and	w8, w8, #0x7
  4340dc:	cmp	w0, w8
  4340e0:	b.lt	434118 <session_load+0x874>  // b.tstop
  4340e4:	ldr	w8, [sp, #492]
  4340e8:	ldr	w9, [sp, #500]
  4340ec:	orr	w0, w9, w8, lsl #10
  4340f0:	ldr	w1, [sp, #496]
  4340f4:	ldur	x6, [x29, #-40]
  4340f8:	ldr	x2, [sp, #416]
  4340fc:	mov	w3, #0x1fa                 	// #506
  434100:	ldr	x4, [sp, #408]
  434104:	adrp	x5, 449000 <_fini+0x8c30>
  434108:	add	x5, x5, #0xab1
  43410c:	bl	406c18 <log_internal_realm@plt>
  434110:	str	w0, [sp, #384]
  434114:	b	43412c <session_load+0x888>
  434118:	ldr	w0, [sp, #496]
  43411c:	bl	406c28 <abs@plt>
  434120:	mov	w8, wzr
  434124:	subs	w8, w8, w0, uxtb
  434128:	str	w8, [sp, #384]
  43412c:	ldr	w8, [sp, #384]
  434130:	str	w8, [sp, #488]
  434134:	b	434144 <session_load+0x8a0>
  434138:	ldr	w8, [sp, #504]
  43413c:	ldur	x9, [x29, #-16]
  434140:	str	w8, [x9, #80]
  434144:	ldur	x8, [x29, #-72]
  434148:	cbz	x8, 434284 <session_load+0x9e0>
  43414c:	ldur	x0, [x29, #-72]
  434150:	add	x1, sp, #0x1e4
  434154:	bl	407a18 <parse_pid@plt>
  434158:	stur	w0, [x29, #-152]
  43415c:	ldur	w8, [x29, #-152]
  434160:	cmp	w8, #0x0
  434164:	cset	w8, ge  // ge = tcont
  434168:	tbnz	w8, #0, 4341ec <session_load+0x948>
  43416c:	mov	w8, #0x7                   	// #7
  434170:	str	w8, [sp, #480]
  434174:	ldur	w8, [x29, #-152]
  434178:	str	w8, [sp, #476]
  43417c:	str	wzr, [sp, #472]
  434180:	ldr	w0, [sp, #472]
  434184:	bl	406c08 <log_get_max_level_realm@plt>
  434188:	ldr	w8, [sp, #480]
  43418c:	and	w8, w8, #0x7
  434190:	cmp	w0, w8
  434194:	b.lt	4341cc <session_load+0x928>  // b.tstop
  434198:	ldr	w8, [sp, #472]
  43419c:	ldr	w9, [sp, #480]
  4341a0:	orr	w0, w9, w8, lsl #10
  4341a4:	ldr	w1, [sp, #476]
  4341a8:	ldur	x6, [x29, #-72]
  4341ac:	ldr	x2, [sp, #416]
  4341b0:	mov	w3, #0x204                 	// #516
  4341b4:	ldr	x4, [sp, #408]
  4341b8:	adrp	x5, 449000 <_fini+0x8c30>
  4341bc:	add	x5, x5, #0xad2
  4341c0:	bl	406c18 <log_internal_realm@plt>
  4341c4:	str	w0, [sp, #380]
  4341c8:	b	4341e0 <session_load+0x93c>
  4341cc:	ldr	w0, [sp, #476]
  4341d0:	bl	406c28 <abs@plt>
  4341d4:	mov	w8, wzr
  4341d8:	subs	w8, w8, w0, uxtb
  4341dc:	str	w8, [sp, #380]
  4341e0:	ldr	w8, [sp, #380]
  4341e4:	str	w8, [sp, #468]
  4341e8:	b	434284 <session_load+0x9e0>
  4341ec:	ldur	x0, [x29, #-16]
  4341f0:	ldr	w1, [sp, #484]
  4341f4:	bl	432a7c <session_set_leader>
  4341f8:	stur	w0, [x29, #-152]
  4341fc:	ldur	w8, [x29, #-152]
  434200:	cmp	w8, #0x0
  434204:	cset	w8, ge  // ge = tcont
  434208:	tbnz	w8, #0, 434284 <session_load+0x9e0>
  43420c:	mov	w8, #0x4                   	// #4
  434210:	str	w8, [sp, #464]
  434214:	ldur	w8, [x29, #-152]
  434218:	str	w8, [sp, #460]
  43421c:	str	wzr, [sp, #456]
  434220:	ldr	w0, [sp, #456]
  434224:	bl	406c08 <log_get_max_level_realm@plt>
  434228:	ldr	w8, [sp, #464]
  43422c:	and	w8, w8, #0x7
  434230:	cmp	w0, w8
  434234:	b.lt	434268 <session_load+0x9c4>  // b.tstop
  434238:	ldr	w8, [sp, #456]
  43423c:	ldr	w9, [sp, #464]
  434240:	orr	w0, w9, w8, lsl #10
  434244:	ldr	w1, [sp, #460]
  434248:	ldr	x2, [sp, #416]
  43424c:	mov	w3, #0x208                 	// #520
  434250:	ldr	x4, [sp, #408]
  434254:	adrp	x5, 449000 <_fini+0x8c30>
  434258:	add	x5, x5, #0xafc
  43425c:	bl	406c18 <log_internal_realm@plt>
  434260:	str	w0, [sp, #376]
  434264:	b	43427c <session_load+0x9d8>
  434268:	ldr	w0, [sp, #460]
  43426c:	bl	406c28 <abs@plt>
  434270:	mov	w8, wzr
  434274:	subs	w8, w8, w0, uxtb
  434278:	str	w8, [sp, #376]
  43427c:	ldr	w8, [sp, #376]
  434280:	str	w8, [sp, #452]
  434284:	ldur	x8, [x29, #-80]
  434288:	cbz	x8, 4342b4 <session_load+0xa10>
  43428c:	ldur	x0, [x29, #-80]
  434290:	bl	43460c <session_type_from_string>
  434294:	str	w0, [sp, #448]
  434298:	ldr	w8, [sp, #448]
  43429c:	cmp	w8, #0x0
  4342a0:	cset	w8, lt  // lt = tstop
  4342a4:	tbnz	w8, #0, 4342b4 <session_load+0xa10>
  4342a8:	ldr	w8, [sp, #448]
  4342ac:	ldur	x9, [x29, #-16]
  4342b0:	str	w8, [x9, #20]
  4342b4:	ldur	x8, [x29, #-88]
  4342b8:	cbz	x8, 4342e4 <session_load+0xa40>
  4342bc:	ldur	x0, [x29, #-88]
  4342c0:	bl	434640 <session_class_from_string>
  4342c4:	str	w0, [sp, #444]
  4342c8:	ldr	w8, [sp, #444]
  4342cc:	cmp	w8, #0x0
  4342d0:	cset	w8, lt  // lt = tstop
  4342d4:	tbnz	w8, #0, 4342e4 <session_load+0xa40>
  4342d8:	ldr	w8, [sp, #444]
  4342dc:	ldur	x9, [x29, #-16]
  4342e0:	str	w8, [x9, #24]
  4342e4:	ldur	x8, [x29, #-56]
  4342e8:	cbz	x8, 434314 <session_load+0xa70>
  4342ec:	ldur	x0, [x29, #-56]
  4342f0:	adrp	x1, 449000 <_fini+0x8c30>
  4342f4:	add	x1, x1, #0xb2b
  4342f8:	bl	407158 <strcmp@plt>
  4342fc:	cbnz	w0, 434314 <session_load+0xa70>
  434300:	ldur	x8, [x29, #-16]
  434304:	ldrb	w9, [x8, #209]
  434308:	and	w9, w9, #0xfffffffb
  43430c:	orr	w9, w9, #0x4
  434310:	strb	w9, [x8, #209]
  434314:	ldur	x8, [x29, #-16]
  434318:	ldr	x8, [x8, #168]
  43431c:	cbz	x8, 434334 <session_load+0xa90>
  434320:	ldur	x0, [x29, #-16]
  434324:	bl	434674 <session_create_fifo>
  434328:	str	w0, [sp, #440]
  43432c:	ldr	w0, [sp, #440]
  434330:	bl	406d38 <safe_close@plt>
  434334:	ldur	x8, [x29, #-104]
  434338:	cbz	x8, 43434c <session_load+0xaa8>
  43433c:	ldur	x0, [x29, #-104]
  434340:	ldur	x8, [x29, #-16]
  434344:	add	x1, x8, #0x30
  434348:	bl	407c58 <deserialize_usec@plt>
  43434c:	ldur	x8, [x29, #-112]
  434350:	cbz	x8, 434364 <session_load+0xac0>
  434354:	ldur	x0, [x29, #-112]
  434358:	ldur	x8, [x29, #-16]
  43435c:	add	x1, x8, #0x38
  434360:	bl	407c58 <deserialize_usec@plt>
  434364:	ldur	x8, [x29, #-128]
  434368:	cbz	x8, 4343b0 <session_load+0xb0c>
  43436c:	ldur	x0, [x29, #-128]
  434370:	bl	407c48 <parse_boolean@plt>
  434374:	stur	w0, [x29, #-148]
  434378:	ldur	w8, [x29, #-148]
  43437c:	cmp	w8, #0x0
  434380:	cset	w8, lt  // lt = tstop
  434384:	tbnz	w8, #0, 4343b0 <session_load+0xb0c>
  434388:	ldur	w8, [x29, #-148]
  43438c:	cmp	w8, #0x0
  434390:	cset	w8, ne  // ne = any
  434394:	ldur	x9, [x29, #-16]
  434398:	ldrb	w10, [x9, #209]
  43439c:	and	w8, w8, #0x1
  4343a0:	lsl	w8, w8, #3
  4343a4:	and	w10, w10, #0xfffffff7
  4343a8:	orr	w8, w10, w8
  4343ac:	strb	w8, [x9, #209]
  4343b0:	ldur	x8, [x29, #-144]
  4343b4:	cbz	x8, 434470 <session_load+0xbcc>
  4343b8:	ldur	x0, [x29, #-144]
  4343bc:	bl	407c48 <parse_boolean@plt>
  4343c0:	stur	w0, [x29, #-148]
  4343c4:	ldur	w8, [x29, #-148]
  4343c8:	cmp	w8, #0x0
  4343cc:	cset	w8, ge  // ge = tcont
  4343d0:	tbnz	w8, #0, 434450 <session_load+0xbac>
  4343d4:	mov	w8, #0x4                   	// #4
  4343d8:	str	w8, [sp, #436]
  4343dc:	ldur	w8, [x29, #-148]
  4343e0:	str	w8, [sp, #432]
  4343e4:	str	wzr, [sp, #428]
  4343e8:	ldr	w0, [sp, #428]
  4343ec:	bl	406c08 <log_get_max_level_realm@plt>
  4343f0:	ldr	w8, [sp, #436]
  4343f4:	and	w8, w8, #0x7
  4343f8:	cmp	w0, w8
  4343fc:	b.lt	434430 <session_load+0xb8c>  // b.tstop
  434400:	ldr	w8, [sp, #428]
  434404:	ldr	w9, [sp, #436]
  434408:	orr	w0, w9, w8, lsl #10
  43440c:	ldr	w1, [sp, #432]
  434410:	ldr	x2, [sp, #416]
  434414:	mov	w3, #0x23f                 	// #575
  434418:	ldr	x4, [sp, #408]
  43441c:	adrp	x5, 449000 <_fini+0x8c30>
  434420:	add	x5, x5, #0xb33
  434424:	bl	406c18 <log_internal_realm@plt>
  434428:	str	w0, [sp, #372]
  43442c:	b	434444 <session_load+0xba0>
  434430:	ldr	w0, [sp, #432]
  434434:	bl	406c28 <abs@plt>
  434438:	mov	w8, wzr
  43443c:	subs	w8, w8, w0, uxtb
  434440:	str	w8, [sp, #372]
  434444:	ldr	w8, [sp, #372]
  434448:	str	w8, [sp, #424]
  43444c:	b	434470 <session_load+0xbcc>
  434450:	ldur	w8, [x29, #-148]
  434454:	cmp	w8, #0x0
  434458:	cset	w8, le
  43445c:	tbnz	w8, #0, 434470 <session_load+0xbcc>
  434460:	ldur	x8, [x29, #-16]
  434464:	ldur	x9, [x29, #-16]
  434468:	ldr	x9, [x9, #40]
  43446c:	str	x8, [x9, #80]
  434470:	ldur	x8, [x29, #-120]
  434474:	cbz	x8, 4344d4 <session_load+0xc30>
  434478:	ldur	x8, [x29, #-16]
  43447c:	ldr	x8, [x8]
  434480:	ldr	x0, [x8, #8]
  434484:	ldur	x1, [x29, #-120]
  434488:	mov	x8, xzr
  43448c:	mov	x2, x8
  434490:	bl	407c68 <bus_name_has_owner@plt>
  434494:	cmp	w0, #0x0
  434498:	cset	w9, le
  43449c:	tbnz	w9, #0, 4344cc <session_load+0xc28>
  4344a0:	ldur	x0, [x29, #-16]
  4344a4:	ldur	x1, [x29, #-120]
  4344a8:	mov	w8, wzr
  4344ac:	and	w2, w8, #0x1
  4344b0:	and	w3, w8, #0x1
  4344b4:	bl	4348fc <session_set_controller>
  4344b8:	ldur	x9, [x29, #-16]
  4344bc:	ldur	x1, [x29, #-136]
  4344c0:	mov	x0, x9
  4344c4:	bl	434b98 <session_load_devices>
  4344c8:	b	4344d4 <session_load+0xc30>
  4344cc:	ldur	x0, [x29, #-16]
  4344d0:	bl	434db4 <session_restore_vt>
  4344d4:	ldur	w8, [x29, #-152]
  4344d8:	stur	w8, [x29, #-4]
  4344dc:	mov	w8, #0x1                   	// #1
  4344e0:	stur	w8, [x29, #-172]
  4344e4:	sub	x0, x29, #0x90
  4344e8:	bl	4333b8 <freep>
  4344ec:	sub	x0, x29, #0x88
  4344f0:	bl	4333b8 <freep>
  4344f4:	sub	x0, x29, #0x80
  4344f8:	bl	4333b8 <freep>
  4344fc:	sub	x0, x29, #0x78
  434500:	bl	4333b8 <freep>
  434504:	sub	x0, x29, #0x70
  434508:	bl	4333b8 <freep>
  43450c:	sub	x0, x29, #0x68
  434510:	bl	4333b8 <freep>
  434514:	sub	x0, x29, #0x60
  434518:	bl	4333b8 <freep>
  43451c:	sub	x0, x29, #0x58
  434520:	bl	4333b8 <freep>
  434524:	sub	x0, x29, #0x50
  434528:	bl	4333b8 <freep>
  43452c:	sub	x0, x29, #0x48
  434530:	bl	4333b8 <freep>
  434534:	sub	x0, x29, #0x40
  434538:	bl	4333b8 <freep>
  43453c:	sub	x0, x29, #0x38
  434540:	bl	4333b8 <freep>
  434544:	sub	x0, x29, #0x30
  434548:	bl	4333b8 <freep>
  43454c:	sub	x0, x29, #0x28
  434550:	bl	4333b8 <freep>
  434554:	sub	x0, x29, #0x20
  434558:	bl	4333b8 <freep>
  43455c:	sub	x0, x29, #0x18
  434560:	bl	4333b8 <freep>
  434564:	ldur	w0, [x29, #-4]
  434568:	add	sp, sp, #0x300
  43456c:	ldr	x28, [sp, #16]
  434570:	ldp	x29, x30, [sp], #32
  434574:	ret

0000000000434578 <hashmap_get>:
  434578:	sub	sp, sp, #0x20
  43457c:	stp	x29, x30, [sp, #16]
  434580:	add	x29, sp, #0x10
  434584:	str	x0, [sp, #8]
  434588:	str	x1, [sp]
  43458c:	ldr	x0, [sp, #8]
  434590:	ldr	x1, [sp]
  434594:	bl	4070e8 <internal_hashmap_get@plt>
  434598:	ldp	x29, x30, [sp, #16]
  43459c:	add	sp, sp, #0x20
  4345a0:	ret

00000000004345a4 <safe_atou>:
  4345a4:	sub	sp, sp, #0x20
  4345a8:	stp	x29, x30, [sp, #16]
  4345ac:	add	x29, sp, #0x10
  4345b0:	mov	w8, wzr
  4345b4:	str	x0, [sp, #8]
  4345b8:	str	x1, [sp]
  4345bc:	ldr	x0, [sp, #8]
  4345c0:	ldr	x2, [sp]
  4345c4:	mov	w1, w8
  4345c8:	bl	407198 <safe_atou_full@plt>
  4345cc:	ldp	x29, x30, [sp, #16]
  4345d0:	add	sp, sp, #0x20
  4345d4:	ret

00000000004345d8 <tty_validity_from_string>:
  4345d8:	sub	sp, sp, #0x20
  4345dc:	stp	x29, x30, [sp, #16]
  4345e0:	add	x29, sp, #0x10
  4345e4:	adrp	x8, 45e000 <session_vtable+0x230>
  4345e8:	add	x8, x8, #0x7f8
  4345ec:	mov	x1, #0x3                   	// #3
  4345f0:	str	x0, [sp, #8]
  4345f4:	ldr	x2, [sp, #8]
  4345f8:	mov	x0, x8
  4345fc:	bl	4071f8 <string_table_lookup@plt>
  434600:	ldp	x29, x30, [sp, #16]
  434604:	add	sp, sp, #0x20
  434608:	ret

000000000043460c <session_type_from_string>:
  43460c:	sub	sp, sp, #0x20
  434610:	stp	x29, x30, [sp, #16]
  434614:	add	x29, sp, #0x10
  434618:	adrp	x8, 45e000 <session_vtable+0x230>
  43461c:	add	x8, x8, #0x798
  434620:	mov	x1, #0x6                   	// #6
  434624:	str	x0, [sp, #8]
  434628:	ldr	x2, [sp, #8]
  43462c:	mov	x0, x8
  434630:	bl	4071f8 <string_table_lookup@plt>
  434634:	ldp	x29, x30, [sp, #16]
  434638:	add	sp, sp, #0x20
  43463c:	ret

0000000000434640 <session_class_from_string>:
  434640:	sub	sp, sp, #0x20
  434644:	stp	x29, x30, [sp, #16]
  434648:	add	x29, sp, #0x10
  43464c:	adrp	x8, 45e000 <session_vtable+0x230>
  434650:	add	x8, x8, #0x7c8
  434654:	mov	x1, #0x4                   	// #4
  434658:	str	x0, [sp, #8]
  43465c:	ldr	x2, [sp, #8]
  434660:	mov	x0, x8
  434664:	bl	4071f8 <string_table_lookup@plt>
  434668:	ldp	x29, x30, [sp, #16]
  43466c:	add	sp, sp, #0x20
  434670:	ret

0000000000434674 <session_create_fifo>:
  434674:	sub	sp, sp, #0x30
  434678:	stp	x29, x30, [sp, #32]
  43467c:	add	x29, sp, #0x20
  434680:	adrp	x8, 449000 <_fini+0x8c30>
  434684:	add	x8, x8, #0x6de
  434688:	add	x2, x8, #0x3
  43468c:	str	x0, [sp, #16]
  434690:	str	x2, [sp]
  434694:	ldr	x8, [sp, #16]
  434698:	cmp	x8, #0x0
  43469c:	cset	w9, ne  // ne = any
  4346a0:	mov	w10, #0x1                   	// #1
  4346a4:	eor	w9, w9, #0x1
  4346a8:	eor	w9, w9, w10
  4346ac:	eor	w9, w9, w10
  4346b0:	and	w9, w9, #0x1
  4346b4:	mov	w0, w9
  4346b8:	sxtw	x8, w0
  4346bc:	cbz	x8, 4346e4 <session_create_fifo+0x70>
  4346c0:	mov	w8, wzr
  4346c4:	mov	w0, w8
  4346c8:	adrp	x1, 442000 <_fini+0x1c30>
  4346cc:	add	x1, x1, #0xf2
  4346d0:	ldr	x2, [sp]
  4346d4:	mov	w3, #0x40f                 	// #1039
  4346d8:	adrp	x4, 449000 <_fini+0x8c30>
  4346dc:	add	x4, x4, #0xde2
  4346e0:	bl	406c68 <log_assert_failed_realm@plt>
  4346e4:	ldr	x8, [sp, #16]
  4346e8:	ldr	x8, [x8, #168]
  4346ec:	cbnz	x8, 4347b8 <session_create_fifo+0x144>
  4346f0:	adrp	x0, 440000 <on_brightness_writer_exit+0x15c>
  4346f4:	add	x0, x0, #0x474
  4346f8:	mov	w1, #0x1ed                 	// #493
  4346fc:	mov	w8, wzr
  434700:	mov	w2, w8
  434704:	mov	w3, w8
  434708:	mov	w4, #0x2                   	// #2
  43470c:	bl	4076b8 <mkdir_safe_label@plt>
  434710:	str	w0, [sp, #12]
  434714:	ldr	w8, [sp, #12]
  434718:	cmp	w8, #0x0
  43471c:	cset	w8, ge  // ge = tcont
  434720:	tbnz	w8, #0, 434730 <session_create_fifo+0xbc>
  434724:	ldr	w8, [sp, #12]
  434728:	stur	w8, [x29, #-4]
  43472c:	b	4348ec <session_create_fifo+0x278>
  434730:	ldr	x8, [sp, #16]
  434734:	ldr	x1, [x8, #8]
  434738:	adrp	x0, 449000 <_fini+0x8c30>
  43473c:	add	x0, x0, #0xe05
  434740:	adrp	x2, 447000 <_fini+0x6c30>
  434744:	add	x2, x2, #0x46b
  434748:	mov	x8, xzr
  43474c:	mov	x3, x8
  434750:	bl	407a48 <strjoin_real@plt>
  434754:	ldr	x8, [sp, #16]
  434758:	str	x0, [x8, #168]
  43475c:	ldr	x8, [sp, #16]
  434760:	ldr	x8, [x8, #168]
  434764:	cbnz	x8, 434774 <session_create_fifo+0x100>
  434768:	mov	w8, #0xfffffff4            	// #-12
  43476c:	stur	w8, [x29, #-4]
  434770:	b	4348ec <session_create_fifo+0x278>
  434774:	ldr	x8, [sp, #16]
  434778:	ldr	x0, [x8, #168]
  43477c:	mov	w1, #0x180                 	// #384
  434780:	bl	407a58 <mkfifo@plt>
  434784:	cmp	w0, #0x0
  434788:	cset	w9, ge  // ge = tcont
  43478c:	tbnz	w9, #0, 4347b8 <session_create_fifo+0x144>
  434790:	bl	406e08 <__errno_location@plt>
  434794:	ldr	w8, [x0]
  434798:	cmp	w8, #0x11
  43479c:	b.eq	4347b8 <session_create_fifo+0x144>  // b.none
  4347a0:	bl	406e08 <__errno_location@plt>
  4347a4:	ldr	w8, [x0]
  4347a8:	mov	w9, wzr
  4347ac:	subs	w8, w9, w8
  4347b0:	stur	w8, [x29, #-4]
  4347b4:	b	4348ec <session_create_fifo+0x278>
  4347b8:	ldr	x8, [sp, #16]
  4347bc:	ldr	w9, [x8, #160]
  4347c0:	cmp	w9, #0x0
  4347c4:	cset	w9, ge  // ge = tcont
  4347c8:	tbnz	w9, #0, 434814 <session_create_fifo+0x1a0>
  4347cc:	ldr	x8, [sp, #16]
  4347d0:	ldr	x0, [x8, #168]
  4347d4:	mov	w1, #0x800                 	// #2048
  4347d8:	movk	w1, #0x8, lsl #16
  4347dc:	bl	406df8 <open64@plt>
  4347e0:	ldr	x8, [sp, #16]
  4347e4:	str	w0, [x8, #160]
  4347e8:	ldr	x8, [sp, #16]
  4347ec:	ldr	w9, [x8, #160]
  4347f0:	cmp	w9, #0x0
  4347f4:	cset	w9, ge  // ge = tcont
  4347f8:	tbnz	w9, #0, 434814 <session_create_fifo+0x1a0>
  4347fc:	bl	406e08 <__errno_location@plt>
  434800:	ldr	w8, [x0]
  434804:	mov	w9, wzr
  434808:	subs	w8, w9, w8
  43480c:	stur	w8, [x29, #-4]
  434810:	b	4348ec <session_create_fifo+0x278>
  434814:	ldr	x8, [sp, #16]
  434818:	ldr	x8, [x8, #176]
  43481c:	cbnz	x8, 4348a4 <session_create_fifo+0x230>
  434820:	ldr	x8, [sp, #16]
  434824:	ldr	x8, [x8]
  434828:	ldr	x0, [x8]
  43482c:	ldr	x8, [sp, #16]
  434830:	add	x1, x8, #0xb0
  434834:	ldr	x8, [sp, #16]
  434838:	ldr	w2, [x8, #160]
  43483c:	ldr	x5, [sp, #16]
  434840:	mov	w9, wzr
  434844:	mov	w3, w9
  434848:	adrp	x4, 436000 <session_stop_scope+0x408>
  43484c:	add	x4, x4, #0xe9c
  434850:	bl	406e18 <sd_event_add_io@plt>
  434854:	str	w0, [sp, #12]
  434858:	ldr	w9, [sp, #12]
  43485c:	cmp	w9, #0x0
  434860:	cset	w9, ge  // ge = tcont
  434864:	tbnz	w9, #0, 434874 <session_create_fifo+0x200>
  434868:	ldr	w8, [sp, #12]
  43486c:	stur	w8, [x29, #-4]
  434870:	b	4348ec <session_create_fifo+0x278>
  434874:	ldr	x8, [sp, #16]
  434878:	ldr	x0, [x8, #176]
  43487c:	mov	x1, #0xfffffffffffffff6    	// #-10
  434880:	bl	407038 <sd_event_source_set_priority@plt>
  434884:	str	w0, [sp, #12]
  434888:	ldr	w9, [sp, #12]
  43488c:	cmp	w9, #0x0
  434890:	cset	w9, ge  // ge = tcont
  434894:	tbnz	w9, #0, 4348a4 <session_create_fifo+0x230>
  434898:	ldr	w8, [sp, #12]
  43489c:	stur	w8, [x29, #-4]
  4348a0:	b	4348ec <session_create_fifo+0x278>
  4348a4:	ldr	x8, [sp, #16]
  4348a8:	ldr	x0, [x8, #168]
  4348ac:	mov	w1, #0x801                 	// #2049
  4348b0:	movk	w1, #0x8, lsl #16
  4348b4:	bl	406df8 <open64@plt>
  4348b8:	str	w0, [sp, #12]
  4348bc:	ldr	w9, [sp, #12]
  4348c0:	cmp	w9, #0x0
  4348c4:	cset	w9, ge  // ge = tcont
  4348c8:	tbnz	w9, #0, 4348e4 <session_create_fifo+0x270>
  4348cc:	bl	406e08 <__errno_location@plt>
  4348d0:	ldr	w8, [x0]
  4348d4:	mov	w9, wzr
  4348d8:	subs	w8, w9, w8
  4348dc:	stur	w8, [x29, #-4]
  4348e0:	b	4348ec <session_create_fifo+0x278>
  4348e4:	ldr	w8, [sp, #12]
  4348e8:	stur	w8, [x29, #-4]
  4348ec:	ldur	w0, [x29, #-4]
  4348f0:	ldp	x29, x30, [sp, #32]
  4348f4:	add	sp, sp, #0x30
  4348f8:	ret

00000000004348fc <session_set_controller>:
  4348fc:	sub	sp, sp, #0x60
  434900:	stp	x29, x30, [sp, #80]
  434904:	add	x29, sp, #0x50
  434908:	mov	x8, xzr
  43490c:	mov	w9, #0x1                   	// #1
  434910:	adrp	x10, 449000 <_fini+0x8c30>
  434914:	add	x10, x10, #0x6de
  434918:	add	x10, x10, #0x3
  43491c:	stur	x0, [x29, #-16]
  434920:	stur	x1, [x29, #-24]
  434924:	and	w11, w2, w9
  434928:	sturb	w11, [x29, #-25]
  43492c:	and	w9, w3, w9
  434930:	sturb	w9, [x29, #-26]
  434934:	str	x8, [sp, #40]
  434938:	str	x10, [sp, #8]
  43493c:	ldur	x8, [x29, #-16]
  434940:	cmp	x8, #0x0
  434944:	cset	w9, ne  // ne = any
  434948:	mov	w10, #0x1                   	// #1
  43494c:	eor	w9, w9, #0x1
  434950:	eor	w9, w9, w10
  434954:	eor	w9, w9, w10
  434958:	and	w9, w9, #0x1
  43495c:	mov	w0, w9
  434960:	sxtw	x8, w0
  434964:	cbz	x8, 43498c <session_set_controller+0x90>
  434968:	mov	w8, wzr
  43496c:	mov	w0, w8
  434970:	adrp	x1, 442000 <_fini+0x1c30>
  434974:	add	x1, x1, #0xf2
  434978:	ldr	x2, [sp, #8]
  43497c:	mov	w3, #0x539                 	// #1337
  434980:	adrp	x4, 449000 <_fini+0x8c30>
  434984:	add	x4, x4, #0xfd5
  434988:	bl	406c68 <log_assert_failed_realm@plt>
  43498c:	ldur	x8, [x29, #-24]
  434990:	cmp	x8, #0x0
  434994:	cset	w9, ne  // ne = any
  434998:	mov	w10, #0x1                   	// #1
  43499c:	eor	w9, w9, #0x1
  4349a0:	eor	w9, w9, w10
  4349a4:	eor	w9, w9, w10
  4349a8:	and	w9, w9, #0x1
  4349ac:	mov	w0, w9
  4349b0:	sxtw	x8, w0
  4349b4:	cbz	x8, 4349dc <session_set_controller+0xe0>
  4349b8:	mov	w8, wzr
  4349bc:	mov	w0, w8
  4349c0:	adrp	x1, 44a000 <_fini+0x9c30>
  4349c4:	add	x1, x1, #0x17
  4349c8:	ldr	x2, [sp, #8]
  4349cc:	mov	w3, #0x53a                 	// #1338
  4349d0:	adrp	x4, 449000 <_fini+0x8c30>
  4349d4:	add	x4, x4, #0xfd5
  4349d8:	bl	406c68 <log_assert_failed_realm@plt>
  4349dc:	ldur	x0, [x29, #-16]
  4349e0:	ldur	x1, [x29, #-24]
  4349e4:	bl	437554 <session_is_controller>
  4349e8:	tbnz	w0, #0, 4349f0 <session_set_controller+0xf4>
  4349ec:	b	434a00 <session_set_controller+0x104>
  4349f0:	stur	wzr, [x29, #-4]
  4349f4:	mov	w8, #0x1                   	// #1
  4349f8:	str	w8, [sp, #32]
  4349fc:	b	434b80 <session_set_controller+0x284>
  434a00:	ldur	x8, [x29, #-16]
  434a04:	ldr	x8, [x8, #232]
  434a08:	cbz	x8, 434a28 <session_set_controller+0x12c>
  434a0c:	ldurb	w8, [x29, #-25]
  434a10:	tbnz	w8, #0, 434a28 <session_set_controller+0x12c>
  434a14:	mov	w8, #0xfffffff0            	// #-16
  434a18:	stur	w8, [x29, #-4]
  434a1c:	mov	w8, #0x1                   	// #1
  434a20:	str	w8, [sp, #32]
  434a24:	b	434b80 <session_set_controller+0x284>
  434a28:	ldur	x0, [x29, #-24]
  434a2c:	bl	407168 <strdup@plt>
  434a30:	str	x0, [sp, #40]
  434a34:	ldr	x8, [sp, #40]
  434a38:	cbnz	x8, 434a50 <session_set_controller+0x154>
  434a3c:	mov	w8, #0xfffffff4            	// #-12
  434a40:	stur	w8, [x29, #-4]
  434a44:	mov	w8, #0x1                   	// #1
  434a48:	str	w8, [sp, #32]
  434a4c:	b	434b80 <session_set_controller+0x284>
  434a50:	ldur	x8, [x29, #-16]
  434a54:	ldr	x0, [x8, #248]
  434a58:	bl	407c28 <sd_bus_track_unref@plt>
  434a5c:	ldur	x8, [x29, #-16]
  434a60:	str	x0, [x8, #248]
  434a64:	ldur	x8, [x29, #-16]
  434a68:	ldr	x8, [x8]
  434a6c:	ldr	x0, [x8, #8]
  434a70:	ldur	x8, [x29, #-16]
  434a74:	add	x1, x8, #0xf8
  434a78:	ldur	x3, [x29, #-16]
  434a7c:	adrp	x2, 437000 <session_may_gc+0x5c>
  434a80:	add	x2, x2, #0x620
  434a84:	bl	407c78 <sd_bus_track_new@plt>
  434a88:	str	w0, [sp, #36]
  434a8c:	ldr	w9, [sp, #36]
  434a90:	cmp	w9, #0x0
  434a94:	cset	w9, ge  // ge = tcont
  434a98:	tbnz	w9, #0, 434ab0 <session_set_controller+0x1b4>
  434a9c:	ldr	w8, [sp, #36]
  434aa0:	stur	w8, [x29, #-4]
  434aa4:	mov	w8, #0x1                   	// #1
  434aa8:	str	w8, [sp, #32]
  434aac:	b	434b80 <session_set_controller+0x284>
  434ab0:	ldur	x8, [x29, #-16]
  434ab4:	ldr	x0, [x8, #248]
  434ab8:	ldr	x1, [sp, #40]
  434abc:	bl	407c88 <sd_bus_track_add_name@plt>
  434ac0:	str	w0, [sp, #36]
  434ac4:	ldr	w9, [sp, #36]
  434ac8:	cmp	w9, #0x0
  434acc:	cset	w9, ge  // ge = tcont
  434ad0:	tbnz	w9, #0, 434ae8 <session_set_controller+0x1ec>
  434ad4:	ldr	w8, [sp, #36]
  434ad8:	stur	w8, [x29, #-4]
  434adc:	mov	w8, #0x1                   	// #1
  434ae0:	str	w8, [sp, #32]
  434ae4:	b	434b80 <session_set_controller+0x284>
  434ae8:	ldurb	w8, [x29, #-26]
  434aec:	tbnz	w8, #0, 434af4 <session_set_controller+0x1f8>
  434af0:	b	434b38 <session_set_controller+0x23c>
  434af4:	ldur	x0, [x29, #-16]
  434af8:	bl	437708 <session_prepare_vt>
  434afc:	str	w0, [sp, #36]
  434b00:	ldr	w8, [sp, #36]
  434b04:	cmp	w8, #0x0
  434b08:	cset	w8, ge  // ge = tcont
  434b0c:	tbnz	w8, #0, 434b38 <session_set_controller+0x23c>
  434b10:	ldur	x8, [x29, #-16]
  434b14:	ldr	x0, [x8, #248]
  434b18:	bl	407c28 <sd_bus_track_unref@plt>
  434b1c:	ldur	x8, [x29, #-16]
  434b20:	str	x0, [x8, #248]
  434b24:	ldr	w9, [sp, #36]
  434b28:	stur	w9, [x29, #-4]
  434b2c:	mov	w9, #0x1                   	// #1
  434b30:	str	w9, [sp, #32]
  434b34:	b	434b80 <session_set_controller+0x284>
  434b38:	ldur	x0, [x29, #-16]
  434b3c:	mov	w8, #0x1                   	// #1
  434b40:	and	w1, w8, #0x1
  434b44:	bl	437aa4 <session_release_controller>
  434b48:	ldr	x9, [sp, #40]
  434b4c:	str	x9, [sp, #24]
  434b50:	mov	x9, xzr
  434b54:	str	x9, [sp, #40]
  434b58:	ldr	x9, [sp, #24]
  434b5c:	str	x9, [sp, #16]
  434b60:	ldr	x9, [sp, #16]
  434b64:	ldur	x10, [x29, #-16]
  434b68:	str	x9, [x10, #232]
  434b6c:	ldur	x0, [x29, #-16]
  434b70:	bl	432bf8 <session_save>
  434b74:	stur	wzr, [x29, #-4]
  434b78:	mov	w8, #0x1                   	// #1
  434b7c:	str	w8, [sp, #32]
  434b80:	add	x0, sp, #0x28
  434b84:	bl	4333b8 <freep>
  434b88:	ldur	w0, [x29, #-4]
  434b8c:	ldp	x29, x30, [sp, #80]
  434b90:	add	sp, sp, #0x60
  434b94:	ret

0000000000434b98 <session_load_devices>:
  434b98:	sub	sp, sp, #0x70
  434b9c:	stp	x29, x30, [sp, #96]
  434ba0:	add	x29, sp, #0x60
  434ba4:	adrp	x8, 449000 <_fini+0x8c30>
  434ba8:	add	x8, x8, #0x6de
  434bac:	add	x8, x8, #0x3
  434bb0:	stur	x0, [x29, #-8]
  434bb4:	stur	x1, [x29, #-16]
  434bb8:	stur	wzr, [x29, #-28]
  434bbc:	str	x8, [sp, #8]
  434bc0:	ldur	x8, [x29, #-8]
  434bc4:	cmp	x8, #0x0
  434bc8:	cset	w9, ne  // ne = any
  434bcc:	mov	w10, #0x1                   	// #1
  434bd0:	eor	w9, w9, #0x1
  434bd4:	eor	w9, w9, w10
  434bd8:	eor	w9, w9, w10
  434bdc:	and	w9, w9, #0x1
  434be0:	mov	w0, w9
  434be4:	sxtw	x8, w0
  434be8:	cbz	x8, 434c10 <session_load_devices+0x78>
  434bec:	mov	w8, wzr
  434bf0:	mov	w0, w8
  434bf4:	adrp	x1, 442000 <_fini+0x1c30>
  434bf8:	add	x1, x1, #0xf2
  434bfc:	ldr	x2, [sp, #8]
  434c00:	mov	w3, #0x16a                 	// #362
  434c04:	adrp	x4, 44a000 <_fini+0x9c30>
  434c08:	add	x4, x4, #0x58
  434c0c:	bl	406c68 <log_assert_failed_realm@plt>
  434c10:	ldur	x8, [x29, #-16]
  434c14:	stur	x8, [x29, #-24]
  434c18:	sub	x1, x29, #0x28
  434c1c:	mov	x8, xzr
  434c20:	stur	x8, [x29, #-40]
  434c24:	sub	x0, x29, #0x18
  434c28:	mov	x2, x8
  434c2c:	mov	w9, wzr
  434c30:	mov	w3, w9
  434c34:	bl	407c98 <extract_first_word@plt>
  434c38:	str	w0, [sp, #36]
  434c3c:	ldr	w9, [sp, #36]
  434c40:	cbnz	w9, 434c50 <session_load_devices+0xb8>
  434c44:	mov	w8, #0x4                   	// #4
  434c48:	str	w8, [sp, #32]
  434c4c:	b	434ce0 <session_load_devices+0x148>
  434c50:	ldr	w8, [sp, #36]
  434c54:	cmp	w8, #0x0
  434c58:	cset	w8, ge  // ge = tcont
  434c5c:	tbnz	w8, #0, 434c74 <session_load_devices+0xdc>
  434c60:	ldr	w8, [sp, #36]
  434c64:	stur	w8, [x29, #-28]
  434c68:	mov	w8, #0x4                   	// #4
  434c6c:	str	w8, [sp, #32]
  434c70:	b	434ce0 <session_load_devices+0x148>
  434c74:	ldur	x0, [x29, #-40]
  434c78:	add	x1, sp, #0x28
  434c7c:	bl	407ca8 <parse_dev@plt>
  434c80:	str	w0, [sp, #36]
  434c84:	ldr	w8, [sp, #36]
  434c88:	cmp	w8, #0x0
  434c8c:	cset	w8, ge  // ge = tcont
  434c90:	tbnz	w8, #0, 434ca8 <session_load_devices+0x110>
  434c94:	ldr	w8, [sp, #36]
  434c98:	stur	w8, [x29, #-28]
  434c9c:	mov	w8, #0x5                   	// #5
  434ca0:	str	w8, [sp, #32]
  434ca4:	b	434ce0 <session_load_devices+0x148>
  434ca8:	ldur	x0, [x29, #-8]
  434cac:	ldr	x1, [sp, #40]
  434cb0:	mov	w8, wzr
  434cb4:	and	w2, w8, #0x1
  434cb8:	add	x3, sp, #0x30
  434cbc:	bl	42ff28 <session_device_new>
  434cc0:	str	w0, [sp, #36]
  434cc4:	ldr	w8, [sp, #36]
  434cc8:	cmp	w8, #0x0
  434ccc:	cset	w8, ge  // ge = tcont
  434cd0:	tbnz	w8, #0, 434cdc <session_load_devices+0x144>
  434cd4:	ldr	w8, [sp, #36]
  434cd8:	stur	w8, [x29, #-28]
  434cdc:	str	wzr, [sp, #32]
  434ce0:	sub	x0, x29, #0x28
  434ce4:	bl	4333b8 <freep>
  434ce8:	ldr	w8, [sp, #32]
  434cec:	str	w8, [sp, #4]
  434cf0:	cbz	w8, 434d0c <session_load_devices+0x174>
  434cf4:	b	434cf8 <session_load_devices+0x160>
  434cf8:	ldr	w8, [sp, #4]
  434cfc:	cmp	w8, #0x4
  434d00:	b.eq	434d10 <session_load_devices+0x178>  // b.none
  434d04:	b	434d08 <session_load_devices+0x170>
  434d08:	b	434c18 <session_load_devices+0x80>
  434d0c:	b	434c18 <session_load_devices+0x80>
  434d10:	ldur	w8, [x29, #-28]
  434d14:	cmp	w8, #0x0
  434d18:	cset	w8, ge  // ge = tcont
  434d1c:	tbnz	w8, #0, 434da4 <session_load_devices+0x20c>
  434d20:	mov	w8, #0x3                   	// #3
  434d24:	str	w8, [sp, #28]
  434d28:	ldur	w8, [x29, #-28]
  434d2c:	str	w8, [sp, #24]
  434d30:	str	wzr, [sp, #20]
  434d34:	ldr	w0, [sp, #20]
  434d38:	bl	406c08 <log_get_max_level_realm@plt>
  434d3c:	ldr	w8, [sp, #28]
  434d40:	and	w8, w8, #0x7
  434d44:	cmp	w0, w8
  434d48:	b.lt	434d88 <session_load_devices+0x1f0>  // b.tstop
  434d4c:	ldr	w8, [sp, #20]
  434d50:	ldr	w9, [sp, #28]
  434d54:	orr	w0, w9, w8, lsl #10
  434d58:	ldr	w1, [sp, #24]
  434d5c:	ldur	x10, [x29, #-8]
  434d60:	ldr	x6, [x10, #8]
  434d64:	ldr	x2, [sp, #8]
  434d68:	mov	w3, #0x187                 	// #391
  434d6c:	adrp	x4, 44a000 <_fini+0x9c30>
  434d70:	add	x4, x4, #0x8a
  434d74:	adrp	x5, 44a000 <_fini+0x9c30>
  434d78:	add	x5, x5, #0x9f
  434d7c:	bl	406c18 <log_internal_realm@plt>
  434d80:	str	w0, [sp]
  434d84:	b	434d9c <session_load_devices+0x204>
  434d88:	ldr	w0, [sp, #24]
  434d8c:	bl	406c28 <abs@plt>
  434d90:	mov	w8, wzr
  434d94:	subs	w8, w8, w0, uxtb
  434d98:	str	w8, [sp]
  434d9c:	ldr	w8, [sp]
  434da0:	str	w8, [sp, #16]
  434da4:	ldur	w0, [x29, #-28]
  434da8:	ldp	x29, x30, [sp, #96]
  434dac:	add	sp, sp, #0x70
  434db0:	ret

0000000000434db4 <session_restore_vt>:
  434db4:	sub	sp, sp, #0x50
  434db8:	stp	x29, x30, [sp, #64]
  434dbc:	add	x29, sp, #0x40
  434dc0:	mov	w8, #0xfffffffb            	// #-5
  434dc4:	adrp	x9, 449000 <_fini+0x8c30>
  434dc8:	add	x9, x9, #0x6de
  434dcc:	add	x2, x9, #0x3
  434dd0:	stur	x0, [x29, #-8]
  434dd4:	ldur	x9, [x29, #-8]
  434dd8:	ldr	w0, [x9, #148]
  434ddc:	str	w8, [sp, #16]
  434de0:	str	x2, [sp, #8]
  434de4:	bl	407cb8 <vt_restore@plt>
  434de8:	stur	w0, [x29, #-12]
  434dec:	ldur	w8, [x29, #-12]
  434df0:	ldr	w10, [sp, #16]
  434df4:	cmp	w8, w10
  434df8:	b.ne	434e54 <session_restore_vt+0xa0>  // b.any
  434dfc:	ldur	x8, [x29, #-8]
  434e00:	ldr	w9, [x8, #148]
  434e04:	stur	w9, [x29, #-24]
  434e08:	ldur	x8, [x29, #-8]
  434e0c:	mov	w9, #0xffffffff            	// #-1
  434e10:	str	w9, [x8, #148]
  434e14:	ldur	w9, [x29, #-24]
  434e18:	stur	w9, [x29, #-28]
  434e1c:	ldur	w9, [x29, #-28]
  434e20:	stur	w9, [x29, #-20]
  434e24:	ldur	x0, [x29, #-8]
  434e28:	bl	437d5c <session_open_vt>
  434e2c:	stur	w0, [x29, #-16]
  434e30:	ldur	w0, [x29, #-20]
  434e34:	bl	406d38 <safe_close@plt>
  434e38:	ldur	w9, [x29, #-16]
  434e3c:	cmp	w9, #0x0
  434e40:	cset	w9, lt  // lt = tstop
  434e44:	tbnz	w9, #0, 434e54 <session_restore_vt+0xa0>
  434e48:	ldur	w0, [x29, #-16]
  434e4c:	bl	407cb8 <vt_restore@plt>
  434e50:	stur	w0, [x29, #-12]
  434e54:	ldur	w8, [x29, #-12]
  434e58:	cmp	w8, #0x0
  434e5c:	cset	w8, ge  // ge = tcont
  434e60:	tbnz	w8, #0, 434ee0 <session_restore_vt+0x12c>
  434e64:	mov	w8, #0x4                   	// #4
  434e68:	str	w8, [sp, #32]
  434e6c:	ldur	w8, [x29, #-12]
  434e70:	str	w8, [sp, #28]
  434e74:	str	wzr, [sp, #24]
  434e78:	ldr	w0, [sp, #24]
  434e7c:	bl	406c08 <log_get_max_level_realm@plt>
  434e80:	ldr	w8, [sp, #32]
  434e84:	and	w8, w8, #0x7
  434e88:	cmp	w0, w8
  434e8c:	b.lt	434ec4 <session_restore_vt+0x110>  // b.tstop
  434e90:	ldr	w8, [sp, #24]
  434e94:	ldr	w9, [sp, #32]
  434e98:	orr	w0, w9, w8, lsl #10
  434e9c:	ldr	w1, [sp, #28]
  434ea0:	ldr	x2, [sp, #8]
  434ea4:	mov	w3, #0x4f0                 	// #1264
  434ea8:	adrp	x4, 44a000 <_fini+0x9c30>
  434eac:	add	x4, x4, #0x3c6
  434eb0:	adrp	x5, 44a000 <_fini+0x9c30>
  434eb4:	add	x5, x5, #0x3d9
  434eb8:	bl	406c18 <log_internal_realm@plt>
  434ebc:	str	w0, [sp, #4]
  434ec0:	b	434ed8 <session_restore_vt+0x124>
  434ec4:	ldr	w0, [sp, #28]
  434ec8:	bl	406c28 <abs@plt>
  434ecc:	mov	w8, wzr
  434ed0:	subs	w8, w8, w0, uxtb
  434ed4:	str	w8, [sp, #4]
  434ed8:	ldr	w8, [sp, #4]
  434edc:	str	w8, [sp, #20]
  434ee0:	ldur	x8, [x29, #-8]
  434ee4:	ldr	w0, [x8, #148]
  434ee8:	bl	406d38 <safe_close@plt>
  434eec:	ldur	x8, [x29, #-8]
  434ef0:	str	w0, [x8, #148]
  434ef4:	ldp	x29, x30, [sp, #64]
  434ef8:	add	sp, sp, #0x50
  434efc:	ret

0000000000434f00 <session_activate>:
  434f00:	sub	sp, sp, #0x30
  434f04:	stp	x29, x30, [sp, #32]
  434f08:	add	x29, sp, #0x20
  434f0c:	adrp	x8, 449000 <_fini+0x8c30>
  434f10:	add	x8, x8, #0x6de
  434f14:	add	x8, x8, #0x3
  434f18:	str	x0, [sp, #16]
  434f1c:	str	x8, [sp]
  434f20:	ldr	x8, [sp, #16]
  434f24:	cmp	x8, #0x0
  434f28:	cset	w9, ne  // ne = any
  434f2c:	mov	w10, #0x1                   	// #1
  434f30:	eor	w9, w9, #0x1
  434f34:	eor	w9, w9, w10
  434f38:	eor	w9, w9, w10
  434f3c:	and	w9, w9, #0x1
  434f40:	mov	w0, w9
  434f44:	sxtw	x8, w0
  434f48:	cbz	x8, 434f70 <session_activate+0x70>
  434f4c:	mov	w8, wzr
  434f50:	mov	w0, w8
  434f54:	adrp	x1, 442000 <_fini+0x1c30>
  434f58:	add	x1, x1, #0xf2
  434f5c:	ldr	x2, [sp]
  434f60:	mov	w3, #0x252                 	// #594
  434f64:	adrp	x4, 449000 <_fini+0x8c30>
  434f68:	add	x4, x4, #0xb63
  434f6c:	bl	406c68 <log_assert_failed_realm@plt>
  434f70:	ldr	x8, [sp, #16]
  434f74:	ldr	x8, [x8, #40]
  434f78:	cmp	x8, #0x0
  434f7c:	cset	w9, ne  // ne = any
  434f80:	mov	w10, #0x1                   	// #1
  434f84:	eor	w9, w9, #0x1
  434f88:	eor	w9, w9, w10
  434f8c:	eor	w9, w9, w10
  434f90:	and	w9, w9, #0x1
  434f94:	mov	w0, w9
  434f98:	sxtw	x8, w0
  434f9c:	cbz	x8, 434fc4 <session_activate+0xc4>
  434fa0:	mov	w8, wzr
  434fa4:	mov	w0, w8
  434fa8:	adrp	x1, 449000 <_fini+0x8c30>
  434fac:	add	x1, x1, #0xb83
  434fb0:	ldr	x2, [sp]
  434fb4:	mov	w3, #0x253                 	// #595
  434fb8:	adrp	x4, 449000 <_fini+0x8c30>
  434fbc:	add	x4, x4, #0xb63
  434fc0:	bl	406c68 <log_assert_failed_realm@plt>
  434fc4:	ldr	x8, [sp, #16]
  434fc8:	ldr	x8, [x8, #136]
  434fcc:	cbnz	x8, 434fdc <session_activate+0xdc>
  434fd0:	mov	w8, #0xffffffa1            	// #-95
  434fd4:	stur	w8, [x29, #-4]
  434fd8:	b	435070 <session_activate+0x170>
  434fdc:	ldr	x8, [sp, #16]
  434fe0:	ldr	x8, [x8, #136]
  434fe4:	ldr	x8, [x8, #32]
  434fe8:	ldr	x9, [sp, #16]
  434fec:	cmp	x8, x9
  434ff0:	b.ne	434ffc <session_activate+0xfc>  // b.any
  434ff4:	stur	wzr, [x29, #-4]
  434ff8:	b	435070 <session_activate+0x170>
  434ffc:	ldr	x8, [sp, #16]
  435000:	ldr	x0, [x8, #136]
  435004:	bl	429ff0 <seat_has_vts>
  435008:	tbnz	w0, #0, 435010 <session_activate+0x110>
  43500c:	b	43503c <session_activate+0x13c>
  435010:	ldr	x8, [sp, #16]
  435014:	ldr	w9, [x8, #144]
  435018:	cbnz	w9, 435028 <session_activate+0x128>
  43501c:	mov	w8, #0xffffffa1            	// #-95
  435020:	stur	w8, [x29, #-4]
  435024:	b	435070 <session_activate+0x170>
  435028:	ldr	x8, [sp, #16]
  43502c:	ldr	w0, [x8, #144]
  435030:	bl	407ad8 <chvt@plt>
  435034:	stur	w0, [x29, #-4]
  435038:	b	435070 <session_activate+0x170>
  43503c:	ldr	x8, [sp, #16]
  435040:	ldr	x9, [sp, #16]
  435044:	ldr	x9, [x9, #136]
  435048:	str	x8, [x9, #40]
  43504c:	ldr	x0, [sp, #16]
  435050:	bl	431608 <session_device_try_pause_all>
  435054:	str	w0, [sp, #12]
  435058:	ldr	w10, [sp, #12]
  43505c:	cbnz	w10, 43506c <session_activate+0x16c>
  435060:	ldr	x8, [sp, #16]
  435064:	ldr	x0, [x8, #136]
  435068:	bl	42b93c <seat_complete_switch>
  43506c:	stur	wzr, [x29, #-4]
  435070:	ldur	w0, [x29, #-4]
  435074:	ldp	x29, x30, [sp, #32]
  435078:	add	sp, sp, #0x30
  43507c:	ret

0000000000435080 <session_start>:
  435080:	sub	sp, sp, #0x80
  435084:	stp	x29, x30, [sp, #112]
  435088:	add	x29, sp, #0x70
  43508c:	adrp	x8, 449000 <_fini+0x8c30>
  435090:	add	x8, x8, #0x6de
  435094:	add	x8, x8, #0x3
  435098:	stur	x0, [x29, #-16]
  43509c:	stur	x1, [x29, #-24]
  4350a0:	stur	x2, [x29, #-32]
  4350a4:	stur	x8, [x29, #-48]
  4350a8:	ldur	x8, [x29, #-16]
  4350ac:	cmp	x8, #0x0
  4350b0:	cset	w9, ne  // ne = any
  4350b4:	mov	w10, #0x1                   	// #1
  4350b8:	eor	w9, w9, #0x1
  4350bc:	eor	w9, w9, w10
  4350c0:	eor	w9, w9, w10
  4350c4:	and	w9, w9, #0x1
  4350c8:	mov	w0, w9
  4350cc:	sxtw	x8, w0
  4350d0:	cbz	x8, 4350f8 <session_start+0x78>
  4350d4:	mov	w8, wzr
  4350d8:	mov	w0, w8
  4350dc:	adrp	x1, 442000 <_fini+0x1c30>
  4350e0:	add	x1, x1, #0xf2
  4350e4:	ldur	x2, [x29, #-48]
  4350e8:	mov	w3, #0x2a7                 	// #679
  4350ec:	adrp	x4, 449000 <_fini+0x8c30>
  4350f0:	add	x4, x4, #0xb8b
  4350f4:	bl	406c68 <log_assert_failed_realm@plt>
  4350f8:	ldur	x8, [x29, #-16]
  4350fc:	ldr	x8, [x8, #40]
  435100:	cbnz	x8, 435110 <session_start+0x90>
  435104:	mov	w8, #0xffffff8c            	// #-116
  435108:	stur	w8, [x29, #-4]
  43510c:	b	435388 <session_start+0x308>
  435110:	ldur	x8, [x29, #-16]
  435114:	ldrb	w9, [x8, #209]
  435118:	mov	w10, #0x2                   	// #2
  43511c:	lsr	w9, w9, w10
  435120:	and	w9, w9, #0x1
  435124:	tbnz	w9, #0, 43512c <session_start+0xac>
  435128:	b	435138 <session_start+0xb8>
  43512c:	mov	w8, #0xffffffea            	// #-22
  435130:	stur	w8, [x29, #-4]
  435134:	b	435388 <session_start+0x308>
  435138:	ldur	x8, [x29, #-16]
  43513c:	ldrb	w9, [x8, #209]
  435140:	mov	w10, #0x1                   	// #1
  435144:	lsr	w9, w9, w10
  435148:	and	w9, w9, w10
  43514c:	tbnz	w9, #0, 435154 <session_start+0xd4>
  435150:	b	43515c <session_start+0xdc>
  435154:	stur	wzr, [x29, #-4]
  435158:	b	435388 <session_start+0x308>
  43515c:	ldur	x8, [x29, #-16]
  435160:	ldr	x0, [x8, #40]
  435164:	bl	43ae00 <user_start>
  435168:	stur	w0, [x29, #-36]
  43516c:	ldur	w9, [x29, #-36]
  435170:	cmp	w9, #0x0
  435174:	cset	w9, ge  // ge = tcont
  435178:	tbnz	w9, #0, 435188 <session_start+0x108>
  43517c:	ldur	w8, [x29, #-36]
  435180:	stur	w8, [x29, #-4]
  435184:	b	435388 <session_start+0x308>
  435188:	ldur	x0, [x29, #-16]
  43518c:	ldur	x1, [x29, #-24]
  435190:	ldur	x2, [x29, #-32]
  435194:	bl	435398 <session_start_scope>
  435198:	stur	w0, [x29, #-36]
  43519c:	ldur	w8, [x29, #-36]
  4351a0:	cmp	w8, #0x0
  4351a4:	cset	w8, ge  // ge = tcont
  4351a8:	tbnz	w8, #0, 4351b8 <session_start+0x138>
  4351ac:	ldur	w8, [x29, #-36]
  4351b0:	stur	w8, [x29, #-4]
  4351b4:	b	435388 <session_start+0x308>
  4351b8:	ldur	x8, [x29, #-16]
  4351bc:	ldr	w9, [x8, #24]
  4351c0:	mov	w10, #0x6                   	// #6
  4351c4:	mov	w11, #0x7                   	// #7
  4351c8:	cmp	w9, #0x3
  4351cc:	csel	w9, w11, w10, eq  // eq = none
  4351d0:	mov	w10, wzr
  4351d4:	orr	w0, w10, w9
  4351d8:	ldur	x8, [x29, #-16]
  4351dc:	ldr	x7, [x8, #8]
  4351e0:	ldur	x8, [x29, #-16]
  4351e4:	ldr	x8, [x8, #40]
  4351e8:	ldr	x8, [x8, #16]
  4351ec:	ldur	x12, [x29, #-16]
  4351f0:	ldr	w9, [x12, #152]
  4351f4:	ldur	x12, [x29, #-16]
  4351f8:	ldr	x12, [x12, #8]
  4351fc:	ldur	x13, [x29, #-16]
  435200:	ldr	x13, [x13, #40]
  435204:	ldr	x13, [x13, #16]
  435208:	mov	w1, w10
  43520c:	ldur	x2, [x29, #-48]
  435210:	mov	w3, #0x2bf                 	// #703
  435214:	adrp	x4, 449000 <_fini+0x8c30>
  435218:	add	x4, x4, #0xbca
  43521c:	adrp	x5, 449000 <_fini+0x8c30>
  435220:	add	x5, x5, #0xbd8
  435224:	adrp	x6, 449000 <_fini+0x8c30>
  435228:	add	x6, x6, #0xc04
  43522c:	mov	x14, sp
  435230:	adrp	x15, 449000 <_fini+0x8c30>
  435234:	add	x15, x15, #0xc12
  435238:	str	x15, [x14]
  43523c:	mov	x14, sp
  435240:	str	x8, [x14, #8]
  435244:	mov	x8, sp
  435248:	adrp	x14, 449000 <_fini+0x8c30>
  43524c:	add	x14, x14, #0xc1d
  435250:	str	x14, [x8, #16]
  435254:	mov	x8, sp
  435258:	str	w9, [x8, #24]
  43525c:	mov	x8, sp
  435260:	adrp	x14, 449000 <_fini+0x8c30>
  435264:	add	x14, x14, #0xc27
  435268:	str	x14, [x8, #32]
  43526c:	mov	x8, sp
  435270:	str	x12, [x8, #40]
  435274:	mov	x8, sp
  435278:	str	x13, [x8, #48]
  43527c:	mov	x8, sp
  435280:	mov	x12, xzr
  435284:	str	x12, [x8, #56]
  435288:	bl	407288 <log_struct_internal@plt>
  43528c:	ldur	x8, [x29, #-16]
  435290:	add	x8, x8, #0x30
  435294:	mov	x0, x8
  435298:	bl	433778 <dual_timestamp_is_set>
  43529c:	tbnz	w0, #0, 4352ac <session_start+0x22c>
  4352a0:	ldur	x8, [x29, #-16]
  4352a4:	add	x0, x8, #0x30
  4352a8:	bl	4079d8 <dual_timestamp_get@plt>
  4352ac:	ldur	x8, [x29, #-16]
  4352b0:	ldr	x8, [x8, #136]
  4352b4:	cbz	x8, 4352c4 <session_start+0x244>
  4352b8:	ldur	x8, [x29, #-16]
  4352bc:	ldr	x0, [x8, #136]
  4352c0:	bl	42ac20 <seat_read_active_vt>
  4352c4:	ldur	x8, [x29, #-16]
  4352c8:	ldrb	w9, [x8, #209]
  4352cc:	and	w9, w9, #0xfffffffd
  4352d0:	orr	w9, w9, #0x2
  4352d4:	strb	w9, [x8, #209]
  4352d8:	ldur	x8, [x29, #-16]
  4352dc:	ldr	x0, [x8, #40]
  4352e0:	bl	43c5ac <user_elect_display>
  4352e4:	ldur	x0, [x29, #-16]
  4352e8:	bl	432bf8 <session_save>
  4352ec:	ldur	x8, [x29, #-16]
  4352f0:	ldr	x8, [x8, #40]
  4352f4:	mov	x0, x8
  4352f8:	bl	43a320 <user_save>
  4352fc:	ldur	x8, [x29, #-16]
  435300:	ldr	x8, [x8, #136]
  435304:	cbz	x8, 435314 <session_start+0x294>
  435308:	ldur	x8, [x29, #-16]
  43530c:	ldr	x0, [x8, #136]
  435310:	bl	429674 <seat_save>
  435314:	ldur	x0, [x29, #-16]
  435318:	mov	w8, #0x1                   	// #1
  43531c:	and	w1, w8, #0x1
  435320:	bl	42f380 <session_send_signal>
  435324:	ldur	x9, [x29, #-16]
  435328:	ldr	x9, [x9, #40]
  43532c:	mov	x0, x9
  435330:	adrp	x1, 448000 <_fini+0x7c30>
  435334:	add	x1, x1, #0x593
  435338:	mov	x9, xzr
  43533c:	mov	x2, x9
  435340:	bl	4395b4 <user_send_changed>
  435344:	ldur	x9, [x29, #-16]
  435348:	ldr	x9, [x9, #136]
  43534c:	cbz	x9, 435384 <session_start+0x304>
  435350:	ldur	x8, [x29, #-16]
  435354:	ldr	x8, [x8, #136]
  435358:	ldr	x8, [x8, #32]
  43535c:	ldur	x9, [x29, #-16]
  435360:	cmp	x8, x9
  435364:	b.ne	435384 <session_start+0x304>  // b.any
  435368:	ldur	x8, [x29, #-16]
  43536c:	ldr	x0, [x8, #136]
  435370:	adrp	x1, 447000 <_fini+0x6c30>
  435374:	add	x1, x1, #0x830
  435378:	mov	x8, xzr
  43537c:	mov	x2, x8
  435380:	bl	428aec <seat_send_changed>
  435384:	stur	wzr, [x29, #-4]
  435388:	ldur	w0, [x29, #-4]
  43538c:	ldp	x29, x30, [sp, #112]
  435390:	add	sp, sp, #0x80
  435394:	ret

0000000000435398 <session_start_scope>:
  435398:	stp	x29, x30, [sp, #-32]!
  43539c:	str	x28, [sp, #16]
  4353a0:	mov	x29, sp
  4353a4:	sub	sp, sp, #0x140
  4353a8:	adrp	x8, 449000 <_fini+0x8c30>
  4353ac:	add	x8, x8, #0x6de
  4353b0:	add	x8, x8, #0x3
  4353b4:	adrp	x9, 44a000 <_fini+0x9c30>
  4353b8:	add	x9, x9, #0xd1
  4353bc:	stur	x0, [x29, #-16]
  4353c0:	stur	x1, [x29, #-24]
  4353c4:	stur	x2, [x29, #-32]
  4353c8:	stur	x8, [x29, #-256]
  4353cc:	sub	x8, x29, #0x8
  4353d0:	stur	x9, [x8, #-256]
  4353d4:	ldur	x8, [x29, #-16]
  4353d8:	cmp	x8, #0x0
  4353dc:	cset	w9, ne  // ne = any
  4353e0:	mov	w10, #0x1                   	// #1
  4353e4:	eor	w9, w9, #0x1
  4353e8:	eor	w9, w9, w10
  4353ec:	eor	w9, w9, w10
  4353f0:	and	w9, w9, #0x1
  4353f4:	mov	w0, w9
  4353f8:	sxtw	x8, w0
  4353fc:	cbz	x8, 435424 <session_start_scope+0x8c>
  435400:	mov	w8, wzr
  435404:	mov	w0, w8
  435408:	adrp	x1, 442000 <_fini+0x1c30>
  43540c:	add	x1, x1, #0xf2
  435410:	ldur	x2, [x29, #-256]
  435414:	mov	w3, #0x277                 	// #631
  435418:	sub	x8, x29, #0x8
  43541c:	ldur	x4, [x8, #-256]
  435420:	bl	406c68 <log_assert_failed_realm@plt>
  435424:	ldur	x8, [x29, #-16]
  435428:	ldr	x8, [x8, #40]
  43542c:	cmp	x8, #0x0
  435430:	cset	w9, ne  // ne = any
  435434:	mov	w10, #0x1                   	// #1
  435438:	eor	w9, w9, #0x1
  43543c:	eor	w9, w9, w10
  435440:	eor	w9, w9, w10
  435444:	and	w9, w9, #0x1
  435448:	mov	w0, w9
  43544c:	sxtw	x8, w0
  435450:	cbz	x8, 435478 <session_start_scope+0xe0>
  435454:	mov	w8, wzr
  435458:	mov	w0, w8
  43545c:	adrp	x1, 449000 <_fini+0x8c30>
  435460:	add	x1, x1, #0xb83
  435464:	ldur	x2, [x29, #-256]
  435468:	mov	w3, #0x278                 	// #632
  43546c:	sub	x8, x29, #0x8
  435470:	ldur	x4, [x8, #-256]
  435474:	bl	406c68 <log_assert_failed_realm@plt>
  435478:	ldur	x8, [x29, #-16]
  43547c:	ldr	x8, [x8, #120]
  435480:	cbnz	x8, 435980 <session_start_scope+0x5e8>
  435484:	mov	x8, xzr
  435488:	stur	x8, [x29, #-48]
  43548c:	ldur	x9, [x29, #-16]
  435490:	ldr	x0, [x9, #128]
  435494:	sub	x9, x29, #0x10
  435498:	stur	x8, [x9, #-256]
  43549c:	bl	4328c0 <mfree>
  4354a0:	ldur	x8, [x29, #-16]
  4354a4:	str	x0, [x8, #128]
  4354a8:	ldur	x8, [x29, #-16]
  4354ac:	ldr	x1, [x8, #8]
  4354b0:	adrp	x0, 44a000 <_fini+0x9c30>
  4354b4:	add	x0, x0, #0x116
  4354b8:	adrp	x2, 44a000 <_fini+0x9c30>
  4354bc:	add	x2, x2, #0x11f
  4354c0:	sub	x8, x29, #0x10
  4354c4:	ldur	x3, [x8, #-256]
  4354c8:	bl	407a48 <strjoin_real@plt>
  4354cc:	stur	x0, [x29, #-48]
  4354d0:	ldur	x8, [x29, #-48]
  4354d4:	cbnz	x8, 435504 <session_start_scope+0x16c>
  4354d8:	mov	w8, wzr
  4354dc:	mov	w0, w8
  4354e0:	ldur	x1, [x29, #-256]
  4354e4:	mov	w2, #0x282                 	// #642
  4354e8:	adrp	x3, 44a000 <_fini+0x9c30>
  4354ec:	add	x3, x3, #0x126
  4354f0:	bl	407008 <log_oom_internal@plt>
  4354f4:	stur	w0, [x29, #-4]
  4354f8:	mov	w8, #0x1                   	// #1
  4354fc:	stur	w8, [x29, #-60]
  435500:	b	435968 <session_start_scope+0x5d0>
  435504:	sub	x8, x29, #0x60
  435508:	adrp	x9, 44a000 <_fini+0x9c30>
  43550c:	add	x9, x9, #0x13a
  435510:	stur	x9, [x29, #-96]
  435514:	ldur	x9, [x29, #-16]
  435518:	ldr	x9, [x9, #8]
  43551c:	str	x9, [x8, #8]
  435520:	adrp	x9, 44a000 <_fini+0x9c30>
  435524:	add	x9, x9, #0x143
  435528:	str	x9, [x8, #16]
  43552c:	ldur	x9, [x29, #-16]
  435530:	ldr	x9, [x9, #40]
  435534:	ldr	x9, [x9, #16]
  435538:	str	x9, [x8, #24]
  43553c:	stur	xzr, [x29, #-120]
  435540:	stur	xzr, [x29, #-128]
  435544:	ldur	x8, [x29, #-128]
  435548:	mov	w9, #0x0                   	// #0
  43554c:	cmp	x8, #0x4
  435550:	sub	x8, x29, #0x14
  435554:	stur	w9, [x8, #-256]
  435558:	b.cs	435584 <session_start_scope+0x1ec>  // b.hs, b.nlast
  43555c:	ldur	x8, [x29, #-128]
  435560:	mov	x9, #0x8                   	// #8
  435564:	mul	x8, x9, x8
  435568:	sub	x9, x29, #0x60
  43556c:	add	x8, x9, x8
  435570:	ldr	x8, [x8]
  435574:	cmp	x8, #0x0
  435578:	cset	w10, ne  // ne = any
  43557c:	sub	x8, x29, #0x14
  435580:	stur	w10, [x8, #-256]
  435584:	sub	x8, x29, #0x14
  435588:	ldur	w8, [x8, #-256]
  43558c:	tbnz	w8, #0, 435594 <session_start_scope+0x1fc>
  435590:	b	4355cc <session_start_scope+0x234>
  435594:	ldur	x8, [x29, #-128]
  435598:	mov	x9, #0x8                   	// #8
  43559c:	mul	x8, x9, x8
  4355a0:	sub	x9, x29, #0x60
  4355a4:	add	x8, x9, x8
  4355a8:	ldr	x0, [x8]
  4355ac:	bl	4070a8 <strlen@plt>
  4355b0:	ldur	x8, [x29, #-120]
  4355b4:	add	x8, x8, x0
  4355b8:	stur	x8, [x29, #-120]
  4355bc:	ldur	x8, [x29, #-128]
  4355c0:	add	x8, x8, #0x1
  4355c4:	stur	x8, [x29, #-128]
  4355c8:	b	435544 <session_start_scope+0x1ac>
  4355cc:	ldur	x8, [x29, #-120]
  4355d0:	add	x8, x8, #0x1
  4355d4:	stur	x8, [x29, #-136]
  4355d8:	ldur	x1, [x29, #-136]
  4355dc:	mov	x0, #0x1                   	// #1
  4355e0:	bl	437c1c <size_multiply_overflow>
  4355e4:	mov	w8, #0x1                   	// #1
  4355e8:	eor	w9, w0, #0x1
  4355ec:	eor	w9, w9, w8
  4355f0:	eor	w9, w9, w8
  4355f4:	eor	w8, w9, w8
  4355f8:	and	w8, w8, #0x1
  4355fc:	mov	w1, w8
  435600:	sxtw	x10, w1
  435604:	cbz	x10, 43562c <session_start_scope+0x294>
  435608:	mov	w8, wzr
  43560c:	mov	w0, w8
  435610:	adrp	x1, 441000 <_fini+0xc30>
  435614:	add	x1, x1, #0xe80
  435618:	ldur	x2, [x29, #-256]
  43561c:	mov	w3, #0x284                 	// #644
  435620:	sub	x8, x29, #0x8
  435624:	ldur	x4, [x8, #-256]
  435628:	bl	406c68 <log_assert_failed_realm@plt>
  43562c:	ldur	x8, [x29, #-136]
  435630:	mov	x9, #0x1                   	// #1
  435634:	mul	x8, x9, x8
  435638:	cmp	x8, #0x400, lsl #12
  43563c:	cset	w10, ls  // ls = plast
  435640:	mov	w11, #0x1                   	// #1
  435644:	eor	w10, w10, #0x1
  435648:	eor	w10, w10, w11
  43564c:	eor	w10, w10, w11
  435650:	and	w10, w10, #0x1
  435654:	mov	w0, w10
  435658:	sxtw	x8, w0
  43565c:	cbz	x8, 435684 <session_start_scope+0x2ec>
  435660:	mov	w8, wzr
  435664:	mov	w0, w8
  435668:	adrp	x1, 441000 <_fini+0xc30>
  43566c:	add	x1, x1, #0xeab
  435670:	ldur	x2, [x29, #-256]
  435674:	mov	w3, #0x284                 	// #644
  435678:	sub	x8, x29, #0x8
  43567c:	ldur	x4, [x8, #-256]
  435680:	bl	406c68 <log_assert_failed_realm@plt>
  435684:	ldur	x8, [x29, #-136]
  435688:	mov	x9, #0x1                   	// #1
  43568c:	mul	x8, x9, x8
  435690:	mul	x8, x8, x9
  435694:	add	x8, x8, #0xf
  435698:	and	x8, x8, #0xfffffffffffffff0
  43569c:	mov	x9, sp
  4356a0:	subs	x8, x9, x8
  4356a4:	mov	sp, x8
  4356a8:	stur	x8, [x29, #-144]
  4356ac:	ldur	x8, [x29, #-144]
  4356b0:	stur	x8, [x29, #-104]
  4356b4:	stur	x8, [x29, #-112]
  4356b8:	stur	xzr, [x29, #-128]
  4356bc:	ldur	x8, [x29, #-128]
  4356c0:	mov	w9, #0x0                   	// #0
  4356c4:	cmp	x8, #0x4
  4356c8:	sub	x8, x29, #0x18
  4356cc:	stur	w9, [x8, #-256]
  4356d0:	b.cs	4356fc <session_start_scope+0x364>  // b.hs, b.nlast
  4356d4:	ldur	x8, [x29, #-128]
  4356d8:	mov	x9, #0x8                   	// #8
  4356dc:	mul	x8, x9, x8
  4356e0:	sub	x9, x29, #0x60
  4356e4:	add	x8, x9, x8
  4356e8:	ldr	x8, [x8]
  4356ec:	cmp	x8, #0x0
  4356f0:	cset	w10, ne  // ne = any
  4356f4:	sub	x8, x29, #0x18
  4356f8:	stur	w10, [x8, #-256]
  4356fc:	sub	x8, x29, #0x18
  435700:	ldur	w8, [x8, #-256]
  435704:	tbnz	w8, #0, 43570c <session_start_scope+0x374>
  435708:	b	435740 <session_start_scope+0x3a8>
  43570c:	ldur	x0, [x29, #-112]
  435710:	ldur	x8, [x29, #-128]
  435714:	mov	x9, #0x8                   	// #8
  435718:	mul	x8, x9, x8
  43571c:	sub	x9, x29, #0x60
  435720:	add	x8, x9, x8
  435724:	ldr	x1, [x8]
  435728:	bl	407258 <stpcpy@plt>
  43572c:	stur	x0, [x29, #-112]
  435730:	ldur	x8, [x29, #-128]
  435734:	add	x8, x8, #0x1
  435738:	stur	x8, [x29, #-128]
  43573c:	b	4356bc <session_start_scope+0x324>
  435740:	ldur	x8, [x29, #-112]
  435744:	mov	w9, #0x0                   	// #0
  435748:	strb	w9, [x8]
  43574c:	ldur	x8, [x29, #-104]
  435750:	stur	x8, [x29, #-152]
  435754:	ldur	x8, [x29, #-152]
  435758:	stur	x8, [x29, #-56]
  43575c:	ldur	x8, [x29, #-16]
  435760:	ldr	x0, [x8]
  435764:	ldur	x1, [x29, #-48]
  435768:	ldur	x8, [x29, #-16]
  43576c:	ldr	w2, [x8, #152]
  435770:	ldur	x8, [x29, #-16]
  435774:	ldr	x8, [x8, #40]
  435778:	ldr	x3, [x8, #48]
  43577c:	ldur	x4, [x29, #-56]
  435780:	ldur	x8, [x29, #-16]
  435784:	ldr	x8, [x8, #40]
  435788:	ldr	x8, [x8, #64]
  43578c:	sub	x10, x29, #0xb0
  435790:	stur	x8, [x29, #-176]
  435794:	ldur	x8, [x29, #-16]
  435798:	ldr	x8, [x8, #40]
  43579c:	ldr	x8, [x8, #56]
  4357a0:	str	x8, [x10, #8]
  4357a4:	mov	x8, xzr
  4357a8:	str	x8, [x10, #16]
  4357ac:	sub	x11, x29, #0xd8
  4357b0:	adrp	x12, 44a000 <_fini+0x9c30>
  4357b4:	add	x12, x12, #0x14d
  4357b8:	stur	x12, [x29, #-216]
  4357bc:	adrp	x12, 44a000 <_fini+0x9c30>
  4357c0:	add	x12, x12, #0x164
  4357c4:	str	x12, [x11, #8]
  4357c8:	ldur	x12, [x29, #-16]
  4357cc:	ldr	x12, [x12, #40]
  4357d0:	ldr	x12, [x12, #64]
  4357d4:	str	x12, [x11, #16]
  4357d8:	ldur	x12, [x29, #-16]
  4357dc:	ldr	x12, [x12, #40]
  4357e0:	ldr	x12, [x12, #56]
  4357e4:	str	x12, [x11, #24]
  4357e8:	str	x8, [x11, #32]
  4357ec:	ldur	x8, [x29, #-16]
  4357f0:	ldr	x8, [x8, #40]
  4357f4:	ldr	x7, [x8, #24]
  4357f8:	ldur	x8, [x29, #-24]
  4357fc:	ldur	x12, [x29, #-32]
  435800:	ldur	x13, [x29, #-16]
  435804:	add	x13, x13, #0x80
  435808:	sub	sp, sp, #0x20
  43580c:	mov	x5, x10
  435810:	mov	x6, x11
  435814:	mov	x10, sp
  435818:	str	x8, [x10]
  43581c:	mov	x8, sp
  435820:	str	x12, [x8, #8]
  435824:	mov	x8, sp
  435828:	str	x13, [x8, #16]
  43582c:	bl	4201dc <manager_start_scope>
  435830:	add	sp, sp, #0x20
  435834:	stur	w0, [x29, #-36]
  435838:	ldur	w9, [x29, #-36]
  43583c:	cmp	w9, #0x0
  435840:	cset	w9, ge  // ge = tcont
  435844:	tbnz	w9, #0, 435940 <session_start_scope+0x5a8>
  435848:	mov	w8, #0x3                   	// #3
  43584c:	stur	w8, [x29, #-220]
  435850:	ldur	w8, [x29, #-36]
  435854:	stur	w8, [x29, #-224]
  435858:	stur	wzr, [x29, #-228]
  43585c:	ldur	w0, [x29, #-228]
  435860:	bl	406c08 <log_get_max_level_realm@plt>
  435864:	ldur	w8, [x29, #-220]
  435868:	and	w8, w8, #0x7
  43586c:	cmp	w0, w8
  435870:	b.lt	435908 <session_start_scope+0x570>  // b.tstop
  435874:	ldur	w8, [x29, #-228]
  435878:	ldur	w9, [x29, #-220]
  43587c:	orr	w0, w9, w8, lsl #10
  435880:	ldur	w1, [x29, #-224]
  435884:	ldur	x6, [x29, #-48]
  435888:	ldur	x10, [x29, #-32]
  43588c:	ldur	w8, [x29, #-36]
  435890:	sub	x9, x29, #0x1c
  435894:	stur	w0, [x9, #-256]
  435898:	mov	x0, x10
  43589c:	sub	x9, x29, #0x20
  4358a0:	stur	w1, [x9, #-256]
  4358a4:	mov	w1, w8
  4358a8:	sub	x8, x29, #0x28
  4358ac:	stur	x6, [x8, #-256]
  4358b0:	bl	4071d8 <bus_error_message@plt>
  4358b4:	sub	x8, x29, #0x1c
  4358b8:	ldur	w8, [x8, #-256]
  4358bc:	sub	x9, x29, #0x30
  4358c0:	stur	x0, [x9, #-256]
  4358c4:	mov	w0, w8
  4358c8:	sub	x8, x29, #0x20
  4358cc:	ldur	w1, [x8, #-256]
  4358d0:	ldur	x2, [x29, #-256]
  4358d4:	mov	w3, #0x29a                 	// #666
  4358d8:	adrp	x4, 44a000 <_fini+0x9c30>
  4358dc:	add	x4, x4, #0x126
  4358e0:	adrp	x5, 44a000 <_fini+0x9c30>
  4358e4:	add	x5, x5, #0x182
  4358e8:	sub	x8, x29, #0x28
  4358ec:	ldur	x6, [x8, #-256]
  4358f0:	sub	x8, x29, #0x30
  4358f4:	ldur	x7, [x8, #-256]
  4358f8:	bl	406c18 <log_internal_realm@plt>
  4358fc:	sub	x8, x29, #0x34
  435900:	stur	w0, [x8, #-256]
  435904:	b	435920 <session_start_scope+0x588>
  435908:	ldur	w0, [x29, #-224]
  43590c:	bl	406c28 <abs@plt>
  435910:	mov	w8, wzr
  435914:	subs	w8, w8, w0, uxtb
  435918:	sub	x9, x29, #0x34
  43591c:	stur	w8, [x9, #-256]
  435920:	sub	x8, x29, #0x34
  435924:	ldur	w8, [x8, #-256]
  435928:	stur	w8, [x29, #-232]
  43592c:	ldur	w8, [x29, #-232]
  435930:	stur	w8, [x29, #-4]
  435934:	mov	w8, #0x1                   	// #1
  435938:	stur	w8, [x29, #-60]
  43593c:	b	435968 <session_start_scope+0x5d0>
  435940:	ldur	x8, [x29, #-48]
  435944:	stur	x8, [x29, #-240]
  435948:	mov	x8, xzr
  43594c:	stur	x8, [x29, #-48]
  435950:	ldur	x8, [x29, #-240]
  435954:	stur	x8, [x29, #-248]
  435958:	ldur	x8, [x29, #-248]
  43595c:	ldur	x9, [x29, #-16]
  435960:	str	x8, [x9, #120]
  435964:	stur	wzr, [x29, #-60]
  435968:	sub	x0, x29, #0x30
  43596c:	bl	4333b8 <freep>
  435970:	ldur	w8, [x29, #-60]
  435974:	cbz	w8, 435980 <session_start_scope+0x5e8>
  435978:	b	43597c <session_start_scope+0x5e4>
  43597c:	b	4359a0 <session_start_scope+0x608>
  435980:	ldur	x8, [x29, #-16]
  435984:	ldr	x8, [x8]
  435988:	ldr	x0, [x8, #216]
  43598c:	ldur	x8, [x29, #-16]
  435990:	ldr	x1, [x8, #120]
  435994:	ldur	x2, [x29, #-16]
  435998:	bl	407228 <hashmap_put@plt>
  43599c:	stur	wzr, [x29, #-4]
  4359a0:	ldur	w0, [x29, #-4]
  4359a4:	mov	sp, x29
  4359a8:	ldr	x28, [sp, #16]
  4359ac:	ldp	x29, x30, [sp], #32
  4359b0:	ret

00000000004359b4 <session_stop>:
  4359b4:	sub	sp, sp, #0x30
  4359b8:	stp	x29, x30, [sp, #32]
  4359bc:	add	x29, sp, #0x20
  4359c0:	adrp	x8, 449000 <_fini+0x8c30>
  4359c4:	add	x8, x8, #0x6de
  4359c8:	add	x2, x8, #0x3
  4359cc:	str	x0, [sp, #16]
  4359d0:	and	w9, w1, #0x1
  4359d4:	strb	w9, [sp, #15]
  4359d8:	str	x2, [sp]
  4359dc:	ldr	x8, [sp, #16]
  4359e0:	cmp	x8, #0x0
  4359e4:	cset	w9, ne  // ne = any
  4359e8:	mov	w10, #0x1                   	// #1
  4359ec:	eor	w9, w9, #0x1
  4359f0:	eor	w9, w9, w10
  4359f4:	eor	w9, w9, w10
  4359f8:	and	w9, w9, #0x1
  4359fc:	mov	w0, w9
  435a00:	sxtw	x8, w0
  435a04:	cbz	x8, 435a2c <session_stop+0x78>
  435a08:	mov	w8, wzr
  435a0c:	mov	w0, w8
  435a10:	adrp	x1, 442000 <_fini+0x1c30>
  435a14:	add	x1, x1, #0xf2
  435a18:	ldr	x2, [sp]
  435a1c:	mov	w3, #0x30c                 	// #780
  435a20:	adrp	x4, 449000 <_fini+0x8c30>
  435a24:	add	x4, x4, #0xc4a
  435a28:	bl	406c68 <log_assert_failed_realm@plt>
  435a2c:	ldr	x8, [sp, #16]
  435a30:	ldr	x8, [x8, #40]
  435a34:	cbnz	x8, 435a44 <session_stop+0x90>
  435a38:	mov	w8, #0xffffff8c            	// #-116
  435a3c:	stur	w8, [x29, #-4]
  435a40:	b	435b14 <session_stop+0x160>
  435a44:	ldr	x8, [sp, #16]
  435a48:	ldrb	w9, [x8, #209]
  435a4c:	mov	w10, #0x1                   	// #1
  435a50:	lsr	w9, w9, w10
  435a54:	and	w9, w9, w10
  435a58:	tbnz	w9, #0, 435a64 <session_stop+0xb0>
  435a5c:	stur	wzr, [x29, #-4]
  435a60:	b	435b14 <session_stop+0x160>
  435a64:	ldr	x8, [sp, #16]
  435a68:	ldrb	w9, [x8, #209]
  435a6c:	mov	w10, #0x2                   	// #2
  435a70:	lsr	w9, w9, w10
  435a74:	and	w9, w9, #0x1
  435a78:	tbnz	w9, #0, 435a80 <session_stop+0xcc>
  435a7c:	b	435a88 <session_stop+0xd4>
  435a80:	stur	wzr, [x29, #-4]
  435a84:	b	435b14 <session_stop+0x160>
  435a88:	ldr	x8, [sp, #16]
  435a8c:	ldr	x0, [x8, #224]
  435a90:	bl	406d28 <sd_event_source_unref@plt>
  435a94:	ldr	x8, [sp, #16]
  435a98:	str	x0, [x8, #224]
  435a9c:	ldr	x8, [sp, #16]
  435aa0:	ldr	x8, [x8, #136]
  435aa4:	cbz	x8, 435ab8 <session_stop+0x104>
  435aa8:	ldr	x8, [sp, #16]
  435aac:	ldr	x0, [x8, #136]
  435ab0:	ldr	x1, [sp, #16]
  435ab4:	bl	42b48c <seat_evict_position>
  435ab8:	ldr	x0, [sp, #16]
  435abc:	bl	435b24 <session_remove_fifo>
  435ac0:	ldr	x0, [sp, #16]
  435ac4:	ldrb	w8, [sp, #15]
  435ac8:	and	w1, w8, #0x1
  435acc:	bl	435bf8 <session_stop_scope>
  435ad0:	str	w0, [sp, #8]
  435ad4:	ldr	x9, [sp, #16]
  435ad8:	ldrb	w8, [x9, #209]
  435adc:	and	w8, w8, #0xfffffffb
  435ae0:	orr	w8, w8, #0x4
  435ae4:	strb	w8, [x9, #209]
  435ae8:	ldr	x9, [sp, #16]
  435aec:	ldr	x0, [x9, #40]
  435af0:	bl	43c5ac <user_elect_display>
  435af4:	ldr	x0, [sp, #16]
  435af8:	bl	432bf8 <session_save>
  435afc:	ldr	x9, [sp, #16]
  435b00:	ldr	x9, [x9, #40]
  435b04:	mov	x0, x9
  435b08:	bl	43a320 <user_save>
  435b0c:	ldr	w8, [sp, #8]
  435b10:	stur	w8, [x29, #-4]
  435b14:	ldur	w0, [x29, #-4]
  435b18:	ldp	x29, x30, [sp, #32]
  435b1c:	add	sp, sp, #0x30
  435b20:	ret

0000000000435b24 <session_remove_fifo>:
  435b24:	sub	sp, sp, #0x20
  435b28:	stp	x29, x30, [sp, #16]
  435b2c:	add	x29, sp, #0x10
  435b30:	adrp	x8, 449000 <_fini+0x8c30>
  435b34:	add	x8, x8, #0x6de
  435b38:	add	x2, x8, #0x3
  435b3c:	str	x0, [sp, #8]
  435b40:	str	x2, [sp]
  435b44:	ldr	x8, [sp, #8]
  435b48:	cmp	x8, #0x0
  435b4c:	cset	w9, ne  // ne = any
  435b50:	mov	w10, #0x1                   	// #1
  435b54:	eor	w9, w9, #0x1
  435b58:	eor	w9, w9, w10
  435b5c:	eor	w9, w9, w10
  435b60:	and	w9, w9, #0x1
  435b64:	mov	w0, w9
  435b68:	sxtw	x8, w0
  435b6c:	cbz	x8, 435b94 <session_remove_fifo+0x70>
  435b70:	mov	w8, wzr
  435b74:	mov	w0, w8
  435b78:	adrp	x1, 442000 <_fini+0x1c30>
  435b7c:	add	x1, x1, #0xf2
  435b80:	ldr	x2, [sp]
  435b84:	mov	w3, #0x43b                 	// #1083
  435b88:	adrp	x4, 44a000 <_fini+0x9c30>
  435b8c:	add	x4, x4, #0x3a2
  435b90:	bl	406c68 <log_assert_failed_realm@plt>
  435b94:	ldr	x8, [sp, #8]
  435b98:	ldr	x0, [x8, #176]
  435b9c:	bl	406d28 <sd_event_source_unref@plt>
  435ba0:	ldr	x8, [sp, #8]
  435ba4:	str	x0, [x8, #176]
  435ba8:	ldr	x8, [sp, #8]
  435bac:	ldr	w0, [x8, #160]
  435bb0:	bl	406d38 <safe_close@plt>
  435bb4:	ldr	x8, [sp, #8]
  435bb8:	str	w0, [x8, #160]
  435bbc:	ldr	x8, [sp, #8]
  435bc0:	ldr	x8, [x8, #168]
  435bc4:	cbz	x8, 435bec <session_remove_fifo+0xc8>
  435bc8:	ldr	x8, [sp, #8]
  435bcc:	ldr	x0, [x8, #168]
  435bd0:	bl	4076e8 <unlink@plt>
  435bd4:	ldr	x8, [sp, #8]
  435bd8:	ldr	x8, [x8, #168]
  435bdc:	mov	x0, x8
  435be0:	bl	4328c0 <mfree>
  435be4:	ldr	x8, [sp, #8]
  435be8:	str	x0, [x8, #168]
  435bec:	ldp	x29, x30, [sp, #16]
  435bf0:	add	sp, sp, #0x20
  435bf4:	ret

0000000000435bf8 <session_stop_scope>:
  435bf8:	sub	sp, sp, #0x100
  435bfc:	stp	x29, x30, [sp, #240]
  435c00:	add	x29, sp, #0xf0
  435c04:	mov	w8, #0x1                   	// #1
  435c08:	adrp	x9, 449000 <_fini+0x8c30>
  435c0c:	add	x9, x9, #0x6de
  435c10:	add	x9, x9, #0x3
  435c14:	adrp	x10, 44a000 <_fini+0x9c30>
  435c18:	add	x10, x10, #0x1d0
  435c1c:	stur	x0, [x29, #-16]
  435c20:	and	w8, w1, w8
  435c24:	sturb	w8, [x29, #-17]
  435c28:	stur	xzr, [x29, #-48]
  435c2c:	stur	xzr, [x29, #-40]
  435c30:	stur	xzr, [x29, #-32]
  435c34:	stur	x9, [x29, #-112]
  435c38:	str	x10, [sp, #120]
  435c3c:	ldur	x8, [x29, #-16]
  435c40:	cmp	x8, #0x0
  435c44:	cset	w9, ne  // ne = any
  435c48:	mov	w10, #0x1                   	// #1
  435c4c:	eor	w9, w9, #0x1
  435c50:	eor	w9, w9, w10
  435c54:	eor	w9, w9, w10
  435c58:	and	w9, w9, #0x1
  435c5c:	mov	w0, w9
  435c60:	sxtw	x8, w0
  435c64:	cbz	x8, 435c8c <session_stop_scope+0x94>
  435c68:	mov	w8, wzr
  435c6c:	mov	w0, w8
  435c70:	adrp	x1, 442000 <_fini+0x1c30>
  435c74:	add	x1, x1, #0xf2
  435c78:	ldur	x2, [x29, #-112]
  435c7c:	mov	w3, #0x2e0                 	// #736
  435c80:	adrp	x4, 44a000 <_fini+0x9c30>
  435c84:	add	x4, x4, #0x1a7
  435c88:	bl	406c68 <log_assert_failed_realm@plt>
  435c8c:	ldur	x8, [x29, #-16]
  435c90:	ldr	x8, [x8, #120]
  435c94:	cbnz	x8, 435ca8 <session_stop_scope+0xb0>
  435c98:	stur	wzr, [x29, #-4]
  435c9c:	mov	w8, #0x1                   	// #1
  435ca0:	stur	w8, [x29, #-56]
  435ca4:	b	436020 <session_stop_scope+0x428>
  435ca8:	ldur	x8, [x29, #-16]
  435cac:	ldr	x0, [x8]
  435cb0:	ldur	x8, [x29, #-16]
  435cb4:	ldr	x1, [x8, #120]
  435cb8:	sub	x2, x29, #0x30
  435cbc:	bl	420e60 <manager_abandon_scope>
  435cc0:	stur	w0, [x29, #-52]
  435cc4:	ldur	w9, [x29, #-52]
  435cc8:	cmp	w9, #0x0
  435ccc:	cset	w9, ge  // ge = tcont
  435cd0:	tbnz	w9, #0, 435d84 <session_stop_scope+0x18c>
  435cd4:	mov	w8, #0x4                   	// #4
  435cd8:	stur	w8, [x29, #-60]
  435cdc:	ldur	w8, [x29, #-52]
  435ce0:	stur	w8, [x29, #-64]
  435ce4:	stur	wzr, [x29, #-68]
  435ce8:	ldur	w0, [x29, #-68]
  435cec:	bl	406c08 <log_get_max_level_realm@plt>
  435cf0:	ldur	w8, [x29, #-60]
  435cf4:	and	w8, w8, #0x7
  435cf8:	cmp	w0, w8
  435cfc:	b.lt	435d60 <session_stop_scope+0x168>  // b.tstop
  435d00:	ldur	w8, [x29, #-68]
  435d04:	ldur	w9, [x29, #-60]
  435d08:	orr	w0, w9, w8, lsl #10
  435d0c:	ldur	w1, [x29, #-64]
  435d10:	ldur	w8, [x29, #-52]
  435d14:	sub	x10, x29, #0x30
  435d18:	str	w0, [sp, #116]
  435d1c:	mov	x0, x10
  435d20:	str	w1, [sp, #112]
  435d24:	mov	w1, w8
  435d28:	bl	4071d8 <bus_error_message@plt>
  435d2c:	ldr	w8, [sp, #116]
  435d30:	str	x0, [sp, #104]
  435d34:	mov	w0, w8
  435d38:	ldr	w1, [sp, #112]
  435d3c:	ldur	x2, [x29, #-112]
  435d40:	mov	w3, #0x2ea                 	// #746
  435d44:	ldr	x4, [sp, #120]
  435d48:	adrp	x5, 44a000 <_fini+0x9c30>
  435d4c:	add	x5, x5, #0x1e3
  435d50:	ldr	x6, [sp, #104]
  435d54:	bl	406c18 <log_internal_realm@plt>
  435d58:	str	w0, [sp, #100]
  435d5c:	b	435d74 <session_stop_scope+0x17c>
  435d60:	ldur	w0, [x29, #-64]
  435d64:	bl	406c28 <abs@plt>
  435d68:	mov	w8, wzr
  435d6c:	subs	w8, w8, w0, uxtb
  435d70:	str	w8, [sp, #100]
  435d74:	ldr	w8, [sp, #100]
  435d78:	stur	w8, [x29, #-72]
  435d7c:	sub	x0, x29, #0x30
  435d80:	bl	4071e8 <sd_bus_error_free@plt>
  435d84:	ldur	x8, [x29, #-16]
  435d88:	ldr	x0, [x8, #128]
  435d8c:	bl	4328c0 <mfree>
  435d90:	ldur	x8, [x29, #-16]
  435d94:	str	x0, [x8, #128]
  435d98:	ldurb	w9, [x29, #-17]
  435d9c:	tbnz	w9, #0, 435dc0 <session_stop_scope+0x1c8>
  435da0:	ldur	x8, [x29, #-16]
  435da4:	ldr	x0, [x8]
  435da8:	ldur	x8, [x29, #-16]
  435dac:	ldr	x8, [x8, #40]
  435db0:	ldr	x1, [x8, #16]
  435db4:	bl	412948 <manager_shall_kill>
  435db8:	tbnz	w0, #0, 435dc0 <session_stop_scope+0x1c8>
  435dbc:	b	435f68 <session_stop_scope+0x370>
  435dc0:	ldur	x8, [x29, #-16]
  435dc4:	ldr	x0, [x8]
  435dc8:	ldur	x8, [x29, #-16]
  435dcc:	ldr	x1, [x8, #120]
  435dd0:	ldur	x8, [x29, #-16]
  435dd4:	add	x3, x8, #0x80
  435dd8:	sub	x2, x29, #0x30
  435ddc:	bl	420c40 <manager_stop_unit>
  435de0:	stur	w0, [x29, #-52]
  435de4:	ldur	w9, [x29, #-52]
  435de8:	cmp	w9, #0x0
  435dec:	cset	w9, ge  // ge = tcont
  435df0:	tbnz	w9, #0, 435f64 <session_stop_scope+0x36c>
  435df4:	ldurb	w8, [x29, #-17]
  435df8:	tbnz	w8, #0, 435e00 <session_stop_scope+0x208>
  435dfc:	b	435ebc <session_stop_scope+0x2c4>
  435e00:	mov	w8, #0x3                   	// #3
  435e04:	stur	w8, [x29, #-76]
  435e08:	ldur	w8, [x29, #-52]
  435e0c:	stur	w8, [x29, #-80]
  435e10:	stur	wzr, [x29, #-84]
  435e14:	ldur	w0, [x29, #-84]
  435e18:	bl	406c08 <log_get_max_level_realm@plt>
  435e1c:	ldur	w8, [x29, #-76]
  435e20:	and	w8, w8, #0x7
  435e24:	cmp	w0, w8
  435e28:	b.lt	435e8c <session_stop_scope+0x294>  // b.tstop
  435e2c:	ldur	w8, [x29, #-84]
  435e30:	ldur	w9, [x29, #-76]
  435e34:	orr	w0, w9, w8, lsl #10
  435e38:	ldur	w1, [x29, #-80]
  435e3c:	ldur	w8, [x29, #-52]
  435e40:	sub	x10, x29, #0x30
  435e44:	str	w0, [sp, #96]
  435e48:	mov	x0, x10
  435e4c:	str	w1, [sp, #92]
  435e50:	mov	w1, w8
  435e54:	bl	4071d8 <bus_error_message@plt>
  435e58:	ldr	w8, [sp, #96]
  435e5c:	str	x0, [sp, #80]
  435e60:	mov	w0, w8
  435e64:	ldr	w1, [sp, #92]
  435e68:	ldur	x2, [x29, #-112]
  435e6c:	mov	w3, #0x2f6                 	// #758
  435e70:	ldr	x4, [sp, #120]
  435e74:	adrp	x5, 44a000 <_fini+0x9c30>
  435e78:	add	x5, x5, #0x211
  435e7c:	ldr	x6, [sp, #80]
  435e80:	bl	406c18 <log_internal_realm@plt>
  435e84:	str	w0, [sp, #76]
  435e88:	b	435ea0 <session_stop_scope+0x2a8>
  435e8c:	ldur	w0, [x29, #-80]
  435e90:	bl	406c28 <abs@plt>
  435e94:	mov	w8, wzr
  435e98:	subs	w8, w8, w0, uxtb
  435e9c:	str	w8, [sp, #76]
  435ea0:	ldr	w8, [sp, #76]
  435ea4:	stur	w8, [x29, #-88]
  435ea8:	ldur	w8, [x29, #-88]
  435eac:	stur	w8, [x29, #-4]
  435eb0:	mov	w8, #0x1                   	// #1
  435eb4:	stur	w8, [x29, #-56]
  435eb8:	b	436020 <session_stop_scope+0x428>
  435ebc:	mov	w8, #0x4                   	// #4
  435ec0:	stur	w8, [x29, #-92]
  435ec4:	ldur	w8, [x29, #-52]
  435ec8:	stur	w8, [x29, #-96]
  435ecc:	stur	wzr, [x29, #-100]
  435ed0:	ldur	w0, [x29, #-100]
  435ed4:	bl	406c08 <log_get_max_level_realm@plt>
  435ed8:	ldur	w8, [x29, #-92]
  435edc:	and	w8, w8, #0x7
  435ee0:	cmp	w0, w8
  435ee4:	b.lt	435f48 <session_stop_scope+0x350>  // b.tstop
  435ee8:	ldur	w8, [x29, #-100]
  435eec:	ldur	w9, [x29, #-92]
  435ef0:	orr	w0, w9, w8, lsl #10
  435ef4:	ldur	w1, [x29, #-96]
  435ef8:	ldur	w8, [x29, #-52]
  435efc:	sub	x10, x29, #0x30
  435f00:	str	w0, [sp, #72]
  435f04:	mov	x0, x10
  435f08:	str	w1, [sp, #68]
  435f0c:	mov	w1, w8
  435f10:	bl	4071d8 <bus_error_message@plt>
  435f14:	ldr	w8, [sp, #72]
  435f18:	str	x0, [sp, #56]
  435f1c:	mov	w0, w8
  435f20:	ldr	w1, [sp, #68]
  435f24:	ldur	x2, [x29, #-112]
  435f28:	mov	w3, #0x2f8                 	// #760
  435f2c:	ldr	x4, [sp, #120]
  435f30:	adrp	x5, 44a000 <_fini+0x9c30>
  435f34:	add	x5, x5, #0x232
  435f38:	ldr	x6, [sp, #56]
  435f3c:	bl	406c18 <log_internal_realm@plt>
  435f40:	str	w0, [sp, #52]
  435f44:	b	435f5c <session_stop_scope+0x364>
  435f48:	ldur	w0, [x29, #-96]
  435f4c:	bl	406c28 <abs@plt>
  435f50:	mov	w8, wzr
  435f54:	subs	w8, w8, w0, uxtb
  435f58:	str	w8, [sp, #52]
  435f5c:	ldr	w8, [sp, #52]
  435f60:	stur	w8, [x29, #-104]
  435f64:	b	436014 <session_stop_scope+0x41c>
  435f68:	ldur	x8, [x29, #-16]
  435f6c:	ldr	w9, [x8, #24]
  435f70:	mov	w10, #0x6                   	// #6
  435f74:	mov	w11, #0x7                   	// #7
  435f78:	cmp	w9, #0x3
  435f7c:	csel	w9, w11, w10, eq  // eq = none
  435f80:	mov	w10, wzr
  435f84:	orr	w0, w10, w9
  435f88:	ldur	x8, [x29, #-16]
  435f8c:	ldr	x6, [x8, #8]
  435f90:	ldur	x8, [x29, #-16]
  435f94:	ldr	x8, [x8, #40]
  435f98:	ldr	x8, [x8, #16]
  435f9c:	ldur	x12, [x29, #-16]
  435fa0:	ldr	w9, [x12, #152]
  435fa4:	ldur	x12, [x29, #-16]
  435fa8:	ldr	x12, [x12, #8]
  435fac:	mov	w1, w10
  435fb0:	ldur	x2, [x29, #-112]
  435fb4:	mov	w3, #0x303                 	// #771
  435fb8:	ldr	x4, [sp, #120]
  435fbc:	adrp	x5, 449000 <_fini+0x8c30>
  435fc0:	add	x5, x5, #0xc04
  435fc4:	adrp	x7, 449000 <_fini+0x8c30>
  435fc8:	add	x7, x7, #0xc12
  435fcc:	mov	x13, sp
  435fd0:	str	x8, [x13]
  435fd4:	mov	x8, sp
  435fd8:	adrp	x13, 449000 <_fini+0x8c30>
  435fdc:	add	x13, x13, #0xc1d
  435fe0:	str	x13, [x8, #8]
  435fe4:	mov	x8, sp
  435fe8:	str	w9, [x8, #16]
  435fec:	mov	x8, sp
  435ff0:	adrp	x13, 44a000 <_fini+0x9c30>
  435ff4:	add	x13, x13, #0x25d
  435ff8:	str	x13, [x8, #24]
  435ffc:	mov	x8, sp
  436000:	str	x12, [x8, #32]
  436004:	mov	x8, sp
  436008:	mov	x12, xzr
  43600c:	str	x12, [x8, #40]
  436010:	bl	407288 <log_struct_internal@plt>
  436014:	stur	wzr, [x29, #-4]
  436018:	mov	w8, #0x1                   	// #1
  43601c:	stur	w8, [x29, #-56]
  436020:	sub	x0, x29, #0x30
  436024:	bl	4071e8 <sd_bus_error_free@plt>
  436028:	ldur	w0, [x29, #-4]
  43602c:	ldp	x29, x30, [sp, #240]
  436030:	add	sp, sp, #0x100
  436034:	ret

0000000000436038 <session_finalize>:
  436038:	sub	sp, sp, #0x70
  43603c:	stp	x29, x30, [sp, #96]
  436040:	add	x29, sp, #0x60
  436044:	adrp	x8, 449000 <_fini+0x8c30>
  436048:	add	x8, x8, #0x6de
  43604c:	add	x8, x8, #0x3
  436050:	stur	x0, [x29, #-16]
  436054:	stur	x8, [x29, #-32]
  436058:	ldur	x8, [x29, #-16]
  43605c:	cmp	x8, #0x0
  436060:	cset	w9, ne  // ne = any
  436064:	mov	w10, #0x1                   	// #1
  436068:	eor	w9, w9, #0x1
  43606c:	eor	w9, w9, w10
  436070:	eor	w9, w9, w10
  436074:	and	w9, w9, #0x1
  436078:	mov	w0, w9
  43607c:	sxtw	x8, w0
  436080:	cbz	x8, 4360a8 <session_finalize+0x70>
  436084:	mov	w8, wzr
  436088:	mov	w0, w8
  43608c:	adrp	x1, 442000 <_fini+0x1c30>
  436090:	add	x1, x1, #0xf2
  436094:	ldur	x2, [x29, #-32]
  436098:	mov	w3, #0x332                 	// #818
  43609c:	adrp	x4, 449000 <_fini+0x8c30>
  4360a0:	add	x4, x4, #0xc6d
  4360a4:	bl	406c68 <log_assert_failed_realm@plt>
  4360a8:	ldur	x8, [x29, #-16]
  4360ac:	ldr	x8, [x8, #40]
  4360b0:	cbnz	x8, 4360c0 <session_finalize+0x88>
  4360b4:	mov	w8, #0xffffff8c            	// #-116
  4360b8:	stur	w8, [x29, #-4]
  4360bc:	b	4362c0 <session_finalize+0x288>
  4360c0:	ldur	x8, [x29, #-16]
  4360c4:	ldrb	w9, [x8, #209]
  4360c8:	mov	w10, #0x1                   	// #1
  4360cc:	lsr	w9, w9, w10
  4360d0:	and	w9, w9, w10
  4360d4:	tbnz	w9, #0, 4360dc <session_finalize+0xa4>
  4360d8:	b	43619c <session_finalize+0x164>
  4360dc:	ldur	x8, [x29, #-16]
  4360e0:	ldr	w9, [x8, #24]
  4360e4:	mov	w10, #0x6                   	// #6
  4360e8:	mov	w11, #0x7                   	// #7
  4360ec:	cmp	w9, #0x3
  4360f0:	csel	w9, w11, w10, eq  // eq = none
  4360f4:	mov	w10, wzr
  4360f8:	orr	w0, w10, w9
  4360fc:	ldur	x8, [x29, #-16]
  436100:	ldr	x7, [x8, #8]
  436104:	ldur	x8, [x29, #-16]
  436108:	ldr	x8, [x8, #40]
  43610c:	ldr	x8, [x8, #16]
  436110:	ldur	x12, [x29, #-16]
  436114:	ldr	w9, [x12, #152]
  436118:	ldur	x12, [x29, #-16]
  43611c:	ldr	x12, [x12, #8]
  436120:	mov	w1, w10
  436124:	ldur	x2, [x29, #-32]
  436128:	mov	w3, #0x33d                 	// #829
  43612c:	adrp	x4, 449000 <_fini+0x8c30>
  436130:	add	x4, x4, #0xc8d
  436134:	adrp	x5, 449000 <_fini+0x8c30>
  436138:	add	x5, x5, #0xc9e
  43613c:	adrp	x6, 449000 <_fini+0x8c30>
  436140:	add	x6, x6, #0xc04
  436144:	mov	x13, sp
  436148:	adrp	x14, 449000 <_fini+0x8c30>
  43614c:	add	x14, x14, #0xc12
  436150:	str	x14, [x13]
  436154:	mov	x13, sp
  436158:	str	x8, [x13, #8]
  43615c:	mov	x8, sp
  436160:	adrp	x13, 449000 <_fini+0x8c30>
  436164:	add	x13, x13, #0xc1d
  436168:	str	x13, [x8, #16]
  43616c:	mov	x8, sp
  436170:	str	w9, [x8, #24]
  436174:	mov	x8, sp
  436178:	adrp	x13, 449000 <_fini+0x8c30>
  43617c:	add	x13, x13, #0xcca
  436180:	str	x13, [x8, #32]
  436184:	mov	x8, sp
  436188:	str	x12, [x8, #40]
  43618c:	mov	x8, sp
  436190:	mov	x12, xzr
  436194:	str	x12, [x8, #48]
  436198:	bl	407288 <log_struct_internal@plt>
  43619c:	ldur	x8, [x29, #-16]
  4361a0:	ldr	x0, [x8, #224]
  4361a4:	bl	406d28 <sd_event_source_unref@plt>
  4361a8:	ldur	x8, [x29, #-16]
  4361ac:	str	x0, [x8, #224]
  4361b0:	ldur	x8, [x29, #-16]
  4361b4:	ldr	x8, [x8, #136]
  4361b8:	cbz	x8, 4361cc <session_finalize+0x194>
  4361bc:	ldur	x8, [x29, #-16]
  4361c0:	ldr	x0, [x8, #136]
  4361c4:	ldur	x1, [x29, #-16]
  4361c8:	bl	42b48c <seat_evict_position>
  4361cc:	ldur	x8, [x29, #-16]
  4361d0:	ldr	x0, [x8, #240]
  4361d4:	bl	4327c4 <hashmap_first>
  4361d8:	stur	x0, [x29, #-24]
  4361dc:	cbz	x0, 4361ec <session_finalize+0x1b4>
  4361e0:	ldur	x0, [x29, #-24]
  4361e4:	bl	4307a4 <session_device_free>
  4361e8:	b	4361cc <session_finalize+0x194>
  4361ec:	ldur	x8, [x29, #-16]
  4361f0:	ldr	x0, [x8, #32]
  4361f4:	bl	4076e8 <unlink@plt>
  4361f8:	ldur	x8, [x29, #-16]
  4361fc:	mov	x0, x8
  436200:	bl	4362d0 <session_add_to_gc_queue>
  436204:	ldur	x8, [x29, #-16]
  436208:	ldr	x0, [x8, #40]
  43620c:	bl	43b73c <user_add_to_gc_queue>
  436210:	ldur	x8, [x29, #-16]
  436214:	ldrb	w9, [x8, #209]
  436218:	mov	w10, #0x1                   	// #1
  43621c:	lsr	w9, w9, w10
  436220:	and	w9, w9, w10
  436224:	tbnz	w9, #0, 43622c <session_finalize+0x1f4>
  436228:	b	43624c <session_finalize+0x214>
  43622c:	ldur	x0, [x29, #-16]
  436230:	mov	w8, wzr
  436234:	and	w1, w8, #0x1
  436238:	bl	42f380 <session_send_signal>
  43623c:	ldur	x9, [x29, #-16]
  436240:	ldrb	w8, [x9, #209]
  436244:	and	w8, w8, #0xfffffffd
  436248:	strb	w8, [x9, #209]
  43624c:	ldur	x8, [x29, #-16]
  436250:	ldr	x8, [x8, #136]
  436254:	cbz	x8, 436290 <session_finalize+0x258>
  436258:	ldur	x8, [x29, #-16]
  43625c:	ldr	x8, [x8, #136]
  436260:	ldr	x8, [x8, #32]
  436264:	ldur	x9, [x29, #-16]
  436268:	cmp	x8, x9
  43626c:	b.ne	436284 <session_finalize+0x24c>  // b.any
  436270:	ldur	x8, [x29, #-16]
  436274:	ldr	x0, [x8, #136]
  436278:	mov	x8, xzr
  43627c:	mov	x1, x8
  436280:	bl	42a3d4 <seat_set_active>
  436284:	ldur	x8, [x29, #-16]
  436288:	ldr	x0, [x8, #136]
  43628c:	bl	429674 <seat_save>
  436290:	ldur	x8, [x29, #-16]
  436294:	ldr	x0, [x8, #40]
  436298:	bl	43a320 <user_save>
  43629c:	ldur	x8, [x29, #-16]
  4362a0:	ldr	x8, [x8, #40]
  4362a4:	mov	x0, x8
  4362a8:	adrp	x1, 448000 <_fini+0x7c30>
  4362ac:	add	x1, x1, #0x593
  4362b0:	mov	x8, xzr
  4362b4:	mov	x2, x8
  4362b8:	bl	4395b4 <user_send_changed>
  4362bc:	stur	wzr, [x29, #-4]
  4362c0:	ldur	w0, [x29, #-4]
  4362c4:	ldp	x29, x30, [sp, #96]
  4362c8:	add	sp, sp, #0x70
  4362cc:	ret

00000000004362d0 <session_add_to_gc_queue>:
  4362d0:	sub	sp, sp, #0x30
  4362d4:	stp	x29, x30, [sp, #32]
  4362d8:	add	x29, sp, #0x20
  4362dc:	adrp	x8, 449000 <_fini+0x8c30>
  4362e0:	add	x8, x8, #0x6de
  4362e4:	add	x8, x8, #0x3
  4362e8:	stur	x0, [x29, #-8]
  4362ec:	str	x8, [sp]
  4362f0:	ldur	x8, [x29, #-8]
  4362f4:	cmp	x8, #0x0
  4362f8:	cset	w9, ne  // ne = any
  4362fc:	mov	w10, #0x1                   	// #1
  436300:	eor	w9, w9, #0x1
  436304:	eor	w9, w9, w10
  436308:	eor	w9, w9, w10
  43630c:	and	w9, w9, #0x1
  436310:	mov	w0, w9
  436314:	sxtw	x8, w0
  436318:	cbz	x8, 436340 <session_add_to_gc_queue+0x70>
  43631c:	mov	w8, wzr
  436320:	mov	w0, w8
  436324:	adrp	x1, 442000 <_fini+0x1c30>
  436328:	add	x1, x1, #0xf2
  43632c:	ldr	x2, [sp]
  436330:	mov	w3, #0x46e                 	// #1134
  436334:	adrp	x4, 449000 <_fini+0x8c30>
  436338:	add	x4, x4, #0xece
  43633c:	bl	406c68 <log_assert_failed_realm@plt>
  436340:	ldur	x8, [x29, #-8]
  436344:	ldrb	w9, [x8, #209]
  436348:	and	w9, w9, #0x1
  43634c:	tbnz	w9, #0, 436354 <session_add_to_gc_queue+0x84>
  436350:	b	436358 <session_add_to_gc_queue+0x88>
  436354:	b	436410 <session_add_to_gc_queue+0x140>
  436358:	ldur	x8, [x29, #-8]
  43635c:	ldr	x8, [x8]
  436360:	add	x8, x8, #0x58
  436364:	str	x8, [sp, #16]
  436368:	ldur	x8, [x29, #-8]
  43636c:	str	x8, [sp, #8]
  436370:	ldr	x8, [sp, #8]
  436374:	cmp	x8, #0x0
  436378:	cset	w9, ne  // ne = any
  43637c:	mov	w10, #0x1                   	// #1
  436380:	eor	w9, w9, #0x1
  436384:	eor	w9, w9, w10
  436388:	eor	w9, w9, w10
  43638c:	and	w9, w9, #0x1
  436390:	mov	w0, w9
  436394:	sxtw	x8, w0
  436398:	cbz	x8, 4363c0 <session_add_to_gc_queue+0xf0>
  43639c:	mov	w8, wzr
  4363a0:	mov	w0, w8
  4363a4:	adrp	x1, 441000 <_fini+0xc30>
  4363a8:	add	x1, x1, #0x6cc
  4363ac:	ldr	x2, [sp]
  4363b0:	mov	w3, #0x473                 	// #1139
  4363b4:	adrp	x4, 449000 <_fini+0x8c30>
  4363b8:	add	x4, x4, #0xece
  4363bc:	bl	406c68 <log_assert_failed_realm@plt>
  4363c0:	ldr	x8, [sp, #16]
  4363c4:	ldr	x8, [x8]
  4363c8:	ldr	x9, [sp, #8]
  4363cc:	str	x8, [x9, #288]
  4363d0:	cbz	x8, 4363e4 <session_add_to_gc_queue+0x114>
  4363d4:	ldr	x8, [sp, #8]
  4363d8:	ldr	x9, [sp, #8]
  4363dc:	ldr	x9, [x9, #288]
  4363e0:	str	x8, [x9, #296]
  4363e4:	ldr	x8, [sp, #8]
  4363e8:	mov	x9, xzr
  4363ec:	str	x9, [x8, #296]
  4363f0:	ldr	x8, [sp, #8]
  4363f4:	ldr	x9, [sp, #16]
  4363f8:	str	x8, [x9]
  4363fc:	ldur	x8, [x29, #-8]
  436400:	ldrb	w9, [x8, #209]
  436404:	and	w9, w9, #0xfffffffe
  436408:	orr	w9, w9, #0x1
  43640c:	strb	w9, [x8, #209]
  436410:	ldp	x29, x30, [sp, #32]
  436414:	add	sp, sp, #0x30
  436418:	ret

000000000043641c <session_release>:
  43641c:	sub	sp, sp, #0x50
  436420:	stp	x29, x30, [sp, #64]
  436424:	add	x29, sp, #0x40
  436428:	adrp	x8, 449000 <_fini+0x8c30>
  43642c:	add	x8, x8, #0x6de
  436430:	add	x2, x8, #0x3
  436434:	stur	x0, [x29, #-16]
  436438:	stur	x2, [x29, #-24]
  43643c:	ldur	x8, [x29, #-16]
  436440:	cmp	x8, #0x0
  436444:	cset	w9, ne  // ne = any
  436448:	mov	w10, #0x1                   	// #1
  43644c:	eor	w9, w9, #0x1
  436450:	eor	w9, w9, w10
  436454:	eor	w9, w9, w10
  436458:	and	w9, w9, #0x1
  43645c:	mov	w0, w9
  436460:	sxtw	x8, w0
  436464:	cbz	x8, 43648c <session_release+0x70>
  436468:	mov	w8, wzr
  43646c:	mov	w0, w8
  436470:	adrp	x1, 442000 <_fini+0x1c30>
  436474:	add	x1, x1, #0xf2
  436478:	ldur	x2, [x29, #-24]
  43647c:	mov	w3, #0x369                 	// #873
  436480:	adrp	x4, 449000 <_fini+0x8c30>
  436484:	add	x4, x4, #0xce6
  436488:	bl	406c68 <log_assert_failed_realm@plt>
  43648c:	ldur	x8, [x29, #-16]
  436490:	ldrb	w9, [x8, #209]
  436494:	mov	w10, #0x1                   	// #1
  436498:	lsr	w9, w9, w10
  43649c:	and	w9, w9, w10
  4364a0:	tbnz	w9, #0, 4364a8 <session_release+0x8c>
  4364a4:	b	4364c4 <session_release+0xa8>
  4364a8:	ldur	x8, [x29, #-16]
  4364ac:	ldrb	w9, [x8, #209]
  4364b0:	mov	w10, #0x2                   	// #2
  4364b4:	lsr	w9, w9, w10
  4364b8:	and	w9, w9, #0x1
  4364bc:	tbnz	w9, #0, 4364c4 <session_release+0xa8>
  4364c0:	b	4364cc <session_release+0xb0>
  4364c4:	stur	wzr, [x29, #-4]
  4364c8:	b	43654c <session_release+0x130>
  4364cc:	ldur	x8, [x29, #-16]
  4364d0:	ldr	x8, [x8, #224]
  4364d4:	cbz	x8, 4364e0 <session_release+0xc4>
  4364d8:	stur	wzr, [x29, #-4]
  4364dc:	b	43654c <session_release+0x130>
  4364e0:	ldur	x8, [x29, #-16]
  4364e4:	ldr	x8, [x8]
  4364e8:	ldr	x0, [x8]
  4364ec:	ldur	x8, [x29, #-16]
  4364f0:	add	x1, x8, #0xe0
  4364f4:	mov	w9, #0x1                   	// #1
  4364f8:	str	x0, [sp, #32]
  4364fc:	mov	w0, w9
  436500:	str	x1, [sp, #24]
  436504:	str	w9, [sp, #20]
  436508:	bl	406ca8 <now@plt>
  43650c:	mov	x1, #0x2d00                	// #11520
  436510:	movk	x1, #0x131, lsl #16
  436514:	bl	43655c <usec_add>
  436518:	ldur	x6, [x29, #-16]
  43651c:	ldr	x8, [sp, #32]
  436520:	str	x0, [sp, #8]
  436524:	mov	x0, x8
  436528:	ldr	x1, [sp, #24]
  43652c:	ldr	w2, [sp, #20]
  436530:	ldr	x3, [sp, #8]
  436534:	mov	x10, xzr
  436538:	mov	x4, x10
  43653c:	adrp	x5, 436000 <session_stop_scope+0x408>
  436540:	add	x5, x5, #0x5b8
  436544:	bl	407028 <sd_event_add_time@plt>
  436548:	stur	w0, [x29, #-4]
  43654c:	ldur	w0, [x29, #-4]
  436550:	ldp	x29, x30, [sp, #64]
  436554:	add	sp, sp, #0x50
  436558:	ret

000000000043655c <usec_add>:
  43655c:	sub	sp, sp, #0x20
  436560:	str	x0, [sp, #16]
  436564:	str	x1, [sp, #8]
  436568:	ldr	x8, [sp, #16]
  43656c:	ldr	x9, [sp, #8]
  436570:	add	x8, x8, x9
  436574:	str	x8, [sp]
  436578:	ldr	x8, [sp]
  43657c:	ldr	x9, [sp, #16]
  436580:	cmp	x8, x9
  436584:	b.cc	436598 <usec_add+0x3c>  // b.lo, b.ul, b.last
  436588:	ldr	x8, [sp]
  43658c:	ldr	x9, [sp, #8]
  436590:	cmp	x8, x9
  436594:	b.cs	4365a4 <usec_add+0x48>  // b.hs, b.nlast
  436598:	mov	x8, #0xffffffffffffffff    	// #-1
  43659c:	str	x8, [sp, #24]
  4365a0:	b	4365ac <usec_add+0x50>
  4365a4:	ldr	x8, [sp]
  4365a8:	str	x8, [sp, #24]
  4365ac:	ldr	x0, [sp, #24]
  4365b0:	add	sp, sp, #0x20
  4365b4:	ret

00000000004365b8 <release_timeout_callback>:
  4365b8:	sub	sp, sp, #0x40
  4365bc:	stp	x29, x30, [sp, #48]
  4365c0:	add	x29, sp, #0x30
  4365c4:	adrp	x8, 449000 <_fini+0x8c30>
  4365c8:	add	x8, x8, #0x6de
  4365cc:	add	x8, x8, #0x3
  4365d0:	stur	x0, [x29, #-8]
  4365d4:	stur	x1, [x29, #-16]
  4365d8:	str	x2, [sp, #24]
  4365dc:	ldr	x9, [sp, #24]
  4365e0:	str	x9, [sp, #16]
  4365e4:	str	x8, [sp, #8]
  4365e8:	ldur	x8, [x29, #-8]
  4365ec:	cmp	x8, #0x0
  4365f0:	cset	w9, ne  // ne = any
  4365f4:	mov	w10, #0x1                   	// #1
  4365f8:	eor	w9, w9, #0x1
  4365fc:	eor	w9, w9, w10
  436600:	eor	w9, w9, w10
  436604:	and	w9, w9, #0x1
  436608:	mov	w0, w9
  43660c:	sxtw	x8, w0
  436610:	cbz	x8, 436638 <release_timeout_callback+0x80>
  436614:	mov	w8, wzr
  436618:	mov	w0, w8
  43661c:	adrp	x1, 44a000 <_fini+0x9c30>
  436620:	add	x1, x1, #0x29b
  436624:	ldr	x2, [sp, #8]
  436628:	mov	w3, #0x361                 	// #865
  43662c:	adrp	x4, 44a000 <_fini+0x9c30>
  436630:	add	x4, x4, #0x29e
  436634:	bl	406c68 <log_assert_failed_realm@plt>
  436638:	ldr	x8, [sp, #16]
  43663c:	cmp	x8, #0x0
  436640:	cset	w9, ne  // ne = any
  436644:	mov	w10, #0x1                   	// #1
  436648:	eor	w9, w9, #0x1
  43664c:	eor	w9, w9, w10
  436650:	eor	w9, w9, w10
  436654:	and	w9, w9, #0x1
  436658:	mov	w0, w9
  43665c:	sxtw	x8, w0
  436660:	cbz	x8, 436688 <release_timeout_callback+0xd0>
  436664:	mov	w8, wzr
  436668:	mov	w0, w8
  43666c:	adrp	x1, 442000 <_fini+0x1c30>
  436670:	add	x1, x1, #0xf2
  436674:	ldr	x2, [sp, #8]
  436678:	mov	w3, #0x362                 	// #866
  43667c:	adrp	x4, 44a000 <_fini+0x9c30>
  436680:	add	x4, x4, #0x29e
  436684:	bl	406c68 <log_assert_failed_realm@plt>
  436688:	ldr	x0, [sp, #16]
  43668c:	mov	w8, wzr
  436690:	and	w1, w8, #0x1
  436694:	bl	4359b4 <session_stop>
  436698:	mov	w8, wzr
  43669c:	mov	w0, w8
  4366a0:	ldp	x29, x30, [sp, #48]
  4366a4:	add	sp, sp, #0x40
  4366a8:	ret

00000000004366ac <session_get_idle_hint>:
  4366ac:	sub	sp, sp, #0x50
  4366b0:	stp	x29, x30, [sp, #64]
  4366b4:	add	x29, sp, #0x40
  4366b8:	adrp	x8, 449000 <_fini+0x8c30>
  4366bc:	add	x8, x8, #0x6de
  4366c0:	add	x2, x8, #0x3
  4366c4:	stur	x0, [x29, #-16]
  4366c8:	stur	x1, [x29, #-24]
  4366cc:	str	xzr, [sp, #32]
  4366d0:	str	x2, [sp, #8]
  4366d4:	ldur	x8, [x29, #-16]
  4366d8:	cmp	x8, #0x0
  4366dc:	cset	w9, ne  // ne = any
  4366e0:	mov	w10, #0x1                   	// #1
  4366e4:	eor	w9, w9, #0x1
  4366e8:	eor	w9, w9, w10
  4366ec:	eor	w9, w9, w10
  4366f0:	and	w9, w9, #0x1
  4366f4:	mov	w0, w9
  4366f8:	sxtw	x8, w0
  4366fc:	cbz	x8, 436724 <session_get_idle_hint+0x78>
  436700:	mov	w8, wzr
  436704:	mov	w0, w8
  436708:	adrp	x1, 442000 <_fini+0x1c30>
  43670c:	add	x1, x1, #0xf2
  436710:	ldr	x2, [sp, #8]
  436714:	mov	w3, #0x3aa                 	// #938
  436718:	adrp	x4, 449000 <_fini+0x8c30>
  43671c:	add	x4, x4, #0xd28
  436720:	bl	406c68 <log_assert_failed_realm@plt>
  436724:	ldur	x8, [x29, #-16]
  436728:	ldrb	w9, [x8, #184]
  43672c:	tbnz	w9, #0, 436734 <session_get_idle_hint+0x88>
  436730:	b	436760 <session_get_idle_hint+0xb4>
  436734:	ldur	x8, [x29, #-24]
  436738:	cbz	x8, 43674c <session_get_idle_hint+0xa0>
  43673c:	ldur	x8, [x29, #-24]
  436740:	ldur	x9, [x29, #-16]
  436744:	ldr	q0, [x9, #192]
  436748:	str	q0, [x8]
  43674c:	ldur	x8, [x29, #-16]
  436750:	ldrb	w9, [x8, #184]
  436754:	and	w9, w9, #0x1
  436758:	stur	w9, [x29, #-4]
  43675c:	b	4368ac <session_get_idle_hint+0x200>
  436760:	mov	w8, #0x0                   	// #0
  436764:	strb	w8, [sp, #19]
  436768:	ldur	x9, [x29, #-16]
  43676c:	ldr	w8, [x9, #20]
  436770:	subs	w8, w8, #0x2
  436774:	cmp	w8, #0x2
  436778:	cset	w8, ls  // ls = plast
  43677c:	eor	w8, w8, #0x1
  436780:	tbnz	w8, #0, 436794 <session_get_idle_hint+0xe8>
  436784:	b	436788 <session_get_idle_hint+0xdc>
  436788:	mov	w8, #0x1                   	// #1
  43678c:	strb	w8, [sp, #19]
  436790:	b	436794 <session_get_idle_hint+0xe8>
  436794:	ldrb	w8, [sp, #19]
  436798:	and	w8, w8, #0x1
  43679c:	strb	w8, [sp, #18]
  4367a0:	ldrb	w8, [sp, #18]
  4367a4:	tbnz	w8, #0, 4367ac <session_get_idle_hint+0x100>
  4367a8:	b	4367b0 <session_get_idle_hint+0x104>
  4367ac:	b	436820 <session_get_idle_hint+0x174>
  4367b0:	ldur	x8, [x29, #-16]
  4367b4:	ldr	x8, [x8, #72]
  4367b8:	cbz	x8, 4367e4 <session_get_idle_hint+0x138>
  4367bc:	ldur	x8, [x29, #-16]
  4367c0:	ldr	x0, [x8, #72]
  4367c4:	add	x1, sp, #0x20
  4367c8:	bl	4368bc <get_tty_atime>
  4367cc:	str	w0, [sp, #20]
  4367d0:	ldr	w9, [sp, #20]
  4367d4:	cmp	w9, #0x0
  4367d8:	cset	w9, lt  // lt = tstop
  4367dc:	tbnz	w9, #0, 4367e4 <session_get_idle_hint+0x138>
  4367e0:	b	436840 <session_get_idle_hint+0x194>
  4367e4:	ldur	x8, [x29, #-16]
  4367e8:	ldr	w0, [x8, #152]
  4367ec:	bl	432854 <pid_is_valid>
  4367f0:	tbnz	w0, #0, 4367f8 <session_get_idle_hint+0x14c>
  4367f4:	b	436820 <session_get_idle_hint+0x174>
  4367f8:	ldur	x8, [x29, #-16]
  4367fc:	ldr	w0, [x8, #152]
  436800:	add	x1, sp, #0x20
  436804:	bl	436a9c <get_process_ctty_atime>
  436808:	str	w0, [sp, #20]
  43680c:	ldr	w9, [sp, #20]
  436810:	cmp	w9, #0x0
  436814:	cset	w9, lt  // lt = tstop
  436818:	tbnz	w9, #0, 436820 <session_get_idle_hint+0x174>
  43681c:	b	436840 <session_get_idle_hint+0x194>
  436820:	ldur	x8, [x29, #-24]
  436824:	cbz	x8, 436838 <session_get_idle_hint+0x18c>
  436828:	ldur	x8, [x29, #-24]
  43682c:	ldur	x9, [x29, #-16]
  436830:	ldr	q0, [x9, #192]
  436834:	str	q0, [x8]
  436838:	stur	wzr, [x29, #-4]
  43683c:	b	4368ac <session_get_idle_hint+0x200>
  436840:	ldur	x8, [x29, #-24]
  436844:	cbz	x8, 436854 <session_get_idle_hint+0x1a8>
  436848:	ldur	x0, [x29, #-24]
  43684c:	ldr	x1, [sp, #32]
  436850:	bl	407cc8 <dual_timestamp_from_realtime@plt>
  436854:	mov	w8, wzr
  436858:	mov	w0, w8
  43685c:	bl	406ca8 <now@plt>
  436860:	str	x0, [sp, #24]
  436864:	ldur	x9, [x29, #-16]
  436868:	ldr	x9, [x9]
  43686c:	ldr	x9, [x9, #376]
  436870:	cmp	x9, #0x0
  436874:	cset	w8, hi  // hi = pmore
  436878:	tbnz	w8, #0, 436884 <session_get_idle_hint+0x1d8>
  43687c:	stur	wzr, [x29, #-4]
  436880:	b	4368ac <session_get_idle_hint+0x200>
  436884:	ldr	x8, [sp, #32]
  436888:	ldur	x9, [x29, #-16]
  43688c:	ldr	x9, [x9]
  436890:	ldr	x9, [x9, #376]
  436894:	add	x8, x8, x9
  436898:	ldr	x9, [sp, #24]
  43689c:	cmp	x8, x9
  4368a0:	cset	w10, ls  // ls = plast
  4368a4:	and	w10, w10, #0x1
  4368a8:	stur	w10, [x29, #-4]
  4368ac:	ldur	w0, [x29, #-4]
  4368b0:	ldp	x29, x30, [sp, #64]
  4368b4:	add	sp, sp, #0x50
  4368b8:	ret

00000000004368bc <get_tty_atime>:
  4368bc:	sub	sp, sp, #0xd0
  4368c0:	stp	x29, x30, [sp, #192]
  4368c4:	add	x29, sp, #0xc0
  4368c8:	sub	x8, x29, #0x20
  4368cc:	mov	x9, xzr
  4368d0:	adrp	x10, 449000 <_fini+0x8c30>
  4368d4:	add	x10, x10, #0x6de
  4368d8:	add	x10, x10, #0x3
  4368dc:	str	x0, [x8, #16]
  4368e0:	str	x1, [x8, #8]
  4368e4:	str	x9, [x8]
  4368e8:	str	x8, [sp, #16]
  4368ec:	str	x10, [sp, #8]
  4368f0:	ldr	x8, [sp, #16]
  4368f4:	ldr	x9, [x8, #16]
  4368f8:	cmp	x9, #0x0
  4368fc:	cset	w10, ne  // ne = any
  436900:	mov	w11, #0x1                   	// #1
  436904:	eor	w10, w10, #0x1
  436908:	eor	w10, w10, w11
  43690c:	eor	w10, w10, w11
  436910:	and	w10, w10, #0x1
  436914:	mov	w0, w10
  436918:	sxtw	x9, w0
  43691c:	cbz	x9, 436944 <get_tty_atime+0x88>
  436920:	mov	w8, wzr
  436924:	mov	w0, w8
  436928:	adrp	x1, 44a000 <_fini+0x9c30>
  43692c:	add	x1, x1, #0x2e0
  436930:	ldr	x2, [sp, #8]
  436934:	mov	w3, #0x385                 	// #901
  436938:	adrp	x4, 44a000 <_fini+0x9c30>
  43693c:	add	x4, x4, #0x2e4
  436940:	bl	406c68 <log_assert_failed_realm@plt>
  436944:	ldr	x8, [sp, #16]
  436948:	ldr	x9, [x8, #8]
  43694c:	cmp	x9, #0x0
  436950:	cset	w10, ne  // ne = any
  436954:	mov	w11, #0x1                   	// #1
  436958:	eor	w10, w10, #0x1
  43695c:	eor	w10, w10, w11
  436960:	eor	w10, w10, w11
  436964:	and	w10, w10, #0x1
  436968:	mov	w0, w10
  43696c:	sxtw	x9, w0
  436970:	cbz	x9, 436998 <get_tty_atime+0xdc>
  436974:	mov	w8, wzr
  436978:	mov	w0, w8
  43697c:	adrp	x1, 44a000 <_fini+0x9c30>
  436980:	add	x1, x1, #0x30e
  436984:	ldr	x2, [sp, #8]
  436988:	mov	w3, #0x386                 	// #902
  43698c:	adrp	x4, 44a000 <_fini+0x9c30>
  436990:	add	x4, x4, #0x2e4
  436994:	bl	406c68 <log_assert_failed_realm@plt>
  436998:	ldr	x8, [sp, #16]
  43699c:	ldr	x0, [x8, #16]
  4369a0:	bl	407cd8 <path_is_absolute@plt>
  4369a4:	tbnz	w0, #0, 4369f8 <get_tty_atime+0x13c>
  4369a8:	ldr	x8, [sp, #16]
  4369ac:	ldr	x1, [x8, #16]
  4369b0:	adrp	x0, 44a000 <_fini+0x9c30>
  4369b4:	add	x0, x0, #0x314
  4369b8:	mov	x9, #0xffffffffffffffff    	// #-1
  4369bc:	mov	x2, x9
  4369c0:	bl	4078e8 <path_join_internal@plt>
  4369c4:	ldr	x8, [sp, #16]
  4369c8:	str	x0, [x8]
  4369cc:	ldr	x9, [x8]
  4369d0:	cbnz	x9, 4369e8 <get_tty_atime+0x12c>
  4369d4:	mov	w8, #0xfffffff4            	// #-12
  4369d8:	stur	w8, [x29, #-4]
  4369dc:	mov	w8, #0x1                   	// #1
  4369e0:	str	w8, [sp, #28]
  4369e4:	b	436a84 <get_tty_atime+0x1c8>
  4369e8:	ldr	x8, [sp, #16]
  4369ec:	ldr	x9, [x8]
  4369f0:	str	x9, [x8, #16]
  4369f4:	b	436a24 <get_tty_atime+0x168>
  4369f8:	ldr	x8, [sp, #16]
  4369fc:	ldr	x0, [x8, #16]
  436a00:	adrp	x1, 442000 <_fini+0x1c30>
  436a04:	add	x1, x1, #0xb32
  436a08:	bl	407418 <path_startswith@plt>
  436a0c:	cbnz	x0, 436a24 <get_tty_atime+0x168>
  436a10:	mov	w8, #0xfffffffe            	// #-2
  436a14:	stur	w8, [x29, #-4]
  436a18:	mov	w8, #0x1                   	// #1
  436a1c:	str	w8, [sp, #28]
  436a20:	b	436a84 <get_tty_atime+0x1c8>
  436a24:	ldr	x8, [sp, #16]
  436a28:	ldr	x0, [x8, #16]
  436a2c:	add	x1, sp, #0x20
  436a30:	bl	4403c0 <lstat64>
  436a34:	cmp	w0, #0x0
  436a38:	cset	w9, ge  // ge = tcont
  436a3c:	tbnz	w9, #0, 436a60 <get_tty_atime+0x1a4>
  436a40:	bl	406e08 <__errno_location@plt>
  436a44:	ldr	w8, [x0]
  436a48:	mov	w9, wzr
  436a4c:	subs	w8, w9, w8
  436a50:	stur	w8, [x29, #-4]
  436a54:	mov	w8, #0x1                   	// #1
  436a58:	str	w8, [sp, #28]
  436a5c:	b	436a84 <get_tty_atime+0x1c8>
  436a60:	add	x8, sp, #0x20
  436a64:	add	x0, x8, #0x48
  436a68:	bl	407ce8 <timespec_load@plt>
  436a6c:	ldr	x8, [sp, #16]
  436a70:	ldr	x9, [x8, #8]
  436a74:	str	x0, [x9]
  436a78:	stur	wzr, [x29, #-4]
  436a7c:	mov	w10, #0x1                   	// #1
  436a80:	str	w10, [sp, #28]
  436a84:	sub	x0, x29, #0x20
  436a88:	bl	4333b8 <freep>
  436a8c:	ldur	w0, [x29, #-4]
  436a90:	ldp	x29, x30, [sp, #192]
  436a94:	add	sp, sp, #0xd0
  436a98:	ret

0000000000436a9c <get_process_ctty_atime>:
  436a9c:	sub	sp, sp, #0x40
  436aa0:	stp	x29, x30, [sp, #48]
  436aa4:	add	x29, sp, #0x30
  436aa8:	mov	x8, xzr
  436aac:	adrp	x9, 449000 <_fini+0x8c30>
  436ab0:	add	x9, x9, #0x6de
  436ab4:	add	x9, x9, #0x3
  436ab8:	stur	w0, [x29, #-8]
  436abc:	stur	x1, [x29, #-16]
  436ac0:	str	x8, [sp, #24]
  436ac4:	str	x9, [sp, #8]
  436ac8:	ldur	w8, [x29, #-8]
  436acc:	cmp	w8, #0x0
  436ad0:	cset	w8, gt
  436ad4:	mov	w9, #0x1                   	// #1
  436ad8:	eor	w8, w8, #0x1
  436adc:	eor	w8, w8, w9
  436ae0:	eor	w8, w8, w9
  436ae4:	and	w8, w8, #0x1
  436ae8:	mov	w0, w8
  436aec:	sxtw	x10, w0
  436af0:	cbz	x10, 436b18 <get_process_ctty_atime+0x7c>
  436af4:	mov	w8, wzr
  436af8:	mov	w0, w8
  436afc:	adrp	x1, 44a000 <_fini+0x9c30>
  436b00:	add	x1, x1, #0x319
  436b04:	ldr	x2, [sp, #8]
  436b08:	mov	w3, #0x39c                 	// #924
  436b0c:	adrp	x4, 44a000 <_fini+0x9c30>
  436b10:	add	x4, x4, #0x321
  436b14:	bl	406c68 <log_assert_failed_realm@plt>
  436b18:	ldur	x8, [x29, #-16]
  436b1c:	cmp	x8, #0x0
  436b20:	cset	w9, ne  // ne = any
  436b24:	mov	w10, #0x1                   	// #1
  436b28:	eor	w9, w9, #0x1
  436b2c:	eor	w9, w9, w10
  436b30:	eor	w9, w9, w10
  436b34:	and	w9, w9, #0x1
  436b38:	mov	w0, w9
  436b3c:	sxtw	x8, w0
  436b40:	cbz	x8, 436b68 <get_process_ctty_atime+0xcc>
  436b44:	mov	w8, wzr
  436b48:	mov	w0, w8
  436b4c:	adrp	x1, 44a000 <_fini+0x9c30>
  436b50:	add	x1, x1, #0x30e
  436b54:	ldr	x2, [sp, #8]
  436b58:	mov	w3, #0x39d                 	// #925
  436b5c:	adrp	x4, 44a000 <_fini+0x9c30>
  436b60:	add	x4, x4, #0x321
  436b64:	bl	406c68 <log_assert_failed_realm@plt>
  436b68:	ldur	w0, [x29, #-8]
  436b6c:	mov	x8, xzr
  436b70:	mov	x1, x8
  436b74:	add	x2, sp, #0x18
  436b78:	bl	407cf8 <get_ctty@plt>
  436b7c:	str	w0, [sp, #20]
  436b80:	ldr	w9, [sp, #20]
  436b84:	cmp	w9, #0x0
  436b88:	cset	w9, ge  // ge = tcont
  436b8c:	tbnz	w9, #0, 436ba4 <get_process_ctty_atime+0x108>
  436b90:	ldr	w8, [sp, #20]
  436b94:	stur	w8, [x29, #-4]
  436b98:	mov	w8, #0x1                   	// #1
  436b9c:	str	w8, [sp, #16]
  436ba0:	b	436bbc <get_process_ctty_atime+0x120>
  436ba4:	ldr	x0, [sp, #24]
  436ba8:	ldur	x1, [x29, #-16]
  436bac:	bl	4368bc <get_tty_atime>
  436bb0:	stur	w0, [x29, #-4]
  436bb4:	mov	w8, #0x1                   	// #1
  436bb8:	str	w8, [sp, #16]
  436bbc:	add	x0, sp, #0x18
  436bc0:	bl	4333b8 <freep>
  436bc4:	ldur	w0, [x29, #-4]
  436bc8:	ldp	x29, x30, [sp, #48]
  436bcc:	add	sp, sp, #0x40
  436bd0:	ret

0000000000436bd4 <session_set_idle_hint>:
  436bd4:	sub	sp, sp, #0x50
  436bd8:	stp	x29, x30, [sp, #64]
  436bdc:	add	x29, sp, #0x40
  436be0:	adrp	x8, 443000 <_fini+0x2c30>
  436be4:	add	x8, x8, #0x27c
  436be8:	adrp	x9, 443000 <_fini+0x2c30>
  436bec:	add	x9, x9, #0x285
  436bf0:	adrp	x10, 443000 <_fini+0x2c30>
  436bf4:	add	x10, x10, #0x293
  436bf8:	adrp	x11, 449000 <_fini+0x8c30>
  436bfc:	add	x11, x11, #0x6de
  436c00:	add	x2, x11, #0x3
  436c04:	stur	x0, [x29, #-8]
  436c08:	and	w12, w1, #0x1
  436c0c:	sturb	w12, [x29, #-9]
  436c10:	stur	x8, [x29, #-24]
  436c14:	str	x9, [sp, #32]
  436c18:	str	x10, [sp, #24]
  436c1c:	str	x2, [sp, #16]
  436c20:	ldur	x8, [x29, #-8]
  436c24:	cmp	x8, #0x0
  436c28:	cset	w9, ne  // ne = any
  436c2c:	mov	w10, #0x1                   	// #1
  436c30:	eor	w9, w9, #0x1
  436c34:	eor	w9, w9, w10
  436c38:	eor	w9, w9, w10
  436c3c:	and	w9, w9, #0x1
  436c40:	mov	w0, w9
  436c44:	sxtw	x8, w0
  436c48:	cbz	x8, 436c70 <session_set_idle_hint+0x9c>
  436c4c:	mov	w8, wzr
  436c50:	mov	w0, w8
  436c54:	adrp	x1, 442000 <_fini+0x1c30>
  436c58:	add	x1, x1, #0xf2
  436c5c:	ldr	x2, [sp, #16]
  436c60:	mov	w3, #0x3dc                 	// #988
  436c64:	adrp	x4, 449000 <_fini+0x8c30>
  436c68:	add	x4, x4, #0xd5f
  436c6c:	bl	406c68 <log_assert_failed_realm@plt>
  436c70:	ldur	x8, [x29, #-8]
  436c74:	ldrb	w9, [x8, #184]
  436c78:	and	w9, w9, #0x1
  436c7c:	ldurb	w10, [x29, #-9]
  436c80:	and	w10, w10, #0x1
  436c84:	cmp	w9, w10
  436c88:	b.ne	436c90 <session_set_idle_hint+0xbc>  // b.any
  436c8c:	b	436d3c <session_set_idle_hint+0x168>
  436c90:	ldurb	w8, [x29, #-9]
  436c94:	ldur	x9, [x29, #-8]
  436c98:	and	w8, w8, #0x1
  436c9c:	strb	w8, [x9, #184]
  436ca0:	ldur	x9, [x29, #-8]
  436ca4:	add	x0, x9, #0xc0
  436ca8:	bl	4079d8 <dual_timestamp_get@plt>
  436cac:	ldur	x9, [x29, #-8]
  436cb0:	mov	x0, x9
  436cb4:	ldur	x1, [x29, #-24]
  436cb8:	ldr	x2, [sp, #32]
  436cbc:	ldr	x3, [sp, #24]
  436cc0:	mov	x9, xzr
  436cc4:	mov	x4, x9
  436cc8:	bl	42f4a0 <session_send_changed>
  436ccc:	ldur	x9, [x29, #-8]
  436cd0:	ldr	x9, [x9, #136]
  436cd4:	cbz	x9, 436cf8 <session_set_idle_hint+0x124>
  436cd8:	ldur	x8, [x29, #-8]
  436cdc:	ldr	x0, [x8, #136]
  436ce0:	ldur	x1, [x29, #-24]
  436ce4:	ldr	x2, [sp, #32]
  436ce8:	ldr	x3, [sp, #24]
  436cec:	mov	x8, xzr
  436cf0:	mov	x4, x8
  436cf4:	bl	428aec <seat_send_changed>
  436cf8:	ldur	x8, [x29, #-8]
  436cfc:	ldr	x0, [x8, #40]
  436d00:	ldur	x1, [x29, #-24]
  436d04:	ldr	x2, [sp, #32]
  436d08:	ldr	x3, [sp, #24]
  436d0c:	mov	x8, xzr
  436d10:	mov	x4, x8
  436d14:	str	x8, [sp, #8]
  436d18:	bl	4395b4 <user_send_changed>
  436d1c:	ldur	x8, [x29, #-8]
  436d20:	ldr	x8, [x8]
  436d24:	mov	x0, x8
  436d28:	ldur	x1, [x29, #-24]
  436d2c:	ldr	x2, [sp, #32]
  436d30:	ldr	x3, [sp, #24]
  436d34:	ldr	x4, [sp, #8]
  436d38:	bl	41fe2c <manager_send_changed>
  436d3c:	ldp	x29, x30, [sp, #64]
  436d40:	add	sp, sp, #0x50
  436d44:	ret

0000000000436d48 <session_get_locked_hint>:
  436d48:	sub	sp, sp, #0x20
  436d4c:	stp	x29, x30, [sp, #16]
  436d50:	add	x29, sp, #0x10
  436d54:	adrp	x8, 449000 <_fini+0x8c30>
  436d58:	add	x8, x8, #0x6de
  436d5c:	add	x2, x8, #0x3
  436d60:	str	x0, [sp, #8]
  436d64:	str	x2, [sp]
  436d68:	ldr	x8, [sp, #8]
  436d6c:	cmp	x8, #0x0
  436d70:	cset	w9, ne  // ne = any
  436d74:	mov	w10, #0x1                   	// #1
  436d78:	eor	w9, w9, #0x1
  436d7c:	eor	w9, w9, w10
  436d80:	eor	w9, w9, w10
  436d84:	and	w9, w9, #0x1
  436d88:	mov	w0, w9
  436d8c:	sxtw	x8, w0
  436d90:	cbz	x8, 436db8 <session_get_locked_hint+0x70>
  436d94:	mov	w8, wzr
  436d98:	mov	w0, w8
  436d9c:	adrp	x1, 442000 <_fini+0x1c30>
  436da0:	add	x1, x1, #0xf2
  436da4:	ldr	x2, [sp]
  436da8:	mov	w3, #0x3ee                 	// #1006
  436dac:	adrp	x4, 449000 <_fini+0x8c30>
  436db0:	add	x4, x4, #0xd8c
  436db4:	bl	406c68 <log_assert_failed_realm@plt>
  436db8:	ldr	x8, [sp, #8]
  436dbc:	ldrb	w9, [x8, #208]
  436dc0:	and	w0, w9, #0x1
  436dc4:	ldp	x29, x30, [sp, #16]
  436dc8:	add	sp, sp, #0x20
  436dcc:	ret

0000000000436dd0 <session_set_locked_hint>:
  436dd0:	sub	sp, sp, #0x30
  436dd4:	stp	x29, x30, [sp, #32]
  436dd8:	add	x29, sp, #0x20
  436ddc:	adrp	x8, 449000 <_fini+0x8c30>
  436de0:	add	x8, x8, #0x6de
  436de4:	add	x2, x8, #0x3
  436de8:	stur	x0, [x29, #-8]
  436dec:	and	w9, w1, #0x1
  436df0:	sturb	w9, [x29, #-9]
  436df4:	str	x2, [sp, #8]
  436df8:	ldur	x8, [x29, #-8]
  436dfc:	cmp	x8, #0x0
  436e00:	cset	w9, ne  // ne = any
  436e04:	mov	w10, #0x1                   	// #1
  436e08:	eor	w9, w9, #0x1
  436e0c:	eor	w9, w9, w10
  436e10:	eor	w9, w9, w10
  436e14:	and	w9, w9, #0x1
  436e18:	mov	w0, w9
  436e1c:	sxtw	x8, w0
  436e20:	cbz	x8, 436e48 <session_set_locked_hint+0x78>
  436e24:	mov	w8, wzr
  436e28:	mov	w0, w8
  436e2c:	adrp	x1, 442000 <_fini+0x1c30>
  436e30:	add	x1, x1, #0xf2
  436e34:	ldr	x2, [sp, #8]
  436e38:	mov	w3, #0x3f4                 	// #1012
  436e3c:	adrp	x4, 449000 <_fini+0x8c30>
  436e40:	add	x4, x4, #0xdb3
  436e44:	bl	406c68 <log_assert_failed_realm@plt>
  436e48:	ldur	x8, [x29, #-8]
  436e4c:	ldrb	w9, [x8, #208]
  436e50:	and	w9, w9, #0x1
  436e54:	ldurb	w10, [x29, #-9]
  436e58:	and	w10, w10, #0x1
  436e5c:	cmp	w9, w10
  436e60:	b.ne	436e68 <session_set_locked_hint+0x98>  // b.any
  436e64:	b	436e90 <session_set_locked_hint+0xc0>
  436e68:	ldurb	w8, [x29, #-9]
  436e6c:	ldur	x9, [x29, #-8]
  436e70:	and	w8, w8, #0x1
  436e74:	strb	w8, [x9, #208]
  436e78:	ldur	x0, [x29, #-8]
  436e7c:	adrp	x1, 448000 <_fini+0x7c30>
  436e80:	add	x1, x1, #0x5e6
  436e84:	mov	x9, xzr
  436e88:	mov	x2, x9
  436e8c:	bl	42f4a0 <session_send_changed>
  436e90:	ldp	x29, x30, [sp, #32]
  436e94:	add	sp, sp, #0x30
  436e98:	ret

0000000000436e9c <session_dispatch_fifo>:
  436e9c:	sub	sp, sp, #0x40
  436ea0:	stp	x29, x30, [sp, #48]
  436ea4:	add	x29, sp, #0x30
  436ea8:	adrp	x8, 449000 <_fini+0x8c30>
  436eac:	add	x8, x8, #0x6de
  436eb0:	add	x8, x8, #0x3
  436eb4:	stur	x0, [x29, #-8]
  436eb8:	stur	w1, [x29, #-12]
  436ebc:	stur	w2, [x29, #-16]
  436ec0:	str	x3, [sp, #24]
  436ec4:	ldr	x9, [sp, #24]
  436ec8:	str	x9, [sp, #16]
  436ecc:	str	x8, [sp, #8]
  436ed0:	ldr	x8, [sp, #16]
  436ed4:	cmp	x8, #0x0
  436ed8:	cset	w9, ne  // ne = any
  436edc:	mov	w10, #0x1                   	// #1
  436ee0:	eor	w9, w9, #0x1
  436ee4:	eor	w9, w9, w10
  436ee8:	eor	w9, w9, w10
  436eec:	and	w9, w9, #0x1
  436ef0:	mov	w0, w9
  436ef4:	sxtw	x8, w0
  436ef8:	cbz	x8, 436f20 <session_dispatch_fifo+0x84>
  436efc:	mov	w8, wzr
  436f00:	mov	w0, w8
  436f04:	adrp	x1, 442000 <_fini+0x1c30>
  436f08:	add	x1, x1, #0xf2
  436f0c:	ldr	x2, [sp, #8]
  436f10:	mov	w3, #0x401                 	// #1025
  436f14:	adrp	x4, 44a000 <_fini+0x9c30>
  436f18:	add	x4, x4, #0x34d
  436f1c:	bl	406c68 <log_assert_failed_realm@plt>
  436f20:	ldr	x8, [sp, #16]
  436f24:	ldr	w9, [x8, #160]
  436f28:	ldur	w10, [x29, #-12]
  436f2c:	cmp	w9, w10
  436f30:	cset	w9, eq  // eq = none
  436f34:	mov	w10, #0x1                   	// #1
  436f38:	eor	w9, w9, #0x1
  436f3c:	eor	w9, w9, w10
  436f40:	eor	w9, w9, w10
  436f44:	and	w9, w9, #0x1
  436f48:	mov	w0, w9
  436f4c:	sxtw	x8, w0
  436f50:	cbz	x8, 436f78 <session_dispatch_fifo+0xdc>
  436f54:	mov	w8, wzr
  436f58:	mov	w0, w8
  436f5c:	adrp	x1, 44a000 <_fini+0x9c30>
  436f60:	add	x1, x1, #0x391
  436f64:	ldr	x2, [sp, #8]
  436f68:	mov	w3, #0x402                 	// #1026
  436f6c:	adrp	x4, 44a000 <_fini+0x9c30>
  436f70:	add	x4, x4, #0x34d
  436f74:	bl	406c68 <log_assert_failed_realm@plt>
  436f78:	ldr	x0, [sp, #16]
  436f7c:	bl	435b24 <session_remove_fifo>
  436f80:	ldr	x0, [sp, #16]
  436f84:	mov	w8, wzr
  436f88:	and	w1, w8, #0x1
  436f8c:	bl	4359b4 <session_stop>
  436f90:	mov	w8, #0x1                   	// #1
  436f94:	mov	w0, w8
  436f98:	ldp	x29, x30, [sp, #48]
  436f9c:	add	sp, sp, #0x40
  436fa0:	ret

0000000000436fa4 <session_may_gc>:
  436fa4:	sub	sp, sp, #0xd0
  436fa8:	stp	x29, x30, [sp, #192]
  436fac:	add	x29, sp, #0xc0
  436fb0:	adrp	x8, 449000 <_fini+0x8c30>
  436fb4:	add	x8, x8, #0x6de
  436fb8:	add	x8, x8, #0x3
  436fbc:	mov	w9, #0x1                   	// #1
  436fc0:	stur	x0, [x29, #-16]
  436fc4:	and	w9, w1, w9
  436fc8:	sturb	w9, [x29, #-17]
  436fcc:	str	x8, [sp, #72]
  436fd0:	ldur	x8, [x29, #-16]
  436fd4:	cmp	x8, #0x0
  436fd8:	cset	w9, ne  // ne = any
  436fdc:	mov	w10, #0x1                   	// #1
  436fe0:	eor	w9, w9, #0x1
  436fe4:	eor	w9, w9, w10
  436fe8:	eor	w9, w9, w10
  436fec:	and	w9, w9, #0x1
  436ff0:	mov	w0, w9
  436ff4:	sxtw	x8, w0
  436ff8:	cbz	x8, 437020 <session_may_gc+0x7c>
  436ffc:	mov	w8, wzr
  437000:	mov	w0, w8
  437004:	adrp	x1, 442000 <_fini+0x1c30>
  437008:	add	x1, x1, #0xf2
  43700c:	ldr	x2, [sp, #72]
  437010:	mov	w3, #0x449                 	// #1097
  437014:	adrp	x4, 449000 <_fini+0x8c30>
  437018:	add	x4, x4, #0xe1c
  43701c:	bl	406c68 <log_assert_failed_realm@plt>
  437020:	ldurb	w8, [x29, #-17]
  437024:	tbnz	w8, #0, 43702c <session_may_gc+0x88>
  437028:	b	437054 <session_may_gc+0xb0>
  43702c:	ldur	x8, [x29, #-16]
  437030:	ldrb	w9, [x8, #209]
  437034:	mov	w10, #0x1                   	// #1
  437038:	lsr	w9, w9, w10
  43703c:	and	w9, w9, w10
  437040:	tbnz	w9, #0, 437054 <session_may_gc+0xb0>
  437044:	mov	w8, #0x1                   	// #1
  437048:	and	w8, w8, #0x1
  43704c:	sturb	w8, [x29, #-1]
  437050:	b	437330 <session_may_gc+0x38c>
  437054:	ldur	x8, [x29, #-16]
  437058:	ldr	x8, [x8, #40]
  43705c:	cbnz	x8, 437070 <session_may_gc+0xcc>
  437060:	mov	w8, #0x1                   	// #1
  437064:	and	w8, w8, #0x1
  437068:	sturb	w8, [x29, #-1]
  43706c:	b	437330 <session_may_gc+0x38c>
  437070:	ldur	x8, [x29, #-16]
  437074:	ldr	w9, [x8, #160]
  437078:	cmp	w9, #0x0
  43707c:	cset	w9, lt  // lt = tstop
  437080:	tbnz	w9, #0, 4370ac <session_may_gc+0x108>
  437084:	ldur	x8, [x29, #-16]
  437088:	ldr	w0, [x8, #160]
  43708c:	bl	407a68 <pipe_eof@plt>
  437090:	cmp	w0, #0x0
  437094:	cset	w9, gt
  437098:	tbnz	w9, #0, 4370ac <session_may_gc+0x108>
  43709c:	mov	w8, wzr
  4370a0:	and	w8, w8, #0x1
  4370a4:	sturb	w8, [x29, #-1]
  4370a8:	b	437330 <session_may_gc+0x38c>
  4370ac:	ldur	x8, [x29, #-16]
  4370b0:	ldr	x8, [x8, #128]
  4370b4:	cbz	x8, 4371e8 <session_may_gc+0x244>
  4370b8:	sub	x2, x29, #0x30
  4370bc:	stur	xzr, [x29, #-48]
  4370c0:	stur	xzr, [x29, #-40]
  4370c4:	stur	xzr, [x29, #-32]
  4370c8:	ldur	x8, [x29, #-16]
  4370cc:	ldr	x0, [x8]
  4370d0:	ldur	x8, [x29, #-16]
  4370d4:	ldr	x1, [x8, #128]
  4370d8:	bl	421434 <manager_job_is_active>
  4370dc:	stur	w0, [x29, #-24]
  4370e0:	ldur	w9, [x29, #-24]
  4370e4:	cmp	w9, #0x0
  4370e8:	cset	w9, ge  // ge = tcont
  4370ec:	tbnz	w9, #0, 4371ac <session_may_gc+0x208>
  4370f0:	mov	w8, #0x7                   	// #7
  4370f4:	stur	w8, [x29, #-52]
  4370f8:	ldur	w8, [x29, #-24]
  4370fc:	stur	w8, [x29, #-56]
  437100:	stur	wzr, [x29, #-60]
  437104:	ldur	w0, [x29, #-60]
  437108:	bl	406c08 <log_get_max_level_realm@plt>
  43710c:	ldur	w8, [x29, #-52]
  437110:	and	w8, w8, #0x7
  437114:	cmp	w0, w8
  437118:	b.lt	437190 <session_may_gc+0x1ec>  // b.tstop
  43711c:	ldur	w8, [x29, #-60]
  437120:	ldur	w9, [x29, #-52]
  437124:	orr	w0, w9, w8, lsl #10
  437128:	ldur	w1, [x29, #-56]
  43712c:	ldur	x10, [x29, #-16]
  437130:	ldr	x6, [x10, #128]
  437134:	ldur	w8, [x29, #-24]
  437138:	sub	x10, x29, #0x30
  43713c:	str	w0, [sp, #68]
  437140:	mov	x0, x10
  437144:	str	w1, [sp, #64]
  437148:	mov	w1, w8
  43714c:	str	x6, [sp, #56]
  437150:	bl	4071d8 <bus_error_message@plt>
  437154:	ldr	w8, [sp, #68]
  437158:	str	x0, [sp, #48]
  43715c:	mov	w0, w8
  437160:	ldr	w1, [sp, #64]
  437164:	ldr	x2, [sp, #72]
  437168:	mov	w3, #0x45b                 	// #1115
  43716c:	adrp	x4, 449000 <_fini+0x8c30>
  437170:	add	x4, x4, #0xe43
  437174:	adrp	x5, 449000 <_fini+0x8c30>
  437178:	add	x5, x5, #0xe52
  43717c:	ldr	x6, [sp, #56]
  437180:	ldr	x7, [sp, #48]
  437184:	bl	406c18 <log_internal_realm@plt>
  437188:	str	w0, [sp, #44]
  43718c:	b	4371a4 <session_may_gc+0x200>
  437190:	ldur	w0, [x29, #-56]
  437194:	bl	406c28 <abs@plt>
  437198:	mov	w8, wzr
  43719c:	subs	w8, w8, w0, uxtb
  4371a0:	str	w8, [sp, #44]
  4371a4:	ldr	w8, [sp, #44]
  4371a8:	stur	w8, [x29, #-64]
  4371ac:	ldur	w8, [x29, #-24]
  4371b0:	cbz	w8, 4371cc <session_may_gc+0x228>
  4371b4:	mov	w8, wzr
  4371b8:	and	w8, w8, #0x1
  4371bc:	sturb	w8, [x29, #-1]
  4371c0:	mov	w8, #0x1                   	// #1
  4371c4:	stur	w8, [x29, #-68]
  4371c8:	b	4371d0 <session_may_gc+0x22c>
  4371cc:	stur	wzr, [x29, #-68]
  4371d0:	sub	x0, x29, #0x30
  4371d4:	bl	4071e8 <sd_bus_error_free@plt>
  4371d8:	ldur	w8, [x29, #-68]
  4371dc:	cbz	w8, 4371e8 <session_may_gc+0x244>
  4371e0:	b	4371e4 <session_may_gc+0x240>
  4371e4:	b	437330 <session_may_gc+0x38c>
  4371e8:	ldur	x8, [x29, #-16]
  4371ec:	ldr	x8, [x8, #120]
  4371f0:	cbz	x8, 437324 <session_may_gc+0x380>
  4371f4:	add	x2, sp, #0x60
  4371f8:	str	xzr, [sp, #96]
  4371fc:	str	xzr, [sp, #104]
  437200:	str	xzr, [sp, #112]
  437204:	ldur	x8, [x29, #-16]
  437208:	ldr	x0, [x8]
  43720c:	ldur	x8, [x29, #-16]
  437210:	ldr	x1, [x8, #120]
  437214:	bl	4211a0 <manager_unit_is_active>
  437218:	stur	w0, [x29, #-24]
  43721c:	ldur	w9, [x29, #-24]
  437220:	cmp	w9, #0x0
  437224:	cset	w9, ge  // ge = tcont
  437228:	tbnz	w9, #0, 4372e8 <session_may_gc+0x344>
  43722c:	mov	w8, #0x7                   	// #7
  437230:	str	w8, [sp, #92]
  437234:	ldur	w8, [x29, #-24]
  437238:	str	w8, [sp, #88]
  43723c:	str	wzr, [sp, #84]
  437240:	ldr	w0, [sp, #84]
  437244:	bl	406c08 <log_get_max_level_realm@plt>
  437248:	ldr	w8, [sp, #92]
  43724c:	and	w8, w8, #0x7
  437250:	cmp	w0, w8
  437254:	b.lt	4372cc <session_may_gc+0x328>  // b.tstop
  437258:	ldr	w8, [sp, #84]
  43725c:	ldr	w9, [sp, #92]
  437260:	orr	w0, w9, w8, lsl #10
  437264:	ldr	w1, [sp, #88]
  437268:	ldur	x10, [x29, #-16]
  43726c:	ldr	x6, [x10, #120]
  437270:	ldur	w8, [x29, #-24]
  437274:	add	x10, sp, #0x60
  437278:	str	w0, [sp, #40]
  43727c:	mov	x0, x10
  437280:	str	w1, [sp, #36]
  437284:	mov	w1, w8
  437288:	str	x6, [sp, #24]
  43728c:	bl	4071d8 <bus_error_message@plt>
  437290:	ldr	w8, [sp, #40]
  437294:	str	x0, [sp, #16]
  437298:	mov	w0, w8
  43729c:	ldr	w1, [sp, #36]
  4372a0:	ldr	x2, [sp, #72]
  4372a4:	mov	w3, #0x465                 	// #1125
  4372a8:	adrp	x4, 449000 <_fini+0x8c30>
  4372ac:	add	x4, x4, #0xe43
  4372b0:	adrp	x5, 449000 <_fini+0x8c30>
  4372b4:	add	x5, x5, #0xe90
  4372b8:	ldr	x6, [sp, #24]
  4372bc:	ldr	x7, [sp, #16]
  4372c0:	bl	406c18 <log_internal_realm@plt>
  4372c4:	str	w0, [sp, #12]
  4372c8:	b	4372e0 <session_may_gc+0x33c>
  4372cc:	ldr	w0, [sp, #88]
  4372d0:	bl	406c28 <abs@plt>
  4372d4:	mov	w8, wzr
  4372d8:	subs	w8, w8, w0, uxtb
  4372dc:	str	w8, [sp, #12]
  4372e0:	ldr	w8, [sp, #12]
  4372e4:	str	w8, [sp, #80]
  4372e8:	ldur	w8, [x29, #-24]
  4372ec:	cbz	w8, 437308 <session_may_gc+0x364>
  4372f0:	mov	w8, wzr
  4372f4:	and	w8, w8, #0x1
  4372f8:	sturb	w8, [x29, #-1]
  4372fc:	mov	w8, #0x1                   	// #1
  437300:	stur	w8, [x29, #-68]
  437304:	b	43730c <session_may_gc+0x368>
  437308:	stur	wzr, [x29, #-68]
  43730c:	add	x0, sp, #0x60
  437310:	bl	4071e8 <sd_bus_error_free@plt>
  437314:	ldur	w8, [x29, #-68]
  437318:	cbz	w8, 437324 <session_may_gc+0x380>
  43731c:	b	437320 <session_may_gc+0x37c>
  437320:	b	437330 <session_may_gc+0x38c>
  437324:	mov	w8, #0x1                   	// #1
  437328:	and	w8, w8, #0x1
  43732c:	sturb	w8, [x29, #-1]
  437330:	ldurb	w8, [x29, #-1]
  437334:	and	w0, w8, #0x1
  437338:	ldp	x29, x30, [sp, #192]
  43733c:	add	sp, sp, #0xd0
  437340:	ret

0000000000437344 <session_kill>:
  437344:	sub	sp, sp, #0x30
  437348:	stp	x29, x30, [sp, #32]
  43734c:	add	x29, sp, #0x20
  437350:	adrp	x8, 449000 <_fini+0x8c30>
  437354:	add	x8, x8, #0x6de
  437358:	add	x8, x8, #0x3
  43735c:	str	x0, [sp, #16]
  437360:	str	w1, [sp, #12]
  437364:	str	w2, [sp, #8]
  437368:	str	x8, [sp]
  43736c:	ldr	x8, [sp, #16]
  437370:	cmp	x8, #0x0
  437374:	cset	w9, ne  // ne = any
  437378:	mov	w10, #0x1                   	// #1
  43737c:	eor	w9, w9, #0x1
  437380:	eor	w9, w9, w10
  437384:	eor	w9, w9, w10
  437388:	and	w9, w9, #0x1
  43738c:	mov	w0, w9
  437390:	sxtw	x8, w0
  437394:	cbz	x8, 4373bc <session_kill+0x78>
  437398:	mov	w8, wzr
  43739c:	mov	w0, w8
  4373a0:	adrp	x1, 442000 <_fini+0x1c30>
  4373a4:	add	x1, x1, #0xf2
  4373a8:	ldr	x2, [sp]
  4373ac:	mov	w3, #0x488                 	// #1160
  4373b0:	adrp	x4, 449000 <_fini+0x8c30>
  4373b4:	add	x4, x4, #0xf20
  4373b8:	bl	406c68 <log_assert_failed_realm@plt>
  4373bc:	ldr	x8, [sp, #16]
  4373c0:	ldr	x8, [x8, #120]
  4373c4:	cbnz	x8, 4373d4 <session_kill+0x90>
  4373c8:	mov	w8, #0xfffffffd            	// #-3
  4373cc:	stur	w8, [x29, #-4]
  4373d0:	b	4373fc <session_kill+0xb8>
  4373d4:	ldr	x8, [sp, #16]
  4373d8:	ldr	x0, [x8]
  4373dc:	ldr	x8, [sp, #16]
  4373e0:	ldr	x1, [x8, #120]
  4373e4:	ldr	w2, [sp, #12]
  4373e8:	ldr	w3, [sp, #8]
  4373ec:	mov	x8, xzr
  4373f0:	mov	x4, x8
  4373f4:	bl	421048 <manager_kill_unit>
  4373f8:	stur	w0, [x29, #-4]
  4373fc:	ldur	w0, [x29, #-4]
  437400:	ldp	x29, x30, [sp, #32]
  437404:	add	sp, sp, #0x30
  437408:	ret

000000000043740c <session_leave_vt>:
  43740c:	sub	sp, sp, #0x40
  437410:	stp	x29, x30, [sp, #48]
  437414:	add	x29, sp, #0x30
  437418:	adrp	x8, 449000 <_fini+0x8c30>
  43741c:	add	x8, x8, #0x6de
  437420:	add	x8, x8, #0x3
  437424:	stur	x0, [x29, #-8]
  437428:	str	x8, [sp, #8]
  43742c:	ldur	x8, [x29, #-8]
  437430:	cmp	x8, #0x0
  437434:	cset	w9, ne  // ne = any
  437438:	mov	w10, #0x1                   	// #1
  43743c:	eor	w9, w9, #0x1
  437440:	eor	w9, w9, w10
  437444:	eor	w9, w9, w10
  437448:	and	w9, w9, #0x1
  43744c:	mov	w0, w9
  437450:	sxtw	x8, w0
  437454:	cbz	x8, 43747c <session_leave_vt+0x70>
  437458:	mov	w8, wzr
  43745c:	mov	w0, w8
  437460:	adrp	x1, 442000 <_fini+0x1c30>
  437464:	add	x1, x1, #0xf2
  437468:	ldr	x2, [sp, #8]
  43746c:	mov	w3, #0x4f8                 	// #1272
  437470:	adrp	x4, 449000 <_fini+0x8c30>
  437474:	add	x4, x4, #0xf4a
  437478:	bl	406c68 <log_assert_failed_realm@plt>
  43747c:	ldur	x8, [x29, #-8]
  437480:	ldr	w9, [x8, #148]
  437484:	cmp	w9, #0x0
  437488:	cset	w9, ge  // ge = tcont
  43748c:	tbnz	w9, #0, 437494 <session_leave_vt+0x88>
  437490:	b	437548 <session_leave_vt+0x13c>
  437494:	ldur	x0, [x29, #-8]
  437498:	bl	431518 <session_device_pause_all>
  43749c:	ldur	x8, [x29, #-8]
  4374a0:	ldr	w0, [x8, #148]
  4374a4:	mov	w9, wzr
  4374a8:	and	w1, w9, #0x1
  4374ac:	bl	407078 <vt_release@plt>
  4374b0:	stur	w0, [x29, #-12]
  4374b4:	ldur	w9, [x29, #-12]
  4374b8:	cmp	w9, #0x0
  4374bc:	cset	w9, ge  // ge = tcont
  4374c0:	tbnz	w9, #0, 437548 <session_leave_vt+0x13c>
  4374c4:	mov	w8, #0x7                   	// #7
  4374c8:	stur	w8, [x29, #-16]
  4374cc:	ldur	w8, [x29, #-12]
  4374d0:	stur	w8, [x29, #-20]
  4374d4:	str	wzr, [sp, #24]
  4374d8:	ldr	w0, [sp, #24]
  4374dc:	bl	406c08 <log_get_max_level_realm@plt>
  4374e0:	ldur	w8, [x29, #-16]
  4374e4:	and	w8, w8, #0x7
  4374e8:	cmp	w0, w8
  4374ec:	b.lt	43752c <session_leave_vt+0x120>  // b.tstop
  4374f0:	ldr	w8, [sp, #24]
  4374f4:	ldur	w9, [x29, #-16]
  4374f8:	orr	w0, w9, w8, lsl #10
  4374fc:	ldur	w1, [x29, #-20]
  437500:	ldur	x10, [x29, #-8]
  437504:	ldr	x6, [x10, #8]
  437508:	ldr	x2, [sp, #8]
  43750c:	mov	w3, #0x50b                 	// #1291
  437510:	adrp	x4, 449000 <_fini+0x8c30>
  437514:	add	x4, x4, #0xf6b
  437518:	adrp	x5, 449000 <_fini+0x8c30>
  43751c:	add	x5, x5, #0xf7c
  437520:	bl	406c18 <log_internal_realm@plt>
  437524:	str	w0, [sp, #4]
  437528:	b	437540 <session_leave_vt+0x134>
  43752c:	ldur	w0, [x29, #-20]
  437530:	bl	406c28 <abs@plt>
  437534:	mov	w8, wzr
  437538:	subs	w8, w8, w0, uxtb
  43753c:	str	w8, [sp, #4]
  437540:	ldr	w8, [sp, #4]
  437544:	str	w8, [sp, #20]
  437548:	ldp	x29, x30, [sp, #48]
  43754c:	add	sp, sp, #0x40
  437550:	ret

0000000000437554 <session_is_controller>:
  437554:	sub	sp, sp, #0x30
  437558:	stp	x29, x30, [sp, #32]
  43755c:	add	x29, sp, #0x20
  437560:	adrp	x8, 449000 <_fini+0x8c30>
  437564:	add	x8, x8, #0x6de
  437568:	add	x2, x8, #0x3
  43756c:	stur	x0, [x29, #-8]
  437570:	str	x1, [sp, #16]
  437574:	str	x2, [sp, #8]
  437578:	ldur	x8, [x29, #-8]
  43757c:	cmp	x8, #0x0
  437580:	cset	w9, ne  // ne = any
  437584:	mov	w10, #0x1                   	// #1
  437588:	eor	w9, w9, #0x1
  43758c:	eor	w9, w9, w10
  437590:	eor	w9, w9, w10
  437594:	and	w9, w9, #0x1
  437598:	mov	w0, w9
  43759c:	sxtw	x8, w0
  4375a0:	cbz	x8, 4375c8 <session_is_controller+0x74>
  4375a4:	mov	w8, wzr
  4375a8:	mov	w0, w8
  4375ac:	adrp	x1, 442000 <_fini+0x1c30>
  4375b0:	add	x1, x1, #0xf2
  4375b4:	ldr	x2, [sp, #8]
  4375b8:	mov	w3, #0x50f                 	// #1295
  4375bc:	adrp	x4, 449000 <_fini+0x8c30>
  4375c0:	add	x4, x4, #0xfa0
  4375c4:	bl	406c68 <log_assert_failed_realm@plt>
  4375c8:	ldur	x8, [x29, #-8]
  4375cc:	ldr	x0, [x8, #232]
  4375d0:	ldr	x1, [sp, #16]
  4375d4:	bl	4375e8 <streq_ptr>
  4375d8:	and	w0, w0, #0x1
  4375dc:	ldp	x29, x30, [sp, #32]
  4375e0:	add	sp, sp, #0x30
  4375e4:	ret

00000000004375e8 <streq_ptr>:
  4375e8:	sub	sp, sp, #0x20
  4375ec:	stp	x29, x30, [sp, #16]
  4375f0:	add	x29, sp, #0x10
  4375f4:	str	x0, [sp, #8]
  4375f8:	str	x1, [sp]
  4375fc:	ldr	x0, [sp, #8]
  437600:	ldr	x1, [sp]
  437604:	bl	407448 <strcmp_ptr@plt>
  437608:	cmp	w0, #0x0
  43760c:	cset	w8, eq  // eq = none
  437610:	and	w0, w8, #0x1
  437614:	ldp	x29, x30, [sp, #16]
  437618:	add	sp, sp, #0x20
  43761c:	ret

0000000000437620 <on_bus_track>:
  437620:	sub	sp, sp, #0x30
  437624:	stp	x29, x30, [sp, #32]
  437628:	add	x29, sp, #0x20
  43762c:	adrp	x8, 449000 <_fini+0x8c30>
  437630:	add	x8, x8, #0x6de
  437634:	add	x8, x8, #0x3
  437638:	stur	x0, [x29, #-8]
  43763c:	str	x1, [sp, #16]
  437640:	ldr	x9, [sp, #16]
  437644:	str	x9, [sp, #8]
  437648:	str	x8, [sp]
  43764c:	ldur	x8, [x29, #-8]
  437650:	cmp	x8, #0x0
  437654:	cset	w9, ne  // ne = any
  437658:	mov	w10, #0x1                   	// #1
  43765c:	eor	w9, w9, #0x1
  437660:	eor	w9, w9, w10
  437664:	eor	w9, w9, w10
  437668:	and	w9, w9, #0x1
  43766c:	mov	w0, w9
  437670:	sxtw	x8, w0
  437674:	cbz	x8, 43769c <on_bus_track+0x7c>
  437678:	mov	w8, wzr
  43767c:	mov	w0, w8
  437680:	adrp	x1, 44a000 <_fini+0x9c30>
  437684:	add	x1, x1, #0x430
  437688:	ldr	x2, [sp]
  43768c:	mov	w3, #0x52d                 	// #1325
  437690:	adrp	x4, 44a000 <_fini+0x9c30>
  437694:	add	x4, x4, #0x436
  437698:	bl	406c68 <log_assert_failed_realm@plt>
  43769c:	ldr	x8, [sp, #8]
  4376a0:	cmp	x8, #0x0
  4376a4:	cset	w9, ne  // ne = any
  4376a8:	mov	w10, #0x1                   	// #1
  4376ac:	eor	w9, w9, #0x1
  4376b0:	eor	w9, w9, w10
  4376b4:	eor	w9, w9, w10
  4376b8:	and	w9, w9, #0x1
  4376bc:	mov	w0, w9
  4376c0:	sxtw	x8, w0
  4376c4:	cbz	x8, 4376ec <on_bus_track+0xcc>
  4376c8:	mov	w8, wzr
  4376cc:	mov	w0, w8
  4376d0:	adrp	x1, 442000 <_fini+0x1c30>
  4376d4:	add	x1, x1, #0xf2
  4376d8:	ldr	x2, [sp]
  4376dc:	mov	w3, #0x52e                 	// #1326
  4376e0:	adrp	x4, 44a000 <_fini+0x9c30>
  4376e4:	add	x4, x4, #0x436
  4376e8:	bl	406c68 <log_assert_failed_realm@plt>
  4376ec:	ldr	x0, [sp, #8]
  4376f0:	bl	432700 <session_drop_controller>
  4376f4:	mov	w8, wzr
  4376f8:	mov	w0, w8
  4376fc:	ldp	x29, x30, [sp, #32]
  437700:	add	sp, sp, #0x30
  437704:	ret

0000000000437708 <session_prepare_vt>:
  437708:	sub	sp, sp, #0xa0
  43770c:	stp	x29, x30, [sp, #144]
  437710:	add	x29, sp, #0x90
  437714:	adrp	x8, 449000 <_fini+0x8c30>
  437718:	add	x8, x8, #0x6de
  43771c:	add	x8, x8, #0x3
  437720:	adrp	x9, 44a000 <_fini+0x9c30>
  437724:	add	x9, x9, #0x45f
  437728:	stur	x0, [x29, #-16]
  43772c:	stur	xzr, [x29, #-32]
  437730:	ldur	x10, [x29, #-16]
  437734:	ldr	w11, [x10, #144]
  437738:	cmp	w11, #0x1
  43773c:	str	x8, [sp, #40]
  437740:	str	x9, [sp, #32]
  437744:	b.cs	437750 <session_prepare_vt+0x48>  // b.hs, b.nlast
  437748:	stur	wzr, [x29, #-4]
  43774c:	b	437a94 <session_prepare_vt+0x38c>
  437750:	ldur	x0, [x29, #-16]
  437754:	bl	437d5c <session_open_vt>
  437758:	stur	w0, [x29, #-20]
  43775c:	ldur	w8, [x29, #-20]
  437760:	cmp	w8, #0x0
  437764:	cset	w8, ge  // ge = tcont
  437768:	tbnz	w8, #0, 437778 <session_prepare_vt+0x70>
  43776c:	ldur	w8, [x29, #-20]
  437770:	stur	w8, [x29, #-4]
  437774:	b	437a94 <session_prepare_vt+0x38c>
  437778:	ldur	w0, [x29, #-20]
  43777c:	ldur	x8, [x29, #-16]
  437780:	ldr	x8, [x8, #40]
  437784:	ldr	w1, [x8, #8]
  437788:	mov	w2, #0xffffffff            	// #-1
  43778c:	bl	407d08 <fchown@plt>
  437790:	stur	w0, [x29, #-24]
  437794:	ldur	w9, [x29, #-24]
  437798:	cmp	w9, #0x0
  43779c:	cset	w9, ge  // ge = tcont
  4377a0:	tbnz	w9, #0, 437834 <session_prepare_vt+0x12c>
  4377a4:	mov	w8, #0x3                   	// #3
  4377a8:	stur	w8, [x29, #-36]
  4377ac:	bl	406e08 <__errno_location@plt>
  4377b0:	ldr	w8, [x0]
  4377b4:	stur	w8, [x29, #-40]
  4377b8:	stur	wzr, [x29, #-44]
  4377bc:	ldur	w0, [x29, #-44]
  4377c0:	bl	406c08 <log_get_max_level_realm@plt>
  4377c4:	ldur	w8, [x29, #-36]
  4377c8:	and	w8, w8, #0x7
  4377cc:	cmp	w0, w8
  4377d0:	b.lt	43780c <session_prepare_vt+0x104>  // b.tstop
  4377d4:	ldur	w8, [x29, #-44]
  4377d8:	ldur	w9, [x29, #-36]
  4377dc:	orr	w0, w9, w8, lsl #10
  4377e0:	ldur	w1, [x29, #-40]
  4377e4:	ldur	x10, [x29, #-16]
  4377e8:	ldr	w6, [x10, #144]
  4377ec:	ldr	x2, [sp, #40]
  4377f0:	mov	w3, #0x4b0                 	// #1200
  4377f4:	ldr	x4, [sp, #32]
  4377f8:	adrp	x5, 44a000 <_fini+0x9c30>
  4377fc:	add	x5, x5, #0x472
  437800:	bl	406c18 <log_internal_realm@plt>
  437804:	str	w0, [sp, #28]
  437808:	b	437820 <session_prepare_vt+0x118>
  43780c:	ldur	w0, [x29, #-40]
  437810:	bl	406c28 <abs@plt>
  437814:	mov	w8, wzr
  437818:	subs	w8, w8, w0, uxtb
  43781c:	str	w8, [sp, #28]
  437820:	ldr	w8, [sp, #28]
  437824:	stur	w8, [x29, #-48]
  437828:	ldur	w8, [x29, #-48]
  43782c:	stur	w8, [x29, #-24]
  437830:	b	437a84 <session_prepare_vt+0x37c>
  437834:	ldur	w0, [x29, #-20]
  437838:	mov	x1, #0x4b45                	// #19269
  43783c:	mov	w2, #0x4                   	// #4
  437840:	bl	407268 <ioctl@plt>
  437844:	stur	w0, [x29, #-24]
  437848:	ldur	w8, [x29, #-24]
  43784c:	cmp	w8, #0x0
  437850:	cset	w8, ge  // ge = tcont
  437854:	tbnz	w8, #0, 4378e8 <session_prepare_vt+0x1e0>
  437858:	mov	w8, #0x3                   	// #3
  43785c:	stur	w8, [x29, #-52]
  437860:	bl	406e08 <__errno_location@plt>
  437864:	ldr	w8, [x0]
  437868:	stur	w8, [x29, #-56]
  43786c:	stur	wzr, [x29, #-60]
  437870:	ldur	w0, [x29, #-60]
  437874:	bl	406c08 <log_get_max_level_realm@plt>
  437878:	ldur	w8, [x29, #-52]
  43787c:	and	w8, w8, #0x7
  437880:	cmp	w0, w8
  437884:	b.lt	4378c0 <session_prepare_vt+0x1b8>  // b.tstop
  437888:	ldur	w8, [x29, #-60]
  43788c:	ldur	w9, [x29, #-52]
  437890:	orr	w0, w9, w8, lsl #10
  437894:	ldur	w1, [x29, #-56]
  437898:	ldur	x10, [x29, #-16]
  43789c:	ldr	w6, [x10, #144]
  4378a0:	ldr	x2, [sp, #40]
  4378a4:	mov	w3, #0x4b8                 	// #1208
  4378a8:	ldr	x4, [sp, #32]
  4378ac:	adrp	x5, 44a000 <_fini+0x9c30>
  4378b0:	add	x5, x5, #0x498
  4378b4:	bl	406c18 <log_internal_realm@plt>
  4378b8:	str	w0, [sp, #24]
  4378bc:	b	4378d4 <session_prepare_vt+0x1cc>
  4378c0:	ldur	w0, [x29, #-56]
  4378c4:	bl	406c28 <abs@plt>
  4378c8:	mov	w8, wzr
  4378cc:	subs	w8, w8, w0, uxtb
  4378d0:	str	w8, [sp, #24]
  4378d4:	ldr	w8, [sp, #24]
  4378d8:	stur	w8, [x29, #-64]
  4378dc:	ldur	w8, [x29, #-64]
  4378e0:	stur	w8, [x29, #-24]
  4378e4:	b	437a84 <session_prepare_vt+0x37c>
  4378e8:	ldur	w0, [x29, #-20]
  4378ec:	mov	x1, #0x4b3a                	// #19258
  4378f0:	mov	w2, #0x1                   	// #1
  4378f4:	bl	407268 <ioctl@plt>
  4378f8:	stur	w0, [x29, #-24]
  4378fc:	ldur	w8, [x29, #-24]
  437900:	cmp	w8, #0x0
  437904:	cset	w8, ge  // ge = tcont
  437908:	tbnz	w8, #0, 43799c <session_prepare_vt+0x294>
  43790c:	mov	w8, #0x3                   	// #3
  437910:	stur	w8, [x29, #-68]
  437914:	bl	406e08 <__errno_location@plt>
  437918:	ldr	w8, [x0]
  43791c:	str	w8, [sp, #72]
  437920:	str	wzr, [sp, #68]
  437924:	ldr	w0, [sp, #68]
  437928:	bl	406c08 <log_get_max_level_realm@plt>
  43792c:	ldur	w8, [x29, #-68]
  437930:	and	w8, w8, #0x7
  437934:	cmp	w0, w8
  437938:	b.lt	437974 <session_prepare_vt+0x26c>  // b.tstop
  43793c:	ldr	w8, [sp, #68]
  437940:	ldur	w9, [x29, #-68]
  437944:	orr	w0, w9, w8, lsl #10
  437948:	ldr	w1, [sp, #72]
  43794c:	ldur	x10, [x29, #-16]
  437950:	ldr	w6, [x10, #144]
  437954:	ldr	x2, [sp, #40]
  437958:	mov	w3, #0x4c0                 	// #1216
  43795c:	ldr	x4, [sp, #32]
  437960:	adrp	x5, 44a000 <_fini+0x9c30>
  437964:	add	x5, x5, #0x4bb
  437968:	bl	406c18 <log_internal_realm@plt>
  43796c:	str	w0, [sp, #20]
  437970:	b	437988 <session_prepare_vt+0x280>
  437974:	ldr	w0, [sp, #72]
  437978:	bl	406c28 <abs@plt>
  43797c:	mov	w8, wzr
  437980:	subs	w8, w8, w0, uxtb
  437984:	str	w8, [sp, #20]
  437988:	ldr	w8, [sp, #20]
  43798c:	str	w8, [sp, #64]
  437990:	ldr	w8, [sp, #64]
  437994:	stur	w8, [x29, #-24]
  437998:	b	437a84 <session_prepare_vt+0x37c>
  43799c:	sub	x8, x29, #0x20
  4379a0:	mov	w9, #0x1                   	// #1
  4379a4:	sturb	w9, [x29, #-32]
  4379a8:	str	x8, [sp, #8]
  4379ac:	bl	406e28 <__libc_current_sigrtmin@plt>
  4379b0:	ldr	x8, [sp, #8]
  4379b4:	strh	w0, [x8, #2]
  4379b8:	bl	406e28 <__libc_current_sigrtmin@plt>
  4379bc:	add	w9, w0, #0x1
  4379c0:	ldr	x8, [sp, #8]
  4379c4:	strh	w9, [x8, #4]
  4379c8:	ldur	w0, [x29, #-20]
  4379cc:	mov	x1, #0x5602                	// #22018
  4379d0:	mov	x2, x8
  4379d4:	bl	407268 <ioctl@plt>
  4379d8:	stur	w0, [x29, #-24]
  4379dc:	ldur	w9, [x29, #-24]
  4379e0:	cmp	w9, #0x0
  4379e4:	cset	w9, ge  // ge = tcont
  4379e8:	tbnz	w9, #0, 437a7c <session_prepare_vt+0x374>
  4379ec:	mov	w8, #0x3                   	// #3
  4379f0:	str	w8, [sp, #60]
  4379f4:	bl	406e08 <__errno_location@plt>
  4379f8:	ldr	w8, [x0]
  4379fc:	str	w8, [sp, #56]
  437a00:	str	wzr, [sp, #52]
  437a04:	ldr	w0, [sp, #52]
  437a08:	bl	406c08 <log_get_max_level_realm@plt>
  437a0c:	ldr	w8, [sp, #60]
  437a10:	and	w8, w8, #0x7
  437a14:	cmp	w0, w8
  437a18:	b.lt	437a54 <session_prepare_vt+0x34c>  // b.tstop
  437a1c:	ldr	w8, [sp, #52]
  437a20:	ldr	w9, [sp, #60]
  437a24:	orr	w0, w9, w8, lsl #10
  437a28:	ldr	w1, [sp, #56]
  437a2c:	ldur	x10, [x29, #-16]
  437a30:	ldr	w6, [x10, #144]
  437a34:	ldr	x2, [sp, #40]
  437a38:	mov	w3, #0x4ce                 	// #1230
  437a3c:	ldr	x4, [sp, #32]
  437a40:	adrp	x5, 44a000 <_fini+0x9c30>
  437a44:	add	x5, x5, #0x4e4
  437a48:	bl	406c18 <log_internal_realm@plt>
  437a4c:	str	w0, [sp, #4]
  437a50:	b	437a68 <session_prepare_vt+0x360>
  437a54:	ldr	w0, [sp, #56]
  437a58:	bl	406c28 <abs@plt>
  437a5c:	mov	w8, wzr
  437a60:	subs	w8, w8, w0, uxtb
  437a64:	str	w8, [sp, #4]
  437a68:	ldr	w8, [sp, #4]
  437a6c:	str	w8, [sp, #48]
  437a70:	ldr	w8, [sp, #48]
  437a74:	stur	w8, [x29, #-24]
  437a78:	b	437a84 <session_prepare_vt+0x37c>
  437a7c:	stur	wzr, [x29, #-4]
  437a80:	b	437a94 <session_prepare_vt+0x38c>
  437a84:	ldur	x0, [x29, #-16]
  437a88:	bl	434db4 <session_restore_vt>
  437a8c:	ldur	w8, [x29, #-24]
  437a90:	stur	w8, [x29, #-4]
  437a94:	ldur	w0, [x29, #-4]
  437a98:	ldp	x29, x30, [sp, #144]
  437a9c:	add	sp, sp, #0xa0
  437aa0:	ret

0000000000437aa4 <session_release_controller>:
  437aa4:	sub	sp, sp, #0x40
  437aa8:	stp	x29, x30, [sp, #48]
  437aac:	add	x29, sp, #0x30
  437ab0:	mov	x8, xzr
  437ab4:	mov	w9, #0x1                   	// #1
  437ab8:	stur	x0, [x29, #-8]
  437abc:	and	w9, w1, w9
  437ac0:	sturb	w9, [x29, #-9]
  437ac4:	str	x8, [sp, #24]
  437ac8:	ldur	x8, [x29, #-8]
  437acc:	ldr	x8, [x8, #232]
  437ad0:	cbnz	x8, 437ae0 <session_release_controller+0x3c>
  437ad4:	mov	w8, #0x1                   	// #1
  437ad8:	str	w8, [sp, #12]
  437adc:	b	437b44 <session_release_controller+0xa0>
  437ae0:	ldur	x8, [x29, #-8]
  437ae4:	ldr	x8, [x8, #232]
  437ae8:	str	x8, [sp, #24]
  437aec:	ldurb	w9, [x29, #-9]
  437af0:	tbnz	w9, #0, 437b00 <session_release_controller+0x5c>
  437af4:	ldur	x8, [x29, #-8]
  437af8:	mov	x9, xzr
  437afc:	str	x9, [x8, #232]
  437b00:	ldur	x8, [x29, #-8]
  437b04:	ldr	x0, [x8, #240]
  437b08:	bl	4327c4 <hashmap_first>
  437b0c:	str	x0, [sp, #16]
  437b10:	cbz	x0, 437b20 <session_release_controller+0x7c>
  437b14:	ldr	x0, [sp, #16]
  437b18:	bl	4307a4 <session_device_free>
  437b1c:	b	437b00 <session_release_controller+0x5c>
  437b20:	ldur	x8, [x29, #-8]
  437b24:	mov	x9, xzr
  437b28:	str	x9, [x8, #232]
  437b2c:	ldur	x8, [x29, #-8]
  437b30:	ldr	x0, [x8, #248]
  437b34:	bl	407c28 <sd_bus_track_unref@plt>
  437b38:	ldur	x8, [x29, #-8]
  437b3c:	str	x0, [x8, #248]
  437b40:	str	wzr, [sp, #12]
  437b44:	add	x0, sp, #0x18
  437b48:	bl	4333b8 <freep>
  437b4c:	ldp	x29, x30, [sp, #48]
  437b50:	add	sp, sp, #0x40
  437b54:	ret

0000000000437b58 <session_state_from_string>:
  437b58:	sub	sp, sp, #0x20
  437b5c:	stp	x29, x30, [sp, #16]
  437b60:	add	x29, sp, #0x10
  437b64:	adrp	x8, 45e000 <session_vtable+0x230>
  437b68:	add	x8, x8, #0x778
  437b6c:	mov	x1, #0x4                   	// #4
  437b70:	str	x0, [sp, #8]
  437b74:	ldr	x2, [sp, #8]
  437b78:	mov	x0, x8
  437b7c:	bl	4071f8 <string_table_lookup@plt>
  437b80:	ldp	x29, x30, [sp, #16]
  437b84:	add	sp, sp, #0x20
  437b88:	ret

0000000000437b8c <kill_who_to_string>:
  437b8c:	sub	sp, sp, #0x10
  437b90:	str	w0, [sp, #4]
  437b94:	ldr	w8, [sp, #4]
  437b98:	cmp	w8, #0x0
  437b9c:	cset	w8, lt  // lt = tstop
  437ba0:	tbnz	w8, #0, 437bb0 <kill_who_to_string+0x24>
  437ba4:	ldr	w8, [sp, #4]
  437ba8:	cmp	w8, #0x2
  437bac:	b.lt	437bbc <kill_who_to_string+0x30>  // b.tstop
  437bb0:	mov	x8, xzr
  437bb4:	str	x8, [sp, #8]
  437bb8:	b	437bdc <kill_who_to_string+0x50>
  437bbc:	ldrsw	x8, [sp, #4]
  437bc0:	mov	x9, #0x8                   	// #8
  437bc4:	mul	x8, x9, x8
  437bc8:	adrp	x9, 45e000 <session_vtable+0x230>
  437bcc:	add	x9, x9, #0x7e8
  437bd0:	add	x8, x9, x8
  437bd4:	ldr	x8, [x8]
  437bd8:	str	x8, [sp, #8]
  437bdc:	ldr	x0, [sp, #8]
  437be0:	add	sp, sp, #0x10
  437be4:	ret

0000000000437be8 <kill_who_from_string>:
  437be8:	sub	sp, sp, #0x20
  437bec:	stp	x29, x30, [sp, #16]
  437bf0:	add	x29, sp, #0x10
  437bf4:	adrp	x8, 45e000 <session_vtable+0x230>
  437bf8:	add	x8, x8, #0x7e8
  437bfc:	mov	x1, #0x2                   	// #2
  437c00:	str	x0, [sp, #8]
  437c04:	ldr	x2, [sp, #8]
  437c08:	mov	x0, x8
  437c0c:	bl	4071f8 <string_table_lookup@plt>
  437c10:	ldp	x29, x30, [sp, #16]
  437c14:	add	sp, sp, #0x20
  437c18:	ret

0000000000437c1c <size_multiply_overflow>:
  437c1c:	sub	sp, sp, #0x20
  437c20:	str	x0, [sp, #24]
  437c24:	str	x1, [sp, #16]
  437c28:	ldr	x8, [sp, #16]
  437c2c:	mov	w9, #0x0                   	// #0
  437c30:	str	w9, [sp, #12]
  437c34:	cbz	x8, 437c54 <size_multiply_overflow+0x38>
  437c38:	ldr	x8, [sp, #24]
  437c3c:	ldr	x9, [sp, #16]
  437c40:	mov	x10, #0xffffffffffffffff    	// #-1
  437c44:	udiv	x9, x10, x9
  437c48:	cmp	x8, x9
  437c4c:	cset	w11, hi  // hi = pmore
  437c50:	str	w11, [sp, #12]
  437c54:	ldr	w8, [sp, #12]
  437c58:	mov	w9, #0x1                   	// #1
  437c5c:	eor	w8, w8, #0x1
  437c60:	eor	w8, w8, w9
  437c64:	and	w8, w8, #0x1
  437c68:	mov	w0, w8
  437c6c:	sxtw	x10, w0
  437c70:	cmp	x10, #0x0
  437c74:	cset	w8, ne  // ne = any
  437c78:	and	w0, w8, #0x1
  437c7c:	add	sp, sp, #0x20
  437c80:	ret

0000000000437c84 <timestamp_is_set>:
  437c84:	sub	sp, sp, #0x10
  437c88:	str	x0, [sp, #8]
  437c8c:	ldr	x8, [sp, #8]
  437c90:	cmp	x8, #0x0
  437c94:	cset	w9, ls  // ls = plast
  437c98:	mov	w10, #0x0                   	// #0
  437c9c:	str	w10, [sp, #4]
  437ca0:	tbnz	w9, #0, 437cb8 <timestamp_is_set+0x34>
  437ca4:	ldr	x8, [sp, #8]
  437ca8:	mov	x9, #0xffffffffffffffff    	// #-1
  437cac:	cmp	x8, x9
  437cb0:	cset	w10, ne  // ne = any
  437cb4:	str	w10, [sp, #4]
  437cb8:	ldr	w8, [sp, #4]
  437cbc:	and	w0, w8, #0x1
  437cc0:	add	sp, sp, #0x10
  437cc4:	ret

0000000000437cc8 <hashmap_isempty>:
  437cc8:	sub	sp, sp, #0x20
  437ccc:	stp	x29, x30, [sp, #16]
  437cd0:	add	x29, sp, #0x10
  437cd4:	str	x0, [sp, #8]
  437cd8:	ldr	x0, [sp, #8]
  437cdc:	bl	437d38 <hashmap_size>
  437ce0:	cmp	w0, #0x0
  437ce4:	cset	w8, eq  // eq = none
  437ce8:	and	w0, w8, #0x1
  437cec:	ldp	x29, x30, [sp, #16]
  437cf0:	add	sp, sp, #0x20
  437cf4:	ret

0000000000437cf8 <hashmap_iterate>:
  437cf8:	sub	sp, sp, #0x30
  437cfc:	stp	x29, x30, [sp, #32]
  437d00:	add	x29, sp, #0x20
  437d04:	stur	x0, [x29, #-8]
  437d08:	str	x1, [sp, #16]
  437d0c:	str	x2, [sp, #8]
  437d10:	str	x3, [sp]
  437d14:	ldur	x0, [x29, #-8]
  437d18:	ldr	x1, [sp, #16]
  437d1c:	ldr	x2, [sp, #8]
  437d20:	ldr	x3, [sp]
  437d24:	bl	407018 <internal_hashmap_iterate@plt>
  437d28:	and	w0, w0, #0x1
  437d2c:	ldp	x29, x30, [sp, #32]
  437d30:	add	sp, sp, #0x30
  437d34:	ret

0000000000437d38 <hashmap_size>:
  437d38:	sub	sp, sp, #0x20
  437d3c:	stp	x29, x30, [sp, #16]
  437d40:	add	x29, sp, #0x10
  437d44:	str	x0, [sp, #8]
  437d48:	ldr	x0, [sp, #8]
  437d4c:	bl	407888 <internal_hashmap_size@plt>
  437d50:	ldp	x29, x30, [sp, #16]
  437d54:	add	sp, sp, #0x20
  437d58:	ret

0000000000437d5c <session_open_vt>:
  437d5c:	sub	sp, sp, #0x60
  437d60:	stp	x29, x30, [sp, #80]
  437d64:	add	x29, sp, #0x50
  437d68:	adrp	x8, 449000 <_fini+0x8c30>
  437d6c:	add	x8, x8, #0x6de
  437d70:	add	x2, x8, #0x3
  437d74:	stur	x0, [x29, #-16]
  437d78:	ldur	x8, [x29, #-16]
  437d7c:	ldr	w9, [x8, #144]
  437d80:	cmp	w9, #0x1
  437d84:	str	x2, [sp, #16]
  437d88:	b.cs	437d98 <session_open_vt+0x3c>  // b.hs, b.nlast
  437d8c:	mov	w8, #0xffffffed            	// #-19
  437d90:	stur	w8, [x29, #-4]
  437d94:	b	437eb0 <session_open_vt+0x154>
  437d98:	ldur	x8, [x29, #-16]
  437d9c:	ldr	w9, [x8, #148]
  437da0:	cmp	w9, #0x0
  437da4:	cset	w9, lt  // lt = tstop
  437da8:	tbnz	w9, #0, 437dbc <session_open_vt+0x60>
  437dac:	ldur	x8, [x29, #-16]
  437db0:	ldr	w9, [x8, #148]
  437db4:	stur	w9, [x29, #-4]
  437db8:	b	437eb0 <session_open_vt+0x154>
  437dbc:	ldur	x8, [x29, #-16]
  437dc0:	ldr	w2, [x8, #144]
  437dc4:	sub	x8, x29, #0x25
  437dc8:	mov	x0, x8
  437dcc:	adrp	x1, 441000 <_fini+0xc30>
  437dd0:	add	x1, x1, #0x704
  437dd4:	str	x8, [sp, #8]
  437dd8:	bl	407d18 <sprintf@plt>
  437ddc:	ldr	x8, [sp, #8]
  437de0:	mov	x0, x8
  437de4:	mov	w1, #0x902                 	// #2306
  437de8:	movk	w1, #0x8, lsl #16
  437dec:	bl	407068 <open_terminal@plt>
  437df0:	ldur	x8, [x29, #-16]
  437df4:	str	w0, [x8, #148]
  437df8:	ldur	x8, [x29, #-16]
  437dfc:	ldr	w9, [x8, #148]
  437e00:	cmp	w9, #0x0
  437e04:	cset	w9, ge  // ge = tcont
  437e08:	tbnz	w9, #0, 437ea4 <session_open_vt+0x148>
  437e0c:	mov	w8, #0x3                   	// #3
  437e10:	str	w8, [sp, #36]
  437e14:	ldur	x9, [x29, #-16]
  437e18:	ldr	w8, [x9, #148]
  437e1c:	str	w8, [sp, #32]
  437e20:	str	wzr, [sp, #28]
  437e24:	ldr	w0, [sp, #28]
  437e28:	bl	406c08 <log_get_max_level_realm@plt>
  437e2c:	ldr	w8, [sp, #36]
  437e30:	and	w8, w8, #0x7
  437e34:	cmp	w0, w8
  437e38:	b.lt	437e7c <session_open_vt+0x120>  // b.tstop
  437e3c:	ldr	w8, [sp, #28]
  437e40:	ldr	w9, [sp, #36]
  437e44:	orr	w0, w9, w8, lsl #10
  437e48:	ldr	w1, [sp, #32]
  437e4c:	ldur	x10, [x29, #-16]
  437e50:	ldr	x7, [x10, #8]
  437e54:	ldr	x2, [sp, #16]
  437e58:	mov	w3, #0x49c                 	// #1180
  437e5c:	adrp	x4, 44a000 <_fini+0x9c30>
  437e60:	add	x4, x4, #0x3fc
  437e64:	adrp	x5, 44a000 <_fini+0x9c30>
  437e68:	add	x5, x5, #0x40c
  437e6c:	sub	x6, x29, #0x25
  437e70:	bl	406c18 <log_internal_realm@plt>
  437e74:	str	w0, [sp, #4]
  437e78:	b	437e90 <session_open_vt+0x134>
  437e7c:	ldr	w0, [sp, #32]
  437e80:	bl	406c28 <abs@plt>
  437e84:	mov	w8, wzr
  437e88:	subs	w8, w8, w0, uxtb
  437e8c:	str	w8, [sp, #4]
  437e90:	ldr	w8, [sp, #4]
  437e94:	str	w8, [sp, #24]
  437e98:	ldr	w8, [sp, #24]
  437e9c:	stur	w8, [x29, #-4]
  437ea0:	b	437eb0 <session_open_vt+0x154>
  437ea4:	ldur	x8, [x29, #-16]
  437ea8:	ldr	w9, [x8, #148]
  437eac:	stur	w9, [x29, #-4]
  437eb0:	ldur	w0, [x29, #-4]
  437eb4:	ldp	x29, x30, [sp, #80]
  437eb8:	add	sp, sp, #0x60
  437ebc:	ret

0000000000437ec0 <bus_user_method_terminate>:
  437ec0:	sub	sp, sp, #0x50
  437ec4:	stp	x29, x30, [sp, #64]
  437ec8:	add	x29, sp, #0x40
  437ecc:	adrp	x8, 44a000 <_fini+0x9c30>
  437ed0:	add	x8, x8, #0x58d
  437ed4:	add	x8, x8, #0x3
  437ed8:	stur	x0, [x29, #-16]
  437edc:	stur	x1, [x29, #-24]
  437ee0:	str	x2, [sp, #32]
  437ee4:	ldur	x9, [x29, #-24]
  437ee8:	str	x9, [sp, #24]
  437eec:	str	x8, [sp, #8]
  437ef0:	ldur	x8, [x29, #-16]
  437ef4:	cmp	x8, #0x0
  437ef8:	cset	w9, ne  // ne = any
  437efc:	mov	w10, #0x1                   	// #1
  437f00:	eor	w9, w9, #0x1
  437f04:	eor	w9, w9, w10
  437f08:	eor	w9, w9, w10
  437f0c:	and	w9, w9, #0x1
  437f10:	mov	w0, w9
  437f14:	sxtw	x8, w0
  437f18:	cbz	x8, 437f40 <bus_user_method_terminate+0x80>
  437f1c:	mov	w8, wzr
  437f20:	mov	w0, w8
  437f24:	adrp	x1, 443000 <_fini+0x2c30>
  437f28:	add	x1, x1, #0x812
  437f2c:	ldr	x2, [sp, #8]
  437f30:	mov	w3, #0x92                  	// #146
  437f34:	adrp	x4, 44a000 <_fini+0x9c30>
  437f38:	add	x4, x4, #0x5ad
  437f3c:	bl	406c68 <log_assert_failed_realm@plt>
  437f40:	ldr	x8, [sp, #24]
  437f44:	cmp	x8, #0x0
  437f48:	cset	w9, ne  // ne = any
  437f4c:	mov	w10, #0x1                   	// #1
  437f50:	eor	w9, w9, #0x1
  437f54:	eor	w9, w9, w10
  437f58:	eor	w9, w9, w10
  437f5c:	and	w9, w9, #0x1
  437f60:	mov	w0, w9
  437f64:	sxtw	x8, w0
  437f68:	cbz	x8, 437f90 <bus_user_method_terminate+0xd0>
  437f6c:	mov	w8, wzr
  437f70:	mov	w0, w8
  437f74:	adrp	x1, 443000 <_fini+0x2c30>
  437f78:	add	x1, x1, #0x1dd
  437f7c:	ldr	x2, [sp, #8]
  437f80:	mov	w3, #0x93                  	// #147
  437f84:	adrp	x4, 44a000 <_fini+0x9c30>
  437f88:	add	x4, x4, #0x5ad
  437f8c:	bl	406c68 <log_assert_failed_realm@plt>
  437f90:	ldur	x0, [x29, #-16]
  437f94:	ldr	x8, [sp, #24]
  437f98:	ldr	w5, [x8, #8]
  437f9c:	ldr	x8, [sp, #24]
  437fa0:	ldr	x8, [x8]
  437fa4:	add	x6, x8, #0x1b0
  437fa8:	ldr	x7, [sp, #32]
  437fac:	mov	w1, #0x5                   	// #5
  437fb0:	adrp	x2, 447000 <_fini+0x6c30>
  437fb4:	add	x2, x2, #0x80f
  437fb8:	mov	x8, xzr
  437fbc:	mov	x3, x8
  437fc0:	mov	w9, wzr
  437fc4:	and	w4, w9, #0x1
  437fc8:	bl	407678 <bus_verify_polkit_async@plt>
  437fcc:	str	w0, [sp, #20]
  437fd0:	ldr	w9, [sp, #20]
  437fd4:	cmp	w9, #0x0
  437fd8:	cset	w9, ge  // ge = tcont
  437fdc:	tbnz	w9, #0, 437fec <bus_user_method_terminate+0x12c>
  437fe0:	ldr	w8, [sp, #20]
  437fe4:	stur	w8, [x29, #-4]
  437fe8:	b	438044 <bus_user_method_terminate+0x184>
  437fec:	ldr	w8, [sp, #20]
  437ff0:	cbnz	w8, 438000 <bus_user_method_terminate+0x140>
  437ff4:	mov	w8, #0x1                   	// #1
  437ff8:	stur	w8, [x29, #-4]
  437ffc:	b	438044 <bus_user_method_terminate+0x184>
  438000:	ldr	x0, [sp, #24]
  438004:	mov	w8, #0x1                   	// #1
  438008:	and	w1, w8, #0x1
  43800c:	bl	43b1d8 <user_stop>
  438010:	str	w0, [sp, #20]
  438014:	ldr	w8, [sp, #20]
  438018:	cmp	w8, #0x0
  43801c:	cset	w8, ge  // ge = tcont
  438020:	tbnz	w8, #0, 438030 <bus_user_method_terminate+0x170>
  438024:	ldr	w8, [sp, #20]
  438028:	stur	w8, [x29, #-4]
  43802c:	b	438044 <bus_user_method_terminate+0x184>
  438030:	ldur	x0, [x29, #-16]
  438034:	mov	x8, xzr
  438038:	mov	x1, x8
  43803c:	bl	4075b8 <sd_bus_reply_method_return@plt>
  438040:	stur	w0, [x29, #-4]
  438044:	ldur	w0, [x29, #-4]
  438048:	ldp	x29, x30, [sp, #64]
  43804c:	add	sp, sp, #0x50
  438050:	ret

0000000000438054 <bus_user_method_kill>:
  438054:	sub	sp, sp, #0x50
  438058:	stp	x29, x30, [sp, #64]
  43805c:	add	x29, sp, #0x40
  438060:	adrp	x8, 44a000 <_fini+0x9c30>
  438064:	add	x8, x8, #0x58d
  438068:	add	x8, x8, #0x3
  43806c:	stur	x0, [x29, #-16]
  438070:	stur	x1, [x29, #-24]
  438074:	str	x2, [sp, #32]
  438078:	ldur	x9, [x29, #-24]
  43807c:	str	x9, [sp, #24]
  438080:	str	x8, [sp, #8]
  438084:	ldur	x8, [x29, #-16]
  438088:	cmp	x8, #0x0
  43808c:	cset	w9, ne  // ne = any
  438090:	mov	w10, #0x1                   	// #1
  438094:	eor	w9, w9, #0x1
  438098:	eor	w9, w9, w10
  43809c:	eor	w9, w9, w10
  4380a0:	and	w9, w9, #0x1
  4380a4:	mov	w0, w9
  4380a8:	sxtw	x8, w0
  4380ac:	cbz	x8, 4380d4 <bus_user_method_kill+0x80>
  4380b0:	mov	w8, wzr
  4380b4:	mov	w0, w8
  4380b8:	adrp	x1, 443000 <_fini+0x2c30>
  4380bc:	add	x1, x1, #0x812
  4380c0:	ldr	x2, [sp, #8]
  4380c4:	mov	w3, #0xaf                  	// #175
  4380c8:	adrp	x4, 44a000 <_fini+0x9c30>
  4380cc:	add	x4, x4, #0x5f5
  4380d0:	bl	406c68 <log_assert_failed_realm@plt>
  4380d4:	ldr	x8, [sp, #24]
  4380d8:	cmp	x8, #0x0
  4380dc:	cset	w9, ne  // ne = any
  4380e0:	mov	w10, #0x1                   	// #1
  4380e4:	eor	w9, w9, #0x1
  4380e8:	eor	w9, w9, w10
  4380ec:	eor	w9, w9, w10
  4380f0:	and	w9, w9, #0x1
  4380f4:	mov	w0, w9
  4380f8:	sxtw	x8, w0
  4380fc:	cbz	x8, 438124 <bus_user_method_kill+0xd0>
  438100:	mov	w8, wzr
  438104:	mov	w0, w8
  438108:	adrp	x1, 443000 <_fini+0x2c30>
  43810c:	add	x1, x1, #0x1dd
  438110:	ldr	x2, [sp, #8]
  438114:	mov	w3, #0xb0                  	// #176
  438118:	adrp	x4, 44a000 <_fini+0x9c30>
  43811c:	add	x4, x4, #0x5f5
  438120:	bl	406c68 <log_assert_failed_realm@plt>
  438124:	ldur	x0, [x29, #-16]
  438128:	ldr	x8, [sp, #24]
  43812c:	ldr	w5, [x8, #8]
  438130:	ldr	x8, [sp, #24]
  438134:	ldr	x8, [x8]
  438138:	add	x6, x8, #0x1b0
  43813c:	ldr	x7, [sp, #32]
  438140:	mov	w1, #0x5                   	// #5
  438144:	adrp	x2, 447000 <_fini+0x6c30>
  438148:	add	x2, x2, #0x80f
  43814c:	mov	x8, xzr
  438150:	mov	x3, x8
  438154:	mov	w9, wzr
  438158:	and	w4, w9, #0x1
  43815c:	bl	407678 <bus_verify_polkit_async@plt>
  438160:	str	w0, [sp, #16]
  438164:	ldr	w9, [sp, #16]
  438168:	cmp	w9, #0x0
  43816c:	cset	w9, ge  // ge = tcont
  438170:	tbnz	w9, #0, 438180 <bus_user_method_kill+0x12c>
  438174:	ldr	w8, [sp, #16]
  438178:	stur	w8, [x29, #-4]
  43817c:	b	438238 <bus_user_method_kill+0x1e4>
  438180:	ldr	w8, [sp, #16]
  438184:	cbnz	w8, 438194 <bus_user_method_kill+0x140>
  438188:	mov	w8, #0x1                   	// #1
  43818c:	stur	w8, [x29, #-4]
  438190:	b	438238 <bus_user_method_kill+0x1e4>
  438194:	ldur	x0, [x29, #-16]
  438198:	adrp	x1, 447000 <_fini+0x6c30>
  43819c:	add	x1, x1, #0x2c1
  4381a0:	add	x2, sp, #0x14
  4381a4:	bl	4074c8 <sd_bus_message_read@plt>
  4381a8:	str	w0, [sp, #16]
  4381ac:	ldr	w8, [sp, #16]
  4381b0:	cmp	w8, #0x0
  4381b4:	cset	w8, ge  // ge = tcont
  4381b8:	tbnz	w8, #0, 4381c8 <bus_user_method_kill+0x174>
  4381bc:	ldr	w8, [sp, #16]
  4381c0:	stur	w8, [x29, #-4]
  4381c4:	b	438238 <bus_user_method_kill+0x1e4>
  4381c8:	ldr	w0, [sp, #20]
  4381cc:	bl	438248 <SIGNAL_VALID>
  4381d0:	tbnz	w0, #0, 4381f8 <bus_user_method_kill+0x1a4>
  4381d4:	ldr	x0, [sp, #32]
  4381d8:	ldr	w3, [sp, #20]
  4381dc:	adrp	x1, 445000 <_fini+0x4c30>
  4381e0:	add	x1, x1, #0x37d
  4381e4:	adrp	x2, 448000 <_fini+0x7c30>
  4381e8:	add	x2, x2, #0x547
  4381ec:	bl	407468 <sd_bus_error_setf@plt>
  4381f0:	stur	w0, [x29, #-4]
  4381f4:	b	438238 <bus_user_method_kill+0x1e4>
  4381f8:	ldr	x0, [sp, #24]
  4381fc:	ldr	w1, [sp, #20]
  438200:	bl	43c508 <user_kill>
  438204:	str	w0, [sp, #16]
  438208:	ldr	w8, [sp, #16]
  43820c:	cmp	w8, #0x0
  438210:	cset	w8, ge  // ge = tcont
  438214:	tbnz	w8, #0, 438224 <bus_user_method_kill+0x1d0>
  438218:	ldr	w8, [sp, #16]
  43821c:	stur	w8, [x29, #-4]
  438220:	b	438238 <bus_user_method_kill+0x1e4>
  438224:	ldur	x0, [x29, #-16]
  438228:	mov	x8, xzr
  43822c:	mov	x1, x8
  438230:	bl	4075b8 <sd_bus_reply_method_return@plt>
  438234:	stur	w0, [x29, #-4]
  438238:	ldur	w0, [x29, #-4]
  43823c:	ldp	x29, x30, [sp, #64]
  438240:	add	sp, sp, #0x50
  438244:	ret

0000000000438248 <SIGNAL_VALID>:
  438248:	sub	sp, sp, #0x10
  43824c:	str	w0, [sp, #12]
  438250:	ldr	w8, [sp, #12]
  438254:	cmp	w8, #0x0
  438258:	cset	w8, le
  43825c:	mov	w9, #0x0                   	// #0
  438260:	str	w9, [sp, #8]
  438264:	tbnz	w8, #0, 438278 <SIGNAL_VALID+0x30>
  438268:	ldr	w8, [sp, #12]
  43826c:	cmp	w8, #0x41
  438270:	cset	w8, lt  // lt = tstop
  438274:	str	w8, [sp, #8]
  438278:	ldr	w8, [sp, #8]
  43827c:	and	w0, w8, #0x1
  438280:	add	sp, sp, #0x10
  438284:	ret

0000000000438288 <property_get_display>:
  438288:	sub	sp, sp, #0x90
  43828c:	stp	x29, x30, [sp, #128]
  438290:	add	x29, sp, #0x80
  438294:	mov	x8, xzr
  438298:	adrp	x9, 44a000 <_fini+0x9c30>
  43829c:	add	x9, x9, #0x58d
  4382a0:	add	x9, x9, #0x3
  4382a4:	adrp	x10, 44a000 <_fini+0x9c30>
  4382a8:	add	x10, x10, #0x7d1
  4382ac:	stur	x0, [x29, #-16]
  4382b0:	stur	x1, [x29, #-24]
  4382b4:	stur	x2, [x29, #-32]
  4382b8:	stur	x3, [x29, #-40]
  4382bc:	stur	x4, [x29, #-48]
  4382c0:	stur	x5, [x29, #-56]
  4382c4:	str	x6, [sp, #64]
  4382c8:	str	x8, [sp, #56]
  4382cc:	ldur	x8, [x29, #-56]
  4382d0:	str	x8, [sp, #48]
  4382d4:	str	x9, [sp, #32]
  4382d8:	str	x10, [sp, #24]
  4382dc:	ldur	x8, [x29, #-16]
  4382e0:	cmp	x8, #0x0
  4382e4:	cset	w9, ne  // ne = any
  4382e8:	mov	w10, #0x1                   	// #1
  4382ec:	eor	w9, w9, #0x1
  4382f0:	eor	w9, w9, w10
  4382f4:	eor	w9, w9, w10
  4382f8:	and	w9, w9, #0x1
  4382fc:	mov	w0, w9
  438300:	sxtw	x8, w0
  438304:	cbz	x8, 438328 <property_get_display+0xa0>
  438308:	mov	w8, wzr
  43830c:	mov	w0, w8
  438310:	adrp	x1, 444000 <_fini+0x3c30>
  438314:	add	x1, x1, #0x393
  438318:	ldr	x2, [sp, #32]
  43831c:	mov	w3, #0x20                  	// #32
  438320:	ldr	x4, [sp, #24]
  438324:	bl	406c68 <log_assert_failed_realm@plt>
  438328:	ldur	x8, [x29, #-48]
  43832c:	cmp	x8, #0x0
  438330:	cset	w9, ne  // ne = any
  438334:	mov	w10, #0x1                   	// #1
  438338:	eor	w9, w9, #0x1
  43833c:	eor	w9, w9, w10
  438340:	eor	w9, w9, w10
  438344:	and	w9, w9, #0x1
  438348:	mov	w0, w9
  43834c:	sxtw	x8, w0
  438350:	cbz	x8, 438374 <property_get_display+0xec>
  438354:	mov	w8, wzr
  438358:	mov	w0, w8
  43835c:	adrp	x1, 444000 <_fini+0x3c30>
  438360:	add	x1, x1, #0x417
  438364:	ldr	x2, [sp, #32]
  438368:	mov	w3, #0x21                  	// #33
  43836c:	ldr	x4, [sp, #24]
  438370:	bl	406c68 <log_assert_failed_realm@plt>
  438374:	ldr	x8, [sp, #48]
  438378:	cmp	x8, #0x0
  43837c:	cset	w9, ne  // ne = any
  438380:	mov	w10, #0x1                   	// #1
  438384:	eor	w9, w9, #0x1
  438388:	eor	w9, w9, w10
  43838c:	eor	w9, w9, w10
  438390:	and	w9, w9, #0x1
  438394:	mov	w0, w9
  438398:	sxtw	x8, w0
  43839c:	cbz	x8, 4383c0 <property_get_display+0x138>
  4383a0:	mov	w8, wzr
  4383a4:	mov	w0, w8
  4383a8:	adrp	x1, 443000 <_fini+0x2c30>
  4383ac:	add	x1, x1, #0x1dd
  4383b0:	ldr	x2, [sp, #32]
  4383b4:	mov	w3, #0x22                  	// #34
  4383b8:	ldr	x4, [sp, #24]
  4383bc:	bl	406c68 <log_assert_failed_realm@plt>
  4383c0:	ldr	x8, [sp, #48]
  4383c4:	ldr	x8, [x8, #80]
  4383c8:	cbz	x8, 4383e0 <property_get_display+0x158>
  4383cc:	ldr	x8, [sp, #48]
  4383d0:	ldr	x0, [x8, #80]
  4383d4:	bl	42ee0c <session_bus_path>
  4383d8:	str	x0, [sp, #16]
  4383dc:	b	4383f0 <property_get_display+0x168>
  4383e0:	adrp	x0, 447000 <_fini+0x6c30>
  4383e4:	add	x0, x0, #0xaa5
  4383e8:	bl	407168 <strdup@plt>
  4383ec:	str	x0, [sp, #16]
  4383f0:	ldr	x8, [sp, #16]
  4383f4:	str	x8, [sp, #56]
  4383f8:	ldr	x8, [sp, #56]
  4383fc:	cbnz	x8, 438414 <property_get_display+0x18c>
  438400:	mov	w8, #0xfffffff4            	// #-12
  438404:	stur	w8, [x29, #-4]
  438408:	mov	w8, #0x1                   	// #1
  43840c:	str	w8, [sp, #44]
  438410:	b	438470 <property_get_display+0x1e8>
  438414:	ldur	x0, [x29, #-48]
  438418:	ldr	x8, [sp, #48]
  43841c:	ldr	x8, [x8, #80]
  438420:	str	x0, [sp, #8]
  438424:	cbz	x8, 43843c <property_get_display+0x1b4>
  438428:	ldr	x8, [sp, #48]
  43842c:	ldr	x8, [x8, #80]
  438430:	ldr	x8, [x8, #8]
  438434:	str	x8, [sp]
  438438:	b	438448 <property_get_display+0x1c0>
  43843c:	adrp	x8, 443000 <_fini+0x2c30>
  438440:	add	x8, x8, #0x467
  438444:	str	x8, [sp]
  438448:	ldr	x8, [sp]
  43844c:	ldr	x3, [sp, #56]
  438450:	ldr	x0, [sp, #8]
  438454:	adrp	x1, 445000 <_fini+0x4c30>
  438458:	add	x1, x1, #0x2d8
  43845c:	mov	x2, x8
  438460:	bl	407508 <sd_bus_message_append@plt>
  438464:	stur	w0, [x29, #-4]
  438468:	mov	w9, #0x1                   	// #1
  43846c:	str	w9, [sp, #44]
  438470:	add	x0, sp, #0x38
  438474:	bl	43958c <freep>
  438478:	ldur	w0, [x29, #-4]
  43847c:	ldp	x29, x30, [sp, #128]
  438480:	add	sp, sp, #0x90
  438484:	ret

0000000000438488 <property_get_state>:
  438488:	sub	sp, sp, #0x70
  43848c:	stp	x29, x30, [sp, #96]
  438490:	add	x29, sp, #0x60
  438494:	adrp	x8, 44a000 <_fini+0x9c30>
  438498:	add	x8, x8, #0x58d
  43849c:	add	x8, x8, #0x3
  4384a0:	adrp	x9, 448000 <_fini+0x7c30>
  4384a4:	add	x9, x9, #0xc15
  4384a8:	stur	x0, [x29, #-8]
  4384ac:	stur	x1, [x29, #-16]
  4384b0:	stur	x2, [x29, #-24]
  4384b4:	stur	x3, [x29, #-32]
  4384b8:	stur	x4, [x29, #-40]
  4384bc:	str	x5, [sp, #48]
  4384c0:	str	x6, [sp, #40]
  4384c4:	ldr	x10, [sp, #48]
  4384c8:	str	x10, [sp, #32]
  4384cc:	str	x8, [sp, #24]
  4384d0:	str	x9, [sp, #16]
  4384d4:	ldur	x8, [x29, #-8]
  4384d8:	cmp	x8, #0x0
  4384dc:	cset	w9, ne  // ne = any
  4384e0:	mov	w10, #0x1                   	// #1
  4384e4:	eor	w9, w9, #0x1
  4384e8:	eor	w9, w9, w10
  4384ec:	eor	w9, w9, w10
  4384f0:	and	w9, w9, #0x1
  4384f4:	mov	w0, w9
  4384f8:	sxtw	x8, w0
  4384fc:	cbz	x8, 438520 <property_get_state+0x98>
  438500:	mov	w8, wzr
  438504:	mov	w0, w8
  438508:	adrp	x1, 444000 <_fini+0x3c30>
  43850c:	add	x1, x1, #0x393
  438510:	ldr	x2, [sp, #24]
  438514:	mov	w3, #0x12                  	// #18
  438518:	ldr	x4, [sp, #16]
  43851c:	bl	406c68 <log_assert_failed_realm@plt>
  438520:	ldur	x8, [x29, #-40]
  438524:	cmp	x8, #0x0
  438528:	cset	w9, ne  // ne = any
  43852c:	mov	w10, #0x1                   	// #1
  438530:	eor	w9, w9, #0x1
  438534:	eor	w9, w9, w10
  438538:	eor	w9, w9, w10
  43853c:	and	w9, w9, #0x1
  438540:	mov	w0, w9
  438544:	sxtw	x8, w0
  438548:	cbz	x8, 43856c <property_get_state+0xe4>
  43854c:	mov	w8, wzr
  438550:	mov	w0, w8
  438554:	adrp	x1, 444000 <_fini+0x3c30>
  438558:	add	x1, x1, #0x417
  43855c:	ldr	x2, [sp, #24]
  438560:	mov	w3, #0x12                  	// #18
  438564:	ldr	x4, [sp, #16]
  438568:	bl	406c68 <log_assert_failed_realm@plt>
  43856c:	ldr	x8, [sp, #32]
  438570:	cmp	x8, #0x0
  438574:	cset	w9, ne  // ne = any
  438578:	mov	w10, #0x1                   	// #1
  43857c:	eor	w9, w9, #0x1
  438580:	eor	w9, w9, w10
  438584:	eor	w9, w9, w10
  438588:	and	w9, w9, #0x1
  43858c:	mov	w0, w9
  438590:	sxtw	x8, w0
  438594:	cbz	x8, 4385b8 <property_get_state+0x130>
  438598:	mov	w8, wzr
  43859c:	mov	w0, w8
  4385a0:	adrp	x1, 441000 <_fini+0xc30>
  4385a4:	add	x1, x1, #0xd41
  4385a8:	ldr	x2, [sp, #24]
  4385ac:	mov	w3, #0x12                  	// #18
  4385b0:	ldr	x4, [sp, #16]
  4385b4:	bl	406c68 <log_assert_failed_realm@plt>
  4385b8:	ldur	x0, [x29, #-40]
  4385bc:	ldr	x8, [sp, #32]
  4385c0:	str	x0, [sp, #8]
  4385c4:	mov	x0, x8
  4385c8:	bl	43c368 <user_get_state>
  4385cc:	bl	43d024 <user_state_to_string>
  4385d0:	ldr	x8, [sp, #8]
  4385d4:	str	x0, [sp]
  4385d8:	mov	x0, x8
  4385dc:	adrp	x1, 442000 <_fini+0x1c30>
  4385e0:	add	x1, x1, #0xf2
  4385e4:	ldr	x2, [sp]
  4385e8:	bl	407508 <sd_bus_message_append@plt>
  4385ec:	ldp	x29, x30, [sp, #96]
  4385f0:	add	sp, sp, #0x70
  4385f4:	ret

00000000004385f8 <property_get_sessions>:
  4385f8:	sub	sp, sp, #0x90
  4385fc:	stp	x29, x30, [sp, #128]
  438600:	add	x29, sp, #0x80
  438604:	adrp	x8, 44a000 <_fini+0x9c30>
  438608:	add	x8, x8, #0x58d
  43860c:	add	x8, x8, #0x3
  438610:	adrp	x9, 447000 <_fini+0x6c30>
  438614:	add	x9, x9, #0xc1c
  438618:	stur	x0, [x29, #-16]
  43861c:	stur	x1, [x29, #-24]
  438620:	stur	x2, [x29, #-32]
  438624:	stur	x3, [x29, #-40]
  438628:	stur	x4, [x29, #-48]
  43862c:	stur	x5, [x29, #-56]
  438630:	str	x6, [sp, #64]
  438634:	ldur	x10, [x29, #-56]
  438638:	str	x10, [sp, #56]
  43863c:	str	x8, [sp, #16]
  438640:	str	x9, [sp, #8]
  438644:	ldur	x8, [x29, #-16]
  438648:	cmp	x8, #0x0
  43864c:	cset	w9, ne  // ne = any
  438650:	mov	w10, #0x1                   	// #1
  438654:	eor	w9, w9, #0x1
  438658:	eor	w9, w9, w10
  43865c:	eor	w9, w9, w10
  438660:	and	w9, w9, #0x1
  438664:	mov	w0, w9
  438668:	sxtw	x8, w0
  43866c:	cbz	x8, 438690 <property_get_sessions+0x98>
  438670:	mov	w8, wzr
  438674:	mov	w0, w8
  438678:	adrp	x1, 444000 <_fini+0x3c30>
  43867c:	add	x1, x1, #0x393
  438680:	ldr	x2, [sp, #16]
  438684:	mov	w3, #0x38                  	// #56
  438688:	ldr	x4, [sp, #8]
  43868c:	bl	406c68 <log_assert_failed_realm@plt>
  438690:	ldur	x8, [x29, #-48]
  438694:	cmp	x8, #0x0
  438698:	cset	w9, ne  // ne = any
  43869c:	mov	w10, #0x1                   	// #1
  4386a0:	eor	w9, w9, #0x1
  4386a4:	eor	w9, w9, w10
  4386a8:	eor	w9, w9, w10
  4386ac:	and	w9, w9, #0x1
  4386b0:	mov	w0, w9
  4386b4:	sxtw	x8, w0
  4386b8:	cbz	x8, 4386dc <property_get_sessions+0xe4>
  4386bc:	mov	w8, wzr
  4386c0:	mov	w0, w8
  4386c4:	adrp	x1, 444000 <_fini+0x3c30>
  4386c8:	add	x1, x1, #0x417
  4386cc:	ldr	x2, [sp, #16]
  4386d0:	mov	w3, #0x39                  	// #57
  4386d4:	ldr	x4, [sp, #8]
  4386d8:	bl	406c68 <log_assert_failed_realm@plt>
  4386dc:	ldr	x8, [sp, #56]
  4386e0:	cmp	x8, #0x0
  4386e4:	cset	w9, ne  // ne = any
  4386e8:	mov	w10, #0x1                   	// #1
  4386ec:	eor	w9, w9, #0x1
  4386f0:	eor	w9, w9, w10
  4386f4:	eor	w9, w9, w10
  4386f8:	and	w9, w9, #0x1
  4386fc:	mov	w0, w9
  438700:	sxtw	x8, w0
  438704:	cbz	x8, 438728 <property_get_sessions+0x130>
  438708:	mov	w8, wzr
  43870c:	mov	w0, w8
  438710:	adrp	x1, 443000 <_fini+0x2c30>
  438714:	add	x1, x1, #0x1dd
  438718:	ldr	x2, [sp, #16]
  43871c:	mov	w3, #0x3a                  	// #58
  438720:	ldr	x4, [sp, #8]
  438724:	bl	406c68 <log_assert_failed_realm@plt>
  438728:	ldur	x0, [x29, #-48]
  43872c:	mov	w1, #0x61                  	// #97
  438730:	adrp	x2, 445000 <_fini+0x4c30>
  438734:	add	x2, x2, #0x2d8
  438738:	bl	407588 <sd_bus_message_open_container@plt>
  43873c:	str	w0, [sp, #44]
  438740:	ldr	w8, [sp, #44]
  438744:	cmp	w8, #0x0
  438748:	cset	w8, ge  // ge = tcont
  43874c:	tbnz	w8, #0, 43875c <property_get_sessions+0x164>
  438750:	ldr	w8, [sp, #44]
  438754:	stur	w8, [x29, #-4]
  438758:	b	43881c <property_get_sessions+0x224>
  43875c:	ldr	x8, [sp, #56]
  438760:	ldr	x8, [x8, #128]
  438764:	str	x8, [sp, #48]
  438768:	ldr	x8, [sp, #48]
  43876c:	cbz	x8, 438810 <property_get_sessions+0x218>
  438770:	mov	x8, xzr
  438774:	str	x8, [sp, #32]
  438778:	ldr	x0, [sp, #48]
  43877c:	bl	42ee0c <session_bus_path>
  438780:	str	x0, [sp, #32]
  438784:	ldr	x8, [sp, #32]
  438788:	cbnz	x8, 4387a0 <property_get_sessions+0x1a8>
  43878c:	mov	w8, #0xfffffff4            	// #-12
  438790:	stur	w8, [x29, #-4]
  438794:	mov	w8, #0x1                   	// #1
  438798:	str	w8, [sp, #28]
  43879c:	b	4387e8 <property_get_sessions+0x1f0>
  4387a0:	ldur	x0, [x29, #-48]
  4387a4:	ldr	x8, [sp, #48]
  4387a8:	ldr	x2, [x8, #8]
  4387ac:	ldr	x3, [sp, #32]
  4387b0:	adrp	x1, 445000 <_fini+0x4c30>
  4387b4:	add	x1, x1, #0x2d8
  4387b8:	bl	407508 <sd_bus_message_append@plt>
  4387bc:	str	w0, [sp, #44]
  4387c0:	ldr	w9, [sp, #44]
  4387c4:	cmp	w9, #0x0
  4387c8:	cset	w9, ge  // ge = tcont
  4387cc:	tbnz	w9, #0, 4387e4 <property_get_sessions+0x1ec>
  4387d0:	ldr	w8, [sp, #44]
  4387d4:	stur	w8, [x29, #-4]
  4387d8:	mov	w8, #0x1                   	// #1
  4387dc:	str	w8, [sp, #28]
  4387e0:	b	4387e8 <property_get_sessions+0x1f0>
  4387e4:	str	wzr, [sp, #28]
  4387e8:	add	x0, sp, #0x20
  4387ec:	bl	43958c <freep>
  4387f0:	ldr	w8, [sp, #28]
  4387f4:	cbz	w8, 438800 <property_get_sessions+0x208>
  4387f8:	b	4387fc <property_get_sessions+0x204>
  4387fc:	b	43881c <property_get_sessions+0x224>
  438800:	ldr	x8, [sp, #48]
  438804:	ldr	x8, [x8, #256]
  438808:	str	x8, [sp, #48]
  43880c:	b	438768 <property_get_sessions+0x170>
  438810:	ldur	x0, [x29, #-48]
  438814:	bl	407598 <sd_bus_message_close_container@plt>
  438818:	stur	w0, [x29, #-4]
  43881c:	ldur	w0, [x29, #-4]
  438820:	ldp	x29, x30, [sp, #128]
  438824:	add	sp, sp, #0x90
  438828:	ret

000000000043882c <property_get_idle_hint>:
  43882c:	sub	sp, sp, #0x70
  438830:	stp	x29, x30, [sp, #96]
  438834:	add	x29, sp, #0x60
  438838:	adrp	x8, 44a000 <_fini+0x9c30>
  43883c:	add	x8, x8, #0x58d
  438840:	add	x8, x8, #0x3
  438844:	adrp	x9, 444000 <_fini+0x3c30>
  438848:	add	x9, x9, #0xaf7
  43884c:	stur	x0, [x29, #-8]
  438850:	stur	x1, [x29, #-16]
  438854:	stur	x2, [x29, #-24]
  438858:	stur	x3, [x29, #-32]
  43885c:	stur	x4, [x29, #-40]
  438860:	str	x5, [sp, #48]
  438864:	str	x6, [sp, #40]
  438868:	ldr	x10, [sp, #48]
  43886c:	str	x10, [sp, #32]
  438870:	str	x8, [sp, #24]
  438874:	str	x9, [sp, #16]
  438878:	ldur	x8, [x29, #-8]
  43887c:	cmp	x8, #0x0
  438880:	cset	w9, ne  // ne = any
  438884:	mov	w10, #0x1                   	// #1
  438888:	eor	w9, w9, #0x1
  43888c:	eor	w9, w9, w10
  438890:	eor	w9, w9, w10
  438894:	and	w9, w9, #0x1
  438898:	mov	w0, w9
  43889c:	sxtw	x8, w0
  4388a0:	cbz	x8, 4388c4 <property_get_idle_hint+0x98>
  4388a4:	mov	w8, wzr
  4388a8:	mov	w0, w8
  4388ac:	adrp	x1, 444000 <_fini+0x3c30>
  4388b0:	add	x1, x1, #0x393
  4388b4:	ldr	x2, [sp, #24]
  4388b8:	mov	w3, #0x5b                  	// #91
  4388bc:	ldr	x4, [sp, #16]
  4388c0:	bl	406c68 <log_assert_failed_realm@plt>
  4388c4:	ldur	x8, [x29, #-40]
  4388c8:	cmp	x8, #0x0
  4388cc:	cset	w9, ne  // ne = any
  4388d0:	mov	w10, #0x1                   	// #1
  4388d4:	eor	w9, w9, #0x1
  4388d8:	eor	w9, w9, w10
  4388dc:	eor	w9, w9, w10
  4388e0:	and	w9, w9, #0x1
  4388e4:	mov	w0, w9
  4388e8:	sxtw	x8, w0
  4388ec:	cbz	x8, 438910 <property_get_idle_hint+0xe4>
  4388f0:	mov	w8, wzr
  4388f4:	mov	w0, w8
  4388f8:	adrp	x1, 444000 <_fini+0x3c30>
  4388fc:	add	x1, x1, #0x417
  438900:	ldr	x2, [sp, #24]
  438904:	mov	w3, #0x5c                  	// #92
  438908:	ldr	x4, [sp, #16]
  43890c:	bl	406c68 <log_assert_failed_realm@plt>
  438910:	ldr	x8, [sp, #32]
  438914:	cmp	x8, #0x0
  438918:	cset	w9, ne  // ne = any
  43891c:	mov	w10, #0x1                   	// #1
  438920:	eor	w9, w9, #0x1
  438924:	eor	w9, w9, w10
  438928:	eor	w9, w9, w10
  43892c:	and	w9, w9, #0x1
  438930:	mov	w0, w9
  438934:	sxtw	x8, w0
  438938:	cbz	x8, 43895c <property_get_idle_hint+0x130>
  43893c:	mov	w8, wzr
  438940:	mov	w0, w8
  438944:	adrp	x1, 443000 <_fini+0x2c30>
  438948:	add	x1, x1, #0x1dd
  43894c:	ldr	x2, [sp, #24]
  438950:	mov	w3, #0x5d                  	// #93
  438954:	ldr	x4, [sp, #16]
  438958:	bl	406c68 <log_assert_failed_realm@plt>
  43895c:	ldur	x0, [x29, #-40]
  438960:	ldr	x8, [sp, #32]
  438964:	str	x0, [sp, #8]
  438968:	mov	x0, x8
  43896c:	mov	x8, xzr
  438970:	mov	x1, x8
  438974:	bl	43b888 <user_get_idle_hint>
  438978:	cmp	w0, #0x0
  43897c:	cset	w9, gt
  438980:	and	w2, w9, #0x1
  438984:	ldr	x0, [sp, #8]
  438988:	adrp	x1, 441000 <_fini+0xc30>
  43898c:	add	x1, x1, #0xe0e
  438990:	bl	407508 <sd_bus_message_append@plt>
  438994:	ldp	x29, x30, [sp, #96]
  438998:	add	sp, sp, #0x70
  43899c:	ret

00000000004389a0 <property_get_idle_since_hint>:
  4389a0:	sub	sp, sp, #0x80
  4389a4:	stp	x29, x30, [sp, #112]
  4389a8:	add	x29, sp, #0x70
  4389ac:	adrp	x8, 44a000 <_fini+0x9c30>
  4389b0:	add	x8, x8, #0x58d
  4389b4:	add	x8, x8, #0x3
  4389b8:	adrp	x9, 444000 <_fini+0x3c30>
  4389bc:	add	x9, x9, #0xb70
  4389c0:	stur	x0, [x29, #-8]
  4389c4:	stur	x1, [x29, #-16]
  4389c8:	stur	x2, [x29, #-24]
  4389cc:	stur	x3, [x29, #-32]
  4389d0:	stur	x4, [x29, #-40]
  4389d4:	stur	x5, [x29, #-48]
  4389d8:	str	x6, [sp, #56]
  4389dc:	ldur	x10, [x29, #-48]
  4389e0:	str	x10, [sp, #48]
  4389e4:	str	xzr, [sp, #32]
  4389e8:	str	xzr, [sp, #40]
  4389ec:	str	x8, [sp, #16]
  4389f0:	str	x9, [sp, #8]
  4389f4:	ldur	x8, [x29, #-8]
  4389f8:	cmp	x8, #0x0
  4389fc:	cset	w9, ne  // ne = any
  438a00:	mov	w10, #0x1                   	// #1
  438a04:	eor	w9, w9, #0x1
  438a08:	eor	w9, w9, w10
  438a0c:	eor	w9, w9, w10
  438a10:	and	w9, w9, #0x1
  438a14:	mov	w0, w9
  438a18:	sxtw	x8, w0
  438a1c:	cbz	x8, 438a40 <property_get_idle_since_hint+0xa0>
  438a20:	mov	w8, wzr
  438a24:	mov	w0, w8
  438a28:	adrp	x1, 444000 <_fini+0x3c30>
  438a2c:	add	x1, x1, #0x393
  438a30:	ldr	x2, [sp, #16]
  438a34:	mov	w3, #0x6f                  	// #111
  438a38:	ldr	x4, [sp, #8]
  438a3c:	bl	406c68 <log_assert_failed_realm@plt>
  438a40:	ldur	x8, [x29, #-40]
  438a44:	cmp	x8, #0x0
  438a48:	cset	w9, ne  // ne = any
  438a4c:	mov	w10, #0x1                   	// #1
  438a50:	eor	w9, w9, #0x1
  438a54:	eor	w9, w9, w10
  438a58:	eor	w9, w9, w10
  438a5c:	and	w9, w9, #0x1
  438a60:	mov	w0, w9
  438a64:	sxtw	x8, w0
  438a68:	cbz	x8, 438a8c <property_get_idle_since_hint+0xec>
  438a6c:	mov	w8, wzr
  438a70:	mov	w0, w8
  438a74:	adrp	x1, 444000 <_fini+0x3c30>
  438a78:	add	x1, x1, #0x417
  438a7c:	ldr	x2, [sp, #16]
  438a80:	mov	w3, #0x70                  	// #112
  438a84:	ldr	x4, [sp, #8]
  438a88:	bl	406c68 <log_assert_failed_realm@plt>
  438a8c:	ldr	x8, [sp, #48]
  438a90:	cmp	x8, #0x0
  438a94:	cset	w9, ne  // ne = any
  438a98:	mov	w10, #0x1                   	// #1
  438a9c:	eor	w9, w9, #0x1
  438aa0:	eor	w9, w9, w10
  438aa4:	eor	w9, w9, w10
  438aa8:	and	w9, w9, #0x1
  438aac:	mov	w0, w9
  438ab0:	sxtw	x8, w0
  438ab4:	cbz	x8, 438ad8 <property_get_idle_since_hint+0x138>
  438ab8:	mov	w8, wzr
  438abc:	mov	w0, w8
  438ac0:	adrp	x1, 443000 <_fini+0x2c30>
  438ac4:	add	x1, x1, #0x1dd
  438ac8:	ldr	x2, [sp, #16]
  438acc:	mov	w3, #0x71                  	// #113
  438ad0:	ldr	x4, [sp, #8]
  438ad4:	bl	406c68 <log_assert_failed_realm@plt>
  438ad8:	ldr	x0, [sp, #48]
  438adc:	add	x1, sp, #0x20
  438ae0:	bl	43b888 <user_get_idle_hint>
  438ae4:	ldur	x8, [x29, #-32]
  438ae8:	mov	x0, x8
  438aec:	adrp	x1, 443000 <_fini+0x2c30>
  438af0:	add	x1, x1, #0x285
  438af4:	bl	407158 <strcmp@plt>
  438af8:	cbnz	w0, 438b08 <property_get_idle_since_hint+0x168>
  438afc:	ldr	x8, [sp, #32]
  438b00:	str	x8, [sp]
  438b04:	b	438b10 <property_get_idle_since_hint+0x170>
  438b08:	ldr	x8, [sp, #40]
  438b0c:	str	x8, [sp]
  438b10:	ldr	x8, [sp]
  438b14:	str	x8, [sp, #24]
  438b18:	ldur	x0, [x29, #-40]
  438b1c:	ldr	x2, [sp, #24]
  438b20:	adrp	x1, 443000 <_fini+0x2c30>
  438b24:	add	x1, x1, #0x250
  438b28:	bl	407508 <sd_bus_message_append@plt>
  438b2c:	ldp	x29, x30, [sp, #112]
  438b30:	add	sp, sp, #0x80
  438b34:	ret

0000000000438b38 <property_get_linger>:
  438b38:	sub	sp, sp, #0x70
  438b3c:	stp	x29, x30, [sp, #96]
  438b40:	add	x29, sp, #0x60
  438b44:	adrp	x8, 44a000 <_fini+0x9c30>
  438b48:	add	x8, x8, #0x58d
  438b4c:	add	x8, x8, #0x3
  438b50:	adrp	x9, 44a000 <_fini+0x9c30>
  438b54:	add	x9, x9, #0x848
  438b58:	stur	x0, [x29, #-8]
  438b5c:	stur	x1, [x29, #-16]
  438b60:	stur	x2, [x29, #-24]
  438b64:	stur	x3, [x29, #-32]
  438b68:	stur	x4, [x29, #-40]
  438b6c:	str	x5, [sp, #48]
  438b70:	str	x6, [sp, #40]
  438b74:	ldr	x10, [sp, #48]
  438b78:	str	x10, [sp, #32]
  438b7c:	str	x8, [sp, #16]
  438b80:	str	x9, [sp, #8]
  438b84:	ldur	x8, [x29, #-8]
  438b88:	cmp	x8, #0x0
  438b8c:	cset	w9, ne  // ne = any
  438b90:	mov	w10, #0x1                   	// #1
  438b94:	eor	w9, w9, #0x1
  438b98:	eor	w9, w9, w10
  438b9c:	eor	w9, w9, w10
  438ba0:	and	w9, w9, #0x1
  438ba4:	mov	w0, w9
  438ba8:	sxtw	x8, w0
  438bac:	cbz	x8, 438bd0 <property_get_linger+0x98>
  438bb0:	mov	w8, wzr
  438bb4:	mov	w0, w8
  438bb8:	adrp	x1, 444000 <_fini+0x3c30>
  438bbc:	add	x1, x1, #0x393
  438bc0:	ldr	x2, [sp, #16]
  438bc4:	mov	w3, #0x85                  	// #133
  438bc8:	ldr	x4, [sp, #8]
  438bcc:	bl	406c68 <log_assert_failed_realm@plt>
  438bd0:	ldur	x8, [x29, #-40]
  438bd4:	cmp	x8, #0x0
  438bd8:	cset	w9, ne  // ne = any
  438bdc:	mov	w10, #0x1                   	// #1
  438be0:	eor	w9, w9, #0x1
  438be4:	eor	w9, w9, w10
  438be8:	eor	w9, w9, w10
  438bec:	and	w9, w9, #0x1
  438bf0:	mov	w0, w9
  438bf4:	sxtw	x8, w0
  438bf8:	cbz	x8, 438c1c <property_get_linger+0xe4>
  438bfc:	mov	w8, wzr
  438c00:	mov	w0, w8
  438c04:	adrp	x1, 444000 <_fini+0x3c30>
  438c08:	add	x1, x1, #0x417
  438c0c:	ldr	x2, [sp, #16]
  438c10:	mov	w3, #0x86                  	// #134
  438c14:	ldr	x4, [sp, #8]
  438c18:	bl	406c68 <log_assert_failed_realm@plt>
  438c1c:	ldr	x8, [sp, #32]
  438c20:	cmp	x8, #0x0
  438c24:	cset	w9, ne  // ne = any
  438c28:	mov	w10, #0x1                   	// #1
  438c2c:	eor	w9, w9, #0x1
  438c30:	eor	w9, w9, w10
  438c34:	eor	w9, w9, w10
  438c38:	and	w9, w9, #0x1
  438c3c:	mov	w0, w9
  438c40:	sxtw	x8, w0
  438c44:	cbz	x8, 438c68 <property_get_linger+0x130>
  438c48:	mov	w8, wzr
  438c4c:	mov	w0, w8
  438c50:	adrp	x1, 443000 <_fini+0x2c30>
  438c54:	add	x1, x1, #0x1dd
  438c58:	ldr	x2, [sp, #16]
  438c5c:	mov	w3, #0x87                  	// #135
  438c60:	ldr	x4, [sp, #8]
  438c64:	bl	406c68 <log_assert_failed_realm@plt>
  438c68:	ldr	x0, [sp, #32]
  438c6c:	bl	43b9f0 <user_check_linger_file>
  438c70:	str	w0, [sp, #28]
  438c74:	ldur	x0, [x29, #-40]
  438c78:	ldr	w8, [sp, #28]
  438c7c:	cmp	w8, #0x0
  438c80:	cset	w8, gt
  438c84:	and	w2, w8, #0x1
  438c88:	adrp	x1, 441000 <_fini+0xc30>
  438c8c:	add	x1, x1, #0xe0e
  438c90:	bl	407508 <sd_bus_message_append@plt>
  438c94:	ldp	x29, x30, [sp, #96]
  438c98:	add	sp, sp, #0x70
  438c9c:	ret

0000000000438ca0 <user_object_find>:
  438ca0:	sub	sp, sp, #0x90
  438ca4:	stp	x29, x30, [sp, #128]
  438ca8:	add	x29, sp, #0x80
  438cac:	adrp	x8, 44a000 <_fini+0x9c30>
  438cb0:	add	x8, x8, #0x58d
  438cb4:	add	x8, x8, #0x3
  438cb8:	adrp	x9, 44a000 <_fini+0x9c30>
  438cbc:	add	x9, x9, #0x64f
  438cc0:	stur	x0, [x29, #-16]
  438cc4:	stur	x1, [x29, #-24]
  438cc8:	stur	x2, [x29, #-32]
  438ccc:	stur	x3, [x29, #-40]
  438cd0:	stur	x4, [x29, #-48]
  438cd4:	stur	x5, [x29, #-56]
  438cd8:	ldur	x10, [x29, #-40]
  438cdc:	str	x10, [sp, #64]
  438ce0:	str	x8, [sp, #16]
  438ce4:	str	x9, [sp, #8]
  438ce8:	ldur	x8, [x29, #-16]
  438cec:	cmp	x8, #0x0
  438cf0:	cset	w9, ne  // ne = any
  438cf4:	mov	w10, #0x1                   	// #1
  438cf8:	eor	w9, w9, #0x1
  438cfc:	eor	w9, w9, w10
  438d00:	eor	w9, w9, w10
  438d04:	and	w9, w9, #0x1
  438d08:	mov	w0, w9
  438d0c:	sxtw	x8, w0
  438d10:	cbz	x8, 438d34 <user_object_find+0x94>
  438d14:	mov	w8, wzr
  438d18:	mov	w0, w8
  438d1c:	adrp	x1, 444000 <_fini+0x3c30>
  438d20:	add	x1, x1, #0x393
  438d24:	ldr	x2, [sp, #16]
  438d28:	mov	w3, #0xec                  	// #236
  438d2c:	ldr	x4, [sp, #8]
  438d30:	bl	406c68 <log_assert_failed_realm@plt>
  438d34:	ldur	x8, [x29, #-24]
  438d38:	cmp	x8, #0x0
  438d3c:	cset	w9, ne  // ne = any
  438d40:	mov	w10, #0x1                   	// #1
  438d44:	eor	w9, w9, #0x1
  438d48:	eor	w9, w9, w10
  438d4c:	eor	w9, w9, w10
  438d50:	and	w9, w9, #0x1
  438d54:	mov	w0, w9
  438d58:	sxtw	x8, w0
  438d5c:	cbz	x8, 438d80 <user_object_find+0xe0>
  438d60:	mov	w8, wzr
  438d64:	mov	w0, w8
  438d68:	adrp	x1, 443000 <_fini+0x2c30>
  438d6c:	add	x1, x1, #0xea9
  438d70:	ldr	x2, [sp, #16]
  438d74:	mov	w3, #0xed                  	// #237
  438d78:	ldr	x4, [sp, #8]
  438d7c:	bl	406c68 <log_assert_failed_realm@plt>
  438d80:	ldur	x8, [x29, #-32]
  438d84:	cmp	x8, #0x0
  438d88:	cset	w9, ne  // ne = any
  438d8c:	mov	w10, #0x1                   	// #1
  438d90:	eor	w9, w9, #0x1
  438d94:	eor	w9, w9, w10
  438d98:	eor	w9, w9, w10
  438d9c:	and	w9, w9, #0x1
  438da0:	mov	w0, w9
  438da4:	sxtw	x8, w0
  438da8:	cbz	x8, 438dcc <user_object_find+0x12c>
  438dac:	mov	w8, wzr
  438db0:	mov	w0, w8
  438db4:	adrp	x1, 447000 <_fini+0x6c30>
  438db8:	add	x1, x1, #0x8eb
  438dbc:	ldr	x2, [sp, #16]
  438dc0:	mov	w3, #0xee                  	// #238
  438dc4:	ldr	x4, [sp, #8]
  438dc8:	bl	406c68 <log_assert_failed_realm@plt>
  438dcc:	ldur	x8, [x29, #-48]
  438dd0:	cmp	x8, #0x0
  438dd4:	cset	w9, ne  // ne = any
  438dd8:	mov	w10, #0x1                   	// #1
  438ddc:	eor	w9, w9, #0x1
  438de0:	eor	w9, w9, w10
  438de4:	eor	w9, w9, w10
  438de8:	and	w9, w9, #0x1
  438dec:	mov	w0, w9
  438df0:	sxtw	x8, w0
  438df4:	cbz	x8, 438e18 <user_object_find+0x178>
  438df8:	mov	w8, wzr
  438dfc:	mov	w0, w8
  438e00:	adrp	x1, 447000 <_fini+0x6c30>
  438e04:	add	x1, x1, #0x8f5
  438e08:	ldr	x2, [sp, #16]
  438e0c:	mov	w3, #0xef                  	// #239
  438e10:	ldr	x4, [sp, #8]
  438e14:	bl	406c68 <log_assert_failed_realm@plt>
  438e18:	ldr	x8, [sp, #64]
  438e1c:	cmp	x8, #0x0
  438e20:	cset	w9, ne  // ne = any
  438e24:	mov	w10, #0x1                   	// #1
  438e28:	eor	w9, w9, #0x1
  438e2c:	eor	w9, w9, w10
  438e30:	eor	w9, w9, w10
  438e34:	and	w9, w9, #0x1
  438e38:	mov	w0, w9
  438e3c:	sxtw	x8, w0
  438e40:	cbz	x8, 438e64 <user_object_find+0x1c4>
  438e44:	mov	w8, wzr
  438e48:	mov	w0, w8
  438e4c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  438e50:	add	x1, x1, #0x5ef
  438e54:	ldr	x2, [sp, #16]
  438e58:	mov	w3, #0xf0                  	// #240
  438e5c:	ldr	x4, [sp, #8]
  438e60:	bl	406c68 <log_assert_failed_realm@plt>
  438e64:	ldur	x0, [x29, #-24]
  438e68:	adrp	x1, 44a000 <_fini+0x9c30>
  438e6c:	add	x1, x1, #0x6ab
  438e70:	bl	407158 <strcmp@plt>
  438e74:	cbnz	w0, 438ee0 <user_object_find+0x240>
  438e78:	ldur	x0, [x29, #-16]
  438e7c:	bl	407a78 <sd_bus_get_current_message@plt>
  438e80:	str	x0, [sp, #32]
  438e84:	ldr	x0, [sp, #64]
  438e88:	ldr	x1, [sp, #32]
  438e8c:	ldur	x3, [x29, #-56]
  438e90:	mov	w2, #0xffffffff            	// #-1
  438e94:	add	x4, sp, #0x30
  438e98:	bl	4148cc <manager_get_user_from_creds>
  438e9c:	str	w0, [sp, #44]
  438ea0:	ldr	w8, [sp, #44]
  438ea4:	mov	w9, #0xfffffffa            	// #-6
  438ea8:	cmp	w8, w9
  438eac:	b.ne	438ec0 <user_object_find+0x220>  // b.any
  438eb0:	ldur	x0, [x29, #-56]
  438eb4:	bl	4071e8 <sd_bus_error_free@plt>
  438eb8:	stur	wzr, [x29, #-4]
  438ebc:	b	438f70 <user_object_find+0x2d0>
  438ec0:	ldr	w8, [sp, #44]
  438ec4:	cmp	w8, #0x0
  438ec8:	cset	w8, ge  // ge = tcont
  438ecc:	tbnz	w8, #0, 438edc <user_object_find+0x23c>
  438ed0:	ldr	w8, [sp, #44]
  438ed4:	stur	w8, [x29, #-4]
  438ed8:	b	438f70 <user_object_find+0x2d0>
  438edc:	b	438f5c <user_object_find+0x2bc>
  438ee0:	ldur	x0, [x29, #-24]
  438ee4:	adrp	x1, 44a000 <_fini+0x9c30>
  438ee8:	add	x1, x1, #0x6cd
  438eec:	bl	438f80 <startswith>
  438ef0:	str	x0, [sp, #24]
  438ef4:	ldr	x8, [sp, #24]
  438ef8:	cbnz	x8, 438f04 <user_object_find+0x264>
  438efc:	stur	wzr, [x29, #-4]
  438f00:	b	438f70 <user_object_find+0x2d0>
  438f04:	ldr	x0, [sp, #24]
  438f08:	add	x1, sp, #0x3c
  438f0c:	bl	407a08 <parse_uid@plt>
  438f10:	str	w0, [sp, #44]
  438f14:	ldr	w8, [sp, #44]
  438f18:	cmp	w8, #0x0
  438f1c:	cset	w8, ge  // ge = tcont
  438f20:	tbnz	w8, #0, 438f2c <user_object_find+0x28c>
  438f24:	stur	wzr, [x29, #-4]
  438f28:	b	438f70 <user_object_find+0x2d0>
  438f2c:	ldr	x8, [sp, #64]
  438f30:	ldr	x0, [x8, #48]
  438f34:	ldr	w9, [sp, #60]
  438f38:	mov	w8, w9
  438f3c:	add	x8, x8, #0x1
  438f40:	mov	x1, x8
  438f44:	bl	438fe0 <hashmap_get>
  438f48:	str	x0, [sp, #48]
  438f4c:	ldr	x8, [sp, #48]
  438f50:	cbnz	x8, 438f5c <user_object_find+0x2bc>
  438f54:	stur	wzr, [x29, #-4]
  438f58:	b	438f70 <user_object_find+0x2d0>
  438f5c:	ldr	x8, [sp, #48]
  438f60:	ldur	x9, [x29, #-48]
  438f64:	str	x8, [x9]
  438f68:	mov	w10, #0x1                   	// #1
  438f6c:	stur	w10, [x29, #-4]
  438f70:	ldur	w0, [x29, #-4]
  438f74:	ldp	x29, x30, [sp, #128]
  438f78:	add	sp, sp, #0x90
  438f7c:	ret

0000000000438f80 <startswith>:
  438f80:	sub	sp, sp, #0x30
  438f84:	stp	x29, x30, [sp, #32]
  438f88:	add	x29, sp, #0x20
  438f8c:	str	x0, [sp, #16]
  438f90:	str	x1, [sp, #8]
  438f94:	ldr	x0, [sp, #8]
  438f98:	bl	4070a8 <strlen@plt>
  438f9c:	str	x0, [sp]
  438fa0:	ldr	x0, [sp, #16]
  438fa4:	ldr	x1, [sp, #8]
  438fa8:	ldr	x2, [sp]
  438fac:	bl	4070b8 <strncmp@plt>
  438fb0:	cbnz	w0, 438fc8 <startswith+0x48>
  438fb4:	ldr	x8, [sp, #16]
  438fb8:	ldr	x9, [sp]
  438fbc:	add	x8, x8, x9
  438fc0:	stur	x8, [x29, #-8]
  438fc4:	b	438fd0 <startswith+0x50>
  438fc8:	mov	x8, xzr
  438fcc:	stur	x8, [x29, #-8]
  438fd0:	ldur	x0, [x29, #-8]
  438fd4:	ldp	x29, x30, [sp, #32]
  438fd8:	add	sp, sp, #0x30
  438fdc:	ret

0000000000438fe0 <hashmap_get>:
  438fe0:	sub	sp, sp, #0x20
  438fe4:	stp	x29, x30, [sp, #16]
  438fe8:	add	x29, sp, #0x10
  438fec:	str	x0, [sp, #8]
  438ff0:	str	x1, [sp]
  438ff4:	ldr	x0, [sp, #8]
  438ff8:	ldr	x1, [sp]
  438ffc:	bl	4070e8 <internal_hashmap_get@plt>
  439000:	ldp	x29, x30, [sp, #16]
  439004:	add	sp, sp, #0x20
  439008:	ret

000000000043900c <user_bus_path>:
  43900c:	sub	sp, sp, #0x30
  439010:	stp	x29, x30, [sp, #32]
  439014:	add	x29, sp, #0x20
  439018:	adrp	x8, 44a000 <_fini+0x9c30>
  43901c:	add	x8, x8, #0x58d
  439020:	add	x2, x8, #0x3
  439024:	str	x0, [sp, #16]
  439028:	str	x2, [sp]
  43902c:	ldr	x8, [sp, #16]
  439030:	cmp	x8, #0x0
  439034:	cset	w9, ne  // ne = any
  439038:	mov	w10, #0x1                   	// #1
  43903c:	eor	w9, w9, #0x1
  439040:	eor	w9, w9, w10
  439044:	eor	w9, w9, w10
  439048:	and	w9, w9, #0x1
  43904c:	mov	w0, w9
  439050:	sxtw	x8, w0
  439054:	cbz	x8, 43907c <user_bus_path+0x70>
  439058:	mov	w8, wzr
  43905c:	mov	w0, w8
  439060:	adrp	x1, 443000 <_fini+0x2c30>
  439064:	add	x1, x1, #0x1dd
  439068:	ldr	x2, [sp]
  43906c:	mov	w3, #0x115                 	// #277
  439070:	adrp	x4, 44a000 <_fini+0x9c30>
  439074:	add	x4, x4, #0x6ec
  439078:	bl	406c68 <log_assert_failed_realm@plt>
  43907c:	ldr	x8, [sp, #16]
  439080:	ldr	w2, [x8, #8]
  439084:	add	x0, sp, #0x8
  439088:	adrp	x1, 44a000 <_fini+0x9c30>
  43908c:	add	x1, x1, #0x708
  439090:	bl	406ff8 <asprintf@plt>
  439094:	cmp	w0, #0x0
  439098:	cset	w9, ge  // ge = tcont
  43909c:	tbnz	w9, #0, 4390ac <user_bus_path+0xa0>
  4390a0:	mov	x8, xzr
  4390a4:	stur	x8, [x29, #-8]
  4390a8:	b	4390b4 <user_bus_path+0xa8>
  4390ac:	ldr	x8, [sp, #8]
  4390b0:	stur	x8, [x29, #-8]
  4390b4:	ldur	x0, [x29, #-8]
  4390b8:	ldp	x29, x30, [sp, #32]
  4390bc:	add	sp, sp, #0x30
  4390c0:	ret

00000000004390c4 <user_node_enumerator>:
  4390c4:	sub	sp, sp, #0xd0
  4390c8:	stp	x29, x30, [sp, #192]
  4390cc:	add	x29, sp, #0xc0
  4390d0:	mov	x8, xzr
  4390d4:	adrp	x9, 44a000 <_fini+0x9c30>
  4390d8:	add	x9, x9, #0x58d
  4390dc:	add	x9, x9, #0x3
  4390e0:	adrp	x10, 44a000 <_fini+0x9c30>
  4390e4:	add	x10, x10, #0x729
  4390e8:	stur	x0, [x29, #-16]
  4390ec:	stur	x1, [x29, #-24]
  4390f0:	stur	x2, [x29, #-32]
  4390f4:	stur	x3, [x29, #-40]
  4390f8:	stur	x4, [x29, #-48]
  4390fc:	stur	x8, [x29, #-56]
  439100:	ldur	x8, [x29, #-32]
  439104:	stur	x8, [x29, #-72]
  439108:	str	x9, [sp, #16]
  43910c:	str	x10, [sp, #8]
  439110:	ldur	x8, [x29, #-16]
  439114:	cmp	x8, #0x0
  439118:	cset	w9, ne  // ne = any
  43911c:	mov	w10, #0x1                   	// #1
  439120:	eor	w9, w9, #0x1
  439124:	eor	w9, w9, w10
  439128:	eor	w9, w9, w10
  43912c:	and	w9, w9, #0x1
  439130:	mov	w0, w9
  439134:	sxtw	x8, w0
  439138:	cbz	x8, 43915c <user_node_enumerator+0x98>
  43913c:	mov	w8, wzr
  439140:	mov	w0, w8
  439144:	adrp	x1, 444000 <_fini+0x3c30>
  439148:	add	x1, x1, #0x393
  43914c:	ldr	x2, [sp, #16]
  439150:	mov	w3, #0x125                 	// #293
  439154:	ldr	x4, [sp, #8]
  439158:	bl	406c68 <log_assert_failed_realm@plt>
  43915c:	ldur	x8, [x29, #-24]
  439160:	cmp	x8, #0x0
  439164:	cset	w9, ne  // ne = any
  439168:	mov	w10, #0x1                   	// #1
  43916c:	eor	w9, w9, #0x1
  439170:	eor	w9, w9, w10
  439174:	eor	w9, w9, w10
  439178:	and	w9, w9, #0x1
  43917c:	mov	w0, w9
  439180:	sxtw	x8, w0
  439184:	cbz	x8, 4391a8 <user_node_enumerator+0xe4>
  439188:	mov	w8, wzr
  43918c:	mov	w0, w8
  439190:	adrp	x1, 443000 <_fini+0x2c30>
  439194:	add	x1, x1, #0xea9
  439198:	ldr	x2, [sp, #16]
  43919c:	mov	w3, #0x126                 	// #294
  4391a0:	ldr	x4, [sp, #8]
  4391a4:	bl	406c68 <log_assert_failed_realm@plt>
  4391a8:	ldur	x8, [x29, #-40]
  4391ac:	cmp	x8, #0x0
  4391b0:	cset	w9, ne  // ne = any
  4391b4:	mov	w10, #0x1                   	// #1
  4391b8:	eor	w9, w9, #0x1
  4391bc:	eor	w9, w9, w10
  4391c0:	eor	w9, w9, w10
  4391c4:	and	w9, w9, #0x1
  4391c8:	mov	w0, w9
  4391cc:	sxtw	x8, w0
  4391d0:	cbz	x8, 4391f4 <user_node_enumerator+0x130>
  4391d4:	mov	w8, wzr
  4391d8:	mov	w0, w8
  4391dc:	adrp	x1, 447000 <_fini+0x6c30>
  4391e0:	add	x1, x1, #0x988
  4391e4:	ldr	x2, [sp, #16]
  4391e8:	mov	w3, #0x127                 	// #295
  4391ec:	ldr	x4, [sp, #8]
  4391f0:	bl	406c68 <log_assert_failed_realm@plt>
  4391f4:	add	x8, sp, #0x48
  4391f8:	mov	w9, #0xfffffffe            	// #-2
  4391fc:	str	w9, [sp, #72]
  439200:	mov	x10, xzr
  439204:	str	x10, [x8, #8]
  439208:	ldur	q0, [sp, #72]
  43920c:	str	q0, [sp, #96]
  439210:	ldur	x8, [x29, #-72]
  439214:	ldr	x0, [x8, #48]
  439218:	add	x1, sp, #0x60
  43921c:	sub	x2, x29, #0x50
  439220:	mov	x8, xzr
  439224:	mov	x3, x8
  439228:	bl	4393f8 <hashmap_iterate>
  43922c:	tbnz	w0, #0, 439234 <user_node_enumerator+0x170>
  439230:	b	439294 <user_node_enumerator+0x1d0>
  439234:	ldur	x0, [x29, #-80]
  439238:	bl	43900c <user_bus_path>
  43923c:	str	x0, [sp, #64]
  439240:	ldr	x8, [sp, #64]
  439244:	cbnz	x8, 43925c <user_node_enumerator+0x198>
  439248:	mov	w8, #0xfffffff4            	// #-12
  43924c:	stur	w8, [x29, #-4]
  439250:	mov	w8, #0x1                   	// #1
  439254:	str	w8, [sp, #60]
  439258:	b	4393ac <user_node_enumerator+0x2e8>
  43925c:	ldr	x1, [sp, #64]
  439260:	sub	x0, x29, #0x38
  439264:	bl	407aa8 <strv_consume@plt>
  439268:	str	w0, [sp, #92]
  43926c:	ldr	w8, [sp, #92]
  439270:	cmp	w8, #0x0
  439274:	cset	w8, ge  // ge = tcont
  439278:	tbnz	w8, #0, 439290 <user_node_enumerator+0x1cc>
  43927c:	ldr	w8, [sp, #92]
  439280:	stur	w8, [x29, #-4]
  439284:	mov	w8, #0x1                   	// #1
  439288:	str	w8, [sp, #60]
  43928c:	b	4393ac <user_node_enumerator+0x2e8>
  439290:	b	439210 <user_node_enumerator+0x14c>
  439294:	ldur	x0, [x29, #-16]
  439298:	bl	407a78 <sd_bus_get_current_message@plt>
  43929c:	stur	x0, [x29, #-64]
  4392a0:	ldur	x8, [x29, #-64]
  4392a4:	cbz	x8, 43937c <user_node_enumerator+0x2b8>
  4392a8:	add	x2, sp, #0x30
  4392ac:	mov	x8, xzr
  4392b0:	str	x8, [sp, #48]
  4392b4:	ldur	x0, [x29, #-64]
  4392b8:	mov	x1, #0x400000              	// #4194304
  4392bc:	movk	x1, #0x8000, lsl #48
  4392c0:	bl	407478 <sd_bus_query_sender_creds@plt>
  4392c4:	str	w0, [sp, #92]
  4392c8:	ldr	w9, [sp, #92]
  4392cc:	cmp	w9, #0x0
  4392d0:	cset	w9, lt  // lt = tstop
  4392d4:	tbnz	w9, #0, 439358 <user_node_enumerator+0x294>
  4392d8:	ldr	x0, [sp, #48]
  4392dc:	add	x1, sp, #0x2c
  4392e0:	bl	407498 <sd_bus_creds_get_owner_uid@plt>
  4392e4:	str	w0, [sp, #92]
  4392e8:	ldr	w8, [sp, #92]
  4392ec:	cmp	w8, #0x0
  4392f0:	cset	w8, lt  // lt = tstop
  4392f4:	tbnz	w8, #0, 439358 <user_node_enumerator+0x294>
  4392f8:	ldur	x8, [x29, #-72]
  4392fc:	ldr	x0, [x8, #48]
  439300:	ldr	w9, [sp, #44]
  439304:	mov	w8, w9
  439308:	add	x8, x8, #0x1
  43930c:	mov	x1, x8
  439310:	bl	438fe0 <hashmap_get>
  439314:	stur	x0, [x29, #-80]
  439318:	ldur	x8, [x29, #-80]
  43931c:	cbz	x8, 439358 <user_node_enumerator+0x294>
  439320:	sub	x0, x29, #0x38
  439324:	adrp	x1, 44a000 <_fini+0x9c30>
  439328:	add	x1, x1, #0x6ab
  43932c:	bl	407ab8 <strv_extend@plt>
  439330:	str	w0, [sp, #92]
  439334:	ldr	w8, [sp, #92]
  439338:	cmp	w8, #0x0
  43933c:	cset	w8, ge  // ge = tcont
  439340:	tbnz	w8, #0, 439358 <user_node_enumerator+0x294>
  439344:	ldr	w8, [sp, #92]
  439348:	stur	w8, [x29, #-4]
  43934c:	mov	w8, #0x1                   	// #1
  439350:	str	w8, [sp, #60]
  439354:	b	43935c <user_node_enumerator+0x298>
  439358:	str	wzr, [sp, #60]
  43935c:	add	x0, sp, #0x30
  439360:	bl	439438 <sd_bus_creds_unrefp>
  439364:	ldr	w8, [sp, #60]
  439368:	cmp	w8, #0x0
  43936c:	cset	w8, eq  // eq = none
  439370:	eor	w8, w8, #0x1
  439374:	tbnz	w8, #0, 4393ac <user_node_enumerator+0x2e8>
  439378:	b	43937c <user_node_enumerator+0x2b8>
  43937c:	ldur	x8, [x29, #-56]
  439380:	str	x8, [sp, #32]
  439384:	mov	x8, xzr
  439388:	stur	x8, [x29, #-56]
  43938c:	ldr	x8, [sp, #32]
  439390:	str	x8, [sp, #24]
  439394:	ldr	x8, [sp, #24]
  439398:	ldur	x9, [x29, #-40]
  43939c:	str	x8, [x9]
  4393a0:	mov	w10, #0x1                   	// #1
  4393a4:	stur	w10, [x29, #-4]
  4393a8:	str	w10, [sp, #60]
  4393ac:	sub	x0, x29, #0x38
  4393b0:	bl	4393c4 <strv_freep>
  4393b4:	ldur	w0, [x29, #-4]
  4393b8:	ldp	x29, x30, [sp, #192]
  4393bc:	add	sp, sp, #0xd0
  4393c0:	ret

00000000004393c4 <strv_freep>:
  4393c4:	sub	sp, sp, #0x20
  4393c8:	stp	x29, x30, [sp, #16]
  4393cc:	add	x29, sp, #0x10
  4393d0:	str	x0, [sp, #8]
  4393d4:	ldr	x8, [sp, #8]
  4393d8:	ldr	x8, [x8]
  4393dc:	cbz	x8, 4393ec <strv_freep+0x28>
  4393e0:	ldr	x8, [sp, #8]
  4393e4:	ldr	x0, [x8]
  4393e8:	bl	406d98 <strv_free@plt>
  4393ec:	ldp	x29, x30, [sp, #16]
  4393f0:	add	sp, sp, #0x20
  4393f4:	ret

00000000004393f8 <hashmap_iterate>:
  4393f8:	sub	sp, sp, #0x30
  4393fc:	stp	x29, x30, [sp, #32]
  439400:	add	x29, sp, #0x20
  439404:	stur	x0, [x29, #-8]
  439408:	str	x1, [sp, #16]
  43940c:	str	x2, [sp, #8]
  439410:	str	x3, [sp]
  439414:	ldur	x0, [x29, #-8]
  439418:	ldr	x1, [sp, #16]
  43941c:	ldr	x2, [sp, #8]
  439420:	ldr	x3, [sp]
  439424:	bl	407018 <internal_hashmap_iterate@plt>
  439428:	and	w0, w0, #0x1
  43942c:	ldp	x29, x30, [sp, #32]
  439430:	add	sp, sp, #0x30
  439434:	ret

0000000000439438 <sd_bus_creds_unrefp>:
  439438:	sub	sp, sp, #0x20
  43943c:	stp	x29, x30, [sp, #16]
  439440:	add	x29, sp, #0x10
  439444:	str	x0, [sp, #8]
  439448:	ldr	x8, [sp, #8]
  43944c:	ldr	x8, [x8]
  439450:	cbz	x8, 439460 <sd_bus_creds_unrefp+0x28>
  439454:	ldr	x8, [sp, #8]
  439458:	ldr	x0, [x8]
  43945c:	bl	407868 <sd_bus_creds_unref@plt>
  439460:	ldp	x29, x30, [sp, #16]
  439464:	add	sp, sp, #0x20
  439468:	ret

000000000043946c <user_send_signal>:
  43946c:	sub	sp, sp, #0x40
  439470:	stp	x29, x30, [sp, #48]
  439474:	add	x29, sp, #0x30
  439478:	mov	x8, xzr
  43947c:	mov	w9, #0x1                   	// #1
  439480:	adrp	x10, 44a000 <_fini+0x9c30>
  439484:	add	x10, x10, #0x58d
  439488:	add	x2, x10, #0x3
  43948c:	stur	x0, [x29, #-16]
  439490:	and	w9, w1, w9
  439494:	sturb	w9, [x29, #-17]
  439498:	str	x8, [sp, #16]
  43949c:	str	x2, [sp]
  4394a0:	ldur	x8, [x29, #-16]
  4394a4:	cmp	x8, #0x0
  4394a8:	cset	w9, ne  // ne = any
  4394ac:	mov	w10, #0x1                   	// #1
  4394b0:	eor	w9, w9, #0x1
  4394b4:	eor	w9, w9, w10
  4394b8:	eor	w9, w9, w10
  4394bc:	and	w9, w9, #0x1
  4394c0:	mov	w0, w9
  4394c4:	sxtw	x8, w0
  4394c8:	cbz	x8, 4394f0 <user_send_signal+0x84>
  4394cc:	mov	w8, wzr
  4394d0:	mov	w0, w8
  4394d4:	adrp	x1, 443000 <_fini+0x2c30>
  4394d8:	add	x1, x1, #0x1dd
  4394dc:	ldr	x2, [sp]
  4394e0:	mov	w3, #0x151                 	// #337
  4394e4:	adrp	x4, 44a000 <_fini+0x9c30>
  4394e8:	add	x4, x4, #0x77c
  4394ec:	bl	406c68 <log_assert_failed_realm@plt>
  4394f0:	ldur	x0, [x29, #-16]
  4394f4:	bl	43900c <user_bus_path>
  4394f8:	str	x0, [sp, #16]
  4394fc:	ldr	x8, [sp, #16]
  439500:	cbnz	x8, 439518 <user_send_signal+0xac>
  439504:	mov	w8, #0xfffffff4            	// #-12
  439508:	stur	w8, [x29, #-4]
  43950c:	mov	w8, #0x1                   	// #1
  439510:	str	w8, [sp, #12]
  439514:	b	439574 <user_send_signal+0x108>
  439518:	ldur	x8, [x29, #-16]
  43951c:	ldr	x8, [x8]
  439520:	ldr	x0, [x8, #8]
  439524:	ldurb	w9, [x29, #-17]
  439528:	adrp	x8, 443000 <_fini+0x2c30>
  43952c:	add	x8, x8, #0x7cf
  439530:	adrp	x10, 443000 <_fini+0x2c30>
  439534:	add	x10, x10, #0x7c4
  439538:	tst	w9, #0x1
  43953c:	csel	x3, x10, x8, ne  // ne = any
  439540:	ldur	x8, [x29, #-16]
  439544:	ldr	w5, [x8, #8]
  439548:	ldr	x6, [sp, #16]
  43954c:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  439550:	add	x1, x1, #0xd9b
  439554:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  439558:	add	x2, x2, #0xdb3
  43955c:	adrp	x4, 443000 <_fini+0x2c30>
  439560:	add	x4, x4, #0x7cc
  439564:	bl	4074e8 <sd_bus_emit_signal@plt>
  439568:	stur	w0, [x29, #-4]
  43956c:	mov	w9, #0x1                   	// #1
  439570:	str	w9, [sp, #12]
  439574:	add	x0, sp, #0x10
  439578:	bl	43958c <freep>
  43957c:	ldur	w0, [x29, #-4]
  439580:	ldp	x29, x30, [sp, #48]
  439584:	add	sp, sp, #0x40
  439588:	ret

000000000043958c <freep>:
  43958c:	sub	sp, sp, #0x20
  439590:	stp	x29, x30, [sp, #16]
  439594:	add	x29, sp, #0x10
  439598:	str	x0, [sp, #8]
  43959c:	ldr	x8, [sp, #8]
  4395a0:	ldr	x0, [x8]
  4395a4:	bl	406da8 <free@plt>
  4395a8:	ldp	x29, x30, [sp, #16]
  4395ac:	add	sp, sp, #0x20
  4395b0:	ret

00000000004395b4 <user_send_changed>:
  4395b4:	stp	x29, x30, [sp, #-32]!
  4395b8:	stp	x28, x19, [sp, #16]
  4395bc:	mov	x29, sp
  4395c0:	sub	sp, sp, #0x160
  4395c4:	mov	x19, sp
  4395c8:	str	q7, [x19, #160]
  4395cc:	str	q6, [x19, #144]
  4395d0:	str	q5, [x19, #128]
  4395d4:	str	q4, [x19, #112]
  4395d8:	str	q3, [x19, #96]
  4395dc:	str	q2, [x19, #80]
  4395e0:	str	q1, [x19, #64]
  4395e4:	str	q0, [x19, #48]
  4395e8:	stur	x7, [x29, #-128]
  4395ec:	stur	x6, [x29, #-136]
  4395f0:	stur	x5, [x29, #-144]
  4395f4:	stur	x4, [x29, #-152]
  4395f8:	stur	x3, [x29, #-160]
  4395fc:	stur	x2, [x29, #-168]
  439600:	stur	x0, [x29, #-16]
  439604:	stur	x1, [x29, #-24]
  439608:	mov	x8, xzr
  43960c:	stur	x8, [x29, #-32]
  439610:	b	439614 <user_send_changed+0x60>
  439614:	ldur	x8, [x29, #-16]
  439618:	cbnz	x8, 439644 <user_send_changed+0x90>
  43961c:	b	439620 <user_send_changed+0x6c>
  439620:	adrp	x1, 443000 <_fini+0x2c30>
  439624:	add	x1, x1, #0x1dd
  439628:	adrp	x2, 44a000 <_fini+0x9c30>
  43962c:	add	x2, x2, #0x590
  439630:	adrp	x4, 44a000 <_fini+0x9c30>
  439634:	add	x4, x4, #0x7a0
  439638:	mov	w0, wzr
  43963c:	mov	w3, #0x163                 	// #355
  439640:	bl	406c68 <log_assert_failed_realm@plt>
  439644:	b	439648 <user_send_changed+0x94>
  439648:	b	43964c <user_send_changed+0x98>
  43964c:	ldur	x8, [x29, #-16]
  439650:	ldrb	w9, [x8, #120]
  439654:	tbnz	w9, #1, 439670 <user_send_changed+0xbc>
  439658:	b	43965c <user_send_changed+0xa8>
  43965c:	mov	w8, wzr
  439660:	stur	w8, [x29, #-4]
  439664:	mov	w8, #0x1                   	// #1
  439668:	stur	w8, [x29, #-44]
  43966c:	b	439960 <user_send_changed+0x3ac>
  439670:	ldur	x0, [x29, #-16]
  439674:	bl	43900c <user_bus_path>
  439678:	stur	x0, [x29, #-32]
  43967c:	ldur	x8, [x29, #-32]
  439680:	cbnz	x8, 43969c <user_send_changed+0xe8>
  439684:	b	439688 <user_send_changed+0xd4>
  439688:	mov	w8, #0xfffffff4            	// #-12
  43968c:	stur	w8, [x29, #-4]
  439690:	mov	w8, #0x1                   	// #1
  439694:	stur	w8, [x29, #-44]
  439698:	b	439960 <user_send_changed+0x3ac>
  43969c:	ldur	x8, [x29, #-24]
  4396a0:	cbnz	x8, 4396b4 <user_send_changed+0x100>
  4396a4:	b	4396a8 <user_send_changed+0xf4>
  4396a8:	sub	x8, x29, #0x18
  4396ac:	stur	x8, [x29, #-56]
  4396b0:	b	439920 <user_send_changed+0x36c>
  4396b4:	mov	w8, #0x1                   	// #1
  4396b8:	mov	w9, w8
  4396bc:	stur	x9, [x29, #-64]
  4396c0:	mov	w8, #0xffffff80            	// #-128
  4396c4:	stur	w8, [x29, #-68]
  4396c8:	mov	w8, #0xffffffd0            	// #-48
  4396cc:	stur	w8, [x29, #-72]
  4396d0:	add	x9, x19, #0x30
  4396d4:	add	x9, x9, #0x80
  4396d8:	stur	x9, [x29, #-80]
  4396dc:	sub	x9, x29, #0xa8
  4396e0:	add	x9, x9, #0x30
  4396e4:	stur	x9, [x29, #-88]
  4396e8:	add	x9, x29, #0x20
  4396ec:	stur	x9, [x29, #-96]
  4396f0:	b	4396f4 <user_send_changed+0x140>
  4396f4:	sub	x8, x29, #0x60
  4396f8:	add	x8, x8, #0x18
  4396fc:	ldur	w9, [x29, #-72]
  439700:	mov	w10, w9
  439704:	str	x8, [x19, #40]
  439708:	str	w10, [x19, #36]
  43970c:	tbz	w9, #31, 439744 <user_send_changed+0x190>
  439710:	b	439714 <user_send_changed+0x160>
  439714:	ldr	w8, [x19, #36]
  439718:	add	w9, w8, #0x8
  43971c:	ldr	x10, [x19, #40]
  439720:	str	w9, [x10]
  439724:	subs	w9, w9, #0x0
  439728:	b.gt	439744 <user_send_changed+0x190>
  43972c:	b	439730 <user_send_changed+0x17c>
  439730:	ldur	x8, [x29, #-88]
  439734:	ldr	w9, [x19, #36]
  439738:	add	x8, x8, w9, sxtw
  43973c:	str	x8, [x19, #24]
  439740:	b	439758 <user_send_changed+0x1a4>
  439744:	ldur	x8, [x29, #-96]
  439748:	add	x9, x8, #0x8
  43974c:	stur	x9, [x29, #-96]
  439750:	str	x8, [x19, #24]
  439754:	b	439758 <user_send_changed+0x1a4>
  439758:	ldr	x8, [x19, #24]
  43975c:	ldr	x8, [x8]
  439760:	cbz	x8, 439778 <user_send_changed+0x1c4>
  439764:	b	439768 <user_send_changed+0x1b4>
  439768:	ldur	x8, [x29, #-64]
  43976c:	add	x8, x8, #0x1
  439770:	stur	x8, [x29, #-64]
  439774:	b	4396f4 <user_send_changed+0x140>
  439778:	ldur	x8, [x29, #-64]
  43977c:	add	x8, x8, #0x1
  439780:	stur	x8, [x29, #-104]
  439784:	b	439788 <user_send_changed+0x1d4>
  439788:	ldur	x1, [x29, #-104]
  43978c:	mov	w8, #0x8                   	// #8
  439790:	mov	w0, w8
  439794:	bl	43997c <size_multiply_overflow>
  439798:	tbz	w0, #0, 4397c4 <user_send_changed+0x210>
  43979c:	b	4397a0 <user_send_changed+0x1ec>
  4397a0:	adrp	x1, 443000 <_fini+0x2c30>
  4397a4:	add	x1, x1, #0xa1c
  4397a8:	adrp	x2, 44a000 <_fini+0x9c30>
  4397ac:	add	x2, x2, #0x590
  4397b0:	adrp	x4, 44a000 <_fini+0x9c30>
  4397b4:	add	x4, x4, #0x7a0
  4397b8:	mov	w0, wzr
  4397bc:	mov	w3, #0x16c                 	// #364
  4397c0:	bl	406c68 <log_assert_failed_realm@plt>
  4397c4:	b	4397c8 <user_send_changed+0x214>
  4397c8:	b	4397cc <user_send_changed+0x218>
  4397cc:	b	4397d0 <user_send_changed+0x21c>
  4397d0:	ldur	x8, [x29, #-104]
  4397d4:	lsl	x8, x8, #3
  4397d8:	subs	x8, x8, #0x400, lsl #12
  4397dc:	b.ls	439808 <user_send_changed+0x254>  // b.plast
  4397e0:	b	4397e4 <user_send_changed+0x230>
  4397e4:	adrp	x1, 443000 <_fini+0x2c30>
  4397e8:	add	x1, x1, #0xa48
  4397ec:	adrp	x2, 44a000 <_fini+0x9c30>
  4397f0:	add	x2, x2, #0x590
  4397f4:	adrp	x4, 44a000 <_fini+0x9c30>
  4397f8:	add	x4, x4, #0x7a0
  4397fc:	mov	w0, wzr
  439800:	mov	w3, #0x16c                 	// #364
  439804:	bl	406c68 <log_assert_failed_realm@plt>
  439808:	b	43980c <user_send_changed+0x258>
  43980c:	b	439810 <user_send_changed+0x25c>
  439810:	ldur	x8, [x29, #-104]
  439814:	lsl	x8, x8, #3
  439818:	add	x8, x8, #0xf
  43981c:	and	x8, x8, #0xfffffffffffffff0
  439820:	mov	x9, sp
  439824:	subs	x8, x9, x8
  439828:	mov	sp, x8
  43982c:	stur	x8, [x29, #-112]
  439830:	ldur	x8, [x29, #-112]
  439834:	stur	x8, [x29, #-56]
  439838:	ldur	x8, [x29, #-24]
  43983c:	ldur	x9, [x29, #-56]
  439840:	mov	x10, xzr
  439844:	stur	x10, [x29, #-64]
  439848:	str	x8, [x9]
  43984c:	mov	w11, #0xffffff80            	// #-128
  439850:	stur	w11, [x29, #-68]
  439854:	mov	w11, #0xffffffd0            	// #-48
  439858:	stur	w11, [x29, #-72]
  43985c:	add	x8, x19, #0x30
  439860:	add	x8, x8, #0x80
  439864:	stur	x8, [x29, #-80]
  439868:	sub	x8, x29, #0xa8
  43986c:	add	x8, x8, #0x30
  439870:	stur	x8, [x29, #-88]
  439874:	add	x8, x29, #0x20
  439878:	stur	x8, [x29, #-96]
  43987c:	b	439880 <user_send_changed+0x2cc>
  439880:	sub	x8, x29, #0x60
  439884:	add	x8, x8, #0x18
  439888:	ldur	w9, [x29, #-72]
  43988c:	mov	w10, w9
  439890:	str	x8, [x19, #16]
  439894:	str	w10, [x19, #12]
  439898:	tbz	w9, #31, 4398d0 <user_send_changed+0x31c>
  43989c:	b	4398a0 <user_send_changed+0x2ec>
  4398a0:	ldr	w8, [x19, #12]
  4398a4:	add	w9, w8, #0x8
  4398a8:	ldr	x10, [x19, #16]
  4398ac:	str	w9, [x10]
  4398b0:	subs	w9, w9, #0x0
  4398b4:	b.gt	4398d0 <user_send_changed+0x31c>
  4398b8:	b	4398bc <user_send_changed+0x308>
  4398bc:	ldur	x8, [x29, #-88]
  4398c0:	ldr	w9, [x19, #12]
  4398c4:	add	x8, x8, w9, sxtw
  4398c8:	str	x8, [x19]
  4398cc:	b	4398e4 <user_send_changed+0x330>
  4398d0:	ldur	x8, [x29, #-96]
  4398d4:	add	x9, x8, #0x8
  4398d8:	stur	x9, [x29, #-96]
  4398dc:	str	x8, [x19]
  4398e0:	b	4398e4 <user_send_changed+0x330>
  4398e4:	ldr	x8, [x19]
  4398e8:	ldr	x8, [x8]
  4398ec:	ldur	x9, [x29, #-56]
  4398f0:	ldur	x10, [x29, #-64]
  4398f4:	add	x10, x10, #0x1
  4398f8:	stur	x10, [x29, #-64]
  4398fc:	str	x8, [x9, x10, lsl #3]
  439900:	ldur	x8, [x29, #-56]
  439904:	ldur	x9, [x29, #-64]
  439908:	ldr	x8, [x8, x9, lsl #3]
  43990c:	cbnz	x8, 439918 <user_send_changed+0x364>
  439910:	b	439914 <user_send_changed+0x360>
  439914:	b	43991c <user_send_changed+0x368>
  439918:	b	439880 <user_send_changed+0x2cc>
  43991c:	b	439920 <user_send_changed+0x36c>
  439920:	ldur	x8, [x29, #-56]
  439924:	stur	x8, [x29, #-120]
  439928:	ldur	x8, [x29, #-120]
  43992c:	stur	x8, [x29, #-40]
  439930:	ldur	x8, [x29, #-16]
  439934:	ldr	x8, [x8]
  439938:	ldr	x0, [x8, #8]
  43993c:	ldur	x1, [x29, #-32]
  439940:	ldur	x3, [x29, #-40]
  439944:	adrp	x2, 440000 <on_brightness_writer_exit+0x15c>
  439948:	add	x2, x2, #0xf23
  43994c:	bl	4077c8 <sd_bus_emit_properties_changed_strv@plt>
  439950:	stur	w0, [x29, #-4]
  439954:	mov	w9, #0x1                   	// #1
  439958:	stur	w9, [x29, #-44]
  43995c:	b	439960 <user_send_changed+0x3ac>
  439960:	sub	x0, x29, #0x20
  439964:	bl	43958c <freep>
  439968:	ldur	w0, [x29, #-4]
  43996c:	mov	sp, x29
  439970:	ldp	x28, x19, [sp, #16]
  439974:	ldp	x29, x30, [sp], #32
  439978:	ret

000000000043997c <size_multiply_overflow>:
  43997c:	sub	sp, sp, #0x20
  439980:	str	x0, [sp, #24]
  439984:	str	x1, [sp, #16]
  439988:	ldr	x8, [sp, #16]
  43998c:	mov	w9, #0x0                   	// #0
  439990:	str	w9, [sp, #12]
  439994:	cbz	x8, 4399b4 <size_multiply_overflow+0x38>
  439998:	ldr	x8, [sp, #24]
  43999c:	ldr	x9, [sp, #16]
  4399a0:	mov	x10, #0xffffffffffffffff    	// #-1
  4399a4:	udiv	x9, x10, x9
  4399a8:	cmp	x8, x9
  4399ac:	cset	w11, hi  // hi = pmore
  4399b0:	str	w11, [sp, #12]
  4399b4:	ldr	w8, [sp, #12]
  4399b8:	mov	w9, #0x1                   	// #1
  4399bc:	eor	w8, w8, #0x1
  4399c0:	eor	w8, w8, w9
  4399c4:	and	w8, w8, #0x1
  4399c8:	mov	w0, w8
  4399cc:	sxtw	x10, w0
  4399d0:	cmp	x10, #0x0
  4399d4:	cset	w8, ne  // ne = any
  4399d8:	and	w0, w8, #0x1
  4399dc:	add	sp, sp, #0x20
  4399e0:	ret

00000000004399e4 <user_new>:
  4399e4:	sub	sp, sp, #0x140
  4399e8:	stp	x29, x30, [sp, #288]
  4399ec:	str	x28, [sp, #304]
  4399f0:	add	x29, sp, #0x120
  4399f4:	mov	x8, xzr
  4399f8:	adrp	x9, 44a000 <_fini+0x9c30>
  4399fc:	add	x9, x9, #0x8be
  439a00:	add	x9, x9, #0x3
  439a04:	adrp	x10, 44a000 <_fini+0x9c30>
  439a08:	add	x10, x10, #0x8d9
  439a0c:	stur	x0, [x29, #-16]
  439a10:	stur	x1, [x29, #-24]
  439a14:	stur	w2, [x29, #-28]
  439a18:	stur	w3, [x29, #-32]
  439a1c:	stur	x4, [x29, #-40]
  439a20:	stur	x5, [x29, #-48]
  439a24:	stur	x8, [x29, #-56]
  439a28:	str	x9, [sp, #32]
  439a2c:	str	x10, [sp, #24]
  439a30:	ldur	x8, [x29, #-16]
  439a34:	cmp	x8, #0x0
  439a38:	cset	w9, ne  // ne = any
  439a3c:	mov	w10, #0x1                   	// #1
  439a40:	eor	w9, w9, #0x1
  439a44:	eor	w9, w9, w10
  439a48:	eor	w9, w9, w10
  439a4c:	and	w9, w9, #0x1
  439a50:	mov	w0, w9
  439a54:	sxtw	x8, w0
  439a58:	cbz	x8, 439a7c <user_new+0x98>
  439a5c:	mov	w8, wzr
  439a60:	mov	w0, w8
  439a64:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  439a68:	add	x1, x1, #0x5cf
  439a6c:	ldr	x2, [sp, #32]
  439a70:	mov	w3, #0x31                  	// #49
  439a74:	ldr	x4, [sp, #24]
  439a78:	bl	406c68 <log_assert_failed_realm@plt>
  439a7c:	ldur	x8, [x29, #-24]
  439a80:	cmp	x8, #0x0
  439a84:	cset	w9, ne  // ne = any
  439a88:	mov	w10, #0x1                   	// #1
  439a8c:	eor	w9, w9, #0x1
  439a90:	eor	w9, w9, w10
  439a94:	eor	w9, w9, w10
  439a98:	and	w9, w9, #0x1
  439a9c:	mov	w0, w9
  439aa0:	sxtw	x8, w0
  439aa4:	cbz	x8, 439ac8 <user_new+0xe4>
  439aa8:	mov	w8, wzr
  439aac:	mov	w0, w8
  439ab0:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  439ab4:	add	x1, x1, #0x5ef
  439ab8:	ldr	x2, [sp, #32]
  439abc:	mov	w3, #0x32                  	// #50
  439ac0:	ldr	x4, [sp, #24]
  439ac4:	bl	406c68 <log_assert_failed_realm@plt>
  439ac8:	ldur	x8, [x29, #-40]
  439acc:	cmp	x8, #0x0
  439ad0:	cset	w9, ne  // ne = any
  439ad4:	mov	w10, #0x1                   	// #1
  439ad8:	eor	w9, w9, #0x1
  439adc:	eor	w9, w9, w10
  439ae0:	eor	w9, w9, w10
  439ae4:	and	w9, w9, #0x1
  439ae8:	mov	w0, w9
  439aec:	sxtw	x8, w0
  439af0:	cbz	x8, 439b14 <user_new+0x130>
  439af4:	mov	w8, wzr
  439af8:	mov	w0, w8
  439afc:	adrp	x1, 441000 <_fini+0xc30>
  439b00:	add	x1, x1, #0xe09
  439b04:	ldr	x2, [sp, #32]
  439b08:	mov	w3, #0x33                  	// #51
  439b0c:	ldr	x4, [sp, #24]
  439b10:	bl	406c68 <log_assert_failed_realm@plt>
  439b14:	mov	x0, #0x98                  	// #152
  439b18:	mov	x1, #0x1                   	// #1
  439b1c:	bl	439f44 <malloc_multiply>
  439b20:	stur	x0, [x29, #-56]
  439b24:	ldur	x8, [x29, #-56]
  439b28:	cbnz	x8, 439b40 <user_new+0x15c>
  439b2c:	mov	w8, #0xfffffff4            	// #-12
  439b30:	stur	w8, [x29, #-4]
  439b34:	mov	w8, #0x1                   	// #1
  439b38:	stur	w8, [x29, #-80]
  439b3c:	b	439ef4 <user_new+0x510>
  439b40:	ldur	x0, [x29, #-56]
  439b44:	add	x8, sp, #0x38
  439b48:	str	x0, [sp, #16]
  439b4c:	mov	x0, x8
  439b50:	mov	w9, wzr
  439b54:	mov	w1, w9
  439b58:	mov	x10, #0x98                  	// #152
  439b5c:	mov	x2, x10
  439b60:	str	x8, [sp, #8]
  439b64:	str	x10, [sp]
  439b68:	bl	406c98 <memset@plt>
  439b6c:	ldur	x8, [x29, #-24]
  439b70:	str	x8, [sp, #56]
  439b74:	ldur	w9, [x29, #-28]
  439b78:	str	w9, [sp, #64]
  439b7c:	ldur	w9, [x29, #-32]
  439b80:	str	w9, [sp, #68]
  439b84:	mov	x8, #0xffffffffffffffff    	// #-1
  439b88:	str	x8, [sp, #160]
  439b8c:	ldr	x0, [sp, #16]
  439b90:	ldr	x1, [sp, #8]
  439b94:	ldr	x2, [sp]
  439b98:	bl	406cb8 <memcpy@plt>
  439b9c:	ldur	x0, [x29, #-40]
  439ba0:	bl	407168 <strdup@plt>
  439ba4:	ldur	x8, [x29, #-56]
  439ba8:	str	x0, [x8, #16]
  439bac:	ldur	x8, [x29, #-56]
  439bb0:	ldr	x8, [x8, #16]
  439bb4:	cbnz	x8, 439bcc <user_new+0x1e8>
  439bb8:	mov	w8, #0xfffffff4            	// #-12
  439bbc:	stur	w8, [x29, #-4]
  439bc0:	mov	w8, #0x1                   	// #1
  439bc4:	stur	w8, [x29, #-80]
  439bc8:	b	439ef4 <user_new+0x510>
  439bcc:	ldur	x0, [x29, #-48]
  439bd0:	bl	407168 <strdup@plt>
  439bd4:	ldur	x8, [x29, #-56]
  439bd8:	str	x0, [x8, #24]
  439bdc:	ldur	x8, [x29, #-56]
  439be0:	ldr	x8, [x8, #24]
  439be4:	cbnz	x8, 439bfc <user_new+0x218>
  439be8:	mov	w8, #0xfffffff4            	// #-12
  439bec:	stur	w8, [x29, #-4]
  439bf0:	mov	w8, #0x1                   	// #1
  439bf4:	stur	w8, [x29, #-80]
  439bf8:	b	439ef4 <user_new+0x510>
  439bfc:	ldur	x8, [x29, #-56]
  439c00:	ldr	x0, [x8, #24]
  439c04:	mov	w9, #0x1                   	// #1
  439c08:	and	w1, w9, #0x1
  439c0c:	bl	407d28 <path_simplify@plt>
  439c10:	ldur	x8, [x29, #-56]
  439c14:	add	x8, x8, #0x20
  439c18:	ldur	w2, [x29, #-28]
  439c1c:	mov	x0, x8
  439c20:	adrp	x1, 44a000 <_fini+0x9c30>
  439c24:	add	x1, x1, #0x924
  439c28:	bl	406ff8 <asprintf@plt>
  439c2c:	cmp	w0, #0x0
  439c30:	cset	w9, ge  // ge = tcont
  439c34:	tbnz	w9, #0, 439c4c <user_new+0x268>
  439c38:	mov	w8, #0xfffffff4            	// #-12
  439c3c:	stur	w8, [x29, #-4]
  439c40:	mov	w8, #0x1                   	// #1
  439c44:	stur	w8, [x29, #-80]
  439c48:	b	439ef4 <user_new+0x510>
  439c4c:	ldur	x8, [x29, #-56]
  439c50:	add	x0, x8, #0x28
  439c54:	ldur	w2, [x29, #-28]
  439c58:	adrp	x1, 44a000 <_fini+0x9c30>
  439c5c:	add	x1, x1, #0x93a
  439c60:	bl	406ff8 <asprintf@plt>
  439c64:	cmp	w0, #0x0
  439c68:	cset	w9, ge  // ge = tcont
  439c6c:	tbnz	w9, #0, 439c84 <user_new+0x2a0>
  439c70:	mov	w8, #0xfffffff4            	// #-12
  439c74:	stur	w8, [x29, #-4]
  439c78:	mov	w8, #0x1                   	// #1
  439c7c:	stur	w8, [x29, #-80]
  439c80:	b	439ef4 <user_new+0x510>
  439c84:	ldur	w3, [x29, #-28]
  439c88:	sub	x0, x29, #0x45
  439c8c:	mov	x1, #0xd                   	// #13
  439c90:	adrp	x2, 445000 <_fini+0x4c30>
  439c94:	add	x2, x2, #0x610
  439c98:	bl	407358 <snprintf@plt>
  439c9c:	mov	w1, w0
  439ca0:	sxtw	x8, w1
  439ca4:	cmp	x8, #0xd
  439ca8:	cset	w9, cc  // cc = lo, ul, last
  439cac:	mov	w10, #0x1                   	// #1
  439cb0:	eor	w9, w9, #0x1
  439cb4:	eor	w9, w9, w10
  439cb8:	eor	w9, w9, w10
  439cbc:	and	w9, w9, #0x1
  439cc0:	mov	w1, w9
  439cc4:	sxtw	x8, w1
  439cc8:	cbz	x8, 439cec <user_new+0x308>
  439ccc:	mov	w8, wzr
  439cd0:	mov	w0, w8
  439cd4:	adrp	x1, 44a000 <_fini+0x9c30>
  439cd8:	add	x1, x1, #0x947
  439cdc:	ldr	x2, [sp, #32]
  439ce0:	mov	w3, #0x50                  	// #80
  439ce4:	ldr	x4, [sp, #24]
  439ce8:	bl	406c68 <log_assert_failed_realm@plt>
  439cec:	ldur	x8, [x29, #-56]
  439cf0:	add	x2, x8, #0x30
  439cf4:	adrp	x0, 44a000 <_fini+0x9c30>
  439cf8:	add	x0, x0, #0x969
  439cfc:	sub	x1, x29, #0x45
  439d00:	bl	407d38 <slice_build_subslice@plt>
  439d04:	stur	w0, [x29, #-76]
  439d08:	ldur	w9, [x29, #-76]
  439d0c:	cmp	w9, #0x0
  439d10:	cset	w9, ge  // ge = tcont
  439d14:	tbnz	w9, #0, 439d2c <user_new+0x348>
  439d18:	ldur	w8, [x29, #-76]
  439d1c:	stur	w8, [x29, #-4]
  439d20:	mov	w8, #0x1                   	// #1
  439d24:	stur	w8, [x29, #-80]
  439d28:	b	439ef4 <user_new+0x510>
  439d2c:	ldur	x8, [x29, #-56]
  439d30:	add	x3, x8, #0x38
  439d34:	adrp	x0, 442000 <_fini+0x1c30>
  439d38:	add	x0, x0, #0x80f
  439d3c:	sub	x1, x29, #0x45
  439d40:	adrp	x2, 44a000 <_fini+0x9c30>
  439d44:	add	x2, x2, #0x974
  439d48:	bl	407d48 <unit_name_build@plt>
  439d4c:	stur	w0, [x29, #-76]
  439d50:	ldur	w9, [x29, #-76]
  439d54:	cmp	w9, #0x0
  439d58:	cset	w9, ge  // ge = tcont
  439d5c:	tbnz	w9, #0, 439d74 <user_new+0x390>
  439d60:	ldur	w8, [x29, #-76]
  439d64:	stur	w8, [x29, #-4]
  439d68:	mov	w8, #0x1                   	// #1
  439d6c:	stur	w8, [x29, #-80]
  439d70:	b	439ef4 <user_new+0x510>
  439d74:	ldur	x8, [x29, #-56]
  439d78:	add	x3, x8, #0x40
  439d7c:	adrp	x0, 44a000 <_fini+0x9c30>
  439d80:	add	x0, x0, #0x97d
  439d84:	sub	x1, x29, #0x45
  439d88:	adrp	x2, 44a000 <_fini+0x9c30>
  439d8c:	add	x2, x2, #0x974
  439d90:	bl	407d48 <unit_name_build@plt>
  439d94:	stur	w0, [x29, #-76]
  439d98:	ldur	w9, [x29, #-76]
  439d9c:	cmp	w9, #0x0
  439da0:	cset	w9, ge  // ge = tcont
  439da4:	tbnz	w9, #0, 439dbc <user_new+0x3d8>
  439da8:	ldur	w8, [x29, #-76]
  439dac:	stur	w8, [x29, #-4]
  439db0:	mov	w8, #0x1                   	// #1
  439db4:	stur	w8, [x29, #-80]
  439db8:	b	439ef4 <user_new+0x510>
  439dbc:	ldur	x8, [x29, #-24]
  439dc0:	ldr	x0, [x8, #48]
  439dc4:	ldur	w9, [x29, #-28]
  439dc8:	mov	w8, w9
  439dcc:	add	x8, x8, #0x1
  439dd0:	ldur	x2, [x29, #-56]
  439dd4:	mov	x1, x8
  439dd8:	bl	407228 <hashmap_put@plt>
  439ddc:	stur	w0, [x29, #-76]
  439de0:	ldur	w9, [x29, #-76]
  439de4:	cmp	w9, #0x0
  439de8:	cset	w9, ge  // ge = tcont
  439dec:	tbnz	w9, #0, 439e04 <user_new+0x420>
  439df0:	ldur	w8, [x29, #-76]
  439df4:	stur	w8, [x29, #-4]
  439df8:	mov	w8, #0x1                   	// #1
  439dfc:	stur	w8, [x29, #-80]
  439e00:	b	439ef4 <user_new+0x510>
  439e04:	ldur	x8, [x29, #-24]
  439e08:	ldr	x0, [x8, #224]
  439e0c:	ldur	x8, [x29, #-56]
  439e10:	ldr	x1, [x8, #48]
  439e14:	ldur	x2, [x29, #-56]
  439e18:	bl	407228 <hashmap_put@plt>
  439e1c:	stur	w0, [x29, #-76]
  439e20:	ldur	w9, [x29, #-76]
  439e24:	cmp	w9, #0x0
  439e28:	cset	w9, ge  // ge = tcont
  439e2c:	tbnz	w9, #0, 439e44 <user_new+0x460>
  439e30:	ldur	w8, [x29, #-76]
  439e34:	stur	w8, [x29, #-4]
  439e38:	mov	w8, #0x1                   	// #1
  439e3c:	stur	w8, [x29, #-80]
  439e40:	b	439ef4 <user_new+0x510>
  439e44:	ldur	x8, [x29, #-24]
  439e48:	ldr	x0, [x8, #224]
  439e4c:	ldur	x8, [x29, #-56]
  439e50:	ldr	x1, [x8, #56]
  439e54:	ldur	x2, [x29, #-56]
  439e58:	bl	407228 <hashmap_put@plt>
  439e5c:	stur	w0, [x29, #-76]
  439e60:	ldur	w9, [x29, #-76]
  439e64:	cmp	w9, #0x0
  439e68:	cset	w9, ge  // ge = tcont
  439e6c:	tbnz	w9, #0, 439e84 <user_new+0x4a0>
  439e70:	ldur	w8, [x29, #-76]
  439e74:	stur	w8, [x29, #-4]
  439e78:	mov	w8, #0x1                   	// #1
  439e7c:	stur	w8, [x29, #-80]
  439e80:	b	439ef4 <user_new+0x510>
  439e84:	ldur	x8, [x29, #-24]
  439e88:	ldr	x0, [x8, #224]
  439e8c:	ldur	x8, [x29, #-56]
  439e90:	ldr	x1, [x8, #64]
  439e94:	ldur	x2, [x29, #-56]
  439e98:	bl	407228 <hashmap_put@plt>
  439e9c:	stur	w0, [x29, #-76]
  439ea0:	ldur	w9, [x29, #-76]
  439ea4:	cmp	w9, #0x0
  439ea8:	cset	w9, ge  // ge = tcont
  439eac:	tbnz	w9, #0, 439ec4 <user_new+0x4e0>
  439eb0:	ldur	w8, [x29, #-76]
  439eb4:	stur	w8, [x29, #-4]
  439eb8:	mov	w8, #0x1                   	// #1
  439ebc:	stur	w8, [x29, #-80]
  439ec0:	b	439ef4 <user_new+0x510>
  439ec4:	ldur	x8, [x29, #-56]
  439ec8:	str	x8, [sp, #48]
  439ecc:	mov	x8, xzr
  439ed0:	stur	x8, [x29, #-56]
  439ed4:	ldr	x8, [sp, #48]
  439ed8:	str	x8, [sp, #40]
  439edc:	ldr	x8, [sp, #40]
  439ee0:	ldur	x9, [x29, #-16]
  439ee4:	str	x8, [x9]
  439ee8:	stur	wzr, [x29, #-4]
  439eec:	mov	w10, #0x1                   	// #1
  439ef0:	stur	w10, [x29, #-80]
  439ef4:	sub	x0, x29, #0x38
  439ef8:	bl	439f10 <user_freep>
  439efc:	ldur	w0, [x29, #-4]
  439f00:	ldr	x28, [sp, #304]
  439f04:	ldp	x29, x30, [sp, #288]
  439f08:	add	sp, sp, #0x140
  439f0c:	ret

0000000000439f10 <user_freep>:
  439f10:	sub	sp, sp, #0x20
  439f14:	stp	x29, x30, [sp, #16]
  439f18:	add	x29, sp, #0x10
  439f1c:	str	x0, [sp, #8]
  439f20:	ldr	x8, [sp, #8]
  439f24:	ldr	x8, [x8]
  439f28:	cbz	x8, 439f38 <user_freep+0x28>
  439f2c:	ldr	x8, [sp, #8]
  439f30:	ldr	x0, [x8]
  439f34:	bl	439fc0 <user_free>
  439f38:	ldp	x29, x30, [sp, #16]
  439f3c:	add	sp, sp, #0x20
  439f40:	ret

0000000000439f44 <malloc_multiply>:
  439f44:	sub	sp, sp, #0x40
  439f48:	stp	x29, x30, [sp, #48]
  439f4c:	add	x29, sp, #0x30
  439f50:	stur	x0, [x29, #-16]
  439f54:	str	x1, [sp, #24]
  439f58:	ldur	x0, [x29, #-16]
  439f5c:	ldr	x1, [sp, #24]
  439f60:	bl	43bce8 <size_multiply_overflow>
  439f64:	tbnz	w0, #0, 439f6c <malloc_multiply+0x28>
  439f68:	b	439f78 <malloc_multiply+0x34>
  439f6c:	mov	x8, xzr
  439f70:	stur	x8, [x29, #-8]
  439f74:	b	439fb0 <malloc_multiply+0x6c>
  439f78:	ldur	x8, [x29, #-16]
  439f7c:	ldr	x9, [sp, #24]
  439f80:	mul	x8, x8, x9
  439f84:	str	x8, [sp, #16]
  439f88:	cbz	x8, 439f98 <malloc_multiply+0x54>
  439f8c:	ldr	x8, [sp, #16]
  439f90:	str	x8, [sp, #8]
  439f94:	b	439fa0 <malloc_multiply+0x5c>
  439f98:	mov	x8, #0x1                   	// #1
  439f9c:	str	x8, [sp, #8]
  439fa0:	ldr	x8, [sp, #8]
  439fa4:	mov	x0, x8
  439fa8:	bl	406dd8 <malloc@plt>
  439fac:	stur	x0, [x29, #-8]
  439fb0:	ldur	x0, [x29, #-8]
  439fb4:	ldp	x29, x30, [sp, #48]
  439fb8:	add	sp, sp, #0x40
  439fbc:	ret

0000000000439fc0 <user_free>:
  439fc0:	sub	sp, sp, #0x40
  439fc4:	stp	x29, x30, [sp, #48]
  439fc8:	add	x29, sp, #0x30
  439fcc:	adrp	x8, 44a000 <_fini+0x9c30>
  439fd0:	add	x8, x8, #0x8be
  439fd4:	add	x8, x8, #0x3
  439fd8:	stur	x0, [x29, #-16]
  439fdc:	ldur	x9, [x29, #-16]
  439fe0:	str	x8, [sp, #8]
  439fe4:	cbnz	x9, 439ff4 <user_free+0x34>
  439fe8:	mov	x8, xzr
  439fec:	stur	x8, [x29, #-8]
  439ff0:	b	43a2ac <user_free+0x2ec>
  439ff4:	ldur	x8, [x29, #-16]
  439ff8:	ldrb	w9, [x8, #120]
  439ffc:	and	w9, w9, #0x1
  43a000:	tbnz	w9, #0, 43a008 <user_free+0x48>
  43a004:	b	43a130 <user_free+0x170>
  43a008:	ldur	x8, [x29, #-16]
  43a00c:	ldr	x8, [x8]
  43a010:	add	x8, x8, #0x60
  43a014:	str	x8, [sp, #24]
  43a018:	ldur	x8, [x29, #-16]
  43a01c:	str	x8, [sp, #16]
  43a020:	ldr	x8, [sp, #16]
  43a024:	cmp	x8, #0x0
  43a028:	cset	w9, ne  // ne = any
  43a02c:	mov	w10, #0x1                   	// #1
  43a030:	eor	w9, w9, #0x1
  43a034:	eor	w9, w9, w10
  43a038:	eor	w9, w9, w10
  43a03c:	and	w9, w9, #0x1
  43a040:	mov	w0, w9
  43a044:	sxtw	x8, w0
  43a048:	cbz	x8, 43a070 <user_free+0xb0>
  43a04c:	mov	w8, wzr
  43a050:	mov	w0, w8
  43a054:	adrp	x1, 441000 <_fini+0xc30>
  43a058:	add	x1, x1, #0x6cc
  43a05c:	ldr	x2, [sp, #8]
  43a060:	mov	w3, #0x76                  	// #118
  43a064:	adrp	x4, 44a000 <_fini+0x9c30>
  43a068:	add	x4, x4, #0x98e
  43a06c:	bl	406c68 <log_assert_failed_realm@plt>
  43a070:	ldr	x8, [sp, #16]
  43a074:	ldr	x8, [x8, #136]
  43a078:	cbz	x8, 43a090 <user_free+0xd0>
  43a07c:	ldr	x8, [sp, #16]
  43a080:	ldr	x8, [x8, #144]
  43a084:	ldr	x9, [sp, #16]
  43a088:	ldr	x9, [x9, #136]
  43a08c:	str	x8, [x9, #144]
  43a090:	ldr	x8, [sp, #16]
  43a094:	ldr	x8, [x8, #144]
  43a098:	cbz	x8, 43a0b4 <user_free+0xf4>
  43a09c:	ldr	x8, [sp, #16]
  43a0a0:	ldr	x8, [x8, #136]
  43a0a4:	ldr	x9, [sp, #16]
  43a0a8:	ldr	x9, [x9, #144]
  43a0ac:	str	x8, [x9, #136]
  43a0b0:	b	43a11c <user_free+0x15c>
  43a0b4:	ldr	x8, [sp, #24]
  43a0b8:	ldr	x8, [x8]
  43a0bc:	ldr	x9, [sp, #16]
  43a0c0:	cmp	x8, x9
  43a0c4:	cset	w10, eq  // eq = none
  43a0c8:	mov	w11, #0x1                   	// #1
  43a0cc:	eor	w10, w10, #0x1
  43a0d0:	eor	w10, w10, w11
  43a0d4:	eor	w10, w10, w11
  43a0d8:	and	w10, w10, #0x1
  43a0dc:	mov	w0, w10
  43a0e0:	sxtw	x8, w0
  43a0e4:	cbz	x8, 43a10c <user_free+0x14c>
  43a0e8:	mov	w8, wzr
  43a0ec:	mov	w0, w8
  43a0f0:	adrp	x1, 441000 <_fini+0xc30>
  43a0f4:	add	x1, x1, #0x6d2
  43a0f8:	ldr	x2, [sp, #8]
  43a0fc:	mov	w3, #0x76                  	// #118
  43a100:	adrp	x4, 44a000 <_fini+0x9c30>
  43a104:	add	x4, x4, #0x98e
  43a108:	bl	406c68 <log_assert_failed_realm@plt>
  43a10c:	ldr	x8, [sp, #16]
  43a110:	ldr	x8, [x8, #136]
  43a114:	ldr	x9, [sp, #24]
  43a118:	str	x8, [x9]
  43a11c:	ldr	x8, [sp, #16]
  43a120:	mov	x9, xzr
  43a124:	str	x9, [x8, #144]
  43a128:	ldr	x8, [sp, #16]
  43a12c:	str	x9, [x8, #136]
  43a130:	ldur	x8, [x29, #-16]
  43a134:	ldr	x8, [x8, #128]
  43a138:	cbz	x8, 43a14c <user_free+0x18c>
  43a13c:	ldur	x8, [x29, #-16]
  43a140:	ldr	x0, [x8, #128]
  43a144:	bl	432104 <session_free>
  43a148:	b	43a130 <user_free+0x170>
  43a14c:	ldur	x8, [x29, #-16]
  43a150:	ldr	x8, [x8, #56]
  43a154:	cbz	x8, 43a174 <user_free+0x1b4>
  43a158:	ldur	x8, [x29, #-16]
  43a15c:	ldr	x8, [x8]
  43a160:	ldr	x0, [x8, #224]
  43a164:	ldur	x8, [x29, #-16]
  43a168:	ldr	x1, [x8, #56]
  43a16c:	ldur	x2, [x29, #-16]
  43a170:	bl	43a2bc <hashmap_remove_value>
  43a174:	ldur	x8, [x29, #-16]
  43a178:	ldr	x8, [x8, #64]
  43a17c:	cbz	x8, 43a19c <user_free+0x1dc>
  43a180:	ldur	x8, [x29, #-16]
  43a184:	ldr	x8, [x8]
  43a188:	ldr	x0, [x8, #224]
  43a18c:	ldur	x8, [x29, #-16]
  43a190:	ldr	x1, [x8, #64]
  43a194:	ldur	x2, [x29, #-16]
  43a198:	bl	43a2bc <hashmap_remove_value>
  43a19c:	ldur	x8, [x29, #-16]
  43a1a0:	ldr	x8, [x8, #48]
  43a1a4:	cbz	x8, 43a1c4 <user_free+0x204>
  43a1a8:	ldur	x8, [x29, #-16]
  43a1ac:	ldr	x8, [x8]
  43a1b0:	ldr	x0, [x8, #224]
  43a1b4:	ldur	x8, [x29, #-16]
  43a1b8:	ldr	x1, [x8, #48]
  43a1bc:	ldur	x2, [x29, #-16]
  43a1c0:	bl	43a2bc <hashmap_remove_value>
  43a1c4:	ldur	x8, [x29, #-16]
  43a1c8:	ldr	x8, [x8]
  43a1cc:	ldr	x0, [x8, #48]
  43a1d0:	ldur	x8, [x29, #-16]
  43a1d4:	ldr	w9, [x8, #8]
  43a1d8:	mov	w8, w9
  43a1dc:	add	x8, x8, #0x1
  43a1e0:	ldur	x2, [x29, #-16]
  43a1e4:	mov	x1, x8
  43a1e8:	bl	43a2bc <hashmap_remove_value>
  43a1ec:	ldur	x8, [x29, #-16]
  43a1f0:	ldr	x8, [x8, #112]
  43a1f4:	mov	x0, x8
  43a1f8:	bl	406d28 <sd_event_source_unref@plt>
  43a1fc:	ldur	x8, [x29, #-16]
  43a200:	ldr	x8, [x8, #72]
  43a204:	mov	x0, x8
  43a208:	bl	43a2f0 <mfree>
  43a20c:	ldur	x8, [x29, #-16]
  43a210:	str	x0, [x8, #72]
  43a214:	ldur	x8, [x29, #-16]
  43a218:	ldr	x0, [x8, #56]
  43a21c:	bl	43a2f0 <mfree>
  43a220:	ldur	x8, [x29, #-16]
  43a224:	str	x0, [x8, #56]
  43a228:	ldur	x8, [x29, #-16]
  43a22c:	ldr	x0, [x8, #64]
  43a230:	bl	43a2f0 <mfree>
  43a234:	ldur	x8, [x29, #-16]
  43a238:	str	x0, [x8, #64]
  43a23c:	ldur	x8, [x29, #-16]
  43a240:	ldr	x0, [x8, #48]
  43a244:	bl	43a2f0 <mfree>
  43a248:	ldur	x8, [x29, #-16]
  43a24c:	str	x0, [x8, #48]
  43a250:	ldur	x8, [x29, #-16]
  43a254:	ldr	x0, [x8, #40]
  43a258:	bl	43a2f0 <mfree>
  43a25c:	ldur	x8, [x29, #-16]
  43a260:	str	x0, [x8, #40]
  43a264:	ldur	x8, [x29, #-16]
  43a268:	ldr	x0, [x8, #32]
  43a26c:	bl	43a2f0 <mfree>
  43a270:	ldur	x8, [x29, #-16]
  43a274:	str	x0, [x8, #32]
  43a278:	ldur	x8, [x29, #-16]
  43a27c:	ldr	x0, [x8, #16]
  43a280:	bl	43a2f0 <mfree>
  43a284:	ldur	x8, [x29, #-16]
  43a288:	str	x0, [x8, #16]
  43a28c:	ldur	x8, [x29, #-16]
  43a290:	ldr	x0, [x8, #24]
  43a294:	bl	43a2f0 <mfree>
  43a298:	ldur	x8, [x29, #-16]
  43a29c:	str	x0, [x8, #24]
  43a2a0:	ldur	x0, [x29, #-16]
  43a2a4:	bl	43a2f0 <mfree>
  43a2a8:	stur	x0, [x29, #-8]
  43a2ac:	ldur	x0, [x29, #-8]
  43a2b0:	ldp	x29, x30, [sp, #48]
  43a2b4:	add	sp, sp, #0x40
  43a2b8:	ret

000000000043a2bc <hashmap_remove_value>:
  43a2bc:	sub	sp, sp, #0x30
  43a2c0:	stp	x29, x30, [sp, #32]
  43a2c4:	add	x29, sp, #0x20
  43a2c8:	stur	x0, [x29, #-8]
  43a2cc:	str	x1, [sp, #16]
  43a2d0:	str	x2, [sp, #8]
  43a2d4:	ldur	x0, [x29, #-8]
  43a2d8:	ldr	x1, [sp, #16]
  43a2dc:	ldr	x2, [sp, #8]
  43a2e0:	bl	407c38 <internal_hashmap_remove_value@plt>
  43a2e4:	ldp	x29, x30, [sp, #32]
  43a2e8:	add	sp, sp, #0x30
  43a2ec:	ret

000000000043a2f0 <mfree>:
  43a2f0:	sub	sp, sp, #0x20
  43a2f4:	stp	x29, x30, [sp, #16]
  43a2f8:	add	x29, sp, #0x10
  43a2fc:	mov	x8, xzr
  43a300:	str	x0, [sp, #8]
  43a304:	ldr	x0, [sp, #8]
  43a308:	str	x8, [sp]
  43a30c:	bl	406da8 <free@plt>
  43a310:	ldr	x0, [sp]
  43a314:	ldp	x29, x30, [sp, #16]
  43a318:	add	sp, sp, #0x20
  43a31c:	ret

000000000043a320 <user_save>:
  43a320:	sub	sp, sp, #0x30
  43a324:	stp	x29, x30, [sp, #32]
  43a328:	add	x29, sp, #0x20
  43a32c:	adrp	x8, 44a000 <_fini+0x9c30>
  43a330:	add	x8, x8, #0x8be
  43a334:	add	x2, x8, #0x3
  43a338:	str	x0, [sp, #16]
  43a33c:	str	x2, [sp, #8]
  43a340:	ldr	x8, [sp, #16]
  43a344:	cmp	x8, #0x0
  43a348:	cset	w9, ne  // ne = any
  43a34c:	mov	w10, #0x1                   	// #1
  43a350:	eor	w9, w9, #0x1
  43a354:	eor	w9, w9, w10
  43a358:	eor	w9, w9, w10
  43a35c:	and	w9, w9, #0x1
  43a360:	mov	w0, w9
  43a364:	sxtw	x8, w0
  43a368:	cbz	x8, 43a390 <user_save+0x70>
  43a36c:	mov	w8, wzr
  43a370:	mov	w0, w8
  43a374:	adrp	x1, 443000 <_fini+0x2c30>
  43a378:	add	x1, x1, #0x1dd
  43a37c:	ldr	x2, [sp, #8]
  43a380:	mov	w3, #0x131                 	// #305
  43a384:	adrp	x4, 44a000 <_fini+0x9c30>
  43a388:	add	x4, x4, #0x9a6
  43a38c:	bl	406c68 <log_assert_failed_realm@plt>
  43a390:	ldr	x8, [sp, #16]
  43a394:	ldrb	w9, [x8, #120]
  43a398:	mov	w10, #0x1                   	// #1
  43a39c:	lsr	w9, w9, w10
  43a3a0:	and	w9, w9, w10
  43a3a4:	tbnz	w9, #0, 43a3b0 <user_save+0x90>
  43a3a8:	stur	wzr, [x29, #-4]
  43a3ac:	b	43a3bc <user_save+0x9c>
  43a3b0:	ldr	x0, [sp, #16]
  43a3b4:	bl	43a3cc <user_save_internal>
  43a3b8:	stur	w0, [x29, #-4]
  43a3bc:	ldur	w0, [x29, #-4]
  43a3c0:	ldp	x29, x30, [sp, #32]
  43a3c4:	add	sp, sp, #0x30
  43a3c8:	ret

000000000043a3cc <user_save_internal>:
  43a3cc:	sub	sp, sp, #0x90
  43a3d0:	stp	x29, x30, [sp, #128]
  43a3d4:	add	x29, sp, #0x80
  43a3d8:	mov	x8, xzr
  43a3dc:	adrp	x9, 44a000 <_fini+0x9c30>
  43a3e0:	add	x9, x9, #0x8be
  43a3e4:	add	x9, x9, #0x3
  43a3e8:	stur	x0, [x29, #-16]
  43a3ec:	stur	x8, [x29, #-24]
  43a3f0:	stur	x8, [x29, #-32]
  43a3f4:	str	x9, [sp, #48]
  43a3f8:	ldur	x8, [x29, #-16]
  43a3fc:	cmp	x8, #0x0
  43a400:	cset	w9, ne  // ne = any
  43a404:	mov	w10, #0x1                   	// #1
  43a408:	eor	w9, w9, #0x1
  43a40c:	eor	w9, w9, w10
  43a410:	eor	w9, w9, w10
  43a414:	and	w9, w9, #0x1
  43a418:	mov	w0, w9
  43a41c:	sxtw	x8, w0
  43a420:	cbz	x8, 43a448 <user_save_internal+0x7c>
  43a424:	mov	w8, wzr
  43a428:	mov	w0, w8
  43a42c:	adrp	x1, 443000 <_fini+0x2c30>
  43a430:	add	x1, x1, #0x1dd
  43a434:	ldr	x2, [sp, #48]
  43a438:	mov	w3, #0x9a                  	// #154
  43a43c:	adrp	x4, 44a000 <_fini+0x9c30>
  43a440:	add	x4, x4, #0xf8c
  43a444:	bl	406c68 <log_assert_failed_realm@plt>
  43a448:	ldur	x8, [x29, #-16]
  43a44c:	ldr	x8, [x8, #32]
  43a450:	cmp	x8, #0x0
  43a454:	cset	w9, ne  // ne = any
  43a458:	mov	w10, #0x1                   	// #1
  43a45c:	eor	w9, w9, #0x1
  43a460:	eor	w9, w9, w10
  43a464:	eor	w9, w9, w10
  43a468:	and	w9, w9, #0x1
  43a46c:	mov	w0, w9
  43a470:	sxtw	x8, w0
  43a474:	cbz	x8, 43a49c <user_save_internal+0xd0>
  43a478:	mov	w8, wzr
  43a47c:	mov	w0, w8
  43a480:	adrp	x1, 44a000 <_fini+0x9c30>
  43a484:	add	x1, x1, #0xfab
  43a488:	ldr	x2, [sp, #48]
  43a48c:	mov	w3, #0x9b                  	// #155
  43a490:	adrp	x4, 44a000 <_fini+0x9c30>
  43a494:	add	x4, x4, #0xf8c
  43a498:	bl	406c68 <log_assert_failed_realm@plt>
  43a49c:	adrp	x0, 440000 <on_brightness_writer_exit+0x15c>
  43a4a0:	add	x0, x0, #0x461
  43a4a4:	mov	w1, #0x1ed                 	// #493
  43a4a8:	mov	w8, wzr
  43a4ac:	mov	w2, w8
  43a4b0:	mov	w3, w8
  43a4b4:	mov	w4, #0x2                   	// #2
  43a4b8:	bl	4076b8 <mkdir_safe_label@plt>
  43a4bc:	stur	w0, [x29, #-36]
  43a4c0:	ldur	w8, [x29, #-36]
  43a4c4:	cmp	w8, #0x0
  43a4c8:	cset	w8, ge  // ge = tcont
  43a4cc:	tbnz	w8, #0, 43a4d4 <user_save_internal+0x108>
  43a4d0:	b	43a9e8 <user_save_internal+0x61c>
  43a4d4:	ldur	x8, [x29, #-16]
  43a4d8:	ldr	x0, [x8, #32]
  43a4dc:	sub	x1, x29, #0x20
  43a4e0:	sub	x2, x29, #0x18
  43a4e4:	bl	407958 <fopen_temporary@plt>
  43a4e8:	stur	w0, [x29, #-36]
  43a4ec:	ldur	w9, [x29, #-36]
  43a4f0:	cmp	w9, #0x0
  43a4f4:	cset	w9, ge  // ge = tcont
  43a4f8:	tbnz	w9, #0, 43a500 <user_save_internal+0x134>
  43a4fc:	b	43a9e8 <user_save_internal+0x61c>
  43a500:	ldur	x0, [x29, #-32]
  43a504:	bl	407968 <fileno@plt>
  43a508:	mov	w1, #0x1a4                 	// #420
  43a50c:	bl	407978 <fchmod@plt>
  43a510:	ldur	x8, [x29, #-32]
  43a514:	ldur	x9, [x29, #-16]
  43a518:	ldr	x2, [x9, #16]
  43a51c:	ldur	x9, [x29, #-16]
  43a520:	mov	x0, x9
  43a524:	str	x8, [sp, #40]
  43a528:	str	x2, [sp, #32]
  43a52c:	bl	43c368 <user_get_state>
  43a530:	bl	43d024 <user_state_to_string>
  43a534:	ldur	x8, [x29, #-16]
  43a538:	ldrb	w10, [x8, #120]
  43a53c:	mov	w11, #0x2                   	// #2
  43a540:	lsr	w10, w10, w11
  43a544:	and	w10, w10, #0x1
  43a548:	and	w10, w10, #0x1
  43a54c:	str	x0, [sp, #24]
  43a550:	mov	w0, w10
  43a554:	bl	43d66c <yes_no>
  43a558:	ldr	x8, [sp, #40]
  43a55c:	str	x0, [sp, #16]
  43a560:	mov	x0, x8
  43a564:	adrp	x1, 44a000 <_fini+0x9c30>
  43a568:	add	x1, x1, #0xfb9
  43a56c:	ldr	x2, [sp, #32]
  43a570:	ldr	x3, [sp, #24]
  43a574:	ldr	x4, [sp, #16]
  43a578:	bl	407988 <fprintf@plt>
  43a57c:	ldur	x8, [x29, #-16]
  43a580:	ldr	x8, [x8, #40]
  43a584:	cbz	x8, 43a5a0 <user_save_internal+0x1d4>
  43a588:	ldur	x0, [x29, #-32]
  43a58c:	ldur	x8, [x29, #-16]
  43a590:	ldr	x2, [x8, #40]
  43a594:	adrp	x1, 44a000 <_fini+0x9c30>
  43a598:	add	x1, x1, #0xffd
  43a59c:	bl	407988 <fprintf@plt>
  43a5a0:	ldur	x8, [x29, #-16]
  43a5a4:	ldr	x8, [x8, #72]
  43a5a8:	cbz	x8, 43a5c4 <user_save_internal+0x1f8>
  43a5ac:	ldur	x0, [x29, #-32]
  43a5b0:	ldur	x8, [x29, #-16]
  43a5b4:	ldr	x2, [x8, #72]
  43a5b8:	adrp	x1, 44b000 <_fini+0xac30>
  43a5bc:	add	x1, x1, #0x9
  43a5c0:	bl	407988 <fprintf@plt>
  43a5c4:	ldur	x8, [x29, #-16]
  43a5c8:	ldr	x8, [x8, #80]
  43a5cc:	cbz	x8, 43a5ec <user_save_internal+0x220>
  43a5d0:	ldur	x0, [x29, #-32]
  43a5d4:	ldur	x8, [x29, #-16]
  43a5d8:	ldr	x8, [x8, #80]
  43a5dc:	ldr	x2, [x8, #8]
  43a5e0:	adrp	x1, 449000 <_fini+0x8c30>
  43a5e4:	add	x1, x1, #0x877
  43a5e8:	bl	407988 <fprintf@plt>
  43a5ec:	ldur	x8, [x29, #-16]
  43a5f0:	add	x0, x8, #0x58
  43a5f4:	bl	43b18c <dual_timestamp_is_set>
  43a5f8:	tbnz	w0, #0, 43a600 <user_save_internal+0x234>
  43a5fc:	b	43a620 <user_save_internal+0x254>
  43a600:	ldur	x0, [x29, #-32]
  43a604:	ldur	x8, [x29, #-16]
  43a608:	ldr	x2, [x8, #88]
  43a60c:	ldur	x8, [x29, #-16]
  43a610:	ldr	x3, [x8, #96]
  43a614:	adrp	x1, 449000 <_fini+0x8c30>
  43a618:	add	x1, x1, #0x8e6
  43a61c:	bl	407988 <fprintf@plt>
  43a620:	ldur	x8, [x29, #-16]
  43a624:	ldr	x8, [x8, #104]
  43a628:	mov	x9, #0xffffffffffffffff    	// #-1
  43a62c:	cmp	x8, x9
  43a630:	b.eq	43a64c <user_save_internal+0x280>  // b.none
  43a634:	ldur	x0, [x29, #-32]
  43a638:	ldur	x8, [x29, #-16]
  43a63c:	ldr	x2, [x8, #104]
  43a640:	adrp	x1, 44b000 <_fini+0xac30>
  43a644:	add	x1, x1, #0x19
  43a648:	bl	407988 <fprintf@plt>
  43a64c:	ldur	x8, [x29, #-16]
  43a650:	ldr	x8, [x8, #128]
  43a654:	cbz	x8, 43a984 <user_save_internal+0x5b8>
  43a658:	ldur	x1, [x29, #-32]
  43a65c:	adrp	x0, 447000 <_fini+0x6c30>
  43a660:	add	x0, x0, #0xe6f
  43a664:	bl	407ac8 <fputs@plt>
  43a668:	mov	w8, #0x1                   	// #1
  43a66c:	sturb	w8, [x29, #-49]
  43a670:	ldur	x9, [x29, #-16]
  43a674:	ldr	x9, [x9, #128]
  43a678:	stur	x9, [x29, #-48]
  43a67c:	ldur	x8, [x29, #-48]
  43a680:	cbz	x8, 43a6c8 <user_save_internal+0x2fc>
  43a684:	ldurb	w8, [x29, #-49]
  43a688:	tbnz	w8, #0, 43a690 <user_save_internal+0x2c4>
  43a68c:	b	43a69c <user_save_internal+0x2d0>
  43a690:	mov	w8, #0x0                   	// #0
  43a694:	sturb	w8, [x29, #-49]
  43a698:	b	43a6a8 <user_save_internal+0x2dc>
  43a69c:	ldur	x1, [x29, #-32]
  43a6a0:	mov	w0, #0x20                  	// #32
  43a6a4:	bl	407d58 <fputc@plt>
  43a6a8:	ldur	x8, [x29, #-48]
  43a6ac:	ldr	x0, [x8, #8]
  43a6b0:	ldur	x1, [x29, #-32]
  43a6b4:	bl	407ac8 <fputs@plt>
  43a6b8:	ldur	x8, [x29, #-48]
  43a6bc:	ldr	x8, [x8, #256]
  43a6c0:	stur	x8, [x29, #-48]
  43a6c4:	b	43a67c <user_save_internal+0x2b0>
  43a6c8:	ldur	x1, [x29, #-32]
  43a6cc:	adrp	x0, 44b000 <_fini+0xac30>
  43a6d0:	add	x0, x0, #0x35
  43a6d4:	bl	407ac8 <fputs@plt>
  43a6d8:	mov	w8, #0x1                   	// #1
  43a6dc:	sturb	w8, [x29, #-49]
  43a6e0:	ldur	x9, [x29, #-16]
  43a6e4:	ldr	x9, [x9, #128]
  43a6e8:	stur	x9, [x29, #-48]
  43a6ec:	ldur	x8, [x29, #-48]
  43a6f0:	cbz	x8, 43a74c <user_save_internal+0x380>
  43a6f4:	ldur	x8, [x29, #-48]
  43a6f8:	ldr	x8, [x8, #136]
  43a6fc:	cbnz	x8, 43a704 <user_save_internal+0x338>
  43a700:	b	43a73c <user_save_internal+0x370>
  43a704:	ldurb	w8, [x29, #-49]
  43a708:	tbnz	w8, #0, 43a710 <user_save_internal+0x344>
  43a70c:	b	43a71c <user_save_internal+0x350>
  43a710:	mov	w8, #0x0                   	// #0
  43a714:	sturb	w8, [x29, #-49]
  43a718:	b	43a728 <user_save_internal+0x35c>
  43a71c:	ldur	x1, [x29, #-32]
  43a720:	mov	w0, #0x20                  	// #32
  43a724:	bl	407d58 <fputc@plt>
  43a728:	ldur	x8, [x29, #-48]
  43a72c:	ldr	x8, [x8, #136]
  43a730:	ldr	x0, [x8, #8]
  43a734:	ldur	x1, [x29, #-32]
  43a738:	bl	407ac8 <fputs@plt>
  43a73c:	ldur	x8, [x29, #-48]
  43a740:	ldr	x8, [x8, #256]
  43a744:	stur	x8, [x29, #-48]
  43a748:	b	43a6ec <user_save_internal+0x320>
  43a74c:	ldur	x1, [x29, #-32]
  43a750:	adrp	x0, 44b000 <_fini+0xac30>
  43a754:	add	x0, x0, #0x3d
  43a758:	bl	407ac8 <fputs@plt>
  43a75c:	mov	w8, #0x1                   	// #1
  43a760:	sturb	w8, [x29, #-49]
  43a764:	ldur	x9, [x29, #-16]
  43a768:	ldr	x9, [x9, #128]
  43a76c:	stur	x9, [x29, #-48]
  43a770:	ldur	x8, [x29, #-48]
  43a774:	cbz	x8, 43a7cc <user_save_internal+0x400>
  43a778:	ldur	x0, [x29, #-48]
  43a77c:	bl	433408 <session_is_active>
  43a780:	tbnz	w0, #0, 43a788 <user_save_internal+0x3bc>
  43a784:	b	43a7bc <user_save_internal+0x3f0>
  43a788:	ldurb	w8, [x29, #-49]
  43a78c:	tbnz	w8, #0, 43a794 <user_save_internal+0x3c8>
  43a790:	b	43a7a0 <user_save_internal+0x3d4>
  43a794:	mov	w8, #0x0                   	// #0
  43a798:	sturb	w8, [x29, #-49]
  43a79c:	b	43a7ac <user_save_internal+0x3e0>
  43a7a0:	ldur	x1, [x29, #-32]
  43a7a4:	mov	w0, #0x20                  	// #32
  43a7a8:	bl	407d58 <fputc@plt>
  43a7ac:	ldur	x8, [x29, #-48]
  43a7b0:	ldr	x0, [x8, #8]
  43a7b4:	ldur	x1, [x29, #-32]
  43a7b8:	bl	407ac8 <fputs@plt>
  43a7bc:	ldur	x8, [x29, #-48]
  43a7c0:	ldr	x8, [x8, #256]
  43a7c4:	stur	x8, [x29, #-48]
  43a7c8:	b	43a770 <user_save_internal+0x3a4>
  43a7cc:	ldur	x1, [x29, #-32]
  43a7d0:	adrp	x0, 44b000 <_fini+0xac30>
  43a7d4:	add	x0, x0, #0x4f
  43a7d8:	bl	407ac8 <fputs@plt>
  43a7dc:	mov	w8, #0x1                   	// #1
  43a7e0:	sturb	w8, [x29, #-49]
  43a7e4:	ldur	x9, [x29, #-16]
  43a7e8:	ldr	x9, [x9, #128]
  43a7ec:	stur	x9, [x29, #-48]
  43a7f0:	ldur	x8, [x29, #-48]
  43a7f4:	cbz	x8, 43a850 <user_save_internal+0x484>
  43a7f8:	ldur	x0, [x29, #-48]
  43a7fc:	bl	433524 <session_get_state>
  43a800:	cmp	w0, #0x3
  43a804:	b.ne	43a80c <user_save_internal+0x440>  // b.any
  43a808:	b	43a840 <user_save_internal+0x474>
  43a80c:	ldurb	w8, [x29, #-49]
  43a810:	tbnz	w8, #0, 43a818 <user_save_internal+0x44c>
  43a814:	b	43a824 <user_save_internal+0x458>
  43a818:	mov	w8, #0x0                   	// #0
  43a81c:	sturb	w8, [x29, #-49]
  43a820:	b	43a830 <user_save_internal+0x464>
  43a824:	ldur	x1, [x29, #-32]
  43a828:	mov	w0, #0x20                  	// #32
  43a82c:	bl	407d58 <fputc@plt>
  43a830:	ldur	x8, [x29, #-48]
  43a834:	ldr	x0, [x8, #8]
  43a838:	ldur	x1, [x29, #-32]
  43a83c:	bl	407ac8 <fputs@plt>
  43a840:	ldur	x8, [x29, #-48]
  43a844:	ldr	x8, [x8, #256]
  43a848:	stur	x8, [x29, #-48]
  43a84c:	b	43a7f0 <user_save_internal+0x424>
  43a850:	ldur	x1, [x29, #-32]
  43a854:	adrp	x0, 44b000 <_fini+0xac30>
  43a858:	add	x0, x0, #0x61
  43a85c:	bl	407ac8 <fputs@plt>
  43a860:	mov	w8, #0x1                   	// #1
  43a864:	sturb	w8, [x29, #-49]
  43a868:	ldur	x9, [x29, #-16]
  43a86c:	ldr	x9, [x9, #128]
  43a870:	stur	x9, [x29, #-48]
  43a874:	ldur	x8, [x29, #-48]
  43a878:	cbz	x8, 43a8e4 <user_save_internal+0x518>
  43a87c:	ldur	x0, [x29, #-48]
  43a880:	bl	433408 <session_is_active>
  43a884:	tbnz	w0, #0, 43a88c <user_save_internal+0x4c0>
  43a888:	b	43a898 <user_save_internal+0x4cc>
  43a88c:	ldur	x8, [x29, #-48]
  43a890:	ldr	x8, [x8, #136]
  43a894:	cbnz	x8, 43a89c <user_save_internal+0x4d0>
  43a898:	b	43a8d4 <user_save_internal+0x508>
  43a89c:	ldurb	w8, [x29, #-49]
  43a8a0:	tbnz	w8, #0, 43a8a8 <user_save_internal+0x4dc>
  43a8a4:	b	43a8b4 <user_save_internal+0x4e8>
  43a8a8:	mov	w8, #0x0                   	// #0
  43a8ac:	sturb	w8, [x29, #-49]
  43a8b0:	b	43a8c0 <user_save_internal+0x4f4>
  43a8b4:	ldur	x1, [x29, #-32]
  43a8b8:	mov	w0, #0x20                  	// #32
  43a8bc:	bl	407d58 <fputc@plt>
  43a8c0:	ldur	x8, [x29, #-48]
  43a8c4:	ldr	x8, [x8, #136]
  43a8c8:	ldr	x0, [x8, #8]
  43a8cc:	ldur	x1, [x29, #-32]
  43a8d0:	bl	407ac8 <fputs@plt>
  43a8d4:	ldur	x8, [x29, #-48]
  43a8d8:	ldr	x8, [x8, #256]
  43a8dc:	stur	x8, [x29, #-48]
  43a8e0:	b	43a874 <user_save_internal+0x4a8>
  43a8e4:	ldur	x1, [x29, #-32]
  43a8e8:	adrp	x0, 44b000 <_fini+0xac30>
  43a8ec:	add	x0, x0, #0x70
  43a8f0:	bl	407ac8 <fputs@plt>
  43a8f4:	mov	w8, #0x1                   	// #1
  43a8f8:	sturb	w8, [x29, #-49]
  43a8fc:	ldur	x9, [x29, #-16]
  43a900:	ldr	x9, [x9, #128]
  43a904:	stur	x9, [x29, #-48]
  43a908:	ldur	x8, [x29, #-48]
  43a90c:	cbz	x8, 43a978 <user_save_internal+0x5ac>
  43a910:	ldur	x0, [x29, #-48]
  43a914:	bl	433524 <session_get_state>
  43a918:	cmp	w0, #0x3
  43a91c:	b.eq	43a92c <user_save_internal+0x560>  // b.none
  43a920:	ldur	x8, [x29, #-48]
  43a924:	ldr	x8, [x8, #136]
  43a928:	cbnz	x8, 43a930 <user_save_internal+0x564>
  43a92c:	b	43a968 <user_save_internal+0x59c>
  43a930:	ldurb	w8, [x29, #-49]
  43a934:	tbnz	w8, #0, 43a93c <user_save_internal+0x570>
  43a938:	b	43a948 <user_save_internal+0x57c>
  43a93c:	mov	w8, #0x0                   	// #0
  43a940:	sturb	w8, [x29, #-49]
  43a944:	b	43a954 <user_save_internal+0x588>
  43a948:	ldur	x1, [x29, #-32]
  43a94c:	mov	w0, #0x20                  	// #32
  43a950:	bl	407d58 <fputc@plt>
  43a954:	ldur	x8, [x29, #-48]
  43a958:	ldr	x8, [x8, #136]
  43a95c:	ldr	x0, [x8, #8]
  43a960:	ldur	x1, [x29, #-32]
  43a964:	bl	407ac8 <fputs@plt>
  43a968:	ldur	x8, [x29, #-48]
  43a96c:	ldr	x8, [x8, #256]
  43a970:	stur	x8, [x29, #-48]
  43a974:	b	43a908 <user_save_internal+0x53c>
  43a978:	ldur	x1, [x29, #-32]
  43a97c:	mov	w0, #0xa                   	// #10
  43a980:	bl	407d58 <fputc@plt>
  43a984:	ldur	x0, [x29, #-32]
  43a988:	bl	407998 <fflush_and_check@plt>
  43a98c:	stur	w0, [x29, #-36]
  43a990:	ldur	w8, [x29, #-36]
  43a994:	cmp	w8, #0x0
  43a998:	cset	w8, ge  // ge = tcont
  43a99c:	tbnz	w8, #0, 43a9a4 <user_save_internal+0x5d8>
  43a9a0:	b	43a9e8 <user_save_internal+0x61c>
  43a9a4:	ldur	x0, [x29, #-24]
  43a9a8:	ldur	x8, [x29, #-16]
  43a9ac:	ldr	x1, [x8, #32]
  43a9b0:	bl	4079a8 <rename@plt>
  43a9b4:	cmp	w0, #0x0
  43a9b8:	cset	w9, ge  // ge = tcont
  43a9bc:	tbnz	w9, #0, 43a9d8 <user_save_internal+0x60c>
  43a9c0:	bl	406e08 <__errno_location@plt>
  43a9c4:	ldr	w8, [x0]
  43a9c8:	mov	w9, wzr
  43a9cc:	subs	w8, w9, w8
  43a9d0:	stur	w8, [x29, #-36]
  43a9d4:	b	43a9e8 <user_save_internal+0x61c>
  43a9d8:	stur	wzr, [x29, #-4]
  43a9dc:	mov	w8, #0x1                   	// #1
  43a9e0:	stur	w8, [x29, #-56]
  43a9e4:	b	43aa98 <user_save_internal+0x6cc>
  43a9e8:	ldur	x8, [x29, #-16]
  43a9ec:	ldr	x0, [x8, #32]
  43a9f0:	bl	4076e8 <unlink@plt>
  43a9f4:	ldur	x8, [x29, #-24]
  43a9f8:	cbz	x8, 43aa04 <user_save_internal+0x638>
  43a9fc:	ldur	x0, [x29, #-24]
  43aa00:	bl	4076e8 <unlink@plt>
  43aa04:	mov	w8, #0x3                   	// #3
  43aa08:	stur	w8, [x29, #-60]
  43aa0c:	ldur	w8, [x29, #-36]
  43aa10:	str	w8, [sp, #64]
  43aa14:	str	wzr, [sp, #60]
  43aa18:	ldr	w0, [sp, #60]
  43aa1c:	bl	406c08 <log_get_max_level_realm@plt>
  43aa20:	ldur	w8, [x29, #-60]
  43aa24:	and	w8, w8, #0x7
  43aa28:	cmp	w0, w8
  43aa2c:	b.lt	43aa6c <user_save_internal+0x6a0>  // b.tstop
  43aa30:	ldr	w8, [sp, #60]
  43aa34:	ldur	w9, [x29, #-60]
  43aa38:	orr	w0, w9, w8, lsl #10
  43aa3c:	ldr	w1, [sp, #64]
  43aa40:	ldur	x10, [x29, #-16]
  43aa44:	ldr	x6, [x10, #32]
  43aa48:	ldr	x2, [sp, #48]
  43aa4c:	mov	w3, #0x12d                 	// #301
  43aa50:	adrp	x4, 44b000 <_fini+0xac30>
  43aa54:	add	x4, x4, #0x7f
  43aa58:	adrp	x5, 44b000 <_fini+0xac30>
  43aa5c:	add	x5, x5, #0x92
  43aa60:	bl	406c18 <log_internal_realm@plt>
  43aa64:	str	w0, [sp, #12]
  43aa68:	b	43aa80 <user_save_internal+0x6b4>
  43aa6c:	ldr	w0, [sp, #64]
  43aa70:	bl	406c28 <abs@plt>
  43aa74:	mov	w8, wzr
  43aa78:	subs	w8, w8, w0, uxtb
  43aa7c:	str	w8, [sp, #12]
  43aa80:	ldr	w8, [sp, #12]
  43aa84:	str	w8, [sp, #56]
  43aa88:	ldr	w8, [sp, #56]
  43aa8c:	stur	w8, [x29, #-4]
  43aa90:	mov	w8, #0x1                   	// #1
  43aa94:	stur	w8, [x29, #-56]
  43aa98:	sub	x0, x29, #0x20
  43aa9c:	bl	43d644 <fclosep>
  43aaa0:	sub	x0, x29, #0x18
  43aaa4:	bl	43add8 <freep>
  43aaa8:	ldur	w0, [x29, #-4]
  43aaac:	ldp	x29, x30, [sp, #128]
  43aab0:	add	sp, sp, #0x90
  43aab4:	ret

000000000043aab8 <user_load>:
  43aab8:	sub	sp, sp, #0xa0
  43aabc:	stp	x29, x30, [sp, #144]
  43aac0:	add	x29, sp, #0x90
  43aac4:	mov	x8, xzr
  43aac8:	adrp	x9, 44a000 <_fini+0x9c30>
  43aacc:	add	x9, x9, #0x8be
  43aad0:	add	x9, x9, #0x3
  43aad4:	stur	x0, [x29, #-16]
  43aad8:	stur	x8, [x29, #-24]
  43aadc:	stur	x8, [x29, #-32]
  43aae0:	stur	x8, [x29, #-40]
  43aae4:	stur	x8, [x29, #-48]
  43aae8:	str	x9, [sp, #48]
  43aaec:	ldur	x8, [x29, #-16]
  43aaf0:	cmp	x8, #0x0
  43aaf4:	cset	w9, ne  // ne = any
  43aaf8:	mov	w10, #0x1                   	// #1
  43aafc:	eor	w9, w9, #0x1
  43ab00:	eor	w9, w9, w10
  43ab04:	eor	w9, w9, w10
  43ab08:	and	w9, w9, #0x1
  43ab0c:	mov	w0, w9
  43ab10:	sxtw	x8, w0
  43ab14:	cbz	x8, 43ab3c <user_load+0x84>
  43ab18:	mov	w8, wzr
  43ab1c:	mov	w0, w8
  43ab20:	adrp	x1, 443000 <_fini+0x2c30>
  43ab24:	add	x1, x1, #0x1dd
  43ab28:	ldr	x2, [sp, #48]
  43ab2c:	mov	w3, #0x13d                 	// #317
  43ab30:	adrp	x4, 44a000 <_fini+0x9c30>
  43ab34:	add	x4, x4, #0x9bc
  43ab38:	bl	406c68 <log_assert_failed_realm@plt>
  43ab3c:	ldur	x8, [x29, #-16]
  43ab40:	ldr	x1, [x8, #32]
  43ab44:	ldur	x8, [x29, #-16]
  43ab48:	add	x3, x8, #0x48
  43ab4c:	mov	x8, xzr
  43ab50:	mov	x0, x8
  43ab54:	adrp	x2, 44a000 <_fini+0x9c30>
  43ab58:	add	x2, x2, #0x9d2
  43ab5c:	adrp	x4, 44a000 <_fini+0x9c30>
  43ab60:	add	x4, x4, #0x9de
  43ab64:	sub	x5, x29, #0x28
  43ab68:	adrp	x6, 449000 <_fini+0x8c30>
  43ab6c:	add	x6, x6, #0x9dc
  43ab70:	sub	x7, x29, #0x18
  43ab74:	mov	x9, sp
  43ab78:	adrp	x10, 449000 <_fini+0x8c30>
  43ab7c:	add	x10, x10, #0x9e5
  43ab80:	str	x10, [x9]
  43ab84:	mov	x9, sp
  43ab88:	sub	x10, x29, #0x20
  43ab8c:	str	x10, [x9, #8]
  43ab90:	mov	x9, sp
  43ab94:	adrp	x10, 44a000 <_fini+0x9c30>
  43ab98:	add	x10, x10, #0x9e7
  43ab9c:	str	x10, [x9, #16]
  43aba0:	mov	x9, sp
  43aba4:	sub	x10, x29, #0x30
  43aba8:	str	x10, [x9, #24]
  43abac:	mov	x9, sp
  43abb0:	str	x8, [x9, #32]
  43abb4:	bl	4079f8 <parse_env_file_sentinel@plt>
  43abb8:	stur	w0, [x29, #-52]
  43abbc:	ldur	w11, [x29, #-52]
  43abc0:	mov	w12, #0xfffffffe            	// #-2
  43abc4:	cmp	w11, w12
  43abc8:	b.ne	43abdc <user_load+0x124>  // b.any
  43abcc:	stur	wzr, [x29, #-4]
  43abd0:	mov	w8, #0x1                   	// #1
  43abd4:	stur	w8, [x29, #-56]
  43abd8:	b	43ada8 <user_load+0x2f0>
  43abdc:	ldur	w8, [x29, #-52]
  43abe0:	cmp	w8, #0x0
  43abe4:	cset	w8, ge  // ge = tcont
  43abe8:	tbnz	w8, #0, 43ac84 <user_load+0x1cc>
  43abec:	mov	w8, #0x3                   	// #3
  43abf0:	stur	w8, [x29, #-60]
  43abf4:	ldur	w8, [x29, #-52]
  43abf8:	stur	w8, [x29, #-64]
  43abfc:	stur	wzr, [x29, #-68]
  43ac00:	ldur	w0, [x29, #-68]
  43ac04:	bl	406c08 <log_get_max_level_realm@plt>
  43ac08:	ldur	w8, [x29, #-60]
  43ac0c:	and	w8, w8, #0x7
  43ac10:	cmp	w0, w8
  43ac14:	b.lt	43ac54 <user_load+0x19c>  // b.tstop
  43ac18:	ldur	w8, [x29, #-68]
  43ac1c:	ldur	w9, [x29, #-60]
  43ac20:	orr	w0, w9, w8, lsl #10
  43ac24:	ldur	w1, [x29, #-64]
  43ac28:	ldur	x10, [x29, #-16]
  43ac2c:	ldr	x6, [x10, #32]
  43ac30:	ldr	x2, [sp, #48]
  43ac34:	mov	w3, #0x148                 	// #328
  43ac38:	adrp	x4, 44a000 <_fini+0x9c30>
  43ac3c:	add	x4, x4, #0x9fe
  43ac40:	adrp	x5, 447000 <_fini+0x6c30>
  43ac44:	add	x5, x5, #0x3b4
  43ac48:	bl	406c18 <log_internal_realm@plt>
  43ac4c:	str	w0, [sp, #44]
  43ac50:	b	43ac68 <user_load+0x1b0>
  43ac54:	ldur	w0, [x29, #-64]
  43ac58:	bl	406c28 <abs@plt>
  43ac5c:	mov	w8, wzr
  43ac60:	subs	w8, w8, w0, uxtb
  43ac64:	str	w8, [sp, #44]
  43ac68:	ldr	w8, [sp, #44]
  43ac6c:	str	w8, [sp, #72]
  43ac70:	ldr	w8, [sp, #72]
  43ac74:	stur	w8, [x29, #-4]
  43ac78:	mov	w8, #0x1                   	// #1
  43ac7c:	stur	w8, [x29, #-56]
  43ac80:	b	43ada8 <user_load+0x2f0>
  43ac84:	ldur	x8, [x29, #-40]
  43ac88:	cbz	x8, 43ad54 <user_load+0x29c>
  43ac8c:	ldur	x0, [x29, #-40]
  43ac90:	bl	407c48 <parse_boolean@plt>
  43ac94:	stur	w0, [x29, #-52]
  43ac98:	ldur	w8, [x29, #-52]
  43ac9c:	cmp	w8, #0x0
  43aca0:	cset	w8, ge  // ge = tcont
  43aca4:	tbnz	w8, #0, 43ad2c <user_load+0x274>
  43aca8:	mov	w8, #0x7                   	// #7
  43acac:	str	w8, [sp, #68]
  43acb0:	ldur	w8, [x29, #-52]
  43acb4:	str	w8, [sp, #64]
  43acb8:	str	wzr, [sp, #60]
  43acbc:	ldr	w0, [sp, #60]
  43acc0:	bl	406c08 <log_get_max_level_realm@plt>
  43acc4:	ldr	w8, [sp, #68]
  43acc8:	and	w8, w8, #0x7
  43accc:	cmp	w0, w8
  43acd0:	b.lt	43ad0c <user_load+0x254>  // b.tstop
  43acd4:	ldr	w8, [sp, #60]
  43acd8:	ldr	w9, [sp, #68]
  43acdc:	orr	w0, w9, w8, lsl #10
  43ace0:	ldr	w1, [sp, #64]
  43ace4:	ldur	x6, [x29, #-40]
  43ace8:	ldr	x2, [sp, #48]
  43acec:	mov	w3, #0x14d                 	// #333
  43acf0:	adrp	x4, 44a000 <_fini+0x9c30>
  43acf4:	add	x4, x4, #0x9fe
  43acf8:	adrp	x5, 44a000 <_fini+0x9c30>
  43acfc:	add	x5, x5, #0xa08
  43ad00:	bl	406c18 <log_internal_realm@plt>
  43ad04:	str	w0, [sp, #40]
  43ad08:	b	43ad20 <user_load+0x268>
  43ad0c:	ldr	w0, [sp, #64]
  43ad10:	bl	406c28 <abs@plt>
  43ad14:	mov	w8, wzr
  43ad18:	subs	w8, w8, w0, uxtb
  43ad1c:	str	w8, [sp, #40]
  43ad20:	ldr	w8, [sp, #40]
  43ad24:	str	w8, [sp, #56]
  43ad28:	b	43ad54 <user_load+0x29c>
  43ad2c:	ldur	w8, [x29, #-52]
  43ad30:	cmp	w8, #0x0
  43ad34:	cset	w8, ne  // ne = any
  43ad38:	ldur	x9, [x29, #-16]
  43ad3c:	ldrb	w10, [x9, #120]
  43ad40:	and	w8, w8, #0x1
  43ad44:	lsl	w8, w8, #2
  43ad48:	and	w10, w10, #0xfffffffb
  43ad4c:	orr	w8, w10, w8
  43ad50:	strb	w8, [x9, #120]
  43ad54:	ldur	x8, [x29, #-24]
  43ad58:	cbz	x8, 43ad6c <user_load+0x2b4>
  43ad5c:	ldur	x0, [x29, #-24]
  43ad60:	ldur	x8, [x29, #-16]
  43ad64:	add	x1, x8, #0x58
  43ad68:	bl	407c58 <deserialize_usec@plt>
  43ad6c:	ldur	x8, [x29, #-32]
  43ad70:	cbz	x8, 43ad84 <user_load+0x2cc>
  43ad74:	ldur	x0, [x29, #-32]
  43ad78:	ldur	x8, [x29, #-16]
  43ad7c:	add	x1, x8, #0x60
  43ad80:	bl	407c58 <deserialize_usec@plt>
  43ad84:	ldur	x8, [x29, #-48]
  43ad88:	cbz	x8, 43ad9c <user_load+0x2e4>
  43ad8c:	ldur	x0, [x29, #-48]
  43ad90:	ldur	x8, [x29, #-16]
  43ad94:	add	x1, x8, #0x68
  43ad98:	bl	407c58 <deserialize_usec@plt>
  43ad9c:	stur	wzr, [x29, #-4]
  43ada0:	mov	w8, #0x1                   	// #1
  43ada4:	stur	w8, [x29, #-56]
  43ada8:	sub	x0, x29, #0x30
  43adac:	bl	43add8 <freep>
  43adb0:	sub	x0, x29, #0x28
  43adb4:	bl	43add8 <freep>
  43adb8:	sub	x0, x29, #0x20
  43adbc:	bl	43add8 <freep>
  43adc0:	sub	x0, x29, #0x18
  43adc4:	bl	43add8 <freep>
  43adc8:	ldur	w0, [x29, #-4]
  43adcc:	ldp	x29, x30, [sp, #144]
  43add0:	add	sp, sp, #0xa0
  43add4:	ret

000000000043add8 <freep>:
  43add8:	sub	sp, sp, #0x20
  43addc:	stp	x29, x30, [sp, #16]
  43ade0:	add	x29, sp, #0x10
  43ade4:	str	x0, [sp, #8]
  43ade8:	ldr	x8, [sp, #8]
  43adec:	ldr	x0, [x8]
  43adf0:	bl	406da8 <free@plt>
  43adf4:	ldp	x29, x30, [sp, #16]
  43adf8:	add	sp, sp, #0x20
  43adfc:	ret

000000000043ae00 <user_start>:
  43ae00:	sub	sp, sp, #0x40
  43ae04:	stp	x29, x30, [sp, #48]
  43ae08:	add	x29, sp, #0x30
  43ae0c:	adrp	x8, 44a000 <_fini+0x9c30>
  43ae10:	add	x8, x8, #0x8be
  43ae14:	add	x8, x8, #0x3
  43ae18:	stur	x0, [x29, #-16]
  43ae1c:	str	x8, [sp, #8]
  43ae20:	ldur	x8, [x29, #-16]
  43ae24:	cmp	x8, #0x0
  43ae28:	cset	w9, ne  // ne = any
  43ae2c:	mov	w10, #0x1                   	// #1
  43ae30:	eor	w9, w9, #0x1
  43ae34:	eor	w9, w9, w10
  43ae38:	eor	w9, w9, w10
  43ae3c:	and	w9, w9, #0x1
  43ae40:	mov	w0, w9
  43ae44:	sxtw	x8, w0
  43ae48:	cbz	x8, 43ae70 <user_start+0x70>
  43ae4c:	mov	w8, wzr
  43ae50:	mov	w0, w8
  43ae54:	adrp	x1, 443000 <_fini+0x2c30>
  43ae58:	add	x1, x1, #0x1dd
  43ae5c:	ldr	x2, [sp, #8]
  43ae60:	mov	w3, #0x16f                 	// #367
  43ae64:	adrp	x4, 44a000 <_fini+0x9c30>
  43ae68:	add	x4, x4, #0xa2f
  43ae6c:	bl	406c68 <log_assert_failed_realm@plt>
  43ae70:	ldur	x8, [x29, #-16]
  43ae74:	ldrb	w9, [x8, #120]
  43ae78:	mov	w10, #0x1                   	// #1
  43ae7c:	lsr	w9, w9, w10
  43ae80:	and	w9, w9, w10
  43ae84:	tbnz	w9, #0, 43ae8c <user_start+0x8c>
  43ae88:	b	43aeac <user_start+0xac>
  43ae8c:	ldur	x8, [x29, #-16]
  43ae90:	ldrb	w9, [x8, #120]
  43ae94:	mov	w10, #0x2                   	// #2
  43ae98:	lsr	w9, w9, w10
  43ae9c:	and	w9, w9, #0x1
  43aea0:	tbnz	w9, #0, 43aeac <user_start+0xac>
  43aea4:	stur	wzr, [x29, #-4]
  43aea8:	b	43afcc <user_start+0x1cc>
  43aeac:	ldur	x8, [x29, #-16]
  43aeb0:	ldrb	w9, [x8, #120]
  43aeb4:	and	w9, w9, #0xfffffffb
  43aeb8:	strb	w9, [x8, #120]
  43aebc:	ldur	x8, [x29, #-16]
  43aec0:	ldrb	w9, [x8, #120]
  43aec4:	mov	w10, #0x1                   	// #1
  43aec8:	lsr	w9, w9, w10
  43aecc:	and	w9, w9, w10
  43aed0:	tbnz	w9, #0, 43af54 <user_start+0x154>
  43aed4:	mov	w8, #0x7                   	// #7
  43aed8:	stur	w8, [x29, #-20]
  43aedc:	str	wzr, [sp, #24]
  43aee0:	str	wzr, [sp, #20]
  43aee4:	ldr	w0, [sp, #20]
  43aee8:	bl	406c08 <log_get_max_level_realm@plt>
  43aeec:	ldur	w8, [x29, #-20]
  43aef0:	and	w8, w8, #0x7
  43aef4:	cmp	w0, w8
  43aef8:	b.lt	43af38 <user_start+0x138>  // b.tstop
  43aefc:	ldr	w8, [sp, #20]
  43af00:	ldur	w9, [x29, #-20]
  43af04:	orr	w0, w9, w8, lsl #10
  43af08:	ldr	w1, [sp, #24]
  43af0c:	ldur	x10, [x29, #-16]
  43af10:	ldr	x6, [x10, #16]
  43af14:	ldr	x2, [sp, #8]
  43af18:	mov	w3, #0x17b                 	// #379
  43af1c:	adrp	x4, 44a000 <_fini+0x9c30>
  43af20:	add	x4, x4, #0xa46
  43af24:	adrp	x5, 44a000 <_fini+0x9c30>
  43af28:	add	x5, x5, #0xa51
  43af2c:	bl	406c18 <log_internal_realm@plt>
  43af30:	str	w0, [sp, #4]
  43af34:	b	43af4c <user_start+0x14c>
  43af38:	ldr	w0, [sp, #24]
  43af3c:	bl	406c28 <abs@plt>
  43af40:	mov	w8, wzr
  43af44:	subs	w8, w8, w0, uxtb
  43af48:	str	w8, [sp, #4]
  43af4c:	ldr	w8, [sp, #4]
  43af50:	str	w8, [sp, #16]
  43af54:	ldur	x0, [x29, #-16]
  43af58:	bl	43a3cc <user_save_internal>
  43af5c:	ldur	x8, [x29, #-16]
  43af60:	mov	x0, x8
  43af64:	bl	43afdc <user_start_service>
  43af68:	ldur	x8, [x29, #-16]
  43af6c:	ldrb	w9, [x8, #120]
  43af70:	mov	w10, #0x1                   	// #1
  43af74:	lsr	w9, w9, w10
  43af78:	and	w9, w9, w10
  43af7c:	tbnz	w9, #0, 43afc0 <user_start+0x1c0>
  43af80:	ldur	x8, [x29, #-16]
  43af84:	add	x0, x8, #0x58
  43af88:	bl	43b18c <dual_timestamp_is_set>
  43af8c:	tbnz	w0, #0, 43af9c <user_start+0x19c>
  43af90:	ldur	x8, [x29, #-16]
  43af94:	add	x0, x8, #0x58
  43af98:	bl	4079d8 <dual_timestamp_get@plt>
  43af9c:	ldur	x0, [x29, #-16]
  43afa0:	mov	w8, #0x1                   	// #1
  43afa4:	and	w1, w8, #0x1
  43afa8:	bl	43946c <user_send_signal>
  43afac:	ldur	x9, [x29, #-16]
  43afb0:	ldrb	w8, [x9, #120]
  43afb4:	and	w8, w8, #0xfffffffd
  43afb8:	orr	w8, w8, #0x2
  43afbc:	strb	w8, [x9, #120]
  43afc0:	ldur	x0, [x29, #-16]
  43afc4:	bl	43a320 <user_save>
  43afc8:	stur	wzr, [x29, #-4]
  43afcc:	ldur	w0, [x29, #-4]
  43afd0:	ldp	x29, x30, [sp, #48]
  43afd4:	add	sp, sp, #0x40
  43afd8:	ret

000000000043afdc <user_start_service>:
  43afdc:	sub	sp, sp, #0x70
  43afe0:	stp	x29, x30, [sp, #96]
  43afe4:	add	x29, sp, #0x60
  43afe8:	adrp	x8, 44a000 <_fini+0x9c30>
  43afec:	add	x8, x8, #0x8be
  43aff0:	add	x8, x8, #0x3
  43aff4:	stur	x0, [x29, #-8]
  43aff8:	stur	xzr, [x29, #-32]
  43affc:	stur	xzr, [x29, #-24]
  43b000:	stur	xzr, [x29, #-16]
  43b004:	str	x8, [sp, #32]
  43b008:	ldur	x8, [x29, #-8]
  43b00c:	cmp	x8, #0x0
  43b010:	cset	w9, ne  // ne = any
  43b014:	mov	w10, #0x1                   	// #1
  43b018:	eor	w9, w9, #0x1
  43b01c:	eor	w9, w9, w10
  43b020:	eor	w9, w9, w10
  43b024:	and	w9, w9, #0x1
  43b028:	mov	w0, w9
  43b02c:	sxtw	x8, w0
  43b030:	cbz	x8, 43b058 <user_start_service+0x7c>
  43b034:	mov	w8, wzr
  43b038:	mov	w0, w8
  43b03c:	adrp	x1, 443000 <_fini+0x2c30>
  43b040:	add	x1, x1, #0x1dd
  43b044:	ldr	x2, [sp, #32]
  43b048:	mov	w3, #0x160                 	// #352
  43b04c:	adrp	x4, 44b000 <_fini+0xac30>
  43b050:	add	x4, x4, #0xb2
  43b054:	bl	406c68 <log_assert_failed_realm@plt>
  43b058:	ldur	x8, [x29, #-8]
  43b05c:	ldr	x0, [x8, #72]
  43b060:	bl	43a2f0 <mfree>
  43b064:	ldur	x8, [x29, #-8]
  43b068:	str	x0, [x8, #72]
  43b06c:	ldur	x8, [x29, #-8]
  43b070:	ldr	x0, [x8]
  43b074:	ldur	x8, [x29, #-8]
  43b078:	ldr	x1, [x8, #56]
  43b07c:	ldur	x8, [x29, #-8]
  43b080:	add	x3, x8, #0x48
  43b084:	sub	x2, x29, #0x20
  43b088:	bl	420a6c <manager_start_unit>
  43b08c:	stur	w0, [x29, #-36]
  43b090:	ldur	w9, [x29, #-36]
  43b094:	cmp	w9, #0x0
  43b098:	cset	w9, ge  // ge = tcont
  43b09c:	tbnz	w9, #0, 43b178 <user_start_service+0x19c>
  43b0a0:	sub	x0, x29, #0x20
  43b0a4:	adrp	x1, 44b000 <_fini+0xac30>
  43b0a8:	add	x1, x1, #0xd2
  43b0ac:	bl	407828 <sd_bus_error_has_name@plt>
  43b0b0:	mov	w8, #0x4                   	// #4
  43b0b4:	mov	w9, #0x7                   	// #7
  43b0b8:	cmp	w0, #0x0
  43b0bc:	csel	w8, w9, w8, ne  // ne = any
  43b0c0:	stur	w8, [x29, #-40]
  43b0c4:	ldur	w8, [x29, #-36]
  43b0c8:	stur	w8, [x29, #-44]
  43b0cc:	str	wzr, [sp, #48]
  43b0d0:	ldr	w0, [sp, #48]
  43b0d4:	bl	406c08 <log_get_max_level_realm@plt>
  43b0d8:	ldur	w8, [x29, #-40]
  43b0dc:	and	w8, w8, #0x7
  43b0e0:	cmp	w0, w8
  43b0e4:	b.lt	43b15c <user_start_service+0x180>  // b.tstop
  43b0e8:	ldr	w8, [sp, #48]
  43b0ec:	ldur	w9, [x29, #-40]
  43b0f0:	orr	w0, w9, w8, lsl #10
  43b0f4:	ldur	w1, [x29, #-44]
  43b0f8:	ldur	x10, [x29, #-8]
  43b0fc:	ldr	x6, [x10, #56]
  43b100:	ldur	w8, [x29, #-36]
  43b104:	sub	x10, x29, #0x20
  43b108:	str	w0, [sp, #28]
  43b10c:	mov	x0, x10
  43b110:	str	w1, [sp, #24]
  43b114:	mov	w1, w8
  43b118:	str	x6, [sp, #16]
  43b11c:	bl	4071d8 <bus_error_message@plt>
  43b120:	ldr	w8, [sp, #28]
  43b124:	str	x0, [sp, #8]
  43b128:	mov	w0, w8
  43b12c:	ldr	w1, [sp, #24]
  43b130:	ldr	x2, [sp, #32]
  43b134:	mov	w3, #0x16b                 	// #363
  43b138:	adrp	x4, 44b000 <_fini+0xac30>
  43b13c:	add	x4, x4, #0xf6
  43b140:	adrp	x5, 44b000 <_fini+0xac30>
  43b144:	add	x5, x5, #0x109
  43b148:	ldr	x6, [sp, #16]
  43b14c:	ldr	x7, [sp, #8]
  43b150:	bl	406c18 <log_internal_realm@plt>
  43b154:	str	w0, [sp, #4]
  43b158:	b	43b170 <user_start_service+0x194>
  43b15c:	ldur	w0, [x29, #-44]
  43b160:	bl	406c28 <abs@plt>
  43b164:	mov	w8, wzr
  43b168:	subs	w8, w8, w0, uxtb
  43b16c:	str	w8, [sp, #4]
  43b170:	ldr	w8, [sp, #4]
  43b174:	str	w8, [sp, #44]
  43b178:	sub	x0, x29, #0x20
  43b17c:	bl	4071e8 <sd_bus_error_free@plt>
  43b180:	ldp	x29, x30, [sp, #96]
  43b184:	add	sp, sp, #0x70
  43b188:	ret

000000000043b18c <dual_timestamp_is_set>:
  43b18c:	sub	sp, sp, #0x20
  43b190:	stp	x29, x30, [sp, #16]
  43b194:	add	x29, sp, #0x10
  43b198:	str	x0, [sp, #8]
  43b19c:	ldr	x8, [sp, #8]
  43b1a0:	ldr	x0, [x8]
  43b1a4:	bl	43d69c <timestamp_is_set>
  43b1a8:	mov	w9, #0x1                   	// #1
  43b1ac:	str	w9, [sp, #4]
  43b1b0:	tbnz	w0, #0, 43b1c4 <dual_timestamp_is_set+0x38>
  43b1b4:	ldr	x8, [sp, #8]
  43b1b8:	ldr	x0, [x8, #8]
  43b1bc:	bl	43d69c <timestamp_is_set>
  43b1c0:	str	w0, [sp, #4]
  43b1c4:	ldr	w8, [sp, #4]
  43b1c8:	and	w0, w8, #0x1
  43b1cc:	ldp	x29, x30, [sp, #16]
  43b1d0:	add	sp, sp, #0x20
  43b1d4:	ret

000000000043b1d8 <user_stop>:
  43b1d8:	sub	sp, sp, #0x40
  43b1dc:	stp	x29, x30, [sp, #48]
  43b1e0:	add	x29, sp, #0x30
  43b1e4:	adrp	x8, 44a000 <_fini+0x9c30>
  43b1e8:	add	x8, x8, #0x8be
  43b1ec:	add	x2, x8, #0x3
  43b1f0:	stur	x0, [x29, #-16]
  43b1f4:	and	w9, w1, #0x1
  43b1f8:	sturb	w9, [x29, #-17]
  43b1fc:	str	wzr, [sp, #12]
  43b200:	str	x2, [sp]
  43b204:	ldur	x8, [x29, #-16]
  43b208:	cmp	x8, #0x0
  43b20c:	cset	w9, ne  // ne = any
  43b210:	mov	w10, #0x1                   	// #1
  43b214:	eor	w9, w9, #0x1
  43b218:	eor	w9, w9, w10
  43b21c:	eor	w9, w9, w10
  43b220:	and	w9, w9, #0x1
  43b224:	mov	w0, w9
  43b228:	sxtw	x8, w0
  43b22c:	cbz	x8, 43b254 <user_stop+0x7c>
  43b230:	mov	w8, wzr
  43b234:	mov	w0, w8
  43b238:	adrp	x1, 443000 <_fini+0x2c30>
  43b23c:	add	x1, x1, #0x1dd
  43b240:	ldr	x2, [sp]
  43b244:	mov	w3, #0x1a5                 	// #421
  43b248:	adrp	x4, 44a000 <_fini+0x9c30>
  43b24c:	add	x4, x4, #0xa74
  43b250:	bl	406c68 <log_assert_failed_realm@plt>
  43b254:	ldur	x8, [x29, #-16]
  43b258:	ldrb	w9, [x8, #120]
  43b25c:	mov	w10, #0x1                   	// #1
  43b260:	lsr	w9, w9, w10
  43b264:	and	w9, w9, w10
  43b268:	tbnz	w9, #0, 43b274 <user_stop+0x9c>
  43b26c:	stur	wzr, [x29, #-4]
  43b270:	b	43b31c <user_stop+0x144>
  43b274:	ldur	x8, [x29, #-16]
  43b278:	ldrb	w9, [x8, #120]
  43b27c:	mov	w10, #0x2                   	// #2
  43b280:	lsr	w9, w9, w10
  43b284:	and	w9, w9, #0x1
  43b288:	tbnz	w9, #0, 43b290 <user_stop+0xb8>
  43b28c:	b	43b2a0 <user_stop+0xc8>
  43b290:	ldur	x0, [x29, #-16]
  43b294:	bl	43a320 <user_save>
  43b298:	stur	wzr, [x29, #-4]
  43b29c:	b	43b31c <user_stop+0x144>
  43b2a0:	ldur	x8, [x29, #-16]
  43b2a4:	ldr	x8, [x8, #128]
  43b2a8:	str	x8, [sp, #16]
  43b2ac:	ldr	x8, [sp, #16]
  43b2b0:	cbz	x8, 43b2f0 <user_stop+0x118>
  43b2b4:	ldr	x0, [sp, #16]
  43b2b8:	ldurb	w8, [x29, #-17]
  43b2bc:	and	w1, w8, #0x1
  43b2c0:	bl	4359b4 <session_stop>
  43b2c4:	str	w0, [sp, #8]
  43b2c8:	ldr	w8, [sp, #8]
  43b2cc:	cmp	w8, #0x0
  43b2d0:	cset	w8, ge  // ge = tcont
  43b2d4:	tbnz	w8, #0, 43b2e0 <user_stop+0x108>
  43b2d8:	ldr	w8, [sp, #8]
  43b2dc:	str	w8, [sp, #12]
  43b2e0:	ldr	x8, [sp, #16]
  43b2e4:	ldr	x8, [x8, #256]
  43b2e8:	str	x8, [sp, #16]
  43b2ec:	b	43b2ac <user_stop+0xd4>
  43b2f0:	ldur	x0, [x29, #-16]
  43b2f4:	bl	43b32c <user_stop_service>
  43b2f8:	ldur	x8, [x29, #-16]
  43b2fc:	ldrb	w9, [x8, #120]
  43b300:	and	w9, w9, #0xfffffffb
  43b304:	orr	w9, w9, #0x4
  43b308:	strb	w9, [x8, #120]
  43b30c:	ldur	x0, [x29, #-16]
  43b310:	bl	43a320 <user_save>
  43b314:	ldr	w9, [sp, #12]
  43b318:	stur	w9, [x29, #-4]
  43b31c:	ldur	w0, [x29, #-4]
  43b320:	ldp	x29, x30, [sp, #48]
  43b324:	add	sp, sp, #0x40
  43b328:	ret

000000000043b32c <user_stop_service>:
  43b32c:	sub	sp, sp, #0x70
  43b330:	stp	x29, x30, [sp, #96]
  43b334:	add	x29, sp, #0x60
  43b338:	adrp	x8, 44a000 <_fini+0x9c30>
  43b33c:	add	x8, x8, #0x8be
  43b340:	add	x8, x8, #0x3
  43b344:	stur	x0, [x29, #-8]
  43b348:	stur	xzr, [x29, #-32]
  43b34c:	stur	xzr, [x29, #-24]
  43b350:	stur	xzr, [x29, #-16]
  43b354:	str	x8, [sp, #32]
  43b358:	ldur	x8, [x29, #-8]
  43b35c:	cmp	x8, #0x0
  43b360:	cset	w9, ne  // ne = any
  43b364:	mov	w10, #0x1                   	// #1
  43b368:	eor	w9, w9, #0x1
  43b36c:	eor	w9, w9, w10
  43b370:	eor	w9, w9, w10
  43b374:	and	w9, w9, #0x1
  43b378:	mov	w0, w9
  43b37c:	sxtw	x8, w0
  43b380:	cbz	x8, 43b3a8 <user_stop_service+0x7c>
  43b384:	mov	w8, wzr
  43b388:	mov	w0, w8
  43b38c:	adrp	x1, 443000 <_fini+0x2c30>
  43b390:	add	x1, x1, #0x1dd
  43b394:	ldr	x2, [sp, #32]
  43b398:	mov	w3, #0x195                 	// #405
  43b39c:	adrp	x4, 44b000 <_fini+0xac30>
  43b3a0:	add	x4, x4, #0x139
  43b3a4:	bl	406c68 <log_assert_failed_realm@plt>
  43b3a8:	ldur	x8, [x29, #-8]
  43b3ac:	ldr	x8, [x8, #56]
  43b3b0:	cmp	x8, #0x0
  43b3b4:	cset	w9, ne  // ne = any
  43b3b8:	mov	w10, #0x1                   	// #1
  43b3bc:	eor	w9, w9, #0x1
  43b3c0:	eor	w9, w9, w10
  43b3c4:	eor	w9, w9, w10
  43b3c8:	and	w9, w9, #0x1
  43b3cc:	mov	w0, w9
  43b3d0:	sxtw	x8, w0
  43b3d4:	cbz	x8, 43b3fc <user_stop_service+0xd0>
  43b3d8:	mov	w8, wzr
  43b3dc:	mov	w0, w8
  43b3e0:	adrp	x1, 44b000 <_fini+0xac30>
  43b3e4:	add	x1, x1, #0x158
  43b3e8:	ldr	x2, [sp, #32]
  43b3ec:	mov	w3, #0x196                 	// #406
  43b3f0:	adrp	x4, 44b000 <_fini+0xac30>
  43b3f4:	add	x4, x4, #0x139
  43b3f8:	bl	406c68 <log_assert_failed_realm@plt>
  43b3fc:	ldur	x8, [x29, #-8]
  43b400:	ldr	x0, [x8, #72]
  43b404:	bl	43a2f0 <mfree>
  43b408:	ldur	x8, [x29, #-8]
  43b40c:	str	x0, [x8, #72]
  43b410:	ldur	x8, [x29, #-8]
  43b414:	ldr	x0, [x8]
  43b418:	ldur	x8, [x29, #-8]
  43b41c:	ldr	x1, [x8, #56]
  43b420:	ldur	x8, [x29, #-8]
  43b424:	add	x3, x8, #0x48
  43b428:	sub	x2, x29, #0x20
  43b42c:	bl	420c40 <manager_stop_unit>
  43b430:	stur	w0, [x29, #-36]
  43b434:	ldur	w9, [x29, #-36]
  43b438:	cmp	w9, #0x0
  43b43c:	cset	w9, ge  // ge = tcont
  43b440:	tbnz	w9, #0, 43b500 <user_stop_service+0x1d4>
  43b444:	mov	w8, #0x4                   	// #4
  43b448:	stur	w8, [x29, #-40]
  43b44c:	ldur	w8, [x29, #-36]
  43b450:	stur	w8, [x29, #-44]
  43b454:	str	wzr, [sp, #48]
  43b458:	ldr	w0, [sp, #48]
  43b45c:	bl	406c08 <log_get_max_level_realm@plt>
  43b460:	ldur	w8, [x29, #-40]
  43b464:	and	w8, w8, #0x7
  43b468:	cmp	w0, w8
  43b46c:	b.lt	43b4e4 <user_stop_service+0x1b8>  // b.tstop
  43b470:	ldr	w8, [sp, #48]
  43b474:	ldur	w9, [x29, #-40]
  43b478:	orr	w0, w9, w8, lsl #10
  43b47c:	ldur	w1, [x29, #-44]
  43b480:	ldur	x10, [x29, #-8]
  43b484:	ldr	x6, [x10, #56]
  43b488:	ldur	w8, [x29, #-36]
  43b48c:	sub	x10, x29, #0x20
  43b490:	str	w0, [sp, #28]
  43b494:	mov	x0, x10
  43b498:	str	w1, [sp, #24]
  43b49c:	mov	w1, w8
  43b4a0:	str	x6, [sp, #16]
  43b4a4:	bl	4071d8 <bus_error_message@plt>
  43b4a8:	ldr	w8, [sp, #28]
  43b4ac:	str	x0, [sp, #8]
  43b4b0:	mov	w0, w8
  43b4b4:	ldr	w1, [sp, #24]
  43b4b8:	ldr	x2, [sp, #32]
  43b4bc:	mov	w3, #0x19f                 	// #415
  43b4c0:	adrp	x4, 44b000 <_fini+0xac30>
  43b4c4:	add	x4, x4, #0x163
  43b4c8:	adrp	x5, 44b000 <_fini+0xac30>
  43b4cc:	add	x5, x5, #0x175
  43b4d0:	ldr	x6, [sp, #16]
  43b4d4:	ldr	x7, [sp, #8]
  43b4d8:	bl	406c18 <log_internal_realm@plt>
  43b4dc:	str	w0, [sp, #4]
  43b4e0:	b	43b4f8 <user_stop_service+0x1cc>
  43b4e4:	ldur	w0, [x29, #-44]
  43b4e8:	bl	406c28 <abs@plt>
  43b4ec:	mov	w8, wzr
  43b4f0:	subs	w8, w8, w0, uxtb
  43b4f4:	str	w8, [sp, #4]
  43b4f8:	ldr	w8, [sp, #4]
  43b4fc:	str	w8, [sp, #44]
  43b500:	sub	x0, x29, #0x20
  43b504:	bl	4071e8 <sd_bus_error_free@plt>
  43b508:	ldp	x29, x30, [sp, #96]
  43b50c:	add	sp, sp, #0x70
  43b510:	ret

000000000043b514 <user_finalize>:
  43b514:	sub	sp, sp, #0x50
  43b518:	stp	x29, x30, [sp, #64]
  43b51c:	add	x29, sp, #0x40
  43b520:	adrp	x8, 44a000 <_fini+0x9c30>
  43b524:	add	x8, x8, #0x8be
  43b528:	add	x8, x8, #0x3
  43b52c:	stur	x0, [x29, #-8]
  43b530:	stur	wzr, [x29, #-20]
  43b534:	str	x8, [sp, #16]
  43b538:	ldur	x8, [x29, #-8]
  43b53c:	cmp	x8, #0x0
  43b540:	cset	w9, ne  // ne = any
  43b544:	mov	w10, #0x1                   	// #1
  43b548:	eor	w9, w9, #0x1
  43b54c:	eor	w9, w9, w10
  43b550:	eor	w9, w9, w10
  43b554:	and	w9, w9, #0x1
  43b558:	mov	w0, w9
  43b55c:	sxtw	x8, w0
  43b560:	cbz	x8, 43b588 <user_finalize+0x74>
  43b564:	mov	w8, wzr
  43b568:	mov	w0, w8
  43b56c:	adrp	x1, 443000 <_fini+0x2c30>
  43b570:	add	x1, x1, #0x1dd
  43b574:	ldr	x2, [sp, #16]
  43b578:	mov	w3, #0x1c9                 	// #457
  43b57c:	adrp	x4, 44a000 <_fini+0x9c30>
  43b580:	add	x4, x4, #0xa91
  43b584:	bl	406c68 <log_assert_failed_realm@plt>
  43b588:	ldur	x8, [x29, #-8]
  43b58c:	ldrb	w9, [x8, #120]
  43b590:	mov	w10, #0x1                   	// #1
  43b594:	lsr	w9, w9, w10
  43b598:	and	w9, w9, w10
  43b59c:	tbnz	w9, #0, 43b5a4 <user_finalize+0x90>
  43b5a0:	b	43b624 <user_finalize+0x110>
  43b5a4:	mov	w8, #0x7                   	// #7
  43b5a8:	stur	w8, [x29, #-28]
  43b5ac:	str	wzr, [sp, #32]
  43b5b0:	str	wzr, [sp, #28]
  43b5b4:	ldr	w0, [sp, #28]
  43b5b8:	bl	406c08 <log_get_max_level_realm@plt>
  43b5bc:	ldur	w8, [x29, #-28]
  43b5c0:	and	w8, w8, #0x7
  43b5c4:	cmp	w0, w8
  43b5c8:	b.lt	43b608 <user_finalize+0xf4>  // b.tstop
  43b5cc:	ldr	w8, [sp, #28]
  43b5d0:	ldur	w9, [x29, #-28]
  43b5d4:	orr	w0, w9, w8, lsl #10
  43b5d8:	ldr	w1, [sp, #32]
  43b5dc:	ldur	x10, [x29, #-8]
  43b5e0:	ldr	x6, [x10, #16]
  43b5e4:	ldr	x2, [sp, #16]
  43b5e8:	mov	w3, #0x1cf                 	// #463
  43b5ec:	adrp	x4, 44a000 <_fini+0x9c30>
  43b5f0:	add	x4, x4, #0xaab
  43b5f4:	adrp	x5, 44a000 <_fini+0x9c30>
  43b5f8:	add	x5, x5, #0xab9
  43b5fc:	bl	406c18 <log_internal_realm@plt>
  43b600:	str	w0, [sp, #12]
  43b604:	b	43b61c <user_finalize+0x108>
  43b608:	ldr	w0, [sp, #32]
  43b60c:	bl	406c28 <abs@plt>
  43b610:	mov	w8, wzr
  43b614:	subs	w8, w8, w0, uxtb
  43b618:	str	w8, [sp, #12]
  43b61c:	ldr	w8, [sp, #12]
  43b620:	str	w8, [sp, #24]
  43b624:	ldur	x8, [x29, #-8]
  43b628:	ldr	x8, [x8, #128]
  43b62c:	stur	x8, [x29, #-16]
  43b630:	ldur	x8, [x29, #-16]
  43b634:	cbz	x8, 43b66c <user_finalize+0x158>
  43b638:	ldur	x0, [x29, #-16]
  43b63c:	bl	436038 <session_finalize>
  43b640:	stur	w0, [x29, #-24]
  43b644:	ldur	w8, [x29, #-24]
  43b648:	cmp	w8, #0x0
  43b64c:	cset	w8, ge  // ge = tcont
  43b650:	tbnz	w8, #0, 43b65c <user_finalize+0x148>
  43b654:	ldur	w8, [x29, #-24]
  43b658:	stur	w8, [x29, #-20]
  43b65c:	ldur	x8, [x29, #-16]
  43b660:	ldr	x8, [x8, #256]
  43b664:	stur	x8, [x29, #-16]
  43b668:	b	43b630 <user_finalize+0x11c>
  43b66c:	ldur	x8, [x29, #-8]
  43b670:	ldr	x8, [x8]
  43b674:	ldrb	w9, [x8, #424]
  43b678:	tbnz	w9, #0, 43b680 <user_finalize+0x16c>
  43b67c:	b	43b6b8 <user_finalize+0x1a4>
  43b680:	ldur	x8, [x29, #-8]
  43b684:	ldr	w0, [x8, #8]
  43b688:	bl	43b71c <uid_is_system>
  43b68c:	tbnz	w0, #0, 43b6b8 <user_finalize+0x1a4>
  43b690:	ldur	x8, [x29, #-8]
  43b694:	ldr	w0, [x8, #8]
  43b698:	bl	407d68 <clean_ipc_by_uid@plt>
  43b69c:	stur	w0, [x29, #-24]
  43b6a0:	ldur	w9, [x29, #-24]
  43b6a4:	cmp	w9, #0x0
  43b6a8:	cset	w9, ge  // ge = tcont
  43b6ac:	tbnz	w9, #0, 43b6b8 <user_finalize+0x1a4>
  43b6b0:	ldur	w8, [x29, #-24]
  43b6b4:	stur	w8, [x29, #-20]
  43b6b8:	ldur	x8, [x29, #-8]
  43b6bc:	ldr	x0, [x8, #32]
  43b6c0:	bl	4076e8 <unlink@plt>
  43b6c4:	ldur	x8, [x29, #-8]
  43b6c8:	mov	x0, x8
  43b6cc:	bl	43b73c <user_add_to_gc_queue>
  43b6d0:	ldur	x8, [x29, #-8]
  43b6d4:	ldrb	w9, [x8, #120]
  43b6d8:	mov	w10, #0x1                   	// #1
  43b6dc:	lsr	w9, w9, w10
  43b6e0:	and	w9, w9, w10
  43b6e4:	tbnz	w9, #0, 43b6ec <user_finalize+0x1d8>
  43b6e8:	b	43b70c <user_finalize+0x1f8>
  43b6ec:	ldur	x0, [x29, #-8]
  43b6f0:	mov	w8, wzr
  43b6f4:	and	w1, w8, #0x1
  43b6f8:	bl	43946c <user_send_signal>
  43b6fc:	ldur	x9, [x29, #-8]
  43b700:	ldrb	w8, [x9, #120]
  43b704:	and	w8, w8, #0xfffffffd
  43b708:	strb	w8, [x9, #120]
  43b70c:	ldur	w0, [x29, #-20]
  43b710:	ldp	x29, x30, [sp, #64]
  43b714:	add	sp, sp, #0x50
  43b718:	ret

000000000043b71c <uid_is_system>:
  43b71c:	sub	sp, sp, #0x10
  43b720:	str	w0, [sp, #12]
  43b724:	ldr	w8, [sp, #12]
  43b728:	cmp	w8, #0x3e7
  43b72c:	cset	w8, ls  // ls = plast
  43b730:	and	w0, w8, #0x1
  43b734:	add	sp, sp, #0x10
  43b738:	ret

000000000043b73c <user_add_to_gc_queue>:
  43b73c:	sub	sp, sp, #0x30
  43b740:	stp	x29, x30, [sp, #32]
  43b744:	add	x29, sp, #0x20
  43b748:	adrp	x8, 44a000 <_fini+0x9c30>
  43b74c:	add	x8, x8, #0x8be
  43b750:	add	x8, x8, #0x3
  43b754:	stur	x0, [x29, #-8]
  43b758:	str	x8, [sp]
  43b75c:	ldur	x8, [x29, #-8]
  43b760:	cmp	x8, #0x0
  43b764:	cset	w9, ne  // ne = any
  43b768:	mov	w10, #0x1                   	// #1
  43b76c:	eor	w9, w9, #0x1
  43b770:	eor	w9, w9, w10
  43b774:	eor	w9, w9, w10
  43b778:	and	w9, w9, #0x1
  43b77c:	mov	w0, w9
  43b780:	sxtw	x8, w0
  43b784:	cbz	x8, 43b7ac <user_add_to_gc_queue+0x70>
  43b788:	mov	w8, wzr
  43b78c:	mov	w0, w8
  43b790:	adrp	x1, 443000 <_fini+0x2c30>
  43b794:	add	x1, x1, #0x1dd
  43b798:	ldr	x2, [sp]
  43b79c:	mov	w3, #0x267                 	// #615
  43b7a0:	adrp	x4, 44a000 <_fini+0x9c30>
  43b7a4:	add	x4, x4, #0xb4e
  43b7a8:	bl	406c68 <log_assert_failed_realm@plt>
  43b7ac:	ldur	x8, [x29, #-8]
  43b7b0:	ldrb	w9, [x8, #120]
  43b7b4:	and	w9, w9, #0x1
  43b7b8:	tbnz	w9, #0, 43b7c0 <user_add_to_gc_queue+0x84>
  43b7bc:	b	43b7c4 <user_add_to_gc_queue+0x88>
  43b7c0:	b	43b87c <user_add_to_gc_queue+0x140>
  43b7c4:	ldur	x8, [x29, #-8]
  43b7c8:	ldr	x8, [x8]
  43b7cc:	add	x8, x8, #0x60
  43b7d0:	str	x8, [sp, #16]
  43b7d4:	ldur	x8, [x29, #-8]
  43b7d8:	str	x8, [sp, #8]
  43b7dc:	ldr	x8, [sp, #8]
  43b7e0:	cmp	x8, #0x0
  43b7e4:	cset	w9, ne  // ne = any
  43b7e8:	mov	w10, #0x1                   	// #1
  43b7ec:	eor	w9, w9, #0x1
  43b7f0:	eor	w9, w9, w10
  43b7f4:	eor	w9, w9, w10
  43b7f8:	and	w9, w9, #0x1
  43b7fc:	mov	w0, w9
  43b800:	sxtw	x8, w0
  43b804:	cbz	x8, 43b82c <user_add_to_gc_queue+0xf0>
  43b808:	mov	w8, wzr
  43b80c:	mov	w0, w8
  43b810:	adrp	x1, 441000 <_fini+0xc30>
  43b814:	add	x1, x1, #0x6cc
  43b818:	ldr	x2, [sp]
  43b81c:	mov	w3, #0x26c                 	// #620
  43b820:	adrp	x4, 44a000 <_fini+0x9c30>
  43b824:	add	x4, x4, #0xb4e
  43b828:	bl	406c68 <log_assert_failed_realm@plt>
  43b82c:	ldr	x8, [sp, #16]
  43b830:	ldr	x8, [x8]
  43b834:	ldr	x9, [sp, #8]
  43b838:	str	x8, [x9, #136]
  43b83c:	cbz	x8, 43b850 <user_add_to_gc_queue+0x114>
  43b840:	ldr	x8, [sp, #8]
  43b844:	ldr	x9, [sp, #8]
  43b848:	ldr	x9, [x9, #136]
  43b84c:	str	x8, [x9, #144]
  43b850:	ldr	x8, [sp, #8]
  43b854:	mov	x9, xzr
  43b858:	str	x9, [x8, #144]
  43b85c:	ldr	x8, [sp, #8]
  43b860:	ldr	x9, [sp, #16]
  43b864:	str	x8, [x9]
  43b868:	ldur	x8, [x29, #-8]
  43b86c:	ldrb	w9, [x8, #120]
  43b870:	and	w9, w9, #0xfffffffe
  43b874:	orr	w9, w9, #0x1
  43b878:	strb	w9, [x8, #120]
  43b87c:	ldp	x29, x30, [sp, #32]
  43b880:	add	sp, sp, #0x30
  43b884:	ret

000000000043b888 <user_get_idle_hint>:
  43b888:	sub	sp, sp, #0x70
  43b88c:	stp	x29, x30, [sp, #96]
  43b890:	add	x29, sp, #0x60
  43b894:	mov	w8, #0x1                   	// #1
  43b898:	adrp	x9, 44a000 <_fini+0x9c30>
  43b89c:	add	x9, x9, #0x8be
  43b8a0:	add	x2, x9, #0x3
  43b8a4:	stur	x0, [x29, #-16]
  43b8a8:	stur	x1, [x29, #-24]
  43b8ac:	sturb	w8, [x29, #-33]
  43b8b0:	str	xzr, [sp, #32]
  43b8b4:	str	xzr, [sp, #40]
  43b8b8:	str	x2, [sp]
  43b8bc:	ldur	x8, [x29, #-16]
  43b8c0:	cmp	x8, #0x0
  43b8c4:	cset	w9, ne  // ne = any
  43b8c8:	mov	w10, #0x1                   	// #1
  43b8cc:	eor	w9, w9, #0x1
  43b8d0:	eor	w9, w9, w10
  43b8d4:	eor	w9, w9, w10
  43b8d8:	and	w9, w9, #0x1
  43b8dc:	mov	w0, w9
  43b8e0:	sxtw	x8, w0
  43b8e4:	cbz	x8, 43b90c <user_get_idle_hint+0x84>
  43b8e8:	mov	w8, wzr
  43b8ec:	mov	w0, w8
  43b8f0:	adrp	x1, 443000 <_fini+0x2c30>
  43b8f4:	add	x1, x1, #0x1dd
  43b8f8:	ldr	x2, [sp]
  43b8fc:	mov	w3, #0x1f3                 	// #499
  43b900:	adrp	x4, 44a000 <_fini+0x9c30>
  43b904:	add	x4, x4, #0xacd
  43b908:	bl	406c68 <log_assert_failed_realm@plt>
  43b90c:	ldur	x8, [x29, #-16]
  43b910:	ldr	x8, [x8, #128]
  43b914:	stur	x8, [x29, #-32]
  43b918:	ldur	x8, [x29, #-32]
  43b91c:	cbz	x8, 43b9c0 <user_get_idle_hint+0x138>
  43b920:	ldur	x0, [x29, #-32]
  43b924:	add	x1, sp, #0x10
  43b928:	bl	4366ac <session_get_idle_hint>
  43b92c:	str	w0, [sp, #12]
  43b930:	ldr	w8, [sp, #12]
  43b934:	cmp	w8, #0x0
  43b938:	cset	w8, ge  // ge = tcont
  43b93c:	tbnz	w8, #0, 43b94c <user_get_idle_hint+0xc4>
  43b940:	ldr	w8, [sp, #12]
  43b944:	stur	w8, [x29, #-4]
  43b948:	b	43b9e0 <user_get_idle_hint+0x158>
  43b94c:	ldr	w8, [sp, #12]
  43b950:	cbnz	w8, 43b98c <user_get_idle_hint+0x104>
  43b954:	ldurb	w8, [x29, #-33]
  43b958:	tbnz	w8, #0, 43b978 <user_get_idle_hint+0xf0>
  43b95c:	ldr	x8, [sp, #24]
  43b960:	ldr	x9, [sp, #40]
  43b964:	cmp	x8, x9
  43b968:	b.cs	43b974 <user_get_idle_hint+0xec>  // b.hs, b.nlast
  43b96c:	ldr	q0, [sp, #16]
  43b970:	str	q0, [sp, #32]
  43b974:	b	43b988 <user_get_idle_hint+0x100>
  43b978:	mov	w8, #0x0                   	// #0
  43b97c:	sturb	w8, [x29, #-33]
  43b980:	ldr	q0, [sp, #16]
  43b984:	str	q0, [sp, #32]
  43b988:	b	43b9b0 <user_get_idle_hint+0x128>
  43b98c:	ldurb	w8, [x29, #-33]
  43b990:	tbnz	w8, #0, 43b998 <user_get_idle_hint+0x110>
  43b994:	b	43b9b0 <user_get_idle_hint+0x128>
  43b998:	ldr	x8, [sp, #24]
  43b99c:	ldr	x9, [sp, #40]
  43b9a0:	cmp	x8, x9
  43b9a4:	b.ls	43b9b0 <user_get_idle_hint+0x128>  // b.plast
  43b9a8:	ldr	q0, [sp, #16]
  43b9ac:	str	q0, [sp, #32]
  43b9b0:	ldur	x8, [x29, #-32]
  43b9b4:	ldr	x8, [x8, #256]
  43b9b8:	stur	x8, [x29, #-32]
  43b9bc:	b	43b918 <user_get_idle_hint+0x90>
  43b9c0:	ldur	x8, [x29, #-24]
  43b9c4:	cbz	x8, 43b9d4 <user_get_idle_hint+0x14c>
  43b9c8:	ldur	x8, [x29, #-24]
  43b9cc:	ldr	q0, [sp, #32]
  43b9d0:	str	q0, [x8]
  43b9d4:	ldurb	w8, [x29, #-33]
  43b9d8:	and	w8, w8, #0x1
  43b9dc:	stur	w8, [x29, #-4]
  43b9e0:	ldur	w0, [x29, #-4]
  43b9e4:	ldp	x29, x30, [sp, #96]
  43b9e8:	add	sp, sp, #0x70
  43b9ec:	ret

000000000043b9f0 <user_check_linger_file>:
  43b9f0:	stp	x29, x30, [sp, #-16]!
  43b9f4:	mov	x29, sp
  43b9f8:	sub	sp, sp, #0x80
  43b9fc:	mov	x8, xzr
  43ba00:	adrp	x9, 44a000 <_fini+0x9c30>
  43ba04:	add	x9, x9, #0x8be
  43ba08:	add	x9, x9, #0x3
  43ba0c:	stur	x0, [x29, #-16]
  43ba10:	stur	x8, [x29, #-24]
  43ba14:	stur	x8, [x29, #-32]
  43ba18:	ldur	x8, [x29, #-16]
  43ba1c:	ldr	x0, [x8, #16]
  43ba20:	stur	x9, [x29, #-120]
  43ba24:	bl	4076c8 <cescape@plt>
  43ba28:	stur	x0, [x29, #-24]
  43ba2c:	ldur	x8, [x29, #-24]
  43ba30:	cbnz	x8, 43ba48 <user_check_linger_file+0x58>
  43ba34:	mov	w8, #0xfffffff4            	// #-12
  43ba38:	stur	w8, [x29, #-4]
  43ba3c:	mov	w8, #0x1                   	// #1
  43ba40:	stur	w8, [x29, #-36]
  43ba44:	b	43bcd0 <user_check_linger_file+0x2e0>
  43ba48:	sub	x8, x29, #0x38
  43ba4c:	adrp	x9, 445000 <_fini+0x4c30>
  43ba50:	add	x9, x9, #0xa54
  43ba54:	stur	x9, [x29, #-56]
  43ba58:	ldur	x9, [x29, #-24]
  43ba5c:	str	x9, [x8, #8]
  43ba60:	stur	xzr, [x29, #-80]
  43ba64:	stur	xzr, [x29, #-88]
  43ba68:	ldur	x8, [x29, #-88]
  43ba6c:	mov	w9, #0x0                   	// #0
  43ba70:	cmp	x8, #0x2
  43ba74:	stur	w9, [x29, #-124]
  43ba78:	b.cs	43baa0 <user_check_linger_file+0xb0>  // b.hs, b.nlast
  43ba7c:	ldur	x8, [x29, #-88]
  43ba80:	mov	x9, #0x8                   	// #8
  43ba84:	mul	x8, x9, x8
  43ba88:	sub	x9, x29, #0x38
  43ba8c:	add	x8, x9, x8
  43ba90:	ldr	x8, [x8]
  43ba94:	cmp	x8, #0x0
  43ba98:	cset	w10, ne  // ne = any
  43ba9c:	stur	w10, [x29, #-124]
  43baa0:	ldur	w8, [x29, #-124]
  43baa4:	tbnz	w8, #0, 43baac <user_check_linger_file+0xbc>
  43baa8:	b	43bae4 <user_check_linger_file+0xf4>
  43baac:	ldur	x8, [x29, #-88]
  43bab0:	mov	x9, #0x8                   	// #8
  43bab4:	mul	x8, x9, x8
  43bab8:	sub	x9, x29, #0x38
  43babc:	add	x8, x9, x8
  43bac0:	ldr	x0, [x8]
  43bac4:	bl	4070a8 <strlen@plt>
  43bac8:	ldur	x8, [x29, #-80]
  43bacc:	add	x8, x8, x0
  43bad0:	stur	x8, [x29, #-80]
  43bad4:	ldur	x8, [x29, #-88]
  43bad8:	add	x8, x8, #0x1
  43badc:	stur	x8, [x29, #-88]
  43bae0:	b	43ba68 <user_check_linger_file+0x78>
  43bae4:	ldur	x8, [x29, #-80]
  43bae8:	add	x8, x8, #0x1
  43baec:	stur	x8, [x29, #-96]
  43baf0:	ldur	x1, [x29, #-96]
  43baf4:	mov	x0, #0x1                   	// #1
  43baf8:	bl	43bce8 <size_multiply_overflow>
  43bafc:	mov	w8, #0x1                   	// #1
  43bb00:	eor	w9, w0, #0x1
  43bb04:	eor	w9, w9, w8
  43bb08:	eor	w9, w9, w8
  43bb0c:	eor	w8, w9, w8
  43bb10:	and	w8, w8, #0x1
  43bb14:	mov	w1, w8
  43bb18:	sxtw	x10, w1
  43bb1c:	cbz	x10, 43bb44 <user_check_linger_file+0x154>
  43bb20:	mov	w8, wzr
  43bb24:	mov	w0, w8
  43bb28:	adrp	x1, 441000 <_fini+0xc30>
  43bb2c:	add	x1, x1, #0xe80
  43bb30:	ldur	x2, [x29, #-120]
  43bb34:	mov	w3, #0x21a                 	// #538
  43bb38:	adrp	x4, 44a000 <_fini+0x9c30>
  43bb3c:	add	x4, x4, #0xafe
  43bb40:	bl	406c68 <log_assert_failed_realm@plt>
  43bb44:	ldur	x8, [x29, #-96]
  43bb48:	mov	x9, #0x1                   	// #1
  43bb4c:	mul	x8, x9, x8
  43bb50:	cmp	x8, #0x400, lsl #12
  43bb54:	cset	w10, ls  // ls = plast
  43bb58:	mov	w11, #0x1                   	// #1
  43bb5c:	eor	w10, w10, #0x1
  43bb60:	eor	w10, w10, w11
  43bb64:	eor	w10, w10, w11
  43bb68:	and	w10, w10, #0x1
  43bb6c:	mov	w0, w10
  43bb70:	sxtw	x8, w0
  43bb74:	cbz	x8, 43bb9c <user_check_linger_file+0x1ac>
  43bb78:	mov	w8, wzr
  43bb7c:	mov	w0, w8
  43bb80:	adrp	x1, 441000 <_fini+0xc30>
  43bb84:	add	x1, x1, #0xeab
  43bb88:	ldur	x2, [x29, #-120]
  43bb8c:	mov	w3, #0x21a                 	// #538
  43bb90:	adrp	x4, 44a000 <_fini+0x9c30>
  43bb94:	add	x4, x4, #0xafe
  43bb98:	bl	406c68 <log_assert_failed_realm@plt>
  43bb9c:	ldur	x8, [x29, #-96]
  43bba0:	mov	x9, #0x1                   	// #1
  43bba4:	mul	x8, x9, x8
  43bba8:	mul	x8, x8, x9
  43bbac:	add	x8, x8, #0xf
  43bbb0:	and	x8, x8, #0xfffffffffffffff0
  43bbb4:	mov	x9, sp
  43bbb8:	subs	x8, x9, x8
  43bbbc:	mov	sp, x8
  43bbc0:	stur	x8, [x29, #-104]
  43bbc4:	ldur	x8, [x29, #-104]
  43bbc8:	stur	x8, [x29, #-64]
  43bbcc:	stur	x8, [x29, #-72]
  43bbd0:	stur	xzr, [x29, #-88]
  43bbd4:	ldur	x8, [x29, #-88]
  43bbd8:	mov	w9, #0x0                   	// #0
  43bbdc:	cmp	x8, #0x2
  43bbe0:	stur	w9, [x29, #-128]
  43bbe4:	b.cs	43bc0c <user_check_linger_file+0x21c>  // b.hs, b.nlast
  43bbe8:	ldur	x8, [x29, #-88]
  43bbec:	mov	x9, #0x8                   	// #8
  43bbf0:	mul	x8, x9, x8
  43bbf4:	sub	x9, x29, #0x38
  43bbf8:	add	x8, x9, x8
  43bbfc:	ldr	x8, [x8]
  43bc00:	cmp	x8, #0x0
  43bc04:	cset	w10, ne  // ne = any
  43bc08:	stur	w10, [x29, #-128]
  43bc0c:	ldur	w8, [x29, #-128]
  43bc10:	tbnz	w8, #0, 43bc18 <user_check_linger_file+0x228>
  43bc14:	b	43bc4c <user_check_linger_file+0x25c>
  43bc18:	ldur	x0, [x29, #-72]
  43bc1c:	ldur	x8, [x29, #-88]
  43bc20:	mov	x9, #0x8                   	// #8
  43bc24:	mul	x8, x9, x8
  43bc28:	sub	x9, x29, #0x38
  43bc2c:	add	x8, x9, x8
  43bc30:	ldr	x1, [x8]
  43bc34:	bl	407258 <stpcpy@plt>
  43bc38:	stur	x0, [x29, #-72]
  43bc3c:	ldur	x8, [x29, #-88]
  43bc40:	add	x8, x8, #0x1
  43bc44:	stur	x8, [x29, #-88]
  43bc48:	b	43bbd4 <user_check_linger_file+0x1e4>
  43bc4c:	ldur	x8, [x29, #-72]
  43bc50:	mov	w9, #0x0                   	// #0
  43bc54:	strb	w9, [x8]
  43bc58:	ldur	x8, [x29, #-64]
  43bc5c:	stur	x8, [x29, #-112]
  43bc60:	ldur	x8, [x29, #-112]
  43bc64:	stur	x8, [x29, #-32]
  43bc68:	ldur	x0, [x29, #-32]
  43bc6c:	mov	w9, wzr
  43bc70:	mov	w1, w9
  43bc74:	bl	406de8 <access@plt>
  43bc78:	cmp	w0, #0x0
  43bc7c:	cset	w9, ge  // ge = tcont
  43bc80:	tbnz	w9, #0, 43bcc4 <user_check_linger_file+0x2d4>
  43bc84:	bl	406e08 <__errno_location@plt>
  43bc88:	ldr	w8, [x0]
  43bc8c:	cmp	w8, #0x2
  43bc90:	b.eq	43bcb4 <user_check_linger_file+0x2c4>  // b.none
  43bc94:	bl	406e08 <__errno_location@plt>
  43bc98:	ldr	w8, [x0]
  43bc9c:	mov	w9, wzr
  43bca0:	subs	w8, w9, w8
  43bca4:	stur	w8, [x29, #-4]
  43bca8:	mov	w8, #0x1                   	// #1
  43bcac:	stur	w8, [x29, #-36]
  43bcb0:	b	43bcd0 <user_check_linger_file+0x2e0>
  43bcb4:	stur	wzr, [x29, #-4]
  43bcb8:	mov	w8, #0x1                   	// #1
  43bcbc:	stur	w8, [x29, #-36]
  43bcc0:	b	43bcd0 <user_check_linger_file+0x2e0>
  43bcc4:	mov	w8, #0x1                   	// #1
  43bcc8:	stur	w8, [x29, #-4]
  43bccc:	stur	w8, [x29, #-36]
  43bcd0:	sub	x0, x29, #0x18
  43bcd4:	bl	43add8 <freep>
  43bcd8:	ldur	w0, [x29, #-4]
  43bcdc:	mov	sp, x29
  43bce0:	ldp	x29, x30, [sp], #16
  43bce4:	ret

000000000043bce8 <size_multiply_overflow>:
  43bce8:	sub	sp, sp, #0x20
  43bcec:	str	x0, [sp, #24]
  43bcf0:	str	x1, [sp, #16]
  43bcf4:	ldr	x8, [sp, #16]
  43bcf8:	mov	w9, #0x0                   	// #0
  43bcfc:	str	w9, [sp, #12]
  43bd00:	cbz	x8, 43bd20 <size_multiply_overflow+0x38>
  43bd04:	ldr	x8, [sp, #24]
  43bd08:	ldr	x9, [sp, #16]
  43bd0c:	mov	x10, #0xffffffffffffffff    	// #-1
  43bd10:	udiv	x9, x10, x9
  43bd14:	cmp	x8, x9
  43bd18:	cset	w11, hi  // hi = pmore
  43bd1c:	str	w11, [sp, #12]
  43bd20:	ldr	w8, [sp, #12]
  43bd24:	mov	w9, #0x1                   	// #1
  43bd28:	eor	w8, w8, #0x1
  43bd2c:	eor	w8, w8, w9
  43bd30:	and	w8, w8, #0x1
  43bd34:	mov	w0, w8
  43bd38:	sxtw	x10, w0
  43bd3c:	cmp	x10, #0x0
  43bd40:	cset	w8, ne  // ne = any
  43bd44:	and	w0, w8, #0x1
  43bd48:	add	sp, sp, #0x20
  43bd4c:	ret

000000000043bd50 <user_may_gc>:
  43bd50:	sub	sp, sp, #0x90
  43bd54:	stp	x29, x30, [sp, #128]
  43bd58:	add	x29, sp, #0x80
  43bd5c:	mov	w8, #0x1                   	// #1
  43bd60:	adrp	x9, 44a000 <_fini+0x9c30>
  43bd64:	add	x9, x9, #0x8be
  43bd68:	add	x9, x9, #0x3
  43bd6c:	stur	x0, [x29, #-16]
  43bd70:	and	w8, w1, w8
  43bd74:	sturb	w8, [x29, #-17]
  43bd78:	str	x9, [sp, #48]
  43bd7c:	ldur	x8, [x29, #-16]
  43bd80:	cmp	x8, #0x0
  43bd84:	cset	w9, ne  // ne = any
  43bd88:	mov	w10, #0x1                   	// #1
  43bd8c:	eor	w9, w9, #0x1
  43bd90:	eor	w9, w9, w10
  43bd94:	eor	w9, w9, w10
  43bd98:	and	w9, w9, #0x1
  43bd9c:	mov	w0, w9
  43bda0:	sxtw	x8, w0
  43bda4:	cbz	x8, 43bdcc <user_may_gc+0x7c>
  43bda8:	mov	w8, wzr
  43bdac:	mov	w0, w8
  43bdb0:	adrp	x1, 443000 <_fini+0x2c30>
  43bdb4:	add	x1, x1, #0x1dd
  43bdb8:	ldr	x2, [sp, #48]
  43bdbc:	mov	w3, #0x23d                 	// #573
  43bdc0:	adrp	x4, 44a000 <_fini+0x9c30>
  43bdc4:	add	x4, x4, #0xb21
  43bdc8:	bl	406c68 <log_assert_failed_realm@plt>
  43bdcc:	ldurb	w8, [x29, #-17]
  43bdd0:	tbnz	w8, #0, 43bdd8 <user_may_gc+0x88>
  43bdd4:	b	43be00 <user_may_gc+0xb0>
  43bdd8:	ldur	x8, [x29, #-16]
  43bddc:	ldrb	w9, [x8, #120]
  43bde0:	mov	w10, #0x1                   	// #1
  43bde4:	lsr	w9, w9, w10
  43bde8:	and	w9, w9, w10
  43bdec:	tbnz	w9, #0, 43be00 <user_may_gc+0xb0>
  43bdf0:	mov	w8, #0x1                   	// #1
  43bdf4:	and	w8, w8, #0x1
  43bdf8:	sturb	w8, [x29, #-1]
  43bdfc:	b	43c030 <user_may_gc+0x2e0>
  43be00:	ldur	x8, [x29, #-16]
  43be04:	ldr	x8, [x8, #128]
  43be08:	cbz	x8, 43be1c <user_may_gc+0xcc>
  43be0c:	mov	w8, wzr
  43be10:	and	w8, w8, #0x1
  43be14:	sturb	w8, [x29, #-1]
  43be18:	b	43c030 <user_may_gc+0x2e0>
  43be1c:	ldur	x8, [x29, #-16]
  43be20:	ldr	x8, [x8, #104]
  43be24:	mov	x9, #0xffffffffffffffff    	// #-1
  43be28:	cmp	x8, x9
  43be2c:	b.eq	43beb4 <user_may_gc+0x164>  // b.none
  43be30:	ldur	x8, [x29, #-16]
  43be34:	ldr	x8, [x8]
  43be38:	ldr	x8, [x8, #240]
  43be3c:	mov	x9, #0xffffffffffffffff    	// #-1
  43be40:	cmp	x8, x9
  43be44:	b.ne	43be58 <user_may_gc+0x108>  // b.any
  43be48:	mov	w8, wzr
  43be4c:	and	w8, w8, #0x1
  43be50:	sturb	w8, [x29, #-1]
  43be54:	b	43c030 <user_may_gc+0x2e0>
  43be58:	ldur	x8, [x29, #-16]
  43be5c:	ldr	x8, [x8]
  43be60:	ldr	x8, [x8, #240]
  43be64:	cmp	x8, #0x0
  43be68:	cset	w9, ls  // ls = plast
  43be6c:	tbnz	w9, #0, 43beb4 <user_may_gc+0x164>
  43be70:	mov	w0, #0x1                   	// #1
  43be74:	bl	406ca8 <now@plt>
  43be78:	ldur	x8, [x29, #-16]
  43be7c:	ldr	x8, [x8, #104]
  43be80:	ldur	x9, [x29, #-16]
  43be84:	ldr	x9, [x9]
  43be88:	ldr	x1, [x9, #240]
  43be8c:	str	x0, [sp, #40]
  43be90:	mov	x0, x8
  43be94:	bl	43c044 <usec_add>
  43be98:	ldr	x8, [sp, #40]
  43be9c:	cmp	x8, x0
  43bea0:	b.cs	43beb4 <user_may_gc+0x164>  // b.hs, b.nlast
  43bea4:	mov	w8, wzr
  43bea8:	and	w8, w8, #0x1
  43beac:	sturb	w8, [x29, #-1]
  43beb0:	b	43c030 <user_may_gc+0x2e0>
  43beb4:	ldur	x0, [x29, #-16]
  43beb8:	bl	43b9f0 <user_check_linger_file>
  43bebc:	cmp	w0, #0x0
  43bec0:	cset	w8, le
  43bec4:	tbnz	w8, #0, 43bee8 <user_may_gc+0x198>
  43bec8:	ldur	x0, [x29, #-16]
  43becc:	bl	43c0a0 <user_unit_active>
  43bed0:	tbnz	w0, #0, 43bed8 <user_may_gc+0x188>
  43bed4:	b	43bee8 <user_may_gc+0x198>
  43bed8:	mov	w8, wzr
  43bedc:	and	w8, w8, #0x1
  43bee0:	sturb	w8, [x29, #-1]
  43bee4:	b	43c030 <user_may_gc+0x2e0>
  43bee8:	ldur	x8, [x29, #-16]
  43beec:	ldr	x8, [x8, #72]
  43bef0:	cbz	x8, 43c024 <user_may_gc+0x2d4>
  43bef4:	sub	x2, x29, #0x30
  43bef8:	stur	xzr, [x29, #-48]
  43befc:	stur	xzr, [x29, #-40]
  43bf00:	stur	xzr, [x29, #-32]
  43bf04:	ldur	x8, [x29, #-16]
  43bf08:	ldr	x0, [x8]
  43bf0c:	ldur	x8, [x29, #-16]
  43bf10:	ldr	x1, [x8, #72]
  43bf14:	bl	421434 <manager_job_is_active>
  43bf18:	stur	w0, [x29, #-24]
  43bf1c:	ldur	w9, [x29, #-24]
  43bf20:	cmp	w9, #0x0
  43bf24:	cset	w9, ge  // ge = tcont
  43bf28:	tbnz	w9, #0, 43bfe8 <user_may_gc+0x298>
  43bf2c:	mov	w8, #0x7                   	// #7
  43bf30:	stur	w8, [x29, #-52]
  43bf34:	ldur	w8, [x29, #-24]
  43bf38:	stur	w8, [x29, #-56]
  43bf3c:	stur	wzr, [x29, #-60]
  43bf40:	ldur	w0, [x29, #-60]
  43bf44:	bl	406c08 <log_get_max_level_realm@plt>
  43bf48:	ldur	w8, [x29, #-52]
  43bf4c:	and	w8, w8, #0x7
  43bf50:	cmp	w0, w8
  43bf54:	b.lt	43bfcc <user_may_gc+0x27c>  // b.tstop
  43bf58:	ldur	w8, [x29, #-60]
  43bf5c:	ldur	w9, [x29, #-52]
  43bf60:	orr	w0, w9, w8, lsl #10
  43bf64:	ldur	w1, [x29, #-56]
  43bf68:	ldur	x10, [x29, #-16]
  43bf6c:	ldr	x6, [x10, #72]
  43bf70:	ldur	w8, [x29, #-24]
  43bf74:	sub	x10, x29, #0x30
  43bf78:	str	w0, [sp, #36]
  43bf7c:	mov	x0, x10
  43bf80:	str	w1, [sp, #32]
  43bf84:	mov	w1, w8
  43bf88:	str	x6, [sp, #24]
  43bf8c:	bl	4071d8 <bus_error_message@plt>
  43bf90:	ldr	w8, [sp, #36]
  43bf94:	str	x0, [sp, #16]
  43bf98:	mov	w0, w8
  43bf9c:	ldr	w1, [sp, #32]
  43bfa0:	ldr	x2, [sp, #48]
  43bfa4:	mov	w3, #0x25b                 	// #603
  43bfa8:	adrp	x4, 44a000 <_fini+0x9c30>
  43bfac:	add	x4, x4, #0xb42
  43bfb0:	adrp	x5, 449000 <_fini+0x8c30>
  43bfb4:	add	x5, x5, #0xe52
  43bfb8:	ldr	x6, [sp, #24]
  43bfbc:	ldr	x7, [sp, #16]
  43bfc0:	bl	406c18 <log_internal_realm@plt>
  43bfc4:	str	w0, [sp, #12]
  43bfc8:	b	43bfe0 <user_may_gc+0x290>
  43bfcc:	ldur	w0, [x29, #-56]
  43bfd0:	bl	406c28 <abs@plt>
  43bfd4:	mov	w8, wzr
  43bfd8:	subs	w8, w8, w0, uxtb
  43bfdc:	str	w8, [sp, #12]
  43bfe0:	ldr	w8, [sp, #12]
  43bfe4:	str	w8, [sp, #64]
  43bfe8:	ldur	w8, [x29, #-24]
  43bfec:	cbz	w8, 43c008 <user_may_gc+0x2b8>
  43bff0:	mov	w8, wzr
  43bff4:	and	w8, w8, #0x1
  43bff8:	sturb	w8, [x29, #-1]
  43bffc:	mov	w8, #0x1                   	// #1
  43c000:	str	w8, [sp, #60]
  43c004:	b	43c00c <user_may_gc+0x2bc>
  43c008:	str	wzr, [sp, #60]
  43c00c:	sub	x0, x29, #0x30
  43c010:	bl	4071e8 <sd_bus_error_free@plt>
  43c014:	ldr	w8, [sp, #60]
  43c018:	cbz	w8, 43c024 <user_may_gc+0x2d4>
  43c01c:	b	43c020 <user_may_gc+0x2d0>
  43c020:	b	43c030 <user_may_gc+0x2e0>
  43c024:	mov	w8, #0x1                   	// #1
  43c028:	and	w8, w8, #0x1
  43c02c:	sturb	w8, [x29, #-1]
  43c030:	ldurb	w8, [x29, #-1]
  43c034:	and	w0, w8, #0x1
  43c038:	ldp	x29, x30, [sp, #128]
  43c03c:	add	sp, sp, #0x90
  43c040:	ret

000000000043c044 <usec_add>:
  43c044:	sub	sp, sp, #0x20
  43c048:	str	x0, [sp, #16]
  43c04c:	str	x1, [sp, #8]
  43c050:	ldr	x8, [sp, #16]
  43c054:	ldr	x9, [sp, #8]
  43c058:	add	x8, x8, x9
  43c05c:	str	x8, [sp]
  43c060:	ldr	x8, [sp]
  43c064:	ldr	x9, [sp, #16]
  43c068:	cmp	x8, x9
  43c06c:	b.cc	43c080 <usec_add+0x3c>  // b.lo, b.ul, b.last
  43c070:	ldr	x8, [sp]
  43c074:	ldr	x9, [sp, #8]
  43c078:	cmp	x8, x9
  43c07c:	b.cs	43c08c <usec_add+0x48>  // b.hs, b.nlast
  43c080:	mov	x8, #0xffffffffffffffff    	// #-1
  43c084:	str	x8, [sp, #24]
  43c088:	b	43c094 <usec_add+0x50>
  43c08c:	ldr	x8, [sp]
  43c090:	str	x8, [sp, #24]
  43c094:	ldr	x0, [sp, #24]
  43c098:	add	sp, sp, #0x20
  43c09c:	ret

000000000043c0a0 <user_unit_active>:
  43c0a0:	sub	sp, sp, #0xc0
  43c0a4:	stp	x29, x30, [sp, #176]
  43c0a8:	add	x29, sp, #0xb0
  43c0ac:	adrp	x8, 44a000 <_fini+0x9c30>
  43c0b0:	add	x8, x8, #0x8be
  43c0b4:	add	x8, x8, #0x3
  43c0b8:	adrp	x9, 44b000 <_fini+0xac30>
  43c0bc:	add	x9, x9, #0x1a4
  43c0c0:	stur	x0, [x29, #-16]
  43c0c4:	str	x8, [sp, #40]
  43c0c8:	str	x9, [sp, #32]
  43c0cc:	ldur	x8, [x29, #-16]
  43c0d0:	ldr	x8, [x8, #56]
  43c0d4:	cmp	x8, #0x0
  43c0d8:	cset	w9, ne  // ne = any
  43c0dc:	mov	w10, #0x1                   	// #1
  43c0e0:	eor	w9, w9, #0x1
  43c0e4:	eor	w9, w9, w10
  43c0e8:	eor	w9, w9, w10
  43c0ec:	and	w9, w9, #0x1
  43c0f0:	mov	w0, w9
  43c0f4:	sxtw	x8, w0
  43c0f8:	cbz	x8, 43c11c <user_unit_active+0x7c>
  43c0fc:	mov	w8, wzr
  43c100:	mov	w0, w8
  43c104:	adrp	x1, 44b000 <_fini+0xac30>
  43c108:	add	x1, x1, #0x158
  43c10c:	ldr	x2, [sp, #40]
  43c110:	mov	w3, #0x229                 	// #553
  43c114:	ldr	x4, [sp, #32]
  43c118:	bl	406c68 <log_assert_failed_realm@plt>
  43c11c:	ldur	x8, [x29, #-16]
  43c120:	ldr	x8, [x8, #64]
  43c124:	cmp	x8, #0x0
  43c128:	cset	w9, ne  // ne = any
  43c12c:	mov	w10, #0x1                   	// #1
  43c130:	eor	w9, w9, #0x1
  43c134:	eor	w9, w9, w10
  43c138:	eor	w9, w9, w10
  43c13c:	and	w9, w9, #0x1
  43c140:	mov	w0, w9
  43c144:	sxtw	x8, w0
  43c148:	cbz	x8, 43c16c <user_unit_active+0xcc>
  43c14c:	mov	w8, wzr
  43c150:	mov	w0, w8
  43c154:	adrp	x1, 44b000 <_fini+0xac30>
  43c158:	add	x1, x1, #0x1c3
  43c15c:	ldr	x2, [sp, #40]
  43c160:	mov	w3, #0x22a                 	// #554
  43c164:	ldr	x4, [sp, #32]
  43c168:	bl	406c68 <log_assert_failed_realm@plt>
  43c16c:	ldur	x8, [x29, #-16]
  43c170:	ldr	x8, [x8, #48]
  43c174:	cmp	x8, #0x0
  43c178:	cset	w9, ne  // ne = any
  43c17c:	mov	w10, #0x1                   	// #1
  43c180:	eor	w9, w9, #0x1
  43c184:	eor	w9, w9, w10
  43c188:	eor	w9, w9, w10
  43c18c:	and	w9, w9, #0x1
  43c190:	mov	w0, w9
  43c194:	sxtw	x8, w0
  43c198:	cbz	x8, 43c1bc <user_unit_active+0x11c>
  43c19c:	mov	w8, wzr
  43c1a0:	mov	w0, w8
  43c1a4:	adrp	x1, 44b000 <_fini+0xac30>
  43c1a8:	add	x1, x1, #0x1da
  43c1ac:	ldr	x2, [sp, #40]
  43c1b0:	mov	w3, #0x22b                 	// #555
  43c1b4:	ldr	x4, [sp, #32]
  43c1b8:	bl	406c68 <log_assert_failed_realm@plt>
  43c1bc:	ldur	x8, [x29, #-16]
  43c1c0:	ldr	x8, [x8, #56]
  43c1c4:	stur	x8, [x29, #-24]
  43c1c8:	stur	x8, [x29, #-80]
  43c1cc:	ldur	x8, [x29, #-80]
  43c1d0:	sub	x9, x29, #0x48
  43c1d4:	stur	x8, [x29, #-72]
  43c1d8:	ldur	x8, [x29, #-16]
  43c1dc:	ldr	x8, [x8, #64]
  43c1e0:	str	x8, [x9, #8]
  43c1e4:	ldur	x8, [x29, #-16]
  43c1e8:	ldr	x8, [x8, #48]
  43c1ec:	str	x8, [x9, #16]
  43c1f0:	mov	x8, xzr
  43c1f4:	str	x8, [x9, #24]
  43c1f8:	stur	x9, [x29, #-40]
  43c1fc:	ldur	x8, [x29, #-24]
  43c200:	cbz	x8, 43c348 <user_unit_active+0x2a8>
  43c204:	add	x2, sp, #0x48
  43c208:	str	xzr, [sp, #72]
  43c20c:	str	xzr, [sp, #80]
  43c210:	str	xzr, [sp, #88]
  43c214:	ldur	x8, [x29, #-16]
  43c218:	ldr	x0, [x8]
  43c21c:	ldur	x1, [x29, #-24]
  43c220:	bl	4211a0 <manager_unit_is_active>
  43c224:	stur	w0, [x29, #-28]
  43c228:	ldur	w9, [x29, #-28]
  43c22c:	cmp	w9, #0x0
  43c230:	cset	w9, ge  // ge = tcont
  43c234:	tbnz	w9, #0, 43c2f4 <user_unit_active+0x254>
  43c238:	mov	w8, #0x7                   	// #7
  43c23c:	str	w8, [sp, #68]
  43c240:	ldur	w8, [x29, #-28]
  43c244:	str	w8, [sp, #64]
  43c248:	str	wzr, [sp, #60]
  43c24c:	ldr	w0, [sp, #60]
  43c250:	bl	406c08 <log_get_max_level_realm@plt>
  43c254:	ldr	w8, [sp, #68]
  43c258:	and	w8, w8, #0x7
  43c25c:	cmp	w0, w8
  43c260:	b.lt	43c2d8 <user_unit_active+0x238>  // b.tstop
  43c264:	ldr	w8, [sp, #60]
  43c268:	ldr	w9, [sp, #68]
  43c26c:	orr	w0, w9, w8, lsl #10
  43c270:	ldr	w1, [sp, #64]
  43c274:	ldur	x10, [x29, #-16]
  43c278:	ldr	x6, [x10, #56]
  43c27c:	ldur	w8, [x29, #-28]
  43c280:	add	x10, sp, #0x48
  43c284:	str	w0, [sp, #28]
  43c288:	mov	x0, x10
  43c28c:	str	w1, [sp, #24]
  43c290:	mov	w1, w8
  43c294:	str	x6, [sp, #16]
  43c298:	bl	4071d8 <bus_error_message@plt>
  43c29c:	ldr	w8, [sp, #28]
  43c2a0:	str	x0, [sp, #8]
  43c2a4:	mov	w0, w8
  43c2a8:	ldr	w1, [sp, #24]
  43c2ac:	ldr	x2, [sp, #40]
  43c2b0:	mov	w3, #0x232                 	// #562
  43c2b4:	adrp	x4, 44b000 <_fini+0xac30>
  43c2b8:	add	x4, x4, #0x1e3
  43c2bc:	adrp	x5, 449000 <_fini+0x8c30>
  43c2c0:	add	x5, x5, #0xe90
  43c2c4:	ldr	x6, [sp, #16]
  43c2c8:	ldr	x7, [sp, #8]
  43c2cc:	bl	406c18 <log_internal_realm@plt>
  43c2d0:	str	w0, [sp, #4]
  43c2d4:	b	43c2ec <user_unit_active+0x24c>
  43c2d8:	ldr	w0, [sp, #64]
  43c2dc:	bl	406c28 <abs@plt>
  43c2e0:	mov	w8, wzr
  43c2e4:	subs	w8, w8, w0, uxtb
  43c2e8:	str	w8, [sp, #4]
  43c2ec:	ldr	w8, [sp, #4]
  43c2f0:	str	w8, [sp, #56]
  43c2f4:	ldur	w8, [x29, #-28]
  43c2f8:	cbz	w8, 43c314 <user_unit_active+0x274>
  43c2fc:	mov	w8, #0x1                   	// #1
  43c300:	and	w8, w8, #0x1
  43c304:	sturb	w8, [x29, #-1]
  43c308:	mov	w8, #0x1                   	// #1
  43c30c:	str	w8, [sp, #52]
  43c310:	b	43c318 <user_unit_active+0x278>
  43c314:	str	wzr, [sp, #52]
  43c318:	add	x0, sp, #0x48
  43c31c:	bl	4071e8 <sd_bus_error_free@plt>
  43c320:	ldr	w8, [sp, #52]
  43c324:	cbz	w8, 43c330 <user_unit_active+0x290>
  43c328:	b	43c32c <user_unit_active+0x28c>
  43c32c:	b	43c354 <user_unit_active+0x2b4>
  43c330:	ldur	x8, [x29, #-40]
  43c334:	add	x9, x8, #0x8
  43c338:	stur	x9, [x29, #-40]
  43c33c:	ldr	x8, [x8, #8]
  43c340:	stur	x8, [x29, #-24]
  43c344:	b	43c1fc <user_unit_active+0x15c>
  43c348:	mov	w8, wzr
  43c34c:	and	w8, w8, #0x1
  43c350:	sturb	w8, [x29, #-1]
  43c354:	ldurb	w8, [x29, #-1]
  43c358:	and	w0, w8, #0x1
  43c35c:	ldp	x29, x30, [sp, #176]
  43c360:	add	sp, sp, #0xc0
  43c364:	ret

000000000043c368 <user_get_state>:
  43c368:	sub	sp, sp, #0x40
  43c36c:	stp	x29, x30, [sp, #48]
  43c370:	add	x29, sp, #0x30
  43c374:	adrp	x8, 44a000 <_fini+0x9c30>
  43c378:	add	x8, x8, #0x8be
  43c37c:	add	x2, x8, #0x3
  43c380:	stur	x0, [x29, #-16]
  43c384:	str	x2, [sp, #8]
  43c388:	ldur	x8, [x29, #-16]
  43c38c:	cmp	x8, #0x0
  43c390:	cset	w9, ne  // ne = any
  43c394:	mov	w10, #0x1                   	// #1
  43c398:	eor	w9, w9, #0x1
  43c39c:	eor	w9, w9, w10
  43c3a0:	eor	w9, w9, w10
  43c3a4:	and	w9, w9, #0x1
  43c3a8:	mov	w0, w9
  43c3ac:	sxtw	x8, w0
  43c3b0:	cbz	x8, 43c3d8 <user_get_state+0x70>
  43c3b4:	mov	w8, wzr
  43c3b8:	mov	w0, w8
  43c3bc:	adrp	x1, 443000 <_fini+0x2c30>
  43c3c0:	add	x1, x1, #0x1dd
  43c3c4:	ldr	x2, [sp, #8]
  43c3c8:	mov	w3, #0x273                 	// #627
  43c3cc:	adrp	x4, 44a000 <_fini+0x9c30>
  43c3d0:	add	x4, x4, #0xb70
  43c3d4:	bl	406c68 <log_assert_failed_realm@plt>
  43c3d8:	ldur	x8, [x29, #-16]
  43c3dc:	ldrb	w9, [x8, #120]
  43c3e0:	mov	w10, #0x2                   	// #2
  43c3e4:	lsr	w9, w9, w10
  43c3e8:	and	w9, w9, #0x1
  43c3ec:	tbnz	w9, #0, 43c3f4 <user_get_state+0x8c>
  43c3f0:	b	43c400 <user_get_state+0x98>
  43c3f4:	mov	w8, #0x5                   	// #5
  43c3f8:	stur	w8, [x29, #-4]
  43c3fc:	b	43c4f8 <user_get_state+0x190>
  43c400:	ldur	x8, [x29, #-16]
  43c404:	ldrb	w9, [x8, #120]
  43c408:	mov	w10, #0x1                   	// #1
  43c40c:	lsr	w9, w9, w10
  43c410:	and	w9, w9, w10
  43c414:	tbnz	w9, #0, 43c41c <user_get_state+0xb4>
  43c418:	b	43c428 <user_get_state+0xc0>
  43c41c:	ldur	x8, [x29, #-16]
  43c420:	ldr	x8, [x8, #72]
  43c424:	cbz	x8, 43c434 <user_get_state+0xcc>
  43c428:	mov	w8, #0x1                   	// #1
  43c42c:	stur	w8, [x29, #-4]
  43c430:	b	43c4f8 <user_get_state+0x190>
  43c434:	ldur	x8, [x29, #-16]
  43c438:	ldr	x8, [x8, #128]
  43c43c:	cbz	x8, 43c4c0 <user_get_state+0x158>
  43c440:	mov	w8, #0x1                   	// #1
  43c444:	strb	w8, [sp, #23]
  43c448:	ldur	x9, [x29, #-16]
  43c44c:	ldr	x9, [x9, #128]
  43c450:	str	x9, [sp, #24]
  43c454:	ldr	x8, [sp, #24]
  43c458:	cbz	x8, 43c4a4 <user_get_state+0x13c>
  43c45c:	ldr	x0, [sp, #24]
  43c460:	bl	433524 <session_get_state>
  43c464:	str	w0, [sp, #16]
  43c468:	ldr	w8, [sp, #16]
  43c46c:	cmp	w8, #0x2
  43c470:	b.ne	43c480 <user_get_state+0x118>  // b.any
  43c474:	mov	w8, #0x4                   	// #4
  43c478:	stur	w8, [x29, #-4]
  43c47c:	b	43c4f8 <user_get_state+0x190>
  43c480:	ldr	w8, [sp, #16]
  43c484:	cmp	w8, #0x3
  43c488:	b.eq	43c494 <user_get_state+0x12c>  // b.none
  43c48c:	mov	w8, #0x0                   	// #0
  43c490:	strb	w8, [sp, #23]
  43c494:	ldr	x8, [sp, #24]
  43c498:	ldr	x8, [x8, #256]
  43c49c:	str	x8, [sp, #24]
  43c4a0:	b	43c454 <user_get_state+0xec>
  43c4a4:	ldrb	w8, [sp, #23]
  43c4a8:	mov	w9, #0x3                   	// #3
  43c4ac:	mov	w10, #0x5                   	// #5
  43c4b0:	tst	w8, #0x1
  43c4b4:	csel	w8, w10, w9, ne  // ne = any
  43c4b8:	stur	w8, [x29, #-4]
  43c4bc:	b	43c4f8 <user_get_state+0x190>
  43c4c0:	ldur	x0, [x29, #-16]
  43c4c4:	bl	43b9f0 <user_check_linger_file>
  43c4c8:	cmp	w0, #0x0
  43c4cc:	cset	w8, le
  43c4d0:	tbnz	w8, #0, 43c4f0 <user_get_state+0x188>
  43c4d4:	ldur	x0, [x29, #-16]
  43c4d8:	bl	43c0a0 <user_unit_active>
  43c4dc:	tbnz	w0, #0, 43c4e4 <user_get_state+0x17c>
  43c4e0:	b	43c4f0 <user_get_state+0x188>
  43c4e4:	mov	w8, #0x2                   	// #2
  43c4e8:	stur	w8, [x29, #-4]
  43c4ec:	b	43c4f8 <user_get_state+0x190>
  43c4f0:	mov	w8, #0x5                   	// #5
  43c4f4:	stur	w8, [x29, #-4]
  43c4f8:	ldur	w0, [x29, #-4]
  43c4fc:	ldp	x29, x30, [sp, #48]
  43c500:	add	sp, sp, #0x40
  43c504:	ret

000000000043c508 <user_kill>:
  43c508:	sub	sp, sp, #0x30
  43c50c:	stp	x29, x30, [sp, #32]
  43c510:	add	x29, sp, #0x20
  43c514:	adrp	x8, 44a000 <_fini+0x9c30>
  43c518:	add	x8, x8, #0x8be
  43c51c:	add	x2, x8, #0x3
  43c520:	stur	x0, [x29, #-8]
  43c524:	stur	w1, [x29, #-12]
  43c528:	str	x2, [sp, #8]
  43c52c:	ldur	x8, [x29, #-8]
  43c530:	cmp	x8, #0x0
  43c534:	cset	w9, ne  // ne = any
  43c538:	mov	w10, #0x1                   	// #1
  43c53c:	eor	w9, w9, #0x1
  43c540:	eor	w9, w9, w10
  43c544:	eor	w9, w9, w10
  43c548:	and	w9, w9, #0x1
  43c54c:	mov	w0, w9
  43c550:	sxtw	x8, w0
  43c554:	cbz	x8, 43c57c <user_kill+0x74>
  43c558:	mov	w8, wzr
  43c55c:	mov	w0, w8
  43c560:	adrp	x1, 443000 <_fini+0x2c30>
  43c564:	add	x1, x1, #0x1dd
  43c568:	ldr	x2, [sp, #8]
  43c56c:	mov	w3, #0x292                 	// #658
  43c570:	adrp	x4, 44a000 <_fini+0x9c30>
  43c574:	add	x4, x4, #0xb91
  43c578:	bl	406c68 <log_assert_failed_realm@plt>
  43c57c:	ldur	x8, [x29, #-8]
  43c580:	ldr	x0, [x8]
  43c584:	ldur	x8, [x29, #-8]
  43c588:	ldr	x1, [x8, #48]
  43c58c:	ldur	w3, [x29, #-12]
  43c590:	mov	w2, #0x1                   	// #1
  43c594:	mov	x8, xzr
  43c598:	mov	x4, x8
  43c59c:	bl	421048 <manager_kill_unit>
  43c5a0:	ldp	x29, x30, [sp, #32]
  43c5a4:	add	sp, sp, #0x30
  43c5a8:	ret

000000000043c5ac <user_elect_display>:
  43c5ac:	sub	sp, sp, #0x90
  43c5b0:	stp	x29, x30, [sp, #128]
  43c5b4:	add	x29, sp, #0x80
  43c5b8:	adrp	x8, 44a000 <_fini+0x9c30>
  43c5bc:	add	x8, x8, #0x8be
  43c5c0:	add	x8, x8, #0x3
  43c5c4:	adrp	x9, 44a000 <_fini+0x9c30>
  43c5c8:	add	x9, x9, #0xbcc
  43c5cc:	stur	x0, [x29, #-8]
  43c5d0:	str	x8, [sp, #56]
  43c5d4:	str	x9, [sp, #48]
  43c5d8:	ldur	x8, [x29, #-8]
  43c5dc:	cmp	x8, #0x0
  43c5e0:	cset	w9, ne  // ne = any
  43c5e4:	mov	w10, #0x1                   	// #1
  43c5e8:	eor	w9, w9, #0x1
  43c5ec:	eor	w9, w9, w10
  43c5f0:	eor	w9, w9, w10
  43c5f4:	and	w9, w9, #0x1
  43c5f8:	mov	w0, w9
  43c5fc:	sxtw	x8, w0
  43c600:	cbz	x8, 43c628 <user_elect_display+0x7c>
  43c604:	mov	w8, wzr
  43c608:	mov	w0, w8
  43c60c:	adrp	x1, 443000 <_fini+0x2c30>
  43c610:	add	x1, x1, #0x1dd
  43c614:	ldr	x2, [sp, #56]
  43c618:	mov	w3, #0x2c7                 	// #711
  43c61c:	adrp	x4, 44a000 <_fini+0x9c30>
  43c620:	add	x4, x4, #0xbac
  43c624:	bl	406c68 <log_assert_failed_realm@plt>
  43c628:	mov	w8, #0x7                   	// #7
  43c62c:	stur	w8, [x29, #-20]
  43c630:	stur	wzr, [x29, #-24]
  43c634:	stur	wzr, [x29, #-28]
  43c638:	ldur	w0, [x29, #-28]
  43c63c:	bl	406c08 <log_get_max_level_realm@plt>
  43c640:	ldur	w8, [x29, #-20]
  43c644:	and	w8, w8, #0x7
  43c648:	cmp	w0, w8
  43c64c:	b.lt	43c688 <user_elect_display+0xdc>  // b.tstop
  43c650:	ldur	w8, [x29, #-28]
  43c654:	ldur	w9, [x29, #-20]
  43c658:	orr	w0, w9, w8, lsl #10
  43c65c:	ldur	w1, [x29, #-24]
  43c660:	ldur	x10, [x29, #-8]
  43c664:	ldr	x6, [x10, #16]
  43c668:	ldr	x2, [sp, #56]
  43c66c:	mov	w3, #0x2cb                 	// #715
  43c670:	ldr	x4, [sp, #48]
  43c674:	adrp	x5, 44a000 <_fini+0x9c30>
  43c678:	add	x5, x5, #0xbdf
  43c67c:	bl	406c18 <log_internal_realm@plt>
  43c680:	str	w0, [sp, #44]
  43c684:	b	43c69c <user_elect_display+0xf0>
  43c688:	ldur	w0, [x29, #-24]
  43c68c:	bl	406c28 <abs@plt>
  43c690:	mov	w8, wzr
  43c694:	subs	w8, w8, w0, uxtb
  43c698:	str	w8, [sp, #44]
  43c69c:	ldr	w8, [sp, #44]
  43c6a0:	stur	w8, [x29, #-32]
  43c6a4:	ldur	x9, [x29, #-8]
  43c6a8:	ldr	x9, [x9, #128]
  43c6ac:	stur	x9, [x29, #-16]
  43c6b0:	ldur	x8, [x29, #-16]
  43c6b4:	cbz	x8, 43c844 <user_elect_display+0x298>
  43c6b8:	ldur	x0, [x29, #-16]
  43c6bc:	bl	43c850 <elect_display_filter>
  43c6c0:	tbnz	w0, #0, 43c744 <user_elect_display+0x198>
  43c6c4:	mov	w8, #0x7                   	// #7
  43c6c8:	stur	w8, [x29, #-36]
  43c6cc:	stur	wzr, [x29, #-40]
  43c6d0:	stur	wzr, [x29, #-44]
  43c6d4:	ldur	w0, [x29, #-44]
  43c6d8:	bl	406c08 <log_get_max_level_realm@plt>
  43c6dc:	ldur	w8, [x29, #-36]
  43c6e0:	and	w8, w8, #0x7
  43c6e4:	cmp	w0, w8
  43c6e8:	b.lt	43c724 <user_elect_display+0x178>  // b.tstop
  43c6ec:	ldur	w8, [x29, #-44]
  43c6f0:	ldur	w9, [x29, #-36]
  43c6f4:	orr	w0, w9, w8, lsl #10
  43c6f8:	ldur	w1, [x29, #-40]
  43c6fc:	ldur	x10, [x29, #-16]
  43c700:	ldr	x6, [x10, #8]
  43c704:	ldr	x2, [sp, #56]
  43c708:	mov	w3, #0x2cf                 	// #719
  43c70c:	ldr	x4, [sp, #48]
  43c710:	adrp	x5, 44a000 <_fini+0x9c30>
  43c714:	add	x5, x5, #0xc00
  43c718:	bl	406c18 <log_internal_realm@plt>
  43c71c:	str	w0, [sp, #40]
  43c720:	b	43c738 <user_elect_display+0x18c>
  43c724:	ldur	w0, [x29, #-40]
  43c728:	bl	406c28 <abs@plt>
  43c72c:	mov	w8, wzr
  43c730:	subs	w8, w8, w0, uxtb
  43c734:	str	w8, [sp, #40]
  43c738:	ldr	w8, [sp, #40]
  43c73c:	stur	w8, [x29, #-48]
  43c740:	b	43c834 <user_elect_display+0x288>
  43c744:	ldur	x0, [x29, #-16]
  43c748:	ldur	x8, [x29, #-8]
  43c74c:	ldr	x1, [x8, #80]
  43c750:	bl	43c970 <elect_display_compare>
  43c754:	cmp	w0, #0x0
  43c758:	cset	w9, ge  // ge = tcont
  43c75c:	tbnz	w9, #0, 43c834 <user_elect_display+0x288>
  43c760:	mov	w8, #0x7                   	// #7
  43c764:	stur	w8, [x29, #-52]
  43c768:	stur	wzr, [x29, #-56]
  43c76c:	stur	wzr, [x29, #-60]
  43c770:	ldur	w0, [x29, #-60]
  43c774:	bl	406c08 <log_get_max_level_realm@plt>
  43c778:	ldur	w8, [x29, #-52]
  43c77c:	and	w8, w8, #0x7
  43c780:	cmp	w0, w8
  43c784:	b.lt	43c80c <user_elect_display+0x260>  // b.tstop
  43c788:	ldur	w8, [x29, #-60]
  43c78c:	ldur	w9, [x29, #-52]
  43c790:	orr	w0, w9, w8, lsl #10
  43c794:	ldur	w1, [x29, #-56]
  43c798:	ldur	x10, [x29, #-16]
  43c79c:	ldr	x6, [x10, #8]
  43c7a0:	ldur	x10, [x29, #-8]
  43c7a4:	ldr	x10, [x10, #80]
  43c7a8:	str	w0, [sp, #36]
  43c7ac:	str	w1, [sp, #32]
  43c7b0:	str	x6, [sp, #24]
  43c7b4:	cbz	x10, 43c7cc <user_elect_display+0x220>
  43c7b8:	ldur	x8, [x29, #-8]
  43c7bc:	ldr	x8, [x8, #80]
  43c7c0:	ldr	x8, [x8, #8]
  43c7c4:	str	x8, [sp, #16]
  43c7c8:	b	43c7d8 <user_elect_display+0x22c>
  43c7cc:	adrp	x8, 441000 <_fini+0xc30>
  43c7d0:	add	x8, x8, #0x5c9
  43c7d4:	str	x8, [sp, #16]
  43c7d8:	ldr	x8, [sp, #16]
  43c7dc:	ldr	w0, [sp, #36]
  43c7e0:	ldr	w1, [sp, #32]
  43c7e4:	ldr	x2, [sp, #56]
  43c7e8:	mov	w3, #0x2d4                 	// #724
  43c7ec:	ldr	x4, [sp, #48]
  43c7f0:	adrp	x5, 44a000 <_fini+0x9c30>
  43c7f4:	add	x5, x5, #0xc14
  43c7f8:	ldr	x6, [sp, #24]
  43c7fc:	mov	x7, x8
  43c800:	bl	406c18 <log_internal_realm@plt>
  43c804:	str	w0, [sp, #12]
  43c808:	b	43c820 <user_elect_display+0x274>
  43c80c:	ldur	w0, [x29, #-56]
  43c810:	bl	406c28 <abs@plt>
  43c814:	mov	w8, wzr
  43c818:	subs	w8, w8, w0, uxtb
  43c81c:	str	w8, [sp, #12]
  43c820:	ldr	w8, [sp, #12]
  43c824:	str	w8, [sp, #64]
  43c828:	ldur	x9, [x29, #-16]
  43c82c:	ldur	x10, [x29, #-8]
  43c830:	str	x9, [x10, #80]
  43c834:	ldur	x8, [x29, #-16]
  43c838:	ldr	x8, [x8, #256]
  43c83c:	stur	x8, [x29, #-16]
  43c840:	b	43c6b0 <user_elect_display+0x104>
  43c844:	ldp	x29, x30, [sp, #128]
  43c848:	add	sp, sp, #0x90
  43c84c:	ret

000000000043c850 <elect_display_filter>:
  43c850:	sub	sp, sp, #0x30
  43c854:	stp	x29, x30, [sp, #32]
  43c858:	add	x29, sp, #0x20
  43c85c:	adrp	x8, 44a000 <_fini+0x9c30>
  43c860:	add	x8, x8, #0x8be
  43c864:	add	x2, x8, #0x3
  43c868:	stur	x0, [x29, #-8]
  43c86c:	str	x2, [sp, #8]
  43c870:	ldur	x8, [x29, #-8]
  43c874:	cmp	x8, #0x0
  43c878:	cset	w9, ne  // ne = any
  43c87c:	mov	w10, #0x1                   	// #1
  43c880:	eor	w9, w9, #0x1
  43c884:	eor	w9, w9, w10
  43c888:	eor	w9, w9, w10
  43c88c:	and	w9, w9, #0x1
  43c890:	mov	w0, w9
  43c894:	sxtw	x8, w0
  43c898:	cbz	x8, 43c8c0 <elect_display_filter+0x70>
  43c89c:	mov	w8, wzr
  43c8a0:	mov	w0, w8
  43c8a4:	adrp	x1, 442000 <_fini+0x1c30>
  43c8a8:	add	x1, x1, #0xf2
  43c8ac:	ldr	x2, [sp, #8]
  43c8b0:	mov	w3, #0x299                 	// #665
  43c8b4:	adrp	x4, 44b000 <_fini+0xac30>
  43c8b8:	add	x4, x4, #0x1f4
  43c8bc:	bl	406c68 <log_assert_failed_realm@plt>
  43c8c0:	mov	w8, #0x0                   	// #0
  43c8c4:	sturb	w8, [x29, #-9]
  43c8c8:	ldur	x9, [x29, #-8]
  43c8cc:	ldr	w8, [x9, #24]
  43c8d0:	subs	w8, w8, #0x0
  43c8d4:	mov	w10, #0x1                   	// #1
  43c8d8:	cmp	w8, #0x1
  43c8dc:	cset	w8, ls  // ls = plast
  43c8e0:	eor	w8, w8, w10
  43c8e4:	tbnz	w8, #0, 43c8f8 <elect_display_filter+0xa8>
  43c8e8:	b	43c8ec <elect_display_filter+0x9c>
  43c8ec:	mov	w8, #0x1                   	// #1
  43c8f0:	sturb	w8, [x29, #-9]
  43c8f4:	b	43c8f8 <elect_display_filter+0xa8>
  43c8f8:	ldurb	w8, [x29, #-9]
  43c8fc:	and	w8, w8, #0x1
  43c900:	sturb	w8, [x29, #-10]
  43c904:	ldurb	w8, [x29, #-10]
  43c908:	mov	w9, #0x0                   	// #0
  43c90c:	str	w9, [sp, #4]
  43c910:	tbnz	w8, #0, 43c918 <elect_display_filter+0xc8>
  43c914:	b	43c95c <elect_display_filter+0x10c>
  43c918:	ldur	x8, [x29, #-8]
  43c91c:	ldrb	w9, [x8, #209]
  43c920:	mov	w10, #0x1                   	// #1
  43c924:	lsr	w9, w9, w10
  43c928:	and	w9, w9, w10
  43c92c:	mov	w10, #0x0                   	// #0
  43c930:	str	w10, [sp, #4]
  43c934:	tbnz	w9, #0, 43c93c <elect_display_filter+0xec>
  43c938:	b	43c95c <elect_display_filter+0x10c>
  43c93c:	ldur	x8, [x29, #-8]
  43c940:	ldrb	w9, [x8, #209]
  43c944:	mov	w10, #0x2                   	// #2
  43c948:	lsr	w9, w9, w10
  43c94c:	mov	w10, #0x1                   	// #1
  43c950:	and	w9, w9, #0x1
  43c954:	eor	w9, w9, w10
  43c958:	str	w9, [sp, #4]
  43c95c:	ldr	w8, [sp, #4]
  43c960:	and	w0, w8, #0x1
  43c964:	ldp	x29, x30, [sp, #32]
  43c968:	add	sp, sp, #0x30
  43c96c:	ret

000000000043c970 <elect_display_compare>:
  43c970:	sub	sp, sp, #0x20
  43c974:	str	x0, [sp, #16]
  43c978:	str	x1, [sp, #8]
  43c97c:	ldr	x8, [sp, #16]
  43c980:	cbnz	x8, 43c994 <elect_display_compare+0x24>
  43c984:	ldr	x8, [sp, #8]
  43c988:	cbnz	x8, 43c994 <elect_display_compare+0x24>
  43c98c:	str	wzr, [sp, #28]
  43c990:	b	43cb74 <elect_display_compare+0x204>
  43c994:	ldr	x8, [sp, #16]
  43c998:	cmp	x8, #0x0
  43c99c:	cset	w9, eq  // eq = none
  43c9a0:	and	w9, w9, #0x1
  43c9a4:	ldr	x8, [sp, #8]
  43c9a8:	cmp	x8, #0x0
  43c9ac:	cset	w10, eq  // eq = none
  43c9b0:	and	w10, w10, #0x1
  43c9b4:	cmp	w9, w10
  43c9b8:	b.eq	43c9e8 <elect_display_compare+0x78>  // b.none
  43c9bc:	ldr	x8, [sp, #16]
  43c9c0:	cmp	x8, #0x0
  43c9c4:	cset	w9, eq  // eq = none
  43c9c8:	and	w9, w9, #0x1
  43c9cc:	ldr	x8, [sp, #8]
  43c9d0:	cmp	x8, #0x0
  43c9d4:	cset	w10, eq  // eq = none
  43c9d8:	and	w10, w10, #0x1
  43c9dc:	subs	w9, w9, w10
  43c9e0:	str	w9, [sp, #28]
  43c9e4:	b	43cb74 <elect_display_compare+0x204>
  43c9e8:	ldr	x8, [sp, #16]
  43c9ec:	ldrb	w9, [x8, #209]
  43c9f0:	mov	w10, #0x2                   	// #2
  43c9f4:	lsr	w9, w9, w10
  43c9f8:	mov	w11, #0x1                   	// #1
  43c9fc:	and	w9, w9, #0x1
  43ca00:	and	w9, w9, #0x1
  43ca04:	ldr	x8, [sp, #8]
  43ca08:	ldrb	w12, [x8, #209]
  43ca0c:	lsr	w10, w12, w10
  43ca10:	and	w10, w10, w11
  43ca14:	and	w10, w10, #0x1
  43ca18:	cmp	w9, w10
  43ca1c:	b.eq	43ca5c <elect_display_compare+0xec>  // b.none
  43ca20:	ldr	x8, [sp, #16]
  43ca24:	ldrb	w9, [x8, #209]
  43ca28:	mov	w10, #0x2                   	// #2
  43ca2c:	lsr	w9, w9, w10
  43ca30:	mov	w11, #0x1                   	// #1
  43ca34:	and	w9, w9, #0x1
  43ca38:	and	w9, w9, #0x1
  43ca3c:	ldr	x8, [sp, #8]
  43ca40:	ldrb	w12, [x8, #209]
  43ca44:	lsr	w10, w12, w10
  43ca48:	and	w10, w10, w11
  43ca4c:	and	w10, w10, #0x1
  43ca50:	subs	w9, w9, w10
  43ca54:	str	w9, [sp, #28]
  43ca58:	b	43cb74 <elect_display_compare+0x204>
  43ca5c:	ldr	x8, [sp, #16]
  43ca60:	ldr	w9, [x8, #24]
  43ca64:	cmp	w9, #0x0
  43ca68:	cset	w9, ne  // ne = any
  43ca6c:	and	w9, w9, #0x1
  43ca70:	ldr	x8, [sp, #8]
  43ca74:	ldr	w10, [x8, #24]
  43ca78:	cmp	w10, #0x0
  43ca7c:	cset	w10, ne  // ne = any
  43ca80:	and	w10, w10, #0x1
  43ca84:	cmp	w9, w10
  43ca88:	b.eq	43cac0 <elect_display_compare+0x150>  // b.none
  43ca8c:	ldr	x8, [sp, #16]
  43ca90:	ldr	w9, [x8, #24]
  43ca94:	cmp	w9, #0x0
  43ca98:	cset	w9, ne  // ne = any
  43ca9c:	and	w9, w9, #0x1
  43caa0:	ldr	x8, [sp, #8]
  43caa4:	ldr	w10, [x8, #24]
  43caa8:	cmp	w10, #0x0
  43caac:	cset	w10, ne  // ne = any
  43cab0:	and	w10, w10, #0x1
  43cab4:	subs	w9, w9, w10
  43cab8:	str	w9, [sp, #28]
  43cabc:	b	43cb74 <elect_display_compare+0x204>
  43cac0:	ldr	x8, [sp, #16]
  43cac4:	ldr	w9, [x8, #20]
  43cac8:	mov	w10, #0xffffffff            	// #-1
  43cacc:	cmp	w9, w10
  43cad0:	cset	w9, eq  // eq = none
  43cad4:	and	w9, w9, #0x1
  43cad8:	ldr	x8, [sp, #8]
  43cadc:	ldr	w11, [x8, #20]
  43cae0:	cmp	w11, w10
  43cae4:	cset	w10, eq  // eq = none
  43cae8:	and	w10, w10, #0x1
  43caec:	cmp	w9, w10
  43caf0:	b.eq	43cb2c <elect_display_compare+0x1bc>  // b.none
  43caf4:	ldr	x8, [sp, #16]
  43caf8:	ldr	w9, [x8, #20]
  43cafc:	mov	w10, #0xffffffff            	// #-1
  43cb00:	cmp	w9, w10
  43cb04:	cset	w9, eq  // eq = none
  43cb08:	and	w9, w9, #0x1
  43cb0c:	ldr	x8, [sp, #8]
  43cb10:	ldr	w11, [x8, #20]
  43cb14:	cmp	w11, w10
  43cb18:	cset	w10, eq  // eq = none
  43cb1c:	and	w10, w10, #0x1
  43cb20:	subs	w9, w9, w10
  43cb24:	str	w9, [sp, #28]
  43cb28:	b	43cb74 <elect_display_compare+0x204>
  43cb2c:	ldr	x8, [sp, #16]
  43cb30:	ldr	w9, [x8, #20]
  43cb34:	ldr	x8, [sp, #8]
  43cb38:	ldr	w10, [x8, #20]
  43cb3c:	cmp	w9, w10
  43cb40:	b.eq	43cb70 <elect_display_compare+0x200>  // b.none
  43cb44:	ldr	x8, [sp, #16]
  43cb48:	ldrsw	x8, [x8, #20]
  43cb4c:	adrp	x9, 44b000 <_fini+0xac30>
  43cb50:	add	x9, x9, #0xc60
  43cb54:	ldr	w10, [x9, x8, lsl #2]
  43cb58:	ldr	x8, [sp, #8]
  43cb5c:	ldrsw	x8, [x8, #20]
  43cb60:	ldr	w11, [x9, x8, lsl #2]
  43cb64:	subs	w10, w10, w11
  43cb68:	str	w10, [sp, #28]
  43cb6c:	b	43cb74 <elect_display_compare+0x204>
  43cb70:	str	wzr, [sp, #28]
  43cb74:	ldr	w0, [sp, #28]
  43cb78:	add	sp, sp, #0x20
  43cb7c:	ret

000000000043cb80 <user_update_last_session_timer>:
  43cb80:	sub	sp, sp, #0xf0
  43cb84:	stp	x29, x30, [sp, #224]
  43cb88:	add	x29, sp, #0xe0
  43cb8c:	adrp	x8, 44a000 <_fini+0x9c30>
  43cb90:	add	x8, x8, #0x8be
  43cb94:	add	x8, x8, #0x3
  43cb98:	adrp	x9, 44a000 <_fini+0x9c30>
  43cb9c:	add	x9, x9, #0xc7f
  43cba0:	stur	x0, [x29, #-8]
  43cba4:	str	x8, [sp, #88]
  43cba8:	str	x9, [sp, #80]
  43cbac:	ldur	x8, [x29, #-8]
  43cbb0:	cmp	x8, #0x0
  43cbb4:	cset	w9, ne  // ne = any
  43cbb8:	mov	w10, #0x1                   	// #1
  43cbbc:	eor	w9, w9, #0x1
  43cbc0:	eor	w9, w9, w10
  43cbc4:	eor	w9, w9, w10
  43cbc8:	and	w9, w9, #0x1
  43cbcc:	mov	w0, w9
  43cbd0:	sxtw	x8, w0
  43cbd4:	cbz	x8, 43cbfc <user_update_last_session_timer+0x7c>
  43cbd8:	mov	w8, wzr
  43cbdc:	mov	w0, w8
  43cbe0:	adrp	x1, 443000 <_fini+0x2c30>
  43cbe4:	add	x1, x1, #0x1dd
  43cbe8:	ldr	x2, [sp, #88]
  43cbec:	mov	w3, #0x2e6                 	// #742
  43cbf0:	adrp	x4, 44a000 <_fini+0x9c30>
  43cbf4:	add	x4, x4, #0xc3c
  43cbf8:	bl	406c68 <log_assert_failed_realm@plt>
  43cbfc:	ldur	x8, [x29, #-8]
  43cc00:	ldr	x8, [x8, #128]
  43cc04:	cbz	x8, 43cc2c <user_update_last_session_timer+0xac>
  43cc08:	ldur	x8, [x29, #-8]
  43cc0c:	mov	x9, #0xffffffffffffffff    	// #-1
  43cc10:	str	x9, [x8, #104]
  43cc14:	ldur	x8, [x29, #-8]
  43cc18:	ldr	x0, [x8, #112]
  43cc1c:	bl	406d28 <sd_event_source_unref@plt>
  43cc20:	ldur	x8, [x29, #-8]
  43cc24:	str	x0, [x8, #112]
  43cc28:	b	43cf7c <user_update_last_session_timer+0x3fc>
  43cc2c:	ldur	x8, [x29, #-8]
  43cc30:	ldr	x8, [x8, #104]
  43cc34:	mov	x9, #0xffffffffffffffff    	// #-1
  43cc38:	cmp	x8, x9
  43cc3c:	b.eq	43cc44 <user_update_last_session_timer+0xc4>  // b.none
  43cc40:	b	43cf7c <user_update_last_session_timer+0x3fc>
  43cc44:	mov	w0, #0x1                   	// #1
  43cc48:	bl	406ca8 <now@plt>
  43cc4c:	ldur	x8, [x29, #-8]
  43cc50:	str	x0, [x8, #104]
  43cc54:	ldur	x8, [x29, #-8]
  43cc58:	ldr	x8, [x8, #112]
  43cc5c:	cmp	x8, #0x0
  43cc60:	cset	w9, ne  // ne = any
  43cc64:	mov	w10, #0x1                   	// #1
  43cc68:	eor	w9, w9, #0x1
  43cc6c:	eor	w9, w9, w10
  43cc70:	eor	w9, w9, w10
  43cc74:	eor	w9, w9, w10
  43cc78:	and	w9, w9, #0x1
  43cc7c:	mov	w0, w9
  43cc80:	sxtw	x8, w0
  43cc84:	cbz	x8, 43ccac <user_update_last_session_timer+0x12c>
  43cc88:	mov	w8, wzr
  43cc8c:	mov	w0, w8
  43cc90:	adrp	x1, 44a000 <_fini+0x9c30>
  43cc94:	add	x1, x1, #0xc68
  43cc98:	ldr	x2, [sp, #88]
  43cc9c:	mov	w3, #0x2f4                 	// #756
  43cca0:	adrp	x4, 44a000 <_fini+0x9c30>
  43cca4:	add	x4, x4, #0xc3c
  43cca8:	bl	406c68 <log_assert_failed_realm@plt>
  43ccac:	mov	w8, #0x0                   	// #0
  43ccb0:	sturb	w8, [x29, #-13]
  43ccb4:	ldur	x9, [x29, #-8]
  43ccb8:	ldr	x9, [x9]
  43ccbc:	ldr	x9, [x9, #240]
  43ccc0:	add	x9, x9, #0x1
  43ccc4:	cmp	x9, #0x1
  43ccc8:	cset	w8, ls  // ls = plast
  43cccc:	eor	w8, w8, #0x1
  43ccd0:	tbnz	w8, #0, 43cce4 <user_update_last_session_timer+0x164>
  43ccd4:	b	43ccd8 <user_update_last_session_timer+0x158>
  43ccd8:	mov	w8, #0x1                   	// #1
  43ccdc:	sturb	w8, [x29, #-13]
  43cce0:	b	43cce4 <user_update_last_session_timer+0x164>
  43cce4:	ldurb	w8, [x29, #-13]
  43cce8:	and	w8, w8, #0x1
  43ccec:	sturb	w8, [x29, #-14]
  43ccf0:	ldurb	w8, [x29, #-14]
  43ccf4:	tbnz	w8, #0, 43ccfc <user_update_last_session_timer+0x17c>
  43ccf8:	b	43cd00 <user_update_last_session_timer+0x180>
  43ccfc:	b	43cf7c <user_update_last_session_timer+0x3fc>
  43cd00:	ldur	x8, [x29, #-8]
  43cd04:	ldr	x8, [x8]
  43cd08:	ldr	x0, [x8]
  43cd0c:	bl	406d08 <sd_event_get_state@plt>
  43cd10:	cmp	w0, #0x5
  43cd14:	b.ne	43cd90 <user_update_last_session_timer+0x210>  // b.any
  43cd18:	mov	w8, #0x7                   	// #7
  43cd1c:	stur	w8, [x29, #-20]
  43cd20:	stur	wzr, [x29, #-24]
  43cd24:	stur	wzr, [x29, #-28]
  43cd28:	ldur	w0, [x29, #-28]
  43cd2c:	bl	406c08 <log_get_max_level_realm@plt>
  43cd30:	ldur	w8, [x29, #-20]
  43cd34:	and	w8, w8, #0x7
  43cd38:	cmp	w0, w8
  43cd3c:	b.lt	43cd70 <user_update_last_session_timer+0x1f0>  // b.tstop
  43cd40:	ldur	w8, [x29, #-28]
  43cd44:	ldur	w9, [x29, #-20]
  43cd48:	orr	w0, w9, w8, lsl #10
  43cd4c:	ldur	w1, [x29, #-24]
  43cd50:	ldr	x2, [sp, #88]
  43cd54:	mov	w3, #0x2fa                 	// #762
  43cd58:	ldr	x4, [sp, #80]
  43cd5c:	adrp	x5, 44a000 <_fini+0x9c30>
  43cd60:	add	x5, x5, #0xc9e
  43cd64:	bl	406c18 <log_internal_realm@plt>
  43cd68:	str	w0, [sp, #76]
  43cd6c:	b	43cd84 <user_update_last_session_timer+0x204>
  43cd70:	ldur	w0, [x29, #-24]
  43cd74:	bl	406c28 <abs@plt>
  43cd78:	mov	w8, wzr
  43cd7c:	subs	w8, w8, w0, uxtb
  43cd80:	str	w8, [sp, #76]
  43cd84:	ldr	w8, [sp, #76]
  43cd88:	stur	w8, [x29, #-32]
  43cd8c:	b	43cf7c <user_update_last_session_timer+0x3fc>
  43cd90:	ldur	x8, [x29, #-8]
  43cd94:	ldr	x8, [x8]
  43cd98:	ldr	x0, [x8]
  43cd9c:	ldur	x8, [x29, #-8]
  43cda0:	add	x1, x8, #0x70
  43cda4:	ldur	x8, [x29, #-8]
  43cda8:	ldr	x8, [x8, #104]
  43cdac:	ldur	x9, [x29, #-8]
  43cdb0:	ldr	x9, [x9]
  43cdb4:	ldr	x9, [x9, #240]
  43cdb8:	str	x0, [sp, #64]
  43cdbc:	mov	x0, x8
  43cdc0:	str	x1, [sp, #56]
  43cdc4:	mov	x1, x9
  43cdc8:	bl	43c044 <usec_add>
  43cdcc:	ldur	x6, [x29, #-8]
  43cdd0:	ldr	x8, [sp, #64]
  43cdd4:	str	x0, [sp, #48]
  43cdd8:	mov	x0, x8
  43cddc:	ldr	x1, [sp, #56]
  43cde0:	mov	w2, #0x1                   	// #1
  43cde4:	ldr	x3, [sp, #48]
  43cde8:	mov	x9, xzr
  43cdec:	mov	x4, x9
  43cdf0:	adrp	x5, 43c000 <user_may_gc+0x2b0>
  43cdf4:	add	x5, x5, #0xf88
  43cdf8:	bl	407028 <sd_event_add_time@plt>
  43cdfc:	stur	w0, [x29, #-12]
  43ce00:	ldur	w10, [x29, #-12]
  43ce04:	cmp	w10, #0x0
  43ce08:	cset	w10, ge  // ge = tcont
  43ce0c:	tbnz	w10, #0, 43ce88 <user_update_last_session_timer+0x308>
  43ce10:	mov	w8, #0x4                   	// #4
  43ce14:	stur	w8, [x29, #-36]
  43ce18:	ldur	w8, [x29, #-12]
  43ce1c:	stur	w8, [x29, #-40]
  43ce20:	stur	wzr, [x29, #-44]
  43ce24:	ldur	w0, [x29, #-44]
  43ce28:	bl	406c08 <log_get_max_level_realm@plt>
  43ce2c:	ldur	w8, [x29, #-36]
  43ce30:	and	w8, w8, #0x7
  43ce34:	cmp	w0, w8
  43ce38:	b.lt	43ce6c <user_update_last_session_timer+0x2ec>  // b.tstop
  43ce3c:	ldur	w8, [x29, #-44]
  43ce40:	ldur	w9, [x29, #-36]
  43ce44:	orr	w0, w9, w8, lsl #10
  43ce48:	ldur	w1, [x29, #-40]
  43ce4c:	ldr	x2, [sp, #88]
  43ce50:	mov	w3, #0x304                 	// #772
  43ce54:	ldr	x4, [sp, #80]
  43ce58:	adrp	x5, 44a000 <_fini+0x9c30>
  43ce5c:	add	x5, x5, #0xcde
  43ce60:	bl	406c18 <log_internal_realm@plt>
  43ce64:	str	w0, [sp, #44]
  43ce68:	b	43ce80 <user_update_last_session_timer+0x300>
  43ce6c:	ldur	w0, [x29, #-40]
  43ce70:	bl	406c28 <abs@plt>
  43ce74:	mov	w8, wzr
  43ce78:	subs	w8, w8, w0, uxtb
  43ce7c:	str	w8, [sp, #44]
  43ce80:	ldr	w8, [sp, #44]
  43ce84:	stur	w8, [x29, #-48]
  43ce88:	mov	w8, wzr
  43ce8c:	mov	w0, w8
  43ce90:	bl	406c08 <log_get_max_level_realm@plt>
  43ce94:	cmp	w0, #0x7
  43ce98:	cset	w8, ge  // ge = tcont
  43ce9c:	mov	w9, #0x1                   	// #1
  43cea0:	eor	w8, w8, #0x1
  43cea4:	eor	w8, w8, w9
  43cea8:	and	w8, w8, #0x1
  43ceac:	mov	w1, w8
  43ceb0:	sxtw	x10, w1
  43ceb4:	cbz	x10, 43cf7c <user_update_last_session_timer+0x3fc>
  43ceb8:	mov	w8, #0x7                   	// #7
  43cebc:	str	w8, [sp, #108]
  43cec0:	str	wzr, [sp, #104]
  43cec4:	str	wzr, [sp, #100]
  43cec8:	ldr	w0, [sp, #100]
  43cecc:	bl	406c08 <log_get_max_level_realm@plt>
  43ced0:	ldr	w8, [sp, #108]
  43ced4:	and	w8, w8, #0x7
  43ced8:	cmp	w0, w8
  43cedc:	b.lt	43cf60 <user_update_last_session_timer+0x3e0>  // b.tstop
  43cee0:	ldr	w8, [sp, #100]
  43cee4:	ldr	w9, [sp, #108]
  43cee8:	orr	w0, w9, w8, lsl #10
  43ceec:	ldr	w1, [sp, #104]
  43cef0:	ldur	x10, [x29, #-8]
  43cef4:	ldr	x6, [x10, #16]
  43cef8:	ldur	x10, [x29, #-8]
  43cefc:	ldr	x10, [x10]
  43cf00:	ldr	x2, [x10, #240]
  43cf04:	add	x10, sp, #0x70
  43cf08:	str	w0, [sp, #40]
  43cf0c:	mov	x0, x10
  43cf10:	mov	x10, #0x40                  	// #64
  43cf14:	str	w1, [sp, #36]
  43cf18:	mov	x1, x10
  43cf1c:	mov	x3, #0x3e8                 	// #1000
  43cf20:	str	x6, [sp, #24]
  43cf24:	bl	407d78 <format_timespan@plt>
  43cf28:	ldr	w8, [sp, #40]
  43cf2c:	str	x0, [sp, #16]
  43cf30:	mov	w0, w8
  43cf34:	ldr	w1, [sp, #36]
  43cf38:	ldr	x2, [sp, #88]
  43cf3c:	mov	w3, #0x30b                 	// #779
  43cf40:	ldr	x4, [sp, #80]
  43cf44:	adrp	x5, 44a000 <_fini+0x9c30>
  43cf48:	add	x5, x5, #0xd15
  43cf4c:	ldr	x6, [sp, #24]
  43cf50:	ldr	x7, [sp, #16]
  43cf54:	bl	406c18 <log_internal_realm@plt>
  43cf58:	str	w0, [sp, #12]
  43cf5c:	b	43cf74 <user_update_last_session_timer+0x3f4>
  43cf60:	ldr	w0, [sp, #104]
  43cf64:	bl	406c28 <abs@plt>
  43cf68:	mov	w8, wzr
  43cf6c:	subs	w8, w8, w0, uxtb
  43cf70:	str	w8, [sp, #12]
  43cf74:	ldr	w8, [sp, #12]
  43cf78:	str	w8, [sp, #96]
  43cf7c:	ldp	x29, x30, [sp, #224]
  43cf80:	add	sp, sp, #0xf0
  43cf84:	ret

000000000043cf88 <user_stop_timeout_callback>:
  43cf88:	sub	sp, sp, #0x40
  43cf8c:	stp	x29, x30, [sp, #48]
  43cf90:	add	x29, sp, #0x30
  43cf94:	adrp	x8, 44a000 <_fini+0x9c30>
  43cf98:	add	x8, x8, #0x8be
  43cf9c:	add	x8, x8, #0x3
  43cfa0:	stur	x0, [x29, #-8]
  43cfa4:	stur	x1, [x29, #-16]
  43cfa8:	str	x2, [sp, #24]
  43cfac:	ldr	x9, [sp, #24]
  43cfb0:	str	x9, [sp, #16]
  43cfb4:	str	x8, [sp, #8]
  43cfb8:	ldr	x8, [sp, #16]
  43cfbc:	cmp	x8, #0x0
  43cfc0:	cset	w9, ne  // ne = any
  43cfc4:	mov	w10, #0x1                   	// #1
  43cfc8:	eor	w9, w9, #0x1
  43cfcc:	eor	w9, w9, w10
  43cfd0:	eor	w9, w9, w10
  43cfd4:	and	w9, w9, #0x1
  43cfd8:	mov	w0, w9
  43cfdc:	sxtw	x8, w0
  43cfe0:	cbz	x8, 43d008 <user_stop_timeout_callback+0x80>
  43cfe4:	mov	w8, wzr
  43cfe8:	mov	w0, w8
  43cfec:	adrp	x1, 443000 <_fini+0x2c30>
  43cff0:	add	x1, x1, #0x1dd
  43cff4:	ldr	x2, [sp, #8]
  43cff8:	mov	w3, #0x2dd                 	// #733
  43cffc:	adrp	x4, 44b000 <_fini+0xac30>
  43d000:	add	x4, x4, #0x21a
  43d004:	bl	406c68 <log_assert_failed_realm@plt>
  43d008:	ldr	x0, [sp, #16]
  43d00c:	bl	43b73c <user_add_to_gc_queue>
  43d010:	mov	w8, wzr
  43d014:	mov	w0, w8
  43d018:	ldp	x29, x30, [sp, #48]
  43d01c:	add	sp, sp, #0x40
  43d020:	ret

000000000043d024 <user_state_to_string>:
  43d024:	sub	sp, sp, #0x10
  43d028:	str	w0, [sp, #4]
  43d02c:	ldr	w8, [sp, #4]
  43d030:	cmp	w8, #0x0
  43d034:	cset	w8, lt  // lt = tstop
  43d038:	tbnz	w8, #0, 43d048 <user_state_to_string+0x24>
  43d03c:	ldr	w8, [sp, #4]
  43d040:	cmp	w8, #0x6
  43d044:	b.lt	43d054 <user_state_to_string+0x30>  // b.tstop
  43d048:	mov	x8, xzr
  43d04c:	str	x8, [sp, #8]
  43d050:	b	43d074 <user_state_to_string+0x50>
  43d054:	ldrsw	x8, [sp, #4]
  43d058:	mov	x9, #0x8                   	// #8
  43d05c:	mul	x8, x9, x8
  43d060:	adrp	x9, 45e000 <session_vtable+0x230>
  43d064:	add	x9, x9, #0xc48
  43d068:	add	x8, x9, x8
  43d06c:	ldr	x8, [x8]
  43d070:	str	x8, [sp, #8]
  43d074:	ldr	x0, [sp, #8]
  43d078:	add	sp, sp, #0x10
  43d07c:	ret

000000000043d080 <user_state_from_string>:
  43d080:	sub	sp, sp, #0x20
  43d084:	stp	x29, x30, [sp, #16]
  43d088:	add	x29, sp, #0x10
  43d08c:	adrp	x8, 45e000 <session_vtable+0x230>
  43d090:	add	x8, x8, #0xc48
  43d094:	mov	x1, #0x6                   	// #6
  43d098:	str	x0, [sp, #8]
  43d09c:	ldr	x2, [sp, #8]
  43d0a0:	mov	x0, x8
  43d0a4:	bl	4071f8 <string_table_lookup@plt>
  43d0a8:	ldp	x29, x30, [sp, #16]
  43d0ac:	add	sp, sp, #0x20
  43d0b0:	ret

000000000043d0b4 <config_parse_tmpfs_size>:
  43d0b4:	sub	sp, sp, #0xd0
  43d0b8:	stp	x29, x30, [sp, #192]
  43d0bc:	add	x29, sp, #0xc0
  43d0c0:	ldr	x8, [x29, #16]
  43d0c4:	ldr	x9, [x29, #24]
  43d0c8:	adrp	x10, 44a000 <_fini+0x9c30>
  43d0cc:	add	x10, x10, #0x8be
  43d0d0:	add	x10, x10, #0x3
  43d0d4:	adrp	x11, 44a000 <_fini+0x9c30>
  43d0d8:	add	x11, x11, #0xd5b
  43d0dc:	stur	x0, [x29, #-16]
  43d0e0:	stur	x1, [x29, #-24]
  43d0e4:	stur	w2, [x29, #-28]
  43d0e8:	stur	x3, [x29, #-40]
  43d0ec:	stur	w4, [x29, #-44]
  43d0f0:	stur	x5, [x29, #-56]
  43d0f4:	stur	w6, [x29, #-60]
  43d0f8:	stur	x7, [x29, #-72]
  43d0fc:	stur	x8, [x29, #-80]
  43d100:	stur	x9, [x29, #-88]
  43d104:	ldur	x8, [x29, #-80]
  43d108:	str	x8, [sp, #96]
  43d10c:	str	x10, [sp, #56]
  43d110:	str	x11, [sp, #48]
  43d114:	ldur	x8, [x29, #-24]
  43d118:	cmp	x8, #0x0
  43d11c:	cset	w9, ne  // ne = any
  43d120:	mov	w10, #0x1                   	// #1
  43d124:	eor	w9, w9, #0x1
  43d128:	eor	w9, w9, w10
  43d12c:	eor	w9, w9, w10
  43d130:	and	w9, w9, #0x1
  43d134:	mov	w0, w9
  43d138:	sxtw	x8, w0
  43d13c:	cbz	x8, 43d160 <config_parse_tmpfs_size+0xac>
  43d140:	mov	w8, wzr
  43d144:	mov	w0, w8
  43d148:	adrp	x1, 441000 <_fini+0xc30>
  43d14c:	add	x1, x1, #0xc94
  43d150:	ldr	x2, [sp, #56]
  43d154:	mov	w3, #0x329                 	// #809
  43d158:	ldr	x4, [sp, #48]
  43d15c:	bl	406c68 <log_assert_failed_realm@plt>
  43d160:	ldur	x8, [x29, #-56]
  43d164:	cmp	x8, #0x0
  43d168:	cset	w9, ne  // ne = any
  43d16c:	mov	w10, #0x1                   	// #1
  43d170:	eor	w9, w9, #0x1
  43d174:	eor	w9, w9, w10
  43d178:	eor	w9, w9, w10
  43d17c:	and	w9, w9, #0x1
  43d180:	mov	w0, w9
  43d184:	sxtw	x8, w0
  43d188:	cbz	x8, 43d1ac <config_parse_tmpfs_size+0xf8>
  43d18c:	mov	w8, wzr
  43d190:	mov	w0, w8
  43d194:	adrp	x1, 441000 <_fini+0xc30>
  43d198:	add	x1, x1, #0xd33
  43d19c:	ldr	x2, [sp, #56]
  43d1a0:	mov	w3, #0x32a                 	// #810
  43d1a4:	ldr	x4, [sp, #48]
  43d1a8:	bl	406c68 <log_assert_failed_realm@plt>
  43d1ac:	ldur	x8, [x29, #-72]
  43d1b0:	cmp	x8, #0x0
  43d1b4:	cset	w9, ne  // ne = any
  43d1b8:	mov	w10, #0x1                   	// #1
  43d1bc:	eor	w9, w9, #0x1
  43d1c0:	eor	w9, w9, w10
  43d1c4:	eor	w9, w9, w10
  43d1c8:	and	w9, w9, #0x1
  43d1cc:	mov	w0, w9
  43d1d0:	sxtw	x8, w0
  43d1d4:	cbz	x8, 43d1f8 <config_parse_tmpfs_size+0x144>
  43d1d8:	mov	w8, wzr
  43d1dc:	mov	w0, w8
  43d1e0:	adrp	x1, 441000 <_fini+0xc30>
  43d1e4:	add	x1, x1, #0xd3a
  43d1e8:	ldr	x2, [sp, #56]
  43d1ec:	mov	w3, #0x32b                 	// #811
  43d1f0:	ldr	x4, [sp, #48]
  43d1f4:	bl	406c68 <log_assert_failed_realm@plt>
  43d1f8:	ldur	x8, [x29, #-80]
  43d1fc:	cmp	x8, #0x0
  43d200:	cset	w9, ne  // ne = any
  43d204:	mov	w10, #0x1                   	// #1
  43d208:	eor	w9, w9, #0x1
  43d20c:	eor	w9, w9, w10
  43d210:	eor	w9, w9, w10
  43d214:	and	w9, w9, #0x1
  43d218:	mov	w0, w9
  43d21c:	sxtw	x8, w0
  43d220:	cbz	x8, 43d244 <config_parse_tmpfs_size+0x190>
  43d224:	mov	w8, wzr
  43d228:	mov	w0, w8
  43d22c:	adrp	x1, 441000 <_fini+0xc30>
  43d230:	add	x1, x1, #0xd41
  43d234:	ldr	x2, [sp, #56]
  43d238:	mov	w3, #0x32c                 	// #812
  43d23c:	ldr	x4, [sp, #48]
  43d240:	bl	406c68 <log_assert_failed_realm@plt>
  43d244:	ldur	x0, [x29, #-72]
  43d248:	bl	407d88 <parse_permille@plt>
  43d24c:	str	w0, [sp, #92]
  43d250:	ldr	w8, [sp, #92]
  43d254:	cmp	w8, #0x0
  43d258:	cset	w8, le
  43d25c:	tbnz	w8, #0, 43d284 <config_parse_tmpfs_size+0x1d0>
  43d260:	ldr	w8, [sp, #92]
  43d264:	cmp	w8, #0x3e8
  43d268:	b.ge	43d284 <config_parse_tmpfs_size+0x1d0>  // b.tcont
  43d26c:	ldrsw	x0, [sp, #92]
  43d270:	mov	x1, #0x3e8                 	// #1000
  43d274:	bl	4072a8 <physical_memory_scale@plt>
  43d278:	ldr	x8, [sp, #96]
  43d27c:	str	x0, [x8]
  43d280:	b	43d3a4 <config_parse_tmpfs_size+0x2f0>
  43d284:	ldur	x0, [x29, #-72]
  43d288:	mov	x1, #0x400                 	// #1024
  43d28c:	add	x2, sp, #0x50
  43d290:	bl	407d98 <parse_size@plt>
  43d294:	str	w0, [sp, #92]
  43d298:	ldr	w8, [sp, #92]
  43d29c:	cmp	w8, #0x0
  43d2a0:	cset	w8, lt  // lt = tstop
  43d2a4:	tbnz	w8, #0, 43d2d0 <config_parse_tmpfs_size+0x21c>
  43d2a8:	ldr	x8, [sp, #80]
  43d2ac:	cmp	x8, #0x0
  43d2b0:	cset	w9, ls  // ls = plast
  43d2b4:	tbnz	w9, #0, 43d2c8 <config_parse_tmpfs_size+0x214>
  43d2b8:	ldr	x8, [sp, #80]
  43d2bc:	ldr	x9, [sp, #80]
  43d2c0:	cmp	x8, x9
  43d2c4:	b.eq	43d2d0 <config_parse_tmpfs_size+0x21c>  // b.none
  43d2c8:	mov	w8, #0xffffffde            	// #-34
  43d2cc:	str	w8, [sp, #92]
  43d2d0:	ldr	w8, [sp, #92]
  43d2d4:	cmp	w8, #0x0
  43d2d8:	cset	w8, ge  // ge = tcont
  43d2dc:	tbnz	w8, #0, 43d37c <config_parse_tmpfs_size+0x2c8>
  43d2e0:	mov	w8, #0x3                   	// #3
  43d2e4:	str	w8, [sp, #76]
  43d2e8:	ldr	w8, [sp, #92]
  43d2ec:	str	w8, [sp, #72]
  43d2f0:	mov	w8, wzr
  43d2f4:	mov	w0, w8
  43d2f8:	bl	406c08 <log_get_max_level_realm@plt>
  43d2fc:	ldr	w8, [sp, #76]
  43d300:	and	w8, w8, #0x7
  43d304:	cmp	w0, w8
  43d308:	b.lt	43d358 <config_parse_tmpfs_size+0x2a4>  // b.tstop
  43d30c:	ldur	x0, [x29, #-16]
  43d310:	ldr	w1, [sp, #76]
  43d314:	ldur	x2, [x29, #-24]
  43d318:	ldur	w3, [x29, #-28]
  43d31c:	ldr	w4, [sp, #72]
  43d320:	ldur	x8, [x29, #-72]
  43d324:	ldr	x5, [sp, #56]
  43d328:	mov	w6, #0x33b                 	// #827
  43d32c:	adrp	x7, 44a000 <_fini+0x9c30>
  43d330:	add	x7, x7, #0xdee
  43d334:	mov	x9, sp
  43d338:	adrp	x10, 44a000 <_fini+0x9c30>
  43d33c:	add	x10, x10, #0xe06
  43d340:	str	x10, [x9]
  43d344:	mov	x9, sp
  43d348:	str	x8, [x9, #8]
  43d34c:	bl	407208 <log_syntax_internal@plt>
  43d350:	str	w0, [sp, #44]
  43d354:	b	43d36c <config_parse_tmpfs_size+0x2b8>
  43d358:	ldr	w0, [sp, #72]
  43d35c:	bl	406c28 <abs@plt>
  43d360:	mov	w8, wzr
  43d364:	subs	w8, w8, w0, uxtb
  43d368:	str	w8, [sp, #44]
  43d36c:	ldr	w8, [sp, #44]
  43d370:	str	w8, [sp, #68]
  43d374:	stur	wzr, [x29, #-4]
  43d378:	b	43d3a8 <config_parse_tmpfs_size+0x2f4>
  43d37c:	ldr	x0, [sp, #80]
  43d380:	str	x0, [sp, #32]
  43d384:	bl	407da8 <page_size@plt>
  43d388:	ldr	x8, [sp, #32]
  43d38c:	str	x0, [sp, #24]
  43d390:	mov	x0, x8
  43d394:	ldr	x1, [sp, #24]
  43d398:	bl	43d3b8 <ALIGN_TO>
  43d39c:	ldr	x8, [sp, #96]
  43d3a0:	str	x0, [x8]
  43d3a4:	stur	wzr, [x29, #-4]
  43d3a8:	ldur	w0, [x29, #-4]
  43d3ac:	ldp	x29, x30, [sp, #192]
  43d3b0:	add	sp, sp, #0xd0
  43d3b4:	ret

000000000043d3b8 <ALIGN_TO>:
  43d3b8:	sub	sp, sp, #0x10
  43d3bc:	str	x0, [sp, #8]
  43d3c0:	str	x1, [sp]
  43d3c4:	ldr	x8, [sp, #8]
  43d3c8:	ldr	x9, [sp]
  43d3cc:	add	x8, x8, x9
  43d3d0:	subs	x8, x8, #0x1
  43d3d4:	ldr	x9, [sp]
  43d3d8:	subs	x9, x9, #0x1
  43d3dc:	bic	x0, x8, x9
  43d3e0:	add	sp, sp, #0x10
  43d3e4:	ret

000000000043d3e8 <config_parse_compat_user_tasks_max>:
  43d3e8:	sub	sp, sp, #0xb0
  43d3ec:	stp	x29, x30, [sp, #160]
  43d3f0:	add	x29, sp, #0xa0
  43d3f4:	ldr	x8, [x29, #16]
  43d3f8:	ldr	x9, [x29, #24]
  43d3fc:	adrp	x10, 44a000 <_fini+0x9c30>
  43d400:	add	x10, x10, #0x8be
  43d404:	add	x10, x10, #0x3
  43d408:	adrp	x11, 44a000 <_fini+0x9c30>
  43d40c:	add	x11, x11, #0xe34
  43d410:	stur	x0, [x29, #-8]
  43d414:	stur	x1, [x29, #-16]
  43d418:	stur	w2, [x29, #-20]
  43d41c:	stur	x3, [x29, #-32]
  43d420:	stur	w4, [x29, #-36]
  43d424:	stur	x5, [x29, #-48]
  43d428:	stur	w6, [x29, #-52]
  43d42c:	stur	x7, [x29, #-64]
  43d430:	stur	x8, [x29, #-72]
  43d434:	str	x9, [sp, #80]
  43d438:	str	x10, [sp, #40]
  43d43c:	str	x11, [sp, #32]
  43d440:	ldur	x8, [x29, #-16]
  43d444:	cmp	x8, #0x0
  43d448:	cset	w9, ne  // ne = any
  43d44c:	mov	w10, #0x1                   	// #1
  43d450:	eor	w9, w9, #0x1
  43d454:	eor	w9, w9, w10
  43d458:	eor	w9, w9, w10
  43d45c:	and	w9, w9, #0x1
  43d460:	mov	w0, w9
  43d464:	sxtw	x8, w0
  43d468:	cbz	x8, 43d48c <config_parse_compat_user_tasks_max+0xa4>
  43d46c:	mov	w8, wzr
  43d470:	mov	w0, w8
  43d474:	adrp	x1, 441000 <_fini+0xc30>
  43d478:	add	x1, x1, #0xc94
  43d47c:	ldr	x2, [sp, #40]
  43d480:	mov	w3, #0x351                 	// #849
  43d484:	ldr	x4, [sp, #32]
  43d488:	bl	406c68 <log_assert_failed_realm@plt>
  43d48c:	ldur	x8, [x29, #-48]
  43d490:	cmp	x8, #0x0
  43d494:	cset	w9, ne  // ne = any
  43d498:	mov	w10, #0x1                   	// #1
  43d49c:	eor	w9, w9, #0x1
  43d4a0:	eor	w9, w9, w10
  43d4a4:	eor	w9, w9, w10
  43d4a8:	and	w9, w9, #0x1
  43d4ac:	mov	w0, w9
  43d4b0:	sxtw	x8, w0
  43d4b4:	cbz	x8, 43d4d8 <config_parse_compat_user_tasks_max+0xf0>
  43d4b8:	mov	w8, wzr
  43d4bc:	mov	w0, w8
  43d4c0:	adrp	x1, 441000 <_fini+0xc30>
  43d4c4:	add	x1, x1, #0xd33
  43d4c8:	ldr	x2, [sp, #40]
  43d4cc:	mov	w3, #0x352                 	// #850
  43d4d0:	ldr	x4, [sp, #32]
  43d4d4:	bl	406c68 <log_assert_failed_realm@plt>
  43d4d8:	ldur	x8, [x29, #-64]
  43d4dc:	cmp	x8, #0x0
  43d4e0:	cset	w9, ne  // ne = any
  43d4e4:	mov	w10, #0x1                   	// #1
  43d4e8:	eor	w9, w9, #0x1
  43d4ec:	eor	w9, w9, w10
  43d4f0:	eor	w9, w9, w10
  43d4f4:	and	w9, w9, #0x1
  43d4f8:	mov	w0, w9
  43d4fc:	sxtw	x8, w0
  43d500:	cbz	x8, 43d524 <config_parse_compat_user_tasks_max+0x13c>
  43d504:	mov	w8, wzr
  43d508:	mov	w0, w8
  43d50c:	adrp	x1, 441000 <_fini+0xc30>
  43d510:	add	x1, x1, #0xd3a
  43d514:	ldr	x2, [sp, #40]
  43d518:	mov	w3, #0x353                 	// #851
  43d51c:	ldr	x4, [sp, #32]
  43d520:	bl	406c68 <log_assert_failed_realm@plt>
  43d524:	mov	w8, #0x5                   	// #5
  43d528:	str	w8, [sp, #76]
  43d52c:	mov	w8, wzr
  43d530:	str	wzr, [sp, #72]
  43d534:	mov	w0, w8
  43d538:	bl	406c08 <log_get_max_level_realm@plt>
  43d53c:	ldr	w8, [sp, #76]
  43d540:	and	w8, w8, #0x7
  43d544:	cmp	w0, w8
  43d548:	b.lt	43d598 <config_parse_compat_user_tasks_max+0x1b0>  // b.tstop
  43d54c:	ldur	x0, [x29, #-8]
  43d550:	ldr	w1, [sp, #76]
  43d554:	ldur	x2, [x29, #-16]
  43d558:	ldur	w3, [x29, #-20]
  43d55c:	ldr	w4, [sp, #72]
  43d560:	ldur	x8, [x29, #-48]
  43d564:	ldr	x5, [sp, #40]
  43d568:	mov	w6, #0x357                 	// #855
  43d56c:	adrp	x7, 44a000 <_fini+0x9c30>
  43d570:	add	x7, x7, #0xed2
  43d574:	mov	x9, sp
  43d578:	adrp	x10, 44a000 <_fini+0x9c30>
  43d57c:	add	x10, x10, #0xef5
  43d580:	str	x10, [x9]
  43d584:	mov	x9, sp
  43d588:	str	x8, [x9, #8]
  43d58c:	bl	407208 <log_syntax_internal@plt>
  43d590:	str	w0, [sp, #28]
  43d594:	b	43d5ac <config_parse_compat_user_tasks_max+0x1c4>
  43d598:	ldr	w0, [sp, #72]
  43d59c:	bl	406c28 <abs@plt>
  43d5a0:	mov	w8, wzr
  43d5a4:	subs	w8, w8, w0, uxtb
  43d5a8:	str	w8, [sp, #28]
  43d5ac:	ldr	w8, [sp, #28]
  43d5b0:	str	w8, [sp, #68]
  43d5b4:	mov	w8, #0x6                   	// #6
  43d5b8:	str	w8, [sp, #64]
  43d5bc:	str	wzr, [sp, #60]
  43d5c0:	str	wzr, [sp, #56]
  43d5c4:	ldr	w0, [sp, #56]
  43d5c8:	bl	406c08 <log_get_max_level_realm@plt>
  43d5cc:	ldr	w8, [sp, #64]
  43d5d0:	and	w8, w8, #0x7
  43d5d4:	cmp	w0, w8
  43d5d8:	b.lt	43d614 <config_parse_compat_user_tasks_max+0x22c>  // b.tstop
  43d5dc:	ldr	w8, [sp, #56]
  43d5e0:	ldr	w9, [sp, #64]
  43d5e4:	orr	w0, w9, w8, lsl #10
  43d5e8:	ldr	w1, [sp, #60]
  43d5ec:	ldur	x6, [x29, #-64]
  43d5f0:	ldr	x2, [sp, #40]
  43d5f4:	mov	w3, #0x35b                 	// #859
  43d5f8:	adrp	x4, 44a000 <_fini+0x9c30>
  43d5fc:	add	x4, x4, #0xed2
  43d600:	adrp	x5, 44a000 <_fini+0x9c30>
  43d604:	add	x5, x5, #0xf1e
  43d608:	bl	406c18 <log_internal_realm@plt>
  43d60c:	str	w0, [sp, #24]
  43d610:	b	43d628 <config_parse_compat_user_tasks_max+0x240>
  43d614:	ldr	w0, [sp, #60]
  43d618:	bl	406c28 <abs@plt>
  43d61c:	mov	w8, wzr
  43d620:	subs	w8, w8, w0, uxtb
  43d624:	str	w8, [sp, #24]
  43d628:	ldr	w8, [sp, #24]
  43d62c:	str	w8, [sp, #52]
  43d630:	mov	w8, wzr
  43d634:	mov	w0, w8
  43d638:	ldp	x29, x30, [sp, #160]
  43d63c:	add	sp, sp, #0xb0
  43d640:	ret

000000000043d644 <fclosep>:
  43d644:	sub	sp, sp, #0x20
  43d648:	stp	x29, x30, [sp, #16]
  43d64c:	add	x29, sp, #0x10
  43d650:	str	x0, [sp, #8]
  43d654:	ldr	x8, [sp, #8]
  43d658:	ldr	x0, [x8]
  43d65c:	bl	4079b8 <safe_fclose@plt>
  43d660:	ldp	x29, x30, [sp, #16]
  43d664:	add	sp, sp, #0x20
  43d668:	ret

000000000043d66c <yes_no>:
  43d66c:	sub	sp, sp, #0x10
  43d670:	adrp	x8, 446000 <_fini+0x5c30>
  43d674:	add	x8, x8, #0x278
  43d678:	adrp	x9, 446000 <_fini+0x5c30>
  43d67c:	add	x9, x9, #0x275
  43d680:	and	w10, w0, #0x1
  43d684:	strb	w10, [sp, #15]
  43d688:	ldrb	w10, [sp, #15]
  43d68c:	tst	w10, #0x1
  43d690:	csel	x0, x8, x9, ne  // ne = any
  43d694:	add	sp, sp, #0x10
  43d698:	ret

000000000043d69c <timestamp_is_set>:
  43d69c:	sub	sp, sp, #0x10
  43d6a0:	str	x0, [sp, #8]
  43d6a4:	ldr	x8, [sp, #8]
  43d6a8:	cmp	x8, #0x0
  43d6ac:	cset	w9, ls  // ls = plast
  43d6b0:	mov	w10, #0x0                   	// #0
  43d6b4:	str	w10, [sp, #4]
  43d6b8:	tbnz	w9, #0, 43d6d0 <timestamp_is_set+0x34>
  43d6bc:	ldr	x8, [sp, #8]
  43d6c0:	mov	x9, #0xffffffffffffffff    	// #-1
  43d6c4:	cmp	x8, x9
  43d6c8:	cset	w10, ne  // ne = any
  43d6cc:	str	w10, [sp, #4]
  43d6d0:	ldr	w8, [sp, #4]
  43d6d4:	and	w0, w8, #0x1
  43d6d8:	add	sp, sp, #0x10
  43d6dc:	ret

000000000043d6e0 <logind_wall_tty_filter>:
  43d6e0:	sub	sp, sp, #0x40
  43d6e4:	stp	x29, x30, [sp, #48]
  43d6e8:	add	x29, sp, #0x30
  43d6ec:	adrp	x8, 44b000 <_fini+0xac30>
  43d6f0:	add	x8, x8, #0x270
  43d6f4:	add	x2, x8, #0x3
  43d6f8:	stur	x0, [x29, #-16]
  43d6fc:	str	x1, [sp, #24]
  43d700:	ldr	x8, [sp, #24]
  43d704:	str	x8, [sp, #16]
  43d708:	str	x2, [sp]
  43d70c:	ldr	x8, [sp, #16]
  43d710:	cmp	x8, #0x0
  43d714:	cset	w9, ne  // ne = any
  43d718:	mov	w10, #0x1                   	// #1
  43d71c:	eor	w9, w9, #0x1
  43d720:	eor	w9, w9, w10
  43d724:	eor	w9, w9, w10
  43d728:	and	w9, w9, #0x1
  43d72c:	mov	w0, w9
  43d730:	sxtw	x8, w0
  43d734:	cbz	x8, 43d75c <logind_wall_tty_filter+0x7c>
  43d738:	mov	w8, wzr
  43d73c:	mov	w0, w8
  43d740:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  43d744:	add	x1, x1, #0x5ef
  43d748:	ldr	x2, [sp]
  43d74c:	mov	w3, #0x30                  	// #48
  43d750:	adrp	x4, 44b000 <_fini+0xac30>
  43d754:	add	x4, x4, #0x28b
  43d758:	bl	406c68 <log_assert_failed_realm@plt>
  43d75c:	ldr	x8, [sp, #16]
  43d760:	ldr	x8, [x8, #312]
  43d764:	cbnz	x8, 43d778 <logind_wall_tty_filter+0x98>
  43d768:	mov	w8, #0x1                   	// #1
  43d76c:	and	w8, w8, #0x1
  43d770:	sturb	w8, [x29, #-1]
  43d774:	b	43d7cc <logind_wall_tty_filter+0xec>
  43d778:	ldur	x0, [x29, #-16]
  43d77c:	adrp	x1, 442000 <_fini+0x1c30>
  43d780:	add	x1, x1, #0xb32
  43d784:	bl	407418 <path_startswith@plt>
  43d788:	str	x0, [sp, #8]
  43d78c:	ldr	x8, [sp, #8]
  43d790:	cbnz	x8, 43d7a4 <logind_wall_tty_filter+0xc4>
  43d794:	mov	w8, #0x1                   	// #1
  43d798:	and	w8, w8, #0x1
  43d79c:	sturb	w8, [x29, #-1]
  43d7a0:	b	43d7cc <logind_wall_tty_filter+0xec>
  43d7a4:	ldr	x0, [sp, #8]
  43d7a8:	ldr	x8, [sp, #16]
  43d7ac:	ldr	x1, [x8, #312]
  43d7b0:	bl	407158 <strcmp@plt>
  43d7b4:	cmp	w0, #0x0
  43d7b8:	cset	w9, eq  // eq = none
  43d7bc:	mov	w10, #0x1                   	// #1
  43d7c0:	eor	w9, w9, #0x1
  43d7c4:	and	w9, w9, w10
  43d7c8:	sturb	w9, [x29, #-1]
  43d7cc:	ldurb	w8, [x29, #-1]
  43d7d0:	and	w0, w8, #0x1
  43d7d4:	ldp	x29, x30, [sp, #48]
  43d7d8:	add	sp, sp, #0x40
  43d7dc:	ret

000000000043d7e0 <manager_setup_wall_message_timer>:
  43d7e0:	sub	sp, sp, #0x90
  43d7e4:	stp	x29, x30, [sp, #128]
  43d7e8:	add	x29, sp, #0x80
  43d7ec:	adrp	x8, 44b000 <_fini+0xac30>
  43d7f0:	add	x8, x8, #0x270
  43d7f4:	add	x8, x8, #0x3
  43d7f8:	adrp	x9, 44b000 <_fini+0xac30>
  43d7fc:	add	x9, x9, #0x2ee
  43d800:	stur	x0, [x29, #-16]
  43d804:	str	x8, [sp, #32]
  43d808:	str	x9, [sp, #24]
  43d80c:	ldur	x8, [x29, #-16]
  43d810:	cmp	x8, #0x0
  43d814:	cset	w9, ne  // ne = any
  43d818:	mov	w10, #0x1                   	// #1
  43d81c:	eor	w9, w9, #0x1
  43d820:	eor	w9, w9, w10
  43d824:	eor	w9, w9, w10
  43d828:	and	w9, w9, #0x1
  43d82c:	mov	w0, w9
  43d830:	sxtw	x8, w0
  43d834:	cbz	x8, 43d85c <manager_setup_wall_message_timer+0x7c>
  43d838:	mov	w8, wzr
  43d83c:	mov	w0, w8
  43d840:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  43d844:	add	x1, x1, #0x5ef
  43d848:	ldr	x2, [sp, #32]
  43d84c:	mov	w3, #0x7f                  	// #127
  43d850:	adrp	x4, 44b000 <_fini+0xac30>
  43d854:	add	x4, x4, #0x2be
  43d858:	bl	406c68 <log_assert_failed_realm@plt>
  43d85c:	mov	w8, wzr
  43d860:	mov	w0, w8
  43d864:	bl	406ca8 <now@plt>
  43d868:	stur	x0, [x29, #-24]
  43d86c:	ldur	x9, [x29, #-16]
  43d870:	ldr	x9, [x9, #288]
  43d874:	stur	x9, [x29, #-32]
  43d878:	ldur	x9, [x29, #-16]
  43d87c:	ldr	x0, [x9, #280]
  43d880:	bl	43db64 <isempty>
  43d884:	tbnz	w0, #0, 43d88c <manager_setup_wall_message_timer+0xac>
  43d888:	b	43d8a0 <manager_setup_wall_message_timer+0xc0>
  43d88c:	ldur	x0, [x29, #-16]
  43d890:	ldur	x1, [x29, #-24]
  43d894:	bl	43dba4 <warn_wall>
  43d898:	stur	wzr, [x29, #-4]
  43d89c:	b	43db54 <manager_setup_wall_message_timer+0x374>
  43d8a0:	ldur	x8, [x29, #-32]
  43d8a4:	ldur	x9, [x29, #-24]
  43d8a8:	cmp	x8, x9
  43d8ac:	b.cs	43d8b8 <manager_setup_wall_message_timer+0xd8>  // b.hs, b.nlast
  43d8b0:	stur	wzr, [x29, #-4]
  43d8b4:	b	43db54 <manager_setup_wall_message_timer+0x374>
  43d8b8:	ldur	x8, [x29, #-32]
  43d8bc:	ldur	x9, [x29, #-24]
  43d8c0:	subs	x8, x8, x9
  43d8c4:	mov	x9, #0xe900                	// #59648
  43d8c8:	movk	x9, #0x35a4, lsl #16
  43d8cc:	cmp	x8, x9
  43d8d0:	b.cs	43d8f4 <manager_setup_wall_message_timer+0x114>  // b.hs, b.nlast
  43d8d4:	ldur	x0, [x29, #-16]
  43d8d8:	ldur	x1, [x29, #-24]
  43d8dc:	bl	43dba4 <warn_wall>
  43d8e0:	stur	w0, [x29, #-36]
  43d8e4:	ldur	w8, [x29, #-36]
  43d8e8:	cbnz	w8, 43d8f4 <manager_setup_wall_message_timer+0x114>
  43d8ec:	stur	wzr, [x29, #-4]
  43d8f0:	b	43db54 <manager_setup_wall_message_timer+0x374>
  43d8f4:	ldur	x0, [x29, #-24]
  43d8f8:	ldur	x1, [x29, #-32]
  43d8fc:	bl	43dde0 <when_wall>
  43d900:	stur	x0, [x29, #-32]
  43d904:	ldur	x8, [x29, #-32]
  43d908:	cbnz	x8, 43d914 <manager_setup_wall_message_timer+0x134>
  43d90c:	stur	wzr, [x29, #-4]
  43d910:	b	43db54 <manager_setup_wall_message_timer+0x374>
  43d914:	ldur	x8, [x29, #-16]
  43d918:	ldr	x8, [x8, #352]
  43d91c:	cbz	x8, 43da7c <manager_setup_wall_message_timer+0x29c>
  43d920:	ldur	x8, [x29, #-16]
  43d924:	ldr	x0, [x8, #352]
  43d928:	ldur	x8, [x29, #-24]
  43d92c:	ldur	x9, [x29, #-32]
  43d930:	add	x1, x8, x9
  43d934:	bl	407048 <sd_event_source_set_time@plt>
  43d938:	stur	w0, [x29, #-36]
  43d93c:	ldur	w10, [x29, #-36]
  43d940:	cmp	w10, #0x0
  43d944:	cset	w10, ge  // ge = tcont
  43d948:	tbnz	w10, #0, 43d9d0 <manager_setup_wall_message_timer+0x1f0>
  43d94c:	mov	w8, #0x3                   	// #3
  43d950:	stur	w8, [x29, #-40]
  43d954:	ldur	w8, [x29, #-36]
  43d958:	stur	w8, [x29, #-44]
  43d95c:	stur	wzr, [x29, #-48]
  43d960:	ldur	w0, [x29, #-48]
  43d964:	bl	406c08 <log_get_max_level_realm@plt>
  43d968:	ldur	w8, [x29, #-40]
  43d96c:	and	w8, w8, #0x7
  43d970:	cmp	w0, w8
  43d974:	b.lt	43d9a8 <manager_setup_wall_message_timer+0x1c8>  // b.tstop
  43d978:	ldur	w8, [x29, #-48]
  43d97c:	ldur	w9, [x29, #-40]
  43d980:	orr	w0, w9, w8, lsl #10
  43d984:	ldur	w1, [x29, #-44]
  43d988:	ldr	x2, [sp, #32]
  43d98c:	mov	w3, #0x9c                  	// #156
  43d990:	ldr	x4, [sp, #24]
  43d994:	adrp	x5, 44b000 <_fini+0xac30>
  43d998:	add	x5, x5, #0x30f
  43d99c:	bl	406c18 <log_internal_realm@plt>
  43d9a0:	str	w0, [sp, #20]
  43d9a4:	b	43d9bc <manager_setup_wall_message_timer+0x1dc>
  43d9a8:	ldur	w0, [x29, #-44]
  43d9ac:	bl	406c28 <abs@plt>
  43d9b0:	mov	w8, wzr
  43d9b4:	subs	w8, w8, w0, uxtb
  43d9b8:	str	w8, [sp, #20]
  43d9bc:	ldr	w8, [sp, #20]
  43d9c0:	stur	w8, [x29, #-52]
  43d9c4:	ldur	w8, [x29, #-52]
  43d9c8:	stur	w8, [x29, #-4]
  43d9cc:	b	43db54 <manager_setup_wall_message_timer+0x374>
  43d9d0:	ldur	x8, [x29, #-16]
  43d9d4:	ldr	x0, [x8, #352]
  43d9d8:	mov	w1, #0xffffffff            	// #-1
  43d9dc:	bl	407058 <sd_event_source_set_enabled@plt>
  43d9e0:	stur	w0, [x29, #-36]
  43d9e4:	ldur	w9, [x29, #-36]
  43d9e8:	cmp	w9, #0x0
  43d9ec:	cset	w9, ge  // ge = tcont
  43d9f0:	tbnz	w9, #0, 43da78 <manager_setup_wall_message_timer+0x298>
  43d9f4:	mov	w8, #0x3                   	// #3
  43d9f8:	stur	w8, [x29, #-56]
  43d9fc:	ldur	w8, [x29, #-36]
  43da00:	stur	w8, [x29, #-60]
  43da04:	str	wzr, [sp, #64]
  43da08:	ldr	w0, [sp, #64]
  43da0c:	bl	406c08 <log_get_max_level_realm@plt>
  43da10:	ldur	w8, [x29, #-56]
  43da14:	and	w8, w8, #0x7
  43da18:	cmp	w0, w8
  43da1c:	b.lt	43da50 <manager_setup_wall_message_timer+0x270>  // b.tstop
  43da20:	ldr	w8, [sp, #64]
  43da24:	ldur	w9, [x29, #-56]
  43da28:	orr	w0, w9, w8, lsl #10
  43da2c:	ldur	w1, [x29, #-60]
  43da30:	ldr	x2, [sp, #32]
  43da34:	mov	w3, #0xa0                  	// #160
  43da38:	ldr	x4, [sp, #24]
  43da3c:	adrp	x5, 44b000 <_fini+0xac30>
  43da40:	add	x5, x5, #0x335
  43da44:	bl	406c18 <log_internal_realm@plt>
  43da48:	str	w0, [sp, #16]
  43da4c:	b	43da64 <manager_setup_wall_message_timer+0x284>
  43da50:	ldur	w0, [x29, #-60]
  43da54:	bl	406c28 <abs@plt>
  43da58:	mov	w8, wzr
  43da5c:	subs	w8, w8, w0, uxtb
  43da60:	str	w8, [sp, #16]
  43da64:	ldr	w8, [sp, #16]
  43da68:	str	w8, [sp, #60]
  43da6c:	ldr	w8, [sp, #60]
  43da70:	stur	w8, [x29, #-4]
  43da74:	b	43db54 <manager_setup_wall_message_timer+0x374>
  43da78:	b	43db50 <manager_setup_wall_message_timer+0x370>
  43da7c:	ldur	x8, [x29, #-16]
  43da80:	ldr	x0, [x8]
  43da84:	ldur	x8, [x29, #-16]
  43da88:	add	x1, x8, #0x160
  43da8c:	ldur	x8, [x29, #-24]
  43da90:	ldur	x9, [x29, #-32]
  43da94:	add	x3, x8, x9
  43da98:	ldur	x6, [x29, #-16]
  43da9c:	mov	w10, wzr
  43daa0:	mov	w2, w10
  43daa4:	mov	x8, xzr
  43daa8:	mov	x4, x8
  43daac:	adrp	x5, 43d000 <user_stop_timeout_callback+0x78>
  43dab0:	add	x5, x5, #0xec0
  43dab4:	bl	407028 <sd_event_add_time@plt>
  43dab8:	stur	w0, [x29, #-36]
  43dabc:	ldur	w10, [x29, #-36]
  43dac0:	cmp	w10, #0x0
  43dac4:	cset	w10, ge  // ge = tcont
  43dac8:	tbnz	w10, #0, 43db50 <manager_setup_wall_message_timer+0x370>
  43dacc:	mov	w8, #0x3                   	// #3
  43dad0:	str	w8, [sp, #56]
  43dad4:	ldur	w8, [x29, #-36]
  43dad8:	str	w8, [sp, #52]
  43dadc:	str	wzr, [sp, #48]
  43dae0:	ldr	w0, [sp, #48]
  43dae4:	bl	406c08 <log_get_max_level_realm@plt>
  43dae8:	ldr	w8, [sp, #56]
  43daec:	and	w8, w8, #0x7
  43daf0:	cmp	w0, w8
  43daf4:	b.lt	43db28 <manager_setup_wall_message_timer+0x348>  // b.tstop
  43daf8:	ldr	w8, [sp, #48]
  43dafc:	ldr	w9, [sp, #56]
  43db00:	orr	w0, w9, w8, lsl #10
  43db04:	ldr	w1, [sp, #52]
  43db08:	ldr	x2, [sp, #32]
  43db0c:	mov	w3, #0xa5                  	// #165
  43db10:	ldr	x4, [sp, #24]
  43db14:	adrp	x5, 44b000 <_fini+0xac30>
  43db18:	add	x5, x5, #0x35e
  43db1c:	bl	406c18 <log_internal_realm@plt>
  43db20:	str	w0, [sp, #12]
  43db24:	b	43db3c <manager_setup_wall_message_timer+0x35c>
  43db28:	ldr	w0, [sp, #52]
  43db2c:	bl	406c28 <abs@plt>
  43db30:	mov	w8, wzr
  43db34:	subs	w8, w8, w0, uxtb
  43db38:	str	w8, [sp, #12]
  43db3c:	ldr	w8, [sp, #12]
  43db40:	str	w8, [sp, #44]
  43db44:	ldr	w8, [sp, #44]
  43db48:	stur	w8, [x29, #-4]
  43db4c:	b	43db54 <manager_setup_wall_message_timer+0x374>
  43db50:	stur	wzr, [x29, #-4]
  43db54:	ldur	w0, [x29, #-4]
  43db58:	ldp	x29, x30, [sp, #128]
  43db5c:	add	sp, sp, #0x90
  43db60:	ret

000000000043db64 <isempty>:
  43db64:	sub	sp, sp, #0x10
  43db68:	str	x0, [sp, #8]
  43db6c:	ldr	x8, [sp, #8]
  43db70:	mov	w9, #0x1                   	// #1
  43db74:	str	w9, [sp, #4]
  43db78:	cbz	x8, 43db94 <isempty+0x30>
  43db7c:	ldr	x8, [sp, #8]
  43db80:	ldrb	w9, [x8]
  43db84:	cmp	w9, #0x0
  43db88:	cset	w9, ne  // ne = any
  43db8c:	eor	w9, w9, #0x1
  43db90:	str	w9, [sp, #4]
  43db94:	ldr	w8, [sp, #4]
  43db98:	and	w0, w8, #0x1
  43db9c:	add	sp, sp, #0x10
  43dba0:	ret

000000000043dba4 <warn_wall>:
  43dba4:	sub	sp, sp, #0xb0
  43dba8:	stp	x29, x30, [sp, #160]
  43dbac:	add	x29, sp, #0xa0
  43dbb0:	mov	x2, #0x26                  	// #38
  43dbb4:	mov	x8, xzr
  43dbb8:	mov	w9, wzr
  43dbbc:	adrp	x10, 44b000 <_fini+0xac30>
  43dbc0:	add	x10, x10, #0x270
  43dbc4:	add	x10, x10, #0x3
  43dbc8:	sub	x11, x29, #0x3e
  43dbcc:	stur	x0, [x29, #-16]
  43dbd0:	stur	x1, [x29, #-24]
  43dbd4:	mov	x0, x11
  43dbd8:	mov	w1, w9
  43dbdc:	str	x8, [sp, #56]
  43dbe0:	str	x10, [sp, #48]
  43dbe4:	bl	406c98 <memset@plt>
  43dbe8:	ldr	x8, [sp, #56]
  43dbec:	stur	x8, [x29, #-72]
  43dbf0:	str	x8, [sp, #80]
  43dbf4:	ldur	x8, [x29, #-16]
  43dbf8:	cmp	x8, #0x0
  43dbfc:	cset	w9, ne  // ne = any
  43dc00:	mov	w10, #0x1                   	// #1
  43dc04:	eor	w9, w9, #0x1
  43dc08:	eor	w9, w9, w10
  43dc0c:	eor	w9, w9, w10
  43dc10:	and	w9, w9, #0x1
  43dc14:	mov	w0, w9
  43dc18:	sxtw	x8, w0
  43dc1c:	cbz	x8, 43dc44 <warn_wall+0xa0>
  43dc20:	mov	w8, wzr
  43dc24:	mov	w0, w8
  43dc28:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  43dc2c:	add	x1, x1, #0x5ef
  43dc30:	ldr	x2, [sp, #48]
  43dc34:	mov	w3, #0x42                  	// #66
  43dc38:	adrp	x4, 44b000 <_fini+0xac30>
  43dc3c:	add	x4, x4, #0x37d
  43dc40:	bl	406c68 <log_assert_failed_realm@plt>
  43dc44:	ldur	x8, [x29, #-16]
  43dc48:	ldr	w9, [x8, #344]
  43dc4c:	cbnz	w9, 43dc60 <warn_wall+0xbc>
  43dc50:	stur	wzr, [x29, #-4]
  43dc54:	mov	w8, #0x1                   	// #1
  43dc58:	str	w8, [sp, #64]
  43dc5c:	b	43ddc0 <warn_wall+0x21c>
  43dc60:	ldur	x8, [x29, #-16]
  43dc64:	ldr	x8, [x8, #288]
  43dc68:	ldur	x9, [x29, #-24]
  43dc6c:	cmp	x8, x9
  43dc70:	cset	w10, hi  // hi = pmore
  43dc74:	and	w10, w10, #0x1
  43dc78:	mov	w0, w10
  43dc7c:	sxtw	x8, w0
  43dc80:	str	x8, [sp, #72]
  43dc84:	ldur	x8, [x29, #-16]
  43dc88:	ldr	x0, [x8, #336]
  43dc8c:	bl	43e180 <strempty>
  43dc90:	ldur	x8, [x29, #-16]
  43dc94:	ldr	x8, [x8, #336]
  43dc98:	str	x0, [sp, #40]
  43dc9c:	mov	x0, x8
  43dca0:	bl	43db64 <isempty>
  43dca4:	adrp	x8, 44a000 <_fini+0x9c30>
  43dca8:	add	x8, x8, #0x56
  43dcac:	adrp	x9, 443000 <_fini+0x2c30>
  43dcb0:	add	x9, x9, #0x467
  43dcb4:	tst	w0, #0x1
  43dcb8:	csel	x3, x9, x8, ne  // ne = any
  43dcbc:	ldur	x8, [x29, #-16]
  43dcc0:	ldr	x4, [x8, #280]
  43dcc4:	ldr	x8, [sp, #72]
  43dcc8:	adrp	x9, 44b000 <_fini+0xac30>
  43dccc:	add	x9, x9, #0x3cc
  43dcd0:	adrp	x11, 44b000 <_fini+0xac30>
  43dcd4:	add	x11, x11, #0x3c8
  43dcd8:	cmp	x8, #0x0
  43dcdc:	csel	x5, x11, x9, ne  // ne = any
  43dce0:	ldr	x8, [sp, #72]
  43dce4:	str	x3, [sp, #32]
  43dce8:	str	x4, [sp, #24]
  43dcec:	str	x5, [sp, #16]
  43dcf0:	cbz	x8, 43dd10 <warn_wall+0x16c>
  43dcf4:	ldur	x8, [x29, #-16]
  43dcf8:	ldr	x2, [x8, #288]
  43dcfc:	sub	x0, x29, #0x3e
  43dd00:	mov	x1, #0x26                  	// #38
  43dd04:	bl	407db8 <format_timestamp@plt>
  43dd08:	str	x0, [sp, #8]
  43dd0c:	b	43dd1c <warn_wall+0x178>
  43dd10:	adrp	x8, 443000 <_fini+0x2c30>
  43dd14:	add	x8, x8, #0x467
  43dd18:	str	x8, [sp, #8]
  43dd1c:	ldr	x8, [sp, #8]
  43dd20:	sub	x0, x29, #0x48
  43dd24:	adrp	x1, 44b000 <_fini+0xac30>
  43dd28:	add	x1, x1, #0x39e
  43dd2c:	ldr	x2, [sp, #40]
  43dd30:	ldr	x3, [sp, #32]
  43dd34:	ldr	x4, [sp, #24]
  43dd38:	ldr	x5, [sp, #16]
  43dd3c:	mov	x6, x8
  43dd40:	bl	406ff8 <asprintf@plt>
  43dd44:	str	w0, [sp, #68]
  43dd48:	ldr	w9, [sp, #68]
  43dd4c:	cmp	w9, #0x0
  43dd50:	cset	w9, ge  // ge = tcont
  43dd54:	tbnz	w9, #0, 43dd84 <warn_wall+0x1e0>
  43dd58:	mov	w8, wzr
  43dd5c:	mov	w0, w8
  43dd60:	ldr	x1, [sp, #48]
  43dd64:	mov	w2, #0x50                  	// #80
  43dd68:	adrp	x3, 44b000 <_fini+0xac30>
  43dd6c:	add	x3, x3, #0x3d0
  43dd70:	bl	407008 <log_oom_internal@plt>
  43dd74:	stur	wzr, [x29, #-4]
  43dd78:	mov	w8, #0x1                   	// #1
  43dd7c:	str	w8, [sp, #64]
  43dd80:	b	43ddc0 <warn_wall+0x21c>
  43dd84:	ldur	x8, [x29, #-16]
  43dd88:	ldr	w0, [x8, #304]
  43dd8c:	bl	4071c8 <uid_to_name@plt>
  43dd90:	str	x0, [sp, #80]
  43dd94:	ldur	x0, [x29, #-72]
  43dd98:	ldr	x1, [sp, #80]
  43dd9c:	ldur	x8, [x29, #-16]
  43dda0:	ldr	x2, [x8, #312]
  43dda4:	ldur	x4, [x29, #-16]
  43dda8:	adrp	x3, 45f000 <logind_gperf_lookup.wordlist+0x388>
  43ddac:	ldr	x3, [x3, #1392]
  43ddb0:	bl	407728 <utmp_wall@plt>
  43ddb4:	mov	w9, #0x1                   	// #1
  43ddb8:	stur	w9, [x29, #-4]
  43ddbc:	str	w9, [sp, #64]
  43ddc0:	add	x0, sp, #0x50
  43ddc4:	bl	43e158 <freep>
  43ddc8:	sub	x0, x29, #0x48
  43ddcc:	bl	43e158 <freep>
  43ddd0:	ldur	w0, [x29, #-4]
  43ddd4:	ldp	x29, x30, [sp, #160]
  43ddd8:	add	sp, sp, #0xb0
  43dddc:	ret

000000000043dde0 <when_wall>:
  43dde0:	sub	sp, sp, #0x30
  43dde4:	str	x0, [sp, #32]
  43dde8:	str	x1, [sp, #24]
  43ddec:	ldr	x8, [sp, #32]
  43ddf0:	ldr	x9, [sp, #24]
  43ddf4:	cmp	x8, x9
  43ddf8:	b.cc	43de04 <when_wall+0x24>  // b.lo, b.ul, b.last
  43ddfc:	str	xzr, [sp, #40]
  43de00:	b	43deb4 <when_wall+0xd4>
  43de04:	ldr	x8, [sp, #24]
  43de08:	ldr	x9, [sp, #32]
  43de0c:	subs	x8, x8, x9
  43de10:	str	x8, [sp, #16]
  43de14:	mov	w10, #0x1                   	// #1
  43de18:	str	w10, [sp, #12]
  43de1c:	ldr	w8, [sp, #12]
  43de20:	mov	w9, w8
  43de24:	cmp	x9, #0x13
  43de28:	b.cs	43de98 <when_wall+0xb8>  // b.hs, b.nlast
  43de2c:	ldr	w8, [sp, #12]
  43de30:	mov	w9, w8
  43de34:	adrp	x10, 44b000 <_fini+0xac30>
  43de38:	add	x10, x10, #0xc78
  43de3c:	ldrsw	x9, [x10, x9, lsl #2]
  43de40:	mov	x10, #0x8700                	// #34560
  43de44:	movk	x10, #0x393, lsl #16
  43de48:	mul	x9, x9, x10
  43de4c:	ldr	x10, [sp, #16]
  43de50:	cmp	x9, x10
  43de54:	b.cc	43de88 <when_wall+0xa8>  // b.lo, b.ul, b.last
  43de58:	ldr	x8, [sp, #16]
  43de5c:	ldr	w9, [sp, #12]
  43de60:	subs	w9, w9, #0x1
  43de64:	adrp	x10, 44b000 <_fini+0xac30>
  43de68:	add	x10, x10, #0xc78
  43de6c:	ldrsw	x10, [x10, w9, uxtw #2]
  43de70:	mov	x11, #0x8700                	// #34560
  43de74:	movk	x11, #0x393, lsl #16
  43de78:	mul	x10, x10, x11
  43de7c:	subs	x8, x8, x10
  43de80:	str	x8, [sp, #40]
  43de84:	b	43deb4 <when_wall+0xd4>
  43de88:	ldr	w8, [sp, #12]
  43de8c:	add	w8, w8, #0x1
  43de90:	str	w8, [sp, #12]
  43de94:	b	43de1c <when_wall+0x3c>
  43de98:	ldr	x8, [sp, #16]
  43de9c:	mov	x9, #0xa400                	// #41984
  43dea0:	movk	x9, #0xd693, lsl #16
  43dea4:	udiv	x10, x8, x9
  43dea8:	mul	x9, x10, x9
  43deac:	subs	x8, x8, x9
  43deb0:	str	x8, [sp, #40]
  43deb4:	ldr	x0, [sp, #40]
  43deb8:	add	sp, sp, #0x30
  43debc:	ret

000000000043dec0 <wall_message_timeout_handler>:
  43dec0:	sub	sp, sp, #0x80
  43dec4:	stp	x29, x30, [sp, #112]
  43dec8:	add	x29, sp, #0x70
  43decc:	adrp	x8, 44b000 <_fini+0xac30>
  43ded0:	add	x8, x8, #0x270
  43ded4:	add	x8, x8, #0x3
  43ded8:	stur	x0, [x29, #-16]
  43dedc:	stur	x1, [x29, #-24]
  43dee0:	stur	x2, [x29, #-32]
  43dee4:	ldur	x9, [x29, #-32]
  43dee8:	stur	x9, [x29, #-40]
  43deec:	str	x8, [sp, #8]
  43def0:	ldur	x8, [x29, #-40]
  43def4:	cmp	x8, #0x0
  43def8:	cset	w9, ne  // ne = any
  43defc:	mov	w10, #0x1                   	// #1
  43df00:	eor	w9, w9, #0x1
  43df04:	eor	w9, w9, w10
  43df08:	eor	w9, w9, w10
  43df0c:	and	w9, w9, #0x1
  43df10:	mov	w0, w9
  43df14:	sxtw	x8, w0
  43df18:	cbz	x8, 43df40 <wall_message_timeout_handler+0x80>
  43df1c:	mov	w8, wzr
  43df20:	mov	w0, w8
  43df24:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  43df28:	add	x1, x1, #0x5ef
  43df2c:	ldr	x2, [sp, #8]
  43df30:	mov	w3, #0x63                  	// #99
  43df34:	adrp	x4, 44b000 <_fini+0xac30>
  43df38:	add	x4, x4, #0x3da
  43df3c:	bl	406c68 <log_assert_failed_realm@plt>
  43df40:	ldur	x8, [x29, #-16]
  43df44:	ldur	x9, [x29, #-40]
  43df48:	ldr	x9, [x9, #352]
  43df4c:	cmp	x8, x9
  43df50:	cset	w10, eq  // eq = none
  43df54:	mov	w11, #0x1                   	// #1
  43df58:	eor	w10, w10, #0x1
  43df5c:	eor	w10, w10, w11
  43df60:	eor	w10, w10, w11
  43df64:	and	w10, w10, #0x1
  43df68:	mov	w0, w10
  43df6c:	sxtw	x8, w0
  43df70:	cbz	x8, 43df98 <wall_message_timeout_handler+0xd8>
  43df74:	mov	w8, wzr
  43df78:	mov	w0, w8
  43df7c:	adrp	x1, 44b000 <_fini+0xac30>
  43df80:	add	x1, x1, #0x420
  43df84:	ldr	x2, [sp, #8]
  43df88:	mov	w3, #0x64                  	// #100
  43df8c:	adrp	x4, 44b000 <_fini+0xac30>
  43df90:	add	x4, x4, #0x3da
  43df94:	bl	406c68 <log_assert_failed_realm@plt>
  43df98:	mov	w8, wzr
  43df9c:	mov	w0, w8
  43dfa0:	bl	406ca8 <now@plt>
  43dfa4:	stur	x0, [x29, #-48]
  43dfa8:	ldur	x0, [x29, #-40]
  43dfac:	ldur	x1, [x29, #-48]
  43dfb0:	bl	43dba4 <warn_wall>
  43dfb4:	str	w0, [sp, #52]
  43dfb8:	ldr	w8, [sp, #52]
  43dfbc:	cbnz	w8, 43dfc8 <wall_message_timeout_handler+0x108>
  43dfc0:	stur	wzr, [x29, #-4]
  43dfc4:	b	43e148 <wall_message_timeout_handler+0x288>
  43dfc8:	ldur	x0, [x29, #-48]
  43dfcc:	ldur	x8, [x29, #-40]
  43dfd0:	ldr	x1, [x8, #288]
  43dfd4:	bl	43dde0 <when_wall>
  43dfd8:	str	x0, [sp, #56]
  43dfdc:	ldr	x8, [sp, #56]
  43dfe0:	cmp	x8, #0x0
  43dfe4:	cset	w9, ls  // ls = plast
  43dfe8:	tbnz	w9, #0, 43e144 <wall_message_timeout_handler+0x284>
  43dfec:	ldur	x0, [x29, #-16]
  43dff0:	ldur	x8, [x29, #-48]
  43dff4:	ldr	x9, [sp, #56]
  43dff8:	add	x1, x8, x9
  43dffc:	bl	407048 <sd_event_source_set_time@plt>
  43e000:	str	w0, [sp, #52]
  43e004:	ldr	w10, [sp, #52]
  43e008:	cmp	w10, #0x0
  43e00c:	cset	w10, ge  // ge = tcont
  43e010:	tbnz	w10, #0, 43e09c <wall_message_timeout_handler+0x1dc>
  43e014:	mov	w8, #0x3                   	// #3
  43e018:	str	w8, [sp, #48]
  43e01c:	ldr	w8, [sp, #52]
  43e020:	str	w8, [sp, #44]
  43e024:	str	wzr, [sp, #40]
  43e028:	ldr	w0, [sp, #40]
  43e02c:	bl	406c08 <log_get_max_level_realm@plt>
  43e030:	ldr	w8, [sp, #48]
  43e034:	and	w8, w8, #0x7
  43e038:	cmp	w0, w8
  43e03c:	b.lt	43e074 <wall_message_timeout_handler+0x1b4>  // b.tstop
  43e040:	ldr	w8, [sp, #40]
  43e044:	ldr	w9, [sp, #48]
  43e048:	orr	w0, w9, w8, lsl #10
  43e04c:	ldr	w1, [sp, #44]
  43e050:	ldr	x2, [sp, #8]
  43e054:	mov	w3, #0x70                  	// #112
  43e058:	adrp	x4, 44b000 <_fini+0xac30>
  43e05c:	add	x4, x4, #0x444
  43e060:	adrp	x5, 44b000 <_fini+0xac30>
  43e064:	add	x5, x5, #0x30f
  43e068:	bl	406c18 <log_internal_realm@plt>
  43e06c:	str	w0, [sp, #4]
  43e070:	b	43e088 <wall_message_timeout_handler+0x1c8>
  43e074:	ldr	w0, [sp, #44]
  43e078:	bl	406c28 <abs@plt>
  43e07c:	mov	w8, wzr
  43e080:	subs	w8, w8, w0, uxtb
  43e084:	str	w8, [sp, #4]
  43e088:	ldr	w8, [sp, #4]
  43e08c:	str	w8, [sp, #36]
  43e090:	ldr	w8, [sp, #36]
  43e094:	stur	w8, [x29, #-4]
  43e098:	b	43e148 <wall_message_timeout_handler+0x288>
  43e09c:	ldur	x0, [x29, #-16]
  43e0a0:	mov	w1, #0xffffffff            	// #-1
  43e0a4:	bl	407058 <sd_event_source_set_enabled@plt>
  43e0a8:	str	w0, [sp, #52]
  43e0ac:	ldr	w8, [sp, #52]
  43e0b0:	cmp	w8, #0x0
  43e0b4:	cset	w8, ge  // ge = tcont
  43e0b8:	tbnz	w8, #0, 43e144 <wall_message_timeout_handler+0x284>
  43e0bc:	mov	w8, #0x3                   	// #3
  43e0c0:	str	w8, [sp, #32]
  43e0c4:	ldr	w8, [sp, #52]
  43e0c8:	str	w8, [sp, #28]
  43e0cc:	str	wzr, [sp, #24]
  43e0d0:	ldr	w0, [sp, #24]
  43e0d4:	bl	406c08 <log_get_max_level_realm@plt>
  43e0d8:	ldr	w8, [sp, #32]
  43e0dc:	and	w8, w8, #0x7
  43e0e0:	cmp	w0, w8
  43e0e4:	b.lt	43e11c <wall_message_timeout_handler+0x25c>  // b.tstop
  43e0e8:	ldr	w8, [sp, #24]
  43e0ec:	ldr	w9, [sp, #32]
  43e0f0:	orr	w0, w9, w8, lsl #10
  43e0f4:	ldr	w1, [sp, #28]
  43e0f8:	ldr	x2, [sp, #8]
  43e0fc:	mov	w3, #0x74                  	// #116
  43e100:	adrp	x4, 44b000 <_fini+0xac30>
  43e104:	add	x4, x4, #0x444
  43e108:	adrp	x5, 44b000 <_fini+0xac30>
  43e10c:	add	x5, x5, #0x335
  43e110:	bl	406c18 <log_internal_realm@plt>
  43e114:	str	w0, [sp]
  43e118:	b	43e130 <wall_message_timeout_handler+0x270>
  43e11c:	ldr	w0, [sp, #28]
  43e120:	bl	406c28 <abs@plt>
  43e124:	mov	w8, wzr
  43e128:	subs	w8, w8, w0, uxtb
  43e12c:	str	w8, [sp]
  43e130:	ldr	w8, [sp]
  43e134:	str	w8, [sp, #20]
  43e138:	ldr	w8, [sp, #20]
  43e13c:	stur	w8, [x29, #-4]
  43e140:	b	43e148 <wall_message_timeout_handler+0x288>
  43e144:	stur	wzr, [x29, #-4]
  43e148:	ldur	w0, [x29, #-4]
  43e14c:	ldp	x29, x30, [sp, #112]
  43e150:	add	sp, sp, #0x80
  43e154:	ret

000000000043e158 <freep>:
  43e158:	sub	sp, sp, #0x20
  43e15c:	stp	x29, x30, [sp, #16]
  43e160:	add	x29, sp, #0x10
  43e164:	str	x0, [sp, #8]
  43e168:	ldr	x8, [sp, #8]
  43e16c:	ldr	x0, [x8]
  43e170:	bl	406da8 <free@plt>
  43e174:	ldp	x29, x30, [sp, #16]
  43e178:	add	sp, sp, #0x20
  43e17c:	ret

000000000043e180 <strempty>:
  43e180:	sub	sp, sp, #0x20
  43e184:	str	x0, [sp, #24]
  43e188:	ldr	x8, [sp, #24]
  43e18c:	str	x8, [sp, #16]
  43e190:	cbz	x8, 43e1a0 <strempty+0x20>
  43e194:	ldr	x8, [sp, #16]
  43e198:	str	x8, [sp, #8]
  43e19c:	b	43e1ac <strempty+0x2c>
  43e1a0:	adrp	x8, 443000 <_fini+0x2c30>
  43e1a4:	add	x8, x8, #0x467
  43e1a8:	str	x8, [sp, #8]
  43e1ac:	ldr	x8, [sp, #8]
  43e1b0:	mov	x0, x8
  43e1b4:	add	sp, sp, #0x20
  43e1b8:	ret

000000000043e1bc <devnode_acl>:
  43e1bc:	sub	sp, sp, #0x70
  43e1c0:	stp	x29, x30, [sp, #96]
  43e1c4:	add	x29, sp, #0x60
  43e1c8:	mov	w8, #0x0                   	// #0
  43e1cc:	adrp	x9, 44b000 <_fini+0xac30>
  43e1d0:	add	x9, x9, #0x461
  43e1d4:	add	x9, x9, #0x3
  43e1d8:	stur	x0, [x29, #-16]
  43e1dc:	mov	w10, #0x1                   	// #1
  43e1e0:	and	w11, w1, w10
  43e1e4:	sturb	w11, [x29, #-17]
  43e1e8:	and	w10, w2, w10
  43e1ec:	sturb	w10, [x29, #-18]
  43e1f0:	stur	w3, [x29, #-24]
  43e1f4:	and	w10, w4, #0x1
  43e1f8:	sturb	w10, [x29, #-25]
  43e1fc:	stur	w5, [x29, #-32]
  43e200:	stur	wzr, [x29, #-44]
  43e204:	sturb	w8, [x29, #-45]
  43e208:	str	x9, [sp, #8]
  43e20c:	ldur	x8, [x29, #-16]
  43e210:	cmp	x8, #0x0
  43e214:	cset	w9, ne  // ne = any
  43e218:	mov	w10, #0x1                   	// #1
  43e21c:	eor	w9, w9, #0x1
  43e220:	eor	w9, w9, w10
  43e224:	eor	w9, w9, w10
  43e228:	and	w9, w9, #0x1
  43e22c:	mov	w0, w9
  43e230:	sxtw	x8, w0
  43e234:	cbz	x8, 43e25c <devnode_acl+0xa0>
  43e238:	mov	w8, wzr
  43e23c:	mov	w0, w8
  43e240:	adrp	x1, 443000 <_fini+0x2c30>
  43e244:	add	x1, x1, #0xea9
  43e248:	ldr	x2, [sp, #8]
  43e24c:	mov	w3, #0x3b                  	// #59
  43e250:	adrp	x4, 44b000 <_fini+0xac30>
  43e254:	add	x4, x4, #0x47b
  43e258:	bl	406c68 <log_assert_failed_realm@plt>
  43e25c:	ldur	x0, [x29, #-16]
  43e260:	mov	w1, #0x8000                	// #32768
  43e264:	bl	407dc8 <acl_get_file@plt>
  43e268:	stur	x0, [x29, #-40]
  43e26c:	ldur	x8, [x29, #-40]
  43e270:	cbnz	x8, 43e28c <devnode_acl+0xd0>
  43e274:	bl	406e08 <__errno_location@plt>
  43e278:	ldr	w8, [x0]
  43e27c:	mov	w9, wzr
  43e280:	subs	w8, w9, w8
  43e284:	stur	w8, [x29, #-4]
  43e288:	b	43e58c <devnode_acl+0x3d0>
  43e28c:	ldurb	w8, [x29, #-17]
  43e290:	tbnz	w8, #0, 43e298 <devnode_acl+0xdc>
  43e294:	b	43e2d4 <devnode_acl+0x118>
  43e298:	ldur	x0, [x29, #-40]
  43e29c:	bl	43e59c <flush_acl>
  43e2a0:	stur	w0, [x29, #-44]
  43e2a4:	ldur	w8, [x29, #-44]
  43e2a8:	cmp	w8, #0x0
  43e2ac:	cset	w8, ge  // ge = tcont
  43e2b0:	tbnz	w8, #0, 43e2b8 <devnode_acl+0xfc>
  43e2b4:	b	43e57c <devnode_acl+0x3c0>
  43e2b8:	ldur	w8, [x29, #-44]
  43e2bc:	cmp	w8, #0x0
  43e2c0:	cset	w8, le
  43e2c4:	tbnz	w8, #0, 43e2d0 <devnode_acl+0x114>
  43e2c8:	mov	w8, #0x1                   	// #1
  43e2cc:	sturb	w8, [x29, #-45]
  43e2d0:	b	43e360 <devnode_acl+0x1a4>
  43e2d4:	ldurb	w8, [x29, #-18]
  43e2d8:	tbnz	w8, #0, 43e2e0 <devnode_acl+0x124>
  43e2dc:	b	43e360 <devnode_acl+0x1a4>
  43e2e0:	ldur	w8, [x29, #-24]
  43e2e4:	cmp	w8, #0x0
  43e2e8:	cset	w8, ls  // ls = plast
  43e2ec:	tbnz	w8, #0, 43e360 <devnode_acl+0x1a4>
  43e2f0:	ldur	x0, [x29, #-40]
  43e2f4:	ldur	w1, [x29, #-24]
  43e2f8:	add	x2, sp, #0x28
  43e2fc:	bl	407dd8 <acl_find_uid@plt>
  43e300:	stur	w0, [x29, #-44]
  43e304:	ldur	w8, [x29, #-44]
  43e308:	cmp	w8, #0x0
  43e30c:	cset	w8, ge  // ge = tcont
  43e310:	tbnz	w8, #0, 43e318 <devnode_acl+0x15c>
  43e314:	b	43e57c <devnode_acl+0x3c0>
  43e318:	ldur	w8, [x29, #-44]
  43e31c:	cmp	w8, #0x0
  43e320:	cset	w8, le
  43e324:	tbnz	w8, #0, 43e360 <devnode_acl+0x1a4>
  43e328:	ldur	x0, [x29, #-40]
  43e32c:	ldr	x1, [sp, #40]
  43e330:	bl	407de8 <acl_delete_entry@plt>
  43e334:	cmp	w0, #0x0
  43e338:	cset	w8, ge  // ge = tcont
  43e33c:	tbnz	w8, #0, 43e358 <devnode_acl+0x19c>
  43e340:	bl	406e08 <__errno_location@plt>
  43e344:	ldr	w8, [x0]
  43e348:	mov	w9, wzr
  43e34c:	subs	w8, w9, w8
  43e350:	stur	w8, [x29, #-44]
  43e354:	b	43e57c <devnode_acl+0x3c0>
  43e358:	mov	w8, #0x1                   	// #1
  43e35c:	sturb	w8, [x29, #-45]
  43e360:	ldurb	w8, [x29, #-25]
  43e364:	tbnz	w8, #0, 43e36c <devnode_acl+0x1b0>
  43e368:	b	43e50c <devnode_acl+0x350>
  43e36c:	ldur	w8, [x29, #-32]
  43e370:	cmp	w8, #0x0
  43e374:	cset	w8, ls  // ls = plast
  43e378:	tbnz	w8, #0, 43e50c <devnode_acl+0x350>
  43e37c:	ldur	x0, [x29, #-40]
  43e380:	ldur	w1, [x29, #-32]
  43e384:	add	x2, sp, #0x20
  43e388:	bl	407dd8 <acl_find_uid@plt>
  43e38c:	stur	w0, [x29, #-44]
  43e390:	ldur	w8, [x29, #-44]
  43e394:	cmp	w8, #0x0
  43e398:	cset	w8, ge  // ge = tcont
  43e39c:	tbnz	w8, #0, 43e3a4 <devnode_acl+0x1e8>
  43e3a0:	b	43e57c <devnode_acl+0x3c0>
  43e3a4:	ldur	w8, [x29, #-44]
  43e3a8:	cbnz	w8, 43e424 <devnode_acl+0x268>
  43e3ac:	sub	x0, x29, #0x28
  43e3b0:	add	x1, sp, #0x20
  43e3b4:	bl	407df8 <acl_create_entry@plt>
  43e3b8:	cmp	w0, #0x0
  43e3bc:	cset	w8, ge  // ge = tcont
  43e3c0:	tbnz	w8, #0, 43e3dc <devnode_acl+0x220>
  43e3c4:	bl	406e08 <__errno_location@plt>
  43e3c8:	ldr	w8, [x0]
  43e3cc:	mov	w9, wzr
  43e3d0:	subs	w8, w9, w8
  43e3d4:	stur	w8, [x29, #-44]
  43e3d8:	b	43e57c <devnode_acl+0x3c0>
  43e3dc:	ldr	x0, [sp, #32]
  43e3e0:	mov	w1, #0x2                   	// #2
  43e3e4:	bl	407e08 <acl_set_tag_type@plt>
  43e3e8:	cmp	w0, #0x0
  43e3ec:	cset	w8, lt  // lt = tstop
  43e3f0:	tbnz	w8, #0, 43e40c <devnode_acl+0x250>
  43e3f4:	ldr	x0, [sp, #32]
  43e3f8:	sub	x1, x29, #0x20
  43e3fc:	bl	407e18 <acl_set_qualifier@plt>
  43e400:	cmp	w0, #0x0
  43e404:	cset	w8, ge  // ge = tcont
  43e408:	tbnz	w8, #0, 43e424 <devnode_acl+0x268>
  43e40c:	bl	406e08 <__errno_location@plt>
  43e410:	ldr	w8, [x0]
  43e414:	mov	w9, wzr
  43e418:	subs	w8, w9, w8
  43e41c:	stur	w8, [x29, #-44]
  43e420:	b	43e57c <devnode_acl+0x3c0>
  43e424:	ldr	x0, [sp, #32]
  43e428:	add	x1, sp, #0x18
  43e42c:	bl	407e28 <acl_get_permset@plt>
  43e430:	cmp	w0, #0x0
  43e434:	cset	w8, ge  // ge = tcont
  43e438:	tbnz	w8, #0, 43e454 <devnode_acl+0x298>
  43e43c:	bl	406e08 <__errno_location@plt>
  43e440:	ldr	w8, [x0]
  43e444:	mov	w9, wzr
  43e448:	subs	w8, w9, w8
  43e44c:	stur	w8, [x29, #-44]
  43e450:	b	43e57c <devnode_acl+0x3c0>
  43e454:	ldr	x0, [sp, #24]
  43e458:	mov	w1, #0x4                   	// #4
  43e45c:	bl	407e38 <acl_get_perm@plt>
  43e460:	str	w0, [sp, #20]
  43e464:	ldr	w8, [sp, #20]
  43e468:	cmp	w8, #0x0
  43e46c:	cset	w8, ge  // ge = tcont
  43e470:	tbnz	w8, #0, 43e48c <devnode_acl+0x2d0>
  43e474:	bl	406e08 <__errno_location@plt>
  43e478:	ldr	w8, [x0]
  43e47c:	mov	w9, wzr
  43e480:	subs	w8, w9, w8
  43e484:	stur	w8, [x29, #-44]
  43e488:	b	43e57c <devnode_acl+0x3c0>
  43e48c:	ldr	x0, [sp, #24]
  43e490:	mov	w1, #0x2                   	// #2
  43e494:	bl	407e38 <acl_get_perm@plt>
  43e498:	str	w0, [sp, #16]
  43e49c:	ldr	w8, [sp, #16]
  43e4a0:	cmp	w8, #0x0
  43e4a4:	cset	w8, ge  // ge = tcont
  43e4a8:	tbnz	w8, #0, 43e4c4 <devnode_acl+0x308>
  43e4ac:	bl	406e08 <__errno_location@plt>
  43e4b0:	ldr	w8, [x0]
  43e4b4:	mov	w9, wzr
  43e4b8:	subs	w8, w9, w8
  43e4bc:	stur	w8, [x29, #-44]
  43e4c0:	b	43e57c <devnode_acl+0x3c0>
  43e4c4:	ldr	w8, [sp, #20]
  43e4c8:	cbz	w8, 43e4d4 <devnode_acl+0x318>
  43e4cc:	ldr	w8, [sp, #16]
  43e4d0:	cbnz	w8, 43e50c <devnode_acl+0x350>
  43e4d4:	ldr	x0, [sp, #24]
  43e4d8:	mov	w1, #0x6                   	// #6
  43e4dc:	bl	407e48 <acl_add_perm@plt>
  43e4e0:	cmp	w0, #0x0
  43e4e4:	cset	w8, ge  // ge = tcont
  43e4e8:	tbnz	w8, #0, 43e504 <devnode_acl+0x348>
  43e4ec:	bl	406e08 <__errno_location@plt>
  43e4f0:	ldr	w8, [x0]
  43e4f4:	mov	w9, wzr
  43e4f8:	subs	w8, w9, w8
  43e4fc:	stur	w8, [x29, #-44]
  43e500:	b	43e57c <devnode_acl+0x3c0>
  43e504:	mov	w8, #0x1                   	// #1
  43e508:	sturb	w8, [x29, #-45]
  43e50c:	ldurb	w8, [x29, #-45]
  43e510:	tbnz	w8, #0, 43e518 <devnode_acl+0x35c>
  43e514:	b	43e57c <devnode_acl+0x3c0>
  43e518:	sub	x0, x29, #0x28
  43e51c:	bl	407e58 <acl_calc_mask@plt>
  43e520:	cmp	w0, #0x0
  43e524:	cset	w8, ge  // ge = tcont
  43e528:	tbnz	w8, #0, 43e544 <devnode_acl+0x388>
  43e52c:	bl	406e08 <__errno_location@plt>
  43e530:	ldr	w8, [x0]
  43e534:	mov	w9, wzr
  43e538:	subs	w8, w9, w8
  43e53c:	stur	w8, [x29, #-44]
  43e540:	b	43e57c <devnode_acl+0x3c0>
  43e544:	ldur	x0, [x29, #-16]
  43e548:	ldur	x2, [x29, #-40]
  43e54c:	mov	w1, #0x8000                	// #32768
  43e550:	bl	407e68 <acl_set_file@plt>
  43e554:	cmp	w0, #0x0
  43e558:	cset	w8, ge  // ge = tcont
  43e55c:	tbnz	w8, #0, 43e578 <devnode_acl+0x3bc>
  43e560:	bl	406e08 <__errno_location@plt>
  43e564:	ldr	w8, [x0]
  43e568:	mov	w9, wzr
  43e56c:	subs	w8, w9, w8
  43e570:	stur	w8, [x29, #-44]
  43e574:	b	43e57c <devnode_acl+0x3c0>
  43e578:	stur	wzr, [x29, #-44]
  43e57c:	ldur	x0, [x29, #-40]
  43e580:	bl	407e78 <acl_free@plt>
  43e584:	ldur	w8, [x29, #-44]
  43e588:	stur	w8, [x29, #-4]
  43e58c:	ldur	w0, [x29, #-4]
  43e590:	ldp	x29, x30, [sp, #96]
  43e594:	add	sp, sp, #0x70
  43e598:	ret

000000000043e59c <flush_acl>:
  43e59c:	sub	sp, sp, #0x40
  43e5a0:	stp	x29, x30, [sp, #48]
  43e5a4:	add	x29, sp, #0x30
  43e5a8:	mov	w8, #0x0                   	// #0
  43e5ac:	adrp	x9, 44b000 <_fini+0xac30>
  43e5b0:	add	x9, x9, #0x461
  43e5b4:	add	x2, x9, #0x3
  43e5b8:	stur	x0, [x29, #-16]
  43e5bc:	strb	w8, [sp, #19]
  43e5c0:	str	x2, [sp]
  43e5c4:	ldur	x8, [x29, #-16]
  43e5c8:	cmp	x8, #0x0
  43e5cc:	cset	w9, ne  // ne = any
  43e5d0:	mov	w10, #0x1                   	// #1
  43e5d4:	eor	w9, w9, #0x1
  43e5d8:	eor	w9, w9, w10
  43e5dc:	eor	w9, w9, w10
  43e5e0:	and	w9, w9, #0x1
  43e5e4:	mov	w0, w9
  43e5e8:	sxtw	x8, w0
  43e5ec:	cbz	x8, 43e614 <flush_acl+0x78>
  43e5f0:	mov	w8, wzr
  43e5f4:	mov	w0, w8
  43e5f8:	adrp	x1, 44b000 <_fini+0xac30>
  43e5fc:	add	x1, x1, #0x59c
  43e600:	ldr	x2, [sp]
  43e604:	mov	w3, #0x18                  	// #24
  43e608:	adrp	x4, 44b000 <_fini+0xac30>
  43e60c:	add	x4, x4, #0x5a0
  43e610:	bl	406c68 <log_assert_failed_realm@plt>
  43e614:	ldur	x0, [x29, #-16]
  43e618:	mov	w8, wzr
  43e61c:	mov	w1, w8
  43e620:	add	x2, sp, #0x18
  43e624:	bl	407e88 <acl_get_entry@plt>
  43e628:	str	w0, [sp, #20]
  43e62c:	ldr	w8, [sp, #20]
  43e630:	cmp	w8, #0x0
  43e634:	cset	w8, le
  43e638:	tbnz	w8, #0, 43e6cc <flush_acl+0x130>
  43e63c:	ldr	x0, [sp, #24]
  43e640:	add	x1, sp, #0xc
  43e644:	bl	407e98 <acl_get_tag_type@plt>
  43e648:	cmp	w0, #0x0
  43e64c:	cset	w8, ge  // ge = tcont
  43e650:	tbnz	w8, #0, 43e66c <flush_acl+0xd0>
  43e654:	bl	406e08 <__errno_location@plt>
  43e658:	ldr	w8, [x0]
  43e65c:	mov	w9, wzr
  43e660:	subs	w8, w9, w8
  43e664:	stur	w8, [x29, #-4]
  43e668:	b	43e700 <flush_acl+0x164>
  43e66c:	ldr	w8, [sp, #12]
  43e670:	cmp	w8, #0x2
  43e674:	b.eq	43e67c <flush_acl+0xe0>  // b.none
  43e678:	b	43e6b4 <flush_acl+0x118>
  43e67c:	ldur	x0, [x29, #-16]
  43e680:	ldr	x1, [sp, #24]
  43e684:	bl	407de8 <acl_delete_entry@plt>
  43e688:	cmp	w0, #0x0
  43e68c:	cset	w8, ge  // ge = tcont
  43e690:	tbnz	w8, #0, 43e6ac <flush_acl+0x110>
  43e694:	bl	406e08 <__errno_location@plt>
  43e698:	ldr	w8, [x0]
  43e69c:	mov	w9, wzr
  43e6a0:	subs	w8, w9, w8
  43e6a4:	stur	w8, [x29, #-4]
  43e6a8:	b	43e700 <flush_acl+0x164>
  43e6ac:	mov	w8, #0x1                   	// #1
  43e6b0:	strb	w8, [sp, #19]
  43e6b4:	ldur	x0, [x29, #-16]
  43e6b8:	mov	w1, #0x1                   	// #1
  43e6bc:	add	x2, sp, #0x18
  43e6c0:	bl	407e88 <acl_get_entry@plt>
  43e6c4:	str	w0, [sp, #20]
  43e6c8:	b	43e62c <flush_acl+0x90>
  43e6cc:	ldr	w8, [sp, #20]
  43e6d0:	cmp	w8, #0x0
  43e6d4:	cset	w8, ge  // ge = tcont
  43e6d8:	tbnz	w8, #0, 43e6f4 <flush_acl+0x158>
  43e6dc:	bl	406e08 <__errno_location@plt>
  43e6e0:	ldr	w8, [x0]
  43e6e4:	mov	w9, wzr
  43e6e8:	subs	w8, w9, w8
  43e6ec:	stur	w8, [x29, #-4]
  43e6f0:	b	43e700 <flush_acl+0x164>
  43e6f4:	ldrb	w8, [sp, #19]
  43e6f8:	and	w8, w8, #0x1
  43e6fc:	stur	w8, [x29, #-4]
  43e700:	ldur	w0, [x29, #-4]
  43e704:	ldp	x29, x30, [sp, #48]
  43e708:	add	sp, sp, #0x40
  43e70c:	ret

000000000043e710 <devnode_acl_all>:
  43e710:	sub	sp, sp, #0x160
  43e714:	stp	x29, x30, [sp, #320]
  43e718:	str	x28, [sp, #336]
  43e71c:	add	x29, sp, #0x140
  43e720:	sub	x8, x29, #0x68
  43e724:	mov	x9, xzr
  43e728:	adrp	x10, 45f000 <logind_gperf_lookup.wordlist+0x388>
  43e72c:	ldr	x10, [x10, #1408]
  43e730:	mov	w11, #0x1                   	// #1
  43e734:	adrp	x12, 44b000 <_fini+0xac30>
  43e738:	add	x12, x12, #0x461
  43e73c:	add	x12, x12, #0x3
  43e740:	adrp	x13, 44b000 <_fini+0xac30>
  43e744:	add	x13, x13, #0x4c4
  43e748:	str	x0, [x8, #88]
  43e74c:	and	w14, w1, w11
  43e750:	sturb	w14, [x29, #-17]
  43e754:	and	w14, w2, w11
  43e758:	sturb	w14, [x29, #-18]
  43e75c:	stur	w3, [x29, #-24]
  43e760:	and	w11, w4, w11
  43e764:	sturb	w11, [x29, #-25]
  43e768:	stur	w5, [x29, #-32]
  43e76c:	str	x9, [x8, #64]
  43e770:	str	x9, [x8, #56]
  43e774:	str	x9, [x8, #48]
  43e778:	mov	x0, x10
  43e77c:	str	x8, [sp, #72]
  43e780:	str	x12, [sp, #64]
  43e784:	str	x13, [sp, #56]
  43e788:	bl	407ea8 <internal_set_new@plt>
  43e78c:	ldr	x8, [sp, #72]
  43e790:	str	x0, [x8, #56]
  43e794:	ldr	x9, [x8, #56]
  43e798:	cbnz	x9, 43e7b0 <devnode_acl_all+0xa0>
  43e79c:	mov	w8, #0xfffffff4            	// #-12
  43e7a0:	stur	w8, [x29, #-4]
  43e7a4:	mov	w8, #0x1                   	// #1
  43e7a8:	stur	w8, [x29, #-112]
  43e7ac:	b	43ee40 <devnode_acl_all+0x730>
  43e7b0:	sub	x0, x29, #0x28
  43e7b4:	bl	406f48 <sd_device_enumerator_new@plt>
  43e7b8:	stur	w0, [x29, #-108]
  43e7bc:	ldur	w8, [x29, #-108]
  43e7c0:	cmp	w8, #0x0
  43e7c4:	cset	w8, ge  // ge = tcont
  43e7c8:	tbnz	w8, #0, 43e7e0 <devnode_acl_all+0xd0>
  43e7cc:	ldur	w8, [x29, #-108]
  43e7d0:	stur	w8, [x29, #-4]
  43e7d4:	mov	w8, #0x1                   	// #1
  43e7d8:	stur	w8, [x29, #-112]
  43e7dc:	b	43ee40 <devnode_acl_all+0x730>
  43e7e0:	ldr	x8, [sp, #72]
  43e7e4:	ldr	x0, [x8, #88]
  43e7e8:	bl	43ef08 <isempty>
  43e7ec:	tbnz	w0, #0, 43e7f4 <devnode_acl_all+0xe4>
  43e7f0:	b	43e804 <devnode_acl_all+0xf4>
  43e7f4:	adrp	x8, 440000 <on_brightness_writer_exit+0x15c>
  43e7f8:	add	x8, x8, #0x669
  43e7fc:	ldr	x9, [sp, #72]
  43e800:	str	x8, [x9, #88]
  43e804:	ldr	x8, [sp, #72]
  43e808:	ldr	x0, [x8, #64]
  43e80c:	adrp	x1, 44b000 <_fini+0xac30>
  43e810:	add	x1, x1, #0x4bc
  43e814:	bl	406f58 <sd_device_enumerator_add_match_tag@plt>
  43e818:	stur	w0, [x29, #-108]
  43e81c:	ldur	w9, [x29, #-108]
  43e820:	cmp	w9, #0x0
  43e824:	cset	w9, ge  // ge = tcont
  43e828:	tbnz	w9, #0, 43e840 <devnode_acl_all+0x130>
  43e82c:	ldur	w8, [x29, #-108]
  43e830:	stur	w8, [x29, #-4]
  43e834:	mov	w8, #0x1                   	// #1
  43e838:	stur	w8, [x29, #-112]
  43e83c:	b	43ee40 <devnode_acl_all+0x730>
  43e840:	ldr	x8, [sp, #72]
  43e844:	ldr	x0, [x8, #64]
  43e848:	bl	406f68 <sd_device_enumerator_get_device_first@plt>
  43e84c:	ldr	x8, [sp, #72]
  43e850:	str	x0, [x8, #32]
  43e854:	ldr	x8, [sp, #72]
  43e858:	ldr	x9, [x8, #32]
  43e85c:	cbz	x9, 43ea00 <devnode_acl_all+0x2f0>
  43e860:	ldr	x8, [sp, #72]
  43e864:	ldr	x0, [x8, #32]
  43e868:	adrp	x1, 442000 <_fini+0x1c30>
  43e86c:	add	x1, x1, #0x69a
  43e870:	sub	x2, x29, #0x80
  43e874:	bl	4072f8 <sd_device_get_property_value@plt>
  43e878:	cmp	w0, #0x0
  43e87c:	cset	w9, lt  // lt = tstop
  43e880:	tbnz	w9, #0, 43e894 <devnode_acl_all+0x184>
  43e884:	ldur	x0, [x29, #-128]
  43e888:	bl	43ef08 <isempty>
  43e88c:	tbnz	w0, #0, 43e894 <devnode_acl_all+0x184>
  43e890:	b	43e8a0 <devnode_acl_all+0x190>
  43e894:	adrp	x8, 440000 <on_brightness_writer_exit+0x15c>
  43e898:	add	x8, x8, #0x669
  43e89c:	stur	x8, [x29, #-128]
  43e8a0:	ldr	x8, [sp, #72]
  43e8a4:	ldr	x0, [x8, #88]
  43e8a8:	ldur	x1, [x29, #-128]
  43e8ac:	bl	407158 <strcmp@plt>
  43e8b0:	cbz	w0, 43e8b8 <devnode_acl_all+0x1a8>
  43e8b4:	b	43e9e8 <devnode_acl_all+0x2d8>
  43e8b8:	ldr	x8, [sp, #72]
  43e8bc:	ldr	x0, [x8, #32]
  43e8c0:	sub	x1, x29, #0x78
  43e8c4:	bl	407ba8 <sd_device_get_devname@plt>
  43e8c8:	cmp	w0, #0x0
  43e8cc:	cset	w9, ge  // ge = tcont
  43e8d0:	tbnz	w9, #0, 43e8d8 <devnode_acl_all+0x1c8>
  43e8d4:	b	43e9e8 <devnode_acl_all+0x2d8>
  43e8d8:	mov	x8, xzr
  43e8dc:	stur	x8, [x29, #-136]
  43e8e0:	ldr	x8, [sp, #72]
  43e8e4:	ldr	x9, [x8, #32]
  43e8e8:	stur	x9, [x29, #-144]
  43e8ec:	mov	w10, #0x7                   	// #7
  43e8f0:	stur	w10, [x29, #-148]
  43e8f4:	stur	wzr, [x29, #-152]
  43e8f8:	ldur	x9, [x29, #-144]
  43e8fc:	cbz	x9, 43e940 <devnode_acl_all+0x230>
  43e900:	mov	w8, wzr
  43e904:	mov	w0, w8
  43e908:	bl	406c08 <log_get_max_level_realm@plt>
  43e90c:	ldur	w8, [x29, #-148]
  43e910:	cmp	w0, w8
  43e914:	cset	w8, ge  // ge = tcont
  43e918:	mov	w9, #0x1                   	// #1
  43e91c:	eor	w8, w8, #0x1
  43e920:	eor	w8, w8, w9
  43e924:	and	w8, w8, #0x1
  43e928:	mov	w1, w8
  43e92c:	sxtw	x10, w1
  43e930:	cbz	x10, 43e940 <devnode_acl_all+0x230>
  43e934:	ldur	x0, [x29, #-144]
  43e938:	sub	x1, x29, #0x88
  43e93c:	bl	407088 <sd_device_get_sysname@plt>
  43e940:	ldur	w0, [x29, #-148]
  43e944:	ldur	w1, [x29, #-152]
  43e948:	ldur	x8, [x29, #-136]
  43e94c:	mov	x9, xzr
  43e950:	adrp	x10, 442000 <_fini+0x1c30>
  43e954:	add	x10, x10, #0x6be
  43e958:	cmp	x8, #0x0
  43e95c:	csel	x5, x10, x9, ne  // ne = any
  43e960:	ldur	x6, [x29, #-136]
  43e964:	ldur	x8, [x29, #-120]
  43e968:	ldr	x10, [sp, #72]
  43e96c:	ldr	x11, [x10, #88]
  43e970:	ldr	x2, [sp, #64]
  43e974:	mov	w3, #0xd0                  	// #208
  43e978:	ldr	x4, [sp, #56]
  43e97c:	mov	x7, x9
  43e980:	mov	x12, sp
  43e984:	str	x9, [x12]
  43e988:	mov	x9, sp
  43e98c:	adrp	x12, 44b000 <_fini+0xac30>
  43e990:	add	x12, x12, #0x4d4
  43e994:	str	x12, [x9, #8]
  43e998:	mov	x9, sp
  43e99c:	str	x8, [x9, #16]
  43e9a0:	mov	x8, sp
  43e9a4:	str	x11, [x8, #24]
  43e9a8:	bl	407308 <log_object_internal@plt>
  43e9ac:	stur	w0, [x29, #-156]
  43e9b0:	ldr	x8, [sp, #72]
  43e9b4:	ldr	x0, [x8, #56]
  43e9b8:	ldur	x1, [x29, #-120]
  43e9bc:	bl	407eb8 <set_put_strdup@plt>
  43e9c0:	stur	w0, [x29, #-108]
  43e9c4:	ldur	w13, [x29, #-108]
  43e9c8:	cmp	w13, #0x0
  43e9cc:	cset	w13, ge  // ge = tcont
  43e9d0:	tbnz	w13, #0, 43e9e8 <devnode_acl_all+0x2d8>
  43e9d4:	ldur	w8, [x29, #-108]
  43e9d8:	stur	w8, [x29, #-4]
  43e9dc:	mov	w8, #0x1                   	// #1
  43e9e0:	stur	w8, [x29, #-112]
  43e9e4:	b	43ee40 <devnode_acl_all+0x730>
  43e9e8:	ldr	x8, [sp, #72]
  43e9ec:	ldr	x0, [x8, #64]
  43e9f0:	bl	406f78 <sd_device_enumerator_get_device_next@plt>
  43e9f4:	ldr	x8, [sp, #72]
  43e9f8:	str	x0, [x8, #32]
  43e9fc:	b	43e854 <devnode_acl_all+0x144>
  43ea00:	adrp	x0, 44b000 <_fini+0xac30>
  43ea04:	add	x0, x0, #0x4f3
  43ea08:	bl	406f88 <opendir@plt>
  43ea0c:	ldr	x8, [sp, #72]
  43ea10:	str	x0, [x8, #48]
  43ea14:	ldr	x9, [x8, #48]
  43ea18:	cbz	x9, 43ec34 <devnode_acl_all+0x524>
  43ea1c:	bl	406e08 <__errno_location@plt>
  43ea20:	str	wzr, [x0]
  43ea24:	ldr	x8, [sp, #72]
  43ea28:	ldr	x0, [x8, #48]
  43ea2c:	bl	406f98 <readdir64@plt>
  43ea30:	ldr	x8, [sp, #72]
  43ea34:	str	x0, [x8, #40]
  43ea38:	ldr	x8, [sp, #72]
  43ea3c:	ldr	x9, [x8, #40]
  43ea40:	cbnz	x9, 43ea7c <devnode_acl_all+0x36c>
  43ea44:	bl	406e08 <__errno_location@plt>
  43ea48:	ldr	w8, [x0]
  43ea4c:	cmp	w8, #0x0
  43ea50:	cset	w8, le
  43ea54:	tbnz	w8, #0, 43ea78 <devnode_acl_all+0x368>
  43ea58:	bl	406e08 <__errno_location@plt>
  43ea5c:	ldr	w8, [x0]
  43ea60:	mov	w9, wzr
  43ea64:	subs	w8, w9, w8
  43ea68:	stur	w8, [x29, #-4]
  43ea6c:	mov	w8, #0x1                   	// #1
  43ea70:	stur	w8, [x29, #-112]
  43ea74:	b	43ee40 <devnode_acl_all+0x730>
  43ea78:	b	43ec34 <devnode_acl_all+0x524>
  43ea7c:	ldr	x8, [sp, #72]
  43ea80:	ldr	x9, [x8, #40]
  43ea84:	add	x0, x9, #0x13
  43ea88:	bl	406fa8 <hidden_or_backup_file@plt>
  43ea8c:	tbnz	w0, #0, 43ea94 <devnode_acl_all+0x384>
  43ea90:	b	43ea98 <devnode_acl_all+0x388>
  43ea94:	b	43ec14 <devnode_acl_all+0x504>
  43ea98:	add	x2, sp, #0x98
  43ea9c:	mov	x8, xzr
  43eaa0:	str	x8, [sp, #152]
  43eaa4:	ldr	x8, [sp, #72]
  43eaa8:	ldr	x9, [x8, #40]
  43eaac:	add	x0, x9, #0x13
  43eab0:	mov	w1, #0x1                   	// #1
  43eab4:	bl	407a28 <cunescape@plt>
  43eab8:	cmp	w0, #0x0
  43eabc:	cset	w10, ge  // ge = tcont
  43eac0:	tbnz	w10, #0, 43ead8 <devnode_acl_all+0x3c8>
  43eac4:	mov	w8, #0xfffffff4            	// #-12
  43eac8:	stur	w8, [x29, #-4]
  43eacc:	mov	w8, #0x1                   	// #1
  43ead0:	stur	w8, [x29, #-112]
  43ead4:	b	43ebec <devnode_acl_all+0x4dc>
  43ead8:	ldr	x1, [sp, #152]
  43eadc:	adrp	x0, 44a000 <_fini+0x9c30>
  43eae0:	add	x0, x0, #0x314
  43eae4:	mov	x8, #0xffffffffffffffff    	// #-1
  43eae8:	mov	x2, x8
  43eaec:	bl	4078e8 <path_join_internal@plt>
  43eaf0:	ldr	x8, [sp, #72]
  43eaf4:	str	x0, [x8]
  43eaf8:	ldr	x9, [x8]
  43eafc:	cbnz	x9, 43eb14 <devnode_acl_all+0x404>
  43eb00:	mov	w8, #0xfffffff4            	// #-12
  43eb04:	stur	w8, [x29, #-4]
  43eb08:	mov	w8, #0x1                   	// #1
  43eb0c:	stur	w8, [x29, #-112]
  43eb10:	b	43ebec <devnode_acl_all+0x4dc>
  43eb14:	mov	w8, #0x7                   	// #7
  43eb18:	str	w8, [sp, #148]
  43eb1c:	str	wzr, [sp, #144]
  43eb20:	str	wzr, [sp, #140]
  43eb24:	ldr	w0, [sp, #140]
  43eb28:	bl	406c08 <log_get_max_level_realm@plt>
  43eb2c:	ldr	w8, [sp, #148]
  43eb30:	and	w8, w8, #0x7
  43eb34:	cmp	w0, w8
  43eb38:	b.lt	43eb78 <devnode_acl_all+0x468>  // b.tstop
  43eb3c:	ldr	w8, [sp, #140]
  43eb40:	ldr	w9, [sp, #148]
  43eb44:	orr	w0, w9, w8, lsl #10
  43eb48:	ldr	w1, [sp, #144]
  43eb4c:	ldr	x10, [sp, #72]
  43eb50:	ldr	x6, [x10]
  43eb54:	ldr	x7, [x10, #88]
  43eb58:	ldr	x2, [sp, #64]
  43eb5c:	mov	w3, #0xe4                  	// #228
  43eb60:	ldr	x4, [sp, #56]
  43eb64:	adrp	x5, 44b000 <_fini+0xac30>
  43eb68:	add	x5, x5, #0x516
  43eb6c:	bl	406c18 <log_internal_realm@plt>
  43eb70:	str	w0, [sp, #52]
  43eb74:	b	43eb8c <devnode_acl_all+0x47c>
  43eb78:	ldr	w0, [sp, #144]
  43eb7c:	bl	406c28 <abs@plt>
  43eb80:	mov	w8, wzr
  43eb84:	subs	w8, w8, w0, uxtb
  43eb88:	str	w8, [sp, #52]
  43eb8c:	ldr	w8, [sp, #52]
  43eb90:	str	w8, [sp, #136]
  43eb94:	ldr	x9, [sp, #72]
  43eb98:	ldr	x0, [x9, #56]
  43eb9c:	ldr	x1, [x9]
  43eba0:	bl	407ec8 <set_consume@plt>
  43eba4:	stur	w0, [x29, #-108]
  43eba8:	ldur	w8, [x29, #-108]
  43ebac:	mov	w10, #0xffffffef            	// #-17
  43ebb0:	cmp	w8, w10
  43ebb4:	b.ne	43ebc4 <devnode_acl_all+0x4b4>  // b.any
  43ebb8:	mov	w8, #0x7                   	// #7
  43ebbc:	stur	w8, [x29, #-112]
  43ebc0:	b	43ebec <devnode_acl_all+0x4dc>
  43ebc4:	ldur	w8, [x29, #-108]
  43ebc8:	cmp	w8, #0x0
  43ebcc:	cset	w8, ge  // ge = tcont
  43ebd0:	tbnz	w8, #0, 43ebe8 <devnode_acl_all+0x4d8>
  43ebd4:	ldur	w8, [x29, #-108]
  43ebd8:	stur	w8, [x29, #-4]
  43ebdc:	mov	w8, #0x1                   	// #1
  43ebe0:	stur	w8, [x29, #-112]
  43ebe4:	b	43ebec <devnode_acl_all+0x4dc>
  43ebe8:	stur	wzr, [x29, #-112]
  43ebec:	add	x0, sp, #0x98
  43ebf0:	bl	43ef48 <freep>
  43ebf4:	ldur	w8, [x29, #-112]
  43ebf8:	str	w8, [sp, #48]
  43ebfc:	cbz	w8, 43ec14 <devnode_acl_all+0x504>
  43ec00:	b	43ec04 <devnode_acl_all+0x4f4>
  43ec04:	ldr	w8, [sp, #48]
  43ec08:	cmp	w8, #0x7
  43ec0c:	b.eq	43ec14 <devnode_acl_all+0x504>  // b.none
  43ec10:	b	43ee40 <devnode_acl_all+0x730>
  43ec14:	bl	406e08 <__errno_location@plt>
  43ec18:	str	wzr, [x0]
  43ec1c:	ldr	x8, [sp, #72]
  43ec20:	ldr	x0, [x8, #48]
  43ec24:	bl	406f98 <readdir64@plt>
  43ec28:	ldr	x8, [sp, #72]
  43ec2c:	str	x0, [x8, #40]
  43ec30:	b	43ea38 <devnode_acl_all+0x328>
  43ec34:	stur	wzr, [x29, #-108]
  43ec38:	add	x8, sp, #0x78
  43ec3c:	mov	w9, #0xfffffffe            	// #-2
  43ec40:	str	w9, [sp, #120]
  43ec44:	mov	x10, xzr
  43ec48:	str	x10, [x8, #8]
  43ec4c:	ldur	q0, [sp, #120]
  43ec50:	ldr	x8, [sp, #72]
  43ec54:	stur	q0, [x8, #8]
  43ec58:	ldr	x8, [sp, #72]
  43ec5c:	ldr	x0, [x8, #56]
  43ec60:	sub	x1, x29, #0x60
  43ec64:	sub	x2, x29, #0x68
  43ec68:	bl	407ed8 <set_iterate@plt>
  43ec6c:	tbnz	w0, #0, 43ec74 <devnode_acl_all+0x564>
  43ec70:	b	43ee30 <devnode_acl_all+0x720>
  43ec74:	mov	w8, #0x7                   	// #7
  43ec78:	str	w8, [sp, #112]
  43ec7c:	str	wzr, [sp, #108]
  43ec80:	str	wzr, [sp, #104]
  43ec84:	ldr	w0, [sp, #104]
  43ec88:	bl	406c08 <log_get_max_level_realm@plt>
  43ec8c:	ldr	w8, [sp, #112]
  43ec90:	and	w8, w8, #0x7
  43ec94:	cmp	w0, w8
  43ec98:	b.lt	43ed30 <devnode_acl_all+0x620>  // b.tstop
  43ec9c:	ldr	w8, [sp, #104]
  43eca0:	ldr	w9, [sp, #112]
  43eca4:	orr	w0, w9, w8, lsl #10
  43eca8:	ldr	w1, [sp, #108]
  43ecac:	ldr	x10, [sp, #72]
  43ecb0:	ldr	x6, [x10]
  43ecb4:	ldr	x7, [x10, #88]
  43ecb8:	ldur	w8, [x29, #-24]
  43ecbc:	ldur	w9, [x29, #-32]
  43ecc0:	ldurb	w11, [x29, #-18]
  43ecc4:	adrp	x12, 443000 <_fini+0x2c30>
  43ecc8:	add	x12, x12, #0x467
  43eccc:	adrp	x13, 44b000 <_fini+0xac30>
  43ecd0:	add	x13, x13, #0x569
  43ecd4:	tst	w11, #0x1
  43ecd8:	csel	x13, x13, x12, ne  // ne = any
  43ecdc:	ldurb	w11, [x29, #-25]
  43ece0:	adrp	x14, 44b000 <_fini+0xac30>
  43ece4:	add	x14, x14, #0x56e
  43ece8:	tst	w11, #0x1
  43ecec:	csel	x12, x14, x12, ne  // ne = any
  43ecf0:	ldr	x2, [sp, #64]
  43ecf4:	mov	w3, #0xf3                  	// #243
  43ecf8:	ldr	x4, [sp, #56]
  43ecfc:	adrp	x5, 44b000 <_fini+0xac30>
  43ed00:	add	x5, x5, #0x537
  43ed04:	mov	x14, sp
  43ed08:	str	w8, [x14]
  43ed0c:	mov	x14, sp
  43ed10:	str	w9, [x14, #8]
  43ed14:	mov	x14, sp
  43ed18:	str	x13, [x14, #16]
  43ed1c:	mov	x13, sp
  43ed20:	str	x12, [x13, #24]
  43ed24:	bl	406c18 <log_internal_realm@plt>
  43ed28:	str	w0, [sp, #44]
  43ed2c:	b	43ed44 <devnode_acl_all+0x634>
  43ed30:	ldr	w0, [sp, #108]
  43ed34:	bl	406c28 <abs@plt>
  43ed38:	mov	w8, wzr
  43ed3c:	subs	w8, w8, w0, uxtb
  43ed40:	str	w8, [sp, #44]
  43ed44:	ldr	w8, [sp, #44]
  43ed48:	str	w8, [sp, #100]
  43ed4c:	ldr	x9, [sp, #72]
  43ed50:	ldr	x0, [x9]
  43ed54:	ldurb	w8, [x29, #-17]
  43ed58:	ldurb	w10, [x29, #-18]
  43ed5c:	ldur	w3, [x29, #-24]
  43ed60:	ldurb	w11, [x29, #-25]
  43ed64:	ldur	w5, [x29, #-32]
  43ed68:	and	w1, w8, #0x1
  43ed6c:	and	w2, w10, #0x1
  43ed70:	and	w4, w11, #0x1
  43ed74:	bl	43e1bc <devnode_acl>
  43ed78:	str	w0, [sp, #116]
  43ed7c:	ldr	w8, [sp, #116]
  43ed80:	mov	w10, #0xfffffffe            	// #-2
  43ed84:	cmp	w8, w10
  43ed88:	b.ne	43ee0c <devnode_acl_all+0x6fc>  // b.any
  43ed8c:	mov	w8, #0x7                   	// #7
  43ed90:	str	w8, [sp, #96]
  43ed94:	str	wzr, [sp, #92]
  43ed98:	str	wzr, [sp, #88]
  43ed9c:	ldr	w0, [sp, #88]
  43eda0:	bl	406c08 <log_get_max_level_realm@plt>
  43eda4:	ldr	w8, [sp, #96]
  43eda8:	and	w8, w8, #0x7
  43edac:	cmp	w0, w8
  43edb0:	b.lt	43edec <devnode_acl_all+0x6dc>  // b.tstop
  43edb4:	ldr	w8, [sp, #88]
  43edb8:	ldr	w9, [sp, #96]
  43edbc:	orr	w0, w9, w8, lsl #10
  43edc0:	ldr	w1, [sp, #92]
  43edc4:	ldr	x10, [sp, #72]
  43edc8:	ldr	x6, [x10]
  43edcc:	ldr	x2, [sp, #64]
  43edd0:	mov	w3, #0xf7                  	// #247
  43edd4:	ldr	x4, [sp, #56]
  43edd8:	adrp	x5, 44b000 <_fini+0xac30>
  43eddc:	add	x5, x5, #0x573
  43ede0:	bl	406c18 <log_internal_realm@plt>
  43ede4:	str	w0, [sp, #40]
  43ede8:	b	43ee00 <devnode_acl_all+0x6f0>
  43edec:	ldr	w0, [sp, #92]
  43edf0:	bl	406c28 <abs@plt>
  43edf4:	mov	w8, wzr
  43edf8:	subs	w8, w8, w0, uxtb
  43edfc:	str	w8, [sp, #40]
  43ee00:	ldr	w8, [sp, #40]
  43ee04:	str	w8, [sp, #84]
  43ee08:	b	43ee2c <devnode_acl_all+0x71c>
  43ee0c:	ldr	w8, [sp, #116]
  43ee10:	cmp	w8, #0x0
  43ee14:	cset	w8, ge  // ge = tcont
  43ee18:	tbnz	w8, #0, 43ee2c <devnode_acl_all+0x71c>
  43ee1c:	ldur	w8, [x29, #-108]
  43ee20:	cbnz	w8, 43ee2c <devnode_acl_all+0x71c>
  43ee24:	ldr	w8, [sp, #116]
  43ee28:	stur	w8, [x29, #-108]
  43ee2c:	b	43ec58 <devnode_acl_all+0x548>
  43ee30:	ldur	w8, [x29, #-108]
  43ee34:	stur	w8, [x29, #-4]
  43ee38:	mov	w8, #0x1                   	// #1
  43ee3c:	stur	w8, [x29, #-112]
  43ee40:	sub	x0, x29, #0x38
  43ee44:	bl	43eed4 <closedirp>
  43ee48:	sub	x0, x29, #0x30
  43ee4c:	bl	43eea0 <set_free_freep>
  43ee50:	sub	x0, x29, #0x28
  43ee54:	bl	43ee6c <sd_device_enumerator_unrefp>
  43ee58:	ldur	w0, [x29, #-4]
  43ee5c:	ldr	x28, [sp, #336]
  43ee60:	ldp	x29, x30, [sp, #320]
  43ee64:	add	sp, sp, #0x160
  43ee68:	ret

000000000043ee6c <sd_device_enumerator_unrefp>:
  43ee6c:	sub	sp, sp, #0x20
  43ee70:	stp	x29, x30, [sp, #16]
  43ee74:	add	x29, sp, #0x10
  43ee78:	str	x0, [sp, #8]
  43ee7c:	ldr	x8, [sp, #8]
  43ee80:	ldr	x8, [x8]
  43ee84:	cbz	x8, 43ee94 <sd_device_enumerator_unrefp+0x28>
  43ee88:	ldr	x8, [sp, #8]
  43ee8c:	ldr	x0, [x8]
  43ee90:	bl	4070c8 <sd_device_enumerator_unref@plt>
  43ee94:	ldp	x29, x30, [sp, #16]
  43ee98:	add	sp, sp, #0x20
  43ee9c:	ret

000000000043eea0 <set_free_freep>:
  43eea0:	sub	sp, sp, #0x20
  43eea4:	stp	x29, x30, [sp, #16]
  43eea8:	add	x29, sp, #0x10
  43eeac:	str	x0, [sp, #8]
  43eeb0:	ldr	x8, [sp, #8]
  43eeb4:	ldr	x8, [x8]
  43eeb8:	cbz	x8, 43eec8 <set_free_freep+0x28>
  43eebc:	ldr	x8, [sp, #8]
  43eec0:	ldr	x0, [x8]
  43eec4:	bl	43ef70 <set_free_free>
  43eec8:	ldp	x29, x30, [sp, #16]
  43eecc:	add	sp, sp, #0x20
  43eed0:	ret

000000000043eed4 <closedirp>:
  43eed4:	sub	sp, sp, #0x20
  43eed8:	stp	x29, x30, [sp, #16]
  43eedc:	add	x29, sp, #0x10
  43eee0:	str	x0, [sp, #8]
  43eee4:	ldr	x8, [sp, #8]
  43eee8:	ldr	x8, [x8]
  43eeec:	cbz	x8, 43eefc <closedirp+0x28>
  43eef0:	ldr	x8, [sp, #8]
  43eef4:	ldr	x0, [x8]
  43eef8:	bl	4070d8 <closedir@plt>
  43eefc:	ldp	x29, x30, [sp, #16]
  43ef00:	add	sp, sp, #0x20
  43ef04:	ret

000000000043ef08 <isempty>:
  43ef08:	sub	sp, sp, #0x10
  43ef0c:	str	x0, [sp, #8]
  43ef10:	ldr	x8, [sp, #8]
  43ef14:	mov	w9, #0x1                   	// #1
  43ef18:	str	w9, [sp, #4]
  43ef1c:	cbz	x8, 43ef38 <isempty+0x30>
  43ef20:	ldr	x8, [sp, #8]
  43ef24:	ldrb	w9, [x8]
  43ef28:	cmp	w9, #0x0
  43ef2c:	cset	w9, ne  // ne = any
  43ef30:	eor	w9, w9, #0x1
  43ef34:	str	w9, [sp, #4]
  43ef38:	ldr	w8, [sp, #4]
  43ef3c:	and	w0, w8, #0x1
  43ef40:	add	sp, sp, #0x10
  43ef44:	ret

000000000043ef48 <freep>:
  43ef48:	sub	sp, sp, #0x20
  43ef4c:	stp	x29, x30, [sp, #16]
  43ef50:	add	x29, sp, #0x10
  43ef54:	str	x0, [sp, #8]
  43ef58:	ldr	x8, [sp, #8]
  43ef5c:	ldr	x0, [x8]
  43ef60:	bl	406da8 <free@plt>
  43ef64:	ldp	x29, x30, [sp, #16]
  43ef68:	add	sp, sp, #0x20
  43ef6c:	ret

000000000043ef70 <set_free_free>:
  43ef70:	sub	sp, sp, #0x20
  43ef74:	stp	x29, x30, [sp, #16]
  43ef78:	add	x29, sp, #0x10
  43ef7c:	adrp	x1, 45f000 <logind_gperf_lookup.wordlist+0x388>
  43ef80:	ldr	x1, [x1, #1416]
  43ef84:	mov	x8, xzr
  43ef88:	str	x0, [sp, #8]
  43ef8c:	ldr	x0, [sp, #8]
  43ef90:	mov	x2, x8
  43ef94:	bl	406dc8 <internal_hashmap_free@plt>
  43ef98:	ldp	x29, x30, [sp, #16]
  43ef9c:	add	sp, sp, #0x20
  43efa0:	ret

000000000043efa4 <logind_gperf_lookup>:
  43efa4:	sub	sp, sp, #0x40
  43efa8:	stp	x29, x30, [sp, #48]
  43efac:	add	x29, sp, #0x30
  43efb0:	stur	x0, [x29, #-16]
  43efb4:	str	x1, [sp, #24]
  43efb8:	ldr	x8, [sp, #24]
  43efbc:	cmp	x8, #0x22
  43efc0:	b.hi	43f06c <logind_gperf_lookup+0xc8>  // b.pmore
  43efc4:	ldr	x8, [sp, #24]
  43efc8:	cmp	x8, #0xe
  43efcc:	b.cc	43f06c <logind_gperf_lookup+0xc8>  // b.lo, b.ul, b.last
  43efd0:	ldur	x0, [x29, #-16]
  43efd4:	ldr	x1, [sp, #24]
  43efd8:	bl	43f084 <logind_gperf_hash>
  43efdc:	str	w0, [sp, #20]
  43efe0:	ldr	w8, [sp, #20]
  43efe4:	cmp	w8, #0x31
  43efe8:	b.hi	43f06c <logind_gperf_lookup+0xc8>  // b.pmore
  43efec:	ldr	w8, [sp, #20]
  43eff0:	mov	w9, w8
  43eff4:	mov	x10, #0x20                  	// #32
  43eff8:	mul	x9, x10, x9
  43effc:	adrp	x10, 45e000 <session_vtable+0x230>
  43f000:	add	x10, x10, #0xc78
  43f004:	add	x9, x10, x9
  43f008:	ldr	x9, [x9]
  43f00c:	str	x9, [sp, #8]
  43f010:	ldr	x9, [sp, #8]
  43f014:	cbz	x9, 43f06c <logind_gperf_lookup+0xc8>
  43f018:	ldur	x8, [x29, #-16]
  43f01c:	ldrb	w9, [x8]
  43f020:	ldr	x8, [sp, #8]
  43f024:	ldrb	w10, [x8]
  43f028:	cmp	w9, w10
  43f02c:	b.ne	43f06c <logind_gperf_lookup+0xc8>  // b.any
  43f030:	ldur	x8, [x29, #-16]
  43f034:	add	x0, x8, #0x1
  43f038:	ldr	x8, [sp, #8]
  43f03c:	add	x1, x8, #0x1
  43f040:	bl	407158 <strcmp@plt>
  43f044:	cbnz	w0, 43f06c <logind_gperf_lookup+0xc8>
  43f048:	ldr	w8, [sp, #20]
  43f04c:	mov	w9, w8
  43f050:	mov	x10, #0x20                  	// #32
  43f054:	mul	x9, x10, x9
  43f058:	adrp	x10, 45e000 <session_vtable+0x230>
  43f05c:	add	x10, x10, #0xc78
  43f060:	add	x9, x10, x9
  43f064:	stur	x9, [x29, #-8]
  43f068:	b	43f074 <logind_gperf_lookup+0xd0>
  43f06c:	mov	x8, xzr
  43f070:	stur	x8, [x29, #-8]
  43f074:	ldur	x0, [x29, #-8]
  43f078:	ldp	x29, x30, [sp, #48]
  43f07c:	add	sp, sp, #0x40
  43f080:	ret

000000000043f084 <logind_gperf_hash>:
  43f084:	sub	sp, sp, #0x10
  43f088:	adrp	x8, 44b000 <_fini+0xac30>
  43f08c:	add	x8, x8, #0xcc4
  43f090:	str	x0, [sp, #8]
  43f094:	str	x1, [sp]
  43f098:	ldr	x9, [sp]
  43f09c:	ldr	x10, [sp, #8]
  43f0a0:	ldrb	w11, [x10, #9]
  43f0a4:	mov	w10, w11
  43f0a8:	ldrb	w11, [x8, x10]
  43f0ac:	mov	w8, w11
  43f0b0:	add	x8, x9, x8
  43f0b4:	mov	w0, w8
  43f0b8:	add	sp, sp, #0x10
  43f0bc:	ret

000000000043f0c0 <manager_write_brightness>:
  43f0c0:	sub	sp, sp, #0x150
  43f0c4:	stp	x29, x30, [sp, #304]
  43f0c8:	str	x28, [sp, #320]
  43f0cc:	add	x29, sp, #0x130
  43f0d0:	mov	x8, xzr
  43f0d4:	adrp	x9, 44b000 <_fini+0xac30>
  43f0d8:	add	x9, x9, #0x801
  43f0dc:	add	x9, x9, #0x3
  43f0e0:	adrp	x10, 44b000 <_fini+0xac30>
  43f0e4:	add	x10, x10, #0x873
  43f0e8:	stur	x0, [x29, #-16]
  43f0ec:	stur	x1, [x29, #-24]
  43f0f0:	stur	w2, [x29, #-28]
  43f0f4:	stur	x3, [x29, #-40]
  43f0f8:	stur	x8, [x29, #-48]
  43f0fc:	str	x9, [sp, #64]
  43f100:	str	x10, [sp, #56]
  43f104:	ldur	x8, [x29, #-16]
  43f108:	cmp	x8, #0x0
  43f10c:	cset	w9, ne  // ne = any
  43f110:	mov	w10, #0x1                   	// #1
  43f114:	eor	w9, w9, #0x1
  43f118:	eor	w9, w9, w10
  43f11c:	eor	w9, w9, w10
  43f120:	and	w9, w9, #0x1
  43f124:	mov	w0, w9
  43f128:	sxtw	x8, w0
  43f12c:	cbz	x8, 43f154 <manager_write_brightness+0x94>
  43f130:	mov	w8, wzr
  43f134:	mov	w0, w8
  43f138:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  43f13c:	add	x1, x1, #0x5ef
  43f140:	ldr	x2, [sp, #64]
  43f144:	mov	w3, #0xc8                  	// #200
  43f148:	adrp	x4, 44b000 <_fini+0xac30>
  43f14c:	add	x4, x4, #0x822
  43f150:	bl	406c68 <log_assert_failed_realm@plt>
  43f154:	ldur	x8, [x29, #-24]
  43f158:	cmp	x8, #0x0
  43f15c:	cset	w9, ne  // ne = any
  43f160:	mov	w10, #0x1                   	// #1
  43f164:	eor	w9, w9, #0x1
  43f168:	eor	w9, w9, w10
  43f16c:	eor	w9, w9, w10
  43f170:	and	w9, w9, #0x1
  43f174:	mov	w0, w9
  43f178:	sxtw	x8, w0
  43f17c:	cbz	x8, 43f1a4 <manager_write_brightness+0xe4>
  43f180:	mov	w8, wzr
  43f184:	mov	w0, w8
  43f188:	adrp	x1, 440000 <on_brightness_writer_exit+0x15c>
  43f18c:	add	x1, x1, #0xc4d
  43f190:	ldr	x2, [sp, #64]
  43f194:	mov	w3, #0xc9                  	// #201
  43f198:	adrp	x4, 44b000 <_fini+0xac30>
  43f19c:	add	x4, x4, #0x822
  43f1a0:	bl	406c68 <log_assert_failed_realm@plt>
  43f1a4:	ldur	x0, [x29, #-24]
  43f1a8:	sub	x1, x29, #0x40
  43f1ac:	bl	4072e8 <sd_device_get_syspath@plt>
  43f1b0:	stur	w0, [x29, #-68]
  43f1b4:	ldur	w8, [x29, #-68]
  43f1b8:	cmp	w8, #0x0
  43f1bc:	cset	w8, ge  // ge = tcont
  43f1c0:	tbnz	w8, #0, 43f294 <manager_write_brightness+0x1d4>
  43f1c4:	mov	x8, xzr
  43f1c8:	stur	x8, [x29, #-80]
  43f1cc:	ldur	x8, [x29, #-24]
  43f1d0:	stur	x8, [x29, #-88]
  43f1d4:	mov	w9, #0x3                   	// #3
  43f1d8:	stur	w9, [x29, #-92]
  43f1dc:	ldur	w9, [x29, #-68]
  43f1e0:	stur	w9, [x29, #-96]
  43f1e4:	ldur	x8, [x29, #-88]
  43f1e8:	cbz	x8, 43f22c <manager_write_brightness+0x16c>
  43f1ec:	mov	w8, wzr
  43f1f0:	mov	w0, w8
  43f1f4:	bl	406c08 <log_get_max_level_realm@plt>
  43f1f8:	ldur	w8, [x29, #-92]
  43f1fc:	cmp	w0, w8
  43f200:	cset	w8, ge  // ge = tcont
  43f204:	mov	w9, #0x1                   	// #1
  43f208:	eor	w8, w8, #0x1
  43f20c:	eor	w8, w8, w9
  43f210:	and	w8, w8, #0x1
  43f214:	mov	w1, w8
  43f218:	sxtw	x10, w1
  43f21c:	cbz	x10, 43f22c <manager_write_brightness+0x16c>
  43f220:	ldur	x0, [x29, #-88]
  43f224:	sub	x1, x29, #0x50
  43f228:	bl	407088 <sd_device_get_sysname@plt>
  43f22c:	ldur	w0, [x29, #-92]
  43f230:	ldur	w1, [x29, #-96]
  43f234:	ldur	x8, [x29, #-80]
  43f238:	mov	x9, xzr
  43f23c:	adrp	x10, 442000 <_fini+0x1c30>
  43f240:	add	x10, x10, #0x6be
  43f244:	cmp	x8, #0x0
  43f248:	csel	x5, x10, x9, ne  // ne = any
  43f24c:	ldur	x6, [x29, #-80]
  43f250:	ldr	x2, [sp, #64]
  43f254:	mov	w3, #0xcd                  	// #205
  43f258:	ldr	x4, [sp, #56]
  43f25c:	mov	x7, x9
  43f260:	mov	x8, sp
  43f264:	str	x9, [x8]
  43f268:	mov	x8, sp
  43f26c:	adrp	x9, 44b000 <_fini+0xac30>
  43f270:	add	x9, x9, #0x88c
  43f274:	str	x9, [x8, #8]
  43f278:	bl	407308 <log_object_internal@plt>
  43f27c:	stur	w0, [x29, #-100]
  43f280:	ldur	w11, [x29, #-100]
  43f284:	stur	w11, [x29, #-4]
  43f288:	mov	w11, #0x1                   	// #1
  43f28c:	stur	w11, [x29, #-104]
  43f290:	b	43f688 <manager_write_brightness+0x5c8>
  43f294:	ldur	x8, [x29, #-16]
  43f298:	ldr	x0, [x8, #72]
  43f29c:	ldur	x1, [x29, #-64]
  43f2a0:	bl	43f6d8 <hashmap_get>
  43f2a4:	stur	x0, [x29, #-56]
  43f2a8:	ldur	x8, [x29, #-56]
  43f2ac:	cbz	x8, 43f388 <manager_write_brightness+0x2c8>
  43f2b0:	ldur	x8, [x29, #-56]
  43f2b4:	add	x0, x8, #0x30
  43f2b8:	ldur	x1, [x29, #-40]
  43f2bc:	bl	43f704 <set_add_message>
  43f2c0:	stur	w0, [x29, #-68]
  43f2c4:	ldur	w9, [x29, #-68]
  43f2c8:	cmp	w9, #0x0
  43f2cc:	cset	w9, ge  // ge = tcont
  43f2d0:	tbnz	w9, #0, 43f360 <manager_write_brightness+0x2a0>
  43f2d4:	mov	w8, #0x3                   	// #3
  43f2d8:	stur	w8, [x29, #-108]
  43f2dc:	ldur	w8, [x29, #-68]
  43f2e0:	stur	w8, [x29, #-112]
  43f2e4:	stur	wzr, [x29, #-116]
  43f2e8:	ldur	w0, [x29, #-116]
  43f2ec:	bl	406c08 <log_get_max_level_realm@plt>
  43f2f0:	ldur	w8, [x29, #-108]
  43f2f4:	and	w8, w8, #0x7
  43f2f8:	cmp	w0, w8
  43f2fc:	b.lt	43f330 <manager_write_brightness+0x270>  // b.tstop
  43f300:	ldur	w8, [x29, #-116]
  43f304:	ldur	w9, [x29, #-108]
  43f308:	orr	w0, w9, w8, lsl #10
  43f30c:	ldur	w1, [x29, #-112]
  43f310:	ldr	x2, [sp, #64]
  43f314:	mov	w3, #0xd6                  	// #214
  43f318:	ldr	x4, [sp, #56]
  43f31c:	adrp	x5, 44b000 <_fini+0xac30>
  43f320:	add	x5, x5, #0x8bf
  43f324:	bl	406c18 <log_internal_realm@plt>
  43f328:	str	w0, [sp, #52]
  43f32c:	b	43f344 <manager_write_brightness+0x284>
  43f330:	ldur	w0, [x29, #-112]
  43f334:	bl	406c28 <abs@plt>
  43f338:	mov	w8, wzr
  43f33c:	subs	w8, w8, w0, uxtb
  43f340:	str	w8, [sp, #52]
  43f344:	ldr	w8, [sp, #52]
  43f348:	stur	w8, [x29, #-120]
  43f34c:	ldur	w8, [x29, #-120]
  43f350:	stur	w8, [x29, #-4]
  43f354:	mov	w8, #0x1                   	// #1
  43f358:	stur	w8, [x29, #-104]
  43f35c:	b	43f688 <manager_write_brightness+0x5c8>
  43f360:	ldur	w8, [x29, #-28]
  43f364:	ldur	x9, [x29, #-56]
  43f368:	str	w8, [x9, #28]
  43f36c:	ldur	x9, [x29, #-56]
  43f370:	mov	w8, #0x1                   	// #1
  43f374:	strb	w8, [x9, #32]
  43f378:	stur	wzr, [x29, #-4]
  43f37c:	mov	w8, #0x1                   	// #1
  43f380:	stur	w8, [x29, #-104]
  43f384:	b	43f688 <manager_write_brightness+0x5c8>
  43f388:	ldur	x8, [x29, #-16]
  43f38c:	add	x0, x8, #0x48
  43f390:	adrp	x1, 45f000 <logind_gperf_lookup.wordlist+0x388>
  43f394:	add	x1, x1, #0x2b8
  43f398:	bl	407f38 <internal_hashmap_ensure_allocated@plt>
  43f39c:	stur	w0, [x29, #-68]
  43f3a0:	ldur	w9, [x29, #-68]
  43f3a4:	cmp	w9, #0x0
  43f3a8:	cset	w9, ge  // ge = tcont
  43f3ac:	tbnz	w9, #0, 43f3d8 <manager_write_brightness+0x318>
  43f3b0:	mov	w8, wzr
  43f3b4:	mov	w0, w8
  43f3b8:	ldr	x1, [sp, #64]
  43f3bc:	mov	w2, #0xe2                  	// #226
  43f3c0:	ldr	x3, [sp, #56]
  43f3c4:	bl	407008 <log_oom_internal@plt>
  43f3c8:	stur	w0, [x29, #-4]
  43f3cc:	mov	w8, #0x1                   	// #1
  43f3d0:	stur	w8, [x29, #-104]
  43f3d4:	b	43f688 <manager_write_brightness+0x5c8>
  43f3d8:	mov	x0, #0x40                  	// #64
  43f3dc:	mov	x1, #0x1                   	// #1
  43f3e0:	bl	43f830 <malloc_multiply>
  43f3e4:	stur	x0, [x29, #-48]
  43f3e8:	ldur	x8, [x29, #-48]
  43f3ec:	cbnz	x8, 43f418 <manager_write_brightness+0x358>
  43f3f0:	mov	w8, wzr
  43f3f4:	mov	w0, w8
  43f3f8:	ldr	x1, [sp, #64]
  43f3fc:	mov	w2, #0xe6                  	// #230
  43f400:	ldr	x3, [sp, #56]
  43f404:	bl	407008 <log_oom_internal@plt>
  43f408:	stur	w0, [x29, #-4]
  43f40c:	mov	w8, #0x1                   	// #1
  43f410:	stur	w8, [x29, #-104]
  43f414:	b	43f688 <manager_write_brightness+0x5c8>
  43f418:	ldur	x0, [x29, #-48]
  43f41c:	add	x8, sp, #0x78
  43f420:	mov	x9, xzr
  43f424:	str	x9, [sp, #120]
  43f428:	ldur	x10, [x29, #-24]
  43f42c:	str	x0, [sp, #40]
  43f430:	mov	x0, x10
  43f434:	str	x8, [sp, #32]
  43f438:	str	x9, [sp, #24]
  43f43c:	bl	407f48 <sd_device_ref@plt>
  43f440:	ldr	x8, [sp, #32]
  43f444:	str	x0, [x8, #8]
  43f448:	ldur	x0, [x29, #-64]
  43f44c:	bl	407168 <strdup@plt>
  43f450:	ldr	x8, [sp, #32]
  43f454:	str	x0, [x8, #16]
  43f458:	str	wzr, [sp, #144]
  43f45c:	ldur	w11, [x29, #-28]
  43f460:	str	w11, [sp, #148]
  43f464:	mov	w11, #0x0                   	// #0
  43f468:	strb	w11, [x8, #32]
  43f46c:	ldr	x9, [sp, #24]
  43f470:	str	x9, [x8, #40]
  43f474:	str	x9, [x8, #48]
  43f478:	str	x9, [x8, #56]
  43f47c:	ldr	x0, [sp, #40]
  43f480:	mov	x1, x8
  43f484:	mov	x2, #0x40                  	// #64
  43f488:	bl	406cb8 <memcpy@plt>
  43f48c:	ldur	x8, [x29, #-48]
  43f490:	ldr	x8, [x8, #16]
  43f494:	cbnz	x8, 43f4c0 <manager_write_brightness+0x400>
  43f498:	mov	w8, wzr
  43f49c:	mov	w0, w8
  43f4a0:	ldr	x1, [sp, #64]
  43f4a4:	mov	w2, #0xef                  	// #239
  43f4a8:	ldr	x3, [sp, #56]
  43f4ac:	bl	407008 <log_oom_internal@plt>
  43f4b0:	stur	w0, [x29, #-4]
  43f4b4:	mov	w8, #0x1                   	// #1
  43f4b8:	stur	w8, [x29, #-104]
  43f4bc:	b	43f688 <manager_write_brightness+0x5c8>
  43f4c0:	ldur	x8, [x29, #-16]
  43f4c4:	ldr	x0, [x8, #72]
  43f4c8:	ldur	x8, [x29, #-48]
  43f4cc:	ldr	x1, [x8, #16]
  43f4d0:	ldur	x2, [x29, #-48]
  43f4d4:	bl	407228 <hashmap_put@plt>
  43f4d8:	stur	w0, [x29, #-68]
  43f4dc:	ldur	w9, [x29, #-68]
  43f4e0:	cmp	w9, #0x0
  43f4e4:	cset	w9, ge  // ge = tcont
  43f4e8:	tbnz	w9, #0, 43f578 <manager_write_brightness+0x4b8>
  43f4ec:	mov	w8, #0x3                   	// #3
  43f4f0:	str	w8, [sp, #116]
  43f4f4:	ldur	w8, [x29, #-68]
  43f4f8:	str	w8, [sp, #112]
  43f4fc:	str	wzr, [sp, #108]
  43f500:	ldr	w0, [sp, #108]
  43f504:	bl	406c08 <log_get_max_level_realm@plt>
  43f508:	ldr	w8, [sp, #116]
  43f50c:	and	w8, w8, #0x7
  43f510:	cmp	w0, w8
  43f514:	b.lt	43f548 <manager_write_brightness+0x488>  // b.tstop
  43f518:	ldr	w8, [sp, #108]
  43f51c:	ldr	w9, [sp, #116]
  43f520:	orr	w0, w9, w8, lsl #10
  43f524:	ldr	w1, [sp, #112]
  43f528:	ldr	x2, [sp, #64]
  43f52c:	mov	w3, #0xf3                  	// #243
  43f530:	ldr	x4, [sp, #56]
  43f534:	adrp	x5, 44b000 <_fini+0xac30>
  43f538:	add	x5, x5, #0x8e0
  43f53c:	bl	406c18 <log_internal_realm@plt>
  43f540:	str	w0, [sp, #20]
  43f544:	b	43f55c <manager_write_brightness+0x49c>
  43f548:	ldr	w0, [sp, #112]
  43f54c:	bl	406c28 <abs@plt>
  43f550:	mov	w8, wzr
  43f554:	subs	w8, w8, w0, uxtb
  43f558:	str	w8, [sp, #20]
  43f55c:	ldr	w8, [sp, #20]
  43f560:	str	w8, [sp, #104]
  43f564:	ldr	w8, [sp, #104]
  43f568:	stur	w8, [x29, #-4]
  43f56c:	mov	w8, #0x1                   	// #1
  43f570:	stur	w8, [x29, #-104]
  43f574:	b	43f688 <manager_write_brightness+0x5c8>
  43f578:	ldur	x8, [x29, #-16]
  43f57c:	ldur	x9, [x29, #-48]
  43f580:	str	x8, [x9]
  43f584:	ldur	x8, [x29, #-48]
  43f588:	add	x0, x8, #0x28
  43f58c:	ldur	x1, [x29, #-40]
  43f590:	bl	43f704 <set_add_message>
  43f594:	stur	w0, [x29, #-68]
  43f598:	ldur	w10, [x29, #-68]
  43f59c:	cmp	w10, #0x0
  43f5a0:	cset	w10, ge  // ge = tcont
  43f5a4:	tbnz	w10, #0, 43f634 <manager_write_brightness+0x574>
  43f5a8:	mov	w8, #0x3                   	// #3
  43f5ac:	str	w8, [sp, #100]
  43f5b0:	ldur	w8, [x29, #-68]
  43f5b4:	str	w8, [sp, #96]
  43f5b8:	str	wzr, [sp, #92]
  43f5bc:	ldr	w0, [sp, #92]
  43f5c0:	bl	406c08 <log_get_max_level_realm@plt>
  43f5c4:	ldr	w8, [sp, #100]
  43f5c8:	and	w8, w8, #0x7
  43f5cc:	cmp	w0, w8
  43f5d0:	b.lt	43f604 <manager_write_brightness+0x544>  // b.tstop
  43f5d4:	ldr	w8, [sp, #92]
  43f5d8:	ldr	w9, [sp, #100]
  43f5dc:	orr	w0, w9, w8, lsl #10
  43f5e0:	ldr	w1, [sp, #96]
  43f5e4:	ldr	x2, [sp, #64]
  43f5e8:	mov	w3, #0xf8                  	// #248
  43f5ec:	ldr	x4, [sp, #56]
  43f5f0:	adrp	x5, 44b000 <_fini+0xac30>
  43f5f4:	add	x5, x5, #0x8bf
  43f5f8:	bl	406c18 <log_internal_realm@plt>
  43f5fc:	str	w0, [sp, #16]
  43f600:	b	43f618 <manager_write_brightness+0x558>
  43f604:	ldr	w0, [sp, #96]
  43f608:	bl	406c28 <abs@plt>
  43f60c:	mov	w8, wzr
  43f610:	subs	w8, w8, w0, uxtb
  43f614:	str	w8, [sp, #16]
  43f618:	ldr	w8, [sp, #16]
  43f61c:	str	w8, [sp, #88]
  43f620:	ldr	w8, [sp, #88]
  43f624:	stur	w8, [x29, #-4]
  43f628:	mov	w8, #0x1                   	// #1
  43f62c:	stur	w8, [x29, #-104]
  43f630:	b	43f688 <manager_write_brightness+0x5c8>
  43f634:	ldur	x0, [x29, #-48]
  43f638:	bl	43f8ac <brightness_writer_fork>
  43f63c:	stur	w0, [x29, #-68]
  43f640:	ldur	w8, [x29, #-68]
  43f644:	cmp	w8, #0x0
  43f648:	cset	w8, ge  // ge = tcont
  43f64c:	tbnz	w8, #0, 43f664 <manager_write_brightness+0x5a4>
  43f650:	ldur	w8, [x29, #-68]
  43f654:	stur	w8, [x29, #-4]
  43f658:	mov	w8, #0x1                   	// #1
  43f65c:	stur	w8, [x29, #-104]
  43f660:	b	43f688 <manager_write_brightness+0x5c8>
  43f664:	ldur	x8, [x29, #-48]
  43f668:	str	x8, [sp, #80]
  43f66c:	mov	x8, xzr
  43f670:	stur	x8, [x29, #-48]
  43f674:	ldr	x8, [sp, #80]
  43f678:	str	x8, [sp, #72]
  43f67c:	stur	wzr, [x29, #-4]
  43f680:	mov	w9, #0x1                   	// #1
  43f684:	stur	w9, [x29, #-104]
  43f688:	sub	x0, x29, #0x30
  43f68c:	bl	43f6a4 <brightness_writer_freep>
  43f690:	ldur	w0, [x29, #-4]
  43f694:	ldr	x28, [sp, #320]
  43f698:	ldp	x29, x30, [sp, #304]
  43f69c:	add	sp, sp, #0x150
  43f6a0:	ret

000000000043f6a4 <brightness_writer_freep>:
  43f6a4:	sub	sp, sp, #0x20
  43f6a8:	stp	x29, x30, [sp, #16]
  43f6ac:	add	x29, sp, #0x10
  43f6b0:	str	x0, [sp, #8]
  43f6b4:	ldr	x8, [sp, #8]
  43f6b8:	ldr	x8, [x8]
  43f6bc:	cbz	x8, 43f6cc <brightness_writer_freep+0x28>
  43f6c0:	ldr	x8, [sp, #8]
  43f6c4:	ldr	x0, [x8]
  43f6c8:	bl	43fcb0 <brightness_writer_free>
  43f6cc:	ldp	x29, x30, [sp, #16]
  43f6d0:	add	sp, sp, #0x20
  43f6d4:	ret

000000000043f6d8 <hashmap_get>:
  43f6d8:	sub	sp, sp, #0x20
  43f6dc:	stp	x29, x30, [sp, #16]
  43f6e0:	add	x29, sp, #0x10
  43f6e4:	str	x0, [sp, #8]
  43f6e8:	str	x1, [sp]
  43f6ec:	ldr	x0, [sp, #8]
  43f6f0:	ldr	x1, [sp]
  43f6f4:	bl	4070e8 <internal_hashmap_get@plt>
  43f6f8:	ldp	x29, x30, [sp, #16]
  43f6fc:	add	sp, sp, #0x20
  43f700:	ret

000000000043f704 <set_add_message>:
  43f704:	sub	sp, sp, #0x40
  43f708:	stp	x29, x30, [sp, #48]
  43f70c:	add	x29, sp, #0x30
  43f710:	adrp	x8, 44b000 <_fini+0xac30>
  43f714:	add	x8, x8, #0x801
  43f718:	add	x2, x8, #0x3
  43f71c:	stur	x0, [x29, #-16]
  43f720:	str	x1, [sp, #24]
  43f724:	str	x2, [sp, #8]
  43f728:	ldur	x8, [x29, #-16]
  43f72c:	cmp	x8, #0x0
  43f730:	cset	w9, ne  // ne = any
  43f734:	mov	w10, #0x1                   	// #1
  43f738:	eor	w9, w9, #0x1
  43f73c:	eor	w9, w9, w10
  43f740:	eor	w9, w9, w10
  43f744:	and	w9, w9, #0x1
  43f748:	mov	w0, w9
  43f74c:	sxtw	x8, w0
  43f750:	cbz	x8, 43f778 <set_add_message+0x74>
  43f754:	mov	w8, wzr
  43f758:	mov	w0, w8
  43f75c:	adrp	x1, 44b000 <_fini+0xac30>
  43f760:	add	x1, x1, #0x90f
  43f764:	ldr	x2, [sp, #8]
  43f768:	mov	w3, #0xa8                  	// #168
  43f76c:	adrp	x4, 44b000 <_fini+0xac30>
  43f770:	add	x4, x4, #0x913
  43f774:	bl	406c68 <log_assert_failed_realm@plt>
  43f778:	ldr	x8, [sp, #24]
  43f77c:	cbnz	x8, 43f788 <set_add_message+0x84>
  43f780:	stur	wzr, [x29, #-4]
  43f784:	b	43f820 <set_add_message+0x11c>
  43f788:	ldr	x0, [sp, #24]
  43f78c:	bl	407f58 <sd_bus_message_get_expect_reply@plt>
  43f790:	str	w0, [sp, #20]
  43f794:	ldr	w8, [sp, #20]
  43f798:	cmp	w8, #0x0
  43f79c:	cset	w8, gt
  43f7a0:	tbnz	w8, #0, 43f7b0 <set_add_message+0xac>
  43f7a4:	ldr	w8, [sp, #20]
  43f7a8:	stur	w8, [x29, #-4]
  43f7ac:	b	43f820 <set_add_message+0x11c>
  43f7b0:	ldur	x0, [x29, #-16]
  43f7b4:	adrp	x1, 45f000 <logind_gperf_lookup.wordlist+0x388>
  43f7b8:	ldr	x1, [x1, #1424]
  43f7bc:	bl	407f68 <internal_set_ensure_allocated@plt>
  43f7c0:	str	w0, [sp, #20]
  43f7c4:	ldr	w8, [sp, #20]
  43f7c8:	cmp	w8, #0x0
  43f7cc:	cset	w8, ge  // ge = tcont
  43f7d0:	tbnz	w8, #0, 43f7e0 <set_add_message+0xdc>
  43f7d4:	ldr	w8, [sp, #20]
  43f7d8:	stur	w8, [x29, #-4]
  43f7dc:	b	43f820 <set_add_message+0x11c>
  43f7e0:	ldur	x8, [x29, #-16]
  43f7e4:	ldr	x0, [x8]
  43f7e8:	ldr	x1, [sp, #24]
  43f7ec:	bl	407f78 <set_put@plt>
  43f7f0:	str	w0, [sp, #20]
  43f7f4:	ldr	w9, [sp, #20]
  43f7f8:	cmp	w9, #0x0
  43f7fc:	cset	w9, ge  // ge = tcont
  43f800:	tbnz	w9, #0, 43f810 <set_add_message+0x10c>
  43f804:	ldr	w8, [sp, #20]
  43f808:	stur	w8, [x29, #-4]
  43f80c:	b	43f820 <set_add_message+0x11c>
  43f810:	ldr	x0, [sp, #24]
  43f814:	bl	407668 <sd_bus_message_ref@plt>
  43f818:	mov	w8, #0x1                   	// #1
  43f81c:	stur	w8, [x29, #-4]
  43f820:	ldur	w0, [x29, #-4]
  43f824:	ldp	x29, x30, [sp, #48]
  43f828:	add	sp, sp, #0x40
  43f82c:	ret

000000000043f830 <malloc_multiply>:
  43f830:	sub	sp, sp, #0x40
  43f834:	stp	x29, x30, [sp, #48]
  43f838:	add	x29, sp, #0x30
  43f83c:	stur	x0, [x29, #-16]
  43f840:	str	x1, [sp, #24]
  43f844:	ldur	x0, [x29, #-16]
  43f848:	ldr	x1, [sp, #24]
  43f84c:	bl	43fdf4 <size_multiply_overflow>
  43f850:	tbnz	w0, #0, 43f858 <malloc_multiply+0x28>
  43f854:	b	43f864 <malloc_multiply+0x34>
  43f858:	mov	x8, xzr
  43f85c:	stur	x8, [x29, #-8]
  43f860:	b	43f89c <malloc_multiply+0x6c>
  43f864:	ldur	x8, [x29, #-16]
  43f868:	ldr	x9, [sp, #24]
  43f86c:	mul	x8, x8, x9
  43f870:	str	x8, [sp, #16]
  43f874:	cbz	x8, 43f884 <malloc_multiply+0x54>
  43f878:	ldr	x8, [sp, #16]
  43f87c:	str	x8, [sp, #8]
  43f880:	b	43f88c <malloc_multiply+0x5c>
  43f884:	mov	x8, #0x1                   	// #1
  43f888:	str	x8, [sp, #8]
  43f88c:	ldr	x8, [sp, #8]
  43f890:	mov	x0, x8
  43f894:	bl	406dd8 <malloc@plt>
  43f898:	stur	x0, [x29, #-8]
  43f89c:	ldur	x0, [x29, #-8]
  43f8a0:	ldp	x29, x30, [sp, #48]
  43f8a4:	add	sp, sp, #0x40
  43f8a8:	ret

000000000043f8ac <brightness_writer_fork>:
  43f8ac:	sub	sp, sp, #0x90
  43f8b0:	stp	x29, x30, [sp, #128]
  43f8b4:	add	x29, sp, #0x80
  43f8b8:	adrp	x8, 44b000 <_fini+0xac30>
  43f8bc:	add	x8, x8, #0x801
  43f8c0:	add	x8, x8, #0x3
  43f8c4:	adrp	x9, 44b000 <_fini+0xac30>
  43f8c8:	add	x9, x9, #0x943
  43f8cc:	stur	x0, [x29, #-16]
  43f8d0:	str	x8, [sp, #32]
  43f8d4:	str	x9, [sp, #24]
  43f8d8:	ldur	x8, [x29, #-16]
  43f8dc:	cmp	x8, #0x0
  43f8e0:	cset	w9, ne  // ne = any
  43f8e4:	mov	w10, #0x1                   	// #1
  43f8e8:	eor	w9, w9, #0x1
  43f8ec:	eor	w9, w9, w10
  43f8f0:	eor	w9, w9, w10
  43f8f4:	and	w9, w9, #0x1
  43f8f8:	mov	w0, w9
  43f8fc:	sxtw	x8, w0
  43f900:	cbz	x8, 43f924 <brightness_writer_fork+0x78>
  43f904:	mov	w8, wzr
  43f908:	mov	w0, w8
  43f90c:	adrp	x1, 44b000 <_fini+0xac30>
  43f910:	add	x1, x1, #0x941
  43f914:	ldr	x2, [sp, #32]
  43f918:	mov	w3, #0x87                  	// #135
  43f91c:	ldr	x4, [sp, #24]
  43f920:	bl	406c68 <log_assert_failed_realm@plt>
  43f924:	ldur	x8, [x29, #-16]
  43f928:	ldr	x8, [x8]
  43f92c:	cmp	x8, #0x0
  43f930:	cset	w9, ne  // ne = any
  43f934:	mov	w10, #0x1                   	// #1
  43f938:	eor	w9, w9, #0x1
  43f93c:	eor	w9, w9, w10
  43f940:	eor	w9, w9, w10
  43f944:	and	w9, w9, #0x1
  43f948:	mov	w0, w9
  43f94c:	sxtw	x8, w0
  43f950:	cbz	x8, 43f974 <brightness_writer_fork+0xc8>
  43f954:	mov	w8, wzr
  43f958:	mov	w0, w8
  43f95c:	adrp	x1, 44b000 <_fini+0xac30>
  43f960:	add	x1, x1, #0x972
  43f964:	ldr	x2, [sp, #32]
  43f968:	mov	w3, #0x88                  	// #136
  43f96c:	ldr	x4, [sp, #24]
  43f970:	bl	406c68 <log_assert_failed_realm@plt>
  43f974:	ldur	x8, [x29, #-16]
  43f978:	ldr	w9, [x8, #24]
  43f97c:	cmp	w9, #0x0
  43f980:	cset	w9, eq  // eq = none
  43f984:	mov	w10, #0x1                   	// #1
  43f988:	eor	w9, w9, #0x1
  43f98c:	eor	w9, w9, w10
  43f990:	eor	w9, w9, w10
  43f994:	and	w9, w9, #0x1
  43f998:	mov	w0, w9
  43f99c:	sxtw	x8, w0
  43f9a0:	cbz	x8, 43f9c4 <brightness_writer_fork+0x118>
  43f9a4:	mov	w8, wzr
  43f9a8:	mov	w0, w8
  43f9ac:	adrp	x1, 44b000 <_fini+0xac30>
  43f9b0:	add	x1, x1, #0x97d
  43f9b4:	ldr	x2, [sp, #32]
  43f9b8:	mov	w3, #0x89                  	// #137
  43f9bc:	ldr	x4, [sp, #24]
  43f9c0:	bl	406c68 <log_assert_failed_realm@plt>
  43f9c4:	ldur	x8, [x29, #-16]
  43f9c8:	ldr	x8, [x8, #56]
  43f9cc:	cmp	x8, #0x0
  43f9d0:	cset	w9, ne  // ne = any
  43f9d4:	mov	w10, #0x1                   	// #1
  43f9d8:	eor	w9, w9, #0x1
  43f9dc:	eor	w9, w9, w10
  43f9e0:	eor	w9, w9, w10
  43f9e4:	eor	w9, w9, w10
  43f9e8:	and	w9, w9, #0x1
  43f9ec:	mov	w0, w9
  43f9f0:	sxtw	x8, w0
  43f9f4:	cbz	x8, 43fa18 <brightness_writer_fork+0x16c>
  43f9f8:	mov	w8, wzr
  43f9fc:	mov	w0, w8
  43fa00:	adrp	x1, 44b000 <_fini+0xac30>
  43fa04:	add	x1, x1, #0x98b
  43fa08:	ldr	x2, [sp, #32]
  43fa0c:	mov	w3, #0x8a                  	// #138
  43fa10:	ldr	x4, [sp, #24]
  43fa14:	bl	406c68 <log_assert_failed_realm@plt>
  43fa18:	ldur	x8, [x29, #-16]
  43fa1c:	add	x2, x8, #0x18
  43fa20:	adrp	x0, 44b000 <_fini+0xac30>
  43fa24:	add	x0, x0, #0x9a2
  43fa28:	mov	w1, #0x2e                  	// #46
  43fa2c:	bl	43fe5c <safe_fork>
  43fa30:	stur	w0, [x29, #-20]
  43fa34:	ldur	w9, [x29, #-20]
  43fa38:	cmp	w9, #0x0
  43fa3c:	cset	w9, ge  // ge = tcont
  43fa40:	tbnz	w9, #0, 43fa50 <brightness_writer_fork+0x1a4>
  43fa44:	ldur	w8, [x29, #-20]
  43fa48:	stur	w8, [x29, #-4]
  43fa4c:	b	43fca0 <brightness_writer_fork+0x3f4>
  43fa50:	ldur	w8, [x29, #-20]
  43fa54:	cbnz	w8, 43fbc8 <brightness_writer_fork+0x31c>
  43fa58:	ldur	x8, [x29, #-16]
  43fa5c:	ldr	w3, [x8, #28]
  43fa60:	sub	x0, x29, #0x21
  43fa64:	mov	x1, #0xd                   	// #13
  43fa68:	adrp	x2, 445000 <_fini+0x4c30>
  43fa6c:	add	x2, x2, #0x610
  43fa70:	bl	407358 <snprintf@plt>
  43fa74:	mov	w1, w0
  43fa78:	sxtw	x8, w1
  43fa7c:	cmp	x8, #0xd
  43fa80:	cset	w9, cc  // cc = lo, ul, last
  43fa84:	mov	w10, #0x1                   	// #1
  43fa88:	eor	w9, w9, #0x1
  43fa8c:	eor	w9, w9, w10
  43fa90:	eor	w9, w9, w10
  43fa94:	and	w9, w9, #0x1
  43fa98:	mov	w1, w9
  43fa9c:	sxtw	x8, w1
  43faa0:	cbz	x8, 43fac4 <brightness_writer_fork+0x218>
  43faa4:	mov	w8, wzr
  43faa8:	mov	w0, w8
  43faac:	adrp	x1, 44b000 <_fini+0xac30>
  43fab0:	add	x1, x1, #0x9ae
  43fab4:	ldr	x2, [sp, #32]
  43fab8:	mov	w3, #0x93                  	// #147
  43fabc:	ldr	x4, [sp, #24]
  43fac0:	bl	406c68 <log_assert_failed_realm@plt>
  43fac4:	ldur	x8, [x29, #-16]
  43fac8:	ldr	x0, [x8, #8]
  43facc:	adrp	x1, 44b000 <_fini+0xac30>
  43fad0:	add	x1, x1, #0x9d1
  43fad4:	sub	x2, x29, #0x21
  43fad8:	bl	407f88 <sd_device_set_sysattr_value@plt>
  43fadc:	stur	w0, [x29, #-20]
  43fae0:	ldur	w9, [x29, #-20]
  43fae4:	cmp	w9, #0x0
  43fae8:	cset	w9, ge  // ge = tcont
  43faec:	tbnz	w9, #0, 43fbbc <brightness_writer_fork+0x310>
  43faf0:	mov	x8, xzr
  43faf4:	stur	x8, [x29, #-48]
  43faf8:	ldur	x8, [x29, #-16]
  43fafc:	ldr	x8, [x8, #8]
  43fb00:	stur	x8, [x29, #-56]
  43fb04:	mov	w9, #0x3                   	// #3
  43fb08:	stur	w9, [x29, #-60]
  43fb0c:	ldur	w9, [x29, #-20]
  43fb10:	str	w9, [sp, #64]
  43fb14:	ldur	x8, [x29, #-56]
  43fb18:	cbz	x8, 43fb5c <brightness_writer_fork+0x2b0>
  43fb1c:	mov	w8, wzr
  43fb20:	mov	w0, w8
  43fb24:	bl	406c08 <log_get_max_level_realm@plt>
  43fb28:	ldur	w8, [x29, #-60]
  43fb2c:	cmp	w0, w8
  43fb30:	cset	w8, ge  // ge = tcont
  43fb34:	mov	w9, #0x1                   	// #1
  43fb38:	eor	w8, w8, #0x1
  43fb3c:	eor	w8, w8, w9
  43fb40:	and	w8, w8, #0x1
  43fb44:	mov	w1, w8
  43fb48:	sxtw	x10, w1
  43fb4c:	cbz	x10, 43fb5c <brightness_writer_fork+0x2b0>
  43fb50:	ldur	x0, [x29, #-56]
  43fb54:	sub	x1, x29, #0x30
  43fb58:	bl	407088 <sd_device_get_sysname@plt>
  43fb5c:	ldur	w0, [x29, #-60]
  43fb60:	ldr	w1, [sp, #64]
  43fb64:	ldur	x8, [x29, #-48]
  43fb68:	mov	x9, xzr
  43fb6c:	adrp	x10, 442000 <_fini+0x1c30>
  43fb70:	add	x10, x10, #0x6be
  43fb74:	cmp	x8, #0x0
  43fb78:	csel	x5, x10, x9, ne  // ne = any
  43fb7c:	ldur	x6, [x29, #-48]
  43fb80:	ldr	x2, [sp, #32]
  43fb84:	mov	w3, #0x97                  	// #151
  43fb88:	adrp	x4, 44b000 <_fini+0xac30>
  43fb8c:	add	x4, x4, #0x9dc
  43fb90:	mov	x7, x9
  43fb94:	mov	x8, sp
  43fb98:	str	x9, [x8]
  43fb9c:	mov	x8, sp
  43fba0:	adrp	x9, 44b000 <_fini+0xac30>
  43fba4:	add	x9, x9, #0x9f3
  43fba8:	str	x9, [x8, #8]
  43fbac:	bl	407308 <log_object_internal@plt>
  43fbb0:	str	w0, [sp, #60]
  43fbb4:	mov	w0, #0x1                   	// #1
  43fbb8:	bl	407f98 <_exit@plt>
  43fbbc:	mov	w8, wzr
  43fbc0:	mov	w0, w8
  43fbc4:	bl	407f98 <_exit@plt>
  43fbc8:	ldur	x8, [x29, #-16]
  43fbcc:	ldr	x8, [x8]
  43fbd0:	ldr	x0, [x8]
  43fbd4:	ldur	x8, [x29, #-16]
  43fbd8:	add	x1, x8, #0x38
  43fbdc:	ldur	x8, [x29, #-16]
  43fbe0:	ldr	w2, [x8, #24]
  43fbe4:	ldur	x5, [x29, #-16]
  43fbe8:	mov	w3, #0x4                   	// #4
  43fbec:	adrp	x4, 43f000 <logind_gperf_lookup+0x5c>
  43fbf0:	add	x4, x4, #0xea4
  43fbf4:	bl	407fa8 <sd_event_add_child@plt>
  43fbf8:	stur	w0, [x29, #-20]
  43fbfc:	ldur	w9, [x29, #-20]
  43fc00:	cmp	w9, #0x0
  43fc04:	cset	w9, ge  // ge = tcont
  43fc08:	tbnz	w9, #0, 43fc9c <brightness_writer_fork+0x3f0>
  43fc0c:	mov	w8, #0x3                   	// #3
  43fc10:	str	w8, [sp, #56]
  43fc14:	ldur	w8, [x29, #-20]
  43fc18:	str	w8, [sp, #52]
  43fc1c:	str	wzr, [sp, #48]
  43fc20:	ldr	w0, [sp, #48]
  43fc24:	bl	406c08 <log_get_max_level_realm@plt>
  43fc28:	ldr	w8, [sp, #56]
  43fc2c:	and	w8, w8, #0x7
  43fc30:	cmp	w0, w8
  43fc34:	b.lt	43fc74 <brightness_writer_fork+0x3c8>  // b.tstop
  43fc38:	ldr	w8, [sp, #48]
  43fc3c:	ldr	w9, [sp, #56]
  43fc40:	orr	w0, w9, w8, lsl #10
  43fc44:	ldr	w1, [sp, #52]
  43fc48:	ldur	x10, [x29, #-16]
  43fc4c:	ldr	w6, [x10, #24]
  43fc50:	ldr	x2, [sp, #32]
  43fc54:	mov	w3, #0xa0                  	// #160
  43fc58:	adrp	x4, 44b000 <_fini+0xac30>
  43fc5c:	add	x4, x4, #0x9dc
  43fc60:	adrp	x5, 44b000 <_fini+0xac30>
  43fc64:	add	x5, x5, #0xa1c
  43fc68:	bl	406c18 <log_internal_realm@plt>
  43fc6c:	str	w0, [sp, #20]
  43fc70:	b	43fc88 <brightness_writer_fork+0x3dc>
  43fc74:	ldr	w0, [sp, #52]
  43fc78:	bl	406c28 <abs@plt>
  43fc7c:	mov	w8, wzr
  43fc80:	subs	w8, w8, w0, uxtb
  43fc84:	str	w8, [sp, #20]
  43fc88:	ldr	w8, [sp, #20]
  43fc8c:	str	w8, [sp, #44]
  43fc90:	ldr	w8, [sp, #44]
  43fc94:	stur	w8, [x29, #-4]
  43fc98:	b	43fca0 <brightness_writer_fork+0x3f4>
  43fc9c:	stur	wzr, [x29, #-4]
  43fca0:	ldur	w0, [x29, #-4]
  43fca4:	ldp	x29, x30, [sp, #128]
  43fca8:	add	sp, sp, #0x90
  43fcac:	ret

000000000043fcb0 <brightness_writer_free>:
  43fcb0:	sub	sp, sp, #0x20
  43fcb4:	stp	x29, x30, [sp, #16]
  43fcb8:	add	x29, sp, #0x10
  43fcbc:	str	x0, [sp, #8]
  43fcc0:	ldr	x8, [sp, #8]
  43fcc4:	cbnz	x8, 43fccc <brightness_writer_free+0x1c>
  43fcc8:	b	43fd58 <brightness_writer_free+0xa8>
  43fccc:	ldr	x8, [sp, #8]
  43fcd0:	ldr	x8, [x8]
  43fcd4:	cbz	x8, 43fd00 <brightness_writer_free+0x50>
  43fcd8:	ldr	x8, [sp, #8]
  43fcdc:	ldr	x8, [x8, #16]
  43fce0:	cbz	x8, 43fd00 <brightness_writer_free+0x50>
  43fce4:	ldr	x8, [sp, #8]
  43fce8:	ldr	x8, [x8]
  43fcec:	ldr	x0, [x8, #72]
  43fcf0:	ldr	x8, [sp, #8]
  43fcf4:	ldr	x1, [x8, #16]
  43fcf8:	ldr	x2, [sp, #8]
  43fcfc:	bl	43fd64 <hashmap_remove_value>
  43fd00:	ldr	x8, [sp, #8]
  43fd04:	ldr	x0, [x8, #8]
  43fd08:	bl	4078b8 <sd_device_unref@plt>
  43fd0c:	ldr	x8, [sp, #8]
  43fd10:	ldr	x8, [x8, #16]
  43fd14:	mov	x0, x8
  43fd18:	bl	406da8 <free@plt>
  43fd1c:	ldr	x8, [sp, #8]
  43fd20:	ldr	x0, [x8, #40]
  43fd24:	bl	43fd98 <set_free>
  43fd28:	ldr	x8, [sp, #8]
  43fd2c:	ldr	x8, [x8, #48]
  43fd30:	mov	x0, x8
  43fd34:	bl	43fd98 <set_free>
  43fd38:	ldr	x8, [sp, #8]
  43fd3c:	ldr	x8, [x8, #56]
  43fd40:	mov	x0, x8
  43fd44:	bl	406d28 <sd_event_source_unref@plt>
  43fd48:	ldr	x8, [sp, #8]
  43fd4c:	str	x0, [x8, #56]
  43fd50:	ldr	x0, [sp, #8]
  43fd54:	bl	406da8 <free@plt>
  43fd58:	ldp	x29, x30, [sp, #16]
  43fd5c:	add	sp, sp, #0x20
  43fd60:	ret

000000000043fd64 <hashmap_remove_value>:
  43fd64:	sub	sp, sp, #0x30
  43fd68:	stp	x29, x30, [sp, #32]
  43fd6c:	add	x29, sp, #0x20
  43fd70:	stur	x0, [x29, #-8]
  43fd74:	str	x1, [sp, #16]
  43fd78:	str	x2, [sp, #8]
  43fd7c:	ldur	x0, [x29, #-8]
  43fd80:	ldr	x1, [sp, #16]
  43fd84:	ldr	x2, [sp, #8]
  43fd88:	bl	407c38 <internal_hashmap_remove_value@plt>
  43fd8c:	ldp	x29, x30, [sp, #32]
  43fd90:	add	sp, sp, #0x30
  43fd94:	ret

000000000043fd98 <set_free>:
  43fd98:	sub	sp, sp, #0x20
  43fd9c:	stp	x29, x30, [sp, #16]
  43fda0:	add	x29, sp, #0x10
  43fda4:	mov	x8, xzr
  43fda8:	str	x0, [sp, #8]
  43fdac:	ldr	x0, [sp, #8]
  43fdb0:	mov	x1, x8
  43fdb4:	mov	x2, x8
  43fdb8:	bl	406dc8 <internal_hashmap_free@plt>
  43fdbc:	ldp	x29, x30, [sp, #16]
  43fdc0:	add	sp, sp, #0x20
  43fdc4:	ret

000000000043fdc8 <__unique_prefix_static_free_wrapper4>:
  43fdc8:	sub	sp, sp, #0x20
  43fdcc:	stp	x29, x30, [sp, #16]
  43fdd0:	add	x29, sp, #0x10
  43fdd4:	str	x0, [sp, #8]
  43fdd8:	ldr	x8, [sp, #8]
  43fddc:	str	x8, [sp]
  43fde0:	ldr	x0, [sp]
  43fde4:	bl	43fcb0 <brightness_writer_free>
  43fde8:	ldp	x29, x30, [sp, #16]
  43fdec:	add	sp, sp, #0x20
  43fdf0:	ret

000000000043fdf4 <size_multiply_overflow>:
  43fdf4:	sub	sp, sp, #0x20
  43fdf8:	str	x0, [sp, #24]
  43fdfc:	str	x1, [sp, #16]
  43fe00:	ldr	x8, [sp, #16]
  43fe04:	mov	w9, #0x0                   	// #0
  43fe08:	str	w9, [sp, #12]
  43fe0c:	cbz	x8, 43fe2c <size_multiply_overflow+0x38>
  43fe10:	ldr	x8, [sp, #24]
  43fe14:	ldr	x9, [sp, #16]
  43fe18:	mov	x10, #0xffffffffffffffff    	// #-1
  43fe1c:	udiv	x9, x10, x9
  43fe20:	cmp	x8, x9
  43fe24:	cset	w11, hi  // hi = pmore
  43fe28:	str	w11, [sp, #12]
  43fe2c:	ldr	w8, [sp, #12]
  43fe30:	mov	w9, #0x1                   	// #1
  43fe34:	eor	w8, w8, #0x1
  43fe38:	eor	w8, w8, w9
  43fe3c:	and	w8, w8, #0x1
  43fe40:	mov	w0, w8
  43fe44:	sxtw	x10, w0
  43fe48:	cmp	x10, #0x0
  43fe4c:	cset	w8, ne  // ne = any
  43fe50:	and	w0, w8, #0x1
  43fe54:	add	sp, sp, #0x20
  43fe58:	ret

000000000043fe5c <safe_fork>:
  43fe5c:	sub	sp, sp, #0x30
  43fe60:	stp	x29, x30, [sp, #32]
  43fe64:	add	x29, sp, #0x20
  43fe68:	mov	x8, xzr
  43fe6c:	mov	x3, x8
  43fe70:	stur	x0, [x29, #-8]
  43fe74:	stur	w1, [x29, #-12]
  43fe78:	str	x2, [sp, #8]
  43fe7c:	ldur	x0, [x29, #-8]
  43fe80:	ldur	w9, [x29, #-12]
  43fe84:	ldr	x4, [sp, #8]
  43fe88:	mov	x1, x3
  43fe8c:	mov	x2, x8
  43fe90:	mov	w3, w9
  43fe94:	bl	407fb8 <safe_fork_full@plt>
  43fe98:	ldp	x29, x30, [sp, #32]
  43fe9c:	add	sp, sp, #0x30
  43fea0:	ret

000000000043fea4 <on_brightness_writer_exit>:
  43fea4:	sub	sp, sp, #0x70
  43fea8:	stp	x29, x30, [sp, #96]
  43feac:	add	x29, sp, #0x60
  43feb0:	adrp	x8, 44b000 <_fini+0xac30>
  43feb4:	add	x8, x8, #0x801
  43feb8:	add	x8, x8, #0x3
  43febc:	adrp	x9, 44b000 <_fini+0xac30>
  43fec0:	add	x9, x9, #0xa4b
  43fec4:	stur	x0, [x29, #-16]
  43fec8:	stur	x1, [x29, #-24]
  43fecc:	stur	x2, [x29, #-32]
  43fed0:	ldur	x10, [x29, #-32]
  43fed4:	stur	x10, [x29, #-40]
  43fed8:	str	x8, [sp, #24]
  43fedc:	str	x9, [sp, #16]
  43fee0:	ldur	x8, [x29, #-16]
  43fee4:	cmp	x8, #0x0
  43fee8:	cset	w9, ne  // ne = any
  43feec:	mov	w10, #0x1                   	// #1
  43fef0:	eor	w9, w9, #0x1
  43fef4:	eor	w9, w9, w10
  43fef8:	eor	w9, w9, w10
  43fefc:	and	w9, w9, #0x1
  43ff00:	mov	w0, w9
  43ff04:	sxtw	x8, w0
  43ff08:	cbz	x8, 43ff2c <on_brightness_writer_exit+0x88>
  43ff0c:	mov	w8, wzr
  43ff10:	mov	w0, w8
  43ff14:	adrp	x1, 442000 <_fini+0x1c30>
  43ff18:	add	x1, x1, #0xf2
  43ff1c:	ldr	x2, [sp, #24]
  43ff20:	mov	w3, #0x66                  	// #102
  43ff24:	ldr	x4, [sp, #16]
  43ff28:	bl	406c68 <log_assert_failed_realm@plt>
  43ff2c:	ldur	x8, [x29, #-24]
  43ff30:	cmp	x8, #0x0
  43ff34:	cset	w9, ne  // ne = any
  43ff38:	mov	w10, #0x1                   	// #1
  43ff3c:	eor	w9, w9, #0x1
  43ff40:	eor	w9, w9, w10
  43ff44:	eor	w9, w9, w10
  43ff48:	and	w9, w9, #0x1
  43ff4c:	mov	w0, w9
  43ff50:	sxtw	x8, w0
  43ff54:	cbz	x8, 43ff78 <on_brightness_writer_exit+0xd4>
  43ff58:	mov	w8, wzr
  43ff5c:	mov	w0, w8
  43ff60:	adrp	x1, 448000 <_fini+0x7c30>
  43ff64:	add	x1, x1, #0x528
  43ff68:	ldr	x2, [sp, #24]
  43ff6c:	mov	w3, #0x67                  	// #103
  43ff70:	ldr	x4, [sp, #16]
  43ff74:	bl	406c68 <log_assert_failed_realm@plt>
  43ff78:	ldur	x8, [x29, #-40]
  43ff7c:	cmp	x8, #0x0
  43ff80:	cset	w9, ne  // ne = any
  43ff84:	mov	w10, #0x1                   	// #1
  43ff88:	eor	w9, w9, #0x1
  43ff8c:	eor	w9, w9, w10
  43ff90:	eor	w9, w9, w10
  43ff94:	and	w9, w9, #0x1
  43ff98:	mov	w0, w9
  43ff9c:	sxtw	x8, w0
  43ffa0:	cbz	x8, 43ffc4 <on_brightness_writer_exit+0x120>
  43ffa4:	mov	w8, wzr
  43ffa8:	mov	w0, w8
  43ffac:	adrp	x1, 44b000 <_fini+0xac30>
  43ffb0:	add	x1, x1, #0x941
  43ffb4:	ldr	x2, [sp, #24]
  43ffb8:	mov	w3, #0x68                  	// #104
  43ffbc:	ldr	x4, [sp, #16]
  43ffc0:	bl	406c68 <log_assert_failed_realm@plt>
  43ffc4:	ldur	x8, [x29, #-24]
  43ffc8:	ldr	w9, [x8, #16]
  43ffcc:	ldur	x8, [x29, #-40]
  43ffd0:	ldr	w10, [x8, #24]
  43ffd4:	cmp	w9, w10
  43ffd8:	cset	w9, eq  // eq = none
  43ffdc:	mov	w10, #0x1                   	// #1
  43ffe0:	eor	w9, w9, #0x1
  43ffe4:	eor	w9, w9, w10
  43ffe8:	eor	w9, w9, w10
  43ffec:	and	w9, w9, #0x1
  43fff0:	mov	w0, w9
  43fff4:	sxtw	x8, w0
  43fff8:	cbz	x8, 44001c <on_brightness_writer_exit+0x178>
  43fffc:	mov	w8, wzr
  440000:	mov	w0, w8
  440004:	adrp	x1, 44b000 <_fini+0xac30>
  440008:	add	x1, x1, #0xa97
  44000c:	ldr	x2, [sp, #24]
  440010:	mov	w3, #0x6a                  	// #106
  440014:	ldr	x4, [sp, #16]
  440018:	bl	406c68 <log_assert_failed_realm@plt>
  44001c:	ldur	x8, [x29, #-40]
  440020:	str	wzr, [x8, #24]
  440024:	ldur	x8, [x29, #-40]
  440028:	ldr	x0, [x8, #56]
  44002c:	bl	406d28 <sd_event_source_unref@plt>
  440030:	ldur	x8, [x29, #-40]
  440034:	str	x0, [x8, #56]
  440038:	ldur	x0, [x29, #-40]
  44003c:	ldur	x8, [x29, #-24]
  440040:	ldr	w9, [x8, #8]
  440044:	mov	w10, #0x0                   	// #0
  440048:	cmp	w9, #0x1
  44004c:	str	x0, [sp, #8]
  440050:	str	w10, [sp, #4]
  440054:	b.ne	44006c <on_brightness_writer_exit+0x1c8>  // b.any
  440058:	ldur	x8, [x29, #-24]
  44005c:	ldr	w9, [x8, #24]
  440060:	cmp	w9, #0x0
  440064:	cset	w9, eq  // eq = none
  440068:	str	w9, [sp, #4]
  44006c:	ldr	w8, [sp, #4]
  440070:	mov	w9, #0xffffffb9            	// #-71
  440074:	mov	w10, wzr
  440078:	tst	w8, #0x1
  44007c:	csel	w1, w10, w9, ne  // ne = any
  440080:	ldr	x0, [sp, #8]
  440084:	bl	44012c <brightness_writer_reply>
  440088:	ldur	x11, [x29, #-40]
  44008c:	ldrb	w8, [x11, #32]
  440090:	tbnz	w8, #0, 440098 <on_brightness_writer_exit+0x1f4>
  440094:	b	440110 <on_brightness_writer_exit+0x26c>
  440098:	ldur	x8, [x29, #-40]
  44009c:	mov	w9, #0x0                   	// #0
  4400a0:	strb	w9, [x8, #32]
  4400a4:	ldur	x8, [x29, #-40]
  4400a8:	ldr	x0, [x8, #40]
  4400ac:	bl	43fd98 <set_free>
  4400b0:	ldur	x8, [x29, #-40]
  4400b4:	ldr	x8, [x8, #48]
  4400b8:	str	x8, [sp, #40]
  4400bc:	ldur	x8, [x29, #-40]
  4400c0:	mov	x10, xzr
  4400c4:	str	x10, [x8, #48]
  4400c8:	ldr	x8, [sp, #40]
  4400cc:	str	x8, [sp, #32]
  4400d0:	ldr	x8, [sp, #32]
  4400d4:	ldur	x10, [x29, #-40]
  4400d8:	str	x8, [x10, #40]
  4400dc:	ldur	x8, [x29, #-40]
  4400e0:	mov	x0, x8
  4400e4:	bl	43f8ac <brightness_writer_fork>
  4400e8:	stur	w0, [x29, #-44]
  4400ec:	ldur	w9, [x29, #-44]
  4400f0:	cmp	w9, #0x0
  4400f4:	cset	w9, lt  // lt = tstop
  4400f8:	tbnz	w9, #0, 440104 <on_brightness_writer_exit+0x260>
  4400fc:	stur	wzr, [x29, #-4]
  440100:	b	44011c <on_brightness_writer_exit+0x278>
  440104:	ldur	x0, [x29, #-40]
  440108:	ldur	w1, [x29, #-44]
  44010c:	bl	44012c <brightness_writer_reply>
  440110:	ldur	x0, [x29, #-40]
  440114:	bl	43fcb0 <brightness_writer_free>
  440118:	stur	wzr, [x29, #-4]
  44011c:	ldur	w0, [x29, #-4]
  440120:	ldp	x29, x30, [sp, #96]
  440124:	add	sp, sp, #0x70
  440128:	ret

000000000044012c <brightness_writer_reply>:
  44012c:	sub	sp, sp, #0x50
  440130:	stp	x29, x30, [sp, #64]
  440134:	add	x29, sp, #0x40
  440138:	adrp	x8, 44b000 <_fini+0xac30>
  44013c:	add	x8, x8, #0x801
  440140:	add	x8, x8, #0x3
  440144:	stur	x0, [x29, #-8]
  440148:	stur	w1, [x29, #-12]
  44014c:	str	x8, [sp, #8]
  440150:	ldur	x8, [x29, #-8]
  440154:	cmp	x8, #0x0
  440158:	cset	w9, ne  // ne = any
  44015c:	mov	w10, #0x1                   	// #1
  440160:	eor	w9, w9, #0x1
  440164:	eor	w9, w9, w10
  440168:	eor	w9, w9, w10
  44016c:	and	w9, w9, #0x1
  440170:	mov	w0, w9
  440174:	sxtw	x8, w0
  440178:	cbz	x8, 4401a0 <brightness_writer_reply+0x74>
  44017c:	mov	w8, wzr
  440180:	mov	w0, w8
  440184:	adrp	x1, 44b000 <_fini+0xac30>
  440188:	add	x1, x1, #0x941
  44018c:	ldr	x2, [sp, #8]
  440190:	mov	w3, #0x4e                  	// #78
  440194:	adrp	x4, 44b000 <_fini+0xac30>
  440198:	add	x4, x4, #0xaae
  44019c:	bl	406c68 <log_assert_failed_realm@plt>
  4401a0:	mov	x8, xzr
  4401a4:	stur	x8, [x29, #-24]
  4401a8:	ldur	x8, [x29, #-8]
  4401ac:	ldr	x0, [x8, #40]
  4401b0:	bl	4402f0 <set_steal_first>
  4401b4:	stur	x0, [x29, #-24]
  4401b8:	ldur	x8, [x29, #-24]
  4401bc:	cbnz	x8, 4401cc <brightness_writer_reply+0xa0>
  4401c0:	mov	w8, #0x4                   	// #4
  4401c4:	stur	w8, [x29, #-28]
  4401c8:	b	440294 <brightness_writer_reply+0x168>
  4401cc:	ldur	w8, [x29, #-12]
  4401d0:	cbnz	w8, 4401ec <brightness_writer_reply+0xc0>
  4401d4:	ldur	x0, [x29, #-24]
  4401d8:	mov	x8, xzr
  4401dc:	mov	x1, x8
  4401e0:	bl	4075b8 <sd_bus_reply_method_return@plt>
  4401e4:	stur	w0, [x29, #-16]
  4401e8:	b	440204 <brightness_writer_reply+0xd8>
  4401ec:	ldur	x0, [x29, #-24]
  4401f0:	ldur	w1, [x29, #-12]
  4401f4:	adrp	x2, 44b000 <_fini+0xac30>
  4401f8:	add	x2, x2, #0xae4
  4401fc:	bl	407fc8 <sd_bus_reply_method_errnof@plt>
  440200:	stur	w0, [x29, #-16]
  440204:	ldur	w8, [x29, #-16]
  440208:	cmp	w8, #0x0
  44020c:	cset	w8, ge  // ge = tcont
  440210:	tbnz	w8, #0, 440290 <brightness_writer_reply+0x164>
  440214:	mov	w8, #0x4                   	// #4
  440218:	str	w8, [sp, #32]
  44021c:	ldur	w8, [x29, #-16]
  440220:	str	w8, [sp, #28]
  440224:	str	wzr, [sp, #24]
  440228:	ldr	w0, [sp, #24]
  44022c:	bl	406c08 <log_get_max_level_realm@plt>
  440230:	ldr	w8, [sp, #32]
  440234:	and	w8, w8, #0x7
  440238:	cmp	w0, w8
  44023c:	b.lt	440274 <brightness_writer_reply+0x148>  // b.tstop
  440240:	ldr	w8, [sp, #24]
  440244:	ldr	w9, [sp, #32]
  440248:	orr	w0, w9, w8, lsl #10
  44024c:	ldr	w1, [sp, #28]
  440250:	ldr	x2, [sp, #8]
  440254:	mov	w3, #0x5c                  	// #92
  440258:	adrp	x4, 44b000 <_fini+0xac30>
  44025c:	add	x4, x4, #0xb0d
  440260:	adrp	x5, 44b000 <_fini+0xac30>
  440264:	add	x5, x5, #0xb25
  440268:	bl	406c18 <log_internal_realm@plt>
  44026c:	str	w0, [sp, #4]
  440270:	b	440288 <brightness_writer_reply+0x15c>
  440274:	ldr	w0, [sp, #28]
  440278:	bl	406c28 <abs@plt>
  44027c:	mov	w8, wzr
  440280:	subs	w8, w8, w0, uxtb
  440284:	str	w8, [sp, #4]
  440288:	ldr	w8, [sp, #4]
  44028c:	str	w8, [sp, #20]
  440290:	stur	wzr, [x29, #-28]
  440294:	sub	x0, x29, #0x18
  440298:	bl	4402bc <sd_bus_message_unrefp>
  44029c:	ldur	w8, [x29, #-28]
  4402a0:	cbz	w8, 4402ac <brightness_writer_reply+0x180>
  4402a4:	b	4402a8 <brightness_writer_reply+0x17c>
  4402a8:	b	4402b0 <brightness_writer_reply+0x184>
  4402ac:	b	4401a0 <brightness_writer_reply+0x74>
  4402b0:	ldp	x29, x30, [sp, #64]
  4402b4:	add	sp, sp, #0x50
  4402b8:	ret

00000000004402bc <sd_bus_message_unrefp>:
  4402bc:	sub	sp, sp, #0x20
  4402c0:	stp	x29, x30, [sp, #16]
  4402c4:	add	x29, sp, #0x10
  4402c8:	str	x0, [sp, #8]
  4402cc:	ldr	x8, [sp, #8]
  4402d0:	ldr	x8, [x8]
  4402d4:	cbz	x8, 4402e4 <sd_bus_message_unrefp+0x28>
  4402d8:	ldr	x8, [sp, #8]
  4402dc:	ldr	x0, [x8]
  4402e0:	bl	407818 <sd_bus_message_unref@plt>
  4402e4:	ldp	x29, x30, [sp, #16]
  4402e8:	add	sp, sp, #0x20
  4402ec:	ret

00000000004402f0 <set_steal_first>:
  4402f0:	sub	sp, sp, #0x20
  4402f4:	stp	x29, x30, [sp, #16]
  4402f8:	add	x29, sp, #0x10
  4402fc:	mov	x8, xzr
  440300:	str	x0, [sp, #8]
  440304:	ldr	x0, [sp, #8]
  440308:	mov	w9, #0x1                   	// #1
  44030c:	and	w1, w9, #0x1
  440310:	mov	x2, x8
  440314:	bl	406db8 <internal_hashmap_first_key_and_value@plt>
  440318:	ldp	x29, x30, [sp, #16]
  44031c:	add	sp, sp, #0x20
  440320:	ret
  440324:	udf	#0

0000000000440328 <__libc_csu_init>:
  440328:	stp	x29, x30, [sp, #-64]!
  44032c:	mov	x29, sp
  440330:	stp	x19, x20, [sp, #16]
  440334:	adrp	x20, 45c000 <__FRAME_END__+0x10118>
  440338:	add	x20, x20, #0x300
  44033c:	stp	x21, x22, [sp, #32]
  440340:	adrp	x21, 45c000 <__FRAME_END__+0x10118>
  440344:	add	x21, x21, #0x2f8
  440348:	sub	x20, x20, x21
  44034c:	mov	w22, w0
  440350:	stp	x23, x24, [sp, #48]
  440354:	mov	x23, x1
  440358:	mov	x24, x2
  44035c:	bl	406b30 <_init>
  440360:	cmp	xzr, x20, asr #3
  440364:	b.eq	440390 <__libc_csu_init+0x68>  // b.none
  440368:	asr	x20, x20, #3
  44036c:	mov	x19, #0x0                   	// #0
  440370:	ldr	x3, [x21, x19, lsl #3]
  440374:	mov	x2, x24
  440378:	add	x19, x19, #0x1
  44037c:	mov	x1, x23
  440380:	mov	w0, w22
  440384:	blr	x3
  440388:	cmp	x20, x19
  44038c:	b.ne	440370 <__libc_csu_init+0x48>  // b.any
  440390:	ldp	x19, x20, [sp, #16]
  440394:	ldp	x21, x22, [sp, #32]
  440398:	ldp	x23, x24, [sp, #48]
  44039c:	ldp	x29, x30, [sp], #64
  4403a0:	ret
  4403a4:	nop

00000000004403a8 <__libc_csu_fini>:
  4403a8:	ret
  4403ac:	udf	#0

00000000004403b0 <fstat64>:
  4403b0:	mov	x2, x1
  4403b4:	mov	w1, w0
  4403b8:	mov	w0, #0x0                   	// #0
  4403bc:	b	407fe8 <__fxstat64@plt>

00000000004403c0 <lstat64>:
  4403c0:	mov	x2, x1
  4403c4:	mov	x1, x0
  4403c8:	mov	w0, #0x0                   	// #0
  4403cc:	b	407ff8 <__lxstat64@plt>

Disassembly of section .fini:

00000000004403d0 <_fini>:
  4403d0:	stp	x29, x30, [sp, #-16]!
  4403d4:	mov	x29, sp
  4403d8:	ldp	x29, x30, [sp], #16
  4403dc:	ret
