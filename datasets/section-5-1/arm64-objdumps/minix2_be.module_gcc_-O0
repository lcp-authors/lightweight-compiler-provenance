
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//minix2_be.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_swap_bytes16>:
       0:	sub	sp, sp, #0x10
       4:	strh	w0, [sp, #14]
       8:	ldrh	w0, [sp, #14]
       c:	lsl	w0, w0, #8
      10:	sxth	w1, w0
      14:	ldrh	w0, [sp, #14]
      18:	lsr	w0, w0, #8
      1c:	and	w0, w0, #0xffff
      20:	sxth	w0, w0
      24:	orr	w0, w1, w0
      28:	sxth	w0, w0
      2c:	and	w0, w0, #0xffff
      30:	add	sp, sp, #0x10
      34:	ret

0000000000000038 <grub_swap_bytes32>:
      38:	sub	sp, sp, #0x10
      3c:	str	w0, [sp, #12]
      40:	ldr	w0, [sp, #12]
      44:	rev	w0, w0
      48:	add	sp, sp, #0x10
      4c:	ret

0000000000000050 <grub_fs_register>:
      50:	stp	x29, x30, [sp, #-32]!
      54:	mov	x29, sp
      58:	str	x0, [sp, #24]
      5c:	ldr	x1, [sp, #24]
      60:	adrp	x0, 0 <grub_swap_bytes16>
      64:	add	x0, x0, #0x0
      68:	ldr	x0, [x0]
      6c:	bl	0 <grub_list_push>
      70:	nop
      74:	ldp	x29, x30, [sp], #32
      78:	ret
      7c:	nop
	...

0000000000000088 <grub_fs_unregister>:
      88:	stp	x29, x30, [sp, #-32]!
      8c:	mov	x29, sp
      90:	str	x0, [sp, #24]
      94:	ldr	x0, [sp, #24]
      98:	bl	0 <grub_list_remove>
      9c:	nop
      a0:	ldp	x29, x30, [sp], #32
      a4:	ret

00000000000000a8 <grub_minix_zone2sect>:
      a8:	stp	x29, x30, [sp, #-48]!
      ac:	mov	x29, sp
      b0:	str	x0, [sp, #24]
      b4:	str	w1, [sp, #20]
      b8:	ldr	x0, [sp, #24]
      bc:	ldrh	w0, [x0, #10]
      c0:	bl	0 <grub_swap_bytes16>
      c4:	and	w0, w0, #0xffff
      c8:	add	w0, w0, #0x1
      cc:	str	w0, [sp, #44]
      d0:	ldr	w1, [sp, #20]
      d4:	ldr	w0, [sp, #44]
      d8:	lsl	x0, x1, x0
      dc:	ldp	x29, x30, [sp], #48
      e0:	ret

00000000000000e4 <grub_get_indir>:
      e4:	stp	x29, x30, [sp, #-64]!
      e8:	mov	x29, sp
      ec:	str	x19, [sp, #16]
      f0:	str	x0, [sp, #40]
      f4:	str	w1, [sp, #36]
      f8:	str	w2, [sp, #32]
      fc:	ldr	x0, [sp, #40]
     100:	ldr	x19, [x0, #96]
     104:	ldr	w1, [sp, #36]
     108:	ldr	x0, [sp, #40]
     10c:	bl	a8 <grub_minix_zone2sect>
     110:	mov	x5, x0
     114:	ldr	w0, [sp, #32]
     118:	lsl	x0, x0, #2
     11c:	add	x1, sp, #0x3c
     120:	mov	x4, x1
     124:	mov	x3, #0x4                   	// #4
     128:	mov	x2, x0
     12c:	mov	x1, x5
     130:	mov	x0, x19
     134:	bl	0 <grub_disk_read>
     138:	ldr	w0, [sp, #60]
     13c:	bl	38 <grub_swap_bytes32>
     140:	ldr	x19, [sp, #16]
     144:	ldp	x29, x30, [sp], #64
     148:	ret

000000000000014c <grub_minix_get_file_block>:
     14c:	stp	x29, x30, [sp, #-48]!
     150:	mov	x29, sp
     154:	str	x0, [sp, #24]
     158:	str	w1, [sp, #20]
     15c:	ldr	w0, [sp, #20]
     160:	cmp	w0, #0x6
     164:	b.hi	188 <grub_minix_get_file_block+0x3c>  // b.pmore
     168:	ldr	x1, [sp, #24]
     16c:	ldr	w0, [sp, #20]
     170:	add	x0, x0, #0x8
     174:	lsl	x0, x0, #2
     178:	add	x0, x1, x0
     17c:	ldr	w0, [x0, #12]
     180:	bl	38 <grub_swap_bytes32>
     184:	b	390 <grub_minix_get_file_block+0x244>
     188:	ldr	w0, [sp, #20]
     18c:	sub	w0, w0, #0x7
     190:	str	w0, [sp, #20]
     194:	ldr	x0, [sp, #24]
     198:	ldr	w0, [x0, #84]
     19c:	ldr	w1, [sp, #20]
     1a0:	cmp	w1, w0
     1a4:	b.cs	1d0 <grub_minix_get_file_block+0x84>  // b.hs, b.nlast
     1a8:	ldr	x0, [sp, #24]
     1ac:	ldr	w0, [x0, #72]
     1b0:	bl	38 <grub_swap_bytes32>
     1b4:	ldr	w2, [sp, #20]
     1b8:	mov	w1, w0
     1bc:	ldr	x0, [sp, #24]
     1c0:	bl	e4 <grub_get_indir>
     1c4:	str	w0, [sp, #44]
     1c8:	ldr	w0, [sp, #44]
     1cc:	b	390 <grub_minix_get_file_block+0x244>
     1d0:	ldr	x0, [sp, #24]
     1d4:	ldr	w0, [x0, #84]
     1d8:	ldr	w1, [sp, #20]
     1dc:	sub	w0, w1, w0
     1e0:	str	w0, [sp, #20]
     1e4:	ldr	w1, [sp, #20]
     1e8:	ldr	x0, [sp, #24]
     1ec:	ldr	w0, [x0, #84]
     1f0:	mov	w2, w0
     1f4:	ldr	x0, [sp, #24]
     1f8:	ldr	w0, [x0, #84]
     1fc:	mov	w0, w0
     200:	mul	x0, x2, x0
     204:	cmp	x1, x0
     208:	b.cs	274 <grub_minix_get_file_block+0x128>  // b.hs, b.nlast
     20c:	ldr	x0, [sp, #24]
     210:	ldr	w0, [x0, #76]
     214:	bl	38 <grub_swap_bytes32>
     218:	mov	w3, w0
     21c:	ldr	x0, [sp, #24]
     220:	ldr	w0, [x0, #84]
     224:	ldr	w1, [sp, #20]
     228:	udiv	w0, w1, w0
     22c:	mov	w2, w0
     230:	mov	w1, w3
     234:	ldr	x0, [sp, #24]
     238:	bl	e4 <grub_get_indir>
     23c:	str	w0, [sp, #44]
     240:	ldr	x0, [sp, #24]
     244:	ldr	w1, [x0, #84]
     248:	ldr	w0, [sp, #20]
     24c:	udiv	w2, w0, w1
     250:	mul	w1, w2, w1
     254:	sub	w0, w0, w1
     258:	mov	w2, w0
     25c:	ldr	w1, [sp, #44]
     260:	ldr	x0, [sp, #24]
     264:	bl	e4 <grub_get_indir>
     268:	str	w0, [sp, #44]
     26c:	ldr	w0, [sp, #44]
     270:	b	390 <grub_minix_get_file_block+0x244>
     274:	ldr	x0, [sp, #24]
     278:	ldr	w1, [x0, #84]
     27c:	ldr	x0, [sp, #24]
     280:	ldr	w0, [x0, #84]
     284:	mul	w0, w1, w0
     288:	ldr	w1, [sp, #20]
     28c:	sub	w0, w1, w0
     290:	str	w0, [sp, #20]
     294:	ldr	w1, [sp, #20]
     298:	ldr	x0, [sp, #24]
     29c:	ldr	w0, [x0, #84]
     2a0:	mov	w2, w0
     2a4:	ldr	x0, [sp, #24]
     2a8:	ldr	w0, [x0, #84]
     2ac:	mov	w0, w0
     2b0:	mul	x2, x2, x0
     2b4:	ldr	x0, [sp, #24]
     2b8:	ldr	w0, [x0, #84]
     2bc:	mov	w0, w0
     2c0:	mul	x0, x2, x0
     2c4:	cmp	x1, x0
     2c8:	b.cs	378 <grub_minix_get_file_block+0x22c>  // b.hs, b.nlast
     2cc:	ldr	x0, [sp, #24]
     2d0:	ldr	w0, [x0, #80]
     2d4:	bl	38 <grub_swap_bytes32>
     2d8:	mov	w3, w0
     2dc:	ldr	x0, [sp, #24]
     2e0:	ldr	w0, [x0, #84]
     2e4:	ldr	w1, [sp, #20]
     2e8:	udiv	w1, w1, w0
     2ec:	ldr	x0, [sp, #24]
     2f0:	ldr	w0, [x0, #84]
     2f4:	udiv	w0, w1, w0
     2f8:	mov	w2, w0
     2fc:	mov	w1, w3
     300:	ldr	x0, [sp, #24]
     304:	bl	e4 <grub_get_indir>
     308:	str	w0, [sp, #44]
     30c:	ldr	x0, [sp, #24]
     310:	ldr	w0, [x0, #84]
     314:	ldr	w1, [sp, #20]
     318:	udiv	w0, w1, w0
     31c:	ldr	x1, [sp, #24]
     320:	ldr	w1, [x1, #84]
     324:	udiv	w2, w0, w1
     328:	mul	w1, w2, w1
     32c:	sub	w0, w0, w1
     330:	mov	w2, w0
     334:	ldr	w1, [sp, #44]
     338:	ldr	x0, [sp, #24]
     33c:	bl	e4 <grub_get_indir>
     340:	str	w0, [sp, #44]
     344:	ldr	x0, [sp, #24]
     348:	ldr	w1, [x0, #84]
     34c:	ldr	w0, [sp, #20]
     350:	udiv	w2, w0, w1
     354:	mul	w1, w2, w1
     358:	sub	w0, w0, w1
     35c:	mov	w2, w0
     360:	ldr	w1, [sp, #44]
     364:	ldr	x0, [sp, #24]
     368:	bl	e4 <grub_get_indir>
     36c:	str	w0, [sp, #44]
     370:	ldr	w0, [sp, #44]
     374:	b	390 <grub_minix_get_file_block+0x244>
     378:	adrp	x0, 0 <grub_swap_bytes16>
     37c:	add	x0, x0, #0x0
     380:	ldr	x1, [x0]
     384:	mov	w0, #0xb                   	// #11
     388:	bl	0 <grub_error>
     38c:	mov	w0, #0x0                   	// #0
     390:	ldp	x29, x30, [sp], #48
     394:	ret
	...

00000000000003a0 <grub_minix_read_file>:
     3a0:	stp	x29, x30, [sp, #-128]!
     3a4:	mov	x29, sp
     3a8:	str	x19, [sp, #16]
     3ac:	str	x0, [sp, #72]
     3b0:	str	x1, [sp, #64]
     3b4:	str	x2, [sp, #56]
     3b8:	str	x3, [sp, #48]
     3bc:	str	x4, [sp, #40]
     3c0:	str	x5, [sp, #32]
     3c4:	ldr	x0, [sp, #72]
     3c8:	ldr	w0, [x0, #28]
     3cc:	bl	38 <grub_swap_bytes32>
     3d0:	mov	w0, w0
     3d4:	ldr	x1, [sp, #48]
     3d8:	cmp	x1, x0
     3dc:	b.ls	3fc <grub_minix_read_file+0x5c>  // b.plast
     3e0:	adrp	x0, 0 <grub_swap_bytes16>
     3e4:	add	x0, x0, #0x0
     3e8:	ldr	x1, [x0]
     3ec:	mov	w0, #0xb                   	// #11
     3f0:	bl	0 <grub_error>
     3f4:	mov	x0, #0xffffffffffffffff    	// #-1
     3f8:	b	64c <grub_minix_read_file+0x2ac>
     3fc:	ldr	x1, [sp, #40]
     400:	ldr	x0, [sp, #48]
     404:	add	x19, x1, x0
     408:	ldr	x0, [sp, #72]
     40c:	ldr	w0, [x0, #28]
     410:	bl	38 <grub_swap_bytes32>
     414:	mov	w0, w0
     418:	cmp	x19, x0
     41c:	b.ls	43c <grub_minix_read_file+0x9c>  // b.plast
     420:	ldr	x0, [sp, #72]
     424:	ldr	w0, [x0, #28]
     428:	bl	38 <grub_swap_bytes32>
     42c:	mov	w1, w0
     430:	ldr	x0, [sp, #48]
     434:	sub	x0, x1, x0
     438:	str	x0, [sp, #40]
     43c:	ldr	x0, [sp, #40]
     440:	cmp	x0, #0x0
     444:	b.ne	450 <grub_minix_read_file+0xb0>  // b.any
     448:	mov	x0, #0x0                   	// #0
     44c:	b	64c <grub_minix_read_file+0x2ac>
     450:	ldr	x1, [sp, #40]
     454:	ldr	x0, [sp, #48]
     458:	add	x0, x1, x0
     45c:	sub	x0, x0, #0x1
     460:	lsr	x0, x0, #9
     464:	mov	w1, w0
     468:	ldr	x0, [sp, #72]
     46c:	ldr	x0, [x0, #112]
     470:	udiv	x0, x1, x0
     474:	add	w0, w0, #0x1
     478:	str	w0, [sp, #100]
     47c:	ldr	x0, [sp, #48]
     480:	mov	w1, w0
     484:	ldr	x0, [sp, #72]
     488:	ldr	x0, [x0, #112]
     48c:	lsl	x0, x0, #9
     490:	udiv	x0, x1, x0
     494:	str	w0, [sp, #96]
     498:	ldr	x0, [sp, #48]
     49c:	mov	w0, w0
     4a0:	ldr	x1, [sp, #72]
     4a4:	ldr	x1, [x1, #112]
     4a8:	lsl	x1, x1, #9
     4ac:	udiv	x2, x0, x1
     4b0:	mul	x1, x2, x1
     4b4:	sub	x0, x0, x1
     4b8:	str	w0, [sp, #92]
     4bc:	ldr	w0, [sp, #96]
     4c0:	str	w0, [sp, #124]
     4c4:	b	638 <grub_minix_read_file+0x298>
     4c8:	ldr	x0, [sp, #72]
     4cc:	ldr	x0, [x0, #112]
     4d0:	lsl	x0, x0, #9
     4d4:	str	x0, [sp, #112]
     4d8:	str	xzr, [sp, #104]
     4dc:	ldr	w1, [sp, #124]
     4e0:	ldr	x0, [sp, #72]
     4e4:	bl	14c <grub_minix_get_file_block>
     4e8:	str	w0, [sp, #88]
     4ec:	adrp	x0, 0 <grub_swap_bytes16>
     4f0:	add	x0, x0, #0x0
     4f4:	ldr	x0, [x0]
     4f8:	ldr	w0, [x0]
     4fc:	cmp	w0, #0x0
     500:	b.eq	50c <grub_minix_read_file+0x16c>  // b.none
     504:	mov	x0, #0xffffffffffffffff    	// #-1
     508:	b	64c <grub_minix_read_file+0x2ac>
     50c:	ldr	w0, [sp, #100]
     510:	sub	w0, w0, #0x1
     514:	ldr	w1, [sp, #124]
     518:	cmp	w1, w0
     51c:	b.ne	56c <grub_minix_read_file+0x1cc>  // b.any
     520:	ldr	x0, [sp, #40]
     524:	mov	w1, w0
     528:	ldr	x0, [sp, #48]
     52c:	add	w0, w1, w0
     530:	mov	w0, w0
     534:	ldr	x1, [sp, #72]
     538:	ldr	x1, [x1, #112]
     53c:	lsl	x1, x1, #9
     540:	udiv	x2, x0, x1
     544:	mul	x1, x2, x1
     548:	sub	x0, x0, x1
     54c:	str	x0, [sp, #112]
     550:	ldr	x0, [sp, #112]
     554:	cmp	x0, #0x0
     558:	b.ne	56c <grub_minix_read_file+0x1cc>  // b.any
     55c:	ldr	x0, [sp, #72]
     560:	ldr	x0, [x0, #112]
     564:	lsl	x0, x0, #9
     568:	str	x0, [sp, #112]
     56c:	ldr	w1, [sp, #124]
     570:	ldr	w0, [sp, #96]
     574:	cmp	w1, w0
     578:	b.ne	594 <grub_minix_read_file+0x1f4>  // b.any
     57c:	ldr	w0, [sp, #92]
     580:	str	x0, [sp, #104]
     584:	ldr	x1, [sp, #112]
     588:	ldr	x0, [sp, #104]
     58c:	sub	x0, x1, x0
     590:	str	x0, [sp, #112]
     594:	ldr	x0, [sp, #72]
     598:	ldr	x0, [x0, #96]
     59c:	ldr	x1, [sp, #64]
     5a0:	str	x1, [x0, #48]
     5a4:	ldr	x0, [sp, #72]
     5a8:	ldr	x0, [x0, #96]
     5ac:	ldr	x1, [sp, #56]
     5b0:	str	x1, [x0, #56]
     5b4:	ldr	x0, [sp, #72]
     5b8:	ldr	x19, [x0, #96]
     5bc:	ldr	w1, [sp, #88]
     5c0:	ldr	x0, [sp, #72]
     5c4:	bl	a8 <grub_minix_zone2sect>
     5c8:	ldr	x4, [sp, #32]
     5cc:	ldr	x3, [sp, #112]
     5d0:	ldr	x2, [sp, #104]
     5d4:	mov	x1, x0
     5d8:	mov	x0, x19
     5dc:	bl	0 <grub_disk_read>
     5e0:	ldr	x0, [sp, #72]
     5e4:	ldr	x0, [x0, #96]
     5e8:	str	xzr, [x0, #48]
     5ec:	adrp	x0, 0 <grub_swap_bytes16>
     5f0:	add	x0, x0, #0x0
     5f4:	ldr	x0, [x0]
     5f8:	ldr	w0, [x0]
     5fc:	cmp	w0, #0x0
     600:	b.eq	60c <grub_minix_read_file+0x26c>  // b.none
     604:	mov	x0, #0xffffffffffffffff    	// #-1
     608:	b	64c <grub_minix_read_file+0x2ac>
     60c:	ldr	x0, [sp, #72]
     610:	ldr	x0, [x0, #112]
     614:	lsl	x1, x0, #9
     618:	ldr	x0, [sp, #104]
     61c:	sub	x0, x1, x0
     620:	ldr	x1, [sp, #32]
     624:	add	x0, x1, x0
     628:	str	x0, [sp, #32]
     62c:	ldr	w0, [sp, #124]
     630:	add	w0, w0, #0x1
     634:	str	w0, [sp, #124]
     638:	ldr	w1, [sp, #124]
     63c:	ldr	w0, [sp, #100]
     640:	cmp	w1, w0
     644:	b.cc	4c8 <grub_minix_read_file+0x128>  // b.lo, b.ul, b.last
     648:	ldr	x0, [sp, #40]
     64c:	ldr	x19, [sp, #16]
     650:	ldp	x29, x30, [sp], #128
     654:	ret
	...

0000000000000668 <grub_minix_read_inode>:
     668:	stp	x29, x30, [sp, #-80]!
     66c:	mov	x29, sp
     670:	str	x19, [sp, #16]
     674:	str	x0, [sp, #40]
     678:	strh	w1, [sp, #38]
     67c:	ldr	x0, [sp, #40]
     680:	str	x0, [sp, #72]
     684:	ldr	x0, [sp, #40]
     688:	ldrh	w1, [sp, #38]
     68c:	strh	w1, [x0, #88]
     690:	ldrh	w0, [sp, #38]
     694:	sub	w0, w0, #0x1
     698:	strh	w0, [sp, #38]
     69c:	ldr	x0, [sp, #72]
     6a0:	ldrh	w0, [x0, #4]
     6a4:	bl	0 <grub_swap_bytes16>
     6a8:	and	w0, w0, #0xffff
     6ac:	add	w19, w0, #0x2
     6b0:	ldr	x0, [sp, #72]
     6b4:	ldrh	w0, [x0, #6]
     6b8:	bl	0 <grub_swap_bytes16>
     6bc:	and	w0, w0, #0xffff
     6c0:	add	w0, w19, w0
     6c4:	mov	w1, w0
     6c8:	ldr	x0, [sp, #40]
     6cc:	bl	a8 <grub_minix_zone2sect>
     6d0:	str	x0, [sp, #64]
     6d4:	ldrh	w0, [sp, #38]
     6d8:	lsr	w0, w0, #3
     6dc:	and	w0, w0, #0xffff
     6e0:	and	x0, x0, #0xffff
     6e4:	ldr	x1, [sp, #64]
     6e8:	add	x0, x1, x0
     6ec:	str	x0, [sp, #64]
     6f0:	ldrh	w0, [sp, #38]
     6f4:	and	w0, w0, #0x7
     6f8:	lsl	w0, w0, #6
     6fc:	str	w0, [sp, #60]
     700:	ldr	x0, [sp, #40]
     704:	ldr	x5, [x0, #96]
     708:	ldrsw	x1, [sp, #60]
     70c:	ldr	x0, [sp, #40]
     710:	add	x0, x0, #0x14
     714:	mov	x4, x0
     718:	mov	x3, #0x40                  	// #64
     71c:	mov	x2, x1
     720:	ldr	x1, [sp, #64]
     724:	mov	x0, x5
     728:	bl	0 <grub_disk_read>
     72c:	mov	w0, #0x0                   	// #0
     730:	ldr	x19, [sp, #16]
     734:	ldp	x29, x30, [sp], #80
     738:	ret

000000000000073c <grub_minix_lookup_symlink>:
     73c:	stp	x29, x30, [sp, #-48]!
     740:	mov	x29, sp
     744:	str	x0, [sp, #24]
     748:	strh	w1, [sp, #22]
     74c:	ldr	x0, [sp, #24]
     750:	ldr	w0, [x0, #28]
     754:	bl	38 <grub_swap_bytes32>
     758:	mov	w0, w0
     75c:	str	x0, [sp, #40]
     760:	ldr	x0, [sp, #24]
     764:	ldr	w0, [x0, #92]
     768:	add	w1, w0, #0x1
     76c:	ldr	x0, [sp, #24]
     770:	str	w1, [x0, #92]
     774:	ldr	x0, [sp, #24]
     778:	ldr	w0, [x0, #92]
     77c:	cmp	w0, #0x8
     780:	b.le	79c <grub_minix_lookup_symlink+0x60>
     784:	adrp	x0, 0 <grub_swap_bytes16>
     788:	add	x0, x0, #0x0
     78c:	ldr	x1, [x0]
     790:	mov	w0, #0x19                  	// #25
     794:	bl	0 <grub_error>
     798:	b	870 <grub_minix_lookup_symlink+0x134>
     79c:	ldr	x0, [sp, #40]
     7a0:	add	x0, x0, #0x1
     7a4:	bl	0 <grub_malloc>
     7a8:	str	x0, [sp, #32]
     7ac:	ldr	x0, [sp, #32]
     7b0:	cmp	x0, #0x0
     7b4:	b.ne	7cc <grub_minix_lookup_symlink+0x90>  // b.any
     7b8:	adrp	x0, 0 <grub_swap_bytes16>
     7bc:	add	x0, x0, #0x0
     7c0:	ldr	x0, [x0]
     7c4:	ldr	w0, [x0]
     7c8:	b	870 <grub_minix_lookup_symlink+0x134>
     7cc:	ldr	x5, [sp, #32]
     7d0:	ldr	x4, [sp, #40]
     7d4:	mov	x3, #0x0                   	// #0
     7d8:	mov	x2, #0x0                   	// #0
     7dc:	mov	x1, #0x0                   	// #0
     7e0:	ldr	x0, [sp, #24]
     7e4:	bl	3a0 <grub_minix_read_file>
     7e8:	cmp	x0, #0x0
     7ec:	b.ge	804 <grub_minix_lookup_symlink+0xc8>  // b.tcont
     7f0:	adrp	x0, 0 <grub_swap_bytes16>
     7f4:	add	x0, x0, #0x0
     7f8:	ldr	x0, [x0]
     7fc:	ldr	w0, [x0]
     800:	b	870 <grub_minix_lookup_symlink+0x134>
     804:	ldr	x1, [sp, #32]
     808:	ldr	x0, [sp, #40]
     80c:	add	x0, x1, x0
     810:	strb	wzr, [x0]
     814:	ldr	x0, [sp, #32]
     818:	ldrb	w0, [x0]
     81c:	cmp	w0, #0x2f
     820:	b.ne	82c <grub_minix_lookup_symlink+0xf0>  // b.any
     824:	mov	w0, #0x1                   	// #1
     828:	strh	w0, [sp, #22]
     82c:	ldrh	w1, [sp, #22]
     830:	ldr	x0, [sp, #24]
     834:	bl	668 <grub_minix_read_inode>
     838:	cmp	w0, #0x0
     83c:	b.eq	854 <grub_minix_lookup_symlink+0x118>  // b.none
     840:	adrp	x0, 0 <grub_swap_bytes16>
     844:	add	x0, x0, #0x0
     848:	ldr	x0, [x0]
     84c:	ldr	w0, [x0]
     850:	b	870 <grub_minix_lookup_symlink+0x134>
     854:	ldr	x1, [sp, #32]
     858:	ldr	x0, [sp, #24]
     85c:	bl	888 <grub_minix_find_file>
     860:	adrp	x0, 0 <grub_swap_bytes16>
     864:	add	x0, x0, #0x0
     868:	ldr	x0, [x0]
     86c:	ldr	w0, [x0]
     870:	ldp	x29, x30, [sp], #48
     874:	ret
	...

0000000000000888 <grub_minix_find_file>:
     888:	stp	x29, x30, [sp, #-96]!
     88c:	mov	x29, sp
     890:	str	x0, [sp, #24]
     894:	str	x1, [sp, #16]
     898:	ldr	x0, [sp, #16]
     89c:	str	x0, [sp, #80]
     8a0:	str	wzr, [sp, #76]
     8a4:	ldr	x0, [sp, #80]
     8a8:	str	x0, [sp, #88]
     8ac:	b	8bc <grub_minix_find_file+0x34>
     8b0:	ldr	x0, [sp, #88]
     8b4:	add	x0, x0, #0x1
     8b8:	str	x0, [sp, #88]
     8bc:	ldr	x0, [sp, #88]
     8c0:	ldrb	w0, [x0]
     8c4:	cmp	w0, #0x2f
     8c8:	b.eq	8b0 <grub_minix_find_file+0x28>  // b.none
     8cc:	ldr	x0, [sp, #88]
     8d0:	ldrb	w0, [x0]
     8d4:	cmp	w0, #0x0
     8d8:	b.ne	8e4 <grub_minix_find_file+0x5c>  // b.any
     8dc:	mov	w0, #0x0                   	// #0
     8e0:	b	b20 <grub_minix_find_file+0x298>
     8e4:	ldr	x0, [sp, #24]
     8e8:	ldrh	w0, [x0, #20]
     8ec:	bl	0 <grub_swap_bytes16>
     8f0:	and	w0, w0, #0xffff
     8f4:	and	w0, w0, #0x4000
     8f8:	cmp	w0, #0x4, lsl #12
     8fc:	b.eq	918 <grub_minix_find_file+0x90>  // b.none
     900:	adrp	x0, 0 <grub_swap_bytes16>
     904:	add	x0, x0, #0x0
     908:	ldr	x1, [x0]
     90c:	mov	w0, #0x4                   	// #4
     910:	bl	0 <grub_error>
     914:	b	b20 <grub_minix_find_file+0x298>
     918:	ldr	x0, [sp, #88]
     91c:	str	x0, [sp, #80]
     920:	b	930 <grub_minix_find_file+0xa8>
     924:	ldr	x0, [sp, #80]
     928:	add	x0, x0, #0x1
     92c:	str	x0, [sp, #80]
     930:	ldr	x0, [sp, #80]
     934:	ldrb	w0, [x0]
     938:	cmp	w0, #0x0
     93c:	b.eq	950 <grub_minix_find_file+0xc8>  // b.none
     940:	ldr	x0, [sp, #80]
     944:	ldrb	w0, [x0]
     948:	cmp	w0, #0x2f
     94c:	b.ne	924 <grub_minix_find_file+0x9c>  // b.any
     950:	str	wzr, [sp, #76]
     954:	ldr	x0, [sp, #24]
     958:	ldr	w0, [x0, #28]
     95c:	bl	38 <grub_swap_bytes32>
     960:	mov	w1, w0
     964:	ldr	w0, [sp, #76]
     968:	cmp	w0, w1
     96c:	b.cc	99c <grub_minix_find_file+0x114>  // b.lo, b.ul, b.last
     970:	ldr	x2, [sp, #16]
     974:	adrp	x0, 0 <grub_swap_bytes16>
     978:	add	x0, x0, #0x0
     97c:	ldr	x1, [x0]
     980:	mov	w0, #0x5                   	// #5
     984:	bl	0 <grub_error>
     988:	adrp	x0, 0 <grub_swap_bytes16>
     98c:	add	x0, x0, #0x0
     990:	ldr	x0, [x0]
     994:	ldr	w0, [x0]
     998:	b	b20 <grub_minix_find_file+0x298>
     99c:	ldr	w0, [sp, #76]
     9a0:	add	x1, sp, #0x48
     9a4:	mov	x5, x1
     9a8:	mov	x4, #0x2                   	// #2
     9ac:	mov	x3, x0
     9b0:	mov	x2, #0x0                   	// #0
     9b4:	mov	x1, #0x0                   	// #0
     9b8:	ldr	x0, [sp, #24]
     9bc:	bl	3a0 <grub_minix_read_file>
     9c0:	cmp	x0, #0x0
     9c4:	b.ge	9dc <grub_minix_find_file+0x154>  // b.tcont
     9c8:	adrp	x0, 0 <grub_swap_bytes16>
     9cc:	add	x0, x0, #0x0
     9d0:	ldr	x0, [x0]
     9d4:	ldr	w0, [x0]
     9d8:	b	b20 <grub_minix_find_file+0x298>
     9dc:	ldr	w0, [sp, #76]
     9e0:	add	x1, x0, #0x2
     9e4:	ldr	x0, [sp, #24]
     9e8:	ldr	w0, [x0, #104]
     9ec:	sxtw	x0, w0
     9f0:	add	x2, sp, #0x28
     9f4:	mov	x5, x2
     9f8:	mov	x4, x0
     9fc:	mov	x3, x1
     a00:	mov	x2, #0x0                   	// #0
     a04:	mov	x1, #0x0                   	// #0
     a08:	ldr	x0, [sp, #24]
     a0c:	bl	3a0 <grub_minix_read_file>
     a10:	cmp	x0, #0x0
     a14:	b.ge	a2c <grub_minix_find_file+0x1a4>  // b.tcont
     a18:	adrp	x0, 0 <grub_swap_bytes16>
     a1c:	add	x0, x0, #0x0
     a20:	ldr	x0, [x0]
     a24:	ldr	w0, [x0]
     a28:	b	b20 <grub_minix_find_file+0x298>
     a2c:	ldr	x0, [sp, #24]
     a30:	ldr	w0, [x0, #104]
     a34:	mov	w1, w0
     a38:	ldr	w0, [sp, #76]
     a3c:	add	w0, w1, w0
     a40:	add	w0, w0, #0x2
     a44:	str	w0, [sp, #76]
     a48:	ldr	x0, [sp, #24]
     a4c:	ldr	w0, [x0, #104]
     a50:	sxtw	x0, w0
     a54:	add	x1, sp, #0x28
     a58:	strb	wzr, [x1, x0]
     a5c:	ldr	x1, [sp, #80]
     a60:	ldr	x0, [sp, #88]
     a64:	sub	x0, x1, x0
     a68:	mov	x1, x0
     a6c:	add	x0, sp, #0x28
     a70:	mov	x2, x1
     a74:	mov	x1, x0
     a78:	ldr	x0, [sp, #88]
     a7c:	bl	0 <grub_strncmp>
     a80:	cmp	w0, #0x0
     a84:	b.ne	954 <grub_minix_find_file+0xcc>  // b.any
     a88:	ldr	x1, [sp, #80]
     a8c:	ldr	x0, [sp, #88]
     a90:	sub	x0, x1, x0
     a94:	add	x1, sp, #0x28
     a98:	ldrb	w0, [x1, x0]
     a9c:	cmp	w0, #0x0
     aa0:	b.ne	954 <grub_minix_find_file+0xcc>  // b.any
     aa4:	ldr	x0, [sp, #24]
     aa8:	ldrh	w0, [x0, #88]
     aac:	strh	w0, [sp, #74]
     ab0:	ldrh	w0, [sp, #72]
     ab4:	bl	0 <grub_swap_bytes16>
     ab8:	and	w0, w0, #0xffff
     abc:	mov	w1, w0
     ac0:	ldr	x0, [sp, #24]
     ac4:	bl	668 <grub_minix_read_inode>
     ac8:	ldr	x0, [sp, #24]
     acc:	ldrh	w0, [x0, #20]
     ad0:	bl	0 <grub_swap_bytes16>
     ad4:	and	w0, w0, #0xffff
     ad8:	mov	w1, w0
     adc:	mov	w0, #0xa000                	// #40960
     ae0:	and	w0, w1, w0
     ae4:	cmp	w0, #0xa, lsl #12
     ae8:	b.ne	8a4 <grub_minix_find_file+0x1c>  // b.any
     aec:	ldrh	w1, [sp, #74]
     af0:	ldr	x0, [sp, #24]
     af4:	bl	73c <grub_minix_lookup_symlink>
     af8:	adrp	x0, 0 <grub_swap_bytes16>
     afc:	add	x0, x0, #0x0
     b00:	ldr	x0, [x0]
     b04:	ldr	w0, [x0]
     b08:	cmp	w0, #0x0
     b0c:	b.eq	8a4 <grub_minix_find_file+0x1c>  // b.none
     b10:	adrp	x0, 0 <grub_swap_bytes16>
     b14:	add	x0, x0, #0x0
     b18:	ldr	x0, [x0]
     b1c:	ldr	w0, [x0]
     b20:	ldp	x29, x30, [sp], #96
     b24:	ret
	...

0000000000000b40 <grub_minix_mount>:
     b40:	stp	x29, x30, [sp, #-64]!
     b44:	mov	x29, sp
     b48:	str	x19, [sp, #16]
     b4c:	str	x0, [sp, #40]
     b50:	mov	x0, #0x78                  	// #120
     b54:	bl	0 <grub_malloc>
     b58:	str	x0, [sp, #56]
     b5c:	ldr	x0, [sp, #56]
     b60:	cmp	x0, #0x0
     b64:	b.ne	b70 <grub_minix_mount+0x30>  // b.any
     b68:	mov	x0, #0x0                   	// #0
     b6c:	b	ca4 <grub_minix_mount+0x164>
     b70:	ldr	x0, [sp, #56]
     b74:	mov	x4, x0
     b78:	mov	x3, #0x14                  	// #20
     b7c:	mov	x2, #0x0                   	// #0
     b80:	mov	x1, #0x2                   	// #2
     b84:	ldr	x0, [sp, #40]
     b88:	bl	0 <grub_disk_read>
     b8c:	adrp	x0, 0 <grub_swap_bytes16>
     b90:	add	x0, x0, #0x0
     b94:	ldr	x0, [x0]
     b98:	ldr	w0, [x0]
     b9c:	cmp	w0, #0x0
     ba0:	b.ne	c68 <grub_minix_mount+0x128>  // b.any
     ba4:	ldr	x0, [sp, #56]
     ba8:	ldrh	w1, [x0, #16]
     bac:	mov	w0, #0x6824                	// #26660
     bb0:	cmp	w1, w0
     bb4:	b.ne	bc8 <grub_minix_mount+0x88>  // b.any
     bb8:	ldr	x0, [sp, #56]
     bbc:	mov	w1, #0xe                   	// #14
     bc0:	str	w1, [x0, #104]
     bc4:	b	be8 <grub_minix_mount+0xa8>
     bc8:	ldr	x0, [sp, #56]
     bcc:	ldrh	w1, [x0, #16]
     bd0:	mov	w0, #0x7824                	// #30756
     bd4:	cmp	w1, w0
     bd8:	b.ne	c70 <grub_minix_mount+0x130>  // b.any
     bdc:	ldr	x0, [sp, #56]
     be0:	mov	w1, #0x1e                  	// #30
     be4:	str	w1, [x0, #104]
     be8:	ldr	x0, [sp, #56]
     bec:	ldrh	w0, [x0, #10]
     bf0:	bl	0 <grub_swap_bytes16>
     bf4:	and	w0, w0, #0xffff
     bf8:	cmp	w0, #0x13
     bfc:	b.hi	c78 <grub_minix_mount+0x138>  // b.pmore
     c00:	ldr	x0, [sp, #56]
     c04:	ldr	x1, [sp, #40]
     c08:	str	x1, [x0, #96]
     c0c:	ldr	x0, [sp, #56]
     c10:	str	wzr, [x0, #92]
     c14:	ldr	x0, [sp, #56]
     c18:	mov	x1, #0x2                   	// #2
     c1c:	str	x1, [x0, #112]
     c20:	ldr	x0, [sp, #56]
     c24:	ldr	x19, [x0, #112]
     c28:	ldr	x0, [sp, #56]
     c2c:	ldrh	w0, [x0, #10]
     c30:	bl	0 <grub_swap_bytes16>
     c34:	and	w0, w0, #0xffff
     c38:	add	w0, w0, #0x9
     c3c:	lsl	x0, x19, x0
     c40:	lsr	x0, x0, #2
     c44:	mov	w1, w0
     c48:	ldr	x0, [sp, #56]
     c4c:	str	w1, [x0, #84]
     c50:	ldr	x0, [sp, #56]
     c54:	ldr	w0, [x0, #84]
     c58:	cmp	w0, #0x0
     c5c:	b.eq	c80 <grub_minix_mount+0x140>  // b.none
     c60:	ldr	x0, [sp, #56]
     c64:	b	ca4 <grub_minix_mount+0x164>
     c68:	nop
     c6c:	b	c84 <grub_minix_mount+0x144>
     c70:	nop
     c74:	b	c84 <grub_minix_mount+0x144>
     c78:	nop
     c7c:	b	c84 <grub_minix_mount+0x144>
     c80:	nop
     c84:	ldr	x0, [sp, #56]
     c88:	bl	0 <grub_free>
     c8c:	adrp	x0, 0 <grub_swap_bytes16>
     c90:	add	x0, x0, #0x0
     c94:	ldr	x1, [x0]
     c98:	mov	w0, #0x9                   	// #9
     c9c:	bl	0 <grub_error>
     ca0:	mov	x0, #0x0                   	// #0
     ca4:	ldr	x19, [sp, #16]
     ca8:	ldp	x29, x30, [sp], #64
     cac:	ret
	...

0000000000000cc0 <grub_minix_dir>:
     cc0:	stp	x29, x30, [sp, #-128]!
     cc4:	mov	x29, sp
     cc8:	str	x0, [sp, #40]
     ccc:	str	x1, [sp, #32]
     cd0:	str	x2, [sp, #24]
     cd4:	str	x3, [sp, #16]
     cd8:	str	xzr, [sp, #112]
     cdc:	str	wzr, [sp, #124]
     ce0:	ldr	x0, [sp, #40]
     ce4:	ldr	x0, [x0]
     ce8:	bl	b40 <grub_minix_mount>
     cec:	str	x0, [sp, #112]
     cf0:	ldr	x0, [sp, #112]
     cf4:	cmp	x0, #0x0
     cf8:	b.ne	d10 <grub_minix_dir+0x50>  // b.any
     cfc:	adrp	x0, 0 <grub_swap_bytes16>
     d00:	add	x0, x0, #0x0
     d04:	ldr	x0, [x0]
     d08:	ldr	w0, [x0]
     d0c:	b	f68 <grub_minix_dir+0x2a8>
     d10:	mov	w1, #0x1                   	// #1
     d14:	ldr	x0, [sp, #112]
     d18:	bl	668 <grub_minix_read_inode>
     d1c:	adrp	x0, 0 <grub_swap_bytes16>
     d20:	add	x0, x0, #0x0
     d24:	ldr	x0, [x0]
     d28:	ldr	w0, [x0]
     d2c:	cmp	w0, #0x0
     d30:	b.ne	f3c <grub_minix_dir+0x27c>  // b.any
     d34:	ldr	x1, [sp, #32]
     d38:	ldr	x0, [sp, #112]
     d3c:	bl	888 <grub_minix_find_file>
     d40:	adrp	x0, 0 <grub_swap_bytes16>
     d44:	add	x0, x0, #0x0
     d48:	ldr	x0, [x0]
     d4c:	ldr	w0, [x0]
     d50:	cmp	w0, #0x0
     d54:	b.ne	f44 <grub_minix_dir+0x284>  // b.any
     d58:	ldr	x0, [sp, #112]
     d5c:	ldrh	w0, [x0, #20]
     d60:	bl	0 <grub_swap_bytes16>
     d64:	and	w0, w0, #0xffff
     d68:	and	w0, w0, #0x4000
     d6c:	cmp	w0, #0x4, lsl #12
     d70:	b.eq	f1c <grub_minix_dir+0x25c>  // b.none
     d74:	adrp	x0, 0 <grub_swap_bytes16>
     d78:	add	x0, x0, #0x0
     d7c:	ldr	x1, [x0]
     d80:	mov	w0, #0x4                   	// #4
     d84:	bl	0 <grub_error>
     d88:	b	f50 <grub_minix_dir+0x290>
     d8c:	ldr	x0, [sp, #112]
     d90:	ldrh	w0, [x0, #88]
     d94:	strh	w0, [sp, #110]
     d98:	add	x0, sp, #0x38
     d9c:	mov	x2, #0x10                  	// #16
     da0:	mov	w1, #0x0                   	// #0
     da4:	bl	0 <grub_memset>
     da8:	ldr	w0, [sp, #124]
     dac:	add	x1, sp, #0x6c
     db0:	mov	x5, x1
     db4:	mov	x4, #0x2                   	// #2
     db8:	mov	x3, x0
     dbc:	mov	x2, #0x0                   	// #0
     dc0:	mov	x1, #0x0                   	// #0
     dc4:	ldr	x0, [sp, #112]
     dc8:	bl	3a0 <grub_minix_read_file>
     dcc:	cmp	x0, #0x0
     dd0:	b.ge	de8 <grub_minix_dir+0x128>  // b.tcont
     dd4:	adrp	x0, 0 <grub_swap_bytes16>
     dd8:	add	x0, x0, #0x0
     ddc:	ldr	x0, [x0]
     de0:	ldr	w0, [x0]
     de4:	b	f68 <grub_minix_dir+0x2a8>
     de8:	ldr	w0, [sp, #124]
     dec:	add	x1, x0, #0x2
     df0:	ldr	x0, [sp, #112]
     df4:	ldr	w0, [x0, #104]
     df8:	sxtw	x0, w0
     dfc:	add	x2, sp, #0x48
     e00:	mov	x5, x2
     e04:	mov	x4, x0
     e08:	mov	x3, x1
     e0c:	mov	x2, #0x0                   	// #0
     e10:	mov	x1, #0x0                   	// #0
     e14:	ldr	x0, [sp, #112]
     e18:	bl	3a0 <grub_minix_read_file>
     e1c:	cmp	x0, #0x0
     e20:	b.ge	e38 <grub_minix_dir+0x178>  // b.tcont
     e24:	adrp	x0, 0 <grub_swap_bytes16>
     e28:	add	x0, x0, #0x0
     e2c:	ldr	x0, [x0]
     e30:	ldr	w0, [x0]
     e34:	b	f68 <grub_minix_dir+0x2a8>
     e38:	ldr	x0, [sp, #112]
     e3c:	ldr	w0, [x0, #104]
     e40:	sxtw	x0, w0
     e44:	add	x1, sp, #0x48
     e48:	strb	wzr, [x1, x0]
     e4c:	ldrh	w0, [sp, #108]
     e50:	cmp	w0, #0x0
     e54:	b.ne	e78 <grub_minix_dir+0x1b8>  // b.any
     e58:	ldr	x0, [sp, #112]
     e5c:	ldr	w0, [x0, #104]
     e60:	mov	w1, w0
     e64:	ldr	w0, [sp, #124]
     e68:	add	w0, w1, w0
     e6c:	add	w0, w0, #0x2
     e70:	str	w0, [sp, #124]
     e74:	b	f1c <grub_minix_dir+0x25c>
     e78:	ldrh	w0, [sp, #108]
     e7c:	bl	0 <grub_swap_bytes16>
     e80:	and	w0, w0, #0xffff
     e84:	mov	w1, w0
     e88:	ldr	x0, [sp, #112]
     e8c:	bl	668 <grub_minix_read_inode>
     e90:	ldr	x0, [sp, #112]
     e94:	ldrh	w0, [x0, #20]
     e98:	bl	0 <grub_swap_bytes16>
     e9c:	and	w0, w0, #0xffff
     ea0:	and	w0, w0, #0x4000
     ea4:	cmp	w0, #0x4, lsl #12
     ea8:	cset	w0, eq  // eq = none
     eac:	and	w1, w0, #0xff
     eb0:	ldrb	w0, [sp, #56]
     eb4:	bfxil	w0, w1, #0, #1
     eb8:	strb	w0, [sp, #56]
     ebc:	ldrb	w0, [sp, #56]
     ec0:	orr	w0, w0, #0x2
     ec4:	strb	w0, [sp, #56]
     ec8:	ldr	x0, [sp, #112]
     ecc:	ldr	w0, [x0, #36]
     ed0:	bl	38 <grub_swap_bytes32>
     ed4:	str	w0, [sp, #60]
     ed8:	add	x1, sp, #0x38
     edc:	add	x0, sp, #0x48
     ee0:	ldr	x3, [sp, #24]
     ee4:	ldr	x2, [sp, #16]
     ee8:	blr	x3
     eec:	cmp	w0, #0x0
     ef0:	b.ne	f4c <grub_minix_dir+0x28c>  // b.any
     ef4:	ldrh	w1, [sp, #110]
     ef8:	ldr	x0, [sp, #112]
     efc:	bl	668 <grub_minix_read_inode>
     f00:	ldr	x0, [sp, #112]
     f04:	ldr	w0, [x0, #104]
     f08:	mov	w1, w0
     f0c:	ldr	w0, [sp, #124]
     f10:	add	w0, w1, w0
     f14:	add	w0, w0, #0x2
     f18:	str	w0, [sp, #124]
     f1c:	ldr	x0, [sp, #112]
     f20:	ldr	w0, [x0, #28]
     f24:	bl	38 <grub_swap_bytes32>
     f28:	mov	w1, w0
     f2c:	ldr	w0, [sp, #124]
     f30:	cmp	w0, w1
     f34:	b.cc	d8c <grub_minix_dir+0xcc>  // b.lo, b.ul, b.last
     f38:	b	f50 <grub_minix_dir+0x290>
     f3c:	nop
     f40:	b	f50 <grub_minix_dir+0x290>
     f44:	nop
     f48:	b	f50 <grub_minix_dir+0x290>
     f4c:	nop
     f50:	ldr	x0, [sp, #112]
     f54:	bl	0 <grub_free>
     f58:	adrp	x0, 0 <grub_swap_bytes16>
     f5c:	add	x0, x0, #0x0
     f60:	ldr	x0, [x0]
     f64:	ldr	w0, [x0]
     f68:	ldp	x29, x30, [sp], #128
     f6c:	ret
	...

0000000000000f80 <grub_minix_open>:
     f80:	stp	x29, x30, [sp, #-48]!
     f84:	mov	x29, sp
     f88:	str	x0, [sp, #24]
     f8c:	str	x1, [sp, #16]
     f90:	ldr	x0, [sp, #24]
     f94:	ldr	x0, [x0, #8]
     f98:	ldr	x0, [x0]
     f9c:	bl	b40 <grub_minix_mount>
     fa0:	str	x0, [sp, #40]
     fa4:	ldr	x0, [sp, #40]
     fa8:	cmp	x0, #0x0
     fac:	b.ne	fc4 <grub_minix_open+0x44>  // b.any
     fb0:	adrp	x0, 0 <grub_swap_bytes16>
     fb4:	add	x0, x0, #0x0
     fb8:	ldr	x0, [x0]
     fbc:	ldr	w0, [x0]
     fc0:	b	10b4 <grub_minix_open+0x134>
     fc4:	mov	w1, #0x1                   	// #1
     fc8:	ldr	x0, [sp, #40]
     fcc:	bl	668 <grub_minix_read_inode>
     fd0:	adrp	x0, 0 <grub_swap_bytes16>
     fd4:	add	x0, x0, #0x0
     fd8:	ldr	x0, [x0]
     fdc:	ldr	w0, [x0]
     fe0:	cmp	w0, #0x0
     fe4:	b.eq	1004 <grub_minix_open+0x84>  // b.none
     fe8:	ldr	x0, [sp, #40]
     fec:	bl	0 <grub_free>
     ff0:	adrp	x0, 0 <grub_swap_bytes16>
     ff4:	add	x0, x0, #0x0
     ff8:	ldr	x0, [x0]
     ffc:	ldr	w0, [x0]
    1000:	b	10b4 <grub_minix_open+0x134>
    1004:	ldr	x0, [sp, #16]
    1008:	cmp	x0, #0x0
    100c:	b.eq	1020 <grub_minix_open+0xa0>  // b.none
    1010:	ldr	x0, [sp, #16]
    1014:	ldrb	w0, [x0]
    1018:	cmp	w0, #0x2f
    101c:	b.eq	104c <grub_minix_open+0xcc>  // b.none
    1020:	ldr	x2, [sp, #16]
    1024:	adrp	x0, 0 <grub_swap_bytes16>
    1028:	add	x0, x0, #0x0
    102c:	ldr	x1, [x0]
    1030:	mov	w0, #0x7                   	// #7
    1034:	bl	0 <grub_error>
    1038:	adrp	x0, 0 <grub_swap_bytes16>
    103c:	add	x0, x0, #0x0
    1040:	ldr	x0, [x0]
    1044:	ldr	w0, [x0]
    1048:	b	10b4 <grub_minix_open+0x134>
    104c:	ldr	x1, [sp, #16]
    1050:	ldr	x0, [sp, #40]
    1054:	bl	888 <grub_minix_find_file>
    1058:	adrp	x0, 0 <grub_swap_bytes16>
    105c:	add	x0, x0, #0x0
    1060:	ldr	x0, [x0]
    1064:	ldr	w0, [x0]
    1068:	cmp	w0, #0x0
    106c:	b.eq	108c <grub_minix_open+0x10c>  // b.none
    1070:	ldr	x0, [sp, #40]
    1074:	bl	0 <grub_free>
    1078:	adrp	x0, 0 <grub_swap_bytes16>
    107c:	add	x0, x0, #0x0
    1080:	ldr	x0, [x0]
    1084:	ldr	w0, [x0]
    1088:	b	10b4 <grub_minix_open+0x134>
    108c:	ldr	x0, [sp, #24]
    1090:	ldr	x1, [sp, #40]
    1094:	str	x1, [x0, #80]
    1098:	ldr	x0, [sp, #40]
    109c:	ldr	w0, [x0, #28]
    10a0:	bl	38 <grub_swap_bytes32>
    10a4:	mov	w1, w0
    10a8:	ldr	x0, [sp, #24]
    10ac:	str	x1, [x0, #64]
    10b0:	mov	w0, #0x0                   	// #0
    10b4:	ldp	x29, x30, [sp], #48
    10b8:	ret
    10bc:	nop
	...

00000000000010d0 <grub_minix_read>:
    10d0:	stp	x29, x30, [sp, #-64]!
    10d4:	mov	x29, sp
    10d8:	str	x0, [sp, #40]
    10dc:	str	x1, [sp, #32]
    10e0:	str	x2, [sp, #24]
    10e4:	ldr	x0, [sp, #40]
    10e8:	ldr	x0, [x0, #80]
    10ec:	str	x0, [sp, #56]
    10f0:	ldr	x0, [sp, #40]
    10f4:	ldr	x1, [x0, #88]
    10f8:	ldr	x0, [sp, #40]
    10fc:	ldr	x2, [x0, #96]
    1100:	ldr	x0, [sp, #40]
    1104:	ldr	x0, [x0, #24]
    1108:	ldr	x5, [sp, #32]
    110c:	ldr	x4, [sp, #24]
    1110:	mov	x3, x0
    1114:	ldr	x0, [sp, #56]
    1118:	bl	3a0 <grub_minix_read_file>
    111c:	ldp	x29, x30, [sp], #64
    1120:	ret

0000000000001124 <grub_minix_close>:
    1124:	stp	x29, x30, [sp, #-32]!
    1128:	mov	x29, sp
    112c:	str	x0, [sp, #24]
    1130:	ldr	x0, [sp, #24]
    1134:	ldr	x0, [x0, #80]
    1138:	bl	0 <grub_free>
    113c:	mov	w0, #0x0                   	// #0
    1140:	ldp	x29, x30, [sp], #32
    1144:	ret

0000000000001148 <grub_mod_init>:
    1148:	stp	x29, x30, [sp, #-32]!
    114c:	mov	x29, sp
    1150:	str	x0, [sp, #24]
    1154:	adrp	x0, 0 <grub_swap_bytes16>
    1158:	add	x0, x0, #0x0
    115c:	ldr	x0, [x0]
    1160:	bl	50 <grub_fs_register>
    1164:	adrp	x0, 0 <grub_swap_bytes16>
    1168:	add	x0, x0, #0x0
    116c:	ldr	x0, [x0]
    1170:	ldr	x1, [sp, #24]
    1174:	str	x1, [x0]
    1178:	nop
    117c:	ldp	x29, x30, [sp], #32
    1180:	ret
    1184:	nop
	...

0000000000001198 <grub_mod_fini>:
    1198:	stp	x29, x30, [sp, #-16]!
    119c:	mov	x29, sp
    11a0:	adrp	x0, 0 <grub_swap_bytes16>
    11a4:	add	x0, x0, #0x0
    11a8:	ldr	x0, [x0]
    11ac:	bl	88 <grub_fs_unregister>
    11b0:	nop
    11b4:	ldp	x29, x30, [sp], #16
    11b8:	ret
    11bc:	nop
	...
