
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ata_id_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000211868 <_start>:
  211868:	mov	x29, #0x0                   	// #0
  21186c:	mov	x30, #0x0                   	// #0
  211870:	mov	x5, x0
  211874:	ldr	x1, [sp]
  211878:	add	x2, sp, #0x8
  21187c:	mov	x6, sp
  211880:	movz	x0, #0x0, lsl #48
  211884:	movk	x0, #0x0, lsl #32
  211888:	movk	x0, #0x21, lsl #16
  21188c:	movk	x0, #0x19b8
  211890:	movz	x3, #0x0, lsl #48
  211894:	movk	x3, #0x0, lsl #32
  211898:	movk	x3, #0x21, lsl #16
  21189c:	movk	x3, #0x2d88
  2118a0:	movz	x4, #0x0, lsl #48
  2118a4:	movk	x4, #0x0, lsl #32
  2118a8:	movk	x4, #0x21, lsl #16
  2118ac:	movk	x4, #0x2e08
  2118b0:	bl	212e50 <__libc_start_main@plt>
  2118b4:	bl	212e60 <abort@plt>

00000000002118b8 <call_weak_fn>:
  2118b8:	adrp	x0, 223000 <encode_devnode_name@plt+0xffe0>
  2118bc:	ldr	x0, [x0, #528]
  2118c0:	cbz	x0, 2118c8 <call_weak_fn+0x10>
  2118c4:	b	212e70 <__gmon_start__@plt>
  2118c8:	ret

00000000002118cc <deregister_tm_clones>:
  2118cc:	adrp	x0, 233000 <_DYNAMIC+0xffc0>
  2118d0:	add	x0, x0, #0x320
  2118d4:	adrp	x1, 233000 <_DYNAMIC+0xffc0>
  2118d8:	add	x1, x1, #0x320
  2118dc:	cmp	x0, x1
  2118e0:	b.eq	211914 <deregister_tm_clones+0x48>  // b.none
  2118e4:	stp	x29, x30, [sp, #-32]!
  2118e8:	mov	x29, sp
  2118ec:	adrp	x0, 200000 <main.options-0xf20>
  2118f0:	ldr	x0, [x0, #3856]
  2118f4:	str	x0, [sp, #24]
  2118f8:	mov	x1, x0
  2118fc:	cbz	x1, 21190c <deregister_tm_clones+0x40>
  211900:	adrp	x0, 233000 <_DYNAMIC+0xffc0>
  211904:	add	x0, x0, #0x320
  211908:	blr	x1
  21190c:	ldp	x29, x30, [sp], #32
  211910:	ret
  211914:	ret

0000000000211918 <register_tm_clones>:
  211918:	adrp	x0, 233000 <_DYNAMIC+0xffc0>
  21191c:	add	x0, x0, #0x320
  211920:	adrp	x1, 233000 <_DYNAMIC+0xffc0>
  211924:	add	x1, x1, #0x320
  211928:	sub	x0, x0, x1
  21192c:	lsr	x1, x0, #63
  211930:	add	x0, x1, x0, asr #3
  211934:	cmp	xzr, x0, asr #1
  211938:	b.eq	211970 <register_tm_clones+0x58>  // b.none
  21193c:	stp	x29, x30, [sp, #-32]!
  211940:	mov	x29, sp
  211944:	asr	x1, x0, #1
  211948:	adrp	x0, 200000 <main.options-0xf20>
  21194c:	ldr	x0, [x0, #3864]
  211950:	str	x0, [sp, #24]
  211954:	mov	x2, x0
  211958:	cbz	x2, 211968 <register_tm_clones+0x50>
  21195c:	adrp	x0, 233000 <_DYNAMIC+0xffc0>
  211960:	add	x0, x0, #0x320
  211964:	blr	x2
  211968:	ldp	x29, x30, [sp], #32
  21196c:	ret
  211970:	ret

0000000000211974 <__do_global_dtors_aux>:
  211974:	adrp	x0, 233000 <_DYNAMIC+0xffc0>
  211978:	ldrb	w0, [x0, #800]
  21197c:	cbnz	w0, 2119a0 <__do_global_dtors_aux+0x2c>
  211980:	stp	x29, x30, [sp, #-16]!
  211984:	mov	x29, sp
  211988:	bl	2118cc <deregister_tm_clones>
  21198c:	adrp	x0, 233000 <_DYNAMIC+0xffc0>
  211990:	mov	w1, #0x1                   	// #1
  211994:	strb	w1, [x0, #800]
  211998:	ldp	x29, x30, [sp], #16
  21199c:	ret
  2119a0:	ret

00000000002119a4 <frame_dummy>:
  2119a4:	stp	x29, x30, [sp, #-16]!
  2119a8:	mov	x29, sp
  2119ac:	bl	211918 <register_tm_clones>
  2119b0:	ldp	x29, x30, [sp], #16
  2119b4:	ret

00000000002119b8 <main>:
  2119b8:	stp	x29, x30, [sp, #-96]!
  2119bc:	stp	x28, x27, [sp, #16]
  2119c0:	stp	x26, x25, [sp, #32]
  2119c4:	stp	x24, x23, [sp, #48]
  2119c8:	stp	x22, x21, [sp, #64]
  2119cc:	stp	x20, x19, [sp, #80]
  2119d0:	mov	x29, sp
  2119d4:	sub	sp, sp, #0x560
  2119d8:	mov	w20, w0
  2119dc:	mov	w8, #0xffffffff            	// #-1
  2119e0:	mov	w0, #0x7                   	// #7
  2119e4:	mov	x19, x1
  2119e8:	add	x26, sp, #0x360
  2119ec:	add	x25, sp, #0x130
  2119f0:	stp	wzr, w8, [sp, #4]
  2119f4:	bl	212e80 <log_set_target@plt>
  2119f8:	bl	212204 <udev_parse_config>
  2119fc:	mov	w0, #0x1                   	// #1
  211a00:	bl	212e90 <log_parse_environment_realm@plt>
  211a04:	bl	212ea0 <log_open@plt>
  211a08:	adrp	x21, 201000 <main.options+0xe0>
  211a0c:	adrp	x22, 200000 <main.options-0xf20>
  211a10:	adrp	x23, 201000 <main.options+0xe0>
  211a14:	mov	w24, wzr
  211a18:	add	x21, x21, #0x17c
  211a1c:	add	x22, x22, #0xf20
  211a20:	adrp	x27, 233000 <_DYNAMIC+0xffc0>
  211a24:	add	x23, x23, #0x17f
  211a28:	b	211a34 <main+0x7c>
  211a2c:	mov	w8, wzr
  211a30:	cbnz	w8, 211a88 <main+0xd0>
  211a34:	mov	w0, w20
  211a38:	mov	x1, x19
  211a3c:	mov	x2, x21
  211a40:	mov	x3, x22
  211a44:	mov	x4, xzr
  211a48:	bl	212eb0 <getopt_long@plt>
  211a4c:	cmn	w0, #0x1
  211a50:	b.eq	211a6c <main+0xb4>  // b.none
  211a54:	cmp	w0, #0x68
  211a58:	b.eq	211a74 <main+0xbc>  // b.none
  211a5c:	cmp	w0, #0x78
  211a60:	b.ne	211a2c <main+0x74>  // b.any
  211a64:	mov	w24, #0x1                   	// #1
  211a68:	b	211a2c <main+0x74>
  211a6c:	mov	w8, #0x2                   	// #2
  211a70:	b	211a30 <main+0x78>
  211a74:	ldr	x1, [x27, #808]
  211a78:	mov	x0, x23
  211a7c:	bl	212ec0 <printf@plt>
  211a80:	mov	w8, #0x1                   	// #1
  211a84:	b	211a30 <main+0x78>
  211a88:	cmp	w8, #0x2
  211a8c:	b.ne	212144 <main+0x78c>  // b.any
  211a90:	adrp	x8, 233000 <_DYNAMIC+0xffc0>
  211a94:	ldrsw	x8, [x8, #816]
  211a98:	ldr	x19, [x19, x8, lsl #3]
  211a9c:	cbz	x19, 211b28 <main+0x170>
  211aa0:	mov	w1, #0x800                 	// #2048
  211aa4:	movk	w1, #0x8, lsl #16
  211aa8:	mov	x0, x19
  211aac:	bl	212ed0 <open64@plt>
  211ab0:	str	w0, [sp, #8]
  211ab4:	tbnz	w0, #31, 211b6c <main+0x1b4>
  211ab8:	add	x1, sp, #0x160
  211abc:	add	x2, sp, #0x4
  211ac0:	mov	w20, w0
  211ac4:	bl	212228 <disk_identify>
  211ac8:	cbz	w0, 211bb4 <main+0x1fc>
  211acc:	add	x2, sp, #0x360
  211ad0:	mov	w1, #0x30d                 	// #781
  211ad4:	mov	w0, w20
  211ad8:	bl	212ee0 <ioctl@plt>
  211adc:	cbz	w0, 211cd8 <main+0x320>
  211ae0:	mov	w0, #0x1                   	// #1
  211ae4:	bl	212ef0 <log_get_max_level_realm@plt>
  211ae8:	cmp	w0, #0x7
  211aec:	b.lt	211da0 <main+0x3e8>  // b.tstop
  211af0:	bl	212f00 <__errno_location@plt>
  211af4:	ldr	w1, [x0]
  211af8:	adrp	x2, 201000 <main.options+0xe0>
  211afc:	adrp	x4, 201000 <main.options+0xe0>
  211b00:	adrp	x5, 201000 <main.options+0xe0>
  211b04:	add	x2, x2, #0x676
  211b08:	add	x4, x4, #0x4fe
  211b0c:	add	x5, x5, #0x31
  211b10:	mov	w0, #0x407                 	// #1031
  211b14:	mov	w3, #0x1df                 	// #479
  211b18:	mov	x6, x19
  211b1c:	bl	212f10 <log_internal_realm@plt>
  211b20:	mov	w20, #0x2                   	// #2
  211b24:	b	212148 <main+0x790>
  211b28:	mov	w0, #0x1                   	// #1
  211b2c:	mov	w20, #0x1                   	// #1
  211b30:	bl	212ef0 <log_get_max_level_realm@plt>
  211b34:	cmp	w0, #0x3
  211b38:	b.lt	212148 <main+0x790>  // b.tstop
  211b3c:	adrp	x2, 201000 <main.options+0xe0>
  211b40:	adrp	x4, 201000 <main.options+0xe0>
  211b44:	adrp	x5, 201000 <main.options+0xe0>
  211b48:	add	x2, x2, #0x676
  211b4c:	add	x4, x4, #0x4fe
  211b50:	add	x5, x5, #0x2be
  211b54:	mov	w0, #0x403                 	// #1027
  211b58:	mov	w3, #0x1b6                 	// #438
  211b5c:	mov	w1, wzr
  211b60:	bl	212f10 <log_internal_realm@plt>
  211b64:	mov	w20, #0x1                   	// #1
  211b68:	b	212148 <main+0x790>
  211b6c:	mov	w0, #0x1                   	// #1
  211b70:	mov	w20, #0x1                   	// #1
  211b74:	bl	212ef0 <log_get_max_level_realm@plt>
  211b78:	cmp	w0, #0x3
  211b7c:	b.lt	212148 <main+0x790>  // b.tstop
  211b80:	adrp	x2, 201000 <main.options+0xe0>
  211b84:	adrp	x4, 201000 <main.options+0xe0>
  211b88:	adrp	x5, 201000 <main.options+0xe0>
  211b8c:	add	x2, x2, #0x676
  211b90:	add	x4, x4, #0x4fe
  211b94:	add	x5, x5, #0x3c6
  211b98:	mov	w0, #0x403                 	// #1027
  211b9c:	mov	w3, #0x1bc                 	// #444
  211ba0:	mov	w1, wzr
  211ba4:	mov	x6, x19
  211ba8:	bl	212f10 <log_internal_realm@plt>
  211bac:	mov	w20, #0x1                   	// #1
  211bb0:	b	212148 <main+0x790>
  211bb4:	add	x0, sp, #0x160
  211bb8:	mov	w1, #0xa                   	// #10
  211bbc:	mov	w2, #0x14                  	// #20
  211bc0:	bl	212348 <disk_identify_fixup_string>
  211bc4:	add	x0, sp, #0x160
  211bc8:	mov	w1, #0x17                  	// #23
  211bcc:	mov	w2, #0x8                   	// #8
  211bd0:	bl	212348 <disk_identify_fixup_string>
  211bd4:	add	x0, sp, #0x160
  211bd8:	mov	w1, #0x1b                  	// #27
  211bdc:	mov	w2, #0x28                  	// #40
  211be0:	bl	212348 <disk_identify_fixup_string>
  211be4:	add	x0, sp, #0x160
  211be8:	mov	w1, wzr
  211bec:	bl	212368 <disk_identify_fixup_uint16>
  211bf0:	add	x0, sp, #0x160
  211bf4:	mov	w1, #0x4b                  	// #75
  211bf8:	bl	212368 <disk_identify_fixup_uint16>
  211bfc:	add	x0, sp, #0x160
  211c00:	mov	w1, #0x4c                  	// #76
  211c04:	bl	212368 <disk_identify_fixup_uint16>
  211c08:	add	x0, sp, #0x160
  211c0c:	mov	w1, #0x52                  	// #82
  211c10:	bl	212368 <disk_identify_fixup_uint16>
  211c14:	add	x0, sp, #0x160
  211c18:	mov	w1, #0x53                  	// #83
  211c1c:	bl	212368 <disk_identify_fixup_uint16>
  211c20:	add	x0, sp, #0x160
  211c24:	mov	w1, #0x54                  	// #84
  211c28:	bl	212368 <disk_identify_fixup_uint16>
  211c2c:	add	x0, sp, #0x160
  211c30:	mov	w1, #0x55                  	// #85
  211c34:	bl	212368 <disk_identify_fixup_uint16>
  211c38:	add	x0, sp, #0x160
  211c3c:	mov	w1, #0x56                  	// #86
  211c40:	bl	212368 <disk_identify_fixup_uint16>
  211c44:	add	x0, sp, #0x160
  211c48:	mov	w1, #0x57                  	// #87
  211c4c:	bl	212368 <disk_identify_fixup_uint16>
  211c50:	add	x0, sp, #0x160
  211c54:	mov	w1, #0x59                  	// #89
  211c58:	bl	212368 <disk_identify_fixup_uint16>
  211c5c:	add	x0, sp, #0x160
  211c60:	mov	w1, #0x5a                  	// #90
  211c64:	bl	212368 <disk_identify_fixup_uint16>
  211c68:	add	x0, sp, #0x160
  211c6c:	mov	w1, #0x5b                  	// #91
  211c70:	bl	212368 <disk_identify_fixup_uint16>
  211c74:	add	x0, sp, #0x160
  211c78:	mov	w1, #0x5e                  	// #94
  211c7c:	bl	212368 <disk_identify_fixup_uint16>
  211c80:	add	x0, sp, #0x160
  211c84:	mov	w1, #0x6c                  	// #108
  211c88:	bl	212368 <disk_identify_fixup_uint16>
  211c8c:	add	x0, sp, #0x160
  211c90:	mov	w1, #0x6d                  	// #109
  211c94:	bl	212368 <disk_identify_fixup_uint16>
  211c98:	add	x0, sp, #0x160
  211c9c:	mov	w1, #0x6e                  	// #110
  211ca0:	bl	212368 <disk_identify_fixup_uint16>
  211ca4:	add	x0, sp, #0x160
  211ca8:	mov	w1, #0x6f                  	// #111
  211cac:	bl	212368 <disk_identify_fixup_uint16>
  211cb0:	add	x0, sp, #0x160
  211cb4:	mov	w1, #0x80                  	// #128
  211cb8:	bl	212368 <disk_identify_fixup_uint16>
  211cbc:	add	x0, sp, #0x160
  211cc0:	mov	w1, #0xd9                  	// #217
  211cc4:	bl	212368 <disk_identify_fixup_uint16>
  211cc8:	add	x0, sp, #0x360
  211ccc:	add	x1, sp, #0x160
  211cd0:	mov	w2, #0x200                 	// #512
  211cd4:	bl	212f20 <memcpy@plt>
  211cd8:	ldur	q0, [x26, #54]
  211cdc:	ldur	q1, [x26, #70]
  211ce0:	ldur	x8, [x26, #86]
  211ce4:	add	x20, sp, #0x360
  211ce8:	add	x0, sp, #0x130
  211cec:	add	x1, sp, #0x30
  211cf0:	mov	w2, #0x100                 	// #256
  211cf4:	add	x19, x20, #0x36
  211cf8:	stp	q0, q1, [x25]
  211cfc:	str	x8, [x25, #32]
  211d00:	strb	wzr, [sp, #344]
  211d04:	bl	212d70 <udev_util_encode_string>
  211d08:	add	x1, sp, #0x130
  211d0c:	mov	w2, #0x28                  	// #40
  211d10:	mov	x0, x19
  211d14:	bl	212b34 <util_replace_whitespace>
  211d18:	add	x0, sp, #0x130
  211d1c:	mov	x1, xzr
  211d20:	bl	212c50 <util_replace_chars>
  211d24:	add	x0, x20, #0x14
  211d28:	add	x1, sp, #0x18
  211d2c:	mov	w2, #0x14                  	// #20
  211d30:	bl	212b34 <util_replace_whitespace>
  211d34:	add	x0, sp, #0x18
  211d38:	mov	x1, xzr
  211d3c:	bl	212c50 <util_replace_chars>
  211d40:	add	x0, x20, #0x2e
  211d44:	add	x1, sp, #0xc
  211d48:	mov	w2, #0x8                   	// #8
  211d4c:	bl	212b34 <util_replace_whitespace>
  211d50:	add	x0, sp, #0xc
  211d54:	mov	x1, xzr
  211d58:	bl	212c50 <util_replace_chars>
  211d5c:	cbz	w24, 211d80 <main+0x3c8>
  211d60:	adrp	x0, 201000 <main.options+0xe0>
  211d64:	add	x0, x0, #0x6a4
  211d68:	bl	212f30 <puts@plt>
  211d6c:	ldrh	w8, [sp, #864]
  211d70:	tbnz	w8, #15, 211da8 <main+0x3f0>
  211d74:	adrp	x0, 201000 <main.options+0xe0>
  211d78:	add	x0, x0, #0x503
  211d7c:	b	211dcc <main+0x414>
  211d80:	ldrb	w8, [sp, #24]
  211d84:	cbz	w8, 2121e4 <main+0x82c>
  211d88:	adrp	x0, 201000 <main.options+0xe0>
  211d8c:	add	x0, x0, #0x457
  211d90:	add	x1, sp, #0x130
  211d94:	add	x2, sp, #0x18
  211d98:	bl	212ec0 <printf@plt>
  211d9c:	b	212144 <main+0x78c>
  211da0:	mov	w20, #0x2                   	// #2
  211da4:	b	212148 <main+0x790>
  211da8:	ubfx	x8, x8, #8, #5
  211dac:	cmp	w8, #0x7
  211db0:	b.hi	211dc4 <main+0x40c>  // b.pmore
  211db4:	adrp	x9, 200000 <main.options-0xf20>
  211db8:	add	x9, x9, #0xf90
  211dbc:	ldr	x0, [x9, x8, lsl #3]
  211dc0:	b	211dcc <main+0x414>
  211dc4:	adrp	x0, 200000 <main.options-0xf20>
  211dc8:	add	x0, x0, #0xfd0
  211dcc:	bl	212f30 <puts@plt>
  211dd0:	adrp	x0, 201000 <main.options+0xe0>
  211dd4:	add	x0, x0, #0x624
  211dd8:	bl	212f30 <puts@plt>
  211ddc:	adrp	x0, 201000 <main.options+0xe0>
  211de0:	add	x0, x0, #0x3da
  211de4:	add	x1, sp, #0x130
  211de8:	bl	212ec0 <printf@plt>
  211dec:	adrp	x0, 201000 <main.options+0xe0>
  211df0:	add	x0, x0, #0x104
  211df4:	add	x1, sp, #0x30
  211df8:	bl	212ec0 <printf@plt>
  211dfc:	adrp	x0, 201000 <main.options+0xe0>
  211e00:	add	x0, x0, #0x5e0
  211e04:	add	x1, sp, #0xc
  211e08:	bl	212ec0 <printf@plt>
  211e0c:	ldrb	w8, [sp, #24]
  211e10:	cbz	w8, 211e38 <main+0x480>
  211e14:	adrp	x0, 201000 <main.options+0xe0>
  211e18:	add	x0, x0, #0x5f0
  211e1c:	add	x1, sp, #0x130
  211e20:	add	x2, sp, #0x18
  211e24:	bl	212ec0 <printf@plt>
  211e28:	adrp	x0, 201000 <main.options+0xe0>
  211e2c:	add	x0, x0, #0x6ad
  211e30:	add	x1, sp, #0x18
  211e34:	b	211e44 <main+0x48c>
  211e38:	adrp	x0, 201000 <main.options+0xe0>
  211e3c:	add	x0, x0, #0x57
  211e40:	add	x1, sp, #0x130
  211e44:	bl	212ec0 <printf@plt>
  211e48:	ldrb	w8, [sp, #1028]
  211e4c:	tbnz	w8, #5, 211e6c <main+0x4b4>
  211e50:	ldrb	w8, [sp, #1029]
  211e54:	tbnz	w8, #2, 211e94 <main+0x4dc>
  211e58:	ldrb	w8, [sp, #1028]
  211e5c:	tbnz	w8, #3, 211ebc <main+0x504>
  211e60:	ldrb	w8, [sp, #1028]
  211e64:	tbnz	w8, #1, 211ee4 <main+0x52c>
  211e68:	b	211f4c <main+0x594>
  211e6c:	adrp	x0, 201000 <main.options+0xe0>
  211e70:	add	x0, x0, #0x68f
  211e74:	bl	212f30 <puts@plt>
  211e78:	ldrh	w8, [sp, #1034]
  211e7c:	adrp	x0, 201000 <main.options+0xe0>
  211e80:	add	x0, x0, #0x2d0
  211e84:	ubfx	w1, w8, #5, #1
  211e88:	bl	212ec0 <printf@plt>
  211e8c:	ldrb	w8, [sp, #1029]
  211e90:	tbz	w8, #2, 211e58 <main+0x4a0>
  211e94:	adrp	x0, 201000 <main.options+0xe0>
  211e98:	add	x0, x0, #0x51d
  211e9c:	bl	212f30 <puts@plt>
  211ea0:	ldrh	w8, [sp, #1034]
  211ea4:	adrp	x0, 201000 <main.options+0xe0>
  211ea8:	add	x0, x0, #0x115
  211eac:	ubfx	w1, w8, #10, #1
  211eb0:	bl	212ec0 <printf@plt>
  211eb4:	ldrb	w8, [sp, #1028]
  211eb8:	tbz	w8, #3, 211e60 <main+0x4a8>
  211ebc:	adrp	x0, 201000 <main.options+0xe0>
  211ec0:	add	x0, x0, #0x706
  211ec4:	bl	212f30 <puts@plt>
  211ec8:	ldrh	w8, [sp, #1034]
  211ecc:	adrp	x0, 201000 <main.options+0xe0>
  211ed0:	add	x0, x0, #0x2
  211ed4:	ubfx	w1, w8, #3, #1
  211ed8:	bl	212ec0 <printf@plt>
  211edc:	ldrb	w8, [sp, #1028]
  211ee0:	tbz	w8, #1, 211f4c <main+0x594>
  211ee4:	adrp	x0, 201000 <main.options+0xe0>
  211ee8:	add	x0, x0, #0x6c1
  211eec:	bl	212f30 <puts@plt>
  211ef0:	ldrh	w8, [sp, #1034]
  211ef4:	adrp	x0, 201000 <main.options+0xe0>
  211ef8:	add	x0, x0, #0x45e
  211efc:	ubfx	w1, w8, #1, #1
  211f00:	bl	212ec0 <printf@plt>
  211f04:	ldrh	w8, [sp, #1042]
  211f08:	adrp	x0, 201000 <main.options+0xe0>
  211f0c:	add	x0, x0, #0x317
  211f10:	lsl	w1, w8, #1
  211f14:	bl	212ec0 <printf@plt>
  211f18:	ldrb	w8, [sp, #1034]
  211f1c:	tbnz	w8, #1, 212174 <main+0x7bc>
  211f20:	ldrb	w8, [sp, #1120]
  211f24:	tbnz	w8, #5, 21219c <main+0x7e4>
  211f28:	ldrb	w8, [sp, #1120]
  211f2c:	tbnz	w8, #4, 2121b8 <main+0x800>
  211f30:	ldrb	w8, [sp, #1120]
  211f34:	tbnz	w8, #3, 2121cc <main+0x814>
  211f38:	ldrb	w8, [sp, #1120]
  211f3c:	tbz	w8, #2, 211f4c <main+0x594>
  211f40:	adrp	x0, 201000 <main.options+0xe0>
  211f44:	add	x0, x0, #0x64d
  211f48:	bl	212f30 <puts@plt>
  211f4c:	ldrb	w8, [sp, #1028]
  211f50:	tbnz	w8, #0, 211f70 <main+0x5b8>
  211f54:	ldrb	w8, [sp, #1031]
  211f58:	tbnz	w8, #1, 211f98 <main+0x5e0>
  211f5c:	ldrb	w8, [sp, #1030]
  211f60:	tbnz	w8, #5, 211fe0 <main+0x628>
  211f64:	ldrb	w8, [sp, #1030]
  211f68:	tbnz	w8, #3, 212008 <main+0x650>
  211f6c:	b	212040 <main+0x688>
  211f70:	adrp	x0, 201000 <main.options+0xe0>
  211f74:	add	x0, x0, #0x161
  211f78:	bl	212f30 <puts@plt>
  211f7c:	ldrh	w8, [sp, #1034]
  211f80:	adrp	x0, 201000 <main.options+0xe0>
  211f84:	add	x0, x0, #0x346
  211f88:	and	w1, w8, #0x1
  211f8c:	bl	212ec0 <printf@plt>
  211f90:	ldrb	w8, [sp, #1031]
  211f94:	tbz	w8, #1, 211f5c <main+0x5a4>
  211f98:	adrp	x0, 201000 <main.options+0xe0>
  211f9c:	add	x0, x0, #0x384
  211fa0:	bl	212f30 <puts@plt>
  211fa4:	ldrh	w8, [sp, #1036]
  211fa8:	adrp	x0, 201000 <main.options+0xe0>
  211fac:	add	x0, x0, #0x434
  211fb0:	ubfx	w1, w8, #9, #1
  211fb4:	bl	212ec0 <printf@plt>
  211fb8:	ldrb	w1, [sp, #1053]
  211fbc:	adrp	x0, 201000 <main.options+0xe0>
  211fc0:	add	x0, x0, #0x3e7
  211fc4:	bl	212ec0 <printf@plt>
  211fc8:	ldrb	w1, [sp, #1052]
  211fcc:	adrp	x0, 201000 <main.options+0xe0>
  211fd0:	add	x0, x0, #0x4d5
  211fd4:	bl	212ec0 <printf@plt>
  211fd8:	ldrb	w8, [sp, #1030]
  211fdc:	tbz	w8, #5, 211f64 <main+0x5ac>
  211fe0:	adrp	x0, 201000 <main.options+0xe0>
  211fe4:	add	x0, x0, #0x224
  211fe8:	bl	212f30 <puts@plt>
  211fec:	ldrh	w8, [sp, #1036]
  211ff0:	adrp	x0, 201000 <main.options+0xe0>
  211ff4:	add	x0, x0, #0x200
  211ff8:	ubfx	w1, w8, #5, #1
  211ffc:	bl	212ec0 <printf@plt>
  212000:	ldrb	w8, [sp, #1030]
  212004:	tbz	w8, #3, 212040 <main+0x688>
  212008:	adrp	x0, 201000 <main.options+0xe0>
  21200c:	add	x0, x0, #0x36b
  212010:	bl	212f30 <puts@plt>
  212014:	ldrh	w8, [sp, #1036]
  212018:	adrp	x0, 201000 <main.options+0xe0>
  21201c:	add	x0, x0, #0x601
  212020:	ubfx	w1, w8, #3, #1
  212024:	bl	212ec0 <printf@plt>
  212028:	ldrb	w8, [sp, #1036]
  21202c:	tbz	w8, #3, 212040 <main+0x688>
  212030:	ldrb	w1, [sp, #1046]
  212034:	adrp	x0, 201000 <main.options+0xe0>
  212038:	add	x0, x0, #0x138
  21203c:	bl	212ec0 <printf@plt>
  212040:	ldrb	w8, [sp, #1030]
  212044:	tbz	w8, #0, 212054 <main+0x69c>
  212048:	adrp	x0, 201000 <main.options+0xe0>
  21204c:	add	x0, x0, #0xbe
  212050:	bl	212f30 <puts@plt>
  212054:	ldrh	w19, [sp, #504]
  212058:	cbz	w19, 212094 <main+0x6dc>
  21205c:	mov	w8, #0xffff                	// #65535
  212060:	cmp	w19, w8
  212064:	b.eq	212094 <main+0x6dc>  // b.none
  212068:	adrp	x0, 201000 <main.options+0xe0>
  21206c:	add	x0, x0, #0x63f
  212070:	bl	212f30 <puts@plt>
  212074:	tbz	w19, #2, 212084 <main+0x6cc>
  212078:	adrp	x0, 201000 <main.options+0xe0>
  21207c:	add	x0, x0, #0x84
  212080:	bl	212f30 <puts@plt>
  212084:	tbz	w19, #1, 212094 <main+0x6dc>
  212088:	adrp	x0, 201000 <main.options+0xe0>
  21208c:	add	x0, x0, #0x65
  212090:	bl	212f30 <puts@plt>
  212094:	ldrh	w1, [sp, #786]
  212098:	cmp	w1, #0x1
  21209c:	b.ne	2120b0 <main+0x6f8>  // b.any
  2120a0:	adrp	x0, 200000 <main.options-0xf20>
  2120a4:	add	x0, x0, #0xfe0
  2120a8:	bl	212f30 <puts@plt>
  2120ac:	b	2120cc <main+0x714>
  2120b0:	sub	w8, w1, #0x401
  2120b4:	mov	w9, #0xfbfd                	// #64509
  2120b8:	cmp	w9, w8, uxth
  2120bc:	b.cc	2120cc <main+0x714>  // b.lo, b.ul, b.last
  2120c0:	adrp	x0, 201000 <main.options+0xe0>
  2120c4:	add	x0, x0, #0x486
  2120c8:	bl	212ec0 <printf@plt>
  2120cc:	ldrh	w8, [sp, #568]
  2120d0:	and	w9, w8, #0xf000
  2120d4:	cmp	w9, #0x5, lsl #12
  2120d8:	b.ne	212104 <main+0x74c>  // b.any
  2120dc:	ldrh	w9, [sp, #570]
  2120e0:	ldrh	w10, [sp, #572]
  2120e4:	ldrh	w1, [sp, #574]
  2120e8:	lsl	x8, x8, #32
  2120ec:	bfi	x8, x9, #16, #16
  2120f0:	orr	x8, x8, x10
  2120f4:	adrp	x0, 201000 <main.options+0xe0>
  2120f8:	bfi	x1, x8, #16, #48
  2120fc:	add	x0, x0, #0x4a7
  212100:	bl	212ec0 <printf@plt>
  212104:	ldrh	w8, [sp, #352]
  212108:	mov	w9, #0x844a                	// #33866
  21210c:	cmp	w8, w9
  212110:	b.eq	212138 <main+0x780>  // b.none
  212114:	mov	w9, #0x848a                	// #33930
  212118:	cmp	w8, w9
  21211c:	b.eq	212138 <main+0x780>  // b.none
  212120:	ldrh	w8, [sp, #518]
  212124:	mov	w9, #0xc004                	// #49156
  212128:	and	w8, w8, w9
  21212c:	mov	w9, #0x4004                	// #16388
  212130:	cmp	w8, w9
  212134:	b.ne	212144 <main+0x78c>  // b.any
  212138:	adrp	x0, 201000 <main.options+0xe0>
  21213c:	add	x0, x0, #0x510
  212140:	bl	212f30 <puts@plt>
  212144:	mov	w20, wzr
  212148:	add	x0, sp, #0x8
  21214c:	bl	2121ec <closep>
  212150:	mov	w0, w20
  212154:	add	sp, sp, #0x560
  212158:	ldp	x20, x19, [sp, #80]
  21215c:	ldp	x22, x21, [sp, #64]
  212160:	ldp	x24, x23, [sp, #48]
  212164:	ldp	x26, x25, [sp, #32]
  212168:	ldp	x28, x27, [sp, #16]
  21216c:	ldp	x29, x30, [sp], #96
  212170:	ret
  212174:	ldrh	w8, [sp, #1120]
  212178:	adrp	x9, 201000 <main.options+0xe0>
  21217c:	adrp	x10, 201000 <main.options+0xe0>
  212180:	add	x9, x9, #0xda
  212184:	add	x10, x10, #0x6df
  212188:	tst	w8, #0x100
  21218c:	csel	x0, x10, x9, eq  // eq = none
  212190:	bl	212f30 <puts@plt>
  212194:	ldrb	w8, [sp, #1120]
  212198:	tbz	w8, #5, 211f28 <main+0x570>
  21219c:	ldrh	w8, [sp, #1044]
  2121a0:	adrp	x0, 201000 <main.options+0xe0>
  2121a4:	add	x0, x0, #0x5a3
  2121a8:	lsl	w1, w8, #1
  2121ac:	bl	212ec0 <printf@plt>
  2121b0:	ldrb	w8, [sp, #1120]
  2121b4:	tbz	w8, #4, 211f30 <main+0x578>
  2121b8:	adrp	x0, 201000 <main.options+0xe0>
  2121bc:	add	x0, x0, #0x2ef
  2121c0:	bl	212f30 <puts@plt>
  2121c4:	ldrb	w8, [sp, #1120]
  2121c8:	tbz	w8, #3, 211f38 <main+0x580>
  2121cc:	adrp	x0, 201000 <main.options+0xe0>
  2121d0:	add	x0, x0, #0x23e
  2121d4:	bl	212f30 <puts@plt>
  2121d8:	ldrb	w8, [sp, #1120]
  2121dc:	tbnz	w8, #2, 211f40 <main+0x588>
  2121e0:	b	211f4c <main+0x594>
  2121e4:	add	x0, sp, #0x130
  2121e8:	b	212140 <main+0x788>

00000000002121ec <closep>:
  2121ec:	stp	x29, x30, [sp, #-16]!
  2121f0:	ldr	w0, [x0]
  2121f4:	mov	x29, sp
  2121f8:	bl	212f40 <safe_close@plt>
  2121fc:	ldp	x29, x30, [sp], #16
  212200:	ret

0000000000212204 <udev_parse_config>:
  212204:	stp	x29, x30, [sp, #-16]!
  212208:	mov	x0, xzr
  21220c:	mov	x1, xzr
  212210:	mov	x2, xzr
  212214:	mov	x3, xzr
  212218:	mov	x29, sp
  21221c:	bl	212f50 <udev_parse_config_full@plt>
  212220:	ldp	x29, x30, [sp], #16
  212224:	ret

0000000000212228 <disk_identify>:
  212228:	sub	sp, sp, #0x60
  21222c:	movi	v0.2d, #0x0
  212230:	stp	x29, x30, [sp, #48]
  212234:	str	x21, [sp, #64]
  212238:	stp	x20, x19, [sp, #80]
  21223c:	mov	x20, x1
  212240:	stp	q0, q0, [x1, #480]
  212244:	stp	q0, q0, [x1, #448]
  212248:	stp	q0, q0, [x1, #416]
  21224c:	stp	q0, q0, [x1, #384]
  212250:	stp	q0, q0, [x1, #352]
  212254:	stp	q0, q0, [x1, #320]
  212258:	stp	q0, q0, [x1, #288]
  21225c:	stp	q0, q0, [x1, #256]
  212260:	stp	q0, q0, [x1, #224]
  212264:	stp	q0, q0, [x1, #192]
  212268:	stp	q0, q0, [x1, #160]
  21226c:	stp	q0, q0, [x1, #128]
  212270:	stp	q0, q0, [x1, #96]
  212274:	stp	q0, q0, [x1, #64]
  212278:	stp	q0, q0, [x1, #32]
  21227c:	stp	q0, q0, [x1]
  212280:	add	x1, sp, #0xc
  212284:	add	x29, sp, #0x30
  212288:	mov	x19, x2
  21228c:	mov	w21, w0
  212290:	bl	212398 <disk_scsi_inquiry_command>
  212294:	cbz	w0, 2122a4 <disk_identify+0x7c>
  212298:	mov	w21, wzr
  21229c:	cbnz	x19, 212324 <disk_identify+0xfc>
  2122a0:	b	212328 <disk_identify+0x100>
  2122a4:	ldrb	w8, [sp, #12]
  2122a8:	ands	w8, w8, #0x1f
  2122ac:	b.eq	2122d4 <disk_identify+0xac>  // b.none
  2122b0:	cmp	w8, #0x5
  2122b4:	b.ne	21230c <disk_identify+0xe4>  // b.any
  2122b8:	mov	w0, w21
  2122bc:	mov	x1, x20
  2122c0:	bl	21252c <disk_identify_packet_device_command>
  2122c4:	mov	w1, w0
  2122c8:	mov	w21, #0x1                   	// #1
  2122cc:	mov	x8, xzr
  2122d0:	b	2122f0 <disk_identify+0xc8>
  2122d4:	mov	w0, w21
  2122d8:	mov	x1, x20
  2122dc:	bl	21267c <disk_identify_command>
  2122e0:	mov	w21, wzr
  2122e4:	mov	w1, wzr
  2122e8:	cbnz	w0, 212320 <disk_identify+0xf8>
  2122ec:	mov	x8, xzr
  2122f0:	ldrb	w9, [x20, x8]
  2122f4:	cbnz	w9, 21233c <disk_identify+0x114>
  2122f8:	add	x8, x8, #0x1
  2122fc:	cmp	x8, #0x200
  212300:	b.ne	2122f0 <disk_identify+0xc8>  // b.any
  212304:	bl	212f00 <__errno_location@plt>
  212308:	b	212314 <disk_identify+0xec>
  21230c:	bl	212f00 <__errno_location@plt>
  212310:	mov	w21, wzr
  212314:	mov	w8, #0x5                   	// #5
  212318:	str	w8, [x0]
  21231c:	mov	w0, #0xffffffff            	// #-1
  212320:	cbz	x19, 212328 <disk_identify+0x100>
  212324:	str	w21, [x19]
  212328:	ldp	x20, x19, [sp, #80]
  21232c:	ldr	x21, [sp, #64]
  212330:	ldp	x29, x30, [sp, #48]
  212334:	add	sp, sp, #0x60
  212338:	ret
  21233c:	mov	w0, w1
  212340:	cbnz	x19, 212324 <disk_identify+0xfc>
  212344:	b	212328 <disk_identify+0x100>

0000000000212348 <disk_identify_fixup_string>:
  212348:	stp	x29, x30, [sp, #-16]!
  21234c:	lsl	w8, w1, #1
  212350:	mov	x3, x2
  212354:	add	x2, x0, x8
  212358:	mov	x29, sp
  21235c:	bl	2127f0 <disk_identify_get_string>
  212360:	ldp	x29, x30, [sp], #16
  212364:	ret

0000000000212368 <disk_identify_fixup_uint16>:
  212368:	stp	x29, x30, [sp, #-32]!
  21236c:	mov	w8, w1
  212370:	stp	x20, x19, [sp, #16]
  212374:	lsl	x20, x8, #1
  212378:	mov	x19, x0
  21237c:	ldrh	w0, [x0, x20]
  212380:	mov	x29, sp
  212384:	bl	21281c <__uint16_identity>
  212388:	strh	w0, [x19, x20]
  21238c:	ldp	x20, x19, [sp, #16]
  212390:	ldp	x29, x30, [sp], #32
  212394:	ret

0000000000212398 <disk_scsi_inquiry_command>:
  212398:	sub	sp, sp, #0x170
  21239c:	stp	x29, x30, [sp, #304]
  2123a0:	add	x29, sp, #0x130
  2123a4:	mov	w9, #0x12                  	// #18
  2123a8:	mov	w10, #0x24                  	// #36
  2123ac:	mov	w11, #0x51                  	// #81
  2123b0:	mov	x12, #0x600000000           	// #25769803776
  2123b4:	stur	w9, [x29, #-8]
  2123b8:	mov	x9, #0x2000000000          	// #137438953472
  2123bc:	stp	x20, x19, [sp, #352]
  2123c0:	mov	x20, x1
  2123c4:	add	x8, sp, #0x60
  2123c8:	movi	v0.2d, #0x0
  2123cc:	sub	x13, x29, #0x8
  2123d0:	sturh	w10, [x29, #-4]
  2123d4:	sub	x10, x29, #0x30
  2123d8:	stp	x11, x12, [sp, #96]
  2123dc:	mov	x11, #0x2400000000          	// #154618822656
  2123e0:	stp	xzr, x1, [sp, #168]
  2123e4:	stp	xzr, x9, [sp, #128]
  2123e8:	mov	w9, #0x7530                	// #30000
  2123ec:	add	x2, sp, #0x60
  2123f0:	mov	w1, #0x2285                	// #8837
  2123f4:	str	x28, [sp, #320]
  2123f8:	stp	x22, x21, [sp, #336]
  2123fc:	mov	w19, w0
  212400:	stp	q0, q0, [x8, #160]
  212404:	stp	x13, xzr, [sp, #112]
  212408:	stp	x10, xzr, [sp, #144]
  21240c:	str	x11, [sp, #160]
  212410:	str	w9, [sp, #184]
  212414:	str	wzr, [sp, #252]
  212418:	stur	q0, [x8, #92]
  21241c:	stur	q0, [x8, #108]
  212420:	stur	q0, [x8, #124]
  212424:	stur	q0, [x8, #140]
  212428:	bl	212ee0 <ioctl@plt>
  21242c:	cbz	w0, 2124e4 <disk_scsi_inquiry_command+0x14c>
  212430:	mov	w22, w0
  212434:	bl	212f00 <__errno_location@plt>
  212438:	ldr	w8, [x0]
  21243c:	cmp	w8, #0x16
  212440:	b.ne	212510 <disk_scsi_inquiry_command+0x178>  // b.any
  212444:	mov	x8, #0x53                  	// #83
  212448:	movk	x8, #0xfffd, lsl #32
  21244c:	mov	x9, #0x2006                	// #8198
  212450:	movk	x8, #0xffff, lsl #48
  212454:	movk	x9, #0x24, lsl #32
  212458:	mov	x21, x0
  21245c:	sub	x10, x29, #0x8
  212460:	stp	x8, x9, [sp, #8]
  212464:	sub	x8, x29, #0x30
  212468:	mov	w9, #0x7530                	// #30000
  21246c:	add	x2, sp, #0x8
  212470:	mov	w1, #0x2285                	// #8837
  212474:	mov	w0, w19
  212478:	stp	x20, x10, [sp, #24]
  21247c:	str	wzr, [sp, #56]
  212480:	stp	xzr, xzr, [sp, #72]
  212484:	str	xzr, [sp, #64]
  212488:	stp	x8, x9, [sp, #40]
  21248c:	str	wzr, [sp, #88]
  212490:	bl	212ee0 <ioctl@plt>
  212494:	cbz	w0, 2124a8 <disk_scsi_inquiry_command+0x110>
  212498:	mov	w22, w0
  21249c:	mov	w8, wzr
  2124a0:	cbnz	w8, 2124e4 <disk_scsi_inquiry_command+0x14c>
  2124a4:	b	212510 <disk_scsi_inquiry_command+0x178>
  2124a8:	ldrb	w8, [sp, #72]
  2124ac:	cbnz	w8, 2124d0 <disk_scsi_inquiry_command+0x138>
  2124b0:	ldrh	w8, [sp, #76]
  2124b4:	ldrh	w9, [sp, #78]
  2124b8:	orr	w8, w9, w8
  2124bc:	tst	w8, #0xffff
  2124c0:	b.ne	2124d0 <disk_scsi_inquiry_command+0x138>  // b.any
  2124c4:	mov	w8, #0x1                   	// #1
  2124c8:	cbnz	w8, 2124e4 <disk_scsi_inquiry_command+0x14c>
  2124cc:	b	212510 <disk_scsi_inquiry_command+0x178>
  2124d0:	mov	w8, wzr
  2124d4:	mov	w9, #0x5                   	// #5
  2124d8:	mov	w22, #0xffffffff            	// #-1
  2124dc:	str	w9, [x21]
  2124e0:	cbz	w8, 212510 <disk_scsi_inquiry_command+0x178>
  2124e4:	ldp	w9, w8, [sp, #208]
  2124e8:	ldr	w10, [sp, #204]
  2124ec:	orr	w8, w9, w8
  2124f0:	orr	w8, w8, w10
  2124f4:	cbz	w8, 21250c <disk_scsi_inquiry_command+0x174>
  2124f8:	bl	212f00 <__errno_location@plt>
  2124fc:	mov	w8, #0x5                   	// #5
  212500:	mov	w22, #0xffffffff            	// #-1
  212504:	str	w8, [x0]
  212508:	b	212510 <disk_scsi_inquiry_command+0x178>
  21250c:	mov	w22, wzr
  212510:	mov	w0, w22
  212514:	ldp	x20, x19, [sp, #352]
  212518:	ldp	x22, x21, [sp, #336]
  21251c:	ldr	x28, [sp, #320]
  212520:	ldp	x29, x30, [sp, #304]
  212524:	add	sp, sp, #0x170
  212528:	ret

000000000021252c <disk_identify_packet_device_command>:
  21252c:	sub	sp, sp, #0x160
  212530:	adrp	x8, 201000 <main.options+0xe0>
  212534:	add	x8, x8, #0x723
  212538:	ldr	q0, [x8]
  21253c:	stp	x29, x30, [sp, #304]
  212540:	add	x29, sp, #0x130
  212544:	add	x8, sp, #0x60
  212548:	mov	w9, #0x51                  	// #81
  21254c:	mov	x10, #0x1000000000          	// #68719476736
  212550:	stp	x20, x19, [sp, #336]
  212554:	mov	x20, x1
  212558:	str	q0, [x8, #192]
  21255c:	movi	v0.2d, #0x0
  212560:	sub	x11, x29, #0x10
  212564:	mov	x12, #0x2000000000          	// #137438953472
  212568:	sub	x13, x29, #0x30
  21256c:	stp	x9, x10, [sp, #96]
  212570:	mov	x9, #0x20000000000         	// #2199023255552
  212574:	stp	xzr, x1, [sp, #168]
  212578:	mov	w10, #0x7530                	// #30000
  21257c:	add	x2, sp, #0x60
  212580:	mov	w1, #0x2285                	// #8837
  212584:	stp	x28, x21, [sp, #320]
  212588:	mov	w19, w0
  21258c:	stp	xzr, x12, [sp, #128]
  212590:	stp	q0, q0, [x8, #160]
  212594:	stp	x11, xzr, [sp, #112]
  212598:	stp	x13, xzr, [sp, #144]
  21259c:	str	x9, [sp, #160]
  2125a0:	str	w10, [sp, #184]
  2125a4:	str	wzr, [sp, #252]
  2125a8:	stur	q0, [x8, #92]
  2125ac:	stur	q0, [x8, #108]
  2125b0:	stur	q0, [x8, #124]
  2125b4:	stur	q0, [x8, #140]
  2125b8:	bl	212ee0 <ioctl@plt>
  2125bc:	cbz	w0, 212628 <disk_identify_packet_device_command+0xfc>
  2125c0:	mov	w21, w0
  2125c4:	bl	212f00 <__errno_location@plt>
  2125c8:	ldr	w8, [x0]
  2125cc:	cmp	w8, #0x16
  2125d0:	b.ne	212664 <disk_identify_packet_device_command+0x138>  // b.any
  2125d4:	mov	x8, #0x53                  	// #83
  2125d8:	movk	x8, #0xfffd, lsl #32
  2125dc:	mov	x9, #0x2010                	// #8208
  2125e0:	movk	x8, #0xffff, lsl #48
  2125e4:	movk	x9, #0x200, lsl #32
  2125e8:	sub	x10, x29, #0x10
  2125ec:	stp	x8, x9, [sp, #8]
  2125f0:	sub	x8, x29, #0x30
  2125f4:	mov	w9, #0x7530                	// #30000
  2125f8:	add	x2, sp, #0x8
  2125fc:	mov	w1, #0x2285                	// #8837
  212600:	mov	w0, w19
  212604:	stp	x20, x10, [sp, #24]
  212608:	str	wzr, [sp, #56]
  21260c:	stp	xzr, xzr, [sp, #72]
  212610:	str	xzr, [sp, #64]
  212614:	stp	x8, x9, [sp, #40]
  212618:	str	wzr, [sp, #88]
  21261c:	bl	212ee0 <ioctl@plt>
  212620:	mov	w21, w0
  212624:	cbnz	w0, 212664 <disk_identify_packet_device_command+0x138>
  212628:	ldurb	w8, [x29, #-48]
  21262c:	cmp	w8, #0x72
  212630:	b.ne	212654 <disk_identify_packet_device_command+0x128>  // b.any
  212634:	ldurb	w8, [x29, #-40]
  212638:	cmp	w8, #0x9
  21263c:	b.ne	212654 <disk_identify_packet_device_command+0x128>  // b.any
  212640:	ldurb	w8, [x29, #-39]
  212644:	cmp	w8, #0xc
  212648:	b.ne	212654 <disk_identify_packet_device_command+0x128>  // b.any
  21264c:	mov	w21, wzr
  212650:	b	212664 <disk_identify_packet_device_command+0x138>
  212654:	bl	212f00 <__errno_location@plt>
  212658:	mov	w8, #0x5                   	// #5
  21265c:	mov	w21, #0xffffffff            	// #-1
  212660:	str	w8, [x0]
  212664:	mov	w0, w21
  212668:	ldp	x20, x19, [sp, #336]
  21266c:	ldp	x28, x21, [sp, #320]
  212670:	ldp	x29, x30, [sp, #304]
  212674:	add	sp, sp, #0x160
  212678:	ret

000000000021267c <disk_identify_command>:
  21267c:	sub	sp, sp, #0x160
  212680:	mov	x10, #0x8a1                 	// #2209
  212684:	stp	x29, x30, [sp, #304]
  212688:	add	x29, sp, #0x130
  21268c:	mov	w9, #0xec00                	// #60416
  212690:	movk	x10, #0x2e, lsl #16
  212694:	movk	x10, #0x1, lsl #32
  212698:	mov	w11, #0x51                  	// #81
  21269c:	mov	x12, #0xc00000000           	// #51539607552
  2126a0:	stur	w9, [x29, #-8]
  2126a4:	mov	x9, #0x2000000000          	// #137438953472
  2126a8:	stp	x20, x19, [sp, #336]
  2126ac:	mov	x20, x1
  2126b0:	add	x8, sp, #0x60
  2126b4:	movi	v0.2d, #0x0
  2126b8:	sub	x13, x29, #0x10
  2126bc:	stur	x10, [x29, #-16]
  2126c0:	sub	x10, x29, #0x30
  2126c4:	stp	x11, x12, [sp, #96]
  2126c8:	mov	x11, #0x20000000000         	// #2199023255552
  2126cc:	stp	xzr, x1, [sp, #168]
  2126d0:	stp	xzr, x9, [sp, #128]
  2126d4:	mov	w9, #0x7530                	// #30000
  2126d8:	add	x2, sp, #0x60
  2126dc:	mov	w1, #0x2285                	// #8837
  2126e0:	stp	x28, x21, [sp, #320]
  2126e4:	mov	w19, w0
  2126e8:	stp	q0, q0, [x8, #160]
  2126ec:	stp	x13, xzr, [sp, #112]
  2126f0:	stp	x10, xzr, [sp, #144]
  2126f4:	str	x11, [sp, #160]
  2126f8:	str	w9, [sp, #184]
  2126fc:	str	wzr, [sp, #252]
  212700:	stur	q0, [x8, #92]
  212704:	stur	q0, [x8, #108]
  212708:	stur	q0, [x8, #124]
  21270c:	stur	q0, [x8, #140]
  212710:	bl	212ee0 <ioctl@plt>
  212714:	cbz	w0, 212780 <disk_identify_command+0x104>
  212718:	mov	w21, w0
  21271c:	bl	212f00 <__errno_location@plt>
  212720:	ldr	w8, [x0]
  212724:	cmp	w8, #0x16
  212728:	b.ne	2127d8 <disk_identify_command+0x15c>  // b.any
  21272c:	mov	x8, #0x53                  	// #83
  212730:	movk	x8, #0xfffd, lsl #32
  212734:	mov	x9, #0x200c                	// #8204
  212738:	movk	x8, #0xffff, lsl #48
  21273c:	movk	x9, #0x200, lsl #32
  212740:	sub	x10, x29, #0x10
  212744:	stp	x8, x9, [sp, #8]
  212748:	sub	x8, x29, #0x30
  21274c:	mov	w9, #0x7530                	// #30000
  212750:	add	x2, sp, #0x8
  212754:	mov	w1, #0x2285                	// #8837
  212758:	mov	w0, w19
  21275c:	stp	x20, x10, [sp, #24]
  212760:	str	wzr, [sp, #56]
  212764:	stp	xzr, xzr, [sp, #72]
  212768:	str	xzr, [sp, #64]
  21276c:	stp	x8, x9, [sp, #40]
  212770:	str	wzr, [sp, #88]
  212774:	bl	212ee0 <ioctl@plt>
  212778:	mov	w21, w0
  21277c:	cbnz	w0, 2127d8 <disk_identify_command+0x15c>
  212780:	ldurb	w8, [x29, #-48]
  212784:	cmp	w8, #0x72
  212788:	b.ne	2127a4 <disk_identify_command+0x128>  // b.any
  21278c:	ldurb	w9, [x29, #-40]
  212790:	cmp	w9, #0x9
  212794:	b.ne	2127a4 <disk_identify_command+0x128>  // b.any
  212798:	ldurb	w9, [x29, #-39]
  21279c:	cmp	w9, #0xc
  2127a0:	b.eq	2127c0 <disk_identify_command+0x144>  // b.none
  2127a4:	cmp	w8, #0x70
  2127a8:	b.ne	2127c8 <disk_identify_command+0x14c>  // b.any
  2127ac:	ldurb	w8, [x29, #-36]
  2127b0:	cbnz	w8, 2127c8 <disk_identify_command+0x14c>
  2127b4:	ldurb	w8, [x29, #-35]
  2127b8:	cmp	w8, #0x1d
  2127bc:	b.ne	2127c8 <disk_identify_command+0x14c>  // b.any
  2127c0:	mov	w21, wzr
  2127c4:	b	2127d8 <disk_identify_command+0x15c>
  2127c8:	bl	212f00 <__errno_location@plt>
  2127cc:	mov	w8, #0x5                   	// #5
  2127d0:	mov	w21, #0xffffffff            	// #-1
  2127d4:	str	w8, [x0]
  2127d8:	mov	w0, w21
  2127dc:	ldp	x20, x19, [sp, #336]
  2127e0:	ldp	x28, x21, [sp, #320]
  2127e4:	ldp	x29, x30, [sp, #304]
  2127e8:	add	sp, sp, #0x160
  2127ec:	ret

00000000002127f0 <disk_identify_get_string>:
  2127f0:	cbz	x3, 212818 <disk_identify_get_string+0x28>
  2127f4:	lsl	w8, w1, #1
  2127f8:	add	w9, w8, #0x1
  2127fc:	ldrb	w10, [x0, w8, uxtw]
  212800:	ldrb	w9, [x0, w9, uxtw]
  212804:	subs	x3, x3, #0x2
  212808:	add	w8, w8, #0x2
  21280c:	strb	w10, [x2, #1]
  212810:	strb	w9, [x2], #2
  212814:	b.ne	2127f8 <disk_identify_get_string+0x8>  // b.any
  212818:	ret

000000000021281c <__uint16_identity>:
  21281c:	ret

0000000000212820 <util_resolve_subsys_kernel>:
  212820:	stp	x29, x30, [sp, #-80]!
  212824:	stp	x28, x25, [sp, #16]
  212828:	stp	x24, x23, [sp, #32]
  21282c:	stp	x22, x21, [sp, #48]
  212830:	stp	x20, x19, [sp, #64]
  212834:	mov	x29, sp
  212838:	sub	sp, sp, #0x420
  21283c:	str	xzr, [sp, #24]
  212840:	ldrb	w8, [x0]
  212844:	cmp	w8, #0x5b
  212848:	b.ne	2128cc <util_resolve_subsys_kernel+0xac>  // b.any
  21284c:	mov	x22, x2
  212850:	mov	x2, x0
  212854:	mov	x21, x1
  212858:	add	x0, sp, #0x20
  21285c:	mov	w1, #0x400                 	// #1024
  212860:	mov	w24, w3
  212864:	add	x19, sp, #0x20
  212868:	bl	212f60 <strscpy@plt>
  21286c:	orr	x19, x19, #0x1
  212870:	mov	w1, #0x2f                  	// #47
  212874:	mov	x0, x19
  212878:	bl	212f70 <strchr@plt>
  21287c:	cbz	x0, 2128cc <util_resolve_subsys_kernel+0xac>
  212880:	mov	x20, x0
  212884:	strb	wzr, [x20], #1
  212888:	mov	w1, #0x5d                  	// #93
  21288c:	mov	x0, x20
  212890:	bl	212f70 <strchr@plt>
  212894:	cbz	x0, 2128cc <util_resolve_subsys_kernel+0xac>
  212898:	strb	wzr, [x0]
  21289c:	mov	x8, x0
  2128a0:	ldrb	w9, [x8, #1]!
  2128a4:	add	x10, x0, #0x2
  2128a8:	cmp	w9, #0x2f
  2128ac:	mov	w9, #0x1                   	// #1
  2128b0:	cinc	x9, x9, eq  // eq = none
  2128b4:	ldrb	w9, [x0, x9]
  2128b8:	csel	x8, x10, x8, eq  // eq = none
  2128bc:	cmp	w9, #0x0
  2128c0:	csel	x23, xzr, x8, eq  // eq = none
  2128c4:	cbnz	x23, 2128f8 <util_resolve_subsys_kernel+0xd8>
  2128c8:	tbz	w24, #0, 2128f8 <util_resolve_subsys_kernel+0xd8>
  2128cc:	mov	w25, #0xffffffea            	// #-22
  2128d0:	add	x0, sp, #0x18
  2128d4:	bl	212a24 <sd_device_unrefp>
  2128d8:	mov	w0, w25
  2128dc:	add	sp, sp, #0x420
  2128e0:	ldp	x20, x19, [sp, #64]
  2128e4:	ldp	x22, x21, [sp, #48]
  2128e8:	ldp	x24, x23, [sp, #32]
  2128ec:	ldp	x28, x25, [sp, #16]
  2128f0:	ldp	x29, x30, [sp], #80
  2128f4:	ret
  2128f8:	add	x0, sp, #0x18
  2128fc:	mov	x1, x19
  212900:	mov	x2, x20
  212904:	bl	212f80 <sd_device_new_from_subsystem_sysname@plt>
  212908:	tbnz	w0, #31, 2129bc <util_resolve_subsys_kernel+0x19c>
  21290c:	ldr	x0, [sp, #24]
  212910:	tbz	w24, #0, 212940 <util_resolve_subsys_kernel+0x120>
  212914:	add	x2, sp, #0x10
  212918:	mov	x1, x23
  21291c:	bl	212f90 <sd_device_get_sysattr_value@plt>
  212920:	mov	w25, w0
  212924:	tbz	w0, #31, 212930 <util_resolve_subsys_kernel+0x110>
  212928:	cmn	w25, #0x2
  21292c:	b.ne	2128d0 <util_resolve_subsys_kernel+0xb0>  // b.any
  212930:	cmn	w25, #0x2
  212934:	b.ne	2129c4 <util_resolve_subsys_kernel+0x1a4>  // b.any
  212938:	strb	wzr, [x21]
  21293c:	b	2129d4 <util_resolve_subsys_kernel+0x1b4>
  212940:	add	x1, sp, #0x10
  212944:	bl	212fa0 <sd_device_get_syspath@plt>
  212948:	tbnz	w0, #31, 2129bc <util_resolve_subsys_kernel+0x19c>
  21294c:	ldr	x2, [sp, #16]
  212950:	adrp	x8, 200000 <main.options-0xf20>
  212954:	add	x8, x8, #0xffb
  212958:	cmp	x23, #0x0
  21295c:	csel	x3, x8, xzr, ne  // ne = any
  212960:	mov	x0, x21
  212964:	mov	x1, x22
  212968:	mov	x4, x23
  21296c:	mov	x5, xzr
  212970:	bl	212fb0 <strscpyl@plt>
  212974:	mov	w0, wzr
  212978:	bl	212ef0 <log_get_max_level_realm@plt>
  21297c:	cmp	w0, #0x7
  212980:	mov	w25, wzr
  212984:	b.lt	2128d0 <util_resolve_subsys_kernel+0xb0>  // b.tstop
  212988:	mov	x0, x23
  21298c:	bl	212a40 <strempty>
  212990:	adrp	x2, 201000 <main.options+0xe0>
  212994:	adrp	x4, 201000 <main.options+0xe0>
  212998:	adrp	x5, 201000 <main.options+0xe0>
  21299c:	mov	x8, x0
  2129a0:	add	x2, x2, #0x266
  2129a4:	add	x4, x4, #0xa3
  2129a8:	add	x5, x5, #0x41b
  2129ac:	mov	w0, #0x7                   	// #7
  2129b0:	mov	w3, #0x49                  	// #73
  2129b4:	stp	x8, x21, [sp]
  2129b8:	b	212a0c <util_resolve_subsys_kernel+0x1ec>
  2129bc:	mov	w25, w0
  2129c0:	b	2128d0 <util_resolve_subsys_kernel+0xb0>
  2129c4:	ldr	x2, [sp, #16]
  2129c8:	mov	x0, x21
  2129cc:	mov	x1, x22
  2129d0:	bl	212f60 <strscpy@plt>
  2129d4:	mov	w0, wzr
  2129d8:	bl	212ef0 <log_get_max_level_realm@plt>
  2129dc:	cmp	w0, #0x7
  2129e0:	mov	w25, wzr
  2129e4:	b.lt	2128d0 <util_resolve_subsys_kernel+0xb0>  // b.tstop
  2129e8:	adrp	x2, 201000 <main.options+0xe0>
  2129ec:	adrp	x4, 201000 <main.options+0xe0>
  2129f0:	adrp	x5, 201000 <main.options+0xe0>
  2129f4:	add	x2, x2, #0x266
  2129f8:	add	x4, x4, #0xa3
  2129fc:	add	x5, x5, #0x3ac
  212a00:	stp	x23, x21, [sp]
  212a04:	mov	w0, #0x7                   	// #7
  212a08:	mov	w3, #0x42                  	// #66
  212a0c:	mov	w1, wzr
  212a10:	mov	x6, x19
  212a14:	mov	x7, x20
  212a18:	bl	212f10 <log_internal_realm@plt>
  212a1c:	mov	w25, wzr
  212a20:	b	2128d0 <util_resolve_subsys_kernel+0xb0>

0000000000212a24 <sd_device_unrefp>:
  212a24:	stp	x29, x30, [sp, #-16]!
  212a28:	ldr	x0, [x0]
  212a2c:	mov	x29, sp
  212a30:	cbz	x0, 212a38 <sd_device_unrefp+0x14>
  212a34:	bl	212fc0 <sd_device_unref@plt>
  212a38:	ldp	x29, x30, [sp], #16
  212a3c:	ret

0000000000212a40 <strempty>:
  212a40:	adrp	x8, 201000 <main.options+0xe0>
  212a44:	add	x8, x8, #0x672
  212a48:	cmp	x0, #0x0
  212a4c:	csel	x0, x8, x0, eq  // eq = none
  212a50:	ret

0000000000212a54 <util_path_encode>:
  212a54:	stp	x29, x30, [sp, #-16]!
  212a58:	mov	x29, sp
  212a5c:	cbz	x0, 212af0 <util_path_encode+0x9c>
  212a60:	cbz	x1, 212b10 <util_path_encode+0xbc>
  212a64:	mov	w9, #0x785c                	// #30812
  212a68:	mov	w10, #0x785c                	// #30812
  212a6c:	mov	x8, x0
  212a70:	mov	x0, xzr
  212a74:	movk	w9, #0x6632, lsl #16
  212a78:	movk	w10, #0x6335, lsl #16
  212a7c:	b	212a98 <util_path_encode+0x44>
  212a80:	add	x11, x0, #0x4
  212a84:	cmp	x11, x2
  212a88:	b.cs	212ae0 <util_path_encode+0x8c>  // b.hs, b.nlast
  212a8c:	str	w9, [x1, x0]
  212a90:	mov	x0, x11
  212a94:	add	x8, x8, #0x1
  212a98:	ldrb	w11, [x8]
  212a9c:	cmp	w11, #0x2f
  212aa0:	b.eq	212a80 <util_path_encode+0x2c>  // b.none
  212aa4:	cmp	w11, #0x5c
  212aa8:	b.eq	212acc <util_path_encode+0x78>  // b.none
  212aac:	cbz	w11, 212ae4 <util_path_encode+0x90>
  212ab0:	add	x12, x0, #0x1
  212ab4:	cmp	x12, x2
  212ab8:	b.cs	212ae0 <util_path_encode+0x8c>  // b.hs, b.nlast
  212abc:	strb	w11, [x1, x0]
  212ac0:	mov	x0, x12
  212ac4:	add	x8, x8, #0x1
  212ac8:	b	212a98 <util_path_encode+0x44>
  212acc:	add	x11, x0, #0x4
  212ad0:	cmp	x11, x2
  212ad4:	b.cs	212ae0 <util_path_encode+0x8c>  // b.hs, b.nlast
  212ad8:	str	w10, [x1, x0]
  212adc:	b	212a90 <util_path_encode+0x3c>
  212ae0:	mov	x0, xzr
  212ae4:	strb	wzr, [x1, x0]
  212ae8:	ldp	x29, x30, [sp], #16
  212aec:	ret
  212af0:	adrp	x1, 201000 <main.options+0xe0>
  212af4:	adrp	x2, 201000 <main.options+0xe0>
  212af8:	adrp	x4, 201000 <main.options+0xe0>
  212afc:	add	x1, x1, #0x39d
  212b00:	add	x2, x2, #0x266
  212b04:	add	x4, x4, #0x53d
  212b08:	mov	w3, #0x51                  	// #81
  212b0c:	bl	212fd0 <log_assert_failed_realm@plt>
  212b10:	adrp	x1, 200000 <main.options-0xf20>
  212b14:	adrp	x2, 201000 <main.options+0xe0>
  212b18:	adrp	x4, 201000 <main.options+0xe0>
  212b1c:	add	x1, x1, #0xffd
  212b20:	add	x2, x2, #0x266
  212b24:	add	x4, x4, #0x53d
  212b28:	mov	w3, #0x52                  	// #82
  212b2c:	mov	w0, wzr
  212b30:	bl	212fd0 <log_assert_failed_realm@plt>

0000000000212b34 <util_replace_whitespace>:
  212b34:	stp	x29, x30, [sp, #-80]!
  212b38:	stp	x26, x25, [sp, #16]
  212b3c:	stp	x24, x23, [sp, #32]
  212b40:	stp	x22, x21, [sp, #48]
  212b44:	stp	x20, x19, [sp, #64]
  212b48:	mov	x29, sp
  212b4c:	cbz	x0, 212c0c <util_replace_whitespace+0xd8>
  212b50:	mov	x19, x1
  212b54:	cbz	x1, 212c2c <util_replace_whitespace+0xf8>
  212b58:	adrp	x1, 201000 <main.options+0xe0>
  212b5c:	add	x1, x1, #0x71e
  212b60:	mov	x20, x2
  212b64:	mov	x21, x0
  212b68:	bl	212fe0 <strspn@plt>
  212b6c:	cmp	x0, x20
  212b70:	b.cs	212be8 <util_replace_whitespace+0xb4>  // b.hs, b.nlast
  212b74:	mov	x23, x0
  212b78:	mov	x22, xzr
  212b7c:	mov	w25, wzr
  212b80:	mov	w24, #0x5f                  	// #95
  212b84:	ldrb	w26, [x21, x23]
  212b88:	cbz	x26, 212bec <util_replace_whitespace+0xb8>
  212b8c:	bl	212ff0 <__ctype_b_loc@plt>
  212b90:	ldr	x8, [x0]
  212b94:	ldrh	w8, [x8, x26, lsl #1]
  212b98:	tbnz	w8, #13, 212bcc <util_replace_whitespace+0x98>
  212b9c:	tbz	w25, #0, 212bb8 <util_replace_whitespace+0x84>
  212ba0:	add	x8, x22, #0x1
  212ba4:	cmp	x8, x20
  212ba8:	b.cs	212bec <util_replace_whitespace+0xb8>  // b.hs, b.nlast
  212bac:	mov	w25, wzr
  212bb0:	strb	w24, [x19, x22]
  212bb4:	mov	x22, x8
  212bb8:	ldrb	w8, [x21, x23]
  212bbc:	add	x9, x22, #0x1
  212bc0:	strb	w8, [x19, x22]
  212bc4:	mov	x22, x9
  212bc8:	b	212bd0 <util_replace_whitespace+0x9c>
  212bcc:	mov	w25, #0x1                   	// #1
  212bd0:	add	x23, x23, #0x1
  212bd4:	cmp	x23, x20
  212bd8:	b.cs	212bec <util_replace_whitespace+0xb8>  // b.hs, b.nlast
  212bdc:	cmp	x22, x20
  212be0:	b.cc	212b84 <util_replace_whitespace+0x50>  // b.lo, b.ul, b.last
  212be4:	b	212bec <util_replace_whitespace+0xb8>
  212be8:	mov	x22, xzr
  212bec:	strb	wzr, [x19, x22]
  212bf0:	mov	x0, x22
  212bf4:	ldp	x20, x19, [sp, #64]
  212bf8:	ldp	x22, x21, [sp, #48]
  212bfc:	ldp	x24, x23, [sp, #32]
  212c00:	ldp	x26, x25, [sp, #16]
  212c04:	ldp	x29, x30, [sp], #80
  212c08:	ret
  212c0c:	adrp	x1, 201000 <main.options+0xe0>
  212c10:	adrp	x2, 201000 <main.options+0xe0>
  212c14:	adrp	x4, 201000 <main.options+0xe0>
  212c18:	add	x1, x1, #0x4a3
  212c1c:	add	x2, x2, #0x266
  212c20:	add	x4, x4, #0x281
  212c24:	mov	w3, #0x84                  	// #132
  212c28:	bl	212fd0 <log_assert_failed_realm@plt>
  212c2c:	adrp	x1, 201000 <main.options+0xe0>
  212c30:	adrp	x2, 201000 <main.options+0xe0>
  212c34:	adrp	x4, 201000 <main.options+0xe0>
  212c38:	add	x1, x1, #0x314
  212c3c:	add	x2, x2, #0x266
  212c40:	add	x4, x4, #0x281
  212c44:	mov	w3, #0x85                  	// #133
  212c48:	mov	w0, wzr
  212c4c:	bl	212fd0 <log_assert_failed_realm@plt>

0000000000212c50 <util_replace_chars>:
  212c50:	stp	x29, x30, [sp, #-80]!
  212c54:	str	x25, [sp, #16]
  212c58:	stp	x24, x23, [sp, #32]
  212c5c:	stp	x22, x21, [sp, #48]
  212c60:	stp	x20, x19, [sp, #64]
  212c64:	mov	x29, sp
  212c68:	cbz	x0, 212d50 <util_replace_chars+0x100>
  212c6c:	mov	x20, x0
  212c70:	ldrb	w0, [x0]
  212c74:	cbz	w0, 212d30 <util_replace_chars+0xe0>
  212c78:	mov	x19, x1
  212c7c:	mov	x23, xzr
  212c80:	mov	x21, xzr
  212c84:	mov	w24, #0x20                  	// #32
  212c88:	mov	w25, #0x5f                  	// #95
  212c8c:	mov	x22, x20
  212c90:	b	212ca4 <util_replace_chars+0x54>
  212c94:	add	x23, x23, #0x1
  212c98:	add	x22, x20, x23
  212c9c:	ldrb	w0, [x22]
  212ca0:	cbz	w0, 212d34 <util_replace_chars+0xe4>
  212ca4:	mov	x1, x19
  212ca8:	bl	213000 <whitelisted_char_for_devnode@plt>
  212cac:	cbnz	w0, 212c94 <util_replace_chars+0x44>
  212cb0:	ldrb	w8, [x22]
  212cb4:	cmp	w8, #0x5c
  212cb8:	b.ne	212cd4 <util_replace_chars+0x84>  // b.any
  212cbc:	add	x8, x23, x20
  212cc0:	ldrb	w8, [x8, #1]
  212cc4:	cmp	w8, #0x78
  212cc8:	b.ne	212cd4 <util_replace_chars+0x84>  // b.any
  212ccc:	add	x23, x23, #0x2
  212cd0:	b	212c98 <util_replace_chars+0x48>
  212cd4:	mov	x1, #0xffffffffffffffff    	// #-1
  212cd8:	mov	x0, x22
  212cdc:	bl	213010 <utf8_encoded_valid_unichar@plt>
  212ce0:	cmp	w0, #0x2
  212ce4:	b.lt	212cf0 <util_replace_chars+0xa0>  // b.tstop
  212ce8:	add	x23, x23, w0, sxtw
  212cec:	b	212c98 <util_replace_chars+0x48>
  212cf0:	bl	212ff0 <__ctype_b_loc@plt>
  212cf4:	cbz	x19, 212d20 <util_replace_chars+0xd0>
  212cf8:	ldr	x8, [x0]
  212cfc:	ldrb	w9, [x22]
  212d00:	ldrh	w8, [x8, x9, lsl #1]
  212d04:	tbz	w8, #13, 212d20 <util_replace_chars+0xd0>
  212d08:	mov	w1, #0x20                  	// #32
  212d0c:	mov	x0, x19
  212d10:	bl	212f70 <strchr@plt>
  212d14:	cbz	x0, 212d20 <util_replace_chars+0xd0>
  212d18:	strb	w24, [x22]
  212d1c:	b	212d24 <util_replace_chars+0xd4>
  212d20:	strb	w25, [x22]
  212d24:	add	x23, x23, #0x1
  212d28:	add	x21, x21, #0x1
  212d2c:	b	212c98 <util_replace_chars+0x48>
  212d30:	mov	x21, xzr
  212d34:	mov	x0, x21
  212d38:	ldp	x20, x19, [sp, #64]
  212d3c:	ldp	x22, x21, [sp, #48]
  212d40:	ldp	x24, x23, [sp, #32]
  212d44:	ldr	x25, [sp, #16]
  212d48:	ldp	x29, x30, [sp], #80
  212d4c:	ret
  212d50:	adrp	x1, 201000 <main.options+0xe0>
  212d54:	adrp	x2, 201000 <main.options+0xe0>
  212d58:	adrp	x4, 201000 <main.options+0xe0>
  212d5c:	add	x1, x1, #0x4a3
  212d60:	add	x2, x2, #0x266
  212d64:	add	x4, x4, #0x573
  212d68:	mov	w3, #0xa1                  	// #161
  212d6c:	bl	212fd0 <log_assert_failed_realm@plt>

0000000000212d70 <udev_util_encode_string>:
  212d70:	stp	x29, x30, [sp, #-16]!
  212d74:	mov	x29, sp
  212d78:	bl	213020 <encode_devnode_name@plt>
  212d7c:	ldp	x29, x30, [sp], #16
  212d80:	ret
  212d84:	udf	#0

0000000000212d88 <__libc_csu_init>:
  212d88:	stp	x29, x30, [sp, #-64]!
  212d8c:	mov	x29, sp
  212d90:	stp	x19, x20, [sp, #16]
  212d94:	adrp	x20, 223000 <encode_devnode_name@plt+0xffe0>
  212d98:	add	x20, x20, #0x40
  212d9c:	stp	x21, x22, [sp, #32]
  212da0:	adrp	x21, 223000 <encode_devnode_name@plt+0xffe0>
  212da4:	add	x21, x21, #0x38
  212da8:	sub	x20, x20, x21
  212dac:	mov	w22, w0
  212db0:	stp	x23, x24, [sp, #48]
  212db4:	mov	x23, x1
  212db8:	mov	x24, x2
  212dbc:	bl	212e0c <_init>
  212dc0:	cmp	xzr, x20, asr #3
  212dc4:	b.eq	212df0 <__libc_csu_init+0x68>  // b.none
  212dc8:	asr	x20, x20, #3
  212dcc:	mov	x19, #0x0                   	// #0
  212dd0:	ldr	x3, [x21, x19, lsl #3]
  212dd4:	mov	x2, x24
  212dd8:	add	x19, x19, #0x1
  212ddc:	mov	x1, x23
  212de0:	mov	w0, w22
  212de4:	blr	x3
  212de8:	cmp	x20, x19
  212dec:	b.ne	212dd0 <__libc_csu_init+0x48>  // b.any
  212df0:	ldp	x19, x20, [sp, #16]
  212df4:	ldp	x21, x22, [sp, #32]
  212df8:	ldp	x23, x24, [sp, #48]
  212dfc:	ldp	x29, x30, [sp], #64
  212e00:	ret
  212e04:	nop

0000000000212e08 <__libc_csu_fini>:
  212e08:	ret

Disassembly of section .init:

0000000000212e0c <_init>:
  212e0c:	stp	x29, x30, [sp, #-16]!
  212e10:	mov	x29, sp
  212e14:	bl	2118b8 <call_weak_fn>
  212e18:	ldp	x29, x30, [sp], #16
  212e1c:	ret

Disassembly of section .fini:

0000000000212e20 <_fini>:
  212e20:	stp	x29, x30, [sp, #-16]!
  212e24:	mov	x29, sp
  212e28:	ldp	x29, x30, [sp], #16
  212e2c:	ret

Disassembly of section .plt:

0000000000212e30 <__libc_start_main@plt-0x20>:
  212e30:	stp	x16, x30, [sp, #-16]!
  212e34:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212e38:	ldr	x17, [x16, #552]
  212e3c:	add	x16, x16, #0x228
  212e40:	br	x17
  212e44:	nop
  212e48:	nop
  212e4c:	nop

0000000000212e50 <__libc_start_main@plt>:
  212e50:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212e54:	ldr	x17, [x16, #560]
  212e58:	add	x16, x16, #0x230
  212e5c:	br	x17

0000000000212e60 <abort@plt>:
  212e60:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212e64:	ldr	x17, [x16, #568]
  212e68:	add	x16, x16, #0x238
  212e6c:	br	x17

0000000000212e70 <__gmon_start__@plt>:
  212e70:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212e74:	ldr	x17, [x16, #576]
  212e78:	add	x16, x16, #0x240
  212e7c:	br	x17

0000000000212e80 <log_set_target@plt>:
  212e80:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212e84:	ldr	x17, [x16, #584]
  212e88:	add	x16, x16, #0x248
  212e8c:	br	x17

0000000000212e90 <log_parse_environment_realm@plt>:
  212e90:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212e94:	ldr	x17, [x16, #592]
  212e98:	add	x16, x16, #0x250
  212e9c:	br	x17

0000000000212ea0 <log_open@plt>:
  212ea0:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212ea4:	ldr	x17, [x16, #600]
  212ea8:	add	x16, x16, #0x258
  212eac:	br	x17

0000000000212eb0 <getopt_long@plt>:
  212eb0:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212eb4:	ldr	x17, [x16, #608]
  212eb8:	add	x16, x16, #0x260
  212ebc:	br	x17

0000000000212ec0 <printf@plt>:
  212ec0:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212ec4:	ldr	x17, [x16, #616]
  212ec8:	add	x16, x16, #0x268
  212ecc:	br	x17

0000000000212ed0 <open64@plt>:
  212ed0:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212ed4:	ldr	x17, [x16, #624]
  212ed8:	add	x16, x16, #0x270
  212edc:	br	x17

0000000000212ee0 <ioctl@plt>:
  212ee0:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212ee4:	ldr	x17, [x16, #632]
  212ee8:	add	x16, x16, #0x278
  212eec:	br	x17

0000000000212ef0 <log_get_max_level_realm@plt>:
  212ef0:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212ef4:	ldr	x17, [x16, #640]
  212ef8:	add	x16, x16, #0x280
  212efc:	br	x17

0000000000212f00 <__errno_location@plt>:
  212f00:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212f04:	ldr	x17, [x16, #648]
  212f08:	add	x16, x16, #0x288
  212f0c:	br	x17

0000000000212f10 <log_internal_realm@plt>:
  212f10:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212f14:	ldr	x17, [x16, #656]
  212f18:	add	x16, x16, #0x290
  212f1c:	br	x17

0000000000212f20 <memcpy@plt>:
  212f20:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212f24:	ldr	x17, [x16, #664]
  212f28:	add	x16, x16, #0x298
  212f2c:	br	x17

0000000000212f30 <puts@plt>:
  212f30:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212f34:	ldr	x17, [x16, #672]
  212f38:	add	x16, x16, #0x2a0
  212f3c:	br	x17

0000000000212f40 <safe_close@plt>:
  212f40:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212f44:	ldr	x17, [x16, #680]
  212f48:	add	x16, x16, #0x2a8
  212f4c:	br	x17

0000000000212f50 <udev_parse_config_full@plt>:
  212f50:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212f54:	ldr	x17, [x16, #688]
  212f58:	add	x16, x16, #0x2b0
  212f5c:	br	x17

0000000000212f60 <strscpy@plt>:
  212f60:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212f64:	ldr	x17, [x16, #696]
  212f68:	add	x16, x16, #0x2b8
  212f6c:	br	x17

0000000000212f70 <strchr@plt>:
  212f70:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212f74:	ldr	x17, [x16, #704]
  212f78:	add	x16, x16, #0x2c0
  212f7c:	br	x17

0000000000212f80 <sd_device_new_from_subsystem_sysname@plt>:
  212f80:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212f84:	ldr	x17, [x16, #712]
  212f88:	add	x16, x16, #0x2c8
  212f8c:	br	x17

0000000000212f90 <sd_device_get_sysattr_value@plt>:
  212f90:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212f94:	ldr	x17, [x16, #720]
  212f98:	add	x16, x16, #0x2d0
  212f9c:	br	x17

0000000000212fa0 <sd_device_get_syspath@plt>:
  212fa0:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212fa4:	ldr	x17, [x16, #728]
  212fa8:	add	x16, x16, #0x2d8
  212fac:	br	x17

0000000000212fb0 <strscpyl@plt>:
  212fb0:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212fb4:	ldr	x17, [x16, #736]
  212fb8:	add	x16, x16, #0x2e0
  212fbc:	br	x17

0000000000212fc0 <sd_device_unref@plt>:
  212fc0:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212fc4:	ldr	x17, [x16, #744]
  212fc8:	add	x16, x16, #0x2e8
  212fcc:	br	x17

0000000000212fd0 <log_assert_failed_realm@plt>:
  212fd0:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212fd4:	ldr	x17, [x16, #752]
  212fd8:	add	x16, x16, #0x2f0
  212fdc:	br	x17

0000000000212fe0 <strspn@plt>:
  212fe0:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212fe4:	ldr	x17, [x16, #760]
  212fe8:	add	x16, x16, #0x2f8
  212fec:	br	x17

0000000000212ff0 <__ctype_b_loc@plt>:
  212ff0:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  212ff4:	ldr	x17, [x16, #768]
  212ff8:	add	x16, x16, #0x300
  212ffc:	br	x17

0000000000213000 <whitelisted_char_for_devnode@plt>:
  213000:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  213004:	ldr	x17, [x16, #776]
  213008:	add	x16, x16, #0x308
  21300c:	br	x17

0000000000213010 <utf8_encoded_valid_unichar@plt>:
  213010:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  213014:	ldr	x17, [x16, #784]
  213018:	add	x16, x16, #0x310
  21301c:	br	x17

0000000000213020 <encode_devnode_name@plt>:
  213020:	adrp	x16, 223000 <encode_devnode_name@plt+0xffe0>
  213024:	ldr	x17, [x16, #792]
  213028:	add	x16, x16, #0x318
  21302c:	br	x17
