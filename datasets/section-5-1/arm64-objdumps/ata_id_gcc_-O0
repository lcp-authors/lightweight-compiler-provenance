
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ata_id_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401090 <_init>:
  401090:	stp	x29, x30, [sp, #-16]!
  401094:	mov	x29, sp
  401098:	bl	401320 <call_weak_fn>
  40109c:	ldp	x29, x30, [sp], #16
  4010a0:	ret

Disassembly of section .plt:

00000000004010b0 <.plt>:
  4010b0:	stp	x16, x30, [sp, #-16]!
  4010b4:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  4010b8:	ldr	x17, [x16, #3808]
  4010bc:	add	x16, x16, #0xee0
  4010c0:	br	x17
  4010c4:	nop
  4010c8:	nop
  4010cc:	nop

00000000004010d0 <strscpy@plt>:
  4010d0:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  4010d4:	ldr	x17, [x16, #3816]
  4010d8:	add	x16, x16, #0xee8
  4010dc:	br	x17

00000000004010e0 <__libc_start_main@plt>:
  4010e0:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  4010e4:	ldr	x17, [x16, #3824]
  4010e8:	add	x16, x16, #0xef0
  4010ec:	br	x17

00000000004010f0 <__gmon_start__@plt>:
  4010f0:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  4010f4:	ldr	x17, [x16, #3832]
  4010f8:	add	x16, x16, #0xef8
  4010fc:	br	x17

0000000000401100 <log_parse_environment_realm@plt>:
  401100:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  401104:	ldr	x17, [x16, #3840]
  401108:	add	x16, x16, #0xf00
  40110c:	br	x17

0000000000401110 <strscpyl@plt>:
  401110:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  401114:	ldr	x17, [x16, #3848]
  401118:	add	x16, x16, #0xf08
  40111c:	br	x17

0000000000401120 <sd_device_new_from_subsystem_sysname@plt>:
  401120:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  401124:	ldr	x17, [x16, #3856]
  401128:	add	x16, x16, #0xf10
  40112c:	br	x17

0000000000401130 <memcpy@plt>:
  401130:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  401134:	ldr	x17, [x16, #3864]
  401138:	add	x16, x16, #0xf18
  40113c:	br	x17

0000000000401140 <__ctype_b_loc@plt>:
  401140:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  401144:	ldr	x17, [x16, #3872]
  401148:	add	x16, x16, #0xf20
  40114c:	br	x17

0000000000401150 <safe_close@plt>:
  401150:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  401154:	ldr	x17, [x16, #3880]
  401158:	add	x16, x16, #0xf28
  40115c:	br	x17

0000000000401160 <log_assert_failed_realm@plt>:
  401160:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  401164:	ldr	x17, [x16, #3888]
  401168:	add	x16, x16, #0xf30
  40116c:	br	x17

0000000000401170 <utf8_encoded_valid_unichar@plt>:
  401170:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  401174:	ldr	x17, [x16, #3896]
  401178:	add	x16, x16, #0xf38
  40117c:	br	x17

0000000000401180 <getopt_long@plt>:
  401180:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  401184:	ldr	x17, [x16, #3904]
  401188:	add	x16, x16, #0xf40
  40118c:	br	x17

0000000000401190 <encode_devnode_name@plt>:
  401190:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  401194:	ldr	x17, [x16, #3912]
  401198:	add	x16, x16, #0xf48
  40119c:	br	x17

00000000004011a0 <abort@plt>:
  4011a0:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  4011a4:	ldr	x17, [x16, #3920]
  4011a8:	add	x16, x16, #0xf50
  4011ac:	br	x17

00000000004011b0 <strspn@plt>:
  4011b0:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  4011b4:	ldr	x17, [x16, #3928]
  4011b8:	add	x16, x16, #0xf58
  4011bc:	br	x17

00000000004011c0 <__errno_location@plt>:
  4011c0:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  4011c4:	ldr	x17, [x16, #3936]
  4011c8:	add	x16, x16, #0xf60
  4011cc:	br	x17

00000000004011d0 <log_set_target@plt>:
  4011d0:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  4011d4:	ldr	x17, [x16, #3944]
  4011d8:	add	x16, x16, #0xf68
  4011dc:	br	x17

00000000004011e0 <__stack_chk_fail@plt>:
  4011e0:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  4011e4:	ldr	x17, [x16, #3952]
  4011e8:	add	x16, x16, #0xf70
  4011ec:	br	x17

00000000004011f0 <udev_parse_config_full@plt>:
  4011f0:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  4011f4:	ldr	x17, [x16, #3960]
  4011f8:	add	x16, x16, #0xf78
  4011fc:	br	x17

0000000000401200 <log_internal_realm@plt>:
  401200:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  401204:	ldr	x17, [x16, #3968]
  401208:	add	x16, x16, #0xf80
  40120c:	br	x17

0000000000401210 <ioctl@plt>:
  401210:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  401214:	ldr	x17, [x16, #3976]
  401218:	add	x16, x16, #0xf88
  40121c:	br	x17

0000000000401220 <whitelisted_char_for_devnode@plt>:
  401220:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  401224:	ldr	x17, [x16, #3984]
  401228:	add	x16, x16, #0xf90
  40122c:	br	x17

0000000000401230 <strchr@plt>:
  401230:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  401234:	ldr	x17, [x16, #3992]
  401238:	add	x16, x16, #0xf98
  40123c:	br	x17

0000000000401240 <sd_device_get_sysattr_value@plt>:
  401240:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  401244:	ldr	x17, [x16, #4000]
  401248:	add	x16, x16, #0xfa0
  40124c:	br	x17

0000000000401250 <puts@plt>:
  401250:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  401254:	ldr	x17, [x16, #4008]
  401258:	add	x16, x16, #0xfa8
  40125c:	br	x17

0000000000401260 <sd_device_unref@plt>:
  401260:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  401264:	ldr	x17, [x16, #4016]
  401268:	add	x16, x16, #0xfb0
  40126c:	br	x17

0000000000401270 <printf@plt>:
  401270:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  401274:	ldr	x17, [x16, #4024]
  401278:	add	x16, x16, #0xfb8
  40127c:	br	x17

0000000000401280 <open64@plt>:
  401280:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  401284:	ldr	x17, [x16, #4032]
  401288:	add	x16, x16, #0xfc0
  40128c:	br	x17

0000000000401290 <sd_device_get_syspath@plt>:
  401290:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  401294:	ldr	x17, [x16, #4040]
  401298:	add	x16, x16, #0xfc8
  40129c:	br	x17

00000000004012a0 <log_open@plt>:
  4012a0:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  4012a4:	ldr	x17, [x16, #4048]
  4012a8:	add	x16, x16, #0xfd0
  4012ac:	br	x17

00000000004012b0 <memset@plt>:
  4012b0:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  4012b4:	ldr	x17, [x16, #4056]
  4012b8:	add	x16, x16, #0xfd8
  4012bc:	br	x17

00000000004012c0 <log_get_max_level_realm@plt>:
  4012c0:	adrp	x16, 414000 <__FRAME_END__+0xff10>
  4012c4:	ldr	x17, [x16, #4064]
  4012c8:	add	x16, x16, #0xfe0
  4012cc:	br	x17

Disassembly of section .text:

00000000004012d0 <_start>:
  4012d0:	mov	x29, #0x0                   	// #0
  4012d4:	mov	x30, #0x0                   	// #0
  4012d8:	mov	x5, x0
  4012dc:	ldr	x1, [sp]
  4012e0:	add	x2, sp, #0x8
  4012e4:	mov	x6, sp
  4012e8:	movz	x0, #0x0, lsl #48
  4012ec:	movk	x0, #0x0, lsl #32
  4012f0:	movk	x0, #0x40, lsl #16
  4012f4:	movk	x0, #0x1eb4
  4012f8:	movz	x3, #0x0, lsl #48
  4012fc:	movk	x3, #0x0, lsl #32
  401300:	movk	x3, #0x40, lsl #16
  401304:	movk	x3, #0x33d0
  401308:	movz	x4, #0x0, lsl #48
  40130c:	movk	x4, #0x0, lsl #32
  401310:	movk	x4, #0x40, lsl #16
  401314:	movk	x4, #0x3450
  401318:	bl	4010e0 <__libc_start_main@plt>
  40131c:	bl	4011a0 <abort@plt>

0000000000401320 <call_weak_fn>:
  401320:	adrp	x0, 414000 <__FRAME_END__+0xff10>
  401324:	ldr	x0, [x0, #4080]
  401328:	cbz	x0, 401330 <call_weak_fn+0x10>
  40132c:	b	4010f0 <__gmon_start__@plt>
  401330:	ret

0000000000401334 <deregister_tm_clones>:
  401334:	stp	x29, x30, [sp, #-32]!
  401338:	mov	x29, sp
  40133c:	adrp	x0, 415000 <__progname@@GLIBC_2.17>
  401340:	add	x0, x0, #0x0
  401344:	str	x0, [sp, #24]
  401348:	ldr	x0, [sp, #24]
  40134c:	str	x0, [sp, #24]
  401350:	ldr	x1, [sp, #24]
  401354:	adrp	x0, 415000 <__progname@@GLIBC_2.17>
  401358:	add	x0, x0, #0x0
  40135c:	cmp	x1, x0
  401360:	b.eq	40139c <deregister_tm_clones+0x68>  // b.none
  401364:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  401368:	add	x0, x0, #0x468
  40136c:	ldr	x0, [x0]
  401370:	str	x0, [sp, #16]
  401374:	ldr	x0, [sp, #16]
  401378:	str	x0, [sp, #16]
  40137c:	ldr	x0, [sp, #16]
  401380:	cmp	x0, #0x0
  401384:	b.eq	4013a0 <deregister_tm_clones+0x6c>  // b.none
  401388:	ldr	x1, [sp, #16]
  40138c:	adrp	x0, 415000 <__progname@@GLIBC_2.17>
  401390:	add	x0, x0, #0x0
  401394:	blr	x1
  401398:	b	4013a0 <deregister_tm_clones+0x6c>
  40139c:	nop
  4013a0:	ldp	x29, x30, [sp], #32
  4013a4:	ret

00000000004013a8 <register_tm_clones>:
  4013a8:	stp	x29, x30, [sp, #-48]!
  4013ac:	mov	x29, sp
  4013b0:	adrp	x0, 415000 <__progname@@GLIBC_2.17>
  4013b4:	add	x0, x0, #0x0
  4013b8:	str	x0, [sp, #40]
  4013bc:	ldr	x0, [sp, #40]
  4013c0:	str	x0, [sp, #40]
  4013c4:	ldr	x1, [sp, #40]
  4013c8:	adrp	x0, 415000 <__progname@@GLIBC_2.17>
  4013cc:	add	x0, x0, #0x0
  4013d0:	sub	x0, x1, x0
  4013d4:	asr	x0, x0, #3
  4013d8:	lsr	x1, x0, #63
  4013dc:	add	x0, x1, x0
  4013e0:	asr	x0, x0, #1
  4013e4:	str	x0, [sp, #32]
  4013e8:	ldr	x0, [sp, #32]
  4013ec:	cmp	x0, #0x0
  4013f0:	b.eq	401430 <register_tm_clones+0x88>  // b.none
  4013f4:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4013f8:	add	x0, x0, #0x470
  4013fc:	ldr	x0, [x0]
  401400:	str	x0, [sp, #24]
  401404:	ldr	x0, [sp, #24]
  401408:	str	x0, [sp, #24]
  40140c:	ldr	x0, [sp, #24]
  401410:	cmp	x0, #0x0
  401414:	b.eq	401434 <register_tm_clones+0x8c>  // b.none
  401418:	ldr	x2, [sp, #24]
  40141c:	ldr	x1, [sp, #32]
  401420:	adrp	x0, 415000 <__progname@@GLIBC_2.17>
  401424:	add	x0, x0, #0x0
  401428:	blr	x2
  40142c:	b	401434 <register_tm_clones+0x8c>
  401430:	nop
  401434:	ldp	x29, x30, [sp], #48
  401438:	ret

000000000040143c <__do_global_dtors_aux>:
  40143c:	stp	x29, x30, [sp, #-16]!
  401440:	mov	x29, sp
  401444:	adrp	x0, 415000 <__progname@@GLIBC_2.17>
  401448:	add	x0, x0, #0xc
  40144c:	ldrb	w0, [x0]
  401450:	and	x0, x0, #0xff
  401454:	cmp	x0, #0x0
  401458:	b.ne	401474 <__do_global_dtors_aux+0x38>  // b.any
  40145c:	bl	401334 <deregister_tm_clones>
  401460:	adrp	x0, 415000 <__progname@@GLIBC_2.17>
  401464:	add	x0, x0, #0xc
  401468:	mov	w1, #0x1                   	// #1
  40146c:	strb	w1, [x0]
  401470:	b	401478 <__do_global_dtors_aux+0x3c>
  401474:	nop
  401478:	ldp	x29, x30, [sp], #16
  40147c:	ret

0000000000401480 <frame_dummy>:
  401480:	stp	x29, x30, [sp, #-16]!
  401484:	mov	x29, sp
  401488:	bl	4013a8 <register_tm_clones>
  40148c:	nop
  401490:	ldp	x29, x30, [sp], #16
  401494:	ret

0000000000401498 <__uint16_identity>:
  401498:	sub	sp, sp, #0x10
  40149c:	strh	w0, [sp, #14]
  4014a0:	ldrh	w0, [sp, #14]
  4014a4:	add	sp, sp, #0x10
  4014a8:	ret

00000000004014ac <closep>:
  4014ac:	stp	x29, x30, [sp, #-32]!
  4014b0:	mov	x29, sp
  4014b4:	str	x0, [sp, #24]
  4014b8:	ldr	x0, [sp, #24]
  4014bc:	ldr	w0, [x0]
  4014c0:	bl	401150 <safe_close@plt>
  4014c4:	nop
  4014c8:	ldp	x29, x30, [sp], #32
  4014cc:	ret

00000000004014d0 <udev_parse_config>:
  4014d0:	stp	x29, x30, [sp, #-16]!
  4014d4:	mov	x29, sp
  4014d8:	mov	x3, #0x0                   	// #0
  4014dc:	mov	x2, #0x0                   	// #0
  4014e0:	mov	x1, #0x0                   	// #0
  4014e4:	mov	x0, #0x0                   	// #0
  4014e8:	bl	4011f0 <udev_parse_config_full@plt>
  4014ec:	ldp	x29, x30, [sp], #16
  4014f0:	ret

00000000004014f4 <disk_scsi_inquiry_command>:
  4014f4:	stp	x29, x30, [sp, #-352]!
  4014f8:	mov	x29, sp
  4014fc:	str	w0, [sp, #44]
  401500:	str	x1, [sp, #32]
  401504:	str	x2, [sp, #24]
  401508:	adrp	x0, 414000 <__FRAME_END__+0xff10>
  40150c:	add	x0, x0, #0xc98
  401510:	ldr	x1, [x0]
  401514:	str	x1, [sp, #344]
  401518:	mov	x1, #0x0                   	// #0
  40151c:	str	wzr, [sp, #304]
  401520:	strh	wzr, [sp, #308]
  401524:	mov	w0, #0x12                  	// #18
  401528:	strb	w0, [sp, #304]
  40152c:	ldr	x0, [sp, #24]
  401530:	lsr	x0, x0, #8
  401534:	and	w0, w0, #0xff
  401538:	strb	w0, [sp, #307]
  40153c:	ldr	x0, [sp, #24]
  401540:	and	w0, w0, #0xff
  401544:	strb	w0, [sp, #308]
  401548:	add	x0, sp, #0x200
  40154c:	stp	xzr, xzr, [x0, #-200]
  401550:	add	x0, sp, #0x200
  401554:	stp	xzr, xzr, [x0, #-184]
  401558:	stp	xzr, xzr, [sp, #144]
  40155c:	stp	xzr, xzr, [sp, #160]
  401560:	stp	xzr, xzr, [sp, #176]
  401564:	stp	xzr, xzr, [sp, #192]
  401568:	stp	xzr, xzr, [sp, #208]
  40156c:	stp	xzr, xzr, [sp, #224]
  401570:	stp	xzr, xzr, [sp, #240]
  401574:	stp	xzr, xzr, [sp, #256]
  401578:	stp	xzr, xzr, [sp, #272]
  40157c:	stp	xzr, xzr, [sp, #288]
  401580:	mov	w0, #0x51                  	// #81
  401584:	str	w0, [sp, #144]
  401588:	mov	w0, #0x6                   	// #6
  40158c:	str	w0, [sp, #156]
  401590:	add	x0, sp, #0x130
  401594:	str	x0, [sp, #160]
  401598:	mov	w0, #0x20                  	// #32
  40159c:	str	w0, [sp, #188]
  4015a0:	add	x0, sp, #0x138
  4015a4:	str	x0, [sp, #192]
  4015a8:	ldr	x0, [sp, #24]
  4015ac:	str	w0, [sp, #212]
  4015b0:	ldr	x0, [sp, #32]
  4015b4:	str	x0, [sp, #224]
  4015b8:	mov	w0, #0x7530                	// #30000
  4015bc:	str	w0, [sp, #232]
  4015c0:	add	x0, sp, #0x90
  4015c4:	mov	x2, x0
  4015c8:	mov	x1, #0x2285                	// #8837
  4015cc:	ldr	w0, [sp, #44]
  4015d0:	bl	401210 <ioctl@plt>
  4015d4:	str	w0, [sp, #52]
  4015d8:	ldr	w0, [sp, #52]
  4015dc:	cmp	w0, #0x0
  4015e0:	b.eq	4016c4 <disk_scsi_inquiry_command+0x1d0>  // b.none
  4015e4:	bl	4011c0 <__errno_location@plt>
  4015e8:	ldr	w0, [x0]
  4015ec:	cmp	w0, #0x16
  4015f0:	b.ne	4016bc <disk_scsi_inquiry_command+0x1c8>  // b.any
  4015f4:	stp	xzr, xzr, [sp, #56]
  4015f8:	stp	xzr, xzr, [sp, #72]
  4015fc:	stp	xzr, xzr, [sp, #88]
  401600:	stp	xzr, xzr, [sp, #104]
  401604:	stp	xzr, xzr, [sp, #120]
  401608:	str	xzr, [sp, #136]
  40160c:	mov	w0, #0x53                  	// #83
  401610:	str	w0, [sp, #56]
  401614:	mov	w0, #0xfffffffd            	// #-3
  401618:	str	w0, [sp, #60]
  40161c:	mov	w0, #0x6                   	// #6
  401620:	strb	w0, [sp, #64]
  401624:	mov	w0, #0x20                  	// #32
  401628:	strb	w0, [sp, #65]
  40162c:	ldr	x0, [sp, #24]
  401630:	str	w0, [sp, #68]
  401634:	ldr	x0, [sp, #32]
  401638:	str	x0, [sp, #72]
  40163c:	add	x0, sp, #0x130
  401640:	str	x0, [sp, #80]
  401644:	add	x0, sp, #0x138
  401648:	str	x0, [sp, #88]
  40164c:	mov	w0, #0x7530                	// #30000
  401650:	str	w0, [sp, #96]
  401654:	add	x0, sp, #0x38
  401658:	mov	x2, x0
  40165c:	mov	x1, #0x2285                	// #8837
  401660:	ldr	w0, [sp, #44]
  401664:	bl	401210 <ioctl@plt>
  401668:	str	w0, [sp, #52]
  40166c:	ldr	w0, [sp, #52]
  401670:	cmp	w0, #0x0
  401674:	b.eq	401680 <disk_scsi_inquiry_command+0x18c>  // b.none
  401678:	ldr	w0, [sp, #52]
  40167c:	b	401704 <disk_scsi_inquiry_command+0x210>
  401680:	ldrb	w0, [sp, #120]
  401684:	cmp	w0, #0x0
  401688:	b.ne	4016a4 <disk_scsi_inquiry_command+0x1b0>  // b.any
  40168c:	ldrh	w0, [sp, #124]
  401690:	cmp	w0, #0x0
  401694:	b.ne	4016a4 <disk_scsi_inquiry_command+0x1b0>  // b.any
  401698:	ldrh	w0, [sp, #126]
  40169c:	cmp	w0, #0x0
  4016a0:	b.eq	4016c4 <disk_scsi_inquiry_command+0x1d0>  // b.none
  4016a4:	bl	4011c0 <__errno_location@plt>
  4016a8:	mov	x1, x0
  4016ac:	mov	w0, #0x5                   	// #5
  4016b0:	str	w0, [x1]
  4016b4:	mov	w0, #0xffffffff            	// #-1
  4016b8:	b	401704 <disk_scsi_inquiry_command+0x210>
  4016bc:	ldr	w0, [sp, #52]
  4016c0:	b	401704 <disk_scsi_inquiry_command+0x210>
  4016c4:	ldr	w0, [sp, #260]
  4016c8:	cmp	w0, #0x0
  4016cc:	b.ne	4016e8 <disk_scsi_inquiry_command+0x1f4>  // b.any
  4016d0:	ldr	w0, [sp, #256]
  4016d4:	cmp	w0, #0x0
  4016d8:	b.ne	4016e8 <disk_scsi_inquiry_command+0x1f4>  // b.any
  4016dc:	ldr	w0, [sp, #252]
  4016e0:	cmp	w0, #0x0
  4016e4:	b.eq	401700 <disk_scsi_inquiry_command+0x20c>  // b.none
  4016e8:	bl	4011c0 <__errno_location@plt>
  4016ec:	mov	x1, x0
  4016f0:	mov	w0, #0x5                   	// #5
  4016f4:	str	w0, [x1]
  4016f8:	mov	w0, #0xffffffff            	// #-1
  4016fc:	b	401704 <disk_scsi_inquiry_command+0x210>
  401700:	mov	w0, #0x0                   	// #0
  401704:	mov	w1, w0
  401708:	adrp	x0, 414000 <__FRAME_END__+0xff10>
  40170c:	add	x0, x0, #0xc98
  401710:	ldr	x2, [sp, #344]
  401714:	ldr	x0, [x0]
  401718:	eor	x0, x2, x0
  40171c:	cmp	x0, #0x0
  401720:	b.eq	401728 <disk_scsi_inquiry_command+0x234>  // b.none
  401724:	bl	4011e0 <__stack_chk_fail@plt>
  401728:	mov	w0, w1
  40172c:	ldp	x29, x30, [sp], #352
  401730:	ret

0000000000401734 <disk_identify_command>:
  401734:	stp	x29, x30, [sp, #-368]!
  401738:	mov	x29, sp
  40173c:	str	w0, [sp, #44]
  401740:	str	x1, [sp, #32]
  401744:	str	x2, [sp, #24]
  401748:	adrp	x0, 414000 <__FRAME_END__+0xff10>
  40174c:	add	x0, x0, #0xc98
  401750:	ldr	x1, [x0]
  401754:	str	x1, [sp, #360]
  401758:	mov	x1, #0x0                   	// #0
  40175c:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  401760:	add	x1, x0, #0x478
  401764:	add	x0, sp, #0x138
  401768:	ldr	x2, [x1]
  40176c:	str	x2, [x0]
  401770:	ldur	w1, [x1, #7]
  401774:	stur	w1, [x0, #7]
  401778:	strb	wzr, [sp, #323]
  40177c:	add	x0, sp, #0x200
  401780:	stp	xzr, xzr, [x0, #-184]
  401784:	add	x0, sp, #0x200
  401788:	stp	xzr, xzr, [x0, #-168]
  40178c:	add	x0, sp, #0x148
  401790:	add	x0, x0, #0x8
  401794:	str	x0, [sp, #56]
  401798:	stp	xzr, xzr, [sp, #152]
  40179c:	stp	xzr, xzr, [sp, #168]
  4017a0:	stp	xzr, xzr, [sp, #184]
  4017a4:	stp	xzr, xzr, [sp, #200]
  4017a8:	stp	xzr, xzr, [sp, #216]
  4017ac:	stp	xzr, xzr, [sp, #232]
  4017b0:	stp	xzr, xzr, [sp, #248]
  4017b4:	add	x0, sp, #0x200
  4017b8:	stp	xzr, xzr, [x0, #-248]
  4017bc:	add	x0, sp, #0x200
  4017c0:	stp	xzr, xzr, [x0, #-232]
  4017c4:	add	x0, sp, #0x200
  4017c8:	stp	xzr, xzr, [x0, #-216]
  4017cc:	mov	w0, #0x51                  	// #81
  4017d0:	str	w0, [sp, #152]
  4017d4:	mov	w0, #0xc                   	// #12
  4017d8:	str	w0, [sp, #164]
  4017dc:	add	x0, sp, #0x138
  4017e0:	str	x0, [sp, #168]
  4017e4:	mov	w0, #0x20                  	// #32
  4017e8:	str	w0, [sp, #196]
  4017ec:	add	x0, sp, #0x148
  4017f0:	str	x0, [sp, #200]
  4017f4:	ldr	x0, [sp, #24]
  4017f8:	str	w0, [sp, #220]
  4017fc:	ldr	x0, [sp, #32]
  401800:	str	x0, [sp, #232]
  401804:	mov	w0, #0x7530                	// #30000
  401808:	str	w0, [sp, #240]
  40180c:	add	x0, sp, #0x98
  401810:	mov	x2, x0
  401814:	mov	x1, #0x2285                	// #8837
  401818:	ldr	w0, [sp, #44]
  40181c:	bl	401210 <ioctl@plt>
  401820:	str	w0, [sp, #52]
  401824:	ldr	w0, [sp, #52]
  401828:	cmp	w0, #0x0
  40182c:	b.eq	4018d4 <disk_identify_command+0x1a0>  // b.none
  401830:	bl	4011c0 <__errno_location@plt>
  401834:	ldr	w0, [x0]
  401838:	cmp	w0, #0x16
  40183c:	b.ne	4018cc <disk_identify_command+0x198>  // b.any
  401840:	stp	xzr, xzr, [sp, #64]
  401844:	stp	xzr, xzr, [sp, #80]
  401848:	stp	xzr, xzr, [sp, #96]
  40184c:	stp	xzr, xzr, [sp, #112]
  401850:	stp	xzr, xzr, [sp, #128]
  401854:	str	xzr, [sp, #144]
  401858:	mov	w0, #0x53                  	// #83
  40185c:	str	w0, [sp, #64]
  401860:	mov	w0, #0xfffffffd            	// #-3
  401864:	str	w0, [sp, #68]
  401868:	mov	w0, #0xc                   	// #12
  40186c:	strb	w0, [sp, #72]
  401870:	mov	w0, #0x20                  	// #32
  401874:	strb	w0, [sp, #73]
  401878:	ldr	x0, [sp, #24]
  40187c:	str	w0, [sp, #76]
  401880:	ldr	x0, [sp, #32]
  401884:	str	x0, [sp, #80]
  401888:	add	x0, sp, #0x138
  40188c:	str	x0, [sp, #88]
  401890:	add	x0, sp, #0x148
  401894:	str	x0, [sp, #96]
  401898:	mov	w0, #0x7530                	// #30000
  40189c:	str	w0, [sp, #104]
  4018a0:	add	x0, sp, #0x40
  4018a4:	mov	x2, x0
  4018a8:	mov	x1, #0x2285                	// #8837
  4018ac:	ldr	w0, [sp, #44]
  4018b0:	bl	401210 <ioctl@plt>
  4018b4:	str	w0, [sp, #52]
  4018b8:	ldr	w0, [sp, #52]
  4018bc:	cmp	w0, #0x0
  4018c0:	b.eq	4018d4 <disk_identify_command+0x1a0>  // b.none
  4018c4:	ldr	w0, [sp, #52]
  4018c8:	b	401944 <disk_identify_command+0x210>
  4018cc:	ldr	w0, [sp, #52]
  4018d0:	b	401944 <disk_identify_command+0x210>
  4018d4:	ldrb	w0, [sp, #328]
  4018d8:	cmp	w0, #0x72
  4018dc:	b.ne	401904 <disk_identify_command+0x1d0>  // b.any
  4018e0:	ldr	x0, [sp, #56]
  4018e4:	ldrb	w0, [x0]
  4018e8:	cmp	w0, #0x9
  4018ec:	b.ne	401904 <disk_identify_command+0x1d0>  // b.any
  4018f0:	ldr	x0, [sp, #56]
  4018f4:	add	x0, x0, #0x1
  4018f8:	ldrb	w0, [x0]
  4018fc:	cmp	w0, #0xc
  401900:	b.eq	401940 <disk_identify_command+0x20c>  // b.none
  401904:	ldrb	w0, [sp, #328]
  401908:	cmp	w0, #0x70
  40190c:	b.ne	401928 <disk_identify_command+0x1f4>  // b.any
  401910:	ldrb	w0, [sp, #340]
  401914:	cmp	w0, #0x0
  401918:	b.ne	401928 <disk_identify_command+0x1f4>  // b.any
  40191c:	ldrb	w0, [sp, #341]
  401920:	cmp	w0, #0x1d
  401924:	b.eq	401940 <disk_identify_command+0x20c>  // b.none
  401928:	bl	4011c0 <__errno_location@plt>
  40192c:	mov	x1, x0
  401930:	mov	w0, #0x5                   	// #5
  401934:	str	w0, [x1]
  401938:	mov	w0, #0xffffffff            	// #-1
  40193c:	b	401944 <disk_identify_command+0x210>
  401940:	mov	w0, #0x0                   	// #0
  401944:	mov	w1, w0
  401948:	adrp	x0, 414000 <__FRAME_END__+0xff10>
  40194c:	add	x0, x0, #0xc98
  401950:	ldr	x2, [sp, #360]
  401954:	ldr	x0, [x0]
  401958:	eor	x0, x2, x0
  40195c:	cmp	x0, #0x0
  401960:	b.eq	401968 <disk_identify_command+0x234>  // b.none
  401964:	bl	4011e0 <__stack_chk_fail@plt>
  401968:	mov	w0, w1
  40196c:	ldp	x29, x30, [sp], #368
  401970:	ret

0000000000401974 <disk_identify_packet_device_command>:
  401974:	stp	x29, x30, [sp, #-368]!
  401978:	mov	x29, sp
  40197c:	str	w0, [sp, #44]
  401980:	str	x1, [sp, #32]
  401984:	str	x2, [sp, #24]
  401988:	adrp	x0, 414000 <__FRAME_END__+0xff10>
  40198c:	add	x0, x0, #0xc98
  401990:	ldr	x1, [x0]
  401994:	str	x1, [sp, #360]
  401998:	mov	x1, #0x0                   	// #0
  40199c:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4019a0:	add	x0, x0, #0x488
  4019a4:	ldp	x0, x1, [x0]
  4019a8:	add	x2, sp, #0x200
  4019ac:	stp	x0, x1, [x2, #-200]
  4019b0:	add	x0, sp, #0x200
  4019b4:	stp	xzr, xzr, [x0, #-184]
  4019b8:	add	x0, sp, #0x200
  4019bc:	stp	xzr, xzr, [x0, #-168]
  4019c0:	add	x0, sp, #0x148
  4019c4:	add	x0, x0, #0x8
  4019c8:	str	x0, [sp, #56]
  4019cc:	stp	xzr, xzr, [sp, #152]
  4019d0:	stp	xzr, xzr, [sp, #168]
  4019d4:	stp	xzr, xzr, [sp, #184]
  4019d8:	stp	xzr, xzr, [sp, #200]
  4019dc:	stp	xzr, xzr, [sp, #216]
  4019e0:	stp	xzr, xzr, [sp, #232]
  4019e4:	stp	xzr, xzr, [sp, #248]
  4019e8:	add	x0, sp, #0x200
  4019ec:	stp	xzr, xzr, [x0, #-248]
  4019f0:	add	x0, sp, #0x200
  4019f4:	stp	xzr, xzr, [x0, #-232]
  4019f8:	add	x0, sp, #0x200
  4019fc:	stp	xzr, xzr, [x0, #-216]
  401a00:	mov	w0, #0x51                  	// #81
  401a04:	str	w0, [sp, #152]
  401a08:	mov	w0, #0x10                  	// #16
  401a0c:	str	w0, [sp, #164]
  401a10:	add	x0, sp, #0x138
  401a14:	str	x0, [sp, #168]
  401a18:	mov	w0, #0x20                  	// #32
  401a1c:	str	w0, [sp, #196]
  401a20:	add	x0, sp, #0x148
  401a24:	str	x0, [sp, #200]
  401a28:	ldr	x0, [sp, #24]
  401a2c:	str	w0, [sp, #220]
  401a30:	ldr	x0, [sp, #32]
  401a34:	str	x0, [sp, #232]
  401a38:	mov	w0, #0x7530                	// #30000
  401a3c:	str	w0, [sp, #240]
  401a40:	add	x0, sp, #0x98
  401a44:	mov	x2, x0
  401a48:	mov	x1, #0x2285                	// #8837
  401a4c:	ldr	w0, [sp, #44]
  401a50:	bl	401210 <ioctl@plt>
  401a54:	str	w0, [sp, #52]
  401a58:	ldr	w0, [sp, #52]
  401a5c:	cmp	w0, #0x0
  401a60:	b.eq	401b08 <disk_identify_packet_device_command+0x194>  // b.none
  401a64:	bl	4011c0 <__errno_location@plt>
  401a68:	ldr	w0, [x0]
  401a6c:	cmp	w0, #0x16
  401a70:	b.ne	401b00 <disk_identify_packet_device_command+0x18c>  // b.any
  401a74:	stp	xzr, xzr, [sp, #64]
  401a78:	stp	xzr, xzr, [sp, #80]
  401a7c:	stp	xzr, xzr, [sp, #96]
  401a80:	stp	xzr, xzr, [sp, #112]
  401a84:	stp	xzr, xzr, [sp, #128]
  401a88:	str	xzr, [sp, #144]
  401a8c:	mov	w0, #0x53                  	// #83
  401a90:	str	w0, [sp, #64]
  401a94:	mov	w0, #0xfffffffd            	// #-3
  401a98:	str	w0, [sp, #68]
  401a9c:	mov	w0, #0x10                  	// #16
  401aa0:	strb	w0, [sp, #72]
  401aa4:	mov	w0, #0x20                  	// #32
  401aa8:	strb	w0, [sp, #73]
  401aac:	ldr	x0, [sp, #24]
  401ab0:	str	w0, [sp, #76]
  401ab4:	ldr	x0, [sp, #32]
  401ab8:	str	x0, [sp, #80]
  401abc:	add	x0, sp, #0x138
  401ac0:	str	x0, [sp, #88]
  401ac4:	add	x0, sp, #0x148
  401ac8:	str	x0, [sp, #96]
  401acc:	mov	w0, #0x7530                	// #30000
  401ad0:	str	w0, [sp, #104]
  401ad4:	add	x0, sp, #0x40
  401ad8:	mov	x2, x0
  401adc:	mov	x1, #0x2285                	// #8837
  401ae0:	ldr	w0, [sp, #44]
  401ae4:	bl	401210 <ioctl@plt>
  401ae8:	str	w0, [sp, #52]
  401aec:	ldr	w0, [sp, #52]
  401af0:	cmp	w0, #0x0
  401af4:	b.eq	401b08 <disk_identify_packet_device_command+0x194>  // b.none
  401af8:	ldr	w0, [sp, #52]
  401afc:	b	401b54 <disk_identify_packet_device_command+0x1e0>
  401b00:	ldr	w0, [sp, #52]
  401b04:	b	401b54 <disk_identify_packet_device_command+0x1e0>
  401b08:	ldrb	w0, [sp, #328]
  401b0c:	cmp	w0, #0x72
  401b10:	b.ne	401b38 <disk_identify_packet_device_command+0x1c4>  // b.any
  401b14:	ldr	x0, [sp, #56]
  401b18:	ldrb	w0, [x0]
  401b1c:	cmp	w0, #0x9
  401b20:	b.ne	401b38 <disk_identify_packet_device_command+0x1c4>  // b.any
  401b24:	ldr	x0, [sp, #56]
  401b28:	add	x0, x0, #0x1
  401b2c:	ldrb	w0, [x0]
  401b30:	cmp	w0, #0xc
  401b34:	b.eq	401b50 <disk_identify_packet_device_command+0x1dc>  // b.none
  401b38:	bl	4011c0 <__errno_location@plt>
  401b3c:	mov	x1, x0
  401b40:	mov	w0, #0x5                   	// #5
  401b44:	str	w0, [x1]
  401b48:	mov	w0, #0xffffffff            	// #-1
  401b4c:	b	401b54 <disk_identify_packet_device_command+0x1e0>
  401b50:	mov	w0, #0x0                   	// #0
  401b54:	mov	w1, w0
  401b58:	adrp	x0, 414000 <__FRAME_END__+0xff10>
  401b5c:	add	x0, x0, #0xc98
  401b60:	ldr	x2, [sp, #360]
  401b64:	ldr	x0, [x0]
  401b68:	eor	x0, x2, x0
  401b6c:	cmp	x0, #0x0
  401b70:	b.eq	401b78 <disk_identify_packet_device_command+0x204>  // b.none
  401b74:	bl	4011e0 <__stack_chk_fail@plt>
  401b78:	mov	w0, w1
  401b7c:	ldp	x29, x30, [sp], #368
  401b80:	ret

0000000000401b84 <disk_identify_get_string>:
  401b84:	sub	sp, sp, #0x30
  401b88:	str	x0, [sp, #24]
  401b8c:	str	w1, [sp, #20]
  401b90:	str	x2, [sp, #8]
  401b94:	str	x3, [sp]
  401b98:	b	401c28 <disk_identify_get_string+0xa4>
  401b9c:	ldr	w0, [sp, #20]
  401ba0:	lsl	w0, w0, #1
  401ba4:	add	w0, w0, #0x1
  401ba8:	mov	w0, w0
  401bac:	ldr	x1, [sp, #24]
  401bb0:	add	x0, x1, x0
  401bb4:	ldrb	w0, [x0]
  401bb8:	str	w0, [sp, #40]
  401bbc:	ldr	w0, [sp, #20]
  401bc0:	lsl	w0, w0, #1
  401bc4:	mov	w0, w0
  401bc8:	ldr	x1, [sp, #24]
  401bcc:	add	x0, x1, x0
  401bd0:	ldrb	w0, [x0]
  401bd4:	str	w0, [sp, #44]
  401bd8:	ldr	w0, [sp, #40]
  401bdc:	and	w1, w0, #0xff
  401be0:	ldr	x0, [sp, #8]
  401be4:	strb	w1, [x0]
  401be8:	ldr	x0, [sp, #8]
  401bec:	add	x0, x0, #0x1
  401bf0:	str	x0, [sp, #8]
  401bf4:	ldr	w0, [sp, #44]
  401bf8:	and	w1, w0, #0xff
  401bfc:	ldr	x0, [sp, #8]
  401c00:	strb	w1, [x0]
  401c04:	ldr	x0, [sp, #8]
  401c08:	add	x0, x0, #0x1
  401c0c:	str	x0, [sp, #8]
  401c10:	ldr	w0, [sp, #20]
  401c14:	add	w0, w0, #0x1
  401c18:	str	w0, [sp, #20]
  401c1c:	ldr	x0, [sp]
  401c20:	sub	x0, x0, #0x2
  401c24:	str	x0, [sp]
  401c28:	ldr	x0, [sp]
  401c2c:	cmp	x0, #0x0
  401c30:	b.ne	401b9c <disk_identify_get_string+0x18>  // b.any
  401c34:	nop
  401c38:	nop
  401c3c:	add	sp, sp, #0x30
  401c40:	ret

0000000000401c44 <disk_identify_fixup_string>:
  401c44:	stp	x29, x30, [sp, #-48]!
  401c48:	mov	x29, sp
  401c4c:	str	x0, [sp, #40]
  401c50:	str	w1, [sp, #36]
  401c54:	str	x2, [sp, #24]
  401c58:	ldr	w0, [sp, #36]
  401c5c:	lsl	w0, w0, #1
  401c60:	mov	w0, w0
  401c64:	ldr	x1, [sp, #40]
  401c68:	add	x0, x1, x0
  401c6c:	ldr	x3, [sp, #24]
  401c70:	mov	x2, x0
  401c74:	ldr	w1, [sp, #36]
  401c78:	ldr	x0, [sp, #40]
  401c7c:	bl	401b84 <disk_identify_get_string>
  401c80:	nop
  401c84:	ldp	x29, x30, [sp], #48
  401c88:	ret

0000000000401c8c <disk_identify_fixup_uint16>:
  401c8c:	stp	x29, x30, [sp, #-64]!
  401c90:	mov	x29, sp
  401c94:	str	x19, [sp, #16]
  401c98:	str	x0, [sp, #40]
  401c9c:	str	w1, [sp, #36]
  401ca0:	ldr	x0, [sp, #40]
  401ca4:	str	x0, [sp, #56]
  401ca8:	ldr	w0, [sp, #36]
  401cac:	lsl	x0, x0, #1
  401cb0:	ldr	x1, [sp, #56]
  401cb4:	add	x0, x1, x0
  401cb8:	ldrh	w2, [x0]
  401cbc:	ldr	w0, [sp, #36]
  401cc0:	lsl	x0, x0, #1
  401cc4:	ldr	x1, [sp, #56]
  401cc8:	add	x19, x1, x0
  401ccc:	mov	w0, w2
  401cd0:	bl	401498 <__uint16_identity>
  401cd4:	and	w0, w0, #0xffff
  401cd8:	strh	w0, [x19]
  401cdc:	nop
  401ce0:	ldr	x19, [sp, #16]
  401ce4:	ldp	x29, x30, [sp], #64
  401ce8:	ret

0000000000401cec <disk_identify>:
  401cec:	stp	x29, x30, [sp, #-128]!
  401cf0:	mov	x29, sp
  401cf4:	str	w0, [sp, #44]
  401cf8:	str	x1, [sp, #32]
  401cfc:	str	x2, [sp, #24]
  401d00:	adrp	x0, 414000 <__FRAME_END__+0xff10>
  401d04:	add	x0, x0, #0xc98
  401d08:	ldr	x1, [x0]
  401d0c:	str	x1, [sp, #120]
  401d10:	mov	x1, #0x0                   	// #0
  401d14:	str	wzr, [sp, #64]
  401d18:	mov	x0, #0x200                 	// #512
  401d1c:	str	x0, [sp, #72]
  401d20:	ldr	x0, [sp, #72]
  401d24:	cmp	x0, #0x0
  401d28:	b.eq	401d3c <disk_identify+0x50>  // b.none
  401d2c:	ldr	x2, [sp, #72]
  401d30:	mov	w1, #0x0                   	// #0
  401d34:	ldr	x0, [sp, #32]
  401d38:	bl	4012b0 <memset@plt>
  401d3c:	add	x0, sp, #0x50
  401d40:	mov	x2, #0x24                  	// #36
  401d44:	mov	x1, x0
  401d48:	ldr	w0, [sp, #44]
  401d4c:	bl	4014f4 <disk_scsi_inquiry_command>
  401d50:	str	w0, [sp, #52]
  401d54:	ldr	w0, [sp, #52]
  401d58:	cmp	w0, #0x0
  401d5c:	b.ne	401e54 <disk_identify+0x168>  // b.any
  401d60:	ldrb	w0, [sp, #80]
  401d64:	and	w0, w0, #0x1f
  401d68:	str	w0, [sp, #68]
  401d6c:	ldr	w0, [sp, #68]
  401d70:	cmp	w0, #0x5
  401d74:	b.ne	401d98 <disk_identify+0xac>  // b.any
  401d78:	mov	w0, #0x1                   	// #1
  401d7c:	str	w0, [sp, #64]
  401d80:	mov	x2, #0x200                 	// #512
  401d84:	ldr	x1, [sp, #32]
  401d88:	ldr	w0, [sp, #44]
  401d8c:	bl	401974 <disk_identify_packet_device_command>
  401d90:	str	w0, [sp, #52]
  401d94:	b	401de4 <disk_identify+0xf8>
  401d98:	ldr	w0, [sp, #68]
  401d9c:	cmp	w0, #0x0
  401da0:	b.eq	401dc0 <disk_identify+0xd4>  // b.none
  401da4:	mov	w0, #0xffffffff            	// #-1
  401da8:	str	w0, [sp, #52]
  401dac:	bl	4011c0 <__errno_location@plt>
  401db0:	mov	x1, x0
  401db4:	mov	w0, #0x5                   	// #5
  401db8:	str	w0, [x1]
  401dbc:	b	401e68 <disk_identify+0x17c>
  401dc0:	mov	x2, #0x200                 	// #512
  401dc4:	ldr	x1, [sp, #32]
  401dc8:	ldr	w0, [sp, #44]
  401dcc:	bl	401734 <disk_identify_command>
  401dd0:	str	w0, [sp, #52]
  401dd4:	ldr	w0, [sp, #52]
  401dd8:	cmp	w0, #0x0
  401ddc:	b.ne	401e5c <disk_identify+0x170>  // b.any
  401de0:	nop
  401de4:	mov	w0, #0x1                   	// #1
  401de8:	str	w0, [sp, #56]
  401dec:	str	wzr, [sp, #60]
  401df0:	b	401e20 <disk_identify+0x134>
  401df4:	ldrsw	x0, [sp, #60]
  401df8:	ldr	x1, [sp, #32]
  401dfc:	add	x0, x1, x0
  401e00:	ldrb	w0, [x0]
  401e04:	cmp	w0, #0x0
  401e08:	b.eq	401e14 <disk_identify+0x128>  // b.none
  401e0c:	str	wzr, [sp, #56]
  401e10:	b	401e2c <disk_identify+0x140>
  401e14:	ldr	w0, [sp, #60]
  401e18:	add	w0, w0, #0x1
  401e1c:	str	w0, [sp, #60]
  401e20:	ldr	w0, [sp, #60]
  401e24:	cmp	w0, #0x1ff
  401e28:	b.le	401df4 <disk_identify+0x108>
  401e2c:	ldr	w0, [sp, #56]
  401e30:	cmp	w0, #0x0
  401e34:	b.eq	401e64 <disk_identify+0x178>  // b.none
  401e38:	mov	w0, #0xffffffff            	// #-1
  401e3c:	str	w0, [sp, #52]
  401e40:	bl	4011c0 <__errno_location@plt>
  401e44:	mov	x1, x0
  401e48:	mov	w0, #0x5                   	// #5
  401e4c:	str	w0, [x1]
  401e50:	b	401e68 <disk_identify+0x17c>
  401e54:	nop
  401e58:	b	401e68 <disk_identify+0x17c>
  401e5c:	nop
  401e60:	b	401e68 <disk_identify+0x17c>
  401e64:	nop
  401e68:	ldr	x0, [sp, #24]
  401e6c:	cmp	x0, #0x0
  401e70:	b.eq	401e80 <disk_identify+0x194>  // b.none
  401e74:	ldr	x0, [sp, #24]
  401e78:	ldr	w1, [sp, #64]
  401e7c:	str	w1, [x0]
  401e80:	ldr	w0, [sp, #52]
  401e84:	mov	w1, w0
  401e88:	adrp	x0, 414000 <__FRAME_END__+0xff10>
  401e8c:	add	x0, x0, #0xc98
  401e90:	ldr	x2, [sp, #120]
  401e94:	ldr	x0, [x0]
  401e98:	eor	x0, x2, x0
  401e9c:	cmp	x0, #0x0
  401ea0:	b.eq	401ea8 <disk_identify+0x1bc>  // b.none
  401ea4:	bl	4011e0 <__stack_chk_fail@plt>
  401ea8:	mov	w0, w1
  401eac:	ldp	x29, x30, [sp], #128
  401eb0:	ret

0000000000401eb4 <main>:
  401eb4:	sub	sp, sp, #0x5e0
  401eb8:	stp	x29, x30, [sp]
  401ebc:	mov	x29, sp
  401ec0:	str	x19, [sp, #16]
  401ec4:	str	w0, [sp, #44]
  401ec8:	str	x1, [sp, #32]
  401ecc:	adrp	x0, 414000 <__FRAME_END__+0xff10>
  401ed0:	add	x0, x0, #0xc98
  401ed4:	ldr	x1, [x0]
  401ed8:	str	x1, [sp, #1496]
  401edc:	mov	x1, #0x0                   	// #0
  401ee0:	str	xzr, [sp, #112]
  401ee4:	str	wzr, [sp, #68]
  401ee8:	mov	w0, #0xffffffff            	// #-1
  401eec:	str	w0, [sp, #60]
  401ef0:	str	wzr, [sp, #64]
  401ef4:	mov	w0, #0x7                   	// #7
  401ef8:	bl	4011d0 <log_set_target@plt>
  401efc:	bl	4014d0 <udev_parse_config>
  401f00:	mov	w0, #0x1                   	// #1
  401f04:	bl	401100 <log_parse_environment_realm@plt>
  401f08:	bl	4012a0 <log_open@plt>
  401f0c:	mov	x4, #0x0                   	// #0
  401f10:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  401f14:	add	x3, x0, #0xb88
  401f18:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  401f1c:	add	x2, x0, #0x498
  401f20:	ldr	x1, [sp, #32]
  401f24:	ldr	w0, [sp, #44]
  401f28:	bl	401180 <getopt_long@plt>
  401f2c:	str	w0, [sp, #72]
  401f30:	ldr	w0, [sp, #72]
  401f34:	cmn	w0, #0x1
  401f38:	b.eq	401f88 <main+0xd4>  // b.none
  401f3c:	ldr	w0, [sp, #72]
  401f40:	cmp	w0, #0x68
  401f44:	b.eq	401f60 <main+0xac>  // b.none
  401f48:	ldr	w0, [sp, #72]
  401f4c:	cmp	w0, #0x78
  401f50:	b.ne	401f0c <main+0x58>  // b.any
  401f54:	mov	w0, #0x1                   	// #1
  401f58:	str	w0, [sp, #68]
  401f5c:	b	401f84 <main+0xd0>
  401f60:	adrp	x0, 415000 <__progname@@GLIBC_2.17>
  401f64:	add	x0, x0, #0x0
  401f68:	ldr	x0, [x0]
  401f6c:	mov	x1, x0
  401f70:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  401f74:	add	x0, x0, #0x4a0
  401f78:	bl	401270 <printf@plt>
  401f7c:	mov	w19, #0x0                   	// #0
  401f80:	b	4029d8 <main+0xb24>
  401f84:	b	401f0c <main+0x58>
  401f88:	nop
  401f8c:	adrp	x0, 415000 <__progname@@GLIBC_2.17>
  401f90:	add	x0, x0, #0x8
  401f94:	ldr	w0, [x0]
  401f98:	sxtw	x0, w0
  401f9c:	lsl	x0, x0, #3
  401fa0:	ldr	x1, [sp, #32]
  401fa4:	add	x0, x1, x0
  401fa8:	ldr	x0, [x0]
  401fac:	str	x0, [sp, #112]
  401fb0:	ldr	x0, [sp, #112]
  401fb4:	cmp	x0, #0x0
  401fb8:	b.ne	40203c <main+0x188>  // b.any
  401fbc:	mov	w0, #0x3                   	// #3
  401fc0:	str	w0, [sp, #100]
  401fc4:	str	wzr, [sp, #104]
  401fc8:	mov	w0, #0x1                   	// #1
  401fcc:	str	w0, [sp, #108]
  401fd0:	ldr	w0, [sp, #108]
  401fd4:	bl	4012c0 <log_get_max_level_realm@plt>
  401fd8:	mov	w1, w0
  401fdc:	ldr	w0, [sp, #100]
  401fe0:	and	w0, w0, #0x7
  401fe4:	cmp	w1, w0
  401fe8:	b.lt	40202c <main+0x178>  // b.tstop
  401fec:	ldr	w0, [sp, #108]
  401ff0:	lsl	w1, w0, #10
  401ff4:	ldr	w0, [sp, #100]
  401ff8:	orr	w6, w1, w0
  401ffc:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402000:	add	x1, x0, #0x52b
  402004:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402008:	add	x5, x0, #0x548
  40200c:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402010:	add	x4, x0, #0xbe8
  402014:	mov	w3, #0x1b6                 	// #438
  402018:	mov	x2, x1
  40201c:	ldr	w1, [sp, #104]
  402020:	mov	w0, w6
  402024:	bl	401200 <log_internal_realm@plt>
  402028:	b	402034 <main+0x180>
  40202c:	ldr	w0, [sp, #104]
  402030:	cmp	w0, #0x0
  402034:	mov	w19, #0x1                   	// #1
  402038:	b	4029d8 <main+0xb24>
  40203c:	mov	w1, #0x800                 	// #2048
  402040:	movk	w1, #0x8, lsl #16
  402044:	ldr	x0, [sp, #112]
  402048:	bl	401280 <open64@plt>
  40204c:	str	w0, [sp, #60]
  402050:	ldr	w0, [sp, #60]
  402054:	cmp	w0, #0x0
  402058:	b.ge	4020e0 <main+0x22c>  // b.tcont
  40205c:	mov	w0, #0x3                   	// #3
  402060:	str	w0, [sp, #88]
  402064:	str	wzr, [sp, #92]
  402068:	mov	w0, #0x1                   	// #1
  40206c:	str	w0, [sp, #96]
  402070:	ldr	w0, [sp, #96]
  402074:	bl	4012c0 <log_get_max_level_realm@plt>
  402078:	mov	w1, w0
  40207c:	ldr	w0, [sp, #88]
  402080:	and	w0, w0, #0x7
  402084:	cmp	w1, w0
  402088:	b.lt	4020d0 <main+0x21c>  // b.tstop
  40208c:	ldr	w0, [sp, #96]
  402090:	lsl	w1, w0, #10
  402094:	ldr	w0, [sp, #88]
  402098:	orr	w7, w1, w0
  40209c:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4020a0:	add	x1, x0, #0x52b
  4020a4:	ldr	x6, [sp, #112]
  4020a8:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4020ac:	add	x5, x0, #0x560
  4020b0:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4020b4:	add	x4, x0, #0xbe8
  4020b8:	mov	w3, #0x1bc                 	// #444
  4020bc:	mov	x2, x1
  4020c0:	ldr	w1, [sp, #92]
  4020c4:	mov	w0, w7
  4020c8:	bl	401200 <log_internal_realm@plt>
  4020cc:	b	4020d8 <main+0x224>
  4020d0:	ldr	w0, [sp, #92]
  4020d4:	cmp	w0, #0x0
  4020d8:	mov	w19, #0x1                   	// #1
  4020dc:	b	4029d8 <main+0xb24>
  4020e0:	ldr	w0, [sp, #60]
  4020e4:	add	x2, sp, #0x40
  4020e8:	add	x1, sp, #0x280
  4020ec:	bl	401cec <disk_identify>
  4020f0:	cmp	w0, #0x0
  4020f4:	b.ne	402220 <main+0x36c>  // b.any
  4020f8:	add	x0, sp, #0x280
  4020fc:	mov	x2, #0x14                  	// #20
  402100:	mov	w1, #0xa                   	// #10
  402104:	bl	401c44 <disk_identify_fixup_string>
  402108:	add	x0, sp, #0x280
  40210c:	mov	x2, #0x8                   	// #8
  402110:	mov	w1, #0x17                  	// #23
  402114:	bl	401c44 <disk_identify_fixup_string>
  402118:	add	x0, sp, #0x280
  40211c:	mov	x2, #0x28                  	// #40
  402120:	mov	w1, #0x1b                  	// #27
  402124:	bl	401c44 <disk_identify_fixup_string>
  402128:	add	x0, sp, #0x280
  40212c:	mov	w1, #0x0                   	// #0
  402130:	bl	401c8c <disk_identify_fixup_uint16>
  402134:	add	x0, sp, #0x280
  402138:	mov	w1, #0x4b                  	// #75
  40213c:	bl	401c8c <disk_identify_fixup_uint16>
  402140:	add	x0, sp, #0x280
  402144:	mov	w1, #0x4c                  	// #76
  402148:	bl	401c8c <disk_identify_fixup_uint16>
  40214c:	add	x0, sp, #0x280
  402150:	mov	w1, #0x52                  	// #82
  402154:	bl	401c8c <disk_identify_fixup_uint16>
  402158:	add	x0, sp, #0x280
  40215c:	mov	w1, #0x53                  	// #83
  402160:	bl	401c8c <disk_identify_fixup_uint16>
  402164:	add	x0, sp, #0x280
  402168:	mov	w1, #0x54                  	// #84
  40216c:	bl	401c8c <disk_identify_fixup_uint16>
  402170:	add	x0, sp, #0x280
  402174:	mov	w1, #0x55                  	// #85
  402178:	bl	401c8c <disk_identify_fixup_uint16>
  40217c:	add	x0, sp, #0x280
  402180:	mov	w1, #0x56                  	// #86
  402184:	bl	401c8c <disk_identify_fixup_uint16>
  402188:	add	x0, sp, #0x280
  40218c:	mov	w1, #0x57                  	// #87
  402190:	bl	401c8c <disk_identify_fixup_uint16>
  402194:	add	x0, sp, #0x280
  402198:	mov	w1, #0x59                  	// #89
  40219c:	bl	401c8c <disk_identify_fixup_uint16>
  4021a0:	add	x0, sp, #0x280
  4021a4:	mov	w1, #0x5a                  	// #90
  4021a8:	bl	401c8c <disk_identify_fixup_uint16>
  4021ac:	add	x0, sp, #0x280
  4021b0:	mov	w1, #0x5b                  	// #91
  4021b4:	bl	401c8c <disk_identify_fixup_uint16>
  4021b8:	add	x0, sp, #0x280
  4021bc:	mov	w1, #0x5e                  	// #94
  4021c0:	bl	401c8c <disk_identify_fixup_uint16>
  4021c4:	add	x0, sp, #0x280
  4021c8:	mov	w1, #0x6c                  	// #108
  4021cc:	bl	401c8c <disk_identify_fixup_uint16>
  4021d0:	add	x0, sp, #0x280
  4021d4:	mov	w1, #0x6d                  	// #109
  4021d8:	bl	401c8c <disk_identify_fixup_uint16>
  4021dc:	add	x0, sp, #0x280
  4021e0:	mov	w1, #0x6e                  	// #110
  4021e4:	bl	401c8c <disk_identify_fixup_uint16>
  4021e8:	add	x0, sp, #0x280
  4021ec:	mov	w1, #0x6f                  	// #111
  4021f0:	bl	401c8c <disk_identify_fixup_uint16>
  4021f4:	add	x0, sp, #0x280
  4021f8:	mov	w1, #0x80                  	// #128
  4021fc:	bl	401c8c <disk_identify_fixup_uint16>
  402200:	add	x0, sp, #0x280
  402204:	mov	w1, #0xd9                  	// #217
  402208:	bl	401c8c <disk_identify_fixup_uint16>
  40220c:	add	x0, sp, #0x80
  402210:	add	x1, sp, #0x280
  402214:	mov	x2, #0x200                 	// #512
  402218:	bl	401130 <memcpy@plt>
  40221c:	b	4022c8 <main+0x414>
  402220:	ldr	w0, [sp, #60]
  402224:	add	x1, sp, #0x80
  402228:	mov	x2, x1
  40222c:	mov	x1, #0x30d                 	// #781
  402230:	bl	401210 <ioctl@plt>
  402234:	cmp	w0, #0x0
  402238:	b.eq	4022c8 <main+0x414>  // b.none
  40223c:	mov	w0, #0x7                   	// #7
  402240:	str	w0, [sp, #76]
  402244:	bl	4011c0 <__errno_location@plt>
  402248:	ldr	w0, [x0]
  40224c:	str	w0, [sp, #80]
  402250:	mov	w0, #0x1                   	// #1
  402254:	str	w0, [sp, #84]
  402258:	ldr	w0, [sp, #84]
  40225c:	bl	4012c0 <log_get_max_level_realm@plt>
  402260:	mov	w1, w0
  402264:	ldr	w0, [sp, #76]
  402268:	and	w0, w0, #0x7
  40226c:	cmp	w1, w0
  402270:	b.lt	4022b8 <main+0x404>  // b.tstop
  402274:	ldr	w0, [sp, #84]
  402278:	lsl	w1, w0, #10
  40227c:	ldr	w0, [sp, #76]
  402280:	orr	w7, w1, w0
  402284:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402288:	add	x1, x0, #0x52b
  40228c:	ldr	x6, [sp, #112]
  402290:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402294:	add	x5, x0, #0x578
  402298:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  40229c:	add	x4, x0, #0xbe8
  4022a0:	mov	w3, #0x1df                 	// #479
  4022a4:	mov	x2, x1
  4022a8:	ldr	w1, [sp, #80]
  4022ac:	mov	w0, w7
  4022b0:	bl	401200 <log_internal_realm@plt>
  4022b4:	b	4022c0 <main+0x40c>
  4022b8:	ldr	w0, [sp, #80]
  4022bc:	cmp	w0, #0x0
  4022c0:	mov	w19, #0x2                   	// #2
  4022c4:	b	4029d8 <main+0xb24>
  4022c8:	add	x0, sp, #0x4a8
  4022cc:	add	x1, sp, #0xb6
  4022d0:	ldp	x2, x3, [x1]
  4022d4:	stp	x2, x3, [x0]
  4022d8:	ldp	x2, x3, [x1, #16]
  4022dc:	stp	x2, x3, [x0, #16]
  4022e0:	ldr	x1, [x1, #32]
  4022e4:	str	x1, [x0, #32]
  4022e8:	strb	wzr, [sp, #1232]
  4022ec:	add	x1, sp, #0x4d8
  4022f0:	add	x0, sp, #0x4a8
  4022f4:	mov	x2, #0x100                 	// #256
  4022f8:	bl	4033a0 <udev_util_encode_string>
  4022fc:	add	x1, sp, #0x4a8
  402300:	add	x0, sp, #0x80
  402304:	add	x0, x0, #0x36
  402308:	mov	x2, #0x28                  	// #40
  40230c:	bl	402ff8 <util_replace_whitespace>
  402310:	add	x0, sp, #0x4a8
  402314:	mov	x1, #0x0                   	// #0
  402318:	bl	4031c4 <util_replace_chars>
  40231c:	add	x1, sp, #0x490
  402320:	add	x0, sp, #0x80
  402324:	add	x0, x0, #0x14
  402328:	mov	x2, #0x14                  	// #20
  40232c:	bl	402ff8 <util_replace_whitespace>
  402330:	add	x0, sp, #0x490
  402334:	mov	x1, #0x0                   	// #0
  402338:	bl	4031c4 <util_replace_chars>
  40233c:	add	x1, sp, #0x480
  402340:	add	x0, sp, #0x80
  402344:	add	x0, x0, #0x2e
  402348:	mov	x2, #0x8                   	// #8
  40234c:	bl	402ff8 <util_replace_whitespace>
  402350:	add	x0, sp, #0x480
  402354:	mov	x1, #0x0                   	// #0
  402358:	bl	4031c4 <util_replace_chars>
  40235c:	ldr	w0, [sp, #68]
  402360:	cmp	w0, #0x0
  402364:	b.eq	4029a0 <main+0xaec>  // b.none
  402368:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  40236c:	add	x0, x0, #0x5a0
  402370:	bl	401250 <puts@plt>
  402374:	ldrh	w0, [sp, #128]
  402378:	lsr	w0, w0, #8
  40237c:	and	w0, w0, #0xffff
  402380:	and	w0, w0, #0x80
  402384:	cmp	w0, #0x0
  402388:	b.eq	402420 <main+0x56c>  // b.none
  40238c:	ldrh	w0, [sp, #128]
  402390:	lsr	w0, w0, #8
  402394:	and	w0, w0, #0xffff
  402398:	and	w0, w0, #0x1f
  40239c:	cmp	w0, #0x7
  4023a0:	b.eq	402400 <main+0x54c>  // b.none
  4023a4:	cmp	w0, #0x7
  4023a8:	b.gt	402410 <main+0x55c>
  4023ac:	cmp	w0, #0x5
  4023b0:	b.eq	4023f0 <main+0x53c>  // b.none
  4023b4:	cmp	w0, #0x5
  4023b8:	b.gt	402410 <main+0x55c>
  4023bc:	cmp	w0, #0x0
  4023c0:	b.eq	4023d0 <main+0x51c>  // b.none
  4023c4:	cmp	w0, #0x1
  4023c8:	b.eq	4023e0 <main+0x52c>  // b.none
  4023cc:	b	402410 <main+0x55c>
  4023d0:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4023d4:	add	x0, x0, #0x5b0
  4023d8:	bl	401250 <puts@plt>
  4023dc:	b	40242c <main+0x578>
  4023e0:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4023e4:	add	x0, x0, #0x5c0
  4023e8:	bl	401250 <puts@plt>
  4023ec:	b	40242c <main+0x578>
  4023f0:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4023f4:	add	x0, x0, #0x5b0
  4023f8:	bl	401250 <puts@plt>
  4023fc:	b	40242c <main+0x578>
  402400:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402404:	add	x0, x0, #0x5d0
  402408:	bl	401250 <puts@plt>
  40240c:	b	40242c <main+0x578>
  402410:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402414:	add	x0, x0, #0x5e0
  402418:	bl	401250 <puts@plt>
  40241c:	b	40242c <main+0x578>
  402420:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402424:	add	x0, x0, #0x5f0
  402428:	bl	401250 <puts@plt>
  40242c:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402430:	add	x0, x0, #0x600
  402434:	bl	401250 <puts@plt>
  402438:	add	x0, sp, #0x4a8
  40243c:	mov	x1, x0
  402440:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402444:	add	x0, x0, #0x610
  402448:	bl	401270 <printf@plt>
  40244c:	add	x0, sp, #0x4d8
  402450:	mov	x1, x0
  402454:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402458:	add	x0, x0, #0x620
  40245c:	bl	401270 <printf@plt>
  402460:	add	x0, sp, #0x480
  402464:	mov	x1, x0
  402468:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  40246c:	add	x0, x0, #0x638
  402470:	bl	401270 <printf@plt>
  402474:	ldrb	w0, [sp, #1168]
  402478:	cmp	w0, #0x0
  40247c:	b.eq	4024b4 <main+0x600>  // b.none
  402480:	add	x1, sp, #0x490
  402484:	add	x0, sp, #0x4a8
  402488:	mov	x2, x1
  40248c:	mov	x1, x0
  402490:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402494:	add	x0, x0, #0x648
  402498:	bl	401270 <printf@plt>
  40249c:	add	x0, sp, #0x490
  4024a0:	mov	x1, x0
  4024a4:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4024a8:	add	x0, x0, #0x660
  4024ac:	bl	401270 <printf@plt>
  4024b0:	b	4024c8 <main+0x614>
  4024b4:	add	x0, sp, #0x4a8
  4024b8:	mov	x1, x0
  4024bc:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4024c0:	add	x0, x0, #0x678
  4024c4:	bl	401270 <printf@plt>
  4024c8:	ldrh	w0, [sp, #292]
  4024cc:	and	w0, w0, #0x20
  4024d0:	cmp	w0, #0x0
  4024d4:	b.eq	402500 <main+0x64c>  // b.none
  4024d8:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4024dc:	add	x0, x0, #0x688
  4024e0:	bl	401250 <puts@plt>
  4024e4:	ldrh	w0, [sp, #298]
  4024e8:	asr	w0, w0, #5
  4024ec:	and	w0, w0, #0x1
  4024f0:	mov	w1, w0
  4024f4:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4024f8:	add	x0, x0, #0x6a0
  4024fc:	bl	401270 <printf@plt>
  402500:	ldrh	w0, [sp, #292]
  402504:	and	w0, w0, #0x400
  402508:	cmp	w0, #0x0
  40250c:	b.eq	402538 <main+0x684>  // b.none
  402510:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402514:	add	x0, x0, #0x6c0
  402518:	bl	401250 <puts@plt>
  40251c:	ldrh	w0, [sp, #298]
  402520:	asr	w0, w0, #10
  402524:	and	w0, w0, #0x1
  402528:	mov	w1, w0
  40252c:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402530:	add	x0, x0, #0x6e0
  402534:	bl	401270 <printf@plt>
  402538:	ldrh	w0, [sp, #292]
  40253c:	and	w0, w0, #0x8
  402540:	cmp	w0, #0x0
  402544:	b.eq	402570 <main+0x6bc>  // b.none
  402548:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  40254c:	add	x0, x0, #0x708
  402550:	bl	401250 <puts@plt>
  402554:	ldrh	w0, [sp, #298]
  402558:	asr	w0, w0, #3
  40255c:	and	w0, w0, #0x1
  402560:	mov	w1, w0
  402564:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402568:	add	x0, x0, #0x720
  40256c:	bl	401270 <printf@plt>
  402570:	ldrh	w0, [sp, #292]
  402574:	and	w0, w0, #0x2
  402578:	cmp	w0, #0x0
  40257c:	b.eq	402678 <main+0x7c4>  // b.none
  402580:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402584:	add	x0, x0, #0x748
  402588:	bl	401250 <puts@plt>
  40258c:	ldrh	w0, [sp, #298]
  402590:	asr	w0, w0, #1
  402594:	and	w0, w0, #0x1
  402598:	mov	w1, w0
  40259c:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4025a0:	add	x0, x0, #0x768
  4025a4:	bl	401270 <printf@plt>
  4025a8:	ldrh	w0, [sp, #306]
  4025ac:	lsl	w0, w0, #1
  4025b0:	mov	w1, w0
  4025b4:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4025b8:	add	x0, x0, #0x790
  4025bc:	bl	401270 <printf@plt>
  4025c0:	ldrh	w0, [sp, #298]
  4025c4:	and	w0, w0, #0x2
  4025c8:	cmp	w0, #0x0
  4025cc:	b.eq	4025fc <main+0x748>  // b.none
  4025d0:	ldrh	w0, [sp, #384]
  4025d4:	and	w0, w0, #0x100
  4025d8:	cmp	w0, #0x0
  4025dc:	b.eq	4025f0 <main+0x73c>  // b.none
  4025e0:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4025e4:	add	x0, x0, #0x7c0
  4025e8:	bl	401250 <puts@plt>
  4025ec:	b	4025fc <main+0x748>
  4025f0:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4025f4:	add	x0, x0, #0x7f0
  4025f8:	bl	401250 <puts@plt>
  4025fc:	ldrh	w0, [sp, #384]
  402600:	and	w0, w0, #0x20
  402604:	cmp	w0, #0x0
  402608:	b.eq	402624 <main+0x770>  // b.none
  40260c:	ldrh	w0, [sp, #308]
  402610:	lsl	w0, w0, #1
  402614:	mov	w1, w0
  402618:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  40261c:	add	x0, x0, #0x818
  402620:	bl	401270 <printf@plt>
  402624:	ldrh	w0, [sp, #384]
  402628:	and	w0, w0, #0x10
  40262c:	cmp	w0, #0x0
  402630:	b.eq	402640 <main+0x78c>  // b.none
  402634:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402638:	add	x0, x0, #0x850
  40263c:	bl	401250 <puts@plt>
  402640:	ldrh	w0, [sp, #384]
  402644:	and	w0, w0, #0x8
  402648:	cmp	w0, #0x0
  40264c:	b.eq	40265c <main+0x7a8>  // b.none
  402650:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402654:	add	x0, x0, #0x878
  402658:	bl	401250 <puts@plt>
  40265c:	ldrh	w0, [sp, #384]
  402660:	and	w0, w0, #0x4
  402664:	cmp	w0, #0x0
  402668:	b.eq	402678 <main+0x7c4>  // b.none
  40266c:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402670:	add	x0, x0, #0x8a0
  402674:	bl	401250 <puts@plt>
  402678:	ldrh	w0, [sp, #292]
  40267c:	and	w0, w0, #0x1
  402680:	cmp	w0, #0x0
  402684:	b.eq	4026ac <main+0x7f8>  // b.none
  402688:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  40268c:	add	x0, x0, #0x8c8
  402690:	bl	401250 <puts@plt>
  402694:	ldrh	w0, [sp, #298]
  402698:	and	w0, w0, #0x1
  40269c:	mov	w1, w0
  4026a0:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4026a4:	add	x0, x0, #0x8e8
  4026a8:	bl	401270 <printf@plt>
  4026ac:	ldrh	w0, [sp, #294]
  4026b0:	and	w0, w0, #0x200
  4026b4:	cmp	w0, #0x0
  4026b8:	b.eq	402718 <main+0x864>  // b.none
  4026bc:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4026c0:	add	x0, x0, #0x910
  4026c4:	bl	401250 <puts@plt>
  4026c8:	ldrh	w0, [sp, #300]
  4026cc:	asr	w0, w0, #9
  4026d0:	and	w0, w0, #0x1
  4026d4:	mov	w1, w0
  4026d8:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4026dc:	add	x0, x0, #0x930
  4026e0:	bl	401270 <printf@plt>
  4026e4:	ldrh	w0, [sp, #316]
  4026e8:	lsr	w0, w0, #8
  4026ec:	and	w0, w0, #0xffff
  4026f0:	mov	w1, w0
  4026f4:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4026f8:	add	x0, x0, #0x958
  4026fc:	bl	401270 <printf@plt>
  402700:	ldrh	w0, [sp, #316]
  402704:	and	w0, w0, #0xff
  402708:	mov	w1, w0
  40270c:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402710:	add	x0, x0, #0x990
  402714:	bl	401270 <printf@plt>
  402718:	ldrh	w0, [sp, #294]
  40271c:	and	w0, w0, #0x20
  402720:	cmp	w0, #0x0
  402724:	b.eq	402750 <main+0x89c>  // b.none
  402728:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  40272c:	add	x0, x0, #0x9c0
  402730:	bl	401250 <puts@plt>
  402734:	ldrh	w0, [sp, #300]
  402738:	asr	w0, w0, #5
  40273c:	and	w0, w0, #0x1
  402740:	mov	w1, w0
  402744:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402748:	add	x0, x0, #0x9e0
  40274c:	bl	401270 <printf@plt>
  402750:	ldrh	w0, [sp, #294]
  402754:	and	w0, w0, #0x8
  402758:	cmp	w0, #0x0
  40275c:	b.eq	4027b0 <main+0x8fc>  // b.none
  402760:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402764:	add	x0, x0, #0xa08
  402768:	bl	401250 <puts@plt>
  40276c:	ldrh	w0, [sp, #300]
  402770:	asr	w0, w0, #3
  402774:	and	w0, w0, #0x1
  402778:	mov	w1, w0
  40277c:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402780:	add	x0, x0, #0xa28
  402784:	bl	401270 <printf@plt>
  402788:	ldrh	w0, [sp, #300]
  40278c:	and	w0, w0, #0x8
  402790:	cmp	w0, #0x0
  402794:	b.eq	4027b0 <main+0x8fc>  // b.none
  402798:	ldrh	w0, [sp, #310]
  40279c:	and	w0, w0, #0xff
  4027a0:	mov	w1, w0
  4027a4:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4027a8:	add	x0, x0, #0xa50
  4027ac:	bl	401270 <printf@plt>
  4027b0:	ldrh	w0, [sp, #294]
  4027b4:	and	w0, w0, #0x1
  4027b8:	cmp	w0, #0x0
  4027bc:	b.eq	4027cc <main+0x918>  // b.none
  4027c0:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4027c4:	add	x0, x0, #0xa80
  4027c8:	bl	401250 <puts@plt>
  4027cc:	ldrh	w0, [sp, #792]
  4027d0:	strh	w0, [sp, #58]
  4027d4:	strb	wzr, [sp, #56]
  4027d8:	ldrh	w0, [sp, #58]
  4027dc:	cmp	w0, #0x0
  4027e0:	b.eq	4027f0 <main+0x93c>  // b.none
  4027e4:	mov	w1, #0xffff                	// #65535
  4027e8:	cmp	w0, w1
  4027ec:	b.ne	4027f8 <main+0x944>  // b.any
  4027f0:	mov	w0, #0x1                   	// #1
  4027f4:	strb	w0, [sp, #56]
  4027f8:	nop
  4027fc:	ldrb	w0, [sp, #56]
  402800:	eor	w0, w0, #0x1
  402804:	and	w0, w0, #0xff
  402808:	cmp	w0, #0x0
  40280c:	b.eq	402854 <main+0x9a0>  // b.none
  402810:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402814:	add	x0, x0, #0xaa0
  402818:	bl	401250 <puts@plt>
  40281c:	ldrh	w0, [sp, #58]
  402820:	and	w0, w0, #0x4
  402824:	cmp	w0, #0x0
  402828:	b.eq	402838 <main+0x984>  // b.none
  40282c:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402830:	add	x0, x0, #0xab0
  402834:	bl	401250 <puts@plt>
  402838:	ldrh	w0, [sp, #58]
  40283c:	and	w0, w0, #0x2
  402840:	cmp	w0, #0x0
  402844:	b.eq	402854 <main+0x9a0>  // b.none
  402848:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  40284c:	add	x0, x0, #0xad0
  402850:	bl	401250 <puts@plt>
  402854:	ldrh	w0, [sp, #1074]
  402858:	strh	w0, [sp, #58]
  40285c:	ldrh	w0, [sp, #58]
  402860:	cmp	w0, #0x1
  402864:	b.ne	402878 <main+0x9c4>  // b.any
  402868:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  40286c:	add	x0, x0, #0xaf0
  402870:	bl	401250 <puts@plt>
  402874:	b	4028a8 <main+0x9f4>
  402878:	ldrh	w0, [sp, #58]
  40287c:	cmp	w0, #0x400
  402880:	b.ls	4028a8 <main+0x9f4>  // b.plast
  402884:	ldrh	w1, [sp, #58]
  402888:	mov	w0, #0xffff                	// #65535
  40288c:	cmp	w1, w0
  402890:	b.eq	4028a8 <main+0x9f4>  // b.none
  402894:	ldrh	w0, [sp, #58]
  402898:	mov	w1, w0
  40289c:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4028a0:	add	x0, x0, #0xb10
  4028a4:	bl	401270 <printf@plt>
  4028a8:	ldrh	w0, [sp, #856]
  4028ac:	strh	w0, [sp, #58]
  4028b0:	ldrh	w0, [sp, #58]
  4028b4:	and	w0, w0, #0xf000
  4028b8:	cmp	w0, #0x5, lsl #12
  4028bc:	b.ne	40293c <main+0xa88>  // b.any
  4028c0:	ldrh	w0, [sp, #856]
  4028c4:	and	x0, x0, #0xffff
  4028c8:	str	x0, [sp, #120]
  4028cc:	ldr	x0, [sp, #120]
  4028d0:	lsl	x0, x0, #16
  4028d4:	str	x0, [sp, #120]
  4028d8:	ldrh	w0, [sp, #858]
  4028dc:	and	x0, x0, #0xffff
  4028e0:	ldr	x1, [sp, #120]
  4028e4:	orr	x0, x1, x0
  4028e8:	str	x0, [sp, #120]
  4028ec:	ldr	x0, [sp, #120]
  4028f0:	lsl	x0, x0, #16
  4028f4:	str	x0, [sp, #120]
  4028f8:	ldrh	w0, [sp, #860]
  4028fc:	and	x0, x0, #0xffff
  402900:	ldr	x1, [sp, #120]
  402904:	orr	x0, x1, x0
  402908:	str	x0, [sp, #120]
  40290c:	ldr	x0, [sp, #120]
  402910:	lsl	x0, x0, #16
  402914:	str	x0, [sp, #120]
  402918:	ldrh	w0, [sp, #862]
  40291c:	and	x0, x0, #0xffff
  402920:	ldr	x1, [sp, #120]
  402924:	orr	x0, x1, x0
  402928:	str	x0, [sp, #120]
  40292c:	ldr	x1, [sp, #120]
  402930:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402934:	add	x0, x0, #0xb30
  402938:	bl	401270 <printf@plt>
  40293c:	strb	wzr, [sp, #57]
  402940:	ldrh	w0, [sp, #640]
  402944:	mov	w1, #0x844a                	// #33866
  402948:	cmp	w0, w1
  40294c:	b.eq	40295c <main+0xaa8>  // b.none
  402950:	mov	w1, #0x848a                	// #33930
  402954:	cmp	w0, w1
  402958:	b.ne	402964 <main+0xab0>  // b.any
  40295c:	mov	w0, #0x1                   	// #1
  402960:	strb	w0, [sp, #57]
  402964:	nop
  402968:	ldrb	w0, [sp, #57]
  40296c:	cmp	w0, #0x0
  402970:	b.ne	402990 <main+0xadc>  // b.any
  402974:	ldrh	w0, [sp, #806]
  402978:	mov	w1, w0
  40297c:	mov	w0, #0xc004                	// #49156
  402980:	and	w1, w1, w0
  402984:	mov	w0, #0x4004                	// #16388
  402988:	cmp	w1, w0
  40298c:	b.ne	4029d4 <main+0xb20>  // b.any
  402990:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402994:	add	x0, x0, #0xb60
  402998:	bl	401250 <puts@plt>
  40299c:	b	4029d4 <main+0xb20>
  4029a0:	ldrb	w0, [sp, #1168]
  4029a4:	cmp	w0, #0x0
  4029a8:	b.eq	4029cc <main+0xb18>  // b.none
  4029ac:	add	x1, sp, #0x490
  4029b0:	add	x0, sp, #0x4a8
  4029b4:	mov	x2, x1
  4029b8:	mov	x1, x0
  4029bc:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4029c0:	add	x0, x0, #0xb70
  4029c4:	bl	401270 <printf@plt>
  4029c8:	b	4029d4 <main+0xb20>
  4029cc:	add	x0, sp, #0x4a8
  4029d0:	bl	401250 <puts@plt>
  4029d4:	mov	w19, #0x0                   	// #0
  4029d8:	add	x0, sp, #0x3c
  4029dc:	bl	4014ac <closep>
  4029e0:	mov	w1, w19
  4029e4:	adrp	x0, 414000 <__FRAME_END__+0xff10>
  4029e8:	add	x0, x0, #0xc98
  4029ec:	ldr	x2, [sp, #1496]
  4029f0:	ldr	x0, [x0]
  4029f4:	eor	x0, x2, x0
  4029f8:	cmp	x0, #0x0
  4029fc:	b.eq	402a04 <main+0xb50>  // b.none
  402a00:	bl	4011e0 <__stack_chk_fail@plt>
  402a04:	mov	w0, w1
  402a08:	ldr	x19, [sp, #16]
  402a0c:	ldp	x29, x30, [sp]
  402a10:	add	sp, sp, #0x5e0
  402a14:	ret

0000000000402a18 <sd_device_unrefp>:
  402a18:	stp	x29, x30, [sp, #-32]!
  402a1c:	mov	x29, sp
  402a20:	str	x0, [sp, #24]
  402a24:	ldr	x0, [sp, #24]
  402a28:	ldr	x0, [x0]
  402a2c:	cmp	x0, #0x0
  402a30:	b.eq	402a40 <sd_device_unrefp+0x28>  // b.none
  402a34:	ldr	x0, [sp, #24]
  402a38:	ldr	x0, [x0]
  402a3c:	bl	401260 <sd_device_unref@plt>
  402a40:	nop
  402a44:	ldp	x29, x30, [sp], #32
  402a48:	ret

0000000000402a4c <strempty>:
  402a4c:	sub	sp, sp, #0x10
  402a50:	str	x0, [sp, #8]
  402a54:	ldr	x0, [sp, #8]
  402a58:	cmp	x0, #0x0
  402a5c:	b.ne	402a68 <strempty+0x1c>  // b.any
  402a60:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402a64:	add	x0, x0, #0xbf0
  402a68:	add	sp, sp, #0x10
  402a6c:	ret

0000000000402a70 <util_resolve_subsys_kernel>:
  402a70:	sub	sp, sp, #0x4a0
  402a74:	stp	x29, x30, [sp, #16]
  402a78:	add	x29, sp, #0x10
  402a7c:	stp	x19, x20, [sp, #32]
  402a80:	str	x0, [sp, #72]
  402a84:	str	x1, [sp, #64]
  402a88:	str	x2, [sp, #56]
  402a8c:	strb	w3, [sp, #55]
  402a90:	adrp	x0, 414000 <__FRAME_END__+0xff10>
  402a94:	ldr	x0, [x0, #4088]
  402a98:	ldr	x1, [x0]
  402a9c:	str	x1, [sp, #1176]
  402aa0:	mov	x1, #0x0                   	// #0
  402aa4:	str	xzr, [sp, #112]
  402aa8:	ldr	x0, [sp, #72]
  402aac:	ldrb	w0, [x0]
  402ab0:	cmp	w0, #0x5b
  402ab4:	b.eq	402ac0 <util_resolve_subsys_kernel+0x50>  // b.none
  402ab8:	mov	w19, #0xffffffea            	// #-22
  402abc:	b	402dc0 <util_resolve_subsys_kernel+0x350>
  402ac0:	add	x0, sp, #0x98
  402ac4:	ldr	x2, [sp, #72]
  402ac8:	mov	x1, #0x400                 	// #1024
  402acc:	bl	4010d0 <strscpy@plt>
  402ad0:	add	x0, sp, #0x98
  402ad4:	add	x0, x0, #0x1
  402ad8:	str	x0, [sp, #136]
  402adc:	mov	w1, #0x2f                  	// #47
  402ae0:	ldr	x0, [sp, #136]
  402ae4:	bl	401230 <strchr@plt>
  402ae8:	str	x0, [sp, #144]
  402aec:	ldr	x0, [sp, #144]
  402af0:	cmp	x0, #0x0
  402af4:	b.ne	402b00 <util_resolve_subsys_kernel+0x90>  // b.any
  402af8:	mov	w19, #0xffffffea            	// #-22
  402afc:	b	402dc0 <util_resolve_subsys_kernel+0x350>
  402b00:	ldr	x0, [sp, #144]
  402b04:	strb	wzr, [x0]
  402b08:	ldr	x0, [sp, #144]
  402b0c:	add	x0, x0, #0x1
  402b10:	str	x0, [sp, #144]
  402b14:	mov	w1, #0x5d                  	// #93
  402b18:	ldr	x0, [sp, #144]
  402b1c:	bl	401230 <strchr@plt>
  402b20:	str	x0, [sp, #128]
  402b24:	ldr	x0, [sp, #128]
  402b28:	cmp	x0, #0x0
  402b2c:	b.ne	402b38 <util_resolve_subsys_kernel+0xc8>  // b.any
  402b30:	mov	w19, #0xffffffea            	// #-22
  402b34:	b	402dc0 <util_resolve_subsys_kernel+0x350>
  402b38:	ldr	x0, [sp, #128]
  402b3c:	strb	wzr, [x0]
  402b40:	ldr	x0, [sp, #128]
  402b44:	add	x0, x0, #0x1
  402b48:	str	x0, [sp, #128]
  402b4c:	ldr	x0, [sp, #128]
  402b50:	ldrb	w0, [x0]
  402b54:	cmp	w0, #0x2f
  402b58:	b.ne	402b68 <util_resolve_subsys_kernel+0xf8>  // b.any
  402b5c:	ldr	x0, [sp, #128]
  402b60:	add	x0, x0, #0x1
  402b64:	str	x0, [sp, #128]
  402b68:	ldr	x0, [sp, #128]
  402b6c:	ldrb	w0, [x0]
  402b70:	cmp	w0, #0x0
  402b74:	b.ne	402b7c <util_resolve_subsys_kernel+0x10c>  // b.any
  402b78:	str	xzr, [sp, #128]
  402b7c:	ldrb	w0, [sp, #55]
  402b80:	cmp	w0, #0x0
  402b84:	b.eq	402b9c <util_resolve_subsys_kernel+0x12c>  // b.none
  402b88:	ldr	x0, [sp, #128]
  402b8c:	cmp	x0, #0x0
  402b90:	b.ne	402b9c <util_resolve_subsys_kernel+0x12c>  // b.any
  402b94:	mov	w19, #0xffffffea            	// #-22
  402b98:	b	402dc0 <util_resolve_subsys_kernel+0x350>
  402b9c:	add	x0, sp, #0x70
  402ba0:	ldr	x2, [sp, #144]
  402ba4:	ldr	x1, [sp, #136]
  402ba8:	bl	401120 <sd_device_new_from_subsystem_sysname@plt>
  402bac:	str	w0, [sp, #84]
  402bb0:	ldr	w0, [sp, #84]
  402bb4:	cmp	w0, #0x0
  402bb8:	b.ge	402bc4 <util_resolve_subsys_kernel+0x154>  // b.tcont
  402bbc:	ldr	w19, [sp, #84]
  402bc0:	b	402dc0 <util_resolve_subsys_kernel+0x350>
  402bc4:	ldrb	w0, [sp, #55]
  402bc8:	cmp	w0, #0x0
  402bcc:	b.eq	402cc4 <util_resolve_subsys_kernel+0x254>  // b.none
  402bd0:	ldr	x0, [sp, #112]
  402bd4:	add	x1, sp, #0x78
  402bd8:	mov	x2, x1
  402bdc:	ldr	x1, [sp, #128]
  402be0:	bl	401240 <sd_device_get_sysattr_value@plt>
  402be4:	str	w0, [sp, #84]
  402be8:	ldr	w0, [sp, #84]
  402bec:	cmp	w0, #0x0
  402bf0:	b.ge	402c08 <util_resolve_subsys_kernel+0x198>  // b.tcont
  402bf4:	ldr	w0, [sp, #84]
  402bf8:	cmn	w0, #0x2
  402bfc:	b.eq	402c08 <util_resolve_subsys_kernel+0x198>  // b.none
  402c00:	ldr	w19, [sp, #84]
  402c04:	b	402dc0 <util_resolve_subsys_kernel+0x350>
  402c08:	ldr	w0, [sp, #84]
  402c0c:	cmn	w0, #0x2
  402c10:	b.ne	402c20 <util_resolve_subsys_kernel+0x1b0>  // b.any
  402c14:	ldr	x0, [sp, #64]
  402c18:	strb	wzr, [x0]
  402c1c:	b	402c34 <util_resolve_subsys_kernel+0x1c4>
  402c20:	ldr	x0, [sp, #120]
  402c24:	mov	x2, x0
  402c28:	ldr	x1, [sp, #56]
  402c2c:	ldr	x0, [sp, #64]
  402c30:	bl	4010d0 <strscpy@plt>
  402c34:	mov	w0, #0x7                   	// #7
  402c38:	str	w0, [sp, #100]
  402c3c:	str	wzr, [sp, #104]
  402c40:	str	wzr, [sp, #108]
  402c44:	ldr	w0, [sp, #108]
  402c48:	bl	4012c0 <log_get_max_level_realm@plt>
  402c4c:	mov	w1, w0
  402c50:	ldr	w0, [sp, #100]
  402c54:	and	w0, w0, #0x7
  402c58:	cmp	w1, w0
  402c5c:	b.lt	402cb8 <util_resolve_subsys_kernel+0x248>  // b.tstop
  402c60:	ldr	w0, [sp, #108]
  402c64:	lsl	w1, w0, #10
  402c68:	ldr	w0, [sp, #100]
  402c6c:	orr	w8, w1, w0
  402c70:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402c74:	add	x1, x0, #0xbfb
  402c78:	ldr	x0, [sp, #64]
  402c7c:	str	x0, [sp, #8]
  402c80:	ldr	x0, [sp, #128]
  402c84:	str	x0, [sp]
  402c88:	ldr	x7, [sp, #144]
  402c8c:	ldr	x6, [sp, #136]
  402c90:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402c94:	add	x5, x0, #0xc18
  402c98:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402c9c:	add	x4, x0, #0xc98
  402ca0:	mov	w3, #0x42                  	// #66
  402ca4:	mov	x2, x1
  402ca8:	ldr	w1, [sp, #104]
  402cac:	mov	w0, w8
  402cb0:	bl	401200 <log_internal_realm@plt>
  402cb4:	b	402dbc <util_resolve_subsys_kernel+0x34c>
  402cb8:	ldr	w0, [sp, #104]
  402cbc:	cmp	w0, #0x0
  402cc0:	b	402dbc <util_resolve_subsys_kernel+0x34c>
  402cc4:	ldr	x0, [sp, #112]
  402cc8:	add	x1, sp, #0x78
  402ccc:	bl	401290 <sd_device_get_syspath@plt>
  402cd0:	str	w0, [sp, #84]
  402cd4:	ldr	w0, [sp, #84]
  402cd8:	cmp	w0, #0x0
  402cdc:	b.ge	402ce8 <util_resolve_subsys_kernel+0x278>  // b.tcont
  402ce0:	ldr	w19, [sp, #84]
  402ce4:	b	402dc0 <util_resolve_subsys_kernel+0x350>
  402ce8:	ldr	x1, [sp, #120]
  402cec:	ldr	x0, [sp, #128]
  402cf0:	cmp	x0, #0x0
  402cf4:	b.eq	402d04 <util_resolve_subsys_kernel+0x294>  // b.none
  402cf8:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402cfc:	add	x0, x0, #0xc38
  402d00:	b	402d08 <util_resolve_subsys_kernel+0x298>
  402d04:	mov	x0, #0x0                   	// #0
  402d08:	ldr	x2, [sp, #128]
  402d0c:	mov	x5, #0x0                   	// #0
  402d10:	mov	x4, x2
  402d14:	mov	x3, x0
  402d18:	mov	x2, x1
  402d1c:	ldr	x1, [sp, #56]
  402d20:	ldr	x0, [sp, #64]
  402d24:	bl	401110 <strscpyl@plt>
  402d28:	mov	w0, #0x7                   	// #7
  402d2c:	str	w0, [sp, #88]
  402d30:	str	wzr, [sp, #92]
  402d34:	str	wzr, [sp, #96]
  402d38:	ldr	w0, [sp, #96]
  402d3c:	bl	4012c0 <log_get_max_level_realm@plt>
  402d40:	mov	w1, w0
  402d44:	ldr	w0, [sp, #88]
  402d48:	and	w0, w0, #0x7
  402d4c:	cmp	w1, w0
  402d50:	b.lt	402db4 <util_resolve_subsys_kernel+0x344>  // b.tstop
  402d54:	ldr	w0, [sp, #96]
  402d58:	lsl	w1, w0, #10
  402d5c:	ldr	w0, [sp, #88]
  402d60:	orr	w19, w1, w0
  402d64:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402d68:	add	x20, x0, #0xbfb
  402d6c:	ldr	x0, [sp, #128]
  402d70:	bl	402a4c <strempty>
  402d74:	mov	x1, x0
  402d78:	ldr	x0, [sp, #64]
  402d7c:	str	x0, [sp, #8]
  402d80:	str	x1, [sp]
  402d84:	ldr	x7, [sp, #144]
  402d88:	ldr	x6, [sp, #136]
  402d8c:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402d90:	add	x5, x0, #0xc40
  402d94:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402d98:	add	x4, x0, #0xc98
  402d9c:	mov	w3, #0x49                  	// #73
  402da0:	mov	x2, x20
  402da4:	ldr	w1, [sp, #92]
  402da8:	mov	w0, w19
  402dac:	bl	401200 <log_internal_realm@plt>
  402db0:	b	402dbc <util_resolve_subsys_kernel+0x34c>
  402db4:	ldr	w0, [sp, #92]
  402db8:	cmp	w0, #0x0
  402dbc:	mov	w19, #0x0                   	// #0
  402dc0:	add	x0, sp, #0x70
  402dc4:	bl	402a18 <sd_device_unrefp>
  402dc8:	mov	w1, w19
  402dcc:	adrp	x0, 414000 <__FRAME_END__+0xff10>
  402dd0:	ldr	x0, [x0, #4088]
  402dd4:	ldr	x2, [sp, #1176]
  402dd8:	ldr	x0, [x0]
  402ddc:	eor	x0, x2, x0
  402de0:	cmp	x0, #0x0
  402de4:	b.eq	402dec <util_resolve_subsys_kernel+0x37c>  // b.none
  402de8:	bl	4011e0 <__stack_chk_fail@plt>
  402dec:	mov	w0, w1
  402df0:	ldp	x19, x20, [sp, #32]
  402df4:	ldp	x29, x30, [sp, #16]
  402df8:	add	sp, sp, #0x4a0
  402dfc:	ret

0000000000402e00 <util_path_encode>:
  402e00:	stp	x29, x30, [sp, #-64]!
  402e04:	mov	x29, sp
  402e08:	str	x0, [sp, #40]
  402e0c:	str	x1, [sp, #32]
  402e10:	str	x2, [sp, #24]
  402e14:	ldr	x0, [sp, #40]
  402e18:	cmp	x0, #0x0
  402e1c:	cset	w0, eq  // eq = none
  402e20:	and	w0, w0, #0xff
  402e24:	and	x0, x0, #0xff
  402e28:	cmp	x0, #0x0
  402e2c:	b.eq	402e58 <util_path_encode+0x58>  // b.none
  402e30:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402e34:	add	x1, x0, #0xbfb
  402e38:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402e3c:	add	x4, x0, #0xcb8
  402e40:	mov	w3, #0x51                  	// #81
  402e44:	mov	x2, x1
  402e48:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402e4c:	add	x1, x0, #0xc60
  402e50:	mov	w0, #0x0                   	// #0
  402e54:	bl	401160 <log_assert_failed_realm@plt>
  402e58:	ldr	x0, [sp, #32]
  402e5c:	cmp	x0, #0x0
  402e60:	cset	w0, eq  // eq = none
  402e64:	and	w0, w0, #0xff
  402e68:	and	x0, x0, #0xff
  402e6c:	cmp	x0, #0x0
  402e70:	b.eq	402e9c <util_path_encode+0x9c>  // b.none
  402e74:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402e78:	add	x1, x0, #0xbfb
  402e7c:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402e80:	add	x4, x0, #0xcb8
  402e84:	mov	w3, #0x52                  	// #82
  402e88:	mov	x2, x1
  402e8c:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402e90:	add	x1, x0, #0xc68
  402e94:	mov	w0, #0x0                   	// #0
  402e98:	bl	401160 <log_assert_failed_realm@plt>
  402e9c:	str	xzr, [sp, #48]
  402ea0:	str	xzr, [sp, #56]
  402ea4:	b	402fc4 <util_path_encode+0x1c4>
  402ea8:	ldr	x1, [sp, #40]
  402eac:	ldr	x0, [sp, #48]
  402eb0:	add	x0, x1, x0
  402eb4:	ldrb	w0, [x0]
  402eb8:	cmp	w0, #0x2f
  402ebc:	b.ne	402f0c <util_path_encode+0x10c>  // b.any
  402ec0:	ldr	x0, [sp, #56]
  402ec4:	add	x0, x0, #0x4
  402ec8:	ldr	x1, [sp, #24]
  402ecc:	cmp	x1, x0
  402ed0:	b.hi	402edc <util_path_encode+0xdc>  // b.pmore
  402ed4:	str	xzr, [sp, #56]
  402ed8:	b	402fdc <util_path_encode+0x1dc>
  402edc:	ldr	x1, [sp, #32]
  402ee0:	ldr	x0, [sp, #56]
  402ee4:	add	x3, x1, x0
  402ee8:	mov	x2, #0x4                   	// #4
  402eec:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402ef0:	add	x1, x0, #0xc70
  402ef4:	mov	x0, x3
  402ef8:	bl	401130 <memcpy@plt>
  402efc:	ldr	x0, [sp, #56]
  402f00:	add	x0, x0, #0x4
  402f04:	str	x0, [sp, #56]
  402f08:	b	402fb8 <util_path_encode+0x1b8>
  402f0c:	ldr	x1, [sp, #40]
  402f10:	ldr	x0, [sp, #48]
  402f14:	add	x0, x1, x0
  402f18:	ldrb	w0, [x0]
  402f1c:	cmp	w0, #0x5c
  402f20:	b.ne	402f70 <util_path_encode+0x170>  // b.any
  402f24:	ldr	x0, [sp, #56]
  402f28:	add	x0, x0, #0x4
  402f2c:	ldr	x1, [sp, #24]
  402f30:	cmp	x1, x0
  402f34:	b.hi	402f40 <util_path_encode+0x140>  // b.pmore
  402f38:	str	xzr, [sp, #56]
  402f3c:	b	402fdc <util_path_encode+0x1dc>
  402f40:	ldr	x1, [sp, #32]
  402f44:	ldr	x0, [sp, #56]
  402f48:	add	x3, x1, x0
  402f4c:	mov	x2, #0x4                   	// #4
  402f50:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  402f54:	add	x1, x0, #0xc78
  402f58:	mov	x0, x3
  402f5c:	bl	401130 <memcpy@plt>
  402f60:	ldr	x0, [sp, #56]
  402f64:	add	x0, x0, #0x4
  402f68:	str	x0, [sp, #56]
  402f6c:	b	402fb8 <util_path_encode+0x1b8>
  402f70:	ldr	x0, [sp, #56]
  402f74:	add	x0, x0, #0x1
  402f78:	ldr	x1, [sp, #24]
  402f7c:	cmp	x1, x0
  402f80:	b.hi	402f8c <util_path_encode+0x18c>  // b.pmore
  402f84:	str	xzr, [sp, #56]
  402f88:	b	402fdc <util_path_encode+0x1dc>
  402f8c:	ldr	x1, [sp, #40]
  402f90:	ldr	x0, [sp, #48]
  402f94:	add	x1, x1, x0
  402f98:	ldr	x2, [sp, #32]
  402f9c:	ldr	x0, [sp, #56]
  402fa0:	add	x0, x2, x0
  402fa4:	ldrb	w1, [x1]
  402fa8:	strb	w1, [x0]
  402fac:	ldr	x0, [sp, #56]
  402fb0:	add	x0, x0, #0x1
  402fb4:	str	x0, [sp, #56]
  402fb8:	ldr	x0, [sp, #48]
  402fbc:	add	x0, x0, #0x1
  402fc0:	str	x0, [sp, #48]
  402fc4:	ldr	x1, [sp, #40]
  402fc8:	ldr	x0, [sp, #48]
  402fcc:	add	x0, x1, x0
  402fd0:	ldrb	w0, [x0]
  402fd4:	cmp	w0, #0x0
  402fd8:	b.ne	402ea8 <util_path_encode+0xa8>  // b.any
  402fdc:	ldr	x1, [sp, #32]
  402fe0:	ldr	x0, [sp, #56]
  402fe4:	add	x0, x1, x0
  402fe8:	strb	wzr, [x0]
  402fec:	ldr	x0, [sp, #56]
  402ff0:	ldp	x29, x30, [sp], #64
  402ff4:	ret

0000000000402ff8 <util_replace_whitespace>:
  402ff8:	stp	x29, x30, [sp, #-80]!
  402ffc:	mov	x29, sp
  403000:	str	x0, [sp, #40]
  403004:	str	x1, [sp, #32]
  403008:	str	x2, [sp, #24]
  40300c:	strb	wzr, [sp, #63]
  403010:	ldr	x0, [sp, #40]
  403014:	cmp	x0, #0x0
  403018:	cset	w0, eq  // eq = none
  40301c:	and	w0, w0, #0xff
  403020:	and	x0, x0, #0xff
  403024:	cmp	x0, #0x0
  403028:	b.eq	403054 <util_replace_whitespace+0x5c>  // b.none
  40302c:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  403030:	add	x1, x0, #0xbfb
  403034:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  403038:	add	x4, x0, #0xcd0
  40303c:	mov	w3, #0x84                  	// #132
  403040:	mov	x2, x1
  403044:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  403048:	add	x1, x0, #0xc80
  40304c:	mov	w0, #0x0                   	// #0
  403050:	bl	401160 <log_assert_failed_realm@plt>
  403054:	ldr	x0, [sp, #32]
  403058:	cmp	x0, #0x0
  40305c:	cset	w0, eq  // eq = none
  403060:	and	w0, w0, #0xff
  403064:	and	x0, x0, #0xff
  403068:	cmp	x0, #0x0
  40306c:	b.eq	403098 <util_replace_whitespace+0xa0>  // b.none
  403070:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  403074:	add	x1, x0, #0xbfb
  403078:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  40307c:	add	x4, x0, #0xcd0
  403080:	mov	w3, #0x85                  	// #133
  403084:	mov	x2, x1
  403088:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  40308c:	add	x1, x0, #0xc88
  403090:	mov	w0, #0x0                   	// #0
  403094:	bl	401160 <log_assert_failed_realm@plt>
  403098:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  40309c:	add	x1, x0, #0xc90
  4030a0:	ldr	x0, [sp, #40]
  4030a4:	bl	4011b0 <strspn@plt>
  4030a8:	str	x0, [sp, #64]
  4030ac:	str	xzr, [sp, #72]
  4030b0:	b	403168 <util_replace_whitespace+0x170>
  4030b4:	bl	401140 <__ctype_b_loc@plt>
  4030b8:	ldr	x1, [x0]
  4030bc:	ldr	x2, [sp, #40]
  4030c0:	ldr	x0, [sp, #64]
  4030c4:	add	x0, x2, x0
  4030c8:	ldrb	w0, [x0]
  4030cc:	and	x0, x0, #0xff
  4030d0:	lsl	x0, x0, #1
  4030d4:	add	x0, x1, x0
  4030d8:	ldrh	w0, [x0]
  4030dc:	and	w0, w0, #0x2000
  4030e0:	cmp	w0, #0x0
  4030e4:	b.eq	4030f4 <util_replace_whitespace+0xfc>  // b.none
  4030e8:	mov	w0, #0x1                   	// #1
  4030ec:	strb	w0, [sp, #63]
  4030f0:	b	40315c <util_replace_whitespace+0x164>
  4030f4:	ldrb	w0, [sp, #63]
  4030f8:	cmp	w0, #0x0
  4030fc:	b.eq	403134 <util_replace_whitespace+0x13c>  // b.none
  403100:	ldr	x0, [sp, #72]
  403104:	add	x0, x0, #0x1
  403108:	ldr	x1, [sp, #24]
  40310c:	cmp	x1, x0
  403110:	b.ls	4031a4 <util_replace_whitespace+0x1ac>  // b.plast
  403114:	ldr	x0, [sp, #72]
  403118:	add	x1, x0, #0x1
  40311c:	str	x1, [sp, #72]
  403120:	ldr	x1, [sp, #32]
  403124:	add	x0, x1, x0
  403128:	mov	w1, #0x5f                  	// #95
  40312c:	strb	w1, [x0]
  403130:	strb	wzr, [sp, #63]
  403134:	ldr	x1, [sp, #40]
  403138:	ldr	x0, [sp, #64]
  40313c:	add	x1, x1, x0
  403140:	ldr	x0, [sp, #72]
  403144:	add	x2, x0, #0x1
  403148:	str	x2, [sp, #72]
  40314c:	ldr	x2, [sp, #32]
  403150:	add	x0, x2, x0
  403154:	ldrb	w1, [x1]
  403158:	strb	w1, [x0]
  40315c:	ldr	x0, [sp, #64]
  403160:	add	x0, x0, #0x1
  403164:	str	x0, [sp, #64]
  403168:	ldr	x1, [sp, #72]
  40316c:	ldr	x0, [sp, #24]
  403170:	cmp	x1, x0
  403174:	b.cs	4031a8 <util_replace_whitespace+0x1b0>  // b.hs, b.nlast
  403178:	ldr	x1, [sp, #64]
  40317c:	ldr	x0, [sp, #24]
  403180:	cmp	x1, x0
  403184:	b.cs	4031a8 <util_replace_whitespace+0x1b0>  // b.hs, b.nlast
  403188:	ldr	x1, [sp, #40]
  40318c:	ldr	x0, [sp, #64]
  403190:	add	x0, x1, x0
  403194:	ldrb	w0, [x0]
  403198:	cmp	w0, #0x0
  40319c:	b.ne	4030b4 <util_replace_whitespace+0xbc>  // b.any
  4031a0:	b	4031a8 <util_replace_whitespace+0x1b0>
  4031a4:	nop
  4031a8:	ldr	x1, [sp, #32]
  4031ac:	ldr	x0, [sp, #72]
  4031b0:	add	x0, x1, x0
  4031b4:	strb	wzr, [x0]
  4031b8:	ldr	x0, [sp, #72]
  4031bc:	ldp	x29, x30, [sp], #80
  4031c0:	ret

00000000004031c4 <util_replace_chars>:
  4031c4:	stp	x29, x30, [sp, #-64]!
  4031c8:	mov	x29, sp
  4031cc:	str	x0, [sp, #24]
  4031d0:	str	x1, [sp, #16]
  4031d4:	str	xzr, [sp, #48]
  4031d8:	str	xzr, [sp, #56]
  4031dc:	ldr	x0, [sp, #24]
  4031e0:	cmp	x0, #0x0
  4031e4:	cset	w0, eq  // eq = none
  4031e8:	and	w0, w0, #0xff
  4031ec:	and	x0, x0, #0xff
  4031f0:	cmp	x0, #0x0
  4031f4:	b.eq	40337c <util_replace_chars+0x1b8>  // b.none
  4031f8:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  4031fc:	add	x1, x0, #0xbfb
  403200:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  403204:	add	x4, x0, #0xce8
  403208:	mov	w3, #0xa1                  	// #161
  40320c:	mov	x2, x1
  403210:	adrp	x0, 403000 <util_replace_whitespace+0x8>
  403214:	add	x1, x0, #0xc80
  403218:	mov	w0, #0x0                   	// #0
  40321c:	bl	401160 <log_assert_failed_realm@plt>
  403220:	ldr	x1, [sp, #24]
  403224:	ldr	x0, [sp, #48]
  403228:	add	x0, x1, x0
  40322c:	ldrb	w0, [x0]
  403230:	ldr	x1, [sp, #16]
  403234:	bl	401220 <whitelisted_char_for_devnode@plt>
  403238:	cmp	w0, #0x0
  40323c:	b.eq	403250 <util_replace_chars+0x8c>  // b.none
  403240:	ldr	x0, [sp, #48]
  403244:	add	x0, x0, #0x1
  403248:	str	x0, [sp, #48]
  40324c:	b	40337c <util_replace_chars+0x1b8>
  403250:	ldr	x1, [sp, #24]
  403254:	ldr	x0, [sp, #48]
  403258:	add	x0, x1, x0
  40325c:	ldrb	w0, [x0]
  403260:	cmp	w0, #0x5c
  403264:	b.ne	403294 <util_replace_chars+0xd0>  // b.any
  403268:	ldr	x0, [sp, #48]
  40326c:	add	x0, x0, #0x1
  403270:	ldr	x1, [sp, #24]
  403274:	add	x0, x1, x0
  403278:	ldrb	w0, [x0]
  40327c:	cmp	w0, #0x78
  403280:	b.ne	403294 <util_replace_chars+0xd0>  // b.any
  403284:	ldr	x0, [sp, #48]
  403288:	add	x0, x0, #0x2
  40328c:	str	x0, [sp, #48]
  403290:	b	40337c <util_replace_chars+0x1b8>
  403294:	ldr	x1, [sp, #24]
  403298:	ldr	x0, [sp, #48]
  40329c:	add	x0, x1, x0
  4032a0:	mov	x1, #0xffffffffffffffff    	// #-1
  4032a4:	bl	401170 <utf8_encoded_valid_unichar@plt>
  4032a8:	str	w0, [sp, #44]
  4032ac:	ldr	w0, [sp, #44]
  4032b0:	cmp	w0, #0x1
  4032b4:	b.le	4032cc <util_replace_chars+0x108>
  4032b8:	ldrsw	x0, [sp, #44]
  4032bc:	ldr	x1, [sp, #48]
  4032c0:	add	x0, x1, x0
  4032c4:	str	x0, [sp, #48]
  4032c8:	b	40337c <util_replace_chars+0x1b8>
  4032cc:	bl	401140 <__ctype_b_loc@plt>
  4032d0:	ldr	x1, [x0]
  4032d4:	ldr	x2, [sp, #24]
  4032d8:	ldr	x0, [sp, #48]
  4032dc:	add	x0, x2, x0
  4032e0:	ldrb	w0, [x0]
  4032e4:	and	x0, x0, #0xff
  4032e8:	lsl	x0, x0, #1
  4032ec:	add	x0, x1, x0
  4032f0:	ldrh	w0, [x0]
  4032f4:	and	w0, w0, #0x2000
  4032f8:	cmp	w0, #0x0
  4032fc:	b.eq	403350 <util_replace_chars+0x18c>  // b.none
  403300:	ldr	x0, [sp, #16]
  403304:	cmp	x0, #0x0
  403308:	b.eq	403350 <util_replace_chars+0x18c>  // b.none
  40330c:	mov	w1, #0x20                  	// #32
  403310:	ldr	x0, [sp, #16]
  403314:	bl	401230 <strchr@plt>
  403318:	cmp	x0, #0x0
  40331c:	b.eq	403350 <util_replace_chars+0x18c>  // b.none
  403320:	ldr	x1, [sp, #24]
  403324:	ldr	x0, [sp, #48]
  403328:	add	x0, x1, x0
  40332c:	mov	w1, #0x20                  	// #32
  403330:	strb	w1, [x0]
  403334:	ldr	x0, [sp, #48]
  403338:	add	x0, x0, #0x1
  40333c:	str	x0, [sp, #48]
  403340:	ldr	x0, [sp, #56]
  403344:	add	x0, x0, #0x1
  403348:	str	x0, [sp, #56]
  40334c:	b	40337c <util_replace_chars+0x1b8>
  403350:	ldr	x1, [sp, #24]
  403354:	ldr	x0, [sp, #48]
  403358:	add	x0, x1, x0
  40335c:	mov	w1, #0x5f                  	// #95
  403360:	strb	w1, [x0]
  403364:	ldr	x0, [sp, #48]
  403368:	add	x0, x0, #0x1
  40336c:	str	x0, [sp, #48]
  403370:	ldr	x0, [sp, #56]
  403374:	add	x0, x0, #0x1
  403378:	str	x0, [sp, #56]
  40337c:	ldr	x1, [sp, #24]
  403380:	ldr	x0, [sp, #48]
  403384:	add	x0, x1, x0
  403388:	ldrb	w0, [x0]
  40338c:	cmp	w0, #0x0
  403390:	b.ne	403220 <util_replace_chars+0x5c>  // b.any
  403394:	ldr	x0, [sp, #56]
  403398:	ldp	x29, x30, [sp], #64
  40339c:	ret

00000000004033a0 <udev_util_encode_string>:
  4033a0:	stp	x29, x30, [sp, #-48]!
  4033a4:	mov	x29, sp
  4033a8:	str	x0, [sp, #40]
  4033ac:	str	x1, [sp, #32]
  4033b0:	str	x2, [sp, #24]
  4033b4:	ldr	x2, [sp, #24]
  4033b8:	ldr	x1, [sp, #32]
  4033bc:	ldr	x0, [sp, #40]
  4033c0:	bl	401190 <encode_devnode_name@plt>
  4033c4:	ldp	x29, x30, [sp], #48
  4033c8:	ret
  4033cc:	nop

00000000004033d0 <__libc_csu_init>:
  4033d0:	stp	x29, x30, [sp, #-64]!
  4033d4:	mov	x29, sp
  4033d8:	stp	x19, x20, [sp, #16]
  4033dc:	adrp	x20, 414000 <__FRAME_END__+0xff10>
  4033e0:	add	x20, x20, #0xc90
  4033e4:	stp	x21, x22, [sp, #32]
  4033e8:	adrp	x21, 414000 <__FRAME_END__+0xff10>
  4033ec:	add	x21, x21, #0xc88
  4033f0:	sub	x20, x20, x21
  4033f4:	mov	w22, w0
  4033f8:	stp	x23, x24, [sp, #48]
  4033fc:	mov	x23, x1
  403400:	mov	x24, x2
  403404:	bl	401090 <_init>
  403408:	cmp	xzr, x20, asr #3
  40340c:	b.eq	403438 <__libc_csu_init+0x68>  // b.none
  403410:	asr	x20, x20, #3
  403414:	mov	x19, #0x0                   	// #0
  403418:	ldr	x3, [x21, x19, lsl #3]
  40341c:	mov	x2, x24
  403420:	add	x19, x19, #0x1
  403424:	mov	x1, x23
  403428:	mov	w0, w22
  40342c:	blr	x3
  403430:	cmp	x20, x19
  403434:	b.ne	403418 <__libc_csu_init+0x48>  // b.any
  403438:	ldp	x19, x20, [sp, #16]
  40343c:	ldp	x21, x22, [sp, #32]
  403440:	ldp	x23, x24, [sp, #48]
  403444:	ldp	x29, x30, [sp], #64
  403448:	ret
  40344c:	nop

0000000000403450 <__libc_csu_fini>:
  403450:	ret

Disassembly of section .fini:

0000000000403454 <_fini>:
  403454:	stp	x29, x30, [sp, #-16]!
  403458:	mov	x29, sp
  40345c:	ldp	x29, x30, [sp], #16
  403460:	ret
