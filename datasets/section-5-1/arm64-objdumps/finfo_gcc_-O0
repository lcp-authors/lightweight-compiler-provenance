
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//finfo_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000eb0 <_init>:
 eb0:	stp	x29, x30, [sp, #-16]!
 eb4:	mov	x29, sp
 eb8:	bl	10b0 <call_weak_fn>
 ebc:	ldp	x29, x30, [sp], #16
 ec0:	ret

Disassembly of section .plt:

0000000000000ed0 <.plt>:
     ed0:	stp	x16, x30, [sp, #-16]!
     ed4:	adrp	x16, 12000 <__FRAME_END__+0xf524>
     ed8:	ldr	x17, [x16, #4088]
     edc:	add	x16, x16, #0xff8
     ee0:	br	x17
     ee4:	nop
     ee8:	nop
     eec:	nop

0000000000000ef0 <strlen@plt>:
     ef0:	adrp	x16, 13000 <strlen@GLIBC_2.17>
     ef4:	ldr	x17, [x16]
     ef8:	add	x16, x16, #0x0
     efc:	br	x17

0000000000000f00 <builtin_error@plt>:
     f00:	adrp	x16, 13000 <strlen@GLIBC_2.17>
     f04:	ldr	x17, [x16, #8]
     f08:	add	x16, x16, #0x8
     f0c:	br	x17

0000000000000f10 <readlink@plt>:
     f10:	adrp	x16, 13000 <strlen@GLIBC_2.17>
     f14:	ldr	x17, [x16, #16]
     f18:	add	x16, x16, #0x10
     f1c:	br	x17

0000000000000f20 <base_pathname@plt>:
     f20:	adrp	x16, 13000 <strlen@GLIBC_2.17>
     f24:	ldr	x17, [x16, #24]
     f28:	add	x16, x16, #0x18
     f2c:	br	x17

0000000000000f30 <__cxa_finalize@plt>:
     f30:	adrp	x16, 13000 <strlen@GLIBC_2.17>
     f34:	ldr	x17, [x16, #32]
     f38:	add	x16, x16, #0x20
     f3c:	br	x17

0000000000000f40 <ctime@plt>:
     f40:	adrp	x16, 13000 <strlen@GLIBC_2.17>
     f44:	ldr	x17, [x16, #40]
     f48:	add	x16, x16, #0x28
     f4c:	br	x17

0000000000000f50 <minor@plt>:
     f50:	adrp	x16, 13000 <strlen@GLIBC_2.17>
     f54:	ldr	x17, [x16, #48]
     f58:	add	x16, x16, #0x30
     f5c:	br	x17

0000000000000f60 <major@plt>:
     f60:	adrp	x16, 13000 <strlen@GLIBC_2.17>
     f64:	ldr	x17, [x16, #56]
     f68:	add	x16, x16, #0x38
     f6c:	br	x17

0000000000000f70 <strncmp@plt>:
     f70:	adrp	x16, 13000 <strlen@GLIBC_2.17>
     f74:	ldr	x17, [x16, #64]
     f78:	add	x16, x16, #0x40
     f7c:	br	x17

0000000000000f80 <strcat@plt>:
     f80:	adrp	x16, 13000 <strlen@GLIBC_2.17>
     f84:	ldr	x17, [x16, #72]
     f88:	add	x16, x16, #0x48
     f8c:	br	x17

0000000000000f90 <xmalloc@plt>:
     f90:	adrp	x16, 13000 <strlen@GLIBC_2.17>
     f94:	ldr	x17, [x16, #80]
     f98:	add	x16, x16, #0x50
     f9c:	br	x17

0000000000000fa0 <builtin_usage@plt>:
     fa0:	adrp	x16, 13000 <strlen@GLIBC_2.17>
     fa4:	ldr	x17, [x16, #88]
     fa8:	add	x16, x16, #0x58
     fac:	br	x17

0000000000000fb0 <strerror@plt>:
     fb0:	adrp	x16, 13000 <strlen@GLIBC_2.17>
     fb4:	ldr	x17, [x16, #96]
     fb8:	add	x16, x16, #0x60
     fbc:	br	x17

0000000000000fc0 <__gmon_start__@plt>:
     fc0:	adrp	x16, 13000 <strlen@GLIBC_2.17>
     fc4:	ldr	x17, [x16, #104]
     fc8:	add	x16, x16, #0x68
     fcc:	br	x17

0000000000000fd0 <puts@plt>:
     fd0:	adrp	x16, 13000 <strlen@GLIBC_2.17>
     fd4:	ldr	x17, [x16, #112]
     fd8:	add	x16, x16, #0x70
     fdc:	br	x17

0000000000000fe0 <sh_getopt@plt>:
     fe0:	adrp	x16, 13000 <strlen@GLIBC_2.17>
     fe4:	ldr	x17, [x16, #120]
     fe8:	add	x16, x16, #0x78
     fec:	br	x17

0000000000000ff0 <getpwuid@plt>:
     ff0:	adrp	x16, 13000 <strlen@GLIBC_2.17>
     ff4:	ldr	x17, [x16, #128]
     ff8:	add	x16, x16, #0x80
     ffc:	br	x17

0000000000001000 <free@plt>:
    1000:	adrp	x16, 13000 <strlen@GLIBC_2.17>
    1004:	ldr	x17, [x16, #136]
    1008:	add	x16, x16, #0x88
    100c:	br	x17

0000000000001010 <make_builtin_argv@plt>:
    1010:	adrp	x16, 13000 <strlen@GLIBC_2.17>
    1014:	ldr	x17, [x16, #144]
    1018:	add	x16, x16, #0x90
    101c:	br	x17

0000000000001020 <fflush@plt>:
    1020:	adrp	x16, 13000 <strlen@GLIBC_2.17>
    1024:	ldr	x17, [x16, #152]
    1028:	add	x16, x16, #0x98
    102c:	br	x17

0000000000001030 <strcpy@plt>:
    1030:	adrp	x16, 13000 <strlen@GLIBC_2.17>
    1034:	ldr	x17, [x16, #160]
    1038:	add	x16, x16, #0xa0
    103c:	br	x17

0000000000001040 <__lxstat@plt>:
    1040:	adrp	x16, 13000 <strlen@GLIBC_2.17>
    1044:	ldr	x17, [x16, #168]
    1048:	add	x16, x16, #0xa8
    104c:	br	x17

0000000000001050 <legal_number@plt>:
    1050:	adrp	x16, 13000 <strlen@GLIBC_2.17>
    1054:	ldr	x17, [x16, #176]
    1058:	add	x16, x16, #0xb0
    105c:	br	x17

0000000000001060 <__fxstat@plt>:
    1060:	adrp	x16, 13000 <strlen@GLIBC_2.17>
    1064:	ldr	x17, [x16, #184]
    1068:	add	x16, x16, #0xb8
    106c:	br	x17

0000000000001070 <printf@plt>:
    1070:	adrp	x16, 13000 <strlen@GLIBC_2.17>
    1074:	ldr	x17, [x16, #192]
    1078:	add	x16, x16, #0xc0
    107c:	br	x17

0000000000001080 <__errno_location@plt>:
    1080:	adrp	x16, 13000 <strlen@GLIBC_2.17>
    1084:	ldr	x17, [x16, #200]
    1088:	add	x16, x16, #0xc8
    108c:	br	x17

0000000000001090 <putchar@plt>:
    1090:	adrp	x16, 13000 <strlen@GLIBC_2.17>
    1094:	ldr	x17, [x16, #208]
    1098:	add	x16, x16, #0xd0
    109c:	br	x17

00000000000010a0 <getgrgid@plt>:
    10a0:	adrp	x16, 13000 <strlen@GLIBC_2.17>
    10a4:	ldr	x17, [x16, #216]
    10a8:	add	x16, x16, #0xd8
    10ac:	br	x17

Disassembly of section .text:

00000000000010b0 <call_weak_fn>:
    10b0:	adrp	x0, 12000 <__FRAME_END__+0xf524>
    10b4:	ldr	x0, [x0, #4048]
    10b8:	cbz	x0, 10c0 <call_weak_fn+0x10>
    10bc:	b	fc0 <__gmon_start__@plt>
    10c0:	ret

00000000000010c4 <deregister_tm_clones>:
    10c4:	stp	x29, x30, [sp, #-32]!
    10c8:	mov	x29, sp
    10cc:	adrp	x0, 13000 <strlen@GLIBC_2.17>
    10d0:	add	x0, x0, #0x1f8
    10d4:	str	x0, [sp, #24]
    10d8:	ldr	x0, [sp, #24]
    10dc:	str	x0, [sp, #24]
    10e0:	ldr	x1, [sp, #24]
    10e4:	adrp	x0, 13000 <strlen@GLIBC_2.17>
    10e8:	add	x0, x0, #0x1f8
    10ec:	cmp	x1, x0
    10f0:	b.eq	1128 <deregister_tm_clones+0x64>  // b.none
    10f4:	adrp	x0, 12000 <__FRAME_END__+0xf524>
    10f8:	ldr	x0, [x0, #4016]
    10fc:	str	x0, [sp, #16]
    1100:	ldr	x0, [sp, #16]
    1104:	str	x0, [sp, #16]
    1108:	ldr	x0, [sp, #16]
    110c:	cmp	x0, #0x0
    1110:	b.eq	112c <deregister_tm_clones+0x68>  // b.none
    1114:	ldr	x1, [sp, #16]
    1118:	adrp	x0, 13000 <strlen@GLIBC_2.17>
    111c:	add	x0, x0, #0x1f8
    1120:	blr	x1
    1124:	b	112c <deregister_tm_clones+0x68>
    1128:	nop
    112c:	ldp	x29, x30, [sp], #32
    1130:	ret

0000000000001134 <register_tm_clones>:
    1134:	stp	x29, x30, [sp, #-48]!
    1138:	mov	x29, sp
    113c:	adrp	x0, 13000 <strlen@GLIBC_2.17>
    1140:	add	x0, x0, #0x1f8
    1144:	str	x0, [sp, #40]
    1148:	ldr	x0, [sp, #40]
    114c:	str	x0, [sp, #40]
    1150:	ldr	x1, [sp, #40]
    1154:	adrp	x0, 13000 <strlen@GLIBC_2.17>
    1158:	add	x0, x0, #0x1f8
    115c:	sub	x0, x1, x0
    1160:	asr	x0, x0, #3
    1164:	lsr	x1, x0, #63
    1168:	add	x0, x1, x0
    116c:	asr	x0, x0, #1
    1170:	str	x0, [sp, #32]
    1174:	ldr	x0, [sp, #32]
    1178:	cmp	x0, #0x0
    117c:	b.eq	11b8 <register_tm_clones+0x84>  // b.none
    1180:	adrp	x0, 12000 <__FRAME_END__+0xf524>
    1184:	ldr	x0, [x0, #4064]
    1188:	str	x0, [sp, #24]
    118c:	ldr	x0, [sp, #24]
    1190:	str	x0, [sp, #24]
    1194:	ldr	x0, [sp, #24]
    1198:	cmp	x0, #0x0
    119c:	b.eq	11bc <register_tm_clones+0x88>  // b.none
    11a0:	ldr	x2, [sp, #24]
    11a4:	ldr	x1, [sp, #32]
    11a8:	adrp	x0, 13000 <strlen@GLIBC_2.17>
    11ac:	add	x0, x0, #0x1f8
    11b0:	blr	x2
    11b4:	b	11bc <register_tm_clones+0x88>
    11b8:	nop
    11bc:	ldp	x29, x30, [sp], #48
    11c0:	ret

00000000000011c4 <__do_global_dtors_aux>:
    11c4:	stp	x29, x30, [sp, #-16]!
    11c8:	mov	x29, sp
    11cc:	adrp	x0, 13000 <strlen@GLIBC_2.17>
    11d0:	add	x0, x0, #0x1f8
    11d4:	ldrb	w0, [x0]
    11d8:	and	x0, x0, #0xff
    11dc:	cmp	x0, #0x0
    11e0:	b.ne	121c <__do_global_dtors_aux+0x58>  // b.any
    11e4:	adrp	x0, 12000 <__FRAME_END__+0xf524>
    11e8:	ldr	x0, [x0, #4024]
    11ec:	cmp	x0, #0x0
    11f0:	b.eq	1204 <__do_global_dtors_aux+0x40>  // b.none
    11f4:	adrp	x0, 13000 <strlen@GLIBC_2.17>
    11f8:	add	x0, x0, #0xe0
    11fc:	ldr	x0, [x0]
    1200:	bl	f30 <__cxa_finalize@plt>
    1204:	bl	10c4 <deregister_tm_clones>
    1208:	adrp	x0, 13000 <strlen@GLIBC_2.17>
    120c:	add	x0, x0, #0x1f8
    1210:	mov	w1, #0x1                   	// #1
    1214:	strb	w1, [x0]
    1218:	b	1220 <__do_global_dtors_aux+0x5c>
    121c:	nop
    1220:	ldp	x29, x30, [sp], #16
    1224:	ret

0000000000001228 <frame_dummy>:
    1228:	stp	x29, x30, [sp, #-16]!
    122c:	mov	x29, sp
    1230:	bl	1134 <register_tm_clones>
    1234:	nop
    1238:	ldp	x29, x30, [sp], #16
    123c:	ret

0000000000001240 <octal>:
    1240:	sub	sp, sp, #0x20
    1244:	str	x0, [sp, #8]
    1248:	ldr	x0, [sp, #8]
    124c:	ldrb	w0, [x0]
    1250:	sub	w0, w0, #0x30
    1254:	str	w0, [sp, #28]
    1258:	b	1278 <octal+0x38>
    125c:	ldr	w0, [sp, #28]
    1260:	lsl	w1, w0, #3
    1264:	ldr	x0, [sp, #8]
    1268:	ldrb	w0, [x0]
    126c:	sub	w0, w0, #0x30
    1270:	add	w0, w1, w0
    1274:	str	w0, [sp, #28]
    1278:	ldr	x0, [sp, #8]
    127c:	add	x0, x0, #0x1
    1280:	str	x0, [sp, #8]
    1284:	ldr	x0, [sp, #8]
    1288:	ldrb	w0, [x0]
    128c:	cmp	w0, #0x2f
    1290:	b.ls	12a4 <octal+0x64>  // b.plast
    1294:	ldr	x0, [sp, #8]
    1298:	ldrb	w0, [x0]
    129c:	cmp	w0, #0x37
    12a0:	b.ls	125c <octal+0x1c>  // b.plast
    12a4:	ldr	w0, [sp, #28]
    12a8:	add	sp, sp, #0x20
    12ac:	ret

00000000000012b0 <finfo_main>:
    12b0:	stp	x29, x30, [sp, #-64]!
    12b4:	mov	x29, sp
    12b8:	str	x19, [sp, #16]
    12bc:	str	w0, [sp, #44]
    12c0:	str	x1, [sp, #32]
    12c4:	adrp	x0, 12000 <__FRAME_END__+0xf524>
    12c8:	ldr	x0, [x0, #4032]
    12cc:	str	wzr, [x0]
    12d0:	ldr	x0, [sp, #32]
    12d4:	ldr	x0, [x0]
    12d8:	bl	f20 <base_pathname@plt>
    12dc:	mov	x1, x0
    12e0:	adrp	x0, 13000 <strlen@GLIBC_2.17>
    12e4:	add	x0, x0, #0x200
    12e8:	str	x1, [x0]
    12ec:	ldr	w0, [sp, #44]
    12f0:	cmp	w0, #0x1
    12f4:	b.ne	1304 <finfo_main+0x54>  // b.any
    12f8:	bl	fa0 <builtin_usage@plt>
    12fc:	mov	w0, #0x1                   	// #1
    1300:	b	1590 <finfo_main+0x2e0>
    1304:	str	wzr, [sp, #60]
    1308:	b	14b8 <finfo_main+0x208>
    130c:	ldr	w0, [sp, #56]
    1310:	sub	w0, w0, #0x41
    1314:	cmp	w0, #0x34
    1318:	b.hi	14ac <finfo_main+0x1fc>  // b.pmore
    131c:	adrp	x1, 2000 <printsome+0x3c0>
    1320:	add	x1, x1, #0x158
    1324:	ldr	w0, [x1, w0, uxtw #2]
    1328:	adr	x1, 1334 <finfo_main+0x84>
    132c:	add	x0, x1, w0, sxtw #2
    1330:	br	x0
    1334:	ldr	w0, [sp, #60]
    1338:	orr	w0, w0, #0x400
    133c:	str	w0, [sp, #60]
    1340:	b	14b8 <finfo_main+0x208>
    1344:	ldr	w1, [sp, #60]
    1348:	mov	w0, #0x400                 	// #1024
    134c:	movk	w0, #0x100, lsl #16
    1350:	orr	w0, w1, w0
    1354:	str	w0, [sp, #60]
    1358:	b	14b8 <finfo_main+0x208>
    135c:	ldr	w0, [sp, #60]
    1360:	orr	w0, w0, #0x1000
    1364:	str	w0, [sp, #60]
    1368:	b	14b8 <finfo_main+0x208>
    136c:	ldr	w1, [sp, #60]
    1370:	mov	w0, #0x1000                	// #4096
    1374:	movk	w0, #0x100, lsl #16
    1378:	orr	w0, w1, w0
    137c:	str	w0, [sp, #60]
    1380:	b	14b8 <finfo_main+0x208>
    1384:	ldr	w0, [sp, #60]
    1388:	orr	w0, w0, #0x4
    138c:	str	w0, [sp, #60]
    1390:	b	14b8 <finfo_main+0x208>
    1394:	ldr	w0, [sp, #60]
    1398:	orr	w0, w0, #0x8
    139c:	str	w0, [sp, #60]
    13a0:	b	14b8 <finfo_main+0x208>
    13a4:	ldr	w0, [sp, #60]
    13a8:	orr	w0, w0, #0x40
    13ac:	str	w0, [sp, #60]
    13b0:	b	14b8 <finfo_main+0x208>
    13b4:	ldr	w0, [sp, #60]
    13b8:	orr	w0, w0, #0x2
    13bc:	str	w0, [sp, #60]
    13c0:	b	14b8 <finfo_main+0x208>
    13c4:	ldr	w1, [sp, #60]
    13c8:	mov	w0, #0x2                   	// #2
    13cc:	movk	w0, #0x100, lsl #16
    13d0:	orr	w0, w1, w0
    13d4:	str	w0, [sp, #60]
    13d8:	b	14b8 <finfo_main+0x208>
    13dc:	ldr	w0, [sp, #60]
    13e0:	orr	w0, w0, #0x20
    13e4:	str	w0, [sp, #60]
    13e8:	b	14b8 <finfo_main+0x208>
    13ec:	ldr	w0, [sp, #60]
    13f0:	orr	w0, w0, #0x800
    13f4:	str	w0, [sp, #60]
    13f8:	b	14b8 <finfo_main+0x208>
    13fc:	ldr	w1, [sp, #60]
    1400:	mov	w0, #0x800                 	// #2048
    1404:	movk	w0, #0x100, lsl #16
    1408:	orr	w0, w1, w0
    140c:	str	w0, [sp, #60]
    1410:	b	14b8 <finfo_main+0x208>
    1414:	ldr	w0, [sp, #60]
    1418:	orr	w0, w0, #0x80
    141c:	str	w0, [sp, #60]
    1420:	b	14b8 <finfo_main+0x208>
    1424:	ldr	w0, [sp, #60]
    1428:	orr	w0, w0, #0x20000
    142c:	str	w0, [sp, #60]
    1430:	b	14b8 <finfo_main+0x208>
    1434:	ldr	w0, [sp, #60]
    1438:	orr	w0, w0, #0x10
    143c:	str	w0, [sp, #60]
    1440:	b	14b8 <finfo_main+0x208>
    1444:	ldr	w0, [sp, #60]
    1448:	orr	w0, w0, #0x10000
    144c:	str	w0, [sp, #60]
    1450:	adrp	x0, 12000 <__FRAME_END__+0xf524>
    1454:	ldr	x0, [x0, #4056]
    1458:	ldr	x0, [x0]
    145c:	bl	1240 <octal>
    1460:	mov	w1, w0
    1464:	adrp	x0, 13000 <strlen@GLIBC_2.17>
    1468:	add	x0, x0, #0x208
    146c:	str	w1, [x0]
    1470:	b	14b8 <finfo_main+0x208>
    1474:	ldr	w0, [sp, #60]
    1478:	orr	w0, w0, #0x200
    147c:	str	w0, [sp, #60]
    1480:	b	14b8 <finfo_main+0x208>
    1484:	ldr	w0, [sp, #60]
    1488:	orr	w0, w0, #0x1
    148c:	str	w0, [sp, #60]
    1490:	b	14b8 <finfo_main+0x208>
    1494:	ldr	w1, [sp, #60]
    1498:	mov	w0, #0x1                   	// #1
    149c:	movk	w0, #0x100, lsl #16
    14a0:	orr	w0, w1, w0
    14a4:	str	w0, [sp, #60]
    14a8:	b	14b8 <finfo_main+0x208>
    14ac:	bl	fa0 <builtin_usage@plt>
    14b0:	mov	w0, #0x1                   	// #1
    14b4:	b	1590 <finfo_main+0x2e0>
    14b8:	adrp	x0, 2000 <printsome+0x3c0>
    14bc:	add	x2, x0, #0x140
    14c0:	ldr	x1, [sp, #32]
    14c4:	ldr	w0, [sp, #44]
    14c8:	bl	fe0 <sh_getopt@plt>
    14cc:	str	w0, [sp, #56]
    14d0:	ldr	w0, [sp, #56]
    14d4:	cmn	w0, #0x1
    14d8:	b.ne	130c <finfo_main+0x5c>  // b.any
    14dc:	adrp	x0, 12000 <__FRAME_END__+0xf524>
    14e0:	ldr	x0, [x0, #4032]
    14e4:	ldr	w0, [x0]
    14e8:	ldr	w1, [sp, #44]
    14ec:	sub	w0, w1, w0
    14f0:	str	w0, [sp, #44]
    14f4:	adrp	x0, 12000 <__FRAME_END__+0xf524>
    14f8:	ldr	x0, [x0, #4032]
    14fc:	ldr	w0, [x0]
    1500:	sxtw	x0, w0
    1504:	lsl	x0, x0, #3
    1508:	ldr	x1, [sp, #32]
    150c:	add	x0, x1, x0
    1510:	str	x0, [sp, #32]
    1514:	ldr	w0, [sp, #44]
    1518:	cmp	w0, #0x0
    151c:	b.ne	152c <finfo_main+0x27c>  // b.any
    1520:	bl	fa0 <builtin_usage@plt>
    1524:	mov	w0, #0x1                   	// #1
    1528:	b	1590 <finfo_main+0x2e0>
    152c:	mov	w19, #0x0                   	// #0
    1530:	b	1580 <finfo_main+0x2d0>
    1534:	ldr	w0, [sp, #60]
    1538:	cmp	w0, #0x0
    153c:	b.eq	1560 <finfo_main+0x2b0>  // b.none
    1540:	sxtw	x0, w19
    1544:	lsl	x0, x0, #3
    1548:	ldr	x1, [sp, #32]
    154c:	add	x0, x1, x0
    1550:	ldr	x0, [x0]
    1554:	ldr	w1, [sp, #60]
    1558:	bl	1c40 <printsome>
    155c:	b	1578 <finfo_main+0x2c8>
    1560:	sxtw	x0, w19
    1564:	lsl	x0, x0, #3
    1568:	ldr	x1, [sp, #32]
    156c:	add	x0, x1, x0
    1570:	ldr	x0, [x0]
    1574:	bl	1688 <printfinfo>
    1578:	str	w0, [sp, #56]
    157c:	add	w19, w19, #0x1
    1580:	ldr	w0, [sp, #44]
    1584:	cmp	w19, w0
    1588:	b.lt	1534 <finfo_main+0x284>  // b.tstop
    158c:	ldr	w0, [sp, #56]
    1590:	ldr	x19, [sp, #16]
    1594:	ldp	x29, x30, [sp], #64
    1598:	ret

000000000000159c <getstat>:
    159c:	stp	x29, x30, [sp, #-48]!
    15a0:	mov	x29, sp
    15a4:	str	x0, [sp, #24]
    15a8:	mov	x2, #0x8                   	// #8
    15ac:	adrp	x0, 2000 <printsome+0x3c0>
    15b0:	add	x1, x0, #0x230
    15b4:	ldr	x0, [sp, #24]
    15b8:	bl	f70 <strncmp@plt>
    15bc:	cmp	w0, #0x0
    15c0:	b.ne	1630 <getstat+0x94>  // b.any
    15c4:	ldr	x0, [sp, #24]
    15c8:	add	x0, x0, #0x8
    15cc:	add	x1, sp, #0x20
    15d0:	bl	1050 <legal_number@plt>
    15d4:	cmp	w0, #0x0
    15d8:	b.eq	15f0 <getstat+0x54>  // b.none
    15dc:	ldr	x0, [sp, #32]
    15e0:	sxtw	x1, w0
    15e4:	ldr	x0, [sp, #32]
    15e8:	cmp	x1, x0
    15ec:	b.eq	1610 <getstat+0x74>  // b.none
    15f0:	ldr	x0, [sp, #24]
    15f4:	add	x0, x0, #0x8
    15f8:	mov	x1, x0
    15fc:	adrp	x0, 2000 <printsome+0x3c0>
    1600:	add	x0, x0, #0x240
    1604:	bl	f00 <builtin_error@plt>
    1608:	mov	x0, #0x0                   	// #0
    160c:	b	1680 <getstat+0xe4>
    1610:	ldr	x0, [sp, #32]
    1614:	str	w0, [sp, #40]
    1618:	adrp	x0, 13000 <strlen@GLIBC_2.17>
    161c:	add	x1, x0, #0x210
    1620:	ldr	w0, [sp, #40]
    1624:	bl	2110 <__fstat>
    1628:	str	w0, [sp, #44]
    162c:	b	1644 <getstat+0xa8>
    1630:	adrp	x0, 13000 <strlen@GLIBC_2.17>
    1634:	add	x1, x0, #0x210
    1638:	ldr	x0, [sp, #24]
    163c:	bl	2120 <__lstat>
    1640:	str	w0, [sp, #44]
    1644:	ldr	w0, [sp, #44]
    1648:	cmp	w0, #0x0
    164c:	b.ge	1678 <getstat+0xdc>  // b.tcont
    1650:	bl	1080 <__errno_location@plt>
    1654:	ldr	w0, [x0]
    1658:	bl	fb0 <strerror@plt>
    165c:	mov	x2, x0
    1660:	ldr	x1, [sp, #24]
    1664:	adrp	x0, 2000 <printsome+0x3c0>
    1668:	add	x0, x0, #0x250
    166c:	bl	f00 <builtin_error@plt>
    1670:	mov	x0, #0x0                   	// #0
    1674:	b	1680 <getstat+0xe4>
    1678:	adrp	x0, 13000 <strlen@GLIBC_2.17>
    167c:	add	x0, x0, #0x210
    1680:	ldp	x29, x30, [sp], #48
    1684:	ret

0000000000001688 <printfinfo>:
    1688:	stp	x29, x30, [sp, #-48]!
    168c:	mov	x29, sp
    1690:	str	x0, [sp, #24]
    1694:	ldr	x0, [sp, #24]
    1698:	bl	159c <getstat>
    169c:	str	x0, [sp, #40]
    16a0:	ldr	x0, [sp, #40]
    16a4:	cmp	x0, #0x0
    16a8:	b.eq	16b8 <printfinfo+0x30>  // b.none
    16ac:	ldr	x0, [sp, #40]
    16b0:	bl	1a58 <printst>
    16b4:	b	16bc <printfinfo+0x34>
    16b8:	mov	w0, #0x1                   	// #1
    16bc:	ldp	x29, x30, [sp], #48
    16c0:	ret

00000000000016c4 <getperm>:
    16c4:	sub	sp, sp, #0x10
    16c8:	str	w0, [sp, #12]
    16cc:	ldr	w1, [sp, #12]
    16d0:	mov	w0, #0xdff                 	// #3583
    16d4:	and	w0, w1, w0
    16d8:	add	sp, sp, #0x10
    16dc:	ret

00000000000016e0 <perms>:
    16e0:	stp	x29, x30, [sp, #-64]!
    16e4:	mov	x29, sp
    16e8:	str	w0, [sp, #28]
    16ec:	str	wzr, [sp, #60]
    16f0:	ldr	w0, [sp, #28]
    16f4:	and	w0, w0, #0x100
    16f8:	cmp	w0, #0x0
    16fc:	b.eq	171c <perms+0x3c>  // b.none
    1700:	ldr	w0, [sp, #60]
    1704:	add	w1, w0, #0x1
    1708:	str	w1, [sp, #60]
    170c:	sxtw	x0, w0
    1710:	add	x1, sp, #0x38
    1714:	mov	w2, #0x72                  	// #114
    1718:	strb	w2, [x1, x0]
    171c:	ldr	w0, [sp, #28]
    1720:	and	w0, w0, #0x80
    1724:	cmp	w0, #0x0
    1728:	b.eq	1748 <perms+0x68>  // b.none
    172c:	ldr	w0, [sp, #60]
    1730:	add	w1, w0, #0x1
    1734:	str	w1, [sp, #60]
    1738:	sxtw	x0, w0
    173c:	add	x1, sp, #0x38
    1740:	mov	w2, #0x77                  	// #119
    1744:	strb	w2, [x1, x0]
    1748:	ldr	w0, [sp, #28]
    174c:	and	w0, w0, #0x40
    1750:	cmp	w0, #0x0
    1754:	b.eq	1774 <perms+0x94>  // b.none
    1758:	ldr	w0, [sp, #60]
    175c:	add	w1, w0, #0x1
    1760:	str	w1, [sp, #60]
    1764:	sxtw	x0, w0
    1768:	add	x1, sp, #0x38
    176c:	mov	w2, #0x78                  	// #120
    1770:	strb	w2, [x1, x0]
    1774:	ldrsw	x0, [sp, #60]
    1778:	add	x1, sp, #0x38
    177c:	strb	wzr, [x1, x0]
    1780:	str	wzr, [sp, #60]
    1784:	ldr	w0, [sp, #28]
    1788:	and	w0, w0, #0x20
    178c:	cmp	w0, #0x0
    1790:	b.eq	17b0 <perms+0xd0>  // b.none
    1794:	ldr	w0, [sp, #60]
    1798:	add	w1, w0, #0x1
    179c:	str	w1, [sp, #60]
    17a0:	sxtw	x0, w0
    17a4:	add	x1, sp, #0x30
    17a8:	mov	w2, #0x72                  	// #114
    17ac:	strb	w2, [x1, x0]
    17b0:	ldr	w0, [sp, #28]
    17b4:	and	w0, w0, #0x10
    17b8:	cmp	w0, #0x0
    17bc:	b.eq	17dc <perms+0xfc>  // b.none
    17c0:	ldr	w0, [sp, #60]
    17c4:	add	w1, w0, #0x1
    17c8:	str	w1, [sp, #60]
    17cc:	sxtw	x0, w0
    17d0:	add	x1, sp, #0x30
    17d4:	mov	w2, #0x77                  	// #119
    17d8:	strb	w2, [x1, x0]
    17dc:	ldr	w0, [sp, #28]
    17e0:	and	w0, w0, #0x8
    17e4:	cmp	w0, #0x0
    17e8:	b.eq	1808 <perms+0x128>  // b.none
    17ec:	ldr	w0, [sp, #60]
    17f0:	add	w1, w0, #0x1
    17f4:	str	w1, [sp, #60]
    17f8:	sxtw	x0, w0
    17fc:	add	x1, sp, #0x30
    1800:	mov	w2, #0x78                  	// #120
    1804:	strb	w2, [x1, x0]
    1808:	ldrsw	x0, [sp, #60]
    180c:	add	x1, sp, #0x30
    1810:	strb	wzr, [x1, x0]
    1814:	str	wzr, [sp, #60]
    1818:	ldr	w0, [sp, #28]
    181c:	and	w0, w0, #0x4
    1820:	cmp	w0, #0x0
    1824:	b.eq	1844 <perms+0x164>  // b.none
    1828:	ldr	w0, [sp, #60]
    182c:	add	w1, w0, #0x1
    1830:	str	w1, [sp, #60]
    1834:	sxtw	x0, w0
    1838:	add	x1, sp, #0x28
    183c:	mov	w2, #0x72                  	// #114
    1840:	strb	w2, [x1, x0]
    1844:	ldr	w0, [sp, #28]
    1848:	and	w0, w0, #0x2
    184c:	cmp	w0, #0x0
    1850:	b.eq	1870 <perms+0x190>  // b.none
    1854:	ldr	w0, [sp, #60]
    1858:	add	w1, w0, #0x1
    185c:	str	w1, [sp, #60]
    1860:	sxtw	x0, w0
    1864:	add	x1, sp, #0x28
    1868:	mov	w2, #0x77                  	// #119
    186c:	strb	w2, [x1, x0]
    1870:	ldr	w0, [sp, #28]
    1874:	and	w0, w0, #0x1
    1878:	cmp	w0, #0x0
    187c:	b.eq	189c <perms+0x1bc>  // b.none
    1880:	ldr	w0, [sp, #60]
    1884:	add	w1, w0, #0x1
    1888:	str	w1, [sp, #60]
    188c:	sxtw	x0, w0
    1890:	add	x1, sp, #0x28
    1894:	mov	w2, #0x78                  	// #120
    1898:	strb	w2, [x1, x0]
    189c:	ldrsw	x0, [sp, #60]
    18a0:	add	x1, sp, #0x28
    18a4:	strb	wzr, [x1, x0]
    18a8:	ldr	w0, [sp, #28]
    18ac:	and	w0, w0, #0x800
    18b0:	cmp	w0, #0x0
    18b4:	b.eq	18d8 <perms+0x1f8>  // b.none
    18b8:	ldr	w0, [sp, #28]
    18bc:	and	w0, w0, #0x40
    18c0:	cmp	w0, #0x0
    18c4:	b.eq	18d0 <perms+0x1f0>  // b.none
    18c8:	mov	w0, #0x73                  	// #115
    18cc:	b	18d4 <perms+0x1f4>
    18d0:	mov	w0, #0x53                  	// #83
    18d4:	strb	w0, [sp, #58]
    18d8:	ldr	w0, [sp, #28]
    18dc:	and	w0, w0, #0x400
    18e0:	cmp	w0, #0x0
    18e4:	b.eq	1908 <perms+0x228>  // b.none
    18e8:	ldr	w0, [sp, #28]
    18ec:	and	w0, w0, #0x8
    18f0:	cmp	w0, #0x0
    18f4:	b.eq	1900 <perms+0x220>  // b.none
    18f8:	mov	w0, #0x73                  	// #115
    18fc:	b	1904 <perms+0x224>
    1900:	mov	w0, #0x53                  	// #83
    1904:	strb	w0, [sp, #50]
    1908:	ldr	w0, [sp, #28]
    190c:	and	w0, w0, #0x200
    1910:	cmp	w0, #0x0
    1914:	b.eq	1938 <perms+0x258>  // b.none
    1918:	ldr	w0, [sp, #28]
    191c:	and	w0, w0, #0x1
    1920:	cmp	w0, #0x0
    1924:	b.eq	1930 <perms+0x250>  // b.none
    1928:	mov	w0, #0x74                  	// #116
    192c:	b	1934 <perms+0x254>
    1930:	mov	w0, #0x54                  	// #84
    1934:	strb	w0, [sp, #42]
    1938:	add	x2, sp, #0x28
    193c:	add	x1, sp, #0x30
    1940:	add	x0, sp, #0x38
    1944:	mov	x3, x2
    1948:	mov	x2, x1
    194c:	mov	x1, x0
    1950:	adrp	x0, 2000 <printsome+0x3c0>
    1954:	add	x0, x0, #0x268
    1958:	bl	1070 <printf@plt>
    195c:	nop
    1960:	ldp	x29, x30, [sp], #64
    1964:	ret

0000000000001968 <printmode>:
    1968:	stp	x29, x30, [sp, #-32]!
    196c:	mov	x29, sp
    1970:	str	w0, [sp, #28]
    1974:	ldr	w0, [sp, #28]
    1978:	and	w0, w0, #0xf000
    197c:	cmp	w0, #0x6, lsl #12
    1980:	b.ne	1990 <printmode+0x28>  // b.any
    1984:	adrp	x0, 2000 <printsome+0x3c0>
    1988:	add	x0, x0, #0x278
    198c:	bl	1070 <printf@plt>
    1990:	ldr	w0, [sp, #28]
    1994:	and	w0, w0, #0xf000
    1998:	cmp	w0, #0x2, lsl #12
    199c:	b.ne	19ac <printmode+0x44>  // b.any
    19a0:	adrp	x0, 2000 <printsome+0x3c0>
    19a4:	add	x0, x0, #0x288
    19a8:	bl	1070 <printf@plt>
    19ac:	ldr	w0, [sp, #28]
    19b0:	and	w0, w0, #0xf000
    19b4:	cmp	w0, #0x4, lsl #12
    19b8:	b.ne	19c8 <printmode+0x60>  // b.any
    19bc:	adrp	x0, 2000 <printsome+0x3c0>
    19c0:	add	x0, x0, #0x298
    19c4:	bl	1070 <printf@plt>
    19c8:	ldr	w0, [sp, #28]
    19cc:	and	w0, w0, #0xf000
    19d0:	cmp	w0, #0x8, lsl #12
    19d4:	b.ne	19e4 <printmode+0x7c>  // b.any
    19d8:	adrp	x0, 2000 <printsome+0x3c0>
    19dc:	add	x0, x0, #0x2a8
    19e0:	bl	1070 <printf@plt>
    19e4:	ldr	w0, [sp, #28]
    19e8:	and	w0, w0, #0xf000
    19ec:	cmp	w0, #0x1, lsl #12
    19f0:	b.ne	1a00 <printmode+0x98>  // b.any
    19f4:	adrp	x0, 2000 <printsome+0x3c0>
    19f8:	add	x0, x0, #0x2b8
    19fc:	bl	1070 <printf@plt>
    1a00:	ldr	w0, [sp, #28]
    1a04:	and	w0, w0, #0xf000
    1a08:	cmp	w0, #0xa, lsl #12
    1a0c:	b.ne	1a1c <printmode+0xb4>  // b.any
    1a10:	adrp	x0, 2000 <printsome+0x3c0>
    1a14:	add	x0, x0, #0x2c8
    1a18:	bl	1070 <printf@plt>
    1a1c:	ldr	w0, [sp, #28]
    1a20:	and	w0, w0, #0xf000
    1a24:	cmp	w0, #0xc, lsl #12
    1a28:	b.ne	1a38 <printmode+0xd0>  // b.any
    1a2c:	adrp	x0, 2000 <printsome+0x3c0>
    1a30:	add	x0, x0, #0x2d8
    1a34:	bl	1070 <printf@plt>
    1a38:	ldr	w0, [sp, #28]
    1a3c:	bl	16c4 <getperm>
    1a40:	bl	16e0 <perms>
    1a44:	mov	w0, #0xa                   	// #10
    1a48:	bl	1090 <putchar@plt>
    1a4c:	nop
    1a50:	ldp	x29, x30, [sp], #32
    1a54:	ret

0000000000001a58 <printst>:
    1a58:	stp	x29, x30, [sp, #-80]!
    1a5c:	mov	x29, sp
    1a60:	str	x0, [sp, #24]
    1a64:	ldr	x0, [sp, #24]
    1a68:	ldr	x0, [x0, #32]
    1a6c:	bl	f60 <major@plt>
    1a70:	str	w0, [sp, #76]
    1a74:	ldr	x0, [sp, #24]
    1a78:	ldr	x0, [x0, #32]
    1a7c:	bl	f50 <minor@plt>
    1a80:	str	w0, [sp, #72]
    1a84:	ldr	x0, [sp, #24]
    1a88:	ldr	x0, [x0, #32]
    1a8c:	and	w0, w0, #0xff
    1a90:	str	w0, [sp, #68]
    1a94:	ldr	w3, [sp, #72]
    1a98:	ldr	w2, [sp, #76]
    1a9c:	ldr	w1, [sp, #68]
    1aa0:	adrp	x0, 2000 <printsome+0x3c0>
    1aa4:	add	x0, x0, #0x2e8
    1aa8:	bl	1070 <printf@plt>
    1aac:	ldr	x0, [sp, #24]
    1ab0:	ldr	x0, [x0, #8]
    1ab4:	mov	w1, w0
    1ab8:	adrp	x0, 2000 <printsome+0x3c0>
    1abc:	add	x0, x0, #0x310
    1ac0:	bl	1070 <printf@plt>
    1ac4:	ldr	x0, [sp, #24]
    1ac8:	ldr	w0, [x0, #16]
    1acc:	mov	w1, w0
    1ad0:	adrp	x0, 2000 <printsome+0x3c0>
    1ad4:	add	x0, x0, #0x320
    1ad8:	bl	1070 <printf@plt>
    1adc:	ldr	x0, [sp, #24]
    1ae0:	ldr	w0, [x0, #16]
    1ae4:	bl	1968 <printmode>
    1ae8:	ldr	x0, [sp, #24]
    1aec:	ldr	w0, [x0, #20]
    1af0:	mov	w1, w0
    1af4:	adrp	x0, 2000 <printsome+0x3c0>
    1af8:	add	x0, x0, #0x330
    1afc:	bl	1070 <printf@plt>
    1b00:	ldr	x0, [sp, #24]
    1b04:	ldr	w0, [x0, #24]
    1b08:	bl	ff0 <getpwuid@plt>
    1b0c:	str	x0, [sp, #56]
    1b10:	ldr	x0, [sp, #56]
    1b14:	cmp	x0, #0x0
    1b18:	b.eq	1b28 <printst+0xd0>  // b.none
    1b1c:	ldr	x0, [sp, #56]
    1b20:	ldr	x0, [x0]
    1b24:	b	1b30 <printst+0xd8>
    1b28:	adrp	x0, 2000 <printsome+0x3c0>
    1b2c:	add	x0, x0, #0x340
    1b30:	str	x0, [sp, #48]
    1b34:	ldr	x0, [sp, #24]
    1b38:	ldr	w0, [x0, #24]
    1b3c:	ldr	x2, [sp, #48]
    1b40:	mov	w1, w0
    1b44:	adrp	x0, 2000 <printsome+0x3c0>
    1b48:	add	x0, x0, #0x348
    1b4c:	bl	1070 <printf@plt>
    1b50:	ldr	x0, [sp, #24]
    1b54:	ldr	w0, [x0, #28]
    1b58:	bl	10a0 <getgrgid@plt>
    1b5c:	str	x0, [sp, #40]
    1b60:	ldr	x0, [sp, #40]
    1b64:	cmp	x0, #0x0
    1b68:	b.eq	1b78 <printst+0x120>  // b.none
    1b6c:	ldr	x0, [sp, #40]
    1b70:	ldr	x0, [x0]
    1b74:	b	1b80 <printst+0x128>
    1b78:	adrp	x0, 2000 <printsome+0x3c0>
    1b7c:	add	x0, x0, #0x340
    1b80:	str	x0, [sp, #48]
    1b84:	ldr	x0, [sp, #24]
    1b88:	ldr	w0, [x0, #28]
    1b8c:	ldr	x2, [sp, #48]
    1b90:	mov	w1, w0
    1b94:	adrp	x0, 2000 <printsome+0x3c0>
    1b98:	add	x0, x0, #0x360
    1b9c:	bl	1070 <printf@plt>
    1ba0:	ldr	x0, [sp, #24]
    1ba4:	ldr	x0, [x0, #32]
    1ba8:	mov	w1, w0
    1bac:	adrp	x0, 2000 <printsome+0x3c0>
    1bb0:	add	x0, x0, #0x378
    1bb4:	bl	1070 <printf@plt>
    1bb8:	ldr	x0, [sp, #24]
    1bbc:	ldr	x0, [x0, #48]
    1bc0:	mov	x1, x0
    1bc4:	adrp	x0, 2000 <printsome+0x3c0>
    1bc8:	add	x0, x0, #0x390
    1bcc:	bl	1070 <printf@plt>
    1bd0:	ldr	x0, [sp, #24]
    1bd4:	add	x0, x0, #0x48
    1bd8:	bl	f40 <ctime@plt>
    1bdc:	mov	x1, x0
    1be0:	adrp	x0, 2000 <printsome+0x3c0>
    1be4:	add	x0, x0, #0x3a0
    1be8:	bl	1070 <printf@plt>
    1bec:	ldr	x0, [sp, #24]
    1bf0:	add	x0, x0, #0x58
    1bf4:	bl	f40 <ctime@plt>
    1bf8:	mov	x1, x0
    1bfc:	adrp	x0, 2000 <printsome+0x3c0>
    1c00:	add	x0, x0, #0x3c0
    1c04:	bl	1070 <printf@plt>
    1c08:	ldr	x0, [sp, #24]
    1c0c:	add	x0, x0, #0x68
    1c10:	bl	f40 <ctime@plt>
    1c14:	mov	x1, x0
    1c18:	adrp	x0, 2000 <printsome+0x3c0>
    1c1c:	add	x0, x0, #0x3e0
    1c20:	bl	1070 <printf@plt>
    1c24:	adrp	x0, 12000 <__FRAME_END__+0xf524>
    1c28:	ldr	x0, [x0, #4040]
    1c2c:	ldr	x0, [x0]
    1c30:	bl	1020 <fflush@plt>
    1c34:	mov	w0, #0x0                   	// #0
    1c38:	ldp	x29, x30, [sp], #80
    1c3c:	ret

0000000000001c40 <printsome>:
    1c40:	stp	x29, x30, [sp, #-80]!
    1c44:	mov	x29, sp
    1c48:	str	x0, [sp, #24]
    1c4c:	str	w1, [sp, #20]
    1c50:	ldr	x0, [sp, #24]
    1c54:	bl	159c <getstat>
    1c58:	str	x0, [sp, #72]
    1c5c:	ldr	x0, [sp, #72]
    1c60:	cmp	x0, #0x0
    1c64:	b.ne	1c70 <printsome+0x30>  // b.any
    1c68:	mov	w0, #0x1                   	// #1
    1c6c:	b	20c4 <printsome+0x484>
    1c70:	ldr	w0, [sp, #20]
    1c74:	and	w0, w0, #0x400
    1c78:	cmp	w0, #0x0
    1c7c:	b.eq	1ccc <printsome+0x8c>  // b.none
    1c80:	ldr	w0, [sp, #20]
    1c84:	and	w0, w0, #0x1000000
    1c88:	cmp	w0, #0x0
    1c8c:	b.eq	1cb0 <printsome+0x70>  // b.none
    1c90:	ldr	x0, [sp, #72]
    1c94:	add	x0, x0, #0x48
    1c98:	bl	f40 <ctime@plt>
    1c9c:	mov	x1, x0
    1ca0:	adrp	x0, 2000 <printsome+0x3c0>
    1ca4:	add	x0, x0, #0x408
    1ca8:	bl	1070 <printf@plt>
    1cac:	b	20c0 <printsome+0x480>
    1cb0:	ldr	x0, [sp, #72]
    1cb4:	ldr	x0, [x0, #72]
    1cb8:	mov	x1, x0
    1cbc:	adrp	x0, 2000 <printsome+0x3c0>
    1cc0:	add	x0, x0, #0x410
    1cc4:	bl	1070 <printf@plt>
    1cc8:	b	20c0 <printsome+0x480>
    1ccc:	ldr	w0, [sp, #20]
    1cd0:	and	w0, w0, #0x800
    1cd4:	cmp	w0, #0x0
    1cd8:	b.eq	1d28 <printsome+0xe8>  // b.none
    1cdc:	ldr	w0, [sp, #20]
    1ce0:	and	w0, w0, #0x1000000
    1ce4:	cmp	w0, #0x0
    1ce8:	b.eq	1d0c <printsome+0xcc>  // b.none
    1cec:	ldr	x0, [sp, #72]
    1cf0:	add	x0, x0, #0x58
    1cf4:	bl	f40 <ctime@plt>
    1cf8:	mov	x1, x0
    1cfc:	adrp	x0, 2000 <printsome+0x3c0>
    1d00:	add	x0, x0, #0x408
    1d04:	bl	1070 <printf@plt>
    1d08:	b	20c0 <printsome+0x480>
    1d0c:	ldr	x0, [sp, #72]
    1d10:	ldr	x0, [x0, #88]
    1d14:	mov	x1, x0
    1d18:	adrp	x0, 2000 <printsome+0x3c0>
    1d1c:	add	x0, x0, #0x410
    1d20:	bl	1070 <printf@plt>
    1d24:	b	20c0 <printsome+0x480>
    1d28:	ldr	w0, [sp, #20]
    1d2c:	and	w0, w0, #0x1000
    1d30:	cmp	w0, #0x0
    1d34:	b.eq	1d84 <printsome+0x144>  // b.none
    1d38:	ldr	w0, [sp, #20]
    1d3c:	and	w0, w0, #0x1000000
    1d40:	cmp	w0, #0x0
    1d44:	b.eq	1d68 <printsome+0x128>  // b.none
    1d48:	ldr	x0, [sp, #72]
    1d4c:	add	x0, x0, #0x68
    1d50:	bl	f40 <ctime@plt>
    1d54:	mov	x1, x0
    1d58:	adrp	x0, 2000 <printsome+0x3c0>
    1d5c:	add	x0, x0, #0x408
    1d60:	bl	1070 <printf@plt>
    1d64:	b	20c0 <printsome+0x480>
    1d68:	ldr	x0, [sp, #72]
    1d6c:	ldr	x0, [x0, #104]
    1d70:	mov	x1, x0
    1d74:	adrp	x0, 2000 <printsome+0x3c0>
    1d78:	add	x0, x0, #0x410
    1d7c:	bl	1070 <printf@plt>
    1d80:	b	20c0 <printsome+0x480>
    1d84:	ldr	w0, [sp, #20]
    1d88:	and	w0, w0, #0x4
    1d8c:	cmp	w0, #0x0
    1d90:	b.eq	1db0 <printsome+0x170>  // b.none
    1d94:	ldr	x0, [sp, #72]
    1d98:	ldr	x0, [x0]
    1d9c:	mov	x1, x0
    1da0:	adrp	x0, 2000 <printsome+0x3c0>
    1da4:	add	x0, x0, #0x418
    1da8:	bl	1070 <printf@plt>
    1dac:	b	20c0 <printsome+0x480>
    1db0:	ldr	w0, [sp, #20]
    1db4:	and	w0, w0, #0x8
    1db8:	cmp	w0, #0x0
    1dbc:	b.eq	1ddc <printsome+0x19c>  // b.none
    1dc0:	ldr	x0, [sp, #72]
    1dc4:	ldr	x0, [x0, #8]
    1dc8:	mov	x1, x0
    1dcc:	adrp	x0, 2000 <printsome+0x3c0>
    1dd0:	add	x0, x0, #0x420
    1dd4:	bl	1070 <printf@plt>
    1dd8:	b	20c0 <printsome+0x480>
    1ddc:	ldr	w0, [sp, #20]
    1de0:	and	w0, w0, #0x40
    1de4:	cmp	w0, #0x0
    1de8:	b.eq	1e10 <printsome+0x1d0>  // b.none
    1dec:	ldr	x0, [sp, #72]
    1df0:	ldr	x1, [x0]
    1df4:	ldr	x0, [sp, #72]
    1df8:	ldr	x0, [x0, #8]
    1dfc:	mov	x2, x0
    1e00:	adrp	x0, 2000 <printsome+0x3c0>
    1e04:	add	x0, x0, #0x428
    1e08:	bl	1070 <printf@plt>
    1e0c:	b	20c0 <printsome+0x480>
    1e10:	ldr	w0, [sp, #20]
    1e14:	and	w0, w0, #0x80
    1e18:	cmp	w0, #0x0
    1e1c:	b.eq	1e3c <printsome+0x1fc>  // b.none
    1e20:	ldr	x0, [sp, #72]
    1e24:	ldr	w0, [x0, #20]
    1e28:	mov	w1, w0
    1e2c:	adrp	x0, 2000 <printsome+0x3c0>
    1e30:	add	x0, x0, #0x418
    1e34:	bl	1070 <printf@plt>
    1e38:	b	20c0 <printsome+0x480>
    1e3c:	ldr	w0, [sp, #20]
    1e40:	and	w0, w0, #0x20
    1e44:	cmp	w0, #0x0
    1e48:	b.eq	1f14 <printsome+0x2d4>  // b.none
    1e4c:	mov	x0, #0x1000                	// #4096
    1e50:	bl	f90 <xmalloc@plt>
    1e54:	str	x0, [sp, #48]
    1e58:	mov	x2, #0x1000                	// #4096
    1e5c:	ldr	x1, [sp, #48]
    1e60:	ldr	x0, [sp, #24]
    1e64:	bl	f10 <readlink@plt>
    1e68:	str	w0, [sp, #44]
    1e6c:	ldr	w0, [sp, #44]
    1e70:	cmp	w0, #0x0
    1e74:	b.lt	1e98 <printsome+0x258>  // b.tstop
    1e78:	ldr	w0, [sp, #44]
    1e7c:	cmp	w0, #0xfff
    1e80:	b.gt	1e98 <printsome+0x258>
    1e84:	ldrsw	x0, [sp, #44]
    1e88:	ldr	x1, [sp, #48]
    1e8c:	add	x0, x1, x0
    1e90:	strb	wzr, [x0]
    1e94:	b	1f00 <printsome+0x2c0>
    1e98:	bl	1080 <__errno_location@plt>
    1e9c:	ldr	w0, [x0]
    1ea0:	str	w0, [sp, #44]
    1ea4:	adrp	x0, 13000 <strlen@GLIBC_2.17>
    1ea8:	add	x0, x0, #0x200
    1eac:	ldr	x0, [x0]
    1eb0:	mov	x1, x0
    1eb4:	ldr	x0, [sp, #48]
    1eb8:	bl	1030 <strcpy@plt>
    1ebc:	ldr	x0, [sp, #48]
    1ec0:	bl	ef0 <strlen@plt>
    1ec4:	mov	x1, x0
    1ec8:	ldr	x0, [sp, #48]
    1ecc:	add	x2, x0, x1
    1ed0:	adrp	x0, 2000 <printsome+0x3c0>
    1ed4:	add	x1, x0, #0x430
    1ed8:	mov	x0, x2
    1edc:	ldrh	w2, [x1]
    1ee0:	strh	w2, [x0]
    1ee4:	ldrb	w1, [x1, #2]
    1ee8:	strb	w1, [x0, #2]
    1eec:	ldr	w0, [sp, #44]
    1ef0:	bl	fb0 <strerror@plt>
    1ef4:	mov	x1, x0
    1ef8:	ldr	x0, [sp, #48]
    1efc:	bl	f80 <strcat@plt>
    1f00:	ldr	x0, [sp, #48]
    1f04:	bl	fd0 <puts@plt>
    1f08:	ldr	x0, [sp, #48]
    1f0c:	bl	1000 <free@plt>
    1f10:	b	20c0 <printsome+0x480>
    1f14:	ldr	w0, [sp, #20]
    1f18:	and	w0, w0, #0x10
    1f1c:	cmp	w0, #0x0
    1f20:	b.eq	1f3c <printsome+0x2fc>  // b.none
    1f24:	ldr	x0, [sp, #72]
    1f28:	ldr	w0, [x0, #16]
    1f2c:	bl	16e0 <perms>
    1f30:	mov	w0, #0xa                   	// #10
    1f34:	bl	1090 <putchar@plt>
    1f38:	b	20c0 <printsome+0x480>
    1f3c:	ldr	w0, [sp, #20]
    1f40:	and	w0, w0, #0x20000
    1f44:	cmp	w0, #0x0
    1f48:	b.eq	1f6c <printsome+0x32c>  // b.none
    1f4c:	ldr	x0, [sp, #72]
    1f50:	ldr	w0, [x0, #16]
    1f54:	bl	16c4 <getperm>
    1f58:	mov	w1, w0
    1f5c:	adrp	x0, 2000 <printsome+0x3c0>
    1f60:	add	x0, x0, #0x438
    1f64:	bl	1070 <printf@plt>
    1f68:	b	20c0 <printsome+0x480>
    1f6c:	ldr	w0, [sp, #20]
    1f70:	and	w0, w0, #0x10000
    1f74:	cmp	w0, #0x0
    1f78:	b.eq	1fb0 <printsome+0x370>  // b.none
    1f7c:	ldr	x0, [sp, #72]
    1f80:	ldr	w0, [x0, #16]
    1f84:	bl	16c4 <getperm>
    1f88:	mov	w1, w0
    1f8c:	adrp	x0, 13000 <strlen@GLIBC_2.17>
    1f90:	add	x0, x0, #0x208
    1f94:	ldr	w0, [x0]
    1f98:	and	w0, w1, w0
    1f9c:	mov	w1, w0
    1fa0:	adrp	x0, 2000 <printsome+0x3c0>
    1fa4:	add	x0, x0, #0x438
    1fa8:	bl	1070 <printf@plt>
    1fac:	b	20c0 <printsome+0x480>
    1fb0:	ldr	w0, [sp, #20]
    1fb4:	and	w0, w0, #0x1
    1fb8:	cmp	w0, #0x0
    1fbc:	b.eq	2024 <printsome+0x3e4>  // b.none
    1fc0:	ldr	x0, [sp, #72]
    1fc4:	ldr	w0, [x0, #24]
    1fc8:	bl	ff0 <getpwuid@plt>
    1fcc:	str	x0, [sp, #56]
    1fd0:	ldr	w0, [sp, #20]
    1fd4:	and	w0, w0, #0x1000000
    1fd8:	cmp	w0, #0x0
    1fdc:	b.eq	2008 <printsome+0x3c8>  // b.none
    1fe0:	ldr	x0, [sp, #56]
    1fe4:	cmp	x0, #0x0
    1fe8:	b.eq	1ff8 <printsome+0x3b8>  // b.none
    1fec:	ldr	x0, [sp, #56]
    1ff0:	ldr	x0, [x0]
    1ff4:	b	2000 <printsome+0x3c0>
    1ff8:	adrp	x0, 2000 <printsome+0x3c0>
    1ffc:	add	x0, x0, #0x340
    2000:	bl	fd0 <puts@plt>
    2004:	b	20c0 <printsome+0x480>
    2008:	ldr	x0, [sp, #72]
    200c:	ldr	w0, [x0, #24]
    2010:	mov	w1, w0
    2014:	adrp	x0, 2000 <printsome+0x3c0>
    2018:	add	x0, x0, #0x418
    201c:	bl	1070 <printf@plt>
    2020:	b	20c0 <printsome+0x480>
    2024:	ldr	w0, [sp, #20]
    2028:	and	w0, w0, #0x2
    202c:	cmp	w0, #0x0
    2030:	b.eq	2098 <printsome+0x458>  // b.none
    2034:	ldr	x0, [sp, #72]
    2038:	ldr	w0, [x0, #28]
    203c:	bl	10a0 <getgrgid@plt>
    2040:	str	x0, [sp, #64]
    2044:	ldr	w0, [sp, #20]
    2048:	and	w0, w0, #0x1000000
    204c:	cmp	w0, #0x0
    2050:	b.eq	207c <printsome+0x43c>  // b.none
    2054:	ldr	x0, [sp, #64]
    2058:	cmp	x0, #0x0
    205c:	b.eq	206c <printsome+0x42c>  // b.none
    2060:	ldr	x0, [sp, #64]
    2064:	ldr	x0, [x0]
    2068:	b	2074 <printsome+0x434>
    206c:	adrp	x0, 2000 <printsome+0x3c0>
    2070:	add	x0, x0, #0x340
    2074:	bl	fd0 <puts@plt>
    2078:	b	20c0 <printsome+0x480>
    207c:	ldr	x0, [sp, #72]
    2080:	ldr	w0, [x0, #28]
    2084:	mov	w1, w0
    2088:	adrp	x0, 2000 <printsome+0x3c0>
    208c:	add	x0, x0, #0x418
    2090:	bl	1070 <printf@plt>
    2094:	b	20c0 <printsome+0x480>
    2098:	ldr	w0, [sp, #20]
    209c:	and	w0, w0, #0x200
    20a0:	cmp	w0, #0x0
    20a4:	b.eq	20c0 <printsome+0x480>  // b.none
    20a8:	ldr	x0, [sp, #72]
    20ac:	ldr	x0, [x0, #48]
    20b0:	mov	x1, x0
    20b4:	adrp	x0, 2000 <printsome+0x3c0>
    20b8:	add	x0, x0, #0x410
    20bc:	bl	1070 <printf@plt>
    20c0:	mov	w0, #0x0                   	// #0
    20c4:	ldp	x29, x30, [sp], #80
    20c8:	ret

00000000000020cc <finfo_builtin>:
    20cc:	stp	x29, x30, [sp, #-48]!
    20d0:	mov	x29, sp
    20d4:	str	x0, [sp, #24]
    20d8:	add	x0, sp, #0x20
    20dc:	mov	x1, x0
    20e0:	ldr	x0, [sp, #24]
    20e4:	bl	1010 <make_builtin_argv@plt>
    20e8:	str	x0, [sp, #40]
    20ec:	ldr	w0, [sp, #32]
    20f0:	ldr	x1, [sp, #40]
    20f4:	bl	12b0 <finfo_main>
    20f8:	str	w0, [sp, #36]
    20fc:	ldr	x0, [sp, #40]
    2100:	bl	1000 <free@plt>
    2104:	ldr	w0, [sp, #36]
    2108:	ldp	x29, x30, [sp], #48
    210c:	ret

0000000000002110 <__fstat>:
    2110:	mov	x2, x1
    2114:	mov	w1, w0
    2118:	mov	w0, #0x0                   	// #0
    211c:	b	1060 <__fxstat@plt>

0000000000002120 <__lstat>:
    2120:	mov	x2, x1
    2124:	mov	x1, x0
    2128:	mov	w0, #0x0                   	// #0
    212c:	b	1040 <__lxstat@plt>

Disassembly of section .fini:

0000000000002130 <_fini>:
    2130:	stp	x29, x30, [sp, #-16]!
    2134:	mov	x29, sp
    2138:	ldp	x29, x30, [sp], #16
    213c:	ret
