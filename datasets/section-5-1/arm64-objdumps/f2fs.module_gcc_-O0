
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//f2fs.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_fs_register>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #24]
       c:	ldr	x1, [sp, #24]
      10:	adrp	x0, 0 <grub_fs_register>
      14:	add	x0, x0, #0x0
      18:	ldr	x0, [x0]
      1c:	bl	0 <grub_list_push>
      20:	nop
      24:	ldp	x29, x30, [sp], #32
      28:	ret
      2c:	nop
	...

0000000000000038 <grub_fs_unregister>:
      38:	stp	x29, x30, [sp, #-32]!
      3c:	mov	x29, sp
      40:	str	x0, [sp, #24]
      44:	ldr	x0, [sp, #24]
      48:	bl	0 <grub_list_remove>
      4c:	nop
      50:	ldp	x29, x30, [sp], #32
      54:	ret

0000000000000058 <grub_memcpy>:
      58:	stp	x29, x30, [sp, #-48]!
      5c:	mov	x29, sp
      60:	str	x0, [sp, #40]
      64:	str	x1, [sp, #32]
      68:	str	x2, [sp, #24]
      6c:	ldr	x2, [sp, #24]
      70:	ldr	x1, [sp, #32]
      74:	ldr	x0, [sp, #40]
      78:	bl	0 <grub_memmove>
      7c:	ldp	x29, x30, [sp], #48
      80:	ret

0000000000000084 <grub_utf16_to_utf8>:
      84:	sub	sp, sp, #0x30
      88:	str	x0, [sp, #24]
      8c:	str	x1, [sp, #16]
      90:	str	x2, [sp, #8]
      94:	str	wzr, [sp, #44]
      98:	b	3e8 <grub_utf16_to_utf8+0x364>
      9c:	ldr	x0, [sp, #16]
      a0:	add	x1, x0, #0x2
      a4:	str	x1, [sp, #16]
      a8:	ldrh	w0, [x0]
      ac:	str	w0, [sp, #40]
      b0:	ldr	w0, [sp, #44]
      b4:	cmp	w0, #0x0
      b8:	b.eq	1d0 <grub_utf16_to_utf8+0x14c>  // b.none
      bc:	ldr	w1, [sp, #40]
      c0:	mov	w0, #0xdbff                	// #56319
      c4:	cmp	w1, w0
      c8:	b.ls	1a8 <grub_utf16_to_utf8+0x124>  // b.plast
      cc:	ldr	w1, [sp, #40]
      d0:	mov	w0, #0xdfff                	// #57343
      d4:	cmp	w1, w0
      d8:	b.hi	1a8 <grub_utf16_to_utf8+0x124>  // b.pmore
      dc:	ldr	w1, [sp, #44]
      e0:	mov	w0, #0xffff2800            	// #-55296
      e4:	add	w0, w1, w0
      e8:	lsl	w1, w0, #10
      ec:	ldr	w0, [sp, #40]
      f0:	add	w1, w1, w0
      f4:	mov	w0, #0x2400                	// #9216
      f8:	add	w0, w1, w0
      fc:	str	w0, [sp, #40]
     100:	ldr	w0, [sp, #40]
     104:	lsr	w0, w0, #18
     108:	and	w1, w0, #0xff
     10c:	ldr	x0, [sp, #24]
     110:	add	x2, x0, #0x1
     114:	str	x2, [sp, #24]
     118:	orr	w1, w1, #0xfffffff0
     11c:	and	w1, w1, #0xff
     120:	strb	w1, [x0]
     124:	ldr	w0, [sp, #40]
     128:	lsr	w0, w0, #12
     12c:	and	w0, w0, #0xff
     130:	and	w0, w0, #0x3f
     134:	and	w1, w0, #0xff
     138:	ldr	x0, [sp, #24]
     13c:	add	x2, x0, #0x1
     140:	str	x2, [sp, #24]
     144:	orr	w1, w1, #0xffffff80
     148:	and	w1, w1, #0xff
     14c:	strb	w1, [x0]
     150:	ldr	w0, [sp, #40]
     154:	lsr	w0, w0, #6
     158:	and	w0, w0, #0xff
     15c:	and	w0, w0, #0x3f
     160:	and	w1, w0, #0xff
     164:	ldr	x0, [sp, #24]
     168:	add	x2, x0, #0x1
     16c:	str	x2, [sp, #24]
     170:	orr	w1, w1, #0xffffff80
     174:	and	w1, w1, #0xff
     178:	strb	w1, [x0]
     17c:	ldr	w0, [sp, #40]
     180:	and	w0, w0, #0xff
     184:	and	w0, w0, #0x3f
     188:	and	w1, w0, #0xff
     18c:	ldr	x0, [sp, #24]
     190:	add	x2, x0, #0x1
     194:	str	x2, [sp, #24]
     198:	orr	w1, w1, #0xffffff80
     19c:	and	w1, w1, #0xff
     1a0:	strb	w1, [x0]
     1a4:	b	1c8 <grub_utf16_to_utf8+0x144>
     1a8:	ldr	x0, [sp, #24]
     1ac:	add	x1, x0, #0x1
     1b0:	str	x1, [sp, #24]
     1b4:	mov	w1, #0x3f                  	// #63
     1b8:	strb	w1, [x0]
     1bc:	ldr	x0, [sp, #16]
     1c0:	sub	x0, x0, #0x2
     1c4:	str	x0, [sp, #16]
     1c8:	str	wzr, [sp, #44]
     1cc:	b	3e8 <grub_utf16_to_utf8+0x364>
     1d0:	ldr	w0, [sp, #40]
     1d4:	cmp	w0, #0x7f
     1d8:	b.hi	1f8 <grub_utf16_to_utf8+0x174>  // b.pmore
     1dc:	ldr	x0, [sp, #24]
     1e0:	add	x1, x0, #0x1
     1e4:	str	x1, [sp, #24]
     1e8:	ldr	w1, [sp, #40]
     1ec:	and	w1, w1, #0xff
     1f0:	strb	w1, [x0]
     1f4:	b	3e8 <grub_utf16_to_utf8+0x364>
     1f8:	ldr	w0, [sp, #40]
     1fc:	cmp	w0, #0x7ff
     200:	b.hi	254 <grub_utf16_to_utf8+0x1d0>  // b.pmore
     204:	ldr	w0, [sp, #40]
     208:	lsr	w0, w0, #6
     20c:	and	w1, w0, #0xff
     210:	ldr	x0, [sp, #24]
     214:	add	x2, x0, #0x1
     218:	str	x2, [sp, #24]
     21c:	orr	w1, w1, #0xffffffc0
     220:	and	w1, w1, #0xff
     224:	strb	w1, [x0]
     228:	ldr	w0, [sp, #40]
     22c:	and	w0, w0, #0xff
     230:	and	w0, w0, #0x3f
     234:	and	w1, w0, #0xff
     238:	ldr	x0, [sp, #24]
     23c:	add	x2, x0, #0x1
     240:	str	x2, [sp, #24]
     244:	orr	w1, w1, #0xffffff80
     248:	and	w1, w1, #0xff
     24c:	strb	w1, [x0]
     250:	b	3e8 <grub_utf16_to_utf8+0x364>
     254:	ldr	w1, [sp, #40]
     258:	mov	w0, #0xd7ff                	// #55295
     25c:	cmp	w1, w0
     260:	b.ls	280 <grub_utf16_to_utf8+0x1fc>  // b.plast
     264:	ldr	w1, [sp, #40]
     268:	mov	w0, #0xdbff                	// #56319
     26c:	cmp	w1, w0
     270:	b.hi	280 <grub_utf16_to_utf8+0x1fc>  // b.pmore
     274:	ldr	w0, [sp, #40]
     278:	str	w0, [sp, #44]
     27c:	b	3e8 <grub_utf16_to_utf8+0x364>
     280:	ldr	w1, [sp, #40]
     284:	mov	w0, #0xdbff                	// #56319
     288:	cmp	w1, w0
     28c:	b.ls	2b8 <grub_utf16_to_utf8+0x234>  // b.plast
     290:	ldr	w1, [sp, #40]
     294:	mov	w0, #0xdfff                	// #57343
     298:	cmp	w1, w0
     29c:	b.hi	2b8 <grub_utf16_to_utf8+0x234>  // b.pmore
     2a0:	ldr	x0, [sp, #24]
     2a4:	add	x1, x0, #0x1
     2a8:	str	x1, [sp, #24]
     2ac:	mov	w1, #0x3f                  	// #63
     2b0:	strb	w1, [x0]
     2b4:	b	3e8 <grub_utf16_to_utf8+0x364>
     2b8:	ldr	w1, [sp, #40]
     2bc:	mov	w0, #0xffff                	// #65535
     2c0:	cmp	w1, w0
     2c4:	b.hi	344 <grub_utf16_to_utf8+0x2c0>  // b.pmore
     2c8:	ldr	w0, [sp, #40]
     2cc:	lsr	w0, w0, #12
     2d0:	and	w1, w0, #0xff
     2d4:	ldr	x0, [sp, #24]
     2d8:	add	x2, x0, #0x1
     2dc:	str	x2, [sp, #24]
     2e0:	orr	w1, w1, #0xffffffe0
     2e4:	and	w1, w1, #0xff
     2e8:	strb	w1, [x0]
     2ec:	ldr	w0, [sp, #40]
     2f0:	lsr	w0, w0, #6
     2f4:	and	w0, w0, #0xff
     2f8:	and	w0, w0, #0x3f
     2fc:	and	w1, w0, #0xff
     300:	ldr	x0, [sp, #24]
     304:	add	x2, x0, #0x1
     308:	str	x2, [sp, #24]
     30c:	orr	w1, w1, #0xffffff80
     310:	and	w1, w1, #0xff
     314:	strb	w1, [x0]
     318:	ldr	w0, [sp, #40]
     31c:	and	w0, w0, #0xff
     320:	and	w0, w0, #0x3f
     324:	and	w1, w0, #0xff
     328:	ldr	x0, [sp, #24]
     32c:	add	x2, x0, #0x1
     330:	str	x2, [sp, #24]
     334:	orr	w1, w1, #0xffffff80
     338:	and	w1, w1, #0xff
     33c:	strb	w1, [x0]
     340:	b	3e8 <grub_utf16_to_utf8+0x364>
     344:	ldr	w0, [sp, #40]
     348:	lsr	w0, w0, #18
     34c:	and	w1, w0, #0xff
     350:	ldr	x0, [sp, #24]
     354:	add	x2, x0, #0x1
     358:	str	x2, [sp, #24]
     35c:	orr	w1, w1, #0xfffffff0
     360:	and	w1, w1, #0xff
     364:	strb	w1, [x0]
     368:	ldr	w0, [sp, #40]
     36c:	lsr	w0, w0, #12
     370:	and	w0, w0, #0xff
     374:	and	w0, w0, #0x3f
     378:	and	w1, w0, #0xff
     37c:	ldr	x0, [sp, #24]
     380:	add	x2, x0, #0x1
     384:	str	x2, [sp, #24]
     388:	orr	w1, w1, #0xffffff80
     38c:	and	w1, w1, #0xff
     390:	strb	w1, [x0]
     394:	ldr	w0, [sp, #40]
     398:	lsr	w0, w0, #6
     39c:	and	w0, w0, #0xff
     3a0:	and	w0, w0, #0x3f
     3a4:	and	w1, w0, #0xff
     3a8:	ldr	x0, [sp, #24]
     3ac:	add	x2, x0, #0x1
     3b0:	str	x2, [sp, #24]
     3b4:	orr	w1, w1, #0xffffff80
     3b8:	and	w1, w1, #0xff
     3bc:	strb	w1, [x0]
     3c0:	ldr	w0, [sp, #40]
     3c4:	and	w0, w0, #0xff
     3c8:	and	w0, w0, #0x3f
     3cc:	and	w1, w0, #0xff
     3d0:	ldr	x0, [sp, #24]
     3d4:	add	x2, x0, #0x1
     3d8:	str	x2, [sp, #24]
     3dc:	orr	w1, w1, #0xffffff80
     3e0:	and	w1, w1, #0xff
     3e4:	strb	w1, [x0]
     3e8:	ldr	x0, [sp, #8]
     3ec:	sub	x1, x0, #0x1
     3f0:	str	x1, [sp, #8]
     3f4:	cmp	x0, #0x0
     3f8:	b.ne	9c <grub_utf16_to_utf8+0x18>  // b.any
     3fc:	ldr	x0, [sp, #24]
     400:	add	sp, sp, #0x30
     404:	ret

0000000000000408 <grub_f2fs_test_bit_le>:
     408:	sub	sp, sp, #0x10
     40c:	str	w0, [sp, #12]
     410:	str	x1, [sp]
     414:	ldr	w0, [sp, #12]
     418:	asr	w0, w0, #3
     41c:	sxtw	x0, w0
     420:	ldr	x1, [sp]
     424:	add	x0, x1, x0
     428:	ldrb	w0, [x0]
     42c:	mov	w2, w0
     430:	ldr	w0, [sp, #12]
     434:	and	w0, w0, #0x7
     438:	mov	w1, #0x1                   	// #1
     43c:	lsl	w0, w1, w0
     440:	and	w0, w2, w0
     444:	add	sp, sp, #0x10
     448:	ret

000000000000044c <get_inline_addr>:
     44c:	sub	sp, sp, #0x10
     450:	str	x0, [sp, #8]
     454:	ldr	x0, [sp, #8]
     458:	add	x0, x0, #0x16c
     45c:	add	sp, sp, #0x10
     460:	ret

0000000000000464 <grub_f2fs_file_size>:
     464:	sub	sp, sp, #0x10
     468:	str	x0, [sp, #8]
     46c:	ldr	x0, [sp, #8]
     470:	ldr	x0, [x0, #16]
     474:	add	sp, sp, #0x10
     478:	ret

000000000000047c <start_cp_addr>:
     47c:	sub	sp, sp, #0x20
     480:	str	x0, [sp, #8]
     484:	ldr	x0, [sp, #8]
     488:	add	x0, x0, #0x884
     48c:	str	x0, [sp, #24]
     490:	ldr	x0, [sp, #8]
     494:	ldr	w0, [x0, #6284]
     498:	str	w0, [sp, #20]
     49c:	ldr	x0, [sp, #24]
     4a0:	ldr	x0, [x0]
     4a4:	and	x0, x0, #0x1
     4a8:	cmp	x0, #0x0
     4ac:	b.ne	4c4 <start_cp_addr+0x48>  // b.any
     4b0:	ldr	x0, [sp, #8]
     4b4:	ldr	w1, [x0, #6280]
     4b8:	ldr	w0, [sp, #20]
     4bc:	add	w0, w1, w0
     4c0:	b	4c8 <start_cp_addr+0x4c>
     4c4:	ldr	w0, [sp, #20]
     4c8:	add	sp, sp, #0x20
     4cc:	ret

00000000000004d0 <start_sum_block>:
     4d0:	stp	x29, x30, [sp, #-48]!
     4d4:	mov	x29, sp
     4d8:	str	x0, [sp, #24]
     4dc:	ldr	x0, [sp, #24]
     4e0:	add	x0, x0, #0x884
     4e4:	str	x0, [sp, #40]
     4e8:	ldr	x0, [sp, #24]
     4ec:	bl	47c <start_cp_addr>
     4f0:	mov	w1, w0
     4f4:	ldr	x0, [sp, #40]
     4f8:	ldr	w0, [x0, #140]
     4fc:	add	w0, w1, w0
     500:	ldp	x29, x30, [sp], #48
     504:	ret

0000000000000508 <sum_blk_addr>:
     508:	stp	x29, x30, [sp, #-48]!
     50c:	mov	x29, sp
     510:	str	x0, [sp, #24]
     514:	str	w1, [sp, #20]
     518:	str	w2, [sp, #16]
     51c:	ldr	x0, [sp, #24]
     520:	add	x0, x0, #0x884
     524:	str	x0, [sp, #40]
     528:	ldr	x0, [sp, #24]
     52c:	bl	47c <start_cp_addr>
     530:	mov	w1, w0
     534:	ldr	x0, [sp, #40]
     538:	ldr	w0, [x0, #136]
     53c:	add	w1, w1, w0
     540:	ldr	w0, [sp, #20]
     544:	sub	w1, w1, w0
     548:	ldr	w0, [sp, #16]
     54c:	add	w0, w1, w0
     550:	sub	w0, w0, #0x1
     554:	ldp	x29, x30, [sp], #48
     558:	ret

000000000000055c <nat_bitmap_ptr>:
     55c:	sub	sp, sp, #0x20
     560:	str	x0, [sp, #8]
     564:	ldr	x0, [sp, #8]
     568:	add	x0, x0, #0x884
     56c:	str	x0, [sp, #24]
     570:	ldr	x0, [sp, #8]
     574:	ldr	w0, [x0, #1664]
     578:	cmp	w0, #0x0
     57c:	b.eq	58c <nat_bitmap_ptr+0x30>  // b.none
     580:	ldr	x0, [sp, #24]
     584:	add	x0, x0, #0xc0
     588:	b	5a8 <nat_bitmap_ptr+0x4c>
     58c:	ldr	x0, [sp, #24]
     590:	ldr	w0, [x0, #156]
     594:	str	w0, [sp, #20]
     598:	ldr	x0, [sp, #24]
     59c:	add	x1, x0, #0xc0
     5a0:	ldr	w0, [sp, #20]
     5a4:	add	x0, x1, x0
     5a8:	add	sp, sp, #0x20
     5ac:	ret

00000000000005b0 <get_node_id>:
     5b0:	sub	sp, sp, #0x10
     5b4:	str	x0, [sp, #8]
     5b8:	str	w1, [sp, #4]
     5bc:	str	w2, [sp]
     5c0:	ldr	w0, [sp]
     5c4:	cmp	w0, #0x0
     5c8:	b.eq	5f0 <get_node_id+0x40>  // b.none
     5cc:	ldr	w0, [sp, #4]
     5d0:	sub	w0, w0, #0x39c
     5d4:	ldr	x1, [sp, #8]
     5d8:	sxtw	x0, w0
     5dc:	add	x0, x0, #0x3f4
     5e0:	lsl	x0, x0, #2
     5e4:	add	x0, x1, x0
     5e8:	ldr	w0, [x0, #4]
     5ec:	b	5fc <get_node_id+0x4c>
     5f0:	ldr	x0, [sp, #8]
     5f4:	ldrsw	x1, [sp, #4]
     5f8:	ldr	w0, [x0, x1, lsl #2]
     5fc:	add	sp, sp, #0x10
     600:	ret

0000000000000604 <grub_f2fs_block_read>:
     604:	stp	x29, x30, [sp, #-48]!
     608:	mov	x29, sp
     60c:	str	x0, [sp, #40]
     610:	str	w1, [sp, #36]
     614:	str	x2, [sp, #24]
     618:	ldr	x0, [sp, #40]
     61c:	ldr	x5, [x0, #6808]
     620:	ldr	w0, [sp, #36]
     624:	lsl	x0, x0, #3
     628:	ldr	x4, [sp, #24]
     62c:	mov	x3, #0x1000                	// #4096
     630:	mov	x2, #0x0                   	// #0
     634:	mov	x1, x0
     638:	mov	x0, x5
     63c:	bl	0 <grub_disk_read>
     640:	ldp	x29, x30, [sp], #48
     644:	ret

0000000000000648 <grub_f2fs_cal_crc32>:
     648:	sub	sp, sp, #0x30
     64c:	str	x0, [sp, #8]
     650:	str	w1, [sp, #4]
     654:	mov	w0, #0x2010                	// #8208
     658:	movk	w0, #0xf2f5, lsl #16
     65c:	str	w0, [sp, #44]
     660:	ldr	x0, [sp, #8]
     664:	str	x0, [sp, #32]
     668:	ldr	w0, [sp, #4]
     66c:	str	w0, [sp, #28]
     670:	b	6e4 <grub_f2fs_cal_crc32+0x9c>
     674:	ldr	x0, [sp, #32]
     678:	add	x1, x0, #0x1
     67c:	str	x1, [sp, #32]
     680:	ldrb	w0, [x0]
     684:	mov	w1, w0
     688:	ldr	w0, [sp, #44]
     68c:	eor	w0, w0, w1
     690:	str	w0, [sp, #44]
     694:	str	wzr, [sp, #24]
     698:	b	6d8 <grub_f2fs_cal_crc32+0x90>
     69c:	ldr	w0, [sp, #44]
     6a0:	lsr	w1, w0, #1
     6a4:	ldr	w0, [sp, #44]
     6a8:	and	w0, w0, #0x1
     6ac:	cmp	w0, #0x0
     6b0:	b.eq	6c0 <grub_f2fs_cal_crc32+0x78>  // b.none
     6b4:	mov	w0, #0x8320                	// #33568
     6b8:	movk	w0, #0xedb8, lsl #16
     6bc:	b	6c4 <grub_f2fs_cal_crc32+0x7c>
     6c0:	mov	w0, #0x0                   	// #0
     6c4:	eor	w0, w0, w1
     6c8:	str	w0, [sp, #44]
     6cc:	ldr	w0, [sp, #24]
     6d0:	add	w0, w0, #0x1
     6d4:	str	w0, [sp, #24]
     6d8:	ldr	w0, [sp, #24]
     6dc:	cmp	w0, #0x7
     6e0:	b.le	69c <grub_f2fs_cal_crc32+0x54>
     6e4:	ldr	w0, [sp, #28]
     6e8:	sub	w1, w0, #0x1
     6ec:	str	w1, [sp, #28]
     6f0:	cmp	w0, #0x0
     6f4:	b.ne	674 <grub_f2fs_cal_crc32+0x2c>  // b.any
     6f8:	ldr	w0, [sp, #44]
     6fc:	add	sp, sp, #0x30
     700:	ret

0000000000000704 <grub_f2fs_crc_valid>:
     704:	stp	x29, x30, [sp, #-48]!
     708:	mov	x29, sp
     70c:	str	w0, [sp, #28]
     710:	str	x1, [sp, #16]
     714:	str	w2, [sp, #24]
     718:	str	wzr, [sp, #44]
     71c:	ldr	w1, [sp, #24]
     720:	ldr	x0, [sp, #16]
     724:	bl	648 <grub_f2fs_cal_crc32>
     728:	str	w0, [sp, #44]
     72c:	ldr	w1, [sp, #44]
     730:	ldr	w0, [sp, #28]
     734:	cmp	w1, w0
     738:	cset	w0, eq  // eq = none
     73c:	and	w0, w0, #0xff
     740:	ldp	x29, x30, [sp], #48
     744:	ret

0000000000000748 <grub_f2fs_test_bit>:
     748:	sub	sp, sp, #0x20
     74c:	str	w0, [sp, #12]
     750:	str	x1, [sp]
     754:	ldr	w0, [sp, #12]
     758:	lsr	w0, w0, #3
     75c:	mov	w0, w0
     760:	ldr	x1, [sp]
     764:	add	x0, x1, x0
     768:	str	x0, [sp]
     76c:	ldr	w0, [sp, #12]
     770:	mvn	w0, w0
     774:	and	w0, w0, #0x7
     778:	mov	w1, #0x1                   	// #1
     77c:	lsl	w0, w1, w0
     780:	str	w0, [sp, #28]
     784:	ldr	x0, [sp]
     788:	ldrb	w0, [x0]
     78c:	mov	w1, w0
     790:	ldr	w0, [sp, #28]
     794:	and	w0, w1, w0
     798:	add	sp, sp, #0x20
     79c:	ret

00000000000007a0 <grub_f2fs_sanity_check_sb>:
     7a0:	sub	sp, sp, #0x20
     7a4:	str	x0, [sp, #8]
     7a8:	ldr	x0, [sp, #8]
     7ac:	ldr	w1, [x0]
     7b0:	mov	w0, #0x2010                	// #8208
     7b4:	movk	w0, #0xf2f5, lsl #16
     7b8:	cmp	w1, w0
     7bc:	b.eq	7c8 <grub_f2fs_sanity_check_sb+0x28>  // b.none
     7c0:	mov	w0, #0xffffffff            	// #-1
     7c4:	b	840 <grub_f2fs_sanity_check_sb+0xa0>
     7c8:	ldr	x0, [sp, #8]
     7cc:	ldr	w0, [x0, #16]
     7d0:	cmp	w0, #0xc
     7d4:	b.eq	7e0 <grub_f2fs_sanity_check_sb+0x40>  // b.none
     7d8:	mov	w0, #0xffffffff            	// #-1
     7dc:	b	840 <grub_f2fs_sanity_check_sb+0xa0>
     7e0:	ldr	x0, [sp, #8]
     7e4:	ldr	w0, [x0, #8]
     7e8:	str	w0, [sp, #28]
     7ec:	ldr	x0, [sp, #8]
     7f0:	ldr	w0, [x0, #12]
     7f4:	str	w0, [sp, #24]
     7f8:	ldr	w0, [sp, #28]
     7fc:	cmp	w0, #0xc
     800:	b.ls	80c <grub_f2fs_sanity_check_sb+0x6c>  // b.plast
     804:	mov	w0, #0xffffffff            	// #-1
     808:	b	840 <grub_f2fs_sanity_check_sb+0xa0>
     80c:	ldr	w0, [sp, #28]
     810:	cmp	w0, #0x8
     814:	b.hi	820 <grub_f2fs_sanity_check_sb+0x80>  // b.pmore
     818:	mov	w0, #0xffffffff            	// #-1
     81c:	b	840 <grub_f2fs_sanity_check_sb+0xa0>
     820:	ldr	w1, [sp, #24]
     824:	ldr	w0, [sp, #28]
     828:	add	w0, w1, w0
     82c:	cmp	w0, #0xc
     830:	b.eq	83c <grub_f2fs_sanity_check_sb+0x9c>  // b.none
     834:	mov	w0, #0xffffffff            	// #-1
     838:	b	840 <grub_f2fs_sanity_check_sb+0xa0>
     83c:	mov	w0, #0x0                   	// #0
     840:	add	sp, sp, #0x20
     844:	ret

0000000000000848 <grub_f2fs_read_sb>:
     848:	stp	x29, x30, [sp, #-48]!
     84c:	mov	x29, sp
     850:	str	x0, [sp, #24]
     854:	str	x1, [sp, #16]
     858:	ldr	x0, [sp, #24]
     85c:	ldr	x0, [x0, #6808]
     860:	str	x0, [sp, #40]
     864:	ldr	x0, [sp, #24]
     868:	mov	x4, x0
     86c:	mov	x3, #0x884                 	// #2180
     870:	mov	x2, #0x0                   	// #0
     874:	ldr	x1, [sp, #16]
     878:	ldr	x0, [sp, #40]
     87c:	bl	0 <grub_disk_read>
     880:	str	w0, [sp, #36]
     884:	ldr	w0, [sp, #36]
     888:	cmp	w0, #0x0
     88c:	b.eq	898 <grub_f2fs_read_sb+0x50>  // b.none
     890:	mov	w0, #0xffffffff            	// #-1
     894:	b	8a0 <grub_f2fs_read_sb+0x58>
     898:	ldr	x0, [sp, #24]
     89c:	bl	7a0 <grub_f2fs_sanity_check_sb>
     8a0:	ldp	x29, x30, [sp], #48
     8a4:	ret

00000000000008a8 <validate_checkpoint>:
     8a8:	stp	x29, x30, [sp, #-112]!
     8ac:	mov	x29, sp
     8b0:	str	x0, [sp, #40]
     8b4:	str	w1, [sp, #36]
     8b8:	str	x2, [sp, #24]
     8bc:	str	xzr, [sp, #104]
     8c0:	str	xzr, [sp, #96]
     8c4:	str	wzr, [sp, #92]
     8c8:	mov	x0, #0x1000                	// #4096
     8cc:	bl	0 <grub_malloc>
     8d0:	str	x0, [sp, #80]
     8d4:	ldr	x0, [sp, #80]
     8d8:	cmp	x0, #0x0
     8dc:	b.ne	8e8 <validate_checkpoint+0x40>  // b.any
     8e0:	mov	x0, #0x0                   	// #0
     8e4:	b	a7c <validate_checkpoint+0x1d4>
     8e8:	ldr	x2, [sp, #80]
     8ec:	ldr	w1, [sp, #36]
     8f0:	ldr	x0, [sp, #40]
     8f4:	bl	604 <grub_f2fs_block_read>
     8f8:	str	w0, [sp, #76]
     8fc:	ldr	w0, [sp, #76]
     900:	cmp	w0, #0x0
     904:	b.ne	a54 <validate_checkpoint+0x1ac>  // b.any
     908:	ldr	x0, [sp, #80]
     90c:	str	x0, [sp, #64]
     910:	ldr	x0, [sp, #64]
     914:	ldr	w0, [x0, #164]
     918:	str	w0, [sp, #60]
     91c:	ldr	w0, [sp, #60]
     920:	cmp	w0, #0xffc
     924:	b.ne	a5c <validate_checkpoint+0x1b4>  // b.any
     928:	ldr	x0, [sp, #80]
     92c:	add	x0, x0, #0xffc
     930:	ldr	w0, [x0]
     934:	str	w0, [sp, #92]
     938:	ldr	w2, [sp, #60]
     93c:	ldr	x1, [sp, #64]
     940:	ldr	w0, [sp, #92]
     944:	bl	704 <grub_f2fs_crc_valid>
     948:	cmp	w0, #0x0
     94c:	b.eq	a64 <validate_checkpoint+0x1bc>  // b.none
     950:	ldr	x0, [sp, #64]
     954:	ldr	x0, [x0]
     958:	str	x0, [sp, #96]
     95c:	mov	x0, #0x1000                	// #4096
     960:	bl	0 <grub_malloc>
     964:	str	x0, [sp, #48]
     968:	ldr	x0, [sp, #48]
     96c:	cmp	x0, #0x0
     970:	b.eq	a6c <validate_checkpoint+0x1c4>  // b.none
     974:	ldr	x0, [sp, #64]
     978:	ldr	w1, [x0, #136]
     97c:	ldr	w0, [sp, #36]
     980:	add	w0, w1, w0
     984:	sub	w0, w0, #0x1
     988:	str	w0, [sp, #36]
     98c:	ldr	x2, [sp, #48]
     990:	ldr	w1, [sp, #36]
     994:	ldr	x0, [sp, #40]
     998:	bl	604 <grub_f2fs_block_read>
     99c:	str	w0, [sp, #76]
     9a0:	ldr	w0, [sp, #76]
     9a4:	cmp	w0, #0x0
     9a8:	b.ne	a2c <validate_checkpoint+0x184>  // b.any
     9ac:	ldr	x0, [sp, #48]
     9b0:	str	x0, [sp, #64]
     9b4:	ldr	x0, [sp, #64]
     9b8:	ldr	w0, [x0, #164]
     9bc:	str	w0, [sp, #60]
     9c0:	ldr	w0, [sp, #60]
     9c4:	cmp	w0, #0xffc
     9c8:	b.ne	a34 <validate_checkpoint+0x18c>  // b.any
     9cc:	ldr	x0, [sp, #48]
     9d0:	add	x0, x0, #0xffc
     9d4:	ldr	w0, [x0]
     9d8:	str	w0, [sp, #92]
     9dc:	ldr	w2, [sp, #60]
     9e0:	ldr	x1, [sp, #64]
     9e4:	ldr	w0, [sp, #92]
     9e8:	bl	704 <grub_f2fs_crc_valid>
     9ec:	cmp	w0, #0x0
     9f0:	b.eq	a3c <validate_checkpoint+0x194>  // b.none
     9f4:	ldr	x0, [sp, #64]
     9f8:	ldr	x0, [x0]
     9fc:	str	x0, [sp, #104]
     a00:	ldr	x1, [sp, #104]
     a04:	ldr	x0, [sp, #96]
     a08:	cmp	x1, x0
     a0c:	b.ne	a44 <validate_checkpoint+0x19c>  // b.any
     a10:	ldr	x0, [sp, #24]
     a14:	ldr	x1, [sp, #104]
     a18:	str	x1, [x0]
     a1c:	ldr	x0, [sp, #48]
     a20:	bl	0 <grub_free>
     a24:	ldr	x0, [sp, #80]
     a28:	b	a7c <validate_checkpoint+0x1d4>
     a2c:	nop
     a30:	b	a48 <validate_checkpoint+0x1a0>
     a34:	nop
     a38:	b	a48 <validate_checkpoint+0x1a0>
     a3c:	nop
     a40:	b	a48 <validate_checkpoint+0x1a0>
     a44:	nop
     a48:	ldr	x0, [sp, #48]
     a4c:	bl	0 <grub_free>
     a50:	b	a70 <validate_checkpoint+0x1c8>
     a54:	nop
     a58:	b	a70 <validate_checkpoint+0x1c8>
     a5c:	nop
     a60:	b	a70 <validate_checkpoint+0x1c8>
     a64:	nop
     a68:	b	a70 <validate_checkpoint+0x1c8>
     a6c:	nop
     a70:	ldr	x0, [sp, #80]
     a74:	bl	0 <grub_free>
     a78:	mov	x0, #0x0                   	// #0
     a7c:	ldp	x29, x30, [sp], #112
     a80:	ret

0000000000000a84 <grub_f2fs_read_cp>:
     a84:	stp	x29, x30, [sp, #-80]!
     a88:	mov	x29, sp
     a8c:	str	x0, [sp, #24]
     a90:	str	xzr, [sp, #40]
     a94:	str	xzr, [sp, #32]
     a98:	ldr	x0, [sp, #24]
     a9c:	ldr	w0, [x0, #6284]
     aa0:	mov	w0, w0
     aa4:	str	x0, [sp, #64]
     aa8:	ldr	x0, [sp, #64]
     aac:	mov	w1, w0
     ab0:	add	x0, sp, #0x28
     ab4:	mov	x2, x0
     ab8:	ldr	x0, [sp, #24]
     abc:	bl	8a8 <validate_checkpoint>
     ac0:	str	x0, [sp, #56]
     ac4:	ldr	x0, [sp, #56]
     ac8:	cmp	x0, #0x0
     acc:	b.ne	afc <grub_f2fs_read_cp+0x78>  // b.any
     ad0:	adrp	x0, 0 <grub_fs_register>
     ad4:	add	x0, x0, #0x0
     ad8:	ldr	x0, [x0]
     adc:	ldr	w0, [x0]
     ae0:	cmp	w0, #0x0
     ae4:	b.eq	afc <grub_f2fs_read_cp+0x78>  // b.none
     ae8:	adrp	x0, 0 <grub_fs_register>
     aec:	add	x0, x0, #0x0
     af0:	ldr	x0, [x0]
     af4:	ldr	w0, [x0]
     af8:	b	c1c <grub_f2fs_read_cp+0x198>
     afc:	ldr	x0, [sp, #24]
     b00:	ldr	w0, [x0, #6280]
     b04:	mov	w0, w0
     b08:	ldr	x1, [sp, #64]
     b0c:	add	x0, x1, x0
     b10:	str	x0, [sp, #64]
     b14:	ldr	x0, [sp, #64]
     b18:	mov	w1, w0
     b1c:	add	x0, sp, #0x20
     b20:	mov	x2, x0
     b24:	ldr	x0, [sp, #24]
     b28:	bl	8a8 <validate_checkpoint>
     b2c:	str	x0, [sp, #48]
     b30:	ldr	x0, [sp, #48]
     b34:	cmp	x0, #0x0
     b38:	b.ne	b70 <grub_f2fs_read_cp+0xec>  // b.any
     b3c:	adrp	x0, 0 <grub_fs_register>
     b40:	add	x0, x0, #0x0
     b44:	ldr	x0, [x0]
     b48:	ldr	w0, [x0]
     b4c:	cmp	w0, #0x0
     b50:	b.eq	b70 <grub_f2fs_read_cp+0xec>  // b.none
     b54:	ldr	x0, [sp, #56]
     b58:	bl	0 <grub_free>
     b5c:	adrp	x0, 0 <grub_fs_register>
     b60:	add	x0, x0, #0x0
     b64:	ldr	x0, [x0]
     b68:	ldr	w0, [x0]
     b6c:	b	c1c <grub_f2fs_read_cp+0x198>
     b70:	ldr	x0, [sp, #56]
     b74:	cmp	x0, #0x0
     b78:	b.eq	bac <grub_f2fs_read_cp+0x128>  // b.none
     b7c:	ldr	x0, [sp, #48]
     b80:	cmp	x0, #0x0
     b84:	b.eq	bac <grub_f2fs_read_cp+0x128>  // b.none
     b88:	ldr	x1, [sp, #32]
     b8c:	ldr	x0, [sp, #40]
     b90:	cmp	x1, x0
     b94:	b.ls	ba0 <grub_f2fs_read_cp+0x11c>  // b.plast
     b98:	ldr	x0, [sp, #48]
     b9c:	b	ba4 <grub_f2fs_read_cp+0x120>
     ba0:	ldr	x0, [sp, #56]
     ba4:	str	x0, [sp, #72]
     ba8:	b	bf4 <grub_f2fs_read_cp+0x170>
     bac:	ldr	x0, [sp, #56]
     bb0:	cmp	x0, #0x0
     bb4:	b.eq	bc4 <grub_f2fs_read_cp+0x140>  // b.none
     bb8:	ldr	x0, [sp, #56]
     bbc:	str	x0, [sp, #72]
     bc0:	b	bf4 <grub_f2fs_read_cp+0x170>
     bc4:	ldr	x0, [sp, #48]
     bc8:	cmp	x0, #0x0
     bcc:	b.eq	bdc <grub_f2fs_read_cp+0x158>  // b.none
     bd0:	ldr	x0, [sp, #48]
     bd4:	str	x0, [sp, #72]
     bd8:	b	bf4 <grub_f2fs_read_cp+0x170>
     bdc:	adrp	x0, 0 <grub_fs_register>
     be0:	add	x0, x0, #0x0
     be4:	ldr	x1, [x0]
     be8:	mov	w0, #0x9                   	// #9
     bec:	bl	0 <grub_error>
     bf0:	b	c1c <grub_f2fs_read_cp+0x198>
     bf4:	ldr	x0, [sp, #24]
     bf8:	add	x0, x0, #0x884
     bfc:	mov	x2, #0x1000                	// #4096
     c00:	ldr	x1, [sp, #72]
     c04:	bl	58 <grub_memcpy>
     c08:	ldr	x0, [sp, #56]
     c0c:	bl	0 <grub_free>
     c10:	ldr	x0, [sp, #48]
     c14:	bl	0 <grub_free>
     c18:	mov	w0, #0x0                   	// #0
     c1c:	ldp	x29, x30, [sp], #80
     c20:	ret
     c24:	nop
	...

0000000000000c38 <get_nat_journal>:
     c38:	stp	x29, x30, [sp, #-64]!
     c3c:	mov	x29, sp
     c40:	str	x0, [sp, #24]
     c44:	mov	x0, #0x1000                	// #4096
     c48:	bl	0 <grub_malloc>
     c4c:	str	x0, [sp, #48]
     c50:	ldr	x0, [sp, #48]
     c54:	cmp	x0, #0x0
     c58:	b.ne	c70 <get_nat_journal+0x38>  // b.any
     c5c:	adrp	x0, 0 <grub_fs_register>
     c60:	add	x0, x0, #0x0
     c64:	ldr	x0, [x0]
     c68:	ldr	w0, [x0]
     c6c:	b	d5c <get_nat_journal+0x124>
     c70:	ldr	x0, [sp, #24]
     c74:	ldr	w0, [x0, #2312]
     c78:	and	w0, w0, #0x4
     c7c:	cmp	w0, #0x0
     c80:	b.eq	c94 <get_nat_journal+0x5c>  // b.none
     c84:	ldr	x0, [sp, #24]
     c88:	bl	4d0 <start_sum_block>
     c8c:	str	w0, [sp, #60]
     c90:	b	cd4 <get_nat_journal+0x9c>
     c94:	ldr	x0, [sp, #24]
     c98:	ldr	w0, [x0, #2312]
     c9c:	and	w0, w0, #0x1
     ca0:	cmp	w0, #0x0
     ca4:	b.eq	cc0 <get_nat_journal+0x88>  // b.none
     ca8:	mov	w2, #0x0                   	// #0
     cac:	mov	w1, #0x6                   	// #6
     cb0:	ldr	x0, [sp, #24]
     cb4:	bl	508 <sum_blk_addr>
     cb8:	str	w0, [sp, #60]
     cbc:	b	cd4 <get_nat_journal+0x9c>
     cc0:	mov	w2, #0x0                   	// #0
     cc4:	mov	w1, #0x3                   	// #3
     cc8:	ldr	x0, [sp, #24]
     ccc:	bl	508 <sum_blk_addr>
     cd0:	str	w0, [sp, #60]
     cd4:	ldr	x2, [sp, #48]
     cd8:	ldr	w1, [sp, #60]
     cdc:	ldr	x0, [sp, #24]
     ce0:	bl	604 <grub_f2fs_block_read>
     ce4:	str	w0, [sp, #44]
     ce8:	ldr	w0, [sp, #44]
     cec:	cmp	w0, #0x0
     cf0:	b.ne	d4c <get_nat_journal+0x114>  // b.any
     cf4:	ldr	x0, [sp, #24]
     cf8:	ldr	w0, [x0, #2312]
     cfc:	and	w0, w0, #0x4
     d00:	cmp	w0, #0x0
     d04:	b.eq	d24 <get_nat_journal+0xec>  // b.none
     d08:	ldr	x1, [sp, #24]
     d0c:	mov	x0, #0x1894                	// #6292
     d10:	add	x0, x1, x0
     d14:	mov	x2, #0x1fb                 	// #507
     d18:	ldr	x1, [sp, #48]
     d1c:	bl	58 <grub_memcpy>
     d20:	b	d50 <get_nat_journal+0x118>
     d24:	ldr	x1, [sp, #24]
     d28:	mov	x0, #0x1894                	// #6292
     d2c:	add	x3, x1, x0
     d30:	ldr	x0, [sp, #48]
     d34:	add	x0, x0, #0xe00
     d38:	mov	x2, #0x1fb                 	// #507
     d3c:	mov	x1, x0
     d40:	mov	x0, x3
     d44:	bl	58 <grub_memcpy>
     d48:	b	d50 <get_nat_journal+0x118>
     d4c:	nop
     d50:	ldr	x0, [sp, #48]
     d54:	bl	0 <grub_free>
     d58:	ldr	w0, [sp, #44]
     d5c:	ldp	x29, x30, [sp], #64
     d60:	ret
     d64:	nop
	...

0000000000000d70 <get_blkaddr_from_nat_journal>:
     d70:	sub	sp, sp, #0x20
     d74:	str	x0, [sp, #8]
     d78:	str	w1, [sp, #4]
     d7c:	ldr	x0, [sp, #8]
     d80:	ldrh	w0, [x0, #6292]
     d84:	strh	w0, [sp, #24]
     d88:	str	wzr, [sp, #28]
     d8c:	strh	wzr, [sp, #26]
     d90:	b	e14 <get_blkaddr_from_nat_journal+0xa4>
     d94:	ldrh	w0, [sp, #26]
     d98:	ldr	x2, [sp, #8]
     d9c:	sxtw	x1, w0
     da0:	mov	x0, x1
     da4:	lsl	x0, x0, #1
     da8:	add	x0, x0, x1
     dac:	lsl	x0, x0, #2
     db0:	add	x0, x0, x1
     db4:	add	x1, x2, x0
     db8:	mov	x0, #0x1800                	// #6144
     dbc:	add	x0, x1, x0
     dc0:	ldur	w0, [x0, #150]
     dc4:	ldr	w1, [sp, #4]
     dc8:	cmp	w1, w0
     dcc:	b.ne	e08 <get_blkaddr_from_nat_journal+0x98>  // b.any
     dd0:	ldrh	w0, [sp, #26]
     dd4:	ldr	x2, [sp, #8]
     dd8:	sxtw	x1, w0
     ddc:	mov	x0, x1
     de0:	lsl	x0, x0, #1
     de4:	add	x0, x0, x1
     de8:	lsl	x0, x0, #2
     dec:	add	x0, x0, x1
     df0:	add	x1, x2, x0
     df4:	mov	x0, #0x1800                	// #6144
     df8:	add	x0, x1, x0
     dfc:	ldur	w0, [x0, #159]
     e00:	str	w0, [sp, #28]
     e04:	b	e24 <get_blkaddr_from_nat_journal+0xb4>
     e08:	ldrh	w0, [sp, #26]
     e0c:	add	w0, w0, #0x1
     e10:	strh	w0, [sp, #26]
     e14:	ldrh	w1, [sp, #26]
     e18:	ldrh	w0, [sp, #24]
     e1c:	cmp	w1, w0
     e20:	b.cc	d94 <get_blkaddr_from_nat_journal+0x24>  // b.lo, b.ul, b.last
     e24:	ldr	w0, [sp, #28]
     e28:	add	sp, sp, #0x20
     e2c:	ret

0000000000000e30 <get_node_blkaddr>:
     e30:	stp	x29, x30, [sp, #-64]!
     e34:	mov	x29, sp
     e38:	str	x0, [sp, #24]
     e3c:	str	w1, [sp, #20]
     e40:	ldr	w1, [sp, #20]
     e44:	ldr	x0, [sp, #24]
     e48:	bl	d70 <get_blkaddr_from_nat_journal>
     e4c:	str	w0, [sp, #56]
     e50:	ldr	w0, [sp, #56]
     e54:	cmp	w0, #0x0
     e58:	b.eq	e64 <get_node_blkaddr+0x34>  // b.none
     e5c:	ldr	w0, [sp, #56]
     e60:	b	fbc <get_node_blkaddr+0x18c>
     e64:	mov	x0, #0x1000                	// #4096
     e68:	bl	0 <grub_malloc>
     e6c:	str	x0, [sp, #48]
     e70:	ldr	x0, [sp, #48]
     e74:	cmp	x0, #0x0
     e78:	b.ne	e84 <get_node_blkaddr+0x54>  // b.any
     e7c:	mov	w0, #0x0                   	// #0
     e80:	b	fbc <get_node_blkaddr+0x18c>
     e84:	ldr	w0, [sp, #20]
     e88:	mov	w1, #0x121                 	// #289
     e8c:	movk	w1, #0x2012, lsl #16
     e90:	umull	x1, w0, w1
     e94:	lsr	x1, x1, #32
     e98:	sub	w0, w0, w1
     e9c:	lsr	w0, w0, #1
     ea0:	add	w0, w0, w1
     ea4:	lsr	w0, w0, #8
     ea8:	str	w0, [sp, #44]
     eac:	ldr	w0, [sp, #20]
     eb0:	mov	w1, #0x121                 	// #289
     eb4:	movk	w1, #0x2012, lsl #16
     eb8:	umull	x1, w0, w1
     ebc:	lsr	x1, x1, #32
     ec0:	sub	w2, w0, w1
     ec4:	lsr	w2, w2, #1
     ec8:	add	w1, w2, w1
     ecc:	lsr	w2, w1, #8
     ed0:	mov	w1, #0x1c7                 	// #455
     ed4:	mul	w1, w2, w1
     ed8:	sub	w0, w0, w1
     edc:	str	w0, [sp, #40]
     ee0:	ldr	x0, [sp, #24]
     ee4:	ldr	w0, [x0, #6280]
     ee8:	ldr	w1, [sp, #44]
     eec:	udiv	w0, w1, w0
     ef0:	str	w0, [sp, #36]
     ef4:	ldr	x0, [sp, #24]
     ef8:	ldr	w1, [x0, #6288]
     efc:	ldr	x0, [sp, #24]
     f00:	ldr	w2, [x0, #6280]
     f04:	ldr	w0, [sp, #36]
     f08:	mul	w0, w2, w0
     f0c:	lsl	w0, w0, #1
     f10:	add	w1, w1, w0
     f14:	ldr	x0, [sp, #24]
     f18:	ldr	w0, [x0, #6280]
     f1c:	sub	w2, w0, #0x1
     f20:	ldr	w0, [sp, #44]
     f24:	and	w0, w2, w0
     f28:	add	w0, w1, w0
     f2c:	str	w0, [sp, #60]
     f30:	ldr	x0, [sp, #24]
     f34:	ldr	x0, [x0, #6800]
     f38:	mov	x1, x0
     f3c:	ldr	w0, [sp, #44]
     f40:	bl	748 <grub_f2fs_test_bit>
     f44:	cmp	w0, #0x0
     f48:	b.eq	f60 <get_node_blkaddr+0x130>  // b.none
     f4c:	ldr	x0, [sp, #24]
     f50:	ldr	w0, [x0, #6280]
     f54:	ldr	w1, [sp, #60]
     f58:	add	w0, w1, w0
     f5c:	str	w0, [sp, #60]
     f60:	ldr	x2, [sp, #48]
     f64:	ldr	w1, [sp, #60]
     f68:	ldr	x0, [sp, #24]
     f6c:	bl	604 <grub_f2fs_block_read>
     f70:	str	w0, [sp, #32]
     f74:	ldr	w0, [sp, #32]
     f78:	cmp	w0, #0x0
     f7c:	b.eq	f90 <get_node_blkaddr+0x160>  // b.none
     f80:	ldr	x0, [sp, #48]
     f84:	bl	0 <grub_free>
     f88:	mov	w0, #0x0                   	// #0
     f8c:	b	fbc <get_node_blkaddr+0x18c>
     f90:	ldr	x2, [sp, #48]
     f94:	ldr	w1, [sp, #40]
     f98:	mov	x0, x1
     f9c:	lsl	x0, x0, #3
     fa0:	add	x0, x0, x1
     fa4:	add	x0, x2, x0
     fa8:	ldur	w0, [x0, #5]
     fac:	str	w0, [sp, #56]
     fb0:	ldr	x0, [sp, #48]
     fb4:	bl	0 <grub_free>
     fb8:	ldr	w0, [sp, #56]
     fbc:	ldp	x29, x30, [sp], #64
     fc0:	ret

0000000000000fc4 <grub_get_node_path>:
     fc4:	sub	sp, sp, #0x40
     fc8:	str	x0, [sp, #24]
     fcc:	str	w1, [sp, #20]
     fd0:	str	x2, [sp, #8]
     fd4:	str	x3, [sp]
     fd8:	mov	w0, #0x3fa                 	// #1018
     fdc:	str	w0, [sp, #52]
     fe0:	mov	w0, #0x3fa                 	// #1018
     fe4:	str	w0, [sp, #48]
     fe8:	mov	w0, #0xd024                	// #53284
     fec:	movk	w0, #0xf, lsl #16
     ff0:	str	w0, [sp, #44]
     ff4:	ldr	w1, [sp, #44]
     ff8:	mov	w0, #0x3fa                 	// #1018
     ffc:	mul	w0, w1, w0
    1000:	str	w0, [sp, #40]
    1004:	mov	w0, #0x39b                 	// #923
    1008:	str	w0, [sp, #60]
    100c:	str	wzr, [sp, #36]
    1010:	mov	w0, #0xffffffff            	// #-1
    1014:	str	w0, [sp, #56]
    1018:	ldr	x0, [sp, #24]
    101c:	ldrb	w0, [x0, #3]
    1020:	and	w0, w0, #0x1
    1024:	cmp	w0, #0x0
    1028:	b.eq	1038 <grub_get_node_path+0x74>  // b.none
    102c:	ldr	w0, [sp, #60]
    1030:	sub	w0, w0, #0x32
    1034:	str	w0, [sp, #60]
    1038:	ldr	x0, [sp]
    103c:	str	wzr, [x0]
    1040:	ldr	w1, [sp, #20]
    1044:	ldr	w0, [sp, #60]
    1048:	cmp	w1, w0
    104c:	b.cs	1070 <grub_get_node_path+0xac>  // b.hs, b.nlast
    1050:	ldrsw	x0, [sp, #36]
    1054:	lsl	x0, x0, #2
    1058:	ldr	x1, [sp, #8]
    105c:	add	x0, x1, x0
    1060:	ldr	w1, [sp, #20]
    1064:	str	w1, [x0]
    1068:	str	wzr, [sp, #56]
    106c:	b	1514 <grub_get_node_path+0x550>
    1070:	ldr	w1, [sp, #20]
    1074:	ldr	w0, [sp, #60]
    1078:	sub	w0, w1, w0
    107c:	str	w0, [sp, #20]
    1080:	ldr	w1, [sp, #20]
    1084:	ldr	w0, [sp, #52]
    1088:	cmp	w1, w0
    108c:	b.cs	10f0 <grub_get_node_path+0x12c>  // b.hs, b.nlast
    1090:	ldr	w0, [sp, #36]
    1094:	add	w1, w0, #0x1
    1098:	str	w1, [sp, #36]
    109c:	sxtw	x0, w0
    10a0:	lsl	x0, x0, #2
    10a4:	ldr	x1, [sp, #8]
    10a8:	add	x0, x1, x0
    10ac:	mov	w1, #0x39c                 	// #924
    10b0:	str	w1, [x0]
    10b4:	ldrsw	x0, [sp, #36]
    10b8:	lsl	x0, x0, #2
    10bc:	ldr	x1, [sp]
    10c0:	add	x0, x1, x0
    10c4:	mov	w1, #0x1                   	// #1
    10c8:	str	w1, [x0]
    10cc:	ldrsw	x0, [sp, #36]
    10d0:	lsl	x0, x0, #2
    10d4:	ldr	x1, [sp, #8]
    10d8:	add	x0, x1, x0
    10dc:	ldr	w1, [sp, #20]
    10e0:	str	w1, [x0]
    10e4:	mov	w0, #0x1                   	// #1
    10e8:	str	w0, [sp, #56]
    10ec:	b	1514 <grub_get_node_path+0x550>
    10f0:	ldr	w1, [sp, #20]
    10f4:	ldr	w0, [sp, #52]
    10f8:	sub	w0, w1, w0
    10fc:	str	w0, [sp, #20]
    1100:	ldr	w1, [sp, #20]
    1104:	ldr	w0, [sp, #52]
    1108:	cmp	w1, w0
    110c:	b.cs	1170 <grub_get_node_path+0x1ac>  // b.hs, b.nlast
    1110:	ldr	w0, [sp, #36]
    1114:	add	w1, w0, #0x1
    1118:	str	w1, [sp, #36]
    111c:	sxtw	x0, w0
    1120:	lsl	x0, x0, #2
    1124:	ldr	x1, [sp, #8]
    1128:	add	x0, x1, x0
    112c:	mov	w1, #0x39d                 	// #925
    1130:	str	w1, [x0]
    1134:	ldrsw	x0, [sp, #36]
    1138:	lsl	x0, x0, #2
    113c:	ldr	x1, [sp]
    1140:	add	x0, x1, x0
    1144:	mov	w1, #0x2                   	// #2
    1148:	str	w1, [x0]
    114c:	ldrsw	x0, [sp, #36]
    1150:	lsl	x0, x0, #2
    1154:	ldr	x1, [sp, #8]
    1158:	add	x0, x1, x0
    115c:	ldr	w1, [sp, #20]
    1160:	str	w1, [x0]
    1164:	mov	w0, #0x1                   	// #1
    1168:	str	w0, [sp, #56]
    116c:	b	1514 <grub_get_node_path+0x550>
    1170:	ldr	w1, [sp, #20]
    1174:	ldr	w0, [sp, #52]
    1178:	sub	w0, w1, w0
    117c:	str	w0, [sp, #20]
    1180:	ldr	w1, [sp, #20]
    1184:	ldr	w0, [sp, #44]
    1188:	cmp	w1, w0
    118c:	b.cs	1260 <grub_get_node_path+0x29c>  // b.hs, b.nlast
    1190:	ldr	w0, [sp, #36]
    1194:	add	w1, w0, #0x1
    1198:	str	w1, [sp, #36]
    119c:	sxtw	x0, w0
    11a0:	lsl	x0, x0, #2
    11a4:	ldr	x1, [sp, #8]
    11a8:	add	x0, x1, x0
    11ac:	mov	w1, #0x39e                 	// #926
    11b0:	str	w1, [x0]
    11b4:	ldrsw	x0, [sp, #36]
    11b8:	lsl	x0, x0, #2
    11bc:	ldr	x1, [sp]
    11c0:	add	x0, x1, x0
    11c4:	mov	w1, #0x3                   	// #3
    11c8:	str	w1, [x0]
    11cc:	ldr	w0, [sp, #36]
    11d0:	add	w1, w0, #0x1
    11d4:	str	w1, [sp, #36]
    11d8:	sxtw	x0, w0
    11dc:	lsl	x0, x0, #2
    11e0:	ldr	x1, [sp, #8]
    11e4:	add	x0, x1, x0
    11e8:	ldr	w2, [sp, #20]
    11ec:	ldr	w1, [sp, #52]
    11f0:	udiv	w1, w2, w1
    11f4:	str	w1, [x0]
    11f8:	ldrsw	x0, [sp, #36]
    11fc:	lsl	x0, x0, #2
    1200:	sub	x0, x0, #0x4
    1204:	ldr	x1, [sp, #8]
    1208:	add	x0, x1, x0
    120c:	ldr	w1, [x0]
    1210:	ldrsw	x0, [sp, #36]
    1214:	lsl	x0, x0, #2
    1218:	ldr	x2, [sp]
    121c:	add	x0, x2, x0
    1220:	add	w1, w1, #0x4
    1224:	str	w1, [x0]
    1228:	ldrsw	x0, [sp, #36]
    122c:	lsl	x0, x0, #2
    1230:	ldr	x1, [sp, #8]
    1234:	add	x1, x1, x0
    1238:	ldr	w0, [sp, #20]
    123c:	ldr	w2, [sp, #52]
    1240:	udiv	w3, w0, w2
    1244:	ldr	w2, [sp, #52]
    1248:	mul	w2, w3, w2
    124c:	sub	w0, w0, w2
    1250:	str	w0, [x1]
    1254:	mov	w0, #0x2                   	// #2
    1258:	str	w0, [sp, #56]
    125c:	b	1514 <grub_get_node_path+0x550>
    1260:	ldr	w1, [sp, #20]
    1264:	ldr	w0, [sp, #44]
    1268:	sub	w0, w1, w0
    126c:	str	w0, [sp, #20]
    1270:	ldr	w1, [sp, #20]
    1274:	ldr	w0, [sp, #44]
    1278:	cmp	w1, w0
    127c:	b.cs	135c <grub_get_node_path+0x398>  // b.hs, b.nlast
    1280:	ldr	w0, [sp, #36]
    1284:	add	w1, w0, #0x1
    1288:	str	w1, [sp, #36]
    128c:	sxtw	x0, w0
    1290:	lsl	x0, x0, #2
    1294:	ldr	x1, [sp, #8]
    1298:	add	x0, x1, x0
    129c:	mov	w1, #0x39f                 	// #927
    12a0:	str	w1, [x0]
    12a4:	ldrsw	x0, [sp, #36]
    12a8:	lsl	x0, x0, #2
    12ac:	ldr	x1, [sp]
    12b0:	add	x0, x1, x0
    12b4:	ldr	w1, [sp, #48]
    12b8:	add	w1, w1, #0x4
    12bc:	str	w1, [x0]
    12c0:	ldr	w0, [sp, #36]
    12c4:	add	w1, w0, #0x1
    12c8:	str	w1, [sp, #36]
    12cc:	sxtw	x0, w0
    12d0:	lsl	x0, x0, #2
    12d4:	ldr	x1, [sp, #8]
    12d8:	add	x0, x1, x0
    12dc:	ldr	w2, [sp, #20]
    12e0:	ldr	w1, [sp, #52]
    12e4:	udiv	w1, w2, w1
    12e8:	str	w1, [x0]
    12ec:	ldrsw	x0, [sp, #36]
    12f0:	lsl	x0, x0, #2
    12f4:	sub	x0, x0, #0x4
    12f8:	ldr	x1, [sp, #8]
    12fc:	add	x0, x1, x0
    1300:	ldr	w1, [x0]
    1304:	ldr	w0, [sp, #48]
    1308:	add	w1, w1, w0
    130c:	ldrsw	x0, [sp, #36]
    1310:	lsl	x0, x0, #2
    1314:	ldr	x2, [sp]
    1318:	add	x0, x2, x0
    131c:	add	w1, w1, #0x5
    1320:	str	w1, [x0]
    1324:	ldrsw	x0, [sp, #36]
    1328:	lsl	x0, x0, #2
    132c:	ldr	x1, [sp, #8]
    1330:	add	x1, x1, x0
    1334:	ldr	w0, [sp, #20]
    1338:	ldr	w2, [sp, #52]
    133c:	udiv	w3, w0, w2
    1340:	ldr	w2, [sp, #52]
    1344:	mul	w2, w3, w2
    1348:	sub	w0, w0, w2
    134c:	str	w0, [x1]
    1350:	mov	w0, #0x2                   	// #2
    1354:	str	w0, [sp, #56]
    1358:	b	1514 <grub_get_node_path+0x550>
    135c:	ldr	w1, [sp, #20]
    1360:	ldr	w0, [sp, #44]
    1364:	sub	w0, w1, w0
    1368:	str	w0, [sp, #20]
    136c:	ldr	w1, [sp, #20]
    1370:	ldr	w0, [sp, #40]
    1374:	cmp	w1, w0
    1378:	b.cs	1510 <grub_get_node_path+0x54c>  // b.hs, b.nlast
    137c:	ldr	w0, [sp, #36]
    1380:	add	w1, w0, #0x1
    1384:	str	w1, [sp, #36]
    1388:	sxtw	x0, w0
    138c:	lsl	x0, x0, #2
    1390:	ldr	x1, [sp, #8]
    1394:	add	x0, x1, x0
    1398:	mov	w1, #0x3a0                 	// #928
    139c:	str	w1, [x0]
    13a0:	ldr	w0, [sp, #48]
    13a4:	lsl	w1, w0, #1
    13a8:	ldrsw	x0, [sp, #36]
    13ac:	lsl	x0, x0, #2
    13b0:	ldr	x2, [sp]
    13b4:	add	x0, x2, x0
    13b8:	add	w1, w1, #0x5
    13bc:	str	w1, [x0]
    13c0:	ldr	w0, [sp, #36]
    13c4:	add	w1, w0, #0x1
    13c8:	str	w1, [sp, #36]
    13cc:	sxtw	x0, w0
    13d0:	lsl	x0, x0, #2
    13d4:	ldr	x1, [sp, #8]
    13d8:	add	x0, x1, x0
    13dc:	ldr	w2, [sp, #20]
    13e0:	ldr	w1, [sp, #44]
    13e4:	udiv	w1, w2, w1
    13e8:	str	w1, [x0]
    13ec:	ldr	w0, [sp, #48]
    13f0:	add	w0, w0, #0x3
    13f4:	lsl	w2, w0, #1
    13f8:	ldrsw	x0, [sp, #36]
    13fc:	lsl	x0, x0, #2
    1400:	sub	x0, x0, #0x4
    1404:	ldr	x1, [sp, #8]
    1408:	add	x0, x1, x0
    140c:	ldr	w1, [x0]
    1410:	ldr	w0, [sp, #48]
    1414:	add	w0, w0, #0x1
    1418:	mul	w1, w1, w0
    141c:	ldrsw	x0, [sp, #36]
    1420:	lsl	x0, x0, #2
    1424:	ldr	x3, [sp]
    1428:	add	x0, x3, x0
    142c:	add	w1, w2, w1
    1430:	str	w1, [x0]
    1434:	ldr	w1, [sp, #20]
    1438:	ldr	w0, [sp, #52]
    143c:	udiv	w0, w1, w0
    1440:	ldr	w1, [sp, #36]
    1444:	add	w2, w1, #0x1
    1448:	str	w2, [sp, #36]
    144c:	sxtw	x1, w1
    1450:	lsl	x1, x1, #2
    1454:	ldr	x2, [sp, #8]
    1458:	add	x1, x2, x1
    145c:	ldr	w2, [sp, #48]
    1460:	udiv	w3, w0, w2
    1464:	ldr	w2, [sp, #48]
    1468:	mul	w2, w3, w2
    146c:	sub	w0, w0, w2
    1470:	str	w0, [x1]
    1474:	ldr	w0, [sp, #48]
    1478:	lsl	w1, w0, #1
    147c:	ldrsw	x0, [sp, #36]
    1480:	lsl	x0, x0, #2
    1484:	sub	x0, x0, #0x8
    1488:	ldr	x2, [sp, #8]
    148c:	add	x0, x2, x0
    1490:	ldr	w2, [x0]
    1494:	ldr	w0, [sp, #48]
    1498:	add	w0, w0, #0x1
    149c:	mul	w0, w2, w0
    14a0:	add	w1, w1, w0
    14a4:	ldrsw	x0, [sp, #36]
    14a8:	lsl	x0, x0, #2
    14ac:	sub	x0, x0, #0x4
    14b0:	ldr	x2, [sp, #8]
    14b4:	add	x0, x2, x0
    14b8:	ldr	w0, [x0]
    14bc:	add	w1, w1, w0
    14c0:	ldrsw	x0, [sp, #36]
    14c4:	lsl	x0, x0, #2
    14c8:	ldr	x2, [sp]
    14cc:	add	x0, x2, x0
    14d0:	add	w1, w1, #0x7
    14d4:	str	w1, [x0]
    14d8:	ldrsw	x0, [sp, #36]
    14dc:	lsl	x0, x0, #2
    14e0:	ldr	x1, [sp, #8]
    14e4:	add	x1, x1, x0
    14e8:	ldr	w0, [sp, #20]
    14ec:	ldr	w2, [sp, #52]
    14f0:	udiv	w3, w0, w2
    14f4:	ldr	w2, [sp, #52]
    14f8:	mul	w2, w3, w2
    14fc:	sub	w0, w0, w2
    1500:	str	w0, [x1]
    1504:	mov	w0, #0x3                   	// #3
    1508:	str	w0, [sp, #56]
    150c:	b	1514 <grub_get_node_path+0x550>
    1510:	nop
    1514:	ldr	w0, [sp, #56]
    1518:	add	sp, sp, #0x40
    151c:	ret

0000000000001520 <grub_f2fs_read_node>:
    1520:	stp	x29, x30, [sp, #-64]!
    1524:	mov	x29, sp
    1528:	str	x0, [sp, #40]
    152c:	str	w1, [sp, #36]
    1530:	str	x2, [sp, #24]
    1534:	ldr	w1, [sp, #36]
    1538:	ldr	x0, [sp, #40]
    153c:	bl	e30 <get_node_blkaddr>
    1540:	str	w0, [sp, #60]
    1544:	ldr	w0, [sp, #60]
    1548:	cmp	w0, #0x0
    154c:	b.ne	1564 <grub_f2fs_read_node+0x44>  // b.any
    1550:	adrp	x0, 0 <grub_fs_register>
    1554:	add	x0, x0, #0x0
    1558:	ldr	x0, [x0]
    155c:	ldr	w0, [x0]
    1560:	b	1574 <grub_f2fs_read_node+0x54>
    1564:	ldr	x2, [sp, #24]
    1568:	ldr	w1, [sp, #60]
    156c:	ldr	x0, [sp, #40]
    1570:	bl	604 <grub_f2fs_block_read>
    1574:	ldp	x29, x30, [sp], #64
    1578:	ret
    157c:	nop
	...

0000000000001588 <grub_f2fs_mount>:
    1588:	stp	x29, x30, [sp, #-48]!
    158c:	mov	x29, sp
    1590:	str	x0, [sp, #24]
    1594:	mov	x0, #0x2ac8                	// #10952
    1598:	bl	0 <grub_malloc>
    159c:	str	x0, [sp, #40]
    15a0:	ldr	x0, [sp, #40]
    15a4:	cmp	x0, #0x0
    15a8:	b.ne	15b4 <grub_f2fs_mount+0x2c>  // b.any
    15ac:	mov	x0, #0x0                   	// #0
    15b0:	b	1740 <grub_f2fs_mount+0x1b8>
    15b4:	ldr	x0, [sp, #40]
    15b8:	ldr	x1, [sp, #24]
    15bc:	str	x1, [x0, #6808]
    15c0:	mov	x1, #0x2                   	// #2
    15c4:	ldr	x0, [sp, #40]
    15c8:	bl	848 <grub_f2fs_read_sb>
    15cc:	cmp	w0, #0x0
    15d0:	b.eq	1618 <grub_f2fs_mount+0x90>  // b.none
    15d4:	mov	x1, #0xa                   	// #10
    15d8:	ldr	x0, [sp, #40]
    15dc:	bl	848 <grub_f2fs_read_sb>
    15e0:	cmp	w0, #0x0
    15e4:	b.eq	1618 <grub_f2fs_mount+0x90>  // b.none
    15e8:	adrp	x0, 0 <grub_fs_register>
    15ec:	add	x0, x0, #0x0
    15f0:	ldr	x0, [x0]
    15f4:	ldr	w0, [x0]
    15f8:	cmp	w0, #0x0
    15fc:	b.ne	1718 <grub_f2fs_mount+0x190>  // b.any
    1600:	adrp	x0, 0 <grub_fs_register>
    1604:	add	x0, x0, #0x0
    1608:	ldr	x1, [x0]
    160c:	mov	w0, #0x9                   	// #9
    1610:	bl	0 <grub_error>
    1614:	b	1718 <grub_f2fs_mount+0x190>
    1618:	ldr	x0, [sp, #40]
    161c:	ldr	w1, [x0, #96]
    1620:	ldr	x0, [sp, #40]
    1624:	str	w1, [x0, #6276]
    1628:	ldr	x0, [sp, #40]
    162c:	ldr	w1, [x0, #76]
    1630:	ldr	x0, [sp, #40]
    1634:	str	w1, [x0, #6284]
    1638:	ldr	x0, [sp, #40]
    163c:	ldr	w1, [x0, #84]
    1640:	ldr	x0, [sp, #40]
    1644:	str	w1, [x0, #6288]
    1648:	ldr	x0, [sp, #40]
    164c:	ldr	w0, [x0, #20]
    1650:	mov	w1, #0x1                   	// #1
    1654:	lsl	w0, w1, w0
    1658:	mov	w1, w0
    165c:	ldr	x0, [sp, #40]
    1660:	str	w1, [x0, #6280]
    1664:	ldr	x0, [sp, #40]
    1668:	bl	a84 <grub_f2fs_read_cp>
    166c:	str	w0, [sp, #36]
    1670:	ldr	w0, [sp, #36]
    1674:	cmp	w0, #0x0
    1678:	b.ne	1720 <grub_f2fs_mount+0x198>  // b.any
    167c:	ldr	x0, [sp, #40]
    1680:	bl	55c <nat_bitmap_ptr>
    1684:	mov	x1, x0
    1688:	ldr	x0, [sp, #40]
    168c:	str	x1, [x0, #6800]
    1690:	ldr	x0, [sp, #40]
    1694:	bl	c38 <get_nat_journal>
    1698:	str	w0, [sp, #36]
    169c:	ldr	w0, [sp, #36]
    16a0:	cmp	w0, #0x0
    16a4:	b.ne	1728 <grub_f2fs_mount+0x1a0>  // b.any
    16a8:	ldr	x0, [sp, #40]
    16ac:	ldr	x1, [sp, #40]
    16b0:	str	x1, [x0, #6824]
    16b4:	ldr	x0, [sp, #40]
    16b8:	ldr	w1, [x0, #6276]
    16bc:	ldr	x0, [sp, #40]
    16c0:	str	w1, [x0, #10944]
    16c4:	ldr	x0, [sp, #40]
    16c8:	mov	w1, #0x1                   	// #1
    16cc:	str	w1, [x0, #10948]
    16d0:	ldr	x1, [sp, #40]
    16d4:	mov	x0, #0x1ab0                	// #6832
    16d8:	add	x1, x1, x0
    16dc:	ldr	x0, [sp, #40]
    16e0:	str	x1, [x0, #6816]
    16e4:	ldr	x0, [sp, #40]
    16e8:	ldr	w1, [x0, #6276]
    16ec:	ldr	x0, [sp, #40]
    16f0:	ldr	x0, [x0, #6816]
    16f4:	mov	x2, x0
    16f8:	ldr	x0, [sp, #40]
    16fc:	bl	1520 <grub_f2fs_read_node>
    1700:	str	w0, [sp, #36]
    1704:	ldr	w0, [sp, #36]
    1708:	cmp	w0, #0x0
    170c:	b.ne	1730 <grub_f2fs_mount+0x1a8>  // b.any
    1710:	ldr	x0, [sp, #40]
    1714:	b	1740 <grub_f2fs_mount+0x1b8>
    1718:	nop
    171c:	b	1734 <grub_f2fs_mount+0x1ac>
    1720:	nop
    1724:	b	1734 <grub_f2fs_mount+0x1ac>
    1728:	nop
    172c:	b	1734 <grub_f2fs_mount+0x1ac>
    1730:	nop
    1734:	ldr	x0, [sp, #40]
    1738:	bl	0 <grub_free>
    173c:	mov	x0, #0x0                   	// #0
    1740:	ldp	x29, x30, [sp], #48
    1744:	ret
	...

0000000000001758 <grub_f2fs_get_block>:
    1758:	stp	x29, x30, [sp, #-144]!
    175c:	mov	x29, sp
    1760:	str	x19, [sp, #16]
    1764:	str	x0, [sp, #40]
    1768:	str	x1, [sp, #32]
    176c:	ldr	x0, [sp, #40]
    1770:	ldr	x0, [x0]
    1774:	str	x0, [sp, #128]
    1778:	ldr	x0, [sp, #40]
    177c:	add	x0, x0, #0x8
    1780:	str	x0, [sp, #120]
    1784:	mov	w0, #0xffffffff            	// #-1
    1788:	str	w0, [sp, #140]
    178c:	ldr	x0, [sp, #32]
    1790:	mov	w4, w0
    1794:	add	x1, sp, #0x48
    1798:	add	x0, sp, #0x58
    179c:	mov	x3, x1
    17a0:	mov	x2, x0
    17a4:	mov	w1, w4
    17a8:	ldr	x0, [sp, #120]
    17ac:	bl	fc4 <grub_get_node_path>
    17b0:	str	w0, [sp, #116]
    17b4:	ldr	w0, [sp, #116]
    17b8:	cmp	w0, #0x0
    17bc:	b.ge	17c8 <grub_f2fs_get_block+0x70>  // b.tcont
    17c0:	mov	x0, #0xffffffffffffffff    	// #-1
    17c4:	b	1910 <grub_f2fs_get_block+0x1b8>
    17c8:	ldr	w0, [sp, #116]
    17cc:	cmp	w0, #0x0
    17d0:	b.ne	17f8 <grub_f2fs_get_block+0xa0>  // b.any
    17d4:	ldr	w0, [sp, #88]
    17d8:	ldr	x1, [sp, #120]
    17dc:	mov	w0, w0
    17e0:	add	x0, x0, #0x58
    17e4:	lsl	x0, x0, #2
    17e8:	add	x0, x1, x0
    17ec:	ldr	w0, [x0, #8]
    17f0:	mov	w0, w0
    17f4:	b	1910 <grub_f2fs_get_block+0x1b8>
    17f8:	mov	x0, #0x1000                	// #4096
    17fc:	bl	0 <grub_malloc>
    1800:	str	x0, [sp, #104]
    1804:	ldr	x0, [sp, #104]
    1808:	cmp	x0, #0x0
    180c:	b.ne	1818 <grub_f2fs_get_block+0xc0>  // b.any
    1810:	mov	x0, #0xffffffffffffffff    	// #-1
    1814:	b	1910 <grub_f2fs_get_block+0x1b8>
    1818:	ldr	x0, [sp, #40]
    181c:	add	x0, x0, #0x8
    1820:	ldr	w1, [sp, #88]
    1824:	mov	w2, #0x1                   	// #1
    1828:	bl	5b0 <get_node_id>
    182c:	str	w0, [sp, #60]
    1830:	mov	w0, #0x1                   	// #1
    1834:	str	w0, [sp, #136]
    1838:	b	18cc <grub_f2fs_get_block+0x174>
    183c:	ldrsw	x0, [sp, #136]
    1840:	lsl	x0, x0, #2
    1844:	add	x1, sp, #0x38
    1848:	ldr	w0, [x1, x0]
    184c:	ldr	x2, [sp, #104]
    1850:	mov	w1, w0
    1854:	ldr	x0, [sp, #128]
    1858:	bl	1520 <grub_f2fs_read_node>
    185c:	adrp	x0, 0 <grub_fs_register>
    1860:	add	x0, x0, #0x0
    1864:	ldr	x0, [x0]
    1868:	ldr	w0, [x0]
    186c:	cmp	w0, #0x0
    1870:	b.ne	1900 <grub_f2fs_get_block+0x1a8>  // b.any
    1874:	ldr	w1, [sp, #136]
    1878:	ldr	w0, [sp, #116]
    187c:	cmp	w1, w0
    1880:	b.ge	18c0 <grub_f2fs_get_block+0x168>  // b.tcont
    1884:	ldrsw	x0, [sp, #136]
    1888:	lsl	x0, x0, #2
    188c:	add	x1, sp, #0x58
    1890:	ldr	w0, [x1, x0]
    1894:	mov	w1, w0
    1898:	ldr	w0, [sp, #136]
    189c:	add	w19, w0, #0x1
    18a0:	mov	w2, #0x0                   	// #0
    18a4:	ldr	x0, [sp, #104]
    18a8:	bl	5b0 <get_node_id>
    18ac:	mov	w2, w0
    18b0:	sxtw	x0, w19
    18b4:	lsl	x0, x0, #2
    18b8:	add	x1, sp, #0x38
    18bc:	str	w2, [x1, x0]
    18c0:	ldr	w0, [sp, #136]
    18c4:	add	w0, w0, #0x1
    18c8:	str	w0, [sp, #136]
    18cc:	ldr	w1, [sp, #136]
    18d0:	ldr	w0, [sp, #116]
    18d4:	cmp	w1, w0
    18d8:	b.le	183c <grub_f2fs_get_block+0xe4>
    18dc:	ldrsw	x0, [sp, #116]
    18e0:	lsl	x0, x0, #2
    18e4:	add	x1, sp, #0x58
    18e8:	ldr	w1, [x1, x0]
    18ec:	ldr	x0, [sp, #104]
    18f0:	mov	w1, w1
    18f4:	ldr	w0, [x0, x1, lsl #2]
    18f8:	str	w0, [sp, #140]
    18fc:	b	1904 <grub_f2fs_get_block+0x1ac>
    1900:	nop
    1904:	ldr	x0, [sp, #104]
    1908:	bl	0 <grub_free>
    190c:	ldr	w0, [sp, #140]
    1910:	ldr	x19, [sp, #16]
    1914:	ldp	x29, x30, [sp], #144
    1918:	ret
    191c:	nop
	...

0000000000001928 <grub_f2fs_read_file>:
    1928:	sub	sp, sp, #0x80
    192c:	stp	x29, x30, [sp, #32]
    1930:	add	x29, sp, #0x20
    1934:	str	x0, [sp, #88]
    1938:	str	x1, [sp, #80]
    193c:	str	x2, [sp, #72]
    1940:	str	x3, [sp, #64]
    1944:	str	x4, [sp, #56]
    1948:	str	x5, [sp, #48]
    194c:	ldr	x0, [sp, #88]
    1950:	add	x0, x0, #0x8
    1954:	str	x0, [sp, #120]
    1958:	ldr	x0, [sp, #120]
    195c:	bl	464 <grub_f2fs_file_size>
    1960:	str	x0, [sp, #112]
    1964:	ldr	x0, [sp, #120]
    1968:	bl	44c <get_inline_addr>
    196c:	str	x0, [sp, #104]
    1970:	ldr	x0, [sp, #120]
    1974:	ldrb	w0, [x0, #3]
    1978:	and	w0, w0, #0x2
    197c:	cmp	w0, #0x0
    1980:	b.eq	19e4 <grub_f2fs_read_file+0xbc>  // b.none
    1984:	ldr	x0, [sp, #112]
    1988:	cmp	x0, #0xda0
    198c:	b.ls	1998 <grub_f2fs_read_file+0x70>  // b.plast
    1990:	mov	x0, #0xffffffffffffffff    	// #-1
    1994:	b	1a30 <grub_f2fs_read_file+0x108>
    1998:	ldr	x1, [sp, #112]
    199c:	ldr	x0, [sp, #64]
    19a0:	sub	x0, x1, x0
    19a4:	ldr	x1, [sp, #56]
    19a8:	cmp	x1, x0
    19ac:	b.ls	19c0 <grub_f2fs_read_file+0x98>  // b.plast
    19b0:	ldr	x1, [sp, #112]
    19b4:	ldr	x0, [sp, #64]
    19b8:	sub	x0, x1, x0
    19bc:	str	x0, [sp, #56]
    19c0:	ldr	x1, [sp, #104]
    19c4:	ldr	x0, [sp, #64]
    19c8:	add	x0, x1, x0
    19cc:	ldr	x2, [sp, #56]
    19d0:	mov	x1, x0
    19d4:	ldr	x0, [sp, #48]
    19d8:	bl	58 <grub_memcpy>
    19dc:	ldr	x0, [sp, #56]
    19e0:	b	1a30 <grub_f2fs_read_file+0x108>
    19e4:	ldr	x0, [sp, #88]
    19e8:	ldr	x0, [x0]
    19ec:	ldr	x8, [x0, #6808]
    19f0:	str	xzr, [sp, #16]
    19f4:	mov	w0, #0x3                   	// #3
    19f8:	str	w0, [sp, #8]
    19fc:	ldr	x0, [sp, #112]
    1a00:	str	x0, [sp]
    1a04:	adrp	x0, 0 <grub_fs_register>
    1a08:	add	x0, x0, #0x0
    1a0c:	ldr	x7, [x0]
    1a10:	ldr	x6, [sp, #48]
    1a14:	ldr	x5, [sp, #56]
    1a18:	ldr	x4, [sp, #64]
    1a1c:	ldr	x3, [sp, #72]
    1a20:	ldr	x2, [sp, #80]
    1a24:	ldr	x1, [sp, #88]
    1a28:	mov	x0, x8
    1a2c:	bl	0 <grub_fshelp_read_file>
    1a30:	ldp	x29, x30, [sp, #32]
    1a34:	add	sp, sp, #0x80
    1a38:	ret
    1a3c:	nop
	...

0000000000001a48 <grub_f2fs_read_symlink>:
    1a48:	stp	x29, x30, [sp, #-64]!
    1a4c:	mov	x29, sp
    1a50:	str	x0, [sp, #24]
    1a54:	ldr	x0, [sp, #24]
    1a58:	str	x0, [sp, #56]
    1a5c:	ldr	x0, [sp, #56]
    1a60:	ldr	w0, [x0, #4124]
    1a64:	cmp	w0, #0x0
    1a68:	b.ne	1ab0 <grub_f2fs_read_symlink+0x68>  // b.any
    1a6c:	ldr	x0, [sp, #56]
    1a70:	ldr	x3, [x0]
    1a74:	ldr	x0, [sp, #56]
    1a78:	ldr	w1, [x0, #4120]
    1a7c:	ldr	x0, [sp, #56]
    1a80:	add	x0, x0, #0x8
    1a84:	mov	x2, x0
    1a88:	mov	x0, x3
    1a8c:	bl	1520 <grub_f2fs_read_node>
    1a90:	adrp	x0, 0 <grub_fs_register>
    1a94:	add	x0, x0, #0x0
    1a98:	ldr	x0, [x0]
    1a9c:	ldr	w0, [x0]
    1aa0:	cmp	w0, #0x0
    1aa4:	b.eq	1ab0 <grub_f2fs_read_symlink+0x68>  // b.none
    1aa8:	mov	x0, #0x0                   	// #0
    1aac:	b	1b3c <grub_f2fs_read_symlink+0xf4>
    1ab0:	ldr	x0, [sp, #56]
    1ab4:	add	x0, x0, #0x8
    1ab8:	bl	464 <grub_f2fs_file_size>
    1abc:	str	x0, [sp, #48]
    1ac0:	ldr	x0, [sp, #48]
    1ac4:	add	x0, x0, #0x1
    1ac8:	bl	0 <grub_malloc>
    1acc:	str	x0, [sp, #40]
    1ad0:	ldr	x0, [sp, #40]
    1ad4:	cmp	x0, #0x0
    1ad8:	b.ne	1ae4 <grub_f2fs_read_symlink+0x9c>  // b.any
    1adc:	mov	x0, #0x0                   	// #0
    1ae0:	b	1b3c <grub_f2fs_read_symlink+0xf4>
    1ae4:	ldr	x5, [sp, #40]
    1ae8:	ldr	x4, [sp, #48]
    1aec:	mov	x3, #0x0                   	// #0
    1af0:	mov	x2, #0x0                   	// #0
    1af4:	mov	x1, #0x0                   	// #0
    1af8:	ldr	x0, [sp, #56]
    1afc:	bl	1928 <grub_f2fs_read_file>
    1b00:	adrp	x0, 0 <grub_fs_register>
    1b04:	add	x0, x0, #0x0
    1b08:	ldr	x0, [x0]
    1b0c:	ldr	w0, [x0]
    1b10:	cmp	w0, #0x0
    1b14:	b.eq	1b28 <grub_f2fs_read_symlink+0xe0>  // b.none
    1b18:	ldr	x0, [sp, #40]
    1b1c:	bl	0 <grub_free>
    1b20:	mov	x0, #0x0                   	// #0
    1b24:	b	1b3c <grub_f2fs_read_symlink+0xf4>
    1b28:	ldr	x1, [sp, #40]
    1b2c:	ldr	x0, [sp, #48]
    1b30:	add	x0, x1, x0
    1b34:	strb	wzr, [x0]
    1b38:	ldr	x0, [sp, #40]
    1b3c:	ldp	x29, x30, [sp], #64
    1b40:	ret
    1b44:	nop
	...

0000000000001b50 <grub_f2fs_check_dentries>:
    1b50:	stp	x29, x30, [sp, #-80]!
    1b54:	mov	x29, sp
    1b58:	str	x0, [sp, #24]
    1b5c:	str	wzr, [sp, #76]
    1b60:	b	1d6c <grub_f2fs_check_dentries+0x21c>
    1b64:	str	wzr, [sp, #72]
    1b68:	ldr	x0, [sp, #24]
    1b6c:	ldr	x0, [x0, #24]
    1b70:	mov	x1, x0
    1b74:	ldr	w0, [sp, #76]
    1b78:	bl	408 <grub_f2fs_test_bit_le>
    1b7c:	cmp	w0, #0x0
    1b80:	b.ne	1b94 <grub_f2fs_check_dentries+0x44>  // b.any
    1b84:	ldr	w0, [sp, #76]
    1b88:	add	w0, w0, #0x1
    1b8c:	str	w0, [sp, #76]
    1b90:	b	1d6c <grub_f2fs_check_dentries+0x21c>
    1b94:	ldr	x0, [sp, #24]
    1b98:	ldr	x2, [x0, #40]
    1b9c:	ldrsw	x1, [sp, #76]
    1ba0:	mov	x0, x1
    1ba4:	lsl	x0, x0, #1
    1ba8:	add	x0, x0, x1
    1bac:	lsl	x0, x0, #2
    1bb0:	sub	x0, x0, x1
    1bb4:	add	x0, x2, x0
    1bb8:	ldrb	w0, [x0, #10]
    1bbc:	str	w0, [sp, #68]
    1bc0:	ldr	x0, [sp, #24]
    1bc4:	ldr	x2, [x0, #40]
    1bc8:	ldrsw	x1, [sp, #76]
    1bcc:	mov	x0, x1
    1bd0:	lsl	x0, x0, #1
    1bd4:	add	x0, x0, x1
    1bd8:	lsl	x0, x0, #2
    1bdc:	sub	x0, x0, x1
    1be0:	add	x0, x2, x0
    1be4:	ldrh	w0, [x0, #8]
    1be8:	str	w0, [sp, #64]
    1bec:	ldr	w0, [sp, #64]
    1bf0:	add	w0, w0, #0x1
    1bf4:	sxtw	x0, w0
    1bf8:	bl	0 <grub_malloc>
    1bfc:	str	x0, [sp, #56]
    1c00:	ldr	x0, [sp, #56]
    1c04:	cmp	x0, #0x0
    1c08:	b.ne	1c14 <grub_f2fs_check_dentries+0xc4>  // b.any
    1c0c:	mov	w0, #0x0                   	// #0
    1c10:	b	1d84 <grub_f2fs_check_dentries+0x234>
    1c14:	ldr	x0, [sp, #24]
    1c18:	ldr	x1, [x0, #32]
    1c1c:	ldrsw	x0, [sp, #76]
    1c20:	lsl	x0, x0, #3
    1c24:	add	x0, x1, x0
    1c28:	ldrsw	x1, [sp, #64]
    1c2c:	mov	x2, x1
    1c30:	mov	x1, x0
    1c34:	ldr	x0, [sp, #56]
    1c38:	bl	58 <grub_memcpy>
    1c3c:	ldrsw	x0, [sp, #64]
    1c40:	ldr	x1, [sp, #56]
    1c44:	add	x0, x1, x0
    1c48:	strb	wzr, [x0]
    1c4c:	mov	x0, #0x1020                	// #4128
    1c50:	bl	0 <grub_malloc>
    1c54:	str	x0, [sp, #48]
    1c58:	ldr	x0, [sp, #48]
    1c5c:	cmp	x0, #0x0
    1c60:	b.ne	1c74 <grub_f2fs_check_dentries+0x124>  // b.any
    1c64:	ldr	x0, [sp, #56]
    1c68:	bl	0 <grub_free>
    1c6c:	mov	w0, #0x0                   	// #0
    1c70:	b	1d84 <grub_f2fs_check_dentries+0x234>
    1c74:	ldr	w0, [sp, #68]
    1c78:	cmp	w0, #0x2
    1c7c:	b.ne	1c8c <grub_f2fs_check_dentries+0x13c>  // b.any
    1c80:	mov	w0, #0x2                   	// #2
    1c84:	str	w0, [sp, #72]
    1c88:	b	1cb8 <grub_f2fs_check_dentries+0x168>
    1c8c:	ldr	w0, [sp, #68]
    1c90:	cmp	w0, #0x7
    1c94:	b.ne	1ca4 <grub_f2fs_check_dentries+0x154>  // b.any
    1c98:	mov	w0, #0x3                   	// #3
    1c9c:	str	w0, [sp, #72]
    1ca0:	b	1cb8 <grub_f2fs_check_dentries+0x168>
    1ca4:	ldr	w0, [sp, #68]
    1ca8:	cmp	w0, #0x1
    1cac:	b.ne	1cb8 <grub_f2fs_check_dentries+0x168>  // b.any
    1cb0:	mov	w0, #0x1                   	// #1
    1cb4:	str	w0, [sp, #72]
    1cb8:	ldr	x0, [sp, #24]
    1cbc:	ldr	x1, [x0]
    1cc0:	ldr	x0, [sp, #48]
    1cc4:	str	x1, [x0]
    1cc8:	ldr	x0, [sp, #24]
    1ccc:	ldr	x2, [x0, #40]
    1cd0:	ldrsw	x1, [sp, #76]
    1cd4:	mov	x0, x1
    1cd8:	lsl	x0, x0, #1
    1cdc:	add	x0, x0, x1
    1ce0:	lsl	x0, x0, #2
    1ce4:	sub	x0, x0, x1
    1ce8:	add	x0, x2, x0
    1cec:	ldr	w1, [x0, #4]
    1cf0:	ldr	x0, [sp, #48]
    1cf4:	str	w1, [x0, #4120]
    1cf8:	ldr	x0, [sp, #48]
    1cfc:	str	wzr, [x0, #4124]
    1d00:	ldr	x0, [sp, #24]
    1d04:	ldr	x4, [x0, #8]
    1d08:	ldr	x0, [sp, #24]
    1d0c:	ldr	x0, [x0, #16]
    1d10:	mov	x3, x0
    1d14:	ldr	x2, [sp, #48]
    1d18:	ldr	w1, [sp, #72]
    1d1c:	ldr	x0, [sp, #56]
    1d20:	blr	x4
    1d24:	str	w0, [sp, #44]
    1d28:	ldr	x0, [sp, #56]
    1d2c:	bl	0 <grub_free>
    1d30:	ldr	w0, [sp, #44]
    1d34:	cmp	w0, #0x0
    1d38:	b.eq	1d44 <grub_f2fs_check_dentries+0x1f4>  // b.none
    1d3c:	mov	w0, #0x1                   	// #1
    1d40:	b	1d84 <grub_f2fs_check_dentries+0x234>
    1d44:	ldr	w0, [sp, #64]
    1d48:	add	w0, w0, #0x7
    1d4c:	add	w1, w0, #0x7
    1d50:	cmp	w0, #0x0
    1d54:	csel	w0, w1, w0, lt  // lt = tstop
    1d58:	asr	w0, w0, #3
    1d5c:	mov	w1, w0
    1d60:	ldr	w0, [sp, #76]
    1d64:	add	w0, w0, w1
    1d68:	str	w0, [sp, #76]
    1d6c:	ldr	x0, [sp, #24]
    1d70:	ldr	w0, [x0, #48]
    1d74:	ldr	w1, [sp, #76]
    1d78:	cmp	w1, w0
    1d7c:	b.lt	1b64 <grub_f2fs_check_dentries+0x14>  // b.tstop
    1d80:	mov	w0, #0x0                   	// #0
    1d84:	ldp	x29, x30, [sp], #80
    1d88:	ret

0000000000001d8c <grub_f2fs_iterate_inline_dir>:
    1d8c:	stp	x29, x30, [sp, #-48]!
    1d90:	mov	x29, sp
    1d94:	str	x0, [sp, #24]
    1d98:	str	x1, [sp, #16]
    1d9c:	ldr	x0, [sp, #24]
    1da0:	bl	44c <get_inline_addr>
    1da4:	str	x0, [sp, #40]
    1da8:	ldr	x1, [sp, #40]
    1dac:	ldr	x0, [sp, #16]
    1db0:	str	x1, [x0, #24]
    1db4:	ldr	x0, [sp, #40]
    1db8:	add	x1, x0, #0x1e
    1dbc:	ldr	x0, [sp, #16]
    1dc0:	str	x1, [x0, #40]
    1dc4:	ldr	x0, [sp, #40]
    1dc8:	add	x1, x0, #0x7f0
    1dcc:	ldr	x0, [sp, #16]
    1dd0:	str	x1, [x0, #32]
    1dd4:	ldr	x0, [sp, #16]
    1dd8:	mov	w1, #0xb6                  	// #182
    1ddc:	str	w1, [x0, #48]
    1de0:	ldr	x0, [sp, #16]
    1de4:	bl	1b50 <grub_f2fs_check_dentries>
    1de8:	ldp	x29, x30, [sp], #48
    1dec:	ret

0000000000001df0 <grub_f2fs_iterate_dir>:
    1df0:	stp	x29, x30, [sp, #-160]!
    1df4:	mov	x29, sp
    1df8:	str	x0, [sp, #40]
    1dfc:	str	x1, [sp, #32]
    1e00:	str	x2, [sp, #24]
    1e04:	ldr	x0, [sp, #40]
    1e08:	str	x0, [sp, #144]
    1e0c:	stp	xzr, xzr, [sp, #56]
    1e10:	stp	xzr, xzr, [sp, #72]
    1e14:	stp	xzr, xzr, [sp, #88]
    1e18:	str	xzr, [sp, #104]
    1e1c:	ldr	x0, [sp, #144]
    1e20:	ldr	x0, [x0]
    1e24:	str	x0, [sp, #56]
    1e28:	ldr	x0, [sp, #32]
    1e2c:	str	x0, [sp, #64]
    1e30:	ldr	x0, [sp, #24]
    1e34:	str	x0, [sp, #72]
    1e38:	str	xzr, [sp, #152]
    1e3c:	ldr	x0, [sp, #144]
    1e40:	ldr	w0, [x0, #4124]
    1e44:	cmp	w0, #0x0
    1e48:	b.ne	1e90 <grub_f2fs_iterate_dir+0xa0>  // b.any
    1e4c:	ldr	x0, [sp, #144]
    1e50:	ldr	x3, [x0]
    1e54:	ldr	x0, [sp, #144]
    1e58:	ldr	w1, [x0, #4120]
    1e5c:	ldr	x0, [sp, #144]
    1e60:	add	x0, x0, #0x8
    1e64:	mov	x2, x0
    1e68:	mov	x0, x3
    1e6c:	bl	1520 <grub_f2fs_read_node>
    1e70:	adrp	x0, 0 <grub_fs_register>
    1e74:	add	x0, x0, #0x0
    1e78:	ldr	x0, [x0]
    1e7c:	ldr	w0, [x0]
    1e80:	cmp	w0, #0x0
    1e84:	b.eq	1e90 <grub_f2fs_iterate_dir+0xa0>  // b.none
    1e88:	mov	w0, #0x0                   	// #0
    1e8c:	b	1fa8 <grub_f2fs_iterate_dir+0x1b8>
    1e90:	ldr	x0, [sp, #144]
    1e94:	add	x0, x0, #0x8
    1e98:	str	x0, [sp, #136]
    1e9c:	ldr	x0, [sp, #136]
    1ea0:	ldrb	w0, [x0, #3]
    1ea4:	and	w0, w0, #0x4
    1ea8:	cmp	w0, #0x0
    1eac:	b.eq	1f8c <grub_f2fs_iterate_dir+0x19c>  // b.none
    1eb0:	add	x0, sp, #0x38
    1eb4:	mov	x1, x0
    1eb8:	ldr	x0, [sp, #136]
    1ebc:	bl	1d8c <grub_f2fs_iterate_inline_dir>
    1ec0:	b	1fa8 <grub_f2fs_iterate_dir+0x1b8>
    1ec4:	mov	x0, #0x1000                	// #4096
    1ec8:	bl	0 <grub_zalloc>
    1ecc:	str	x0, [sp, #128]
    1ed0:	ldr	x0, [sp, #128]
    1ed4:	cmp	x0, #0x0
    1ed8:	b.ne	1ee4 <grub_f2fs_iterate_dir+0xf4>  // b.any
    1edc:	mov	w0, #0x0                   	// #0
    1ee0:	b	1fa8 <grub_f2fs_iterate_dir+0x1b8>
    1ee4:	ldr	x5, [sp, #128]
    1ee8:	mov	x4, #0x1000                	// #4096
    1eec:	ldr	x3, [sp, #152]
    1ef0:	mov	x2, #0x0                   	// #0
    1ef4:	mov	x1, #0x0                   	// #0
    1ef8:	ldr	x0, [sp, #144]
    1efc:	bl	1928 <grub_f2fs_read_file>
    1f00:	adrp	x0, 0 <grub_fs_register>
    1f04:	add	x0, x0, #0x0
    1f08:	ldr	x0, [x0]
    1f0c:	ldr	w0, [x0]
    1f10:	cmp	w0, #0x0
    1f14:	b.eq	1f28 <grub_f2fs_iterate_dir+0x138>  // b.none
    1f18:	ldr	x0, [sp, #128]
    1f1c:	bl	0 <grub_free>
    1f20:	mov	w0, #0x0                   	// #0
    1f24:	b	1fa8 <grub_f2fs_iterate_dir+0x1b8>
    1f28:	ldr	x0, [sp, #128]
    1f2c:	str	x0, [sp, #120]
    1f30:	ldr	x0, [sp, #120]
    1f34:	str	x0, [sp, #80]
    1f38:	ldr	x0, [sp, #120]
    1f3c:	add	x0, x0, #0x1e
    1f40:	str	x0, [sp, #96]
    1f44:	ldr	x0, [sp, #120]
    1f48:	add	x0, x0, #0x950
    1f4c:	str	x0, [sp, #88]
    1f50:	mov	w0, #0xd6                  	// #214
    1f54:	str	w0, [sp, #104]
    1f58:	add	x0, sp, #0x38
    1f5c:	bl	1b50 <grub_f2fs_check_dentries>
    1f60:	str	w0, [sp, #116]
    1f64:	ldr	x0, [sp, #128]
    1f68:	bl	0 <grub_free>
    1f6c:	ldr	w0, [sp, #116]
    1f70:	cmp	w0, #0x0
    1f74:	b.eq	1f80 <grub_f2fs_iterate_dir+0x190>  // b.none
    1f78:	mov	w0, #0x1                   	// #1
    1f7c:	b	1fa8 <grub_f2fs_iterate_dir+0x1b8>
    1f80:	ldr	x0, [sp, #152]
    1f84:	add	x0, x0, #0x1, lsl #12
    1f88:	str	x0, [sp, #152]
    1f8c:	ldr	x0, [sp, #136]
    1f90:	bl	464 <grub_f2fs_file_size>
    1f94:	mov	x1, x0
    1f98:	ldr	x0, [sp, #152]
    1f9c:	cmp	x0, x1
    1fa0:	b.cc	1ec4 <grub_f2fs_iterate_dir+0xd4>  // b.lo, b.ul, b.last
    1fa4:	mov	w0, #0x0                   	// #0
    1fa8:	ldp	x29, x30, [sp], #160
    1fac:	ret
	...

0000000000001fb8 <grub_f2fs_dir_iter>:
    1fb8:	stp	x29, x30, [sp, #-80]!
    1fbc:	mov	x29, sp
    1fc0:	str	x0, [sp, #40]
    1fc4:	str	w1, [sp, #36]
    1fc8:	str	x2, [sp, #24]
    1fcc:	str	x3, [sp, #16]
    1fd0:	ldr	x0, [sp, #16]
    1fd4:	str	x0, [sp, #72]
    1fd8:	add	x0, sp, #0x38
    1fdc:	mov	x2, #0x10                  	// #16
    1fe0:	mov	w1, #0x0                   	// #0
    1fe4:	bl	0 <grub_memset>
    1fe8:	ldr	x0, [sp, #24]
    1fec:	ldr	w0, [x0, #4124]
    1ff0:	cmp	w0, #0x0
    1ff4:	b.ne	2050 <grub_f2fs_dir_iter+0x98>  // b.any
    1ff8:	ldr	x0, [sp, #72]
    1ffc:	ldr	x3, [x0, #16]
    2000:	ldr	x0, [sp, #24]
    2004:	ldr	w1, [x0, #4120]
    2008:	ldr	x0, [sp, #24]
    200c:	add	x0, x0, #0x8
    2010:	mov	x2, x0
    2014:	mov	x0, x3
    2018:	bl	1520 <grub_f2fs_read_node>
    201c:	adrp	x0, 0 <grub_fs_register>
    2020:	add	x0, x0, #0x0
    2024:	ldr	x0, [x0]
    2028:	ldr	w0, [x0]
    202c:	cmp	w0, #0x0
    2030:	b.ne	2040 <grub_f2fs_dir_iter+0x88>  // b.any
    2034:	ldr	x0, [sp, #24]
    2038:	mov	w1, #0x1                   	// #1
    203c:	str	w1, [x0, #4124]
    2040:	adrp	x0, 0 <grub_fs_register>
    2044:	add	x0, x0, #0x0
    2048:	ldr	x0, [x0]
    204c:	str	wzr, [x0]
    2050:	ldr	x0, [sp, #24]
    2054:	ldr	w0, [x0, #4124]
    2058:	cmp	w0, #0x0
    205c:	b.eq	2078 <grub_f2fs_dir_iter+0xc0>  // b.none
    2060:	ldrb	w0, [sp, #56]
    2064:	orr	w0, w0, #0x2
    2068:	strb	w0, [sp, #56]
    206c:	ldr	x0, [sp, #24]
    2070:	ldr	x0, [x0, #56]
    2074:	str	w0, [sp, #60]
    2078:	ldr	w0, [sp, #36]
    207c:	and	w0, w0, #0xff
    2080:	cmp	w0, #0x2
    2084:	cset	w0, eq  // eq = none
    2088:	and	w1, w0, #0xff
    208c:	ldrb	w0, [sp, #56]
    2090:	bfxil	w0, w1, #0, #1
    2094:	strb	w0, [sp, #56]
    2098:	ldr	x0, [sp, #24]
    209c:	bl	0 <grub_free>
    20a0:	ldr	x0, [sp, #72]
    20a4:	ldr	x3, [x0]
    20a8:	ldr	x0, [sp, #72]
    20ac:	ldr	x1, [x0, #8]
    20b0:	add	x0, sp, #0x38
    20b4:	mov	x2, x1
    20b8:	mov	x1, x0
    20bc:	ldr	x0, [sp, #40]
    20c0:	blr	x3
    20c4:	ldp	x29, x30, [sp], #80
    20c8:	ret
    20cc:	nop
	...

00000000000020d8 <grub_f2fs_dir>:
    20d8:	stp	x29, x30, [sp, #-80]!
    20dc:	mov	x29, sp
    20e0:	str	x0, [sp, #40]
    20e4:	str	x1, [sp, #32]
    20e8:	str	x2, [sp, #24]
    20ec:	str	x3, [sp, #16]
    20f0:	stp	xzr, xzr, [sp, #56]
    20f4:	str	xzr, [sp, #72]
    20f8:	ldr	x0, [sp, #24]
    20fc:	str	x0, [sp, #56]
    2100:	ldr	x0, [sp, #16]
    2104:	str	x0, [sp, #64]
    2108:	str	xzr, [sp, #48]
    210c:	adrp	x0, 0 <grub_fs_register>
    2110:	add	x0, x0, #0x0
    2114:	ldr	x0, [x0]
    2118:	ldr	x0, [x0]
    211c:	bl	0 <grub_dl_ref>
    2120:	ldr	x0, [sp, #40]
    2124:	ldr	x0, [x0]
    2128:	bl	1588 <grub_f2fs_mount>
    212c:	str	x0, [sp, #72]
    2130:	ldr	x0, [sp, #72]
    2134:	cmp	x0, #0x0
    2138:	b.eq	21ac <grub_f2fs_dir+0xd4>  // b.none
    213c:	ldr	x1, [sp, #72]
    2140:	mov	x0, #0x1aa8                	// #6824
    2144:	add	x1, x1, x0
    2148:	add	x2, sp, #0x30
    214c:	mov	w5, #0x2                   	// #2
    2150:	adrp	x0, 0 <grub_fs_register>
    2154:	add	x0, x0, #0x0
    2158:	ldr	x4, [x0]
    215c:	adrp	x0, 0 <grub_fs_register>
    2160:	add	x0, x0, #0x0
    2164:	ldr	x3, [x0]
    2168:	ldr	x0, [sp, #32]
    216c:	bl	0 <grub_fshelp_find_file>
    2170:	adrp	x0, 0 <grub_fs_register>
    2174:	add	x0, x0, #0x0
    2178:	ldr	x0, [x0]
    217c:	ldr	w0, [x0]
    2180:	cmp	w0, #0x0
    2184:	b.ne	21b4 <grub_f2fs_dir+0xdc>  // b.any
    2188:	ldr	x3, [sp, #48]
    218c:	add	x0, sp, #0x38
    2190:	mov	x2, x0
    2194:	adrp	x0, 0 <grub_fs_register>
    2198:	add	x0, x0, #0x0
    219c:	ldr	x1, [x0]
    21a0:	mov	x0, x3
    21a4:	bl	1df0 <grub_f2fs_iterate_dir>
    21a8:	b	21b8 <grub_f2fs_dir+0xe0>
    21ac:	nop
    21b0:	b	21b8 <grub_f2fs_dir+0xe0>
    21b4:	nop
    21b8:	ldr	x1, [sp, #72]
    21bc:	mov	x0, #0x1aa8                	// #6824
    21c0:	add	x1, x1, x0
    21c4:	ldr	x0, [sp, #48]
    21c8:	cmp	x1, x0
    21cc:	b.eq	21d8 <grub_f2fs_dir+0x100>  // b.none
    21d0:	ldr	x0, [sp, #48]
    21d4:	bl	0 <grub_free>
    21d8:	ldr	x0, [sp, #72]
    21dc:	bl	0 <grub_free>
    21e0:	adrp	x0, 0 <grub_fs_register>
    21e4:	add	x0, x0, #0x0
    21e8:	ldr	x0, [x0]
    21ec:	ldr	x0, [x0]
    21f0:	bl	0 <grub_dl_unref>
    21f4:	adrp	x0, 0 <grub_fs_register>
    21f8:	add	x0, x0, #0x0
    21fc:	ldr	x0, [x0]
    2200:	ldr	w0, [x0]
    2204:	ldp	x29, x30, [sp], #80
    2208:	ret
    220c:	nop
	...

0000000000002238 <grub_f2fs_open>:
    2238:	stp	x29, x30, [sp, #-64]!
    223c:	mov	x29, sp
    2240:	str	x0, [sp, #24]
    2244:	str	x1, [sp, #16]
    2248:	str	xzr, [sp, #56]
    224c:	str	xzr, [sp, #40]
    2250:	adrp	x0, 0 <grub_fs_register>
    2254:	add	x0, x0, #0x0
    2258:	ldr	x0, [x0]
    225c:	ldr	x0, [x0]
    2260:	bl	0 <grub_dl_ref>
    2264:	ldr	x0, [sp, #24]
    2268:	ldr	x0, [x0, #8]
    226c:	ldr	x0, [x0]
    2270:	bl	1588 <grub_f2fs_mount>
    2274:	str	x0, [sp, #56]
    2278:	ldr	x0, [sp, #56]
    227c:	cmp	x0, #0x0
    2280:	b.eq	23b0 <grub_f2fs_open+0x178>  // b.none
    2284:	ldr	x1, [sp, #56]
    2288:	mov	x0, #0x1aa8                	// #6824
    228c:	add	x1, x1, x0
    2290:	add	x2, sp, #0x28
    2294:	mov	w5, #0x1                   	// #1
    2298:	adrp	x0, 0 <grub_fs_register>
    229c:	add	x0, x0, #0x0
    22a0:	ldr	x4, [x0]
    22a4:	adrp	x0, 0 <grub_fs_register>
    22a8:	add	x0, x0, #0x0
    22ac:	ldr	x3, [x0]
    22b0:	ldr	x0, [sp, #16]
    22b4:	bl	0 <grub_fshelp_find_file>
    22b8:	adrp	x0, 0 <grub_fs_register>
    22bc:	add	x0, x0, #0x0
    22c0:	ldr	x0, [x0]
    22c4:	ldr	w0, [x0]
    22c8:	cmp	w0, #0x0
    22cc:	b.ne	23b8 <grub_f2fs_open+0x180>  // b.any
    22d0:	ldr	x0, [sp, #40]
    22d4:	ldr	w0, [x0, #4124]
    22d8:	cmp	w0, #0x0
    22dc:	b.ne	2314 <grub_f2fs_open+0xdc>  // b.any
    22e0:	ldr	x0, [sp, #40]
    22e4:	ldr	w1, [x0, #4120]
    22e8:	ldr	x0, [sp, #40]
    22ec:	add	x0, x0, #0x8
    22f0:	mov	x2, x0
    22f4:	ldr	x0, [sp, #56]
    22f8:	bl	1520 <grub_f2fs_read_node>
    22fc:	adrp	x0, 0 <grub_fs_register>
    2300:	add	x0, x0, #0x0
    2304:	ldr	x0, [x0]
    2308:	ldr	w0, [x0]
    230c:	cmp	w0, #0x0
    2310:	b.ne	23c0 <grub_f2fs_open+0x188>  // b.any
    2314:	ldr	x0, [sp, #56]
    2318:	ldr	x3, [x0, #6816]
    231c:	ldr	x0, [sp, #40]
    2320:	add	x0, x0, #0x8
    2324:	mov	x2, #0x1010                	// #4112
    2328:	mov	x1, x0
    232c:	mov	x0, x3
    2330:	bl	58 <grub_memcpy>
    2334:	ldr	x0, [sp, #40]
    2338:	bl	0 <grub_free>
    233c:	ldr	x0, [sp, #56]
    2340:	ldr	x0, [x0, #6816]
    2344:	str	x0, [sp, #48]
    2348:	ldr	x0, [sp, #48]
    234c:	bl	464 <grub_f2fs_file_size>
    2350:	mov	x1, x0
    2354:	ldr	x0, [sp, #24]
    2358:	str	x1, [x0, #64]
    235c:	ldr	x0, [sp, #24]
    2360:	ldr	x1, [sp, #56]
    2364:	str	x1, [x0, #80]
    2368:	ldr	x0, [sp, #24]
    236c:	str	xzr, [x0, #24]
    2370:	ldr	x0, [sp, #48]
    2374:	ldrb	w0, [x0, #3]
    2378:	and	w0, w0, #0x2
    237c:	cmp	w0, #0x0
    2380:	b.eq	23a8 <grub_f2fs_open+0x170>  // b.none
    2384:	ldr	x0, [sp, #24]
    2388:	ldr	x0, [x0, #64]
    238c:	cmp	x0, #0xda0
    2390:	b.ls	23a8 <grub_f2fs_open+0x170>  // b.plast
    2394:	adrp	x0, 0 <grub_fs_register>
    2398:	add	x0, x0, #0x0
    239c:	ldr	x1, [x0]
    23a0:	mov	w0, #0x9                   	// #9
    23a4:	bl	0 <grub_error>
    23a8:	mov	w0, #0x0                   	// #0
    23ac:	b	2410 <grub_f2fs_open+0x1d8>
    23b0:	nop
    23b4:	b	23c4 <grub_f2fs_open+0x18c>
    23b8:	nop
    23bc:	b	23c4 <grub_f2fs_open+0x18c>
    23c0:	nop
    23c4:	ldr	x1, [sp, #56]
    23c8:	mov	x0, #0x1aa8                	// #6824
    23cc:	add	x1, x1, x0
    23d0:	ldr	x0, [sp, #40]
    23d4:	cmp	x1, x0
    23d8:	b.eq	23e4 <grub_f2fs_open+0x1ac>  // b.none
    23dc:	ldr	x0, [sp, #40]
    23e0:	bl	0 <grub_free>
    23e4:	ldr	x0, [sp, #56]
    23e8:	bl	0 <grub_free>
    23ec:	adrp	x0, 0 <grub_fs_register>
    23f0:	add	x0, x0, #0x0
    23f4:	ldr	x0, [x0]
    23f8:	ldr	x0, [x0]
    23fc:	bl	0 <grub_dl_unref>
    2400:	adrp	x0, 0 <grub_fs_register>
    2404:	add	x0, x0, #0x0
    2408:	ldr	x0, [x0]
    240c:	ldr	w0, [x0]
    2410:	ldp	x29, x30, [sp], #64
    2414:	ret
	...

0000000000002440 <grub_f2fs_read>:
    2440:	stp	x29, x30, [sp, #-64]!
    2444:	mov	x29, sp
    2448:	str	x0, [sp, #40]
    244c:	str	x1, [sp, #32]
    2450:	str	x2, [sp, #24]
    2454:	ldr	x0, [sp, #40]
    2458:	ldr	x0, [x0, #80]
    245c:	str	x0, [sp, #56]
    2460:	ldr	x1, [sp, #56]
    2464:	mov	x0, #0x1aa8                	// #6824
    2468:	add	x6, x1, x0
    246c:	ldr	x0, [sp, #40]
    2470:	ldr	x1, [x0, #88]
    2474:	ldr	x0, [sp, #40]
    2478:	ldr	x2, [x0, #96]
    247c:	ldr	x0, [sp, #40]
    2480:	ldr	x0, [x0, #24]
    2484:	ldr	x5, [sp, #32]
    2488:	ldr	x4, [sp, #24]
    248c:	mov	x3, x0
    2490:	mov	x0, x6
    2494:	bl	1928 <grub_f2fs_read_file>
    2498:	ldp	x29, x30, [sp], #64
    249c:	ret

00000000000024a0 <grub_f2fs_close>:
    24a0:	stp	x29, x30, [sp, #-48]!
    24a4:	mov	x29, sp
    24a8:	str	x0, [sp, #24]
    24ac:	ldr	x0, [sp, #24]
    24b0:	ldr	x0, [x0, #80]
    24b4:	str	x0, [sp, #40]
    24b8:	ldr	x0, [sp, #40]
    24bc:	bl	0 <grub_free>
    24c0:	adrp	x0, 0 <grub_fs_register>
    24c4:	add	x0, x0, #0x0
    24c8:	ldr	x0, [x0]
    24cc:	ldr	x0, [x0]
    24d0:	bl	0 <grub_dl_unref>
    24d4:	mov	w0, #0x0                   	// #0
    24d8:	ldp	x29, x30, [sp], #48
    24dc:	ret
	...

00000000000024e8 <grub_f2fs_utf16_to_utf8>:
    24e8:	sub	sp, sp, #0x430
    24ec:	stp	x29, x30, [sp]
    24f0:	mov	x29, sp
    24f4:	str	x0, [sp, #24]
    24f8:	str	wzr, [sp, #1068]
    24fc:	mov	x0, #0x801                 	// #2049
    2500:	bl	0 <grub_malloc>
    2504:	str	x0, [sp, #1056]
    2508:	ldr	x0, [sp, #1056]
    250c:	cmp	x0, #0x0
    2510:	b.ne	254c <grub_f2fs_utf16_to_utf8+0x64>  // b.any
    2514:	mov	x0, #0x0                   	// #0
    2518:	b	2588 <grub_f2fs_utf16_to_utf8+0xa0>
    251c:	ldrsw	x0, [sp, #1068]
    2520:	lsl	x0, x0, #1
    2524:	ldr	x1, [sp, #24]
    2528:	add	x0, x1, x0
    252c:	ldrh	w2, [x0]
    2530:	ldrsw	x0, [sp, #1068]
    2534:	lsl	x0, x0, #1
    2538:	add	x1, sp, #0x20
    253c:	strh	w2, [x1, x0]
    2540:	ldr	w0, [sp, #1068]
    2544:	add	w0, w0, #0x1
    2548:	str	w0, [sp, #1068]
    254c:	ldr	x0, [sp, #24]
    2550:	ldrh	w0, [x0]
    2554:	cmp	w0, #0x0
    2558:	b.eq	2568 <grub_f2fs_utf16_to_utf8+0x80>  // b.none
    255c:	ldr	w0, [sp, #1068]
    2560:	cmp	w0, #0x1ff
    2564:	b.le	251c <grub_f2fs_utf16_to_utf8+0x34>
    2568:	ldrsw	x1, [sp, #1068]
    256c:	add	x0, sp, #0x20
    2570:	mov	x2, x1
    2574:	mov	x1, x0
    2578:	ldr	x0, [sp, #1056]
    257c:	bl	84 <grub_utf16_to_utf8>
    2580:	strb	wzr, [x0]
    2584:	ldr	x0, [sp, #1056]
    2588:	ldp	x29, x30, [sp]
    258c:	add	sp, sp, #0x430
    2590:	ret

0000000000002594 <grub_f2fs_label>:
    2594:	stp	x29, x30, [sp, #-48]!
    2598:	mov	x29, sp
    259c:	str	x0, [sp, #24]
    25a0:	str	x1, [sp, #16]
    25a4:	ldr	x0, [sp, #24]
    25a8:	ldr	x0, [x0]
    25ac:	str	x0, [sp, #40]
    25b0:	adrp	x0, 0 <grub_fs_register>
    25b4:	add	x0, x0, #0x0
    25b8:	ldr	x0, [x0]
    25bc:	ldr	x0, [x0]
    25c0:	bl	0 <grub_dl_ref>
    25c4:	ldr	x0, [sp, #40]
    25c8:	bl	1588 <grub_f2fs_mount>
    25cc:	str	x0, [sp, #32]
    25d0:	ldr	x0, [sp, #32]
    25d4:	cmp	x0, #0x0
    25d8:	b.eq	25f8 <grub_f2fs_label+0x64>  // b.none
    25dc:	ldr	x0, [sp, #32]
    25e0:	add	x0, x0, #0x7c
    25e4:	bl	24e8 <grub_f2fs_utf16_to_utf8>
    25e8:	mov	x1, x0
    25ec:	ldr	x0, [sp, #16]
    25f0:	str	x1, [x0]
    25f4:	b	2600 <grub_f2fs_label+0x6c>
    25f8:	ldr	x0, [sp, #16]
    25fc:	str	xzr, [x0]
    2600:	ldr	x0, [sp, #32]
    2604:	bl	0 <grub_free>
    2608:	adrp	x0, 0 <grub_fs_register>
    260c:	add	x0, x0, #0x0
    2610:	ldr	x0, [x0]
    2614:	ldr	x0, [x0]
    2618:	bl	0 <grub_dl_unref>
    261c:	adrp	x0, 0 <grub_fs_register>
    2620:	add	x0, x0, #0x0
    2624:	ldr	x0, [x0]
    2628:	ldr	w0, [x0]
    262c:	ldp	x29, x30, [sp], #48
    2630:	ret
    2634:	nop
	...

0000000000002648 <grub_f2fs_uuid>:
    2648:	sub	sp, sp, #0x80
    264c:	stp	x29, x30, [sp, #80]
    2650:	add	x29, sp, #0x50
    2654:	str	x0, [sp, #104]
    2658:	str	x1, [sp, #96]
    265c:	ldr	x0, [sp, #104]
    2660:	ldr	x0, [x0]
    2664:	str	x0, [sp, #120]
    2668:	adrp	x0, 0 <grub_fs_register>
    266c:	add	x0, x0, #0x0
    2670:	ldr	x0, [x0]
    2674:	ldr	x0, [x0]
    2678:	bl	0 <grub_dl_ref>
    267c:	ldr	x0, [sp, #120]
    2680:	bl	1588 <grub_f2fs_mount>
    2684:	str	x0, [sp, #112]
    2688:	ldr	x0, [sp, #112]
    268c:	cmp	x0, #0x0
    2690:	b.eq	27b0 <grub_f2fs_uuid+0x168>  // b.none
    2694:	ldr	x0, [sp, #112]
    2698:	ldrb	w0, [x0, #108]
    269c:	mov	w9, w0
    26a0:	ldr	x0, [sp, #112]
    26a4:	ldrb	w0, [x0, #109]
    26a8:	mov	w10, w0
    26ac:	ldr	x0, [sp, #112]
    26b0:	ldrb	w0, [x0, #110]
    26b4:	mov	w11, w0
    26b8:	ldr	x0, [sp, #112]
    26bc:	ldrb	w0, [x0, #111]
    26c0:	mov	w12, w0
    26c4:	ldr	x0, [sp, #112]
    26c8:	ldrb	w0, [x0, #112]
    26cc:	mov	w13, w0
    26d0:	ldr	x0, [sp, #112]
    26d4:	ldrb	w0, [x0, #113]
    26d8:	mov	w14, w0
    26dc:	ldr	x0, [sp, #112]
    26e0:	ldrb	w0, [x0, #114]
    26e4:	mov	w15, w0
    26e8:	ldr	x0, [sp, #112]
    26ec:	ldrb	w0, [x0, #115]
    26f0:	mov	w1, w0
    26f4:	ldr	x0, [sp, #112]
    26f8:	ldrb	w0, [x0, #116]
    26fc:	mov	w2, w0
    2700:	ldr	x0, [sp, #112]
    2704:	ldrb	w0, [x0, #117]
    2708:	mov	w3, w0
    270c:	ldr	x0, [sp, #112]
    2710:	ldrb	w0, [x0, #118]
    2714:	mov	w4, w0
    2718:	ldr	x0, [sp, #112]
    271c:	ldrb	w0, [x0, #119]
    2720:	mov	w5, w0
    2724:	ldr	x0, [sp, #112]
    2728:	ldrb	w0, [x0, #120]
    272c:	mov	w6, w0
    2730:	ldr	x0, [sp, #112]
    2734:	ldrb	w0, [x0, #121]
    2738:	mov	w7, w0
    273c:	ldr	x0, [sp, #112]
    2740:	ldrb	w0, [x0, #122]
    2744:	mov	w8, w0
    2748:	ldr	x0, [sp, #112]
    274c:	ldrb	w0, [x0, #123]
    2750:	str	w0, [sp, #64]
    2754:	str	w8, [sp, #56]
    2758:	str	w7, [sp, #48]
    275c:	str	w6, [sp, #40]
    2760:	str	w5, [sp, #32]
    2764:	str	w4, [sp, #24]
    2768:	str	w3, [sp, #16]
    276c:	str	w2, [sp, #8]
    2770:	str	w1, [sp]
    2774:	mov	w7, w15
    2778:	mov	w6, w14
    277c:	mov	w5, w13
    2780:	mov	w4, w12
    2784:	mov	w3, w11
    2788:	mov	w2, w10
    278c:	mov	w1, w9
    2790:	adrp	x0, 0 <grub_fs_register>
    2794:	add	x0, x0, #0x0
    2798:	ldr	x0, [x0]
    279c:	bl	0 <grub_xasprintf>
    27a0:	mov	x1, x0
    27a4:	ldr	x0, [sp, #96]
    27a8:	str	x1, [x0]
    27ac:	b	27b8 <grub_f2fs_uuid+0x170>
    27b0:	ldr	x0, [sp, #96]
    27b4:	str	xzr, [x0]
    27b8:	ldr	x0, [sp, #112]
    27bc:	bl	0 <grub_free>
    27c0:	adrp	x0, 0 <grub_fs_register>
    27c4:	add	x0, x0, #0x0
    27c8:	ldr	x0, [x0]
    27cc:	ldr	x0, [x0]
    27d0:	bl	0 <grub_dl_unref>
    27d4:	adrp	x0, 0 <grub_fs_register>
    27d8:	add	x0, x0, #0x0
    27dc:	ldr	x0, [x0]
    27e0:	ldr	w0, [x0]
    27e4:	ldp	x29, x30, [sp, #80]
    27e8:	add	sp, sp, #0x80
    27ec:	ret
	...

0000000000002808 <grub_mod_init>:
    2808:	stp	x29, x30, [sp, #-32]!
    280c:	mov	x29, sp
    2810:	str	x0, [sp, #24]
    2814:	adrp	x0, 0 <grub_fs_register>
    2818:	add	x0, x0, #0x0
    281c:	ldr	x0, [x0]
    2820:	bl	0 <grub_fs_register>
    2824:	adrp	x0, 0 <grub_fs_register>
    2828:	add	x0, x0, #0x0
    282c:	ldr	x0, [x0]
    2830:	ldr	x1, [sp, #24]
    2834:	str	x1, [x0]
    2838:	nop
    283c:	ldp	x29, x30, [sp], #32
    2840:	ret
    2844:	nop
	...

0000000000002858 <grub_mod_fini>:
    2858:	stp	x29, x30, [sp, #-16]!
    285c:	mov	x29, sp
    2860:	adrp	x0, 0 <grub_fs_register>
    2864:	add	x0, x0, #0x0
    2868:	ldr	x0, [x0]
    286c:	bl	38 <grub_fs_unregister>
    2870:	nop
    2874:	ldp	x29, x30, [sp], #16
    2878:	ret
    287c:	nop
	...
