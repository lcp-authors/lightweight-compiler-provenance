
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-bless-boot-generator_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400980 <_init>:
  400980:	stp	x29, x30, [sp, #-16]!
  400984:	mov	x29, sp
  400988:	bl	400e44 <call_weak_fn>
  40098c:	ldp	x29, x30, [sp], #16
  400990:	ret

Disassembly of section .plt:

00000000004009a0 <.plt>:
  4009a0:	stp	x16, x30, [sp, #-16]!
  4009a4:	adrp	x16, 411000 <__FRAME_END__+0xfca8>
  4009a8:	ldr	x17, [x16, #3936]
  4009ac:	add	x16, x16, #0xf60
  4009b0:	br	x17
  4009b4:	nop
  4009b8:	nop
  4009bc:	nop

00000000004009c0 <stpcpy@plt>:
  4009c0:	adrp	x16, 411000 <__FRAME_END__+0xfca8>
  4009c4:	ldr	x17, [x16, #3944]
  4009c8:	add	x16, x16, #0xf68
  4009cc:	br	x17

00000000004009d0 <__libc_start_main@plt>:
  4009d0:	adrp	x16, 411000 <__FRAME_END__+0xfca8>
  4009d4:	ldr	x17, [x16, #3952]
  4009d8:	add	x16, x16, #0xf70
  4009dc:	br	x17

00000000004009e0 <__gmon_start__@plt>:
  4009e0:	adrp	x16, 411000 <__FRAME_END__+0xfca8>
  4009e4:	ldr	x17, [x16, #3960]
  4009e8:	add	x16, x16, #0xf78
  4009ec:	br	x17

00000000004009f0 <symlink@plt>:
  4009f0:	adrp	x16, 411000 <__FRAME_END__+0xfca8>
  4009f4:	ldr	x17, [x16, #3968]
  4009f8:	add	x16, x16, #0xf80
  4009fc:	br	x17

0000000000400a00 <log_assert_failed_realm@plt>:
  400a00:	adrp	x16, 411000 <__FRAME_END__+0xfca8>
  400a04:	ldr	x17, [x16, #3976]
  400a08:	add	x16, x16, #0xf88
  400a0c:	br	x17

0000000000400a10 <in_initrd@plt>:
  400a10:	adrp	x16, 411000 <__FRAME_END__+0xfca8>
  400a14:	ldr	x17, [x16, #3984]
  400a18:	add	x16, x16, #0xf90
  400a1c:	br	x17

0000000000400a20 <is_efi_boot@plt>:
  400a20:	adrp	x16, 411000 <__FRAME_END__+0xfca8>
  400a24:	ldr	x17, [x16, #3992]
  400a28:	add	x16, x16, #0xf98
  400a2c:	br	x17

0000000000400a30 <access@plt>:
  400a30:	adrp	x16, 411000 <__FRAME_END__+0xfca8>
  400a34:	ldr	x17, [x16, #4000]
  400a38:	add	x16, x16, #0xfa0
  400a3c:	br	x17

0000000000400a40 <abort@plt>:
  400a40:	adrp	x16, 411000 <__FRAME_END__+0xfca8>
  400a44:	ldr	x17, [x16, #4008]
  400a48:	add	x16, x16, #0xfa8
  400a4c:	br	x17

0000000000400a50 <log_setup_generator@plt>:
  400a50:	adrp	x16, 411000 <__FRAME_END__+0xfca8>
  400a54:	ldr	x17, [x16, #4016]
  400a58:	add	x16, x16, #0xfb0
  400a5c:	br	x17

0000000000400a60 <__errno_location@plt>:
  400a60:	adrp	x16, 411000 <__FRAME_END__+0xfca8>
  400a64:	ldr	x17, [x16, #4024]
  400a68:	add	x16, x16, #0xfb8
  400a6c:	br	x17

0000000000400a70 <__stack_chk_fail@plt>:
  400a70:	adrp	x16, 411000 <__FRAME_END__+0xfca8>
  400a74:	ldr	x17, [x16, #4032]
  400a78:	add	x16, x16, #0xfc0
  400a7c:	br	x17

0000000000400a80 <log_internal_realm@plt>:
  400a80:	adrp	x16, 411000 <__FRAME_END__+0xfca8>
  400a84:	ldr	x17, [x16, #4040]
  400a88:	add	x16, x16, #0xfc8
  400a8c:	br	x17

0000000000400a90 <detect_container@plt>:
  400a90:	adrp	x16, 411000 <__FRAME_END__+0xfca8>
  400a94:	ldr	x17, [x16, #4048]
  400a98:	add	x16, x16, #0xfd0
  400a9c:	br	x17

0000000000400aa0 <strlen@plt>:
  400aa0:	adrp	x16, 411000 <__FRAME_END__+0xfca8>
  400aa4:	ldr	x17, [x16, #4056]
  400aa8:	add	x16, x16, #0xfd8
  400aac:	br	x17

0000000000400ab0 <mkdir_parents@plt>:
  400ab0:	adrp	x16, 411000 <__FRAME_END__+0xfca8>
  400ab4:	ldr	x17, [x16, #4064]
  400ab8:	add	x16, x16, #0xfe0
  400abc:	br	x17

0000000000400ac0 <log_get_max_level_realm@plt>:
  400ac0:	adrp	x16, 411000 <__FRAME_END__+0xfca8>
  400ac4:	ldr	x17, [x16, #4072]
  400ac8:	add	x16, x16, #0xfe8
  400acc:	br	x17

Disassembly of section .text:

0000000000400ad0 <main>:
  400ad0:	stp	x29, x30, [sp, #-64]!
  400ad4:	mov	x29, sp
  400ad8:	stp	x19, x20, [sp, #16]
  400adc:	adrp	x20, 411000 <__FRAME_END__+0xfca8>
  400ae0:	add	x20, x20, #0xd18
  400ae4:	mov	w19, w0
  400ae8:	ldr	x0, [x20]
  400aec:	str	x0, [x29, #56]
  400af0:	mov	x0, #0x0                   	// #0
  400af4:	str	x21, [sp, #32]
  400af8:	mov	x21, x1
  400afc:	bl	400a50 <log_setup_generator@plt>
  400b00:	cmp	w19, #0x1
  400b04:	ccmp	w19, #0x4, #0x4, gt
  400b08:	b.ne	400bb0 <main+0xe0>  // b.any
  400b0c:	cmp	w19, #0x1
  400b10:	b.le	400b20 <main+0x50>
  400b14:	adrp	x0, 412000 <arg_dest>
  400b18:	ldr	x1, [x21, #16]
  400b1c:	str	x1, [x0]
  400b20:	bl	400a10 <in_initrd@plt>
  400b24:	tst	w0, #0xff
  400b28:	b.eq	400b64 <main+0x94>  // b.none
  400b2c:	mov	w0, #0x0                   	// #0
  400b30:	bl	400ac0 <log_get_max_level_realm@plt>
  400b34:	cmp	w0, #0x6
  400b38:	b.gt	400c30 <main+0x160>
  400b3c:	mov	w0, #0x0                   	// #0
  400b40:	ldr	x2, [x29, #56]
  400b44:	ldr	x1, [x20]
  400b48:	eor	x1, x2, x1
  400b4c:	cbnz	x1, 400df0 <main+0x320>
  400b50:	mov	sp, x29
  400b54:	ldp	x19, x20, [sp, #16]
  400b58:	ldr	x21, [sp, #32]
  400b5c:	ldp	x29, x30, [sp], #64
  400b60:	ret
  400b64:	bl	400a90 <detect_container@plt>
  400b68:	cmp	w0, #0x0
  400b6c:	b.le	400bc8 <main+0xf8>
  400b70:	mov	w0, #0x0                   	// #0
  400b74:	bl	400ac0 <log_get_max_level_realm@plt>
  400b78:	cmp	w0, #0x6
  400b7c:	b.le	400b3c <main+0x6c>
  400b80:	adrp	x5, 401000 <_fini+0x7c>
  400b84:	adrp	x4, 401000 <_fini+0x7c>
  400b88:	add	x5, x5, #0x30
  400b8c:	add	x4, x4, #0x218
  400b90:	adrp	x2, 400000 <_init-0x980>
  400b94:	mov	w3, #0x29                  	// #41
  400b98:	add	x2, x2, #0xfdb
  400b9c:	mov	w1, #0x0                   	// #0
  400ba0:	mov	w0, #0x7                   	// #7
  400ba4:	bl	400a80 <log_internal_realm@plt>
  400ba8:	mov	w0, #0x0                   	// #0
  400bac:	b	400b40 <main+0x70>
  400bb0:	mov	w0, #0x0                   	// #0
  400bb4:	bl	400ac0 <log_get_max_level_realm@plt>
  400bb8:	cmp	w0, #0x2
  400bbc:	b.gt	400c00 <main+0x130>
  400bc0:	mov	w0, #0x1                   	// #1
  400bc4:	b	400b40 <main+0x70>
  400bc8:	bl	400a20 <is_efi_boot@plt>
  400bcc:	tst	w0, #0xff
  400bd0:	b.ne	400c4c <main+0x17c>  // b.any
  400bd4:	mov	w0, #0x0                   	// #0
  400bd8:	bl	400ac0 <log_get_max_level_realm@plt>
  400bdc:	cmp	w0, #0x6
  400be0:	b.le	400b3c <main+0x6c>
  400be4:	adrp	x5, 401000 <_fini+0x7c>
  400be8:	adrp	x4, 401000 <_fini+0x7c>
  400bec:	add	x5, x5, #0x60
  400bf0:	add	x4, x4, #0x218
  400bf4:	adrp	x2, 400000 <_init-0x980>
  400bf8:	mov	w3, #0x2e                  	// #46
  400bfc:	b	400b98 <main+0xc8>
  400c00:	adrp	x5, 400000 <_init-0x980>
  400c04:	adrp	x4, 401000 <_fini+0x7c>
  400c08:	add	x5, x5, #0xfa8
  400c0c:	add	x4, x4, #0x218
  400c10:	adrp	x2, 400000 <_init-0x980>
  400c14:	mov	w3, #0x1c                  	// #28
  400c18:	add	x2, x2, #0xfdb
  400c1c:	mov	w1, #0x0                   	// #0
  400c20:	mov	w0, #0x3                   	// #3
  400c24:	bl	400a80 <log_internal_realm@plt>
  400c28:	mov	w0, #0x1                   	// #1
  400c2c:	b	400b40 <main+0x70>
  400c30:	adrp	x5, 401000 <_fini+0x7c>
  400c34:	adrp	x4, 401000 <_fini+0x7c>
  400c38:	add	x5, x5, #0x0
  400c3c:	add	x4, x4, #0x218
  400c40:	adrp	x2, 400000 <_init-0x980>
  400c44:	mov	w3, #0x24                  	// #36
  400c48:	b	400b98 <main+0xc8>
  400c4c:	adrp	x0, 401000 <_fini+0x7c>
  400c50:	mov	w1, #0x0                   	// #0
  400c54:	add	x0, x0, #0x88
  400c58:	bl	400a30 <access@plt>
  400c5c:	tbnz	w0, #31, 400d34 <main+0x264>
  400c60:	adrp	x0, 412000 <arg_dest>
  400c64:	ldr	x19, [x0]
  400c68:	cbz	x19, 400de0 <main+0x310>
  400c6c:	mov	x0, x19
  400c70:	bl	400aa0 <strlen@plt>
  400c74:	add	x1, x0, #0x2f
  400c78:	cmp	x1, #0x400, lsl #12
  400c7c:	b.hi	400dbc <main+0x2ec>  // b.pmore
  400c80:	add	x0, x0, #0x3e
  400c84:	mov	x1, x19
  400c88:	and	x0, x0, #0xfffffffffffffff0
  400c8c:	sub	sp, sp, x0
  400c90:	mov	x19, sp
  400c94:	mov	x0, x19
  400c98:	bl	4009c0 <stpcpy@plt>
  400c9c:	adrp	x1, 401000 <_fini+0x7c>
  400ca0:	add	x1, x1, #0x1d8
  400ca4:	add	x2, x0, #0x2e
  400ca8:	ldp	x4, x5, [x1]
  400cac:	stp	x4, x5, [x0]
  400cb0:	ldr	x3, [x1, #32]
  400cb4:	str	x3, [x0, #32]
  400cb8:	ldp	x4, x5, [x1, #16]
  400cbc:	stp	x4, x5, [x0, #16]
  400cc0:	ldur	x1, [x1, #39]
  400cc4:	stur	x1, [x0, #39]
  400cc8:	strb	wzr, [x2]
  400ccc:	mov	w1, #0x1ed                 	// #493
  400cd0:	mov	x0, x19
  400cd4:	bl	400ab0 <mkdir_parents@plt>
  400cd8:	adrp	x0, 401000 <_fini+0x7c>
  400cdc:	mov	x1, x19
  400ce0:	add	x0, x0, #0x180
  400ce4:	bl	4009f0 <symlink@plt>
  400ce8:	tbz	w0, #31, 400b3c <main+0x6c>
  400cec:	mov	w0, #0x0                   	// #0
  400cf0:	bl	400ac0 <log_get_max_level_realm@plt>
  400cf4:	cmp	w0, #0x2
  400cf8:	b.le	400bc0 <main+0xf0>
  400cfc:	bl	400a60 <__errno_location@plt>
  400d00:	ldr	w1, [x0]
  400d04:	mov	x6, x19
  400d08:	adrp	x5, 401000 <_fini+0x7c>
  400d0c:	adrp	x4, 401000 <_fini+0x7c>
  400d10:	add	x5, x5, #0x1b0
  400d14:	add	x4, x4, #0x218
  400d18:	adrp	x2, 400000 <_init-0x980>
  400d1c:	mov	w3, #0x42                  	// #66
  400d20:	add	x2, x2, #0xfdb
  400d24:	mov	w0, #0x3                   	// #3
  400d28:	bl	400a80 <log_internal_realm@plt>
  400d2c:	mov	w0, #0x1                   	// #1
  400d30:	b	400b40 <main+0x70>
  400d34:	bl	400a60 <__errno_location@plt>
  400d38:	mov	x1, x0
  400d3c:	mov	w0, #0x0                   	// #0
  400d40:	ldr	w19, [x1]
  400d44:	bl	400ac0 <log_get_max_level_realm@plt>
  400d48:	cmp	w19, #0x2
  400d4c:	b.eq	400d88 <main+0x2b8>  // b.none
  400d50:	cmp	w0, #0x2
  400d54:	b.le	400bc0 <main+0xf0>
  400d58:	mov	w1, w19
  400d5c:	adrp	x5, 401000 <_fini+0x7c>
  400d60:	adrp	x4, 401000 <_fini+0x7c>
  400d64:	add	x5, x5, #0x120
  400d68:	add	x4, x4, #0x218
  400d6c:	adrp	x2, 400000 <_init-0x980>
  400d70:	mov	w3, #0x39                  	// #57
  400d74:	add	x2, x2, #0xfdb
  400d78:	mov	w0, #0x3                   	// #3
  400d7c:	bl	400a80 <log_internal_realm@plt>
  400d80:	mov	w0, #0x1                   	// #1
  400d84:	b	400b40 <main+0x70>
  400d88:	cmp	w0, #0x6
  400d8c:	b.le	400b3c <main+0x6c>
  400d90:	mov	w1, w19
  400d94:	adrp	x5, 401000 <_fini+0x7c>
  400d98:	adrp	x4, 401000 <_fini+0x7c>
  400d9c:	add	x5, x5, #0xe0
  400da0:	add	x4, x4, #0x218
  400da4:	adrp	x2, 400000 <_init-0x980>
  400da8:	mov	w3, #0x35                  	// #53
  400dac:	add	x2, x2, #0xfdb
  400db0:	mov	w0, #0x7                   	// #7
  400db4:	bl	400a80 <log_internal_realm@plt>
  400db8:	b	400b3c <main+0x6c>
  400dbc:	adrp	x4, 401000 <_fini+0x7c>
  400dc0:	adrp	x1, 401000 <_fini+0x7c>
  400dc4:	adrp	x2, 400000 <_init-0x980>
  400dc8:	add	x4, x4, #0x210
  400dcc:	add	x1, x1, #0x160
  400dd0:	add	x2, x2, #0xfdb
  400dd4:	mov	w3, #0x3f                  	// #63
  400dd8:	mov	w0, #0x0                   	// #0
  400ddc:	bl	400a00 <log_assert_failed_realm@plt>
  400de0:	sub	sp, sp, #0x10
  400de4:	mov	x2, sp
  400de8:	mov	x19, x2
  400dec:	b	400cc8 <main+0x1f8>
  400df0:	bl	400a70 <__stack_chk_fail@plt>

0000000000400df4 <_start>:
  400df4:	mov	x29, #0x0                   	// #0
  400df8:	mov	x30, #0x0                   	// #0
  400dfc:	mov	x5, x0
  400e00:	ldr	x1, [sp]
  400e04:	add	x2, sp, #0x8
  400e08:	mov	x6, sp
  400e0c:	movz	x0, #0x0, lsl #48
  400e10:	movk	x0, #0x0, lsl #32
  400e14:	movk	x0, #0x40, lsl #16
  400e18:	movk	x0, #0xad0
  400e1c:	movz	x3, #0x0, lsl #48
  400e20:	movk	x3, #0x0, lsl #32
  400e24:	movk	x3, #0x40, lsl #16
  400e28:	movk	x3, #0xf00
  400e2c:	movz	x4, #0x0, lsl #48
  400e30:	movk	x4, #0x0, lsl #32
  400e34:	movk	x4, #0x40, lsl #16
  400e38:	movk	x4, #0xf80
  400e3c:	bl	4009d0 <__libc_start_main@plt>
  400e40:	bl	400a40 <abort@plt>

0000000000400e44 <call_weak_fn>:
  400e44:	adrp	x0, 411000 <__FRAME_END__+0xfca8>
  400e48:	ldr	x0, [x0, #4088]
  400e4c:	cbz	x0, 400e54 <call_weak_fn+0x10>
  400e50:	b	4009e0 <__gmon_start__@plt>
  400e54:	ret

0000000000400e58 <deregister_tm_clones>:
  400e58:	adrp	x0, 412000 <arg_dest>
  400e5c:	add	x0, x0, #0x8
  400e60:	adrp	x1, 412000 <arg_dest>
  400e64:	add	x1, x1, #0x8
  400e68:	cmp	x1, x0
  400e6c:	b.eq	400e84 <deregister_tm_clones+0x2c>  // b.none
  400e70:	adrp	x1, 400000 <_init-0x980>
  400e74:	ldr	x1, [x1, #3992]
  400e78:	cbz	x1, 400e84 <deregister_tm_clones+0x2c>
  400e7c:	mov	x16, x1
  400e80:	br	x16
  400e84:	ret

0000000000400e88 <register_tm_clones>:
  400e88:	adrp	x0, 412000 <arg_dest>
  400e8c:	add	x0, x0, #0x8
  400e90:	adrp	x1, 412000 <arg_dest>
  400e94:	add	x1, x1, #0x8
  400e98:	sub	x1, x1, x0
  400e9c:	lsr	x2, x1, #63
  400ea0:	add	x1, x2, x1, asr #3
  400ea4:	cmp	xzr, x1, asr #1
  400ea8:	asr	x1, x1, #1
  400eac:	b.eq	400ec4 <register_tm_clones+0x3c>  // b.none
  400eb0:	adrp	x2, 400000 <_init-0x980>
  400eb4:	ldr	x2, [x2, #4000]
  400eb8:	cbz	x2, 400ec4 <register_tm_clones+0x3c>
  400ebc:	mov	x16, x2
  400ec0:	br	x16
  400ec4:	ret

0000000000400ec8 <__do_global_dtors_aux>:
  400ec8:	stp	x29, x30, [sp, #-32]!
  400ecc:	mov	x29, sp
  400ed0:	str	x19, [sp, #16]
  400ed4:	adrp	x19, 412000 <arg_dest>
  400ed8:	ldrb	w0, [x19, #8]
  400edc:	cbnz	w0, 400eec <__do_global_dtors_aux+0x24>
  400ee0:	bl	400e58 <deregister_tm_clones>
  400ee4:	mov	w0, #0x1                   	// #1
  400ee8:	strb	w0, [x19, #8]
  400eec:	ldr	x19, [sp, #16]
  400ef0:	ldp	x29, x30, [sp], #32
  400ef4:	ret

0000000000400ef8 <frame_dummy>:
  400ef8:	b	400e88 <register_tm_clones>
  400efc:	nop

0000000000400f00 <__libc_csu_init>:
  400f00:	stp	x29, x30, [sp, #-64]!
  400f04:	mov	x29, sp
  400f08:	stp	x19, x20, [sp, #16]
  400f0c:	adrp	x20, 411000 <__FRAME_END__+0xfca8>
  400f10:	add	x20, x20, #0xd10
  400f14:	stp	x21, x22, [sp, #32]
  400f18:	adrp	x21, 411000 <__FRAME_END__+0xfca8>
  400f1c:	add	x21, x21, #0xd08
  400f20:	sub	x20, x20, x21
  400f24:	mov	w22, w0
  400f28:	stp	x23, x24, [sp, #48]
  400f2c:	mov	x23, x1
  400f30:	mov	x24, x2
  400f34:	bl	400980 <_init>
  400f38:	cmp	xzr, x20, asr #3
  400f3c:	b.eq	400f68 <__libc_csu_init+0x68>  // b.none
  400f40:	asr	x20, x20, #3
  400f44:	mov	x19, #0x0                   	// #0
  400f48:	ldr	x3, [x21, x19, lsl #3]
  400f4c:	mov	x2, x24
  400f50:	add	x19, x19, #0x1
  400f54:	mov	x1, x23
  400f58:	mov	w0, w22
  400f5c:	blr	x3
  400f60:	cmp	x20, x19
  400f64:	b.ne	400f48 <__libc_csu_init+0x48>  // b.any
  400f68:	ldp	x19, x20, [sp, #16]
  400f6c:	ldp	x21, x22, [sp, #32]
  400f70:	ldp	x23, x24, [sp, #48]
  400f74:	ldp	x29, x30, [sp], #64
  400f78:	ret
  400f7c:	nop

0000000000400f80 <__libc_csu_fini>:
  400f80:	ret

Disassembly of section .fini:

0000000000400f84 <_fini>:
  400f84:	stp	x29, x30, [sp, #-16]!
  400f88:	mov	x29, sp
  400f8c:	ldp	x29, x30, [sp], #16
  400f90:	ret
