In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclang_rt.msan_cxx-aarch64.a_clang_-O2:

ubsan_handlers_cxx.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__ubsan_handle_dynamic_type_cache_miss>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #32]
   8:	add	x29, sp, #0x20
   c:	ldur	w8, [x29, #-8]
  10:	ldur	w9, [x29, #-5]
  14:	mov	x3, sp
  18:	strb	wzr, [sp]
  1c:	stur	w8, [sp, #1]
  20:	str	w9, [sp, #4]
  24:	stp	x30, x29, [sp, #8]
  28:	bl	38 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE>
  2c:	ldp	x29, x30, [sp, #32]
  30:	add	sp, sp, #0x30
  34:	ret

0000000000000038 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE>:
  38:	stp	x29, x30, [sp, #-64]!
  3c:	stp	x24, x23, [sp, #16]
  40:	stp	x22, x21, [sp, #32]
  44:	stp	x20, x19, [sp, #48]
  48:	sub	sp, sp, #0x2a0
  4c:	ldr	x8, [x0, #24]
  50:	mov	x20, x0
  54:	mov	x19, x1
  58:	mov	x0, x1
  5c:	mov	x1, x8
  60:	mov	x21, x3
  64:	bl	0 <_ZN7__ubsan16checkDynamicTypeEPvS0_m>
  68:	tbnz	w0, #0, d4 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x9c>
  6c:	add	x8, sp, #0x278
  70:	mov	x0, x19
  74:	bl	0 <_ZN7__ubsan28getDynamicTypeInfoFromObjectEPv>
  78:	ldr	x0, [sp, #632]
  7c:	cbz	x0, 88 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x50>
  80:	bl	0 <_ZN7__ubsan21IsVptrCheckSuppressedEPKc>
  84:	tbnz	w0, #0, d4 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x9c>
  88:	add	x24, sp, #0x294
  8c:	add	x9, x20, #0xc
  90:	mov	w10, #0xffffffff            	// #-1
  94:	ldaxr	w8, [x9]
  98:	stlxr	w11, w10, [x9]
  9c:	cbnz	w11, 94 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x5c>
  a0:	ldr	w22, [x20, #8]
  a4:	ldr	x23, [x20]
  a8:	ldr	x9, [x21, #16]
  ac:	ldr	q0, [x21]
  b0:	bfi	x22, x8, #32, #32
  b4:	add	x2, sp, #0x260
  b8:	mov	w3, #0x1e                  	// #30
  bc:	mov	x0, x23
  c0:	mov	x1, x22
  c4:	str	x9, [sp, #624]
  c8:	str	q0, [sp, #608]
  cc:	bl	0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
  d0:	tbz	w0, #0, f0 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0xb8>
  d4:	mov	w0, wzr
  d8:	add	sp, sp, #0x2a0
  dc:	ldp	x20, x19, [sp, #48]
  e0:	ldp	x22, x21, [sp, #32]
  e4:	ldp	x24, x23, [sp, #16]
  e8:	ldp	x29, x30, [sp], #64
  ec:	ret
  f0:	ldr	x8, [x21, #16]
  f4:	ldr	q0, [x21]
  f8:	mov	w21, #0x1                   	// #1
  fc:	add	x0, sp, #0x210
 100:	add	x1, sp, #0x1f0
 104:	add	x2, sp, #0x1c8
 108:	mov	w3, #0x1e                  	// #30
 10c:	str	w21, [sp, #456]
 110:	str	x8, [sp, #512]
 114:	str	q0, [sp, #496]
 118:	stp	x23, x22, [sp, #464]
 11c:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
 120:	movi	v0.2d, #0x0
 124:	str	d0, [sp, #360]
 128:	str	d0, [sp, #400]
 12c:	ldr	q0, [sp]
 130:	adrp	x8, 0 <__ubsan_handle_dynamic_type_cache_miss>
 134:	adrp	x9, 0 <__ubsan_handle_dynamic_type_cache_miss>
 138:	str	w21, [sp, #16]
 13c:	stur	q0, [sp, #40]
 140:	ldr	d0, [x8]
 144:	stp	x23, x22, [sp, #24]
 148:	add	x9, x9, #0x0
 14c:	str	wzr, [sp, #344]
 150:	str	xzr, [sp, #352]
 154:	str	wzr, [sp, #384]
 158:	str	xzr, [sp, #392]
 15c:	str	xzr, [sp, #424]
 160:	str	wzr, [sp, #432]
 164:	adrp	x8, 0 <_ZN7__ubsan14TypeCheckKindsE>
 168:	ldr	x8, [x8]
 16c:	str	x9, [sp, #64]
 170:	ldr	w9, [sp, #668]
 174:	str	d0, [sp, #56]
 178:	ldr	x10, [x24]
 17c:	ldrb	w11, [x20, #32]
 180:	str	w9, [sp, #92]
 184:	mov	w9, #0x2                   	// #2
 188:	str	w9, [sp, #336]
 18c:	mov	w9, #0x5                   	// #5
 190:	stur	x10, [sp, #84]
 194:	ldr	w10, [sp, #668]
 198:	str	w9, [sp, #112]
 19c:	ldr	x9, [x24]
 1a0:	ldr	x8, [x8, x11, lsl #3]
 1a4:	str	wzr, [sp, #80]
 1a8:	str	w10, [sp, #124]
 1ac:	stur	x9, [sp, #116]
 1b0:	str	x8, [sp, #96]
 1b4:	str	x19, [sp, #128]
 1b8:	ldr	x1, [x20, #16]
 1bc:	add	x0, sp, #0x10
 1c0:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
 1c4:	add	x0, sp, #0x10
 1c8:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 1cc:	ldr	x8, [sp, #632]
 1d0:	ldr	x9, [sp, #640]
 1d4:	cbz	x8, 2a0 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x268>
 1d8:	cbz	x9, 314 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x2dc>
 1dc:	sub	x10, x19, x9
 1e0:	stp	x9, xzr, [sp, #96]
 1e4:	adrp	x9, 0 <__ubsan_handle_dynamic_type_cache_miss>
 1e8:	add	x9, x9, #0x0
 1ec:	str	x8, [sp, #128]
 1f0:	ldr	x8, [x24]
 1f4:	str	x9, [sp, #64]
 1f8:	mov	w9, #0x3                   	// #3
 1fc:	str	w9, [sp, #336]
 200:	ldr	w9, [sp, #668]
 204:	mov	w11, #0x2                   	// #2
 208:	adrp	x12, 0 <__ubsan_handle_dynamic_type_cache_miss>
 20c:	str	x10, [sp, #40]
 210:	mov	w10, #0x1                   	// #1
 214:	ldr	d1, [x12]
 218:	ldr	x12, [x24]
 21c:	str	w10, [sp, #112]
 220:	str	w10, [sp, #144]
 224:	str	w10, [sp, #432]
 228:	ldr	w10, [sp, #668]
 22c:	str	w11, [sp, #16]
 230:	str	w11, [sp, #80]
 234:	str	w11, [sp, #344]
 238:	str	w11, [sp, #384]
 23c:	ldr	x11, [sp, #648]
 240:	ldr	x13, [x24]
 244:	stur	x8, [sp, #84]
 248:	ldr	w8, [sp, #668]
 24c:	str	w9, [sp, #92]
 250:	adrp	x9, 0 <__ubsan_handle_dynamic_type_cache_miss>
 254:	movi	v0.2d, #0x0
 258:	add	x14, x19, #0x8
 25c:	add	x9, x9, #0x0
 260:	str	xzr, [sp, #24]
 264:	str	x19, [sp, #368]
 268:	str	xzr, [sp, #352]
 26c:	str	xzr, [sp, #392]
 270:	str	d0, [sp, #32]
 274:	str	d0, [sp, #360]
 278:	str	d0, [sp, #400]
 27c:	str	w10, [sp, #124]
 280:	stur	x12, [sp, #116]
 284:	str	w8, [sp, #156]
 288:	stur	x13, [sp, #148]
 28c:	str	x11, [sp, #160]
 290:	str	d1, [sp, #56]
 294:	str	x14, [sp, #408]
 298:	str	x9, [sp, #424]
 29c:	b	420 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x3e8>
 2a0:	add	x8, x9, #0x100, lsl #12
 2a4:	cmp	x8, #0x200, lsl #12
 2a8:	b.ls	39c <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x364>  // b.plast
 2ac:	adrp	x9, 0 <__ubsan_handle_dynamic_type_cache_miss>
 2b0:	ldr	d1, [x9]
 2b4:	adrp	x9, 0 <__ubsan_handle_dynamic_type_cache_miss>
 2b8:	add	x9, x9, #0x0
 2bc:	str	x9, [sp, #64]
 2c0:	mov	w9, #0x1                   	// #1
 2c4:	ldr	x10, [x24]
 2c8:	str	w9, [sp, #336]
 2cc:	str	w9, [sp, #80]
 2d0:	str	w9, [sp, #432]
 2d4:	ldr	w9, [sp, #668]
 2d8:	mov	w8, #0x2                   	// #2
 2dc:	str	w8, [sp, #16]
 2e0:	str	w8, [sp, #344]
 2e4:	str	w8, [sp, #384]
 2e8:	adrp	x8, 0 <__ubsan_handle_dynamic_type_cache_miss>
 2ec:	movi	v0.2d, #0x0
 2f0:	add	x11, x19, #0x8
 2f4:	add	x8, x8, #0x0
 2f8:	str	xzr, [sp, #24]
 2fc:	str	x19, [sp, #40]
 300:	str	xzr, [sp, #96]
 304:	str	x19, [sp, #368]
 308:	str	xzr, [sp, #352]
 30c:	str	xzr, [sp, #392]
 310:	b	400 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x3c8>
 314:	str	x8, [sp, #96]
 318:	adrp	x8, 0 <__ubsan_handle_dynamic_type_cache_miss>
 31c:	adrp	x10, 0 <__ubsan_handle_dynamic_type_cache_miss>
 320:	add	x8, x8, #0x0
 324:	ldr	d1, [x10]
 328:	ldr	x11, [x24]
 32c:	str	x8, [sp, #64]
 330:	ldr	w8, [sp, #668]
 334:	mov	w10, #0x1                   	// #1
 338:	str	w10, [sp, #336]
 33c:	str	w10, [sp, #80]
 340:	str	w10, [sp, #432]
 344:	adrp	x10, 0 <__ubsan_handle_dynamic_type_cache_miss>
 348:	mov	w9, #0x2                   	// #2
 34c:	movi	v0.2d, #0x0
 350:	add	x12, x19, #0x8
 354:	add	x10, x10, #0x0
 358:	str	xzr, [sp, #24]
 35c:	str	x19, [sp, #40]
 360:	str	x19, [sp, #368]
 364:	str	xzr, [sp, #352]
 368:	str	xzr, [sp, #392]
 36c:	str	w9, [sp, #16]
 370:	str	d0, [sp, #32]
 374:	str	w9, [sp, #344]
 378:	str	d0, [sp, #360]
 37c:	str	w9, [sp, #384]
 380:	str	d0, [sp, #400]
 384:	stur	x11, [sp, #84]
 388:	str	w8, [sp, #92]
 38c:	str	d1, [sp, #56]
 390:	str	x12, [sp, #408]
 394:	str	x10, [sp, #424]
 398:	b	420 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0x3e8>
 39c:	adrp	x9, 0 <__ubsan_handle_dynamic_type_cache_miss>
 3a0:	ldr	d1, [x9]
 3a4:	adrp	x9, 0 <__ubsan_handle_dynamic_type_cache_miss>
 3a8:	add	x9, x9, #0x0
 3ac:	str	x9, [sp, #64]
 3b0:	mov	w9, #0x1                   	// #1
 3b4:	ldr	x10, [x24]
 3b8:	str	w9, [sp, #336]
 3bc:	str	w9, [sp, #80]
 3c0:	str	w9, [sp, #432]
 3c4:	ldr	w9, [sp, #668]
 3c8:	mov	w8, #0x2                   	// #2
 3cc:	str	w8, [sp, #16]
 3d0:	str	w8, [sp, #344]
 3d4:	str	w8, [sp, #384]
 3d8:	adrp	x8, 0 <__ubsan_handle_dynamic_type_cache_miss>
 3dc:	str	xzr, [sp, #24]
 3e0:	movi	v0.2d, #0x0
 3e4:	str	x19, [sp, #40]
 3e8:	str	xzr, [sp, #96]
 3ec:	str	x19, [sp, #368]
 3f0:	add	x11, x19, #0x8
 3f4:	str	xzr, [sp, #352]
 3f8:	str	xzr, [sp, #392]
 3fc:	add	x8, x8, #0x0
 400:	str	d0, [sp, #32]
 404:	str	d0, [sp, #360]
 408:	str	d0, [sp, #400]
 40c:	stur	x10, [sp, #84]
 410:	str	w9, [sp, #92]
 414:	str	d1, [sp, #56]
 418:	str	x11, [sp, #408]
 41c:	str	x8, [sp, #424]
 420:	add	x0, sp, #0x10
 424:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 428:	add	x0, sp, #0x210
 42c:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
 430:	mov	w0, #0x1                   	// #1
 434:	b	d8 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE+0xa0>

0000000000000438 <__ubsan_handle_dynamic_type_cache_miss_abort>:
 438:	sub	sp, sp, #0x30
 43c:	stp	x29, x30, [sp, #32]
 440:	add	x29, sp, #0x20
 444:	ldur	w8, [x29, #-8]
 448:	ldur	w9, [x29, #-5]
 44c:	mov	x3, sp
 450:	strb	wzr, [sp]
 454:	stur	w8, [sp, #1]
 458:	str	w9, [sp, #4]
 45c:	stp	x30, x29, [sp, #8]
 460:	bl	38 <_ZL26HandleDynamicTypeCacheMissPN7__ubsan24DynamicTypeCacheMissDataEmmNS_13ReportOptionsE>
 464:	tbnz	w0, #0, 474 <__ubsan_handle_dynamic_type_cache_miss_abort+0x3c>
 468:	ldp	x29, x30, [sp, #32]
 46c:	add	sp, sp, #0x30
 470:	ret
 474:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000478 <__ubsan_handle_cfi_bad_type>:
 478:	str	x29, [sp, #-80]!
 47c:	stp	x30, x25, [sp, #16]
 480:	stp	x24, x23, [sp, #32]
 484:	stp	x22, x21, [sp, #48]
 488:	stp	x20, x19, [sp, #64]
 48c:	sub	sp, sp, #0x460
 490:	mov	x21, x3
 494:	mov	w24, w2
 498:	mov	x22, x1
 49c:	mov	x23, x0
 4a0:	add	x25, sp, #0x1d0
 4a4:	add	x9, x0, #0x14
 4a8:	mov	w10, #0xffffffff            	// #-1
 4ac:	ldaxr	w8, [x9]
 4b0:	stlxr	w11, w10, [x9]
 4b4:	cbnz	w11, 4ac <__ubsan_handle_cfi_bad_type+0x34>
 4b8:	ldr	w19, [x23, #16]
 4bc:	ldr	x20, [x23, #8]
 4c0:	ldr	x9, [x21, #16]
 4c4:	ldr	q0, [x21]
 4c8:	bfi	x19, x8, #32, #32
 4cc:	add	x2, sp, #0x430
 4d0:	mov	w3, #0x1f                  	// #31
 4d4:	mov	x0, x20
 4d8:	mov	x1, x19
 4dc:	str	x9, [sp, #1088]
 4e0:	str	q0, [sp, #1072]
 4e4:	bl	0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
 4e8:	tbnz	w0, #0, 854 <__ubsan_handle_cfi_bad_type+0x3dc>
 4ec:	ldr	x8, [x21, #16]
 4f0:	ldr	q0, [x21]
 4f4:	mov	w9, #0x1                   	// #1
 4f8:	add	x0, sp, #0x3e0
 4fc:	add	x1, sp, #0x3c0
 500:	add	x2, sp, #0x398
 504:	mov	w3, #0x1f                  	// #31
 508:	str	w9, [sp, #920]
 50c:	str	x8, [sp, #976]
 510:	str	q0, [sp, #960]
 514:	str	x20, [sp, #928]
 518:	str	x19, [sp, #936]
 51c:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
 520:	tbz	w24, #0, 564 <__ubsan_handle_cfi_bad_type+0xec>
 524:	add	x8, sp, #0x380
 528:	mov	x0, x22
 52c:	bl	0 <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv>
 530:	ldrb	w8, [x23]
 534:	sub	w8, w8, #0x1
 538:	cmp	w8, #0x5
 53c:	b.hi	580 <__ubsan_handle_cfi_bad_type+0x108>  // b.pmore
 540:	adrp	x9, 0 <__ubsan_handle_dynamic_type_cache_miss>
 544:	add	x9, x9, #0x0
 548:	adr	x10, 558 <__ubsan_handle_cfi_bad_type+0xe0>
 54c:	ldrb	w11, [x9, x8]
 550:	add	x10, x10, x11, lsl #2
 554:	br	x10
 558:	adrp	x24, 0 <__ubsan_handle_dynamic_type_cache_miss>
 55c:	add	x24, x24, #0x0
 560:	b	5ac <__ubsan_handle_cfi_bad_type+0x134>
 564:	str	xzr, [sp, #904]
 568:	str	xzr, [sp, #896]
 56c:	str	xzr, [sp, #912]
 570:	ldrb	w8, [x23]
 574:	sub	w8, w8, #0x1
 578:	cmp	w8, #0x5
 57c:	b.ls	540 <__ubsan_handle_cfi_bad_type+0xc8>  // b.plast
 580:	adrp	x24, 0 <__ubsan_handle_dynamic_type_cache_miss>
 584:	add	x24, x24, #0x0
 588:	b	5ac <__ubsan_handle_cfi_bad_type+0x134>
 58c:	adrp	x24, 0 <__ubsan_handle_dynamic_type_cache_miss>
 590:	add	x24, x24, #0x0
 594:	b	5ac <__ubsan_handle_cfi_bad_type+0x134>
 598:	adrp	x24, 0 <__ubsan_handle_dynamic_type_cache_miss>
 59c:	add	x24, x24, #0x0
 5a0:	b	5ac <__ubsan_handle_cfi_bad_type+0x134>
 5a4:	adrp	x24, 0 <__ubsan_handle_dynamic_type_cache_miss>
 5a8:	add	x24, x24, #0x0
 5ac:	ldr	q0, [sp, #448]
 5b0:	mov	w8, #0x1                   	// #1
 5b4:	stp	x20, x19, [sp, #472]
 5b8:	str	w8, [sp, #464]
 5bc:	adrp	x8, 0 <__ubsan_handle_dynamic_type_cache_miss>
 5c0:	stur	q0, [x25, #24]
 5c4:	movi	v0.2d, #0x0
 5c8:	str	d0, [sp, #808]
 5cc:	str	d0, [sp, #848]
 5d0:	ldr	d0, [x8]
 5d4:	adrp	x8, 0 <__ubsan_handle_dynamic_type_cache_miss>
 5d8:	add	x8, x8, #0x0
 5dc:	str	x8, [sp, #512]
 5e0:	str	wzr, [sp, #784]
 5e4:	str	wzr, [sp, #792]
 5e8:	str	xzr, [sp, #800]
 5ec:	str	wzr, [sp, #832]
 5f0:	str	xzr, [sp, #840]
 5f4:	str	xzr, [sp, #872]
 5f8:	str	d0, [sp, #504]
 5fc:	str	wzr, [sp, #880]
 600:	ldr	x1, [x23, #24]
 604:	add	x0, sp, #0x1d0
 608:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
 60c:	ldr	w8, [x0, #320]
 610:	cmp	w8, #0x8
 614:	b.eq	874 <__ubsan_handle_cfi_bad_type+0x3fc>  // b.none
 618:	add	w9, w8, #0x1
 61c:	add	x8, x0, x8, lsl #5
 620:	str	w9, [x0, #320]
 624:	str	wzr, [x8, #64]
 628:	ldr	w9, [sp, #1112]
 62c:	ldr	x10, [sp, #1104]
 630:	str	x24, [x8, #80]
 634:	str	w9, [x8, #76]
 638:	stur	x10, [x8, #68]
 63c:	ldr	w8, [x0, #320]
 640:	cmp	w8, #0x8
 644:	b.eq	874 <__ubsan_handle_cfi_bad_type+0x3fc>  // b.none
 648:	add	w9, w8, #0x1
 64c:	add	x8, x0, x8, lsl #5
 650:	mov	w10, #0x5                   	// #5
 654:	str	w9, [x0, #320]
 658:	str	w10, [x8, #64]
 65c:	ldr	w9, [sp, #1112]
 660:	ldr	x10, [sp, #1104]
 664:	add	x0, sp, #0x1d0
 668:	str	x22, [x8, #80]
 66c:	str	w9, [x8, #76]
 670:	stur	x10, [x8, #68]
 674:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 678:	ldr	x8, [sp, #896]
 67c:	adrp	x23, 0 <__ubsan_handle_dynamic_type_cache_miss>
 680:	cbz	x8, 6f8 <__ubsan_handle_cfi_bad_type+0x280>
 684:	adrp	x10, 0 <__ubsan_handle_dynamic_type_cache_miss>
 688:	mov	w9, #0x2                   	// #2
 68c:	add	x10, x10, #0x0
 690:	ldr	d1, [x23]
 694:	str	w9, [sp, #464]
 698:	ldr	x9, [sp, #1104]
 69c:	str	x10, [sp, #512]
 6a0:	ldr	w10, [sp, #1112]
 6a4:	movi	v0.2d, #0x0
 6a8:	mov	w11, #0x1                   	// #1
 6ac:	add	x0, sp, #0x1d0
 6b0:	str	xzr, [sp, #472]
 6b4:	str	x22, [sp, #488]
 6b8:	str	wzr, [sp, #792]
 6bc:	str	xzr, [sp, #800]
 6c0:	str	wzr, [sp, #832]
 6c4:	str	xzr, [sp, #840]
 6c8:	str	xzr, [sp, #872]
 6cc:	str	wzr, [sp, #880]
 6d0:	str	d0, [sp, #480]
 6d4:	str	d0, [sp, #808]
 6d8:	str	d0, [sp, #848]
 6dc:	str	w11, [sp, #784]
 6e0:	str	d1, [sp, #504]
 6e4:	str	w11, [sp, #528]
 6e8:	str	w10, [sp, #540]
 6ec:	stur	x9, [x25, #68]
 6f0:	str	x8, [sp, #544]
 6f4:	b	74c <__ubsan_handle_cfi_bad_type+0x2d4>
 6f8:	ldr	d1, [x23]
 6fc:	mov	w8, #0x2                   	// #2
 700:	str	w8, [sp, #16]
 704:	adrp	x8, 0 <__ubsan_handle_dynamic_type_cache_miss>
 708:	movi	v0.2d, #0x0
 70c:	add	x8, x8, #0x0
 710:	str	xzr, [sp, #24]
 714:	str	x22, [sp, #40]
 718:	str	wzr, [sp, #336]
 71c:	str	wzr, [sp, #344]
 720:	str	xzr, [sp, #352]
 724:	str	wzr, [sp, #384]
 728:	str	xzr, [sp, #392]
 72c:	str	xzr, [sp, #424]
 730:	str	d0, [sp, #32]
 734:	str	x8, [sp, #64]
 738:	str	d0, [sp, #360]
 73c:	str	d0, [sp, #400]
 740:	str	d1, [sp, #56]
 744:	str	wzr, [sp, #432]
 748:	add	x0, sp, #0x10
 74c:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 750:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 754:	add	x2, sp, #0x1d0
 758:	add	x3, sp, #0x450
 75c:	mov	x1, x22
 760:	str	xzr, [sp, #464]
 764:	bl	0 <_ZN11__sanitizer10Symbolizer27GetModuleNameAndOffsetForPCEmPPKcPm>
 768:	ldr	x8, [sp, #464]
 76c:	tst	w0, #0x1
 770:	adrp	x24, 0 <__ubsan_handle_dynamic_type_cache_miss>
 774:	add	x24, x24, #0x0
 778:	csel	x8, x8, xzr, ne  // ne = any
 77c:	cmp	x8, #0x0
 780:	csel	x22, x24, x8, eq  // eq = none
 784:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 788:	ldr	x1, [x21, #8]
 78c:	add	x2, sp, #0x1d0
 790:	add	x3, sp, #0x450
 794:	str	xzr, [sp, #464]
 798:	bl	0 <_ZN11__sanitizer10Symbolizer27GetModuleNameAndOffsetForPCEmPPKcPm>
 79c:	ldr	x8, [sp, #464]
 7a0:	tst	w0, #0x1
 7a4:	mov	x1, x22
 7a8:	csel	x8, x8, xzr, ne  // ne = any
 7ac:	cmp	x8, #0x0
 7b0:	csel	x21, x24, x8, eq  // eq = none
 7b4:	mov	x0, x21
 7b8:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 7bc:	cbz	w0, 84c <__ubsan_handle_cfi_bad_type+0x3d4>
 7c0:	ldr	q0, [sp]
 7c4:	ldr	w10, [sp, #1112]
 7c8:	mov	w8, #0x1                   	// #1
 7cc:	str	w8, [sp, #464]
 7d0:	adrp	x8, 0 <__ubsan_handle_dynamic_type_cache_miss>
 7d4:	add	x8, x8, #0x0
 7d8:	stp	x20, x19, [sp, #472]
 7dc:	ldr	d1, [x23]
 7e0:	stur	q0, [x25, #24]
 7e4:	ldr	w11, [sp, #1112]
 7e8:	str	x8, [sp, #512]
 7ec:	str	w10, [sp, #540]
 7f0:	ldr	x8, [sp, #1104]
 7f4:	ldr	x10, [sp, #1104]
 7f8:	movi	v0.2d, #0x0
 7fc:	mov	w9, #0x2                   	// #2
 800:	add	x0, sp, #0x1d0
 804:	str	d1, [sp, #504]
 808:	str	wzr, [sp, #528]
 80c:	str	wzr, [sp, #792]
 810:	str	xzr, [sp, #800]
 814:	str	d0, [sp, #808]
 818:	str	wzr, [sp, #832]
 81c:	str	xzr, [sp, #840]
 820:	str	d0, [sp, #848]
 824:	str	xzr, [sp, #872]
 828:	str	wzr, [sp, #880]
 82c:	stur	x8, [x25, #68]
 830:	str	x21, [sp, #544]
 834:	str	w9, [sp, #784]
 838:	str	wzr, [sp, #560]
 83c:	str	w11, [sp, #572]
 840:	stur	x10, [x25, #100]
 844:	str	x22, [sp, #576]
 848:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 84c:	add	x0, sp, #0x3e0
 850:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
 854:	add	sp, sp, #0x460
 858:	ldp	x20, x19, [sp, #64]
 85c:	ldp	x22, x21, [sp, #48]
 860:	ldp	x24, x23, [sp, #32]
 864:	ldp	x30, x25, [sp, #16]
 868:	ldr	x29, [sp], #80
 86c:	ret
 870:	bl	0 <_ZN11__sanitizer3DieEv>
 874:	adrp	x0, 0 <__ubsan_handle_dynamic_type_cache_miss>
 878:	adrp	x2, 0 <__ubsan_handle_dynamic_type_cache_miss>
 87c:	add	x0, x0, #0x0
 880:	add	x2, x2, #0x0
 884:	mov	w1, #0xc0                  	// #192
 888:	mov	x3, xzr
 88c:	mov	x4, xzr
 890:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000894 <__ubsan_handle_function_type_mismatch_v1>:
 894:	sub	sp, sp, #0x30
 898:	stp	x29, x30, [sp, #32]
 89c:	add	x29, sp, #0x20
 8a0:	ldur	w8, [x29, #-8]
 8a4:	ldur	w9, [x29, #-5]
 8a8:	mov	x4, sp
 8ac:	strb	wzr, [sp]
 8b0:	stur	w8, [sp, #1]
 8b4:	str	w9, [sp, #4]
 8b8:	stp	x30, x29, [sp, #8]
 8bc:	bl	8cc <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 8c0:	ldp	x29, x30, [sp, #32]
 8c4:	add	sp, sp, #0x30
 8c8:	ret

00000000000008cc <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>:
 8cc:	str	x29, [sp, #-80]!
 8d0:	stp	x30, x25, [sp, #16]
 8d4:	stp	x24, x23, [sp, #32]
 8d8:	stp	x22, x21, [sp, #48]
 8dc:	stp	x20, x19, [sp, #64]
 8e0:	sub	sp, sp, #0x290
 8e4:	mov	x21, x1
 8e8:	mov	x19, x0
 8ec:	mov	x0, x2
 8f0:	mov	x1, x3
 8f4:	mov	x23, x4
 8f8:	bl	0 <_ZN7__ubsan21checkTypeInfoEqualityEPKvS1_>
 8fc:	tbz	w0, #0, 908 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE+0x3c>
 900:	mov	w20, wzr
 904:	b	aac <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE+0x1e0>
 908:	add	x25, sp, #0x284
 90c:	add	x9, x19, #0xc
 910:	mov	w10, #0xffffffff            	// #-1
 914:	ldaxr	w8, [x9]
 918:	stlxr	w11, w10, [x9]
 91c:	cbnz	w11, 914 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE+0x48>
 920:	ldr	w22, [x19, #8]
 924:	ldr	x24, [x19]
 928:	ldr	x9, [x23, #16]
 92c:	ldr	q0, [x23]
 930:	bfi	x22, x8, #32, #32
 934:	add	x2, sp, #0x260
 938:	mov	w3, #0x1b                  	// #27
 93c:	mov	x0, x24
 940:	mov	x1, x22
 944:	str	x9, [sp, #624]
 948:	str	q0, [sp, #608]
 94c:	bl	0 <_ZN7__ubsan12ignoreReportENS_14SourceLocationENS_13ReportOptionsENS_9ErrorTypeE>
 950:	mov	w20, #0x1                   	// #1
 954:	tbnz	w0, #0, aac <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE+0x1e0>
 958:	ldr	x8, [x23, #16]
 95c:	ldr	q0, [x23]
 960:	add	x0, sp, #0x210
 964:	add	x1, sp, #0x1f0
 968:	add	x2, sp, #0x1c8
 96c:	mov	w3, #0x1b                  	// #27
 970:	str	w20, [sp, #456]
 974:	str	x8, [sp, #512]
 978:	str	q0, [sp, #496]
 97c:	stp	x24, x22, [sp, #464]
 980:	bl	0 <_ZN7__ubsan12ScopedReportC1ENS_13ReportOptionsENS_8LocationENS_9ErrorTypeE>
 984:	mov	x0, x21
 988:	bl	0 <_ZN7__ubsan21getSymbolizedLocationEm>
 98c:	ldr	q0, [sp]
 990:	adrp	x10, 0 <__ubsan_handle_dynamic_type_cache_miss>
 994:	ldr	x8, [x0, #40]
 998:	ldr	x11, [x25]
 99c:	stur	q0, [sp, #40]
 9a0:	ldr	d0, [x10]
 9a4:	adrp	x10, 0 <__ubsan_handle_dynamic_type_cache_miss>
 9a8:	add	x10, x10, #0x0
 9ac:	str	x10, [sp, #64]
 9b0:	ldr	w10, [sp, #652]
 9b4:	adrp	x9, 0 <__ubsan_handle_dynamic_type_cache_miss>
 9b8:	add	x9, x9, #0x0
 9bc:	cmp	x8, #0x0
 9c0:	stp	x24, x22, [sp, #24]
 9c4:	str	d0, [sp, #56]
 9c8:	movi	v0.2d, #0x0
 9cc:	csel	x22, x9, x8, eq  // eq = none
 9d0:	str	w20, [sp, #16]
 9d4:	str	wzr, [sp, #344]
 9d8:	str	xzr, [sp, #352]
 9dc:	str	wzr, [sp, #384]
 9e0:	str	xzr, [sp, #392]
 9e4:	str	xzr, [sp, #424]
 9e8:	str	wzr, [sp, #432]
 9ec:	str	w20, [sp, #336]
 9f0:	str	wzr, [sp, #80]
 9f4:	str	d0, [sp, #360]
 9f8:	str	d0, [sp, #400]
 9fc:	str	w10, [sp, #92]
 a00:	stur	x11, [sp, #84]
 a04:	str	x22, [sp, #96]
 a08:	ldr	x1, [x19, #16]
 a0c:	mov	x21, x0
 a10:	add	x0, sp, #0x10
 a14:	bl	0 <_ZN7__ubsan4DiaglsERKNS_14TypeDescriptorE>
 a18:	add	x0, sp, #0x10
 a1c:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 a20:	movi	v0.2d, #0x0
 a24:	adrp	x9, 0 <__ubsan_handle_dynamic_type_cache_miss>
 a28:	str	d0, [sp, #32]
 a2c:	str	d0, [sp, #360]
 a30:	str	d0, [sp, #400]
 a34:	ldr	d0, [x9]
 a38:	ldr	w9, [sp, #652]
 a3c:	ldr	x10, [x25]
 a40:	mov	w8, #0x3                   	// #3
 a44:	str	w8, [sp, #16]
 a48:	adrp	x8, 0 <__ubsan_handle_dynamic_type_cache_miss>
 a4c:	add	x8, x8, #0x0
 a50:	add	x0, sp, #0x10
 a54:	str	xzr, [sp, #24]
 a58:	str	x21, [sp, #48]
 a5c:	str	w20, [sp, #336]
 a60:	str	wzr, [sp, #344]
 a64:	str	xzr, [sp, #352]
 a68:	str	wzr, [sp, #384]
 a6c:	str	xzr, [sp, #392]
 a70:	str	xzr, [sp, #424]
 a74:	str	wzr, [sp, #432]
 a78:	str	wzr, [sp, #80]
 a7c:	str	x8, [sp, #64]
 a80:	str	w9, [sp, #92]
 a84:	stur	x10, [sp, #84]
 a88:	str	d0, [sp, #56]
 a8c:	str	x22, [sp, #96]
 a90:	bl	0 <_ZN7__ubsan4DiagD1Ev>
 a94:	cbz	x21, aa0 <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE+0x1d4>
 a98:	mov	x0, x21
 a9c:	bl	0 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>
 aa0:	add	x0, sp, #0x210
 aa4:	bl	0 <_ZN7__ubsan12ScopedReportD1Ev>
 aa8:	mov	w20, #0x1                   	// #1
 aac:	mov	w0, w20
 ab0:	add	sp, sp, #0x290
 ab4:	ldp	x20, x19, [sp, #64]
 ab8:	ldp	x22, x21, [sp, #48]
 abc:	ldp	x24, x23, [sp, #32]
 ac0:	ldp	x30, x25, [sp, #16]
 ac4:	ldr	x29, [sp], #80
 ac8:	ret

0000000000000acc <__ubsan_handle_function_type_mismatch_v1_abort>:
 acc:	sub	sp, sp, #0x30
 ad0:	stp	x29, x30, [sp, #32]
 ad4:	add	x29, sp, #0x20
 ad8:	ldur	w8, [x29, #-8]
 adc:	ldur	w9, [x29, #-5]
 ae0:	mov	w10, #0x1                   	// #1
 ae4:	mov	x4, sp
 ae8:	strb	w10, [sp]
 aec:	stur	w8, [sp, #1]
 af0:	str	w9, [sp, #4]
 af4:	stp	x30, x29, [sp, #8]
 af8:	bl	8cc <_ZN7__ubsanL26handleFunctionTypeMismatchEPNS_24FunctionTypeMismatchDataEmmmNS_13ReportOptionsE>
 afc:	tbnz	w0, #0, b0c <__ubsan_handle_function_type_mismatch_v1_abort+0x40>
 b00:	ldp	x29, x30, [sp, #32]
 b04:	add	sp, sp, #0x30
 b08:	ret
 b0c:	bl	0 <_ZN11__sanitizer3DieEv>

ubsan_type_hash.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN7__ubsan28getDynamicTypeInfoFromObjectEPv>:
   0:	ldr	x0, [x0]
   4:	b	0 <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv>

ubsan_type_hash_itanium.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN7__ubsan16checkDynamicTypeEPvS0_m>:
   0:	stp	x30, x23, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x19, x2
  10:	and	w8, w19, #0xffff
  14:	adrp	x9, 0 <_ZN7__ubsan16checkDynamicTypeEPvS0_m>
  18:	eor	w12, w8, #0x1
  1c:	add	x9, x9, #0x0
  20:	add	x8, x9, w12, uxtw #3
  24:	ldr	x10, [x8]
  28:	mov	x20, x1
  2c:	mov	x22, x8
  30:	cbz	x10, e8 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0xe8>
  34:	cmp	x10, x19
  38:	b.eq	e8 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0xe8>  // b.none
  3c:	ubfx	x10, x19, #16, #16
  40:	add	w11, w10, #0x1
  44:	mov	w13, #0xfffeffff            	// #-65537
  48:	add	w10, w11, w12
  4c:	add	w12, w10, w13
  50:	cmp	w10, #0x10, lsl #12
  54:	csel	w12, w12, w10, hi  // hi = pmore
  58:	add	x22, x9, w12, uxtw #3
  5c:	ldr	x10, [x22]
  60:	cbz	x10, e8 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0xe8>
  64:	cmp	x10, x19
  68:	b.eq	e8 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0xe8>  // b.none
  6c:	add	w10, w12, w11
  70:	mov	w12, #0xfffeffff            	// #-65537
  74:	add	w12, w10, w12
  78:	cmp	w10, #0x10, lsl #12
  7c:	csel	w12, w12, w10, hi  // hi = pmore
  80:	add	x22, x9, w12, uxtw #3
  84:	ldr	x10, [x22]
  88:	cbz	x10, e8 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0xe8>
  8c:	cmp	x10, x19
  90:	b.eq	e8 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0xe8>  // b.none
  94:	add	w10, w12, w11
  98:	mov	w12, #0xfffeffff            	// #-65537
  9c:	add	w12, w10, w12
  a0:	cmp	w10, #0x10, lsl #12
  a4:	csel	w12, w12, w10, hi  // hi = pmore
  a8:	add	x22, x9, w12, uxtw #3
  ac:	ldr	x10, [x22]
  b0:	cbz	x10, e8 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0xe8>
  b4:	cmp	x10, x19
  b8:	b.eq	e8 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0xe8>  // b.none
  bc:	add	w10, w12, w11
  c0:	mov	w11, #0xfffeffff            	// #-65537
  c4:	add	w11, w10, w11
  c8:	cmp	w10, #0x10, lsl #12
  cc:	csel	w10, w11, w10, hi  // hi = pmore
  d0:	add	x9, x9, w10, uxtw #3
  d4:	ldr	x10, [x9]
  d8:	cmp	x10, x19
  dc:	ccmp	x10, #0x0, #0x4, ne  // ne = any
  e0:	csel	x22, x9, x8, eq  // eq = none
  e4:	ldr	x10, [x22]
  e8:	cmp	x10, x19
  ec:	b.ne	114 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x114>  // b.any
  f0:	adrp	x9, 0 <__ubsan_vptr_type_cache>
  f4:	ldr	x9, [x9]
  f8:	and	x8, x19, #0x7f
  fc:	mov	w0, #0x1                   	// #1
 100:	str	x19, [x9, x8, lsl #3]
 104:	ldp	x20, x19, [sp, #32]
 108:	ldp	x22, x21, [sp, #16]
 10c:	ldp	x30, x23, [sp], #48
 110:	ret
 114:	ldr	x23, [x0]
 118:	mov	w1, #0x10                  	// #16
 11c:	sub	x21, x23, #0x10
 120:	mov	x0, x21
 124:	bl	0 <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm>
 128:	tbz	w0, #0, 184 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x184>
 12c:	ldur	x0, [x23, #-8]
 130:	cbz	x0, 104 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x104>
 134:	ldr	x21, [x21]
 138:	add	x8, x21, #0x100, lsl #12
 13c:	cmp	x8, #0x200, lsl #12
 140:	b.hi	184 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x184>  // b.pmore
 144:	adrp	x1, 0 <_ZTISt9type_info>
 148:	adrp	x2, 0 <_ZTIN10__cxxabiv117__class_type_infoE>
 14c:	ldr	x1, [x1]
 150:	ldr	x2, [x2]
 154:	mov	x3, xzr
 158:	bl	0 <__dynamic_cast>
 15c:	cbz	x0, 104 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x104>
 160:	neg	x2, x21
 164:	mov	x1, x20
 168:	bl	198 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l>
 16c:	tbz	w0, #0, 184 <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0x184>
 170:	adrp	x9, 0 <__ubsan_vptr_type_cache>
 174:	ldr	x9, [x9]
 178:	and	x8, x19, #0x7f
 17c:	str	x19, [x22]
 180:	b	fc <_ZN7__ubsan16checkDynamicTypeEPvS0_m+0xfc>
 184:	mov	w0, wzr
 188:	ldp	x20, x19, [sp, #32]
 18c:	ldp	x22, x21, [sp, #16]
 190:	ldp	x30, x23, [sp], #48
 194:	ret

0000000000000198 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l>:
 198:	stp	x30, x23, [sp, #-48]!
 19c:	stp	x22, x21, [sp, #16]
 1a0:	stp	x20, x19, [sp, #32]
 1a4:	mov	x19, x1
 1a8:	mov	x21, x0
 1ac:	ldr	x0, [x0, #8]
 1b0:	ldr	x1, [x1, #8]
 1b4:	mov	x20, x2
 1b8:	cmp	x0, x1
 1bc:	b.eq	21c <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x84>  // b.none
 1c0:	adrp	x22, 0 <_ZTIN10__cxxabiv117__class_type_infoE>
 1c4:	adrp	x23, 0 <_ZTIN10__cxxabiv120__si_class_type_infoE>
 1c8:	ldr	x22, [x22]
 1cc:	ldr	x23, [x23]
 1d0:	ldrb	w8, [x0]
 1d4:	cmp	w8, #0x2a
 1d8:	b.eq	1f0 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x58>  // b.none
 1dc:	ldrb	w8, [x1]
 1e0:	cmp	w8, #0x2a
 1e4:	b.eq	1f0 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x58>  // b.none
 1e8:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 1ec:	cbz	w0, 21c <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x84>
 1f0:	mov	x0, x21
 1f4:	mov	x1, x22
 1f8:	mov	x2, x23
 1fc:	mov	x3, xzr
 200:	bl	0 <__dynamic_cast>
 204:	cbz	x0, 234 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x9c>
 208:	ldr	x21, [x0, #16]
 20c:	ldr	x1, [x19, #8]
 210:	ldr	x0, [x21, #8]
 214:	cmp	x0, x1
 218:	b.ne	1d0 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x38>  // b.any
 21c:	cmp	x20, #0x0
 220:	cset	w0, eq  // eq = none
 224:	ldp	x20, x19, [sp, #32]
 228:	ldp	x22, x21, [sp, #16]
 22c:	ldp	x30, x23, [sp], #48
 230:	ret
 234:	adrp	x1, 0 <_ZTIN10__cxxabiv117__class_type_infoE>
 238:	adrp	x2, 0 <_ZTIN10__cxxabiv121__vmi_class_type_infoE>
 23c:	ldr	x1, [x1]
 240:	ldr	x2, [x2]
 244:	mov	x0, x21
 248:	mov	x3, xzr
 24c:	bl	0 <__dynamic_cast>
 250:	cbz	x0, 224 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x8c>
 254:	ldr	w8, [x0, #20]
 258:	mov	x21, x0
 25c:	cbz	w8, 29c <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x104>
 260:	mov	w8, wzr
 264:	add	x9, x21, w8, uxtw #4
 268:	ldr	x9, [x9, #32]
 26c:	tbnz	w9, #0, 2b0 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x118>
 270:	mov	w22, w8
 274:	add	x8, x21, x22, lsl #4
 278:	ldr	x0, [x8, #24]
 27c:	sub	x2, x20, x9, asr #8
 280:	mov	x1, x19
 284:	bl	198 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l>
 288:	tbnz	w0, #0, 2b0 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0x118>
 28c:	ldr	w9, [x21, #20]
 290:	add	w8, w22, #0x1
 294:	cmp	w8, w9
 298:	b.ne	264 <_ZL21isDerivedFromAtOffsetPKN10__cxxabiv117__class_type_infoES2_l+0xcc>  // b.any
 29c:	mov	w0, wzr
 2a0:	ldp	x20, x19, [sp, #32]
 2a4:	ldp	x22, x21, [sp, #16]
 2a8:	ldp	x30, x23, [sp], #48
 2ac:	ret
 2b0:	mov	w0, #0x1                   	// #1
 2b4:	ldp	x20, x19, [sp, #32]
 2b8:	ldp	x22, x21, [sp, #16]
 2bc:	ldp	x30, x23, [sp], #48
 2c0:	ret

00000000000002c4 <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv>:
 2c4:	stp	x30, x21, [sp, #-32]!
 2c8:	stp	x20, x19, [sp, #16]
 2cc:	sub	x20, x0, #0x10
 2d0:	mov	x21, x0
 2d4:	mov	w1, #0x10                  	// #16
 2d8:	mov	x0, x20
 2dc:	mov	x19, x8
 2e0:	bl	0 <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm>
 2e4:	tbz	w0, #0, 320 <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv+0x5c>
 2e8:	ldur	x21, [x21, #-8]
 2ec:	cbz	x21, 320 <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv+0x5c>
 2f0:	ldr	x20, [x20]
 2f4:	add	x8, x20, #0x100, lsl #12
 2f8:	cmp	x8, #0x200, lsl #12
 2fc:	b.hi	324 <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv+0x60>  // b.pmore
 300:	neg	x20, x20
 304:	mov	x0, x21
 308:	mov	x1, x20
 30c:	bl	358 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl>
 310:	ldr	x9, [x21, #8]
 314:	cbz	x0, 33c <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv+0x78>
 318:	ldr	x8, [x0, #8]
 31c:	b	344 <_ZN7__ubsan28getDynamicTypeInfoFromVtableEPv+0x80>
 320:	mov	x20, xzr
 324:	mov	x8, xzr
 328:	str	xzr, [x19]
 32c:	stp	x20, x8, [x19, #8]
 330:	ldp	x20, x19, [sp, #16]
 334:	ldp	x30, x21, [sp], #32
 338:	ret
 33c:	adrp	x8, 0 <_ZN7__ubsan16checkDynamicTypeEPvS0_m>
 340:	add	x8, x8, #0x0
 344:	str	x9, [x19]
 348:	stp	x20, x8, [x19, #8]
 34c:	ldp	x20, x19, [sp, #16]
 350:	ldp	x30, x21, [sp], #32
 354:	ret

0000000000000358 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl>:
 358:	str	x30, [sp, #-48]!
 35c:	stp	x22, x21, [sp, #16]
 360:	stp	x20, x19, [sp, #32]
 364:	mov	x20, x0
 368:	cbz	x1, 408 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xb0>
 36c:	cbz	x20, 408 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xb0>
 370:	adrp	x21, 0 <_ZTIN10__cxxabiv117__class_type_infoE>
 374:	adrp	x22, 0 <_ZTIN10__cxxabiv120__si_class_type_infoE>
 378:	ldr	x21, [x21]
 37c:	ldr	x22, [x22]
 380:	mov	x19, x1
 384:	mov	x0, x20
 388:	mov	x1, x21
 38c:	mov	x2, x22
 390:	mov	x3, xzr
 394:	bl	0 <__dynamic_cast>
 398:	cbz	x0, 3a8 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0x50>
 39c:	ldr	x20, [x0, #16]
 3a0:	cbnz	x20, 384 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0x2c>
 3a4:	b	408 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xb0>
 3a8:	adrp	x1, 0 <_ZTIN10__cxxabiv117__class_type_infoE>
 3ac:	adrp	x2, 0 <_ZTIN10__cxxabiv121__vmi_class_type_infoE>
 3b0:	ldr	x1, [x1]
 3b4:	ldr	x2, [x2]
 3b8:	mov	x0, x20
 3bc:	mov	x3, xzr
 3c0:	bl	0 <__dynamic_cast>
 3c4:	cbz	x0, 404 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xac>
 3c8:	ldr	w21, [x0, #20]
 3cc:	cbz	w21, 404 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xac>
 3d0:	add	x22, x0, #0x20
 3d4:	b	3e4 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0x8c>
 3d8:	subs	w21, w21, #0x1
 3dc:	add	x22, x22, #0x10
 3e0:	b.eq	404 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xac>  // b.none
 3e4:	ldr	x8, [x22]
 3e8:	tbnz	w8, #0, 3d8 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0x80>
 3ec:	ldur	x0, [x22, #-8]
 3f0:	sub	x1, x19, x8, asr #8
 3f4:	bl	358 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl>
 3f8:	cbz	x0, 3d8 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0x80>
 3fc:	mov	x20, x0
 400:	b	408 <_ZL16findBaseAtOffsetPKN10__cxxabiv117__class_type_infoEl+0xb0>
 404:	mov	x20, xzr
 408:	mov	x0, x20
 40c:	ldp	x20, x19, [sp, #32]
 410:	ldp	x22, x21, [sp, #16]
 414:	ldr	x30, [sp], #48
 418:	ret

000000000000041c <_ZN7__ubsan21checkTypeInfoEqualityEPKvS1_>:
 41c:	str	x30, [sp, #-16]!
 420:	ldr	x0, [x0, #8]
 424:	ldrb	w8, [x0]
 428:	cmp	w8, #0x2a
 42c:	b.ne	43c <_ZN7__ubsan21checkTypeInfoEqualityEPKvS1_+0x20>  // b.any
 430:	mov	w0, wzr
 434:	ldr	x30, [sp], #16
 438:	ret
 43c:	ldr	x1, [x1, #8]
 440:	ldrb	w8, [x1]
 444:	cmp	w8, #0x2a
 448:	b.ne	458 <_ZN7__ubsan21checkTypeInfoEqualityEPKvS1_+0x3c>  // b.any
 44c:	mov	w0, wzr
 450:	ldr	x30, [sp], #16
 454:	ret
 458:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 45c:	cmp	w0, #0x0
 460:	cset	w0, eq  // eq = none
 464:	ldr	x30, [sp], #16
 468:	ret

ubsan_type_hash_win.cpp.o:     file format elf64-littleaarch64


msan_new_delete.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_Znwm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x28, x19, [sp, #16]
   8:	mov	x29, sp
   c:	sub	sp, sp, #0x820
  10:	add	x8, sp, #0x8
  14:	add	x8, x8, #0x10
  18:	mov	x19, x0
  1c:	stp	x8, xzr, [sp, #8]
  20:	str	xzr, [sp, #2072]
  24:	bl	0 <__msan_get_track_origins>
  28:	cbz	w0, 90 <_Znwm+0x90>
  2c:	adrp	x8, 0 <_ZN6__msan11msan_initedE>
  30:	ldr	x8, [x8]
  34:	ldr	w8, [x8]
  38:	cbz	w8, 90 <_Znwm+0x90>
  3c:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
  40:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
  44:	ldr	x8, [x8]
  48:	mov	x1, x0
  4c:	ldr	w5, [x8, #36]
  50:	ldrb	w8, [x8, #34]
  54:	cmp	w5, #0x0
  58:	csel	x9, xzr, x29, eq  // eq = none
  5c:	cmp	w5, #0x1
  60:	str	x9, [sp, #2072]
  64:	b.hi	78 <_Znwm+0x78>  // b.pmore
  68:	b.ne	70 <_Znwm+0x70>  // b.any
  6c:	str	x1, [sp, #24]
  70:	str	w5, [sp, #16]
  74:	b	90 <_Znwm+0x90>
  78:	cmp	w8, #0x0
  7c:	cset	w4, ne  // ne = any
  80:	add	x0, sp, #0x8
  84:	mov	x2, x29
  88:	mov	x3, xzr
  8c:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
  90:	add	x1, sp, #0x8
  94:	mov	x0, x19
  98:	bl	0 <_ZN6__msan11msan_mallocEmPN11__sanitizer10StackTraceE>
  9c:	cbz	x0, b0 <_Znwm+0xb0>
  a0:	add	sp, sp, #0x820
  a4:	ldp	x28, x19, [sp, #16]
  a8:	ldp	x29, x30, [sp], #32
  ac:	ret
  b0:	add	x1, sp, #0x8
  b4:	mov	x0, x19
  b8:	bl	0 <_ZN11__sanitizer17ReportOutOfMemoryEmPKNS_10StackTraceE>

00000000000000bc <_Znam>:
  bc:	stp	x29, x30, [sp, #-32]!
  c0:	stp	x28, x19, [sp, #16]
  c4:	mov	x29, sp
  c8:	sub	sp, sp, #0x820
  cc:	add	x8, sp, #0x8
  d0:	add	x8, x8, #0x10
  d4:	mov	x19, x0
  d8:	stp	x8, xzr, [sp, #8]
  dc:	str	xzr, [sp, #2072]
  e0:	bl	0 <__msan_get_track_origins>
  e4:	cbz	w0, 14c <_Znam+0x90>
  e8:	adrp	x8, 0 <_ZN6__msan11msan_initedE>
  ec:	ldr	x8, [x8]
  f0:	ldr	w8, [x8]
  f4:	cbz	w8, 14c <_Znam+0x90>
  f8:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
  fc:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 100:	ldr	x8, [x8]
 104:	mov	x1, x0
 108:	ldr	w5, [x8, #36]
 10c:	ldrb	w8, [x8, #34]
 110:	cmp	w5, #0x0
 114:	csel	x9, xzr, x29, eq  // eq = none
 118:	cmp	w5, #0x1
 11c:	str	x9, [sp, #2072]
 120:	b.hi	134 <_Znam+0x78>  // b.pmore
 124:	b.ne	12c <_Znam+0x70>  // b.any
 128:	str	x1, [sp, #24]
 12c:	str	w5, [sp, #16]
 130:	b	14c <_Znam+0x90>
 134:	cmp	w8, #0x0
 138:	cset	w4, ne  // ne = any
 13c:	add	x0, sp, #0x8
 140:	mov	x2, x29
 144:	mov	x3, xzr
 148:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
 14c:	add	x1, sp, #0x8
 150:	mov	x0, x19
 154:	bl	0 <_ZN6__msan11msan_mallocEmPN11__sanitizer10StackTraceE>
 158:	cbz	x0, 16c <_Znam+0xb0>
 15c:	add	sp, sp, #0x820
 160:	ldp	x28, x19, [sp, #16]
 164:	ldp	x29, x30, [sp], #32
 168:	ret
 16c:	add	x1, sp, #0x8
 170:	mov	x0, x19
 174:	bl	0 <_ZN11__sanitizer17ReportOutOfMemoryEmPKNS_10StackTraceE>

0000000000000178 <_ZnwmRKSt9nothrow_t>:
 178:	stp	x29, x30, [sp, #-32]!
 17c:	stp	x28, x19, [sp, #16]
 180:	mov	x29, sp
 184:	sub	sp, sp, #0x820
 188:	add	x8, sp, #0x8
 18c:	add	x8, x8, #0x10
 190:	mov	x19, x0
 194:	stp	x8, xzr, [sp, #8]
 198:	str	xzr, [sp, #2072]
 19c:	bl	0 <__msan_get_track_origins>
 1a0:	cbz	w0, 208 <_ZnwmRKSt9nothrow_t+0x90>
 1a4:	adrp	x8, 0 <_ZN6__msan11msan_initedE>
 1a8:	ldr	x8, [x8]
 1ac:	ldr	w8, [x8]
 1b0:	cbz	w8, 208 <_ZnwmRKSt9nothrow_t+0x90>
 1b4:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 1b8:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 1bc:	ldr	x8, [x8]
 1c0:	mov	x1, x0
 1c4:	ldr	w5, [x8, #36]
 1c8:	ldrb	w8, [x8, #34]
 1cc:	cmp	w5, #0x0
 1d0:	csel	x9, xzr, x29, eq  // eq = none
 1d4:	cmp	w5, #0x1
 1d8:	str	x9, [sp, #2072]
 1dc:	b.hi	1f0 <_ZnwmRKSt9nothrow_t+0x78>  // b.pmore
 1e0:	b.ne	1e8 <_ZnwmRKSt9nothrow_t+0x70>  // b.any
 1e4:	str	x1, [sp, #24]
 1e8:	str	w5, [sp, #16]
 1ec:	b	208 <_ZnwmRKSt9nothrow_t+0x90>
 1f0:	cmp	w8, #0x0
 1f4:	cset	w4, ne  // ne = any
 1f8:	add	x0, sp, #0x8
 1fc:	mov	x2, x29
 200:	mov	x3, xzr
 204:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
 208:	add	x1, sp, #0x8
 20c:	mov	x0, x19
 210:	bl	0 <_ZN6__msan11msan_mallocEmPN11__sanitizer10StackTraceE>
 214:	add	sp, sp, #0x820
 218:	ldp	x28, x19, [sp, #16]
 21c:	ldp	x29, x30, [sp], #32
 220:	ret

0000000000000224 <_ZnamRKSt9nothrow_t>:
 224:	stp	x29, x30, [sp, #-32]!
 228:	stp	x28, x19, [sp, #16]
 22c:	mov	x29, sp
 230:	sub	sp, sp, #0x820
 234:	add	x8, sp, #0x8
 238:	add	x8, x8, #0x10
 23c:	mov	x19, x0
 240:	stp	x8, xzr, [sp, #8]
 244:	str	xzr, [sp, #2072]
 248:	bl	0 <__msan_get_track_origins>
 24c:	cbz	w0, 2b4 <_ZnamRKSt9nothrow_t+0x90>
 250:	adrp	x8, 0 <_ZN6__msan11msan_initedE>
 254:	ldr	x8, [x8]
 258:	ldr	w8, [x8]
 25c:	cbz	w8, 2b4 <_ZnamRKSt9nothrow_t+0x90>
 260:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 264:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 268:	ldr	x8, [x8]
 26c:	mov	x1, x0
 270:	ldr	w5, [x8, #36]
 274:	ldrb	w8, [x8, #34]
 278:	cmp	w5, #0x0
 27c:	csel	x9, xzr, x29, eq  // eq = none
 280:	cmp	w5, #0x1
 284:	str	x9, [sp, #2072]
 288:	b.hi	29c <_ZnamRKSt9nothrow_t+0x78>  // b.pmore
 28c:	b.ne	294 <_ZnamRKSt9nothrow_t+0x70>  // b.any
 290:	str	x1, [sp, #24]
 294:	str	w5, [sp, #16]
 298:	b	2b4 <_ZnamRKSt9nothrow_t+0x90>
 29c:	cmp	w8, #0x0
 2a0:	cset	w4, ne  // ne = any
 2a4:	add	x0, sp, #0x8
 2a8:	mov	x2, x29
 2ac:	mov	x3, xzr
 2b0:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
 2b4:	add	x1, sp, #0x8
 2b8:	mov	x0, x19
 2bc:	bl	0 <_ZN6__msan11msan_mallocEmPN11__sanitizer10StackTraceE>
 2c0:	add	sp, sp, #0x820
 2c4:	ldp	x28, x19, [sp, #16]
 2c8:	ldp	x29, x30, [sp], #32
 2cc:	ret

00000000000002d0 <_ZnwmSt11align_val_t>:
 2d0:	stp	x29, x30, [sp, #-48]!
 2d4:	str	x28, [sp, #16]
 2d8:	stp	x20, x19, [sp, #32]
 2dc:	mov	x29, sp
 2e0:	sub	sp, sp, #0x820
 2e4:	add	x8, sp, #0x8
 2e8:	add	x8, x8, #0x10
 2ec:	mov	x20, x1
 2f0:	mov	x19, x0
 2f4:	stp	x8, xzr, [sp, #8]
 2f8:	str	xzr, [sp, #2072]
 2fc:	bl	0 <__msan_get_track_origins>
 300:	cbz	w0, 368 <_ZnwmSt11align_val_t+0x98>
 304:	adrp	x8, 0 <_ZN6__msan11msan_initedE>
 308:	ldr	x8, [x8]
 30c:	ldr	w8, [x8]
 310:	cbz	w8, 368 <_ZnwmSt11align_val_t+0x98>
 314:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 318:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 31c:	ldr	x8, [x8]
 320:	mov	x1, x0
 324:	ldr	w5, [x8, #36]
 328:	ldrb	w8, [x8, #34]
 32c:	cmp	w5, #0x0
 330:	csel	x9, xzr, x29, eq  // eq = none
 334:	cmp	w5, #0x1
 338:	str	x9, [sp, #2072]
 33c:	b.hi	350 <_ZnwmSt11align_val_t+0x80>  // b.pmore
 340:	b.ne	348 <_ZnwmSt11align_val_t+0x78>  // b.any
 344:	str	x1, [sp, #24]
 348:	str	w5, [sp, #16]
 34c:	b	368 <_ZnwmSt11align_val_t+0x98>
 350:	cmp	w8, #0x0
 354:	cset	w4, ne  // ne = any
 358:	add	x0, sp, #0x8
 35c:	mov	x2, x29
 360:	mov	x3, xzr
 364:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
 368:	add	x2, sp, #0x8
 36c:	mov	x0, x20
 370:	mov	x1, x19
 374:	bl	0 <_ZN6__msan13msan_memalignEmmPN11__sanitizer10StackTraceE>
 378:	cbz	x0, 390 <_ZnwmSt11align_val_t+0xc0>
 37c:	add	sp, sp, #0x820
 380:	ldp	x20, x19, [sp, #32]
 384:	ldr	x28, [sp, #16]
 388:	ldp	x29, x30, [sp], #48
 38c:	ret
 390:	add	x1, sp, #0x8
 394:	mov	x0, x19
 398:	bl	0 <_ZN11__sanitizer17ReportOutOfMemoryEmPKNS_10StackTraceE>

000000000000039c <_ZnamSt11align_val_t>:
 39c:	stp	x29, x30, [sp, #-48]!
 3a0:	str	x28, [sp, #16]
 3a4:	stp	x20, x19, [sp, #32]
 3a8:	mov	x29, sp
 3ac:	sub	sp, sp, #0x820
 3b0:	add	x8, sp, #0x8
 3b4:	add	x8, x8, #0x10
 3b8:	mov	x20, x1
 3bc:	mov	x19, x0
 3c0:	stp	x8, xzr, [sp, #8]
 3c4:	str	xzr, [sp, #2072]
 3c8:	bl	0 <__msan_get_track_origins>
 3cc:	cbz	w0, 434 <_ZnamSt11align_val_t+0x98>
 3d0:	adrp	x8, 0 <_ZN6__msan11msan_initedE>
 3d4:	ldr	x8, [x8]
 3d8:	ldr	w8, [x8]
 3dc:	cbz	w8, 434 <_ZnamSt11align_val_t+0x98>
 3e0:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 3e4:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 3e8:	ldr	x8, [x8]
 3ec:	mov	x1, x0
 3f0:	ldr	w5, [x8, #36]
 3f4:	ldrb	w8, [x8, #34]
 3f8:	cmp	w5, #0x0
 3fc:	csel	x9, xzr, x29, eq  // eq = none
 400:	cmp	w5, #0x1
 404:	str	x9, [sp, #2072]
 408:	b.hi	41c <_ZnamSt11align_val_t+0x80>  // b.pmore
 40c:	b.ne	414 <_ZnamSt11align_val_t+0x78>  // b.any
 410:	str	x1, [sp, #24]
 414:	str	w5, [sp, #16]
 418:	b	434 <_ZnamSt11align_val_t+0x98>
 41c:	cmp	w8, #0x0
 420:	cset	w4, ne  // ne = any
 424:	add	x0, sp, #0x8
 428:	mov	x2, x29
 42c:	mov	x3, xzr
 430:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
 434:	add	x2, sp, #0x8
 438:	mov	x0, x20
 43c:	mov	x1, x19
 440:	bl	0 <_ZN6__msan13msan_memalignEmmPN11__sanitizer10StackTraceE>
 444:	cbz	x0, 45c <_ZnamSt11align_val_t+0xc0>
 448:	add	sp, sp, #0x820
 44c:	ldp	x20, x19, [sp, #32]
 450:	ldr	x28, [sp, #16]
 454:	ldp	x29, x30, [sp], #48
 458:	ret
 45c:	add	x1, sp, #0x8
 460:	mov	x0, x19
 464:	bl	0 <_ZN11__sanitizer17ReportOutOfMemoryEmPKNS_10StackTraceE>

0000000000000468 <_ZnwmSt11align_val_tRKSt9nothrow_t>:
 468:	stp	x29, x30, [sp, #-48]!
 46c:	str	x28, [sp, #16]
 470:	stp	x20, x19, [sp, #32]
 474:	mov	x29, sp
 478:	sub	sp, sp, #0x820
 47c:	add	x8, sp, #0x8
 480:	add	x8, x8, #0x10
 484:	mov	x19, x1
 488:	mov	x20, x0
 48c:	stp	x8, xzr, [sp, #8]
 490:	str	xzr, [sp, #2072]
 494:	bl	0 <__msan_get_track_origins>
 498:	cbz	w0, 500 <_ZnwmSt11align_val_tRKSt9nothrow_t+0x98>
 49c:	adrp	x8, 0 <_ZN6__msan11msan_initedE>
 4a0:	ldr	x8, [x8]
 4a4:	ldr	w8, [x8]
 4a8:	cbz	w8, 500 <_ZnwmSt11align_val_tRKSt9nothrow_t+0x98>
 4ac:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 4b0:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 4b4:	ldr	x8, [x8]
 4b8:	mov	x1, x0
 4bc:	ldr	w5, [x8, #36]
 4c0:	ldrb	w8, [x8, #34]
 4c4:	cmp	w5, #0x0
 4c8:	csel	x9, xzr, x29, eq  // eq = none
 4cc:	cmp	w5, #0x1
 4d0:	str	x9, [sp, #2072]
 4d4:	b.hi	4e8 <_ZnwmSt11align_val_tRKSt9nothrow_t+0x80>  // b.pmore
 4d8:	b.ne	4e0 <_ZnwmSt11align_val_tRKSt9nothrow_t+0x78>  // b.any
 4dc:	str	x1, [sp, #24]
 4e0:	str	w5, [sp, #16]
 4e4:	b	500 <_ZnwmSt11align_val_tRKSt9nothrow_t+0x98>
 4e8:	cmp	w8, #0x0
 4ec:	cset	w4, ne  // ne = any
 4f0:	add	x0, sp, #0x8
 4f4:	mov	x2, x29
 4f8:	mov	x3, xzr
 4fc:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
 500:	add	x2, sp, #0x8
 504:	mov	x0, x19
 508:	mov	x1, x20
 50c:	bl	0 <_ZN6__msan13msan_memalignEmmPN11__sanitizer10StackTraceE>
 510:	add	sp, sp, #0x820
 514:	ldp	x20, x19, [sp, #32]
 518:	ldr	x28, [sp, #16]
 51c:	ldp	x29, x30, [sp], #48
 520:	ret

0000000000000524 <_ZnamSt11align_val_tRKSt9nothrow_t>:
 524:	stp	x29, x30, [sp, #-48]!
 528:	str	x28, [sp, #16]
 52c:	stp	x20, x19, [sp, #32]
 530:	mov	x29, sp
 534:	sub	sp, sp, #0x820
 538:	add	x8, sp, #0x8
 53c:	add	x8, x8, #0x10
 540:	mov	x19, x1
 544:	mov	x20, x0
 548:	stp	x8, xzr, [sp, #8]
 54c:	str	xzr, [sp, #2072]
 550:	bl	0 <__msan_get_track_origins>
 554:	cbz	w0, 5bc <_ZnamSt11align_val_tRKSt9nothrow_t+0x98>
 558:	adrp	x8, 0 <_ZN6__msan11msan_initedE>
 55c:	ldr	x8, [x8]
 560:	ldr	w8, [x8]
 564:	cbz	w8, 5bc <_ZnamSt11align_val_tRKSt9nothrow_t+0x98>
 568:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 56c:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 570:	ldr	x8, [x8]
 574:	mov	x1, x0
 578:	ldr	w5, [x8, #36]
 57c:	ldrb	w8, [x8, #34]
 580:	cmp	w5, #0x0
 584:	csel	x9, xzr, x29, eq  // eq = none
 588:	cmp	w5, #0x1
 58c:	str	x9, [sp, #2072]
 590:	b.hi	5a4 <_ZnamSt11align_val_tRKSt9nothrow_t+0x80>  // b.pmore
 594:	b.ne	59c <_ZnamSt11align_val_tRKSt9nothrow_t+0x78>  // b.any
 598:	str	x1, [sp, #24]
 59c:	str	w5, [sp, #16]
 5a0:	b	5bc <_ZnamSt11align_val_tRKSt9nothrow_t+0x98>
 5a4:	cmp	w8, #0x0
 5a8:	cset	w4, ne  // ne = any
 5ac:	add	x0, sp, #0x8
 5b0:	mov	x2, x29
 5b4:	mov	x3, xzr
 5b8:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
 5bc:	add	x2, sp, #0x8
 5c0:	mov	x0, x19
 5c4:	mov	x1, x20
 5c8:	bl	0 <_ZN6__msan13msan_memalignEmmPN11__sanitizer10StackTraceE>
 5cc:	add	sp, sp, #0x820
 5d0:	ldp	x20, x19, [sp, #32]
 5d4:	ldr	x28, [sp, #16]
 5d8:	ldp	x29, x30, [sp], #48
 5dc:	ret

00000000000005e0 <_ZdlPv>:
 5e0:	stp	x29, x30, [sp, #-32]!
 5e4:	stp	x28, x19, [sp, #16]
 5e8:	mov	x29, sp
 5ec:	sub	sp, sp, #0x820
 5f0:	add	x8, sp, #0x8
 5f4:	add	x8, x8, #0x10
 5f8:	mov	x19, x0
 5fc:	stp	x8, xzr, [sp, #8]
 600:	str	xzr, [sp, #2072]
 604:	bl	0 <__msan_get_track_origins>
 608:	cbz	w0, 654 <_ZdlPv+0x74>
 60c:	adrp	x8, 0 <_ZN6__msan11msan_initedE>
 610:	ldr	x8, [x8]
 614:	ldr	w8, [x8]
 618:	cbz	w8, 654 <_ZdlPv+0x74>
 61c:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 620:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 624:	ldr	x8, [x8]
 628:	mov	x1, x0
 62c:	ldr	w5, [x8, #36]
 630:	ldrb	w8, [x8, #34]
 634:	cmp	w5, #0x0
 638:	csel	x9, xzr, x29, eq  // eq = none
 63c:	cmp	w5, #0x1
 640:	str	x9, [sp, #2072]
 644:	b.hi	674 <_ZdlPv+0x94>  // b.pmore
 648:	b.ne	650 <_ZdlPv+0x70>  // b.any
 64c:	str	x1, [sp, #24]
 650:	str	w5, [sp, #16]
 654:	cbz	x19, 664 <_ZdlPv+0x84>
 658:	add	x0, sp, #0x8
 65c:	mov	x1, x19
 660:	bl	0 <_ZN6__msan14MsanDeallocateEPN11__sanitizer10StackTraceEPv>
 664:	add	sp, sp, #0x820
 668:	ldp	x28, x19, [sp, #16]
 66c:	ldp	x29, x30, [sp], #32
 670:	ret
 674:	cmp	w8, #0x0
 678:	cset	w4, ne  // ne = any
 67c:	add	x0, sp, #0x8
 680:	mov	x2, x29
 684:	mov	x3, xzr
 688:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
 68c:	cbnz	x19, 658 <_ZdlPv+0x78>
 690:	b	664 <_ZdlPv+0x84>

0000000000000694 <_ZdaPv>:
 694:	stp	x29, x30, [sp, #-32]!
 698:	stp	x28, x19, [sp, #16]
 69c:	mov	x29, sp
 6a0:	sub	sp, sp, #0x820
 6a4:	add	x8, sp, #0x8
 6a8:	add	x8, x8, #0x10
 6ac:	mov	x19, x0
 6b0:	stp	x8, xzr, [sp, #8]
 6b4:	str	xzr, [sp, #2072]
 6b8:	bl	0 <__msan_get_track_origins>
 6bc:	cbz	w0, 708 <_ZdaPv+0x74>
 6c0:	adrp	x8, 0 <_ZN6__msan11msan_initedE>
 6c4:	ldr	x8, [x8]
 6c8:	ldr	w8, [x8]
 6cc:	cbz	w8, 708 <_ZdaPv+0x74>
 6d0:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 6d4:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 6d8:	ldr	x8, [x8]
 6dc:	mov	x1, x0
 6e0:	ldr	w5, [x8, #36]
 6e4:	ldrb	w8, [x8, #34]
 6e8:	cmp	w5, #0x0
 6ec:	csel	x9, xzr, x29, eq  // eq = none
 6f0:	cmp	w5, #0x1
 6f4:	str	x9, [sp, #2072]
 6f8:	b.hi	728 <_ZdaPv+0x94>  // b.pmore
 6fc:	b.ne	704 <_ZdaPv+0x70>  // b.any
 700:	str	x1, [sp, #24]
 704:	str	w5, [sp, #16]
 708:	cbz	x19, 718 <_ZdaPv+0x84>
 70c:	add	x0, sp, #0x8
 710:	mov	x1, x19
 714:	bl	0 <_ZN6__msan14MsanDeallocateEPN11__sanitizer10StackTraceEPv>
 718:	add	sp, sp, #0x820
 71c:	ldp	x28, x19, [sp, #16]
 720:	ldp	x29, x30, [sp], #32
 724:	ret
 728:	cmp	w8, #0x0
 72c:	cset	w4, ne  // ne = any
 730:	add	x0, sp, #0x8
 734:	mov	x2, x29
 738:	mov	x3, xzr
 73c:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
 740:	cbnz	x19, 70c <_ZdaPv+0x78>
 744:	b	718 <_ZdaPv+0x84>

0000000000000748 <_ZdlPvRKSt9nothrow_t>:
 748:	stp	x29, x30, [sp, #-32]!
 74c:	stp	x28, x19, [sp, #16]
 750:	mov	x29, sp
 754:	sub	sp, sp, #0x820
 758:	add	x8, sp, #0x8
 75c:	add	x8, x8, #0x10
 760:	mov	x19, x0
 764:	stp	x8, xzr, [sp, #8]
 768:	str	xzr, [sp, #2072]
 76c:	bl	0 <__msan_get_track_origins>
 770:	cbz	w0, 7bc <_ZdlPvRKSt9nothrow_t+0x74>
 774:	adrp	x8, 0 <_ZN6__msan11msan_initedE>
 778:	ldr	x8, [x8]
 77c:	ldr	w8, [x8]
 780:	cbz	w8, 7bc <_ZdlPvRKSt9nothrow_t+0x74>
 784:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 788:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 78c:	ldr	x8, [x8]
 790:	mov	x1, x0
 794:	ldr	w5, [x8, #36]
 798:	ldrb	w8, [x8, #34]
 79c:	cmp	w5, #0x0
 7a0:	csel	x9, xzr, x29, eq  // eq = none
 7a4:	cmp	w5, #0x1
 7a8:	str	x9, [sp, #2072]
 7ac:	b.hi	7dc <_ZdlPvRKSt9nothrow_t+0x94>  // b.pmore
 7b0:	b.ne	7b8 <_ZdlPvRKSt9nothrow_t+0x70>  // b.any
 7b4:	str	x1, [sp, #24]
 7b8:	str	w5, [sp, #16]
 7bc:	cbz	x19, 7cc <_ZdlPvRKSt9nothrow_t+0x84>
 7c0:	add	x0, sp, #0x8
 7c4:	mov	x1, x19
 7c8:	bl	0 <_ZN6__msan14MsanDeallocateEPN11__sanitizer10StackTraceEPv>
 7cc:	add	sp, sp, #0x820
 7d0:	ldp	x28, x19, [sp, #16]
 7d4:	ldp	x29, x30, [sp], #32
 7d8:	ret
 7dc:	cmp	w8, #0x0
 7e0:	cset	w4, ne  // ne = any
 7e4:	add	x0, sp, #0x8
 7e8:	mov	x2, x29
 7ec:	mov	x3, xzr
 7f0:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
 7f4:	cbnz	x19, 7c0 <_ZdlPvRKSt9nothrow_t+0x78>
 7f8:	b	7cc <_ZdlPvRKSt9nothrow_t+0x84>

00000000000007fc <_ZdaPvRKSt9nothrow_t>:
 7fc:	stp	x29, x30, [sp, #-32]!
 800:	stp	x28, x19, [sp, #16]
 804:	mov	x29, sp
 808:	sub	sp, sp, #0x820
 80c:	add	x8, sp, #0x8
 810:	add	x8, x8, #0x10
 814:	mov	x19, x0
 818:	stp	x8, xzr, [sp, #8]
 81c:	str	xzr, [sp, #2072]
 820:	bl	0 <__msan_get_track_origins>
 824:	cbz	w0, 870 <_ZdaPvRKSt9nothrow_t+0x74>
 828:	adrp	x8, 0 <_ZN6__msan11msan_initedE>
 82c:	ldr	x8, [x8]
 830:	ldr	w8, [x8]
 834:	cbz	w8, 870 <_ZdaPvRKSt9nothrow_t+0x74>
 838:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 83c:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 840:	ldr	x8, [x8]
 844:	mov	x1, x0
 848:	ldr	w5, [x8, #36]
 84c:	ldrb	w8, [x8, #34]
 850:	cmp	w5, #0x0
 854:	csel	x9, xzr, x29, eq  // eq = none
 858:	cmp	w5, #0x1
 85c:	str	x9, [sp, #2072]
 860:	b.hi	890 <_ZdaPvRKSt9nothrow_t+0x94>  // b.pmore
 864:	b.ne	86c <_ZdaPvRKSt9nothrow_t+0x70>  // b.any
 868:	str	x1, [sp, #24]
 86c:	str	w5, [sp, #16]
 870:	cbz	x19, 880 <_ZdaPvRKSt9nothrow_t+0x84>
 874:	add	x0, sp, #0x8
 878:	mov	x1, x19
 87c:	bl	0 <_ZN6__msan14MsanDeallocateEPN11__sanitizer10StackTraceEPv>
 880:	add	sp, sp, #0x820
 884:	ldp	x28, x19, [sp, #16]
 888:	ldp	x29, x30, [sp], #32
 88c:	ret
 890:	cmp	w8, #0x0
 894:	cset	w4, ne  // ne = any
 898:	add	x0, sp, #0x8
 89c:	mov	x2, x29
 8a0:	mov	x3, xzr
 8a4:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
 8a8:	cbnz	x19, 874 <_ZdaPvRKSt9nothrow_t+0x78>
 8ac:	b	880 <_ZdaPvRKSt9nothrow_t+0x84>

00000000000008b0 <_ZdlPvm>:
 8b0:	stp	x29, x30, [sp, #-32]!
 8b4:	stp	x28, x19, [sp, #16]
 8b8:	mov	x29, sp
 8bc:	sub	sp, sp, #0x820
 8c0:	add	x8, sp, #0x8
 8c4:	add	x8, x8, #0x10
 8c8:	mov	x19, x0
 8cc:	stp	x8, xzr, [sp, #8]
 8d0:	str	xzr, [sp, #2072]
 8d4:	bl	0 <__msan_get_track_origins>
 8d8:	cbz	w0, 924 <_ZdlPvm+0x74>
 8dc:	adrp	x8, 0 <_ZN6__msan11msan_initedE>
 8e0:	ldr	x8, [x8]
 8e4:	ldr	w8, [x8]
 8e8:	cbz	w8, 924 <_ZdlPvm+0x74>
 8ec:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 8f0:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 8f4:	ldr	x8, [x8]
 8f8:	mov	x1, x0
 8fc:	ldr	w5, [x8, #36]
 900:	ldrb	w8, [x8, #34]
 904:	cmp	w5, #0x0
 908:	csel	x9, xzr, x29, eq  // eq = none
 90c:	cmp	w5, #0x1
 910:	str	x9, [sp, #2072]
 914:	b.hi	944 <_ZdlPvm+0x94>  // b.pmore
 918:	b.ne	920 <_ZdlPvm+0x70>  // b.any
 91c:	str	x1, [sp, #24]
 920:	str	w5, [sp, #16]
 924:	cbz	x19, 934 <_ZdlPvm+0x84>
 928:	add	x0, sp, #0x8
 92c:	mov	x1, x19
 930:	bl	0 <_ZN6__msan14MsanDeallocateEPN11__sanitizer10StackTraceEPv>
 934:	add	sp, sp, #0x820
 938:	ldp	x28, x19, [sp, #16]
 93c:	ldp	x29, x30, [sp], #32
 940:	ret
 944:	cmp	w8, #0x0
 948:	cset	w4, ne  // ne = any
 94c:	add	x0, sp, #0x8
 950:	mov	x2, x29
 954:	mov	x3, xzr
 958:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
 95c:	cbnz	x19, 928 <_ZdlPvm+0x78>
 960:	b	934 <_ZdlPvm+0x84>

0000000000000964 <_ZdaPvm>:
 964:	stp	x29, x30, [sp, #-32]!
 968:	stp	x28, x19, [sp, #16]
 96c:	mov	x29, sp
 970:	sub	sp, sp, #0x820
 974:	add	x8, sp, #0x8
 978:	add	x8, x8, #0x10
 97c:	mov	x19, x0
 980:	stp	x8, xzr, [sp, #8]
 984:	str	xzr, [sp, #2072]
 988:	bl	0 <__msan_get_track_origins>
 98c:	cbz	w0, 9d8 <_ZdaPvm+0x74>
 990:	adrp	x8, 0 <_ZN6__msan11msan_initedE>
 994:	ldr	x8, [x8]
 998:	ldr	w8, [x8]
 99c:	cbz	w8, 9d8 <_ZdaPvm+0x74>
 9a0:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 9a4:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 9a8:	ldr	x8, [x8]
 9ac:	mov	x1, x0
 9b0:	ldr	w5, [x8, #36]
 9b4:	ldrb	w8, [x8, #34]
 9b8:	cmp	w5, #0x0
 9bc:	csel	x9, xzr, x29, eq  // eq = none
 9c0:	cmp	w5, #0x1
 9c4:	str	x9, [sp, #2072]
 9c8:	b.hi	9f8 <_ZdaPvm+0x94>  // b.pmore
 9cc:	b.ne	9d4 <_ZdaPvm+0x70>  // b.any
 9d0:	str	x1, [sp, #24]
 9d4:	str	w5, [sp, #16]
 9d8:	cbz	x19, 9e8 <_ZdaPvm+0x84>
 9dc:	add	x0, sp, #0x8
 9e0:	mov	x1, x19
 9e4:	bl	0 <_ZN6__msan14MsanDeallocateEPN11__sanitizer10StackTraceEPv>
 9e8:	add	sp, sp, #0x820
 9ec:	ldp	x28, x19, [sp, #16]
 9f0:	ldp	x29, x30, [sp], #32
 9f4:	ret
 9f8:	cmp	w8, #0x0
 9fc:	cset	w4, ne  // ne = any
 a00:	add	x0, sp, #0x8
 a04:	mov	x2, x29
 a08:	mov	x3, xzr
 a0c:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
 a10:	cbnz	x19, 9dc <_ZdaPvm+0x78>
 a14:	b	9e8 <_ZdaPvm+0x84>

0000000000000a18 <_ZdlPvSt11align_val_t>:
 a18:	stp	x29, x30, [sp, #-32]!
 a1c:	stp	x28, x19, [sp, #16]
 a20:	mov	x29, sp
 a24:	sub	sp, sp, #0x820
 a28:	add	x8, sp, #0x8
 a2c:	add	x8, x8, #0x10
 a30:	mov	x19, x0
 a34:	stp	x8, xzr, [sp, #8]
 a38:	str	xzr, [sp, #2072]
 a3c:	bl	0 <__msan_get_track_origins>
 a40:	cbz	w0, a8c <_ZdlPvSt11align_val_t+0x74>
 a44:	adrp	x8, 0 <_ZN6__msan11msan_initedE>
 a48:	ldr	x8, [x8]
 a4c:	ldr	w8, [x8]
 a50:	cbz	w8, a8c <_ZdlPvSt11align_val_t+0x74>
 a54:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 a58:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 a5c:	ldr	x8, [x8]
 a60:	mov	x1, x0
 a64:	ldr	w5, [x8, #36]
 a68:	ldrb	w8, [x8, #34]
 a6c:	cmp	w5, #0x0
 a70:	csel	x9, xzr, x29, eq  // eq = none
 a74:	cmp	w5, #0x1
 a78:	str	x9, [sp, #2072]
 a7c:	b.hi	aac <_ZdlPvSt11align_val_t+0x94>  // b.pmore
 a80:	b.ne	a88 <_ZdlPvSt11align_val_t+0x70>  // b.any
 a84:	str	x1, [sp, #24]
 a88:	str	w5, [sp, #16]
 a8c:	cbz	x19, a9c <_ZdlPvSt11align_val_t+0x84>
 a90:	add	x0, sp, #0x8
 a94:	mov	x1, x19
 a98:	bl	0 <_ZN6__msan14MsanDeallocateEPN11__sanitizer10StackTraceEPv>
 a9c:	add	sp, sp, #0x820
 aa0:	ldp	x28, x19, [sp, #16]
 aa4:	ldp	x29, x30, [sp], #32
 aa8:	ret
 aac:	cmp	w8, #0x0
 ab0:	cset	w4, ne  // ne = any
 ab4:	add	x0, sp, #0x8
 ab8:	mov	x2, x29
 abc:	mov	x3, xzr
 ac0:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
 ac4:	cbnz	x19, a90 <_ZdlPvSt11align_val_t+0x78>
 ac8:	b	a9c <_ZdlPvSt11align_val_t+0x84>

0000000000000acc <_ZdaPvSt11align_val_t>:
 acc:	stp	x29, x30, [sp, #-32]!
 ad0:	stp	x28, x19, [sp, #16]
 ad4:	mov	x29, sp
 ad8:	sub	sp, sp, #0x820
 adc:	add	x8, sp, #0x8
 ae0:	add	x8, x8, #0x10
 ae4:	mov	x19, x0
 ae8:	stp	x8, xzr, [sp, #8]
 aec:	str	xzr, [sp, #2072]
 af0:	bl	0 <__msan_get_track_origins>
 af4:	cbz	w0, b40 <_ZdaPvSt11align_val_t+0x74>
 af8:	adrp	x8, 0 <_ZN6__msan11msan_initedE>
 afc:	ldr	x8, [x8]
 b00:	ldr	w8, [x8]
 b04:	cbz	w8, b40 <_ZdaPvSt11align_val_t+0x74>
 b08:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 b0c:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 b10:	ldr	x8, [x8]
 b14:	mov	x1, x0
 b18:	ldr	w5, [x8, #36]
 b1c:	ldrb	w8, [x8, #34]
 b20:	cmp	w5, #0x0
 b24:	csel	x9, xzr, x29, eq  // eq = none
 b28:	cmp	w5, #0x1
 b2c:	str	x9, [sp, #2072]
 b30:	b.hi	b60 <_ZdaPvSt11align_val_t+0x94>  // b.pmore
 b34:	b.ne	b3c <_ZdaPvSt11align_val_t+0x70>  // b.any
 b38:	str	x1, [sp, #24]
 b3c:	str	w5, [sp, #16]
 b40:	cbz	x19, b50 <_ZdaPvSt11align_val_t+0x84>
 b44:	add	x0, sp, #0x8
 b48:	mov	x1, x19
 b4c:	bl	0 <_ZN6__msan14MsanDeallocateEPN11__sanitizer10StackTraceEPv>
 b50:	add	sp, sp, #0x820
 b54:	ldp	x28, x19, [sp, #16]
 b58:	ldp	x29, x30, [sp], #32
 b5c:	ret
 b60:	cmp	w8, #0x0
 b64:	cset	w4, ne  // ne = any
 b68:	add	x0, sp, #0x8
 b6c:	mov	x2, x29
 b70:	mov	x3, xzr
 b74:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
 b78:	cbnz	x19, b44 <_ZdaPvSt11align_val_t+0x78>
 b7c:	b	b50 <_ZdaPvSt11align_val_t+0x84>

0000000000000b80 <_ZdlPvSt11align_val_tRKSt9nothrow_t>:
 b80:	stp	x29, x30, [sp, #-32]!
 b84:	stp	x28, x19, [sp, #16]
 b88:	mov	x29, sp
 b8c:	sub	sp, sp, #0x820
 b90:	add	x8, sp, #0x8
 b94:	add	x8, x8, #0x10
 b98:	mov	x19, x0
 b9c:	stp	x8, xzr, [sp, #8]
 ba0:	str	xzr, [sp, #2072]
 ba4:	bl	0 <__msan_get_track_origins>
 ba8:	cbz	w0, bf4 <_ZdlPvSt11align_val_tRKSt9nothrow_t+0x74>
 bac:	adrp	x8, 0 <_ZN6__msan11msan_initedE>
 bb0:	ldr	x8, [x8]
 bb4:	ldr	w8, [x8]
 bb8:	cbz	w8, bf4 <_ZdlPvSt11align_val_tRKSt9nothrow_t+0x74>
 bbc:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 bc0:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 bc4:	ldr	x8, [x8]
 bc8:	mov	x1, x0
 bcc:	ldr	w5, [x8, #36]
 bd0:	ldrb	w8, [x8, #34]
 bd4:	cmp	w5, #0x0
 bd8:	csel	x9, xzr, x29, eq  // eq = none
 bdc:	cmp	w5, #0x1
 be0:	str	x9, [sp, #2072]
 be4:	b.hi	c14 <_ZdlPvSt11align_val_tRKSt9nothrow_t+0x94>  // b.pmore
 be8:	b.ne	bf0 <_ZdlPvSt11align_val_tRKSt9nothrow_t+0x70>  // b.any
 bec:	str	x1, [sp, #24]
 bf0:	str	w5, [sp, #16]
 bf4:	cbz	x19, c04 <_ZdlPvSt11align_val_tRKSt9nothrow_t+0x84>
 bf8:	add	x0, sp, #0x8
 bfc:	mov	x1, x19
 c00:	bl	0 <_ZN6__msan14MsanDeallocateEPN11__sanitizer10StackTraceEPv>
 c04:	add	sp, sp, #0x820
 c08:	ldp	x28, x19, [sp, #16]
 c0c:	ldp	x29, x30, [sp], #32
 c10:	ret
 c14:	cmp	w8, #0x0
 c18:	cset	w4, ne  // ne = any
 c1c:	add	x0, sp, #0x8
 c20:	mov	x2, x29
 c24:	mov	x3, xzr
 c28:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
 c2c:	cbnz	x19, bf8 <_ZdlPvSt11align_val_tRKSt9nothrow_t+0x78>
 c30:	b	c04 <_ZdlPvSt11align_val_tRKSt9nothrow_t+0x84>

0000000000000c34 <_ZdaPvSt11align_val_tRKSt9nothrow_t>:
 c34:	stp	x29, x30, [sp, #-32]!
 c38:	stp	x28, x19, [sp, #16]
 c3c:	mov	x29, sp
 c40:	sub	sp, sp, #0x820
 c44:	add	x8, sp, #0x8
 c48:	add	x8, x8, #0x10
 c4c:	mov	x19, x0
 c50:	stp	x8, xzr, [sp, #8]
 c54:	str	xzr, [sp, #2072]
 c58:	bl	0 <__msan_get_track_origins>
 c5c:	cbz	w0, ca8 <_ZdaPvSt11align_val_tRKSt9nothrow_t+0x74>
 c60:	adrp	x8, 0 <_ZN6__msan11msan_initedE>
 c64:	ldr	x8, [x8]
 c68:	ldr	w8, [x8]
 c6c:	cbz	w8, ca8 <_ZdaPvSt11align_val_tRKSt9nothrow_t+0x74>
 c70:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 c74:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 c78:	ldr	x8, [x8]
 c7c:	mov	x1, x0
 c80:	ldr	w5, [x8, #36]
 c84:	ldrb	w8, [x8, #34]
 c88:	cmp	w5, #0x0
 c8c:	csel	x9, xzr, x29, eq  // eq = none
 c90:	cmp	w5, #0x1
 c94:	str	x9, [sp, #2072]
 c98:	b.hi	cc8 <_ZdaPvSt11align_val_tRKSt9nothrow_t+0x94>  // b.pmore
 c9c:	b.ne	ca4 <_ZdaPvSt11align_val_tRKSt9nothrow_t+0x70>  // b.any
 ca0:	str	x1, [sp, #24]
 ca4:	str	w5, [sp, #16]
 ca8:	cbz	x19, cb8 <_ZdaPvSt11align_val_tRKSt9nothrow_t+0x84>
 cac:	add	x0, sp, #0x8
 cb0:	mov	x1, x19
 cb4:	bl	0 <_ZN6__msan14MsanDeallocateEPN11__sanitizer10StackTraceEPv>
 cb8:	add	sp, sp, #0x820
 cbc:	ldp	x28, x19, [sp, #16]
 cc0:	ldp	x29, x30, [sp], #32
 cc4:	ret
 cc8:	cmp	w8, #0x0
 ccc:	cset	w4, ne  // ne = any
 cd0:	add	x0, sp, #0x8
 cd4:	mov	x2, x29
 cd8:	mov	x3, xzr
 cdc:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
 ce0:	cbnz	x19, cac <_ZdaPvSt11align_val_tRKSt9nothrow_t+0x78>
 ce4:	b	cb8 <_ZdaPvSt11align_val_tRKSt9nothrow_t+0x84>

0000000000000ce8 <_ZdlPvmSt11align_val_t>:
 ce8:	stp	x29, x30, [sp, #-32]!
 cec:	stp	x28, x19, [sp, #16]
 cf0:	mov	x29, sp
 cf4:	sub	sp, sp, #0x820
 cf8:	add	x8, sp, #0x8
 cfc:	add	x8, x8, #0x10
 d00:	mov	x19, x0
 d04:	stp	x8, xzr, [sp, #8]
 d08:	str	xzr, [sp, #2072]
 d0c:	bl	0 <__msan_get_track_origins>
 d10:	cbz	w0, d5c <_ZdlPvmSt11align_val_t+0x74>
 d14:	adrp	x8, 0 <_ZN6__msan11msan_initedE>
 d18:	ldr	x8, [x8]
 d1c:	ldr	w8, [x8]
 d20:	cbz	w8, d5c <_ZdlPvmSt11align_val_t+0x74>
 d24:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 d28:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 d2c:	ldr	x8, [x8]
 d30:	mov	x1, x0
 d34:	ldr	w5, [x8, #36]
 d38:	ldrb	w8, [x8, #34]
 d3c:	cmp	w5, #0x0
 d40:	csel	x9, xzr, x29, eq  // eq = none
 d44:	cmp	w5, #0x1
 d48:	str	x9, [sp, #2072]
 d4c:	b.hi	d7c <_ZdlPvmSt11align_val_t+0x94>  // b.pmore
 d50:	b.ne	d58 <_ZdlPvmSt11align_val_t+0x70>  // b.any
 d54:	str	x1, [sp, #24]
 d58:	str	w5, [sp, #16]
 d5c:	cbz	x19, d6c <_ZdlPvmSt11align_val_t+0x84>
 d60:	add	x0, sp, #0x8
 d64:	mov	x1, x19
 d68:	bl	0 <_ZN6__msan14MsanDeallocateEPN11__sanitizer10StackTraceEPv>
 d6c:	add	sp, sp, #0x820
 d70:	ldp	x28, x19, [sp, #16]
 d74:	ldp	x29, x30, [sp], #32
 d78:	ret
 d7c:	cmp	w8, #0x0
 d80:	cset	w4, ne  // ne = any
 d84:	add	x0, sp, #0x8
 d88:	mov	x2, x29
 d8c:	mov	x3, xzr
 d90:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
 d94:	cbnz	x19, d60 <_ZdlPvmSt11align_val_t+0x78>
 d98:	b	d6c <_ZdlPvmSt11align_val_t+0x84>

0000000000000d9c <_ZdaPvmSt11align_val_t>:
 d9c:	stp	x29, x30, [sp, #-32]!
 da0:	stp	x28, x19, [sp, #16]
 da4:	mov	x29, sp
 da8:	sub	sp, sp, #0x820
 dac:	add	x8, sp, #0x8
 db0:	add	x8, x8, #0x10
 db4:	mov	x19, x0
 db8:	stp	x8, xzr, [sp, #8]
 dbc:	str	xzr, [sp, #2072]
 dc0:	bl	0 <__msan_get_track_origins>
 dc4:	cbz	w0, e10 <_ZdaPvmSt11align_val_t+0x74>
 dc8:	adrp	x8, 0 <_ZN6__msan11msan_initedE>
 dcc:	ldr	x8, [x8]
 dd0:	ldr	w8, [x8]
 dd4:	cbz	w8, e10 <_ZdaPvmSt11align_val_t+0x74>
 dd8:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 ddc:	adrp	x8, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 de0:	ldr	x8, [x8]
 de4:	mov	x1, x0
 de8:	ldr	w5, [x8, #36]
 dec:	ldrb	w8, [x8, #34]
 df0:	cmp	w5, #0x0
 df4:	csel	x9, xzr, x29, eq  // eq = none
 df8:	cmp	w5, #0x1
 dfc:	str	x9, [sp, #2072]
 e00:	b.hi	e30 <_ZdaPvmSt11align_val_t+0x94>  // b.pmore
 e04:	b.ne	e0c <_ZdaPvmSt11align_val_t+0x70>  // b.any
 e08:	str	x1, [sp, #24]
 e0c:	str	w5, [sp, #16]
 e10:	cbz	x19, e20 <_ZdaPvmSt11align_val_t+0x84>
 e14:	add	x0, sp, #0x8
 e18:	mov	x1, x19
 e1c:	bl	0 <_ZN6__msan14MsanDeallocateEPN11__sanitizer10StackTraceEPv>
 e20:	add	sp, sp, #0x820
 e24:	ldp	x28, x19, [sp, #16]
 e28:	ldp	x29, x30, [sp], #32
 e2c:	ret
 e30:	cmp	w8, #0x0
 e34:	cset	w4, ne  // ne = any
 e38:	add	x0, sp, #0x8
 e3c:	mov	x2, x29
 e40:	mov	x3, xzr
 e44:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
 e48:	cbnz	x19, e14 <_ZdaPvmSt11align_val_t+0x78>
 e4c:	b	e20 <_ZdaPvmSt11align_val_t+0x84>
