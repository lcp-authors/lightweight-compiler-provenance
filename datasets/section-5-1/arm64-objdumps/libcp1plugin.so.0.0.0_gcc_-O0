
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcp1plugin.so.0.0.0_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000005fc8 <.init>:
    5fc8:	stp	x29, x30, [sp, #-16]!
    5fcc:	mov	x29, sp
    5fd0:	bl	6d70 <_Z19decl_assembler_nameP9tree_node@plt+0x10>
    5fd4:	ldp	x29, x30, [sp], #16
    5fd8:	ret

Disassembly of section .plt:

0000000000005fe0 <_Znam@plt-0x20>:
    5fe0:	stp	x16, x30, [sp, #-16]!
    5fe4:	adrp	x16, 33000 <xexit@@Base+0x14c5c>
    5fe8:	ldr	x17, [x16, #4088]
    5fec:	add	x16, x16, #0xff8
    5ff0:	br	x17
    5ff4:	nop
    5ff8:	nop
    5ffc:	nop

0000000000006000 <_Znam@plt>:
    6000:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6004:	ldr	x17, [x16]
    6008:	add	x16, x16, #0x0
    600c:	br	x17

0000000000006010 <_Z22finish_enum_value_listP9tree_node@plt>:
    6010:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6014:	ldr	x17, [x16, #8]
    6018:	add	x16, x16, #0x8
    601c:	br	x17

0000000000006020 <_Z14cp_finish_declP9tree_nodeS0_bS0_i@plt>:
    6020:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6024:	ldr	x17, [x16, #16]
    6028:	add	x16, x16, #0x10
    602c:	br	x17

0000000000006030 <_Z9tree_consP9tree_nodeS0_S0_@plt>:
    6030:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6034:	ldr	x17, [x16, #24]
    6038:	add	x16, x16, #0x18
    603c:	br	x17

0000000000006040 <_Z29hash_table_higher_prime_indexm@plt>:
    6040:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6044:	ldr	x17, [x16, #32]
    6048:	add	x16, x16, #0x20
    604c:	br	x17

0000000000006050 <memcpy@plt>:
    6050:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6054:	ldr	x17, [x16, #40]
    6058:	add	x16, x16, #0x28
    605c:	br	x17

0000000000006060 <_Z19build_lang_decl_locj9tree_codeP9tree_nodeS1_@plt>:
    6060:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6064:	ldr	x17, [x16, #48]
    6068:	add	x16, x16, #0x30
    606c:	br	x17

0000000000006070 <select@plt>:
    6070:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6074:	ldr	x17, [x16, #56]
    6078:	add	x16, x16, #0x38
    607c:	br	x17

0000000000006080 <_Z11ggc_reallocPvm@plt>:
    6080:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6084:	ldr	x17, [x16, #64]
    6088:	add	x16, x16, #0x40
    608c:	br	x17

0000000000006090 <_Z10add_friendP9tree_nodeS0_b@plt>:
    6090:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6094:	ldr	x17, [x16, #72]
    6098:	add	x16, x16, #0x48
    609c:	br	x17

00000000000060a0 <_Z20determine_visibilityP9tree_node@plt>:
    60a0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    60a4:	ldr	x17, [x16, #80]
    60a8:	add	x16, x16, #0x50
    60ac:	br	x17

00000000000060b0 <_Z16build_array_typeP9tree_nodeS0_b@plt>:
    60b0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    60b4:	ldr	x17, [x16, #88]
    60b8:	add	x16, x16, #0x58
    60bc:	br	x17

00000000000060c0 <_Z18push_template_declP9tree_node@plt>:
    60c0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    60c4:	ldr	x17, [x16, #96]
    60c8:	add	x16, x16, #0x60
    60cc:	br	x17

00000000000060d0 <_Z19clone_function_declP9tree_nodeb@plt>:
    60d0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    60d4:	ldr	x17, [x16, #104]
    60d8:	add	x16, x16, #0x68
    60dc:	br	x17

00000000000060e0 <_Z19at_function_scope_pv@plt>:
    60e0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    60e4:	ldr	x17, [x16, #112]
    60e8:	add	x16, x16, #0x70
    60ec:	br	x17

00000000000060f0 <_Z17build_x_binary_opRK13op_location_t9tree_codeP9tree_nodeS2_S4_S2_PS4_i@plt>:
    60f0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    60f4:	ldr	x17, [x16, #120]
    60f8:	add	x16, x16, #0x78
    60fc:	br	x17

0000000000006100 <_Z5errorPKcz@plt>:
    6100:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6104:	ldr	x17, [x16, #128]
    6108:	add	x16, x16, #0x80
    610c:	br	x17

0000000000006110 <_Z9make_node9tree_code@plt>:
    6110:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6114:	ldr	x17, [x16, #136]
    6118:	add	x16, x16, #0x88
    611c:	br	x17

0000000000006120 <_Z9build_newPP3vecIP9tree_node5va_gc8vl_embedES1_S1_S6_ii@plt>:
    6120:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6124:	ldr	x17, [x16, #144]
    6128:	add	x16, x16, #0x90
    612c:	br	x17

0000000000006130 <_Z17c_register_pragmaPKcS0_PFvP10cpp_readerE@plt>:
    6130:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6134:	ldr	x17, [x16, #152]
    6138:	add	x16, x16, #0x98
    613c:	br	x17

0000000000006140 <calloc@plt>:
    6140:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6144:	ldr	x17, [x16, #160]
    6148:	add	x16, x16, #0xa0
    614c:	br	x17

0000000000006150 <_Z16strip_using_declP9tree_node@plt>:
    6150:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6154:	ldr	x17, [x16, #168]
    6158:	add	x16, x16, #0xa8
    615c:	br	x17

0000000000006160 <_Z22maybe_retrofit_in_chrgP9tree_node@plt>:
    6160:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6164:	ldr	x17, [x16, #176]
    6168:	add	x16, x16, #0xb0
    616c:	br	x17

0000000000006170 <_Z17push_to_top_levelv@plt>:
    6170:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6174:	ldr	x17, [x16, #184]
    6178:	add	x16, x16, #0xb8
    617c:	br	x17

0000000000006180 <_Z25skip_artificial_parms_forPK9tree_nodePS_@plt>:
    6180:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6184:	ldr	x17, [x16, #192]
    6188:	add	x16, x16, #0xc0
    618c:	br	x17

0000000000006190 <_Z16build_min_nt_locj9tree_codez@plt>:
    6190:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6194:	ldr	x17, [x16, #200]
    6198:	add	x16, x16, #0xc8
    619c:	br	x17

00000000000061a0 <strlen@plt>:
    61a0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    61a4:	ldr	x17, [x16, #208]
    61a8:	add	x16, x16, #0xd0
    61ac:	br	x17

00000000000061b0 <_Z17make_conv_op_nameP9tree_node@plt>:
    61b0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    61b4:	ldr	x17, [x16, #216]
    61b8:	add	x16, x16, #0xd8
    61bc:	br	x17

00000000000061c0 <fprintf@plt>:
    61c0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    61c4:	ldr	x17, [x16, #224]
    61c8:	add	x16, x16, #0xe0
    61cc:	br	x17

00000000000061d0 <_Z16vector_type_modePK9tree_node@plt>:
    61d0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    61d4:	ldr	x17, [x16, #232]
    61d8:	add	x16, x16, #0xe8
    61dc:	br	x17

00000000000061e0 <_Z19do_class_using_declP9tree_nodeS0_@plt>:
    61e0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    61e4:	ldr	x17, [x16, #240]
    61e8:	add	x16, x16, #0xf0
    61ec:	br	x17

00000000000061f0 <_Z11fatal_errorjPKcz@plt>:
    61f0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    61f4:	ldr	x17, [x16, #248]
    61f8:	add	x16, x16, #0xf8
    61fc:	br	x17

0000000000006200 <_Z31finish_class_member_access_expr7cp_exprP9tree_nodebi@plt>:
    6200:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6204:	ldr	x17, [x16, #256]
    6208:	add	x16, x16, #0x100
    620c:	br	x17

0000000000006210 <_Z15fold_build2_locj9tree_codeP9tree_nodeS1_S1_@plt>:
    6210:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6214:	ldr	x17, [x16, #264]
    6218:	add	x16, x16, #0x108
    621c:	br	x17

0000000000006220 <_Z27finish_member_template_declP9tree_node@plt>:
    6220:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6224:	ldr	x17, [x16, #272]
    6228:	add	x16, x16, #0x110
    622c:	br	x17

0000000000006230 <_Z17apply_memfn_qualsP9tree_nodei16cp_ref_qualifier@plt>:
    6230:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6234:	ldr	x17, [x16, #280]
    6238:	add	x16, x16, #0x118
    623c:	br	x17

0000000000006240 <_Z16build_offset_refP9tree_nodeS0_bi@plt>:
    6240:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6244:	ldr	x17, [x16, #288]
    6248:	add	x16, x16, #0x120
    624c:	br	x17

0000000000006250 <_Z26get_identifier_with_lengthPKcm@plt>:
    6250:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6254:	ldr	x17, [x16, #296]
    6258:	add	x16, x16, #0x128
    625c:	br	x17

0000000000006260 <htab_create_alloc@plt>:
    6260:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6264:	ldr	x17, [x16, #304]
    6268:	add	x16, x16, #0x130
    626c:	br	x17

0000000000006270 <_Z15build_this_parmP9tree_nodeS0_i@plt>:
    6270:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6274:	ldr	x17, [x16, #312]
    6278:	add	x16, x16, #0x138
    627c:	br	x17

0000000000006280 <_Z24begin_template_parm_listv@plt>:
    6280:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6284:	ldr	x17, [x16, #320]
    6288:	add	x16, x16, #0x140
    628c:	br	x17

0000000000006290 <xstrdup@plt>:
    6290:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6294:	ldr	x17, [x16, #328]
    6298:	add	x16, x16, #0x148
    629c:	br	x17

00000000000062a0 <_Z8ggc_freePv@plt>:
    62a0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    62a4:	ldr	x17, [x16, #336]
    62a8:	add	x16, x16, #0x150
    62ac:	br	x17

00000000000062b0 <_Z11finish_enumP9tree_node@plt>:
    62b0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    62b4:	ldr	x17, [x16, #344]
    62b8:	add	x16, x16, #0x158
    62bc:	br	x17

00000000000062c0 <register_callback@plt>:
    62c0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    62c4:	ldr	x17, [x16, #352]
    62c8:	add	x16, x16, #0x160
    62cc:	br	x17

00000000000062d0 <_Z16is_overloaded_fnP9tree_node@plt>:
    62d0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    62d4:	ldr	x17, [x16, #360]
    62d8:	add	x16, x16, #0x168
    62dc:	br	x17

00000000000062e0 <_Z19build_lambda_objectP9tree_node@plt>:
    62e0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    62e4:	ldr	x17, [x16, #368]
    62e8:	add	x16, x16, #0x170
    62ec:	br	x17

00000000000062f0 <strtol@plt>:
    62f0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    62f4:	ldr	x17, [x16, #376]
    62f8:	add	x16, x16, #0x178
    62fc:	br	x17

0000000000006300 <_Z17build_vector_typeP9tree_node8poly_intILj2ElE@plt>:
    6300:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6304:	ldr	x17, [x16, #384]
    6308:	add	x16, x16, #0x180
    630c:	br	x17

0000000000006310 <_Z11walk_tree_1PP9tree_nodePFS0_S1_PiPvES3_P8hash_setIS0_Lb0E19default_hash_traitsIS0_EEPFS0_S1_S2_S5_S3_SA_E@plt>:
    6310:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6314:	ldr	x17, [x16, #392]
    6318:	add	x16, x16, #0x188
    631c:	br	x17

0000000000006320 <free@plt>:
    6320:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6324:	ldr	x17, [x16, #400]
    6328:	add	x16, x16, #0x190
    632c:	br	x17

0000000000006330 <_Z25finish_member_declarationP9tree_node@plt>:
    6330:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6334:	ldr	x17, [x16, #408]
    6338:	add	x16, x16, #0x198
    633c:	br	x17

0000000000006340 <_Z11leave_scopev@plt>:
    6340:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6344:	ldr	x17, [x16, #416]
    6348:	add	x16, x16, #0x1a0
    634c:	br	x17

0000000000006350 <memset@plt>:
    6350:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6354:	ldr	x17, [x16, #424]
    6358:	add	x16, x16, #0x1a8
    635c:	br	x17

0000000000006360 <_Z16finish_call_exprP9tree_nodePP3vecIS0_5va_gc8vl_embedEbbi@plt>:
    6360:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6364:	ldr	x17, [x16, #432]
    6368:	add	x16, x16, #0x1b0
    636c:	br	x17

0000000000006370 <strchr@plt>:
    6370:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6374:	ldr	x17, [x16, #440]
    6378:	add	x16, x16, #0x1b8
    637c:	br	x17

0000000000006380 <_Z21lookup_qualified_nameP9tree_nodeS0_ibb@plt>:
    6380:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6384:	ldr	x17, [x16, #448]
    6388:	add	x16, x16, #0x1c0
    638c:	br	x17

0000000000006390 <_Z13current_scopev@plt>:
    6390:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6394:	ldr	x17, [x16, #456]
    6398:	add	x16, x16, #0x1c8
    639c:	br	x17

00000000000063a0 <_Z14xref_basetypesP9tree_nodeS0_@plt>:
    63a0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    63a4:	ldr	x17, [x16, #464]
    63a8:	add	x16, x16, #0x1d0
    63ac:	br	x17

00000000000063b0 <_Z13cp_type_qualsPK9tree_node@plt>:
    63b0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    63b4:	ldr	x17, [x16, #472]
    63b8:	add	x16, x16, #0x1d8
    63bc:	br	x17

00000000000063c0 <__cxa_finalize@plt>:
    63c0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    63c4:	ldr	x17, [x16, #480]
    63c8:	add	x16, x16, #0x1e0
    63cc:	br	x17

00000000000063d0 <_Z33build_varargs_function_type_arrayP9tree_nodeiPS0_@plt>:
    63d0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    63d4:	ldr	x17, [x16, #488]
    63d8:	add	x16, x16, #0x1e8
    63dc:	br	x17

00000000000063e0 <realloc@plt>:
    63e0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    63e4:	ldr	x17, [x16, #496]
    63e8:	add	x16, x16, #0x1f0
    63ec:	br	x17

00000000000063f0 <_Z22begin_class_definitionP9tree_node@plt>:
    63f0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    63f4:	ldr	x17, [x16, #504]
    63f8:	add	x16, x16, #0x1f8
    63fc:	br	x17

0000000000006400 <htab_find_slot_with_hash@plt>:
    6400:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6404:	ldr	x17, [x16, #512]
    6408:	add	x16, x16, #0x200
    640c:	br	x17

0000000000006410 <_Z16fold_convert_locjP9tree_nodeS0_@plt>:
    6410:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6414:	ldr	x17, [x16, #520]
    6418:	add	x16, x16, #0x208
    641c:	br	x17

0000000000006420 <_Z15build_tree_listP9tree_nodeS0_@plt>:
    6420:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6424:	ldr	x17, [x16, #528]
    6428:	add	x16, x16, #0x210
    642c:	br	x17

0000000000006430 <_Z16build_enumeratorP9tree_nodeS0_S0_S0_j@plt>:
    6430:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6434:	ldr	x17, [x16, #536]
    6438:	add	x16, x16, #0x218
    643c:	br	x17

0000000000006440 <_Z18make_typename_typeP9tree_nodeS0_9tag_typesi@plt>:
    6440:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6444:	ldr	x17, [x16, #544]
    6448:	add	x16, x16, #0x220
    644c:	br	x17

0000000000006450 <_Z27make_unbound_class_templateP9tree_nodeS0_S0_i@plt>:
    6450:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6454:	ldr	x17, [x16, #552]
    6458:	add	x16, x16, #0x228
    645c:	br	x17

0000000000006460 <_Z12build_stringiPKc@plt>:
    6460:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6464:	ldr	x17, [x16, #560]
    6468:	add	x16, x16, #0x230
    646c:	br	x17

0000000000006470 <htab_create_typed_alloc@plt>:
    6470:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6474:	ldr	x17, [x16, #568]
    6478:	add	x16, x16, #0x238
    647c:	br	x17

0000000000006480 <read@plt>:
    6480:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6484:	ldr	x17, [x16, #576]
    6488:	add	x16, x16, #0x240
    648c:	br	x17

0000000000006490 <_Z29c_build_bitfield_integer_typemi@plt>:
    6490:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6494:	ldr	x17, [x16, #584]
    6498:	add	x16, x16, #0x248
    649c:	br	x17

00000000000064a0 <_Z15duplicate_declsP9tree_nodeS0_b@plt>:
    64a0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    64a4:	ldr	x17, [x16, #592]
    64a8:	add	x16, x16, #0x250
    64ac:	br	x17

00000000000064b0 <_Z16build_x_unary_opj9tree_code7cp_expri@plt>:
    64b0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    64b4:	ldr	x17, [x16, #600]
    64b8:	add	x16, x16, #0x258
    64bc:	br	x17

00000000000064c0 <_Z18make_decltype_autov@plt>:
    64c0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    64c4:	ldr	x17, [x16, #608]
    64c8:	add	x16, x16, #0x260
    64cc:	br	x17

00000000000064d0 <_Z12ggc_set_markPKv@plt>:
    64d0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    64d4:	ldr	x17, [x16, #616]
    64d8:	add	x16, x16, #0x268
    64dc:	br	x17

00000000000064e0 <_Z22decl_cloned_function_pPK9tree_nodeb@plt>:
    64e0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    64e4:	ldr	x17, [x16, #624]
    64e8:	add	x16, x16, #0x270
    64ec:	br	x17

00000000000064f0 <_Z18build_pointer_typeP9tree_node@plt>:
    64f0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    64f4:	ldr	x17, [x16, #632]
    64f8:	add	x16, x16, #0x278
    64fc:	br	x17

0000000000006500 <_Z16build_memfn_typeP9tree_nodeS0_i16cp_ref_qualifier@plt>:
    6500:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6504:	ldr	x17, [x16, #640]
    6508:	add	x16, x16, #0x280
    650c:	br	x17

0000000000006510 <htab_find@plt>:
    6510:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6514:	ldr	x17, [x16, #648]
    6518:	add	x16, x16, #0x288
    651c:	br	x17

0000000000006520 <_Z25build_function_type_arrayP9tree_nodeiPS0_@plt>:
    6520:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6524:	ldr	x17, [x16, #656]
    6528:	add	x16, x16, #0x290
    652c:	br	x17

0000000000006530 <_Z24rest_of_decl_compilationP9tree_nodeii@plt>:
    6530:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6534:	ldr	x17, [x16, #664]
    6538:	add	x16, x16, #0x298
    653c:	br	x17

0000000000006540 <_Z23finish_compound_literalP9tree_nodeS0_i5fcl_t@plt>:
    6540:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6544:	ldr	x17, [x16, #672]
    6548:	add	x16, x16, #0x2a0
    654c:	br	x17

0000000000006550 <_Z21cp_build_indirect_refP9tree_node12ref_operatori@plt>:
    6550:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6554:	ldr	x17, [x16, #680]
    6558:	add	x16, x16, #0x2a8
    655c:	br	x17

0000000000006560 <_Z11begin_scope10scope_kindP9tree_node@plt>:
    6560:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6564:	ldr	x17, [x16, #688]
    6568:	add	x16, x16, #0x2b0
    656c:	br	x17

0000000000006570 <_Z12get_first_fnP9tree_node@plt>:
    6570:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6574:	ldr	x17, [x16, #696]
    6578:	add	x16, x16, #0x2b8
    657c:	br	x17

0000000000006580 <xmalloc_failed@plt>:
    6580:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6584:	ldr	x17, [x16, #704]
    6588:	add	x16, x16, #0x2c0
    658c:	br	x17

0000000000006590 <_Z11lookup_nameP9tree_node@plt>:
    6590:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6594:	ldr	x17, [x16, #712]
    6598:	add	x16, x16, #0x2c8
    659c:	br	x17

00000000000065a0 <_Z19release_tree_vectorP3vecIP9tree_node5va_gc8vl_embedE@plt>:
    65a0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    65a4:	ldr	x17, [x16, #720]
    65a8:	add	x16, x16, #0x2d0
    65ac:	br	x17

00000000000065b0 <_Z21process_template_parmP9tree_nodejS0_bb@plt>:
    65b0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    65b4:	ldr	x17, [x16, #728]
    65b8:	add	x16, x16, #0x2d8
    65bc:	br	x17

00000000000065c0 <_Z10build_declj9tree_codeP9tree_nodeS1_@plt>:
    65c0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    65c4:	ldr	x17, [x16, #736]
    65c8:	add	x16, x16, #0x2e0
    65cc:	br	x17

00000000000065d0 <_Z20build_qualified_typeP9tree_nodei@plt>:
    65d0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    65d4:	ldr	x17, [x16, #744]
    65d8:	add	x16, x16, #0x2e8
    65dc:	br	x17

00000000000065e0 <_Z17name_unnamed_typeP9tree_nodeS0_@plt>:
    65e0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    65e4:	ldr	x17, [x16, #752]
    65e8:	add	x16, x16, #0x2f0
    65ec:	br	x17

00000000000065f0 <_Z16lookup_name_realP9tree_nodeiibii@plt>:
    65f0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    65f4:	ldr	x17, [x16, #760]
    65f8:	add	x16, x16, #0x2f8
    65fc:	br	x17

0000000000006600 <htab_hash_string@plt>:
    6600:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6604:	ldr	x17, [x16, #768]
    6608:	add	x16, x16, #0x300
    660c:	br	x17

0000000000006610 <_Z20at_namespace_scope_pv@plt>:
    6610:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6614:	ldr	x17, [x16, #776]
    6618:	add	x16, x16, #0x308
    661c:	br	x17

0000000000006620 <_Z24compute_array_index_typeP9tree_nodeS0_i@plt>:
    6620:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6624:	ldr	x17, [x16, #784]
    6628:	add	x16, x16, #0x310
    662c:	br	x17

0000000000006630 <_Z13pop_namespacev@plt>:
    6630:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6634:	ldr	x17, [x16, #792]
    6638:	add	x16, x16, #0x318
    663c:	br	x17

0000000000006640 <_Z10get_typeidP9tree_nodei@plt>:
    6640:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6644:	ldr	x17, [x16, #800]
    6648:	add	x16, x16, #0x320
    664c:	br	x17

0000000000006650 <_Znwm@plt>:
    6650:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6654:	ldr	x17, [x16, #808]
    6658:	add	x16, x16, #0x328
    665c:	br	x17

0000000000006660 <_Z17build_lambda_exprv@plt>:
    6660:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6664:	ldr	x17, [x16, #816]
    6668:	add	x16, x16, #0x330
    666c:	br	x17

0000000000006670 <_Z20build_qualified_nameP9tree_nodeS0_S0_b@plt>:
    6670:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6674:	ldr	x17, [x16, #824]
    6678:	add	x16, x16, #0x338
    667c:	br	x17

0000000000006680 <_ZdlPvm@plt>:
    6680:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6684:	ldr	x17, [x16, #832]
    6688:	add	x16, x16, #0x340
    668c:	br	x17

0000000000006690 <_Z16at_class_scope_pv@plt>:
    6690:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6694:	ldr	x17, [x16, #840]
    6698:	add	x16, x16, #0x348
    669c:	br	x17

00000000000066a0 <_Z25finish_template_type_parmP9tree_nodeS0_@plt>:
    66a0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    66a4:	ldr	x17, [x16, #848]
    66a8:	add	x16, x16, #0x350
    66ac:	br	x17

00000000000066b0 <_Z26ggc_internal_cleared_allocmPFvPvEmm@plt>:
    66b0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    66b4:	ldr	x17, [x16, #856]
    66b8:	add	x16, x16, #0x358
    66bc:	br	x17

00000000000066c0 <_Z22current_decl_namespacev@plt>:
    66c0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    66c4:	ldr	x17, [x16, #864]
    66c8:	add	x16, x16, #0x360
    66cc:	br	x17

00000000000066d0 <_Z8pushdeclP9tree_nodeb@plt>:
    66d0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    66d4:	ldr	x17, [x16, #872]
    66d8:	add	x16, x16, #0x368
    66dc:	br	x17

00000000000066e0 <_Z27finish_namespace_using_declP9tree_nodeS0_S0_@plt>:
    66e0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    66e4:	ldr	x17, [x16, #880]
    66e8:	add	x16, x16, #0x370
    66ec:	br	x17

00000000000066f0 <_Z21perform_koenig_lookup7cp_exprP3vecIP9tree_node5va_gc8vl_embedEi@plt>:
    66f0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    66f4:	ldr	x17, [x16, #888]
    66f8:	add	x16, x16, #0x378
    66fc:	br	x17

0000000000006700 <_Z15fix_string_typeP9tree_node@plt>:
    6700:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6704:	ldr	x17, [x16, #896]
    6708:	add	x16, x16, #0x380
    670c:	br	x17

0000000000006710 <_Z24lhd_print_error_functionP18diagnostic_contextPKcP15diagnostic_info@plt>:
    6710:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6714:	ldr	x17, [x16, #904]
    6718:	add	x16, x16, #0x388
    671c:	br	x17

0000000000006720 <_Z32finish_namespace_using_directiveP9tree_nodeS0_@plt>:
    6720:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6724:	ldr	x17, [x16, #912]
    6728:	add	x16, x16, #0x390
    672c:	br	x17

0000000000006730 <_Z6tsubstP9tree_nodeS0_iS0_@plt>:
    6730:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6734:	ldr	x17, [x16, #920]
    6738:	add	x16, x16, #0x398
    673c:	br	x17

0000000000006740 <_Z18do_namespace_aliasP9tree_nodeS0_@plt>:
    6740:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6744:	ldr	x17, [x16, #928]
    6748:	add	x16, x16, #0x3a0
    674c:	br	x17

0000000000006750 <_Z15anon_aggrname_pPK9tree_node@plt>:
    6750:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6754:	ldr	x17, [x16, #936]
    6758:	add	x16, x16, #0x3a8
    675c:	br	x17

0000000000006760 <_Z19toplevel_bindings_pv@plt>:
    6760:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6764:	ldr	x17, [x16, #944]
    6768:	add	x16, x16, #0x3b0
    676c:	br	x17

0000000000006770 <_Z23identifier_global_valueP9tree_node@plt>:
    6770:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6774:	ldr	x17, [x16, #952]
    6778:	add	x16, x16, #0x3b8
    677c:	br	x17

0000000000006780 <_Z13delete_sanityP9tree_nodeS0_bii@plt>:
    6780:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6784:	ldr	x17, [x16, #960]
    6788:	add	x16, x16, #0x3c0
    678c:	br	x17

0000000000006790 <_Z17end_template_declv@plt>:
    6790:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6794:	ldr	x17, [x16, #968]
    6798:	add	x16, x16, #0x3c8
    679c:	br	x17

00000000000067a0 <_Z12build_typeidP9tree_nodei@plt>:
    67a0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    67a4:	ldr	x17, [x16, #976]
    67a8:	add	x16, x16, #0x3d0
    67ac:	br	x17

00000000000067b0 <_Z18pop_from_top_levelv@plt>:
    67b0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    67b4:	ldr	x17, [x16, #984]
    67b8:	add	x16, x16, #0x3d8
    67bc:	br	x17

00000000000067c0 <_Z29finish_template_template_parmP9tree_nodeS0_@plt>:
    67c0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    67c4:	ldr	x17, [x16, #992]
    67c8:	add	x16, x16, #0x3e0
    67cc:	br	x17

00000000000067d0 <sbrk@plt>:
    67d0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    67d4:	ldr	x17, [x16, #1000]
    67d8:	add	x16, x16, #0x3e8
    67dc:	br	x17

00000000000067e0 <_Z26cxx_sizeof_or_alignof_exprP9tree_node9tree_codeb@plt>:
    67e0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    67e4:	ldr	x17, [x16, #1008]
    67e8:	add	x16, x16, #0x3f0
    67ec:	br	x17

00000000000067f0 <_Z14push_namespaceP9tree_nodeb@plt>:
    67f0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    67f4:	ldr	x17, [x16, #1016]
    67f8:	add	x16, x16, #0x3f8
    67fc:	br	x17

0000000000006800 <htab_remove_elt_with_hash@plt>:
    6800:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6804:	ldr	x17, [x16, #1024]
    6808:	add	x16, x16, #0x400
    680c:	br	x17

0000000000006810 <_Z13make_tree_veci@plt>:
    6810:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6814:	ldr	x17, [x16, #1032]
    6818:	add	x16, x16, #0x408
    681c:	br	x17

0000000000006820 <_Z24build_x_conditional_exprjP9tree_nodeS0_S0_i@plt>:
    6820:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6824:	ldr	x17, [x16, #1040]
    6828:	add	x16, x16, #0x410
    682c:	br	x17

0000000000006830 <htab_find_slot@plt>:
    6830:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6834:	ldr	x17, [x16, #1048]
    6838:	add	x16, x16, #0x418
    683c:	br	x17

0000000000006840 <_Z20finish_template_typeP9tree_nodeS0_i@plt>:
    6840:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6844:	ldr	x17, [x16, #1056]
    6848:	add	x16, x16, #0x420
    684c:	br	x17

0000000000006850 <_ZdaPv@plt>:
    6850:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6854:	ldr	x17, [x16, #1064]
    6858:	add	x16, x16, #0x428
    685c:	br	x17

0000000000006860 <_Z22build_array_type_neltsP9tree_node8poly_intILj2EmE@plt>:
    6860:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6864:	ldr	x17, [x16, #1072]
    6868:	add	x16, x16, #0x430
    686c:	br	x17

0000000000006870 <_Z17build_ptrmem_typeP9tree_nodeS0_@plt>:
    6870:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6874:	ldr	x17, [x16, #1080]
    6878:	add	x16, x16, #0x438
    687c:	br	x17

0000000000006880 <_Z16make_tree_vectorv@plt>:
    6880:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6884:	ldr	x17, [x16, #1088]
    6888:	add	x16, x16, #0x440
    688c:	br	x17

0000000000006890 <_Z21finish_base_specifierP9tree_nodeS0_b@plt>:
    6890:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6894:	ldr	x17, [x16, #1096]
    6898:	add	x16, x16, #0x448
    689c:	br	x17

00000000000068a0 <__errno_location@plt>:
    68a0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    68a4:	ldr	x17, [x16, #1104]
    68a8:	add	x16, x16, #0x450
    68ac:	br	x17

00000000000068b0 <_Z16cp_expr_locationPK9tree_node@plt>:
    68b0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    68b4:	ldr	x17, [x16, #1112]
    68b8:	add	x16, x16, #0x458
    68bc:	br	x17

00000000000068c0 <_Z23build_exception_variantP9tree_nodeS0_@plt>:
    68c0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    68c4:	ldr	x17, [x16, #1120]
    68c8:	add	x16, x16, #0x460
    68cc:	br	x17

00000000000068d0 <_Z18build_int_cst_typeP9tree_node8poly_intILj2ElE@plt>:
    68d0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    68d4:	ldr	x17, [x16, #1128]
    68d8:	add	x16, x16, #0x468
    68dc:	br	x17

00000000000068e0 <_Z11linemap_addP9line_maps9lc_reasonjPKcj@plt>:
    68e0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    68e4:	ldr	x17, [x16, #1136]
    68e8:	add	x16, x16, #0x470
    68ec:	br	x17

00000000000068f0 <_Z10start_enumP9tree_nodeS0_S0_S0_bPb@plt>:
    68f0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    68f4:	ldr	x17, [x16, #1144]
    68f8:	add	x16, x16, #0x478
    68fc:	br	x17

0000000000006900 <htab_traverse_noresize@plt>:
    6900:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6904:	ldr	x17, [x16, #1152]
    6908:	add	x16, x16, #0x480
    690c:	br	x17

0000000000006910 <xmalloc@plt>:
    6910:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6914:	ldr	x17, [x16, #1160]
    6918:	add	x16, x16, #0x488
    691c:	br	x17

0000000000006920 <_Z23cp_build_reference_typeP9tree_nodeb@plt>:
    6920:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6924:	ldr	x17, [x16, #1168]
    6928:	add	x16, x16, #0x490
    692c:	br	x17

0000000000006930 <_Z9tree_lastP9tree_node@plt>:
    6930:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6934:	ldr	x17, [x16, #1176]
    6938:	add	x16, x16, #0x498
    693c:	br	x17

0000000000006940 <_Z15make_class_type9tree_code@plt>:
    6940:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6944:	ldr	x17, [x16, #1184]
    6948:	add	x16, x16, #0x4a0
    694c:	br	x17

0000000000006950 <_ZN10vec_prefix22calculate_allocation_1Ejj@plt>:
    6950:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6954:	ldr	x17, [x16, #1192]
    6958:	add	x16, x16, #0x4a8
    695c:	br	x17

0000000000006960 <_Z14get_identifierPKc@plt>:
    6960:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6964:	ldr	x17, [x16, #1200]
    6968:	add	x16, x16, #0x4b0
    696c:	br	x17

0000000000006970 <_Z11fancy_abortPKciS0_@plt>:
    6970:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6974:	ldr	x17, [x16, #1208]
    6978:	add	x16, x16, #0x4b8
    697c:	br	x17

0000000000006980 <__cxa_throw_bad_array_new_length@plt>:
    6980:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6984:	ldr	x17, [x16, #1216]
    6988:	add	x16, x16, #0x4c0
    698c:	br	x17

0000000000006990 <_Z12pos_from_bitPP9tree_nodeS1_jS0_@plt>:
    6990:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6994:	ldr	x17, [x16, #1224]
    6998:	add	x16, x16, #0x4c8
    699c:	br	x17

00000000000069a0 <_Z14make_anon_namev@plt>:
    69a0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    69a4:	ldr	x17, [x16, #1232]
    69a8:	add	x16, x16, #0x4d0
    69ac:	br	x17

00000000000069b0 <_Z13build_one_cstP9tree_node@plt>:
    69b0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    69b4:	ldr	x17, [x16, #1240]
    69b8:	add	x16, x16, #0x4d8
    69bc:	br	x17

00000000000069c0 <_Z26cxx_sizeof_or_alignof_typeP9tree_node9tree_codebb@plt>:
    69c0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    69c4:	ldr	x17, [x16, #1248]
    69c8:	add	x16, x16, #0x4e0
    69cc:	br	x17

00000000000069d0 <_Z11build_throwP9tree_node@plt>:
    69d0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    69d4:	ldr	x17, [x16, #1256]
    69d8:	add	x16, x16, #0x4e8
    69dc:	br	x17

00000000000069e0 <strcmp@plt>:
    69e0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    69e4:	ldr	x17, [x16, #1264]
    69e8:	add	x16, x16, #0x4f0
    69ec:	br	x17

00000000000069f0 <_Z18build_complex_typeP9tree_nodeb@plt>:
    69f0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    69f4:	ldr	x17, [x16, #1272]
    69f8:	add	x16, x16, #0x4f8
    69fc:	br	x17

0000000000006a00 <_Z30any_type_dependent_arguments_pPK3vecIP9tree_node5va_gc8vl_embedE@plt>:
    6a00:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6a04:	ldr	x17, [x16, #1280]
    6a08:	add	x16, x16, #0x500
    6a0c:	br	x17

0000000000006a10 <_Z9pushclassP9tree_node@plt>:
    6a10:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6a14:	ldr	x17, [x16, #1288]
    6a18:	add	x16, x16, #0x508
    6a1c:	br	x17

0000000000006a20 <_Z20finish_static_assertP9tree_nodeS0_jb@plt>:
    6a20:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6a24:	ldr	x17, [x16, #1296]
    6a28:	add	x16, x16, #0x510
    6a2c:	br	x17

0000000000006a30 <write@plt>:
    6a30:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6a34:	ldr	x17, [x16, #1304]
    6a38:	add	x16, x16, #0x518
    6a3c:	br	x17

0000000000006a40 <_Z20finish_noexcept_exprP9tree_nodei@plt>:
    6a40:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6a44:	ldr	x17, [x16, #1312]
    6a48:	add	x16, x16, #0x520
    6a4c:	br	x17

0000000000006a50 <_Z14grokdeclaratorPK13cp_declaratorP21cp_decl_specifier_seq12decl_contextiPP9tree_node@plt>:
    6a50:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6a54:	ldr	x17, [x16, #1320]
    6a58:	add	x16, x16, #0x528
    6a5c:	br	x17

0000000000006a60 <_Z22cp_literal_operator_idPKc@plt>:
    6a60:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6a64:	ldr	x17, [x16, #1328]
    6a68:	add	x16, x16, #0x530
    6a6c:	br	x17

0000000000006a70 <malloc@plt>:
    6a70:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6a74:	ldr	x17, [x16, #1336]
    6a78:	add	x16, x16, #0x538
    6a7c:	br	x17

0000000000006a80 <_Z20ggc_round_alloc_sizem@plt>:
    6a80:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6a84:	ldr	x17, [x16, #1344]
    6a88:	add	x16, x16, #0x540
    6a8c:	br	x17

0000000000006a90 <_Z21build_new_method_callP9tree_nodeS0_PP3vecIS0_5va_gc8vl_embedES0_iPS0_i@plt>:
    6a90:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6a94:	ldr	x17, [x16, #1352]
    6a98:	add	x16, x16, #0x548
    6a9c:	br	x17

0000000000006aa0 <xexit@plt>:
    6aa0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6aa4:	ldr	x17, [x16, #1360]
    6aa8:	add	x16, x16, #0x550
    6aac:	br	x17

0000000000006ab0 <_Z12push_bindingP9tree_nodeS0_P16cp_binding_level@plt>:
    6ab0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6ab4:	ldr	x17, [x16, #1368]
    6ab8:	add	x16, x16, #0x558
    6abc:	br	x17

0000000000006ac0 <_Z28value_dependent_expression_pP9tree_node@plt>:
    6ac0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6ac4:	ldr	x17, [x16, #1376]
    6ac8:	add	x16, x16, #0x560
    6acc:	br	x17

0000000000006ad0 <abort@plt>:
    6ad0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6ad4:	ldr	x17, [x16, #1384]
    6ad8:	add	x16, x16, #0x568
    6adc:	br	x17

0000000000006ae0 <_Z16dependent_type_pP9tree_node@plt>:
    6ae0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6ae4:	ldr	x17, [x16, #1392]
    6ae8:	add	x16, x16, #0x570
    6aec:	br	x17

0000000000006af0 <_Z8popclassv@plt>:
    6af0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6af4:	ldr	x17, [x16, #1400]
    6af8:	add	x16, x16, #0x578
    6afc:	br	x17

0000000000006b00 <_ZnamRKSt9nothrow_t@plt>:
    6b00:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6b04:	ldr	x17, [x16, #1408]
    6b08:	add	x16, x16, #0x580
    6b0c:	br	x17

0000000000006b10 <xcalloc@plt>:
    6b10:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6b14:	ldr	x17, [x16, #1416]
    6b18:	add	x16, x16, #0x588
    6b1c:	br	x17

0000000000006b20 <_Z18linemap_line_startP9line_mapsjj@plt>:
    6b20:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6b24:	ldr	x17, [x16, #1424]
    6b28:	add	x16, x16, #0x590
    6b2c:	br	x17

0000000000006b30 <__gxx_personality_v0@plt>:
    6b30:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6b34:	ldr	x17, [x16, #1432]
    6b38:	add	x16, x16, #0x598
    6b3c:	br	x17

0000000000006b40 <_Z9comptypesP9tree_nodeS0_i@plt>:
    6b40:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6b44:	ldr	x17, [x16, #1440]
    6b48:	add	x16, x16, #0x5a0
    6b4c:	br	x17

0000000000006b50 <xstrndup@plt>:
    6b50:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6b54:	ldr	x17, [x16, #1448]
    6b58:	add	x16, x16, #0x5a8
    6b5c:	br	x17

0000000000006b60 <_Z22c_common_type_for_sizeji@plt>:
    6b60:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6b64:	ldr	x17, [x16, #1456]
    6b68:	add	x16, x16, #0x5b0
    6b6c:	br	x17

0000000000006b70 <htab_find_with_hash@plt>:
    6b70:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6b74:	ldr	x17, [x16, #1464]
    6b78:	add	x16, x16, #0x5b8
    6b7c:	br	x17

0000000000006b80 <_Z13build_int_cstP9tree_node8poly_intILj2ElE@plt>:
    6b80:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6b84:	ldr	x17, [x16, #1472]
    6b88:	add	x16, x16, #0x5c0
    6b8c:	br	x17

0000000000006b90 <_Z17build_nt_call_vecP9tree_nodeP3vecIS0_5va_gc8vl_embedE@plt>:
    6b90:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6b94:	ldr	x17, [x16, #1480]
    6b98:	add	x16, x16, #0x5c8
    6b9c:	br	x17

0000000000006ba0 <_Z21build_functional_castP9tree_nodeS0_i@plt>:
    6ba0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6ba4:	ldr	x17, [x16, #1488]
    6ba8:	add	x16, x16, #0x5d0
    6bac:	br	x17

0000000000006bb0 <_Z17set_global_friendP9tree_node@plt>:
    6bb0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6bb4:	ldr	x17, [x16, #1496]
    6bb8:	add	x16, x16, #0x5d8
    6bbc:	br	x17

0000000000006bc0 <_Z17begin_lambda_typeP9tree_node@plt>:
    6bc0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6bc4:	ldr	x17, [x16, #1504]
    6bc8:	add	x16, x16, #0x5e0
    6bcc:	br	x17

0000000000006bd0 <exit@plt>:
    6bd0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6bd4:	ldr	x17, [x16, #1512]
    6bd8:	add	x16, x16, #0x5e8
    6bdc:	br	x17

0000000000006be0 <_Z7pushtagP9tree_nodeS0_9tag_scope@plt>:
    6be0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6be4:	ldr	x17, [x16, #1520]
    6be8:	add	x16, x16, #0x5f0
    6bec:	br	x17

0000000000006bf0 <_Z31build_offset_ref_call_from_treeP9tree_nodePP3vecIS0_5va_gc8vl_embedEi@plt>:
    6bf0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6bf4:	ldr	x17, [x16, #1528]
    6bf8:	add	x16, x16, #0x5f8
    6bfc:	br	x17

0000000000006c00 <_Z23add_exception_specifierP9tree_nodeS0_i@plt>:
    6c00:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6c04:	ldr	x17, [x16, #1536]
    6c08:	add	x16, x16, #0x600
    6c0c:	br	x17

0000000000006c10 <_Z19make_pack_expansionP9tree_nodei@plt>:
    6c10:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6c14:	ldr	x17, [x16, #1544]
    6c18:	add	x16, x16, #0x608
    6c1c:	br	x17

0000000000006c20 <_Z13finish_structP9tree_nodeS0_@plt>:
    6c20:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6c24:	ldr	x17, [x16, #1552]
    6c28:	add	x16, x16, #0x610
    6c2c:	br	x17

0000000000006c30 <htab_delete@plt>:
    6c30:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6c34:	ldr	x17, [x16, #1560]
    6c38:	add	x16, x16, #0x618
    6c3c:	br	x17

0000000000006c40 <_Z21template_parm_scope_pv@plt>:
    6c40:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6c44:	ldr	x17, [x16, #1568]
    6c48:	add	x16, x16, #0x620
    6c4c:	br	x17

0000000000006c50 <_Z13size_int_kind8poly_intILj2ElE14size_type_kind@plt>:
    6c50:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6c54:	ldr	x17, [x16, #1576]
    6c58:	add	x16, x16, #0x628
    6c5c:	br	x17

0000000000006c60 <_Unwind_Resume@plt>:
    6c60:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6c64:	ldr	x17, [x16, #1584]
    6c68:	add	x16, x16, #0x630
    6c6c:	br	x17

0000000000006c70 <_Z22build_cplus_array_typeP9tree_nodeS0_@plt>:
    6c70:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6c74:	ldr	x17, [x16, #1592]
    6c78:	add	x16, x16, #0x638
    6c7c:	br	x17

0000000000006c80 <_Z22end_template_parm_listP9tree_node@plt>:
    6c80:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6c84:	ldr	x17, [x16, #1600]
    6c88:	add	x16, x16, #0x640
    6c8c:	br	x17

0000000000006c90 <_Z15fold_build1_locj9tree_codeP9tree_nodeS1_@plt>:
    6c90:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6c94:	ldr	x17, [x16, #1608]
    6c98:	add	x16, x16, #0x648
    6c9c:	br	x17

0000000000006ca0 <_Z17dependent_scope_pP9tree_node@plt>:
    6ca0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6ca4:	ldr	x17, [x16, #1616]
    6ca8:	add	x16, x16, #0x650
    6cac:	br	x17

0000000000006cb0 <_Z24lookup_template_functionP9tree_nodeS0_@plt>:
    6cb0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6cb4:	ldr	x17, [x16, #1624]
    6cb8:	add	x16, x16, #0x658
    6cbc:	br	x17

0000000000006cc0 <_Z19uses_template_parmsP9tree_node@plt>:
    6cc0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6cc4:	ldr	x17, [x16, #1632]
    6cc8:	add	x16, x16, #0x660
    6ccc:	br	x17

0000000000006cd0 <_Z30grok_special_member_propertiesP9tree_node@plt>:
    6cd0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6cd4:	ldr	x17, [x16, #1640]
    6cd8:	add	x16, x16, #0x668
    6cdc:	br	x17

0000000000006ce0 <strnlen@plt>:
    6ce0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6ce4:	ldr	x17, [x16, #1648]
    6ce8:	add	x16, x16, #0x670
    6cec:	br	x17

0000000000006cf0 <_Z17make_friend_classP9tree_nodeS0_b@plt>:
    6cf0:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6cf4:	ldr	x17, [x16, #1656]
    6cf8:	add	x16, x16, #0x678
    6cfc:	br	x17

0000000000006d00 <_Z8nreverseP9tree_node@plt>:
    6d00:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6d04:	ldr	x17, [x16, #1664]
    6d08:	add	x16, x16, #0x680
    6d0c:	br	x17

0000000000006d10 <__gmon_start__@plt>:
    6d10:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6d14:	ldr	x17, [x16, #1672]
    6d18:	add	x16, x16, #0x688
    6d1c:	br	x17

0000000000006d20 <_Z16compare_tree_intPK9tree_nodem@plt>:
    6d20:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6d24:	ldr	x17, [x16, #1680]
    6d28:	add	x16, x16, #0x690
    6d2c:	br	x17

0000000000006d30 <_Z27type_dependent_expression_pP9tree_node@plt>:
    6d30:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6d34:	ldr	x17, [x16, #1688]
    6d38:	add	x16, x16, #0x698
    6d3c:	br	x17

0000000000006d40 <_Z18cp_build_parm_declP9tree_nodeS0_S0_@plt>:
    6d40:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6d44:	ldr	x17, [x16, #1696]
    6d48:	add	x16, x16, #0x6a0
    6d4c:	br	x17

0000000000006d50 <_Z13build_x_arrowjP9tree_nodei@plt>:
    6d50:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6d54:	ldr	x17, [x16, #1704]
    6d58:	add	x16, x16, #0x6a8
    6d5c:	br	x17

0000000000006d60 <_Z19decl_assembler_nameP9tree_node@plt>:
    6d60:	adrp	x16, 34000 <_Znam@GLIBCXX_3.4>
    6d64:	ldr	x17, [x16, #1712]
    6d68:	add	x16, x16, #0x6b0
    6d6c:	br	x17

Disassembly of section .text:

0000000000006d70 <plugin_init@@Base-0xa2d0>:
    6d70:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    6d74:	ldr	x0, [x0, #4032]
    6d78:	cbz	x0, 6d80 <_Z19decl_assembler_nameP9tree_node@plt+0x20>
    6d7c:	b	6d10 <__gmon_start__@plt>
    6d80:	ret
    6d84:	nop
    6d88:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
    6d8c:	add	x0, x0, #0x718
    6d90:	adrp	x1, 34000 <xexit@@Base+0x15c5c>
    6d94:	add	x1, x1, #0x718
    6d98:	cmp	x1, x0
    6d9c:	b.eq	6db4 <_Z19decl_assembler_nameP9tree_node@plt+0x54>  // b.none
    6da0:	adrp	x1, 33000 <xexit@@Base+0x14c5c>
    6da4:	ldr	x1, [x1, #4008]
    6da8:	cbz	x1, 6db4 <_Z19decl_assembler_nameP9tree_node@plt+0x54>
    6dac:	mov	x16, x1
    6db0:	br	x16
    6db4:	ret
    6db8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
    6dbc:	add	x0, x0, #0x718
    6dc0:	adrp	x1, 34000 <xexit@@Base+0x15c5c>
    6dc4:	add	x1, x1, #0x718
    6dc8:	sub	x1, x1, x0
    6dcc:	lsr	x2, x1, #63
    6dd0:	add	x1, x2, x1, asr #3
    6dd4:	cmp	xzr, x1, asr #1
    6dd8:	asr	x1, x1, #1
    6ddc:	b.eq	6df4 <_Z19decl_assembler_nameP9tree_node@plt+0x94>  // b.none
    6de0:	adrp	x2, 33000 <xexit@@Base+0x14c5c>
    6de4:	ldr	x2, [x2, #4048]
    6de8:	cbz	x2, 6df4 <_Z19decl_assembler_nameP9tree_node@plt+0x94>
    6dec:	mov	x16, x2
    6df0:	br	x16
    6df4:	ret
    6df8:	stp	x29, x30, [sp, #-32]!
    6dfc:	mov	x29, sp
    6e00:	str	x19, [sp, #16]
    6e04:	adrp	x19, 34000 <xexit@@Base+0x15c5c>
    6e08:	ldrb	w0, [x19, #1816]
    6e0c:	cbnz	w0, 6e34 <_Z19decl_assembler_nameP9tree_node@plt+0xd4>
    6e10:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    6e14:	ldr	x0, [x0, #3864]
    6e18:	cbz	x0, 6e28 <_Z19decl_assembler_nameP9tree_node@plt+0xc8>
    6e1c:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
    6e20:	ldr	x0, [x0, #1720]
    6e24:	bl	63c0 <__cxa_finalize@plt>
    6e28:	bl	6d88 <_Z19decl_assembler_nameP9tree_node@plt+0x28>
    6e2c:	mov	w0, #0x1                   	// #1
    6e30:	strb	w0, [x19, #1816]
    6e34:	ldr	x19, [sp, #16]
    6e38:	ldp	x29, x30, [sp], #32
    6e3c:	ret
    6e40:	b	6db8 <_Z19decl_assembler_nameP9tree_node@plt+0x58>
    6e44:	sub	sp, sp, #0x10
    6e48:	str	x0, [sp, #8]
    6e4c:	ldr	x0, [sp, #8]
    6e50:	cmp	x0, #0x0
    6e54:	rbit	x0, x0
    6e58:	clz	x0, x0
    6e5c:	csinc	x0, xzr, x0, eq  // eq = none
    6e60:	add	sp, sp, #0x10
    6e64:	ret
    6e68:	stp	x29, x30, [sp, #-48]!
    6e6c:	mov	x29, sp
    6e70:	str	x0, [sp, #24]
    6e74:	str	x1, [sp, #16]
    6e78:	add	x0, sp, #0x28
    6e7c:	mov	x1, x0
    6e80:	ldr	x0, [sp, #24]
    6e84:	bl	1c09c <plugin_init@@Base+0xb05c>
    6e88:	cmp	w0, #0x0
    6e8c:	cset	w0, eq  // eq = none
    6e90:	and	w0, w0, #0xff
    6e94:	cmp	w0, #0x0
    6e98:	b.eq	6ea4 <_Z19decl_assembler_nameP9tree_node@plt+0x144>  // b.none
    6e9c:	mov	w0, #0x0                   	// #0
    6ea0:	b	6eb8 <_Z19decl_assembler_nameP9tree_node@plt+0x158>
    6ea4:	ldr	x0, [sp, #40]
    6ea8:	mov	w1, w0
    6eac:	ldr	x0, [sp, #16]
    6eb0:	str	w1, [x0]
    6eb4:	mov	w0, #0x1                   	// #1
    6eb8:	ldp	x29, x30, [sp], #48
    6ebc:	ret
    6ec0:	stp	x29, x30, [sp, #-48]!
    6ec4:	mov	x29, sp
    6ec8:	str	x0, [sp, #24]
    6ecc:	str	x1, [sp, #16]
    6ed0:	add	x0, sp, #0x28
    6ed4:	mov	x1, x0
    6ed8:	ldr	x0, [sp, #24]
    6edc:	bl	1c09c <plugin_init@@Base+0xb05c>
    6ee0:	cmp	w0, #0x0
    6ee4:	cset	w0, eq  // eq = none
    6ee8:	and	w0, w0, #0xff
    6eec:	cmp	w0, #0x0
    6ef0:	b.eq	6efc <_Z19decl_assembler_nameP9tree_node@plt+0x19c>  // b.none
    6ef4:	mov	w0, #0x0                   	// #0
    6ef8:	b	6f10 <_Z19decl_assembler_nameP9tree_node@plt+0x1b0>
    6efc:	ldr	x0, [sp, #40]
    6f00:	mov	w1, w0
    6f04:	ldr	x0, [sp, #16]
    6f08:	str	w1, [x0]
    6f0c:	mov	w0, #0x1                   	// #1
    6f10:	ldp	x29, x30, [sp], #48
    6f14:	ret
    6f18:	stp	x29, x30, [sp, #-48]!
    6f1c:	mov	x29, sp
    6f20:	str	x0, [sp, #24]
    6f24:	str	x1, [sp, #16]
    6f28:	add	x0, sp, #0x28
    6f2c:	mov	x1, x0
    6f30:	ldr	x0, [sp, #24]
    6f34:	bl	1c09c <plugin_init@@Base+0xb05c>
    6f38:	cmp	w0, #0x0
    6f3c:	cset	w0, eq  // eq = none
    6f40:	and	w0, w0, #0xff
    6f44:	cmp	w0, #0x0
    6f48:	b.eq	6f54 <_Z19decl_assembler_nameP9tree_node@plt+0x1f4>  // b.none
    6f4c:	mov	w0, #0x0                   	// #0
    6f50:	b	6f68 <_Z19decl_assembler_nameP9tree_node@plt+0x208>
    6f54:	ldr	x0, [sp, #40]
    6f58:	mov	w1, w0
    6f5c:	ldr	x0, [sp, #16]
    6f60:	str	w1, [x0]
    6f64:	mov	w0, #0x1                   	// #1
    6f68:	ldp	x29, x30, [sp], #48
    6f6c:	ret
    6f70:	stp	x29, x30, [sp, #-48]!
    6f74:	mov	x29, sp
    6f78:	str	x0, [sp, #24]
    6f7c:	str	x1, [sp, #16]
    6f80:	add	x0, sp, #0x28
    6f84:	mov	x1, x0
    6f88:	ldr	x0, [sp, #24]
    6f8c:	bl	1c09c <plugin_init@@Base+0xb05c>
    6f90:	cmp	w0, #0x0
    6f94:	cset	w0, eq  // eq = none
    6f98:	and	w0, w0, #0xff
    6f9c:	cmp	w0, #0x0
    6fa0:	b.eq	6fac <_Z19decl_assembler_nameP9tree_node@plt+0x24c>  // b.none
    6fa4:	mov	w0, #0x0                   	// #0
    6fa8:	b	6fc0 <_Z19decl_assembler_nameP9tree_node@plt+0x260>
    6fac:	ldr	x0, [sp, #40]
    6fb0:	mov	w1, w0
    6fb4:	ldr	x0, [sp, #16]
    6fb8:	str	w1, [x0]
    6fbc:	mov	w0, #0x1                   	// #1
    6fc0:	ldp	x29, x30, [sp], #48
    6fc4:	ret
    6fc8:	stp	x29, x30, [sp, #-48]!
    6fcc:	mov	x29, sp
    6fd0:	str	x0, [sp, #24]
    6fd4:	str	x1, [sp, #16]
    6fd8:	ldr	x0, [sp, #16]
    6fdc:	cmp	x0, #0x0
    6fe0:	b.eq	6ff8 <_Z19decl_assembler_nameP9tree_node@plt+0x298>  // b.none
    6fe4:	ldr	x0, [sp, #16]
    6fe8:	ldr	w0, [x0]
    6fec:	sxtw	x0, w0
    6ff0:	str	x0, [sp, #40]
    6ff4:	b	7000 <_Z19decl_assembler_nameP9tree_node@plt+0x2a0>
    6ff8:	mov	x0, #0xffffffffffffffff    	// #-1
    6ffc:	str	x0, [sp, #40]
    7000:	ldr	x2, [sp, #40]
    7004:	mov	w1, #0x76                  	// #118
    7008:	ldr	x0, [sp, #24]
    700c:	bl	1c2cc <plugin_init@@Base+0xb28c>
    7010:	cmp	w0, #0x0
    7014:	cset	w0, eq  // eq = none
    7018:	and	w0, w0, #0xff
    701c:	cmp	w0, #0x0
    7020:	b.eq	702c <_Z19decl_assembler_nameP9tree_node@plt+0x2cc>  // b.none
    7024:	mov	w0, #0x0                   	// #0
    7028:	b	7098 <_Z19decl_assembler_nameP9tree_node@plt+0x338>
    702c:	ldr	x0, [sp, #16]
    7030:	cmp	x0, #0x0
    7034:	b.ne	7040 <_Z19decl_assembler_nameP9tree_node@plt+0x2e0>  // b.any
    7038:	mov	w0, #0x1                   	// #1
    703c:	b	7098 <_Z19decl_assembler_nameP9tree_node@plt+0x338>
    7040:	ldr	x0, [sp, #40]
    7044:	lsl	x1, x0, #3
    7048:	ldr	x0, [sp, #16]
    704c:	ldr	x0, [x0, #8]
    7050:	mov	x2, x0
    7054:	ldr	x0, [sp, #24]
    7058:	bl	1c34c <plugin_init@@Base+0xb30c>
    705c:	cmp	w0, #0x0
    7060:	cset	w0, eq  // eq = none
    7064:	and	w0, w0, #0xff
    7068:	cmp	w0, #0x0
    706c:	b.eq	7078 <_Z19decl_assembler_nameP9tree_node@plt+0x318>  // b.none
    7070:	mov	w0, #0x0                   	// #0
    7074:	b	7098 <_Z19decl_assembler_nameP9tree_node@plt+0x338>
    7078:	ldr	x0, [sp, #40]
    707c:	lsl	x1, x0, #2
    7080:	ldr	x0, [sp, #16]
    7084:	ldr	x0, [x0, #16]
    7088:	mov	x2, x0
    708c:	ldr	x0, [sp, #24]
    7090:	bl	1c34c <plugin_init@@Base+0xb30c>
    7094:	nop
    7098:	ldp	x29, x30, [sp], #48
    709c:	ret
    70a0:	stp	x29, x30, [sp, #-48]!
    70a4:	mov	x29, sp
    70a8:	str	x0, [sp, #24]
    70ac:	str	x1, [sp, #16]
    70b0:	add	x0, sp, #0x20
    70b4:	mov	x2, x0
    70b8:	mov	w1, #0x76                  	// #118
    70bc:	ldr	x0, [sp, #24]
    70c0:	bl	1c37c <plugin_init@@Base+0xb33c>
    70c4:	cmp	w0, #0x0
    70c8:	cset	w0, eq  // eq = none
    70cc:	and	w0, w0, #0xff
    70d0:	cmp	w0, #0x0
    70d4:	b.eq	70e0 <_Z19decl_assembler_nameP9tree_node@plt+0x380>  // b.none
    70d8:	mov	w0, #0x0                   	// #0
    70dc:	b	726c <_Z19decl_assembler_nameP9tree_node@plt+0x50c>
    70e0:	ldr	x0, [sp, #32]
    70e4:	cmn	x0, #0x1
    70e8:	b.ne	70fc <_Z19decl_assembler_nameP9tree_node@plt+0x39c>  // b.any
    70ec:	ldr	x0, [sp, #16]
    70f0:	str	xzr, [x0]
    70f4:	mov	w0, #0x1                   	// #1
    70f8:	b	726c <_Z19decl_assembler_nameP9tree_node@plt+0x50c>
    70fc:	mov	x0, #0x18                  	// #24
    7100:	bl	6650 <_Znwm@plt>
    7104:	str	x0, [sp, #40]
    7108:	ldr	x0, [sp, #32]
    710c:	mov	w1, w0
    7110:	ldr	x0, [sp, #40]
    7114:	str	w1, [x0]
    7118:	ldr	x0, [sp, #32]
    711c:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    7120:	cmp	x0, x1
    7124:	b.hi	7170 <_Z19decl_assembler_nameP9tree_node@plt+0x410>  // b.pmore
    7128:	lsl	x0, x0, #3
    712c:	bl	6000 <_Znam@plt>
    7130:	mov	x1, x0
    7134:	ldr	x0, [sp, #40]
    7138:	str	x1, [x0, #8]
    713c:	ldr	x0, [sp, #32]
    7140:	lsl	x1, x0, #3
    7144:	ldr	x0, [sp, #40]
    7148:	ldr	x0, [x0, #8]
    714c:	mov	x2, x0
    7150:	ldr	x0, [sp, #24]
    7154:	bl	1c400 <plugin_init@@Base+0xb3c0>
    7158:	cmp	w0, #0x0
    715c:	cset	w0, eq  // eq = none
    7160:	and	w0, w0, #0xff
    7164:	cmp	w0, #0x0
    7168:	b.eq	71ac <_Z19decl_assembler_nameP9tree_node@plt+0x44c>  // b.none
    716c:	b	7174 <_Z19decl_assembler_nameP9tree_node@plt+0x414>
    7170:	bl	6980 <__cxa_throw_bad_array_new_length@plt>
    7174:	ldr	x0, [sp, #40]
    7178:	ldr	x0, [x0, #8]
    717c:	cmp	x0, #0x0
    7180:	b.eq	7190 <_Z19decl_assembler_nameP9tree_node@plt+0x430>  // b.none
    7184:	ldr	x0, [sp, #40]
    7188:	ldr	x0, [x0, #8]
    718c:	bl	6850 <_ZdaPv@plt>
    7190:	ldr	x0, [sp, #40]
    7194:	cmp	x0, #0x0
    7198:	b.eq	71a4 <_Z19decl_assembler_nameP9tree_node@plt+0x444>  // b.none
    719c:	mov	x1, #0x18                  	// #24
    71a0:	bl	6680 <_ZdlPvm@plt>
    71a4:	mov	w0, #0x0                   	// #0
    71a8:	b	726c <_Z19decl_assembler_nameP9tree_node@plt+0x50c>
    71ac:	ldr	x0, [sp, #32]
    71b0:	mov	x1, #0x1ffffffffffffffe    	// #2305843009213693950
    71b4:	cmp	x0, x1
    71b8:	b.hi	7204 <_Z19decl_assembler_nameP9tree_node@plt+0x4a4>  // b.pmore
    71bc:	lsl	x0, x0, #2
    71c0:	bl	6000 <_Znam@plt>
    71c4:	mov	x1, x0
    71c8:	ldr	x0, [sp, #40]
    71cc:	str	x1, [x0, #16]
    71d0:	ldr	x0, [sp, #32]
    71d4:	lsl	x1, x0, #2
    71d8:	ldr	x0, [sp, #40]
    71dc:	ldr	x0, [x0, #16]
    71e0:	mov	x2, x0
    71e4:	ldr	x0, [sp, #24]
    71e8:	bl	1c400 <plugin_init@@Base+0xb3c0>
    71ec:	cmp	w0, #0x0
    71f0:	cset	w0, eq  // eq = none
    71f4:	and	w0, w0, #0xff
    71f8:	cmp	w0, #0x0
    71fc:	b.eq	725c <_Z19decl_assembler_nameP9tree_node@plt+0x4fc>  // b.none
    7200:	b	7208 <_Z19decl_assembler_nameP9tree_node@plt+0x4a8>
    7204:	bl	6980 <__cxa_throw_bad_array_new_length@plt>
    7208:	ldr	x0, [sp, #40]
    720c:	ldr	x0, [x0, #16]
    7210:	cmp	x0, #0x0
    7214:	b.eq	7224 <_Z19decl_assembler_nameP9tree_node@plt+0x4c4>  // b.none
    7218:	ldr	x0, [sp, #40]
    721c:	ldr	x0, [x0, #16]
    7220:	bl	6850 <_ZdaPv@plt>
    7224:	ldr	x0, [sp, #40]
    7228:	ldr	x0, [x0, #8]
    722c:	cmp	x0, #0x0
    7230:	b.eq	7240 <_Z19decl_assembler_nameP9tree_node@plt+0x4e0>  // b.none
    7234:	ldr	x0, [sp, #40]
    7238:	ldr	x0, [x0, #8]
    723c:	bl	6850 <_ZdaPv@plt>
    7240:	ldr	x0, [sp, #40]
    7244:	cmp	x0, #0x0
    7248:	b.eq	7254 <_Z19decl_assembler_nameP9tree_node@plt+0x4f4>  // b.none
    724c:	mov	x1, #0x18                  	// #24
    7250:	bl	6680 <_ZdlPvm@plt>
    7254:	mov	w0, #0x0                   	// #0
    7258:	b	726c <_Z19decl_assembler_nameP9tree_node@plt+0x50c>
    725c:	ldr	x0, [sp, #16]
    7260:	ldr	x1, [sp, #40]
    7264:	str	x1, [x0]
    7268:	mov	w0, #0x1                   	// #1
    726c:	ldp	x29, x30, [sp], #48
    7270:	ret
    7274:	stp	x29, x30, [sp, #-48]!
    7278:	mov	x29, sp
    727c:	str	x0, [sp, #24]
    7280:	str	x1, [sp, #16]
    7284:	ldr	x0, [sp, #16]
    7288:	cmp	x0, #0x0
    728c:	b.eq	72a4 <_Z19decl_assembler_nameP9tree_node@plt+0x544>  // b.none
    7290:	ldr	x0, [sp, #16]
    7294:	ldr	w0, [x0]
    7298:	sxtw	x0, w0
    729c:	str	x0, [sp, #40]
    72a0:	b	72ac <_Z19decl_assembler_nameP9tree_node@plt+0x54c>
    72a4:	mov	x0, #0xffffffffffffffff    	// #-1
    72a8:	str	x0, [sp, #40]
    72ac:	ldr	x2, [sp, #40]
    72b0:	mov	w1, #0x74                  	// #116
    72b4:	ldr	x0, [sp, #24]
    72b8:	bl	1c2cc <plugin_init@@Base+0xb28c>
    72bc:	cmp	w0, #0x0
    72c0:	cset	w0, eq  // eq = none
    72c4:	and	w0, w0, #0xff
    72c8:	cmp	w0, #0x0
    72cc:	b.eq	72d8 <_Z19decl_assembler_nameP9tree_node@plt+0x578>  // b.none
    72d0:	mov	w0, #0x0                   	// #0
    72d4:	b	7340 <_Z19decl_assembler_nameP9tree_node@plt+0x5e0>
    72d8:	ldr	x0, [sp, #16]
    72dc:	cmp	x0, #0x0
    72e0:	b.ne	72ec <_Z19decl_assembler_nameP9tree_node@plt+0x58c>  // b.any
    72e4:	mov	w0, #0x1                   	// #1
    72e8:	b	7340 <_Z19decl_assembler_nameP9tree_node@plt+0x5e0>
    72ec:	ldr	x0, [sp, #16]
    72f0:	ldr	x0, [x0, #8]
    72f4:	mov	x2, x0
    72f8:	ldr	x1, [sp, #40]
    72fc:	ldr	x0, [sp, #24]
    7300:	bl	1c34c <plugin_init@@Base+0xb30c>
    7304:	cmp	w0, #0x0
    7308:	cset	w0, eq  // eq = none
    730c:	and	w0, w0, #0xff
    7310:	cmp	w0, #0x0
    7314:	b.eq	7320 <_Z19decl_assembler_nameP9tree_node@plt+0x5c0>  // b.none
    7318:	mov	w0, #0x0                   	// #0
    731c:	b	7340 <_Z19decl_assembler_nameP9tree_node@plt+0x5e0>
    7320:	ldr	x0, [sp, #40]
    7324:	lsl	x1, x0, #3
    7328:	ldr	x0, [sp, #16]
    732c:	ldr	x0, [x0, #16]
    7330:	mov	x2, x0
    7334:	ldr	x0, [sp, #24]
    7338:	bl	1c34c <plugin_init@@Base+0xb30c>
    733c:	nop
    7340:	ldp	x29, x30, [sp], #48
    7344:	ret
    7348:	stp	x29, x30, [sp, #-48]!
    734c:	mov	x29, sp
    7350:	str	x0, [sp, #24]
    7354:	str	x1, [sp, #16]
    7358:	add	x0, sp, #0x20
    735c:	mov	x2, x0
    7360:	mov	w1, #0x74                  	// #116
    7364:	ldr	x0, [sp, #24]
    7368:	bl	1c37c <plugin_init@@Base+0xb33c>
    736c:	cmp	w0, #0x0
    7370:	cset	w0, eq  // eq = none
    7374:	and	w0, w0, #0xff
    7378:	cmp	w0, #0x0
    737c:	b.eq	7388 <_Z19decl_assembler_nameP9tree_node@plt+0x628>  // b.none
    7380:	mov	w0, #0x0                   	// #0
    7384:	b	74f8 <_Z19decl_assembler_nameP9tree_node@plt+0x798>
    7388:	ldr	x0, [sp, #32]
    738c:	cmn	x0, #0x1
    7390:	b.ne	73a4 <_Z19decl_assembler_nameP9tree_node@plt+0x644>  // b.any
    7394:	ldr	x0, [sp, #16]
    7398:	str	xzr, [x0]
    739c:	mov	w0, #0x1                   	// #1
    73a0:	b	74f8 <_Z19decl_assembler_nameP9tree_node@plt+0x798>
    73a4:	mov	x0, #0x18                  	// #24
    73a8:	bl	6650 <_Znwm@plt>
    73ac:	str	x0, [sp, #40]
    73b0:	ldr	x0, [sp, #32]
    73b4:	mov	w1, w0
    73b8:	ldr	x0, [sp, #40]
    73bc:	str	w1, [x0]
    73c0:	ldr	x0, [sp, #32]
    73c4:	bl	6000 <_Znam@plt>
    73c8:	mov	x1, x0
    73cc:	ldr	x0, [sp, #40]
    73d0:	str	x1, [x0, #8]
    73d4:	ldr	x1, [sp, #32]
    73d8:	ldr	x0, [sp, #40]
    73dc:	ldr	x0, [x0, #8]
    73e0:	mov	x2, x0
    73e4:	ldr	x0, [sp, #24]
    73e8:	bl	1c400 <plugin_init@@Base+0xb3c0>
    73ec:	cmp	w0, #0x0
    73f0:	cset	w0, eq  // eq = none
    73f4:	and	w0, w0, #0xff
    73f8:	cmp	w0, #0x0
    73fc:	b.eq	7438 <_Z19decl_assembler_nameP9tree_node@plt+0x6d8>  // b.none
    7400:	ldr	x0, [sp, #40]
    7404:	ldr	x0, [x0, #8]
    7408:	cmp	x0, #0x0
    740c:	b.eq	741c <_Z19decl_assembler_nameP9tree_node@plt+0x6bc>  // b.none
    7410:	ldr	x0, [sp, #40]
    7414:	ldr	x0, [x0, #8]
    7418:	bl	6850 <_ZdaPv@plt>
    741c:	ldr	x0, [sp, #40]
    7420:	cmp	x0, #0x0
    7424:	b.eq	7430 <_Z19decl_assembler_nameP9tree_node@plt+0x6d0>  // b.none
    7428:	mov	x1, #0x18                  	// #24
    742c:	bl	6680 <_ZdlPvm@plt>
    7430:	mov	w0, #0x0                   	// #0
    7434:	b	74f8 <_Z19decl_assembler_nameP9tree_node@plt+0x798>
    7438:	ldr	x0, [sp, #32]
    743c:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    7440:	cmp	x0, x1
    7444:	b.hi	7490 <_Z19decl_assembler_nameP9tree_node@plt+0x730>  // b.pmore
    7448:	lsl	x0, x0, #3
    744c:	bl	6000 <_Znam@plt>
    7450:	mov	x1, x0
    7454:	ldr	x0, [sp, #40]
    7458:	str	x1, [x0, #16]
    745c:	ldr	x0, [sp, #32]
    7460:	lsl	x1, x0, #3
    7464:	ldr	x0, [sp, #40]
    7468:	ldr	x0, [x0, #16]
    746c:	mov	x2, x0
    7470:	ldr	x0, [sp, #24]
    7474:	bl	1c400 <plugin_init@@Base+0xb3c0>
    7478:	cmp	w0, #0x0
    747c:	cset	w0, eq  // eq = none
    7480:	and	w0, w0, #0xff
    7484:	cmp	w0, #0x0
    7488:	b.eq	74e8 <_Z19decl_assembler_nameP9tree_node@plt+0x788>  // b.none
    748c:	b	7494 <_Z19decl_assembler_nameP9tree_node@plt+0x734>
    7490:	bl	6980 <__cxa_throw_bad_array_new_length@plt>
    7494:	ldr	x0, [sp, #40]
    7498:	ldr	x0, [x0, #16]
    749c:	cmp	x0, #0x0
    74a0:	b.eq	74b0 <_Z19decl_assembler_nameP9tree_node@plt+0x750>  // b.none
    74a4:	ldr	x0, [sp, #40]
    74a8:	ldr	x0, [x0, #16]
    74ac:	bl	6850 <_ZdaPv@plt>
    74b0:	ldr	x0, [sp, #40]
    74b4:	ldr	x0, [x0, #8]
    74b8:	cmp	x0, #0x0
    74bc:	b.eq	74cc <_Z19decl_assembler_nameP9tree_node@plt+0x76c>  // b.none
    74c0:	ldr	x0, [sp, #40]
    74c4:	ldr	x0, [x0, #8]
    74c8:	bl	6850 <_ZdaPv@plt>
    74cc:	ldr	x0, [sp, #40]
    74d0:	cmp	x0, #0x0
    74d4:	b.eq	74e0 <_Z19decl_assembler_nameP9tree_node@plt+0x780>  // b.none
    74d8:	mov	x1, #0x18                  	// #24
    74dc:	bl	6680 <_ZdlPvm@plt>
    74e0:	mov	w0, #0x0                   	// #0
    74e4:	b	74f8 <_Z19decl_assembler_nameP9tree_node@plt+0x798>
    74e8:	ldr	x0, [sp, #16]
    74ec:	ldr	x1, [sp, #40]
    74f0:	str	x1, [x0]
    74f4:	mov	w0, #0x1                   	// #1
    74f8:	ldp	x29, x30, [sp], #48
    74fc:	ret
    7500:	stp	x29, x30, [sp, #-48]!
    7504:	mov	x29, sp
    7508:	str	x0, [sp, #24]
    750c:	str	x1, [sp, #16]
    7510:	ldr	x0, [sp, #16]
    7514:	cmp	x0, #0x0
    7518:	b.eq	7530 <_Z19decl_assembler_nameP9tree_node@plt+0x7d0>  // b.none
    751c:	ldr	x0, [sp, #16]
    7520:	ldr	w0, [x0]
    7524:	sxtw	x0, w0
    7528:	str	x0, [sp, #40]
    752c:	b	7538 <_Z19decl_assembler_nameP9tree_node@plt+0x7d8>
    7530:	mov	x0, #0xffffffffffffffff    	// #-1
    7534:	str	x0, [sp, #40]
    7538:	ldr	x2, [sp, #40]
    753c:	mov	w1, #0x64                  	// #100
    7540:	ldr	x0, [sp, #24]
    7544:	bl	1c2cc <plugin_init@@Base+0xb28c>
    7548:	cmp	w0, #0x0
    754c:	cset	w0, eq  // eq = none
    7550:	and	w0, w0, #0xff
    7554:	cmp	w0, #0x0
    7558:	b.eq	7564 <_Z19decl_assembler_nameP9tree_node@plt+0x804>  // b.none
    755c:	mov	w0, #0x0                   	// #0
    7560:	b	7598 <_Z19decl_assembler_nameP9tree_node@plt+0x838>
    7564:	ldr	x0, [sp, #16]
    7568:	cmp	x0, #0x0
    756c:	b.ne	7578 <_Z19decl_assembler_nameP9tree_node@plt+0x818>  // b.any
    7570:	mov	w0, #0x1                   	// #1
    7574:	b	7598 <_Z19decl_assembler_nameP9tree_node@plt+0x838>
    7578:	ldr	x0, [sp, #40]
    757c:	lsl	x1, x0, #3
    7580:	ldr	x0, [sp, #16]
    7584:	ldr	x0, [x0, #8]
    7588:	mov	x2, x0
    758c:	ldr	x0, [sp, #24]
    7590:	bl	1c34c <plugin_init@@Base+0xb30c>
    7594:	nop
    7598:	ldp	x29, x30, [sp], #48
    759c:	ret
    75a0:	stp	x29, x30, [sp, #-48]!
    75a4:	mov	x29, sp
    75a8:	str	x0, [sp, #24]
    75ac:	str	x1, [sp, #16]
    75b0:	add	x0, sp, #0x20
    75b4:	mov	x2, x0
    75b8:	mov	w1, #0x64                  	// #100
    75bc:	ldr	x0, [sp, #24]
    75c0:	bl	1c37c <plugin_init@@Base+0xb33c>
    75c4:	cmp	w0, #0x0
    75c8:	cset	w0, eq  // eq = none
    75cc:	and	w0, w0, #0xff
    75d0:	cmp	w0, #0x0
    75d4:	b.eq	75e0 <_Z19decl_assembler_nameP9tree_node@plt+0x880>  // b.none
    75d8:	mov	w0, #0x0                   	// #0
    75dc:	b	76bc <_Z19decl_assembler_nameP9tree_node@plt+0x95c>
    75e0:	ldr	x0, [sp, #32]
    75e4:	cmn	x0, #0x1
    75e8:	b.ne	75fc <_Z19decl_assembler_nameP9tree_node@plt+0x89c>  // b.any
    75ec:	ldr	x0, [sp, #16]
    75f0:	str	xzr, [x0]
    75f4:	mov	w0, #0x1                   	// #1
    75f8:	b	76bc <_Z19decl_assembler_nameP9tree_node@plt+0x95c>
    75fc:	mov	x0, #0x10                  	// #16
    7600:	bl	6650 <_Znwm@plt>
    7604:	str	x0, [sp, #40]
    7608:	ldr	x0, [sp, #32]
    760c:	mov	w1, w0
    7610:	ldr	x0, [sp, #40]
    7614:	str	w1, [x0]
    7618:	ldr	x0, [sp, #32]
    761c:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    7620:	cmp	x0, x1
    7624:	b.hi	7670 <_Z19decl_assembler_nameP9tree_node@plt+0x910>  // b.pmore
    7628:	lsl	x0, x0, #3
    762c:	bl	6000 <_Znam@plt>
    7630:	mov	x1, x0
    7634:	ldr	x0, [sp, #40]
    7638:	str	x1, [x0, #8]
    763c:	ldr	x0, [sp, #32]
    7640:	lsl	x1, x0, #3
    7644:	ldr	x0, [sp, #40]
    7648:	ldr	x0, [x0, #8]
    764c:	mov	x2, x0
    7650:	ldr	x0, [sp, #24]
    7654:	bl	1c400 <plugin_init@@Base+0xb3c0>
    7658:	cmp	w0, #0x0
    765c:	cset	w0, eq  // eq = none
    7660:	and	w0, w0, #0xff
    7664:	cmp	w0, #0x0
    7668:	b.eq	76ac <_Z19decl_assembler_nameP9tree_node@plt+0x94c>  // b.none
    766c:	b	7674 <_Z19decl_assembler_nameP9tree_node@plt+0x914>
    7670:	bl	6980 <__cxa_throw_bad_array_new_length@plt>
    7674:	ldr	x0, [sp, #40]
    7678:	ldr	x0, [x0, #8]
    767c:	cmp	x0, #0x0
    7680:	b.eq	7690 <_Z19decl_assembler_nameP9tree_node@plt+0x930>  // b.none
    7684:	ldr	x0, [sp, #40]
    7688:	ldr	x0, [x0, #8]
    768c:	bl	6850 <_ZdaPv@plt>
    7690:	ldr	x0, [sp, #40]
    7694:	cmp	x0, #0x0
    7698:	b.eq	76a4 <_Z19decl_assembler_nameP9tree_node@plt+0x944>  // b.none
    769c:	mov	x1, #0x10                  	// #16
    76a0:	bl	6680 <_ZdlPvm@plt>
    76a4:	mov	w0, #0x0                   	// #0
    76a8:	b	76bc <_Z19decl_assembler_nameP9tree_node@plt+0x95c>
    76ac:	ldr	x0, [sp, #16]
    76b0:	ldr	x1, [sp, #40]
    76b4:	str	x1, [x0]
    76b8:	mov	w0, #0x1                   	// #1
    76bc:	ldp	x29, x30, [sp], #48
    76c0:	ret
    76c4:	stp	x29, x30, [sp, #-48]!
    76c8:	mov	x29, sp
    76cc:	str	x0, [sp, #40]
    76d0:	str	x1, [sp, #32]
    76d4:	str	x2, [sp, #24]
    76d8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    76dc:	ldr	x0, [x0, #3872]
    76e0:	ldr	x0, [x0]
    76e4:	cmp	x0, #0x0
    76e8:	b.eq	7730 <_Z19decl_assembler_nameP9tree_node@plt+0x9d0>  // b.none
    76ec:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    76f0:	ldr	x0, [x0, #3872]
    76f4:	ldr	x0, [x0]
    76f8:	ldr	x0, [x0, #32]
    76fc:	cmp	x0, #0x0
    7700:	b.eq	7730 <_Z19decl_assembler_nameP9tree_node@plt+0x9d0>  // b.none
    7704:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7708:	ldr	x0, [x0, #3872]
    770c:	ldr	x0, [x0]
    7710:	ldr	x0, [x0, #32]
    7714:	ldr	x2, [x0, #24]
    7718:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    771c:	add	x1, x0, #0x480
    7720:	mov	x0, x2
    7724:	bl	69e0 <strcmp@plt>
    7728:	cmp	w0, #0x0
    772c:	b.eq	7744 <_Z19decl_assembler_nameP9tree_node@plt+0x9e4>  // b.none
    7730:	ldr	x2, [sp, #24]
    7734:	ldr	x1, [sp, #32]
    7738:	ldr	x0, [sp, #40]
    773c:	bl	6710 <_Z24lhd_print_error_functionP18diagnostic_contextPKcP15diagnostic_info@plt>
    7740:	b	7748 <_Z19decl_assembler_nameP9tree_node@plt+0x9e8>
    7744:	nop
    7748:	ldp	x29, x30, [sp], #48
    774c:	ret
    7750:	sub	sp, sp, #0x10
    7754:	str	x0, [sp, #8]
    7758:	ldr	x0, [sp, #8]
    775c:	add	sp, sp, #0x10
    7760:	ret
    7764:	sub	sp, sp, #0x10
    7768:	str	x0, [sp, #8]
    776c:	ldr	x0, [sp, #8]
    7770:	add	sp, sp, #0x10
    7774:	ret
    7778:	stp	x29, x30, [sp, #-48]!
    777c:	mov	x29, sp
    7780:	str	x19, [sp, #16]
    7784:	str	x0, [sp, #40]
    7788:	str	w1, [sp, #36]
    778c:	ldr	x0, [sp, #40]
    7790:	ldr	w1, [sp, #36]
    7794:	bl	121f8 <plugin_init@@Base+0x11b8>
    7798:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    779c:	add	x1, x0, #0xc78
    77a0:	ldr	x0, [sp, #40]
    77a4:	str	x1, [x0]
    77a8:	ldr	x0, [sp, #40]
    77ac:	add	x0, x0, #0x18
    77b0:	mov	w4, #0x0                   	// #0
    77b4:	mov	w3, #0x0                   	// #0
    77b8:	mov	w2, #0x0                   	// #0
    77bc:	mov	x1, #0x1e                  	// #30
    77c0:	bl	1292c <plugin_init@@Base+0x18ec>
    77c4:	ldr	x0, [sp, #40]
    77c8:	add	x0, x0, #0x48
    77cc:	mov	w4, #0x0                   	// #0
    77d0:	mov	w3, #0x0                   	// #0
    77d4:	mov	w2, #0x0                   	// #0
    77d8:	mov	x1, #0x1e                  	// #30
    77dc:	bl	12ae4 <plugin_init@@Base+0x1aa4>
    77e0:	ldr	x0, [sp, #40]
    77e4:	add	x0, x0, #0x78
    77e8:	mov	w4, #0x0                   	// #0
    77ec:	mov	w3, #0x0                   	// #0
    77f0:	mov	w2, #0x0                   	// #0
    77f4:	mov	x1, #0x1e                  	// #30
    77f8:	bl	12c98 <plugin_init@@Base+0x1c58>
    77fc:	b	783c <_Z19decl_assembler_nameP9tree_node@plt+0xadc>
    7800:	mov	x19, x0
    7804:	ldr	x0, [sp, #40]
    7808:	add	x0, x0, #0x48
    780c:	bl	12b94 <plugin_init@@Base+0x1b54>
    7810:	b	7818 <_Z19decl_assembler_nameP9tree_node@plt+0xab8>
    7814:	mov	x19, x0
    7818:	ldr	x0, [sp, #40]
    781c:	add	x0, x0, #0x18
    7820:	bl	129dc <plugin_init@@Base+0x199c>
    7824:	b	782c <_Z19decl_assembler_nameP9tree_node@plt+0xacc>
    7828:	mov	x19, x0
    782c:	ldr	x0, [sp, #40]
    7830:	bl	1b9b0 <plugin_init@@Base+0xa970>
    7834:	mov	x0, x19
    7838:	bl	6c60 <_Unwind_Resume@plt>
    783c:	ldr	x19, [sp, #16]
    7840:	ldp	x29, x30, [sp], #48
    7844:	ret
    7848:	stp	x29, x30, [sp, #-128]!
    784c:	mov	x29, sp
    7850:	str	x0, [sp, #24]
    7854:	ldr	x0, [sp, #24]
    7858:	add	x0, x0, #0x18
    785c:	bl	12e4c <plugin_init@@Base+0x1e0c>
    7860:	stp	x0, x1, [sp, #56]
    7864:	ldr	x0, [sp, #24]
    7868:	add	x0, x0, #0x18
    786c:	bl	12e9c <plugin_init@@Base+0x1e5c>
    7870:	stp	x0, x1, [sp, #72]
    7874:	add	x1, sp, #0x48
    7878:	add	x0, sp, #0x38
    787c:	bl	12ebc <plugin_init@@Base+0x1e7c>
    7880:	and	w0, w0, #0xff
    7884:	cmp	w0, #0x0
    7888:	b.eq	7900 <_Z19decl_assembler_nameP9tree_node@plt+0xba0>  // b.none
    788c:	add	x0, sp, #0x38
    7890:	bl	12f40 <plugin_init@@Base+0x1f00>
    7894:	ldr	x0, [x0]
    7898:	ldr	x0, [x0]
    789c:	str	x0, [sp, #112]
    78a0:	ldr	x0, [sp, #112]
    78a4:	cmp	x0, #0x0
    78a8:	b.eq	78c0 <_Z19decl_assembler_nameP9tree_node@plt+0xb60>  // b.none
    78ac:	ldr	x0, [sp, #112]
    78b0:	cmp	x0, #0x1
    78b4:	b.eq	78c0 <_Z19decl_assembler_nameP9tree_node@plt+0xb60>  // b.none
    78b8:	ldr	x0, [sp, #112]
    78bc:	bl	64d0 <_Z12ggc_set_markPKv@plt>
    78c0:	add	x0, sp, #0x38
    78c4:	bl	12f40 <plugin_init@@Base+0x1f00>
    78c8:	ldr	x0, [x0]
    78cc:	ldr	x0, [x0, #8]
    78d0:	str	x0, [sp, #104]
    78d4:	ldr	x0, [sp, #104]
    78d8:	cmp	x0, #0x0
    78dc:	b.eq	78f4 <_Z19decl_assembler_nameP9tree_node@plt+0xb94>  // b.none
    78e0:	ldr	x0, [sp, #104]
    78e4:	cmp	x0, #0x1
    78e8:	b.eq	78f4 <_Z19decl_assembler_nameP9tree_node@plt+0xb94>  // b.none
    78ec:	ldr	x0, [sp, #104]
    78f0:	bl	64d0 <_Z12ggc_set_markPKv@plt>
    78f4:	add	x0, sp, #0x38
    78f8:	bl	12f0c <plugin_init@@Base+0x1ecc>
    78fc:	b	7864 <_Z19decl_assembler_nameP9tree_node@plt+0xb04>
    7900:	ldr	x0, [sp, #24]
    7904:	add	x0, x0, #0x48
    7908:	bl	12f58 <plugin_init@@Base+0x1f18>
    790c:	stp	x0, x1, [sp, #40]
    7910:	ldr	x0, [sp, #24]
    7914:	add	x0, x0, #0x48
    7918:	bl	12fa8 <plugin_init@@Base+0x1f68>
    791c:	stp	x0, x1, [sp, #88]
    7920:	add	x1, sp, #0x58
    7924:	add	x0, sp, #0x28
    7928:	bl	12fc8 <plugin_init@@Base+0x1f88>
    792c:	and	w0, w0, #0xff
    7930:	cmp	w0, #0x0
    7934:	b.eq	7970 <_Z19decl_assembler_nameP9tree_node@plt+0xc10>  // b.none
    7938:	add	x0, sp, #0x28
    793c:	bl	1304c <plugin_init@@Base+0x200c>
    7940:	str	x0, [sp, #120]
    7944:	ldr	x0, [sp, #120]
    7948:	cmp	x0, #0x0
    794c:	b.eq	7964 <_Z19decl_assembler_nameP9tree_node@plt+0xc04>  // b.none
    7950:	ldr	x0, [sp, #120]
    7954:	cmp	x0, #0x1
    7958:	b.eq	7964 <_Z19decl_assembler_nameP9tree_node@plt+0xc04>  // b.none
    795c:	ldr	x0, [sp, #120]
    7960:	bl	64d0 <_Z12ggc_set_markPKv@plt>
    7964:	add	x0, sp, #0x28
    7968:	bl	13018 <plugin_init@@Base+0x1fd8>
    796c:	b	7910 <_Z19decl_assembler_nameP9tree_node@plt+0xbb0>
    7970:	nop
    7974:	ldp	x29, x30, [sp], #128
    7978:	ret
    797c:	stp	x29, x30, [sp, #-48]!
    7980:	mov	x29, sp
    7984:	str	w0, [sp, #28]
    7988:	str	x1, [sp, #16]
    798c:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
    7990:	add	x0, x0, #0x730
    7994:	ldr	x0, [x0]
    7998:	cmp	x0, #0x0
    799c:	b.ne	79b8 <_Z19decl_assembler_nameP9tree_node@plt+0xc58>  // b.any
    79a0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    79a4:	add	x2, x0, #0x490
    79a8:	mov	w1, #0xf4                  	// #244
    79ac:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    79b0:	add	x0, x0, #0x4a8
    79b4:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    79b8:	ldr	w0, [sp, #28]
    79bc:	cmp	w0, #0x0
    79c0:	b.ne	79cc <_Z19decl_assembler_nameP9tree_node@plt+0xc6c>  // b.any
    79c4:	str	wzr, [sp, #44]
    79c8:	b	79e4 <_Z19decl_assembler_nameP9tree_node@plt+0xc84>
    79cc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    79d0:	add	x2, x0, #0x490
    79d4:	mov	w1, #0xfc                  	// #252
    79d8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    79dc:	add	x0, x0, #0x4a8
    79e0:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    79e4:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
    79e8:	add	x0, x0, #0x730
    79ec:	ldr	x5, [x0]
    79f0:	ldr	x0, [sp, #16]
    79f4:	ldr	x1, [x0, #24]
    79f8:	add	x0, sp, #0x28
    79fc:	mov	x4, x1
    7a00:	ldr	w3, [sp, #44]
    7a04:	mov	x2, x0
    7a08:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    7a0c:	add	x1, x0, #0x4c8
    7a10:	mov	x0, x5
    7a14:	bl	13064 <plugin_init@@Base+0x2024>
    7a18:	nop
    7a1c:	ldp	x29, x30, [sp], #48
    7a20:	ret
    7a24:	stp	x29, x30, [sp, #-16]!
    7a28:	mov	x29, sp
    7a2c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7a30:	ldr	x0, [x0, #3920]
    7a34:	ldr	x0, [x0]
    7a38:	cmp	x0, #0x0
    7a3c:	b.eq	7a64 <_Z19decl_assembler_nameP9tree_node@plt+0xd04>  // b.none
    7a40:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7a44:	ldr	x0, [x0, #3920]
    7a48:	ldr	x0, [x0]
    7a4c:	ldr	x1, [x0, #64]
    7a50:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7a54:	ldr	x0, [x0, #3872]
    7a58:	ldr	x0, [x0]
    7a5c:	cmp	x1, x0
    7a60:	b.eq	7a88 <_Z19decl_assembler_nameP9tree_node@plt+0xd28>  // b.none
    7a64:	bl	6390 <_Z13current_scopev@plt>
    7a68:	mov	x1, x0
    7a6c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7a70:	ldr	x0, [x0, #3872]
    7a74:	ldr	x0, [x0]
    7a78:	cmp	x1, x0
    7a7c:	b.ne	7a88 <_Z19decl_assembler_nameP9tree_node@plt+0xd28>  // b.any
    7a80:	mov	w0, #0x1                   	// #1
    7a84:	b	7a8c <_Z19decl_assembler_nameP9tree_node@plt+0xd2c>
    7a88:	mov	w0, #0x0                   	// #0
    7a8c:	ldp	x29, x30, [sp], #16
    7a90:	ret
    7a94:	stp	x29, x30, [sp, #-32]!
    7a98:	mov	x29, sp
    7a9c:	str	x0, [sp, #24]
    7aa0:	str	w1, [sp, #20]
    7aa4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7aa8:	ldr	x0, [x0, #3872]
    7aac:	ldr	x1, [sp, #24]
    7ab0:	str	x1, [x0]
    7ab4:	ldr	x1, [sp, #24]
    7ab8:	ldr	w0, [sp, #20]
    7abc:	bl	6560 <_Z11begin_scope10scope_kindP9tree_node@plt>
    7ac0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7ac4:	ldr	x0, [x0, #3968]
    7ac8:	ldr	w0, [x0]
    7acc:	add	w1, w0, #0x1
    7ad0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7ad4:	ldr	x0, [x0, #3968]
    7ad8:	str	w1, [x0]
    7adc:	mov	x1, #0x0                   	// #0
    7ae0:	mov	w0, #0x0                   	// #0
    7ae4:	bl	6560 <_Z11begin_scope10scope_kindP9tree_node@plt>
    7ae8:	nop
    7aec:	ldp	x29, x30, [sp], #32
    7af0:	ret
    7af4:	stp	x29, x30, [sp, #-32]!
    7af8:	mov	x29, sp
    7afc:	bl	6760 <_Z19toplevel_bindings_pv@plt>
    7b00:	and	w0, w0, #0xff
    7b04:	cmp	w0, #0x0
    7b08:	b.eq	7b38 <_Z19decl_assembler_nameP9tree_node@plt+0xdd8>  // b.none
    7b0c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7b10:	ldr	x0, [x0, #3888]
    7b14:	ldr	x0, [x0]
    7b18:	ldr	x1, [x0, #8]
    7b1c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7b20:	ldr	x0, [x0, #3880]
    7b24:	ldr	x0, [x0, #104]
    7b28:	cmp	x1, x0
    7b2c:	b.ne	7b38 <_Z19decl_assembler_nameP9tree_node@plt+0xdd8>  // b.any
    7b30:	mov	w0, #0x1                   	// #1
    7b34:	b	7b3c <_Z19decl_assembler_nameP9tree_node@plt+0xddc>
    7b38:	mov	w0, #0x0                   	// #0
    7b3c:	cmp	w0, #0x0
    7b40:	b.eq	7b4c <_Z19decl_assembler_nameP9tree_node@plt+0xdec>  // b.none
    7b44:	bl	67b0 <_Z18pop_from_top_levelv@plt>
    7b48:	b	7e8c <_Z19decl_assembler_nameP9tree_node@plt+0x112c>
    7b4c:	bl	6610 <_Z20at_namespace_scope_pv@plt>
    7b50:	and	w0, w0, #0xff
    7b54:	cmp	w0, #0x0
    7b58:	b.eq	7b64 <_Z19decl_assembler_nameP9tree_node@plt+0xe04>  // b.none
    7b5c:	bl	6630 <_Z13pop_namespacev@plt>
    7b60:	b	7e8c <_Z19decl_assembler_nameP9tree_node@plt+0x112c>
    7b64:	bl	6690 <_Z16at_class_scope_pv@plt>
    7b68:	and	w0, w0, #0xff
    7b6c:	cmp	w0, #0x0
    7b70:	b.eq	7b7c <_Z19decl_assembler_nameP9tree_node@plt+0xe1c>  // b.none
    7b74:	bl	6af0 <_Z8popclassv@plt>
    7b78:	b	7e8c <_Z19decl_assembler_nameP9tree_node@plt+0x112c>
    7b7c:	bl	7a24 <_Z19decl_assembler_nameP9tree_node@plt+0xcc4>
    7b80:	and	w0, w0, #0xff
    7b84:	eor	w0, w0, #0x1
    7b88:	and	w0, w0, #0xff
    7b8c:	cmp	w0, #0x0
    7b90:	b.eq	7bac <_Z19decl_assembler_nameP9tree_node@plt+0xe4c>  // b.none
    7b94:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    7b98:	add	x2, x0, #0x4d8
    7b9c:	mov	w1, #0x128                 	// #296
    7ba0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    7ba4:	add	x0, x0, #0x4a8
    7ba8:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    7bac:	bl	60e0 <_Z19at_function_scope_pv@plt>
    7bb0:	cmp	w0, #0x0
    7bb4:	b.eq	7bd0 <_Z19decl_assembler_nameP9tree_node@plt+0xe70>  // b.none
    7bb8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    7bbc:	add	x2, x0, #0x4d8
    7bc0:	mov	w1, #0x129                 	// #297
    7bc4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    7bc8:	add	x0, x0, #0x4a8
    7bcc:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    7bd0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7bd4:	ldr	x0, [x0, #3920]
    7bd8:	ldr	x0, [x0]
    7bdc:	cmp	x0, #0x0
    7be0:	b.eq	7c30 <_Z19decl_assembler_nameP9tree_node@plt+0xed0>  // b.none
    7be4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7be8:	ldr	x0, [x0, #3920]
    7bec:	ldr	x0, [x0]
    7bf0:	ldr	x0, [x0, #104]
    7bf4:	cmp	x0, #0x0
    7bf8:	b.eq	7c30 <_Z19decl_assembler_nameP9tree_node@plt+0xed0>  // b.none
    7bfc:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7c00:	ldr	x0, [x0, #3920]
    7c04:	ldr	x0, [x0]
    7c08:	ldr	x0, [x0, #104]
    7c0c:	ldr	x0, [x0, #104]
    7c10:	cmp	x0, #0x0
    7c14:	b.eq	7c30 <_Z19decl_assembler_nameP9tree_node@plt+0xed0>  // b.none
    7c18:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7c1c:	ldr	x0, [x0, #3920]
    7c20:	ldr	x0, [x0]
    7c24:	ldr	x0, [x0, #104]
    7c28:	add	x0, x0, #0x68
    7c2c:	b	7c40 <_Z19decl_assembler_nameP9tree_node@plt+0xee0>
    7c30:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7c34:	ldr	x0, [x0, #3888]
    7c38:	ldr	x0, [x0]
    7c3c:	add	x0, x0, #0xb0
    7c40:	ldr	x0, [x0]
    7c44:	ldrb	w0, [x0, #76]
    7c48:	and	w0, w0, #0xf
    7c4c:	and	w0, w0, #0xff
    7c50:	cmp	w0, #0x0
    7c54:	b.ne	7cd8 <_Z19decl_assembler_nameP9tree_node@plt+0xf78>  // b.any
    7c58:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7c5c:	ldr	x0, [x0, #3920]
    7c60:	ldr	x0, [x0]
    7c64:	cmp	x0, #0x0
    7c68:	b.eq	7cb8 <_Z19decl_assembler_nameP9tree_node@plt+0xf58>  // b.none
    7c6c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7c70:	ldr	x0, [x0, #3920]
    7c74:	ldr	x0, [x0]
    7c78:	ldr	x0, [x0, #104]
    7c7c:	cmp	x0, #0x0
    7c80:	b.eq	7cb8 <_Z19decl_assembler_nameP9tree_node@plt+0xf58>  // b.none
    7c84:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7c88:	ldr	x0, [x0, #3920]
    7c8c:	ldr	x0, [x0]
    7c90:	ldr	x0, [x0, #104]
    7c94:	ldr	x0, [x0, #104]
    7c98:	cmp	x0, #0x0
    7c9c:	b.eq	7cb8 <_Z19decl_assembler_nameP9tree_node@plt+0xf58>  // b.none
    7ca0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7ca4:	ldr	x0, [x0, #3920]
    7ca8:	ldr	x0, [x0]
    7cac:	ldr	x0, [x0, #104]
    7cb0:	add	x0, x0, #0x68
    7cb4:	b	7cc8 <_Z19decl_assembler_nameP9tree_node@plt+0xf68>
    7cb8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7cbc:	ldr	x0, [x0, #3888]
    7cc0:	ldr	x0, [x0]
    7cc4:	add	x0, x0, #0xb0
    7cc8:	ldr	x0, [x0]
    7ccc:	ldr	x0, [x0, #48]
    7cd0:	cmp	x0, #0x0
    7cd4:	b.eq	7cf0 <_Z19decl_assembler_nameP9tree_node@plt+0xf90>  // b.none
    7cd8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    7cdc:	add	x2, x0, #0x4d8
    7ce0:	mov	w1, #0x12a                 	// #298
    7ce4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    7ce8:	add	x0, x0, #0x4a8
    7cec:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    7cf0:	bl	6340 <_Z11leave_scopev@plt>
    7cf4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7cf8:	ldr	x0, [x0, #3968]
    7cfc:	ldr	w0, [x0]
    7d00:	sub	w1, w0, #0x1
    7d04:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7d08:	ldr	x0, [x0, #3968]
    7d0c:	str	w1, [x0]
    7d10:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7d14:	ldr	x0, [x0, #3920]
    7d18:	ldr	x0, [x0]
    7d1c:	cmp	x0, #0x0
    7d20:	b.eq	7d70 <_Z19decl_assembler_nameP9tree_node@plt+0x1010>  // b.none
    7d24:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7d28:	ldr	x0, [x0, #3920]
    7d2c:	ldr	x0, [x0]
    7d30:	ldr	x0, [x0, #104]
    7d34:	cmp	x0, #0x0
    7d38:	b.eq	7d70 <_Z19decl_assembler_nameP9tree_node@plt+0x1010>  // b.none
    7d3c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7d40:	ldr	x0, [x0, #3920]
    7d44:	ldr	x0, [x0]
    7d48:	ldr	x0, [x0, #104]
    7d4c:	ldr	x0, [x0, #104]
    7d50:	cmp	x0, #0x0
    7d54:	b.eq	7d70 <_Z19decl_assembler_nameP9tree_node@plt+0x1010>  // b.none
    7d58:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7d5c:	ldr	x0, [x0, #3920]
    7d60:	ldr	x0, [x0]
    7d64:	ldr	x0, [x0, #104]
    7d68:	add	x0, x0, #0x68
    7d6c:	b	7d80 <_Z19decl_assembler_nameP9tree_node@plt+0x1020>
    7d70:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7d74:	ldr	x0, [x0, #3888]
    7d78:	ldr	x0, [x0]
    7d7c:	add	x0, x0, #0xb0
    7d80:	ldr	x0, [x0]
    7d84:	ldr	x1, [x0, #48]
    7d88:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7d8c:	ldr	x0, [x0, #3872]
    7d90:	ldr	x0, [x0]
    7d94:	cmp	x1, x0
    7d98:	b.eq	7db4 <_Z19decl_assembler_nameP9tree_node@plt+0x1054>  // b.none
    7d9c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    7da0:	add	x2, x0, #0x4d8
    7da4:	mov	w1, #0x12e                 	// #302
    7da8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    7dac:	add	x0, x0, #0x4a8
    7db0:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    7db4:	bl	6340 <_Z11leave_scopev@plt>
    7db8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7dbc:	ldr	x0, [x0, #3872]
    7dc0:	str	xzr, [x0]
    7dc4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7dc8:	ldr	x0, [x0, #3920]
    7dcc:	ldr	x0, [x0]
    7dd0:	cmp	x0, #0x0
    7dd4:	b.eq	7e24 <_Z19decl_assembler_nameP9tree_node@plt+0x10c4>  // b.none
    7dd8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7ddc:	ldr	x0, [x0, #3920]
    7de0:	ldr	x0, [x0]
    7de4:	ldr	x0, [x0, #104]
    7de8:	cmp	x0, #0x0
    7dec:	b.eq	7e24 <_Z19decl_assembler_nameP9tree_node@plt+0x10c4>  // b.none
    7df0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7df4:	ldr	x0, [x0, #3920]
    7df8:	ldr	x0, [x0]
    7dfc:	ldr	x0, [x0, #104]
    7e00:	ldr	x0, [x0, #104]
    7e04:	cmp	x0, #0x0
    7e08:	b.eq	7e24 <_Z19decl_assembler_nameP9tree_node@plt+0x10c4>  // b.none
    7e0c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7e10:	ldr	x0, [x0, #3920]
    7e14:	ldr	x0, [x0]
    7e18:	ldr	x0, [x0, #104]
    7e1c:	add	x0, x0, #0x68
    7e20:	b	7e34 <_Z19decl_assembler_nameP9tree_node@plt+0x10d4>
    7e24:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7e28:	ldr	x0, [x0, #3888]
    7e2c:	ldr	x0, [x0]
    7e30:	add	x0, x0, #0xb0
    7e34:	ldr	x0, [x0]
    7e38:	str	x0, [sp, #24]
    7e3c:	ldr	x0, [sp, #24]
    7e40:	cmp	x0, #0x0
    7e44:	b.eq	7e8c <_Z19decl_assembler_nameP9tree_node@plt+0x112c>  // b.none
    7e48:	ldr	x0, [sp, #24]
    7e4c:	ldrb	w0, [x0, #76]
    7e50:	and	w0, w0, #0xf
    7e54:	and	w0, w0, #0xff
    7e58:	cmp	w0, #0x6
    7e5c:	b.ne	7e7c <_Z19decl_assembler_nameP9tree_node@plt+0x111c>  // b.any
    7e60:	ldr	x0, [sp, #24]
    7e64:	ldr	x1, [x0, #48]
    7e68:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7e6c:	ldr	x0, [x0, #3872]
    7e70:	str	x1, [x0]
    7e74:	nop
    7e78:	b	7e8c <_Z19decl_assembler_nameP9tree_node@plt+0x112c>
    7e7c:	ldr	x0, [sp, #24]
    7e80:	ldr	x0, [x0, #56]
    7e84:	str	x0, [sp, #24]
    7e88:	b	7e3c <_Z19decl_assembler_nameP9tree_node@plt+0x10dc>
    7e8c:	nop
    7e90:	ldp	x29, x30, [sp], #32
    7e94:	ret
    7e98:	stp	x29, x30, [sp, #-64]!
    7e9c:	mov	x29, sp
    7ea0:	str	x0, [sp, #24]
    7ea4:	str	x1, [sp, #16]
    7ea8:	ldr	x0, [sp, #24]
    7eac:	ldr	x0, [x0, #8]
    7eb0:	str	x0, [sp, #48]
    7eb4:	mov	w0, #0x1                   	// #1
    7eb8:	strb	w0, [sp, #63]
    7ebc:	ldr	x0, [sp, #48]
    7ec0:	bl	6150 <_Z16strip_using_declP9tree_node@plt>
    7ec4:	str	x0, [sp, #40]
    7ec8:	ldr	x0, [sp, #16]
    7ecc:	bl	6150 <_Z16strip_using_declP9tree_node@plt>
    7ed0:	str	x0, [sp, #32]
    7ed4:	ldr	x0, [sp, #32]
    7ed8:	ldrh	w0, [x0]
    7edc:	cmp	w0, #0x26
    7ee0:	b.ne	7f9c <_Z19decl_assembler_nameP9tree_node@plt+0x123c>  // b.any
    7ee4:	ldr	x0, [sp, #32]
    7ee8:	ldrb	w0, [x0, #57]
    7eec:	and	w0, w0, #0x10
    7ef0:	and	w0, w0, #0xff
    7ef4:	cmp	w0, #0x0
    7ef8:	b.eq	7f9c <_Z19decl_assembler_nameP9tree_node@plt+0x123c>  // b.none
    7efc:	ldr	x1, [sp, #32]
    7f00:	ldr	x0, [sp, #40]
    7f04:	cmp	x1, x0
    7f08:	b.eq	7f9c <_Z19decl_assembler_nameP9tree_node@plt+0x123c>  // b.none
    7f0c:	ldr	x0, [sp, #40]
    7f10:	ldrh	w0, [x0]
    7f14:	cmp	w0, #0x26
    7f18:	b.ne	7f94 <_Z19decl_assembler_nameP9tree_node@plt+0x1234>  // b.any
    7f1c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7f20:	ldr	x0, [x0, #3888]
    7f24:	ldr	x0, [x0]
    7f28:	ldr	w0, [x0, #112]
    7f2c:	cmp	w0, #0x0
    7f30:	b.eq	7f9c <_Z19decl_assembler_nameP9tree_node@plt+0x123c>  // b.none
    7f34:	ldr	x0, [sp, #32]
    7f38:	ldr	x0, [x0, #8]
    7f3c:	ldrh	w0, [x0]
    7f40:	cmp	w0, #0x6
    7f44:	b.ne	7f9c <_Z19decl_assembler_nameP9tree_node@plt+0x123c>  // b.any
    7f48:	ldr	x0, [sp, #40]
    7f4c:	ldr	x0, [x0, #8]
    7f50:	ldrh	w0, [x0]
    7f54:	cmp	w0, #0x6
    7f58:	b.ne	7f9c <_Z19decl_assembler_nameP9tree_node@plt+0x123c>  // b.any
    7f5c:	ldr	x0, [sp, #32]
    7f60:	ldr	x0, [x0, #8]
    7f64:	ldr	x0, [x0, #8]
    7f68:	bl	6ae0 <_Z16dependent_type_pP9tree_node@plt>
    7f6c:	and	w0, w0, #0xff
    7f70:	cmp	w0, #0x0
    7f74:	b.ne	7f94 <_Z19decl_assembler_nameP9tree_node@plt+0x1234>  // b.any
    7f78:	ldr	x0, [sp, #40]
    7f7c:	ldr	x0, [x0, #8]
    7f80:	ldr	x0, [x0, #8]
    7f84:	bl	6ae0 <_Z16dependent_type_pP9tree_node@plt>
    7f88:	and	w0, w0, #0xff
    7f8c:	cmp	w0, #0x0
    7f90:	b.eq	7f9c <_Z19decl_assembler_nameP9tree_node@plt+0x123c>  // b.none
    7f94:	mov	w0, #0x1                   	// #1
    7f98:	b	7fa0 <_Z19decl_assembler_nameP9tree_node@plt+0x1240>
    7f9c:	mov	w0, #0x0                   	// #0
    7fa0:	cmp	w0, #0x0
    7fa4:	b.eq	7fb8 <_Z19decl_assembler_nameP9tree_node@plt+0x1258>  // b.none
    7fa8:	ldr	x0, [sp, #24]
    7fac:	ldr	x1, [sp, #16]
    7fb0:	str	x1, [x0, #16]
    7fb4:	b	8304 <_Z19decl_assembler_nameP9tree_node@plt+0x15a4>
    7fb8:	ldr	x0, [sp, #40]
    7fbc:	cmp	x0, #0x0
    7fc0:	b.eq	8040 <_Z19decl_assembler_nameP9tree_node@plt+0x12e0>  // b.none
    7fc4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    7fc8:	ldr	x0, [x0, #3976]
    7fcc:	ldr	x0, [x0]
    7fd0:	ldr	x1, [sp, #40]
    7fd4:	cmp	x1, x0
    7fd8:	b.eq	8040 <_Z19decl_assembler_nameP9tree_node@plt+0x12e0>  // b.none
    7fdc:	ldr	x0, [sp, #40]
    7fe0:	ldrh	w0, [x0]
    7fe4:	cmp	w0, #0x20
    7fe8:	b.ne	8050 <_Z19decl_assembler_nameP9tree_node@plt+0x12f0>  // b.any
    7fec:	ldr	x0, [sp, #40]
    7ff0:	ldr	x0, [x0, #104]
    7ff4:	ldrb	w0, [x0, #2]
    7ff8:	and	w0, w0, #0xffffff80
    7ffc:	and	w0, w0, #0xff
    8000:	cmp	w0, #0x0
    8004:	b.eq	8050 <_Z19decl_assembler_nameP9tree_node@plt+0x12f0>  // b.none
    8008:	ldr	x0, [sp, #40]
    800c:	ldrh	w0, [x0]
    8010:	cmp	w0, #0xff
    8014:	b.ne	8024 <_Z19decl_assembler_nameP9tree_node@plt+0x12c4>  // b.any
    8018:	ldr	x0, [sp, #40]
    801c:	ldr	x0, [x0, #120]
    8020:	b	8028 <_Z19decl_assembler_nameP9tree_node@plt+0x12c8>
    8024:	ldr	x0, [sp, #40]
    8028:	ldr	x0, [x0, #104]
    802c:	ldrb	w0, [x0, #26]
    8030:	and	w0, w0, #0x2
    8034:	and	w0, w0, #0xff
    8038:	cmp	w0, #0x0
    803c:	b.ne	8050 <_Z19decl_assembler_nameP9tree_node@plt+0x12f0>  // b.any
    8040:	ldr	x0, [sp, #24]
    8044:	ldr	x1, [sp, #16]
    8048:	str	x1, [x0, #8]
    804c:	b	8304 <_Z19decl_assembler_nameP9tree_node@plt+0x15a4>
    8050:	ldr	x0, [sp, #40]
    8054:	ldrh	w0, [x0]
    8058:	cmp	w0, #0x26
    805c:	b.ne	80cc <_Z19decl_assembler_nameP9tree_node@plt+0x136c>  // b.any
    8060:	ldr	x0, [sp, #40]
    8064:	ldrb	w0, [x0, #57]
    8068:	and	w0, w0, #0x10
    806c:	and	w0, w0, #0xff
    8070:	cmp	w0, #0x0
    8074:	b.eq	80cc <_Z19decl_assembler_nameP9tree_node@plt+0x136c>  // b.none
    8078:	ldr	x1, [sp, #32]
    807c:	ldr	x0, [sp, #40]
    8080:	cmp	x1, x0
    8084:	b.eq	80cc <_Z19decl_assembler_nameP9tree_node@plt+0x136c>  // b.none
    8088:	ldr	x0, [sp, #32]
    808c:	ldrh	w0, [x0]
    8090:	cmp	w0, #0x26
    8094:	b.ne	80c4 <_Z19decl_assembler_nameP9tree_node@plt+0x1364>  // b.any
    8098:	ldr	x0, [sp, #32]
    809c:	ldr	x3, [x0, #8]
    80a0:	ldr	x0, [sp, #40]
    80a4:	ldr	x0, [x0, #8]
    80a8:	mov	w2, #0x0                   	// #0
    80ac:	mov	x1, x0
    80b0:	mov	x0, x3
    80b4:	bl	6b40 <_Z9comptypesP9tree_nodeS0_i@plt>
    80b8:	and	w0, w0, #0xff
    80bc:	cmp	w0, #0x0
    80c0:	b.eq	80cc <_Z19decl_assembler_nameP9tree_node@plt+0x136c>  // b.none
    80c4:	mov	w0, #0x1                   	// #1
    80c8:	b	80d0 <_Z19decl_assembler_nameP9tree_node@plt+0x1370>
    80cc:	mov	w0, #0x0                   	// #0
    80d0:	cmp	w0, #0x0
    80d4:	b.eq	8104 <_Z19decl_assembler_nameP9tree_node@plt+0x13a4>  // b.none
    80d8:	ldr	x0, [sp, #24]
    80dc:	ldr	x1, [sp, #48]
    80e0:	str	x1, [x0, #16]
    80e4:	ldr	x0, [sp, #24]
    80e8:	ldr	x1, [sp, #16]
    80ec:	str	x1, [x0, #8]
    80f0:	ldr	x0, [sp, #24]
    80f4:	ldrb	w1, [x0, #32]
    80f8:	and	w1, w1, #0xfffffffe
    80fc:	strb	w1, [x0, #32]
    8100:	b	8304 <_Z19decl_assembler_nameP9tree_node@plt+0x15a4>
    8104:	ldr	x0, [sp, #40]
    8108:	ldrh	w0, [x0]
    810c:	cmp	w0, #0x26
    8110:	b.ne	81b4 <_Z19decl_assembler_nameP9tree_node@plt+0x1454>  // b.any
    8114:	ldr	x0, [sp, #32]
    8118:	ldrh	w0, [x0]
    811c:	cmp	w0, #0x26
    8120:	b.ne	81b4 <_Z19decl_assembler_nameP9tree_node@plt+0x1454>  // b.any
    8124:	ldr	x0, [sp, #32]
    8128:	ldr	x1, [x0, #32]
    812c:	ldr	x0, [sp, #40]
    8130:	ldr	x0, [x0, #32]
    8134:	cmp	x1, x0
    8138:	b.ne	81b4 <_Z19decl_assembler_nameP9tree_node@plt+0x1454>  // b.any
    813c:	ldr	x0, [sp, #24]
    8140:	ldr	x0, [x0, #24]
    8144:	ldrb	w0, [x0, #76]
    8148:	and	w0, w0, #0xf
    814c:	and	w0, w0, #0xff
    8150:	cmp	w0, #0x7
    8154:	b.eq	81b4 <_Z19decl_assembler_nameP9tree_node@plt+0x1454>  // b.none
    8158:	ldr	x0, [sp, #32]
    815c:	ldr	x3, [x0, #8]
    8160:	ldr	x0, [sp, #40]
    8164:	ldr	x0, [x0, #8]
    8168:	mov	w2, #0x0                   	// #0
    816c:	mov	x1, x0
    8170:	mov	x0, x3
    8174:	bl	6b40 <_Z9comptypesP9tree_nodeS0_i@plt>
    8178:	and	w0, w0, #0xff
    817c:	cmp	w0, #0x0
    8180:	b.ne	81ac <_Z19decl_assembler_nameP9tree_node@plt+0x144c>  // b.any
    8184:	ldr	x0, [sp, #32]
    8188:	ldr	x0, [x0, #8]
    818c:	bl	6cc0 <_Z19uses_template_parmsP9tree_node@plt>
    8190:	cmp	w0, #0x0
    8194:	b.ne	81ac <_Z19decl_assembler_nameP9tree_node@plt+0x144c>  // b.any
    8198:	ldr	x0, [sp, #40]
    819c:	ldr	x0, [x0, #8]
    81a0:	bl	6cc0 <_Z19uses_template_parmsP9tree_node@plt>
    81a4:	cmp	w0, #0x0
    81a8:	b.eq	81b4 <_Z19decl_assembler_nameP9tree_node@plt+0x1454>  // b.none
    81ac:	mov	w0, #0x1                   	// #1
    81b0:	b	81b8 <_Z19decl_assembler_nameP9tree_node@plt+0x1458>
    81b4:	mov	w0, #0x0                   	// #0
    81b8:	cmp	w0, #0x0
    81bc:	b.eq	81c8 <_Z19decl_assembler_nameP9tree_node@plt+0x1468>  // b.none
    81c0:	strb	wzr, [sp, #63]
    81c4:	b	8304 <_Z19decl_assembler_nameP9tree_node@plt+0x15a4>
    81c8:	ldr	x0, [sp, #32]
    81cc:	ldrh	w0, [x0]
    81d0:	cmp	w0, #0x23
    81d4:	b.ne	8270 <_Z19decl_assembler_nameP9tree_node@plt+0x1510>  // b.any
    81d8:	ldr	x0, [sp, #40]
    81dc:	ldrh	w0, [x0]
    81e0:	cmp	w0, #0x23
    81e4:	b.ne	8270 <_Z19decl_assembler_nameP9tree_node@plt+0x1510>  // b.any
    81e8:	ldr	x0, [sp, #32]
    81ec:	ldrb	w0, [x0, #59]
    81f0:	and	w0, w0, #0x2
    81f4:	and	w0, w0, #0xff
    81f8:	cmp	w0, #0x0
    81fc:	b.eq	8270 <_Z19decl_assembler_nameP9tree_node@plt+0x1510>  // b.none
    8200:	ldr	x0, [sp, #40]
    8204:	ldrb	w0, [x0, #59]
    8208:	and	w0, w0, #0x2
    820c:	and	w0, w0, #0xff
    8210:	cmp	w0, #0x0
    8214:	b.eq	8270 <_Z19decl_assembler_nameP9tree_node@plt+0x1510>  // b.none
    8218:	ldr	x0, [sp, #32]
    821c:	ldr	x0, [x0, #40]
    8220:	cmp	x0, #0x0
    8224:	b.eq	8250 <_Z19decl_assembler_nameP9tree_node@plt+0x14f0>  // b.none
    8228:	ldr	x0, [sp, #32]
    822c:	ldr	x0, [x0, #40]
    8230:	ldrh	w0, [x0]
    8234:	mov	w1, w0
    8238:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    823c:	ldr	x0, [x0, #3952]
    8240:	sxtw	x1, w1
    8244:	ldr	w0, [x0, x1, lsl #2]
    8248:	cmp	w0, #0x2
    824c:	b.eq	8270 <_Z19decl_assembler_nameP9tree_node@plt+0x1510>  // b.none
    8250:	ldr	x0, [sp, #24]
    8254:	ldr	x0, [x0, #8]
    8258:	mov	w2, #0x0                   	// #0
    825c:	mov	x1, x0
    8260:	ldr	x0, [sp, #16]
    8264:	bl	64a0 <_Z15duplicate_declsP9tree_nodeS0_b@plt>
    8268:	strb	wzr, [sp, #63]
    826c:	b	8304 <_Z19decl_assembler_nameP9tree_node@plt+0x15a4>
    8270:	ldr	x0, [sp, #16]
    8274:	ldrh	w0, [x0]
    8278:	cmp	w0, #0x2a
    827c:	b.ne	8300 <_Z19decl_assembler_nameP9tree_node@plt+0x15a0>  // b.any
    8280:	ldr	x0, [sp, #48]
    8284:	ldrh	w0, [x0]
    8288:	cmp	w0, #0x2a
    828c:	b.ne	8300 <_Z19decl_assembler_nameP9tree_node@plt+0x15a0>  // b.any
    8290:	ldr	x0, [sp, #16]
    8294:	ldr	x0, [x0, #96]
    8298:	cmp	x0, #0x0
    829c:	b.eq	8300 <_Z19decl_assembler_nameP9tree_node@plt+0x15a0>  // b.none
    82a0:	ldr	x0, [sp, #48]
    82a4:	ldr	x0, [x0, #96]
    82a8:	cmp	x0, #0x0
    82ac:	b.eq	8300 <_Z19decl_assembler_nameP9tree_node@plt+0x15a0>  // b.none
    82b0:	ldr	x0, [sp, #48]
    82b4:	ldr	x0, [x0, #96]
    82b8:	cmp	x0, #0x0
    82bc:	b.eq	82cc <_Z19decl_assembler_nameP9tree_node@plt+0x156c>  // b.none
    82c0:	ldr	x0, [sp, #48]
    82c4:	ldr	x1, [x0, #96]
    82c8:	b	82d0 <_Z19decl_assembler_nameP9tree_node@plt+0x1570>
    82cc:	ldr	x1, [sp, #48]
    82d0:	ldr	x0, [sp, #16]
    82d4:	ldr	x0, [x0, #96]
    82d8:	cmp	x0, #0x0
    82dc:	b.eq	82ec <_Z19decl_assembler_nameP9tree_node@plt+0x158c>  // b.none
    82e0:	ldr	x0, [sp, #16]
    82e4:	ldr	x0, [x0, #96]
    82e8:	b	82f0 <_Z19decl_assembler_nameP9tree_node@plt+0x1590>
    82ec:	ldr	x0, [sp, #16]
    82f0:	cmp	x1, x0
    82f4:	b.ne	8300 <_Z19decl_assembler_nameP9tree_node@plt+0x15a0>  // b.any
    82f8:	strb	wzr, [sp, #63]
    82fc:	b	8304 <_Z19decl_assembler_nameP9tree_node@plt+0x15a4>
    8300:	strb	wzr, [sp, #63]
    8304:	ldrb	w0, [sp, #63]
    8308:	eor	w0, w0, #0x1
    830c:	and	w0, w0, #0xff
    8310:	cmp	w0, #0x0
    8314:	b.eq	8330 <_Z19decl_assembler_nameP9tree_node@plt+0x15d0>  // b.none
    8318:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    831c:	add	x2, x0, #0x4e8
    8320:	mov	w1, #0x1af                 	// #431
    8324:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8328:	add	x0, x0, #0x4a8
    832c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    8330:	nop
    8334:	ldp	x29, x30, [sp], #64
    8338:	ret
    833c:	stp	x29, x30, [sp, #-128]!
    8340:	mov	x29, sp
    8344:	str	x0, [sp, #24]
    8348:	str	x1, [sp, #16]
    834c:	ldr	x0, [sp, #16]
    8350:	ldr	x0, [x0, #48]
    8354:	ldrh	w0, [x0]
    8358:	cmp	w0, #0x20
    835c:	cset	w0, eq  // eq = none
    8360:	strb	w0, [sp, #63]
    8364:	ldrb	w0, [sp, #63]
    8368:	eor	w0, w0, #0x1
    836c:	and	w0, w0, #0xff
    8370:	cmp	w0, #0x0
    8374:	b.eq	8420 <_Z19decl_assembler_nameP9tree_node@plt+0x16c0>  // b.none
    8378:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    837c:	ldr	x0, [x0, #3920]
    8380:	ldr	x0, [x0]
    8384:	cmp	x0, #0x0
    8388:	b.eq	83d8 <_Z19decl_assembler_nameP9tree_node@plt+0x1678>  // b.none
    838c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8390:	ldr	x0, [x0, #3920]
    8394:	ldr	x0, [x0]
    8398:	ldr	x0, [x0, #104]
    839c:	cmp	x0, #0x0
    83a0:	b.eq	83d8 <_Z19decl_assembler_nameP9tree_node@plt+0x1678>  // b.none
    83a4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    83a8:	ldr	x0, [x0, #3920]
    83ac:	ldr	x0, [x0]
    83b0:	ldr	x0, [x0, #104]
    83b4:	ldr	x0, [x0, #104]
    83b8:	cmp	x0, #0x0
    83bc:	b.eq	83d8 <_Z19decl_assembler_nameP9tree_node@plt+0x1678>  // b.none
    83c0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    83c4:	ldr	x0, [x0, #3920]
    83c8:	ldr	x0, [x0]
    83cc:	ldr	x0, [x0, #104]
    83d0:	add	x0, x0, #0x68
    83d4:	b	83e8 <_Z19decl_assembler_nameP9tree_node@plt+0x1688>
    83d8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    83dc:	ldr	x0, [x0, #3888]
    83e0:	ldr	x0, [x0]
    83e4:	add	x0, x0, #0xb0
    83e8:	ldr	x0, [x0]
    83ec:	ldr	x1, [sp, #16]
    83f0:	cmp	x1, x0
    83f4:	b.ne	8408 <_Z19decl_assembler_nameP9tree_node@plt+0x16a8>  // b.any
    83f8:	bl	6690 <_Z16at_class_scope_pv@plt>
    83fc:	and	w0, w0, #0xff
    8400:	cmp	w0, #0x0
    8404:	b.eq	8420 <_Z19decl_assembler_nameP9tree_node@plt+0x16c0>  // b.none
    8408:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    840c:	add	x2, x0, #0x500
    8410:	mov	w1, #0x1b6                 	// #438
    8414:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8418:	add	x0, x0, #0x4a8
    841c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    8420:	ldr	x0, [sp, #24]
    8424:	ldr	x0, [x0, #32]
    8428:	str	x0, [sp, #48]
    842c:	str	xzr, [sp, #120]
    8430:	ldr	x0, [sp, #24]
    8434:	ldrh	w0, [x0]
    8438:	cmp	w0, #0x26
    843c:	b.ne	844c <_Z19decl_assembler_nameP9tree_node@plt+0x16ec>  // b.any
    8440:	ldr	x0, [sp, #24]
    8444:	ldr	x0, [x0, #8]
    8448:	str	x0, [sp, #120]
    844c:	ldr	x0, [sp, #120]
    8450:	cmp	x0, #0x0
    8454:	b.eq	84f0 <_Z19decl_assembler_nameP9tree_node@plt+0x1790>  // b.none
    8458:	ldr	x0, [sp, #120]
    845c:	ldr	x0, [x0, #120]
    8460:	ldr	x1, [sp, #24]
    8464:	cmp	x1, x0
    8468:	b.ne	84f0 <_Z19decl_assembler_nameP9tree_node@plt+0x1790>  // b.any
    846c:	ldr	x0, [sp, #120]
    8470:	ldrh	w0, [x0]
    8474:	cmp	w0, #0x11
    8478:	b.eq	849c <_Z19decl_assembler_nameP9tree_node@plt+0x173c>  // b.none
    847c:	ldr	x0, [sp, #120]
    8480:	ldrh	w0, [x0]
    8484:	cmp	w0, #0x12
    8488:	b.eq	849c <_Z19decl_assembler_nameP9tree_node@plt+0x173c>  // b.none
    848c:	ldr	x0, [sp, #120]
    8490:	ldrh	w0, [x0]
    8494:	cmp	w0, #0x6
    8498:	b.ne	84f0 <_Z19decl_assembler_nameP9tree_node@plt+0x1790>  // b.any
    849c:	ldrb	w0, [sp, #63]
    84a0:	eor	w0, w0, #0x1
    84a4:	and	w0, w0, #0xff
    84a8:	cmp	w0, #0x0
    84ac:	b.ne	84c8 <_Z19decl_assembler_nameP9tree_node@plt+0x1768>  // b.any
    84b0:	ldr	x0, [sp, #24]
    84b4:	ldr	x1, [x0, #40]
    84b8:	ldr	x0, [sp, #16]
    84bc:	ldr	x0, [x0, #48]
    84c0:	cmp	x1, x0
    84c4:	b.eq	84e0 <_Z19decl_assembler_nameP9tree_node@plt+0x1780>  // b.none
    84c8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    84cc:	add	x2, x0, #0x500
    84d0:	mov	w1, #0x1c3                 	// #451
    84d4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    84d8:	add	x0, x0, #0x4a8
    84dc:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    84e0:	ldr	x0, [sp, #24]
    84e4:	ldr	x0, [x0, #8]
    84e8:	str	x0, [sp, #120]
    84ec:	b	8554 <_Z19decl_assembler_nameP9tree_node@plt+0x17f4>
    84f0:	ldr	x0, [sp, #24]
    84f4:	ldr	x1, [x0, #40]
    84f8:	ldr	x0, [sp, #16]
    84fc:	ldr	x0, [x0, #48]
    8500:	cmp	x1, x0
    8504:	b.eq	8550 <_Z19decl_assembler_nameP9tree_node@plt+0x17f0>  // b.none
    8508:	ldr	x0, [sp, #24]
    850c:	ldr	x1, [x0, #40]
    8510:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8514:	ldr	x0, [x0, #3880]
    8518:	ldr	x0, [x0, #104]
    851c:	cmp	x1, x0
    8520:	b.eq	8550 <_Z19decl_assembler_nameP9tree_node@plt+0x17f0>  // b.none
    8524:	ldr	x0, [sp, #24]
    8528:	ldr	x0, [x0, #40]
    852c:	ldrh	w0, [x0]
    8530:	cmp	w0, #0x20
    8534:	b.eq	8550 <_Z19decl_assembler_nameP9tree_node@plt+0x17f0>  // b.none
    8538:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    853c:	add	x2, x0, #0x500
    8540:	mov	w1, #0x1c8                 	// #456
    8544:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8548:	add	x0, x0, #0x4a8
    854c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    8550:	str	xzr, [sp, #120]
    8554:	ldr	x0, [sp, #48]
    8558:	ldr	x0, [x0, #56]
    855c:	str	x0, [sp, #112]
    8560:	str	xzr, [sp, #104]
    8564:	str	xzr, [sp, #96]
    8568:	ldr	x0, [sp, #112]
    856c:	cmp	x0, #0x0
    8570:	b.eq	86d0 <_Z19decl_assembler_nameP9tree_node@plt+0x1970>  // b.none
    8574:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8578:	ldr	x0, [x0, #3920]
    857c:	ldr	x0, [x0]
    8580:	cmp	x0, #0x0
    8584:	b.eq	85d4 <_Z19decl_assembler_nameP9tree_node@plt+0x1874>  // b.none
    8588:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    858c:	ldr	x0, [x0, #3920]
    8590:	ldr	x0, [x0]
    8594:	ldr	x0, [x0, #104]
    8598:	cmp	x0, #0x0
    859c:	b.eq	85d4 <_Z19decl_assembler_nameP9tree_node@plt+0x1874>  // b.none
    85a0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    85a4:	ldr	x0, [x0, #3920]
    85a8:	ldr	x0, [x0]
    85ac:	ldr	x0, [x0, #104]
    85b0:	ldr	x0, [x0, #104]
    85b4:	cmp	x0, #0x0
    85b8:	b.eq	85d4 <_Z19decl_assembler_nameP9tree_node@plt+0x1874>  // b.none
    85bc:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    85c0:	ldr	x0, [x0, #3920]
    85c4:	ldr	x0, [x0]
    85c8:	ldr	x0, [x0, #104]
    85cc:	add	x0, x0, #0x68
    85d0:	b	85e4 <_Z19decl_assembler_nameP9tree_node@plt+0x1884>
    85d4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    85d8:	ldr	x0, [x0, #3888]
    85dc:	ldr	x0, [x0]
    85e0:	add	x0, x0, #0xb0
    85e4:	ldr	x0, [x0]
    85e8:	str	x0, [sp, #88]
    85ec:	ldr	x0, [sp, #112]
    85f0:	str	x0, [sp, #80]
    85f4:	ldr	x0, [sp, #80]
    85f8:	cmp	x0, #0x0
    85fc:	b.eq	86d0 <_Z19decl_assembler_nameP9tree_node@plt+0x1970>  // b.none
    8600:	ldr	x1, [sp, #88]
    8604:	ldr	x0, [sp, #16]
    8608:	cmp	x1, x0
    860c:	b.eq	8634 <_Z19decl_assembler_nameP9tree_node@plt+0x18d4>  // b.none
    8610:	ldr	x0, [sp, #80]
    8614:	ldr	x0, [x0, #24]
    8618:	ldr	x1, [sp, #88]
    861c:	cmp	x1, x0
    8620:	b.eq	8634 <_Z19decl_assembler_nameP9tree_node@plt+0x18d4>  // b.none
    8624:	ldr	x0, [sp, #88]
    8628:	ldr	x0, [x0, #56]
    862c:	str	x0, [sp, #88]
    8630:	b	8600 <_Z19decl_assembler_nameP9tree_node@plt+0x18a0>
    8634:	ldr	x1, [sp, #88]
    8638:	ldr	x0, [sp, #16]
    863c:	cmp	x1, x0
    8640:	b.ne	8658 <_Z19decl_assembler_nameP9tree_node@plt+0x18f8>  // b.any
    8644:	ldr	x0, [sp, #104]
    8648:	cmp	x0, #0x0
    864c:	b.ne	86cc <_Z19decl_assembler_nameP9tree_node@plt+0x196c>  // b.any
    8650:	str	xzr, [sp, #112]
    8654:	b	86cc <_Z19decl_assembler_nameP9tree_node@plt+0x196c>
    8658:	ldr	x0, [sp, #80]
    865c:	str	x0, [sp, #104]
    8660:	ldr	x0, [sp, #120]
    8664:	cmp	x0, #0x0
    8668:	b.eq	86bc <_Z19decl_assembler_nameP9tree_node@plt+0x195c>  // b.none
    866c:	ldr	x0, [sp, #80]
    8670:	ldr	x0, [x0, #24]
    8674:	ldr	x0, [x0, #32]
    8678:	str	x0, [sp, #72]
    867c:	ldr	x0, [sp, #72]
    8680:	cmp	x0, #0x0
    8684:	b.eq	86bc <_Z19decl_assembler_nameP9tree_node@plt+0x195c>  // b.none
    8688:	ldr	x0, [sp, #72]
    868c:	ldr	x0, [x0, #24]
    8690:	ldr	x1, [sp, #48]
    8694:	cmp	x1, x0
    8698:	b.ne	86ac <_Z19decl_assembler_nameP9tree_node@plt+0x194c>  // b.any
    869c:	ldr	x0, [sp, #72]
    86a0:	add	x0, x0, #0x20
    86a4:	str	x0, [sp, #96]
    86a8:	b	86bc <_Z19decl_assembler_nameP9tree_node@plt+0x195c>
    86ac:	ldr	x0, [sp, #72]
    86b0:	ldr	x0, [x0, #16]
    86b4:	str	x0, [sp, #72]
    86b8:	b	867c <_Z19decl_assembler_nameP9tree_node@plt+0x191c>
    86bc:	ldr	x0, [sp, #80]
    86c0:	ldr	x0, [x0]
    86c4:	str	x0, [sp, #80]
    86c8:	b	85f4 <_Z19decl_assembler_nameP9tree_node@plt+0x1894>
    86cc:	nop
    86d0:	ldr	x0, [sp, #104]
    86d4:	cmp	x0, #0x0
    86d8:	b.eq	86f4 <_Z19decl_assembler_nameP9tree_node@plt+0x1994>  // b.none
    86dc:	ldr	x0, [sp, #104]
    86e0:	ldr	x1, [x0]
    86e4:	ldr	x0, [sp, #48]
    86e8:	str	x1, [x0, #56]
    86ec:	ldr	x0, [sp, #104]
    86f0:	str	xzr, [x0]
    86f4:	ldr	x0, [sp, #48]
    86f8:	ldr	x0, [x0, #56]
    86fc:	cmp	x0, #0x0
    8700:	b.eq	8730 <_Z19decl_assembler_nameP9tree_node@plt+0x19d0>  // b.none
    8704:	ldr	x0, [sp, #48]
    8708:	ldr	x0, [x0, #56]
    870c:	ldr	x0, [x0, #24]
    8710:	ldr	x1, [sp, #16]
    8714:	cmp	x1, x0
    8718:	b.ne	8730 <_Z19decl_assembler_nameP9tree_node@plt+0x19d0>  // b.any
    871c:	ldr	x0, [sp, #48]
    8720:	ldr	x0, [x0, #56]
    8724:	ldr	x1, [sp, #24]
    8728:	bl	7e98 <_Z19decl_assembler_nameP9tree_node@plt+0x1138>
    872c:	b	8740 <_Z19decl_assembler_nameP9tree_node@plt+0x19e0>
    8730:	ldr	x2, [sp, #16]
    8734:	ldr	x1, [sp, #24]
    8738:	ldr	x0, [sp, #48]
    873c:	bl	6ab0 <_Z12push_bindingP9tree_nodeS0_P16cp_binding_level@plt>
    8740:	ldr	x0, [sp, #104]
    8744:	cmp	x0, #0x0
    8748:	b.eq	87d4 <_Z19decl_assembler_nameP9tree_node@plt+0x1a74>  // b.none
    874c:	ldr	x0, [sp, #48]
    8750:	ldr	x1, [x0, #56]
    8754:	ldr	x0, [sp, #104]
    8758:	str	x1, [x0]
    875c:	ldr	x0, [sp, #48]
    8760:	ldr	x1, [sp, #112]
    8764:	str	x1, [x0, #56]
    8768:	ldr	x0, [sp, #120]
    876c:	cmp	x0, #0x0
    8770:	b.eq	8824 <_Z19decl_assembler_nameP9tree_node@plt+0x1ac4>  // b.none
    8774:	str	xzr, [sp, #64]
    8778:	ldr	x0, [sp, #96]
    877c:	cmp	x0, #0x0
    8780:	b.eq	879c <_Z19decl_assembler_nameP9tree_node@plt+0x1a3c>  // b.none
    8784:	ldr	x0, [sp, #96]
    8788:	ldr	x0, [x0]
    878c:	str	x0, [sp, #64]
    8790:	ldr	x0, [sp, #96]
    8794:	ldr	x1, [sp, #120]
    8798:	str	x1, [x0]
    879c:	ldr	x0, [sp, #16]
    87a0:	ldr	x0, [x0, #32]
    87a4:	mov	x2, x0
    87a8:	ldr	x1, [sp, #64]
    87ac:	ldr	x0, [sp, #48]
    87b0:	bl	6030 <_Z9tree_consP9tree_nodeS0_S0_@plt>
    87b4:	mov	x1, x0
    87b8:	ldr	x0, [sp, #16]
    87bc:	str	x1, [x0, #32]
    87c0:	ldr	x0, [sp, #16]
    87c4:	ldr	x0, [x0, #32]
    87c8:	ldr	x1, [sp, #120]
    87cc:	str	x1, [x0, #8]
    87d0:	b	8824 <_Z19decl_assembler_nameP9tree_node@plt+0x1ac4>
    87d4:	ldr	x0, [sp, #120]
    87d8:	cmp	x0, #0x0
    87dc:	b.eq	8824 <_Z19decl_assembler_nameP9tree_node@plt+0x1ac4>  // b.none
    87e0:	ldr	x0, [sp, #48]
    87e4:	ldr	x1, [x0, #8]
    87e8:	ldr	x0, [sp, #16]
    87ec:	ldr	x0, [x0, #32]
    87f0:	mov	x2, x0
    87f4:	ldr	x0, [sp, #48]
    87f8:	bl	6030 <_Z9tree_consP9tree_nodeS0_S0_@plt>
    87fc:	mov	x1, x0
    8800:	ldr	x0, [sp, #16]
    8804:	str	x1, [x0, #32]
    8808:	ldr	x0, [sp, #16]
    880c:	ldr	x0, [x0, #32]
    8810:	ldr	x1, [sp, #120]
    8814:	str	x1, [x0, #8]
    8818:	ldr	x0, [sp, #48]
    881c:	ldr	x1, [sp, #120]
    8820:	str	x1, [x0, #8]
    8824:	ldr	x1, [sp, #24]
    8828:	mov	x0, #0x0                   	// #0
    882c:	bl	6420 <_Z15build_tree_listP9tree_nodeS0_@plt>
    8830:	str	x0, [sp, #40]
    8834:	ldr	x0, [sp, #16]
    8838:	ldr	x1, [x0]
    883c:	ldr	x0, [sp, #40]
    8840:	str	x1, [x0, #16]
    8844:	ldr	x0, [sp, #16]
    8848:	ldr	x1, [sp, #40]
    884c:	str	x1, [x0]
    8850:	nop
    8854:	ldp	x29, x30, [sp], #128
    8858:	ret
    885c:	stp	x29, x30, [sp, #-128]!
    8860:	mov	x29, sp
    8864:	str	x0, [sp, #24]
    8868:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
    886c:	add	x0, x0, #0x738
    8870:	ldr	w0, [x0]
    8874:	add	w2, w0, #0x1
    8878:	adrp	x1, 34000 <xexit@@Base+0x15c5c>
    887c:	add	x1, x1, #0x738
    8880:	str	w2, [x1]
    8884:	cmp	w0, #0x0
    8888:	cset	w0, ne  // ne = any
    888c:	and	w0, w0, #0xff
    8890:	cmp	w0, #0x0
    8894:	b.ne	9054 <_Z19decl_assembler_nameP9tree_node@plt+0x22f4>  // b.any
    8898:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    889c:	ldr	x0, [x0, #3920]
    88a0:	ldr	x0, [x0]
    88a4:	cmp	x0, #0x0
    88a8:	b.eq	88dc <_Z19decl_assembler_nameP9tree_node@plt+0x1b7c>  // b.none
    88ac:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    88b0:	ldr	x0, [x0, #3920]
    88b4:	ldr	x0, [x0]
    88b8:	ldr	x0, [x0, #104]
    88bc:	cmp	x0, #0x0
    88c0:	b.eq	88dc <_Z19decl_assembler_nameP9tree_node@plt+0x1b7c>  // b.none
    88c4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    88c8:	ldr	x0, [x0, #3920]
    88cc:	ldr	x0, [x0]
    88d0:	ldr	x0, [x0, #104]
    88d4:	add	x0, x0, #0x20
    88d8:	b	88ec <_Z19decl_assembler_nameP9tree_node@plt+0x1b8c>
    88dc:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    88e0:	ldr	x0, [x0, #3888]
    88e4:	ldr	x0, [x0]
    88e8:	add	x0, x0, #0x60
    88ec:	ldr	x0, [x0]
    88f0:	cmp	x0, #0x0
    88f4:	b.eq	8910 <_Z19decl_assembler_nameP9tree_node@plt+0x1bb0>  // b.none
    88f8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    88fc:	add	x2, x0, #0x510
    8900:	mov	w1, #0x225                 	// #549
    8904:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8908:	add	x0, x0, #0x4a8
    890c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    8910:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8914:	ldr	x0, [x0, #3920]
    8918:	ldr	x0, [x0]
    891c:	cmp	x0, #0x0
    8920:	b.eq	8954 <_Z19decl_assembler_nameP9tree_node@plt+0x1bf4>  // b.none
    8924:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8928:	ldr	x0, [x0, #3920]
    892c:	ldr	x0, [x0]
    8930:	ldr	x0, [x0, #104]
    8934:	cmp	x0, #0x0
    8938:	b.eq	8954 <_Z19decl_assembler_nameP9tree_node@plt+0x1bf4>  // b.none
    893c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8940:	ldr	x0, [x0, #3920]
    8944:	ldr	x0, [x0]
    8948:	ldr	x0, [x0, #104]
    894c:	add	x0, x0, #0x28
    8950:	b	8964 <_Z19decl_assembler_nameP9tree_node@plt+0x1c04>
    8954:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8958:	ldr	x0, [x0, #3888]
    895c:	ldr	x0, [x0]
    8960:	add	x0, x0, #0x68
    8964:	ldr	x0, [x0]
    8968:	cmp	x0, #0x0
    896c:	b.eq	8988 <_Z19decl_assembler_nameP9tree_node@plt+0x1c28>  // b.none
    8970:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8974:	add	x2, x0, #0x510
    8978:	mov	w1, #0x226                 	// #550
    897c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8980:	add	x0, x0, #0x4a8
    8984:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    8988:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    898c:	ldr	x0, [x0, #4000]
    8990:	ldr	x0, [x0]
    8994:	cmp	x0, #0x0
    8998:	b.eq	89b4 <_Z19decl_assembler_nameP9tree_node@plt+0x1c54>  // b.none
    899c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    89a0:	add	x2, x0, #0x510
    89a4:	mov	w1, #0x228                 	// #552
    89a8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    89ac:	add	x0, x0, #0x4a8
    89b0:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    89b4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    89b8:	ldr	x0, [x0, #4000]
    89bc:	adrp	x1, 7000 <_Z19decl_assembler_nameP9tree_node@plt+0x2a0>
    89c0:	add	x1, x1, #0x97c
    89c4:	str	x1, [x0]
    89c8:	bl	60e0 <_Z19at_function_scope_pv@plt>
    89cc:	cmp	w0, #0x0
    89d0:	cset	w0, ne  // ne = any
    89d4:	and	w0, w0, #0xff
    89d8:	cmp	w0, #0x0
    89dc:	b.eq	89f0 <_Z19decl_assembler_nameP9tree_node@plt+0x1c90>  // b.none
    89e0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    89e4:	ldr	x0, [x0, #3872]
    89e8:	ldr	x0, [x0]
    89ec:	bl	6bb0 <_Z17set_global_friendP9tree_node@plt>
    89f0:	bl	60e0 <_Z19at_function_scope_pv@plt>
    89f4:	cmp	w0, #0x0
    89f8:	b.ne	8a14 <_Z19decl_assembler_nameP9tree_node@plt+0x1cb4>  // b.any
    89fc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8a00:	add	x2, x0, #0x510
    8a04:	mov	w1, #0x230                 	// #560
    8a08:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8a0c:	add	x0, x0, #0x4a8
    8a10:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    8a14:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8a18:	ldr	x0, [x0, #3920]
    8a1c:	ldr	x0, [x0]
    8a20:	str	x0, [sp, #80]
    8a24:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8a28:	ldr	x0, [x0, #3920]
    8a2c:	ldr	x0, [x0]
    8a30:	cmp	x0, #0x0
    8a34:	b.eq	8a84 <_Z19decl_assembler_nameP9tree_node@plt+0x1d24>  // b.none
    8a38:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8a3c:	ldr	x0, [x0, #3920]
    8a40:	ldr	x0, [x0]
    8a44:	ldr	x0, [x0, #104]
    8a48:	cmp	x0, #0x0
    8a4c:	b.eq	8a84 <_Z19decl_assembler_nameP9tree_node@plt+0x1d24>  // b.none
    8a50:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8a54:	ldr	x0, [x0, #3920]
    8a58:	ldr	x0, [x0]
    8a5c:	ldr	x0, [x0, #104]
    8a60:	ldr	x0, [x0, #104]
    8a64:	cmp	x0, #0x0
    8a68:	b.eq	8a84 <_Z19decl_assembler_nameP9tree_node@plt+0x1d24>  // b.none
    8a6c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8a70:	ldr	x0, [x0, #3920]
    8a74:	ldr	x0, [x0]
    8a78:	ldr	x0, [x0, #104]
    8a7c:	add	x0, x0, #0x68
    8a80:	b	8a94 <_Z19decl_assembler_nameP9tree_node@plt+0x1d34>
    8a84:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8a88:	ldr	x0, [x0, #3888]
    8a8c:	ldr	x0, [x0]
    8a90:	add	x0, x0, #0xb0
    8a94:	ldr	x0, [x0]
    8a98:	str	x0, [sp, #72]
    8a9c:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
    8aa0:	add	x0, x0, #0x730
    8aa4:	ldr	x3, [x0]
    8aa8:	add	x0, sp, #0x24
    8aac:	mov	x2, x0
    8ab0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8ab4:	add	x1, x0, #0x538
    8ab8:	mov	x0, x3
    8abc:	bl	131a0 <plugin_init@@Base+0x2160>
    8ac0:	bl	7a24 <_Z19decl_assembler_nameP9tree_node@plt+0xcc4>
    8ac4:	and	w0, w0, #0xff
    8ac8:	eor	w0, w0, #0x1
    8acc:	and	w0, w0, #0xff
    8ad0:	cmp	w0, #0x0
    8ad4:	b.eq	8afc <_Z19decl_assembler_nameP9tree_node@plt+0x1d9c>  // b.none
    8ad8:	bl	60e0 <_Z19at_function_scope_pv@plt>
    8adc:	cmp	w0, #0x0
    8ae0:	b.ne	8afc <_Z19decl_assembler_nameP9tree_node@plt+0x1d9c>  // b.any
    8ae4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8ae8:	add	x2, x0, #0x510
    8aec:	mov	w1, #0x237                 	// #567
    8af0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8af4:	add	x0, x0, #0x4a8
    8af8:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    8afc:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8b00:	ldr	x0, [x0, #3920]
    8b04:	ldr	x0, [x0]
    8b08:	str	x0, [sp, #64]
    8b0c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8b10:	ldr	x0, [x0, #3872]
    8b14:	ldr	x0, [x0]
    8b18:	str	x0, [sp, #56]
    8b1c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8b20:	ldr	x0, [x0, #3888]
    8b24:	ldr	x0, [x0]
    8b28:	ldr	x1, [x0, #32]
    8b2c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8b30:	ldr	x0, [x0, #3872]
    8b34:	ldr	x0, [x0]
    8b38:	ldr	x0, [x0, #40]
    8b3c:	cmp	x1, x0
    8b40:	b.eq	8b94 <_Z19decl_assembler_nameP9tree_node@plt+0x1e34>  // b.none
    8b44:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8b48:	ldr	x0, [x0, #3872]
    8b4c:	ldr	x0, [x0]
    8b50:	ldr	x0, [x0, #40]
    8b54:	ldrh	w0, [x0]
    8b58:	cmp	w0, #0x11
    8b5c:	b.eq	8b7c <_Z19decl_assembler_nameP9tree_node@plt+0x1e1c>  // b.none
    8b60:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8b64:	ldr	x0, [x0, #3872]
    8b68:	ldr	x0, [x0]
    8b6c:	ldr	x0, [x0, #40]
    8b70:	ldrh	w0, [x0]
    8b74:	cmp	w0, #0x12
    8b78:	b.ne	8b94 <_Z19decl_assembler_nameP9tree_node@plt+0x1e34>  // b.any
    8b7c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8b80:	add	x2, x0, #0x510
    8b84:	mov	w1, #0x23c                 	// #572
    8b88:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8b8c:	add	x0, x0, #0x4a8
    8b90:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    8b94:	ldr	x0, [sp, #80]
    8b98:	ldr	x0, [x0, #64]
    8b9c:	mov	w1, #0x0                   	// #0
    8ba0:	bl	7a94 <_Z19decl_assembler_nameP9tree_node@plt+0xd34>
    8ba4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8ba8:	ldr	x0, [x0, #3888]
    8bac:	ldr	x0, [x0]
    8bb0:	str	xzr, [x0, #32]
    8bb4:	ldr	x0, [sp, #64]
    8bb8:	cmp	x0, #0x0
    8bbc:	b.eq	8cb4 <_Z19decl_assembler_nameP9tree_node@plt+0x1f54>  // b.none
    8bc0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8bc4:	ldr	x0, [x0, #3920]
    8bc8:	ldr	x0, [x0]
    8bcc:	ldr	x1, [sp, #80]
    8bd0:	cmp	x1, x0
    8bd4:	b.eq	8bf0 <_Z19decl_assembler_nameP9tree_node@plt+0x1e90>  // b.none
    8bd8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8bdc:	add	x2, x0, #0x510
    8be0:	mov	w1, #0x244                 	// #580
    8be4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8be8:	add	x0, x0, #0x4a8
    8bec:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    8bf0:	bl	60e0 <_Z19at_function_scope_pv@plt>
    8bf4:	cmp	w0, #0x0
    8bf8:	b.ne	8c14 <_Z19decl_assembler_nameP9tree_node@plt+0x1eb4>  // b.any
    8bfc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8c00:	add	x2, x0, #0x510
    8c04:	mov	w1, #0x245                 	// #581
    8c08:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8c0c:	add	x0, x0, #0x4a8
    8c10:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    8c14:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8c18:	ldr	x0, [x0, #3920]
    8c1c:	ldr	x0, [x0]
    8c20:	cmp	x0, #0x0
    8c24:	b.eq	8c74 <_Z19decl_assembler_nameP9tree_node@plt+0x1f14>  // b.none
    8c28:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8c2c:	ldr	x0, [x0, #3920]
    8c30:	ldr	x0, [x0]
    8c34:	ldr	x0, [x0, #104]
    8c38:	cmp	x0, #0x0
    8c3c:	b.eq	8c74 <_Z19decl_assembler_nameP9tree_node@plt+0x1f14>  // b.none
    8c40:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8c44:	ldr	x0, [x0, #3920]
    8c48:	ldr	x0, [x0]
    8c4c:	ldr	x0, [x0, #104]
    8c50:	ldr	x0, [x0, #104]
    8c54:	cmp	x0, #0x0
    8c58:	b.eq	8c74 <_Z19decl_assembler_nameP9tree_node@plt+0x1f14>  // b.none
    8c5c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8c60:	ldr	x0, [x0, #3920]
    8c64:	ldr	x0, [x0]
    8c68:	ldr	x0, [x0, #104]
    8c6c:	add	x0, x0, #0x68
    8c70:	b	8c84 <_Z19decl_assembler_nameP9tree_node@plt+0x1f24>
    8c74:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8c78:	ldr	x0, [x0, #3888]
    8c7c:	ldr	x0, [x0]
    8c80:	add	x0, x0, #0xb0
    8c84:	ldr	x0, [x0]
    8c88:	ldr	x0, [x0, #56]
    8c8c:	ldr	x0, [x0, #56]
    8c90:	ldr	x1, [sp, #72]
    8c94:	cmp	x1, x0
    8c98:	b.eq	8f3c <_Z19decl_assembler_nameP9tree_node@plt+0x21dc>  // b.none
    8c9c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8ca0:	add	x2, x0, #0x510
    8ca4:	mov	w1, #0x246                 	// #582
    8ca8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8cac:	add	x0, x0, #0x4a8
    8cb0:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    8cb4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8cb8:	ldr	x0, [x0, #3920]
    8cbc:	ldr	x1, [sp, #80]
    8cc0:	str	x1, [x0]
    8cc4:	bl	60e0 <_Z19at_function_scope_pv@plt>
    8cc8:	cmp	w0, #0x0
    8ccc:	b.ne	8ce8 <_Z19decl_assembler_nameP9tree_node@plt+0x1f88>  // b.any
    8cd0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8cd4:	add	x2, x0, #0x510
    8cd8:	mov	w1, #0x24c                 	// #588
    8cdc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8ce0:	add	x0, x0, #0x4a8
    8ce4:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    8ce8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8cec:	ldr	x0, [x0, #3920]
    8cf0:	ldr	x0, [x0]
    8cf4:	cmp	x0, #0x0
    8cf8:	b.eq	8d48 <_Z19decl_assembler_nameP9tree_node@plt+0x1fe8>  // b.none
    8cfc:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8d00:	ldr	x0, [x0, #3920]
    8d04:	ldr	x0, [x0]
    8d08:	ldr	x0, [x0, #104]
    8d0c:	cmp	x0, #0x0
    8d10:	b.eq	8d48 <_Z19decl_assembler_nameP9tree_node@plt+0x1fe8>  // b.none
    8d14:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8d18:	ldr	x0, [x0, #3920]
    8d1c:	ldr	x0, [x0]
    8d20:	ldr	x0, [x0, #104]
    8d24:	ldr	x0, [x0, #104]
    8d28:	cmp	x0, #0x0
    8d2c:	b.eq	8d48 <_Z19decl_assembler_nameP9tree_node@plt+0x1fe8>  // b.none
    8d30:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8d34:	ldr	x0, [x0, #3920]
    8d38:	ldr	x0, [x0]
    8d3c:	ldr	x0, [x0, #104]
    8d40:	add	x0, x0, #0x68
    8d44:	b	8d58 <_Z19decl_assembler_nameP9tree_node@plt+0x1ff8>
    8d48:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8d4c:	ldr	x0, [x0, #3888]
    8d50:	ldr	x0, [x0]
    8d54:	add	x0, x0, #0xb0
    8d58:	ldr	x0, [x0]
    8d5c:	ldr	x0, [x0, #56]
    8d60:	str	x0, [sp, #48]
    8d64:	ldr	x0, [sp, #48]
    8d68:	ldr	x1, [x0, #48]
    8d6c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8d70:	ldr	x0, [x0, #3920]
    8d74:	ldr	x0, [x0]
    8d78:	ldr	x0, [x0, #64]
    8d7c:	cmp	x1, x0
    8d80:	b.eq	8d9c <_Z19decl_assembler_nameP9tree_node@plt+0x203c>  // b.none
    8d84:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8d88:	add	x2, x0, #0x510
    8d8c:	mov	w1, #0x24f                 	// #591
    8d90:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8d94:	add	x0, x0, #0x4a8
    8d98:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    8d9c:	ldr	x0, [sp, #72]
    8da0:	str	x0, [sp, #120]
    8da4:	ldr	x0, [sp, #120]
    8da8:	ldr	x0, [x0]
    8dac:	str	x0, [sp, #112]
    8db0:	ldr	x0, [sp, #112]
    8db4:	cmp	x0, #0x0
    8db8:	b.eq	8e34 <_Z19decl_assembler_nameP9tree_node@plt+0x20d4>  // b.none
    8dbc:	ldr	x0, [sp, #112]
    8dc0:	str	x0, [sp, #104]
    8dc4:	ldr	x0, [sp, #104]
    8dc8:	ldrh	w0, [x0]
    8dcc:	cmp	w0, #0x2
    8dd0:	b.ne	8de0 <_Z19decl_assembler_nameP9tree_node@plt+0x2080>  // b.any
    8dd4:	ldr	x0, [sp, #104]
    8dd8:	ldr	x0, [x0, #32]
    8ddc:	str	x0, [sp, #104]
    8de0:	ldr	x0, [sp, #104]
    8de4:	ldr	x0, [x0, #32]
    8de8:	ldrb	w0, [x0, #4]
    8dec:	and	w0, w0, #0x10
    8df0:	and	w0, w0, #0xff
    8df4:	cmp	w0, #0x0
    8df8:	b.ne	8e20 <_Z19decl_assembler_nameP9tree_node@plt+0x20c0>  // b.any
    8dfc:	ldr	x0, [sp, #104]
    8e00:	ldr	x0, [x0, #32]
    8e04:	ldrb	w1, [x0, #4]
    8e08:	orr	w1, w1, #0x10
    8e0c:	strb	w1, [x0, #4]
    8e10:	ldr	x1, [sp, #48]
    8e14:	ldr	x0, [sp, #104]
    8e18:	bl	833c <_Z19decl_assembler_nameP9tree_node@plt+0x15dc>
    8e1c:	b	8e24 <_Z19decl_assembler_nameP9tree_node@plt+0x20c4>
    8e20:	nop
    8e24:	ldr	x0, [sp, #112]
    8e28:	ldr	x0, [x0, #16]
    8e2c:	str	x0, [sp, #112]
    8e30:	b	8db0 <_Z19decl_assembler_nameP9tree_node@plt+0x2050>
    8e34:	ldr	x0, [sp, #120]
    8e38:	ldrb	w0, [x0, #76]
    8e3c:	and	w0, w0, #0xf
    8e40:	and	w0, w0, #0xff
    8e44:	cmp	w0, #0x6
    8e48:	b.ne	8e6c <_Z19decl_assembler_nameP9tree_node@plt+0x210c>  // b.any
    8e4c:	ldr	x0, [sp, #120]
    8e50:	ldr	x1, [x0, #48]
    8e54:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8e58:	ldr	x0, [x0, #3920]
    8e5c:	ldr	x0, [x0]
    8e60:	ldr	x0, [x0, #64]
    8e64:	cmp	x1, x0
    8e68:	b.eq	8ea4 <_Z19decl_assembler_nameP9tree_node@plt+0x2144>  // b.none
    8e6c:	ldr	x0, [sp, #120]
    8e70:	ldr	x0, [x0, #48]
    8e74:	cmp	x0, #0x0
    8e78:	b.eq	8e94 <_Z19decl_assembler_nameP9tree_node@plt+0x2134>  // b.none
    8e7c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8e80:	add	x2, x0, #0x510
    8e84:	mov	w1, #0x263                 	// #611
    8e88:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8e8c:	add	x0, x0, #0x4a8
    8e90:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    8e94:	ldr	x0, [sp, #120]
    8e98:	ldr	x0, [x0, #56]
    8e9c:	str	x0, [sp, #120]
    8ea0:	b	8da4 <_Z19decl_assembler_nameP9tree_node@plt+0x2044>
    8ea4:	nop
    8ea8:	ldr	x0, [sp, #48]
    8eac:	ldr	x0, [x0]
    8eb0:	str	x0, [sp, #96]
    8eb4:	ldr	x0, [sp, #96]
    8eb8:	cmp	x0, #0x0
    8ebc:	b.eq	8f3c <_Z19decl_assembler_nameP9tree_node@plt+0x21dc>  // b.none
    8ec0:	ldr	x0, [sp, #96]
    8ec4:	str	x0, [sp, #88]
    8ec8:	ldr	x0, [sp, #88]
    8ecc:	ldrh	w0, [x0]
    8ed0:	cmp	w0, #0x2
    8ed4:	b.ne	8ee4 <_Z19decl_assembler_nameP9tree_node@plt+0x2184>  // b.any
    8ed8:	ldr	x0, [sp, #88]
    8edc:	ldr	x0, [x0, #32]
    8ee0:	str	x0, [sp, #88]
    8ee4:	ldr	x0, [sp, #88]
    8ee8:	ldr	x0, [x0, #32]
    8eec:	ldrb	w0, [x0, #4]
    8ef0:	and	w0, w0, #0x10
    8ef4:	and	w0, w0, #0xff
    8ef8:	cmp	w0, #0x0
    8efc:	b.ne	8f18 <_Z19decl_assembler_nameP9tree_node@plt+0x21b8>  // b.any
    8f00:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8f04:	add	x2, x0, #0x510
    8f08:	mov	w1, #0x26d                 	// #621
    8f0c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8f10:	add	x0, x0, #0x4a8
    8f14:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    8f18:	ldr	x0, [sp, #88]
    8f1c:	ldr	x0, [x0, #32]
    8f20:	ldrb	w1, [x0, #4]
    8f24:	and	w1, w1, #0xffffffef
    8f28:	strb	w1, [x0, #4]
    8f2c:	ldr	x0, [sp, #96]
    8f30:	ldr	x0, [x0, #16]
    8f34:	str	x0, [sp, #96]
    8f38:	b	8eb4 <_Z19decl_assembler_nameP9tree_node@plt+0x2154>
    8f3c:	ldr	x0, [sp, #64]
    8f40:	cmp	x0, #0x0
    8f44:	b.ne	8f5c <_Z19decl_assembler_nameP9tree_node@plt+0x21fc>  // b.any
    8f48:	ldr	x0, [sp, #56]
    8f4c:	ldr	x0, [x0, #8]
    8f50:	ldrh	w0, [x0]
    8f54:	cmp	w0, #0x16
    8f58:	b.ne	9058 <_Z19decl_assembler_nameP9tree_node@plt+0x22f8>  // b.any
    8f5c:	mov	x1, #0x4                   	// #4
    8f60:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    8f64:	add	x0, x0, #0x548
    8f68:	bl	6250 <_Z26get_identifier_with_lengthPKcm@plt>
    8f6c:	bl	6590 <_Z11lookup_nameP9tree_node@plt>
    8f70:	str	x0, [sp, #40]
    8f74:	ldr	x0, [sp, #40]
    8f78:	cmp	x0, #0x0
    8f7c:	b.eq	8f98 <_Z19decl_assembler_nameP9tree_node@plt+0x2238>  // b.none
    8f80:	mov	w2, #0x3                   	// #3
    8f84:	mov	w1, #0x0                   	// #0
    8f88:	ldr	x0, [sp, #40]
    8f8c:	bl	6550 <_Z21cp_build_indirect_refP9tree_node12ref_operatori@plt>
    8f90:	mov	x1, x0
    8f94:	b	8f9c <_Z19decl_assembler_nameP9tree_node@plt+0x223c>
    8f98:	mov	x1, #0x0                   	// #0
    8f9c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8fa0:	ldr	x0, [x0, #3920]
    8fa4:	ldr	x0, [x0]
    8fa8:	cmp	x0, #0x0
    8fac:	b.eq	8fe0 <_Z19decl_assembler_nameP9tree_node@plt+0x2280>  // b.none
    8fb0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8fb4:	ldr	x0, [x0, #3920]
    8fb8:	ldr	x0, [x0]
    8fbc:	ldr	x0, [x0, #104]
    8fc0:	cmp	x0, #0x0
    8fc4:	b.eq	8fe0 <_Z19decl_assembler_nameP9tree_node@plt+0x2280>  // b.none
    8fc8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8fcc:	ldr	x0, [x0, #3920]
    8fd0:	ldr	x0, [x0]
    8fd4:	ldr	x0, [x0, #104]
    8fd8:	add	x0, x0, #0x28
    8fdc:	b	8ff0 <_Z19decl_assembler_nameP9tree_node@plt+0x2290>
    8fe0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8fe4:	ldr	x0, [x0, #3888]
    8fe8:	ldr	x0, [x0]
    8fec:	add	x0, x0, #0x68
    8ff0:	str	x1, [x0]
    8ff4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    8ff8:	ldr	x0, [x0, #3920]
    8ffc:	ldr	x0, [x0]
    9000:	cmp	x0, #0x0
    9004:	b.eq	9038 <_Z19decl_assembler_nameP9tree_node@plt+0x22d8>  // b.none
    9008:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    900c:	ldr	x0, [x0, #3920]
    9010:	ldr	x0, [x0]
    9014:	ldr	x0, [x0, #104]
    9018:	cmp	x0, #0x0
    901c:	b.eq	9038 <_Z19decl_assembler_nameP9tree_node@plt+0x22d8>  // b.none
    9020:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9024:	ldr	x0, [x0, #3920]
    9028:	ldr	x0, [x0]
    902c:	ldr	x0, [x0, #104]
    9030:	add	x0, x0, #0x20
    9034:	b	9048 <_Z19decl_assembler_nameP9tree_node@plt+0x22e8>
    9038:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    903c:	ldr	x0, [x0, #3888]
    9040:	ldr	x0, [x0]
    9044:	add	x0, x0, #0x60
    9048:	ldr	x1, [sp, #40]
    904c:	str	x1, [x0]
    9050:	b	9058 <_Z19decl_assembler_nameP9tree_node@plt+0x22f8>
    9054:	nop
    9058:	ldp	x29, x30, [sp], #128
    905c:	ret
    9060:	stp	x29, x30, [sp, #-48]!
    9064:	mov	x29, sp
    9068:	str	x0, [sp, #24]
    906c:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
    9070:	add	x0, x0, #0x738
    9074:	ldr	w0, [x0]
    9078:	sub	w1, w0, #0x1
    907c:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
    9080:	add	x0, x0, #0x738
    9084:	str	w1, [x0]
    9088:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
    908c:	add	x0, x0, #0x738
    9090:	ldr	w0, [x0]
    9094:	cmp	w0, #0x0
    9098:	cset	w0, ne  // ne = any
    909c:	and	w0, w0, #0xff
    90a0:	cmp	w0, #0x0
    90a4:	b.ne	92cc <_Z19decl_assembler_nameP9tree_node@plt+0x256c>  // b.any
    90a8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    90ac:	ldr	x0, [x0, #4000]
    90b0:	ldr	x0, [x0]
    90b4:	cmp	x0, #0x0
    90b8:	b.ne	90d4 <_Z19decl_assembler_nameP9tree_node@plt+0x2374>  // b.any
    90bc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    90c0:	add	x2, x0, #0x550
    90c4:	mov	w1, #0x284                 	// #644
    90c8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    90cc:	add	x0, x0, #0x4a8
    90d0:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    90d4:	bl	60e0 <_Z19at_function_scope_pv@plt>
    90d8:	cmp	w0, #0x0
    90dc:	b.ne	90f8 <_Z19decl_assembler_nameP9tree_node@plt+0x2398>  // b.any
    90e0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    90e4:	add	x2, x0, #0x550
    90e8:	mov	w1, #0x286                 	// #646
    90ec:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    90f0:	add	x0, x0, #0x4a8
    90f4:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    90f8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    90fc:	ldr	x0, [x0, #3920]
    9100:	ldr	x0, [x0]
    9104:	str	x0, [sp, #40]
    9108:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    910c:	ldr	x0, [x0, #3920]
    9110:	ldr	x0, [x0]
    9114:	cmp	x0, #0x0
    9118:	b.eq	914c <_Z19decl_assembler_nameP9tree_node@plt+0x23ec>  // b.none
    911c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9120:	ldr	x0, [x0, #3920]
    9124:	ldr	x0, [x0]
    9128:	ldr	x0, [x0, #104]
    912c:	cmp	x0, #0x0
    9130:	b.eq	914c <_Z19decl_assembler_nameP9tree_node@plt+0x23ec>  // b.none
    9134:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9138:	ldr	x0, [x0, #3920]
    913c:	ldr	x0, [x0]
    9140:	ldr	x0, [x0, #104]
    9144:	add	x0, x0, #0x20
    9148:	b	915c <_Z19decl_assembler_nameP9tree_node@plt+0x23fc>
    914c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9150:	ldr	x0, [x0, #3888]
    9154:	ldr	x0, [x0]
    9158:	add	x0, x0, #0x60
    915c:	str	xzr, [x0]
    9160:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9164:	ldr	x0, [x0, #3920]
    9168:	ldr	x0, [x0]
    916c:	cmp	x0, #0x0
    9170:	b.eq	91a4 <_Z19decl_assembler_nameP9tree_node@plt+0x2444>  // b.none
    9174:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9178:	ldr	x0, [x0, #3920]
    917c:	ldr	x0, [x0]
    9180:	ldr	x0, [x0, #104]
    9184:	cmp	x0, #0x0
    9188:	b.eq	91a4 <_Z19decl_assembler_nameP9tree_node@plt+0x2444>  // b.none
    918c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9190:	ldr	x0, [x0, #3920]
    9194:	ldr	x0, [x0]
    9198:	ldr	x0, [x0, #104]
    919c:	add	x0, x0, #0x28
    91a0:	b	91b4 <_Z19decl_assembler_nameP9tree_node@plt+0x2454>
    91a4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    91a8:	ldr	x0, [x0, #3888]
    91ac:	ldr	x0, [x0]
    91b0:	add	x0, x0, #0x68
    91b4:	str	xzr, [x0]
    91b8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    91bc:	ldr	x0, [x0, #3920]
    91c0:	str	xzr, [x0]
    91c4:	bl	7af4 <_Z19decl_assembler_nameP9tree_node@plt+0xd94>
    91c8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    91cc:	ldr	x0, [x0, #3872]
    91d0:	ldr	x0, [x0]
    91d4:	ldr	x0, [x0, #40]
    91d8:	ldrh	w0, [x0]
    91dc:	cmp	w0, #0x11
    91e0:	b.eq	9200 <_Z19decl_assembler_nameP9tree_node@plt+0x24a0>  // b.none
    91e4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    91e8:	ldr	x0, [x0, #3872]
    91ec:	ldr	x0, [x0]
    91f0:	ldr	x0, [x0, #40]
    91f4:	ldrh	w0, [x0]
    91f8:	cmp	w0, #0x12
    91fc:	b.ne	9220 <_Z19decl_assembler_nameP9tree_node@plt+0x24c0>  // b.any
    9200:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9204:	ldr	x0, [x0, #3872]
    9208:	ldr	x1, [x0]
    920c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9210:	ldr	x0, [x0, #3888]
    9214:	ldr	x0, [x0]
    9218:	ldr	x1, [x1, #40]
    921c:	str	x1, [x0, #32]
    9220:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
    9224:	add	x0, x0, #0x730
    9228:	ldr	x3, [x0]
    922c:	add	x0, sp, #0x24
    9230:	mov	x2, x0
    9234:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9238:	add	x1, x0, #0x578
    923c:	mov	x0, x3
    9240:	bl	131a0 <plugin_init@@Base+0x2160>
    9244:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9248:	ldr	x0, [x0, #3920]
    924c:	ldr	x0, [x0]
    9250:	cmp	x0, #0x0
    9254:	b.ne	926c <_Z19decl_assembler_nameP9tree_node@plt+0x250c>  // b.any
    9258:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    925c:	ldr	x0, [x0, #3920]
    9260:	ldr	x1, [sp, #40]
    9264:	str	x1, [x0]
    9268:	b	929c <_Z19decl_assembler_nameP9tree_node@plt+0x253c>
    926c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9270:	ldr	x0, [x0, #3920]
    9274:	ldr	x0, [x0]
    9278:	ldr	x1, [sp, #40]
    927c:	cmp	x1, x0
    9280:	b.eq	929c <_Z19decl_assembler_nameP9tree_node@plt+0x253c>  // b.none
    9284:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9288:	add	x2, x0, #0x550
    928c:	mov	w1, #0x296                 	// #662
    9290:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9294:	add	x0, x0, #0x4a8
    9298:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    929c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    92a0:	ldr	x0, [x0, #4000]
    92a4:	str	xzr, [x0]
    92a8:	bl	60e0 <_Z19at_function_scope_pv@plt>
    92ac:	cmp	w0, #0x0
    92b0:	b.ne	92d0 <_Z19decl_assembler_nameP9tree_node@plt+0x2570>  // b.any
    92b4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    92b8:	add	x2, x0, #0x550
    92bc:	mov	w1, #0x299                 	// #665
    92c0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    92c4:	add	x0, x0, #0x4a8
    92c8:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    92cc:	nop
    92d0:	ldp	x29, x30, [sp], #48
    92d4:	ret
    92d8:	stp	x29, x30, [sp, #-32]!
    92dc:	mov	x29, sp
    92e0:	str	x0, [sp, #24]
    92e4:	str	x1, [sp, #16]
    92e8:	adrp	x0, 8000 <_Z19decl_assembler_nameP9tree_node@plt+0x12a0>
    92ec:	add	x2, x0, #0x85c
    92f0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    92f4:	add	x1, x0, #0x588
    92f8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    92fc:	add	x0, x0, #0x5a0
    9300:	bl	6130 <_Z17c_register_pragmaPKcS0_PFvP10cpp_readerE@plt>
    9304:	adrp	x0, 9000 <_Z19decl_assembler_nameP9tree_node@plt+0x22a0>
    9308:	add	x2, x0, #0x60
    930c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9310:	add	x1, x0, #0x5a8
    9314:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9318:	add	x0, x0, #0x5a0
    931c:	bl	6130 <_Z17c_register_pragmaPKcS0_PFvP10cpp_readerE@plt>
    9320:	adrp	x0, 8000 <_Z19decl_assembler_nameP9tree_node@plt+0x12a0>
    9324:	add	x2, x0, #0x85c
    9328:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    932c:	add	x1, x0, #0x5c0
    9330:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9334:	add	x0, x0, #0x5a0
    9338:	bl	6130 <_Z17c_register_pragmaPKcS0_PFvP10cpp_readerE@plt>
    933c:	nop
    9340:	ldp	x29, x30, [sp], #32
    9344:	ret
    9348:	stp	x29, x30, [sp, #-80]!
    934c:	mov	x29, sp
    9350:	str	x19, [sp, #16]
    9354:	str	x0, [sp, #40]
    9358:	str	x1, [sp, #32]
    935c:	ldr	x0, [sp, #40]
    9360:	str	x0, [sp, #48]
    9364:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9368:	ldr	x0, [x0, #3976]
    936c:	ldr	x19, [x0, #488]
    9370:	add	x1, sp, #0x20
    9374:	add	x0, sp, #0x40
    9378:	bl	13284 <plugin_init@@Base+0x2244>
    937c:	ldp	x1, x2, [sp, #64]
    9380:	mov	x0, x19
    9384:	bl	68d0 <_Z18build_int_cst_typeP9tree_node8poly_intILj2ElE@plt>
    9388:	str	x0, [sp, #56]
    938c:	ldp	x0, x1, [sp, #48]
    9390:	ldr	x19, [sp, #16]
    9394:	ldp	x29, x30, [sp], #80
    9398:	ret
    939c:	stp	x29, x30, [sp, #-64]!
    93a0:	mov	x29, sp
    93a4:	str	x0, [sp, #40]
    93a8:	stp	x1, x2, [sp, #24]
    93ac:	ldr	x0, [sp, #40]
    93b0:	add	x3, x0, #0x18
    93b4:	add	x0, sp, #0x18
    93b8:	str	x0, [sp, #48]
    93bc:	add	x0, sp, #0x30
    93c0:	mov	w2, #0x1                   	// #1
    93c4:	mov	x1, x0
    93c8:	mov	x0, x3
    93cc:	bl	132f0 <plugin_init@@Base+0x22b0>
    93d0:	str	x0, [sp, #56]
    93d4:	ldr	x0, [sp, #56]
    93d8:	ldr	x0, [x0]
    93dc:	cmp	x0, #0x0
    93e0:	b.eq	93fc <_Z19decl_assembler_nameP9tree_node@plt+0x269c>  // b.none
    93e4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    93e8:	add	x2, x0, #0x5d0
    93ec:	mov	w1, #0x2b5                 	// #693
    93f0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    93f4:	add	x0, x0, #0x4a8
    93f8:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    93fc:	mov	x0, #0x10                  	// #16
    9400:	bl	6910 <xmalloc@plt>
    9404:	mov	x1, x0
    9408:	ldr	x0, [sp, #56]
    940c:	str	x1, [x0]
    9410:	ldr	x0, [sp, #56]
    9414:	ldr	x2, [x0]
    9418:	ldp	x0, x1, [sp, #24]
    941c:	stp	x0, x1, [x2]
    9420:	ldr	x0, [sp, #24]
    9424:	ldrb	w1, [x0, #2]
    9428:	orr	w1, w1, #0x40
    942c:	strb	w1, [x0, #2]
    9430:	ldr	x0, [sp, #56]
    9434:	ldr	x0, [x0]
    9438:	ldp	x29, x30, [sp], #64
    943c:	ret
    9440:	stp	x29, x30, [sp, #-128]!
    9444:	mov	x29, sp
    9448:	str	x19, [sp, #16]
    944c:	str	x0, [sp, #56]
    9450:	str	x1, [sp, #48]
    9454:	str	x2, [sp, #40]
    9458:	ldr	x0, [sp, #40]
    945c:	str	x0, [sp, #112]
    9460:	ldr	x0, [sp, #56]
    9464:	ldr	x0, [x0]
    9468:	ldrh	w0, [x0]
    946c:	mov	w1, w0
    9470:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9474:	ldr	x0, [x0, #3952]
    9478:	sxtw	x1, w1
    947c:	ldr	w0, [x0, x1, lsl #2]
    9480:	cmp	w0, #0x3
    9484:	b.ne	94b0 <_Z19decl_assembler_nameP9tree_node@plt+0x2750>  // b.any
    9488:	ldr	x0, [sp, #56]
    948c:	ldr	x0, [x0]
    9490:	ldrh	w0, [x0]
    9494:	cmp	w0, #0x2a
    9498:	b.eq	94b0 <_Z19decl_assembler_nameP9tree_node@plt+0x2750>  // b.none
    949c:	ldr	x0, [sp, #56]
    94a0:	ldr	x0, [x0]
    94a4:	ldr	x0, [x0, #32]
    94a8:	cmp	x0, #0x0
    94ac:	b.ne	94b8 <_Z19decl_assembler_nameP9tree_node@plt+0x2758>  // b.any
    94b0:	mov	x0, #0x0                   	// #0
    94b4:	b	9634 <_Z19decl_assembler_nameP9tree_node@plt+0x28d4>
    94b8:	ldr	x0, [sp, #56]
    94bc:	ldr	x0, [x0]
    94c0:	str	x0, [sp, #80]
    94c4:	ldr	x0, [sp, #112]
    94c8:	add	x2, x0, #0x18
    94cc:	add	x0, sp, #0x50
    94d0:	str	x0, [sp, #96]
    94d4:	add	x0, sp, #0x60
    94d8:	mov	x1, x0
    94dc:	mov	x0, x2
    94e0:	bl	1332c <plugin_init@@Base+0x22ec>
    94e4:	ldr	x0, [x0]
    94e8:	str	x0, [sp, #120]
    94ec:	ldr	x0, [sp, #120]
    94f0:	cmp	x0, #0x0
    94f4:	b.ne	95b0 <_Z19decl_assembler_nameP9tree_node@plt+0x2850>  // b.any
    94f8:	ldr	x0, [sp, #56]
    94fc:	ldr	x0, [x0]
    9500:	ldrh	w0, [x0]
    9504:	mov	w2, w0
    9508:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    950c:	ldr	x1, [x0, #3824]
    9510:	sxtw	x0, w2
    9514:	lsl	x0, x0, #6
    9518:	add	x0, x1, x0
    951c:	ldrb	w0, [x0, #15]
    9520:	cmp	w0, #0x0
    9524:	b.eq	95a8 <_Z19decl_assembler_nameP9tree_node@plt+0x2848>  // b.none
    9528:	ldr	x0, [sp, #56]
    952c:	ldr	x0, [x0]
    9530:	bl	6d60 <_Z19decl_assembler_nameP9tree_node@plt>
    9534:	ldr	x1, [x0, #24]
    9538:	add	x0, sp, #0x48
    953c:	mov	x3, x1
    9540:	mov	x2, x0
    9544:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9548:	add	x1, x0, #0x5e8
    954c:	ldr	x0, [sp, #112]
    9550:	bl	13360 <plugin_init@@Base+0x2320>
    9554:	cmp	w0, #0x0
    9558:	cset	w0, eq  // eq = none
    955c:	and	w0, w0, #0xff
    9560:	cmp	w0, #0x0
    9564:	b.eq	9570 <_Z19decl_assembler_nameP9tree_node@plt+0x2810>  // b.none
    9568:	mov	x0, #0x0                   	// #0
    956c:	b	9634 <_Z19decl_assembler_nameP9tree_node@plt+0x28d4>
    9570:	ldr	x0, [sp, #72]
    9574:	cmp	x0, #0x0
    9578:	b.ne	9584 <_Z19decl_assembler_nameP9tree_node@plt+0x2824>  // b.any
    957c:	mov	x0, #0x0                   	// #0
    9580:	b	9634 <_Z19decl_assembler_nameP9tree_node@plt+0x28d4>
    9584:	ldr	x0, [sp, #80]
    9588:	ldr	x1, [sp, #72]
    958c:	bl	9348 <_Z19decl_assembler_nameP9tree_node@plt+0x25e8>
    9590:	stp	x0, x1, [sp, #80]
    9594:	ldp	x1, x2, [sp, #80]
    9598:	ldr	x0, [sp, #112]
    959c:	bl	939c <_Z19decl_assembler_nameP9tree_node@plt+0x263c>
    95a0:	str	x0, [sp, #120]
    95a4:	b	95b0 <_Z19decl_assembler_nameP9tree_node@plt+0x2850>
    95a8:	mov	x0, #0x0                   	// #0
    95ac:	b	9634 <_Z19decl_assembler_nameP9tree_node@plt+0x28d4>
    95b0:	ldr	x0, [sp, #120]
    95b4:	ldr	x1, [x0, #8]
    95b8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    95bc:	ldr	x0, [x0, #3976]
    95c0:	ldr	x0, [x0]
    95c4:	cmp	x1, x0
    95c8:	b.eq	9628 <_Z19decl_assembler_nameP9tree_node@plt+0x28c8>  // b.none
    95cc:	ldr	x0, [sp, #56]
    95d0:	ldr	x0, [x0]
    95d4:	ldr	x0, [x0, #8]
    95d8:	bl	64f0 <_Z18build_pointer_typeP9tree_node@plt>
    95dc:	str	x0, [sp, #104]
    95e0:	ldr	x0, [sp, #56]
    95e4:	ldr	x0, [x0]
    95e8:	ldr	x19, [x0, #8]
    95ec:	ldr	x0, [sp, #120]
    95f0:	ldr	x0, [x0, #8]
    95f4:	mov	x3, x0
    95f8:	ldr	x2, [sp, #104]
    95fc:	mov	w1, #0x7b                  	// #123
    9600:	mov	w0, #0x0                   	// #0
    9604:	bl	6c90 <_Z15fold_build1_locj9tree_codeP9tree_nodeS1_@plt>
    9608:	mov	x3, x0
    960c:	mov	x2, x19
    9610:	mov	w1, #0x35                  	// #53
    9614:	mov	w0, #0x0                   	// #0
    9618:	bl	6c90 <_Z15fold_build1_locj9tree_codeP9tree_nodeS1_@plt>
    961c:	mov	x1, x0
    9620:	ldr	x0, [sp, #56]
    9624:	str	x1, [x0]
    9628:	ldr	x0, [sp, #48]
    962c:	str	wzr, [x0]
    9630:	mov	x0, #0x0                   	// #0
    9634:	ldr	x19, [sp, #16]
    9638:	ldp	x29, x30, [sp], #128
    963c:	ret
    9640:	stp	x29, x30, [sp, #-48]!
    9644:	mov	x29, sp
    9648:	str	x0, [sp, #24]
    964c:	str	x1, [sp, #16]
    9650:	ldr	x0, [sp, #24]
    9654:	str	x0, [sp, #40]
    9658:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
    965c:	add	x0, x0, #0x730
    9660:	ldr	x0, [x0]
    9664:	cmp	x0, #0x0
    9668:	b.eq	96a0 <_Z19decl_assembler_nameP9tree_node@plt+0x2940>  // b.none
    966c:	ldr	x0, [sp, #40]
    9670:	add	x5, x0, #0xc0
    9674:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
    9678:	add	x0, x0, #0x730
    967c:	ldr	x0, [x0]
    9680:	mov	x4, #0x0                   	// #0
    9684:	mov	x3, #0x0                   	// #0
    9688:	mov	x2, x0
    968c:	adrp	x0, 9000 <_Z19decl_assembler_nameP9tree_node@plt+0x22a0>
    9690:	add	x1, x0, #0x440
    9694:	mov	x0, x5
    9698:	bl	6310 <_Z11walk_tree_1PP9tree_nodePFS0_S1_PiPvES3_P8hash_setIS0_Lb0E19default_hash_traitsIS0_EEPFS0_S1_S2_S5_S3_SA_E@plt>
    969c:	b	96a4 <_Z19decl_assembler_nameP9tree_node@plt+0x2944>
    96a0:	nop
    96a4:	ldp	x29, x30, [sp], #48
    96a8:	ret
    96ac:	stp	x29, x30, [sp, #-48]!
    96b0:	mov	x29, sp
    96b4:	str	x0, [sp, #24]
    96b8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    96bc:	ldr	x0, [x0, #4000]
    96c0:	ldr	x0, [x0]
    96c4:	str	x0, [sp, #40]
    96c8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    96cc:	ldr	x0, [x0, #4000]
    96d0:	str	xzr, [x0]
    96d4:	ldr	x0, [sp, #24]
    96d8:	bl	60c0 <_Z18push_template_declP9tree_node@plt>
    96dc:	str	x0, [sp, #32]
    96e0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    96e4:	ldr	x0, [x0, #4000]
    96e8:	ldr	x1, [sp, #40]
    96ec:	str	x1, [x0]
    96f0:	ldr	x0, [sp, #32]
    96f4:	ldp	x29, x30, [sp], #48
    96f8:	ret
    96fc:	stp	x29, x30, [sp, #-64]!
    9700:	mov	x29, sp
    9704:	str	x0, [sp, #40]
    9708:	str	x1, [sp, #32]
    970c:	str	w2, [sp, #28]
    9710:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9714:	ldr	x0, [x0, #4000]
    9718:	ldr	x0, [x0]
    971c:	str	x0, [sp, #56]
    9720:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9724:	ldr	x0, [x0, #4000]
    9728:	str	xzr, [x0]
    972c:	ldr	w2, [sp, #28]
    9730:	ldr	x1, [sp, #32]
    9734:	ldr	x0, [sp, #40]
    9738:	bl	6be0 <_Z7pushtagP9tree_nodeS0_9tag_scope@plt>
    973c:	str	x0, [sp, #48]
    9740:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9744:	ldr	x0, [x0, #4000]
    9748:	ldr	x1, [sp, #56]
    974c:	str	x1, [x0]
    9750:	ldr	x0, [sp, #48]
    9754:	ldp	x29, x30, [sp], #64
    9758:	ret
    975c:	stp	x29, x30, [sp, #-48]!
    9760:	mov	x29, sp
    9764:	str	x0, [sp, #24]
    9768:	strb	w1, [sp, #23]
    976c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9770:	ldr	x0, [x0, #4000]
    9774:	ldr	x0, [x0]
    9778:	str	x0, [sp, #40]
    977c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9780:	ldr	x0, [x0, #4000]
    9784:	str	xzr, [x0]
    9788:	ldrb	w1, [sp, #23]
    978c:	ldr	x0, [sp, #24]
    9790:	bl	66d0 <_Z8pushdeclP9tree_nodeb@plt>
    9794:	str	x0, [sp, #32]
    9798:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    979c:	ldr	x0, [x0, #4000]
    97a0:	ldr	x1, [sp, #40]
    97a4:	str	x1, [x0]
    97a8:	ldr	x0, [sp, #32]
    97ac:	ldp	x29, x30, [sp], #48
    97b0:	ret
    97b4:	stp	x29, x30, [sp, #-32]!
    97b8:	mov	x29, sp
    97bc:	str	x0, [sp, #24]
    97c0:	str	x1, [sp, #16]
    97c4:	ldr	x0, [sp, #16]
    97c8:	cmp	x0, #0x0
    97cc:	b.eq	97e8 <_Z19decl_assembler_nameP9tree_node@plt+0x2a88>  // b.none
    97d0:	ldr	x0, [sp, #16]
    97d4:	ldrb	w0, [x0]
    97d8:	cmp	w0, #0x0
    97dc:	b.ne	97e8 <_Z19decl_assembler_nameP9tree_node@plt+0x2a88>  // b.any
    97e0:	bl	6170 <_Z17push_to_top_levelv@plt>
    97e4:	b	980c <_Z19decl_assembler_nameP9tree_node@plt+0x2aac>
    97e8:	ldr	x0, [sp, #16]
    97ec:	cmp	x0, #0x0
    97f0:	b.eq	9800 <_Z19decl_assembler_nameP9tree_node@plt+0x2aa0>  // b.none
    97f4:	ldr	x0, [sp, #16]
    97f8:	bl	6960 <_Z14get_identifierPKc@plt>
    97fc:	b	9804 <_Z19decl_assembler_nameP9tree_node@plt+0x2aa4>
    9800:	mov	x0, #0x0                   	// #0
    9804:	mov	w1, #0x0                   	// #0
    9808:	bl	67f0 <_Z14push_namespaceP9tree_nodeb@plt>
    980c:	mov	w0, #0x1                   	// #1
    9810:	ldp	x29, x30, [sp], #32
    9814:	ret
    9818:	stp	x29, x30, [sp, #-64]!
    981c:	mov	x29, sp
    9820:	str	x19, [sp, #16]
    9824:	str	x0, [sp, #40]
    9828:	str	x1, [sp, #32]
    982c:	ldr	x0, [sp, #32]
    9830:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    9834:	str	x0, [sp, #56]
    9838:	ldr	x0, [sp, #56]
    983c:	ldrh	w0, [x0]
    9840:	cmp	w0, #0x11
    9844:	b.eq	9870 <_Z19decl_assembler_nameP9tree_node@plt+0x2b10>  // b.none
    9848:	ldr	x0, [sp, #56]
    984c:	ldrh	w0, [x0]
    9850:	cmp	w0, #0x12
    9854:	b.eq	9870 <_Z19decl_assembler_nameP9tree_node@plt+0x2b10>  // b.none
    9858:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    985c:	add	x2, x0, #0x5f8
    9860:	mov	w1, #0x343                 	// #835
    9864:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9868:	add	x0, x0, #0x4a8
    986c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    9870:	ldr	x0, [sp, #56]
    9874:	ldr	x19, [x0, #112]
    9878:	bl	6390 <_Z13current_scopev@plt>
    987c:	mov	x1, x0
    9880:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9884:	ldr	x0, [x0, #3880]
    9888:	ldr	x0, [x0, #104]
    988c:	cmp	x1, x0
    9890:	b.ne	98a0 <_Z19decl_assembler_nameP9tree_node@plt+0x2b40>  // b.any
    9894:	bl	6390 <_Z13current_scopev@plt>
    9898:	ldr	x0, [x0, #40]
    989c:	b	98a4 <_Z19decl_assembler_nameP9tree_node@plt+0x2b44>
    98a0:	bl	6390 <_Z13current_scopev@plt>
    98a4:	cmp	x0, x19
    98a8:	b.eq	98c4 <_Z19decl_assembler_nameP9tree_node@plt+0x2b64>  // b.none
    98ac:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    98b0:	add	x2, x0, #0x5f8
    98b4:	mov	w1, #0x344                 	// #836
    98b8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    98bc:	add	x0, x0, #0x4a8
    98c0:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    98c4:	ldr	x0, [sp, #56]
    98c8:	bl	6a10 <_Z9pushclassP9tree_node@plt>
    98cc:	mov	w0, #0x1                   	// #1
    98d0:	ldr	x19, [sp, #16]
    98d4:	ldp	x29, x30, [sp], #64
    98d8:	ret
    98dc:	stp	x29, x30, [sp, #-64]!
    98e0:	mov	x29, sp
    98e4:	str	x19, [sp, #16]
    98e8:	str	x0, [sp, #40]
    98ec:	str	x1, [sp, #32]
    98f0:	ldr	x0, [sp, #32]
    98f4:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    98f8:	str	x0, [sp, #56]
    98fc:	ldr	x0, [sp, #56]
    9900:	ldrh	w0, [x0]
    9904:	cmp	w0, #0x20
    9908:	b.eq	9924 <_Z19decl_assembler_nameP9tree_node@plt+0x2bc4>  // b.none
    990c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9910:	add	x2, x0, #0x610
    9914:	mov	w1, #0x350                 	// #848
    9918:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    991c:	add	x0, x0, #0x4a8
    9920:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    9924:	ldr	x0, [sp, #56]
    9928:	ldr	x19, [x0, #40]
    992c:	bl	6390 <_Z13current_scopev@plt>
    9930:	mov	x1, x0
    9934:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9938:	ldr	x0, [x0, #3880]
    993c:	ldr	x0, [x0, #104]
    9940:	cmp	x1, x0
    9944:	b.ne	9954 <_Z19decl_assembler_nameP9tree_node@plt+0x2bf4>  // b.any
    9948:	bl	6390 <_Z13current_scopev@plt>
    994c:	ldr	x0, [x0, #40]
    9950:	b	9958 <_Z19decl_assembler_nameP9tree_node@plt+0x2bf8>
    9954:	bl	6390 <_Z13current_scopev@plt>
    9958:	cmp	x0, x19
    995c:	b.eq	9978 <_Z19decl_assembler_nameP9tree_node@plt+0x2c18>  // b.none
    9960:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9964:	add	x2, x0, #0x610
    9968:	mov	w1, #0x351                 	// #849
    996c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9970:	add	x0, x0, #0x4a8
    9974:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    9978:	mov	w1, #0x6                   	// #6
    997c:	ldr	x0, [sp, #56]
    9980:	bl	7a94 <_Z19decl_assembler_nameP9tree_node@plt+0xd34>
    9984:	mov	w0, #0x1                   	// #1
    9988:	ldr	x19, [sp, #16]
    998c:	ldp	x29, x30, [sp], #64
    9990:	ret
    9994:	stp	x29, x30, [sp, #-32]!
    9998:	mov	x29, sp
    999c:	str	x0, [sp, #24]
    99a0:	bl	7af4 <_Z19decl_assembler_nameP9tree_node@plt+0xd94>
    99a4:	mov	w0, #0x1                   	// #1
    99a8:	ldp	x29, x30, [sp], #32
    99ac:	ret
    99b0:	stp	x29, x30, [sp, #-80]!
    99b4:	mov	x29, sp
    99b8:	str	x0, [sp, #40]
    99bc:	str	x1, [sp, #32]
    99c0:	str	x2, [sp, #24]
    99c4:	ldr	x0, [sp, #32]
    99c8:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    99cc:	str	x0, [sp, #64]
    99d0:	ldr	x0, [sp, #24]
    99d4:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    99d8:	str	x0, [sp, #56]
    99dc:	ldr	x0, [sp, #64]
    99e0:	ldrh	w0, [x0]
    99e4:	cmp	w0, #0x23
    99e8:	b.eq	9a24 <_Z19decl_assembler_nameP9tree_node@plt+0x2cc4>  // b.none
    99ec:	ldr	x0, [sp, #64]
    99f0:	ldrh	w0, [x0]
    99f4:	cmp	w0, #0x20
    99f8:	b.eq	9a24 <_Z19decl_assembler_nameP9tree_node@plt+0x2cc4>  // b.none
    99fc:	ldr	x0, [sp, #64]
    9a00:	ldrh	w0, [x0]
    9a04:	cmp	w0, #0x26
    9a08:	b.eq	9a24 <_Z19decl_assembler_nameP9tree_node@plt+0x2cc4>  // b.none
    9a0c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9a10:	add	x2, x0, #0x628
    9a14:	mov	w1, #0x366                 	// #870
    9a18:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9a1c:	add	x0, x0, #0x4a8
    9a20:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    9a24:	ldr	x0, [sp, #56]
    9a28:	cmp	x0, #0x0
    9a2c:	b.eq	9b28 <_Z19decl_assembler_nameP9tree_node@plt+0x2dc8>  // b.none
    9a30:	ldr	x0, [sp, #56]
    9a34:	ldrh	w0, [x0]
    9a38:	cmp	w0, #0x20
    9a3c:	b.eq	9a58 <_Z19decl_assembler_nameP9tree_node@plt+0x2cf8>  // b.none
    9a40:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9a44:	add	x2, x0, #0x628
    9a48:	mov	w1, #0x36c                 	// #876
    9a4c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9a50:	add	x0, x0, #0x4a8
    9a54:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    9a58:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9a5c:	ldr	x0, [x0, #3920]
    9a60:	ldr	x0, [x0]
    9a64:	cmp	x0, #0x0
    9a68:	b.eq	9ab8 <_Z19decl_assembler_nameP9tree_node@plt+0x2d58>  // b.none
    9a6c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9a70:	ldr	x0, [x0, #3920]
    9a74:	ldr	x0, [x0]
    9a78:	ldr	x0, [x0, #104]
    9a7c:	cmp	x0, #0x0
    9a80:	b.eq	9ab8 <_Z19decl_assembler_nameP9tree_node@plt+0x2d58>  // b.none
    9a84:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9a88:	ldr	x0, [x0, #3920]
    9a8c:	ldr	x0, [x0]
    9a90:	ldr	x0, [x0, #104]
    9a94:	ldr	x0, [x0, #104]
    9a98:	cmp	x0, #0x0
    9a9c:	b.eq	9ab8 <_Z19decl_assembler_nameP9tree_node@plt+0x2d58>  // b.none
    9aa0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9aa4:	ldr	x0, [x0, #3920]
    9aa8:	ldr	x0, [x0]
    9aac:	ldr	x0, [x0, #104]
    9ab0:	add	x0, x0, #0x68
    9ab4:	b	9ac8 <_Z19decl_assembler_nameP9tree_node@plt+0x2d68>
    9ab8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9abc:	ldr	x0, [x0, #3888]
    9ac0:	ldr	x0, [x0]
    9ac4:	add	x0, x0, #0xb0
    9ac8:	ldr	x0, [x0]
    9acc:	str	x0, [sp, #72]
    9ad0:	ldr	x0, [sp, #72]
    9ad4:	ldr	x0, [x0, #48]
    9ad8:	ldr	x1, [sp, #56]
    9adc:	cmp	x1, x0
    9ae0:	b.eq	9bc8 <_Z19decl_assembler_nameP9tree_node@plt+0x2e68>  // b.none
    9ae4:	ldr	x0, [sp, #72]
    9ae8:	ldr	x1, [x0, #48]
    9aec:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9af0:	ldr	x0, [x0, #3880]
    9af4:	ldr	x0, [x0, #104]
    9af8:	cmp	x1, x0
    9afc:	b.ne	9b18 <_Z19decl_assembler_nameP9tree_node@plt+0x2db8>  // b.any
    9b00:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9b04:	add	x2, x0, #0x628
    9b08:	mov	w1, #0x370                 	// #880
    9b0c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9b10:	add	x0, x0, #0x4a8
    9b14:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    9b18:	ldr	x0, [sp, #72]
    9b1c:	ldr	x0, [x0, #56]
    9b20:	str	x0, [sp, #72]
    9b24:	b	9ad0 <_Z19decl_assembler_nameP9tree_node@plt+0x2d70>
    9b28:	bl	6690 <_Z16at_class_scope_pv@plt>
    9b2c:	and	w0, w0, #0xff
    9b30:	cmp	w0, #0x0
    9b34:	b.eq	9b50 <_Z19decl_assembler_nameP9tree_node@plt+0x2df0>  // b.none
    9b38:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9b3c:	add	x2, x0, #0x628
    9b40:	mov	w1, #0x374                 	// #884
    9b44:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9b48:	add	x0, x0, #0x4a8
    9b4c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    9b50:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9b54:	ldr	x0, [x0, #3920]
    9b58:	ldr	x0, [x0]
    9b5c:	cmp	x0, #0x0
    9b60:	b.eq	9bb0 <_Z19decl_assembler_nameP9tree_node@plt+0x2e50>  // b.none
    9b64:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9b68:	ldr	x0, [x0, #3920]
    9b6c:	ldr	x0, [x0]
    9b70:	ldr	x0, [x0, #104]
    9b74:	cmp	x0, #0x0
    9b78:	b.eq	9bb0 <_Z19decl_assembler_nameP9tree_node@plt+0x2e50>  // b.none
    9b7c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9b80:	ldr	x0, [x0, #3920]
    9b84:	ldr	x0, [x0]
    9b88:	ldr	x0, [x0, #104]
    9b8c:	ldr	x0, [x0, #104]
    9b90:	cmp	x0, #0x0
    9b94:	b.eq	9bb0 <_Z19decl_assembler_nameP9tree_node@plt+0x2e50>  // b.none
    9b98:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9b9c:	ldr	x0, [x0, #3920]
    9ba0:	ldr	x0, [x0]
    9ba4:	ldr	x0, [x0, #104]
    9ba8:	add	x0, x0, #0x68
    9bac:	b	9bc0 <_Z19decl_assembler_nameP9tree_node@plt+0x2e60>
    9bb0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9bb4:	ldr	x0, [x0, #3888]
    9bb8:	ldr	x0, [x0]
    9bbc:	add	x0, x0, #0xb0
    9bc0:	ldr	x0, [x0]
    9bc4:	str	x0, [sp, #72]
    9bc8:	ldr	x1, [sp, #72]
    9bcc:	ldr	x0, [sp, #64]
    9bd0:	bl	833c <_Z19decl_assembler_nameP9tree_node@plt+0x15dc>
    9bd4:	mov	w0, #0x1                   	// #1
    9bd8:	ldp	x29, x30, [sp], #80
    9bdc:	ret
    9be0:	stp	x29, x30, [sp, #-32]!
    9be4:	mov	x29, sp
    9be8:	bl	6610 <_Z20at_namespace_scope_pv@plt>
    9bec:	and	w0, w0, #0xff
    9bf0:	cmp	w0, #0x0
    9bf4:	b.eq	9c10 <_Z19decl_assembler_nameP9tree_node@plt+0x2eb0>  // b.none
    9bf8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9bfc:	ldr	x0, [x0, #3888]
    9c00:	ldr	x0, [x0]
    9c04:	ldr	x0, [x0, #8]
    9c08:	str	x0, [sp, #24]
    9c0c:	b	9c98 <_Z19decl_assembler_nameP9tree_node@plt+0x2f38>
    9c10:	bl	6690 <_Z16at_class_scope_pv@plt>
    9c14:	and	w0, w0, #0xff
    9c18:	cmp	w0, #0x0
    9c1c:	b.eq	9c3c <_Z19decl_assembler_nameP9tree_node@plt+0x2edc>  // b.none
    9c20:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9c24:	ldr	x0, [x0, #3888]
    9c28:	ldr	x0, [x0]
    9c2c:	ldr	x0, [x0, #32]
    9c30:	ldr	x0, [x0, #120]
    9c34:	str	x0, [sp, #24]
    9c38:	b	9c98 <_Z19decl_assembler_nameP9tree_node@plt+0x2f38>
    9c3c:	bl	7a24 <_Z19decl_assembler_nameP9tree_node@plt+0xcc4>
    9c40:	and	w0, w0, #0xff
    9c44:	cmp	w0, #0x0
    9c48:	b.ne	9c58 <_Z19decl_assembler_nameP9tree_node@plt+0x2ef8>  // b.any
    9c4c:	bl	60e0 <_Z19at_function_scope_pv@plt>
    9c50:	cmp	w0, #0x0
    9c54:	b.eq	9c60 <_Z19decl_assembler_nameP9tree_node@plt+0x2f00>  // b.none
    9c58:	mov	w0, #0x1                   	// #1
    9c5c:	b	9c64 <_Z19decl_assembler_nameP9tree_node@plt+0x2f04>
    9c60:	mov	w0, #0x0                   	// #0
    9c64:	cmp	w0, #0x0
    9c68:	b.eq	9c80 <_Z19decl_assembler_nameP9tree_node@plt+0x2f20>  // b.none
    9c6c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9c70:	ldr	x0, [x0, #3872]
    9c74:	ldr	x0, [x0]
    9c78:	str	x0, [sp, #24]
    9c7c:	b	9c98 <_Z19decl_assembler_nameP9tree_node@plt+0x2f38>
    9c80:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9c84:	add	x2, x0, #0x640
    9c88:	mov	w1, #0x388                 	// #904
    9c8c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9c90:	add	x0, x0, #0x4a8
    9c94:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    9c98:	ldr	x0, [sp, #24]
    9c9c:	ldp	x29, x30, [sp], #32
    9ca0:	ret
    9ca4:	stp	x29, x30, [sp, #-48]!
    9ca8:	mov	x29, sp
    9cac:	str	x0, [sp, #24]
    9cb0:	bl	9be0 <_Z19decl_assembler_nameP9tree_node@plt+0x2e80>
    9cb4:	str	x0, [sp, #40]
    9cb8:	ldr	x0, [sp, #40]
    9cbc:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    9cc0:	ldp	x29, x30, [sp], #48
    9cc4:	ret
    9cc8:	stp	x29, x30, [sp, #-48]!
    9ccc:	mov	x29, sp
    9cd0:	str	x0, [sp, #24]
    9cd4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9cd8:	ldr	x0, [x0, #3888]
    9cdc:	ldr	x0, [x0]
    9ce0:	ldr	x0, [x0, #8]
    9ce4:	str	x0, [sp, #32]
    9ce8:	bl	6760 <_Z19toplevel_bindings_pv@plt>
    9cec:	and	w0, w0, #0xff
    9cf0:	eor	w0, w0, #0x1
    9cf4:	and	w0, w0, #0xff
    9cf8:	cmp	w0, #0x0
    9cfc:	b.eq	9d18 <_Z19decl_assembler_nameP9tree_node@plt+0x2fb8>  // b.none
    9d00:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9d04:	add	x2, x0, #0x658
    9d08:	mov	w1, #0x39a                 	// #922
    9d0c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9d10:	add	x0, x0, #0x4a8
    9d14:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    9d18:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9d1c:	ldr	x0, [x0, #3880]
    9d20:	ldr	x1, [x0, #104]
    9d24:	ldr	x0, [sp, #32]
    9d28:	cmp	x1, x0
    9d2c:	b.ne	9d48 <_Z19decl_assembler_nameP9tree_node@plt+0x2fe8>  // b.any
    9d30:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9d34:	add	x2, x0, #0x658
    9d38:	mov	w1, #0x39b                 	// #923
    9d3c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9d40:	add	x0, x0, #0x4a8
    9d44:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    9d48:	ldr	x0, [sp, #32]
    9d4c:	ldr	x0, [x0, #40]
    9d50:	cmp	x0, #0x0
    9d54:	b.eq	9d78 <_Z19decl_assembler_nameP9tree_node@plt+0x3018>  // b.none
    9d58:	ldr	x0, [sp, #32]
    9d5c:	ldr	x0, [x0, #40]
    9d60:	ldrh	w0, [x0]
    9d64:	cmp	w0, #0x2d
    9d68:	b.eq	9d78 <_Z19decl_assembler_nameP9tree_node@plt+0x3018>  // b.none
    9d6c:	ldr	x0, [sp, #32]
    9d70:	ldr	x0, [x0, #40]
    9d74:	b	9d84 <_Z19decl_assembler_nameP9tree_node@plt+0x3024>
    9d78:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9d7c:	ldr	x0, [x0, #3880]
    9d80:	ldr	x0, [x0, #104]
    9d84:	str	x0, [sp, #40]
    9d88:	ldr	x0, [sp, #32]
    9d8c:	ldrb	w0, [x0, #4]
    9d90:	and	w0, w0, #0x1
    9d94:	and	w0, w0, #0xff
    9d98:	cmp	w0, #0x0
    9d9c:	b.eq	9da8 <_Z19decl_assembler_nameP9tree_node@plt+0x3048>  // b.none
    9da0:	mov	w0, #0x0                   	// #0
    9da4:	b	9dd0 <_Z19decl_assembler_nameP9tree_node@plt+0x3070>
    9da8:	ldr	x0, [sp, #32]
    9dac:	ldrb	w1, [x0, #4]
    9db0:	orr	w1, w1, #0x1
    9db4:	strb	w1, [x0, #4]
    9db8:	ldr	x0, [sp, #40]
    9dbc:	ldr	x0, [x0, #104]
    9dc0:	add	x0, x0, #0x18
    9dc4:	add	x1, sp, #0x20
    9dc8:	bl	13470 <plugin_init@@Base+0x2430>
    9dcc:	mov	w0, #0x1                   	// #1
    9dd0:	ldp	x29, x30, [sp], #48
    9dd4:	ret
    9dd8:	stp	x29, x30, [sp, #-48]!
    9ddc:	mov	x29, sp
    9de0:	str	x0, [sp, #24]
    9de4:	str	x1, [sp, #16]
    9de8:	ldr	x0, [sp, #16]
    9dec:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    9df0:	str	x0, [sp, #40]
    9df4:	ldr	x0, [sp, #40]
    9df8:	ldrh	w0, [x0]
    9dfc:	cmp	w0, #0x2a
    9e00:	b.eq	9e1c <_Z19decl_assembler_nameP9tree_node@plt+0x30bc>  // b.none
    9e04:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9e08:	add	x2, x0, #0x678
    9e0c:	mov	w1, #0x3ae                 	// #942
    9e10:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9e14:	add	x0, x0, #0x4a8
    9e18:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    9e1c:	mov	x1, #0x0                   	// #0
    9e20:	ldr	x0, [sp, #40]
    9e24:	bl	6720 <_Z32finish_namespace_using_directiveP9tree_nodeS0_@plt>
    9e28:	mov	w0, #0x1                   	// #1
    9e2c:	ldp	x29, x30, [sp], #48
    9e30:	ret
    9e34:	stp	x29, x30, [sp, #-64]!
    9e38:	mov	x29, sp
    9e3c:	str	x0, [sp, #40]
    9e40:	str	x1, [sp, #32]
    9e44:	str	x2, [sp, #24]
    9e48:	ldr	x0, [sp, #32]
    9e4c:	bl	6960 <_Z14get_identifierPKc@plt>
    9e50:	str	x0, [sp, #56]
    9e54:	ldr	x0, [sp, #24]
    9e58:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    9e5c:	str	x0, [sp, #48]
    9e60:	ldr	x1, [sp, #48]
    9e64:	ldr	x0, [sp, #56]
    9e68:	bl	6740 <_Z18do_namespace_aliasP9tree_nodeS0_@plt>
    9e6c:	mov	w0, #0x1                   	// #1
    9e70:	ldp	x29, x30, [sp], #64
    9e74:	ret
    9e78:	stp	x29, x30, [sp, #-32]!
    9e7c:	mov	x29, sp
    9e80:	str	x0, [sp, #24]
    9e84:	str	w1, [sp, #20]
    9e88:	ldr	w0, [sp, #20]
    9e8c:	and	w0, w0, #0x30
    9e90:	cmp	w0, #0x0
    9e94:	cset	w0, eq  // eq = none
    9e98:	and	w0, w0, #0xff
    9e9c:	mov	w2, w0
    9ea0:	ldr	x0, [sp, #24]
    9ea4:	ldr	x0, [x0, #40]
    9ea8:	cmp	x0, #0x0
    9eac:	b.eq	9ed8 <_Z19decl_assembler_nameP9tree_node@plt+0x3178>  // b.none
    9eb0:	ldr	x0, [sp, #24]
    9eb4:	ldr	x0, [x0, #40]
    9eb8:	ldrh	w0, [x0]
    9ebc:	mov	w1, w0
    9ec0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9ec4:	ldr	x0, [x0, #3952]
    9ec8:	sxtw	x1, w1
    9ecc:	ldr	w0, [x0, x1, lsl #2]
    9ed0:	cmp	w0, #0x2
    9ed4:	b.eq	9ee0 <_Z19decl_assembler_nameP9tree_node@plt+0x3180>  // b.none
    9ed8:	mov	w0, #0x1                   	// #1
    9edc:	b	9ee4 <_Z19decl_assembler_nameP9tree_node@plt+0x3184>
    9ee0:	mov	w0, #0x0                   	// #0
    9ee4:	cmp	w2, w0
    9ee8:	b.eq	9f04 <_Z19decl_assembler_nameP9tree_node@plt+0x31a4>  // b.none
    9eec:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9ef0:	add	x2, x0, #0x698
    9ef4:	mov	w1, #0x3c5                 	// #965
    9ef8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9efc:	add	x0, x0, #0x4a8
    9f00:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    9f04:	ldr	w0, [sp, #20]
    9f08:	and	w0, w0, #0x30
    9f0c:	cmp	w0, #0x30
    9f10:	b.eq	9f60 <_Z19decl_assembler_nameP9tree_node@plt+0x3200>  // b.none
    9f14:	cmp	w0, #0x30
    9f18:	b.gt	9fb0 <_Z19decl_assembler_nameP9tree_node@plt+0x3250>
    9f1c:	cmp	w0, #0x10
    9f20:	b.eq	9f30 <_Z19decl_assembler_nameP9tree_node@plt+0x31d0>  // b.none
    9f24:	cmp	w0, #0x20
    9f28:	b.eq	9f90 <_Z19decl_assembler_nameP9tree_node@plt+0x3230>  // b.none
    9f2c:	b	9fb0 <_Z19decl_assembler_nameP9tree_node@plt+0x3250>
    9f30:	ldr	x0, [sp, #24]
    9f34:	ldrb	w1, [x0, #3]
    9f38:	orr	w1, w1, #0x10
    9f3c:	strb	w1, [x0, #3]
    9f40:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9f44:	ldr	x0, [x0, #3888]
    9f48:	ldr	x0, [x0]
    9f4c:	adrp	x1, 33000 <xexit@@Base+0x14c5c>
    9f50:	ldr	x1, [x1, #3976]
    9f54:	ldr	x1, [x1, #256]
    9f58:	str	x1, [x0, #40]
    9f5c:	b	9fb4 <_Z19decl_assembler_nameP9tree_node@plt+0x3254>
    9f60:	ldr	x0, [sp, #24]
    9f64:	ldrb	w1, [x0, #3]
    9f68:	orr	w1, w1, #0x20
    9f6c:	strb	w1, [x0, #3]
    9f70:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9f74:	ldr	x0, [x0, #3888]
    9f78:	ldr	x0, [x0]
    9f7c:	adrp	x1, 33000 <xexit@@Base+0x14c5c>
    9f80:	ldr	x1, [x1, #3976]
    9f84:	ldr	x1, [x1, #248]
    9f88:	str	x1, [x0, #40]
    9f8c:	b	9fb4 <_Z19decl_assembler_nameP9tree_node@plt+0x3254>
    9f90:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    9f94:	ldr	x0, [x0, #3888]
    9f98:	ldr	x0, [x0]
    9f9c:	adrp	x1, 33000 <xexit@@Base+0x14c5c>
    9fa0:	ldr	x1, [x1, #3976]
    9fa4:	ldr	x1, [x1, #240]
    9fa8:	str	x1, [x0, #40]
    9fac:	b	9fb4 <_Z19decl_assembler_nameP9tree_node@plt+0x3254>
    9fb0:	nop
    9fb4:	nop
    9fb8:	ldp	x29, x30, [sp], #32
    9fbc:	ret
    9fc0:	stp	x29, x30, [sp, #-96]!
    9fc4:	mov	x29, sp
    9fc8:	str	x0, [sp, #40]
    9fcc:	str	w1, [sp, #36]
    9fd0:	str	x2, [sp, #24]
    9fd4:	ldr	x0, [sp, #24]
    9fd8:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    9fdc:	str	x0, [sp, #80]
    9fe0:	ldr	w0, [sp, #36]
    9fe4:	and	w0, w0, #0xf
    9fe8:	cmp	w0, #0x9
    9fec:	b.eq	a008 <_Z19decl_assembler_nameP9tree_node@plt+0x32a8>  // b.none
    9ff0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    9ff4:	add	x2, x0, #0x6b0
    9ff8:	mov	w1, #0x3e2                 	// #994
    9ffc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a000:	add	x0, x0, #0x4a8
    a004:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    a008:	ldr	w0, [sp, #36]
    a00c:	and	w0, w0, #0x1fc0
    a010:	cmp	w0, #0x0
    a014:	b.eq	a030 <_Z19decl_assembler_nameP9tree_node@plt+0x32d0>  // b.none
    a018:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a01c:	add	x2, x0, #0x6b0
    a020:	mov	w1, #0x3e3                 	// #995
    a024:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a028:	add	x0, x0, #0x4a8
    a02c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    a030:	ldr	w0, [sp, #36]
    a034:	and	w0, w0, #0x30
    a038:	str	w0, [sp, #76]
    a03c:	bl	6c40 <_Z21template_parm_scope_pv@plt>
    a040:	and	w0, w0, #0xff
    a044:	cmp	w0, #0x0
    a048:	b.eq	a064 <_Z19decl_assembler_nameP9tree_node@plt+0x3304>  // b.none
    a04c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a050:	add	x2, x0, #0x6b0
    a054:	mov	w1, #0x3e7                 	// #999
    a058:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a05c:	add	x0, x0, #0x4a8
    a060:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    a064:	bl	6690 <_Z16at_class_scope_pv@plt>
    a068:	and	w0, w0, #0xff
    a06c:	strb	w0, [sp, #75]
    a070:	ldr	w0, [sp, #76]
    a074:	and	w0, w0, #0x30
    a078:	cmp	w0, #0x0
    a07c:	cset	w0, eq  // eq = none
    a080:	and	w0, w0, #0xff
    a084:	mov	w1, w0
    a088:	ldrb	w0, [sp, #75]
    a08c:	eor	w0, w0, #0x1
    a090:	and	w0, w0, #0xff
    a094:	cmp	w1, w0
    a098:	b.eq	a0b4 <_Z19decl_assembler_nameP9tree_node@plt+0x3354>  // b.none
    a09c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a0a0:	add	x2, x0, #0x6b0
    a0a4:	mov	w1, #0x3ea                 	// #1002
    a0a8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a0ac:	add	x0, x0, #0x4a8
    a0b0:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    a0b4:	ldr	x0, [sp, #80]
    a0b8:	ldr	x0, [x0, #32]
    a0bc:	str	x0, [sp, #64]
    a0c0:	ldr	x0, [sp, #80]
    a0c4:	ldr	x0, [x0, #40]
    a0c8:	str	x0, [sp, #88]
    a0cc:	ldr	x0, [sp, #88]
    a0d0:	ldrh	w0, [x0]
    a0d4:	cmp	w0, #0x6
    a0d8:	b.ne	a134 <_Z19decl_assembler_nameP9tree_node@plt+0x33d4>  // b.any
    a0dc:	ldr	x0, [sp, #88]
    a0e0:	ldrb	w0, [x0, #3]
    a0e4:	and	w0, w0, #0x4
    a0e8:	and	w0, w0, #0xff
    a0ec:	cmp	w0, #0x0
    a0f0:	b.ne	a134 <_Z19decl_assembler_nameP9tree_node@plt+0x33d4>  // b.any
    a0f4:	ldr	x0, [sp, #88]
    a0f8:	ldr	x0, [x0, #112]
    a0fc:	cmp	x0, #0x0
    a100:	b.eq	a124 <_Z19decl_assembler_nameP9tree_node@plt+0x33c4>  // b.none
    a104:	ldr	x0, [sp, #88]
    a108:	ldr	x0, [x0, #112]
    a10c:	ldrh	w0, [x0]
    a110:	cmp	w0, #0x2d
    a114:	b.eq	a124 <_Z19decl_assembler_nameP9tree_node@plt+0x33c4>  // b.none
    a118:	ldr	x0, [sp, #88]
    a11c:	ldr	x0, [x0, #112]
    a120:	b	a130 <_Z19decl_assembler_nameP9tree_node@plt+0x33d0>
    a124:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    a128:	ldr	x0, [x0, #3880]
    a12c:	ldr	x0, [x0, #104]
    a130:	str	x0, [sp, #88]
    a134:	ldrb	w0, [sp, #75]
    a138:	cmp	w0, #0x0
    a13c:	b.eq	a168 <_Z19decl_assembler_nameP9tree_node@plt+0x3408>  // b.none
    a140:	ldr	x1, [sp, #64]
    a144:	ldr	x0, [sp, #88]
    a148:	bl	61e0 <_Z19do_class_using_declP9tree_nodeS0_@plt>
    a14c:	str	x0, [sp, #56]
    a150:	ldr	w1, [sp, #36]
    a154:	ldr	x0, [sp, #56]
    a158:	bl	9e78 <_Z19decl_assembler_nameP9tree_node@plt+0x3118>
    a15c:	ldr	x0, [sp, #56]
    a160:	bl	6330 <_Z25finish_member_declarationP9tree_node@plt>
    a164:	b	a1a8 <_Z19decl_assembler_nameP9tree_node@plt+0x3448>
    a168:	bl	6610 <_Z20at_namespace_scope_pv@plt>
    a16c:	and	w0, w0, #0xff
    a170:	eor	w0, w0, #0x1
    a174:	and	w0, w0, #0xff
    a178:	cmp	w0, #0x0
    a17c:	b.eq	a198 <_Z19decl_assembler_nameP9tree_node@plt+0x3438>  // b.none
    a180:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a184:	add	x2, x0, #0x6b0
    a188:	mov	w1, #0x3fd                 	// #1021
    a18c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a190:	add	x0, x0, #0x4a8
    a194:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    a198:	ldr	x2, [sp, #64]
    a19c:	ldr	x1, [sp, #88]
    a1a0:	ldr	x0, [sp, #80]
    a1a4:	bl	66e0 <_Z27finish_namespace_using_declP9tree_nodeS0_S0_@plt>
    a1a8:	mov	w0, #0x1                   	// #1
    a1ac:	ldp	x29, x30, [sp], #96
    a1b0:	ret
    a1b4:	stp	x29, x30, [sp, #-48]!
    a1b8:	mov	x29, sp
    a1bc:	str	w0, [sp, #28]
    a1c0:	str	x1, [sp, #16]
    a1c4:	str	w2, [sp, #24]
    a1c8:	bl	60e0 <_Z19at_function_scope_pv@plt>
    a1cc:	cmp	w0, #0x0
    a1d0:	b.eq	a1ec <_Z19decl_assembler_nameP9tree_node@plt+0x348c>  // b.none
    a1d4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a1d8:	add	x2, x0, #0x6c8
    a1dc:	mov	w1, #0x40a                 	// #1034
    a1e0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a1e4:	add	x0, x0, #0x4a8
    a1e8:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    a1ec:	ldr	w0, [sp, #28]
    a1f0:	bl	6940 <_Z15make_class_type9tree_code@plt>
    a1f4:	str	x0, [sp, #40]
    a1f8:	ldr	x3, [sp, #40]
    a1fc:	ldr	x2, [sp, #16]
    a200:	mov	w1, #0x26                  	// #38
    a204:	ldr	w0, [sp, #24]
    a208:	bl	65c0 <_Z10build_declj9tree_codeP9tree_nodeS1_@plt>
    a20c:	str	x0, [sp, #32]
    a210:	ldr	x0, [sp, #40]
    a214:	ldr	x1, [sp, #32]
    a218:	str	x1, [x0, #120]
    a21c:	ldr	x0, [sp, #40]
    a220:	ldr	x1, [sp, #32]
    a224:	str	x1, [x0, #16]
    a228:	ldr	x0, [sp, #40]
    a22c:	ldr	x1, [x0, #112]
    a230:	ldr	x0, [sp, #32]
    a234:	str	x1, [x0, #40]
    a238:	ldr	x0, [sp, #32]
    a23c:	ldp	x29, x30, [sp], #48
    a240:	ret
    a244:	stp	x29, x30, [sp, #-256]!
    a248:	mov	x29, sp
    a24c:	str	x19, [sp, #16]
    a250:	str	x0, [sp, #88]
    a254:	str	x1, [sp, #80]
    a258:	str	w2, [sp, #76]
    a25c:	str	x3, [sp, #64]
    a260:	str	x4, [sp, #56]
    a264:	str	x5, [sp, #48]
    a268:	str	x6, [sp, #40]
    a26c:	str	w7, [sp, #72]
    a270:	ldr	x0, [sp, #88]
    a274:	str	x0, [sp, #184]
    a278:	ldr	x0, [sp, #80]
    a27c:	cmp	x0, #0x0
    a280:	b.eq	a2b0 <_Z19decl_assembler_nameP9tree_node@plt+0x3550>  // b.none
    a284:	mov	w1, #0x3a                  	// #58
    a288:	ldr	x0, [sp, #80]
    a28c:	bl	6370 <strchr@plt>
    a290:	cmp	x0, #0x0
    a294:	b.eq	a2b0 <_Z19decl_assembler_nameP9tree_node@plt+0x3550>  // b.none
    a298:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a29c:	add	x2, x0, #0x6e0
    a2a0:	mov	w1, #0x423                 	// #1059
    a2a4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a2a8:	add	x0, x0, #0x4a8
    a2ac:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    a2b0:	ldr	x0, [sp, #64]
    a2b4:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    a2b8:	str	x0, [sp, #176]
    a2bc:	ldr	w0, [sp, #76]
    a2c0:	and	w0, w0, #0x1fc0
    a2c4:	str	w0, [sp, #172]
    a2c8:	ldr	w0, [sp, #76]
    a2cc:	and	w0, w0, #0x30
    a2d0:	str	w0, [sp, #168]
    a2d4:	ldr	w0, [sp, #76]
    a2d8:	and	w0, w0, #0xf
    a2dc:	str	w0, [sp, #76]
    a2e0:	ldr	w0, [sp, #76]
    a2e4:	cmp	w0, #0x5
    a2e8:	b.eq	a408 <_Z19decl_assembler_nameP9tree_node@plt+0x36a8>  // b.none
    a2ec:	cmp	w0, #0x5
    a2f0:	b.gt	a458 <_Z19decl_assembler_nameP9tree_node@plt+0x36f8>
    a2f4:	cmp	w0, #0x4
    a2f8:	b.eq	a3b4 <_Z19decl_assembler_nameP9tree_node@plt+0x3654>  // b.none
    a2fc:	cmp	w0, #0x4
    a300:	b.gt	a458 <_Z19decl_assembler_nameP9tree_node@plt+0x36f8>
    a304:	cmp	w0, #0x2
    a308:	b.eq	a388 <_Z19decl_assembler_nameP9tree_node@plt+0x3628>  // b.none
    a30c:	cmp	w0, #0x2
    a310:	b.gt	a458 <_Z19decl_assembler_nameP9tree_node@plt+0x36f8>
    a314:	cmp	w0, #0x0
    a318:	b.eq	a328 <_Z19decl_assembler_nameP9tree_node@plt+0x35c8>  // b.none
    a31c:	cmp	w0, #0x1
    a320:	b.eq	a358 <_Z19decl_assembler_nameP9tree_node@plt+0x35f8>  // b.none
    a324:	b	a458 <_Z19decl_assembler_nameP9tree_node@plt+0x36f8>
    a328:	mov	w0, #0x20                  	// #32
    a32c:	str	w0, [sp, #252]
    a330:	ldr	w0, [sp, #172]
    a334:	and	w0, w0, #0xffffe03f
    a338:	cmp	w0, #0x0
    a33c:	b.eq	a470 <_Z19decl_assembler_nameP9tree_node@plt+0x3710>  // b.none
    a340:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a344:	add	x2, x0, #0x6e0
    a348:	mov	w1, #0x432                 	// #1074
    a34c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a350:	add	x0, x0, #0x4a8
    a354:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    a358:	mov	w0, #0x23                  	// #35
    a35c:	str	w0, [sp, #252]
    a360:	ldr	w0, [sp, #172]
    a364:	and	w0, w0, #0xffffff3f
    a368:	cmp	w0, #0x0
    a36c:	b.eq	a478 <_Z19decl_assembler_nameP9tree_node@plt+0x3718>  // b.none
    a370:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a374:	add	x2, x0, #0x6e0
    a378:	mov	w1, #0x437                 	// #1079
    a37c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a380:	add	x0, x0, #0x4a8
    a384:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    a388:	mov	w0, #0x26                  	// #38
    a38c:	str	w0, [sp, #252]
    a390:	ldr	w0, [sp, #172]
    a394:	cmp	w0, #0x0
    a398:	b.eq	a480 <_Z19decl_assembler_nameP9tree_node@plt+0x3720>  // b.none
    a39c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a3a0:	add	x2, x0, #0x6e0
    a3a4:	mov	w1, #0x43c                 	// #1084
    a3a8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a3ac:	add	x0, x0, #0x4a8
    a3b0:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    a3b4:	mov	w0, #0x11                  	// #17
    a3b8:	str	w0, [sp, #252]
    a3bc:	ldr	w0, [sp, #172]
    a3c0:	and	w0, w0, #0xffffffbf
    a3c4:	cmp	w0, #0x0
    a3c8:	b.eq	a3e4 <_Z19decl_assembler_nameP9tree_node@plt+0x3684>  // b.none
    a3cc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a3d0:	add	x2, x0, #0x6e0
    a3d4:	mov	w1, #0x441                 	// #1089
    a3d8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a3dc:	add	x0, x0, #0x4a8
    a3e0:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    a3e4:	ldr	x0, [sp, #176]
    a3e8:	cmp	x0, #0x0
    a3ec:	b.eq	a488 <_Z19decl_assembler_nameP9tree_node@plt+0x3728>  // b.none
    a3f0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a3f4:	add	x2, x0, #0x6e0
    a3f8:	mov	w1, #0x442                 	// #1090
    a3fc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a400:	add	x0, x0, #0x4a8
    a404:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    a408:	mov	w0, #0x12                  	// #18
    a40c:	str	w0, [sp, #252]
    a410:	ldr	w0, [sp, #172]
    a414:	cmp	w0, #0x0
    a418:	b.eq	a434 <_Z19decl_assembler_nameP9tree_node@plt+0x36d4>  // b.none
    a41c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a420:	add	x2, x0, #0x6e0
    a424:	mov	w1, #0x447                 	// #1095
    a428:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a42c:	add	x0, x0, #0x4a8
    a430:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    a434:	ldr	x0, [sp, #176]
    a438:	cmp	x0, #0x0
    a43c:	b.eq	a490 <_Z19decl_assembler_nameP9tree_node@plt+0x3730>  // b.none
    a440:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a444:	add	x2, x0, #0x6e0
    a448:	mov	w1, #0x448                 	// #1096
    a44c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a450:	add	x0, x0, #0x4a8
    a454:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    a458:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a45c:	add	x2, x0, #0x6e0
    a460:	mov	w1, #0x44c                 	// #1100
    a464:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a468:	add	x0, x0, #0x4a8
    a46c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    a470:	nop
    a474:	b	a494 <_Z19decl_assembler_nameP9tree_node@plt+0x3734>
    a478:	nop
    a47c:	b	a494 <_Z19decl_assembler_nameP9tree_node@plt+0x3734>
    a480:	nop
    a484:	b	a494 <_Z19decl_assembler_nameP9tree_node@plt+0x3734>
    a488:	nop
    a48c:	b	a494 <_Z19decl_assembler_nameP9tree_node@plt+0x3734>
    a490:	nop
    a494:	bl	6c40 <_Z21template_parm_scope_pv@plt>
    a498:	and	w0, w0, #0xff
    a49c:	strb	w0, [sp, #167]
    a4a0:	ldrb	w0, [sp, #167]
    a4a4:	cmp	w0, #0x0
    a4a8:	b.eq	a548 <_Z19decl_assembler_nameP9tree_node@plt+0x37e8>  // b.none
    a4ac:	ldr	w0, [sp, #252]
    a4b0:	cmp	w0, #0x20
    a4b4:	b.eq	a4e8 <_Z19decl_assembler_nameP9tree_node@plt+0x3788>  // b.none
    a4b8:	ldr	w0, [sp, #252]
    a4bc:	cmp	w0, #0x11
    a4c0:	b.eq	a4e8 <_Z19decl_assembler_nameP9tree_node@plt+0x3788>  // b.none
    a4c4:	ldr	w0, [sp, #252]
    a4c8:	cmp	w0, #0x26
    a4cc:	b.eq	a4e8 <_Z19decl_assembler_nameP9tree_node@plt+0x3788>  // b.none
    a4d0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a4d4:	add	x2, x0, #0x6e0
    a4d8:	mov	w1, #0x453                 	// #1107
    a4dc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a4e0:	add	x0, x0, #0x4a8
    a4e4:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    a4e8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    a4ec:	ldr	x0, [x0, #3888]
    a4f0:	ldr	x0, [x0]
    a4f4:	ldr	x0, [x0, #72]
    a4f8:	ldr	x0, [x0, #8]
    a4fc:	bl	6c80 <_Z22end_template_parm_listP9tree_node@plt>
    a500:	ldr	x0, [sp, #48]
    a504:	cmp	x0, #0x0
    a508:	b.eq	a524 <_Z19decl_assembler_nameP9tree_node@plt+0x37c4>  // b.none
    a50c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a510:	add	x2, x0, #0x6e0
    a514:	mov	w1, #0x459                 	// #1113
    a518:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a51c:	add	x0, x0, #0x4a8
    a520:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    a524:	ldr	x0, [sp, #56]
    a528:	cmp	x0, #0x0
    a52c:	b.eq	a548 <_Z19decl_assembler_nameP9tree_node@plt+0x37e8>  // b.none
    a530:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a534:	add	x2, x0, #0x6e0
    a538:	mov	w1, #0x45a                 	// #1114
    a53c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a540:	add	x0, x0, #0x4a8
    a544:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    a548:	ldr	w2, [sp, #72]
    a54c:	ldr	x1, [sp, #40]
    a550:	ldr	x0, [sp, #184]
    a554:	bl	12750 <plugin_init@@Base+0x1710>
    a558:	str	w0, [sp, #160]
    a55c:	bl	6690 <_Z16at_class_scope_pv@plt>
    a560:	and	w0, w0, #0xff
    a564:	strb	w0, [sp, #159]
    a568:	strb	wzr, [sp, #239]
    a56c:	strb	wzr, [sp, #238]
    a570:	strb	wzr, [sp, #237]
    a574:	str	wzr, [sp, #232]
    a578:	ldr	w0, [sp, #168]
    a57c:	and	w0, w0, #0x30
    a580:	cmp	w0, #0x0
    a584:	cset	w0, eq  // eq = none
    a588:	and	w0, w0, #0xff
    a58c:	mov	w1, w0
    a590:	ldrb	w0, [sp, #159]
    a594:	eor	w0, w0, #0x1
    a598:	and	w0, w0, #0xff
    a59c:	cmp	w1, w0
    a5a0:	b.eq	a5bc <_Z19decl_assembler_nameP9tree_node@plt+0x385c>  // b.none
    a5a4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a5a8:	add	x2, x0, #0x6e0
    a5ac:	mov	w1, #0x462                 	// #1122
    a5b0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a5b4:	add	x0, x0, #0x4a8
    a5b8:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    a5bc:	ldr	w0, [sp, #252]
    a5c0:	cmp	w0, #0x20
    a5c4:	b.ne	a5d8 <_Z19decl_assembler_nameP9tree_node@plt+0x3878>  // b.any
    a5c8:	ldr	w0, [sp, #172]
    a5cc:	and	w0, w0, #0x40
    a5d0:	cmp	w0, #0x0
    a5d4:	b.ne	a62c <_Z19decl_assembler_nameP9tree_node@plt+0x38cc>  // b.any
    a5d8:	ldr	x0, [sp, #80]
    a5dc:	cmp	x0, #0x0
    a5e0:	b.eq	a5f4 <_Z19decl_assembler_nameP9tree_node@plt+0x3894>  // b.none
    a5e4:	ldr	x0, [sp, #80]
    a5e8:	bl	6960 <_Z14get_identifierPKc@plt>
    a5ec:	str	x0, [sp, #224]
    a5f0:	b	a62c <_Z19decl_assembler_nameP9tree_node@plt+0x38cc>
    a5f4:	ldr	w0, [sp, #252]
    a5f8:	cmp	w0, #0x11
    a5fc:	b.eq	a624 <_Z19decl_assembler_nameP9tree_node@plt+0x38c4>  // b.none
    a600:	ldr	w0, [sp, #252]
    a604:	cmp	w0, #0x12
    a608:	b.eq	a624 <_Z19decl_assembler_nameP9tree_node@plt+0x38c4>  // b.none
    a60c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a610:	add	x2, x0, #0x6e0
    a614:	mov	w1, #0x46c                 	// #1132
    a618:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    a61c:	add	x0, x0, #0x4a8
    a620:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    a624:	bl	69a0 <_Z14make_anon_namev@plt>
    a628:	str	x0, [sp, #224]
    a62c:	ldr	w0, [sp, #252]
    a630:	cmp	w0, #0x20
    a634:	b.ne	b44c <_Z19decl_assembler_nameP9tree_node@plt+0x46ec>  // b.any
    a638:	ldr	w0, [sp, #172]
    a63c:	and	w0, w0, #0x40
    a640:	cmp	w0, #0x0
    a644:	b.eq	b024 <_Z19decl_assembler_nameP9tree_node@plt+0x42c4>  // b.none
    a648:	ldr	x0, [sp, #80]
    a64c:	ldrb	w0, [x0]
    a650:	lsl	w0, w0, #8
    a654:	ldr	x1, [sp, #80]
    a658:	add	x1, x1, #0x1
    a65c:	ldrb	w1, [x1]
    a660:	orr	w0, w0, w1
    a664:	mov	w1, #0x7273                	// #29299
    a668:	cmp	w0, w1
    a66c:	b.eq	adb8 <_Z19decl_assembler_nameP9tree_node@plt+0x4058>  // b.none
    a670:	mov	w1, #0x7273                	// #29299
    a674:	cmp	w0, w1
    a678:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a67c:	mov	w1, #0x726d                	// #29293
    a680:	cmp	w0, w1
    a684:	b.eq	acc8 <_Z19decl_assembler_nameP9tree_node@plt+0x3f68>  // b.none
    a688:	mov	w1, #0x726d                	// #29293
    a68c:	cmp	w0, w1
    a690:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a694:	mov	w1, #0x7253                	// #29267
    a698:	cmp	w0, w1
    a69c:	b.eq	add8 <_Z19decl_assembler_nameP9tree_node@plt+0x4078>  // b.none
    a6a0:	mov	w1, #0x7253                	// #29267
    a6a4:	cmp	w0, w1
    a6a8:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a6ac:	mov	w1, #0x724d                	// #29261
    a6b0:	cmp	w0, w1
    a6b4:	b.eq	ad5c <_Z19decl_assembler_nameP9tree_node@plt+0x3ffc>  // b.none
    a6b8:	mov	w1, #0x724d                	// #29261
    a6bc:	cmp	w0, w1
    a6c0:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a6c4:	mov	w1, #0x7074                	// #28788
    a6c8:	cmp	w0, w1
    a6cc:	b.eq	ae88 <_Z19decl_assembler_nameP9tree_node@plt+0x4128>  // b.none
    a6d0:	mov	w1, #0x7074                	// #28788
    a6d4:	cmp	w0, w1
    a6d8:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a6dc:	mov	w1, #0x7073                	// #28787
    a6e0:	cmp	w0, w1
    a6e4:	b.eq	ac5c <_Z19decl_assembler_nameP9tree_node@plt+0x3efc>  // b.none
    a6e8:	mov	w1, #0x7073                	// #28787
    a6ec:	cmp	w0, w1
    a6f0:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a6f4:	mov	w1, #0x7070                	// #28784
    a6f8:	cmp	w0, w1
    a6fc:	b.eq	ae58 <_Z19decl_assembler_nameP9tree_node@plt+0x40f8>  // b.none
    a700:	mov	w1, #0x7070                	// #28784
    a704:	cmp	w0, w1
    a708:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a70c:	mov	w1, #0x706d                	// #28781
    a710:	cmp	w0, w1
    a714:	b.eq	ae7c <_Z19decl_assembler_nameP9tree_node@plt+0x411c>  // b.none
    a718:	mov	w1, #0x706d                	// #28781
    a71c:	cmp	w0, w1
    a720:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a724:	mov	w1, #0x706c                	// #28780
    a728:	cmp	w0, w1
    a72c:	b.eq	ac98 <_Z19decl_assembler_nameP9tree_node@plt+0x3f38>  // b.none
    a730:	mov	w1, #0x706c                	// #28780
    a734:	cmp	w0, w1
    a738:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a73c:	mov	w1, #0x704c                	// #28748
    a740:	cmp	w0, w1
    a744:	b.eq	ad0c <_Z19decl_assembler_nameP9tree_node@plt+0x3fac>  // b.none
    a748:	mov	w1, #0x704c                	// #28748
    a74c:	cmp	w0, w1
    a750:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a754:	mov	w1, #0x6f72                	// #28530
    a758:	cmp	w0, w1
    a75c:	b.eq	ace0 <_Z19decl_assembler_nameP9tree_node@plt+0x3f80>  // b.none
    a760:	mov	w1, #0x6f72                	// #28530
    a764:	cmp	w0, w1
    a768:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a76c:	mov	w1, #0x6f6f                	// #28527
    a770:	cmp	w0, w1
    a774:	b.eq	ae4c <_Z19decl_assembler_nameP9tree_node@plt+0x40ec>  // b.none
    a778:	mov	w1, #0x6f6f                	// #28527
    a77c:	cmp	w0, w1
    a780:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a784:	mov	w1, #0x6f52                	// #28498
    a788:	cmp	w0, w1
    a78c:	b.eq	ad84 <_Z19decl_assembler_nameP9tree_node@plt+0x4024>  // b.none
    a790:	mov	w1, #0x6f52                	// #28498
    a794:	cmp	w0, w1
    a798:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a79c:	mov	w1, #0x6e77                	// #28279
    a7a0:	cmp	w0, w1
    a7a4:	b.eq	ac2c <_Z19decl_assembler_nameP9tree_node@plt+0x3ecc>  // b.none
    a7a8:	mov	w1, #0x6e77                	// #28279
    a7ac:	cmp	w0, w1
    a7b0:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a7b4:	mov	w1, #0x6e74                	// #28276
    a7b8:	cmp	w0, w1
    a7bc:	b.eq	ae34 <_Z19decl_assembler_nameP9tree_node@plt+0x40d4>  // b.none
    a7c0:	mov	w1, #0x6e74                	// #28276
    a7c4:	cmp	w0, w1
    a7c8:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a7cc:	mov	w1, #0x6e67                	// #28263
    a7d0:	cmp	w0, w1
    a7d4:	b.eq	ac68 <_Z19decl_assembler_nameP9tree_node@plt+0x3f08>  // b.none
    a7d8:	mov	w1, #0x6e67                	// #28263
    a7dc:	cmp	w0, w1
    a7e0:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a7e4:	mov	w1, #0x6e65                	// #28261
    a7e8:	cmp	w0, w1
    a7ec:	b.eq	adf8 <_Z19decl_assembler_nameP9tree_node@plt+0x4098>  // b.none
    a7f0:	mov	w1, #0x6e65                	// #28261
    a7f4:	cmp	w0, w1
    a7f8:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a7fc:	mov	w1, #0x6e61                	// #28257
    a800:	cmp	w0, w1
    a804:	b.eq	ac38 <_Z19decl_assembler_nameP9tree_node@plt+0x3ed8>  // b.none
    a808:	mov	w1, #0x6e61                	// #28257
    a80c:	cmp	w0, w1
    a810:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a814:	mov	w1, #0x6d6d                	// #28013
    a818:	cmp	w0, w1
    a81c:	b.eq	ae64 <_Z19decl_assembler_nameP9tree_node@plt+0x4104>  // b.none
    a820:	mov	w1, #0x6d6d                	// #28013
    a824:	cmp	w0, w1
    a828:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a82c:	mov	w1, #0x6d6c                	// #28012
    a830:	cmp	w0, w1
    a834:	b.eq	acb0 <_Z19decl_assembler_nameP9tree_node@plt+0x3f50>  // b.none
    a838:	mov	w1, #0x6d6c                	// #28012
    a83c:	cmp	w0, w1
    a840:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a844:	mov	w1, #0x6d69                	// #28009
    a848:	cmp	w0, w1
    a84c:	b.eq	aca4 <_Z19decl_assembler_nameP9tree_node@plt+0x3f44>  // b.none
    a850:	mov	w1, #0x6d69                	// #28009
    a854:	cmp	w0, w1
    a858:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a85c:	mov	w1, #0x6d4c                	// #27980
    a860:	cmp	w0, w1
    a864:	b.eq	ad34 <_Z19decl_assembler_nameP9tree_node@plt+0x3fd4>  // b.none
    a868:	mov	w1, #0x6d4c                	// #27980
    a86c:	cmp	w0, w1
    a870:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a874:	mov	w1, #0x6d49                	// #27977
    a878:	cmp	w0, w1
    a87c:	b.eq	ad20 <_Z19decl_assembler_nameP9tree_node@plt+0x3fc0>  // b.none
    a880:	mov	w1, #0x6d49                	// #27977
    a884:	cmp	w0, w1
    a888:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a88c:	mov	w1, #0x6c74                	// #27764
    a890:	cmp	w0, w1
    a894:	b.eq	ae04 <_Z19decl_assembler_nameP9tree_node@plt+0x40a4>  // b.none
    a898:	mov	w1, #0x6c74                	// #27764
    a89c:	cmp	w0, w1
    a8a0:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a8a4:	mov	w1, #0x6c73                	// #27763
    a8a8:	cmp	w0, w1
    a8ac:	b.eq	adac <_Z19decl_assembler_nameP9tree_node@plt+0x404c>  // b.none
    a8b0:	mov	w1, #0x6c73                	// #27763
    a8b4:	cmp	w0, w1
    a8b8:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a8bc:	mov	w1, #0x6c69                	// #27753
    a8c0:	cmp	w0, w1
    a8c4:	b.eq	aec0 <_Z19decl_assembler_nameP9tree_node@plt+0x4160>  // b.none
    a8c8:	mov	w1, #0x6c69                	// #27753
    a8cc:	cmp	w0, w1
    a8d0:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a8d4:	mov	w1, #0x6c65                	// #27749
    a8d8:	cmp	w0, w1
    a8dc:	b.eq	ae1c <_Z19decl_assembler_nameP9tree_node@plt+0x40bc>  // b.none
    a8e0:	mov	w1, #0x6c65                	// #27749
    a8e4:	cmp	w0, w1
    a8e8:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a8ec:	mov	w1, #0x6c53                	// #27731
    a8f0:	cmp	w0, w1
    a8f4:	b.eq	adc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4064>  // b.none
    a8f8:	mov	w1, #0x6c53                	// #27731
    a8fc:	cmp	w0, w1
    a900:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a904:	mov	w1, #0x6978                	// #27000
    a908:	cmp	w0, w1
    a90c:	b.eq	aea0 <_Z19decl_assembler_nameP9tree_node@plt+0x4140>  // b.none
    a910:	mov	w1, #0x6978                	// #27000
    a914:	cmp	w0, w1
    a918:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a91c:	mov	w1, #0x6774                	// #26484
    a920:	cmp	w0, w1
    a924:	b.eq	ae10 <_Z19decl_assembler_nameP9tree_node@plt+0x40b0>  // b.none
    a928:	mov	w1, #0x6774                	// #26484
    a92c:	cmp	w0, w1
    a930:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a934:	mov	w1, #0x6765                	// #26469
    a938:	cmp	w0, w1
    a93c:	b.eq	ae28 <_Z19decl_assembler_nameP9tree_node@plt+0x40c8>  // b.none
    a940:	mov	w1, #0x6765                	// #26469
    a944:	cmp	w0, w1
    a948:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a94c:	mov	w1, #0x6571                	// #25969
    a950:	cmp	w0, w1
    a954:	b.eq	adec <_Z19decl_assembler_nameP9tree_node@plt+0x408c>  // b.none
    a958:	mov	w1, #0x6571                	// #25969
    a95c:	cmp	w0, w1
    a960:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a964:	mov	w1, #0x656f                	// #25967
    a968:	cmp	w0, w1
    a96c:	b.eq	acec <_Z19decl_assembler_nameP9tree_node@plt+0x3f8c>  // b.none
    a970:	mov	w1, #0x656f                	// #25967
    a974:	cmp	w0, w1
    a978:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a97c:	mov	w1, #0x654f                	// #25935
    a980:	cmp	w0, w1
    a984:	b.eq	ad98 <_Z19decl_assembler_nameP9tree_node@plt+0x4038>  // b.none
    a988:	mov	w1, #0x654f                	// #25935
    a98c:	cmp	w0, w1
    a990:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a994:	mov	w1, #0x6476                	// #25718
    a998:	cmp	w0, w1
    a99c:	b.eq	acbc <_Z19decl_assembler_nameP9tree_node@plt+0x3f5c>  // b.none
    a9a0:	mov	w1, #0x6476                	// #25718
    a9a4:	cmp	w0, w1
    a9a8:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a9ac:	mov	w1, #0x646c                	// #25708
    a9b0:	cmp	w0, w1
    a9b4:	b.eq	ac44 <_Z19decl_assembler_nameP9tree_node@plt+0x3ee4>  // b.none
    a9b8:	mov	w1, #0x646c                	// #25708
    a9bc:	cmp	w0, w1
    a9c0:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a9c4:	mov	w1, #0x6465                	// #25701
    a9c8:	cmp	w0, w1
    a9cc:	b.eq	ac80 <_Z19decl_assembler_nameP9tree_node@plt+0x3f20>  // b.none
    a9d0:	mov	w1, #0x6465                	// #25701
    a9d4:	cmp	w0, w1
    a9d8:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a9dc:	mov	w1, #0x6461                	// #25697
    a9e0:	cmp	w0, w1
    a9e4:	b.eq	ac50 <_Z19decl_assembler_nameP9tree_node@plt+0x3ef0>  // b.none
    a9e8:	mov	w1, #0x6461                	// #25697
    a9ec:	cmp	w0, w1
    a9f0:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    a9f4:	mov	w1, #0x6456                	// #25686
    a9f8:	cmp	w0, w1
    a9fc:	b.eq	ad48 <_Z19decl_assembler_nameP9tree_node@plt+0x3fe8>  // b.none
    aa00:	mov	w1, #0x6456                	// #25686
    aa04:	cmp	w0, w1
    aa08:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    aa0c:	mov	w1, #0x6376                	// #25462
    aa10:	cmp	w0, w1
    aa14:	b.eq	aeac <_Z19decl_assembler_nameP9tree_node@plt+0x414c>  // b.none
    aa18:	mov	w1, #0x6376                	// #25462
    aa1c:	cmp	w0, w1
    aa20:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    aa24:	mov	w1, #0x636f                	// #25455
    aa28:	cmp	w0, w1
    aa2c:	b.eq	ac8c <_Z19decl_assembler_nameP9tree_node@plt+0x3f2c>  // b.none
    aa30:	mov	w1, #0x636f                	// #25455
    aa34:	cmp	w0, w1
    aa38:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    aa3c:	mov	w1, #0x636d                	// #25453
    aa40:	cmp	w0, w1
    aa44:	b.eq	ae70 <_Z19decl_assembler_nameP9tree_node@plt+0x4110>  // b.none
    aa48:	mov	w1, #0x636d                	// #25453
    aa4c:	cmp	w0, w1
    aa50:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    aa54:	mov	w1, #0x636c                	// #25452
    aa58:	cmp	w0, w1
    aa5c:	b.eq	ae94 <_Z19decl_assembler_nameP9tree_node@plt+0x4134>  // b.none
    aa60:	mov	w1, #0x636c                	// #25452
    aa64:	cmp	w0, w1
    aa68:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    aa6c:	mov	w1, #0x616e                	// #24942
    aa70:	cmp	w0, w1
    aa74:	b.eq	acd4 <_Z19decl_assembler_nameP9tree_node@plt+0x3f74>  // b.none
    aa78:	mov	w1, #0x616e                	// #24942
    aa7c:	cmp	w0, w1
    aa80:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    aa84:	mov	w1, #0x6164                	// #24932
    aa88:	cmp	w0, w1
    aa8c:	b.eq	ac74 <_Z19decl_assembler_nameP9tree_node@plt+0x3f14>  // b.none
    aa90:	mov	w1, #0x6164                	// #24932
    aa94:	cmp	w0, w1
    aa98:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    aa9c:	mov	w1, #0x6161                	// #24929
    aaa0:	cmp	w0, w1
    aaa4:	b.eq	ae40 <_Z19decl_assembler_nameP9tree_node@plt+0x40e0>  // b.none
    aaa8:	mov	w1, #0x6161                	// #24929
    aaac:	cmp	w0, w1
    aab0:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    aab4:	mov	w1, #0x6153                	// #24915
    aab8:	cmp	w0, w1
    aabc:	b.eq	acf8 <_Z19decl_assembler_nameP9tree_node@plt+0x3f98>  // b.none
    aac0:	mov	w1, #0x6153                	// #24915
    aac4:	cmp	w0, w1
    aac8:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    aacc:	mov	w1, #0x614e                	// #24910
    aad0:	cmp	w0, w1
    aad4:	b.eq	ad70 <_Z19decl_assembler_nameP9tree_node@plt+0x4010>  // b.none
    aad8:	mov	w1, #0x614e                	// #24910
    aadc:	cmp	w0, w1
    aae0:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    aae4:	mov	w1, #0x4334                	// #17204
    aae8:	cmp	w0, w1
    aaec:	b.gt	ab70 <_Z19decl_assembler_nameP9tree_node@plt+0x3e10>
    aaf0:	mov	w1, #0x4300                	// #17152
    aaf4:	cmp	w0, w1
    aaf8:	b.ge	ab38 <_Z19decl_assembler_nameP9tree_node@plt+0x3dd8>  // b.tcont
    aafc:	b	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    ab00:	mov	w1, w0
    ab04:	mov	w0, #0xffffbc00            	// #-17408
    ab08:	add	w0, w1, w0
    ab0c:	mov	x1, #0x1                   	// #1
    ab10:	lsl	x1, x1, x0
    ab14:	mov	x0, #0x100000001           	// #4294967297
    ab18:	movk	x0, #0x17, lsl #48
    ab1c:	and	x0, x1, x0
    ab20:	cmp	x0, #0x0
    ab24:	cset	w0, ne  // ne = any
    ab28:	and	w0, w0, #0xff
    ab2c:	cmp	w0, #0x0
    ab30:	b.ne	abfc <_Z19decl_assembler_nameP9tree_node@plt+0x3e9c>  // b.any
    ab34:	b	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    ab38:	mov	w1, w0
    ab3c:	mov	w0, #0xffffbd00            	// #-17152
    ab40:	add	w0, w1, w0
    ab44:	mov	x1, #0x1                   	// #1
    ab48:	lsl	x1, x1, x0
    ab4c:	mov	x0, #0x100000001           	// #4294967297
    ab50:	movk	x0, #0x16, lsl #48
    ab54:	and	x0, x1, x0
    ab58:	cmp	x0, #0x0
    ab5c:	cset	w0, ne  // ne = any
    ab60:	and	w0, w0, #0xff
    ab64:	cmp	w0, #0x0
    ab68:	b.ne	ab8c <_Z19decl_assembler_nameP9tree_node@plt+0x3e2c>  // b.any
    ab6c:	b	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    ab70:	mov	w1, #0x4434                	// #17460
    ab74:	cmp	w0, w1
    ab78:	b.gt	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    ab7c:	mov	w1, #0x4400                	// #17408
    ab80:	cmp	w0, w1
    ab84:	b.ge	ab00 <_Z19decl_assembler_nameP9tree_node@plt+0x3da0>  // b.tcont
    ab88:	b	afa8 <_Z19decl_assembler_nameP9tree_node@plt+0x4248>
    ab8c:	mov	w0, #0x1                   	// #1
    ab90:	strb	w0, [sp, #239]
    ab94:	ldr	x0, [sp, #48]
    ab98:	cmp	x0, #0x0
    ab9c:	b.eq	abb8 <_Z19decl_assembler_nameP9tree_node@plt+0x3e58>  // b.none
    aba0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    aba4:	add	x2, x0, #0x6e0
    aba8:	mov	w1, #0x47f                 	// #1151
    abac:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    abb0:	add	x0, x0, #0x4a8
    abb4:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    abb8:	ldr	x0, [sp, #56]
    abbc:	cmp	x0, #0x0
    abc0:	b.eq	abdc <_Z19decl_assembler_nameP9tree_node@plt+0x3e7c>  // b.none
    abc4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    abc8:	add	x2, x0, #0x6e0
    abcc:	mov	w1, #0x480                 	// #1152
    abd0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    abd4:	add	x0, x0, #0x4a8
    abd8:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    abdc:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    abe0:	ldr	x0, [x0, #3888]
    abe4:	ldr	x0, [x0]
    abe8:	ldr	x0, [x0, #32]
    abec:	ldr	x0, [x0, #120]
    abf0:	ldr	x0, [x0, #32]
    abf4:	str	x0, [sp, #224]
    abf8:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    abfc:	ldrb	w0, [sp, #167]
    ac00:	cmp	w0, #0x0
    ac04:	b.eq	ac20 <_Z19decl_assembler_nameP9tree_node@plt+0x3ec0>  // b.none
    ac08:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    ac0c:	add	x2, x0, #0x6e0
    ac10:	mov	w1, #0x489                 	// #1161
    ac14:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    ac18:	add	x0, x0, #0x4a8
    ac1c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    ac20:	mov	w0, #0x1                   	// #1
    ac24:	strb	w0, [sp, #238]
    ac28:	b	ab94 <_Z19decl_assembler_nameP9tree_node@plt+0x3e34>
    ac2c:	mov	w0, #0xf3                  	// #243
    ac30:	str	w0, [sp, #232]
    ac34:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ac38:	mov	w0, #0xf4                  	// #244
    ac3c:	str	w0, [sp, #232]
    ac40:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ac44:	mov	w0, #0xf5                  	// #245
    ac48:	str	w0, [sp, #232]
    ac4c:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ac50:	mov	w0, #0xf6                  	// #246
    ac54:	str	w0, [sp, #232]
    ac58:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ac5c:	mov	w0, #0x46                  	// #70
    ac60:	str	w0, [sp, #232]
    ac64:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ac68:	mov	w0, #0x47                  	// #71
    ac6c:	str	w0, [sp, #232]
    ac70:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ac74:	mov	w0, #0x63                  	// #99
    ac78:	str	w0, [sp, #232]
    ac7c:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ac80:	mov	w0, #0x48                  	// #72
    ac84:	str	w0, [sp, #232]
    ac88:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ac8c:	mov	w0, #0x64                  	// #100
    ac90:	str	w0, [sp, #232]
    ac94:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ac98:	mov	w0, #0x46                  	// #70
    ac9c:	str	w0, [sp, #232]
    aca0:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    aca4:	mov	w0, #0x47                  	// #71
    aca8:	str	w0, [sp, #232]
    acac:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    acb0:	mov	w0, #0x48                  	// #72
    acb4:	str	w0, [sp, #232]
    acb8:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    acbc:	mov	w0, #0x4c                  	// #76
    acc0:	str	w0, [sp, #232]
    acc4:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    acc8:	mov	w0, #0x50                  	// #80
    accc:	str	w0, [sp, #232]
    acd0:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    acd4:	mov	w0, #0x63                  	// #99
    acd8:	str	w0, [sp, #232]
    acdc:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ace0:	mov	w0, #0x61                  	// #97
    ace4:	str	w0, [sp, #232]
    ace8:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    acec:	mov	w0, #0x62                  	// #98
    acf0:	str	w0, [sp, #232]
    acf4:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    acf8:	mov	w0, #0x7e                  	// #126
    acfc:	str	w0, [sp, #232]
    ad00:	mov	w0, #0x1                   	// #1
    ad04:	strb	w0, [sp, #237]
    ad08:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ad0c:	mov	w0, #0x46                  	// #70
    ad10:	str	w0, [sp, #232]
    ad14:	mov	w0, #0x1                   	// #1
    ad18:	strb	w0, [sp, #237]
    ad1c:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ad20:	mov	w0, #0x47                  	// #71
    ad24:	str	w0, [sp, #232]
    ad28:	mov	w0, #0x1                   	// #1
    ad2c:	strb	w0, [sp, #237]
    ad30:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ad34:	mov	w0, #0x48                  	// #72
    ad38:	str	w0, [sp, #232]
    ad3c:	mov	w0, #0x1                   	// #1
    ad40:	strb	w0, [sp, #237]
    ad44:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ad48:	mov	w0, #0x4c                  	// #76
    ad4c:	str	w0, [sp, #232]
    ad50:	mov	w0, #0x1                   	// #1
    ad54:	strb	w0, [sp, #237]
    ad58:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ad5c:	mov	w0, #0x50                  	// #80
    ad60:	str	w0, [sp, #232]
    ad64:	mov	w0, #0x1                   	// #1
    ad68:	strb	w0, [sp, #237]
    ad6c:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ad70:	mov	w0, #0x63                  	// #99
    ad74:	str	w0, [sp, #232]
    ad78:	mov	w0, #0x1                   	// #1
    ad7c:	strb	w0, [sp, #237]
    ad80:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ad84:	mov	w0, #0x61                  	// #97
    ad88:	str	w0, [sp, #232]
    ad8c:	mov	w0, #0x1                   	// #1
    ad90:	strb	w0, [sp, #237]
    ad94:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ad98:	mov	w0, #0x62                  	// #98
    ad9c:	str	w0, [sp, #232]
    ada0:	mov	w0, #0x1                   	// #1
    ada4:	strb	w0, [sp, #237]
    ada8:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    adac:	mov	w0, #0x5d                  	// #93
    adb0:	str	w0, [sp, #232]
    adb4:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    adb8:	mov	w0, #0x5e                  	// #94
    adbc:	str	w0, [sp, #232]
    adc0:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    adc4:	mov	w0, #0x5d                  	// #93
    adc8:	str	w0, [sp, #232]
    adcc:	mov	w0, #0x1                   	// #1
    add0:	strb	w0, [sp, #237]
    add4:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    add8:	mov	w0, #0x5e                  	// #94
    addc:	str	w0, [sp, #232]
    ade0:	mov	w0, #0x1                   	// #1
    ade4:	strb	w0, [sp, #237]
    ade8:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    adec:	mov	w0, #0x6f                  	// #111
    adf0:	str	w0, [sp, #232]
    adf4:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    adf8:	mov	w0, #0x70                  	// #112
    adfc:	str	w0, [sp, #232]
    ae00:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ae04:	mov	w0, #0x6b                  	// #107
    ae08:	str	w0, [sp, #232]
    ae0c:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ae10:	mov	w0, #0x6d                  	// #109
    ae14:	str	w0, [sp, #232]
    ae18:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ae1c:	mov	w0, #0x6c                  	// #108
    ae20:	str	w0, [sp, #232]
    ae24:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ae28:	mov	w0, #0x6e                  	// #110
    ae2c:	str	w0, [sp, #232]
    ae30:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ae34:	mov	w0, #0x6a                  	// #106
    ae38:	str	w0, [sp, #232]
    ae3c:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ae40:	mov	w0, #0x65                  	// #101
    ae44:	str	w0, [sp, #232]
    ae48:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ae4c:	mov	w0, #0x66                  	// #102
    ae50:	str	w0, [sp, #232]
    ae54:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ae58:	mov	w0, #0x8a                  	// #138
    ae5c:	str	w0, [sp, #232]
    ae60:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ae64:	mov	w0, #0x87                  	// #135
    ae68:	str	w0, [sp, #232]
    ae6c:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ae70:	mov	w0, #0x38                  	// #56
    ae74:	str	w0, [sp, #232]
    ae78:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ae7c:	mov	w0, #0xf8                  	// #248
    ae80:	str	w0, [sp, #232]
    ae84:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ae88:	mov	w0, #0x2e                  	// #46
    ae8c:	str	w0, [sp, #232]
    ae90:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    ae94:	mov	w0, #0x42                  	// #66
    ae98:	str	w0, [sp, #232]
    ae9c:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    aea0:	mov	w0, #0x30                  	// #48
    aea4:	str	w0, [sp, #232]
    aea8:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    aeac:	ldr	x0, [sp, #176]
    aeb0:	ldr	x0, [x0, #8]
    aeb4:	bl	61b0 <_Z17make_conv_op_nameP9tree_node@plt>
    aeb8:	str	x0, [sp, #224]
    aebc:	b	afc4 <_Z19decl_assembler_nameP9tree_node@plt+0x4264>
    aec0:	ldr	x0, [sp, #80]
    aec4:	add	x0, x0, #0x2
    aec8:	str	x0, [sp, #216]
    aecc:	strb	wzr, [sp, #215]
    aed0:	ldr	x0, [sp, #216]
    aed4:	ldrb	w0, [x0]
    aed8:	cmp	w0, #0x2f
    aedc:	b.ls	af84 <_Z19decl_assembler_nameP9tree_node@plt+0x4224>  // b.plast
    aee0:	ldr	x0, [sp, #216]
    aee4:	ldrb	w0, [x0]
    aee8:	cmp	w0, #0x39
    aeec:	b.hi	af84 <_Z19decl_assembler_nameP9tree_node@plt+0x4224>  // b.pmore
    aef0:	str	wzr, [sp, #208]
    aef4:	ldr	w1, [sp, #208]
    aef8:	mov	w0, w1
    aefc:	lsl	w0, w0, #2
    af00:	add	w0, w0, w1
    af04:	lsl	w0, w0, #1
    af08:	str	w0, [sp, #208]
    af0c:	ldr	x0, [sp, #216]
    af10:	ldrb	w0, [x0]
    af14:	mov	w1, w0
    af18:	ldr	w0, [sp, #208]
    af1c:	add	w0, w1, w0
    af20:	sub	w0, w0, #0x30
    af24:	str	w0, [sp, #208]
    af28:	ldr	x0, [sp, #216]
    af2c:	add	x0, x0, #0x1
    af30:	str	x0, [sp, #216]
    af34:	ldr	x0, [sp, #216]
    af38:	ldrb	w0, [x0]
    af3c:	cmp	w0, #0x0
    af40:	b.eq	af68 <_Z19decl_assembler_nameP9tree_node@plt+0x4208>  // b.none
    af44:	ldr	x0, [sp, #216]
    af48:	ldrb	w0, [x0]
    af4c:	cmp	w0, #0x2f
    af50:	b.ls	af68 <_Z19decl_assembler_nameP9tree_node@plt+0x4208>  // b.plast
    af54:	ldr	x0, [sp, #216]
    af58:	ldrb	w0, [x0]
    af5c:	cmp	w0, #0x39
    af60:	b.hi	af68 <_Z19decl_assembler_nameP9tree_node@plt+0x4208>  // b.pmore
    af64:	b	aef4 <_Z19decl_assembler_nameP9tree_node@plt+0x4194>
    af68:	ldr	w0, [sp, #208]
    af6c:	mov	x1, x0
    af70:	ldr	x0, [sp, #216]
    af74:	bl	6b50 <xstrndup@plt>
    af78:	str	x0, [sp, #216]
    af7c:	mov	w0, #0x1                   	// #1
    af80:	strb	w0, [sp, #215]
    af84:	ldr	x0, [sp, #216]
    af88:	bl	6a60 <_Z22cp_literal_operator_idPKc@plt>
    af8c:	str	x0, [sp, #224]
    af90:	ldrb	w0, [sp, #215]
    af94:	cmp	w0, #0x0
    af98:	b.eq	afc0 <_Z19decl_assembler_nameP9tree_node@plt+0x4260>  // b.none
    af9c:	ldr	x0, [sp, #216]
    afa0:	bl	6320 <free@plt>
    afa4:	b	afc0 <_Z19decl_assembler_nameP9tree_node@plt+0x4260>
    afa8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    afac:	add	x2, x0, #0x6e0
    afb0:	mov	w1, #0x541                 	// #1345
    afb4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    afb8:	add	x0, x0, #0x4a8
    afbc:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    afc0:	nop
    afc4:	ldr	w0, [sp, #232]
    afc8:	cmp	w0, #0x0
    afcc:	b.eq	b024 <_Z19decl_assembler_nameP9tree_node@plt+0x42c4>  // b.none
    afd0:	ldrb	w0, [sp, #237]
    afd4:	mov	w4, w0
    afd8:	ldr	w2, [sp, #232]
    afdc:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    afe0:	ldr	x1, [x0, #3800]
    afe4:	sxtw	x0, w2
    afe8:	ldrb	w0, [x1, x0]
    afec:	mov	w1, w0
    aff0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    aff4:	ldr	x2, [x0, #3848]
    aff8:	sxtw	x3, w1
    affc:	sxtw	x1, w4
    b000:	mov	x0, x1
    b004:	lsl	x0, x0, #3
    b008:	sub	x0, x0, x1
    b00c:	lsl	x0, x0, #3
    b010:	add	x0, x0, x3
    b014:	lsl	x0, x0, #5
    b018:	add	x0, x2, x0
    b01c:	ldr	x0, [x0]
    b020:	str	x0, [sp, #224]
    b024:	ldr	x3, [sp, #176]
    b028:	ldr	x2, [sp, #224]
    b02c:	ldr	w1, [sp, #252]
    b030:	ldr	w0, [sp, #160]
    b034:	bl	6060 <_Z19build_lang_decl_locj9tree_codeP9tree_nodeS1_@plt>
    b038:	str	x0, [sp, #240]
    b03c:	ldr	x0, [sp, #240]
    b040:	ldr	x0, [x0, #104]
    b044:	ldrb	w1, [x0, #2]
    b048:	orr	w1, w1, #0x1
    b04c:	strb	w1, [x0, #2]
    b050:	ldr	x0, [sp, #176]
    b054:	ldrh	w0, [x0]
    b058:	cmp	w0, #0x16
    b05c:	b.ne	b094 <_Z19decl_assembler_nameP9tree_node@plt+0x4334>  // b.any
    b060:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    b064:	ldr	x0, [x0, #3888]
    b068:	ldr	x0, [x0]
    b06c:	ldr	x19, [x0, #32]
    b070:	ldr	x0, [sp, #176]
    b074:	bl	63b0 <_Z13cp_type_qualsPK9tree_node@plt>
    b078:	mov	w2, w0
    b07c:	mov	x1, x19
    b080:	ldr	x0, [sp, #240]
    b084:	bl	6270 <_Z15build_this_parmP9tree_nodeS0_i@plt>
    b088:	mov	x1, x0
    b08c:	ldr	x0, [sp, #240]
    b090:	str	x1, [x0, #160]
    b094:	ldr	x0, [sp, #176]
    b098:	ldrh	w0, [x0]
    b09c:	cmp	w0, #0x16
    b0a0:	b.ne	b0b4 <_Z19decl_assembler_nameP9tree_node@plt+0x4354>  // b.any
    b0a4:	ldr	x0, [sp, #176]
    b0a8:	ldr	x0, [x0, #136]
    b0ac:	ldr	x0, [x0, #16]
    b0b0:	b	b0bc <_Z19decl_assembler_nameP9tree_node@plt+0x435c>
    b0b4:	ldr	x0, [sp, #176]
    b0b8:	ldr	x0, [x0, #136]
    b0bc:	str	x0, [sp, #200]
    b0c0:	ldr	x0, [sp, #200]
    b0c4:	cmp	x0, #0x0
    b0c8:	b.eq	b12c <_Z19decl_assembler_nameP9tree_node@plt+0x43cc>  // b.none
    b0cc:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    b0d0:	ldr	x0, [x0, #3976]
    b0d4:	ldr	x0, [x0, #664]
    b0d8:	ldr	x1, [sp, #200]
    b0dc:	cmp	x1, x0
    b0e0:	b.eq	b12c <_Z19decl_assembler_nameP9tree_node@plt+0x43cc>  // b.none
    b0e4:	ldr	x0, [sp, #200]
    b0e8:	ldr	x0, [x0, #32]
    b0ec:	mov	x2, x0
    b0f0:	mov	x1, #0x0                   	// #0
    b0f4:	ldr	x0, [sp, #240]
    b0f8:	bl	6d40 <_Z18cp_build_parm_declP9tree_nodeS0_S0_@plt>
    b0fc:	str	x0, [sp, #136]
    b100:	ldr	x0, [sp, #240]
    b104:	ldr	x1, [x0, #160]
    b108:	ldr	x0, [sp, #136]
    b10c:	str	x1, [x0, #16]
    b110:	ldr	x0, [sp, #240]
    b114:	ldr	x1, [sp, #136]
    b118:	str	x1, [x0, #160]
    b11c:	ldr	x0, [sp, #200]
    b120:	ldr	x0, [x0, #16]
    b124:	str	x0, [sp, #200]
    b128:	b	b0c0 <_Z19decl_assembler_nameP9tree_node@plt+0x4360>
    b12c:	ldr	x0, [sp, #240]
    b130:	ldr	x0, [x0, #160]
    b134:	bl	6d00 <_Z8nreverseP9tree_node@plt>
    b138:	mov	x1, x0
    b13c:	ldr	x0, [sp, #240]
    b140:	str	x1, [x0, #160]
    b144:	ldrb	w0, [sp, #159]
    b148:	cmp	w0, #0x0
    b14c:	b.eq	b23c <_Z19decl_assembler_nameP9tree_node@plt+0x44dc>  // b.none
    b150:	ldr	x0, [sp, #176]
    b154:	ldrh	w0, [x0]
    b158:	cmp	w0, #0x15
    b15c:	b.ne	b190 <_Z19decl_assembler_nameP9tree_node@plt+0x4430>  // b.any
    b160:	ldr	x0, [sp, #240]
    b164:	ldrh	w0, [x0]
    b168:	cmp	w0, #0xff
    b16c:	b.ne	b17c <_Z19decl_assembler_nameP9tree_node@plt+0x441c>  // b.any
    b170:	ldr	x0, [sp, #240]
    b174:	ldr	x0, [x0, #120]
    b178:	b	b180 <_Z19decl_assembler_nameP9tree_node@plt+0x4420>
    b17c:	ldr	x0, [sp, #240]
    b180:	ldr	x0, [x0, #104]
    b184:	ldrb	w1, [x0, #25]
    b188:	orr	w1, w1, #0x1
    b18c:	strb	w1, [x0, #25]
    b190:	ldr	w0, [sp, #172]
    b194:	and	w0, w0, #0x80
    b198:	cmp	w0, #0x0
    b19c:	b.eq	b214 <_Z19decl_assembler_nameP9tree_node@plt+0x44b4>  // b.none
    b1a0:	ldr	x0, [sp, #240]
    b1a4:	ldrb	w1, [x0, #57]
    b1a8:	orr	w1, w1, #0x2
    b1ac:	strb	w1, [x0, #57]
    b1b0:	ldr	w0, [sp, #172]
    b1b4:	and	w0, w0, #0x100
    b1b8:	cmp	w0, #0x0
    b1bc:	b.eq	b1f0 <_Z19decl_assembler_nameP9tree_node@plt+0x4490>  // b.none
    b1c0:	ldr	x0, [sp, #240]
    b1c4:	ldrh	w0, [x0]
    b1c8:	cmp	w0, #0xff
    b1cc:	b.ne	b1dc <_Z19decl_assembler_nameP9tree_node@plt+0x447c>  // b.any
    b1d0:	ldr	x0, [sp, #240]
    b1d4:	ldr	x0, [x0, #120]
    b1d8:	b	b1e0 <_Z19decl_assembler_nameP9tree_node@plt+0x4480>
    b1dc:	ldr	x0, [sp, #240]
    b1e0:	ldr	x0, [x0, #104]
    b1e4:	ldrb	w1, [x0, #25]
    b1e8:	orr	w1, w1, #0x2
    b1ec:	strb	w1, [x0, #25]
    b1f0:	ldr	w0, [sp, #172]
    b1f4:	and	w0, w0, #0x200
    b1f8:	cmp	w0, #0x0
    b1fc:	b.eq	b2a0 <_Z19decl_assembler_nameP9tree_node@plt+0x4540>  // b.none
    b200:	ldr	x0, [sp, #240]
    b204:	ldrb	w1, [x0, #138]
    b208:	orr	w1, w1, #0x1
    b20c:	strb	w1, [x0, #138]
    b210:	b	b2a0 <_Z19decl_assembler_nameP9tree_node@plt+0x4540>
    b214:	ldr	w0, [sp, #172]
    b218:	and	w0, w0, #0x300
    b21c:	cmp	w0, #0x0
    b220:	b.eq	b2a0 <_Z19decl_assembler_nameP9tree_node@plt+0x4540>  // b.none
    b224:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    b228:	add	x2, x0, #0x6e0
    b22c:	mov	w1, #0x568                 	// #1384
    b230:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    b234:	add	x0, x0, #0x4a8
    b238:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    b23c:	ldr	w0, [sp, #172]
    b240:	and	w0, w0, #0x380
    b244:	cmp	w0, #0x0
    b248:	b.eq	b264 <_Z19decl_assembler_nameP9tree_node@plt+0x4504>  // b.none
    b24c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    b250:	add	x2, x0, #0x6e0
    b254:	mov	w1, #0x56d                 	// #1389
    b258:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    b25c:	add	x0, x0, #0x4a8
    b260:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    b264:	ldrb	w0, [sp, #239]
    b268:	cmp	w0, #0x0
    b26c:	b.ne	b288 <_Z19decl_assembler_nameP9tree_node@plt+0x4528>  // b.any
    b270:	ldrb	w0, [sp, #238]
    b274:	cmp	w0, #0x0
    b278:	b.ne	b288 <_Z19decl_assembler_nameP9tree_node@plt+0x4528>  // b.any
    b27c:	ldrb	w0, [sp, #237]
    b280:	cmp	w0, #0x0
    b284:	b.eq	b2a0 <_Z19decl_assembler_nameP9tree_node@plt+0x4540>  // b.none
    b288:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    b28c:	add	x2, x0, #0x6e0
    b290:	mov	w1, #0x570                 	// #1392
    b294:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    b298:	add	x0, x0, #0x4a8
    b29c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    b2a0:	ldr	w0, [sp, #172]
    b2a4:	and	w0, w0, #0x1000
    b2a8:	cmp	w0, #0x0
    b2ac:	b.eq	b2e0 <_Z19decl_assembler_nameP9tree_node@plt+0x4580>  // b.none
    b2b0:	ldr	x0, [sp, #240]
    b2b4:	ldrh	w0, [x0]
    b2b8:	cmp	w0, #0xff
    b2bc:	b.ne	b2cc <_Z19decl_assembler_nameP9tree_node@plt+0x456c>  // b.any
    b2c0:	ldr	x0, [sp, #240]
    b2c4:	ldr	x0, [x0, #120]
    b2c8:	b	b2d0 <_Z19decl_assembler_nameP9tree_node@plt+0x4570>
    b2cc:	ldr	x0, [sp, #240]
    b2d0:	ldr	x0, [x0, #104]
    b2d4:	ldrb	w1, [x0, #25]
    b2d8:	orr	w1, w1, #0x40
    b2dc:	strb	w1, [x0, #25]
    b2e0:	ldr	w0, [sp, #172]
    b2e4:	and	w0, w0, #0x400
    b2e8:	cmp	w0, #0x0
    b2ec:	b.eq	b338 <_Z19decl_assembler_nameP9tree_node@plt+0x45d8>  // b.none
    b2f0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    b2f4:	ldr	x0, [x0, #3936]
    b2f8:	ldr	x0, [x0]
    b2fc:	ldr	x1, [x0, #424]
    b300:	ldr	x0, [sp, #240]
    b304:	str	x1, [x0, #80]
    b308:	ldr	x0, [sp, #240]
    b30c:	ldrh	w0, [x0]
    b310:	cmp	w0, #0xff
    b314:	b.ne	b324 <_Z19decl_assembler_nameP9tree_node@plt+0x45c4>  // b.any
    b318:	ldr	x0, [sp, #240]
    b31c:	ldr	x0, [x0, #120]
    b320:	b	b328 <_Z19decl_assembler_nameP9tree_node@plt+0x45c8>
    b324:	ldr	x0, [sp, #240]
    b328:	ldr	x0, [x0, #104]
    b32c:	ldrb	w1, [x0, #25]
    b330:	orr	w1, w1, #0x4
    b334:	strb	w1, [x0, #25]
    b338:	ldr	w0, [sp, #172]
    b33c:	and	w0, w0, #0x800
    b340:	cmp	w0, #0x0
    b344:	b.eq	b39c <_Z19decl_assembler_nameP9tree_node@plt+0x463c>  // b.none
    b348:	ldr	x0, [sp, #240]
    b34c:	ldrh	w0, [x0]
    b350:	cmp	w0, #0xff
    b354:	b.ne	b364 <_Z19decl_assembler_nameP9tree_node@plt+0x4604>  // b.any
    b358:	ldr	x0, [sp, #240]
    b35c:	ldr	x0, [x0, #120]
    b360:	b	b368 <_Z19decl_assembler_nameP9tree_node@plt+0x4608>
    b364:	ldr	x0, [sp, #240]
    b368:	ldr	x0, [x0, #104]
    b36c:	ldrb	w1, [x0, #2]
    b370:	orr	w1, w1, #0x40
    b374:	strb	w1, [x0, #2]
    b378:	ldr	x0, [sp, #240]
    b37c:	ldrb	w1, [x0, #210]
    b380:	orr	w1, w1, #0x40
    b384:	strb	w1, [x0, #210]
    b388:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    b38c:	ldr	x0, [x0, #3976]
    b390:	ldr	x1, [x0]
    b394:	ldr	x0, [sp, #240]
    b398:	str	x1, [x0, #80]
    b39c:	ldrb	w0, [sp, #239]
    b3a0:	cmp	w0, #0x0
    b3a4:	b.eq	b3bc <_Z19decl_assembler_nameP9tree_node@plt+0x465c>  // b.none
    b3a8:	ldr	x0, [sp, #240]
    b3ac:	ldrb	w1, [x0, #137]
    b3b0:	orr	w1, w1, #0x40
    b3b4:	strb	w1, [x0, #137]
    b3b8:	b	b628 <_Z19decl_assembler_nameP9tree_node@plt+0x48c8>
    b3bc:	ldrb	w0, [sp, #238]
    b3c0:	cmp	w0, #0x0
    b3c4:	b.eq	b3dc <_Z19decl_assembler_nameP9tree_node@plt+0x467c>  // b.none
    b3c8:	ldr	x0, [sp, #240]
    b3cc:	ldrb	w1, [x0, #137]
    b3d0:	orr	w1, w1, #0xffffff80
    b3d4:	strb	w1, [x0, #137]
    b3d8:	b	b628 <_Z19decl_assembler_nameP9tree_node@plt+0x48c8>
    b3dc:	ldr	w0, [sp, #172]
    b3e0:	and	w0, w0, #0x40
    b3e4:	cmp	w0, #0x0
    b3e8:	b.eq	b628 <_Z19decl_assembler_nameP9tree_node@plt+0x48c8>  // b.none
    b3ec:	ldr	w0, [sp, #232]
    b3f0:	cmp	w0, #0x0
    b3f4:	b.eq	b628 <_Z19decl_assembler_nameP9tree_node@plt+0x48c8>  // b.none
    b3f8:	ldr	w2, [sp, #232]
    b3fc:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    b400:	ldr	x1, [x0, #3800]
    b404:	sxtw	x0, w2
    b408:	ldrb	w2, [x1, x0]
    b40c:	ldr	x0, [sp, #240]
    b410:	ldrh	w0, [x0]
    b414:	cmp	w0, #0xff
    b418:	b.ne	b428 <_Z19decl_assembler_nameP9tree_node@plt+0x46c8>  // b.any
    b41c:	ldr	x0, [sp, #240]
    b420:	ldr	x0, [x0, #120]
    b424:	b	b42c <_Z19decl_assembler_nameP9tree_node@plt+0x46cc>
    b428:	ldr	x0, [sp, #240]
    b42c:	ldr	x1, [x0, #104]
    b430:	mov	w0, w2
    b434:	and	w0, w0, #0x3f
    b438:	and	w2, w0, #0xff
    b43c:	ldrb	w0, [x1, #24]
    b440:	bfxil	w0, w2, #0, #6
    b444:	strb	w0, [x1, #24]
    b448:	b	b628 <_Z19decl_assembler_nameP9tree_node@plt+0x48c8>
    b44c:	ldr	w0, [sp, #252]
    b450:	cmp	w0, #0x11
    b454:	b.eq	b464 <_Z19decl_assembler_nameP9tree_node@plt+0x4704>  // b.none
    b458:	ldr	w0, [sp, #252]
    b45c:	cmp	w0, #0x12
    b460:	b.ne	b4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x4758>  // b.any
    b464:	ldr	w2, [sp, #160]
    b468:	ldr	x1, [sp, #224]
    b46c:	ldr	w0, [sp, #252]
    b470:	bl	a1b4 <_Z19decl_assembler_nameP9tree_node@plt+0x3454>
    b474:	str	x0, [sp, #240]
    b478:	ldr	x0, [sp, #240]
    b47c:	ldr	x0, [x0, #8]
    b480:	str	x0, [sp, #144]
    b484:	ldr	w0, [sp, #252]
    b488:	cmp	w0, #0x11
    b48c:	b.ne	b624 <_Z19decl_assembler_nameP9tree_node@plt+0x48c4>  // b.any
    b490:	ldr	w0, [sp, #172]
    b494:	and	w0, w0, #0x40
    b498:	cmp	w0, #0x0
    b49c:	b.ne	b624 <_Z19decl_assembler_nameP9tree_node@plt+0x48c4>  // b.any
    b4a0:	ldr	x0, [sp, #144]
    b4a4:	ldr	x0, [x0, #128]
    b4a8:	ldrb	w1, [x0, #4]
    b4ac:	orr	w1, w1, #0x2
    b4b0:	strb	w1, [x0, #4]
    b4b4:	b	b624 <_Z19decl_assembler_nameP9tree_node@plt+0x48c4>
    b4b8:	ldrb	w0, [sp, #159]
    b4bc:	cmp	w0, #0x0
    b4c0:	b.eq	b594 <_Z19decl_assembler_nameP9tree_node@plt+0x4834>  // b.none
    b4c4:	ldr	x3, [sp, #176]
    b4c8:	ldr	x2, [sp, #224]
    b4cc:	ldr	w1, [sp, #252]
    b4d0:	ldr	w0, [sp, #160]
    b4d4:	bl	6060 <_Z19build_lang_decl_locj9tree_codeP9tree_nodeS1_@plt>
    b4d8:	str	x0, [sp, #240]
    b4dc:	ldr	x0, [sp, #240]
    b4e0:	ldrh	w0, [x0]
    b4e4:	cmp	w0, #0x23
    b4e8:	b.ne	b628 <_Z19decl_assembler_nameP9tree_node@plt+0x48c8>  // b.any
    b4ec:	ldr	x0, [sp, #240]
    b4f0:	ldrb	w1, [x0, #58]
    b4f4:	orr	w1, w1, #0x20
    b4f8:	strb	w1, [x0, #58]
    b4fc:	ldr	x0, [sp, #240]
    b500:	ldrb	w1, [x0, #3]
    b504:	orr	w1, w1, #0x8
    b508:	strb	w1, [x0, #3]
    b50c:	ldr	x0, [sp, #240]
    b510:	ldrb	w1, [x0, #3]
    b514:	orr	w1, w1, #0x4
    b518:	strb	w1, [x0, #3]
    b51c:	ldr	x0, [sp, #240]
    b520:	ldrb	w1, [x0, #58]
    b524:	orr	w1, w1, #0x10
    b528:	strb	w1, [x0, #58]
    b52c:	ldr	w0, [sp, #172]
    b530:	and	w0, w0, #0x80
    b534:	cmp	w0, #0x0
    b538:	b.eq	b554 <_Z19decl_assembler_nameP9tree_node@plt+0x47f4>  // b.none
    b53c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    b540:	add	x2, x0, #0x6e0
    b544:	mov	w1, #0x5a0                 	// #1440
    b548:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    b54c:	add	x0, x0, #0x4a8
    b550:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    b554:	ldr	w0, [sp, #172]
    b558:	and	w0, w0, #0x40
    b55c:	cmp	w0, #0x0
    b560:	b.eq	b628 <_Z19decl_assembler_nameP9tree_node@plt+0x48c8>  // b.none
    b564:	ldr	x0, [sp, #240]
    b568:	ldrh	w0, [x0]
    b56c:	cmp	w0, #0xff
    b570:	b.ne	b580 <_Z19decl_assembler_nameP9tree_node@plt+0x4820>  // b.any
    b574:	ldr	x0, [sp, #240]
    b578:	ldr	x0, [x0, #120]
    b57c:	b	b584 <_Z19decl_assembler_nameP9tree_node@plt+0x4824>
    b580:	ldr	x0, [sp, #240]
    b584:	ldrb	w1, [x0, #58]
    b588:	orr	w1, w1, #0xffffff80
    b58c:	strb	w1, [x0, #58]
    b590:	b	b628 <_Z19decl_assembler_nameP9tree_node@plt+0x48c8>
    b594:	ldr	x3, [sp, #176]
    b598:	ldr	x2, [sp, #224]
    b59c:	ldr	w1, [sp, #252]
    b5a0:	ldr	w0, [sp, #160]
    b5a4:	bl	65c0 <_Z10build_declj9tree_codeP9tree_nodeS1_@plt>
    b5a8:	str	x0, [sp, #240]
    b5ac:	ldr	x0, [sp, #240]
    b5b0:	ldrh	w0, [x0]
    b5b4:	cmp	w0, #0x23
    b5b8:	b.ne	b628 <_Z19decl_assembler_nameP9tree_node@plt+0x48c8>  // b.any
    b5bc:	ldr	w0, [sp, #172]
    b5c0:	and	w0, w0, #0x80
    b5c4:	cmp	w0, #0x0
    b5c8:	b.eq	b5e4 <_Z19decl_assembler_nameP9tree_node@plt+0x4884>  // b.none
    b5cc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    b5d0:	add	x2, x0, #0x6e0
    b5d4:	mov	w1, #0x5ad                 	// #1453
    b5d8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    b5dc:	add	x0, x0, #0x4a8
    b5e0:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    b5e4:	ldr	w0, [sp, #172]
    b5e8:	and	w0, w0, #0x40
    b5ec:	cmp	w0, #0x0
    b5f0:	b.eq	b628 <_Z19decl_assembler_nameP9tree_node@plt+0x48c8>  // b.none
    b5f4:	ldr	x0, [sp, #240]
    b5f8:	ldrh	w0, [x0]
    b5fc:	cmp	w0, #0xff
    b600:	b.ne	b610 <_Z19decl_assembler_nameP9tree_node@plt+0x48b0>  // b.any
    b604:	ldr	x0, [sp, #240]
    b608:	ldr	x0, [x0, #120]
    b60c:	b	b614 <_Z19decl_assembler_nameP9tree_node@plt+0x48b4>
    b610:	ldr	x0, [sp, #240]
    b614:	ldrb	w1, [x0, #58]
    b618:	orr	w1, w1, #0xffffff80
    b61c:	strb	w1, [x0, #58]
    b620:	b	b628 <_Z19decl_assembler_nameP9tree_node@plt+0x48c8>
    b624:	nop
    b628:	ldr	x0, [sp, #240]
    b62c:	ldrb	w1, [x0, #3]
    b630:	orr	w1, w1, #0x1
    b634:	strb	w1, [x0, #3]
    b638:	ldr	x0, [sp, #240]
    b63c:	ldrb	w1, [x0, #2]
    b640:	orr	w1, w1, #0x4
    b644:	strb	w1, [x0, #2]
    b648:	ldrb	w0, [sp, #159]
    b64c:	cmp	w0, #0x0
    b650:	b.eq	b6ac <_Z19decl_assembler_nameP9tree_node@plt+0x494c>  // b.none
    b654:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    b658:	ldr	x0, [x0, #3888]
    b65c:	ldr	x0, [x0]
    b660:	ldr	x1, [x0, #32]
    b664:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    b668:	ldr	x0, [x0, #3880]
    b66c:	ldr	x0, [x0, #104]
    b670:	cmp	x1, x0
    b674:	b.ne	b690 <_Z19decl_assembler_nameP9tree_node@plt+0x4930>  // b.any
    b678:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    b67c:	ldr	x0, [x0, #3888]
    b680:	ldr	x0, [x0]
    b684:	ldr	x0, [x0, #32]
    b688:	ldr	x0, [x0, #40]
    b68c:	b	b6a0 <_Z19decl_assembler_nameP9tree_node@plt+0x4940>
    b690:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    b694:	ldr	x0, [x0, #3888]
    b698:	ldr	x0, [x0]
    b69c:	ldr	x0, [x0, #32]
    b6a0:	ldr	x1, [sp, #240]
    b6a4:	str	x0, [x1, #40]
    b6a8:	b	b6f0 <_Z19decl_assembler_nameP9tree_node@plt+0x4990>
    b6ac:	bl	6610 <_Z20at_namespace_scope_pv@plt>
    b6b0:	and	w0, w0, #0xff
    b6b4:	cmp	w0, #0x0
    b6b8:	b.eq	b6f0 <_Z19decl_assembler_nameP9tree_node@plt+0x4990>  // b.none
    b6bc:	bl	66c0 <_Z22current_decl_namespacev@plt>
    b6c0:	mov	x1, x0
    b6c4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    b6c8:	ldr	x0, [x0, #3880]
    b6cc:	ldr	x0, [x0, #104]
    b6d0:	cmp	x1, x0
    b6d4:	b.ne	b6e4 <_Z19decl_assembler_nameP9tree_node@plt+0x4984>  // b.any
    b6d8:	bl	66c0 <_Z22current_decl_namespacev@plt>
    b6dc:	ldr	x0, [x0, #40]
    b6e0:	b	b6e8 <_Z19decl_assembler_nameP9tree_node@plt+0x4988>
    b6e4:	bl	66c0 <_Z22current_decl_namespacev@plt>
    b6e8:	ldr	x1, [sp, #240]
    b6ec:	str	x0, [x1, #40]
    b6f0:	ldr	w1, [sp, #168]
    b6f4:	ldr	x0, [sp, #240]
    b6f8:	bl	9e78 <_Z19decl_assembler_nameP9tree_node@plt+0x3118>
    b6fc:	ldr	w0, [sp, #76]
    b700:	cmp	w0, #0x2
    b704:	b.ne	b7f4 <_Z19decl_assembler_nameP9tree_node@plt+0x4a94>  // b.any
    b708:	ldrb	w0, [sp, #167]
    b70c:	eor	w0, w0, #0x1
    b710:	and	w0, w0, #0xff
    b714:	cmp	w0, #0x0
    b718:	b.eq	b7f4 <_Z19decl_assembler_nameP9tree_node@plt+0x4a94>  // b.none
    b71c:	ldr	x0, [sp, #240]
    b720:	ldr	x1, [x0, #40]
    b724:	ldr	x0, [sp, #176]
    b728:	ldr	x0, [x0, #112]
    b72c:	cmp	x1, x0
    b730:	b.ne	b7f4 <_Z19decl_assembler_nameP9tree_node@plt+0x4a94>  // b.any
    b734:	ldr	x0, [sp, #176]
    b738:	ldrh	w0, [x0]
    b73c:	cmp	w0, #0x11
    b740:	b.eq	b754 <_Z19decl_assembler_nameP9tree_node@plt+0x49f4>  // b.none
    b744:	ldr	x0, [sp, #176]
    b748:	ldrh	w0, [x0]
    b74c:	cmp	w0, #0x12
    b750:	b.ne	b76c <_Z19decl_assembler_nameP9tree_node@plt+0x4a0c>  // b.any
    b754:	ldr	x0, [sp, #176]
    b758:	ldrb	w0, [x0, #55]
    b75c:	and	w0, w0, #0x40
    b760:	and	w0, w0, #0xff
    b764:	cmp	w0, #0x0
    b768:	b.ne	b77c <_Z19decl_assembler_nameP9tree_node@plt+0x4a1c>  // b.any
    b76c:	ldr	x0, [sp, #176]
    b770:	ldrh	w0, [x0]
    b774:	cmp	w0, #0x6
    b778:	b.ne	b7f4 <_Z19decl_assembler_nameP9tree_node@plt+0x4a94>  // b.any
    b77c:	ldr	x0, [sp, #176]
    b780:	ldr	x0, [x0, #104]
    b784:	ldr	x0, [x0, #120]
    b788:	cmp	x0, #0x0
    b78c:	b.eq	b7d0 <_Z19decl_assembler_nameP9tree_node@plt+0x4a70>  // b.none
    b790:	ldr	x0, [sp, #176]
    b794:	ldr	x0, [x0, #104]
    b798:	ldr	x0, [x0, #120]
    b79c:	ldrh	w0, [x0]
    b7a0:	mov	w1, w0
    b7a4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    b7a8:	ldr	x0, [x0, #3952]
    b7ac:	sxtw	x1, w1
    b7b0:	ldr	w0, [x0, x1, lsl #2]
    b7b4:	cmp	w0, #0x3
    b7b8:	b.ne	b7d0 <_Z19decl_assembler_nameP9tree_node@plt+0x4a70>  // b.any
    b7bc:	ldr	x0, [sp, #176]
    b7c0:	ldr	x0, [x0, #104]
    b7c4:	ldr	x0, [x0, #120]
    b7c8:	ldr	x0, [x0, #32]
    b7cc:	b	b7dc <_Z19decl_assembler_nameP9tree_node@plt+0x4a7c>
    b7d0:	ldr	x0, [sp, #176]
    b7d4:	ldr	x0, [x0, #104]
    b7d8:	ldr	x0, [x0, #120]
    b7dc:	bl	6750 <_Z15anon_aggrname_pPK9tree_node@plt>
    b7e0:	and	w0, w0, #0xff
    b7e4:	cmp	w0, #0x0
    b7e8:	b.eq	b7f4 <_Z19decl_assembler_nameP9tree_node@plt+0x4a94>  // b.none
    b7ec:	mov	w0, #0x1                   	// #1
    b7f0:	b	b7f8 <_Z19decl_assembler_nameP9tree_node@plt+0x4a98>
    b7f4:	mov	w0, #0x0                   	// #0
    b7f8:	cmp	w0, #0x0
    b7fc:	b.eq	b80c <_Z19decl_assembler_nameP9tree_node@plt+0x4aac>  // b.none
    b800:	ldr	x1, [sp, #240]
    b804:	ldr	x0, [sp, #176]
    b808:	bl	65e0 <_Z17name_unnamed_typeP9tree_nodeS0_@plt>
    b80c:	ldr	w0, [sp, #76]
    b810:	cmp	w0, #0x2
    b814:	b.eq	b914 <_Z19decl_assembler_nameP9tree_node@plt+0x4bb4>  // b.none
    b818:	ldr	w0, [sp, #76]
    b81c:	cmp	w0, #0x4
    b820:	b.eq	b914 <_Z19decl_assembler_nameP9tree_node@plt+0x4bb4>  // b.none
    b824:	ldr	w0, [sp, #76]
    b828:	cmp	w0, #0x5
    b82c:	b.eq	b914 <_Z19decl_assembler_nameP9tree_node@plt+0x4bb4>  // b.none
    b830:	ldrb	w0, [sp, #167]
    b834:	eor	w0, w0, #0x1
    b838:	and	w0, w0, #0xff
    b83c:	cmp	w0, #0x0
    b840:	b.eq	b914 <_Z19decl_assembler_nameP9tree_node@plt+0x4bb4>  // b.none
    b844:	ldrb	w0, [sp, #239]
    b848:	eor	w0, w0, #0x1
    b84c:	and	w0, w0, #0xff
    b850:	cmp	w0, #0x0
    b854:	b.eq	b914 <_Z19decl_assembler_nameP9tree_node@plt+0x4bb4>  // b.none
    b858:	ldrb	w0, [sp, #238]
    b85c:	eor	w0, w0, #0x1
    b860:	and	w0, w0, #0xff
    b864:	cmp	w0, #0x0
    b868:	b.eq	b914 <_Z19decl_assembler_nameP9tree_node@plt+0x4bb4>  // b.none
    b86c:	ldr	x0, [sp, #240]
    b870:	ldrb	w1, [x0, #59]
    b874:	orr	w1, w1, #0x2
    b878:	strb	w1, [x0, #59]
    b87c:	ldr	x0, [sp, #240]
    b880:	str	x0, [sp, #96]
    b884:	ldr	x0, [sp, #56]
    b888:	cmp	x0, #0x0
    b88c:	b.eq	b8c0 <_Z19decl_assembler_nameP9tree_node@plt+0x4b60>  // b.none
    b890:	ldr	x0, [sp, #56]
    b894:	bl	6960 <_Z14get_identifierPKc@plt>
    b898:	bl	6590 <_Z11lookup_nameP9tree_node@plt>
    b89c:	str	x0, [sp, #104]
    b8a0:	ldr	x0, [sp, #104]
    b8a4:	cmp	x0, #0x0
    b8a8:	b.ne	b8fc <_Z19decl_assembler_nameP9tree_node@plt+0x4b9c>  // b.any
    b8ac:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    b8b0:	ldr	x0, [x0, #3976]
    b8b4:	ldr	x0, [x0]
    b8b8:	str	x0, [sp, #104]
    b8bc:	b	b8fc <_Z19decl_assembler_nameP9tree_node@plt+0x4b9c>
    b8c0:	ldr	x0, [sp, #48]
    b8c4:	cmp	x0, #0x0
    b8c8:	b.eq	b8f8 <_Z19decl_assembler_nameP9tree_node@plt+0x4b98>  // b.none
    b8cc:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    b8d0:	ldr	x0, [x0, #3976]
    b8d4:	ldr	x19, [x0, #488]
    b8d8:	add	x1, sp, #0x30
    b8dc:	add	x0, sp, #0x70
    b8e0:	bl	13284 <plugin_init@@Base+0x2244>
    b8e4:	ldp	x1, x2, [sp, #112]
    b8e8:	mov	x0, x19
    b8ec:	bl	68d0 <_Z18build_int_cst_typeP9tree_node8poly_intILj2ElE@plt>
    b8f0:	str	x0, [sp, #104]
    b8f4:	b	b8fc <_Z19decl_assembler_nameP9tree_node@plt+0x4b9c>
    b8f8:	str	xzr, [sp, #104]
    b8fc:	ldr	x0, [sp, #104]
    b900:	cmp	x0, #0x0
    b904:	b.eq	b914 <_Z19decl_assembler_nameP9tree_node@plt+0x4bb4>  // b.none
    b908:	ldp	x1, x2, [sp, #96]
    b90c:	ldr	x0, [sp, #184]
    b910:	bl	939c <_Z19decl_assembler_nameP9tree_node@plt+0x263c>
    b914:	ldrb	w0, [sp, #159]
    b918:	cmp	w0, #0x0
    b91c:	b.eq	b954 <_Z19decl_assembler_nameP9tree_node@plt+0x4bf4>  // b.none
    b920:	ldr	w0, [sp, #252]
    b924:	cmp	w0, #0x20
    b928:	b.ne	b954 <_Z19decl_assembler_nameP9tree_node@plt+0x4bf4>  // b.any
    b92c:	ldrb	w0, [sp, #239]
    b930:	cmp	w0, #0x0
    b934:	b.ne	b944 <_Z19decl_assembler_nameP9tree_node@plt+0x4be4>  // b.any
    b938:	ldrb	w0, [sp, #238]
    b93c:	cmp	w0, #0x0
    b940:	b.eq	b94c <_Z19decl_assembler_nameP9tree_node@plt+0x4bec>  // b.none
    b944:	ldr	x0, [sp, #240]
    b948:	bl	6160 <_Z22maybe_retrofit_in_chrgP9tree_node@plt>
    b94c:	ldr	x0, [sp, #240]
    b950:	bl	6cd0 <_Z30grok_special_member_propertiesP9tree_node@plt>
    b954:	ldrb	w0, [sp, #167]
    b958:	cmp	w0, #0x0
    b95c:	b.eq	ba00 <_Z19decl_assembler_nameP9tree_node@plt+0x4ca0>  // b.none
    b960:	ldr	w0, [sp, #252]
    b964:	cmp	w0, #0x11
    b968:	b.eq	b978 <_Z19decl_assembler_nameP9tree_node@plt+0x4c18>  // b.none
    b96c:	ldr	w0, [sp, #252]
    b970:	cmp	w0, #0x12
    b974:	b.ne	b994 <_Z19decl_assembler_nameP9tree_node@plt+0x4c34>  // b.any
    b978:	ldr	x0, [sp, #240]
    b97c:	ldr	x0, [x0, #8]
    b980:	mov	w2, #0x0                   	// #0
    b984:	mov	x1, x0
    b988:	ldr	x0, [sp, #224]
    b98c:	bl	96fc <_Z19decl_assembler_nameP9tree_node@plt+0x299c>
    b990:	b	b9a0 <_Z19decl_assembler_nameP9tree_node@plt+0x4c40>
    b994:	ldr	x0, [sp, #240]
    b998:	bl	96ac <_Z19decl_assembler_nameP9tree_node@plt+0x294c>
    b99c:	str	x0, [sp, #240]
    b9a0:	str	xzr, [sp, #192]
    b9a4:	ldrb	w0, [sp, #159]
    b9a8:	cmp	w0, #0x0
    b9ac:	b.eq	b9bc <_Z19decl_assembler_nameP9tree_node@plt+0x4c5c>  // b.none
    b9b0:	ldr	x0, [sp, #240]
    b9b4:	bl	6220 <_Z27finish_member_template_declP9tree_node@plt>
    b9b8:	str	x0, [sp, #192]
    b9bc:	bl	6790 <_Z17end_template_declv@plt>
    b9c0:	bl	6c40 <_Z21template_parm_scope_pv@plt>
    b9c4:	and	w0, w0, #0xff
    b9c8:	cmp	w0, #0x0
    b9cc:	b.eq	b9e8 <_Z19decl_assembler_nameP9tree_node@plt+0x4c88>  // b.none
    b9d0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    b9d4:	add	x2, x0, #0x6e0
    b9d8:	mov	w1, #0x5f9                 	// #1529
    b9dc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    b9e0:	add	x0, x0, #0x4a8
    b9e4:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    b9e8:	ldrb	w0, [sp, #159]
    b9ec:	cmp	w0, #0x0
    b9f0:	b.eq	ba5c <_Z19decl_assembler_nameP9tree_node@plt+0x4cfc>  // b.none
    b9f4:	ldr	x0, [sp, #192]
    b9f8:	bl	6330 <_Z25finish_member_declarationP9tree_node@plt>
    b9fc:	b	ba5c <_Z19decl_assembler_nameP9tree_node@plt+0x4cfc>
    ba00:	ldr	w0, [sp, #252]
    ba04:	cmp	w0, #0x11
    ba08:	b.eq	ba18 <_Z19decl_assembler_nameP9tree_node@plt+0x4cb8>  // b.none
    ba0c:	ldr	w0, [sp, #252]
    ba10:	cmp	w0, #0x12
    ba14:	b.ne	ba34 <_Z19decl_assembler_nameP9tree_node@plt+0x4cd4>  // b.any
    ba18:	ldr	x0, [sp, #240]
    ba1c:	ldr	x0, [x0, #8]
    ba20:	mov	w2, #0x0                   	// #0
    ba24:	mov	x1, x0
    ba28:	ldr	x0, [sp, #224]
    ba2c:	bl	96fc <_Z19decl_assembler_nameP9tree_node@plt+0x299c>
    ba30:	b	ba5c <_Z19decl_assembler_nameP9tree_node@plt+0x4cfc>
    ba34:	ldrb	w0, [sp, #159]
    ba38:	cmp	w0, #0x0
    ba3c:	b.eq	ba4c <_Z19decl_assembler_nameP9tree_node@plt+0x4cec>  // b.none
    ba40:	ldr	x0, [sp, #240]
    ba44:	bl	6330 <_Z25finish_member_declarationP9tree_node@plt>
    ba48:	b	ba5c <_Z19decl_assembler_nameP9tree_node@plt+0x4cfc>
    ba4c:	mov	w1, #0x0                   	// #0
    ba50:	ldr	x0, [sp, #240]
    ba54:	bl	975c <_Z19decl_assembler_nameP9tree_node@plt+0x29fc>
    ba58:	str	x0, [sp, #240]
    ba5c:	ldrb	w0, [sp, #239]
    ba60:	cmp	w0, #0x0
    ba64:	b.ne	ba74 <_Z19decl_assembler_nameP9tree_node@plt+0x4d14>  // b.any
    ba68:	ldrb	w0, [sp, #238]
    ba6c:	cmp	w0, #0x0
    ba70:	b.eq	bb28 <_Z19decl_assembler_nameP9tree_node@plt+0x4dc8>  // b.none
    ba74:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    ba78:	ldr	x0, [x0, #3888]
    ba7c:	ldr	x0, [x0]
    ba80:	ldr	x0, [x0, #32]
    ba84:	ldr	x0, [x0, #136]
    ba88:	ldr	x1, [sp, #240]
    ba8c:	cmp	x1, x0
    ba90:	b.ne	bb28 <_Z19decl_assembler_nameP9tree_node@plt+0x4dc8>  // b.any
    ba94:	ldr	x0, [sp, #240]
    ba98:	ldr	x0, [x0, #16]
    ba9c:	str	x0, [sp, #128]
    baa0:	ldr	x0, [sp, #240]
    baa4:	str	xzr, [x0, #16]
    baa8:	mov	w1, #0x1                   	// #1
    baac:	ldr	x0, [sp, #240]
    bab0:	bl	60d0 <_Z19clone_function_declP9tree_nodeb@plt>
    bab4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    bab8:	ldr	x0, [x0, #3888]
    babc:	ldr	x0, [x0]
    bac0:	ldr	x0, [x0, #32]
    bac4:	ldr	x0, [x0, #136]
    bac8:	ldr	x1, [sp, #240]
    bacc:	cmp	x1, x0
    bad0:	b.eq	baec <_Z19decl_assembler_nameP9tree_node@plt+0x4d8c>  // b.none
    bad4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    bad8:	add	x2, x0, #0x6e0
    badc:	mov	w1, #0x613                 	// #1555
    bae0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    bae4:	add	x0, x0, #0x4a8
    bae8:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    baec:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    baf0:	ldr	x0, [x0, #3888]
    baf4:	ldr	x0, [x0]
    baf8:	ldr	x0, [x0, #32]
    bafc:	ldr	x1, [x0, #136]
    bb00:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    bb04:	ldr	x0, [x0, #3888]
    bb08:	ldr	x0, [x0]
    bb0c:	ldr	x19, [x0, #32]
    bb10:	mov	x0, x1
    bb14:	bl	6d00 <_Z8nreverseP9tree_node@plt>
    bb18:	str	x0, [x19, #136]
    bb1c:	ldr	x0, [sp, #240]
    bb20:	ldr	x1, [sp, #128]
    bb24:	str	x1, [x0, #16]
    bb28:	bl	6760 <_Z19toplevel_bindings_pv@plt>
    bb2c:	and	w0, w0, #0xff
    bb30:	mov	w2, #0x0                   	// #0
    bb34:	mov	w1, w0
    bb38:	ldr	x0, [sp, #240]
    bb3c:	bl	6530 <_Z24rest_of_decl_compilationP9tree_nodeii@plt>
    bb40:	ldr	x1, [sp, #240]
    bb44:	ldr	x0, [sp, #184]
    bb48:	bl	12710 <plugin_init@@Base+0x16d0>
    bb4c:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    bb50:	ldr	x19, [sp, #16]
    bb54:	ldp	x29, x30, [sp], #256
    bb58:	ret
    bb5c:	stp	x29, x30, [sp, #-80]!
    bb60:	mov	x29, sp
    bb64:	str	x0, [sp, #40]
    bb68:	str	x1, [sp, #32]
    bb6c:	str	x2, [sp, #24]
    bb70:	str	x3, [sp, #16]
    bb74:	ldr	x0, [sp, #40]
    bb78:	str	x0, [sp, #48]
    bb7c:	ldr	x0, [sp, #24]
    bb80:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    bb84:	str	x0, [sp, #72]
    bb88:	strb	wzr, [sp, #71]
    bb8c:	strb	wzr, [sp, #70]
    bb90:	ldr	x0, [sp, #32]
    bb94:	ldrb	w0, [x0]
    bb98:	lsl	w0, w0, #8
    bb9c:	ldr	x1, [sp, #32]
    bba0:	add	x1, x1, #0x1
    bba4:	ldrb	w1, [x1]
    bba8:	orr	w0, w0, w1
    bbac:	mov	w1, #0x4434                	// #17460
    bbb0:	cmp	w0, w1
    bbb4:	b.eq	bce8 <_Z19decl_assembler_nameP9tree_node@plt+0x4f88>  // b.none
    bbb8:	mov	w1, #0x4434                	// #17460
    bbbc:	cmp	w0, w1
    bbc0:	b.gt	bd04 <_Z19decl_assembler_nameP9tree_node@plt+0x4fa4>
    bbc4:	mov	w1, #0x4432                	// #17458
    bbc8:	cmp	w0, w1
    bbcc:	b.eq	bccc <_Z19decl_assembler_nameP9tree_node@plt+0x4f6c>  // b.none
    bbd0:	mov	w1, #0x4432                	// #17458
    bbd4:	cmp	w0, w1
    bbd8:	b.gt	bd04 <_Z19decl_assembler_nameP9tree_node@plt+0x4fa4>
    bbdc:	mov	w1, #0x4431                	// #17457
    bbe0:	cmp	w0, w1
    bbe4:	b.eq	bcb0 <_Z19decl_assembler_nameP9tree_node@plt+0x4f50>  // b.none
    bbe8:	mov	w1, #0x4431                	// #17457
    bbec:	cmp	w0, w1
    bbf0:	b.gt	bd04 <_Z19decl_assembler_nameP9tree_node@plt+0x4fa4>
    bbf4:	mov	w1, #0x4430                	// #17456
    bbf8:	cmp	w0, w1
    bbfc:	b.eq	bc94 <_Z19decl_assembler_nameP9tree_node@plt+0x4f34>  // b.none
    bc00:	mov	w1, #0x4430                	// #17456
    bc04:	cmp	w0, w1
    bc08:	b.gt	bd04 <_Z19decl_assembler_nameP9tree_node@plt+0x4fa4>
    bc0c:	mov	w1, #0x4334                	// #17204
    bc10:	cmp	w0, w1
    bc14:	b.eq	bc78 <_Z19decl_assembler_nameP9tree_node@plt+0x4f18>  // b.none
    bc18:	mov	w1, #0x4334                	// #17204
    bc1c:	cmp	w0, w1
    bc20:	b.gt	bd04 <_Z19decl_assembler_nameP9tree_node@plt+0x4fa4>
    bc24:	mov	w1, #0x4331                	// #17201
    bc28:	cmp	w0, w1
    bc2c:	b.eq	bc40 <_Z19decl_assembler_nameP9tree_node@plt+0x4ee0>  // b.none
    bc30:	mov	w1, #0x4332                	// #17202
    bc34:	cmp	w0, w1
    bc38:	b.eq	bc5c <_Z19decl_assembler_nameP9tree_node@plt+0x4efc>  // b.none
    bc3c:	b	bd04 <_Z19decl_assembler_nameP9tree_node@plt+0x4fa4>
    bc40:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    bc44:	ldr	x0, [x0, #3880]
    bc48:	ldr	x0, [x0, #168]
    bc4c:	str	x0, [sp, #56]
    bc50:	mov	w0, #0x1                   	// #1
    bc54:	strb	w0, [sp, #71]
    bc58:	b	bd1c <_Z19decl_assembler_nameP9tree_node@plt+0x4fbc>
    bc5c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    bc60:	ldr	x0, [x0, #3880]
    bc64:	ldr	x0, [x0, #176]
    bc68:	str	x0, [sp, #56]
    bc6c:	mov	w0, #0x1                   	// #1
    bc70:	strb	w0, [sp, #71]
    bc74:	b	bd1c <_Z19decl_assembler_nameP9tree_node@plt+0x4fbc>
    bc78:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    bc7c:	ldr	x0, [x0, #3880]
    bc80:	ldr	x0, [x0, #160]
    bc84:	str	x0, [sp, #56]
    bc88:	mov	w0, #0x1                   	// #1
    bc8c:	strb	w0, [sp, #71]
    bc90:	b	bd1c <_Z19decl_assembler_nameP9tree_node@plt+0x4fbc>
    bc94:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    bc98:	ldr	x0, [x0, #3880]
    bc9c:	ldr	x0, [x0, #208]
    bca0:	str	x0, [sp, #56]
    bca4:	mov	w0, #0x1                   	// #1
    bca8:	strb	w0, [sp, #70]
    bcac:	b	bd1c <_Z19decl_assembler_nameP9tree_node@plt+0x4fbc>
    bcb0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    bcb4:	ldr	x0, [x0, #3880]
    bcb8:	ldr	x0, [x0, #192]
    bcbc:	str	x0, [sp, #56]
    bcc0:	mov	w0, #0x1                   	// #1
    bcc4:	strb	w0, [sp, #70]
    bcc8:	b	bd1c <_Z19decl_assembler_nameP9tree_node@plt+0x4fbc>
    bccc:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    bcd0:	ldr	x0, [x0, #3880]
    bcd4:	ldr	x0, [x0, #200]
    bcd8:	str	x0, [sp, #56]
    bcdc:	mov	w0, #0x1                   	// #1
    bce0:	strb	w0, [sp, #70]
    bce4:	b	bd1c <_Z19decl_assembler_nameP9tree_node@plt+0x4fbc>
    bce8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    bcec:	ldr	x0, [x0, #3880]
    bcf0:	ldr	x0, [x0, #184]
    bcf4:	str	x0, [sp, #56]
    bcf8:	mov	w0, #0x1                   	// #1
    bcfc:	strb	w0, [sp, #70]
    bd00:	b	bd1c <_Z19decl_assembler_nameP9tree_node@plt+0x4fbc>
    bd04:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    bd08:	add	x2, x0, #0x6f8
    bd0c:	mov	w1, #0x64a                 	// #1610
    bd10:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    bd14:	add	x0, x0, #0x4a8
    bd18:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    bd1c:	ldrb	w0, [sp, #71]
    bd20:	eor	w0, w0, #0x1
    bd24:	and	w0, w0, #0xff
    bd28:	mov	w1, w0
    bd2c:	ldrb	w0, [sp, #70]
    bd30:	eor	w0, w0, #0x1
    bd34:	and	w0, w0, #0xff
    bd38:	cmp	w1, w0
    bd3c:	b.ne	bd58 <_Z19decl_assembler_nameP9tree_node@plt+0x4ff8>  // b.any
    bd40:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    bd44:	add	x2, x0, #0x6f8
    bd48:	mov	w1, #0x64d                 	// #1613
    bd4c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    bd50:	add	x0, x0, #0x4a8
    bd54:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    bd58:	ldrb	w0, [sp, #71]
    bd5c:	cmp	w0, #0x0
    bd60:	b.eq	bdac <_Z19decl_assembler_nameP9tree_node@plt+0x504c>  // b.none
    bd64:	ldr	x0, [sp, #72]
    bd68:	ldr	x1, [x0, #32]
    bd6c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    bd70:	ldr	x0, [x0, #3880]
    bd74:	ldr	x0, [x0, #160]
    bd78:	cmp	x1, x0
    bd7c:	b.ne	bd9c <_Z19decl_assembler_nameP9tree_node@plt+0x503c>  // b.any
    bd80:	ldr	x0, [sp, #72]
    bd84:	ldr	x1, [x0, #32]
    bd88:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    bd8c:	ldr	x0, [x0, #3880]
    bd90:	ldr	x0, [x0, #160]
    bd94:	cmp	x1, x0
    bd98:	b.eq	bda4 <_Z19decl_assembler_nameP9tree_node@plt+0x5044>  // b.none
    bd9c:	mov	w0, #0x1                   	// #1
    bda0:	b	bdf0 <_Z19decl_assembler_nameP9tree_node@plt+0x5090>
    bda4:	mov	w0, #0x0                   	// #0
    bda8:	b	bdf0 <_Z19decl_assembler_nameP9tree_node@plt+0x5090>
    bdac:	ldr	x0, [sp, #72]
    bdb0:	ldr	x1, [x0, #32]
    bdb4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    bdb8:	ldr	x0, [x0, #3880]
    bdbc:	ldr	x0, [x0, #184]
    bdc0:	cmp	x1, x0
    bdc4:	b.ne	bde4 <_Z19decl_assembler_nameP9tree_node@plt+0x5084>  // b.any
    bdc8:	ldr	x0, [sp, #72]
    bdcc:	ldr	x1, [x0, #32]
    bdd0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    bdd4:	ldr	x0, [x0, #3880]
    bdd8:	ldr	x0, [x0, #184]
    bddc:	cmp	x1, x0
    bde0:	b.eq	bdec <_Z19decl_assembler_nameP9tree_node@plt+0x508c>  // b.none
    bde4:	mov	w0, #0x1                   	// #1
    bde8:	b	bdf0 <_Z19decl_assembler_nameP9tree_node@plt+0x5090>
    bdec:	mov	w0, #0x0                   	// #0
    bdf0:	cmp	w0, #0x0
    bdf4:	b.eq	be10 <_Z19decl_assembler_nameP9tree_node@plt+0x50b0>  // b.none
    bdf8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    bdfc:	add	x2, x0, #0x6f8
    be00:	mov	w1, #0x64e                 	// #1614
    be04:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    be08:	add	x0, x0, #0x4a8
    be0c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    be10:	ldr	x0, [sp, #72]
    be14:	cmp	x0, #0x0
    be18:	b.eq	be78 <_Z19decl_assembler_nameP9tree_node@plt+0x5118>  // b.none
    be1c:	ldr	x0, [sp, #72]
    be20:	ldr	x0, [x0, #32]
    be24:	ldr	x1, [sp, #56]
    be28:	cmp	x1, x0
    be2c:	b.eq	be78 <_Z19decl_assembler_nameP9tree_node@plt+0x5118>  // b.none
    be30:	ldr	x0, [sp, #72]
    be34:	ldr	x0, [x0, #16]
    be38:	str	x0, [sp, #72]
    be3c:	ldr	x0, [sp, #72]
    be40:	cmp	x0, #0x0
    be44:	b.eq	be64 <_Z19decl_assembler_nameP9tree_node@plt+0x5104>  // b.none
    be48:	mov	w1, #0x1                   	// #1
    be4c:	ldr	x0, [sp, #72]
    be50:	bl	64e0 <_Z22decl_cloned_function_pPK9tree_nodeb@plt>
    be54:	cmp	x0, #0x0
    be58:	b.ne	be64 <_Z19decl_assembler_nameP9tree_node@plt+0x5104>  // b.any
    be5c:	mov	w0, #0x1                   	// #1
    be60:	b	be68 <_Z19decl_assembler_nameP9tree_node@plt+0x5108>
    be64:	mov	w0, #0x0                   	// #0
    be68:	cmp	w0, #0x0
    be6c:	b.eq	be10 <_Z19decl_assembler_nameP9tree_node@plt+0x50b0>  // b.none
    be70:	str	xzr, [sp, #72]
    be74:	b	be10 <_Z19decl_assembler_nameP9tree_node@plt+0x50b0>
    be78:	ldr	x0, [sp, #72]
    be7c:	cmp	x0, #0x0
    be80:	b.ne	be9c <_Z19decl_assembler_nameP9tree_node@plt+0x513c>  // b.any
    be84:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    be88:	add	x2, x0, #0x6f8
    be8c:	mov	w1, #0x65a                 	// #1626
    be90:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    be94:	add	x0, x0, #0x4a8
    be98:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    be9c:	ldr	x1, [sp, #16]
    bea0:	ldr	x0, [sp, #72]
    bea4:	bl	9348 <_Z19decl_assembler_nameP9tree_node@plt+0x25e8>
    bea8:	mov	x2, x1
    beac:	mov	x1, x0
    beb0:	ldr	x0, [sp, #48]
    beb4:	bl	939c <_Z19decl_assembler_nameP9tree_node@plt+0x263c>
    beb8:	ldr	x0, [sp, #72]
    bebc:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    bec0:	ldp	x29, x30, [sp], #80
    bec4:	ret
    bec8:	stp	x29, x30, [sp, #-64]!
    becc:	mov	x29, sp
    bed0:	str	x0, [sp, #40]
    bed4:	str	x1, [sp, #32]
    bed8:	str	x2, [sp, #24]
    bedc:	ldr	x0, [sp, #32]
    bee0:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    bee4:	str	x0, [sp, #48]
    bee8:	ldr	x0, [sp, #24]
    beec:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    bef0:	str	x0, [sp, #56]
    bef4:	ldr	x0, [sp, #56]
    bef8:	cmp	x0, #0x0
    befc:	b.ne	bf30 <_Z19decl_assembler_nameP9tree_node@plt+0x51d0>  // b.any
    bf00:	bl	6690 <_Z16at_class_scope_pv@plt>
    bf04:	and	w0, w0, #0xff
    bf08:	eor	w0, w0, #0x1
    bf0c:	and	w0, w0, #0xff
    bf10:	cmp	w0, #0x0
    bf14:	b.eq	bf30 <_Z19decl_assembler_nameP9tree_node@plt+0x51d0>  // b.none
    bf18:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    bf1c:	add	x2, x0, #0x718
    bf20:	mov	w1, #0x669                 	// #1641
    bf24:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    bf28:	add	x0, x0, #0x4a8
    bf2c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    bf30:	ldr	x0, [sp, #56]
    bf34:	cmp	x0, #0x0
    bf38:	b.ne	bf54 <_Z19decl_assembler_nameP9tree_node@plt+0x51f4>  // b.any
    bf3c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    bf40:	ldr	x0, [x0, #3888]
    bf44:	ldr	x0, [x0]
    bf48:	ldr	x0, [x0, #32]
    bf4c:	str	x0, [sp, #56]
    bf50:	b	bf7c <_Z19decl_assembler_nameP9tree_node@plt+0x521c>
    bf54:	ldr	x0, [sp, #56]
    bf58:	ldrh	w0, [x0]
    bf5c:	cmp	w0, #0x11
    bf60:	b.eq	bf7c <_Z19decl_assembler_nameP9tree_node@plt+0x521c>  // b.none
    bf64:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    bf68:	add	x2, x0, #0x718
    bf6c:	mov	w1, #0x66e                 	// #1646
    bf70:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    bf74:	add	x0, x0, #0x4a8
    bf78:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    bf7c:	ldr	x0, [sp, #48]
    bf80:	ldrh	w0, [x0]
    bf84:	mov	w1, w0
    bf88:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    bf8c:	ldr	x0, [x0, #3952]
    bf90:	sxtw	x1, w1
    bf94:	ldr	w0, [x0, x1, lsl #2]
    bf98:	cmp	w0, #0x2
    bf9c:	b.ne	bfbc <_Z19decl_assembler_nameP9tree_node@plt+0x525c>  // b.any
    bfa0:	ldr	x0, [sp, #48]
    bfa4:	ldr	x0, [x0, #8]
    bfa8:	mov	w2, #0x1                   	// #1
    bfac:	mov	x1, x0
    bfb0:	ldr	x0, [sp, #56]
    bfb4:	bl	6cf0 <_Z17make_friend_classP9tree_nodeS0_b@plt>
    bfb8:	b	bfe0 <_Z19decl_assembler_nameP9tree_node@plt+0x5280>
    bfbc:	ldr	x0, [sp, #48]
    bfc0:	ldr	x0, [x0, #104]
    bfc4:	ldrb	w1, [x0, #3]
    bfc8:	orr	w1, w1, #0x1
    bfcc:	strb	w1, [x0, #3]
    bfd0:	mov	w2, #0x1                   	// #1
    bfd4:	ldr	x1, [sp, #48]
    bfd8:	ldr	x0, [sp, #56]
    bfdc:	bl	6090 <_Z10add_friendP9tree_nodeS0_b@plt>
    bfe0:	mov	w0, #0x1                   	// #1
    bfe4:	ldp	x29, x30, [sp], #64
    bfe8:	ret
    bfec:	stp	x29, x30, [sp, #-32]!
    bff0:	mov	x29, sp
    bff4:	str	x0, [sp, #24]
    bff8:	str	x1, [sp, #16]
    bffc:	ldr	x0, [sp, #16]
    c000:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    c004:	bl	64f0 <_Z18build_pointer_typeP9tree_node@plt>
    c008:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    c00c:	ldp	x29, x30, [sp], #32
    c010:	ret
    c014:	stp	x29, x30, [sp, #-64]!
    c018:	mov	x29, sp
    c01c:	str	x0, [sp, #40]
    c020:	str	x1, [sp, #32]
    c024:	str	w2, [sp, #28]
    c028:	ldr	w0, [sp, #28]
    c02c:	cmp	w0, #0x1
    c030:	b.eq	c040 <_Z19decl_assembler_nameP9tree_node@plt+0x52e0>  // b.none
    c034:	cmp	w0, #0x2
    c038:	b.eq	c048 <_Z19decl_assembler_nameP9tree_node@plt+0x52e8>  // b.none
    c03c:	b	c054 <_Z19decl_assembler_nameP9tree_node@plt+0x52f4>
    c040:	strb	wzr, [sp, #63]
    c044:	b	c06c <_Z19decl_assembler_nameP9tree_node@plt+0x530c>
    c048:	mov	w0, #0x1                   	// #1
    c04c:	strb	w0, [sp, #63]
    c050:	b	c06c <_Z19decl_assembler_nameP9tree_node@plt+0x530c>
    c054:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c058:	add	x2, x0, #0x730
    c05c:	mov	w1, #0x694                 	// #1684
    c060:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c064:	add	x0, x0, #0x4a8
    c068:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    c06c:	ldr	x0, [sp, #32]
    c070:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    c074:	ldrb	w1, [sp, #63]
    c078:	bl	6920 <_Z23cp_build_reference_typeP9tree_nodeb@plt>
    c07c:	str	x0, [sp, #48]
    c080:	ldr	x0, [sp, #48]
    c084:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    c088:	ldp	x29, x30, [sp], #64
    c08c:	ret
    c090:	stp	x29, x30, [sp, #-64]!
    c094:	mov	x29, sp
    c098:	str	x0, [sp, #24]
    c09c:	str	x1, [sp, #16]
    c0a0:	str	xzr, [sp, #56]
    c0a4:	ldr	x0, [sp, #16]
    c0a8:	cmp	x0, #0x0
    c0ac:	b.eq	c230 <_Z19decl_assembler_nameP9tree_node@plt+0x54d0>  // b.none
    c0b0:	str	wzr, [sp, #52]
    c0b4:	ldr	x0, [sp, #16]
    c0b8:	ldr	w0, [x0]
    c0bc:	ldr	w1, [sp, #52]
    c0c0:	cmp	w1, w0
    c0c4:	b.ge	c224 <_Z19decl_assembler_nameP9tree_node@plt+0x54c4>  // b.tcont
    c0c8:	ldr	x0, [sp, #16]
    c0cc:	ldr	x1, [x0, #16]
    c0d0:	ldrsw	x0, [sp, #52]
    c0d4:	lsl	x0, x0, #2
    c0d8:	add	x0, x1, x0
    c0dc:	ldr	w0, [x0]
    c0e0:	and	w0, w0, #0xf
    c0e4:	cmp	w0, #0x8
    c0e8:	b.eq	c104 <_Z19decl_assembler_nameP9tree_node@plt+0x53a4>  // b.none
    c0ec:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c0f0:	add	x2, x0, #0x750
    c0f4:	mov	w1, #0x6a7                 	// #1703
    c0f8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c0fc:	add	x0, x0, #0x4a8
    c100:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    c104:	ldr	x0, [sp, #16]
    c108:	ldr	x1, [x0, #16]
    c10c:	ldrsw	x0, [sp, #52]
    c110:	lsl	x0, x0, #2
    c114:	add	x0, x1, x0
    c118:	ldr	w0, [x0]
    c11c:	and	w0, w0, #0x30
    c120:	cmp	w0, #0x30
    c124:	b.eq	c15c <_Z19decl_assembler_nameP9tree_node@plt+0x53fc>  // b.none
    c128:	cmp	w0, #0x30
    c12c:	b.gt	c18c <_Z19decl_assembler_nameP9tree_node@plt+0x542c>
    c130:	cmp	w0, #0x10
    c134:	b.eq	c144 <_Z19decl_assembler_nameP9tree_node@plt+0x53e4>  // b.none
    c138:	cmp	w0, #0x20
    c13c:	b.eq	c174 <_Z19decl_assembler_nameP9tree_node@plt+0x5414>  // b.none
    c140:	b	c18c <_Z19decl_assembler_nameP9tree_node@plt+0x542c>
    c144:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    c148:	ldr	x0, [x0, #3936]
    c14c:	ldr	x0, [x0]
    c150:	ldr	x0, [x0, #840]
    c154:	str	x0, [sp, #40]
    c158:	b	c1a4 <_Z19decl_assembler_nameP9tree_node@plt+0x5444>
    c15c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    c160:	ldr	x0, [x0, #3936]
    c164:	ldr	x0, [x0]
    c168:	ldr	x0, [x0, #848]
    c16c:	str	x0, [sp, #40]
    c170:	b	c1a4 <_Z19decl_assembler_nameP9tree_node@plt+0x5444>
    c174:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    c178:	ldr	x0, [x0, #3936]
    c17c:	ldr	x0, [x0]
    c180:	ldr	x0, [x0, #832]
    c184:	str	x0, [sp, #40]
    c188:	b	c1a4 <_Z19decl_assembler_nameP9tree_node@plt+0x5444>
    c18c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c190:	add	x2, x0, #0x750
    c194:	mov	w1, #0x6b9                 	// #1721
    c198:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c19c:	add	x0, x0, #0x4a8
    c1a0:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    c1a4:	ldr	x0, [sp, #16]
    c1a8:	ldr	x1, [x0, #8]
    c1ac:	ldrsw	x0, [sp, #52]
    c1b0:	lsl	x0, x0, #3
    c1b4:	add	x0, x1, x0
    c1b8:	ldr	x0, [x0]
    c1bc:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    c1c0:	mov	x3, x0
    c1c4:	ldr	x0, [sp, #16]
    c1c8:	ldr	x1, [x0, #16]
    c1cc:	ldrsw	x0, [sp, #52]
    c1d0:	lsl	x0, x0, #2
    c1d4:	add	x0, x1, x0
    c1d8:	ldr	w0, [x0]
    c1dc:	and	w0, w0, #0x40
    c1e0:	cmp	w0, #0x0
    c1e4:	cset	w0, ne  // ne = any
    c1e8:	and	w0, w0, #0xff
    c1ec:	mov	w2, w0
    c1f0:	ldr	x1, [sp, #40]
    c1f4:	mov	x0, x3
    c1f8:	bl	6890 <_Z21finish_base_specifierP9tree_nodeS0_b@plt>
    c1fc:	str	x0, [sp, #32]
    c200:	ldr	x0, [sp, #32]
    c204:	ldr	x1, [sp, #56]
    c208:	str	x1, [x0, #16]
    c20c:	ldr	x0, [sp, #32]
    c210:	str	x0, [sp, #56]
    c214:	ldr	w0, [sp, #52]
    c218:	add	w0, w0, #0x1
    c21c:	str	w0, [sp, #52]
    c220:	b	c0b4 <_Z19decl_assembler_nameP9tree_node@plt+0x5354>
    c224:	ldr	x0, [sp, #56]
    c228:	bl	6d00 <_Z8nreverseP9tree_node@plt>
    c22c:	str	x0, [sp, #56]
    c230:	ldr	x1, [sp, #56]
    c234:	ldr	x0, [sp, #24]
    c238:	bl	63a0 <_Z14xref_basetypesP9tree_nodeS0_@plt>
    c23c:	ldr	x0, [sp, #24]
    c240:	bl	63f0 <_Z22begin_class_definitionP9tree_node@plt>
    c244:	ldr	x0, [sp, #24]
    c248:	ldp	x29, x30, [sp], #64
    c24c:	ret
    c250:	stp	x29, x30, [sp, #-112]!
    c254:	mov	x29, sp
    c258:	str	x0, [sp, #56]
    c25c:	str	x1, [sp, #48]
    c260:	str	x2, [sp, #40]
    c264:	str	x3, [sp, #32]
    c268:	str	w4, [sp, #28]
    c26c:	ldr	x0, [sp, #56]
    c270:	str	x0, [sp, #104]
    c274:	ldr	w2, [sp, #28]
    c278:	ldr	x1, [sp, #32]
    c27c:	ldr	x0, [sp, #104]
    c280:	bl	12750 <plugin_init@@Base+0x1710>
    c284:	str	w0, [sp, #100]
    c288:	ldr	x0, [sp, #48]
    c28c:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    c290:	str	x0, [sp, #88]
    c294:	ldr	x0, [sp, #88]
    c298:	ldr	x0, [x0, #8]
    c29c:	str	x0, [sp, #80]
    c2a0:	ldr	x0, [sp, #80]
    c2a4:	ldrh	w0, [x0]
    c2a8:	cmp	w0, #0x11
    c2ac:	b.eq	c2d8 <_Z19decl_assembler_nameP9tree_node@plt+0x5578>  // b.none
    c2b0:	ldr	x0, [sp, #80]
    c2b4:	ldrh	w0, [x0]
    c2b8:	cmp	w0, #0x12
    c2bc:	b.eq	c2d8 <_Z19decl_assembler_nameP9tree_node@plt+0x5578>  // b.none
    c2c0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c2c4:	add	x2, x0, #0x760
    c2c8:	mov	w1, #0x6d5                 	// #1749
    c2cc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c2d0:	add	x0, x0, #0x4a8
    c2d4:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    c2d8:	ldr	x0, [sp, #80]
    c2dc:	ldr	x0, [x0, #24]
    c2e0:	cmp	x0, #0x0
    c2e4:	b.eq	c300 <_Z19decl_assembler_nameP9tree_node@plt+0x55a0>  // b.none
    c2e8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c2ec:	add	x2, x0, #0x760
    c2f0:	mov	w1, #0x6d6                 	// #1750
    c2f4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c2f8:	add	x0, x0, #0x4a8
    c2fc:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    c300:	ldr	x0, [sp, #88]
    c304:	ldr	w1, [sp, #100]
    c308:	str	w1, [x0, #24]
    c30c:	ldr	x1, [sp, #40]
    c310:	ldr	x0, [sp, #80]
    c314:	bl	c090 <_Z19decl_assembler_nameP9tree_node@plt+0x5330>
    c318:	str	x0, [sp, #72]
    c31c:	ldr	x1, [sp, #72]
    c320:	ldr	x0, [sp, #104]
    c324:	bl	12710 <plugin_init@@Base+0x16d0>
    c328:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    c32c:	ldp	x29, x30, [sp], #112
    c330:	ret
    c334:	stp	x29, x30, [sp, #-128]!
    c338:	mov	x29, sp
    c33c:	str	x19, [sp, #16]
    c340:	str	x0, [sp, #72]
    c344:	str	w1, [sp, #68]
    c348:	str	x2, [sp, #56]
    c34c:	str	w3, [sp, #64]
    c350:	str	x4, [sp, #48]
    c354:	str	w5, [sp, #44]
    c358:	ldr	x0, [sp, #72]
    c35c:	str	x0, [sp, #112]
    c360:	ldr	x0, [sp, #56]
    c364:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    c368:	str	x0, [sp, #104]
    c36c:	ldr	w0, [sp, #64]
    c370:	and	w0, w0, #0xf
    c374:	cmp	w0, #0xa
    c378:	b.eq	c394 <_Z19decl_assembler_nameP9tree_node@plt+0x5634>  // b.none
    c37c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c380:	add	x2, x0, #0x778
    c384:	mov	w1, #0x6ea                 	// #1770
    c388:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c38c:	add	x0, x0, #0x4a8
    c390:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    c394:	ldr	w0, [sp, #64]
    c398:	and	w0, w0, #0xffffffc0
    c39c:	cmp	w0, #0x0
    c3a0:	b.eq	c3bc <_Z19decl_assembler_nameP9tree_node@plt+0x565c>  // b.none
    c3a4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c3a8:	add	x2, x0, #0x778
    c3ac:	mov	w1, #0x6eb                 	// #1771
    c3b0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c3b4:	add	x0, x0, #0x4a8
    c3b8:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    c3bc:	ldr	w0, [sp, #64]
    c3c0:	and	w0, w0, #0x30
    c3c4:	cmp	w0, #0x0
    c3c8:	cset	w0, eq  // eq = none
    c3cc:	and	w0, w0, #0xff
    c3d0:	mov	w19, w0
    c3d4:	bl	6690 <_Z16at_class_scope_pv@plt>
    c3d8:	and	w0, w0, #0xff
    c3dc:	eor	w0, w0, #0x1
    c3e0:	and	w0, w0, #0xff
    c3e4:	cmp	w19, w0
    c3e8:	b.eq	c404 <_Z19decl_assembler_nameP9tree_node@plt+0x56a4>  // b.none
    c3ec:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c3f0:	add	x2, x0, #0x778
    c3f4:	mov	w1, #0x6ed                 	// #1773
    c3f8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c3fc:	add	x0, x0, #0x4a8
    c400:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    c404:	bl	60e0 <_Z19at_function_scope_pv@plt>
    c408:	cmp	w0, #0x0
    c40c:	b.eq	c428 <_Z19decl_assembler_nameP9tree_node@plt+0x56c8>  // b.none
    c410:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c414:	add	x2, x0, #0x778
    c418:	mov	w1, #0x6f0                 	// #1776
    c41c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c420:	add	x0, x0, #0x4a8
    c424:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    c428:	ldr	x0, [sp, #104]
    c42c:	cmp	x0, #0x0
    c430:	b.eq	c570 <_Z19decl_assembler_nameP9tree_node@plt+0x5810>  // b.none
    c434:	ldr	x0, [sp, #104]
    c438:	ldrh	w0, [x0]
    c43c:	cmp	w0, #0x25
    c440:	b.ne	c4cc <_Z19decl_assembler_nameP9tree_node@plt+0x576c>  // b.any
    c444:	bl	7a24 <_Z19decl_assembler_nameP9tree_node@plt+0xcc4>
    c448:	and	w0, w0, #0xff
    c44c:	eor	w0, w0, #0x1
    c450:	and	w0, w0, #0xff
    c454:	cmp	w0, #0x0
    c458:	b.eq	c474 <_Z19decl_assembler_nameP9tree_node@plt+0x5714>  // b.none
    c45c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c460:	add	x2, x0, #0x778
    c464:	mov	w1, #0x6f6                 	// #1782
    c468:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c46c:	add	x0, x0, #0x4a8
    c470:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    c474:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    c478:	ldr	x0, [x0, #3872]
    c47c:	ldr	x0, [x0]
    c480:	ldr	x0, [x0, #160]
    c484:	str	x0, [sp, #120]
    c488:	ldr	x0, [sp, #120]
    c48c:	cmp	x0, #0x0
    c490:	b.ne	c4ac <_Z19decl_assembler_nameP9tree_node@plt+0x574c>  // b.any
    c494:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c498:	add	x2, x0, #0x778
    c49c:	mov	w1, #0x6fc                 	// #1788
    c4a0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c4a4:	add	x0, x0, #0x4a8
    c4a8:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    c4ac:	ldr	x1, [sp, #120]
    c4b0:	ldr	x0, [sp, #104]
    c4b4:	cmp	x1, x0
    c4b8:	b.eq	c56c <_Z19decl_assembler_nameP9tree_node@plt+0x580c>  // b.none
    c4bc:	ldr	x0, [sp, #120]
    c4c0:	ldr	x0, [x0, #16]
    c4c4:	str	x0, [sp, #120]
    c4c8:	b	c488 <_Z19decl_assembler_nameP9tree_node@plt+0x5728>
    c4cc:	ldr	x0, [sp, #104]
    c4d0:	ldrh	w0, [x0]
    c4d4:	cmp	w0, #0x22
    c4d8:	b.ne	c544 <_Z19decl_assembler_nameP9tree_node@plt+0x57e4>  // b.any
    c4dc:	bl	6690 <_Z16at_class_scope_pv@plt>
    c4e0:	and	w0, w0, #0xff
    c4e4:	eor	w0, w0, #0x1
    c4e8:	and	w0, w0, #0xff
    c4ec:	cmp	w0, #0x0
    c4f0:	b.eq	c50c <_Z19decl_assembler_nameP9tree_node@plt+0x57ac>  // b.none
    c4f4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c4f8:	add	x2, x0, #0x778
    c4fc:	mov	w1, #0x703                 	// #1795
    c500:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c504:	add	x0, x0, #0x4a8
    c508:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    c50c:	ldr	x0, [sp, #104]
    c510:	ldr	x1, [x0, #40]
    c514:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    c518:	ldr	x0, [x0, #3888]
    c51c:	ldr	x0, [x0]
    c520:	ldr	x0, [x0, #32]
    c524:	cmp	x1, x0
    c528:	b.eq	c570 <_Z19decl_assembler_nameP9tree_node@plt+0x5810>  // b.none
    c52c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c530:	add	x2, x0, #0x778
    c534:	mov	w1, #0x704                 	// #1796
    c538:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c53c:	add	x0, x0, #0x4a8
    c540:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    c544:	ldr	x0, [sp, #104]
    c548:	ldrh	w0, [x0]
    c54c:	cmp	w0, #0x23
    c550:	b.eq	c570 <_Z19decl_assembler_nameP9tree_node@plt+0x5810>  // b.none
    c554:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c558:	add	x2, x0, #0x778
    c55c:	mov	w1, #0x708                 	// #1800
    c560:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c564:	add	x0, x0, #0x4a8
    c568:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    c56c:	nop
    c570:	bl	6660 <_Z17build_lambda_exprv@plt>
    c574:	str	x0, [sp, #96]
    c578:	ldr	w2, [sp, #44]
    c57c:	ldr	x1, [sp, #48]
    c580:	ldr	x0, [sp, #112]
    c584:	bl	12750 <plugin_init@@Base+0x1710>
    c588:	mov	w1, w0
    c58c:	ldr	x0, [sp, #96]
    c590:	str	w1, [x0, #48]
    c594:	ldr	x0, [sp, #96]
    c598:	bl	6bc0 <_Z17begin_lambda_typeP9tree_node@plt>
    c59c:	str	x0, [sp, #88]
    c5a0:	ldr	x0, [sp, #96]
    c5a4:	ldr	x1, [sp, #104]
    c5a8:	str	x1, [x0, #32]
    c5ac:	ldr	x0, [sp, #96]
    c5b0:	ldr	w1, [sp, #68]
    c5b4:	str	w1, [x0, #56]
    c5b8:	ldr	x0, [sp, #88]
    c5bc:	ldr	x0, [x0, #120]
    c5c0:	str	x0, [sp, #80]
    c5c4:	ldr	x0, [sp, #80]
    c5c8:	bl	60a0 <_Z20determine_visibilityP9tree_node@plt>
    c5cc:	ldr	w1, [sp, #64]
    c5d0:	ldr	x0, [sp, #80]
    c5d4:	bl	9e78 <_Z19decl_assembler_nameP9tree_node@plt+0x3118>
    c5d8:	ldr	x1, [sp, #88]
    c5dc:	ldr	x0, [sp, #112]
    c5e0:	bl	12710 <plugin_init@@Base+0x16d0>
    c5e4:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    c5e8:	ldr	x19, [sp, #16]
    c5ec:	ldp	x29, x30, [sp], #128
    c5f0:	ret
    c5f4:	stp	x29, x30, [sp, #-64]!
    c5f8:	mov	x29, sp
    c5fc:	str	x0, [sp, #24]
    c600:	str	x1, [sp, #16]
    c604:	ldr	x0, [sp, #24]
    c608:	str	x0, [sp, #56]
    c60c:	ldr	x0, [sp, #16]
    c610:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    c614:	str	x0, [sp, #48]
    c618:	ldr	x0, [sp, #48]
    c61c:	ldrh	w0, [x0]
    c620:	cmp	w0, #0x11
    c624:	b.eq	c638 <_Z19decl_assembler_nameP9tree_node@plt+0x58d8>  // b.none
    c628:	ldr	x0, [sp, #48]
    c62c:	ldrh	w0, [x0]
    c630:	cmp	w0, #0x12
    c634:	b.ne	c664 <_Z19decl_assembler_nameP9tree_node@plt+0x5904>  // b.any
    c638:	ldr	x0, [sp, #48]
    c63c:	ldrb	w0, [x0, #55]
    c640:	and	w0, w0, #0x40
    c644:	and	w0, w0, #0xff
    c648:	cmp	w0, #0x0
    c64c:	b.eq	c664 <_Z19decl_assembler_nameP9tree_node@plt+0x5904>  // b.none
    c650:	ldr	x0, [sp, #48]
    c654:	ldr	x0, [x0, #128]
    c658:	ldr	x0, [x0, #120]
    c65c:	cmp	x0, #0x0
    c660:	b.ne	c67c <_Z19decl_assembler_nameP9tree_node@plt+0x591c>  // b.any
    c664:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c668:	add	x2, x0, #0x798
    c66c:	mov	w1, #0x724                 	// #1828
    c670:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c674:	add	x0, x0, #0x4a8
    c678:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    c67c:	ldr	x0, [sp, #48]
    c680:	ldr	x0, [x0, #128]
    c684:	ldr	x0, [x0, #120]
    c688:	str	x0, [sp, #40]
    c68c:	ldr	x0, [sp, #40]
    c690:	bl	62e0 <_Z19build_lambda_objectP9tree_node@plt>
    c694:	str	x0, [sp, #32]
    c698:	ldr	x1, [sp, #32]
    c69c:	ldr	x0, [sp, #56]
    c6a0:	bl	12710 <plugin_init@@Base+0x16d0>
    c6a4:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    c6a8:	ldp	x29, x30, [sp], #64
    c6ac:	ret
    c6b0:	stp	x29, x30, [sp, #-160]!
    c6b4:	mov	x29, sp
    c6b8:	str	x0, [sp, #56]
    c6bc:	str	x1, [sp, #48]
    c6c0:	str	x2, [sp, #40]
    c6c4:	str	w3, [sp, #36]
    c6c8:	str	x4, [sp, #24]
    c6cc:	str	x5, [sp, #16]
    c6d0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    c6d4:	ldr	x0, [x0, #3888]
    c6d8:	ldr	x0, [x0]
    c6dc:	ldr	x0, [x0, #32]
    c6e0:	str	x0, [sp, #152]
    c6e4:	ldr	x0, [sp, #40]
    c6e8:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    c6ec:	str	x0, [sp, #144]
    c6f0:	bl	6690 <_Z16at_class_scope_pv@plt>
    c6f4:	and	w0, w0, #0xff
    c6f8:	eor	w0, w0, #0x1
    c6fc:	and	w0, w0, #0xff
    c700:	cmp	w0, #0x0
    c704:	b.eq	c720 <_Z19decl_assembler_nameP9tree_node@plt+0x59c0>  // b.none
    c708:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c70c:	add	x2, x0, #0x7b8
    c710:	mov	w1, #0x738                 	// #1848
    c714:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c718:	add	x0, x0, #0x4a8
    c71c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    c720:	ldr	x0, [sp, #152]
    c724:	ldrh	w0, [x0]
    c728:	cmp	w0, #0x11
    c72c:	b.eq	c758 <_Z19decl_assembler_nameP9tree_node@plt+0x59f8>  // b.none
    c730:	ldr	x0, [sp, #152]
    c734:	ldrh	w0, [x0]
    c738:	cmp	w0, #0x12
    c73c:	b.eq	c758 <_Z19decl_assembler_nameP9tree_node@plt+0x59f8>  // b.none
    c740:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c744:	add	x2, x0, #0x7b8
    c748:	mov	w1, #0x739                 	// #1849
    c74c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c750:	add	x0, x0, #0x4a8
    c754:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    c758:	ldr	w0, [sp, #36]
    c75c:	and	w0, w0, #0xf
    c760:	cmp	w0, #0x7
    c764:	b.eq	c780 <_Z19decl_assembler_nameP9tree_node@plt+0x5a20>  // b.none
    c768:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c76c:	add	x2, x0, #0x7b8
    c770:	mov	w1, #0x73a                 	// #1850
    c774:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c778:	add	x0, x0, #0x4a8
    c77c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    c780:	ldr	w0, [sp, #36]
    c784:	and	w0, w0, #0xffffff80
    c788:	cmp	w0, #0x0
    c78c:	b.eq	c7a8 <_Z19decl_assembler_nameP9tree_node@plt+0x5a48>  // b.none
    c790:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c794:	add	x2, x0, #0x7b8
    c798:	mov	w1, #0x73b                 	// #1851
    c79c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c7a0:	add	x0, x0, #0x4a8
    c7a4:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    c7a8:	ldr	w0, [sp, #36]
    c7ac:	and	w0, w0, #0x30
    c7b0:	cmp	w0, #0x0
    c7b4:	b.ne	c7d0 <_Z19decl_assembler_nameP9tree_node@plt+0x5a70>  // b.any
    c7b8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c7bc:	add	x2, x0, #0x7b8
    c7c0:	mov	w1, #0x73d                 	// #1853
    c7c4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    c7c8:	add	x0, x0, #0x4a8
    c7cc:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    c7d0:	ldr	x0, [sp, #48]
    c7d4:	bl	6960 <_Z14get_identifierPKc@plt>
    c7d8:	ldr	x3, [sp, #144]
    c7dc:	mov	x2, x0
    c7e0:	mov	w1, #0x22                  	// #34
    c7e4:	mov	w0, #0x1                   	// #1
    c7e8:	bl	65c0 <_Z10build_declj9tree_codeP9tree_nodeS1_@plt>
    c7ec:	str	x0, [sp, #136]
    c7f0:	ldr	x0, [sp, #136]
    c7f4:	ldr	x1, [sp, #152]
    c7f8:	str	x1, [x0, #40]
    c7fc:	ldr	w1, [sp, #36]
    c800:	ldr	x0, [sp, #136]
    c804:	bl	9e78 <_Z19decl_assembler_nameP9tree_node@plt+0x3118>
    c808:	ldr	w0, [sp, #36]
    c80c:	and	w0, w0, #0x40
    c810:	cmp	w0, #0x0
    c814:	b.eq	c828 <_Z19decl_assembler_nameP9tree_node@plt+0x5ac8>  // b.none
    c818:	ldr	x0, [sp, #136]
    c81c:	ldrb	w1, [x0, #57]
    c820:	orr	w1, w1, #0xffffff80
    c824:	strb	w1, [x0, #57]
    c828:	ldr	x0, [sp, #144]
    c82c:	ldrh	w0, [x0]
    c830:	cmp	w0, #0x8
    c834:	b.ne	c890 <_Z19decl_assembler_nameP9tree_node@plt+0x5b30>  // b.any
    c838:	ldr	x0, [sp, #144]
    c83c:	ldrh	w0, [x0, #52]
    c840:	ubfx	x0, x0, #0, #10
    c844:	and	w0, w0, #0xffff
    c848:	and	x1, x0, #0xffff
    c84c:	ldr	x0, [sp, #24]
    c850:	cmp	x1, x0
    c854:	b.eq	c890 <_Z19decl_assembler_nameP9tree_node@plt+0x5b30>  // b.none
    c858:	ldr	x0, [sp, #136]
    c85c:	ldr	x1, [sp, #144]
    c860:	str	x1, [x0, #120]
    c864:	ldr	x2, [sp, #24]
    c868:	ldr	x0, [sp, #144]
    c86c:	ldrb	w0, [x0, #5]
    c870:	ubfx	x0, x0, #0, #1
    c874:	and	w0, w0, #0xff
    c878:	mov	w1, w0
    c87c:	mov	x0, x2
    c880:	bl	6490 <_Z29c_build_bitfield_integer_typemi@plt>
    c884:	mov	x1, x0
    c888:	ldr	x0, [sp, #136]
    c88c:	str	x1, [x0, #8]
    c890:	ldr	x0, [sp, #136]
    c894:	ldr	x0, [x0, #8]
    c898:	ldrh	w0, [x0]
    c89c:	cmp	w0, #0xf
    c8a0:	b.ne	c8b8 <_Z19decl_assembler_nameP9tree_node@plt+0x5b58>  // b.any
    c8a4:	ldr	x0, [sp, #136]
    c8a8:	ldr	x0, [x0, #8]
    c8ac:	bl	61d0 <_Z16vector_type_modePK9tree_node@plt>
    c8b0:	and	w0, w0, #0xff
    c8b4:	b	c8c4 <_Z19decl_assembler_nameP9tree_node@plt+0x5b64>
    c8b8:	ldr	x0, [sp, #136]
    c8bc:	ldr	x0, [x0, #8]
    c8c0:	ldrb	w0, [x0, #54]
    c8c4:	ldr	x1, [sp, #136]
    c8c8:	strb	w0, [x1, #56]
    c8cc:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    c8d0:	ldr	x0, [x0, #3976]
    c8d4:	ldr	x0, [x0, #608]
    c8d8:	ldrh	w0, [x0, #52]
    c8dc:	ubfx	x0, x0, #0, #10
    c8e0:	and	w0, w0, #0xffff
    c8e4:	and	x0, x0, #0xffff
    c8e8:	bl	6e44 <_Z19decl_assembler_nameP9tree_node@plt+0xe4>
    c8ec:	and	w0, w0, #0xff
    c8f0:	sub	w0, w0, #0x1
    c8f4:	and	w0, w0, #0xff
    c8f8:	and	w0, w0, #0x3f
    c8fc:	and	w2, w0, #0xff
    c900:	ldr	x1, [sp, #136]
    c904:	ldrb	w0, [x1, #60]
    c908:	bfxil	w0, w2, #0, #6
    c90c:	strb	w0, [x1, #60]
    c910:	add	x1, sp, #0x10
    c914:	add	x0, sp, #0x48
    c918:	bl	134a8 <plugin_init@@Base+0x2468>
    c91c:	mov	w2, #0x2                   	// #2
    c920:	ldp	x0, x1, [sp, #72]
    c924:	bl	6c50 <_Z13size_int_kind8poly_intILj2ElE14size_type_kind@plt>
    c928:	str	x0, [sp, #128]
    c92c:	ldr	x0, [sp, #136]
    c930:	add	x4, x0, #0x70
    c934:	ldr	x0, [sp, #136]
    c938:	add	x1, x0, #0x88
    c93c:	ldr	x0, [sp, #136]
    c940:	ldrb	w0, [x0, #60]
    c944:	ubfx	x0, x0, #0, #6
    c948:	and	w0, w0, #0xff
    c94c:	mov	w2, w0
    c950:	mov	x0, #0x1                   	// #1
    c954:	lsl	x0, x0, x2
    c958:	ldr	x3, [sp, #128]
    c95c:	mov	w2, w0
    c960:	mov	x0, x4
    c964:	bl	6990 <_Z12pos_from_bitPP9tree_nodeS1_jS0_@plt>
    c968:	add	x1, sp, #0x18
    c96c:	add	x0, sp, #0x58
    c970:	bl	134a8 <plugin_init@@Base+0x2468>
    c974:	mov	w2, #0x2                   	// #2
    c978:	ldp	x0, x1, [sp, #88]
    c97c:	bl	6c50 <_Z13size_int_kind8poly_intILj2ElE14size_type_kind@plt>
    c980:	mov	x1, x0
    c984:	ldr	x0, [sp, #136]
    c988:	str	x1, [x0, #48]
    c98c:	ldr	x0, [sp, #24]
    c990:	add	x0, x0, #0x7
    c994:	lsr	x0, x0, #3
    c998:	str	x0, [sp, #120]
    c99c:	add	x1, sp, #0x78
    c9a0:	add	x0, sp, #0x68
    c9a4:	bl	134a8 <plugin_init@@Base+0x2468>
    c9a8:	mov	w2, #0x0                   	// #0
    c9ac:	ldp	x0, x1, [sp, #104]
    c9b0:	bl	6c50 <_Z13size_int_kind8poly_intILj2ElE14size_type_kind@plt>
    c9b4:	mov	x1, x0
    c9b8:	ldr	x0, [sp, #136]
    c9bc:	str	x1, [x0, #72]
    c9c0:	ldr	x0, [sp, #152]
    c9c4:	ldr	x1, [x0, #136]
    c9c8:	ldr	x0, [sp, #136]
    c9cc:	str	x1, [x0, #16]
    c9d0:	ldr	x0, [sp, #152]
    c9d4:	ldr	x1, [sp, #136]
    c9d8:	str	x1, [x0, #136]
    c9dc:	ldr	x0, [sp, #136]
    c9e0:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    c9e4:	ldp	x29, x30, [sp], #160
    c9e8:	ret
    c9ec:	stp	x29, x30, [sp, #-48]!
    c9f0:	mov	x29, sp
    c9f4:	str	x0, [sp, #24]
    c9f8:	str	x1, [sp, #16]
    c9fc:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    ca00:	ldr	x0, [x0, #3888]
    ca04:	ldr	x0, [x0]
    ca08:	ldr	x0, [x0, #32]
    ca0c:	str	x0, [sp, #40]
    ca10:	ldr	x0, [sp, #40]
    ca14:	ldrh	w0, [x0]
    ca18:	cmp	w0, #0x11
    ca1c:	b.eq	ca48 <_Z19decl_assembler_nameP9tree_node@plt+0x5ce8>  // b.none
    ca20:	ldr	x0, [sp, #40]
    ca24:	ldrh	w0, [x0]
    ca28:	cmp	w0, #0x12
    ca2c:	b.eq	ca48 <_Z19decl_assembler_nameP9tree_node@plt+0x5ce8>  // b.none
    ca30:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    ca34:	add	x2, x0, #0x7d0
    ca38:	mov	w1, #0x76b                 	// #1899
    ca3c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    ca40:	add	x0, x0, #0x4a8
    ca44:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    ca48:	mov	x1, #0x0                   	// #0
    ca4c:	ldr	x0, [sp, #40]
    ca50:	bl	6c20 <_Z13finish_structP9tree_nodeS0_@plt>
    ca54:	ldr	x0, [sp, #40]
    ca58:	ldr	x0, [x0, #32]
    ca5c:	ldr	x1, [sp, #16]
    ca60:	bl	6d20 <_Z16compare_tree_intPK9tree_nodem@plt>
    ca64:	cmp	w0, #0x0
    ca68:	b.eq	ca84 <_Z19decl_assembler_nameP9tree_node@plt+0x5d24>  // b.none
    ca6c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    ca70:	add	x2, x0, #0x7d0
    ca74:	mov	w1, #0x76f                 	// #1903
    ca78:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    ca7c:	add	x0, x0, #0x4a8
    ca80:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    ca84:	mov	w0, #0x1                   	// #1
    ca88:	ldp	x29, x30, [sp], #48
    ca8c:	ret
    ca90:	stp	x29, x30, [sp, #-144]!
    ca94:	mov	x29, sp
    ca98:	str	x19, [sp, #16]
    ca9c:	str	x0, [sp, #72]
    caa0:	str	x1, [sp, #64]
    caa4:	str	x2, [sp, #56]
    caa8:	str	w3, [sp, #52]
    caac:	str	x4, [sp, #40]
    cab0:	str	w5, [sp, #48]
    cab4:	ldr	x0, [sp, #72]
    cab8:	str	x0, [sp, #136]
    cabc:	ldr	x0, [sp, #56]
    cac0:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    cac4:	str	x0, [sp, #128]
    cac8:	ldr	w0, [sp, #52]
    cacc:	and	w0, w0, #0xf
    cad0:	cmp	w0, #0x6
    cad4:	b.eq	caf0 <_Z19decl_assembler_nameP9tree_node@plt+0x5d90>  // b.none
    cad8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    cadc:	add	x2, x0, #0x7f0
    cae0:	mov	w1, #0x780                 	// #1920
    cae4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    cae8:	add	x0, x0, #0x4a8
    caec:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    caf0:	ldr	w0, [sp, #52]
    caf4:	and	w0, w0, #0xffffff80
    caf8:	cmp	w0, #0x0
    cafc:	b.eq	cb18 <_Z19decl_assembler_nameP9tree_node@plt+0x5db8>  // b.none
    cb00:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    cb04:	add	x2, x0, #0x7f0
    cb08:	mov	w1, #0x781                 	// #1921
    cb0c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    cb10:	add	x0, x0, #0x4a8
    cb14:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    cb18:	ldr	w0, [sp, #52]
    cb1c:	and	w0, w0, #0x30
    cb20:	cmp	w0, #0x0
    cb24:	cset	w0, eq  // eq = none
    cb28:	and	w0, w0, #0xff
    cb2c:	mov	w19, w0
    cb30:	bl	6690 <_Z16at_class_scope_pv@plt>
    cb34:	and	w0, w0, #0xff
    cb38:	eor	w0, w0, #0x1
    cb3c:	and	w0, w0, #0xff
    cb40:	cmp	w19, w0
    cb44:	b.eq	cb60 <_Z19decl_assembler_nameP9tree_node@plt+0x5e00>  // b.none
    cb48:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    cb4c:	add	x2, x0, #0x7f0
    cb50:	mov	w1, #0x783                 	// #1923
    cb54:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    cb58:	add	x0, x0, #0x4a8
    cb5c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    cb60:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    cb64:	ldr	x0, [x0, #3976]
    cb68:	ldr	x0, [x0]
    cb6c:	ldr	x1, [sp, #128]
    cb70:	cmp	x1, x0
    cb74:	b.ne	cb8c <_Z19decl_assembler_nameP9tree_node@plt+0x5e2c>  // b.any
    cb78:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    cb7c:	ldr	x0, [x0, #3976]
    cb80:	ldr	x0, [x0]
    cb84:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    cb88:	b	cc70 <_Z19decl_assembler_nameP9tree_node@plt+0x5f10>
    cb8c:	strb	wzr, [sp, #95]
    cb90:	ldr	x0, [sp, #64]
    cb94:	cmp	x0, #0x0
    cb98:	b.eq	cba8 <_Z19decl_assembler_nameP9tree_node@plt+0x5e48>  // b.none
    cb9c:	ldr	x0, [sp, #64]
    cba0:	bl	6960 <_Z14get_identifierPKc@plt>
    cba4:	b	cbac <_Z19decl_assembler_nameP9tree_node@plt+0x5e4c>
    cba8:	bl	69a0 <_Z14make_anon_namev@plt>
    cbac:	str	x0, [sp, #120]
    cbb0:	ldr	w0, [sp, #52]
    cbb4:	and	w0, w0, #0x40
    cbb8:	cmp	w0, #0x0
    cbbc:	cset	w0, ne  // ne = any
    cbc0:	and	w1, w0, #0xff
    cbc4:	add	x0, sp, #0x5f
    cbc8:	mov	x5, x0
    cbcc:	mov	w4, w1
    cbd0:	mov	x3, #0x0                   	// #0
    cbd4:	ldr	x2, [sp, #128]
    cbd8:	mov	x1, #0x0                   	// #0
    cbdc:	ldr	x0, [sp, #120]
    cbe0:	bl	68f0 <_Z10start_enumP9tree_nodeS0_S0_S0_bPb@plt>
    cbe4:	str	x0, [sp, #112]
    cbe8:	ldrb	w0, [sp, #95]
    cbec:	eor	w0, w0, #0x1
    cbf0:	and	w0, w0, #0xff
    cbf4:	cmp	w0, #0x0
    cbf8:	b.eq	cc14 <_Z19decl_assembler_nameP9tree_node@plt+0x5eb4>  // b.none
    cbfc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    cc00:	add	x2, x0, #0x7f0
    cc04:	mov	w1, #0x791                 	// #1937
    cc08:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    cc0c:	add	x0, x0, #0x4a8
    cc10:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    cc14:	ldr	w2, [sp, #48]
    cc18:	ldr	x1, [sp, #40]
    cc1c:	ldr	x0, [sp, #136]
    cc20:	bl	12750 <plugin_init@@Base+0x1710>
    cc24:	str	w0, [sp, #108]
    cc28:	ldr	x0, [sp, #112]
    cc2c:	ldr	x0, [x0, #120]
    cc30:	str	x0, [sp, #96]
    cc34:	ldr	x0, [sp, #96]
    cc38:	ldr	w1, [sp, #108]
    cc3c:	str	w1, [x0, #24]
    cc40:	ldr	x0, [sp, #112]
    cc44:	ldrb	w1, [x0, #3]
    cc48:	and	w1, w1, #0xffffffef
    cc4c:	strb	w1, [x0, #3]
    cc50:	ldr	w1, [sp, #52]
    cc54:	ldr	x0, [sp, #96]
    cc58:	bl	9e78 <_Z19decl_assembler_nameP9tree_node@plt+0x3118>
    cc5c:	ldr	x1, [sp, #112]
    cc60:	ldr	x0, [sp, #136]
    cc64:	bl	12710 <plugin_init@@Base+0x16d0>
    cc68:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    cc6c:	nop
    cc70:	ldr	x19, [sp, #16]
    cc74:	ldp	x29, x30, [sp], #144
    cc78:	ret
    cc7c:	stp	x29, x30, [sp, #-96]!
    cc80:	mov	x29, sp
    cc84:	str	x19, [sp, #16]
    cc88:	str	x0, [sp, #56]
    cc8c:	str	x1, [sp, #48]
    cc90:	str	x2, [sp, #40]
    cc94:	str	x3, [sp, #32]
    cc98:	ldr	x0, [sp, #48]
    cc9c:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    cca0:	str	x0, [sp, #88]
    cca4:	ldr	x0, [sp, #88]
    cca8:	ldrh	w0, [x0]
    ccac:	cmp	w0, #0x6
    ccb0:	b.eq	cccc <_Z19decl_assembler_nameP9tree_node@plt+0x5f6c>  // b.none
    ccb4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    ccb8:	add	x2, x0, #0x808
    ccbc:	mov	w1, #0x7a5                 	// #1957
    ccc0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    ccc4:	add	x0, x0, #0x4a8
    ccc8:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    cccc:	ldr	x0, [sp, #40]
    ccd0:	bl	6960 <_Z14get_identifierPKc@plt>
    ccd4:	mov	x19, x0
    ccd8:	add	x1, sp, #0x20
    ccdc:	add	x0, sp, #0x48
    cce0:	bl	134a8 <plugin_init@@Base+0x2468>
    cce4:	ldp	x1, x2, [sp, #72]
    cce8:	ldr	x0, [sp, #88]
    ccec:	bl	6b80 <_Z13build_int_cstP9tree_node8poly_intILj2ElE@plt>
    ccf0:	mov	w4, #0x1                   	// #1
    ccf4:	mov	x3, #0x0                   	// #0
    ccf8:	ldr	x2, [sp, #88]
    ccfc:	mov	x1, x0
    cd00:	mov	x0, x19
    cd04:	bl	6430 <_Z16build_enumeratorP9tree_nodeS0_S0_S0_j@plt>
    cd08:	ldr	x0, [sp, #88]
    cd0c:	ldr	x0, [x0, #136]
    cd10:	ldr	x0, [x0, #32]
    cd14:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    cd18:	ldr	x19, [sp, #16]
    cd1c:	ldp	x29, x30, [sp], #96
    cd20:	ret
    cd24:	stp	x29, x30, [sp, #-48]!
    cd28:	mov	x29, sp
    cd2c:	str	x0, [sp, #24]
    cd30:	str	x1, [sp, #16]
    cd34:	ldr	x0, [sp, #16]
    cd38:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    cd3c:	str	x0, [sp, #40]
    cd40:	ldr	x0, [sp, #40]
    cd44:	bl	6010 <_Z22finish_enum_value_listP9tree_node@plt>
    cd48:	ldr	x0, [sp, #40]
    cd4c:	bl	62b0 <_Z11finish_enumP9tree_node@plt>
    cd50:	mov	w0, #0x1                   	// #1
    cd54:	ldp	x29, x30, [sp], #48
    cd58:	ret
    cd5c:	stp	x29, x30, [sp, #-112]!
    cd60:	mov	x29, sp
    cd64:	str	x19, [sp, #16]
    cd68:	str	x0, [sp, #56]
    cd6c:	str	x1, [sp, #48]
    cd70:	str	x2, [sp, #40]
    cd74:	str	w3, [sp, #36]
    cd78:	ldr	x0, [sp, #48]
    cd7c:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    cd80:	str	x0, [sp, #88]
    cd84:	ldr	x0, [sp, #40]
    cd88:	ldr	w0, [x0]
    cd8c:	sxtw	x1, w0
    cd90:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
    cd94:	cmp	x1, x0
    cd98:	b.hi	cdbc <_Z19decl_assembler_nameP9tree_node@plt+0x605c>  // b.pmore
    cd9c:	ldr	x0, [sp, #40]
    cda0:	ldr	w0, [x0]
    cda4:	sxtw	x0, w0
    cda8:	lsl	x0, x0, #3
    cdac:	bl	6000 <_Znam@plt>
    cdb0:	str	x0, [sp, #80]
    cdb4:	str	wzr, [sp, #100]
    cdb8:	b	cdc0 <_Z19decl_assembler_nameP9tree_node@plt+0x6060>
    cdbc:	bl	6980 <__cxa_throw_bad_array_new_length@plt>
    cdc0:	ldr	x0, [sp, #40]
    cdc4:	ldr	w0, [x0]
    cdc8:	ldr	w1, [sp, #100]
    cdcc:	cmp	w1, w0
    cdd0:	b.ge	ce18 <_Z19decl_assembler_nameP9tree_node@plt+0x60b8>  // b.tcont
    cdd4:	ldr	x0, [sp, #40]
    cdd8:	ldr	x1, [x0, #8]
    cddc:	ldrsw	x0, [sp, #100]
    cde0:	lsl	x0, x0, #3
    cde4:	add	x0, x1, x0
    cde8:	ldr	x2, [x0]
    cdec:	ldrsw	x0, [sp, #100]
    cdf0:	lsl	x0, x0, #3
    cdf4:	ldr	x1, [sp, #80]
    cdf8:	add	x19, x1, x0
    cdfc:	mov	x0, x2
    ce00:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    ce04:	str	x0, [x19]
    ce08:	ldr	w0, [sp, #100]
    ce0c:	add	w0, w0, #0x1
    ce10:	str	w0, [sp, #100]
    ce14:	b	cdc0 <_Z19decl_assembler_nameP9tree_node@plt+0x6060>
    ce18:	ldr	w0, [sp, #36]
    ce1c:	cmp	w0, #0x0
    ce20:	b.eq	ce44 <_Z19decl_assembler_nameP9tree_node@plt+0x60e4>  // b.none
    ce24:	ldr	x0, [sp, #40]
    ce28:	ldr	w0, [x0]
    ce2c:	ldr	x2, [sp, #80]
    ce30:	mov	w1, w0
    ce34:	ldr	x0, [sp, #88]
    ce38:	bl	63d0 <_Z33build_varargs_function_type_arrayP9tree_nodeiPS0_@plt>
    ce3c:	str	x0, [sp, #104]
    ce40:	b	ce60 <_Z19decl_assembler_nameP9tree_node@plt+0x6100>
    ce44:	ldr	x0, [sp, #40]
    ce48:	ldr	w0, [x0]
    ce4c:	ldr	x2, [sp, #80]
    ce50:	mov	w1, w0
    ce54:	ldr	x0, [sp, #88]
    ce58:	bl	6520 <_Z25build_function_type_arrayP9tree_nodeiPS0_@plt>
    ce5c:	str	x0, [sp, #104]
    ce60:	ldr	x0, [sp, #80]
    ce64:	cmp	x0, #0x0
    ce68:	b.eq	ce74 <_Z19decl_assembler_nameP9tree_node@plt+0x6114>  // b.none
    ce6c:	ldr	x0, [sp, #80]
    ce70:	bl	6850 <_ZdaPv@plt>
    ce74:	ldr	x0, [sp, #56]
    ce78:	str	x0, [sp, #72]
    ce7c:	ldr	x1, [sp, #104]
    ce80:	ldr	x0, [sp, #72]
    ce84:	bl	12710 <plugin_init@@Base+0x16d0>
    ce88:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    ce8c:	ldr	x19, [sp, #16]
    ce90:	ldp	x29, x30, [sp], #112
    ce94:	ret
    ce98:	stp	x29, x30, [sp, #-80]!
    ce9c:	mov	x29, sp
    cea0:	str	x0, [sp, #40]
    cea4:	str	x1, [sp, #32]
    cea8:	str	w2, [sp, #28]
    ceac:	ldr	x0, [sp, #32]
    ceb0:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    ceb4:	str	x0, [sp, #56]
    ceb8:	ldr	x0, [sp, #56]
    cebc:	ldrh	w0, [x0]
    cec0:	cmp	w0, #0x20
    cec4:	b.eq	cee0 <_Z19decl_assembler_nameP9tree_node@plt+0x6180>  // b.none
    cec8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    cecc:	add	x2, x0, #0x828
    ced0:	mov	w1, #0x838                 	// #2104
    ced4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    ced8:	add	x0, x0, #0x4a8
    cedc:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    cee0:	ldr	w0, [sp, #28]
    cee4:	cmn	w0, #0x1
    cee8:	b.ne	cf28 <_Z19decl_assembler_nameP9tree_node@plt+0x61c8>  // b.any
    ceec:	ldr	x0, [sp, #56]
    cef0:	ldr	x0, [x0, #8]
    cef4:	ldrh	w0, [x0]
    cef8:	cmp	w0, #0x16
    cefc:	b.eq	cf18 <_Z19decl_assembler_nameP9tree_node@plt+0x61b8>  // b.none
    cf00:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    cf04:	add	x2, x0, #0x828
    cf08:	mov	w1, #0x83c                 	// #2108
    cf0c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    cf10:	add	x0, x0, #0x4a8
    cf14:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    cf18:	ldr	x0, [sp, #56]
    cf1c:	ldr	x0, [x0, #160]
    cf20:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    cf24:	b	cfac <_Z19decl_assembler_nameP9tree_node@plt+0x624c>
    cf28:	ldr	w0, [sp, #28]
    cf2c:	cmp	w0, #0x0
    cf30:	b.ge	cf4c <_Z19decl_assembler_nameP9tree_node@plt+0x61ec>  // b.tcont
    cf34:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    cf38:	add	x2, x0, #0x828
    cf3c:	mov	w1, #0x841                 	// #2113
    cf40:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    cf44:	add	x0, x0, #0x4a8
    cf48:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    cf4c:	ldr	x0, [sp, #56]
    cf50:	ldr	x0, [x0, #160]
    cf54:	mov	x1, x0
    cf58:	ldr	x0, [sp, #56]
    cf5c:	bl	6180 <_Z25skip_artificial_parms_forPK9tree_nodePS_@plt>
    cf60:	str	x0, [sp, #72]
    cf64:	str	wzr, [sp, #68]
    cf68:	ldr	x0, [sp, #72]
    cf6c:	cmp	x0, #0x0
    cf70:	b.eq	cfa0 <_Z19decl_assembler_nameP9tree_node@plt+0x6240>  // b.none
    cf74:	ldr	w1, [sp, #68]
    cf78:	ldr	w0, [sp, #28]
    cf7c:	cmp	w1, w0
    cf80:	b.ge	cfa0 <_Z19decl_assembler_nameP9tree_node@plt+0x6240>  // b.tcont
    cf84:	ldr	x0, [sp, #72]
    cf88:	ldr	x0, [x0, #16]
    cf8c:	str	x0, [sp, #72]
    cf90:	ldr	w0, [sp, #68]
    cf94:	add	w0, w0, #0x1
    cf98:	str	w0, [sp, #68]
    cf9c:	b	cf68 <_Z19decl_assembler_nameP9tree_node@plt+0x6208>
    cfa0:	ldr	x0, [sp, #72]
    cfa4:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    cfa8:	nop
    cfac:	ldp	x29, x30, [sp], #80
    cfb0:	ret
    cfb4:	stp	x29, x30, [sp, #-80]!
    cfb8:	mov	x29, sp
    cfbc:	str	x0, [sp, #40]
    cfc0:	str	x1, [sp, #32]
    cfc4:	str	x2, [sp, #24]
    cfc8:	ldr	x0, [sp, #32]
    cfcc:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    cfd0:	str	x0, [sp, #56]
    cfd4:	str	xzr, [sp, #72]
    cfd8:	ldr	x0, [sp, #24]
    cfdc:	cmp	x0, #0x0
    cfe0:	b.ne	cff8 <_Z19decl_assembler_nameP9tree_node@plt+0x6298>  // b.any
    cfe4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    cfe8:	ldr	x0, [x0, #3880]
    cfec:	ldr	x0, [x0, #496]
    cff0:	str	x0, [sp, #72]
    cff4:	b	d074 <_Z19decl_assembler_nameP9tree_node@plt+0x6314>
    cff8:	ldr	x0, [sp, #24]
    cffc:	ldr	w0, [x0]
    d000:	cmp	w0, #0x0
    d004:	b.ne	d01c <_Z19decl_assembler_nameP9tree_node@plt+0x62bc>  // b.any
    d008:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    d00c:	ldr	x0, [x0, #3880]
    d010:	ldr	x0, [x0, #480]
    d014:	str	x0, [sp, #72]
    d018:	b	d074 <_Z19decl_assembler_nameP9tree_node@plt+0x6314>
    d01c:	str	wzr, [sp, #68]
    d020:	ldr	x0, [sp, #24]
    d024:	ldr	w0, [x0]
    d028:	ldr	w1, [sp, #68]
    d02c:	cmp	w1, w0
    d030:	b.ge	d074 <_Z19decl_assembler_nameP9tree_node@plt+0x6314>  // b.tcont
    d034:	ldr	x0, [sp, #24]
    d038:	ldr	x1, [x0, #8]
    d03c:	ldrsw	x0, [sp, #68]
    d040:	lsl	x0, x0, #3
    d044:	add	x0, x1, x0
    d048:	ldr	x0, [x0]
    d04c:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    d050:	mov	w2, #0x0                   	// #0
    d054:	mov	x1, x0
    d058:	ldr	x0, [sp, #72]
    d05c:	bl	6c00 <_Z23add_exception_specifierP9tree_nodeS0_i@plt>
    d060:	str	x0, [sp, #72]
    d064:	ldr	w0, [sp, #68]
    d068:	add	w0, w0, #0x1
    d06c:	str	w0, [sp, #68]
    d070:	b	d020 <_Z19decl_assembler_nameP9tree_node@plt+0x62c0>
    d074:	ldr	x1, [sp, #72]
    d078:	ldr	x0, [sp, #56]
    d07c:	bl	68c0 <_Z23build_exception_variantP9tree_nodeS0_@plt>
    d080:	str	x0, [sp, #56]
    d084:	ldr	x0, [sp, #40]
    d088:	str	x0, [sp, #48]
    d08c:	ldr	x1, [sp, #56]
    d090:	ldr	x0, [sp, #48]
    d094:	bl	12710 <plugin_init@@Base+0x16d0>
    d098:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    d09c:	ldp	x29, x30, [sp], #80
    d0a0:	ret
    d0a4:	stp	x29, x30, [sp, #-96]!
    d0a8:	mov	x29, sp
    d0ac:	str	x0, [sp, #40]
    d0b0:	str	x1, [sp, #32]
    d0b4:	str	x2, [sp, #24]
    d0b8:	str	w3, [sp, #20]
    d0bc:	str	w4, [sp, #16]
    d0c0:	ldr	x0, [sp, #32]
    d0c4:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    d0c8:	str	x0, [sp, #80]
    d0cc:	ldr	x0, [sp, #24]
    d0d0:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    d0d4:	str	x0, [sp, #72]
    d0d8:	str	wzr, [sp, #92]
    d0dc:	ldr	w0, [sp, #20]
    d0e0:	and	w0, w0, #0x1
    d0e4:	cmp	w0, #0x0
    d0e8:	b.eq	d0f8 <_Z19decl_assembler_nameP9tree_node@plt+0x6398>  // b.none
    d0ec:	ldr	w0, [sp, #92]
    d0f0:	orr	w0, w0, #0x1
    d0f4:	str	w0, [sp, #92]
    d0f8:	ldr	w0, [sp, #20]
    d0fc:	and	w0, w0, #0x2
    d100:	cmp	w0, #0x0
    d104:	b.eq	d114 <_Z19decl_assembler_nameP9tree_node@plt+0x63b4>  // b.none
    d108:	ldr	w0, [sp, #92]
    d10c:	orr	w0, w0, #0x2
    d110:	str	w0, [sp, #92]
    d114:	ldr	w0, [sp, #20]
    d118:	and	w0, w0, #0x4
    d11c:	cmp	w0, #0x0
    d120:	b.eq	d13c <_Z19decl_assembler_nameP9tree_node@plt+0x63dc>  // b.none
    d124:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d128:	add	x2, x0, #0x850
    d12c:	mov	w1, #0x875                 	// #2165
    d130:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d134:	add	x0, x0, #0x4a8
    d138:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    d13c:	ldr	w0, [sp, #16]
    d140:	cmp	w0, #0x2
    d144:	b.eq	d178 <_Z19decl_assembler_nameP9tree_node@plt+0x6418>  // b.none
    d148:	cmp	w0, #0x2
    d14c:	b.gt	d184 <_Z19decl_assembler_nameP9tree_node@plt+0x6424>
    d150:	cmp	w0, #0x0
    d154:	b.eq	d164 <_Z19decl_assembler_nameP9tree_node@plt+0x6404>  // b.none
    d158:	cmp	w0, #0x1
    d15c:	b.eq	d16c <_Z19decl_assembler_nameP9tree_node@plt+0x640c>  // b.none
    d160:	b	d184 <_Z19decl_assembler_nameP9tree_node@plt+0x6424>
    d164:	str	wzr, [sp, #88]
    d168:	b	d19c <_Z19decl_assembler_nameP9tree_node@plt+0x643c>
    d16c:	mov	w0, #0x1                   	// #1
    d170:	str	w0, [sp, #88]
    d174:	b	d19c <_Z19decl_assembler_nameP9tree_node@plt+0x643c>
    d178:	mov	w0, #0x2                   	// #2
    d17c:	str	w0, [sp, #88]
    d180:	b	d19c <_Z19decl_assembler_nameP9tree_node@plt+0x643c>
    d184:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d188:	add	x2, x0, #0x850
    d18c:	mov	w1, #0x883                 	// #2179
    d190:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d194:	add	x0, x0, #0x4a8
    d198:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    d19c:	ldr	x0, [sp, #80]
    d1a0:	cmp	x0, #0x0
    d1a4:	b.eq	d1c0 <_Z19decl_assembler_nameP9tree_node@plt+0x6460>  // b.none
    d1a8:	ldr	w3, [sp, #88]
    d1ac:	ldr	w2, [sp, #92]
    d1b0:	ldr	x1, [sp, #80]
    d1b4:	ldr	x0, [sp, #72]
    d1b8:	bl	6500 <_Z16build_memfn_typeP9tree_nodeS0_i16cp_ref_qualifier@plt>
    d1bc:	b	d1d0 <_Z19decl_assembler_nameP9tree_node@plt+0x6470>
    d1c0:	ldr	w2, [sp, #88]
    d1c4:	ldr	w1, [sp, #92]
    d1c8:	ldr	x0, [sp, #72]
    d1cc:	bl	6230 <_Z17apply_memfn_qualsP9tree_nodei16cp_ref_qualifier@plt>
    d1d0:	str	x0, [sp, #64]
    d1d4:	ldr	x0, [sp, #40]
    d1d8:	str	x0, [sp, #56]
    d1dc:	ldr	x1, [sp, #64]
    d1e0:	ldr	x0, [sp, #56]
    d1e4:	bl	12710 <plugin_init@@Base+0x16d0>
    d1e8:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    d1ec:	ldp	x29, x30, [sp], #96
    d1f0:	ret
    d1f4:	stp	x29, x30, [sp, #-80]!
    d1f8:	mov	x29, sp
    d1fc:	str	x0, [sp, #40]
    d200:	str	x1, [sp, #32]
    d204:	str	x2, [sp, #24]
    d208:	ldr	x0, [sp, #32]
    d20c:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    d210:	str	x0, [sp, #72]
    d214:	ldr	x0, [sp, #24]
    d218:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    d21c:	str	x0, [sp, #64]
    d220:	ldr	x1, [sp, #64]
    d224:	ldr	x0, [sp, #72]
    d228:	bl	6870 <_Z17build_ptrmem_typeP9tree_nodeS0_@plt>
    d22c:	str	x0, [sp, #56]
    d230:	ldr	x0, [sp, #40]
    d234:	str	x0, [sp, #48]
    d238:	ldr	x1, [sp, #56]
    d23c:	ldr	x0, [sp, #48]
    d240:	bl	12710 <plugin_init@@Base+0x16d0>
    d244:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    d248:	ldp	x29, x30, [sp], #80
    d24c:	ret
    d250:	stp	x29, x30, [sp, #-32]!
    d254:	mov	x29, sp
    d258:	str	x0, [sp, #24]
    d25c:	bl	6280 <_Z24begin_template_parm_listv@plt>
    d260:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    d264:	ldr	x0, [x0, #3888]
    d268:	ldr	x0, [x0]
    d26c:	ldr	x0, [x0, #72]
    d270:	str	xzr, [x0, #8]
    d274:	mov	w0, #0x1                   	// #1
    d278:	ldp	x29, x30, [sp], #32
    d27c:	ret
    d280:	stp	x29, x30, [sp, #-48]!
    d284:	mov	x29, sp
    d288:	str	x0, [sp, #24]
    d28c:	str	x1, [sp, #16]
    d290:	ldr	x0, [sp, #16]
    d294:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    d298:	str	x0, [sp, #40]
    d29c:	ldr	x0, [sp, #40]
    d2a0:	ldr	x0, [x0, #120]
    d2a4:	str	x0, [sp, #32]
    d2a8:	ldr	x0, [sp, #32]
    d2ac:	cmp	x0, #0x0
    d2b0:	b.ne	d2cc <_Z19decl_assembler_nameP9tree_node@plt+0x656c>  // b.any
    d2b4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d2b8:	add	x2, x0, #0x870
    d2bc:	mov	w1, #0x8ad                 	// #2221
    d2c0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d2c4:	add	x0, x0, #0x4a8
    d2c8:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    d2cc:	ldr	x0, [sp, #32]
    d2d0:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    d2d4:	ldp	x29, x30, [sp], #48
    d2d8:	ret
    d2dc:	stp	x29, x30, [sp, #-48]!
    d2e0:	mov	x29, sp
    d2e4:	str	x0, [sp, #24]
    d2e8:	str	x1, [sp, #16]
    d2ec:	ldr	x0, [sp, #16]
    d2f0:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    d2f4:	str	x0, [sp, #40]
    d2f8:	ldr	x0, [sp, #40]
    d2fc:	ldr	x0, [x0, #8]
    d300:	str	x0, [sp, #32]
    d304:	ldr	x0, [sp, #32]
    d308:	cmp	x0, #0x0
    d30c:	b.ne	d328 <_Z19decl_assembler_nameP9tree_node@plt+0x65c8>  // b.any
    d310:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d314:	add	x2, x0, #0x888
    d318:	mov	w1, #0x8b9                 	// #2233
    d31c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d320:	add	x0, x0, #0x4a8
    d324:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    d328:	ldr	x0, [sp, #32]
    d32c:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    d330:	ldp	x29, x30, [sp], #48
    d334:	ret
    d338:	stp	x29, x30, [sp, #-112]!
    d33c:	mov	x29, sp
    d340:	str	x19, [sp, #16]
    d344:	str	x0, [sp, #72]
    d348:	str	x1, [sp, #64]
    d34c:	str	w2, [sp, #60]
    d350:	str	x3, [sp, #48]
    d354:	str	x4, [sp, #40]
    d358:	str	w5, [sp, #56]
    d35c:	ldr	x0, [sp, #72]
    d360:	str	x0, [sp, #104]
    d364:	ldr	w2, [sp, #56]
    d368:	ldr	x1, [sp, #40]
    d36c:	ldr	x0, [sp, #104]
    d370:	bl	12750 <plugin_init@@Base+0x1710>
    d374:	str	w0, [sp, #100]
    d378:	bl	6c40 <_Z21template_parm_scope_pv@plt>
    d37c:	and	w0, w0, #0xff
    d380:	eor	w0, w0, #0x1
    d384:	and	w0, w0, #0xff
    d388:	cmp	w0, #0x0
    d38c:	b.eq	d3a8 <_Z19decl_assembler_nameP9tree_node@plt+0x6648>  // b.none
    d390:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d394:	add	x2, x0, #0x8a0
    d398:	mov	w1, #0x8c9                 	// #2249
    d39c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d3a0:	add	x0, x0, #0x4a8
    d3a4:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    d3a8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    d3ac:	ldr	x0, [x0, #3880]
    d3b0:	ldr	x19, [x0, #48]
    d3b4:	ldr	x0, [sp, #64]
    d3b8:	bl	6960 <_Z14get_identifierPKc@plt>
    d3bc:	mov	x1, x0
    d3c0:	mov	x0, x19
    d3c4:	bl	66a0 <_Z25finish_template_type_parmP9tree_nodeS0_@plt>
    d3c8:	str	x0, [sp, #88]
    d3cc:	ldr	x0, [sp, #48]
    d3d0:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    d3d4:	ldr	x1, [sp, #88]
    d3d8:	bl	6420 <_Z15build_tree_listP9tree_nodeS0_@plt>
    d3dc:	str	x0, [sp, #88]
    d3e0:	ldr	w0, [sp, #60]
    d3e4:	cmp	w0, #0x0
    d3e8:	b.eq	d410 <_Z19decl_assembler_nameP9tree_node@plt+0x66b0>  // b.none
    d3ec:	ldr	x0, [sp, #48]
    d3f0:	cmp	x0, #0x0
    d3f4:	b.eq	d410 <_Z19decl_assembler_nameP9tree_node@plt+0x66b0>  // b.none
    d3f8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d3fc:	add	x2, x0, #0x8a0
    d400:	mov	w1, #0x8ce                 	// #2254
    d404:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d408:	add	x0, x0, #0x4a8
    d40c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    d410:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    d414:	ldr	x0, [x0, #3888]
    d418:	ldr	x0, [x0]
    d41c:	ldr	x0, [x0, #72]
    d420:	ldr	x5, [x0, #8]
    d424:	ldr	w0, [sp, #60]
    d428:	cmp	w0, #0x0
    d42c:	cset	w0, ne  // ne = any
    d430:	and	w1, w0, #0xff
    d434:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    d438:	ldr	x0, [x0, #3888]
    d43c:	ldr	x0, [x0]
    d440:	ldr	x19, [x0, #72]
    d444:	mov	w4, w1
    d448:	mov	w3, #0x0                   	// #0
    d44c:	ldr	x2, [sp, #88]
    d450:	ldr	w1, [sp, #100]
    d454:	mov	x0, x5
    d458:	bl	65b0 <_Z21process_template_parmP9tree_nodejS0_bb@plt>
    d45c:	str	x0, [x19, #8]
    d460:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    d464:	ldr	x0, [x0, #3888]
    d468:	ldr	x0, [x0]
    d46c:	ldr	x0, [x0, #72]
    d470:	ldr	x0, [x0, #8]
    d474:	bl	6930 <_Z9tree_lastP9tree_node@plt>
    d478:	ldr	x0, [x0, #32]
    d47c:	str	x0, [sp, #88]
    d480:	ldr	x0, [sp, #88]
    d484:	ldr	x0, [x0, #8]
    d488:	mov	x1, x0
    d48c:	ldr	x0, [sp, #104]
    d490:	bl	12710 <plugin_init@@Base+0x16d0>
    d494:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    d498:	ldr	x19, [sp, #16]
    d49c:	ldp	x29, x30, [sp], #112
    d4a0:	ret
    d4a4:	stp	x29, x30, [sp, #-112]!
    d4a8:	mov	x29, sp
    d4ac:	str	x19, [sp, #16]
    d4b0:	str	x0, [sp, #72]
    d4b4:	str	x1, [sp, #64]
    d4b8:	str	w2, [sp, #60]
    d4bc:	str	x3, [sp, #48]
    d4c0:	str	x4, [sp, #40]
    d4c4:	str	w5, [sp, #56]
    d4c8:	ldr	x0, [sp, #72]
    d4cc:	str	x0, [sp, #104]
    d4d0:	ldr	w2, [sp, #56]
    d4d4:	ldr	x1, [sp, #40]
    d4d8:	ldr	x0, [sp, #104]
    d4dc:	bl	12750 <plugin_init@@Base+0x1710>
    d4e0:	str	w0, [sp, #100]
    d4e4:	bl	6c40 <_Z21template_parm_scope_pv@plt>
    d4e8:	and	w0, w0, #0xff
    d4ec:	eor	w0, w0, #0x1
    d4f0:	and	w0, w0, #0xff
    d4f4:	cmp	w0, #0x0
    d4f8:	b.eq	d514 <_Z19decl_assembler_nameP9tree_node@plt+0x67b4>  // b.none
    d4fc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d500:	add	x2, x0, #0x8c8
    d504:	mov	w1, #0x8e7                 	// #2279
    d508:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d50c:	add	x0, x0, #0x4a8
    d510:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    d514:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    d518:	ldr	x0, [x0, #3888]
    d51c:	ldr	x0, [x0]
    d520:	ldr	x0, [x0, #72]
    d524:	ldr	x0, [x0, #8]
    d528:	bl	6c80 <_Z22end_template_parm_listP9tree_node@plt>
    d52c:	bl	6c40 <_Z21template_parm_scope_pv@plt>
    d530:	and	w0, w0, #0xff
    d534:	eor	w0, w0, #0x1
    d538:	and	w0, w0, #0xff
    d53c:	cmp	w0, #0x0
    d540:	b.eq	d55c <_Z19decl_assembler_nameP9tree_node@plt+0x67fc>  // b.none
    d544:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d548:	add	x2, x0, #0x8c8
    d54c:	mov	w1, #0x8ec                 	// #2284
    d550:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d554:	add	x0, x0, #0x4a8
    d558:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    d55c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    d560:	ldr	x0, [x0, #3880]
    d564:	ldr	x19, [x0, #48]
    d568:	ldr	x0, [sp, #64]
    d56c:	bl	6960 <_Z14get_identifierPKc@plt>
    d570:	mov	x1, x0
    d574:	mov	x0, x19
    d578:	bl	67c0 <_Z29finish_template_template_parmP9tree_nodeS0_@plt>
    d57c:	str	x0, [sp, #88]
    d580:	ldr	x0, [sp, #48]
    d584:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    d588:	ldr	x1, [sp, #88]
    d58c:	bl	6420 <_Z15build_tree_listP9tree_nodeS0_@plt>
    d590:	str	x0, [sp, #88]
    d594:	ldr	w0, [sp, #60]
    d598:	cmp	w0, #0x0
    d59c:	b.eq	d5c4 <_Z19decl_assembler_nameP9tree_node@plt+0x6864>  // b.none
    d5a0:	ldr	x0, [sp, #48]
    d5a4:	cmp	x0, #0x0
    d5a8:	b.eq	d5c4 <_Z19decl_assembler_nameP9tree_node@plt+0x6864>  // b.none
    d5ac:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d5b0:	add	x2, x0, #0x8c8
    d5b4:	mov	w1, #0x8f2                 	// #2290
    d5b8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d5bc:	add	x0, x0, #0x4a8
    d5c0:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    d5c4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    d5c8:	ldr	x0, [x0, #3888]
    d5cc:	ldr	x0, [x0]
    d5d0:	ldr	x0, [x0, #72]
    d5d4:	ldr	x5, [x0, #8]
    d5d8:	ldr	w0, [sp, #60]
    d5dc:	cmp	w0, #0x0
    d5e0:	cset	w0, ne  // ne = any
    d5e4:	and	w1, w0, #0xff
    d5e8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    d5ec:	ldr	x0, [x0, #3888]
    d5f0:	ldr	x0, [x0]
    d5f4:	ldr	x19, [x0, #72]
    d5f8:	mov	w4, w1
    d5fc:	mov	w3, #0x0                   	// #0
    d600:	ldr	x2, [sp, #88]
    d604:	ldr	w1, [sp, #100]
    d608:	mov	x0, x5
    d60c:	bl	65b0 <_Z21process_template_parmP9tree_nodejS0_bb@plt>
    d610:	str	x0, [x19, #8]
    d614:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    d618:	ldr	x0, [x0, #3888]
    d61c:	ldr	x0, [x0]
    d620:	ldr	x0, [x0, #72]
    d624:	ldr	x0, [x0, #8]
    d628:	bl	6930 <_Z9tree_lastP9tree_node@plt>
    d62c:	ldr	x0, [x0, #32]
    d630:	str	x0, [sp, #88]
    d634:	ldr	x1, [sp, #88]
    d638:	ldr	x0, [sp, #104]
    d63c:	bl	12710 <plugin_init@@Base+0x16d0>
    d640:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    d644:	ldr	x19, [sp, #16]
    d648:	ldp	x29, x30, [sp], #112
    d64c:	ret
    d650:	stp	x29, x30, [sp, #-352]!
    d654:	mov	x29, sp
    d658:	str	x19, [sp, #16]
    d65c:	str	x0, [sp, #72]
    d660:	str	x1, [sp, #64]
    d664:	str	x2, [sp, #56]
    d668:	str	x3, [sp, #48]
    d66c:	str	x4, [sp, #40]
    d670:	str	w5, [sp, #36]
    d674:	ldr	x0, [sp, #72]
    d678:	str	x0, [sp, #344]
    d67c:	ldr	w2, [sp, #36]
    d680:	ldr	x1, [sp, #40]
    d684:	ldr	x0, [sp, #344]
    d688:	bl	12750 <plugin_init@@Base+0x1710>
    d68c:	str	w0, [sp, #340]
    d690:	bl	6c40 <_Z21template_parm_scope_pv@plt>
    d694:	and	w0, w0, #0xff
    d698:	eor	w0, w0, #0x1
    d69c:	and	w0, w0, #0xff
    d6a0:	cmp	w0, #0x0
    d6a4:	b.eq	d6c0 <_Z19decl_assembler_nameP9tree_node@plt+0x6960>  // b.none
    d6a8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d6ac:	add	x2, x0, #0x8f8
    d6b0:	mov	w1, #0x90a                 	// #2314
    d6b4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d6b8:	add	x0, x0, #0x4a8
    d6bc:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    d6c0:	add	x0, sp, #0xe8
    d6c4:	mov	x2, #0x60                  	// #96
    d6c8:	mov	w1, #0x0                   	// #0
    d6cc:	bl	6350 <memset@plt>
    d6d0:	ldrb	w0, [sp, #232]
    d6d4:	and	w0, w0, #0xfffffff0
    d6d8:	strb	w0, [sp, #232]
    d6dc:	str	xzr, [sp, #272]
    d6e0:	ldr	x0, [sp, #56]
    d6e4:	bl	6960 <_Z14get_identifierPKc@plt>
    d6e8:	str	x0, [sp, #280]
    d6ec:	str	wzr, [sp, #288]
    d6f0:	add	x0, sp, #0x50
    d6f4:	mov	x2, #0x98                  	// #152
    d6f8:	mov	w1, #0x0                   	// #0
    d6fc:	bl	6350 <memset@plt>
    d700:	ldrb	w0, [sp, #224]
    d704:	orr	w0, w0, #0x10
    d708:	strb	w0, [sp, #224]
    d70c:	ldrb	w0, [sp, #224]
    d710:	ubfx	x0, x0, #4, #1
    d714:	and	w1, w0, #0xff
    d718:	ldrb	w0, [sp, #224]
    d71c:	bfi	w0, w1, #3, #1
    d720:	strb	w0, [sp, #224]
    d724:	ldr	x0, [sp, #64]
    d728:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    d72c:	str	x0, [sp, #176]
    d730:	ldr	w0, [sp, #340]
    d734:	str	w0, [sp, #144]
    d738:	add	x1, sp, #0x50
    d73c:	add	x0, sp, #0xe8
    d740:	mov	x4, #0x0                   	// #0
    d744:	mov	w3, #0x0                   	// #0
    d748:	mov	w2, #0x3                   	// #3
    d74c:	bl	6a50 <_Z14grokdeclaratorPK13cp_declaratorP21cp_decl_specifier_seq12decl_contextiPP9tree_node@plt>
    d750:	str	x0, [sp, #328]
    d754:	ldr	x0, [sp, #48]
    d758:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    d75c:	ldr	x1, [sp, #328]
    d760:	bl	6420 <_Z15build_tree_listP9tree_nodeS0_@plt>
    d764:	str	x0, [sp, #328]
    d768:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    d76c:	ldr	x0, [x0, #3888]
    d770:	ldr	x0, [x0]
    d774:	ldr	x0, [x0, #72]
    d778:	ldr	x5, [x0, #8]
    d77c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    d780:	ldr	x0, [x0, #3888]
    d784:	ldr	x0, [x0]
    d788:	ldr	x19, [x0, #72]
    d78c:	mov	w4, #0x0                   	// #0
    d790:	mov	w3, #0x1                   	// #1
    d794:	ldr	x2, [sp, #328]
    d798:	ldr	w1, [sp, #340]
    d79c:	mov	x0, x5
    d7a0:	bl	65b0 <_Z21process_template_parmP9tree_nodejS0_bb@plt>
    d7a4:	str	x0, [x19, #8]
    d7a8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    d7ac:	ldr	x0, [x0, #3888]
    d7b0:	ldr	x0, [x0]
    d7b4:	ldr	x0, [x0, #72]
    d7b8:	ldr	x0, [x0, #8]
    d7bc:	bl	6930 <_Z9tree_lastP9tree_node@plt>
    d7c0:	ldr	x0, [x0, #32]
    d7c4:	str	x0, [sp, #328]
    d7c8:	ldr	x1, [sp, #328]
    d7cc:	ldr	x0, [sp, #344]
    d7d0:	bl	12710 <plugin_init@@Base+0x16d0>
    d7d4:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    d7d8:	ldr	x19, [sp, #16]
    d7dc:	ldp	x29, x30, [sp], #352
    d7e0:	ret
    d7e4:	stp	x29, x30, [sp, #-48]!
    d7e8:	mov	x29, sp
    d7ec:	str	x0, [sp, #24]
    d7f0:	ldr	x0, [sp, #24]
    d7f4:	ldr	w0, [x0]
    d7f8:	str	w0, [sp, #44]
    d7fc:	ldr	w0, [sp, #44]
    d800:	bl	6810 <_Z13make_tree_veci@plt>
    d804:	str	x0, [sp, #32]
    d808:	ldr	w0, [sp, #44]
    d80c:	sub	w1, w0, #0x1
    d810:	str	w1, [sp, #44]
    d814:	cmp	w0, #0x0
    d818:	cset	w0, ne  // ne = any
    d81c:	and	w0, w0, #0xff
    d820:	cmp	w0, #0x0
    d824:	b.eq	d97c <_Z19decl_assembler_nameP9tree_node@plt+0x6c1c>  // b.none
    d828:	ldr	x0, [sp, #24]
    d82c:	ldr	x1, [x0, #8]
    d830:	ldrsw	x0, [sp, #44]
    d834:	add	x0, x1, x0
    d838:	ldrb	w0, [x0]
    d83c:	cmp	w0, #0x3
    d840:	b.eq	d924 <_Z19decl_assembler_nameP9tree_node@plt+0x6bc4>  // b.none
    d844:	cmp	w0, #0x3
    d848:	b.gt	d960 <_Z19decl_assembler_nameP9tree_node@plt+0x6c00>
    d84c:	cmp	w0, #0x2
    d850:	b.eq	d8e8 <_Z19decl_assembler_nameP9tree_node@plt+0x6b88>  // b.none
    d854:	cmp	w0, #0x2
    d858:	b.gt	d960 <_Z19decl_assembler_nameP9tree_node@plt+0x6c00>
    d85c:	cmp	w0, #0x0
    d860:	b.eq	d870 <_Z19decl_assembler_nameP9tree_node@plt+0x6b10>  // b.none
    d864:	cmp	w0, #0x1
    d868:	b.eq	d8ac <_Z19decl_assembler_nameP9tree_node@plt+0x6b4c>  // b.none
    d86c:	b	d960 <_Z19decl_assembler_nameP9tree_node@plt+0x6c00>
    d870:	ldr	x0, [sp, #24]
    d874:	ldr	x1, [x0, #16]
    d878:	ldrsw	x0, [sp, #44]
    d87c:	lsl	x0, x0, #3
    d880:	add	x0, x1, x0
    d884:	ldr	x0, [x0]
    d888:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    d88c:	mov	x2, x0
    d890:	ldr	x1, [sp, #32]
    d894:	ldrsw	x0, [sp, #44]
    d898:	add	x0, x0, #0x2
    d89c:	lsl	x0, x0, #3
    d8a0:	add	x0, x1, x0
    d8a4:	str	x2, [x0, #8]
    d8a8:	b	d978 <_Z19decl_assembler_nameP9tree_node@plt+0x6c18>
    d8ac:	ldr	x0, [sp, #24]
    d8b0:	ldr	x1, [x0, #16]
    d8b4:	ldrsw	x0, [sp, #44]
    d8b8:	lsl	x0, x0, #3
    d8bc:	add	x0, x1, x0
    d8c0:	ldr	x0, [x0]
    d8c4:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    d8c8:	mov	x2, x0
    d8cc:	ldr	x1, [sp, #32]
    d8d0:	ldrsw	x0, [sp, #44]
    d8d4:	add	x0, x0, #0x2
    d8d8:	lsl	x0, x0, #3
    d8dc:	add	x0, x1, x0
    d8e0:	str	x2, [x0, #8]
    d8e4:	b	d978 <_Z19decl_assembler_nameP9tree_node@plt+0x6c18>
    d8e8:	ldr	x0, [sp, #24]
    d8ec:	ldr	x1, [x0, #16]
    d8f0:	ldrsw	x0, [sp, #44]
    d8f4:	lsl	x0, x0, #3
    d8f8:	add	x0, x1, x0
    d8fc:	ldr	x0, [x0]
    d900:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    d904:	mov	x2, x0
    d908:	ldr	x1, [sp, #32]
    d90c:	ldrsw	x0, [sp, #44]
    d910:	add	x0, x0, #0x2
    d914:	lsl	x0, x0, #3
    d918:	add	x0, x1, x0
    d91c:	str	x2, [x0, #8]
    d920:	b	d978 <_Z19decl_assembler_nameP9tree_node@plt+0x6c18>
    d924:	ldr	x0, [sp, #24]
    d928:	ldr	x1, [x0, #16]
    d92c:	ldrsw	x0, [sp, #44]
    d930:	lsl	x0, x0, #3
    d934:	add	x0, x1, x0
    d938:	ldr	x0, [x0]
    d93c:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    d940:	mov	x2, x0
    d944:	ldr	x1, [sp, #32]
    d948:	ldrsw	x0, [sp, #44]
    d94c:	add	x0, x0, #0x2
    d950:	lsl	x0, x0, #3
    d954:	add	x0, x1, x0
    d958:	str	x2, [x0, #8]
    d95c:	b	d978 <_Z19decl_assembler_nameP9tree_node@plt+0x6c18>
    d960:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d964:	add	x2, x0, #0x920
    d968:	mov	w1, #0x93f                 	// #2367
    d96c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    d970:	add	x0, x0, #0x4a8
    d974:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    d978:	b	d808 <_Z19decl_assembler_nameP9tree_node@plt+0x6aa8>
    d97c:	ldr	x0, [sp, #32]
    d980:	ldp	x29, x30, [sp], #48
    d984:	ret
    d988:	stp	x29, x30, [sp, #-80]!
    d98c:	mov	x29, sp
    d990:	str	x0, [sp, #40]
    d994:	str	x1, [sp, #32]
    d998:	str	x2, [sp, #24]
    d99c:	str	x3, [sp, #16]
    d9a0:	ldr	x0, [sp, #40]
    d9a4:	str	x0, [sp, #64]
    d9a8:	ldr	x0, [sp, #32]
    d9ac:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    d9b0:	str	x0, [sp, #56]
    d9b4:	ldr	x0, [sp, #24]
    d9b8:	bl	6960 <_Z14get_identifierPKc@plt>
    d9bc:	str	x0, [sp, #72]
    d9c0:	ldr	x0, [sp, #16]
    d9c4:	cmp	x0, #0x0
    d9c8:	b.eq	d9ec <_Z19decl_assembler_nameP9tree_node@plt+0x6c8c>  // b.none
    d9cc:	ldr	x0, [sp, #16]
    d9d0:	bl	d7e4 <_Z19decl_assembler_nameP9tree_node@plt+0x6a84>
    d9d4:	mov	x3, x0
    d9d8:	ldr	x2, [sp, #72]
    d9dc:	mov	w1, #0x10b                 	// #267
    d9e0:	mov	w0, #0x0                   	// #0
    d9e4:	bl	6190 <_Z16build_min_nt_locj9tree_codez@plt>
    d9e8:	str	x0, [sp, #72]
    d9ec:	mov	w3, #0x1                   	// #1
    d9f0:	mov	w2, #0x5                   	// #5
    d9f4:	ldr	x1, [sp, #72]
    d9f8:	ldr	x0, [sp, #56]
    d9fc:	bl	6440 <_Z18make_typename_typeP9tree_nodeS0_9tag_typesi@plt>
    da00:	str	x0, [sp, #48]
    da04:	ldr	x1, [sp, #48]
    da08:	ldr	x0, [sp, #64]
    da0c:	bl	12710 <plugin_init@@Base+0x16d0>
    da10:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    da14:	ldp	x29, x30, [sp], #80
    da18:	ret
    da1c:	stp	x29, x30, [sp, #-80]!
    da20:	mov	x29, sp
    da24:	str	x0, [sp, #40]
    da28:	str	x1, [sp, #32]
    da2c:	str	x2, [sp, #24]
    da30:	ldr	x0, [sp, #40]
    da34:	str	x0, [sp, #72]
    da38:	ldr	x0, [sp, #32]
    da3c:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    da40:	str	x0, [sp, #64]
    da44:	ldr	x0, [sp, #24]
    da48:	bl	6960 <_Z14get_identifierPKc@plt>
    da4c:	str	x0, [sp, #56]
    da50:	mov	w3, #0x1                   	// #1
    da54:	mov	x2, #0x0                   	// #0
    da58:	ldr	x1, [sp, #56]
    da5c:	ldr	x0, [sp, #64]
    da60:	bl	6450 <_Z27make_unbound_class_templateP9tree_nodeS0_S0_i@plt>
    da64:	str	x0, [sp, #48]
    da68:	ldr	x1, [sp, #48]
    da6c:	ldr	x0, [sp, #72]
    da70:	bl	12710 <plugin_init@@Base+0x16d0>
    da74:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    da78:	ldp	x29, x30, [sp], #80
    da7c:	ret
    da80:	stp	x29, x30, [sp, #-80]!
    da84:	mov	x29, sp
    da88:	str	x0, [sp, #40]
    da8c:	str	x1, [sp, #32]
    da90:	str	x2, [sp, #24]
    da94:	ldr	x0, [sp, #40]
    da98:	str	x0, [sp, #72]
    da9c:	ldr	x0, [sp, #32]
    daa0:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    daa4:	str	x0, [sp, #64]
    daa8:	ldr	x0, [sp, #24]
    daac:	bl	d7e4 <_Z19decl_assembler_nameP9tree_node@plt+0x6a84>
    dab0:	mov	w2, #0x0                   	// #0
    dab4:	mov	x1, x0
    dab8:	ldr	x0, [sp, #64]
    dabc:	bl	6840 <_Z20finish_template_typeP9tree_nodeS0_i@plt>
    dac0:	str	x0, [sp, #56]
    dac4:	ldr	x0, [sp, #56]
    dac8:	ldr	x0, [x0, #8]
    dacc:	mov	x1, x0
    dad0:	ldr	x0, [sp, #72]
    dad4:	bl	12710 <plugin_init@@Base+0x16d0>
    dad8:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    dadc:	ldp	x29, x30, [sp], #80
    dae0:	ret
    dae4:	stp	x29, x30, [sp, #-144]!
    dae8:	mov	x29, sp
    daec:	str	x0, [sp, #56]
    daf0:	str	x1, [sp, #48]
    daf4:	str	w2, [sp, #44]
    daf8:	str	x3, [sp, #32]
    dafc:	str	x4, [sp, #24]
    db00:	str	x5, [sp, #16]
    db04:	ldr	x0, [sp, #56]
    db08:	str	x0, [sp, #88]
    db0c:	ldr	x0, [sp, #48]
    db10:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    db14:	str	x0, [sp, #136]
    db18:	ldr	x0, [sp, #24]
    db1c:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    db20:	str	x0, [sp, #80]
    db24:	ldr	x0, [sp, #136]
    db28:	ldrh	w0, [x0]
    db2c:	cmp	w0, #0x2a
    db30:	b.eq	db74 <_Z19decl_assembler_nameP9tree_node@plt+0x6e14>  // b.none
    db34:	ldr	x0, [sp, #136]
    db38:	ldr	x0, [x0, #8]
    db3c:	str	x0, [sp, #72]
    db40:	ldr	x0, [sp, #72]
    db44:	ldr	x0, [x0, #120]
    db48:	ldr	x1, [sp, #136]
    db4c:	cmp	x1, x0
    db50:	b.eq	db6c <_Z19decl_assembler_nameP9tree_node@plt+0x6e0c>  // b.none
    db54:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    db58:	add	x2, x0, #0x930
    db5c:	mov	w1, #0x97f                 	// #2431
    db60:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    db64:	add	x0, x0, #0x4a8
    db68:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    db6c:	ldr	x0, [sp, #72]
    db70:	str	x0, [sp, #136]
    db74:	ldr	w0, [sp, #44]
    db78:	cmp	w0, #0x40
    db7c:	b.ne	e574 <_Z19decl_assembler_nameP9tree_node@plt+0x7814>  // b.any
    db80:	strb	wzr, [sp, #127]
    db84:	strb	wzr, [sp, #126]
    db88:	str	wzr, [sp, #120]
    db8c:	ldr	x0, [sp, #32]
    db90:	ldrb	w0, [x0]
    db94:	lsl	w0, w0, #8
    db98:	ldr	x1, [sp, #32]
    db9c:	add	x1, x1, #0x1
    dba0:	ldrb	w1, [x1]
    dba4:	orr	w0, w0, w1
    dba8:	mov	w1, #0x7273                	// #29299
    dbac:	cmp	w0, w1
    dbb0:	b.eq	e2a8 <_Z19decl_assembler_nameP9tree_node@plt+0x7548>  // b.none
    dbb4:	mov	w1, #0x7273                	// #29299
    dbb8:	cmp	w0, w1
    dbbc:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dbc0:	mov	w1, #0x726d                	// #29293
    dbc4:	cmp	w0, w1
    dbc8:	b.eq	e1b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7458>  // b.none
    dbcc:	mov	w1, #0x726d                	// #29293
    dbd0:	cmp	w0, w1
    dbd4:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dbd8:	mov	w1, #0x7253                	// #29267
    dbdc:	cmp	w0, w1
    dbe0:	b.eq	e2c8 <_Z19decl_assembler_nameP9tree_node@plt+0x7568>  // b.none
    dbe4:	mov	w1, #0x7253                	// #29267
    dbe8:	cmp	w0, w1
    dbec:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dbf0:	mov	w1, #0x724d                	// #29261
    dbf4:	cmp	w0, w1
    dbf8:	b.eq	e24c <_Z19decl_assembler_nameP9tree_node@plt+0x74ec>  // b.none
    dbfc:	mov	w1, #0x724d                	// #29261
    dc00:	cmp	w0, w1
    dc04:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dc08:	mov	w1, #0x7074                	// #28788
    dc0c:	cmp	w0, w1
    dc10:	b.eq	e378 <_Z19decl_assembler_nameP9tree_node@plt+0x7618>  // b.none
    dc14:	mov	w1, #0x7074                	// #28788
    dc18:	cmp	w0, w1
    dc1c:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dc20:	mov	w1, #0x7073                	// #28787
    dc24:	cmp	w0, w1
    dc28:	b.eq	e14c <_Z19decl_assembler_nameP9tree_node@plt+0x73ec>  // b.none
    dc2c:	mov	w1, #0x7073                	// #28787
    dc30:	cmp	w0, w1
    dc34:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dc38:	mov	w1, #0x7070                	// #28784
    dc3c:	cmp	w0, w1
    dc40:	b.eq	e348 <_Z19decl_assembler_nameP9tree_node@plt+0x75e8>  // b.none
    dc44:	mov	w1, #0x7070                	// #28784
    dc48:	cmp	w0, w1
    dc4c:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dc50:	mov	w1, #0x706d                	// #28781
    dc54:	cmp	w0, w1
    dc58:	b.eq	e36c <_Z19decl_assembler_nameP9tree_node@plt+0x760c>  // b.none
    dc5c:	mov	w1, #0x706d                	// #28781
    dc60:	cmp	w0, w1
    dc64:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dc68:	mov	w1, #0x706c                	// #28780
    dc6c:	cmp	w0, w1
    dc70:	b.eq	e188 <_Z19decl_assembler_nameP9tree_node@plt+0x7428>  // b.none
    dc74:	mov	w1, #0x706c                	// #28780
    dc78:	cmp	w0, w1
    dc7c:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dc80:	mov	w1, #0x704c                	// #28748
    dc84:	cmp	w0, w1
    dc88:	b.eq	e1fc <_Z19decl_assembler_nameP9tree_node@plt+0x749c>  // b.none
    dc8c:	mov	w1, #0x704c                	// #28748
    dc90:	cmp	w0, w1
    dc94:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dc98:	mov	w1, #0x6f72                	// #28530
    dc9c:	cmp	w0, w1
    dca0:	b.eq	e1d0 <_Z19decl_assembler_nameP9tree_node@plt+0x7470>  // b.none
    dca4:	mov	w1, #0x6f72                	// #28530
    dca8:	cmp	w0, w1
    dcac:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dcb0:	mov	w1, #0x6f6f                	// #28527
    dcb4:	cmp	w0, w1
    dcb8:	b.eq	e33c <_Z19decl_assembler_nameP9tree_node@plt+0x75dc>  // b.none
    dcbc:	mov	w1, #0x6f6f                	// #28527
    dcc0:	cmp	w0, w1
    dcc4:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dcc8:	mov	w1, #0x6f52                	// #28498
    dccc:	cmp	w0, w1
    dcd0:	b.eq	e274 <_Z19decl_assembler_nameP9tree_node@plt+0x7514>  // b.none
    dcd4:	mov	w1, #0x6f52                	// #28498
    dcd8:	cmp	w0, w1
    dcdc:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dce0:	mov	w1, #0x6e77                	// #28279
    dce4:	cmp	w0, w1
    dce8:	b.eq	e11c <_Z19decl_assembler_nameP9tree_node@plt+0x73bc>  // b.none
    dcec:	mov	w1, #0x6e77                	// #28279
    dcf0:	cmp	w0, w1
    dcf4:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dcf8:	mov	w1, #0x6e74                	// #28276
    dcfc:	cmp	w0, w1
    dd00:	b.eq	e324 <_Z19decl_assembler_nameP9tree_node@plt+0x75c4>  // b.none
    dd04:	mov	w1, #0x6e74                	// #28276
    dd08:	cmp	w0, w1
    dd0c:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dd10:	mov	w1, #0x6e67                	// #28263
    dd14:	cmp	w0, w1
    dd18:	b.eq	e158 <_Z19decl_assembler_nameP9tree_node@plt+0x73f8>  // b.none
    dd1c:	mov	w1, #0x6e67                	// #28263
    dd20:	cmp	w0, w1
    dd24:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dd28:	mov	w1, #0x6e65                	// #28261
    dd2c:	cmp	w0, w1
    dd30:	b.eq	e2e8 <_Z19decl_assembler_nameP9tree_node@plt+0x7588>  // b.none
    dd34:	mov	w1, #0x6e65                	// #28261
    dd38:	cmp	w0, w1
    dd3c:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dd40:	mov	w1, #0x6e61                	// #28257
    dd44:	cmp	w0, w1
    dd48:	b.eq	e128 <_Z19decl_assembler_nameP9tree_node@plt+0x73c8>  // b.none
    dd4c:	mov	w1, #0x6e61                	// #28257
    dd50:	cmp	w0, w1
    dd54:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dd58:	mov	w1, #0x6d6d                	// #28013
    dd5c:	cmp	w0, w1
    dd60:	b.eq	e354 <_Z19decl_assembler_nameP9tree_node@plt+0x75f4>  // b.none
    dd64:	mov	w1, #0x6d6d                	// #28013
    dd68:	cmp	w0, w1
    dd6c:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dd70:	mov	w1, #0x6d6c                	// #28012
    dd74:	cmp	w0, w1
    dd78:	b.eq	e1a0 <_Z19decl_assembler_nameP9tree_node@plt+0x7440>  // b.none
    dd7c:	mov	w1, #0x6d6c                	// #28012
    dd80:	cmp	w0, w1
    dd84:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dd88:	mov	w1, #0x6d69                	// #28009
    dd8c:	cmp	w0, w1
    dd90:	b.eq	e194 <_Z19decl_assembler_nameP9tree_node@plt+0x7434>  // b.none
    dd94:	mov	w1, #0x6d69                	// #28009
    dd98:	cmp	w0, w1
    dd9c:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dda0:	mov	w1, #0x6d4c                	// #27980
    dda4:	cmp	w0, w1
    dda8:	b.eq	e224 <_Z19decl_assembler_nameP9tree_node@plt+0x74c4>  // b.none
    ddac:	mov	w1, #0x6d4c                	// #27980
    ddb0:	cmp	w0, w1
    ddb4:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    ddb8:	mov	w1, #0x6d49                	// #27977
    ddbc:	cmp	w0, w1
    ddc0:	b.eq	e210 <_Z19decl_assembler_nameP9tree_node@plt+0x74b0>  // b.none
    ddc4:	mov	w1, #0x6d49                	// #27977
    ddc8:	cmp	w0, w1
    ddcc:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    ddd0:	mov	w1, #0x6c74                	// #27764
    ddd4:	cmp	w0, w1
    ddd8:	b.eq	e2f4 <_Z19decl_assembler_nameP9tree_node@plt+0x7594>  // b.none
    dddc:	mov	w1, #0x6c74                	// #27764
    dde0:	cmp	w0, w1
    dde4:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dde8:	mov	w1, #0x6c73                	// #27763
    ddec:	cmp	w0, w1
    ddf0:	b.eq	e29c <_Z19decl_assembler_nameP9tree_node@plt+0x753c>  // b.none
    ddf4:	mov	w1, #0x6c73                	// #27763
    ddf8:	cmp	w0, w1
    ddfc:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    de00:	mov	w1, #0x6c69                	// #27753
    de04:	cmp	w0, w1
    de08:	b.eq	e3b4 <_Z19decl_assembler_nameP9tree_node@plt+0x7654>  // b.none
    de0c:	mov	w1, #0x6c69                	// #27753
    de10:	cmp	w0, w1
    de14:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    de18:	mov	w1, #0x6c65                	// #27749
    de1c:	cmp	w0, w1
    de20:	b.eq	e30c <_Z19decl_assembler_nameP9tree_node@plt+0x75ac>  // b.none
    de24:	mov	w1, #0x6c65                	// #27749
    de28:	cmp	w0, w1
    de2c:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    de30:	mov	w1, #0x6c53                	// #27731
    de34:	cmp	w0, w1
    de38:	b.eq	e2b4 <_Z19decl_assembler_nameP9tree_node@plt+0x7554>  // b.none
    de3c:	mov	w1, #0x6c53                	// #27731
    de40:	cmp	w0, w1
    de44:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    de48:	mov	w1, #0x6978                	// #27000
    de4c:	cmp	w0, w1
    de50:	b.eq	e390 <_Z19decl_assembler_nameP9tree_node@plt+0x7630>  // b.none
    de54:	mov	w1, #0x6978                	// #27000
    de58:	cmp	w0, w1
    de5c:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    de60:	mov	w1, #0x6774                	// #26484
    de64:	cmp	w0, w1
    de68:	b.eq	e300 <_Z19decl_assembler_nameP9tree_node@plt+0x75a0>  // b.none
    de6c:	mov	w1, #0x6774                	// #26484
    de70:	cmp	w0, w1
    de74:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    de78:	mov	w1, #0x6765                	// #26469
    de7c:	cmp	w0, w1
    de80:	b.eq	e318 <_Z19decl_assembler_nameP9tree_node@plt+0x75b8>  // b.none
    de84:	mov	w1, #0x6765                	// #26469
    de88:	cmp	w0, w1
    de8c:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    de90:	mov	w1, #0x6571                	// #25969
    de94:	cmp	w0, w1
    de98:	b.eq	e2dc <_Z19decl_assembler_nameP9tree_node@plt+0x757c>  // b.none
    de9c:	mov	w1, #0x6571                	// #25969
    dea0:	cmp	w0, w1
    dea4:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dea8:	mov	w1, #0x656f                	// #25967
    deac:	cmp	w0, w1
    deb0:	b.eq	e1dc <_Z19decl_assembler_nameP9tree_node@plt+0x747c>  // b.none
    deb4:	mov	w1, #0x656f                	// #25967
    deb8:	cmp	w0, w1
    debc:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dec0:	mov	w1, #0x654f                	// #25935
    dec4:	cmp	w0, w1
    dec8:	b.eq	e288 <_Z19decl_assembler_nameP9tree_node@plt+0x7528>  // b.none
    decc:	mov	w1, #0x654f                	// #25935
    ded0:	cmp	w0, w1
    ded4:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    ded8:	mov	w1, #0x6476                	// #25718
    dedc:	cmp	w0, w1
    dee0:	b.eq	e1ac <_Z19decl_assembler_nameP9tree_node@plt+0x744c>  // b.none
    dee4:	mov	w1, #0x6476                	// #25718
    dee8:	cmp	w0, w1
    deec:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    def0:	mov	w1, #0x646c                	// #25708
    def4:	cmp	w0, w1
    def8:	b.eq	e134 <_Z19decl_assembler_nameP9tree_node@plt+0x73d4>  // b.none
    defc:	mov	w1, #0x646c                	// #25708
    df00:	cmp	w0, w1
    df04:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    df08:	mov	w1, #0x6465                	// #25701
    df0c:	cmp	w0, w1
    df10:	b.eq	e170 <_Z19decl_assembler_nameP9tree_node@plt+0x7410>  // b.none
    df14:	mov	w1, #0x6465                	// #25701
    df18:	cmp	w0, w1
    df1c:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    df20:	mov	w1, #0x6461                	// #25697
    df24:	cmp	w0, w1
    df28:	b.eq	e140 <_Z19decl_assembler_nameP9tree_node@plt+0x73e0>  // b.none
    df2c:	mov	w1, #0x6461                	// #25697
    df30:	cmp	w0, w1
    df34:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    df38:	mov	w1, #0x6456                	// #25686
    df3c:	cmp	w0, w1
    df40:	b.eq	e238 <_Z19decl_assembler_nameP9tree_node@plt+0x74d8>  // b.none
    df44:	mov	w1, #0x6456                	// #25686
    df48:	cmp	w0, w1
    df4c:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    df50:	mov	w1, #0x6376                	// #25462
    df54:	cmp	w0, w1
    df58:	b.eq	e39c <_Z19decl_assembler_nameP9tree_node@plt+0x763c>  // b.none
    df5c:	mov	w1, #0x6376                	// #25462
    df60:	cmp	w0, w1
    df64:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    df68:	mov	w1, #0x636f                	// #25455
    df6c:	cmp	w0, w1
    df70:	b.eq	e17c <_Z19decl_assembler_nameP9tree_node@plt+0x741c>  // b.none
    df74:	mov	w1, #0x636f                	// #25455
    df78:	cmp	w0, w1
    df7c:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    df80:	mov	w1, #0x636d                	// #25453
    df84:	cmp	w0, w1
    df88:	b.eq	e360 <_Z19decl_assembler_nameP9tree_node@plt+0x7600>  // b.none
    df8c:	mov	w1, #0x636d                	// #25453
    df90:	cmp	w0, w1
    df94:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    df98:	mov	w1, #0x636c                	// #25452
    df9c:	cmp	w0, w1
    dfa0:	b.eq	e384 <_Z19decl_assembler_nameP9tree_node@plt+0x7624>  // b.none
    dfa4:	mov	w1, #0x636c                	// #25452
    dfa8:	cmp	w0, w1
    dfac:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dfb0:	mov	w1, #0x616e                	// #24942
    dfb4:	cmp	w0, w1
    dfb8:	b.eq	e1c4 <_Z19decl_assembler_nameP9tree_node@plt+0x7464>  // b.none
    dfbc:	mov	w1, #0x616e                	// #24942
    dfc0:	cmp	w0, w1
    dfc4:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dfc8:	mov	w1, #0x6164                	// #24932
    dfcc:	cmp	w0, w1
    dfd0:	b.eq	e164 <_Z19decl_assembler_nameP9tree_node@plt+0x7404>  // b.none
    dfd4:	mov	w1, #0x6164                	// #24932
    dfd8:	cmp	w0, w1
    dfdc:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dfe0:	mov	w1, #0x6161                	// #24929
    dfe4:	cmp	w0, w1
    dfe8:	b.eq	e330 <_Z19decl_assembler_nameP9tree_node@plt+0x75d0>  // b.none
    dfec:	mov	w1, #0x6161                	// #24929
    dff0:	cmp	w0, w1
    dff4:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    dff8:	mov	w1, #0x6153                	// #24915
    dffc:	cmp	w0, w1
    e000:	b.eq	e1e8 <_Z19decl_assembler_nameP9tree_node@plt+0x7488>  // b.none
    e004:	mov	w1, #0x6153                	// #24915
    e008:	cmp	w0, w1
    e00c:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    e010:	mov	w1, #0x614e                	// #24910
    e014:	cmp	w0, w1
    e018:	b.eq	e260 <_Z19decl_assembler_nameP9tree_node@plt+0x7500>  // b.none
    e01c:	mov	w1, #0x614e                	// #24910
    e020:	cmp	w0, w1
    e024:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    e028:	mov	w1, #0x4334                	// #17204
    e02c:	cmp	w0, w1
    e030:	b.gt	e0b4 <_Z19decl_assembler_nameP9tree_node@plt+0x7354>
    e034:	mov	w1, #0x4300                	// #17152
    e038:	cmp	w0, w1
    e03c:	b.ge	e07c <_Z19decl_assembler_nameP9tree_node@plt+0x731c>  // b.tcont
    e040:	b	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    e044:	mov	w1, w0
    e048:	mov	w0, #0xffffbc00            	// #-17408
    e04c:	add	w0, w1, w0
    e050:	mov	x1, #0x1                   	// #1
    e054:	lsl	x1, x1, x0
    e058:	mov	x0, #0x100000001           	// #4294967297
    e05c:	movk	x0, #0x17, lsl #48
    e060:	and	x0, x1, x0
    e064:	cmp	x0, #0x0
    e068:	cset	w0, ne  // ne = any
    e06c:	and	w0, w0, #0xff
    e070:	cmp	w0, #0x0
    e074:	b.ne	e0e4 <_Z19decl_assembler_nameP9tree_node@plt+0x7384>  // b.any
    e078:	b	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    e07c:	mov	w1, w0
    e080:	mov	w0, #0xffffbd00            	// #-17152
    e084:	add	w0, w1, w0
    e088:	mov	x1, #0x1                   	// #1
    e08c:	lsl	x1, x1, x0
    e090:	mov	x0, #0x100000001           	// #4294967297
    e094:	movk	x0, #0x16, lsl #48
    e098:	and	x0, x1, x0
    e09c:	cmp	x0, #0x0
    e0a0:	cset	w0, ne  // ne = any
    e0a4:	and	w0, w0, #0xff
    e0a8:	cmp	w0, #0x0
    e0ac:	b.ne	e0d0 <_Z19decl_assembler_nameP9tree_node@plt+0x7370>  // b.any
    e0b0:	b	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    e0b4:	mov	w1, #0x4434                	// #17460
    e0b8:	cmp	w0, w1
    e0bc:	b.gt	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    e0c0:	mov	w1, #0x4400                	// #17408
    e0c4:	cmp	w0, w1
    e0c8:	b.ge	e044 <_Z19decl_assembler_nameP9tree_node@plt+0x72e4>  // b.tcont
    e0cc:	b	e49c <_Z19decl_assembler_nameP9tree_node@plt+0x773c>
    e0d0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    e0d4:	ldr	x0, [x0, #3880]
    e0d8:	ldr	x0, [x0, #160]
    e0dc:	str	x0, [sp, #128]
    e0e0:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e0e4:	ldr	x0, [sp, #16]
    e0e8:	cmp	x0, #0x0
    e0ec:	b.eq	e108 <_Z19decl_assembler_nameP9tree_node@plt+0x73a8>  // b.none
    e0f0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    e0f4:	add	x2, x0, #0x930
    e0f8:	mov	w1, #0x997                 	// #2455
    e0fc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    e100:	add	x0, x0, #0x4a8
    e104:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    e108:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    e10c:	ldr	x0, [x0, #3880]
    e110:	ldr	x0, [x0, #184]
    e114:	str	x0, [sp, #128]
    e118:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e11c:	mov	w0, #0xf3                  	// #243
    e120:	str	w0, [sp, #120]
    e124:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e128:	mov	w0, #0xf4                  	// #244
    e12c:	str	w0, [sp, #120]
    e130:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e134:	mov	w0, #0xf5                  	// #245
    e138:	str	w0, [sp, #120]
    e13c:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e140:	mov	w0, #0xf6                  	// #246
    e144:	str	w0, [sp, #120]
    e148:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e14c:	mov	w0, #0x46                  	// #70
    e150:	str	w0, [sp, #120]
    e154:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e158:	mov	w0, #0x47                  	// #71
    e15c:	str	w0, [sp, #120]
    e160:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e164:	mov	w0, #0x63                  	// #99
    e168:	str	w0, [sp, #120]
    e16c:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e170:	mov	w0, #0x48                  	// #72
    e174:	str	w0, [sp, #120]
    e178:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e17c:	mov	w0, #0x64                  	// #100
    e180:	str	w0, [sp, #120]
    e184:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e188:	mov	w0, #0x46                  	// #70
    e18c:	str	w0, [sp, #120]
    e190:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e194:	mov	w0, #0x47                  	// #71
    e198:	str	w0, [sp, #120]
    e19c:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e1a0:	mov	w0, #0x48                  	// #72
    e1a4:	str	w0, [sp, #120]
    e1a8:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e1ac:	mov	w0, #0x4c                  	// #76
    e1b0:	str	w0, [sp, #120]
    e1b4:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e1b8:	mov	w0, #0x50                  	// #80
    e1bc:	str	w0, [sp, #120]
    e1c0:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e1c4:	mov	w0, #0x63                  	// #99
    e1c8:	str	w0, [sp, #120]
    e1cc:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e1d0:	mov	w0, #0x61                  	// #97
    e1d4:	str	w0, [sp, #120]
    e1d8:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e1dc:	mov	w0, #0x62                  	// #98
    e1e0:	str	w0, [sp, #120]
    e1e4:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e1e8:	mov	w0, #0x7e                  	// #126
    e1ec:	str	w0, [sp, #120]
    e1f0:	mov	w0, #0x1                   	// #1
    e1f4:	strb	w0, [sp, #127]
    e1f8:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e1fc:	mov	w0, #0x46                  	// #70
    e200:	str	w0, [sp, #120]
    e204:	mov	w0, #0x1                   	// #1
    e208:	strb	w0, [sp, #127]
    e20c:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e210:	mov	w0, #0x47                  	// #71
    e214:	str	w0, [sp, #120]
    e218:	mov	w0, #0x1                   	// #1
    e21c:	strb	w0, [sp, #127]
    e220:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e224:	mov	w0, #0x48                  	// #72
    e228:	str	w0, [sp, #120]
    e22c:	mov	w0, #0x1                   	// #1
    e230:	strb	w0, [sp, #127]
    e234:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e238:	mov	w0, #0x4c                  	// #76
    e23c:	str	w0, [sp, #120]
    e240:	mov	w0, #0x1                   	// #1
    e244:	strb	w0, [sp, #127]
    e248:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e24c:	mov	w0, #0x50                  	// #80
    e250:	str	w0, [sp, #120]
    e254:	mov	w0, #0x1                   	// #1
    e258:	strb	w0, [sp, #127]
    e25c:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e260:	mov	w0, #0x63                  	// #99
    e264:	str	w0, [sp, #120]
    e268:	mov	w0, #0x1                   	// #1
    e26c:	strb	w0, [sp, #127]
    e270:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e274:	mov	w0, #0x61                  	// #97
    e278:	str	w0, [sp, #120]
    e27c:	mov	w0, #0x1                   	// #1
    e280:	strb	w0, [sp, #127]
    e284:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e288:	mov	w0, #0x62                  	// #98
    e28c:	str	w0, [sp, #120]
    e290:	mov	w0, #0x1                   	// #1
    e294:	strb	w0, [sp, #127]
    e298:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e29c:	mov	w0, #0x5d                  	// #93
    e2a0:	str	w0, [sp, #120]
    e2a4:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e2a8:	mov	w0, #0x5e                  	// #94
    e2ac:	str	w0, [sp, #120]
    e2b0:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e2b4:	mov	w0, #0x5d                  	// #93
    e2b8:	str	w0, [sp, #120]
    e2bc:	mov	w0, #0x1                   	// #1
    e2c0:	strb	w0, [sp, #127]
    e2c4:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e2c8:	mov	w0, #0x5e                  	// #94
    e2cc:	str	w0, [sp, #120]
    e2d0:	mov	w0, #0x1                   	// #1
    e2d4:	strb	w0, [sp, #127]
    e2d8:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e2dc:	mov	w0, #0x6f                  	// #111
    e2e0:	str	w0, [sp, #120]
    e2e4:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e2e8:	mov	w0, #0x70                  	// #112
    e2ec:	str	w0, [sp, #120]
    e2f0:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e2f4:	mov	w0, #0x6b                  	// #107
    e2f8:	str	w0, [sp, #120]
    e2fc:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e300:	mov	w0, #0x6d                  	// #109
    e304:	str	w0, [sp, #120]
    e308:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e30c:	mov	w0, #0x6c                  	// #108
    e310:	str	w0, [sp, #120]
    e314:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e318:	mov	w0, #0x6e                  	// #110
    e31c:	str	w0, [sp, #120]
    e320:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e324:	mov	w0, #0x6a                  	// #106
    e328:	str	w0, [sp, #120]
    e32c:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e330:	mov	w0, #0x65                  	// #101
    e334:	str	w0, [sp, #120]
    e338:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e33c:	mov	w0, #0x66                  	// #102
    e340:	str	w0, [sp, #120]
    e344:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e348:	mov	w0, #0x8a                  	// #138
    e34c:	str	w0, [sp, #120]
    e350:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e354:	mov	w0, #0x87                  	// #135
    e358:	str	w0, [sp, #120]
    e35c:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e360:	mov	w0, #0x38                  	// #56
    e364:	str	w0, [sp, #120]
    e368:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e36c:	mov	w0, #0xf8                  	// #248
    e370:	str	w0, [sp, #120]
    e374:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e378:	mov	w0, #0x2e                  	// #46
    e37c:	str	w0, [sp, #120]
    e380:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e384:	mov	w0, #0x42                  	// #66
    e388:	str	w0, [sp, #120]
    e38c:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e390:	mov	w0, #0x30                  	// #48
    e394:	str	w0, [sp, #120]
    e398:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e39c:	mov	w0, #0x1                   	// #1
    e3a0:	strb	w0, [sp, #126]
    e3a4:	ldr	x0, [sp, #80]
    e3a8:	bl	61b0 <_Z17make_conv_op_nameP9tree_node@plt>
    e3ac:	str	x0, [sp, #128]
    e3b0:	b	e4b8 <_Z19decl_assembler_nameP9tree_node@plt+0x7758>
    e3b4:	ldr	x0, [sp, #32]
    e3b8:	add	x0, x0, #0x2
    e3bc:	str	x0, [sp, #112]
    e3c0:	strb	wzr, [sp, #111]
    e3c4:	ldr	x0, [sp, #112]
    e3c8:	ldrb	w0, [x0]
    e3cc:	cmp	w0, #0x2f
    e3d0:	b.ls	e478 <_Z19decl_assembler_nameP9tree_node@plt+0x7718>  // b.plast
    e3d4:	ldr	x0, [sp, #112]
    e3d8:	ldrb	w0, [x0]
    e3dc:	cmp	w0, #0x39
    e3e0:	b.hi	e478 <_Z19decl_assembler_nameP9tree_node@plt+0x7718>  // b.pmore
    e3e4:	str	wzr, [sp, #104]
    e3e8:	ldr	w1, [sp, #104]
    e3ec:	mov	w0, w1
    e3f0:	lsl	w0, w0, #2
    e3f4:	add	w0, w0, w1
    e3f8:	lsl	w0, w0, #1
    e3fc:	str	w0, [sp, #104]
    e400:	ldr	x0, [sp, #112]
    e404:	ldrb	w0, [x0]
    e408:	mov	w1, w0
    e40c:	ldr	w0, [sp, #104]
    e410:	add	w0, w1, w0
    e414:	sub	w0, w0, #0x30
    e418:	str	w0, [sp, #104]
    e41c:	ldr	x0, [sp, #112]
    e420:	add	x0, x0, #0x1
    e424:	str	x0, [sp, #112]
    e428:	ldr	x0, [sp, #112]
    e42c:	ldrb	w0, [x0]
    e430:	cmp	w0, #0x0
    e434:	b.eq	e45c <_Z19decl_assembler_nameP9tree_node@plt+0x76fc>  // b.none
    e438:	ldr	x0, [sp, #112]
    e43c:	ldrb	w0, [x0]
    e440:	cmp	w0, #0x2f
    e444:	b.ls	e45c <_Z19decl_assembler_nameP9tree_node@plt+0x76fc>  // b.plast
    e448:	ldr	x0, [sp, #112]
    e44c:	ldrb	w0, [x0]
    e450:	cmp	w0, #0x39
    e454:	b.hi	e45c <_Z19decl_assembler_nameP9tree_node@plt+0x76fc>  // b.pmore
    e458:	b	e3e8 <_Z19decl_assembler_nameP9tree_node@plt+0x7688>
    e45c:	ldr	w0, [sp, #104]
    e460:	mov	x1, x0
    e464:	ldr	x0, [sp, #112]
    e468:	bl	6b50 <xstrndup@plt>
    e46c:	str	x0, [sp, #112]
    e470:	mov	w0, #0x1                   	// #1
    e474:	strb	w0, [sp, #111]
    e478:	ldr	x0, [sp, #112]
    e47c:	bl	6a60 <_Z22cp_literal_operator_idPKc@plt>
    e480:	str	x0, [sp, #128]
    e484:	ldrb	w0, [sp, #111]
    e488:	cmp	w0, #0x0
    e48c:	b.eq	e4b4 <_Z19decl_assembler_nameP9tree_node@plt+0x7754>  // b.none
    e490:	ldr	x0, [sp, #112]
    e494:	bl	6320 <free@plt>
    e498:	b	e4b4 <_Z19decl_assembler_nameP9tree_node@plt+0x7754>
    e49c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    e4a0:	add	x2, x0, #0x930
    e4a4:	mov	w1, #0xa4c                 	// #2636
    e4a8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    e4ac:	add	x0, x0, #0x4a8
    e4b0:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    e4b4:	nop
    e4b8:	ldrb	w0, [sp, #126]
    e4bc:	eor	w0, w0, #0x1
    e4c0:	and	w0, w0, #0xff
    e4c4:	cmp	w0, #0x0
    e4c8:	b.eq	e4f0 <_Z19decl_assembler_nameP9tree_node@plt+0x7790>  // b.none
    e4cc:	ldr	x0, [sp, #80]
    e4d0:	cmp	x0, #0x0
    e4d4:	b.eq	e4f0 <_Z19decl_assembler_nameP9tree_node@plt+0x7790>  // b.none
    e4d8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    e4dc:	add	x2, x0, #0x930
    e4e0:	mov	w1, #0xa4f                 	// #2639
    e4e4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    e4e8:	add	x0, x0, #0x4a8
    e4ec:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    e4f0:	ldr	w0, [sp, #120]
    e4f4:	cmp	w0, #0x0
    e4f8:	b.eq	e550 <_Z19decl_assembler_nameP9tree_node@plt+0x77f0>  // b.none
    e4fc:	ldrb	w0, [sp, #127]
    e500:	mov	w4, w0
    e504:	ldr	w2, [sp, #120]
    e508:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    e50c:	ldr	x1, [x0, #3800]
    e510:	sxtw	x0, w2
    e514:	ldrb	w0, [x1, x0]
    e518:	mov	w1, w0
    e51c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    e520:	ldr	x2, [x0, #3848]
    e524:	sxtw	x3, w1
    e528:	sxtw	x1, w4
    e52c:	mov	x0, x1
    e530:	lsl	x0, x0, #3
    e534:	sub	x0, x0, x1
    e538:	lsl	x0, x0, #3
    e53c:	add	x0, x0, x3
    e540:	lsl	x0, x0, #5
    e544:	add	x0, x2, x0
    e548:	ldr	x0, [x0]
    e54c:	str	x0, [sp, #128]
    e550:	ldr	x0, [sp, #128]
    e554:	cmp	x0, #0x0
    e558:	b.ne	e5c8 <_Z19decl_assembler_nameP9tree_node@plt+0x7868>  // b.any
    e55c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    e560:	add	x2, x0, #0x930
    e564:	mov	w1, #0xa54                 	// #2644
    e568:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    e56c:	add	x0, x0, #0x4a8
    e570:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    e574:	ldr	w0, [sp, #44]
    e578:	cmp	w0, #0xf
    e57c:	b.eq	e598 <_Z19decl_assembler_nameP9tree_node@plt+0x7838>  // b.none
    e580:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    e584:	add	x2, x0, #0x930
    e588:	mov	w1, #0xa58                 	// #2648
    e58c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    e590:	add	x0, x0, #0x4a8
    e594:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    e598:	ldr	x0, [sp, #80]
    e59c:	cmp	x0, #0x0
    e5a0:	b.eq	e5bc <_Z19decl_assembler_nameP9tree_node@plt+0x785c>  // b.none
    e5a4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    e5a8:	add	x2, x0, #0x930
    e5ac:	mov	w1, #0xa59                 	// #2649
    e5b0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    e5b4:	add	x0, x0, #0x4a8
    e5b8:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    e5bc:	ldr	x0, [sp, #32]
    e5c0:	bl	6960 <_Z14get_identifierPKc@plt>
    e5c4:	str	x0, [sp, #128]
    e5c8:	ldr	x0, [sp, #128]
    e5cc:	str	x0, [sp, #96]
    e5d0:	ldr	x0, [sp, #136]
    e5d4:	cmp	x0, #0x0
    e5d8:	b.ne	e600 <_Z19decl_assembler_nameP9tree_node@plt+0x78a0>  // b.any
    e5dc:	mov	w5, #0x0                   	// #0
    e5e0:	mov	w4, #0x0                   	// #0
    e5e4:	mov	w3, #0x1                   	// #1
    e5e8:	mov	w2, #0x0                   	// #0
    e5ec:	mov	w1, #0x0                   	// #0
    e5f0:	ldr	x0, [sp, #96]
    e5f4:	bl	65f0 <_Z16lookup_name_realP9tree_nodeiibii@plt>
    e5f8:	str	x0, [sp, #96]
    e5fc:	b	e674 <_Z19decl_assembler_nameP9tree_node@plt+0x7914>
    e600:	ldr	x0, [sp, #136]
    e604:	ldrh	w0, [x0]
    e608:	mov	w1, w0
    e60c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    e610:	ldr	x0, [x0, #3952]
    e614:	sxtw	x1, w1
    e618:	ldr	w0, [x0, x1, lsl #2]
    e61c:	cmp	w0, #0x2
    e620:	b.ne	e640 <_Z19decl_assembler_nameP9tree_node@plt+0x78e0>  // b.any
    e624:	ldr	x0, [sp, #136]
    e628:	bl	6ca0 <_Z17dependent_scope_pP9tree_node@plt>
    e62c:	and	w0, w0, #0xff
    e630:	eor	w0, w0, #0x1
    e634:	and	w0, w0, #0xff
    e638:	cmp	w0, #0x0
    e63c:	b.eq	e648 <_Z19decl_assembler_nameP9tree_node@plt+0x78e8>  // b.none
    e640:	mov	w0, #0x1                   	// #1
    e644:	b	e64c <_Z19decl_assembler_nameP9tree_node@plt+0x78ec>
    e648:	mov	w0, #0x0                   	// #0
    e64c:	cmp	w0, #0x0
    e650:	b.eq	e674 <_Z19decl_assembler_nameP9tree_node@plt+0x7914>  // b.none
    e654:	mov	w4, #0x0                   	// #0
    e658:	mov	w3, #0x1                   	// #1
    e65c:	mov	w2, #0x0                   	// #0
    e660:	ldr	x1, [sp, #96]
    e664:	ldr	x0, [sp, #136]
    e668:	bl	6380 <_Z21lookup_qualified_nameP9tree_nodeS0_ibb@plt>
    e66c:	str	x0, [sp, #96]
    e670:	str	xzr, [sp, #136]
    e674:	ldr	x0, [sp, #16]
    e678:	cmp	x0, #0x0
    e67c:	b.eq	e698 <_Z19decl_assembler_nameP9tree_node@plt+0x7938>  // b.none
    e680:	ldr	x0, [sp, #16]
    e684:	bl	d7e4 <_Z19decl_assembler_nameP9tree_node@plt+0x6a84>
    e688:	mov	x1, x0
    e68c:	ldr	x0, [sp, #96]
    e690:	bl	6cb0 <_Z24lookup_template_functionP9tree_nodeS0_@plt>
    e694:	str	x0, [sp, #96]
    e698:	ldr	x0, [sp, #136]
    e69c:	cmp	x0, #0x0
    e6a0:	b.eq	e6cc <_Z19decl_assembler_nameP9tree_node@plt+0x796c>  // b.none
    e6a4:	ldr	x0, [sp, #16]
    e6a8:	cmp	x0, #0x0
    e6ac:	cset	w0, ne  // ne = any
    e6b0:	and	w0, w0, #0xff
    e6b4:	mov	w3, w0
    e6b8:	ldr	x2, [sp, #96]
    e6bc:	ldr	x1, [sp, #136]
    e6c0:	mov	x0, #0x0                   	// #0
    e6c4:	bl	6670 <_Z20build_qualified_nameP9tree_nodeS0_S0_b@plt>
    e6c8:	str	x0, [sp, #96]
    e6cc:	ldr	x1, [sp, #96]
    e6d0:	ldr	x0, [sp, #88]
    e6d4:	bl	12710 <plugin_init@@Base+0x16d0>
    e6d8:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    e6dc:	ldp	x29, x30, [sp], #144
    e6e0:	ret
    e6e4:	stp	x29, x30, [sp, #-96]!
    e6e8:	mov	x29, sp
    e6ec:	str	x0, [sp, #40]
    e6f0:	str	x1, [sp, #32]
    e6f4:	str	x2, [sp, #24]
    e6f8:	ldr	x0, [sp, #40]
    e6fc:	str	x0, [sp, #88]
    e700:	ldr	x0, [sp, #32]
    e704:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    e708:	str	x0, [sp, #80]
    e70c:	ldr	x0, [sp, #24]
    e710:	str	x0, [sp, #64]
    e714:	add	x1, sp, #0x40
    e718:	add	x0, sp, #0x30
    e71c:	bl	134a8 <plugin_init@@Base+0x2468>
    e720:	ldp	x1, x2, [sp, #48]
    e724:	ldr	x0, [sp, #80]
    e728:	bl	68d0 <_Z18build_int_cst_typeP9tree_node8poly_intILj2ElE@plt>
    e72c:	str	x0, [sp, #72]
    e730:	ldr	x1, [sp, #72]
    e734:	ldr	x0, [sp, #88]
    e738:	bl	12710 <plugin_init@@Base+0x16d0>
    e73c:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    e740:	ldp	x29, x30, [sp], #96
    e744:	ret
    e748:	stp	x29, x30, [sp, #-80]!
    e74c:	mov	x29, sp
    e750:	str	x0, [sp, #40]
    e754:	str	x1, [sp, #32]
    e758:	str	w2, [sp, #28]
    e75c:	ldr	x0, [sp, #40]
    e760:	str	x0, [sp, #64]
    e764:	ldr	x0, [sp, #32]
    e768:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    e76c:	str	x0, [sp, #56]
    e770:	ldr	x0, [sp, #56]
    e774:	ldrh	w0, [x0]
    e778:	mov	w1, w0
    e77c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    e780:	ldr	x0, [x0, #3952]
    e784:	sxtw	x1, w1
    e788:	ldr	w0, [x0, x1, lsl #2]
    e78c:	cmp	w0, #0x3
    e790:	b.eq	e7ac <_Z19decl_assembler_nameP9tree_node@plt+0x7a4c>  // b.none
    e794:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    e798:	add	x2, x0, #0x950
    e79c:	mov	w1, #0xa7e                 	// #2686
    e7a0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    e7a4:	add	x0, x0, #0x4a8
    e7a8:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    e7ac:	ldr	x0, [sp, #56]
    e7b0:	str	x0, [sp, #72]
    e7b4:	ldr	w0, [sp, #28]
    e7b8:	cmp	w0, #0x0
    e7bc:	b.eq	e82c <_Z19decl_assembler_nameP9tree_node@plt+0x7acc>  // b.none
    e7c0:	ldr	x0, [sp, #56]
    e7c4:	ldr	x0, [x0, #40]
    e7c8:	cmp	x0, #0x0
    e7cc:	b.eq	e7f8 <_Z19decl_assembler_nameP9tree_node@plt+0x7a98>  // b.none
    e7d0:	ldr	x0, [sp, #56]
    e7d4:	ldr	x0, [x0, #40]
    e7d8:	ldrh	w0, [x0]
    e7dc:	mov	w1, w0
    e7e0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    e7e4:	ldr	x0, [x0, #3952]
    e7e8:	sxtw	x1, w1
    e7ec:	ldr	w0, [x0, x1, lsl #2]
    e7f0:	cmp	w0, #0x2
    e7f4:	b.eq	e810 <_Z19decl_assembler_nameP9tree_node@plt+0x7ab0>  // b.none
    e7f8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    e7fc:	add	x2, x0, #0x950
    e800:	mov	w1, #0xa82                 	// #2690
    e804:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    e808:	add	x0, x0, #0x4a8
    e80c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    e810:	ldr	x0, [sp, #56]
    e814:	ldr	x0, [x0, #40]
    e818:	mov	w3, #0x1                   	// #1
    e81c:	mov	w2, #0x1                   	// #1
    e820:	ldr	x1, [sp, #56]
    e824:	bl	6240 <_Z16build_offset_refP9tree_nodeS0_bi@plt>
    e828:	str	x0, [sp, #72]
    e82c:	ldr	x1, [sp, #72]
    e830:	ldr	x0, [sp, #64]
    e834:	bl	12710 <plugin_init@@Base+0x16d0>
    e838:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    e83c:	ldp	x29, x30, [sp], #80
    e840:	ret
    e844:	stp	x29, x30, [sp, #-112]!
    e848:	mov	x29, sp
    e84c:	str	x0, [sp, #40]
    e850:	str	x1, [sp, #32]
    e854:	str	x2, [sp, #24]
    e858:	ldr	x0, [sp, #40]
    e85c:	str	x0, [sp, #88]
    e860:	ldr	x0, [sp, #24]
    e864:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    e868:	str	x0, [sp, #80]
    e86c:	str	wzr, [sp, #108]
    e870:	strb	wzr, [sp, #107]
    e874:	ldr	x0, [sp, #32]
    e878:	ldrb	w0, [x0]
    e87c:	lsl	w0, w0, #8
    e880:	ldr	x1, [sp, #32]
    e884:	add	x1, x1, #0x1
    e888:	ldrb	w1, [x1]
    e88c:	orr	w0, w0, w1
    e890:	mov	w1, #0x7477                	// #29815
    e894:	cmp	w0, w1
    e898:	b.eq	eae8 <_Z19decl_assembler_nameP9tree_node@plt+0x7d88>  // b.none
    e89c:	mov	w1, #0x7477                	// #29815
    e8a0:	cmp	w0, w1
    e8a4:	b.gt	ebd8 <_Z19decl_assembler_nameP9tree_node@plt+0x7e78>
    e8a8:	mov	w1, #0x7472                	// #29810
    e8ac:	cmp	w0, w1
    e8b0:	b.eq	eb18 <_Z19decl_assembler_nameP9tree_node@plt+0x7db8>  // b.none
    e8b4:	mov	w1, #0x7472                	// #29810
    e8b8:	cmp	w0, w1
    e8bc:	b.gt	ebd8 <_Z19decl_assembler_nameP9tree_node@plt+0x7e78>
    e8c0:	mov	w1, #0x7465                	// #29797
    e8c4:	cmp	w0, w1
    e8c8:	b.eq	eb48 <_Z19decl_assembler_nameP9tree_node@plt+0x7de8>  // b.none
    e8cc:	mov	w1, #0x7465                	// #29797
    e8d0:	cmp	w0, w1
    e8d4:	b.gt	ebd8 <_Z19decl_assembler_nameP9tree_node@plt+0x7e78>
    e8d8:	mov	w1, #0x737a                	// #29562
    e8dc:	cmp	w0, w1
    e8e0:	b.eq	eb54 <_Z19decl_assembler_nameP9tree_node@plt+0x7df4>  // b.none
    e8e4:	mov	w1, #0x737a                	// #29562
    e8e8:	cmp	w0, w1
    e8ec:	b.gt	ebd8 <_Z19decl_assembler_nameP9tree_node@plt+0x7e78>
    e8f0:	mov	w1, #0x7370                	// #29552
    e8f4:	cmp	w0, w1
    e8f8:	b.eq	ebc0 <_Z19decl_assembler_nameP9tree_node@plt+0x7e60>  // b.none
    e8fc:	mov	w1, #0x7370                	// #29552
    e900:	cmp	w0, w1
    e904:	b.gt	ebd8 <_Z19decl_assembler_nameP9tree_node@plt+0x7e78>
    e908:	mov	w1, #0x735a                	// #29530
    e90c:	cmp	w0, w1
    e910:	b.eq	ebcc <_Z19decl_assembler_nameP9tree_node@plt+0x7e6c>  // b.none
    e914:	mov	w1, #0x735a                	// #29530
    e918:	cmp	w0, w1
    e91c:	b.gt	ebd8 <_Z19decl_assembler_nameP9tree_node@plt+0x7e78>
    e920:	mov	w1, #0x7073                	// #28787
    e924:	cmp	w0, w1
    e928:	b.eq	ea44 <_Z19decl_assembler_nameP9tree_node@plt+0x7ce4>  // b.none
    e92c:	mov	w1, #0x7073                	// #28787
    e930:	cmp	w0, w1
    e934:	b.gt	ebd8 <_Z19decl_assembler_nameP9tree_node@plt+0x7e78>
    e938:	mov	w1, #0x7070                	// #28784
    e93c:	cmp	w0, w1
    e940:	b.eq	ea8c <_Z19decl_assembler_nameP9tree_node@plt+0x7d2c>  // b.none
    e944:	mov	w1, #0x7070                	// #28784
    e948:	cmp	w0, w1
    e94c:	b.gt	ebd8 <_Z19decl_assembler_nameP9tree_node@plt+0x7e78>
    e950:	mov	w1, #0x6e78                	// #28280
    e954:	cmp	w0, w1
    e958:	b.eq	eadc <_Z19decl_assembler_nameP9tree_node@plt+0x7d7c>  // b.none
    e95c:	mov	w1, #0x6e78                	// #28280
    e960:	cmp	w0, w1
    e964:	b.gt	ebd8 <_Z19decl_assembler_nameP9tree_node@plt+0x7e78>
    e968:	mov	w1, #0x6e74                	// #28276
    e96c:	cmp	w0, w1
    e970:	b.eq	ea80 <_Z19decl_assembler_nameP9tree_node@plt+0x7d20>  // b.none
    e974:	mov	w1, #0x6e74                	// #28276
    e978:	cmp	w0, w1
    e97c:	b.gt	ebd8 <_Z19decl_assembler_nameP9tree_node@plt+0x7e78>
    e980:	mov	w1, #0x6e67                	// #28263
    e984:	cmp	w0, w1
    e988:	b.eq	ea50 <_Z19decl_assembler_nameP9tree_node@plt+0x7cf0>  // b.none
    e98c:	mov	w1, #0x6e67                	// #28263
    e990:	cmp	w0, w1
    e994:	b.gt	ebd8 <_Z19decl_assembler_nameP9tree_node@plt+0x7e78>
    e998:	mov	w1, #0x6d6d                	// #28013
    e99c:	cmp	w0, w1
    e9a0:	b.eq	eab4 <_Z19decl_assembler_nameP9tree_node@plt+0x7d54>  // b.none
    e9a4:	mov	w1, #0x6d6d                	// #28013
    e9a8:	cmp	w0, w1
    e9ac:	b.gt	ebd8 <_Z19decl_assembler_nameP9tree_node@plt+0x7e78>
    e9b0:	mov	w1, #0x6773                	// #26483
    e9b4:	cmp	w0, w1
    e9b8:	b.eq	eb6c <_Z19decl_assembler_nameP9tree_node@plt+0x7e0c>  // b.none
    e9bc:	mov	w1, #0x6773                	// #26483
    e9c0:	cmp	w0, w1
    e9c4:	b.gt	ebd8 <_Z19decl_assembler_nameP9tree_node@plt+0x7e78>
    e9c8:	mov	w1, #0x646c                	// #25708
    e9cc:	cmp	w0, w1
    e9d0:	b.eq	eba8 <_Z19decl_assembler_nameP9tree_node@plt+0x7e48>  // b.none
    e9d4:	mov	w1, #0x646c                	// #25708
    e9d8:	cmp	w0, w1
    e9dc:	b.gt	ebd8 <_Z19decl_assembler_nameP9tree_node@plt+0x7e78>
    e9e0:	mov	w1, #0x6465                	// #25701
    e9e4:	cmp	w0, w1
    e9e8:	b.eq	ea68 <_Z19decl_assembler_nameP9tree_node@plt+0x7d08>  // b.none
    e9ec:	mov	w1, #0x6465                	// #25701
    e9f0:	cmp	w0, w1
    e9f4:	b.gt	ebd8 <_Z19decl_assembler_nameP9tree_node@plt+0x7e78>
    e9f8:	mov	w1, #0x6461                	// #25697
    e9fc:	cmp	w0, w1
    ea00:	b.eq	ebb4 <_Z19decl_assembler_nameP9tree_node@plt+0x7e54>  // b.none
    ea04:	mov	w1, #0x6461                	// #25697
    ea08:	cmp	w0, w1
    ea0c:	b.gt	ebd8 <_Z19decl_assembler_nameP9tree_node@plt+0x7e78>
    ea10:	mov	w1, #0x636f                	// #25455
    ea14:	cmp	w0, w1
    ea18:	b.eq	ea74 <_Z19decl_assembler_nameP9tree_node@plt+0x7d14>  // b.none
    ea1c:	mov	w1, #0x636f                	// #25455
    ea20:	cmp	w0, w1
    ea24:	b.gt	ebd8 <_Z19decl_assembler_nameP9tree_node@plt+0x7e78>
    ea28:	mov	w1, #0x6164                	// #24932
    ea2c:	cmp	w0, w1
    ea30:	b.eq	ea5c <_Z19decl_assembler_nameP9tree_node@plt+0x7cfc>  // b.none
    ea34:	mov	w1, #0x617a                	// #24954
    ea38:	cmp	w0, w1
    ea3c:	b.eq	eb60 <_Z19decl_assembler_nameP9tree_node@plt+0x7e00>  // b.none
    ea40:	b	ebd8 <_Z19decl_assembler_nameP9tree_node@plt+0x7e78>
    ea44:	mov	w0, #0x12f                 	// #303
    ea48:	str	w0, [sp, #108]
    ea4c:	b	ebf0 <_Z19decl_assembler_nameP9tree_node@plt+0x7e90>
    ea50:	mov	w0, #0x58                  	// #88
    ea54:	str	w0, [sp, #108]
    ea58:	b	ebf0 <_Z19decl_assembler_nameP9tree_node@plt+0x7e90>
    ea5c:	mov	w0, #0x82                  	// #130
    ea60:	str	w0, [sp, #108]
    ea64:	b	ebf0 <_Z19decl_assembler_nameP9tree_node@plt+0x7e90>
    ea68:	mov	w0, #0x35                  	// #53
    ea6c:	str	w0, [sp, #108]
    ea70:	b	ebf0 <_Z19decl_assembler_nameP9tree_node@plt+0x7e90>
    ea74:	mov	w0, #0x64                  	// #100
    ea78:	str	w0, [sp, #108]
    ea7c:	b	ebf0 <_Z19decl_assembler_nameP9tree_node@plt+0x7e90>
    ea80:	mov	w0, #0x6a                  	// #106
    ea84:	str	w0, [sp, #108]
    ea88:	b	ebf0 <_Z19decl_assembler_nameP9tree_node@plt+0x7e90>
    ea8c:	ldr	x0, [sp, #32]
    ea90:	add	x0, x0, #0x2
    ea94:	ldrb	w0, [x0]
    ea98:	cmp	w0, #0x5f
    ea9c:	b.ne	eaa8 <_Z19decl_assembler_nameP9tree_node@plt+0x7d48>  // b.any
    eaa0:	mov	w0, #0x88                  	// #136
    eaa4:	b	eaac <_Z19decl_assembler_nameP9tree_node@plt+0x7d4c>
    eaa8:	mov	w0, #0x8a                  	// #138
    eaac:	str	w0, [sp, #108]
    eab0:	b	ebf0 <_Z19decl_assembler_nameP9tree_node@plt+0x7e90>
    eab4:	ldr	x0, [sp, #32]
    eab8:	add	x0, x0, #0x2
    eabc:	ldrb	w0, [x0]
    eac0:	cmp	w0, #0x5f
    eac4:	b.ne	ead0 <_Z19decl_assembler_nameP9tree_node@plt+0x7d70>  // b.any
    eac8:	mov	w0, #0x87                  	// #135
    eacc:	b	ead4 <_Z19decl_assembler_nameP9tree_node@plt+0x7d74>
    ead0:	mov	w0, #0x89                  	// #137
    ead4:	str	w0, [sp, #108]
    ead8:	b	ebf0 <_Z19decl_assembler_nameP9tree_node@plt+0x7e90>
    eadc:	mov	w0, #0x117                 	// #279
    eae0:	str	w0, [sp, #108]
    eae4:	b	ebf0 <_Z19decl_assembler_nameP9tree_node@plt+0x7e90>
    eae8:	ldr	x0, [sp, #80]
    eaec:	cmp	x0, #0x0
    eaf0:	b.ne	eb0c <_Z19decl_assembler_nameP9tree_node@plt+0x7dac>  // b.any
    eaf4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    eaf8:	add	x2, x0, #0x968
    eafc:	mov	w1, #0xab2                 	// #2738
    eb00:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    eb04:	add	x0, x0, #0x4a8
    eb08:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    eb0c:	mov	w0, #0xfc                  	// #252
    eb10:	str	w0, [sp, #108]
    eb14:	b	ebf0 <_Z19decl_assembler_nameP9tree_node@plt+0x7e90>
    eb18:	ldr	x0, [sp, #80]
    eb1c:	cmp	x0, #0x0
    eb20:	b.eq	eb3c <_Z19decl_assembler_nameP9tree_node@plt+0x7ddc>  // b.none
    eb24:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    eb28:	add	x2, x0, #0x968
    eb2c:	mov	w1, #0xab6                 	// #2742
    eb30:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    eb34:	add	x0, x0, #0x4a8
    eb38:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    eb3c:	mov	w0, #0xfc                  	// #252
    eb40:	str	w0, [sp, #108]
    eb44:	b	ebf0 <_Z19decl_assembler_nameP9tree_node@plt+0x7e90>
    eb48:	mov	w0, #0x116                 	// #278
    eb4c:	str	w0, [sp, #108]
    eb50:	b	ebf0 <_Z19decl_assembler_nameP9tree_node@plt+0x7e90>
    eb54:	mov	w0, #0xe6                  	// #230
    eb58:	str	w0, [sp, #108]
    eb5c:	b	ebf0 <_Z19decl_assembler_nameP9tree_node@plt+0x7e90>
    eb60:	mov	w0, #0x12c                 	// #300
    eb64:	str	w0, [sp, #108]
    eb68:	b	ebf0 <_Z19decl_assembler_nameP9tree_node@plt+0x7e90>
    eb6c:	ldrb	w0, [sp, #107]
    eb70:	cmp	w0, #0x0
    eb74:	b.eq	eb90 <_Z19decl_assembler_nameP9tree_node@plt+0x7e30>  // b.none
    eb78:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    eb7c:	add	x2, x0, #0x968
    eb80:	mov	w1, #0xac3                 	// #2755
    eb84:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    eb88:	add	x0, x0, #0x4a8
    eb8c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    eb90:	mov	w0, #0x1                   	// #1
    eb94:	strb	w0, [sp, #107]
    eb98:	ldr	x0, [sp, #32]
    eb9c:	add	x0, x0, #0x2
    eba0:	str	x0, [sp, #32]
    eba4:	b	e874 <_Z19decl_assembler_nameP9tree_node@plt+0x7b14>
    eba8:	mov	w0, #0xf5                  	// #245
    ebac:	str	w0, [sp, #108]
    ebb0:	b	ebf0 <_Z19decl_assembler_nameP9tree_node@plt+0x7e90>
    ebb4:	mov	w0, #0xf6                  	// #246
    ebb8:	str	w0, [sp, #108]
    ebbc:	b	ebf0 <_Z19decl_assembler_nameP9tree_node@plt+0x7e90>
    ebc0:	mov	w0, #0x134                 	// #308
    ebc4:	str	w0, [sp, #108]
    ebc8:	b	ebf0 <_Z19decl_assembler_nameP9tree_node@plt+0x7e90>
    ebcc:	mov	w0, #0x133                 	// #307
    ebd0:	str	w0, [sp, #108]
    ebd4:	b	ebf0 <_Z19decl_assembler_nameP9tree_node@plt+0x7e90>
    ebd8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    ebdc:	add	x2, x0, #0x968
    ebe0:	mov	w1, #0xad7                 	// #2775
    ebe4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    ebe8:	add	x0, x0, #0x4a8
    ebec:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    ebf0:	ldrb	w0, [sp, #107]
    ebf4:	cmp	w0, #0x0
    ebf8:	b.eq	ec2c <_Z19decl_assembler_nameP9tree_node@plt+0x7ecc>  // b.none
    ebfc:	ldr	w0, [sp, #108]
    ec00:	cmp	w0, #0xf5
    ec04:	b.eq	ec2c <_Z19decl_assembler_nameP9tree_node@plt+0x7ecc>  // b.none
    ec08:	ldr	w0, [sp, #108]
    ec0c:	cmp	w0, #0xf6
    ec10:	b.eq	ec2c <_Z19decl_assembler_nameP9tree_node@plt+0x7ecc>  // b.none
    ec14:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    ec18:	add	x2, x0, #0x968
    ec1c:	mov	w1, #0xada                 	// #2778
    ec20:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    ec24:	add	x0, x0, #0x4a8
    ec28:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    ec2c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    ec30:	ldr	x0, [x0, #3888]
    ec34:	ldr	x0, [x0]
    ec38:	ldr	w1, [x0, #112]
    ec3c:	add	w1, w1, #0x1
    ec40:	str	w1, [x0, #112]
    ec44:	ldr	x0, [sp, #80]
    ec48:	cmp	x0, #0x0
    ec4c:	b.eq	ec80 <_Z19decl_assembler_nameP9tree_node@plt+0x7f20>  // b.none
    ec50:	ldr	x0, [sp, #80]
    ec54:	bl	6d30 <_Z27type_dependent_expression_pP9tree_node@plt>
    ec58:	and	w0, w0, #0xff
    ec5c:	cmp	w0, #0x0
    ec60:	b.ne	ec78 <_Z19decl_assembler_nameP9tree_node@plt+0x7f18>  // b.any
    ec64:	ldr	x0, [sp, #80]
    ec68:	bl	6ac0 <_Z28value_dependent_expression_pP9tree_node@plt>
    ec6c:	and	w0, w0, #0xff
    ec70:	cmp	w0, #0x0
    ec74:	b.eq	ec80 <_Z19decl_assembler_nameP9tree_node@plt+0x7f20>  // b.none
    ec78:	mov	w0, #0x1                   	// #1
    ec7c:	b	ec84 <_Z19decl_assembler_nameP9tree_node@plt+0x7f24>
    ec80:	mov	w0, #0x0                   	// #0
    ec84:	strb	w0, [sp, #79]
    ec88:	ldrb	w0, [sp, #79]
    ec8c:	eor	w0, w0, #0x1
    ec90:	and	w0, w0, #0xff
    ec94:	cmp	w0, #0x0
    ec98:	b.eq	ecb4 <_Z19decl_assembler_nameP9tree_node@plt+0x7f54>  // b.none
    ec9c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    eca0:	ldr	x0, [x0, #3888]
    eca4:	ldr	x0, [x0]
    eca8:	ldr	w1, [x0, #112]
    ecac:	sub	w1, w1, #0x1
    ecb0:	str	w1, [x0, #112]
    ecb4:	ldr	x0, [sp, #80]
    ecb8:	cmp	x0, #0x0
    ecbc:	b.ne	ece4 <_Z19decl_assembler_nameP9tree_node@plt+0x7f84>  // b.any
    ecc0:	ldr	w0, [sp, #108]
    ecc4:	cmp	w0, #0xfc
    ecc8:	b.eq	ece4 <_Z19decl_assembler_nameP9tree_node@plt+0x7f84>  // b.none
    eccc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    ecd0:	add	x2, x0, #0x968
    ecd4:	mov	w1, #0xae6                 	// #2790
    ecd8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    ecdc:	add	x0, x0, #0x4a8
    ece0:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    ece4:	ldr	w0, [sp, #108]
    ece8:	cmp	w0, #0x134
    ecec:	b.eq	edec <_Z19decl_assembler_nameP9tree_node@plt+0x808c>  // b.none
    ecf0:	cmp	w0, #0x134
    ecf4:	b.gt	ee24 <_Z19decl_assembler_nameP9tree_node@plt+0x80c4>
    ecf8:	cmp	w0, #0x133
    ecfc:	b.eq	ee00 <_Z19decl_assembler_nameP9tree_node@plt+0x80a0>  // b.none
    ed00:	cmp	w0, #0x133
    ed04:	b.gt	ee24 <_Z19decl_assembler_nameP9tree_node@plt+0x80c4>
    ed08:	cmp	w0, #0x12c
    ed0c:	b.eq	eda0 <_Z19decl_assembler_nameP9tree_node@plt+0x8040>  // b.none
    ed10:	cmp	w0, #0x12c
    ed14:	b.gt	ee24 <_Z19decl_assembler_nameP9tree_node@plt+0x80c4>
    ed18:	cmp	w0, #0x117
    ed1c:	b.eq	ed68 <_Z19decl_assembler_nameP9tree_node@plt+0x8008>  // b.none
    ed20:	cmp	w0, #0x117
    ed24:	b.gt	ee24 <_Z19decl_assembler_nameP9tree_node@plt+0x80c4>
    ed28:	cmp	w0, #0x116
    ed2c:	b.eq	ed8c <_Z19decl_assembler_nameP9tree_node@plt+0x802c>  // b.none
    ed30:	cmp	w0, #0x116
    ed34:	b.gt	ee24 <_Z19decl_assembler_nameP9tree_node@plt+0x80c4>
    ed38:	cmp	w0, #0xfc
    ed3c:	b.eq	ed7c <_Z19decl_assembler_nameP9tree_node@plt+0x801c>  // b.none
    ed40:	cmp	w0, #0xfc
    ed44:	b.gt	ee24 <_Z19decl_assembler_nameP9tree_node@plt+0x80c4>
    ed48:	cmp	w0, #0xe6
    ed4c:	b.eq	eda0 <_Z19decl_assembler_nameP9tree_node@plt+0x8040>  // b.none
    ed50:	cmp	w0, #0xe6
    ed54:	b.lt	ee24 <_Z19decl_assembler_nameP9tree_node@plt+0x80c4>  // b.tstop
    ed58:	sub	w0, w0, #0xf5
    ed5c:	cmp	w0, #0x1
    ed60:	b.hi	ee24 <_Z19decl_assembler_nameP9tree_node@plt+0x80c4>  // b.pmore
    ed64:	b	edb8 <_Z19decl_assembler_nameP9tree_node@plt+0x8058>
    ed68:	mov	w1, #0x1                   	// #1
    ed6c:	ldr	x0, [sp, #80]
    ed70:	bl	6a40 <_Z20finish_noexcept_exprP9tree_nodei@plt>
    ed74:	str	x0, [sp, #96]
    ed78:	b	ee4c <_Z19decl_assembler_nameP9tree_node@plt+0x80ec>
    ed7c:	ldr	x0, [sp, #80]
    ed80:	bl	69d0 <_Z11build_throwP9tree_node@plt>
    ed84:	str	x0, [sp, #96]
    ed88:	b	ee4c <_Z19decl_assembler_nameP9tree_node@plt+0x80ec>
    ed8c:	mov	w1, #0x1                   	// #1
    ed90:	ldr	x0, [sp, #80]
    ed94:	bl	67a0 <_Z12build_typeidP9tree_nodei@plt>
    ed98:	str	x0, [sp, #96]
    ed9c:	b	ee4c <_Z19decl_assembler_nameP9tree_node@plt+0x80ec>
    eda0:	mov	w2, #0x1                   	// #1
    eda4:	ldr	w1, [sp, #108]
    eda8:	ldr	x0, [sp, #80]
    edac:	bl	67e0 <_Z26cxx_sizeof_or_alignof_exprP9tree_node9tree_codeb@plt>
    edb0:	str	x0, [sp, #96]
    edb4:	b	ee4c <_Z19decl_assembler_nameP9tree_node@plt+0x80ec>
    edb8:	ldr	w0, [sp, #108]
    edbc:	cmp	w0, #0xf6
    edc0:	cset	w0, eq  // eq = none
    edc4:	and	w1, w0, #0xff
    edc8:	ldrb	w0, [sp, #107]
    edcc:	mov	w4, #0x1                   	// #1
    edd0:	mov	w3, w0
    edd4:	mov	w2, w1
    edd8:	mov	x1, #0x0                   	// #0
    eddc:	ldr	x0, [sp, #80]
    ede0:	bl	6780 <_Z13delete_sanityP9tree_nodeS0_bii@plt>
    ede4:	str	x0, [sp, #96]
    ede8:	b	ee4c <_Z19decl_assembler_nameP9tree_node@plt+0x80ec>
    edec:	mov	w1, #0x3                   	// #3
    edf0:	ldr	x0, [sp, #80]
    edf4:	bl	6c10 <_Z19make_pack_expansionP9tree_nodei@plt>
    edf8:	str	x0, [sp, #96]
    edfc:	b	ee4c <_Z19decl_assembler_nameP9tree_node@plt+0x80ec>
    ee00:	mov	w1, #0x3                   	// #3
    ee04:	ldr	x0, [sp, #80]
    ee08:	bl	6c10 <_Z19make_pack_expansionP9tree_nodei@plt>
    ee0c:	str	x0, [sp, #96]
    ee10:	ldr	x0, [sp, #96]
    ee14:	ldrb	w1, [x0, #4]
    ee18:	orr	w1, w1, #0x2
    ee1c:	strb	w1, [x0, #4]
    ee20:	b	ee4c <_Z19decl_assembler_nameP9tree_node@plt+0x80ec>
    ee24:	add	x0, sp, #0x38
    ee28:	ldr	x1, [sp, #80]
    ee2c:	bl	12174 <plugin_init@@Base+0x1134>
    ee30:	mov	w4, #0x1                   	// #1
    ee34:	ldp	x2, x3, [sp, #56]
    ee38:	ldr	w1, [sp, #108]
    ee3c:	mov	w0, #0x0                   	// #0
    ee40:	bl	64b0 <_Z16build_x_unary_opj9tree_code7cp_expri@plt>
    ee44:	str	x0, [sp, #96]
    ee48:	nop
    ee4c:	ldrb	w0, [sp, #79]
    ee50:	cmp	w0, #0x0
    ee54:	b.eq	ee70 <_Z19decl_assembler_nameP9tree_node@plt+0x8110>  // b.none
    ee58:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    ee5c:	ldr	x0, [x0, #3888]
    ee60:	ldr	x0, [x0]
    ee64:	ldr	w1, [x0, #112]
    ee68:	sub	w1, w1, #0x1
    ee6c:	str	w1, [x0, #112]
    ee70:	ldr	x1, [sp, #96]
    ee74:	ldr	x0, [sp, #88]
    ee78:	bl	12710 <plugin_init@@Base+0x16d0>
    ee7c:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    ee80:	ldp	x29, x30, [sp], #112
    ee84:	ret
    ee88:	stp	x29, x30, [sp, #-128]!
    ee8c:	mov	x29, sp
    ee90:	str	x0, [sp, #40]
    ee94:	str	x1, [sp, #32]
    ee98:	str	x2, [sp, #24]
    ee9c:	str	x3, [sp, #16]
    eea0:	ldr	x0, [sp, #40]
    eea4:	str	x0, [sp, #96]
    eea8:	ldr	x0, [sp, #24]
    eeac:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    eeb0:	str	x0, [sp, #120]
    eeb4:	ldr	x0, [sp, #16]
    eeb8:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    eebc:	str	x0, [sp, #88]
    eec0:	str	wzr, [sp, #116]
    eec4:	ldr	x0, [sp, #32]
    eec8:	ldrb	w0, [x0]
    eecc:	lsl	w0, w0, #8
    eed0:	ldr	x1, [sp, #32]
    eed4:	add	x1, x1, #0x1
    eed8:	ldrb	w1, [x1]
    eedc:	orr	w0, w0, w1
    eee0:	mov	w1, #0x7273                	// #29299
    eee4:	cmp	w0, w1
    eee8:	b.eq	f178 <_Z19decl_assembler_nameP9tree_node@plt+0x8418>  // b.none
    eeec:	mov	w1, #0x7273                	// #29299
    eef0:	cmp	w0, w1
    eef4:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    eef8:	mov	w1, #0x726d                	// #29293
    eefc:	cmp	w0, w1
    ef00:	b.eq	f13c <_Z19decl_assembler_nameP9tree_node@plt+0x83dc>  // b.none
    ef04:	mov	w1, #0x726d                	// #29293
    ef08:	cmp	w0, w1
    ef0c:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    ef10:	mov	w1, #0x7074                	// #28788
    ef14:	cmp	w0, w1
    ef18:	b.eq	f1fc <_Z19decl_assembler_nameP9tree_node@plt+0x849c>  // b.none
    ef1c:	mov	w1, #0x7074                	// #28788
    ef20:	cmp	w0, w1
    ef24:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    ef28:	mov	w1, #0x706d                	// #28781
    ef2c:	cmp	w0, w1
    ef30:	b.eq	f1f0 <_Z19decl_assembler_nameP9tree_node@plt+0x8490>  // b.none
    ef34:	mov	w1, #0x706d                	// #28781
    ef38:	cmp	w0, w1
    ef3c:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    ef40:	mov	w1, #0x706c                	// #28780
    ef44:	cmp	w0, w1
    ef48:	b.eq	f10c <_Z19decl_assembler_nameP9tree_node@plt+0x83ac>  // b.none
    ef4c:	mov	w1, #0x706c                	// #28780
    ef50:	cmp	w0, w1
    ef54:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    ef58:	mov	w1, #0x6f72                	// #28530
    ef5c:	cmp	w0, w1
    ef60:	b.eq	f154 <_Z19decl_assembler_nameP9tree_node@plt+0x83f4>  // b.none
    ef64:	mov	w1, #0x6f72                	// #28530
    ef68:	cmp	w0, w1
    ef6c:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    ef70:	mov	w1, #0x6f6f                	// #28527
    ef74:	cmp	w0, w1
    ef78:	b.eq	f1d8 <_Z19decl_assembler_nameP9tree_node@plt+0x8478>  // b.none
    ef7c:	mov	w1, #0x6f6f                	// #28527
    ef80:	cmp	w0, w1
    ef84:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    ef88:	mov	w1, #0x6e65                	// #28261
    ef8c:	cmp	w0, w1
    ef90:	b.eq	f190 <_Z19decl_assembler_nameP9tree_node@plt+0x8430>  // b.none
    ef94:	mov	w1, #0x6e65                	// #28261
    ef98:	cmp	w0, w1
    ef9c:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    efa0:	mov	w1, #0x6d6c                	// #28012
    efa4:	cmp	w0, w1
    efa8:	b.eq	f124 <_Z19decl_assembler_nameP9tree_node@plt+0x83c4>  // b.none
    efac:	mov	w1, #0x6d6c                	// #28012
    efb0:	cmp	w0, w1
    efb4:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    efb8:	mov	w1, #0x6d69                	// #28009
    efbc:	cmp	w0, w1
    efc0:	b.eq	f118 <_Z19decl_assembler_nameP9tree_node@plt+0x83b8>  // b.none
    efc4:	mov	w1, #0x6d69                	// #28009
    efc8:	cmp	w0, w1
    efcc:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    efd0:	mov	w1, #0x6c74                	// #27764
    efd4:	cmp	w0, w1
    efd8:	b.eq	f19c <_Z19decl_assembler_nameP9tree_node@plt+0x843c>  // b.none
    efdc:	mov	w1, #0x6c74                	// #27764
    efe0:	cmp	w0, w1
    efe4:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    efe8:	mov	w1, #0x6c73                	// #27763
    efec:	cmp	w0, w1
    eff0:	b.eq	f16c <_Z19decl_assembler_nameP9tree_node@plt+0x840c>  // b.none
    eff4:	mov	w1, #0x6c73                	// #27763
    eff8:	cmp	w0, w1
    effc:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    f000:	mov	w1, #0x6c65                	// #27749
    f004:	cmp	w0, w1
    f008:	b.eq	f1b4 <_Z19decl_assembler_nameP9tree_node@plt+0x8454>  // b.none
    f00c:	mov	w1, #0x6c65                	// #27749
    f010:	cmp	w0, w1
    f014:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    f018:	mov	w1, #0x6978                	// #27000
    f01c:	cmp	w0, w1
    f020:	b.eq	f208 <_Z19decl_assembler_nameP9tree_node@plt+0x84a8>  // b.none
    f024:	mov	w1, #0x6978                	// #27000
    f028:	cmp	w0, w1
    f02c:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    f030:	mov	w1, #0x6774                	// #26484
    f034:	cmp	w0, w1
    f038:	b.eq	f1a8 <_Z19decl_assembler_nameP9tree_node@plt+0x8448>  // b.none
    f03c:	mov	w1, #0x6774                	// #26484
    f040:	cmp	w0, w1
    f044:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    f048:	mov	w1, #0x6765                	// #26469
    f04c:	cmp	w0, w1
    f050:	b.eq	f1c0 <_Z19decl_assembler_nameP9tree_node@plt+0x8460>  // b.none
    f054:	mov	w1, #0x6765                	// #26469
    f058:	cmp	w0, w1
    f05c:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    f060:	mov	w1, #0x6571                	// #25969
    f064:	cmp	w0, w1
    f068:	b.eq	f184 <_Z19decl_assembler_nameP9tree_node@plt+0x8424>  // b.none
    f06c:	mov	w1, #0x6571                	// #25969
    f070:	cmp	w0, w1
    f074:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    f078:	mov	w1, #0x656f                	// #25967
    f07c:	cmp	w0, w1
    f080:	b.eq	f160 <_Z19decl_assembler_nameP9tree_node@plt+0x8400>  // b.none
    f084:	mov	w1, #0x656f                	// #25967
    f088:	cmp	w0, w1
    f08c:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    f090:	mov	w1, #0x6476                	// #25718
    f094:	cmp	w0, w1
    f098:	b.eq	f130 <_Z19decl_assembler_nameP9tree_node@plt+0x83d0>  // b.none
    f09c:	mov	w1, #0x6476                	// #25718
    f0a0:	cmp	w0, w1
    f0a4:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    f0a8:	mov	w1, #0x6474                	// #25716
    f0ac:	cmp	w0, w1
    f0b0:	b.eq	f220 <_Z19decl_assembler_nameP9tree_node@plt+0x84c0>  // b.none
    f0b4:	mov	w1, #0x6474                	// #25716
    f0b8:	cmp	w0, w1
    f0bc:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    f0c0:	mov	w1, #0x6473                	// #25715
    f0c4:	cmp	w0, w1
    f0c8:	b.eq	f214 <_Z19decl_assembler_nameP9tree_node@plt+0x84b4>  // b.none
    f0cc:	mov	w1, #0x6473                	// #25715
    f0d0:	cmp	w0, w1
    f0d4:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    f0d8:	mov	w1, #0x636d                	// #25453
    f0dc:	cmp	w0, w1
    f0e0:	b.eq	f1e4 <_Z19decl_assembler_nameP9tree_node@plt+0x8484>  // b.none
    f0e4:	mov	w1, #0x636d                	// #25453
    f0e8:	cmp	w0, w1
    f0ec:	b.gt	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    f0f0:	mov	w1, #0x6161                	// #24929
    f0f4:	cmp	w0, w1
    f0f8:	b.eq	f1cc <_Z19decl_assembler_nameP9tree_node@plt+0x846c>  // b.none
    f0fc:	mov	w1, #0x616e                	// #24942
    f100:	cmp	w0, w1
    f104:	b.eq	f148 <_Z19decl_assembler_nameP9tree_node@plt+0x83e8>  // b.none
    f108:	b	f22c <_Z19decl_assembler_nameP9tree_node@plt+0x84cc>
    f10c:	mov	w0, #0x46                  	// #70
    f110:	str	w0, [sp, #116]
    f114:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f118:	mov	w0, #0x47                  	// #71
    f11c:	str	w0, [sp, #116]
    f120:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f124:	mov	w0, #0x48                  	// #72
    f128:	str	w0, [sp, #116]
    f12c:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f130:	mov	w0, #0x4c                  	// #76
    f134:	str	w0, [sp, #116]
    f138:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f13c:	mov	w0, #0x50                  	// #80
    f140:	str	w0, [sp, #116]
    f144:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f148:	mov	w0, #0x63                  	// #99
    f14c:	str	w0, [sp, #116]
    f150:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f154:	mov	w0, #0x61                  	// #97
    f158:	str	w0, [sp, #116]
    f15c:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f160:	mov	w0, #0x62                  	// #98
    f164:	str	w0, [sp, #116]
    f168:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f16c:	mov	w0, #0x5d                  	// #93
    f170:	str	w0, [sp, #116]
    f174:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f178:	mov	w0, #0x5e                  	// #94
    f17c:	str	w0, [sp, #116]
    f180:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f184:	mov	w0, #0x6f                  	// #111
    f188:	str	w0, [sp, #116]
    f18c:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f190:	mov	w0, #0x70                  	// #112
    f194:	str	w0, [sp, #116]
    f198:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f19c:	mov	w0, #0x6b                  	// #107
    f1a0:	str	w0, [sp, #116]
    f1a4:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f1a8:	mov	w0, #0x6d                  	// #109
    f1ac:	str	w0, [sp, #116]
    f1b0:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f1b4:	mov	w0, #0x6c                  	// #108
    f1b8:	str	w0, [sp, #116]
    f1bc:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f1c0:	mov	w0, #0x6e                  	// #110
    f1c4:	str	w0, [sp, #116]
    f1c8:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f1cc:	mov	w0, #0x65                  	// #101
    f1d0:	str	w0, [sp, #116]
    f1d4:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f1d8:	mov	w0, #0x66                  	// #102
    f1dc:	str	w0, [sp, #116]
    f1e0:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f1e4:	mov	w0, #0x38                  	// #56
    f1e8:	str	w0, [sp, #116]
    f1ec:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f1f0:	mov	w0, #0xf8                  	// #248
    f1f4:	str	w0, [sp, #116]
    f1f8:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f1fc:	mov	w0, #0x35                  	// #53
    f200:	str	w0, [sp, #116]
    f204:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f208:	mov	w0, #0x30                  	// #48
    f20c:	str	w0, [sp, #116]
    f210:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f214:	mov	w0, #0x115                 	// #277
    f218:	str	w0, [sp, #116]
    f21c:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f220:	mov	w0, #0x2e                  	// #46
    f224:	str	w0, [sp, #116]
    f228:	b	f244 <_Z19decl_assembler_nameP9tree_node@plt+0x84e4>
    f22c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    f230:	add	x2, x0, #0x980
    f234:	mov	w1, #0xb6f                 	// #2927
    f238:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    f23c:	add	x0, x0, #0x4a8
    f240:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    f244:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    f248:	ldr	x0, [x0, #3888]
    f24c:	ldr	x0, [x0]
    f250:	ldr	w1, [x0, #112]
    f254:	add	w1, w1, #0x1
    f258:	str	w1, [x0, #112]
    f25c:	ldr	x0, [sp, #120]
    f260:	bl	6d30 <_Z27type_dependent_expression_pP9tree_node@plt>
    f264:	and	w0, w0, #0xff
    f268:	cmp	w0, #0x0
    f26c:	b.ne	f2ac <_Z19decl_assembler_nameP9tree_node@plt+0x854c>  // b.any
    f270:	ldr	x0, [sp, #120]
    f274:	bl	6ac0 <_Z28value_dependent_expression_pP9tree_node@plt>
    f278:	and	w0, w0, #0xff
    f27c:	cmp	w0, #0x0
    f280:	b.ne	f2ac <_Z19decl_assembler_nameP9tree_node@plt+0x854c>  // b.any
    f284:	ldr	x0, [sp, #88]
    f288:	bl	6d30 <_Z27type_dependent_expression_pP9tree_node@plt>
    f28c:	and	w0, w0, #0xff
    f290:	cmp	w0, #0x0
    f294:	b.ne	f2ac <_Z19decl_assembler_nameP9tree_node@plt+0x854c>  // b.any
    f298:	ldr	x0, [sp, #88]
    f29c:	bl	6ac0 <_Z28value_dependent_expression_pP9tree_node@plt>
    f2a0:	and	w0, w0, #0xff
    f2a4:	cmp	w0, #0x0
    f2a8:	b.eq	f2b4 <_Z19decl_assembler_nameP9tree_node@plt+0x8554>  // b.none
    f2ac:	mov	w0, #0x1                   	// #1
    f2b0:	b	f2b8 <_Z19decl_assembler_nameP9tree_node@plt+0x8558>
    f2b4:	mov	w0, #0x0                   	// #0
    f2b8:	strb	w0, [sp, #87]
    f2bc:	ldrb	w0, [sp, #87]
    f2c0:	eor	w0, w0, #0x1
    f2c4:	and	w0, w0, #0xff
    f2c8:	cmp	w0, #0x0
    f2cc:	b.eq	f2e8 <_Z19decl_assembler_nameP9tree_node@plt+0x8588>  // b.none
    f2d0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    f2d4:	ldr	x0, [x0, #3888]
    f2d8:	ldr	x0, [x0]
    f2dc:	ldr	w1, [x0, #112]
    f2e0:	sub	w1, w1, #0x1
    f2e4:	str	w1, [x0, #112]
    f2e8:	ldr	w0, [sp, #116]
    f2ec:	cmp	w0, #0x2e
    f2f0:	b.eq	f310 <_Z19decl_assembler_nameP9tree_node@plt+0x85b0>  // b.none
    f2f4:	cmp	w0, #0x35
    f2f8:	b.ne	f338 <_Z19decl_assembler_nameP9tree_node@plt+0x85d8>  // b.any
    f2fc:	mov	w2, #0x1                   	// #1
    f300:	ldr	x1, [sp, #120]
    f304:	mov	w0, #0x0                   	// #0
    f308:	bl	6d50 <_Z13build_x_arrowjP9tree_nodei@plt>
    f30c:	str	x0, [sp, #120]
    f310:	add	x0, sp, #0x38
    f314:	ldr	x1, [sp, #120]
    f318:	bl	12174 <plugin_init@@Base+0x1134>
    f31c:	mov	w4, #0x1                   	// #1
    f320:	mov	w3, #0x0                   	// #0
    f324:	ldr	x2, [sp, #88]
    f328:	ldp	x0, x1, [sp, #56]
    f32c:	bl	6200 <_Z31finish_class_member_access_expr7cp_exprP9tree_nodebi@plt>
    f330:	str	x0, [sp, #104]
    f334:	b	f370 <_Z19decl_assembler_nameP9tree_node@plt+0x8610>
    f338:	add	x0, sp, #0x48
    f33c:	mov	w1, #0x0                   	// #0
    f340:	bl	12148 <plugin_init@@Base+0x1108>
    f344:	add	x0, sp, #0x48
    f348:	mov	w7, #0x1                   	// #1
    f34c:	mov	x6, #0x0                   	// #0
    f350:	mov	w5, #0x0                   	// #0
    f354:	ldr	x4, [sp, #88]
    f358:	mov	w3, #0x0                   	// #0
    f35c:	ldr	x2, [sp, #120]
    f360:	ldr	w1, [sp, #116]
    f364:	bl	60f0 <_Z17build_x_binary_opRK13op_location_t9tree_codeP9tree_nodeS2_S4_S2_PS4_i@plt>
    f368:	str	x0, [sp, #104]
    f36c:	nop
    f370:	ldrb	w0, [sp, #87]
    f374:	cmp	w0, #0x0
    f378:	b.eq	f394 <_Z19decl_assembler_nameP9tree_node@plt+0x8634>  // b.none
    f37c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    f380:	ldr	x0, [x0, #3888]
    f384:	ldr	x0, [x0]
    f388:	ldr	w1, [x0, #112]
    f38c:	sub	w1, w1, #0x1
    f390:	str	w1, [x0, #112]
    f394:	ldr	x1, [sp, #104]
    f398:	ldr	x0, [sp, #96]
    f39c:	bl	12710 <plugin_init@@Base+0x16d0>
    f3a0:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    f3a4:	ldp	x29, x30, [sp], #128
    f3a8:	ret
    f3ac:	stp	x29, x30, [sp, #-112]!
    f3b0:	mov	x29, sp
    f3b4:	str	x0, [sp, #56]
    f3b8:	str	x1, [sp, #48]
    f3bc:	str	x2, [sp, #40]
    f3c0:	str	x3, [sp, #32]
    f3c4:	str	x4, [sp, #24]
    f3c8:	ldr	x0, [sp, #56]
    f3cc:	str	x0, [sp, #104]
    f3d0:	ldr	x0, [sp, #40]
    f3d4:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    f3d8:	str	x0, [sp, #96]
    f3dc:	ldr	x0, [sp, #32]
    f3e0:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    f3e4:	str	x0, [sp, #88]
    f3e8:	ldr	x0, [sp, #24]
    f3ec:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    f3f0:	str	x0, [sp, #80]
    f3f4:	ldr	x0, [sp, #48]
    f3f8:	ldrb	w0, [x0]
    f3fc:	lsl	w0, w0, #8
    f400:	ldr	x1, [sp, #48]
    f404:	add	x1, x1, #0x1
    f408:	ldrb	w1, [x1]
    f40c:	orr	w1, w0, w1
    f410:	mov	w0, #0x7175                	// #29045
    f414:	cmp	w1, w0
    f418:	b.eq	f434 <_Z19decl_assembler_nameP9tree_node@plt+0x86d4>  // b.none
    f41c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    f420:	add	x2, x0, #0x9a0
    f424:	mov	w1, #0xb9e                 	// #2974
    f428:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    f42c:	add	x0, x0, #0x4a8
    f430:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    f434:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    f438:	ldr	x0, [x0, #3888]
    f43c:	ldr	x0, [x0]
    f440:	ldr	w1, [x0, #112]
    f444:	add	w1, w1, #0x1
    f448:	str	w1, [x0, #112]
    f44c:	ldr	x0, [sp, #96]
    f450:	bl	6d30 <_Z27type_dependent_expression_pP9tree_node@plt>
    f454:	and	w0, w0, #0xff
    f458:	cmp	w0, #0x0
    f45c:	b.ne	f4c4 <_Z19decl_assembler_nameP9tree_node@plt+0x8764>  // b.any
    f460:	ldr	x0, [sp, #96]
    f464:	bl	6ac0 <_Z28value_dependent_expression_pP9tree_node@plt>
    f468:	and	w0, w0, #0xff
    f46c:	cmp	w0, #0x0
    f470:	b.ne	f4c4 <_Z19decl_assembler_nameP9tree_node@plt+0x8764>  // b.any
    f474:	ldr	x0, [sp, #88]
    f478:	bl	6d30 <_Z27type_dependent_expression_pP9tree_node@plt>
    f47c:	and	w0, w0, #0xff
    f480:	cmp	w0, #0x0
    f484:	b.ne	f4c4 <_Z19decl_assembler_nameP9tree_node@plt+0x8764>  // b.any
    f488:	ldr	x0, [sp, #88]
    f48c:	bl	6ac0 <_Z28value_dependent_expression_pP9tree_node@plt>
    f490:	and	w0, w0, #0xff
    f494:	cmp	w0, #0x0
    f498:	b.ne	f4c4 <_Z19decl_assembler_nameP9tree_node@plt+0x8764>  // b.any
    f49c:	ldr	x0, [sp, #80]
    f4a0:	bl	6d30 <_Z27type_dependent_expression_pP9tree_node@plt>
    f4a4:	and	w0, w0, #0xff
    f4a8:	cmp	w0, #0x0
    f4ac:	b.ne	f4c4 <_Z19decl_assembler_nameP9tree_node@plt+0x8764>  // b.any
    f4b0:	ldr	x0, [sp, #80]
    f4b4:	bl	6ac0 <_Z28value_dependent_expression_pP9tree_node@plt>
    f4b8:	and	w0, w0, #0xff
    f4bc:	cmp	w0, #0x0
    f4c0:	b.eq	f4cc <_Z19decl_assembler_nameP9tree_node@plt+0x876c>  // b.none
    f4c4:	mov	w0, #0x1                   	// #1
    f4c8:	b	f4d0 <_Z19decl_assembler_nameP9tree_node@plt+0x8770>
    f4cc:	mov	w0, #0x0                   	// #0
    f4d0:	strb	w0, [sp, #79]
    f4d4:	ldrb	w0, [sp, #79]
    f4d8:	eor	w0, w0, #0x1
    f4dc:	and	w0, w0, #0xff
    f4e0:	cmp	w0, #0x0
    f4e4:	b.eq	f500 <_Z19decl_assembler_nameP9tree_node@plt+0x87a0>  // b.none
    f4e8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    f4ec:	ldr	x0, [x0, #3888]
    f4f0:	ldr	x0, [x0]
    f4f4:	ldr	w1, [x0, #112]
    f4f8:	sub	w1, w1, #0x1
    f4fc:	str	w1, [x0, #112]
    f500:	mov	w4, #0x1                   	// #1
    f504:	ldr	x3, [sp, #80]
    f508:	ldr	x2, [sp, #88]
    f50c:	ldr	x1, [sp, #96]
    f510:	mov	w0, #0x0                   	// #0
    f514:	bl	6820 <_Z24build_x_conditional_exprjP9tree_nodeS0_S0_i@plt>
    f518:	str	x0, [sp, #64]
    f51c:	ldrb	w0, [sp, #79]
    f520:	cmp	w0, #0x0
    f524:	b.eq	f540 <_Z19decl_assembler_nameP9tree_node@plt+0x87e0>  // b.none
    f528:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    f52c:	ldr	x0, [x0, #3888]
    f530:	ldr	x0, [x0]
    f534:	ldr	w1, [x0, #112]
    f538:	sub	w1, w1, #0x1
    f53c:	str	w1, [x0, #112]
    f540:	ldr	x1, [sp, #64]
    f544:	ldr	x0, [sp, #104]
    f548:	bl	12710 <plugin_init@@Base+0x16d0>
    f54c:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    f550:	ldp	x29, x30, [sp], #112
    f554:	ret
    f558:	stp	x29, x30, [sp, #-96]!
    f55c:	mov	x29, sp
    f560:	str	x0, [sp, #40]
    f564:	str	x1, [sp, #32]
    f568:	str	x2, [sp, #24]
    f56c:	ldr	x0, [sp, #40]
    f570:	str	x0, [sp, #72]
    f574:	ldr	x0, [sp, #24]
    f578:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    f57c:	str	x0, [sp, #64]
    f580:	str	wzr, [sp, #92]
    f584:	ldr	x0, [sp, #32]
    f588:	ldrb	w0, [x0]
    f58c:	lsl	w0, w0, #8
    f590:	ldr	x1, [sp, #32]
    f594:	add	x1, x1, #0x1
    f598:	ldrb	w1, [x1]
    f59c:	orr	w0, w0, w1
    f5a0:	mov	w1, #0x7469                	// #29801
    f5a4:	cmp	w0, w1
    f5a8:	b.eq	f5ec <_Z19decl_assembler_nameP9tree_node@plt+0x888c>  // b.none
    f5ac:	mov	w1, #0x7469                	// #29801
    f5b0:	cmp	w0, w1
    f5b4:	b.gt	f61c <_Z19decl_assembler_nameP9tree_node@plt+0x88bc>
    f5b8:	mov	w1, #0x7374                	// #29556
    f5bc:	cmp	w0, w1
    f5c0:	b.eq	f5f8 <_Z19decl_assembler_nameP9tree_node@plt+0x8898>  // b.none
    f5c4:	mov	w1, #0x7374                	// #29556
    f5c8:	cmp	w0, w1
    f5cc:	b.gt	f61c <_Z19decl_assembler_nameP9tree_node@plt+0x88bc>
    f5d0:	mov	w1, #0x6174                	// #24948
    f5d4:	cmp	w0, w1
    f5d8:	b.eq	f604 <_Z19decl_assembler_nameP9tree_node@plt+0x88a4>  // b.none
    f5dc:	mov	w1, #0x735a                	// #29530
    f5e0:	cmp	w0, w1
    f5e4:	b.eq	f610 <_Z19decl_assembler_nameP9tree_node@plt+0x88b0>  // b.none
    f5e8:	b	f61c <_Z19decl_assembler_nameP9tree_node@plt+0x88bc>
    f5ec:	mov	w0, #0x116                 	// #278
    f5f0:	str	w0, [sp, #92]
    f5f4:	b	f634 <_Z19decl_assembler_nameP9tree_node@plt+0x88d4>
    f5f8:	mov	w0, #0xe6                  	// #230
    f5fc:	str	w0, [sp, #92]
    f600:	b	f634 <_Z19decl_assembler_nameP9tree_node@plt+0x88d4>
    f604:	mov	w0, #0x12c                 	// #300
    f608:	str	w0, [sp, #92]
    f60c:	b	f634 <_Z19decl_assembler_nameP9tree_node@plt+0x88d4>
    f610:	mov	w0, #0x133                 	// #307
    f614:	str	w0, [sp, #92]
    f618:	b	f634 <_Z19decl_assembler_nameP9tree_node@plt+0x88d4>
    f61c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    f620:	add	x2, x0, #0x9c0
    f624:	mov	w1, #0xbd2                 	// #3026
    f628:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    f62c:	add	x0, x0, #0x4a8
    f630:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    f634:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    f638:	ldr	x0, [x0, #3888]
    f63c:	ldr	x0, [x0]
    f640:	ldr	w1, [x0, #112]
    f644:	add	w1, w1, #0x1
    f648:	str	w1, [x0, #112]
    f64c:	ldr	x0, [sp, #64]
    f650:	bl	6ae0 <_Z16dependent_type_pP9tree_node@plt>
    f654:	and	w0, w0, #0xff
    f658:	strb	w0, [sp, #63]
    f65c:	ldrb	w0, [sp, #63]
    f660:	eor	w0, w0, #0x1
    f664:	and	w0, w0, #0xff
    f668:	cmp	w0, #0x0
    f66c:	b.eq	f688 <_Z19decl_assembler_nameP9tree_node@plt+0x8928>  // b.none
    f670:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    f674:	ldr	x0, [x0, #3888]
    f678:	ldr	x0, [x0]
    f67c:	ldr	w1, [x0, #112]
    f680:	sub	w1, w1, #0x1
    f684:	str	w1, [x0, #112]
    f688:	ldr	w0, [sp, #92]
    f68c:	cmp	w0, #0x116
    f690:	b.eq	f6a0 <_Z19decl_assembler_nameP9tree_node@plt+0x8940>  // b.none
    f694:	cmp	w0, #0x133
    f698:	b.eq	f6b4 <_Z19decl_assembler_nameP9tree_node@plt+0x8954>  // b.none
    f69c:	b	f6d8 <_Z19decl_assembler_nameP9tree_node@plt+0x8978>
    f6a0:	mov	w1, #0x1                   	// #1
    f6a4:	ldr	x0, [sp, #64]
    f6a8:	bl	6640 <_Z10get_typeidP9tree_nodei@plt>
    f6ac:	str	x0, [sp, #80]
    f6b0:	b	f6f0 <_Z19decl_assembler_nameP9tree_node@plt+0x8990>
    f6b4:	mov	w1, #0x3                   	// #3
    f6b8:	ldr	x0, [sp, #64]
    f6bc:	bl	6c10 <_Z19make_pack_expansionP9tree_nodei@plt>
    f6c0:	str	x0, [sp, #80]
    f6c4:	ldr	x0, [sp, #80]
    f6c8:	ldrb	w1, [x0, #4]
    f6cc:	orr	w1, w1, #0x2
    f6d0:	strb	w1, [x0, #4]
    f6d4:	b	f6f0 <_Z19decl_assembler_nameP9tree_node@plt+0x8990>
    f6d8:	mov	w3, #0x1                   	// #1
    f6dc:	mov	w2, #0x1                   	// #1
    f6e0:	ldr	w1, [sp, #92]
    f6e4:	ldr	x0, [sp, #64]
    f6e8:	bl	69c0 <_Z26cxx_sizeof_or_alignof_typeP9tree_node9tree_codebb@plt>
    f6ec:	str	x0, [sp, #80]
    f6f0:	ldrb	w0, [sp, #63]
    f6f4:	cmp	w0, #0x0
    f6f8:	b.eq	f714 <_Z19decl_assembler_nameP9tree_node@plt+0x89b4>  // b.none
    f6fc:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    f700:	ldr	x0, [x0, #3888]
    f704:	ldr	x0, [x0]
    f708:	ldr	w1, [x0, #112]
    f70c:	sub	w1, w1, #0x1
    f710:	str	w1, [x0, #112]
    f714:	ldr	x1, [sp, #80]
    f718:	ldr	x0, [sp, #72]
    f71c:	bl	12710 <plugin_init@@Base+0x16d0>
    f720:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    f724:	ldp	x29, x30, [sp], #96
    f728:	ret
    f72c:	stp	x29, x30, [sp, #-96]!
    f730:	mov	x29, sp
    f734:	str	x0, [sp, #40]
    f738:	str	x1, [sp, #32]
    f73c:	str	x2, [sp, #24]
    f740:	str	x3, [sp, #16]
    f744:	ldr	x0, [sp, #40]
    f748:	str	x0, [sp, #80]
    f74c:	str	xzr, [sp, #88]
    f750:	ldr	x0, [sp, #24]
    f754:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    f758:	str	x0, [sp, #72]
    f75c:	ldr	x0, [sp, #16]
    f760:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    f764:	str	x0, [sp, #64]
    f768:	ldr	x0, [sp, #32]
    f76c:	ldrb	w0, [x0]
    f770:	lsl	w0, w0, #8
    f774:	ldr	x1, [sp, #32]
    f778:	add	x1, x1, #0x1
    f77c:	ldrb	w1, [x1]
    f780:	orr	w0, w0, w1
    f784:	mov	w1, #0x7363                	// #29539
    f788:	cmp	w0, w1
    f78c:	b.eq	f7f8 <_Z19decl_assembler_nameP9tree_node@plt+0x8a98>  // b.none
    f790:	mov	w1, #0x7363                	// #29539
    f794:	cmp	w0, w1
    f798:	b.gt	f838 <_Z19decl_assembler_nameP9tree_node@plt+0x8ad8>
    f79c:	mov	w1, #0x7263                	// #29283
    f7a0:	cmp	w0, w1
    f7a4:	b.eq	f818 <_Z19decl_assembler_nameP9tree_node@plt+0x8ab8>  // b.none
    f7a8:	mov	w1, #0x7263                	// #29283
    f7ac:	cmp	w0, w1
    f7b0:	b.gt	f838 <_Z19decl_assembler_nameP9tree_node@plt+0x8ad8>
    f7b4:	mov	w1, #0x6463                	// #25699
    f7b8:	cmp	w0, w1
    f7bc:	b.eq	f7e8 <_Z19decl_assembler_nameP9tree_node@plt+0x8a88>  // b.none
    f7c0:	mov	w1, #0x6463                	// #25699
    f7c4:	cmp	w0, w1
    f7c8:	b.gt	f838 <_Z19decl_assembler_nameP9tree_node@plt+0x8ad8>
    f7cc:	mov	w1, #0x6363                	// #25443
    f7d0:	cmp	w0, w1
    f7d4:	b.eq	f808 <_Z19decl_assembler_nameP9tree_node@plt+0x8aa8>  // b.none
    f7d8:	mov	w1, #0x6376                	// #25462
    f7dc:	cmp	w0, w1
    f7e0:	b.eq	f828 <_Z19decl_assembler_nameP9tree_node@plt+0x8ac8>  // b.none
    f7e4:	b	f838 <_Z19decl_assembler_nameP9tree_node@plt+0x8ad8>
    f7e8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    f7ec:	ldr	x0, [x0, #3984]
    f7f0:	str	x0, [sp, #88]
    f7f4:	b	f850 <_Z19decl_assembler_nameP9tree_node@plt+0x8af0>
    f7f8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    f7fc:	ldr	x0, [x0, #3912]
    f800:	str	x0, [sp, #88]
    f804:	b	f850 <_Z19decl_assembler_nameP9tree_node@plt+0x8af0>
    f808:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    f80c:	ldr	x0, [x0, #3960]
    f810:	str	x0, [sp, #88]
    f814:	b	f850 <_Z19decl_assembler_nameP9tree_node@plt+0x8af0>
    f818:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    f81c:	ldr	x0, [x0, #3904]
    f820:	str	x0, [sp, #88]
    f824:	b	f850 <_Z19decl_assembler_nameP9tree_node@plt+0x8af0>
    f828:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    f82c:	ldr	x0, [x0, #4024]
    f830:	str	x0, [sp, #88]
    f834:	b	f850 <_Z19decl_assembler_nameP9tree_node@plt+0x8af0>
    f838:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    f83c:	add	x2, x0, #0x9e0
    f840:	mov	w1, #0xc15                 	// #3093
    f844:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    f848:	add	x0, x0, #0x4a8
    f84c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    f850:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    f854:	ldr	x0, [x0, #3888]
    f858:	ldr	x0, [x0]
    f85c:	ldr	w1, [x0, #112]
    f860:	add	w1, w1, #0x1
    f864:	str	w1, [x0, #112]
    f868:	ldr	x0, [sp, #72]
    f86c:	bl	6ae0 <_Z16dependent_type_pP9tree_node@plt>
    f870:	and	w0, w0, #0xff
    f874:	cmp	w0, #0x0
    f878:	b.ne	f8a4 <_Z19decl_assembler_nameP9tree_node@plt+0x8b44>  // b.any
    f87c:	ldr	x0, [sp, #64]
    f880:	bl	6d30 <_Z27type_dependent_expression_pP9tree_node@plt>
    f884:	and	w0, w0, #0xff
    f888:	cmp	w0, #0x0
    f88c:	b.ne	f8a4 <_Z19decl_assembler_nameP9tree_node@plt+0x8b44>  // b.any
    f890:	ldr	x0, [sp, #64]
    f894:	bl	6ac0 <_Z28value_dependent_expression_pP9tree_node@plt>
    f898:	and	w0, w0, #0xff
    f89c:	cmp	w0, #0x0
    f8a0:	b.eq	f8ac <_Z19decl_assembler_nameP9tree_node@plt+0x8b4c>  // b.none
    f8a4:	mov	w0, #0x1                   	// #1
    f8a8:	b	f8b0 <_Z19decl_assembler_nameP9tree_node@plt+0x8b50>
    f8ac:	mov	w0, #0x0                   	// #0
    f8b0:	strb	w0, [sp, #63]
    f8b4:	ldrb	w0, [sp, #63]
    f8b8:	eor	w0, w0, #0x1
    f8bc:	and	w0, w0, #0xff
    f8c0:	cmp	w0, #0x0
    f8c4:	b.eq	f8e0 <_Z19decl_assembler_nameP9tree_node@plt+0x8b80>  // b.none
    f8c8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    f8cc:	ldr	x0, [x0, #3888]
    f8d0:	ldr	x0, [x0]
    f8d4:	ldr	w1, [x0, #112]
    f8d8:	sub	w1, w1, #0x1
    f8dc:	str	w1, [x0, #112]
    f8e0:	ldr	x3, [sp, #88]
    f8e4:	mov	w2, #0x1                   	// #1
    f8e8:	ldr	x1, [sp, #64]
    f8ec:	ldr	x0, [sp, #72]
    f8f0:	blr	x3
    f8f4:	str	x0, [sp, #48]
    f8f8:	ldrb	w0, [sp, #63]
    f8fc:	cmp	w0, #0x0
    f900:	b.eq	f91c <_Z19decl_assembler_nameP9tree_node@plt+0x8bbc>  // b.none
    f904:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    f908:	ldr	x0, [x0, #3888]
    f90c:	ldr	x0, [x0]
    f910:	ldr	w1, [x0, #112]
    f914:	sub	w1, w1, #0x1
    f918:	str	w1, [x0, #112]
    f91c:	ldr	x1, [sp, #48]
    f920:	ldr	x0, [sp, #80]
    f924:	bl	12710 <plugin_init@@Base+0x16d0>
    f928:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    f92c:	ldp	x29, x30, [sp], #96
    f930:	ret
    f934:	stp	x29, x30, [sp, #-64]!
    f938:	mov	x29, sp
    f93c:	str	x0, [sp, #24]
    f940:	bl	6880 <_Z16make_tree_vectorv@plt>
    f944:	str	x0, [sp, #40]
    f948:	str	wzr, [sp, #60]
    f94c:	ldr	x0, [sp, #24]
    f950:	ldr	w0, [x0]
    f954:	ldr	w1, [sp, #60]
    f958:	cmp	w1, w0
    f95c:	b.ge	f99c <_Z19decl_assembler_nameP9tree_node@plt+0x8c3c>  // b.tcont
    f960:	ldr	x0, [sp, #24]
    f964:	ldr	x1, [x0, #8]
    f968:	ldrsw	x0, [sp, #60]
    f96c:	lsl	x0, x0, #3
    f970:	add	x0, x1, x0
    f974:	ldr	x0, [x0]
    f978:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    f97c:	str	x0, [sp, #48]
    f980:	add	x1, sp, #0x30
    f984:	add	x0, sp, #0x28
    f988:	bl	13470 <plugin_init@@Base+0x2430>
    f98c:	ldr	w0, [sp, #60]
    f990:	add	w0, w0, #0x1
    f994:	str	w0, [sp, #60]
    f998:	b	f94c <_Z19decl_assembler_nameP9tree_node@plt+0x8bec>
    f99c:	ldr	x0, [sp, #40]
    f9a0:	ldp	x29, x30, [sp], #64
    f9a4:	ret
    f9a8:	stp	x29, x30, [sp, #-64]!
    f9ac:	mov	x29, sp
    f9b0:	str	x0, [sp, #24]
    f9b4:	add	x0, sp, #0x28
    f9b8:	str	x0, [sp, #56]
    f9bc:	str	wzr, [sp, #52]
    f9c0:	ldr	x0, [sp, #24]
    f9c4:	ldr	w0, [x0]
    f9c8:	ldr	w1, [sp, #52]
    f9cc:	cmp	w1, w0
    f9d0:	b.ge	fa28 <_Z19decl_assembler_nameP9tree_node@plt+0x8cc8>  // b.tcont
    f9d4:	ldr	x0, [sp, #24]
    f9d8:	ldr	x1, [x0, #8]
    f9dc:	ldrsw	x0, [sp, #52]
    f9e0:	lsl	x0, x0, #3
    f9e4:	add	x0, x1, x0
    f9e8:	ldr	x0, [x0]
    f9ec:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    f9f0:	mov	x1, x0
    f9f4:	mov	x0, #0x0                   	// #0
    f9f8:	bl	6420 <_Z15build_tree_listP9tree_nodeS0_@plt>
    f9fc:	mov	x1, x0
    fa00:	ldr	x0, [sp, #56]
    fa04:	str	x1, [x0]
    fa08:	ldr	x0, [sp, #56]
    fa0c:	ldr	x0, [x0]
    fa10:	add	x0, x0, #0x10
    fa14:	str	x0, [sp, #56]
    fa18:	ldr	w0, [sp, #52]
    fa1c:	add	w0, w0, #0x1
    fa20:	str	w0, [sp, #52]
    fa24:	b	f9c0 <_Z19decl_assembler_nameP9tree_node@plt+0x8c60>
    fa28:	ldr	x0, [sp, #40]
    fa2c:	ldp	x29, x30, [sp], #64
    fa30:	ret
    fa34:	stp	x29, x30, [sp, #-64]!
    fa38:	mov	x29, sp
    fa3c:	str	x0, [sp, #24]
    fa40:	str	xzr, [sp, #48]
    fa44:	str	wzr, [sp, #60]
    fa48:	ldr	x0, [sp, #24]
    fa4c:	ldr	w0, [x0]
    fa50:	ldr	w1, [sp, #60]
    fa54:	cmp	w1, w0
    fa58:	b.ge	fa9c <_Z19decl_assembler_nameP9tree_node@plt+0x8d3c>  // b.tcont
    fa5c:	stp	xzr, xzr, [sp, #32]
    fa60:	ldr	x0, [sp, #24]
    fa64:	ldr	x1, [x0, #8]
    fa68:	ldrsw	x0, [sp, #60]
    fa6c:	lsl	x0, x0, #3
    fa70:	add	x0, x1, x0
    fa74:	ldr	x0, [x0]
    fa78:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    fa7c:	str	x0, [sp, #40]
    fa80:	add	x1, sp, #0x20
    fa84:	add	x0, sp, #0x30
    fa88:	bl	13514 <plugin_init@@Base+0x24d4>
    fa8c:	ldr	w0, [sp, #60]
    fa90:	add	w0, w0, #0x1
    fa94:	str	w0, [sp, #60]
    fa98:	b	fa48 <_Z19decl_assembler_nameP9tree_node@plt+0x8ce8>
    fa9c:	ldr	x0, [sp, #48]
    faa0:	ldp	x29, x30, [sp], #64
    faa4:	ret
    faa8:	stp	x29, x30, [sp, #-80]!
    faac:	mov	x29, sp
    fab0:	str	x0, [sp, #40]
    fab4:	str	x1, [sp, #32]
    fab8:	str	x2, [sp, #24]
    fabc:	str	x3, [sp, #16]
    fac0:	ldr	x0, [sp, #40]
    fac4:	str	x0, [sp, #64]
    fac8:	ldr	x0, [sp, #24]
    facc:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    fad0:	str	x0, [sp, #56]
    fad4:	ldr	x0, [sp, #32]
    fad8:	ldrb	w0, [x0]
    fadc:	lsl	w0, w0, #8
    fae0:	ldr	x1, [sp, #32]
    fae4:	add	x1, x1, #0x1
    fae8:	ldrb	w1, [x1]
    faec:	orr	w0, w0, w1
    faf0:	mov	w1, #0x746c                	// #29804
    faf4:	cmp	w0, w1
    faf8:	b.eq	fb84 <_Z19decl_assembler_nameP9tree_node@plt+0x8e24>  // b.none
    fafc:	mov	w1, #0x746c                	// #29804
    fb00:	cmp	w0, w1
    fb04:	b.gt	fc78 <_Z19decl_assembler_nameP9tree_node@plt+0x8f18>
    fb08:	mov	w1, #0x6376                	// #25462
    fb0c:	cmp	w0, w1
    fb10:	b.eq	fb24 <_Z19decl_assembler_nameP9tree_node@plt+0x8dc4>  // b.none
    fb14:	mov	w1, #0x696c                	// #26988
    fb18:	cmp	w0, w1
    fb1c:	b.eq	fc30 <_Z19decl_assembler_nameP9tree_node@plt+0x8ed0>  // b.none
    fb20:	b	fc78 <_Z19decl_assembler_nameP9tree_node@plt+0x8f18>
    fb24:	ldr	x0, [sp, #56]
    fb28:	ldrh	w0, [x0]
    fb2c:	mov	w1, w0
    fb30:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    fb34:	ldr	x0, [x0, #3952]
    fb38:	sxtw	x1, w1
    fb3c:	ldr	w0, [x0, x1, lsl #2]
    fb40:	cmp	w0, #0x2
    fb44:	b.eq	fb60 <_Z19decl_assembler_nameP9tree_node@plt+0x8e00>  // b.none
    fb48:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    fb4c:	add	x2, x0, #0x9f8
    fb50:	mov	w1, #0xc53                 	// #3155
    fb54:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    fb58:	add	x0, x0, #0x4a8
    fb5c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    fb60:	ldr	x0, [sp, #16]
    fb64:	bl	f9a8 <_Z19decl_assembler_nameP9tree_node@plt+0x8c48>
    fb68:	str	x0, [sp, #48]
    fb6c:	mov	w2, #0x1                   	// #1
    fb70:	ldr	x1, [sp, #48]
    fb74:	ldr	x0, [sp, #56]
    fb78:	bl	6ba0 <_Z21build_functional_castP9tree_nodeS0_i@plt>
    fb7c:	str	x0, [sp, #72]
    fb80:	b	fc90 <_Z19decl_assembler_nameP9tree_node@plt+0x8f30>
    fb84:	ldr	x0, [sp, #56]
    fb88:	cmp	x0, #0x0
    fb8c:	b.ne	fba8 <_Z19decl_assembler_nameP9tree_node@plt+0x8e48>  // b.any
    fb90:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    fb94:	add	x2, x0, #0x9f8
    fb98:	mov	w1, #0xc59                 	// #3161
    fb9c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    fba0:	add	x0, x0, #0x4a8
    fba4:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    fba8:	ldr	x0, [sp, #56]
    fbac:	ldrh	w0, [x0]
    fbb0:	mov	w1, w0
    fbb4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    fbb8:	ldr	x0, [x0, #3952]
    fbbc:	sxtw	x1, w1
    fbc0:	ldr	w0, [x0, x1, lsl #2]
    fbc4:	cmp	w0, #0x2
    fbc8:	b.eq	fbe4 <_Z19decl_assembler_nameP9tree_node@plt+0x8e84>  // b.none
    fbcc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    fbd0:	add	x2, x0, #0x9f8
    fbd4:	mov	w1, #0xc5a                 	// #3162
    fbd8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    fbdc:	add	x0, x0, #0x4a8
    fbe0:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    fbe4:	mov	w0, #0x37                  	// #55
    fbe8:	bl	6110 <_Z9make_node9tree_code@plt>
    fbec:	str	x0, [sp, #48]
    fbf0:	ldr	x0, [sp, #16]
    fbf4:	bl	fa34 <_Z19decl_assembler_nameP9tree_node@plt+0x8cd4>
    fbf8:	mov	x1, x0
    fbfc:	ldr	x0, [sp, #48]
    fc00:	str	x1, [x0, #16]
    fc04:	ldr	x0, [sp, #48]
    fc08:	ldrb	w1, [x0, #4]
    fc0c:	orr	w1, w1, #0x1
    fc10:	strb	w1, [x0, #4]
    fc14:	mov	w3, #0x0                   	// #0
    fc18:	mov	w2, #0x1                   	// #1
    fc1c:	ldr	x1, [sp, #48]
    fc20:	ldr	x0, [sp, #56]
    fc24:	bl	6540 <_Z23finish_compound_literalP9tree_nodeS0_i5fcl_t@plt>
    fc28:	str	x0, [sp, #72]
    fc2c:	b	fc90 <_Z19decl_assembler_nameP9tree_node@plt+0x8f30>
    fc30:	ldr	x0, [sp, #56]
    fc34:	cmp	x0, #0x0
    fc38:	b.eq	fc54 <_Z19decl_assembler_nameP9tree_node@plt+0x8ef4>  // b.none
    fc3c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    fc40:	add	x2, x0, #0x9f8
    fc44:	mov	w1, #0xc62                 	// #3170
    fc48:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    fc4c:	add	x0, x0, #0x4a8
    fc50:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    fc54:	mov	w0, #0x37                  	// #55
    fc58:	bl	6110 <_Z9make_node9tree_code@plt>
    fc5c:	str	x0, [sp, #72]
    fc60:	ldr	x0, [sp, #16]
    fc64:	bl	fa34 <_Z19decl_assembler_nameP9tree_node@plt+0x8cd4>
    fc68:	mov	x1, x0
    fc6c:	ldr	x0, [sp, #72]
    fc70:	str	x1, [x0, #16]
    fc74:	b	fc90 <_Z19decl_assembler_nameP9tree_node@plt+0x8f30>
    fc78:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    fc7c:	add	x2, x0, #0x9f8
    fc80:	mov	w1, #0xc68                 	// #3176
    fc84:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    fc88:	add	x0, x0, #0x4a8
    fc8c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    fc90:	ldr	x1, [sp, #72]
    fc94:	ldr	x0, [sp, #64]
    fc98:	bl	12710 <plugin_init@@Base+0x16d0>
    fc9c:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
    fca0:	ldp	x29, x30, [sp], #80
    fca4:	ret
    fca8:	stp	x29, x30, [sp, #-160]!
    fcac:	mov	x29, sp
    fcb0:	str	x0, [sp, #56]
    fcb4:	str	x1, [sp, #48]
    fcb8:	str	x2, [sp, #40]
    fcbc:	str	x3, [sp, #32]
    fcc0:	str	x4, [sp, #24]
    fcc4:	ldr	x0, [sp, #56]
    fcc8:	str	x0, [sp, #120]
    fccc:	ldr	x0, [sp, #32]
    fcd0:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
    fcd4:	str	x0, [sp, #152]
    fcd8:	str	xzr, [sp, #80]
    fcdc:	str	xzr, [sp, #72]
    fce0:	strb	wzr, [sp, #151]
    fce4:	str	xzr, [sp, #136]
    fce8:	ldr	x0, [sp, #40]
    fcec:	cmp	x0, #0x0
    fcf0:	b.eq	fd00 <_Z19decl_assembler_nameP9tree_node@plt+0x8fa0>  // b.none
    fcf4:	ldr	x0, [sp, #40]
    fcf8:	bl	f934 <_Z19decl_assembler_nameP9tree_node@plt+0x8bd4>
    fcfc:	str	x0, [sp, #80]
    fd00:	ldr	x0, [sp, #24]
    fd04:	cmp	x0, #0x0
    fd08:	b.eq	fd18 <_Z19decl_assembler_nameP9tree_node@plt+0x8fb8>  // b.none
    fd0c:	ldr	x0, [sp, #24]
    fd10:	bl	f934 <_Z19decl_assembler_nameP9tree_node@plt+0x8bd4>
    fd14:	str	x0, [sp, #72]
    fd18:	ldr	x0, [sp, #152]
    fd1c:	ldrh	w0, [x0]
    fd20:	mov	w1, w0
    fd24:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    fd28:	ldr	x0, [x0, #3952]
    fd2c:	sxtw	x1, w1
    fd30:	ldr	w0, [x0, x1, lsl #2]
    fd34:	cmp	w0, #0x2
    fd38:	b.eq	fd54 <_Z19decl_assembler_nameP9tree_node@plt+0x8ff4>  // b.none
    fd3c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    fd40:	add	x2, x0, #0xa20
    fd44:	mov	w1, #0xc80                 	// #3200
    fd48:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    fd4c:	add	x0, x0, #0x4a8
    fd50:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    fd54:	nop
    fd58:	ldr	x0, [sp, #48]
    fd5c:	ldrb	w0, [x0]
    fd60:	lsl	w0, w0, #8
    fd64:	ldr	x1, [sp, #48]
    fd68:	add	x1, x1, #0x1
    fd6c:	ldrb	w1, [x1]
    fd70:	orr	w0, w0, w1
    fd74:	mov	w1, #0x6e77                	// #28279
    fd78:	cmp	w0, w1
    fd7c:	b.eq	fde4 <_Z19decl_assembler_nameP9tree_node@plt+0x9084>  // b.none
    fd80:	mov	w1, #0x6e77                	// #28279
    fd84:	cmp	w0, w1
    fd88:	b.gt	ff68 <_Z19decl_assembler_nameP9tree_node@plt+0x9208>
    fd8c:	mov	w1, #0x6773                	// #26483
    fd90:	cmp	w0, w1
    fd94:	b.eq	fda8 <_Z19decl_assembler_nameP9tree_node@plt+0x9048>  // b.none
    fd98:	mov	w1, #0x6e61                	// #28257
    fd9c:	cmp	w0, w1
    fda0:	b.eq	fe0c <_Z19decl_assembler_nameP9tree_node@plt+0x90ac>  // b.none
    fda4:	b	ff68 <_Z19decl_assembler_nameP9tree_node@plt+0x9208>
    fda8:	ldrb	w0, [sp, #151]
    fdac:	cmp	w0, #0x0
    fdb0:	b.eq	fdcc <_Z19decl_assembler_nameP9tree_node@plt+0x906c>  // b.none
    fdb4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    fdb8:	add	x2, x0, #0xa20
    fdbc:	mov	w1, #0xc86                 	// #3206
    fdc0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    fdc4:	add	x0, x0, #0x4a8
    fdc8:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    fdcc:	mov	w0, #0x1                   	// #1
    fdd0:	strb	w0, [sp, #151]
    fdd4:	ldr	x0, [sp, #48]
    fdd8:	add	x0, x0, #0x2
    fddc:	str	x0, [sp, #48]
    fde0:	b	fd58 <_Z19decl_assembler_nameP9tree_node@plt+0x8ff8>
    fde4:	ldr	x0, [sp, #152]
    fde8:	ldrh	w0, [x0]
    fdec:	cmp	w0, #0x10
    fdf0:	b.ne	ff80 <_Z19decl_assembler_nameP9tree_node@plt+0x9220>  // b.any
    fdf4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    fdf8:	add	x2, x0, #0xa20
    fdfc:	mov	w1, #0xc8c                 	// #3212
    fe00:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    fe04:	add	x0, x0, #0x4a8
    fe08:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    fe0c:	ldr	x0, [sp, #152]
    fe10:	ldrh	w0, [x0]
    fe14:	cmp	w0, #0x10
    fe18:	b.eq	fe34 <_Z19decl_assembler_nameP9tree_node@plt+0x90d4>  // b.none
    fe1c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    fe20:	add	x2, x0, #0xa20
    fe24:	mov	w1, #0xc90                 	// #3216
    fe28:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    fe2c:	add	x0, x0, #0x4a8
    fe30:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    fe34:	ldr	x0, [sp, #152]
    fe38:	ldr	x0, [x0, #136]
    fe3c:	cmp	x0, #0x0
    fe40:	b.ne	fe5c <_Z19decl_assembler_nameP9tree_node@plt+0x90fc>  // b.any
    fe44:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    fe48:	add	x2, x0, #0xa20
    fe4c:	mov	w1, #0xc91                 	// #3217
    fe50:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    fe54:	add	x0, x0, #0x4a8
    fe58:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    fe5c:	ldr	x0, [sp, #152]
    fe60:	ldr	x0, [x0, #136]
    fe64:	ldr	x0, [x0, #152]
    fe68:	str	x0, [sp, #112]
    fe6c:	ldr	x0, [sp, #112]
    fe70:	ldr	x0, [x0, #8]
    fe74:	str	x0, [sp, #104]
    fe78:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    fe7c:	ldr	x0, [x0, #3976]
    fe80:	ldr	x0, [x0, #168]
    fe84:	str	x0, [sp, #128]
    fe88:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    fe8c:	ldr	x0, [x0, #3888]
    fe90:	ldr	x0, [x0]
    fe94:	ldr	w1, [x0, #112]
    fe98:	add	w1, w1, #0x1
    fe9c:	str	w1, [x0, #112]
    fea0:	ldr	x0, [sp, #112]
    fea4:	bl	6ac0 <_Z28value_dependent_expression_pP9tree_node@plt>
    fea8:	and	w0, w0, #0xff
    feac:	cmp	w0, #0x0
    feb0:	b.ne	fec8 <_Z19decl_assembler_nameP9tree_node@plt+0x9168>  // b.any
    feb4:	ldr	x0, [sp, #112]
    feb8:	bl	6d30 <_Z27type_dependent_expression_pP9tree_node@plt>
    febc:	and	w0, w0, #0xff
    fec0:	cmp	w0, #0x0
    fec4:	b.eq	fed0 <_Z19decl_assembler_nameP9tree_node@plt+0x9170>  // b.none
    fec8:	mov	w0, #0x1                   	// #1
    fecc:	b	fed4 <_Z19decl_assembler_nameP9tree_node@plt+0x9174>
    fed0:	mov	w0, #0x0                   	// #0
    fed4:	strb	w0, [sp, #103]
    fed8:	ldrb	w0, [sp, #103]
    fedc:	eor	w0, w0, #0x1
    fee0:	and	w0, w0, #0xff
    fee4:	cmp	w0, #0x0
    fee8:	b.eq	ff18 <_Z19decl_assembler_nameP9tree_node@plt+0x91b8>  // b.none
    feec:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    fef0:	ldr	x0, [x0, #3888]
    fef4:	ldr	x0, [x0]
    fef8:	ldr	w1, [x0, #112]
    fefc:	sub	w1, w1, #0x1
    ff00:	str	w1, [x0, #112]
    ff04:	ldr	x2, [sp, #128]
    ff08:	ldr	x1, [sp, #104]
    ff0c:	mov	w0, #0x0                   	// #0
    ff10:	bl	6410 <_Z16fold_convert_locjP9tree_nodeS0_@plt>
    ff14:	str	x0, [sp, #128]
    ff18:	ldr	x4, [sp, #128]
    ff1c:	ldr	x3, [sp, #136]
    ff20:	ldr	x2, [sp, #104]
    ff24:	mov	w1, #0x46                  	// #70
    ff28:	mov	w0, #0x0                   	// #0
    ff2c:	bl	6210 <_Z15fold_build2_locj9tree_codeP9tree_nodeS1_S1_@plt>
    ff30:	str	x0, [sp, #136]
    ff34:	ldrb	w0, [sp, #103]
    ff38:	cmp	w0, #0x0
    ff3c:	b.eq	ff58 <_Z19decl_assembler_nameP9tree_node@plt+0x91f8>  // b.none
    ff40:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    ff44:	ldr	x0, [x0, #3888]
    ff48:	ldr	x0, [x0]
    ff4c:	ldr	w1, [x0, #112]
    ff50:	sub	w1, w1, #0x1
    ff54:	str	w1, [x0, #112]
    ff58:	ldr	x0, [sp, #152]
    ff5c:	ldr	x0, [x0, #8]
    ff60:	str	x0, [sp, #152]
    ff64:	b	ff84 <_Z19decl_assembler_nameP9tree_node@plt+0x9224>
    ff68:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    ff6c:	add	x2, x0, #0xa20
    ff70:	mov	w1, #0xcab                 	// #3243
    ff74:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
    ff78:	add	x0, x0, #0x4a8
    ff7c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
    ff80:	nop
    ff84:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
    ff88:	ldr	x0, [x0, #3888]
    ff8c:	ldr	x0, [x0]
    ff90:	ldr	w1, [x0, #112]
    ff94:	add	w1, w1, #0x1
    ff98:	str	w1, [x0, #112]
    ff9c:	ldr	x0, [sp, #152]
    ffa0:	bl	6ae0 <_Z16dependent_type_pP9tree_node@plt>
    ffa4:	and	w0, w0, #0xff
    ffa8:	cmp	w0, #0x0
    ffac:	b.ne	10004 <_Z19decl_assembler_nameP9tree_node@plt+0x92a4>  // b.any
    ffb0:	ldr	x0, [sp, #136]
    ffb4:	bl	6ac0 <_Z28value_dependent_expression_pP9tree_node@plt>
    ffb8:	and	w0, w0, #0xff
    ffbc:	cmp	w0, #0x0
    ffc0:	b.ne	10004 <_Z19decl_assembler_nameP9tree_node@plt+0x92a4>  // b.any
    ffc4:	ldr	x0, [sp, #80]
    ffc8:	cmp	x0, #0x0
    ffcc:	b.eq	ffe4 <_Z19decl_assembler_nameP9tree_node@plt+0x9284>  // b.none
    ffd0:	ldr	x0, [sp, #80]
    ffd4:	bl	6a00 <_Z30any_type_dependent_arguments_pPK3vecIP9tree_node5va_gc8vl_embedE@plt>
    ffd8:	and	w0, w0, #0xff
    ffdc:	cmp	w0, #0x0
    ffe0:	b.ne	10004 <_Z19decl_assembler_nameP9tree_node@plt+0x92a4>  // b.any
    ffe4:	ldr	x0, [sp, #72]
    ffe8:	cmp	x0, #0x0
    ffec:	b.eq	1000c <_Z19decl_assembler_nameP9tree_node@plt+0x92ac>  // b.none
    fff0:	ldr	x0, [sp, #72]
    fff4:	bl	6a00 <_Z30any_type_dependent_arguments_pPK3vecIP9tree_node5va_gc8vl_embedE@plt>
    fff8:	and	w0, w0, #0xff
    fffc:	cmp	w0, #0x0
   10000:	b.eq	1000c <_Z19decl_assembler_nameP9tree_node@plt+0x92ac>  // b.none
   10004:	mov	w0, #0x1                   	// #1
   10008:	b	10010 <_Z19decl_assembler_nameP9tree_node@plt+0x92b0>
   1000c:	mov	w0, #0x0                   	// #0
   10010:	strb	w0, [sp, #102]
   10014:	ldrb	w0, [sp, #102]
   10018:	eor	w0, w0, #0x1
   1001c:	and	w0, w0, #0xff
   10020:	cmp	w0, #0x0
   10024:	b.eq	10040 <_Z19decl_assembler_nameP9tree_node@plt+0x92e0>  // b.none
   10028:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1002c:	ldr	x0, [x0, #3888]
   10030:	ldr	x0, [x0]
   10034:	ldr	w1, [x0, #112]
   10038:	sub	w1, w1, #0x1
   1003c:	str	w1, [x0, #112]
   10040:	ldrb	w2, [sp, #151]
   10044:	add	x1, sp, #0x48
   10048:	add	x0, sp, #0x50
   1004c:	mov	w5, #0x1                   	// #1
   10050:	mov	w4, w2
   10054:	mov	x3, x1
   10058:	ldr	x2, [sp, #136]
   1005c:	ldr	x1, [sp, #152]
   10060:	bl	6120 <_Z9build_newPP3vecIP9tree_node5va_gc8vl_embedES1_S1_S6_ii@plt>
   10064:	str	x0, [sp, #88]
   10068:	ldrb	w0, [sp, #102]
   1006c:	cmp	w0, #0x0
   10070:	b.eq	1008c <_Z19decl_assembler_nameP9tree_node@plt+0x932c>  // b.none
   10074:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   10078:	ldr	x0, [x0, #3888]
   1007c:	ldr	x0, [x0]
   10080:	ldr	w1, [x0, #112]
   10084:	sub	w1, w1, #0x1
   10088:	str	w1, [x0, #112]
   1008c:	ldr	x0, [sp, #80]
   10090:	cmp	x0, #0x0
   10094:	b.eq	100a0 <_Z19decl_assembler_nameP9tree_node@plt+0x9340>  // b.none
   10098:	ldr	x0, [sp, #80]
   1009c:	bl	65a0 <_Z19release_tree_vectorP3vecIP9tree_node5va_gc8vl_embedE@plt>
   100a0:	ldr	x0, [sp, #72]
   100a4:	cmp	x0, #0x0
   100a8:	b.eq	100b4 <_Z19decl_assembler_nameP9tree_node@plt+0x9354>  // b.none
   100ac:	ldr	x0, [sp, #72]
   100b0:	bl	65a0 <_Z19release_tree_vectorP3vecIP9tree_node5va_gc8vl_embedE@plt>
   100b4:	ldr	x1, [sp, #88]
   100b8:	ldr	x0, [sp, #120]
   100bc:	bl	12710 <plugin_init@@Base+0x16d0>
   100c0:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   100c4:	ldp	x29, x30, [sp], #160
   100c8:	ret
   100cc:	stp	x29, x30, [sp, #-144]!
   100d0:	mov	x29, sp
   100d4:	str	x0, [sp, #40]
   100d8:	str	x1, [sp, #32]
   100dc:	str	w2, [sp, #28]
   100e0:	str	x3, [sp, #16]
   100e4:	ldr	x0, [sp, #40]
   100e8:	str	x0, [sp, #112]
   100ec:	ldr	x0, [sp, #32]
   100f0:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
   100f4:	str	x0, [sp, #136]
   100f8:	ldr	x0, [sp, #16]
   100fc:	bl	f934 <_Z19decl_assembler_nameP9tree_node@plt+0x8bd4>
   10100:	str	x0, [sp, #48]
   10104:	strb	wzr, [sp, #127]
   10108:	ldr	w0, [sp, #28]
   1010c:	cmp	w0, #0x0
   10110:	b.ne	10138 <_Z19decl_assembler_nameP9tree_node@plt+0x93d8>  // b.any
   10114:	ldr	x0, [sp, #48]
   10118:	bl	1354c <plugin_init@@Base+0x250c>
   1011c:	and	w0, w0, #0xff
   10120:	eor	w0, w0, #0x1
   10124:	and	w0, w0, #0xff
   10128:	cmp	w0, #0x0
   1012c:	b.eq	10138 <_Z19decl_assembler_nameP9tree_node@plt+0x93d8>  // b.none
   10130:	mov	w0, #0x1                   	// #1
   10134:	b	1013c <_Z19decl_assembler_nameP9tree_node@plt+0x93dc>
   10138:	mov	w0, #0x0                   	// #0
   1013c:	cmp	w0, #0x0
   10140:	b.eq	10218 <_Z19decl_assembler_nameP9tree_node@plt+0x94b8>  // b.none
   10144:	ldr	x0, [sp, #136]
   10148:	bl	121cc <plugin_init@@Base+0x118c>
   1014c:	cmp	x0, #0x0
   10150:	cset	w0, ne  // ne = any
   10154:	and	w0, w0, #0xff
   10158:	cmp	w0, #0x0
   1015c:	b.eq	1016c <_Z19decl_assembler_nameP9tree_node@plt+0x940c>  // b.none
   10160:	mov	w0, #0x1                   	// #1
   10164:	strb	w0, [sp, #127]
   10168:	b	10218 <_Z19decl_assembler_nameP9tree_node@plt+0x94b8>
   1016c:	ldr	x0, [sp, #136]
   10170:	bl	62d0 <_Z16is_overloaded_fnP9tree_node@plt>
   10174:	cmp	w0, #0x0
   10178:	b.eq	10218 <_Z19decl_assembler_nameP9tree_node@plt+0x94b8>  // b.none
   1017c:	ldr	x0, [sp, #136]
   10180:	bl	6570 <_Z12get_first_fnP9tree_node@plt>
   10184:	str	x0, [sp, #104]
   10188:	ldr	x0, [sp, #104]
   1018c:	ldrh	w0, [x0]
   10190:	cmp	w0, #0xff
   10194:	b.ne	101a4 <_Z19decl_assembler_nameP9tree_node@plt+0x9444>  // b.any
   10198:	ldr	x0, [sp, #104]
   1019c:	ldr	x0, [x0, #120]
   101a0:	b	101a8 <_Z19decl_assembler_nameP9tree_node@plt+0x9448>
   101a4:	ldr	x0, [sp, #104]
   101a8:	str	x0, [sp, #104]
   101ac:	ldr	x0, [sp, #104]
   101b0:	ldr	x0, [x0, #8]
   101b4:	ldrh	w0, [x0]
   101b8:	cmp	w0, #0x16
   101bc:	b.eq	10218 <_Z19decl_assembler_nameP9tree_node@plt+0x94b8>  // b.none
   101c0:	ldr	x0, [sp, #104]
   101c4:	ldrh	w0, [x0]
   101c8:	cmp	w0, #0xff
   101cc:	b.ne	101dc <_Z19decl_assembler_nameP9tree_node@plt+0x947c>  // b.any
   101d0:	ldr	x0, [sp, #104]
   101d4:	ldr	x0, [x0, #120]
   101d8:	b	101e0 <_Z19decl_assembler_nameP9tree_node@plt+0x9480>
   101dc:	ldr	x0, [sp, #104]
   101e0:	ldr	x0, [x0, #104]
   101e4:	ldrb	w0, [x0, #25]
   101e8:	and	w0, w0, #0x1
   101ec:	and	w0, w0, #0xff
   101f0:	cmp	w0, #0x0
   101f4:	b.ne	10218 <_Z19decl_assembler_nameP9tree_node@plt+0x94b8>  // b.any
   101f8:	ldr	x0, [sp, #104]
   101fc:	ldrb	w0, [x0, #57]
   10200:	and	w0, w0, #0xffffff80
   10204:	and	w0, w0, #0xff
   10208:	cmp	w0, #0x0
   1020c:	b.ne	10218 <_Z19decl_assembler_nameP9tree_node@plt+0x94b8>  // b.any
   10210:	mov	w0, #0x1                   	// #1
   10214:	strb	w0, [sp, #127]
   10218:	ldrb	w0, [sp, #127]
   1021c:	cmp	w0, #0x0
   10220:	b.eq	10248 <_Z19decl_assembler_nameP9tree_node@plt+0x94e8>  // b.none
   10224:	ldr	x0, [sp, #48]
   10228:	bl	6a00 <_Z30any_type_dependent_arguments_pPK3vecIP9tree_node5va_gc8vl_embedE@plt>
   1022c:	and	w0, w0, #0xff
   10230:	eor	w0, w0, #0x1
   10234:	and	w0, w0, #0xff
   10238:	cmp	w0, #0x0
   1023c:	b.eq	10248 <_Z19decl_assembler_nameP9tree_node@plt+0x94e8>  // b.none
   10240:	mov	w0, #0x1                   	// #1
   10244:	b	1024c <_Z19decl_assembler_nameP9tree_node@plt+0x94ec>
   10248:	mov	w0, #0x0                   	// #0
   1024c:	cmp	w0, #0x0
   10250:	b.eq	10284 <_Z19decl_assembler_nameP9tree_node@plt+0x9524>  // b.none
   10254:	add	x0, sp, #0x48
   10258:	ldr	x1, [sp, #136]
   1025c:	bl	12174 <plugin_init@@Base+0x1134>
   10260:	ldr	x0, [sp, #48]
   10264:	mov	w3, #0x0                   	// #0
   10268:	mov	x2, x0
   1026c:	ldp	x0, x1, [sp, #72]
   10270:	bl	66f0 <_Z21perform_koenig_lookup7cp_exprP3vecIP9tree_node5va_gc8vl_embedEi@plt>
   10274:	stp	x0, x1, [sp, #56]
   10278:	add	x0, sp, #0x38
   1027c:	bl	121b4 <plugin_init@@Base+0x1174>
   10280:	str	x0, [sp, #136]
   10284:	ldr	x0, [sp, #136]
   10288:	ldrh	w0, [x0]
   1028c:	cmp	w0, #0x2e
   10290:	b.ne	103ac <_Z19decl_assembler_nameP9tree_node@plt+0x964c>  // b.any
   10294:	ldr	x0, [sp, #136]
   10298:	ldr	x0, [x0, #24]
   1029c:	str	x0, [sp, #96]
   102a0:	ldr	x0, [sp, #136]
   102a4:	ldr	x0, [x0, #32]
   102a8:	str	x0, [sp, #88]
   102ac:	ldr	x0, [sp, #96]
   102b0:	bl	6d30 <_Z27type_dependent_expression_pP9tree_node@plt>
   102b4:	and	w0, w0, #0xff
   102b8:	cmp	w0, #0x0
   102bc:	b.ne	10308 <_Z19decl_assembler_nameP9tree_node@plt+0x95a8>  // b.any
   102c0:	ldr	x0, [sp, #88]
   102c4:	ldrh	w0, [x0]
   102c8:	cmp	w0, #0xfe
   102cc:	b.eq	102e0 <_Z19decl_assembler_nameP9tree_node@plt+0x9580>  // b.none
   102d0:	ldr	x0, [sp, #88]
   102d4:	ldrh	w0, [x0]
   102d8:	cmp	w0, #0x22
   102dc:	b.ne	10308 <_Z19decl_assembler_nameP9tree_node@plt+0x95a8>  // b.any
   102e0:	ldr	x0, [sp, #88]
   102e4:	bl	6d30 <_Z27type_dependent_expression_pP9tree_node@plt>
   102e8:	and	w0, w0, #0xff
   102ec:	cmp	w0, #0x0
   102f0:	b.ne	10308 <_Z19decl_assembler_nameP9tree_node@plt+0x95a8>  // b.any
   102f4:	ldr	x0, [sp, #48]
   102f8:	bl	6a00 <_Z30any_type_dependent_arguments_pPK3vecIP9tree_node5va_gc8vl_embedE@plt>
   102fc:	and	w0, w0, #0xff
   10300:	cmp	w0, #0x0
   10304:	b.eq	10310 <_Z19decl_assembler_nameP9tree_node@plt+0x95b0>  // b.none
   10308:	mov	w0, #0x1                   	// #1
   1030c:	b	10314 <_Z19decl_assembler_nameP9tree_node@plt+0x95b4>
   10310:	mov	w0, #0x0                   	// #0
   10314:	cmp	w0, #0x0
   10318:	b.eq	10334 <_Z19decl_assembler_nameP9tree_node@plt+0x95d4>  // b.none
   1031c:	ldr	x0, [sp, #48]
   10320:	mov	x1, x0
   10324:	ldr	x0, [sp, #136]
   10328:	bl	6b90 <_Z17build_nt_call_vecP9tree_nodeP3vecIS0_5va_gc8vl_embedE@plt>
   1032c:	str	x0, [sp, #128]
   10330:	b	10428 <_Z19decl_assembler_nameP9tree_node@plt+0x96c8>
   10334:	ldr	x0, [sp, #88]
   10338:	ldrh	w0, [x0]
   1033c:	cmp	w0, #0xfe
   10340:	b.ne	10388 <_Z19decl_assembler_nameP9tree_node@plt+0x9628>  // b.any
   10344:	ldr	w0, [sp, #28]
   10348:	cmp	w0, #0x0
   1034c:	b.eq	10358 <_Z19decl_assembler_nameP9tree_node@plt+0x95f8>  // b.none
   10350:	mov	w0, #0x3                   	// #3
   10354:	b	1035c <_Z19decl_assembler_nameP9tree_node@plt+0x95fc>
   10358:	mov	w0, #0x1                   	// #1
   1035c:	add	x1, sp, #0x30
   10360:	mov	w6, #0x0                   	// #0
   10364:	mov	x5, #0x0                   	// #0
   10368:	mov	w4, w0
   1036c:	mov	x3, #0x0                   	// #0
   10370:	mov	x2, x1
   10374:	ldr	x1, [sp, #88]
   10378:	ldr	x0, [sp, #96]
   1037c:	bl	6a90 <_Z21build_new_method_callP9tree_nodeS0_PP3vecIS0_5va_gc8vl_embedES0_iPS0_i@plt>
   10380:	str	x0, [sp, #128]
   10384:	b	10428 <_Z19decl_assembler_nameP9tree_node@plt+0x96c8>
   10388:	add	x0, sp, #0x30
   1038c:	mov	w4, #0x0                   	// #0
   10390:	mov	w3, #0x0                   	// #0
   10394:	mov	w2, #0x0                   	// #0
   10398:	mov	x1, x0
   1039c:	ldr	x0, [sp, #136]
   103a0:	bl	6360 <_Z16finish_call_exprP9tree_nodePP3vecIS0_5va_gc8vl_embedEbbi@plt>
   103a4:	str	x0, [sp, #128]
   103a8:	b	10428 <_Z19decl_assembler_nameP9tree_node@plt+0x96c8>
   103ac:	ldr	x0, [sp, #136]
   103b0:	ldrh	w0, [x0]
   103b4:	cmp	w0, #0xf1
   103b8:	b.eq	103dc <_Z19decl_assembler_nameP9tree_node@plt+0x967c>  // b.none
   103bc:	ldr	x0, [sp, #136]
   103c0:	ldrh	w0, [x0]
   103c4:	cmp	w0, #0xf8
   103c8:	b.eq	103dc <_Z19decl_assembler_nameP9tree_node@plt+0x967c>  // b.none
   103cc:	ldr	x0, [sp, #136]
   103d0:	ldrh	w0, [x0]
   103d4:	cmp	w0, #0x115
   103d8:	b.ne	103f8 <_Z19decl_assembler_nameP9tree_node@plt+0x9698>  // b.any
   103dc:	add	x0, sp, #0x30
   103e0:	mov	w2, #0x0                   	// #0
   103e4:	mov	x1, x0
   103e8:	ldr	x0, [sp, #136]
   103ec:	bl	6bf0 <_Z31build_offset_ref_call_from_treeP9tree_nodePP3vecIS0_5va_gc8vl_embedEi@plt>
   103f0:	str	x0, [sp, #128]
   103f4:	b	10428 <_Z19decl_assembler_nameP9tree_node@plt+0x96c8>
   103f8:	ldr	w0, [sp, #28]
   103fc:	cmp	w0, #0x0
   10400:	cset	w0, ne  // ne = any
   10404:	and	w1, w0, #0xff
   10408:	add	x0, sp, #0x30
   1040c:	mov	w4, #0x0                   	// #0
   10410:	ldrb	w3, [sp, #127]
   10414:	mov	w2, w1
   10418:	mov	x1, x0
   1041c:	ldr	x0, [sp, #136]
   10420:	bl	6360 <_Z16finish_call_exprP9tree_nodePP3vecIS0_5va_gc8vl_embedEbbi@plt>
   10424:	str	x0, [sp, #128]
   10428:	ldr	x0, [sp, #48]
   1042c:	bl	65a0 <_Z19release_tree_vectorP3vecIP9tree_node5va_gc8vl_embedE@plt>
   10430:	ldr	x1, [sp, #128]
   10434:	ldr	x0, [sp, #112]
   10438:	bl	12710 <plugin_init@@Base+0x16d0>
   1043c:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   10440:	ldp	x29, x30, [sp], #144
   10444:	ret
   10448:	stp	x29, x30, [sp, #-64]!
   1044c:	mov	x29, sp
   10450:	str	x0, [sp, #24]
   10454:	str	x1, [sp, #16]
   10458:	ldr	x0, [sp, #24]
   1045c:	str	x0, [sp, #48]
   10460:	ldr	x0, [sp, #16]
   10464:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
   10468:	str	x0, [sp, #40]
   1046c:	ldr	x0, [sp, #40]
   10470:	cmp	x0, #0x0
   10474:	b.eq	10488 <_Z19decl_assembler_nameP9tree_node@plt+0x9728>  // b.none
   10478:	ldr	x0, [sp, #40]
   1047c:	ldr	x0, [x0, #8]
   10480:	str	x0, [sp, #56]
   10484:	b	104a0 <_Z19decl_assembler_nameP9tree_node@plt+0x9740>
   10488:	bl	64c0 <_Z18make_decltype_autov@plt>
   1048c:	str	x0, [sp, #56]
   10490:	ldr	x0, [sp, #56]
   10494:	ldrb	w1, [x0, #55]
   10498:	orr	w1, w1, #0x40
   1049c:	strb	w1, [x0, #55]
   104a0:	ldr	x1, [sp, #56]
   104a4:	ldr	x0, [sp, #48]
   104a8:	bl	12710 <plugin_init@@Base+0x16d0>
   104ac:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   104b0:	ldp	x29, x30, [sp], #64
   104b4:	ret
   104b8:	stp	x29, x30, [sp, #-112]!
   104bc:	mov	x29, sp
   104c0:	str	x0, [sp, #56]
   104c4:	str	x1, [sp, #48]
   104c8:	str	x2, [sp, #40]
   104cc:	str	x3, [sp, #32]
   104d0:	str	x4, [sp, #24]
   104d4:	str	w5, [sp, #20]
   104d8:	ldr	x0, [sp, #56]
   104dc:	str	x0, [sp, #104]
   104e0:	ldr	w2, [sp, #20]
   104e4:	ldr	x1, [sp, #24]
   104e8:	ldr	x0, [sp, #104]
   104ec:	bl	12750 <plugin_init@@Base+0x1710>
   104f0:	str	w0, [sp, #100]
   104f4:	ldr	x0, [sp, #48]
   104f8:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
   104fc:	str	x0, [sp, #88]
   10500:	ldr	x0, [sp, #40]
   10504:	bl	d7e4 <_Z19decl_assembler_nameP9tree_node@plt+0x6a84>
   10508:	str	x0, [sp, #80]
   1050c:	mov	x3, #0x0                   	// #0
   10510:	mov	w2, #0x1                   	// #1
   10514:	ldr	x1, [sp, #80]
   10518:	ldr	x0, [sp, #88]
   1051c:	bl	6730 <_Z6tsubstP9tree_nodeS0_iS0_@plt>
   10520:	str	x0, [sp, #72]
   10524:	ldr	x0, [sp, #72]
   10528:	ldr	w1, [sp, #100]
   1052c:	str	w1, [x0, #24]
   10530:	ldr	x1, [sp, #32]
   10534:	ldr	x0, [sp, #72]
   10538:	bl	9348 <_Z19decl_assembler_nameP9tree_node@plt+0x25e8>
   1053c:	mov	x2, x1
   10540:	mov	x1, x0
   10544:	ldr	x0, [sp, #104]
   10548:	bl	939c <_Z19decl_assembler_nameP9tree_node@plt+0x263c>
   1054c:	ldr	x1, [sp, #72]
   10550:	ldr	x0, [sp, #104]
   10554:	bl	12710 <plugin_init@@Base+0x16d0>
   10558:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   1055c:	ldp	x29, x30, [sp], #112
   10560:	ret
   10564:	stp	x29, x30, [sp, #-96]!
   10568:	mov	x29, sp
   1056c:	str	x0, [sp, #56]
   10570:	str	x1, [sp, #48]
   10574:	str	x2, [sp, #40]
   10578:	str	x3, [sp, #32]
   1057c:	str	w4, [sp, #28]
   10580:	ldr	x0, [sp, #56]
   10584:	str	x0, [sp, #88]
   10588:	ldr	w2, [sp, #28]
   1058c:	ldr	x1, [sp, #32]
   10590:	ldr	x0, [sp, #88]
   10594:	bl	12750 <plugin_init@@Base+0x1710>
   10598:	str	w0, [sp, #84]
   1059c:	ldr	x0, [sp, #48]
   105a0:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
   105a4:	str	x0, [sp, #72]
   105a8:	ldr	x0, [sp, #40]
   105ac:	bl	d7e4 <_Z19decl_assembler_nameP9tree_node@plt+0x6a84>
   105b0:	mov	w2, #0x0                   	// #0
   105b4:	mov	x1, x0
   105b8:	ldr	x0, [sp, #72]
   105bc:	bl	6840 <_Z20finish_template_typeP9tree_nodeS0_i@plt>
   105c0:	str	x0, [sp, #64]
   105c4:	ldr	x0, [sp, #64]
   105c8:	ldr	w1, [sp, #84]
   105cc:	str	w1, [x0, #24]
   105d0:	ldr	x1, [sp, #64]
   105d4:	ldr	x0, [sp, #88]
   105d8:	bl	12710 <plugin_init@@Base+0x16d0>
   105dc:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   105e0:	ldp	x29, x30, [sp], #96
   105e4:	ret
   105e8:	stp	x29, x30, [sp, #-48]!
   105ec:	mov	x29, sp
   105f0:	str	x0, [sp, #24]
   105f4:	str	xzr, [sp, #40]
   105f8:	ldr	x0, [sp, #24]
   105fc:	cmp	x0, #0x0
   10600:	b.ne	1060c <_Z19decl_assembler_nameP9tree_node@plt+0x98ac>  // b.any
   10604:	ldr	x0, [sp, #40]
   10608:	b	10668 <_Z19decl_assembler_nameP9tree_node@plt+0x9908>
   1060c:	ldr	x0, [sp, #24]
   10610:	bl	6960 <_Z14get_identifierPKc@plt>
   10614:	bl	6770 <_Z23identifier_global_valueP9tree_node@plt>
   10618:	str	x0, [sp, #40]
   1061c:	ldr	x0, [sp, #40]
   10620:	cmp	x0, #0x0
   10624:	b.ne	10630 <_Z19decl_assembler_nameP9tree_node@plt+0x98d0>  // b.any
   10628:	ldr	x0, [sp, #40]
   1062c:	b	10668 <_Z19decl_assembler_nameP9tree_node@plt+0x9908>
   10630:	ldr	x0, [sp, #40]
   10634:	ldrh	w0, [x0]
   10638:	cmp	w0, #0x26
   1063c:	b.eq	10658 <_Z19decl_assembler_nameP9tree_node@plt+0x98f8>  // b.none
   10640:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   10644:	add	x2, x0, #0xa38
   10648:	mov	w1, #0xd49                 	// #3401
   1064c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   10650:	add	x0, x0, #0x4a8
   10654:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
   10658:	ldr	x0, [sp, #40]
   1065c:	ldr	x0, [x0, #8]
   10660:	str	x0, [sp, #40]
   10664:	ldr	x0, [sp, #40]
   10668:	ldp	x29, x30, [sp], #48
   1066c:	ret
   10670:	stp	x29, x30, [sp, #-64]!
   10674:	mov	x29, sp
   10678:	str	x0, [sp, #40]
   1067c:	str	w1, [sp, #36]
   10680:	str	x2, [sp, #24]
   10684:	str	x3, [sp, #16]
   10688:	ldr	x0, [sp, #16]
   1068c:	cmp	x0, #0x0
   10690:	b.eq	106d4 <_Z19decl_assembler_nameP9tree_node@plt+0x9974>  // b.none
   10694:	ldr	x0, [sp, #16]
   10698:	bl	105e8 <_Z19decl_assembler_nameP9tree_node@plt+0x9888>
   1069c:	str	x0, [sp, #56]
   106a0:	ldr	x0, [sp, #56]
   106a4:	cmp	x0, #0x0
   106a8:	b.eq	106e8 <_Z19decl_assembler_nameP9tree_node@plt+0x9988>  // b.none
   106ac:	ldr	x0, [sp, #56]
   106b0:	ldrh	w0, [x0]
   106b4:	cmp	w0, #0x8
   106b8:	b.eq	106e8 <_Z19decl_assembler_nameP9tree_node@plt+0x9988>  // b.none
   106bc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   106c0:	add	x2, x0, #0xa58
   106c4:	mov	w1, #0xd58                 	// #3416
   106c8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   106cc:	add	x0, x0, #0x4a8
   106d0:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
   106d4:	ldr	x0, [sp, #24]
   106d8:	lsl	w0, w0, #3
   106dc:	ldr	w1, [sp, #36]
   106e0:	bl	6b60 <_Z22c_common_type_for_sizeji@plt>
   106e4:	str	x0, [sp, #56]
   106e8:	ldr	x0, [sp, #56]
   106ec:	cmp	x0, #0x0
   106f0:	b.ne	10708 <_Z19decl_assembler_nameP9tree_node@plt+0x99a8>  // b.any
   106f4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   106f8:	ldr	x0, [x0, #3976]
   106fc:	ldr	x0, [x0]
   10700:	str	x0, [sp, #56]
   10704:	b	107d4 <_Z19decl_assembler_nameP9tree_node@plt+0x9a74>
   10708:	ldr	x0, [sp, #56]
   1070c:	ldrb	w0, [x0, #5]
   10710:	and	w0, w0, #0x1
   10714:	and	w0, w0, #0xff
   10718:	cmp	w0, #0x0
   1071c:	cset	w0, eq  // eq = none
   10720:	and	w0, w0, #0xff
   10724:	mov	w1, w0
   10728:	ldr	w0, [sp, #36]
   1072c:	cmp	w0, #0x0
   10730:	cset	w0, eq  // eq = none
   10734:	and	w0, w0, #0xff
   10738:	cmp	w1, w0
   1073c:	b.eq	10758 <_Z19decl_assembler_nameP9tree_node@plt+0x99f8>  // b.none
   10740:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   10744:	add	x2, x0, #0xa58
   10748:	mov	w1, #0xd62                 	// #3426
   1074c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   10750:	add	x0, x0, #0x4a8
   10754:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
   10758:	ldr	x0, [sp, #56]
   1075c:	ldr	x0, [x0, #24]
   10760:	ldrh	w0, [x0]
   10764:	cmp	w0, #0x19
   10768:	b.eq	10784 <_Z19decl_assembler_nameP9tree_node@plt+0x9a24>  // b.none
   1076c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   10770:	add	x2, x0, #0xa58
   10774:	mov	w1, #0xd63                 	// #3427
   10778:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   1077c:	add	x0, x0, #0x4a8
   10780:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
   10784:	ldr	x0, [sp, #56]
   10788:	ldrh	w0, [x0, #52]
   1078c:	ubfx	x0, x0, #0, #10
   10790:	and	w0, w0, #0xffff
   10794:	and	x1, x0, #0xffff
   10798:	ldr	x0, [sp, #24]
   1079c:	lsl	x0, x0, #3
   107a0:	cmp	x1, x0
   107a4:	b.eq	107c0 <_Z19decl_assembler_nameP9tree_node@plt+0x9a60>  // b.none
   107a8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   107ac:	add	x2, x0, #0xa58
   107b0:	mov	w1, #0xd64                 	// #3428
   107b4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   107b8:	add	x0, x0, #0x4a8
   107bc:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
   107c0:	ldr	x0, [sp, #40]
   107c4:	str	x0, [sp, #48]
   107c8:	ldr	x1, [sp, #56]
   107cc:	ldr	x0, [sp, #48]
   107d0:	bl	12710 <plugin_init@@Base+0x16d0>
   107d4:	ldr	x0, [sp, #56]
   107d8:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   107dc:	ldp	x29, x30, [sp], #64
   107e0:	ret
   107e4:	stp	x29, x30, [sp, #-32]!
   107e8:	mov	x29, sp
   107ec:	str	x0, [sp, #24]
   107f0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   107f4:	ldr	x0, [x0, #3840]
   107f8:	ldr	x0, [x0]
   107fc:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   10800:	ldp	x29, x30, [sp], #32
   10804:	ret
   10808:	stp	x29, x30, [sp, #-64]!
   1080c:	mov	x29, sp
   10810:	str	x0, [sp, #40]
   10814:	str	x1, [sp, #32]
   10818:	str	x2, [sp, #24]
   1081c:	ldr	x0, [sp, #24]
   10820:	cmp	x0, #0x0
   10824:	b.eq	108c4 <_Z19decl_assembler_nameP9tree_node@plt+0x9b64>  // b.none
   10828:	ldr	x0, [sp, #24]
   1082c:	bl	105e8 <_Z19decl_assembler_nameP9tree_node@plt+0x9888>
   10830:	str	x0, [sp, #56]
   10834:	ldr	x0, [sp, #56]
   10838:	cmp	x0, #0x0
   1083c:	b.ne	10854 <_Z19decl_assembler_nameP9tree_node@plt+0x9af4>  // b.any
   10840:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   10844:	ldr	x0, [x0, #3976]
   10848:	ldr	x0, [x0]
   1084c:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   10850:	b	10998 <_Z19decl_assembler_nameP9tree_node@plt+0x9c38>
   10854:	ldr	x0, [sp, #56]
   10858:	ldrh	w0, [x0]
   1085c:	cmp	w0, #0x9
   10860:	b.eq	1087c <_Z19decl_assembler_nameP9tree_node@plt+0x9b1c>  // b.none
   10864:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   10868:	add	x2, x0, #0xa70
   1086c:	mov	w1, #0xd7e                 	// #3454
   10870:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   10874:	add	x0, x0, #0x4a8
   10878:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
   1087c:	ldr	x0, [sp, #32]
   10880:	lsl	x1, x0, #3
   10884:	ldr	x0, [sp, #56]
   10888:	ldrh	w0, [x0, #52]
   1088c:	ubfx	x0, x0, #0, #10
   10890:	and	w0, w0, #0xffff
   10894:	and	x0, x0, #0xffff
   10898:	cmp	x1, x0
   1089c:	b.eq	108b8 <_Z19decl_assembler_nameP9tree_node@plt+0x9b58>  // b.none
   108a0:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   108a4:	add	x2, x0, #0xa70
   108a8:	mov	w1, #0xd7f                 	// #3455
   108ac:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   108b0:	add	x0, x0, #0x4a8
   108b4:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
   108b8:	ldr	x0, [sp, #56]
   108bc:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   108c0:	b	10998 <_Z19decl_assembler_nameP9tree_node@plt+0x9c38>
   108c4:	ldr	x0, [sp, #32]
   108c8:	lsl	x1, x0, #3
   108cc:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   108d0:	ldr	x0, [x0, #3976]
   108d4:	ldr	x0, [x0, #280]
   108d8:	ldrh	w0, [x0, #52]
   108dc:	ubfx	x0, x0, #0, #10
   108e0:	and	w0, w0, #0xffff
   108e4:	and	x0, x0, #0xffff
   108e8:	cmp	x1, x0
   108ec:	b.ne	10904 <_Z19decl_assembler_nameP9tree_node@plt+0x9ba4>  // b.any
   108f0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   108f4:	ldr	x0, [x0, #3976]
   108f8:	ldr	x0, [x0, #280]
   108fc:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   10900:	b	10998 <_Z19decl_assembler_nameP9tree_node@plt+0x9c38>
   10904:	ldr	x0, [sp, #32]
   10908:	lsl	x1, x0, #3
   1090c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   10910:	ldr	x0, [x0, #3976]
   10914:	ldr	x0, [x0, #288]
   10918:	ldrh	w0, [x0, #52]
   1091c:	ubfx	x0, x0, #0, #10
   10920:	and	w0, w0, #0xffff
   10924:	and	x0, x0, #0xffff
   10928:	cmp	x1, x0
   1092c:	b.ne	10944 <_Z19decl_assembler_nameP9tree_node@plt+0x9be4>  // b.any
   10930:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   10934:	ldr	x0, [x0, #3976]
   10938:	ldr	x0, [x0, #288]
   1093c:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   10940:	b	10998 <_Z19decl_assembler_nameP9tree_node@plt+0x9c38>
   10944:	ldr	x0, [sp, #32]
   10948:	lsl	x1, x0, #3
   1094c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   10950:	ldr	x0, [x0, #3976]
   10954:	ldr	x0, [x0, #296]
   10958:	ldrh	w0, [x0, #52]
   1095c:	ubfx	x0, x0, #0, #10
   10960:	and	w0, w0, #0xffff
   10964:	and	x0, x0, #0xffff
   10968:	cmp	x1, x0
   1096c:	b.ne	10984 <_Z19decl_assembler_nameP9tree_node@plt+0x9c24>  // b.any
   10970:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   10974:	ldr	x0, [x0, #3976]
   10978:	ldr	x0, [x0, #296]
   1097c:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   10980:	b	10998 <_Z19decl_assembler_nameP9tree_node@plt+0x9c38>
   10984:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   10988:	ldr	x0, [x0, #3976]
   1098c:	ldr	x0, [x0]
   10990:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   10994:	nop
   10998:	ldp	x29, x30, [sp], #64
   1099c:	ret
   109a0:	stp	x29, x30, [sp, #-32]!
   109a4:	mov	x29, sp
   109a8:	str	x0, [sp, #24]
   109ac:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   109b0:	ldr	x0, [x0, #3976]
   109b4:	ldr	x0, [x0, #480]
   109b8:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   109bc:	ldp	x29, x30, [sp], #32
   109c0:	ret
   109c4:	stp	x29, x30, [sp, #-32]!
   109c8:	mov	x29, sp
   109cc:	str	x0, [sp, #24]
   109d0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   109d4:	ldr	x0, [x0, #3976]
   109d8:	ldr	x0, [x0, #552]
   109dc:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   109e0:	ldp	x29, x30, [sp], #32
   109e4:	ret
   109e8:	stp	x29, x30, [sp, #-32]!
   109ec:	mov	x29, sp
   109f0:	str	x0, [sp, #24]
   109f4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   109f8:	ldr	x0, [x0, #3880]
   109fc:	ldr	x0, [x0, #624]
   10a00:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   10a04:	ldp	x29, x30, [sp], #32
   10a08:	ret
   10a0c:	stp	x29, x30, [sp, #-32]!
   10a10:	mov	x29, sp
   10a14:	str	x0, [sp, #24]
   10a18:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   10a1c:	ldr	x0, [x0, #3880]
   10a20:	ldr	x0, [x0, #616]
   10a24:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   10a28:	ldp	x29, x30, [sp], #32
   10a2c:	ret
   10a30:	stp	x29, x30, [sp, #-96]!
   10a34:	mov	x29, sp
   10a38:	str	x0, [sp, #40]
   10a3c:	str	x1, [sp, #32]
   10a40:	str	w2, [sp, #28]
   10a44:	ldr	x0, [sp, #32]
   10a48:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
   10a4c:	str	x0, [sp, #80]
   10a50:	ldr	w0, [sp, #28]
   10a54:	cmn	w0, #0x1
   10a58:	b.ne	10a74 <_Z19decl_assembler_nameP9tree_node@plt+0x9d14>  // b.any
   10a5c:	mov	w2, #0x0                   	// #0
   10a60:	mov	x1, #0x0                   	// #0
   10a64:	ldr	x0, [sp, #80]
   10a68:	bl	60b0 <_Z16build_array_typeP9tree_nodeS0_b@plt>
   10a6c:	str	x0, [sp, #88]
   10a70:	b	10a90 <_Z19decl_assembler_nameP9tree_node@plt+0x9d30>
   10a74:	add	x1, sp, #0x1c
   10a78:	add	x0, sp, #0x38
   10a7c:	bl	1284c <plugin_init@@Base+0x180c>
   10a80:	ldp	x1, x2, [sp, #56]
   10a84:	ldr	x0, [sp, #80]
   10a88:	bl	6860 <_Z22build_array_type_neltsP9tree_node8poly_intILj2EmE@plt>
   10a8c:	str	x0, [sp, #88]
   10a90:	ldr	x0, [sp, #40]
   10a94:	str	x0, [sp, #72]
   10a98:	ldr	x1, [sp, #88]
   10a9c:	ldr	x0, [sp, #72]
   10aa0:	bl	12710 <plugin_init@@Base+0x16d0>
   10aa4:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   10aa8:	ldp	x29, x30, [sp], #96
   10aac:	ret
   10ab0:	stp	x29, x30, [sp, #-112]!
   10ab4:	mov	x29, sp
   10ab8:	str	x0, [sp, #40]
   10abc:	str	x1, [sp, #32]
   10ac0:	str	x2, [sp, #24]
   10ac4:	ldr	x0, [sp, #40]
   10ac8:	str	x0, [sp, #104]
   10acc:	ldr	x0, [sp, #32]
   10ad0:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
   10ad4:	str	x0, [sp, #96]
   10ad8:	ldr	x0, [sp, #24]
   10adc:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
   10ae0:	str	x0, [sp, #88]
   10ae4:	mov	x1, #0x14                  	// #20
   10ae8:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   10aec:	add	x0, x0, #0xa88
   10af0:	bl	6250 <_Z26get_identifier_with_lengthPKcm@plt>
   10af4:	str	x0, [sp, #80]
   10af8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   10afc:	ldr	x0, [x0, #3888]
   10b00:	ldr	x0, [x0]
   10b04:	ldr	w1, [x0, #112]
   10b08:	add	w1, w1, #0x1
   10b0c:	str	w1, [x0, #112]
   10b10:	ldr	x0, [sp, #96]
   10b14:	bl	6ae0 <_Z16dependent_type_pP9tree_node@plt>
   10b18:	and	w0, w0, #0xff
   10b1c:	cmp	w0, #0x0
   10b20:	b.ne	10b4c <_Z19decl_assembler_nameP9tree_node@plt+0x9dec>  // b.any
   10b24:	ldr	x0, [sp, #88]
   10b28:	bl	6d30 <_Z27type_dependent_expression_pP9tree_node@plt>
   10b2c:	and	w0, w0, #0xff
   10b30:	cmp	w0, #0x0
   10b34:	b.ne	10b4c <_Z19decl_assembler_nameP9tree_node@plt+0x9dec>  // b.any
   10b38:	ldr	x0, [sp, #88]
   10b3c:	bl	6ac0 <_Z28value_dependent_expression_pP9tree_node@plt>
   10b40:	and	w0, w0, #0xff
   10b44:	cmp	w0, #0x0
   10b48:	b.eq	10b54 <_Z19decl_assembler_nameP9tree_node@plt+0x9df4>  // b.none
   10b4c:	mov	w0, #0x1                   	// #1
   10b50:	b	10b58 <_Z19decl_assembler_nameP9tree_node@plt+0x9df8>
   10b54:	mov	w0, #0x0                   	// #0
   10b58:	strb	w0, [sp, #79]
   10b5c:	ldrb	w0, [sp, #79]
   10b60:	eor	w0, w0, #0x1
   10b64:	and	w0, w0, #0xff
   10b68:	cmp	w0, #0x0
   10b6c:	b.eq	10b88 <_Z19decl_assembler_nameP9tree_node@plt+0x9e28>  // b.none
   10b70:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   10b74:	ldr	x0, [x0, #3888]
   10b78:	ldr	x0, [x0]
   10b7c:	ldr	w1, [x0, #112]
   10b80:	sub	w1, w1, #0x1
   10b84:	str	w1, [x0, #112]
   10b88:	mov	w2, #0x1                   	// #1
   10b8c:	ldr	x1, [sp, #88]
   10b90:	ldr	x0, [sp, #80]
   10b94:	bl	6620 <_Z24compute_array_index_typeP9tree_nodeS0_i@plt>
   10b98:	str	x0, [sp, #64]
   10b9c:	ldr	x1, [sp, #64]
   10ba0:	ldr	x0, [sp, #96]
   10ba4:	bl	6c70 <_Z22build_cplus_array_typeP9tree_nodeS0_@plt>
   10ba8:	str	x0, [sp, #56]
   10bac:	ldrb	w0, [sp, #79]
   10bb0:	cmp	w0, #0x0
   10bb4:	b.eq	10bd0 <_Z19decl_assembler_nameP9tree_node@plt+0x9e70>  // b.none
   10bb8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   10bbc:	ldr	x0, [x0, #3888]
   10bc0:	ldr	x0, [x0]
   10bc4:	ldr	w1, [x0, #112]
   10bc8:	sub	w1, w1, #0x1
   10bcc:	str	w1, [x0, #112]
   10bd0:	ldr	x1, [sp, #56]
   10bd4:	ldr	x0, [sp, #104]
   10bd8:	bl	12710 <plugin_init@@Base+0x16d0>
   10bdc:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   10be0:	ldp	x29, x30, [sp], #112
   10be4:	ret
   10be8:	stp	x29, x30, [sp, #-112]!
   10bec:	mov	x29, sp
   10bf0:	str	x19, [sp, #16]
   10bf4:	str	x0, [sp, #56]
   10bf8:	str	x1, [sp, #48]
   10bfc:	str	x2, [sp, #40]
   10c00:	ldr	x0, [sp, #48]
   10c04:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
   10c08:	str	x0, [sp, #104]
   10c0c:	ldr	x0, [sp, #40]
   10c10:	bl	6960 <_Z14get_identifierPKc@plt>
   10c14:	bl	6590 <_Z11lookup_nameP9tree_node@plt>
   10c18:	str	x0, [sp, #96]
   10c1c:	ldr	x0, [sp, #96]
   10c20:	ldr	x19, [x0, #8]
   10c24:	ldr	x0, [sp, #96]
   10c28:	ldr	x0, [x0, #8]
   10c2c:	bl	69b0 <_Z13build_one_cstP9tree_node@plt>
   10c30:	mov	x4, x0
   10c34:	ldr	x3, [sp, #96]
   10c38:	mov	x2, x19
   10c3c:	mov	w1, #0x46                  	// #70
   10c40:	mov	w0, #0x0                   	// #0
   10c44:	bl	6210 <_Z15fold_build2_locj9tree_codeP9tree_nodeS1_S1_@plt>
   10c48:	str	x0, [sp, #88]
   10c4c:	mov	w2, #0x1                   	// #1
   10c50:	ldr	x1, [sp, #88]
   10c54:	mov	x0, #0x0                   	// #0
   10c58:	bl	6620 <_Z24compute_array_index_typeP9tree_nodeS0_i@plt>
   10c5c:	str	x0, [sp, #80]
   10c60:	ldr	x1, [sp, #80]
   10c64:	ldr	x0, [sp, #104]
   10c68:	bl	6c70 <_Z22build_cplus_array_typeP9tree_nodeS0_@plt>
   10c6c:	str	x0, [sp, #72]
   10c70:	ldr	x0, [sp, #56]
   10c74:	str	x0, [sp, #64]
   10c78:	ldr	x1, [sp, #72]
   10c7c:	ldr	x0, [sp, #64]
   10c80:	bl	12710 <plugin_init@@Base+0x16d0>
   10c84:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   10c88:	ldr	x19, [sp, #16]
   10c8c:	ldp	x29, x30, [sp], #112
   10c90:	ret
   10c94:	stp	x29, x30, [sp, #-64]!
   10c98:	mov	x29, sp
   10c9c:	str	x0, [sp, #40]
   10ca0:	str	x1, [sp, #32]
   10ca4:	str	w2, [sp, #28]
   10ca8:	ldr	x0, [sp, #32]
   10cac:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
   10cb0:	str	x0, [sp, #48]
   10cb4:	str	wzr, [sp, #60]
   10cb8:	ldr	w0, [sp, #28]
   10cbc:	and	w0, w0, #0x1
   10cc0:	cmp	w0, #0x0
   10cc4:	b.eq	10cd4 <_Z19decl_assembler_nameP9tree_node@plt+0x9f74>  // b.none
   10cc8:	ldr	w0, [sp, #60]
   10ccc:	orr	w0, w0, #0x1
   10cd0:	str	w0, [sp, #60]
   10cd4:	ldr	w0, [sp, #28]
   10cd8:	and	w0, w0, #0x2
   10cdc:	cmp	w0, #0x0
   10ce0:	b.eq	10cf0 <_Z19decl_assembler_nameP9tree_node@plt+0x9f90>  // b.none
   10ce4:	ldr	w0, [sp, #60]
   10ce8:	orr	w0, w0, #0x2
   10cec:	str	w0, [sp, #60]
   10cf0:	ldr	w0, [sp, #28]
   10cf4:	and	w0, w0, #0x4
   10cf8:	cmp	w0, #0x0
   10cfc:	b.eq	10d0c <_Z19decl_assembler_nameP9tree_node@plt+0x9fac>  // b.none
   10d00:	ldr	w0, [sp, #60]
   10d04:	orr	w0, w0, #0x4
   10d08:	str	w0, [sp, #60]
   10d0c:	ldr	x0, [sp, #48]
   10d10:	ldrh	w0, [x0]
   10d14:	cmp	w0, #0x16
   10d18:	b.eq	10d2c <_Z19decl_assembler_nameP9tree_node@plt+0x9fcc>  // b.none
   10d1c:	ldr	x0, [sp, #48]
   10d20:	ldrh	w0, [x0]
   10d24:	cmp	w0, #0xb
   10d28:	b.ne	10d50 <_Z19decl_assembler_nameP9tree_node@plt+0x9ff0>  // b.any
   10d2c:	ldr	w0, [sp, #60]
   10d30:	cmp	w0, #0x0
   10d34:	b.eq	10d50 <_Z19decl_assembler_nameP9tree_node@plt+0x9ff0>  // b.none
   10d38:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   10d3c:	add	x2, x0, #0xaa0
   10d40:	mov	w1, #0xdf0                 	// #3568
   10d44:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   10d48:	add	x0, x0, #0x4a8
   10d4c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
   10d50:	ldr	w1, [sp, #60]
   10d54:	ldr	x0, [sp, #48]
   10d58:	bl	65d0 <_Z20build_qualified_typeP9tree_nodei@plt>
   10d5c:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   10d60:	ldp	x29, x30, [sp], #64
   10d64:	ret
   10d68:	stp	x29, x30, [sp, #-48]!
   10d6c:	mov	x29, sp
   10d70:	str	x0, [sp, #24]
   10d74:	str	x1, [sp, #16]
   10d78:	ldr	x0, [sp, #24]
   10d7c:	str	x0, [sp, #40]
   10d80:	ldr	x0, [sp, #16]
   10d84:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
   10d88:	mov	w1, #0x0                   	// #0
   10d8c:	bl	69f0 <_Z18build_complex_typeP9tree_nodeb@plt>
   10d90:	mov	x1, x0
   10d94:	ldr	x0, [sp, #40]
   10d98:	bl	12710 <plugin_init@@Base+0x16d0>
   10d9c:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   10da0:	ldp	x29, x30, [sp], #48
   10da4:	ret
   10da8:	stp	x29, x30, [sp, #-96]!
   10dac:	mov	x29, sp
   10db0:	str	x19, [sp, #16]
   10db4:	str	x0, [sp, #56]
   10db8:	str	x1, [sp, #48]
   10dbc:	str	w2, [sp, #44]
   10dc0:	ldr	x0, [sp, #56]
   10dc4:	str	x0, [sp, #88]
   10dc8:	ldr	x0, [sp, #48]
   10dcc:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
   10dd0:	mov	x19, x0
   10dd4:	add	x1, sp, #0x2c
   10dd8:	add	x0, sp, #0x48
   10ddc:	bl	13570 <plugin_init@@Base+0x2530>
   10de0:	ldp	x1, x2, [sp, #72]
   10de4:	mov	x0, x19
   10de8:	bl	6300 <_Z17build_vector_typeP9tree_node8poly_intILj2ElE@plt>
   10dec:	mov	x1, x0
   10df0:	ldr	x0, [sp, #88]
   10df4:	bl	12710 <plugin_init@@Base+0x16d0>
   10df8:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   10dfc:	ldr	x19, [sp, #16]
   10e00:	ldp	x29, x30, [sp], #96
   10e04:	ret
   10e08:	stp	x29, x30, [sp, #-128]!
   10e0c:	mov	x29, sp
   10e10:	str	x19, [sp, #16]
   10e14:	str	x0, [sp, #72]
   10e18:	str	x1, [sp, #64]
   10e1c:	str	x2, [sp, #56]
   10e20:	str	x3, [sp, #48]
   10e24:	str	x4, [sp, #40]
   10e28:	str	w5, [sp, #36]
   10e2c:	ldr	x0, [sp, #72]
   10e30:	str	x0, [sp, #112]
   10e34:	ldr	x0, [sp, #64]
   10e38:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
   10e3c:	str	x0, [sp, #120]
   10e40:	add	x1, sp, #0x30
   10e44:	add	x0, sp, #0x50
   10e48:	bl	134a8 <plugin_init@@Base+0x2468>
   10e4c:	ldp	x1, x2, [sp, #80]
   10e50:	ldr	x0, [sp, #120]
   10e54:	bl	6b80 <_Z13build_int_cstP9tree_node8poly_intILj2ElE@plt>
   10e58:	str	x0, [sp, #104]
   10e5c:	ldr	x0, [sp, #120]
   10e60:	ldrb	w0, [x0, #2]
   10e64:	and	w0, w0, #0x10
   10e68:	and	w0, w0, #0xff
   10e6c:	cmp	w0, #0x0
   10e70:	b.ne	10e84 <_Z19decl_assembler_nameP9tree_node@plt+0xa124>  // b.any
   10e74:	mov	w1, #0x1                   	// #1
   10e78:	ldr	x0, [sp, #120]
   10e7c:	bl	65d0 <_Z20build_qualified_typeP9tree_nodei@plt>
   10e80:	str	x0, [sp, #120]
   10e84:	ldr	w2, [sp, #36]
   10e88:	ldr	x1, [sp, #40]
   10e8c:	ldr	x0, [sp, #112]
   10e90:	bl	12750 <plugin_init@@Base+0x1710>
   10e94:	mov	w19, w0
   10e98:	ldr	x0, [sp, #56]
   10e9c:	bl	6960 <_Z14get_identifierPKc@plt>
   10ea0:	ldr	x3, [sp, #120]
   10ea4:	mov	x2, x0
   10ea8:	mov	w1, #0x23                  	// #35
   10eac:	mov	w0, w19
   10eb0:	bl	65c0 <_Z10build_declj9tree_codeP9tree_nodeS1_@plt>
   10eb4:	str	x0, [sp, #96]
   10eb8:	ldr	x0, [sp, #96]
   10ebc:	ldrb	w1, [x0, #3]
   10ec0:	orr	w1, w1, #0x4
   10ec4:	strb	w1, [x0, #3]
   10ec8:	ldr	x0, [sp, #96]
   10ecc:	ldrb	w1, [x0, #2]
   10ed0:	orr	w1, w1, #0x10
   10ed4:	strb	w1, [x0, #2]
   10ed8:	mov	w4, #0x4                   	// #4
   10edc:	mov	x3, #0x0                   	// #0
   10ee0:	mov	w2, #0x1                   	// #1
   10ee4:	ldr	x1, [sp, #104]
   10ee8:	ldr	x0, [sp, #96]
   10eec:	bl	6020 <_Z14cp_finish_declP9tree_nodeS0_bS0_i@plt>
   10ef0:	mov	w1, #0x0                   	// #0
   10ef4:	ldr	x0, [sp, #96]
   10ef8:	bl	975c <_Z19decl_assembler_nameP9tree_node@plt+0x29fc>
   10efc:	mov	w0, #0x1                   	// #1
   10f00:	ldr	x19, [sp, #16]
   10f04:	ldp	x29, x30, [sp], #128
   10f08:	ret
   10f0c:	stp	x29, x30, [sp, #-32]!
   10f10:	mov	x29, sp
   10f14:	str	x0, [sp, #24]
   10f18:	str	x1, [sp, #16]
   10f1c:	ldr	x1, [sp, #16]
   10f20:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   10f24:	add	x0, x0, #0xac0
   10f28:	bl	6100 <_Z5errorPKcz@plt>
   10f2c:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   10f30:	ldr	x0, [x0, #3976]
   10f34:	ldr	x0, [x0]
   10f38:	bl	7750 <_Z19decl_assembler_nameP9tree_node@plt+0x9f0>
   10f3c:	ldp	x29, x30, [sp], #32
   10f40:	ret
   10f44:	stp	x29, x30, [sp, #-96]!
   10f48:	mov	x29, sp
   10f4c:	str	x0, [sp, #56]
   10f50:	str	x1, [sp, #48]
   10f54:	str	x2, [sp, #40]
   10f58:	str	x3, [sp, #32]
   10f5c:	str	w4, [sp, #28]
   10f60:	ldr	x0, [sp, #56]
   10f64:	str	x0, [sp, #88]
   10f68:	ldr	x0, [sp, #48]
   10f6c:	bl	7764 <_Z19decl_assembler_nameP9tree_node@plt+0xa04>
   10f70:	str	x0, [sp, #80]
   10f74:	ldr	x0, [sp, #40]
   10f78:	cmp	x0, #0x0
   10f7c:	b.ne	10f8c <_Z19decl_assembler_nameP9tree_node@plt+0xa22c>  // b.any
   10f80:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   10f84:	add	x0, x0, #0xac8
   10f88:	str	x0, [sp, #40]
   10f8c:	ldr	x0, [sp, #40]
   10f90:	bl	61a0 <strlen@plt>
   10f94:	add	w0, w0, #0x1
   10f98:	ldr	x1, [sp, #40]
   10f9c:	bl	6460 <_Z12build_stringiPKc@plt>
   10fa0:	str	x0, [sp, #72]
   10fa4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   10fa8:	ldr	x0, [x0, #3896]
   10fac:	ldr	x1, [x0, #312]
   10fb0:	ldr	x0, [sp, #72]
   10fb4:	str	x1, [x0, #8]
   10fb8:	ldr	x0, [sp, #72]
   10fbc:	bl	6700 <_Z15fix_string_typeP9tree_node@plt>
   10fc0:	ldr	w2, [sp, #28]
   10fc4:	ldr	x1, [sp, #32]
   10fc8:	ldr	x0, [sp, #88]
   10fcc:	bl	12750 <plugin_init@@Base+0x1710>
   10fd0:	str	w0, [sp, #68]
   10fd4:	bl	6690 <_Z16at_class_scope_pv@plt>
   10fd8:	and	w0, w0, #0xff
   10fdc:	strb	w0, [sp, #67]
   10fe0:	ldrb	w3, [sp, #67]
   10fe4:	ldr	w2, [sp, #68]
   10fe8:	ldr	x1, [sp, #72]
   10fec:	ldr	x0, [sp, #80]
   10ff0:	bl	6a20 <_Z20finish_static_assertP9tree_nodeS0_jb@plt>
   10ff4:	mov	w0, #0x1                   	// #1
   10ff8:	ldp	x29, x30, [sp], #96
   10ffc:	ret
   11000:	stp	x29, x30, [sp, #-32]!
   11004:	mov	x29, sp
   11008:	str	x0, [sp, #24]
   1100c:	str	x1, [sp, #16]
   11010:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11014:	add	x0, x0, #0x730
   11018:	ldr	x0, [x0]
   1101c:	cmp	x0, #0x0
   11020:	b.eq	11034 <_Z19decl_assembler_nameP9tree_node@plt+0xa2d4>  // b.none
   11024:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11028:	add	x0, x0, #0x730
   1102c:	ldr	x0, [x0]
   11030:	bl	7848 <_Z19decl_assembler_nameP9tree_node@plt+0xae8>
   11034:	nop
   11038:	ldp	x29, x30, [sp], #32
   1103c:	ret

0000000000011040 <plugin_init@@Base>:
   11040:	sub	sp, sp, #0x270
   11044:	stp	x29, x30, [sp]
   11048:	mov	x29, sp
   1104c:	stp	x19, x20, [sp, #16]
   11050:	str	x0, [sp, #40]
   11054:	str	x1, [sp, #32]
   11058:	mov	x0, #0xffffffffffffffff    	// #-1
   1105c:	str	x0, [sp, #616]
   11060:	str	wzr, [sp, #612]
   11064:	ldr	x0, [sp, #40]
   11068:	ldr	w0, [x0, #16]
   1106c:	ldr	w1, [sp, #612]
   11070:	cmp	w1, w0
   11074:	b.ge	11134 <plugin_init@@Base+0xf4>  // b.tcont
   11078:	ldr	x0, [sp, #40]
   1107c:	ldr	x1, [x0, #24]
   11080:	ldrsw	x0, [sp, #612]
   11084:	lsl	x0, x0, #4
   11088:	add	x0, x1, x0
   1108c:	ldr	x2, [x0]
   11090:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11094:	add	x1, x0, #0xad0
   11098:	mov	x0, x2
   1109c:	bl	69e0 <strcmp@plt>
   110a0:	cmp	w0, #0x0
   110a4:	b.ne	11120 <plugin_init@@Base+0xe0>  // b.any
   110a8:	bl	68a0 <__errno_location@plt>
   110ac:	str	wzr, [x0]
   110b0:	ldr	x0, [sp, #40]
   110b4:	ldr	x1, [x0, #24]
   110b8:	ldrsw	x0, [sp, #612]
   110bc:	lsl	x0, x0, #4
   110c0:	add	x0, x1, x0
   110c4:	ldr	x0, [x0, #8]
   110c8:	add	x1, sp, #0x38
   110cc:	mov	w2, #0x0                   	// #0
   110d0:	bl	62f0 <strtol@plt>
   110d4:	str	x0, [sp, #616]
   110d8:	ldr	x0, [sp, #56]
   110dc:	ldrb	w0, [x0]
   110e0:	cmp	w0, #0x0
   110e4:	b.ne	110f8 <plugin_init@@Base+0xb8>  // b.any
   110e8:	bl	68a0 <__errno_location@plt>
   110ec:	ldr	w0, [x0]
   110f0:	cmp	w0, #0x0
   110f4:	b.eq	11130 <plugin_init@@Base+0xf0>  // b.none
   110f8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   110fc:	ldr	x0, [x0, #3928]
   11100:	ldr	w3, [x0]
   11104:	ldr	x0, [sp, #40]
   11108:	ldr	x0, [x0]
   1110c:	mov	x2, x0
   11110:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11114:	add	x1, x0, #0xad8
   11118:	mov	w0, w3
   1111c:	bl	61f0 <_Z11fatal_errorjPKcz@plt>
   11120:	ldr	w0, [sp, #612]
   11124:	add	w0, w0, #0x1
   11128:	str	w0, [sp, #612]
   1112c:	b	11064 <plugin_init@@Base+0x24>
   11130:	nop
   11134:	ldr	x0, [sp, #616]
   11138:	cmn	x0, #0x1
   1113c:	b.ne	11168 <plugin_init@@Base+0x128>  // b.any
   11140:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   11144:	ldr	x0, [x0, #3928]
   11148:	ldr	w3, [x0]
   1114c:	ldr	x0, [sp, #40]
   11150:	ldr	x0, [x0]
   11154:	mov	x2, x0
   11158:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   1115c:	add	x1, x0, #0xb08
   11160:	mov	w0, w3
   11164:	bl	61f0 <_Z11fatal_errorjPKcz@plt>
   11168:	mov	x0, #0xa8                  	// #168
   1116c:	bl	6650 <_Znwm@plt>
   11170:	mov	x19, x0
   11174:	ldr	x0, [sp, #616]
   11178:	mov	w1, w0
   1117c:	mov	x0, x19
   11180:	bl	7778 <_Z19decl_assembler_nameP9tree_node@plt+0xa18>
   11184:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11188:	add	x0, x0, #0x730
   1118c:	str	x19, [x0]
   11190:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11194:	add	x0, x0, #0x730
   11198:	ldr	x0, [x0]
   1119c:	mov	w1, #0x48                  	// #72
   111a0:	bl	1bacc <plugin_init@@Base+0xaa8c>
   111a4:	cmp	w0, #0x0
   111a8:	b.eq	111c8 <plugin_init@@Base+0x188>  // b.none
   111ac:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   111b0:	add	x0, x0, #0x730
   111b4:	ldr	x0, [x0]
   111b8:	add	x1, sp, #0x40
   111bc:	bl	135dc <plugin_init@@Base+0x259c>
   111c0:	cmp	w0, #0x0
   111c4:	b.ne	111d0 <plugin_init@@Base+0x190>  // b.any
   111c8:	mov	w0, #0x1                   	// #1
   111cc:	b	111d4 <plugin_init@@Base+0x194>
   111d0:	mov	w0, #0x0                   	// #0
   111d4:	cmp	w0, #0x0
   111d8:	b.eq	11204 <plugin_init@@Base+0x1c4>  // b.none
   111dc:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   111e0:	ldr	x0, [x0, #3928]
   111e4:	ldr	w3, [x0]
   111e8:	ldr	x0, [sp, #40]
   111ec:	ldr	x0, [x0]
   111f0:	mov	x2, x0
   111f4:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   111f8:	add	x1, x0, #0xb38
   111fc:	mov	w0, w3
   11200:	bl	61f0 <_Z11fatal_errorjPKcz@plt>
   11204:	ldr	x0, [sp, #64]
   11208:	cmp	x0, #0x0
   1120c:	b.eq	11238 <plugin_init@@Base+0x1f8>  // b.none
   11210:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   11214:	ldr	x0, [x0, #3928]
   11218:	ldr	w3, [x0]
   1121c:	ldr	x0, [sp, #40]
   11220:	ldr	x0, [x0]
   11224:	mov	x2, x0
   11228:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   1122c:	add	x1, x0, #0xb50
   11230:	mov	w0, w3
   11234:	bl	61f0 <_Z11fatal_errorjPKcz@plt>
   11238:	ldr	x0, [sp, #40]
   1123c:	ldr	x4, [x0]
   11240:	mov	x3, #0x0                   	// #0
   11244:	adrp	x0, 9000 <_Z19decl_assembler_nameP9tree_node@plt+0x22a0>
   11248:	add	x2, x0, #0x2d8
   1124c:	mov	w1, #0xf                   	// #15
   11250:	mov	x0, x4
   11254:	bl	62c0 <register_callback@plt>
   11258:	ldr	x0, [sp, #40]
   1125c:	ldr	x4, [x0]
   11260:	mov	x3, #0x0                   	// #0
   11264:	adrp	x0, 9000 <_Z19decl_assembler_nameP9tree_node@plt+0x22a0>
   11268:	add	x2, x0, #0x640
   1126c:	mov	w1, #0x6                   	// #6
   11270:	mov	x0, x4
   11274:	bl	62c0 <register_callback@plt>
   11278:	ldr	x0, [sp, #40]
   1127c:	ldr	x4, [x0]
   11280:	mov	x3, #0x0                   	// #0
   11284:	adrp	x0, 11000 <_Z19decl_assembler_nameP9tree_node@plt+0xa2a0>
   11288:	add	x2, x0, #0x0
   1128c:	mov	w1, #0xa                   	// #10
   11290:	mov	x0, x4
   11294:	bl	62c0 <register_callback@plt>
   11298:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1129c:	ldr	x0, [x0, #3944]
   112a0:	adrp	x1, 7000 <_Z19decl_assembler_nameP9tree_node@plt+0x2a0>
   112a4:	add	x1, x1, #0x6c4
   112a8:	str	x1, [x0, #232]
   112ac:	adrp	x0, 13000 <plugin_init@@Base+0x1fc0>
   112b0:	add	x0, x0, #0x630
   112b4:	str	x0, [sp, #600]
   112b8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   112bc:	add	x0, x0, #0x730
   112c0:	ldr	x0, [x0]
   112c4:	mov	x3, x0
   112c8:	ldr	x2, [sp, #600]
   112cc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   112d0:	add	x1, x0, #0xb78
   112d4:	mov	x0, x3
   112d8:	bl	1226c <plugin_init@@Base+0x122c>
   112dc:	adrp	x0, 13000 <plugin_init@@Base+0x1fc0>
   112e0:	add	x0, x0, #0x71c
   112e4:	str	x0, [sp, #592]
   112e8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   112ec:	add	x0, x0, #0x730
   112f0:	ldr	x0, [x0]
   112f4:	mov	x3, x0
   112f8:	ldr	x2, [sp, #592]
   112fc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11300:	add	x1, x0, #0xb88
   11304:	mov	x0, x3
   11308:	bl	1226c <plugin_init@@Base+0x122c>
   1130c:	adrp	x0, 13000 <plugin_init@@Base+0x1fc0>
   11310:	add	x0, x0, #0x808
   11314:	str	x0, [sp, #584]
   11318:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1131c:	add	x0, x0, #0x730
   11320:	ldr	x0, [x0]
   11324:	mov	x3, x0
   11328:	ldr	x2, [sp, #584]
   1132c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11330:	add	x1, x0, #0xb98
   11334:	mov	x0, x3
   11338:	bl	1226c <plugin_init@@Base+0x122c>
   1133c:	adrp	x0, 13000 <plugin_init@@Base+0x1fc0>
   11340:	add	x0, x0, #0x8f4
   11344:	str	x0, [sp, #576]
   11348:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1134c:	add	x0, x0, #0x730
   11350:	ldr	x0, [x0]
   11354:	mov	x3, x0
   11358:	ldr	x2, [sp, #576]
   1135c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11360:	add	x1, x0, #0x500
   11364:	mov	x0, x3
   11368:	bl	1226c <plugin_init@@Base+0x122c>
   1136c:	adrp	x0, 13000 <plugin_init@@Base+0x1fc0>
   11370:	add	x0, x0, #0xa30
   11374:	str	x0, [sp, #568]
   11378:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1137c:	add	x0, x0, #0x730
   11380:	ldr	x0, [x0]
   11384:	mov	x3, x0
   11388:	ldr	x2, [sp, #568]
   1138c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11390:	add	x1, x0, #0xba8
   11394:	mov	x0, x3
   11398:	bl	1226c <plugin_init@@Base+0x122c>
   1139c:	adrp	x0, 13000 <plugin_init@@Base+0x1fc0>
   113a0:	add	x0, x0, #0xab0
   113a4:	str	x0, [sp, #560]
   113a8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   113ac:	add	x0, x0, #0x730
   113b0:	ldr	x0, [x0]
   113b4:	mov	x3, x0
   113b8:	ldr	x2, [sp, #560]
   113bc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   113c0:	add	x1, x0, #0xbc0
   113c4:	mov	x0, x3
   113c8:	bl	1226c <plugin_init@@Base+0x122c>
   113cc:	adrp	x0, 13000 <plugin_init@@Base+0x1fc0>
   113d0:	add	x0, x0, #0xb30
   113d4:	str	x0, [sp, #552]
   113d8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   113dc:	add	x0, x0, #0x730
   113e0:	ldr	x0, [x0]
   113e4:	mov	x3, x0
   113e8:	ldr	x2, [sp, #552]
   113ec:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   113f0:	add	x1, x0, #0xbe0
   113f4:	mov	x0, x3
   113f8:	bl	1226c <plugin_init@@Base+0x122c>
   113fc:	adrp	x0, 13000 <plugin_init@@Base+0x1fc0>
   11400:	add	x0, x0, #0xbb0
   11404:	str	x0, [sp, #544]
   11408:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1140c:	add	x0, x0, #0x730
   11410:	ldr	x0, [x0]
   11414:	mov	x3, x0
   11418:	ldr	x2, [sp, #544]
   1141c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11420:	add	x1, x0, #0xbf8
   11424:	mov	x0, x3
   11428:	bl	1226c <plugin_init@@Base+0x122c>
   1142c:	adrp	x0, 13000 <plugin_init@@Base+0x1fc0>
   11430:	add	x0, x0, #0xc9c
   11434:	str	x0, [sp, #536]
   11438:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1143c:	add	x0, x0, #0x730
   11440:	ldr	x0, [x0]
   11444:	mov	x3, x0
   11448:	ldr	x2, [sp, #536]
   1144c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11450:	add	x1, x0, #0xc10
   11454:	mov	x0, x3
   11458:	bl	1226c <plugin_init@@Base+0x122c>
   1145c:	adrp	x0, 13000 <plugin_init@@Base+0x1fc0>
   11460:	add	x0, x0, #0xdd8
   11464:	str	x0, [sp, #528]
   11468:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1146c:	add	x0, x0, #0x730
   11470:	ldr	x0, [x0]
   11474:	mov	x3, x0
   11478:	ldr	x2, [sp, #528]
   1147c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11480:	add	x1, x0, #0xc28
   11484:	mov	x0, x3
   11488:	bl	1226c <plugin_init@@Base+0x122c>
   1148c:	adrp	x0, 13000 <plugin_init@@Base+0x1fc0>
   11490:	add	x0, x0, #0xf14
   11494:	str	x0, [sp, #520]
   11498:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1149c:	add	x0, x0, #0x730
   114a0:	ldr	x0, [x0]
   114a4:	mov	x3, x0
   114a8:	ldr	x2, [sp, #520]
   114ac:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   114b0:	add	x1, x0, #0xc38
   114b4:	mov	x0, x3
   114b8:	bl	1226c <plugin_init@@Base+0x122c>
   114bc:	adrp	x0, 14000 <plugin_init@@Base+0x2fc0>
   114c0:	add	x0, x0, #0x1f0
   114c4:	str	x0, [sp, #512]
   114c8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   114cc:	add	x0, x0, #0x730
   114d0:	ldr	x0, [x0]
   114d4:	mov	x3, x0
   114d8:	ldr	x2, [sp, #512]
   114dc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   114e0:	add	x1, x0, #0xc48
   114e4:	mov	x0, x3
   114e8:	bl	1226c <plugin_init@@Base+0x122c>
   114ec:	adrp	x0, 14000 <plugin_init@@Base+0x2fc0>
   114f0:	add	x0, x0, #0x37c
   114f4:	str	x0, [sp, #504]
   114f8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   114fc:	add	x0, x0, #0x730
   11500:	ldr	x0, [x0]
   11504:	mov	x3, x0
   11508:	ldr	x2, [sp, #504]
   1150c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11510:	add	x1, x0, #0xc60
   11514:	mov	x0, x3
   11518:	bl	1226c <plugin_init@@Base+0x122c>
   1151c:	adrp	x0, 14000 <plugin_init@@Base+0x2fc0>
   11520:	add	x0, x0, #0x468
   11524:	str	x0, [sp, #496]
   11528:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1152c:	add	x0, x0, #0x730
   11530:	ldr	x0, [x0]
   11534:	mov	x3, x0
   11538:	ldr	x2, [sp, #496]
   1153c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11540:	add	x1, x0, #0xc70
   11544:	mov	x0, x3
   11548:	bl	1226c <plugin_init@@Base+0x122c>
   1154c:	adrp	x0, 14000 <plugin_init@@Base+0x2fc0>
   11550:	add	x0, x0, #0x554
   11554:	str	x0, [sp, #488]
   11558:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1155c:	add	x0, x0, #0x730
   11560:	ldr	x0, [x0]
   11564:	mov	x3, x0
   11568:	ldr	x2, [sp, #488]
   1156c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11570:	add	x1, x0, #0xc80
   11574:	mov	x0, x3
   11578:	bl	1226c <plugin_init@@Base+0x122c>
   1157c:	adrp	x0, 14000 <plugin_init@@Base+0x2fc0>
   11580:	add	x0, x0, #0x690
   11584:	str	x0, [sp, #480]
   11588:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1158c:	add	x0, x0, #0x730
   11590:	ldr	x0, [x0]
   11594:	mov	x3, x0
   11598:	ldr	x2, [sp, #480]
   1159c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   115a0:	add	x1, x0, #0xc90
   115a4:	mov	x0, x3
   115a8:	bl	1226c <plugin_init@@Base+0x122c>
   115ac:	adrp	x0, 14000 <plugin_init@@Base+0x2fc0>
   115b0:	add	x0, x0, #0x77c
   115b4:	str	x0, [sp, #472]
   115b8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   115bc:	add	x0, x0, #0x730
   115c0:	ldr	x0, [x0]
   115c4:	mov	x3, x0
   115c8:	ldr	x2, [sp, #472]
   115cc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   115d0:	add	x1, x0, #0xca8
   115d4:	mov	x0, x3
   115d8:	bl	1226c <plugin_init@@Base+0x122c>
   115dc:	adrp	x0, 14000 <plugin_init@@Base+0x2fc0>
   115e0:	add	x0, x0, #0x8b8
   115e4:	str	x0, [sp, #464]
   115e8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   115ec:	add	x0, x0, #0x730
   115f0:	ldr	x0, [x0]
   115f4:	mov	x3, x0
   115f8:	ldr	x2, [sp, #464]
   115fc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11600:	add	x1, x0, #0xcc0
   11604:	mov	x0, x3
   11608:	bl	1226c <plugin_init@@Base+0x122c>
   1160c:	adrp	x0, 14000 <plugin_init@@Base+0x2fc0>
   11610:	add	x0, x0, #0x9f4
   11614:	str	x0, [sp, #456]
   11618:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1161c:	add	x0, x0, #0x730
   11620:	ldr	x0, [x0]
   11624:	mov	x3, x0
   11628:	ldr	x2, [sp, #456]
   1162c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11630:	add	x1, x0, #0xce0
   11634:	mov	x0, x3
   11638:	bl	1226c <plugin_init@@Base+0x122c>
   1163c:	adrp	x0, 14000 <plugin_init@@Base+0x2fc0>
   11640:	add	x0, x0, #0xa74
   11644:	str	x0, [sp, #448]
   11648:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1164c:	add	x0, x0, #0x730
   11650:	ldr	x0, [x0]
   11654:	mov	x3, x0
   11658:	ldr	x2, [sp, #448]
   1165c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11660:	add	x1, x0, #0xcf8
   11664:	mov	x0, x3
   11668:	bl	1226c <plugin_init@@Base+0x122c>
   1166c:	adrp	x0, 14000 <plugin_init@@Base+0x2fc0>
   11670:	add	x0, x0, #0xca8
   11674:	str	x0, [sp, #440]
   11678:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1167c:	add	x0, x0, #0x730
   11680:	ldr	x0, [x0]
   11684:	mov	x3, x0
   11688:	ldr	x2, [sp, #440]
   1168c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11690:	add	x1, x0, #0xd18
   11694:	mov	x0, x3
   11698:	bl	1226c <plugin_init@@Base+0x122c>
   1169c:	adrp	x0, 14000 <plugin_init@@Base+0x2fc0>
   116a0:	add	x0, x0, #0xedc
   116a4:	str	x0, [sp, #432]
   116a8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   116ac:	add	x0, x0, #0x730
   116b0:	ldr	x0, [x0]
   116b4:	mov	x3, x0
   116b8:	ldr	x2, [sp, #432]
   116bc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   116c0:	add	x1, x0, #0xd40
   116c4:	mov	x0, x3
   116c8:	bl	1226c <plugin_init@@Base+0x122c>
   116cc:	adrp	x0, 15000 <plugin_init@@Base+0x3fc0>
   116d0:	add	x0, x0, #0x110
   116d4:	str	x0, [sp, #424]
   116d8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   116dc:	add	x0, x0, #0x730
   116e0:	ldr	x0, [x0]
   116e4:	mov	x3, x0
   116e8:	ldr	x2, [sp, #424]
   116ec:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   116f0:	add	x1, x0, #0xd60
   116f4:	mov	x0, x3
   116f8:	bl	1226c <plugin_init@@Base+0x122c>
   116fc:	adrp	x0, 15000 <plugin_init@@Base+0x3fc0>
   11700:	add	x0, x0, #0x29c
   11704:	str	x0, [sp, #416]
   11708:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1170c:	add	x0, x0, #0x730
   11710:	ldr	x0, [x0]
   11714:	mov	x3, x0
   11718:	ldr	x2, [sp, #416]
   1171c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11720:	add	x1, x0, #0xd80
   11724:	mov	x0, x3
   11728:	bl	1226c <plugin_init@@Base+0x122c>
   1172c:	adrp	x0, 15000 <plugin_init@@Base+0x3fc0>
   11730:	add	x0, x0, #0x3d8
   11734:	str	x0, [sp, #408]
   11738:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1173c:	add	x0, x0, #0x730
   11740:	ldr	x0, [x0]
   11744:	mov	x3, x0
   11748:	ldr	x2, [sp, #408]
   1174c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11750:	add	x1, x0, #0xda0
   11754:	mov	x0, x3
   11758:	bl	1226c <plugin_init@@Base+0x122c>
   1175c:	adrp	x0, 15000 <plugin_init@@Base+0x3fc0>
   11760:	add	x0, x0, #0x514
   11764:	str	x0, [sp, #400]
   11768:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1176c:	add	x0, x0, #0x730
   11770:	ldr	x0, [x0]
   11774:	mov	x3, x0
   11778:	ldr	x2, [sp, #400]
   1177c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11780:	add	x1, x0, #0xdc8
   11784:	mov	x0, x3
   11788:	bl	1226c <plugin_init@@Base+0x122c>
   1178c:	adrp	x0, 15000 <plugin_init@@Base+0x3fc0>
   11790:	add	x0, x0, #0x748
   11794:	str	x0, [sp, #392]
   11798:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1179c:	add	x0, x0, #0x730
   117a0:	ldr	x0, [x0]
   117a4:	mov	x3, x0
   117a8:	ldr	x2, [sp, #392]
   117ac:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   117b0:	add	x1, x0, #0xde0
   117b4:	mov	x0, x3
   117b8:	bl	1226c <plugin_init@@Base+0x122c>
   117bc:	adrp	x0, 15000 <plugin_init@@Base+0x3fc0>
   117c0:	add	x0, x0, #0x884
   117c4:	str	x0, [sp, #384]
   117c8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   117cc:	add	x0, x0, #0x730
   117d0:	ldr	x0, [x0]
   117d4:	mov	x3, x0
   117d8:	ldr	x2, [sp, #384]
   117dc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   117e0:	add	x1, x0, #0xdf8
   117e4:	mov	x0, x3
   117e8:	bl	1226c <plugin_init@@Base+0x122c>
   117ec:	adrp	x0, 15000 <plugin_init@@Base+0x3fc0>
   117f0:	add	x0, x0, #0x9c0
   117f4:	str	x0, [sp, #376]
   117f8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   117fc:	add	x0, x0, #0x730
   11800:	ldr	x0, [x0]
   11804:	mov	x3, x0
   11808:	ldr	x2, [sp, #376]
   1180c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11810:	add	x1, x0, #0xe08
   11814:	mov	x0, x3
   11818:	bl	1226c <plugin_init@@Base+0x122c>
   1181c:	adrp	x0, 15000 <plugin_init@@Base+0x3fc0>
   11820:	add	x0, x0, #0xafc
   11824:	str	x0, [sp, #368]
   11828:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1182c:	add	x0, x0, #0x730
   11830:	ldr	x0, [x0]
   11834:	mov	x3, x0
   11838:	ldr	x2, [sp, #368]
   1183c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11840:	add	x1, x0, #0xe20
   11844:	mov	x0, x3
   11848:	bl	1226c <plugin_init@@Base+0x122c>
   1184c:	adrp	x0, 15000 <plugin_init@@Base+0x3fc0>
   11850:	add	x0, x0, #0xc88
   11854:	str	x0, [sp, #360]
   11858:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1185c:	add	x0, x0, #0x730
   11860:	ldr	x0, [x0]
   11864:	mov	x3, x0
   11868:	ldr	x2, [sp, #360]
   1186c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11870:	add	x1, x0, #0xe38
   11874:	mov	x0, x3
   11878:	bl	1226c <plugin_init@@Base+0x122c>
   1187c:	adrp	x0, 15000 <plugin_init@@Base+0x3fc0>
   11880:	add	x0, x0, #0xe6c
   11884:	str	x0, [sp, #352]
   11888:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1188c:	add	x0, x0, #0x730
   11890:	ldr	x0, [x0]
   11894:	mov	x3, x0
   11898:	ldr	x2, [sp, #352]
   1189c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   118a0:	add	x1, x0, #0xe50
   118a4:	mov	x0, x3
   118a8:	bl	1226c <plugin_init@@Base+0x122c>
   118ac:	adrp	x0, 15000 <plugin_init@@Base+0x3fc0>
   118b0:	add	x0, x0, #0xfa8
   118b4:	str	x0, [sp, #344]
   118b8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   118bc:	add	x0, x0, #0x730
   118c0:	ldr	x0, [x0]
   118c4:	mov	x3, x0
   118c8:	ldr	x2, [sp, #344]
   118cc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   118d0:	add	x1, x0, #0xe68
   118d4:	mov	x0, x3
   118d8:	bl	1226c <plugin_init@@Base+0x122c>
   118dc:	adrp	x0, 16000 <plugin_init@@Base+0x4fc0>
   118e0:	add	x0, x0, #0x134
   118e4:	str	x0, [sp, #336]
   118e8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   118ec:	add	x0, x0, #0x730
   118f0:	ldr	x0, [x0]
   118f4:	mov	x3, x0
   118f8:	ldr	x2, [sp, #336]
   118fc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11900:	add	x1, x0, #0xe78
   11904:	mov	x0, x3
   11908:	bl	1226c <plugin_init@@Base+0x122c>
   1190c:	adrp	x0, 16000 <plugin_init@@Base+0x4fc0>
   11910:	add	x0, x0, #0x2c0
   11914:	str	x0, [sp, #328]
   11918:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1191c:	add	x0, x0, #0x730
   11920:	ldr	x0, [x0]
   11924:	mov	x3, x0
   11928:	ldr	x2, [sp, #328]
   1192c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11930:	add	x1, x0, #0xe98
   11934:	mov	x0, x3
   11938:	bl	1226c <plugin_init@@Base+0x122c>
   1193c:	adrp	x0, 16000 <plugin_init@@Base+0x4fc0>
   11940:	add	x0, x0, #0x4a4
   11944:	str	x0, [sp, #320]
   11948:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1194c:	add	x0, x0, #0x730
   11950:	ldr	x0, [x0]
   11954:	mov	x3, x0
   11958:	ldr	x2, [sp, #320]
   1195c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11960:	add	x1, x0, #0xea8
   11964:	mov	x0, x3
   11968:	bl	1226c <plugin_init@@Base+0x122c>
   1196c:	adrp	x0, 16000 <plugin_init@@Base+0x4fc0>
   11970:	add	x0, x0, #0x630
   11974:	str	x0, [sp, #312]
   11978:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1197c:	add	x0, x0, #0x730
   11980:	ldr	x0, [x0]
   11984:	mov	x3, x0
   11988:	ldr	x2, [sp, #312]
   1198c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11990:	add	x1, x0, #0xeb8
   11994:	mov	x0, x3
   11998:	bl	1226c <plugin_init@@Base+0x122c>
   1199c:	adrp	x0, 16000 <plugin_init@@Base+0x4fc0>
   119a0:	add	x0, x0, #0x71c
   119a4:	str	x0, [sp, #304]
   119a8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   119ac:	add	x0, x0, #0x730
   119b0:	ldr	x0, [x0]
   119b4:	mov	x3, x0
   119b8:	ldr	x2, [sp, #304]
   119bc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   119c0:	add	x1, x0, #0xec8
   119c4:	mov	x0, x3
   119c8:	bl	1226c <plugin_init@@Base+0x122c>
   119cc:	adrp	x0, 16000 <plugin_init@@Base+0x4fc0>
   119d0:	add	x0, x0, #0x950
   119d4:	str	x0, [sp, #296]
   119d8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   119dc:	add	x0, x0, #0x730
   119e0:	ldr	x0, [x0]
   119e4:	mov	x3, x0
   119e8:	ldr	x2, [sp, #296]
   119ec:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   119f0:	add	x1, x0, #0xef0
   119f4:	mov	x0, x3
   119f8:	bl	1226c <plugin_init@@Base+0x122c>
   119fc:	adrp	x0, 16000 <plugin_init@@Base+0x4fc0>
   11a00:	add	x0, x0, #0xb34
   11a04:	str	x0, [sp, #288]
   11a08:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11a0c:	add	x0, x0, #0x730
   11a10:	ldr	x0, [x0]
   11a14:	mov	x3, x0
   11a18:	ldr	x2, [sp, #288]
   11a1c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11a20:	add	x1, x0, #0xf18
   11a24:	mov	x0, x3
   11a28:	bl	1226c <plugin_init@@Base+0x122c>
   11a2c:	adrp	x0, 16000 <plugin_init@@Base+0x4fc0>
   11a30:	add	x0, x0, #0xd18
   11a34:	str	x0, [sp, #280]
   11a38:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11a3c:	add	x0, x0, #0x730
   11a40:	ldr	x0, [x0]
   11a44:	mov	x3, x0
   11a48:	ldr	x2, [sp, #280]
   11a4c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11a50:	add	x1, x0, #0xf30
   11a54:	mov	x0, x3
   11a58:	bl	1226c <plugin_init@@Base+0x122c>
   11a5c:	adrp	x0, 16000 <plugin_init@@Base+0x4fc0>
   11a60:	add	x0, x0, #0xf4c
   11a64:	str	x0, [sp, #272]
   11a68:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11a6c:	add	x0, x0, #0x730
   11a70:	ldr	x0, [x0]
   11a74:	mov	x3, x0
   11a78:	ldr	x2, [sp, #272]
   11a7c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11a80:	add	x1, x0, #0xf50
   11a84:	mov	x0, x3
   11a88:	bl	1226c <plugin_init@@Base+0x122c>
   11a8c:	adrp	x0, 17000 <plugin_init@@Base+0x5fc0>
   11a90:	add	x0, x0, #0x180
   11a94:	str	x0, [sp, #264]
   11a98:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11a9c:	add	x0, x0, #0x730
   11aa0:	ldr	x0, [x0]
   11aa4:	mov	x3, x0
   11aa8:	ldr	x2, [sp, #264]
   11aac:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11ab0:	add	x1, x0, #0xf60
   11ab4:	mov	x0, x3
   11ab8:	bl	1226c <plugin_init@@Base+0x122c>
   11abc:	adrp	x0, 17000 <plugin_init@@Base+0x5fc0>
   11ac0:	add	x0, x0, #0x26c
   11ac4:	str	x0, [sp, #256]
   11ac8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11acc:	add	x0, x0, #0x730
   11ad0:	ldr	x0, [x0]
   11ad4:	mov	x3, x0
   11ad8:	ldr	x2, [sp, #256]
   11adc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11ae0:	add	x1, x0, #0xf78
   11ae4:	mov	x0, x3
   11ae8:	bl	1226c <plugin_init@@Base+0x122c>
   11aec:	adrp	x0, 17000 <plugin_init@@Base+0x5fc0>
   11af0:	add	x0, x0, #0x4a0
   11af4:	str	x0, [sp, #248]
   11af8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11afc:	add	x0, x0, #0x730
   11b00:	ldr	x0, [x0]
   11b04:	mov	x3, x0
   11b08:	ldr	x2, [sp, #248]
   11b0c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11b10:	add	x1, x0, #0xf88
   11b14:	mov	x0, x3
   11b18:	bl	1226c <plugin_init@@Base+0x122c>
   11b1c:	adrp	x0, 17000 <plugin_init@@Base+0x5fc0>
   11b20:	add	x0, x0, #0x62c
   11b24:	str	x0, [sp, #240]
   11b28:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11b2c:	add	x0, x0, #0x730
   11b30:	ldr	x0, [x0]
   11b34:	mov	x3, x0
   11b38:	ldr	x2, [sp, #240]
   11b3c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11b40:	add	x1, x0, #0xfa0
   11b44:	mov	x0, x3
   11b48:	bl	1226c <plugin_init@@Base+0x122c>
   11b4c:	adrp	x0, 17000 <plugin_init@@Base+0x5fc0>
   11b50:	add	x0, x0, #0x718
   11b54:	str	x0, [sp, #232]
   11b58:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11b5c:	add	x0, x0, #0x730
   11b60:	ldr	x0, [x0]
   11b64:	mov	x3, x0
   11b68:	ldr	x2, [sp, #232]
   11b6c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11b70:	add	x1, x0, #0xfb8
   11b74:	mov	x0, x3
   11b78:	bl	1226c <plugin_init@@Base+0x122c>
   11b7c:	adrp	x0, 17000 <plugin_init@@Base+0x5fc0>
   11b80:	add	x0, x0, #0x8a4
   11b84:	str	x0, [sp, #224]
   11b88:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11b8c:	add	x0, x0, #0x730
   11b90:	ldr	x0, [x0]
   11b94:	mov	x3, x0
   11b98:	ldr	x2, [sp, #224]
   11b9c:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11ba0:	add	x1, x0, #0xfd0
   11ba4:	mov	x0, x3
   11ba8:	bl	1226c <plugin_init@@Base+0x122c>
   11bac:	adrp	x0, 17000 <plugin_init@@Base+0x5fc0>
   11bb0:	add	x0, x0, #0x9e0
   11bb4:	str	x0, [sp, #216]
   11bb8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11bbc:	add	x0, x0, #0x730
   11bc0:	ldr	x0, [x0]
   11bc4:	mov	x3, x0
   11bc8:	ldr	x2, [sp, #216]
   11bcc:	adrp	x0, 1e000 <iterative_hash@@Base+0x5d8>
   11bd0:	add	x1, x0, #0xff0
   11bd4:	mov	x0, x3
   11bd8:	bl	1226c <plugin_init@@Base+0x122c>
   11bdc:	adrp	x0, 17000 <plugin_init@@Base+0x5fc0>
   11be0:	add	x0, x0, #0xbc4
   11be4:	str	x0, [sp, #208]
   11be8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11bec:	add	x0, x0, #0x730
   11bf0:	ldr	x0, [x0]
   11bf4:	mov	x3, x0
   11bf8:	ldr	x2, [sp, #208]
   11bfc:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   11c00:	add	x1, x0, #0x8
   11c04:	mov	x0, x3
   11c08:	bl	1226c <plugin_init@@Base+0x122c>
   11c0c:	adrp	x0, 17000 <plugin_init@@Base+0x5fc0>
   11c10:	add	x0, x0, #0xd00
   11c14:	str	x0, [sp, #200]
   11c18:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11c1c:	add	x0, x0, #0x730
   11c20:	ldr	x0, [x0]
   11c24:	mov	x3, x0
   11c28:	ldr	x2, [sp, #200]
   11c2c:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   11c30:	add	x1, x0, #0x28
   11c34:	mov	x0, x3
   11c38:	bl	1226c <plugin_init@@Base+0x122c>
   11c3c:	adrp	x0, 17000 <plugin_init@@Base+0x5fc0>
   11c40:	add	x0, x0, #0xdec
   11c44:	str	x0, [sp, #192]
   11c48:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11c4c:	add	x0, x0, #0x730
   11c50:	ldr	x0, [x0]
   11c54:	mov	x3, x0
   11c58:	ldr	x2, [sp, #192]
   11c5c:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   11c60:	add	x1, x0, #0x40
   11c64:	mov	x0, x3
   11c68:	bl	1226c <plugin_init@@Base+0x122c>
   11c6c:	adrp	x0, 17000 <plugin_init@@Base+0x5fc0>
   11c70:	add	x0, x0, #0xf78
   11c74:	str	x0, [sp, #184]
   11c78:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11c7c:	add	x0, x0, #0x730
   11c80:	ldr	x0, [x0]
   11c84:	mov	x3, x0
   11c88:	ldr	x2, [sp, #184]
   11c8c:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   11c90:	add	x1, x0, #0x50
   11c94:	mov	x0, x3
   11c98:	bl	1226c <plugin_init@@Base+0x122c>
   11c9c:	adrp	x0, 17000 <plugin_init@@Base+0x5fc0>
   11ca0:	add	x0, x0, #0xff8
   11ca4:	str	x0, [sp, #176]
   11ca8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11cac:	add	x0, x0, #0x730
   11cb0:	ldr	x0, [x0]
   11cb4:	mov	x3, x0
   11cb8:	ldr	x2, [sp, #176]
   11cbc:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   11cc0:	add	x1, x0, #0x60
   11cc4:	mov	x0, x3
   11cc8:	bl	1226c <plugin_init@@Base+0x122c>
   11ccc:	adrp	x0, 18000 <plugin_init@@Base+0x6fc0>
   11cd0:	add	x0, x0, #0x134
   11cd4:	str	x0, [sp, #168]
   11cd8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11cdc:	add	x0, x0, #0x730
   11ce0:	ldr	x0, [x0]
   11ce4:	mov	x3, x0
   11ce8:	ldr	x2, [sp, #168]
   11cec:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   11cf0:	add	x1, x0, #0x70
   11cf4:	mov	x0, x3
   11cf8:	bl	1226c <plugin_init@@Base+0x122c>
   11cfc:	adrp	x0, 18000 <plugin_init@@Base+0x6fc0>
   11d00:	add	x0, x0, #0x1b4
   11d04:	str	x0, [sp, #160]
   11d08:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11d0c:	add	x0, x0, #0x730
   11d10:	ldr	x0, [x0]
   11d14:	mov	x3, x0
   11d18:	ldr	x2, [sp, #160]
   11d1c:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   11d20:	add	x1, x0, #0x80
   11d24:	mov	x0, x3
   11d28:	bl	1226c <plugin_init@@Base+0x122c>
   11d2c:	adrp	x0, 18000 <plugin_init@@Base+0x6fc0>
   11d30:	add	x0, x0, #0x234
   11d34:	str	x0, [sp, #152]
   11d38:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11d3c:	add	x0, x0, #0x730
   11d40:	ldr	x0, [x0]
   11d44:	mov	x3, x0
   11d48:	ldr	x2, [sp, #152]
   11d4c:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   11d50:	add	x1, x0, #0x90
   11d54:	mov	x0, x3
   11d58:	bl	1226c <plugin_init@@Base+0x122c>
   11d5c:	adrp	x0, 18000 <plugin_init@@Base+0x6fc0>
   11d60:	add	x0, x0, #0x2b4
   11d64:	str	x0, [sp, #144]
   11d68:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11d6c:	add	x0, x0, #0x730
   11d70:	ldr	x0, [x0]
   11d74:	mov	x3, x0
   11d78:	ldr	x2, [sp, #144]
   11d7c:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   11d80:	add	x1, x0, #0xa8
   11d84:	mov	x0, x3
   11d88:	bl	1226c <plugin_init@@Base+0x122c>
   11d8c:	adrp	x0, 18000 <plugin_init@@Base+0x6fc0>
   11d90:	add	x0, x0, #0x334
   11d94:	str	x0, [sp, #136]
   11d98:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11d9c:	add	x0, x0, #0x730
   11da0:	ldr	x0, [x0]
   11da4:	mov	x3, x0
   11da8:	ldr	x2, [sp, #136]
   11dac:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   11db0:	add	x1, x0, #0xc0
   11db4:	mov	x0, x3
   11db8:	bl	1226c <plugin_init@@Base+0x122c>
   11dbc:	adrp	x0, 18000 <plugin_init@@Base+0x6fc0>
   11dc0:	add	x0, x0, #0x470
   11dc4:	str	x0, [sp, #128]
   11dc8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11dcc:	add	x0, x0, #0x730
   11dd0:	ldr	x0, [x0]
   11dd4:	mov	x3, x0
   11dd8:	ldr	x2, [sp, #128]
   11ddc:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   11de0:	add	x1, x0, #0xd8
   11de4:	mov	x0, x3
   11de8:	bl	1226c <plugin_init@@Base+0x122c>
   11dec:	adrp	x0, 18000 <plugin_init@@Base+0x6fc0>
   11df0:	add	x0, x0, #0x5ac
   11df4:	str	x0, [sp, #120]
   11df8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11dfc:	add	x0, x0, #0x730
   11e00:	ldr	x0, [x0]
   11e04:	mov	x3, x0
   11e08:	ldr	x2, [sp, #120]
   11e0c:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   11e10:	add	x1, x0, #0xf8
   11e14:	mov	x0, x3
   11e18:	bl	1226c <plugin_init@@Base+0x122c>
   11e1c:	adrp	x0, 18000 <plugin_init@@Base+0x6fc0>
   11e20:	add	x0, x0, #0x6e8
   11e24:	str	x0, [sp, #112]
   11e28:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11e2c:	add	x0, x0, #0x730
   11e30:	ldr	x0, [x0]
   11e34:	mov	x3, x0
   11e38:	ldr	x2, [sp, #112]
   11e3c:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   11e40:	add	x1, x0, #0x110
   11e44:	mov	x0, x3
   11e48:	bl	1226c <plugin_init@@Base+0x122c>
   11e4c:	adrp	x0, 18000 <plugin_init@@Base+0x6fc0>
   11e50:	add	x0, x0, #0x824
   11e54:	str	x0, [sp, #104]
   11e58:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11e5c:	add	x0, x0, #0x730
   11e60:	ldr	x0, [x0]
   11e64:	mov	x3, x0
   11e68:	ldr	x2, [sp, #104]
   11e6c:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   11e70:	add	x1, x0, #0x128
   11e74:	mov	x0, x3
   11e78:	bl	1226c <plugin_init@@Base+0x122c>
   11e7c:	adrp	x0, 18000 <plugin_init@@Base+0x6fc0>
   11e80:	add	x0, x0, #0x910
   11e84:	str	x0, [sp, #96]
   11e88:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11e8c:	add	x0, x0, #0x730
   11e90:	ldr	x0, [x0]
   11e94:	mov	x3, x0
   11e98:	ldr	x2, [sp, #96]
   11e9c:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   11ea0:	add	x1, x0, #0x140
   11ea4:	mov	x0, x3
   11ea8:	bl	1226c <plugin_init@@Base+0x122c>
   11eac:	adrp	x0, 18000 <plugin_init@@Base+0x6fc0>
   11eb0:	add	x0, x0, #0xa4c
   11eb4:	str	x0, [sp, #88]
   11eb8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11ebc:	add	x0, x0, #0x730
   11ec0:	ldr	x0, [x0]
   11ec4:	mov	x3, x0
   11ec8:	ldr	x2, [sp, #88]
   11ecc:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   11ed0:	add	x1, x0, #0x158
   11ed4:	mov	x0, x3
   11ed8:	bl	1226c <plugin_init@@Base+0x122c>
   11edc:	adrp	x0, 18000 <plugin_init@@Base+0x6fc0>
   11ee0:	add	x0, x0, #0xc80
   11ee4:	str	x0, [sp, #80]
   11ee8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11eec:	add	x0, x0, #0x730
   11ef0:	ldr	x0, [x0]
   11ef4:	mov	x3, x0
   11ef8:	ldr	x2, [sp, #80]
   11efc:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   11f00:	add	x1, x0, #0x168
   11f04:	mov	x0, x3
   11f08:	bl	1226c <plugin_init@@Base+0x122c>
   11f0c:	adrp	x0, 18000 <plugin_init@@Base+0x6fc0>
   11f10:	add	x0, x0, #0xd6c
   11f14:	str	x0, [sp, #72]
   11f18:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   11f1c:	add	x0, x0, #0x730
   11f20:	ldr	x0, [x0]
   11f24:	mov	x3, x0
   11f28:	ldr	x2, [sp, #72]
   11f2c:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   11f30:	add	x1, x0, #0x170
   11f34:	mov	x0, x3
   11f38:	bl	1226c <plugin_init@@Base+0x122c>
   11f3c:	mov	w0, #0x0                   	// #0
   11f40:	b	11f5c <plugin_init@@Base+0xf1c>
   11f44:	mov	x20, x0
   11f48:	mov	x1, #0xa8                  	// #168
   11f4c:	mov	x0, x19
   11f50:	bl	6680 <_ZdlPvm@plt>
   11f54:	mov	x0, x20
   11f58:	bl	6c60 <_Unwind_Resume@plt>
   11f5c:	ldp	x19, x20, [sp, #16]
   11f60:	ldp	x29, x30, [sp]
   11f64:	add	sp, sp, #0x270
   11f68:	ret
   11f6c:	stp	x29, x30, [sp, #-32]!
   11f70:	mov	x29, sp
   11f74:	str	x0, [sp, #24]
   11f78:	str	w1, [sp, #20]
   11f7c:	strb	w2, [sp, #19]
   11f80:	ldrb	w0, [sp, #19]
   11f84:	cmp	w0, #0x0
   11f88:	b.eq	11fb4 <plugin_init@@Base+0xf74>  // b.none
   11f8c:	ldr	x0, [sp, #24]
   11f90:	cmp	x0, #0x0
   11f94:	b.eq	11fa4 <plugin_init@@Base+0xf64>  // b.none
   11f98:	ldr	x0, [sp, #24]
   11f9c:	ldr	w0, [x0, #4]
   11fa0:	b	11fa8 <plugin_init@@Base+0xf68>
   11fa4:	mov	w0, #0x0                   	// #0
   11fa8:	ldr	w1, [sp, #20]
   11fac:	add	w0, w0, w1
   11fb0:	b	12008 <plugin_init@@Base+0xfc8>
   11fb4:	ldr	x0, [sp, #24]
   11fb8:	cmp	x0, #0x0
   11fbc:	b.ne	11fd8 <plugin_init@@Base+0xf98>  // b.any
   11fc0:	ldr	w2, [sp, #20]
   11fc4:	ldr	w1, [sp, #20]
   11fc8:	mov	w0, #0x4                   	// #4
   11fcc:	cmp	w2, #0x4
   11fd0:	csel	w0, w1, w0, cs  // cs = hs, nlast
   11fd4:	b	12008 <plugin_init@@Base+0xfc8>
   11fd8:	ldr	x0, [sp, #24]
   11fdc:	ldr	w0, [x0]
   11fe0:	ubfx	x0, x0, #0, #31
   11fe4:	mov	w2, w0
   11fe8:	ldr	x0, [sp, #24]
   11fec:	ldr	w1, [x0, #4]
   11ff0:	ldr	w0, [sp, #20]
   11ff4:	add	w0, w1, w0
   11ff8:	mov	w1, w0
   11ffc:	mov	w0, w2
   12000:	bl	6950 <_ZN10vec_prefix22calculate_allocation_1Ejj@plt>
   12004:	nop
   12008:	ldp	x29, x30, [sp], #32
   1200c:	ret
   12010:	sub	sp, sp, #0x30
   12014:	str	w0, [sp, #12]
   12018:	str	w1, [sp, #8]
   1201c:	str	w2, [sp, #4]
   12020:	str	w3, [sp]
   12024:	ldr	w1, [sp, #12]
   12028:	ldr	w0, [sp, #4]
   1202c:	mul	x0, x1, x0
   12030:	lsr	x0, x0, #32
   12034:	str	w0, [sp, #44]
   12038:	ldr	w1, [sp, #12]
   1203c:	ldr	w0, [sp, #44]
   12040:	sub	w0, w1, w0
   12044:	str	w0, [sp, #40]
   12048:	ldr	w0, [sp, #40]
   1204c:	lsr	w0, w0, #1
   12050:	str	w0, [sp, #36]
   12054:	ldr	w1, [sp, #44]
   12058:	ldr	w0, [sp, #36]
   1205c:	add	w0, w1, w0
   12060:	str	w0, [sp, #32]
   12064:	ldr	w0, [sp]
   12068:	ldr	w1, [sp, #32]
   1206c:	lsr	w0, w1, w0
   12070:	str	w0, [sp, #28]
   12074:	ldr	w1, [sp, #28]
   12078:	ldr	w0, [sp, #8]
   1207c:	mul	w0, w1, w0
   12080:	ldr	w1, [sp, #12]
   12084:	sub	w0, w1, w0
   12088:	str	w0, [sp, #24]
   1208c:	ldr	w0, [sp, #24]
   12090:	add	sp, sp, #0x30
   12094:	ret
   12098:	stp	x29, x30, [sp, #-48]!
   1209c:	mov	x29, sp
   120a0:	str	w0, [sp, #28]
   120a4:	str	w1, [sp, #24]
   120a8:	ldr	w0, [sp, #24]
   120ac:	lsl	x1, x0, #4
   120b0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   120b4:	ldr	x0, [x0, #4064]
   120b8:	add	x0, x1, x0
   120bc:	str	x0, [sp, #40]
   120c0:	ldr	x0, [sp, #40]
   120c4:	ldr	w1, [x0]
   120c8:	ldr	x0, [sp, #40]
   120cc:	ldr	w2, [x0, #4]
   120d0:	ldr	x0, [sp, #40]
   120d4:	ldr	w0, [x0, #12]
   120d8:	mov	w3, w0
   120dc:	ldr	w0, [sp, #28]
   120e0:	bl	12010 <plugin_init@@Base+0xfd0>
   120e4:	ldp	x29, x30, [sp], #48
   120e8:	ret
   120ec:	stp	x29, x30, [sp, #-48]!
   120f0:	mov	x29, sp
   120f4:	str	w0, [sp, #28]
   120f8:	str	w1, [sp, #24]
   120fc:	ldr	w0, [sp, #24]
   12100:	lsl	x1, x0, #4
   12104:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   12108:	ldr	x0, [x0, #4064]
   1210c:	add	x0, x1, x0
   12110:	str	x0, [sp, #40]
   12114:	ldr	x0, [sp, #40]
   12118:	ldr	w0, [x0]
   1211c:	sub	w1, w0, #0x2
   12120:	ldr	x0, [sp, #40]
   12124:	ldr	w2, [x0, #8]
   12128:	ldr	x0, [sp, #40]
   1212c:	ldr	w0, [x0, #12]
   12130:	mov	w3, w0
   12134:	ldr	w0, [sp, #28]
   12138:	bl	12010 <plugin_init@@Base+0xfd0>
   1213c:	add	w0, w0, #0x1
   12140:	ldp	x29, x30, [sp], #48
   12144:	ret
   12148:	sub	sp, sp, #0x10
   1214c:	str	x0, [sp, #8]
   12150:	str	w1, [sp, #4]
   12154:	ldr	x0, [sp, #8]
   12158:	str	wzr, [x0]
   1215c:	ldr	x0, [sp, #8]
   12160:	ldr	w1, [sp, #4]
   12164:	str	w1, [x0, #4]
   12168:	nop
   1216c:	add	sp, sp, #0x10
   12170:	ret
   12174:	stp	x29, x30, [sp, #-32]!
   12178:	mov	x29, sp
   1217c:	str	x0, [sp, #24]
   12180:	str	x1, [sp, #16]
   12184:	ldr	x0, [sp, #24]
   12188:	ldr	x1, [sp, #16]
   1218c:	str	x1, [x0]
   12190:	ldr	x0, [sp, #24]
   12194:	ldr	x0, [x0]
   12198:	bl	68b0 <_Z16cp_expr_locationPK9tree_node@plt>
   1219c:	mov	w1, w0
   121a0:	ldr	x0, [sp, #24]
   121a4:	str	w1, [x0, #8]
   121a8:	nop
   121ac:	ldp	x29, x30, [sp], #32
   121b0:	ret
   121b4:	sub	sp, sp, #0x10
   121b8:	str	x0, [sp, #8]
   121bc:	ldr	x0, [sp, #8]
   121c0:	ldr	x0, [x0]
   121c4:	add	sp, sp, #0x10
   121c8:	ret
   121cc:	sub	sp, sp, #0x10
   121d0:	str	x0, [sp, #8]
   121d4:	ldr	x0, [sp, #8]
   121d8:	ldrh	w0, [x0]
   121dc:	cmp	w0, #0x1
   121e0:	b.ne	121ec <plugin_init@@Base+0x11ac>  // b.any
   121e4:	ldr	x0, [sp, #8]
   121e8:	b	121f0 <plugin_init@@Base+0x11b0>
   121ec:	mov	x0, #0x0                   	// #0
   121f0:	add	sp, sp, #0x10
   121f4:	ret
   121f8:	stp	x29, x30, [sp, #-32]!
   121fc:	mov	x29, sp
   12200:	str	x0, [sp, #24]
   12204:	str	w1, [sp, #20]
   12208:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1220c:	ldr	x0, [x0, #3832]
   12210:	add	x1, x0, #0x10
   12214:	ldr	x0, [sp, #24]
   12218:	str	x1, [x0]
   1221c:	ldr	x0, [sp, #24]
   12220:	ldr	w1, [sp, #20]
   12224:	str	w1, [x0, #8]
   12228:	ldr	x0, [sp, #24]
   1222c:	mov	w1, #0xffffffff            	// #-1
   12230:	str	w1, [x0, #12]
   12234:	ldr	x0, [sp, #24]
   12238:	add	x0, x0, #0x10
   1223c:	bl	1b87c <plugin_init@@Base+0xa83c>
   12240:	nop
   12244:	ldp	x29, x30, [sp], #32
   12248:	ret
   1224c:	stp	x29, x30, [sp, #-32]!
   12250:	mov	x29, sp
   12254:	str	x0, [sp, #24]
   12258:	mov	w1, #0x1                   	// #1
   1225c:	ldr	x0, [sp, #24]
   12260:	bl	1bb8c <plugin_init@@Base+0xab4c>
   12264:	ldp	x29, x30, [sp], #32
   12268:	ret
   1226c:	stp	x29, x30, [sp, #-48]!
   12270:	mov	x29, sp
   12274:	str	x0, [sp, #40]
   12278:	str	x1, [sp, #32]
   1227c:	str	x2, [sp, #24]
   12280:	ldr	x0, [sp, #40]
   12284:	add	x0, x0, #0x10
   12288:	ldr	x2, [sp, #24]
   1228c:	ldr	x1, [sp, #32]
   12290:	bl	1b8f4 <plugin_init@@Base+0xa8b4>
   12294:	nop
   12298:	ldp	x29, x30, [sp], #48
   1229c:	ret
   122a0:	sub	sp, sp, #0x10
   122a4:	str	x0, [sp, #8]
   122a8:	ldr	x0, [sp, #8]
   122ac:	str	xzr, [x0]
   122b0:	nop
   122b4:	add	sp, sp, #0x10
   122b8:	ret
   122bc:	stp	x29, x30, [sp, #-32]!
   122c0:	mov	x29, sp
   122c4:	str	x0, [sp, #24]
   122c8:	ldr	x0, [sp, #24]
   122cc:	ldr	x0, [x0]
   122d0:	cmp	x0, #0x0
   122d4:	b.eq	122e4 <plugin_init@@Base+0x12a4>  // b.none
   122d8:	ldr	x0, [sp, #24]
   122dc:	ldr	x0, [x0]
   122e0:	bl	6850 <_ZdaPv@plt>
   122e4:	nop
   122e8:	ldp	x29, x30, [sp], #32
   122ec:	ret
   122f0:	sub	sp, sp, #0x10
   122f4:	str	x0, [sp, #8]
   122f8:	ldr	x0, [sp, #8]
   122fc:	ldr	x0, [x0]
   12300:	add	sp, sp, #0x10
   12304:	ret
   12308:	stp	x29, x30, [sp, #-32]!
   1230c:	mov	x29, sp
   12310:	str	x0, [sp, #24]
   12314:	str	x1, [sp, #16]
   12318:	ldr	x0, [sp, #24]
   1231c:	mov	x1, x0
   12320:	ldr	x0, [sp, #16]
   12324:	bl	1c1ac <plugin_init@@Base+0xb16c>
   12328:	ldp	x29, x30, [sp], #32
   1232c:	ret
   12330:	sub	sp, sp, #0x10
   12334:	str	x0, [sp, #8]
   12338:	ldr	x0, [sp, #8]
   1233c:	str	xzr, [x0]
   12340:	nop
   12344:	add	sp, sp, #0x10
   12348:	ret
   1234c:	stp	x29, x30, [sp, #-32]!
   12350:	mov	x29, sp
   12354:	str	x0, [sp, #24]
   12358:	ldr	x0, [sp, #24]
   1235c:	ldr	x0, [x0]
   12360:	cmp	x0, #0x0
   12364:	b.eq	1238c <plugin_init@@Base+0x134c>  // b.none
   12368:	ldr	x0, [sp, #24]
   1236c:	ldr	x0, [x0]
   12370:	ldr	x0, [x0, #8]
   12374:	cmp	x0, #0x0
   12378:	b.eq	1238c <plugin_init@@Base+0x134c>  // b.none
   1237c:	ldr	x0, [sp, #24]
   12380:	ldr	x0, [x0]
   12384:	ldr	x0, [x0, #8]
   12388:	bl	6850 <_ZdaPv@plt>
   1238c:	ldr	x0, [sp, #24]
   12390:	ldr	x0, [x0]
   12394:	cmp	x0, #0x0
   12398:	b.eq	123a4 <plugin_init@@Base+0x1364>  // b.none
   1239c:	mov	x1, #0x10                  	// #16
   123a0:	bl	6680 <_ZdlPvm@plt>
   123a4:	nop
   123a8:	ldp	x29, x30, [sp], #32
   123ac:	ret
   123b0:	sub	sp, sp, #0x10
   123b4:	str	x0, [sp, #8]
   123b8:	ldr	x0, [sp, #8]
   123bc:	ldr	x0, [x0]
   123c0:	add	sp, sp, #0x10
   123c4:	ret
   123c8:	stp	x29, x30, [sp, #-32]!
   123cc:	mov	x29, sp
   123d0:	str	x0, [sp, #24]
   123d4:	str	x1, [sp, #16]
   123d8:	ldr	x0, [sp, #24]
   123dc:	mov	x1, x0
   123e0:	ldr	x0, [sp, #16]
   123e4:	bl	1c4d0 <plugin_init@@Base+0xb490>
   123e8:	ldp	x29, x30, [sp], #32
   123ec:	ret
   123f0:	sub	sp, sp, #0x10
   123f4:	str	x0, [sp, #8]
   123f8:	ldr	x0, [sp, #8]
   123fc:	str	xzr, [x0]
   12400:	nop
   12404:	add	sp, sp, #0x10
   12408:	ret
   1240c:	stp	x29, x30, [sp, #-32]!
   12410:	mov	x29, sp
   12414:	str	x0, [sp, #24]
   12418:	ldr	x0, [sp, #24]
   1241c:	ldr	x0, [x0]
   12420:	cmp	x0, #0x0
   12424:	b.eq	12470 <plugin_init@@Base+0x1430>  // b.none
   12428:	ldr	x0, [sp, #24]
   1242c:	ldr	x0, [x0]
   12430:	ldr	x0, [x0, #16]
   12434:	cmp	x0, #0x0
   12438:	b.eq	1244c <plugin_init@@Base+0x140c>  // b.none
   1243c:	ldr	x0, [sp, #24]
   12440:	ldr	x0, [x0]
   12444:	ldr	x0, [x0, #16]
   12448:	bl	6850 <_ZdaPv@plt>
   1244c:	ldr	x0, [sp, #24]
   12450:	ldr	x0, [x0]
   12454:	ldr	x0, [x0, #8]
   12458:	cmp	x0, #0x0
   1245c:	b.eq	12470 <plugin_init@@Base+0x1430>  // b.none
   12460:	ldr	x0, [sp, #24]
   12464:	ldr	x0, [x0]
   12468:	ldr	x0, [x0, #8]
   1246c:	bl	6850 <_ZdaPv@plt>
   12470:	ldr	x0, [sp, #24]
   12474:	ldr	x0, [x0]
   12478:	cmp	x0, #0x0
   1247c:	b.eq	12488 <plugin_init@@Base+0x1448>  // b.none
   12480:	mov	x1, #0x18                  	// #24
   12484:	bl	6680 <_ZdlPvm@plt>
   12488:	nop
   1248c:	ldp	x29, x30, [sp], #32
   12490:	ret
   12494:	sub	sp, sp, #0x10
   12498:	str	x0, [sp, #8]
   1249c:	ldr	x0, [sp, #8]
   124a0:	ldr	x0, [x0]
   124a4:	add	sp, sp, #0x10
   124a8:	ret
   124ac:	stp	x29, x30, [sp, #-32]!
   124b0:	mov	x29, sp
   124b4:	str	x0, [sp, #24]
   124b8:	str	x1, [sp, #16]
   124bc:	ldr	x0, [sp, #24]
   124c0:	mov	x1, x0
   124c4:	ldr	x0, [sp, #16]
   124c8:	bl	70a0 <_Z19decl_assembler_nameP9tree_node@plt+0x340>
   124cc:	ldp	x29, x30, [sp], #32
   124d0:	ret
   124d4:	sub	sp, sp, #0x10
   124d8:	str	x0, [sp, #8]
   124dc:	ldr	x0, [sp, #8]
   124e0:	str	xzr, [x0]
   124e4:	nop
   124e8:	add	sp, sp, #0x10
   124ec:	ret
   124f0:	stp	x29, x30, [sp, #-32]!
   124f4:	mov	x29, sp
   124f8:	str	x0, [sp, #24]
   124fc:	ldr	x0, [sp, #24]
   12500:	ldr	x0, [x0]
   12504:	cmp	x0, #0x0
   12508:	b.eq	12554 <plugin_init@@Base+0x1514>  // b.none
   1250c:	ldr	x0, [sp, #24]
   12510:	ldr	x0, [x0]
   12514:	ldr	x0, [x0, #16]
   12518:	cmp	x0, #0x0
   1251c:	b.eq	12530 <plugin_init@@Base+0x14f0>  // b.none
   12520:	ldr	x0, [sp, #24]
   12524:	ldr	x0, [x0]
   12528:	ldr	x0, [x0, #16]
   1252c:	bl	6850 <_ZdaPv@plt>
   12530:	ldr	x0, [sp, #24]
   12534:	ldr	x0, [x0]
   12538:	ldr	x0, [x0, #8]
   1253c:	cmp	x0, #0x0
   12540:	b.eq	12554 <plugin_init@@Base+0x1514>  // b.none
   12544:	ldr	x0, [sp, #24]
   12548:	ldr	x0, [x0]
   1254c:	ldr	x0, [x0, #8]
   12550:	bl	6850 <_ZdaPv@plt>
   12554:	ldr	x0, [sp, #24]
   12558:	ldr	x0, [x0]
   1255c:	cmp	x0, #0x0
   12560:	b.eq	1256c <plugin_init@@Base+0x152c>  // b.none
   12564:	mov	x1, #0x18                  	// #24
   12568:	bl	6680 <_ZdlPvm@plt>
   1256c:	nop
   12570:	ldp	x29, x30, [sp], #32
   12574:	ret
   12578:	sub	sp, sp, #0x10
   1257c:	str	x0, [sp, #8]
   12580:	ldr	x0, [sp, #8]
   12584:	ldr	x0, [x0]
   12588:	add	sp, sp, #0x10
   1258c:	ret
   12590:	stp	x29, x30, [sp, #-32]!
   12594:	mov	x29, sp
   12598:	str	x0, [sp, #24]
   1259c:	str	x1, [sp, #16]
   125a0:	ldr	x0, [sp, #24]
   125a4:	mov	x1, x0
   125a8:	ldr	x0, [sp, #16]
   125ac:	bl	7348 <_Z19decl_assembler_nameP9tree_node@plt+0x5e8>
   125b0:	ldp	x29, x30, [sp], #32
   125b4:	ret
   125b8:	sub	sp, sp, #0x10
   125bc:	str	x0, [sp, #8]
   125c0:	ldr	x0, [sp, #8]
   125c4:	str	xzr, [x0]
   125c8:	nop
   125cc:	add	sp, sp, #0x10
   125d0:	ret
   125d4:	stp	x29, x30, [sp, #-32]!
   125d8:	mov	x29, sp
   125dc:	str	x0, [sp, #24]
   125e0:	ldr	x0, [sp, #24]
   125e4:	ldr	x0, [x0]
   125e8:	cmp	x0, #0x0
   125ec:	b.eq	12614 <plugin_init@@Base+0x15d4>  // b.none
   125f0:	ldr	x0, [sp, #24]
   125f4:	ldr	x0, [x0]
   125f8:	ldr	x0, [x0, #8]
   125fc:	cmp	x0, #0x0
   12600:	b.eq	12614 <plugin_init@@Base+0x15d4>  // b.none
   12604:	ldr	x0, [sp, #24]
   12608:	ldr	x0, [x0]
   1260c:	ldr	x0, [x0, #8]
   12610:	bl	6850 <_ZdaPv@plt>
   12614:	ldr	x0, [sp, #24]
   12618:	ldr	x0, [x0]
   1261c:	cmp	x0, #0x0
   12620:	b.eq	1262c <plugin_init@@Base+0x15ec>  // b.none
   12624:	mov	x1, #0x10                  	// #16
   12628:	bl	6680 <_ZdlPvm@plt>
   1262c:	nop
   12630:	ldp	x29, x30, [sp], #32
   12634:	ret
   12638:	sub	sp, sp, #0x10
   1263c:	str	x0, [sp, #8]
   12640:	ldr	x0, [sp, #8]
   12644:	ldr	x0, [x0]
   12648:	add	sp, sp, #0x10
   1264c:	ret
   12650:	stp	x29, x30, [sp, #-32]!
   12654:	mov	x29, sp
   12658:	str	x0, [sp, #24]
   1265c:	str	x1, [sp, #16]
   12660:	ldr	x0, [sp, #24]
   12664:	mov	x1, x0
   12668:	ldr	x0, [sp, #16]
   1266c:	bl	75a0 <_Z19decl_assembler_nameP9tree_node@plt+0x840>
   12670:	ldp	x29, x30, [sp], #32
   12674:	ret
   12678:	sub	sp, sp, #0x10
   1267c:	str	x0, [sp, #8]
   12680:	ldr	x0, [sp, #8]
   12684:	ldr	x0, [x0]
   12688:	ldr	w0, [x0, #28]
   1268c:	add	sp, sp, #0x10
   12690:	ret
   12694:	sub	sp, sp, #0x10
   12698:	str	x0, [sp, #8]
   1269c:	str	x1, [sp]
   126a0:	ldr	x0, [sp, #8]
   126a4:	ldr	x1, [x0]
   126a8:	ldr	x0, [sp]
   126ac:	ldr	x0, [x0]
   126b0:	cmp	x1, x0
   126b4:	cset	w0, eq  // eq = none
   126b8:	and	w0, w0, #0xff
   126bc:	add	sp, sp, #0x10
   126c0:	ret
   126c4:	stp	x29, x30, [sp, #-32]!
   126c8:	mov	x29, sp
   126cc:	str	x0, [sp, #24]
   126d0:	ldr	x0, [sp, #24]
   126d4:	bl	6600 <htab_hash_string@plt>
   126d8:	ldp	x29, x30, [sp], #32
   126dc:	ret
   126e0:	stp	x29, x30, [sp, #-32]!
   126e4:	mov	x29, sp
   126e8:	str	x0, [sp, #24]
   126ec:	str	x1, [sp, #16]
   126f0:	ldr	x1, [sp, #16]
   126f4:	ldr	x0, [sp, #24]
   126f8:	bl	69e0 <strcmp@plt>
   126fc:	cmp	w0, #0x0
   12700:	cset	w0, eq  // eq = none
   12704:	and	w0, w0, #0xff
   12708:	ldp	x29, x30, [sp], #32
   1270c:	ret
   12710:	stp	x29, x30, [sp, #-48]!
   12714:	mov	x29, sp
   12718:	str	x0, [sp, #24]
   1271c:	str	x1, [sp, #16]
   12720:	ldr	x0, [sp, #24]
   12724:	add	x0, x0, #0x48
   12728:	add	x1, sp, #0x10
   1272c:	mov	w2, #0x1                   	// #1
   12730:	bl	128b8 <plugin_init@@Base+0x1878>
   12734:	str	x0, [sp, #40]
   12738:	ldr	x1, [sp, #16]
   1273c:	ldr	x0, [sp, #40]
   12740:	str	x1, [x0]
   12744:	ldr	x0, [sp, #16]
   12748:	ldp	x29, x30, [sp], #48
   1274c:	ret
   12750:	stp	x29, x30, [sp, #-64]!
   12754:	mov	x29, sp
   12758:	str	x0, [sp, #40]
   1275c:	str	x1, [sp, #32]
   12760:	str	w2, [sp, #28]
   12764:	ldr	x0, [sp, #32]
   12768:	cmp	x0, #0x0
   1276c:	b.ne	12778 <plugin_init@@Base+0x1738>  // b.any
   12770:	mov	w0, #0x0                   	// #0
   12774:	b	127e8 <plugin_init@@Base+0x17a8>
   12778:	ldr	x1, [sp, #32]
   1277c:	ldr	x0, [sp, #40]
   12780:	bl	127f0 <plugin_init@@Base+0x17b0>
   12784:	str	x0, [sp, #32]
   12788:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1278c:	ldr	x0, [x0, #4016]
   12790:	ldr	x0, [x0]
   12794:	ldr	w4, [sp, #28]
   12798:	ldr	x3, [sp, #32]
   1279c:	mov	w2, #0x0                   	// #0
   127a0:	mov	w1, #0x0                   	// #0
   127a4:	bl	68e0 <_Z11linemap_addP9line_maps9lc_reasonjPKcj@plt>
   127a8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   127ac:	ldr	x0, [x0, #4016]
   127b0:	ldr	x0, [x0]
   127b4:	mov	w2, #0x0                   	// #0
   127b8:	ldr	w1, [sp, #28]
   127bc:	bl	6b20 <_Z18linemap_line_startP9line_mapsjj@plt>
   127c0:	str	w0, [sp, #60]
   127c4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   127c8:	ldr	x0, [x0, #4016]
   127cc:	ldr	x0, [x0]
   127d0:	mov	w4, #0x0                   	// #0
   127d4:	mov	x3, #0x0                   	// #0
   127d8:	mov	w2, #0x0                   	// #0
   127dc:	mov	w1, #0x1                   	// #1
   127e0:	bl	68e0 <_Z11linemap_addP9line_maps9lc_reasonjPKcj@plt>
   127e4:	ldr	w0, [sp, #60]
   127e8:	ldp	x29, x30, [sp], #64
   127ec:	ret
   127f0:	stp	x29, x30, [sp, #-48]!
   127f4:	mov	x29, sp
   127f8:	str	x0, [sp, #24]
   127fc:	str	x1, [sp, #16]
   12800:	ldr	x0, [sp, #24]
   12804:	add	x0, x0, #0x78
   12808:	add	x1, sp, #0x10
   1280c:	mov	w2, #0x1                   	// #1
   12810:	bl	128f0 <plugin_init@@Base+0x18b0>
   12814:	str	x0, [sp, #40]
   12818:	ldr	x0, [sp, #40]
   1281c:	ldr	x0, [x0]
   12820:	cmp	x0, #0x0
   12824:	b.ne	1283c <plugin_init@@Base+0x17fc>  // b.any
   12828:	ldr	x0, [sp, #16]
   1282c:	bl	6290 <xstrdup@plt>
   12830:	mov	x1, x0
   12834:	ldr	x0, [sp, #40]
   12838:	str	x1, [x0]
   1283c:	ldr	x0, [sp, #40]
   12840:	ldr	x0, [x0]
   12844:	ldp	x29, x30, [sp], #48
   12848:	ret
   1284c:	stp	x29, x30, [sp, #-48]!
   12850:	mov	x29, sp
   12854:	str	x0, [sp, #24]
   12858:	str	x1, [sp, #16]
   1285c:	ldr	x0, [sp, #16]
   12860:	ldr	w0, [x0]
   12864:	sxtw	x1, w0
   12868:	ldr	x0, [sp, #24]
   1286c:	str	x1, [x0]
   12870:	mov	w0, #0x1                   	// #1
   12874:	str	w0, [sp, #44]
   12878:	ldr	w0, [sp, #44]
   1287c:	cmp	w0, #0x1
   12880:	b.hi	128ac <plugin_init@@Base+0x186c>  // b.pmore
   12884:	ldr	x0, [sp, #24]
   12888:	bl	18f50 <plugin_init@@Base+0x7f10>
   1288c:	sxtw	x2, w0
   12890:	ldr	x0, [sp, #24]
   12894:	ldr	w1, [sp, #44]
   12898:	str	x2, [x0, x1, lsl #3]
   1289c:	ldr	w0, [sp, #44]
   128a0:	add	w0, w0, #0x1
   128a4:	str	w0, [sp, #44]
   128a8:	b	12878 <plugin_init@@Base+0x1838>
   128ac:	nop
   128b0:	ldp	x29, x30, [sp], #48
   128b4:	ret
   128b8:	stp	x29, x30, [sp, #-48]!
   128bc:	mov	x29, sp
   128c0:	str	x0, [sp, #40]
   128c4:	str	x1, [sp, #32]
   128c8:	str	w2, [sp, #28]
   128cc:	ldr	x0, [sp, #32]
   128d0:	bl	191f8 <plugin_init@@Base+0x81b8>
   128d4:	ldr	w3, [sp, #28]
   128d8:	mov	w2, w0
   128dc:	ldr	x1, [sp, #32]
   128e0:	ldr	x0, [sp, #40]
   128e4:	bl	18f64 <plugin_init@@Base+0x7f24>
   128e8:	ldp	x29, x30, [sp], #48
   128ec:	ret
   128f0:	stp	x29, x30, [sp, #-48]!
   128f4:	mov	x29, sp
   128f8:	str	x0, [sp, #40]
   128fc:	str	x1, [sp, #32]
   12900:	str	w2, [sp, #28]
   12904:	ldr	x0, [sp, #32]
   12908:	ldr	x0, [x0]
   1290c:	bl	126c4 <plugin_init@@Base+0x1684>
   12910:	ldr	w3, [sp, #28]
   12914:	mov	w2, w0
   12918:	ldr	x1, [sp, #32]
   1291c:	ldr	x0, [sp, #40]
   12920:	bl	19214 <plugin_init@@Base+0x81d4>
   12924:	ldp	x29, x30, [sp], #48
   12928:	ret
   1292c:	stp	x29, x30, [sp, #-64]!
   12930:	mov	x29, sp
   12934:	str	x0, [sp, #40]
   12938:	str	x1, [sp, #32]
   1293c:	strb	w2, [sp, #31]
   12940:	strb	w3, [sp, #30]
   12944:	str	w4, [sp, #24]
   12948:	ldr	x0, [sp, #40]
   1294c:	str	xzr, [x0, #16]
   12950:	ldr	x0, [sp, #40]
   12954:	str	xzr, [x0, #24]
   12958:	ldr	x0, [sp, #40]
   1295c:	str	wzr, [x0, #32]
   12960:	ldr	x0, [sp, #40]
   12964:	str	wzr, [x0, #36]
   12968:	ldr	x0, [sp, #40]
   1296c:	ldrb	w1, [sp, #31]
   12970:	strb	w1, [x0, #44]
   12974:	ldr	x0, [sp, #32]
   12978:	bl	6040 <_Z29hash_table_higher_prime_indexm@plt>
   1297c:	str	w0, [sp, #60]
   12980:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   12984:	ldr	x1, [x0, #4064]
   12988:	ldr	w0, [sp, #60]
   1298c:	lsl	x0, x0, #4
   12990:	add	x0, x1, x0
   12994:	ldr	w0, [x0]
   12998:	mov	w0, w0
   1299c:	str	x0, [sp, #32]
   129a0:	ldr	x1, [sp, #32]
   129a4:	ldr	x0, [sp, #40]
   129a8:	bl	194c8 <plugin_init@@Base+0x8488>
   129ac:	mov	x1, x0
   129b0:	ldr	x0, [sp, #40]
   129b4:	str	x1, [x0]
   129b8:	ldr	x0, [sp, #40]
   129bc:	ldr	x1, [sp, #32]
   129c0:	str	x1, [x0, #8]
   129c4:	ldr	x0, [sp, #40]
   129c8:	ldr	w1, [sp, #60]
   129cc:	str	w1, [x0, #40]
   129d0:	nop
   129d4:	ldp	x29, x30, [sp], #64
   129d8:	ret
   129dc:	stp	x29, x30, [sp, #-48]!
   129e0:	mov	x29, sp
   129e4:	str	x0, [sp, #24]
   129e8:	ldr	x0, [sp, #24]
   129ec:	ldr	x0, [x0, #8]
   129f0:	sub	x0, x0, #0x1
   129f4:	str	x0, [sp, #40]
   129f8:	ldr	x0, [sp, #24]
   129fc:	ldr	x0, [x0, #8]
   12a00:	ldr	x1, [sp, #40]
   12a04:	cmp	x1, x0
   12a08:	b.cs	12aa4 <plugin_init@@Base+0x1a64>  // b.hs, b.nlast
   12a0c:	ldr	x0, [sp, #24]
   12a10:	ldr	x1, [x0]
   12a14:	ldr	x0, [sp, #40]
   12a18:	lsl	x0, x0, #3
   12a1c:	add	x0, x1, x0
   12a20:	bl	19574 <plugin_init@@Base+0x8534>
   12a24:	and	w0, w0, #0xff
   12a28:	eor	w0, w0, #0x1
   12a2c:	and	w0, w0, #0xff
   12a30:	cmp	w0, #0x0
   12a34:	b.eq	12a6c <plugin_init@@Base+0x1a2c>  // b.none
   12a38:	ldr	x0, [sp, #24]
   12a3c:	ldr	x1, [x0]
   12a40:	ldr	x0, [sp, #40]
   12a44:	lsl	x0, x0, #3
   12a48:	add	x0, x1, x0
   12a4c:	bl	19598 <plugin_init@@Base+0x8558>
   12a50:	and	w0, w0, #0xff
   12a54:	eor	w0, w0, #0x1
   12a58:	and	w0, w0, #0xff
   12a5c:	cmp	w0, #0x0
   12a60:	b.eq	12a6c <plugin_init@@Base+0x1a2c>  // b.none
   12a64:	mov	w0, #0x1                   	// #1
   12a68:	b	12a70 <plugin_init@@Base+0x1a30>
   12a6c:	mov	w0, #0x0                   	// #0
   12a70:	cmp	w0, #0x0
   12a74:	b.eq	12a94 <plugin_init@@Base+0x1a54>  // b.none
   12a78:	ldr	x0, [sp, #24]
   12a7c:	ldr	x1, [x0]
   12a80:	ldr	x0, [sp, #40]
   12a84:	lsl	x0, x0, #3
   12a88:	add	x0, x1, x0
   12a8c:	ldr	x0, [x0]
   12a90:	bl	195bc <plugin_init@@Base+0x857c>
   12a94:	ldr	x0, [sp, #40]
   12a98:	sub	x0, x0, #0x1
   12a9c:	str	x0, [sp, #40]
   12aa0:	b	129f8 <plugin_init@@Base+0x19b8>
   12aa4:	ldr	x0, [sp, #24]
   12aa8:	ldrb	w0, [x0, #44]
   12aac:	eor	w0, w0, #0x1
   12ab0:	and	w0, w0, #0xff
   12ab4:	cmp	w0, #0x0
   12ab8:	b.eq	12acc <plugin_init@@Base+0x1a8c>  // b.none
   12abc:	ldr	x0, [sp, #24]
   12ac0:	ldr	x0, [x0]
   12ac4:	bl	195dc <plugin_init@@Base+0x859c>
   12ac8:	b	12ad8 <plugin_init@@Base+0x1a98>
   12acc:	ldr	x0, [sp, #24]
   12ad0:	ldr	x0, [x0]
   12ad4:	bl	62a0 <_Z8ggc_freePv@plt>
   12ad8:	nop
   12adc:	ldp	x29, x30, [sp], #48
   12ae0:	ret
   12ae4:	stp	x29, x30, [sp, #-64]!
   12ae8:	mov	x29, sp
   12aec:	str	x0, [sp, #40]
   12af0:	str	x1, [sp, #32]
   12af4:	strb	w2, [sp, #31]
   12af8:	strb	w3, [sp, #30]
   12afc:	str	w4, [sp, #24]
   12b00:	ldr	x0, [sp, #40]
   12b04:	str	xzr, [x0, #16]
   12b08:	ldr	x0, [sp, #40]
   12b0c:	str	xzr, [x0, #24]
   12b10:	ldr	x0, [sp, #40]
   12b14:	str	wzr, [x0, #32]
   12b18:	ldr	x0, [sp, #40]
   12b1c:	str	wzr, [x0, #36]
   12b20:	ldr	x0, [sp, #40]
   12b24:	ldrb	w1, [sp, #31]
   12b28:	strb	w1, [x0, #44]
   12b2c:	ldr	x0, [sp, #32]
   12b30:	bl	6040 <_Z29hash_table_higher_prime_indexm@plt>
   12b34:	str	w0, [sp, #60]
   12b38:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   12b3c:	ldr	x1, [x0, #4064]
   12b40:	ldr	w0, [sp, #60]
   12b44:	lsl	x0, x0, #4
   12b48:	add	x0, x1, x0
   12b4c:	ldr	w0, [x0]
   12b50:	mov	w0, w0
   12b54:	str	x0, [sp, #32]
   12b58:	ldr	x1, [sp, #32]
   12b5c:	ldr	x0, [sp, #40]
   12b60:	bl	195fc <plugin_init@@Base+0x85bc>
   12b64:	mov	x1, x0
   12b68:	ldr	x0, [sp, #40]
   12b6c:	str	x1, [x0]
   12b70:	ldr	x0, [sp, #40]
   12b74:	ldr	x1, [sp, #32]
   12b78:	str	x1, [x0, #8]
   12b7c:	ldr	x0, [sp, #40]
   12b80:	ldr	w1, [sp, #60]
   12b84:	str	w1, [x0, #40]
   12b88:	nop
   12b8c:	ldp	x29, x30, [sp], #64
   12b90:	ret
   12b94:	stp	x29, x30, [sp, #-48]!
   12b98:	mov	x29, sp
   12b9c:	str	x0, [sp, #24]
   12ba0:	ldr	x0, [sp, #24]
   12ba4:	ldr	x0, [x0, #8]
   12ba8:	sub	x0, x0, #0x1
   12bac:	str	x0, [sp, #40]
   12bb0:	ldr	x0, [sp, #24]
   12bb4:	ldr	x0, [x0, #8]
   12bb8:	ldr	x1, [sp, #40]
   12bbc:	cmp	x1, x0
   12bc0:	b.cs	12c58 <plugin_init@@Base+0x1c18>  // b.hs, b.nlast
   12bc4:	ldr	x0, [sp, #24]
   12bc8:	ldr	x1, [x0]
   12bcc:	ldr	x0, [sp, #40]
   12bd0:	lsl	x0, x0, #3
   12bd4:	add	x0, x1, x0
   12bd8:	bl	196a8 <plugin_init@@Base+0x8668>
   12bdc:	and	w0, w0, #0xff
   12be0:	eor	w0, w0, #0x1
   12be4:	and	w0, w0, #0xff
   12be8:	cmp	w0, #0x0
   12bec:	b.eq	12c24 <plugin_init@@Base+0x1be4>  // b.none
   12bf0:	ldr	x0, [sp, #24]
   12bf4:	ldr	x1, [x0]
   12bf8:	ldr	x0, [sp, #40]
   12bfc:	lsl	x0, x0, #3
   12c00:	add	x0, x1, x0
   12c04:	bl	196cc <plugin_init@@Base+0x868c>
   12c08:	and	w0, w0, #0xff
   12c0c:	eor	w0, w0, #0x1
   12c10:	and	w0, w0, #0xff
   12c14:	cmp	w0, #0x0
   12c18:	b.eq	12c24 <plugin_init@@Base+0x1be4>  // b.none
   12c1c:	mov	w0, #0x1                   	// #1
   12c20:	b	12c28 <plugin_init@@Base+0x1be8>
   12c24:	mov	w0, #0x0                   	// #0
   12c28:	cmp	w0, #0x0
   12c2c:	b.eq	12c48 <plugin_init@@Base+0x1c08>  // b.none
   12c30:	ldr	x0, [sp, #24]
   12c34:	ldr	x1, [x0]
   12c38:	ldr	x0, [sp, #40]
   12c3c:	lsl	x0, x0, #3
   12c40:	add	x0, x1, x0
   12c44:	bl	196f0 <plugin_init@@Base+0x86b0>
   12c48:	ldr	x0, [sp, #40]
   12c4c:	sub	x0, x0, #0x1
   12c50:	str	x0, [sp, #40]
   12c54:	b	12bb0 <plugin_init@@Base+0x1b70>
   12c58:	ldr	x0, [sp, #24]
   12c5c:	ldrb	w0, [x0, #44]
   12c60:	eor	w0, w0, #0x1
   12c64:	and	w0, w0, #0xff
   12c68:	cmp	w0, #0x0
   12c6c:	b.eq	12c80 <plugin_init@@Base+0x1c40>  // b.none
   12c70:	ldr	x0, [sp, #24]
   12c74:	ldr	x0, [x0]
   12c78:	bl	19704 <plugin_init@@Base+0x86c4>
   12c7c:	b	12c8c <plugin_init@@Base+0x1c4c>
   12c80:	ldr	x0, [sp, #24]
   12c84:	ldr	x0, [x0]
   12c88:	bl	62a0 <_Z8ggc_freePv@plt>
   12c8c:	nop
   12c90:	ldp	x29, x30, [sp], #48
   12c94:	ret
   12c98:	stp	x29, x30, [sp, #-64]!
   12c9c:	mov	x29, sp
   12ca0:	str	x0, [sp, #40]
   12ca4:	str	x1, [sp, #32]
   12ca8:	strb	w2, [sp, #31]
   12cac:	strb	w3, [sp, #30]
   12cb0:	str	w4, [sp, #24]
   12cb4:	ldr	x0, [sp, #40]
   12cb8:	str	xzr, [x0, #16]
   12cbc:	ldr	x0, [sp, #40]
   12cc0:	str	xzr, [x0, #24]
   12cc4:	ldr	x0, [sp, #40]
   12cc8:	str	wzr, [x0, #32]
   12ccc:	ldr	x0, [sp, #40]
   12cd0:	str	wzr, [x0, #36]
   12cd4:	ldr	x0, [sp, #40]
   12cd8:	ldrb	w1, [sp, #31]
   12cdc:	strb	w1, [x0, #44]
   12ce0:	ldr	x0, [sp, #32]
   12ce4:	bl	6040 <_Z29hash_table_higher_prime_indexm@plt>
   12ce8:	str	w0, [sp, #60]
   12cec:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   12cf0:	ldr	x1, [x0, #4064]
   12cf4:	ldr	w0, [sp, #60]
   12cf8:	lsl	x0, x0, #4
   12cfc:	add	x0, x1, x0
   12d00:	ldr	w0, [x0]
   12d04:	mov	w0, w0
   12d08:	str	x0, [sp, #32]
   12d0c:	ldr	x1, [sp, #32]
   12d10:	ldr	x0, [sp, #40]
   12d14:	bl	19724 <plugin_init@@Base+0x86e4>
   12d18:	mov	x1, x0
   12d1c:	ldr	x0, [sp, #40]
   12d20:	str	x1, [x0]
   12d24:	ldr	x0, [sp, #40]
   12d28:	ldr	x1, [sp, #32]
   12d2c:	str	x1, [x0, #8]
   12d30:	ldr	x0, [sp, #40]
   12d34:	ldr	w1, [sp, #60]
   12d38:	str	w1, [x0, #40]
   12d3c:	nop
   12d40:	ldp	x29, x30, [sp], #64
   12d44:	ret
   12d48:	stp	x29, x30, [sp, #-48]!
   12d4c:	mov	x29, sp
   12d50:	str	x0, [sp, #24]
   12d54:	ldr	x0, [sp, #24]
   12d58:	ldr	x0, [x0, #8]
   12d5c:	sub	x0, x0, #0x1
   12d60:	str	x0, [sp, #40]
   12d64:	ldr	x0, [sp, #24]
   12d68:	ldr	x0, [x0, #8]
   12d6c:	ldr	x1, [sp, #40]
   12d70:	cmp	x1, x0
   12d74:	b.cs	12e0c <plugin_init@@Base+0x1dcc>  // b.hs, b.nlast
   12d78:	ldr	x0, [sp, #24]
   12d7c:	ldr	x1, [x0]
   12d80:	ldr	x0, [sp, #40]
   12d84:	lsl	x0, x0, #3
   12d88:	add	x0, x1, x0
   12d8c:	bl	197d0 <plugin_init@@Base+0x8790>
   12d90:	and	w0, w0, #0xff
   12d94:	eor	w0, w0, #0x1
   12d98:	and	w0, w0, #0xff
   12d9c:	cmp	w0, #0x0
   12da0:	b.eq	12dd8 <plugin_init@@Base+0x1d98>  // b.none
   12da4:	ldr	x0, [sp, #24]
   12da8:	ldr	x1, [x0]
   12dac:	ldr	x0, [sp, #40]
   12db0:	lsl	x0, x0, #3
   12db4:	add	x0, x1, x0
   12db8:	bl	197f4 <plugin_init@@Base+0x87b4>
   12dbc:	and	w0, w0, #0xff
   12dc0:	eor	w0, w0, #0x1
   12dc4:	and	w0, w0, #0xff
   12dc8:	cmp	w0, #0x0
   12dcc:	b.eq	12dd8 <plugin_init@@Base+0x1d98>  // b.none
   12dd0:	mov	w0, #0x1                   	// #1
   12dd4:	b	12ddc <plugin_init@@Base+0x1d9c>
   12dd8:	mov	w0, #0x0                   	// #0
   12ddc:	cmp	w0, #0x0
   12de0:	b.eq	12dfc <plugin_init@@Base+0x1dbc>  // b.none
   12de4:	ldr	x0, [sp, #24]
   12de8:	ldr	x1, [x0]
   12dec:	ldr	x0, [sp, #40]
   12df0:	lsl	x0, x0, #3
   12df4:	add	x0, x1, x0
   12df8:	bl	19818 <plugin_init@@Base+0x87d8>
   12dfc:	ldr	x0, [sp, #40]
   12e00:	sub	x0, x0, #0x1
   12e04:	str	x0, [sp, #40]
   12e08:	b	12d64 <plugin_init@@Base+0x1d24>
   12e0c:	ldr	x0, [sp, #24]
   12e10:	ldrb	w0, [x0, #44]
   12e14:	eor	w0, w0, #0x1
   12e18:	and	w0, w0, #0xff
   12e1c:	cmp	w0, #0x0
   12e20:	b.eq	12e34 <plugin_init@@Base+0x1df4>  // b.none
   12e24:	ldr	x0, [sp, #24]
   12e28:	ldr	x0, [x0]
   12e2c:	bl	1982c <plugin_init@@Base+0x87ec>
   12e30:	b	12e40 <plugin_init@@Base+0x1e00>
   12e34:	ldr	x0, [sp, #24]
   12e38:	ldr	x0, [x0]
   12e3c:	bl	62a0 <_Z8ggc_freePv@plt>
   12e40:	nop
   12e44:	ldp	x29, x30, [sp], #48
   12e48:	ret
   12e4c:	stp	x29, x30, [sp, #-64]!
   12e50:	mov	x29, sp
   12e54:	str	x0, [sp, #24]
   12e58:	ldr	x0, [sp, #24]
   12e5c:	ldr	x3, [x0]
   12e60:	ldr	x0, [sp, #24]
   12e64:	ldr	x1, [x0]
   12e68:	ldr	x0, [sp, #24]
   12e6c:	ldr	x0, [x0, #8]
   12e70:	lsl	x0, x0, #3
   12e74:	add	x1, x1, x0
   12e78:	add	x0, sp, #0x20
   12e7c:	mov	x2, x1
   12e80:	mov	x1, x3
   12e84:	bl	19870 <plugin_init@@Base+0x8830>
   12e88:	add	x0, sp, #0x20
   12e8c:	bl	198a4 <plugin_init@@Base+0x8864>
   12e90:	ldp	x0, x1, [sp, #32]
   12e94:	ldp	x29, x30, [sp], #64
   12e98:	ret
   12e9c:	stp	x29, x30, [sp, #-48]!
   12ea0:	mov	x29, sp
   12ea4:	str	x0, [sp, #24]
   12ea8:	add	x0, sp, #0x20
   12eac:	bl	1984c <plugin_init@@Base+0x880c>
   12eb0:	ldp	x0, x1, [sp, #32]
   12eb4:	ldp	x29, x30, [sp], #48
   12eb8:	ret
   12ebc:	sub	sp, sp, #0x10
   12ec0:	str	x0, [sp, #8]
   12ec4:	str	x1, [sp]
   12ec8:	ldr	x0, [sp, #8]
   12ecc:	ldr	x1, [x0]
   12ed0:	ldr	x0, [sp]
   12ed4:	ldr	x0, [x0]
   12ed8:	cmp	x1, x0
   12edc:	b.ne	12ef8 <plugin_init@@Base+0x1eb8>  // b.any
   12ee0:	ldr	x0, [sp, #8]
   12ee4:	ldr	x1, [x0, #8]
   12ee8:	ldr	x0, [sp]
   12eec:	ldr	x0, [x0, #8]
   12ef0:	cmp	x1, x0
   12ef4:	b.eq	12f00 <plugin_init@@Base+0x1ec0>  // b.none
   12ef8:	mov	w0, #0x1                   	// #1
   12efc:	b	12f04 <plugin_init@@Base+0x1ec4>
   12f00:	mov	w0, #0x0                   	// #0
   12f04:	add	sp, sp, #0x10
   12f08:	ret
   12f0c:	stp	x29, x30, [sp, #-32]!
   12f10:	mov	x29, sp
   12f14:	str	x0, [sp, #24]
   12f18:	ldr	x0, [sp, #24]
   12f1c:	ldr	x0, [x0]
   12f20:	add	x1, x0, #0x8
   12f24:	ldr	x0, [sp, #24]
   12f28:	str	x1, [x0]
   12f2c:	ldr	x0, [sp, #24]
   12f30:	bl	198a4 <plugin_init@@Base+0x8864>
   12f34:	ldr	x0, [sp, #24]
   12f38:	ldp	x29, x30, [sp], #32
   12f3c:	ret
   12f40:	sub	sp, sp, #0x10
   12f44:	str	x0, [sp, #8]
   12f48:	ldr	x0, [sp, #8]
   12f4c:	ldr	x0, [x0]
   12f50:	add	sp, sp, #0x10
   12f54:	ret
   12f58:	stp	x29, x30, [sp, #-64]!
   12f5c:	mov	x29, sp
   12f60:	str	x0, [sp, #24]
   12f64:	ldr	x0, [sp, #24]
   12f68:	ldr	x3, [x0]
   12f6c:	ldr	x0, [sp, #24]
   12f70:	ldr	x1, [x0]
   12f74:	ldr	x0, [sp, #24]
   12f78:	ldr	x0, [x0, #8]
   12f7c:	lsl	x0, x0, #3
   12f80:	add	x1, x1, x0
   12f84:	add	x0, sp, #0x20
   12f88:	mov	x2, x1
   12f8c:	mov	x1, x3
   12f90:	bl	1997c <plugin_init@@Base+0x893c>
   12f94:	add	x0, sp, #0x20
   12f98:	bl	199b0 <plugin_init@@Base+0x8970>
   12f9c:	ldp	x0, x1, [sp, #32]
   12fa0:	ldp	x29, x30, [sp], #64
   12fa4:	ret
   12fa8:	stp	x29, x30, [sp, #-48]!
   12fac:	mov	x29, sp
   12fb0:	str	x0, [sp, #24]
   12fb4:	add	x0, sp, #0x20
   12fb8:	bl	19958 <plugin_init@@Base+0x8918>
   12fbc:	ldp	x0, x1, [sp, #32]
   12fc0:	ldp	x29, x30, [sp], #48
   12fc4:	ret
   12fc8:	sub	sp, sp, #0x10
   12fcc:	str	x0, [sp, #8]
   12fd0:	str	x1, [sp]
   12fd4:	ldr	x0, [sp, #8]
   12fd8:	ldr	x1, [x0]
   12fdc:	ldr	x0, [sp]
   12fe0:	ldr	x0, [x0]
   12fe4:	cmp	x1, x0
   12fe8:	b.ne	13004 <plugin_init@@Base+0x1fc4>  // b.any
   12fec:	ldr	x0, [sp, #8]
   12ff0:	ldr	x1, [x0, #8]
   12ff4:	ldr	x0, [sp]
   12ff8:	ldr	x0, [x0, #8]
   12ffc:	cmp	x1, x0
   13000:	b.eq	1300c <plugin_init@@Base+0x1fcc>  // b.none
   13004:	mov	w0, #0x1                   	// #1
   13008:	b	13010 <plugin_init@@Base+0x1fd0>
   1300c:	mov	w0, #0x0                   	// #0
   13010:	add	sp, sp, #0x10
   13014:	ret
   13018:	stp	x29, x30, [sp, #-32]!
   1301c:	mov	x29, sp
   13020:	str	x0, [sp, #24]
   13024:	ldr	x0, [sp, #24]
   13028:	ldr	x0, [x0]
   1302c:	add	x1, x0, #0x8
   13030:	ldr	x0, [sp, #24]
   13034:	str	x1, [x0]
   13038:	ldr	x0, [sp, #24]
   1303c:	bl	199b0 <plugin_init@@Base+0x8970>
   13040:	ldr	x0, [sp, #24]
   13044:	ldp	x29, x30, [sp], #32
   13048:	ret
   1304c:	sub	sp, sp, #0x10
   13050:	str	x0, [sp, #8]
   13054:	ldr	x0, [sp, #8]
   13058:	ldr	x0, [x0]
   1305c:	add	sp, sp, #0x10
   13060:	ret
   13064:	stp	x29, x30, [sp, #-64]!
   13068:	mov	x29, sp
   1306c:	str	x0, [sp, #56]
   13070:	str	x1, [sp, #48]
   13074:	str	x2, [sp, #40]
   13078:	str	w3, [sp, #36]
   1307c:	str	x4, [sp, #24]
   13080:	mov	w1, #0x51                  	// #81
   13084:	ldr	x0, [sp, #56]
   13088:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   1308c:	cmp	w0, #0x0
   13090:	cset	w0, eq  // eq = none
   13094:	and	w0, w0, #0xff
   13098:	cmp	w0, #0x0
   1309c:	b.eq	130a8 <plugin_init@@Base+0x2068>  // b.none
   130a0:	mov	w0, #0x0                   	// #0
   130a4:	b	13198 <plugin_init@@Base+0x2158>
   130a8:	ldr	x1, [sp, #48]
   130ac:	ldr	x0, [sp, #56]
   130b0:	bl	1c0f0 <plugin_init@@Base+0xb0b0>
   130b4:	cmp	w0, #0x0
   130b8:	cset	w0, eq  // eq = none
   130bc:	and	w0, w0, #0xff
   130c0:	cmp	w0, #0x0
   130c4:	b.eq	130d0 <plugin_init@@Base+0x2090>  // b.none
   130c8:	mov	w0, #0x0                   	// #0
   130cc:	b	13198 <plugin_init@@Base+0x2158>
   130d0:	mov	w1, #0x2                   	// #2
   130d4:	ldr	x0, [sp, #56]
   130d8:	bl	19a64 <plugin_init@@Base+0x8a24>
   130dc:	cmp	w0, #0x0
   130e0:	cset	w0, eq  // eq = none
   130e4:	and	w0, w0, #0xff
   130e8:	cmp	w0, #0x0
   130ec:	b.eq	130f8 <plugin_init@@Base+0x20b8>  // b.none
   130f0:	mov	w0, #0x0                   	// #0
   130f4:	b	13198 <plugin_init@@Base+0x2158>
   130f8:	ldr	w1, [sp, #36]
   130fc:	ldr	x0, [sp, #56]
   13100:	bl	19a8c <plugin_init@@Base+0x8a4c>
   13104:	cmp	w0, #0x0
   13108:	cset	w0, eq  // eq = none
   1310c:	and	w0, w0, #0xff
   13110:	cmp	w0, #0x0
   13114:	b.eq	13120 <plugin_init@@Base+0x20e0>  // b.none
   13118:	mov	w0, #0x0                   	// #0
   1311c:	b	13198 <plugin_init@@Base+0x2158>
   13120:	ldr	x1, [sp, #24]
   13124:	ldr	x0, [sp, #56]
   13128:	bl	1c0f0 <plugin_init@@Base+0xb0b0>
   1312c:	cmp	w0, #0x0
   13130:	cset	w0, eq  // eq = none
   13134:	and	w0, w0, #0xff
   13138:	cmp	w0, #0x0
   1313c:	b.eq	13148 <plugin_init@@Base+0x2108>  // b.none
   13140:	mov	w0, #0x0                   	// #0
   13144:	b	13198 <plugin_init@@Base+0x2158>
   13148:	ldr	x0, [sp, #56]
   1314c:	bl	1224c <plugin_init@@Base+0x120c>
   13150:	cmp	w0, #0x0
   13154:	cset	w0, eq  // eq = none
   13158:	and	w0, w0, #0xff
   1315c:	cmp	w0, #0x0
   13160:	b.eq	1316c <plugin_init@@Base+0x212c>  // b.none
   13164:	mov	w0, #0x0                   	// #0
   13168:	b	13198 <plugin_init@@Base+0x2158>
   1316c:	ldr	x1, [sp, #40]
   13170:	ldr	x0, [sp, #56]
   13174:	bl	19ab4 <plugin_init@@Base+0x8a74>
   13178:	cmp	w0, #0x0
   1317c:	cset	w0, eq  // eq = none
   13180:	and	w0, w0, #0xff
   13184:	cmp	w0, #0x0
   13188:	b.eq	13194 <plugin_init@@Base+0x2154>  // b.none
   1318c:	mov	w0, #0x0                   	// #0
   13190:	b	13198 <plugin_init@@Base+0x2158>
   13194:	mov	w0, #0x1                   	// #1
   13198:	ldp	x29, x30, [sp], #64
   1319c:	ret
   131a0:	stp	x29, x30, [sp, #-48]!
   131a4:	mov	x29, sp
   131a8:	str	x0, [sp, #40]
   131ac:	str	x1, [sp, #32]
   131b0:	str	x2, [sp, #24]
   131b4:	mov	w1, #0x51                  	// #81
   131b8:	ldr	x0, [sp, #40]
   131bc:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   131c0:	cmp	w0, #0x0
   131c4:	cset	w0, eq  // eq = none
   131c8:	and	w0, w0, #0xff
   131cc:	cmp	w0, #0x0
   131d0:	b.eq	131dc <plugin_init@@Base+0x219c>  // b.none
   131d4:	mov	w0, #0x0                   	// #0
   131d8:	b	1327c <plugin_init@@Base+0x223c>
   131dc:	ldr	x1, [sp, #32]
   131e0:	ldr	x0, [sp, #40]
   131e4:	bl	1c0f0 <plugin_init@@Base+0xb0b0>
   131e8:	cmp	w0, #0x0
   131ec:	cset	w0, eq  // eq = none
   131f0:	and	w0, w0, #0xff
   131f4:	cmp	w0, #0x0
   131f8:	b.eq	13204 <plugin_init@@Base+0x21c4>  // b.none
   131fc:	mov	w0, #0x0                   	// #0
   13200:	b	1327c <plugin_init@@Base+0x223c>
   13204:	mov	w1, #0x0                   	// #0
   13208:	ldr	x0, [sp, #40]
   1320c:	bl	19a64 <plugin_init@@Base+0x8a24>
   13210:	cmp	w0, #0x0
   13214:	cset	w0, eq  // eq = none
   13218:	and	w0, w0, #0xff
   1321c:	cmp	w0, #0x0
   13220:	b.eq	1322c <plugin_init@@Base+0x21ec>  // b.none
   13224:	mov	w0, #0x0                   	// #0
   13228:	b	1327c <plugin_init@@Base+0x223c>
   1322c:	ldr	x0, [sp, #40]
   13230:	bl	1224c <plugin_init@@Base+0x120c>
   13234:	cmp	w0, #0x0
   13238:	cset	w0, eq  // eq = none
   1323c:	and	w0, w0, #0xff
   13240:	cmp	w0, #0x0
   13244:	b.eq	13250 <plugin_init@@Base+0x2210>  // b.none
   13248:	mov	w0, #0x0                   	// #0
   1324c:	b	1327c <plugin_init@@Base+0x223c>
   13250:	ldr	x1, [sp, #24]
   13254:	ldr	x0, [sp, #40]
   13258:	bl	19ab4 <plugin_init@@Base+0x8a74>
   1325c:	cmp	w0, #0x0
   13260:	cset	w0, eq  // eq = none
   13264:	and	w0, w0, #0xff
   13268:	cmp	w0, #0x0
   1326c:	b.eq	13278 <plugin_init@@Base+0x2238>  // b.none
   13270:	mov	w0, #0x0                   	// #0
   13274:	b	1327c <plugin_init@@Base+0x223c>
   13278:	mov	w0, #0x1                   	// #1
   1327c:	ldp	x29, x30, [sp], #48
   13280:	ret
   13284:	stp	x29, x30, [sp, #-48]!
   13288:	mov	x29, sp
   1328c:	str	x0, [sp, #24]
   13290:	str	x1, [sp, #16]
   13294:	ldr	x0, [sp, #16]
   13298:	ldr	x0, [x0]
   1329c:	mov	x1, x0
   132a0:	ldr	x0, [sp, #24]
   132a4:	str	x1, [x0]
   132a8:	mov	w0, #0x1                   	// #1
   132ac:	str	w0, [sp, #44]
   132b0:	ldr	w0, [sp, #44]
   132b4:	cmp	w0, #0x1
   132b8:	b.hi	132e4 <plugin_init@@Base+0x22a4>  // b.pmore
   132bc:	ldr	x0, [sp, #24]
   132c0:	bl	19b0c <plugin_init@@Base+0x8acc>
   132c4:	sxtw	x2, w0
   132c8:	ldr	x0, [sp, #24]
   132cc:	ldr	w1, [sp, #44]
   132d0:	str	x2, [x0, x1, lsl #3]
   132d4:	ldr	w0, [sp, #44]
   132d8:	add	w0, w0, #0x1
   132dc:	str	w0, [sp, #44]
   132e0:	b	132b0 <plugin_init@@Base+0x2270>
   132e4:	nop
   132e8:	ldp	x29, x30, [sp], #48
   132ec:	ret
   132f0:	stp	x29, x30, [sp, #-48]!
   132f4:	mov	x29, sp
   132f8:	str	x0, [sp, #40]
   132fc:	str	x1, [sp, #32]
   13300:	str	w2, [sp, #28]
   13304:	ldr	x0, [sp, #32]
   13308:	ldr	x0, [x0]
   1330c:	bl	12678 <plugin_init@@Base+0x1638>
   13310:	ldr	w3, [sp, #28]
   13314:	mov	w2, w0
   13318:	ldr	x1, [sp, #32]
   1331c:	ldr	x0, [sp, #40]
   13320:	bl	19b20 <plugin_init@@Base+0x8ae0>
   13324:	ldp	x29, x30, [sp], #48
   13328:	ret
   1332c:	stp	x29, x30, [sp, #-32]!
   13330:	mov	x29, sp
   13334:	str	x0, [sp, #24]
   13338:	str	x1, [sp, #16]
   1333c:	ldr	x0, [sp, #16]
   13340:	ldr	x0, [x0]
   13344:	bl	12678 <plugin_init@@Base+0x1638>
   13348:	mov	w2, w0
   1334c:	ldr	x1, [sp, #16]
   13350:	ldr	x0, [sp, #24]
   13354:	bl	19dd4 <plugin_init@@Base+0x8d94>
   13358:	ldp	x29, x30, [sp], #32
   1335c:	ret
   13360:	stp	x29, x30, [sp, #-48]!
   13364:	mov	x29, sp
   13368:	str	x0, [sp, #40]
   1336c:	str	x1, [sp, #32]
   13370:	str	x2, [sp, #24]
   13374:	str	x3, [sp, #16]
   13378:	mov	w1, #0x51                  	// #81
   1337c:	ldr	x0, [sp, #40]
   13380:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   13384:	cmp	w0, #0x0
   13388:	cset	w0, eq  // eq = none
   1338c:	and	w0, w0, #0xff
   13390:	cmp	w0, #0x0
   13394:	b.eq	133a0 <plugin_init@@Base+0x2360>  // b.none
   13398:	mov	w0, #0x0                   	// #0
   1339c:	b	13468 <plugin_init@@Base+0x2428>
   133a0:	ldr	x1, [sp, #32]
   133a4:	ldr	x0, [sp, #40]
   133a8:	bl	1c0f0 <plugin_init@@Base+0xb0b0>
   133ac:	cmp	w0, #0x0
   133b0:	cset	w0, eq  // eq = none
   133b4:	and	w0, w0, #0xff
   133b8:	cmp	w0, #0x0
   133bc:	b.eq	133c8 <plugin_init@@Base+0x2388>  // b.none
   133c0:	mov	w0, #0x0                   	// #0
   133c4:	b	13468 <plugin_init@@Base+0x2428>
   133c8:	mov	w1, #0x1                   	// #1
   133cc:	ldr	x0, [sp, #40]
   133d0:	bl	19a64 <plugin_init@@Base+0x8a24>
   133d4:	cmp	w0, #0x0
   133d8:	cset	w0, eq  // eq = none
   133dc:	and	w0, w0, #0xff
   133e0:	cmp	w0, #0x0
   133e4:	b.eq	133f0 <plugin_init@@Base+0x23b0>  // b.none
   133e8:	mov	w0, #0x0                   	// #0
   133ec:	b	13468 <plugin_init@@Base+0x2428>
   133f0:	ldr	x1, [sp, #16]
   133f4:	ldr	x0, [sp, #40]
   133f8:	bl	1c0f0 <plugin_init@@Base+0xb0b0>
   133fc:	cmp	w0, #0x0
   13400:	cset	w0, eq  // eq = none
   13404:	and	w0, w0, #0xff
   13408:	cmp	w0, #0x0
   1340c:	b.eq	13418 <plugin_init@@Base+0x23d8>  // b.none
   13410:	mov	w0, #0x0                   	// #0
   13414:	b	13468 <plugin_init@@Base+0x2428>
   13418:	ldr	x0, [sp, #40]
   1341c:	bl	1224c <plugin_init@@Base+0x120c>
   13420:	cmp	w0, #0x0
   13424:	cset	w0, eq  // eq = none
   13428:	and	w0, w0, #0xff
   1342c:	cmp	w0, #0x0
   13430:	b.eq	1343c <plugin_init@@Base+0x23fc>  // b.none
   13434:	mov	w0, #0x0                   	// #0
   13438:	b	13468 <plugin_init@@Base+0x2428>
   1343c:	ldr	x1, [sp, #24]
   13440:	ldr	x0, [sp, #40]
   13444:	bl	135dc <plugin_init@@Base+0x259c>
   13448:	cmp	w0, #0x0
   1344c:	cset	w0, eq  // eq = none
   13450:	and	w0, w0, #0xff
   13454:	cmp	w0, #0x0
   13458:	b.eq	13464 <plugin_init@@Base+0x2424>  // b.none
   1345c:	mov	w0, #0x0                   	// #0
   13460:	b	13468 <plugin_init@@Base+0x2428>
   13464:	mov	w0, #0x1                   	// #1
   13468:	ldp	x29, x30, [sp], #48
   1346c:	ret
   13470:	stp	x29, x30, [sp, #-32]!
   13474:	mov	x29, sp
   13478:	str	x0, [sp, #24]
   1347c:	str	x1, [sp, #16]
   13480:	mov	w2, #0x0                   	// #0
   13484:	mov	w1, #0x1                   	// #1
   13488:	ldr	x0, [sp, #24]
   1348c:	bl	19f9c <plugin_init@@Base+0x8f5c>
   13490:	ldr	x0, [sp, #24]
   13494:	ldr	x0, [x0]
   13498:	ldr	x1, [sp, #16]
   1349c:	bl	1a018 <plugin_init@@Base+0x8fd8>
   134a0:	ldp	x29, x30, [sp], #32
   134a4:	ret
   134a8:	stp	x29, x30, [sp, #-48]!
   134ac:	mov	x29, sp
   134b0:	str	x0, [sp, #24]
   134b4:	str	x1, [sp, #16]
   134b8:	ldr	x0, [sp, #16]
   134bc:	ldr	x0, [x0]
   134c0:	mov	x1, x0
   134c4:	ldr	x0, [sp, #24]
   134c8:	str	x1, [x0]
   134cc:	mov	w0, #0x1                   	// #1
   134d0:	str	w0, [sp, #44]
   134d4:	ldr	w0, [sp, #44]
   134d8:	cmp	w0, #0x1
   134dc:	b.hi	13508 <plugin_init@@Base+0x24c8>  // b.pmore
   134e0:	ldr	x0, [sp, #24]
   134e4:	bl	19b0c <plugin_init@@Base+0x8acc>
   134e8:	sxtw	x2, w0
   134ec:	ldr	x0, [sp, #24]
   134f0:	ldr	w1, [sp, #44]
   134f4:	str	x2, [x0, x1, lsl #3]
   134f8:	ldr	w0, [sp, #44]
   134fc:	add	w0, w0, #0x1
   13500:	str	w0, [sp, #44]
   13504:	b	134d4 <plugin_init@@Base+0x2494>
   13508:	nop
   1350c:	ldp	x29, x30, [sp], #48
   13510:	ret
   13514:	stp	x29, x30, [sp, #-32]!
   13518:	mov	x29, sp
   1351c:	str	x0, [sp, #24]
   13520:	str	x1, [sp, #16]
   13524:	mov	w2, #0x0                   	// #0
   13528:	mov	w1, #0x1                   	// #1
   1352c:	ldr	x0, [sp, #24]
   13530:	bl	1a06c <plugin_init@@Base+0x902c>
   13534:	ldr	x0, [sp, #24]
   13538:	ldr	x0, [x0]
   1353c:	ldr	x1, [sp, #16]
   13540:	bl	1a0e8 <plugin_init@@Base+0x90a8>
   13544:	ldp	x29, x30, [sp], #32
   13548:	ret
   1354c:	sub	sp, sp, #0x10
   13550:	str	x0, [sp, #8]
   13554:	ldr	x0, [sp, #8]
   13558:	ldr	w0, [x0, #4]
   1355c:	cmp	w0, #0x0
   13560:	cset	w0, eq  // eq = none
   13564:	and	w0, w0, #0xff
   13568:	add	sp, sp, #0x10
   1356c:	ret
   13570:	stp	x29, x30, [sp, #-48]!
   13574:	mov	x29, sp
   13578:	str	x0, [sp, #24]
   1357c:	str	x1, [sp, #16]
   13580:	ldr	x0, [sp, #16]
   13584:	ldr	w0, [x0]
   13588:	sxtw	x1, w0
   1358c:	ldr	x0, [sp, #24]
   13590:	str	x1, [x0]
   13594:	mov	w0, #0x1                   	// #1
   13598:	str	w0, [sp, #44]
   1359c:	ldr	w0, [sp, #44]
   135a0:	cmp	w0, #0x1
   135a4:	b.hi	135d0 <plugin_init@@Base+0x2590>  // b.pmore
   135a8:	ldr	x0, [sp, #24]
   135ac:	bl	19b0c <plugin_init@@Base+0x8acc>
   135b0:	sxtw	x2, w0
   135b4:	ldr	x0, [sp, #24]
   135b8:	ldr	w1, [sp, #44]
   135bc:	str	x2, [x0, x1, lsl #3]
   135c0:	ldr	w0, [sp, #44]
   135c4:	add	w0, w0, #0x1
   135c8:	str	w0, [sp, #44]
   135cc:	b	1359c <plugin_init@@Base+0x255c>
   135d0:	nop
   135d4:	ldp	x29, x30, [sp], #48
   135d8:	ret
   135dc:	stp	x29, x30, [sp, #-48]!
   135e0:	mov	x29, sp
   135e4:	str	x0, [sp, #24]
   135e8:	str	x1, [sp, #16]
   135ec:	add	x0, sp, #0x28
   135f0:	mov	x1, x0
   135f4:	ldr	x0, [sp, #24]
   135f8:	bl	1c09c <plugin_init@@Base+0xb05c>
   135fc:	cmp	w0, #0x0
   13600:	cset	w0, eq  // eq = none
   13604:	and	w0, w0, #0xff
   13608:	cmp	w0, #0x0
   1360c:	b.eq	13618 <plugin_init@@Base+0x25d8>  // b.none
   13610:	mov	w0, #0x0                   	// #0
   13614:	b	13628 <plugin_init@@Base+0x25e8>
   13618:	ldr	x1, [sp, #40]
   1361c:	ldr	x0, [sp, #16]
   13620:	str	x1, [x0]
   13624:	mov	w0, #0x1                   	// #1
   13628:	ldp	x29, x30, [sp], #48
   1362c:	ret
   13630:	stp	x29, x30, [sp, #-64]!
   13634:	mov	x29, sp
   13638:	str	x19, [sp, #16]
   1363c:	str	x0, [sp, #40]
   13640:	add	x0, sp, #0x30
   13644:	bl	122a0 <plugin_init@@Base+0x1260>
   13648:	mov	x1, #0x1                   	// #1
   1364c:	ldr	x0, [sp, #40]
   13650:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   13654:	cmp	w0, #0x0
   13658:	cset	w0, eq  // eq = none
   1365c:	and	w0, w0, #0xff
   13660:	cmp	w0, #0x0
   13664:	b.eq	13670 <plugin_init@@Base+0x2630>  // b.none
   13668:	mov	w19, #0x0                   	// #0
   1366c:	b	136ec <plugin_init@@Base+0x26ac>
   13670:	add	x0, sp, #0x30
   13674:	ldr	x1, [sp, #40]
   13678:	bl	12308 <plugin_init@@Base+0x12c8>
   1367c:	cmp	w0, #0x0
   13680:	cset	w0, eq  // eq = none
   13684:	and	w0, w0, #0xff
   13688:	cmp	w0, #0x0
   1368c:	b.eq	13698 <plugin_init@@Base+0x2658>  // b.none
   13690:	mov	w19, #0x0                   	// #0
   13694:	b	136ec <plugin_init@@Base+0x26ac>
   13698:	add	x0, sp, #0x30
   1369c:	bl	122f0 <plugin_init@@Base+0x12b0>
   136a0:	mov	x1, x0
   136a4:	ldr	x0, [sp, #40]
   136a8:	bl	97b4 <_Z19decl_assembler_nameP9tree_node@plt+0x2a54>
   136ac:	str	w0, [sp, #60]
   136b0:	mov	w1, #0x52                  	// #82
   136b4:	ldr	x0, [sp, #40]
   136b8:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   136bc:	cmp	w0, #0x0
   136c0:	cset	w0, eq  // eq = none
   136c4:	and	w0, w0, #0xff
   136c8:	cmp	w0, #0x0
   136cc:	b.eq	136d8 <plugin_init@@Base+0x2698>  // b.none
   136d0:	mov	w19, #0x0                   	// #0
   136d4:	b	136ec <plugin_init@@Base+0x26ac>
   136d8:	ldr	w1, [sp, #60]
   136dc:	ldr	x0, [sp, #40]
   136e0:	bl	19a64 <plugin_init@@Base+0x8a24>
   136e4:	mov	w19, w0
   136e8:	nop
   136ec:	add	x0, sp, #0x30
   136f0:	bl	122bc <plugin_init@@Base+0x127c>
   136f4:	mov	w0, w19
   136f8:	b	13710 <plugin_init@@Base+0x26d0>
   136fc:	mov	x19, x0
   13700:	add	x0, sp, #0x30
   13704:	bl	122bc <plugin_init@@Base+0x127c>
   13708:	mov	x0, x19
   1370c:	bl	6c60 <_Unwind_Resume@plt>
   13710:	ldr	x19, [sp, #16]
   13714:	ldp	x29, x30, [sp], #64
   13718:	ret
   1371c:	stp	x29, x30, [sp, #-64]!
   13720:	mov	x29, sp
   13724:	str	x19, [sp, #16]
   13728:	str	x0, [sp, #40]
   1372c:	add	x0, sp, #0x30
   13730:	bl	1a13c <plugin_init@@Base+0x90fc>
   13734:	mov	x1, #0x1                   	// #1
   13738:	ldr	x0, [sp, #40]
   1373c:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   13740:	cmp	w0, #0x0
   13744:	cset	w0, eq  // eq = none
   13748:	and	w0, w0, #0xff
   1374c:	cmp	w0, #0x0
   13750:	b.eq	1375c <plugin_init@@Base+0x271c>  // b.none
   13754:	mov	w19, #0x0                   	// #0
   13758:	b	137d8 <plugin_init@@Base+0x2798>
   1375c:	add	x0, sp, #0x30
   13760:	ldr	x1, [sp, #40]
   13764:	bl	1a164 <plugin_init@@Base+0x9124>
   13768:	cmp	w0, #0x0
   1376c:	cset	w0, eq  // eq = none
   13770:	and	w0, w0, #0xff
   13774:	cmp	w0, #0x0
   13778:	b.eq	13784 <plugin_init@@Base+0x2744>  // b.none
   1377c:	mov	w19, #0x0                   	// #0
   13780:	b	137d8 <plugin_init@@Base+0x2798>
   13784:	add	x0, sp, #0x30
   13788:	bl	1a18c <plugin_init@@Base+0x914c>
   1378c:	mov	x1, x0
   13790:	ldr	x0, [sp, #40]
   13794:	bl	9818 <_Z19decl_assembler_nameP9tree_node@plt+0x2ab8>
   13798:	str	w0, [sp, #60]
   1379c:	mov	w1, #0x52                  	// #82
   137a0:	ldr	x0, [sp, #40]
   137a4:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   137a8:	cmp	w0, #0x0
   137ac:	cset	w0, eq  // eq = none
   137b0:	and	w0, w0, #0xff
   137b4:	cmp	w0, #0x0
   137b8:	b.eq	137c4 <plugin_init@@Base+0x2784>  // b.none
   137bc:	mov	w19, #0x0                   	// #0
   137c0:	b	137d8 <plugin_init@@Base+0x2798>
   137c4:	ldr	w1, [sp, #60]
   137c8:	ldr	x0, [sp, #40]
   137cc:	bl	19a64 <plugin_init@@Base+0x8a24>
   137d0:	mov	w19, w0
   137d4:	nop
   137d8:	add	x0, sp, #0x30
   137dc:	bl	1a150 <plugin_init@@Base+0x9110>
   137e0:	mov	w0, w19
   137e4:	b	137fc <plugin_init@@Base+0x27bc>
   137e8:	mov	x19, x0
   137ec:	add	x0, sp, #0x30
   137f0:	bl	1a150 <plugin_init@@Base+0x9110>
   137f4:	mov	x0, x19
   137f8:	bl	6c60 <_Unwind_Resume@plt>
   137fc:	ldr	x19, [sp, #16]
   13800:	ldp	x29, x30, [sp], #64
   13804:	ret
   13808:	stp	x29, x30, [sp, #-64]!
   1380c:	mov	x29, sp
   13810:	str	x19, [sp, #16]
   13814:	str	x0, [sp, #40]
   13818:	add	x0, sp, #0x30
   1381c:	bl	1a13c <plugin_init@@Base+0x90fc>
   13820:	mov	x1, #0x1                   	// #1
   13824:	ldr	x0, [sp, #40]
   13828:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   1382c:	cmp	w0, #0x0
   13830:	cset	w0, eq  // eq = none
   13834:	and	w0, w0, #0xff
   13838:	cmp	w0, #0x0
   1383c:	b.eq	13848 <plugin_init@@Base+0x2808>  // b.none
   13840:	mov	w19, #0x0                   	// #0
   13844:	b	138c4 <plugin_init@@Base+0x2884>
   13848:	add	x0, sp, #0x30
   1384c:	ldr	x1, [sp, #40]
   13850:	bl	1a164 <plugin_init@@Base+0x9124>
   13854:	cmp	w0, #0x0
   13858:	cset	w0, eq  // eq = none
   1385c:	and	w0, w0, #0xff
   13860:	cmp	w0, #0x0
   13864:	b.eq	13870 <plugin_init@@Base+0x2830>  // b.none
   13868:	mov	w19, #0x0                   	// #0
   1386c:	b	138c4 <plugin_init@@Base+0x2884>
   13870:	add	x0, sp, #0x30
   13874:	bl	1a18c <plugin_init@@Base+0x914c>
   13878:	mov	x1, x0
   1387c:	ldr	x0, [sp, #40]
   13880:	bl	98dc <_Z19decl_assembler_nameP9tree_node@plt+0x2b7c>
   13884:	str	w0, [sp, #60]
   13888:	mov	w1, #0x52                  	// #82
   1388c:	ldr	x0, [sp, #40]
   13890:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   13894:	cmp	w0, #0x0
   13898:	cset	w0, eq  // eq = none
   1389c:	and	w0, w0, #0xff
   138a0:	cmp	w0, #0x0
   138a4:	b.eq	138b0 <plugin_init@@Base+0x2870>  // b.none
   138a8:	mov	w19, #0x0                   	// #0
   138ac:	b	138c4 <plugin_init@@Base+0x2884>
   138b0:	ldr	w1, [sp, #60]
   138b4:	ldr	x0, [sp, #40]
   138b8:	bl	19a64 <plugin_init@@Base+0x8a24>
   138bc:	mov	w19, w0
   138c0:	nop
   138c4:	add	x0, sp, #0x30
   138c8:	bl	1a150 <plugin_init@@Base+0x9110>
   138cc:	mov	w0, w19
   138d0:	b	138e8 <plugin_init@@Base+0x28a8>
   138d4:	mov	x19, x0
   138d8:	add	x0, sp, #0x30
   138dc:	bl	1a150 <plugin_init@@Base+0x9110>
   138e0:	mov	x0, x19
   138e4:	bl	6c60 <_Unwind_Resume@plt>
   138e8:	ldr	x19, [sp, #16]
   138ec:	ldp	x29, x30, [sp], #64
   138f0:	ret
   138f4:	stp	x29, x30, [sp, #-80]!
   138f8:	mov	x29, sp
   138fc:	str	x19, [sp, #16]
   13900:	str	x0, [sp, #40]
   13904:	add	x0, sp, #0x40
   13908:	bl	1a13c <plugin_init@@Base+0x90fc>
   1390c:	add	x0, sp, #0x38
   13910:	bl	1a13c <plugin_init@@Base+0x90fc>
   13914:	mov	x1, #0x2                   	// #2
   13918:	ldr	x0, [sp, #40]
   1391c:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   13920:	cmp	w0, #0x0
   13924:	cset	w0, eq  // eq = none
   13928:	and	w0, w0, #0xff
   1392c:	cmp	w0, #0x0
   13930:	b.eq	1393c <plugin_init@@Base+0x28fc>  // b.none
   13934:	mov	w19, #0x0                   	// #0
   13938:	b	139f0 <plugin_init@@Base+0x29b0>
   1393c:	add	x0, sp, #0x40
   13940:	ldr	x1, [sp, #40]
   13944:	bl	1a164 <plugin_init@@Base+0x9124>
   13948:	cmp	w0, #0x0
   1394c:	cset	w0, eq  // eq = none
   13950:	and	w0, w0, #0xff
   13954:	cmp	w0, #0x0
   13958:	b.eq	13964 <plugin_init@@Base+0x2924>  // b.none
   1395c:	mov	w19, #0x0                   	// #0
   13960:	b	139f0 <plugin_init@@Base+0x29b0>
   13964:	add	x0, sp, #0x38
   13968:	ldr	x1, [sp, #40]
   1396c:	bl	1a164 <plugin_init@@Base+0x9124>
   13970:	cmp	w0, #0x0
   13974:	cset	w0, eq  // eq = none
   13978:	and	w0, w0, #0xff
   1397c:	cmp	w0, #0x0
   13980:	b.eq	1398c <plugin_init@@Base+0x294c>  // b.none
   13984:	mov	w19, #0x0                   	// #0
   13988:	b	139f0 <plugin_init@@Base+0x29b0>
   1398c:	add	x0, sp, #0x40
   13990:	bl	1a18c <plugin_init@@Base+0x914c>
   13994:	mov	x19, x0
   13998:	add	x0, sp, #0x38
   1399c:	bl	1a18c <plugin_init@@Base+0x914c>
   139a0:	mov	x2, x0
   139a4:	mov	x1, x19
   139a8:	ldr	x0, [sp, #40]
   139ac:	bl	99b0 <_Z19decl_assembler_nameP9tree_node@plt+0x2c50>
   139b0:	str	w0, [sp, #76]
   139b4:	mov	w1, #0x52                  	// #82
   139b8:	ldr	x0, [sp, #40]
   139bc:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   139c0:	cmp	w0, #0x0
   139c4:	cset	w0, eq  // eq = none
   139c8:	and	w0, w0, #0xff
   139cc:	cmp	w0, #0x0
   139d0:	b.eq	139dc <plugin_init@@Base+0x299c>  // b.none
   139d4:	mov	w19, #0x0                   	// #0
   139d8:	b	139f0 <plugin_init@@Base+0x29b0>
   139dc:	ldr	w1, [sp, #76]
   139e0:	ldr	x0, [sp, #40]
   139e4:	bl	19a64 <plugin_init@@Base+0x8a24>
   139e8:	mov	w19, w0
   139ec:	nop
   139f0:	add	x0, sp, #0x38
   139f4:	bl	1a150 <plugin_init@@Base+0x9110>
   139f8:	add	x0, sp, #0x40
   139fc:	bl	1a150 <plugin_init@@Base+0x9110>
   13a00:	mov	w0, w19
   13a04:	b	13a24 <plugin_init@@Base+0x29e4>
   13a08:	mov	x19, x0
   13a0c:	add	x0, sp, #0x38
   13a10:	bl	1a150 <plugin_init@@Base+0x9110>
   13a14:	add	x0, sp, #0x40
   13a18:	bl	1a150 <plugin_init@@Base+0x9110>
   13a1c:	mov	x0, x19
   13a20:	bl	6c60 <_Unwind_Resume@plt>
   13a24:	ldr	x19, [sp, #16]
   13a28:	ldp	x29, x30, [sp], #80
   13a2c:	ret
   13a30:	stp	x29, x30, [sp, #-48]!
   13a34:	mov	x29, sp
   13a38:	str	x0, [sp, #24]
   13a3c:	mov	x1, #0x0                   	// #0
   13a40:	ldr	x0, [sp, #24]
   13a44:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   13a48:	cmp	w0, #0x0
   13a4c:	cset	w0, eq  // eq = none
   13a50:	and	w0, w0, #0xff
   13a54:	cmp	w0, #0x0
   13a58:	b.eq	13a64 <plugin_init@@Base+0x2a24>  // b.none
   13a5c:	mov	w0, #0x0                   	// #0
   13a60:	b	13aa8 <plugin_init@@Base+0x2a68>
   13a64:	ldr	x0, [sp, #24]
   13a68:	bl	9994 <_Z19decl_assembler_nameP9tree_node@plt+0x2c34>
   13a6c:	str	w0, [sp, #44]
   13a70:	mov	w1, #0x52                  	// #82
   13a74:	ldr	x0, [sp, #24]
   13a78:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   13a7c:	cmp	w0, #0x0
   13a80:	cset	w0, eq  // eq = none
   13a84:	and	w0, w0, #0xff
   13a88:	cmp	w0, #0x0
   13a8c:	b.eq	13a98 <plugin_init@@Base+0x2a58>  // b.none
   13a90:	mov	w0, #0x0                   	// #0
   13a94:	b	13aa8 <plugin_init@@Base+0x2a68>
   13a98:	ldr	w1, [sp, #44]
   13a9c:	ldr	x0, [sp, #24]
   13aa0:	bl	19a64 <plugin_init@@Base+0x8a24>
   13aa4:	nop
   13aa8:	ldp	x29, x30, [sp], #48
   13aac:	ret
   13ab0:	stp	x29, x30, [sp, #-48]!
   13ab4:	mov	x29, sp
   13ab8:	str	x0, [sp, #24]
   13abc:	mov	x1, #0x0                   	// #0
   13ac0:	ldr	x0, [sp, #24]
   13ac4:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   13ac8:	cmp	w0, #0x0
   13acc:	cset	w0, eq  // eq = none
   13ad0:	and	w0, w0, #0xff
   13ad4:	cmp	w0, #0x0
   13ad8:	b.eq	13ae4 <plugin_init@@Base+0x2aa4>  // b.none
   13adc:	mov	w0, #0x0                   	// #0
   13ae0:	b	13b28 <plugin_init@@Base+0x2ae8>
   13ae4:	ldr	x0, [sp, #24]
   13ae8:	bl	9ca4 <_Z19decl_assembler_nameP9tree_node@plt+0x2f44>
   13aec:	str	x0, [sp, #40]
   13af0:	mov	w1, #0x52                  	// #82
   13af4:	ldr	x0, [sp, #24]
   13af8:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   13afc:	cmp	w0, #0x0
   13b00:	cset	w0, eq  // eq = none
   13b04:	and	w0, w0, #0xff
   13b08:	cmp	w0, #0x0
   13b0c:	b.eq	13b18 <plugin_init@@Base+0x2ad8>  // b.none
   13b10:	mov	w0, #0x0                   	// #0
   13b14:	b	13b28 <plugin_init@@Base+0x2ae8>
   13b18:	ldr	x1, [sp, #40]
   13b1c:	ldr	x0, [sp, #24]
   13b20:	bl	1a1a4 <plugin_init@@Base+0x9164>
   13b24:	nop
   13b28:	ldp	x29, x30, [sp], #48
   13b2c:	ret
   13b30:	stp	x29, x30, [sp, #-48]!
   13b34:	mov	x29, sp
   13b38:	str	x0, [sp, #24]
   13b3c:	mov	x1, #0x0                   	// #0
   13b40:	ldr	x0, [sp, #24]
   13b44:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   13b48:	cmp	w0, #0x0
   13b4c:	cset	w0, eq  // eq = none
   13b50:	and	w0, w0, #0xff
   13b54:	cmp	w0, #0x0
   13b58:	b.eq	13b64 <plugin_init@@Base+0x2b24>  // b.none
   13b5c:	mov	w0, #0x0                   	// #0
   13b60:	b	13ba8 <plugin_init@@Base+0x2b68>
   13b64:	ldr	x0, [sp, #24]
   13b68:	bl	9cc8 <_Z19decl_assembler_nameP9tree_node@plt+0x2f68>
   13b6c:	str	w0, [sp, #44]
   13b70:	mov	w1, #0x52                  	// #82
   13b74:	ldr	x0, [sp, #24]
   13b78:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   13b7c:	cmp	w0, #0x0
   13b80:	cset	w0, eq  // eq = none
   13b84:	and	w0, w0, #0xff
   13b88:	cmp	w0, #0x0
   13b8c:	b.eq	13b98 <plugin_init@@Base+0x2b58>  // b.none
   13b90:	mov	w0, #0x0                   	// #0
   13b94:	b	13ba8 <plugin_init@@Base+0x2b68>
   13b98:	ldr	w1, [sp, #44]
   13b9c:	ldr	x0, [sp, #24]
   13ba0:	bl	19a64 <plugin_init@@Base+0x8a24>
   13ba4:	nop
   13ba8:	ldp	x29, x30, [sp], #48
   13bac:	ret
   13bb0:	stp	x29, x30, [sp, #-64]!
   13bb4:	mov	x29, sp
   13bb8:	str	x19, [sp, #16]
   13bbc:	str	x0, [sp, #40]
   13bc0:	add	x0, sp, #0x30
   13bc4:	bl	1a13c <plugin_init@@Base+0x90fc>
   13bc8:	mov	x1, #0x1                   	// #1
   13bcc:	ldr	x0, [sp, #40]
   13bd0:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   13bd4:	cmp	w0, #0x0
   13bd8:	cset	w0, eq  // eq = none
   13bdc:	and	w0, w0, #0xff
   13be0:	cmp	w0, #0x0
   13be4:	b.eq	13bf0 <plugin_init@@Base+0x2bb0>  // b.none
   13be8:	mov	w19, #0x0                   	// #0
   13bec:	b	13c6c <plugin_init@@Base+0x2c2c>
   13bf0:	add	x0, sp, #0x30
   13bf4:	ldr	x1, [sp, #40]
   13bf8:	bl	1a164 <plugin_init@@Base+0x9124>
   13bfc:	cmp	w0, #0x0
   13c00:	cset	w0, eq  // eq = none
   13c04:	and	w0, w0, #0xff
   13c08:	cmp	w0, #0x0
   13c0c:	b.eq	13c18 <plugin_init@@Base+0x2bd8>  // b.none
   13c10:	mov	w19, #0x0                   	// #0
   13c14:	b	13c6c <plugin_init@@Base+0x2c2c>
   13c18:	add	x0, sp, #0x30
   13c1c:	bl	1a18c <plugin_init@@Base+0x914c>
   13c20:	mov	x1, x0
   13c24:	ldr	x0, [sp, #40]
   13c28:	bl	9dd8 <_Z19decl_assembler_nameP9tree_node@plt+0x3078>
   13c2c:	str	w0, [sp, #60]
   13c30:	mov	w1, #0x52                  	// #82
   13c34:	ldr	x0, [sp, #40]
   13c38:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   13c3c:	cmp	w0, #0x0
   13c40:	cset	w0, eq  // eq = none
   13c44:	and	w0, w0, #0xff
   13c48:	cmp	w0, #0x0
   13c4c:	b.eq	13c58 <plugin_init@@Base+0x2c18>  // b.none
   13c50:	mov	w19, #0x0                   	// #0
   13c54:	b	13c6c <plugin_init@@Base+0x2c2c>
   13c58:	ldr	w1, [sp, #60]
   13c5c:	ldr	x0, [sp, #40]
   13c60:	bl	19a64 <plugin_init@@Base+0x8a24>
   13c64:	mov	w19, w0
   13c68:	nop
   13c6c:	add	x0, sp, #0x30
   13c70:	bl	1a150 <plugin_init@@Base+0x9110>
   13c74:	mov	w0, w19
   13c78:	b	13c90 <plugin_init@@Base+0x2c50>
   13c7c:	mov	x19, x0
   13c80:	add	x0, sp, #0x30
   13c84:	bl	1a150 <plugin_init@@Base+0x9110>
   13c88:	mov	x0, x19
   13c8c:	bl	6c60 <_Unwind_Resume@plt>
   13c90:	ldr	x19, [sp, #16]
   13c94:	ldp	x29, x30, [sp], #64
   13c98:	ret
   13c9c:	stp	x29, x30, [sp, #-80]!
   13ca0:	mov	x29, sp
   13ca4:	str	x19, [sp, #16]
   13ca8:	str	x0, [sp, #40]
   13cac:	add	x0, sp, #0x40
   13cb0:	bl	122a0 <plugin_init@@Base+0x1260>
   13cb4:	add	x0, sp, #0x38
   13cb8:	bl	1a13c <plugin_init@@Base+0x90fc>
   13cbc:	mov	x1, #0x2                   	// #2
   13cc0:	ldr	x0, [sp, #40]
   13cc4:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   13cc8:	cmp	w0, #0x0
   13ccc:	cset	w0, eq  // eq = none
   13cd0:	and	w0, w0, #0xff
   13cd4:	cmp	w0, #0x0
   13cd8:	b.eq	13ce4 <plugin_init@@Base+0x2ca4>  // b.none
   13cdc:	mov	w19, #0x0                   	// #0
   13ce0:	b	13d98 <plugin_init@@Base+0x2d58>
   13ce4:	add	x0, sp, #0x40
   13ce8:	ldr	x1, [sp, #40]
   13cec:	bl	12308 <plugin_init@@Base+0x12c8>
   13cf0:	cmp	w0, #0x0
   13cf4:	cset	w0, eq  // eq = none
   13cf8:	and	w0, w0, #0xff
   13cfc:	cmp	w0, #0x0
   13d00:	b.eq	13d0c <plugin_init@@Base+0x2ccc>  // b.none
   13d04:	mov	w19, #0x0                   	// #0
   13d08:	b	13d98 <plugin_init@@Base+0x2d58>
   13d0c:	add	x0, sp, #0x38
   13d10:	ldr	x1, [sp, #40]
   13d14:	bl	1a164 <plugin_init@@Base+0x9124>
   13d18:	cmp	w0, #0x0
   13d1c:	cset	w0, eq  // eq = none
   13d20:	and	w0, w0, #0xff
   13d24:	cmp	w0, #0x0
   13d28:	b.eq	13d34 <plugin_init@@Base+0x2cf4>  // b.none
   13d2c:	mov	w19, #0x0                   	// #0
   13d30:	b	13d98 <plugin_init@@Base+0x2d58>
   13d34:	add	x0, sp, #0x40
   13d38:	bl	122f0 <plugin_init@@Base+0x12b0>
   13d3c:	mov	x19, x0
   13d40:	add	x0, sp, #0x38
   13d44:	bl	1a18c <plugin_init@@Base+0x914c>
   13d48:	mov	x2, x0
   13d4c:	mov	x1, x19
   13d50:	ldr	x0, [sp, #40]
   13d54:	bl	9e34 <_Z19decl_assembler_nameP9tree_node@plt+0x30d4>
   13d58:	str	w0, [sp, #76]
   13d5c:	mov	w1, #0x52                  	// #82
   13d60:	ldr	x0, [sp, #40]
   13d64:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   13d68:	cmp	w0, #0x0
   13d6c:	cset	w0, eq  // eq = none
   13d70:	and	w0, w0, #0xff
   13d74:	cmp	w0, #0x0
   13d78:	b.eq	13d84 <plugin_init@@Base+0x2d44>  // b.none
   13d7c:	mov	w19, #0x0                   	// #0
   13d80:	b	13d98 <plugin_init@@Base+0x2d58>
   13d84:	ldr	w1, [sp, #76]
   13d88:	ldr	x0, [sp, #40]
   13d8c:	bl	19a64 <plugin_init@@Base+0x8a24>
   13d90:	mov	w19, w0
   13d94:	nop
   13d98:	add	x0, sp, #0x38
   13d9c:	bl	1a150 <plugin_init@@Base+0x9110>
   13da0:	add	x0, sp, #0x40
   13da4:	bl	122bc <plugin_init@@Base+0x127c>
   13da8:	mov	w0, w19
   13dac:	b	13dcc <plugin_init@@Base+0x2d8c>
   13db0:	mov	x19, x0
   13db4:	add	x0, sp, #0x38
   13db8:	bl	1a150 <plugin_init@@Base+0x9110>
   13dbc:	add	x0, sp, #0x40
   13dc0:	bl	122bc <plugin_init@@Base+0x127c>
   13dc4:	mov	x0, x19
   13dc8:	bl	6c60 <_Unwind_Resume@plt>
   13dcc:	ldr	x19, [sp, #16]
   13dd0:	ldp	x29, x30, [sp], #80
   13dd4:	ret
   13dd8:	stp	x29, x30, [sp, #-64]!
   13ddc:	mov	x29, sp
   13de0:	str	x19, [sp, #16]
   13de4:	str	x0, [sp, #40]
   13de8:	add	x0, sp, #0x38
   13dec:	bl	1a1c8 <plugin_init@@Base+0x9188>
   13df0:	add	x0, sp, #0x30
   13df4:	bl	1a13c <plugin_init@@Base+0x90fc>
   13df8:	mov	x1, #0x2                   	// #2
   13dfc:	ldr	x0, [sp, #40]
   13e00:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   13e04:	cmp	w0, #0x0
   13e08:	cset	w0, eq  // eq = none
   13e0c:	and	w0, w0, #0xff
   13e10:	cmp	w0, #0x0
   13e14:	b.eq	13e20 <plugin_init@@Base+0x2de0>  // b.none
   13e18:	mov	w19, #0x0                   	// #0
   13e1c:	b	13ed4 <plugin_init@@Base+0x2e94>
   13e20:	add	x0, sp, #0x38
   13e24:	ldr	x1, [sp, #40]
   13e28:	bl	1a1f0 <plugin_init@@Base+0x91b0>
   13e2c:	cmp	w0, #0x0
   13e30:	cset	w0, eq  // eq = none
   13e34:	and	w0, w0, #0xff
   13e38:	cmp	w0, #0x0
   13e3c:	b.eq	13e48 <plugin_init@@Base+0x2e08>  // b.none
   13e40:	mov	w19, #0x0                   	// #0
   13e44:	b	13ed4 <plugin_init@@Base+0x2e94>
   13e48:	add	x0, sp, #0x30
   13e4c:	ldr	x1, [sp, #40]
   13e50:	bl	1a164 <plugin_init@@Base+0x9124>
   13e54:	cmp	w0, #0x0
   13e58:	cset	w0, eq  // eq = none
   13e5c:	and	w0, w0, #0xff
   13e60:	cmp	w0, #0x0
   13e64:	b.eq	13e70 <plugin_init@@Base+0x2e30>  // b.none
   13e68:	mov	w19, #0x0                   	// #0
   13e6c:	b	13ed4 <plugin_init@@Base+0x2e94>
   13e70:	add	x0, sp, #0x38
   13e74:	bl	1a218 <plugin_init@@Base+0x91d8>
   13e78:	mov	w19, w0
   13e7c:	add	x0, sp, #0x30
   13e80:	bl	1a18c <plugin_init@@Base+0x914c>
   13e84:	mov	x2, x0
   13e88:	mov	w1, w19
   13e8c:	ldr	x0, [sp, #40]
   13e90:	bl	9fc0 <_Z19decl_assembler_nameP9tree_node@plt+0x3260>
   13e94:	str	w0, [sp, #60]
   13e98:	mov	w1, #0x52                  	// #82
   13e9c:	ldr	x0, [sp, #40]
   13ea0:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   13ea4:	cmp	w0, #0x0
   13ea8:	cset	w0, eq  // eq = none
   13eac:	and	w0, w0, #0xff
   13eb0:	cmp	w0, #0x0
   13eb4:	b.eq	13ec0 <plugin_init@@Base+0x2e80>  // b.none
   13eb8:	mov	w19, #0x0                   	// #0
   13ebc:	b	13ed4 <plugin_init@@Base+0x2e94>
   13ec0:	ldr	w1, [sp, #60]
   13ec4:	ldr	x0, [sp, #40]
   13ec8:	bl	19a64 <plugin_init@@Base+0x8a24>
   13ecc:	mov	w19, w0
   13ed0:	nop
   13ed4:	add	x0, sp, #0x30
   13ed8:	bl	1a150 <plugin_init@@Base+0x9110>
   13edc:	add	x0, sp, #0x38
   13ee0:	bl	1a1dc <plugin_init@@Base+0x919c>
   13ee4:	mov	w0, w19
   13ee8:	b	13f08 <plugin_init@@Base+0x2ec8>
   13eec:	mov	x19, x0
   13ef0:	add	x0, sp, #0x30
   13ef4:	bl	1a150 <plugin_init@@Base+0x9110>
   13ef8:	add	x0, sp, #0x38
   13efc:	bl	1a1dc <plugin_init@@Base+0x919c>
   13f00:	mov	x0, x19
   13f04:	bl	6c60 <_Unwind_Resume@plt>
   13f08:	ldr	x19, [sp, #16]
   13f0c:	ldp	x29, x30, [sp], #64
   13f10:	ret
   13f14:	stp	x29, x30, [sp, #-144]!
   13f18:	mov	x29, sp
   13f1c:	stp	x19, x20, [sp, #16]
   13f20:	stp	x21, x22, [sp, #32]
   13f24:	stp	x23, x24, [sp, #48]
   13f28:	str	x0, [sp, #72]
   13f2c:	add	x0, sp, #0x80
   13f30:	bl	122a0 <plugin_init@@Base+0x1260>
   13f34:	add	x0, sp, #0x78
   13f38:	bl	1a1c8 <plugin_init@@Base+0x9188>
   13f3c:	add	x0, sp, #0x70
   13f40:	bl	1a13c <plugin_init@@Base+0x90fc>
   13f44:	add	x0, sp, #0x68
   13f48:	bl	122a0 <plugin_init@@Base+0x1260>
   13f4c:	add	x0, sp, #0x60
   13f50:	bl	1a13c <plugin_init@@Base+0x90fc>
   13f54:	add	x0, sp, #0x58
   13f58:	bl	122a0 <plugin_init@@Base+0x1260>
   13f5c:	add	x0, sp, #0x50
   13f60:	bl	1a230 <plugin_init@@Base+0x91f0>
   13f64:	mov	x1, #0x7                   	// #7
   13f68:	ldr	x0, [sp, #72]
   13f6c:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   13f70:	cmp	w0, #0x0
   13f74:	cset	w0, eq  // eq = none
   13f78:	and	w0, w0, #0xff
   13f7c:	cmp	w0, #0x0
   13f80:	b.eq	13f8c <plugin_init@@Base+0x2f4c>  // b.none
   13f84:	mov	w19, #0x0                   	// #0
   13f88:	b	14158 <plugin_init@@Base+0x3118>
   13f8c:	add	x0, sp, #0x80
   13f90:	ldr	x1, [sp, #72]
   13f94:	bl	12308 <plugin_init@@Base+0x12c8>
   13f98:	cmp	w0, #0x0
   13f9c:	cset	w0, eq  // eq = none
   13fa0:	and	w0, w0, #0xff
   13fa4:	cmp	w0, #0x0
   13fa8:	b.eq	13fb4 <plugin_init@@Base+0x2f74>  // b.none
   13fac:	mov	w19, #0x0                   	// #0
   13fb0:	b	14158 <plugin_init@@Base+0x3118>
   13fb4:	add	x0, sp, #0x78
   13fb8:	ldr	x1, [sp, #72]
   13fbc:	bl	1a1f0 <plugin_init@@Base+0x91b0>
   13fc0:	cmp	w0, #0x0
   13fc4:	cset	w0, eq  // eq = none
   13fc8:	and	w0, w0, #0xff
   13fcc:	cmp	w0, #0x0
   13fd0:	b.eq	13fdc <plugin_init@@Base+0x2f9c>  // b.none
   13fd4:	mov	w19, #0x0                   	// #0
   13fd8:	b	14158 <plugin_init@@Base+0x3118>
   13fdc:	add	x0, sp, #0x70
   13fe0:	ldr	x1, [sp, #72]
   13fe4:	bl	1a164 <plugin_init@@Base+0x9124>
   13fe8:	cmp	w0, #0x0
   13fec:	cset	w0, eq  // eq = none
   13ff0:	and	w0, w0, #0xff
   13ff4:	cmp	w0, #0x0
   13ff8:	b.eq	14004 <plugin_init@@Base+0x2fc4>  // b.none
   13ffc:	mov	w19, #0x0                   	// #0
   14000:	b	14158 <plugin_init@@Base+0x3118>
   14004:	add	x0, sp, #0x68
   14008:	ldr	x1, [sp, #72]
   1400c:	bl	12308 <plugin_init@@Base+0x12c8>
   14010:	cmp	w0, #0x0
   14014:	cset	w0, eq  // eq = none
   14018:	and	w0, w0, #0xff
   1401c:	cmp	w0, #0x0
   14020:	b.eq	1402c <plugin_init@@Base+0x2fec>  // b.none
   14024:	mov	w19, #0x0                   	// #0
   14028:	b	14158 <plugin_init@@Base+0x3118>
   1402c:	add	x0, sp, #0x60
   14030:	ldr	x1, [sp, #72]
   14034:	bl	1a164 <plugin_init@@Base+0x9124>
   14038:	cmp	w0, #0x0
   1403c:	cset	w0, eq  // eq = none
   14040:	and	w0, w0, #0xff
   14044:	cmp	w0, #0x0
   14048:	b.eq	14054 <plugin_init@@Base+0x3014>  // b.none
   1404c:	mov	w19, #0x0                   	// #0
   14050:	b	14158 <plugin_init@@Base+0x3118>
   14054:	add	x0, sp, #0x58
   14058:	ldr	x1, [sp, #72]
   1405c:	bl	12308 <plugin_init@@Base+0x12c8>
   14060:	cmp	w0, #0x0
   14064:	cset	w0, eq  // eq = none
   14068:	and	w0, w0, #0xff
   1406c:	cmp	w0, #0x0
   14070:	b.eq	1407c <plugin_init@@Base+0x303c>  // b.none
   14074:	mov	w19, #0x0                   	// #0
   14078:	b	14158 <plugin_init@@Base+0x3118>
   1407c:	add	x0, sp, #0x50
   14080:	ldr	x1, [sp, #72]
   14084:	bl	1a258 <plugin_init@@Base+0x9218>
   14088:	cmp	w0, #0x0
   1408c:	cset	w0, eq  // eq = none
   14090:	and	w0, w0, #0xff
   14094:	cmp	w0, #0x0
   14098:	b.eq	140a4 <plugin_init@@Base+0x3064>  // b.none
   1409c:	mov	w19, #0x0                   	// #0
   140a0:	b	14158 <plugin_init@@Base+0x3118>
   140a4:	add	x0, sp, #0x80
   140a8:	bl	122f0 <plugin_init@@Base+0x12b0>
   140ac:	mov	x19, x0
   140b0:	add	x0, sp, #0x78
   140b4:	bl	1a218 <plugin_init@@Base+0x91d8>
   140b8:	mov	w20, w0
   140bc:	add	x0, sp, #0x70
   140c0:	bl	1a18c <plugin_init@@Base+0x914c>
   140c4:	mov	x21, x0
   140c8:	add	x0, sp, #0x68
   140cc:	bl	122f0 <plugin_init@@Base+0x12b0>
   140d0:	mov	x22, x0
   140d4:	add	x0, sp, #0x60
   140d8:	bl	1a18c <plugin_init@@Base+0x914c>
   140dc:	mov	x23, x0
   140e0:	add	x0, sp, #0x58
   140e4:	bl	122f0 <plugin_init@@Base+0x12b0>
   140e8:	mov	x24, x0
   140ec:	add	x0, sp, #0x50
   140f0:	bl	1a280 <plugin_init@@Base+0x9240>
   140f4:	mov	w7, w0
   140f8:	mov	x6, x24
   140fc:	mov	x5, x23
   14100:	mov	x4, x22
   14104:	mov	x3, x21
   14108:	mov	w2, w20
   1410c:	mov	x1, x19
   14110:	ldr	x0, [sp, #72]
   14114:	bl	a244 <_Z19decl_assembler_nameP9tree_node@plt+0x34e4>
   14118:	str	x0, [sp, #136]
   1411c:	mov	w1, #0x52                  	// #82
   14120:	ldr	x0, [sp, #72]
   14124:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   14128:	cmp	w0, #0x0
   1412c:	cset	w0, eq  // eq = none
   14130:	and	w0, w0, #0xff
   14134:	cmp	w0, #0x0
   14138:	b.eq	14144 <plugin_init@@Base+0x3104>  // b.none
   1413c:	mov	w19, #0x0                   	// #0
   14140:	b	14158 <plugin_init@@Base+0x3118>
   14144:	ldr	x1, [sp, #136]
   14148:	ldr	x0, [sp, #72]
   1414c:	bl	1a1a4 <plugin_init@@Base+0x9164>
   14150:	mov	w19, w0
   14154:	nop
   14158:	add	x0, sp, #0x50
   1415c:	bl	1a244 <plugin_init@@Base+0x9204>
   14160:	add	x0, sp, #0x58
   14164:	bl	122bc <plugin_init@@Base+0x127c>
   14168:	add	x0, sp, #0x60
   1416c:	bl	1a150 <plugin_init@@Base+0x9110>
   14170:	add	x0, sp, #0x68
   14174:	bl	122bc <plugin_init@@Base+0x127c>
   14178:	add	x0, sp, #0x70
   1417c:	bl	1a150 <plugin_init@@Base+0x9110>
   14180:	add	x0, sp, #0x78
   14184:	bl	1a1dc <plugin_init@@Base+0x919c>
   14188:	add	x0, sp, #0x80
   1418c:	bl	122bc <plugin_init@@Base+0x127c>
   14190:	mov	w0, w19
   14194:	b	141dc <plugin_init@@Base+0x319c>
   14198:	mov	x19, x0
   1419c:	add	x0, sp, #0x50
   141a0:	bl	1a244 <plugin_init@@Base+0x9204>
   141a4:	add	x0, sp, #0x58
   141a8:	bl	122bc <plugin_init@@Base+0x127c>
   141ac:	add	x0, sp, #0x60
   141b0:	bl	1a150 <plugin_init@@Base+0x9110>
   141b4:	add	x0, sp, #0x68
   141b8:	bl	122bc <plugin_init@@Base+0x127c>
   141bc:	add	x0, sp, #0x70
   141c0:	bl	1a150 <plugin_init@@Base+0x9110>
   141c4:	add	x0, sp, #0x78
   141c8:	bl	1a1dc <plugin_init@@Base+0x919c>
   141cc:	add	x0, sp, #0x80
   141d0:	bl	122bc <plugin_init@@Base+0x127c>
   141d4:	mov	x0, x19
   141d8:	bl	6c60 <_Unwind_Resume@plt>
   141dc:	ldp	x19, x20, [sp, #16]
   141e0:	ldp	x21, x22, [sp, #32]
   141e4:	ldp	x23, x24, [sp, #48]
   141e8:	ldp	x29, x30, [sp], #144
   141ec:	ret
   141f0:	stp	x29, x30, [sp, #-80]!
   141f4:	mov	x29, sp
   141f8:	stp	x19, x20, [sp, #16]
   141fc:	str	x0, [sp, #40]
   14200:	add	x0, sp, #0x40
   14204:	bl	122a0 <plugin_init@@Base+0x1260>
   14208:	add	x0, sp, #0x38
   1420c:	bl	1a13c <plugin_init@@Base+0x90fc>
   14210:	add	x0, sp, #0x30
   14214:	bl	1a13c <plugin_init@@Base+0x90fc>
   14218:	mov	x1, #0x3                   	// #3
   1421c:	ldr	x0, [sp, #40]
   14220:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   14224:	cmp	w0, #0x0
   14228:	cset	w0, eq  // eq = none
   1422c:	and	w0, w0, #0xff
   14230:	cmp	w0, #0x0
   14234:	b.eq	14240 <plugin_init@@Base+0x3200>  // b.none
   14238:	mov	w19, #0x0                   	// #0
   1423c:	b	1432c <plugin_init@@Base+0x32ec>
   14240:	add	x0, sp, #0x40
   14244:	ldr	x1, [sp, #40]
   14248:	bl	12308 <plugin_init@@Base+0x12c8>
   1424c:	cmp	w0, #0x0
   14250:	cset	w0, eq  // eq = none
   14254:	and	w0, w0, #0xff
   14258:	cmp	w0, #0x0
   1425c:	b.eq	14268 <plugin_init@@Base+0x3228>  // b.none
   14260:	mov	w19, #0x0                   	// #0
   14264:	b	1432c <plugin_init@@Base+0x32ec>
   14268:	add	x0, sp, #0x38
   1426c:	ldr	x1, [sp, #40]
   14270:	bl	1a164 <plugin_init@@Base+0x9124>
   14274:	cmp	w0, #0x0
   14278:	cset	w0, eq  // eq = none
   1427c:	and	w0, w0, #0xff
   14280:	cmp	w0, #0x0
   14284:	b.eq	14290 <plugin_init@@Base+0x3250>  // b.none
   14288:	mov	w19, #0x0                   	// #0
   1428c:	b	1432c <plugin_init@@Base+0x32ec>
   14290:	add	x0, sp, #0x30
   14294:	ldr	x1, [sp, #40]
   14298:	bl	1a164 <plugin_init@@Base+0x9124>
   1429c:	cmp	w0, #0x0
   142a0:	cset	w0, eq  // eq = none
   142a4:	and	w0, w0, #0xff
   142a8:	cmp	w0, #0x0
   142ac:	b.eq	142b8 <plugin_init@@Base+0x3278>  // b.none
   142b0:	mov	w19, #0x0                   	// #0
   142b4:	b	1432c <plugin_init@@Base+0x32ec>
   142b8:	add	x0, sp, #0x40
   142bc:	bl	122f0 <plugin_init@@Base+0x12b0>
   142c0:	mov	x19, x0
   142c4:	add	x0, sp, #0x38
   142c8:	bl	1a18c <plugin_init@@Base+0x914c>
   142cc:	mov	x20, x0
   142d0:	add	x0, sp, #0x30
   142d4:	bl	1a18c <plugin_init@@Base+0x914c>
   142d8:	mov	x3, x0
   142dc:	mov	x2, x20
   142e0:	mov	x1, x19
   142e4:	ldr	x0, [sp, #40]
   142e8:	bl	bb5c <_Z19decl_assembler_nameP9tree_node@plt+0x4dfc>
   142ec:	str	x0, [sp, #72]
   142f0:	mov	w1, #0x52                  	// #82
   142f4:	ldr	x0, [sp, #40]
   142f8:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   142fc:	cmp	w0, #0x0
   14300:	cset	w0, eq  // eq = none
   14304:	and	w0, w0, #0xff
   14308:	cmp	w0, #0x0
   1430c:	b.eq	14318 <plugin_init@@Base+0x32d8>  // b.none
   14310:	mov	w19, #0x0                   	// #0
   14314:	b	1432c <plugin_init@@Base+0x32ec>
   14318:	ldr	x1, [sp, #72]
   1431c:	ldr	x0, [sp, #40]
   14320:	bl	1a1a4 <plugin_init@@Base+0x9164>
   14324:	mov	w19, w0
   14328:	nop
   1432c:	add	x0, sp, #0x30
   14330:	bl	1a150 <plugin_init@@Base+0x9110>
   14334:	add	x0, sp, #0x38
   14338:	bl	1a150 <plugin_init@@Base+0x9110>
   1433c:	add	x0, sp, #0x40
   14340:	bl	122bc <plugin_init@@Base+0x127c>
   14344:	mov	w0, w19
   14348:	b	14370 <plugin_init@@Base+0x3330>
   1434c:	mov	x19, x0
   14350:	add	x0, sp, #0x30
   14354:	bl	1a150 <plugin_init@@Base+0x9110>
   14358:	add	x0, sp, #0x38
   1435c:	bl	1a150 <plugin_init@@Base+0x9110>
   14360:	add	x0, sp, #0x40
   14364:	bl	122bc <plugin_init@@Base+0x127c>
   14368:	mov	x0, x19
   1436c:	bl	6c60 <_Unwind_Resume@plt>
   14370:	ldp	x19, x20, [sp, #16]
   14374:	ldp	x29, x30, [sp], #80
   14378:	ret
   1437c:	stp	x29, x30, [sp, #-64]!
   14380:	mov	x29, sp
   14384:	str	x19, [sp, #16]
   14388:	str	x0, [sp, #40]
   1438c:	add	x0, sp, #0x30
   14390:	bl	1a13c <plugin_init@@Base+0x90fc>
   14394:	mov	x1, #0x1                   	// #1
   14398:	ldr	x0, [sp, #40]
   1439c:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   143a0:	cmp	w0, #0x0
   143a4:	cset	w0, eq  // eq = none
   143a8:	and	w0, w0, #0xff
   143ac:	cmp	w0, #0x0
   143b0:	b.eq	143bc <plugin_init@@Base+0x337c>  // b.none
   143b4:	mov	w19, #0x0                   	// #0
   143b8:	b	14438 <plugin_init@@Base+0x33f8>
   143bc:	add	x0, sp, #0x30
   143c0:	ldr	x1, [sp, #40]
   143c4:	bl	1a164 <plugin_init@@Base+0x9124>
   143c8:	cmp	w0, #0x0
   143cc:	cset	w0, eq  // eq = none
   143d0:	and	w0, w0, #0xff
   143d4:	cmp	w0, #0x0
   143d8:	b.eq	143e4 <plugin_init@@Base+0x33a4>  // b.none
   143dc:	mov	w19, #0x0                   	// #0
   143e0:	b	14438 <plugin_init@@Base+0x33f8>
   143e4:	add	x0, sp, #0x30
   143e8:	bl	1a18c <plugin_init@@Base+0x914c>
   143ec:	mov	x1, x0
   143f0:	ldr	x0, [sp, #40]
   143f4:	bl	d2dc <_Z19decl_assembler_nameP9tree_node@plt+0x657c>
   143f8:	str	x0, [sp, #56]
   143fc:	mov	w1, #0x52                  	// #82
   14400:	ldr	x0, [sp, #40]
   14404:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   14408:	cmp	w0, #0x0
   1440c:	cset	w0, eq  // eq = none
   14410:	and	w0, w0, #0xff
   14414:	cmp	w0, #0x0
   14418:	b.eq	14424 <plugin_init@@Base+0x33e4>  // b.none
   1441c:	mov	w19, #0x0                   	// #0
   14420:	b	14438 <plugin_init@@Base+0x33f8>
   14424:	ldr	x1, [sp, #56]
   14428:	ldr	x0, [sp, #40]
   1442c:	bl	1a1a4 <plugin_init@@Base+0x9164>
   14430:	mov	w19, w0
   14434:	nop
   14438:	add	x0, sp, #0x30
   1443c:	bl	1a150 <plugin_init@@Base+0x9110>
   14440:	mov	w0, w19
   14444:	b	1445c <plugin_init@@Base+0x341c>
   14448:	mov	x19, x0
   1444c:	add	x0, sp, #0x30
   14450:	bl	1a150 <plugin_init@@Base+0x9110>
   14454:	mov	x0, x19
   14458:	bl	6c60 <_Unwind_Resume@plt>
   1445c:	ldr	x19, [sp, #16]
   14460:	ldp	x29, x30, [sp], #64
   14464:	ret
   14468:	stp	x29, x30, [sp, #-64]!
   1446c:	mov	x29, sp
   14470:	str	x19, [sp, #16]
   14474:	str	x0, [sp, #40]
   14478:	add	x0, sp, #0x30
   1447c:	bl	1a13c <plugin_init@@Base+0x90fc>
   14480:	mov	x1, #0x1                   	// #1
   14484:	ldr	x0, [sp, #40]
   14488:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   1448c:	cmp	w0, #0x0
   14490:	cset	w0, eq  // eq = none
   14494:	and	w0, w0, #0xff
   14498:	cmp	w0, #0x0
   1449c:	b.eq	144a8 <plugin_init@@Base+0x3468>  // b.none
   144a0:	mov	w19, #0x0                   	// #0
   144a4:	b	14524 <plugin_init@@Base+0x34e4>
   144a8:	add	x0, sp, #0x30
   144ac:	ldr	x1, [sp, #40]
   144b0:	bl	1a164 <plugin_init@@Base+0x9124>
   144b4:	cmp	w0, #0x0
   144b8:	cset	w0, eq  // eq = none
   144bc:	and	w0, w0, #0xff
   144c0:	cmp	w0, #0x0
   144c4:	b.eq	144d0 <plugin_init@@Base+0x3490>  // b.none
   144c8:	mov	w19, #0x0                   	// #0
   144cc:	b	14524 <plugin_init@@Base+0x34e4>
   144d0:	add	x0, sp, #0x30
   144d4:	bl	1a18c <plugin_init@@Base+0x914c>
   144d8:	mov	x1, x0
   144dc:	ldr	x0, [sp, #40]
   144e0:	bl	d280 <_Z19decl_assembler_nameP9tree_node@plt+0x6520>
   144e4:	str	x0, [sp, #56]
   144e8:	mov	w1, #0x52                  	// #82
   144ec:	ldr	x0, [sp, #40]
   144f0:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   144f4:	cmp	w0, #0x0
   144f8:	cset	w0, eq  // eq = none
   144fc:	and	w0, w0, #0xff
   14500:	cmp	w0, #0x0
   14504:	b.eq	14510 <plugin_init@@Base+0x34d0>  // b.none
   14508:	mov	w19, #0x0                   	// #0
   1450c:	b	14524 <plugin_init@@Base+0x34e4>
   14510:	ldr	x1, [sp, #56]
   14514:	ldr	x0, [sp, #40]
   14518:	bl	1a1a4 <plugin_init@@Base+0x9164>
   1451c:	mov	w19, w0
   14520:	nop
   14524:	add	x0, sp, #0x30
   14528:	bl	1a150 <plugin_init@@Base+0x9110>
   1452c:	mov	w0, w19
   14530:	b	14548 <plugin_init@@Base+0x3508>
   14534:	mov	x19, x0
   14538:	add	x0, sp, #0x30
   1453c:	bl	1a150 <plugin_init@@Base+0x9110>
   14540:	mov	x0, x19
   14544:	bl	6c60 <_Unwind_Resume@plt>
   14548:	ldr	x19, [sp, #16]
   1454c:	ldp	x29, x30, [sp], #64
   14550:	ret
   14554:	stp	x29, x30, [sp, #-80]!
   14558:	mov	x29, sp
   1455c:	str	x19, [sp, #16]
   14560:	str	x0, [sp, #40]
   14564:	add	x0, sp, #0x40
   14568:	bl	1a13c <plugin_init@@Base+0x90fc>
   1456c:	add	x0, sp, #0x38
   14570:	bl	1a13c <plugin_init@@Base+0x90fc>
   14574:	mov	x1, #0x2                   	// #2
   14578:	ldr	x0, [sp, #40]
   1457c:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   14580:	cmp	w0, #0x0
   14584:	cset	w0, eq  // eq = none
   14588:	and	w0, w0, #0xff
   1458c:	cmp	w0, #0x0
   14590:	b.eq	1459c <plugin_init@@Base+0x355c>  // b.none
   14594:	mov	w19, #0x0                   	// #0
   14598:	b	14650 <plugin_init@@Base+0x3610>
   1459c:	add	x0, sp, #0x40
   145a0:	ldr	x1, [sp, #40]
   145a4:	bl	1a164 <plugin_init@@Base+0x9124>
   145a8:	cmp	w0, #0x0
   145ac:	cset	w0, eq  // eq = none
   145b0:	and	w0, w0, #0xff
   145b4:	cmp	w0, #0x0
   145b8:	b.eq	145c4 <plugin_init@@Base+0x3584>  // b.none
   145bc:	mov	w19, #0x0                   	// #0
   145c0:	b	14650 <plugin_init@@Base+0x3610>
   145c4:	add	x0, sp, #0x38
   145c8:	ldr	x1, [sp, #40]
   145cc:	bl	1a164 <plugin_init@@Base+0x9124>
   145d0:	cmp	w0, #0x0
   145d4:	cset	w0, eq  // eq = none
   145d8:	and	w0, w0, #0xff
   145dc:	cmp	w0, #0x0
   145e0:	b.eq	145ec <plugin_init@@Base+0x35ac>  // b.none
   145e4:	mov	w19, #0x0                   	// #0
   145e8:	b	14650 <plugin_init@@Base+0x3610>
   145ec:	add	x0, sp, #0x40
   145f0:	bl	1a18c <plugin_init@@Base+0x914c>
   145f4:	mov	x19, x0
   145f8:	add	x0, sp, #0x38
   145fc:	bl	1a18c <plugin_init@@Base+0x914c>
   14600:	mov	x2, x0
   14604:	mov	x1, x19
   14608:	ldr	x0, [sp, #40]
   1460c:	bl	bec8 <_Z19decl_assembler_nameP9tree_node@plt+0x5168>
   14610:	str	w0, [sp, #76]
   14614:	mov	w1, #0x52                  	// #82
   14618:	ldr	x0, [sp, #40]
   1461c:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   14620:	cmp	w0, #0x0
   14624:	cset	w0, eq  // eq = none
   14628:	and	w0, w0, #0xff
   1462c:	cmp	w0, #0x0
   14630:	b.eq	1463c <plugin_init@@Base+0x35fc>  // b.none
   14634:	mov	w19, #0x0                   	// #0
   14638:	b	14650 <plugin_init@@Base+0x3610>
   1463c:	ldr	w1, [sp, #76]
   14640:	ldr	x0, [sp, #40]
   14644:	bl	19a64 <plugin_init@@Base+0x8a24>
   14648:	mov	w19, w0
   1464c:	nop
   14650:	add	x0, sp, #0x38
   14654:	bl	1a150 <plugin_init@@Base+0x9110>
   14658:	add	x0, sp, #0x40
   1465c:	bl	1a150 <plugin_init@@Base+0x9110>
   14660:	mov	w0, w19
   14664:	b	14684 <plugin_init@@Base+0x3644>
   14668:	mov	x19, x0
   1466c:	add	x0, sp, #0x38
   14670:	bl	1a150 <plugin_init@@Base+0x9110>
   14674:	add	x0, sp, #0x40
   14678:	bl	1a150 <plugin_init@@Base+0x9110>
   1467c:	mov	x0, x19
   14680:	bl	6c60 <_Unwind_Resume@plt>
   14684:	ldr	x19, [sp, #16]
   14688:	ldp	x29, x30, [sp], #80
   1468c:	ret
   14690:	stp	x29, x30, [sp, #-64]!
   14694:	mov	x29, sp
   14698:	str	x19, [sp, #16]
   1469c:	str	x0, [sp, #40]
   146a0:	add	x0, sp, #0x30
   146a4:	bl	1a13c <plugin_init@@Base+0x90fc>
   146a8:	mov	x1, #0x1                   	// #1
   146ac:	ldr	x0, [sp, #40]
   146b0:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   146b4:	cmp	w0, #0x0
   146b8:	cset	w0, eq  // eq = none
   146bc:	and	w0, w0, #0xff
   146c0:	cmp	w0, #0x0
   146c4:	b.eq	146d0 <plugin_init@@Base+0x3690>  // b.none
   146c8:	mov	w19, #0x0                   	// #0
   146cc:	b	1474c <plugin_init@@Base+0x370c>
   146d0:	add	x0, sp, #0x30
   146d4:	ldr	x1, [sp, #40]
   146d8:	bl	1a164 <plugin_init@@Base+0x9124>
   146dc:	cmp	w0, #0x0
   146e0:	cset	w0, eq  // eq = none
   146e4:	and	w0, w0, #0xff
   146e8:	cmp	w0, #0x0
   146ec:	b.eq	146f8 <plugin_init@@Base+0x36b8>  // b.none
   146f0:	mov	w19, #0x0                   	// #0
   146f4:	b	1474c <plugin_init@@Base+0x370c>
   146f8:	add	x0, sp, #0x30
   146fc:	bl	1a18c <plugin_init@@Base+0x914c>
   14700:	mov	x1, x0
   14704:	ldr	x0, [sp, #40]
   14708:	bl	bfec <_Z19decl_assembler_nameP9tree_node@plt+0x528c>
   1470c:	str	x0, [sp, #56]
   14710:	mov	w1, #0x52                  	// #82
   14714:	ldr	x0, [sp, #40]
   14718:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   1471c:	cmp	w0, #0x0
   14720:	cset	w0, eq  // eq = none
   14724:	and	w0, w0, #0xff
   14728:	cmp	w0, #0x0
   1472c:	b.eq	14738 <plugin_init@@Base+0x36f8>  // b.none
   14730:	mov	w19, #0x0                   	// #0
   14734:	b	1474c <plugin_init@@Base+0x370c>
   14738:	ldr	x1, [sp, #56]
   1473c:	ldr	x0, [sp, #40]
   14740:	bl	1a1a4 <plugin_init@@Base+0x9164>
   14744:	mov	w19, w0
   14748:	nop
   1474c:	add	x0, sp, #0x30
   14750:	bl	1a150 <plugin_init@@Base+0x9110>
   14754:	mov	w0, w19
   14758:	b	14770 <plugin_init@@Base+0x3730>
   1475c:	mov	x19, x0
   14760:	add	x0, sp, #0x30
   14764:	bl	1a150 <plugin_init@@Base+0x9110>
   14768:	mov	x0, x19
   1476c:	bl	6c60 <_Unwind_Resume@plt>
   14770:	ldr	x19, [sp, #16]
   14774:	ldp	x29, x30, [sp], #64
   14778:	ret
   1477c:	stp	x29, x30, [sp, #-80]!
   14780:	mov	x29, sp
   14784:	str	x19, [sp, #16]
   14788:	str	x0, [sp, #40]
   1478c:	add	x0, sp, #0x40
   14790:	bl	1a13c <plugin_init@@Base+0x90fc>
   14794:	add	x0, sp, #0x38
   14798:	bl	1a298 <plugin_init@@Base+0x9258>
   1479c:	mov	x1, #0x2                   	// #2
   147a0:	ldr	x0, [sp, #40]
   147a4:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   147a8:	cmp	w0, #0x0
   147ac:	cset	w0, eq  // eq = none
   147b0:	and	w0, w0, #0xff
   147b4:	cmp	w0, #0x0
   147b8:	b.eq	147c4 <plugin_init@@Base+0x3784>  // b.none
   147bc:	mov	w19, #0x0                   	// #0
   147c0:	b	14878 <plugin_init@@Base+0x3838>
   147c4:	add	x0, sp, #0x40
   147c8:	ldr	x1, [sp, #40]
   147cc:	bl	1a164 <plugin_init@@Base+0x9124>
   147d0:	cmp	w0, #0x0
   147d4:	cset	w0, eq  // eq = none
   147d8:	and	w0, w0, #0xff
   147dc:	cmp	w0, #0x0
   147e0:	b.eq	147ec <plugin_init@@Base+0x37ac>  // b.none
   147e4:	mov	w19, #0x0                   	// #0
   147e8:	b	14878 <plugin_init@@Base+0x3838>
   147ec:	add	x0, sp, #0x38
   147f0:	ldr	x1, [sp, #40]
   147f4:	bl	1a2c0 <plugin_init@@Base+0x9280>
   147f8:	cmp	w0, #0x0
   147fc:	cset	w0, eq  // eq = none
   14800:	and	w0, w0, #0xff
   14804:	cmp	w0, #0x0
   14808:	b.eq	14814 <plugin_init@@Base+0x37d4>  // b.none
   1480c:	mov	w19, #0x0                   	// #0
   14810:	b	14878 <plugin_init@@Base+0x3838>
   14814:	add	x0, sp, #0x40
   14818:	bl	1a18c <plugin_init@@Base+0x914c>
   1481c:	mov	x19, x0
   14820:	add	x0, sp, #0x38
   14824:	bl	1a2e8 <plugin_init@@Base+0x92a8>
   14828:	mov	w2, w0
   1482c:	mov	x1, x19
   14830:	ldr	x0, [sp, #40]
   14834:	bl	c014 <_Z19decl_assembler_nameP9tree_node@plt+0x52b4>
   14838:	str	x0, [sp, #72]
   1483c:	mov	w1, #0x52                  	// #82
   14840:	ldr	x0, [sp, #40]
   14844:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   14848:	cmp	w0, #0x0
   1484c:	cset	w0, eq  // eq = none
   14850:	and	w0, w0, #0xff
   14854:	cmp	w0, #0x0
   14858:	b.eq	14864 <plugin_init@@Base+0x3824>  // b.none
   1485c:	mov	w19, #0x0                   	// #0
   14860:	b	14878 <plugin_init@@Base+0x3838>
   14864:	ldr	x1, [sp, #72]
   14868:	ldr	x0, [sp, #40]
   1486c:	bl	1a1a4 <plugin_init@@Base+0x9164>
   14870:	mov	w19, w0
   14874:	nop
   14878:	add	x0, sp, #0x38
   1487c:	bl	1a2ac <plugin_init@@Base+0x926c>
   14880:	add	x0, sp, #0x40
   14884:	bl	1a150 <plugin_init@@Base+0x9110>
   14888:	mov	w0, w19
   1488c:	b	148ac <plugin_init@@Base+0x386c>
   14890:	mov	x19, x0
   14894:	add	x0, sp, #0x38
   14898:	bl	1a2ac <plugin_init@@Base+0x926c>
   1489c:	add	x0, sp, #0x40
   148a0:	bl	1a150 <plugin_init@@Base+0x9110>
   148a4:	mov	x0, x19
   148a8:	bl	6c60 <_Unwind_Resume@plt>
   148ac:	ldr	x19, [sp, #16]
   148b0:	ldp	x29, x30, [sp], #80
   148b4:	ret
   148b8:	stp	x29, x30, [sp, #-80]!
   148bc:	mov	x29, sp
   148c0:	str	x19, [sp, #16]
   148c4:	str	x0, [sp, #40]
   148c8:	add	x0, sp, #0x40
   148cc:	bl	1a13c <plugin_init@@Base+0x90fc>
   148d0:	add	x0, sp, #0x38
   148d4:	bl	1a13c <plugin_init@@Base+0x90fc>
   148d8:	mov	x1, #0x2                   	// #2
   148dc:	ldr	x0, [sp, #40]
   148e0:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   148e4:	cmp	w0, #0x0
   148e8:	cset	w0, eq  // eq = none
   148ec:	and	w0, w0, #0xff
   148f0:	cmp	w0, #0x0
   148f4:	b.eq	14900 <plugin_init@@Base+0x38c0>  // b.none
   148f8:	mov	w19, #0x0                   	// #0
   148fc:	b	149b4 <plugin_init@@Base+0x3974>
   14900:	add	x0, sp, #0x40
   14904:	ldr	x1, [sp, #40]
   14908:	bl	1a164 <plugin_init@@Base+0x9124>
   1490c:	cmp	w0, #0x0
   14910:	cset	w0, eq  // eq = none
   14914:	and	w0, w0, #0xff
   14918:	cmp	w0, #0x0
   1491c:	b.eq	14928 <plugin_init@@Base+0x38e8>  // b.none
   14920:	mov	w19, #0x0                   	// #0
   14924:	b	149b4 <plugin_init@@Base+0x3974>
   14928:	add	x0, sp, #0x38
   1492c:	ldr	x1, [sp, #40]
   14930:	bl	1a164 <plugin_init@@Base+0x9124>
   14934:	cmp	w0, #0x0
   14938:	cset	w0, eq  // eq = none
   1493c:	and	w0, w0, #0xff
   14940:	cmp	w0, #0x0
   14944:	b.eq	14950 <plugin_init@@Base+0x3910>  // b.none
   14948:	mov	w19, #0x0                   	// #0
   1494c:	b	149b4 <plugin_init@@Base+0x3974>
   14950:	add	x0, sp, #0x40
   14954:	bl	1a18c <plugin_init@@Base+0x914c>
   14958:	mov	x19, x0
   1495c:	add	x0, sp, #0x38
   14960:	bl	1a18c <plugin_init@@Base+0x914c>
   14964:	mov	x2, x0
   14968:	mov	x1, x19
   1496c:	ldr	x0, [sp, #40]
   14970:	bl	d1f4 <_Z19decl_assembler_nameP9tree_node@plt+0x6494>
   14974:	str	x0, [sp, #72]
   14978:	mov	w1, #0x52                  	// #82
   1497c:	ldr	x0, [sp, #40]
   14980:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   14984:	cmp	w0, #0x0
   14988:	cset	w0, eq  // eq = none
   1498c:	and	w0, w0, #0xff
   14990:	cmp	w0, #0x0
   14994:	b.eq	149a0 <plugin_init@@Base+0x3960>  // b.none
   14998:	mov	w19, #0x0                   	// #0
   1499c:	b	149b4 <plugin_init@@Base+0x3974>
   149a0:	ldr	x1, [sp, #72]
   149a4:	ldr	x0, [sp, #40]
   149a8:	bl	1a1a4 <plugin_init@@Base+0x9164>
   149ac:	mov	w19, w0
   149b0:	nop
   149b4:	add	x0, sp, #0x38
   149b8:	bl	1a150 <plugin_init@@Base+0x9110>
   149bc:	add	x0, sp, #0x40
   149c0:	bl	1a150 <plugin_init@@Base+0x9110>
   149c4:	mov	w0, w19
   149c8:	b	149e8 <plugin_init@@Base+0x39a8>
   149cc:	mov	x19, x0
   149d0:	add	x0, sp, #0x38
   149d4:	bl	1a150 <plugin_init@@Base+0x9110>
   149d8:	add	x0, sp, #0x40
   149dc:	bl	1a150 <plugin_init@@Base+0x9110>
   149e0:	mov	x0, x19
   149e4:	bl	6c60 <_Unwind_Resume@plt>
   149e8:	ldr	x19, [sp, #16]
   149ec:	ldp	x29, x30, [sp], #80
   149f0:	ret
   149f4:	stp	x29, x30, [sp, #-48]!
   149f8:	mov	x29, sp
   149fc:	str	x0, [sp, #24]
   14a00:	mov	x1, #0x0                   	// #0
   14a04:	ldr	x0, [sp, #24]
   14a08:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   14a0c:	cmp	w0, #0x0
   14a10:	cset	w0, eq  // eq = none
   14a14:	and	w0, w0, #0xff
   14a18:	cmp	w0, #0x0
   14a1c:	b.eq	14a28 <plugin_init@@Base+0x39e8>  // b.none
   14a20:	mov	w0, #0x0                   	// #0
   14a24:	b	14a6c <plugin_init@@Base+0x3a2c>
   14a28:	ldr	x0, [sp, #24]
   14a2c:	bl	d250 <_Z19decl_assembler_nameP9tree_node@plt+0x64f0>
   14a30:	str	w0, [sp, #44]
   14a34:	mov	w1, #0x52                  	// #82
   14a38:	ldr	x0, [sp, #24]
   14a3c:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   14a40:	cmp	w0, #0x0
   14a44:	cset	w0, eq  // eq = none
   14a48:	and	w0, w0, #0xff
   14a4c:	cmp	w0, #0x0
   14a50:	b.eq	14a5c <plugin_init@@Base+0x3a1c>  // b.none
   14a54:	mov	w0, #0x0                   	// #0
   14a58:	b	14a6c <plugin_init@@Base+0x3a2c>
   14a5c:	ldr	w1, [sp, #44]
   14a60:	ldr	x0, [sp, #24]
   14a64:	bl	19a64 <plugin_init@@Base+0x8a24>
   14a68:	nop
   14a6c:	ldp	x29, x30, [sp], #48
   14a70:	ret
   14a74:	stp	x29, x30, [sp, #-112]!
   14a78:	mov	x29, sp
   14a7c:	stp	x19, x20, [sp, #16]
   14a80:	stp	x21, x22, [sp, #32]
   14a84:	str	x0, [sp, #56]
   14a88:	add	x0, sp, #0x60
   14a8c:	bl	122a0 <plugin_init@@Base+0x1260>
   14a90:	add	x0, sp, #0x58
   14a94:	bl	1a300 <plugin_init@@Base+0x92c0>
   14a98:	add	x0, sp, #0x50
   14a9c:	bl	1a13c <plugin_init@@Base+0x90fc>
   14aa0:	add	x0, sp, #0x48
   14aa4:	bl	122a0 <plugin_init@@Base+0x1260>
   14aa8:	add	x0, sp, #0x40
   14aac:	bl	1a230 <plugin_init@@Base+0x91f0>
   14ab0:	mov	x1, #0x5                   	// #5
   14ab4:	ldr	x0, [sp, #56]
   14ab8:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   14abc:	cmp	w0, #0x0
   14ac0:	cset	w0, eq  // eq = none
   14ac4:	and	w0, w0, #0xff
   14ac8:	cmp	w0, #0x0
   14acc:	b.eq	14ad8 <plugin_init@@Base+0x3a98>  // b.none
   14ad0:	mov	w19, #0x0                   	// #0
   14ad4:	b	14c34 <plugin_init@@Base+0x3bf4>
   14ad8:	add	x0, sp, #0x60
   14adc:	ldr	x1, [sp, #56]
   14ae0:	bl	12308 <plugin_init@@Base+0x12c8>
   14ae4:	cmp	w0, #0x0
   14ae8:	cset	w0, eq  // eq = none
   14aec:	and	w0, w0, #0xff
   14af0:	cmp	w0, #0x0
   14af4:	b.eq	14b00 <plugin_init@@Base+0x3ac0>  // b.none
   14af8:	mov	w19, #0x0                   	// #0
   14afc:	b	14c34 <plugin_init@@Base+0x3bf4>
   14b00:	add	x0, sp, #0x58
   14b04:	ldr	x1, [sp, #56]
   14b08:	bl	1a328 <plugin_init@@Base+0x92e8>
   14b0c:	cmp	w0, #0x0
   14b10:	cset	w0, eq  // eq = none
   14b14:	and	w0, w0, #0xff
   14b18:	cmp	w0, #0x0
   14b1c:	b.eq	14b28 <plugin_init@@Base+0x3ae8>  // b.none
   14b20:	mov	w19, #0x0                   	// #0
   14b24:	b	14c34 <plugin_init@@Base+0x3bf4>
   14b28:	add	x0, sp, #0x50
   14b2c:	ldr	x1, [sp, #56]
   14b30:	bl	1a164 <plugin_init@@Base+0x9124>
   14b34:	cmp	w0, #0x0
   14b38:	cset	w0, eq  // eq = none
   14b3c:	and	w0, w0, #0xff
   14b40:	cmp	w0, #0x0
   14b44:	b.eq	14b50 <plugin_init@@Base+0x3b10>  // b.none
   14b48:	mov	w19, #0x0                   	// #0
   14b4c:	b	14c34 <plugin_init@@Base+0x3bf4>
   14b50:	add	x0, sp, #0x48
   14b54:	ldr	x1, [sp, #56]
   14b58:	bl	12308 <plugin_init@@Base+0x12c8>
   14b5c:	cmp	w0, #0x0
   14b60:	cset	w0, eq  // eq = none
   14b64:	and	w0, w0, #0xff
   14b68:	cmp	w0, #0x0
   14b6c:	b.eq	14b78 <plugin_init@@Base+0x3b38>  // b.none
   14b70:	mov	w19, #0x0                   	// #0
   14b74:	b	14c34 <plugin_init@@Base+0x3bf4>
   14b78:	add	x0, sp, #0x40
   14b7c:	ldr	x1, [sp, #56]
   14b80:	bl	1a258 <plugin_init@@Base+0x9218>
   14b84:	cmp	w0, #0x0
   14b88:	cset	w0, eq  // eq = none
   14b8c:	and	w0, w0, #0xff
   14b90:	cmp	w0, #0x0
   14b94:	b.eq	14ba0 <plugin_init@@Base+0x3b60>  // b.none
   14b98:	mov	w19, #0x0                   	// #0
   14b9c:	b	14c34 <plugin_init@@Base+0x3bf4>
   14ba0:	add	x0, sp, #0x60
   14ba4:	bl	122f0 <plugin_init@@Base+0x12b0>
   14ba8:	mov	x19, x0
   14bac:	add	x0, sp, #0x58
   14bb0:	bl	1a350 <plugin_init@@Base+0x9310>
   14bb4:	mov	w20, w0
   14bb8:	add	x0, sp, #0x50
   14bbc:	bl	1a18c <plugin_init@@Base+0x914c>
   14bc0:	mov	x21, x0
   14bc4:	add	x0, sp, #0x48
   14bc8:	bl	122f0 <plugin_init@@Base+0x12b0>
   14bcc:	mov	x22, x0
   14bd0:	add	x0, sp, #0x40
   14bd4:	bl	1a280 <plugin_init@@Base+0x9240>
   14bd8:	mov	w5, w0
   14bdc:	mov	x4, x22
   14be0:	mov	x3, x21
   14be4:	mov	w2, w20
   14be8:	mov	x1, x19
   14bec:	ldr	x0, [sp, #56]
   14bf0:	bl	d338 <_Z19decl_assembler_nameP9tree_node@plt+0x65d8>
   14bf4:	str	x0, [sp, #104]
   14bf8:	mov	w1, #0x52                  	// #82
   14bfc:	ldr	x0, [sp, #56]
   14c00:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   14c04:	cmp	w0, #0x0
   14c08:	cset	w0, eq  // eq = none
   14c0c:	and	w0, w0, #0xff
   14c10:	cmp	w0, #0x0
   14c14:	b.eq	14c20 <plugin_init@@Base+0x3be0>  // b.none
   14c18:	mov	w19, #0x0                   	// #0
   14c1c:	b	14c34 <plugin_init@@Base+0x3bf4>
   14c20:	ldr	x1, [sp, #104]
   14c24:	ldr	x0, [sp, #56]
   14c28:	bl	1a1a4 <plugin_init@@Base+0x9164>
   14c2c:	mov	w19, w0
   14c30:	nop
   14c34:	add	x0, sp, #0x40
   14c38:	bl	1a244 <plugin_init@@Base+0x9204>
   14c3c:	add	x0, sp, #0x48
   14c40:	bl	122bc <plugin_init@@Base+0x127c>
   14c44:	add	x0, sp, #0x50
   14c48:	bl	1a150 <plugin_init@@Base+0x9110>
   14c4c:	add	x0, sp, #0x58
   14c50:	bl	1a314 <plugin_init@@Base+0x92d4>
   14c54:	add	x0, sp, #0x60
   14c58:	bl	122bc <plugin_init@@Base+0x127c>
   14c5c:	mov	w0, w19
   14c60:	b	14c98 <plugin_init@@Base+0x3c58>
   14c64:	mov	x19, x0
   14c68:	add	x0, sp, #0x40
   14c6c:	bl	1a244 <plugin_init@@Base+0x9204>
   14c70:	add	x0, sp, #0x48
   14c74:	bl	122bc <plugin_init@@Base+0x127c>
   14c78:	add	x0, sp, #0x50
   14c7c:	bl	1a150 <plugin_init@@Base+0x9110>
   14c80:	add	x0, sp, #0x58
   14c84:	bl	1a314 <plugin_init@@Base+0x92d4>
   14c88:	add	x0, sp, #0x60
   14c8c:	bl	122bc <plugin_init@@Base+0x127c>
   14c90:	mov	x0, x19
   14c94:	bl	6c60 <_Unwind_Resume@plt>
   14c98:	ldp	x19, x20, [sp, #16]
   14c9c:	ldp	x21, x22, [sp, #32]
   14ca0:	ldp	x29, x30, [sp], #112
   14ca4:	ret
   14ca8:	stp	x29, x30, [sp, #-112]!
   14cac:	mov	x29, sp
   14cb0:	stp	x19, x20, [sp, #16]
   14cb4:	stp	x21, x22, [sp, #32]
   14cb8:	str	x0, [sp, #56]
   14cbc:	add	x0, sp, #0x60
   14cc0:	bl	122a0 <plugin_init@@Base+0x1260>
   14cc4:	add	x0, sp, #0x58
   14cc8:	bl	1a300 <plugin_init@@Base+0x92c0>
   14ccc:	add	x0, sp, #0x50
   14cd0:	bl	1a13c <plugin_init@@Base+0x90fc>
   14cd4:	add	x0, sp, #0x48
   14cd8:	bl	122a0 <plugin_init@@Base+0x1260>
   14cdc:	add	x0, sp, #0x40
   14ce0:	bl	1a230 <plugin_init@@Base+0x91f0>
   14ce4:	mov	x1, #0x5                   	// #5
   14ce8:	ldr	x0, [sp, #56]
   14cec:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   14cf0:	cmp	w0, #0x0
   14cf4:	cset	w0, eq  // eq = none
   14cf8:	and	w0, w0, #0xff
   14cfc:	cmp	w0, #0x0
   14d00:	b.eq	14d0c <plugin_init@@Base+0x3ccc>  // b.none
   14d04:	mov	w19, #0x0                   	// #0
   14d08:	b	14e68 <plugin_init@@Base+0x3e28>
   14d0c:	add	x0, sp, #0x60
   14d10:	ldr	x1, [sp, #56]
   14d14:	bl	12308 <plugin_init@@Base+0x12c8>
   14d18:	cmp	w0, #0x0
   14d1c:	cset	w0, eq  // eq = none
   14d20:	and	w0, w0, #0xff
   14d24:	cmp	w0, #0x0
   14d28:	b.eq	14d34 <plugin_init@@Base+0x3cf4>  // b.none
   14d2c:	mov	w19, #0x0                   	// #0
   14d30:	b	14e68 <plugin_init@@Base+0x3e28>
   14d34:	add	x0, sp, #0x58
   14d38:	ldr	x1, [sp, #56]
   14d3c:	bl	1a328 <plugin_init@@Base+0x92e8>
   14d40:	cmp	w0, #0x0
   14d44:	cset	w0, eq  // eq = none
   14d48:	and	w0, w0, #0xff
   14d4c:	cmp	w0, #0x0
   14d50:	b.eq	14d5c <plugin_init@@Base+0x3d1c>  // b.none
   14d54:	mov	w19, #0x0                   	// #0
   14d58:	b	14e68 <plugin_init@@Base+0x3e28>
   14d5c:	add	x0, sp, #0x50
   14d60:	ldr	x1, [sp, #56]
   14d64:	bl	1a164 <plugin_init@@Base+0x9124>
   14d68:	cmp	w0, #0x0
   14d6c:	cset	w0, eq  // eq = none
   14d70:	and	w0, w0, #0xff
   14d74:	cmp	w0, #0x0
   14d78:	b.eq	14d84 <plugin_init@@Base+0x3d44>  // b.none
   14d7c:	mov	w19, #0x0                   	// #0
   14d80:	b	14e68 <plugin_init@@Base+0x3e28>
   14d84:	add	x0, sp, #0x48
   14d88:	ldr	x1, [sp, #56]
   14d8c:	bl	12308 <plugin_init@@Base+0x12c8>
   14d90:	cmp	w0, #0x0
   14d94:	cset	w0, eq  // eq = none
   14d98:	and	w0, w0, #0xff
   14d9c:	cmp	w0, #0x0
   14da0:	b.eq	14dac <plugin_init@@Base+0x3d6c>  // b.none
   14da4:	mov	w19, #0x0                   	// #0
   14da8:	b	14e68 <plugin_init@@Base+0x3e28>
   14dac:	add	x0, sp, #0x40
   14db0:	ldr	x1, [sp, #56]
   14db4:	bl	1a258 <plugin_init@@Base+0x9218>
   14db8:	cmp	w0, #0x0
   14dbc:	cset	w0, eq  // eq = none
   14dc0:	and	w0, w0, #0xff
   14dc4:	cmp	w0, #0x0
   14dc8:	b.eq	14dd4 <plugin_init@@Base+0x3d94>  // b.none
   14dcc:	mov	w19, #0x0                   	// #0
   14dd0:	b	14e68 <plugin_init@@Base+0x3e28>
   14dd4:	add	x0, sp, #0x60
   14dd8:	bl	122f0 <plugin_init@@Base+0x12b0>
   14ddc:	mov	x19, x0
   14de0:	add	x0, sp, #0x58
   14de4:	bl	1a350 <plugin_init@@Base+0x9310>
   14de8:	mov	w20, w0
   14dec:	add	x0, sp, #0x50
   14df0:	bl	1a18c <plugin_init@@Base+0x914c>
   14df4:	mov	x21, x0
   14df8:	add	x0, sp, #0x48
   14dfc:	bl	122f0 <plugin_init@@Base+0x12b0>
   14e00:	mov	x22, x0
   14e04:	add	x0, sp, #0x40
   14e08:	bl	1a280 <plugin_init@@Base+0x9240>
   14e0c:	mov	w5, w0
   14e10:	mov	x4, x22
   14e14:	mov	x3, x21
   14e18:	mov	w2, w20
   14e1c:	mov	x1, x19
   14e20:	ldr	x0, [sp, #56]
   14e24:	bl	d4a4 <_Z19decl_assembler_nameP9tree_node@plt+0x6744>
   14e28:	str	x0, [sp, #104]
   14e2c:	mov	w1, #0x52                  	// #82
   14e30:	ldr	x0, [sp, #56]
   14e34:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   14e38:	cmp	w0, #0x0
   14e3c:	cset	w0, eq  // eq = none
   14e40:	and	w0, w0, #0xff
   14e44:	cmp	w0, #0x0
   14e48:	b.eq	14e54 <plugin_init@@Base+0x3e14>  // b.none
   14e4c:	mov	w19, #0x0                   	// #0
   14e50:	b	14e68 <plugin_init@@Base+0x3e28>
   14e54:	ldr	x1, [sp, #104]
   14e58:	ldr	x0, [sp, #56]
   14e5c:	bl	1a1a4 <plugin_init@@Base+0x9164>
   14e60:	mov	w19, w0
   14e64:	nop
   14e68:	add	x0, sp, #0x40
   14e6c:	bl	1a244 <plugin_init@@Base+0x9204>
   14e70:	add	x0, sp, #0x48
   14e74:	bl	122bc <plugin_init@@Base+0x127c>
   14e78:	add	x0, sp, #0x50
   14e7c:	bl	1a150 <plugin_init@@Base+0x9110>
   14e80:	add	x0, sp, #0x58
   14e84:	bl	1a314 <plugin_init@@Base+0x92d4>
   14e88:	add	x0, sp, #0x60
   14e8c:	bl	122bc <plugin_init@@Base+0x127c>
   14e90:	mov	w0, w19
   14e94:	b	14ecc <plugin_init@@Base+0x3e8c>
   14e98:	mov	x19, x0
   14e9c:	add	x0, sp, #0x40
   14ea0:	bl	1a244 <plugin_init@@Base+0x9204>
   14ea4:	add	x0, sp, #0x48
   14ea8:	bl	122bc <plugin_init@@Base+0x127c>
   14eac:	add	x0, sp, #0x50
   14eb0:	bl	1a150 <plugin_init@@Base+0x9110>
   14eb4:	add	x0, sp, #0x58
   14eb8:	bl	1a314 <plugin_init@@Base+0x92d4>
   14ebc:	add	x0, sp, #0x60
   14ec0:	bl	122bc <plugin_init@@Base+0x127c>
   14ec4:	mov	x0, x19
   14ec8:	bl	6c60 <_Unwind_Resume@plt>
   14ecc:	ldp	x19, x20, [sp, #16]
   14ed0:	ldp	x21, x22, [sp, #32]
   14ed4:	ldp	x29, x30, [sp], #112
   14ed8:	ret
   14edc:	stp	x29, x30, [sp, #-112]!
   14ee0:	mov	x29, sp
   14ee4:	stp	x19, x20, [sp, #16]
   14ee8:	stp	x21, x22, [sp, #32]
   14eec:	str	x0, [sp, #56]
   14ef0:	add	x0, sp, #0x60
   14ef4:	bl	1a13c <plugin_init@@Base+0x90fc>
   14ef8:	add	x0, sp, #0x58
   14efc:	bl	122a0 <plugin_init@@Base+0x1260>
   14f00:	add	x0, sp, #0x50
   14f04:	bl	1a13c <plugin_init@@Base+0x90fc>
   14f08:	add	x0, sp, #0x48
   14f0c:	bl	122a0 <plugin_init@@Base+0x1260>
   14f10:	add	x0, sp, #0x40
   14f14:	bl	1a230 <plugin_init@@Base+0x91f0>
   14f18:	mov	x1, #0x5                   	// #5
   14f1c:	ldr	x0, [sp, #56]
   14f20:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   14f24:	cmp	w0, #0x0
   14f28:	cset	w0, eq  // eq = none
   14f2c:	and	w0, w0, #0xff
   14f30:	cmp	w0, #0x0
   14f34:	b.eq	14f40 <plugin_init@@Base+0x3f00>  // b.none
   14f38:	mov	w19, #0x0                   	// #0
   14f3c:	b	1509c <plugin_init@@Base+0x405c>
   14f40:	add	x0, sp, #0x60
   14f44:	ldr	x1, [sp, #56]
   14f48:	bl	1a164 <plugin_init@@Base+0x9124>
   14f4c:	cmp	w0, #0x0
   14f50:	cset	w0, eq  // eq = none
   14f54:	and	w0, w0, #0xff
   14f58:	cmp	w0, #0x0
   14f5c:	b.eq	14f68 <plugin_init@@Base+0x3f28>  // b.none
   14f60:	mov	w19, #0x0                   	// #0
   14f64:	b	1509c <plugin_init@@Base+0x405c>
   14f68:	add	x0, sp, #0x58
   14f6c:	ldr	x1, [sp, #56]
   14f70:	bl	12308 <plugin_init@@Base+0x12c8>
   14f74:	cmp	w0, #0x0
   14f78:	cset	w0, eq  // eq = none
   14f7c:	and	w0, w0, #0xff
   14f80:	cmp	w0, #0x0
   14f84:	b.eq	14f90 <plugin_init@@Base+0x3f50>  // b.none
   14f88:	mov	w19, #0x0                   	// #0
   14f8c:	b	1509c <plugin_init@@Base+0x405c>
   14f90:	add	x0, sp, #0x50
   14f94:	ldr	x1, [sp, #56]
   14f98:	bl	1a164 <plugin_init@@Base+0x9124>
   14f9c:	cmp	w0, #0x0
   14fa0:	cset	w0, eq  // eq = none
   14fa4:	and	w0, w0, #0xff
   14fa8:	cmp	w0, #0x0
   14fac:	b.eq	14fb8 <plugin_init@@Base+0x3f78>  // b.none
   14fb0:	mov	w19, #0x0                   	// #0
   14fb4:	b	1509c <plugin_init@@Base+0x405c>
   14fb8:	add	x0, sp, #0x48
   14fbc:	ldr	x1, [sp, #56]
   14fc0:	bl	12308 <plugin_init@@Base+0x12c8>
   14fc4:	cmp	w0, #0x0
   14fc8:	cset	w0, eq  // eq = none
   14fcc:	and	w0, w0, #0xff
   14fd0:	cmp	w0, #0x0
   14fd4:	b.eq	14fe0 <plugin_init@@Base+0x3fa0>  // b.none
   14fd8:	mov	w19, #0x0                   	// #0
   14fdc:	b	1509c <plugin_init@@Base+0x405c>
   14fe0:	add	x0, sp, #0x40
   14fe4:	ldr	x1, [sp, #56]
   14fe8:	bl	1a258 <plugin_init@@Base+0x9218>
   14fec:	cmp	w0, #0x0
   14ff0:	cset	w0, eq  // eq = none
   14ff4:	and	w0, w0, #0xff
   14ff8:	cmp	w0, #0x0
   14ffc:	b.eq	15008 <plugin_init@@Base+0x3fc8>  // b.none
   15000:	mov	w19, #0x0                   	// #0
   15004:	b	1509c <plugin_init@@Base+0x405c>
   15008:	add	x0, sp, #0x60
   1500c:	bl	1a18c <plugin_init@@Base+0x914c>
   15010:	mov	x19, x0
   15014:	add	x0, sp, #0x58
   15018:	bl	122f0 <plugin_init@@Base+0x12b0>
   1501c:	mov	x20, x0
   15020:	add	x0, sp, #0x50
   15024:	bl	1a18c <plugin_init@@Base+0x914c>
   15028:	mov	x21, x0
   1502c:	add	x0, sp, #0x48
   15030:	bl	122f0 <plugin_init@@Base+0x12b0>
   15034:	mov	x22, x0
   15038:	add	x0, sp, #0x40
   1503c:	bl	1a280 <plugin_init@@Base+0x9240>
   15040:	mov	w5, w0
   15044:	mov	x4, x22
   15048:	mov	x3, x21
   1504c:	mov	x2, x20
   15050:	mov	x1, x19
   15054:	ldr	x0, [sp, #56]
   15058:	bl	d650 <_Z19decl_assembler_nameP9tree_node@plt+0x68f0>
   1505c:	str	x0, [sp, #104]
   15060:	mov	w1, #0x52                  	// #82
   15064:	ldr	x0, [sp, #56]
   15068:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   1506c:	cmp	w0, #0x0
   15070:	cset	w0, eq  // eq = none
   15074:	and	w0, w0, #0xff
   15078:	cmp	w0, #0x0
   1507c:	b.eq	15088 <plugin_init@@Base+0x4048>  // b.none
   15080:	mov	w19, #0x0                   	// #0
   15084:	b	1509c <plugin_init@@Base+0x405c>
   15088:	ldr	x1, [sp, #104]
   1508c:	ldr	x0, [sp, #56]
   15090:	bl	1a1a4 <plugin_init@@Base+0x9164>
   15094:	mov	w19, w0
   15098:	nop
   1509c:	add	x0, sp, #0x40
   150a0:	bl	1a244 <plugin_init@@Base+0x9204>
   150a4:	add	x0, sp, #0x48
   150a8:	bl	122bc <plugin_init@@Base+0x127c>
   150ac:	add	x0, sp, #0x50
   150b0:	bl	1a150 <plugin_init@@Base+0x9110>
   150b4:	add	x0, sp, #0x58
   150b8:	bl	122bc <plugin_init@@Base+0x127c>
   150bc:	add	x0, sp, #0x60
   150c0:	bl	1a150 <plugin_init@@Base+0x9110>
   150c4:	mov	w0, w19
   150c8:	b	15100 <plugin_init@@Base+0x40c0>
   150cc:	mov	x19, x0
   150d0:	add	x0, sp, #0x40
   150d4:	bl	1a244 <plugin_init@@Base+0x9204>
   150d8:	add	x0, sp, #0x48
   150dc:	bl	122bc <plugin_init@@Base+0x127c>
   150e0:	add	x0, sp, #0x50
   150e4:	bl	1a150 <plugin_init@@Base+0x9110>
   150e8:	add	x0, sp, #0x58
   150ec:	bl	122bc <plugin_init@@Base+0x127c>
   150f0:	add	x0, sp, #0x60
   150f4:	bl	1a150 <plugin_init@@Base+0x9110>
   150f8:	mov	x0, x19
   150fc:	bl	6c60 <_Unwind_Resume@plt>
   15100:	ldp	x19, x20, [sp, #16]
   15104:	ldp	x21, x22, [sp, #32]
   15108:	ldp	x29, x30, [sp], #112
   1510c:	ret
   15110:	stp	x29, x30, [sp, #-80]!
   15114:	mov	x29, sp
   15118:	stp	x19, x20, [sp, #16]
   1511c:	str	x0, [sp, #40]
   15120:	add	x0, sp, #0x40
   15124:	bl	1a13c <plugin_init@@Base+0x90fc>
   15128:	add	x0, sp, #0x38
   1512c:	bl	122a0 <plugin_init@@Base+0x1260>
   15130:	add	x0, sp, #0x30
   15134:	bl	124d4 <plugin_init@@Base+0x1494>
   15138:	mov	x1, #0x3                   	// #3
   1513c:	ldr	x0, [sp, #40]
   15140:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   15144:	cmp	w0, #0x0
   15148:	cset	w0, eq  // eq = none
   1514c:	and	w0, w0, #0xff
   15150:	cmp	w0, #0x0
   15154:	b.eq	15160 <plugin_init@@Base+0x4120>  // b.none
   15158:	mov	w19, #0x0                   	// #0
   1515c:	b	1524c <plugin_init@@Base+0x420c>
   15160:	add	x0, sp, #0x40
   15164:	ldr	x1, [sp, #40]
   15168:	bl	1a164 <plugin_init@@Base+0x9124>
   1516c:	cmp	w0, #0x0
   15170:	cset	w0, eq  // eq = none
   15174:	and	w0, w0, #0xff
   15178:	cmp	w0, #0x0
   1517c:	b.eq	15188 <plugin_init@@Base+0x4148>  // b.none
   15180:	mov	w19, #0x0                   	// #0
   15184:	b	1524c <plugin_init@@Base+0x420c>
   15188:	add	x0, sp, #0x38
   1518c:	ldr	x1, [sp, #40]
   15190:	bl	12308 <plugin_init@@Base+0x12c8>
   15194:	cmp	w0, #0x0
   15198:	cset	w0, eq  // eq = none
   1519c:	and	w0, w0, #0xff
   151a0:	cmp	w0, #0x0
   151a4:	b.eq	151b0 <plugin_init@@Base+0x4170>  // b.none
   151a8:	mov	w19, #0x0                   	// #0
   151ac:	b	1524c <plugin_init@@Base+0x420c>
   151b0:	add	x0, sp, #0x30
   151b4:	ldr	x1, [sp, #40]
   151b8:	bl	12590 <plugin_init@@Base+0x1550>
   151bc:	cmp	w0, #0x0
   151c0:	cset	w0, eq  // eq = none
   151c4:	and	w0, w0, #0xff
   151c8:	cmp	w0, #0x0
   151cc:	b.eq	151d8 <plugin_init@@Base+0x4198>  // b.none
   151d0:	mov	w19, #0x0                   	// #0
   151d4:	b	1524c <plugin_init@@Base+0x420c>
   151d8:	add	x0, sp, #0x40
   151dc:	bl	1a18c <plugin_init@@Base+0x914c>
   151e0:	mov	x19, x0
   151e4:	add	x0, sp, #0x38
   151e8:	bl	122f0 <plugin_init@@Base+0x12b0>
   151ec:	mov	x20, x0
   151f0:	add	x0, sp, #0x30
   151f4:	bl	12578 <plugin_init@@Base+0x1538>
   151f8:	mov	x3, x0
   151fc:	mov	x2, x20
   15200:	mov	x1, x19
   15204:	ldr	x0, [sp, #40]
   15208:	bl	d988 <_Z19decl_assembler_nameP9tree_node@plt+0x6c28>
   1520c:	str	x0, [sp, #72]
   15210:	mov	w1, #0x52                  	// #82
   15214:	ldr	x0, [sp, #40]
   15218:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   1521c:	cmp	w0, #0x0
   15220:	cset	w0, eq  // eq = none
   15224:	and	w0, w0, #0xff
   15228:	cmp	w0, #0x0
   1522c:	b.eq	15238 <plugin_init@@Base+0x41f8>  // b.none
   15230:	mov	w19, #0x0                   	// #0
   15234:	b	1524c <plugin_init@@Base+0x420c>
   15238:	ldr	x1, [sp, #72]
   1523c:	ldr	x0, [sp, #40]
   15240:	bl	1a1a4 <plugin_init@@Base+0x9164>
   15244:	mov	w19, w0
   15248:	nop
   1524c:	add	x0, sp, #0x30
   15250:	bl	124f0 <plugin_init@@Base+0x14b0>
   15254:	add	x0, sp, #0x38
   15258:	bl	122bc <plugin_init@@Base+0x127c>
   1525c:	add	x0, sp, #0x40
   15260:	bl	1a150 <plugin_init@@Base+0x9110>
   15264:	mov	w0, w19
   15268:	b	15290 <plugin_init@@Base+0x4250>
   1526c:	mov	x19, x0
   15270:	add	x0, sp, #0x30
   15274:	bl	124f0 <plugin_init@@Base+0x14b0>
   15278:	add	x0, sp, #0x38
   1527c:	bl	122bc <plugin_init@@Base+0x127c>
   15280:	add	x0, sp, #0x40
   15284:	bl	1a150 <plugin_init@@Base+0x9110>
   15288:	mov	x0, x19
   1528c:	bl	6c60 <_Unwind_Resume@plt>
   15290:	ldp	x19, x20, [sp, #16]
   15294:	ldp	x29, x30, [sp], #80
   15298:	ret
   1529c:	stp	x29, x30, [sp, #-80]!
   152a0:	mov	x29, sp
   152a4:	str	x19, [sp, #16]
   152a8:	str	x0, [sp, #40]
   152ac:	add	x0, sp, #0x40
   152b0:	bl	1a13c <plugin_init@@Base+0x90fc>
   152b4:	add	x0, sp, #0x38
   152b8:	bl	122a0 <plugin_init@@Base+0x1260>
   152bc:	mov	x1, #0x2                   	// #2
   152c0:	ldr	x0, [sp, #40]
   152c4:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   152c8:	cmp	w0, #0x0
   152cc:	cset	w0, eq  // eq = none
   152d0:	and	w0, w0, #0xff
   152d4:	cmp	w0, #0x0
   152d8:	b.eq	152e4 <plugin_init@@Base+0x42a4>  // b.none
   152dc:	mov	w19, #0x0                   	// #0
   152e0:	b	15398 <plugin_init@@Base+0x4358>
   152e4:	add	x0, sp, #0x40
   152e8:	ldr	x1, [sp, #40]
   152ec:	bl	1a164 <plugin_init@@Base+0x9124>
   152f0:	cmp	w0, #0x0
   152f4:	cset	w0, eq  // eq = none
   152f8:	and	w0, w0, #0xff
   152fc:	cmp	w0, #0x0
   15300:	b.eq	1530c <plugin_init@@Base+0x42cc>  // b.none
   15304:	mov	w19, #0x0                   	// #0
   15308:	b	15398 <plugin_init@@Base+0x4358>
   1530c:	add	x0, sp, #0x38
   15310:	ldr	x1, [sp, #40]
   15314:	bl	12308 <plugin_init@@Base+0x12c8>
   15318:	cmp	w0, #0x0
   1531c:	cset	w0, eq  // eq = none
   15320:	and	w0, w0, #0xff
   15324:	cmp	w0, #0x0
   15328:	b.eq	15334 <plugin_init@@Base+0x42f4>  // b.none
   1532c:	mov	w19, #0x0                   	// #0
   15330:	b	15398 <plugin_init@@Base+0x4358>
   15334:	add	x0, sp, #0x40
   15338:	bl	1a18c <plugin_init@@Base+0x914c>
   1533c:	mov	x19, x0
   15340:	add	x0, sp, #0x38
   15344:	bl	122f0 <plugin_init@@Base+0x12b0>
   15348:	mov	x2, x0
   1534c:	mov	x1, x19
   15350:	ldr	x0, [sp, #40]
   15354:	bl	da1c <_Z19decl_assembler_nameP9tree_node@plt+0x6cbc>
   15358:	str	x0, [sp, #72]
   1535c:	mov	w1, #0x52                  	// #82
   15360:	ldr	x0, [sp, #40]
   15364:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   15368:	cmp	w0, #0x0
   1536c:	cset	w0, eq  // eq = none
   15370:	and	w0, w0, #0xff
   15374:	cmp	w0, #0x0
   15378:	b.eq	15384 <plugin_init@@Base+0x4344>  // b.none
   1537c:	mov	w19, #0x0                   	// #0
   15380:	b	15398 <plugin_init@@Base+0x4358>
   15384:	ldr	x1, [sp, #72]
   15388:	ldr	x0, [sp, #40]
   1538c:	bl	1a1a4 <plugin_init@@Base+0x9164>
   15390:	mov	w19, w0
   15394:	nop
   15398:	add	x0, sp, #0x38
   1539c:	bl	122bc <plugin_init@@Base+0x127c>
   153a0:	add	x0, sp, #0x40
   153a4:	bl	1a150 <plugin_init@@Base+0x9110>
   153a8:	mov	w0, w19
   153ac:	b	153cc <plugin_init@@Base+0x438c>
   153b0:	mov	x19, x0
   153b4:	add	x0, sp, #0x38
   153b8:	bl	122bc <plugin_init@@Base+0x127c>
   153bc:	add	x0, sp, #0x40
   153c0:	bl	1a150 <plugin_init@@Base+0x9110>
   153c4:	mov	x0, x19
   153c8:	bl	6c60 <_Unwind_Resume@plt>
   153cc:	ldr	x19, [sp, #16]
   153d0:	ldp	x29, x30, [sp], #80
   153d4:	ret
   153d8:	stp	x29, x30, [sp, #-80]!
   153dc:	mov	x29, sp
   153e0:	str	x19, [sp, #16]
   153e4:	str	x0, [sp, #40]
   153e8:	add	x0, sp, #0x40
   153ec:	bl	1a13c <plugin_init@@Base+0x90fc>
   153f0:	add	x0, sp, #0x38
   153f4:	bl	124d4 <plugin_init@@Base+0x1494>
   153f8:	mov	x1, #0x2                   	// #2
   153fc:	ldr	x0, [sp, #40]
   15400:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   15404:	cmp	w0, #0x0
   15408:	cset	w0, eq  // eq = none
   1540c:	and	w0, w0, #0xff
   15410:	cmp	w0, #0x0
   15414:	b.eq	15420 <plugin_init@@Base+0x43e0>  // b.none
   15418:	mov	w19, #0x0                   	// #0
   1541c:	b	154d4 <plugin_init@@Base+0x4494>
   15420:	add	x0, sp, #0x40
   15424:	ldr	x1, [sp, #40]
   15428:	bl	1a164 <plugin_init@@Base+0x9124>
   1542c:	cmp	w0, #0x0
   15430:	cset	w0, eq  // eq = none
   15434:	and	w0, w0, #0xff
   15438:	cmp	w0, #0x0
   1543c:	b.eq	15448 <plugin_init@@Base+0x4408>  // b.none
   15440:	mov	w19, #0x0                   	// #0
   15444:	b	154d4 <plugin_init@@Base+0x4494>
   15448:	add	x0, sp, #0x38
   1544c:	ldr	x1, [sp, #40]
   15450:	bl	12590 <plugin_init@@Base+0x1550>
   15454:	cmp	w0, #0x0
   15458:	cset	w0, eq  // eq = none
   1545c:	and	w0, w0, #0xff
   15460:	cmp	w0, #0x0
   15464:	b.eq	15470 <plugin_init@@Base+0x4430>  // b.none
   15468:	mov	w19, #0x0                   	// #0
   1546c:	b	154d4 <plugin_init@@Base+0x4494>
   15470:	add	x0, sp, #0x40
   15474:	bl	1a18c <plugin_init@@Base+0x914c>
   15478:	mov	x19, x0
   1547c:	add	x0, sp, #0x38
   15480:	bl	12578 <plugin_init@@Base+0x1538>
   15484:	mov	x2, x0
   15488:	mov	x1, x19
   1548c:	ldr	x0, [sp, #40]
   15490:	bl	da80 <_Z19decl_assembler_nameP9tree_node@plt+0x6d20>
   15494:	str	x0, [sp, #72]
   15498:	mov	w1, #0x52                  	// #82
   1549c:	ldr	x0, [sp, #40]
   154a0:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   154a4:	cmp	w0, #0x0
   154a8:	cset	w0, eq  // eq = none
   154ac:	and	w0, w0, #0xff
   154b0:	cmp	w0, #0x0
   154b4:	b.eq	154c0 <plugin_init@@Base+0x4480>  // b.none
   154b8:	mov	w19, #0x0                   	// #0
   154bc:	b	154d4 <plugin_init@@Base+0x4494>
   154c0:	ldr	x1, [sp, #72]
   154c4:	ldr	x0, [sp, #40]
   154c8:	bl	1a1a4 <plugin_init@@Base+0x9164>
   154cc:	mov	w19, w0
   154d0:	nop
   154d4:	add	x0, sp, #0x38
   154d8:	bl	124f0 <plugin_init@@Base+0x14b0>
   154dc:	add	x0, sp, #0x40
   154e0:	bl	1a150 <plugin_init@@Base+0x9110>
   154e4:	mov	w0, w19
   154e8:	b	15508 <plugin_init@@Base+0x44c8>
   154ec:	mov	x19, x0
   154f0:	add	x0, sp, #0x38
   154f4:	bl	124f0 <plugin_init@@Base+0x14b0>
   154f8:	add	x0, sp, #0x40
   154fc:	bl	1a150 <plugin_init@@Base+0x9110>
   15500:	mov	x0, x19
   15504:	bl	6c60 <_Unwind_Resume@plt>
   15508:	ldr	x19, [sp, #16]
   1550c:	ldp	x29, x30, [sp], #80
   15510:	ret
   15514:	stp	x29, x30, [sp, #-112]!
   15518:	mov	x29, sp
   1551c:	stp	x19, x20, [sp, #16]
   15520:	stp	x21, x22, [sp, #32]
   15524:	str	x0, [sp, #56]
   15528:	add	x0, sp, #0x60
   1552c:	bl	1a13c <plugin_init@@Base+0x90fc>
   15530:	add	x0, sp, #0x58
   15534:	bl	1a1c8 <plugin_init@@Base+0x9188>
   15538:	add	x0, sp, #0x50
   1553c:	bl	122a0 <plugin_init@@Base+0x1260>
   15540:	add	x0, sp, #0x48
   15544:	bl	1a13c <plugin_init@@Base+0x90fc>
   15548:	add	x0, sp, #0x40
   1554c:	bl	124d4 <plugin_init@@Base+0x1494>
   15550:	mov	x1, #0x5                   	// #5
   15554:	ldr	x0, [sp, #56]
   15558:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   1555c:	cmp	w0, #0x0
   15560:	cset	w0, eq  // eq = none
   15564:	and	w0, w0, #0xff
   15568:	cmp	w0, #0x0
   1556c:	b.eq	15578 <plugin_init@@Base+0x4538>  // b.none
   15570:	mov	w19, #0x0                   	// #0
   15574:	b	156d4 <plugin_init@@Base+0x4694>
   15578:	add	x0, sp, #0x60
   1557c:	ldr	x1, [sp, #56]
   15580:	bl	1a164 <plugin_init@@Base+0x9124>
   15584:	cmp	w0, #0x0
   15588:	cset	w0, eq  // eq = none
   1558c:	and	w0, w0, #0xff
   15590:	cmp	w0, #0x0
   15594:	b.eq	155a0 <plugin_init@@Base+0x4560>  // b.none
   15598:	mov	w19, #0x0                   	// #0
   1559c:	b	156d4 <plugin_init@@Base+0x4694>
   155a0:	add	x0, sp, #0x58
   155a4:	ldr	x1, [sp, #56]
   155a8:	bl	1a1f0 <plugin_init@@Base+0x91b0>
   155ac:	cmp	w0, #0x0
   155b0:	cset	w0, eq  // eq = none
   155b4:	and	w0, w0, #0xff
   155b8:	cmp	w0, #0x0
   155bc:	b.eq	155c8 <plugin_init@@Base+0x4588>  // b.none
   155c0:	mov	w19, #0x0                   	// #0
   155c4:	b	156d4 <plugin_init@@Base+0x4694>
   155c8:	add	x0, sp, #0x50
   155cc:	ldr	x1, [sp, #56]
   155d0:	bl	12308 <plugin_init@@Base+0x12c8>
   155d4:	cmp	w0, #0x0
   155d8:	cset	w0, eq  // eq = none
   155dc:	and	w0, w0, #0xff
   155e0:	cmp	w0, #0x0
   155e4:	b.eq	155f0 <plugin_init@@Base+0x45b0>  // b.none
   155e8:	mov	w19, #0x0                   	// #0
   155ec:	b	156d4 <plugin_init@@Base+0x4694>
   155f0:	add	x0, sp, #0x48
   155f4:	ldr	x1, [sp, #56]
   155f8:	bl	1a164 <plugin_init@@Base+0x9124>
   155fc:	cmp	w0, #0x0
   15600:	cset	w0, eq  // eq = none
   15604:	and	w0, w0, #0xff
   15608:	cmp	w0, #0x0
   1560c:	b.eq	15618 <plugin_init@@Base+0x45d8>  // b.none
   15610:	mov	w19, #0x0                   	// #0
   15614:	b	156d4 <plugin_init@@Base+0x4694>
   15618:	add	x0, sp, #0x40
   1561c:	ldr	x1, [sp, #56]
   15620:	bl	12590 <plugin_init@@Base+0x1550>
   15624:	cmp	w0, #0x0
   15628:	cset	w0, eq  // eq = none
   1562c:	and	w0, w0, #0xff
   15630:	cmp	w0, #0x0
   15634:	b.eq	15640 <plugin_init@@Base+0x4600>  // b.none
   15638:	mov	w19, #0x0                   	// #0
   1563c:	b	156d4 <plugin_init@@Base+0x4694>
   15640:	add	x0, sp, #0x60
   15644:	bl	1a18c <plugin_init@@Base+0x914c>
   15648:	mov	x19, x0
   1564c:	add	x0, sp, #0x58
   15650:	bl	1a218 <plugin_init@@Base+0x91d8>
   15654:	mov	w20, w0
   15658:	add	x0, sp, #0x50
   1565c:	bl	122f0 <plugin_init@@Base+0x12b0>
   15660:	mov	x21, x0
   15664:	add	x0, sp, #0x48
   15668:	bl	1a18c <plugin_init@@Base+0x914c>
   1566c:	mov	x22, x0
   15670:	add	x0, sp, #0x40
   15674:	bl	12578 <plugin_init@@Base+0x1538>
   15678:	mov	x5, x0
   1567c:	mov	x4, x22
   15680:	mov	x3, x21
   15684:	mov	w2, w20
   15688:	mov	x1, x19
   1568c:	ldr	x0, [sp, #56]
   15690:	bl	dae4 <_Z19decl_assembler_nameP9tree_node@plt+0x6d84>
   15694:	str	x0, [sp, #104]
   15698:	mov	w1, #0x52                  	// #82
   1569c:	ldr	x0, [sp, #56]
   156a0:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   156a4:	cmp	w0, #0x0
   156a8:	cset	w0, eq  // eq = none
   156ac:	and	w0, w0, #0xff
   156b0:	cmp	w0, #0x0
   156b4:	b.eq	156c0 <plugin_init@@Base+0x4680>  // b.none
   156b8:	mov	w19, #0x0                   	// #0
   156bc:	b	156d4 <plugin_init@@Base+0x4694>
   156c0:	ldr	x1, [sp, #104]
   156c4:	ldr	x0, [sp, #56]
   156c8:	bl	1a1a4 <plugin_init@@Base+0x9164>
   156cc:	mov	w19, w0
   156d0:	nop
   156d4:	add	x0, sp, #0x40
   156d8:	bl	124f0 <plugin_init@@Base+0x14b0>
   156dc:	add	x0, sp, #0x48
   156e0:	bl	1a150 <plugin_init@@Base+0x9110>
   156e4:	add	x0, sp, #0x50
   156e8:	bl	122bc <plugin_init@@Base+0x127c>
   156ec:	add	x0, sp, #0x58
   156f0:	bl	1a1dc <plugin_init@@Base+0x919c>
   156f4:	add	x0, sp, #0x60
   156f8:	bl	1a150 <plugin_init@@Base+0x9110>
   156fc:	mov	w0, w19
   15700:	b	15738 <plugin_init@@Base+0x46f8>
   15704:	mov	x19, x0
   15708:	add	x0, sp, #0x40
   1570c:	bl	124f0 <plugin_init@@Base+0x14b0>
   15710:	add	x0, sp, #0x48
   15714:	bl	1a150 <plugin_init@@Base+0x9110>
   15718:	add	x0, sp, #0x50
   1571c:	bl	122bc <plugin_init@@Base+0x127c>
   15720:	add	x0, sp, #0x58
   15724:	bl	1a1dc <plugin_init@@Base+0x919c>
   15728:	add	x0, sp, #0x60
   1572c:	bl	1a150 <plugin_init@@Base+0x9110>
   15730:	mov	x0, x19
   15734:	bl	6c60 <_Unwind_Resume@plt>
   15738:	ldp	x19, x20, [sp, #16]
   1573c:	ldp	x21, x22, [sp, #32]
   15740:	ldp	x29, x30, [sp], #112
   15744:	ret
   15748:	stp	x29, x30, [sp, #-80]!
   1574c:	mov	x29, sp
   15750:	str	x19, [sp, #16]
   15754:	str	x0, [sp, #40]
   15758:	add	x0, sp, #0x40
   1575c:	bl	1a13c <plugin_init@@Base+0x90fc>
   15760:	add	x0, sp, #0x38
   15764:	bl	1a368 <plugin_init@@Base+0x9328>
   15768:	mov	x1, #0x2                   	// #2
   1576c:	ldr	x0, [sp, #40]
   15770:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   15774:	cmp	w0, #0x0
   15778:	cset	w0, eq  // eq = none
   1577c:	and	w0, w0, #0xff
   15780:	cmp	w0, #0x0
   15784:	b.eq	15790 <plugin_init@@Base+0x4750>  // b.none
   15788:	mov	w19, #0x0                   	// #0
   1578c:	b	15844 <plugin_init@@Base+0x4804>
   15790:	add	x0, sp, #0x40
   15794:	ldr	x1, [sp, #40]
   15798:	bl	1a164 <plugin_init@@Base+0x9124>
   1579c:	cmp	w0, #0x0
   157a0:	cset	w0, eq  // eq = none
   157a4:	and	w0, w0, #0xff
   157a8:	cmp	w0, #0x0
   157ac:	b.eq	157b8 <plugin_init@@Base+0x4778>  // b.none
   157b0:	mov	w19, #0x0                   	// #0
   157b4:	b	15844 <plugin_init@@Base+0x4804>
   157b8:	add	x0, sp, #0x38
   157bc:	ldr	x1, [sp, #40]
   157c0:	bl	1a390 <plugin_init@@Base+0x9350>
   157c4:	cmp	w0, #0x0
   157c8:	cset	w0, eq  // eq = none
   157cc:	and	w0, w0, #0xff
   157d0:	cmp	w0, #0x0
   157d4:	b.eq	157e0 <plugin_init@@Base+0x47a0>  // b.none
   157d8:	mov	w19, #0x0                   	// #0
   157dc:	b	15844 <plugin_init@@Base+0x4804>
   157e0:	add	x0, sp, #0x40
   157e4:	bl	1a18c <plugin_init@@Base+0x914c>
   157e8:	mov	x19, x0
   157ec:	add	x0, sp, #0x38
   157f0:	bl	1a3b8 <plugin_init@@Base+0x9378>
   157f4:	mov	x2, x0
   157f8:	mov	x1, x19
   157fc:	ldr	x0, [sp, #40]
   15800:	bl	e6e4 <_Z19decl_assembler_nameP9tree_node@plt+0x7984>
   15804:	str	x0, [sp, #72]
   15808:	mov	w1, #0x52                  	// #82
   1580c:	ldr	x0, [sp, #40]
   15810:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   15814:	cmp	w0, #0x0
   15818:	cset	w0, eq  // eq = none
   1581c:	and	w0, w0, #0xff
   15820:	cmp	w0, #0x0
   15824:	b.eq	15830 <plugin_init@@Base+0x47f0>  // b.none
   15828:	mov	w19, #0x0                   	// #0
   1582c:	b	15844 <plugin_init@@Base+0x4804>
   15830:	ldr	x1, [sp, #72]
   15834:	ldr	x0, [sp, #40]
   15838:	bl	1a1a4 <plugin_init@@Base+0x9164>
   1583c:	mov	w19, w0
   15840:	nop
   15844:	add	x0, sp, #0x38
   15848:	bl	1a37c <plugin_init@@Base+0x933c>
   1584c:	add	x0, sp, #0x40
   15850:	bl	1a150 <plugin_init@@Base+0x9110>
   15854:	mov	w0, w19
   15858:	b	15878 <plugin_init@@Base+0x4838>
   1585c:	mov	x19, x0
   15860:	add	x0, sp, #0x38
   15864:	bl	1a37c <plugin_init@@Base+0x933c>
   15868:	add	x0, sp, #0x40
   1586c:	bl	1a150 <plugin_init@@Base+0x9110>
   15870:	mov	x0, x19
   15874:	bl	6c60 <_Unwind_Resume@plt>
   15878:	ldr	x19, [sp, #16]
   1587c:	ldp	x29, x30, [sp], #80
   15880:	ret
   15884:	stp	x29, x30, [sp, #-80]!
   15888:	mov	x29, sp
   1588c:	str	x19, [sp, #16]
   15890:	str	x0, [sp, #40]
   15894:	add	x0, sp, #0x40
   15898:	bl	1a13c <plugin_init@@Base+0x90fc>
   1589c:	add	x0, sp, #0x38
   158a0:	bl	1a300 <plugin_init@@Base+0x92c0>
   158a4:	mov	x1, #0x2                   	// #2
   158a8:	ldr	x0, [sp, #40]
   158ac:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   158b0:	cmp	w0, #0x0
   158b4:	cset	w0, eq  // eq = none
   158b8:	and	w0, w0, #0xff
   158bc:	cmp	w0, #0x0
   158c0:	b.eq	158cc <plugin_init@@Base+0x488c>  // b.none
   158c4:	mov	w19, #0x0                   	// #0
   158c8:	b	15980 <plugin_init@@Base+0x4940>
   158cc:	add	x0, sp, #0x40
   158d0:	ldr	x1, [sp, #40]
   158d4:	bl	1a164 <plugin_init@@Base+0x9124>
   158d8:	cmp	w0, #0x0
   158dc:	cset	w0, eq  // eq = none
   158e0:	and	w0, w0, #0xff
   158e4:	cmp	w0, #0x0
   158e8:	b.eq	158f4 <plugin_init@@Base+0x48b4>  // b.none
   158ec:	mov	w19, #0x0                   	// #0
   158f0:	b	15980 <plugin_init@@Base+0x4940>
   158f4:	add	x0, sp, #0x38
   158f8:	ldr	x1, [sp, #40]
   158fc:	bl	1a328 <plugin_init@@Base+0x92e8>
   15900:	cmp	w0, #0x0
   15904:	cset	w0, eq  // eq = none
   15908:	and	w0, w0, #0xff
   1590c:	cmp	w0, #0x0
   15910:	b.eq	1591c <plugin_init@@Base+0x48dc>  // b.none
   15914:	mov	w19, #0x0                   	// #0
   15918:	b	15980 <plugin_init@@Base+0x4940>
   1591c:	add	x0, sp, #0x40
   15920:	bl	1a18c <plugin_init@@Base+0x914c>
   15924:	mov	x19, x0
   15928:	add	x0, sp, #0x38
   1592c:	bl	1a350 <plugin_init@@Base+0x9310>
   15930:	mov	w2, w0
   15934:	mov	x1, x19
   15938:	ldr	x0, [sp, #40]
   1593c:	bl	e748 <_Z19decl_assembler_nameP9tree_node@plt+0x79e8>
   15940:	str	x0, [sp, #72]
   15944:	mov	w1, #0x52                  	// #82
   15948:	ldr	x0, [sp, #40]
   1594c:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   15950:	cmp	w0, #0x0
   15954:	cset	w0, eq  // eq = none
   15958:	and	w0, w0, #0xff
   1595c:	cmp	w0, #0x0
   15960:	b.eq	1596c <plugin_init@@Base+0x492c>  // b.none
   15964:	mov	w19, #0x0                   	// #0
   15968:	b	15980 <plugin_init@@Base+0x4940>
   1596c:	ldr	x1, [sp, #72]
   15970:	ldr	x0, [sp, #40]
   15974:	bl	1a1a4 <plugin_init@@Base+0x9164>
   15978:	mov	w19, w0
   1597c:	nop
   15980:	add	x0, sp, #0x38
   15984:	bl	1a314 <plugin_init@@Base+0x92d4>
   15988:	add	x0, sp, #0x40
   1598c:	bl	1a150 <plugin_init@@Base+0x9110>
   15990:	mov	w0, w19
   15994:	b	159b4 <plugin_init@@Base+0x4974>
   15998:	mov	x19, x0
   1599c:	add	x0, sp, #0x38
   159a0:	bl	1a314 <plugin_init@@Base+0x92d4>
   159a4:	add	x0, sp, #0x40
   159a8:	bl	1a150 <plugin_init@@Base+0x9110>
   159ac:	mov	x0, x19
   159b0:	bl	6c60 <_Unwind_Resume@plt>
   159b4:	ldr	x19, [sp, #16]
   159b8:	ldp	x29, x30, [sp], #80
   159bc:	ret
   159c0:	stp	x29, x30, [sp, #-80]!
   159c4:	mov	x29, sp
   159c8:	str	x19, [sp, #16]
   159cc:	str	x0, [sp, #40]
   159d0:	add	x0, sp, #0x40
   159d4:	bl	122a0 <plugin_init@@Base+0x1260>
   159d8:	add	x0, sp, #0x38
   159dc:	bl	1a13c <plugin_init@@Base+0x90fc>
   159e0:	mov	x1, #0x2                   	// #2
   159e4:	ldr	x0, [sp, #40]
   159e8:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   159ec:	cmp	w0, #0x0
   159f0:	cset	w0, eq  // eq = none
   159f4:	and	w0, w0, #0xff
   159f8:	cmp	w0, #0x0
   159fc:	b.eq	15a08 <plugin_init@@Base+0x49c8>  // b.none
   15a00:	mov	w19, #0x0                   	// #0
   15a04:	b	15abc <plugin_init@@Base+0x4a7c>
   15a08:	add	x0, sp, #0x40
   15a0c:	ldr	x1, [sp, #40]
   15a10:	bl	12308 <plugin_init@@Base+0x12c8>
   15a14:	cmp	w0, #0x0
   15a18:	cset	w0, eq  // eq = none
   15a1c:	and	w0, w0, #0xff
   15a20:	cmp	w0, #0x0
   15a24:	b.eq	15a30 <plugin_init@@Base+0x49f0>  // b.none
   15a28:	mov	w19, #0x0                   	// #0
   15a2c:	b	15abc <plugin_init@@Base+0x4a7c>
   15a30:	add	x0, sp, #0x38
   15a34:	ldr	x1, [sp, #40]
   15a38:	bl	1a164 <plugin_init@@Base+0x9124>
   15a3c:	cmp	w0, #0x0
   15a40:	cset	w0, eq  // eq = none
   15a44:	and	w0, w0, #0xff
   15a48:	cmp	w0, #0x0
   15a4c:	b.eq	15a58 <plugin_init@@Base+0x4a18>  // b.none
   15a50:	mov	w19, #0x0                   	// #0
   15a54:	b	15abc <plugin_init@@Base+0x4a7c>
   15a58:	add	x0, sp, #0x40
   15a5c:	bl	122f0 <plugin_init@@Base+0x12b0>
   15a60:	mov	x19, x0
   15a64:	add	x0, sp, #0x38
   15a68:	bl	1a18c <plugin_init@@Base+0x914c>
   15a6c:	mov	x2, x0
   15a70:	mov	x1, x19
   15a74:	ldr	x0, [sp, #40]
   15a78:	bl	e844 <_Z19decl_assembler_nameP9tree_node@plt+0x7ae4>
   15a7c:	str	x0, [sp, #72]
   15a80:	mov	w1, #0x52                  	// #82
   15a84:	ldr	x0, [sp, #40]
   15a88:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   15a8c:	cmp	w0, #0x0
   15a90:	cset	w0, eq  // eq = none
   15a94:	and	w0, w0, #0xff
   15a98:	cmp	w0, #0x0
   15a9c:	b.eq	15aa8 <plugin_init@@Base+0x4a68>  // b.none
   15aa0:	mov	w19, #0x0                   	// #0
   15aa4:	b	15abc <plugin_init@@Base+0x4a7c>
   15aa8:	ldr	x1, [sp, #72]
   15aac:	ldr	x0, [sp, #40]
   15ab0:	bl	1a1a4 <plugin_init@@Base+0x9164>
   15ab4:	mov	w19, w0
   15ab8:	nop
   15abc:	add	x0, sp, #0x38
   15ac0:	bl	1a150 <plugin_init@@Base+0x9110>
   15ac4:	add	x0, sp, #0x40
   15ac8:	bl	122bc <plugin_init@@Base+0x127c>
   15acc:	mov	w0, w19
   15ad0:	b	15af0 <plugin_init@@Base+0x4ab0>
   15ad4:	mov	x19, x0
   15ad8:	add	x0, sp, #0x38
   15adc:	bl	1a150 <plugin_init@@Base+0x9110>
   15ae0:	add	x0, sp, #0x40
   15ae4:	bl	122bc <plugin_init@@Base+0x127c>
   15ae8:	mov	x0, x19
   15aec:	bl	6c60 <_Unwind_Resume@plt>
   15af0:	ldr	x19, [sp, #16]
   15af4:	ldp	x29, x30, [sp], #80
   15af8:	ret
   15afc:	stp	x29, x30, [sp, #-80]!
   15b00:	mov	x29, sp
   15b04:	stp	x19, x20, [sp, #16]
   15b08:	str	x0, [sp, #40]
   15b0c:	add	x0, sp, #0x40
   15b10:	bl	122a0 <plugin_init@@Base+0x1260>
   15b14:	add	x0, sp, #0x38
   15b18:	bl	1a13c <plugin_init@@Base+0x90fc>
   15b1c:	add	x0, sp, #0x30
   15b20:	bl	1a13c <plugin_init@@Base+0x90fc>
   15b24:	mov	x1, #0x3                   	// #3
   15b28:	ldr	x0, [sp, #40]
   15b2c:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   15b30:	cmp	w0, #0x0
   15b34:	cset	w0, eq  // eq = none
   15b38:	and	w0, w0, #0xff
   15b3c:	cmp	w0, #0x0
   15b40:	b.eq	15b4c <plugin_init@@Base+0x4b0c>  // b.none
   15b44:	mov	w19, #0x0                   	// #0
   15b48:	b	15c38 <plugin_init@@Base+0x4bf8>
   15b4c:	add	x0, sp, #0x40
   15b50:	ldr	x1, [sp, #40]
   15b54:	bl	12308 <plugin_init@@Base+0x12c8>
   15b58:	cmp	w0, #0x0
   15b5c:	cset	w0, eq  // eq = none
   15b60:	and	w0, w0, #0xff
   15b64:	cmp	w0, #0x0
   15b68:	b.eq	15b74 <plugin_init@@Base+0x4b34>  // b.none
   15b6c:	mov	w19, #0x0                   	// #0
   15b70:	b	15c38 <plugin_init@@Base+0x4bf8>
   15b74:	add	x0, sp, #0x38
   15b78:	ldr	x1, [sp, #40]
   15b7c:	bl	1a164 <plugin_init@@Base+0x9124>
   15b80:	cmp	w0, #0x0
   15b84:	cset	w0, eq  // eq = none
   15b88:	and	w0, w0, #0xff
   15b8c:	cmp	w0, #0x0
   15b90:	b.eq	15b9c <plugin_init@@Base+0x4b5c>  // b.none
   15b94:	mov	w19, #0x0                   	// #0
   15b98:	b	15c38 <plugin_init@@Base+0x4bf8>
   15b9c:	add	x0, sp, #0x30
   15ba0:	ldr	x1, [sp, #40]
   15ba4:	bl	1a164 <plugin_init@@Base+0x9124>
   15ba8:	cmp	w0, #0x0
   15bac:	cset	w0, eq  // eq = none
   15bb0:	and	w0, w0, #0xff
   15bb4:	cmp	w0, #0x0
   15bb8:	b.eq	15bc4 <plugin_init@@Base+0x4b84>  // b.none
   15bbc:	mov	w19, #0x0                   	// #0
   15bc0:	b	15c38 <plugin_init@@Base+0x4bf8>
   15bc4:	add	x0, sp, #0x40
   15bc8:	bl	122f0 <plugin_init@@Base+0x12b0>
   15bcc:	mov	x19, x0
   15bd0:	add	x0, sp, #0x38
   15bd4:	bl	1a18c <plugin_init@@Base+0x914c>
   15bd8:	mov	x20, x0
   15bdc:	add	x0, sp, #0x30
   15be0:	bl	1a18c <plugin_init@@Base+0x914c>
   15be4:	mov	x3, x0
   15be8:	mov	x2, x20
   15bec:	mov	x1, x19
   15bf0:	ldr	x0, [sp, #40]
   15bf4:	bl	ee88 <_Z19decl_assembler_nameP9tree_node@plt+0x8128>
   15bf8:	str	x0, [sp, #72]
   15bfc:	mov	w1, #0x52                  	// #82
   15c00:	ldr	x0, [sp, #40]
   15c04:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   15c08:	cmp	w0, #0x0
   15c0c:	cset	w0, eq  // eq = none
   15c10:	and	w0, w0, #0xff
   15c14:	cmp	w0, #0x0
   15c18:	b.eq	15c24 <plugin_init@@Base+0x4be4>  // b.none
   15c1c:	mov	w19, #0x0                   	// #0
   15c20:	b	15c38 <plugin_init@@Base+0x4bf8>
   15c24:	ldr	x1, [sp, #72]
   15c28:	ldr	x0, [sp, #40]
   15c2c:	bl	1a1a4 <plugin_init@@Base+0x9164>
   15c30:	mov	w19, w0
   15c34:	nop
   15c38:	add	x0, sp, #0x30
   15c3c:	bl	1a150 <plugin_init@@Base+0x9110>
   15c40:	add	x0, sp, #0x38
   15c44:	bl	1a150 <plugin_init@@Base+0x9110>
   15c48:	add	x0, sp, #0x40
   15c4c:	bl	122bc <plugin_init@@Base+0x127c>
   15c50:	mov	w0, w19
   15c54:	b	15c7c <plugin_init@@Base+0x4c3c>
   15c58:	mov	x19, x0
   15c5c:	add	x0, sp, #0x30
   15c60:	bl	1a150 <plugin_init@@Base+0x9110>
   15c64:	add	x0, sp, #0x38
   15c68:	bl	1a150 <plugin_init@@Base+0x9110>
   15c6c:	add	x0, sp, #0x40
   15c70:	bl	122bc <plugin_init@@Base+0x127c>
   15c74:	mov	x0, x19
   15c78:	bl	6c60 <_Unwind_Resume@plt>
   15c7c:	ldp	x19, x20, [sp, #16]
   15c80:	ldp	x29, x30, [sp], #80
   15c84:	ret
   15c88:	stp	x29, x30, [sp, #-112]!
   15c8c:	mov	x29, sp
   15c90:	stp	x19, x20, [sp, #16]
   15c94:	str	x21, [sp, #32]
   15c98:	str	x0, [sp, #56]
   15c9c:	add	x0, sp, #0x60
   15ca0:	bl	122a0 <plugin_init@@Base+0x1260>
   15ca4:	add	x0, sp, #0x58
   15ca8:	bl	1a13c <plugin_init@@Base+0x90fc>
   15cac:	add	x0, sp, #0x50
   15cb0:	bl	1a13c <plugin_init@@Base+0x90fc>
   15cb4:	add	x0, sp, #0x48
   15cb8:	bl	1a13c <plugin_init@@Base+0x90fc>
   15cbc:	mov	x1, #0x4                   	// #4
   15cc0:	ldr	x0, [sp, #56]
   15cc4:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   15cc8:	cmp	w0, #0x0
   15ccc:	cset	w0, eq  // eq = none
   15cd0:	and	w0, w0, #0xff
   15cd4:	cmp	w0, #0x0
   15cd8:	b.eq	15ce4 <plugin_init@@Base+0x4ca4>  // b.none
   15cdc:	mov	w19, #0x0                   	// #0
   15ce0:	b	15e08 <plugin_init@@Base+0x4dc8>
   15ce4:	add	x0, sp, #0x60
   15ce8:	ldr	x1, [sp, #56]
   15cec:	bl	12308 <plugin_init@@Base+0x12c8>
   15cf0:	cmp	w0, #0x0
   15cf4:	cset	w0, eq  // eq = none
   15cf8:	and	w0, w0, #0xff
   15cfc:	cmp	w0, #0x0
   15d00:	b.eq	15d0c <plugin_init@@Base+0x4ccc>  // b.none
   15d04:	mov	w19, #0x0                   	// #0
   15d08:	b	15e08 <plugin_init@@Base+0x4dc8>
   15d0c:	add	x0, sp, #0x58
   15d10:	ldr	x1, [sp, #56]
   15d14:	bl	1a164 <plugin_init@@Base+0x9124>
   15d18:	cmp	w0, #0x0
   15d1c:	cset	w0, eq  // eq = none
   15d20:	and	w0, w0, #0xff
   15d24:	cmp	w0, #0x0
   15d28:	b.eq	15d34 <plugin_init@@Base+0x4cf4>  // b.none
   15d2c:	mov	w19, #0x0                   	// #0
   15d30:	b	15e08 <plugin_init@@Base+0x4dc8>
   15d34:	add	x0, sp, #0x50
   15d38:	ldr	x1, [sp, #56]
   15d3c:	bl	1a164 <plugin_init@@Base+0x9124>
   15d40:	cmp	w0, #0x0
   15d44:	cset	w0, eq  // eq = none
   15d48:	and	w0, w0, #0xff
   15d4c:	cmp	w0, #0x0
   15d50:	b.eq	15d5c <plugin_init@@Base+0x4d1c>  // b.none
   15d54:	mov	w19, #0x0                   	// #0
   15d58:	b	15e08 <plugin_init@@Base+0x4dc8>
   15d5c:	add	x0, sp, #0x48
   15d60:	ldr	x1, [sp, #56]
   15d64:	bl	1a164 <plugin_init@@Base+0x9124>
   15d68:	cmp	w0, #0x0
   15d6c:	cset	w0, eq  // eq = none
   15d70:	and	w0, w0, #0xff
   15d74:	cmp	w0, #0x0
   15d78:	b.eq	15d84 <plugin_init@@Base+0x4d44>  // b.none
   15d7c:	mov	w19, #0x0                   	// #0
   15d80:	b	15e08 <plugin_init@@Base+0x4dc8>
   15d84:	add	x0, sp, #0x60
   15d88:	bl	122f0 <plugin_init@@Base+0x12b0>
   15d8c:	mov	x19, x0
   15d90:	add	x0, sp, #0x58
   15d94:	bl	1a18c <plugin_init@@Base+0x914c>
   15d98:	mov	x20, x0
   15d9c:	add	x0, sp, #0x50
   15da0:	bl	1a18c <plugin_init@@Base+0x914c>
   15da4:	mov	x21, x0
   15da8:	add	x0, sp, #0x48
   15dac:	bl	1a18c <plugin_init@@Base+0x914c>
   15db0:	mov	x4, x0
   15db4:	mov	x3, x21
   15db8:	mov	x2, x20
   15dbc:	mov	x1, x19
   15dc0:	ldr	x0, [sp, #56]
   15dc4:	bl	f3ac <_Z19decl_assembler_nameP9tree_node@plt+0x864c>
   15dc8:	str	x0, [sp, #104]
   15dcc:	mov	w1, #0x52                  	// #82
   15dd0:	ldr	x0, [sp, #56]
   15dd4:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   15dd8:	cmp	w0, #0x0
   15ddc:	cset	w0, eq  // eq = none
   15de0:	and	w0, w0, #0xff
   15de4:	cmp	w0, #0x0
   15de8:	b.eq	15df4 <plugin_init@@Base+0x4db4>  // b.none
   15dec:	mov	w19, #0x0                   	// #0
   15df0:	b	15e08 <plugin_init@@Base+0x4dc8>
   15df4:	ldr	x1, [sp, #104]
   15df8:	ldr	x0, [sp, #56]
   15dfc:	bl	1a1a4 <plugin_init@@Base+0x9164>
   15e00:	mov	w19, w0
   15e04:	nop
   15e08:	add	x0, sp, #0x48
   15e0c:	bl	1a150 <plugin_init@@Base+0x9110>
   15e10:	add	x0, sp, #0x50
   15e14:	bl	1a150 <plugin_init@@Base+0x9110>
   15e18:	add	x0, sp, #0x58
   15e1c:	bl	1a150 <plugin_init@@Base+0x9110>
   15e20:	add	x0, sp, #0x60
   15e24:	bl	122bc <plugin_init@@Base+0x127c>
   15e28:	mov	w0, w19
   15e2c:	b	15e5c <plugin_init@@Base+0x4e1c>
   15e30:	mov	x19, x0
   15e34:	add	x0, sp, #0x48
   15e38:	bl	1a150 <plugin_init@@Base+0x9110>
   15e3c:	add	x0, sp, #0x50
   15e40:	bl	1a150 <plugin_init@@Base+0x9110>
   15e44:	add	x0, sp, #0x58
   15e48:	bl	1a150 <plugin_init@@Base+0x9110>
   15e4c:	add	x0, sp, #0x60
   15e50:	bl	122bc <plugin_init@@Base+0x127c>
   15e54:	mov	x0, x19
   15e58:	bl	6c60 <_Unwind_Resume@plt>
   15e5c:	ldp	x19, x20, [sp, #16]
   15e60:	ldr	x21, [sp, #32]
   15e64:	ldp	x29, x30, [sp], #112
   15e68:	ret
   15e6c:	stp	x29, x30, [sp, #-80]!
   15e70:	mov	x29, sp
   15e74:	str	x19, [sp, #16]
   15e78:	str	x0, [sp, #40]
   15e7c:	add	x0, sp, #0x40
   15e80:	bl	122a0 <plugin_init@@Base+0x1260>
   15e84:	add	x0, sp, #0x38
   15e88:	bl	1a13c <plugin_init@@Base+0x90fc>
   15e8c:	mov	x1, #0x2                   	// #2
   15e90:	ldr	x0, [sp, #40]
   15e94:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   15e98:	cmp	w0, #0x0
   15e9c:	cset	w0, eq  // eq = none
   15ea0:	and	w0, w0, #0xff
   15ea4:	cmp	w0, #0x0
   15ea8:	b.eq	15eb4 <plugin_init@@Base+0x4e74>  // b.none
   15eac:	mov	w19, #0x0                   	// #0
   15eb0:	b	15f68 <plugin_init@@Base+0x4f28>
   15eb4:	add	x0, sp, #0x40
   15eb8:	ldr	x1, [sp, #40]
   15ebc:	bl	12308 <plugin_init@@Base+0x12c8>
   15ec0:	cmp	w0, #0x0
   15ec4:	cset	w0, eq  // eq = none
   15ec8:	and	w0, w0, #0xff
   15ecc:	cmp	w0, #0x0
   15ed0:	b.eq	15edc <plugin_init@@Base+0x4e9c>  // b.none
   15ed4:	mov	w19, #0x0                   	// #0
   15ed8:	b	15f68 <plugin_init@@Base+0x4f28>
   15edc:	add	x0, sp, #0x38
   15ee0:	ldr	x1, [sp, #40]
   15ee4:	bl	1a164 <plugin_init@@Base+0x9124>
   15ee8:	cmp	w0, #0x0
   15eec:	cset	w0, eq  // eq = none
   15ef0:	and	w0, w0, #0xff
   15ef4:	cmp	w0, #0x0
   15ef8:	b.eq	15f04 <plugin_init@@Base+0x4ec4>  // b.none
   15efc:	mov	w19, #0x0                   	// #0
   15f00:	b	15f68 <plugin_init@@Base+0x4f28>
   15f04:	add	x0, sp, #0x40
   15f08:	bl	122f0 <plugin_init@@Base+0x12b0>
   15f0c:	mov	x19, x0
   15f10:	add	x0, sp, #0x38
   15f14:	bl	1a18c <plugin_init@@Base+0x914c>
   15f18:	mov	x2, x0
   15f1c:	mov	x1, x19
   15f20:	ldr	x0, [sp, #40]
   15f24:	bl	f558 <_Z19decl_assembler_nameP9tree_node@plt+0x87f8>
   15f28:	str	x0, [sp, #72]
   15f2c:	mov	w1, #0x52                  	// #82
   15f30:	ldr	x0, [sp, #40]
   15f34:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   15f38:	cmp	w0, #0x0
   15f3c:	cset	w0, eq  // eq = none
   15f40:	and	w0, w0, #0xff
   15f44:	cmp	w0, #0x0
   15f48:	b.eq	15f54 <plugin_init@@Base+0x4f14>  // b.none
   15f4c:	mov	w19, #0x0                   	// #0
   15f50:	b	15f68 <plugin_init@@Base+0x4f28>
   15f54:	ldr	x1, [sp, #72]
   15f58:	ldr	x0, [sp, #40]
   15f5c:	bl	1a1a4 <plugin_init@@Base+0x9164>
   15f60:	mov	w19, w0
   15f64:	nop
   15f68:	add	x0, sp, #0x38
   15f6c:	bl	1a150 <plugin_init@@Base+0x9110>
   15f70:	add	x0, sp, #0x40
   15f74:	bl	122bc <plugin_init@@Base+0x127c>
   15f78:	mov	w0, w19
   15f7c:	b	15f9c <plugin_init@@Base+0x4f5c>
   15f80:	mov	x19, x0
   15f84:	add	x0, sp, #0x38
   15f88:	bl	1a150 <plugin_init@@Base+0x9110>
   15f8c:	add	x0, sp, #0x40
   15f90:	bl	122bc <plugin_init@@Base+0x127c>
   15f94:	mov	x0, x19
   15f98:	bl	6c60 <_Unwind_Resume@plt>
   15f9c:	ldr	x19, [sp, #16]
   15fa0:	ldp	x29, x30, [sp], #80
   15fa4:	ret
   15fa8:	stp	x29, x30, [sp, #-80]!
   15fac:	mov	x29, sp
   15fb0:	stp	x19, x20, [sp, #16]
   15fb4:	str	x0, [sp, #40]
   15fb8:	add	x0, sp, #0x40
   15fbc:	bl	122a0 <plugin_init@@Base+0x1260>
   15fc0:	add	x0, sp, #0x38
   15fc4:	bl	1a13c <plugin_init@@Base+0x90fc>
   15fc8:	add	x0, sp, #0x30
   15fcc:	bl	1a13c <plugin_init@@Base+0x90fc>
   15fd0:	mov	x1, #0x3                   	// #3
   15fd4:	ldr	x0, [sp, #40]
   15fd8:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   15fdc:	cmp	w0, #0x0
   15fe0:	cset	w0, eq  // eq = none
   15fe4:	and	w0, w0, #0xff
   15fe8:	cmp	w0, #0x0
   15fec:	b.eq	15ff8 <plugin_init@@Base+0x4fb8>  // b.none
   15ff0:	mov	w19, #0x0                   	// #0
   15ff4:	b	160e4 <plugin_init@@Base+0x50a4>
   15ff8:	add	x0, sp, #0x40
   15ffc:	ldr	x1, [sp, #40]
   16000:	bl	12308 <plugin_init@@Base+0x12c8>
   16004:	cmp	w0, #0x0
   16008:	cset	w0, eq  // eq = none
   1600c:	and	w0, w0, #0xff
   16010:	cmp	w0, #0x0
   16014:	b.eq	16020 <plugin_init@@Base+0x4fe0>  // b.none
   16018:	mov	w19, #0x0                   	// #0
   1601c:	b	160e4 <plugin_init@@Base+0x50a4>
   16020:	add	x0, sp, #0x38
   16024:	ldr	x1, [sp, #40]
   16028:	bl	1a164 <plugin_init@@Base+0x9124>
   1602c:	cmp	w0, #0x0
   16030:	cset	w0, eq  // eq = none
   16034:	and	w0, w0, #0xff
   16038:	cmp	w0, #0x0
   1603c:	b.eq	16048 <plugin_init@@Base+0x5008>  // b.none
   16040:	mov	w19, #0x0                   	// #0
   16044:	b	160e4 <plugin_init@@Base+0x50a4>
   16048:	add	x0, sp, #0x30
   1604c:	ldr	x1, [sp, #40]
   16050:	bl	1a164 <plugin_init@@Base+0x9124>
   16054:	cmp	w0, #0x0
   16058:	cset	w0, eq  // eq = none
   1605c:	and	w0, w0, #0xff
   16060:	cmp	w0, #0x0
   16064:	b.eq	16070 <plugin_init@@Base+0x5030>  // b.none
   16068:	mov	w19, #0x0                   	// #0
   1606c:	b	160e4 <plugin_init@@Base+0x50a4>
   16070:	add	x0, sp, #0x40
   16074:	bl	122f0 <plugin_init@@Base+0x12b0>
   16078:	mov	x19, x0
   1607c:	add	x0, sp, #0x38
   16080:	bl	1a18c <plugin_init@@Base+0x914c>
   16084:	mov	x20, x0
   16088:	add	x0, sp, #0x30
   1608c:	bl	1a18c <plugin_init@@Base+0x914c>
   16090:	mov	x3, x0
   16094:	mov	x2, x20
   16098:	mov	x1, x19
   1609c:	ldr	x0, [sp, #40]
   160a0:	bl	f72c <_Z19decl_assembler_nameP9tree_node@plt+0x89cc>
   160a4:	str	x0, [sp, #72]
   160a8:	mov	w1, #0x52                  	// #82
   160ac:	ldr	x0, [sp, #40]
   160b0:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   160b4:	cmp	w0, #0x0
   160b8:	cset	w0, eq  // eq = none
   160bc:	and	w0, w0, #0xff
   160c0:	cmp	w0, #0x0
   160c4:	b.eq	160d0 <plugin_init@@Base+0x5090>  // b.none
   160c8:	mov	w19, #0x0                   	// #0
   160cc:	b	160e4 <plugin_init@@Base+0x50a4>
   160d0:	ldr	x1, [sp, #72]
   160d4:	ldr	x0, [sp, #40]
   160d8:	bl	1a1a4 <plugin_init@@Base+0x9164>
   160dc:	mov	w19, w0
   160e0:	nop
   160e4:	add	x0, sp, #0x30
   160e8:	bl	1a150 <plugin_init@@Base+0x9110>
   160ec:	add	x0, sp, #0x38
   160f0:	bl	1a150 <plugin_init@@Base+0x9110>
   160f4:	add	x0, sp, #0x40
   160f8:	bl	122bc <plugin_init@@Base+0x127c>
   160fc:	mov	w0, w19
   16100:	b	16128 <plugin_init@@Base+0x50e8>
   16104:	mov	x19, x0
   16108:	add	x0, sp, #0x30
   1610c:	bl	1a150 <plugin_init@@Base+0x9110>
   16110:	add	x0, sp, #0x38
   16114:	bl	1a150 <plugin_init@@Base+0x9110>
   16118:	add	x0, sp, #0x40
   1611c:	bl	122bc <plugin_init@@Base+0x127c>
   16120:	mov	x0, x19
   16124:	bl	6c60 <_Unwind_Resume@plt>
   16128:	ldp	x19, x20, [sp, #16]
   1612c:	ldp	x29, x30, [sp], #80
   16130:	ret
   16134:	stp	x29, x30, [sp, #-80]!
   16138:	mov	x29, sp
   1613c:	stp	x19, x20, [sp, #16]
   16140:	str	x0, [sp, #40]
   16144:	add	x0, sp, #0x40
   16148:	bl	122a0 <plugin_init@@Base+0x1260>
   1614c:	add	x0, sp, #0x38
   16150:	bl	1a13c <plugin_init@@Base+0x90fc>
   16154:	add	x0, sp, #0x30
   16158:	bl	125b8 <plugin_init@@Base+0x1578>
   1615c:	mov	x1, #0x3                   	// #3
   16160:	ldr	x0, [sp, #40]
   16164:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   16168:	cmp	w0, #0x0
   1616c:	cset	w0, eq  // eq = none
   16170:	and	w0, w0, #0xff
   16174:	cmp	w0, #0x0
   16178:	b.eq	16184 <plugin_init@@Base+0x5144>  // b.none
   1617c:	mov	w19, #0x0                   	// #0
   16180:	b	16270 <plugin_init@@Base+0x5230>
   16184:	add	x0, sp, #0x40
   16188:	ldr	x1, [sp, #40]
   1618c:	bl	12308 <plugin_init@@Base+0x12c8>
   16190:	cmp	w0, #0x0
   16194:	cset	w0, eq  // eq = none
   16198:	and	w0, w0, #0xff
   1619c:	cmp	w0, #0x0
   161a0:	b.eq	161ac <plugin_init@@Base+0x516c>  // b.none
   161a4:	mov	w19, #0x0                   	// #0
   161a8:	b	16270 <plugin_init@@Base+0x5230>
   161ac:	add	x0, sp, #0x38
   161b0:	ldr	x1, [sp, #40]
   161b4:	bl	1a164 <plugin_init@@Base+0x9124>
   161b8:	cmp	w0, #0x0
   161bc:	cset	w0, eq  // eq = none
   161c0:	and	w0, w0, #0xff
   161c4:	cmp	w0, #0x0
   161c8:	b.eq	161d4 <plugin_init@@Base+0x5194>  // b.none
   161cc:	mov	w19, #0x0                   	// #0
   161d0:	b	16270 <plugin_init@@Base+0x5230>
   161d4:	add	x0, sp, #0x30
   161d8:	ldr	x1, [sp, #40]
   161dc:	bl	12650 <plugin_init@@Base+0x1610>
   161e0:	cmp	w0, #0x0
   161e4:	cset	w0, eq  // eq = none
   161e8:	and	w0, w0, #0xff
   161ec:	cmp	w0, #0x0
   161f0:	b.eq	161fc <plugin_init@@Base+0x51bc>  // b.none
   161f4:	mov	w19, #0x0                   	// #0
   161f8:	b	16270 <plugin_init@@Base+0x5230>
   161fc:	add	x0, sp, #0x40
   16200:	bl	122f0 <plugin_init@@Base+0x12b0>
   16204:	mov	x19, x0
   16208:	add	x0, sp, #0x38
   1620c:	bl	1a18c <plugin_init@@Base+0x914c>
   16210:	mov	x20, x0
   16214:	add	x0, sp, #0x30
   16218:	bl	12638 <plugin_init@@Base+0x15f8>
   1621c:	mov	x3, x0
   16220:	mov	x2, x20
   16224:	mov	x1, x19
   16228:	ldr	x0, [sp, #40]
   1622c:	bl	faa8 <_Z19decl_assembler_nameP9tree_node@plt+0x8d48>
   16230:	str	x0, [sp, #72]
   16234:	mov	w1, #0x52                  	// #82
   16238:	ldr	x0, [sp, #40]
   1623c:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   16240:	cmp	w0, #0x0
   16244:	cset	w0, eq  // eq = none
   16248:	and	w0, w0, #0xff
   1624c:	cmp	w0, #0x0
   16250:	b.eq	1625c <plugin_init@@Base+0x521c>  // b.none
   16254:	mov	w19, #0x0                   	// #0
   16258:	b	16270 <plugin_init@@Base+0x5230>
   1625c:	ldr	x1, [sp, #72]
   16260:	ldr	x0, [sp, #40]
   16264:	bl	1a1a4 <plugin_init@@Base+0x9164>
   16268:	mov	w19, w0
   1626c:	nop
   16270:	add	x0, sp, #0x30
   16274:	bl	125d4 <plugin_init@@Base+0x1594>
   16278:	add	x0, sp, #0x38
   1627c:	bl	1a150 <plugin_init@@Base+0x9110>
   16280:	add	x0, sp, #0x40
   16284:	bl	122bc <plugin_init@@Base+0x127c>
   16288:	mov	w0, w19
   1628c:	b	162b4 <plugin_init@@Base+0x5274>
   16290:	mov	x19, x0
   16294:	add	x0, sp, #0x30
   16298:	bl	125d4 <plugin_init@@Base+0x1594>
   1629c:	add	x0, sp, #0x38
   162a0:	bl	1a150 <plugin_init@@Base+0x9110>
   162a4:	add	x0, sp, #0x40
   162a8:	bl	122bc <plugin_init@@Base+0x127c>
   162ac:	mov	x0, x19
   162b0:	bl	6c60 <_Unwind_Resume@plt>
   162b4:	ldp	x19, x20, [sp, #16]
   162b8:	ldp	x29, x30, [sp], #80
   162bc:	ret
   162c0:	stp	x29, x30, [sp, #-112]!
   162c4:	mov	x29, sp
   162c8:	stp	x19, x20, [sp, #16]
   162cc:	str	x21, [sp, #32]
   162d0:	str	x0, [sp, #56]
   162d4:	add	x0, sp, #0x60
   162d8:	bl	122a0 <plugin_init@@Base+0x1260>
   162dc:	add	x0, sp, #0x58
   162e0:	bl	125b8 <plugin_init@@Base+0x1578>
   162e4:	add	x0, sp, #0x50
   162e8:	bl	1a13c <plugin_init@@Base+0x90fc>
   162ec:	add	x0, sp, #0x48
   162f0:	bl	125b8 <plugin_init@@Base+0x1578>
   162f4:	mov	x1, #0x4                   	// #4
   162f8:	ldr	x0, [sp, #56]
   162fc:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   16300:	cmp	w0, #0x0
   16304:	cset	w0, eq  // eq = none
   16308:	and	w0, w0, #0xff
   1630c:	cmp	w0, #0x0
   16310:	b.eq	1631c <plugin_init@@Base+0x52dc>  // b.none
   16314:	mov	w19, #0x0                   	// #0
   16318:	b	16440 <plugin_init@@Base+0x5400>
   1631c:	add	x0, sp, #0x60
   16320:	ldr	x1, [sp, #56]
   16324:	bl	12308 <plugin_init@@Base+0x12c8>
   16328:	cmp	w0, #0x0
   1632c:	cset	w0, eq  // eq = none
   16330:	and	w0, w0, #0xff
   16334:	cmp	w0, #0x0
   16338:	b.eq	16344 <plugin_init@@Base+0x5304>  // b.none
   1633c:	mov	w19, #0x0                   	// #0
   16340:	b	16440 <plugin_init@@Base+0x5400>
   16344:	add	x0, sp, #0x58
   16348:	ldr	x1, [sp, #56]
   1634c:	bl	12650 <plugin_init@@Base+0x1610>
   16350:	cmp	w0, #0x0
   16354:	cset	w0, eq  // eq = none
   16358:	and	w0, w0, #0xff
   1635c:	cmp	w0, #0x0
   16360:	b.eq	1636c <plugin_init@@Base+0x532c>  // b.none
   16364:	mov	w19, #0x0                   	// #0
   16368:	b	16440 <plugin_init@@Base+0x5400>
   1636c:	add	x0, sp, #0x50
   16370:	ldr	x1, [sp, #56]
   16374:	bl	1a164 <plugin_init@@Base+0x9124>
   16378:	cmp	w0, #0x0
   1637c:	cset	w0, eq  // eq = none
   16380:	and	w0, w0, #0xff
   16384:	cmp	w0, #0x0
   16388:	b.eq	16394 <plugin_init@@Base+0x5354>  // b.none
   1638c:	mov	w19, #0x0                   	// #0
   16390:	b	16440 <plugin_init@@Base+0x5400>
   16394:	add	x0, sp, #0x48
   16398:	ldr	x1, [sp, #56]
   1639c:	bl	12650 <plugin_init@@Base+0x1610>
   163a0:	cmp	w0, #0x0
   163a4:	cset	w0, eq  // eq = none
   163a8:	and	w0, w0, #0xff
   163ac:	cmp	w0, #0x0
   163b0:	b.eq	163bc <plugin_init@@Base+0x537c>  // b.none
   163b4:	mov	w19, #0x0                   	// #0
   163b8:	b	16440 <plugin_init@@Base+0x5400>
   163bc:	add	x0, sp, #0x60
   163c0:	bl	122f0 <plugin_init@@Base+0x12b0>
   163c4:	mov	x19, x0
   163c8:	add	x0, sp, #0x58
   163cc:	bl	12638 <plugin_init@@Base+0x15f8>
   163d0:	mov	x20, x0
   163d4:	add	x0, sp, #0x50
   163d8:	bl	1a18c <plugin_init@@Base+0x914c>
   163dc:	mov	x21, x0
   163e0:	add	x0, sp, #0x48
   163e4:	bl	12638 <plugin_init@@Base+0x15f8>
   163e8:	mov	x4, x0
   163ec:	mov	x3, x21
   163f0:	mov	x2, x20
   163f4:	mov	x1, x19
   163f8:	ldr	x0, [sp, #56]
   163fc:	bl	fca8 <_Z19decl_assembler_nameP9tree_node@plt+0x8f48>
   16400:	str	x0, [sp, #104]
   16404:	mov	w1, #0x52                  	// #82
   16408:	ldr	x0, [sp, #56]
   1640c:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   16410:	cmp	w0, #0x0
   16414:	cset	w0, eq  // eq = none
   16418:	and	w0, w0, #0xff
   1641c:	cmp	w0, #0x0
   16420:	b.eq	1642c <plugin_init@@Base+0x53ec>  // b.none
   16424:	mov	w19, #0x0                   	// #0
   16428:	b	16440 <plugin_init@@Base+0x5400>
   1642c:	ldr	x1, [sp, #104]
   16430:	ldr	x0, [sp, #56]
   16434:	bl	1a1a4 <plugin_init@@Base+0x9164>
   16438:	mov	w19, w0
   1643c:	nop
   16440:	add	x0, sp, #0x48
   16444:	bl	125d4 <plugin_init@@Base+0x1594>
   16448:	add	x0, sp, #0x50
   1644c:	bl	1a150 <plugin_init@@Base+0x9110>
   16450:	add	x0, sp, #0x58
   16454:	bl	125d4 <plugin_init@@Base+0x1594>
   16458:	add	x0, sp, #0x60
   1645c:	bl	122bc <plugin_init@@Base+0x127c>
   16460:	mov	w0, w19
   16464:	b	16494 <plugin_init@@Base+0x5454>
   16468:	mov	x19, x0
   1646c:	add	x0, sp, #0x48
   16470:	bl	125d4 <plugin_init@@Base+0x1594>
   16474:	add	x0, sp, #0x50
   16478:	bl	1a150 <plugin_init@@Base+0x9110>
   1647c:	add	x0, sp, #0x58
   16480:	bl	125d4 <plugin_init@@Base+0x1594>
   16484:	add	x0, sp, #0x60
   16488:	bl	122bc <plugin_init@@Base+0x127c>
   1648c:	mov	x0, x19
   16490:	bl	6c60 <_Unwind_Resume@plt>
   16494:	ldp	x19, x20, [sp, #16]
   16498:	ldr	x21, [sp, #32]
   1649c:	ldp	x29, x30, [sp], #112
   164a0:	ret
   164a4:	stp	x29, x30, [sp, #-80]!
   164a8:	mov	x29, sp
   164ac:	stp	x19, x20, [sp, #16]
   164b0:	str	x0, [sp, #40]
   164b4:	add	x0, sp, #0x40
   164b8:	bl	1a13c <plugin_init@@Base+0x90fc>
   164bc:	add	x0, sp, #0x38
   164c0:	bl	1a300 <plugin_init@@Base+0x92c0>
   164c4:	add	x0, sp, #0x30
   164c8:	bl	125b8 <plugin_init@@Base+0x1578>
   164cc:	mov	x1, #0x3                   	// #3
   164d0:	ldr	x0, [sp, #40]
   164d4:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   164d8:	cmp	w0, #0x0
   164dc:	cset	w0, eq  // eq = none
   164e0:	and	w0, w0, #0xff
   164e4:	cmp	w0, #0x0
   164e8:	b.eq	164f4 <plugin_init@@Base+0x54b4>  // b.none
   164ec:	mov	w19, #0x0                   	// #0
   164f0:	b	165e0 <plugin_init@@Base+0x55a0>
   164f4:	add	x0, sp, #0x40
   164f8:	ldr	x1, [sp, #40]
   164fc:	bl	1a164 <plugin_init@@Base+0x9124>
   16500:	cmp	w0, #0x0
   16504:	cset	w0, eq  // eq = none
   16508:	and	w0, w0, #0xff
   1650c:	cmp	w0, #0x0
   16510:	b.eq	1651c <plugin_init@@Base+0x54dc>  // b.none
   16514:	mov	w19, #0x0                   	// #0
   16518:	b	165e0 <plugin_init@@Base+0x55a0>
   1651c:	add	x0, sp, #0x38
   16520:	ldr	x1, [sp, #40]
   16524:	bl	1a328 <plugin_init@@Base+0x92e8>
   16528:	cmp	w0, #0x0
   1652c:	cset	w0, eq  // eq = none
   16530:	and	w0, w0, #0xff
   16534:	cmp	w0, #0x0
   16538:	b.eq	16544 <plugin_init@@Base+0x5504>  // b.none
   1653c:	mov	w19, #0x0                   	// #0
   16540:	b	165e0 <plugin_init@@Base+0x55a0>
   16544:	add	x0, sp, #0x30
   16548:	ldr	x1, [sp, #40]
   1654c:	bl	12650 <plugin_init@@Base+0x1610>
   16550:	cmp	w0, #0x0
   16554:	cset	w0, eq  // eq = none
   16558:	and	w0, w0, #0xff
   1655c:	cmp	w0, #0x0
   16560:	b.eq	1656c <plugin_init@@Base+0x552c>  // b.none
   16564:	mov	w19, #0x0                   	// #0
   16568:	b	165e0 <plugin_init@@Base+0x55a0>
   1656c:	add	x0, sp, #0x40
   16570:	bl	1a18c <plugin_init@@Base+0x914c>
   16574:	mov	x19, x0
   16578:	add	x0, sp, #0x38
   1657c:	bl	1a350 <plugin_init@@Base+0x9310>
   16580:	mov	w20, w0
   16584:	add	x0, sp, #0x30
   16588:	bl	12638 <plugin_init@@Base+0x15f8>
   1658c:	mov	x3, x0
   16590:	mov	w2, w20
   16594:	mov	x1, x19
   16598:	ldr	x0, [sp, #40]
   1659c:	bl	100cc <_Z19decl_assembler_nameP9tree_node@plt+0x936c>
   165a0:	str	x0, [sp, #72]
   165a4:	mov	w1, #0x52                  	// #82
   165a8:	ldr	x0, [sp, #40]
   165ac:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   165b0:	cmp	w0, #0x0
   165b4:	cset	w0, eq  // eq = none
   165b8:	and	w0, w0, #0xff
   165bc:	cmp	w0, #0x0
   165c0:	b.eq	165cc <plugin_init@@Base+0x558c>  // b.none
   165c4:	mov	w19, #0x0                   	// #0
   165c8:	b	165e0 <plugin_init@@Base+0x55a0>
   165cc:	ldr	x1, [sp, #72]
   165d0:	ldr	x0, [sp, #40]
   165d4:	bl	1a1a4 <plugin_init@@Base+0x9164>
   165d8:	mov	w19, w0
   165dc:	nop
   165e0:	add	x0, sp, #0x30
   165e4:	bl	125d4 <plugin_init@@Base+0x1594>
   165e8:	add	x0, sp, #0x38
   165ec:	bl	1a314 <plugin_init@@Base+0x92d4>
   165f0:	add	x0, sp, #0x40
   165f4:	bl	1a150 <plugin_init@@Base+0x9110>
   165f8:	mov	w0, w19
   165fc:	b	16624 <plugin_init@@Base+0x55e4>
   16600:	mov	x19, x0
   16604:	add	x0, sp, #0x30
   16608:	bl	125d4 <plugin_init@@Base+0x1594>
   1660c:	add	x0, sp, #0x38
   16610:	bl	1a314 <plugin_init@@Base+0x92d4>
   16614:	add	x0, sp, #0x40
   16618:	bl	1a150 <plugin_init@@Base+0x9110>
   1661c:	mov	x0, x19
   16620:	bl	6c60 <_Unwind_Resume@plt>
   16624:	ldp	x19, x20, [sp, #16]
   16628:	ldp	x29, x30, [sp], #80
   1662c:	ret
   16630:	stp	x29, x30, [sp, #-64]!
   16634:	mov	x29, sp
   16638:	str	x19, [sp, #16]
   1663c:	str	x0, [sp, #40]
   16640:	add	x0, sp, #0x30
   16644:	bl	1a13c <plugin_init@@Base+0x90fc>
   16648:	mov	x1, #0x1                   	// #1
   1664c:	ldr	x0, [sp, #40]
   16650:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   16654:	cmp	w0, #0x0
   16658:	cset	w0, eq  // eq = none
   1665c:	and	w0, w0, #0xff
   16660:	cmp	w0, #0x0
   16664:	b.eq	16670 <plugin_init@@Base+0x5630>  // b.none
   16668:	mov	w19, #0x0                   	// #0
   1666c:	b	166ec <plugin_init@@Base+0x56ac>
   16670:	add	x0, sp, #0x30
   16674:	ldr	x1, [sp, #40]
   16678:	bl	1a164 <plugin_init@@Base+0x9124>
   1667c:	cmp	w0, #0x0
   16680:	cset	w0, eq  // eq = none
   16684:	and	w0, w0, #0xff
   16688:	cmp	w0, #0x0
   1668c:	b.eq	16698 <plugin_init@@Base+0x5658>  // b.none
   16690:	mov	w19, #0x0                   	// #0
   16694:	b	166ec <plugin_init@@Base+0x56ac>
   16698:	add	x0, sp, #0x30
   1669c:	bl	1a18c <plugin_init@@Base+0x914c>
   166a0:	mov	x1, x0
   166a4:	ldr	x0, [sp, #40]
   166a8:	bl	10448 <_Z19decl_assembler_nameP9tree_node@plt+0x96e8>
   166ac:	str	x0, [sp, #56]
   166b0:	mov	w1, #0x52                  	// #82
   166b4:	ldr	x0, [sp, #40]
   166b8:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   166bc:	cmp	w0, #0x0
   166c0:	cset	w0, eq  // eq = none
   166c4:	and	w0, w0, #0xff
   166c8:	cmp	w0, #0x0
   166cc:	b.eq	166d8 <plugin_init@@Base+0x5698>  // b.none
   166d0:	mov	w19, #0x0                   	// #0
   166d4:	b	166ec <plugin_init@@Base+0x56ac>
   166d8:	ldr	x1, [sp, #56]
   166dc:	ldr	x0, [sp, #40]
   166e0:	bl	1a1a4 <plugin_init@@Base+0x9164>
   166e4:	mov	w19, w0
   166e8:	nop
   166ec:	add	x0, sp, #0x30
   166f0:	bl	1a150 <plugin_init@@Base+0x9110>
   166f4:	mov	w0, w19
   166f8:	b	16710 <plugin_init@@Base+0x56d0>
   166fc:	mov	x19, x0
   16700:	add	x0, sp, #0x30
   16704:	bl	1a150 <plugin_init@@Base+0x9110>
   16708:	mov	x0, x19
   1670c:	bl	6c60 <_Unwind_Resume@plt>
   16710:	ldr	x19, [sp, #16]
   16714:	ldp	x29, x30, [sp], #64
   16718:	ret
   1671c:	stp	x29, x30, [sp, #-112]!
   16720:	mov	x29, sp
   16724:	stp	x19, x20, [sp, #16]
   16728:	stp	x21, x22, [sp, #32]
   1672c:	str	x0, [sp, #56]
   16730:	add	x0, sp, #0x60
   16734:	bl	1a13c <plugin_init@@Base+0x90fc>
   16738:	add	x0, sp, #0x58
   1673c:	bl	124d4 <plugin_init@@Base+0x1494>
   16740:	add	x0, sp, #0x50
   16744:	bl	1a13c <plugin_init@@Base+0x90fc>
   16748:	add	x0, sp, #0x48
   1674c:	bl	122a0 <plugin_init@@Base+0x1260>
   16750:	add	x0, sp, #0x40
   16754:	bl	1a230 <plugin_init@@Base+0x91f0>
   16758:	mov	x1, #0x5                   	// #5
   1675c:	ldr	x0, [sp, #56]
   16760:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   16764:	cmp	w0, #0x0
   16768:	cset	w0, eq  // eq = none
   1676c:	and	w0, w0, #0xff
   16770:	cmp	w0, #0x0
   16774:	b.eq	16780 <plugin_init@@Base+0x5740>  // b.none
   16778:	mov	w19, #0x0                   	// #0
   1677c:	b	168dc <plugin_init@@Base+0x589c>
   16780:	add	x0, sp, #0x60
   16784:	ldr	x1, [sp, #56]
   16788:	bl	1a164 <plugin_init@@Base+0x9124>
   1678c:	cmp	w0, #0x0
   16790:	cset	w0, eq  // eq = none
   16794:	and	w0, w0, #0xff
   16798:	cmp	w0, #0x0
   1679c:	b.eq	167a8 <plugin_init@@Base+0x5768>  // b.none
   167a0:	mov	w19, #0x0                   	// #0
   167a4:	b	168dc <plugin_init@@Base+0x589c>
   167a8:	add	x0, sp, #0x58
   167ac:	ldr	x1, [sp, #56]
   167b0:	bl	12590 <plugin_init@@Base+0x1550>
   167b4:	cmp	w0, #0x0
   167b8:	cset	w0, eq  // eq = none
   167bc:	and	w0, w0, #0xff
   167c0:	cmp	w0, #0x0
   167c4:	b.eq	167d0 <plugin_init@@Base+0x5790>  // b.none
   167c8:	mov	w19, #0x0                   	// #0
   167cc:	b	168dc <plugin_init@@Base+0x589c>
   167d0:	add	x0, sp, #0x50
   167d4:	ldr	x1, [sp, #56]
   167d8:	bl	1a164 <plugin_init@@Base+0x9124>
   167dc:	cmp	w0, #0x0
   167e0:	cset	w0, eq  // eq = none
   167e4:	and	w0, w0, #0xff
   167e8:	cmp	w0, #0x0
   167ec:	b.eq	167f8 <plugin_init@@Base+0x57b8>  // b.none
   167f0:	mov	w19, #0x0                   	// #0
   167f4:	b	168dc <plugin_init@@Base+0x589c>
   167f8:	add	x0, sp, #0x48
   167fc:	ldr	x1, [sp, #56]
   16800:	bl	12308 <plugin_init@@Base+0x12c8>
   16804:	cmp	w0, #0x0
   16808:	cset	w0, eq  // eq = none
   1680c:	and	w0, w0, #0xff
   16810:	cmp	w0, #0x0
   16814:	b.eq	16820 <plugin_init@@Base+0x57e0>  // b.none
   16818:	mov	w19, #0x0                   	// #0
   1681c:	b	168dc <plugin_init@@Base+0x589c>
   16820:	add	x0, sp, #0x40
   16824:	ldr	x1, [sp, #56]
   16828:	bl	1a258 <plugin_init@@Base+0x9218>
   1682c:	cmp	w0, #0x0
   16830:	cset	w0, eq  // eq = none
   16834:	and	w0, w0, #0xff
   16838:	cmp	w0, #0x0
   1683c:	b.eq	16848 <plugin_init@@Base+0x5808>  // b.none
   16840:	mov	w19, #0x0                   	// #0
   16844:	b	168dc <plugin_init@@Base+0x589c>
   16848:	add	x0, sp, #0x60
   1684c:	bl	1a18c <plugin_init@@Base+0x914c>
   16850:	mov	x19, x0
   16854:	add	x0, sp, #0x58
   16858:	bl	12578 <plugin_init@@Base+0x1538>
   1685c:	mov	x20, x0
   16860:	add	x0, sp, #0x50
   16864:	bl	1a18c <plugin_init@@Base+0x914c>
   16868:	mov	x21, x0
   1686c:	add	x0, sp, #0x48
   16870:	bl	122f0 <plugin_init@@Base+0x12b0>
   16874:	mov	x22, x0
   16878:	add	x0, sp, #0x40
   1687c:	bl	1a280 <plugin_init@@Base+0x9240>
   16880:	mov	w5, w0
   16884:	mov	x4, x22
   16888:	mov	x3, x21
   1688c:	mov	x2, x20
   16890:	mov	x1, x19
   16894:	ldr	x0, [sp, #56]
   16898:	bl	104b8 <_Z19decl_assembler_nameP9tree_node@plt+0x9758>
   1689c:	str	x0, [sp, #104]
   168a0:	mov	w1, #0x52                  	// #82
   168a4:	ldr	x0, [sp, #56]
   168a8:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   168ac:	cmp	w0, #0x0
   168b0:	cset	w0, eq  // eq = none
   168b4:	and	w0, w0, #0xff
   168b8:	cmp	w0, #0x0
   168bc:	b.eq	168c8 <plugin_init@@Base+0x5888>  // b.none
   168c0:	mov	w19, #0x0                   	// #0
   168c4:	b	168dc <plugin_init@@Base+0x589c>
   168c8:	ldr	x1, [sp, #104]
   168cc:	ldr	x0, [sp, #56]
   168d0:	bl	1a1a4 <plugin_init@@Base+0x9164>
   168d4:	mov	w19, w0
   168d8:	nop
   168dc:	add	x0, sp, #0x40
   168e0:	bl	1a244 <plugin_init@@Base+0x9204>
   168e4:	add	x0, sp, #0x48
   168e8:	bl	122bc <plugin_init@@Base+0x127c>
   168ec:	add	x0, sp, #0x50
   168f0:	bl	1a150 <plugin_init@@Base+0x9110>
   168f4:	add	x0, sp, #0x58
   168f8:	bl	124f0 <plugin_init@@Base+0x14b0>
   168fc:	add	x0, sp, #0x60
   16900:	bl	1a150 <plugin_init@@Base+0x9110>
   16904:	mov	w0, w19
   16908:	b	16940 <plugin_init@@Base+0x5900>
   1690c:	mov	x19, x0
   16910:	add	x0, sp, #0x40
   16914:	bl	1a244 <plugin_init@@Base+0x9204>
   16918:	add	x0, sp, #0x48
   1691c:	bl	122bc <plugin_init@@Base+0x127c>
   16920:	add	x0, sp, #0x50
   16924:	bl	1a150 <plugin_init@@Base+0x9110>
   16928:	add	x0, sp, #0x58
   1692c:	bl	124f0 <plugin_init@@Base+0x14b0>
   16930:	add	x0, sp, #0x60
   16934:	bl	1a150 <plugin_init@@Base+0x9110>
   16938:	mov	x0, x19
   1693c:	bl	6c60 <_Unwind_Resume@plt>
   16940:	ldp	x19, x20, [sp, #16]
   16944:	ldp	x21, x22, [sp, #32]
   16948:	ldp	x29, x30, [sp], #112
   1694c:	ret
   16950:	stp	x29, x30, [sp, #-112]!
   16954:	mov	x29, sp
   16958:	stp	x19, x20, [sp, #16]
   1695c:	str	x21, [sp, #32]
   16960:	str	x0, [sp, #56]
   16964:	add	x0, sp, #0x60
   16968:	bl	1a13c <plugin_init@@Base+0x90fc>
   1696c:	add	x0, sp, #0x58
   16970:	bl	124d4 <plugin_init@@Base+0x1494>
   16974:	add	x0, sp, #0x50
   16978:	bl	122a0 <plugin_init@@Base+0x1260>
   1697c:	add	x0, sp, #0x48
   16980:	bl	1a230 <plugin_init@@Base+0x91f0>
   16984:	mov	x1, #0x4                   	// #4
   16988:	ldr	x0, [sp, #56]
   1698c:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   16990:	cmp	w0, #0x0
   16994:	cset	w0, eq  // eq = none
   16998:	and	w0, w0, #0xff
   1699c:	cmp	w0, #0x0
   169a0:	b.eq	169ac <plugin_init@@Base+0x596c>  // b.none
   169a4:	mov	w19, #0x0                   	// #0
   169a8:	b	16ad0 <plugin_init@@Base+0x5a90>
   169ac:	add	x0, sp, #0x60
   169b0:	ldr	x1, [sp, #56]
   169b4:	bl	1a164 <plugin_init@@Base+0x9124>
   169b8:	cmp	w0, #0x0
   169bc:	cset	w0, eq  // eq = none
   169c0:	and	w0, w0, #0xff
   169c4:	cmp	w0, #0x0
   169c8:	b.eq	169d4 <plugin_init@@Base+0x5994>  // b.none
   169cc:	mov	w19, #0x0                   	// #0
   169d0:	b	16ad0 <plugin_init@@Base+0x5a90>
   169d4:	add	x0, sp, #0x58
   169d8:	ldr	x1, [sp, #56]
   169dc:	bl	12590 <plugin_init@@Base+0x1550>
   169e0:	cmp	w0, #0x0
   169e4:	cset	w0, eq  // eq = none
   169e8:	and	w0, w0, #0xff
   169ec:	cmp	w0, #0x0
   169f0:	b.eq	169fc <plugin_init@@Base+0x59bc>  // b.none
   169f4:	mov	w19, #0x0                   	// #0
   169f8:	b	16ad0 <plugin_init@@Base+0x5a90>
   169fc:	add	x0, sp, #0x50
   16a00:	ldr	x1, [sp, #56]
   16a04:	bl	12308 <plugin_init@@Base+0x12c8>
   16a08:	cmp	w0, #0x0
   16a0c:	cset	w0, eq  // eq = none
   16a10:	and	w0, w0, #0xff
   16a14:	cmp	w0, #0x0
   16a18:	b.eq	16a24 <plugin_init@@Base+0x59e4>  // b.none
   16a1c:	mov	w19, #0x0                   	// #0
   16a20:	b	16ad0 <plugin_init@@Base+0x5a90>
   16a24:	add	x0, sp, #0x48
   16a28:	ldr	x1, [sp, #56]
   16a2c:	bl	1a258 <plugin_init@@Base+0x9218>
   16a30:	cmp	w0, #0x0
   16a34:	cset	w0, eq  // eq = none
   16a38:	and	w0, w0, #0xff
   16a3c:	cmp	w0, #0x0
   16a40:	b.eq	16a4c <plugin_init@@Base+0x5a0c>  // b.none
   16a44:	mov	w19, #0x0                   	// #0
   16a48:	b	16ad0 <plugin_init@@Base+0x5a90>
   16a4c:	add	x0, sp, #0x60
   16a50:	bl	1a18c <plugin_init@@Base+0x914c>
   16a54:	mov	x19, x0
   16a58:	add	x0, sp, #0x58
   16a5c:	bl	12578 <plugin_init@@Base+0x1538>
   16a60:	mov	x20, x0
   16a64:	add	x0, sp, #0x50
   16a68:	bl	122f0 <plugin_init@@Base+0x12b0>
   16a6c:	mov	x21, x0
   16a70:	add	x0, sp, #0x48
   16a74:	bl	1a280 <plugin_init@@Base+0x9240>
   16a78:	mov	w4, w0
   16a7c:	mov	x3, x21
   16a80:	mov	x2, x20
   16a84:	mov	x1, x19
   16a88:	ldr	x0, [sp, #56]
   16a8c:	bl	10564 <_Z19decl_assembler_nameP9tree_node@plt+0x9804>
   16a90:	str	x0, [sp, #104]
   16a94:	mov	w1, #0x52                  	// #82
   16a98:	ldr	x0, [sp, #56]
   16a9c:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   16aa0:	cmp	w0, #0x0
   16aa4:	cset	w0, eq  // eq = none
   16aa8:	and	w0, w0, #0xff
   16aac:	cmp	w0, #0x0
   16ab0:	b.eq	16abc <plugin_init@@Base+0x5a7c>  // b.none
   16ab4:	mov	w19, #0x0                   	// #0
   16ab8:	b	16ad0 <plugin_init@@Base+0x5a90>
   16abc:	ldr	x1, [sp, #104]
   16ac0:	ldr	x0, [sp, #56]
   16ac4:	bl	1a1a4 <plugin_init@@Base+0x9164>
   16ac8:	mov	w19, w0
   16acc:	nop
   16ad0:	add	x0, sp, #0x48
   16ad4:	bl	1a244 <plugin_init@@Base+0x9204>
   16ad8:	add	x0, sp, #0x50
   16adc:	bl	122bc <plugin_init@@Base+0x127c>
   16ae0:	add	x0, sp, #0x58
   16ae4:	bl	124f0 <plugin_init@@Base+0x14b0>
   16ae8:	add	x0, sp, #0x60
   16aec:	bl	1a150 <plugin_init@@Base+0x9110>
   16af0:	mov	w0, w19
   16af4:	b	16b24 <plugin_init@@Base+0x5ae4>
   16af8:	mov	x19, x0
   16afc:	add	x0, sp, #0x48
   16b00:	bl	1a244 <plugin_init@@Base+0x9204>
   16b04:	add	x0, sp, #0x50
   16b08:	bl	122bc <plugin_init@@Base+0x127c>
   16b0c:	add	x0, sp, #0x58
   16b10:	bl	124f0 <plugin_init@@Base+0x14b0>
   16b14:	add	x0, sp, #0x60
   16b18:	bl	1a150 <plugin_init@@Base+0x9110>
   16b1c:	mov	x0, x19
   16b20:	bl	6c60 <_Unwind_Resume@plt>
   16b24:	ldp	x19, x20, [sp, #16]
   16b28:	ldr	x21, [sp, #32]
   16b2c:	ldp	x29, x30, [sp], #112
   16b30:	ret
   16b34:	stp	x29, x30, [sp, #-112]!
   16b38:	mov	x29, sp
   16b3c:	stp	x19, x20, [sp, #16]
   16b40:	str	x21, [sp, #32]
   16b44:	str	x0, [sp, #56]
   16b48:	add	x0, sp, #0x60
   16b4c:	bl	1a13c <plugin_init@@Base+0x90fc>
   16b50:	add	x0, sp, #0x58
   16b54:	bl	123f0 <plugin_init@@Base+0x13b0>
   16b58:	add	x0, sp, #0x50
   16b5c:	bl	122a0 <plugin_init@@Base+0x1260>
   16b60:	add	x0, sp, #0x48
   16b64:	bl	1a230 <plugin_init@@Base+0x91f0>
   16b68:	mov	x1, #0x4                   	// #4
   16b6c:	ldr	x0, [sp, #56]
   16b70:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   16b74:	cmp	w0, #0x0
   16b78:	cset	w0, eq  // eq = none
   16b7c:	and	w0, w0, #0xff
   16b80:	cmp	w0, #0x0
   16b84:	b.eq	16b90 <plugin_init@@Base+0x5b50>  // b.none
   16b88:	mov	w19, #0x0                   	// #0
   16b8c:	b	16cb4 <plugin_init@@Base+0x5c74>
   16b90:	add	x0, sp, #0x60
   16b94:	ldr	x1, [sp, #56]
   16b98:	bl	1a164 <plugin_init@@Base+0x9124>
   16b9c:	cmp	w0, #0x0
   16ba0:	cset	w0, eq  // eq = none
   16ba4:	and	w0, w0, #0xff
   16ba8:	cmp	w0, #0x0
   16bac:	b.eq	16bb8 <plugin_init@@Base+0x5b78>  // b.none
   16bb0:	mov	w19, #0x0                   	// #0
   16bb4:	b	16cb4 <plugin_init@@Base+0x5c74>
   16bb8:	add	x0, sp, #0x58
   16bbc:	ldr	x1, [sp, #56]
   16bc0:	bl	124ac <plugin_init@@Base+0x146c>
   16bc4:	cmp	w0, #0x0
   16bc8:	cset	w0, eq  // eq = none
   16bcc:	and	w0, w0, #0xff
   16bd0:	cmp	w0, #0x0
   16bd4:	b.eq	16be0 <plugin_init@@Base+0x5ba0>  // b.none
   16bd8:	mov	w19, #0x0                   	// #0
   16bdc:	b	16cb4 <plugin_init@@Base+0x5c74>
   16be0:	add	x0, sp, #0x50
   16be4:	ldr	x1, [sp, #56]
   16be8:	bl	12308 <plugin_init@@Base+0x12c8>
   16bec:	cmp	w0, #0x0
   16bf0:	cset	w0, eq  // eq = none
   16bf4:	and	w0, w0, #0xff
   16bf8:	cmp	w0, #0x0
   16bfc:	b.eq	16c08 <plugin_init@@Base+0x5bc8>  // b.none
   16c00:	mov	w19, #0x0                   	// #0
   16c04:	b	16cb4 <plugin_init@@Base+0x5c74>
   16c08:	add	x0, sp, #0x48
   16c0c:	ldr	x1, [sp, #56]
   16c10:	bl	1a258 <plugin_init@@Base+0x9218>
   16c14:	cmp	w0, #0x0
   16c18:	cset	w0, eq  // eq = none
   16c1c:	and	w0, w0, #0xff
   16c20:	cmp	w0, #0x0
   16c24:	b.eq	16c30 <plugin_init@@Base+0x5bf0>  // b.none
   16c28:	mov	w19, #0x0                   	// #0
   16c2c:	b	16cb4 <plugin_init@@Base+0x5c74>
   16c30:	add	x0, sp, #0x60
   16c34:	bl	1a18c <plugin_init@@Base+0x914c>
   16c38:	mov	x19, x0
   16c3c:	add	x0, sp, #0x58
   16c40:	bl	12494 <plugin_init@@Base+0x1454>
   16c44:	mov	x20, x0
   16c48:	add	x0, sp, #0x50
   16c4c:	bl	122f0 <plugin_init@@Base+0x12b0>
   16c50:	mov	x21, x0
   16c54:	add	x0, sp, #0x48
   16c58:	bl	1a280 <plugin_init@@Base+0x9240>
   16c5c:	mov	w4, w0
   16c60:	mov	x3, x21
   16c64:	mov	x2, x20
   16c68:	mov	x1, x19
   16c6c:	ldr	x0, [sp, #56]
   16c70:	bl	c250 <_Z19decl_assembler_nameP9tree_node@plt+0x54f0>
   16c74:	str	x0, [sp, #104]
   16c78:	mov	w1, #0x52                  	// #82
   16c7c:	ldr	x0, [sp, #56]
   16c80:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   16c84:	cmp	w0, #0x0
   16c88:	cset	w0, eq  // eq = none
   16c8c:	and	w0, w0, #0xff
   16c90:	cmp	w0, #0x0
   16c94:	b.eq	16ca0 <plugin_init@@Base+0x5c60>  // b.none
   16c98:	mov	w19, #0x0                   	// #0
   16c9c:	b	16cb4 <plugin_init@@Base+0x5c74>
   16ca0:	ldr	x1, [sp, #104]
   16ca4:	ldr	x0, [sp, #56]
   16ca8:	bl	1a1a4 <plugin_init@@Base+0x9164>
   16cac:	mov	w19, w0
   16cb0:	nop
   16cb4:	add	x0, sp, #0x48
   16cb8:	bl	1a244 <plugin_init@@Base+0x9204>
   16cbc:	add	x0, sp, #0x50
   16cc0:	bl	122bc <plugin_init@@Base+0x127c>
   16cc4:	add	x0, sp, #0x58
   16cc8:	bl	1240c <plugin_init@@Base+0x13cc>
   16ccc:	add	x0, sp, #0x60
   16cd0:	bl	1a150 <plugin_init@@Base+0x9110>
   16cd4:	mov	w0, w19
   16cd8:	b	16d08 <plugin_init@@Base+0x5cc8>
   16cdc:	mov	x19, x0
   16ce0:	add	x0, sp, #0x48
   16ce4:	bl	1a244 <plugin_init@@Base+0x9204>
   16ce8:	add	x0, sp, #0x50
   16cec:	bl	122bc <plugin_init@@Base+0x127c>
   16cf0:	add	x0, sp, #0x58
   16cf4:	bl	1240c <plugin_init@@Base+0x13cc>
   16cf8:	add	x0, sp, #0x60
   16cfc:	bl	1a150 <plugin_init@@Base+0x9110>
   16d00:	mov	x0, x19
   16d04:	bl	6c60 <_Unwind_Resume@plt>
   16d08:	ldp	x19, x20, [sp, #16]
   16d0c:	ldr	x21, [sp, #32]
   16d10:	ldp	x29, x30, [sp], #112
   16d14:	ret
   16d18:	stp	x29, x30, [sp, #-112]!
   16d1c:	mov	x29, sp
   16d20:	stp	x19, x20, [sp, #16]
   16d24:	stp	x21, x22, [sp, #32]
   16d28:	str	x0, [sp, #56]
   16d2c:	add	x0, sp, #0x60
   16d30:	bl	1a300 <plugin_init@@Base+0x92c0>
   16d34:	add	x0, sp, #0x58
   16d38:	bl	1a13c <plugin_init@@Base+0x90fc>
   16d3c:	add	x0, sp, #0x50
   16d40:	bl	1a1c8 <plugin_init@@Base+0x9188>
   16d44:	add	x0, sp, #0x48
   16d48:	bl	122a0 <plugin_init@@Base+0x1260>
   16d4c:	add	x0, sp, #0x40
   16d50:	bl	1a230 <plugin_init@@Base+0x91f0>
   16d54:	mov	x1, #0x5                   	// #5
   16d58:	ldr	x0, [sp, #56]
   16d5c:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   16d60:	cmp	w0, #0x0
   16d64:	cset	w0, eq  // eq = none
   16d68:	and	w0, w0, #0xff
   16d6c:	cmp	w0, #0x0
   16d70:	b.eq	16d7c <plugin_init@@Base+0x5d3c>  // b.none
   16d74:	mov	w19, #0x0                   	// #0
   16d78:	b	16ed8 <plugin_init@@Base+0x5e98>
   16d7c:	add	x0, sp, #0x60
   16d80:	ldr	x1, [sp, #56]
   16d84:	bl	1a328 <plugin_init@@Base+0x92e8>
   16d88:	cmp	w0, #0x0
   16d8c:	cset	w0, eq  // eq = none
   16d90:	and	w0, w0, #0xff
   16d94:	cmp	w0, #0x0
   16d98:	b.eq	16da4 <plugin_init@@Base+0x5d64>  // b.none
   16d9c:	mov	w19, #0x0                   	// #0
   16da0:	b	16ed8 <plugin_init@@Base+0x5e98>
   16da4:	add	x0, sp, #0x58
   16da8:	ldr	x1, [sp, #56]
   16dac:	bl	1a164 <plugin_init@@Base+0x9124>
   16db0:	cmp	w0, #0x0
   16db4:	cset	w0, eq  // eq = none
   16db8:	and	w0, w0, #0xff
   16dbc:	cmp	w0, #0x0
   16dc0:	b.eq	16dcc <plugin_init@@Base+0x5d8c>  // b.none
   16dc4:	mov	w19, #0x0                   	// #0
   16dc8:	b	16ed8 <plugin_init@@Base+0x5e98>
   16dcc:	add	x0, sp, #0x50
   16dd0:	ldr	x1, [sp, #56]
   16dd4:	bl	1a1f0 <plugin_init@@Base+0x91b0>
   16dd8:	cmp	w0, #0x0
   16ddc:	cset	w0, eq  // eq = none
   16de0:	and	w0, w0, #0xff
   16de4:	cmp	w0, #0x0
   16de8:	b.eq	16df4 <plugin_init@@Base+0x5db4>  // b.none
   16dec:	mov	w19, #0x0                   	// #0
   16df0:	b	16ed8 <plugin_init@@Base+0x5e98>
   16df4:	add	x0, sp, #0x48
   16df8:	ldr	x1, [sp, #56]
   16dfc:	bl	12308 <plugin_init@@Base+0x12c8>
   16e00:	cmp	w0, #0x0
   16e04:	cset	w0, eq  // eq = none
   16e08:	and	w0, w0, #0xff
   16e0c:	cmp	w0, #0x0
   16e10:	b.eq	16e1c <plugin_init@@Base+0x5ddc>  // b.none
   16e14:	mov	w19, #0x0                   	// #0
   16e18:	b	16ed8 <plugin_init@@Base+0x5e98>
   16e1c:	add	x0, sp, #0x40
   16e20:	ldr	x1, [sp, #56]
   16e24:	bl	1a258 <plugin_init@@Base+0x9218>
   16e28:	cmp	w0, #0x0
   16e2c:	cset	w0, eq  // eq = none
   16e30:	and	w0, w0, #0xff
   16e34:	cmp	w0, #0x0
   16e38:	b.eq	16e44 <plugin_init@@Base+0x5e04>  // b.none
   16e3c:	mov	w19, #0x0                   	// #0
   16e40:	b	16ed8 <plugin_init@@Base+0x5e98>
   16e44:	add	x0, sp, #0x60
   16e48:	bl	1a350 <plugin_init@@Base+0x9310>
   16e4c:	mov	w19, w0
   16e50:	add	x0, sp, #0x58
   16e54:	bl	1a18c <plugin_init@@Base+0x914c>
   16e58:	mov	x20, x0
   16e5c:	add	x0, sp, #0x50
   16e60:	bl	1a218 <plugin_init@@Base+0x91d8>
   16e64:	mov	w21, w0
   16e68:	add	x0, sp, #0x48
   16e6c:	bl	122f0 <plugin_init@@Base+0x12b0>
   16e70:	mov	x22, x0
   16e74:	add	x0, sp, #0x40
   16e78:	bl	1a280 <plugin_init@@Base+0x9240>
   16e7c:	mov	w5, w0
   16e80:	mov	x4, x22
   16e84:	mov	w3, w21
   16e88:	mov	x2, x20
   16e8c:	mov	w1, w19
   16e90:	ldr	x0, [sp, #56]
   16e94:	bl	c334 <_Z19decl_assembler_nameP9tree_node@plt+0x55d4>
   16e98:	str	x0, [sp, #104]
   16e9c:	mov	w1, #0x52                  	// #82
   16ea0:	ldr	x0, [sp, #56]
   16ea4:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   16ea8:	cmp	w0, #0x0
   16eac:	cset	w0, eq  // eq = none
   16eb0:	and	w0, w0, #0xff
   16eb4:	cmp	w0, #0x0
   16eb8:	b.eq	16ec4 <plugin_init@@Base+0x5e84>  // b.none
   16ebc:	mov	w19, #0x0                   	// #0
   16ec0:	b	16ed8 <plugin_init@@Base+0x5e98>
   16ec4:	ldr	x1, [sp, #104]
   16ec8:	ldr	x0, [sp, #56]
   16ecc:	bl	1a1a4 <plugin_init@@Base+0x9164>
   16ed0:	mov	w19, w0
   16ed4:	nop
   16ed8:	add	x0, sp, #0x40
   16edc:	bl	1a244 <plugin_init@@Base+0x9204>
   16ee0:	add	x0, sp, #0x48
   16ee4:	bl	122bc <plugin_init@@Base+0x127c>
   16ee8:	add	x0, sp, #0x50
   16eec:	bl	1a1dc <plugin_init@@Base+0x919c>
   16ef0:	add	x0, sp, #0x58
   16ef4:	bl	1a150 <plugin_init@@Base+0x9110>
   16ef8:	add	x0, sp, #0x60
   16efc:	bl	1a314 <plugin_init@@Base+0x92d4>
   16f00:	mov	w0, w19
   16f04:	b	16f3c <plugin_init@@Base+0x5efc>
   16f08:	mov	x19, x0
   16f0c:	add	x0, sp, #0x40
   16f10:	bl	1a244 <plugin_init@@Base+0x9204>
   16f14:	add	x0, sp, #0x48
   16f18:	bl	122bc <plugin_init@@Base+0x127c>
   16f1c:	add	x0, sp, #0x50
   16f20:	bl	1a1dc <plugin_init@@Base+0x919c>
   16f24:	add	x0, sp, #0x58
   16f28:	bl	1a150 <plugin_init@@Base+0x9110>
   16f2c:	add	x0, sp, #0x60
   16f30:	bl	1a314 <plugin_init@@Base+0x92d4>
   16f34:	mov	x0, x19
   16f38:	bl	6c60 <_Unwind_Resume@plt>
   16f3c:	ldp	x19, x20, [sp, #16]
   16f40:	ldp	x21, x22, [sp, #32]
   16f44:	ldp	x29, x30, [sp], #112
   16f48:	ret
   16f4c:	stp	x29, x30, [sp, #-112]!
   16f50:	mov	x29, sp
   16f54:	stp	x19, x20, [sp, #16]
   16f58:	stp	x21, x22, [sp, #32]
   16f5c:	str	x0, [sp, #56]
   16f60:	add	x0, sp, #0x60
   16f64:	bl	122a0 <plugin_init@@Base+0x1260>
   16f68:	add	x0, sp, #0x58
   16f6c:	bl	1a13c <plugin_init@@Base+0x90fc>
   16f70:	add	x0, sp, #0x50
   16f74:	bl	1a1c8 <plugin_init@@Base+0x9188>
   16f78:	add	x0, sp, #0x48
   16f7c:	bl	1a368 <plugin_init@@Base+0x9328>
   16f80:	add	x0, sp, #0x40
   16f84:	bl	1a368 <plugin_init@@Base+0x9328>
   16f88:	mov	x1, #0x5                   	// #5
   16f8c:	ldr	x0, [sp, #56]
   16f90:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   16f94:	cmp	w0, #0x0
   16f98:	cset	w0, eq  // eq = none
   16f9c:	and	w0, w0, #0xff
   16fa0:	cmp	w0, #0x0
   16fa4:	b.eq	16fb0 <plugin_init@@Base+0x5f70>  // b.none
   16fa8:	mov	w19, #0x0                   	// #0
   16fac:	b	1710c <plugin_init@@Base+0x60cc>
   16fb0:	add	x0, sp, #0x60
   16fb4:	ldr	x1, [sp, #56]
   16fb8:	bl	12308 <plugin_init@@Base+0x12c8>
   16fbc:	cmp	w0, #0x0
   16fc0:	cset	w0, eq  // eq = none
   16fc4:	and	w0, w0, #0xff
   16fc8:	cmp	w0, #0x0
   16fcc:	b.eq	16fd8 <plugin_init@@Base+0x5f98>  // b.none
   16fd0:	mov	w19, #0x0                   	// #0
   16fd4:	b	1710c <plugin_init@@Base+0x60cc>
   16fd8:	add	x0, sp, #0x58
   16fdc:	ldr	x1, [sp, #56]
   16fe0:	bl	1a164 <plugin_init@@Base+0x9124>
   16fe4:	cmp	w0, #0x0
   16fe8:	cset	w0, eq  // eq = none
   16fec:	and	w0, w0, #0xff
   16ff0:	cmp	w0, #0x0
   16ff4:	b.eq	17000 <plugin_init@@Base+0x5fc0>  // b.none
   16ff8:	mov	w19, #0x0                   	// #0
   16ffc:	b	1710c <plugin_init@@Base+0x60cc>
   17000:	add	x0, sp, #0x50
   17004:	ldr	x1, [sp, #56]
   17008:	bl	1a1f0 <plugin_init@@Base+0x91b0>
   1700c:	cmp	w0, #0x0
   17010:	cset	w0, eq  // eq = none
   17014:	and	w0, w0, #0xff
   17018:	cmp	w0, #0x0
   1701c:	b.eq	17028 <plugin_init@@Base+0x5fe8>  // b.none
   17020:	mov	w19, #0x0                   	// #0
   17024:	b	1710c <plugin_init@@Base+0x60cc>
   17028:	add	x0, sp, #0x48
   1702c:	ldr	x1, [sp, #56]
   17030:	bl	1a390 <plugin_init@@Base+0x9350>
   17034:	cmp	w0, #0x0
   17038:	cset	w0, eq  // eq = none
   1703c:	and	w0, w0, #0xff
   17040:	cmp	w0, #0x0
   17044:	b.eq	17050 <plugin_init@@Base+0x6010>  // b.none
   17048:	mov	w19, #0x0                   	// #0
   1704c:	b	1710c <plugin_init@@Base+0x60cc>
   17050:	add	x0, sp, #0x40
   17054:	ldr	x1, [sp, #56]
   17058:	bl	1a390 <plugin_init@@Base+0x9350>
   1705c:	cmp	w0, #0x0
   17060:	cset	w0, eq  // eq = none
   17064:	and	w0, w0, #0xff
   17068:	cmp	w0, #0x0
   1706c:	b.eq	17078 <plugin_init@@Base+0x6038>  // b.none
   17070:	mov	w19, #0x0                   	// #0
   17074:	b	1710c <plugin_init@@Base+0x60cc>
   17078:	add	x0, sp, #0x60
   1707c:	bl	122f0 <plugin_init@@Base+0x12b0>
   17080:	mov	x19, x0
   17084:	add	x0, sp, #0x58
   17088:	bl	1a18c <plugin_init@@Base+0x914c>
   1708c:	mov	x20, x0
   17090:	add	x0, sp, #0x50
   17094:	bl	1a218 <plugin_init@@Base+0x91d8>
   17098:	mov	w21, w0
   1709c:	add	x0, sp, #0x48
   170a0:	bl	1a3b8 <plugin_init@@Base+0x9378>
   170a4:	mov	x22, x0
   170a8:	add	x0, sp, #0x40
   170ac:	bl	1a3b8 <plugin_init@@Base+0x9378>
   170b0:	mov	x5, x0
   170b4:	mov	x4, x22
   170b8:	mov	w3, w21
   170bc:	mov	x2, x20
   170c0:	mov	x1, x19
   170c4:	ldr	x0, [sp, #56]
   170c8:	bl	c6b0 <_Z19decl_assembler_nameP9tree_node@plt+0x5950>
   170cc:	str	x0, [sp, #104]
   170d0:	mov	w1, #0x52                  	// #82
   170d4:	ldr	x0, [sp, #56]
   170d8:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   170dc:	cmp	w0, #0x0
   170e0:	cset	w0, eq  // eq = none
   170e4:	and	w0, w0, #0xff
   170e8:	cmp	w0, #0x0
   170ec:	b.eq	170f8 <plugin_init@@Base+0x60b8>  // b.none
   170f0:	mov	w19, #0x0                   	// #0
   170f4:	b	1710c <plugin_init@@Base+0x60cc>
   170f8:	ldr	x1, [sp, #104]
   170fc:	ldr	x0, [sp, #56]
   17100:	bl	1a1a4 <plugin_init@@Base+0x9164>
   17104:	mov	w19, w0
   17108:	nop
   1710c:	add	x0, sp, #0x40
   17110:	bl	1a37c <plugin_init@@Base+0x933c>
   17114:	add	x0, sp, #0x48
   17118:	bl	1a37c <plugin_init@@Base+0x933c>
   1711c:	add	x0, sp, #0x50
   17120:	bl	1a1dc <plugin_init@@Base+0x919c>
   17124:	add	x0, sp, #0x58
   17128:	bl	1a150 <plugin_init@@Base+0x9110>
   1712c:	add	x0, sp, #0x60
   17130:	bl	122bc <plugin_init@@Base+0x127c>
   17134:	mov	w0, w19
   17138:	b	17170 <plugin_init@@Base+0x6130>
   1713c:	mov	x19, x0
   17140:	add	x0, sp, #0x40
   17144:	bl	1a37c <plugin_init@@Base+0x933c>
   17148:	add	x0, sp, #0x48
   1714c:	bl	1a37c <plugin_init@@Base+0x933c>
   17150:	add	x0, sp, #0x50
   17154:	bl	1a1dc <plugin_init@@Base+0x919c>
   17158:	add	x0, sp, #0x58
   1715c:	bl	1a150 <plugin_init@@Base+0x9110>
   17160:	add	x0, sp, #0x60
   17164:	bl	122bc <plugin_init@@Base+0x127c>
   17168:	mov	x0, x19
   1716c:	bl	6c60 <_Unwind_Resume@plt>
   17170:	ldp	x19, x20, [sp, #16]
   17174:	ldp	x21, x22, [sp, #32]
   17178:	ldp	x29, x30, [sp], #112
   1717c:	ret
   17180:	stp	x29, x30, [sp, #-64]!
   17184:	mov	x29, sp
   17188:	str	x19, [sp, #16]
   1718c:	str	x0, [sp, #40]
   17190:	add	x0, sp, #0x30
   17194:	bl	1a368 <plugin_init@@Base+0x9328>
   17198:	mov	x1, #0x1                   	// #1
   1719c:	ldr	x0, [sp, #40]
   171a0:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   171a4:	cmp	w0, #0x0
   171a8:	cset	w0, eq  // eq = none
   171ac:	and	w0, w0, #0xff
   171b0:	cmp	w0, #0x0
   171b4:	b.eq	171c0 <plugin_init@@Base+0x6180>  // b.none
   171b8:	mov	w19, #0x0                   	// #0
   171bc:	b	1723c <plugin_init@@Base+0x61fc>
   171c0:	add	x0, sp, #0x30
   171c4:	ldr	x1, [sp, #40]
   171c8:	bl	1a390 <plugin_init@@Base+0x9350>
   171cc:	cmp	w0, #0x0
   171d0:	cset	w0, eq  // eq = none
   171d4:	and	w0, w0, #0xff
   171d8:	cmp	w0, #0x0
   171dc:	b.eq	171e8 <plugin_init@@Base+0x61a8>  // b.none
   171e0:	mov	w19, #0x0                   	// #0
   171e4:	b	1723c <plugin_init@@Base+0x61fc>
   171e8:	add	x0, sp, #0x30
   171ec:	bl	1a3b8 <plugin_init@@Base+0x9378>
   171f0:	mov	x1, x0
   171f4:	ldr	x0, [sp, #40]
   171f8:	bl	c9ec <_Z19decl_assembler_nameP9tree_node@plt+0x5c8c>
   171fc:	str	w0, [sp, #60]
   17200:	mov	w1, #0x52                  	// #82
   17204:	ldr	x0, [sp, #40]
   17208:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   1720c:	cmp	w0, #0x0
   17210:	cset	w0, eq  // eq = none
   17214:	and	w0, w0, #0xff
   17218:	cmp	w0, #0x0
   1721c:	b.eq	17228 <plugin_init@@Base+0x61e8>  // b.none
   17220:	mov	w19, #0x0                   	// #0
   17224:	b	1723c <plugin_init@@Base+0x61fc>
   17228:	ldr	w1, [sp, #60]
   1722c:	ldr	x0, [sp, #40]
   17230:	bl	19a64 <plugin_init@@Base+0x8a24>
   17234:	mov	w19, w0
   17238:	nop
   1723c:	add	x0, sp, #0x30
   17240:	bl	1a37c <plugin_init@@Base+0x933c>
   17244:	mov	w0, w19
   17248:	b	17260 <plugin_init@@Base+0x6220>
   1724c:	mov	x19, x0
   17250:	add	x0, sp, #0x30
   17254:	bl	1a37c <plugin_init@@Base+0x933c>
   17258:	mov	x0, x19
   1725c:	bl	6c60 <_Unwind_Resume@plt>
   17260:	ldr	x19, [sp, #16]
   17264:	ldp	x29, x30, [sp], #64
   17268:	ret
   1726c:	stp	x29, x30, [sp, #-112]!
   17270:	mov	x29, sp
   17274:	stp	x19, x20, [sp, #16]
   17278:	stp	x21, x22, [sp, #32]
   1727c:	str	x0, [sp, #56]
   17280:	add	x0, sp, #0x60
   17284:	bl	122a0 <plugin_init@@Base+0x1260>
   17288:	add	x0, sp, #0x58
   1728c:	bl	1a13c <plugin_init@@Base+0x90fc>
   17290:	add	x0, sp, #0x50
   17294:	bl	1a1c8 <plugin_init@@Base+0x9188>
   17298:	add	x0, sp, #0x48
   1729c:	bl	122a0 <plugin_init@@Base+0x1260>
   172a0:	add	x0, sp, #0x40
   172a4:	bl	1a230 <plugin_init@@Base+0x91f0>
   172a8:	mov	x1, #0x5                   	// #5
   172ac:	ldr	x0, [sp, #56]
   172b0:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   172b4:	cmp	w0, #0x0
   172b8:	cset	w0, eq  // eq = none
   172bc:	and	w0, w0, #0xff
   172c0:	cmp	w0, #0x0
   172c4:	b.eq	172d0 <plugin_init@@Base+0x6290>  // b.none
   172c8:	mov	w19, #0x0                   	// #0
   172cc:	b	1742c <plugin_init@@Base+0x63ec>
   172d0:	add	x0, sp, #0x60
   172d4:	ldr	x1, [sp, #56]
   172d8:	bl	12308 <plugin_init@@Base+0x12c8>
   172dc:	cmp	w0, #0x0
   172e0:	cset	w0, eq  // eq = none
   172e4:	and	w0, w0, #0xff
   172e8:	cmp	w0, #0x0
   172ec:	b.eq	172f8 <plugin_init@@Base+0x62b8>  // b.none
   172f0:	mov	w19, #0x0                   	// #0
   172f4:	b	1742c <plugin_init@@Base+0x63ec>
   172f8:	add	x0, sp, #0x58
   172fc:	ldr	x1, [sp, #56]
   17300:	bl	1a164 <plugin_init@@Base+0x9124>
   17304:	cmp	w0, #0x0
   17308:	cset	w0, eq  // eq = none
   1730c:	and	w0, w0, #0xff
   17310:	cmp	w0, #0x0
   17314:	b.eq	17320 <plugin_init@@Base+0x62e0>  // b.none
   17318:	mov	w19, #0x0                   	// #0
   1731c:	b	1742c <plugin_init@@Base+0x63ec>
   17320:	add	x0, sp, #0x50
   17324:	ldr	x1, [sp, #56]
   17328:	bl	1a1f0 <plugin_init@@Base+0x91b0>
   1732c:	cmp	w0, #0x0
   17330:	cset	w0, eq  // eq = none
   17334:	and	w0, w0, #0xff
   17338:	cmp	w0, #0x0
   1733c:	b.eq	17348 <plugin_init@@Base+0x6308>  // b.none
   17340:	mov	w19, #0x0                   	// #0
   17344:	b	1742c <plugin_init@@Base+0x63ec>
   17348:	add	x0, sp, #0x48
   1734c:	ldr	x1, [sp, #56]
   17350:	bl	12308 <plugin_init@@Base+0x12c8>
   17354:	cmp	w0, #0x0
   17358:	cset	w0, eq  // eq = none
   1735c:	and	w0, w0, #0xff
   17360:	cmp	w0, #0x0
   17364:	b.eq	17370 <plugin_init@@Base+0x6330>  // b.none
   17368:	mov	w19, #0x0                   	// #0
   1736c:	b	1742c <plugin_init@@Base+0x63ec>
   17370:	add	x0, sp, #0x40
   17374:	ldr	x1, [sp, #56]
   17378:	bl	1a258 <plugin_init@@Base+0x9218>
   1737c:	cmp	w0, #0x0
   17380:	cset	w0, eq  // eq = none
   17384:	and	w0, w0, #0xff
   17388:	cmp	w0, #0x0
   1738c:	b.eq	17398 <plugin_init@@Base+0x6358>  // b.none
   17390:	mov	w19, #0x0                   	// #0
   17394:	b	1742c <plugin_init@@Base+0x63ec>
   17398:	add	x0, sp, #0x60
   1739c:	bl	122f0 <plugin_init@@Base+0x12b0>
   173a0:	mov	x19, x0
   173a4:	add	x0, sp, #0x58
   173a8:	bl	1a18c <plugin_init@@Base+0x914c>
   173ac:	mov	x20, x0
   173b0:	add	x0, sp, #0x50
   173b4:	bl	1a218 <plugin_init@@Base+0x91d8>
   173b8:	mov	w21, w0
   173bc:	add	x0, sp, #0x48
   173c0:	bl	122f0 <plugin_init@@Base+0x12b0>
   173c4:	mov	x22, x0
   173c8:	add	x0, sp, #0x40
   173cc:	bl	1a280 <plugin_init@@Base+0x9240>
   173d0:	mov	w5, w0
   173d4:	mov	x4, x22
   173d8:	mov	w3, w21
   173dc:	mov	x2, x20
   173e0:	mov	x1, x19
   173e4:	ldr	x0, [sp, #56]
   173e8:	bl	ca90 <_Z19decl_assembler_nameP9tree_node@plt+0x5d30>
   173ec:	str	x0, [sp, #104]
   173f0:	mov	w1, #0x52                  	// #82
   173f4:	ldr	x0, [sp, #56]
   173f8:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   173fc:	cmp	w0, #0x0
   17400:	cset	w0, eq  // eq = none
   17404:	and	w0, w0, #0xff
   17408:	cmp	w0, #0x0
   1740c:	b.eq	17418 <plugin_init@@Base+0x63d8>  // b.none
   17410:	mov	w19, #0x0                   	// #0
   17414:	b	1742c <plugin_init@@Base+0x63ec>
   17418:	ldr	x1, [sp, #104]
   1741c:	ldr	x0, [sp, #56]
   17420:	bl	1a1a4 <plugin_init@@Base+0x9164>
   17424:	mov	w19, w0
   17428:	nop
   1742c:	add	x0, sp, #0x40
   17430:	bl	1a244 <plugin_init@@Base+0x9204>
   17434:	add	x0, sp, #0x48
   17438:	bl	122bc <plugin_init@@Base+0x127c>
   1743c:	add	x0, sp, #0x50
   17440:	bl	1a1dc <plugin_init@@Base+0x919c>
   17444:	add	x0, sp, #0x58
   17448:	bl	1a150 <plugin_init@@Base+0x9110>
   1744c:	add	x0, sp, #0x60
   17450:	bl	122bc <plugin_init@@Base+0x127c>
   17454:	mov	w0, w19
   17458:	b	17490 <plugin_init@@Base+0x6450>
   1745c:	mov	x19, x0
   17460:	add	x0, sp, #0x40
   17464:	bl	1a244 <plugin_init@@Base+0x9204>
   17468:	add	x0, sp, #0x48
   1746c:	bl	122bc <plugin_init@@Base+0x127c>
   17470:	add	x0, sp, #0x50
   17474:	bl	1a1dc <plugin_init@@Base+0x919c>
   17478:	add	x0, sp, #0x58
   1747c:	bl	1a150 <plugin_init@@Base+0x9110>
   17480:	add	x0, sp, #0x60
   17484:	bl	122bc <plugin_init@@Base+0x127c>
   17488:	mov	x0, x19
   1748c:	bl	6c60 <_Unwind_Resume@plt>
   17490:	ldp	x19, x20, [sp, #16]
   17494:	ldp	x21, x22, [sp, #32]
   17498:	ldp	x29, x30, [sp], #112
   1749c:	ret
   174a0:	stp	x29, x30, [sp, #-80]!
   174a4:	mov	x29, sp
   174a8:	stp	x19, x20, [sp, #16]
   174ac:	str	x0, [sp, #40]
   174b0:	add	x0, sp, #0x40
   174b4:	bl	1a13c <plugin_init@@Base+0x90fc>
   174b8:	add	x0, sp, #0x38
   174bc:	bl	122a0 <plugin_init@@Base+0x1260>
   174c0:	add	x0, sp, #0x30
   174c4:	bl	1a368 <plugin_init@@Base+0x9328>
   174c8:	mov	x1, #0x3                   	// #3
   174cc:	ldr	x0, [sp, #40]
   174d0:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   174d4:	cmp	w0, #0x0
   174d8:	cset	w0, eq  // eq = none
   174dc:	and	w0, w0, #0xff
   174e0:	cmp	w0, #0x0
   174e4:	b.eq	174f0 <plugin_init@@Base+0x64b0>  // b.none
   174e8:	mov	w19, #0x0                   	// #0
   174ec:	b	175dc <plugin_init@@Base+0x659c>
   174f0:	add	x0, sp, #0x40
   174f4:	ldr	x1, [sp, #40]
   174f8:	bl	1a164 <plugin_init@@Base+0x9124>
   174fc:	cmp	w0, #0x0
   17500:	cset	w0, eq  // eq = none
   17504:	and	w0, w0, #0xff
   17508:	cmp	w0, #0x0
   1750c:	b.eq	17518 <plugin_init@@Base+0x64d8>  // b.none
   17510:	mov	w19, #0x0                   	// #0
   17514:	b	175dc <plugin_init@@Base+0x659c>
   17518:	add	x0, sp, #0x38
   1751c:	ldr	x1, [sp, #40]
   17520:	bl	12308 <plugin_init@@Base+0x12c8>
   17524:	cmp	w0, #0x0
   17528:	cset	w0, eq  // eq = none
   1752c:	and	w0, w0, #0xff
   17530:	cmp	w0, #0x0
   17534:	b.eq	17540 <plugin_init@@Base+0x6500>  // b.none
   17538:	mov	w19, #0x0                   	// #0
   1753c:	b	175dc <plugin_init@@Base+0x659c>
   17540:	add	x0, sp, #0x30
   17544:	ldr	x1, [sp, #40]
   17548:	bl	1a390 <plugin_init@@Base+0x9350>
   1754c:	cmp	w0, #0x0
   17550:	cset	w0, eq  // eq = none
   17554:	and	w0, w0, #0xff
   17558:	cmp	w0, #0x0
   1755c:	b.eq	17568 <plugin_init@@Base+0x6528>  // b.none
   17560:	mov	w19, #0x0                   	// #0
   17564:	b	175dc <plugin_init@@Base+0x659c>
   17568:	add	x0, sp, #0x40
   1756c:	bl	1a18c <plugin_init@@Base+0x914c>
   17570:	mov	x19, x0
   17574:	add	x0, sp, #0x38
   17578:	bl	122f0 <plugin_init@@Base+0x12b0>
   1757c:	mov	x20, x0
   17580:	add	x0, sp, #0x30
   17584:	bl	1a3b8 <plugin_init@@Base+0x9378>
   17588:	mov	x3, x0
   1758c:	mov	x2, x20
   17590:	mov	x1, x19
   17594:	ldr	x0, [sp, #40]
   17598:	bl	cc7c <_Z19decl_assembler_nameP9tree_node@plt+0x5f1c>
   1759c:	str	x0, [sp, #72]
   175a0:	mov	w1, #0x52                  	// #82
   175a4:	ldr	x0, [sp, #40]
   175a8:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   175ac:	cmp	w0, #0x0
   175b0:	cset	w0, eq  // eq = none
   175b4:	and	w0, w0, #0xff
   175b8:	cmp	w0, #0x0
   175bc:	b.eq	175c8 <plugin_init@@Base+0x6588>  // b.none
   175c0:	mov	w19, #0x0                   	// #0
   175c4:	b	175dc <plugin_init@@Base+0x659c>
   175c8:	ldr	x1, [sp, #72]
   175cc:	ldr	x0, [sp, #40]
   175d0:	bl	1a1a4 <plugin_init@@Base+0x9164>
   175d4:	mov	w19, w0
   175d8:	nop
   175dc:	add	x0, sp, #0x30
   175e0:	bl	1a37c <plugin_init@@Base+0x933c>
   175e4:	add	x0, sp, #0x38
   175e8:	bl	122bc <plugin_init@@Base+0x127c>
   175ec:	add	x0, sp, #0x40
   175f0:	bl	1a150 <plugin_init@@Base+0x9110>
   175f4:	mov	w0, w19
   175f8:	b	17620 <plugin_init@@Base+0x65e0>
   175fc:	mov	x19, x0
   17600:	add	x0, sp, #0x30
   17604:	bl	1a37c <plugin_init@@Base+0x933c>
   17608:	add	x0, sp, #0x38
   1760c:	bl	122bc <plugin_init@@Base+0x127c>
   17610:	add	x0, sp, #0x40
   17614:	bl	1a150 <plugin_init@@Base+0x9110>
   17618:	mov	x0, x19
   1761c:	bl	6c60 <_Unwind_Resume@plt>
   17620:	ldp	x19, x20, [sp, #16]
   17624:	ldp	x29, x30, [sp], #80
   17628:	ret
   1762c:	stp	x29, x30, [sp, #-64]!
   17630:	mov	x29, sp
   17634:	str	x19, [sp, #16]
   17638:	str	x0, [sp, #40]
   1763c:	add	x0, sp, #0x30
   17640:	bl	1a13c <plugin_init@@Base+0x90fc>
   17644:	mov	x1, #0x1                   	// #1
   17648:	ldr	x0, [sp, #40]
   1764c:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   17650:	cmp	w0, #0x0
   17654:	cset	w0, eq  // eq = none
   17658:	and	w0, w0, #0xff
   1765c:	cmp	w0, #0x0
   17660:	b.eq	1766c <plugin_init@@Base+0x662c>  // b.none
   17664:	mov	w19, #0x0                   	// #0
   17668:	b	176e8 <plugin_init@@Base+0x66a8>
   1766c:	add	x0, sp, #0x30
   17670:	ldr	x1, [sp, #40]
   17674:	bl	1a164 <plugin_init@@Base+0x9124>
   17678:	cmp	w0, #0x0
   1767c:	cset	w0, eq  // eq = none
   17680:	and	w0, w0, #0xff
   17684:	cmp	w0, #0x0
   17688:	b.eq	17694 <plugin_init@@Base+0x6654>  // b.none
   1768c:	mov	w19, #0x0                   	// #0
   17690:	b	176e8 <plugin_init@@Base+0x66a8>
   17694:	add	x0, sp, #0x30
   17698:	bl	1a18c <plugin_init@@Base+0x914c>
   1769c:	mov	x1, x0
   176a0:	ldr	x0, [sp, #40]
   176a4:	bl	cd24 <_Z19decl_assembler_nameP9tree_node@plt+0x5fc4>
   176a8:	str	w0, [sp, #60]
   176ac:	mov	w1, #0x52                  	// #82
   176b0:	ldr	x0, [sp, #40]
   176b4:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   176b8:	cmp	w0, #0x0
   176bc:	cset	w0, eq  // eq = none
   176c0:	and	w0, w0, #0xff
   176c4:	cmp	w0, #0x0
   176c8:	b.eq	176d4 <plugin_init@@Base+0x6694>  // b.none
   176cc:	mov	w19, #0x0                   	// #0
   176d0:	b	176e8 <plugin_init@@Base+0x66a8>
   176d4:	ldr	w1, [sp, #60]
   176d8:	ldr	x0, [sp, #40]
   176dc:	bl	19a64 <plugin_init@@Base+0x8a24>
   176e0:	mov	w19, w0
   176e4:	nop
   176e8:	add	x0, sp, #0x30
   176ec:	bl	1a150 <plugin_init@@Base+0x9110>
   176f0:	mov	w0, w19
   176f4:	b	1770c <plugin_init@@Base+0x66cc>
   176f8:	mov	x19, x0
   176fc:	add	x0, sp, #0x30
   17700:	bl	1a150 <plugin_init@@Base+0x9110>
   17704:	mov	x0, x19
   17708:	bl	6c60 <_Unwind_Resume@plt>
   1770c:	ldr	x19, [sp, #16]
   17710:	ldp	x29, x30, [sp], #64
   17714:	ret
   17718:	stp	x29, x30, [sp, #-80]!
   1771c:	mov	x29, sp
   17720:	stp	x19, x20, [sp, #16]
   17724:	str	x0, [sp, #40]
   17728:	add	x0, sp, #0x40
   1772c:	bl	1a13c <plugin_init@@Base+0x90fc>
   17730:	add	x0, sp, #0x38
   17734:	bl	12330 <plugin_init@@Base+0x12f0>
   17738:	add	x0, sp, #0x30
   1773c:	bl	1a300 <plugin_init@@Base+0x92c0>
   17740:	mov	x1, #0x3                   	// #3
   17744:	ldr	x0, [sp, #40]
   17748:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   1774c:	cmp	w0, #0x0
   17750:	cset	w0, eq  // eq = none
   17754:	and	w0, w0, #0xff
   17758:	cmp	w0, #0x0
   1775c:	b.eq	17768 <plugin_init@@Base+0x6728>  // b.none
   17760:	mov	w19, #0x0                   	// #0
   17764:	b	17854 <plugin_init@@Base+0x6814>
   17768:	add	x0, sp, #0x40
   1776c:	ldr	x1, [sp, #40]
   17770:	bl	1a164 <plugin_init@@Base+0x9124>
   17774:	cmp	w0, #0x0
   17778:	cset	w0, eq  // eq = none
   1777c:	and	w0, w0, #0xff
   17780:	cmp	w0, #0x0
   17784:	b.eq	17790 <plugin_init@@Base+0x6750>  // b.none
   17788:	mov	w19, #0x0                   	// #0
   1778c:	b	17854 <plugin_init@@Base+0x6814>
   17790:	add	x0, sp, #0x38
   17794:	ldr	x1, [sp, #40]
   17798:	bl	123c8 <plugin_init@@Base+0x1388>
   1779c:	cmp	w0, #0x0
   177a0:	cset	w0, eq  // eq = none
   177a4:	and	w0, w0, #0xff
   177a8:	cmp	w0, #0x0
   177ac:	b.eq	177b8 <plugin_init@@Base+0x6778>  // b.none
   177b0:	mov	w19, #0x0                   	// #0
   177b4:	b	17854 <plugin_init@@Base+0x6814>
   177b8:	add	x0, sp, #0x30
   177bc:	ldr	x1, [sp, #40]
   177c0:	bl	1a328 <plugin_init@@Base+0x92e8>
   177c4:	cmp	w0, #0x0
   177c8:	cset	w0, eq  // eq = none
   177cc:	and	w0, w0, #0xff
   177d0:	cmp	w0, #0x0
   177d4:	b.eq	177e0 <plugin_init@@Base+0x67a0>  // b.none
   177d8:	mov	w19, #0x0                   	// #0
   177dc:	b	17854 <plugin_init@@Base+0x6814>
   177e0:	add	x0, sp, #0x40
   177e4:	bl	1a18c <plugin_init@@Base+0x914c>
   177e8:	mov	x19, x0
   177ec:	add	x0, sp, #0x38
   177f0:	bl	123b0 <plugin_init@@Base+0x1370>
   177f4:	mov	x20, x0
   177f8:	add	x0, sp, #0x30
   177fc:	bl	1a350 <plugin_init@@Base+0x9310>
   17800:	mov	w3, w0
   17804:	mov	x2, x20
   17808:	mov	x1, x19
   1780c:	ldr	x0, [sp, #40]
   17810:	bl	cd5c <_Z19decl_assembler_nameP9tree_node@plt+0x5ffc>
   17814:	str	x0, [sp, #72]
   17818:	mov	w1, #0x52                  	// #82
   1781c:	ldr	x0, [sp, #40]
   17820:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   17824:	cmp	w0, #0x0
   17828:	cset	w0, eq  // eq = none
   1782c:	and	w0, w0, #0xff
   17830:	cmp	w0, #0x0
   17834:	b.eq	17840 <plugin_init@@Base+0x6800>  // b.none
   17838:	mov	w19, #0x0                   	// #0
   1783c:	b	17854 <plugin_init@@Base+0x6814>
   17840:	ldr	x1, [sp, #72]
   17844:	ldr	x0, [sp, #40]
   17848:	bl	1a1a4 <plugin_init@@Base+0x9164>
   1784c:	mov	w19, w0
   17850:	nop
   17854:	add	x0, sp, #0x30
   17858:	bl	1a314 <plugin_init@@Base+0x92d4>
   1785c:	add	x0, sp, #0x38
   17860:	bl	1234c <plugin_init@@Base+0x130c>
   17864:	add	x0, sp, #0x40
   17868:	bl	1a150 <plugin_init@@Base+0x9110>
   1786c:	mov	w0, w19
   17870:	b	17898 <plugin_init@@Base+0x6858>
   17874:	mov	x19, x0
   17878:	add	x0, sp, #0x30
   1787c:	bl	1a314 <plugin_init@@Base+0x92d4>
   17880:	add	x0, sp, #0x38
   17884:	bl	1234c <plugin_init@@Base+0x130c>
   17888:	add	x0, sp, #0x40
   1788c:	bl	1a150 <plugin_init@@Base+0x9110>
   17890:	mov	x0, x19
   17894:	bl	6c60 <_Unwind_Resume@plt>
   17898:	ldp	x19, x20, [sp, #16]
   1789c:	ldp	x29, x30, [sp], #80
   178a0:	ret
   178a4:	stp	x29, x30, [sp, #-80]!
   178a8:	mov	x29, sp
   178ac:	str	x19, [sp, #16]
   178b0:	str	x0, [sp, #40]
   178b4:	add	x0, sp, #0x40
   178b8:	bl	1a13c <plugin_init@@Base+0x90fc>
   178bc:	add	x0, sp, #0x38
   178c0:	bl	12330 <plugin_init@@Base+0x12f0>
   178c4:	mov	x1, #0x2                   	// #2
   178c8:	ldr	x0, [sp, #40]
   178cc:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   178d0:	cmp	w0, #0x0
   178d4:	cset	w0, eq  // eq = none
   178d8:	and	w0, w0, #0xff
   178dc:	cmp	w0, #0x0
   178e0:	b.eq	178ec <plugin_init@@Base+0x68ac>  // b.none
   178e4:	mov	w19, #0x0                   	// #0
   178e8:	b	179a0 <plugin_init@@Base+0x6960>
   178ec:	add	x0, sp, #0x40
   178f0:	ldr	x1, [sp, #40]
   178f4:	bl	1a164 <plugin_init@@Base+0x9124>
   178f8:	cmp	w0, #0x0
   178fc:	cset	w0, eq  // eq = none
   17900:	and	w0, w0, #0xff
   17904:	cmp	w0, #0x0
   17908:	b.eq	17914 <plugin_init@@Base+0x68d4>  // b.none
   1790c:	mov	w19, #0x0                   	// #0
   17910:	b	179a0 <plugin_init@@Base+0x6960>
   17914:	add	x0, sp, #0x38
   17918:	ldr	x1, [sp, #40]
   1791c:	bl	123c8 <plugin_init@@Base+0x1388>
   17920:	cmp	w0, #0x0
   17924:	cset	w0, eq  // eq = none
   17928:	and	w0, w0, #0xff
   1792c:	cmp	w0, #0x0
   17930:	b.eq	1793c <plugin_init@@Base+0x68fc>  // b.none
   17934:	mov	w19, #0x0                   	// #0
   17938:	b	179a0 <plugin_init@@Base+0x6960>
   1793c:	add	x0, sp, #0x40
   17940:	bl	1a18c <plugin_init@@Base+0x914c>
   17944:	mov	x19, x0
   17948:	add	x0, sp, #0x38
   1794c:	bl	123b0 <plugin_init@@Base+0x1370>
   17950:	mov	x2, x0
   17954:	mov	x1, x19
   17958:	ldr	x0, [sp, #40]
   1795c:	bl	cfb4 <_Z19decl_assembler_nameP9tree_node@plt+0x6254>
   17960:	str	x0, [sp, #72]
   17964:	mov	w1, #0x52                  	// #82
   17968:	ldr	x0, [sp, #40]
   1796c:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   17970:	cmp	w0, #0x0
   17974:	cset	w0, eq  // eq = none
   17978:	and	w0, w0, #0xff
   1797c:	cmp	w0, #0x0
   17980:	b.eq	1798c <plugin_init@@Base+0x694c>  // b.none
   17984:	mov	w19, #0x0                   	// #0
   17988:	b	179a0 <plugin_init@@Base+0x6960>
   1798c:	ldr	x1, [sp, #72]
   17990:	ldr	x0, [sp, #40]
   17994:	bl	1a1a4 <plugin_init@@Base+0x9164>
   17998:	mov	w19, w0
   1799c:	nop
   179a0:	add	x0, sp, #0x38
   179a4:	bl	1234c <plugin_init@@Base+0x130c>
   179a8:	add	x0, sp, #0x40
   179ac:	bl	1a150 <plugin_init@@Base+0x9110>
   179b0:	mov	w0, w19
   179b4:	b	179d4 <plugin_init@@Base+0x6994>
   179b8:	mov	x19, x0
   179bc:	add	x0, sp, #0x38
   179c0:	bl	1234c <plugin_init@@Base+0x130c>
   179c4:	add	x0, sp, #0x40
   179c8:	bl	1a150 <plugin_init@@Base+0x9110>
   179cc:	mov	x0, x19
   179d0:	bl	6c60 <_Unwind_Resume@plt>
   179d4:	ldr	x19, [sp, #16]
   179d8:	ldp	x29, x30, [sp], #80
   179dc:	ret
   179e0:	stp	x29, x30, [sp, #-112]!
   179e4:	mov	x29, sp
   179e8:	stp	x19, x20, [sp, #16]
   179ec:	str	x21, [sp, #32]
   179f0:	str	x0, [sp, #56]
   179f4:	add	x0, sp, #0x60
   179f8:	bl	1a13c <plugin_init@@Base+0x90fc>
   179fc:	add	x0, sp, #0x58
   17a00:	bl	1a13c <plugin_init@@Base+0x90fc>
   17a04:	add	x0, sp, #0x50
   17a08:	bl	1a3d0 <plugin_init@@Base+0x9390>
   17a0c:	add	x0, sp, #0x48
   17a10:	bl	1a298 <plugin_init@@Base+0x9258>
   17a14:	mov	x1, #0x4                   	// #4
   17a18:	ldr	x0, [sp, #56]
   17a1c:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   17a20:	cmp	w0, #0x0
   17a24:	cset	w0, eq  // eq = none
   17a28:	and	w0, w0, #0xff
   17a2c:	cmp	w0, #0x0
   17a30:	b.eq	17a3c <plugin_init@@Base+0x69fc>  // b.none
   17a34:	mov	w19, #0x0                   	// #0
   17a38:	b	17b60 <plugin_init@@Base+0x6b20>
   17a3c:	add	x0, sp, #0x60
   17a40:	ldr	x1, [sp, #56]
   17a44:	bl	1a164 <plugin_init@@Base+0x9124>
   17a48:	cmp	w0, #0x0
   17a4c:	cset	w0, eq  // eq = none
   17a50:	and	w0, w0, #0xff
   17a54:	cmp	w0, #0x0
   17a58:	b.eq	17a64 <plugin_init@@Base+0x6a24>  // b.none
   17a5c:	mov	w19, #0x0                   	// #0
   17a60:	b	17b60 <plugin_init@@Base+0x6b20>
   17a64:	add	x0, sp, #0x58
   17a68:	ldr	x1, [sp, #56]
   17a6c:	bl	1a164 <plugin_init@@Base+0x9124>
   17a70:	cmp	w0, #0x0
   17a74:	cset	w0, eq  // eq = none
   17a78:	and	w0, w0, #0xff
   17a7c:	cmp	w0, #0x0
   17a80:	b.eq	17a8c <plugin_init@@Base+0x6a4c>  // b.none
   17a84:	mov	w19, #0x0                   	// #0
   17a88:	b	17b60 <plugin_init@@Base+0x6b20>
   17a8c:	add	x0, sp, #0x50
   17a90:	ldr	x1, [sp, #56]
   17a94:	bl	1a3f8 <plugin_init@@Base+0x93b8>
   17a98:	cmp	w0, #0x0
   17a9c:	cset	w0, eq  // eq = none
   17aa0:	and	w0, w0, #0xff
   17aa4:	cmp	w0, #0x0
   17aa8:	b.eq	17ab4 <plugin_init@@Base+0x6a74>  // b.none
   17aac:	mov	w19, #0x0                   	// #0
   17ab0:	b	17b60 <plugin_init@@Base+0x6b20>
   17ab4:	add	x0, sp, #0x48
   17ab8:	ldr	x1, [sp, #56]
   17abc:	bl	1a2c0 <plugin_init@@Base+0x9280>
   17ac0:	cmp	w0, #0x0
   17ac4:	cset	w0, eq  // eq = none
   17ac8:	and	w0, w0, #0xff
   17acc:	cmp	w0, #0x0
   17ad0:	b.eq	17adc <plugin_init@@Base+0x6a9c>  // b.none
   17ad4:	mov	w19, #0x0                   	// #0
   17ad8:	b	17b60 <plugin_init@@Base+0x6b20>
   17adc:	add	x0, sp, #0x60
   17ae0:	bl	1a18c <plugin_init@@Base+0x914c>
   17ae4:	mov	x19, x0
   17ae8:	add	x0, sp, #0x58
   17aec:	bl	1a18c <plugin_init@@Base+0x914c>
   17af0:	mov	x20, x0
   17af4:	add	x0, sp, #0x50
   17af8:	bl	1a420 <plugin_init@@Base+0x93e0>
   17afc:	mov	w21, w0
   17b00:	add	x0, sp, #0x48
   17b04:	bl	1a2e8 <plugin_init@@Base+0x92a8>
   17b08:	mov	w4, w0
   17b0c:	mov	w3, w21
   17b10:	mov	x2, x20
   17b14:	mov	x1, x19
   17b18:	ldr	x0, [sp, #56]
   17b1c:	bl	d0a4 <_Z19decl_assembler_nameP9tree_node@plt+0x6344>
   17b20:	str	x0, [sp, #104]
   17b24:	mov	w1, #0x52                  	// #82
   17b28:	ldr	x0, [sp, #56]
   17b2c:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   17b30:	cmp	w0, #0x0
   17b34:	cset	w0, eq  // eq = none
   17b38:	and	w0, w0, #0xff
   17b3c:	cmp	w0, #0x0
   17b40:	b.eq	17b4c <plugin_init@@Base+0x6b0c>  // b.none
   17b44:	mov	w19, #0x0                   	// #0
   17b48:	b	17b60 <plugin_init@@Base+0x6b20>
   17b4c:	ldr	x1, [sp, #104]
   17b50:	ldr	x0, [sp, #56]
   17b54:	bl	1a1a4 <plugin_init@@Base+0x9164>
   17b58:	mov	w19, w0
   17b5c:	nop
   17b60:	add	x0, sp, #0x48
   17b64:	bl	1a2ac <plugin_init@@Base+0x926c>
   17b68:	add	x0, sp, #0x50
   17b6c:	bl	1a3e4 <plugin_init@@Base+0x93a4>
   17b70:	add	x0, sp, #0x58
   17b74:	bl	1a150 <plugin_init@@Base+0x9110>
   17b78:	add	x0, sp, #0x60
   17b7c:	bl	1a150 <plugin_init@@Base+0x9110>
   17b80:	mov	w0, w19
   17b84:	b	17bb4 <plugin_init@@Base+0x6b74>
   17b88:	mov	x19, x0
   17b8c:	add	x0, sp, #0x48
   17b90:	bl	1a2ac <plugin_init@@Base+0x926c>
   17b94:	add	x0, sp, #0x50
   17b98:	bl	1a3e4 <plugin_init@@Base+0x93a4>
   17b9c:	add	x0, sp, #0x58
   17ba0:	bl	1a150 <plugin_init@@Base+0x9110>
   17ba4:	add	x0, sp, #0x60
   17ba8:	bl	1a150 <plugin_init@@Base+0x9110>
   17bac:	mov	x0, x19
   17bb0:	bl	6c60 <_Unwind_Resume@plt>
   17bb4:	ldp	x19, x20, [sp, #16]
   17bb8:	ldr	x21, [sp, #32]
   17bbc:	ldp	x29, x30, [sp], #112
   17bc0:	ret
   17bc4:	stp	x29, x30, [sp, #-80]!
   17bc8:	mov	x29, sp
   17bcc:	str	x19, [sp, #16]
   17bd0:	str	x0, [sp, #40]
   17bd4:	add	x0, sp, #0x40
   17bd8:	bl	1a13c <plugin_init@@Base+0x90fc>
   17bdc:	add	x0, sp, #0x38
   17be0:	bl	1a300 <plugin_init@@Base+0x92c0>
   17be4:	mov	x1, #0x2                   	// #2
   17be8:	ldr	x0, [sp, #40]
   17bec:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   17bf0:	cmp	w0, #0x0
   17bf4:	cset	w0, eq  // eq = none
   17bf8:	and	w0, w0, #0xff
   17bfc:	cmp	w0, #0x0
   17c00:	b.eq	17c0c <plugin_init@@Base+0x6bcc>  // b.none
   17c04:	mov	w19, #0x0                   	// #0
   17c08:	b	17cc0 <plugin_init@@Base+0x6c80>
   17c0c:	add	x0, sp, #0x40
   17c10:	ldr	x1, [sp, #40]
   17c14:	bl	1a164 <plugin_init@@Base+0x9124>
   17c18:	cmp	w0, #0x0
   17c1c:	cset	w0, eq  // eq = none
   17c20:	and	w0, w0, #0xff
   17c24:	cmp	w0, #0x0
   17c28:	b.eq	17c34 <plugin_init@@Base+0x6bf4>  // b.none
   17c2c:	mov	w19, #0x0                   	// #0
   17c30:	b	17cc0 <plugin_init@@Base+0x6c80>
   17c34:	add	x0, sp, #0x38
   17c38:	ldr	x1, [sp, #40]
   17c3c:	bl	1a328 <plugin_init@@Base+0x92e8>
   17c40:	cmp	w0, #0x0
   17c44:	cset	w0, eq  // eq = none
   17c48:	and	w0, w0, #0xff
   17c4c:	cmp	w0, #0x0
   17c50:	b.eq	17c5c <plugin_init@@Base+0x6c1c>  // b.none
   17c54:	mov	w19, #0x0                   	// #0
   17c58:	b	17cc0 <plugin_init@@Base+0x6c80>
   17c5c:	add	x0, sp, #0x40
   17c60:	bl	1a18c <plugin_init@@Base+0x914c>
   17c64:	mov	x19, x0
   17c68:	add	x0, sp, #0x38
   17c6c:	bl	1a350 <plugin_init@@Base+0x9310>
   17c70:	mov	w2, w0
   17c74:	mov	x1, x19
   17c78:	ldr	x0, [sp, #40]
   17c7c:	bl	ce98 <_Z19decl_assembler_nameP9tree_node@plt+0x6138>
   17c80:	str	x0, [sp, #72]
   17c84:	mov	w1, #0x52                  	// #82
   17c88:	ldr	x0, [sp, #40]
   17c8c:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   17c90:	cmp	w0, #0x0
   17c94:	cset	w0, eq  // eq = none
   17c98:	and	w0, w0, #0xff
   17c9c:	cmp	w0, #0x0
   17ca0:	b.eq	17cac <plugin_init@@Base+0x6c6c>  // b.none
   17ca4:	mov	w19, #0x0                   	// #0
   17ca8:	b	17cc0 <plugin_init@@Base+0x6c80>
   17cac:	ldr	x1, [sp, #72]
   17cb0:	ldr	x0, [sp, #40]
   17cb4:	bl	1a1a4 <plugin_init@@Base+0x9164>
   17cb8:	mov	w19, w0
   17cbc:	nop
   17cc0:	add	x0, sp, #0x38
   17cc4:	bl	1a314 <plugin_init@@Base+0x92d4>
   17cc8:	add	x0, sp, #0x40
   17ccc:	bl	1a150 <plugin_init@@Base+0x9110>
   17cd0:	mov	w0, w19
   17cd4:	b	17cf4 <plugin_init@@Base+0x6cb4>
   17cd8:	mov	x19, x0
   17cdc:	add	x0, sp, #0x38
   17ce0:	bl	1a314 <plugin_init@@Base+0x92d4>
   17ce4:	add	x0, sp, #0x40
   17ce8:	bl	1a150 <plugin_init@@Base+0x9110>
   17cec:	mov	x0, x19
   17cf0:	bl	6c60 <_Unwind_Resume@plt>
   17cf4:	ldr	x19, [sp, #16]
   17cf8:	ldp	x29, x30, [sp], #80
   17cfc:	ret
   17d00:	stp	x29, x30, [sp, #-64]!
   17d04:	mov	x29, sp
   17d08:	str	x19, [sp, #16]
   17d0c:	str	x0, [sp, #40]
   17d10:	add	x0, sp, #0x30
   17d14:	bl	1a13c <plugin_init@@Base+0x90fc>
   17d18:	mov	x1, #0x1                   	// #1
   17d1c:	ldr	x0, [sp, #40]
   17d20:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   17d24:	cmp	w0, #0x0
   17d28:	cset	w0, eq  // eq = none
   17d2c:	and	w0, w0, #0xff
   17d30:	cmp	w0, #0x0
   17d34:	b.eq	17d40 <plugin_init@@Base+0x6d00>  // b.none
   17d38:	mov	w19, #0x0                   	// #0
   17d3c:	b	17dbc <plugin_init@@Base+0x6d7c>
   17d40:	add	x0, sp, #0x30
   17d44:	ldr	x1, [sp, #40]
   17d48:	bl	1a164 <plugin_init@@Base+0x9124>
   17d4c:	cmp	w0, #0x0
   17d50:	cset	w0, eq  // eq = none
   17d54:	and	w0, w0, #0xff
   17d58:	cmp	w0, #0x0
   17d5c:	b.eq	17d68 <plugin_init@@Base+0x6d28>  // b.none
   17d60:	mov	w19, #0x0                   	// #0
   17d64:	b	17dbc <plugin_init@@Base+0x6d7c>
   17d68:	add	x0, sp, #0x30
   17d6c:	bl	1a18c <plugin_init@@Base+0x914c>
   17d70:	mov	x1, x0
   17d74:	ldr	x0, [sp, #40]
   17d78:	bl	c5f4 <_Z19decl_assembler_nameP9tree_node@plt+0x5894>
   17d7c:	str	x0, [sp, #56]
   17d80:	mov	w1, #0x52                  	// #82
   17d84:	ldr	x0, [sp, #40]
   17d88:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   17d8c:	cmp	w0, #0x0
   17d90:	cset	w0, eq  // eq = none
   17d94:	and	w0, w0, #0xff
   17d98:	cmp	w0, #0x0
   17d9c:	b.eq	17da8 <plugin_init@@Base+0x6d68>  // b.none
   17da0:	mov	w19, #0x0                   	// #0
   17da4:	b	17dbc <plugin_init@@Base+0x6d7c>
   17da8:	ldr	x1, [sp, #56]
   17dac:	ldr	x0, [sp, #40]
   17db0:	bl	1a1a4 <plugin_init@@Base+0x9164>
   17db4:	mov	w19, w0
   17db8:	nop
   17dbc:	add	x0, sp, #0x30
   17dc0:	bl	1a150 <plugin_init@@Base+0x9110>
   17dc4:	mov	w0, w19
   17dc8:	b	17de0 <plugin_init@@Base+0x6da0>
   17dcc:	mov	x19, x0
   17dd0:	add	x0, sp, #0x30
   17dd4:	bl	1a150 <plugin_init@@Base+0x9110>
   17dd8:	mov	x0, x19
   17ddc:	bl	6c60 <_Unwind_Resume@plt>
   17de0:	ldr	x19, [sp, #16]
   17de4:	ldp	x29, x30, [sp], #64
   17de8:	ret
   17dec:	stp	x29, x30, [sp, #-80]!
   17df0:	mov	x29, sp
   17df4:	stp	x19, x20, [sp, #16]
   17df8:	str	x0, [sp, #40]
   17dfc:	add	x0, sp, #0x40
   17e00:	bl	1a300 <plugin_init@@Base+0x92c0>
   17e04:	add	x0, sp, #0x38
   17e08:	bl	1a368 <plugin_init@@Base+0x9328>
   17e0c:	add	x0, sp, #0x30
   17e10:	bl	122a0 <plugin_init@@Base+0x1260>
   17e14:	mov	x1, #0x3                   	// #3
   17e18:	ldr	x0, [sp, #40]
   17e1c:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   17e20:	cmp	w0, #0x0
   17e24:	cset	w0, eq  // eq = none
   17e28:	and	w0, w0, #0xff
   17e2c:	cmp	w0, #0x0
   17e30:	b.eq	17e3c <plugin_init@@Base+0x6dfc>  // b.none
   17e34:	mov	w19, #0x0                   	// #0
   17e38:	b	17f28 <plugin_init@@Base+0x6ee8>
   17e3c:	add	x0, sp, #0x40
   17e40:	ldr	x1, [sp, #40]
   17e44:	bl	1a328 <plugin_init@@Base+0x92e8>
   17e48:	cmp	w0, #0x0
   17e4c:	cset	w0, eq  // eq = none
   17e50:	and	w0, w0, #0xff
   17e54:	cmp	w0, #0x0
   17e58:	b.eq	17e64 <plugin_init@@Base+0x6e24>  // b.none
   17e5c:	mov	w19, #0x0                   	// #0
   17e60:	b	17f28 <plugin_init@@Base+0x6ee8>
   17e64:	add	x0, sp, #0x38
   17e68:	ldr	x1, [sp, #40]
   17e6c:	bl	1a390 <plugin_init@@Base+0x9350>
   17e70:	cmp	w0, #0x0
   17e74:	cset	w0, eq  // eq = none
   17e78:	and	w0, w0, #0xff
   17e7c:	cmp	w0, #0x0
   17e80:	b.eq	17e8c <plugin_init@@Base+0x6e4c>  // b.none
   17e84:	mov	w19, #0x0                   	// #0
   17e88:	b	17f28 <plugin_init@@Base+0x6ee8>
   17e8c:	add	x0, sp, #0x30
   17e90:	ldr	x1, [sp, #40]
   17e94:	bl	12308 <plugin_init@@Base+0x12c8>
   17e98:	cmp	w0, #0x0
   17e9c:	cset	w0, eq  // eq = none
   17ea0:	and	w0, w0, #0xff
   17ea4:	cmp	w0, #0x0
   17ea8:	b.eq	17eb4 <plugin_init@@Base+0x6e74>  // b.none
   17eac:	mov	w19, #0x0                   	// #0
   17eb0:	b	17f28 <plugin_init@@Base+0x6ee8>
   17eb4:	add	x0, sp, #0x40
   17eb8:	bl	1a350 <plugin_init@@Base+0x9310>
   17ebc:	mov	w19, w0
   17ec0:	add	x0, sp, #0x38
   17ec4:	bl	1a3b8 <plugin_init@@Base+0x9378>
   17ec8:	mov	x20, x0
   17ecc:	add	x0, sp, #0x30
   17ed0:	bl	122f0 <plugin_init@@Base+0x12b0>
   17ed4:	mov	x3, x0
   17ed8:	mov	x2, x20
   17edc:	mov	w1, w19
   17ee0:	ldr	x0, [sp, #40]
   17ee4:	bl	10670 <_Z19decl_assembler_nameP9tree_node@plt+0x9910>
   17ee8:	str	x0, [sp, #72]
   17eec:	mov	w1, #0x52                  	// #82
   17ef0:	ldr	x0, [sp, #40]
   17ef4:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   17ef8:	cmp	w0, #0x0
   17efc:	cset	w0, eq  // eq = none
   17f00:	and	w0, w0, #0xff
   17f04:	cmp	w0, #0x0
   17f08:	b.eq	17f14 <plugin_init@@Base+0x6ed4>  // b.none
   17f0c:	mov	w19, #0x0                   	// #0
   17f10:	b	17f28 <plugin_init@@Base+0x6ee8>
   17f14:	ldr	x1, [sp, #72]
   17f18:	ldr	x0, [sp, #40]
   17f1c:	bl	1a1a4 <plugin_init@@Base+0x9164>
   17f20:	mov	w19, w0
   17f24:	nop
   17f28:	add	x0, sp, #0x30
   17f2c:	bl	122bc <plugin_init@@Base+0x127c>
   17f30:	add	x0, sp, #0x38
   17f34:	bl	1a37c <plugin_init@@Base+0x933c>
   17f38:	add	x0, sp, #0x40
   17f3c:	bl	1a314 <plugin_init@@Base+0x92d4>
   17f40:	mov	w0, w19
   17f44:	b	17f6c <plugin_init@@Base+0x6f2c>
   17f48:	mov	x19, x0
   17f4c:	add	x0, sp, #0x30
   17f50:	bl	122bc <plugin_init@@Base+0x127c>
   17f54:	add	x0, sp, #0x38
   17f58:	bl	1a37c <plugin_init@@Base+0x933c>
   17f5c:	add	x0, sp, #0x40
   17f60:	bl	1a314 <plugin_init@@Base+0x92d4>
   17f64:	mov	x0, x19
   17f68:	bl	6c60 <_Unwind_Resume@plt>
   17f6c:	ldp	x19, x20, [sp, #16]
   17f70:	ldp	x29, x30, [sp], #80
   17f74:	ret
   17f78:	stp	x29, x30, [sp, #-48]!
   17f7c:	mov	x29, sp
   17f80:	str	x0, [sp, #24]
   17f84:	mov	x1, #0x0                   	// #0
   17f88:	ldr	x0, [sp, #24]
   17f8c:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   17f90:	cmp	w0, #0x0
   17f94:	cset	w0, eq  // eq = none
   17f98:	and	w0, w0, #0xff
   17f9c:	cmp	w0, #0x0
   17fa0:	b.eq	17fac <plugin_init@@Base+0x6f6c>  // b.none
   17fa4:	mov	w0, #0x0                   	// #0
   17fa8:	b	17ff0 <plugin_init@@Base+0x6fb0>
   17fac:	ldr	x0, [sp, #24]
   17fb0:	bl	107e4 <_Z19decl_assembler_nameP9tree_node@plt+0x9a84>
   17fb4:	str	x0, [sp, #40]
   17fb8:	mov	w1, #0x52                  	// #82
   17fbc:	ldr	x0, [sp, #24]
   17fc0:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   17fc4:	cmp	w0, #0x0
   17fc8:	cset	w0, eq  // eq = none
   17fcc:	and	w0, w0, #0xff
   17fd0:	cmp	w0, #0x0
   17fd4:	b.eq	17fe0 <plugin_init@@Base+0x6fa0>  // b.none
   17fd8:	mov	w0, #0x0                   	// #0
   17fdc:	b	17ff0 <plugin_init@@Base+0x6fb0>
   17fe0:	ldr	x1, [sp, #40]
   17fe4:	ldr	x0, [sp, #24]
   17fe8:	bl	1a1a4 <plugin_init@@Base+0x9164>
   17fec:	nop
   17ff0:	ldp	x29, x30, [sp], #48
   17ff4:	ret
   17ff8:	stp	x29, x30, [sp, #-80]!
   17ffc:	mov	x29, sp
   18000:	str	x19, [sp, #16]
   18004:	str	x0, [sp, #40]
   18008:	add	x0, sp, #0x40
   1800c:	bl	1a368 <plugin_init@@Base+0x9328>
   18010:	add	x0, sp, #0x38
   18014:	bl	122a0 <plugin_init@@Base+0x1260>
   18018:	mov	x1, #0x2                   	// #2
   1801c:	ldr	x0, [sp, #40]
   18020:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   18024:	cmp	w0, #0x0
   18028:	cset	w0, eq  // eq = none
   1802c:	and	w0, w0, #0xff
   18030:	cmp	w0, #0x0
   18034:	b.eq	18040 <plugin_init@@Base+0x7000>  // b.none
   18038:	mov	w19, #0x0                   	// #0
   1803c:	b	180f4 <plugin_init@@Base+0x70b4>
   18040:	add	x0, sp, #0x40
   18044:	ldr	x1, [sp, #40]
   18048:	bl	1a390 <plugin_init@@Base+0x9350>
   1804c:	cmp	w0, #0x0
   18050:	cset	w0, eq  // eq = none
   18054:	and	w0, w0, #0xff
   18058:	cmp	w0, #0x0
   1805c:	b.eq	18068 <plugin_init@@Base+0x7028>  // b.none
   18060:	mov	w19, #0x0                   	// #0
   18064:	b	180f4 <plugin_init@@Base+0x70b4>
   18068:	add	x0, sp, #0x38
   1806c:	ldr	x1, [sp, #40]
   18070:	bl	12308 <plugin_init@@Base+0x12c8>
   18074:	cmp	w0, #0x0
   18078:	cset	w0, eq  // eq = none
   1807c:	and	w0, w0, #0xff
   18080:	cmp	w0, #0x0
   18084:	b.eq	18090 <plugin_init@@Base+0x7050>  // b.none
   18088:	mov	w19, #0x0                   	// #0
   1808c:	b	180f4 <plugin_init@@Base+0x70b4>
   18090:	add	x0, sp, #0x40
   18094:	bl	1a3b8 <plugin_init@@Base+0x9378>
   18098:	mov	x19, x0
   1809c:	add	x0, sp, #0x38
   180a0:	bl	122f0 <plugin_init@@Base+0x12b0>
   180a4:	mov	x2, x0
   180a8:	mov	x1, x19
   180ac:	ldr	x0, [sp, #40]
   180b0:	bl	10808 <_Z19decl_assembler_nameP9tree_node@plt+0x9aa8>
   180b4:	str	x0, [sp, #72]
   180b8:	mov	w1, #0x52                  	// #82
   180bc:	ldr	x0, [sp, #40]
   180c0:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   180c4:	cmp	w0, #0x0
   180c8:	cset	w0, eq  // eq = none
   180cc:	and	w0, w0, #0xff
   180d0:	cmp	w0, #0x0
   180d4:	b.eq	180e0 <plugin_init@@Base+0x70a0>  // b.none
   180d8:	mov	w19, #0x0                   	// #0
   180dc:	b	180f4 <plugin_init@@Base+0x70b4>
   180e0:	ldr	x1, [sp, #72]
   180e4:	ldr	x0, [sp, #40]
   180e8:	bl	1a1a4 <plugin_init@@Base+0x9164>
   180ec:	mov	w19, w0
   180f0:	nop
   180f4:	add	x0, sp, #0x38
   180f8:	bl	122bc <plugin_init@@Base+0x127c>
   180fc:	add	x0, sp, #0x40
   18100:	bl	1a37c <plugin_init@@Base+0x933c>
   18104:	mov	w0, w19
   18108:	b	18128 <plugin_init@@Base+0x70e8>
   1810c:	mov	x19, x0
   18110:	add	x0, sp, #0x38
   18114:	bl	122bc <plugin_init@@Base+0x127c>
   18118:	add	x0, sp, #0x40
   1811c:	bl	1a37c <plugin_init@@Base+0x933c>
   18120:	mov	x0, x19
   18124:	bl	6c60 <_Unwind_Resume@plt>
   18128:	ldr	x19, [sp, #16]
   1812c:	ldp	x29, x30, [sp], #80
   18130:	ret
   18134:	stp	x29, x30, [sp, #-48]!
   18138:	mov	x29, sp
   1813c:	str	x0, [sp, #24]
   18140:	mov	x1, #0x0                   	// #0
   18144:	ldr	x0, [sp, #24]
   18148:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   1814c:	cmp	w0, #0x0
   18150:	cset	w0, eq  // eq = none
   18154:	and	w0, w0, #0xff
   18158:	cmp	w0, #0x0
   1815c:	b.eq	18168 <plugin_init@@Base+0x7128>  // b.none
   18160:	mov	w0, #0x0                   	// #0
   18164:	b	181ac <plugin_init@@Base+0x716c>
   18168:	ldr	x0, [sp, #24]
   1816c:	bl	109a0 <_Z19decl_assembler_nameP9tree_node@plt+0x9c40>
   18170:	str	x0, [sp, #40]
   18174:	mov	w1, #0x52                  	// #82
   18178:	ldr	x0, [sp, #24]
   1817c:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   18180:	cmp	w0, #0x0
   18184:	cset	w0, eq  // eq = none
   18188:	and	w0, w0, #0xff
   1818c:	cmp	w0, #0x0
   18190:	b.eq	1819c <plugin_init@@Base+0x715c>  // b.none
   18194:	mov	w0, #0x0                   	// #0
   18198:	b	181ac <plugin_init@@Base+0x716c>
   1819c:	ldr	x1, [sp, #40]
   181a0:	ldr	x0, [sp, #24]
   181a4:	bl	1a1a4 <plugin_init@@Base+0x9164>
   181a8:	nop
   181ac:	ldp	x29, x30, [sp], #48
   181b0:	ret
   181b4:	stp	x29, x30, [sp, #-48]!
   181b8:	mov	x29, sp
   181bc:	str	x0, [sp, #24]
   181c0:	mov	x1, #0x0                   	// #0
   181c4:	ldr	x0, [sp, #24]
   181c8:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   181cc:	cmp	w0, #0x0
   181d0:	cset	w0, eq  // eq = none
   181d4:	and	w0, w0, #0xff
   181d8:	cmp	w0, #0x0
   181dc:	b.eq	181e8 <plugin_init@@Base+0x71a8>  // b.none
   181e0:	mov	w0, #0x0                   	// #0
   181e4:	b	1822c <plugin_init@@Base+0x71ec>
   181e8:	ldr	x0, [sp, #24]
   181ec:	bl	109c4 <_Z19decl_assembler_nameP9tree_node@plt+0x9c64>
   181f0:	str	x0, [sp, #40]
   181f4:	mov	w1, #0x52                  	// #82
   181f8:	ldr	x0, [sp, #24]
   181fc:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   18200:	cmp	w0, #0x0
   18204:	cset	w0, eq  // eq = none
   18208:	and	w0, w0, #0xff
   1820c:	cmp	w0, #0x0
   18210:	b.eq	1821c <plugin_init@@Base+0x71dc>  // b.none
   18214:	mov	w0, #0x0                   	// #0
   18218:	b	1822c <plugin_init@@Base+0x71ec>
   1821c:	ldr	x1, [sp, #40]
   18220:	ldr	x0, [sp, #24]
   18224:	bl	1a1a4 <plugin_init@@Base+0x9164>
   18228:	nop
   1822c:	ldp	x29, x30, [sp], #48
   18230:	ret
   18234:	stp	x29, x30, [sp, #-48]!
   18238:	mov	x29, sp
   1823c:	str	x0, [sp, #24]
   18240:	mov	x1, #0x0                   	// #0
   18244:	ldr	x0, [sp, #24]
   18248:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   1824c:	cmp	w0, #0x0
   18250:	cset	w0, eq  // eq = none
   18254:	and	w0, w0, #0xff
   18258:	cmp	w0, #0x0
   1825c:	b.eq	18268 <plugin_init@@Base+0x7228>  // b.none
   18260:	mov	w0, #0x0                   	// #0
   18264:	b	182ac <plugin_init@@Base+0x726c>
   18268:	ldr	x0, [sp, #24]
   1826c:	bl	109e8 <_Z19decl_assembler_nameP9tree_node@plt+0x9c88>
   18270:	str	x0, [sp, #40]
   18274:	mov	w1, #0x52                  	// #82
   18278:	ldr	x0, [sp, #24]
   1827c:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   18280:	cmp	w0, #0x0
   18284:	cset	w0, eq  // eq = none
   18288:	and	w0, w0, #0xff
   1828c:	cmp	w0, #0x0
   18290:	b.eq	1829c <plugin_init@@Base+0x725c>  // b.none
   18294:	mov	w0, #0x0                   	// #0
   18298:	b	182ac <plugin_init@@Base+0x726c>
   1829c:	ldr	x1, [sp, #40]
   182a0:	ldr	x0, [sp, #24]
   182a4:	bl	1a1a4 <plugin_init@@Base+0x9164>
   182a8:	nop
   182ac:	ldp	x29, x30, [sp], #48
   182b0:	ret
   182b4:	stp	x29, x30, [sp, #-48]!
   182b8:	mov	x29, sp
   182bc:	str	x0, [sp, #24]
   182c0:	mov	x1, #0x0                   	// #0
   182c4:	ldr	x0, [sp, #24]
   182c8:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   182cc:	cmp	w0, #0x0
   182d0:	cset	w0, eq  // eq = none
   182d4:	and	w0, w0, #0xff
   182d8:	cmp	w0, #0x0
   182dc:	b.eq	182e8 <plugin_init@@Base+0x72a8>  // b.none
   182e0:	mov	w0, #0x0                   	// #0
   182e4:	b	1832c <plugin_init@@Base+0x72ec>
   182e8:	ldr	x0, [sp, #24]
   182ec:	bl	10a0c <_Z19decl_assembler_nameP9tree_node@plt+0x9cac>
   182f0:	str	x0, [sp, #40]
   182f4:	mov	w1, #0x52                  	// #82
   182f8:	ldr	x0, [sp, #24]
   182fc:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   18300:	cmp	w0, #0x0
   18304:	cset	w0, eq  // eq = none
   18308:	and	w0, w0, #0xff
   1830c:	cmp	w0, #0x0
   18310:	b.eq	1831c <plugin_init@@Base+0x72dc>  // b.none
   18314:	mov	w0, #0x0                   	// #0
   18318:	b	1832c <plugin_init@@Base+0x72ec>
   1831c:	ldr	x1, [sp, #40]
   18320:	ldr	x0, [sp, #24]
   18324:	bl	1a1a4 <plugin_init@@Base+0x9164>
   18328:	nop
   1832c:	ldp	x29, x30, [sp], #48
   18330:	ret
   18334:	stp	x29, x30, [sp, #-80]!
   18338:	mov	x29, sp
   1833c:	str	x19, [sp, #16]
   18340:	str	x0, [sp, #40]
   18344:	add	x0, sp, #0x40
   18348:	bl	1a13c <plugin_init@@Base+0x90fc>
   1834c:	add	x0, sp, #0x38
   18350:	bl	1a300 <plugin_init@@Base+0x92c0>
   18354:	mov	x1, #0x2                   	// #2
   18358:	ldr	x0, [sp, #40]
   1835c:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   18360:	cmp	w0, #0x0
   18364:	cset	w0, eq  // eq = none
   18368:	and	w0, w0, #0xff
   1836c:	cmp	w0, #0x0
   18370:	b.eq	1837c <plugin_init@@Base+0x733c>  // b.none
   18374:	mov	w19, #0x0                   	// #0
   18378:	b	18430 <plugin_init@@Base+0x73f0>
   1837c:	add	x0, sp, #0x40
   18380:	ldr	x1, [sp, #40]
   18384:	bl	1a164 <plugin_init@@Base+0x9124>
   18388:	cmp	w0, #0x0
   1838c:	cset	w0, eq  // eq = none
   18390:	and	w0, w0, #0xff
   18394:	cmp	w0, #0x0
   18398:	b.eq	183a4 <plugin_init@@Base+0x7364>  // b.none
   1839c:	mov	w19, #0x0                   	// #0
   183a0:	b	18430 <plugin_init@@Base+0x73f0>
   183a4:	add	x0, sp, #0x38
   183a8:	ldr	x1, [sp, #40]
   183ac:	bl	1a328 <plugin_init@@Base+0x92e8>
   183b0:	cmp	w0, #0x0
   183b4:	cset	w0, eq  // eq = none
   183b8:	and	w0, w0, #0xff
   183bc:	cmp	w0, #0x0
   183c0:	b.eq	183cc <plugin_init@@Base+0x738c>  // b.none
   183c4:	mov	w19, #0x0                   	// #0
   183c8:	b	18430 <plugin_init@@Base+0x73f0>
   183cc:	add	x0, sp, #0x40
   183d0:	bl	1a18c <plugin_init@@Base+0x914c>
   183d4:	mov	x19, x0
   183d8:	add	x0, sp, #0x38
   183dc:	bl	1a350 <plugin_init@@Base+0x9310>
   183e0:	mov	w2, w0
   183e4:	mov	x1, x19
   183e8:	ldr	x0, [sp, #40]
   183ec:	bl	10a30 <_Z19decl_assembler_nameP9tree_node@plt+0x9cd0>
   183f0:	str	x0, [sp, #72]
   183f4:	mov	w1, #0x52                  	// #82
   183f8:	ldr	x0, [sp, #40]
   183fc:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   18400:	cmp	w0, #0x0
   18404:	cset	w0, eq  // eq = none
   18408:	and	w0, w0, #0xff
   1840c:	cmp	w0, #0x0
   18410:	b.eq	1841c <plugin_init@@Base+0x73dc>  // b.none
   18414:	mov	w19, #0x0                   	// #0
   18418:	b	18430 <plugin_init@@Base+0x73f0>
   1841c:	ldr	x1, [sp, #72]
   18420:	ldr	x0, [sp, #40]
   18424:	bl	1a1a4 <plugin_init@@Base+0x9164>
   18428:	mov	w19, w0
   1842c:	nop
   18430:	add	x0, sp, #0x38
   18434:	bl	1a314 <plugin_init@@Base+0x92d4>
   18438:	add	x0, sp, #0x40
   1843c:	bl	1a150 <plugin_init@@Base+0x9110>
   18440:	mov	w0, w19
   18444:	b	18464 <plugin_init@@Base+0x7424>
   18448:	mov	x19, x0
   1844c:	add	x0, sp, #0x38
   18450:	bl	1a314 <plugin_init@@Base+0x92d4>
   18454:	add	x0, sp, #0x40
   18458:	bl	1a150 <plugin_init@@Base+0x9110>
   1845c:	mov	x0, x19
   18460:	bl	6c60 <_Unwind_Resume@plt>
   18464:	ldr	x19, [sp, #16]
   18468:	ldp	x29, x30, [sp], #80
   1846c:	ret
   18470:	stp	x29, x30, [sp, #-80]!
   18474:	mov	x29, sp
   18478:	str	x19, [sp, #16]
   1847c:	str	x0, [sp, #40]
   18480:	add	x0, sp, #0x40
   18484:	bl	1a13c <plugin_init@@Base+0x90fc>
   18488:	add	x0, sp, #0x38
   1848c:	bl	1a13c <plugin_init@@Base+0x90fc>
   18490:	mov	x1, #0x2                   	// #2
   18494:	ldr	x0, [sp, #40]
   18498:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   1849c:	cmp	w0, #0x0
   184a0:	cset	w0, eq  // eq = none
   184a4:	and	w0, w0, #0xff
   184a8:	cmp	w0, #0x0
   184ac:	b.eq	184b8 <plugin_init@@Base+0x7478>  // b.none
   184b0:	mov	w19, #0x0                   	// #0
   184b4:	b	1856c <plugin_init@@Base+0x752c>
   184b8:	add	x0, sp, #0x40
   184bc:	ldr	x1, [sp, #40]
   184c0:	bl	1a164 <plugin_init@@Base+0x9124>
   184c4:	cmp	w0, #0x0
   184c8:	cset	w0, eq  // eq = none
   184cc:	and	w0, w0, #0xff
   184d0:	cmp	w0, #0x0
   184d4:	b.eq	184e0 <plugin_init@@Base+0x74a0>  // b.none
   184d8:	mov	w19, #0x0                   	// #0
   184dc:	b	1856c <plugin_init@@Base+0x752c>
   184e0:	add	x0, sp, #0x38
   184e4:	ldr	x1, [sp, #40]
   184e8:	bl	1a164 <plugin_init@@Base+0x9124>
   184ec:	cmp	w0, #0x0
   184f0:	cset	w0, eq  // eq = none
   184f4:	and	w0, w0, #0xff
   184f8:	cmp	w0, #0x0
   184fc:	b.eq	18508 <plugin_init@@Base+0x74c8>  // b.none
   18500:	mov	w19, #0x0                   	// #0
   18504:	b	1856c <plugin_init@@Base+0x752c>
   18508:	add	x0, sp, #0x40
   1850c:	bl	1a18c <plugin_init@@Base+0x914c>
   18510:	mov	x19, x0
   18514:	add	x0, sp, #0x38
   18518:	bl	1a18c <plugin_init@@Base+0x914c>
   1851c:	mov	x2, x0
   18520:	mov	x1, x19
   18524:	ldr	x0, [sp, #40]
   18528:	bl	10ab0 <_Z19decl_assembler_nameP9tree_node@plt+0x9d50>
   1852c:	str	x0, [sp, #72]
   18530:	mov	w1, #0x52                  	// #82
   18534:	ldr	x0, [sp, #40]
   18538:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   1853c:	cmp	w0, #0x0
   18540:	cset	w0, eq  // eq = none
   18544:	and	w0, w0, #0xff
   18548:	cmp	w0, #0x0
   1854c:	b.eq	18558 <plugin_init@@Base+0x7518>  // b.none
   18550:	mov	w19, #0x0                   	// #0
   18554:	b	1856c <plugin_init@@Base+0x752c>
   18558:	ldr	x1, [sp, #72]
   1855c:	ldr	x0, [sp, #40]
   18560:	bl	1a1a4 <plugin_init@@Base+0x9164>
   18564:	mov	w19, w0
   18568:	nop
   1856c:	add	x0, sp, #0x38
   18570:	bl	1a150 <plugin_init@@Base+0x9110>
   18574:	add	x0, sp, #0x40
   18578:	bl	1a150 <plugin_init@@Base+0x9110>
   1857c:	mov	w0, w19
   18580:	b	185a0 <plugin_init@@Base+0x7560>
   18584:	mov	x19, x0
   18588:	add	x0, sp, #0x38
   1858c:	bl	1a150 <plugin_init@@Base+0x9110>
   18590:	add	x0, sp, #0x40
   18594:	bl	1a150 <plugin_init@@Base+0x9110>
   18598:	mov	x0, x19
   1859c:	bl	6c60 <_Unwind_Resume@plt>
   185a0:	ldr	x19, [sp, #16]
   185a4:	ldp	x29, x30, [sp], #80
   185a8:	ret
   185ac:	stp	x29, x30, [sp, #-80]!
   185b0:	mov	x29, sp
   185b4:	str	x19, [sp, #16]
   185b8:	str	x0, [sp, #40]
   185bc:	add	x0, sp, #0x40
   185c0:	bl	1a13c <plugin_init@@Base+0x90fc>
   185c4:	add	x0, sp, #0x38
   185c8:	bl	122a0 <plugin_init@@Base+0x1260>
   185cc:	mov	x1, #0x2                   	// #2
   185d0:	ldr	x0, [sp, #40]
   185d4:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   185d8:	cmp	w0, #0x0
   185dc:	cset	w0, eq  // eq = none
   185e0:	and	w0, w0, #0xff
   185e4:	cmp	w0, #0x0
   185e8:	b.eq	185f4 <plugin_init@@Base+0x75b4>  // b.none
   185ec:	mov	w19, #0x0                   	// #0
   185f0:	b	186a8 <plugin_init@@Base+0x7668>
   185f4:	add	x0, sp, #0x40
   185f8:	ldr	x1, [sp, #40]
   185fc:	bl	1a164 <plugin_init@@Base+0x9124>
   18600:	cmp	w0, #0x0
   18604:	cset	w0, eq  // eq = none
   18608:	and	w0, w0, #0xff
   1860c:	cmp	w0, #0x0
   18610:	b.eq	1861c <plugin_init@@Base+0x75dc>  // b.none
   18614:	mov	w19, #0x0                   	// #0
   18618:	b	186a8 <plugin_init@@Base+0x7668>
   1861c:	add	x0, sp, #0x38
   18620:	ldr	x1, [sp, #40]
   18624:	bl	12308 <plugin_init@@Base+0x12c8>
   18628:	cmp	w0, #0x0
   1862c:	cset	w0, eq  // eq = none
   18630:	and	w0, w0, #0xff
   18634:	cmp	w0, #0x0
   18638:	b.eq	18644 <plugin_init@@Base+0x7604>  // b.none
   1863c:	mov	w19, #0x0                   	// #0
   18640:	b	186a8 <plugin_init@@Base+0x7668>
   18644:	add	x0, sp, #0x40
   18648:	bl	1a18c <plugin_init@@Base+0x914c>
   1864c:	mov	x19, x0
   18650:	add	x0, sp, #0x38
   18654:	bl	122f0 <plugin_init@@Base+0x12b0>
   18658:	mov	x2, x0
   1865c:	mov	x1, x19
   18660:	ldr	x0, [sp, #40]
   18664:	bl	10be8 <_Z19decl_assembler_nameP9tree_node@plt+0x9e88>
   18668:	str	x0, [sp, #72]
   1866c:	mov	w1, #0x52                  	// #82
   18670:	ldr	x0, [sp, #40]
   18674:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   18678:	cmp	w0, #0x0
   1867c:	cset	w0, eq  // eq = none
   18680:	and	w0, w0, #0xff
   18684:	cmp	w0, #0x0
   18688:	b.eq	18694 <plugin_init@@Base+0x7654>  // b.none
   1868c:	mov	w19, #0x0                   	// #0
   18690:	b	186a8 <plugin_init@@Base+0x7668>
   18694:	ldr	x1, [sp, #72]
   18698:	ldr	x0, [sp, #40]
   1869c:	bl	1a1a4 <plugin_init@@Base+0x9164>
   186a0:	mov	w19, w0
   186a4:	nop
   186a8:	add	x0, sp, #0x38
   186ac:	bl	122bc <plugin_init@@Base+0x127c>
   186b0:	add	x0, sp, #0x40
   186b4:	bl	1a150 <plugin_init@@Base+0x9110>
   186b8:	mov	w0, w19
   186bc:	b	186dc <plugin_init@@Base+0x769c>
   186c0:	mov	x19, x0
   186c4:	add	x0, sp, #0x38
   186c8:	bl	122bc <plugin_init@@Base+0x127c>
   186cc:	add	x0, sp, #0x40
   186d0:	bl	1a150 <plugin_init@@Base+0x9110>
   186d4:	mov	x0, x19
   186d8:	bl	6c60 <_Unwind_Resume@plt>
   186dc:	ldr	x19, [sp, #16]
   186e0:	ldp	x29, x30, [sp], #80
   186e4:	ret
   186e8:	stp	x29, x30, [sp, #-80]!
   186ec:	mov	x29, sp
   186f0:	str	x19, [sp, #16]
   186f4:	str	x0, [sp, #40]
   186f8:	add	x0, sp, #0x40
   186fc:	bl	1a13c <plugin_init@@Base+0x90fc>
   18700:	add	x0, sp, #0x38
   18704:	bl	1a3d0 <plugin_init@@Base+0x9390>
   18708:	mov	x1, #0x2                   	// #2
   1870c:	ldr	x0, [sp, #40]
   18710:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   18714:	cmp	w0, #0x0
   18718:	cset	w0, eq  // eq = none
   1871c:	and	w0, w0, #0xff
   18720:	cmp	w0, #0x0
   18724:	b.eq	18730 <plugin_init@@Base+0x76f0>  // b.none
   18728:	mov	w19, #0x0                   	// #0
   1872c:	b	187e4 <plugin_init@@Base+0x77a4>
   18730:	add	x0, sp, #0x40
   18734:	ldr	x1, [sp, #40]
   18738:	bl	1a164 <plugin_init@@Base+0x9124>
   1873c:	cmp	w0, #0x0
   18740:	cset	w0, eq  // eq = none
   18744:	and	w0, w0, #0xff
   18748:	cmp	w0, #0x0
   1874c:	b.eq	18758 <plugin_init@@Base+0x7718>  // b.none
   18750:	mov	w19, #0x0                   	// #0
   18754:	b	187e4 <plugin_init@@Base+0x77a4>
   18758:	add	x0, sp, #0x38
   1875c:	ldr	x1, [sp, #40]
   18760:	bl	1a3f8 <plugin_init@@Base+0x93b8>
   18764:	cmp	w0, #0x0
   18768:	cset	w0, eq  // eq = none
   1876c:	and	w0, w0, #0xff
   18770:	cmp	w0, #0x0
   18774:	b.eq	18780 <plugin_init@@Base+0x7740>  // b.none
   18778:	mov	w19, #0x0                   	// #0
   1877c:	b	187e4 <plugin_init@@Base+0x77a4>
   18780:	add	x0, sp, #0x40
   18784:	bl	1a18c <plugin_init@@Base+0x914c>
   18788:	mov	x19, x0
   1878c:	add	x0, sp, #0x38
   18790:	bl	1a420 <plugin_init@@Base+0x93e0>
   18794:	mov	w2, w0
   18798:	mov	x1, x19
   1879c:	ldr	x0, [sp, #40]
   187a0:	bl	10c94 <_Z19decl_assembler_nameP9tree_node@plt+0x9f34>
   187a4:	str	x0, [sp, #72]
   187a8:	mov	w1, #0x52                  	// #82
   187ac:	ldr	x0, [sp, #40]
   187b0:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   187b4:	cmp	w0, #0x0
   187b8:	cset	w0, eq  // eq = none
   187bc:	and	w0, w0, #0xff
   187c0:	cmp	w0, #0x0
   187c4:	b.eq	187d0 <plugin_init@@Base+0x7790>  // b.none
   187c8:	mov	w19, #0x0                   	// #0
   187cc:	b	187e4 <plugin_init@@Base+0x77a4>
   187d0:	ldr	x1, [sp, #72]
   187d4:	ldr	x0, [sp, #40]
   187d8:	bl	1a1a4 <plugin_init@@Base+0x9164>
   187dc:	mov	w19, w0
   187e0:	nop
   187e4:	add	x0, sp, #0x38
   187e8:	bl	1a3e4 <plugin_init@@Base+0x93a4>
   187ec:	add	x0, sp, #0x40
   187f0:	bl	1a150 <plugin_init@@Base+0x9110>
   187f4:	mov	w0, w19
   187f8:	b	18818 <plugin_init@@Base+0x77d8>
   187fc:	mov	x19, x0
   18800:	add	x0, sp, #0x38
   18804:	bl	1a3e4 <plugin_init@@Base+0x93a4>
   18808:	add	x0, sp, #0x40
   1880c:	bl	1a150 <plugin_init@@Base+0x9110>
   18810:	mov	x0, x19
   18814:	bl	6c60 <_Unwind_Resume@plt>
   18818:	ldr	x19, [sp, #16]
   1881c:	ldp	x29, x30, [sp], #80
   18820:	ret
   18824:	stp	x29, x30, [sp, #-64]!
   18828:	mov	x29, sp
   1882c:	str	x19, [sp, #16]
   18830:	str	x0, [sp, #40]
   18834:	add	x0, sp, #0x30
   18838:	bl	1a13c <plugin_init@@Base+0x90fc>
   1883c:	mov	x1, #0x1                   	// #1
   18840:	ldr	x0, [sp, #40]
   18844:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   18848:	cmp	w0, #0x0
   1884c:	cset	w0, eq  // eq = none
   18850:	and	w0, w0, #0xff
   18854:	cmp	w0, #0x0
   18858:	b.eq	18864 <plugin_init@@Base+0x7824>  // b.none
   1885c:	mov	w19, #0x0                   	// #0
   18860:	b	188e0 <plugin_init@@Base+0x78a0>
   18864:	add	x0, sp, #0x30
   18868:	ldr	x1, [sp, #40]
   1886c:	bl	1a164 <plugin_init@@Base+0x9124>
   18870:	cmp	w0, #0x0
   18874:	cset	w0, eq  // eq = none
   18878:	and	w0, w0, #0xff
   1887c:	cmp	w0, #0x0
   18880:	b.eq	1888c <plugin_init@@Base+0x784c>  // b.none
   18884:	mov	w19, #0x0                   	// #0
   18888:	b	188e0 <plugin_init@@Base+0x78a0>
   1888c:	add	x0, sp, #0x30
   18890:	bl	1a18c <plugin_init@@Base+0x914c>
   18894:	mov	x1, x0
   18898:	ldr	x0, [sp, #40]
   1889c:	bl	10d68 <_Z19decl_assembler_nameP9tree_node@plt+0xa008>
   188a0:	str	x0, [sp, #56]
   188a4:	mov	w1, #0x52                  	// #82
   188a8:	ldr	x0, [sp, #40]
   188ac:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   188b0:	cmp	w0, #0x0
   188b4:	cset	w0, eq  // eq = none
   188b8:	and	w0, w0, #0xff
   188bc:	cmp	w0, #0x0
   188c0:	b.eq	188cc <plugin_init@@Base+0x788c>  // b.none
   188c4:	mov	w19, #0x0                   	// #0
   188c8:	b	188e0 <plugin_init@@Base+0x78a0>
   188cc:	ldr	x1, [sp, #56]
   188d0:	ldr	x0, [sp, #40]
   188d4:	bl	1a1a4 <plugin_init@@Base+0x9164>
   188d8:	mov	w19, w0
   188dc:	nop
   188e0:	add	x0, sp, #0x30
   188e4:	bl	1a150 <plugin_init@@Base+0x9110>
   188e8:	mov	w0, w19
   188ec:	b	18904 <plugin_init@@Base+0x78c4>
   188f0:	mov	x19, x0
   188f4:	add	x0, sp, #0x30
   188f8:	bl	1a150 <plugin_init@@Base+0x9110>
   188fc:	mov	x0, x19
   18900:	bl	6c60 <_Unwind_Resume@plt>
   18904:	ldr	x19, [sp, #16]
   18908:	ldp	x29, x30, [sp], #64
   1890c:	ret
   18910:	stp	x29, x30, [sp, #-80]!
   18914:	mov	x29, sp
   18918:	str	x19, [sp, #16]
   1891c:	str	x0, [sp, #40]
   18920:	add	x0, sp, #0x40
   18924:	bl	1a13c <plugin_init@@Base+0x90fc>
   18928:	add	x0, sp, #0x38
   1892c:	bl	1a300 <plugin_init@@Base+0x92c0>
   18930:	mov	x1, #0x2                   	// #2
   18934:	ldr	x0, [sp, #40]
   18938:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   1893c:	cmp	w0, #0x0
   18940:	cset	w0, eq  // eq = none
   18944:	and	w0, w0, #0xff
   18948:	cmp	w0, #0x0
   1894c:	b.eq	18958 <plugin_init@@Base+0x7918>  // b.none
   18950:	mov	w19, #0x0                   	// #0
   18954:	b	18a0c <plugin_init@@Base+0x79cc>
   18958:	add	x0, sp, #0x40
   1895c:	ldr	x1, [sp, #40]
   18960:	bl	1a164 <plugin_init@@Base+0x9124>
   18964:	cmp	w0, #0x0
   18968:	cset	w0, eq  // eq = none
   1896c:	and	w0, w0, #0xff
   18970:	cmp	w0, #0x0
   18974:	b.eq	18980 <plugin_init@@Base+0x7940>  // b.none
   18978:	mov	w19, #0x0                   	// #0
   1897c:	b	18a0c <plugin_init@@Base+0x79cc>
   18980:	add	x0, sp, #0x38
   18984:	ldr	x1, [sp, #40]
   18988:	bl	1a328 <plugin_init@@Base+0x92e8>
   1898c:	cmp	w0, #0x0
   18990:	cset	w0, eq  // eq = none
   18994:	and	w0, w0, #0xff
   18998:	cmp	w0, #0x0
   1899c:	b.eq	189a8 <plugin_init@@Base+0x7968>  // b.none
   189a0:	mov	w19, #0x0                   	// #0
   189a4:	b	18a0c <plugin_init@@Base+0x79cc>
   189a8:	add	x0, sp, #0x40
   189ac:	bl	1a18c <plugin_init@@Base+0x914c>
   189b0:	mov	x19, x0
   189b4:	add	x0, sp, #0x38
   189b8:	bl	1a350 <plugin_init@@Base+0x9310>
   189bc:	mov	w2, w0
   189c0:	mov	x1, x19
   189c4:	ldr	x0, [sp, #40]
   189c8:	bl	10da8 <_Z19decl_assembler_nameP9tree_node@plt+0xa048>
   189cc:	str	x0, [sp, #72]
   189d0:	mov	w1, #0x52                  	// #82
   189d4:	ldr	x0, [sp, #40]
   189d8:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   189dc:	cmp	w0, #0x0
   189e0:	cset	w0, eq  // eq = none
   189e4:	and	w0, w0, #0xff
   189e8:	cmp	w0, #0x0
   189ec:	b.eq	189f8 <plugin_init@@Base+0x79b8>  // b.none
   189f0:	mov	w19, #0x0                   	// #0
   189f4:	b	18a0c <plugin_init@@Base+0x79cc>
   189f8:	ldr	x1, [sp, #72]
   189fc:	ldr	x0, [sp, #40]
   18a00:	bl	1a1a4 <plugin_init@@Base+0x9164>
   18a04:	mov	w19, w0
   18a08:	nop
   18a0c:	add	x0, sp, #0x38
   18a10:	bl	1a314 <plugin_init@@Base+0x92d4>
   18a14:	add	x0, sp, #0x40
   18a18:	bl	1a150 <plugin_init@@Base+0x9110>
   18a1c:	mov	w0, w19
   18a20:	b	18a40 <plugin_init@@Base+0x7a00>
   18a24:	mov	x19, x0
   18a28:	add	x0, sp, #0x38
   18a2c:	bl	1a314 <plugin_init@@Base+0x92d4>
   18a30:	add	x0, sp, #0x40
   18a34:	bl	1a150 <plugin_init@@Base+0x9110>
   18a38:	mov	x0, x19
   18a3c:	bl	6c60 <_Unwind_Resume@plt>
   18a40:	ldr	x19, [sp, #16]
   18a44:	ldp	x29, x30, [sp], #80
   18a48:	ret
   18a4c:	stp	x29, x30, [sp, #-112]!
   18a50:	mov	x29, sp
   18a54:	stp	x19, x20, [sp, #16]
   18a58:	stp	x21, x22, [sp, #32]
   18a5c:	str	x0, [sp, #56]
   18a60:	add	x0, sp, #0x60
   18a64:	bl	1a13c <plugin_init@@Base+0x90fc>
   18a68:	add	x0, sp, #0x58
   18a6c:	bl	122a0 <plugin_init@@Base+0x1260>
   18a70:	add	x0, sp, #0x50
   18a74:	bl	1a368 <plugin_init@@Base+0x9328>
   18a78:	add	x0, sp, #0x48
   18a7c:	bl	122a0 <plugin_init@@Base+0x1260>
   18a80:	add	x0, sp, #0x40
   18a84:	bl	1a230 <plugin_init@@Base+0x91f0>
   18a88:	mov	x1, #0x5                   	// #5
   18a8c:	ldr	x0, [sp, #56]
   18a90:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   18a94:	cmp	w0, #0x0
   18a98:	cset	w0, eq  // eq = none
   18a9c:	and	w0, w0, #0xff
   18aa0:	cmp	w0, #0x0
   18aa4:	b.eq	18ab0 <plugin_init@@Base+0x7a70>  // b.none
   18aa8:	mov	w19, #0x0                   	// #0
   18aac:	b	18c0c <plugin_init@@Base+0x7bcc>
   18ab0:	add	x0, sp, #0x60
   18ab4:	ldr	x1, [sp, #56]
   18ab8:	bl	1a164 <plugin_init@@Base+0x9124>
   18abc:	cmp	w0, #0x0
   18ac0:	cset	w0, eq  // eq = none
   18ac4:	and	w0, w0, #0xff
   18ac8:	cmp	w0, #0x0
   18acc:	b.eq	18ad8 <plugin_init@@Base+0x7a98>  // b.none
   18ad0:	mov	w19, #0x0                   	// #0
   18ad4:	b	18c0c <plugin_init@@Base+0x7bcc>
   18ad8:	add	x0, sp, #0x58
   18adc:	ldr	x1, [sp, #56]
   18ae0:	bl	12308 <plugin_init@@Base+0x12c8>
   18ae4:	cmp	w0, #0x0
   18ae8:	cset	w0, eq  // eq = none
   18aec:	and	w0, w0, #0xff
   18af0:	cmp	w0, #0x0
   18af4:	b.eq	18b00 <plugin_init@@Base+0x7ac0>  // b.none
   18af8:	mov	w19, #0x0                   	// #0
   18afc:	b	18c0c <plugin_init@@Base+0x7bcc>
   18b00:	add	x0, sp, #0x50
   18b04:	ldr	x1, [sp, #56]
   18b08:	bl	1a390 <plugin_init@@Base+0x9350>
   18b0c:	cmp	w0, #0x0
   18b10:	cset	w0, eq  // eq = none
   18b14:	and	w0, w0, #0xff
   18b18:	cmp	w0, #0x0
   18b1c:	b.eq	18b28 <plugin_init@@Base+0x7ae8>  // b.none
   18b20:	mov	w19, #0x0                   	// #0
   18b24:	b	18c0c <plugin_init@@Base+0x7bcc>
   18b28:	add	x0, sp, #0x48
   18b2c:	ldr	x1, [sp, #56]
   18b30:	bl	12308 <plugin_init@@Base+0x12c8>
   18b34:	cmp	w0, #0x0
   18b38:	cset	w0, eq  // eq = none
   18b3c:	and	w0, w0, #0xff
   18b40:	cmp	w0, #0x0
   18b44:	b.eq	18b50 <plugin_init@@Base+0x7b10>  // b.none
   18b48:	mov	w19, #0x0                   	// #0
   18b4c:	b	18c0c <plugin_init@@Base+0x7bcc>
   18b50:	add	x0, sp, #0x40
   18b54:	ldr	x1, [sp, #56]
   18b58:	bl	1a258 <plugin_init@@Base+0x9218>
   18b5c:	cmp	w0, #0x0
   18b60:	cset	w0, eq  // eq = none
   18b64:	and	w0, w0, #0xff
   18b68:	cmp	w0, #0x0
   18b6c:	b.eq	18b78 <plugin_init@@Base+0x7b38>  // b.none
   18b70:	mov	w19, #0x0                   	// #0
   18b74:	b	18c0c <plugin_init@@Base+0x7bcc>
   18b78:	add	x0, sp, #0x60
   18b7c:	bl	1a18c <plugin_init@@Base+0x914c>
   18b80:	mov	x19, x0
   18b84:	add	x0, sp, #0x58
   18b88:	bl	122f0 <plugin_init@@Base+0x12b0>
   18b8c:	mov	x20, x0
   18b90:	add	x0, sp, #0x50
   18b94:	bl	1a3b8 <plugin_init@@Base+0x9378>
   18b98:	mov	x21, x0
   18b9c:	add	x0, sp, #0x48
   18ba0:	bl	122f0 <plugin_init@@Base+0x12b0>
   18ba4:	mov	x22, x0
   18ba8:	add	x0, sp, #0x40
   18bac:	bl	1a280 <plugin_init@@Base+0x9240>
   18bb0:	mov	w5, w0
   18bb4:	mov	x4, x22
   18bb8:	mov	x3, x21
   18bbc:	mov	x2, x20
   18bc0:	mov	x1, x19
   18bc4:	ldr	x0, [sp, #56]
   18bc8:	bl	10e08 <_Z19decl_assembler_nameP9tree_node@plt+0xa0a8>
   18bcc:	str	w0, [sp, #108]
   18bd0:	mov	w1, #0x52                  	// #82
   18bd4:	ldr	x0, [sp, #56]
   18bd8:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   18bdc:	cmp	w0, #0x0
   18be0:	cset	w0, eq  // eq = none
   18be4:	and	w0, w0, #0xff
   18be8:	cmp	w0, #0x0
   18bec:	b.eq	18bf8 <plugin_init@@Base+0x7bb8>  // b.none
   18bf0:	mov	w19, #0x0                   	// #0
   18bf4:	b	18c0c <plugin_init@@Base+0x7bcc>
   18bf8:	ldr	w1, [sp, #108]
   18bfc:	ldr	x0, [sp, #56]
   18c00:	bl	19a64 <plugin_init@@Base+0x8a24>
   18c04:	mov	w19, w0
   18c08:	nop
   18c0c:	add	x0, sp, #0x40
   18c10:	bl	1a244 <plugin_init@@Base+0x9204>
   18c14:	add	x0, sp, #0x48
   18c18:	bl	122bc <plugin_init@@Base+0x127c>
   18c1c:	add	x0, sp, #0x50
   18c20:	bl	1a37c <plugin_init@@Base+0x933c>
   18c24:	add	x0, sp, #0x58
   18c28:	bl	122bc <plugin_init@@Base+0x127c>
   18c2c:	add	x0, sp, #0x60
   18c30:	bl	1a150 <plugin_init@@Base+0x9110>
   18c34:	mov	w0, w19
   18c38:	b	18c70 <plugin_init@@Base+0x7c30>
   18c3c:	mov	x19, x0
   18c40:	add	x0, sp, #0x40
   18c44:	bl	1a244 <plugin_init@@Base+0x9204>
   18c48:	add	x0, sp, #0x48
   18c4c:	bl	122bc <plugin_init@@Base+0x127c>
   18c50:	add	x0, sp, #0x50
   18c54:	bl	1a37c <plugin_init@@Base+0x933c>
   18c58:	add	x0, sp, #0x58
   18c5c:	bl	122bc <plugin_init@@Base+0x127c>
   18c60:	add	x0, sp, #0x60
   18c64:	bl	1a150 <plugin_init@@Base+0x9110>
   18c68:	mov	x0, x19
   18c6c:	bl	6c60 <_Unwind_Resume@plt>
   18c70:	ldp	x19, x20, [sp, #16]
   18c74:	ldp	x21, x22, [sp, #32]
   18c78:	ldp	x29, x30, [sp], #112
   18c7c:	ret
   18c80:	stp	x29, x30, [sp, #-64]!
   18c84:	mov	x29, sp
   18c88:	str	x19, [sp, #16]
   18c8c:	str	x0, [sp, #40]
   18c90:	add	x0, sp, #0x30
   18c94:	bl	122a0 <plugin_init@@Base+0x1260>
   18c98:	mov	x1, #0x1                   	// #1
   18c9c:	ldr	x0, [sp, #40]
   18ca0:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   18ca4:	cmp	w0, #0x0
   18ca8:	cset	w0, eq  // eq = none
   18cac:	and	w0, w0, #0xff
   18cb0:	cmp	w0, #0x0
   18cb4:	b.eq	18cc0 <plugin_init@@Base+0x7c80>  // b.none
   18cb8:	mov	w19, #0x0                   	// #0
   18cbc:	b	18d3c <plugin_init@@Base+0x7cfc>
   18cc0:	add	x0, sp, #0x30
   18cc4:	ldr	x1, [sp, #40]
   18cc8:	bl	12308 <plugin_init@@Base+0x12c8>
   18ccc:	cmp	w0, #0x0
   18cd0:	cset	w0, eq  // eq = none
   18cd4:	and	w0, w0, #0xff
   18cd8:	cmp	w0, #0x0
   18cdc:	b.eq	18ce8 <plugin_init@@Base+0x7ca8>  // b.none
   18ce0:	mov	w19, #0x0                   	// #0
   18ce4:	b	18d3c <plugin_init@@Base+0x7cfc>
   18ce8:	add	x0, sp, #0x30
   18cec:	bl	122f0 <plugin_init@@Base+0x12b0>
   18cf0:	mov	x1, x0
   18cf4:	ldr	x0, [sp, #40]
   18cf8:	bl	10f0c <_Z19decl_assembler_nameP9tree_node@plt+0xa1ac>
   18cfc:	str	x0, [sp, #56]
   18d00:	mov	w1, #0x52                  	// #82
   18d04:	ldr	x0, [sp, #40]
   18d08:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   18d0c:	cmp	w0, #0x0
   18d10:	cset	w0, eq  // eq = none
   18d14:	and	w0, w0, #0xff
   18d18:	cmp	w0, #0x0
   18d1c:	b.eq	18d28 <plugin_init@@Base+0x7ce8>  // b.none
   18d20:	mov	w19, #0x0                   	// #0
   18d24:	b	18d3c <plugin_init@@Base+0x7cfc>
   18d28:	ldr	x1, [sp, #56]
   18d2c:	ldr	x0, [sp, #40]
   18d30:	bl	1a1a4 <plugin_init@@Base+0x9164>
   18d34:	mov	w19, w0
   18d38:	nop
   18d3c:	add	x0, sp, #0x30
   18d40:	bl	122bc <plugin_init@@Base+0x127c>
   18d44:	mov	w0, w19
   18d48:	b	18d60 <plugin_init@@Base+0x7d20>
   18d4c:	mov	x19, x0
   18d50:	add	x0, sp, #0x30
   18d54:	bl	122bc <plugin_init@@Base+0x127c>
   18d58:	mov	x0, x19
   18d5c:	bl	6c60 <_Unwind_Resume@plt>
   18d60:	ldr	x19, [sp, #16]
   18d64:	ldp	x29, x30, [sp], #64
   18d68:	ret
   18d6c:	stp	x29, x30, [sp, #-112]!
   18d70:	mov	x29, sp
   18d74:	stp	x19, x20, [sp, #16]
   18d78:	str	x21, [sp, #32]
   18d7c:	str	x0, [sp, #56]
   18d80:	add	x0, sp, #0x60
   18d84:	bl	1a13c <plugin_init@@Base+0x90fc>
   18d88:	add	x0, sp, #0x58
   18d8c:	bl	122a0 <plugin_init@@Base+0x1260>
   18d90:	add	x0, sp, #0x50
   18d94:	bl	122a0 <plugin_init@@Base+0x1260>
   18d98:	add	x0, sp, #0x48
   18d9c:	bl	1a230 <plugin_init@@Base+0x91f0>
   18da0:	mov	x1, #0x4                   	// #4
   18da4:	ldr	x0, [sp, #56]
   18da8:	bl	1bfe0 <plugin_init@@Base+0xafa0>
   18dac:	cmp	w0, #0x0
   18db0:	cset	w0, eq  // eq = none
   18db4:	and	w0, w0, #0xff
   18db8:	cmp	w0, #0x0
   18dbc:	b.eq	18dc8 <plugin_init@@Base+0x7d88>  // b.none
   18dc0:	mov	w19, #0x0                   	// #0
   18dc4:	b	18eec <plugin_init@@Base+0x7eac>
   18dc8:	add	x0, sp, #0x60
   18dcc:	ldr	x1, [sp, #56]
   18dd0:	bl	1a164 <plugin_init@@Base+0x9124>
   18dd4:	cmp	w0, #0x0
   18dd8:	cset	w0, eq  // eq = none
   18ddc:	and	w0, w0, #0xff
   18de0:	cmp	w0, #0x0
   18de4:	b.eq	18df0 <plugin_init@@Base+0x7db0>  // b.none
   18de8:	mov	w19, #0x0                   	// #0
   18dec:	b	18eec <plugin_init@@Base+0x7eac>
   18df0:	add	x0, sp, #0x58
   18df4:	ldr	x1, [sp, #56]
   18df8:	bl	12308 <plugin_init@@Base+0x12c8>
   18dfc:	cmp	w0, #0x0
   18e00:	cset	w0, eq  // eq = none
   18e04:	and	w0, w0, #0xff
   18e08:	cmp	w0, #0x0
   18e0c:	b.eq	18e18 <plugin_init@@Base+0x7dd8>  // b.none
   18e10:	mov	w19, #0x0                   	// #0
   18e14:	b	18eec <plugin_init@@Base+0x7eac>
   18e18:	add	x0, sp, #0x50
   18e1c:	ldr	x1, [sp, #56]
   18e20:	bl	12308 <plugin_init@@Base+0x12c8>
   18e24:	cmp	w0, #0x0
   18e28:	cset	w0, eq  // eq = none
   18e2c:	and	w0, w0, #0xff
   18e30:	cmp	w0, #0x0
   18e34:	b.eq	18e40 <plugin_init@@Base+0x7e00>  // b.none
   18e38:	mov	w19, #0x0                   	// #0
   18e3c:	b	18eec <plugin_init@@Base+0x7eac>
   18e40:	add	x0, sp, #0x48
   18e44:	ldr	x1, [sp, #56]
   18e48:	bl	1a258 <plugin_init@@Base+0x9218>
   18e4c:	cmp	w0, #0x0
   18e50:	cset	w0, eq  // eq = none
   18e54:	and	w0, w0, #0xff
   18e58:	cmp	w0, #0x0
   18e5c:	b.eq	18e68 <plugin_init@@Base+0x7e28>  // b.none
   18e60:	mov	w19, #0x0                   	// #0
   18e64:	b	18eec <plugin_init@@Base+0x7eac>
   18e68:	add	x0, sp, #0x60
   18e6c:	bl	1a18c <plugin_init@@Base+0x914c>
   18e70:	mov	x19, x0
   18e74:	add	x0, sp, #0x58
   18e78:	bl	122f0 <plugin_init@@Base+0x12b0>
   18e7c:	mov	x20, x0
   18e80:	add	x0, sp, #0x50
   18e84:	bl	122f0 <plugin_init@@Base+0x12b0>
   18e88:	mov	x21, x0
   18e8c:	add	x0, sp, #0x48
   18e90:	bl	1a280 <plugin_init@@Base+0x9240>
   18e94:	mov	w4, w0
   18e98:	mov	x3, x21
   18e9c:	mov	x2, x20
   18ea0:	mov	x1, x19
   18ea4:	ldr	x0, [sp, #56]
   18ea8:	bl	10f44 <_Z19decl_assembler_nameP9tree_node@plt+0xa1e4>
   18eac:	str	w0, [sp, #108]
   18eb0:	mov	w1, #0x52                  	// #82
   18eb4:	ldr	x0, [sp, #56]
   18eb8:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   18ebc:	cmp	w0, #0x0
   18ec0:	cset	w0, eq  // eq = none
   18ec4:	and	w0, w0, #0xff
   18ec8:	cmp	w0, #0x0
   18ecc:	b.eq	18ed8 <plugin_init@@Base+0x7e98>  // b.none
   18ed0:	mov	w19, #0x0                   	// #0
   18ed4:	b	18eec <plugin_init@@Base+0x7eac>
   18ed8:	ldr	w1, [sp, #108]
   18edc:	ldr	x0, [sp, #56]
   18ee0:	bl	19a64 <plugin_init@@Base+0x8a24>
   18ee4:	mov	w19, w0
   18ee8:	nop
   18eec:	add	x0, sp, #0x48
   18ef0:	bl	1a244 <plugin_init@@Base+0x9204>
   18ef4:	add	x0, sp, #0x50
   18ef8:	bl	122bc <plugin_init@@Base+0x127c>
   18efc:	add	x0, sp, #0x58
   18f00:	bl	122bc <plugin_init@@Base+0x127c>
   18f04:	add	x0, sp, #0x60
   18f08:	bl	1a150 <plugin_init@@Base+0x9110>
   18f0c:	mov	w0, w19
   18f10:	b	18f40 <plugin_init@@Base+0x7f00>
   18f14:	mov	x19, x0
   18f18:	add	x0, sp, #0x48
   18f1c:	bl	1a244 <plugin_init@@Base+0x9204>
   18f20:	add	x0, sp, #0x50
   18f24:	bl	122bc <plugin_init@@Base+0x127c>
   18f28:	add	x0, sp, #0x58
   18f2c:	bl	122bc <plugin_init@@Base+0x127c>
   18f30:	add	x0, sp, #0x60
   18f34:	bl	1a150 <plugin_init@@Base+0x9110>
   18f38:	mov	x0, x19
   18f3c:	bl	6c60 <_Unwind_Resume@plt>
   18f40:	ldp	x19, x20, [sp, #16]
   18f44:	ldr	x21, [sp, #32]
   18f48:	ldp	x29, x30, [sp], #112
   18f4c:	ret
   18f50:	sub	sp, sp, #0x10
   18f54:	str	x0, [sp, #8]
   18f58:	mov	w0, #0x0                   	// #0
   18f5c:	add	sp, sp, #0x10
   18f60:	ret
   18f64:	stp	x29, x30, [sp, #-80]!
   18f68:	mov	x29, sp
   18f6c:	str	x0, [sp, #40]
   18f70:	str	x1, [sp, #32]
   18f74:	str	w2, [sp, #28]
   18f78:	str	w3, [sp, #24]
   18f7c:	ldr	w0, [sp, #24]
   18f80:	cmp	w0, #0x1
   18f84:	b.ne	18fb8 <plugin_init@@Base+0x7f78>  // b.any
   18f88:	ldr	x0, [sp, #40]
   18f8c:	ldr	x1, [x0, #8]
   18f90:	mov	x0, x1
   18f94:	lsl	x0, x0, #1
   18f98:	add	x1, x0, x1
   18f9c:	ldr	x0, [sp, #40]
   18fa0:	ldr	x0, [x0, #16]
   18fa4:	lsl	x0, x0, #2
   18fa8:	cmp	x1, x0
   18fac:	b.hi	18fb8 <plugin_init@@Base+0x7f78>  // b.pmore
   18fb0:	ldr	x0, [sp, #40]
   18fb4:	bl	1a438 <plugin_init@@Base+0x93f8>
   18fb8:	ldr	x0, [sp, #40]
   18fbc:	ldr	w0, [x0, #32]
   18fc0:	add	w1, w0, #0x1
   18fc4:	ldr	x0, [sp, #40]
   18fc8:	str	w1, [x0, #32]
   18fcc:	str	xzr, [sp, #72]
   18fd0:	ldr	x0, [sp, #40]
   18fd4:	ldr	w0, [x0, #40]
   18fd8:	mov	w1, w0
   18fdc:	ldr	w0, [sp, #28]
   18fe0:	bl	12098 <plugin_init@@Base+0x1058>
   18fe4:	str	w0, [sp, #68]
   18fe8:	ldr	x0, [sp, #40]
   18fec:	ldr	w0, [x0, #40]
   18ff0:	mov	w1, w0
   18ff4:	ldr	w0, [sp, #28]
   18ff8:	bl	120ec <plugin_init@@Base+0x10ac>
   18ffc:	str	w0, [sp, #64]
   19000:	ldr	x0, [sp, #40]
   19004:	ldr	x1, [x0]
   19008:	ldr	w0, [sp, #68]
   1900c:	lsl	x0, x0, #3
   19010:	add	x0, x1, x0
   19014:	str	x0, [sp, #56]
   19018:	ldr	x0, [sp, #40]
   1901c:	ldr	x0, [x0, #8]
   19020:	str	x0, [sp, #48]
   19024:	ldr	x0, [sp, #56]
   19028:	bl	196a8 <plugin_init@@Base+0x8668>
   1902c:	and	w0, w0, #0xff
   19030:	cmp	w0, #0x0
   19034:	b.ne	19178 <plugin_init@@Base+0x8138>  // b.any
   19038:	ldr	x0, [sp, #56]
   1903c:	bl	196cc <plugin_init@@Base+0x868c>
   19040:	and	w0, w0, #0xff
   19044:	cmp	w0, #0x0
   19048:	b.eq	19068 <plugin_init@@Base+0x8028>  // b.none
   1904c:	ldr	x0, [sp, #40]
   19050:	ldr	x1, [x0]
   19054:	ldr	w0, [sp, #68]
   19058:	lsl	x0, x0, #3
   1905c:	add	x0, x1, x0
   19060:	str	x0, [sp, #72]
   19064:	b	19098 <plugin_init@@Base+0x8058>
   19068:	ldr	x1, [sp, #32]
   1906c:	ldr	x0, [sp, #56]
   19070:	bl	1a644 <plugin_init@@Base+0x9604>
   19074:	and	w0, w0, #0xff
   19078:	cmp	w0, #0x0
   1907c:	b.eq	19098 <plugin_init@@Base+0x8058>  // b.none
   19080:	ldr	x0, [sp, #40]
   19084:	ldr	x1, [x0]
   19088:	ldr	w0, [sp, #68]
   1908c:	lsl	x0, x0, #3
   19090:	add	x0, x1, x0
   19094:	b	191f0 <plugin_init@@Base+0x81b0>
   19098:	ldr	x0, [sp, #40]
   1909c:	ldr	w0, [x0, #36]
   190a0:	add	w1, w0, #0x1
   190a4:	ldr	x0, [sp, #40]
   190a8:	str	w1, [x0, #36]
   190ac:	ldr	w1, [sp, #68]
   190b0:	ldr	w0, [sp, #64]
   190b4:	add	w0, w1, w0
   190b8:	str	w0, [sp, #68]
   190bc:	ldr	w0, [sp, #68]
   190c0:	ldr	x1, [sp, #48]
   190c4:	cmp	x1, x0
   190c8:	b.hi	190e0 <plugin_init@@Base+0x80a0>  // b.pmore
   190cc:	ldr	x0, [sp, #48]
   190d0:	mov	w1, w0
   190d4:	ldr	w0, [sp, #68]
   190d8:	sub	w0, w0, w1
   190dc:	str	w0, [sp, #68]
   190e0:	ldr	x0, [sp, #40]
   190e4:	ldr	x1, [x0]
   190e8:	ldr	w0, [sp, #68]
   190ec:	lsl	x0, x0, #3
   190f0:	add	x0, x1, x0
   190f4:	str	x0, [sp, #56]
   190f8:	ldr	x0, [sp, #56]
   190fc:	bl	196a8 <plugin_init@@Base+0x8668>
   19100:	and	w0, w0, #0xff
   19104:	cmp	w0, #0x0
   19108:	b.ne	19180 <plugin_init@@Base+0x8140>  // b.any
   1910c:	ldr	x0, [sp, #56]
   19110:	bl	196cc <plugin_init@@Base+0x868c>
   19114:	and	w0, w0, #0xff
   19118:	cmp	w0, #0x0
   1911c:	b.eq	19148 <plugin_init@@Base+0x8108>  // b.none
   19120:	ldr	x0, [sp, #72]
   19124:	cmp	x0, #0x0
   19128:	b.ne	19098 <plugin_init@@Base+0x8058>  // b.any
   1912c:	ldr	x0, [sp, #40]
   19130:	ldr	x1, [x0]
   19134:	ldr	w0, [sp, #68]
   19138:	lsl	x0, x0, #3
   1913c:	add	x0, x1, x0
   19140:	str	x0, [sp, #72]
   19144:	b	19098 <plugin_init@@Base+0x8058>
   19148:	ldr	x1, [sp, #32]
   1914c:	ldr	x0, [sp, #56]
   19150:	bl	1a644 <plugin_init@@Base+0x9604>
   19154:	and	w0, w0, #0xff
   19158:	cmp	w0, #0x0
   1915c:	b.eq	19098 <plugin_init@@Base+0x8058>  // b.none
   19160:	ldr	x0, [sp, #40]
   19164:	ldr	x1, [x0]
   19168:	ldr	w0, [sp, #68]
   1916c:	lsl	x0, x0, #3
   19170:	add	x0, x1, x0
   19174:	b	191f0 <plugin_init@@Base+0x81b0>
   19178:	nop
   1917c:	b	19184 <plugin_init@@Base+0x8144>
   19180:	nop
   19184:	ldr	w0, [sp, #24]
   19188:	cmp	w0, #0x0
   1918c:	b.ne	19198 <plugin_init@@Base+0x8158>  // b.any
   19190:	mov	x0, #0x0                   	// #0
   19194:	b	191f0 <plugin_init@@Base+0x81b0>
   19198:	ldr	x0, [sp, #72]
   1919c:	cmp	x0, #0x0
   191a0:	b.eq	191c8 <plugin_init@@Base+0x8188>  // b.none
   191a4:	ldr	x0, [sp, #40]
   191a8:	ldr	x0, [x0, #24]
   191ac:	sub	x1, x0, #0x1
   191b0:	ldr	x0, [sp, #40]
   191b4:	str	x1, [x0, #24]
   191b8:	ldr	x0, [sp, #72]
   191bc:	bl	1a674 <plugin_init@@Base+0x9634>
   191c0:	ldr	x0, [sp, #72]
   191c4:	b	191f0 <plugin_init@@Base+0x81b0>
   191c8:	ldr	x0, [sp, #40]
   191cc:	ldr	x0, [x0, #16]
   191d0:	add	x1, x0, #0x1
   191d4:	ldr	x0, [sp, #40]
   191d8:	str	x1, [x0, #16]
   191dc:	ldr	x0, [sp, #40]
   191e0:	ldr	x1, [x0]
   191e4:	ldr	w0, [sp, #68]
   191e8:	lsl	x0, x0, #3
   191ec:	add	x0, x1, x0
   191f0:	ldp	x29, x30, [sp], #80
   191f4:	ret
   191f8:	sub	sp, sp, #0x10
   191fc:	str	x0, [sp, #8]
   19200:	ldr	x0, [sp, #8]
   19204:	ldr	x0, [x0]
   19208:	asr	x0, x0, #3
   1920c:	add	sp, sp, #0x10
   19210:	ret
   19214:	stp	x29, x30, [sp, #-80]!
   19218:	mov	x29, sp
   1921c:	str	x0, [sp, #40]
   19220:	str	x1, [sp, #32]
   19224:	str	w2, [sp, #28]
   19228:	str	w3, [sp, #24]
   1922c:	ldr	w0, [sp, #24]
   19230:	cmp	w0, #0x1
   19234:	b.ne	19268 <plugin_init@@Base+0x8228>  // b.any
   19238:	ldr	x0, [sp, #40]
   1923c:	ldr	x1, [x0, #8]
   19240:	mov	x0, x1
   19244:	lsl	x0, x0, #1
   19248:	add	x1, x0, x1
   1924c:	ldr	x0, [sp, #40]
   19250:	ldr	x0, [x0, #16]
   19254:	lsl	x0, x0, #2
   19258:	cmp	x1, x0
   1925c:	b.hi	19268 <plugin_init@@Base+0x8228>  // b.pmore
   19260:	ldr	x0, [sp, #40]
   19264:	bl	1a694 <plugin_init@@Base+0x9654>
   19268:	ldr	x0, [sp, #40]
   1926c:	ldr	w0, [x0, #32]
   19270:	add	w1, w0, #0x1
   19274:	ldr	x0, [sp, #40]
   19278:	str	w1, [x0, #32]
   1927c:	str	xzr, [sp, #72]
   19280:	ldr	x0, [sp, #40]
   19284:	ldr	w0, [x0, #40]
   19288:	mov	w1, w0
   1928c:	ldr	w0, [sp, #28]
   19290:	bl	12098 <plugin_init@@Base+0x1058>
   19294:	str	w0, [sp, #68]
   19298:	ldr	x0, [sp, #40]
   1929c:	ldr	w0, [x0, #40]
   192a0:	mov	w1, w0
   192a4:	ldr	w0, [sp, #28]
   192a8:	bl	120ec <plugin_init@@Base+0x10ac>
   192ac:	str	w0, [sp, #64]
   192b0:	ldr	x0, [sp, #40]
   192b4:	ldr	x1, [x0]
   192b8:	ldr	w0, [sp, #68]
   192bc:	lsl	x0, x0, #3
   192c0:	add	x0, x1, x0
   192c4:	str	x0, [sp, #56]
   192c8:	ldr	x0, [sp, #40]
   192cc:	ldr	x0, [x0, #8]
   192d0:	str	x0, [sp, #48]
   192d4:	ldr	x0, [sp, #56]
   192d8:	bl	197d0 <plugin_init@@Base+0x8790>
   192dc:	and	w0, w0, #0xff
   192e0:	cmp	w0, #0x0
   192e4:	b.ne	19448 <plugin_init@@Base+0x8408>  // b.any
   192e8:	ldr	x0, [sp, #56]
   192ec:	bl	197f4 <plugin_init@@Base+0x87b4>
   192f0:	and	w0, w0, #0xff
   192f4:	cmp	w0, #0x0
   192f8:	b.eq	19318 <plugin_init@@Base+0x82d8>  // b.none
   192fc:	ldr	x0, [sp, #40]
   19300:	ldr	x1, [x0]
   19304:	ldr	w0, [sp, #68]
   19308:	lsl	x0, x0, #3
   1930c:	add	x0, x1, x0
   19310:	str	x0, [sp, #72]
   19314:	b	19358 <plugin_init@@Base+0x8318>
   19318:	ldr	x0, [sp, #56]
   1931c:	ldr	x2, [x0]
   19320:	ldr	x0, [sp, #32]
   19324:	ldr	x0, [x0]
   19328:	mov	x1, x0
   1932c:	mov	x0, x2
   19330:	bl	126e0 <plugin_init@@Base+0x16a0>
   19334:	and	w0, w0, #0xff
   19338:	cmp	w0, #0x0
   1933c:	b.eq	19358 <plugin_init@@Base+0x8318>  // b.none
   19340:	ldr	x0, [sp, #40]
   19344:	ldr	x1, [x0]
   19348:	ldr	w0, [sp, #68]
   1934c:	lsl	x0, x0, #3
   19350:	add	x0, x1, x0
   19354:	b	194c0 <plugin_init@@Base+0x8480>
   19358:	ldr	x0, [sp, #40]
   1935c:	ldr	w0, [x0, #36]
   19360:	add	w1, w0, #0x1
   19364:	ldr	x0, [sp, #40]
   19368:	str	w1, [x0, #36]
   1936c:	ldr	w1, [sp, #68]
   19370:	ldr	w0, [sp, #64]
   19374:	add	w0, w1, w0
   19378:	str	w0, [sp, #68]
   1937c:	ldr	w0, [sp, #68]
   19380:	ldr	x1, [sp, #48]
   19384:	cmp	x1, x0
   19388:	b.hi	193a0 <plugin_init@@Base+0x8360>  // b.pmore
   1938c:	ldr	x0, [sp, #48]
   19390:	mov	w1, w0
   19394:	ldr	w0, [sp, #68]
   19398:	sub	w0, w0, w1
   1939c:	str	w0, [sp, #68]
   193a0:	ldr	x0, [sp, #40]
   193a4:	ldr	x1, [x0]
   193a8:	ldr	w0, [sp, #68]
   193ac:	lsl	x0, x0, #3
   193b0:	add	x0, x1, x0
   193b4:	str	x0, [sp, #56]
   193b8:	ldr	x0, [sp, #56]
   193bc:	bl	197d0 <plugin_init@@Base+0x8790>
   193c0:	and	w0, w0, #0xff
   193c4:	cmp	w0, #0x0
   193c8:	b.ne	19450 <plugin_init@@Base+0x8410>  // b.any
   193cc:	ldr	x0, [sp, #56]
   193d0:	bl	197f4 <plugin_init@@Base+0x87b4>
   193d4:	and	w0, w0, #0xff
   193d8:	cmp	w0, #0x0
   193dc:	b.eq	19408 <plugin_init@@Base+0x83c8>  // b.none
   193e0:	ldr	x0, [sp, #72]
   193e4:	cmp	x0, #0x0
   193e8:	b.ne	19358 <plugin_init@@Base+0x8318>  // b.any
   193ec:	ldr	x0, [sp, #40]
   193f0:	ldr	x1, [x0]
   193f4:	ldr	w0, [sp, #68]
   193f8:	lsl	x0, x0, #3
   193fc:	add	x0, x1, x0
   19400:	str	x0, [sp, #72]
   19404:	b	19358 <plugin_init@@Base+0x8318>
   19408:	ldr	x0, [sp, #56]
   1940c:	ldr	x2, [x0]
   19410:	ldr	x0, [sp, #32]
   19414:	ldr	x0, [x0]
   19418:	mov	x1, x0
   1941c:	mov	x0, x2
   19420:	bl	126e0 <plugin_init@@Base+0x16a0>
   19424:	and	w0, w0, #0xff
   19428:	cmp	w0, #0x0
   1942c:	b.eq	19358 <plugin_init@@Base+0x8318>  // b.none
   19430:	ldr	x0, [sp, #40]
   19434:	ldr	x1, [x0]
   19438:	ldr	w0, [sp, #68]
   1943c:	lsl	x0, x0, #3
   19440:	add	x0, x1, x0
   19444:	b	194c0 <plugin_init@@Base+0x8480>
   19448:	nop
   1944c:	b	19454 <plugin_init@@Base+0x8414>
   19450:	nop
   19454:	ldr	w0, [sp, #24]
   19458:	cmp	w0, #0x0
   1945c:	b.ne	19468 <plugin_init@@Base+0x8428>  // b.any
   19460:	mov	x0, #0x0                   	// #0
   19464:	b	194c0 <plugin_init@@Base+0x8480>
   19468:	ldr	x0, [sp, #72]
   1946c:	cmp	x0, #0x0
   19470:	b.eq	19498 <plugin_init@@Base+0x8458>  // b.none
   19474:	ldr	x0, [sp, #40]
   19478:	ldr	x0, [x0, #24]
   1947c:	sub	x1, x0, #0x1
   19480:	ldr	x0, [sp, #40]
   19484:	str	x1, [x0, #24]
   19488:	ldr	x0, [sp, #72]
   1948c:	bl	1a8a4 <plugin_init@@Base+0x9864>
   19490:	ldr	x0, [sp, #72]
   19494:	b	194c0 <plugin_init@@Base+0x8480>
   19498:	ldr	x0, [sp, #40]
   1949c:	ldr	x0, [x0, #16]
   194a0:	add	x1, x0, #0x1
   194a4:	ldr	x0, [sp, #40]
   194a8:	str	x1, [x0, #16]
   194ac:	ldr	x0, [sp, #40]
   194b0:	ldr	x1, [x0]
   194b4:	ldr	w0, [sp, #68]
   194b8:	lsl	x0, x0, #3
   194bc:	add	x0, x1, x0
   194c0:	ldp	x29, x30, [sp], #80
   194c4:	ret
   194c8:	stp	x29, x30, [sp, #-48]!
   194cc:	mov	x29, sp
   194d0:	str	x0, [sp, #24]
   194d4:	str	x1, [sp, #16]
   194d8:	ldr	x0, [sp, #24]
   194dc:	ldrb	w0, [x0, #44]
   194e0:	eor	w0, w0, #0x1
   194e4:	and	w0, w0, #0xff
   194e8:	cmp	w0, #0x0
   194ec:	b.eq	19500 <plugin_init@@Base+0x84c0>  // b.none
   194f0:	ldr	x0, [sp, #16]
   194f4:	bl	1a8c4 <plugin_init@@Base+0x9884>
   194f8:	str	x0, [sp, #40]
   194fc:	b	1950c <plugin_init@@Base+0x84cc>
   19500:	ldr	x0, [sp, #16]
   19504:	bl	1a8e4 <plugin_init@@Base+0x98a4>
   19508:	str	x0, [sp, #40]
   1950c:	ldr	x0, [sp, #40]
   19510:	cmp	x0, #0x0
   19514:	b.ne	19530 <plugin_init@@Base+0x84f0>  // b.any
   19518:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   1951c:	add	x2, x0, #0x188
   19520:	mov	w1, #0x2b5                 	// #693
   19524:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   19528:	add	x0, x0, #0x198
   1952c:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
   19530:	str	xzr, [sp, #32]
   19534:	ldr	x1, [sp, #32]
   19538:	ldr	x0, [sp, #16]
   1953c:	cmp	x1, x0
   19540:	b.cs	19568 <plugin_init@@Base+0x8528>  // b.hs, b.nlast
   19544:	ldr	x0, [sp, #32]
   19548:	lsl	x0, x0, #3
   1954c:	ldr	x1, [sp, #40]
   19550:	add	x0, x1, x0
   19554:	bl	1a948 <plugin_init@@Base+0x9908>
   19558:	ldr	x0, [sp, #32]
   1955c:	add	x0, x0, #0x1
   19560:	str	x0, [sp, #32]
   19564:	b	19534 <plugin_init@@Base+0x84f4>
   19568:	ldr	x0, [sp, #40]
   1956c:	ldp	x29, x30, [sp], #48
   19570:	ret
   19574:	stp	x29, x30, [sp, #-32]!
   19578:	mov	x29, sp
   1957c:	str	x0, [sp, #24]
   19580:	ldr	x0, [sp, #24]
   19584:	ldr	x0, [x0]
   19588:	bl	1a968 <plugin_init@@Base+0x9928>
   1958c:	and	w0, w0, #0xff
   19590:	ldp	x29, x30, [sp], #32
   19594:	ret
   19598:	stp	x29, x30, [sp, #-32]!
   1959c:	mov	x29, sp
   195a0:	str	x0, [sp, #24]
   195a4:	ldr	x0, [sp, #24]
   195a8:	ldr	x0, [x0]
   195ac:	bl	1a988 <plugin_init@@Base+0x9948>
   195b0:	and	w0, w0, #0xff
   195b4:	ldp	x29, x30, [sp], #32
   195b8:	ret
   195bc:	stp	x29, x30, [sp, #-32]!
   195c0:	mov	x29, sp
   195c4:	str	x0, [sp, #24]
   195c8:	ldr	x0, [sp, #24]
   195cc:	bl	6320 <free@plt>
   195d0:	nop
   195d4:	ldp	x29, x30, [sp], #32
   195d8:	ret
   195dc:	stp	x29, x30, [sp, #-32]!
   195e0:	mov	x29, sp
   195e4:	str	x0, [sp, #24]
   195e8:	ldr	x0, [sp, #24]
   195ec:	bl	6320 <free@plt>
   195f0:	nop
   195f4:	ldp	x29, x30, [sp], #32
   195f8:	ret
   195fc:	stp	x29, x30, [sp, #-48]!
   19600:	mov	x29, sp
   19604:	str	x0, [sp, #24]
   19608:	str	x1, [sp, #16]
   1960c:	ldr	x0, [sp, #24]
   19610:	ldrb	w0, [x0, #44]
   19614:	eor	w0, w0, #0x1
   19618:	and	w0, w0, #0xff
   1961c:	cmp	w0, #0x0
   19620:	b.eq	19634 <plugin_init@@Base+0x85f4>  // b.none
   19624:	ldr	x0, [sp, #16]
   19628:	bl	1a9a8 <plugin_init@@Base+0x9968>
   1962c:	str	x0, [sp, #40]
   19630:	b	19640 <plugin_init@@Base+0x8600>
   19634:	ldr	x0, [sp, #16]
   19638:	bl	1a9c8 <plugin_init@@Base+0x9988>
   1963c:	str	x0, [sp, #40]
   19640:	ldr	x0, [sp, #40]
   19644:	cmp	x0, #0x0
   19648:	b.ne	19664 <plugin_init@@Base+0x8624>  // b.any
   1964c:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   19650:	add	x2, x0, #0x188
   19654:	mov	w1, #0x2b5                 	// #693
   19658:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   1965c:	add	x0, x0, #0x198
   19660:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
   19664:	str	xzr, [sp, #32]
   19668:	ldr	x1, [sp, #32]
   1966c:	ldr	x0, [sp, #16]
   19670:	cmp	x1, x0
   19674:	b.cs	1969c <plugin_init@@Base+0x865c>  // b.hs, b.nlast
   19678:	ldr	x0, [sp, #32]
   1967c:	lsl	x0, x0, #3
   19680:	ldr	x1, [sp, #40]
   19684:	add	x0, x1, x0
   19688:	bl	1a674 <plugin_init@@Base+0x9634>
   1968c:	ldr	x0, [sp, #32]
   19690:	add	x0, x0, #0x1
   19694:	str	x0, [sp, #32]
   19698:	b	19668 <plugin_init@@Base+0x8628>
   1969c:	ldr	x0, [sp, #40]
   196a0:	ldp	x29, x30, [sp], #48
   196a4:	ret
   196a8:	stp	x29, x30, [sp, #-32]!
   196ac:	mov	x29, sp
   196b0:	str	x0, [sp, #24]
   196b4:	ldr	x0, [sp, #24]
   196b8:	ldr	x0, [x0]
   196bc:	bl	1aa2c <plugin_init@@Base+0x99ec>
   196c0:	and	w0, w0, #0xff
   196c4:	ldp	x29, x30, [sp], #32
   196c8:	ret
   196cc:	stp	x29, x30, [sp, #-32]!
   196d0:	mov	x29, sp
   196d4:	str	x0, [sp, #24]
   196d8:	ldr	x0, [sp, #24]
   196dc:	ldr	x0, [x0]
   196e0:	bl	1aa4c <plugin_init@@Base+0x9a0c>
   196e4:	and	w0, w0, #0xff
   196e8:	ldp	x29, x30, [sp], #32
   196ec:	ret
   196f0:	sub	sp, sp, #0x10
   196f4:	str	x0, [sp, #8]
   196f8:	nop
   196fc:	add	sp, sp, #0x10
   19700:	ret
   19704:	stp	x29, x30, [sp, #-32]!
   19708:	mov	x29, sp
   1970c:	str	x0, [sp, #24]
   19710:	ldr	x0, [sp, #24]
   19714:	bl	6320 <free@plt>
   19718:	nop
   1971c:	ldp	x29, x30, [sp], #32
   19720:	ret
   19724:	stp	x29, x30, [sp, #-48]!
   19728:	mov	x29, sp
   1972c:	str	x0, [sp, #24]
   19730:	str	x1, [sp, #16]
   19734:	ldr	x0, [sp, #24]
   19738:	ldrb	w0, [x0, #44]
   1973c:	eor	w0, w0, #0x1
   19740:	and	w0, w0, #0xff
   19744:	cmp	w0, #0x0
   19748:	b.eq	1975c <plugin_init@@Base+0x871c>  // b.none
   1974c:	ldr	x0, [sp, #16]
   19750:	bl	1aa6c <plugin_init@@Base+0x9a2c>
   19754:	str	x0, [sp, #40]
   19758:	b	19768 <plugin_init@@Base+0x8728>
   1975c:	ldr	x0, [sp, #16]
   19760:	bl	1aa8c <plugin_init@@Base+0x9a4c>
   19764:	str	x0, [sp, #40]
   19768:	ldr	x0, [sp, #40]
   1976c:	cmp	x0, #0x0
   19770:	b.ne	1978c <plugin_init@@Base+0x874c>  // b.any
   19774:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   19778:	add	x2, x0, #0x188
   1977c:	mov	w1, #0x2b5                 	// #693
   19780:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   19784:	add	x0, x0, #0x198
   19788:	bl	6970 <_Z11fancy_abortPKciS0_@plt>
   1978c:	str	xzr, [sp, #32]
   19790:	ldr	x1, [sp, #32]
   19794:	ldr	x0, [sp, #16]
   19798:	cmp	x1, x0
   1979c:	b.cs	197c4 <plugin_init@@Base+0x8784>  // b.hs, b.nlast
   197a0:	ldr	x0, [sp, #32]
   197a4:	lsl	x0, x0, #3
   197a8:	ldr	x1, [sp, #40]
   197ac:	add	x0, x1, x0
   197b0:	bl	1a8a4 <plugin_init@@Base+0x9864>
   197b4:	ldr	x0, [sp, #32]
   197b8:	add	x0, x0, #0x1
   197bc:	str	x0, [sp, #32]
   197c0:	b	19790 <plugin_init@@Base+0x8750>
   197c4:	ldr	x0, [sp, #40]
   197c8:	ldp	x29, x30, [sp], #48
   197cc:	ret
   197d0:	stp	x29, x30, [sp, #-32]!
   197d4:	mov	x29, sp
   197d8:	str	x0, [sp, #24]
   197dc:	ldr	x0, [sp, #24]
   197e0:	ldr	x0, [x0]
   197e4:	bl	1aaf0 <plugin_init@@Base+0x9ab0>
   197e8:	and	w0, w0, #0xff
   197ec:	ldp	x29, x30, [sp], #32
   197f0:	ret
   197f4:	stp	x29, x30, [sp, #-32]!
   197f8:	mov	x29, sp
   197fc:	str	x0, [sp, #24]
   19800:	ldr	x0, [sp, #24]
   19804:	ldr	x0, [x0]
   19808:	bl	1ab10 <plugin_init@@Base+0x9ad0>
   1980c:	and	w0, w0, #0xff
   19810:	ldp	x29, x30, [sp], #32
   19814:	ret
   19818:	sub	sp, sp, #0x10
   1981c:	str	x0, [sp, #8]
   19820:	nop
   19824:	add	sp, sp, #0x10
   19828:	ret
   1982c:	stp	x29, x30, [sp, #-32]!
   19830:	mov	x29, sp
   19834:	str	x0, [sp, #24]
   19838:	ldr	x0, [sp, #24]
   1983c:	bl	6320 <free@plt>
   19840:	nop
   19844:	ldp	x29, x30, [sp], #32
   19848:	ret
   1984c:	sub	sp, sp, #0x10
   19850:	str	x0, [sp, #8]
   19854:	ldr	x0, [sp, #8]
   19858:	str	xzr, [x0]
   1985c:	ldr	x0, [sp, #8]
   19860:	str	xzr, [x0, #8]
   19864:	nop
   19868:	add	sp, sp, #0x10
   1986c:	ret
   19870:	sub	sp, sp, #0x20
   19874:	str	x0, [sp, #24]
   19878:	str	x1, [sp, #16]
   1987c:	str	x2, [sp, #8]
   19880:	ldr	x0, [sp, #24]
   19884:	ldr	x1, [sp, #16]
   19888:	str	x1, [x0]
   1988c:	ldr	x0, [sp, #24]
   19890:	ldr	x1, [sp, #8]
   19894:	str	x1, [x0, #8]
   19898:	nop
   1989c:	add	sp, sp, #0x20
   198a0:	ret
   198a4:	stp	x29, x30, [sp, #-48]!
   198a8:	mov	x29, sp
   198ac:	str	x0, [sp, #24]
   198b0:	ldr	x0, [sp, #24]
   198b4:	ldr	x1, [x0]
   198b8:	ldr	x0, [sp, #24]
   198bc:	ldr	x0, [x0, #8]
   198c0:	cmp	x1, x0
   198c4:	b.cs	19938 <plugin_init@@Base+0x88f8>  // b.hs, b.nlast
   198c8:	ldr	x0, [sp, #24]
   198cc:	ldr	x0, [x0]
   198d0:	str	x0, [sp, #40]
   198d4:	ldr	x0, [sp, #40]
   198d8:	bl	19574 <plugin_init@@Base+0x8534>
   198dc:	and	w0, w0, #0xff
   198e0:	eor	w0, w0, #0x1
   198e4:	and	w0, w0, #0xff
   198e8:	cmp	w0, #0x0
   198ec:	b.eq	19914 <plugin_init@@Base+0x88d4>  // b.none
   198f0:	ldr	x0, [sp, #40]
   198f4:	bl	19598 <plugin_init@@Base+0x8558>
   198f8:	and	w0, w0, #0xff
   198fc:	eor	w0, w0, #0x1
   19900:	and	w0, w0, #0xff
   19904:	cmp	w0, #0x0
   19908:	b.eq	19914 <plugin_init@@Base+0x88d4>  // b.none
   1990c:	mov	w0, #0x1                   	// #1
   19910:	b	19918 <plugin_init@@Base+0x88d8>
   19914:	mov	w0, #0x0                   	// #0
   19918:	cmp	w0, #0x0
   1991c:	b.ne	1994c <plugin_init@@Base+0x890c>  // b.any
   19920:	ldr	x0, [sp, #24]
   19924:	ldr	x0, [x0]
   19928:	add	x1, x0, #0x8
   1992c:	ldr	x0, [sp, #24]
   19930:	str	x1, [x0]
   19934:	b	198b0 <plugin_init@@Base+0x8870>
   19938:	ldr	x0, [sp, #24]
   1993c:	str	xzr, [x0]
   19940:	ldr	x0, [sp, #24]
   19944:	str	xzr, [x0, #8]
   19948:	b	19950 <plugin_init@@Base+0x8910>
   1994c:	nop
   19950:	ldp	x29, x30, [sp], #48
   19954:	ret
   19958:	sub	sp, sp, #0x10
   1995c:	str	x0, [sp, #8]
   19960:	ldr	x0, [sp, #8]
   19964:	str	xzr, [x0]
   19968:	ldr	x0, [sp, #8]
   1996c:	str	xzr, [x0, #8]
   19970:	nop
   19974:	add	sp, sp, #0x10
   19978:	ret
   1997c:	sub	sp, sp, #0x20
   19980:	str	x0, [sp, #24]
   19984:	str	x1, [sp, #16]
   19988:	str	x2, [sp, #8]
   1998c:	ldr	x0, [sp, #24]
   19990:	ldr	x1, [sp, #16]
   19994:	str	x1, [x0]
   19998:	ldr	x0, [sp, #24]
   1999c:	ldr	x1, [sp, #8]
   199a0:	str	x1, [x0, #8]
   199a4:	nop
   199a8:	add	sp, sp, #0x20
   199ac:	ret
   199b0:	stp	x29, x30, [sp, #-48]!
   199b4:	mov	x29, sp
   199b8:	str	x0, [sp, #24]
   199bc:	ldr	x0, [sp, #24]
   199c0:	ldr	x1, [x0]
   199c4:	ldr	x0, [sp, #24]
   199c8:	ldr	x0, [x0, #8]
   199cc:	cmp	x1, x0
   199d0:	b.cs	19a44 <plugin_init@@Base+0x8a04>  // b.hs, b.nlast
   199d4:	ldr	x0, [sp, #24]
   199d8:	ldr	x0, [x0]
   199dc:	str	x0, [sp, #40]
   199e0:	ldr	x0, [sp, #40]
   199e4:	bl	196a8 <plugin_init@@Base+0x8668>
   199e8:	and	w0, w0, #0xff
   199ec:	eor	w0, w0, #0x1
   199f0:	and	w0, w0, #0xff
   199f4:	cmp	w0, #0x0
   199f8:	b.eq	19a20 <plugin_init@@Base+0x89e0>  // b.none
   199fc:	ldr	x0, [sp, #40]
   19a00:	bl	196cc <plugin_init@@Base+0x868c>
   19a04:	and	w0, w0, #0xff
   19a08:	eor	w0, w0, #0x1
   19a0c:	and	w0, w0, #0xff
   19a10:	cmp	w0, #0x0
   19a14:	b.eq	19a20 <plugin_init@@Base+0x89e0>  // b.none
   19a18:	mov	w0, #0x1                   	// #1
   19a1c:	b	19a24 <plugin_init@@Base+0x89e4>
   19a20:	mov	w0, #0x0                   	// #0
   19a24:	cmp	w0, #0x0
   19a28:	b.ne	19a58 <plugin_init@@Base+0x8a18>  // b.any
   19a2c:	ldr	x0, [sp, #24]
   19a30:	ldr	x0, [x0]
   19a34:	add	x1, x0, #0x8
   19a38:	ldr	x0, [sp, #24]
   19a3c:	str	x1, [x0]
   19a40:	b	199bc <plugin_init@@Base+0x897c>
   19a44:	ldr	x0, [sp, #24]
   19a48:	str	xzr, [x0]
   19a4c:	ldr	x0, [sp, #24]
   19a50:	str	xzr, [x0, #8]
   19a54:	b	19a5c <plugin_init@@Base+0x8a1c>
   19a58:	nop
   19a5c:	ldp	x29, x30, [sp], #48
   19a60:	ret
   19a64:	stp	x29, x30, [sp, #-32]!
   19a68:	mov	x29, sp
   19a6c:	str	x0, [sp, #24]
   19a70:	str	w1, [sp, #20]
   19a74:	ldrsw	x0, [sp, #20]
   19a78:	mov	x1, x0
   19a7c:	ldr	x0, [sp, #24]
   19a80:	bl	1c044 <plugin_init@@Base+0xb004>
   19a84:	ldp	x29, x30, [sp], #32
   19a88:	ret
   19a8c:	stp	x29, x30, [sp, #-32]!
   19a90:	mov	x29, sp
   19a94:	str	x0, [sp, #24]
   19a98:	str	w1, [sp, #20]
   19a9c:	ldr	w0, [sp, #20]
   19aa0:	mov	x1, x0
   19aa4:	ldr	x0, [sp, #24]
   19aa8:	bl	1c044 <plugin_init@@Base+0xb004>
   19aac:	ldp	x29, x30, [sp], #32
   19ab0:	ret
   19ab4:	stp	x29, x30, [sp, #-48]!
   19ab8:	mov	x29, sp
   19abc:	str	x0, [sp, #24]
   19ac0:	str	x1, [sp, #16]
   19ac4:	add	x0, sp, #0x28
   19ac8:	mov	x1, x0
   19acc:	ldr	x0, [sp, #24]
   19ad0:	bl	1c09c <plugin_init@@Base+0xb05c>
   19ad4:	cmp	w0, #0x0
   19ad8:	cset	w0, eq  // eq = none
   19adc:	and	w0, w0, #0xff
   19ae0:	cmp	w0, #0x0
   19ae4:	b.eq	19af0 <plugin_init@@Base+0x8ab0>  // b.none
   19ae8:	mov	w0, #0x0                   	// #0
   19aec:	b	19b04 <plugin_init@@Base+0x8ac4>
   19af0:	ldr	x0, [sp, #40]
   19af4:	mov	w1, w0
   19af8:	ldr	x0, [sp, #16]
   19afc:	str	w1, [x0]
   19b00:	mov	w0, #0x1                   	// #1
   19b04:	ldp	x29, x30, [sp], #48
   19b08:	ret
   19b0c:	sub	sp, sp, #0x10
   19b10:	str	x0, [sp, #8]
   19b14:	mov	w0, #0x0                   	// #0
   19b18:	add	sp, sp, #0x10
   19b1c:	ret
   19b20:	stp	x29, x30, [sp, #-80]!
   19b24:	mov	x29, sp
   19b28:	str	x0, [sp, #40]
   19b2c:	str	x1, [sp, #32]
   19b30:	str	w2, [sp, #28]
   19b34:	str	w3, [sp, #24]
   19b38:	ldr	w0, [sp, #24]
   19b3c:	cmp	w0, #0x1
   19b40:	b.ne	19b74 <plugin_init@@Base+0x8b34>  // b.any
   19b44:	ldr	x0, [sp, #40]
   19b48:	ldr	x1, [x0, #8]
   19b4c:	mov	x0, x1
   19b50:	lsl	x0, x0, #1
   19b54:	add	x1, x0, x1
   19b58:	ldr	x0, [sp, #40]
   19b5c:	ldr	x0, [x0, #16]
   19b60:	lsl	x0, x0, #2
   19b64:	cmp	x1, x0
   19b68:	b.hi	19b74 <plugin_init@@Base+0x8b34>  // b.pmore
   19b6c:	ldr	x0, [sp, #40]
   19b70:	bl	1ab30 <plugin_init@@Base+0x9af0>
   19b74:	ldr	x0, [sp, #40]
   19b78:	ldr	w0, [x0, #32]
   19b7c:	add	w1, w0, #0x1
   19b80:	ldr	x0, [sp, #40]
   19b84:	str	w1, [x0, #32]
   19b88:	str	xzr, [sp, #72]
   19b8c:	ldr	x0, [sp, #40]
   19b90:	ldr	w0, [x0, #40]
   19b94:	mov	w1, w0
   19b98:	ldr	w0, [sp, #28]
   19b9c:	bl	12098 <plugin_init@@Base+0x1058>
   19ba0:	str	w0, [sp, #68]
   19ba4:	ldr	x0, [sp, #40]
   19ba8:	ldr	w0, [x0, #40]
   19bac:	mov	w1, w0
   19bb0:	ldr	w0, [sp, #28]
   19bb4:	bl	120ec <plugin_init@@Base+0x10ac>
   19bb8:	str	w0, [sp, #64]
   19bbc:	ldr	x0, [sp, #40]
   19bc0:	ldr	x1, [x0]
   19bc4:	ldr	w0, [sp, #68]
   19bc8:	lsl	x0, x0, #3
   19bcc:	add	x0, x1, x0
   19bd0:	str	x0, [sp, #56]
   19bd4:	ldr	x0, [sp, #40]
   19bd8:	ldr	x0, [x0, #8]
   19bdc:	str	x0, [sp, #48]
   19be0:	ldr	x0, [sp, #56]
   19be4:	bl	19574 <plugin_init@@Base+0x8534>
   19be8:	and	w0, w0, #0xff
   19bec:	cmp	w0, #0x0
   19bf0:	b.ne	19d54 <plugin_init@@Base+0x8d14>  // b.any
   19bf4:	ldr	x0, [sp, #56]
   19bf8:	bl	19598 <plugin_init@@Base+0x8558>
   19bfc:	and	w0, w0, #0xff
   19c00:	cmp	w0, #0x0
   19c04:	b.eq	19c24 <plugin_init@@Base+0x8be4>  // b.none
   19c08:	ldr	x0, [sp, #40]
   19c0c:	ldr	x1, [x0]
   19c10:	ldr	w0, [sp, #68]
   19c14:	lsl	x0, x0, #3
   19c18:	add	x0, x1, x0
   19c1c:	str	x0, [sp, #72]
   19c20:	b	19c64 <plugin_init@@Base+0x8c24>
   19c24:	ldr	x0, [sp, #56]
   19c28:	ldr	x2, [x0]
   19c2c:	ldr	x0, [sp, #32]
   19c30:	ldr	x0, [x0]
   19c34:	mov	x1, x0
   19c38:	mov	x0, x2
   19c3c:	bl	12694 <plugin_init@@Base+0x1654>
   19c40:	and	w0, w0, #0xff
   19c44:	cmp	w0, #0x0
   19c48:	b.eq	19c64 <plugin_init@@Base+0x8c24>  // b.none
   19c4c:	ldr	x0, [sp, #40]
   19c50:	ldr	x1, [x0]
   19c54:	ldr	w0, [sp, #68]
   19c58:	lsl	x0, x0, #3
   19c5c:	add	x0, x1, x0
   19c60:	b	19dcc <plugin_init@@Base+0x8d8c>
   19c64:	ldr	x0, [sp, #40]
   19c68:	ldr	w0, [x0, #36]
   19c6c:	add	w1, w0, #0x1
   19c70:	ldr	x0, [sp, #40]
   19c74:	str	w1, [x0, #36]
   19c78:	ldr	w1, [sp, #68]
   19c7c:	ldr	w0, [sp, #64]
   19c80:	add	w0, w1, w0
   19c84:	str	w0, [sp, #68]
   19c88:	ldr	w0, [sp, #68]
   19c8c:	ldr	x1, [sp, #48]
   19c90:	cmp	x1, x0
   19c94:	b.hi	19cac <plugin_init@@Base+0x8c6c>  // b.pmore
   19c98:	ldr	x0, [sp, #48]
   19c9c:	mov	w1, w0
   19ca0:	ldr	w0, [sp, #68]
   19ca4:	sub	w0, w0, w1
   19ca8:	str	w0, [sp, #68]
   19cac:	ldr	x0, [sp, #40]
   19cb0:	ldr	x1, [x0]
   19cb4:	ldr	w0, [sp, #68]
   19cb8:	lsl	x0, x0, #3
   19cbc:	add	x0, x1, x0
   19cc0:	str	x0, [sp, #56]
   19cc4:	ldr	x0, [sp, #56]
   19cc8:	bl	19574 <plugin_init@@Base+0x8534>
   19ccc:	and	w0, w0, #0xff
   19cd0:	cmp	w0, #0x0
   19cd4:	b.ne	19d5c <plugin_init@@Base+0x8d1c>  // b.any
   19cd8:	ldr	x0, [sp, #56]
   19cdc:	bl	19598 <plugin_init@@Base+0x8558>
   19ce0:	and	w0, w0, #0xff
   19ce4:	cmp	w0, #0x0
   19ce8:	b.eq	19d14 <plugin_init@@Base+0x8cd4>  // b.none
   19cec:	ldr	x0, [sp, #72]
   19cf0:	cmp	x0, #0x0
   19cf4:	b.ne	19c64 <plugin_init@@Base+0x8c24>  // b.any
   19cf8:	ldr	x0, [sp, #40]
   19cfc:	ldr	x1, [x0]
   19d00:	ldr	w0, [sp, #68]
   19d04:	lsl	x0, x0, #3
   19d08:	add	x0, x1, x0
   19d0c:	str	x0, [sp, #72]
   19d10:	b	19c64 <plugin_init@@Base+0x8c24>
   19d14:	ldr	x0, [sp, #56]
   19d18:	ldr	x2, [x0]
   19d1c:	ldr	x0, [sp, #32]
   19d20:	ldr	x0, [x0]
   19d24:	mov	x1, x0
   19d28:	mov	x0, x2
   19d2c:	bl	12694 <plugin_init@@Base+0x1654>
   19d30:	and	w0, w0, #0xff
   19d34:	cmp	w0, #0x0
   19d38:	b.eq	19c64 <plugin_init@@Base+0x8c24>  // b.none
   19d3c:	ldr	x0, [sp, #40]
   19d40:	ldr	x1, [x0]
   19d44:	ldr	w0, [sp, #68]
   19d48:	lsl	x0, x0, #3
   19d4c:	add	x0, x1, x0
   19d50:	b	19dcc <plugin_init@@Base+0x8d8c>
   19d54:	nop
   19d58:	b	19d60 <plugin_init@@Base+0x8d20>
   19d5c:	nop
   19d60:	ldr	w0, [sp, #24]
   19d64:	cmp	w0, #0x0
   19d68:	b.ne	19d74 <plugin_init@@Base+0x8d34>  // b.any
   19d6c:	mov	x0, #0x0                   	// #0
   19d70:	b	19dcc <plugin_init@@Base+0x8d8c>
   19d74:	ldr	x0, [sp, #72]
   19d78:	cmp	x0, #0x0
   19d7c:	b.eq	19da4 <plugin_init@@Base+0x8d64>  // b.none
   19d80:	ldr	x0, [sp, #40]
   19d84:	ldr	x0, [x0, #24]
   19d88:	sub	x1, x0, #0x1
   19d8c:	ldr	x0, [sp, #40]
   19d90:	str	x1, [x0, #24]
   19d94:	ldr	x0, [sp, #72]
   19d98:	bl	1a948 <plugin_init@@Base+0x9908>
   19d9c:	ldr	x0, [sp, #72]
   19da0:	b	19dcc <plugin_init@@Base+0x8d8c>
   19da4:	ldr	x0, [sp, #40]
   19da8:	ldr	x0, [x0, #16]
   19dac:	add	x1, x0, #0x1
   19db0:	ldr	x0, [sp, #40]
   19db4:	str	x1, [x0, #16]
   19db8:	ldr	x0, [sp, #40]
   19dbc:	ldr	x1, [x0]
   19dc0:	ldr	w0, [sp, #68]
   19dc4:	lsl	x0, x0, #3
   19dc8:	add	x0, x1, x0
   19dcc:	ldp	x29, x30, [sp], #80
   19dd0:	ret
   19dd4:	stp	x29, x30, [sp, #-80]!
   19dd8:	mov	x29, sp
   19ddc:	str	x0, [sp, #40]
   19de0:	str	x1, [sp, #32]
   19de4:	str	w2, [sp, #28]
   19de8:	ldr	x0, [sp, #40]
   19dec:	ldr	w0, [x0, #32]
   19df0:	add	w1, w0, #0x1
   19df4:	ldr	x0, [sp, #40]
   19df8:	str	w1, [x0, #32]
   19dfc:	ldr	x0, [sp, #40]
   19e00:	ldr	x0, [x0, #8]
   19e04:	str	x0, [sp, #64]
   19e08:	ldr	x0, [sp, #40]
   19e0c:	ldr	w0, [x0, #40]
   19e10:	mov	w1, w0
   19e14:	ldr	w0, [sp, #28]
   19e18:	bl	12098 <plugin_init@@Base+0x1058>
   19e1c:	str	w0, [sp, #76]
   19e20:	ldr	x0, [sp, #40]
   19e24:	ldr	x1, [x0]
   19e28:	ldr	w0, [sp, #76]
   19e2c:	lsl	x0, x0, #3
   19e30:	add	x0, x1, x0
   19e34:	str	x0, [sp, #56]
   19e38:	ldr	x0, [sp, #56]
   19e3c:	bl	19574 <plugin_init@@Base+0x8534>
   19e40:	and	w0, w0, #0xff
   19e44:	cmp	w0, #0x0
   19e48:	b.ne	19e90 <plugin_init@@Base+0x8e50>  // b.any
   19e4c:	ldr	x0, [sp, #56]
   19e50:	bl	19598 <plugin_init@@Base+0x8558>
   19e54:	and	w0, w0, #0xff
   19e58:	eor	w0, w0, #0x1
   19e5c:	and	w0, w0, #0xff
   19e60:	cmp	w0, #0x0
   19e64:	b.eq	19e98 <plugin_init@@Base+0x8e58>  // b.none
   19e68:	ldr	x0, [sp, #56]
   19e6c:	ldr	x2, [x0]
   19e70:	ldr	x0, [sp, #32]
   19e74:	ldr	x0, [x0]
   19e78:	mov	x1, x0
   19e7c:	mov	x0, x2
   19e80:	bl	12694 <plugin_init@@Base+0x1654>
   19e84:	and	w0, w0, #0xff
   19e88:	cmp	w0, #0x0
   19e8c:	b.eq	19e98 <plugin_init@@Base+0x8e58>  // b.none
   19e90:	mov	w0, #0x1                   	// #1
   19e94:	b	19e9c <plugin_init@@Base+0x8e5c>
   19e98:	mov	w0, #0x0                   	// #0
   19e9c:	cmp	w0, #0x0
   19ea0:	b.eq	19eac <plugin_init@@Base+0x8e6c>  // b.none
   19ea4:	ldr	x0, [sp, #56]
   19ea8:	b	19f94 <plugin_init@@Base+0x8f54>
   19eac:	ldr	x0, [sp, #40]
   19eb0:	ldr	w0, [x0, #40]
   19eb4:	mov	w1, w0
   19eb8:	ldr	w0, [sp, #28]
   19ebc:	bl	120ec <plugin_init@@Base+0x10ac>
   19ec0:	str	w0, [sp, #52]
   19ec4:	ldr	x0, [sp, #40]
   19ec8:	ldr	w0, [x0, #36]
   19ecc:	add	w1, w0, #0x1
   19ed0:	ldr	x0, [sp, #40]
   19ed4:	str	w1, [x0, #36]
   19ed8:	ldr	w1, [sp, #76]
   19edc:	ldr	w0, [sp, #52]
   19ee0:	add	w0, w1, w0
   19ee4:	str	w0, [sp, #76]
   19ee8:	ldr	w0, [sp, #76]
   19eec:	ldr	x1, [sp, #64]
   19ef0:	cmp	x1, x0
   19ef4:	b.hi	19f0c <plugin_init@@Base+0x8ecc>  // b.pmore
   19ef8:	ldr	x0, [sp, #64]
   19efc:	mov	w1, w0
   19f00:	ldr	w0, [sp, #76]
   19f04:	sub	w0, w0, w1
   19f08:	str	w0, [sp, #76]
   19f0c:	ldr	x0, [sp, #40]
   19f10:	ldr	x1, [x0]
   19f14:	ldr	w0, [sp, #76]
   19f18:	lsl	x0, x0, #3
   19f1c:	add	x0, x1, x0
   19f20:	str	x0, [sp, #56]
   19f24:	ldr	x0, [sp, #56]
   19f28:	bl	19574 <plugin_init@@Base+0x8534>
   19f2c:	and	w0, w0, #0xff
   19f30:	cmp	w0, #0x0
   19f34:	b.ne	19f7c <plugin_init@@Base+0x8f3c>  // b.any
   19f38:	ldr	x0, [sp, #56]
   19f3c:	bl	19598 <plugin_init@@Base+0x8558>
   19f40:	and	w0, w0, #0xff
   19f44:	eor	w0, w0, #0x1
   19f48:	and	w0, w0, #0xff
   19f4c:	cmp	w0, #0x0
   19f50:	b.eq	19f84 <plugin_init@@Base+0x8f44>  // b.none
   19f54:	ldr	x0, [sp, #56]
   19f58:	ldr	x2, [x0]
   19f5c:	ldr	x0, [sp, #32]
   19f60:	ldr	x0, [x0]
   19f64:	mov	x1, x0
   19f68:	mov	x0, x2
   19f6c:	bl	12694 <plugin_init@@Base+0x1654>
   19f70:	and	w0, w0, #0xff
   19f74:	cmp	w0, #0x0
   19f78:	b.eq	19f84 <plugin_init@@Base+0x8f44>  // b.none
   19f7c:	mov	w0, #0x1                   	// #1
   19f80:	b	19f88 <plugin_init@@Base+0x8f48>
   19f84:	mov	w0, #0x0                   	// #0
   19f88:	cmp	w0, #0x0
   19f8c:	b.eq	19ec4 <plugin_init@@Base+0x8e84>  // b.none
   19f90:	ldr	x0, [sp, #56]
   19f94:	ldp	x29, x30, [sp], #80
   19f98:	ret
   19f9c:	stp	x29, x30, [sp, #-48]!
   19fa0:	mov	x29, sp
   19fa4:	str	x0, [sp, #24]
   19fa8:	str	w1, [sp, #20]
   19fac:	strb	w2, [sp, #19]
   19fb0:	ldr	w0, [sp, #20]
   19fb4:	cmp	w0, #0x0
   19fb8:	b.eq	19fe8 <plugin_init@@Base+0x8fa8>  // b.none
   19fbc:	ldr	x0, [sp, #24]
   19fc0:	ldr	x0, [x0]
   19fc4:	ldr	w1, [sp, #20]
   19fc8:	bl	1ad40 <plugin_init@@Base+0x9d00>
   19fcc:	and	w0, w0, #0xff
   19fd0:	eor	w0, w0, #0x1
   19fd4:	and	w0, w0, #0xff
   19fd8:	cmp	w0, #0x0
   19fdc:	b.eq	19fe8 <plugin_init@@Base+0x8fa8>  // b.none
   19fe0:	mov	w0, #0x1                   	// #1
   19fe4:	b	19fec <plugin_init@@Base+0x8fac>
   19fe8:	mov	w0, #0x0                   	// #0
   19fec:	strb	w0, [sp, #47]
   19ff0:	ldrb	w0, [sp, #47]
   19ff4:	cmp	w0, #0x0
   19ff8:	b.eq	1a00c <plugin_init@@Base+0x8fcc>  // b.none
   19ffc:	ldrb	w2, [sp, #19]
   1a000:	ldr	w1, [sp, #20]
   1a004:	ldr	x0, [sp, #24]
   1a008:	bl	1ad94 <plugin_init@@Base+0x9d54>
   1a00c:	ldrb	w0, [sp, #47]
   1a010:	ldp	x29, x30, [sp], #48
   1a014:	ret
   1a018:	sub	sp, sp, #0x20
   1a01c:	str	x0, [sp, #8]
   1a020:	str	x1, [sp]
   1a024:	ldr	x0, [sp, #8]
   1a028:	ldr	w0, [x0, #4]
   1a02c:	add	w2, w0, #0x1
   1a030:	ldr	x1, [sp, #8]
   1a034:	str	w2, [x1, #4]
   1a038:	mov	w0, w0
   1a03c:	lsl	x0, x0, #3
   1a040:	ldr	x1, [sp, #8]
   1a044:	add	x0, x1, x0
   1a048:	add	x0, x0, #0x8
   1a04c:	str	x0, [sp, #24]
   1a050:	ldr	x0, [sp]
   1a054:	ldr	x1, [x0]
   1a058:	ldr	x0, [sp, #24]
   1a05c:	str	x1, [x0]
   1a060:	ldr	x0, [sp, #24]
   1a064:	add	sp, sp, #0x20
   1a068:	ret
   1a06c:	stp	x29, x30, [sp, #-48]!
   1a070:	mov	x29, sp
   1a074:	str	x0, [sp, #24]
   1a078:	str	w1, [sp, #20]
   1a07c:	strb	w2, [sp, #19]
   1a080:	ldr	w0, [sp, #20]
   1a084:	cmp	w0, #0x0
   1a088:	b.eq	1a0b8 <plugin_init@@Base+0x9078>  // b.none
   1a08c:	ldr	x0, [sp, #24]
   1a090:	ldr	x0, [x0]
   1a094:	ldr	w1, [sp, #20]
   1a098:	bl	1aef8 <plugin_init@@Base+0x9eb8>
   1a09c:	and	w0, w0, #0xff
   1a0a0:	eor	w0, w0, #0x1
   1a0a4:	and	w0, w0, #0xff
   1a0a8:	cmp	w0, #0x0
   1a0ac:	b.eq	1a0b8 <plugin_init@@Base+0x9078>  // b.none
   1a0b0:	mov	w0, #0x1                   	// #1
   1a0b4:	b	1a0bc <plugin_init@@Base+0x907c>
   1a0b8:	mov	w0, #0x0                   	// #0
   1a0bc:	strb	w0, [sp, #47]
   1a0c0:	ldrb	w0, [sp, #47]
   1a0c4:	cmp	w0, #0x0
   1a0c8:	b.eq	1a0dc <plugin_init@@Base+0x909c>  // b.none
   1a0cc:	ldrb	w2, [sp, #19]
   1a0d0:	ldr	w1, [sp, #20]
   1a0d4:	ldr	x0, [sp, #24]
   1a0d8:	bl	1af4c <plugin_init@@Base+0x9f0c>
   1a0dc:	ldrb	w0, [sp, #47]
   1a0e0:	ldp	x29, x30, [sp], #48
   1a0e4:	ret
   1a0e8:	sub	sp, sp, #0x20
   1a0ec:	str	x0, [sp, #8]
   1a0f0:	str	x1, [sp]
   1a0f4:	ldr	x0, [sp, #8]
   1a0f8:	ldr	w0, [x0, #4]
   1a0fc:	add	w2, w0, #0x1
   1a100:	ldr	x1, [sp, #8]
   1a104:	str	w2, [x1, #4]
   1a108:	mov	w0, w0
   1a10c:	lsl	x0, x0, #4
   1a110:	ldr	x1, [sp, #8]
   1a114:	add	x0, x1, x0
   1a118:	add	x0, x0, #0x8
   1a11c:	str	x0, [sp, #24]
   1a120:	ldr	x2, [sp, #24]
   1a124:	ldr	x0, [sp]
   1a128:	ldp	x0, x1, [x0]
   1a12c:	stp	x0, x1, [x2]
   1a130:	ldr	x0, [sp, #24]
   1a134:	add	sp, sp, #0x20
   1a138:	ret
   1a13c:	sub	sp, sp, #0x10
   1a140:	str	x0, [sp, #8]
   1a144:	nop
   1a148:	add	sp, sp, #0x10
   1a14c:	ret
   1a150:	sub	sp, sp, #0x10
   1a154:	str	x0, [sp, #8]
   1a158:	nop
   1a15c:	add	sp, sp, #0x10
   1a160:	ret
   1a164:	stp	x29, x30, [sp, #-32]!
   1a168:	mov	x29, sp
   1a16c:	str	x0, [sp, #24]
   1a170:	str	x1, [sp, #16]
   1a174:	ldr	x0, [sp, #24]
   1a178:	mov	x1, x0
   1a17c:	ldr	x0, [sp, #16]
   1a180:	bl	135dc <plugin_init@@Base+0x259c>
   1a184:	ldp	x29, x30, [sp], #32
   1a188:	ret
   1a18c:	sub	sp, sp, #0x10
   1a190:	str	x0, [sp, #8]
   1a194:	ldr	x0, [sp, #8]
   1a198:	ldr	x0, [x0]
   1a19c:	add	sp, sp, #0x10
   1a1a0:	ret
   1a1a4:	stp	x29, x30, [sp, #-32]!
   1a1a8:	mov	x29, sp
   1a1ac:	str	x0, [sp, #24]
   1a1b0:	str	x1, [sp, #16]
   1a1b4:	ldr	x1, [sp, #16]
   1a1b8:	ldr	x0, [sp, #24]
   1a1bc:	bl	1c044 <plugin_init@@Base+0xb004>
   1a1c0:	ldp	x29, x30, [sp], #32
   1a1c4:	ret
   1a1c8:	sub	sp, sp, #0x10
   1a1cc:	str	x0, [sp, #8]
   1a1d0:	nop
   1a1d4:	add	sp, sp, #0x10
   1a1d8:	ret
   1a1dc:	sub	sp, sp, #0x10
   1a1e0:	str	x0, [sp, #8]
   1a1e4:	nop
   1a1e8:	add	sp, sp, #0x10
   1a1ec:	ret
   1a1f0:	stp	x29, x30, [sp, #-32]!
   1a1f4:	mov	x29, sp
   1a1f8:	str	x0, [sp, #24]
   1a1fc:	str	x1, [sp, #16]
   1a200:	ldr	x0, [sp, #24]
   1a204:	mov	x1, x0
   1a208:	ldr	x0, [sp, #16]
   1a20c:	bl	6e68 <_Z19decl_assembler_nameP9tree_node@plt+0x108>
   1a210:	ldp	x29, x30, [sp], #32
   1a214:	ret
   1a218:	sub	sp, sp, #0x10
   1a21c:	str	x0, [sp, #8]
   1a220:	ldr	x0, [sp, #8]
   1a224:	ldr	w0, [x0]
   1a228:	add	sp, sp, #0x10
   1a22c:	ret
   1a230:	sub	sp, sp, #0x10
   1a234:	str	x0, [sp, #8]
   1a238:	nop
   1a23c:	add	sp, sp, #0x10
   1a240:	ret
   1a244:	sub	sp, sp, #0x10
   1a248:	str	x0, [sp, #8]
   1a24c:	nop
   1a250:	add	sp, sp, #0x10
   1a254:	ret
   1a258:	stp	x29, x30, [sp, #-32]!
   1a25c:	mov	x29, sp
   1a260:	str	x0, [sp, #24]
   1a264:	str	x1, [sp, #16]
   1a268:	ldr	x0, [sp, #24]
   1a26c:	mov	x1, x0
   1a270:	ldr	x0, [sp, #16]
   1a274:	bl	1b0b0 <plugin_init@@Base+0xa070>
   1a278:	ldp	x29, x30, [sp], #32
   1a27c:	ret
   1a280:	sub	sp, sp, #0x10
   1a284:	str	x0, [sp, #8]
   1a288:	ldr	x0, [sp, #8]
   1a28c:	ldr	w0, [x0]
   1a290:	add	sp, sp, #0x10
   1a294:	ret
   1a298:	sub	sp, sp, #0x10
   1a29c:	str	x0, [sp, #8]
   1a2a0:	nop
   1a2a4:	add	sp, sp, #0x10
   1a2a8:	ret
   1a2ac:	sub	sp, sp, #0x10
   1a2b0:	str	x0, [sp, #8]
   1a2b4:	nop
   1a2b8:	add	sp, sp, #0x10
   1a2bc:	ret
   1a2c0:	stp	x29, x30, [sp, #-32]!
   1a2c4:	mov	x29, sp
   1a2c8:	str	x0, [sp, #24]
   1a2cc:	str	x1, [sp, #16]
   1a2d0:	ldr	x0, [sp, #24]
   1a2d4:	mov	x1, x0
   1a2d8:	ldr	x0, [sp, #16]
   1a2dc:	bl	6f70 <_Z19decl_assembler_nameP9tree_node@plt+0x210>
   1a2e0:	ldp	x29, x30, [sp], #32
   1a2e4:	ret
   1a2e8:	sub	sp, sp, #0x10
   1a2ec:	str	x0, [sp, #8]
   1a2f0:	ldr	x0, [sp, #8]
   1a2f4:	ldr	w0, [x0]
   1a2f8:	add	sp, sp, #0x10
   1a2fc:	ret
   1a300:	sub	sp, sp, #0x10
   1a304:	str	x0, [sp, #8]
   1a308:	nop
   1a30c:	add	sp, sp, #0x10
   1a310:	ret
   1a314:	sub	sp, sp, #0x10
   1a318:	str	x0, [sp, #8]
   1a31c:	nop
   1a320:	add	sp, sp, #0x10
   1a324:	ret
   1a328:	stp	x29, x30, [sp, #-32]!
   1a32c:	mov	x29, sp
   1a330:	str	x0, [sp, #24]
   1a334:	str	x1, [sp, #16]
   1a338:	ldr	x0, [sp, #24]
   1a33c:	mov	x1, x0
   1a340:	ldr	x0, [sp, #16]
   1a344:	bl	19ab4 <plugin_init@@Base+0x8a74>
   1a348:	ldp	x29, x30, [sp], #32
   1a34c:	ret
   1a350:	sub	sp, sp, #0x10
   1a354:	str	x0, [sp, #8]
   1a358:	ldr	x0, [sp, #8]
   1a35c:	ldr	w0, [x0]
   1a360:	add	sp, sp, #0x10
   1a364:	ret
   1a368:	sub	sp, sp, #0x10
   1a36c:	str	x0, [sp, #8]
   1a370:	nop
   1a374:	add	sp, sp, #0x10
   1a378:	ret
   1a37c:	sub	sp, sp, #0x10
   1a380:	str	x0, [sp, #8]
   1a384:	nop
   1a388:	add	sp, sp, #0x10
   1a38c:	ret
   1a390:	stp	x29, x30, [sp, #-32]!
   1a394:	mov	x29, sp
   1a398:	str	x0, [sp, #24]
   1a39c:	str	x1, [sp, #16]
   1a3a0:	ldr	x0, [sp, #24]
   1a3a4:	mov	x1, x0
   1a3a8:	ldr	x0, [sp, #16]
   1a3ac:	bl	1b108 <plugin_init@@Base+0xa0c8>
   1a3b0:	ldp	x29, x30, [sp], #32
   1a3b4:	ret
   1a3b8:	sub	sp, sp, #0x10
   1a3bc:	str	x0, [sp, #8]
   1a3c0:	ldr	x0, [sp, #8]
   1a3c4:	ldr	x0, [x0]
   1a3c8:	add	sp, sp, #0x10
   1a3cc:	ret
   1a3d0:	sub	sp, sp, #0x10
   1a3d4:	str	x0, [sp, #8]
   1a3d8:	nop
   1a3dc:	add	sp, sp, #0x10
   1a3e0:	ret
   1a3e4:	sub	sp, sp, #0x10
   1a3e8:	str	x0, [sp, #8]
   1a3ec:	nop
   1a3f0:	add	sp, sp, #0x10
   1a3f4:	ret
   1a3f8:	stp	x29, x30, [sp, #-32]!
   1a3fc:	mov	x29, sp
   1a400:	str	x0, [sp, #24]
   1a404:	str	x1, [sp, #16]
   1a408:	ldr	x0, [sp, #24]
   1a40c:	mov	x1, x0
   1a410:	ldr	x0, [sp, #16]
   1a414:	bl	6f18 <_Z19decl_assembler_nameP9tree_node@plt+0x1b8>
   1a418:	ldp	x29, x30, [sp], #32
   1a41c:	ret
   1a420:	sub	sp, sp, #0x10
   1a424:	str	x0, [sp, #8]
   1a428:	ldr	x0, [sp, #8]
   1a42c:	ldr	w0, [x0]
   1a430:	add	sp, sp, #0x10
   1a434:	ret
   1a438:	stp	x29, x30, [sp, #-128]!
   1a43c:	mov	x29, sp
   1a440:	str	x0, [sp, #24]
   1a444:	ldr	x0, [sp, #24]
   1a448:	ldr	x0, [x0]
   1a44c:	str	x0, [sp, #96]
   1a450:	ldr	x0, [sp, #24]
   1a454:	ldr	w0, [x0, #40]
   1a458:	str	w0, [sp, #92]
   1a45c:	ldr	x0, [sp, #24]
   1a460:	bl	1b15c <plugin_init@@Base+0xa11c>
   1a464:	str	x0, [sp, #80]
   1a468:	ldr	x0, [sp, #80]
   1a46c:	lsl	x0, x0, #3
   1a470:	ldr	x1, [sp, #96]
   1a474:	add	x0, x1, x0
   1a478:	str	x0, [sp, #72]
   1a47c:	ldr	x0, [sp, #24]
   1a480:	bl	1b174 <plugin_init@@Base+0xa134>
   1a484:	str	x0, [sp, #64]
   1a488:	ldr	x0, [sp, #64]
   1a48c:	lsl	x0, x0, #1
   1a490:	ldr	x1, [sp, #80]
   1a494:	cmp	x1, x0
   1a498:	b.cc	1a4b8 <plugin_init@@Base+0x9478>  // b.lo, b.ul, b.last
   1a49c:	ldr	x0, [sp, #64]
   1a4a0:	mov	w1, w0
   1a4a4:	ldr	x0, [sp, #24]
   1a4a8:	bl	1b198 <plugin_init@@Base+0xa158>
   1a4ac:	and	w0, w0, #0xff
   1a4b0:	cmp	w0, #0x0
   1a4b4:	b.eq	1a4c0 <plugin_init@@Base+0x9480>  // b.none
   1a4b8:	mov	w0, #0x1                   	// #1
   1a4bc:	b	1a4c4 <plugin_init@@Base+0x9484>
   1a4c0:	mov	w0, #0x0                   	// #0
   1a4c4:	cmp	w0, #0x0
   1a4c8:	b.eq	1a500 <plugin_init@@Base+0x94c0>  // b.none
   1a4cc:	ldr	x0, [sp, #64]
   1a4d0:	lsl	x0, x0, #1
   1a4d4:	bl	6040 <_Z29hash_table_higher_prime_indexm@plt>
   1a4d8:	str	w0, [sp, #124]
   1a4dc:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1a4e0:	ldr	x1, [x0, #4064]
   1a4e4:	ldr	w0, [sp, #124]
   1a4e8:	lsl	x0, x0, #4
   1a4ec:	add	x0, x1, x0
   1a4f0:	ldr	w0, [x0]
   1a4f4:	mov	w0, w0
   1a4f8:	str	x0, [sp, #112]
   1a4fc:	b	1a510 <plugin_init@@Base+0x94d0>
   1a500:	ldr	w0, [sp, #92]
   1a504:	str	w0, [sp, #124]
   1a508:	ldr	x0, [sp, #80]
   1a50c:	str	x0, [sp, #112]
   1a510:	ldr	x1, [sp, #112]
   1a514:	ldr	x0, [sp, #24]
   1a518:	bl	195fc <plugin_init@@Base+0x85bc>
   1a51c:	str	x0, [sp, #56]
   1a520:	ldr	x0, [sp, #24]
   1a524:	ldr	x1, [sp, #56]
   1a528:	str	x1, [x0]
   1a52c:	ldr	x0, [sp, #24]
   1a530:	ldr	x1, [sp, #112]
   1a534:	str	x1, [x0, #8]
   1a538:	ldr	x0, [sp, #24]
   1a53c:	ldr	w1, [sp, #124]
   1a540:	str	w1, [x0, #40]
   1a544:	ldr	x0, [sp, #24]
   1a548:	ldr	x1, [x0, #16]
   1a54c:	ldr	x0, [sp, #24]
   1a550:	ldr	x0, [x0, #24]
   1a554:	sub	x1, x1, x0
   1a558:	ldr	x0, [sp, #24]
   1a55c:	str	x1, [x0, #16]
   1a560:	ldr	x0, [sp, #24]
   1a564:	str	xzr, [x0, #24]
   1a568:	ldr	x0, [sp, #96]
   1a56c:	str	x0, [sp, #104]
   1a570:	ldr	x0, [sp, #104]
   1a574:	str	x0, [sp, #48]
   1a578:	ldr	x0, [sp, #48]
   1a57c:	bl	196a8 <plugin_init@@Base+0x8668>
   1a580:	and	w0, w0, #0xff
   1a584:	eor	w0, w0, #0x1
   1a588:	and	w0, w0, #0xff
   1a58c:	cmp	w0, #0x0
   1a590:	b.eq	1a5b8 <plugin_init@@Base+0x9578>  // b.none
   1a594:	ldr	x0, [sp, #48]
   1a598:	bl	196cc <plugin_init@@Base+0x868c>
   1a59c:	and	w0, w0, #0xff
   1a5a0:	eor	w0, w0, #0x1
   1a5a4:	and	w0, w0, #0xff
   1a5a8:	cmp	w0, #0x0
   1a5ac:	b.eq	1a5b8 <plugin_init@@Base+0x9578>  // b.none
   1a5b0:	mov	w0, #0x1                   	// #1
   1a5b4:	b	1a5bc <plugin_init@@Base+0x957c>
   1a5b8:	mov	w0, #0x0                   	// #0
   1a5bc:	cmp	w0, #0x0
   1a5c0:	b.eq	1a5ec <plugin_init@@Base+0x95ac>  // b.none
   1a5c4:	ldr	x0, [sp, #48]
   1a5c8:	bl	191f8 <plugin_init@@Base+0x81b8>
   1a5cc:	mov	w1, w0
   1a5d0:	ldr	x0, [sp, #24]
   1a5d4:	bl	1b1e4 <plugin_init@@Base+0xa1a4>
   1a5d8:	str	x0, [sp, #40]
   1a5dc:	ldr	x0, [sp, #48]
   1a5e0:	ldr	x1, [x0]
   1a5e4:	ldr	x0, [sp, #40]
   1a5e8:	str	x1, [x0]
   1a5ec:	ldr	x0, [sp, #104]
   1a5f0:	add	x0, x0, #0x8
   1a5f4:	str	x0, [sp, #104]
   1a5f8:	ldr	x1, [sp, #104]
   1a5fc:	ldr	x0, [sp, #72]
   1a600:	cmp	x1, x0
   1a604:	b.cs	1a60c <plugin_init@@Base+0x95cc>  // b.hs, b.nlast
   1a608:	b	1a570 <plugin_init@@Base+0x9530>
   1a60c:	ldr	x0, [sp, #24]
   1a610:	ldrb	w0, [x0, #44]
   1a614:	eor	w0, w0, #0x1
   1a618:	and	w0, w0, #0xff
   1a61c:	cmp	w0, #0x0
   1a620:	b.eq	1a630 <plugin_init@@Base+0x95f0>  // b.none
   1a624:	ldr	x0, [sp, #96]
   1a628:	bl	19704 <plugin_init@@Base+0x86c4>
   1a62c:	b	1a638 <plugin_init@@Base+0x95f8>
   1a630:	ldr	x0, [sp, #96]
   1a634:	bl	62a0 <_Z8ggc_freePv@plt>
   1a638:	nop
   1a63c:	ldp	x29, x30, [sp], #128
   1a640:	ret
   1a644:	sub	sp, sp, #0x10
   1a648:	str	x0, [sp, #8]
   1a64c:	str	x1, [sp]
   1a650:	ldr	x0, [sp, #8]
   1a654:	ldr	x1, [x0]
   1a658:	ldr	x0, [sp]
   1a65c:	ldr	x0, [x0]
   1a660:	cmp	x1, x0
   1a664:	cset	w0, eq  // eq = none
   1a668:	and	w0, w0, #0xff
   1a66c:	add	sp, sp, #0x10
   1a670:	ret
   1a674:	stp	x29, x30, [sp, #-32]!
   1a678:	mov	x29, sp
   1a67c:	str	x0, [sp, #24]
   1a680:	ldr	x0, [sp, #24]
   1a684:	bl	1b2d0 <plugin_init@@Base+0xa290>
   1a688:	nop
   1a68c:	ldp	x29, x30, [sp], #32
   1a690:	ret
   1a694:	stp	x29, x30, [sp, #-128]!
   1a698:	mov	x29, sp
   1a69c:	str	x0, [sp, #24]
   1a6a0:	ldr	x0, [sp, #24]
   1a6a4:	ldr	x0, [x0]
   1a6a8:	str	x0, [sp, #96]
   1a6ac:	ldr	x0, [sp, #24]
   1a6b0:	ldr	w0, [x0, #40]
   1a6b4:	str	w0, [sp, #92]
   1a6b8:	ldr	x0, [sp, #24]
   1a6bc:	bl	1b2ec <plugin_init@@Base+0xa2ac>
   1a6c0:	str	x0, [sp, #80]
   1a6c4:	ldr	x0, [sp, #80]
   1a6c8:	lsl	x0, x0, #3
   1a6cc:	ldr	x1, [sp, #96]
   1a6d0:	add	x0, x1, x0
   1a6d4:	str	x0, [sp, #72]
   1a6d8:	ldr	x0, [sp, #24]
   1a6dc:	bl	1b304 <plugin_init@@Base+0xa2c4>
   1a6e0:	str	x0, [sp, #64]
   1a6e4:	ldr	x0, [sp, #64]
   1a6e8:	lsl	x0, x0, #1
   1a6ec:	ldr	x1, [sp, #80]
   1a6f0:	cmp	x1, x0
   1a6f4:	b.cc	1a714 <plugin_init@@Base+0x96d4>  // b.lo, b.ul, b.last
   1a6f8:	ldr	x0, [sp, #64]
   1a6fc:	mov	w1, w0
   1a700:	ldr	x0, [sp, #24]
   1a704:	bl	1b328 <plugin_init@@Base+0xa2e8>
   1a708:	and	w0, w0, #0xff
   1a70c:	cmp	w0, #0x0
   1a710:	b.eq	1a71c <plugin_init@@Base+0x96dc>  // b.none
   1a714:	mov	w0, #0x1                   	// #1
   1a718:	b	1a720 <plugin_init@@Base+0x96e0>
   1a71c:	mov	w0, #0x0                   	// #0
   1a720:	cmp	w0, #0x0
   1a724:	b.eq	1a75c <plugin_init@@Base+0x971c>  // b.none
   1a728:	ldr	x0, [sp, #64]
   1a72c:	lsl	x0, x0, #1
   1a730:	bl	6040 <_Z29hash_table_higher_prime_indexm@plt>
   1a734:	str	w0, [sp, #124]
   1a738:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1a73c:	ldr	x1, [x0, #4064]
   1a740:	ldr	w0, [sp, #124]
   1a744:	lsl	x0, x0, #4
   1a748:	add	x0, x1, x0
   1a74c:	ldr	w0, [x0]
   1a750:	mov	w0, w0
   1a754:	str	x0, [sp, #112]
   1a758:	b	1a76c <plugin_init@@Base+0x972c>
   1a75c:	ldr	w0, [sp, #92]
   1a760:	str	w0, [sp, #124]
   1a764:	ldr	x0, [sp, #80]
   1a768:	str	x0, [sp, #112]
   1a76c:	ldr	x1, [sp, #112]
   1a770:	ldr	x0, [sp, #24]
   1a774:	bl	19724 <plugin_init@@Base+0x86e4>
   1a778:	str	x0, [sp, #56]
   1a77c:	ldr	x0, [sp, #24]
   1a780:	ldr	x1, [sp, #56]
   1a784:	str	x1, [x0]
   1a788:	ldr	x0, [sp, #24]
   1a78c:	ldr	x1, [sp, #112]
   1a790:	str	x1, [x0, #8]
   1a794:	ldr	x0, [sp, #24]
   1a798:	ldr	w1, [sp, #124]
   1a79c:	str	w1, [x0, #40]
   1a7a0:	ldr	x0, [sp, #24]
   1a7a4:	ldr	x1, [x0, #16]
   1a7a8:	ldr	x0, [sp, #24]
   1a7ac:	ldr	x0, [x0, #24]
   1a7b0:	sub	x1, x1, x0
   1a7b4:	ldr	x0, [sp, #24]
   1a7b8:	str	x1, [x0, #16]
   1a7bc:	ldr	x0, [sp, #24]
   1a7c0:	str	xzr, [x0, #24]
   1a7c4:	ldr	x0, [sp, #96]
   1a7c8:	str	x0, [sp, #104]
   1a7cc:	ldr	x0, [sp, #104]
   1a7d0:	str	x0, [sp, #48]
   1a7d4:	ldr	x0, [sp, #48]
   1a7d8:	bl	197d0 <plugin_init@@Base+0x8790>
   1a7dc:	and	w0, w0, #0xff
   1a7e0:	eor	w0, w0, #0x1
   1a7e4:	and	w0, w0, #0xff
   1a7e8:	cmp	w0, #0x0
   1a7ec:	b.eq	1a814 <plugin_init@@Base+0x97d4>  // b.none
   1a7f0:	ldr	x0, [sp, #48]
   1a7f4:	bl	197f4 <plugin_init@@Base+0x87b4>
   1a7f8:	and	w0, w0, #0xff
   1a7fc:	eor	w0, w0, #0x1
   1a800:	and	w0, w0, #0xff
   1a804:	cmp	w0, #0x0
   1a808:	b.eq	1a814 <plugin_init@@Base+0x97d4>  // b.none
   1a80c:	mov	w0, #0x1                   	// #1
   1a810:	b	1a818 <plugin_init@@Base+0x97d8>
   1a814:	mov	w0, #0x0                   	// #0
   1a818:	cmp	w0, #0x0
   1a81c:	b.eq	1a84c <plugin_init@@Base+0x980c>  // b.none
   1a820:	ldr	x0, [sp, #48]
   1a824:	ldr	x0, [x0]
   1a828:	bl	126c4 <plugin_init@@Base+0x1684>
   1a82c:	mov	w1, w0
   1a830:	ldr	x0, [sp, #24]
   1a834:	bl	1b374 <plugin_init@@Base+0xa334>
   1a838:	str	x0, [sp, #40]
   1a83c:	ldr	x0, [sp, #48]
   1a840:	ldr	x1, [x0]
   1a844:	ldr	x0, [sp, #40]
   1a848:	str	x1, [x0]
   1a84c:	ldr	x0, [sp, #104]
   1a850:	add	x0, x0, #0x8
   1a854:	str	x0, [sp, #104]
   1a858:	ldr	x1, [sp, #104]
   1a85c:	ldr	x0, [sp, #72]
   1a860:	cmp	x1, x0
   1a864:	b.cs	1a86c <plugin_init@@Base+0x982c>  // b.hs, b.nlast
   1a868:	b	1a7cc <plugin_init@@Base+0x978c>
   1a86c:	ldr	x0, [sp, #24]
   1a870:	ldrb	w0, [x0, #44]
   1a874:	eor	w0, w0, #0x1
   1a878:	and	w0, w0, #0xff
   1a87c:	cmp	w0, #0x0
   1a880:	b.eq	1a890 <plugin_init@@Base+0x9850>  // b.none
   1a884:	ldr	x0, [sp, #96]
   1a888:	bl	1982c <plugin_init@@Base+0x87ec>
   1a88c:	b	1a898 <plugin_init@@Base+0x9858>
   1a890:	ldr	x0, [sp, #96]
   1a894:	bl	62a0 <_Z8ggc_freePv@plt>
   1a898:	nop
   1a89c:	ldp	x29, x30, [sp], #128
   1a8a0:	ret
   1a8a4:	stp	x29, x30, [sp, #-32]!
   1a8a8:	mov	x29, sp
   1a8ac:	str	x0, [sp, #24]
   1a8b0:	ldr	x0, [sp, #24]
   1a8b4:	bl	1b460 <plugin_init@@Base+0xa420>
   1a8b8:	nop
   1a8bc:	ldp	x29, x30, [sp], #32
   1a8c0:	ret
   1a8c4:	stp	x29, x30, [sp, #-32]!
   1a8c8:	mov	x29, sp
   1a8cc:	str	x0, [sp, #24]
   1a8d0:	mov	x1, #0x8                   	// #8
   1a8d4:	ldr	x0, [sp, #24]
   1a8d8:	bl	6b10 <xcalloc@plt>
   1a8dc:	ldp	x29, x30, [sp], #32
   1a8e0:	ret
   1a8e4:	stp	x29, x30, [sp, #-32]!
   1a8e8:	mov	x29, sp
   1a8ec:	str	x0, [sp, #24]
   1a8f0:	bl	1b47c <plugin_init@@Base+0xa43c>
   1a8f4:	and	w0, w0, #0xff
   1a8f8:	cmp	w0, #0x0
   1a8fc:	b.eq	1a924 <plugin_init@@Base+0x98e4>  // b.none
   1a900:	ldr	x0, [sp, #24]
   1a904:	lsl	x4, x0, #3
   1a908:	ldr	x3, [sp, #24]
   1a90c:	mov	x2, #0x8                   	// #8
   1a910:	adrp	x0, 1b000 <plugin_init@@Base+0x9fc0>
   1a914:	add	x1, x0, #0x484
   1a918:	mov	x0, x4
   1a91c:	bl	66b0 <_Z26ggc_internal_cleared_allocmPFvPvEmm@plt>
   1a920:	b	1a940 <plugin_init@@Base+0x9900>
   1a924:	ldr	x0, [sp, #24]
   1a928:	lsl	x0, x0, #3
   1a92c:	mov	x3, #0x0                   	// #0
   1a930:	mov	x2, #0x0                   	// #0
   1a934:	mov	x1, #0x0                   	// #0
   1a938:	bl	66b0 <_Z26ggc_internal_cleared_allocmPFvPvEmm@plt>
   1a93c:	nop
   1a940:	ldp	x29, x30, [sp], #32
   1a944:	ret
   1a948:	stp	x29, x30, [sp, #-32]!
   1a94c:	mov	x29, sp
   1a950:	str	x0, [sp, #24]
   1a954:	ldr	x0, [sp, #24]
   1a958:	bl	1b498 <plugin_init@@Base+0xa458>
   1a95c:	nop
   1a960:	ldp	x29, x30, [sp], #32
   1a964:	ret
   1a968:	sub	sp, sp, #0x10
   1a96c:	str	x0, [sp, #8]
   1a970:	ldr	x0, [sp, #8]
   1a974:	cmp	x0, #0x0
   1a978:	cset	w0, eq  // eq = none
   1a97c:	and	w0, w0, #0xff
   1a980:	add	sp, sp, #0x10
   1a984:	ret
   1a988:	sub	sp, sp, #0x10
   1a98c:	str	x0, [sp, #8]
   1a990:	ldr	x0, [sp, #8]
   1a994:	cmp	x0, #0x1
   1a998:	cset	w0, eq  // eq = none
   1a99c:	and	w0, w0, #0xff
   1a9a0:	add	sp, sp, #0x10
   1a9a4:	ret
   1a9a8:	stp	x29, x30, [sp, #-32]!
   1a9ac:	mov	x29, sp
   1a9b0:	str	x0, [sp, #24]
   1a9b4:	mov	x1, #0x8                   	// #8
   1a9b8:	ldr	x0, [sp, #24]
   1a9bc:	bl	6b10 <xcalloc@plt>
   1a9c0:	ldp	x29, x30, [sp], #32
   1a9c4:	ret
   1a9c8:	stp	x29, x30, [sp, #-32]!
   1a9cc:	mov	x29, sp
   1a9d0:	str	x0, [sp, #24]
   1a9d4:	bl	1b4b4 <plugin_init@@Base+0xa474>
   1a9d8:	and	w0, w0, #0xff
   1a9dc:	cmp	w0, #0x0
   1a9e0:	b.eq	1aa08 <plugin_init@@Base+0x99c8>  // b.none
   1a9e4:	ldr	x0, [sp, #24]
   1a9e8:	lsl	x4, x0, #3
   1a9ec:	ldr	x3, [sp, #24]
   1a9f0:	mov	x2, #0x8                   	// #8
   1a9f4:	adrp	x0, 1b000 <plugin_init@@Base+0x9fc0>
   1a9f8:	add	x1, x0, #0x4bc
   1a9fc:	mov	x0, x4
   1aa00:	bl	66b0 <_Z26ggc_internal_cleared_allocmPFvPvEmm@plt>
   1aa04:	b	1aa24 <plugin_init@@Base+0x99e4>
   1aa08:	ldr	x0, [sp, #24]
   1aa0c:	lsl	x0, x0, #3
   1aa10:	mov	x3, #0x0                   	// #0
   1aa14:	mov	x2, #0x0                   	// #0
   1aa18:	mov	x1, #0x0                   	// #0
   1aa1c:	bl	66b0 <_Z26ggc_internal_cleared_allocmPFvPvEmm@plt>
   1aa20:	nop
   1aa24:	ldp	x29, x30, [sp], #32
   1aa28:	ret
   1aa2c:	sub	sp, sp, #0x10
   1aa30:	str	x0, [sp, #8]
   1aa34:	ldr	x0, [sp, #8]
   1aa38:	cmp	x0, #0x0
   1aa3c:	cset	w0, eq  // eq = none
   1aa40:	and	w0, w0, #0xff
   1aa44:	add	sp, sp, #0x10
   1aa48:	ret
   1aa4c:	sub	sp, sp, #0x10
   1aa50:	str	x0, [sp, #8]
   1aa54:	ldr	x0, [sp, #8]
   1aa58:	cmp	x0, #0x1
   1aa5c:	cset	w0, eq  // eq = none
   1aa60:	and	w0, w0, #0xff
   1aa64:	add	sp, sp, #0x10
   1aa68:	ret
   1aa6c:	stp	x29, x30, [sp, #-32]!
   1aa70:	mov	x29, sp
   1aa74:	str	x0, [sp, #24]
   1aa78:	mov	x1, #0x8                   	// #8
   1aa7c:	ldr	x0, [sp, #24]
   1aa80:	bl	6b10 <xcalloc@plt>
   1aa84:	ldp	x29, x30, [sp], #32
   1aa88:	ret
   1aa8c:	stp	x29, x30, [sp, #-32]!
   1aa90:	mov	x29, sp
   1aa94:	str	x0, [sp, #24]
   1aa98:	bl	1b4d0 <plugin_init@@Base+0xa490>
   1aa9c:	and	w0, w0, #0xff
   1aaa0:	cmp	w0, #0x0
   1aaa4:	b.eq	1aacc <plugin_init@@Base+0x9a8c>  // b.none
   1aaa8:	ldr	x0, [sp, #24]
   1aaac:	lsl	x4, x0, #3
   1aab0:	ldr	x3, [sp, #24]
   1aab4:	mov	x2, #0x8                   	// #8
   1aab8:	adrp	x0, 1b000 <plugin_init@@Base+0x9fc0>
   1aabc:	add	x1, x0, #0x4d8
   1aac0:	mov	x0, x4
   1aac4:	bl	66b0 <_Z26ggc_internal_cleared_allocmPFvPvEmm@plt>
   1aac8:	b	1aae8 <plugin_init@@Base+0x9aa8>
   1aacc:	ldr	x0, [sp, #24]
   1aad0:	lsl	x0, x0, #3
   1aad4:	mov	x3, #0x0                   	// #0
   1aad8:	mov	x2, #0x0                   	// #0
   1aadc:	mov	x1, #0x0                   	// #0
   1aae0:	bl	66b0 <_Z26ggc_internal_cleared_allocmPFvPvEmm@plt>
   1aae4:	nop
   1aae8:	ldp	x29, x30, [sp], #32
   1aaec:	ret
   1aaf0:	sub	sp, sp, #0x10
   1aaf4:	str	x0, [sp, #8]
   1aaf8:	ldr	x0, [sp, #8]
   1aafc:	cmp	x0, #0x0
   1ab00:	cset	w0, eq  // eq = none
   1ab04:	and	w0, w0, #0xff
   1ab08:	add	sp, sp, #0x10
   1ab0c:	ret
   1ab10:	sub	sp, sp, #0x10
   1ab14:	str	x0, [sp, #8]
   1ab18:	ldr	x0, [sp, #8]
   1ab1c:	cmp	x0, #0x1
   1ab20:	cset	w0, eq  // eq = none
   1ab24:	and	w0, w0, #0xff
   1ab28:	add	sp, sp, #0x10
   1ab2c:	ret
   1ab30:	stp	x29, x30, [sp, #-128]!
   1ab34:	mov	x29, sp
   1ab38:	str	x0, [sp, #24]
   1ab3c:	ldr	x0, [sp, #24]
   1ab40:	ldr	x0, [x0]
   1ab44:	str	x0, [sp, #96]
   1ab48:	ldr	x0, [sp, #24]
   1ab4c:	ldr	w0, [x0, #40]
   1ab50:	str	w0, [sp, #92]
   1ab54:	ldr	x0, [sp, #24]
   1ab58:	bl	1b4ec <plugin_init@@Base+0xa4ac>
   1ab5c:	str	x0, [sp, #80]
   1ab60:	ldr	x0, [sp, #80]
   1ab64:	lsl	x0, x0, #3
   1ab68:	ldr	x1, [sp, #96]
   1ab6c:	add	x0, x1, x0
   1ab70:	str	x0, [sp, #72]
   1ab74:	ldr	x0, [sp, #24]
   1ab78:	bl	1b504 <plugin_init@@Base+0xa4c4>
   1ab7c:	str	x0, [sp, #64]
   1ab80:	ldr	x0, [sp, #64]
   1ab84:	lsl	x0, x0, #1
   1ab88:	ldr	x1, [sp, #80]
   1ab8c:	cmp	x1, x0
   1ab90:	b.cc	1abb0 <plugin_init@@Base+0x9b70>  // b.lo, b.ul, b.last
   1ab94:	ldr	x0, [sp, #64]
   1ab98:	mov	w1, w0
   1ab9c:	ldr	x0, [sp, #24]
   1aba0:	bl	1b528 <plugin_init@@Base+0xa4e8>
   1aba4:	and	w0, w0, #0xff
   1aba8:	cmp	w0, #0x0
   1abac:	b.eq	1abb8 <plugin_init@@Base+0x9b78>  // b.none
   1abb0:	mov	w0, #0x1                   	// #1
   1abb4:	b	1abbc <plugin_init@@Base+0x9b7c>
   1abb8:	mov	w0, #0x0                   	// #0
   1abbc:	cmp	w0, #0x0
   1abc0:	b.eq	1abf8 <plugin_init@@Base+0x9bb8>  // b.none
   1abc4:	ldr	x0, [sp, #64]
   1abc8:	lsl	x0, x0, #1
   1abcc:	bl	6040 <_Z29hash_table_higher_prime_indexm@plt>
   1abd0:	str	w0, [sp, #124]
   1abd4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1abd8:	ldr	x1, [x0, #4064]
   1abdc:	ldr	w0, [sp, #124]
   1abe0:	lsl	x0, x0, #4
   1abe4:	add	x0, x1, x0
   1abe8:	ldr	w0, [x0]
   1abec:	mov	w0, w0
   1abf0:	str	x0, [sp, #112]
   1abf4:	b	1ac08 <plugin_init@@Base+0x9bc8>
   1abf8:	ldr	w0, [sp, #92]
   1abfc:	str	w0, [sp, #124]
   1ac00:	ldr	x0, [sp, #80]
   1ac04:	str	x0, [sp, #112]
   1ac08:	ldr	x1, [sp, #112]
   1ac0c:	ldr	x0, [sp, #24]
   1ac10:	bl	194c8 <plugin_init@@Base+0x8488>
   1ac14:	str	x0, [sp, #56]
   1ac18:	ldr	x0, [sp, #24]
   1ac1c:	ldr	x1, [sp, #56]
   1ac20:	str	x1, [x0]
   1ac24:	ldr	x0, [sp, #24]
   1ac28:	ldr	x1, [sp, #112]
   1ac2c:	str	x1, [x0, #8]
   1ac30:	ldr	x0, [sp, #24]
   1ac34:	ldr	w1, [sp, #124]
   1ac38:	str	w1, [x0, #40]
   1ac3c:	ldr	x0, [sp, #24]
   1ac40:	ldr	x1, [x0, #16]
   1ac44:	ldr	x0, [sp, #24]
   1ac48:	ldr	x0, [x0, #24]
   1ac4c:	sub	x1, x1, x0
   1ac50:	ldr	x0, [sp, #24]
   1ac54:	str	x1, [x0, #16]
   1ac58:	ldr	x0, [sp, #24]
   1ac5c:	str	xzr, [x0, #24]
   1ac60:	ldr	x0, [sp, #96]
   1ac64:	str	x0, [sp, #104]
   1ac68:	ldr	x0, [sp, #104]
   1ac6c:	str	x0, [sp, #48]
   1ac70:	ldr	x0, [sp, #48]
   1ac74:	bl	19574 <plugin_init@@Base+0x8534>
   1ac78:	and	w0, w0, #0xff
   1ac7c:	eor	w0, w0, #0x1
   1ac80:	and	w0, w0, #0xff
   1ac84:	cmp	w0, #0x0
   1ac88:	b.eq	1acb0 <plugin_init@@Base+0x9c70>  // b.none
   1ac8c:	ldr	x0, [sp, #48]
   1ac90:	bl	19598 <plugin_init@@Base+0x8558>
   1ac94:	and	w0, w0, #0xff
   1ac98:	eor	w0, w0, #0x1
   1ac9c:	and	w0, w0, #0xff
   1aca0:	cmp	w0, #0x0
   1aca4:	b.eq	1acb0 <plugin_init@@Base+0x9c70>  // b.none
   1aca8:	mov	w0, #0x1                   	// #1
   1acac:	b	1acb4 <plugin_init@@Base+0x9c74>
   1acb0:	mov	w0, #0x0                   	// #0
   1acb4:	cmp	w0, #0x0
   1acb8:	b.eq	1ace8 <plugin_init@@Base+0x9ca8>  // b.none
   1acbc:	ldr	x0, [sp, #48]
   1acc0:	ldr	x0, [x0]
   1acc4:	bl	12678 <plugin_init@@Base+0x1638>
   1acc8:	mov	w1, w0
   1accc:	ldr	x0, [sp, #24]
   1acd0:	bl	1b574 <plugin_init@@Base+0xa534>
   1acd4:	str	x0, [sp, #40]
   1acd8:	ldr	x0, [sp, #48]
   1acdc:	ldr	x1, [x0]
   1ace0:	ldr	x0, [sp, #40]
   1ace4:	str	x1, [x0]
   1ace8:	ldr	x0, [sp, #104]
   1acec:	add	x0, x0, #0x8
   1acf0:	str	x0, [sp, #104]
   1acf4:	ldr	x1, [sp, #104]
   1acf8:	ldr	x0, [sp, #72]
   1acfc:	cmp	x1, x0
   1ad00:	b.cs	1ad08 <plugin_init@@Base+0x9cc8>  // b.hs, b.nlast
   1ad04:	b	1ac68 <plugin_init@@Base+0x9c28>
   1ad08:	ldr	x0, [sp, #24]
   1ad0c:	ldrb	w0, [x0, #44]
   1ad10:	eor	w0, w0, #0x1
   1ad14:	and	w0, w0, #0xff
   1ad18:	cmp	w0, #0x0
   1ad1c:	b.eq	1ad2c <plugin_init@@Base+0x9cec>  // b.none
   1ad20:	ldr	x0, [sp, #96]
   1ad24:	bl	195dc <plugin_init@@Base+0x859c>
   1ad28:	b	1ad34 <plugin_init@@Base+0x9cf4>
   1ad2c:	ldr	x0, [sp, #96]
   1ad30:	bl	62a0 <_Z8ggc_freePv@plt>
   1ad34:	nop
   1ad38:	ldp	x29, x30, [sp], #128
   1ad3c:	ret
   1ad40:	stp	x29, x30, [sp, #-32]!
   1ad44:	mov	x29, sp
   1ad48:	str	x0, [sp, #24]
   1ad4c:	str	w1, [sp, #20]
   1ad50:	ldr	x0, [sp, #24]
   1ad54:	cmp	x0, #0x0
   1ad58:	b.eq	1ad7c <plugin_init@@Base+0x9d3c>  // b.none
   1ad5c:	ldr	w1, [sp, #20]
   1ad60:	ldr	x0, [sp, #24]
   1ad64:	bl	1aeb8 <plugin_init@@Base+0x9e78>
   1ad68:	and	w0, w0, #0xff
   1ad6c:	cmp	w0, #0x0
   1ad70:	cset	w0, ne  // ne = any
   1ad74:	and	w0, w0, #0xff
   1ad78:	b	1ad8c <plugin_init@@Base+0x9d4c>
   1ad7c:	ldr	w0, [sp, #20]
   1ad80:	cmp	w0, #0x0
   1ad84:	cset	w0, eq  // eq = none
   1ad88:	and	w0, w0, #0xff
   1ad8c:	ldp	x29, x30, [sp], #32
   1ad90:	ret
   1ad94:	stp	x29, x30, [sp, #-80]!
   1ad98:	mov	x29, sp
   1ad9c:	str	x0, [sp, #24]
   1ada0:	str	w1, [sp, #20]
   1ada4:	strb	w2, [sp, #19]
   1ada8:	ldr	x0, [sp, #24]
   1adac:	ldr	x0, [x0]
   1adb0:	cmp	x0, #0x0
   1adb4:	b.eq	1adc4 <plugin_init@@Base+0x9d84>  // b.none
   1adb8:	ldr	x0, [sp, #24]
   1adbc:	ldr	x0, [x0]
   1adc0:	b	1adc8 <plugin_init@@Base+0x9d88>
   1adc4:	mov	x0, #0x0                   	// #0
   1adc8:	ldrb	w2, [sp, #19]
   1adcc:	ldr	w1, [sp, #20]
   1add0:	bl	11f6c <plugin_init@@Base+0xf2c>
   1add4:	str	w0, [sp, #76]
   1add8:	ldr	w0, [sp, #76]
   1addc:	cmp	w0, #0x0
   1ade0:	b.ne	1adfc <plugin_init@@Base+0x9dbc>  // b.any
   1ade4:	ldr	x0, [sp, #24]
   1ade8:	ldr	x0, [x0]
   1adec:	bl	62a0 <_Z8ggc_freePv@plt>
   1adf0:	ldr	x0, [sp, #24]
   1adf4:	str	xzr, [x0]
   1adf8:	b	1aeb0 <plugin_init@@Base+0x9e70>
   1adfc:	ldr	w0, [sp, #76]
   1ae00:	bl	1b660 <plugin_init@@Base+0xa620>
   1ae04:	str	x0, [sp, #64]
   1ae08:	ldr	x0, [sp, #64]
   1ae0c:	bl	6a80 <_Z20ggc_round_alloc_sizem@plt>
   1ae10:	str	x0, [sp, #64]
   1ae14:	mov	x0, #0x8                   	// #8
   1ae18:	str	x0, [sp, #56]
   1ae1c:	mov	x0, #0x8                   	// #8
   1ae20:	str	x0, [sp, #48]
   1ae24:	ldr	x1, [sp, #64]
   1ae28:	ldr	x0, [sp, #56]
   1ae2c:	sub	x1, x1, x0
   1ae30:	ldr	x0, [sp, #48]
   1ae34:	udiv	x0, x1, x0
   1ae38:	str	w0, [sp, #76]
   1ae3c:	ldr	w1, [sp, #76]
   1ae40:	ldr	x0, [sp, #48]
   1ae44:	mul	x0, x1, x0
   1ae48:	ldr	x1, [sp, #56]
   1ae4c:	add	x0, x1, x0
   1ae50:	str	x0, [sp, #64]
   1ae54:	ldr	x0, [sp, #24]
   1ae58:	ldr	x0, [x0]
   1ae5c:	cmp	x0, #0x0
   1ae60:	b.eq	1ae74 <plugin_init@@Base+0x9e34>  // b.none
   1ae64:	ldr	x0, [sp, #24]
   1ae68:	ldr	x0, [x0]
   1ae6c:	bl	1b67c <plugin_init@@Base+0xa63c>
   1ae70:	b	1ae78 <plugin_init@@Base+0x9e38>
   1ae74:	mov	w0, #0x0                   	// #0
   1ae78:	str	w0, [sp, #44]
   1ae7c:	ldr	x0, [sp, #24]
   1ae80:	ldr	x0, [x0]
   1ae84:	ldr	x1, [sp, #64]
   1ae88:	bl	6080 <_Z11ggc_reallocPvm@plt>
   1ae8c:	mov	x1, x0
   1ae90:	ldr	x0, [sp, #24]
   1ae94:	str	x1, [x0]
   1ae98:	ldr	x0, [sp, #24]
   1ae9c:	ldr	x0, [x0]
   1aea0:	mov	w3, #0x0                   	// #0
   1aea4:	ldr	w2, [sp, #44]
   1aea8:	ldr	w1, [sp, #76]
   1aeac:	bl	1b694 <plugin_init@@Base+0xa654>
   1aeb0:	ldp	x29, x30, [sp], #80
   1aeb4:	ret
   1aeb8:	sub	sp, sp, #0x10
   1aebc:	str	x0, [sp, #8]
   1aec0:	str	w1, [sp, #4]
   1aec4:	ldr	x0, [sp, #8]
   1aec8:	ldr	w0, [x0]
   1aecc:	ubfx	x0, x0, #0, #31
   1aed0:	mov	w1, w0
   1aed4:	ldr	x0, [sp, #8]
   1aed8:	ldr	w0, [x0, #4]
   1aedc:	sub	w0, w1, w0
   1aee0:	ldr	w1, [sp, #4]
   1aee4:	cmp	w1, w0
   1aee8:	cset	w0, ls  // ls = plast
   1aeec:	and	w0, w0, #0xff
   1aef0:	add	sp, sp, #0x10
   1aef4:	ret
   1aef8:	stp	x29, x30, [sp, #-32]!
   1aefc:	mov	x29, sp
   1af00:	str	x0, [sp, #24]
   1af04:	str	w1, [sp, #20]
   1af08:	ldr	x0, [sp, #24]
   1af0c:	cmp	x0, #0x0
   1af10:	b.eq	1af34 <plugin_init@@Base+0x9ef4>  // b.none
   1af14:	ldr	w1, [sp, #20]
   1af18:	ldr	x0, [sp, #24]
   1af1c:	bl	1b070 <plugin_init@@Base+0xa030>
   1af20:	and	w0, w0, #0xff
   1af24:	cmp	w0, #0x0
   1af28:	cset	w0, ne  // ne = any
   1af2c:	and	w0, w0, #0xff
   1af30:	b	1af44 <plugin_init@@Base+0x9f04>
   1af34:	ldr	w0, [sp, #20]
   1af38:	cmp	w0, #0x0
   1af3c:	cset	w0, eq  // eq = none
   1af40:	and	w0, w0, #0xff
   1af44:	ldp	x29, x30, [sp], #32
   1af48:	ret
   1af4c:	stp	x29, x30, [sp, #-80]!
   1af50:	mov	x29, sp
   1af54:	str	x0, [sp, #24]
   1af58:	str	w1, [sp, #20]
   1af5c:	strb	w2, [sp, #19]
   1af60:	ldr	x0, [sp, #24]
   1af64:	ldr	x0, [x0]
   1af68:	cmp	x0, #0x0
   1af6c:	b.eq	1af7c <plugin_init@@Base+0x9f3c>  // b.none
   1af70:	ldr	x0, [sp, #24]
   1af74:	ldr	x0, [x0]
   1af78:	b	1af80 <plugin_init@@Base+0x9f40>
   1af7c:	mov	x0, #0x0                   	// #0
   1af80:	ldrb	w2, [sp, #19]
   1af84:	ldr	w1, [sp, #20]
   1af88:	bl	11f6c <plugin_init@@Base+0xf2c>
   1af8c:	str	w0, [sp, #76]
   1af90:	ldr	w0, [sp, #76]
   1af94:	cmp	w0, #0x0
   1af98:	b.ne	1afb4 <plugin_init@@Base+0x9f74>  // b.any
   1af9c:	ldr	x0, [sp, #24]
   1afa0:	ldr	x0, [x0]
   1afa4:	bl	62a0 <_Z8ggc_freePv@plt>
   1afa8:	ldr	x0, [sp, #24]
   1afac:	str	xzr, [x0]
   1afb0:	b	1b068 <plugin_init@@Base+0xa028>
   1afb4:	ldr	w0, [sp, #76]
   1afb8:	bl	1b6f4 <plugin_init@@Base+0xa6b4>
   1afbc:	str	x0, [sp, #64]
   1afc0:	ldr	x0, [sp, #64]
   1afc4:	bl	6a80 <_Z20ggc_round_alloc_sizem@plt>
   1afc8:	str	x0, [sp, #64]
   1afcc:	mov	x0, #0x8                   	// #8
   1afd0:	str	x0, [sp, #56]
   1afd4:	mov	x0, #0x10                  	// #16
   1afd8:	str	x0, [sp, #48]
   1afdc:	ldr	x1, [sp, #64]
   1afe0:	ldr	x0, [sp, #56]
   1afe4:	sub	x1, x1, x0
   1afe8:	ldr	x0, [sp, #48]
   1afec:	udiv	x0, x1, x0
   1aff0:	str	w0, [sp, #76]
   1aff4:	ldr	w1, [sp, #76]
   1aff8:	ldr	x0, [sp, #48]
   1affc:	mul	x0, x1, x0
   1b000:	ldr	x1, [sp, #56]
   1b004:	add	x0, x1, x0
   1b008:	str	x0, [sp, #64]
   1b00c:	ldr	x0, [sp, #24]
   1b010:	ldr	x0, [x0]
   1b014:	cmp	x0, #0x0
   1b018:	b.eq	1b02c <plugin_init@@Base+0x9fec>  // b.none
   1b01c:	ldr	x0, [sp, #24]
   1b020:	ldr	x0, [x0]
   1b024:	bl	1b710 <plugin_init@@Base+0xa6d0>
   1b028:	b	1b030 <plugin_init@@Base+0x9ff0>
   1b02c:	mov	w0, #0x0                   	// #0
   1b030:	str	w0, [sp, #44]
   1b034:	ldr	x0, [sp, #24]
   1b038:	ldr	x0, [x0]
   1b03c:	ldr	x1, [sp, #64]
   1b040:	bl	6080 <_Z11ggc_reallocPvm@plt>
   1b044:	mov	x1, x0
   1b048:	ldr	x0, [sp, #24]
   1b04c:	str	x1, [x0]
   1b050:	ldr	x0, [sp, #24]
   1b054:	ldr	x0, [x0]
   1b058:	mov	w3, #0x0                   	// #0
   1b05c:	ldr	w2, [sp, #44]
   1b060:	ldr	w1, [sp, #76]
   1b064:	bl	1b728 <plugin_init@@Base+0xa6e8>
   1b068:	ldp	x29, x30, [sp], #80
   1b06c:	ret
   1b070:	sub	sp, sp, #0x10
   1b074:	str	x0, [sp, #8]
   1b078:	str	w1, [sp, #4]
   1b07c:	ldr	x0, [sp, #8]
   1b080:	ldr	w0, [x0]
   1b084:	ubfx	x0, x0, #0, #31
   1b088:	mov	w1, w0
   1b08c:	ldr	x0, [sp, #8]
   1b090:	ldr	w0, [x0, #4]
   1b094:	sub	w0, w1, w0
   1b098:	ldr	w1, [sp, #4]
   1b09c:	cmp	w1, w0
   1b0a0:	cset	w0, ls  // ls = plast
   1b0a4:	and	w0, w0, #0xff
   1b0a8:	add	sp, sp, #0x10
   1b0ac:	ret
   1b0b0:	stp	x29, x30, [sp, #-48]!
   1b0b4:	mov	x29, sp
   1b0b8:	str	x0, [sp, #24]
   1b0bc:	str	x1, [sp, #16]
   1b0c0:	add	x0, sp, #0x28
   1b0c4:	mov	x1, x0
   1b0c8:	ldr	x0, [sp, #24]
   1b0cc:	bl	1c09c <plugin_init@@Base+0xb05c>
   1b0d0:	cmp	w0, #0x0
   1b0d4:	cset	w0, eq  // eq = none
   1b0d8:	and	w0, w0, #0xff
   1b0dc:	cmp	w0, #0x0
   1b0e0:	b.eq	1b0ec <plugin_init@@Base+0xa0ac>  // b.none
   1b0e4:	mov	w0, #0x0                   	// #0
   1b0e8:	b	1b100 <plugin_init@@Base+0xa0c0>
   1b0ec:	ldr	x0, [sp, #40]
   1b0f0:	mov	w1, w0
   1b0f4:	ldr	x0, [sp, #16]
   1b0f8:	str	w1, [x0]
   1b0fc:	mov	w0, #0x1                   	// #1
   1b100:	ldp	x29, x30, [sp], #48
   1b104:	ret
   1b108:	stp	x29, x30, [sp, #-48]!
   1b10c:	mov	x29, sp
   1b110:	str	x0, [sp, #24]
   1b114:	str	x1, [sp, #16]
   1b118:	add	x0, sp, #0x28
   1b11c:	mov	x1, x0
   1b120:	ldr	x0, [sp, #24]
   1b124:	bl	1c09c <plugin_init@@Base+0xb05c>
   1b128:	cmp	w0, #0x0
   1b12c:	cset	w0, eq  // eq = none
   1b130:	and	w0, w0, #0xff
   1b134:	cmp	w0, #0x0
   1b138:	b.eq	1b144 <plugin_init@@Base+0xa104>  // b.none
   1b13c:	mov	w0, #0x0                   	// #0
   1b140:	b	1b154 <plugin_init@@Base+0xa114>
   1b144:	ldr	x1, [sp, #40]
   1b148:	ldr	x0, [sp, #16]
   1b14c:	str	x1, [x0]
   1b150:	mov	w0, #0x1                   	// #1
   1b154:	ldp	x29, x30, [sp], #48
   1b158:	ret
   1b15c:	sub	sp, sp, #0x10
   1b160:	str	x0, [sp, #8]
   1b164:	ldr	x0, [sp, #8]
   1b168:	ldr	x0, [x0, #8]
   1b16c:	add	sp, sp, #0x10
   1b170:	ret
   1b174:	sub	sp, sp, #0x10
   1b178:	str	x0, [sp, #8]
   1b17c:	ldr	x0, [sp, #8]
   1b180:	ldr	x1, [x0, #16]
   1b184:	ldr	x0, [sp, #8]
   1b188:	ldr	x0, [x0, #24]
   1b18c:	sub	x0, x1, x0
   1b190:	add	sp, sp, #0x10
   1b194:	ret
   1b198:	sub	sp, sp, #0x10
   1b19c:	str	x0, [sp, #8]
   1b1a0:	str	w1, [sp, #4]
   1b1a4:	ldr	w0, [sp, #4]
   1b1a8:	lsl	w0, w0, #3
   1b1ac:	mov	w1, w0
   1b1b0:	ldr	x0, [sp, #8]
   1b1b4:	ldr	x0, [x0, #8]
   1b1b8:	cmp	x1, x0
   1b1bc:	b.cs	1b1d8 <plugin_init@@Base+0xa198>  // b.hs, b.nlast
   1b1c0:	ldr	x0, [sp, #8]
   1b1c4:	ldr	x0, [x0, #8]
   1b1c8:	cmp	x0, #0x20
   1b1cc:	b.ls	1b1d8 <plugin_init@@Base+0xa198>  // b.plast
   1b1d0:	mov	w0, #0x1                   	// #1
   1b1d4:	b	1b1dc <plugin_init@@Base+0xa19c>
   1b1d8:	mov	w0, #0x0                   	// #0
   1b1dc:	add	sp, sp, #0x10
   1b1e0:	ret
   1b1e4:	stp	x29, x30, [sp, #-64]!
   1b1e8:	mov	x29, sp
   1b1ec:	str	x0, [sp, #24]
   1b1f0:	str	w1, [sp, #20]
   1b1f4:	ldr	x0, [sp, #24]
   1b1f8:	ldr	w0, [x0, #40]
   1b1fc:	mov	w1, w0
   1b200:	ldr	w0, [sp, #20]
   1b204:	bl	12098 <plugin_init@@Base+0x1058>
   1b208:	str	w0, [sp, #60]
   1b20c:	ldr	x0, [sp, #24]
   1b210:	ldr	x0, [x0, #8]
   1b214:	str	x0, [sp, #48]
   1b218:	ldr	x0, [sp, #24]
   1b21c:	ldr	x1, [x0]
   1b220:	ldr	w0, [sp, #60]
   1b224:	lsl	x0, x0, #3
   1b228:	add	x0, x1, x0
   1b22c:	str	x0, [sp, #40]
   1b230:	ldr	x0, [sp, #40]
   1b234:	bl	196a8 <plugin_init@@Base+0x8668>
   1b238:	and	w0, w0, #0xff
   1b23c:	cmp	w0, #0x0
   1b240:	b.eq	1b24c <plugin_init@@Base+0xa20c>  // b.none
   1b244:	ldr	x0, [sp, #40]
   1b248:	b	1b2c8 <plugin_init@@Base+0xa288>
   1b24c:	ldr	x0, [sp, #24]
   1b250:	ldr	w0, [x0, #40]
   1b254:	mov	w1, w0
   1b258:	ldr	w0, [sp, #20]
   1b25c:	bl	120ec <plugin_init@@Base+0x10ac>
   1b260:	str	w0, [sp, #36]
   1b264:	ldr	w1, [sp, #60]
   1b268:	ldr	w0, [sp, #36]
   1b26c:	add	w0, w1, w0
   1b270:	str	w0, [sp, #60]
   1b274:	ldr	w0, [sp, #60]
   1b278:	ldr	x1, [sp, #48]
   1b27c:	cmp	x1, x0
   1b280:	b.hi	1b298 <plugin_init@@Base+0xa258>  // b.pmore
   1b284:	ldr	x0, [sp, #48]
   1b288:	mov	w1, w0
   1b28c:	ldr	w0, [sp, #60]
   1b290:	sub	w0, w0, w1
   1b294:	str	w0, [sp, #60]
   1b298:	ldr	x0, [sp, #24]
   1b29c:	ldr	x1, [x0]
   1b2a0:	ldr	w0, [sp, #60]
   1b2a4:	lsl	x0, x0, #3
   1b2a8:	add	x0, x1, x0
   1b2ac:	str	x0, [sp, #40]
   1b2b0:	ldr	x0, [sp, #40]
   1b2b4:	bl	196a8 <plugin_init@@Base+0x8668>
   1b2b8:	and	w0, w0, #0xff
   1b2bc:	cmp	w0, #0x0
   1b2c0:	b.eq	1b264 <plugin_init@@Base+0xa224>  // b.none
   1b2c4:	ldr	x0, [sp, #40]
   1b2c8:	ldp	x29, x30, [sp], #64
   1b2cc:	ret
   1b2d0:	sub	sp, sp, #0x10
   1b2d4:	str	x0, [sp, #8]
   1b2d8:	ldr	x0, [sp, #8]
   1b2dc:	str	xzr, [x0]
   1b2e0:	nop
   1b2e4:	add	sp, sp, #0x10
   1b2e8:	ret
   1b2ec:	sub	sp, sp, #0x10
   1b2f0:	str	x0, [sp, #8]
   1b2f4:	ldr	x0, [sp, #8]
   1b2f8:	ldr	x0, [x0, #8]
   1b2fc:	add	sp, sp, #0x10
   1b300:	ret
   1b304:	sub	sp, sp, #0x10
   1b308:	str	x0, [sp, #8]
   1b30c:	ldr	x0, [sp, #8]
   1b310:	ldr	x1, [x0, #16]
   1b314:	ldr	x0, [sp, #8]
   1b318:	ldr	x0, [x0, #24]
   1b31c:	sub	x0, x1, x0
   1b320:	add	sp, sp, #0x10
   1b324:	ret
   1b328:	sub	sp, sp, #0x10
   1b32c:	str	x0, [sp, #8]
   1b330:	str	w1, [sp, #4]
   1b334:	ldr	w0, [sp, #4]
   1b338:	lsl	w0, w0, #3
   1b33c:	mov	w1, w0
   1b340:	ldr	x0, [sp, #8]
   1b344:	ldr	x0, [x0, #8]
   1b348:	cmp	x1, x0
   1b34c:	b.cs	1b368 <plugin_init@@Base+0xa328>  // b.hs, b.nlast
   1b350:	ldr	x0, [sp, #8]
   1b354:	ldr	x0, [x0, #8]
   1b358:	cmp	x0, #0x20
   1b35c:	b.ls	1b368 <plugin_init@@Base+0xa328>  // b.plast
   1b360:	mov	w0, #0x1                   	// #1
   1b364:	b	1b36c <plugin_init@@Base+0xa32c>
   1b368:	mov	w0, #0x0                   	// #0
   1b36c:	add	sp, sp, #0x10
   1b370:	ret
   1b374:	stp	x29, x30, [sp, #-64]!
   1b378:	mov	x29, sp
   1b37c:	str	x0, [sp, #24]
   1b380:	str	w1, [sp, #20]
   1b384:	ldr	x0, [sp, #24]
   1b388:	ldr	w0, [x0, #40]
   1b38c:	mov	w1, w0
   1b390:	ldr	w0, [sp, #20]
   1b394:	bl	12098 <plugin_init@@Base+0x1058>
   1b398:	str	w0, [sp, #60]
   1b39c:	ldr	x0, [sp, #24]
   1b3a0:	ldr	x0, [x0, #8]
   1b3a4:	str	x0, [sp, #48]
   1b3a8:	ldr	x0, [sp, #24]
   1b3ac:	ldr	x1, [x0]
   1b3b0:	ldr	w0, [sp, #60]
   1b3b4:	lsl	x0, x0, #3
   1b3b8:	add	x0, x1, x0
   1b3bc:	str	x0, [sp, #40]
   1b3c0:	ldr	x0, [sp, #40]
   1b3c4:	bl	197d0 <plugin_init@@Base+0x8790>
   1b3c8:	and	w0, w0, #0xff
   1b3cc:	cmp	w0, #0x0
   1b3d0:	b.eq	1b3dc <plugin_init@@Base+0xa39c>  // b.none
   1b3d4:	ldr	x0, [sp, #40]
   1b3d8:	b	1b458 <plugin_init@@Base+0xa418>
   1b3dc:	ldr	x0, [sp, #24]
   1b3e0:	ldr	w0, [x0, #40]
   1b3e4:	mov	w1, w0
   1b3e8:	ldr	w0, [sp, #20]
   1b3ec:	bl	120ec <plugin_init@@Base+0x10ac>
   1b3f0:	str	w0, [sp, #36]
   1b3f4:	ldr	w1, [sp, #60]
   1b3f8:	ldr	w0, [sp, #36]
   1b3fc:	add	w0, w1, w0
   1b400:	str	w0, [sp, #60]
   1b404:	ldr	w0, [sp, #60]
   1b408:	ldr	x1, [sp, #48]
   1b40c:	cmp	x1, x0
   1b410:	b.hi	1b428 <plugin_init@@Base+0xa3e8>  // b.pmore
   1b414:	ldr	x0, [sp, #48]
   1b418:	mov	w1, w0
   1b41c:	ldr	w0, [sp, #60]
   1b420:	sub	w0, w0, w1
   1b424:	str	w0, [sp, #60]
   1b428:	ldr	x0, [sp, #24]
   1b42c:	ldr	x1, [x0]
   1b430:	ldr	w0, [sp, #60]
   1b434:	lsl	x0, x0, #3
   1b438:	add	x0, x1, x0
   1b43c:	str	x0, [sp, #40]
   1b440:	ldr	x0, [sp, #40]
   1b444:	bl	197d0 <plugin_init@@Base+0x8790>
   1b448:	and	w0, w0, #0xff
   1b44c:	cmp	w0, #0x0
   1b450:	b.eq	1b3f4 <plugin_init@@Base+0xa3b4>  // b.none
   1b454:	ldr	x0, [sp, #40]
   1b458:	ldp	x29, x30, [sp], #64
   1b45c:	ret
   1b460:	sub	sp, sp, #0x10
   1b464:	str	x0, [sp, #8]
   1b468:	ldr	x0, [sp, #8]
   1b46c:	str	xzr, [x0]
   1b470:	nop
   1b474:	add	sp, sp, #0x10
   1b478:	ret
   1b47c:	mov	w0, #0x0                   	// #0
   1b480:	ret
   1b484:	sub	sp, sp, #0x10
   1b488:	str	x0, [sp, #8]
   1b48c:	nop
   1b490:	add	sp, sp, #0x10
   1b494:	ret
   1b498:	sub	sp, sp, #0x10
   1b49c:	str	x0, [sp, #8]
   1b4a0:	ldr	x0, [sp, #8]
   1b4a4:	str	xzr, [x0]
   1b4a8:	nop
   1b4ac:	add	sp, sp, #0x10
   1b4b0:	ret
   1b4b4:	mov	w0, #0x0                   	// #0
   1b4b8:	ret
   1b4bc:	sub	sp, sp, #0x10
   1b4c0:	str	x0, [sp, #8]
   1b4c4:	nop
   1b4c8:	add	sp, sp, #0x10
   1b4cc:	ret
   1b4d0:	mov	w0, #0x0                   	// #0
   1b4d4:	ret
   1b4d8:	sub	sp, sp, #0x10
   1b4dc:	str	x0, [sp, #8]
   1b4e0:	nop
   1b4e4:	add	sp, sp, #0x10
   1b4e8:	ret
   1b4ec:	sub	sp, sp, #0x10
   1b4f0:	str	x0, [sp, #8]
   1b4f4:	ldr	x0, [sp, #8]
   1b4f8:	ldr	x0, [x0, #8]
   1b4fc:	add	sp, sp, #0x10
   1b500:	ret
   1b504:	sub	sp, sp, #0x10
   1b508:	str	x0, [sp, #8]
   1b50c:	ldr	x0, [sp, #8]
   1b510:	ldr	x1, [x0, #16]
   1b514:	ldr	x0, [sp, #8]
   1b518:	ldr	x0, [x0, #24]
   1b51c:	sub	x0, x1, x0
   1b520:	add	sp, sp, #0x10
   1b524:	ret
   1b528:	sub	sp, sp, #0x10
   1b52c:	str	x0, [sp, #8]
   1b530:	str	w1, [sp, #4]
   1b534:	ldr	w0, [sp, #4]
   1b538:	lsl	w0, w0, #3
   1b53c:	mov	w1, w0
   1b540:	ldr	x0, [sp, #8]
   1b544:	ldr	x0, [x0, #8]
   1b548:	cmp	x1, x0
   1b54c:	b.cs	1b568 <plugin_init@@Base+0xa528>  // b.hs, b.nlast
   1b550:	ldr	x0, [sp, #8]
   1b554:	ldr	x0, [x0, #8]
   1b558:	cmp	x0, #0x20
   1b55c:	b.ls	1b568 <plugin_init@@Base+0xa528>  // b.plast
   1b560:	mov	w0, #0x1                   	// #1
   1b564:	b	1b56c <plugin_init@@Base+0xa52c>
   1b568:	mov	w0, #0x0                   	// #0
   1b56c:	add	sp, sp, #0x10
   1b570:	ret
   1b574:	stp	x29, x30, [sp, #-64]!
   1b578:	mov	x29, sp
   1b57c:	str	x0, [sp, #24]
   1b580:	str	w1, [sp, #20]
   1b584:	ldr	x0, [sp, #24]
   1b588:	ldr	w0, [x0, #40]
   1b58c:	mov	w1, w0
   1b590:	ldr	w0, [sp, #20]
   1b594:	bl	12098 <plugin_init@@Base+0x1058>
   1b598:	str	w0, [sp, #60]
   1b59c:	ldr	x0, [sp, #24]
   1b5a0:	ldr	x0, [x0, #8]
   1b5a4:	str	x0, [sp, #48]
   1b5a8:	ldr	x0, [sp, #24]
   1b5ac:	ldr	x1, [x0]
   1b5b0:	ldr	w0, [sp, #60]
   1b5b4:	lsl	x0, x0, #3
   1b5b8:	add	x0, x1, x0
   1b5bc:	str	x0, [sp, #40]
   1b5c0:	ldr	x0, [sp, #40]
   1b5c4:	bl	19574 <plugin_init@@Base+0x8534>
   1b5c8:	and	w0, w0, #0xff
   1b5cc:	cmp	w0, #0x0
   1b5d0:	b.eq	1b5dc <plugin_init@@Base+0xa59c>  // b.none
   1b5d4:	ldr	x0, [sp, #40]
   1b5d8:	b	1b658 <plugin_init@@Base+0xa618>
   1b5dc:	ldr	x0, [sp, #24]
   1b5e0:	ldr	w0, [x0, #40]
   1b5e4:	mov	w1, w0
   1b5e8:	ldr	w0, [sp, #20]
   1b5ec:	bl	120ec <plugin_init@@Base+0x10ac>
   1b5f0:	str	w0, [sp, #36]
   1b5f4:	ldr	w1, [sp, #60]
   1b5f8:	ldr	w0, [sp, #36]
   1b5fc:	add	w0, w1, w0
   1b600:	str	w0, [sp, #60]
   1b604:	ldr	w0, [sp, #60]
   1b608:	ldr	x1, [sp, #48]
   1b60c:	cmp	x1, x0
   1b610:	b.hi	1b628 <plugin_init@@Base+0xa5e8>  // b.pmore
   1b614:	ldr	x0, [sp, #48]
   1b618:	mov	w1, w0
   1b61c:	ldr	w0, [sp, #60]
   1b620:	sub	w0, w0, w1
   1b624:	str	w0, [sp, #60]
   1b628:	ldr	x0, [sp, #24]
   1b62c:	ldr	x1, [x0]
   1b630:	ldr	w0, [sp, #60]
   1b634:	lsl	x0, x0, #3
   1b638:	add	x0, x1, x0
   1b63c:	str	x0, [sp, #40]
   1b640:	ldr	x0, [sp, #40]
   1b644:	bl	19574 <plugin_init@@Base+0x8534>
   1b648:	and	w0, w0, #0xff
   1b64c:	cmp	w0, #0x0
   1b650:	b.eq	1b5f4 <plugin_init@@Base+0xa5b4>  // b.none
   1b654:	ldr	x0, [sp, #40]
   1b658:	ldp	x29, x30, [sp], #64
   1b65c:	ret
   1b660:	sub	sp, sp, #0x10
   1b664:	str	w0, [sp, #12]
   1b668:	ldr	w0, [sp, #12]
   1b66c:	add	x0, x0, #0x1
   1b670:	lsl	x0, x0, #3
   1b674:	add	sp, sp, #0x10
   1b678:	ret
   1b67c:	sub	sp, sp, #0x10
   1b680:	str	x0, [sp, #8]
   1b684:	ldr	x0, [sp, #8]
   1b688:	ldr	w0, [x0, #4]
   1b68c:	add	sp, sp, #0x10
   1b690:	ret
   1b694:	sub	sp, sp, #0x20
   1b698:	str	x0, [sp, #24]
   1b69c:	str	w1, [sp, #20]
   1b6a0:	str	w2, [sp, #16]
   1b6a4:	str	w3, [sp, #12]
   1b6a8:	ldr	w0, [sp, #20]
   1b6ac:	and	w2, w0, #0x7fffffff
   1b6b0:	ldr	x1, [sp, #24]
   1b6b4:	ldr	w0, [x1]
   1b6b8:	bfxil	w0, w2, #0, #31
   1b6bc:	str	w0, [x1]
   1b6c0:	ldr	w0, [sp, #12]
   1b6c4:	and	w0, w0, #0x1
   1b6c8:	and	w2, w0, #0xff
   1b6cc:	ldr	x1, [sp, #24]
   1b6d0:	ldrb	w0, [x1, #3]
   1b6d4:	bfi	w0, w2, #7, #1
   1b6d8:	strb	w0, [x1, #3]
   1b6dc:	ldr	x0, [sp, #24]
   1b6e0:	ldr	w1, [sp, #16]
   1b6e4:	str	w1, [x0, #4]
   1b6e8:	nop
   1b6ec:	add	sp, sp, #0x20
   1b6f0:	ret
   1b6f4:	sub	sp, sp, #0x10
   1b6f8:	str	w0, [sp, #12]
   1b6fc:	ldr	w0, [sp, #12]
   1b700:	lsl	x0, x0, #4
   1b704:	add	x0, x0, #0x8
   1b708:	add	sp, sp, #0x10
   1b70c:	ret
   1b710:	sub	sp, sp, #0x10
   1b714:	str	x0, [sp, #8]
   1b718:	ldr	x0, [sp, #8]
   1b71c:	ldr	w0, [x0, #4]
   1b720:	add	sp, sp, #0x10
   1b724:	ret
   1b728:	sub	sp, sp, #0x20
   1b72c:	str	x0, [sp, #24]
   1b730:	str	w1, [sp, #20]
   1b734:	str	w2, [sp, #16]
   1b738:	str	w3, [sp, #12]
   1b73c:	ldr	w0, [sp, #20]
   1b740:	and	w2, w0, #0x7fffffff
   1b744:	ldr	x1, [sp, #24]
   1b748:	ldr	w0, [x1]
   1b74c:	bfxil	w0, w2, #0, #31
   1b750:	str	w0, [x1]
   1b754:	ldr	w0, [sp, #12]
   1b758:	and	w0, w0, #0x1
   1b75c:	and	w2, w0, #0xff
   1b760:	ldr	x1, [sp, #24]
   1b764:	ldrb	w0, [x1, #3]
   1b768:	bfi	w0, w2, #7, #1
   1b76c:	strb	w0, [x1, #3]
   1b770:	ldr	x0, [sp, #24]
   1b774:	ldr	w1, [sp, #16]
   1b778:	str	w1, [x0, #4]
   1b77c:	nop
   1b780:	add	sp, sp, #0x20
   1b784:	ret
   1b788:	stp	x29, x30, [sp, #-32]!
   1b78c:	mov	x29, sp
   1b790:	str	x0, [sp, #24]
   1b794:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1b798:	add	x1, x0, #0xc78
   1b79c:	ldr	x0, [sp, #24]
   1b7a0:	str	x1, [x0]
   1b7a4:	ldr	x0, [sp, #24]
   1b7a8:	add	x0, x0, #0x78
   1b7ac:	bl	12d48 <plugin_init@@Base+0x1d08>
   1b7b0:	ldr	x0, [sp, #24]
   1b7b4:	add	x0, x0, #0x48
   1b7b8:	bl	12b94 <plugin_init@@Base+0x1b54>
   1b7bc:	ldr	x0, [sp, #24]
   1b7c0:	add	x0, x0, #0x18
   1b7c4:	bl	129dc <plugin_init@@Base+0x199c>
   1b7c8:	ldr	x0, [sp, #24]
   1b7cc:	bl	1b9b0 <plugin_init@@Base+0xa970>
   1b7d0:	nop
   1b7d4:	ldp	x29, x30, [sp], #32
   1b7d8:	ret
   1b7dc:	stp	x29, x30, [sp, #-32]!
   1b7e0:	mov	x29, sp
   1b7e4:	str	x0, [sp, #24]
   1b7e8:	ldr	x0, [sp, #24]
   1b7ec:	bl	1b788 <plugin_init@@Base+0xa748>
   1b7f0:	mov	x1, #0xa8                  	// #168
   1b7f4:	ldr	x0, [sp, #24]
   1b7f8:	bl	6680 <_ZdlPvm@plt>
   1b7fc:	ldp	x29, x30, [sp], #32
   1b800:	ret
   1b804:	stp	x29, x30, [sp, #-48]!
   1b808:	mov	x29, sp
   1b80c:	str	x0, [sp, #24]
   1b810:	ldr	x0, [sp, #24]
   1b814:	str	x0, [sp, #40]
   1b818:	ldr	x0, [sp, #40]
   1b81c:	ldr	x0, [x0]
   1b820:	bl	6600 <htab_hash_string@plt>
   1b824:	ldp	x29, x30, [sp], #48
   1b828:	ret
   1b82c:	stp	x29, x30, [sp, #-48]!
   1b830:	mov	x29, sp
   1b834:	str	x0, [sp, #24]
   1b838:	str	x1, [sp, #16]
   1b83c:	ldr	x0, [sp, #24]
   1b840:	str	x0, [sp, #40]
   1b844:	ldr	x0, [sp, #16]
   1b848:	str	x0, [sp, #32]
   1b84c:	ldr	x0, [sp, #40]
   1b850:	ldr	x2, [x0]
   1b854:	ldr	x0, [sp, #32]
   1b858:	ldr	x0, [x0]
   1b85c:	mov	x1, x0
   1b860:	mov	x0, x2
   1b864:	bl	69e0 <strcmp@plt>
   1b868:	cmp	w0, #0x0
   1b86c:	cset	w0, eq  // eq = none
   1b870:	and	w0, w0, #0xff
   1b874:	ldp	x29, x30, [sp], #48
   1b878:	ret
   1b87c:	stp	x29, x30, [sp, #-32]!
   1b880:	mov	x29, sp
   1b884:	str	x0, [sp, #24]
   1b888:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1b88c:	ldr	x5, [x0, #3856]
   1b890:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1b894:	ldr	x4, [x0, #3992]
   1b898:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1b89c:	ldr	x3, [x0, #3856]
   1b8a0:	adrp	x0, 1b000 <plugin_init@@Base+0x9fc0>
   1b8a4:	add	x2, x0, #0x82c
   1b8a8:	adrp	x0, 1b000 <plugin_init@@Base+0x9fc0>
   1b8ac:	add	x1, x0, #0x804
   1b8b0:	mov	x0, #0xa                   	// #10
   1b8b4:	bl	6260 <htab_create_alloc@plt>
   1b8b8:	mov	x1, x0
   1b8bc:	ldr	x0, [sp, #24]
   1b8c0:	str	x1, [x0]
   1b8c4:	nop
   1b8c8:	ldp	x29, x30, [sp], #32
   1b8cc:	ret
   1b8d0:	stp	x29, x30, [sp, #-32]!
   1b8d4:	mov	x29, sp
   1b8d8:	str	x0, [sp, #24]
   1b8dc:	ldr	x0, [sp, #24]
   1b8e0:	ldr	x0, [x0]
   1b8e4:	bl	6c30 <htab_delete@plt>
   1b8e8:	nop
   1b8ec:	ldp	x29, x30, [sp], #32
   1b8f0:	ret
   1b8f4:	stp	x29, x30, [sp, #-80]!
   1b8f8:	mov	x29, sp
   1b8fc:	str	x0, [sp, #40]
   1b900:	str	x1, [sp, #32]
   1b904:	str	x2, [sp, #24]
   1b908:	ldr	x0, [sp, #32]
   1b90c:	str	x0, [sp, #56]
   1b910:	ldr	x0, [sp, #24]
   1b914:	str	x0, [sp, #64]
   1b918:	ldr	x0, [sp, #40]
   1b91c:	ldr	x0, [x0]
   1b920:	add	x1, sp, #0x38
   1b924:	mov	w2, #0x1                   	// #1
   1b928:	bl	6830 <htab_find_slot@plt>
   1b92c:	str	x0, [sp, #72]
   1b930:	mov	x0, #0x10                  	// #16
   1b934:	bl	6910 <xmalloc@plt>
   1b938:	mov	x1, x0
   1b93c:	ldr	x0, [sp, #72]
   1b940:	str	x1, [x0]
   1b944:	ldr	x0, [sp, #72]
   1b948:	ldr	x2, [x0]
   1b94c:	ldp	x0, x1, [sp, #56]
   1b950:	stp	x0, x1, [x2]
   1b954:	nop
   1b958:	ldp	x29, x30, [sp], #80
   1b95c:	ret
   1b960:	stp	x29, x30, [sp, #-64]!
   1b964:	mov	x29, sp
   1b968:	str	x0, [sp, #24]
   1b96c:	str	x1, [sp, #16]
   1b970:	ldr	x0, [sp, #16]
   1b974:	str	x0, [sp, #40]
   1b978:	ldr	x0, [sp, #24]
   1b97c:	ldr	x0, [x0]
   1b980:	add	x1, sp, #0x28
   1b984:	bl	6510 <htab_find@plt>
   1b988:	str	x0, [sp, #56]
   1b98c:	ldr	x0, [sp, #56]
   1b990:	cmp	x0, #0x0
   1b994:	b.ne	1b9a0 <plugin_init@@Base+0xa960>  // b.any
   1b998:	mov	x0, #0x0                   	// #0
   1b99c:	b	1b9a8 <plugin_init@@Base+0xa968>
   1b9a0:	ldr	x0, [sp, #56]
   1b9a4:	ldr	x0, [x0, #8]
   1b9a8:	ldp	x29, x30, [sp], #64
   1b9ac:	ret
   1b9b0:	stp	x29, x30, [sp, #-32]!
   1b9b4:	mov	x29, sp
   1b9b8:	str	x0, [sp, #24]
   1b9bc:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1b9c0:	add	x1, x0, #0xc50
   1b9c4:	ldr	x0, [sp, #24]
   1b9c8:	str	x1, [x0]
   1b9cc:	ldr	x0, [sp, #24]
   1b9d0:	add	x0, x0, #0x10
   1b9d4:	bl	1b8d0 <plugin_init@@Base+0xa890>
   1b9d8:	nop
   1b9dc:	ldp	x29, x30, [sp], #32
   1b9e0:	ret
   1b9e4:	stp	x29, x30, [sp, #-32]!
   1b9e8:	mov	x29, sp
   1b9ec:	str	x0, [sp, #24]
   1b9f0:	ldr	x0, [sp, #24]
   1b9f4:	bl	1b9b0 <plugin_init@@Base+0xa970>
   1b9f8:	mov	x1, #0x18                  	// #24
   1b9fc:	ldr	x0, [sp, #24]
   1ba00:	bl	6680 <_ZdlPvm@plt>
   1ba04:	ldp	x29, x30, [sp], #32
   1ba08:	ret
   1ba0c:	sub	sp, sp, #0x10
   1ba10:	str	x0, [sp, #8]
   1ba14:	str	x1, [sp]
   1ba18:	nop
   1ba1c:	add	sp, sp, #0x10
   1ba20:	ret
   1ba24:	stp	x29, x30, [sp, #-32]!
   1ba28:	mov	x29, sp
   1ba2c:	str	x0, [sp, #24]
   1ba30:	strb	w1, [sp, #23]
   1ba34:	ldr	x0, [sp, #24]
   1ba38:	ldr	w0, [x0, #8]
   1ba3c:	add	x1, sp, #0x17
   1ba40:	mov	x2, #0x1                   	// #1
   1ba44:	bl	6a30 <write@plt>
   1ba48:	cmp	x0, #0x1
   1ba4c:	cset	w0, ne  // ne = any
   1ba50:	and	w0, w0, #0xff
   1ba54:	cmp	w0, #0x0
   1ba58:	b.eq	1ba64 <plugin_init@@Base+0xaa24>  // b.none
   1ba5c:	mov	w0, #0x0                   	// #0
   1ba60:	b	1ba68 <plugin_init@@Base+0xaa28>
   1ba64:	mov	w0, #0x1                   	// #1
   1ba68:	ldp	x29, x30, [sp], #32
   1ba6c:	ret
   1ba70:	stp	x29, x30, [sp, #-48]!
   1ba74:	mov	x29, sp
   1ba78:	str	x0, [sp, #40]
   1ba7c:	str	x1, [sp, #32]
   1ba80:	str	w2, [sp, #28]
   1ba84:	ldr	x0, [sp, #40]
   1ba88:	ldr	w0, [x0, #8]
   1ba8c:	ldrsw	x1, [sp, #28]
   1ba90:	mov	x2, x1
   1ba94:	ldr	x1, [sp, #32]
   1ba98:	bl	6a30 <write@plt>
   1ba9c:	mov	x1, x0
   1baa0:	ldrsw	x0, [sp, #28]
   1baa4:	cmp	x1, x0
   1baa8:	cset	w0, ne  // ne = any
   1baac:	and	w0, w0, #0xff
   1bab0:	cmp	w0, #0x0
   1bab4:	b.eq	1bac0 <plugin_init@@Base+0xaa80>  // b.none
   1bab8:	mov	w0, #0x0                   	// #0
   1babc:	b	1bac4 <plugin_init@@Base+0xaa84>
   1bac0:	mov	w0, #0x1                   	// #1
   1bac4:	ldp	x29, x30, [sp], #48
   1bac8:	ret
   1bacc:	stp	x29, x30, [sp, #-48]!
   1bad0:	mov	x29, sp
   1bad4:	str	x0, [sp, #24]
   1bad8:	strb	w1, [sp, #23]
   1badc:	ldr	x0, [sp, #24]
   1bae0:	ldr	w0, [x0, #8]
   1bae4:	add	x1, sp, #0x2f
   1bae8:	mov	x2, #0x1                   	// #1
   1baec:	bl	6480 <read@plt>
   1baf0:	cmp	x0, #0x1
   1baf4:	b.ne	1bb08 <plugin_init@@Base+0xaac8>  // b.any
   1baf8:	ldrb	w0, [sp, #47]
   1bafc:	ldrb	w1, [sp, #23]
   1bb00:	cmp	w1, w0
   1bb04:	b.eq	1bb10 <plugin_init@@Base+0xaad0>  // b.none
   1bb08:	mov	w0, #0x1                   	// #1
   1bb0c:	b	1bb14 <plugin_init@@Base+0xaad4>
   1bb10:	mov	w0, #0x0                   	// #0
   1bb14:	cmp	w0, #0x0
   1bb18:	b.eq	1bb24 <plugin_init@@Base+0xaae4>  // b.none
   1bb1c:	mov	w0, #0x0                   	// #0
   1bb20:	b	1bb28 <plugin_init@@Base+0xaae8>
   1bb24:	mov	w0, #0x1                   	// #1
   1bb28:	ldp	x29, x30, [sp], #48
   1bb2c:	ret
   1bb30:	stp	x29, x30, [sp, #-48]!
   1bb34:	mov	x29, sp
   1bb38:	str	x0, [sp, #40]
   1bb3c:	str	x1, [sp, #32]
   1bb40:	str	w2, [sp, #28]
   1bb44:	ldr	x0, [sp, #40]
   1bb48:	ldr	w0, [x0, #8]
   1bb4c:	ldrsw	x1, [sp, #28]
   1bb50:	mov	x2, x1
   1bb54:	ldr	x1, [sp, #32]
   1bb58:	bl	6480 <read@plt>
   1bb5c:	mov	x1, x0
   1bb60:	ldrsw	x0, [sp, #28]
   1bb64:	cmp	x1, x0
   1bb68:	cset	w0, ne  // ne = any
   1bb6c:	and	w0, w0, #0xff
   1bb70:	cmp	w0, #0x0
   1bb74:	b.eq	1bb80 <plugin_init@@Base+0xab40>  // b.none
   1bb78:	mov	w0, #0x0                   	// #0
   1bb7c:	b	1bb84 <plugin_init@@Base+0xab44>
   1bb80:	mov	w0, #0x1                   	// #1
   1bb84:	ldp	x29, x30, [sp], #48
   1bb88:	ret
   1bb8c:	sub	sp, sp, #0x4f0
   1bb90:	stp	x29, x30, [sp]
   1bb94:	mov	x29, sp
   1bb98:	stp	x19, x20, [sp, #16]
   1bb9c:	str	x0, [sp, #40]
   1bba0:	strb	w1, [sp, #39]
   1bba4:	add	x0, sp, #0x38
   1bba8:	str	x0, [sp, #1248]
   1bbac:	str	wzr, [sp, #1260]
   1bbb0:	ldr	w0, [sp, #1260]
   1bbb4:	cmp	w0, #0xf
   1bbb8:	b.hi	1bbd8 <plugin_init@@Base+0xab98>  // b.pmore
   1bbbc:	ldr	x0, [sp, #1248]
   1bbc0:	ldr	w1, [sp, #1260]
   1bbc4:	str	xzr, [x0, x1, lsl #3]
   1bbc8:	ldr	w0, [sp, #1260]
   1bbcc:	add	w0, w0, #0x1
   1bbd0:	str	w0, [sp, #1260]
   1bbd4:	b	1bbb0 <plugin_init@@Base+0xab70>
   1bbd8:	ldr	x0, [sp, #40]
   1bbdc:	ldr	w0, [x0, #8]
   1bbe0:	add	w1, w0, #0x3f
   1bbe4:	cmp	w0, #0x0
   1bbe8:	csel	w0, w1, w0, lt  // lt = tstop
   1bbec:	asr	w0, w0, #6
   1bbf0:	mov	w3, w0
   1bbf4:	sxtw	x0, w3
   1bbf8:	lsl	x0, x0, #3
   1bbfc:	add	x1, sp, #0x38
   1bc00:	ldr	x1, [x1, x0]
   1bc04:	ldr	x0, [sp, #40]
   1bc08:	ldr	w0, [x0, #8]
   1bc0c:	negs	w2, w0
   1bc10:	and	w0, w0, #0x3f
   1bc14:	and	w2, w2, #0x3f
   1bc18:	csneg	w0, w0, w2, mi  // mi = first
   1bc1c:	mov	x2, #0x1                   	// #1
   1bc20:	lsl	x0, x2, x0
   1bc24:	orr	x2, x1, x0
   1bc28:	sxtw	x0, w3
   1bc2c:	lsl	x0, x0, #3
   1bc30:	add	x1, sp, #0x38
   1bc34:	str	x2, [x1, x0]
   1bc38:	ldr	x0, [sp, #40]
   1bc3c:	ldr	w0, [x0, #12]
   1bc40:	cmn	w0, #0x1
   1bc44:	b.eq	1bca8 <plugin_init@@Base+0xac68>  // b.none
   1bc48:	ldr	x0, [sp, #40]
   1bc4c:	ldr	w0, [x0, #12]
   1bc50:	add	w1, w0, #0x3f
   1bc54:	cmp	w0, #0x0
   1bc58:	csel	w0, w1, w0, lt  // lt = tstop
   1bc5c:	asr	w0, w0, #6
   1bc60:	mov	w3, w0
   1bc64:	sxtw	x0, w3
   1bc68:	lsl	x0, x0, #3
   1bc6c:	add	x1, sp, #0x38
   1bc70:	ldr	x1, [x1, x0]
   1bc74:	ldr	x0, [sp, #40]
   1bc78:	ldr	w0, [x0, #12]
   1bc7c:	negs	w2, w0
   1bc80:	and	w0, w0, #0x3f
   1bc84:	and	w2, w2, #0x3f
   1bc88:	csneg	w0, w0, w2, mi  // mi = first
   1bc8c:	mov	x2, #0x1                   	// #1
   1bc90:	lsl	x0, x2, x0
   1bc94:	orr	x2, x1, x0
   1bc98:	sxtw	x0, w3
   1bc9c:	lsl	x0, x0, #3
   1bca0:	add	x1, sp, #0x38
   1bca4:	str	x2, [x1, x0]
   1bca8:	add	x0, sp, #0x38
   1bcac:	mov	x4, #0x0                   	// #0
   1bcb0:	mov	x3, #0x0                   	// #0
   1bcb4:	mov	x2, #0x0                   	// #0
   1bcb8:	mov	x1, x0
   1bcbc:	mov	w0, #0x400                 	// #1024
   1bcc0:	bl	6070 <select@plt>
   1bcc4:	str	w0, [sp, #1244]
   1bcc8:	ldr	w0, [sp, #1244]
   1bccc:	cmn	w0, #0x1
   1bcd0:	b.ne	1bcec <plugin_init@@Base+0xacac>  // b.any
   1bcd4:	bl	68a0 <__errno_location@plt>
   1bcd8:	ldr	w0, [x0]
   1bcdc:	cmp	w0, #0x4
   1bce0:	b.eq	1bf40 <plugin_init@@Base+0xaf00>  // b.none
   1bce4:	mov	w19, #0x0                   	// #0
   1bce8:	b	1bf48 <plugin_init@@Base+0xaf08>
   1bcec:	ldr	x0, [sp, #40]
   1bcf0:	ldr	w0, [x0, #12]
   1bcf4:	cmn	w0, #0x1
   1bcf8:	b.eq	1bdb4 <plugin_init@@Base+0xad74>  // b.none
   1bcfc:	ldr	x0, [sp, #40]
   1bd00:	ldr	w0, [x0, #12]
   1bd04:	add	w1, w0, #0x3f
   1bd08:	cmp	w0, #0x0
   1bd0c:	csel	w0, w1, w0, lt  // lt = tstop
   1bd10:	asr	w0, w0, #6
   1bd14:	sxtw	x0, w0
   1bd18:	lsl	x0, x0, #3
   1bd1c:	add	x1, sp, #0x38
   1bd20:	ldr	x1, [x1, x0]
   1bd24:	ldr	x0, [sp, #40]
   1bd28:	ldr	w0, [x0, #12]
   1bd2c:	negs	w2, w0
   1bd30:	and	w0, w0, #0x3f
   1bd34:	and	w2, w2, #0x3f
   1bd38:	csneg	w0, w0, w2, mi  // mi = first
   1bd3c:	mov	x2, #0x1                   	// #1
   1bd40:	lsl	x0, x2, x0
   1bd44:	and	x0, x1, x0
   1bd48:	cmp	x0, #0x0
   1bd4c:	b.eq	1bdb4 <plugin_init@@Base+0xad74>  // b.none
   1bd50:	ldr	x0, [sp, #40]
   1bd54:	ldr	w0, [x0, #12]
   1bd58:	add	x1, sp, #0xb8
   1bd5c:	mov	x2, #0x3ff                 	// #1023
   1bd60:	bl	6480 <read@plt>
   1bd64:	str	w0, [sp, #1240]
   1bd68:	ldr	w0, [sp, #1240]
   1bd6c:	cmp	w0, #0x0
   1bd70:	b.ge	1bd7c <plugin_init@@Base+0xad3c>  // b.tcont
   1bd74:	mov	w19, #0x0                   	// #0
   1bd78:	b	1bf48 <plugin_init@@Base+0xaf08>
   1bd7c:	ldr	w0, [sp, #1240]
   1bd80:	cmp	w0, #0x0
   1bd84:	b.le	1bdb4 <plugin_init@@Base+0xad74>
   1bd88:	ldrsw	x0, [sp, #1240]
   1bd8c:	add	x1, sp, #0xb8
   1bd90:	strb	wzr, [x1, x0]
   1bd94:	ldr	x0, [sp, #40]
   1bd98:	ldr	x0, [x0]
   1bd9c:	add	x0, x0, #0x10
   1bda0:	ldr	x2, [x0]
   1bda4:	add	x0, sp, #0xb8
   1bda8:	mov	x1, x0
   1bdac:	ldr	x0, [sp, #40]
   1bdb0:	blr	x2
   1bdb4:	ldr	x0, [sp, #40]
   1bdb8:	ldr	w0, [x0, #8]
   1bdbc:	add	w1, w0, #0x3f
   1bdc0:	cmp	w0, #0x0
   1bdc4:	csel	w0, w1, w0, lt  // lt = tstop
   1bdc8:	asr	w0, w0, #6
   1bdcc:	sxtw	x0, w0
   1bdd0:	lsl	x0, x0, #3
   1bdd4:	add	x1, sp, #0x38
   1bdd8:	ldr	x1, [x1, x0]
   1bddc:	ldr	x0, [sp, #40]
   1bde0:	ldr	w0, [x0, #8]
   1bde4:	negs	w2, w0
   1bde8:	and	w0, w0, #0x3f
   1bdec:	and	w2, w2, #0x3f
   1bdf0:	csneg	w0, w0, w2, mi  // mi = first
   1bdf4:	mov	x2, #0x1                   	// #1
   1bdf8:	lsl	x0, x2, x0
   1bdfc:	and	x0, x1, x0
   1be00:	cmp	x0, #0x0
   1be04:	b.eq	1bba4 <plugin_init@@Base+0xab64>  // b.none
   1be08:	ldr	x0, [sp, #40]
   1be0c:	ldr	w0, [x0, #8]
   1be10:	add	x1, sp, #0x4c7
   1be14:	mov	x2, #0x1                   	// #1
   1be18:	bl	6480 <read@plt>
   1be1c:	str	w0, [sp, #1236]
   1be20:	ldr	w0, [sp, #1236]
   1be24:	cmp	w0, #0x0
   1be28:	b.ne	1be48 <plugin_init@@Base+0xae08>  // b.any
   1be2c:	ldrb	w0, [sp, #39]
   1be30:	cmp	w0, #0x0
   1be34:	b.eq	1be40 <plugin_init@@Base+0xae00>  // b.none
   1be38:	mov	w19, #0x0                   	// #0
   1be3c:	b	1bf4c <plugin_init@@Base+0xaf0c>
   1be40:	mov	w19, #0x1                   	// #1
   1be44:	b	1bf4c <plugin_init@@Base+0xaf0c>
   1be48:	ldr	w0, [sp, #1236]
   1be4c:	cmp	w0, #0x1
   1be50:	b.eq	1be5c <plugin_init@@Base+0xae1c>  // b.none
   1be54:	mov	w19, #0x0                   	// #0
   1be58:	b	1bf4c <plugin_init@@Base+0xaf0c>
   1be5c:	ldrb	w0, [sp, #1223]
   1be60:	cmp	w0, #0x51
   1be64:	b.eq	1be8c <plugin_init@@Base+0xae4c>  // b.none
   1be68:	cmp	w0, #0x52
   1be6c:	b.ne	1bf38 <plugin_init@@Base+0xaef8>  // b.any
   1be70:	ldrb	w0, [sp, #39]
   1be74:	cmp	w0, #0x0
   1be78:	b.eq	1be84 <plugin_init@@Base+0xae44>  // b.none
   1be7c:	mov	w19, #0x1                   	// #1
   1be80:	b	1bf4c <plugin_init@@Base+0xaf0c>
   1be84:	mov	w19, #0x0                   	// #0
   1be88:	b	1bf4c <plugin_init@@Base+0xaf0c>
   1be8c:	add	x0, sp, #0x4b8
   1be90:	bl	1bf78 <plugin_init@@Base+0xaf38>
   1be94:	add	x0, sp, #0x4b8
   1be98:	ldr	x1, [sp, #40]
   1be9c:	bl	1bfa0 <plugin_init@@Base+0xaf60>
   1bea0:	cmp	w0, #0x0
   1bea4:	cset	w0, eq  // eq = none
   1bea8:	and	w0, w0, #0xff
   1beac:	cmp	w0, #0x0
   1beb0:	b.eq	1bec0 <plugin_init@@Base+0xae80>  // b.none
   1beb4:	mov	w19, #0x0                   	// #0
   1beb8:	mov	w20, #0x0                   	// #0
   1bebc:	b	1bf24 <plugin_init@@Base+0xaee4>
   1bec0:	ldr	x0, [sp, #40]
   1bec4:	add	x20, x0, #0x10
   1bec8:	add	x0, sp, #0x4b8
   1becc:	bl	1bfc8 <plugin_init@@Base+0xaf88>
   1bed0:	mov	x1, x0
   1bed4:	mov	x0, x20
   1bed8:	bl	1b960 <plugin_init@@Base+0xa920>
   1bedc:	str	x0, [sp, #1224]
   1bee0:	ldr	x0, [sp, #1224]
   1bee4:	cmp	x0, #0x0
   1bee8:	b.eq	1bf00 <plugin_init@@Base+0xaec0>  // b.none
   1beec:	ldr	x1, [sp, #1224]
   1bef0:	ldr	x0, [sp, #40]
   1bef4:	blr	x1
   1bef8:	cmp	w0, #0x0
   1befc:	b.ne	1bf08 <plugin_init@@Base+0xaec8>  // b.any
   1bf00:	mov	w0, #0x1                   	// #1
   1bf04:	b	1bf0c <plugin_init@@Base+0xaecc>
   1bf08:	mov	w0, #0x0                   	// #0
   1bf0c:	cmp	w0, #0x0
   1bf10:	b.eq	1bf20 <plugin_init@@Base+0xaee0>  // b.none
   1bf14:	mov	w19, #0x0                   	// #0
   1bf18:	mov	w20, #0x0                   	// #0
   1bf1c:	b	1bf24 <plugin_init@@Base+0xaee4>
   1bf20:	mov	w20, #0x1                   	// #1
   1bf24:	add	x0, sp, #0x4b8
   1bf28:	bl	1bf8c <plugin_init@@Base+0xaf4c>
   1bf2c:	cmp	w20, #0x1
   1bf30:	b.ne	1bf48 <plugin_init@@Base+0xaf08>  // b.any
   1bf34:	b	1bf44 <plugin_init@@Base+0xaf04>
   1bf38:	mov	w19, #0x0                   	// #0
   1bf3c:	b	1bf4c <plugin_init@@Base+0xaf0c>
   1bf40:	nop
   1bf44:	b	1bba4 <plugin_init@@Base+0xab64>
   1bf48:	nop
   1bf4c:	mov	w0, w19
   1bf50:	b	1bf68 <plugin_init@@Base+0xaf28>
   1bf54:	mov	x19, x0
   1bf58:	add	x0, sp, #0x4b8
   1bf5c:	bl	1bf8c <plugin_init@@Base+0xaf4c>
   1bf60:	mov	x0, x19
   1bf64:	bl	6c60 <_Unwind_Resume@plt>
   1bf68:	ldp	x19, x20, [sp, #16]
   1bf6c:	ldp	x29, x30, [sp]
   1bf70:	add	sp, sp, #0x4f0
   1bf74:	ret
   1bf78:	sub	sp, sp, #0x10
   1bf7c:	str	x0, [sp, #8]
   1bf80:	nop
   1bf84:	add	sp, sp, #0x10
   1bf88:	ret
   1bf8c:	sub	sp, sp, #0x10
   1bf90:	str	x0, [sp, #8]
   1bf94:	nop
   1bf98:	add	sp, sp, #0x10
   1bf9c:	ret
   1bfa0:	stp	x29, x30, [sp, #-32]!
   1bfa4:	mov	x29, sp
   1bfa8:	str	x0, [sp, #24]
   1bfac:	str	x1, [sp, #16]
   1bfb0:	ldr	x0, [sp, #24]
   1bfb4:	mov	x1, x0
   1bfb8:	ldr	x0, [sp, #16]
   1bfbc:	bl	1c1ac <plugin_init@@Base+0xb16c>
   1bfc0:	ldp	x29, x30, [sp], #32
   1bfc4:	ret
   1bfc8:	sub	sp, sp, #0x10
   1bfcc:	str	x0, [sp, #8]
   1bfd0:	ldr	x0, [sp, #8]
   1bfd4:	ldr	x0, [x0]
   1bfd8:	add	sp, sp, #0x10
   1bfdc:	ret
   1bfe0:	stp	x29, x30, [sp, #-48]!
   1bfe4:	mov	x29, sp
   1bfe8:	str	x0, [sp, #24]
   1bfec:	str	x1, [sp, #16]
   1bff0:	add	x0, sp, #0x28
   1bff4:	mov	x1, x0
   1bff8:	ldr	x0, [sp, #24]
   1bffc:	bl	135dc <plugin_init@@Base+0x259c>
   1c000:	cmp	w0, #0x0
   1c004:	cset	w0, eq  // eq = none
   1c008:	and	w0, w0, #0xff
   1c00c:	cmp	w0, #0x0
   1c010:	b.eq	1c01c <plugin_init@@Base+0xafdc>  // b.none
   1c014:	mov	w0, #0x0                   	// #0
   1c018:	b	1c03c <plugin_init@@Base+0xaffc>
   1c01c:	ldr	x0, [sp, #40]
   1c020:	ldr	x1, [sp, #16]
   1c024:	cmp	x1, x0
   1c028:	b.ne	1c034 <plugin_init@@Base+0xaff4>  // b.any
   1c02c:	mov	w0, #0x1                   	// #1
   1c030:	b	1c038 <plugin_init@@Base+0xaff8>
   1c034:	mov	w0, #0x0                   	// #0
   1c038:	nop
   1c03c:	ldp	x29, x30, [sp], #48
   1c040:	ret
   1c044:	stp	x29, x30, [sp, #-32]!
   1c048:	mov	x29, sp
   1c04c:	str	x0, [sp, #24]
   1c050:	str	x1, [sp, #16]
   1c054:	mov	w1, #0x69                  	// #105
   1c058:	ldr	x0, [sp, #24]
   1c05c:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   1c060:	cmp	w0, #0x0
   1c064:	cset	w0, eq  // eq = none
   1c068:	and	w0, w0, #0xff
   1c06c:	cmp	w0, #0x0
   1c070:	b.eq	1c07c <plugin_init@@Base+0xb03c>  // b.none
   1c074:	mov	w0, #0x0                   	// #0
   1c078:	b	1c094 <plugin_init@@Base+0xb054>
   1c07c:	add	x0, sp, #0x10
   1c080:	mov	w2, #0x8                   	// #8
   1c084:	mov	x1, x0
   1c088:	ldr	x0, [sp, #24]
   1c08c:	bl	1ba70 <plugin_init@@Base+0xaa30>
   1c090:	nop
   1c094:	ldp	x29, x30, [sp], #32
   1c098:	ret
   1c09c:	stp	x29, x30, [sp, #-32]!
   1c0a0:	mov	x29, sp
   1c0a4:	str	x0, [sp, #24]
   1c0a8:	str	x1, [sp, #16]
   1c0ac:	mov	w1, #0x69                  	// #105
   1c0b0:	ldr	x0, [sp, #24]
   1c0b4:	bl	1bacc <plugin_init@@Base+0xaa8c>
   1c0b8:	cmp	w0, #0x0
   1c0bc:	cset	w0, eq  // eq = none
   1c0c0:	and	w0, w0, #0xff
   1c0c4:	cmp	w0, #0x0
   1c0c8:	b.eq	1c0d4 <plugin_init@@Base+0xb094>  // b.none
   1c0cc:	mov	w0, #0x0                   	// #0
   1c0d0:	b	1c0e8 <plugin_init@@Base+0xb0a8>
   1c0d4:	mov	w2, #0x8                   	// #8
   1c0d8:	ldr	x1, [sp, #16]
   1c0dc:	ldr	x0, [sp, #24]
   1c0e0:	bl	1bb30 <plugin_init@@Base+0xaaf0>
   1c0e4:	nop
   1c0e8:	ldp	x29, x30, [sp], #32
   1c0ec:	ret
   1c0f0:	stp	x29, x30, [sp, #-48]!
   1c0f4:	mov	x29, sp
   1c0f8:	str	x0, [sp, #24]
   1c0fc:	str	x1, [sp, #16]
   1c100:	mov	w1, #0x73                  	// #115
   1c104:	ldr	x0, [sp, #24]
   1c108:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   1c10c:	cmp	w0, #0x0
   1c110:	cset	w0, eq  // eq = none
   1c114:	and	w0, w0, #0xff
   1c118:	cmp	w0, #0x0
   1c11c:	b.eq	1c128 <plugin_init@@Base+0xb0e8>  // b.none
   1c120:	mov	w0, #0x0                   	// #0
   1c124:	b	1c1a4 <plugin_init@@Base+0xb164>
   1c128:	ldr	x0, [sp, #16]
   1c12c:	cmp	x0, #0x0
   1c130:	b.eq	1c140 <plugin_init@@Base+0xb100>  // b.none
   1c134:	ldr	x0, [sp, #16]
   1c138:	bl	61a0 <strlen@plt>
   1c13c:	b	1c144 <plugin_init@@Base+0xb104>
   1c140:	mov	x0, #0xffffffffffffffff    	// #-1
   1c144:	str	x0, [sp, #40]
   1c148:	add	x0, sp, #0x28
   1c14c:	mov	w2, #0x8                   	// #8
   1c150:	mov	x1, x0
   1c154:	ldr	x0, [sp, #24]
   1c158:	bl	1ba70 <plugin_init@@Base+0xaa30>
   1c15c:	cmp	w0, #0x0
   1c160:	cset	w0, eq  // eq = none
   1c164:	and	w0, w0, #0xff
   1c168:	cmp	w0, #0x0
   1c16c:	b.eq	1c178 <plugin_init@@Base+0xb138>  // b.none
   1c170:	mov	w0, #0x0                   	// #0
   1c174:	b	1c1a4 <plugin_init@@Base+0xb164>
   1c178:	ldr	x0, [sp, #16]
   1c17c:	cmp	x0, #0x0
   1c180:	b.ne	1c18c <plugin_init@@Base+0xb14c>  // b.any
   1c184:	mov	w0, #0x1                   	// #1
   1c188:	b	1c1a4 <plugin_init@@Base+0xb164>
   1c18c:	ldr	x0, [sp, #40]
   1c190:	mov	w2, w0
   1c194:	ldr	x1, [sp, #16]
   1c198:	ldr	x0, [sp, #24]
   1c19c:	bl	1ba70 <plugin_init@@Base+0xaa30>
   1c1a0:	nop
   1c1a4:	ldp	x29, x30, [sp], #48
   1c1a8:	ret
   1c1ac:	stp	x29, x30, [sp, #-48]!
   1c1b0:	mov	x29, sp
   1c1b4:	str	x0, [sp, #24]
   1c1b8:	str	x1, [sp, #16]
   1c1bc:	mov	w1, #0x73                  	// #115
   1c1c0:	ldr	x0, [sp, #24]
   1c1c4:	bl	1bacc <plugin_init@@Base+0xaa8c>
   1c1c8:	cmp	w0, #0x0
   1c1cc:	cset	w0, eq  // eq = none
   1c1d0:	and	w0, w0, #0xff
   1c1d4:	cmp	w0, #0x0
   1c1d8:	b.eq	1c1e4 <plugin_init@@Base+0xb1a4>  // b.none
   1c1dc:	mov	w0, #0x0                   	// #0
   1c1e0:	b	1c2c4 <plugin_init@@Base+0xb284>
   1c1e4:	add	x0, sp, #0x20
   1c1e8:	mov	w2, #0x8                   	// #8
   1c1ec:	mov	x1, x0
   1c1f0:	ldr	x0, [sp, #24]
   1c1f4:	bl	1bb30 <plugin_init@@Base+0xaaf0>
   1c1f8:	cmp	w0, #0x0
   1c1fc:	cset	w0, eq  // eq = none
   1c200:	and	w0, w0, #0xff
   1c204:	cmp	w0, #0x0
   1c208:	b.eq	1c214 <plugin_init@@Base+0xb1d4>  // b.none
   1c20c:	mov	w0, #0x0                   	// #0
   1c210:	b	1c2c4 <plugin_init@@Base+0xb284>
   1c214:	ldr	x0, [sp, #32]
   1c218:	cmn	x0, #0x1
   1c21c:	b.ne	1c230 <plugin_init@@Base+0xb1f0>  // b.any
   1c220:	ldr	x0, [sp, #16]
   1c224:	str	xzr, [x0]
   1c228:	mov	w0, #0x1                   	// #1
   1c22c:	b	1c2c4 <plugin_init@@Base+0xb284>
   1c230:	ldr	x0, [sp, #32]
   1c234:	add	x2, x0, #0x1
   1c238:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1c23c:	ldr	x1, [x0, #3816]
   1c240:	mov	x0, x2
   1c244:	bl	6b00 <_ZnamRKSt9nothrow_t@plt>
   1c248:	str	x0, [sp, #40]
   1c24c:	ldr	x0, [sp, #40]
   1c250:	cmp	x0, #0x0
   1c254:	b.ne	1c260 <plugin_init@@Base+0xb220>  // b.any
   1c258:	mov	w0, #0x0                   	// #0
   1c25c:	b	1c2c4 <plugin_init@@Base+0xb284>
   1c260:	ldr	x0, [sp, #32]
   1c264:	mov	w2, w0
   1c268:	ldr	x1, [sp, #40]
   1c26c:	ldr	x0, [sp, #24]
   1c270:	bl	1bb30 <plugin_init@@Base+0xaaf0>
   1c274:	cmp	w0, #0x0
   1c278:	cset	w0, eq  // eq = none
   1c27c:	and	w0, w0, #0xff
   1c280:	cmp	w0, #0x0
   1c284:	b.eq	1c2a4 <plugin_init@@Base+0xb264>  // b.none
   1c288:	ldr	x0, [sp, #40]
   1c28c:	cmp	x0, #0x0
   1c290:	b.eq	1c29c <plugin_init@@Base+0xb25c>  // b.none
   1c294:	ldr	x0, [sp, #40]
   1c298:	bl	6850 <_ZdaPv@plt>
   1c29c:	mov	w0, #0x0                   	// #0
   1c2a0:	b	1c2c4 <plugin_init@@Base+0xb284>
   1c2a4:	ldr	x0, [sp, #32]
   1c2a8:	ldr	x1, [sp, #40]
   1c2ac:	add	x0, x1, x0
   1c2b0:	strb	wzr, [x0]
   1c2b4:	ldr	x0, [sp, #16]
   1c2b8:	ldr	x1, [sp, #40]
   1c2bc:	str	x1, [x0]
   1c2c0:	mov	w0, #0x1                   	// #1
   1c2c4:	ldp	x29, x30, [sp], #48
   1c2c8:	ret
   1c2cc:	stp	x29, x30, [sp, #-64]!
   1c2d0:	mov	x29, sp
   1c2d4:	str	x0, [sp, #40]
   1c2d8:	strb	w1, [sp, #39]
   1c2dc:	str	x2, [sp, #24]
   1c2e0:	ldrb	w1, [sp, #39]
   1c2e4:	ldr	x0, [sp, #40]
   1c2e8:	bl	1ba24 <plugin_init@@Base+0xa9e4>
   1c2ec:	cmp	w0, #0x0
   1c2f0:	cset	w0, eq  // eq = none
   1c2f4:	and	w0, w0, #0xff
   1c2f8:	cmp	w0, #0x0
   1c2fc:	b.eq	1c308 <plugin_init@@Base+0xb2c8>  // b.none
   1c300:	mov	w0, #0x0                   	// #0
   1c304:	b	1c344 <plugin_init@@Base+0xb304>
   1c308:	ldr	x0, [sp, #24]
   1c30c:	str	x0, [sp, #56]
   1c310:	add	x0, sp, #0x38
   1c314:	mov	w2, #0x8                   	// #8
   1c318:	mov	x1, x0
   1c31c:	ldr	x0, [sp, #40]
   1c320:	bl	1ba70 <plugin_init@@Base+0xaa30>
   1c324:	cmp	w0, #0x0
   1c328:	cset	w0, eq  // eq = none
   1c32c:	and	w0, w0, #0xff
   1c330:	cmp	w0, #0x0
   1c334:	b.eq	1c340 <plugin_init@@Base+0xb300>  // b.none
   1c338:	mov	w0, #0x0                   	// #0
   1c33c:	b	1c344 <plugin_init@@Base+0xb304>
   1c340:	mov	w0, #0x1                   	// #1
   1c344:	ldp	x29, x30, [sp], #64
   1c348:	ret
   1c34c:	stp	x29, x30, [sp, #-48]!
   1c350:	mov	x29, sp
   1c354:	str	x0, [sp, #40]
   1c358:	str	x1, [sp, #32]
   1c35c:	str	x2, [sp, #24]
   1c360:	ldr	x0, [sp, #32]
   1c364:	mov	w2, w0
   1c368:	ldr	x1, [sp, #24]
   1c36c:	ldr	x0, [sp, #40]
   1c370:	bl	1ba70 <plugin_init@@Base+0xaa30>
   1c374:	ldp	x29, x30, [sp], #48
   1c378:	ret
   1c37c:	stp	x29, x30, [sp, #-64]!
   1c380:	mov	x29, sp
   1c384:	str	x0, [sp, #40]
   1c388:	strb	w1, [sp, #39]
   1c38c:	str	x2, [sp, #24]
   1c390:	ldrb	w1, [sp, #39]
   1c394:	ldr	x0, [sp, #40]
   1c398:	bl	1bacc <plugin_init@@Base+0xaa8c>
   1c39c:	cmp	w0, #0x0
   1c3a0:	cset	w0, eq  // eq = none
   1c3a4:	and	w0, w0, #0xff
   1c3a8:	cmp	w0, #0x0
   1c3ac:	b.eq	1c3b8 <plugin_init@@Base+0xb378>  // b.none
   1c3b0:	mov	w0, #0x0                   	// #0
   1c3b4:	b	1c3f8 <plugin_init@@Base+0xb3b8>
   1c3b8:	add	x0, sp, #0x38
   1c3bc:	mov	w2, #0x8                   	// #8
   1c3c0:	mov	x1, x0
   1c3c4:	ldr	x0, [sp, #40]
   1c3c8:	bl	1bb30 <plugin_init@@Base+0xaaf0>
   1c3cc:	cmp	w0, #0x0
   1c3d0:	cset	w0, eq  // eq = none
   1c3d4:	and	w0, w0, #0xff
   1c3d8:	cmp	w0, #0x0
   1c3dc:	b.eq	1c3e8 <plugin_init@@Base+0xb3a8>  // b.none
   1c3e0:	mov	w0, #0x0                   	// #0
   1c3e4:	b	1c3f8 <plugin_init@@Base+0xb3b8>
   1c3e8:	ldr	x1, [sp, #56]
   1c3ec:	ldr	x0, [sp, #24]
   1c3f0:	str	x1, [x0]
   1c3f4:	mov	w0, #0x1                   	// #1
   1c3f8:	ldp	x29, x30, [sp], #64
   1c3fc:	ret
   1c400:	stp	x29, x30, [sp, #-48]!
   1c404:	mov	x29, sp
   1c408:	str	x0, [sp, #40]
   1c40c:	str	x1, [sp, #32]
   1c410:	str	x2, [sp, #24]
   1c414:	ldr	x0, [sp, #32]
   1c418:	mov	w2, w0
   1c41c:	ldr	x1, [sp, #24]
   1c420:	ldr	x0, [sp, #40]
   1c424:	bl	1bb30 <plugin_init@@Base+0xaaf0>
   1c428:	ldp	x29, x30, [sp], #48
   1c42c:	ret
   1c430:	stp	x29, x30, [sp, #-48]!
   1c434:	mov	x29, sp
   1c438:	str	x0, [sp, #24]
   1c43c:	str	x1, [sp, #16]
   1c440:	ldr	x0, [sp, #16]
   1c444:	cmp	x0, #0x0
   1c448:	b.eq	1c460 <plugin_init@@Base+0xb420>  // b.none
   1c44c:	ldr	x0, [sp, #16]
   1c450:	ldr	w0, [x0]
   1c454:	sxtw	x0, w0
   1c458:	str	x0, [sp, #40]
   1c45c:	b	1c468 <plugin_init@@Base+0xb428>
   1c460:	mov	x0, #0xffffffffffffffff    	// #-1
   1c464:	str	x0, [sp, #40]
   1c468:	ldr	x2, [sp, #40]
   1c46c:	mov	w1, #0x61                  	// #97
   1c470:	ldr	x0, [sp, #24]
   1c474:	bl	1c2cc <plugin_init@@Base+0xb28c>
   1c478:	cmp	w0, #0x0
   1c47c:	cset	w0, eq  // eq = none
   1c480:	and	w0, w0, #0xff
   1c484:	cmp	w0, #0x0
   1c488:	b.eq	1c494 <plugin_init@@Base+0xb454>  // b.none
   1c48c:	mov	w0, #0x0                   	// #0
   1c490:	b	1c4c8 <plugin_init@@Base+0xb488>
   1c494:	ldr	x0, [sp, #16]
   1c498:	cmp	x0, #0x0
   1c49c:	b.ne	1c4a8 <plugin_init@@Base+0xb468>  // b.any
   1c4a0:	mov	w0, #0x1                   	// #1
   1c4a4:	b	1c4c8 <plugin_init@@Base+0xb488>
   1c4a8:	ldr	x0, [sp, #40]
   1c4ac:	lsl	x1, x0, #3
   1c4b0:	ldr	x0, [sp, #16]
   1c4b4:	ldr	x0, [x0, #8]
   1c4b8:	mov	x2, x0
   1c4bc:	ldr	x0, [sp, #24]
   1c4c0:	bl	1c34c <plugin_init@@Base+0xb30c>
   1c4c4:	nop
   1c4c8:	ldp	x29, x30, [sp], #48
   1c4cc:	ret
   1c4d0:	stp	x29, x30, [sp, #-48]!
   1c4d4:	mov	x29, sp
   1c4d8:	str	x0, [sp, #24]
   1c4dc:	str	x1, [sp, #16]
   1c4e0:	add	x0, sp, #0x20
   1c4e4:	mov	x2, x0
   1c4e8:	mov	w1, #0x61                  	// #97
   1c4ec:	ldr	x0, [sp, #24]
   1c4f0:	bl	1c37c <plugin_init@@Base+0xb33c>
   1c4f4:	cmp	w0, #0x0
   1c4f8:	cset	w0, eq  // eq = none
   1c4fc:	and	w0, w0, #0xff
   1c500:	cmp	w0, #0x0
   1c504:	b.eq	1c510 <plugin_init@@Base+0xb4d0>  // b.none
   1c508:	mov	w0, #0x0                   	// #0
   1c50c:	b	1c5f0 <plugin_init@@Base+0xb5b0>
   1c510:	ldr	x0, [sp, #32]
   1c514:	cmn	x0, #0x1
   1c518:	b.ne	1c52c <plugin_init@@Base+0xb4ec>  // b.any
   1c51c:	ldr	x0, [sp, #16]
   1c520:	str	xzr, [x0]
   1c524:	mov	w0, #0x1                   	// #1
   1c528:	b	1c5f0 <plugin_init@@Base+0xb5b0>
   1c52c:	mov	x0, #0x10                  	// #16
   1c530:	bl	6650 <_Znwm@plt>
   1c534:	str	x0, [sp, #40]
   1c538:	ldr	x0, [sp, #32]
   1c53c:	mov	w1, w0
   1c540:	ldr	x0, [sp, #40]
   1c544:	str	w1, [x0]
   1c548:	ldr	x0, [sp, #32]
   1c54c:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
   1c550:	cmp	x0, x1
   1c554:	b.hi	1c5a0 <plugin_init@@Base+0xb560>  // b.pmore
   1c558:	lsl	x0, x0, #3
   1c55c:	bl	6000 <_Znam@plt>
   1c560:	mov	x1, x0
   1c564:	ldr	x0, [sp, #40]
   1c568:	str	x1, [x0, #8]
   1c56c:	ldr	x0, [sp, #32]
   1c570:	lsl	x1, x0, #3
   1c574:	ldr	x0, [sp, #40]
   1c578:	ldr	x0, [x0, #8]
   1c57c:	mov	x2, x0
   1c580:	ldr	x0, [sp, #24]
   1c584:	bl	1c400 <plugin_init@@Base+0xb3c0>
   1c588:	cmp	w0, #0x0
   1c58c:	cset	w0, eq  // eq = none
   1c590:	and	w0, w0, #0xff
   1c594:	cmp	w0, #0x0
   1c598:	b.eq	1c5e0 <plugin_init@@Base+0xb5a0>  // b.none
   1c59c:	b	1c5a4 <plugin_init@@Base+0xb564>
   1c5a0:	bl	6980 <__cxa_throw_bad_array_new_length@plt>
   1c5a4:	ldr	x0, [sp, #40]
   1c5a8:	ldr	x0, [x0, #8]
   1c5ac:	cmp	x0, #0x0
   1c5b0:	b.eq	1c5c0 <plugin_init@@Base+0xb580>  // b.none
   1c5b4:	ldr	x0, [sp, #40]
   1c5b8:	ldr	x0, [x0, #8]
   1c5bc:	bl	6850 <_ZdaPv@plt>
   1c5c0:	ldr	x0, [sp, #16]
   1c5c4:	ldr	x0, [x0]
   1c5c8:	cmp	x0, #0x0
   1c5cc:	b.eq	1c5d8 <plugin_init@@Base+0xb598>  // b.none
   1c5d0:	mov	x1, #0x10                  	// #16
   1c5d4:	bl	6680 <_ZdlPvm@plt>
   1c5d8:	mov	w0, #0x0                   	// #0
   1c5dc:	b	1c5f0 <plugin_init@@Base+0xb5b0>
   1c5e0:	ldr	x0, [sp, #16]
   1c5e4:	ldr	x1, [sp, #40]
   1c5e8:	str	x1, [x0]
   1c5ec:	mov	w0, #0x1                   	// #1
   1c5f0:	ldp	x29, x30, [sp], #48
   1c5f4:	ret
   1c5f8:	stp	x29, x30, [sp, #-48]!
   1c5fc:	mov	x29, sp
   1c600:	str	x0, [sp, #24]
   1c604:	str	wzr, [sp, #44]
   1c608:	mov	w0, #0x1e                  	// #30
   1c60c:	str	w0, [sp, #40]
   1c610:	b	1c670 <plugin_init@@Base+0xb630>
   1c614:	ldr	w1, [sp, #40]
   1c618:	ldr	w0, [sp, #44]
   1c61c:	sub	w0, w1, w0
   1c620:	lsr	w0, w0, #1
   1c624:	ldr	w1, [sp, #44]
   1c628:	add	w0, w1, w0
   1c62c:	str	w0, [sp, #36]
   1c630:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   1c634:	add	x1, x0, #0x200
   1c638:	ldr	w0, [sp, #36]
   1c63c:	lsl	x0, x0, #4
   1c640:	add	x0, x1, x0
   1c644:	ldr	w0, [x0]
   1c648:	mov	w0, w0
   1c64c:	ldr	x1, [sp, #24]
   1c650:	cmp	x1, x0
   1c654:	b.ls	1c668 <plugin_init@@Base+0xb628>  // b.plast
   1c658:	ldr	w0, [sp, #36]
   1c65c:	add	w0, w0, #0x1
   1c660:	str	w0, [sp, #44]
   1c664:	b	1c670 <plugin_init@@Base+0xb630>
   1c668:	ldr	w0, [sp, #36]
   1c66c:	str	w0, [sp, #40]
   1c670:	ldr	w1, [sp, #44]
   1c674:	ldr	w0, [sp, #40]
   1c678:	cmp	w1, w0
   1c67c:	b.ne	1c614 <plugin_init@@Base+0xb5d4>  // b.any
   1c680:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   1c684:	add	x1, x0, #0x200
   1c688:	ldr	w0, [sp, #44]
   1c68c:	lsl	x0, x0, #4
   1c690:	add	x0, x1, x0
   1c694:	ldr	w0, [x0]
   1c698:	mov	w0, w0
   1c69c:	ldr	x1, [sp, #24]
   1c6a0:	cmp	x1, x0
   1c6a4:	b.ls	1c6cc <plugin_init@@Base+0xb68c>  // b.plast
   1c6a8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1c6ac:	ldr	x0, [x0, #4040]
   1c6b0:	ldr	x3, [x0]
   1c6b4:	ldr	x2, [sp, #24]
   1c6b8:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   1c6bc:	add	x1, x0, #0x3e0
   1c6c0:	mov	x0, x3
   1c6c4:	bl	61c0 <fprintf@plt>
   1c6c8:	bl	6ad0 <abort@plt>
   1c6cc:	ldr	w0, [sp, #44]
   1c6d0:	ldp	x29, x30, [sp], #48
   1c6d4:	ret
   1c6d8:	sub	sp, sp, #0x10
   1c6dc:	str	x0, [sp, #8]
   1c6e0:	str	x1, [sp]
   1c6e4:	ldr	x1, [sp, #8]
   1c6e8:	ldr	x0, [sp]
   1c6ec:	cmp	x1, x0
   1c6f0:	cset	w0, eq  // eq = none
   1c6f4:	and	w0, w0, #0xff
   1c6f8:	add	sp, sp, #0x10
   1c6fc:	ret

000000000001c700 <htab_size@@Base>:
   1c700:	sub	sp, sp, #0x10
   1c704:	str	x0, [sp, #8]
   1c708:	ldr	x0, [sp, #8]
   1c70c:	ldr	x0, [x0, #32]
   1c710:	add	sp, sp, #0x10
   1c714:	ret

000000000001c718 <htab_elements@@Base>:
   1c718:	sub	sp, sp, #0x10
   1c71c:	str	x0, [sp, #8]
   1c720:	ldr	x0, [sp, #8]
   1c724:	ldr	x1, [x0, #40]
   1c728:	ldr	x0, [sp, #8]
   1c72c:	ldr	x0, [x0, #48]
   1c730:	sub	x0, x1, x0
   1c734:	add	sp, sp, #0x10
   1c738:	ret
   1c73c:	sub	sp, sp, #0x30
   1c740:	str	w0, [sp, #12]
   1c744:	str	w1, [sp, #8]
   1c748:	str	w2, [sp, #4]
   1c74c:	str	w3, [sp]
   1c750:	ldr	w1, [sp, #12]
   1c754:	ldr	w0, [sp, #4]
   1c758:	mul	x0, x1, x0
   1c75c:	lsr	x0, x0, #32
   1c760:	str	w0, [sp, #44]
   1c764:	ldr	w1, [sp, #12]
   1c768:	ldr	w0, [sp, #44]
   1c76c:	sub	w0, w1, w0
   1c770:	str	w0, [sp, #40]
   1c774:	ldr	w0, [sp, #40]
   1c778:	lsr	w0, w0, #1
   1c77c:	str	w0, [sp, #36]
   1c780:	ldr	w1, [sp, #44]
   1c784:	ldr	w0, [sp, #36]
   1c788:	add	w0, w1, w0
   1c78c:	str	w0, [sp, #32]
   1c790:	ldr	w0, [sp]
   1c794:	ldr	w1, [sp, #32]
   1c798:	lsr	w0, w1, w0
   1c79c:	str	w0, [sp, #28]
   1c7a0:	ldr	w1, [sp, #28]
   1c7a4:	ldr	w0, [sp, #8]
   1c7a8:	mul	w0, w1, w0
   1c7ac:	ldr	w1, [sp, #12]
   1c7b0:	sub	w0, w1, w0
   1c7b4:	str	w0, [sp, #24]
   1c7b8:	ldr	w0, [sp, #24]
   1c7bc:	add	sp, sp, #0x30
   1c7c0:	ret
   1c7c4:	stp	x29, x30, [sp, #-48]!
   1c7c8:	mov	x29, sp
   1c7cc:	str	w0, [sp, #28]
   1c7d0:	str	x1, [sp, #16]
   1c7d4:	ldr	x0, [sp, #16]
   1c7d8:	ldr	w0, [x0, #104]
   1c7dc:	mov	w0, w0
   1c7e0:	lsl	x1, x0, #4
   1c7e4:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   1c7e8:	add	x0, x0, #0x200
   1c7ec:	add	x0, x1, x0
   1c7f0:	str	x0, [sp, #40]
   1c7f4:	ldr	x0, [sp, #40]
   1c7f8:	ldr	w1, [x0]
   1c7fc:	ldr	x0, [sp, #40]
   1c800:	ldr	w2, [x0, #4]
   1c804:	ldr	x0, [sp, #40]
   1c808:	ldr	w0, [x0, #12]
   1c80c:	mov	w3, w0
   1c810:	ldr	w0, [sp, #28]
   1c814:	bl	1c73c <htab_elements@@Base+0x24>
   1c818:	ldp	x29, x30, [sp], #48
   1c81c:	ret
   1c820:	stp	x29, x30, [sp, #-48]!
   1c824:	mov	x29, sp
   1c828:	str	w0, [sp, #28]
   1c82c:	str	x1, [sp, #16]
   1c830:	ldr	x0, [sp, #16]
   1c834:	ldr	w0, [x0, #104]
   1c838:	mov	w0, w0
   1c83c:	lsl	x1, x0, #4
   1c840:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   1c844:	add	x0, x0, #0x200
   1c848:	add	x0, x1, x0
   1c84c:	str	x0, [sp, #40]
   1c850:	ldr	x0, [sp, #40]
   1c854:	ldr	w0, [x0]
   1c858:	sub	w1, w0, #0x2
   1c85c:	ldr	x0, [sp, #40]
   1c860:	ldr	w2, [x0, #8]
   1c864:	ldr	x0, [sp, #40]
   1c868:	ldr	w0, [x0, #12]
   1c86c:	mov	w3, w0
   1c870:	ldr	w0, [sp, #28]
   1c874:	bl	1c73c <htab_elements@@Base+0x24>
   1c878:	add	w0, w0, #0x1
   1c87c:	ldp	x29, x30, [sp], #48
   1c880:	ret

000000000001c884 <htab_create_alloc@@Base>:
   1c884:	stp	x29, x30, [sp, #-64]!
   1c888:	mov	x29, sp
   1c88c:	str	x0, [sp, #56]
   1c890:	str	x1, [sp, #48]
   1c894:	str	x2, [sp, #40]
   1c898:	str	x3, [sp, #32]
   1c89c:	str	x4, [sp, #24]
   1c8a0:	str	x5, [sp, #16]
   1c8a4:	ldr	x6, [sp, #16]
   1c8a8:	ldr	x5, [sp, #24]
   1c8ac:	ldr	x4, [sp, #24]
   1c8b0:	ldr	x3, [sp, #32]
   1c8b4:	ldr	x2, [sp, #40]
   1c8b8:	ldr	x1, [sp, #48]
   1c8bc:	ldr	x0, [sp, #56]
   1c8c0:	bl	6470 <htab_create_typed_alloc@plt>
   1c8c4:	ldp	x29, x30, [sp], #64
   1c8c8:	ret

000000000001c8cc <htab_create_alloc_ex@@Base>:
   1c8cc:	stp	x29, x30, [sp, #-96]!
   1c8d0:	mov	x29, sp
   1c8d4:	str	x0, [sp, #72]
   1c8d8:	str	x1, [sp, #64]
   1c8dc:	str	x2, [sp, #56]
   1c8e0:	str	x3, [sp, #48]
   1c8e4:	str	x4, [sp, #40]
   1c8e8:	str	x5, [sp, #32]
   1c8ec:	str	x6, [sp, #24]
   1c8f0:	ldr	x0, [sp, #72]
   1c8f4:	bl	1c5f8 <plugin_init@@Base+0xb5b8>
   1c8f8:	str	w0, [sp, #92]
   1c8fc:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   1c900:	add	x1, x0, #0x200
   1c904:	ldr	w0, [sp, #92]
   1c908:	lsl	x0, x0, #4
   1c90c:	add	x0, x1, x0
   1c910:	ldr	w0, [x0]
   1c914:	mov	w0, w0
   1c918:	str	x0, [sp, #72]
   1c91c:	ldr	x3, [sp, #32]
   1c920:	mov	x2, #0x70                  	// #112
   1c924:	mov	x1, #0x1                   	// #1
   1c928:	ldr	x0, [sp, #40]
   1c92c:	blr	x3
   1c930:	str	x0, [sp, #80]
   1c934:	ldr	x0, [sp, #80]
   1c938:	cmp	x0, #0x0
   1c93c:	b.ne	1c948 <htab_create_alloc_ex@@Base+0x7c>  // b.any
   1c940:	mov	x0, #0x0                   	// #0
   1c944:	b	1ca00 <htab_create_alloc_ex@@Base+0x134>
   1c948:	ldr	x3, [sp, #32]
   1c94c:	mov	x2, #0x8                   	// #8
   1c950:	ldr	x1, [sp, #72]
   1c954:	ldr	x0, [sp, #40]
   1c958:	blr	x3
   1c95c:	mov	x1, x0
   1c960:	ldr	x0, [sp, #80]
   1c964:	str	x1, [x0, #24]
   1c968:	ldr	x0, [sp, #80]
   1c96c:	ldr	x0, [x0, #24]
   1c970:	cmp	x0, #0x0
   1c974:	b.ne	1c99c <htab_create_alloc_ex@@Base+0xd0>  // b.any
   1c978:	ldr	x0, [sp, #24]
   1c97c:	cmp	x0, #0x0
   1c980:	b.eq	1c994 <htab_create_alloc_ex@@Base+0xc8>  // b.none
   1c984:	ldr	x2, [sp, #24]
   1c988:	ldr	x1, [sp, #80]
   1c98c:	ldr	x0, [sp, #40]
   1c990:	blr	x2
   1c994:	mov	x0, #0x0                   	// #0
   1c998:	b	1ca00 <htab_create_alloc_ex@@Base+0x134>
   1c99c:	ldr	x0, [sp, #80]
   1c9a0:	ldr	x1, [sp, #72]
   1c9a4:	str	x1, [x0, #32]
   1c9a8:	ldr	x0, [sp, #80]
   1c9ac:	ldr	w1, [sp, #92]
   1c9b0:	str	w1, [x0, #104]
   1c9b4:	ldr	x0, [sp, #80]
   1c9b8:	ldr	x1, [sp, #64]
   1c9bc:	str	x1, [x0]
   1c9c0:	ldr	x0, [sp, #80]
   1c9c4:	ldr	x1, [sp, #56]
   1c9c8:	str	x1, [x0, #8]
   1c9cc:	ldr	x0, [sp, #80]
   1c9d0:	ldr	x1, [sp, #48]
   1c9d4:	str	x1, [x0, #16]
   1c9d8:	ldr	x0, [sp, #80]
   1c9dc:	ldr	x1, [sp, #40]
   1c9e0:	str	x1, [x0, #80]
   1c9e4:	ldr	x0, [sp, #80]
   1c9e8:	ldr	x1, [sp, #32]
   1c9ec:	str	x1, [x0, #88]
   1c9f0:	ldr	x0, [sp, #80]
   1c9f4:	ldr	x1, [sp, #24]
   1c9f8:	str	x1, [x0, #96]
   1c9fc:	ldr	x0, [sp, #80]
   1ca00:	ldp	x29, x30, [sp], #96
   1ca04:	ret

000000000001ca08 <htab_create_typed_alloc@@Base>:
   1ca08:	stp	x29, x30, [sp, #-96]!
   1ca0c:	mov	x29, sp
   1ca10:	str	x0, [sp, #72]
   1ca14:	str	x1, [sp, #64]
   1ca18:	str	x2, [sp, #56]
   1ca1c:	str	x3, [sp, #48]
   1ca20:	str	x4, [sp, #40]
   1ca24:	str	x5, [sp, #32]
   1ca28:	str	x6, [sp, #24]
   1ca2c:	ldr	x0, [sp, #72]
   1ca30:	bl	1c5f8 <plugin_init@@Base+0xb5b8>
   1ca34:	str	w0, [sp, #92]
   1ca38:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   1ca3c:	add	x1, x0, #0x200
   1ca40:	ldr	w0, [sp, #92]
   1ca44:	lsl	x0, x0, #4
   1ca48:	add	x0, x1, x0
   1ca4c:	ldr	w0, [x0]
   1ca50:	mov	w0, w0
   1ca54:	str	x0, [sp, #72]
   1ca58:	ldr	x2, [sp, #40]
   1ca5c:	mov	x1, #0x70                  	// #112
   1ca60:	mov	x0, #0x1                   	// #1
   1ca64:	blr	x2
   1ca68:	str	x0, [sp, #80]
   1ca6c:	ldr	x0, [sp, #80]
   1ca70:	cmp	x0, #0x0
   1ca74:	b.ne	1ca80 <htab_create_typed_alloc@@Base+0x78>  // b.any
   1ca78:	mov	x0, #0x0                   	// #0
   1ca7c:	b	1cb24 <htab_create_typed_alloc@@Base+0x11c>
   1ca80:	ldr	x2, [sp, #32]
   1ca84:	mov	x1, #0x8                   	// #8
   1ca88:	ldr	x0, [sp, #72]
   1ca8c:	blr	x2
   1ca90:	mov	x1, x0
   1ca94:	ldr	x0, [sp, #80]
   1ca98:	str	x1, [x0, #24]
   1ca9c:	ldr	x0, [sp, #80]
   1caa0:	ldr	x0, [x0, #24]
   1caa4:	cmp	x0, #0x0
   1caa8:	b.ne	1cacc <htab_create_typed_alloc@@Base+0xc4>  // b.any
   1caac:	ldr	x0, [sp, #24]
   1cab0:	cmp	x0, #0x0
   1cab4:	b.eq	1cac4 <htab_create_typed_alloc@@Base+0xbc>  // b.none
   1cab8:	ldr	x1, [sp, #24]
   1cabc:	ldr	x0, [sp, #80]
   1cac0:	blr	x1
   1cac4:	mov	x0, #0x0                   	// #0
   1cac8:	b	1cb24 <htab_create_typed_alloc@@Base+0x11c>
   1cacc:	ldr	x0, [sp, #80]
   1cad0:	ldr	x1, [sp, #72]
   1cad4:	str	x1, [x0, #32]
   1cad8:	ldr	x0, [sp, #80]
   1cadc:	ldr	w1, [sp, #92]
   1cae0:	str	w1, [x0, #104]
   1cae4:	ldr	x0, [sp, #80]
   1cae8:	ldr	x1, [sp, #64]
   1caec:	str	x1, [x0]
   1caf0:	ldr	x0, [sp, #80]
   1caf4:	ldr	x1, [sp, #56]
   1caf8:	str	x1, [x0, #8]
   1cafc:	ldr	x0, [sp, #80]
   1cb00:	ldr	x1, [sp, #48]
   1cb04:	str	x1, [x0, #16]
   1cb08:	ldr	x0, [sp, #80]
   1cb0c:	ldr	x1, [sp, #32]
   1cb10:	str	x1, [x0, #64]
   1cb14:	ldr	x0, [sp, #80]
   1cb18:	ldr	x1, [sp, #24]
   1cb1c:	str	x1, [x0, #72]
   1cb20:	ldr	x0, [sp, #80]
   1cb24:	ldp	x29, x30, [sp], #96
   1cb28:	ret

000000000001cb2c <htab_set_functions_ex@@Base>:
   1cb2c:	sub	sp, sp, #0x40
   1cb30:	str	x0, [sp, #56]
   1cb34:	str	x1, [sp, #48]
   1cb38:	str	x2, [sp, #40]
   1cb3c:	str	x3, [sp, #32]
   1cb40:	str	x4, [sp, #24]
   1cb44:	str	x5, [sp, #16]
   1cb48:	str	x6, [sp, #8]
   1cb4c:	ldr	x0, [sp, #56]
   1cb50:	ldr	x1, [sp, #48]
   1cb54:	str	x1, [x0]
   1cb58:	ldr	x0, [sp, #56]
   1cb5c:	ldr	x1, [sp, #40]
   1cb60:	str	x1, [x0, #8]
   1cb64:	ldr	x0, [sp, #56]
   1cb68:	ldr	x1, [sp, #32]
   1cb6c:	str	x1, [x0, #16]
   1cb70:	ldr	x0, [sp, #56]
   1cb74:	ldr	x1, [sp, #24]
   1cb78:	str	x1, [x0, #80]
   1cb7c:	ldr	x0, [sp, #56]
   1cb80:	ldr	x1, [sp, #16]
   1cb84:	str	x1, [x0, #88]
   1cb88:	ldr	x0, [sp, #56]
   1cb8c:	ldr	x1, [sp, #8]
   1cb90:	str	x1, [x0, #96]
   1cb94:	nop
   1cb98:	add	sp, sp, #0x40
   1cb9c:	ret

000000000001cba0 <htab_create@@Base>:
   1cba0:	stp	x29, x30, [sp, #-48]!
   1cba4:	mov	x29, sp
   1cba8:	str	x0, [sp, #40]
   1cbac:	str	x1, [sp, #32]
   1cbb0:	str	x2, [sp, #24]
   1cbb4:	str	x3, [sp, #16]
   1cbb8:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1cbbc:	ldr	x5, [x0, #3856]
   1cbc0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1cbc4:	ldr	x4, [x0, #3992]
   1cbc8:	ldr	x3, [sp, #16]
   1cbcc:	ldr	x2, [sp, #24]
   1cbd0:	ldr	x1, [sp, #32]
   1cbd4:	ldr	x0, [sp, #40]
   1cbd8:	bl	6260 <htab_create_alloc@plt>
   1cbdc:	ldp	x29, x30, [sp], #48
   1cbe0:	ret

000000000001cbe4 <htab_try_create@@Base>:
   1cbe4:	stp	x29, x30, [sp, #-48]!
   1cbe8:	mov	x29, sp
   1cbec:	str	x0, [sp, #40]
   1cbf0:	str	x1, [sp, #32]
   1cbf4:	str	x2, [sp, #24]
   1cbf8:	str	x3, [sp, #16]
   1cbfc:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1cc00:	ldr	x5, [x0, #3856]
   1cc04:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1cc08:	ldr	x4, [x0, #3808]
   1cc0c:	ldr	x3, [sp, #16]
   1cc10:	ldr	x2, [sp, #24]
   1cc14:	ldr	x1, [sp, #32]
   1cc18:	ldr	x0, [sp, #40]
   1cc1c:	bl	6260 <htab_create_alloc@plt>
   1cc20:	ldp	x29, x30, [sp], #48
   1cc24:	ret

000000000001cc28 <htab_delete@@Base>:
   1cc28:	stp	x29, x30, [sp, #-64]!
   1cc2c:	mov	x29, sp
   1cc30:	str	x0, [sp, #24]
   1cc34:	ldr	x0, [sp, #24]
   1cc38:	ldr	x0, [x0, #32]
   1cc3c:	str	x0, [sp, #48]
   1cc40:	ldr	x0, [sp, #24]
   1cc44:	ldr	x0, [x0, #24]
   1cc48:	str	x0, [sp, #40]
   1cc4c:	ldr	x0, [sp, #24]
   1cc50:	ldr	x0, [x0, #16]
   1cc54:	cmp	x0, #0x0
   1cc58:	b.eq	1ccdc <htab_delete@@Base+0xb4>  // b.none
   1cc5c:	ldr	x0, [sp, #48]
   1cc60:	sub	w0, w0, #0x1
   1cc64:	str	w0, [sp, #60]
   1cc68:	b	1ccd0 <htab_delete@@Base+0xa8>
   1cc6c:	ldrsw	x0, [sp, #60]
   1cc70:	lsl	x0, x0, #3
   1cc74:	ldr	x1, [sp, #40]
   1cc78:	add	x0, x1, x0
   1cc7c:	ldr	x0, [x0]
   1cc80:	cmp	x0, #0x0
   1cc84:	b.eq	1ccc4 <htab_delete@@Base+0x9c>  // b.none
   1cc88:	ldrsw	x0, [sp, #60]
   1cc8c:	lsl	x0, x0, #3
   1cc90:	ldr	x1, [sp, #40]
   1cc94:	add	x0, x1, x0
   1cc98:	ldr	x0, [x0]
   1cc9c:	cmp	x0, #0x1
   1cca0:	b.eq	1ccc4 <htab_delete@@Base+0x9c>  // b.none
   1cca4:	ldr	x0, [sp, #24]
   1cca8:	ldr	x1, [x0, #16]
   1ccac:	ldrsw	x0, [sp, #60]
   1ccb0:	lsl	x0, x0, #3
   1ccb4:	ldr	x2, [sp, #40]
   1ccb8:	add	x0, x2, x0
   1ccbc:	ldr	x0, [x0]
   1ccc0:	blr	x1
   1ccc4:	ldr	w0, [sp, #60]
   1ccc8:	sub	w0, w0, #0x1
   1cccc:	str	w0, [sp, #60]
   1ccd0:	ldr	w0, [sp, #60]
   1ccd4:	cmp	w0, #0x0
   1ccd8:	b.ge	1cc6c <htab_delete@@Base+0x44>  // b.tcont
   1ccdc:	ldr	x0, [sp, #24]
   1cce0:	ldr	x0, [x0, #72]
   1cce4:	cmp	x0, #0x0
   1cce8:	b.eq	1cd10 <htab_delete@@Base+0xe8>  // b.none
   1ccec:	ldr	x0, [sp, #24]
   1ccf0:	ldr	x1, [x0, #72]
   1ccf4:	ldr	x0, [sp, #40]
   1ccf8:	blr	x1
   1ccfc:	ldr	x0, [sp, #24]
   1cd00:	ldr	x1, [x0, #72]
   1cd04:	ldr	x0, [sp, #24]
   1cd08:	blr	x1
   1cd0c:	b	1cd50 <htab_delete@@Base+0x128>
   1cd10:	ldr	x0, [sp, #24]
   1cd14:	ldr	x0, [x0, #96]
   1cd18:	cmp	x0, #0x0
   1cd1c:	b.eq	1cd50 <htab_delete@@Base+0x128>  // b.none
   1cd20:	ldr	x0, [sp, #24]
   1cd24:	ldr	x2, [x0, #96]
   1cd28:	ldr	x0, [sp, #24]
   1cd2c:	ldr	x0, [x0, #80]
   1cd30:	ldr	x1, [sp, #40]
   1cd34:	blr	x2
   1cd38:	ldr	x0, [sp, #24]
   1cd3c:	ldr	x2, [x0, #96]
   1cd40:	ldr	x0, [sp, #24]
   1cd44:	ldr	x0, [x0, #80]
   1cd48:	ldr	x1, [sp, #24]
   1cd4c:	blr	x2
   1cd50:	nop
   1cd54:	ldp	x29, x30, [sp], #64
   1cd58:	ret

000000000001cd5c <htab_empty@@Base>:
   1cd5c:	stp	x29, x30, [sp, #-64]!
   1cd60:	mov	x29, sp
   1cd64:	str	x0, [sp, #24]
   1cd68:	ldr	x0, [sp, #24]
   1cd6c:	ldr	x0, [x0, #32]
   1cd70:	str	x0, [sp, #48]
   1cd74:	ldr	x0, [sp, #24]
   1cd78:	ldr	x0, [x0, #24]
   1cd7c:	str	x0, [sp, #40]
   1cd80:	ldr	x0, [sp, #24]
   1cd84:	ldr	x0, [x0, #16]
   1cd88:	cmp	x0, #0x0
   1cd8c:	b.eq	1ce10 <htab_empty@@Base+0xb4>  // b.none
   1cd90:	ldr	x0, [sp, #48]
   1cd94:	sub	w0, w0, #0x1
   1cd98:	str	w0, [sp, #60]
   1cd9c:	b	1ce04 <htab_empty@@Base+0xa8>
   1cda0:	ldrsw	x0, [sp, #60]
   1cda4:	lsl	x0, x0, #3
   1cda8:	ldr	x1, [sp, #40]
   1cdac:	add	x0, x1, x0
   1cdb0:	ldr	x0, [x0]
   1cdb4:	cmp	x0, #0x0
   1cdb8:	b.eq	1cdf8 <htab_empty@@Base+0x9c>  // b.none
   1cdbc:	ldrsw	x0, [sp, #60]
   1cdc0:	lsl	x0, x0, #3
   1cdc4:	ldr	x1, [sp, #40]
   1cdc8:	add	x0, x1, x0
   1cdcc:	ldr	x0, [x0]
   1cdd0:	cmp	x0, #0x1
   1cdd4:	b.eq	1cdf8 <htab_empty@@Base+0x9c>  // b.none
   1cdd8:	ldr	x0, [sp, #24]
   1cddc:	ldr	x1, [x0, #16]
   1cde0:	ldrsw	x0, [sp, #60]
   1cde4:	lsl	x0, x0, #3
   1cde8:	ldr	x2, [sp, #40]
   1cdec:	add	x0, x2, x0
   1cdf0:	ldr	x0, [x0]
   1cdf4:	blr	x1
   1cdf8:	ldr	w0, [sp, #60]
   1cdfc:	sub	w0, w0, #0x1
   1ce00:	str	w0, [sp, #60]
   1ce04:	ldr	w0, [sp, #60]
   1ce08:	cmp	w0, #0x0
   1ce0c:	b.ge	1cda0 <htab_empty@@Base+0x44>  // b.tcont
   1ce10:	ldr	x0, [sp, #48]
   1ce14:	cmp	x0, #0x20, lsl #12
   1ce18:	b.ls	1cf18 <htab_empty@@Base+0x1bc>  // b.plast
   1ce1c:	mov	x0, #0x80                  	// #128
   1ce20:	bl	1c5f8 <plugin_init@@Base+0xb5b8>
   1ce24:	str	w0, [sp, #36]
   1ce28:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   1ce2c:	add	x1, x0, #0x200
   1ce30:	ldrsw	x0, [sp, #36]
   1ce34:	lsl	x0, x0, #4
   1ce38:	add	x0, x1, x0
   1ce3c:	ldr	w0, [x0]
   1ce40:	str	w0, [sp, #32]
   1ce44:	ldr	x0, [sp, #24]
   1ce48:	ldr	x0, [x0, #72]
   1ce4c:	cmp	x0, #0x0
   1ce50:	b.eq	1ce6c <htab_empty@@Base+0x110>  // b.none
   1ce54:	ldr	x0, [sp, #24]
   1ce58:	ldr	x1, [x0, #72]
   1ce5c:	ldr	x0, [sp, #24]
   1ce60:	ldr	x0, [x0, #24]
   1ce64:	blr	x1
   1ce68:	b	1cea0 <htab_empty@@Base+0x144>
   1ce6c:	ldr	x0, [sp, #24]
   1ce70:	ldr	x0, [x0, #96]
   1ce74:	cmp	x0, #0x0
   1ce78:	b.eq	1cea0 <htab_empty@@Base+0x144>  // b.none
   1ce7c:	ldr	x0, [sp, #24]
   1ce80:	ldr	x2, [x0, #96]
   1ce84:	ldr	x0, [sp, #24]
   1ce88:	ldr	x3, [x0, #80]
   1ce8c:	ldr	x0, [sp, #24]
   1ce90:	ldr	x0, [x0, #24]
   1ce94:	mov	x1, x0
   1ce98:	mov	x0, x3
   1ce9c:	blr	x2
   1cea0:	ldr	x0, [sp, #24]
   1cea4:	ldr	x0, [x0, #88]
   1cea8:	cmp	x0, #0x0
   1ceac:	b.eq	1cedc <htab_empty@@Base+0x180>  // b.none
   1ceb0:	ldr	x0, [sp, #24]
   1ceb4:	ldr	x3, [x0, #88]
   1ceb8:	ldr	x0, [sp, #24]
   1cebc:	ldr	x0, [x0, #80]
   1cec0:	ldrsw	x1, [sp, #32]
   1cec4:	mov	x2, #0x8                   	// #8
   1cec8:	blr	x3
   1cecc:	mov	x1, x0
   1ced0:	ldr	x0, [sp, #24]
   1ced4:	str	x1, [x0, #24]
   1ced8:	b	1cefc <htab_empty@@Base+0x1a0>
   1cedc:	ldr	x0, [sp, #24]
   1cee0:	ldr	x2, [x0, #64]
   1cee4:	ldrsw	x0, [sp, #32]
   1cee8:	mov	x1, #0x8                   	// #8
   1ceec:	blr	x2
   1cef0:	mov	x1, x0
   1cef4:	ldr	x0, [sp, #24]
   1cef8:	str	x1, [x0, #24]
   1cefc:	ldrsw	x1, [sp, #32]
   1cf00:	ldr	x0, [sp, #24]
   1cf04:	str	x1, [x0, #32]
   1cf08:	ldr	w1, [sp, #36]
   1cf0c:	ldr	x0, [sp, #24]
   1cf10:	str	w1, [x0, #104]
   1cf14:	b	1cf30 <htab_empty@@Base+0x1d4>
   1cf18:	ldr	x0, [sp, #48]
   1cf1c:	lsl	x0, x0, #3
   1cf20:	mov	x2, x0
   1cf24:	mov	w1, #0x0                   	// #0
   1cf28:	ldr	x0, [sp, #40]
   1cf2c:	bl	6350 <memset@plt>
   1cf30:	ldr	x0, [sp, #24]
   1cf34:	str	xzr, [x0, #48]
   1cf38:	ldr	x0, [sp, #24]
   1cf3c:	str	xzr, [x0, #40]
   1cf40:	nop
   1cf44:	ldp	x29, x30, [sp], #64
   1cf48:	ret
   1cf4c:	stp	x29, x30, [sp, #-64]!
   1cf50:	mov	x29, sp
   1cf54:	str	x0, [sp, #24]
   1cf58:	str	w1, [sp, #20]
   1cf5c:	ldr	x1, [sp, #24]
   1cf60:	ldr	w0, [sp, #20]
   1cf64:	bl	1c7c4 <htab_elements@@Base+0xac>
   1cf68:	str	w0, [sp, #60]
   1cf6c:	ldr	x0, [sp, #24]
   1cf70:	ldr	x0, [x0, #32]
   1cf74:	str	x0, [sp, #48]
   1cf78:	ldr	x0, [sp, #24]
   1cf7c:	ldr	x1, [x0, #24]
   1cf80:	ldr	w0, [sp, #60]
   1cf84:	lsl	x0, x0, #3
   1cf88:	add	x0, x1, x0
   1cf8c:	str	x0, [sp, #40]
   1cf90:	ldr	x0, [sp, #40]
   1cf94:	ldr	x0, [x0]
   1cf98:	cmp	x0, #0x0
   1cf9c:	b.ne	1cfa8 <htab_empty@@Base+0x24c>  // b.any
   1cfa0:	ldr	x0, [sp, #40]
   1cfa4:	b	1d044 <htab_empty@@Base+0x2e8>
   1cfa8:	ldr	x0, [sp, #40]
   1cfac:	ldr	x0, [x0]
   1cfb0:	cmp	x0, #0x1
   1cfb4:	b.ne	1cfbc <htab_empty@@Base+0x260>  // b.any
   1cfb8:	bl	6ad0 <abort@plt>
   1cfbc:	ldr	x1, [sp, #24]
   1cfc0:	ldr	w0, [sp, #20]
   1cfc4:	bl	1c820 <htab_elements@@Base+0x108>
   1cfc8:	str	w0, [sp, #36]
   1cfcc:	ldr	w1, [sp, #60]
   1cfd0:	ldr	w0, [sp, #36]
   1cfd4:	add	w0, w1, w0
   1cfd8:	str	w0, [sp, #60]
   1cfdc:	ldr	w0, [sp, #60]
   1cfe0:	ldr	x1, [sp, #48]
   1cfe4:	cmp	x1, x0
   1cfe8:	b.hi	1d000 <htab_empty@@Base+0x2a4>  // b.pmore
   1cfec:	ldr	x0, [sp, #48]
   1cff0:	mov	w1, w0
   1cff4:	ldr	w0, [sp, #60]
   1cff8:	sub	w0, w0, w1
   1cffc:	str	w0, [sp, #60]
   1d000:	ldr	x0, [sp, #24]
   1d004:	ldr	x1, [x0, #24]
   1d008:	ldr	w0, [sp, #60]
   1d00c:	lsl	x0, x0, #3
   1d010:	add	x0, x1, x0
   1d014:	str	x0, [sp, #40]
   1d018:	ldr	x0, [sp, #40]
   1d01c:	ldr	x0, [x0]
   1d020:	cmp	x0, #0x0
   1d024:	b.ne	1d030 <htab_empty@@Base+0x2d4>  // b.any
   1d028:	ldr	x0, [sp, #40]
   1d02c:	b	1d044 <htab_empty@@Base+0x2e8>
   1d030:	ldr	x0, [sp, #40]
   1d034:	ldr	x0, [x0]
   1d038:	cmp	x0, #0x1
   1d03c:	b.ne	1cfcc <htab_empty@@Base+0x270>  // b.any
   1d040:	bl	6ad0 <abort@plt>
   1d044:	ldp	x29, x30, [sp], #64
   1d048:	ret
   1d04c:	stp	x29, x30, [sp, #-128]!
   1d050:	mov	x29, sp
   1d054:	str	x0, [sp, #24]
   1d058:	ldr	x0, [sp, #24]
   1d05c:	ldr	x0, [x0, #24]
   1d060:	str	x0, [sp, #88]
   1d064:	ldr	x0, [sp, #24]
   1d068:	ldr	w0, [x0, #104]
   1d06c:	str	w0, [sp, #84]
   1d070:	ldr	x0, [sp, #24]
   1d074:	ldr	x0, [x0, #32]
   1d078:	str	x0, [sp, #72]
   1d07c:	ldr	x0, [sp, #72]
   1d080:	lsl	x0, x0, #3
   1d084:	ldr	x1, [sp, #88]
   1d088:	add	x0, x1, x0
   1d08c:	str	x0, [sp, #64]
   1d090:	ldr	x0, [sp, #24]
   1d094:	ldr	x1, [x0, #40]
   1d098:	ldr	x0, [sp, #24]
   1d09c:	ldr	x0, [x0, #48]
   1d0a0:	sub	x0, x1, x0
   1d0a4:	str	x0, [sp, #56]
   1d0a8:	ldr	x0, [sp, #56]
   1d0ac:	lsl	x0, x0, #1
   1d0b0:	ldr	x1, [sp, #72]
   1d0b4:	cmp	x1, x0
   1d0b8:	b.cc	1d0dc <htab_empty@@Base+0x380>  // b.lo, b.ul, b.last
   1d0bc:	ldr	x0, [sp, #56]
   1d0c0:	lsl	x0, x0, #3
   1d0c4:	ldr	x1, [sp, #72]
   1d0c8:	cmp	x1, x0
   1d0cc:	b.ls	1d110 <htab_empty@@Base+0x3b4>  // b.plast
   1d0d0:	ldr	x0, [sp, #72]
   1d0d4:	cmp	x0, #0x20
   1d0d8:	b.ls	1d110 <htab_empty@@Base+0x3b4>  // b.plast
   1d0dc:	ldr	x0, [sp, #56]
   1d0e0:	lsl	x0, x0, #1
   1d0e4:	bl	1c5f8 <plugin_init@@Base+0xb5b8>
   1d0e8:	str	w0, [sp, #100]
   1d0ec:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   1d0f0:	add	x1, x0, #0x200
   1d0f4:	ldr	w0, [sp, #100]
   1d0f8:	lsl	x0, x0, #4
   1d0fc:	add	x0, x1, x0
   1d100:	ldr	w0, [x0]
   1d104:	mov	w0, w0
   1d108:	str	x0, [sp, #104]
   1d10c:	b	1d120 <htab_empty@@Base+0x3c4>
   1d110:	ldr	w0, [sp, #84]
   1d114:	str	w0, [sp, #100]
   1d118:	ldr	x0, [sp, #72]
   1d11c:	str	x0, [sp, #104]
   1d120:	ldr	x0, [sp, #24]
   1d124:	ldr	x0, [x0, #88]
   1d128:	cmp	x0, #0x0
   1d12c:	b.eq	1d154 <htab_empty@@Base+0x3f8>  // b.none
   1d130:	ldr	x0, [sp, #24]
   1d134:	ldr	x3, [x0, #88]
   1d138:	ldr	x0, [sp, #24]
   1d13c:	ldr	x0, [x0, #80]
   1d140:	mov	x2, #0x8                   	// #8
   1d144:	ldr	x1, [sp, #104]
   1d148:	blr	x3
   1d14c:	str	x0, [sp, #112]
   1d150:	b	1d16c <htab_empty@@Base+0x410>
   1d154:	ldr	x0, [sp, #24]
   1d158:	ldr	x2, [x0, #64]
   1d15c:	mov	x1, #0x8                   	// #8
   1d160:	ldr	x0, [sp, #104]
   1d164:	blr	x2
   1d168:	str	x0, [sp, #112]
   1d16c:	ldr	x0, [sp, #112]
   1d170:	cmp	x0, #0x0
   1d174:	b.ne	1d180 <htab_empty@@Base+0x424>  // b.any
   1d178:	mov	w0, #0x0                   	// #0
   1d17c:	b	1d28c <htab_empty@@Base+0x530>
   1d180:	ldr	x0, [sp, #24]
   1d184:	ldr	x1, [sp, #112]
   1d188:	str	x1, [x0, #24]
   1d18c:	ldr	x0, [sp, #24]
   1d190:	ldr	x1, [sp, #104]
   1d194:	str	x1, [x0, #32]
   1d198:	ldr	x0, [sp, #24]
   1d19c:	ldr	w1, [sp, #100]
   1d1a0:	str	w1, [x0, #104]
   1d1a4:	ldr	x0, [sp, #24]
   1d1a8:	ldr	x1, [x0, #40]
   1d1ac:	ldr	x0, [sp, #24]
   1d1b0:	ldr	x0, [x0, #48]
   1d1b4:	sub	x1, x1, x0
   1d1b8:	ldr	x0, [sp, #24]
   1d1bc:	str	x1, [x0, #40]
   1d1c0:	ldr	x0, [sp, #24]
   1d1c4:	str	xzr, [x0, #48]
   1d1c8:	ldr	x0, [sp, #88]
   1d1cc:	str	x0, [sp, #120]
   1d1d0:	ldr	x0, [sp, #120]
   1d1d4:	ldr	x0, [x0]
   1d1d8:	str	x0, [sp, #48]
   1d1dc:	ldr	x0, [sp, #48]
   1d1e0:	cmp	x0, #0x0
   1d1e4:	b.eq	1d220 <htab_empty@@Base+0x4c4>  // b.none
   1d1e8:	ldr	x0, [sp, #48]
   1d1ec:	cmp	x0, #0x1
   1d1f0:	b.eq	1d220 <htab_empty@@Base+0x4c4>  // b.none
   1d1f4:	ldr	x0, [sp, #24]
   1d1f8:	ldr	x1, [x0]
   1d1fc:	ldr	x0, [sp, #48]
   1d200:	blr	x1
   1d204:	mov	w1, w0
   1d208:	ldr	x0, [sp, #24]
   1d20c:	bl	1cf4c <htab_empty@@Base+0x1f0>
   1d210:	str	x0, [sp, #40]
   1d214:	ldr	x0, [sp, #40]
   1d218:	ldr	x1, [sp, #48]
   1d21c:	str	x1, [x0]
   1d220:	ldr	x0, [sp, #120]
   1d224:	add	x0, x0, #0x8
   1d228:	str	x0, [sp, #120]
   1d22c:	ldr	x1, [sp, #120]
   1d230:	ldr	x0, [sp, #64]
   1d234:	cmp	x1, x0
   1d238:	b.cc	1d1d0 <htab_empty@@Base+0x474>  // b.lo, b.ul, b.last
   1d23c:	ldr	x0, [sp, #24]
   1d240:	ldr	x0, [x0, #72]
   1d244:	cmp	x0, #0x0
   1d248:	b.eq	1d260 <htab_empty@@Base+0x504>  // b.none
   1d24c:	ldr	x0, [sp, #24]
   1d250:	ldr	x1, [x0, #72]
   1d254:	ldr	x0, [sp, #88]
   1d258:	blr	x1
   1d25c:	b	1d288 <htab_empty@@Base+0x52c>
   1d260:	ldr	x0, [sp, #24]
   1d264:	ldr	x0, [x0, #96]
   1d268:	cmp	x0, #0x0
   1d26c:	b.eq	1d288 <htab_empty@@Base+0x52c>  // b.none
   1d270:	ldr	x0, [sp, #24]
   1d274:	ldr	x2, [x0, #96]
   1d278:	ldr	x0, [sp, #24]
   1d27c:	ldr	x0, [x0, #80]
   1d280:	ldr	x1, [sp, #88]
   1d284:	blr	x2
   1d288:	mov	w0, #0x1                   	// #1
   1d28c:	ldp	x29, x30, [sp], #128
   1d290:	ret

000000000001d294 <htab_find_with_hash@@Base>:
   1d294:	stp	x29, x30, [sp, #-80]!
   1d298:	mov	x29, sp
   1d29c:	str	x0, [sp, #40]
   1d2a0:	str	x1, [sp, #32]
   1d2a4:	str	w2, [sp, #28]
   1d2a8:	ldr	x0, [sp, #40]
   1d2ac:	ldr	w0, [x0, #56]
   1d2b0:	add	w1, w0, #0x1
   1d2b4:	ldr	x0, [sp, #40]
   1d2b8:	str	w1, [x0, #56]
   1d2bc:	ldr	x0, [sp, #40]
   1d2c0:	ldr	x0, [x0, #32]
   1d2c4:	str	x0, [sp, #64]
   1d2c8:	ldr	x1, [sp, #40]
   1d2cc:	ldr	w0, [sp, #28]
   1d2d0:	bl	1c7c4 <htab_elements@@Base+0xac>
   1d2d4:	str	w0, [sp, #76]
   1d2d8:	ldr	x0, [sp, #40]
   1d2dc:	ldr	x1, [x0, #24]
   1d2e0:	ldr	w0, [sp, #76]
   1d2e4:	lsl	x0, x0, #3
   1d2e8:	add	x0, x1, x0
   1d2ec:	ldr	x0, [x0]
   1d2f0:	str	x0, [sp, #56]
   1d2f4:	ldr	x0, [sp, #56]
   1d2f8:	cmp	x0, #0x0
   1d2fc:	b.eq	1d328 <htab_find_with_hash@@Base+0x94>  // b.none
   1d300:	ldr	x0, [sp, #56]
   1d304:	cmp	x0, #0x1
   1d308:	b.eq	1d330 <htab_find_with_hash@@Base+0x9c>  // b.none
   1d30c:	ldr	x0, [sp, #40]
   1d310:	ldr	x2, [x0, #8]
   1d314:	ldr	x1, [sp, #32]
   1d318:	ldr	x0, [sp, #56]
   1d31c:	blr	x2
   1d320:	cmp	w0, #0x0
   1d324:	b.eq	1d330 <htab_find_with_hash@@Base+0x9c>  // b.none
   1d328:	ldr	x0, [sp, #56]
   1d32c:	b	1d3dc <htab_find_with_hash@@Base+0x148>
   1d330:	ldr	x1, [sp, #40]
   1d334:	ldr	w0, [sp, #28]
   1d338:	bl	1c820 <htab_elements@@Base+0x108>
   1d33c:	str	w0, [sp, #52]
   1d340:	ldr	x0, [sp, #40]
   1d344:	ldr	w0, [x0, #60]
   1d348:	add	w1, w0, #0x1
   1d34c:	ldr	x0, [sp, #40]
   1d350:	str	w1, [x0, #60]
   1d354:	ldr	w1, [sp, #76]
   1d358:	ldr	w0, [sp, #52]
   1d35c:	add	w0, w1, w0
   1d360:	str	w0, [sp, #76]
   1d364:	ldr	w0, [sp, #76]
   1d368:	ldr	x1, [sp, #64]
   1d36c:	cmp	x1, x0
   1d370:	b.hi	1d388 <htab_find_with_hash@@Base+0xf4>  // b.pmore
   1d374:	ldr	x0, [sp, #64]
   1d378:	mov	w1, w0
   1d37c:	ldr	w0, [sp, #76]
   1d380:	sub	w0, w0, w1
   1d384:	str	w0, [sp, #76]
   1d388:	ldr	x0, [sp, #40]
   1d38c:	ldr	x1, [x0, #24]
   1d390:	ldr	w0, [sp, #76]
   1d394:	lsl	x0, x0, #3
   1d398:	add	x0, x1, x0
   1d39c:	ldr	x0, [x0]
   1d3a0:	str	x0, [sp, #56]
   1d3a4:	ldr	x0, [sp, #56]
   1d3a8:	cmp	x0, #0x0
   1d3ac:	b.eq	1d3d8 <htab_find_with_hash@@Base+0x144>  // b.none
   1d3b0:	ldr	x0, [sp, #56]
   1d3b4:	cmp	x0, #0x1
   1d3b8:	b.eq	1d340 <htab_find_with_hash@@Base+0xac>  // b.none
   1d3bc:	ldr	x0, [sp, #40]
   1d3c0:	ldr	x2, [x0, #8]
   1d3c4:	ldr	x1, [sp, #32]
   1d3c8:	ldr	x0, [sp, #56]
   1d3cc:	blr	x2
   1d3d0:	cmp	w0, #0x0
   1d3d4:	b.eq	1d340 <htab_find_with_hash@@Base+0xac>  // b.none
   1d3d8:	ldr	x0, [sp, #56]
   1d3dc:	ldp	x29, x30, [sp], #80
   1d3e0:	ret

000000000001d3e4 <htab_find@@Base>:
   1d3e4:	stp	x29, x30, [sp, #-32]!
   1d3e8:	mov	x29, sp
   1d3ec:	str	x0, [sp, #24]
   1d3f0:	str	x1, [sp, #16]
   1d3f4:	ldr	x0, [sp, #24]
   1d3f8:	ldr	x1, [x0]
   1d3fc:	ldr	x0, [sp, #16]
   1d400:	blr	x1
   1d404:	mov	w2, w0
   1d408:	ldr	x1, [sp, #16]
   1d40c:	ldr	x0, [sp, #24]
   1d410:	bl	6b70 <htab_find_with_hash@plt>
   1d414:	ldp	x29, x30, [sp], #32
   1d418:	ret

000000000001d41c <htab_find_slot_with_hash@@Base>:
   1d41c:	stp	x29, x30, [sp, #-96]!
   1d420:	mov	x29, sp
   1d424:	str	x0, [sp, #40]
   1d428:	str	x1, [sp, #32]
   1d42c:	str	w2, [sp, #28]
   1d430:	str	w3, [sp, #24]
   1d434:	ldr	x0, [sp, #40]
   1d438:	ldr	x0, [x0, #32]
   1d43c:	str	x0, [sp, #72]
   1d440:	ldr	w0, [sp, #24]
   1d444:	cmp	w0, #0x1
   1d448:	b.ne	1d494 <htab_find_slot_with_hash@@Base+0x78>  // b.any
   1d44c:	ldr	x1, [sp, #72]
   1d450:	mov	x0, x1
   1d454:	lsl	x0, x0, #1
   1d458:	add	x1, x0, x1
   1d45c:	ldr	x0, [sp, #40]
   1d460:	ldr	x0, [x0, #40]
   1d464:	lsl	x0, x0, #2
   1d468:	cmp	x1, x0
   1d46c:	b.hi	1d494 <htab_find_slot_with_hash@@Base+0x78>  // b.pmore
   1d470:	ldr	x0, [sp, #40]
   1d474:	bl	1d04c <htab_empty@@Base+0x2f0>
   1d478:	cmp	w0, #0x0
   1d47c:	b.ne	1d488 <htab_find_slot_with_hash@@Base+0x6c>  // b.any
   1d480:	mov	x0, #0x0                   	// #0
   1d484:	b	1d6a0 <htab_find_slot_with_hash@@Base+0x284>
   1d488:	ldr	x0, [sp, #40]
   1d48c:	ldr	x0, [x0, #32]
   1d490:	str	x0, [sp, #72]
   1d494:	ldr	x1, [sp, #40]
   1d498:	ldr	w0, [sp, #28]
   1d49c:	bl	1c7c4 <htab_elements@@Base+0xac>
   1d4a0:	str	w0, [sp, #84]
   1d4a4:	ldr	x0, [sp, #40]
   1d4a8:	ldr	w0, [x0, #56]
   1d4ac:	add	w1, w0, #0x1
   1d4b0:	ldr	x0, [sp, #40]
   1d4b4:	str	w1, [x0, #56]
   1d4b8:	str	xzr, [sp, #88]
   1d4bc:	ldr	x0, [sp, #40]
   1d4c0:	ldr	x1, [x0, #24]
   1d4c4:	ldr	w0, [sp, #84]
   1d4c8:	lsl	x0, x0, #3
   1d4cc:	add	x0, x1, x0
   1d4d0:	ldr	x0, [x0]
   1d4d4:	str	x0, [sp, #64]
   1d4d8:	ldr	x0, [sp, #64]
   1d4dc:	cmp	x0, #0x0
   1d4e0:	b.eq	1d628 <htab_find_slot_with_hash@@Base+0x20c>  // b.none
   1d4e4:	ldr	x0, [sp, #64]
   1d4e8:	cmp	x0, #0x1
   1d4ec:	b.ne	1d50c <htab_find_slot_with_hash@@Base+0xf0>  // b.any
   1d4f0:	ldr	x0, [sp, #40]
   1d4f4:	ldr	x1, [x0, #24]
   1d4f8:	ldr	w0, [sp, #84]
   1d4fc:	lsl	x0, x0, #3
   1d500:	add	x0, x1, x0
   1d504:	str	x0, [sp, #88]
   1d508:	b	1d540 <htab_find_slot_with_hash@@Base+0x124>
   1d50c:	ldr	x0, [sp, #40]
   1d510:	ldr	x2, [x0, #8]
   1d514:	ldr	x1, [sp, #32]
   1d518:	ldr	x0, [sp, #64]
   1d51c:	blr	x2
   1d520:	cmp	w0, #0x0
   1d524:	b.eq	1d540 <htab_find_slot_with_hash@@Base+0x124>  // b.none
   1d528:	ldr	x0, [sp, #40]
   1d52c:	ldr	x1, [x0, #24]
   1d530:	ldr	w0, [sp, #84]
   1d534:	lsl	x0, x0, #3
   1d538:	add	x0, x1, x0
   1d53c:	b	1d6a0 <htab_find_slot_with_hash@@Base+0x284>
   1d540:	ldr	x1, [sp, #40]
   1d544:	ldr	w0, [sp, #28]
   1d548:	bl	1c820 <htab_elements@@Base+0x108>
   1d54c:	str	w0, [sp, #60]
   1d550:	ldr	x0, [sp, #40]
   1d554:	ldr	w0, [x0, #60]
   1d558:	add	w1, w0, #0x1
   1d55c:	ldr	x0, [sp, #40]
   1d560:	str	w1, [x0, #60]
   1d564:	ldr	w1, [sp, #84]
   1d568:	ldr	w0, [sp, #60]
   1d56c:	add	w0, w1, w0
   1d570:	str	w0, [sp, #84]
   1d574:	ldr	w0, [sp, #84]
   1d578:	ldr	x1, [sp, #72]
   1d57c:	cmp	x1, x0
   1d580:	b.hi	1d598 <htab_find_slot_with_hash@@Base+0x17c>  // b.pmore
   1d584:	ldr	x0, [sp, #72]
   1d588:	mov	w1, w0
   1d58c:	ldr	w0, [sp, #84]
   1d590:	sub	w0, w0, w1
   1d594:	str	w0, [sp, #84]
   1d598:	ldr	x0, [sp, #40]
   1d59c:	ldr	x1, [x0, #24]
   1d5a0:	ldr	w0, [sp, #84]
   1d5a4:	lsl	x0, x0, #3
   1d5a8:	add	x0, x1, x0
   1d5ac:	ldr	x0, [x0]
   1d5b0:	str	x0, [sp, #64]
   1d5b4:	ldr	x0, [sp, #64]
   1d5b8:	cmp	x0, #0x0
   1d5bc:	b.eq	1d630 <htab_find_slot_with_hash@@Base+0x214>  // b.none
   1d5c0:	ldr	x0, [sp, #64]
   1d5c4:	cmp	x0, #0x1
   1d5c8:	b.ne	1d5f4 <htab_find_slot_with_hash@@Base+0x1d8>  // b.any
   1d5cc:	ldr	x0, [sp, #88]
   1d5d0:	cmp	x0, #0x0
   1d5d4:	b.ne	1d550 <htab_find_slot_with_hash@@Base+0x134>  // b.any
   1d5d8:	ldr	x0, [sp, #40]
   1d5dc:	ldr	x1, [x0, #24]
   1d5e0:	ldr	w0, [sp, #84]
   1d5e4:	lsl	x0, x0, #3
   1d5e8:	add	x0, x1, x0
   1d5ec:	str	x0, [sp, #88]
   1d5f0:	b	1d550 <htab_find_slot_with_hash@@Base+0x134>
   1d5f4:	ldr	x0, [sp, #40]
   1d5f8:	ldr	x2, [x0, #8]
   1d5fc:	ldr	x1, [sp, #32]
   1d600:	ldr	x0, [sp, #64]
   1d604:	blr	x2
   1d608:	cmp	w0, #0x0
   1d60c:	b.eq	1d550 <htab_find_slot_with_hash@@Base+0x134>  // b.none
   1d610:	ldr	x0, [sp, #40]
   1d614:	ldr	x1, [x0, #24]
   1d618:	ldr	w0, [sp, #84]
   1d61c:	lsl	x0, x0, #3
   1d620:	add	x0, x1, x0
   1d624:	b	1d6a0 <htab_find_slot_with_hash@@Base+0x284>
   1d628:	nop
   1d62c:	b	1d634 <htab_find_slot_with_hash@@Base+0x218>
   1d630:	nop
   1d634:	ldr	w0, [sp, #24]
   1d638:	cmp	w0, #0x0
   1d63c:	b.ne	1d648 <htab_find_slot_with_hash@@Base+0x22c>  // b.any
   1d640:	mov	x0, #0x0                   	// #0
   1d644:	b	1d6a0 <htab_find_slot_with_hash@@Base+0x284>
   1d648:	ldr	x0, [sp, #88]
   1d64c:	cmp	x0, #0x0
   1d650:	b.eq	1d678 <htab_find_slot_with_hash@@Base+0x25c>  // b.none
   1d654:	ldr	x0, [sp, #40]
   1d658:	ldr	x0, [x0, #48]
   1d65c:	sub	x1, x0, #0x1
   1d660:	ldr	x0, [sp, #40]
   1d664:	str	x1, [x0, #48]
   1d668:	ldr	x0, [sp, #88]
   1d66c:	str	xzr, [x0]
   1d670:	ldr	x0, [sp, #88]
   1d674:	b	1d6a0 <htab_find_slot_with_hash@@Base+0x284>
   1d678:	ldr	x0, [sp, #40]
   1d67c:	ldr	x0, [x0, #40]
   1d680:	add	x1, x0, #0x1
   1d684:	ldr	x0, [sp, #40]
   1d688:	str	x1, [x0, #40]
   1d68c:	ldr	x0, [sp, #40]
   1d690:	ldr	x1, [x0, #24]
   1d694:	ldr	w0, [sp, #84]
   1d698:	lsl	x0, x0, #3
   1d69c:	add	x0, x1, x0
   1d6a0:	ldp	x29, x30, [sp], #96
   1d6a4:	ret

000000000001d6a8 <htab_find_slot@@Base>:
   1d6a8:	stp	x29, x30, [sp, #-48]!
   1d6ac:	mov	x29, sp
   1d6b0:	str	x0, [sp, #40]
   1d6b4:	str	x1, [sp, #32]
   1d6b8:	str	w2, [sp, #28]
   1d6bc:	ldr	x0, [sp, #40]
   1d6c0:	ldr	x1, [x0]
   1d6c4:	ldr	x0, [sp, #32]
   1d6c8:	blr	x1
   1d6cc:	ldr	w3, [sp, #28]
   1d6d0:	mov	w2, w0
   1d6d4:	ldr	x1, [sp, #32]
   1d6d8:	ldr	x0, [sp, #40]
   1d6dc:	bl	6400 <htab_find_slot_with_hash@plt>
   1d6e0:	ldp	x29, x30, [sp], #48
   1d6e4:	ret

000000000001d6e8 <htab_remove_elt@@Base>:
   1d6e8:	stp	x29, x30, [sp, #-32]!
   1d6ec:	mov	x29, sp
   1d6f0:	str	x0, [sp, #24]
   1d6f4:	str	x1, [sp, #16]
   1d6f8:	ldr	x0, [sp, #24]
   1d6fc:	ldr	x1, [x0]
   1d700:	ldr	x0, [sp, #16]
   1d704:	blr	x1
   1d708:	mov	w2, w0
   1d70c:	ldr	x1, [sp, #16]
   1d710:	ldr	x0, [sp, #24]
   1d714:	bl	6800 <htab_remove_elt_with_hash@plt>
   1d718:	nop
   1d71c:	ldp	x29, x30, [sp], #32
   1d720:	ret

000000000001d724 <htab_remove_elt_with_hash@@Base>:
   1d724:	stp	x29, x30, [sp, #-64]!
   1d728:	mov	x29, sp
   1d72c:	str	x0, [sp, #40]
   1d730:	str	x1, [sp, #32]
   1d734:	str	w2, [sp, #28]
   1d738:	mov	w3, #0x0                   	// #0
   1d73c:	ldr	w2, [sp, #28]
   1d740:	ldr	x1, [sp, #32]
   1d744:	ldr	x0, [sp, #40]
   1d748:	bl	6400 <htab_find_slot_with_hash@plt>
   1d74c:	str	x0, [sp, #56]
   1d750:	ldr	x0, [sp, #56]
   1d754:	cmp	x0, #0x0
   1d758:	b.eq	1d7a4 <htab_remove_elt_with_hash@@Base+0x80>  // b.none
   1d75c:	ldr	x0, [sp, #40]
   1d760:	ldr	x0, [x0, #16]
   1d764:	cmp	x0, #0x0
   1d768:	b.eq	1d780 <htab_remove_elt_with_hash@@Base+0x5c>  // b.none
   1d76c:	ldr	x0, [sp, #40]
   1d770:	ldr	x1, [x0, #16]
   1d774:	ldr	x0, [sp, #56]
   1d778:	ldr	x0, [x0]
   1d77c:	blr	x1
   1d780:	ldr	x0, [sp, #56]
   1d784:	mov	x1, #0x1                   	// #1
   1d788:	str	x1, [x0]
   1d78c:	ldr	x0, [sp, #40]
   1d790:	ldr	x0, [x0, #48]
   1d794:	add	x1, x0, #0x1
   1d798:	ldr	x0, [sp, #40]
   1d79c:	str	x1, [x0, #48]
   1d7a0:	b	1d7a8 <htab_remove_elt_with_hash@@Base+0x84>
   1d7a4:	nop
   1d7a8:	ldp	x29, x30, [sp], #64
   1d7ac:	ret

000000000001d7b0 <htab_clear_slot@@Base>:
   1d7b0:	stp	x29, x30, [sp, #-32]!
   1d7b4:	mov	x29, sp
   1d7b8:	str	x0, [sp, #24]
   1d7bc:	str	x1, [sp, #16]
   1d7c0:	ldr	x0, [sp, #24]
   1d7c4:	ldr	x0, [x0, #24]
   1d7c8:	ldr	x1, [sp, #16]
   1d7cc:	cmp	x1, x0
   1d7d0:	b.cc	1d818 <htab_clear_slot@@Base+0x68>  // b.lo, b.ul, b.last
   1d7d4:	ldr	x0, [sp, #24]
   1d7d8:	ldr	x1, [x0, #24]
   1d7dc:	ldr	x0, [sp, #24]
   1d7e0:	ldr	x0, [x0, #32]
   1d7e4:	lsl	x0, x0, #3
   1d7e8:	add	x0, x1, x0
   1d7ec:	ldr	x1, [sp, #16]
   1d7f0:	cmp	x1, x0
   1d7f4:	b.cs	1d818 <htab_clear_slot@@Base+0x68>  // b.hs, b.nlast
   1d7f8:	ldr	x0, [sp, #16]
   1d7fc:	ldr	x0, [x0]
   1d800:	cmp	x0, #0x0
   1d804:	b.eq	1d818 <htab_clear_slot@@Base+0x68>  // b.none
   1d808:	ldr	x0, [sp, #16]
   1d80c:	ldr	x0, [x0]
   1d810:	cmp	x0, #0x1
   1d814:	b.ne	1d81c <htab_clear_slot@@Base+0x6c>  // b.any
   1d818:	bl	6ad0 <abort@plt>
   1d81c:	ldr	x0, [sp, #24]
   1d820:	ldr	x0, [x0, #16]
   1d824:	cmp	x0, #0x0
   1d828:	b.eq	1d840 <htab_clear_slot@@Base+0x90>  // b.none
   1d82c:	ldr	x0, [sp, #24]
   1d830:	ldr	x1, [x0, #16]
   1d834:	ldr	x0, [sp, #16]
   1d838:	ldr	x0, [x0]
   1d83c:	blr	x1
   1d840:	ldr	x0, [sp, #16]
   1d844:	mov	x1, #0x1                   	// #1
   1d848:	str	x1, [x0]
   1d84c:	ldr	x0, [sp, #24]
   1d850:	ldr	x0, [x0, #48]
   1d854:	add	x1, x0, #0x1
   1d858:	ldr	x0, [sp, #24]
   1d85c:	str	x1, [x0, #48]
   1d860:	nop
   1d864:	ldp	x29, x30, [sp], #32
   1d868:	ret

000000000001d86c <htab_traverse_noresize@@Base>:
   1d86c:	stp	x29, x30, [sp, #-80]!
   1d870:	mov	x29, sp
   1d874:	str	x0, [sp, #40]
   1d878:	str	x1, [sp, #32]
   1d87c:	str	x2, [sp, #24]
   1d880:	ldr	x0, [sp, #40]
   1d884:	ldr	x0, [x0, #24]
   1d888:	str	x0, [sp, #72]
   1d88c:	ldr	x0, [sp, #40]
   1d890:	ldr	x0, [x0, #32]
   1d894:	lsl	x0, x0, #3
   1d898:	ldr	x1, [sp, #72]
   1d89c:	add	x0, x1, x0
   1d8a0:	str	x0, [sp, #64]
   1d8a4:	ldr	x0, [sp, #72]
   1d8a8:	ldr	x0, [x0]
   1d8ac:	str	x0, [sp, #56]
   1d8b0:	ldr	x0, [sp, #56]
   1d8b4:	cmp	x0, #0x0
   1d8b8:	b.eq	1d8e0 <htab_traverse_noresize@@Base+0x74>  // b.none
   1d8bc:	ldr	x0, [sp, #56]
   1d8c0:	cmp	x0, #0x1
   1d8c4:	b.eq	1d8e0 <htab_traverse_noresize@@Base+0x74>  // b.none
   1d8c8:	ldr	x2, [sp, #32]
   1d8cc:	ldr	x1, [sp, #24]
   1d8d0:	ldr	x0, [sp, #72]
   1d8d4:	blr	x2
   1d8d8:	cmp	w0, #0x0
   1d8dc:	b.eq	1d900 <htab_traverse_noresize@@Base+0x94>  // b.none
   1d8e0:	ldr	x0, [sp, #72]
   1d8e4:	add	x0, x0, #0x8
   1d8e8:	str	x0, [sp, #72]
   1d8ec:	ldr	x1, [sp, #72]
   1d8f0:	ldr	x0, [sp, #64]
   1d8f4:	cmp	x1, x0
   1d8f8:	b.cc	1d8a4 <htab_traverse_noresize@@Base+0x38>  // b.lo, b.ul, b.last
   1d8fc:	b	1d904 <htab_traverse_noresize@@Base+0x98>
   1d900:	nop
   1d904:	nop
   1d908:	ldp	x29, x30, [sp], #80
   1d90c:	ret

000000000001d910 <htab_traverse@@Base>:
   1d910:	stp	x29, x30, [sp, #-64]!
   1d914:	mov	x29, sp
   1d918:	str	x0, [sp, #40]
   1d91c:	str	x1, [sp, #32]
   1d920:	str	x2, [sp, #24]
   1d924:	ldr	x0, [sp, #40]
   1d928:	ldr	x0, [x0, #32]
   1d92c:	str	x0, [sp, #56]
   1d930:	ldr	x0, [sp, #40]
   1d934:	ldr	x1, [x0, #40]
   1d938:	ldr	x0, [sp, #40]
   1d93c:	ldr	x0, [x0, #48]
   1d940:	sub	x0, x1, x0
   1d944:	lsl	x0, x0, #3
   1d948:	ldr	x1, [sp, #56]
   1d94c:	cmp	x1, x0
   1d950:	b.ls	1d968 <htab_traverse@@Base+0x58>  // b.plast
   1d954:	ldr	x0, [sp, #56]
   1d958:	cmp	x0, #0x20
   1d95c:	b.ls	1d968 <htab_traverse@@Base+0x58>  // b.plast
   1d960:	ldr	x0, [sp, #40]
   1d964:	bl	1d04c <htab_empty@@Base+0x2f0>
   1d968:	ldr	x2, [sp, #24]
   1d96c:	ldr	x1, [sp, #32]
   1d970:	ldr	x0, [sp, #40]
   1d974:	bl	6900 <htab_traverse_noresize@plt>
   1d978:	nop
   1d97c:	ldp	x29, x30, [sp], #64
   1d980:	ret

000000000001d984 <htab_collisions@@Base>:
   1d984:	sub	sp, sp, #0x10
   1d988:	str	x0, [sp, #8]
   1d98c:	ldr	x0, [sp, #8]
   1d990:	ldr	w0, [x0, #56]
   1d994:	cmp	w0, #0x0
   1d998:	b.ne	1d9a4 <htab_collisions@@Base+0x20>  // b.any
   1d99c:	movi	d0, #0x0
   1d9a0:	b	1d9c0 <htab_collisions@@Base+0x3c>
   1d9a4:	ldr	x0, [sp, #8]
   1d9a8:	ldr	w0, [x0, #60]
   1d9ac:	ucvtf	d1, w0
   1d9b0:	ldr	x0, [sp, #8]
   1d9b4:	ldr	w0, [x0, #56]
   1d9b8:	ucvtf	d0, w0
   1d9bc:	fdiv	d0, d1, d0
   1d9c0:	add	sp, sp, #0x10
   1d9c4:	ret

000000000001d9c8 <htab_hash_string@@Base>:
   1d9c8:	sub	sp, sp, #0x20
   1d9cc:	str	x0, [sp, #8]
   1d9d0:	ldr	x0, [sp, #8]
   1d9d4:	str	x0, [sp, #24]
   1d9d8:	str	wzr, [sp, #20]
   1d9dc:	b	1d9fc <htab_hash_string@@Base+0x34>
   1d9e0:	ldr	w1, [sp, #20]
   1d9e4:	mov	w0, #0x43                  	// #67
   1d9e8:	mul	w1, w1, w0
   1d9ec:	ldrb	w0, [sp, #19]
   1d9f0:	add	w0, w1, w0
   1d9f4:	sub	w0, w0, #0x71
   1d9f8:	str	w0, [sp, #20]
   1d9fc:	ldr	x0, [sp, #24]
   1da00:	add	x1, x0, #0x1
   1da04:	str	x1, [sp, #24]
   1da08:	ldrb	w0, [x0]
   1da0c:	strb	w0, [sp, #19]
   1da10:	ldrb	w0, [sp, #19]
   1da14:	cmp	w0, #0x0
   1da18:	b.ne	1d9e0 <htab_hash_string@@Base+0x18>  // b.any
   1da1c:	ldr	w0, [sp, #20]
   1da20:	add	sp, sp, #0x20
   1da24:	ret

000000000001da28 <iterative_hash@@Base>:
   1da28:	stp	x19, x20, [sp, #-64]!
   1da2c:	stp	x21, x22, [sp, #16]
   1da30:	str	x23, [sp, #32]
   1da34:	str	x0, [sp, #56]
   1da38:	mov	x3, x1
   1da3c:	mov	w0, w2
   1da40:	ldr	x22, [sp, #56]
   1da44:	mov	w23, w3
   1da48:	mov	w19, #0x79b9                	// #31161
   1da4c:	movk	w19, #0x9e37, lsl #16
   1da50:	mov	w21, w19
   1da54:	mov	w20, w0
   1da58:	mov	x0, x22
   1da5c:	and	x0, x0, #0x3
   1da60:	cmp	x0, #0x0
   1da64:	b.ne	1dc84 <iterative_hash@@Base+0x25c>  // b.any
   1da68:	b	1db24 <iterative_hash@@Base+0xfc>
   1da6c:	ldr	w0, [x22]
   1da70:	add	w21, w21, w0
   1da74:	add	x0, x22, #0x4
   1da78:	ldr	w0, [x0]
   1da7c:	add	w19, w19, w0
   1da80:	add	x0, x22, #0x8
   1da84:	ldr	w0, [x0]
   1da88:	add	w20, w20, w0
   1da8c:	sub	w21, w21, w19
   1da90:	sub	w21, w21, w20
   1da94:	lsr	w0, w20, #13
   1da98:	eor	w21, w21, w0
   1da9c:	sub	w19, w19, w20
   1daa0:	sub	w19, w19, w21
   1daa4:	lsl	w0, w21, #8
   1daa8:	eor	w19, w19, w0
   1daac:	sub	w20, w20, w21
   1dab0:	sub	w20, w20, w19
   1dab4:	lsr	w0, w19, #13
   1dab8:	eor	w20, w20, w0
   1dabc:	sub	w21, w21, w19
   1dac0:	sub	w21, w21, w20
   1dac4:	lsr	w0, w20, #12
   1dac8:	eor	w21, w21, w0
   1dacc:	sub	w19, w19, w20
   1dad0:	sub	w19, w19, w21
   1dad4:	lsl	w0, w21, #16
   1dad8:	eor	w19, w19, w0
   1dadc:	sub	w20, w20, w21
   1dae0:	sub	w20, w20, w19
   1dae4:	lsr	w0, w19, #5
   1dae8:	eor	w20, w20, w0
   1daec:	sub	w21, w21, w19
   1daf0:	sub	w21, w21, w20
   1daf4:	lsr	w0, w20, #3
   1daf8:	eor	w21, w21, w0
   1dafc:	sub	w19, w19, w20
   1db00:	sub	w19, w19, w21
   1db04:	lsl	w0, w21, #10
   1db08:	eor	w19, w19, w0
   1db0c:	sub	w20, w20, w21
   1db10:	sub	w20, w20, w19
   1db14:	lsr	w0, w19, #15
   1db18:	eor	w20, w20, w0
   1db1c:	add	x22, x22, #0xc
   1db20:	sub	w23, w23, #0xc
   1db24:	cmp	w23, #0xb
   1db28:	b.hi	1da6c <iterative_hash@@Base+0x44>  // b.pmore
   1db2c:	b	1dc8c <iterative_hash@@Base+0x264>
   1db30:	ldrb	w0, [x22]
   1db34:	mov	w1, w0
   1db38:	add	x0, x22, #0x1
   1db3c:	ldrb	w0, [x0]
   1db40:	lsl	w0, w0, #8
   1db44:	add	w1, w1, w0
   1db48:	add	x0, x22, #0x2
   1db4c:	ldrb	w0, [x0]
   1db50:	lsl	w0, w0, #16
   1db54:	add	w1, w1, w0
   1db58:	add	x0, x22, #0x3
   1db5c:	ldrb	w0, [x0]
   1db60:	lsl	w0, w0, #24
   1db64:	add	w0, w1, w0
   1db68:	add	w21, w21, w0
   1db6c:	add	x0, x22, #0x4
   1db70:	ldrb	w0, [x0]
   1db74:	mov	w1, w0
   1db78:	add	x0, x22, #0x5
   1db7c:	ldrb	w0, [x0]
   1db80:	lsl	w0, w0, #8
   1db84:	add	w1, w1, w0
   1db88:	add	x0, x22, #0x6
   1db8c:	ldrb	w0, [x0]
   1db90:	lsl	w0, w0, #16
   1db94:	add	w1, w1, w0
   1db98:	add	x0, x22, #0x7
   1db9c:	ldrb	w0, [x0]
   1dba0:	lsl	w0, w0, #24
   1dba4:	add	w0, w1, w0
   1dba8:	add	w19, w19, w0
   1dbac:	add	x0, x22, #0x8
   1dbb0:	ldrb	w0, [x0]
   1dbb4:	mov	w1, w0
   1dbb8:	add	x0, x22, #0x9
   1dbbc:	ldrb	w0, [x0]
   1dbc0:	lsl	w0, w0, #8
   1dbc4:	add	w1, w1, w0
   1dbc8:	add	x0, x22, #0xa
   1dbcc:	ldrb	w0, [x0]
   1dbd0:	lsl	w0, w0, #16
   1dbd4:	add	w1, w1, w0
   1dbd8:	add	x0, x22, #0xb
   1dbdc:	ldrb	w0, [x0]
   1dbe0:	lsl	w0, w0, #24
   1dbe4:	add	w0, w1, w0
   1dbe8:	add	w20, w20, w0
   1dbec:	sub	w21, w21, w19
   1dbf0:	sub	w21, w21, w20
   1dbf4:	lsr	w0, w20, #13
   1dbf8:	eor	w21, w21, w0
   1dbfc:	sub	w19, w19, w20
   1dc00:	sub	w19, w19, w21
   1dc04:	lsl	w0, w21, #8
   1dc08:	eor	w19, w19, w0
   1dc0c:	sub	w20, w20, w21
   1dc10:	sub	w20, w20, w19
   1dc14:	lsr	w0, w19, #13
   1dc18:	eor	w20, w20, w0
   1dc1c:	sub	w21, w21, w19
   1dc20:	sub	w21, w21, w20
   1dc24:	lsr	w0, w20, #12
   1dc28:	eor	w21, w21, w0
   1dc2c:	sub	w19, w19, w20
   1dc30:	sub	w19, w19, w21
   1dc34:	lsl	w0, w21, #16
   1dc38:	eor	w19, w19, w0
   1dc3c:	sub	w20, w20, w21
   1dc40:	sub	w20, w20, w19
   1dc44:	lsr	w0, w19, #5
   1dc48:	eor	w20, w20, w0
   1dc4c:	sub	w21, w21, w19
   1dc50:	sub	w21, w21, w20
   1dc54:	lsr	w0, w20, #3
   1dc58:	eor	w21, w21, w0
   1dc5c:	sub	w19, w19, w20
   1dc60:	sub	w19, w19, w21
   1dc64:	lsl	w0, w21, #10
   1dc68:	eor	w19, w19, w0
   1dc6c:	sub	w20, w20, w21
   1dc70:	sub	w20, w20, w19
   1dc74:	lsr	w0, w19, #15
   1dc78:	eor	w20, w20, w0
   1dc7c:	add	x22, x22, #0xc
   1dc80:	sub	w23, w23, #0xc
   1dc84:	cmp	w23, #0xb
   1dc88:	b.hi	1db30 <iterative_hash@@Base+0x108>  // b.pmore
   1dc8c:	mov	w0, w3
   1dc90:	add	w20, w20, w0
   1dc94:	cmp	w23, #0xb
   1dc98:	b.eq	1dd38 <iterative_hash@@Base+0x310>  // b.none
   1dc9c:	cmp	w23, #0xb
   1dca0:	b.hi	1dddc <iterative_hash@@Base+0x3b4>  // b.pmore
   1dca4:	cmp	w23, #0xa
   1dca8:	b.eq	1dd48 <iterative_hash@@Base+0x320>  // b.none
   1dcac:	cmp	w23, #0xa
   1dcb0:	b.hi	1dddc <iterative_hash@@Base+0x3b4>  // b.pmore
   1dcb4:	cmp	w23, #0x9
   1dcb8:	b.eq	1dd58 <iterative_hash@@Base+0x330>  // b.none
   1dcbc:	cmp	w23, #0x9
   1dcc0:	b.hi	1dddc <iterative_hash@@Base+0x3b4>  // b.pmore
   1dcc4:	cmp	w23, #0x8
   1dcc8:	b.eq	1dd68 <iterative_hash@@Base+0x340>  // b.none
   1dccc:	cmp	w23, #0x8
   1dcd0:	b.hi	1dddc <iterative_hash@@Base+0x3b4>  // b.pmore
   1dcd4:	cmp	w23, #0x7
   1dcd8:	b.eq	1dd78 <iterative_hash@@Base+0x350>  // b.none
   1dcdc:	cmp	w23, #0x7
   1dce0:	b.hi	1dddc <iterative_hash@@Base+0x3b4>  // b.pmore
   1dce4:	cmp	w23, #0x6
   1dce8:	b.eq	1dd88 <iterative_hash@@Base+0x360>  // b.none
   1dcec:	cmp	w23, #0x6
   1dcf0:	b.hi	1dddc <iterative_hash@@Base+0x3b4>  // b.pmore
   1dcf4:	cmp	w23, #0x5
   1dcf8:	b.eq	1dd98 <iterative_hash@@Base+0x370>  // b.none
   1dcfc:	cmp	w23, #0x5
   1dd00:	b.hi	1dddc <iterative_hash@@Base+0x3b4>  // b.pmore
   1dd04:	cmp	w23, #0x4
   1dd08:	b.eq	1dda4 <iterative_hash@@Base+0x37c>  // b.none
   1dd0c:	cmp	w23, #0x4
   1dd10:	b.hi	1dddc <iterative_hash@@Base+0x3b4>  // b.pmore
   1dd14:	cmp	w23, #0x3
   1dd18:	b.eq	1ddb4 <iterative_hash@@Base+0x38c>  // b.none
   1dd1c:	cmp	w23, #0x3
   1dd20:	b.hi	1dddc <iterative_hash@@Base+0x3b4>  // b.pmore
   1dd24:	cmp	w23, #0x1
   1dd28:	b.eq	1ddd4 <iterative_hash@@Base+0x3ac>  // b.none
   1dd2c:	cmp	w23, #0x2
   1dd30:	b.eq	1ddc4 <iterative_hash@@Base+0x39c>  // b.none
   1dd34:	b	1dddc <iterative_hash@@Base+0x3b4>
   1dd38:	add	x0, x22, #0xa
   1dd3c:	ldrb	w0, [x0]
   1dd40:	lsl	w0, w0, #24
   1dd44:	add	w20, w20, w0
   1dd48:	add	x0, x22, #0x9
   1dd4c:	ldrb	w0, [x0]
   1dd50:	lsl	w0, w0, #16
   1dd54:	add	w20, w20, w0
   1dd58:	add	x0, x22, #0x8
   1dd5c:	ldrb	w0, [x0]
   1dd60:	lsl	w0, w0, #8
   1dd64:	add	w20, w20, w0
   1dd68:	add	x0, x22, #0x7
   1dd6c:	ldrb	w0, [x0]
   1dd70:	lsl	w0, w0, #24
   1dd74:	add	w19, w19, w0
   1dd78:	add	x0, x22, #0x6
   1dd7c:	ldrb	w0, [x0]
   1dd80:	lsl	w0, w0, #16
   1dd84:	add	w19, w19, w0
   1dd88:	add	x0, x22, #0x5
   1dd8c:	ldrb	w0, [x0]
   1dd90:	lsl	w0, w0, #8
   1dd94:	add	w19, w19, w0
   1dd98:	add	x0, x22, #0x4
   1dd9c:	ldrb	w0, [x0]
   1dda0:	add	w19, w19, w0
   1dda4:	add	x0, x22, #0x3
   1dda8:	ldrb	w0, [x0]
   1ddac:	lsl	w0, w0, #24
   1ddb0:	add	w21, w21, w0
   1ddb4:	add	x0, x22, #0x2
   1ddb8:	ldrb	w0, [x0]
   1ddbc:	lsl	w0, w0, #16
   1ddc0:	add	w21, w21, w0
   1ddc4:	add	x0, x22, #0x1
   1ddc8:	ldrb	w0, [x0]
   1ddcc:	lsl	w0, w0, #8
   1ddd0:	add	w21, w21, w0
   1ddd4:	ldrb	w0, [x22]
   1ddd8:	add	w21, w21, w0
   1dddc:	sub	w21, w21, w19
   1dde0:	sub	w21, w21, w20
   1dde4:	lsr	w0, w20, #13
   1dde8:	eor	w21, w21, w0
   1ddec:	sub	w19, w19, w20
   1ddf0:	sub	w19, w19, w21
   1ddf4:	lsl	w0, w21, #8
   1ddf8:	eor	w19, w19, w0
   1ddfc:	sub	w20, w20, w21
   1de00:	sub	w20, w20, w19
   1de04:	lsr	w0, w19, #13
   1de08:	eor	w20, w20, w0
   1de0c:	sub	w21, w21, w19
   1de10:	sub	w21, w21, w20
   1de14:	lsr	w0, w20, #12
   1de18:	eor	w21, w21, w0
   1de1c:	sub	w19, w19, w20
   1de20:	sub	w19, w19, w21
   1de24:	lsl	w0, w21, #16
   1de28:	eor	w19, w19, w0
   1de2c:	sub	w20, w20, w21
   1de30:	sub	w20, w20, w19
   1de34:	lsr	w0, w19, #5
   1de38:	eor	w20, w20, w0
   1de3c:	sub	w21, w21, w19
   1de40:	sub	w21, w21, w20
   1de44:	lsr	w0, w20, #3
   1de48:	eor	w21, w21, w0
   1de4c:	sub	w19, w19, w20
   1de50:	sub	w19, w19, w21
   1de54:	lsl	w0, w21, #10
   1de58:	eor	w19, w19, w0
   1de5c:	sub	w20, w20, w21
   1de60:	sub	w20, w20, w19
   1de64:	lsr	w0, w19, #15
   1de68:	eor	w20, w20, w0
   1de6c:	mov	w0, w20
   1de70:	ldp	x21, x22, [sp, #16]
   1de74:	ldr	x23, [sp, #32]
   1de78:	ldp	x19, x20, [sp], #64
   1de7c:	ret
   1de80:	sub	sp, sp, #0x30
   1de84:	str	x0, [sp, #8]
   1de88:	ldr	x0, [sp, #8]
   1de8c:	str	x0, [sp, #40]
   1de90:	mov	w0, #0x79b9                	// #31161
   1de94:	movk	w0, #0x9e37, lsl #16
   1de98:	str	w0, [sp, #36]
   1de9c:	ldr	w0, [sp, #36]
   1dea0:	str	w0, [sp, #32]
   1dea4:	ldr	x0, [sp, #40]
   1dea8:	asr	x0, x0, #32
   1deac:	mov	w1, w0
   1deb0:	ldr	w0, [sp, #32]
   1deb4:	add	w0, w0, w1
   1deb8:	str	w0, [sp, #32]
   1debc:	ldr	x0, [sp, #40]
   1dec0:	mov	w1, w0
   1dec4:	ldr	w0, [sp, #36]
   1dec8:	add	w0, w0, w1
   1decc:	str	w0, [sp, #36]
   1ded0:	mov	w0, #0x5234                	// #21044
   1ded4:	movk	w0, #0x4213, lsl #16
   1ded8:	str	w0, [sp, #28]
   1dedc:	ldr	w1, [sp, #32]
   1dee0:	ldr	w0, [sp, #36]
   1dee4:	sub	w0, w1, w0
   1dee8:	str	w0, [sp, #32]
   1deec:	ldr	w1, [sp, #32]
   1def0:	ldr	w0, [sp, #28]
   1def4:	sub	w0, w1, w0
   1def8:	str	w0, [sp, #32]
   1defc:	ldr	w0, [sp, #28]
   1df00:	lsr	w0, w0, #13
   1df04:	ldr	w1, [sp, #32]
   1df08:	eor	w0, w1, w0
   1df0c:	str	w0, [sp, #32]
   1df10:	ldr	w1, [sp, #36]
   1df14:	ldr	w0, [sp, #28]
   1df18:	sub	w0, w1, w0
   1df1c:	str	w0, [sp, #36]
   1df20:	ldr	w1, [sp, #36]
   1df24:	ldr	w0, [sp, #32]
   1df28:	sub	w0, w1, w0
   1df2c:	str	w0, [sp, #36]
   1df30:	ldr	w0, [sp, #32]
   1df34:	lsl	w0, w0, #8
   1df38:	ldr	w1, [sp, #36]
   1df3c:	eor	w0, w1, w0
   1df40:	str	w0, [sp, #36]
   1df44:	ldr	w1, [sp, #28]
   1df48:	ldr	w0, [sp, #32]
   1df4c:	sub	w0, w1, w0
   1df50:	str	w0, [sp, #28]
   1df54:	ldr	w1, [sp, #28]
   1df58:	ldr	w0, [sp, #36]
   1df5c:	sub	w0, w1, w0
   1df60:	str	w0, [sp, #28]
   1df64:	ldr	w0, [sp, #36]
   1df68:	lsr	w0, w0, #13
   1df6c:	ldr	w1, [sp, #28]
   1df70:	eor	w0, w1, w0
   1df74:	str	w0, [sp, #28]
   1df78:	ldr	w1, [sp, #32]
   1df7c:	ldr	w0, [sp, #36]
   1df80:	sub	w0, w1, w0
   1df84:	str	w0, [sp, #32]
   1df88:	ldr	w1, [sp, #32]
   1df8c:	ldr	w0, [sp, #28]
   1df90:	sub	w0, w1, w0
   1df94:	str	w0, [sp, #32]
   1df98:	ldr	w0, [sp, #28]
   1df9c:	lsr	w0, w0, #12
   1dfa0:	ldr	w1, [sp, #32]
   1dfa4:	eor	w0, w1, w0
   1dfa8:	str	w0, [sp, #32]
   1dfac:	ldr	w1, [sp, #36]
   1dfb0:	ldr	w0, [sp, #28]
   1dfb4:	sub	w0, w1, w0
   1dfb8:	str	w0, [sp, #36]
   1dfbc:	ldr	w1, [sp, #36]
   1dfc0:	ldr	w0, [sp, #32]
   1dfc4:	sub	w0, w1, w0
   1dfc8:	str	w0, [sp, #36]
   1dfcc:	ldr	w0, [sp, #32]
   1dfd0:	lsl	w0, w0, #16
   1dfd4:	ldr	w1, [sp, #36]
   1dfd8:	eor	w0, w1, w0
   1dfdc:	str	w0, [sp, #36]
   1dfe0:	ldr	w1, [sp, #28]
   1dfe4:	ldr	w0, [sp, #32]
   1dfe8:	sub	w0, w1, w0
   1dfec:	str	w0, [sp, #28]
   1dff0:	ldr	w1, [sp, #28]
   1dff4:	ldr	w0, [sp, #36]
   1dff8:	sub	w0, w1, w0
   1dffc:	str	w0, [sp, #28]
   1e000:	ldr	w0, [sp, #36]
   1e004:	lsr	w0, w0, #5
   1e008:	ldr	w1, [sp, #28]
   1e00c:	eor	w0, w1, w0
   1e010:	str	w0, [sp, #28]
   1e014:	ldr	w1, [sp, #32]
   1e018:	ldr	w0, [sp, #36]
   1e01c:	sub	w0, w1, w0
   1e020:	str	w0, [sp, #32]
   1e024:	ldr	w1, [sp, #32]
   1e028:	ldr	w0, [sp, #28]
   1e02c:	sub	w0, w1, w0
   1e030:	str	w0, [sp, #32]
   1e034:	ldr	w0, [sp, #28]
   1e038:	lsr	w0, w0, #3
   1e03c:	ldr	w1, [sp, #32]
   1e040:	eor	w0, w1, w0
   1e044:	str	w0, [sp, #32]
   1e048:	ldr	w1, [sp, #36]
   1e04c:	ldr	w0, [sp, #28]
   1e050:	sub	w0, w1, w0
   1e054:	str	w0, [sp, #36]
   1e058:	ldr	w1, [sp, #36]
   1e05c:	ldr	w0, [sp, #32]
   1e060:	sub	w0, w1, w0
   1e064:	str	w0, [sp, #36]
   1e068:	ldr	w0, [sp, #32]
   1e06c:	lsl	w0, w0, #10
   1e070:	ldr	w1, [sp, #36]
   1e074:	eor	w0, w1, w0
   1e078:	str	w0, [sp, #36]
   1e07c:	ldr	w1, [sp, #28]
   1e080:	ldr	w0, [sp, #32]
   1e084:	sub	w0, w1, w0
   1e088:	str	w0, [sp, #28]
   1e08c:	ldr	w1, [sp, #28]
   1e090:	ldr	w0, [sp, #36]
   1e094:	sub	w0, w1, w0
   1e098:	str	w0, [sp, #28]
   1e09c:	ldr	w0, [sp, #36]
   1e0a0:	lsr	w0, w0, #15
   1e0a4:	ldr	w1, [sp, #28]
   1e0a8:	eor	w0, w1, w0
   1e0ac:	str	w0, [sp, #28]
   1e0b0:	ldr	w0, [sp, #28]
   1e0b4:	add	sp, sp, #0x30
   1e0b8:	ret

000000000001e0bc <xmalloc_set_program_name@@Base>:
   1e0bc:	stp	x29, x30, [sp, #-32]!
   1e0c0:	mov	x29, sp
   1e0c4:	str	x0, [sp, #24]
   1e0c8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1e0cc:	add	x0, x0, #0x710
   1e0d0:	ldr	x1, [sp, #24]
   1e0d4:	str	x1, [x0]
   1e0d8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1e0dc:	add	x0, x0, #0x740
   1e0e0:	ldr	x0, [x0]
   1e0e4:	cmp	x0, #0x0
   1e0e8:	b.ne	1e104 <xmalloc_set_program_name@@Base+0x48>  // b.any
   1e0ec:	mov	x0, #0x0                   	// #0
   1e0f0:	bl	67d0 <sbrk@plt>
   1e0f4:	mov	x1, x0
   1e0f8:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1e0fc:	add	x0, x0, #0x740
   1e100:	str	x1, [x0]
   1e104:	nop
   1e108:	ldp	x29, x30, [sp], #32
   1e10c:	ret

000000000001e110 <xmalloc_failed@@Base>:
   1e110:	stp	x29, x30, [sp, #-48]!
   1e114:	mov	x29, sp
   1e118:	str	x0, [sp, #24]
   1e11c:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1e120:	add	x0, x0, #0x740
   1e124:	ldr	x0, [x0]
   1e128:	cmp	x0, #0x0
   1e12c:	b.eq	1e154 <xmalloc_failed@@Base+0x44>  // b.none
   1e130:	mov	x0, #0x0                   	// #0
   1e134:	bl	67d0 <sbrk@plt>
   1e138:	mov	x1, x0
   1e13c:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1e140:	add	x0, x0, #0x740
   1e144:	ldr	x0, [x0]
   1e148:	sub	x0, x1, x0
   1e14c:	str	x0, [sp, #40]
   1e150:	b	1e170 <xmalloc_failed@@Base+0x60>
   1e154:	mov	x0, #0x0                   	// #0
   1e158:	bl	67d0 <sbrk@plt>
   1e15c:	mov	x1, x0
   1e160:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1e164:	ldr	x0, [x0, #4056]
   1e168:	sub	x0, x1, x0
   1e16c:	str	x0, [sp, #40]
   1e170:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1e174:	ldr	x0, [x0, #4040]
   1e178:	ldr	x6, [x0]
   1e17c:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1e180:	add	x0, x0, #0x710
   1e184:	ldr	x1, [x0]
   1e188:	adrp	x0, 34000 <xexit@@Base+0x15c5c>
   1e18c:	add	x0, x0, #0x710
   1e190:	ldr	x0, [x0]
   1e194:	ldrb	w0, [x0]
   1e198:	cmp	w0, #0x0
   1e19c:	b.eq	1e1ac <xmalloc_failed@@Base+0x9c>  // b.none
   1e1a0:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   1e1a4:	add	x0, x0, #0x410
   1e1a8:	b	1e1b4 <xmalloc_failed@@Base+0xa4>
   1e1ac:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   1e1b0:	add	x0, x0, #0x408
   1e1b4:	ldr	x5, [sp, #40]
   1e1b8:	ldr	x4, [sp, #24]
   1e1bc:	mov	x3, x0
   1e1c0:	mov	x2, x1
   1e1c4:	adrp	x0, 1f000 <xexit@@Base+0xc5c>
   1e1c8:	add	x1, x0, #0x418
   1e1cc:	mov	x0, x6
   1e1d0:	bl	61c0 <fprintf@plt>
   1e1d4:	mov	w0, #0x1                   	// #1
   1e1d8:	bl	6aa0 <xexit@plt>

000000000001e1dc <xmalloc@@Base>:
   1e1dc:	stp	x29, x30, [sp, #-48]!
   1e1e0:	mov	x29, sp
   1e1e4:	str	x0, [sp, #24]
   1e1e8:	ldr	x0, [sp, #24]
   1e1ec:	cmp	x0, #0x0
   1e1f0:	b.ne	1e1fc <xmalloc@@Base+0x20>  // b.any
   1e1f4:	mov	x0, #0x1                   	// #1
   1e1f8:	str	x0, [sp, #24]
   1e1fc:	ldr	x0, [sp, #24]
   1e200:	bl	6a70 <malloc@plt>
   1e204:	str	x0, [sp, #40]
   1e208:	ldr	x0, [sp, #40]
   1e20c:	cmp	x0, #0x0
   1e210:	b.ne	1e21c <xmalloc@@Base+0x40>  // b.any
   1e214:	ldr	x0, [sp, #24]
   1e218:	bl	6580 <xmalloc_failed@plt>
   1e21c:	ldr	x0, [sp, #40]
   1e220:	ldp	x29, x30, [sp], #48
   1e224:	ret

000000000001e228 <xcalloc@@Base>:
   1e228:	stp	x29, x30, [sp, #-48]!
   1e22c:	mov	x29, sp
   1e230:	str	x0, [sp, #24]
   1e234:	str	x1, [sp, #16]
   1e238:	ldr	x0, [sp, #24]
   1e23c:	cmp	x0, #0x0
   1e240:	b.eq	1e250 <xcalloc@@Base+0x28>  // b.none
   1e244:	ldr	x0, [sp, #16]
   1e248:	cmp	x0, #0x0
   1e24c:	b.ne	1e260 <xcalloc@@Base+0x38>  // b.any
   1e250:	mov	x0, #0x1                   	// #1
   1e254:	str	x0, [sp, #16]
   1e258:	ldr	x0, [sp, #16]
   1e25c:	str	x0, [sp, #24]
   1e260:	ldr	x1, [sp, #16]
   1e264:	ldr	x0, [sp, #24]
   1e268:	bl	6140 <calloc@plt>
   1e26c:	str	x0, [sp, #40]
   1e270:	ldr	x0, [sp, #40]
   1e274:	cmp	x0, #0x0
   1e278:	b.ne	1e28c <xcalloc@@Base+0x64>  // b.any
   1e27c:	ldr	x1, [sp, #24]
   1e280:	ldr	x0, [sp, #16]
   1e284:	mul	x0, x1, x0
   1e288:	bl	6580 <xmalloc_failed@plt>
   1e28c:	ldr	x0, [sp, #40]
   1e290:	ldp	x29, x30, [sp], #48
   1e294:	ret

000000000001e298 <xrealloc@@Base>:
   1e298:	stp	x29, x30, [sp, #-48]!
   1e29c:	mov	x29, sp
   1e2a0:	str	x0, [sp, #24]
   1e2a4:	str	x1, [sp, #16]
   1e2a8:	ldr	x0, [sp, #16]
   1e2ac:	cmp	x0, #0x0
   1e2b0:	b.ne	1e2bc <xrealloc@@Base+0x24>  // b.any
   1e2b4:	mov	x0, #0x1                   	// #1
   1e2b8:	str	x0, [sp, #16]
   1e2bc:	ldr	x0, [sp, #24]
   1e2c0:	cmp	x0, #0x0
   1e2c4:	b.ne	1e2d8 <xrealloc@@Base+0x40>  // b.any
   1e2c8:	ldr	x0, [sp, #16]
   1e2cc:	bl	6a70 <malloc@plt>
   1e2d0:	str	x0, [sp, #40]
   1e2d4:	b	1e2e8 <xrealloc@@Base+0x50>
   1e2d8:	ldr	x1, [sp, #16]
   1e2dc:	ldr	x0, [sp, #24]
   1e2e0:	bl	63e0 <realloc@plt>
   1e2e4:	str	x0, [sp, #40]
   1e2e8:	ldr	x0, [sp, #40]
   1e2ec:	cmp	x0, #0x0
   1e2f0:	b.ne	1e2fc <xrealloc@@Base+0x64>  // b.any
   1e2f4:	ldr	x0, [sp, #16]
   1e2f8:	bl	6580 <xmalloc_failed@plt>
   1e2fc:	ldr	x0, [sp, #40]
   1e300:	ldp	x29, x30, [sp], #48
   1e304:	ret

000000000001e308 <xstrdup@@Base>:
   1e308:	stp	x29, x30, [sp, #-48]!
   1e30c:	mov	x29, sp
   1e310:	stp	x19, x20, [sp, #16]
   1e314:	str	x0, [sp, #40]
   1e318:	ldr	x0, [sp, #40]
   1e31c:	bl	61a0 <strlen@plt>
   1e320:	add	x19, x0, #0x1
   1e324:	mov	x0, x19
   1e328:	bl	6910 <xmalloc@plt>
   1e32c:	mov	x20, x0
   1e330:	mov	x2, x19
   1e334:	ldr	x1, [sp, #40]
   1e338:	mov	x0, x20
   1e33c:	bl	6050 <memcpy@plt>
   1e340:	ldp	x19, x20, [sp, #16]
   1e344:	ldp	x29, x30, [sp], #48
   1e348:	ret

000000000001e34c <xstrndup@@Base>:
   1e34c:	stp	x29, x30, [sp, #-48]!
   1e350:	mov	x29, sp
   1e354:	str	x0, [sp, #24]
   1e358:	str	x1, [sp, #16]
   1e35c:	ldr	x1, [sp, #16]
   1e360:	ldr	x0, [sp, #24]
   1e364:	bl	6ce0 <strnlen@plt>
   1e368:	str	x0, [sp, #40]
   1e36c:	ldr	x0, [sp, #40]
   1e370:	add	x0, x0, #0x1
   1e374:	bl	6910 <xmalloc@plt>
   1e378:	str	x0, [sp, #32]
   1e37c:	ldr	x1, [sp, #32]
   1e380:	ldr	x0, [sp, #40]
   1e384:	add	x0, x1, x0
   1e388:	strb	wzr, [x0]
   1e38c:	ldr	x2, [sp, #40]
   1e390:	ldr	x1, [sp, #24]
   1e394:	ldr	x0, [sp, #32]
   1e398:	bl	6050 <memcpy@plt>
   1e39c:	ldp	x29, x30, [sp], #48
   1e3a0:	ret

000000000001e3a4 <xexit@@Base>:
   1e3a4:	stp	x29, x30, [sp, #-32]!
   1e3a8:	mov	x29, sp
   1e3ac:	str	w0, [sp, #28]
   1e3b0:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1e3b4:	ldr	x0, [x0, #3792]
   1e3b8:	ldr	x0, [x0]
   1e3bc:	cmp	x0, #0x0
   1e3c0:	b.eq	1e3d4 <xexit@@Base+0x30>  // b.none
   1e3c4:	adrp	x0, 33000 <xexit@@Base+0x14c5c>
   1e3c8:	ldr	x0, [x0, #3792]
   1e3cc:	ldr	x0, [x0]
   1e3d0:	blr	x0
   1e3d4:	ldr	w0, [sp, #28]
   1e3d8:	bl	6bd0 <exit@plt>

Disassembly of section .fini:

000000000001e3dc <.fini>:
   1e3dc:	stp	x29, x30, [sp, #-16]!
   1e3e0:	mov	x29, sp
   1e3e4:	ldp	x29, x30, [sp], #16
   1e3e8:	ret
