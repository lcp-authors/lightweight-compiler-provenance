
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//IBM1371.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000658 <.init>:
 658:	stp	x29, x30, [sp, #-16]!
 65c:	mov	x29, sp
 660:	bl	6f0 <__assert_fail@plt+0x10>
 664:	ldp	x29, x30, [sp], #16
 668:	ret

Disassembly of section .plt:

0000000000000670 <__cxa_finalize@plt-0x20>:
 670:	stp	x16, x30, [sp, #-16]!
 674:	adrp	x16, 2d000 <gconv@@Base+0x2c7b0>
 678:	ldr	x17, [x16, #4088]
 67c:	add	x16, x16, #0xff8
 680:	br	x17
 684:	nop
 688:	nop
 68c:	nop

0000000000000690 <__cxa_finalize@plt>:
 690:	adrp	x16, 2e000 <__cxa_finalize@GLIBC_2.17>
 694:	ldr	x17, [x16]
 698:	add	x16, x16, #0x0
 69c:	br	x17

00000000000006a0 <__stack_chk_fail@plt>:
 6a0:	adrp	x16, 2e000 <__cxa_finalize@GLIBC_2.17>
 6a4:	ldr	x17, [x16, #8]
 6a8:	add	x16, x16, #0x8
 6ac:	br	x17

00000000000006b0 <__gmon_start__@plt>:
 6b0:	adrp	x16, 2e000 <__cxa_finalize@GLIBC_2.17>
 6b4:	ldr	x17, [x16, #16]
 6b8:	add	x16, x16, #0x10
 6bc:	br	x17

00000000000006c0 <strcmp@plt>:
 6c0:	adrp	x16, 2e000 <__cxa_finalize@GLIBC_2.17>
 6c4:	ldr	x17, [x16, #24]
 6c8:	add	x16, x16, #0x18
 6cc:	br	x17

00000000000006d0 <_dl_mcount_wrapper_check@plt>:
 6d0:	adrp	x16, 2e000 <__cxa_finalize@GLIBC_2.17>
 6d4:	ldr	x17, [x16, #32]
 6d8:	add	x16, x16, #0x20
 6dc:	br	x17

00000000000006e0 <__assert_fail@plt>:
 6e0:	adrp	x16, 2e000 <__cxa_finalize@GLIBC_2.17>
 6e4:	ldr	x17, [x16, #40]
 6e8:	add	x16, x16, #0x28
 6ec:	br	x17

Disassembly of section .text:

00000000000006f0 <gconv_init@@Base-0xd8>:
     6f0:	adrp	x0, 2d000 <gconv@@Base+0x2c7b0>
     6f4:	ldr	x0, [x0, #4048]
     6f8:	cbz	x0, 700 <__assert_fail@plt+0x20>
     6fc:	b	6b0 <__gmon_start__@plt>
     700:	ret
     704:	nop
     708:	adrp	x0, 2e000 <gconv@@Base+0x2d7b0>
     70c:	add	x0, x0, #0x38
     710:	adrp	x1, 2e000 <gconv@@Base+0x2d7b0>
     714:	add	x1, x1, #0x38
     718:	cmp	x1, x0
     71c:	b.eq	734 <__assert_fail@plt+0x54>  // b.none
     720:	adrp	x1, 2d000 <gconv@@Base+0x2c7b0>
     724:	ldr	x1, [x1, #4024]
     728:	cbz	x1, 734 <__assert_fail@plt+0x54>
     72c:	mov	x16, x1
     730:	br	x16
     734:	ret
     738:	adrp	x0, 2e000 <gconv@@Base+0x2d7b0>
     73c:	add	x0, x0, #0x38
     740:	adrp	x1, 2e000 <gconv@@Base+0x2d7b0>
     744:	add	x1, x1, #0x38
     748:	sub	x1, x1, x0
     74c:	lsr	x2, x1, #63
     750:	add	x1, x2, x1, asr #3
     754:	cmp	xzr, x1, asr #1
     758:	asr	x1, x1, #1
     75c:	b.eq	774 <__assert_fail@plt+0x94>  // b.none
     760:	adrp	x2, 2d000 <gconv@@Base+0x2c7b0>
     764:	ldr	x2, [x2, #4064]
     768:	cbz	x2, 774 <__assert_fail@plt+0x94>
     76c:	mov	x16, x2
     770:	br	x16
     774:	ret
     778:	stp	x29, x30, [sp, #-32]!
     77c:	mov	x29, sp
     780:	str	x19, [sp, #16]
     784:	adrp	x19, 2e000 <gconv@@Base+0x2d7b0>
     788:	ldrb	w0, [x19, #56]
     78c:	cbnz	w0, 7b4 <__assert_fail@plt+0xd4>
     790:	adrp	x0, 2d000 <gconv@@Base+0x2c7b0>
     794:	ldr	x0, [x0, #4032]
     798:	cbz	x0, 7a8 <__assert_fail@plt+0xc8>
     79c:	adrp	x0, 2e000 <gconv@@Base+0x2d7b0>
     7a0:	ldr	x0, [x0, #48]
     7a4:	bl	690 <__cxa_finalize@plt>
     7a8:	bl	708 <__assert_fail@plt+0x28>
     7ac:	mov	w0, #0x1                   	// #1
     7b0:	strb	w0, [x19, #56]
     7b4:	ldr	x19, [sp, #16]
     7b8:	ldp	x29, x30, [sp], #32
     7bc:	ret
     7c0:	b	738 <__assert_fail@plt+0x58>
     7c4:	nop

00000000000007c8 <gconv_init@@Base>:
     7c8:	stp	x29, x30, [sp, #-32]!
     7cc:	mov	x29, sp
     7d0:	stp	x19, x20, [sp, #16]
     7d4:	mov	x19, x0
     7d8:	adrp	x20, 1000 <gconv@@Base+0x7b0>
     7dc:	ldr	x0, [x0, #24]
     7e0:	add	x20, x20, #0xae8
     7e4:	mov	x1, x20
     7e8:	bl	6c0 <strcmp@plt>
     7ec:	cbnz	w0, 81c <gconv_init@@Base+0x54>
     7f0:	mov	x1, #0x1                   	// #1
     7f4:	mov	x0, #0x400000004           	// #17179869188
     7f8:	movk	x1, #0x2, lsl #32
     7fc:	stp	x1, x0, [x19, #72]
     800:	str	xzr, [x19, #96]
     804:	mov	w1, #0x1                   	// #1
     808:	mov	w0, #0x0                   	// #0
     80c:	str	w1, [x19, #88]
     810:	ldp	x19, x20, [sp, #16]
     814:	ldp	x29, x30, [sp], #32
     818:	ret
     81c:	ldr	x0, [x19, #32]
     820:	mov	x1, x20
     824:	bl	6c0 <strcmp@plt>
     828:	cbnz	w0, 848 <gconv_init@@Base+0x80>
     82c:	mov	x1, #0x1                   	// #1
     830:	mov	x0, #0xffffffffffffffff    	// #-1
     834:	mov	x2, #0x400000004           	// #17179869188
     838:	movk	x1, #0x2, lsl #32
     83c:	stp	x2, x1, [x19, #72]
     840:	str	x0, [x19, #96]
     844:	b	804 <gconv_init@@Base+0x3c>
     848:	mov	w0, #0x1                   	// #1
     84c:	b	810 <gconv_init@@Base+0x48>

0000000000000850 <gconv@@Base>:
     850:	stp	x29, x30, [sp, #-224]!
     854:	mov	x14, x0
     858:	mov	x29, sp
     85c:	stp	x19, x20, [sp, #16]
     860:	mov	x20, x1
     864:	adrp	x1, 2d000 <gconv@@Base+0x2c7b0>
     868:	mov	x19, x3
     86c:	add	x3, x14, #0x68
     870:	ldr	x8, [x1, #4056]
     874:	stp	x21, x22, [sp, #32]
     878:	ldr	w1, [x20, #16]
     87c:	ldr	x0, [x8]
     880:	str	x0, [sp, #216]
     884:	mov	x0, #0x0                   	// #0
     888:	stp	x23, x24, [sp, #48]
     88c:	add	x0, x20, #0x30
     890:	stp	x25, x26, [sp, #64]
     894:	mov	x23, x5
     898:	mov	x22, #0x0                   	// #0
     89c:	stp	x27, x28, [sp, #80]
     8a0:	mov	x27, x2
     8a4:	and	w2, w1, #0x1
     8a8:	str	x4, [sp, #104]
     8ac:	str	w7, [sp, #136]
     8b0:	stp	x3, x0, [sp, #152]
     8b4:	tbnz	w1, #0, 8d4 <gconv@@Base+0x84>
     8b8:	ldr	x0, [x14, #104]
     8bc:	ldr	x22, [x14, #144]
     8c0:	cbz	x0, 8d4 <gconv@@Base+0x84>
     8c4:	adrp	x0, 2d000 <gconv@@Base+0x2c7b0>
     8c8:	ldr	x0, [x0, #4040]
     8cc:	ldr	x0, [x0]
     8d0:	eor	x22, x22, x0
     8d4:	cbnz	w6, 1280 <gconv@@Base+0xa30>
     8d8:	ldr	x3, [sp, #104]
     8dc:	add	x0, sp, #0xc0
     8e0:	ldr	x28, [x20, #32]
     8e4:	cmp	x3, #0x0
     8e8:	csel	x2, x20, x3, eq  // eq = none
     8ec:	cmp	x23, #0x0
     8f0:	csel	x0, x0, xzr, ne  // ne = any
     8f4:	ldr	w10, [x28]
     8f8:	ldr	x25, [x2]
     8fc:	stp	x0, xzr, [sp, #184]
     900:	ldr	w0, [sp, #136]
     904:	ldr	x26, [x27]
     908:	ldr	x21, [x20, #8]
     90c:	cbnz	w0, db8 <gconv@@Base+0x568>
     910:	mov	x24, x28
     914:	mov	x15, x27
     918:	adrp	x12, 1000 <gconv@@Base+0x7b0>
     91c:	mov	x27, x26
     920:	add	x0, x12, #0xcb8
     924:	mov	x26, x25
     928:	mov	x28, x14
     92c:	mov	w25, w10
     930:	add	x13, x0, #0x38
     934:	str	x0, [sp, #144]
     938:	add	x0, sp, #0xc8
     93c:	str	x23, [sp, #168]
     940:	str	x0, [sp, #176]
     944:	nop
     948:	ldr	x0, [x28, #96]
     94c:	and	w11, w25, #0xfffffff8
     950:	cmp	x19, x27
     954:	cbz	x0, a64 <gconv@@Base+0x214>
     958:	b.eq	12f8 <gconv@@Base+0xaa8>  // b.none
     95c:	add	x5, x27, #0x4
     960:	cmp	x19, x5
     964:	b.cc	1058 <gconv@@Base+0x808>  // b.lo, b.ul, b.last
     968:	cmp	x21, x26
     96c:	b.ls	106c <gconv@@Base+0x81c>  // b.plast
     970:	ldr	x0, [sp, #144]
     974:	adrp	x17, 2000 <gconv@@Base+0x17b0>
     978:	ldur	w3, [x5, #-4]
     97c:	mov	w7, #0xfffe                	// #65534
     980:	and	w8, w1, #0x2
     984:	mov	w6, w11
     988:	add	x17, x17, #0xc8
     98c:	mov	x23, x26
     990:	add	x18, x0, #0x80
     994:	sub	x16, x5, #0x4
     998:	cmp	w3, w7
     99c:	mov	w30, #0x1c00                	// #7168
     9a0:	mov	w10, #0xe                   	// #14
     9a4:	mov	w9, #0xf                   	// #15
     9a8:	b.hi	a44 <gconv@@Base+0x1f4>  // b.pmore
     9ac:	cmp	w3, #0xa6
     9b0:	mov	x1, x13
     9b4:	mov	w2, #0xae                  	// #174
     9b8:	b.hi	9c8 <gconv@@Base+0x178>  // b.pmore
     9bc:	b	bb4 <gconv@@Base+0x364>
     9c0:	ldrh	w2, [x0, #10]
     9c4:	mov	x1, x0
     9c8:	cmp	w3, w2
     9cc:	add	x0, x1, #0x8
     9d0:	b.hi	9c0 <gconv@@Base+0x170>  // b.pmore
     9d4:	ldrh	w0, [x0]
     9d8:	cmp	w3, w0
     9dc:	b.cc	d10 <gconv@@Base+0x4c0>  // b.lo, b.ul, b.last
     9e0:	ldr	w1, [x1, #12]
     9e4:	add	x0, x12, #0xcb8
     9e8:	add	x2, x0, #0x318
     9ec:	add	w1, w3, w1
     9f0:	ldrb	w1, [x2, w1, uxtw]
     9f4:	cmp	w1, #0x0
     9f8:	ccmp	w3, #0x0, #0x4, eq  // eq = none
     9fc:	b.ne	bd0 <gconv@@Base+0x380>  // b.any
     a00:	cmp	w6, #0x40
     a04:	add	x0, x23, #0x1
     a08:	b.eq	d98 <gconv@@Base+0x548>  // b.none
     a0c:	strb	w1, [x23]
     a10:	mov	x23, x0
     a14:	cmp	x19, x5
     a18:	b.eq	d90 <gconv@@Base+0x540>  // b.none
     a1c:	add	x0, x5, #0x4
     a20:	cmp	x19, x0
     a24:	b.cc	bec <gconv@@Base+0x39c>  // b.lo, b.ul, b.last
     a28:	cmp	x21, x23
     a2c:	b.ls	d08 <gconv@@Base+0x4b8>  // b.plast
     a30:	mov	x5, x0
     a34:	sub	x16, x5, #0x4
     a38:	ldur	w3, [x5, #-4]
     a3c:	cmp	w3, w7
     a40:	b.ls	9ac <gconv@@Base+0x15c>  // b.plast
     a44:	cmp	w30, w3, lsr #7
     a48:	b.eq	a14 <gconv@@Base+0x1c4>  // b.none
     a4c:	ldr	x0, [sp, #184]
     a50:	cbz	x0, a58 <gconv@@Base+0x208>
     a54:	cbnz	w8, f08 <gconv@@Base+0x6b8>
     a58:	mov	x5, x16
     a5c:	mov	w8, #0x6                   	// #6
     a60:	b	bf0 <gconv@@Base+0x3a0>
     a64:	b.eq	125c <gconv@@Base+0xa0c>  // b.none
     a68:	add	x5, x26, #0x4
     a6c:	cmp	x21, x5
     a70:	b.cc	1248 <gconv@@Base+0x9f8>  // b.lo, b.ul, b.last
     a74:	ldr	x0, [sp, #144]
     a78:	adrp	x7, 10000 <gconv@@Base+0xf7b0>
     a7c:	and	w18, w1, #0x2
     a80:	mov	w6, w11
     a84:	add	x7, x7, #0x228
     a88:	mov	x2, x27
     a8c:	mov	x23, x26
     a90:	add	x8, x0, #0x118
     a94:	mov	w16, #0x4040                	// #16448
     a98:	mov	w17, #0xffff                	// #65535
     a9c:	ldrb	w0, [x2]
     aa0:	cmp	w0, #0xe
     aa4:	b.eq	1014 <gconv@@Base+0x7c4>  // b.none
     aa8:	cmp	w0, #0xf
     aac:	b.eq	1028 <gconv@@Base+0x7d8>  // b.none
     ab0:	cbnz	w6, b38 <gconv@@Base+0x2e8>
     ab4:	mov	w1, w0
     ab8:	cmp	w0, #0x0
     abc:	ldrh	w0, [x8, x1, lsl #1]
     ac0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     ac4:	b.eq	122c <gconv@@Base+0x9dc>  // b.none
     ac8:	str	w0, [x23]
     acc:	mov	x23, x5
     ad0:	add	x2, x2, #0x1
     ad4:	cmp	x2, x19
     ad8:	b.eq	1268 <gconv@@Base+0xa18>  // b.none
     adc:	add	x5, x23, #0x4
     ae0:	cmp	x21, x5
     ae4:	b.cs	a9c <gconv@@Base+0x24c>  // b.hs, b.nlast
     ae8:	mov	w8, #0x5                   	// #5
     aec:	ldr	x0, [sp, #104]
     af0:	str	x2, [x15]
     af4:	str	w6, [x24]
     af8:	cbz	x0, c00 <gconv@@Base+0x3b0>
     afc:	str	x23, [x0]
     b00:	adrp	x0, 2d000 <gconv@@Base+0x2c7b0>
     b04:	ldr	x0, [x0, #4056]
     b08:	ldr	x1, [sp, #216]
     b0c:	ldr	x0, [x0]
     b10:	eor	x0, x1, x0
     b14:	cbnz	x0, 19fc <gconv@@Base+0x11ac>
     b18:	mov	w0, w8
     b1c:	ldp	x19, x20, [sp, #16]
     b20:	ldp	x21, x22, [sp, #32]
     b24:	ldp	x23, x24, [sp, #48]
     b28:	ldp	x25, x26, [sp, #64]
     b2c:	ldp	x27, x28, [sp, #80]
     b30:	ldp	x29, x30, [sp], #224
     b34:	ret
     b38:	cmp	w6, #0x40
     b3c:	b.ne	195c <gconv@@Base+0x110c>  // b.any
     b40:	add	x1, x2, #0x1
     b44:	cmp	x19, x1
     b48:	b.ls	1278 <gconv@@Base+0xa28>  // b.plast
     b4c:	ldrb	w1, [x2, #1]
     b50:	add	w0, w1, w0, lsl #8
     b54:	add	x1, x12, #0xcb8
     b58:	cmp	w0, w16
     b5c:	b.ls	1270 <gconv@@Base+0xa20>  // b.plast
     b60:	mov	w3, #0x457a                	// #17786
     b64:	b	b6c <gconv@@Base+0x31c>
     b68:	ldrh	w3, [x1, #10]
     b6c:	add	x1, x1, #0x8
     b70:	cmp	w0, w3
     b74:	b.hi	b68 <gconv@@Base+0x318>  // b.pmore
     b78:	ldrh	w3, [x1]
     b7c:	cmp	w3, w17
     b80:	b.eq	1080 <gconv@@Base+0x830>  // b.none
     b84:	cmp	w0, w3
     b88:	b.cc	1080 <gconv@@Base+0x830>  // b.lo, b.ul, b.last
     b8c:	ldr	w1, [x1, #4]
     b90:	cmp	w0, #0x0
     b94:	add	w0, w0, w1
     b98:	ldrh	w0, [x7, x0, lsl #1]
     b9c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     ba0:	b.eq	1080 <gconv@@Base+0x830>  // b.none
     ba4:	add	x2, x2, #0x2
     ba8:	str	w0, [x23]
     bac:	mov	x23, x5
     bb0:	b	ad4 <gconv@@Base+0x284>
     bb4:	add	x0, x12, #0xcb8
     bb8:	mov	w1, w3
     bbc:	add	x2, x0, #0x318
     bc0:	ldrb	w1, [x2, w1, uxtw]
     bc4:	cmp	w1, #0x0
     bc8:	ccmp	w3, #0x0, #0x4, eq  // eq = none
     bcc:	b.eq	a00 <gconv@@Base+0x1b0>  // b.none
     bd0:	add	x0, x0, #0x80
     bd4:	cmp	w3, #0xf7
     bd8:	mov	w2, #0x2d9                 	// #729
     bdc:	b.hi	d30 <gconv@@Base+0x4e0>  // b.pmore
     be0:	mov	x1, x0
     be4:	mov	w0, #0xa7                  	// #167
     be8:	b	d40 <gconv@@Base+0x4f0>
     bec:	mov	w8, #0x7                   	// #7
     bf0:	ldr	x0, [sp, #104]
     bf4:	str	x5, [x15]
     bf8:	str	w6, [x24]
     bfc:	cbnz	x0, afc <gconv@@Base+0x2ac>
     c00:	ldp	w1, w0, [x20, #16]
     c04:	add	w0, w0, #0x1
     c08:	str	w0, [x20, #20]
     c0c:	tbnz	w1, #0, 1034 <gconv@@Base+0x7e4>
     c10:	str	x13, [sp, #112]
     c14:	cmp	x26, x23
     c18:	str	w11, [sp, #140]
     c1c:	b.cs	c98 <gconv@@Base+0x448>  // b.hs, b.nlast
     c20:	ldr	x1, [x20]
     c24:	mov	x0, x22
     c28:	str	x15, [sp, #120]
     c2c:	str	w8, [sp, #132]
     c30:	str	x1, [sp, #200]
     c34:	bl	6d0 <_dl_mcount_wrapper_check@plt>
     c38:	ldp	x0, x1, [sp, #152]
     c3c:	mov	x3, x23
     c40:	ldp	x5, x2, [sp, #168]
     c44:	mov	w6, #0x0                   	// #0
     c48:	ldr	w7, [sp, #136]
     c4c:	mov	x4, #0x0                   	// #0
     c50:	blr	x22
     c54:	cmp	w0, #0x4
     c58:	ldr	w8, [sp, #132]
     c5c:	adrp	x12, 1000 <gconv@@Base+0x7b0>
     c60:	ldp	x13, x15, [sp, #112]
     c64:	b.eq	c90 <gconv@@Base+0x440>  // b.none
     c68:	ldr	x16, [sp, #200]
     c6c:	ldr	w11, [sp, #140]
     c70:	cmp	x16, x23
     c74:	b.ne	f1c <gconv@@Base+0x6cc>  // b.any
     c78:	cbnz	w0, 19f0 <gconv@@Base+0x11a0>
     c7c:	ldr	w1, [x20, #16]
     c80:	ldr	w25, [x24]
     c84:	ldr	x27, [x15]
     c88:	ldr	x26, [x20]
     c8c:	b	948 <gconv@@Base+0xf8>
     c90:	cmp	w8, #0x5
     c94:	b.eq	c7c <gconv@@Base+0x42c>  // b.none
     c98:	mov	x27, x15
     c9c:	ldr	w0, [sp, #136]
     ca0:	cmp	w0, #0x0
     ca4:	ccmp	w8, #0x7, #0x0, ne  // ne = any
     ca8:	b.ne	b00 <gconv@@Base+0x2b0>  // b.any
     cac:	ldr	x0, [x27]
     cb0:	sub	x1, x19, x0
     cb4:	cmp	x1, #0x3
     cb8:	b.gt	191c <gconv@@Base+0x10cc>
     cbc:	ldr	x2, [x20, #32]
     cc0:	cmp	x0, x19
     cc4:	add	x0, x0, #0x1
     cc8:	add	x3, x2, #0x4
     ccc:	b.cs	1914 <gconv@@Base+0x10c4>  // b.hs, b.nlast
     cd0:	str	x0, [x27]
     cd4:	cmp	x19, x0
     cd8:	add	x0, x0, #0x1
     cdc:	ldurb	w4, [x0, #-2]
     ce0:	strb	w4, [x3], #1
     ce4:	b.ne	cd0 <gconv@@Base+0x480>  // b.any
     ce8:	ldr	w0, [x2]
     cec:	and	w0, w0, #0xfffffff8
     cf0:	orr	w0, w0, w1
     cf4:	str	w0, [x2]
     cf8:	b	b00 <gconv@@Base+0x2b0>
     cfc:	mov	x5, x16
     d00:	mov	x23, x0
     d04:	mov	w6, #0x0                   	// #0
     d08:	mov	w8, #0x5                   	// #5
     d0c:	b	bf0 <gconv@@Base+0x3a0>
     d10:	mov	x1, x18
     d14:	cmp	w3, #0xf7
     d18:	mov	x0, x18
     d1c:	mov	w2, #0x2d9                 	// #729
     d20:	b.hi	d30 <gconv@@Base+0x4e0>  // b.pmore
     d24:	b	d48 <gconv@@Base+0x4f8>
     d28:	ldrh	w2, [x1, #10]
     d2c:	mov	x0, x1
     d30:	cmp	w3, w2
     d34:	add	x1, x0, #0x8
     d38:	b.hi	d28 <gconv@@Base+0x4d8>  // b.pmore
     d3c:	ldrh	w0, [x0, #8]
     d40:	cmp	w3, w0
     d44:	b.cc	1210 <gconv@@Base+0x9c0>  // b.lo, b.ul, b.last
     d48:	ldr	w0, [x1, #4]
     d4c:	add	w0, w3, w0
     d50:	lsl	x0, x0, #1
     d54:	add	x2, x0, x17
     d58:	ldrb	w0, [x0, x17]
     d5c:	cmp	w0, #0x0
     d60:	ccmp	w3, #0x0, #0x4, eq  // eq = none
     d64:	b.ne	1210 <gconv@@Base+0x9c0>  // b.any
     d68:	cbz	w6, efc <gconv@@Base+0x6ac>
     d6c:	add	x1, x23, #0x2
     d70:	cmp	x21, x1
     d74:	b.cc	12ec <gconv@@Base+0xa9c>  // b.lo, b.ul, b.last
     d78:	strb	w0, [x23]
     d7c:	cmp	x19, x5
     d80:	ldrb	w0, [x2, #1]
     d84:	strb	w0, [x23, #1]
     d88:	mov	x23, x1
     d8c:	b.ne	a1c <gconv@@Base+0x1cc>  // b.any
     d90:	mov	w8, #0x4                   	// #4
     d94:	b	bf0 <gconv@@Base+0x3a0>
     d98:	strb	w9, [x23]
     d9c:	cmp	x21, x0
     da0:	b.ls	cfc <gconv@@Base+0x4ac>  // b.plast
     da4:	add	x2, x23, #0x2
     da8:	mov	w6, #0x0                   	// #0
     dac:	mov	x23, x0
     db0:	mov	x0, x2
     db4:	b	a0c <gconv@@Base+0x1bc>
     db8:	ands	w0, w10, #0x7
     dbc:	b.eq	910 <gconv@@Base+0xc0>  // b.none
     dc0:	cbnz	x3, 18f4 <gconv@@Base+0x10a4>
     dc4:	ldr	x2, [x14, #96]
     dc8:	and	w6, w10, #0xfffffff8
     dcc:	mov	w5, w0
     dd0:	cbz	x2, 10ac <gconv@@Base+0x85c>
     dd4:	cmp	w5, #0x4
     dd8:	b.hi	193c <gconv@@Base+0x10ec>  // b.pmore
     ddc:	mov	w0, w5
     de0:	cbz	w5, 1580 <gconv@@Base+0xd30>
     de4:	add	x4, sp, #0xd0
     de8:	add	x9, x28, #0x3
     dec:	mov	x2, #0x1                   	// #1
     df0:	add	x7, x4, x2
     df4:	ldrb	w8, [x9, x2]
     df8:	cmp	x0, x2
     dfc:	add	x2, x2, #0x1
     e00:	sturb	w8, [x7, #-1]
     e04:	b.ne	df0 <gconv@@Base+0x5a0>  // b.any
     e08:	mov	x2, #0x4                   	// #4
     e0c:	sub	x2, x2, x0
     e10:	add	x2, x26, x2
     e14:	cmp	x19, x2
     e18:	b.cc	1674 <gconv@@Base+0xe24>  // b.lo, b.ul, b.last
     e1c:	cmp	x25, x21
     e20:	b.cs	1458 <gconv@@Base+0xc08>  // b.hs, b.nlast
     e24:	add	x4, sp, #0xd0
     e28:	add	x0, x0, #0x1
     e2c:	ldrb	w3, [x26], #1
     e30:	add	x2, x4, x0
     e34:	cmp	x0, #0x3
     e38:	ccmp	x19, x26, #0x0, ls  // ls = plast
     e3c:	sturb	w3, [x2, #-1]
     e40:	b.hi	e28 <gconv@@Base+0x5d8>  // b.pmore
     e44:	ldr	w7, [sp, #208]
     e48:	mov	w0, #0xfffe                	// #65534
     e4c:	cmp	w7, w0
     e50:	b.hi	18a4 <gconv@@Base+0x1054>  // b.pmore
     e54:	mov	w2, w7
     e58:	cmp	w7, #0xa6
     e5c:	adrp	x0, 1000 <gconv@@Base+0x7b0>
     e60:	b.ls	ea0 <gconv@@Base+0x650>  // b.plast
     e64:	adrp	x0, 1000 <gconv@@Base+0x7b0>
     e68:	add	x3, x0, #0xcb8
     e6c:	add	x3, x3, #0x38
     e70:	mov	w4, #0xae                  	// #174
     e74:	b	e80 <gconv@@Base+0x630>
     e78:	ldrh	w4, [x2, #10]
     e7c:	mov	x3, x2
     e80:	cmp	w7, w4
     e84:	add	x2, x3, #0x8
     e88:	b.hi	e78 <gconv@@Base+0x628>  // b.pmore
     e8c:	ldrh	w2, [x2]
     e90:	cmp	w7, w2
     e94:	b.cc	18d0 <gconv@@Base+0x1080>  // b.lo, b.ul, b.last
     e98:	ldr	w2, [x3, #12]
     e9c:	add	w2, w7, w2
     ea0:	add	x0, x0, #0xcb8
     ea4:	cmp	w7, #0x0
     ea8:	add	x3, x0, #0x318
     eac:	ldrb	w2, [x3, w2, uxtw]
     eb0:	ccmp	w2, #0x0, #0x0, ne  // ne = any
     eb4:	b.eq	1814 <gconv@@Base+0xfc4>  // b.none
     eb8:	cmp	w6, #0x40
     ebc:	add	x0, x25, #0x1
     ec0:	b.eq	17f4 <gconv@@Base+0xfa4>  // b.none
     ec4:	strb	w2, [x25]
     ec8:	mov	x25, x0
     ecc:	ldr	w10, [x28]
     ed0:	and	w5, w10, #0x7
     ed4:	tbnz	w10, #2, 19b8 <gconv@@Base+0x1168>
     ed8:	ldr	x26, [x27]
     edc:	mov	x0, #0x4                   	// #4
     ee0:	sub	x0, x0, x5
     ee4:	ldr	w1, [x20, #16]
     ee8:	add	x26, x26, x0
     eec:	str	x26, [x27]
     ef0:	and	w10, w10, #0xfffffff8
     ef4:	str	w10, [x28]
     ef8:	b	910 <gconv@@Base+0xc0>
     efc:	mov	w6, #0x40                  	// #64
     f00:	strb	w10, [x23], #1
     f04:	b	d6c <gconv@@Base+0x51c>
     f08:	mov	x1, x0
     f0c:	ldr	x0, [x0]
     f10:	add	x0, x0, #0x1
     f14:	str	x0, [x1]
     f18:	b	a14 <gconv@@Base+0x1c4>
     f1c:	str	x27, [x15]
     f20:	cmp	x19, x27
     f24:	ldr	x1, [x28, #96]
     f28:	str	w25, [x24]
     f2c:	cbz	x1, 1164 <gconv@@Base+0x914>
     f30:	b.eq	179c <gconv@@Base+0xf4c>  // b.none
     f34:	add	x18, x27, #0x4
     f38:	cmp	x19, x18
     f3c:	b.cc	165c <gconv@@Base+0xe0c>  // b.lo, b.ul, b.last
     f40:	cmp	x16, x26
     f44:	b.ls	164c <gconv@@Base+0xdfc>  // b.plast
     f48:	ldr	x1, [sp, #144]
     f4c:	adrp	x7, 2000 <gconv@@Base+0x17b0>
     f50:	ldr	w8, [x20, #16]
     f54:	mov	x17, x26
     f58:	ldr	x14, [sp, #184]
     f5c:	add	x7, x7, #0xc8
     f60:	and	w8, w8, #0x2
     f64:	add	x10, x1, #0x80
     f68:	mov	w6, #0xfffe                	// #65534
     f6c:	mov	w27, #0x1c00                	// #7168
     f70:	mov	w30, #0xe                   	// #14
     f74:	mov	w9, #0xf                   	// #15
     f78:	ldur	w4, [x18, #-4]
     f7c:	sub	x5, x18, #0x4
     f80:	cmp	w4, w6
     f84:	b.hi	1468 <gconv@@Base+0xc18>  // b.pmore
     f88:	cmp	w4, #0xa6
     f8c:	mov	x2, x13
     f90:	mov	w3, #0xae                  	// #174
     f94:	b.hi	fa4 <gconv@@Base+0x754>  // b.pmore
     f98:	b	1460 <gconv@@Base+0xc10>
     f9c:	ldrh	w3, [x1, #10]
     fa0:	mov	x2, x1
     fa4:	cmp	w4, w3
     fa8:	add	x1, x2, #0x8
     fac:	b.hi	f9c <gconv@@Base+0x74c>  // b.pmore
     fb0:	ldrh	w1, [x1]
     fb4:	cmp	w4, w1
     fb8:	b.cc	14cc <gconv@@Base+0xc7c>  // b.lo, b.ul, b.last
     fbc:	ldr	w2, [x2, #12]
     fc0:	add	w2, w4, w2
     fc4:	add	x1, x12, #0xcb8
     fc8:	add	x3, x1, #0x318
     fcc:	ldrb	w2, [x3, w2, uxtw]
     fd0:	cmp	w2, #0x0
     fd4:	ccmp	w4, #0x0, #0x4, eq  // eq = none
     fd8:	b.ne	1708 <gconv@@Base+0xeb8>  // b.any
     fdc:	cmp	w11, #0x40
     fe0:	add	x1, x17, #0x1
     fe4:	b.eq	14ac <gconv@@Base+0xc5c>  // b.none
     fe8:	strb	w2, [x17]
     fec:	mov	x17, x1
     ff0:	cmp	x19, x18
     ff4:	b.eq	16f0 <gconv@@Base+0xea0>  // b.none
     ff8:	add	x1, x18, #0x4
     ffc:	cmp	x19, x1
    1000:	b.cc	1568 <gconv@@Base+0xd18>  // b.lo, b.ul, b.last
    1004:	cmp	x17, x16
    1008:	b.cs	1550 <gconv@@Base+0xd00>  // b.hs, b.nlast
    100c:	mov	x18, x1
    1010:	b	f78 <gconv@@Base+0x728>
    1014:	cmp	w6, #0x40
    1018:	b.eq	102c <gconv@@Base+0x7dc>  // b.none
    101c:	add	x2, x2, #0x1
    1020:	mov	w6, #0x40                  	// #64
    1024:	b	ad4 <gconv@@Base+0x284>
    1028:	cbnz	w6, 10a0 <gconv@@Base+0x850>
    102c:	mov	w8, #0x6                   	// #6
    1030:	b	aec <gconv@@Base+0x29c>
    1034:	mov	x24, x23
    1038:	mov	x27, x15
    103c:	ldr	x23, [sp, #168]
    1040:	ldr	x1, [sp, #192]
    1044:	ldr	x0, [x23]
    1048:	str	x24, [x20]
    104c:	add	x0, x0, x1
    1050:	str	x0, [x23]
    1054:	b	c9c <gconv@@Base+0x44c>
    1058:	mov	x5, x27
    105c:	mov	w6, w11
    1060:	mov	x23, x26
    1064:	mov	w8, #0x7                   	// #7
    1068:	b	bf0 <gconv@@Base+0x3a0>
    106c:	mov	x5, x27
    1070:	mov	w6, w11
    1074:	mov	x23, x26
    1078:	mov	w8, #0x5                   	// #5
    107c:	b	bf0 <gconv@@Base+0x3a0>
    1080:	ldr	x1, [sp, #184]
    1084:	cbz	x1, 102c <gconv@@Base+0x7dc>
    1088:	cbz	w18, 102c <gconv@@Base+0x7dc>
    108c:	ldr	x0, [x1]
    1090:	add	x2, x2, #0x2
    1094:	add	x0, x0, #0x1
    1098:	str	x0, [x1]
    109c:	b	ad4 <gconv@@Base+0x284>
    10a0:	add	x2, x2, #0x1
    10a4:	mov	w6, #0x0                   	// #0
    10a8:	b	ad4 <gconv@@Base+0x284>
    10ac:	cmp	w0, #0x4
    10b0:	b.hi	19a8 <gconv@@Base+0x1158>  // b.pmore
    10b4:	add	x7, x25, #0x4
    10b8:	cbz	w0, 13c4 <gconv@@Base+0xb74>
    10bc:	ldrb	w2, [x28, #4]
    10c0:	tst	w10, #0x6
    10c4:	strb	w2, [sp, #208]
    10c8:	mov	x2, #0x1                   	// #1
    10cc:	b.eq	10dc <gconv@@Base+0x88c>  // b.none
    10d0:	ldrb	w3, [x28, #5]
    10d4:	mov	x2, #0x2                   	// #2
    10d8:	strb	w3, [sp, #209]
    10dc:	cmp	x21, x7
    10e0:	b.cc	1458 <gconv@@Base+0xc08>  // b.lo, b.ul, b.last
    10e4:	add	x4, sp, #0xd0
    10e8:	ldrb	w8, [x26]
    10ec:	add	x3, x2, #0x1
    10f0:	strb	w8, [x4, x2]
    10f4:	ldrb	w2, [sp, #208]
    10f8:	cmp	w2, #0xe
    10fc:	b.eq	17b0 <gconv@@Base+0xf60>  // b.none
    1100:	cmp	w2, #0xf
    1104:	b.eq	16e4 <gconv@@Base+0xe94>  // b.none
    1108:	cbnz	w6, 15b0 <gconv@@Base+0xd60>
    110c:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    1110:	add	x0, x0, #0xcb8
    1114:	add	x0, x0, #0x118
    1118:	mov	w3, w2
    111c:	cmp	w2, #0x0
    1120:	ldrh	w0, [x0, x3, lsl #1]
    1124:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    1128:	b.eq	1a20 <gconv@@Base+0x11d0>  // b.none
    112c:	str	w0, [x25]
    1130:	mov	x25, x7
    1134:	mov	x0, #0x1                   	// #1
    1138:	ldr	w10, [x28]
    113c:	and	w5, w10, #0x7
    1140:	cmp	x5, x0
    1144:	b.ge	1988 <gconv@@Base+0x1138>  // b.tcont
    1148:	sub	x0, x0, x5
    114c:	ldr	w1, [x20, #16]
    1150:	add	x26, x26, x0
    1154:	str	x26, [x27]
    1158:	and	w10, w10, #0xfffffff8
    115c:	str	w10, [x28]
    1160:	b	910 <gconv@@Base+0xc0>
    1164:	ldr	w5, [x20, #16]
    1168:	b.eq	179c <gconv@@Base+0xf4c>  // b.none
    116c:	add	x4, x26, #0x4
    1170:	mov	x17, x26
    1174:	cmp	x16, x4
    1178:	b.cc	173c <gconv@@Base+0xeec>  // b.lo, b.ul, b.last
    117c:	ldr	x1, [sp, #144]
    1180:	adrp	x6, 10000 <gconv@@Base+0xf7b0>
    1184:	ldr	x9, [sp, #184]
    1188:	and	w5, w5, #0x2
    118c:	add	x6, x6, #0x228
    1190:	add	x10, x1, #0x118
    1194:	mov	w8, #0x4040                	// #16448
    1198:	mov	w7, #0xffff                	// #65535
    119c:	ldrb	w1, [x27]
    11a0:	cmp	w1, #0xe
    11a4:	b.eq	159c <gconv@@Base+0xd4c>  // b.none
    11a8:	cmp	w1, #0xf
    11ac:	b.eq	158c <gconv@@Base+0xd3c>  // b.none
    11b0:	cbnz	w11, 130c <gconv@@Base+0xabc>
    11b4:	mov	w2, w1
    11b8:	cmp	w1, #0x0
    11bc:	ldrh	w1, [x10, x2, lsl #1]
    11c0:	ccmp	w1, #0x0, #0x0, ne  // ne = any
    11c4:	b.eq	1724 <gconv@@Base+0xed4>  // b.none
    11c8:	str	w1, [x17]
    11cc:	mov	x17, x4
    11d0:	add	x27, x27, #0x1
    11d4:	cmp	x19, x27
    11d8:	b.eq	13f8 <gconv@@Base+0xba8>  // b.none
    11dc:	add	x4, x17, #0x4
    11e0:	cmp	x16, x4
    11e4:	b.cs	119c <gconv@@Base+0x94c>  // b.hs, b.nlast
    11e8:	str	x27, [x15]
    11ec:	cmp	x17, x16
    11f0:	str	w11, [x24]
    11f4:	b.ne	1408 <gconv@@Base+0xbb8>  // b.any
    11f8:	cmp	x17, x26
    11fc:	b.ne	c78 <gconv@@Base+0x428>  // b.any
    1200:	ldr	w1, [x20, #20]
    1204:	sub	w1, w1, #0x1
    1208:	str	w1, [x20, #20]
    120c:	b	c78 <gconv@@Base+0x428>
    1210:	ldr	x1, [sp, #184]
    1214:	cbz	x1, a58 <gconv@@Base+0x208>
    1218:	cbz	w8, a58 <gconv@@Base+0x208>
    121c:	ldr	x0, [x1]
    1220:	add	x0, x0, #0x1
    1224:	str	x0, [x1]
    1228:	b	a14 <gconv@@Base+0x1c4>
    122c:	ldr	x1, [sp, #184]
    1230:	cbz	x1, 102c <gconv@@Base+0x7dc>
    1234:	cbz	w18, 102c <gconv@@Base+0x7dc>
    1238:	ldr	x0, [x1]
    123c:	add	x0, x0, #0x1
    1240:	str	x0, [x1]
    1244:	b	ad0 <gconv@@Base+0x280>
    1248:	mov	x2, x27
    124c:	mov	x23, x26
    1250:	mov	w6, w11
    1254:	mov	w8, #0x5                   	// #5
    1258:	b	aec <gconv@@Base+0x29c>
    125c:	mov	x2, x19
    1260:	mov	x23, x26
    1264:	mov	w6, w11
    1268:	mov	w8, #0x4                   	// #4
    126c:	b	aec <gconv@@Base+0x29c>
    1270:	mov	w3, #0x4040                	// #16448
    1274:	b	b84 <gconv@@Base+0x334>
    1278:	mov	w8, #0x7                   	// #7
    127c:	b	aec <gconv@@Base+0x29c>
    1280:	ldr	x0, [sp, #104]
    1284:	cbnz	x0, 1a84 <gconv@@Base+0x1234>
    1288:	cmp	w6, #0x1
    128c:	ldr	x25, [x20, #32]
    1290:	b.ne	1428 <gconv@@Base+0xbd8>  // b.any
    1294:	ldr	w19, [x25]
    1298:	ldr	x1, [x20]
    129c:	tst	w19, #0xfffffff8
    12a0:	b.eq	1390 <gconv@@Base+0xb40>  // b.none
    12a4:	ldr	x0, [x14, #96]
    12a8:	cbz	x0, 1388 <gconv@@Base+0xb38>
    12ac:	ldr	x0, [x20, #8]
    12b0:	cmp	x1, x0
    12b4:	b.cs	1458 <gconv@@Base+0xc08>  // b.hs, b.nlast
    12b8:	mov	x21, x1
    12bc:	mov	w0, #0xf                   	// #15
    12c0:	strb	w0, [x21], #1
    12c4:	ldr	x2, [x20, #32]
    12c8:	ldr	w3, [x20, #16]
    12cc:	ldr	w0, [x2]
    12d0:	and	w0, w0, #0x7
    12d4:	str	w0, [x2]
    12d8:	tbz	w3, #0, 1750 <gconv@@Base+0xf00>
    12dc:	mov	x1, x21
    12e0:	mov	w8, #0x0                   	// #0
    12e4:	str	x1, [x20]
    12e8:	b	b00 <gconv@@Base+0x2b0>
    12ec:	mov	x5, x16
    12f0:	mov	w8, #0x5                   	// #5
    12f4:	b	bf0 <gconv@@Base+0x3a0>
    12f8:	mov	x5, x19
    12fc:	mov	w6, w11
    1300:	mov	x23, x26
    1304:	mov	w8, #0x4                   	// #4
    1308:	b	bf0 <gconv@@Base+0x3a0>
    130c:	cmp	w11, #0x40
    1310:	b.ne	195c <gconv@@Base+0x110c>  // b.any
    1314:	add	x2, x27, #0x1
    1318:	cmp	x19, x2
    131c:	b.ls	13f8 <gconv@@Base+0xba8>  // b.plast
    1320:	ldrb	w2, [x27, #1]
    1324:	add	w1, w2, w1, lsl #8
    1328:	add	x2, x12, #0xcb8
    132c:	cmp	w1, w8
    1330:	b.ls	18ec <gconv@@Base+0x109c>  // b.plast
    1334:	mov	w3, #0x457a                	// #17786
    1338:	b	1340 <gconv@@Base+0xaf0>
    133c:	ldrh	w3, [x2, #10]
    1340:	add	x2, x2, #0x8
    1344:	cmp	w1, w3
    1348:	b.hi	133c <gconv@@Base+0xaec>  // b.pmore
    134c:	ldrh	w3, [x2]
    1350:	cmp	w3, w7
    1354:	b.eq	17d8 <gconv@@Base+0xf88>  // b.none
    1358:	cmp	w1, w3
    135c:	b.cc	17d8 <gconv@@Base+0xf88>  // b.lo, b.ul, b.last
    1360:	ldr	w2, [x2, #4]
    1364:	add	w2, w1, w2
    1368:	ldrh	w2, [x6, x2, lsl #1]
    136c:	cmp	w2, #0x0
    1370:	ccmp	w1, #0x0, #0x4, eq  // eq = none
    1374:	b.ne	17d8 <gconv@@Base+0xf88>  // b.any
    1378:	add	x27, x27, #0x2
    137c:	str	w2, [x17]
    1380:	mov	x17, x4
    1384:	b	11d4 <gconv@@Base+0x984>
    1388:	and	w19, w19, #0x7
    138c:	str	w19, [x25]
    1390:	cbnz	w2, 12e0 <gconv@@Base+0xa90>
    1394:	mov	x0, x22
    1398:	bl	6d0 <_dl_mcount_wrapper_check@plt>
    139c:	ldp	x0, x1, [sp, #152]
    13a0:	mov	x5, x23
    13a4:	ldr	w7, [sp, #136]
    13a8:	mov	w6, #0x1                   	// #1
    13ac:	mov	x4, #0x0                   	// #0
    13b0:	mov	x3, #0x0                   	// #0
    13b4:	mov	x2, #0x0                   	// #0
    13b8:	blr	x22
    13bc:	mov	w8, w0
    13c0:	b	b00 <gconv@@Base+0x2b0>
    13c4:	cmp	x21, x7
    13c8:	b.cc	1458 <gconv@@Base+0xc08>  // b.lo, b.ul, b.last
    13cc:	mov	x8, x26
    13d0:	add	x4, sp, #0xd0
    13d4:	mov	x2, #0x0                   	// #0
    13d8:	ldrb	w9, [x8], #1
    13dc:	add	x3, x2, #0x1
    13e0:	strb	w9, [x4, x2]
    13e4:	cmp	x3, #0x1
    13e8:	ccmp	x19, x8, #0x0, ls  // ls = plast
    13ec:	mov	x2, #0x1                   	// #1
    13f0:	b.hi	13d8 <gconv@@Base+0xb88>  // b.pmore
    13f4:	b	10f4 <gconv@@Base+0x8a4>
    13f8:	str	x27, [x15]
    13fc:	cmp	x16, x17
    1400:	str	w11, [x24]
    1404:	b.eq	148c <gconv@@Base+0xc3c>  // b.none
    1408:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    140c:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    1410:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    1414:	add	x3, x3, #0xcb0
    1418:	add	x1, x1, #0xaf8
    141c:	add	x0, x0, #0xc20
    1420:	mov	w2, #0x2ea                 	// #746
    1424:	bl	6e0 <__assert_fail@plt>
    1428:	str	xzr, [x25]
    142c:	mov	w8, #0x0                   	// #0
    1430:	ldr	w0, [x20, #16]
    1434:	tbnz	w0, #0, b00 <gconv@@Base+0x2b0>
    1438:	mov	x0, x22
    143c:	str	w6, [sp, #104]
    1440:	bl	6d0 <_dl_mcount_wrapper_check@plt>
    1444:	ldr	w6, [sp, #104]
    1448:	mov	x5, x23
    144c:	ldr	w7, [sp, #136]
    1450:	ldp	x0, x1, [sp, #152]
    1454:	b	13ac <gconv@@Base+0xb5c>
    1458:	mov	w8, #0x5                   	// #5
    145c:	b	b00 <gconv@@Base+0x2b0>
    1460:	mov	w2, w4
    1464:	b	fc4 <gconv@@Base+0x774>
    1468:	cmp	w27, w4, lsr #7
    146c:	b.eq	ff0 <gconv@@Base+0x7a0>  // b.none
    1470:	cbz	x14, 1478 <gconv@@Base+0xc28>
    1474:	cbnz	w8, 16b4 <gconv@@Base+0xe64>
    1478:	str	x5, [x15]
    147c:	ldr	x0, [sp, #200]
    1480:	str	w11, [x24]
    1484:	cmp	x17, x0
    1488:	b.ne	1408 <gconv@@Base+0xbb8>  // b.any
    148c:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    1490:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    1494:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    1498:	add	x3, x3, #0xcb0
    149c:	add	x1, x1, #0xaf8
    14a0:	add	x0, x0, #0xc38
    14a4:	mov	w2, #0x2eb                 	// #747
    14a8:	bl	6e0 <__assert_fail@plt>
    14ac:	strb	w9, [x17]
    14b0:	cmp	x16, x1
    14b4:	b.ls	19d4 <gconv@@Base+0x1184>  // b.plast
    14b8:	add	x3, x17, #0x2
    14bc:	mov	w11, #0x0                   	// #0
    14c0:	mov	x17, x1
    14c4:	mov	x1, x3
    14c8:	b	fe8 <gconv@@Base+0x798>
    14cc:	mov	x2, x10
    14d0:	cmp	w4, #0xf7
    14d4:	mov	x1, x10
    14d8:	mov	w3, #0x2d9                 	// #729
    14dc:	b.hi	14ec <gconv@@Base+0xc9c>  // b.pmore
    14e0:	b	1504 <gconv@@Base+0xcb4>
    14e4:	ldrh	w3, [x2, #10]
    14e8:	mov	x1, x2
    14ec:	cmp	w4, w3
    14f0:	add	x2, x1, #0x8
    14f4:	b.hi	14e4 <gconv@@Base+0xc94>  // b.pmore
    14f8:	ldrh	w1, [x1, #8]
    14fc:	cmp	w4, w1
    1500:	b.cc	16ac <gconv@@Base+0xe5c>  // b.lo, b.ul, b.last
    1504:	ldr	w1, [x2, #4]
    1508:	cmp	w4, #0x0
    150c:	add	w1, w4, w1
    1510:	lsl	x1, x1, #1
    1514:	add	x3, x1, x7
    1518:	ldrb	w2, [x1, x7]
    151c:	ccmp	w2, #0x0, #0x0, ne  // ne = any
    1520:	b.eq	16ac <gconv@@Base+0xe5c>  // b.none
    1524:	cbnz	w11, 1530 <gconv@@Base+0xce0>
    1528:	mov	w11, #0x40                  	// #64
    152c:	strb	w30, [x17], #1
    1530:	add	x1, x17, #0x2
    1534:	cmp	x16, x1
    1538:	b.cc	17c0 <gconv@@Base+0xf70>  // b.lo, b.ul, b.last
    153c:	strb	w2, [x17]
    1540:	ldrb	w2, [x3, #1]
    1544:	strb	w2, [x17, #1]
    1548:	mov	x17, x1
    154c:	b	ff0 <gconv@@Base+0x7a0>
    1550:	str	x18, [x15]
    1554:	ldr	x1, [sp, #200]
    1558:	str	w11, [x24]
    155c:	cmp	x17, x1
    1560:	b.eq	11f8 <gconv@@Base+0x9a8>  // b.none
    1564:	b	1408 <gconv@@Base+0xbb8>
    1568:	str	x18, [x15]
    156c:	ldr	x0, [sp, #200]
    1570:	str	w11, [x24]
    1574:	cmp	x17, x0
    1578:	b.eq	148c <gconv@@Base+0xc3c>  // b.none
    157c:	b	1408 <gconv@@Base+0xbb8>
    1580:	mov	x2, #0x4                   	// #4
    1584:	mov	x0, #0x0                   	// #0
    1588:	b	e10 <gconv@@Base+0x5c0>
    158c:	cbz	w11, 13f8 <gconv@@Base+0xba8>
    1590:	add	x27, x27, #0x1
    1594:	mov	w11, #0x0                   	// #0
    1598:	b	11d4 <gconv@@Base+0x984>
    159c:	cmp	w11, #0x40
    15a0:	b.eq	13f8 <gconv@@Base+0xba8>  // b.none
    15a4:	add	x27, x27, #0x1
    15a8:	mov	w11, #0x40                  	// #64
    15ac:	b	11d4 <gconv@@Base+0x984>
    15b0:	cmp	w6, #0x40
    15b4:	b.ne	1a00 <gconv@@Base+0x11b0>  // b.any
    15b8:	add	x6, x4, x3
    15bc:	add	x8, x4, #0x1
    15c0:	cmp	x6, x8
    15c4:	b.ls	1a40 <gconv@@Base+0x11f0>  // b.plast
    15c8:	ldrb	w0, [sp, #209]
    15cc:	mov	w3, #0x4040                	// #16448
    15d0:	add	w2, w0, w2, lsl #8
    15d4:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    15d8:	cmp	w2, w3
    15dc:	add	x0, x0, #0xcb8
    15e0:	b.ls	160c <gconv@@Base+0xdbc>  // b.plast
    15e4:	mov	w3, #0x457a                	// #17786
    15e8:	b	15f0 <gconv@@Base+0xda0>
    15ec:	ldrh	w3, [x0, #10]
    15f0:	add	x0, x0, #0x8
    15f4:	cmp	w2, w3
    15f8:	b.hi	15ec <gconv@@Base+0xd9c>  // b.pmore
    15fc:	ldrh	w3, [x0]
    1600:	mov	w4, #0xffff                	// #65535
    1604:	cmp	w3, w4
    1608:	b.eq	16c4 <gconv@@Base+0xe74>  // b.none
    160c:	cmp	w2, w3
    1610:	b.cc	16c4 <gconv@@Base+0xe74>  // b.lo, b.ul, b.last
    1614:	ldr	w3, [x0, #4]
    1618:	cmp	w2, #0x0
    161c:	adrp	x0, 10000 <gconv@@Base+0xf7b0>
    1620:	add	x0, x0, #0x228
    1624:	add	w2, w2, w3
    1628:	ldrh	w0, [x0, x2, lsl #1]
    162c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    1630:	b.eq	16c4 <gconv@@Base+0xe74>  // b.none
    1634:	str	w0, [x25]
    1638:	mov	x25, x7
    163c:	mov	x0, #0x2                   	// #2
    1640:	ldr	w10, [x28]
    1644:	and	w5, w10, #0x7
    1648:	b	1140 <gconv@@Base+0x8f0>
    164c:	str	x27, [x15]
    1650:	str	w11, [x24]
    1654:	b.eq	1200 <gconv@@Base+0x9b0>  // b.none
    1658:	b	1408 <gconv@@Base+0xbb8>
    165c:	str	x27, [x15]
    1660:	mov	x25, x26
    1664:	str	w11, [x24]
    1668:	cmp	x16, x25
    166c:	b.eq	148c <gconv@@Base+0xc3c>  // b.none
    1670:	b	1408 <gconv@@Base+0xbb8>
    1674:	str	x19, [x27]
    1678:	cmp	x26, x19
    167c:	b.cs	16a4 <gconv@@Base+0xe54>  // b.hs, b.nlast
    1680:	add	x0, x0, #0x4
    1684:	sub	x19, x19, x26
    1688:	add	x28, x28, x0
    168c:	mov	x0, #0x0                   	// #0
    1690:	ldrb	w1, [x26, x0]
    1694:	strb	w1, [x28, x0]
    1698:	add	x0, x0, #0x1
    169c:	cmp	x19, x0
    16a0:	b.ne	1690 <gconv@@Base+0xe40>  // b.any
    16a4:	mov	w8, #0x7                   	// #7
    16a8:	b	b00 <gconv@@Base+0x2b0>
    16ac:	cbz	x14, 1478 <gconv@@Base+0xc28>
    16b0:	cbz	w8, 1478 <gconv@@Base+0xc28>
    16b4:	ldr	x1, [x14]
    16b8:	add	x1, x1, #0x1
    16bc:	str	x1, [x14]
    16c0:	b	ff0 <gconv@@Base+0x7a0>
    16c4:	ldr	x2, [sp, #184]
    16c8:	cbz	x2, 16e8 <gconv@@Base+0xe98>
    16cc:	tbz	w1, #1, 16e8 <gconv@@Base+0xe98>
    16d0:	ldr	x1, [x2]
    16d4:	mov	x0, #0x2                   	// #2
    16d8:	add	x1, x1, #0x1
    16dc:	str	x1, [x2]
    16e0:	b	1140 <gconv@@Base+0x8f0>
    16e4:	cbnz	w6, 17b8 <gconv@@Base+0xf68>
    16e8:	mov	w8, #0x6                   	// #6
    16ec:	b	b00 <gconv@@Base+0x2b0>
    16f0:	str	x19, [x15]
    16f4:	ldr	x0, [sp, #200]
    16f8:	str	w11, [x24]
    16fc:	cmp	x17, x0
    1700:	b.eq	148c <gconv@@Base+0xc3c>  // b.none
    1704:	b	1408 <gconv@@Base+0xbb8>
    1708:	add	x1, x1, #0x80
    170c:	cmp	w4, #0xf7
    1710:	mov	w3, #0x2d9                 	// #729
    1714:	b.hi	14ec <gconv@@Base+0xc9c>  // b.pmore
    1718:	mov	x2, x1
    171c:	mov	w1, #0xa7                  	// #167
    1720:	b	14fc <gconv@@Base+0xcac>
    1724:	cbz	x9, 13f8 <gconv@@Base+0xba8>
    1728:	cbz	w5, 13f8 <gconv@@Base+0xba8>
    172c:	ldr	x1, [x9]
    1730:	add	x1, x1, #0x1
    1734:	str	x1, [x9]
    1738:	b	11d0 <gconv@@Base+0x980>
    173c:	str	x27, [x15]
    1740:	cmp	x16, x26
    1744:	str	w11, [x24]
    1748:	b.eq	1200 <gconv@@Base+0x9b0>  // b.none
    174c:	b	1408 <gconv@@Base+0xbb8>
    1750:	mov	x0, x22
    1754:	str	x1, [sp, #200]
    1758:	bl	6d0 <_dl_mcount_wrapper_check@plt>
    175c:	ldp	x0, x1, [sp, #152]
    1760:	mov	x5, x23
    1764:	ldr	w7, [sp, #136]
    1768:	mov	x3, x21
    176c:	add	x2, sp, #0xc8
    1770:	mov	w6, #0x0                   	// #0
    1774:	mov	x4, #0x0                   	// #0
    1778:	blr	x22
    177c:	mov	w8, w0
    1780:	cmp	w0, #0x4
    1784:	b.eq	1394 <gconv@@Base+0xb44>  // b.none
    1788:	ldr	x0, [sp, #200]
    178c:	cmp	x0, x21
    1790:	b.ne	19c8 <gconv@@Base+0x1178>  // b.any
    1794:	cbnz	w8, b00 <gconv@@Base+0x2b0>
    1798:	b	1394 <gconv@@Base+0xb44>
    179c:	str	x19, [x15]
    17a0:	cmp	x16, x26
    17a4:	str	w11, [x24]
    17a8:	b.eq	148c <gconv@@Base+0xc3c>  // b.none
    17ac:	b	1408 <gconv@@Base+0xbb8>
    17b0:	cmp	w6, #0x40
    17b4:	b.eq	16e8 <gconv@@Base+0xe98>  // b.none
    17b8:	mov	x0, #0x1                   	// #1
    17bc:	b	1140 <gconv@@Base+0x8f0>
    17c0:	str	x5, [x15]
    17c4:	ldr	x1, [sp, #200]
    17c8:	str	w11, [x24]
    17cc:	cmp	x17, x1
    17d0:	b.eq	11f8 <gconv@@Base+0x9a8>  // b.none
    17d4:	b	1408 <gconv@@Base+0xbb8>
    17d8:	cbz	x9, 13f8 <gconv@@Base+0xba8>
    17dc:	cbz	w5, 13f8 <gconv@@Base+0xba8>
    17e0:	ldr	x1, [x9]
    17e4:	add	x27, x27, #0x2
    17e8:	add	x1, x1, #0x1
    17ec:	str	x1, [x9]
    17f0:	b	11d4 <gconv@@Base+0x984>
    17f4:	mov	w1, #0xf                   	// #15
    17f8:	strb	w1, [x25]
    17fc:	cmp	x21, x0
    1800:	b.ls	1458 <gconv@@Base+0xc08>  // b.plast
    1804:	add	x1, x25, #0x2
    1808:	mov	x25, x0
    180c:	mov	x0, x1
    1810:	b	ec4 <gconv@@Base+0x674>
    1814:	add	x0, x0, #0x80
    1818:	cmp	w7, #0xf7
    181c:	mov	w3, #0x2d9                 	// #729
    1820:	b.hi	1830 <gconv@@Base+0xfe0>  // b.pmore
    1824:	b	197c <gconv@@Base+0x112c>
    1828:	ldrh	w3, [x2, #10]
    182c:	mov	x0, x2
    1830:	cmp	w7, w3
    1834:	add	x2, x0, #0x8
    1838:	b.hi	1828 <gconv@@Base+0xfd8>  // b.pmore
    183c:	ldrh	w0, [x0, #8]
    1840:	cmp	w7, w0
    1844:	b.cc	18b0 <gconv@@Base+0x1060>  // b.lo, b.ul, b.last
    1848:	ldr	w0, [x2, #4]
    184c:	adrp	x2, 2000 <gconv@@Base+0x17b0>
    1850:	add	x2, x2, #0xc8
    1854:	cmp	w7, #0x0
    1858:	add	w0, w7, w0
    185c:	lsl	x0, x0, #1
    1860:	add	x3, x0, x2
    1864:	ldrb	w2, [x0, x2]
    1868:	ccmp	w2, #0x0, #0x0, ne  // ne = any
    186c:	b.eq	18b0 <gconv@@Base+0x1060>  // b.none
    1870:	mov	x0, x25
    1874:	cbnz	w6, 1880 <gconv@@Base+0x1030>
    1878:	mov	w1, #0xe                   	// #14
    187c:	strb	w1, [x0], #1
    1880:	add	x25, x0, #0x2
    1884:	cmp	x21, x25
    1888:	b.cc	1458 <gconv@@Base+0xc08>  // b.lo, b.ul, b.last
    188c:	strb	w2, [x0]
    1890:	ldrb	w1, [x3, #1]
    1894:	strb	w1, [x0, #1]
    1898:	ldr	w10, [x28]
    189c:	and	w5, w10, #0x7
    18a0:	b	ed4 <gconv@@Base+0x684>
    18a4:	mov	w0, #0x1c00                	// #7168
    18a8:	cmp	w0, w7, lsr #7
    18ac:	b.eq	ed4 <gconv@@Base+0x684>  // b.none
    18b0:	ldr	x0, [sp, #184]
    18b4:	cbz	x0, 16e8 <gconv@@Base+0xe98>
    18b8:	tbz	w1, #1, 16e8 <gconv@@Base+0xe98>
    18bc:	mov	x1, x0
    18c0:	ldr	x0, [x0]
    18c4:	add	x0, x0, #0x1
    18c8:	str	x0, [x1]
    18cc:	b	ed4 <gconv@@Base+0x684>
    18d0:	add	x0, x0, #0xcb8
    18d4:	cmp	w7, #0xf7
    18d8:	add	x0, x0, #0x80
    18dc:	mov	w3, #0x2d9                 	// #729
    18e0:	b.hi	1830 <gconv@@Base+0xfe0>  // b.pmore
    18e4:	mov	x2, x0
    18e8:	b	1848 <gconv@@Base+0xff8>
    18ec:	mov	w3, #0x4040                	// #16448
    18f0:	b	1358 <gconv@@Base+0xb08>
    18f4:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    18f8:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    18fc:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    1900:	add	x3, x3, #0xcb0
    1904:	add	x1, x1, #0xaf8
    1908:	add	x0, x0, #0xb10
    190c:	mov	w2, #0x234                 	// #564
    1910:	bl	6e0 <__assert_fail@plt>
    1914:	mov	w1, #0x0                   	// #0
    1918:	b	ce8 <gconv@@Base+0x498>
    191c:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    1920:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    1924:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    1928:	add	x3, x3, #0xcb0
    192c:	add	x1, x1, #0xaf8
    1930:	add	x0, x0, #0xc58
    1934:	mov	w2, #0x31e                 	// #798
    1938:	bl	6e0 <__assert_fail@plt>
    193c:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    1940:	add	x3, x3, #0xc80
    1944:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    1948:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    194c:	add	x1, x1, #0xb28
    1950:	add	x0, x0, #0xb38
    1954:	mov	w2, #0x18b                 	// #395
    1958:	bl	6e0 <__assert_fail@plt>
    195c:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    1960:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    1964:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    1968:	add	x3, x3, #0xc70
    196c:	add	x1, x1, #0xb28
    1970:	add	x0, x0, #0xb68
    1974:	mov	w2, #0x150                 	// #336
    1978:	bl	6e0 <__assert_fail@plt>
    197c:	mov	x2, x0
    1980:	mov	w0, #0xa7                  	// #167
    1984:	b	1840 <gconv@@Base+0xff0>
    1988:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    198c:	add	x3, x3, #0xc98
    1990:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    1994:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    1998:	add	x1, x1, #0xb28
    199c:	add	x0, x0, #0xb78
    19a0:	mov	w2, #0x1c9                 	// #457
    19a4:	bl	6e0 <__assert_fail@plt>
    19a8:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    19ac:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    19b0:	add	x3, x3, #0xc98
    19b4:	b	1948 <gconv@@Base+0x10f8>
    19b8:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    19bc:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    19c0:	add	x3, x3, #0xc80
    19c4:	b	1994 <gconv@@Base+0x1144>
    19c8:	str	w19, [x25]
    19cc:	cbnz	w8, b00 <gconv@@Base+0x2b0>
    19d0:	b	1394 <gconv@@Base+0xb44>
    19d4:	str	x5, [x15]
    19d8:	ldr	x2, [sp, #200]
    19dc:	str	wzr, [x24]
    19e0:	cmp	x1, x2
    19e4:	b.ne	1408 <gconv@@Base+0xbb8>  // b.any
    19e8:	mov	x17, x1
    19ec:	b	11f8 <gconv@@Base+0x9a8>
    19f0:	mov	x27, x15
    19f4:	mov	w8, w0
    19f8:	b	c9c <gconv@@Base+0x44c>
    19fc:	bl	6a0 <__stack_chk_fail@plt>
    1a00:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    1a04:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    1a08:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    1a0c:	add	x3, x3, #0xc98
    1a10:	add	x1, x1, #0xb28
    1a14:	add	x0, x0, #0xb68
    1a18:	mov	w2, #0x1be                 	// #446
    1a1c:	bl	6e0 <__assert_fail@plt>
    1a20:	ldr	x2, [sp, #184]
    1a24:	cbz	x2, 16e8 <gconv@@Base+0xe98>
    1a28:	tbz	w1, #1, 16e8 <gconv@@Base+0xe98>
    1a2c:	ldr	x1, [x2]
    1a30:	mov	x0, #0x1                   	// #1
    1a34:	add	x1, x1, x0
    1a38:	str	x1, [x2]
    1a3c:	b	1140 <gconv@@Base+0x8f0>
    1a40:	add	x4, x4, #0x2
    1a44:	cmp	x6, x4
    1a48:	b.eq	1ab4 <gconv@@Base+0x1264>  // b.none
    1a4c:	mov	w0, w0
    1a50:	cmp	x3, #0x40
    1a54:	sub	x0, x3, x0
    1a58:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    1a5c:	add	x26, x26, x0
    1a60:	str	x26, [x27]
    1a64:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    1a68:	add	x1, x1, #0xb28
    1a6c:	add	x3, x3, #0xc98
    1a70:	b.le	1aa4 <gconv@@Base+0x1254>
    1a74:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    1a78:	mov	w2, #0x1e6                 	// #486
    1a7c:	add	x0, x0, #0xbf0
    1a80:	bl	6e0 <__assert_fail@plt>
    1a84:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    1a88:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    1a8c:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    1a90:	add	x3, x3, #0xcb0
    1a94:	add	x1, x1, #0xaf8
    1a98:	add	x0, x0, #0xb10
    1a9c:	mov	w2, #0x1a4                 	// #420
    1aa0:	bl	6e0 <__assert_fail@plt>
    1aa4:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    1aa8:	mov	w2, #0x1e5                 	// #485
    1aac:	add	x0, x0, #0xbc8
    1ab0:	bl	6e0 <__assert_fail@plt>
    1ab4:	adrp	x3, 1000 <gconv@@Base+0x7b0>
    1ab8:	adrp	x1, 1000 <gconv@@Base+0x7b0>
    1abc:	adrp	x0, 1000 <gconv@@Base+0x7b0>
    1ac0:	add	x3, x3, #0xc98
    1ac4:	add	x1, x1, #0xb28
    1ac8:	add	x0, x0, #0xba0
    1acc:	mov	w2, #0x1db                 	// #475
    1ad0:	bl	6e0 <__assert_fail@plt>

Disassembly of section .fini:

0000000000001ad4 <.fini>:
    1ad4:	stp	x29, x30, [sp, #-16]!
    1ad8:	mov	x29, sp
    1adc:	ldp	x29, x30, [sp], #16
    1ae0:	ret
