
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//UTF-32.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000750 <.init>:
 750:	stp	x29, x30, [sp, #-16]!
 754:	mov	x29, sp
 758:	bl	820 <__assert_fail@plt+0x10>
 75c:	ldp	x29, x30, [sp], #16
 760:	ret

Disassembly of section .plt:

0000000000000770 <__cxa_finalize@plt-0x20>:
 770:	stp	x16, x30, [sp, #-16]!
 774:	adrp	x16, 11000 <gconv@@Base+0x105e0>
 778:	ldr	x17, [x16, #4088]
 77c:	add	x16, x16, #0xff8
 780:	br	x17
 784:	nop
 788:	nop
 78c:	nop

0000000000000790 <__cxa_finalize@plt>:
 790:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 794:	ldr	x17, [x16]
 798:	add	x16, x16, #0x0
 79c:	br	x17

00000000000007a0 <malloc@plt>:
 7a0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 7a4:	ldr	x17, [x16, #8]
 7a8:	add	x16, x16, #0x8
 7ac:	br	x17

00000000000007b0 <__gconv_transliterate@plt>:
 7b0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 7b4:	ldr	x17, [x16, #16]
 7b8:	add	x16, x16, #0x10
 7bc:	br	x17

00000000000007c0 <__stack_chk_fail@plt>:
 7c0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 7c4:	ldr	x17, [x16, #24]
 7c8:	add	x16, x16, #0x18
 7cc:	br	x17

00000000000007d0 <__gmon_start__@plt>:
 7d0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 7d4:	ldr	x17, [x16, #32]
 7d8:	add	x16, x16, #0x20
 7dc:	br	x17

00000000000007e0 <free@plt>:
 7e0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 7e4:	ldr	x17, [x16, #40]
 7e8:	add	x16, x16, #0x28
 7ec:	br	x17

00000000000007f0 <__strcasecmp@plt>:
 7f0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 7f4:	ldr	x17, [x16, #48]
 7f8:	add	x16, x16, #0x30
 7fc:	br	x17

0000000000000800 <_dl_mcount_wrapper_check@plt>:
 800:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 804:	ldr	x17, [x16, #56]
 808:	add	x16, x16, #0x38
 80c:	br	x17

0000000000000810 <__assert_fail@plt>:
 810:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 814:	ldr	x17, [x16, #64]
 818:	add	x16, x16, #0x40
 81c:	br	x17

Disassembly of section .text:

0000000000000820 <gconv_init@@Base-0xd8>:
     820:	adrp	x0, 11000 <gconv@@Base+0x105e0>
     824:	ldr	x0, [x0, #4048]
     828:	cbz	x0, 830 <__assert_fail@plt+0x20>
     82c:	b	7d0 <__gmon_start__@plt>
     830:	ret
     834:	nop
     838:	adrp	x0, 12000 <gconv@@Base+0x115e0>
     83c:	add	x0, x0, #0x50
     840:	adrp	x1, 12000 <gconv@@Base+0x115e0>
     844:	add	x1, x1, #0x50
     848:	cmp	x1, x0
     84c:	b.eq	864 <__assert_fail@plt+0x54>  // b.none
     850:	adrp	x1, 11000 <gconv@@Base+0x105e0>
     854:	ldr	x1, [x1, #4024]
     858:	cbz	x1, 864 <__assert_fail@plt+0x54>
     85c:	mov	x16, x1
     860:	br	x16
     864:	ret
     868:	adrp	x0, 12000 <gconv@@Base+0x115e0>
     86c:	add	x0, x0, #0x50
     870:	adrp	x1, 12000 <gconv@@Base+0x115e0>
     874:	add	x1, x1, #0x50
     878:	sub	x1, x1, x0
     87c:	lsr	x2, x1, #63
     880:	add	x1, x2, x1, asr #3
     884:	cmp	xzr, x1, asr #1
     888:	asr	x1, x1, #1
     88c:	b.eq	8a4 <__assert_fail@plt+0x94>  // b.none
     890:	adrp	x2, 11000 <gconv@@Base+0x105e0>
     894:	ldr	x2, [x2, #4064]
     898:	cbz	x2, 8a4 <__assert_fail@plt+0x94>
     89c:	mov	x16, x2
     8a0:	br	x16
     8a4:	ret
     8a8:	stp	x29, x30, [sp, #-32]!
     8ac:	mov	x29, sp
     8b0:	str	x19, [sp, #16]
     8b4:	adrp	x19, 12000 <gconv@@Base+0x115e0>
     8b8:	ldrb	w0, [x19, #80]
     8bc:	cbnz	w0, 8e4 <__assert_fail@plt+0xd4>
     8c0:	adrp	x0, 11000 <gconv@@Base+0x105e0>
     8c4:	ldr	x0, [x0, #4032]
     8c8:	cbz	x0, 8d8 <__assert_fail@plt+0xc8>
     8cc:	adrp	x0, 12000 <gconv@@Base+0x115e0>
     8d0:	ldr	x0, [x0, #72]
     8d4:	bl	790 <__cxa_finalize@plt>
     8d8:	bl	838 <__assert_fail@plt+0x28>
     8dc:	mov	w0, #0x1                   	// #1
     8e0:	strb	w0, [x19, #80]
     8e4:	ldr	x19, [sp, #16]
     8e8:	ldp	x29, x30, [sp], #32
     8ec:	ret
     8f0:	b	868 <__assert_fail@plt+0x58>
     8f4:	nop

00000000000008f8 <gconv_init@@Base>:
     8f8:	stp	x29, x30, [sp, #-48]!
     8fc:	mov	x29, sp
     900:	stp	x21, x22, [sp, #32]
     904:	ldr	x21, [x0, #24]
     908:	stp	x19, x20, [sp, #16]
     90c:	adrp	x20, 1000 <gconv@@Base+0x5e0>
     910:	add	x20, x20, #0x878
     914:	mov	x19, x0
     918:	mov	x1, x20
     91c:	mov	x0, x21
     920:	bl	7f0 <__strcasecmp@plt>
     924:	cbz	w0, 978 <gconv_init@@Base+0x80>
     928:	ldr	x22, [x19, #32]
     92c:	mov	x1, x20
     930:	mov	x0, x22
     934:	bl	7f0 <__strcasecmp@plt>
     938:	cbnz	w0, 9a0 <gconv_init@@Base+0xa8>
     93c:	mov	w20, #0x1                   	// #1
     940:	mov	x0, #0x8                   	// #8
     944:	bl	7a0 <malloc@plt>
     948:	mov	w2, #0x1                   	// #1
     94c:	cbz	x0, 98c <gconv_init@@Base+0x94>
     950:	stp	w2, w20, [x0]
     954:	mov	x1, #0x400000004           	// #17179869188
     958:	stp	x1, x1, [x19, #72]
     95c:	str	wzr, [x19, #88]
     960:	str	x0, [x19, #96]
     964:	mov	w0, #0x0                   	// #0
     968:	ldp	x19, x20, [sp, #16]
     96c:	ldp	x21, x22, [sp, #32]
     970:	ldp	x29, x30, [sp], #48
     974:	ret
     978:	mov	w20, #0x1                   	// #1
     97c:	mov	x0, #0x8                   	// #8
     980:	bl	7a0 <malloc@plt>
     984:	mov	w2, #0x2                   	// #2
     988:	cbnz	x0, 950 <gconv_init@@Base+0x58>
     98c:	mov	w0, #0x3                   	// #3
     990:	ldp	x19, x20, [sp, #16]
     994:	ldp	x21, x22, [sp, #32]
     998:	ldp	x29, x30, [sp], #48
     99c:	ret
     9a0:	adrp	x20, 1000 <gconv@@Base+0x5e0>
     9a4:	add	x20, x20, #0x888
     9a8:	mov	x1, x20
     9ac:	mov	x0, x21
     9b0:	bl	7f0 <__strcasecmp@plt>
     9b4:	cbz	w0, 9f8 <gconv_init@@Base+0x100>
     9b8:	mov	x1, x20
     9bc:	mov	x0, x22
     9c0:	bl	7f0 <__strcasecmp@plt>
     9c4:	cbz	w0, a00 <gconv_init@@Base+0x108>
     9c8:	adrp	x20, 1000 <gconv@@Base+0x5e0>
     9cc:	add	x20, x20, #0x898
     9d0:	mov	x0, x21
     9d4:	mov	x1, x20
     9d8:	bl	7f0 <__strcasecmp@plt>
     9dc:	cbz	w0, a08 <gconv_init@@Base+0x110>
     9e0:	mov	x1, x20
     9e4:	mov	x0, x22
     9e8:	bl	7f0 <__strcasecmp@plt>
     9ec:	cbz	w0, a10 <gconv_init@@Base+0x118>
     9f0:	mov	w0, #0x1                   	// #1
     9f4:	b	968 <gconv_init@@Base+0x70>
     9f8:	mov	w20, #0x3                   	// #3
     9fc:	b	97c <gconv_init@@Base+0x84>
     a00:	mov	w20, #0x3                   	// #3
     a04:	b	940 <gconv_init@@Base+0x48>
     a08:	mov	w20, #0x2                   	// #2
     a0c:	b	97c <gconv_init@@Base+0x84>
     a10:	mov	w20, #0x2                   	// #2
     a14:	b	940 <gconv_init@@Base+0x48>

0000000000000a18 <gconv_end@@Base>:
     a18:	ldr	x0, [x0, #96]
     a1c:	b	7e0 <free@plt>

0000000000000a20 <gconv@@Base>:
     a20:	stp	x29, x30, [sp, #-256]!
     a24:	mov	x10, x2
     a28:	mov	x14, x4
     a2c:	mov	x29, sp
     a30:	stp	x21, x22, [sp, #32]
     a34:	mov	x21, x1
     a38:	adrp	x1, 11000 <gconv@@Base+0x105e0>
     a3c:	stp	x23, x24, [sp, #48]
     a40:	add	x2, x21, #0x30
     a44:	ldr	w24, [x21, #16]
     a48:	ldr	x1, [x1, #4056]
     a4c:	stp	x19, x20, [sp, #16]
     a50:	mov	x20, x3
     a54:	ldr	x8, [x1]
     a58:	str	x8, [sp, #248]
     a5c:	mov	x8, #0x0                   	// #0
     a60:	add	x1, x0, #0x68
     a64:	stp	x25, x26, [sp, #64]
     a68:	mov	w26, w7
     a6c:	mov	x25, #0x0                   	// #0
     a70:	stp	x27, x28, [sp, #80]
     a74:	mov	x27, x5
     a78:	stp	x1, x2, [sp, #144]
     a7c:	str	x0, [sp, #176]
     a80:	tbnz	w24, #0, aa0 <gconv@@Base+0x80>
     a84:	ldr	x0, [x0, #104]
     a88:	ldr	x25, [x1, #40]
     a8c:	cbz	x0, aa0 <gconv@@Base+0x80>
     a90:	adrp	x0, 11000 <gconv@@Base+0x105e0>
     a94:	ldr	x0, [x0, #4040]
     a98:	ldr	x0, [x0]
     a9c:	eor	x25, x25, x0
     aa0:	cbnz	w6, 123c <gconv@@Base+0x81c>
     aa4:	ldr	x0, [sp, #176]
     aa8:	cmp	x14, #0x0
     aac:	csel	x3, x21, x14, eq  // eq = none
     ab0:	cmp	x27, #0x0
     ab4:	ldr	x28, [x21, #8]
     ab8:	ldr	x1, [x0, #96]
     abc:	add	x0, sp, #0xd0
     ac0:	csel	x0, x0, xzr, ne  // ne = any
     ac4:	ldr	x23, [x3]
     ac8:	str	x0, [sp, #168]
     acc:	ldp	w15, w2, [x1]
     ad0:	str	xzr, [sp, #208]
     ad4:	ldr	x1, [x10]
     ad8:	cmp	w2, #0x1
     adc:	cset	w0, eq  // eq = none
     ae0:	cmp	w0, #0x0
     ae4:	ccmp	w15, #0x2, #0x0, ne  // ne = any
     ae8:	b.eq	c50 <gconv@@Base+0x230>  // b.none
     aec:	cmp	w0, #0x0
     af0:	ccmp	w15, #0x2, #0x4, ne  // ne = any
     af4:	b.eq	10f8 <gconv@@Base+0x6d8>  // b.none
     af8:	ldr	w0, [x21, #24]
     afc:	cbnz	w0, c58 <gconv@@Base+0x238>
     b00:	ldr	w0, [x21, #20]
     b04:	cbnz	w0, c58 <gconv@@Base+0x238>
     b08:	add	x0, x23, #0x4
     b0c:	cmp	x0, x28
     b10:	b.hi	13f8 <gconv@@Base+0x9d8>  // b.pmore
     b14:	mov	w1, #0xfeff                	// #65279
     b18:	str	w1, [x23]
     b1c:	mov	x23, x0
     b20:	ldr	w24, [x21, #16]
     b24:	and	w12, w24, #0x4
     b28:	cbz	w26, c60 <gconv@@Base+0x240>
     b2c:	nop
     b30:	ldr	x19, [x21, #32]
     b34:	ldr	w5, [x19]
     b38:	ands	w6, w5, #0x7
     b3c:	b.eq	c60 <gconv@@Base+0x240>  // b.none
     b40:	cbnz	x14, 17e4 <gconv@@Base+0xdc4>
     b44:	cmp	w15, #0x2
     b48:	ldr	x2, [x10]
     b4c:	b.eq	1120 <gconv@@Base+0x700>  // b.none
     b50:	stp	x2, x23, [sp, #224]
     b54:	cmp	w6, #0x4
     b58:	b.hi	17c4 <gconv@@Base+0xda4>  // b.pmore
     b5c:	mov	w22, w6
     b60:	cbz	w6, 1450 <gconv@@Base+0xa30>
     b64:	add	x7, sp, #0xf0
     b68:	add	x4, x19, #0x3
     b6c:	mov	x0, #0x1                   	// #1
     b70:	add	x1, x7, x0
     b74:	ldrb	w8, [x4, x0]
     b78:	cmp	x22, x0
     b7c:	add	x0, x0, #0x1
     b80:	sturb	w8, [x1, #-1]
     b84:	b.ne	b70 <gconv@@Base+0x150>  // b.any
     b88:	mov	x0, #0x4                   	// #4
     b8c:	sub	x0, x0, x22
     b90:	add	x0, x2, x0
     b94:	cmp	x20, x0
     b98:	b.cc	14e0 <gconv@@Base+0xac0>  // b.lo, b.ul, b.last
     b9c:	add	x11, x23, #0x4
     ba0:	add	x0, x2, #0x1
     ba4:	add	x7, sp, #0xf0
     ba8:	cmp	x28, x11
     bac:	b.cc	13f8 <gconv@@Base+0x9d8>  // b.lo, b.ul, b.last
     bb0:	add	x22, x22, #0x1
     bb4:	str	x0, [sp, #224]
     bb8:	add	x4, x7, x22
     bbc:	cmp	x22, #0x3
     bc0:	ldurb	w1, [x0, #-1]
     bc4:	ccmp	x20, x0, #0x0, ls  // ls = plast
     bc8:	add	x0, x0, #0x1
     bcc:	sturb	w1, [x4, #-1]
     bd0:	b.hi	bb0 <gconv@@Base+0x190>  // b.pmore
     bd4:	ldr	w0, [sp, #240]
     bd8:	mov	w1, #0x10ffff              	// #1114111
     bdc:	str	x7, [sp, #224]
     be0:	cmp	w0, w1
     be4:	b.hi	1524 <gconv@@Base+0xb04>  // b.pmore
     be8:	mov	w1, #0xffff2800            	// #-55296
     bec:	add	w1, w0, w1
     bf0:	cmp	w1, #0x7ff
     bf4:	b.ls	1568 <gconv@@Base+0xb48>  // b.plast
     bf8:	cmp	w12, #0x0
     bfc:	rev	w1, w0
     c00:	csel	w0, w1, w0, ne  // ne = any
     c04:	str	w0, [x23]
     c08:	add	x0, x7, #0x4
     c0c:	mov	x7, #0x4                   	// #4
     c10:	ldr	w5, [x19]
     c14:	stp	x0, x11, [sp, #224]
     c18:	and	w6, w5, #0x7
     c1c:	mov	w6, w6
     c20:	cmp	x7, x6
     c24:	b.le	1818 <gconv@@Base+0xdf8>
     c28:	ldr	x22, [x10]
     c2c:	sub	x7, x7, x6
     c30:	ldr	w24, [x21, #16]
     c34:	and	w5, w5, #0xfffffff8
     c38:	add	x22, x22, x7
     c3c:	str	x22, [x10]
     c40:	ldr	x13, [sp, #208]
     c44:	ldr	x23, [sp, #232]
     c48:	str	w5, [x19]
     c4c:	b	c68 <gconv@@Base+0x248>
     c50:	ldr	w0, [x21, #20]
     c54:	cbz	w0, 132c <gconv@@Base+0x90c>
     c58:	and	w12, w24, #0x4
     c5c:	cbnz	w26, b30 <gconv@@Base+0x110>
     c60:	ldr	x22, [x10]
     c64:	mov	x13, #0x0                   	// #0
     c68:	add	x0, sp, #0xe8
     c6c:	mov	w7, w24
     c70:	mov	x24, x23
     c74:	mov	x23, x13
     c78:	str	w26, [sp, #136]
     c7c:	mov	x26, x27
     c80:	mov	x27, x28
     c84:	mov	w28, w12
     c88:	str	x0, [sp, #184]
     c8c:	add	x0, sp, #0xe0
     c90:	str	x14, [sp, #120]
     c94:	str	w15, [sp, #128]
     c98:	str	x0, [sp, #192]
     c9c:	add	x0, sp, #0xd8
     ca0:	str	x0, [sp, #160]
     ca4:	cbz	x26, cb0 <gconv@@Base+0x290>
     ca8:	ldr	x0, [x26]
     cac:	add	x23, x23, x0
     cb0:	ldr	w0, [sp, #128]
     cb4:	cmp	w0, #0x2
     cb8:	b.eq	ea0 <gconv@@Base+0x480>  // b.none
     cbc:	stp	x22, x24, [sp, #224]
     cc0:	cmp	x20, x22
     cc4:	b.eq	1288 <gconv@@Base+0x868>  // b.none
     cc8:	and	w7, w7, #0x2
     ccc:	mov	x19, x24
     cd0:	mov	x1, x22
     cd4:	mov	w11, #0x4                   	// #4
     cd8:	mov	w15, #0x10ffff              	// #1114111
     cdc:	mov	w18, #0xffff2800            	// #-55296
     ce0:	add	x3, x1, #0x4
     ce4:	cmp	x20, x3
     ce8:	b.cc	f38 <gconv@@Base+0x518>  // b.lo, b.ul, b.last
     cec:	add	x5, x19, #0x4
     cf0:	cmp	x27, x5
     cf4:	b.cc	f88 <gconv@@Base+0x568>  // b.lo, b.ul, b.last
     cf8:	ldr	w2, [x1]
     cfc:	cmp	w2, w15
     d00:	b.hi	f94 <gconv@@Base+0x574>  // b.pmore
     d04:	add	w4, w2, w18
     d08:	cmp	w4, #0x7ff
     d0c:	b.ls	fb4 <gconv@@Base+0x594>  // b.plast
     d10:	cmp	w28, #0x0
     d14:	rev	w4, w2
     d18:	csel	w2, w4, w2, ne  // ne = any
     d1c:	mov	x1, x3
     d20:	str	w2, [x19]
     d24:	mov	x19, x5
     d28:	stp	x3, x5, [sp, #224]
     d2c:	cmp	x20, x1
     d30:	b.ne	ce0 <gconv@@Base+0x2c0>  // b.any
     d34:	nop
     d38:	ldr	x0, [sp, #120]
     d3c:	str	x1, [x10]
     d40:	cbnz	x0, f4c <gconv@@Base+0x52c>
     d44:	ldp	w1, w0, [x21, #16]
     d48:	add	w0, w0, #0x1
     d4c:	str	w0, [x21, #20]
     d50:	tbnz	w1, #0, 1014 <gconv@@Base+0x5f4>
     d54:	cmp	x24, x19
     d58:	b.cs	1098 <gconv@@Base+0x678>  // b.hs, b.nlast
     d5c:	ldr	x1, [x21]
     d60:	mov	x0, x25
     d64:	str	x10, [sp, #104]
     d68:	str	w11, [sp, #112]
     d6c:	str	x1, [sp, #216]
     d70:	bl	800 <_dl_mcount_wrapper_check@plt>
     d74:	ldp	x0, x1, [sp, #144]
     d78:	mov	x5, x26
     d7c:	ldr	w7, [sp, #136]
     d80:	mov	x3, x19
     d84:	ldr	x2, [sp, #160]
     d88:	mov	w6, #0x0                   	// #0
     d8c:	mov	x4, #0x0                   	// #0
     d90:	blr	x25
     d94:	mov	w15, w0
     d98:	ldr	w11, [sp, #112]
     d9c:	cmp	w0, #0x4
     da0:	ldr	x10, [sp, #104]
     da4:	b.eq	f28 <gconv@@Base+0x508>  // b.none
     da8:	ldr	x7, [sp, #216]
     dac:	cmp	x7, x19
     db0:	b.ne	dcc <gconv@@Base+0x3ac>  // b.any
     db4:	cbnz	w15, 1298 <gconv@@Base+0x878>
     db8:	ldr	w7, [x21, #16]
     dbc:	ldr	x22, [x10]
     dc0:	ldr	x24, [x21]
     dc4:	ldr	x23, [sp, #208]
     dc8:	b	ca4 <gconv@@Base+0x284>
     dcc:	mov	x0, #0x0                   	// #0
     dd0:	cbz	x26, dd8 <gconv@@Base+0x3b8>
     dd4:	ldr	x0, [x26]
     dd8:	ldr	x1, [sp, #208]
     ddc:	add	x0, x0, x1
     de0:	cmp	x0, x23
     de4:	b.eq	1364 <gconv@@Base+0x944>  // b.none
     de8:	ldr	w13, [x21, #16]
     dec:	ldr	w0, [sp, #128]
     df0:	str	x22, [x10]
     df4:	cmp	w0, #0x2
     df8:	b.eq	12a4 <gconv@@Base+0x884>  // b.none
     dfc:	stp	x22, x24, [sp, #224]
     e00:	cmp	x20, x22
     e04:	b.eq	1378 <gconv@@Base+0x958>  // b.none
     e08:	and	w13, w13, #0x2
     e0c:	mov	x0, x24
     e10:	mov	x5, #0x4                   	// #4
     e14:	mov	w19, #0x10ffff              	// #1114111
     e18:	mov	w23, #0xffff2800            	// #-55296
     e1c:	add	x3, x22, #0x4
     e20:	cmp	x20, x3
     e24:	b.cc	13c8 <gconv@@Base+0x9a8>  // b.lo, b.ul, b.last
     e28:	add	x6, x0, #0x4
     e2c:	cmp	x7, x6
     e30:	b.cc	1410 <gconv@@Base+0x9f0>  // b.lo, b.ul, b.last
     e34:	ldr	w2, [x22]
     e38:	cmp	w2, w19
     e3c:	b.hi	1424 <gconv@@Base+0xa04>  // b.pmore
     e40:	add	w4, w2, w23
     e44:	cmp	w4, #0x7ff
     e48:	b.ls	145c <gconv@@Base+0xa3c>  // b.plast
     e4c:	cmp	w28, #0x0
     e50:	rev	w4, w2
     e54:	csel	w2, w4, w2, ne  // ne = any
     e58:	mov	x22, x3
     e5c:	str	w2, [x0]
     e60:	mov	x0, x6
     e64:	stp	x3, x6, [sp, #224]
     e68:	cmp	x20, x22
     e6c:	b.ne	e1c <gconv@@Base+0x3fc>  // b.any
     e70:	ldr	x7, [sp, #216]
     e74:	str	x20, [x10]
     e78:	cmp	x0, x7
     e7c:	b.ne	13d8 <gconv@@Base+0x9b8>  // b.any
     e80:	cmp	x5, #0x5
     e84:	b.ne	1380 <gconv@@Base+0x960>  // b.any
     e88:	cmp	x24, x0
     e8c:	b.ne	db4 <gconv@@Base+0x394>  // b.any
     e90:	ldr	w0, [x21, #20]
     e94:	sub	w0, w0, #0x1
     e98:	str	w0, [x21, #20]
     e9c:	b	db4 <gconv@@Base+0x394>
     ea0:	cmp	x20, x22
     ea4:	b.eq	1288 <gconv@@Base+0x868>  // b.none
     ea8:	add	x1, x22, #0x4
     eac:	cmp	x1, x20
     eb0:	b.hi	121c <gconv@@Base+0x7fc>  // b.pmore
     eb4:	add	x2, x24, #0x4
     eb8:	cmp	x2, x27
     ebc:	b.hi	122c <gconv@@Base+0x80c>  // b.pmore
     ec0:	and	w7, w7, #0x2
     ec4:	mov	x19, x24
     ec8:	mov	w11, #0x4                   	// #4
     ecc:	mov	w5, #0xffff2800            	// #-55296
     ed0:	mov	w4, #0x10ffff              	// #1114111
     ed4:	ldur	w0, [x1, #-4]
     ed8:	cmp	w28, #0x0
     edc:	sub	x6, x1, #0x4
     ee0:	rev	w3, w0
     ee4:	csel	w0, w3, w0, ne  // ne = any
     ee8:	add	w3, w0, w5
     eec:	cmp	w3, #0x7ff
     ef0:	ccmp	w0, w4, #0x2, hi  // hi = pmore
     ef4:	b.hi	fe0 <gconv@@Base+0x5c0>  // b.pmore
     ef8:	str	w0, [x19]
     efc:	mov	x19, x2
     f00:	cmp	x20, x1
     f04:	b.eq	d38 <gconv@@Base+0x318>  // b.none
     f08:	add	x0, x1, #0x4
     f0c:	cmp	x20, x0
     f10:	b.cc	1000 <gconv@@Base+0x5e0>  // b.lo, b.ul, b.last
     f14:	add	x2, x19, #0x4
     f18:	cmp	x27, x2
     f1c:	b.cc	1090 <gconv@@Base+0x670>  // b.lo, b.ul, b.last
     f20:	mov	x1, x0
     f24:	b	ed4 <gconv@@Base+0x4b4>
     f28:	mov	w15, w11
     f2c:	cmp	w11, #0x5
     f30:	b.ne	db4 <gconv@@Base+0x394>  // b.any
     f34:	b	db8 <gconv@@Base+0x398>
     f38:	ldr	x0, [sp, #120]
     f3c:	mov	w11, #0x7                   	// #7
     f40:	ldr	x1, [sp, #224]
     f44:	str	x1, [x10]
     f48:	cbz	x0, d44 <gconv@@Base+0x324>
     f4c:	str	x19, [x0]
     f50:	adrp	x0, 11000 <gconv@@Base+0x105e0>
     f54:	ldr	x0, [x0, #4056]
     f58:	ldr	x1, [sp, #248]
     f5c:	ldr	x0, [x0]
     f60:	eor	x0, x1, x0
     f64:	cbnz	x0, 1804 <gconv@@Base+0xde4>
     f68:	mov	w0, w11
     f6c:	ldp	x19, x20, [sp, #16]
     f70:	ldp	x21, x22, [sp, #32]
     f74:	ldp	x23, x24, [sp, #48]
     f78:	ldp	x25, x26, [sp, #64]
     f7c:	ldp	x27, x28, [sp, #80]
     f80:	ldp	x29, x30, [sp], #256
     f84:	ret
     f88:	mov	w11, #0x5                   	// #5
     f8c:	ldr	x1, [sp, #224]
     f90:	b	d38 <gconv@@Base+0x318>
     f94:	ldr	x0, [sp, #168]
     f98:	cbz	x0, 1008 <gconv@@Base+0x5e8>
     f9c:	ldr	w0, [x21, #16]
     fa0:	tbnz	w0, #3, 10a0 <gconv@@Base+0x680>
     fa4:	ldr	x1, [sp, #224]
     fa8:	cbnz	w7, 11fc <gconv@@Base+0x7dc>
     fac:	mov	w11, #0x6                   	// #6
     fb0:	b	d38 <gconv@@Base+0x318>
     fb4:	ldr	x0, [sp, #168]
     fb8:	cbz	x0, 1008 <gconv@@Base+0x5e8>
     fbc:	cbz	w7, 1008 <gconv@@Base+0x5e8>
     fc0:	ldr	x2, [sp, #168]
     fc4:	mov	x1, x3
     fc8:	mov	w11, #0x6                   	// #6
     fcc:	str	x3, [sp, #224]
     fd0:	ldr	x0, [x2]
     fd4:	add	x0, x0, #0x1
     fd8:	str	x0, [x2]
     fdc:	b	d2c <gconv@@Base+0x30c>
     fe0:	ldr	x2, [sp, #168]
     fe4:	cbz	x2, 10ec <gconv@@Base+0x6cc>
     fe8:	cbz	w7, 10ec <gconv@@Base+0x6cc>
     fec:	ldr	x0, [x2]
     ff0:	mov	w11, #0x6                   	// #6
     ff4:	add	x0, x0, #0x1
     ff8:	str	x0, [x2]
     ffc:	b	f00 <gconv@@Base+0x4e0>
    1000:	mov	w11, #0x7                   	// #7
    1004:	b	d38 <gconv@@Base+0x318>
    1008:	mov	w11, #0x6                   	// #6
    100c:	ldr	x1, [sp, #224]
    1010:	b	d38 <gconv@@Base+0x318>
    1014:	mov	x27, x26
    1018:	ldr	w26, [sp, #136]
    101c:	ldr	x1, [sp, #208]
    1020:	ldr	x0, [x27]
    1024:	str	x19, [x21]
    1028:	add	x0, x0, x1
    102c:	str	x0, [x27]
    1030:	cmp	w26, #0x0
    1034:	ccmp	w11, #0x7, #0x0, ne  // ne = any
    1038:	b.ne	f50 <gconv@@Base+0x530>  // b.any
    103c:	ldr	x0, [x10]
    1040:	sub	x3, x20, x0
    1044:	cmp	x3, #0x3
    1048:	b.gt	17a4 <gconv@@Base+0xd84>
    104c:	ldr	x4, [x21, #32]
    1050:	cmp	x0, x20
    1054:	add	x0, x0, #0x1
    1058:	add	x1, x4, #0x4
    105c:	b.cs	1654 <gconv@@Base+0xc34>  // b.hs, b.nlast
    1060:	str	x0, [x10]
    1064:	cmp	x20, x0
    1068:	add	x0, x0, #0x1
    106c:	ldurb	w2, [x0, #-2]
    1070:	strb	w2, [x1], #1
    1074:	b.ne	1060 <gconv@@Base+0x640>  // b.any
    1078:	mov	w1, w3
    107c:	ldr	w0, [x4]
    1080:	and	w0, w0, #0xfffffff8
    1084:	orr	w0, w0, w1
    1088:	str	w0, [x4]
    108c:	b	f50 <gconv@@Base+0x530>
    1090:	mov	w11, #0x5                   	// #5
    1094:	b	d38 <gconv@@Base+0x318>
    1098:	mov	w15, w11
    109c:	b	db4 <gconv@@Base+0x394>
    10a0:	ldp	x6, x0, [sp, #168]
    10a4:	mov	x4, x20
    10a8:	ldp	x5, x3, [sp, #184]
    10ac:	mov	x1, x21
    10b0:	ldr	x2, [x10]
    10b4:	str	x10, [sp, #104]
    10b8:	str	w7, [sp, #112]
    10bc:	bl	7b0 <__gconv_transliterate@plt>
    10c0:	mov	w11, w0
    10c4:	ldr	w7, [sp, #112]
    10c8:	cmp	w0, #0x6
    10cc:	mov	w15, #0x10ffff              	// #1114111
    10d0:	mov	w18, #0xffff2800            	// #-55296
    10d4:	ldr	x10, [sp, #104]
    10d8:	b.eq	1118 <gconv@@Base+0x6f8>  // b.none
    10dc:	cmp	w0, #0x5
    10e0:	ldp	x1, x19, [sp, #224]
    10e4:	b.ne	d2c <gconv@@Base+0x30c>  // b.any
    10e8:	b	d38 <gconv@@Base+0x318>
    10ec:	mov	x1, x6
    10f0:	mov	w11, #0x6                   	// #6
    10f4:	b	d38 <gconv@@Base+0x318>
    10f8:	ldr	w0, [x21, #20]
    10fc:	cmp	w0, #0x0
    1100:	ccmp	w2, #0x3, #0x0, eq  // eq = none
    1104:	b.ne	c58 <gconv@@Base+0x238>  // b.any
    1108:	orr	w24, w24, #0x4
    110c:	mov	w12, #0x4                   	// #4
    1110:	str	w24, [x21, #16]
    1114:	b	b28 <gconv@@Base+0x108>
    1118:	ldr	x19, [sp, #232]
    111c:	b	fa4 <gconv@@Base+0x584>
    1120:	cmp	w6, #0x4
    1124:	b.hi	1808 <gconv@@Base+0xde8>  // b.pmore
    1128:	mov	w1, w6
    112c:	cbz	w6, 14c8 <gconv@@Base+0xaa8>
    1130:	add	x7, sp, #0xf0
    1134:	add	x4, x19, #0x3
    1138:	mov	x0, #0x1                   	// #1
    113c:	nop
    1140:	add	x8, x7, x0
    1144:	ldrb	w9, [x4, x0]
    1148:	cmp	x0, x1
    114c:	add	x0, x0, #0x1
    1150:	sturb	w9, [x8, #-1]
    1154:	b.ne	1140 <gconv@@Base+0x720>  // b.any
    1158:	mov	x0, #0x4                   	// #4
    115c:	sub	x0, x0, x1
    1160:	add	x0, x2, x0
    1164:	cmp	x20, x0
    1168:	b.cc	1608 <gconv@@Base+0xbe8>  // b.lo, b.ul, b.last
    116c:	add	x11, x23, #0x4
    1170:	cmp	x28, x11
    1174:	b.cc	13f8 <gconv@@Base+0x9d8>  // b.lo, b.ul, b.last
    1178:	mov	x0, x2
    117c:	add	x7, sp, #0xf0
    1180:	add	x1, x1, #0x1
    1184:	ldrb	w4, [x0], #1
    1188:	add	x3, x7, x1
    118c:	cmp	x1, #0x3
    1190:	ccmp	x20, x0, #0x0, ls  // ls = plast
    1194:	sturb	w4, [x3, #-1]
    1198:	b.hi	1180 <gconv@@Base+0x760>  // b.pmore
    119c:	ldr	w0, [sp, #240]
    11a0:	cmp	w12, #0x0
    11a4:	mov	w1, #0x10ffff              	// #1114111
    11a8:	rev	w3, w0
    11ac:	csel	w0, w3, w0, ne  // ne = any
    11b0:	mov	w3, #0xffff2800            	// #-55296
    11b4:	add	w3, w0, w3
    11b8:	cmp	w3, #0x7ff
    11bc:	ccmp	w0, w1, #0x2, hi  // hi = pmore
    11c0:	b.hi	13a0 <gconv@@Base+0x980>  // b.pmore
    11c4:	str	w0, [x23]
    11c8:	mov	x23, x11
    11cc:	ldr	w5, [x19]
    11d0:	and	w6, w5, #0x7
    11d4:	mov	w6, w6
    11d8:	tbnz	w5, #2, 1838 <gconv@@Base+0xe18>
    11dc:	sub	x6, x2, x6
    11e0:	ldr	w24, [x21, #16]
    11e4:	add	x22, x6, #0x4
    11e8:	str	x22, [x10]
    11ec:	and	w5, w5, #0xfffffff8
    11f0:	ldr	x13, [sp, #208]
    11f4:	str	w5, [x19]
    11f8:	b	c68 <gconv@@Base+0x248>
    11fc:	ldr	x2, [sp, #168]
    1200:	add	x1, x1, #0x4
    1204:	mov	w11, #0x6                   	// #6
    1208:	str	x1, [sp, #224]
    120c:	ldr	x0, [x2]
    1210:	add	x0, x0, #0x1
    1214:	str	x0, [x2]
    1218:	b	d2c <gconv@@Base+0x30c>
    121c:	mov	x19, x24
    1220:	mov	x1, x22
    1224:	mov	w11, #0x7                   	// #7
    1228:	b	d38 <gconv@@Base+0x318>
    122c:	mov	x19, x24
    1230:	mov	x1, x22
    1234:	mov	w11, #0x5                   	// #5
    1238:	b	d38 <gconv@@Base+0x318>
    123c:	cbnz	x14, 1848 <gconv@@Base+0xe28>
    1240:	ldr	x0, [x21, #32]
    1244:	mov	w11, #0x0                   	// #0
    1248:	str	xzr, [x0]
    124c:	ldr	w0, [x21, #16]
    1250:	tbnz	w0, #0, f50 <gconv@@Base+0x530>
    1254:	mov	x0, x25
    1258:	str	w6, [sp, #104]
    125c:	bl	800 <_dl_mcount_wrapper_check@plt>
    1260:	ldp	x0, x1, [sp, #144]
    1264:	mov	w7, w26
    1268:	ldr	w6, [sp, #104]
    126c:	mov	x5, x27
    1270:	mov	x4, #0x0                   	// #0
    1274:	mov	x3, #0x0                   	// #0
    1278:	mov	x2, #0x0                   	// #0
    127c:	blr	x25
    1280:	mov	w11, w0
    1284:	b	f50 <gconv@@Base+0x530>
    1288:	mov	x19, x24
    128c:	mov	x1, x20
    1290:	mov	w11, #0x4                   	// #4
    1294:	b	d38 <gconv@@Base+0x318>
    1298:	ldr	w26, [sp, #136]
    129c:	mov	w11, w15
    12a0:	b	1030 <gconv@@Base+0x610>
    12a4:	cmp	x20, x22
    12a8:	b.eq	1378 <gconv@@Base+0x958>  // b.none
    12ac:	add	x22, x22, #0x4
    12b0:	cmp	x20, x22
    12b4:	b.cc	1378 <gconv@@Base+0x958>  // b.lo, b.ul, b.last
    12b8:	add	x2, x24, #0x4
    12bc:	and	w13, w13, #0x2
    12c0:	cmp	x7, x2
    12c4:	mov	x0, x24
    12c8:	mov	x5, #0x4                   	// #4
    12cc:	mov	w6, #0xffff2800            	// #-55296
    12d0:	mov	w4, #0x10ffff              	// #1114111
    12d4:	b.cc	1640 <gconv@@Base+0xc20>  // b.lo, b.ul, b.last
    12d8:	ldur	w1, [x22, #-4]
    12dc:	cmp	w28, #0x0
    12e0:	sub	x11, x22, #0x4
    12e4:	rev	w3, w1
    12e8:	csel	w1, w3, w1, ne  // ne = any
    12ec:	add	w3, w1, w6
    12f0:	cmp	w3, #0x7ff
    12f4:	ccmp	w1, w4, #0x2, hi  // hi = pmore
    12f8:	b.hi	1488 <gconv@@Base+0xa68>  // b.pmore
    12fc:	str	w1, [x0]
    1300:	mov	x0, x2
    1304:	cmp	x22, x20
    1308:	b.eq	1408 <gconv@@Base+0x9e8>  // b.none
    130c:	add	x1, x22, #0x4
    1310:	cmp	x20, x1
    1314:	b.cc	14a8 <gconv@@Base+0xa88>  // b.lo, b.ul, b.last
    1318:	add	x2, x0, #0x4
    131c:	cmp	x7, x2
    1320:	b.cc	14d4 <gconv@@Base+0xab4>  // b.lo, b.ul, b.last
    1324:	mov	x22, x1
    1328:	b	12d8 <gconv@@Base+0x8b8>
    132c:	add	x0, x1, #0x4
    1330:	cmp	x0, x20
    1334:	b.hi	14b4 <gconv@@Base+0xa94>  // b.pmore
    1338:	ldr	w1, [x1]
    133c:	mov	w2, #0xfeff                	// #65279
    1340:	cmp	w1, w2
    1344:	b.eq	1518 <gconv@@Base+0xaf8>  // b.none
    1348:	cmn	w1, #0x20, lsl #12
    134c:	b.ne	c58 <gconv@@Base+0x238>  // b.any
    1350:	orr	w24, w24, #0x4
    1354:	str	w24, [x21, #16]
    1358:	mov	w12, #0x4                   	// #4
    135c:	str	x0, [x10]
    1360:	b	b28 <gconv@@Base+0x108>
    1364:	ldr	x0, [x10]
    1368:	sub	x7, x19, x7
    136c:	sub	x0, x0, x7
    1370:	str	x0, [x10]
    1374:	b	db4 <gconv@@Base+0x394>
    1378:	cmp	x7, x24
    137c:	b.ne	13d8 <gconv@@Base+0x9b8>  // b.any
    1380:	adrp	x3, 1000 <gconv@@Base+0x5e0>
    1384:	adrp	x1, 1000 <gconv@@Base+0x5e0>
    1388:	adrp	x0, 1000 <gconv@@Base+0x5e0>
    138c:	add	x3, x3, #0xa40
    1390:	add	x1, x1, #0x8a8
    1394:	add	x0, x0, #0x9d8
    1398:	mov	w2, #0x2eb                 	// #747
    139c:	bl	810 <__assert_fail@plt>
    13a0:	ldr	x0, [sp, #168]
    13a4:	cbz	x0, 13ac <gconv@@Base+0x98c>
    13a8:	tbnz	w24, #1, 13b4 <gconv@@Base+0x994>
    13ac:	mov	w11, #0x6                   	// #6
    13b0:	b	f50 <gconv@@Base+0x530>
    13b4:	mov	x1, x0
    13b8:	ldr	x0, [x0]
    13bc:	add	x0, x0, #0x1
    13c0:	str	x0, [x1]
    13c4:	b	11d4 <gconv@@Base+0x7b4>
    13c8:	ldp	x1, x2, [sp, #216]
    13cc:	str	x2, [x10]
    13d0:	cmp	x1, x0
    13d4:	b.eq	1380 <gconv@@Base+0x960>  // b.none
    13d8:	adrp	x3, 1000 <gconv@@Base+0x5e0>
    13dc:	adrp	x1, 1000 <gconv@@Base+0x5e0>
    13e0:	adrp	x0, 1000 <gconv@@Base+0x5e0>
    13e4:	add	x3, x3, #0xa40
    13e8:	add	x1, x1, #0x8a8
    13ec:	add	x0, x0, #0x9c0
    13f0:	mov	w2, #0x2ea                 	// #746
    13f4:	bl	810 <__assert_fail@plt>
    13f8:	mov	w11, #0x5                   	// #5
    13fc:	b	f50 <gconv@@Base+0x530>
    1400:	mov	x22, x11
    1404:	mov	x5, #0x6                   	// #6
    1408:	str	x22, [x10]
    140c:	b	e78 <gconv@@Base+0x458>
    1410:	ldp	x1, x2, [sp, #216]
    1414:	str	x2, [x10]
    1418:	cmp	x1, x0
    141c:	b.eq	e88 <gconv@@Base+0x468>  // b.none
    1420:	b	13d8 <gconv@@Base+0x9b8>
    1424:	ldr	x1, [sp, #168]
    1428:	cbz	x1, 13c8 <gconv@@Base+0x9a8>
    142c:	ldr	w1, [x21, #16]
    1430:	tbnz	w1, #3, 1594 <gconv@@Base+0xb74>
    1434:	ldr	x22, [sp, #224]
    1438:	cbnz	w13, 15e8 <gconv@@Base+0xbc8>
    143c:	ldr	x1, [sp, #216]
    1440:	str	x22, [x10]
    1444:	cmp	x1, x0
    1448:	b.eq	1380 <gconv@@Base+0x960>  // b.none
    144c:	b	13d8 <gconv@@Base+0x9b8>
    1450:	mov	x0, #0x4                   	// #4
    1454:	mov	x22, #0x0                   	// #0
    1458:	b	b90 <gconv@@Base+0x170>
    145c:	ldr	x1, [sp, #168]
    1460:	cbz	x1, 13c8 <gconv@@Base+0x9a8>
    1464:	cbz	w13, 13c8 <gconv@@Base+0x9a8>
    1468:	ldr	x2, [sp, #168]
    146c:	mov	x22, x3
    1470:	mov	x5, #0x6                   	// #6
    1474:	str	x3, [sp, #224]
    1478:	ldr	x1, [x2]
    147c:	add	x1, x1, #0x1
    1480:	str	x1, [x2]
    1484:	b	e68 <gconv@@Base+0x448>
    1488:	ldr	x2, [sp, #168]
    148c:	cbz	x2, 1400 <gconv@@Base+0x9e0>
    1490:	cbz	w13, 1400 <gconv@@Base+0x9e0>
    1494:	ldr	x1, [x2]
    1498:	mov	x5, #0x6                   	// #6
    149c:	add	x1, x1, #0x1
    14a0:	str	x1, [x2]
    14a4:	b	1304 <gconv@@Base+0x8e4>
    14a8:	mov	x5, #0x7                   	// #7
    14ac:	str	x22, [x10]
    14b0:	b	e78 <gconv@@Base+0x458>
    14b4:	cmp	x1, x20
    14b8:	mov	w11, #0x4                   	// #4
    14bc:	mov	w0, #0x7                   	// #7
    14c0:	csel	w11, w11, w0, eq  // eq = none
    14c4:	b	f50 <gconv@@Base+0x530>
    14c8:	mov	x0, #0x4                   	// #4
    14cc:	mov	x1, #0x0                   	// #0
    14d0:	b	1160 <gconv@@Base+0x740>
    14d4:	mov	x5, #0x5                   	// #5
    14d8:	str	x22, [x10]
    14dc:	b	e78 <gconv@@Base+0x458>
    14e0:	str	x20, [x10]
    14e4:	cmp	x20, x2
    14e8:	b.ls	1510 <gconv@@Base+0xaf0>  // b.plast
    14ec:	add	x2, x2, #0x1
    14f0:	add	x19, x19, x22
    14f4:	str	x2, [sp, #224]
    14f8:	cmp	x2, x20
    14fc:	add	x19, x19, #0x1
    1500:	add	x2, x2, #0x1
    1504:	ldurb	w0, [x2, #-2]
    1508:	strb	w0, [x19, #3]
    150c:	b.ne	14f4 <gconv@@Base+0xad4>  // b.any
    1510:	mov	w11, #0x7                   	// #7
    1514:	b	f50 <gconv@@Base+0x530>
    1518:	and	w12, w24, #0x4
    151c:	str	x0, [x10]
    1520:	b	b28 <gconv@@Base+0x108>
    1524:	ldr	x0, [sp, #168]
    1528:	cbz	x0, 13ac <gconv@@Base+0x98c>
    152c:	tbnz	w24, #3, 165c <gconv@@Base+0xc3c>
    1530:	mov	x0, x7
    1534:	tbz	w24, #1, 13ac <gconv@@Base+0x98c>
    1538:	ldr	x2, [sp, #168]
    153c:	add	x0, x0, #0x4
    1540:	str	x0, [sp, #224]
    1544:	ldr	x1, [x2]
    1548:	add	x1, x1, #0x1
    154c:	str	x1, [x2]
    1550:	cmp	x0, x7
    1554:	b.eq	13ac <gconv@@Base+0x98c>  // b.none
    1558:	ldr	w5, [x19]
    155c:	sub	x7, x0, x7
    1560:	and	w6, w5, #0x7
    1564:	b	c1c <gconv@@Base+0x1fc>
    1568:	ldr	x0, [sp, #168]
    156c:	cbz	x0, 13ac <gconv@@Base+0x98c>
    1570:	tbz	w24, #1, 13ac <gconv@@Base+0x98c>
    1574:	mov	x1, x0
    1578:	add	x7, x7, #0x4
    157c:	ldr	x0, [x0]
    1580:	str	x7, [sp, #224]
    1584:	mov	x7, #0x4                   	// #4
    1588:	add	x0, x0, #0x1
    158c:	str	x0, [x1]
    1590:	b	c1c <gconv@@Base+0x1fc>
    1594:	ldp	x6, x0, [sp, #168]
    1598:	mov	x4, x20
    159c:	ldp	x5, x3, [sp, #184]
    15a0:	mov	x1, x21
    15a4:	ldr	x2, [x10]
    15a8:	stp	x10, x7, [sp, #104]
    15ac:	stp	w15, w13, [sp, #200]
    15b0:	bl	7b0 <__gconv_transliterate@plt>
    15b4:	sxtw	x5, w0
    15b8:	ldp	w15, w13, [sp, #200]
    15bc:	cmp	w5, #0x6
    15c0:	ldp	x10, x7, [sp, #104]
    15c4:	b.eq	164c <gconv@@Base+0xc2c>  // b.none
    15c8:	cmp	w5, #0x5
    15cc:	ldp	x22, x0, [sp, #224]
    15d0:	b.ne	e68 <gconv@@Base+0x448>  // b.any
    15d4:	ldr	x1, [sp, #216]
    15d8:	str	x22, [x10]
    15dc:	cmp	x1, x0
    15e0:	b.eq	e88 <gconv@@Base+0x468>  // b.none
    15e4:	b	13d8 <gconv@@Base+0x9b8>
    15e8:	ldr	x2, [sp, #168]
    15ec:	add	x22, x22, #0x4
    15f0:	mov	x5, #0x6                   	// #6
    15f4:	str	x22, [sp, #224]
    15f8:	ldr	x1, [x2]
    15fc:	add	x1, x1, #0x1
    1600:	str	x1, [x2]
    1604:	b	e68 <gconv@@Base+0x448>
    1608:	str	x20, [x10]
    160c:	cmp	x20, x2
    1610:	b.ls	1510 <gconv@@Base+0xaf0>  // b.plast
    1614:	add	x1, x1, #0x4
    1618:	sub	x20, x20, x2
    161c:	add	x19, x19, x1
    1620:	mov	x0, #0x0                   	// #0
    1624:	ldrb	w1, [x2, x0]
    1628:	strb	w1, [x19, x0]
    162c:	add	x0, x0, #0x1
    1630:	cmp	x20, x0
    1634:	b.ne	1624 <gconv@@Base+0xc04>  // b.any
    1638:	mov	w11, #0x7                   	// #7
    163c:	b	f50 <gconv@@Base+0x530>
    1640:	cmp	x7, x24
    1644:	b.eq	e90 <gconv@@Base+0x470>  // b.none
    1648:	b	13d8 <gconv@@Base+0x9b8>
    164c:	ldr	x0, [sp, #232]
    1650:	b	1434 <gconv@@Base+0xa14>
    1654:	mov	w1, #0x0                   	// #0
    1658:	b	107c <gconv@@Base+0x65c>
    165c:	ldp	x6, x0, [sp, #168]
    1660:	add	x5, sp, #0xe8
    1664:	add	x3, sp, #0xe0
    1668:	mov	x1, x21
    166c:	str	x4, [sp, #104]
    1670:	str	w15, [sp, #112]
    1674:	str	w12, [sp, #120]
    1678:	stp	x10, x14, [sp, #128]
    167c:	str	x7, [sp, #160]
    1680:	bl	7b0 <__gconv_transliterate@plt>
    1684:	ldr	w15, [sp, #112]
    1688:	mov	w11, w0
    168c:	cmp	w0, #0x6
    1690:	ldr	w12, [sp, #120]
    1694:	ldp	x10, x14, [sp, #128]
    1698:	ldr	x7, [sp, #160]
    169c:	ldr	x0, [sp, #224]
    16a0:	b.eq	173c <gconv@@Base+0xd1c>  // b.none
    16a4:	cmp	x0, x7
    16a8:	ldr	x4, [sp, #104]
    16ac:	b.ne	1558 <gconv@@Base+0xb38>  // b.any
    16b0:	cmp	w11, #0x7
    16b4:	b.ne	1728 <gconv@@Base+0xd08>  // b.any
    16b8:	add	x0, x7, #0x4
    16bc:	cmp	x4, x0
    16c0:	b.eq	1784 <gconv@@Base+0xd64>  // b.none
    16c4:	ldr	w0, [x19]
    16c8:	ldr	x1, [x10]
    16cc:	and	x2, x0, #0x7
    16d0:	sub	x2, x22, x2
    16d4:	and	w0, w0, #0xfffffff8
    16d8:	add	x1, x1, x2
    16dc:	str	x1, [x10]
    16e0:	cmp	x22, w0, sxtw
    16e4:	b.le	1764 <gconv@@Base+0xd44>
    16e8:	cmp	x22, #0x4
    16ec:	b.hi	1744 <gconv@@Base+0xd24>  // b.pmore
    16f0:	orr	w0, w0, w22
    16f4:	str	w0, [x19]
    16f8:	cmp	x4, x7
    16fc:	b.ls	1510 <gconv@@Base+0xaf0>  // b.plast
    1700:	add	x7, x7, #0x1
    1704:	add	x19, x19, #0x4
    1708:	str	x7, [sp, #224]
    170c:	cmp	x4, x7
    1710:	add	x7, x7, #0x1
    1714:	ldurb	w0, [x7, #-2]
    1718:	strb	w0, [x19], #1
    171c:	b.ne	1708 <gconv@@Base+0xce8>  // b.any
    1720:	mov	w11, #0x7                   	// #7
    1724:	b	f50 <gconv@@Base+0x530>
    1728:	cbnz	w11, f50 <gconv@@Base+0x530>
    172c:	ldr	w24, [x21, #16]
    1730:	ldr	x22, [x10]
    1734:	ldr	x13, [sp, #208]
    1738:	b	c68 <gconv@@Base+0x248>
    173c:	tbz	w24, #1, 1550 <gconv@@Base+0xb30>
    1740:	b	1538 <gconv@@Base+0xb18>
    1744:	adrp	x3, 1000 <gconv@@Base+0x5e0>
    1748:	adrp	x1, 1000 <gconv@@Base+0x5e0>
    174c:	adrp	x0, 1000 <gconv@@Base+0x5e0>
    1750:	add	x3, x3, #0xa10
    1754:	add	x1, x1, #0x8d8
    1758:	add	x0, x0, #0x990
    175c:	mov	w2, #0x1e6                 	// #486
    1760:	bl	810 <__assert_fail@plt>
    1764:	adrp	x3, 1000 <gconv@@Base+0x5e0>
    1768:	adrp	x1, 1000 <gconv@@Base+0x5e0>
    176c:	adrp	x0, 1000 <gconv@@Base+0x5e0>
    1770:	add	x3, x3, #0xa10
    1774:	add	x1, x1, #0x8d8
    1778:	add	x0, x0, #0x968
    177c:	mov	w2, #0x1e5                 	// #485
    1780:	bl	810 <__assert_fail@plt>
    1784:	adrp	x3, 1000 <gconv@@Base+0x5e0>
    1788:	adrp	x1, 1000 <gconv@@Base+0x5e0>
    178c:	adrp	x0, 1000 <gconv@@Base+0x5e0>
    1790:	add	x3, x3, #0xa10
    1794:	add	x1, x1, #0x8d8
    1798:	add	x0, x0, #0x940
    179c:	mov	w2, #0x1db                 	// #475
    17a0:	bl	810 <__assert_fail@plt>
    17a4:	adrp	x3, 1000 <gconv@@Base+0x5e0>
    17a8:	adrp	x1, 1000 <gconv@@Base+0x5e0>
    17ac:	adrp	x0, 1000 <gconv@@Base+0x5e0>
    17b0:	add	x3, x3, #0xa40
    17b4:	add	x1, x1, #0x8a8
    17b8:	add	x0, x0, #0x9f8
    17bc:	mov	w2, #0x31e                 	// #798
    17c0:	bl	810 <__assert_fail@plt>
    17c4:	adrp	x3, 1000 <gconv@@Base+0x5e0>
    17c8:	add	x3, x3, #0xa10
    17cc:	adrp	x1, 1000 <gconv@@Base+0x5e0>
    17d0:	adrp	x0, 1000 <gconv@@Base+0x5e0>
    17d4:	add	x1, x1, #0x8d8
    17d8:	add	x0, x0, #0x8e8
    17dc:	mov	w2, #0x18b                 	// #395
    17e0:	bl	810 <__assert_fail@plt>
    17e4:	adrp	x3, 1000 <gconv@@Base+0x5e0>
    17e8:	adrp	x1, 1000 <gconv@@Base+0x5e0>
    17ec:	adrp	x0, 1000 <gconv@@Base+0x5e0>
    17f0:	add	x3, x3, #0xa40
    17f4:	add	x1, x1, #0x8a8
    17f8:	add	x0, x0, #0x8c0
    17fc:	mov	w2, #0x234                 	// #564
    1800:	bl	810 <__assert_fail@plt>
    1804:	bl	7c0 <__stack_chk_fail@plt>
    1808:	adrp	x3, 1000 <gconv@@Base+0x5e0>
    180c:	adrp	x1, 1000 <gconv@@Base+0x5e0>
    1810:	add	x3, x3, #0xa28
    1814:	b	17d0 <gconv@@Base+0xdb0>
    1818:	adrp	x3, 1000 <gconv@@Base+0x5e0>
    181c:	add	x3, x3, #0xa10
    1820:	adrp	x1, 1000 <gconv@@Base+0x5e0>
    1824:	adrp	x0, 1000 <gconv@@Base+0x5e0>
    1828:	add	x1, x1, #0x8d8
    182c:	add	x0, x0, #0x918
    1830:	mov	w2, #0x1c9                 	// #457
    1834:	bl	810 <__assert_fail@plt>
    1838:	adrp	x3, 1000 <gconv@@Base+0x5e0>
    183c:	adrp	x1, 1000 <gconv@@Base+0x5e0>
    1840:	add	x3, x3, #0xa28
    1844:	b	1824 <gconv@@Base+0xe04>
    1848:	adrp	x3, 1000 <gconv@@Base+0x5e0>
    184c:	adrp	x1, 1000 <gconv@@Base+0x5e0>
    1850:	adrp	x0, 1000 <gconv@@Base+0x5e0>
    1854:	add	x3, x3, #0xa40
    1858:	add	x1, x1, #0x8a8
    185c:	add	x0, x0, #0x8c0
    1860:	mov	w2, #0x1a4                 	// #420
    1864:	bl	810 <__assert_fail@plt>

Disassembly of section .fini:

0000000000001868 <.fini>:
    1868:	stp	x29, x30, [sp, #-16]!
    186c:	mov	x29, sp
    1870:	ldp	x29, x30, [sp], #16
    1874:	ret
