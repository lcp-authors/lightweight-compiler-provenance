
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//minix.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xf70>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x1, [sp, #24]
  10:	adrp	x0, 0 <grub_mod_init-0xf70>
  14:	add	x0, x0, #0x0
  18:	ldr	x0, [x0]
  1c:	bl	0 <grub_list_push>
  20:	nop
  24:	ldp	x29, x30, [sp], #32
  28:	ret
  2c:	nop
	...
  38:	stp	x29, x30, [sp, #-32]!
  3c:	mov	x29, sp
  40:	str	x0, [sp, #24]
  44:	ldr	x0, [sp, #24]
  48:	bl	0 <grub_list_remove>
  4c:	nop
  50:	ldp	x29, x30, [sp], #32
  54:	ret
  58:	sub	sp, sp, #0x20
  5c:	str	x0, [sp, #8]
  60:	strh	w1, [sp, #6]
  64:	ldr	x0, [sp, #8]
  68:	ldrh	w0, [x0, #10]
  6c:	add	w0, w0, #0x1
  70:	str	w0, [sp, #28]
  74:	ldrh	w1, [sp, #6]
  78:	ldr	w0, [sp, #28]
  7c:	lsl	x0, x1, x0
  80:	add	sp, sp, #0x20
  84:	ret
  88:	stp	x29, x30, [sp, #-64]!
  8c:	mov	x29, sp
  90:	str	x19, [sp, #16]
  94:	str	x0, [sp, #40]
  98:	strh	w1, [sp, #38]
  9c:	strh	w2, [sp, #36]
  a0:	ldr	x0, [sp, #40]
  a4:	ldr	x19, [x0, #64]
  a8:	ldrh	w1, [sp, #38]
  ac:	ldr	x0, [sp, #40]
  b0:	bl	58 <grub_mod_init-0xf18>
  b4:	mov	x5, x0
  b8:	ldrh	w0, [sp, #36]
  bc:	lsl	x0, x0, #1
  c0:	add	x1, sp, #0x3e
  c4:	mov	x4, x1
  c8:	mov	x3, #0x2                   	// #2
  cc:	mov	x2, x0
  d0:	mov	x1, x5
  d4:	mov	x0, x19
  d8:	bl	0 <grub_disk_read>
  dc:	ldrh	w0, [sp, #62]
  e0:	ldr	x19, [sp, #16]
  e4:	ldp	x29, x30, [sp], #64
  e8:	ret
  ec:	stp	x29, x30, [sp, #-48]!
  f0:	mov	x29, sp
  f4:	str	x0, [sp, #24]
  f8:	str	w1, [sp, #20]
  fc:	ldr	w0, [sp, #20]
 100:	cmp	w0, #0x6
 104:	b.hi	124 <grub_mod_init-0xe4c>  // b.pmore
 108:	ldr	x1, [sp, #24]
 10c:	ldr	w0, [sp, #20]
 110:	add	x0, x0, #0x8
 114:	lsl	x0, x0, #1
 118:	add	x0, x1, x0
 11c:	ldrh	w0, [x0, #18]
 120:	b	22c <grub_mod_init-0xd44>
 124:	ldr	w0, [sp, #20]
 128:	sub	w0, w0, #0x7
 12c:	str	w0, [sp, #20]
 130:	ldr	x0, [sp, #24]
 134:	ldr	w0, [x0, #52]
 138:	ldr	w1, [sp, #20]
 13c:	cmp	w1, w0
 140:	b.cs	170 <grub_mod_init-0xe00>  // b.hs, b.nlast
 144:	ldr	x0, [sp, #24]
 148:	ldrh	w0, [x0, #48]
 14c:	ldr	w1, [sp, #20]
 150:	and	w1, w1, #0xffff
 154:	mov	w2, w1
 158:	mov	w1, w0
 15c:	ldr	x0, [sp, #24]
 160:	bl	88 <grub_mod_init-0xee8>
 164:	strh	w0, [sp, #46]
 168:	ldrh	w0, [sp, #46]
 16c:	b	22c <grub_mod_init-0xd44>
 170:	ldr	x0, [sp, #24]
 174:	ldr	w0, [x0, #52]
 178:	ldr	w1, [sp, #20]
 17c:	sub	w0, w1, w0
 180:	str	w0, [sp, #20]
 184:	ldr	w1, [sp, #20]
 188:	ldr	x0, [sp, #24]
 18c:	ldr	w0, [x0, #52]
 190:	mov	w2, w0
 194:	ldr	x0, [sp, #24]
 198:	ldr	w0, [x0, #52]
 19c:	mov	w0, w0
 1a0:	mul	x0, x2, x0
 1a4:	cmp	x1, x0
 1a8:	b.cs	214 <grub_mod_init-0xd5c>  // b.hs, b.nlast
 1ac:	ldr	x0, [sp, #24]
 1b0:	ldrh	w3, [x0, #50]
 1b4:	ldr	x0, [sp, #24]
 1b8:	ldr	w0, [x0, #52]
 1bc:	ldr	w1, [sp, #20]
 1c0:	udiv	w0, w1, w0
 1c4:	and	w0, w0, #0xffff
 1c8:	mov	w2, w0
 1cc:	mov	w1, w3
 1d0:	ldr	x0, [sp, #24]
 1d4:	bl	88 <grub_mod_init-0xee8>
 1d8:	strh	w0, [sp, #46]
 1dc:	ldr	x0, [sp, #24]
 1e0:	ldr	w1, [x0, #52]
 1e4:	ldr	w0, [sp, #20]
 1e8:	udiv	w2, w0, w1
 1ec:	mul	w1, w2, w1
 1f0:	sub	w0, w0, w1
 1f4:	and	w0, w0, #0xffff
 1f8:	mov	w2, w0
 1fc:	ldrh	w1, [sp, #46]
 200:	ldr	x0, [sp, #24]
 204:	bl	88 <grub_mod_init-0xee8>
 208:	strh	w0, [sp, #46]
 20c:	ldrh	w0, [sp, #46]
 210:	b	22c <grub_mod_init-0xd44>
 214:	adrp	x0, 0 <grub_mod_init-0xf70>
 218:	add	x0, x0, #0x0
 21c:	ldr	x1, [x0]
 220:	mov	w0, #0xb                   	// #11
 224:	bl	0 <grub_error>
 228:	mov	w0, #0x0                   	// #0
 22c:	ldp	x29, x30, [sp], #48
 230:	ret
 234:	nop
	...
 240:	stp	x29, x30, [sp, #-128]!
 244:	mov	x29, sp
 248:	str	x19, [sp, #16]
 24c:	str	x0, [sp, #72]
 250:	str	x1, [sp, #64]
 254:	str	x2, [sp, #56]
 258:	str	x3, [sp, #48]
 25c:	str	x4, [sp, #40]
 260:	str	x5, [sp, #32]
 264:	ldr	x0, [sp, #72]
 268:	ldr	w0, [x0, #24]
 26c:	mov	w0, w0
 270:	ldr	x1, [sp, #48]
 274:	cmp	x1, x0
 278:	b.ls	298 <grub_mod_init-0xcd8>  // b.plast
 27c:	adrp	x0, 0 <grub_mod_init-0xf70>
 280:	add	x0, x0, #0x0
 284:	ldr	x1, [x0]
 288:	mov	w0, #0xb                   	// #11
 28c:	bl	0 <grub_error>
 290:	mov	x0, #0xffffffffffffffff    	// #-1
 294:	b	4e0 <grub_mod_init-0xa90>
 298:	ldr	x1, [sp, #40]
 29c:	ldr	x0, [sp, #48]
 2a0:	add	x1, x1, x0
 2a4:	ldr	x0, [sp, #72]
 2a8:	ldr	w0, [x0, #24]
 2ac:	mov	w0, w0
 2b0:	cmp	x1, x0
 2b4:	b.ls	2d0 <grub_mod_init-0xca0>  // b.plast
 2b8:	ldr	x0, [sp, #72]
 2bc:	ldr	w0, [x0, #24]
 2c0:	mov	w1, w0
 2c4:	ldr	x0, [sp, #48]
 2c8:	sub	x0, x1, x0
 2cc:	str	x0, [sp, #40]
 2d0:	ldr	x0, [sp, #40]
 2d4:	cmp	x0, #0x0
 2d8:	b.ne	2e4 <grub_mod_init-0xc8c>  // b.any
 2dc:	mov	x0, #0x0                   	// #0
 2e0:	b	4e0 <grub_mod_init-0xa90>
 2e4:	ldr	x1, [sp, #40]
 2e8:	ldr	x0, [sp, #48]
 2ec:	add	x0, x1, x0
 2f0:	sub	x0, x0, #0x1
 2f4:	lsr	x0, x0, #9
 2f8:	mov	w1, w0
 2fc:	ldr	x0, [sp, #72]
 300:	ldr	x0, [x0, #80]
 304:	udiv	x0, x1, x0
 308:	add	w0, w0, #0x1
 30c:	str	w0, [sp, #100]
 310:	ldr	x0, [sp, #48]
 314:	mov	w1, w0
 318:	ldr	x0, [sp, #72]
 31c:	ldr	x0, [x0, #80]
 320:	lsl	x0, x0, #9
 324:	udiv	x0, x1, x0
 328:	str	w0, [sp, #96]
 32c:	ldr	x0, [sp, #48]
 330:	mov	w0, w0
 334:	ldr	x1, [sp, #72]
 338:	ldr	x1, [x1, #80]
 33c:	lsl	x1, x1, #9
 340:	udiv	x2, x0, x1
 344:	mul	x1, x2, x1
 348:	sub	x0, x0, x1
 34c:	str	w0, [sp, #92]
 350:	ldr	w0, [sp, #96]
 354:	str	w0, [sp, #124]
 358:	b	4cc <grub_mod_init-0xaa4>
 35c:	ldr	x0, [sp, #72]
 360:	ldr	x0, [x0, #80]
 364:	lsl	x0, x0, #9
 368:	str	x0, [sp, #112]
 36c:	str	xzr, [sp, #104]
 370:	ldr	w1, [sp, #124]
 374:	ldr	x0, [sp, #72]
 378:	bl	ec <grub_mod_init-0xe84>
 37c:	strh	w0, [sp, #90]
 380:	adrp	x0, 0 <grub_mod_init-0xf70>
 384:	add	x0, x0, #0x0
 388:	ldr	x0, [x0]
 38c:	ldr	w0, [x0]
 390:	cmp	w0, #0x0
 394:	b.eq	3a0 <grub_mod_init-0xbd0>  // b.none
 398:	mov	x0, #0xffffffffffffffff    	// #-1
 39c:	b	4e0 <grub_mod_init-0xa90>
 3a0:	ldr	w0, [sp, #100]
 3a4:	sub	w0, w0, #0x1
 3a8:	ldr	w1, [sp, #124]
 3ac:	cmp	w1, w0
 3b0:	b.ne	400 <grub_mod_init-0xb70>  // b.any
 3b4:	ldr	x0, [sp, #40]
 3b8:	mov	w1, w0
 3bc:	ldr	x0, [sp, #48]
 3c0:	add	w0, w1, w0
 3c4:	mov	w0, w0
 3c8:	ldr	x1, [sp, #72]
 3cc:	ldr	x1, [x1, #80]
 3d0:	lsl	x1, x1, #9
 3d4:	udiv	x2, x0, x1
 3d8:	mul	x1, x2, x1
 3dc:	sub	x0, x0, x1
 3e0:	str	x0, [sp, #112]
 3e4:	ldr	x0, [sp, #112]
 3e8:	cmp	x0, #0x0
 3ec:	b.ne	400 <grub_mod_init-0xb70>  // b.any
 3f0:	ldr	x0, [sp, #72]
 3f4:	ldr	x0, [x0, #80]
 3f8:	lsl	x0, x0, #9
 3fc:	str	x0, [sp, #112]
 400:	ldr	w1, [sp, #124]
 404:	ldr	w0, [sp, #96]
 408:	cmp	w1, w0
 40c:	b.ne	428 <grub_mod_init-0xb48>  // b.any
 410:	ldr	w0, [sp, #92]
 414:	str	x0, [sp, #104]
 418:	ldr	x1, [sp, #112]
 41c:	ldr	x0, [sp, #104]
 420:	sub	x0, x1, x0
 424:	str	x0, [sp, #112]
 428:	ldr	x0, [sp, #72]
 42c:	ldr	x0, [x0, #64]
 430:	ldr	x1, [sp, #64]
 434:	str	x1, [x0, #48]
 438:	ldr	x0, [sp, #72]
 43c:	ldr	x0, [x0, #64]
 440:	ldr	x1, [sp, #56]
 444:	str	x1, [x0, #56]
 448:	ldr	x0, [sp, #72]
 44c:	ldr	x19, [x0, #64]
 450:	ldrh	w1, [sp, #90]
 454:	ldr	x0, [sp, #72]
 458:	bl	58 <grub_mod_init-0xf18>
 45c:	ldr	x4, [sp, #32]
 460:	ldr	x3, [sp, #112]
 464:	ldr	x2, [sp, #104]
 468:	mov	x1, x0
 46c:	mov	x0, x19
 470:	bl	0 <grub_disk_read>
 474:	ldr	x0, [sp, #72]
 478:	ldr	x0, [x0, #64]
 47c:	str	xzr, [x0, #48]
 480:	adrp	x0, 0 <grub_mod_init-0xf70>
 484:	add	x0, x0, #0x0
 488:	ldr	x0, [x0]
 48c:	ldr	w0, [x0]
 490:	cmp	w0, #0x0
 494:	b.eq	4a0 <grub_mod_init-0xad0>  // b.none
 498:	mov	x0, #0xffffffffffffffff    	// #-1
 49c:	b	4e0 <grub_mod_init-0xa90>
 4a0:	ldr	x0, [sp, #72]
 4a4:	ldr	x0, [x0, #80]
 4a8:	lsl	x1, x0, #9
 4ac:	ldr	x0, [sp, #104]
 4b0:	sub	x0, x1, x0
 4b4:	ldr	x1, [sp, #32]
 4b8:	add	x0, x1, x0
 4bc:	str	x0, [sp, #32]
 4c0:	ldr	w0, [sp, #124]
 4c4:	add	w0, w0, #0x1
 4c8:	str	w0, [sp, #124]
 4cc:	ldr	w1, [sp, #124]
 4d0:	ldr	w0, [sp, #100]
 4d4:	cmp	w1, w0
 4d8:	b.cc	35c <grub_mod_init-0xc14>  // b.lo, b.ul, b.last
 4dc:	ldr	x0, [sp, #40]
 4e0:	ldr	x19, [sp, #16]
 4e4:	ldp	x29, x30, [sp], #128
 4e8:	ret
 4ec:	nop
	...
 500:	stp	x29, x30, [sp, #-64]!
 504:	mov	x29, sp
 508:	str	x0, [sp, #24]
 50c:	strh	w1, [sp, #22]
 510:	ldr	x0, [sp, #24]
 514:	str	x0, [sp, #56]
 518:	ldr	x0, [sp, #24]
 51c:	ldrh	w1, [sp, #22]
 520:	strh	w1, [x0, #56]
 524:	ldrh	w0, [sp, #22]
 528:	sub	w0, w0, #0x1
 52c:	strh	w0, [sp, #22]
 530:	ldr	x0, [sp, #56]
 534:	ldrh	w1, [x0, #4]
 538:	ldr	x0, [sp, #56]
 53c:	ldrh	w0, [x0, #6]
 540:	add	w0, w1, w0
 544:	and	w0, w0, #0xffff
 548:	add	w0, w0, #0x2
 54c:	and	w0, w0, #0xffff
 550:	mov	w1, w0
 554:	ldr	x0, [sp, #24]
 558:	bl	58 <grub_mod_init-0xf18>
 55c:	str	x0, [sp, #48]
 560:	ldrh	w0, [sp, #22]
 564:	lsr	w0, w0, #4
 568:	and	w0, w0, #0xffff
 56c:	and	x0, x0, #0xffff
 570:	ldr	x1, [sp, #48]
 574:	add	x0, x1, x0
 578:	str	x0, [sp, #48]
 57c:	ldrh	w0, [sp, #22]
 580:	and	w0, w0, #0xf
 584:	lsl	w0, w0, #5
 588:	str	w0, [sp, #44]
 58c:	ldr	x0, [sp, #24]
 590:	ldr	x5, [x0, #64]
 594:	ldrsw	x1, [sp, #44]
 598:	ldr	x0, [sp, #24]
 59c:	add	x0, x0, #0x14
 5a0:	mov	x4, x0
 5a4:	mov	x3, #0x20                  	// #32
 5a8:	mov	x2, x1
 5ac:	ldr	x1, [sp, #48]
 5b0:	mov	x0, x5
 5b4:	bl	0 <grub_disk_read>
 5b8:	mov	w0, #0x0                   	// #0
 5bc:	ldp	x29, x30, [sp], #64
 5c0:	ret
 5c4:	stp	x29, x30, [sp, #-48]!
 5c8:	mov	x29, sp
 5cc:	str	x0, [sp, #24]
 5d0:	strh	w1, [sp, #22]
 5d4:	ldr	x0, [sp, #24]
 5d8:	ldr	w0, [x0, #24]
 5dc:	mov	w0, w0
 5e0:	str	x0, [sp, #40]
 5e4:	ldr	x0, [sp, #24]
 5e8:	ldr	w0, [x0, #60]
 5ec:	add	w1, w0, #0x1
 5f0:	ldr	x0, [sp, #24]
 5f4:	str	w1, [x0, #60]
 5f8:	ldr	x0, [sp, #24]
 5fc:	ldr	w0, [x0, #60]
 600:	cmp	w0, #0x8
 604:	b.le	620 <grub_mod_init-0x950>
 608:	adrp	x0, 0 <grub_mod_init-0xf70>
 60c:	add	x0, x0, #0x0
 610:	ldr	x1, [x0]
 614:	mov	w0, #0x19                  	// #25
 618:	bl	0 <grub_error>
 61c:	b	6f4 <grub_mod_init-0x87c>
 620:	ldr	x0, [sp, #40]
 624:	add	x0, x0, #0x1
 628:	bl	0 <grub_malloc>
 62c:	str	x0, [sp, #32]
 630:	ldr	x0, [sp, #32]
 634:	cmp	x0, #0x0
 638:	b.ne	650 <grub_mod_init-0x920>  // b.any
 63c:	adrp	x0, 0 <grub_mod_init-0xf70>
 640:	add	x0, x0, #0x0
 644:	ldr	x0, [x0]
 648:	ldr	w0, [x0]
 64c:	b	6f4 <grub_mod_init-0x87c>
 650:	ldr	x5, [sp, #32]
 654:	ldr	x4, [sp, #40]
 658:	mov	x3, #0x0                   	// #0
 65c:	mov	x2, #0x0                   	// #0
 660:	mov	x1, #0x0                   	// #0
 664:	ldr	x0, [sp, #24]
 668:	bl	240 <grub_mod_init-0xd30>
 66c:	cmp	x0, #0x0
 670:	b.ge	688 <grub_mod_init-0x8e8>  // b.tcont
 674:	adrp	x0, 0 <grub_mod_init-0xf70>
 678:	add	x0, x0, #0x0
 67c:	ldr	x0, [x0]
 680:	ldr	w0, [x0]
 684:	b	6f4 <grub_mod_init-0x87c>
 688:	ldr	x1, [sp, #32]
 68c:	ldr	x0, [sp, #40]
 690:	add	x0, x1, x0
 694:	strb	wzr, [x0]
 698:	ldr	x0, [sp, #32]
 69c:	ldrb	w0, [x0]
 6a0:	cmp	w0, #0x2f
 6a4:	b.ne	6b0 <grub_mod_init-0x8c0>  // b.any
 6a8:	mov	w0, #0x1                   	// #1
 6ac:	strh	w0, [sp, #22]
 6b0:	ldrh	w1, [sp, #22]
 6b4:	ldr	x0, [sp, #24]
 6b8:	bl	500 <grub_mod_init-0xa70>
 6bc:	cmp	w0, #0x0
 6c0:	b.eq	6d8 <grub_mod_init-0x898>  // b.none
 6c4:	adrp	x0, 0 <grub_mod_init-0xf70>
 6c8:	add	x0, x0, #0x0
 6cc:	ldr	x0, [x0]
 6d0:	ldr	w0, [x0]
 6d4:	b	6f4 <grub_mod_init-0x87c>
 6d8:	ldr	x1, [sp, #32]
 6dc:	ldr	x0, [sp, #24]
 6e0:	bl	710 <grub_mod_init-0x860>
 6e4:	adrp	x0, 0 <grub_mod_init-0xf70>
 6e8:	add	x0, x0, #0x0
 6ec:	ldr	x0, [x0]
 6f0:	ldr	w0, [x0]
 6f4:	ldp	x29, x30, [sp], #48
 6f8:	ret
 6fc:	nop
	...
 710:	stp	x29, x30, [sp, #-96]!
 714:	mov	x29, sp
 718:	str	x0, [sp, #24]
 71c:	str	x1, [sp, #16]
 720:	ldr	x0, [sp, #16]
 724:	str	x0, [sp, #80]
 728:	str	wzr, [sp, #76]
 72c:	ldr	x0, [sp, #80]
 730:	str	x0, [sp, #88]
 734:	b	744 <grub_mod_init-0x82c>
 738:	ldr	x0, [sp, #88]
 73c:	add	x0, x0, #0x1
 740:	str	x0, [sp, #88]
 744:	ldr	x0, [sp, #88]
 748:	ldrb	w0, [x0]
 74c:	cmp	w0, #0x2f
 750:	b.eq	738 <grub_mod_init-0x838>  // b.none
 754:	ldr	x0, [sp, #88]
 758:	ldrb	w0, [x0]
 75c:	cmp	w0, #0x0
 760:	b.ne	76c <grub_mod_init-0x804>  // b.any
 764:	mov	w0, #0x0                   	// #0
 768:	b	988 <grub_mod_init-0x5e8>
 76c:	ldr	x0, [sp, #24]
 770:	ldrh	w0, [x0, #20]
 774:	and	w0, w0, #0x4000
 778:	cmp	w0, #0x0
 77c:	b.ne	798 <grub_mod_init-0x7d8>  // b.any
 780:	adrp	x0, 0 <grub_mod_init-0xf70>
 784:	add	x0, x0, #0x0
 788:	ldr	x1, [x0]
 78c:	mov	w0, #0x4                   	// #4
 790:	bl	0 <grub_error>
 794:	b	988 <grub_mod_init-0x5e8>
 798:	ldr	x0, [sp, #88]
 79c:	str	x0, [sp, #80]
 7a0:	b	7b0 <grub_mod_init-0x7c0>
 7a4:	ldr	x0, [sp, #80]
 7a8:	add	x0, x0, #0x1
 7ac:	str	x0, [sp, #80]
 7b0:	ldr	x0, [sp, #80]
 7b4:	ldrb	w0, [x0]
 7b8:	cmp	w0, #0x0
 7bc:	b.eq	7d0 <grub_mod_init-0x7a0>  // b.none
 7c0:	ldr	x0, [sp, #80]
 7c4:	ldrb	w0, [x0]
 7c8:	cmp	w0, #0x2f
 7cc:	b.ne	7a4 <grub_mod_init-0x7cc>  // b.any
 7d0:	str	wzr, [sp, #76]
 7d4:	ldr	x0, [sp, #24]
 7d8:	ldr	w0, [x0, #24]
 7dc:	ldr	w1, [sp, #76]
 7e0:	cmp	w1, w0
 7e4:	b.cc	814 <grub_mod_init-0x75c>  // b.lo, b.ul, b.last
 7e8:	ldr	x2, [sp, #16]
 7ec:	adrp	x0, 0 <grub_mod_init-0xf70>
 7f0:	add	x0, x0, #0x0
 7f4:	ldr	x1, [x0]
 7f8:	mov	w0, #0x5                   	// #5
 7fc:	bl	0 <grub_error>
 800:	adrp	x0, 0 <grub_mod_init-0xf70>
 804:	add	x0, x0, #0x0
 808:	ldr	x0, [x0]
 80c:	ldr	w0, [x0]
 810:	b	988 <grub_mod_init-0x5e8>
 814:	ldr	w0, [sp, #76]
 818:	add	x1, sp, #0x48
 81c:	mov	x5, x1
 820:	mov	x4, #0x2                   	// #2
 824:	mov	x3, x0
 828:	mov	x2, #0x0                   	// #0
 82c:	mov	x1, #0x0                   	// #0
 830:	ldr	x0, [sp, #24]
 834:	bl	240 <grub_mod_init-0xd30>
 838:	cmp	x0, #0x0
 83c:	b.ge	854 <grub_mod_init-0x71c>  // b.tcont
 840:	adrp	x0, 0 <grub_mod_init-0xf70>
 844:	add	x0, x0, #0x0
 848:	ldr	x0, [x0]
 84c:	ldr	w0, [x0]
 850:	b	988 <grub_mod_init-0x5e8>
 854:	ldr	w0, [sp, #76]
 858:	add	x1, x0, #0x2
 85c:	ldr	x0, [sp, #24]
 860:	ldr	w0, [x0, #72]
 864:	sxtw	x0, w0
 868:	add	x2, sp, #0x28
 86c:	mov	x5, x2
 870:	mov	x4, x0
 874:	mov	x3, x1
 878:	mov	x2, #0x0                   	// #0
 87c:	mov	x1, #0x0                   	// #0
 880:	ldr	x0, [sp, #24]
 884:	bl	240 <grub_mod_init-0xd30>
 888:	cmp	x0, #0x0
 88c:	b.ge	8a4 <grub_mod_init-0x6cc>  // b.tcont
 890:	adrp	x0, 0 <grub_mod_init-0xf70>
 894:	add	x0, x0, #0x0
 898:	ldr	x0, [x0]
 89c:	ldr	w0, [x0]
 8a0:	b	988 <grub_mod_init-0x5e8>
 8a4:	ldr	x0, [sp, #24]
 8a8:	ldr	w0, [x0, #72]
 8ac:	mov	w1, w0
 8b0:	ldr	w0, [sp, #76]
 8b4:	add	w0, w1, w0
 8b8:	add	w0, w0, #0x2
 8bc:	str	w0, [sp, #76]
 8c0:	ldr	x0, [sp, #24]
 8c4:	ldr	w0, [x0, #72]
 8c8:	sxtw	x0, w0
 8cc:	add	x1, sp, #0x28
 8d0:	strb	wzr, [x1, x0]
 8d4:	ldr	x1, [sp, #80]
 8d8:	ldr	x0, [sp, #88]
 8dc:	sub	x0, x1, x0
 8e0:	mov	x1, x0
 8e4:	add	x0, sp, #0x28
 8e8:	mov	x2, x1
 8ec:	mov	x1, x0
 8f0:	ldr	x0, [sp, #88]
 8f4:	bl	0 <grub_strncmp>
 8f8:	cmp	w0, #0x0
 8fc:	b.ne	7d4 <grub_mod_init-0x79c>  // b.any
 900:	ldr	x1, [sp, #80]
 904:	ldr	x0, [sp, #88]
 908:	sub	x0, x1, x0
 90c:	add	x1, sp, #0x28
 910:	ldrb	w0, [x1, x0]
 914:	cmp	w0, #0x0
 918:	b.ne	7d4 <grub_mod_init-0x79c>  // b.any
 91c:	ldr	x0, [sp, #24]
 920:	ldrh	w0, [x0, #56]
 924:	strh	w0, [sp, #74]
 928:	ldrh	w0, [sp, #72]
 92c:	mov	w1, w0
 930:	ldr	x0, [sp, #24]
 934:	bl	500 <grub_mod_init-0xa70>
 938:	ldr	x0, [sp, #24]
 93c:	ldrh	w0, [x0, #20]
 940:	mov	w1, w0
 944:	mov	w0, #0xa000                	// #40960
 948:	and	w0, w1, w0
 94c:	cmp	w0, #0xa, lsl #12
 950:	b.ne	72c <grub_mod_init-0x844>  // b.any
 954:	ldrh	w1, [sp, #74]
 958:	ldr	x0, [sp, #24]
 95c:	bl	5c4 <grub_mod_init-0x9ac>
 960:	adrp	x0, 0 <grub_mod_init-0xf70>
 964:	add	x0, x0, #0x0
 968:	ldr	x0, [x0]
 96c:	ldr	w0, [x0]
 970:	cmp	w0, #0x0
 974:	b.eq	72c <grub_mod_init-0x844>  // b.none
 978:	adrp	x0, 0 <grub_mod_init-0xf70>
 97c:	add	x0, x0, #0x0
 980:	ldr	x0, [x0]
 984:	ldr	w0, [x0]
 988:	ldp	x29, x30, [sp], #96
 98c:	ret
	...
 9a8:	stp	x29, x30, [sp, #-48]!
 9ac:	mov	x29, sp
 9b0:	str	x0, [sp, #24]
 9b4:	mov	x0, #0x58                  	// #88
 9b8:	bl	0 <grub_malloc>
 9bc:	str	x0, [sp, #40]
 9c0:	ldr	x0, [sp, #40]
 9c4:	cmp	x0, #0x0
 9c8:	b.ne	9d4 <grub_mod_init-0x59c>  // b.any
 9cc:	mov	x0, #0x0                   	// #0
 9d0:	b	af8 <grub_mod_init-0x478>
 9d4:	ldr	x0, [sp, #40]
 9d8:	mov	x4, x0
 9dc:	mov	x3, #0x14                  	// #20
 9e0:	mov	x2, #0x0                   	// #0
 9e4:	mov	x1, #0x2                   	// #2
 9e8:	ldr	x0, [sp, #24]
 9ec:	bl	0 <grub_disk_read>
 9f0:	adrp	x0, 0 <grub_mod_init-0xf70>
 9f4:	add	x0, x0, #0x0
 9f8:	ldr	x0, [x0]
 9fc:	ldr	w0, [x0]
 a00:	cmp	w0, #0x0
 a04:	b.ne	abc <grub_mod_init-0x4b4>  // b.any
 a08:	ldr	x0, [sp, #40]
 a0c:	ldrh	w1, [x0, #16]
 a10:	mov	w0, #0x137f                	// #4991
 a14:	cmp	w1, w0
 a18:	b.ne	a2c <grub_mod_init-0x544>  // b.any
 a1c:	ldr	x0, [sp, #40]
 a20:	mov	w1, #0xe                   	// #14
 a24:	str	w1, [x0, #72]
 a28:	b	a4c <grub_mod_init-0x524>
 a2c:	ldr	x0, [sp, #40]
 a30:	ldrh	w1, [x0, #16]
 a34:	mov	w0, #0x138f                	// #5007
 a38:	cmp	w1, w0
 a3c:	b.ne	ac4 <grub_mod_init-0x4ac>  // b.any
 a40:	ldr	x0, [sp, #40]
 a44:	mov	w1, #0x1e                  	// #30
 a48:	str	w1, [x0, #72]
 a4c:	ldr	x0, [sp, #40]
 a50:	ldrh	w0, [x0, #10]
 a54:	cmp	w0, #0x13
 a58:	b.hi	acc <grub_mod_init-0x4a4>  // b.pmore
 a5c:	ldr	x0, [sp, #40]
 a60:	ldr	x1, [sp, #24]
 a64:	str	x1, [x0, #64]
 a68:	ldr	x0, [sp, #40]
 a6c:	str	wzr, [x0, #60]
 a70:	ldr	x0, [sp, #40]
 a74:	mov	x1, #0x2                   	// #2
 a78:	str	x1, [x0, #80]
 a7c:	ldr	x0, [sp, #40]
 a80:	ldr	x1, [x0, #80]
 a84:	ldr	x0, [sp, #40]
 a88:	ldrh	w0, [x0, #10]
 a8c:	add	w0, w0, #0x9
 a90:	lsl	x0, x1, x0
 a94:	lsr	x0, x0, #1
 a98:	mov	w1, w0
 a9c:	ldr	x0, [sp, #40]
 aa0:	str	w1, [x0, #52]
 aa4:	ldr	x0, [sp, #40]
 aa8:	ldr	w0, [x0, #52]
 aac:	cmp	w0, #0x0
 ab0:	b.eq	ad4 <grub_mod_init-0x49c>  // b.none
 ab4:	ldr	x0, [sp, #40]
 ab8:	b	af8 <grub_mod_init-0x478>
 abc:	nop
 ac0:	b	ad8 <grub_mod_init-0x498>
 ac4:	nop
 ac8:	b	ad8 <grub_mod_init-0x498>
 acc:	nop
 ad0:	b	ad8 <grub_mod_init-0x498>
 ad4:	nop
 ad8:	ldr	x0, [sp, #40]
 adc:	bl	0 <grub_free>
 ae0:	adrp	x0, 0 <grub_mod_init-0xf70>
 ae4:	add	x0, x0, #0x0
 ae8:	ldr	x1, [x0]
 aec:	mov	w0, #0x9                   	// #9
 af0:	bl	0 <grub_error>
 af4:	mov	x0, #0x0                   	// #0
 af8:	ldp	x29, x30, [sp], #48
 afc:	ret
	...
 b10:	stp	x29, x30, [sp, #-128]!
 b14:	mov	x29, sp
 b18:	str	x0, [sp, #40]
 b1c:	str	x1, [sp, #32]
 b20:	str	x2, [sp, #24]
 b24:	str	x3, [sp, #16]
 b28:	str	xzr, [sp, #112]
 b2c:	str	wzr, [sp, #124]
 b30:	ldr	x0, [sp, #40]
 b34:	ldr	x0, [x0]
 b38:	bl	9a8 <grub_mod_init-0x5c8>
 b3c:	str	x0, [sp, #112]
 b40:	ldr	x0, [sp, #112]
 b44:	cmp	x0, #0x0
 b48:	b.ne	b60 <grub_mod_init-0x410>  // b.any
 b4c:	adrp	x0, 0 <grub_mod_init-0xf70>
 b50:	add	x0, x0, #0x0
 b54:	ldr	x0, [x0]
 b58:	ldr	w0, [x0]
 b5c:	b	d94 <grub_mod_init-0x1dc>
 b60:	mov	w1, #0x1                   	// #1
 b64:	ldr	x0, [sp, #112]
 b68:	bl	500 <grub_mod_init-0xa70>
 b6c:	adrp	x0, 0 <grub_mod_init-0xf70>
 b70:	add	x0, x0, #0x0
 b74:	ldr	x0, [x0]
 b78:	ldr	w0, [x0]
 b7c:	cmp	w0, #0x0
 b80:	b.ne	d68 <grub_mod_init-0x208>  // b.any
 b84:	ldr	x1, [sp, #32]
 b88:	ldr	x0, [sp, #112]
 b8c:	bl	710 <grub_mod_init-0x860>
 b90:	adrp	x0, 0 <grub_mod_init-0xf70>
 b94:	add	x0, x0, #0x0
 b98:	ldr	x0, [x0]
 b9c:	ldr	w0, [x0]
 ba0:	cmp	w0, #0x0
 ba4:	b.ne	d70 <grub_mod_init-0x200>  // b.any
 ba8:	ldr	x0, [sp, #112]
 bac:	ldrh	w0, [x0, #20]
 bb0:	and	w0, w0, #0x4000
 bb4:	cmp	w0, #0x0
 bb8:	b.ne	d50 <grub_mod_init-0x220>  // b.any
 bbc:	adrp	x0, 0 <grub_mod_init-0xf70>
 bc0:	add	x0, x0, #0x0
 bc4:	ldr	x1, [x0]
 bc8:	mov	w0, #0x4                   	// #4
 bcc:	bl	0 <grub_error>
 bd0:	b	d7c <grub_mod_init-0x1f4>
 bd4:	ldr	x0, [sp, #112]
 bd8:	ldrh	w0, [x0, #56]
 bdc:	strh	w0, [sp, #110]
 be0:	add	x0, sp, #0x38
 be4:	mov	x2, #0x10                  	// #16
 be8:	mov	w1, #0x0                   	// #0
 bec:	bl	0 <grub_memset>
 bf0:	ldr	w0, [sp, #124]
 bf4:	add	x1, sp, #0x6c
 bf8:	mov	x5, x1
 bfc:	mov	x4, #0x2                   	// #2
 c00:	mov	x3, x0
 c04:	mov	x2, #0x0                   	// #0
 c08:	mov	x1, #0x0                   	// #0
 c0c:	ldr	x0, [sp, #112]
 c10:	bl	240 <grub_mod_init-0xd30>
 c14:	cmp	x0, #0x0
 c18:	b.ge	c30 <grub_mod_init-0x340>  // b.tcont
 c1c:	adrp	x0, 0 <grub_mod_init-0xf70>
 c20:	add	x0, x0, #0x0
 c24:	ldr	x0, [x0]
 c28:	ldr	w0, [x0]
 c2c:	b	d94 <grub_mod_init-0x1dc>
 c30:	ldr	w0, [sp, #124]
 c34:	add	x1, x0, #0x2
 c38:	ldr	x0, [sp, #112]
 c3c:	ldr	w0, [x0, #72]
 c40:	sxtw	x0, w0
 c44:	add	x2, sp, #0x48
 c48:	mov	x5, x2
 c4c:	mov	x4, x0
 c50:	mov	x3, x1
 c54:	mov	x2, #0x0                   	// #0
 c58:	mov	x1, #0x0                   	// #0
 c5c:	ldr	x0, [sp, #112]
 c60:	bl	240 <grub_mod_init-0xd30>
 c64:	cmp	x0, #0x0
 c68:	b.ge	c80 <grub_mod_init-0x2f0>  // b.tcont
 c6c:	adrp	x0, 0 <grub_mod_init-0xf70>
 c70:	add	x0, x0, #0x0
 c74:	ldr	x0, [x0]
 c78:	ldr	w0, [x0]
 c7c:	b	d94 <grub_mod_init-0x1dc>
 c80:	ldr	x0, [sp, #112]
 c84:	ldr	w0, [x0, #72]
 c88:	sxtw	x0, w0
 c8c:	add	x1, sp, #0x48
 c90:	strb	wzr, [x1, x0]
 c94:	ldrh	w0, [sp, #108]
 c98:	cmp	w0, #0x0
 c9c:	b.ne	cc0 <grub_mod_init-0x2b0>  // b.any
 ca0:	ldr	x0, [sp, #112]
 ca4:	ldr	w0, [x0, #72]
 ca8:	mov	w1, w0
 cac:	ldr	w0, [sp, #124]
 cb0:	add	w0, w1, w0
 cb4:	add	w0, w0, #0x2
 cb8:	str	w0, [sp, #124]
 cbc:	b	d50 <grub_mod_init-0x220>
 cc0:	ldrh	w0, [sp, #108]
 cc4:	mov	w1, w0
 cc8:	ldr	x0, [sp, #112]
 ccc:	bl	500 <grub_mod_init-0xa70>
 cd0:	ldr	x0, [sp, #112]
 cd4:	ldrh	w0, [x0, #20]
 cd8:	and	w0, w0, #0x4000
 cdc:	cmp	w0, #0x0
 ce0:	cset	w0, ne  // ne = any
 ce4:	and	w1, w0, #0xff
 ce8:	ldrb	w0, [sp, #56]
 cec:	bfxil	w0, w1, #0, #1
 cf0:	strb	w0, [sp, #56]
 cf4:	ldrb	w0, [sp, #56]
 cf8:	orr	w0, w0, #0x2
 cfc:	strb	w0, [sp, #56]
 d00:	ldr	x0, [sp, #112]
 d04:	ldr	w0, [x0, #28]
 d08:	str	w0, [sp, #60]
 d0c:	add	x1, sp, #0x38
 d10:	add	x0, sp, #0x48
 d14:	ldr	x3, [sp, #24]
 d18:	ldr	x2, [sp, #16]
 d1c:	blr	x3
 d20:	cmp	w0, #0x0
 d24:	b.ne	d78 <grub_mod_init-0x1f8>  // b.any
 d28:	ldrh	w1, [sp, #110]
 d2c:	ldr	x0, [sp, #112]
 d30:	bl	500 <grub_mod_init-0xa70>
 d34:	ldr	x0, [sp, #112]
 d38:	ldr	w0, [x0, #72]
 d3c:	mov	w1, w0
 d40:	ldr	w0, [sp, #124]
 d44:	add	w0, w1, w0
 d48:	add	w0, w0, #0x2
 d4c:	str	w0, [sp, #124]
 d50:	ldr	x0, [sp, #112]
 d54:	ldr	w0, [x0, #24]
 d58:	ldr	w1, [sp, #124]
 d5c:	cmp	w1, w0
 d60:	b.cc	bd4 <grub_mod_init-0x39c>  // b.lo, b.ul, b.last
 d64:	b	d7c <grub_mod_init-0x1f4>
 d68:	nop
 d6c:	b	d7c <grub_mod_init-0x1f4>
 d70:	nop
 d74:	b	d7c <grub_mod_init-0x1f4>
 d78:	nop
 d7c:	ldr	x0, [sp, #112]
 d80:	bl	0 <grub_free>
 d84:	adrp	x0, 0 <grub_mod_init-0xf70>
 d88:	add	x0, x0, #0x0
 d8c:	ldr	x0, [x0]
 d90:	ldr	w0, [x0]
 d94:	ldp	x29, x30, [sp], #128
 d98:	ret
 d9c:	nop
	...
 db0:	stp	x29, x30, [sp, #-48]!
 db4:	mov	x29, sp
 db8:	str	x0, [sp, #24]
 dbc:	str	x1, [sp, #16]
 dc0:	ldr	x0, [sp, #24]
 dc4:	ldr	x0, [x0, #8]
 dc8:	ldr	x0, [x0]
 dcc:	bl	9a8 <grub_mod_init-0x5c8>
 dd0:	str	x0, [sp, #40]
 dd4:	ldr	x0, [sp, #40]
 dd8:	cmp	x0, #0x0
 ddc:	b.ne	df4 <grub_mod_init-0x17c>  // b.any
 de0:	adrp	x0, 0 <grub_mod_init-0xf70>
 de4:	add	x0, x0, #0x0
 de8:	ldr	x0, [x0]
 dec:	ldr	w0, [x0]
 df0:	b	ee0 <grub_mod_init-0x90>
 df4:	mov	w1, #0x1                   	// #1
 df8:	ldr	x0, [sp, #40]
 dfc:	bl	500 <grub_mod_init-0xa70>
 e00:	adrp	x0, 0 <grub_mod_init-0xf70>
 e04:	add	x0, x0, #0x0
 e08:	ldr	x0, [x0]
 e0c:	ldr	w0, [x0]
 e10:	cmp	w0, #0x0
 e14:	b.eq	e34 <grub_mod_init-0x13c>  // b.none
 e18:	ldr	x0, [sp, #40]
 e1c:	bl	0 <grub_free>
 e20:	adrp	x0, 0 <grub_mod_init-0xf70>
 e24:	add	x0, x0, #0x0
 e28:	ldr	x0, [x0]
 e2c:	ldr	w0, [x0]
 e30:	b	ee0 <grub_mod_init-0x90>
 e34:	ldr	x0, [sp, #16]
 e38:	cmp	x0, #0x0
 e3c:	b.eq	e50 <grub_mod_init-0x120>  // b.none
 e40:	ldr	x0, [sp, #16]
 e44:	ldrb	w0, [x0]
 e48:	cmp	w0, #0x2f
 e4c:	b.eq	e7c <grub_mod_init-0xf4>  // b.none
 e50:	ldr	x2, [sp, #16]
 e54:	adrp	x0, 0 <grub_mod_init-0xf70>
 e58:	add	x0, x0, #0x0
 e5c:	ldr	x1, [x0]
 e60:	mov	w0, #0x7                   	// #7
 e64:	bl	0 <grub_error>
 e68:	adrp	x0, 0 <grub_mod_init-0xf70>
 e6c:	add	x0, x0, #0x0
 e70:	ldr	x0, [x0]
 e74:	ldr	w0, [x0]
 e78:	b	ee0 <grub_mod_init-0x90>
 e7c:	ldr	x1, [sp, #16]
 e80:	ldr	x0, [sp, #40]
 e84:	bl	710 <grub_mod_init-0x860>
 e88:	adrp	x0, 0 <grub_mod_init-0xf70>
 e8c:	add	x0, x0, #0x0
 e90:	ldr	x0, [x0]
 e94:	ldr	w0, [x0]
 e98:	cmp	w0, #0x0
 e9c:	b.eq	ebc <grub_mod_init-0xb4>  // b.none
 ea0:	ldr	x0, [sp, #40]
 ea4:	bl	0 <grub_free>
 ea8:	adrp	x0, 0 <grub_mod_init-0xf70>
 eac:	add	x0, x0, #0x0
 eb0:	ldr	x0, [x0]
 eb4:	ldr	w0, [x0]
 eb8:	b	ee0 <grub_mod_init-0x90>
 ebc:	ldr	x0, [sp, #24]
 ec0:	ldr	x1, [sp, #40]
 ec4:	str	x1, [x0, #80]
 ec8:	ldr	x0, [sp, #40]
 ecc:	ldr	w0, [x0, #24]
 ed0:	mov	w1, w0
 ed4:	ldr	x0, [sp, #24]
 ed8:	str	x1, [x0, #64]
 edc:	mov	w0, #0x0                   	// #0
 ee0:	ldp	x29, x30, [sp], #48
 ee4:	ret
	...
 ef8:	stp	x29, x30, [sp, #-64]!
 efc:	mov	x29, sp
 f00:	str	x0, [sp, #40]
 f04:	str	x1, [sp, #32]
 f08:	str	x2, [sp, #24]
 f0c:	ldr	x0, [sp, #40]
 f10:	ldr	x0, [x0, #80]
 f14:	str	x0, [sp, #56]
 f18:	ldr	x0, [sp, #40]
 f1c:	ldr	x1, [x0, #88]
 f20:	ldr	x0, [sp, #40]
 f24:	ldr	x2, [x0, #96]
 f28:	ldr	x0, [sp, #40]
 f2c:	ldr	x0, [x0, #24]
 f30:	ldr	x5, [sp, #32]
 f34:	ldr	x4, [sp, #24]
 f38:	mov	x3, x0
 f3c:	ldr	x0, [sp, #56]
 f40:	bl	240 <grub_mod_init-0xd30>
 f44:	ldp	x29, x30, [sp], #64
 f48:	ret
 f4c:	stp	x29, x30, [sp, #-32]!
 f50:	mov	x29, sp
 f54:	str	x0, [sp, #24]
 f58:	ldr	x0, [sp, #24]
 f5c:	ldr	x0, [x0, #80]
 f60:	bl	0 <grub_free>
 f64:	mov	w0, #0x0                   	// #0
 f68:	ldp	x29, x30, [sp], #32
 f6c:	ret

0000000000000f70 <grub_mod_init>:
 f70:	stp	x29, x30, [sp, #-32]!
 f74:	mov	x29, sp
 f78:	str	x0, [sp, #24]
 f7c:	adrp	x0, 0 <grub_mod_init-0xf70>
 f80:	add	x0, x0, #0x0
 f84:	ldr	x0, [x0]
 f88:	bl	0 <grub_mod_init-0xf70>
 f8c:	adrp	x0, 0 <grub_mod_init-0xf70>
 f90:	add	x0, x0, #0x0
 f94:	ldr	x0, [x0]
 f98:	ldr	x1, [sp, #24]
 f9c:	str	x1, [x0]
 fa0:	nop
 fa4:	ldp	x29, x30, [sp], #32
 fa8:	ret
 fac:	nop
	...

0000000000000fc0 <grub_mod_fini>:
 fc0:	stp	x29, x30, [sp, #-16]!
 fc4:	mov	x29, sp
 fc8:	adrp	x0, 0 <grub_mod_init-0xf70>
 fcc:	add	x0, x0, #0x0
 fd0:	ldr	x0, [x0]
 fd4:	bl	38 <grub_mod_init-0xf38>
 fd8:	nop
 fdc:	ldp	x29, x30, [sp], #16
 fe0:	ret
 fe4:	nop
	...
