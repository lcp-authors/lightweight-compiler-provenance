
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//afalg.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001560 <.init>:
    1560:	stp	x29, x30, [sp, #-16]!
    1564:	mov	x29, sp
    1568:	bl	18e0 <ASYNC_WAIT_CTX_get_fd@plt+0x10>
    156c:	ldp	x29, x30, [sp], #16
    1570:	ret

Disassembly of section .plt:

0000000000001580 <EVP_CIPHER_meth_new@plt-0x20>:
    1580:	stp	x16, x30, [sp, #-16]!
    1584:	adrp	x16, 13000 <bind_engine@@Base+0x108a8>
    1588:	ldr	x17, [x16, #4088]
    158c:	add	x16, x16, #0xff8
    1590:	br	x17
    1594:	nop
    1598:	nop
    159c:	nop

00000000000015a0 <EVP_CIPHER_meth_new@plt>:
    15a0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    15a4:	ldr	x17, [x16]
    15a8:	add	x16, x16, #0x0
    15ac:	br	x17

00000000000015b0 <EVP_CIPHER_meth_set_cleanup@plt>:
    15b0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    15b4:	ldr	x17, [x16, #8]
    15b8:	add	x16, x16, #0x8
    15bc:	br	x17

00000000000015c0 <EVP_CIPHER_CTX_iv_length@plt>:
    15c0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    15c4:	ldr	x17, [x16, #16]
    15c8:	add	x16, x16, #0x10
    15cc:	br	x17

00000000000015d0 <EVP_CIPHER_meth_set_iv_length@plt>:
    15d0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    15d4:	ldr	x17, [x16, #24]
    15d8:	add	x16, x16, #0x18
    15dc:	br	x17

00000000000015e0 <EVP_CIPHER_CTX_get_cipher_data@plt>:
    15e0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    15e4:	ldr	x17, [x16, #32]
    15e8:	add	x16, x16, #0x20
    15ec:	br	x17

00000000000015f0 <ENGINE_set_id@plt>:
    15f0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    15f4:	ldr	x17, [x16, #40]
    15f8:	add	x16, x16, #0x28
    15fc:	br	x17

0000000000001600 <EVP_CIPHER_CTX_key_length@plt>:
    1600:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1604:	ldr	x17, [x16, #48]
    1608:	add	x16, x16, #0x30
    160c:	br	x17

0000000000001610 <ENGINE_get_static_state@plt>:
    1610:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1614:	ldr	x17, [x16, #56]
    1618:	add	x16, x16, #0x38
    161c:	br	x17

0000000000001620 <strtok@plt>:
    1620:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1624:	ldr	x17, [x16, #64]
    1628:	add	x16, x16, #0x40
    162c:	br	x17

0000000000001630 <__gmon_start__@plt>:
    1630:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1634:	ldr	x17, [x16, #72]
    1638:	add	x16, x16, #0x48
    163c:	br	x17

0000000000001640 <ASYNC_get_current_job@plt>:
    1640:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1644:	ldr	x17, [x16, #80]
    1648:	add	x16, x16, #0x50
    164c:	br	x17

0000000000001650 <socket@plt>:
    1650:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1654:	ldr	x17, [x16, #88]
    1658:	add	x16, x16, #0x58
    165c:	br	x17

0000000000001660 <EVP_CIPHER_CTX_cipher@plt>:
    1660:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1664:	ldr	x17, [x16, #96]
    1668:	add	x16, x16, #0x60
    166c:	br	x17

0000000000001670 <fprintf@plt>:
    1670:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1674:	ldr	x17, [x16, #104]
    1678:	add	x16, x16, #0x68
    167c:	br	x17

0000000000001680 <CRYPTO_set_mem_functions@plt>:
    1680:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1684:	ldr	x17, [x16, #112]
    1688:	add	x16, x16, #0x70
    168c:	br	x17

0000000000001690 <__cxa_finalize@plt>:
    1690:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1694:	ldr	x17, [x16, #120]
    1698:	add	x16, x16, #0x78
    169c:	br	x17

00000000000016a0 <EVP_CIPHER_meth_set_init@plt>:
    16a0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    16a4:	ldr	x17, [x16, #128]
    16a8:	add	x16, x16, #0x80
    16ac:	br	x17

00000000000016b0 <ASYNC_WAIT_CTX_set_wait_fd@plt>:
    16b0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    16b4:	ldr	x17, [x16, #136]
    16b8:	add	x16, x16, #0x88
    16bc:	br	x17

00000000000016c0 <ENGINE_set_destroy_function@plt>:
    16c0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    16c4:	ldr	x17, [x16, #144]
    16c8:	add	x16, x16, #0x90
    16cc:	br	x17

00000000000016d0 <ERR_get_next_error_library@plt>:
    16d0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    16d4:	ldr	x17, [x16, #152]
    16d8:	add	x16, x16, #0x98
    16dc:	br	x17

00000000000016e0 <uname@plt>:
    16e0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    16e4:	ldr	x17, [x16, #160]
    16e8:	add	x16, x16, #0xa0
    16ec:	br	x17

00000000000016f0 <__errno_location@plt>:
    16f0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    16f4:	ldr	x17, [x16, #168]
    16f8:	add	x16, x16, #0xa8
    16fc:	br	x17

0000000000001700 <read@plt>:
    1700:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1704:	ldr	x17, [x16, #176]
    1708:	add	x16, x16, #0xb0
    170c:	br	x17

0000000000001710 <perror@plt>:
    1710:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1714:	ldr	x17, [x16, #184]
    1718:	add	x16, x16, #0xb8
    171c:	br	x17

0000000000001720 <syscall@plt>:
    1720:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1724:	ldr	x17, [x16, #192]
    1728:	add	x16, x16, #0xc0
    172c:	br	x17

0000000000001730 <ENGINE_set_name@plt>:
    1730:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1734:	ldr	x17, [x16, #200]
    1738:	add	x16, x16, #0xc8
    173c:	br	x17

0000000000001740 <ERR_unload_strings@plt>:
    1740:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1744:	ldr	x17, [x16, #208]
    1748:	add	x16, x16, #0xd0
    174c:	br	x17

0000000000001750 <EVP_CIPHER_CTX_iv@plt>:
    1750:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1754:	ldr	x17, [x16, #216]
    1758:	add	x16, x16, #0xd8
    175c:	br	x17

0000000000001760 <ENGINE_set_init_function@plt>:
    1760:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1764:	ldr	x17, [x16, #224]
    1768:	add	x16, x16, #0xe0
    176c:	br	x17

0000000000001770 <bind@plt>:
    1770:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1774:	ldr	x17, [x16, #232]
    1778:	add	x16, x16, #0xe8
    177c:	br	x17

0000000000001780 <EVP_CIPHER_meth_free@plt>:
    1780:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1784:	ldr	x17, [x16, #240]
    1788:	add	x16, x16, #0xf0
    178c:	br	x17

0000000000001790 <ASYNC_get_wait_ctx@plt>:
    1790:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1794:	ldr	x17, [x16, #248]
    1798:	add	x16, x16, #0xf8
    179c:	br	x17

00000000000017a0 <ERR_put_error@plt>:
    17a0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    17a4:	ldr	x17, [x16, #256]
    17a8:	add	x16, x16, #0x100
    17ac:	br	x17

00000000000017b0 <ERR_load_strings@plt>:
    17b0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    17b4:	ldr	x17, [x16, #264]
    17b8:	add	x16, x16, #0x108
    17bc:	br	x17

00000000000017c0 <EVP_CIPHER_CTX_nid@plt>:
    17c0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    17c4:	ldr	x17, [x16, #272]
    17c8:	add	x16, x16, #0x110
    17cc:	br	x17

00000000000017d0 <strcmp@plt>:
    17d0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    17d4:	ldr	x17, [x16, #280]
    17d8:	add	x16, x16, #0x118
    17dc:	br	x17

00000000000017e0 <strtol@plt>:
    17e0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    17e4:	ldr	x17, [x16, #288]
    17e8:	add	x16, x16, #0x120
    17ec:	br	x17

00000000000017f0 <setsockopt@plt>:
    17f0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    17f4:	ldr	x17, [x16, #296]
    17f8:	add	x16, x16, #0x128
    17fc:	br	x17

0000000000001800 <EVP_CIPHER_meth_set_flags@plt>:
    1800:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1804:	ldr	x17, [x16, #304]
    1808:	add	x16, x16, #0x130
    180c:	br	x17

0000000000001810 <ENGINE_set_ciphers@plt>:
    1810:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1814:	ldr	x17, [x16, #312]
    1818:	add	x16, x16, #0x138
    181c:	br	x17

0000000000001820 <EVP_CIPHER_meth_set_do_cipher@plt>:
    1820:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1824:	ldr	x17, [x16, #320]
    1828:	add	x16, x16, #0x140
    182c:	br	x17

0000000000001830 <accept@plt>:
    1830:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1834:	ldr	x17, [x16, #328]
    1838:	add	x16, x16, #0x148
    183c:	br	x17

0000000000001840 <ENGINE_set_finish_function@plt>:
    1840:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1844:	ldr	x17, [x16, #336]
    1848:	add	x16, x16, #0x150
    184c:	br	x17

0000000000001850 <sendmsg@plt>:
    1850:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1854:	ldr	x17, [x16, #344]
    1858:	add	x16, x16, #0x158
    185c:	br	x17

0000000000001860 <OPENSSL_strlcpy@plt>:
    1860:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1864:	ldr	x17, [x16, #352]
    1868:	add	x16, x16, #0x160
    186c:	br	x17

0000000000001870 <ASYNC_pause_job@plt>:
    1870:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1874:	ldr	x17, [x16, #360]
    1878:	add	x16, x16, #0x168
    187c:	br	x17

0000000000001880 <EVP_CIPHER_CTX_iv_noconst@plt>:
    1880:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1884:	ldr	x17, [x16, #368]
    1888:	add	x16, x16, #0x170
    188c:	br	x17

0000000000001890 <close@plt>:
    1890:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    1894:	ldr	x17, [x16, #376]
    1898:	add	x16, x16, #0x178
    189c:	br	x17

00000000000018a0 <EVP_CIPHER_meth_set_impl_ctx_size@plt>:
    18a0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    18a4:	ldr	x17, [x16, #384]
    18a8:	add	x16, x16, #0x180
    18ac:	br	x17

00000000000018b0 <fcntl@plt>:
    18b0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    18b4:	ldr	x17, [x16, #392]
    18b8:	add	x16, x16, #0x188
    18bc:	br	x17

00000000000018c0 <EVP_CIPHER_CTX_encrypting@plt>:
    18c0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    18c4:	ldr	x17, [x16, #400]
    18c8:	add	x16, x16, #0x190
    18cc:	br	x17

00000000000018d0 <ASYNC_WAIT_CTX_get_fd@plt>:
    18d0:	adrp	x16, 14000 <EVP_CIPHER_meth_new@OPENSSL_1_1_0>
    18d4:	ldr	x17, [x16, #408]
    18d8:	add	x16, x16, #0x198
    18dc:	br	x17

Disassembly of section .text:

00000000000018e0 <v_check@@Base-0xe60>:
    18e0:	adrp	x0, 13000 <bind_engine@@Base+0x108a8>
    18e4:	ldr	x0, [x0, #4032]
    18e8:	cbz	x0, 18f0 <ASYNC_WAIT_CTX_get_fd@plt+0x20>
    18ec:	b	1630 <__gmon_start__@plt>
    18f0:	ret
    18f4:	nop
    18f8:	adrp	x0, 14000 <bind_engine@@Base+0x118a8>
    18fc:	add	x0, x0, #0x330
    1900:	adrp	x1, 14000 <bind_engine@@Base+0x118a8>
    1904:	add	x1, x1, #0x330
    1908:	cmp	x1, x0
    190c:	b.eq	1924 <ASYNC_WAIT_CTX_get_fd@plt+0x54>  // b.none
    1910:	adrp	x1, 13000 <bind_engine@@Base+0x108a8>
    1914:	ldr	x1, [x1, #4048]
    1918:	cbz	x1, 1924 <ASYNC_WAIT_CTX_get_fd@plt+0x54>
    191c:	mov	x16, x1
    1920:	br	x16
    1924:	ret
    1928:	adrp	x0, 14000 <bind_engine@@Base+0x118a8>
    192c:	add	x0, x0, #0x330
    1930:	adrp	x1, 14000 <bind_engine@@Base+0x118a8>
    1934:	add	x1, x1, #0x330
    1938:	sub	x1, x1, x0
    193c:	lsr	x2, x1, #63
    1940:	add	x1, x2, x1, asr #3
    1944:	cmp	xzr, x1, asr #1
    1948:	asr	x1, x1, #1
    194c:	b.eq	1964 <ASYNC_WAIT_CTX_get_fd@plt+0x94>  // b.none
    1950:	adrp	x2, 13000 <bind_engine@@Base+0x108a8>
    1954:	ldr	x2, [x2, #4056]
    1958:	cbz	x2, 1964 <ASYNC_WAIT_CTX_get_fd@plt+0x94>
    195c:	mov	x16, x2
    1960:	br	x16
    1964:	ret
    1968:	stp	x29, x30, [sp, #-32]!
    196c:	mov	x29, sp
    1970:	str	x19, [sp, #16]
    1974:	adrp	x19, 14000 <bind_engine@@Base+0x118a8>
    1978:	ldrb	w0, [x19, #816]
    197c:	cbnz	w0, 19a4 <ASYNC_WAIT_CTX_get_fd@plt+0xd4>
    1980:	adrp	x0, 13000 <bind_engine@@Base+0x108a8>
    1984:	ldr	x0, [x0, #4040]
    1988:	cbz	x0, 1998 <ASYNC_WAIT_CTX_get_fd@plt+0xc8>
    198c:	adrp	x0, 14000 <bind_engine@@Base+0x118a8>
    1990:	ldr	x0, [x0, #416]
    1994:	bl	1690 <__cxa_finalize@plt>
    1998:	bl	18f8 <ASYNC_WAIT_CTX_get_fd@plt+0x28>
    199c:	mov	w0, #0x1                   	// #1
    19a0:	strb	w0, [x19, #816]
    19a4:	ldr	x19, [sp, #16]
    19a8:	ldp	x29, x30, [sp], #32
    19ac:	ret
    19b0:	b	1928 <ASYNC_WAIT_CTX_get_fd@plt+0x58>
    19b4:	nop
    19b8:	mov	w0, #0x1                   	// #1
    19bc:	ret
    19c0:	mov	w0, w2
    19c4:	b	1890 <close@plt>
    19c8:	stp	x29, x30, [sp, #-48]!
    19cc:	mov	x29, sp
    19d0:	stp	x19, x20, [sp, #16]
    19d4:	adrp	x19, 14000 <bind_engine@@Base+0x118a8>
    19d8:	ldr	w0, [x19, #820]
    19dc:	cbnz	w0, 1a1c <ASYNC_WAIT_CTX_get_fd@plt+0x14c>
    19e0:	adrp	x19, 14000 <bind_engine@@Base+0x118a8>
    19e4:	add	x19, x19, #0x1a8
    19e8:	ldr	x0, [x19, #8]
    19ec:	bl	1780 <EVP_CIPHER_meth_free@plt>
    19f0:	str	xzr, [x19, #8]
    19f4:	ldr	x0, [x19, #24]
    19f8:	bl	1780 <EVP_CIPHER_meth_free@plt>
    19fc:	str	xzr, [x19, #24]
    1a00:	ldr	x0, [x19, #40]
    1a04:	bl	1780 <EVP_CIPHER_meth_free@plt>
    1a08:	str	xzr, [x19, #40]
    1a0c:	mov	w0, #0x1                   	// #1
    1a10:	ldp	x19, x20, [sp, #16]
    1a14:	ldp	x29, x30, [sp], #48
    1a18:	ret
    1a1c:	add	x20, x19, #0x334
    1a20:	str	x21, [sp, #32]
    1a24:	adrp	x21, 14000 <bind_engine@@Base+0x118a8>
    1a28:	add	x21, x21, #0x1f0
    1a2c:	mov	x1, x21
    1a30:	ldr	w0, [x20, #4]
    1a34:	bl	1740 <ERR_unload_strings@plt>
    1a38:	ldr	w0, [x20, #4]
    1a3c:	add	x1, x21, #0x70
    1a40:	bl	1740 <ERR_unload_strings@plt>
    1a44:	str	wzr, [x19, #820]
    1a48:	ldr	x21, [sp, #32]
    1a4c:	b	19e0 <ASYNC_WAIT_CTX_get_fd@plt+0x110>
    1a50:	cbz	x0, 1a90 <ASYNC_WAIT_CTX_get_fd@plt+0x1c0>
    1a54:	stp	x29, x30, [sp, #-32]!
    1a58:	mov	x29, sp
    1a5c:	str	x19, [sp, #16]
    1a60:	bl	15e0 <EVP_CIPHER_CTX_get_cipher_data@plt>
    1a64:	mov	x19, x0
    1a68:	cbz	x0, 1a80 <ASYNC_WAIT_CTX_get_fd@plt+0x1b0>
    1a6c:	ldr	w1, [x19]
    1a70:	mov	w0, #0x671                 	// #1649
    1a74:	movk	w0, #0x189, lsl #16
    1a78:	cmp	w1, w0
    1a7c:	b.eq	1a98 <ASYNC_WAIT_CTX_get_fd@plt+0x1c8>  // b.none
    1a80:	mov	w0, #0x0                   	// #0
    1a84:	ldr	x19, [sp, #16]
    1a88:	ldp	x29, x30, [sp], #32
    1a8c:	ret
    1a90:	mov	w0, #0x0                   	// #0
    1a94:	ret
    1a98:	ldr	w0, [x19, #4]
    1a9c:	bl	1890 <close@plt>
    1aa0:	ldr	w0, [x19, #8]
    1aa4:	bl	1890 <close@plt>
    1aa8:	ldr	w0, [x19, #20]
    1aac:	cmp	w0, #0x1
    1ab0:	b.eq	1ad0 <ASYNC_WAIT_CTX_get_fd@plt+0x200>  // b.none
    1ab4:	ldr	x1, [x19, #24]
    1ab8:	mov	x0, #0x1                   	// #1
    1abc:	bl	1720 <syscall@plt>
    1ac0:	mov	w0, #0x1                   	// #1
    1ac4:	ldr	x19, [sp, #16]
    1ac8:	ldp	x29, x30, [sp], #32
    1acc:	ret
    1ad0:	ldr	w0, [x19, #16]
    1ad4:	bl	1890 <close@plt>
    1ad8:	b	1ab4 <ASYNC_WAIT_CTX_get_fd@plt+0x1e4>
    1adc:	nop
    1ae0:	mov	w0, #0x1                   	// #1
    1ae4:	ret
    1ae8:	stp	x29, x30, [sp, #-464]!
    1aec:	mvni	v0.2s, #0x0
    1af0:	mov	x29, sp
    1af4:	stp	x21, x22, [sp, #32]
    1af8:	add	x22, sp, #0x48
    1afc:	mov	x0, x22
    1b00:	stp	x19, x20, [sp, #16]
    1b04:	mov	w19, #0xffffffff            	// #-1
    1b08:	str	d0, [sp, #56]
    1b0c:	str	w19, [sp, #64]
    1b10:	bl	16e0 <uname@plt>
    1b14:	cbnz	w0, 1bd0 <ASYNC_WAIT_CTX_get_fd@plt+0x300>
    1b18:	adrp	x21, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1b1c:	add	x21, x21, #0xbd0
    1b20:	mov	w20, w0
    1b24:	mov	x1, x21
    1b28:	add	x0, x22, #0x82
    1b2c:	bl	1620 <strtok@plt>
    1b30:	cbz	x0, 1c10 <ASYNC_WAIT_CTX_get_fd@plt+0x340>
    1b34:	add	x22, sp, #0x38
    1b38:	mov	x19, #0x1                   	// #1
    1b3c:	mov	w2, #0xa                   	// #10
    1b40:	mov	x1, #0x0                   	// #0
    1b44:	bl	17e0 <strtol@plt>
    1b48:	mov	x3, x0
    1b4c:	add	x2, x22, x19, lsl #2
    1b50:	mov	x1, x21
    1b54:	mov	x0, #0x0                   	// #0
    1b58:	stur	w3, [x2, #-4]
    1b5c:	bl	1620 <strtok@plt>
    1b60:	cmp	w19, #0x2
    1b64:	add	x19, x19, #0x1
    1b68:	cset	w2, le
    1b6c:	cmp	x0, #0x0
    1b70:	csel	w2, w2, wzr, ne  // ne = any
    1b74:	cbnz	w2, 1b3c <ASYNC_WAIT_CTX_get_fd@plt+0x26c>
    1b78:	ldp	w2, w3, [sp, #56]
    1b7c:	mov	w1, #0xff                  	// #255
    1b80:	ldr	w4, [sp, #64]
    1b84:	movk	w1, #0x4, lsl #16
    1b88:	lsl	w0, w3, #8
    1b8c:	add	w0, w0, w2, lsl #16
    1b90:	add	w0, w0, w4
    1b94:	cmp	w0, w1
    1b98:	b.le	1c1c <ASYNC_WAIT_CTX_get_fd@plt+0x34c>
    1b9c:	mov	w2, #0x0                   	// #0
    1ba0:	mov	w1, #0x5                   	// #5
    1ba4:	mov	w0, #0x26                  	// #38
    1ba8:	bl	1650 <socket@plt>
    1bac:	cmn	w0, #0x1
    1bb0:	b.eq	1ca4 <ASYNC_WAIT_CTX_get_fd@plt+0x3d4>  // b.none
    1bb4:	mov	w20, #0x1                   	// #1
    1bb8:	bl	1890 <close@plt>
    1bbc:	mov	w0, w20
    1bc0:	ldp	x19, x20, [sp, #16]
    1bc4:	ldp	x21, x22, [sp, #32]
    1bc8:	ldp	x29, x30, [sp], #464
    1bcc:	ret
    1bd0:	adrp	x19, 14000 <bind_engine@@Base+0x118a8>
    1bd4:	add	x19, x19, #0x334
    1bd8:	ldr	w0, [x19, #4]
    1bdc:	cbz	w0, 1c98 <ASYNC_WAIT_CTX_get_fd@plt+0x3c8>
    1be0:	mov	w4, #0x307                 	// #775
    1be4:	mov	w2, #0x6f                  	// #111
    1be8:	mov	w1, #0x64                  	// #100
    1bec:	mov	w20, #0x0                   	// #0
    1bf0:	adrp	x3, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1bf4:	add	x3, x3, #0xbb8
    1bf8:	bl	17a0 <ERR_put_error@plt>
    1bfc:	mov	w0, w20
    1c00:	ldp	x19, x20, [sp, #16]
    1c04:	ldp	x21, x22, [sp, #32]
    1c08:	ldp	x29, x30, [sp], #464
    1c0c:	ret
    1c10:	mov	w4, w19
    1c14:	mov	w3, w19
    1c18:	mov	w2, w19
    1c1c:	adrp	x19, 13000 <bind_engine@@Base+0x108a8>
    1c20:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1c24:	add	x1, x1, #0xbd8
    1c28:	ldr	x19, [x19, #4064]
    1c2c:	ldr	x0, [x19]
    1c30:	bl	1670 <fprintf@plt>
    1c34:	ldr	x0, [x19]
    1c38:	adrp	x19, 14000 <bind_engine@@Base+0x118a8>
    1c3c:	add	x19, x19, #0x334
    1c40:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1c44:	mov	w4, #0x0                   	// #0
    1c48:	add	x1, x1, #0xc18
    1c4c:	mov	w3, #0x1                   	// #1
    1c50:	mov	w2, #0x4                   	// #4
    1c54:	bl	1670 <fprintf@plt>
    1c58:	ldr	w0, [x19, #4]
    1c5c:	cbz	w0, 1c8c <ASYNC_WAIT_CTX_get_fd@plt+0x3bc>
    1c60:	mov	w4, #0x318                 	// #792
    1c64:	mov	w2, #0x6b                  	// #107
    1c68:	mov	w1, #0x64                  	// #100
    1c6c:	adrp	x3, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1c70:	add	x3, x3, #0xbb8
    1c74:	bl	17a0 <ERR_put_error@plt>
    1c78:	mov	w0, w20
    1c7c:	ldp	x19, x20, [sp, #16]
    1c80:	ldp	x21, x22, [sp, #32]
    1c84:	ldp	x29, x30, [sp], #464
    1c88:	ret
    1c8c:	bl	16d0 <ERR_get_next_error_library@plt>
    1c90:	str	w0, [x19, #4]
    1c94:	b	1c60 <ASYNC_WAIT_CTX_get_fd@plt+0x390>
    1c98:	bl	16d0 <ERR_get_next_error_library@plt>
    1c9c:	str	w0, [x19, #4]
    1ca0:	b	1be0 <ASYNC_WAIT_CTX_get_fd@plt+0x310>
    1ca4:	adrp	x19, 14000 <bind_engine@@Base+0x118a8>
    1ca8:	add	x19, x19, #0x334
    1cac:	ldr	w0, [x19, #4]
    1cb0:	cbz	w0, 1cd0 <ASYNC_WAIT_CTX_get_fd@plt+0x400>
    1cb4:	adrp	x3, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1cb8:	mov	w4, #0x320                 	// #800
    1cbc:	add	x3, x3, #0xbb8
    1cc0:	mov	w2, #0x6d                  	// #109
    1cc4:	mov	w1, #0x64                  	// #100
    1cc8:	bl	17a0 <ERR_put_error@plt>
    1ccc:	b	1bbc <ASYNC_WAIT_CTX_get_fd@plt+0x2ec>
    1cd0:	bl	16d0 <ERR_get_next_error_library@plt>
    1cd4:	str	w0, [x19, #4]
    1cd8:	b	1cb4 <ASYNC_WAIT_CTX_get_fd@plt+0x3e4>
    1cdc:	nop
    1ce0:	cbz	x1, 1d8c <ASYNC_WAIT_CTX_get_fd@plt+0x4bc>
    1ce4:	stp	x29, x30, [sp, #-48]!
    1ce8:	mov	x29, sp
    1cec:	stp	x19, x20, [sp, #16]
    1cf0:	mov	x19, x1
    1cf4:	sub	w1, w3, #0x1a3
    1cf8:	cmp	w1, #0x8
    1cfc:	b.hi	1d14 <ASYNC_WAIT_CTX_get_fd@plt+0x444>  // b.pmore
    1d00:	mov	x0, #0x1                   	// #1
    1d04:	mov	x2, #0x111                 	// #273
    1d08:	lsl	x0, x0, x1
    1d0c:	tst	x0, x2
    1d10:	b.ne	1d28 <ASYNC_WAIT_CTX_get_fd@plt+0x458>  // b.any
    1d14:	str	xzr, [x19]
    1d18:	mov	w0, #0x0                   	// #0
    1d1c:	ldp	x19, x20, [sp, #16]
    1d20:	ldp	x29, x30, [sp], #48
    1d24:	ret
    1d28:	str	x21, [sp, #32]
    1d2c:	cmp	w3, #0x1a7
    1d30:	b.eq	1d7c <ASYNC_WAIT_CTX_get_fd@plt+0x4ac>  // b.none
    1d34:	cmp	w3, #0x1ab
    1d38:	b.ne	1d4c <ASYNC_WAIT_CTX_get_fd@plt+0x47c>  // b.any
    1d3c:	adrp	x20, 14000 <bind_engine@@Base+0x118a8>
    1d40:	add	x20, x20, #0x1a8
    1d44:	add	x20, x20, #0x20
    1d48:	b	1d5c <ASYNC_WAIT_CTX_get_fd@plt+0x48c>
    1d4c:	cmp	w3, #0x1a3
    1d50:	b.ne	1e44 <ASYNC_WAIT_CTX_get_fd@plt+0x574>  // b.any
    1d54:	adrp	x20, 14000 <bind_engine@@Base+0x118a8>
    1d58:	add	x20, x20, #0x1a8
    1d5c:	ldr	x21, [x20, #8]
    1d60:	cbz	x21, 1da4 <ASYNC_WAIT_CTX_get_fd@plt+0x4d4>
    1d64:	str	x21, [x19]
    1d68:	mov	w0, #0x1                   	// #1
    1d6c:	ldp	x19, x20, [sp, #16]
    1d70:	ldr	x21, [sp, #32]
    1d74:	ldp	x29, x30, [sp], #48
    1d78:	ret
    1d7c:	adrp	x20, 14000 <bind_engine@@Base+0x118a8>
    1d80:	add	x20, x20, #0x1a8
    1d84:	add	x20, x20, #0x10
    1d88:	b	1d5c <ASYNC_WAIT_CTX_get_fd@plt+0x48c>
    1d8c:	adrp	x1, 14000 <bind_engine@@Base+0x118a8>
    1d90:	add	x1, x1, #0x1a8
    1d94:	add	x1, x1, #0x30
    1d98:	mov	w0, #0x3                   	// #3
    1d9c:	str	x1, [x2]
    1da0:	ret
    1da4:	ldr	w2, [x20]
    1da8:	mov	w1, #0x10                  	// #16
    1dac:	mov	w0, w3
    1db0:	bl	15a0 <EVP_CIPHER_meth_new@plt>
    1db4:	str	x0, [x20, #8]
    1db8:	mov	x1, x0
    1dbc:	cbz	x0, 1dd0 <ASYNC_WAIT_CTX_get_fd@plt+0x500>
    1dc0:	mov	w1, #0x10                  	// #16
    1dc4:	bl	15d0 <EVP_CIPHER_meth_set_iv_length@plt>
    1dc8:	cbnz	w0, 1de0 <ASYNC_WAIT_CTX_get_fd@plt+0x510>
    1dcc:	ldr	x1, [x20, #8]
    1dd0:	mov	x0, x1
    1dd4:	bl	1780 <EVP_CIPHER_meth_free@plt>
    1dd8:	str	xzr, [x20, #8]
    1ddc:	b	1d64 <ASYNC_WAIT_CTX_get_fd@plt+0x494>
    1de0:	ldr	x0, [x20, #8]
    1de4:	mov	x1, #0x1002                	// #4098
    1de8:	bl	1800 <EVP_CIPHER_meth_set_flags@plt>
    1dec:	cbz	w0, 1dcc <ASYNC_WAIT_CTX_get_fd@plt+0x4fc>
    1df0:	ldr	x0, [x20, #8]
    1df4:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    1df8:	add	x1, x1, #0xe50
    1dfc:	bl	16a0 <EVP_CIPHER_meth_set_init@plt>
    1e00:	cbz	w0, 1dcc <ASYNC_WAIT_CTX_get_fd@plt+0x4fc>
    1e04:	ldr	x0, [x20, #8]
    1e08:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1e0c:	add	x1, x1, #0x238
    1e10:	bl	1820 <EVP_CIPHER_meth_set_do_cipher@plt>
    1e14:	cbz	w0, 1dcc <ASYNC_WAIT_CTX_get_fd@plt+0x4fc>
    1e18:	ldr	x0, [x20, #8]
    1e1c:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    1e20:	add	x1, x1, #0xa50
    1e24:	bl	15b0 <EVP_CIPHER_meth_set_cleanup@plt>
    1e28:	cbz	w0, 1dcc <ASYNC_WAIT_CTX_get_fd@plt+0x4fc>
    1e2c:	ldr	x0, [x20, #8]
    1e30:	mov	w1, #0x80                  	// #128
    1e34:	bl	18a0 <EVP_CIPHER_meth_set_impl_ctx_size@plt>
    1e38:	cbz	w0, 1dcc <ASYNC_WAIT_CTX_get_fd@plt+0x4fc>
    1e3c:	ldr	x21, [x20, #8]
    1e40:	b	1d64 <ASYNC_WAIT_CTX_get_fd@plt+0x494>
    1e44:	mov	x0, #0x0                   	// #0
    1e48:	ldr	x0, [x0, #8]
    1e4c:	brk	#0x3e8
    1e50:	cmp	x0, #0x0
    1e54:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    1e58:	b.ne	1e64 <ASYNC_WAIT_CTX_get_fd@plt+0x594>  // b.any
    1e5c:	mov	w0, #0x0                   	// #0
    1e60:	ret
    1e64:	stp	x29, x30, [sp, #-160]!
    1e68:	mov	x29, sp
    1e6c:	stp	x19, x20, [sp, #16]
    1e70:	mov	x19, x0
    1e74:	mov	x20, x1
    1e78:	bl	1660 <EVP_CIPHER_CTX_cipher@plt>
    1e7c:	cbz	x0, 1ee4 <ASYNC_WAIT_CTX_get_fd@plt+0x614>
    1e80:	mov	x0, x19
    1e84:	stp	x21, x22, [sp, #32]
    1e88:	bl	15e0 <EVP_CIPHER_CTX_get_cipher_data@plt>
    1e8c:	mov	x22, x0
    1e90:	cbz	x0, 1ee0 <ASYNC_WAIT_CTX_get_fd@plt+0x610>
    1e94:	mov	x0, x19
    1e98:	bl	17c0 <EVP_CIPHER_CTX_nid@plt>
    1e9c:	sub	w1, w0, #0x1a3
    1ea0:	cmp	w1, #0x8
    1ea4:	b.hi	1ef4 <ASYNC_WAIT_CTX_get_fd@plt+0x624>  // b.pmore
    1ea8:	mov	x21, #0x1                   	// #1
    1eac:	mov	x2, #0x111                 	// #273
    1eb0:	lsl	x1, x21, x1
    1eb4:	mov	w0, #0x0                   	// #0
    1eb8:	tst	x1, x2
    1ebc:	b.ne	1ed0 <ASYNC_WAIT_CTX_get_fd@plt+0x600>  // b.any
    1ec0:	ldp	x21, x22, [sp, #32]
    1ec4:	ldp	x19, x20, [sp, #16]
    1ec8:	ldp	x29, x30, [sp], #160
    1ecc:	ret
    1ed0:	mov	x0, x19
    1ed4:	bl	15c0 <EVP_CIPHER_CTX_iv_length@plt>
    1ed8:	cmp	w0, #0x10
    1edc:	b.eq	1f00 <ASYNC_WAIT_CTX_get_fd@plt+0x630>  // b.none
    1ee0:	ldp	x21, x22, [sp, #32]
    1ee4:	mov	w0, #0x0                   	// #0
    1ee8:	ldp	x19, x20, [sp, #16]
    1eec:	ldp	x29, x30, [sp], #160
    1ef0:	ret
    1ef4:	mov	w0, #0x0                   	// #0
    1ef8:	ldp	x21, x22, [sp, #32]
    1efc:	b	1ec4 <ASYNC_WAIT_CTX_get_fd@plt+0x5f4>
    1f00:	mvni	v0.2s, #0x0
    1f04:	str	x23, [sp, #48]
    1f08:	mov	w3, #0x26                  	// #38
    1f0c:	add	x23, sp, #0x48
    1f10:	mov	x2, #0xe                   	// #14
    1f14:	add	x0, x23, #0x2
    1f18:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1f1c:	add	x1, x1, #0xc58
    1f20:	stur	d0, [x22, #4]
    1f24:	stp	xzr, xzr, [sp, #72]
    1f28:	strh	w3, [sp, #72]
    1f2c:	stp	xzr, xzr, [sp, #88]
    1f30:	stp	xzr, xzr, [sp, #104]
    1f34:	stp	xzr, xzr, [sp, #120]
    1f38:	stp	xzr, xzr, [sp, #136]
    1f3c:	str	xzr, [sp, #152]
    1f40:	bl	1860 <OPENSSL_strlcpy@plt>
    1f44:	mov	x2, #0x40                  	// #64
    1f48:	add	x0, x23, #0x18
    1f4c:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    1f50:	add	x1, x1, #0xc68
    1f54:	bl	1860 <OPENSSL_strlcpy@plt>
    1f58:	mov	w2, #0x0                   	// #0
    1f5c:	mov	w1, #0x5                   	// #5
    1f60:	mov	w0, #0x26                  	// #38
    1f64:	bl	1650 <socket@plt>
    1f68:	str	w0, [x22, #8]
    1f6c:	cmn	w0, #0x1
    1f70:	b.eq	200c <ASYNC_WAIT_CTX_get_fd@plt+0x73c>  // b.none
    1f74:	mov	x1, x23
    1f78:	mov	w2, #0x58                  	// #88
    1f7c:	bl	1770 <bind@plt>
    1f80:	tbnz	w0, #31, 208c <ASYNC_WAIT_CTX_get_fd@plt+0x7bc>
    1f84:	ldr	w0, [x22, #8]
    1f88:	mov	x2, #0x0                   	// #0
    1f8c:	mov	x1, #0x0                   	// #0
    1f90:	bl	1830 <accept@plt>
    1f94:	str	w0, [x22, #4]
    1f98:	tbnz	w0, #31, 20e0 <ASYNC_WAIT_CTX_get_fd@plt+0x810>
    1f9c:	mov	x0, x19
    1fa0:	bl	1600 <EVP_CIPHER_CTX_key_length@plt>
    1fa4:	mov	w4, w0
    1fa8:	ldr	w0, [x22, #8]
    1fac:	mov	x3, x20
    1fb0:	mov	w2, w21
    1fb4:	mov	w1, #0x117                 	// #279
    1fb8:	bl	17f0 <setsockopt@plt>
    1fbc:	tbnz	w0, #31, 21a4 <ASYNC_WAIT_CTX_get_fd@plt+0x8d4>
    1fc0:	str	xzr, [x22, #24]
    1fc4:	add	x2, x22, #0x18
    1fc8:	mov	w1, #0x1                   	// #1
    1fcc:	mov	x0, #0x0                   	// #0
    1fd0:	bl	1720 <syscall@plt>
    1fd4:	tbnz	w0, #31, 2134 <ASYNC_WAIT_CTX_get_fd@plt+0x864>
    1fd8:	mov	x2, #0xffffffff            	// #4294967295
    1fdc:	str	x2, [x22, #16]
    1fe0:	stp	xzr, xzr, [x22, #64]
    1fe4:	mov	w3, #0x671                 	// #1649
    1fe8:	movk	w3, #0x189, lsl #16
    1fec:	stp	xzr, xzr, [x22, #80]
    1ff0:	mov	w0, #0x1                   	// #1
    1ff4:	stp	xzr, xzr, [x22, #96]
    1ff8:	stp	xzr, xzr, [x22, #112]
    1ffc:	str	w3, [x22]
    2000:	ldp	x21, x22, [sp, #32]
    2004:	ldr	x23, [sp, #48]
    2008:	b	1ec4 <ASYNC_WAIT_CTX_get_fd@plt+0x5f4>
    200c:	adrp	x0, 13000 <bind_engine@@Base+0x108a8>
    2010:	adrp	x19, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2014:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2018:	add	x2, x19, #0xbb8
    201c:	ldr	x0, [x0, #4064]
    2020:	add	x1, x1, #0xc78
    2024:	mov	w3, #0x178                 	// #376
    2028:	adrp	x20, 14000 <bind_engine@@Base+0x118a8>
    202c:	add	x20, x20, #0x334
    2030:	ldr	x0, [x0]
    2034:	bl	1670 <fprintf@plt>
    2038:	mov	x0, #0x0                   	// #0
    203c:	bl	1710 <perror@plt>
    2040:	ldr	w0, [x20, #4]
    2044:	cbz	w0, 21f8 <ASYNC_WAIT_CTX_get_fd@plt+0x928>
    2048:	add	x3, x19, #0xbb8
    204c:	mov	w4, #0x179                 	// #377
    2050:	mov	w2, #0x6d                  	// #109
    2054:	mov	w1, #0x65                  	// #101
    2058:	bl	17a0 <ERR_put_error@plt>
    205c:	ldr	w0, [x22, #8]
    2060:	tbnz	w0, #31, 2068 <ASYNC_WAIT_CTX_get_fd@plt+0x798>
    2064:	bl	1890 <close@plt>
    2068:	ldr	w0, [x22, #4]
    206c:	tbnz	w0, #31, 2074 <ASYNC_WAIT_CTX_get_fd@plt+0x7a4>
    2070:	bl	1890 <close@plt>
    2074:	mvni	v0.2s, #0x0
    2078:	mov	w0, #0x0                   	// #0
    207c:	ldr	x23, [sp, #48]
    2080:	stur	d0, [x22, #4]
    2084:	ldp	x21, x22, [sp, #32]
    2088:	b	1ec4 <ASYNC_WAIT_CTX_get_fd@plt+0x5f4>
    208c:	adrp	x0, 13000 <bind_engine@@Base+0x108a8>
    2090:	adrp	x19, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2094:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2098:	add	x2, x19, #0xbb8
    209c:	ldr	x0, [x0, #4064]
    20a0:	add	x1, x1, #0xca8
    20a4:	mov	w3, #0x17f                 	// #383
    20a8:	adrp	x20, 14000 <bind_engine@@Base+0x118a8>
    20ac:	add	x20, x20, #0x334
    20b0:	ldr	x0, [x0]
    20b4:	bl	1670 <fprintf@plt>
    20b8:	mov	x0, #0x0                   	// #0
    20bc:	bl	1710 <perror@plt>
    20c0:	ldr	w0, [x20, #4]
    20c4:	cbz	w0, 2204 <ASYNC_WAIT_CTX_get_fd@plt+0x934>
    20c8:	add	x3, x19, #0xbb8
    20cc:	mov	w4, #0x180                 	// #384
    20d0:	mov	w2, #0x67                  	// #103
    20d4:	mov	w1, #0x65                  	// #101
    20d8:	bl	17a0 <ERR_put_error@plt>
    20dc:	b	205c <ASYNC_WAIT_CTX_get_fd@plt+0x78c>
    20e0:	adrp	x0, 13000 <bind_engine@@Base+0x108a8>
    20e4:	adrp	x19, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    20e8:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    20ec:	add	x2, x19, #0xbb8
    20f0:	ldr	x0, [x0, #4064]
    20f4:	add	x1, x1, #0xcd8
    20f8:	mov	w3, #0x186                 	// #390
    20fc:	adrp	x20, 14000 <bind_engine@@Base+0x118a8>
    2100:	ldr	x0, [x0]
    2104:	bl	1670 <fprintf@plt>
    2108:	mov	x0, #0x0                   	// #0
    210c:	bl	1710 <perror@plt>
    2110:	add	x0, x20, #0x334
    2114:	ldr	w0, [x0, #4]
    2118:	cbz	w0, 221c <ASYNC_WAIT_CTX_get_fd@plt+0x94c>
    211c:	add	x3, x19, #0xbb8
    2120:	mov	w4, #0x187                 	// #391
    2124:	mov	w2, #0x6e                  	// #110
    2128:	mov	w1, #0x65                  	// #101
    212c:	bl	17a0 <ERR_put_error@plt>
    2130:	b	205c <ASYNC_WAIT_CTX_get_fd@plt+0x78c>
    2134:	adrp	x0, 13000 <bind_engine@@Base+0x108a8>
    2138:	adrp	x19, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    213c:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2140:	add	x2, x19, #0xbb8
    2144:	ldr	x0, [x0, #4064]
    2148:	add	x1, x1, #0xd40
    214c:	mov	w3, #0xcc                  	// #204
    2150:	adrp	x20, 14000 <bind_engine@@Base+0x118a8>
    2154:	add	x20, x20, #0x334
    2158:	ldr	x0, [x0]
    215c:	bl	1670 <fprintf@plt>
    2160:	mov	x0, #0x0                   	// #0
    2164:	bl	1710 <perror@plt>
    2168:	ldr	w0, [x20, #4]
    216c:	cbz	w0, 222c <ASYNC_WAIT_CTX_get_fd@plt+0x95c>
    2170:	add	x3, x19, #0xbb8
    2174:	mov	w4, #0xcd                  	// #205
    2178:	mov	w2, #0x69                  	// #105
    217c:	mov	w1, #0x66                  	// #102
    2180:	bl	17a0 <ERR_put_error@plt>
    2184:	ldr	w0, [x22, #4]
    2188:	bl	1890 <close@plt>
    218c:	ldr	w0, [x22, #8]
    2190:	bl	1890 <close@plt>
    2194:	mov	w0, #0x0                   	// #0
    2198:	ldp	x21, x22, [sp, #32]
    219c:	ldr	x23, [sp, #48]
    21a0:	b	1ec4 <ASYNC_WAIT_CTX_get_fd@plt+0x5f4>
    21a4:	adrp	x0, 13000 <bind_engine@@Base+0x108a8>
    21a8:	adrp	x19, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    21ac:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    21b0:	add	x2, x19, #0xbb8
    21b4:	ldr	x0, [x0, #4064]
    21b8:	add	x1, x1, #0xd08
    21bc:	mov	w3, #0x162                 	// #354
    21c0:	adrp	x20, 14000 <bind_engine@@Base+0x118a8>
    21c4:	add	x20, x20, #0x334
    21c8:	ldr	x0, [x0]
    21cc:	bl	1670 <fprintf@plt>
    21d0:	mov	x0, #0x0                   	// #0
    21d4:	bl	1710 <perror@plt>
    21d8:	ldr	w0, [x20, #4]
    21dc:	cbz	w0, 2210 <ASYNC_WAIT_CTX_get_fd@plt+0x940>
    21e0:	add	x3, x19, #0xbb8
    21e4:	mov	w4, #0x163                 	// #355
    21e8:	mov	w2, #0x6a                  	// #106
    21ec:	mov	w1, #0x68                  	// #104
    21f0:	bl	17a0 <ERR_put_error@plt>
    21f4:	b	2184 <ASYNC_WAIT_CTX_get_fd@plt+0x8b4>
    21f8:	bl	16d0 <ERR_get_next_error_library@plt>
    21fc:	str	w0, [x20, #4]
    2200:	b	2048 <ASYNC_WAIT_CTX_get_fd@plt+0x778>
    2204:	bl	16d0 <ERR_get_next_error_library@plt>
    2208:	str	w0, [x20, #4]
    220c:	b	20c8 <ASYNC_WAIT_CTX_get_fd@plt+0x7f8>
    2210:	bl	16d0 <ERR_get_next_error_library@plt>
    2214:	str	w0, [x20, #4]
    2218:	b	21e0 <ASYNC_WAIT_CTX_get_fd@plt+0x910>
    221c:	add	x20, x20, #0x334
    2220:	bl	16d0 <ERR_get_next_error_library@plt>
    2224:	str	w0, [x20, #4]
    2228:	b	211c <ASYNC_WAIT_CTX_get_fd@plt+0x84c>
    222c:	bl	16d0 <ERR_get_next_error_library@plt>
    2230:	str	w0, [x20, #4]
    2234:	b	2170 <ASYNC_WAIT_CTX_get_fd@plt+0x8a0>
    2238:	cmp	x1, #0x0
    223c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    2240:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    2244:	b.ne	2250 <ASYNC_WAIT_CTX_get_fd@plt+0x980>  // b.any
    2248:	mov	w0, #0x0                   	// #0
    224c:	ret
    2250:	stp	x29, x30, [sp, #-288]!
    2254:	mov	x29, sp
    2258:	stp	x19, x20, [sp, #16]
    225c:	mov	x19, x1
    2260:	mov	x20, x3
    2264:	stp	x21, x22, [sp, #32]
    2268:	mov	x21, x2
    226c:	stp	x23, x24, [sp, #48]
    2270:	mov	x24, x0
    2274:	stp	x25, x26, [sp, #64]
    2278:	bl	15e0 <EVP_CIPHER_CTX_get_cipher_data@plt>
    227c:	mov	x25, x0
    2280:	cbz	x0, 2298 <ASYNC_WAIT_CTX_get_fd@plt+0x9c8>
    2284:	ldr	w1, [x25]
    2288:	mov	w0, #0x671                 	// #1649
    228c:	movk	w0, #0x189, lsl #16
    2290:	cmp	w1, w0
    2294:	b.eq	22b4 <ASYNC_WAIT_CTX_get_fd@plt+0x9e4>  // b.none
    2298:	mov	w0, #0x0                   	// #0
    229c:	ldp	x19, x20, [sp, #16]
    22a0:	ldp	x21, x22, [sp, #32]
    22a4:	ldp	x23, x24, [sp, #48]
    22a8:	ldp	x25, x26, [sp, #64]
    22ac:	ldp	x29, x30, [sp], #288
    22b0:	ret
    22b4:	mov	x0, x24
    22b8:	stp	x27, x28, [sp, #80]
    22bc:	stp	xzr, xzr, [sp, #96]
    22c0:	bl	18c0 <EVP_CIPHER_CTX_encrypting@plt>
    22c4:	cbnz	w0, 22d4 <ASYNC_WAIT_CTX_get_fd@plt+0xa04>
    22c8:	add	x0, x21, x20
    22cc:	ldp	x0, x1, [x0, #-16]
    22d0:	stp	x0, x1, [sp, #96]
    22d4:	mov	x0, x24
    22d8:	bl	1750 <EVP_CIPHER_CTX_iv@plt>
    22dc:	mov	x28, x0
    22e0:	mov	x0, x24
    22e4:	bl	18c0 <EVP_CIPHER_CTX_encrypting@plt>
    22e8:	add	x23, sp, #0xe0
    22ec:	adrp	x1, 3000 <bind_engine@@Base+0x8a8>
    22f0:	stp	xzr, xzr, [sp, #240]
    22f4:	mov	x9, #0x14                  	// #20
    22f8:	ldr	d1, [x1, #88]
    22fc:	adrp	x1, 3000 <bind_engine@@Base+0x8a8>
    2300:	stp	xzr, xzr, [x23, #32]
    2304:	mov	x8, #0x24                  	// #36
    2308:	ldr	d0, [x1, #96]
    230c:	mov	w7, #0x10                  	// #16
    2310:	str	x9, [sp, #224]
    2314:	mov	x10, #0x40                  	// #64
    2318:	str	w0, [sp, #240]
    231c:	add	x0, sp, #0x24
    2320:	str	x8, [sp, #248]
    2324:	mov	w4, #0x8000                	// #32768
    2328:	str	w7, [sp, #264]
    232c:	add	x26, sp, #0xa0
    2330:	stp	xzr, xzr, [x23, #48]
    2334:	add	x22, sp, #0x90
    2338:	mov	x27, #0x1                   	// #1
    233c:	stp	xzr, xzr, [sp, #160]
    2340:	mov	x1, x26
    2344:	mov	w2, #0x0                   	// #0
    2348:	stp	xzr, xzr, [sp, #176]
    234c:	stp	x23, x10, [sp, #192]
    2350:	str	xzr, [sp, #208]
    2354:	str	d1, [sp, #232]
    2358:	str	d0, [sp, #256]
    235c:	ldp	x8, x9, [x28]
    2360:	str	w4, [sp, #208]
    2364:	stp	x8, x9, [x0, #232]
    2368:	ldr	w0, [x25, #4]
    236c:	stp	x21, x20, [sp, #144]
    2370:	stp	x22, x27, [sp, #176]
    2374:	bl	1850 <sendmsg@plt>
    2378:	tbnz	x0, #63, 2588 <ASYNC_WAIT_CTX_get_fd@plt+0xcb8>
    237c:	cmp	x0, x20
    2380:	b.ne	24d8 <ASYNC_WAIT_CTX_get_fd@plt+0xc08>  // b.any
    2384:	ldr	w0, [x25, #20]
    2388:	add	x21, x25, #0x10
    238c:	ldr	w28, [x25, #4]
    2390:	str	xzr, [sp, #144]
    2394:	stp	xzr, xzr, [sp, #160]
    2398:	cbnz	w0, 23dc <ASYNC_WAIT_CTX_get_fd@plt+0xb0c>
    239c:	str	xzr, [sp, #224]
    23a0:	bl	1640 <ASYNC_get_current_job@plt>
    23a4:	cbz	x0, 25cc <ASYNC_WAIT_CTX_get_fd@plt+0xcfc>
    23a8:	bl	1790 <ASYNC_get_wait_ctx@plt>
    23ac:	mov	x27, x0
    23b0:	cbz	x0, 24d8 <ASYNC_WAIT_CTX_get_fd@plt+0xc08>
    23b4:	adrp	x4, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    23b8:	add	x4, x4, #0xf18
    23bc:	mov	x1, x4
    23c0:	mov	x3, x23
    23c4:	mov	x2, x21
    23c8:	str	x4, [sp, #120]
    23cc:	bl	18d0 <ASYNC_WAIT_CTX_get_fd@plt>
    23d0:	cbz	w0, 2610 <ASYNC_WAIT_CTX_get_fd@plt+0xd40>
    23d4:	mov	w0, #0x2                   	// #2
    23d8:	str	w0, [x21, #4]
    23dc:	add	x4, x25, #0x40
    23e0:	str	x4, [sp, #136]
    23e4:	stp	xzr, xzr, [x25, #64]
    23e8:	mov	w7, #0x1                   	// #1
    23ec:	ldr	w5, [x25, #16]
    23f0:	stp	xzr, xzr, [x25, #80]
    23f4:	add	x27, sp, #0x88
    23f8:	mov	x3, x27
    23fc:	stp	xzr, xzr, [x25, #112]
    2400:	mov	x2, #0x1                   	// #1
    2404:	mov	x0, #0x2                   	// #2
    2408:	ldr	x1, [x21, #8]
    240c:	str	w28, [x25, #84]
    2410:	stp	x19, x20, [x25, #88]
    2414:	str	xzr, [x25, #104]
    2418:	stp	w7, w5, [x25, #120]
    241c:	str	wzr, [sp, #120]
    2420:	bl	1720 <syscall@plt>
    2424:	tbnz	w0, #31, 25f0 <ASYNC_WAIT_CTX_get_fd@plt+0xd20>
    2428:	bl	1870 <ASYNC_pause_job@plt>
    242c:	ldr	w0, [x21]
    2430:	mov	x1, x22
    2434:	mov	x2, #0x8                   	// #8
    2438:	bl	1700 <read@plt>
    243c:	tbnz	w0, #31, 24f8 <ASYNC_WAIT_CTX_get_fd@plt+0xc28>
    2440:	ldr	x0, [sp, #144]
    2444:	cbz	x0, 2428 <ASYNC_WAIT_CTX_get_fd@plt+0xb58>
    2448:	ldr	x1, [x21, #8]
    244c:	mov	x3, #0x1                   	// #1
    2450:	mov	x5, x26
    2454:	mov	x2, x3
    2458:	mov	x4, x23
    245c:	mov	x0, #0x4                   	// #4
    2460:	bl	1720 <syscall@plt>
    2464:	cmp	w0, #0x0
    2468:	b.le	25a8 <ASYNC_WAIT_CTX_get_fd@plt+0xcd8>
    246c:	ldr	x1, [sp, #240]
    2470:	mov	x3, x27
    2474:	ldr	w4, [sp, #120]
    2478:	mov	x2, #0x1                   	// #1
    247c:	mov	x0, #0x2                   	// #2
    2480:	add	w28, w4, #0x1
    2484:	tbz	x1, #63, 2538 <ASYNC_WAIT_CTX_get_fd@plt+0xc68>
    2488:	cmn	x1, #0x10
    248c:	b.ne	24d8 <ASYNC_WAIT_CTX_get_fd@plt+0xc08>  // b.any
    2490:	str	w28, [sp, #120]
    2494:	cmp	w4, #0x2
    2498:	b.gt	24d8 <ASYNC_WAIT_CTX_get_fd@plt+0xc08>
    249c:	ldr	x1, [x21, #8]
    24a0:	bl	1720 <syscall@plt>
    24a4:	tbz	w0, #31, 2428 <ASYNC_WAIT_CTX_get_fd@plt+0xb58>
    24a8:	adrp	x0, 13000 <bind_engine@@Base+0x108a8>
    24ac:	mov	w4, w28
    24b0:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    24b4:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    24b8:	ldr	x0, [x0, #4064]
    24bc:	add	x2, x2, #0xbb8
    24c0:	add	x1, x1, #0xe30
    24c4:	mov	w3, #0x128                 	// #296
    24c8:	ldr	x0, [x0]
    24cc:	bl	1670 <fprintf@plt>
    24d0:	mov	x0, #0x0                   	// #0
    24d4:	bl	1710 <perror@plt>
    24d8:	mov	w0, #0x0                   	// #0
    24dc:	ldp	x19, x20, [sp, #16]
    24e0:	ldp	x21, x22, [sp, #32]
    24e4:	ldp	x23, x24, [sp, #48]
    24e8:	ldp	x25, x26, [sp, #64]
    24ec:	ldp	x27, x28, [sp, #80]
    24f0:	ldp	x29, x30, [sp], #288
    24f4:	ret
    24f8:	bl	16f0 <__errno_location@plt>
    24fc:	ldr	w0, [x0]
    2500:	cmp	w0, #0xb
    2504:	b.eq	2428 <ASYNC_WAIT_CTX_get_fd@plt+0xb58>  // b.none
    2508:	adrp	x0, 13000 <bind_engine@@Base+0x108a8>
    250c:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2510:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2514:	add	x2, x2, #0xbb8
    2518:	ldr	x0, [x0, #4064]
    251c:	add	x1, x1, #0xe00
    2520:	mov	w3, #0x10f                 	// #271
    2524:	ldr	x0, [x0]
    2528:	bl	1670 <fprintf@plt>
    252c:	mov	x0, #0x0                   	// #0
    2530:	bl	1710 <perror@plt>
    2534:	b	24d8 <ASYNC_WAIT_CTX_get_fd@plt+0xc08>
    2538:	mov	x0, x24
    253c:	bl	18c0 <EVP_CIPHER_CTX_encrypting@plt>
    2540:	cbz	w0, 2568 <ASYNC_WAIT_CTX_get_fd@plt+0xc98>
    2544:	add	x19, x19, x20
    2548:	mov	x0, x24
    254c:	bl	1880 <EVP_CIPHER_CTX_iv_noconst@plt>
    2550:	mov	x1, x0
    2554:	mov	w0, #0x1                   	// #1
    2558:	ldp	x2, x3, [x19, #-16]
    255c:	stp	x2, x3, [x1]
    2560:	ldp	x27, x28, [sp, #80]
    2564:	b	229c <ASYNC_WAIT_CTX_get_fd@plt+0x9cc>
    2568:	mov	x0, x24
    256c:	bl	1880 <EVP_CIPHER_CTX_iv_noconst@plt>
    2570:	mov	x1, x0
    2574:	mov	w0, #0x1                   	// #1
    2578:	ldp	x2, x3, [sp, #96]
    257c:	stp	x2, x3, [x1]
    2580:	ldp	x27, x28, [sp, #80]
    2584:	b	229c <ASYNC_WAIT_CTX_get_fd@plt+0x9cc>
    2588:	adrp	x0, 13000 <bind_engine@@Base+0x108a8>
    258c:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2590:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2594:	add	x2, x2, #0xbb8
    2598:	ldr	x0, [x0, #4064]
    259c:	add	x1, x1, #0xd68
    25a0:	mov	w3, #0x1e0                 	// #480
    25a4:	b	2524 <ASYNC_WAIT_CTX_get_fd@plt+0xc54>
    25a8:	b.eq	2428 <ASYNC_WAIT_CTX_get_fd@plt+0xb58>  // b.none
    25ac:	adrp	x0, 13000 <bind_engine@@Base+0x108a8>
    25b0:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    25b4:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    25b8:	add	x2, x2, #0xbb8
    25bc:	ldr	x0, [x0, #4064]
    25c0:	add	x1, x1, #0xe68
    25c4:	mov	w3, #0x13a                 	// #314
    25c8:	b	2524 <ASYNC_WAIT_CTX_get_fd@plt+0xc54>
    25cc:	mov	w2, #0x0                   	// #0
    25d0:	mov	w1, #0x0                   	// #0
    25d4:	mov	x0, #0x13                  	// #19
    25d8:	bl	1720 <syscall@plt>
    25dc:	str	w0, [x25, #16]
    25e0:	cmn	w0, #0x1
    25e4:	b.eq	26cc <ASYNC_WAIT_CTX_get_fd@plt+0xdfc>  // b.none
    25e8:	str	w27, [x21, #4]
    25ec:	b	23dc <ASYNC_WAIT_CTX_get_fd@plt+0xb0c>
    25f0:	adrp	x0, 13000 <bind_engine@@Base+0x108a8>
    25f4:	adrp	x2, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    25f8:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    25fc:	add	x2, x2, #0xbb8
    2600:	ldr	x0, [x0, #4064]
    2604:	add	x1, x1, #0xdd8
    2608:	mov	w3, #0x102                 	// #258
    260c:	b	2524 <ASYNC_WAIT_CTX_get_fd@plt+0xc54>
    2610:	mov	w2, #0x0                   	// #0
    2614:	mov	w1, #0x0                   	// #0
    2618:	mov	x0, #0x13                  	// #19
    261c:	bl	1720 <syscall@plt>
    2620:	str	w0, [x25, #16]
    2624:	cmn	w0, #0x1
    2628:	ldr	x4, [sp, #120]
    262c:	b.eq	2670 <ASYNC_WAIT_CTX_get_fd@plt+0xda0>  // b.none
    2630:	ldr	x3, [sp, #224]
    2634:	mov	w2, w0
    2638:	mov	x1, x4
    263c:	mov	x0, x27
    2640:	adrp	x4, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    2644:	add	x4, x4, #0x9c0
    2648:	bl	16b0 <ASYNC_WAIT_CTX_set_wait_fd@plt>
    264c:	cbz	w0, 2664 <ASYNC_WAIT_CTX_get_fd@plt+0xd94>
    2650:	ldr	w0, [x25, #16]
    2654:	mov	w2, #0x800                 	// #2048
    2658:	mov	w1, #0x4                   	// #4
    265c:	bl	18b0 <fcntl@plt>
    2660:	b	23d4 <ASYNC_WAIT_CTX_get_fd@plt+0xb04>
    2664:	ldr	w0, [x25, #16]
    2668:	bl	1890 <close@plt>
    266c:	b	24d8 <ASYNC_WAIT_CTX_get_fd@plt+0xc08>
    2670:	adrp	x0, 13000 <bind_engine@@Base+0x108a8>
    2674:	adrp	x20, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2678:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    267c:	add	x2, x20, #0xbb8
    2680:	ldr	x0, [x0, #4064]
    2684:	add	x1, x1, #0xda8
    2688:	mov	w3, #0xa2                  	// #162
    268c:	adrp	x19, 14000 <bind_engine@@Base+0x118a8>
    2690:	add	x21, x19, #0x334
    2694:	ldr	x0, [x0]
    2698:	bl	1670 <fprintf@plt>
    269c:	mov	x0, #0x0                   	// #0
    26a0:	bl	1710 <perror@plt>
    26a4:	ldr	w0, [x21, #4]
    26a8:	cbz	w0, 2728 <ASYNC_WAIT_CTX_get_fd@plt+0xe58>
    26ac:	add	x19, x19, #0x334
    26b0:	add	x3, x20, #0xbb8
    26b4:	mov	w4, #0xa3                  	// #163
    26b8:	mov	w2, #0x6c                  	// #108
    26bc:	mov	w1, #0x67                  	// #103
    26c0:	ldr	w0, [x19, #4]
    26c4:	bl	17a0 <ERR_put_error@plt>
    26c8:	b	24d8 <ASYNC_WAIT_CTX_get_fd@plt+0xc08>
    26cc:	adrp	x0, 13000 <bind_engine@@Base+0x108a8>
    26d0:	adrp	x20, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    26d4:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    26d8:	add	x2, x20, #0xbb8
    26dc:	ldr	x0, [x0, #4064]
    26e0:	add	x1, x1, #0xda8
    26e4:	mov	w3, #0xba                  	// #186
    26e8:	adrp	x19, 14000 <bind_engine@@Base+0x118a8>
    26ec:	add	x21, x19, #0x334
    26f0:	ldr	x0, [x0]
    26f4:	bl	1670 <fprintf@plt>
    26f8:	mov	x0, #0x0                   	// #0
    26fc:	bl	1710 <perror@plt>
    2700:	ldr	w0, [x21, #4]
    2704:	cbz	w0, 2734 <ASYNC_WAIT_CTX_get_fd@plt+0xe64>
    2708:	add	x19, x19, #0x334
    270c:	add	x3, x20, #0xbb8
    2710:	mov	w4, #0xbb                  	// #187
    2714:	mov	w2, #0x6c                  	// #108
    2718:	mov	w1, #0x67                  	// #103
    271c:	ldr	w0, [x19, #4]
    2720:	bl	17a0 <ERR_put_error@plt>
    2724:	b	24d8 <ASYNC_WAIT_CTX_get_fd@plt+0xc08>
    2728:	bl	16d0 <ERR_get_next_error_library@plt>
    272c:	str	w0, [x21, #4]
    2730:	b	26ac <ASYNC_WAIT_CTX_get_fd@plt+0xddc>
    2734:	bl	16d0 <ERR_get_next_error_library@plt>
    2738:	str	w0, [x21, #4]
    273c:	b	2708 <ASYNC_WAIT_CTX_get_fd@plt+0xe38>

0000000000002740 <v_check@@Base>:
    2740:	mov	w1, #0x2ffff               	// #196607
    2744:	cmp	x0, x1
    2748:	mov	x0, #0x30000               	// #196608
    274c:	csel	x0, x0, xzr, hi  // hi = pmore
    2750:	ret
    2754:	nop

0000000000002758 <bind_engine@@Base>:
    2758:	stp	x29, x30, [sp, #-48]!
    275c:	mov	x29, sp
    2760:	stp	x19, x20, [sp, #16]
    2764:	mov	x19, x2
    2768:	mov	x20, x1
    276c:	stp	x21, x22, [sp, #32]
    2770:	mov	x21, x0
    2774:	bl	1610 <ENGINE_get_static_state@plt>
    2778:	ldr	x1, [x19]
    277c:	cmp	x1, x0
    2780:	b.eq	2790 <bind_engine@@Base+0x38>  // b.none
    2784:	ldp	x0, x1, [x19, #8]
    2788:	ldr	x2, [x19, #24]
    278c:	bl	1680 <CRYPTO_set_mem_functions@plt>
    2790:	cbz	x20, 27a8 <bind_engine@@Base+0x50>
    2794:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2798:	mov	x0, x20
    279c:	add	x1, x1, #0xf18
    27a0:	bl	17d0 <strcmp@plt>
    27a4:	cbnz	w0, 27b0 <bind_engine@@Base+0x58>
    27a8:	bl	1ae8 <ASYNC_WAIT_CTX_get_fd@plt+0x218>
    27ac:	cbnz	w0, 27c8 <bind_engine@@Base+0x70>
    27b0:	mov	w20, #0x0                   	// #0
    27b4:	mov	w0, w20
    27b8:	ldp	x19, x20, [sp, #16]
    27bc:	ldp	x21, x22, [sp, #32]
    27c0:	ldp	x29, x30, [sp], #48
    27c4:	ret
    27c8:	adrp	x19, 14000 <bind_engine@@Base+0x118a8>
    27cc:	add	x20, x19, #0x334
    27d0:	ldr	w0, [x20, #4]
    27d4:	cbz	w0, 293c <bind_engine@@Base+0x1e4>
    27d8:	ldr	w1, [x19, #820]
    27dc:	add	x22, x19, #0x334
    27e0:	cbz	w1, 2914 <bind_engine@@Base+0x1bc>
    27e4:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    27e8:	mov	x0, x21
    27ec:	add	x1, x1, #0xf18
    27f0:	bl	15f0 <ENGINE_set_id@plt>
    27f4:	cbz	w0, 280c <bind_engine@@Base+0xb4>
    27f8:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    27fc:	mov	x0, x21
    2800:	add	x1, x1, #0xe98
    2804:	bl	1730 <ENGINE_set_name@plt>
    2808:	cbnz	w0, 2848 <bind_engine@@Base+0xf0>
    280c:	add	x19, x19, #0x334
    2810:	ldr	w0, [x19, #4]
    2814:	cbz	w0, 2948 <bind_engine@@Base+0x1f0>
    2818:	adrp	x3, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    281c:	mov	w4, #0x2d2                 	// #722
    2820:	add	x3, x3, #0xbb8
    2824:	mov	w2, #0x64                  	// #100
    2828:	mov	w1, #0x69                  	// #105
    282c:	mov	w20, #0x0                   	// #0
    2830:	bl	17a0 <ERR_put_error@plt>
    2834:	mov	w0, w20
    2838:	ldp	x19, x20, [sp, #16]
    283c:	ldp	x21, x22, [sp, #32]
    2840:	ldp	x29, x30, [sp], #48
    2844:	ret
    2848:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    284c:	mov	x0, x21
    2850:	add	x1, x1, #0x9c8
    2854:	bl	16c0 <ENGINE_set_destroy_function@plt>
    2858:	cbz	w0, 280c <bind_engine@@Base+0xb4>
    285c:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    2860:	mov	x0, x21
    2864:	add	x1, x1, #0x9b8
    2868:	bl	1760 <ENGINE_set_init_function@plt>
    286c:	cbz	w0, 280c <bind_engine@@Base+0xb4>
    2870:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    2874:	mov	x0, x21
    2878:	add	x1, x1, #0xae0
    287c:	bl	1840 <ENGINE_set_finish_function@plt>
    2880:	cbz	w0, 280c <bind_engine@@Base+0xb4>
    2884:	adrp	x22, 14000 <bind_engine@@Base+0x118a8>
    2888:	add	x1, x22, #0x1a8
    288c:	ldr	w0, [x1, #48]
    2890:	cmp	w0, #0x1a7
    2894:	b.eq	298c <bind_engine@@Base+0x234>  // b.none
    2898:	cmp	w0, #0x1ab
    289c:	add	x20, x1, #0x20
    28a0:	b.ne	2954 <bind_engine@@Base+0x1fc>  // b.any
    28a4:	ldr	x1, [x20, #8]
    28a8:	cbz	x1, 29a4 <bind_engine@@Base+0x24c>
    28ac:	add	x1, x22, #0x1a8
    28b0:	ldr	w0, [x1, #52]
    28b4:	cmp	w0, #0x1a7
    28b8:	b.eq	2994 <bind_engine@@Base+0x23c>  // b.none
    28bc:	cmp	w0, #0x1ab
    28c0:	add	x20, x1, #0x20
    28c4:	b.ne	296c <bind_engine@@Base+0x214>  // b.any
    28c8:	ldr	x1, [x20, #8]
    28cc:	cbz	x1, 2a78 <bind_engine@@Base+0x320>
    28d0:	add	x22, x22, #0x1a8
    28d4:	ldr	w0, [x22, #56]
    28d8:	cmp	w0, #0x1a7
    28dc:	b.eq	299c <bind_engine@@Base+0x244>  // b.none
    28e0:	cmp	w0, #0x1ab
    28e4:	add	x20, x22, #0x20
    28e8:	b.ne	297c <bind_engine@@Base+0x224>  // b.any
    28ec:	ldr	x1, [x20, #8]
    28f0:	cbz	x1, 2b00 <bind_engine@@Base+0x3a8>
    28f4:	mov	x0, x21
    28f8:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    28fc:	add	x1, x1, #0xce0
    2900:	bl	1810 <ENGINE_set_ciphers@plt>
    2904:	mov	w20, w0
    2908:	cbz	w0, 2a50 <bind_engine@@Base+0x2f8>
    290c:	mov	w20, #0x1                   	// #1
    2910:	b	27b4 <bind_engine@@Base+0x5c>
    2914:	adrp	x20, 14000 <bind_engine@@Base+0x118a8>
    2918:	add	x20, x20, #0x1f0
    291c:	mov	x1, x20
    2920:	bl	17b0 <ERR_load_strings@plt>
    2924:	ldr	w0, [x22, #4]
    2928:	add	x1, x20, #0x70
    292c:	bl	17b0 <ERR_load_strings@plt>
    2930:	mov	w0, #0x1                   	// #1
    2934:	str	w0, [x19, #820]
    2938:	b	27e4 <bind_engine@@Base+0x8c>
    293c:	bl	16d0 <ERR_get_next_error_library@plt>
    2940:	str	w0, [x20, #4]
    2944:	b	27d8 <bind_engine@@Base+0x80>
    2948:	bl	16d0 <ERR_get_next_error_library@plt>
    294c:	str	w0, [x19, #4]
    2950:	b	2818 <bind_engine@@Base+0xc0>
    2954:	mov	x20, x1
    2958:	cmp	w0, #0x1a3
    295c:	b.eq	28a4 <bind_engine@@Base+0x14c>  // b.none
    2960:	mov	x0, #0x0                   	// #0
    2964:	ldr	x0, [x0, #8]
    2968:	brk	#0x3e8
    296c:	mov	x20, x1
    2970:	cmp	w0, #0x1a3
    2974:	b.eq	28c8 <bind_engine@@Base+0x170>  // b.none
    2978:	b	2960 <bind_engine@@Base+0x208>
    297c:	mov	x20, x22
    2980:	cmp	w0, #0x1a3
    2984:	b.eq	28ec <bind_engine@@Base+0x194>  // b.none
    2988:	b	2960 <bind_engine@@Base+0x208>
    298c:	add	x20, x1, #0x10
    2990:	b	28a4 <bind_engine@@Base+0x14c>
    2994:	add	x20, x1, #0x10
    2998:	b	28c8 <bind_engine@@Base+0x170>
    299c:	add	x20, x22, #0x10
    29a0:	b	28ec <bind_engine@@Base+0x194>
    29a4:	ldr	w2, [x20]
    29a8:	mov	w1, #0x10                  	// #16
    29ac:	bl	15a0 <EVP_CIPHER_meth_new@plt>
    29b0:	str	x0, [x20, #8]
    29b4:	cbz	x0, 2b88 <bind_engine@@Base+0x430>
    29b8:	mov	w1, #0x10                  	// #16
    29bc:	bl	15d0 <EVP_CIPHER_meth_set_iv_length@plt>
    29c0:	cbnz	w0, 29e8 <bind_engine@@Base+0x290>
    29c4:	ldr	x0, [x20, #8]
    29c8:	bl	1780 <EVP_CIPHER_meth_free@plt>
    29cc:	str	xzr, [x20, #8]
    29d0:	add	x19, x19, #0x334
    29d4:	ldr	w0, [x19, #4]
    29d8:	cbz	w0, 2b9c <bind_engine@@Base+0x444>
    29dc:	adrp	x3, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    29e0:	mov	w4, #0x2dd                 	// #733
    29e4:	b	2820 <bind_engine@@Base+0xc8>
    29e8:	ldr	x0, [x20, #8]
    29ec:	mov	x1, #0x1002                	// #4098
    29f0:	bl	1800 <EVP_CIPHER_meth_set_flags@plt>
    29f4:	cbz	w0, 29c4 <bind_engine@@Base+0x26c>
    29f8:	ldr	x0, [x20, #8]
    29fc:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    2a00:	add	x1, x1, #0xe50
    2a04:	bl	16a0 <EVP_CIPHER_meth_set_init@plt>
    2a08:	cbz	w0, 29c4 <bind_engine@@Base+0x26c>
    2a0c:	ldr	x0, [x20, #8]
    2a10:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2a14:	add	x1, x1, #0x238
    2a18:	bl	1820 <EVP_CIPHER_meth_set_do_cipher@plt>
    2a1c:	cbz	w0, 29c4 <bind_engine@@Base+0x26c>
    2a20:	ldr	x0, [x20, #8]
    2a24:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    2a28:	add	x1, x1, #0xa50
    2a2c:	bl	15b0 <EVP_CIPHER_meth_set_cleanup@plt>
    2a30:	cbz	w0, 29c4 <bind_engine@@Base+0x26c>
    2a34:	ldr	x0, [x20, #8]
    2a38:	mov	w1, #0x80                  	// #128
    2a3c:	bl	18a0 <EVP_CIPHER_meth_set_impl_ctx_size@plt>
    2a40:	cbz	w0, 29c4 <bind_engine@@Base+0x26c>
    2a44:	ldr	x0, [x20, #8]
    2a48:	cbnz	x0, 28ac <bind_engine@@Base+0x154>
    2a4c:	b	29d0 <bind_engine@@Base+0x278>
    2a50:	add	x19, x19, #0x334
    2a54:	ldr	w0, [x19, #4]
    2a58:	cbz	w0, 2b90 <bind_engine@@Base+0x438>
    2a5c:	adrp	x3, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2a60:	mov	w4, #0x2e3                 	// #739
    2a64:	add	x3, x3, #0xbb8
    2a68:	mov	w2, #0x64                  	// #100
    2a6c:	mov	w1, #0x69                  	// #105
    2a70:	bl	17a0 <ERR_put_error@plt>
    2a74:	b	27b4 <bind_engine@@Base+0x5c>
    2a78:	ldr	w2, [x20]
    2a7c:	mov	w1, #0x10                  	// #16
    2a80:	bl	15a0 <EVP_CIPHER_meth_new@plt>
    2a84:	str	x0, [x20, #8]
    2a88:	cbz	x0, 2b88 <bind_engine@@Base+0x430>
    2a8c:	mov	w1, #0x10                  	// #16
    2a90:	bl	15d0 <EVP_CIPHER_meth_set_iv_length@plt>
    2a94:	cbz	w0, 29c4 <bind_engine@@Base+0x26c>
    2a98:	ldr	x0, [x20, #8]
    2a9c:	mov	x1, #0x1002                	// #4098
    2aa0:	bl	1800 <EVP_CIPHER_meth_set_flags@plt>
    2aa4:	cbz	w0, 29c4 <bind_engine@@Base+0x26c>
    2aa8:	ldr	x0, [x20, #8]
    2aac:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    2ab0:	add	x1, x1, #0xe50
    2ab4:	bl	16a0 <EVP_CIPHER_meth_set_init@plt>
    2ab8:	cbz	w0, 29c4 <bind_engine@@Base+0x26c>
    2abc:	ldr	x0, [x20, #8]
    2ac0:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2ac4:	add	x1, x1, #0x238
    2ac8:	bl	1820 <EVP_CIPHER_meth_set_do_cipher@plt>
    2acc:	cbz	w0, 29c4 <bind_engine@@Base+0x26c>
    2ad0:	ldr	x0, [x20, #8]
    2ad4:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    2ad8:	add	x1, x1, #0xa50
    2adc:	bl	15b0 <EVP_CIPHER_meth_set_cleanup@plt>
    2ae0:	cbz	w0, 29c4 <bind_engine@@Base+0x26c>
    2ae4:	ldr	x0, [x20, #8]
    2ae8:	mov	w1, #0x80                  	// #128
    2aec:	bl	18a0 <EVP_CIPHER_meth_set_impl_ctx_size@plt>
    2af0:	cbz	w0, 29c4 <bind_engine@@Base+0x26c>
    2af4:	ldr	x0, [x20, #8]
    2af8:	cbnz	x0, 28d0 <bind_engine@@Base+0x178>
    2afc:	b	29d0 <bind_engine@@Base+0x278>
    2b00:	ldr	w2, [x20]
    2b04:	mov	w1, #0x10                  	// #16
    2b08:	bl	15a0 <EVP_CIPHER_meth_new@plt>
    2b0c:	str	x0, [x20, #8]
    2b10:	cbz	x0, 2b88 <bind_engine@@Base+0x430>
    2b14:	mov	w1, #0x10                  	// #16
    2b18:	bl	15d0 <EVP_CIPHER_meth_set_iv_length@plt>
    2b1c:	cbz	w0, 29c4 <bind_engine@@Base+0x26c>
    2b20:	ldr	x0, [x20, #8]
    2b24:	mov	x1, #0x1002                	// #4098
    2b28:	bl	1800 <EVP_CIPHER_meth_set_flags@plt>
    2b2c:	cbz	w0, 29c4 <bind_engine@@Base+0x26c>
    2b30:	ldr	x0, [x20, #8]
    2b34:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    2b38:	add	x1, x1, #0xe50
    2b3c:	bl	16a0 <EVP_CIPHER_meth_set_init@plt>
    2b40:	cbz	w0, 29c4 <bind_engine@@Base+0x26c>
    2b44:	ldr	x0, [x20, #8]
    2b48:	adrp	x1, 2000 <ASYNC_WAIT_CTX_get_fd@plt+0x730>
    2b4c:	add	x1, x1, #0x238
    2b50:	bl	1820 <EVP_CIPHER_meth_set_do_cipher@plt>
    2b54:	cbz	w0, 29c4 <bind_engine@@Base+0x26c>
    2b58:	ldr	x0, [x20, #8]
    2b5c:	adrp	x1, 1000 <EVP_CIPHER_meth_new@plt-0x5a0>
    2b60:	add	x1, x1, #0xa50
    2b64:	bl	15b0 <EVP_CIPHER_meth_set_cleanup@plt>
    2b68:	cbz	w0, 29c4 <bind_engine@@Base+0x26c>
    2b6c:	ldr	x0, [x20, #8]
    2b70:	mov	w1, #0x80                  	// #128
    2b74:	bl	18a0 <EVP_CIPHER_meth_set_impl_ctx_size@plt>
    2b78:	cbz	w0, 29c4 <bind_engine@@Base+0x26c>
    2b7c:	ldr	x0, [x20, #8]
    2b80:	cbnz	x0, 28f4 <bind_engine@@Base+0x19c>
    2b84:	b	29d0 <bind_engine@@Base+0x278>
    2b88:	mov	x0, #0x0                   	// #0
    2b8c:	b	29c8 <bind_engine@@Base+0x270>
    2b90:	bl	16d0 <ERR_get_next_error_library@plt>
    2b94:	str	w0, [x19, #4]
    2b98:	b	2a5c <bind_engine@@Base+0x304>
    2b9c:	bl	16d0 <ERR_get_next_error_library@plt>
    2ba0:	str	w0, [x19, #4]
    2ba4:	b	29dc <bind_engine@@Base+0x284>

Disassembly of section .fini:

0000000000002ba8 <.fini>:
    2ba8:	stp	x29, x30, [sp, #-16]!
    2bac:	mov	x29, sp
    2bb0:	ldp	x29, x30, [sp], #16
    2bb4:	ret
