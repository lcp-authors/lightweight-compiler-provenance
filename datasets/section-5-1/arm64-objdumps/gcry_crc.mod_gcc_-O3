
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_crc.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x590>:
   0:	mov	w1, #0xffffffff            	// #-1
   4:	str	w1, [x0]
   8:	ret
   c:	nop
  10:	add	x0, x0, #0x4
  14:	ret
  18:	ldr	w1, [x0]
  1c:	mvn	w1, w1
  20:	str	w1, [x0]
  24:	rev	w1, w1
  28:	str	w1, [x0, #4]
  2c:	ret
  30:	str	wzr, [x0]
  34:	ret
  38:	ldr	w1, [x0]
  3c:	rev	w1, w1
  40:	str	w1, [x0, #4]
  44:	ret
  48:	mov	w1, #0x4b7                 	// #1207
  4c:	movk	w1, #0xce, lsl #16
  50:	str	w1, [x0]
  54:	ret
  58:	ldr	w1, [x0]
  5c:	ldrh	w2, [x0]
  60:	and	w1, w1, #0xffffff
  64:	str	w1, [x0]
  68:	strh	w2, [x0, #4]
  6c:	lsr	w1, w1, #16
  70:	strb	w1, [x0, #6]
  74:	strb	wzr, [x0, #7]
  78:	ret
  7c:	nop
  80:	cmp	x1, #0x0
  84:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  88:	b.eq	2f0 <grub_mod_init-0x2a0>  // b.none
  8c:	ldr	w4, [x0]
  90:	cmp	x2, #0xf
  94:	b.ls	2f4 <grub_mod_init-0x29c>  // b.plast
  98:	sub	x8, x2, #0x10
  9c:	adrp	x3, 0 <grub_mod_init-0x590>
  a0:	and	x8, x8, #0xfffffffffffffff0
  a4:	add	x8, x8, #0x10
  a8:	ldr	x3, [x3]
  ac:	add	x8, x1, x8
  b0:	ldp	w7, w13, [x1]
  b4:	ldp	w12, w10, [x1, #8]
  b8:	eor	w7, w4, w7
  bc:	add	x1, x1, #0x10
  c0:	ubfx	x11, x7, #8, #8
  c4:	ubfx	x9, x7, #16, #8
  c8:	add	x11, x11, #0x200
  cc:	add	x9, x9, #0x100
  d0:	lsr	w4, w7, #24
  d4:	add	x7, x3, w7, uxtb #2
  d8:	cmp	x1, x8
  dc:	ldr	w5, [x3, x9, lsl #2]
  e0:	ldr	w6, [x3, x11, lsl #2]
  e4:	ldr	w4, [x3, x4, lsl #2]
  e8:	eor	w6, w6, w5
  ec:	ldr	w5, [x7, #3072]
  f0:	eor	w4, w4, w13
  f4:	eor	w6, w6, w4
  f8:	eor	w6, w6, w5
  fc:	ubfx	x9, x6, #8, #8
 100:	ubfx	x7, x6, #16, #8
 104:	add	x9, x9, #0x200
 108:	add	x7, x7, #0x100
 10c:	lsr	w11, w6, #24
 110:	add	x6, x3, w6, uxtb #2
 114:	ldr	w4, [x3, x7, lsl #2]
 118:	ldr	w5, [x3, x9, lsl #2]
 11c:	ldr	w7, [x3, x11, lsl #2]
 120:	eor	w5, w5, w4
 124:	ldr	w4, [x6, #3072]
 128:	eor	w6, w7, w12
 12c:	eor	w5, w5, w6
 130:	eor	w5, w5, w4
 134:	ubfx	x7, x5, #8, #8
 138:	ubfx	x6, x5, #16, #8
 13c:	lsr	w9, w5, #24
 140:	add	x7, x7, #0x200
 144:	add	x6, x6, #0x100
 148:	add	x5, x3, w5, uxtb #2
 14c:	ldr	w4, [x3, x7, lsl #2]
 150:	ldr	w7, [x3, x6, lsl #2]
 154:	ldr	w6, [x3, x9, lsl #2]
 158:	eor	w4, w4, w7
 15c:	ldr	w7, [x5, #3072]
 160:	eor	w5, w6, w10
 164:	eor	w4, w4, w5
 168:	eor	w4, w4, w7
 16c:	ubfx	x6, x4, #8, #8
 170:	ubfx	x5, x4, #16, #8
 174:	add	x6, x6, #0x200
 178:	add	x5, x5, #0x100
 17c:	add	x9, x3, w4, uxtb #2
 180:	lsr	w4, w4, #24
 184:	ldr	w7, [x3, x6, lsl #2]
 188:	ldr	w6, [x3, x5, lsl #2]
 18c:	ldr	w5, [x3, x4, lsl #2]
 190:	ldr	w4, [x9, #3072]
 194:	eor	w7, w7, w6
 198:	eor	w4, w4, w5
 19c:	eor	w4, w7, w4
 1a0:	b.ne	b0 <grub_mod_init-0x4e0>  // b.any
 1a4:	and	x2, x2, #0xf
 1a8:	cmp	x2, #0x3
 1ac:	b.ls	294 <grub_mod_init-0x2fc>  // b.plast
 1b0:	adrp	x3, 0 <grub_mod_init-0x590>
 1b4:	ldr	w7, [x8]
 1b8:	sub	x1, x2, #0x4
 1bc:	ldr	x5, [x3]
 1c0:	eor	w7, w4, w7
 1c4:	cmp	x1, #0x3
 1c8:	ubfx	x4, x7, #8, #8
 1cc:	ubfx	x3, x7, #16, #8
 1d0:	add	x3, x3, #0x100
 1d4:	add	x10, x5, w7, uxtb #2
 1d8:	add	x4, x4, #0x200
 1dc:	lsr	w7, w7, #24
 1e0:	ldr	w9, [x5, x3, lsl #2]
 1e4:	ldr	w4, [x5, x4, lsl #2]
 1e8:	ldr	w6, [x5, x7, lsl #2]
 1ec:	ldr	w3, [x10, #3072]
 1f0:	eor	w7, w4, w9
 1f4:	eor	w3, w3, w6
 1f8:	eor	w4, w7, w3
 1fc:	b.ls	284 <grub_mod_init-0x30c>  // b.plast
 200:	ldr	w7, [x8, #4]
 204:	sub	x3, x2, #0x8
 208:	cmp	x3, #0x3
 20c:	eor	w7, w4, w7
 210:	ubfx	x4, x7, #16, #8
 214:	ubfx	x3, x7, #8, #8
 218:	add	x3, x3, #0x200
 21c:	add	x10, x5, w7, uxtb #2
 220:	add	x4, x4, #0x100
 224:	lsr	w7, w7, #24
 228:	ldr	w9, [x5, x3, lsl #2]
 22c:	ldr	w4, [x5, x4, lsl #2]
 230:	ldr	w6, [x5, x7, lsl #2]
 234:	ldr	w3, [x10, #3072]
 238:	eor	w7, w4, w9
 23c:	eor	w3, w3, w6
 240:	eor	w4, w7, w3
 244:	b.ls	284 <grub_mod_init-0x30c>  // b.plast
 248:	ldr	w7, [x8, #8]
 24c:	eor	w7, w4, w7
 250:	ubfx	x3, x7, #8, #8
 254:	ubfx	x4, x7, #16, #8
 258:	add	x4, x4, #0x100
 25c:	add	x9, x5, w7, uxtb #2
 260:	add	x3, x3, #0x200
 264:	lsr	w7, w7, #24
 268:	ldr	w6, [x5, x4, lsl #2]
 26c:	ldr	w3, [x5, x3, lsl #2]
 270:	ldr	w4, [x5, x7, lsl #2]
 274:	ldr	w7, [x9, #3072]
 278:	eor	w3, w3, w6
 27c:	eor	w7, w7, w4
 280:	eor	w4, w7, w3
 284:	and	x1, x1, #0xfffffffffffffffc
 288:	and	x2, x2, #0x3
 28c:	add	x1, x1, #0x4
 290:	add	x8, x8, x1
 294:	cbz	x2, 2ec <grub_mod_init-0x2a4>
 298:	ldrb	w1, [x8]
 29c:	adrp	x3, 0 <grub_mod_init-0x590>
 2a0:	cmp	x2, #0x1
 2a4:	eor	x1, x4, x1
 2a8:	ldr	x3, [x3]
 2ac:	and	x1, x1, #0xff
 2b0:	ldr	w1, [x3, x1, lsl #2]
 2b4:	eor	w4, w1, w4, lsr #8
 2b8:	b.eq	2ec <grub_mod_init-0x2a4>  // b.none
 2bc:	ldrb	w1, [x8, #1]
 2c0:	cmp	x2, #0x2
 2c4:	eor	x1, x4, x1
 2c8:	and	x1, x1, #0xff
 2cc:	ldr	w1, [x3, x1, lsl #2]
 2d0:	eor	w4, w1, w4, lsr #8
 2d4:	b.eq	2ec <grub_mod_init-0x2a4>  // b.none
 2d8:	ldrb	w1, [x8, #2]
 2dc:	eor	x1, x4, x1
 2e0:	and	x1, x1, #0xff
 2e4:	ldr	w1, [x3, x1, lsl #2]
 2e8:	eor	w4, w1, w4, lsr #8
 2ec:	str	w4, [x0]
 2f0:	ret
 2f4:	mov	x8, x1
 2f8:	b	1a8 <grub_mod_init-0x3e8>
 2fc:	nop
	...
 308:	cmp	x1, #0x0
 30c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
 310:	b.eq	578 <grub_mod_init-0x18>  // b.none
 314:	ldr	w4, [x0]
 318:	cmp	x2, #0xf
 31c:	b.ls	57c <grub_mod_init-0x14>  // b.plast
 320:	sub	x8, x2, #0x10
 324:	adrp	x3, 0 <grub_mod_init-0x590>
 328:	and	x8, x8, #0xfffffffffffffff0
 32c:	add	x8, x8, #0x10
 330:	ldr	x3, [x3]
 334:	add	x8, x1, x8
 338:	ldp	w7, w13, [x1]
 33c:	ldp	w12, w10, [x1, #8]
 340:	eor	w7, w4, w7
 344:	add	x1, x1, #0x10
 348:	ubfx	x11, x7, #8, #8
 34c:	ubfx	x9, x7, #16, #8
 350:	add	x11, x11, #0x200
 354:	add	x9, x9, #0x100
 358:	lsr	w4, w7, #24
 35c:	add	x7, x3, w7, uxtb #2
 360:	cmp	x1, x8
 364:	ldr	w5, [x3, x9, lsl #2]
 368:	ldr	w6, [x3, x11, lsl #2]
 36c:	ldr	w4, [x3, x4, lsl #2]
 370:	eor	w6, w6, w5
 374:	ldr	w5, [x7, #3072]
 378:	eor	w4, w4, w13
 37c:	eor	w6, w6, w4
 380:	eor	w6, w6, w5
 384:	ubfx	x9, x6, #8, #8
 388:	ubfx	x7, x6, #16, #8
 38c:	add	x9, x9, #0x200
 390:	add	x7, x7, #0x100
 394:	lsr	w11, w6, #24
 398:	add	x6, x3, w6, uxtb #2
 39c:	ldr	w4, [x3, x7, lsl #2]
 3a0:	ldr	w5, [x3, x9, lsl #2]
 3a4:	ldr	w7, [x3, x11, lsl #2]
 3a8:	eor	w5, w5, w4
 3ac:	ldr	w4, [x6, #3072]
 3b0:	eor	w6, w7, w12
 3b4:	eor	w5, w5, w6
 3b8:	eor	w5, w5, w4
 3bc:	ubfx	x7, x5, #8, #8
 3c0:	ubfx	x6, x5, #16, #8
 3c4:	lsr	w9, w5, #24
 3c8:	add	x7, x7, #0x200
 3cc:	add	x6, x6, #0x100
 3d0:	add	x5, x3, w5, uxtb #2
 3d4:	ldr	w4, [x3, x7, lsl #2]
 3d8:	ldr	w7, [x3, x6, lsl #2]
 3dc:	ldr	w6, [x3, x9, lsl #2]
 3e0:	eor	w4, w4, w7
 3e4:	ldr	w7, [x5, #3072]
 3e8:	eor	w5, w6, w10
 3ec:	eor	w4, w4, w5
 3f0:	eor	w4, w4, w7
 3f4:	ubfx	x6, x4, #8, #8
 3f8:	ubfx	x5, x4, #16, #8
 3fc:	add	x6, x6, #0x200
 400:	add	x5, x5, #0x100
 404:	add	x9, x3, w4, uxtb #2
 408:	lsr	w4, w4, #24
 40c:	ldr	w7, [x3, x6, lsl #2]
 410:	ldr	w6, [x3, x5, lsl #2]
 414:	ldr	w5, [x3, x4, lsl #2]
 418:	ldr	w4, [x9, #3072]
 41c:	eor	w7, w7, w6
 420:	eor	w4, w4, w5
 424:	eor	w4, w7, w4
 428:	b.ne	338 <grub_mod_init-0x258>  // b.any
 42c:	and	x2, x2, #0xf
 430:	cmp	x2, #0x3
 434:	b.ls	51c <grub_mod_init-0x74>  // b.plast
 438:	adrp	x3, 0 <grub_mod_init-0x590>
 43c:	ldr	w7, [x8]
 440:	sub	x1, x2, #0x4
 444:	ldr	x5, [x3]
 448:	eor	w7, w4, w7
 44c:	cmp	x1, #0x3
 450:	ubfx	x4, x7, #8, #8
 454:	ubfx	x3, x7, #16, #8
 458:	add	x3, x3, #0x100
 45c:	add	x10, x5, w7, uxtb #2
 460:	add	x4, x4, #0x200
 464:	lsr	w7, w7, #24
 468:	ldr	w9, [x5, x3, lsl #2]
 46c:	ldr	w4, [x5, x4, lsl #2]
 470:	ldr	w6, [x5, x7, lsl #2]
 474:	ldr	w3, [x10, #3072]
 478:	eor	w7, w4, w9
 47c:	eor	w3, w3, w6
 480:	eor	w4, w7, w3
 484:	b.ls	50c <grub_mod_init-0x84>  // b.plast
 488:	ldr	w7, [x8, #4]
 48c:	sub	x3, x2, #0x8
 490:	cmp	x3, #0x3
 494:	eor	w7, w4, w7
 498:	ubfx	x4, x7, #16, #8
 49c:	ubfx	x3, x7, #8, #8
 4a0:	add	x3, x3, #0x200
 4a4:	add	x10, x5, w7, uxtb #2
 4a8:	add	x4, x4, #0x100
 4ac:	lsr	w7, w7, #24
 4b0:	ldr	w9, [x5, x3, lsl #2]
 4b4:	ldr	w4, [x5, x4, lsl #2]
 4b8:	ldr	w6, [x5, x7, lsl #2]
 4bc:	ldr	w3, [x10, #3072]
 4c0:	eor	w7, w4, w9
 4c4:	eor	w3, w3, w6
 4c8:	eor	w4, w7, w3
 4cc:	b.ls	50c <grub_mod_init-0x84>  // b.plast
 4d0:	ldr	w7, [x8, #8]
 4d4:	eor	w7, w4, w7
 4d8:	ubfx	x3, x7, #8, #8
 4dc:	ubfx	x4, x7, #16, #8
 4e0:	add	x4, x4, #0x100
 4e4:	add	x9, x5, w7, uxtb #2
 4e8:	add	x3, x3, #0x200
 4ec:	lsr	w7, w7, #24
 4f0:	ldr	w6, [x5, x4, lsl #2]
 4f4:	ldr	w3, [x5, x3, lsl #2]
 4f8:	ldr	w4, [x5, x7, lsl #2]
 4fc:	ldr	w7, [x9, #3072]
 500:	eor	w3, w3, w6
 504:	eor	w7, w7, w4
 508:	eor	w4, w7, w3
 50c:	and	x1, x1, #0xfffffffffffffffc
 510:	and	x2, x2, #0x3
 514:	add	x1, x1, #0x4
 518:	add	x8, x8, x1
 51c:	cbz	x2, 574 <grub_mod_init-0x1c>
 520:	ldrb	w1, [x8]
 524:	adrp	x3, 0 <grub_mod_init-0x590>
 528:	cmp	x2, #0x1
 52c:	eor	x1, x4, x1
 530:	ldr	x3, [x3]
 534:	and	x1, x1, #0xff
 538:	ldr	w1, [x3, x1, lsl #2]
 53c:	eor	w4, w1, w4, lsr #8
 540:	b.eq	574 <grub_mod_init-0x1c>  // b.none
 544:	ldrb	w1, [x8, #1]
 548:	cmp	x2, #0x2
 54c:	eor	x1, x4, x1
 550:	and	x1, x1, #0xff
 554:	ldr	w1, [x3, x1, lsl #2]
 558:	eor	w4, w1, w4, lsr #8
 55c:	b.eq	574 <grub_mod_init-0x1c>  // b.none
 560:	ldrb	w1, [x8, #2]
 564:	eor	x1, x4, x1
 568:	and	x1, x1, #0xff
 56c:	ldr	w1, [x3, x1, lsl #2]
 570:	eor	w4, w1, w4, lsr #8
 574:	str	w4, [x0]
 578:	ret
 57c:	mov	x8, x1
 580:	b	430 <grub_mod_init-0x160>
 584:	nop
	...

0000000000000590 <grub_mod_init>:
 590:	stp	x29, x30, [sp, #-32]!
 594:	adrp	x0, 0 <grub_mod_init-0x590>
 598:	mov	x29, sp
 59c:	str	x19, [sp, #16]
 5a0:	ldr	x19, [x0]
 5a4:	mov	x0, x19
 5a8:	bl	0 <grub_md_register>
 5ac:	add	x0, x19, #0x60
 5b0:	bl	0 <grub_md_register>
 5b4:	add	x0, x19, #0xc0
 5b8:	ldr	x19, [sp, #16]
 5bc:	ldp	x29, x30, [sp], #32
 5c0:	b	0 <grub_md_register>
 5c4:	nop
	...

00000000000005d0 <grub_mod_fini>:
 5d0:	stp	x29, x30, [sp, #-32]!
 5d4:	adrp	x0, 0 <grub_mod_init-0x590>
 5d8:	mov	x29, sp
 5dc:	str	x19, [sp, #16]
 5e0:	ldr	x19, [x0]
 5e4:	mov	x0, x19
 5e8:	bl	0 <grub_md_unregister>
 5ec:	add	x0, x19, #0x60
 5f0:	bl	0 <grub_md_unregister>
 5f4:	add	x0, x19, #0xc0
 5f8:	ldr	x19, [sp, #16]
 5fc:	ldp	x29, x30, [sp], #32
 600:	b	0 <grub_md_unregister>
 604:	nop
	...
