
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libmpfr.so.6.0.2_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

000000000000b9c8 <.init>:
    b9c8:	stp	x29, x30, [sp, #-16]!
    b9cc:	mov	x29, sp
    b9d0:	bl	16398 <mpfr_mpz_clear@@Base+0x68>
    b9d4:	ldp	x29, x30, [sp], #16
    b9d8:	ret

Disassembly of section .plt:

000000000000b9e0 <mpfr_agm@plt-0x20>:
    b9e0:	stp	x16, x30, [sp, #-16]!
    b9e4:	adrp	x16, 7f000 <__gmpfr_l2b@@Base+0x200>
    b9e8:	ldr	x17, [x16, #4088]
    b9ec:	add	x16, x16, #0xff8
    b9f0:	br	x17
    b9f4:	nop
    b9f8:	nop
    b9fc:	nop

000000000000ba00 <mpfr_agm@plt>:
    ba00:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ba04:	ldr	x17, [x16]
    ba08:	add	x16, x16, #0x0
    ba0c:	br	x17

000000000000ba10 <memcpy@plt>:
    ba10:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ba14:	ldr	x17, [x16, #8]
    ba18:	add	x16, x16, #0x8
    ba1c:	br	x17

000000000000ba20 <__gmpz_get_si@plt>:
    ba20:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ba24:	ldr	x17, [x16, #16]
    ba28:	add	x16, x16, #0x10
    ba2c:	br	x17

000000000000ba30 <__gmpz_tdiv_r_2exp@plt>:
    ba30:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ba34:	ldr	x17, [x16, #24]
    ba38:	add	x16, x16, #0x18
    ba3c:	br	x17

000000000000ba40 <mpfr_set_ld@plt>:
    ba40:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ba44:	ldr	x17, [x16, #32]
    ba48:	add	x16, x16, #0x20
    ba4c:	br	x17

000000000000ba50 <mpfr_mul_ui@plt>:
    ba50:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ba54:	ldr	x17, [x16, #40]
    ba58:	add	x16, x16, #0x28
    ba5c:	br	x17

000000000000ba60 <__gmpn_tdiv_qr@plt>:
    ba60:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ba64:	ldr	x17, [x16, #48]
    ba68:	add	x16, x16, #0x30
    ba6c:	br	x17

000000000000ba70 <mpfr_cot@plt>:
    ba70:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ba74:	ldr	x17, [x16, #56]
    ba78:	add	x16, x16, #0x38
    ba7c:	br	x17

000000000000ba80 <mpfr_set_si_2exp@plt>:
    ba80:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ba84:	ldr	x17, [x16, #64]
    ba88:	add	x16, x16, #0x40
    ba8c:	br	x17

000000000000ba90 <__gmpz_scan1@plt>:
    ba90:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ba94:	ldr	x17, [x16, #72]
    ba98:	add	x16, x16, #0x48
    ba9c:	br	x17

000000000000baa0 <mpfr_random_deviate_value@plt>:
    baa0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    baa4:	ldr	x17, [x16, #80]
    baa8:	add	x16, x16, #0x50
    baac:	br	x17

000000000000bab0 <strlen@plt>:
    bab0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bab4:	ldr	x17, [x16, #88]
    bab8:	add	x16, x16, #0x58
    babc:	br	x17

000000000000bac0 <fputs@plt>:
    bac0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bac4:	ldr	x17, [x16, #96]
    bac8:	add	x16, x16, #0x60
    bacc:	br	x17

000000000000bad0 <__gmpz_tdiv_qr@plt>:
    bad0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bad4:	ldr	x17, [x16, #104]
    bad8:	add	x16, x16, #0x68
    badc:	br	x17

000000000000bae0 <__gmpn_copyd@plt>:
    bae0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bae4:	ldr	x17, [x16, #112]
    bae8:	add	x16, x16, #0x70
    baec:	br	x17

000000000000baf0 <mpfr_cosh@plt>:
    baf0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    baf4:	ldr	x17, [x16, #120]
    baf8:	add	x16, x16, #0x78
    bafc:	br	x17

000000000000bb00 <mpfr_tanh@plt>:
    bb00:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bb04:	ldr	x17, [x16, #128]
    bb08:	add	x16, x16, #0x80
    bb0c:	br	x17

000000000000bb10 <mpfr_free_cache@plt>:
    bb10:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bb14:	ldr	x17, [x16, #136]
    bb18:	add	x16, x16, #0x88
    bb1c:	br	x17

000000000000bb20 <mpfr_ui_pow_ui@plt>:
    bb20:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bb24:	ldr	x17, [x16, #144]
    bb28:	add	x16, x16, #0x90
    bb2c:	br	x17

000000000000bb30 <__gmpz_tdiv_q@plt>:
    bb30:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bb34:	ldr	x17, [x16, #152]
    bb38:	add	x16, x16, #0x98
    bb3c:	br	x17

000000000000bb40 <__gmpfr_ceil_exp2@plt>:
    bb40:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bb44:	ldr	x17, [x16, #160]
    bb48:	add	x16, x16, #0xa0
    bb4c:	br	x17

000000000000bb50 <mpfr_set_nan@plt>:
    bb50:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bb54:	ldr	x17, [x16, #168]
    bb58:	add	x16, x16, #0xa8
    bb5c:	br	x17

000000000000bb60 <__gmpz_cdiv_q_2exp@plt>:
    bb60:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bb64:	ldr	x17, [x16, #176]
    bb68:	add	x16, x16, #0xb0
    bb6c:	br	x17

000000000000bb70 <mpfr_sub@plt>:
    bb70:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bb74:	ldr	x17, [x16, #184]
    bb78:	add	x16, x16, #0xb8
    bb7c:	br	x17

000000000000bb80 <__gmpn_set_str@plt>:
    bb80:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bb84:	ldr	x17, [x16, #192]
    bb88:	add	x16, x16, #0xc0
    bb8c:	br	x17

000000000000bb90 <mpfr_mul_2si@plt>:
    bb90:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bb94:	ldr	x17, [x16, #200]
    bb98:	add	x16, x16, #0xc8
    bb9c:	br	x17

000000000000bba0 <mpfr_gamma_one_and_two_third@plt>:
    bba0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bba4:	ldr	x17, [x16, #208]
    bba8:	add	x16, x16, #0xd0
    bbac:	br	x17

000000000000bbb0 <mpfr_cmp_z@plt>:
    bbb0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bbb4:	ldr	x17, [x16, #216]
    bbb8:	add	x16, x16, #0xd8
    bbbc:	br	x17

000000000000bbc0 <mpfr_fits_intmax_p@plt>:
    bbc0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bbc4:	ldr	x17, [x16, #224]
    bbc8:	add	x16, x16, #0xe0
    bbcc:	br	x17

000000000000bbd0 <mpfr_init@plt>:
    bbd0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bbd4:	ldr	x17, [x16, #232]
    bbd8:	add	x16, x16, #0xe8
    bbdc:	br	x17

000000000000bbe0 <mpfr_tan@plt>:
    bbe0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bbe4:	ldr	x17, [x16, #240]
    bbe8:	add	x16, x16, #0xf0
    bbec:	br	x17

000000000000bbf0 <mpfr_fdump@plt>:
    bbf0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bbf4:	ldr	x17, [x16, #248]
    bbf8:	add	x16, x16, #0xf8
    bbfc:	br	x17

000000000000bc00 <__gmpz_cmpabs_ui@plt>:
    bc00:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bc04:	ldr	x17, [x16, #256]
    bc08:	add	x16, x16, #0x100
    bc0c:	br	x17

000000000000bc10 <mpfr_strtofr@plt>:
    bc10:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bc14:	ldr	x17, [x16, #264]
    bc18:	add	x16, x16, #0x108
    bc1c:	br	x17

000000000000bc20 <mpfr_vasnprintf_aux@plt>:
    bc20:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bc24:	ldr	x17, [x16, #272]
    bc28:	add	x16, x16, #0x110
    bc2c:	br	x17

000000000000bc30 <__gmpz_sub_ui@plt>:
    bc30:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bc34:	ldr	x17, [x16, #280]
    bc38:	add	x16, x16, #0x118
    bc3c:	br	x17

000000000000bc40 <mpfr_ubf_zexp2exp@plt>:
    bc40:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bc44:	ldr	x17, [x16, #288]
    bc48:	add	x16, x16, #0x120
    bc4c:	br	x17

000000000000bc50 <__gmp_get_memory_functions@plt>:
    bc50:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bc54:	ldr	x17, [x16, #296]
    bc58:	add	x16, x16, #0x128
    bc5c:	br	x17

000000000000bc60 <__gmpz_sqrt@plt>:
    bc60:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bc64:	ldr	x17, [x16, #304]
    bc68:	add	x16, x16, #0x130
    bc6c:	br	x17

000000000000bc70 <__gmpfr_int_ceil_log2@plt>:
    bc70:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bc74:	ldr	x17, [x16, #312]
    bc78:	add	x16, x16, #0x138
    bc7c:	br	x17

000000000000bc80 <mpfr_mulhigh_n@plt>:
    bc80:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bc84:	ldr	x17, [x16, #320]
    bc88:	add	x16, x16, #0x140
    bc8c:	br	x17

000000000000bc90 <mpfr_set_erangeflag@plt>:
    bc90:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bc94:	ldr	x17, [x16, #328]
    bc98:	add	x16, x16, #0x148
    bc9c:	br	x17

000000000000bca0 <mpfr_get_ui@plt>:
    bca0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bca4:	ldr	x17, [x16, #336]
    bca8:	add	x16, x16, #0x150
    bcac:	br	x17

000000000000bcb0 <__gmpz_set_ui@plt>:
    bcb0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bcb4:	ldr	x17, [x16, #344]
    bcb8:	add	x16, x16, #0x158
    bcbc:	br	x17

000000000000bcc0 <__gmpn_lshift@plt>:
    bcc0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bcc4:	ldr	x17, [x16, #352]
    bcc8:	add	x16, x16, #0x160
    bccc:	br	x17

000000000000bcd0 <__gmpfr_floor_log2@plt>:
    bcd0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bcd4:	ldr	x17, [x16, #360]
    bcd8:	add	x16, x16, #0x168
    bcdc:	br	x17

000000000000bce0 <__gmpn_rshift@plt>:
    bce0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bce4:	ldr	x17, [x16, #368]
    bce8:	add	x16, x16, #0x170
    bcec:	br	x17

000000000000bcf0 <mpfr_cmp_d@plt>:
    bcf0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bcf4:	ldr	x17, [x16, #376]
    bcf8:	add	x16, x16, #0x178
    bcfc:	br	x17

000000000000bd00 <__cxa_finalize@plt>:
    bd00:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bd04:	ldr	x17, [x16, #384]
    bd08:	add	x16, x16, #0x180
    bd0c:	br	x17

000000000000bd10 <sprintf@plt>:
    bd10:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bd14:	ldr	x17, [x16, #392]
    bd18:	add	x16, x16, #0x188
    bd1c:	br	x17

000000000000bd20 <putc@plt>:
    bd20:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bd24:	ldr	x17, [x16, #400]
    bd28:	add	x16, x16, #0x190
    bd2c:	br	x17

000000000000bd30 <mpfr_get_d@plt>:
    bd30:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bd34:	ldr	x17, [x16, #408]
    bd38:	add	x16, x16, #0x198
    bd3c:	br	x17

000000000000bd40 <mpfr_set_f@plt>:
    bd40:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bd44:	ldr	x17, [x16, #416]
    bd48:	add	x16, x16, #0x1a0
    bd4c:	br	x17

000000000000bd50 <mpfr_mul@plt>:
    bd50:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bd54:	ldr	x17, [x16, #424]
    bd58:	add	x16, x16, #0x1a8
    bd5c:	br	x17

000000000000bd60 <mpfr_sub_z@plt>:
    bd60:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bd64:	ldr	x17, [x16, #432]
    bd68:	add	x16, x16, #0x1b0
    bd6c:	br	x17

000000000000bd70 <mpfr_neg@plt>:
    bd70:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bd74:	ldr	x17, [x16, #440]
    bd78:	add	x16, x16, #0x1b8
    bd7c:	br	x17

000000000000bd80 <mpfr_exp10@plt>:
    bd80:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bd84:	ldr	x17, [x16, #448]
    bd88:	add	x16, x16, #0x1c0
    bd8c:	br	x17

000000000000bd90 <mpfr_pow@plt>:
    bd90:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bd94:	ldr	x17, [x16, #456]
    bd98:	add	x16, x16, #0x1c8
    bd9c:	br	x17

000000000000bda0 <fputc@plt>:
    bda0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bda4:	ldr	x17, [x16, #464]
    bda8:	add	x16, x16, #0x1d0
    bdac:	br	x17

000000000000bdb0 <mpfr_cmp2@plt>:
    bdb0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bdb4:	ldr	x17, [x16, #472]
    bdb8:	add	x16, x16, #0x1d8
    bdbc:	br	x17

000000000000bdc0 <mpfr_tmp_allocate@plt>:
    bdc0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bdc4:	ldr	x17, [x16, #480]
    bdc8:	add	x16, x16, #0x1e0
    bdcc:	br	x17

000000000000bdd0 <mpfr_nextbelow@plt>:
    bdd0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bdd4:	ldr	x17, [x16, #488]
    bdd8:	add	x16, x16, #0x1e8
    bddc:	br	x17

000000000000bde0 <__gmpz_sub@plt>:
    bde0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bde4:	ldr	x17, [x16, #496]
    bde8:	add	x16, x16, #0x1f0
    bdec:	br	x17

000000000000bdf0 <mpfr_random_deviate_clear@plt>:
    bdf0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bdf4:	ldr	x17, [x16, #504]
    bdf8:	add	x16, x16, #0x1f8
    bdfc:	br	x17

000000000000be00 <mpfr_get_z@plt>:
    be00:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    be04:	ldr	x17, [x16, #512]
    be08:	add	x16, x16, #0x200
    be0c:	br	x17

000000000000be10 <__gmpn_com@plt>:
    be10:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    be14:	ldr	x17, [x16, #520]
    be18:	add	x16, x16, #0x208
    be1c:	br	x17

000000000000be20 <mpfr_exp_3@plt>:
    be20:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    be24:	ldr	x17, [x16, #528]
    be28:	add	x16, x16, #0x210
    be2c:	br	x17

000000000000be30 <__gmpz_fdiv_q@plt>:
    be30:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    be34:	ldr	x17, [x16, #536]
    be38:	add	x16, x16, #0x218
    be3c:	br	x17

000000000000be40 <mpfr_set_d@plt>:
    be40:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    be44:	ldr	x17, [x16, #544]
    be48:	add	x16, x16, #0x220
    be4c:	br	x17

000000000000be50 <mpfr_fits_ulong_p@plt>:
    be50:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    be54:	ldr	x17, [x16, #552]
    be58:	add	x16, x16, #0x228
    be5c:	br	x17

000000000000be60 <__gmpn_sub_n@plt>:
    be60:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    be64:	ldr	x17, [x16, #560]
    be68:	add	x16, x16, #0x230
    be6c:	br	x17

000000000000be70 <mpfr_clear_cache@plt>:
    be70:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    be74:	ldr	x17, [x16, #568]
    be78:	add	x16, x16, #0x238
    be7c:	br	x17

000000000000be80 <mpfr_div_ui2@plt>:
    be80:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    be84:	ldr	x17, [x16, #576]
    be88:	add	x16, x16, #0x240
    be8c:	br	x17

000000000000be90 <__gmpz_fits_slong_p@plt>:
    be90:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    be94:	ldr	x17, [x16, #584]
    be98:	add	x16, x16, #0x248
    be9c:	br	x17

000000000000bea0 <localeconv@plt>:
    bea0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bea4:	ldr	x17, [x16, #592]
    bea8:	add	x16, x16, #0x250
    beac:	br	x17

000000000000beb0 <__gmpz_cdiv_q_ui@plt>:
    beb0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    beb4:	ldr	x17, [x16, #600]
    beb8:	add	x16, x16, #0x258
    bebc:	br	x17

000000000000bec0 <mpfr_frac@plt>:
    bec0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bec4:	ldr	x17, [x16, #608]
    bec8:	add	x16, x16, #0x260
    becc:	br	x17

000000000000bed0 <mpfr_set_prec@plt>:
    bed0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bed4:	ldr	x17, [x16, #616]
    bed8:	add	x16, x16, #0x268
    bedc:	br	x17

000000000000bee0 <__gmpz_cmpabs@plt>:
    bee0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bee4:	ldr	x17, [x16, #624]
    bee8:	add	x16, x16, #0x270
    beec:	br	x17

000000000000bef0 <mpfr_pow_z@plt>:
    bef0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bef4:	ldr	x17, [x16, #632]
    bef8:	add	x16, x16, #0x278
    befc:	br	x17

000000000000bf00 <mpfr_powerof2_raw@plt>:
    bf00:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bf04:	ldr	x17, [x16, #640]
    bf08:	add	x16, x16, #0x280
    bf0c:	br	x17

000000000000bf10 <__gmpz_setbit@plt>:
    bf10:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bf14:	ldr	x17, [x16, #648]
    bf18:	add	x16, x16, #0x288
    bf1c:	br	x17

000000000000bf20 <__gmpfr_isqrt@plt>:
    bf20:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bf24:	ldr	x17, [x16, #656]
    bf28:	add	x16, x16, #0x290
    bf2c:	br	x17

000000000000bf30 <mpfr_rint_trunc@plt>:
    bf30:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bf34:	ldr	x17, [x16, #664]
    bf38:	add	x16, x16, #0x298
    bf3c:	br	x17

000000000000bf40 <mpfr_overflow@plt>:
    bf40:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bf44:	ldr	x17, [x16, #672]
    bf48:	add	x16, x16, #0x2a0
    bf4c:	br	x17

000000000000bf50 <mpfr_cmp_ui_2exp@plt>:
    bf50:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bf54:	ldr	x17, [x16, #680]
    bf58:	add	x16, x16, #0x2a8
    bf5c:	br	x17

000000000000bf60 <__gmpz_divexact@plt>:
    bf60:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bf64:	ldr	x17, [x16, #688]
    bf68:	add	x16, x16, #0x2b0
    bf6c:	br	x17

000000000000bf70 <mpfr_pow_ui@plt>:
    bf70:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bf74:	ldr	x17, [x16, #696]
    bf78:	add	x16, x16, #0x2b8
    bf7c:	br	x17

000000000000bf80 <mpfr_ubf_mul_exact@plt>:
    bf80:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bf84:	ldr	x17, [x16, #704]
    bf88:	add	x16, x16, #0x2c0
    bf8c:	br	x17

000000000000bf90 <mpfr_mpz_init@plt>:
    bf90:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bf94:	ldr	x17, [x16, #712]
    bf98:	add	x16, x16, #0x2c8
    bf9c:	br	x17

000000000000bfa0 <__gmpz_set@plt>:
    bfa0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bfa4:	ldr	x17, [x16, #720]
    bfa8:	add	x16, x16, #0x2d0
    bfac:	br	x17

000000000000bfb0 <mpfr_bernoulli_freecache@plt>:
    bfb0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bfb4:	ldr	x17, [x16, #728]
    bfb8:	add	x16, x16, #0x2d8
    bfbc:	br	x17

000000000000bfc0 <__gmpz_fac_ui@plt>:
    bfc0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bfc4:	ldr	x17, [x16, #736]
    bfc8:	add	x16, x16, #0x2e0
    bfcc:	br	x17

000000000000bfd0 <__gmpfr_vasprintf@plt>:
    bfd0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bfd4:	ldr	x17, [x16, #744]
    bfd8:	add	x16, x16, #0x2e8
    bfdc:	br	x17

000000000000bfe0 <__gmpz_tstbit@plt>:
    bfe0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bfe4:	ldr	x17, [x16, #752]
    bfe8:	add	x16, x16, #0x2f0
    bfec:	br	x17

000000000000bff0 <__gmpz_mul@plt>:
    bff0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    bff4:	ldr	x17, [x16, #760]
    bff8:	add	x16, x16, #0x2f8
    bffc:	br	x17

000000000000c000 <__gmpfr_set_uj_2exp@plt>:
    c000:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c004:	ldr	x17, [x16, #768]
    c008:	add	x16, x16, #0x300
    c00c:	br	x17

000000000000c010 <mpfr_fits_uintmax_p@plt>:
    c010:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c014:	ldr	x17, [x16, #776]
    c018:	add	x16, x16, #0x308
    c01c:	br	x17

000000000000c020 <mpfr_sincos_fast@plt>:
    c020:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c024:	ldr	x17, [x16, #784]
    c028:	add	x16, x16, #0x310
    c02c:	br	x17

000000000000c030 <mpfr_z_sub@plt>:
    c030:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c034:	ldr	x17, [x16, #792]
    c038:	add	x16, x16, #0x318
    c03c:	br	x17

000000000000c040 <__gmpz_tdiv_q_ui@plt>:
    c040:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c044:	ldr	x17, [x16, #800]
    c048:	add	x16, x16, #0x320
    c04c:	br	x17

000000000000c050 <__gmp_vasprintf@plt>:
    c050:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c054:	ldr	x17, [x16, #808]
    c058:	add	x16, x16, #0x328
    c05c:	br	x17

000000000000c060 <mpfr_sub_si@plt>:
    c060:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c064:	ldr	x17, [x16, #816]
    c068:	add	x16, x16, #0x330
    c06c:	br	x17

000000000000c070 <mpfr_clear@plt>:
    c070:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c074:	ldr	x17, [x16, #824]
    c078:	add	x16, x16, #0x338
    c07c:	br	x17

000000000000c080 <__gmpfr_set_sj@plt>:
    c080:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c084:	ldr	x17, [x16, #832]
    c088:	add	x16, x16, #0x340
    c08c:	br	x17

000000000000c090 <mpfr_log@plt>:
    c090:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c094:	ldr	x17, [x16, #840]
    c098:	add	x16, x16, #0x348
    c09c:	br	x17

000000000000c0a0 <mpfr_lgamma@plt>:
    c0a0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c0a4:	ldr	x17, [x16, #848]
    c0a8:	add	x16, x16, #0x350
    c0ac:	br	x17

000000000000c0b0 <__gmpfr_cuberoot@plt>:
    c0b0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c0b4:	ldr	x17, [x16, #856]
    c0b8:	add	x16, x16, #0x358
    c0bc:	br	x17

000000000000c0c0 <__gmp_asprintf@plt>:
    c0c0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c0c4:	ldr	x17, [x16, #864]
    c0c8:	add	x16, x16, #0x360
    c0cc:	br	x17

000000000000c0d0 <mpfr_setmax@plt>:
    c0d0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c0d4:	ldr	x17, [x16, #872]
    c0d8:	add	x16, x16, #0x368
    c0dc:	br	x17

000000000000c0e0 <__gmpz_swap@plt>:
    c0e0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c0e4:	ldr	x17, [x16, #880]
    c0e8:	add	x16, x16, #0x370
    c0ec:	br	x17

000000000000c0f0 <mpfr_sub1sp@plt>:
    c0f0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c0f4:	ldr	x17, [x16, #888]
    c0f8:	add	x16, x16, #0x378
    c0fc:	br	x17

000000000000c100 <__gmpz_mul_ui@plt>:
    c100:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c104:	ldr	x17, [x16, #896]
    c108:	add	x16, x16, #0x380
    c10c:	br	x17

000000000000c110 <memset@plt>:
    c110:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c114:	ldr	x17, [x16, #904]
    c118:	add	x16, x16, #0x388
    c11c:	br	x17

000000000000c120 <mpfr_nextabove@plt>:
    c120:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c124:	ldr	x17, [x16, #912]
    c128:	add	x16, x16, #0x390
    c12c:	br	x17

000000000000c130 <__gmpz_fdiv_q_2exp@plt>:
    c130:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c134:	ldr	x17, [x16, #920]
    c138:	add	x16, x16, #0x398
    c13c:	br	x17

000000000000c140 <mpfr_divhigh_n@plt>:
    c140:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c144:	ldr	x17, [x16, #928]
    c148:	add	x16, x16, #0x3a0
    c14c:	br	x17

000000000000c150 <mpfr_random_deviate_init@plt>:
    c150:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c154:	ldr	x17, [x16, #936]
    c158:	add	x16, x16, #0x3a8
    c15c:	br	x17

000000000000c160 <mpfr_integer_p@plt>:
    c160:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c164:	ldr	x17, [x16, #944]
    c168:	add	x16, x16, #0x3b0
    c16c:	br	x17

000000000000c170 <mpfr_mpz_clear@plt>:
    c170:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c174:	ldr	x17, [x16, #952]
    c178:	add	x16, x16, #0x3b8
    c17c:	br	x17

000000000000c180 <__gmpf_set_ui@plt>:
    c180:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c184:	ldr	x17, [x16, #960]
    c188:	add	x16, x16, #0x3c0
    c18c:	br	x17

000000000000c190 <mpfr_get_si@plt>:
    c190:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c194:	ldr	x17, [x16, #968]
    c198:	add	x16, x16, #0x3c8
    c19c:	br	x17

000000000000c1a0 <mpfr_add@plt>:
    c1a0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c1a4:	ldr	x17, [x16, #976]
    c1a8:	add	x16, x16, #0x3d0
    c1ac:	br	x17

000000000000c1b0 <mpfr_clears@plt>:
    c1b0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c1b4:	ldr	x17, [x16, #984]
    c1b8:	add	x16, x16, #0x3d8
    c1bc:	br	x17

000000000000c1c0 <mpfr_reallocate_func@plt>:
    c1c0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c1c4:	ldr	x17, [x16, #992]
    c1c8:	add	x16, x16, #0x3e0
    c1cc:	br	x17

000000000000c1d0 <mpfr_log2@plt>:
    c1d0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c1d4:	ldr	x17, [x16, #1000]
    c1d8:	add	x16, x16, #0x3e8
    c1dc:	br	x17

000000000000c1e0 <mpfr_erf@plt>:
    c1e0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c1e4:	ldr	x17, [x16, #1008]
    c1e8:	add	x16, x16, #0x3f0
    c1ec:	br	x17

000000000000c1f0 <mpfr_set@plt>:
    c1f0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c1f4:	ldr	x17, [x16, #1016]
    c1f8:	add	x16, x16, #0x3f8
    c1fc:	br	x17

000000000000c200 <__gmpz_mul_2exp@plt>:
    c200:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c204:	ldr	x17, [x16, #1024]
    c208:	add	x16, x16, #0x400
    c20c:	br	x17

000000000000c210 <mpfr_floor@plt>:
    c210:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c214:	ldr	x17, [x16, #1032]
    c218:	add	x16, x16, #0x408
    c21c:	br	x17

000000000000c220 <mpfr_round@plt>:
    c220:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c224:	ldr	x17, [x16, #1040]
    c228:	add	x16, x16, #0x410
    c22c:	br	x17

000000000000c230 <mpfr_free_pool@plt>:
    c230:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c234:	ldr	x17, [x16, #1048]
    c238:	add	x16, x16, #0x418
    c23c:	br	x17

000000000000c240 <mpfr_set_z@plt>:
    c240:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c244:	ldr	x17, [x16, #1056]
    c248:	add	x16, x16, #0x420
    c24c:	br	x17

000000000000c250 <mpfr_fma@plt>:
    c250:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c254:	ldr	x17, [x16, #1064]
    c258:	add	x16, x16, #0x428
    c25c:	br	x17

000000000000c260 <mpfr_add_ui@plt>:
    c260:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c264:	ldr	x17, [x16, #1072]
    c268:	add	x16, x16, #0x430
    c26c:	br	x17

000000000000c270 <mpfr_clear_flags@plt>:
    c270:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c274:	ldr	x17, [x16, #1080]
    c278:	add	x16, x16, #0x438
    c27c:	br	x17

000000000000c280 <mpfr_roundeven@plt>:
    c280:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c284:	ldr	x17, [x16, #1088]
    c288:	add	x16, x16, #0x440
    c28c:	br	x17

000000000000c290 <__gmpz_addmul@plt>:
    c290:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c294:	ldr	x17, [x16, #1096]
    c298:	add	x16, x16, #0x448
    c29c:	br	x17

000000000000c2a0 <getc@plt>:
    c2a0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c2a4:	ldr	x17, [x16, #1104]
    c2a8:	add	x16, x16, #0x450
    c2ac:	br	x17

000000000000c2b0 <mpfr_setmin@plt>:
    c2b0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c2b4:	ldr	x17, [x16, #1112]
    c2b8:	add	x16, x16, #0x458
    c2bc:	br	x17

000000000000c2c0 <mpfr_mul_2ui@plt>:
    c2c0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c2c4:	ldr	x17, [x16, #1120]
    c2c8:	add	x16, x16, #0x460
    c2cc:	br	x17

000000000000c2d0 <__gmp_urandomm_ui@plt>:
    c2d0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c2d4:	ldr	x17, [x16, #1128]
    c2d8:	add	x16, x16, #0x468
    c2dc:	br	x17

000000000000c2e0 <__gmpz_root@plt>:
    c2e0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c2e4:	ldr	x17, [x16, #1136]
    c2e8:	add	x16, x16, #0x470
    c2ec:	br	x17

000000000000c2f0 <mpfr_ui_div@plt>:
    c2f0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c2f4:	ldr	x17, [x16, #1144]
    c2f8:	add	x16, x16, #0x478
    c2fc:	br	x17

000000000000c300 <mpfr_rint@plt>:
    c300:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c304:	ldr	x17, [x16, #1152]
    c308:	add	x16, x16, #0x480
    c30c:	br	x17

000000000000c310 <mpfr_random_deviate_tstbit@plt>:
    c310:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c314:	ldr	x17, [x16, #1160]
    c318:	add	x16, x16, #0x488
    c31c:	br	x17

000000000000c320 <mpfr_sinh@plt>:
    c320:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c324:	ldr	x17, [x16, #1168]
    c328:	add	x16, x16, #0x490
    c32c:	br	x17

000000000000c330 <__gmpz_pow_ui@plt>:
    c330:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c334:	ldr	x17, [x16, #1176]
    c338:	add	x16, x16, #0x498
    c33c:	br	x17

000000000000c340 <mpfr_set_str_binary@plt>:
    c340:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c344:	ldr	x17, [x16, #1184]
    c348:	add	x16, x16, #0x4a0
    c34c:	br	x17

000000000000c350 <mpfr_can_round_raw@plt>:
    c350:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c354:	ldr	x17, [x16, #1192]
    c358:	add	x16, x16, #0x4a8
    c35c:	br	x17

000000000000c360 <__gmpz_add_ui@plt>:
    c360:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c364:	ldr	x17, [x16, #1200]
    c368:	add	x16, x16, #0x4b0
    c36c:	br	x17

000000000000c370 <mpfr_round_p@plt>:
    c370:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c374:	ldr	x17, [x16, #1208]
    c378:	add	x16, x16, #0x4b8
    c37c:	br	x17

000000000000c380 <mpfr_cache@plt>:
    c380:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c384:	ldr	x17, [x16, #1216]
    c388:	add	x16, x16, #0x4c0
    c38c:	br	x17

000000000000c390 <__gmon_start__@plt>:
    c390:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c394:	ldr	x17, [x16, #1224]
    c398:	add	x16, x16, #0x4c8
    c39c:	br	x17

000000000000c3a0 <mpfr_add_d@plt>:
    c3a0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c3a4:	ldr	x17, [x16, #1232]
    c3a8:	add	x16, x16, #0x4d0
    c3ac:	br	x17

000000000000c3b0 <__gmpn_sqr@plt>:
    c3b0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c3b4:	ldr	x17, [x16, #1240]
    c3b8:	add	x16, x16, #0x4d8
    c3bc:	br	x17

000000000000c3c0 <mpfr_underflow@plt>:
    c3c0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c3c4:	ldr	x17, [x16, #1248]
    c3c8:	add	x16, x16, #0x4e0
    c3cc:	br	x17

000000000000c3d0 <mpfr_cmp_si_2exp@plt>:
    c3d0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c3d4:	ldr	x17, [x16, #1256]
    c3d8:	add	x16, x16, #0x4e8
    c3dc:	br	x17

000000000000c3e0 <abort@plt>:
    c3e0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c3e4:	ldr	x17, [x16, #1264]
    c3e8:	add	x16, x16, #0x4f0
    c3ec:	br	x17

000000000000c3f0 <mpfr_trunc@plt>:
    c3f0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c3f4:	ldr	x17, [x16, #1272]
    c3f8:	add	x16, x16, #0x4f8
    c3fc:	br	x17

000000000000c400 <mpfr_sqr@plt>:
    c400:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c404:	ldr	x17, [x16, #1280]
    c408:	add	x16, x16, #0x500
    c40c:	br	x17

000000000000c410 <mpfr_tmp_free@plt>:
    c410:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c414:	ldr	x17, [x16, #1288]
    c418:	add	x16, x16, #0x508
    c41c:	br	x17

000000000000c420 <mpfr_div_2si@plt>:
    c420:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c424:	ldr	x17, [x16, #1296]
    c428:	add	x16, x16, #0x510
    c42c:	br	x17

000000000000c430 <mpfr_cos@plt>:
    c430:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c434:	ldr	x17, [x16, #1304]
    c438:	add	x16, x16, #0x518
    c43c:	br	x17

000000000000c440 <__gmpz_realloc2@plt>:
    c440:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c444:	ldr	x17, [x16, #1312]
    c448:	add	x16, x16, #0x520
    c44c:	br	x17

000000000000c450 <mpfr_sin@plt>:
    c450:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c454:	ldr	x17, [x16, #1320]
    c458:	add	x16, x16, #0x528
    c45c:	br	x17

000000000000c460 <mpfr_nexttozero@plt>:
    c460:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c464:	ldr	x17, [x16, #1328]
    c468:	add	x16, x16, #0x530
    c46c:	br	x17

000000000000c470 <__gmpn_mul_n@plt>:
    c470:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c474:	ldr	x17, [x16, #1336]
    c478:	add	x16, x16, #0x538
    c47c:	br	x17

000000000000c480 <mpfr_add_z@plt>:
    c480:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c484:	ldr	x17, [x16, #1344]
    c488:	add	x16, x16, #0x540
    c48c:	br	x17

000000000000c490 <mpfr_sqrhigh_n@plt>:
    c490:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c494:	ldr	x17, [x16, #1352]
    c498:	add	x16, x16, #0x548
    c49c:	br	x17

000000000000c4a0 <mpfr_swap@plt>:
    c4a0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c4a4:	ldr	x17, [x16, #1360]
    c4a8:	add	x16, x16, #0x550
    c4ac:	br	x17

000000000000c4b0 <__gmpz_scan0@plt>:
    c4b0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c4b4:	ldr	x17, [x16, #1368]
    c4b8:	add	x16, x16, #0x558
    c4bc:	br	x17

000000000000c4c0 <__gmpn_submul_1@plt>:
    c4c0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c4c4:	ldr	x17, [x16, #1376]
    c4c8:	add	x16, x16, #0x560
    c4cc:	br	x17

000000000000c4d0 <mpfr_mul_z@plt>:
    c4d0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c4d4:	ldr	x17, [x16, #1384]
    c4d8:	add	x16, x16, #0x568
    c4dc:	br	x17

000000000000c4e0 <__gmpz_ui_pow_ui@plt>:
    c4e0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c4e4:	ldr	x17, [x16, #1392]
    c4e8:	add	x16, x16, #0x570
    c4ec:	br	x17

000000000000c4f0 <mpfr_set_z_2exp@plt>:
    c4f0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c4f4:	ldr	x17, [x16, #1400]
    c4f8:	add	x16, x16, #0x578
    c4fc:	br	x17

000000000000c500 <mpfr_get_str@plt>:
    c500:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c504:	ldr	x17, [x16, #1408]
    c508:	add	x16, x16, #0x580
    c50c:	br	x17

000000000000c510 <mpfr_remquo@plt>:
    c510:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c514:	ldr	x17, [x16, #1416]
    c518:	add	x16, x16, #0x588
    c51c:	br	x17

000000000000c520 <__gmpn_copyi@plt>:
    c520:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c524:	ldr	x17, [x16, #1424]
    c528:	add	x16, x16, #0x590
    c52c:	br	x17

000000000000c530 <mpfr_sub_ui@plt>:
    c530:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c534:	ldr	x17, [x16, #1432]
    c538:	add	x16, x16, #0x598
    c53c:	br	x17

000000000000c540 <mpfr_round_near_x@plt>:
    c540:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c544:	ldr	x17, [x16, #1440]
    c548:	add	x16, x16, #0x5a0
    c54c:	br	x17

000000000000c550 <__gmp_fprintf@plt>:
    c550:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c554:	ldr	x17, [x16, #1448]
    c558:	add	x16, x16, #0x5a8
    c55c:	br	x17

000000000000c560 <__gmpq_set_ui@plt>:
    c560:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c564:	ldr	x17, [x16, #1456]
    c568:	add	x16, x16, #0x5b0
    c56c:	br	x17

000000000000c570 <__gmpz_divexact_ui@plt>:
    c570:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c574:	ldr	x17, [x16, #1464]
    c578:	add	x16, x16, #0x5b8
    c57c:	br	x17

000000000000c580 <mpfr_get_ld@plt>:
    c580:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c584:	ldr	x17, [x16, #1472]
    c588:	add	x16, x16, #0x5c0
    c58c:	br	x17

000000000000c590 <mpfr_random_deviate_swap@plt>:
    c590:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c594:	ldr	x17, [x16, #1480]
    c598:	add	x16, x16, #0x5c8
    c59c:	br	x17

000000000000c5a0 <__gmpn_add_n@plt>:
    c5a0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c5a4:	ldr	x17, [x16, #1488]
    c5a8:	add	x16, x16, #0x5d0
    c5ac:	br	x17

000000000000c5b0 <mpfr_set_inf@plt>:
    c5b0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c5b4:	ldr	x17, [x16, #1496]
    c5b8:	add	x16, x16, #0x5d8
    c5bc:	br	x17

000000000000c5c0 <mpfr_yn@plt>:
    c5c0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c5c4:	ldr	x17, [x16, #1504]
    c5c8:	add	x16, x16, #0x5e0
    c5cc:	br	x17

000000000000c5d0 <mpfr_si_sub@plt>:
    c5d0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c5d4:	ldr	x17, [x16, #1512]
    c5d8:	add	x16, x16, #0x5e8
    c5dc:	br	x17

000000000000c5e0 <__gmpn_get_str@plt>:
    c5e0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c5e4:	ldr	x17, [x16, #1520]
    c5e8:	add	x16, x16, #0x5f0
    c5ec:	br	x17

000000000000c5f0 <mpfr_set_ui_2exp@plt>:
    c5f0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c5f4:	ldr	x17, [x16, #1528]
    c5f8:	add	x16, x16, #0x5f8
    c5fc:	br	x17

000000000000c600 <mpfr_lngamma@plt>:
    c600:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c604:	ldr	x17, [x16, #1536]
    c608:	add	x16, x16, #0x600
    c60c:	br	x17

000000000000c610 <__gmpz_fdiv_q_ui@plt>:
    c610:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c614:	ldr	x17, [x16, #1544]
    c618:	add	x16, x16, #0x608
    c61c:	br	x17

000000000000c620 <mpfr_div@plt>:
    c620:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c624:	ldr	x17, [x16, #1552]
    c628:	add	x16, x16, #0x610
    c62c:	br	x17

000000000000c630 <__ctype_b_loc@plt>:
    c630:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c634:	ldr	x17, [x16, #1560]
    c638:	add	x16, x16, #0x618
    c63c:	br	x17

000000000000c640 <__gmpz_clear@plt>:
    c640:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c644:	ldr	x17, [x16, #1568]
    c648:	add	x16, x16, #0x620
    c64c:	br	x17

000000000000c650 <strtol@plt>:
    c650:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c654:	ldr	x17, [x16, #1576]
    c658:	add	x16, x16, #0x628
    c65c:	br	x17

000000000000c660 <fread@plt>:
    c660:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c664:	ldr	x17, [x16, #1584]
    c668:	add	x16, x16, #0x630
    c66c:	br	x17

000000000000c670 <mpfr_nexttoinf@plt>:
    c670:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c674:	ldr	x17, [x16, #1592]
    c678:	add	x16, x16, #0x638
    c67c:	br	x17

000000000000c680 <__gmpz_mul_si@plt>:
    c680:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c684:	ldr	x17, [x16, #1600]
    c688:	add	x16, x16, #0x640
    c68c:	br	x17

000000000000c690 <mpfr_atan@plt>:
    c690:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c694:	ldr	x17, [x16, #1608]
    c698:	add	x16, x16, #0x648
    c69c:	br	x17

000000000000c6a0 <mpfr_set4@plt>:
    c6a0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c6a4:	ldr	x17, [x16, #1616]
    c6a8:	add	x16, x16, #0x650
    c6ac:	br	x17

000000000000c6b0 <mpfr_rootn_ui@plt>:
    c6b0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c6b4:	ldr	x17, [x16, #1624]
    c6b8:	add	x16, x16, #0x658
    c6bc:	br	x17

000000000000c6c0 <mpfr_set_str@plt>:
    c6c0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c6c4:	ldr	x17, [x16, #1632]
    c6c8:	add	x16, x16, #0x660
    c6cc:	br	x17

000000000000c6d0 <__gmpf_neg@plt>:
    c6d0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c6d4:	ldr	x17, [x16, #1640]
    c6d8:	add	x16, x16, #0x668
    c6dc:	br	x17

000000000000c6e0 <mpfr_fac_ui@plt>:
    c6e0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c6e4:	ldr	x17, [x16, #1648]
    c6e8:	add	x16, x16, #0x670
    c6ec:	br	x17

000000000000c6f0 <mpfr_pow_general@plt>:
    c6f0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c6f4:	ldr	x17, [x16, #1656]
    c6f8:	add	x16, x16, #0x678
    c6fc:	br	x17

000000000000c700 <mpfr_log1p@plt>:
    c700:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c704:	ldr	x17, [x16, #1664]
    c708:	add	x16, x16, #0x680
    c70c:	br	x17

000000000000c710 <mpfr_sgn@plt>:
    c710:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c714:	ldr	x17, [x16, #1672]
    c718:	add	x16, x16, #0x688
    c71c:	br	x17

000000000000c720 <mpfr_round_raw_4@plt>:
    c720:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c724:	ldr	x17, [x16, #1680]
    c728:	add	x16, x16, #0x690
    c72c:	br	x17

000000000000c730 <ungetc@plt>:
    c730:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c734:	ldr	x17, [x16, #1688]
    c738:	add	x16, x16, #0x698
    c73c:	br	x17

000000000000c740 <__gmpz_tdiv_q_2exp@plt>:
    c740:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c744:	ldr	x17, [x16, #1696]
    c748:	add	x16, x16, #0x6a0
    c74c:	br	x17

000000000000c750 <mpfr_exp@plt>:
    c750:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c754:	ldr	x17, [x16, #1704]
    c758:	add	x16, x16, #0x6a8
    c75c:	br	x17

000000000000c760 <mpfr_round_raw_2@plt>:
    c760:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c764:	ldr	x17, [x16, #1712]
    c768:	add	x16, x16, #0x6b0
    c76c:	br	x17

000000000000c770 <__gmpz_cdiv_q@plt>:
    c770:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c774:	ldr	x17, [x16, #1720]
    c778:	add	x16, x16, #0x6b8
    c77c:	br	x17

000000000000c780 <mpfr_add1@plt>:
    c780:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c784:	ldr	x17, [x16, #1728]
    c788:	add	x16, x16, #0x6c0
    c78c:	br	x17

000000000000c790 <mpfr_fits_slong_p@plt>:
    c790:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c794:	ldr	x17, [x16, #1736]
    c798:	add	x16, x16, #0x6c8
    c79c:	br	x17

000000000000c7a0 <__gmpn_mul@plt>:
    c7a0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c7a4:	ldr	x17, [x16, #1744]
    c7a8:	add	x16, x16, #0x6d0
    c7ac:	br	x17

000000000000c7b0 <mpfr_gamma@plt>:
    c7b0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c7b4:	ldr	x17, [x16, #1752]
    c7b8:	add	x16, x16, #0x6d8
    c7bc:	br	x17

000000000000c7c0 <__gmpn_divrem_1@plt>:
    c7c0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c7c4:	ldr	x17, [x16, #1760]
    c7c8:	add	x16, x16, #0x6e0
    c7cc:	br	x17

000000000000c7d0 <mpfr_powerof2_raw2@plt>:
    c7d0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c7d4:	ldr	x17, [x16, #1768]
    c7d8:	add	x16, x16, #0x6e8
    c7dc:	br	x17

000000000000c7e0 <mpfr_random_deviate_reset@plt>:
    c7e0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c7e4:	ldr	x17, [x16, #1776]
    c7e8:	add	x16, x16, #0x6f0
    c7ec:	br	x17

000000000000c7f0 <mpfr_add_si@plt>:
    c7f0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c7f4:	ldr	x17, [x16, #1784]
    c7f8:	add	x16, x16, #0x6f8
    c7fc:	br	x17

000000000000c800 <__gmpz_cmp_si@plt>:
    c800:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c804:	ldr	x17, [x16, #1792]
    c808:	add	x16, x16, #0x700
    c80c:	br	x17

000000000000c810 <mpfr_rand_raw@plt>:
    c810:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c814:	ldr	x17, [x16, #1800]
    c818:	add	x16, x16, #0x708
    c81c:	br	x17

000000000000c820 <mpfr_div_si@plt>:
    c820:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c824:	ldr	x17, [x16, #1808]
    c828:	add	x16, x16, #0x710
    c82c:	br	x17

000000000000c830 <mpfr_bernoulli_cache@plt>:
    c830:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c834:	ldr	x17, [x16, #1816]
    c838:	add	x16, x16, #0x718
    c83c:	br	x17

000000000000c840 <mpfr_sqrt_ui@plt>:
    c840:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c844:	ldr	x17, [x16, #1824]
    c848:	add	x16, x16, #0x720
    c84c:	br	x17

000000000000c850 <mpfr_set_q@plt>:
    c850:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c854:	ldr	x17, [x16, #1832]
    c858:	add	x16, x16, #0x728
    c85c:	br	x17

000000000000c860 <__gmpn_popcount@plt>:
    c860:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c864:	ldr	x17, [x16, #1840]
    c868:	add	x16, x16, #0x730
    c86c:	br	x17

000000000000c870 <mpfr_exp_2@plt>:
    c870:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c874:	ldr	x17, [x16, #1848]
    c878:	add	x16, x16, #0x738
    c87c:	br	x17

000000000000c880 <__gmpz_submul@plt>:
    c880:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c884:	ldr	x17, [x16, #1856]
    c888:	add	x16, x16, #0x740
    c88c:	br	x17

000000000000c890 <mpfr_free_str@plt>:
    c890:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c894:	ldr	x17, [x16, #1864]
    c898:	add	x16, x16, #0x748
    c89c:	br	x17

000000000000c8a0 <__gmpz_mod@plt>:
    c8a0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c8a4:	ldr	x17, [x16, #1872]
    c8a8:	add	x16, x16, #0x750
    c8ac:	br	x17

000000000000c8b0 <mpfr_si_div@plt>:
    c8b0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c8b4:	ldr	x17, [x16, #1880]
    c8b8:	add	x16, x16, #0x758
    c8bc:	br	x17

000000000000c8c0 <fwrite@plt>:
    c8c0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c8c4:	ldr	x17, [x16, #1888]
    c8c8:	add	x16, x16, #0x760
    c8cc:	br	x17

000000000000c8d0 <__gmpz_cmp@plt>:
    c8d0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c8d4:	ldr	x17, [x16, #1896]
    c8d8:	add	x16, x16, #0x768
    c8dc:	br	x17

000000000000c8e0 <mpfr_abort_prec_max@plt>:
    c8e0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c8e4:	ldr	x17, [x16, #1904]
    c8e8:	add	x16, x16, #0x770
    c8ec:	br	x17

000000000000c8f0 <mpfr_div_2ui@plt>:
    c8f0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c8f4:	ldr	x17, [x16, #1912]
    c8f8:	add	x16, x16, #0x778
    c8fc:	br	x17

000000000000c900 <mpfr_mpz_init2@plt>:
    c900:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c904:	ldr	x17, [x16, #1920]
    c908:	add	x16, x16, #0x780
    c90c:	br	x17

000000000000c910 <strcpy@plt>:
    c910:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c914:	ldr	x17, [x16, #1928]
    c918:	add	x16, x16, #0x788
    c91c:	br	x17

000000000000c920 <__gmpfr_set_sj_2exp@plt>:
    c920:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c924:	ldr	x17, [x16, #1936]
    c928:	add	x16, x16, #0x790
    c92c:	br	x17

000000000000c930 <mpfr_sqrt@plt>:
    c930:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c934:	ldr	x17, [x16, #1944]
    c938:	add	x16, x16, #0x798
    c93c:	br	x17

000000000000c940 <strncat@plt>:
    c940:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c944:	ldr	x17, [x16, #1952]
    c948:	add	x16, x16, #0x7a0
    c94c:	br	x17

000000000000c950 <__gmpfr_ceil_log2@plt>:
    c950:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c954:	ldr	x17, [x16, #1960]
    c958:	add	x16, x16, #0x7a8
    c95c:	br	x17

000000000000c960 <mpfr_mul_si@plt>:
    c960:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c964:	ldr	x17, [x16, #1968]
    c968:	add	x16, x16, #0x7b0
    c96c:	br	x17

000000000000c970 <mpfr_prec_round@plt>:
    c970:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c974:	ldr	x17, [x16, #1976]
    c978:	add	x16, x16, #0x7b8
    c97c:	br	x17

000000000000c980 <mpfr_ceil@plt>:
    c980:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c984:	ldr	x17, [x16, #1984]
    c988:	add	x16, x16, #0x7c0
    c98c:	br	x17

000000000000c990 <mpfr_min_prec@plt>:
    c990:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c994:	ldr	x17, [x16, #1992]
    c998:	add	x16, x16, #0x7c8
    c99c:	br	x17

000000000000c9a0 <mpfr_cmp3@plt>:
    c9a0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c9a4:	ldr	x17, [x16, #2000]
    c9a8:	add	x16, x16, #0x7d0
    c9ac:	br	x17

000000000000c9b0 <mpfr_cmpabs@plt>:
    c9b0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c9b4:	ldr	x17, [x16, #2008]
    c9b8:	add	x16, x16, #0x7d8
    c9bc:	br	x17

000000000000c9c0 <__gmpz_add@plt>:
    c9c0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c9c4:	ldr	x17, [x16, #2016]
    c9c8:	add	x16, x16, #0x7e0
    c9cc:	br	x17

000000000000c9d0 <mpfr_extract@plt>:
    c9d0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c9d4:	ldr	x17, [x16, #2024]
    c9d8:	add	x16, x16, #0x7e8
    c9dc:	br	x17

000000000000c9e0 <mpfr_eint@plt>:
    c9e0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c9e4:	ldr	x17, [x16, #2032]
    c9e8:	add	x16, x16, #0x7f0
    c9ec:	br	x17

000000000000c9f0 <mpfr_digamma@plt>:
    c9f0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    c9f4:	ldr	x17, [x16, #2040]
    c9f8:	add	x16, x16, #0x7f8
    c9fc:	br	x17

000000000000ca00 <mpfr_less_p@plt>:
    ca00:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ca04:	ldr	x17, [x16, #2048]
    ca08:	add	x16, x16, #0x800
    ca0c:	br	x17

000000000000ca10 <mpfr_ui_pow@plt>:
    ca10:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ca14:	ldr	x17, [x16, #2056]
    ca18:	add	x16, x16, #0x808
    ca1c:	br	x17

000000000000ca20 <mpfr_round_raw@plt>:
    ca20:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ca24:	ldr	x17, [x16, #2064]
    ca28:	add	x16, x16, #0x810
    ca2c:	br	x17

000000000000ca30 <mpfr_random_deviate_less@plt>:
    ca30:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ca34:	ldr	x17, [x16, #2072]
    ca38:	add	x16, x16, #0x818
    ca3c:	br	x17

000000000000ca40 <__gmpn_perfect_square_p@plt>:
    ca40:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ca44:	ldr	x17, [x16, #2080]
    ca48:	add	x16, x16, #0x820
    ca4c:	br	x17

000000000000ca50 <mpfr_ui_sub@plt>:
    ca50:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ca54:	ldr	x17, [x16, #2088]
    ca58:	add	x16, x16, #0x828
    ca5c:	br	x17

000000000000ca60 <mpfr_equal_p@plt>:
    ca60:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ca64:	ldr	x17, [x16, #2096]
    ca68:	add	x16, x16, #0x830
    ca6c:	br	x17

000000000000ca70 <mpfr_sub1@plt>:
    ca70:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ca74:	ldr	x17, [x16, #2104]
    ca78:	add	x16, x16, #0x838
    ca7c:	br	x17

000000000000ca80 <mpfr_init2@plt>:
    ca80:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ca84:	ldr	x17, [x16, #2112]
    ca88:	add	x16, x16, #0x840
    ca8c:	br	x17

000000000000ca90 <__gmpz_init2@plt>:
    ca90:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ca94:	ldr	x17, [x16, #2120]
    ca98:	add	x16, x16, #0x848
    ca9c:	br	x17

000000000000caa0 <__gmpn_scan1@plt>:
    caa0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    caa4:	ldr	x17, [x16, #2128]
    caa8:	add	x16, x16, #0x850
    caac:	br	x17

000000000000cab0 <mpfr_ubf_exp_less_p@plt>:
    cab0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cab4:	ldr	x17, [x16, #2136]
    cab8:	add	x16, x16, #0x858
    cabc:	br	x17

000000000000cac0 <mpfr_get_z_2exp@plt>:
    cac0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cac4:	ldr	x17, [x16, #2144]
    cac8:	add	x16, x16, #0x860
    cacc:	br	x17

000000000000cad0 <strncpy@plt>:
    cad0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cad4:	ldr	x17, [x16, #2152]
    cad8:	add	x16, x16, #0x868
    cadc:	br	x17

000000000000cae0 <mpfr_set_1_2@plt>:
    cae0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cae4:	ldr	x17, [x16, #2160]
    cae8:	add	x16, x16, #0x870
    caec:	br	x17

000000000000caf0 <__gmpq_div_2exp@plt>:
    caf0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    caf4:	ldr	x17, [x16, #2168]
    caf8:	add	x16, x16, #0x878
    cafc:	br	x17

000000000000cb00 <mpfr_ubf_diff_exp@plt>:
    cb00:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cb04:	ldr	x17, [x16, #2176]
    cb08:	add	x16, x16, #0x880
    cb0c:	br	x17

000000000000cb10 <__gmp_urandomb_ui@plt>:
    cb10:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cb14:	ldr	x17, [x16, #2184]
    cb18:	add	x16, x16, #0x888
    cb1c:	br	x17

000000000000cb20 <__gmpz_cmp_ui@plt>:
    cb20:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cb24:	ldr	x17, [x16, #2192]
    cb28:	add	x16, x16, #0x890
    cb2c:	br	x17

000000000000cb30 <mpfr_check_range@plt>:
    cb30:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cb34:	ldr	x17, [x16, #2200]
    cb38:	add	x16, x16, #0x898
    cb3c:	br	x17

000000000000cb40 <mpfr_assert_fail@plt>:
    cb40:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cb44:	ldr	x17, [x16, #2208]
    cb48:	add	x16, x16, #0x8a0
    cb4c:	br	x17

000000000000cb50 <__gmpz_init@plt>:
    cb50:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cb54:	ldr	x17, [x16, #2216]
    cb58:	add	x16, x16, #0x8a8
    cb5c:	br	x17

000000000000cb60 <__gmpz_sizeinbase@plt>:
    cb60:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cb64:	ldr	x17, [x16, #2224]
    cb68:	add	x16, x16, #0x8b0
    cb6c:	br	x17

000000000000cb70 <__gmpz_set_si@plt>:
    cb70:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cb74:	ldr	x17, [x16, #2232]
    cb78:	add	x16, x16, #0x8b8
    cb7c:	br	x17

000000000000cb80 <mpfr_ceil_mul@plt>:
    cb80:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cb84:	ldr	x17, [x16, #2240]
    cb88:	add	x16, x16, #0x8c0
    cb8c:	br	x17

000000000000cb90 <mpfr_number_p@plt>:
    cb90:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cb94:	ldr	x17, [x16, #2248]
    cb98:	add	x16, x16, #0x8c8
    cb9c:	br	x17

000000000000cba0 <mpfr_scale2@plt>:
    cba0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cba4:	ldr	x17, [x16, #2256]
    cba8:	add	x16, x16, #0x8d0
    cbac:	br	x17

000000000000cbb0 <mpfr_add1sp@plt>:
    cbb0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cbb4:	ldr	x17, [x16, #2264]
    cbb8:	add	x16, x16, #0x8d8
    cbbc:	br	x17

000000000000cbc0 <__gmpz_powm_ui@plt>:
    cbc0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cbc4:	ldr	x17, [x16, #2272]
    cbc8:	add	x16, x16, #0x8e0
    cbcc:	br	x17

000000000000cbd0 <mpfr_get_d_2exp@plt>:
    cbd0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cbd4:	ldr	x17, [x16, #2280]
    cbd8:	add	x16, x16, #0x8e8
    cbdc:	br	x17

000000000000cbe0 <mpfr_mpn_exp@plt>:
    cbe0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cbe4:	ldr	x17, [x16, #2288]
    cbe8:	add	x16, x16, #0x8f0
    cbec:	br	x17

000000000000cbf0 <printf@plt>:
    cbf0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cbf4:	ldr	x17, [x16, #2296]
    cbf8:	add	x16, x16, #0x8f8
    cbfc:	br	x17

000000000000cc00 <__errno_location@plt>:
    cc00:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cc04:	ldr	x17, [x16, #2304]
    cc08:	add	x16, x16, #0x900
    cc0c:	br	x17

000000000000cc10 <mpfr_jn@plt>:
    cc10:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cc14:	ldr	x17, [x16, #2312]
    cc18:	add	x16, x16, #0x908
    cc1c:	br	x17

000000000000cc20 <mpfr_free_func@plt>:
    cc20:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cc24:	ldr	x17, [x16, #2320]
    cc28:	add	x16, x16, #0x910
    cc2c:	br	x17

000000000000cc30 <__gmpz_addmul_ui@plt>:
    cc30:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cc34:	ldr	x17, [x16, #2328]
    cc38:	add	x16, x16, #0x918
    cc3c:	br	x17

000000000000cc40 <mpfr_sin_cos@plt>:
    cc40:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cc44:	ldr	x17, [x16, #2336]
    cc48:	add	x16, x16, #0x920
    cc4c:	br	x17

000000000000cc50 <mpfr_inits2@plt>:
    cc50:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cc54:	ldr	x17, [x16, #2344]
    cc58:	add	x16, x16, #0x928
    cc5c:	br	x17

000000000000cc60 <mpfr_div_ui@plt>:
    cc60:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cc64:	ldr	x17, [x16, #2352]
    cc68:	add	x16, x16, #0x930
    cc6c:	br	x17

000000000000cc70 <mpfr_fmodquo@plt>:
    cc70:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cc74:	ldr	x17, [x16, #2360]
    cc78:	add	x16, x16, #0x938
    cc7c:	br	x17

000000000000cc80 <mpfr_div_z@plt>:
    cc80:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cc84:	ldr	x17, [x16, #2368]
    cc88:	add	x16, x16, #0x940
    cc8c:	br	x17

000000000000cc90 <mpfr_exp2@plt>:
    cc90:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cc94:	ldr	x17, [x16, #2376]
    cc98:	add	x16, x16, #0x948
    cc9c:	br	x17

000000000000cca0 <mpfr_odd_p@plt>:
    cca0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cca4:	ldr	x17, [x16, #2384]
    cca8:	add	x16, x16, #0x950
    ccac:	br	x17

000000000000ccb0 <__gmpn_divrem@plt>:
    ccb0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ccb4:	ldr	x17, [x16, #2392]
    ccb8:	add	x16, x16, #0x958
    ccbc:	br	x17

000000000000ccc0 <__gmpn_sqrtrem@plt>:
    ccc0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ccc4:	ldr	x17, [x16, #2400]
    ccc8:	add	x16, x16, #0x960
    cccc:	br	x17

000000000000ccd0 <__gmpn_addmul_1@plt>:
    ccd0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ccd4:	ldr	x17, [x16, #2408]
    ccd8:	add	x16, x16, #0x968
    ccdc:	br	x17

000000000000cce0 <fprintf@plt>:
    cce0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cce4:	ldr	x17, [x16, #2416]
    cce8:	add	x16, x16, #0x970
    ccec:	br	x17

000000000000ccf0 <mpfr_allocate_func@plt>:
    ccf0:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    ccf4:	ldr	x17, [x16, #2424]
    ccf8:	add	x16, x16, #0x978
    ccfc:	br	x17

000000000000cd00 <__gmpz_urandomb@plt>:
    cd00:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cd04:	ldr	x17, [x16, #2432]
    cd08:	add	x16, x16, #0x980
    cd0c:	br	x17

000000000000cd10 <mpfr_remainder@plt>:
    cd10:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cd14:	ldr	x17, [x16, #2440]
    cd18:	add	x16, x16, #0x988
    cd1c:	br	x17

000000000000cd20 <mpfr_cbrt@plt>:
    cd20:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cd24:	ldr	x17, [x16, #2448]
    cd28:	add	x16, x16, #0x990
    cd2c:	br	x17

000000000000cd30 <__gmpn_mul_1@plt>:
    cd30:	adrp	x16, 80000 <mpfr_agm@@Base+0x69750>
    cd34:	ldr	x17, [x16, #2456]
    cd38:	add	x16, x16, #0x998
    cd3c:	br	x17

000000000000cd40 <__gmpfr_emin@plt>:
    cd40:	stp	x2, x3, [sp, #-16]!
    cd44:	adrp	x2, 7f000 <__gmpfr_l2b@@Base+0x200>
    cd48:	adrp	x3, 7f000 <__gmpfr_l2b@@Base+0x200>
    cd4c:	ldr	x2, [x2, #4064]

000000000000cd50 <__gmpfr_emax@plt>:
    cd50:	add	x3, x3, #0xfe8
    cd54:	br	x2
    cd58:	nop
    cd5c:	nop

Disassembly of section .text:

000000000000cd60 <mpfr_get_emin@@Base>:
    cd60:	stp	x29, x30, [sp, #-16]!
    cd64:	mrs	x1, tpidr_el0
    cd68:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    cd6c:	ldr	x2, [x0, #2512]
    cd70:	add	x0, x0, #0x9d0
    cd74:	blr	x2
    cd78:	mov	x29, sp
    cd7c:	ldp	x29, x30, [sp], #16
    cd80:	ldr	x0, [x1, x0]
    cd84:	ret

000000000000cd88 <mpfr_get_emin_min@@Base>:
    cd88:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
    cd8c:	ret

000000000000cd90 <mpfr_get_emin_max@@Base>:
    cd90:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    cd94:	ret

000000000000cd98 <mpfr_get_emax@@Base>:
    cd98:	stp	x29, x30, [sp, #-16]!
    cd9c:	mrs	x1, tpidr_el0
    cda0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    cda4:	ldr	x2, [x0, #2544]
    cda8:	add	x0, x0, #0x9f0
    cdac:	blr	x2
    cdb0:	mov	x29, sp
    cdb4:	ldp	x29, x30, [sp], #16
    cdb8:	ldr	x0, [x1, x0]
    cdbc:	ret

000000000000cdc0 <mpfr_get_emax_min@@Base>:
    cdc0:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
    cdc4:	ret

000000000000cdc8 <mpfr_get_emax_max@@Base>:
    cdc8:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    cdcc:	ret

000000000000cdd0 <mpfr_flags_clear@@Base>:
    cdd0:	mrs	x1, tpidr_el0
    cdd4:	stp	x29, x30, [sp, #-16]!
    cdd8:	mov	w2, w0
    cddc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    cde0:	ldr	x3, [x0, #2576]
    cde4:	add	x0, x0, #0xa10
    cde8:	blr	x3
    cdec:	add	x0, x1, x0
    cdf0:	mov	x29, sp
    cdf4:	eor	w2, w2, #0x3f
    cdf8:	ldr	w1, [x0]
    cdfc:	and	w2, w2, w1
    ce00:	str	w2, [x0]
    ce04:	ldp	x29, x30, [sp], #16
    ce08:	ret

000000000000ce0c <mpfr_flags_set@@Base>:
    ce0c:	mrs	x1, tpidr_el0
    ce10:	stp	x29, x30, [sp, #-16]!
    ce14:	mov	w2, w0
    ce18:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    ce1c:	ldr	x3, [x0, #2576]
    ce20:	add	x0, x0, #0xa10
    ce24:	blr	x3
    ce28:	add	x0, x1, x0
    ce2c:	mov	x29, sp
    ce30:	ldr	w1, [x0]
    ce34:	orr	w1, w1, w2
    ce38:	str	w1, [x0]
    ce3c:	ldp	x29, x30, [sp], #16
    ce40:	ret

000000000000ce44 <mpfr_flags_test@@Base>:
    ce44:	mrs	x1, tpidr_el0
    ce48:	stp	x29, x30, [sp, #-16]!
    ce4c:	mov	w2, w0
    ce50:	mov	x29, sp
    ce54:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    ce58:	ldr	x3, [x0, #2576]
    ce5c:	add	x0, x0, #0xa10
    ce60:	blr	x3
    ce64:	ldr	w0, [x1, x0]
    ce68:	ldp	x29, x30, [sp], #16
    ce6c:	and	w0, w2, w0
    ce70:	ret

000000000000ce74 <mpfr_flags_save@@Base>:
    ce74:	stp	x29, x30, [sp, #-16]!
    ce78:	mrs	x1, tpidr_el0
    ce7c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    ce80:	ldr	x2, [x0, #2576]
    ce84:	add	x0, x0, #0xa10
    ce88:	blr	x2
    ce8c:	mov	x29, sp
    ce90:	ldr	w0, [x1, x0]
    ce94:	ldp	x29, x30, [sp], #16
    ce98:	ret

000000000000ce9c <mpfr_flags_restore@@Base>:
    ce9c:	mrs	x2, tpidr_el0
    cea0:	stp	x29, x30, [sp, #-16]!
    cea4:	mov	w4, w0
    cea8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    ceac:	ldr	x3, [x0, #2576]
    ceb0:	add	x0, x0, #0xa10
    ceb4:	blr	x3
    ceb8:	add	x0, x2, x0
    cebc:	mov	x29, sp
    cec0:	eor	w2, w1, #0x3f
    cec4:	and	w1, w1, w4
    cec8:	ldr	w3, [x0]
    cecc:	and	w2, w2, w3
    ced0:	orr	w1, w2, w1
    ced4:	str	w1, [x0]
    ced8:	ldp	x29, x30, [sp], #16
    cedc:	ret

000000000000cee0 <mpfr_clear_underflow@@Base>:
    cee0:	mrs	x1, tpidr_el0
    cee4:	stp	x29, x30, [sp, #-16]!
    cee8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    ceec:	ldr	x2, [x0, #2576]
    cef0:	add	x0, x0, #0xa10
    cef4:	blr	x2
    cef8:	add	x0, x1, x0
    cefc:	mov	x29, sp
    cf00:	ldr	w1, [x0]
    cf04:	and	w1, w1, #0x3e
    cf08:	str	w1, [x0]
    cf0c:	ldp	x29, x30, [sp], #16
    cf10:	ret

000000000000cf14 <mpfr_clear_overflow@@Base>:
    cf14:	mrs	x1, tpidr_el0
    cf18:	stp	x29, x30, [sp, #-16]!
    cf1c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    cf20:	ldr	x2, [x0, #2576]
    cf24:	add	x0, x0, #0xa10
    cf28:	blr	x2
    cf2c:	add	x0, x1, x0
    cf30:	mov	x29, sp
    cf34:	mov	w2, #0x3d                  	// #61
    cf38:	ldr	w1, [x0]
    cf3c:	and	w1, w1, w2
    cf40:	str	w1, [x0]
    cf44:	ldp	x29, x30, [sp], #16
    cf48:	ret

000000000000cf4c <mpfr_clear_divby0@@Base>:
    cf4c:	mrs	x1, tpidr_el0
    cf50:	stp	x29, x30, [sp, #-16]!
    cf54:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    cf58:	ldr	x2, [x0, #2576]
    cf5c:	add	x0, x0, #0xa10
    cf60:	blr	x2
    cf64:	add	x0, x1, x0
    cf68:	mov	x29, sp
    cf6c:	ldr	w1, [x0]
    cf70:	and	w1, w1, #0x1f
    cf74:	str	w1, [x0]
    cf78:	ldp	x29, x30, [sp], #16
    cf7c:	ret

000000000000cf80 <mpfr_clear_nanflag@@Base>:
    cf80:	mrs	x1, tpidr_el0
    cf84:	stp	x29, x30, [sp, #-16]!
    cf88:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    cf8c:	ldr	x2, [x0, #2576]
    cf90:	add	x0, x0, #0xa10
    cf94:	blr	x2
    cf98:	add	x0, x1, x0
    cf9c:	mov	x29, sp
    cfa0:	mov	w2, #0x3b                  	// #59
    cfa4:	ldr	w1, [x0]
    cfa8:	and	w1, w1, w2
    cfac:	str	w1, [x0]
    cfb0:	ldp	x29, x30, [sp], #16
    cfb4:	ret

000000000000cfb8 <mpfr_clear_inexflag@@Base>:
    cfb8:	mrs	x1, tpidr_el0
    cfbc:	stp	x29, x30, [sp, #-16]!
    cfc0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    cfc4:	ldr	x2, [x0, #2576]
    cfc8:	add	x0, x0, #0xa10
    cfcc:	blr	x2
    cfd0:	add	x0, x1, x0
    cfd4:	mov	x29, sp
    cfd8:	mov	w2, #0x37                  	// #55
    cfdc:	ldr	w1, [x0]
    cfe0:	and	w1, w1, w2
    cfe4:	str	w1, [x0]
    cfe8:	ldp	x29, x30, [sp], #16
    cfec:	ret

000000000000cff0 <mpfr_clear_erangeflag@@Base>:
    cff0:	mrs	x1, tpidr_el0
    cff4:	stp	x29, x30, [sp, #-16]!
    cff8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    cffc:	ldr	x2, [x0, #2576]
    d000:	add	x0, x0, #0xa10
    d004:	blr	x2
    d008:	add	x0, x1, x0
    d00c:	mov	x29, sp
    d010:	mov	w2, #0x2f                  	// #47
    d014:	ldr	w1, [x0]
    d018:	and	w1, w1, w2
    d01c:	str	w1, [x0]
    d020:	ldp	x29, x30, [sp], #16
    d024:	ret

000000000000d028 <mpfr_set_underflow@@Base>:
    d028:	mrs	x1, tpidr_el0
    d02c:	stp	x29, x30, [sp, #-16]!
    d030:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    d034:	ldr	x2, [x0, #2576]
    d038:	add	x0, x0, #0xa10
    d03c:	blr	x2
    d040:	add	x0, x1, x0
    d044:	mov	x29, sp
    d048:	ldr	w1, [x0]
    d04c:	orr	w1, w1, #0x1
    d050:	str	w1, [x0]
    d054:	ldp	x29, x30, [sp], #16
    d058:	ret

000000000000d05c <mpfr_set_overflow@@Base>:
    d05c:	mrs	x1, tpidr_el0
    d060:	stp	x29, x30, [sp, #-16]!
    d064:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    d068:	ldr	x2, [x0, #2576]
    d06c:	add	x0, x0, #0xa10
    d070:	blr	x2
    d074:	add	x0, x1, x0
    d078:	mov	x29, sp
    d07c:	ldr	w1, [x0]
    d080:	orr	w1, w1, #0x2
    d084:	str	w1, [x0]
    d088:	ldp	x29, x30, [sp], #16
    d08c:	ret

000000000000d090 <mpfr_set_divby0@@Base>:
    d090:	mrs	x1, tpidr_el0
    d094:	stp	x29, x30, [sp, #-16]!
    d098:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    d09c:	ldr	x2, [x0, #2576]
    d0a0:	add	x0, x0, #0xa10
    d0a4:	blr	x2
    d0a8:	add	x0, x1, x0
    d0ac:	mov	x29, sp
    d0b0:	ldr	w1, [x0]
    d0b4:	orr	w1, w1, #0x20
    d0b8:	str	w1, [x0]
    d0bc:	ldp	x29, x30, [sp], #16
    d0c0:	ret

000000000000d0c4 <mpfr_set_nanflag@@Base>:
    d0c4:	mrs	x1, tpidr_el0
    d0c8:	stp	x29, x30, [sp, #-16]!
    d0cc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    d0d0:	ldr	x2, [x0, #2576]
    d0d4:	add	x0, x0, #0xa10
    d0d8:	blr	x2
    d0dc:	add	x0, x1, x0
    d0e0:	mov	x29, sp
    d0e4:	ldr	w1, [x0]
    d0e8:	orr	w1, w1, #0x4
    d0ec:	str	w1, [x0]
    d0f0:	ldp	x29, x30, [sp], #16
    d0f4:	ret

000000000000d0f8 <mpfr_set_inexflag@@Base>:
    d0f8:	mrs	x1, tpidr_el0
    d0fc:	stp	x29, x30, [sp, #-16]!
    d100:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    d104:	ldr	x2, [x0, #2576]
    d108:	add	x0, x0, #0xa10
    d10c:	blr	x2
    d110:	add	x0, x1, x0
    d114:	mov	x29, sp
    d118:	ldr	w1, [x0]
    d11c:	orr	w1, w1, #0x8
    d120:	str	w1, [x0]
    d124:	ldp	x29, x30, [sp], #16
    d128:	ret

000000000000d12c <mpfr_set_erangeflag@@Base>:
    d12c:	mrs	x1, tpidr_el0
    d130:	stp	x29, x30, [sp, #-16]!
    d134:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    d138:	ldr	x2, [x0, #2576]
    d13c:	add	x0, x0, #0xa10
    d140:	blr	x2
    d144:	add	x0, x1, x0
    d148:	mov	x29, sp
    d14c:	ldr	w1, [x0]
    d150:	orr	w1, w1, #0x10
    d154:	str	w1, [x0]
    d158:	ldp	x29, x30, [sp], #16
    d15c:	ret

000000000000d160 <mpfr_underflow_p@@Base>:
    d160:	mrs	x1, tpidr_el0
    d164:	stp	x29, x30, [sp, #-16]!
    d168:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    d16c:	ldr	x2, [x0, #2576]
    d170:	add	x0, x0, #0xa10
    d174:	blr	x2
    d178:	mov	x29, sp
    d17c:	ldr	w0, [x1, x0]
    d180:	ldp	x29, x30, [sp], #16
    d184:	and	w0, w0, #0x1
    d188:	ret

000000000000d18c <mpfr_overflow_p@@Base>:
    d18c:	mrs	x1, tpidr_el0
    d190:	stp	x29, x30, [sp, #-16]!
    d194:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    d198:	ldr	x2, [x0, #2576]
    d19c:	add	x0, x0, #0xa10
    d1a0:	blr	x2
    d1a4:	mov	x29, sp
    d1a8:	ldr	w0, [x1, x0]
    d1ac:	ldp	x29, x30, [sp], #16
    d1b0:	and	w0, w0, #0x2
    d1b4:	ret

000000000000d1b8 <mpfr_divby0_p@@Base>:
    d1b8:	mrs	x1, tpidr_el0
    d1bc:	stp	x29, x30, [sp, #-16]!
    d1c0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    d1c4:	ldr	x2, [x0, #2576]
    d1c8:	add	x0, x0, #0xa10
    d1cc:	blr	x2
    d1d0:	mov	x29, sp
    d1d4:	ldr	w0, [x1, x0]
    d1d8:	ldp	x29, x30, [sp], #16
    d1dc:	and	w0, w0, #0x20
    d1e0:	ret

000000000000d1e4 <mpfr_nanflag_p@@Base>:
    d1e4:	mrs	x1, tpidr_el0
    d1e8:	stp	x29, x30, [sp, #-16]!
    d1ec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    d1f0:	ldr	x2, [x0, #2576]
    d1f4:	add	x0, x0, #0xa10
    d1f8:	blr	x2
    d1fc:	mov	x29, sp
    d200:	ldr	w0, [x1, x0]
    d204:	ldp	x29, x30, [sp], #16
    d208:	and	w0, w0, #0x4
    d20c:	ret

000000000000d210 <mpfr_inexflag_p@@Base>:
    d210:	mrs	x1, tpidr_el0
    d214:	stp	x29, x30, [sp, #-16]!
    d218:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    d21c:	ldr	x2, [x0, #2576]
    d220:	add	x0, x0, #0xa10
    d224:	blr	x2
    d228:	mov	x29, sp
    d22c:	ldr	w0, [x1, x0]
    d230:	ldp	x29, x30, [sp], #16
    d234:	and	w0, w0, #0x8
    d238:	ret

000000000000d23c <mpfr_erangeflag_p@@Base>:
    d23c:	mrs	x1, tpidr_el0
    d240:	stp	x29, x30, [sp, #-16]!
    d244:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    d248:	ldr	x2, [x0, #2576]
    d24c:	add	x0, x0, #0xa10
    d250:	blr	x2
    d254:	mov	x29, sp
    d258:	ldr	w0, [x1, x0]
    d25c:	ldp	x29, x30, [sp], #16
    d260:	and	w0, w0, #0x10
    d264:	ret

000000000000d268 <mpfr_underflow@@Base>:
    d268:	stp	x29, x30, [sp, #-48]!
    d26c:	cmp	w1, #0x1
    d270:	mov	x29, sp
    d274:	stp	x19, x20, [sp, #16]
    d278:	mov	w20, w2
    d27c:	mrs	x19, tpidr_el0
    d280:	str	x21, [sp, #32]
    d284:	mov	x21, x0
    d288:	b.eq	d298 <mpfr_underflow@@Base+0x30>  // b.none
    d28c:	add	w1, w1, w2, lsr #31
    d290:	cmp	w1, #0x3
    d294:	b.ne	d2a8 <mpfr_underflow@@Base+0x40>  // b.any
    d298:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    d29c:	mov	w1, #0xffffffff            	// #-1
    d2a0:	str	x0, [x21, #16]
    d2a4:	b	d2c8 <mpfr_underflow@@Base+0x60>
    d2a8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    d2ac:	ldr	x1, [x0, #2512]
    d2b0:	add	x0, x0, #0x9d0
    d2b4:	blr	x1
    d2b8:	ldr	x1, [x19, x0]
    d2bc:	mov	x0, x21
    d2c0:	bl	c2b0 <mpfr_setmin@plt>
    d2c4:	mov	w1, #0x1                   	// #1
    d2c8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    d2cc:	ldr	x2, [x0, #2576]
    d2d0:	add	x0, x0, #0xa10
    d2d4:	blr	x2
    d2d8:	add	x19, x19, x0
    d2dc:	mov	w2, #0x9                   	// #9
    d2e0:	str	w20, [x21, #8]
    d2e4:	cmp	w20, #0x0
    d2e8:	ldr	w0, [x19]
    d2ec:	orr	w0, w0, w2
    d2f0:	str	w0, [x19]
    d2f4:	b.gt	d2fc <mpfr_underflow@@Base+0x94>
    d2f8:	neg	w1, w1
    d2fc:	mov	w0, w1
    d300:	ldp	x19, x20, [sp, #16]
    d304:	ldr	x21, [sp, #32]
    d308:	ldp	x29, x30, [sp], #48
    d30c:	ret

000000000000d310 <mpfr_overflow@@Base>:
    d310:	stp	x29, x30, [sp, #-48]!
    d314:	cmp	w1, #0x1
    d318:	mov	x29, sp
    d31c:	stp	x19, x20, [sp, #16]
    d320:	mov	w20, w2
    d324:	mrs	x19, tpidr_el0
    d328:	str	x21, [sp, #32]
    d32c:	mov	x21, x0
    d330:	b.eq	d340 <mpfr_overflow@@Base+0x30>  // b.none
    d334:	add	w1, w1, w2, lsr #31
    d338:	cmp	w1, #0x3
    d33c:	b.ne	d364 <mpfr_overflow@@Base+0x54>  // b.any
    d340:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    d344:	ldr	x1, [x0, #2544]
    d348:	add	x0, x0, #0x9f0
    d34c:	blr	x1
    d350:	ldr	x1, [x19, x0]
    d354:	mov	x0, x21
    d358:	bl	c0d0 <mpfr_setmax@plt>
    d35c:	mov	w1, #0xffffffff            	// #-1
    d360:	b	d370 <mpfr_overflow@@Base+0x60>
    d364:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    d368:	mov	w1, #0x1                   	// #1
    d36c:	str	x0, [x21, #16]
    d370:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    d374:	ldr	x2, [x0, #2576]
    d378:	add	x0, x0, #0xa10
    d37c:	blr	x2
    d380:	add	x19, x19, x0
    d384:	mov	w2, #0xa                   	// #10
    d388:	str	w20, [x21, #8]
    d38c:	cmp	w20, #0x0
    d390:	ldr	w0, [x19]
    d394:	orr	w0, w0, w2
    d398:	str	w0, [x19]
    d39c:	b.gt	d3a4 <mpfr_overflow@@Base+0x94>
    d3a0:	neg	w1, w1
    d3a4:	mov	w0, w1
    d3a8:	ldp	x19, x20, [sp, #16]
    d3ac:	ldr	x21, [sp, #32]
    d3b0:	ldp	x29, x30, [sp], #48
    d3b4:	ret

000000000000d3b8 <mpfr_assert_fail@@Base>:
    d3b8:	stp	x29, x30, [sp, #-48]!
    d3bc:	mov	x29, sp
    d3c0:	stp	x19, x20, [sp, #16]
    d3c4:	adrp	x19, 7f000 <__gmpfr_l2b@@Base+0x200>
    d3c8:	stp	x21, x22, [sp, #32]
    d3cc:	mov	x21, x2
    d3d0:	cbz	x0, d414 <mpfr_assert_fail@@Base+0x5c>
    d3d4:	mov	w20, w1
    d3d8:	ldrb	w1, [x0]
    d3dc:	cbz	w1, d414 <mpfr_assert_fail@@Base+0x5c>
    d3e0:	ldr	x22, [x19, #3968]
    d3e4:	mov	x2, x0
    d3e8:	adrp	x1, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
    d3ec:	add	x1, x1, #0x178
    d3f0:	ldr	x0, [x22]
    d3f4:	bl	cce0 <fprintf@plt>
    d3f8:	cmn	w20, #0x1
    d3fc:	b.eq	d414 <mpfr_assert_fail@@Base+0x5c>  // b.none
    d400:	ldr	x0, [x22]
    d404:	adrp	x1, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
    d408:	mov	w2, w20
    d40c:	add	x1, x1, #0x180
    d410:	bl	cce0 <fprintf@plt>
    d414:	ldr	x19, [x19, #3968]
    d418:	mov	x2, x21
    d41c:	adrp	x1, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
    d420:	add	x1, x1, #0x188
    d424:	ldr	x0, [x19]
    d428:	bl	cce0 <fprintf@plt>
    d42c:	bl	c3e0 <abort@plt>

000000000000d430 <mpfr_abort_prec_max@@Base>:
    d430:	stp	x29, x30, [sp, #-16]!
    d434:	adrp	x3, 7f000 <__gmpfr_l2b@@Base+0x200>
    d438:	mov	x2, #0x21                  	// #33
    d43c:	mov	x29, sp
    d440:	ldr	x3, [x3, #3968]
    d444:	mov	x1, #0x1                   	// #1
    d448:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
    d44c:	add	x0, x0, #0x9a0
    d450:	ldr	x3, [x3]
    d454:	bl	c8c0 <fwrite@plt>
    d458:	bl	c3e0 <abort@plt>
    d45c:	nop

000000000000d460 <mpfr_add@@Base>:
    d460:	stp	x29, x30, [sp, #-48]!
    d464:	mov	x4, #0x5                   	// #5
    d468:	movk	x4, #0x8000, lsl #48
    d46c:	mov	x29, sp
    d470:	ldr	x5, [x1, #16]
    d474:	stp	x19, x20, [sp, #16]
    d478:	mov	x19, x1
    d47c:	stp	x21, x22, [sp, #32]
    d480:	mov	x20, x2
    d484:	mov	x22, x0
    d488:	mov	w21, w3
    d48c:	cmp	x5, x4
    d490:	b.lt	d504 <mpfr_add@@Base+0xa4>  // b.tstop
    d494:	ldr	x6, [x2, #16]
    d498:	cmp	x6, x4
    d49c:	b.lt	d598 <mpfr_add@@Base+0x138>  // b.tstop
    d4a0:	ldr	w4, [x2, #8]
    d4a4:	ldr	w8, [x1, #8]
    d4a8:	ldr	x7, [x0]
    d4ac:	cmp	w8, w4
    d4b0:	ldr	x4, [x1]
    d4b4:	b.ne	d604 <mpfr_add@@Base+0x1a4>  // b.any
    d4b8:	cmp	x4, x7
    d4bc:	b.ne	d4dc <mpfr_add@@Base+0x7c>  // b.any
    d4c0:	ldr	x7, [x2]
    d4c4:	cmp	x4, x7
    d4c8:	b.ne	d4dc <mpfr_add@@Base+0x7c>  // b.any
    d4cc:	ldp	x19, x20, [sp, #16]
    d4d0:	ldp	x21, x22, [sp, #32]
    d4d4:	ldp	x29, x30, [sp], #48
    d4d8:	b	cbb0 <mpfr_add1sp@plt>
    d4dc:	mov	w3, w21
    d4e0:	cmp	x5, x6
    d4e4:	b.ge	d5f8 <mpfr_add@@Base+0x198>  // b.tcont
    d4e8:	mov	x2, x19
    d4ec:	mov	x1, x20
    d4f0:	mov	x0, x22
    d4f4:	ldp	x19, x20, [sp, #16]
    d4f8:	ldp	x21, x22, [sp, #32]
    d4fc:	ldp	x29, x30, [sp], #48
    d500:	b	c780 <mpfr_add1@plt>
    d504:	mov	x1, #0x2                   	// #2
    d508:	movk	x1, #0x8000, lsl #48
    d50c:	cmp	x5, x1
    d510:	b.eq	d554 <mpfr_add@@Base+0xf4>  // b.none
    d514:	ldr	x6, [x2, #16]
    d518:	cmp	x6, x1
    d51c:	b.eq	d554 <mpfr_add@@Base+0xf4>  // b.none
    d520:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    d524:	cmp	x5, x1
    d528:	b.ne	d65c <mpfr_add@@Base+0x1fc>  // b.any
    d52c:	ldr	w0, [x19, #8]
    d530:	cmp	x6, x5
    d534:	b.ne	d544 <mpfr_add@@Base+0xe4>  // b.any
    d538:	ldr	w1, [x2, #8]
    d53c:	cmp	w1, w0
    d540:	b.ne	d554 <mpfr_add@@Base+0xf4>  // b.any
    d544:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    d548:	str	w0, [x22, #8]
    d54c:	str	x1, [x22, #16]
    d550:	b	d584 <mpfr_add@@Base+0x124>
    d554:	mrs	x1, tpidr_el0
    d558:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    d55c:	ldr	x2, [x0, #2576]
    d560:	add	x0, x0, #0xa10
    d564:	blr	x2
    d568:	add	x0, x1, x0
    d56c:	mov	x1, #0x2                   	// #2
    d570:	movk	x1, #0x8000, lsl #48
    d574:	str	x1, [x22, #16]
    d578:	ldr	w1, [x0]
    d57c:	orr	w1, w1, #0x4
    d580:	str	w1, [x0]
    d584:	mov	w0, #0x0                   	// #0
    d588:	ldp	x19, x20, [sp, #16]
    d58c:	ldp	x21, x22, [sp, #32]
    d590:	ldp	x29, x30, [sp], #48
    d594:	ret
    d598:	mov	x0, #0x2                   	// #2
    d59c:	movk	x0, #0x8000, lsl #48
    d5a0:	cmp	x6, x0
    d5a4:	b.eq	d554 <mpfr_add@@Base+0xf4>  // b.none
    d5a8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    d5ac:	cmp	x6, x0
    d5b0:	b.eq	d628 <mpfr_add@@Base+0x1c8>  // b.none
    d5b4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    d5b8:	cmp	x6, x0
    d5bc:	b.eq	d6b8 <mpfr_add@@Base+0x258>  // b.none
    d5c0:	ldr	w1, [x19, #8]
    d5c4:	ldr	w0, [x20, #8]
    d5c8:	cmp	w1, w0
    d5cc:	b.ne	d63c <mpfr_add@@Base+0x1dc>  // b.any
    d5d0:	mov	x0, #0x4                   	// #4
    d5d4:	movk	x0, #0x8000, lsl #48
    d5d8:	cmp	x6, x0
    d5dc:	ccmp	x5, x0, #0x4, ne  // ne = any
    d5e0:	b.eq	d6d8 <mpfr_add@@Base+0x278>  // b.none
    d5e4:	cmp	x5, x6
    d5e8:	cset	w0, lt  // lt = tstop
    d5ec:	mov	w3, w21
    d5f0:	cbnz	w0, d4e8 <mpfr_add@@Base+0x88>
    d5f4:	nop
    d5f8:	mov	x2, x20
    d5fc:	mov	x1, x19
    d600:	b	d4f0 <mpfr_add@@Base+0x90>
    d604:	cmp	x4, x7
    d608:	b.ne	d63c <mpfr_add@@Base+0x1dc>  // b.any
    d60c:	ldr	x5, [x2]
    d610:	cmp	x4, x5
    d614:	b.ne	d63c <mpfr_add@@Base+0x1dc>  // b.any
    d618:	ldp	x19, x20, [sp, #16]
    d61c:	ldp	x21, x22, [sp, #32]
    d620:	ldp	x29, x30, [sp], #48
    d624:	b	c0f0 <mpfr_sub1sp@plt>
    d628:	ldr	w1, [x20, #8]
    d62c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    d630:	str	w1, [x22, #8]
    d634:	str	x0, [x22, #16]
    d638:	b	d584 <mpfr_add@@Base+0x124>
    d63c:	mov	w3, w21
    d640:	mov	x2, x20
    d644:	mov	x1, x19
    d648:	mov	x0, x22
    d64c:	ldp	x19, x20, [sp, #16]
    d650:	ldp	x21, x22, [sp, #32]
    d654:	ldp	x29, x30, [sp], #48
    d658:	b	ca70 <mpfr_sub1@plt>
    d65c:	cmp	x6, x1
    d660:	b.eq	d628 <mpfr_add@@Base+0x1c8>  // b.none
    d664:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    d668:	cmp	x5, x1
    d66c:	b.ne	d5b4 <mpfr_add@@Base+0x154>  // b.any
    d670:	cmp	x6, x5
    d674:	b.ne	d69c <mpfr_add@@Base+0x23c>  // b.any
    d678:	ldr	w1, [x19, #8]
    d67c:	cmp	w3, #0x3
    d680:	b.eq	d6f0 <mpfr_add@@Base+0x290>  // b.none
    d684:	mov	w0, #0x1                   	// #1
    d688:	tbnz	w1, #31, d718 <mpfr_add@@Base+0x2b8>
    d68c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    d690:	str	w0, [x22, #8]
    d694:	str	x1, [x22, #16]
    d698:	b	d584 <mpfr_add@@Base+0x124>
    d69c:	mov	w2, w3
    d6a0:	mov	x1, x20
    d6a4:	ldr	w3, [x20, #8]
    d6a8:	ldp	x19, x20, [sp, #16]
    d6ac:	ldp	x21, x22, [sp, #32]
    d6b0:	ldp	x29, x30, [sp], #48
    d6b4:	b	c6a0 <mpfr_set4@plt>
    d6b8:	ldr	w3, [x19, #8]
    d6bc:	mov	w2, w21
    d6c0:	mov	x0, x22
    d6c4:	mov	x1, x19
    d6c8:	ldp	x19, x20, [sp, #16]
    d6cc:	ldp	x21, x22, [sp, #32]
    d6d0:	ldp	x29, x30, [sp], #48
    d6d4:	b	c6a0 <mpfr_set4@plt>
    d6d8:	mov	x1, x20
    d6dc:	mov	x0, x19
    d6e0:	bl	cab0 <mpfr_ubf_exp_less_p@plt>
    d6e4:	cmp	w0, #0x0
    d6e8:	cset	w0, ne  // ne = any
    d6ec:	b	d5ec <mpfr_add@@Base+0x18c>
    d6f0:	cmp	w1, #0x0
    d6f4:	mov	w0, #0xffffffff            	// #-1
    d6f8:	b.le	d68c <mpfr_add@@Base+0x22c>
    d6fc:	ldr	w1, [x2, #8]
    d700:	mov	w0, #0x1                   	// #1
    d704:	cmp	w1, #0x0
    d708:	b.gt	d68c <mpfr_add@@Base+0x22c>
    d70c:	cmp	w1, w0
    d710:	cneg	w0, w0, lt  // lt = tstop
    d714:	b	d68c <mpfr_add@@Base+0x22c>
    d718:	ldr	w1, [x2, #8]
    d71c:	mov	w0, #0xffffffff            	// #-1
    d720:	tbnz	w1, #31, d68c <mpfr_add@@Base+0x22c>
    d724:	cmn	w1, #0x1
    d728:	mov	w0, #0xffffffff            	// #-1
    d72c:	cneg	w0, w0, gt
    d730:	b	d68c <mpfr_add@@Base+0x22c>
    d734:	nop

000000000000d738 <mpfr_add1@@Base>:
    d738:	stp	x29, x30, [sp, #-176]!
    d73c:	mov	x4, x1
    d740:	mov	x9, x2
    d744:	mov	x29, sp
    d748:	stp	x23, x24, [sp, #48]
    d74c:	ldr	x23, [x1, #16]
    d750:	stp	x19, x20, [sp, #16]
    d754:	mov	w20, w3
    d758:	stp	x21, x22, [sp, #32]
    d75c:	stp	x25, x26, [sp, #64]
    d760:	mov	x25, x0
    d764:	mov	x0, #0x4                   	// #4
    d768:	stp	x27, x28, [sp, #80]
    d76c:	movk	x0, #0x8000, lsl #48
    d770:	cmp	x23, x0
    d774:	b.eq	dd40 <mpfr_add1@@Base+0x608>  // b.none
    d778:	ldr	x21, [x25]
    d77c:	str	xzr, [x29, #168]
    d780:	ldr	x8, [x9]
    d784:	sub	x22, x21, #0x1
    d788:	ldr	x19, [x4]
    d78c:	asr	x22, x22, #6
    d790:	sub	x8, x8, #0x1
    d794:	add	x28, x22, #0x1
    d798:	ldr	x1, [x4, #24]
    d79c:	lsl	x0, x28, #6
    d7a0:	asr	x8, x8, #6
    d7a4:	sub	x19, x19, #0x1
    d7a8:	ldr	x26, [x25, #24]
    d7ac:	sub	w21, w0, w21
    d7b0:	stp	x1, x0, [x29, #144]
    d7b4:	add	x0, x8, #0x1
    d7b8:	asr	x19, x19, #6
    d7bc:	str	x0, [x29, #136]
    d7c0:	cmp	x26, x1
    d7c4:	ldr	x24, [x9, #24]
    d7c8:	b.eq	dd94 <mpfr_add1@@Base+0x65c>  // b.none
    d7cc:	cmp	x26, x24
    d7d0:	b.eq	db40 <mpfr_add1@@Base+0x408>  // b.none
    d7d4:	ldr	w0, [x4, #8]
    d7d8:	cmp	w20, #0x2
    d7dc:	str	w0, [x25, #8]
    d7e0:	b.eq	da84 <mpfr_add1@@Base+0x34c>  // b.none
    d7e4:	cmp	w20, #0x3
    d7e8:	b.eq	d9a0 <mpfr_add1@@Base+0x268>  // b.none
    d7ec:	ldr	x0, [x9, #16]
    d7f0:	mov	x1, #0x4                   	// #4
    d7f4:	movk	x1, #0x8000, lsl #48
    d7f8:	sub	x27, x23, x0
    d7fc:	cmp	x0, x1
    d800:	b.eq	d9c4 <mpfr_add1@@Base+0x28c>  // b.none
    d804:	ldr	x0, [x29, #152]
    d808:	cmp	x0, x27
    d80c:	b.ls	dd14 <mpfr_add1@@Base+0x5dc>  // b.plast
    d810:	ldr	x0, [x29, #152]
    d814:	sub	x2, x0, x27
    d818:	sub	x2, x2, #0x1
    d81c:	asr	x2, x2, #6
    d820:	cmp	x8, x2
    d824:	add	x9, x2, #0x1
    d828:	b.lt	de08 <mpfr_add1@@Base+0x6d0>  // b.tstop
    d82c:	asr	x2, x27, #6
    d830:	lsl	x0, x9, #3
    d834:	sub	x4, x28, x2
    d838:	mov	w1, #0x0                   	// #0
    d83c:	lsl	x2, x2, #3
    d840:	stp	x9, x0, [x29, #120]
    d844:	add	x4, x26, x4, lsl #3
    d848:	mov	x0, x4
    d84c:	bl	c110 <memset@plt>
    d850:	mov	x4, x0
    d854:	ldp	x9, x0, [x29, #120]
    d858:	str	x4, [x29, #112]
    d85c:	ands	x3, x27, #0x3f
    d860:	sub	x8, x4, x0
    d864:	ldr	x0, [x29, #136]
    d868:	sub	x1, x0, x9
    d86c:	b.eq	ddec <mpfr_add1@@Base+0x6b4>  // b.none
    d870:	mov	x0, x8
    d874:	mov	x2, x9
    d878:	add	x1, x24, x1, lsl #3
    d87c:	str	x8, [x29, #120]
    d880:	bl	bce0 <__gmpn_rshift@plt>
    d884:	ldp	x4, x8, [x29, #112]
    d888:	cmp	x26, x8
    d88c:	b.cc	de98 <mpfr_add1@@Base+0x760>  // b.lo, b.ul, b.last
    d890:	cmp	x22, x19
    d894:	b.le	d97c <mpfr_add1@@Base+0x244>
    d898:	ldr	x2, [x29, #144]
    d89c:	sub	x1, x22, x19
    d8a0:	add	x3, x19, #0x1
    d8a4:	add	x1, x26, x1, lsl #3
    d8a8:	mov	x0, x1
    d8ac:	bl	c5a0 <__gmpn_add_n@plt>
    d8b0:	cbnz	x0, dc40 <mpfr_add1@@Base+0x508>
    d8b4:	cbz	w21, e008 <mpfr_add1@@Base+0x8d0>
    d8b8:	ldr	x0, [x26]
    d8bc:	mov	x8, #0x1                   	// #1
    d8c0:	lsl	x2, x8, x21
    d8c4:	neg	x3, x2
    d8c8:	sub	x1, x2, #0x1
    d8cc:	subs	w4, w21, #0x1
    d8d0:	and	x2, x0, x1
    d8d4:	and	x0, x3, x0
    d8d8:	str	x0, [x26]
    d8dc:	lsr	x4, x2, x4
    d8e0:	b.le	de2c <mpfr_add1@@Base+0x6f4>
    d8e4:	lsr	x1, x1, #1
    d8e8:	ands	x2, x2, x1
    d8ec:	b.ne	d9e0 <mpfr_add1@@Base+0x2a8>  // b.any
    d8f0:	cmp	x27, #0x0
    d8f4:	add	x0, x27, #0x3f
    d8f8:	csel	x0, x0, x27, lt  // lt = tstop
    d8fc:	cmp	x22, x19
    d900:	sub	x0, x28, x0, asr #6
    d904:	b.lt	dff8 <mpfr_add1@@Base+0x8c0>  // b.tstop
    d908:	ldr	x1, [x29, #136]
    d90c:	cmp	x1, x0
    d910:	b.lt	da94 <mpfr_add1@@Base+0x35c>  // b.tstop
    d914:	ldr	x1, [x29, #152]
    d918:	cmp	x1, x27
    d91c:	b.cc	dbbc <mpfr_add1@@Base+0x484>  // b.lo, b.ul, b.last
    d920:	ldr	x1, [x29, #136]
    d924:	ands	x6, x27, #0x3f
    d928:	sub	x28, x1, x0
    d92c:	ccmp	x28, #0x0, #0x0, eq  // eq = none
    d930:	b.eq	da94 <mpfr_add1@@Base+0x35c>  // b.none
    d934:	cbz	x6, dfcc <mpfr_add1@@Base+0x894>
    d938:	ldr	x0, [x24, x28, lsl #3]
    d93c:	neg	w6, w6
    d940:	lsl	x0, x0, x6
    d944:	tbz	w4, #31, d950 <mpfr_add1@@Base+0x218>
    d948:	lsr	x4, x0, #63
    d94c:	and	x0, x0, #0x7fffffffffffffff
    d950:	cmp	w20, #0x5
    d954:	cset	w1, eq  // eq = none
    d958:	cmp	x0, #0x0
    d95c:	csel	w2, w1, wzr, eq  // eq = none
    d960:	cbnz	w2, daa8 <mpfr_add1@@Base+0x370>
    d964:	cbnz	x0, dfd8 <mpfr_add1@@Base+0x8a0>
    d968:	cbz	x28, e028 <mpfr_add1@@Base+0x8f0>
    d96c:	sub	x28, x28, #0x1
    d970:	ldr	x0, [x24, x28, lsl #3]
    d974:	cbz	x0, d968 <mpfr_add1@@Base+0x230>
    d978:	b	d9f8 <mpfr_add1@@Base+0x2c0>
    d97c:	ldr	x4, [x29, #144]
    d980:	sub	x2, x19, x22
    d984:	mov	x3, x28
    d988:	mov	x1, x26
    d98c:	mov	x0, x26
    d990:	add	x2, x4, x2, lsl #3
    d994:	bl	c5a0 <__gmpn_add_n@plt>
    d998:	cbz	x0, d8b4 <mpfr_add1@@Base+0x17c>
    d99c:	b	dc40 <mpfr_add1@@Base+0x508>
    d9a0:	cmp	w0, #0x0
    d9a4:	mov	x1, #0x4                   	// #4
    d9a8:	ldr	x0, [x9, #16]
    d9ac:	mov	w20, #0x4                   	// #4
    d9b0:	movk	x1, #0x8000, lsl #48
    d9b4:	csinc	w20, w20, wzr, lt  // lt = tstop
    d9b8:	sub	x27, x23, x0
    d9bc:	cmp	x0, x1
    d9c0:	b.ne	d804 <mpfr_add1@@Base+0xcc>  // b.any
    d9c4:	mov	x1, x9
    d9c8:	mov	x0, x4
    d9cc:	str	x8, [x29, #128]
    d9d0:	bl	cb00 <mpfr_ubf_diff_exp@plt>
    d9d4:	mov	x27, x0
    d9d8:	ldr	x8, [x29, #128]
    d9dc:	b	d804 <mpfr_add1@@Base+0xcc>
    d9e0:	cmp	x1, x2
    d9e4:	b.ne	db88 <mpfr_add1@@Base+0x450>  // b.any
    d9e8:	cmp	x22, x19
    d9ec:	b.lt	e094 <mpfr_add1@@Base+0x95c>  // b.tstop
    d9f0:	cmp	w20, #0x5
    d9f4:	cset	w2, eq  // eq = none
    d9f8:	cmp	w20, #0x0
    d9fc:	mrs	x8, tpidr_el0
    da00:	ccmp	w2, #0x0, #0x0, ne  // ne = any
    da04:	b.eq	dfa8 <mpfr_add1@@Base+0x870>  // b.none
    da08:	cbz	w4, dac0 <mpfr_add1@@Base+0x388>
    da0c:	ldr	x0, [x26]
    da10:	mov	x9, #0x1                   	// #1
    da14:	ldr	w1, [x25, #8]
    da18:	mov	w4, #0xffffffff            	// #-1
    da1c:	lsl	x9, x9, x21
    da20:	cmp	w1, #0x0
    da24:	cneg	w4, w4, gt
    da28:	adds	x0, x0, x9
    da2c:	str	x0, [x26]
    da30:	b.cc	dad0 <mpfr_add1@@Base+0x398>  // b.lo, b.ul, b.last
    da34:	mov	x0, x26
    da38:	add	x2, x26, x22, lsl #3
    da3c:	b	da50 <mpfr_add1@@Base+0x318>
    da40:	ldr	x1, [x0, #8]
    da44:	add	x1, x1, #0x1
    da48:	str	x1, [x0, #8]!
    da4c:	cbnz	x1, dad0 <mpfr_add1@@Base+0x398>
    da50:	cmp	x0, x2
    da54:	b.ne	da40 <mpfr_add1@@Base+0x308>  // b.any
    da58:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    da5c:	ldr	x1, [x0, #2544]
    da60:	add	x0, x0, #0x9f0
    da64:	blr	x1
    da68:	ldr	x0, [x8, x0]
    da6c:	cmp	x0, x23
    da70:	b.eq	e4d4 <mpfr_add1@@Base+0xd9c>  // b.none
    da74:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    da78:	add	x23, x23, #0x1
    da7c:	str	x0, [x26, x22, lsl #3]
    da80:	b	dad0 <mpfr_add1@@Base+0x398>
    da84:	cmp	w0, #0x0
    da88:	mov	w20, #0x4                   	// #4
    da8c:	csinc	w20, w20, wzr, gt
    da90:	b	d7ec <mpfr_add1@@Base+0xb4>
    da94:	cmp	w4, #0x0
    da98:	csel	w4, w4, wzr, ge  // ge = tcont
    da9c:	cmp	w20, #0x0
    daa0:	ccmp	w20, #0x5, #0x4, ne  // ne = any
    daa4:	b.ne	e030 <mpfr_add1@@Base+0x8f8>  // b.any
    daa8:	mrs	x8, tpidr_el0
    daac:	cbz	w4, dad0 <mpfr_add1@@Base+0x398>
    dab0:	ldr	x0, [x26]
    dab4:	mrs	x8, tpidr_el0
    dab8:	lsr	x1, x0, x21
    dabc:	tbnz	w1, #0, da10 <mpfr_add1@@Base+0x2d8>
    dac0:	ldr	w0, [x25, #8]
    dac4:	mov	w4, #0xffffffff            	// #-1
    dac8:	cmp	w0, #0x0
    dacc:	cneg	w4, w4, lt  // lt = tstop
    dad0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    dad4:	ldr	x1, [x0, #2512]
    dad8:	add	x0, x0, #0x9d0
    dadc:	blr	x1
    dae0:	ldr	x0, [x8, x0]
    dae4:	cmp	x0, x23
    dae8:	b.gt	dbd8 <mpfr_add1@@Base+0x4a0>
    daec:	str	x23, [x25, #16]
    daf0:	ldr	x0, [x29, #168]
    daf4:	cbnz	x0, dc28 <mpfr_add1@@Base+0x4f0>
    daf8:	cbz	w4, db1c <mpfr_add1@@Base+0x3e4>
    dafc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    db00:	ldr	x1, [x0, #2576]
    db04:	add	x0, x0, #0xa10
    db08:	blr	x1
    db0c:	add	x0, x8, x0
    db10:	ldr	w1, [x0]
    db14:	orr	w1, w1, #0x8
    db18:	str	w1, [x0]
    db1c:	mov	sp, x29
    db20:	mov	w0, w4
    db24:	ldp	x19, x20, [sp, #16]
    db28:	ldp	x21, x22, [sp, #32]
    db2c:	ldp	x23, x24, [sp, #48]
    db30:	ldp	x25, x26, [sp, #64]
    db34:	ldp	x27, x28, [sp, #80]
    db38:	ldp	x29, x30, [sp], #176
    db3c:	ret
    db40:	add	x0, x8, #0x1
    db44:	lsl	x2, x0, #3
    db48:	cmp	x2, #0x4, lsl #12
    db4c:	b.hi	e070 <mpfr_add1@@Base+0x938>  // b.pmore
    db50:	add	x0, x2, #0xf
    db54:	and	x0, x0, #0xfffffffffffffff0
    db58:	sub	sp, sp, x0
    db5c:	mov	x24, sp
    db60:	cmp	x24, x26
    db64:	b.eq	d7d4 <mpfr_add1@@Base+0x9c>  // b.none
    db68:	mov	x1, x26
    db6c:	mov	x0, x24
    db70:	stp	x9, x4, [x29, #112]
    db74:	str	x8, [x29, #128]
    db78:	bl	ba10 <memcpy@plt>
    db7c:	ldp	x9, x4, [x29, #112]
    db80:	ldr	x8, [x29, #128]
    db84:	b	d7d4 <mpfr_add1@@Base+0x9c>
    db88:	cmp	w20, #0x0
    db8c:	ccmp	w20, #0x5, #0x4, ne  // ne = any
    db90:	b.eq	df20 <mpfr_add1@@Base+0x7e8>  // b.none
    db94:	cmp	w20, #0x1
    db98:	b.eq	e15c <mpfr_add1@@Base+0xa24>  // b.none
    db9c:	cmp	w20, #0x4
    dba0:	b.eq	dfbc <mpfr_add1@@Base+0x884>  // b.none
    dba4:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
    dba8:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x1ca8>
    dbac:	add	x2, x2, #0xad8
    dbb0:	add	x0, x0, #0xaf0
    dbb4:	mov	w1, #0x221                 	// #545
    dbb8:	bl	cb40 <mpfr_assert_fail@plt>
    dbbc:	cmp	w4, #0x0
    dbc0:	mrs	x8, tpidr_el0
    dbc4:	csel	w4, w4, wzr, ge  // ge = tcont
    dbc8:	cmp	w20, #0x0
    dbcc:	ccmp	w20, #0x5, #0x4, ne  // ne = any
    dbd0:	b.eq	da08 <mpfr_add1@@Base+0x2d0>  // b.none
    dbd4:	b	dfa8 <mpfr_add1@@Base+0x870>
    dbd8:	cbnz	w20, dc08 <mpfr_add1@@Base+0x4d0>
    dbdc:	sub	x0, x0, #0x1
    dbe0:	cmp	x0, x23
    dbe4:	b.gt	e4cc <mpfr_add1@@Base+0xd94>
    dbe8:	cmn	w4, #0x1
    dbec:	b.eq	dc08 <mpfr_add1@@Base+0x4d0>  // b.none
    dbf0:	mov	x0, x25
    dbf4:	str	x8, [x29, #152]
    dbf8:	bl	bf00 <mpfr_powerof2_raw@plt>
    dbfc:	cmp	w0, #0x0
    dc00:	ldr	x8, [x29, #152]
    dc04:	cset	w20, ne  // ne = any
    dc08:	ldr	w2, [x25, #8]
    dc0c:	mov	w1, w20
    dc10:	mov	x0, x25
    dc14:	str	x8, [x29, #152]
    dc18:	bl	c3c0 <mpfr_underflow@plt>
    dc1c:	mov	w4, w0
    dc20:	ldr	x8, [x29, #152]
    dc24:	b	daf0 <mpfr_add1@@Base+0x3b8>
    dc28:	str	x8, [x29, #144]
    dc2c:	str	w4, [x29, #152]
    dc30:	bl	c410 <mpfr_tmp_free@plt>
    dc34:	ldr	w4, [x29, #152]
    dc38:	ldr	x8, [x29, #144]
    dc3c:	b	daf8 <mpfr_add1@@Base+0x3c0>
    dc40:	mrs	x8, tpidr_el0
    dc44:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    dc48:	ldr	x1, [x0, #2544]
    dc4c:	add	x0, x0, #0x9f0
    dc50:	blr	x1
    dc54:	ldr	x0, [x8, x0]
    dc58:	cmp	x0, x23
    dc5c:	b.eq	e4d4 <mpfr_add1@@Base+0xd9c>  // b.none
    dc60:	ldr	x0, [x26]
    dc64:	lsl	x10, x28, #3
    dc68:	add	x23, x23, #0x1
    dc6c:	sub	x10, x10, #0x8
    dc70:	lsr	x4, x0, x21
    dc74:	and	w4, w4, #0x1
    dc78:	cbz	w21, e1e8 <mpfr_add1@@Base+0xab0>
    dc7c:	mov	x11, #0x1                   	// #1
    dc80:	lsl	x9, x11, x21
    dc84:	sub	x2, x9, #0x1
    dc88:	neg	x1, x9, lsl #1
    dc8c:	and	x1, x1, x0
    dc90:	str	x1, [x26]
    dc94:	ands	x0, x0, x2
    dc98:	b.eq	df28 <mpfr_add1@@Base+0x7f0>  // b.none
    dc9c:	cmp	x2, x0
    dca0:	b.eq	e104 <mpfr_add1@@Base+0x9cc>  // b.none
    dca4:	mov	x1, x26
    dca8:	mov	w3, w11
    dcac:	mov	x2, x28
    dcb0:	mov	x0, x26
    dcb4:	stp	x8, x10, [x29, #128]
    dcb8:	str	w4, [x29, #144]
    dcbc:	str	x9, [x29, #152]
    dcc0:	bl	bce0 <__gmpn_rshift@plt>
    dcc4:	ldp	x8, x10, [x29, #128]
    dcc8:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    dccc:	cmp	w20, #0x0
    dcd0:	ldr	w4, [x29, #144]
    dcd4:	ccmp	w20, #0x5, #0x4, ne  // ne = any
    dcd8:	ldr	x9, [x29, #152]
    dcdc:	ldr	x0, [x26, x10]
    dce0:	add	x0, x0, x1
    dce4:	str	x0, [x26, x10]
    dce8:	b.eq	da08 <mpfr_add1@@Base+0x2d0>  // b.none
    dcec:	cmp	w20, #0x1
    dcf0:	b.eq	e160 <mpfr_add1@@Base+0xa28>  // b.none
    dcf4:	cmp	w20, #0x4
    dcf8:	b.ne	dba4 <mpfr_add1@@Base+0x46c>  // b.any
    dcfc:	ldr	x0, [x26]
    dd00:	mov	w4, #0x1                   	// #1
    dd04:	ldr	w1, [x25, #8]
    dd08:	cmp	w1, w4
    dd0c:	cneg	w4, w4, lt  // lt = tstop
    dd10:	b	da28 <mpfr_add1@@Base+0x2f0>
    dd14:	cmp	x22, x19
    dd18:	b.gt	e184 <mpfr_add1@@Base+0xa4c>
    dd1c:	ldr	x0, [x29, #144]
    dd20:	sub	x1, x19, x22
    dd24:	add	x1, x0, x1, lsl #3
    dd28:	cmp	x1, x26
    dd2c:	b.eq	d8b4 <mpfr_add1@@Base+0x17c>  // b.none
    dd30:	lsl	x2, x28, #3
    dd34:	mov	x0, x26
    dd38:	bl	ba10 <memcpy@plt>
    dd3c:	b	d8b4 <mpfr_add1@@Base+0x17c>
    dd40:	mrs	x8, tpidr_el0
    dd44:	add	x0, x1, #0x20
    dd48:	stp	x2, x8, [x29, #136]
    dd4c:	str	x1, [x29, #152]
    dd50:	bl	bc40 <mpfr_ubf_zexp2exp@plt>
    dd54:	ldp	x9, x8, [x29, #136]
    dd58:	mov	x23, x0
    dd5c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    dd60:	ldr	x1, [x0, #2544]
    dd64:	add	x0, x0, #0x9f0
    dd68:	blr	x1
    dd6c:	ldr	x4, [x29, #152]
    dd70:	ldr	x0, [x8, x0]
    dd74:	cmp	x0, x23
    dd78:	b.ge	d778 <mpfr_add1@@Base+0x40>  // b.tcont
    dd7c:	ldr	w2, [x4, #8]
    dd80:	mov	w1, w20
    dd84:	mov	x0, x25
    dd88:	bl	bf40 <mpfr_overflow@plt>
    dd8c:	mov	w4, w0
    dd90:	b	db1c <mpfr_add1@@Base+0x3e4>
    dd94:	add	x0, x19, #0x1
    dd98:	lsl	x2, x0, #3
    dd9c:	cmp	x2, #0x4, lsl #12
    dda0:	b.hi	e1c4 <mpfr_add1@@Base+0xa8c>  // b.pmore
    dda4:	add	x0, x2, #0xf
    dda8:	and	x0, x0, #0xfffffffffffffff0
    ddac:	sub	sp, sp, x0
    ddb0:	mov	x0, sp
    ddb4:	str	x0, [x29, #144]
    ddb8:	ldr	x0, [x29, #144]
    ddbc:	cmp	x0, x26
    ddc0:	b.eq	dddc <mpfr_add1@@Base+0x6a4>  // b.none
    ddc4:	mov	x1, x26
    ddc8:	stp	x9, x4, [x29, #112]
    ddcc:	str	x8, [x29, #128]
    ddd0:	bl	ba10 <memcpy@plt>
    ddd4:	ldp	x9, x4, [x29, #112]
    ddd8:	ldr	x8, [x29, #128]
    dddc:	cmp	x26, x24
    dde0:	ldr	x0, [x29, #144]
    dde4:	csel	x24, x24, x0, ne  // ne = any
    dde8:	b	d7d4 <mpfr_add1@@Base+0x9c>
    ddec:	add	x1, x24, x1, lsl #3
    ddf0:	cmp	x1, x8
    ddf4:	b.eq	d890 <mpfr_add1@@Base+0x158>  // b.none
    ddf8:	ldr	x2, [x29, #128]
    ddfc:	mov	x0, x8
    de00:	bl	ba10 <memcpy@plt>
    de04:	b	d890 <mpfr_add1@@Base+0x158>
    de08:	ldr	x9, [x29, #136]
    de0c:	sub	x2, x2, x8
    de10:	mov	x0, x26
    de14:	mov	w1, #0x0                   	// #0
    de18:	lsl	x2, x2, #3
    de1c:	str	x9, [x29, #128]
    de20:	bl	c110 <memset@plt>
    de24:	ldr	x9, [x29, #128]
    de28:	b	d82c <mpfr_add1@@Base+0xf4>
    de2c:	cmp	x27, #0x0
    de30:	add	x0, x27, #0x3f
    de34:	csel	x0, x0, x27, lt  // lt = tstop
    de38:	cmp	x22, x19
    de3c:	sub	x0, x28, x0, asr #6
    de40:	b.ge	d908 <mpfr_add1@@Base+0x1d0>  // b.tcont
    de44:	mov	w8, #0xffffffff            	// #-1
    de48:	sub	x19, x19, x22
    de4c:	tbz	x0, #63, e1f0 <mpfr_add1@@Base+0xab8>
    de50:	ldr	x1, [x29, #144]
    de54:	sub	x19, x19, #0x1
    de58:	ldr	x1, [x1, x19, lsl #3]
    de5c:	cmp	w8, #0x1
    de60:	b.ne	dfe0 <mpfr_add1@@Base+0x8a8>  // b.any
    de64:	nop
    de68:	cmp	w20, #0x5
    de6c:	cset	w2, eq  // eq = none
    de70:	cmp	w2, #0x0
    de74:	ccmn	x1, #0x1, #0x0, eq  // eq = none
    de78:	b.ne	d9f8 <mpfr_add1@@Base+0x2c0>  // b.any
    de7c:	cbz	x19, d9f0 <mpfr_add1@@Base+0x2b8>
    de80:	adds	x0, x0, #0x1
    de84:	b.eq	e22c <mpfr_add1@@Base+0xaf4>  // b.none
    de88:	ldr	x1, [x29, #144]
    de8c:	sub	x19, x19, #0x1
    de90:	ldr	x1, [x1, x19, lsl #3]
    de94:	b	de68 <mpfr_add1@@Base+0x730>
    de98:	ldr	x1, [x29, #128]
    de9c:	sub	x4, x4, x1
    dea0:	stur	x0, [x4, #-8]
    dea4:	b	d890 <mpfr_add1@@Base+0x158>
    dea8:	sub	x1, x1, #0x1
    deac:	cbz	x6, e3cc <mpfr_add1@@Base+0xc94>
    deb0:	neg	w0, w11
    deb4:	lsl	x2, x10, x0
    deb8:	tbnz	x1, #63, dec8 <mpfr_add1@@Base+0x790>
    debc:	ldr	x10, [x24, x1, lsl #3]
    dec0:	lsr	x0, x10, x11
    dec4:	add	x2, x2, x0
    dec8:	ldr	x0, [x29, #144]
    decc:	sub	x19, x19, #0x1
    ded0:	ldr	x0, [x0, x19, lsl #3]
    ded4:	adds	x0, x0, x2
    ded8:	mov	x2, x0
    dedc:	b.cc	e3b8 <mpfr_add1@@Base+0xc80>  // b.lo, b.ul, b.last
    dee0:	tbnz	w4, #31, e428 <mpfr_add1@@Base+0xcf0>
    dee4:	cmp	w4, #0x1
    dee8:	b.eq	e4ac <mpfr_add1@@Base+0xd74>  // b.none
    deec:	eor	w4, w4, #0x1
    def0:	cmp	x2, #0x0
    def4:	sub	x2, x2, #0x1
    def8:	cset	w8, ne  // ne = any
    defc:	cmn	x2, #0x3
    df00:	b.hi	e248 <mpfr_add1@@Base+0xb10>  // b.pmore
    df04:	cmp	w20, #0x5
    df08:	cset	w0, eq  // eq = none
    df0c:	cmp	w20, #0x0
    df10:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    df14:	b.eq	e034 <mpfr_add1@@Base+0x8fc>  // b.none
    df18:	cbz	w8, daa8 <mpfr_add1@@Base+0x370>
    df1c:	nop
    df20:	mrs	x8, tpidr_el0
    df24:	b	da08 <mpfr_add1@@Base+0x2d0>
    df28:	mov	w8, #0x0                   	// #0
    df2c:	mov	x2, x28
    df30:	mov	x1, x26
    df34:	mov	x0, x26
    df38:	mov	w3, #0x1                   	// #1
    df3c:	str	w8, [x29, #112]
    df40:	str	x10, [x29, #120]
    df44:	str	w4, [x29, #128]
    df48:	bl	bce0 <__gmpn_rshift@plt>
    df4c:	ldr	x10, [x29, #120]
    df50:	cmp	x27, #0x0
    df54:	add	x0, x27, #0x3f
    df58:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
    df5c:	csel	x0, x0, x27, lt  // lt = tstop
    df60:	ldr	w4, [x29, #128]
    df64:	ldr	x1, [x26, x10]
    df68:	sub	x0, x28, x0, asr #6
    df6c:	cmp	x22, x19
    df70:	add	x1, x1, x2
    df74:	str	x1, [x26, x10]
    df78:	b.ge	d908 <mpfr_add1@@Base+0x1d0>  // b.tcont
    df7c:	ldr	w8, [x29, #112]
    df80:	cmp	x0, #0x0
    df84:	cset	w1, le
    df88:	cmp	w8, #0x0
    df8c:	csel	w1, w1, wzr, eq  // eq = none
    df90:	cbz	w1, e0e8 <mpfr_add1@@Base+0x9b0>
    df94:	cmp	w20, #0x0
    df98:	mrs	x8, tpidr_el0
    df9c:	ccmp	w20, #0x5, #0x4, ne  // ne = any
    dfa0:	b.eq	da08 <mpfr_add1@@Base+0x2d0>  // b.none
    dfa4:	nop
    dfa8:	cmp	w20, #0x1
    dfac:	b.eq	e15c <mpfr_add1@@Base+0xa24>  // b.none
    dfb0:	cmp	w20, #0x4
    dfb4:	b.ne	dba4 <mpfr_add1@@Base+0x46c>  // b.any
    dfb8:	ldr	x0, [x26]
    dfbc:	mov	x9, #0x1                   	// #1
    dfc0:	mrs	x8, tpidr_el0
    dfc4:	lsl	x9, x9, x21
    dfc8:	b	dd00 <mpfr_add1@@Base+0x5c8>
    dfcc:	sub	x28, x28, #0x1
    dfd0:	ldr	x0, [x24, x28, lsl #3]
    dfd4:	b	d944 <mpfr_add1@@Base+0x20c>
    dfd8:	mov	w2, w1
    dfdc:	b	d9f8 <mpfr_add1@@Base+0x2c0>
    dfe0:	tbz	w4, #31, dfec <mpfr_add1@@Base+0x8b4>
    dfe4:	lsr	x4, x1, #63
    dfe8:	orr	x1, x1, #0x8000000000000000
    dfec:	cmn	x1, #0x1
    dff0:	b.eq	de7c <mpfr_add1@@Base+0x744>  // b.none
    dff4:	b	d9f0 <mpfr_add1@@Base+0x2b8>
    dff8:	cmp	x0, #0x0
    dffc:	mov	w8, #0x0                   	// #0
    e000:	cset	w1, le
    e004:	b	df90 <mpfr_add1@@Base+0x858>
    e008:	cmp	x27, #0x0
    e00c:	add	x0, x27, #0x3f
    e010:	csel	x0, x0, x27, lt  // lt = tstop
    e014:	mov	w4, #0xffffffff            	// #-1
    e018:	cmp	x22, x19
    e01c:	sub	x0, x28, x0, asr #6
    e020:	b.ge	d908 <mpfr_add1@@Base+0x1d0>  // b.tcont
    e024:	b	de44 <mpfr_add1@@Base+0x70c>
    e028:	cbz	w20, daa8 <mpfr_add1@@Base+0x370>
    e02c:	nop
    e030:	mov	w8, #0x0                   	// #0
    e034:	cmp	w20, #0x1
    e038:	b.eq	e174 <mpfr_add1@@Base+0xa3c>  // b.none
    e03c:	cmp	w20, #0x4
    e040:	b.ne	dba4 <mpfr_add1@@Base+0x46c>  // b.any
    e044:	orr	w4, w4, w8
    e048:	mrs	x8, tpidr_el0
    e04c:	cbnz	w4, dfb8 <mpfr_add1@@Base+0x880>
    e050:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    e054:	ldr	x1, [x0, #2512]
    e058:	add	x0, x0, #0x9d0
    e05c:	blr	x1
    e060:	ldr	x0, [x8, x0]
    e064:	cmp	x23, x0
    e068:	b.ge	daec <mpfr_add1@@Base+0x3b4>  // b.tcont
    e06c:	b	dc08 <mpfr_add1@@Base+0x4d0>
    e070:	mov	x1, x2
    e074:	add	x0, x29, #0xa8
    e078:	stp	x9, x4, [x29, #104]
    e07c:	stp	x8, x2, [x29, #120]
    e080:	bl	bdc0 <mpfr_tmp_allocate@plt>
    e084:	mov	x24, x0
    e088:	ldp	x9, x4, [x29, #104]
    e08c:	ldp	x8, x2, [x29, #120]
    e090:	b	db60 <mpfr_add1@@Base+0x428>
    e094:	cmp	x27, #0x0
    e098:	add	x0, x27, #0x3f
    e09c:	csel	x0, x0, x27, lt  // lt = tstop
    e0a0:	sub	x19, x19, x22
    e0a4:	subs	x0, x28, x0, asr #6
    e0a8:	b.mi	de50 <mpfr_add1@@Base+0x718>  // b.first
    e0ac:	ldr	x1, [x29, #136]
    e0b0:	cmp	x1, x0
    e0b4:	b.ge	e388 <mpfr_add1@@Base+0xc50>  // b.tcont
    e0b8:	and	w1, w8, #0x1
    e0bc:	cmp	w20, #0x5
    e0c0:	cset	w0, eq  // eq = none
    e0c4:	orr	w2, w0, w1
    e0c8:	cbnz	w2, df0c <mpfr_add1@@Base+0x7d4>
    e0cc:	nop
    e0d0:	cbz	x19, e028 <mpfr_add1@@Base+0x8f0>
    e0d4:	ldr	x0, [x29, #144]
    e0d8:	sub	x19, x19, #0x1
    e0dc:	ldr	x0, [x0, x19, lsl #3]
    e0e0:	cbz	x0, e0d0 <mpfr_add1@@Base+0x998>
    e0e4:	b	d9f8 <mpfr_add1@@Base+0x2c0>
    e0e8:	sub	x19, x19, x22
    e0ec:	tbz	x0, #63, e1f0 <mpfr_add1@@Base+0xab8>
    e0f0:	ldr	x1, [x29, #144]
    e0f4:	sub	x19, x19, #0x1
    e0f8:	mov	w8, #0xffffffff            	// #-1
    e0fc:	ldr	x1, [x1, x19, lsl #3]
    e100:	b	de5c <mpfr_add1@@Base+0x724>
    e104:	mov	w3, w11
    e108:	mov	x1, x26
    e10c:	mov	x2, x28
    e110:	mov	x0, x26
    e114:	str	x10, [x29, #128]
    e118:	str	w4, [x29, #152]
    e11c:	bl	bce0 <__gmpn_rshift@plt>
    e120:	ldr	x10, [x29, #128]
    e124:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    e128:	ldr	w4, [x29, #152]
    e12c:	cmp	x22, x19
    e130:	mov	x11, #0x1                   	// #1
    e134:	ldr	x0, [x26, x10]
    e138:	add	x0, x0, x1
    e13c:	str	x0, [x26, x10]
    e140:	b.ge	d9f0 <mpfr_add1@@Base+0x2b8>  // b.tcont
    e144:	cmp	x27, #0x0
    e148:	add	x0, x27, #0x3f
    e14c:	csel	x0, x0, x27, lt  // lt = tstop
    e150:	mov	w8, w11
    e154:	sub	x0, x28, x0, asr #6
    e158:	b	de48 <mpfr_add1@@Base+0x710>
    e15c:	mrs	x8, tpidr_el0
    e160:	ldr	w0, [x25, #8]
    e164:	mov	w4, #0xffffffff            	// #-1
    e168:	cmp	w0, #0x0
    e16c:	cneg	w4, w4, lt  // lt = tstop
    e170:	b	e050 <mpfr_add1@@Base+0x918>
    e174:	orr	w4, w4, w8
    e178:	mrs	x8, tpidr_el0
    e17c:	cbz	w4, e050 <mpfr_add1@@Base+0x918>
    e180:	b	e160 <mpfr_add1@@Base+0xa28>
    e184:	sub	x3, x22, x19
    e188:	ldr	x1, [x29, #144]
    e18c:	lsl	x3, x3, #3
    e190:	add	x0, x26, x3
    e194:	cmp	x0, x1
    e198:	b.eq	e1b0 <mpfr_add1@@Base+0xa78>  // b.none
    e19c:	add	x2, x19, #0x1
    e1a0:	str	x3, [x29, #128]
    e1a4:	lsl	x2, x2, #3
    e1a8:	bl	ba10 <memcpy@plt>
    e1ac:	ldr	x3, [x29, #128]
    e1b0:	mov	x2, x3
    e1b4:	mov	x0, x26
    e1b8:	mov	w1, #0x0                   	// #0
    e1bc:	bl	c110 <memset@plt>
    e1c0:	b	d8b4 <mpfr_add1@@Base+0x17c>
    e1c4:	mov	x1, x2
    e1c8:	add	x0, x29, #0xa8
    e1cc:	stp	x9, x4, [x29, #104]
    e1d0:	stp	x8, x2, [x29, #120]
    e1d4:	bl	bdc0 <mpfr_tmp_allocate@plt>
    e1d8:	str	x0, [x29, #144]
    e1dc:	ldp	x9, x4, [x29, #104]
    e1e0:	ldp	x8, x2, [x29, #120]
    e1e4:	b	ddb8 <mpfr_add1@@Base+0x680>
    e1e8:	mov	w8, #0xffffffff            	// #-1
    e1ec:	b	df2c <mpfr_add1@@Base+0x7f4>
    e1f0:	ldr	x1, [x29, #136]
    e1f4:	cmp	x0, x1
    e1f8:	b.le	e388 <mpfr_add1@@Base+0xc50>
    e1fc:	cmn	w8, #0x1
    e200:	b.ne	e0b8 <mpfr_add1@@Base+0x980>  // b.any
    e204:	ldr	x0, [x29, #144]
    e208:	sub	x19, x19, #0x1
    e20c:	ldr	x0, [x0, x19, lsl #3]
    e210:	tbz	w4, #31, e21c <mpfr_add1@@Base+0xae4>
    e214:	lsr	x4, x0, #63
    e218:	and	x0, x0, #0x7fffffffffffffff
    e21c:	cmp	x0, #0x0
    e220:	cset	w1, ne  // ne = any
    e224:	mov	w8, w1
    e228:	b	e0bc <mpfr_add1@@Base+0x984>
    e22c:	and	x6, x27, #0x3f
    e230:	mov	w8, #0x1                   	// #1
    e234:	mov	w11, w6
    e238:	ldr	x1, [x29, #136]
    e23c:	mov	x10, #0x0                   	// #0
    e240:	cmn	w8, #0x1
    e244:	b.eq	dea8 <mpfr_add1@@Base+0x770>  // b.none
    e248:	cmp	w20, #0x5
    e24c:	b.eq	df18 <mpfr_add1@@Base+0x7e0>  // b.none
    e250:	add	x17, x26, x28, lsl #3
    e254:	mov	x15, #0x1                   	// #1
    e258:	mov	w14, #0x40                  	// #64
    e25c:	sub	x17, x17, #0x8
    e260:	sub	x16, x1, #0x1
    e264:	add	x13, x26, x22, lsl #3
    e268:	sub	w14, w14, w11
    e26c:	mov	x9, x19
    e270:	sub	x12, x24, #0x8
    e274:	mrs	x18, tpidr_el0
    e278:	lsl	x15, x15, x21
    e27c:	mov	x5, #0x8000000000000000    	// #-9223372036854775808
    e280:	mov	x0, x1
    e284:	cbz	x9, e3d4 <mpfr_add1@@Base+0xc9c>
    e288:	cbz	x6, e2ec <mpfr_add1@@Base+0xbb4>
    e28c:	tbnz	x1, #63, e414 <mpfr_add1@@Base+0xcdc>
    e290:	sub	x0, x9, x19
    e294:	lsl	x3, x10, x14
    e298:	add	x0, x16, x0
    e29c:	cmn	x0, #0x1
    e2a0:	b.eq	e2b0 <mpfr_add1@@Base+0xb78>  // b.none
    e2a4:	ldr	x10, [x12, x1, lsl #3]
    e2a8:	lsr	x0, x10, x11
    e2ac:	add	x3, x3, x0
    e2b0:	ldr	x0, [x29, #144]
    e2b4:	sub	x9, x9, #0x1
    e2b8:	eor	w2, w8, #0x1
    e2bc:	ldr	x0, [x0, x9, lsl #3]
    e2c0:	adds	x3, x0, x3
    e2c4:	b.cc	e2f8 <mpfr_add1@@Base+0xbc0>  // b.lo, b.ul, b.last
    e2c8:	cmp	w8, #0x1
    e2cc:	b.ne	e498 <mpfr_add1@@Base+0xd60>  // b.any
    e2d0:	cmp	w4, #0x1
    e2d4:	b.eq	e320 <mpfr_add1@@Base+0xbe8>  // b.none
    e2d8:	eor	w4, w4, #0x1
    e2dc:	cbnz	x3, e420 <mpfr_add1@@Base+0xce8>
    e2e0:	sub	x1, x1, #0x1
    e2e4:	mov	w8, #0x0                   	// #0
    e2e8:	b	e280 <mpfr_add1@@Base+0xb48>
    e2ec:	cbz	x1, e414 <mpfr_add1@@Base+0xcdc>
    e2f0:	ldr	x3, [x12, x1, lsl #3]
    e2f4:	b	e2b0 <mpfr_add1@@Base+0xb78>
    e2f8:	cmp	x3, #0x0
    e2fc:	and	w2, w2, #0x1
    e300:	csel	w2, w2, wzr, ne  // ne = any
    e304:	cbnz	w2, e420 <mpfr_add1@@Base+0xce8>
    e308:	cmn	x3, #0x1
    e30c:	and	w0, w8, #0x1
    e310:	csel	w0, w0, wzr, ne  // ne = any
    e314:	cbnz	w0, d9f8 <mpfr_add1@@Base+0x2c0>
    e318:	sub	x1, x1, #0x1
    e31c:	b	e280 <mpfr_add1@@Base+0xb48>
    e320:	ldr	x0, [x26]
    e324:	adds	x0, x15, x0
    e328:	str	x0, [x26]
    e32c:	b.cc	e380 <mpfr_add1@@Base+0xc48>  // b.lo, b.ul, b.last
    e330:	mov	x2, x26
    e334:	b	e348 <mpfr_add1@@Base+0xc10>
    e338:	ldr	x0, [x2, #8]
    e33c:	add	x0, x0, #0x1
    e340:	str	x0, [x2, #8]!
    e344:	cbnz	x0, e380 <mpfr_add1@@Base+0xc48>
    e348:	cmp	x13, x2
    e34c:	b.ne	e338 <mpfr_add1@@Base+0xc00>  // b.any
    e350:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    e354:	ldr	x2, [x0, #2544]
    e358:	add	x0, x0, #0x9f0
    e35c:	blr	x2
    e360:	mov	x8, x18
    e364:	ldr	x0, [x18, x0]
    e368:	cmp	x0, x23
    e36c:	b.eq	e4d4 <mpfr_add1@@Base+0xd9c>  // b.none
    e370:	add	x23, x23, #0x1
    e374:	mov	w4, #0x0                   	// #0
    e378:	str	x5, [x17]
    e37c:	b	e2dc <mpfr_add1@@Base+0xba4>
    e380:	mov	w4, #0x0                   	// #0
    e384:	b	e2dc <mpfr_add1@@Base+0xba4>
    e388:	ldr	x1, [x29, #136]
    e38c:	and	x6, x27, #0x3f
    e390:	cmp	w6, #0x0
    e394:	mov	w11, w6
    e398:	sub	x1, x1, x0
    e39c:	ccmp	x1, #0x0, #0x0, eq  // eq = none
    e3a0:	b.eq	e1fc <mpfr_add1@@Base+0xac4>  // b.none
    e3a4:	ldr	x0, [x29, #136]
    e3a8:	cmp	x0, x1
    e3ac:	b.eq	e238 <mpfr_add1@@Base+0xb00>  // b.none
    e3b0:	ldr	x10, [x24, x1, lsl #3]
    e3b4:	b	e240 <mpfr_add1@@Base+0xb08>
    e3b8:	tbz	w4, #31, def0 <mpfr_add1@@Base+0x7b8>
    e3bc:	ubfx	x2, x0, #62, #1
    e3c0:	lsr	x4, x0, #63
    e3c4:	orr	x2, x2, x0, lsl #1
    e3c8:	b	def0 <mpfr_add1@@Base+0x7b8>
    e3cc:	ldr	x2, [x24, x1, lsl #3]
    e3d0:	b	dec8 <mpfr_add1@@Base+0x790>
    e3d4:	lsr	x1, x1, #63
    e3d8:	and	w2, w8, #0x1
    e3dc:	orr	w2, w2, w1
    e3e0:	cbnz	w2, e4a4 <mpfr_add1@@Base+0xd6c>
    e3e4:	cbz	x6, e3f4 <mpfr_add1@@Base+0xcbc>
    e3e8:	neg	w11, w11
    e3ec:	lsl	x10, x10, x11
    e3f0:	cbnz	x10, e408 <mpfr_add1@@Base+0xcd0>
    e3f4:	cbz	x0, e028 <mpfr_add1@@Base+0x8f0>
    e3f8:	sub	x0, x0, #0x1
    e3fc:	ldr	x1, [x24, x0, lsl #3]
    e400:	cbz	x1, e3f4 <mpfr_add1@@Base+0xcbc>
    e404:	b	d9f8 <mpfr_add1@@Base+0x2c0>
    e408:	mrs	x8, tpidr_el0
    e40c:	cbz	w20, da08 <mpfr_add1@@Base+0x2d0>
    e410:	b	dfa8 <mpfr_add1@@Base+0x870>
    e414:	mov	x19, x9
    e418:	and	w1, w8, #0x1
    e41c:	b	e0bc <mpfr_add1@@Base+0x984>
    e420:	mov	w2, #0x0                   	// #0
    e424:	b	d9f8 <mpfr_add1@@Base+0x2c0>
    e428:	ldr	x8, [x26]
    e42c:	mov	x3, #0x1                   	// #1
    e430:	lsl	x3, x3, x21
    e434:	adds	x3, x3, x8
    e438:	str	x3, [x26]
    e43c:	b.cc	e3bc <mpfr_add1@@Base+0xc84>  // b.lo, b.ul, b.last
    e440:	mov	x3, x26
    e444:	add	x9, x26, x22, lsl #3
    e448:	b	e45c <mpfr_add1@@Base+0xd24>
    e44c:	ldr	x8, [x3, #8]
    e450:	add	x8, x8, #0x1
    e454:	str	x8, [x3, #8]!
    e458:	cbnz	x8, e3b8 <mpfr_add1@@Base+0xc80>
    e45c:	cmp	x9, x3
    e460:	b.ne	e44c <mpfr_add1@@Base+0xd14>  // b.any
    e464:	mrs	x8, tpidr_el0
    e468:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    e46c:	ldr	x3, [x0, #2544]
    e470:	add	x0, x0, #0x9f0
    e474:	blr	x3
    e478:	ldr	x0, [x8, x0]
    e47c:	cmp	x0, x23
    e480:	b.eq	e4d4 <mpfr_add1@@Base+0xd9c>  // b.none
    e484:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    e488:	add	x23, x23, #0x1
    e48c:	mov	w4, #0x0                   	// #0
    e490:	str	x0, [x26, x22, lsl #3]
    e494:	b	def0 <mpfr_add1@@Base+0x7b8>
    e498:	cbz	w20, df20 <mpfr_add1@@Base+0x7e8>
    e49c:	mov	w8, #0x1                   	// #1
    e4a0:	b	e034 <mpfr_add1@@Base+0x8fc>
    e4a4:	mov	w0, #0x0                   	// #0
    e4a8:	b	df0c <mpfr_add1@@Base+0x7d4>
    e4ac:	ldr	x4, [x26]
    e4b0:	mov	x3, #0x1                   	// #1
    e4b4:	lsl	x3, x3, x21
    e4b8:	adds	x3, x3, x4
    e4bc:	str	x3, [x26]
    e4c0:	mov	w4, #0x0                   	// #0
    e4c4:	b.cc	def0 <mpfr_add1@@Base+0x7b8>  // b.lo, b.ul, b.last
    e4c8:	b	e440 <mpfr_add1@@Base+0xd08>
    e4cc:	mov	w20, #0x1                   	// #1
    e4d0:	b	dc08 <mpfr_add1@@Base+0x4d0>
    e4d4:	ldr	w2, [x25, #8]
    e4d8:	mov	w1, w20
    e4dc:	mov	x0, x25
    e4e0:	str	x8, [x29, #152]
    e4e4:	bl	bf40 <mpfr_overflow@plt>
    e4e8:	mov	w4, w0
    e4ec:	ldr	x8, [x29, #152]
    e4f0:	b	daf0 <mpfr_add1@@Base+0x3b8>
    e4f4:	nop

000000000000e4f8 <mpfr_add_ui@@Base>:
    e4f8:	stp	x29, x30, [sp, #-128]!
    e4fc:	mov	x4, x1
    e500:	mov	x29, sp
    e504:	stp	x25, x26, [sp, #64]
    e508:	mov	w26, w3
    e50c:	cbz	x2, e634 <mpfr_add_ui@@Base+0x13c>
    e510:	ldr	x5, [x1, #16]
    e514:	stp	x19, x20, [sp, #16]
    e518:	mov	x6, #0x8000000000000003    	// #-9223372036854775805
    e51c:	mov	x19, x0
    e520:	cmp	x5, x6
    e524:	b.le	e64c <mpfr_add_ui@@Base+0x154>
    e528:	mrs	x5, tpidr_el0
    e52c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    e530:	ldr	x4, [x0, #2576]
    e534:	add	x0, x0, #0xa10
    e538:	blr	x4
    e53c:	clz	x4, x2
    e540:	mov	x8, #0x40                  	// #64
    e544:	sub	w7, w8, w4
    e548:	stp	x21, x22, [sp, #32]
    e54c:	ldr	w20, [x5, x0]
    e550:	add	x21, x5, x0
    e554:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    e558:	ldr	x6, [x0, #2512]
    e55c:	add	x0, x0, #0x9d0
    e560:	blr	x6
    e564:	add	x25, x5, x0
    e568:	sxtw	x7, w7
    e56c:	ldr	x22, [x5, x0]
    e570:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    e574:	ldr	x6, [x0, #2544]
    e578:	add	x0, x0, #0x9f0
    e57c:	blr	x6
    e580:	add	x6, sp, #0x58
    e584:	stp	x23, x24, [sp, #48]
    e588:	add	x24, x5, x0
    e58c:	lsl	x4, x2, x4
    e590:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
    e594:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    e598:	mov	w11, #0x1                   	// #1
    e59c:	add	x2, sp, #0x60
    e5a0:	str	x10, [x25]
    e5a4:	stp	x4, x8, [sp, #88]
    e5a8:	str	w11, [sp, #104]
    e5ac:	str	x7, [sp, #112]
    e5b0:	str	x6, [sp, #120]
    e5b4:	ldr	x23, [x5, x0]
    e5b8:	mov	x0, x19
    e5bc:	str	x9, [x24]
    e5c0:	bl	c1a0 <mpfr_add@plt>
    e5c4:	ldr	w1, [x21]
    e5c8:	ldr	x2, [x19, #16]
    e5cc:	orr	w1, w20, w1
    e5d0:	str	x23, [x24]
    e5d4:	str	w1, [x21]
    e5d8:	cmp	x23, x2
    e5dc:	str	x22, [x25]
    e5e0:	ccmp	x22, x2, #0x0, ge  // ge = tcont
    e5e4:	b.le	e610 <mpfr_add_ui@@Base+0x118>
    e5e8:	mov	w1, w0
    e5ec:	mov	w2, w26
    e5f0:	mov	x0, x19
    e5f4:	bl	cb30 <mpfr_check_range@plt>
    e5f8:	ldp	x19, x20, [sp, #16]
    e5fc:	ldp	x21, x22, [sp, #32]
    e600:	ldp	x23, x24, [sp, #48]
    e604:	ldp	x25, x26, [sp, #64]
    e608:	ldp	x29, x30, [sp], #128
    e60c:	ret
    e610:	cbz	w0, e5f8 <mpfr_add_ui@@Base+0x100>
    e614:	orr	w1, w1, #0x8
    e618:	ldp	x19, x20, [sp, #16]
    e61c:	ldp	x23, x24, [sp, #48]
    e620:	str	w1, [x21]
    e624:	ldp	x21, x22, [sp, #32]
    e628:	ldp	x25, x26, [sp, #64]
    e62c:	ldp	x29, x30, [sp], #128
    e630:	ret
    e634:	mov	w2, w3
    e638:	ldr	w3, [x1, #8]
    e63c:	bl	c6a0 <mpfr_set4@plt>
    e640:	ldp	x25, x26, [sp, #64]
    e644:	ldp	x29, x30, [sp], #128
    e648:	ret
    e64c:	mov	x1, #0x2                   	// #2
    e650:	movk	x1, #0x8000, lsl #48
    e654:	cmp	x5, x1
    e658:	b.eq	e678 <mpfr_add_ui@@Base+0x180>  // b.none
    e65c:	cmp	x5, x6
    e660:	b.eq	e6ac <mpfr_add_ui@@Base+0x1b4>  // b.none
    e664:	mov	x1, x2
    e668:	mov	x2, #0x0                   	// #0
    e66c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
    e670:	ldp	x19, x20, [sp, #16]
    e674:	b	e604 <mpfr_add_ui@@Base+0x10c>
    e678:	mrs	x1, tpidr_el0
    e67c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    e680:	ldr	x2, [x0, #2576]
    e684:	add	x0, x0, #0xa10
    e688:	blr	x2
    e68c:	add	x1, x1, x0
    e690:	mov	w0, #0x0                   	// #0
    e694:	str	x5, [x19, #16]
    e698:	ldp	x19, x20, [sp, #16]
    e69c:	ldr	w2, [x1]
    e6a0:	orr	w2, w2, #0x4
    e6a4:	str	w2, [x1]
    e6a8:	b	e604 <mpfr_add_ui@@Base+0x10c>
    e6ac:	ldr	w1, [x4, #8]
    e6b0:	mov	w0, #0x0                   	// #0
    e6b4:	str	w1, [x19, #8]
    e6b8:	str	x5, [x19, #16]
    e6bc:	ldp	x19, x20, [sp, #16]
    e6c0:	b	e604 <mpfr_add_ui@@Base+0x10c>
    e6c4:	nop

000000000000e6c8 <mpfr_clear@@Base>:
    e6c8:	stp	x29, x30, [sp, #-32]!
    e6cc:	mov	x29, sp
    e6d0:	str	x19, [sp, #16]
    e6d4:	mov	x19, x0
    e6d8:	ldr	x0, [x0, #24]
    e6dc:	ldr	x1, [x0, #-8]!
    e6e0:	add	x1, x1, #0x1
    e6e4:	lsl	x1, x1, #3
    e6e8:	bl	cc20 <mpfr_free_func@plt>
    e6ec:	str	xzr, [x19, #24]
    e6f0:	ldr	x19, [sp, #16]
    e6f4:	ldp	x29, x30, [sp], #32
    e6f8:	ret
    e6fc:	nop

000000000000e700 <mpfr_cmp3@@Base>:
    e700:	mov	x5, x0
    e704:	ldr	w4, [x1, #8]
    e708:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    e70c:	ldr	x3, [x5, #16]
    e710:	mul	w2, w2, w4
    e714:	cmp	x3, x0
    e718:	b.le	e79c <mpfr_cmp3@@Base+0x9c>
    e71c:	ldr	x4, [x1, #16]
    e720:	cmp	x4, x0
    e724:	b.le	e810 <mpfr_cmp3@@Base+0x110>
    e728:	ldr	w0, [x5, #8]
    e72c:	cmp	w0, w2
    e730:	b.ne	e790 <mpfr_cmp3@@Base+0x90>  // b.any
    e734:	cmp	x3, x4
    e738:	b.gt	e790 <mpfr_cmp3@@Base+0x90>
    e73c:	b.lt	e794 <mpfr_cmp3@@Base+0x94>  // b.tstop
    e740:	ldr	x4, [x1]
    e744:	ldr	x3, [x5]
    e748:	sub	x4, x4, #0x1
    e74c:	ldr	x6, [x1, #24]
    e750:	sub	x3, x3, #0x1
    e754:	asr	x1, x4, #6
    e758:	asr	x0, x3, #6
    e75c:	ldr	x5, [x5, #24]
    e760:	b	e774 <mpfr_cmp3@@Base+0x74>
    e764:	b.cc	e84c <mpfr_cmp3@@Base+0x14c>  // b.lo, b.ul, b.last
    e768:	subs	x0, x0, #0x1
    e76c:	ccmp	x1, #0x0, #0x1, pl  // pl = nfrst
    e770:	b.lt	e854 <mpfr_cmp3@@Base+0x154>  // b.tstop
    e774:	ldr	x3, [x6, x1, lsl #3]
    e778:	sub	x1, x1, #0x1
    e77c:	ldr	x4, [x5, x0, lsl #3]
    e780:	cmp	x4, x3
    e784:	b.ls	e764 <mpfr_cmp3@@Base+0x64>  // b.plast
    e788:	mov	w0, w2
    e78c:	ret
    e790:	ret
    e794:	neg	w0, w0
    e798:	ret
    e79c:	mov	x4, #0x2                   	// #2
    e7a0:	movk	x4, #0x8000, lsl #48
    e7a4:	cmp	x3, x4
    e7a8:	b.eq	e7d8 <mpfr_cmp3@@Base+0xd8>  // b.none
    e7ac:	ldr	x1, [x1, #16]
    e7b0:	cmp	x1, x4
    e7b4:	b.eq	e7d8 <mpfr_cmp3@@Base+0xd8>  // b.none
    e7b8:	cmp	x3, x0
    e7bc:	b.ne	e878 <mpfr_cmp3@@Base+0x178>  // b.any
    e7c0:	ldr	w0, [x5, #8]
    e7c4:	cmp	x1, x3
    e7c8:	b.ne	e790 <mpfr_cmp3@@Base+0x90>  // b.any
    e7cc:	cmp	w2, w0
    e7d0:	csel	w0, w0, wzr, ne  // ne = any
    e7d4:	ret
    e7d8:	mrs	x1, tpidr_el0
    e7dc:	stp	x29, x30, [sp, #-16]!
    e7e0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    e7e4:	ldr	x2, [x0, #2576]
    e7e8:	add	x0, x0, #0xa10
    e7ec:	blr	x2
    e7f0:	add	x1, x1, x0
    e7f4:	mov	x29, sp
    e7f8:	mov	w0, #0x0                   	// #0
    e7fc:	ldr	w2, [x1]
    e800:	orr	w2, w2, #0x10
    e804:	str	w2, [x1]
    e808:	ldp	x29, x30, [sp], #16
    e80c:	ret
    e810:	mov	x1, #0x2                   	// #2
    e814:	movk	x1, #0x8000, lsl #48
    e818:	cmp	x4, x1
    e81c:	b.eq	e7d8 <mpfr_cmp3@@Base+0xd8>  // b.none
    e820:	cmp	x4, x0
    e824:	b.eq	e84c <mpfr_cmp3@@Base+0x14c>  // b.none
    e828:	ldr	w0, [x5, #8]
    e82c:	ret
    e830:	cmn	x1, #0x1
    e834:	nop
    e838:	b.eq	e870 <mpfr_cmp3@@Base+0x170>  // b.none
    e83c:	ldr	x0, [x6, x1, lsl #3]
    e840:	sub	x1, x1, #0x1
    e844:	cmn	x1, #0x1
    e848:	cbz	x0, e838 <mpfr_cmp3@@Base+0x138>
    e84c:	neg	w0, w2
    e850:	ret
    e854:	cmn	x0, #0x1
    e858:	b.eq	e830 <mpfr_cmp3@@Base+0x130>  // b.none
    e85c:	ldr	x3, [x5, x0, lsl #3]
    e860:	sub	x0, x0, #0x1
    e864:	cmn	x0, #0x1
    e868:	cbz	x3, e858 <mpfr_cmp3@@Base+0x158>
    e86c:	b	e788 <mpfr_cmp3@@Base+0x88>
    e870:	mov	w0, #0x0                   	// #0
    e874:	ret
    e878:	cmp	x1, x0
    e87c:	b.eq	e84c <mpfr_cmp3@@Base+0x14c>  // b.none
    e880:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    e884:	cmp	x3, x0
    e888:	b.ne	e828 <mpfr_cmp3@@Base+0x128>  // b.any
    e88c:	cmp	x1, x3
    e890:	csneg	w0, wzr, w2, eq  // eq = none
    e894:	ret

000000000000e898 <mpfr_div_2si@@Base>:
    e898:	stp	x29, x30, [sp, #-80]!
    e89c:	mov	x29, sp
    e8a0:	stp	x21, x22, [sp, #32]
    e8a4:	mov	w22, w3
    e8a8:	ldr	x21, [x1, #16]
    e8ac:	stp	x19, x20, [sp, #16]
    e8b0:	mov	x20, x2
    e8b4:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    e8b8:	cmp	x21, x2
    e8bc:	b.le	eb00 <mpfr_div_2si@@Base+0x268>
    e8c0:	stp	x23, x24, [sp, #48]
    e8c4:	mov	x19, x0
    e8c8:	cmp	x1, x0
    e8cc:	mov	w23, #0x0                   	// #0
    e8d0:	b.eq	e9cc <mpfr_div_2si@@Base+0x134>  // b.none
    e8d4:	ldr	w23, [x1, #8]
    e8d8:	ldr	x6, [x1]
    e8dc:	str	w23, [x0, #8]
    e8e0:	ldr	x5, [x0]
    e8e4:	cmp	x5, x6
    e8e8:	b.eq	ea4c <mpfr_div_2si@@Base+0x1b4>  // b.none
    e8ec:	sub	x6, x6, #0x1
    e8f0:	sub	x7, x5, #0x1
    e8f4:	ldr	x8, [x1, #24]
    e8f8:	asr	x6, x6, #6
    e8fc:	asr	x7, x7, #6
    e900:	ldr	x24, [x0, #24]
    e904:	b.ge	ebdc <mpfr_div_2si@@Base+0x344>  // b.tcont
    e908:	sub	x6, x6, x7
    e90c:	str	x25, [sp, #64]
    e910:	neg	w5, w5
    e914:	add	x2, x7, #0x1
    e918:	ands	w5, w5, #0x3f
    e91c:	add	x1, x8, x6, lsl #3
    e920:	b.eq	ec18 <mpfr_div_2si@@Base+0x380>  // b.none
    e924:	ldr	x3, [x8, x6, lsl #3]
    e928:	sub	w5, w5, #0x1
    e92c:	mov	x0, #0x1                   	// #1
    e930:	cmp	w22, #0x0
    e934:	lsl	x0, x0, x5
    e938:	and	x9, x3, x0
    e93c:	sub	x0, x0, #0x1
    e940:	ccmp	x9, #0x0, #0x4, ne  // ne = any
    e944:	and	x0, x0, x3
    e948:	b.ne	e978 <mpfr_div_2si@@Base+0xe0>  // b.any
    e94c:	cmp	x0, #0x0
    e950:	mov	x4, x6
    e954:	ccmp	x6, #0x0, #0x4, eq  // eq = none
    e958:	b.eq	e978 <mpfr_div_2si@@Base+0xe0>  // b.none
    e95c:	mvn	x3, x6
    e960:	add	x3, x1, x3, lsl #3
    e964:	nop
    e968:	ldr	x0, [x3, x4, lsl #3]
    e96c:	subs	x4, x4, #0x1
    e970:	ccmp	x0, #0x0, #0x0, ne  // ne = any
    e974:	b.eq	e968 <mpfr_div_2si@@Base+0xd0>  // b.none
    e978:	mov	x25, #0x2                   	// #2
    e97c:	lsl	x25, x25, x5
    e980:	cmp	w22, #0x5
    e984:	b.eq	eaf8 <mpfr_div_2si@@Base+0x260>  // b.none
    e988:	cbnz	w22, ea78 <mpfr_div_2si@@Base+0x1e0>
    e98c:	cbz	x9, eaf4 <mpfr_div_2si@@Base+0x25c>
    e990:	ldr	x3, [x8, x6, lsl #3]
    e994:	and	x4, x25, x3
    e998:	orr	x0, x4, x0
    e99c:	cbnz	x0, ea98 <mpfr_div_2si@@Base+0x200>
    e9a0:	neg	w23, w23
    e9a4:	cmp	x24, x1
    e9a8:	b.eq	e9b8 <mpfr_div_2si@@Base+0x120>  // b.none
    e9ac:	lsl	x2, x2, #3
    e9b0:	mov	x0, x24
    e9b4:	bl	ba10 <memcpy@plt>
    e9b8:	ldr	x0, [x24]
    e9bc:	neg	x5, x25
    e9c0:	ldr	x25, [sp, #64]
    e9c4:	and	x5, x0, x5
    e9c8:	str	x5, [x24]
    e9cc:	mrs	x1, tpidr_el0
    e9d0:	cmp	x20, #0x0
    e9d4:	b.gt	eb18 <mpfr_div_2si@@Base+0x280>
    e9d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    e9dc:	ldr	x2, [x0, #2544]
    e9e0:	add	x0, x0, #0x9f0
    e9e4:	blr	x2
    e9e8:	ldr	x0, [x1, x0]
    e9ec:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
    e9f0:	sub	x2, x2, x20
    e9f4:	cmp	x2, x0
    e9f8:	b.gt	ecd0 <mpfr_div_2si@@Base+0x438>
    e9fc:	add	x0, x0, x20
    ea00:	cmp	x0, x21
    ea04:	b.lt	ecd0 <mpfr_div_2si@@Base+0x438>  // b.tstop
    ea08:	sub	x20, x21, x20
    ea0c:	str	x20, [x19, #16]
    ea10:	cbz	w23, ea34 <mpfr_div_2si@@Base+0x19c>
    ea14:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    ea18:	ldr	x2, [x0, #2576]
    ea1c:	add	x0, x0, #0xa10
    ea20:	blr	x2
    ea24:	add	x0, x1, x0
    ea28:	ldr	w1, [x0]
    ea2c:	orr	w1, w1, #0x8
    ea30:	str	w1, [x0]
    ea34:	mov	w0, w23
    ea38:	ldp	x19, x20, [sp, #16]
    ea3c:	ldp	x21, x22, [sp, #32]
    ea40:	ldp	x23, x24, [sp, #48]
    ea44:	ldp	x29, x30, [sp], #80
    ea48:	ret
    ea4c:	ldr	x1, [x1, #24]
    ea50:	mov	w23, #0x0                   	// #0
    ea54:	ldr	x0, [x0, #24]
    ea58:	cmp	x0, x1
    ea5c:	b.eq	e9cc <mpfr_div_2si@@Base+0x134>  // b.none
    ea60:	sub	x5, x5, #0x1
    ea64:	asr	x5, x5, #6
    ea68:	add	x5, x5, #0x1
    ea6c:	lsl	x2, x5, #3
    ea70:	bl	ba10 <memcpy@plt>
    ea74:	b	e9cc <mpfr_div_2si@@Base+0x134>
    ea78:	orr	x0, x0, x9
    ea7c:	cmp	w22, #0x1
    ea80:	b.eq	eaf4 <mpfr_div_2si@@Base+0x25c>  // b.none
    ea84:	add	w3, w22, w23, lsr #31
    ea88:	cmp	w3, #0x3
    ea8c:	b.eq	eaf4 <mpfr_div_2si@@Base+0x25c>  // b.none
    ea90:	cbz	x0, eaf8 <mpfr_div_2si@@Base+0x260>
    ea94:	ldr	x3, [x8, x6, lsl #3]
    ea98:	adds	x3, x3, x25
    ea9c:	str	x3, [x24]
    eaa0:	b.cc	eba8 <mpfr_div_2si@@Base+0x310>  // b.lo, b.ul, b.last
    eaa4:	mov	x0, #0x1                   	// #1
    eaa8:	b	eac4 <mpfr_div_2si@@Base+0x22c>
    eaac:	ldr	x3, [x1, x0, lsl #3]
    eab0:	add	x4, x0, #0x1
    eab4:	add	x3, x3, #0x1
    eab8:	str	x3, [x24, x0, lsl #3]
    eabc:	cbnz	x3, ec60 <mpfr_div_2si@@Base+0x3c8>
    eac0:	mov	x0, x4
    eac4:	cmp	x2, x0
    eac8:	b.gt	eaac <mpfr_div_2si@@Base+0x214>
    eacc:	add	x2, x24, x2, lsl #3
    ead0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    ead4:	add	x21, x21, #0x1
    ead8:	stur	x0, [x2, #-8]
    eadc:	ldr	x3, [x24]
    eae0:	neg	x5, x25
    eae4:	and	x3, x5, x3
    eae8:	ldr	x25, [sp, #64]
    eaec:	str	x3, [x24]
    eaf0:	b	e9cc <mpfr_div_2si@@Base+0x134>
    eaf4:	cbnz	x0, e9a0 <mpfr_div_2si@@Base+0x108>
    eaf8:	mov	w23, #0x0                   	// #0
    eafc:	b	e9a4 <mpfr_div_2si@@Base+0x10c>
    eb00:	ldp	x19, x20, [sp, #16]
    eb04:	mov	w2, w3
    eb08:	ldp	x21, x22, [sp, #32]
    eb0c:	ldp	x29, x30, [sp], #80
    eb10:	ldr	w3, [x1, #8]
    eb14:	b	c6a0 <mpfr_set4@plt>
    eb18:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    eb1c:	ldr	x2, [x0, #2512]
    eb20:	add	x0, x0, #0x9d0
    eb24:	blr	x2
    eb28:	ldr	x0, [x1, x0]
    eb2c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
    eb30:	sub	x2, x2, x20
    eb34:	cmp	x2, x0
    eb38:	b.lt	eb48 <mpfr_div_2si@@Base+0x2b0>  // b.tstop
    eb3c:	add	x2, x0, x20
    eb40:	cmp	x2, x21
    eb44:	b.le	ea08 <mpfr_div_2si@@Base+0x170>
    eb48:	ldr	w2, [x19, #8]
    eb4c:	cbnz	w22, eb88 <mpfr_div_2si@@Base+0x2f0>
    eb50:	mov	x1, #0x4000000000000000    	// #4611686018427387904
    eb54:	sub	x1, x1, x20
    eb58:	cmp	x0, x1
    eb5c:	b.gt	ecc8 <mpfr_div_2si@@Base+0x430>
    eb60:	sub	x20, x20, #0x1
    eb64:	add	x0, x20, x0
    eb68:	cmp	x0, x21
    eb6c:	b.gt	ecc8 <mpfr_div_2si@@Base+0x430>
    eb70:	tbnz	w2, #31, ecb0 <mpfr_div_2si@@Base+0x418>
    eb74:	tbnz	w23, #31, eb88 <mpfr_div_2si@@Base+0x2f0>
    eb78:	mov	x0, x19
    eb7c:	bl	bf00 <mpfr_powerof2_raw@plt>
    eb80:	cmp	w0, #0x0
    eb84:	cset	w22, ne  // ne = any
    eb88:	ldr	w2, [x19, #8]
    eb8c:	mov	w1, w22
    eb90:	mov	x0, x19
    eb94:	ldp	x19, x20, [sp, #16]
    eb98:	ldp	x21, x22, [sp, #32]
    eb9c:	ldp	x23, x24, [sp, #48]
    eba0:	ldp	x29, x30, [sp], #80
    eba4:	b	c3c0 <mpfr_underflow@plt>
    eba8:	cmp	x24, x1
    ebac:	b.eq	eae0 <mpfr_div_2si@@Base+0x248>  // b.none
    ebb0:	cmp	x2, #0x1
    ebb4:	b.eq	eae0 <mpfr_div_2si@@Base+0x248>  // b.none
    ebb8:	mov	x0, #0x1                   	// #1
    ebbc:	nop
    ebc0:	ldr	x3, [x1, x0, lsl #3]
    ebc4:	str	x3, [x24, x0, lsl #3]
    ebc8:	add	x0, x0, #0x1
    ebcc:	cmp	x0, x2
    ebd0:	b.ne	ebc0 <mpfr_div_2si@@Base+0x328>  // b.any
    ebd4:	ldr	x3, [x24]
    ebd8:	b	eae0 <mpfr_div_2si@@Base+0x248>
    ebdc:	sub	x7, x7, x6
    ebe0:	add	x6, x6, #0x1
    ebe4:	lsl	x23, x7, #3
    ebe8:	add	x0, x24, x23
    ebec:	cmp	x0, x8
    ebf0:	b.eq	ec00 <mpfr_div_2si@@Base+0x368>  // b.none
    ebf4:	lsl	x2, x6, #3
    ebf8:	mov	x1, x8
    ebfc:	bl	ba10 <memcpy@plt>
    ec00:	mov	x2, x23
    ec04:	mov	x0, x24
    ec08:	mov	w1, #0x0                   	// #0
    ec0c:	mov	w23, #0x0                   	// #0
    ec10:	bl	c110 <memset@plt>
    ec14:	b	e9cc <mpfr_div_2si@@Base+0x134>
    ec18:	ldur	x0, [x1, #-8]
    ec1c:	cmp	w3, #0x0
    ec20:	ccmp	x0, #0x0, #0x0, ne  // ne = any
    ec24:	and	x9, x0, #0x8000000000000000
    ec28:	and	x4, x0, #0x7fffffffffffffff
    ec2c:	b.lt	ec8c <mpfr_div_2si@@Base+0x3f4>  // b.tstop
    ec30:	subs	x3, x6, #0x1
    ec34:	ccmp	x4, #0x0, #0x0, ne  // ne = any
    ec38:	b.ne	ecbc <mpfr_div_2si@@Base+0x424>  // b.any
    ec3c:	mvn	x4, x6
    ec40:	add	x4, x1, x4, lsl #3
    ec44:	nop
    ec48:	ldr	x0, [x4, x3, lsl #3]
    ec4c:	subs	x3, x3, #0x1
    ec50:	ccmp	x0, #0x0, #0x0, ne  // ne = any
    ec54:	b.eq	ec48 <mpfr_div_2si@@Base+0x3b0>  // b.none
    ec58:	mov	x25, #0x1                   	// #1
    ec5c:	b	e980 <mpfr_div_2si@@Base+0xe8>
    ec60:	cmp	x24, x1
    ec64:	b.eq	ebd4 <mpfr_div_2si@@Base+0x33c>  // b.none
    ec68:	cmp	x7, x0
    ec6c:	b.le	ebd4 <mpfr_div_2si@@Base+0x33c>
    ec70:	ldr	x0, [x1, x4, lsl #3]
    ec74:	str	x0, [x24, x4, lsl #3]
    ec78:	cmp	x7, x4
    ec7c:	add	x4, x4, #0x1
    ec80:	b.gt	ec70 <mpfr_div_2si@@Base+0x3d8>
    ec84:	ldr	x3, [x24]
    ec88:	b	eae0 <mpfr_div_2si@@Base+0x248>
    ec8c:	cmp	w3, #0x5
    ec90:	mov	x25, #0x1                   	// #1
    ec94:	b.eq	eaf8 <mpfr_div_2si@@Base+0x260>  // b.none
    ec98:	cmp	w3, #0x1
    ec9c:	b.eq	e9a0 <mpfr_div_2si@@Base+0x108>  // b.none
    eca0:	add	w3, w3, w23, lsr #31
    eca4:	cmp	w3, #0x3
    eca8:	b.ne	ea90 <mpfr_div_2si@@Base+0x1f8>  // b.any
    ecac:	b	e9a0 <mpfr_div_2si@@Base+0x108>
    ecb0:	cmp	w23, #0x0
    ecb4:	b.le	eb78 <mpfr_div_2si@@Base+0x2e0>
    ecb8:	b	eb88 <mpfr_div_2si@@Base+0x2f0>
    ecbc:	mov	x0, x4
    ecc0:	mov	x25, #0x1                   	// #1
    ecc4:	b	e980 <mpfr_div_2si@@Base+0xe8>
    ecc8:	mov	w22, #0x1                   	// #1
    eccc:	b	eb88 <mpfr_div_2si@@Base+0x2f0>
    ecd0:	ldr	w2, [x19, #8]
    ecd4:	mov	w1, w22
    ecd8:	mov	x0, x19
    ecdc:	ldp	x19, x20, [sp, #16]
    ece0:	ldp	x21, x22, [sp, #32]
    ece4:	ldp	x23, x24, [sp, #48]
    ece8:	ldp	x29, x30, [sp], #80
    ecec:	b	bf40 <mpfr_overflow@plt>

000000000000ecf0 <mpfr_div@@Base>:
    ecf0:	stp	x29, x30, [sp, #-272]!
    ecf4:	mov	x6, x2
    ecf8:	mov	x29, sp
    ecfc:	ldr	x4, [x1, #16]
    ed00:	stp	x19, x20, [sp, #16]
    ed04:	mov	x19, x0
    ed08:	stp	x21, x22, [sp, #32]
    ed0c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    ed10:	cmp	x4, x0
    ed14:	stp	x23, x24, [sp, #48]
    ed18:	stp	x25, x26, [sp, #64]
    ed1c:	mov	x25, x1
    ed20:	stp	x27, x28, [sp, #80]
    ed24:	b.le	f528 <mpfr_div@@Base+0x838>
    ed28:	ldr	x28, [x2, #16]
    ed2c:	cmp	x28, x0
    ed30:	mov	x1, x28
    ed34:	b.le	f53c <mpfr_div@@Base+0x84c>
    ed38:	ldr	x1, [x19, #24]
    ed3c:	mov	w20, w3
    ed40:	str	x1, [x29, #192]
    ed44:	ldr	x21, [x19]
    ed48:	ldr	x3, [x25]
    ed4c:	ldr	x1, [x25, #24]
    ed50:	str	x1, [x29, #200]
    ed54:	cmp	x3, x21
    ed58:	ldr	x0, [x2]
    ed5c:	ldr	x22, [x2, #24]
    ed60:	b.eq	f1e8 <mpfr_div@@Base+0x4f8>  // b.none
    ed64:	sub	x3, x3, #0x1
    ed68:	sub	x1, x21, #0x1
    ed6c:	sub	x0, x0, #0x1
    ed70:	asr	x1, x1, #6
    ed74:	asr	x26, x3, #6
    ed78:	asr	x2, x0, #6
    ed7c:	add	x0, x26, #0x1
    ed80:	stp	x2, x1, [x29, #128]
    ed84:	add	x1, x1, #0x1
    ed88:	add	x23, x2, #0x1
    ed8c:	str	x0, [x29, #176]
    ed90:	str	x1, [x29, #216]
    ed94:	cbz	x2, f368 <mpfr_div@@Base+0x678>
    ed98:	mrs	x0, tpidr_el0
    ed9c:	str	x0, [x29, #208]
    eda0:	ldr	x0, [x29, #216]
    eda4:	cmp	x0, #0x1f
    eda8:	b.gt	f0b0 <mpfr_div@@Base+0x3c0>
    edac:	add	x0, x26, #0x1
    edb0:	ldr	w1, [x6, #8]
    edb4:	lsl	x3, x23, #3
    edb8:	str	x3, [x29, #120]
    edbc:	lsl	x24, x0, #3
    edc0:	add	x5, x22, x3
    edc4:	ldr	x0, [x29, #200]
    edc8:	add	x2, x0, x24
    edcc:	ldr	w0, [x25, #8]
    edd0:	ldur	x2, [x2, #-8]
    edd4:	mul	w1, w1, w0
    edd8:	ldur	x0, [x5, #-8]
    eddc:	str	w1, [x19, #8]
    ede0:	str	w1, [x29, #168]
    ede4:	str	xzr, [x29, #256]
    ede8:	cmp	x2, x0
    edec:	b.eq	f5ec <mpfr_div@@Base+0x8fc>  // b.none
    edf0:	cset	x1, hi  // hi = pmore
    edf4:	cset	w0, hi  // hi = pmore
    edf8:	str	w0, [x29, #152]
    edfc:	neg	w21, w21
    ee00:	sub	x28, x4, x28
    ee04:	and	w0, w21, #0x3f
    ee08:	str	w0, [x29, #184]
    ee0c:	add	x28, x28, x1
    ee10:	cmp	w20, #0x1
    ee14:	mov	w27, #0x1                   	// #1
    ee18:	b.eq	ee34 <mpfr_div@@Base+0x144>  // b.none
    ee1c:	ldr	w0, [x29, #168]
    ee20:	mvn	w0, w0
    ee24:	lsr	w0, w0, #31
    ee28:	add	w0, w0, #0x2
    ee2c:	cmp	w0, w20
    ee30:	cset	w27, eq  // eq = none
    ee34:	ldr	x0, [x29, #216]
    ee38:	cmp	x0, #0x18
    ee3c:	ccmp	x23, #0x18, #0x4, gt
    ee40:	b.gt	f64c <mpfr_div@@Base+0x95c>
    ee44:	ldr	w0, [x29, #184]
    ee48:	ldr	x21, [x29, #192]
    ee4c:	orr	w0, w20, w0
    ee50:	ldr	x26, [x29, #216]
    ee54:	cbz	w0, f7e4 <mpfr_div@@Base+0xaf4>
    ee58:	lsl	x0, x26, #1
    ee5c:	str	x0, [x29, #144]
    ee60:	lsl	x2, x26, #4
    ee64:	cmp	x2, #0x4, lsl #12
    ee68:	b.hi	f82c <mpfr_div@@Base+0xb3c>  // b.pmore
    ee6c:	sub	sp, sp, x2
    ee70:	mov	x25, sp
    ee74:	ldr	x1, [x29, #176]
    ee78:	lsl	x0, x26, #1
    ee7c:	cmp	x0, x1
    ee80:	b.le	f848 <mpfr_div@@Base+0xb58>
    ee84:	sub	x2, x0, x1
    ee88:	mov	w1, #0x0                   	// #0
    ee8c:	mov	x0, x25
    ee90:	lsl	x2, x2, #3
    ee94:	str	x2, [x29, #160]
    ee98:	bl	c110 <memset@plt>
    ee9c:	ldr	w1, [x29, #152]
    eea0:	ldr	x2, [x29, #160]
    eea4:	add	x0, x25, x2
    eea8:	cbnz	w1, f444 <mpfr_div@@Base+0x754>
    eeac:	ldr	x1, [x29, #200]
    eeb0:	str	xzr, [x29, #160]
    eeb4:	cmp	x1, x0
    eeb8:	b.eq	eec4 <mpfr_div@@Base+0x1d4>  // b.none
    eebc:	mov	x2, x24
    eec0:	bl	ba10 <memcpy@plt>
    eec4:	cmp	x26, x23
    eec8:	b.gt	f80c <mpfr_div@@Base+0xb1c>
    eecc:	cmp	x21, x22
    eed0:	sub	x24, x23, x26
    eed4:	b.eq	f4ec <mpfr_div@@Base+0x7fc>  // b.none
    eed8:	add	x4, x22, x24, lsl #3
    eedc:	cbz	x24, eef0 <mpfr_div@@Base+0x200>
    eee0:	sub	x24, x24, #0x1
    eee4:	ldr	x0, [x22, x24, lsl #3]
    eee8:	cbz	x0, eedc <mpfr_div@@Base+0x1ec>
    eeec:	mov	x24, #0x1                   	// #1
    eef0:	ldr	x3, [x29, #144]
    eef4:	mov	x5, x26
    eef8:	mov	x2, x25
    eefc:	mov	x0, x21
    ef00:	mov	x1, #0x0                   	// #0
    ef04:	bl	ccb0 <__gmpn_divrem@plt>
    ef08:	mov	x9, x0
    ef0c:	ldr	x0, [x29, #160]
    ef10:	cbnz	x0, f1dc <mpfr_div@@Base+0x4ec>
    ef14:	mov	x0, x26
    ef18:	sub	x0, x0, #0x1
    ef1c:	ldr	x4, [x25, x0, lsl #3]
    ef20:	cbz	x4, fe3c <mpfr_div@@Base+0x114c>
    ef24:	mov	x24, #0x1                   	// #1
    ef28:	mov	x4, x24
    ef2c:	ldr	x0, [x29, #216]
    ef30:	cmp	x26, x0
    ef34:	b.ne	fb48 <mpfr_div@@Base+0xe58>  // b.any
    ef38:	ldr	w3, [x29, #184]
    ef3c:	mov	x1, #0xffffffffffffffff    	// #-1
    ef40:	ldr	x0, [x21]
    ef44:	lsl	x1, x1, x3
    ef48:	bic	x8, x0, x1
    ef4c:	and	x1, x0, x1
    ef50:	orr	x2, x24, x8
    ef54:	str	x1, [x21]
    ef58:	cmp	x2, #0x0
    ef5c:	cset	w5, ne  // ne = any
    ef60:	cmp	x26, x23
    ef64:	b.lt	f894 <mpfr_div@@Base+0xba4>  // b.tstop
    ef68:	cbnz	w20, f4b0 <mpfr_div@@Base+0x7c0>
    ef6c:	sub	w3, w3, #0x1
    ef70:	mov	x0, #0x1                   	// #1
    ef74:	lsl	x0, x0, x3
    ef78:	bic	x5, x8, x0
    ef7c:	orr	x5, x5, x4
    ef80:	and	x24, x0, x8
    ef84:	orr	x0, x24, x5
    ef88:	cbnz	w27, f4e0 <mpfr_div@@Base+0x7f0>
    ef8c:	cbz	x0, f010 <mpfr_div@@Base+0x320>
    ef90:	cbnz	w20, f4c0 <mpfr_div@@Base+0x7d0>
    ef94:	mov	w27, #0xffffffff            	// #-1
    ef98:	cbz	x24, f010 <mpfr_div@@Base+0x320>
    ef9c:	ldr	x0, [x29, #192]
    efa0:	ldr	x1, [x0]
    efa4:	cbz	x5, fba4 <mpfr_div@@Base+0xeb4>
    efa8:	ldrb	w0, [x29, #184]
    efac:	mov	x3, #0x1                   	// #1
    efb0:	lsl	x3, x3, x0
    efb4:	ldr	x0, [x29, #192]
    efb8:	adds	x1, x1, x3
    efbc:	mov	w27, #0x1                   	// #1
    efc0:	str	x1, [x0]
    efc4:	b.cc	f010 <mpfr_div@@Base+0x320>  // b.lo, b.ul, b.last
    efc8:	ldr	x2, [x29, #136]
    efcc:	mov	x1, x0
    efd0:	add	x2, x0, x2, lsl #3
    efd4:	b	efe8 <mpfr_div@@Base+0x2f8>
    efd8:	ldr	x0, [x1, #8]
    efdc:	add	x0, x0, #0x1
    efe0:	str	x0, [x1, #8]!
    efe4:	cbnz	x0, fc88 <mpfr_div@@Base+0xf98>
    efe8:	cmp	x2, x1
    efec:	b.ne	efd8 <mpfr_div@@Base+0x2e8>  // b.any
    eff0:	ldr	x2, [x29, #136]
    eff4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    eff8:	ldr	x1, [x29, #192]
    effc:	cmp	x28, x0
    f000:	cinc	x28, x28, ne  // ne = any
    f004:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    f008:	mov	w27, #0x1                   	// #1
    f00c:	str	x0, [x1, x2, lsl #3]
    f010:	ldr	x0, [x29, #256]
    f014:	cbnz	x0, f7dc <mpfr_div@@Base+0xaec>
    f018:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    f01c:	ldr	x1, [x0, #2544]
    f020:	add	x0, x0, #0x9f0
    f024:	blr	x1
    f028:	ldr	x1, [x29, #208]
    f02c:	ldr	x0, [x1, x0]
    f030:	cmp	x0, x28
    f034:	b.lt	109b8 <mpfr_div@@Base+0x1cc8>  // b.tstop
    f038:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    f03c:	ldr	x1, [x0, #2512]
    f040:	add	x0, x0, #0x9d0
    f044:	blr	x1
    f048:	ldr	x1, [x29, #208]
    f04c:	ldr	x0, [x1, x0]
    f050:	cmp	x0, x28
    f054:	b.gt	f79c <mpfr_div@@Base+0xaac>
    f058:	ldr	w0, [x29, #168]
    f05c:	str	x28, [x19, #16]
    f060:	mul	w27, w27, w0
    f064:	cbz	w27, f08c <mpfr_div@@Base+0x39c>
    f068:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    f06c:	ldr	x1, [x0, #2576]
    f070:	add	x0, x0, #0xa10
    f074:	blr	x1
    f078:	ldr	x1, [x29, #208]
    f07c:	add	x0, x1, x0
    f080:	ldr	w1, [x0]
    f084:	orr	w1, w1, #0x8
    f088:	str	w1, [x0]
    f08c:	mov	sp, x29
    f090:	mov	w0, w27
    f094:	ldp	x19, x20, [sp, #16]
    f098:	ldp	x21, x22, [sp, #32]
    f09c:	ldp	x23, x24, [sp, #48]
    f0a0:	ldp	x25, x26, [sp, #64]
    f0a4:	ldp	x27, x28, [sp, #80]
    f0a8:	ldp	x29, x30, [sp], #272
    f0ac:	ret
    f0b0:	add	x28, x29, #0xe0
    f0b4:	add	x24, x29, #0xf0
    f0b8:	mov	x0, x28
    f0bc:	str	x6, [x29, #160]
    f0c0:	bl	bf90 <mpfr_mpz_init@plt>
    f0c4:	add	x27, x29, #0x100
    f0c8:	mov	x0, x24
    f0cc:	str	x27, [x29, #184]
    f0d0:	bl	bf90 <mpfr_mpz_init@plt>
    f0d4:	add	x21, x21, #0x40
    f0d8:	mov	x0, x27
    f0dc:	bl	bf90 <mpfr_mpz_init@plt>
    f0e0:	mov	x1, x25
    f0e4:	mov	x0, x24
    f0e8:	bl	cac0 <mpfr_get_z_2exp@plt>
    f0ec:	str	x0, [x29, #168]
    f0f0:	ldr	x6, [x29, #160]
    f0f4:	mov	x0, x27
    f0f8:	mov	x1, x6
    f0fc:	bl	cac0 <mpfr_get_z_2exp@plt>
    f100:	str	x0, [x29, #144]
    f104:	mov	w1, #0x2                   	// #2
    f108:	mov	x0, x27
    f10c:	bl	cb60 <__gmpz_sizeinbase@plt>
    f110:	mov	x27, x0
    f114:	cmp	x21, x0
    f118:	ldr	x6, [x29, #160]
    f11c:	b.lt	f488 <mpfr_div@@Base+0x798>  // b.tstop
    f120:	mov	x0, x24
    f124:	mov	w1, #0x2                   	// #2
    f128:	str	x6, [x29, #160]
    f12c:	bl	cb60 <__gmpz_sizeinbase@plt>
    f130:	add	x4, x21, x27
    f134:	cmp	x0, x4
    f138:	ldr	x6, [x29, #160]
    f13c:	b.gt	f464 <mpfr_div@@Base+0x774>
    f140:	b.lt	fb80 <mpfr_div@@Base+0xe90>  // b.tstop
    f144:	ldr	x2, [x29, #184]
    f148:	mov	x1, x24
    f14c:	mov	x0, x28
    f150:	str	x6, [x29, #152]
    f154:	bl	bb30 <__gmpz_tdiv_q@plt>
    f158:	mov	w1, #0x2                   	// #2
    f15c:	mov	x0, x28
    f160:	bl	cb60 <__gmpz_sizeinbase@plt>
    f164:	sub	x21, x0, x21
    f168:	add	x1, x21, #0x1
    f16c:	mov	x0, x28
    f170:	str	x1, [x29, #160]
    f174:	bl	ba90 <__gmpz_scan1@plt>
    f178:	cmp	w20, #0x0
    f17c:	add	x21, x21, #0x40
    f180:	cset	x2, eq  // eq = none
    f184:	sub	x21, x21, x2
    f188:	cmp	x0, x21
    f18c:	ldp	x6, x1, [x29, #152]
    f190:	b.cs	f1ac <mpfr_div@@Base+0x4bc>  // b.hs, b.nlast
    f194:	mov	x0, x28
    f198:	str	x6, [x29, #160]
    f19c:	bl	c4b0 <__gmpz_scan0@plt>
    f1a0:	cmp	x21, x0
    f1a4:	ldr	x6, [x29, #160]
    f1a8:	b.hi	fca4 <mpfr_div@@Base+0xfb4>  // b.pmore
    f1ac:	mov	x0, x28
    f1b0:	str	x6, [x29, #168]
    f1b4:	bl	c170 <mpfr_mpz_clear@plt>
    f1b8:	mov	x0, x24
    f1bc:	bl	c170 <mpfr_mpz_clear@plt>
    f1c0:	ldr	x0, [x29, #184]
    f1c4:	bl	c170 <mpfr_mpz_clear@plt>
    f1c8:	ldr	x6, [x29, #168]
    f1cc:	ldr	x21, [x19]
    f1d0:	ldr	x4, [x25, #16]
    f1d4:	ldr	x28, [x6, #16]
    f1d8:	b	edac <mpfr_div@@Base+0xbc>
    f1dc:	ldr	x4, [x29, #160]
    f1e0:	mov	x24, x4
    f1e4:	b	ef2c <mpfr_div@@Base+0x23c>
    f1e8:	cmp	x3, x0
    f1ec:	b.ne	ed64 <mpfr_div@@Base+0x74>  // b.any
    f1f0:	cmp	x3, #0x3f
    f1f4:	b.le	fe5c <mpfr_div@@Base+0x116c>
    f1f8:	cmp	x3, #0x7f
    f1fc:	mov	x1, #0x40                  	// #64
    f200:	ccmp	x3, x1, #0x4, le
    f204:	b.ne	1016c <mpfr_div@@Base+0x147c>  // b.any
    f208:	cmp	x3, #0x40
    f20c:	b.ne	ed64 <mpfr_div@@Base+0x74>  // b.any
    f210:	ldr	x3, [x22]
    f214:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
    f218:	add	x2, x2, #0xcd0
    f21c:	mov	x0, #0x1000000000000000    	// #1152921504606846976
    f220:	add	x12, x2, #0x800
    f224:	sub	x7, x3, #0x1
    f228:	lsr	x10, x3, #55
    f22c:	lsr	x9, x3, #24
    f230:	sub	x10, x10, #0x100
    f234:	lsr	x11, x7, #1
    f238:	ldr	x5, [x29, #200]
    f23c:	sbfx	x1, x3, #0, #1
    f240:	ldr	x7, [x12, x10, lsl #3]
    f244:	sub	x4, x4, x28
    f248:	ldr	x10, [x2, x10, lsl #3]
    f24c:	madd	x7, x9, x7, x7
    f250:	sub	x10, x10, #0x1
    f254:	ldr	x8, [x5]
    f258:	sub	x7, x10, x7, lsr #40
    f25c:	lsl	x10, x7, #13
    f260:	subs	x2, x8, x3
    f264:	madd	x9, x9, x7, x7
    f268:	csel	x2, x2, x8, cs  // cs = hs, nlast
    f26c:	sub	x0, x0, x9
    f270:	mul	x0, x0, x7
    f274:	add	x0, x10, x0, lsr #47
    f278:	and	x1, x1, x0
    f27c:	madd	x7, x11, x0, x0
    f280:	lsr	x1, x1, #1
    f284:	sub	x1, x1, x7
    f288:	umulh	x1, x0, x1
    f28c:	lsr	x1, x1, #1
    f290:	add	x0, x1, x0, lsl #31
    f294:	umulh	x0, x2, x0
    f298:	add	x0, x0, x2
    f29c:	umulh	x7, x0, x3
    f2a0:	mul	x9, x3, x0
    f2a4:	negs	x1, x9
    f2a8:	sbc	x2, x2, x7
    f2ac:	cmp	x2, #0x0
    f2b0:	ccmp	x3, x1, #0x0, eq  // eq = none
    f2b4:	b.hi	f2d0 <mpfr_div@@Base+0x5e0>  // b.pmore
    f2b8:	subs	x1, x1, x3
    f2bc:	add	x0, x0, #0x1
    f2c0:	sbc	x2, x2, xzr
    f2c4:	cmp	x2, #0x0
    f2c8:	ccmp	x3, x1, #0x0, eq  // eq = none
    f2cc:	b.ls	f2b8 <mpfr_div@@Base+0x5c8>  // b.plast
    f2d0:	cmp	x8, x3
    f2d4:	b.cs	105a0 <mpfr_div@@Base+0x18b0>  // b.hs, b.nlast
    f2d8:	ldr	x5, [x29, #192]
    f2dc:	lsl	x2, x1, #1
    f2e0:	cmp	x3, x2
    f2e4:	ccmp	x2, x1, #0x0, hi  // hi = pmore
    f2e8:	str	x0, [x5]
    f2ec:	b.cs	1081c <mpfr_div@@Base+0x1b2c>  // b.hs, b.nlast
    f2f0:	sub	x1, x2, x3
    f2f4:	mov	x2, #0x1                   	// #1
    f2f8:	ldr	w3, [x6, #8]
    f2fc:	mrs	x5, tpidr_el0
    f300:	ldr	w27, [x25, #8]
    f304:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    f308:	ldr	x6, [x0, #2544]
    f30c:	add	x0, x0, #0x9f0
    f310:	blr	x6
    f314:	str	x5, [x29, #208]
    f318:	ldr	x0, [x5, x0]
    f31c:	mul	w27, w27, w3
    f320:	str	w27, [x19, #8]
    f324:	cmp	x0, x4
    f328:	b.lt	103bc <mpfr_div@@Base+0x16cc>  // b.tstop
    f32c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    f330:	ldr	x3, [x0, #2512]
    f334:	add	x0, x0, #0x9d0
    f338:	blr	x3
    f33c:	ldr	x3, [x29, #208]
    f340:	ldr	x0, [x3, x0]
    f344:	cmp	x4, x0
    f348:	b.lt	10a14 <mpfr_div@@Base+0x1d24>  // b.tstop
    f34c:	orr	x1, x1, x2
    f350:	str	x4, [x19, #16]
    f354:	cmp	x1, #0x0
    f358:	ccmp	w20, #0x5, #0x4, ne  // ne = any
    f35c:	b.ne	fc38 <mpfr_div@@Base+0xf48>  // b.any
    f360:	mov	w27, #0x0                   	// #0
    f364:	b	f08c <mpfr_div@@Base+0x39c>
    f368:	mrs	x2, tpidr_el0
    f36c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    f370:	ldr	x1, [x0, #2512]
    f374:	add	x0, x0, #0x9d0
    f378:	blr	x1
    f37c:	str	x2, [x29, #208]
    f380:	sub	x1, x4, #0x3f
    f384:	ldr	x0, [x2, x0]
    f388:	cmp	x1, x0
    f38c:	b.le	eda0 <mpfr_div@@Base+0xb0>
    f390:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    f394:	ldr	x3, [x0, #2544]
    f398:	add	x0, x0, #0x9f0
    f39c:	blr	x3
    f3a0:	ldr	x0, [x2, x0]
    f3a4:	cmp	x1, x0
    f3a8:	b.gt	eda0 <mpfr_div@@Base+0xb0>
    f3ac:	ldr	w0, [x6, #8]
    f3b0:	ldr	x2, [x22]
    f3b4:	cmp	w0, #0x0
    f3b8:	b.le	ffd0 <mpfr_div@@Base+0x12e0>
    f3bc:	mov	x1, x25
    f3c0:	mov	w3, w20
    f3c4:	mov	x0, x19
    f3c8:	bl	cc60 <mpfr_div_ui@plt>
    f3cc:	mov	w27, w0
    f3d0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    f3d4:	ldr	x2, [x0, #2544]
    f3d8:	add	x0, x0, #0x9f0
    f3dc:	blr	x2
    f3e0:	ldr	x2, [x29, #208]
    f3e4:	ldr	x1, [x19, #16]
    f3e8:	ldr	x2, [x2, x0]
    f3ec:	sub	x28, x1, x28
    f3f0:	str	x28, [x19, #16]
    f3f4:	sub	x0, x2, #0x3f
    f3f8:	cmp	x28, x0
    f3fc:	b.ge	109fc <mpfr_div@@Base+0x1d0c>  // b.tcont
    f400:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    f404:	ldr	x1, [x0, #2512]
    f408:	add	x0, x0, #0x9d0
    f40c:	blr	x1
    f410:	add	x28, x28, #0x40
    f414:	ldr	x1, [x29, #208]
    f418:	str	x28, [x19, #16]
    f41c:	ldr	x0, [x1, x0]
    f420:	cmp	x28, x0
    f424:	ccmp	x2, x28, #0x1, ge  // ge = tcont
    f428:	b.ge	f064 <mpfr_div@@Base+0x374>  // b.tcont
    f42c:	mov	w1, w27
    f430:	mov	w2, w20
    f434:	mov	x0, x19
    f438:	bl	cb30 <mpfr_check_range@plt>
    f43c:	mov	w27, w0
    f440:	b	f08c <mpfr_div@@Base+0x39c>
    f444:	sub	x24, x2, #0x8
    f448:	mov	w3, #0x1                   	// #1
    f44c:	ldr	x2, [x29, #176]
    f450:	ldr	x1, [x29, #200]
    f454:	bl	bce0 <__gmpn_rshift@plt>
    f458:	str	x0, [x25, x24]
    f45c:	str	xzr, [x29, #160]
    f460:	b	eec4 <mpfr_div@@Base+0x1d4>
    f464:	sub	x2, x0, x4
    f468:	mov	x1, x24
    f46c:	ldr	x0, [x29, #168]
    f470:	add	x0, x0, x2
    f474:	str	x0, [x29, #168]
    f478:	mov	x0, x24
    f47c:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
    f480:	ldr	x6, [x29, #160]
    f484:	b	f144 <mpfr_div@@Base+0x454>
    f488:	sub	x2, x0, x21
    f48c:	mov	x27, x21
    f490:	ldr	x0, [x29, #144]
    f494:	add	x0, x0, x2
    f498:	str	x0, [x29, #144]
    f49c:	ldr	x0, [x29, #184]
    f4a0:	mov	x1, x0
    f4a4:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
    f4a8:	ldr	x6, [x29, #160]
    f4ac:	b	f120 <mpfr_div@@Base+0x430>
    f4b0:	cmp	x2, #0x0
    f4b4:	and	w0, w27, #0x1
    f4b8:	csinc	w0, w0, wzr, ne  // ne = any
    f4bc:	cbnz	w0, fbbc <mpfr_div@@Base+0xecc>
    f4c0:	ldrb	w0, [x29, #184]
    f4c4:	mov	x1, #0x1                   	// #1
    f4c8:	lsl	x3, x1, x0
    f4cc:	ldr	x0, [x29, #192]
    f4d0:	ldr	x1, [x0]
    f4d4:	b	efb4 <mpfr_div@@Base+0x2c4>
    f4d8:	orr	x0, x5, x24
    f4dc:	cbz	w27, ef90 <mpfr_div@@Base+0x2a0>
    f4e0:	cmp	x0, #0x0
    f4e4:	csetm	w27, ne  // ne = any
    f4e8:	b	f010 <mpfr_div@@Base+0x320>
    f4ec:	lsl	x1, x26, #3
    f4f0:	cmp	x1, #0x4, lsl #12
    f4f4:	b.hi	10008 <mpfr_div@@Base+0x1318>  // b.pmore
    f4f8:	add	x1, x1, #0xf
    f4fc:	and	x1, x1, #0xfffffffffffffff0
    f500:	sub	sp, sp, x1
    f504:	mov	x4, sp
    f508:	cmp	x4, x22
    f50c:	b.eq	eedc <mpfr_div@@Base+0x1ec>  // b.none
    f510:	ldr	x2, [x29, #120]
    f514:	mov	x0, x4
    f518:	mov	x1, x22
    f51c:	bl	ba10 <memcpy@plt>
    f520:	mov	x4, x0
    f524:	b	eedc <mpfr_div@@Base+0x1ec>
    f528:	mov	x0, #0x2                   	// #2
    f52c:	movk	x0, #0x8000, lsl #48
    f530:	cmp	x4, x0
    f534:	b.eq	f5b4 <mpfr_div@@Base+0x8c4>  // b.none
    f538:	ldr	x1, [x2, #16]
    f53c:	mov	x3, #0x2                   	// #2
    f540:	movk	x3, #0x8000, lsl #48
    f544:	cmp	x1, x3
    f548:	b.eq	f5b4 <mpfr_div@@Base+0x8c4>  // b.none
    f54c:	ldr	w0, [x6, #8]
    f550:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    f554:	ldr	w5, [x25, #8]
    f558:	cmp	x4, x2
    f55c:	mul	w0, w0, w5
    f560:	str	w0, [x19, #8]
    f564:	b.eq	fc90 <mpfr_div@@Base+0xfa0>  // b.none
    f568:	cmp	x1, x2
    f56c:	b.eq	fbf0 <mpfr_div@@Base+0xf00>  // b.none
    f570:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    f574:	cmp	x1, x0
    f578:	b.ne	fbf0 <mpfr_div@@Base+0xf00>  // b.any
    f57c:	mrs	x5, tpidr_el0
    f580:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    f584:	ldr	x6, [x0, #2576]
    f588:	add	x0, x0, #0xa10
    f58c:	blr	x6
    f590:	cmp	x4, x1
    f594:	add	x4, x5, x0
    f598:	ldr	w0, [x5, x0]
    f59c:	b.eq	10158 <mpfr_div@@Base+0x1468>  // b.none
    f5a0:	orr	w0, w0, #0x20
    f5a4:	mov	w27, #0x0                   	// #0
    f5a8:	str	w0, [x4]
    f5ac:	str	x2, [x19, #16]
    f5b0:	b	f08c <mpfr_div@@Base+0x39c>
    f5b4:	mrs	x1, tpidr_el0
    f5b8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    f5bc:	ldr	x2, [x0, #2576]
    f5c0:	add	x0, x0, #0xa10
    f5c4:	blr	x2
    f5c8:	add	x0, x1, x0
    f5cc:	mov	x1, #0x2                   	// #2
    f5d0:	movk	x1, #0x8000, lsl #48
    f5d4:	str	x1, [x19, #16]
    f5d8:	mov	w27, #0x0                   	// #0
    f5dc:	ldr	w1, [x0]
    f5e0:	orr	w1, w1, #0x4
    f5e4:	str	w1, [x0]
    f5e8:	b	f08c <mpfr_div@@Base+0x39c>
    f5ec:	ldr	x0, [x29, #128]
    f5f0:	ldr	x3, [x29, #200]
    f5f4:	b	f610 <mpfr_div@@Base+0x920>
    f5f8:	sub	x26, x26, #0x1
    f5fc:	sub	x0, x0, #0x1
    f600:	ldr	x1, [x3, x26, lsl #3]
    f604:	ldr	x2, [x22, x0, lsl #3]
    f608:	cmp	x1, x2
    f60c:	b.ne	fc24 <mpfr_div@@Base+0xf34>  // b.any
    f610:	cmp	x26, #0x0
    f614:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    f618:	b.ne	f5f8 <mpfr_div@@Base+0x908>  // b.any
    f61c:	ldr	x1, [x29, #200]
    f620:	ldr	x2, [x22, x0, lsl #3]
    f624:	ldr	x1, [x1, x26, lsl #3]
    f628:	cmp	x1, x2
    f62c:	b.ne	fc24 <mpfr_div@@Base+0xf34>  // b.any
    f630:	cbz	x0, 10080 <mpfr_div@@Base+0x1390>
    f634:	sub	x0, x0, #0x1
    f638:	ldr	x1, [x22, x0, lsl #3]
    f63c:	cbz	x1, f630 <mpfr_div@@Base+0x940>
    f640:	mov	x1, #0x0                   	// #0
    f644:	str	wzr, [x29, #152]
    f648:	b	edfc <mpfr_div@@Base+0x10c>
    f64c:	ldr	x0, [x29, #136]
    f650:	add	x25, x0, #0x2
    f654:	lsl	x26, x25, #4
    f658:	cmp	x26, #0x4, lsl #12
    f65c:	b.hi	1048c <mpfr_div@@Base+0x179c>  // b.pmore
    f660:	sub	sp, sp, x26
    f664:	mov	x21, sp
    f668:	ldr	x0, [x29, #176]
    f66c:	lsl	x1, x25, #1
    f670:	str	x1, [x29, #160]
    f674:	cmp	x0, x25, lsl #1
    f678:	b.ge	fbcc <mpfr_div@@Base+0xedc>  // b.tcont
    f67c:	ldr	x0, [x29, #160]
    f680:	ldr	x1, [x29, #176]
    f684:	sub	x26, x0, x1
    f688:	ldr	x1, [x29, #200]
    f68c:	add	x0, x21, x26, lsl #3
    f690:	cmp	x0, x1
    f694:	b.eq	f6a0 <mpfr_div@@Base+0x9b0>  // b.none
    f698:	mov	x2, x24
    f69c:	bl	ba10 <memcpy@plt>
    f6a0:	lsl	x2, x26, #3
    f6a4:	mov	x0, x21
    f6a8:	mov	w1, #0x0                   	// #0
    f6ac:	bl	c110 <memset@plt>
    f6b0:	lsl	x0, x25, #3
    f6b4:	str	x0, [x29, #144]
    f6b8:	cmp	x23, x25
    f6bc:	b.lt	fde4 <mpfr_div@@Base+0x10f4>  // b.tstop
    f6c0:	sub	x3, x23, x25
    f6c4:	add	x3, x22, x3, lsl #3
    f6c8:	lsl	x0, x25, #3
    f6cc:	cmp	x0, #0x4, lsl #12
    f6d0:	b.hi	104a0 <mpfr_div@@Base+0x17b0>  // b.pmore
    f6d4:	add	x0, x0, #0xf
    f6d8:	and	x0, x0, #0xfffffffffffffff0
    f6dc:	sub	sp, sp, x0
    f6e0:	mov	x26, sp
    f6e4:	mov	x1, x21
    f6e8:	mov	x2, x3
    f6ec:	mov	x0, x26
    f6f0:	mov	x3, x25
    f6f4:	bl	c140 <mpfr_divhigh_n@plt>
    f6f8:	cmp	x0, #0x1
    f6fc:	ldr	x1, [x29, #160]
    f700:	add	x21, x1, #0x1
    f704:	mov	w1, #0x40                  	// #64
    f708:	clz	x21, x21
    f70c:	sub	w1, w1, w21
    f710:	lsl	x21, x25, #6
    f714:	sub	x21, x21, w1, sxtw
    f718:	b.eq	10054 <mpfr_div@@Base+0x1364>  // b.none
    f71c:	cmp	w20, #0x0
    f720:	mov	x2, x21
    f724:	ldr	x3, [x19]
    f728:	mov	x1, x25
    f72c:	mov	x0, x26
    f730:	cinc	x3, x3, eq  // eq = none
    f734:	bl	c370 <mpfr_round_p@plt>
    f738:	cbz	w0, ee44 <mpfr_div@@Base+0x154>
    f73c:	ldr	x0, [x29, #192]
    f740:	add	x1, x26, #0x8
    f744:	cmp	x1, x0
    f748:	b.eq	f758 <mpfr_div@@Base+0xa68>  // b.none
    f74c:	ldr	x2, [x29, #216]
    f750:	lsl	x2, x2, #3
    f754:	bl	ba10 <memcpy@plt>
    f758:	ldr	x4, [x29, #192]
    f75c:	mov	x1, #0x1                   	// #1
    f760:	ldr	w5, [x29, #184]
    f764:	ldr	x0, [x4]
    f768:	lsl	x3, x1, x5
    f76c:	neg	x2, x3
    f770:	and	x1, x2, x0
    f774:	str	x1, [x4]
    f778:	cbnz	w20, fe44 <mpfr_div@@Base+0x1154>
    f77c:	cbz	w5, 10018 <mpfr_div@@Base+0x1328>
    f780:	ldr	x0, [x26, #8]
    f784:	sub	w2, w5, #0x1
    f788:	lsr	x0, x0, x2
    f78c:	and	x0, x0, #0x1
    f790:	mov	w27, #0xffffffff            	// #-1
    f794:	cbz	x0, f010 <mpfr_div@@Base+0x320>
    f798:	b	efb4 <mpfr_div@@Base+0x2c4>
    f79c:	cbnz	w20, f7c4 <mpfr_div@@Base+0xad4>
    f7a0:	sub	x0, x0, #0x1
    f7a4:	cmp	x0, x28
    f7a8:	b.gt	10984 <mpfr_div@@Base+0x1c94>
    f7ac:	cmn	w27, #0x1
    f7b0:	b.eq	f7c4 <mpfr_div@@Base+0xad4>  // b.none
    f7b4:	mov	x0, x19
    f7b8:	bl	bf00 <mpfr_powerof2_raw@plt>
    f7bc:	cmp	w0, #0x0
    f7c0:	cset	w20, ne  // ne = any
    f7c4:	ldr	w2, [x29, #168]
    f7c8:	mov	w1, w20
    f7cc:	mov	x0, x19
    f7d0:	bl	c3c0 <mpfr_underflow@plt>
    f7d4:	mov	w27, w0
    f7d8:	b	f08c <mpfr_div@@Base+0x39c>
    f7dc:	bl	c410 <mpfr_tmp_free@plt>
    f7e0:	b	f018 <mpfr_div@@Base+0x328>
    f7e4:	ldr	x0, [x29, #136]
    f7e8:	add	x26, x0, #0x2
    f7ec:	lsl	x1, x26, #3
    f7f0:	cmp	x1, #0x4, lsl #12
    f7f4:	b.hi	10500 <mpfr_div@@Base+0x1810>  // b.pmore
    f7f8:	add	x1, x1, #0xf
    f7fc:	and	x1, x1, #0xfffffffffffffff0
    f800:	sub	sp, sp, x1
    f804:	mov	x21, sp
    f808:	b	ee58 <mpfr_div@@Base+0x168>
    f80c:	ldr	x0, [x29, #144]
    f810:	sub	x2, x26, x23
    f814:	mov	x5, x23
    f818:	mov	x4, x22
    f81c:	sub	x3, x0, x2
    f820:	mov	x24, #0x0                   	// #0
    f824:	add	x2, x25, x2, lsl #3
    f828:	b	eefc <mpfr_div@@Base+0x20c>
    f82c:	mov	x1, x2
    f830:	add	x0, x29, #0x100
    f834:	str	x2, [x29, #160]
    f838:	bl	bdc0 <mpfr_tmp_allocate@plt>
    f83c:	mov	x25, x0
    f840:	ldr	x2, [x29, #160]
    f844:	b	ee74 <mpfr_div@@Base+0x184>
    f848:	ldr	x0, [x29, #176]
    f84c:	lsl	x1, x26, #1
    f850:	sub	x24, x0, x1
    f854:	ldr	x0, [x29, #200]
    f858:	add	x1, x0, x24, lsl #3
    f85c:	ldr	w0, [x29, #152]
    f860:	cbnz	w0, fc08 <mpfr_div@@Base+0xf18>
    f864:	cmp	x25, x1
    f868:	b.eq	fc1c <mpfr_div@@Base+0xf2c>  // b.none
    f86c:	mov	x0, x25
    f870:	bl	ba10 <memcpy@plt>
    f874:	ldr	x1, [x29, #200]
    f878:	cbz	x24, 105e8 <mpfr_div@@Base+0x18f8>
    f87c:	sub	x24, x24, #0x1
    f880:	ldr	x0, [x1, x24, lsl #3]
    f884:	cbz	x0, f878 <mpfr_div@@Base+0xb88>
    f888:	mov	x0, #0x1                   	// #1
    f88c:	str	x0, [x29, #160]
    f890:	b	eec4 <mpfr_div@@Base+0x1d4>
    f894:	cbz	x2, fc00 <mpfr_div@@Base+0xf10>
    f898:	cbnz	w20, fe50 <mpfr_div@@Base+0x1160>
    f89c:	sub	w3, w3, #0x1
    f8a0:	mov	x5, #0x1                   	// #1
    f8a4:	lsl	x3, x5, x3
    f8a8:	and	x24, x3, x8
    f8ac:	bic	x5, x8, x3
    f8b0:	cmp	x5, #0x1
    f8b4:	b.hi	f4d8 <mpfr_div@@Base+0x7e8>  // b.pmore
    f8b8:	ldr	x1, [x29, #120]
    f8bc:	cmp	x1, #0x4, lsl #12
    f8c0:	b.hi	1069c <mpfr_div@@Base+0x19ac>  // b.pmore
    f8c4:	add	x1, x1, #0xf
    f8c8:	and	x1, x1, #0xfffffffffffffff0
    f8cc:	sub	sp, sp, x1
    f8d0:	mov	x6, sp
    f8d4:	str	x0, [x21]
    f8d8:	sub	x23, x23, x26
    f8dc:	stp	x8, x5, [x29, #96]
    f8e0:	cmp	x26, x23
    f8e4:	str	x9, [x29, #112]
    f8e8:	b.lt	1008c <mpfr_div@@Base+0x139c>  // b.tstop
    f8ec:	mov	x0, x6
    f8f0:	mov	x4, x23
    f8f4:	mov	x3, x22
    f8f8:	mov	x2, x26
    f8fc:	mov	x1, x21
    f900:	str	x6, [x29, #120]
    f904:	bl	c7a0 <__gmpn_mul@plt>
    f908:	ldp	x8, x5, [x29, #96]
    f90c:	ldp	x9, x6, [x29, #112]
    f910:	cbnz	x9, 100b4 <mpfr_div@@Base+0x13c4>
    f914:	ldr	x0, [x21]
    f918:	eor	x8, x0, x8
    f91c:	str	x8, [x21]
    f920:	sub	x0, x26, #0x1
    f924:	add	x10, x6, x23, lsl #3
    f928:	ldr	x1, [x10, x0, lsl #3]
    f92c:	ldr	x2, [x25, x0, lsl #3]
    f930:	sub	x0, x0, #0x1
    f934:	cmp	x2, x1
    f938:	b.ne	10510 <mpfr_div@@Base+0x1820>  // b.any
    f93c:	cmn	x0, #0x1
    f940:	b.ne	f928 <mpfr_div@@Base+0xc38>  // b.any
    f944:	ldr	x0, [x29, #144]
    f948:	ldr	x1, [x29, #176]
    f94c:	cmp	x0, x1
    f950:	b.gt	105f0 <mpfr_div@@Base+0x1900>
    f954:	sub	x0, x1, x0
    f958:	cmp	x0, x23
    f95c:	b.gt	10778 <mpfr_div@@Base+0x1a88>
    f960:	sub	x1, x23, x0
    f964:	cmp	x1, #0x0
    f968:	cset	w11, gt
    f96c:	cbz	x0, 1085c <mpfr_div@@Base+0x1b6c>
    f970:	ldr	x12, [x29, #200]
    f974:	add	x4, x6, x1, lsl #3
    f978:	ldr	w7, [x29, #152]
    f97c:	add	x8, x12, #0x8
    f980:	b	f990 <mpfr_div@@Base+0xca0>
    f984:	cmp	x0, #0x0
    f988:	ccmp	x3, x2, #0x0, gt
    f98c:	b.ne	10960 <mpfr_div@@Base+0x1c70>  // b.any
    f990:	sub	x0, x0, #0x1
    f994:	ldr	x2, [x12, x0, lsl #3]
    f998:	cbz	w7, f9a4 <mpfr_div@@Base+0xcb4>
    f99c:	ldr	x3, [x8, x0, lsl #3]
    f9a0:	extr	x2, x3, x2, #1
    f9a4:	ldr	x3, [x4, x0, lsl #3]
    f9a8:	cmp	x3, x2
    f9ac:	b.ls	f984 <mpfr_div@@Base+0xc94>  // b.plast
    f9b0:	ldr	x0, [x29, #160]
    f9b4:	cbz	x0, fa60 <mpfr_div@@Base+0xd70>
    f9b8:	ldr	x1, [x29, #144]
    f9bc:	ldr	x0, [x29, #176]
    f9c0:	sub	x2, x0, x1
    f9c4:	cmp	x23, x2
    f9c8:	b.ge	10634 <mpfr_div@@Base+0x1944>  // b.tcont
    f9cc:	ldr	w1, [x29, #152]
    f9d0:	sub	x0, x2, x23
    f9d4:	cbnz	w1, 107d0 <mpfr_div@@Base+0x1ae0>
    f9d8:	ldr	x3, [x29, #200]
    f9dc:	lsl	x2, x0, #3
    f9e0:	cbz	x0, 10974 <mpfr_div@@Base+0x1c84>
    f9e4:	sub	x0, x0, #0x1
    f9e8:	ldr	x1, [x3, x0, lsl #3]
    f9ec:	cbz	x1, f9e0 <mpfr_div@@Base+0xcf0>
    f9f0:	ldr	x0, [x29, #200]
    f9f4:	add	x1, x0, x2
    f9f8:	ldr	w4, [x29, #152]
    f9fc:	mov	x0, x6
    fa00:	ldr	x3, [x29, #160]
    fa04:	mov	x2, x23
    fa08:	str	x5, [x29, #144]
    fa0c:	str	x9, [x29, #176]
    fa10:	str	x6, [x29, #200]
    fa14:	bl	17cf0 <mpfr_div_2ui@@Base+0x3f8>
    fa18:	ldr	x5, [x29, #144]
    fa1c:	mov	x1, x0
    fa20:	ldr	x9, [x29, #176]
    fa24:	ldr	x6, [x29, #200]
    fa28:	mov	x0, #0x1                   	// #1
    fa2c:	ldr	x2, [x10]
    fa30:	sub	x3, x2, x1
    fa34:	str	x3, [x10]
    fa38:	cmp	x1, x2
    fa3c:	b.hi	fa58 <mpfr_div@@Base+0xd68>  // b.pmore
    fa40:	b	fa60 <mpfr_div@@Base+0xd70>
    fa44:	ldr	x1, [x10, x0, lsl #3]
    fa48:	sub	x2, x1, #0x1
    fa4c:	str	x2, [x10, x0, lsl #3]
    fa50:	add	x0, x0, #0x1
    fa54:	cbnz	x1, fa60 <mpfr_div@@Base+0xd70>
    fa58:	cmp	x26, x0
    fa5c:	b.ne	fa44 <mpfr_div@@Base+0xd54>  // b.any
    fa60:	mov	x3, x26
    fa64:	mov	x2, x25
    fa68:	mov	x1, x10
    fa6c:	mov	x0, x10
    fa70:	str	x6, [x29, #152]
    fa74:	str	x5, [x29, #176]
    fa78:	str	x9, [x29, #200]
    fa7c:	bl	be60 <__gmpn_sub_n@plt>
    fa80:	ldr	x0, [x29, #128]
    fa84:	ldr	x6, [x29, #152]
    fa88:	ldr	x5, [x29, #176]
    fa8c:	ldr	x9, [x29, #200]
    fa90:	ldr	x2, [x6, x0, lsl #3]
    fa94:	ldr	x1, [x22, x0, lsl #3]
    fa98:	sub	x0, x0, #0x1
    fa9c:	cmp	x2, x1
    faa0:	b.ne	1055c <mpfr_div@@Base+0x186c>  // b.any
    faa4:	cmn	x0, #0x1
    faa8:	b.ne	fa90 <mpfr_div@@Base+0xda0>  // b.any
    faac:	ldr	x0, [x29, #160]
    fab0:	cbnz	x0, 100e8 <mpfr_div@@Base+0x13f8>
    fab4:	cmp	x5, #0x1
    fab8:	b.eq	1083c <mpfr_div@@Base+0x1b4c>  // b.none
    fabc:	cbnz	x24, fc00 <mpfr_div@@Base+0xf10>
    fac0:	ldr	w0, [x29, #184]
    fac4:	cbnz	w0, 1056c <mpfr_div@@Base+0x187c>
    fac8:	mov	w27, #0x1                   	// #1
    facc:	cbz	w20, fb20 <mpfr_div@@Base+0xe30>
    fad0:	ldr	x0, [x29, #192]
    fad4:	mov	w27, #0x0                   	// #0
    fad8:	mov	x1, #0x1                   	// #1
    fadc:	ldr	x0, [x0]
    fae0:	sub	x2, x0, x1
    fae4:	ldr	x3, [x29, #192]
    fae8:	cmp	x1, x0
    faec:	str	x2, [x3]
    faf0:	b.ls	fb20 <mpfr_div@@Base+0xe30>  // b.plast
    faf4:	ldr	x1, [x29, #136]
    faf8:	mov	x0, x3
    fafc:	add	x3, x3, x1, lsl #3
    fb00:	b	fb14 <mpfr_div@@Base+0xe24>
    fb04:	ldr	x1, [x0, #8]
    fb08:	sub	x2, x1, #0x1
    fb0c:	str	x2, [x0, #8]!
    fb10:	cbnz	x1, fb20 <mpfr_div@@Base+0xe30>
    fb14:	cmp	x3, x0
    fb18:	b.ne	fb04 <mpfr_div@@Base+0xe14>  // b.any
    fb1c:	sub	x9, x9, #0x1
    fb20:	cbz	x9, f010 <mpfr_div@@Base+0x320>
    fb24:	ldr	x1, [x29, #192]
    fb28:	ldr	x0, [x29, #216]
    fb2c:	add	x0, x1, x0, lsl #3
    fb30:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
    fb34:	cmp	x28, x1
    fb38:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    fb3c:	cinc	x28, x28, ne  // ne = any
    fb40:	stur	x1, [x0, #-8]
    fb44:	b	f010 <mpfr_div@@Base+0x320>
    fb48:	ldr	x0, [x29, #192]
    fb4c:	add	x1, x21, #0x8
    fb50:	cmp	x1, x0
    fb54:	b.eq	fb6c <mpfr_div@@Base+0xe7c>  // b.none
    fb58:	ldr	x2, [x29, #216]
    fb5c:	stp	x4, x9, [x29, #104]
    fb60:	lsl	x2, x2, #3
    fb64:	bl	ba10 <memcpy@plt>
    fb68:	ldp	x4, x9, [x29, #104]
    fb6c:	mov	x1, #0x0                   	// #0
    fb70:	ldr	x0, [x21]
    fb74:	mov	w3, #0x40                  	// #64
    fb78:	mov	x8, x0
    fb7c:	b	ef50 <mpfr_div@@Base+0x260>
    fb80:	sub	x2, x4, x0
    fb84:	mov	x1, x24
    fb88:	ldr	x0, [x29, #168]
    fb8c:	sub	x0, x0, x2
    fb90:	stp	x6, x0, [x29, #160]
    fb94:	mov	x0, x24
    fb98:	bl	c200 <__gmpz_mul_2exp@plt>
    fb9c:	ldr	x6, [x29, #160]
    fba0:	b	f144 <mpfr_div@@Base+0x454>
    fba4:	ldr	w2, [x29, #184]
    fba8:	lsr	x0, x1, x2
    fbac:	tbz	w0, #0, f010 <mpfr_div@@Base+0x320>
    fbb0:	mov	x3, #0x1                   	// #1
    fbb4:	lsl	x3, x3, x2
    fbb8:	b	efb4 <mpfr_div@@Base+0x2c4>
    fbbc:	and	x5, x5, #0xff
    fbc0:	mov	x24, #0x0                   	// #0
    fbc4:	mov	x0, x5
    fbc8:	b	ef88 <mpfr_div@@Base+0x298>
    fbcc:	sub	x1, x0, x1
    fbd0:	ldr	x0, [x29, #200]
    fbd4:	add	x1, x0, x1, lsl #3
    fbd8:	cmp	x1, x21
    fbdc:	b.eq	f6b0 <mpfr_div@@Base+0x9c0>  // b.none
    fbe0:	mov	x2, x26
    fbe4:	mov	x0, x21
    fbe8:	bl	ba10 <memcpy@plt>
    fbec:	b	f6b0 <mpfr_div@@Base+0x9c0>
    fbf0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    fbf4:	mov	w27, #0x0                   	// #0
    fbf8:	str	x0, [x19, #16]
    fbfc:	b	f08c <mpfr_div@@Base+0x39c>
    fc00:	mov	w27, #0x0                   	// #0
    fc04:	b	f010 <mpfr_div@@Base+0x320>
    fc08:	lsl	x2, x26, #1
    fc0c:	mov	x0, x25
    fc10:	mov	w3, #0x1                   	// #1
    fc14:	bl	bce0 <__gmpn_rshift@plt>
    fc18:	cbnz	x0, f888 <mpfr_div@@Base+0xb98>
    fc1c:	ldr	x1, [x29, #200]
    fc20:	b	f878 <mpfr_div@@Base+0xb88>
    fc24:	cmp	x2, x1
    fc28:	cset	w0, cc  // cc = lo, ul, last
    fc2c:	cset	x1, cc  // cc = lo, ul, last
    fc30:	str	w0, [x29, #152]
    fc34:	b	edfc <mpfr_div@@Base+0x10c>
    fc38:	cbnz	w20, 104bc <mpfr_div@@Base+0x17cc>
    fc3c:	cbz	x2, 104d0 <mpfr_div@@Base+0x17e0>
    fc40:	ldr	x0, [x29, #192]
    fc44:	ldr	x0, [x0]
    fc48:	adds	x0, x0, #0x1
    fc4c:	b.ne	10850 <mpfr_div@@Base+0x1b60>  // b.any
    fc50:	ldr	x1, [x29, #192]
    fc54:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    fc58:	str	x0, [x1]
    fc5c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    fc60:	ldr	x1, [x0, #2544]
    fc64:	add	x0, x0, #0x9f0
    fc68:	blr	x1
    fc6c:	ldr	x1, [x29, #208]
    fc70:	ldr	x0, [x1, x0]
    fc74:	cmp	x4, x0
    fc78:	b.ge	103bc <mpfr_div@@Base+0x16cc>  // b.tcont
    fc7c:	add	x4, x4, #0x1
    fc80:	str	x4, [x19, #16]
    fc84:	b	f064 <mpfr_div@@Base+0x374>
    fc88:	mov	w27, #0x1                   	// #1
    fc8c:	b	f010 <mpfr_div@@Base+0x320>
    fc90:	cmp	x1, x4
    fc94:	b.eq	10024 <mpfr_div@@Base+0x1334>  // b.none
    fc98:	mov	w27, #0x0                   	// #0
    fc9c:	str	x4, [x19, #16]
    fca0:	b	f08c <mpfr_div@@Base+0x39c>
    fca4:	ldr	x3, [x29, #208]
    fca8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    fcac:	ldr	x1, [x0, #2576]
    fcb0:	add	x0, x0, #0xa10
    fcb4:	blr	x1
    fcb8:	mov	x11, #0xc000000000000001    	// #-4611686018427387903
    fcbc:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    fcc0:	add	x12, x3, x0
    fcc4:	mov	w2, w20
    fcc8:	ldr	w4, [x3, x0]
    fccc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    fcd0:	ldr	x1, [x0, #2512]
    fcd4:	add	x0, x0, #0x9d0
    fcd8:	blr	x1
    fcdc:	add	x10, x3, x0
    fce0:	stp	x6, x12, [x29, #96]
    fce4:	ldr	x8, [x3, x0]
    fce8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    fcec:	ldr	x1, [x0, #2544]
    fcf0:	add	x0, x0, #0x9f0
    fcf4:	blr	x1
    fcf8:	ldr	x7, [x3, x0]
    fcfc:	add	x21, x3, x0
    fd00:	mov	x1, x28
    fd04:	mov	x0, x19
    fd08:	str	x11, [x10]
    fd0c:	str	x9, [x21]
    fd10:	str	w4, [x29, #112]
    fd14:	str	x8, [x29, #120]
    fd18:	stp	x10, x7, [x29, #152]
    fd1c:	bl	c240 <mpfr_set_z@plt>
    fd20:	mov	x13, #0x4                   	// #4
    fd24:	ldp	x3, x10, [x29, #144]
    fd28:	movk	x13, #0x8000, lsl #48
    fd2c:	ldp	x7, x1, [x29, #160]
    fd30:	mov	x11, #0xc000000000000001    	// #-4611686018427387903
    fd34:	ldp	x6, x12, [x29, #96]
    fd38:	mov	w27, w0
    fd3c:	ldr	x2, [x19, #16]
    fd40:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    fd44:	ldr	x8, [x29, #120]
    fd48:	cmp	x2, x13
    fd4c:	ccmp	x2, x11, #0x4, ge  // ge = tcont
    fd50:	ldr	w4, [x29, #112]
    fd54:	sub	x1, x1, x3
    fd58:	cset	w0, eq  // eq = none
    fd5c:	add	x1, x1, x2
    fd60:	cmp	x2, x9
    fd64:	str	x7, [x21]
    fd68:	csinc	w21, w0, wzr, ne  // ne = any
    fd6c:	str	x8, [x10]
    fd70:	cmp	x8, x1
    fd74:	str	w4, [x12]
    fd78:	ccmp	x7, x1, #0x1, le
    fd7c:	str	x1, [x19, #16]
    fd80:	b.ge	fdd4 <mpfr_div@@Base+0x10e4>  // b.tcont
    fd84:	mov	w1, w27
    fd88:	mov	w2, w20
    fd8c:	mov	x0, x19
    fd90:	str	x6, [x29, #168]
    fd94:	bl	cb30 <mpfr_check_range@plt>
    fd98:	mov	w27, w0
    fd9c:	ldr	x6, [x29, #168]
    fda0:	mov	x0, x28
    fda4:	str	x6, [x29, #168]
    fda8:	bl	c170 <mpfr_mpz_clear@plt>
    fdac:	mov	x0, x24
    fdb0:	bl	c170 <mpfr_mpz_clear@plt>
    fdb4:	ldr	x0, [x29, #184]
    fdb8:	bl	c170 <mpfr_mpz_clear@plt>
    fdbc:	ldr	x6, [x29, #168]
    fdc0:	cbz	w21, f08c <mpfr_div@@Base+0x39c>
    fdc4:	ldr	x21, [x19]
    fdc8:	ldr	x28, [x6, #16]
    fdcc:	ldr	x4, [x25, #16]
    fdd0:	b	edac <mpfr_div@@Base+0xbc>
    fdd4:	cbz	w27, fda0 <mpfr_div@@Base+0x10b0>
    fdd8:	orr	w4, w4, #0x8
    fddc:	str	w4, [x12]
    fde0:	b	fda0 <mpfr_div@@Base+0x10b0>
    fde4:	lsl	x0, x25, #3
    fde8:	cmp	x0, #0x4, lsl #12
    fdec:	b.hi	105bc <mpfr_div@@Base+0x18cc>  // b.pmore
    fdf0:	add	x0, x0, #0xf
    fdf4:	and	x0, x0, #0xfffffffffffffff0
    fdf8:	sub	sp, sp, x0
    fdfc:	mov	x3, sp
    fe00:	sub	x26, x25, x23
    fe04:	add	x0, x3, x26, lsl #3
    fe08:	cmp	x0, x22
    fe0c:	b.eq	fe24 <mpfr_div@@Base+0x1134>  // b.none
    fe10:	ldr	x2, [x29, #120]
    fe14:	mov	x1, x22
    fe18:	str	x3, [x29, #144]
    fe1c:	bl	ba10 <memcpy@plt>
    fe20:	ldr	x3, [x29, #144]
    fe24:	mov	x0, x3
    fe28:	lsl	x2, x26, #3
    fe2c:	mov	w1, #0x0                   	// #0
    fe30:	bl	c110 <memset@plt>
    fe34:	mov	x3, x0
    fe38:	b	f6c8 <mpfr_div@@Base+0x9d8>
    fe3c:	cbz	x0, ef2c <mpfr_div@@Base+0x23c>
    fe40:	b	ef18 <mpfr_div@@Base+0x228>
    fe44:	cbz	w27, efb4 <mpfr_div@@Base+0x2c4>
    fe48:	mov	w27, #0xffffffff            	// #-1
    fe4c:	b	f010 <mpfr_div@@Base+0x320>
    fe50:	mov	x5, x8
    fe54:	mov	x24, #0x0                   	// #0
    fe58:	b	f8b0 <mpfr_div@@Base+0xbc0>
    fe5c:	ldr	x9, [x22]
    fe60:	adrp	x7, 5b000 <mpfr_free_pool@@Base+0x1ca8>
    fe64:	add	x7, x7, #0xcd0
    fe68:	mov	x0, #0x1000000000000000    	// #1152921504606846976
    fe6c:	add	x12, x7, #0x800
    fe70:	sub	x2, x9, #0x1
    fe74:	lsr	x10, x9, #55
    fe78:	lsr	x11, x9, #24
    fe7c:	sub	x10, x10, #0x100
    fe80:	lsr	x13, x2, #1
    fe84:	ldr	x8, [x1]
    fe88:	sbfx	x1, x9, #0, #1
    fe8c:	ldr	x2, [x12, x10, lsl #3]
    fe90:	cmp	x8, x9
    fe94:	ldr	x7, [x7, x10, lsl #3]
    fe98:	sub	x14, x8, x9
    fe9c:	madd	x2, x11, x2, x2
    fea0:	csel	x8, x14, x8, cs  // cs = hs, nlast
    fea4:	sub	x7, x7, #0x1
    fea8:	mov	x12, #0x40                  	// #64
    feac:	sub	x12, x12, x3
    feb0:	cset	w10, cs  // cs = hs, nlast
    feb4:	sub	x2, x7, x2, lsr #40
    feb8:	mov	x7, #0x1                   	// #1
    febc:	lsl	x3, x7, x12
    fec0:	sub	x15, x3, #0x1
    fec4:	lsl	x14, x2, #13
    fec8:	sub	x4, x4, x28
    fecc:	madd	x11, x11, x2, x2
    fed0:	sub	x0, x0, x11
    fed4:	lsr	x11, x15, #1
    fed8:	mul	x0, x0, x2
    fedc:	add	x0, x14, x0, lsr #47
    fee0:	and	x1, x1, x0
    fee4:	madd	x2, x13, x0, x0
    fee8:	lsr	x1, x1, #1
    feec:	sub	x1, x1, x2
    fef0:	umulh	x1, x0, x1
    fef4:	lsr	x1, x1, #1
    fef8:	add	x0, x1, x0, lsl #31
    fefc:	umulh	x0, x8, x0
    ff00:	add	x0, x0, x8
    ff04:	lsr	x2, x0, x10
    ff08:	add	x1, x2, #0x2
    ff0c:	and	x1, x1, x11
    ff10:	cmp	x1, #0x2
    ff14:	b.ls	106c8 <mpfr_div@@Base+0x19d8>  // b.plast
    ff18:	sub	w12, w12, #0x1
    ff1c:	mov	x1, x7
    ff20:	and	x10, x10, #0xff
    ff24:	lsl	x7, x7, x12
    ff28:	and	x7, x7, x2
    ff2c:	orr	x0, x2, #0x8000000000000000
    ff30:	neg	x2, x3
    ff34:	and	x2, x0, x2
    ff38:	ldr	w5, [x6, #8]
    ff3c:	ldr	x0, [x29, #192]
    ff40:	mrs	x6, tpidr_el0
    ff44:	ldr	w27, [x25, #8]
    ff48:	add	x4, x10, x4
    ff4c:	str	x6, [x29, #208]
    ff50:	str	x2, [x0]
    ff54:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    ff58:	ldr	x8, [x0, #2544]
    ff5c:	add	x0, x0, #0x9f0
    ff60:	blr	x8
    ff64:	mul	w27, w27, w5
    ff68:	ldr	x0, [x6, x0]
    ff6c:	str	w27, [x19, #8]
    ff70:	cmp	x4, x0
    ff74:	b.gt	103bc <mpfr_div@@Base+0x16cc>
    ff78:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
    ff7c:	ldr	x5, [x0, #2512]
    ff80:	add	x0, x0, #0x9d0
    ff84:	blr	x5
    ff88:	ldr	x5, [x29, #208]
    ff8c:	ldr	x0, [x5, x0]
    ff90:	cmp	x4, x0
    ff94:	b.lt	1098c <mpfr_div@@Base+0x1c9c>  // b.tstop
    ff98:	orr	x1, x1, x7
    ff9c:	str	x4, [x19, #16]
    ffa0:	cmp	x1, #0x0
    ffa4:	ccmp	w20, #0x5, #0x4, ne  // ne = any
    ffa8:	b.eq	f360 <mpfr_div@@Base+0x670>  // b.none
    ffac:	cbnz	w20, 105d0 <mpfr_div@@Base+0x18e0>
    ffb0:	cbz	x7, 104d0 <mpfr_div@@Base+0x17e0>
    ffb4:	ldr	x0, [x29, #192]
    ffb8:	ldr	x0, [x0]
    ffbc:	adds	x3, x3, x0
    ffc0:	b.eq	fc50 <mpfr_div@@Base+0xf60>  // b.none
    ffc4:	ldr	x0, [x29, #192]
    ffc8:	str	x3, [x0]
    ffcc:	b	f064 <mpfr_div@@Base+0x374>
    ffd0:	cmp	w20, #0x2
    ffd4:	mov	w3, #0x3                   	// #3
    ffd8:	b.eq	ffe8 <mpfr_div@@Base+0x12f8>  // b.none
    ffdc:	cmp	w20, w3
    ffe0:	mov	w3, #0x2                   	// #2
    ffe4:	csel	w3, w20, w3, ne  // ne = any
    ffe8:	mov	x1, x25
    ffec:	mov	x0, x19
    fff0:	bl	cc60 <mpfr_div_ui@plt>
    fff4:	neg	w27, w0
    fff8:	ldr	w1, [x19, #8]
    fffc:	neg	w1, w1
   10000:	str	w1, [x19, #8]
   10004:	b	f3d0 <mpfr_div@@Base+0x6e0>
   10008:	add	x0, x29, #0x100
   1000c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   10010:	mov	x4, x0
   10014:	b	f508 <mpfr_div@@Base+0x818>
   10018:	ldr	x0, [x26]
   1001c:	lsr	x0, x0, #63
   10020:	b	f790 <mpfr_div@@Base+0xaa0>
   10024:	mrs	x1, tpidr_el0
   10028:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1002c:	ldr	x2, [x0, #2576]
   10030:	add	x0, x0, #0xa10
   10034:	blr	x2
   10038:	add	x0, x1, x0
   1003c:	mov	w27, #0x0                   	// #0
   10040:	str	x3, [x19, #16]
   10044:	ldr	w1, [x0]
   10048:	orr	w1, w1, #0x4
   1004c:	str	w1, [x0]
   10050:	b	f08c <mpfr_div@@Base+0x39c>
   10054:	mov	w3, w0
   10058:	mov	x1, x26
   1005c:	mov	x2, x25
   10060:	mov	x0, x26
   10064:	bl	bce0 <__gmpn_rshift@plt>
   10068:	lsl	x0, x25, #3
   1006c:	sub	x1, x0, #0x8
   10070:	ldr	x0, [x26, x1]
   10074:	orr	x0, x0, #0x8000000000000000
   10078:	str	x0, [x26, x1]
   1007c:	b	f71c <mpfr_div@@Base+0xa2c>
   10080:	mov	x1, #0x1                   	// #1
   10084:	str	w1, [x29, #152]
   10088:	b	edfc <mpfr_div@@Base+0x10c>
   1008c:	mov	x0, x6
   10090:	mov	x4, x26
   10094:	mov	x3, x21
   10098:	mov	x2, x23
   1009c:	mov	x1, x22
   100a0:	str	x6, [x29, #120]
   100a4:	bl	c7a0 <__gmpn_mul@plt>
   100a8:	ldp	x8, x5, [x29, #96]
   100ac:	ldp	x9, x6, [x29, #112]
   100b0:	b	f910 <mpfr_div@@Base+0xc20>
   100b4:	add	x1, x6, x26, lsl #3
   100b8:	mov	x3, x23
   100bc:	mov	x0, x1
   100c0:	mov	x2, x22
   100c4:	stp	x8, x5, [x29, #96]
   100c8:	stp	x9, x6, [x29, #112]
   100cc:	bl	c5a0 <__gmpn_add_n@plt>
   100d0:	ldp	x8, x5, [x29, #96]
   100d4:	ldr	x1, [x21]
   100d8:	ldp	x9, x6, [x29, #112]
   100dc:	eor	x8, x1, x8
   100e0:	str	x8, [x21]
   100e4:	cbz	x0, f920 <mpfr_div@@Base+0xc30>
   100e8:	cbnz	w20, 10534 <mpfr_div@@Base+0x1844>
   100ec:	ldr	w27, [x29, #184]
   100f0:	cmp	w27, #0x1
   100f4:	b.ne	10624 <mpfr_div@@Base+0x1934>  // b.any
   100f8:	cbnz	x24, fb20 <mpfr_div@@Base+0xe30>
   100fc:	ldr	x0, [x29, #192]
   10100:	ldr	x2, [x0]
   10104:	sub	x0, x2, #0x1
   10108:	ldr	x1, [x29, #192]
   1010c:	str	x0, [x1]
   10110:	cbnz	x2, 1014c <mpfr_div@@Base+0x145c>
   10114:	ldr	x2, [x29, #136]
   10118:	ldr	x1, [x29, #192]
   1011c:	mov	x0, x1
   10120:	add	x3, x1, x2, lsl #3
   10124:	b	10138 <mpfr_div@@Base+0x1448>
   10128:	ldr	x1, [x0, #8]
   1012c:	sub	x2, x1, #0x1
   10130:	str	x2, [x0, #8]!
   10134:	cbnz	x1, 10830 <mpfr_div@@Base+0x1b40>
   10138:	cmp	x3, x0
   1013c:	b.ne	10128 <mpfr_div@@Base+0x1438>  // b.any
   10140:	ldr	x0, [x29, #192]
   10144:	sub	x9, x9, #0x1
   10148:	ldr	x0, [x0]
   1014c:	mov	x1, #0x1                   	// #1
   10150:	mov	w27, #0xffffffff            	// #-1
   10154:	b	fae0 <mpfr_div@@Base+0xdf0>
   10158:	orr	w0, w0, #0x4
   1015c:	mov	w27, #0x0                   	// #0
   10160:	str	w0, [x4]
   10164:	str	x3, [x19, #16]
   10168:	b	f08c <mpfr_div@@Base+0x39c>
   1016c:	ldr	x0, [x29, #200]
   10170:	mov	x9, #0x80                  	// #128
   10174:	ldp	x11, x7, [x22]
   10178:	sub	x9, x9, x3
   1017c:	ldp	x13, x2, [x0]
   10180:	mov	x8, #0x1                   	// #1
   10184:	lsl	x8, x8, x9
   10188:	sub	x4, x4, x28
   1018c:	sub	x3, x8, #0x1
   10190:	cmp	x7, x2
   10194:	b.cc	101a4 <mpfr_div@@Base+0x14b4>  // b.lo, b.ul, b.last
   10198:	ccmp	x11, x13, #0x2, eq  // eq = none
   1019c:	mov	w12, #0x0                   	// #0
   101a0:	b.hi	101b4 <mpfr_div@@Base+0x14c4>  // b.pmore
   101a4:	subs	x0, x13, x11
   101a8:	sbc	x2, x2, x7
   101ac:	mov	x13, x0
   101b0:	mov	w12, #0x1                   	// #1
   101b4:	cmn	x7, #0x1
   101b8:	b.eq	1080c <mpfr_div@@Base+0x1b1c>  // b.none
   101bc:	add	x0, x7, #0x1
   101c0:	adrp	x16, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   101c4:	add	x16, x16, #0xcd0
   101c8:	mov	x1, #0x1000000000000000    	// #1152921504606846976
   101cc:	lsr	x17, x0, #55
   101d0:	add	x10, x16, #0x800
   101d4:	sub	x17, x17, #0x100
   101d8:	lsr	x15, x0, #24
   101dc:	lsr	x14, x7, #1
   101e0:	sbfx	x0, x0, #0, #1
   101e4:	ldr	x10, [x10, x17, lsl #3]
   101e8:	ldr	x16, [x16, x17, lsl #3]
   101ec:	madd	x10, x15, x10, x10
   101f0:	sub	x16, x16, #0x1
   101f4:	sub	x10, x16, x10, lsr #40
   101f8:	lsl	x16, x10, #13
   101fc:	madd	x15, x15, x10, x10
   10200:	sub	x1, x1, x15
   10204:	mul	x1, x1, x10
   10208:	add	x1, x16, x1, lsr #47
   1020c:	and	x0, x0, x1
   10210:	madd	x10, x14, x1, x1
   10214:	lsr	x0, x0, #1
   10218:	sub	x0, x0, x10
   1021c:	umulh	x0, x1, x0
   10220:	lsr	x0, x0, #1
   10224:	add	x15, x0, x1, lsl #31
   10228:	umulh	x1, x2, x15
   1022c:	add	x1, x2, x1
   10230:	umulh	x14, x1, x7
   10234:	sub	x2, x2, x14
   10238:	mul	x0, x7, x1
   1023c:	mul	x14, x11, x1
   10240:	umulh	x10, x1, x11
   10244:	adds	x0, x0, x10
   10248:	cset	x16, cs  // cs = hs, nlast
   1024c:	cmp	x14, #0x0
   10250:	cinc	x0, x0, ne  // ne = any
   10254:	cset	w17, ne  // ne = any
   10258:	subs	x10, x13, x0
   1025c:	cmp	x13, x0
   10260:	cset	x14, cc  // cc = lo, ul, last
   10264:	cmp	x0, #0x0
   10268:	ccmp	w17, #0x0, #0x4, eq  // eq = none
   1026c:	cinc	x0, x14, ne  // ne = any
   10270:	sub	x2, x2, x0
   10274:	umulh	x14, x10, x15
   10278:	sub	x2, x2, x16
   1027c:	adds	x14, x10, x14
   10280:	adc	x1, x1, x2
   10284:	mov	x10, x14
   10288:	cbz	x2, 102a8 <mpfr_div@@Base+0x15b8>
   1028c:	mov	x10, x2
   10290:	mov	x0, x14
   10294:	adds	x0, x0, x15
   10298:	cinc	x1, x1, cs  // cs = hs, nlast
   1029c:	subs	x10, x10, #0x1
   102a0:	b.ne	10294 <mpfr_div@@Base+0x15a4>  // b.any
   102a4:	madd	x10, x2, x15, x14
   102a8:	add	x0, x10, #0x15
   102ac:	mov	x2, #0x1                   	// #1
   102b0:	and	x0, x0, x3, lsr #1
   102b4:	cmp	x0, #0x15
   102b8:	b.ls	103d4 <mpfr_div@@Base+0x16e4>  // b.plast
   102bc:	cbz	w12, 102d8 <mpfr_div@@Base+0x15e8>
   102c0:	and	x7, x10, #0x1
   102c4:	lsr	x0, x1, #1
   102c8:	add	x4, x4, #0x1
   102cc:	extr	x10, x1, x10, #1
   102d0:	orr	x2, x2, x7
   102d4:	orr	x1, x0, #0x8000000000000000
   102d8:	ldr	x13, [x29, #192]
   102dc:	neg	x0, x8
   102e0:	ldr	w11, [x6, #8]
   102e4:	mrs	x12, tpidr_el0
   102e8:	ldr	w27, [x25, #8]
   102ec:	and	x6, x0, x10
   102f0:	stp	x6, x1, [x13]
   102f4:	sub	w5, w9, #0x1
   102f8:	mov	x7, #0x1                   	// #1
   102fc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   10300:	ldr	x9, [x0, #2544]
   10304:	add	x0, x0, #0x9f0
   10308:	blr	x9
   1030c:	lsl	x5, x7, x5
   10310:	mul	w27, w27, w11
   10314:	str	x12, [x29, #208]
   10318:	ldr	x9, [x12, x0]
   1031c:	eor	x0, x3, x5
   10320:	str	w27, [x19, #8]
   10324:	and	x0, x0, x10
   10328:	orr	x2, x0, x2
   1032c:	and	x5, x5, x10
   10330:	cmp	x9, x4
   10334:	b.lt	103bc <mpfr_div@@Base+0x16cc>  // b.tstop
   10338:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1033c:	ldr	x3, [x0, #2512]
   10340:	add	x0, x0, #0x9d0
   10344:	blr	x3
   10348:	ldr	x3, [x29, #208]
   1034c:	ldr	x0, [x3, x0]
   10350:	cmp	x4, x0
   10354:	b.lt	109d0 <mpfr_div@@Base+0x1ce0>  // b.tstop
   10358:	orr	x2, x5, x2
   1035c:	str	x4, [x19, #16]
   10360:	cmp	x2, #0x0
   10364:	ccmp	w20, #0x5, #0x4, ne  // ne = any
   10368:	b.eq	f360 <mpfr_div@@Base+0x670>  // b.none
   1036c:	cbnz	w20, 10684 <mpfr_div@@Base+0x1994>
   10370:	cbz	x5, 104d0 <mpfr_div@@Base+0x17e0>
   10374:	ldr	x2, [x29, #192]
   10378:	ldp	x1, x0, [x2]
   1037c:	add	x8, x8, x1
   10380:	str	x8, [x2]
   10384:	cmp	x8, #0x0
   10388:	cinc	x0, x0, eq  // eq = none
   1038c:	cbnz	x0, 10804 <mpfr_div@@Base+0x1b14>
   10390:	ldr	x2, [x29, #208]
   10394:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   10398:	ldr	x1, [x0, #2544]
   1039c:	add	x0, x0, #0x9f0
   103a0:	blr	x1
   103a4:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   103a8:	ldr	x0, [x2, x0]
   103ac:	ldr	x2, [x29, #192]
   103b0:	cmp	x4, x0
   103b4:	str	x1, [x2, #8]
   103b8:	b.lt	fc7c <mpfr_div@@Base+0xf8c>  // b.tstop
   103bc:	mov	w2, w27
   103c0:	mov	w1, w20
   103c4:	mov	x0, x19
   103c8:	bl	bf40 <mpfr_overflow@plt>
   103cc:	mov	w27, w0
   103d0:	b	f08c <mpfr_div@@Base+0x39c>
   103d4:	mul	x14, x10, x7
   103d8:	add	x15, x10, x2
   103dc:	mul	x2, x1, x11
   103e0:	umulh	x0, x10, x11
   103e4:	adds	x0, x0, x14
   103e8:	mneg	x14, x11, x10
   103ec:	cset	x16, cs  // cs = hs, nlast
   103f0:	adds	x0, x0, x2
   103f4:	cinc	x16, x16, cs  // cs = hs, nlast
   103f8:	cmp	x14, #0x0
   103fc:	cinc	x0, x0, ne  // ne = any
   10400:	msub	x2, x1, x7, x13
   10404:	neg	x0, x0
   10408:	umulh	x13, x1, x11
   1040c:	umulh	x10, x10, x7
   10410:	add	x10, x10, x13
   10414:	orr	x13, x14, x0
   10418:	sub	x2, x2, x10
   1041c:	cmp	x13, #0x0
   10420:	sub	x2, x2, x16
   10424:	cset	x10, ne  // ne = any
   10428:	sub	x2, x2, x10
   1042c:	b	1045c <mpfr_div@@Base+0x176c>
   10430:	cmp	x7, x0
   10434:	mov	x5, #0x0                   	// #0
   10438:	ccmp	x11, x14, #0x2, eq  // eq = none
   1043c:	b.hi	10814 <mpfr_div@@Base+0x1b24>  // b.pmore
   10440:	cmp	x15, #0x0
   10444:	cinc	x1, x1, eq  // eq = none
   10448:	subs	x10, x14, x11
   1044c:	sbc	x0, x0, x7
   10450:	sub	x2, x2, x5
   10454:	mov	x14, x10
   10458:	add	x15, x15, #0x1
   1045c:	cmp	x2, #0x0
   10460:	sub	x10, x15, #0x1
   10464:	ccmp	x7, x0, #0x0, eq  // eq = none
   10468:	b.cs	10430 <mpfr_div@@Base+0x1740>  // b.hs, b.nlast
   1046c:	cmp	x15, #0x0
   10470:	mov	x5, #0x1                   	// #1
   10474:	cinc	x1, x1, eq  // eq = none
   10478:	cmp	x7, x0
   1047c:	b.hi	10448 <mpfr_div@@Base+0x1758>  // b.pmore
   10480:	ccmp	x11, x14, #0x0, eq  // eq = none
   10484:	cset	x5, hi  // hi = pmore
   10488:	b	10448 <mpfr_div@@Base+0x1758>
   1048c:	mov	x1, x26
   10490:	add	x0, x29, #0x100
   10494:	bl	bdc0 <mpfr_tmp_allocate@plt>
   10498:	mov	x21, x0
   1049c:	b	f668 <mpfr_div@@Base+0x978>
   104a0:	lsl	x1, x25, #3
   104a4:	add	x0, x29, #0x100
   104a8:	str	x3, [x29, #144]
   104ac:	bl	bdc0 <mpfr_tmp_allocate@plt>
   104b0:	mov	x26, x0
   104b4:	ldr	x3, [x29, #144]
   104b8:	b	f6e4 <mpfr_div@@Base+0x9f4>
   104bc:	cmp	w20, #0x1
   104c0:	b.eq	104d0 <mpfr_div@@Base+0x17e0>  // b.none
   104c4:	add	w0, w20, w27, lsr #31
   104c8:	cmp	w0, #0x3
   104cc:	b.ne	fc40 <mpfr_div@@Base+0xf50>  // b.any
   104d0:	cbz	w27, f360 <mpfr_div@@Base+0x670>
   104d4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   104d8:	ldr	x1, [x0, #2576]
   104dc:	add	x0, x0, #0xa10
   104e0:	blr	x1
   104e4:	neg	w27, w27
   104e8:	ldr	x1, [x29, #208]
   104ec:	add	x0, x1, x0
   104f0:	ldr	w1, [x0]
   104f4:	orr	w1, w1, #0x8
   104f8:	str	w1, [x0]
   104fc:	b	f08c <mpfr_div@@Base+0x39c>
   10500:	add	x0, x29, #0x100
   10504:	bl	bdc0 <mpfr_tmp_allocate@plt>
   10508:	mov	x21, x0
   1050c:	b	ee58 <mpfr_div@@Base+0x168>
   10510:	b.cc	f9b0 <mpfr_div@@Base+0xcc0>  // b.lo, b.ul, b.last
   10514:	orr	x0, x24, #0x1
   10518:	cbnz	w27, f4e0 <mpfr_div@@Base+0x7f0>
   1051c:	cbnz	w20, f4c0 <mpfr_div@@Base+0x7d0>
   10520:	mov	w27, #0xffffffff            	// #-1
   10524:	cbz	x24, f010 <mpfr_div@@Base+0x320>
   10528:	ldr	x0, [x29, #192]
   1052c:	ldr	x1, [x0]
   10530:	b	efa8 <mpfr_div@@Base+0x2b8>
   10534:	cbz	w27, 10608 <mpfr_div@@Base+0x1918>
   10538:	ldr	w3, [x29, #184]
   1053c:	ldr	x0, [x29, #192]
   10540:	ldr	x2, [x0]
   10544:	cbz	w3, 10104 <mpfr_div@@Base+0x1414>
   10548:	mov	x1, #0x1                   	// #1
   1054c:	mov	x0, x2
   10550:	lsl	x1, x1, x3
   10554:	mov	w27, #0xffffffff            	// #-1
   10558:	b	fae0 <mpfr_div@@Base+0xdf0>
   1055c:	b.hi	100e8 <mpfr_div@@Base+0x13f8>  // b.pmore
   10560:	cmp	x5, #0x1
   10564:	b.eq	10514 <mpfr_div@@Base+0x1824>  // b.none
   10568:	cbnz	x24, fe48 <mpfr_div@@Base+0x1158>
   1056c:	eor	w0, w27, #0x1
   10570:	cmp	w20, #0x0
   10574:	and	w0, w0, #0x1
   10578:	mov	w27, #0x1                   	// #1
   1057c:	csel	w0, w0, w27, ne  // ne = any
   10580:	cbnz	w0, fb20 <mpfr_div@@Base+0xe30>
   10584:	ldrb	w0, [x29, #184]
   10588:	mov	x1, #0x1                   	// #1
   1058c:	mov	w27, #0xffffffff            	// #-1
   10590:	lsl	x1, x1, x0
   10594:	ldr	x0, [x29, #192]
   10598:	ldr	x0, [x0]
   1059c:	b	fae0 <mpfr_div@@Base+0xdf0>
   105a0:	lsr	x3, x0, #1
   105a4:	and	x2, x0, #0x1
   105a8:	orr	x0, x3, #0x8000000000000000
   105ac:	add	x4, x4, #0x1
   105b0:	ldr	x3, [x29, #192]
   105b4:	str	x0, [x3]
   105b8:	b	f2f8 <mpfr_div@@Base+0x608>
   105bc:	lsl	x1, x25, #3
   105c0:	add	x0, x29, #0x100
   105c4:	bl	bdc0 <mpfr_tmp_allocate@plt>
   105c8:	mov	x3, x0
   105cc:	b	fe00 <mpfr_div@@Base+0x1110>
   105d0:	cmp	w20, #0x1
   105d4:	b.eq	104d0 <mpfr_div@@Base+0x17e0>  // b.none
   105d8:	add	w0, w20, w27, lsr #31
   105dc:	cmp	w0, #0x3
   105e0:	b.ne	ffb4 <mpfr_div@@Base+0x12c4>  // b.any
   105e4:	b	104d0 <mpfr_div@@Base+0x17e0>
   105e8:	str	xzr, [x29, #160]
   105ec:	b	eec4 <mpfr_div@@Base+0x1d4>
   105f0:	mov	x0, x23
   105f4:	cbz	x0, 107fc <mpfr_div@@Base+0x1b0c>
   105f8:	sub	x0, x0, #0x1
   105fc:	ldr	x1, [x6, x0, lsl #3]
   10600:	cbnz	x1, f9b0 <mpfr_div@@Base+0xcc0>
   10604:	b	105f4 <mpfr_div@@Base+0x1904>
   10608:	ldr	w0, [x29, #184]
   1060c:	mov	w27, #0x1                   	// #1
   10610:	cbnz	w0, fb20 <mpfr_div@@Base+0xe30>
   10614:	ldr	x0, [x29, #192]
   10618:	mov	x1, #0x1                   	// #1
   1061c:	ldr	x0, [x0]
   10620:	b	fae0 <mpfr_div@@Base+0xdf0>
   10624:	cmp	x24, #0x0
   10628:	mov	w27, #0xffffffff            	// #-1
   1062c:	cneg	w27, w27, eq  // eq = none
   10630:	b	fb20 <mpfr_div@@Base+0xe30>
   10634:	ldr	w0, [x29, #152]
   10638:	cbnz	w0, 1072c <mpfr_div@@Base+0x1a3c>
   1063c:	b.eq	10824 <mpfr_div@@Base+0x1b34>  // b.none
   10640:	sub	x23, x23, x2
   10644:	str	xzr, [x29, #160]
   10648:	lsl	x23, x23, #3
   1064c:	ldr	w4, [x29, #152]
   10650:	add	x0, x6, x23
   10654:	ldr	x3, [x29, #160]
   10658:	str	x5, [x29, #144]
   1065c:	ldr	x1, [x29, #200]
   10660:	str	x9, [x29, #176]
   10664:	str	x6, [x29, #200]
   10668:	bl	17cf0 <mpfr_div_2ui@@Base+0x3f8>
   1066c:	mov	x1, x0
   10670:	str	xzr, [x29, #160]
   10674:	ldr	x5, [x29, #144]
   10678:	ldr	x9, [x29, #176]
   1067c:	ldr	x6, [x29, #200]
   10680:	b	fa28 <mpfr_div@@Base+0xd38>
   10684:	cmp	w20, #0x1
   10688:	b.eq	104d0 <mpfr_div@@Base+0x17e0>  // b.none
   1068c:	add	w0, w20, w27, lsr #31
   10690:	cmp	w0, #0x3
   10694:	b.ne	10374 <mpfr_div@@Base+0x1684>  // b.any
   10698:	b	104d0 <mpfr_div@@Base+0x17e0>
   1069c:	ldr	x1, [x29, #120]
   106a0:	add	x0, x29, #0x100
   106a4:	stp	x8, x5, [x29, #96]
   106a8:	str	x9, [x29, #112]
   106ac:	bl	bdc0 <mpfr_tmp_allocate@plt>
   106b0:	ldp	x8, x5, [x29, #96]
   106b4:	mov	x6, x0
   106b8:	ldr	x1, [x21]
   106bc:	ldr	x9, [x29, #112]
   106c0:	eor	x0, x8, x1
   106c4:	b	f8d4 <mpfr_div@@Base+0xbe4>
   106c8:	mul	x13, x9, x0
   106cc:	umulh	x1, x0, x9
   106d0:	negs	x7, x13
   106d4:	sbc	x1, x8, x1
   106d8:	cmp	x1, #0x0
   106dc:	mov	x8, x7
   106e0:	ccmp	x9, x7, #0x0, eq  // eq = none
   106e4:	b.hi	10704 <mpfr_div@@Base+0x1a14>  // b.pmore
   106e8:	subs	x8, x8, x9
   106ec:	add	x0, x0, #0x1
   106f0:	sbc	x1, x1, xzr
   106f4:	cmp	x1, #0x0
   106f8:	ccmp	x9, x8, #0x0, eq  // eq = none
   106fc:	b.ls	106e8 <mpfr_div@@Base+0x19f8>  // b.plast
   10700:	lsr	x2, x0, x10
   10704:	and	x10, x10, #0xff
   10708:	sub	w12, w12, #0x1
   1070c:	and	x1, x10, x0
   10710:	and	x11, x11, x2
   10714:	orr	x1, x1, x11
   10718:	mov	x7, #0x1                   	// #1
   1071c:	lsl	x7, x7, x12
   10720:	orr	x1, x1, x8
   10724:	and	x7, x7, x2
   10728:	b	ff2c <mpfr_div@@Base+0x123c>
   1072c:	ldr	x0, [x29, #200]
   10730:	cmp	x23, x2
   10734:	ldr	x0, [x0]
   10738:	and	x0, x0, #0x1
   1073c:	str	x0, [x29, #160]
   10740:	b.eq	10958 <mpfr_div@@Base+0x1c68>  // b.none
   10744:	ldr	x0, [x29, #160]
   10748:	sub	x23, x23, x2
   1074c:	lsl	x23, x23, #3
   10750:	cbz	x0, 1064c <mpfr_div@@Base+0x195c>
   10754:	sub	x3, x23, #0x8
   10758:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   1075c:	ldr	x1, [x6, x3]
   10760:	mvn	x4, x1
   10764:	add	x1, x1, x8
   10768:	str	x1, [x6, x3]
   1076c:	lsr	x0, x4, #63
   10770:	str	x0, [x29, #160]
   10774:	b	1064c <mpfr_div@@Base+0x195c>
   10778:	sub	x0, x0, x23
   1077c:	cmp	x0, #0x0
   10780:	cset	w11, gt
   10784:	cbz	x23, 108c0 <mpfr_div@@Base+0x1bd0>
   10788:	ldr	x1, [x29, #200]
   1078c:	ldr	w7, [x29, #152]
   10790:	add	x4, x1, x0, lsl #3
   10794:	mov	x1, x23
   10798:	add	x8, x4, #0x8
   1079c:	b	107ac <mpfr_div@@Base+0x1abc>
   107a0:	cmp	x1, #0x0
   107a4:	ccmp	x3, x2, #0x0, gt
   107a8:	b.ne	10944 <mpfr_div@@Base+0x1c54>  // b.any
   107ac:	sub	x1, x1, #0x1
   107b0:	ldr	x2, [x4, x1, lsl #3]
   107b4:	cbz	w7, 107c0 <mpfr_div@@Base+0x1ad0>
   107b8:	ldr	x3, [x8, x1, lsl #3]
   107bc:	extr	x2, x3, x2, #1
   107c0:	ldr	x3, [x6, x1, lsl #3]
   107c4:	cmp	x3, x2
   107c8:	b.hi	f9b0 <mpfr_div@@Base+0xcc0>  // b.pmore
   107cc:	b	107a0 <mpfr_div@@Base+0x1ab0>
   107d0:	ldr	x1, [x29, #200]
   107d4:	lsl	x2, x0, #3
   107d8:	ldr	x3, [x1, x0, lsl #3]
   107dc:	add	x1, x1, x2
   107e0:	and	x4, x3, #0x1
   107e4:	tbz	w3, #0, 10848 <mpfr_div@@Base+0x1b58>
   107e8:	str	x4, [x29, #160]
   107ec:	b	f9f8 <mpfr_div@@Base+0xd08>
   107f0:	cmp	x0, x2
   107f4:	csetm	w4, hi  // hi = pmore
   107f8:	cbnz	w4, 10514 <mpfr_div@@Base+0x1824>
   107fc:	orr	x0, x5, x24
   10800:	b	ef88 <mpfr_div@@Base+0x298>
   10804:	str	x0, [x2, #8]
   10808:	b	f064 <mpfr_div@@Base+0x374>
   1080c:	mov	x15, #0x0                   	// #0
   10810:	b	10228 <mpfr_div@@Base+0x1538>
   10814:	orr	x2, x0, x14
   10818:	b	102bc <mpfr_div@@Base+0x15cc>
   1081c:	mov	x2, #0x0                   	// #0
   10820:	b	f2f8 <mpfr_div@@Base+0x608>
   10824:	str	xzr, [x29, #160]
   10828:	ldr	x1, [x29, #200]
   1082c:	b	f9f8 <mpfr_div@@Base+0xd08>
   10830:	ldr	x0, [x29, #192]
   10834:	ldr	x0, [x0]
   10838:	b	1014c <mpfr_div@@Base+0x145c>
   1083c:	mov	x0, x24
   10840:	mov	x5, #0x0                   	// #0
   10844:	b	ef88 <mpfr_div@@Base+0x298>
   10848:	ldr	x3, [x29, #200]
   1084c:	b	f9e0 <mpfr_div@@Base+0xcf0>
   10850:	ldr	x1, [x29, #192]
   10854:	str	x0, [x1]
   10858:	b	f064 <mpfr_div@@Base+0x374>
   1085c:	mov	w2, #0x1                   	// #1
   10860:	mov	w4, #0x0                   	// #0
   10864:	ldr	w0, [x29, #152]
   10868:	cbnz	w0, 1089c <mpfr_div@@Base+0x1bac>
   1086c:	mov	x0, #0x0                   	// #0
   10870:	cbnz	w11, 10888 <mpfr_div@@Base+0x1b98>
   10874:	b	107f8 <mpfr_div@@Base+0x1b08>
   10878:	cmp	x1, #0x0
   1087c:	ccmp	x0, x2, #0x0, gt
   10880:	b.ne	107f0 <mpfr_div@@Base+0x1b00>  // b.any
   10884:	mov	x0, #0x0                   	// #0
   10888:	sub	x1, x1, #0x1
   1088c:	ldr	x2, [x6, x1, lsl #3]
   10890:	cmp	x0, x2
   10894:	b.cc	f9b0 <mpfr_div@@Base+0xcc0>  // b.lo, b.ul, b.last
   10898:	b	10878 <mpfr_div@@Base+0x1b88>
   1089c:	ldr	x0, [x29, #200]
   108a0:	ldr	x0, [x0]
   108a4:	lsl	x0, x0, #63
   108a8:	cbnz	w11, 10888 <mpfr_div@@Base+0x1b98>
   108ac:	cmp	x0, #0x0
   108b0:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   108b4:	b.ne	10514 <mpfr_div@@Base+0x1824>  // b.any
   108b8:	cbz	w4, 107fc <mpfr_div@@Base+0x1b0c>
   108bc:	b	10514 <mpfr_div@@Base+0x1824>
   108c0:	mov	w1, #0x1                   	// #1
   108c4:	mov	w4, #0x0                   	// #0
   108c8:	ldr	w2, [x29, #152]
   108cc:	mov	w6, w2
   108d0:	cbz	w11, 10930 <mpfr_div@@Base+0x1c40>
   108d4:	ldr	x7, [x29, #200]
   108d8:	mov	w4, w2
   108dc:	add	x3, x7, #0x8
   108e0:	sub	x0, x0, #0x1
   108e4:	ldr	x1, [x7, x0, lsl #3]
   108e8:	cbz	w4, 108f4 <mpfr_div@@Base+0x1c04>
   108ec:	ldr	x2, [x3, x0, lsl #3]
   108f0:	extr	x1, x2, x1, #1
   108f4:	cmp	x1, #0x0
   108f8:	cset	w2, eq  // eq = none
   108fc:	cmp	x0, #0x0
   10900:	ccmp	w2, #0x0, #0x4, gt
   10904:	b.ne	108e0 <mpfr_div@@Base+0x1bf0>  // b.any
   10908:	cmp	x1, #0x0
   1090c:	csetm	w4, ne  // ne = any
   10910:	cmp	w2, #0x0
   10914:	ccmp	w6, #0x0, #0x4, ne  // ne = any
   10918:	b.eq	107f8 <mpfr_div@@Base+0x1b08>  // b.none
   1091c:	ldr	x0, [x29, #200]
   10920:	ldr	x0, [x0]
   10924:	tbnz	w0, #0, 10514 <mpfr_div@@Base+0x1824>
   10928:	cbz	w4, 107fc <mpfr_div@@Base+0x1b0c>
   1092c:	b	10514 <mpfr_div@@Base+0x1824>
   10930:	cmp	w2, #0x0
   10934:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   10938:	b.ne	1091c <mpfr_div@@Base+0x1c2c>  // b.any
   1093c:	cbz	w4, 107fc <mpfr_div@@Base+0x1b0c>
   10940:	b	10514 <mpfr_div@@Base+0x1824>
   10944:	cmp	x3, x2
   10948:	cset	w1, cs  // cs = hs, nlast
   1094c:	csetm	w4, cc  // cc = lo, ul, last
   10950:	and	w11, w11, w1
   10954:	b	108c8 <mpfr_div@@Base+0x1bd8>
   10958:	ldr	x1, [x29, #200]
   1095c:	b	f9f8 <mpfr_div@@Base+0xd08>
   10960:	cmp	x3, x2
   10964:	cset	w2, cs  // cs = hs, nlast
   10968:	csetm	w4, cc  // cc = lo, ul, last
   1096c:	and	w11, w2, w11
   10970:	b	10864 <mpfr_div@@Base+0x1b74>
   10974:	ldr	x0, [x29, #200]
   10978:	str	xzr, [x29, #160]
   1097c:	add	x1, x0, x2
   10980:	b	f9f8 <mpfr_div@@Base+0xd08>
   10984:	mov	w20, #0x1                   	// #1
   10988:	b	f7c4 <mpfr_div@@Base+0xad4>
   1098c:	cbnz	w20, 109a0 <mpfr_div@@Base+0x1cb0>
   10990:	sub	x0, x0, #0x1
   10994:	cmp	x4, x0
   10998:	b.ge	10a2c <mpfr_div@@Base+0x1d3c>  // b.tcont
   1099c:	mov	w20, #0x1                   	// #1
   109a0:	mov	w2, w27
   109a4:	mov	w1, w20
   109a8:	mov	x0, x19
   109ac:	bl	c3c0 <mpfr_underflow@plt>
   109b0:	mov	w27, w0
   109b4:	b	f08c <mpfr_div@@Base+0x39c>
   109b8:	ldr	w2, [x29, #168]
   109bc:	mov	w1, w20
   109c0:	mov	x0, x19
   109c4:	bl	bf40 <mpfr_overflow@plt>
   109c8:	mov	w27, w0
   109cc:	b	f08c <mpfr_div@@Base+0x39c>
   109d0:	cbnz	w20, 109a0 <mpfr_div@@Base+0x1cb0>
   109d4:	sub	x0, x0, #0x1
   109d8:	cmp	x4, x0
   109dc:	b.lt	1099c <mpfr_div@@Base+0x1cac>  // b.tstop
   109e0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   109e4:	cmp	x1, x0
   109e8:	b.ne	109a0 <mpfr_div@@Base+0x1cb0>  // b.any
   109ec:	orr	x2, x2, x6
   109f0:	cmp	x2, #0x0
   109f4:	cset	w20, eq  // eq = none
   109f8:	b	109a0 <mpfr_div@@Base+0x1cb0>
   109fc:	ldr	w2, [x19, #8]
   10a00:	mov	w1, w20
   10a04:	mov	x0, x19
   10a08:	bl	bf40 <mpfr_overflow@plt>
   10a0c:	mov	w27, w0
   10a10:	b	f08c <mpfr_div@@Base+0x39c>
   10a14:	cbnz	w20, 109a0 <mpfr_div@@Base+0x1cb0>
   10a18:	sub	x0, x0, #0x1
   10a1c:	cmp	x4, x0
   10a20:	b.lt	1099c <mpfr_div@@Base+0x1cac>  // b.tstop
   10a24:	ldr	x0, [x29, #192]
   10a28:	ldr	x2, [x0]
   10a2c:	cmp	x1, #0x0
   10a30:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   10a34:	ccmp	x2, x0, #0x0, eq  // eq = none
   10a38:	cset	w20, eq  // eq = none
   10a3c:	b	109a0 <mpfr_div@@Base+0x1cb0>

0000000000010a40 <mpfr_div_ui@@Base>:
   10a40:	stp	x29, x30, [sp, #-160]!
   10a44:	mov	x6, x1
   10a48:	mov	x29, sp
   10a4c:	stp	x27, x28, [sp, #80]
   10a50:	ldr	x28, [x1, #16]
   10a54:	stp	x19, x20, [sp, #16]
   10a58:	mov	x20, x0
   10a5c:	stp	x21, x22, [sp, #32]
   10a60:	mov	x22, x2
   10a64:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   10a68:	stp	x23, x24, [sp, #48]
   10a6c:	cmp	x28, x2
   10a70:	stp	x25, x26, [sp, #64]
   10a74:	b.le	10e4c <mpfr_div_ui@@Base+0x40c>
   10a78:	mov	w26, w3
   10a7c:	cmp	x22, #0x1
   10a80:	b.ls	10f04 <mpfr_div_ui@@Base+0x4c4>  // b.plast
   10a84:	sub	x2, x22, #0x1
   10a88:	tst	x2, x22
   10a8c:	b.eq	10f40 <mpfr_div_ui@@Base+0x500>  // b.none
   10a90:	ldr	x23, [x20]
   10a94:	str	xzr, [x29, #152]
   10a98:	ldr	x19, [x1]
   10a9c:	sub	x23, x23, #0x1
   10aa0:	ldr	w0, [x1, #8]
   10aa4:	asr	x23, x23, #6
   10aa8:	sub	x19, x19, #0x1
   10aac:	add	x21, x23, #0x2
   10ab0:	asr	x19, x19, #6
   10ab4:	ldr	x8, [x1, #24]
   10ab8:	str	w0, [x20, #8]
   10abc:	add	x0, x23, #0x1
   10ac0:	str	x0, [x29, #136]
   10ac4:	add	x19, x19, #0x1
   10ac8:	lsl	x23, x21, #3
   10acc:	sub	x9, x21, x19
   10ad0:	cmp	x23, #0x4, lsl #12
   10ad4:	ldr	x6, [x20, #24]
   10ad8:	b.hi	10f5c <mpfr_div_ui@@Base+0x51c>  // b.pmore
   10adc:	add	x0, x23, #0xf
   10ae0:	and	x0, x0, #0xfffffffffffffff0
   10ae4:	sub	sp, sp, x0
   10ae8:	mov	x10, sp
   10aec:	str	x6, [x29, #104]
   10af0:	mov	x4, x22
   10af4:	tbnz	x9, #63, 10bbc <mpfr_div_ui@@Base+0x17c>
   10af8:	mov	x2, x8
   10afc:	mov	x1, x9
   10b00:	mov	x0, x10
   10b04:	mov	x3, x19
   10b08:	stp	x8, x9, [x29, #112]
   10b0c:	str	x10, [x29, #128]
   10b10:	bl	c7c0 <__gmpn_divrem_1@plt>
   10b14:	ldp	x6, x8, [x29, #104]
   10b18:	mov	x24, x0
   10b1c:	ldp	x9, x10, [x29, #120]
   10b20:	sub	x5, x19, x21
   10b24:	cmp	x5, #0x0
   10b28:	b.le	10fd8 <mpfr_div_ui@@Base+0x598>
   10b2c:	add	x5, x8, x5, lsl #3
   10b30:	mov	x1, x8
   10b34:	nop
   10b38:	ldr	x19, [x1]
   10b3c:	add	x1, x1, #0x8
   10b40:	cmp	x1, x5
   10b44:	cbz	x19, 10be8 <mpfr_div_ui@@Base+0x1a8>
   10b48:	orr	x21, x24, #0x1
   10b4c:	mov	x19, #0x1                   	// #1
   10b50:	sub	x2, x23, #0x8
   10b54:	ldr	x25, [x20]
   10b58:	ldr	x27, [x10, x2]
   10b5c:	neg	w25, w25
   10b60:	and	w25, w25, #0x3f
   10b64:	cbnz	x27, 10c08 <mpfr_div_ui@@Base+0x1c8>
   10b68:	cmp	x10, x6
   10b6c:	b.eq	10b90 <mpfr_div_ui@@Base+0x150>  // b.none
   10b70:	mov	x1, x10
   10b74:	mov	x0, x6
   10b78:	stp	x9, x8, [x29, #120]
   10b7c:	str	x10, [x29, #136]
   10b80:	bl	ba10 <memcpy@plt>
   10b84:	ldp	x9, x8, [x29, #120]
   10b88:	mov	x6, x0
   10b8c:	ldr	x10, [x29, #136]
   10b90:	sub	x28, x28, #0x40
   10b94:	ldr	x2, [x6]
   10b98:	cbnz	w25, 10d54 <mpfr_div_ui@@Base+0x314>
   10b9c:	sub	x0, x22, x24
   10ba0:	cmp	x0, x24
   10ba4:	b.hi	10eb4 <mpfr_div_ui@@Base+0x474>  // b.pmore
   10ba8:	lsl	x24, x24, #1
   10bac:	mov	x27, #0x1                   	// #1
   10bb0:	sub	x24, x24, x22
   10bb4:	orr	x21, x24, x19
   10bb8:	b	10c58 <mpfr_div_ui@@Base+0x218>
   10bbc:	sub	x2, x8, x9, lsl #3
   10bc0:	mov	x0, x10
   10bc4:	mov	x3, x21
   10bc8:	mov	x1, #0x0                   	// #0
   10bcc:	stp	x8, x9, [x29, #112]
   10bd0:	str	x10, [x29, #128]
   10bd4:	bl	c7c0 <__gmpn_divrem_1@plt>
   10bd8:	mov	x24, x0
   10bdc:	ldp	x6, x8, [x29, #104]
   10be0:	ldp	x9, x10, [x29, #120]
   10be4:	b	10b20 <mpfr_div_ui@@Base+0xe0>
   10be8:	b.ne	10b38 <mpfr_div_ui@@Base+0xf8>  // b.any
   10bec:	sub	x2, x23, #0x8
   10bf0:	mov	x21, x24
   10bf4:	ldr	x25, [x20]
   10bf8:	ldr	x27, [x10, x2]
   10bfc:	neg	w25, w25
   10c00:	and	w25, w25, #0x3f
   10c04:	cbz	x27, 10b68 <mpfr_div_ui@@Base+0x128>
   10c08:	mov	x1, x10
   10c0c:	clz	x19, x27
   10c10:	ldr	x2, [x29, #136]
   10c14:	mov	x0, x6
   10c18:	ldr	x27, [x1], #8
   10c1c:	mov	w3, w19
   10c20:	stp	x10, x6, [x29, #128]
   10c24:	bl	bcc0 <__gmpn_lshift@plt>
   10c28:	lsl	x27, x27, x19
   10c2c:	ldp	x10, x6, [x29, #128]
   10c30:	neg	w0, w19
   10c34:	ldr	x1, [x10]
   10c38:	ldr	x2, [x6]
   10c3c:	lsr	x1, x1, x0
   10c40:	orr	x2, x1, x2
   10c44:	cbnz	w25, 10d2c <mpfr_div_ui@@Base+0x2ec>
   10c48:	and	x0, x27, #0x7fffffffffffffff
   10c4c:	and	x27, x27, #0x8000000000000000
   10c50:	orr	x21, x21, x0
   10c54:	sub	x28, x28, x19
   10c58:	ldr	x0, [x29, #152]
   10c5c:	mov	x1, #0xffffffffffffffff    	// #-1
   10c60:	lsl	x1, x1, x25
   10c64:	and	x1, x1, x2
   10c68:	str	x1, [x6]
   10c6c:	cbnz	x0, 10f88 <mpfr_div_ui@@Base+0x548>
   10c70:	mrs	x3, tpidr_el0
   10c74:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   10c78:	ldr	x1, [x0, #2512]
   10c7c:	add	x0, x0, #0x9d0
   10c80:	blr	x1
   10c84:	ldr	x0, [x3, x0]
   10c88:	sub	x1, x0, #0x1
   10c8c:	cmp	x1, x28
   10c90:	b.gt	11008 <mpfr_div_ui@@Base+0x5c8>
   10c94:	orr	x1, x27, x21
   10c98:	cbz	x1, 10f80 <mpfr_div_ui@@Base+0x540>
   10c9c:	cmp	w26, #0x2
   10ca0:	b.eq	10da8 <mpfr_div_ui@@Base+0x368>  // b.none
   10ca4:	cmp	w26, #0x3
   10ca8:	b.eq	10e38 <mpfr_div_ui@@Base+0x3f8>  // b.none
   10cac:	cmp	w26, #0x4
   10cb0:	b.eq	10eac <mpfr_div_ui@@Base+0x46c>  // b.none
   10cb4:	and	w1, w26, #0xfffffffb
   10cb8:	cmp	w1, #0x1
   10cbc:	b.eq	10ea0 <mpfr_div_ui@@Base+0x460>  // b.none
   10cc0:	ldr	w1, [x20, #8]
   10cc4:	cbnz	x27, 10f98 <mpfr_div_ui@@Base+0x558>
   10cc8:	neg	w1, w1
   10ccc:	mov	w26, #0x0                   	// #0
   10cd0:	str	x28, [x20, #16]
   10cd4:	cmp	x28, x0
   10cd8:	b.lt	10cf8 <mpfr_div_ui@@Base+0x2b8>  // b.tstop
   10cdc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   10ce0:	ldr	x2, [x0, #2544]
   10ce4:	add	x0, x0, #0x9f0
   10ce8:	blr	x2
   10cec:	ldr	x0, [x3, x0]
   10cf0:	cmp	x0, x28
   10cf4:	b.ge	10d80 <mpfr_div_ui@@Base+0x340>  // b.tcont
   10cf8:	mov	w2, w26
   10cfc:	mov	x0, x20
   10d00:	bl	cb30 <mpfr_check_range@plt>
   10d04:	mov	w1, w0
   10d08:	mov	sp, x29
   10d0c:	mov	w0, w1
   10d10:	ldp	x19, x20, [sp, #16]
   10d14:	ldp	x21, x22, [sp, #32]
   10d18:	ldp	x23, x24, [sp, #48]
   10d1c:	ldp	x25, x26, [sp, #64]
   10d20:	ldp	x27, x28, [sp, #80]
   10d24:	ldp	x29, x30, [sp], #160
   10d28:	ret
   10d2c:	sub	w1, w25, #0x1
   10d30:	mov	x0, #0xffffffffffffffff    	// #-1
   10d34:	orr	x21, x21, x27
   10d38:	mov	x27, #0x1                   	// #1
   10d3c:	lsl	x0, x0, x1
   10d40:	bic	x0, x2, x0
   10d44:	lsl	x27, x27, x1
   10d48:	orr	x21, x0, x21
   10d4c:	and	x27, x27, x2
   10d50:	b	10c54 <mpfr_div_ui@@Base+0x214>
   10d54:	ldr	x0, [x10]
   10d58:	sub	w1, w25, #0x1
   10d5c:	mov	x21, #0xffffffffffffffff    	// #-1
   10d60:	mov	x27, #0x1                   	// #1
   10d64:	lsl	x21, x21, x1
   10d68:	bic	x21, x0, x21
   10d6c:	orr	x21, x21, x24
   10d70:	lsl	x27, x27, x1
   10d74:	orr	x21, x21, x19
   10d78:	and	x27, x27, x0
   10d7c:	b	10c58 <mpfr_div_ui@@Base+0x218>
   10d80:	cbz	w1, 10d08 <mpfr_div_ui@@Base+0x2c8>
   10d84:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   10d88:	ldr	x2, [x0, #2576]
   10d8c:	add	x0, x0, #0xa10
   10d90:	blr	x2
   10d94:	add	x0, x3, x0
   10d98:	ldr	w2, [x0]
   10d9c:	orr	w2, w2, #0x8
   10da0:	str	w2, [x0]
   10da4:	b	10d08 <mpfr_div_ui@@Base+0x2c8>
   10da8:	ldr	w1, [x20, #8]
   10dac:	cmp	w1, #0x0
   10db0:	b.le	10e40 <mpfr_div_ui@@Base+0x400>
   10db4:	ldr	x2, [x6]
   10db8:	mov	w26, #0x4                   	// #4
   10dbc:	mov	x0, #0x1                   	// #1
   10dc0:	lsl	x25, x0, x25
   10dc4:	adds	x2, x2, x25
   10dc8:	str	x2, [x6]
   10dcc:	b.cc	10e20 <mpfr_div_ui@@Base+0x3e0>  // b.lo, b.ul, b.last
   10dd0:	sub	x4, x23, #0x10
   10dd4:	mov	x0, x6
   10dd8:	add	x4, x4, x6
   10ddc:	b	10df0 <mpfr_div_ui@@Base+0x3b0>
   10de0:	ldr	x2, [x0, #8]
   10de4:	add	x2, x2, #0x1
   10de8:	str	x2, [x0, #8]!
   10dec:	cbnz	x2, 10e20 <mpfr_div_ui@@Base+0x3e0>
   10df0:	cmp	x4, x0
   10df4:	b.ne	10de0 <mpfr_div_ui@@Base+0x3a0>  // b.any
   10df8:	add	x6, x6, x23
   10dfc:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   10e00:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   10e04:	ldr	x4, [x0, #2512]
   10e08:	add	x0, x0, #0x9d0
   10e0c:	blr	x4
   10e10:	add	x28, x28, #0x1
   10e14:	stur	x2, [x6, #-16]
   10e18:	ldr	x0, [x3, x0]
   10e1c:	b	10cd0 <mpfr_div_ui@@Base+0x290>
   10e20:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   10e24:	ldr	x2, [x0, #2512]
   10e28:	add	x0, x0, #0x9d0
   10e2c:	blr	x2
   10e30:	ldr	x0, [x3, x0]
   10e34:	b	10cd0 <mpfr_div_ui@@Base+0x290>
   10e38:	ldr	w1, [x20, #8]
   10e3c:	tbnz	w1, #31, 10db4 <mpfr_div_ui@@Base+0x374>
   10e40:	neg	w1, w1
   10e44:	mov	w26, #0x1                   	// #1
   10e48:	b	10cd0 <mpfr_div_ui@@Base+0x290>
   10e4c:	mov	x0, #0x2                   	// #2
   10e50:	movk	x0, #0x8000, lsl #48
   10e54:	cmp	x28, x0
   10e58:	b.eq	10e68 <mpfr_div_ui@@Base+0x428>  // b.none
   10e5c:	cmp	x28, x2
   10e60:	b.eq	10ff4 <mpfr_div_ui@@Base+0x5b4>  // b.none
   10e64:	cbnz	x22, 10fb4 <mpfr_div_ui@@Base+0x574>
   10e68:	mrs	x1, tpidr_el0
   10e6c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   10e70:	ldr	x2, [x0, #2576]
   10e74:	add	x0, x0, #0xa10
   10e78:	blr	x2
   10e7c:	add	x0, x1, x0
   10e80:	mov	x2, #0x2                   	// #2
   10e84:	movk	x2, #0x8000, lsl #48
   10e88:	str	x2, [x20, #16]
   10e8c:	mov	w1, #0x0                   	// #0
   10e90:	ldr	w2, [x0]
   10e94:	orr	w2, w2, #0x4
   10e98:	str	w2, [x0]
   10e9c:	b	10d08 <mpfr_div_ui@@Base+0x2c8>
   10ea0:	ldr	w1, [x20, #8]
   10ea4:	neg	w1, w1
   10ea8:	b	10cd0 <mpfr_div_ui@@Base+0x290>
   10eac:	ldr	w1, [x20, #8]
   10eb0:	b	10db4 <mpfr_div_ui@@Base+0x374>
   10eb4:	lsr	x22, x22, #1
   10eb8:	cmp	x9, #0x0
   10ebc:	ccmp	x22, x24, #0x0, lt  // lt = tstop
   10ec0:	b.ne	10c58 <mpfr_div_ui@@Base+0x218>  // b.any
   10ec4:	mvn	x0, x9
   10ec8:	ldr	x0, [x8, x0, lsl #3]
   10ecc:	tbz	x0, #63, 10c58 <mpfr_div_ui@@Base+0x218>
   10ed0:	cmp	xzr, x0, lsl #1
   10ed4:	lsl	x21, x0, #1
   10ed8:	b.ne	10fd0 <mpfr_div_ui@@Base+0x590>  // b.any
   10edc:	mvn	x0, x9
   10ee0:	cbz	x0, 10fd0 <mpfr_div_ui@@Base+0x590>
   10ee4:	add	x0, x8, x0, lsl #3
   10ee8:	ldr	x21, [x8]
   10eec:	add	x8, x8, #0x8
   10ef0:	cmp	x0, x8
   10ef4:	cbz	x21, 10fcc <mpfr_div_ui@@Base+0x58c>
   10ef8:	mov	x21, #0x1                   	// #1
   10efc:	mov	x27, x21
   10f00:	b	10c58 <mpfr_div_ui@@Base+0x218>
   10f04:	ldr	w3, [x1, #8]
   10f08:	cbnz	x22, 10fe4 <mpfr_div_ui@@Base+0x5a4>
   10f0c:	mrs	x1, tpidr_el0
   10f10:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   10f14:	ldr	x4, [x0, #2576]
   10f18:	add	x0, x0, #0xa10
   10f1c:	blr	x4
   10f20:	add	x0, x1, x0
   10f24:	str	x2, [x20, #16]
   10f28:	mov	w1, #0x0                   	// #0
   10f2c:	str	w3, [x20, #8]
   10f30:	ldr	w2, [x0]
   10f34:	orr	w2, w2, #0x20
   10f38:	str	w2, [x0]
   10f3c:	b	10d08 <mpfr_div_ui@@Base+0x2c8>
   10f40:	clz	x2, x2
   10f44:	mov	w4, #0x40                  	// #64
   10f48:	sub	w2, w4, w2
   10f4c:	sxtw	x2, w2
   10f50:	bl	c420 <mpfr_div_2si@plt>
   10f54:	mov	w1, w0
   10f58:	b	10d08 <mpfr_div_ui@@Base+0x2c8>
   10f5c:	mov	x1, x23
   10f60:	add	x0, x29, #0x98
   10f64:	stp	x9, x6, [x29, #112]
   10f68:	str	x8, [x29, #128]
   10f6c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   10f70:	mov	x10, x0
   10f74:	ldp	x9, x6, [x29, #112]
   10f78:	ldr	x8, [x29, #128]
   10f7c:	b	10aec <mpfr_div_ui@@Base+0xac>
   10f80:	mov	w1, #0x0                   	// #0
   10f84:	b	10cd0 <mpfr_div_ui@@Base+0x290>
   10f88:	str	x6, [x29, #136]
   10f8c:	bl	c410 <mpfr_tmp_free@plt>
   10f90:	ldr	x6, [x29, #136]
   10f94:	b	10c70 <mpfr_div_ui@@Base+0x230>
   10f98:	ldr	x2, [x6]
   10f9c:	lsr	x4, x2, x25
   10fa0:	and	x4, x4, #0x1
   10fa4:	orr	x21, x4, x21
   10fa8:	cbz	x21, 10cc8 <mpfr_div_ui@@Base+0x288>
   10fac:	mov	w26, #0x0                   	// #0
   10fb0:	b	10dbc <mpfr_div_ui@@Base+0x37c>
   10fb4:	ldr	w2, [x6, #8]
   10fb8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   10fbc:	mov	w1, #0x0                   	// #0
   10fc0:	str	w2, [x20, #8]
   10fc4:	str	x0, [x20, #16]
   10fc8:	b	10d08 <mpfr_div_ui@@Base+0x2c8>
   10fcc:	b.ne	10ee8 <mpfr_div_ui@@Base+0x4a8>  // b.any
   10fd0:	mov	x27, #0x1                   	// #1
   10fd4:	b	10c58 <mpfr_div_ui@@Base+0x218>
   10fd8:	mov	x21, x24
   10fdc:	mov	x19, #0x0                   	// #0
   10fe0:	b	10b50 <mpfr_div_ui@@Base+0x110>
   10fe4:	mov	w2, w26
   10fe8:	bl	c6a0 <mpfr_set4@plt>
   10fec:	mov	w1, w0
   10ff0:	b	10d08 <mpfr_div_ui@@Base+0x2c8>
   10ff4:	ldr	w0, [x6, #8]
   10ff8:	mov	w1, #0x0                   	// #0
   10ffc:	str	w0, [x20, #8]
   11000:	str	x28, [x20, #16]
   11004:	b	10d08 <mpfr_div_ui@@Base+0x2c8>
   11008:	ldr	w2, [x20, #8]
   1100c:	cmp	w26, #0x0
   11010:	csinc	w1, w26, wzr, ne  // ne = any
   11014:	mov	x0, x20
   11018:	bl	c3c0 <mpfr_underflow@plt>
   1101c:	mov	w1, w0
   11020:	b	10d08 <mpfr_div_ui@@Base+0x2c8>
   11024:	nop

0000000000011028 <mpfr_mul@@Base>:
   11028:	stp	x29, x30, [sp, #-304]!
   1102c:	mov	x29, sp
   11030:	stp	x23, x24, [sp, #48]
   11034:	mov	x23, x2
   11038:	ldr	x24, [x1, #16]
   1103c:	stp	x19, x20, [sp, #16]
   11040:	stp	x21, x22, [sp, #32]
   11044:	mov	x21, x0
   11048:	mov	x22, x1
   1104c:	stp	x25, x26, [sp, #64]
   11050:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   11054:	cmp	x24, x0
   11058:	stp	x27, x28, [sp, #80]
   1105c:	b.le	11674 <mpfr_mul@@Base+0x64c>
   11060:	ldr	x5, [x2, #16]
   11064:	cmp	x5, x0
   11068:	b.le	11710 <mpfr_mul@@Base+0x6e8>
   1106c:	ldr	x28, [x21]
   11070:	mov	w26, w3
   11074:	ldr	x0, [x1]
   11078:	add	x5, x24, x5
   1107c:	ldr	x1, [x2]
   11080:	cmp	x28, x0
   11084:	ccmp	x28, x1, #0x0, eq  // eq = none
   11088:	b.eq	11244 <mpfr_mul@@Base+0x21c>  // b.none
   1108c:	ldr	w20, [x22, #8]
   11090:	add	x8, x0, x1
   11094:	ldr	w2, [x23, #8]
   11098:	mov	x3, #0x7fffffffffffff00    	// #9223372036854775552
   1109c:	cmp	x8, x3
   110a0:	mul	w20, w20, w2
   110a4:	b.cs	123a0 <mpfr_mul@@Base+0x1378>  // b.hs, b.nlast
   110a8:	sub	x0, x0, #0x1
   110ac:	sub	x1, x1, #0x1
   110b0:	sub	x19, x8, #0x1
   110b4:	str	xzr, [x29, #216]
   110b8:	asr	x27, x0, #6
   110bc:	asr	x25, x1, #6
   110c0:	add	x7, x27, #0x1
   110c4:	add	x4, x25, #0x1
   110c8:	add	x6, x7, x4
   110cc:	asr	x19, x19, #6
   110d0:	add	x9, x19, #0x1
   110d4:	lsl	x10, x6, #3
   110d8:	cmp	x10, #0x4, lsl #12
   110dc:	b.hi	119e4 <mpfr_mul@@Base+0x9bc>  // b.pmore
   110e0:	add	x0, x10, #0xf
   110e4:	and	x0, x0, #0xfffffffffffffff0
   110e8:	sub	sp, sp, x0
   110ec:	mov	x24, sp
   110f0:	cmp	x27, x25
   110f4:	b.lt	119c8 <mpfr_mul@@Base+0x9a0>  // b.tstop
   110f8:	ldr	x1, [x22, #24]
   110fc:	cmp	x7, #0x2
   11100:	ldr	x27, [x23, #24]
   11104:	mov	x25, x1
   11108:	mov	x11, x27
   1110c:	b.le	11430 <mpfr_mul@@Base+0x408>
   11110:	cmp	x4, #0x14
   11114:	b.gt	11ca8 <mpfr_mul@@Base+0xc80>
   11118:	sub	x25, x6, x9
   1111c:	add	x25, x24, x25, lsl #3
   11120:	mov	x3, x27
   11124:	mov	x2, x7
   11128:	mov	x0, x24
   1112c:	stp	x8, x5, [x29, #184]
   11130:	str	x9, [x29, #200]
   11134:	bl	c7a0 <__gmpn_mul@plt>
   11138:	lsr	x27, x0, #63
   1113c:	ldp	x8, x5, [x29, #184]
   11140:	ldr	x9, [x29, #200]
   11144:	tbz	x0, #63, 11dc0 <mpfr_mul@@Base+0xd98>
   11148:	ldr	x1, [x21]
   1114c:	add	x24, x5, x27
   11150:	sub	x28, x24, #0x1
   11154:	sub	x7, x1, #0x1
   11158:	cmp	x8, x1
   1115c:	ldr	x27, [x21, #24]
   11160:	asr	x7, x7, #6
   11164:	b.le	11a18 <mpfr_mul@@Base+0x9f0>
   11168:	sub	x4, x19, x7
   1116c:	neg	w1, w1
   11170:	ands	w6, w1, #0x3f
   11174:	add	x2, x7, #0x1
   11178:	add	x1, x25, x4, lsl #3
   1117c:	b.eq	115e8 <mpfr_mul@@Base+0x5c0>  // b.none
   11180:	ldr	x0, [x25, x4, lsl #3]
   11184:	sub	w6, w6, #0x1
   11188:	mov	x5, #0x1                   	// #1
   1118c:	cmp	w26, #0x0
   11190:	lsl	x5, x5, x6
   11194:	and	x3, x0, x5
   11198:	sub	x5, x5, #0x1
   1119c:	ccmp	x3, #0x0, #0x4, ne  // ne = any
   111a0:	and	x5, x5, x0
   111a4:	b.ne	111d0 <mpfr_mul@@Base+0x1a8>  // b.any
   111a8:	cmp	x4, #0x0
   111ac:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   111b0:	b.ne	111d0 <mpfr_mul@@Base+0x1a8>  // b.any
   111b4:	mvn	x0, x4
   111b8:	add	x0, x1, x0, lsl #3
   111bc:	nop
   111c0:	ldr	x5, [x0, x4, lsl #3]
   111c4:	subs	x4, x4, #0x1
   111c8:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   111cc:	b.eq	111c0 <mpfr_mul@@Base+0x198>  // b.none
   111d0:	mov	x19, #0x2                   	// #2
   111d4:	lsl	x19, x19, x6
   111d8:	cmp	w26, #0x5
   111dc:	b.eq	115e0 <mpfr_mul@@Base+0x5b8>  // b.none
   111e0:	cbnz	w26, 114fc <mpfr_mul@@Base+0x4d4>
   111e4:	cbz	x3, 11518 <mpfr_mul@@Base+0x4f0>
   111e8:	ldr	x0, [x1]
   111ec:	and	x3, x0, x19
   111f0:	orr	x5, x3, x5
   111f4:	cbz	x5, 1151c <mpfr_mul@@Base+0x4f4>
   111f8:	adds	x0, x0, x19
   111fc:	str	x0, [x27]
   11200:	b.cc	11634 <mpfr_mul@@Base+0x60c>  // b.lo, b.ul, b.last
   11204:	mov	x0, #0x1                   	// #1
   11208:	b	11224 <mpfr_mul@@Base+0x1fc>
   1120c:	ldr	x3, [x1, x0, lsl #3]
   11210:	add	x4, x0, #0x1
   11214:	add	x3, x3, #0x1
   11218:	str	x3, [x27, x0, lsl #3]
   1121c:	cbnz	x3, 11a9c <mpfr_mul@@Base+0xa74>
   11220:	mov	x0, x4
   11224:	cmp	x2, x0
   11228:	b.gt	1120c <mpfr_mul@@Base+0x1e4>
   1122c:	add	x2, x27, x2, lsl #3
   11230:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   11234:	mov	x28, x24
   11238:	stur	x0, [x2, #-8]
   1123c:	ldr	x0, [x27]
   11240:	b	11660 <mpfr_mul@@Base+0x638>
   11244:	cmp	x28, #0x3f
   11248:	b.le	11748 <mpfr_mul@@Base+0x720>
   1124c:	sub	x2, x28, #0x41
   11250:	cmp	x2, #0x3e
   11254:	b.ls	11888 <mpfr_mul@@Base+0x860>  // b.plast
   11258:	cmp	x28, #0x40
   1125c:	b.eq	11bd4 <mpfr_mul@@Base+0xbac>  // b.none
   11260:	sub	x2, x28, #0x81
   11264:	cmp	x2, #0x3e
   11268:	b.hi	1108c <mpfr_mul@@Base+0x64>  // b.pmore
   1126c:	ldr	x1, [x22, #24]
   11270:	mov	x0, #0xc0                  	// #192
   11274:	ldr	x2, [x23, #24]
   11278:	sub	x28, x0, x28
   1127c:	ldp	x8, x3, [x1, #8]
   11280:	mov	x6, #0x1                   	// #1
   11284:	ldp	x13, x12, [x2, #8]
   11288:	umulh	x7, x3, x13
   1128c:	umulh	x9, x8, x12
   11290:	umulh	x11, x3, x12
   11294:	lsl	x20, x6, x28
   11298:	sub	x19, x20, #0x1
   1129c:	ldr	x24, [x21, #24]
   112a0:	mul	x4, x3, x12
   112a4:	mul	x0, x3, x13
   112a8:	adds	x4, x4, x7
   112ac:	mul	x7, x12, x8
   112b0:	cinc	x11, x11, cs  // cs = hs, nlast
   112b4:	adds	x4, x4, x9
   112b8:	cset	x10, cs  // cs = hs, nlast
   112bc:	adds	x0, x0, x7
   112c0:	umulh	x8, x8, x13
   112c4:	cset	x7, cs  // cs = hs, nlast
   112c8:	mov	x9, x6
   112cc:	ldr	x13, [x2]
   112d0:	umulh	x3, x3, x13
   112d4:	adds	x0, x0, x3
   112d8:	cinc	x7, x7, cs  // cs = hs, nlast
   112dc:	adds	x0, x0, x8
   112e0:	cset	x8, cs  // cs = hs, nlast
   112e4:	ldr	x3, [x1]
   112e8:	umulh	x3, x3, x12
   112ec:	adds	x3, x0, x3
   112f0:	adc	x0, x7, x8
   112f4:	add	x7, x3, #0x4
   112f8:	adds	x4, x4, x0
   112fc:	and	x0, x7, x19, lsr #2
   11300:	adc	x10, x10, x11
   11304:	cmp	x0, #0x4
   11308:	b.ls	11b60 <mpfr_mul@@Base+0xb38>  // b.plast
   1130c:	tbnz	x10, #63, 11324 <mpfr_mul@@Base+0x2fc>
   11310:	sub	x5, x5, #0x1
   11314:	extr	x10, x10, x4, #63
   11318:	extr	x4, x4, x3, #63
   1131c:	extr	x3, x3, x9, #63
   11320:	lsl	x9, x9, #1
   11324:	ldr	w25, [x22, #8]
   11328:	neg	x11, x20
   1132c:	ldr	w12, [x23, #8]
   11330:	mrs	x7, tpidr_el0
   11334:	and	x8, x3, x11
   11338:	stp	x8, x4, [x24]
   1133c:	sub	w1, w28, #0x1
   11340:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   11344:	ldr	x13, [x0, #2544]
   11348:	add	x0, x0, #0x9f0
   1134c:	blr	x13
   11350:	mov	x2, #0x1                   	// #1
   11354:	mul	w25, w25, w12
   11358:	str	x10, [x24, #16]
   1135c:	ldr	x0, [x7, x0]
   11360:	lsl	x2, x2, x1
   11364:	eor	x1, x19, x2
   11368:	str	w25, [x21, #8]
   1136c:	orr	x6, x6, x9
   11370:	and	x1, x1, x3
   11374:	orr	x1, x1, x6
   11378:	cmp	x0, x5
   1137c:	and	x6, x2, x3
   11380:	b.lt	11418 <mpfr_mul@@Base+0x3f0>  // b.tstop
   11384:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   11388:	ldr	x9, [x0, #2512]
   1138c:	add	x0, x0, #0x9d0
   11390:	blr	x9
   11394:	ldr	x0, [x7, x0]
   11398:	cmp	x5, x0
   1139c:	b.lt	11f1c <mpfr_mul@@Base+0xef4>  // b.tstop
   113a0:	str	x5, [x21, #16]
   113a4:	orr	x0, x6, x1
   113a8:	cbz	x0, 119c0 <mpfr_mul@@Base+0x998>
   113ac:	cmp	w26, #0x5
   113b0:	b.eq	119c0 <mpfr_mul@@Base+0x998>  // b.none
   113b4:	cbz	w26, 11b90 <mpfr_mul@@Base+0xb68>
   113b8:	cmp	w26, #0x1
   113bc:	b.eq	11ba8 <mpfr_mul@@Base+0xb80>  // b.none
   113c0:	add	w0, w26, w25, lsr #31
   113c4:	cmp	w0, #0x3
   113c8:	b.eq	11ba8 <mpfr_mul@@Base+0xb80>  // b.none
   113cc:	ldr	x0, [x24]
   113d0:	add	x20, x20, x0
   113d4:	ldp	x0, x1, [x24, #8]
   113d8:	cmp	x20, #0x0
   113dc:	cinc	x0, x0, eq  // eq = none
   113e0:	stp	x20, x0, [x24]
   113e4:	orr	x2, x20, x0
   113e8:	cmp	x2, #0x0
   113ec:	cinc	x0, x1, eq  // eq = none
   113f0:	cbnz	x0, 12114 <mpfr_mul@@Base+0x10ec>
   113f4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   113f8:	ldr	x1, [x0, #2544]
   113fc:	add	x0, x0, #0x9f0
   11400:	blr	x1
   11404:	ldr	x0, [x7, x0]
   11408:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   1140c:	str	x1, [x24, #16]
   11410:	cmp	x5, x0
   11414:	b.lt	11858 <mpfr_mul@@Base+0x830>  // b.tstop
   11418:	mov	w2, w25
   1141c:	mov	w1, w26
   11420:	mov	x0, x21
   11424:	bl	bf40 <mpfr_overflow@plt>
   11428:	mov	w25, w0
   1142c:	b	115b4 <mpfr_mul@@Base+0x58c>
   11430:	ldr	x2, [x1]
   11434:	cmp	x7, #0x1
   11438:	ldr	x3, [x27]
   1143c:	umulh	x0, x2, x3
   11440:	add	x7, x24, #0x8
   11444:	mul	x2, x2, x3
   11448:	stp	x2, x0, [x24]
   1144c:	b.eq	114c4 <mpfr_mul@@Base+0x49c>  // b.none
   11450:	ldr	x10, [x27]
   11454:	cmp	x4, #0x1
   11458:	ldr	x2, [x1, #8]
   1145c:	mul	x3, x2, x10
   11460:	b.eq	11df4 <mpfr_mul@@Base+0xdcc>  // b.none
   11464:	umulh	x2, x2, x10
   11468:	adds	x4, x0, x3
   1146c:	adc	x2, x2, xzr
   11470:	str	x2, [x24, #16]
   11474:	str	x4, [x7]
   11478:	ldp	x2, x3, [x1]
   1147c:	ldr	x0, [x27, #8]
   11480:	umulh	x10, x2, x0
   11484:	umulh	x1, x3, x0
   11488:	ldr	x4, [x24, #8]
   1148c:	mul	x2, x2, x0
   11490:	mul	x0, x0, x3
   11494:	adds	x3, x10, x0
   11498:	adc	x0, x1, xzr
   1149c:	str	x0, [x24, #24]
   114a0:	ldr	x0, [x24, #16]
   114a4:	adds	x1, x4, x2
   114a8:	adc	x2, x0, x3
   114ac:	str	x2, [x24, #16]
   114b0:	str	x1, [x7]
   114b4:	ldp	x1, x0, [x24, #16]
   114b8:	cmp	x1, x3
   114bc:	cinc	x0, x0, cc  // cc = lo, ul, last
   114c0:	str	x0, [x24, #24]
   114c4:	sub	x25, x6, x9
   114c8:	lsr	x27, x0, #63
   114cc:	add	x25, x24, x25, lsl #3
   114d0:	tbnz	x0, #63, 11148 <mpfr_mul@@Base+0x120>
   114d4:	mov	x2, x9
   114d8:	mov	x1, x25
   114dc:	mov	x0, x25
   114e0:	mov	w3, #0x1                   	// #1
   114e4:	stp	x8, x5, [x29, #184]
   114e8:	str	x9, [x29, #200]
   114ec:	bl	bcc0 <__gmpn_lshift@plt>
   114f0:	ldp	x8, x5, [x29, #184]
   114f4:	ldr	x9, [x29, #200]
   114f8:	b	11148 <mpfr_mul@@Base+0x120>
   114fc:	orr	x5, x5, x3
   11500:	cmp	w26, #0x1
   11504:	b.eq	11518 <mpfr_mul@@Base+0x4f0>  // b.none
   11508:	add	w0, w26, w20, lsr #31
   1150c:	cmp	w0, #0x3
   11510:	b.ne	11620 <mpfr_mul@@Base+0x5f8>  // b.any
   11514:	nop
   11518:	cbz	x5, 115e0 <mpfr_mul@@Base+0x5b8>
   1151c:	neg	w25, w20
   11520:	cmp	x27, x1
   11524:	b.eq	11534 <mpfr_mul@@Base+0x50c>  // b.none
   11528:	lsl	x2, x2, #3
   1152c:	mov	x0, x27
   11530:	bl	ba10 <memcpy@plt>
   11534:	ldr	x0, [x27]
   11538:	neg	x6, x19
   1153c:	and	x6, x0, x6
   11540:	str	x6, [x27]
   11544:	ldr	x0, [x29, #216]
   11548:	cbnz	x0, 11a94 <mpfr_mul@@Base+0xa6c>
   1154c:	mrs	x1, tpidr_el0
   11550:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   11554:	ldr	x2, [x0, #2544]
   11558:	add	x0, x0, #0x9f0
   1155c:	blr	x2
   11560:	str	w20, [x21, #8]
   11564:	str	x28, [x21, #16]
   11568:	ldr	x0, [x1, x0]
   1156c:	cmp	x0, x28
   11570:	b.lt	12388 <mpfr_mul@@Base+0x1360>  // b.tstop
   11574:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   11578:	ldr	x2, [x0, #2512]
   1157c:	add	x0, x0, #0x9d0
   11580:	blr	x2
   11584:	ldr	x0, [x1, x0]
   11588:	cmp	x0, x28
   1158c:	b.gt	11a50 <mpfr_mul@@Base+0xa28>
   11590:	cbz	w25, 115b4 <mpfr_mul@@Base+0x58c>
   11594:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   11598:	ldr	x2, [x0, #2576]
   1159c:	add	x0, x0, #0xa10
   115a0:	blr	x2
   115a4:	add	x0, x1, x0
   115a8:	ldr	w1, [x0]
   115ac:	orr	w1, w1, #0x8
   115b0:	str	w1, [x0]
   115b4:	mov	sp, x29
   115b8:	mov	w0, w25
   115bc:	ldp	x19, x20, [sp, #16]
   115c0:	ldp	x21, x22, [sp, #32]
   115c4:	ldp	x23, x24, [sp, #48]
   115c8:	ldp	x25, x26, [sp, #64]
   115cc:	ldp	x27, x28, [sp, #80]
   115d0:	ldp	x29, x30, [sp], #304
   115d4:	ret
   115d8:	mov	x19, #0x1                   	// #1
   115dc:	nop
   115e0:	mov	w25, #0x0                   	// #0
   115e4:	b	11520 <mpfr_mul@@Base+0x4f8>
   115e8:	ldur	x5, [x1, #-8]
   115ec:	cmp	w26, #0x0
   115f0:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   115f4:	and	x3, x5, #0x8000000000000000
   115f8:	and	x6, x5, #0x7fffffffffffffff
   115fc:	b.ge	11b2c <mpfr_mul@@Base+0xb04>  // b.tcont
   11600:	cmp	w26, #0x5
   11604:	b.eq	115d8 <mpfr_mul@@Base+0x5b0>  // b.none
   11608:	cmp	w26, #0x1
   1160c:	b.eq	11b88 <mpfr_mul@@Base+0xb60>  // b.none
   11610:	add	w0, w26, w20, lsr #31
   11614:	mov	x19, #0x1                   	// #1
   11618:	cmp	w0, #0x3
   1161c:	b.eq	11b88 <mpfr_mul@@Base+0xb60>  // b.none
   11620:	cbz	x5, 115e0 <mpfr_mul@@Base+0x5b8>
   11624:	ldr	x0, [x1]
   11628:	adds	x0, x0, x19
   1162c:	str	x0, [x27]
   11630:	b.cs	11204 <mpfr_mul@@Base+0x1dc>  // b.hs, b.nlast
   11634:	cmp	x27, x1
   11638:	b.eq	11660 <mpfr_mul@@Base+0x638>  // b.none
   1163c:	cmp	x2, #0x1
   11640:	b.eq	11660 <mpfr_mul@@Base+0x638>  // b.none
   11644:	mov	x0, #0x1                   	// #1
   11648:	ldr	x3, [x1, x0, lsl #3]
   1164c:	str	x3, [x27, x0, lsl #3]
   11650:	add	x0, x0, #0x1
   11654:	cmp	x2, x0
   11658:	b.ne	11648 <mpfr_mul@@Base+0x620>  // b.any
   1165c:	ldr	x0, [x27]
   11660:	neg	x6, x19
   11664:	and	x0, x6, x0
   11668:	mov	w25, w20
   1166c:	str	x0, [x27]
   11670:	b	11544 <mpfr_mul@@Base+0x51c>
   11674:	mov	x1, #0x2                   	// #2
   11678:	movk	x1, #0x8000, lsl #48
   1167c:	cmp	x24, x1
   11680:	b.eq	116d8 <mpfr_mul@@Base+0x6b0>  // b.none
   11684:	ldr	x2, [x2, #16]
   11688:	cmp	x2, x1
   1168c:	b.eq	116d8 <mpfr_mul@@Base+0x6b0>  // b.none
   11690:	ldr	w1, [x22, #8]
   11694:	cmp	x24, x0
   11698:	ldr	w3, [x23, #8]
   1169c:	mul	w1, w1, w3
   116a0:	b.ne	116c0 <mpfr_mul@@Base+0x698>  // b.any
   116a4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   116a8:	cmp	x2, x0
   116ac:	b.eq	116d8 <mpfr_mul@@Base+0x6b0>  // b.none
   116b0:	mov	w25, #0x0                   	// #0
   116b4:	str	w1, [x21, #8]
   116b8:	str	x24, [x21, #16]
   116bc:	b	115b4 <mpfr_mul@@Base+0x58c>
   116c0:	cmp	x2, x0
   116c4:	b.ne	11734 <mpfr_mul@@Base+0x70c>  // b.any
   116c8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   116cc:	cmp	x24, x0
   116d0:	b.ne	11de0 <mpfr_mul@@Base+0xdb8>  // b.any
   116d4:	nop
   116d8:	mrs	x1, tpidr_el0
   116dc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   116e0:	ldr	x2, [x0, #2576]
   116e4:	add	x0, x0, #0xa10
   116e8:	blr	x2
   116ec:	add	x0, x1, x0
   116f0:	mov	x1, #0x2                   	// #2
   116f4:	movk	x1, #0x8000, lsl #48
   116f8:	str	x1, [x21, #16]
   116fc:	mov	w25, #0x0                   	// #0
   11700:	ldr	w1, [x0]
   11704:	orr	w1, w1, #0x4
   11708:	str	w1, [x0]
   1170c:	b	115b4 <mpfr_mul@@Base+0x58c>
   11710:	mov	x1, #0x2                   	// #2
   11714:	movk	x1, #0x8000, lsl #48
   11718:	cmp	x5, x1
   1171c:	b.eq	116d8 <mpfr_mul@@Base+0x6b0>  // b.none
   11720:	ldr	w1, [x23, #8]
   11724:	cmp	x5, x0
   11728:	ldr	w0, [x22, #8]
   1172c:	mul	w1, w1, w0
   11730:	b.eq	11de0 <mpfr_mul@@Base+0xdb8>  // b.none
   11734:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   11738:	mov	w25, #0x0                   	// #0
   1173c:	str	w1, [x21, #8]
   11740:	str	x0, [x21, #16]
   11744:	b	115b4 <mpfr_mul@@Base+0x58c>
   11748:	ldr	x1, [x22, #24]
   1174c:	mov	x2, #0x40                  	// #64
   11750:	ldr	x0, [x23, #24]
   11754:	sub	x28, x2, x28
   11758:	ldr	x1, [x1]
   1175c:	mov	x8, #0x1                   	// #1
   11760:	ldr	x4, [x0]
   11764:	lsl	x8, x8, x28
   11768:	umulh	x6, x1, x4
   1176c:	sub	x2, x8, #0x1
   11770:	mul	x4, x1, x4
   11774:	ldr	x12, [x21, #24]
   11778:	tbnz	x6, #63, 11788 <mpfr_mul@@Base+0x760>
   1177c:	sub	x5, x5, #0x1
   11780:	extr	x6, x6, x4, #63
   11784:	lsl	x4, x4, #1
   11788:	ldr	w25, [x22, #8]
   1178c:	neg	x10, x8
   11790:	ldr	w11, [x23, #8]
   11794:	mrs	x7, tpidr_el0
   11798:	and	x9, x6, x10
   1179c:	str	x9, [x12]
   117a0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   117a4:	ldr	x3, [x0, #2544]
   117a8:	add	x0, x0, #0x9f0
   117ac:	blr	x3
   117b0:	sub	w1, w28, #0x1
   117b4:	mov	x3, #0x1                   	// #1
   117b8:	mul	w25, w25, w11
   117bc:	lsl	x3, x3, x1
   117c0:	ldr	x0, [x7, x0]
   117c4:	eor	x1, x2, x3
   117c8:	str	w25, [x21, #8]
   117cc:	and	x1, x1, x6
   117d0:	orr	x1, x1, x4
   117d4:	and	x3, x3, x6
   117d8:	cmp	x0, x5
   117dc:	b.lt	11418 <mpfr_mul@@Base+0x3f0>  // b.tstop
   117e0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   117e4:	ldr	x2, [x0, #2512]
   117e8:	add	x0, x0, #0x9d0
   117ec:	blr	x2
   117f0:	ldr	x0, [x7, x0]
   117f4:	cmp	x5, x0
   117f8:	b.lt	11e74 <mpfr_mul@@Base+0xe4c>  // b.tstop
   117fc:	str	x5, [x21, #16]
   11800:	orr	x0, x3, x1
   11804:	cbz	x0, 119c0 <mpfr_mul@@Base+0x998>
   11808:	cmp	w26, #0x5
   1180c:	b.eq	119c0 <mpfr_mul@@Base+0x998>  // b.none
   11810:	cbz	w26, 11e10 <mpfr_mul@@Base+0xde8>
   11814:	cmp	w26, #0x1
   11818:	b.eq	11ba8 <mpfr_mul@@Base+0xb80>  // b.none
   1181c:	add	w0, w26, w25, lsr #31
   11820:	cmp	w0, #0x3
   11824:	b.eq	11ba8 <mpfr_mul@@Base+0xb80>  // b.none
   11828:	ldr	x0, [x12]
   1182c:	adds	x0, x8, x0
   11830:	b.ne	11f68 <mpfr_mul@@Base+0xf40>  // b.any
   11834:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   11838:	str	x0, [x12]
   1183c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   11840:	ldr	x1, [x0, #2544]
   11844:	add	x0, x0, #0x9f0
   11848:	blr	x1
   1184c:	ldr	x0, [x7, x0]
   11850:	cmp	x5, x0
   11854:	b.ge	11418 <mpfr_mul@@Base+0x3f0>  // b.tcont
   11858:	add	x24, x5, #0x1
   1185c:	str	x24, [x21, #16]
   11860:	cbz	w25, 115b4 <mpfr_mul@@Base+0x58c>
   11864:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   11868:	ldr	x1, [x0, #2576]
   1186c:	add	x0, x0, #0xa10
   11870:	blr	x1
   11874:	add	x0, x7, x0
   11878:	ldr	w1, [x0]
   1187c:	orr	w1, w1, #0x8
   11880:	str	w1, [x0]
   11884:	b	115b4 <mpfr_mul@@Base+0x58c>
   11888:	ldr	x2, [x22, #24]
   1188c:	mov	x1, #0x80                  	// #128
   11890:	ldr	x0, [x23, #24]
   11894:	sub	x28, x1, x28
   11898:	ldp	x11, x6, [x2]
   1189c:	mov	x4, #0x1                   	// #1
   118a0:	ldp	x10, x7, [x0]
   118a4:	umulh	x1, x6, x10
   118a8:	lsl	x8, x4, x28
   118ac:	sub	x2, x8, #0x1
   118b0:	umulh	x3, x6, x7
   118b4:	mov	x14, x4
   118b8:	ldr	x9, [x21, #24]
   118bc:	mul	x0, x6, x7
   118c0:	adds	x0, x0, x1
   118c4:	cinc	x3, x3, cs  // cs = hs, nlast
   118c8:	umulh	x1, x11, x7
   118cc:	adds	x1, x0, x1
   118d0:	add	x0, x1, #0x2
   118d4:	cinc	x3, x3, cs  // cs = hs, nlast
   118d8:	and	x0, x0, x2, lsr #2
   118dc:	cmp	x0, #0x2
   118e0:	b.hi	11928 <mpfr_mul@@Base+0x900>  // b.pmore
   118e4:	mul	x6, x6, x10
   118e8:	umulh	x0, x11, x10
   118ec:	adds	x6, x6, x0
   118f0:	mul	x7, x7, x11
   118f4:	cinc	x1, x1, cs  // cs = hs, nlast
   118f8:	cset	w0, cs  // cs = hs, nlast
   118fc:	cmp	x1, #0x0
   11900:	mul	x4, x10, x11
   11904:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   11908:	cinc	x3, x3, ne  // ne = any
   1190c:	adds	x6, x7, x6
   11910:	cinc	x1, x1, cs  // cs = hs, nlast
   11914:	cset	w0, cs  // cs = hs, nlast
   11918:	cmp	x1, #0x0
   1191c:	mov	x14, x6
   11920:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   11924:	cinc	x3, x3, ne  // ne = any
   11928:	tbnz	x3, #63, 1193c <mpfr_mul@@Base+0x914>
   1192c:	sub	x5, x5, #0x1
   11930:	extr	x3, x3, x1, #63
   11934:	extr	x1, x1, x14, #63
   11938:	lsl	x14, x14, #1
   1193c:	ldr	w25, [x22, #8]
   11940:	neg	x13, x8
   11944:	ldr	w12, [x23, #8]
   11948:	mrs	x7, tpidr_el0
   1194c:	and	x10, x1, x13
   11950:	stp	x10, x3, [x9]
   11954:	sub	w11, w28, #0x1
   11958:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1195c:	ldr	x15, [x0, #2544]
   11960:	add	x0, x0, #0x9f0
   11964:	blr	x15
   11968:	mov	x6, #0x1                   	// #1
   1196c:	mul	w25, w25, w12
   11970:	lsl	x6, x6, x11
   11974:	ldr	x0, [x7, x0]
   11978:	eor	x2, x2, x6
   1197c:	str	w25, [x21, #8]
   11980:	orr	x4, x4, x14
   11984:	and	x2, x2, x1
   11988:	cmp	x0, x5
   1198c:	orr	x2, x2, x4
   11990:	and	x4, x6, x1
   11994:	b.lt	11418 <mpfr_mul@@Base+0x3f0>  // b.tstop
   11998:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1199c:	ldr	x11, [x0, #2512]
   119a0:	add	x0, x0, #0x9d0
   119a4:	blr	x11
   119a8:	ldr	x0, [x7, x0]
   119ac:	cmp	x5, x0
   119b0:	b.lt	11eb8 <mpfr_mul@@Base+0xe90>  // b.tstop
   119b4:	str	x5, [x21, #16]
   119b8:	orr	x0, x4, x2
   119bc:	cbnz	x0, 11ac8 <mpfr_mul@@Base+0xaa0>
   119c0:	mov	w25, #0x0                   	// #0
   119c4:	b	115b4 <mpfr_mul@@Base+0x58c>
   119c8:	mov	x1, x7
   119cc:	mov	x0, x22
   119d0:	mov	x7, x4
   119d4:	mov	x22, x23
   119d8:	mov	x4, x1
   119dc:	mov	x23, x0
   119e0:	b	110f8 <mpfr_mul@@Base+0xd0>
   119e4:	mov	x1, x10
   119e8:	add	x0, x29, #0xd8
   119ec:	stp	x8, x5, [x29, #152]
   119f0:	stp	x9, x6, [x29, #168]
   119f4:	stp	x4, x7, [x29, #184]
   119f8:	str	x10, [x29, #200]
   119fc:	bl	bdc0 <mpfr_tmp_allocate@plt>
   11a00:	mov	x24, x0
   11a04:	ldp	x8, x5, [x29, #152]
   11a08:	ldp	x9, x6, [x29, #168]
   11a0c:	ldp	x4, x7, [x29, #184]
   11a10:	ldr	x10, [x29, #200]
   11a14:	b	110f0 <mpfr_mul@@Base+0xc8>
   11a18:	sub	x19, x7, x19
   11a1c:	lsl	x19, x19, #3
   11a20:	add	x0, x27, x19
   11a24:	cmp	x0, x25
   11a28:	b.eq	11a38 <mpfr_mul@@Base+0xa10>  // b.none
   11a2c:	lsl	x2, x9, #3
   11a30:	mov	x1, x25
   11a34:	bl	ba10 <memcpy@plt>
   11a38:	mov	x2, x19
   11a3c:	mov	x0, x27
   11a40:	mov	w1, #0x0                   	// #0
   11a44:	mov	w25, #0x0                   	// #0
   11a48:	bl	c110 <memset@plt>
   11a4c:	b	11544 <mpfr_mul@@Base+0x51c>
   11a50:	cbnz	w26, 11a7c <mpfr_mul@@Base+0xa54>
   11a54:	cmp	x0, x24
   11a58:	b.gt	1236c <mpfr_mul@@Base+0x1344>
   11a5c:	mov	x0, x22
   11a60:	bl	bf00 <mpfr_powerof2_raw@plt>
   11a64:	mov	w26, w0
   11a68:	cbz	w0, 11a7c <mpfr_mul@@Base+0xa54>
   11a6c:	mov	x0, x23
   11a70:	bl	bf00 <mpfr_powerof2_raw@plt>
   11a74:	cmp	w0, #0x0
   11a78:	cset	w26, ne  // ne = any
   11a7c:	mov	w2, w20
   11a80:	mov	w1, w26
   11a84:	mov	x0, x21
   11a88:	bl	c3c0 <mpfr_underflow@plt>
   11a8c:	mov	w25, w0
   11a90:	b	115b4 <mpfr_mul@@Base+0x58c>
   11a94:	bl	c410 <mpfr_tmp_free@plt>
   11a98:	b	1154c <mpfr_mul@@Base+0x524>
   11a9c:	cmp	x27, x1
   11aa0:	b.eq	1165c <mpfr_mul@@Base+0x634>  // b.none
   11aa4:	cmp	x7, x0
   11aa8:	b.le	1165c <mpfr_mul@@Base+0x634>
   11aac:	nop
   11ab0:	ldr	x0, [x1, x4, lsl #3]
   11ab4:	str	x0, [x27, x4, lsl #3]
   11ab8:	cmp	x7, x4
   11abc:	add	x4, x4, #0x1
   11ac0:	b.gt	11ab0 <mpfr_mul@@Base+0xa88>
   11ac4:	b	1165c <mpfr_mul@@Base+0x634>
   11ac8:	cmp	w26, #0x5
   11acc:	b.eq	119c0 <mpfr_mul@@Base+0x998>  // b.none
   11ad0:	cbz	w26, 11e30 <mpfr_mul@@Base+0xe08>
   11ad4:	cmp	w26, #0x1
   11ad8:	b.eq	11ba8 <mpfr_mul@@Base+0xb80>  // b.none
   11adc:	add	w0, w26, w25, lsr #31
   11ae0:	cmp	w0, #0x3
   11ae4:	b.eq	11ba8 <mpfr_mul@@Base+0xb80>  // b.none
   11ae8:	ldr	x0, [x9]
   11aec:	add	x8, x8, x0
   11af0:	ldr	x0, [x9, #8]
   11af4:	str	x8, [x9]
   11af8:	cmp	x8, #0x0
   11afc:	cinc	x0, x0, eq  // eq = none
   11b00:	cbnz	x0, 11f70 <mpfr_mul@@Base+0xf48>
   11b04:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   11b08:	ldr	x1, [x0, #2544]
   11b0c:	add	x0, x0, #0x9f0
   11b10:	blr	x1
   11b14:	ldr	x0, [x7, x0]
   11b18:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   11b1c:	str	x1, [x9, #8]
   11b20:	cmp	x5, x0
   11b24:	b.lt	11858 <mpfr_mul@@Base+0x830>  // b.tstop
   11b28:	b	11418 <mpfr_mul@@Base+0x3f0>
   11b2c:	cmp	x6, #0x0
   11b30:	sub	x0, x4, #0x1
   11b34:	ccmp	x0, #0x0, #0x4, eq  // eq = none
   11b38:	b.eq	12088 <mpfr_mul@@Base+0x1060>  // b.none
   11b3c:	mvn	x4, x4
   11b40:	add	x4, x1, x4, lsl #3
   11b44:	nop
   11b48:	ldr	x5, [x4, x0, lsl #3]
   11b4c:	subs	x0, x0, #0x1
   11b50:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   11b54:	b.eq	11b48 <mpfr_mul@@Base+0xb20>  // b.none
   11b58:	mov	x19, #0x1                   	// #1
   11b5c:	b	111d8 <mpfr_mul@@Base+0x1b0>
   11b60:	add	x0, x29, #0x100
   11b64:	mov	x3, #0x3                   	// #3
   11b68:	str	x5, [x29, #200]
   11b6c:	bl	c470 <__gmpn_mul_n@plt>
   11b70:	ldp	x0, x6, [x29, #256]
   11b74:	ldr	x5, [x29, #200]
   11b78:	ldp	x9, x3, [x29, #272]
   11b7c:	orr	x6, x6, x0
   11b80:	ldp	x4, x10, [x29, #288]
   11b84:	b	1130c <mpfr_mul@@Base+0x2e4>
   11b88:	mov	x19, #0x1                   	// #1
   11b8c:	b	1151c <mpfr_mul@@Base+0x4f4>
   11b90:	cbz	x6, 11ba8 <mpfr_mul@@Base+0xb80>
   11b94:	ldr	x0, [x24]
   11b98:	cbnz	x1, 113d0 <mpfr_mul@@Base+0x3a8>
   11b9c:	lsr	x28, x0, x28
   11ba0:	tbnz	w28, #0, 113d0 <mpfr_mul@@Base+0x3a8>
   11ba4:	nop
   11ba8:	cbz	w25, 119c0 <mpfr_mul@@Base+0x998>
   11bac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   11bb0:	ldr	x1, [x0, #2576]
   11bb4:	add	x0, x0, #0xa10
   11bb8:	blr	x1
   11bbc:	add	x0, x7, x0
   11bc0:	neg	w25, w25
   11bc4:	ldr	w1, [x0]
   11bc8:	orr	w1, w1, #0x8
   11bcc:	str	w1, [x0]
   11bd0:	b	115b4 <mpfr_mul@@Base+0x58c>
   11bd4:	ldr	x1, [x22, #24]
   11bd8:	ldr	x0, [x23, #24]
   11bdc:	ldr	x1, [x1]
   11be0:	ldr	x0, [x0]
   11be4:	umulh	x2, x1, x0
   11be8:	ldr	x3, [x21, #24]
   11bec:	mul	x1, x1, x0
   11bf0:	tbnz	x2, #63, 11c00 <mpfr_mul@@Base+0xbd8>
   11bf4:	sub	x5, x5, #0x1
   11bf8:	extr	x2, x2, x1, #63
   11bfc:	lsl	x1, x1, #1
   11c00:	ldr	w25, [x22, #8]
   11c04:	mrs	x7, tpidr_el0
   11c08:	ldr	w4, [x23, #8]
   11c0c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   11c10:	ldr	x6, [x0, #2544]
   11c14:	add	x0, x0, #0x9f0
   11c18:	blr	x6
   11c1c:	str	x2, [x3]
   11c20:	ldr	x0, [x7, x0]
   11c24:	mul	w25, w25, w4
   11c28:	str	w25, [x21, #8]
   11c2c:	cmp	x0, x5
   11c30:	b.lt	11418 <mpfr_mul@@Base+0x3f0>  // b.tstop
   11c34:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   11c38:	ldr	x4, [x0, #2512]
   11c3c:	add	x0, x0, #0x9d0
   11c40:	blr	x4
   11c44:	ldr	x0, [x7, x0]
   11c48:	cmp	x5, x0
   11c4c:	b.lt	11ffc <mpfr_mul@@Base+0xfd4>  // b.tstop
   11c50:	str	x5, [x21, #16]
   11c54:	cbz	x1, 119c0 <mpfr_mul@@Base+0x998>
   11c58:	cmp	w26, #0x5
   11c5c:	b.eq	119c0 <mpfr_mul@@Base+0x998>  // b.none
   11c60:	cbnz	w26, 11f00 <mpfr_mul@@Base+0xed8>
   11c64:	tbz	x1, #63, 11ba8 <mpfr_mul@@Base+0xb80>
   11c68:	tst	x1, #0x7fffffffffffffff
   11c6c:	ldr	x0, [x3]
   11c70:	b.ne	11c78 <mpfr_mul@@Base+0xc50>  // b.any
   11c74:	tbz	w0, #0, 11ba8 <mpfr_mul@@Base+0xb80>
   11c78:	adds	x0, x0, #0x1
   11c7c:	b.ne	1214c <mpfr_mul@@Base+0x1124>  // b.any
   11c80:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   11c84:	str	x0, [x3]
   11c88:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   11c8c:	ldr	x1, [x0, #2544]
   11c90:	add	x0, x0, #0x9f0
   11c94:	blr	x1
   11c98:	ldr	x0, [x7, x0]
   11c9c:	cmp	x5, x0
   11ca0:	b.lt	11858 <mpfr_mul@@Base+0x830>  // b.tstop
   11ca4:	b	11418 <mpfr_mul@@Base+0x3f0>
   11ca8:	ldr	x2, [x1]
   11cac:	cbz	x2, 11f78 <mpfr_mul@@Base+0xf50>
   11cb0:	ldr	x0, [x11]
   11cb4:	cbz	x0, 1207c <mpfr_mul@@Base+0x1054>
   11cb8:	ldr	x3, [x21]
   11cbc:	mov	w12, #0x40                  	// #64
   11cc0:	sub	x3, x3, #0x1
   11cc4:	asr	x3, x3, #6
   11cc8:	add	x3, x3, #0x2
   11ccc:	cmp	x4, x3
   11cd0:	csel	x3, x4, x3, le
   11cd4:	add	x13, x3, #0x1
   11cd8:	sub	x2, x7, x3
   11cdc:	clz	x0, x13
   11ce0:	lsl	x14, x3, #6
   11ce4:	sub	w12, w12, w0
   11ce8:	sub	x15, x4, x3
   11cec:	add	x25, x25, x2, lsl #3
   11cf0:	sub	x12, x14, w12, sxtw
   11cf4:	add	x11, x11, x15, lsl #3
   11cf8:	sub	x0, x12, #0x4
   11cfc:	cmp	x28, x0
   11d00:	b.ge	12094 <mpfr_mul@@Base+0x106c>  // b.tcont
   11d04:	mov	x13, x3
   11d08:	lsl	x27, x3, #1
   11d0c:	sub	x14, x6, x27
   11d10:	stp	x8, x14, [x29, #120]
   11d14:	cmp	x22, x23
   11d18:	stp	x5, x9, [x29, #136]
   11d1c:	add	x0, x24, x14, lsl #3
   11d20:	stp	x6, x13, [x29, #152]
   11d24:	stp	x12, x4, [x29, #168]
   11d28:	stp	x7, x10, [x29, #184]
   11d2c:	b.eq	11e48 <mpfr_mul@@Base+0xe20>  // b.none
   11d30:	mov	x2, x11
   11d34:	mov	x1, x25
   11d38:	str	x3, [x29, #200]
   11d3c:	bl	bc80 <mpfr_mulhigh_n@plt>
   11d40:	ldp	x8, x14, [x29, #120]
   11d44:	ldp	x5, x9, [x29, #136]
   11d48:	ldp	x6, x13, [x29, #152]
   11d4c:	ldp	x12, x4, [x29, #168]
   11d50:	ldp	x7, x10, [x29, #184]
   11d54:	ldr	x3, [x29, #200]
   11d58:	add	x10, x24, x10
   11d5c:	ldur	x0, [x10, #-8]
   11d60:	lsr	x27, x0, #63
   11d64:	tbz	x0, #63, 1203c <mpfr_mul@@Base+0x1014>
   11d68:	sub	x6, x6, x9
   11d6c:	cmp	w26, #0x5
   11d70:	add	x25, x24, x6, lsl #3
   11d74:	b.eq	11e28 <mpfr_mul@@Base+0xe00>  // b.none
   11d78:	cmp	w26, #0x0
   11d7c:	cinc	x28, x28, eq  // eq = none
   11d80:	sub	x2, x12, #0x1
   11d84:	mov	x1, x9
   11d88:	mov	x3, x28
   11d8c:	add	x2, x2, x27
   11d90:	mov	x0, x25
   11d94:	stp	x8, x5, [x29, #168]
   11d98:	stp	x4, x7, [x29, #184]
   11d9c:	str	x9, [x29, #200]
   11da0:	bl	c370 <mpfr_round_p@plt>
   11da4:	ldp	x8, x5, [x29, #168]
   11da8:	ldp	x4, x7, [x29, #184]
   11dac:	ldr	x9, [x29, #200]
   11db0:	cbnz	w0, 11148 <mpfr_mul@@Base+0x120>
   11db4:	ldr	x1, [x22, #24]
   11db8:	ldr	x27, [x23, #24]
   11dbc:	b	11120 <mpfr_mul@@Base+0xf8>
   11dc0:	mov	x2, x9
   11dc4:	mov	x1, x25
   11dc8:	mov	x0, x25
   11dcc:	mov	w3, #0x1                   	// #1
   11dd0:	bl	bcc0 <__gmpn_lshift@plt>
   11dd4:	ldp	x8, x5, [x29, #184]
   11dd8:	ldr	x9, [x29, #200]
   11ddc:	b	11148 <mpfr_mul@@Base+0x120>
   11de0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   11de4:	mov	w25, #0x0                   	// #0
   11de8:	str	w1, [x21, #8]
   11dec:	str	x0, [x21, #16]
   11df0:	b	115b4 <mpfr_mul@@Base+0x58c>
   11df4:	umulh	x1, x2, x10
   11df8:	adds	x2, x0, x3
   11dfc:	adc	x0, x1, xzr
   11e00:	str	x0, [x24, #16]
   11e04:	str	x2, [x7]
   11e08:	ldr	x0, [x24, #16]
   11e0c:	b	114c4 <mpfr_mul@@Base+0x49c>
   11e10:	cbz	x3, 11ba8 <mpfr_mul@@Base+0xb80>
   11e14:	ldr	x0, [x12]
   11e18:	cbnz	x1, 1182c <mpfr_mul@@Base+0x804>
   11e1c:	lsr	x28, x0, x28
   11e20:	tbz	w28, #0, 11ba8 <mpfr_mul@@Base+0xb80>
   11e24:	b	1182c <mpfr_mul@@Base+0x804>
   11e28:	mov	w26, #0x1                   	// #1
   11e2c:	b	11d80 <mpfr_mul@@Base+0xd58>
   11e30:	cbz	x4, 11ba8 <mpfr_mul@@Base+0xb80>
   11e34:	ldr	x0, [x9]
   11e38:	cbnz	x2, 11aec <mpfr_mul@@Base+0xac4>
   11e3c:	lsr	x28, x0, x28
   11e40:	tbz	w28, #0, 11ba8 <mpfr_mul@@Base+0xb80>
   11e44:	b	11aec <mpfr_mul@@Base+0xac4>
   11e48:	mov	x2, x3
   11e4c:	mov	x1, x25
   11e50:	str	x3, [x29, #200]
   11e54:	bl	c490 <mpfr_sqrhigh_n@plt>
   11e58:	ldp	x8, x14, [x29, #120]
   11e5c:	ldp	x5, x9, [x29, #136]
   11e60:	ldp	x6, x13, [x29, #152]
   11e64:	ldp	x12, x4, [x29, #168]
   11e68:	ldp	x7, x10, [x29, #184]
   11e6c:	ldr	x3, [x29, #200]
   11e70:	b	11d58 <mpfr_mul@@Base+0xd30>
   11e74:	sub	x0, x0, #0x1
   11e78:	cmp	x10, x9
   11e7c:	ccmp	x5, x0, #0x0, eq  // eq = none
   11e80:	b.ne	12430 <mpfr_mul@@Base+0x1408>  // b.any
   11e84:	cmp	w26, #0x0
   11e88:	ccmp	x3, #0x0, #0x4, eq  // eq = none
   11e8c:	b.ne	1210c <mpfr_mul@@Base+0x10e4>  // b.any
   11e90:	cmp	w26, #0x4
   11e94:	b.eq	12124 <mpfr_mul@@Base+0x10fc>  // b.none
   11e98:	mvn	w2, w25
   11e9c:	add	w2, w26, w2, lsr #31
   11ea0:	cmp	w2, #0x3
   11ea4:	b.ne	12430 <mpfr_mul@@Base+0x1408>  // b.any
   11ea8:	orr	x2, x3, x1
   11eac:	cbz	x2, 12430 <mpfr_mul@@Base+0x1408>
   11eb0:	str	x5, [x21, #16]
   11eb4:	b	11810 <mpfr_mul@@Base+0x7e8>
   11eb8:	sub	x0, x0, #0x1
   11ebc:	cmp	x5, x0
   11ec0:	ccmn	x3, #0x1, #0x0, eq  // eq = none
   11ec4:	ccmp	x13, x10, #0x0, eq  // eq = none
   11ec8:	b.ne	12400 <mpfr_mul@@Base+0x13d8>  // b.any
   11ecc:	cmp	w26, #0x0
   11ed0:	ccmp	x4, #0x0, #0x4, eq  // eq = none
   11ed4:	b.ne	1211c <mpfr_mul@@Base+0x10f4>  // b.any
   11ed8:	cmp	w26, #0x4
   11edc:	b.eq	12134 <mpfr_mul@@Base+0x110c>  // b.none
   11ee0:	mvn	w10, w25
   11ee4:	add	w10, w26, w10, lsr #31
   11ee8:	cmp	w10, #0x3
   11eec:	b.ne	12400 <mpfr_mul@@Base+0x13d8>  // b.any
   11ef0:	orr	x10, x4, x2
   11ef4:	cbz	x10, 12400 <mpfr_mul@@Base+0x13d8>
   11ef8:	str	x5, [x21, #16]
   11efc:	b	11ad0 <mpfr_mul@@Base+0xaa8>
   11f00:	cmp	w26, #0x1
   11f04:	b.eq	11ba8 <mpfr_mul@@Base+0xb80>  // b.none
   11f08:	add	w0, w26, w25, lsr #31
   11f0c:	cmp	w0, #0x3
   11f10:	b.eq	11ba8 <mpfr_mul@@Base+0xb80>  // b.none
   11f14:	ldr	x0, [x3]
   11f18:	b	11c78 <mpfr_mul@@Base+0xc50>
   11f1c:	cmp	x11, x8
   11f20:	and	x8, x10, x4
   11f24:	sub	x0, x0, #0x1
   11f28:	ccmn	x8, #0x1, #0x0, eq  // eq = none
   11f2c:	ccmp	x5, x0, #0x0, eq  // eq = none
   11f30:	b.ne	12374 <mpfr_mul@@Base+0x134c>  // b.any
   11f34:	cmp	w26, #0x0
   11f38:	ccmp	x6, #0x0, #0x4, eq  // eq = none
   11f3c:	b.ne	12144 <mpfr_mul@@Base+0x111c>  // b.any
   11f40:	cmp	w26, #0x4
   11f44:	b.eq	12154 <mpfr_mul@@Base+0x112c>  // b.none
   11f48:	mvn	w8, w25
   11f4c:	add	w8, w26, w8, lsr #31
   11f50:	cmp	w8, #0x3
   11f54:	b.ne	12374 <mpfr_mul@@Base+0x134c>  // b.any
   11f58:	orr	x8, x6, x1
   11f5c:	cbz	x8, 12374 <mpfr_mul@@Base+0x134c>
   11f60:	str	x5, [x21, #16]
   11f64:	b	113b4 <mpfr_mul@@Base+0x38c>
   11f68:	str	x0, [x12]
   11f6c:	b	11860 <mpfr_mul@@Base+0x838>
   11f70:	str	x0, [x9, #8]
   11f74:	b	11860 <mpfr_mul@@Base+0x838>
   11f78:	ldr	x0, [x1, #8]
   11f7c:	cbnz	x0, 11cb0 <mpfr_mul@@Base+0xc88>
   11f80:	ldr	x0, [x29, #216]
   11f84:	cbnz	x0, 12310 <mpfr_mul@@Base+0x12e8>
   11f88:	cbnz	x2, 11fa0 <mpfr_mul@@Base+0xf78>
   11f8c:	sub	x7, x7, #0x1
   11f90:	ldr	x2, [x1, #8]!
   11f94:	b	11f88 <mpfr_mul@@Base+0xf60>
   11f98:	add	x27, x27, #0x8
   11f9c:	sub	x4, x4, #0x1
   11fa0:	ldr	x0, [x27]
   11fa4:	cbz	x0, 11f98 <mpfr_mul@@Base+0xf70>
   11fa8:	ldr	w2, [x22, #8]
   11fac:	lsl	x7, x7, #6
   11fb0:	ldr	x0, [x22, #16]
   11fb4:	str	x7, [x29, #224]
   11fb8:	str	w2, [x29, #232]
   11fbc:	cmp	x22, x23
   11fc0:	stp	x0, x1, [x29, #240]
   11fc4:	b.eq	122f4 <mpfr_mul@@Base+0x12cc>  // b.none
   11fc8:	ldr	w6, [x23, #8]
   11fcc:	lsl	x4, x4, #6
   11fd0:	ldr	x5, [x23, #16]
   11fd4:	mov	w3, w26
   11fd8:	mov	x0, x21
   11fdc:	add	x2, x29, #0x100
   11fe0:	add	x1, x29, #0xe0
   11fe4:	str	x4, [x29, #256]
   11fe8:	str	w6, [x29, #264]
   11fec:	stp	x5, x27, [x29, #272]
   11ff0:	bl	11028 <mpfr_mul@@Base>
   11ff4:	mov	w25, w0
   11ff8:	b	115b4 <mpfr_mul@@Base+0x58c>
   11ffc:	sub	x0, x0, #0x1
   12000:	cmp	x5, x0
   12004:	ccmn	x2, #0x1, #0x0, eq  // eq = none
   12008:	b.ne	123e0 <mpfr_mul@@Base+0x13b8>  // b.any
   1200c:	cmp	w26, #0x0
   12010:	ccmp	x1, #0x0, #0x0, eq  // eq = none
   12014:	b.lt	12034 <mpfr_mul@@Base+0x100c>  // b.tstop
   12018:	cmp	w26, #0x4
   1201c:	b.eq	12240 <mpfr_mul@@Base+0x1218>  // b.none
   12020:	mvn	w4, w25
   12024:	add	w4, w26, w4, lsr #31
   12028:	cmp	w4, #0x3
   1202c:	b.ne	123e0 <mpfr_mul@@Base+0x13b8>  // b.any
   12030:	cbz	x1, 123e0 <mpfr_mul@@Base+0x13b8>
   12034:	str	x5, [x21, #16]
   12038:	b	11c60 <mpfr_mul@@Base+0xc38>
   1203c:	add	x13, x14, x13
   12040:	add	x2, x3, #0x1
   12044:	mov	w3, #0x1                   	// #1
   12048:	stp	x8, x5, [x29, #152]
   1204c:	add	x13, x24, x13, lsl #3
   12050:	sub	x1, x13, #0x8
   12054:	stp	x9, x6, [x29, #168]
   12058:	mov	x0, x1
   1205c:	stp	x12, x4, [x29, #184]
   12060:	str	x7, [x29, #200]
   12064:	bl	bcc0 <__gmpn_lshift@plt>
   12068:	ldp	x8, x5, [x29, #152]
   1206c:	ldp	x9, x6, [x29, #168]
   12070:	ldp	x12, x4, [x29, #184]
   12074:	ldr	x7, [x29, #200]
   12078:	b	11d68 <mpfr_mul@@Base+0xd40>
   1207c:	ldr	x0, [x11, #8]
   12080:	cbnz	x0, 11cb8 <mpfr_mul@@Base+0xc90>
   12084:	b	11f80 <mpfr_mul@@Base+0xf58>
   12088:	mov	x5, x6
   1208c:	mov	x19, #0x1                   	// #1
   12090:	b	111d8 <mpfr_mul@@Base+0x1b0>
   12094:	add	x12, x12, #0x3b
   12098:	cmp	x28, x12
   1209c:	ccmp	x7, #0x15, #0x4, le
   120a0:	b.le	1225c <mpfr_mul@@Base+0x1234>
   120a4:	cmp	x7, x3
   120a8:	b.le	12164 <mpfr_mul@@Base+0x113c>
   120ac:	sub	x25, x25, #0x8
   120b0:	cmp	x22, x23
   120b4:	b.eq	120c4 <mpfr_mul@@Base+0x109c>  // b.none
   120b8:	cmp	x4, x3
   120bc:	b.le	121d0 <mpfr_mul@@Base+0x11a8>
   120c0:	sub	x11, x11, #0x8
   120c4:	add	x0, x3, #0x2
   120c8:	mov	w12, #0x40                  	// #64
   120cc:	clz	x0, x0
   120d0:	add	x14, x14, #0x40
   120d4:	sub	w12, w12, w0
   120d8:	cmp	x6, x13, lsl #1
   120dc:	lsl	x27, x13, #1
   120e0:	sub	x12, x14, w12, sxtw
   120e4:	b.ge	1229c <mpfr_mul@@Base+0x1274>  // b.tcont
   120e8:	lsl	x1, x13, #4
   120ec:	cmp	x1, #0x4, lsl #12
   120f0:	b.hi	12268 <mpfr_mul@@Base+0x1240>  // b.pmore
   120f4:	sub	sp, sp, x1
   120f8:	mov	x0, sp
   120fc:	sub	x24, x27, x6
   12100:	mov	x3, x13
   12104:	add	x24, x0, x24, lsl #3
   12108:	b	11d0c <mpfr_mul@@Base+0xce4>
   1210c:	str	x5, [x21, #16]
   12110:	b	11e14 <mpfr_mul@@Base+0xdec>
   12114:	str	x0, [x24, #16]
   12118:	b	11860 <mpfr_mul@@Base+0x838>
   1211c:	str	x5, [x21, #16]
   12120:	b	11e34 <mpfr_mul@@Base+0xe0c>
   12124:	orr	x3, x3, x1
   12128:	cbz	x3, 12244 <mpfr_mul@@Base+0x121c>
   1212c:	str	x5, [x21, #16]
   12130:	b	1181c <mpfr_mul@@Base+0x7f4>
   12134:	orr	x2, x4, x2
   12138:	cbz	x2, 12244 <mpfr_mul@@Base+0x121c>
   1213c:	str	x5, [x21, #16]
   12140:	b	11adc <mpfr_mul@@Base+0xab4>
   12144:	str	x5, [x21, #16]
   12148:	b	11b94 <mpfr_mul@@Base+0xb6c>
   1214c:	str	x0, [x3]
   12150:	b	11860 <mpfr_mul@@Base+0x838>
   12154:	orr	x1, x6, x1
   12158:	cbz	x1, 12244 <mpfr_mul@@Base+0x121c>
   1215c:	str	x5, [x21, #16]
   12160:	b	113c0 <mpfr_mul@@Base+0x398>
   12164:	lsl	x0, x13, #3
   12168:	cmp	x0, #0x4, lsl #12
   1216c:	b.hi	122a4 <mpfr_mul@@Base+0x127c>  // b.pmore
   12170:	add	x0, x0, #0xf
   12174:	and	x0, x0, #0xfffffffffffffff0
   12178:	sub	sp, sp, x0
   1217c:	mov	x25, sp
   12180:	mov	x0, x25
   12184:	add	x1, x1, x2, lsl #3
   12188:	str	xzr, [x0], #8
   1218c:	cmp	x0, x1
   12190:	b.eq	120b0 <mpfr_mul@@Base+0x1088>  // b.none
   12194:	lsl	x2, x3, #3
   12198:	stp	x15, x8, [x29, #112]
   1219c:	stp	x5, x9, [x29, #128]
   121a0:	stp	x6, x13, [x29, #144]
   121a4:	stp	x11, x4, [x29, #160]
   121a8:	stp	x7, x14, [x29, #176]
   121ac:	stp	x10, x3, [x29, #192]
   121b0:	bl	ba10 <memcpy@plt>
   121b4:	ldp	x15, x8, [x29, #112]
   121b8:	ldp	x5, x9, [x29, #128]
   121bc:	ldp	x6, x13, [x29, #144]
   121c0:	ldp	x11, x4, [x29, #160]
   121c4:	ldp	x7, x14, [x29, #176]
   121c8:	ldp	x10, x3, [x29, #192]
   121cc:	b	120b0 <mpfr_mul@@Base+0x1088>
   121d0:	lsl	x1, x13, #3
   121d4:	cmp	x1, #0x4, lsl #12
   121d8:	b.hi	1232c <mpfr_mul@@Base+0x1304>  // b.pmore
   121dc:	add	x0, x1, #0xf
   121e0:	and	x0, x0, #0xfffffffffffffff0
   121e4:	sub	sp, sp, x0
   121e8:	mov	x11, sp
   121ec:	mov	x0, x11
   121f0:	ldr	x1, [x23, #24]
   121f4:	str	xzr, [x0], #8
   121f8:	add	x1, x1, x15, lsl #3
   121fc:	cmp	x0, x1
   12200:	b.eq	120c4 <mpfr_mul@@Base+0x109c>  // b.none
   12204:	lsl	x2, x3, #3
   12208:	stp	x8, x5, [x29, #120]
   1220c:	stp	x9, x6, [x29, #136]
   12210:	stp	x13, x11, [x29, #152]
   12214:	stp	x4, x7, [x29, #168]
   12218:	stp	x14, x10, [x29, #184]
   1221c:	str	x3, [x29, #200]
   12220:	bl	ba10 <memcpy@plt>
   12224:	ldp	x8, x5, [x29, #120]
   12228:	ldp	x9, x6, [x29, #136]
   1222c:	ldp	x13, x11, [x29, #152]
   12230:	ldp	x4, x7, [x29, #168]
   12234:	ldp	x14, x10, [x29, #184]
   12238:	ldr	x3, [x29, #200]
   1223c:	b	120c4 <mpfr_mul@@Base+0x109c>
   12240:	cbnz	x1, 12034 <mpfr_mul@@Base+0x100c>
   12244:	mov	w2, w25
   12248:	mov	w1, w26
   1224c:	mov	x0, x21
   12250:	bl	c3c0 <mpfr_underflow@plt>
   12254:	mov	w25, w0
   12258:	b	115b4 <mpfr_mul@@Base+0x58c>
   1225c:	sub	x6, x6, x9
   12260:	add	x25, x24, x6, lsl #3
   12264:	b	11120 <mpfr_mul@@Base+0xf8>
   12268:	add	x0, x29, #0xd8
   1226c:	stp	x8, x5, [x29, #128]
   12270:	stp	x9, x6, [x29, #144]
   12274:	stp	x13, x12, [x29, #160]
   12278:	stp	x11, x4, [x29, #176]
   1227c:	stp	x7, x10, [x29, #192]
   12280:	bl	bdc0 <mpfr_tmp_allocate@plt>
   12284:	ldp	x8, x5, [x29, #128]
   12288:	ldp	x9, x6, [x29, #144]
   1228c:	ldp	x13, x12, [x29, #160]
   12290:	ldp	x11, x4, [x29, #176]
   12294:	ldp	x7, x10, [x29, #192]
   12298:	b	120fc <mpfr_mul@@Base+0x10d4>
   1229c:	mov	x3, x13
   122a0:	b	11d0c <mpfr_mul@@Base+0xce4>
   122a4:	mov	x1, x0
   122a8:	add	x0, x29, #0xd8
   122ac:	stp	x15, x2, [x29, #104]
   122b0:	stp	x8, x5, [x29, #120]
   122b4:	stp	x9, x6, [x29, #136]
   122b8:	stp	x13, x3, [x29, #152]
   122bc:	stp	x11, x4, [x29, #168]
   122c0:	stp	x7, x14, [x29, #184]
   122c4:	str	x10, [x29, #200]
   122c8:	bl	bdc0 <mpfr_tmp_allocate@plt>
   122cc:	mov	x25, x0
   122d0:	ldr	x1, [x22, #24]
   122d4:	ldp	x15, x2, [x29, #104]
   122d8:	ldp	x8, x5, [x29, #120]
   122dc:	ldp	x9, x6, [x29, #136]
   122e0:	ldp	x13, x3, [x29, #152]
   122e4:	ldp	x11, x4, [x29, #168]
   122e8:	ldp	x7, x14, [x29, #184]
   122ec:	ldr	x10, [x29, #200]
   122f0:	b	12180 <mpfr_mul@@Base+0x1158>
   122f4:	add	x2, x29, #0xe0
   122f8:	mov	w3, w26
   122fc:	mov	x0, x21
   12300:	mov	x1, x2
   12304:	bl	11028 <mpfr_mul@@Base>
   12308:	mov	w25, w0
   1230c:	b	115b4 <mpfr_mul@@Base+0x58c>
   12310:	stp	x4, x7, [x29, #184]
   12314:	str	x1, [x29, #200]
   12318:	bl	c410 <mpfr_tmp_free@plt>
   1231c:	ldr	x2, [x25]
   12320:	ldp	x4, x7, [x29, #184]
   12324:	ldr	x1, [x29, #200]
   12328:	b	11f88 <mpfr_mul@@Base+0xf60>
   1232c:	add	x0, x29, #0xd8
   12330:	stp	x15, x8, [x29, #120]
   12334:	stp	x5, x9, [x29, #136]
   12338:	stp	x6, x13, [x29, #152]
   1233c:	stp	x3, x4, [x29, #168]
   12340:	stp	x7, x14, [x29, #184]
   12344:	str	x10, [x29, #200]
   12348:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1234c:	mov	x11, x0
   12350:	ldp	x15, x8, [x29, #120]
   12354:	ldp	x5, x9, [x29, #136]
   12358:	ldp	x6, x13, [x29, #152]
   1235c:	ldp	x3, x4, [x29, #168]
   12360:	ldp	x7, x14, [x29, #184]
   12364:	ldr	x10, [x29, #200]
   12368:	b	121ec <mpfr_mul@@Base+0x11c4>
   1236c:	mov	w26, #0x1                   	// #1
   12370:	b	11a7c <mpfr_mul@@Base+0xa54>
   12374:	cbnz	w26, 12244 <mpfr_mul@@Base+0x121c>
   12378:	cmp	x5, x0
   1237c:	b.ge	123b8 <mpfr_mul@@Base+0x1390>  // b.tcont
   12380:	mov	w26, #0x1                   	// #1
   12384:	b	12244 <mpfr_mul@@Base+0x121c>
   12388:	mov	w2, w20
   1238c:	mov	w1, w26
   12390:	mov	x0, x21
   12394:	bl	bf40 <mpfr_overflow@plt>
   12398:	mov	w25, w0
   1239c:	b	115b4 <mpfr_mul@@Base+0x58c>
   123a0:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   123a4:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   123a8:	add	x2, x2, #0xf28
   123ac:	add	x0, x0, #0xf78
   123b0:	mov	w1, #0x318                 	// #792
   123b4:	bl	cb40 <mpfr_assert_fail@plt>
   123b8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   123bc:	cmp	x10, x0
   123c0:	b.ne	12244 <mpfr_mul@@Base+0x121c>  // b.any
   123c4:	orr	x2, x2, x11
   123c8:	and	x3, x2, x3
   123cc:	orr	x4, x3, x4
   123d0:	orr	x1, x4, x1
   123d4:	cmp	x1, #0x0
   123d8:	cset	w26, eq  // eq = none
   123dc:	b	12244 <mpfr_mul@@Base+0x121c>
   123e0:	cbnz	w26, 12244 <mpfr_mul@@Base+0x121c>
   123e4:	cmp	x5, x0
   123e8:	b.lt	12380 <mpfr_mul@@Base+0x1358>  // b.tstop
   123ec:	cmp	x1, #0x0
   123f0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   123f4:	ccmp	x2, x0, #0x0, eq  // eq = none
   123f8:	cset	w26, eq  // eq = none
   123fc:	b	12244 <mpfr_mul@@Base+0x121c>
   12400:	cbnz	w26, 12244 <mpfr_mul@@Base+0x121c>
   12404:	cmp	x5, x0
   12408:	b.lt	12380 <mpfr_mul@@Base+0x1358>  // b.tstop
   1240c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   12410:	cmp	x3, x0
   12414:	b.ne	12244 <mpfr_mul@@Base+0x121c>  // b.any
   12418:	orr	x6, x6, x13
   1241c:	and	x1, x6, x1
   12420:	orr	x2, x1, x2
   12424:	cmp	x2, #0x0
   12428:	cset	w26, eq  // eq = none
   1242c:	b	12244 <mpfr_mul@@Base+0x121c>
   12430:	cbnz	w26, 12244 <mpfr_mul@@Base+0x121c>
   12434:	cmp	x5, x0
   12438:	b.lt	12380 <mpfr_mul@@Base+0x1358>  // b.tstop
   1243c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   12440:	cmp	x9, x0
   12444:	b.ne	12244 <mpfr_mul@@Base+0x121c>  // b.any
   12448:	orr	x3, x3, x1
   1244c:	cmp	x3, #0x0
   12450:	cset	w26, eq  // eq = none
   12454:	b	12244 <mpfr_mul@@Base+0x121c>

0000000000012458 <mpfr_mul_ui@@Base>:
   12458:	stp	x29, x30, [sp, #-112]!
   1245c:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
   12460:	mov	x29, sp
   12464:	stp	x19, x20, [sp, #16]
   12468:	mov	x19, x2
   1246c:	mov	x20, x1
   12470:	ldr	x2, [x1, #16]
   12474:	stp	x21, x22, [sp, #32]
   12478:	mov	x21, x0
   1247c:	stp	x23, x24, [sp, #48]
   12480:	cmp	x2, x4
   12484:	str	x25, [sp, #64]
   12488:	b.le	1279c <mpfr_mul_ui@@Base+0x344>
   1248c:	mov	w22, w3
   12490:	cmp	x19, #0x1
   12494:	b.ls	125cc <mpfr_mul_ui@@Base+0x174>  // b.plast
   12498:	sub	x2, x19, #0x1
   1249c:	tst	x2, x19
   124a0:	b.eq	12674 <mpfr_mul_ui@@Base+0x21c>  // b.none
   124a4:	ldr	x2, [x1]
   124a8:	str	xzr, [x29, #104]
   124ac:	sub	x2, x2, #0x1
   124b0:	asr	x2, x2, #6
   124b4:	add	x23, x2, #0x2
   124b8:	add	x2, x2, #0x1
   124bc:	lsl	x25, x23, #3
   124c0:	cmp	x25, #0x4, lsl #12
   124c4:	b.hi	12820 <mpfr_mul_ui@@Base+0x3c8>  // b.pmore
   124c8:	add	x0, x25, #0xf
   124cc:	and	x0, x0, #0xfffffffffffffff0
   124d0:	sub	sp, sp, x0
   124d4:	mov	x24, sp
   124d8:	ldr	x1, [x20, #24]
   124dc:	sub	x25, x25, #0x8
   124e0:	mov	x3, x19
   124e4:	mov	x0, x24
   124e8:	bl	cd30 <__gmpn_mul_1@plt>
   124ec:	str	x0, [x24, x25]
   124f0:	tbnz	x0, #63, 1283c <mpfr_mul_ui@@Base+0x3e4>
   124f4:	clz	x3, x0
   124f8:	mov	x2, x23
   124fc:	mov	w19, w3
   12500:	mov	x1, x24
   12504:	mov	x0, x24
   12508:	bl	bcc0 <__gmpn_lshift@plt>
   1250c:	ldr	x1, [x21]
   12510:	lsl	x23, x23, #6
   12514:	sub	x4, x23, #0x1
   12518:	sub	x6, x1, #0x1
   1251c:	cmp	x23, x1
   12520:	asr	x4, x4, #6
   12524:	asr	x6, x6, #6
   12528:	ldr	x23, [x21, #24]
   1252c:	b.le	12844 <mpfr_mul_ui@@Base+0x3ec>
   12530:	sub	x4, x4, x6
   12534:	neg	w1, w1
   12538:	ands	w0, w1, #0x3f
   1253c:	add	x2, x6, #0x1
   12540:	add	x1, x24, x4, lsl #3
   12544:	b.eq	12888 <mpfr_mul_ui@@Base+0x430>  // b.none
   12548:	ldr	x3, [x24, x4, lsl #3]
   1254c:	sub	w0, w0, #0x1
   12550:	mov	x5, #0x1                   	// #1
   12554:	cmp	w22, #0x0
   12558:	lsl	x5, x5, x0
   1255c:	and	x7, x3, x5
   12560:	sub	x5, x5, #0x1
   12564:	ccmp	x7, #0x0, #0x4, ne  // ne = any
   12568:	and	x5, x5, x3
   1256c:	b.ne	12598 <mpfr_mul_ui@@Base+0x140>  // b.any
   12570:	cmp	x4, #0x0
   12574:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   12578:	b.ne	12598 <mpfr_mul_ui@@Base+0x140>  // b.any
   1257c:	mvn	x3, x4
   12580:	add	x3, x1, x3, lsl #3
   12584:	nop
   12588:	ldr	x5, [x3, x4, lsl #3]
   1258c:	subs	x4, x4, #0x1
   12590:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   12594:	b.eq	12588 <mpfr_mul_ui@@Base+0x130>  // b.none
   12598:	mov	x24, #0x2                   	// #2
   1259c:	lsl	x24, x24, x0
   125a0:	cmp	w22, #0x5
   125a4:	b.eq	12768 <mpfr_mul_ui@@Base+0x310>  // b.none
   125a8:	cbnz	w22, 12604 <mpfr_mul_ui@@Base+0x1ac>
   125ac:	cbz	x7, 12690 <mpfr_mul_ui@@Base+0x238>
   125b0:	ldr	x0, [x1]
   125b4:	ldr	w25, [x20, #8]
   125b8:	and	x3, x24, x0
   125bc:	orr	x5, x3, x5
   125c0:	cbnz	x5, 12628 <mpfr_mul_ui@@Base+0x1d0>
   125c4:	neg	w25, w25
   125c8:	b	1269c <mpfr_mul_ui@@Base+0x244>
   125cc:	ldr	w3, [x1, #8]
   125d0:	cbnz	x19, 12770 <mpfr_mul_ui@@Base+0x318>
   125d4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   125d8:	mov	w25, #0x0                   	// #0
   125dc:	str	w3, [x21, #8]
   125e0:	str	x0, [x21, #16]
   125e4:	mov	sp, x29
   125e8:	mov	w0, w25
   125ec:	ldp	x19, x20, [sp, #16]
   125f0:	ldp	x21, x22, [sp, #32]
   125f4:	ldp	x23, x24, [sp, #48]
   125f8:	ldr	x25, [sp, #64]
   125fc:	ldp	x29, x30, [sp], #112
   12600:	ret
   12604:	orr	x5, x5, x7
   12608:	cmp	w22, #0x1
   1260c:	b.eq	12690 <mpfr_mul_ui@@Base+0x238>  // b.none
   12610:	ldr	w25, [x20, #8]
   12614:	add	w0, w22, w25, lsr #31
   12618:	cmp	w0, #0x3
   1261c:	b.eq	12690 <mpfr_mul_ui@@Base+0x238>  // b.none
   12620:	cbz	x5, 12768 <mpfr_mul_ui@@Base+0x310>
   12624:	ldr	x0, [x1]
   12628:	adds	x0, x0, x24
   1262c:	str	x0, [x23]
   12630:	b.cc	127cc <mpfr_mul_ui@@Base+0x374>  // b.lo, b.ul, b.last
   12634:	mov	x3, #0x1                   	// #1
   12638:	b	12654 <mpfr_mul_ui@@Base+0x1fc>
   1263c:	ldr	x4, [x1, x3, lsl #3]
   12640:	add	x0, x3, #0x1
   12644:	add	x4, x4, #0x1
   12648:	str	x4, [x23, x3, lsl #3]
   1264c:	cbnz	x4, 128d0 <mpfr_mul_ui@@Base+0x478>
   12650:	mov	x3, x0
   12654:	cmp	x2, x3
   12658:	b.gt	1263c <mpfr_mul_ui@@Base+0x1e4>
   1265c:	add	x2, x23, x2, lsl #3
   12660:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   12664:	sub	w19, w19, #0x1
   12668:	stur	x0, [x2, #-8]
   1266c:	ldr	x0, [x23]
   12670:	b	127f8 <mpfr_mul_ui@@Base+0x3a0>
   12674:	clz	x2, x2
   12678:	mov	w4, #0x40                  	// #64
   1267c:	sub	w2, w4, w2
   12680:	sxtw	x2, w2
   12684:	bl	bb90 <mpfr_mul_2si@plt>
   12688:	mov	w25, w0
   1268c:	b	125e4 <mpfr_mul_ui@@Base+0x18c>
   12690:	cbz	x5, 12768 <mpfr_mul_ui@@Base+0x310>
   12694:	ldr	w0, [x20, #8]
   12698:	neg	w25, w0
   1269c:	cmp	x23, x1
   126a0:	b.eq	126b0 <mpfr_mul_ui@@Base+0x258>  // b.none
   126a4:	lsl	x2, x2, #3
   126a8:	mov	x0, x23
   126ac:	bl	ba10 <memcpy@plt>
   126b0:	ldr	x2, [x23]
   126b4:	neg	x0, x24
   126b8:	and	x0, x2, x0
   126bc:	str	x0, [x23]
   126c0:	ldr	x0, [x29, #104]
   126c4:	cbnz	x0, 12880 <mpfr_mul_ui@@Base+0x428>
   126c8:	mrs	x3, tpidr_el0
   126cc:	mov	w1, #0x40                  	// #64
   126d0:	sub	w19, w1, w19
   126d4:	ldr	w2, [x20, #8]
   126d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   126dc:	ldr	x1, [x0, #2544]
   126e0:	add	x0, x0, #0x9f0
   126e4:	blr	x1
   126e8:	ldr	x0, [x3, x0]
   126ec:	sxtw	x19, w19
   126f0:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   126f4:	add	x1, x19, x1
   126f8:	cmp	x1, x0
   126fc:	b.gt	12974 <mpfr_mul_ui@@Base+0x51c>
   12700:	ldr	x1, [x20, #16]
   12704:	sub	x0, x0, x19
   12708:	cmp	x1, x0
   1270c:	b.gt	12974 <mpfr_mul_ui@@Base+0x51c>
   12710:	add	x19, x19, x1
   12714:	str	w2, [x21, #8]
   12718:	str	x19, [x21, #16]
   1271c:	cbz	w25, 125e4 <mpfr_mul_ui@@Base+0x18c>
   12720:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   12724:	ldr	x1, [x0, #2576]
   12728:	add	x0, x0, #0xa10
   1272c:	blr	x1
   12730:	add	x0, x3, x0
   12734:	ldr	w1, [x0]
   12738:	orr	w1, w1, #0x8
   1273c:	str	w1, [x0]
   12740:	mov	w0, w25
   12744:	mov	sp, x29
   12748:	ldp	x19, x20, [sp, #16]
   1274c:	ldp	x21, x22, [sp, #32]
   12750:	ldp	x23, x24, [sp, #48]
   12754:	ldr	x25, [sp, #64]
   12758:	ldp	x29, x30, [sp], #112
   1275c:	ret
   12760:	mov	x24, #0x1                   	// #1
   12764:	nop
   12768:	mov	w25, #0x0                   	// #0
   1276c:	b	1269c <mpfr_mul_ui@@Base+0x244>
   12770:	mov	w2, w22
   12774:	bl	c6a0 <mpfr_set4@plt>
   12778:	mov	sp, x29
   1277c:	mov	w25, w0
   12780:	mov	w0, w25
   12784:	ldp	x19, x20, [sp, #16]
   12788:	ldp	x21, x22, [sp, #32]
   1278c:	ldp	x23, x24, [sp, #48]
   12790:	ldr	x25, [sp, #64]
   12794:	ldp	x29, x30, [sp], #112
   12798:	ret
   1279c:	mov	x0, #0x2                   	// #2
   127a0:	movk	x0, #0x8000, lsl #48
   127a4:	cmp	x2, x0
   127a8:	b.eq	128f8 <mpfr_mul_ui@@Base+0x4a0>  // b.none
   127ac:	cmp	x2, x4
   127b0:	b.ne	12808 <mpfr_mul_ui@@Base+0x3b0>  // b.any
   127b4:	cbz	x19, 128f8 <mpfr_mul_ui@@Base+0x4a0>
   127b8:	ldr	w0, [x1, #8]
   127bc:	mov	w25, #0x0                   	// #0
   127c0:	str	w0, [x21, #8]
   127c4:	str	x2, [x21, #16]
   127c8:	b	125e4 <mpfr_mul_ui@@Base+0x18c>
   127cc:	cmp	x23, x1
   127d0:	b.eq	127f8 <mpfr_mul_ui@@Base+0x3a0>  // b.none
   127d4:	cmp	x2, #0x1
   127d8:	b.eq	127f8 <mpfr_mul_ui@@Base+0x3a0>  // b.none
   127dc:	mov	x0, #0x1                   	// #1
   127e0:	ldr	x3, [x1, x0, lsl #3]
   127e4:	str	x3, [x23, x0, lsl #3]
   127e8:	add	x0, x0, #0x1
   127ec:	cmp	x0, x2
   127f0:	b.ne	127e0 <mpfr_mul_ui@@Base+0x388>  // b.any
   127f4:	ldr	x0, [x23]
   127f8:	neg	x24, x24
   127fc:	and	x0, x24, x0
   12800:	str	x0, [x23]
   12804:	b	126c0 <mpfr_mul_ui@@Base+0x268>
   12808:	ldr	w1, [x1, #8]
   1280c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   12810:	mov	w25, #0x0                   	// #0
   12814:	str	w1, [x21, #8]
   12818:	str	x0, [x21, #16]
   1281c:	b	125e4 <mpfr_mul_ui@@Base+0x18c>
   12820:	mov	x1, x25
   12824:	add	x0, x29, #0x68
   12828:	str	x2, [x29, #88]
   1282c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   12830:	mov	x24, x0
   12834:	ldr	x2, [x29, #88]
   12838:	b	124d8 <mpfr_mul_ui@@Base+0x80>
   1283c:	mov	w19, #0x0                   	// #0
   12840:	b	1250c <mpfr_mul_ui@@Base+0xb4>
   12844:	sub	x6, x6, x4
   12848:	add	x4, x4, #0x1
   1284c:	lsl	x25, x6, #3
   12850:	add	x0, x23, x25
   12854:	cmp	x0, x24
   12858:	b.eq	12868 <mpfr_mul_ui@@Base+0x410>  // b.none
   1285c:	lsl	x2, x4, #3
   12860:	mov	x1, x24
   12864:	bl	ba10 <memcpy@plt>
   12868:	mov	x2, x25
   1286c:	mov	x0, x23
   12870:	mov	w1, #0x0                   	// #0
   12874:	mov	w25, #0x0                   	// #0
   12878:	bl	c110 <memset@plt>
   1287c:	b	126c0 <mpfr_mul_ui@@Base+0x268>
   12880:	bl	c410 <mpfr_tmp_free@plt>
   12884:	b	126c8 <mpfr_mul_ui@@Base+0x270>
   12888:	ldur	x5, [x1, #-8]
   1288c:	cmp	w22, #0x0
   12890:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   12894:	and	x7, x5, #0x8000000000000000
   12898:	and	x3, x5, #0x7fffffffffffffff
   1289c:	b.lt	12930 <mpfr_mul_ui@@Base+0x4d8>  // b.tstop
   128a0:	subs	x0, x4, #0x1
   128a4:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   128a8:	b.ne	12968 <mpfr_mul_ui@@Base+0x510>  // b.any
   128ac:	mvn	x4, x4
   128b0:	add	x4, x1, x4, lsl #3
   128b4:	nop
   128b8:	ldr	x5, [x4, x0, lsl #3]
   128bc:	subs	x0, x0, #0x1
   128c0:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   128c4:	b.eq	128b8 <mpfr_mul_ui@@Base+0x460>  // b.none
   128c8:	mov	x24, #0x1                   	// #1
   128cc:	b	125a0 <mpfr_mul_ui@@Base+0x148>
   128d0:	cmp	x23, x1
   128d4:	b.eq	127f4 <mpfr_mul_ui@@Base+0x39c>  // b.none
   128d8:	cmp	x3, x6
   128dc:	b.ge	127f4 <mpfr_mul_ui@@Base+0x39c>  // b.tcont
   128e0:	ldr	x2, [x1, x0, lsl #3]
   128e4:	str	x2, [x23, x0, lsl #3]
   128e8:	cmp	x0, x6
   128ec:	add	x0, x0, #0x1
   128f0:	b.lt	128e0 <mpfr_mul_ui@@Base+0x488>  // b.tstop
   128f4:	b	127f4 <mpfr_mul_ui@@Base+0x39c>
   128f8:	mrs	x1, tpidr_el0
   128fc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   12900:	ldr	x2, [x0, #2576]
   12904:	add	x0, x0, #0xa10
   12908:	blr	x2
   1290c:	add	x0, x1, x0
   12910:	mov	x1, #0x2                   	// #2
   12914:	movk	x1, #0x8000, lsl #48
   12918:	str	x1, [x21, #16]
   1291c:	mov	w25, #0x0                   	// #0
   12920:	ldr	w1, [x0]
   12924:	orr	w1, w1, #0x4
   12928:	str	w1, [x0]
   1292c:	b	125e4 <mpfr_mul_ui@@Base+0x18c>
   12930:	cmp	w22, #0x5
   12934:	b.eq	12760 <mpfr_mul_ui@@Base+0x308>  // b.none
   12938:	cmp	w22, #0x1
   1293c:	b.eq	1295c <mpfr_mul_ui@@Base+0x504>  // b.none
   12940:	ldr	w25, [x20, #8]
   12944:	mov	x24, #0x1                   	// #1
   12948:	mov	w0, w25
   1294c:	add	w3, w22, w25, lsr #31
   12950:	cmp	w3, #0x3
   12954:	b.ne	12620 <mpfr_mul_ui@@Base+0x1c8>  // b.any
   12958:	b	12698 <mpfr_mul_ui@@Base+0x240>
   1295c:	ldr	w0, [x20, #8]
   12960:	mov	x24, #0x1                   	// #1
   12964:	b	12698 <mpfr_mul_ui@@Base+0x240>
   12968:	mov	x5, x3
   1296c:	mov	x24, #0x1                   	// #1
   12970:	b	125a0 <mpfr_mul_ui@@Base+0x148>
   12974:	mov	w1, w22
   12978:	mov	x0, x21
   1297c:	bl	bf40 <mpfr_overflow@plt>
   12980:	mov	w25, w0
   12984:	b	125e4 <mpfr_mul_ui@@Base+0x18c>

0000000000012988 <mpfr_set4@@Base>:
   12988:	stp	x29, x30, [sp, #-48]!
   1298c:	mov	x8, x0
   12990:	mov	w9, w2
   12994:	mov	x29, sp
   12998:	ldr	x0, [x1, #16]
   1299c:	str	x21, [sp, #32]
   129a0:	str	x0, [x8, #16]
   129a4:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   129a8:	str	w3, [x8, #8]
   129ac:	ldr	x0, [x1, #16]
   129b0:	cmp	x0, x2
   129b4:	b.le	12c78 <mpfr_set4@@Base+0x2f0>
   129b8:	ldr	x4, [x1]
   129bc:	ldr	x6, [x8]
   129c0:	cmp	x4, x6
   129c4:	b.eq	12b38 <mpfr_set4@@Base+0x1b0>  // b.none
   129c8:	sub	x5, x4, #0x1
   129cc:	sub	x10, x6, #0x1
   129d0:	stp	x19, x20, [sp, #16]
   129d4:	asr	x5, x5, #6
   129d8:	asr	x10, x10, #6
   129dc:	ldr	x11, [x1, #24]
   129e0:	ldr	x19, [x8, #24]
   129e4:	b.le	12cb4 <mpfr_set4@@Base+0x32c>
   129e8:	sub	x5, x5, x10
   129ec:	neg	w6, w6
   129f0:	ands	w6, w6, #0x3f
   129f4:	add	x2, x10, #0x1
   129f8:	add	x1, x11, x5, lsl #3
   129fc:	b.eq	12bcc <mpfr_set4@@Base+0x244>  // b.none
   12a00:	ldr	x0, [x11, x5, lsl #3]
   12a04:	sub	w7, w6, #0x1
   12a08:	mov	x4, #0x1                   	// #1
   12a0c:	cmp	w9, #0x0
   12a10:	lsl	x4, x4, x7
   12a14:	and	x12, x0, x4
   12a18:	sub	x4, x4, #0x1
   12a1c:	ccmp	x12, #0x0, #0x4, ne  // ne = any
   12a20:	and	x4, x4, x0
   12a24:	b.ne	12a50 <mpfr_set4@@Base+0xc8>  // b.any
   12a28:	cmp	x5, #0x0
   12a2c:	mov	x6, x5
   12a30:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   12a34:	b.ne	12a50 <mpfr_set4@@Base+0xc8>  // b.any
   12a38:	mvn	x0, x5
   12a3c:	add	x0, x1, x0, lsl #3
   12a40:	ldr	x4, [x0, x6, lsl #3]
   12a44:	subs	x6, x6, #0x1
   12a48:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   12a4c:	b.eq	12a40 <mpfr_set4@@Base+0xb8>  // b.none
   12a50:	mov	x20, #0x2                   	// #2
   12a54:	lsl	x20, x20, x7
   12a58:	cmp	w9, #0x5
   12a5c:	b.eq	12c10 <mpfr_set4@@Base+0x288>  // b.none
   12a60:	cbnz	w9, 12b70 <mpfr_set4@@Base+0x1e8>
   12a64:	cbz	x12, 12b88 <mpfr_set4@@Base+0x200>
   12a68:	ldr	x0, [x11, x5, lsl #3]
   12a6c:	and	x5, x20, x0
   12a70:	orr	x4, x5, x4
   12a74:	cbz	x4, 12b8c <mpfr_set4@@Base+0x204>
   12a78:	adds	x0, x0, x20
   12a7c:	str	x0, [x19]
   12a80:	b.cc	12c4c <mpfr_set4@@Base+0x2c4>  // b.lo, b.ul, b.last
   12a84:	mov	x0, #0x1                   	// #1
   12a88:	b	12aa4 <mpfr_set4@@Base+0x11c>
   12a8c:	ldr	x4, [x1, x0, lsl #3]
   12a90:	add	x5, x0, #0x1
   12a94:	add	x4, x4, #0x1
   12a98:	str	x4, [x19, x0, lsl #3]
   12a9c:	cbnz	x4, 12cf4 <mpfr_set4@@Base+0x36c>
   12aa0:	mov	x0, x5
   12aa4:	cmp	x2, x0
   12aa8:	b.gt	12a8c <mpfr_set4@@Base+0x104>
   12aac:	add	x2, x19, x2, lsl #3
   12ab0:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   12ab4:	mrs	x4, tpidr_el0
   12ab8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   12abc:	ldr	x5, [x0, #2544]
   12ac0:	add	x0, x0, #0x9f0
   12ac4:	blr	x5
   12ac8:	stur	x1, [x2, #-8]
   12acc:	ldr	x1, [x8, #16]
   12ad0:	ldr	x2, [x4, x0]
   12ad4:	add	x0, x1, #0x1
   12ad8:	str	x0, [x8, #16]
   12adc:	cmp	x0, x2
   12ae0:	b.gt	12d2c <mpfr_set4@@Base+0x3a4>
   12ae4:	nop
   12ae8:	ldr	x0, [x19]
   12aec:	neg	x7, x20
   12af0:	and	x0, x7, x0
   12af4:	str	x0, [x19]
   12af8:	mov	w21, w3
   12afc:	cbz	w21, 12bb8 <mpfr_set4@@Base+0x230>
   12b00:	mrs	x1, tpidr_el0
   12b04:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   12b08:	ldr	x2, [x0, #2576]
   12b0c:	add	x0, x0, #0xa10
   12b10:	blr	x2
   12b14:	add	x0, x1, x0
   12b18:	ldp	x19, x20, [sp, #16]
   12b1c:	ldr	w1, [x0]
   12b20:	orr	w1, w1, #0x8
   12b24:	str	w1, [x0]
   12b28:	mov	w0, w21
   12b2c:	ldr	x21, [sp, #32]
   12b30:	ldp	x29, x30, [sp], #48
   12b34:	ret
   12b38:	ldr	x1, [x1, #24]
   12b3c:	mov	w21, #0x0                   	// #0
   12b40:	ldr	x0, [x8, #24]
   12b44:	cmp	x0, x1
   12b48:	b.eq	12b60 <mpfr_set4@@Base+0x1d8>  // b.none
   12b4c:	sub	x4, x4, #0x1
   12b50:	asr	x4, x4, #6
   12b54:	add	x2, x4, #0x1
   12b58:	lsl	x2, x2, #3
   12b5c:	bl	ba10 <memcpy@plt>
   12b60:	mov	w0, w21
   12b64:	ldr	x21, [sp, #32]
   12b68:	ldp	x29, x30, [sp], #48
   12b6c:	ret
   12b70:	orr	x4, x4, x12
   12b74:	cmp	w9, #0x1
   12b78:	b.eq	12b88 <mpfr_set4@@Base+0x200>  // b.none
   12b7c:	add	w0, w9, w3, lsr #31
   12b80:	cmp	w0, #0x3
   12b84:	b.ne	12c38 <mpfr_set4@@Base+0x2b0>  // b.any
   12b88:	cbz	x4, 12c10 <mpfr_set4@@Base+0x288>
   12b8c:	neg	w21, w3
   12b90:	cmp	x19, x1
   12b94:	b.eq	12ba4 <mpfr_set4@@Base+0x21c>  // b.none
   12b98:	lsl	x2, x2, #3
   12b9c:	mov	x0, x19
   12ba0:	bl	ba10 <memcpy@plt>
   12ba4:	ldr	x0, [x19]
   12ba8:	neg	x7, x20
   12bac:	and	x7, x0, x7
   12bb0:	str	x7, [x19]
   12bb4:	cbnz	w21, 12b00 <mpfr_set4@@Base+0x178>
   12bb8:	mov	w0, w21
   12bbc:	ldp	x19, x20, [sp, #16]
   12bc0:	ldr	x21, [sp, #32]
   12bc4:	ldp	x29, x30, [sp], #48
   12bc8:	ret
   12bcc:	ldur	x4, [x1, #-8]
   12bd0:	cmp	w9, #0x0
   12bd4:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   12bd8:	and	x12, x4, #0x8000000000000000
   12bdc:	and	x6, x4, #0x7fffffffffffffff
   12be0:	b.lt	12c18 <mpfr_set4@@Base+0x290>  // b.tstop
   12be4:	subs	x0, x5, #0x1
   12be8:	ccmp	x6, #0x0, #0x0, ne  // ne = any
   12bec:	b.ne	12d20 <mpfr_set4@@Base+0x398>  // b.any
   12bf0:	mvn	x6, x5
   12bf4:	add	x6, x1, x6, lsl #3
   12bf8:	ldr	x4, [x6, x0, lsl #3]
   12bfc:	subs	x0, x0, #0x1
   12c00:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   12c04:	b.eq	12bf8 <mpfr_set4@@Base+0x270>  // b.none
   12c08:	mov	x20, #0x1                   	// #1
   12c0c:	b	12a58 <mpfr_set4@@Base+0xd0>
   12c10:	mov	w21, #0x0                   	// #0
   12c14:	b	12b90 <mpfr_set4@@Base+0x208>
   12c18:	cmp	w9, #0x5
   12c1c:	mov	x20, #0x1                   	// #1
   12c20:	b.eq	12c10 <mpfr_set4@@Base+0x288>  // b.none
   12c24:	cmp	w9, #0x1
   12c28:	b.eq	12b8c <mpfr_set4@@Base+0x204>  // b.none
   12c2c:	add	w0, w9, w3, lsr #31
   12c30:	cmp	w0, #0x3
   12c34:	b.eq	12b8c <mpfr_set4@@Base+0x204>  // b.none
   12c38:	cbz	x4, 12c10 <mpfr_set4@@Base+0x288>
   12c3c:	ldr	x0, [x11, x5, lsl #3]
   12c40:	adds	x0, x0, x20
   12c44:	str	x0, [x19]
   12c48:	b.cs	12a84 <mpfr_set4@@Base+0xfc>  // b.hs, b.nlast
   12c4c:	cmp	x19, x1
   12c50:	b.eq	12aec <mpfr_set4@@Base+0x164>  // b.none
   12c54:	cmp	x2, #0x1
   12c58:	b.eq	12aec <mpfr_set4@@Base+0x164>  // b.none
   12c5c:	mov	x0, #0x1                   	// #1
   12c60:	ldr	x4, [x1, x0, lsl #3]
   12c64:	str	x4, [x19, x0, lsl #3]
   12c68:	add	x0, x0, #0x1
   12c6c:	cmp	x0, x2
   12c70:	b.ne	12c60 <mpfr_set4@@Base+0x2d8>  // b.any
   12c74:	b	12ae8 <mpfr_set4@@Base+0x160>
   12c78:	mov	x1, #0x2                   	// #2
   12c7c:	mov	w21, #0x0                   	// #0
   12c80:	movk	x1, #0x8000, lsl #48
   12c84:	cmp	x0, x1
   12c88:	b.ne	12b60 <mpfr_set4@@Base+0x1d8>  // b.any
   12c8c:	mrs	x1, tpidr_el0
   12c90:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   12c94:	ldr	x2, [x0, #2576]
   12c98:	add	x0, x0, #0xa10
   12c9c:	blr	x2
   12ca0:	add	x0, x1, x0
   12ca4:	ldr	w1, [x0]
   12ca8:	orr	w1, w1, #0x4
   12cac:	str	w1, [x0]
   12cb0:	b	12b60 <mpfr_set4@@Base+0x1d8>
   12cb4:	sub	x10, x10, x5
   12cb8:	add	x5, x5, #0x1
   12cbc:	lsl	x20, x10, #3
   12cc0:	add	x0, x19, x20
   12cc4:	cmp	x0, x11
   12cc8:	b.eq	12cd8 <mpfr_set4@@Base+0x350>  // b.none
   12ccc:	lsl	x2, x5, #3
   12cd0:	mov	x1, x11
   12cd4:	bl	ba10 <memcpy@plt>
   12cd8:	mov	x2, x20
   12cdc:	mov	x0, x19
   12ce0:	mov	w1, #0x0                   	// #0
   12ce4:	mov	w21, #0x0                   	// #0
   12ce8:	bl	c110 <memset@plt>
   12cec:	ldp	x19, x20, [sp, #16]
   12cf0:	b	12b60 <mpfr_set4@@Base+0x1d8>
   12cf4:	cmp	x19, x1
   12cf8:	b.eq	12ae8 <mpfr_set4@@Base+0x160>  // b.none
   12cfc:	cmp	x0, x10
   12d00:	b.ge	12ae8 <mpfr_set4@@Base+0x160>  // b.tcont
   12d04:	nop
   12d08:	ldr	x0, [x1, x5, lsl #3]
   12d0c:	str	x0, [x19, x5, lsl #3]
   12d10:	cmp	x5, x10
   12d14:	add	x5, x5, #0x1
   12d18:	b.lt	12d08 <mpfr_set4@@Base+0x380>  // b.tstop
   12d1c:	b	12ae8 <mpfr_set4@@Base+0x160>
   12d20:	mov	x4, x6
   12d24:	mov	x20, #0x1                   	// #1
   12d28:	b	12a58 <mpfr_set4@@Base+0xd0>
   12d2c:	ldp	x19, x20, [sp, #16]
   12d30:	mov	w2, w3
   12d34:	ldr	x21, [sp, #32]
   12d38:	mov	w1, w9
   12d3c:	ldp	x29, x30, [sp], #48
   12d40:	mov	x0, x8
   12d44:	b	bf40 <mpfr_overflow@plt>

0000000000012d48 <mpfr_set_prec@@Base>:
   12d48:	stp	x29, x30, [sp, #-48]!
   12d4c:	sub	x2, x1, #0x1
   12d50:	mov	x29, sp
   12d54:	stp	x19, x20, [sp, #16]
   12d58:	mov	x19, x0
   12d5c:	mov	x0, #0xfffffffffffffefe    	// #-258
   12d60:	str	x21, [sp, #32]
   12d64:	movk	x0, #0x7fff, lsl #48
   12d68:	cmp	x2, x0
   12d6c:	b.hi	12df0 <mpfr_set_prec@@Base+0xa8>  // b.pmore
   12d70:	ldr	x0, [x19, #24]
   12d74:	mov	x20, x1
   12d78:	asr	x2, x2, #6
   12d7c:	add	x21, x2, #0x1
   12d80:	ldur	x1, [x0, #-8]
   12d84:	cmp	x21, x1
   12d88:	b.gt	12dac <mpfr_set_prec@@Base+0x64>
   12d8c:	mov	x0, #0x2                   	// #2
   12d90:	movk	x0, #0x8000, lsl #48
   12d94:	ldr	x21, [sp, #32]
   12d98:	str	x20, [x19]
   12d9c:	str	x0, [x19, #16]
   12da0:	ldp	x19, x20, [sp, #16]
   12da4:	ldp	x29, x30, [sp], #48
   12da8:	ret
   12dac:	add	x1, x1, #0x1
   12db0:	add	x2, x2, #0x2
   12db4:	sub	x0, x0, #0x8
   12db8:	lsl	x1, x1, #3
   12dbc:	lsl	x2, x2, #3
   12dc0:	bl	c1c0 <mpfr_reallocate_func@plt>
   12dc4:	add	x1, x0, #0x8
   12dc8:	str	x1, [x19, #24]
   12dcc:	str	x21, [x0]
   12dd0:	mov	x0, #0x2                   	// #2
   12dd4:	movk	x0, #0x8000, lsl #48
   12dd8:	ldr	x21, [sp, #32]
   12ddc:	str	x20, [x19]
   12de0:	str	x0, [x19, #16]
   12de4:	ldp	x19, x20, [sp, #16]
   12de8:	ldp	x29, x30, [sp], #48
   12dec:	ret
   12df0:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   12df4:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   12df8:	add	x2, x2, #0x3f0
   12dfc:	add	x0, x0, #0x4a8
   12e00:	mov	w1, #0x1f                  	// #31
   12e04:	bl	cb40 <mpfr_assert_fail@plt>

0000000000012e08 <mpfr_sub@@Base>:
   12e08:	stp	x29, x30, [sp, #-48]!
   12e0c:	mov	x4, #0x5                   	// #5
   12e10:	movk	x4, #0x8000, lsl #48
   12e14:	mov	x29, sp
   12e18:	ldr	x5, [x1, #16]
   12e1c:	stp	x19, x20, [sp, #16]
   12e20:	mov	x19, x1
   12e24:	stp	x21, x22, [sp, #32]
   12e28:	mov	x20, x2
   12e2c:	mov	x22, x0
   12e30:	mov	w21, w3
   12e34:	cmp	x5, x4
   12e38:	b.lt	12ea4 <mpfr_sub@@Base+0x9c>  // b.tstop
   12e3c:	ldr	x6, [x2, #16]
   12e40:	cmp	x6, x4
   12e44:	b.lt	12f3c <mpfr_sub@@Base+0x134>  // b.tstop
   12e48:	ldr	w4, [x2, #8]
   12e4c:	ldr	w7, [x1, #8]
   12e50:	ldr	x8, [x0]
   12e54:	cmp	w7, w4
   12e58:	ldr	x4, [x1]
   12e5c:	b.ne	12fd0 <mpfr_sub@@Base+0x1c8>  // b.any
   12e60:	cmp	x4, x8
   12e64:	b.ne	12e84 <mpfr_sub@@Base+0x7c>  // b.any
   12e68:	ldr	x5, [x2]
   12e6c:	cmp	x4, x5
   12e70:	b.ne	12e84 <mpfr_sub@@Base+0x7c>  // b.any
   12e74:	ldp	x19, x20, [sp, #16]
   12e78:	ldp	x21, x22, [sp, #32]
   12e7c:	ldp	x29, x30, [sp], #48
   12e80:	b	c0f0 <mpfr_sub1sp@plt>
   12e84:	mov	w3, w21
   12e88:	mov	x2, x20
   12e8c:	mov	x1, x19
   12e90:	mov	x0, x22
   12e94:	ldp	x19, x20, [sp, #16]
   12e98:	ldp	x21, x22, [sp, #32]
   12e9c:	ldp	x29, x30, [sp], #48
   12ea0:	b	ca70 <mpfr_sub1@plt>
   12ea4:	mov	x1, #0x2                   	// #2
   12ea8:	movk	x1, #0x8000, lsl #48
   12eac:	cmp	x5, x1
   12eb0:	b.eq	12ef8 <mpfr_sub@@Base+0xf0>  // b.none
   12eb4:	ldr	x6, [x2, #16]
   12eb8:	cmp	x6, x1
   12ebc:	b.eq	12ef8 <mpfr_sub@@Base+0xf0>  // b.none
   12ec0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   12ec4:	cmp	x5, x1
   12ec8:	b.ne	13088 <mpfr_sub@@Base+0x280>  // b.any
   12ecc:	ldr	w1, [x19, #8]
   12ed0:	cmp	x6, x5
   12ed4:	b.ne	12ee4 <mpfr_sub@@Base+0xdc>  // b.any
   12ed8:	ldr	w0, [x2, #8]
   12edc:	cmp	w0, w1
   12ee0:	b.eq	12ef8 <mpfr_sub@@Base+0xf0>  // b.none
   12ee4:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   12ee8:	mov	w0, #0x0                   	// #0
   12eec:	str	w1, [x22, #8]
   12ef0:	str	x2, [x22, #16]
   12ef4:	b	12f2c <mpfr_sub@@Base+0x124>
   12ef8:	mrs	x1, tpidr_el0
   12efc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   12f00:	ldr	x2, [x0, #2576]
   12f04:	add	x0, x0, #0xa10
   12f08:	blr	x2
   12f0c:	add	x1, x1, x0
   12f10:	mov	x2, #0x2                   	// #2
   12f14:	movk	x2, #0x8000, lsl #48
   12f18:	str	x2, [x22, #16]
   12f1c:	mov	w0, #0x0                   	// #0
   12f20:	ldr	w2, [x1]
   12f24:	orr	w2, w2, #0x4
   12f28:	str	w2, [x1]
   12f2c:	ldp	x19, x20, [sp, #16]
   12f30:	ldp	x21, x22, [sp, #32]
   12f34:	ldp	x29, x30, [sp], #48
   12f38:	ret
   12f3c:	mov	x0, #0x2                   	// #2
   12f40:	movk	x0, #0x8000, lsl #48
   12f44:	cmp	x6, x0
   12f48:	b.eq	12ef8 <mpfr_sub@@Base+0xf0>  // b.none
   12f4c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   12f50:	cmp	x6, x0
   12f54:	b.eq	12ffc <mpfr_sub@@Base+0x1f4>  // b.none
   12f58:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   12f5c:	cmp	x6, x0
   12f60:	b.eq	1312c <mpfr_sub@@Base+0x324>  // b.none
   12f64:	ldr	w1, [x19, #8]
   12f68:	ldr	w0, [x20, #8]
   12f6c:	cmp	w1, w0
   12f70:	b.eq	12e84 <mpfr_sub@@Base+0x7c>  // b.none
   12f74:	mov	x0, #0x4                   	// #4
   12f78:	movk	x0, #0x8000, lsl #48
   12f7c:	cmp	x5, x0
   12f80:	ccmp	x6, x0, #0x4, ne  // ne = any
   12f84:	b.eq	130f4 <mpfr_sub@@Base+0x2ec>  // b.none
   12f88:	cmp	x5, x6
   12f8c:	cset	w0, lt  // lt = tstop
   12f90:	cbz	w0, 13018 <mpfr_sub@@Base+0x210>
   12f94:	cmp	w21, #0x2
   12f98:	b.eq	13080 <mpfr_sub@@Base+0x278>  // b.none
   12f9c:	cmp	w21, #0x3
   12fa0:	mov	w0, #0x2                   	// #2
   12fa4:	csel	w21, w21, w0, ne  // ne = any
   12fa8:	mov	w3, w21
   12fac:	mov	x2, x19
   12fb0:	mov	x1, x20
   12fb4:	mov	x0, x22
   12fb8:	bl	c780 <mpfr_add1@plt>
   12fbc:	ldr	w1, [x22, #8]
   12fc0:	neg	w0, w0
   12fc4:	neg	w1, w1
   12fc8:	str	w1, [x22, #8]
   12fcc:	b	12f2c <mpfr_sub@@Base+0x124>
   12fd0:	cmp	x5, x6
   12fd4:	b.lt	13038 <mpfr_sub@@Base+0x230>  // b.tstop
   12fd8:	cmp	x4, x8
   12fdc:	b.ne	13018 <mpfr_sub@@Base+0x210>  // b.any
   12fe0:	ldr	x5, [x2]
   12fe4:	cmp	x4, x5
   12fe8:	b.ne	13018 <mpfr_sub@@Base+0x210>  // b.any
   12fec:	ldp	x19, x20, [sp, #16]
   12ff0:	ldp	x21, x22, [sp, #32]
   12ff4:	ldp	x29, x30, [sp], #48
   12ff8:	b	cbb0 <mpfr_add1sp@plt>
   12ffc:	ldr	w1, [x20, #8]
   13000:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   13004:	mov	w0, #0x0                   	// #0
   13008:	str	x2, [x22, #16]
   1300c:	neg	w1, w1
   13010:	str	w1, [x22, #8]
   13014:	b	12f2c <mpfr_sub@@Base+0x124>
   13018:	mov	w3, w21
   1301c:	mov	x2, x20
   13020:	mov	x1, x19
   13024:	mov	x0, x22
   13028:	ldp	x19, x20, [sp, #16]
   1302c:	ldp	x21, x22, [sp, #32]
   13030:	ldp	x29, x30, [sp], #48
   13034:	b	c780 <mpfr_add1@plt>
   13038:	cmp	w3, #0x2
   1303c:	b.eq	13078 <mpfr_sub@@Base+0x270>  // b.none
   13040:	cmp	w3, #0x3
   13044:	mov	w0, #0x2                   	// #2
   13048:	csel	w21, w3, w0, ne  // ne = any
   1304c:	mov	w3, w21
   13050:	mov	x2, x19
   13054:	mov	x1, x20
   13058:	cmp	x4, x8
   1305c:	b.ne	12fb4 <mpfr_sub@@Base+0x1ac>  // b.any
   13060:	ldr	x0, [x20]
   13064:	cmp	x4, x0
   13068:	b.ne	12fb4 <mpfr_sub@@Base+0x1ac>  // b.any
   1306c:	mov	x0, x22
   13070:	bl	cbb0 <mpfr_add1sp@plt>
   13074:	b	12fbc <mpfr_sub@@Base+0x1b4>
   13078:	mov	w21, #0x3                   	// #3
   1307c:	b	1304c <mpfr_sub@@Base+0x244>
   13080:	mov	w21, #0x3                   	// #3
   13084:	b	12fa8 <mpfr_sub@@Base+0x1a0>
   13088:	cmp	x6, x1
   1308c:	b.eq	12ffc <mpfr_sub@@Base+0x1f4>  // b.none
   13090:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   13094:	cmp	x5, x1
   13098:	b.ne	12f58 <mpfr_sub@@Base+0x150>  // b.any
   1309c:	cmp	x6, x5
   130a0:	b.ne	130dc <mpfr_sub@@Base+0x2d4>  // b.any
   130a4:	ldr	w0, [x19, #8]
   130a8:	cmp	w3, #0x3
   130ac:	b.eq	1310c <mpfr_sub@@Base+0x304>  // b.none
   130b0:	mov	w1, #0x1                   	// #1
   130b4:	tbz	w0, #31, 130c8 <mpfr_sub@@Base+0x2c0>
   130b8:	ldr	w0, [x2, #8]
   130bc:	mov	w1, #0xffffffff            	// #-1
   130c0:	cmp	w0, #0x1
   130c4:	cneg	w1, w1, lt  // lt = tstop
   130c8:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   130cc:	mov	w0, #0x0                   	// #0
   130d0:	str	w1, [x22, #8]
   130d4:	str	x2, [x22, #16]
   130d8:	b	12f2c <mpfr_sub@@Base+0x124>
   130dc:	mov	x1, x20
   130e0:	mov	w2, w3
   130e4:	ldp	x19, x20, [sp, #16]
   130e8:	ldp	x21, x22, [sp, #32]
   130ec:	ldp	x29, x30, [sp], #48
   130f0:	b	bd70 <mpfr_neg@plt>
   130f4:	mov	x1, x20
   130f8:	mov	x0, x19
   130fc:	bl	cab0 <mpfr_ubf_exp_less_p@plt>
   13100:	cmp	w0, #0x0
   13104:	cset	w0, ne  // ne = any
   13108:	b	12f90 <mpfr_sub@@Base+0x188>
   1310c:	cmp	w0, #0x0
   13110:	mov	w1, #0xffffffff            	// #-1
   13114:	b.le	130c8 <mpfr_sub@@Base+0x2c0>
   13118:	ldr	w0, [x2, #8]
   1311c:	mov	w1, #0x1                   	// #1
   13120:	cmn	w0, #0x1
   13124:	cneg	w1, w1, gt
   13128:	b	130c8 <mpfr_sub@@Base+0x2c0>
   1312c:	ldr	w3, [x19, #8]
   13130:	mov	w2, w21
   13134:	mov	x0, x22
   13138:	mov	x1, x19
   1313c:	ldp	x19, x20, [sp, #16]
   13140:	ldp	x21, x22, [sp, #32]
   13144:	ldp	x29, x30, [sp], #48
   13148:	b	c6a0 <mpfr_set4@plt>
   1314c:	nop

0000000000013150 <mpfr_init2@@Base>:
   13150:	stp	x29, x30, [sp, #-48]!
   13154:	adrp	x2, 7f000 <__gmpfr_l2b@@Base+0x200>
   13158:	mov	x29, sp
   1315c:	ldr	x2, [x2, #4032]
   13160:	stp	x19, x20, [sp, #16]
   13164:	mov	x20, x0
   13168:	str	x21, [sp, #32]
   1316c:	ldr	w0, [x2]
   13170:	cmp	w0, #0x40
   13174:	b.ne	131d8 <mpfr_init2@@Base+0x88>  // b.any
   13178:	sub	x19, x1, #0x1
   1317c:	mov	x0, #0xfffffffffffffefe    	// #-258
   13180:	movk	x0, #0x7fff, lsl #48
   13184:	mov	x21, x1
   13188:	cmp	x19, x0
   1318c:	b.hi	131f0 <mpfr_init2@@Base+0xa0>  // b.pmore
   13190:	asr	x19, x19, #6
   13194:	add	x0, x19, #0x2
   13198:	add	x19, x19, #0x1
   1319c:	lsl	x0, x0, #3
   131a0:	bl	ccf0 <mpfr_allocate_func@plt>
   131a4:	mov	w2, #0x1                   	// #1
   131a8:	add	x1, x0, #0x8
   131ac:	str	x21, [x20]
   131b0:	str	w2, [x20, #8]
   131b4:	str	x1, [x20, #24]
   131b8:	ldr	x21, [sp, #32]
   131bc:	str	x19, [x0]
   131c0:	mov	x0, #0x2                   	// #2
   131c4:	movk	x0, #0x8000, lsl #48
   131c8:	str	x0, [x20, #16]
   131cc:	ldp	x19, x20, [sp, #16]
   131d0:	ldp	x29, x30, [sp], #48
   131d4:	ret
   131d8:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   131dc:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   131e0:	add	x2, x2, #0xce0
   131e4:	add	x0, x0, #0xd00
   131e8:	mov	w1, #0x27                  	// #39
   131ec:	bl	cb40 <mpfr_assert_fail@plt>
   131f0:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   131f4:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   131f8:	add	x2, x2, #0x3f0
   131fc:	add	x0, x0, #0xd00
   13200:	mov	w1, #0x34                  	// #52
   13204:	bl	cb40 <mpfr_assert_fail@plt>

0000000000013208 <mpfr_sub1sp@@Base>:
   13208:	stp	x29, x30, [sp, #-176]!
   1320c:	mov	w4, w3
   13210:	mov	x29, sp
   13214:	stp	x19, x20, [sp, #16]
   13218:	mov	x20, x1
   1321c:	ldr	x19, [x1]
   13220:	stp	x21, x22, [sp, #32]
   13224:	mov	x21, x2
   13228:	stp	x23, x24, [sp, #48]
   1322c:	cmp	x19, #0x3f
   13230:	stp	x25, x26, [sp, #64]
   13234:	stp	x27, x28, [sp, #80]
   13238:	mov	x27, x0
   1323c:	ldr	x23, [x1, #16]
   13240:	ldr	x28, [x2, #16]
   13244:	b.le	13530 <mpfr_sub1sp@@Base+0x328>
   13248:	sub	x0, x19, #0x41
   1324c:	cmp	x0, #0x3e
   13250:	b.ls	138b8 <mpfr_sub1sp@@Base+0x6b0>  // b.plast
   13254:	cmp	x19, #0x40
   13258:	b.eq	13a7c <mpfr_sub1sp@@Base+0x874>  // b.none
   1325c:	sub	x0, x19, #0x81
   13260:	cmp	x0, #0x3e
   13264:	b.ls	1367c <mpfr_sub1sp@@Base+0x474>  // b.plast
   13268:	sub	x11, x19, #0x1
   1326c:	str	xzr, [x29, #168]
   13270:	add	x10, x19, #0x1
   13274:	cmp	x23, x28
   13278:	asr	x26, x11, #6
   1327c:	add	x8, x26, #0x1
   13280:	b.eq	133fc <mpfr_sub1sp@@Base+0x1f4>  // b.none
   13284:	b.lt	1341c <mpfr_sub1sp@@Base+0x214>  // b.tstop
   13288:	mov	x0, x28
   1328c:	mov	x28, x23
   13290:	mov	x23, x0
   13294:	ldr	w0, [x20, #8]
   13298:	str	w0, [x27, #8]
   1329c:	mov	x1, x21
   132a0:	sub	x22, x28, x23
   132a4:	mov	x21, x20
   132a8:	cmp	x22, #0x1
   132ac:	mov	x20, x1
   132b0:	b.ls	13434 <mpfr_sub1sp@@Base+0x22c>  // b.plast
   132b4:	neg	w24, w19
   132b8:	cmp	x19, x22
   132bc:	and	x1, x24, #0x3f
   132c0:	stp	x1, x1, [x29, #104]
   132c4:	and	w24, w24, #0x3f
   132c8:	b.ls	14440 <mpfr_sub1sp@@Base+0x1238>  // b.plast
   132cc:	lsl	x25, x8, #3
   132d0:	cmp	x25, #0x4, lsl #12
   132d4:	b.hi	1415c <mpfr_sub1sp@@Base+0xf54>  // b.pmore
   132d8:	add	x0, x25, #0xf
   132dc:	and	x0, x0, #0xfffffffffffffff0
   132e0:	sub	sp, sp, x0
   132e4:	mov	x9, sp
   132e8:	lsr	x0, x22, #6
   132ec:	ands	x3, x22, #0x3f
   132f0:	ldr	x1, [x20, #24]
   132f4:	b.eq	14574 <mpfr_sub1sp@@Base+0x136c>  // b.none
   132f8:	cbnz	x0, 14688 <mpfr_sub1sp@@Base+0x1480>
   132fc:	mov	x2, x8
   13300:	mov	x0, x9
   13304:	str	x10, [x29, #120]
   13308:	str	w4, [x29, #128]
   1330c:	stp	x11, x8, [x29, #136]
   13310:	str	x9, [x29, #152]
   13314:	bl	bce0 <__gmpn_rshift@plt>
   13318:	ldp	x11, x8, [x29, #136]
   1331c:	ldr	w4, [x29, #128]
   13320:	ldr	x10, [x29, #120]
   13324:	ldr	x9, [x29, #152]
   13328:	sub	x5, x25, #0x8
   1332c:	ldr	x1, [x21, #24]
   13330:	ldr	x0, [x9, x5]
   13334:	ldr	x2, [x1, x5]
   13338:	ldr	x3, [x9]
   1333c:	sub	x2, x2, x0
   13340:	cbz	w24, 145e0 <mpfr_sub1sp@@Base+0x13d8>
   13344:	sub	w21, w24, #0x1
   13348:	mov	x7, #0x1                   	// #1
   1334c:	mov	x12, #0xffffffffffffffff    	// #-1
   13350:	lsl	x7, x7, x21
   13354:	and	x22, x7, x3
   13358:	lsl	x21, x12, x21
   1335c:	bics	x21, x3, x21
   13360:	b.ne	139bc <mpfr_sub1sp@@Base+0x7b4>  // b.any
   13364:	ldr	x0, [x29, #112]
   13368:	add	x25, x0, x23
   1336c:	add	x11, x25, x11
   13370:	sub	x11, x11, x28
   13374:	cmp	x19, x11
   13378:	b.lt	13ea8 <mpfr_sub1sp@@Base+0xca0>  // b.tstop
   1337c:	cmp	x11, #0x0
   13380:	add	x0, x11, #0x3f
   13384:	csel	x0, x0, x11, lt  // lt = tstop
   13388:	negs	x19, x11
   1338c:	ldr	x13, [x20, #24]
   13390:	sub	x0, x26, x0, asr #6
   13394:	and	x19, x19, #0x3f
   13398:	and	x11, x11, #0x3f
   1339c:	csneg	x11, x11, x19, mi  // mi = first
   133a0:	mov	x19, #0x3f                  	// #63
   133a4:	sub	x19, x19, x11
   133a8:	ldr	x11, [x13, x0, lsl #3]
   133ac:	lsl	x19, x12, x19
   133b0:	bics	xzr, x11, x19
   133b4:	b.ne	139bc <mpfr_sub1sp@@Base+0x7b4>  // b.any
   133b8:	b	133c4 <mpfr_sub1sp@@Base+0x1bc>
   133bc:	ldr	x11, [x13, x0, lsl #3]
   133c0:	cbnz	x11, 133cc <mpfr_sub1sp@@Base+0x1c4>
   133c4:	subs	x0, x0, #0x1
   133c8:	b.pl	133bc <mpfr_sub1sp@@Base+0x1b4>  // b.nfrst
   133cc:	mvn	x0, x0
   133d0:	lsr	x21, x0, #63
   133d4:	mov	x19, #0xffffffffffffffff    	// #-1
   133d8:	str	x19, [x29, #128]
   133dc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   133e0:	cmp	x2, x0
   133e4:	b.hi	139d4 <mpfr_sub1sp@@Base+0x7cc>  // b.pmore
   133e8:	cmp	x21, #0x1
   133ec:	b.eq	14b74 <mpfr_sub1sp@@Base+0x196c>  // b.none
   133f0:	mov	x19, x21
   133f4:	str	x21, [x29, #128]
   133f8:	b	139d4 <mpfr_sub1sp@@Base+0x7cc>
   133fc:	ldr	x5, [x1, #24]
   13400:	mov	x0, x26
   13404:	ldr	x3, [x2, #24]
   13408:	ldr	x2, [x5, x0, lsl #3]
   1340c:	ldr	x1, [x3, x0, lsl #3]
   13410:	cmp	x2, x1
   13414:	b.eq	13dac <mpfr_sub1sp@@Base+0xba4>  // b.none
   13418:	b.hi	13288 <mpfr_sub1sp@@Base+0x80>  // b.pmore
   1341c:	ldr	w0, [x20, #8]
   13420:	sub	x22, x28, x23
   13424:	cmp	x22, #0x1
   13428:	neg	w0, w0
   1342c:	str	w0, [x27, #8]
   13430:	b.hi	132b4 <mpfr_sub1sp@@Base+0xac>  // b.pmore
   13434:	ldr	x24, [x20, #24]
   13438:	ldr	x6, [x21, #24]
   1343c:	cbz	x22, 13bf0 <mpfr_sub1sp@@Base+0x9e8>
   13440:	ldr	x1, [x24, x26, lsl #3]
   13444:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   13448:	ldr	x0, [x6, x26, lsl #3]
   1344c:	lsl	x23, x26, #3
   13450:	sub	x0, x0, x1, lsr #1
   13454:	cmp	x0, x2
   13458:	b.ls	13b88 <mpfr_sub1sp@@Base+0x980>  // b.plast
   1345c:	neg	w19, w19
   13460:	add	x1, x23, #0x8
   13464:	ldr	x21, [x24]
   13468:	and	w19, w19, #0x3f
   1346c:	mov	x5, #0x1                   	// #1
   13470:	cmp	x1, #0x4, lsl #12
   13474:	lsl	x5, x5, x19
   13478:	neg	x22, x5
   1347c:	and	x21, x5, x21
   13480:	ldr	x25, [x27, #24]
   13484:	b.hi	14960 <mpfr_sub1sp@@Base+0x1758>  // b.pmore
   13488:	add	x0, x23, #0x17
   1348c:	and	x0, x0, #0xfffffffffffffff0
   13490:	sub	sp, sp, x0
   13494:	mov	x20, sp
   13498:	mov	x2, x8
   1349c:	mov	x1, x24
   134a0:	mov	w3, #0x1                   	// #1
   134a4:	mov	x0, x20
   134a8:	str	w4, [x29, #120]
   134ac:	stp	x6, x5, [x29, #128]
   134b0:	str	x8, [x29, #144]
   134b4:	bl	bce0 <__gmpn_rshift@plt>
   134b8:	ldr	x0, [x20]
   134bc:	add	x9, x25, x23
   134c0:	ldr	x6, [x29, #128]
   134c4:	and	x22, x0, x22
   134c8:	ldr	x8, [x29, #144]
   134cc:	str	x22, [x20]
   134d0:	mov	x2, x20
   134d4:	mov	x0, x25
   134d8:	mov	x3, x8
   134dc:	mov	x1, x6
   134e0:	str	x9, [x29, #152]
   134e4:	bl	be60 <__gmpn_sub_n@plt>
   134e8:	str	x28, [x27, #16]
   134ec:	ldr	w4, [x29, #120]
   134f0:	ldr	x0, [x25, x23]
   134f4:	ldr	x5, [x29, #136]
   134f8:	ldr	x9, [x29, #152]
   134fc:	cbnz	x21, 1498c <mpfr_sub1sp@@Base+0x1784>
   13500:	ldr	x0, [x29, #168]
   13504:	cbnz	x0, 13c78 <mpfr_sub1sp@@Base+0xa70>
   13508:	mov	w1, #0x0                   	// #0
   1350c:	mov	sp, x29
   13510:	mov	w0, w1
   13514:	ldp	x19, x20, [sp, #16]
   13518:	ldp	x21, x22, [sp, #32]
   1351c:	ldp	x23, x24, [sp, #48]
   13520:	ldp	x25, x26, [sp, #64]
   13524:	ldp	x27, x28, [sp, #80]
   13528:	ldp	x29, x30, [sp], #176
   1352c:	ret
   13530:	cmp	x23, x28
   13534:	ldr	x3, [x1, #24]
   13538:	ldr	x6, [x2, #24]
   1353c:	ldr	x5, [x0, #24]
   13540:	b.eq	13844 <mpfr_sub1sp@@Base+0x63c>  // b.none
   13544:	ldr	w1, [x1, #8]
   13548:	b.gt	13568 <mpfr_sub1sp@@Base+0x360>
   1354c:	mov	x2, x3
   13550:	mov	x0, x23
   13554:	mov	x3, x6
   13558:	mov	x23, x28
   1355c:	mov	x6, x2
   13560:	mov	x28, x0
   13564:	neg	w1, w1
   13568:	mov	x10, #0x40                  	// #64
   1356c:	sub	x19, x10, x19
   13570:	ldr	x0, [x3]
   13574:	str	w1, [x27, #8]
   13578:	sub	x28, x23, x28
   1357c:	mov	x2, #0x1                   	// #1
   13580:	cmp	x28, #0x3f
   13584:	lsl	x7, x2, x19
   13588:	b.hi	13b2c <mpfr_sub1sp@@Base+0x924>  // b.pmore
   1358c:	ldr	x9, [x6]
   13590:	sub	w8, w10, w28
   13594:	sub	w12, w19, #0x1
   13598:	mrs	x20, tpidr_el0
   1359c:	neg	x6, x7
   135a0:	sub	x3, x7, #0x1
   135a4:	lsl	x8, x9, x8
   135a8:	negs	x11, x8
   135ac:	cset	x8, ne  // ne = any
   135b0:	lsr	x28, x9, x28
   135b4:	sub	x0, x0, x28
   135b8:	lsl	x9, x2, x12
   135bc:	sub	x2, x0, x8
   135c0:	eor	x3, x3, x9
   135c4:	clz	x8, x2
   135c8:	sub	w0, w10, w8
   135cc:	cmp	w8, #0x0
   135d0:	lsl	x10, x2, x8
   135d4:	sub	x23, x23, x8
   135d8:	lsr	x0, x11, x0
   135dc:	orr	x0, x0, x10
   135e0:	csel	x2, x2, x0, eq  // eq = none
   135e4:	lsl	x8, x11, x8
   135e8:	and	x6, x6, x2
   135ec:	str	x6, [x5]
   135f0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   135f4:	ldr	x10, [x0, #2512]
   135f8:	add	x0, x0, #0x9d0
   135fc:	blr	x10
   13600:	and	x3, x3, x2
   13604:	ldr	x6, [x20, x0]
   13608:	and	x2, x9, x2
   1360c:	orr	x0, x3, x8
   13610:	cmp	x23, x6
   13614:	b.lt	138a0 <mpfr_sub1sp@@Base+0x698>  // b.tstop
   13618:	str	x23, [x27, #16]
   1361c:	orr	x3, x2, x0
   13620:	cbz	x3, 13508 <mpfr_sub1sp@@Base+0x300>
   13624:	cmp	w4, #0x5
   13628:	b.eq	13508 <mpfr_sub1sp@@Base+0x300>  // b.none
   1362c:	cbz	w4, 13ebc <mpfr_sub1sp@@Base+0xcb4>
   13630:	cmp	w4, #0x1
   13634:	b.eq	13ed8 <mpfr_sub1sp@@Base+0xcd0>  // b.none
   13638:	add	w3, w4, w1, lsr #31
   1363c:	cmp	w3, #0x3
   13640:	b.eq	13ed8 <mpfr_sub1sp@@Base+0xcd0>  // b.none
   13644:	ldr	x2, [x5]
   13648:	add	x7, x7, x2
   1364c:	str	x7, [x5]
   13650:	cbz	x7, 141f4 <mpfr_sub1sp@@Base+0xfec>
   13654:	cbz	w1, 1350c <mpfr_sub1sp@@Base+0x304>
   13658:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1365c:	ldr	x2, [x0, #2576]
   13660:	add	x0, x0, #0xa10
   13664:	blr	x2
   13668:	add	x0, x20, x0
   1366c:	ldr	w2, [x0]
   13670:	orr	w2, w2, #0x8
   13674:	str	w2, [x0]
   13678:	b	1350c <mpfr_sub1sp@@Base+0x304>
   1367c:	cmp	x23, x28
   13680:	ldr	x0, [x1, #24]
   13684:	ldr	x10, [x2, #24]
   13688:	ldr	x5, [x27, #24]
   1368c:	b.eq	14230 <mpfr_sub1sp@@Base+0x1028>  // b.none
   13690:	ldr	w1, [x1, #8]
   13694:	b.le	140e0 <mpfr_sub1sp@@Base+0xed8>
   13698:	mov	x7, #0xc0                  	// #192
   1369c:	sub	x19, x7, x19
   136a0:	ldp	x14, x12, [x0]
   136a4:	sub	x28, x23, x28
   136a8:	ldr	x13, [x0, #16]
   136ac:	str	w1, [x27, #8]
   136b0:	mov	x11, #0x1                   	// #1
   136b4:	cmp	x28, #0x3f
   136b8:	lsl	x6, x11, x19
   136bc:	sub	x2, x6, #0x1
   136c0:	b.hi	13f04 <mpfr_sub1sp@@Base+0xcfc>  // b.pmore
   136c4:	ldp	x15, x9, [x10]
   136c8:	mov	w7, #0x40                  	// #64
   136cc:	sub	w7, w7, w28
   136d0:	mov	x0, x11
   136d4:	ldr	x3, [x10, #16]
   136d8:	lsl	x8, x9, x7
   136dc:	lsr	x10, x15, x28
   136e0:	orr	x8, x8, x10
   136e4:	subs	x16, x14, x8
   136e8:	lsl	x10, x3, x7
   136ec:	cmp	x14, x8
   136f0:	lsr	x9, x9, x28
   136f4:	orr	x9, x10, x9
   136f8:	cset	w8, cc  // cc = lo, ul, last
   136fc:	sbc	x9, x12, x9
   13700:	lsl	x7, x15, x7
   13704:	cmp	x9, x12
   13708:	b.hi	13718 <mpfr_sub1sp@@Base+0x510>  // b.pmore
   1370c:	cmp	w8, #0x0
   13710:	ccmp	x9, x12, #0x0, ne  // ne = any
   13714:	cset	x0, eq  // eq = none
   13718:	lsr	x3, x3, x28
   1371c:	sub	x3, x13, x3
   13720:	sub	x11, x3, x0
   13724:	cbz	x7, 146e0 <mpfr_sub1sp@@Base+0x14d8>
   13728:	orr	x0, x16, x9
   1372c:	neg	x7, x7
   13730:	cmp	x0, #0x0
   13734:	cset	x0, eq  // eq = none
   13738:	cmp	x16, #0x0
   1373c:	cset	x3, eq  // eq = none
   13740:	sub	x0, x11, x0
   13744:	sub	x9, x9, x3
   13748:	sub	x11, x16, #0x1
   1374c:	clz	x8, x0
   13750:	cbz	x8, 146d8 <mpfr_sub1sp@@Base+0x14d0>
   13754:	mov	w10, #0x40                  	// #64
   13758:	sub	w10, w10, w8
   1375c:	lsl	x0, x0, x8
   13760:	sub	x23, x23, x8
   13764:	lsr	x3, x9, x10
   13768:	orr	x0, x0, x3
   1376c:	lsl	x3, x11, x8
   13770:	str	x0, [x5, #16]
   13774:	lsr	x0, x11, x10
   13778:	lsr	x10, x7, x10
   1377c:	orr	x11, x10, x3
   13780:	lsl	x9, x9, x8
   13784:	orr	x0, x9, x0
   13788:	lsl	x7, x7, x8
   1378c:	str	x0, [x5, #8]
   13790:	sub	w8, w19, #0x1
   13794:	mov	x0, #0x1                   	// #1
   13798:	neg	x3, x6
   1379c:	lsl	x0, x0, x8
   137a0:	eor	x2, x2, x0
   137a4:	and	x2, x2, x11
   137a8:	and	x8, x0, x11
   137ac:	orr	x2, x2, x7
   137b0:	and	x3, x3, x11
   137b4:	str	x3, [x5]
   137b8:	mrs	x20, tpidr_el0
   137bc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   137c0:	ldr	x3, [x0, #2512]
   137c4:	add	x0, x0, #0x9d0
   137c8:	blr	x3
   137cc:	ldr	x0, [x20, x0]
   137d0:	cmp	x0, x23
   137d4:	b.gt	14334 <mpfr_sub1sp@@Base+0x112c>
   137d8:	str	x23, [x27, #16]
   137dc:	orr	x0, x8, x2
   137e0:	cbz	x0, 13508 <mpfr_sub1sp@@Base+0x300>
   137e4:	cmp	w4, #0x5
   137e8:	b.eq	13508 <mpfr_sub1sp@@Base+0x300>  // b.none
   137ec:	cbnz	w4, 1437c <mpfr_sub1sp@@Base+0x1174>
   137f0:	cbz	x8, 13ed8 <mpfr_sub1sp@@Base+0xcd0>
   137f4:	ldr	x0, [x5]
   137f8:	lsr	x19, x0, x19
   137fc:	and	x3, x19, #0x1
   13800:	orr	x2, x3, x2
   13804:	cbz	x2, 13ed8 <mpfr_sub1sp@@Base+0xcd0>
   13808:	ldp	x3, x2, [x5, #8]
   1380c:	add	x0, x6, x0
   13810:	cmp	x0, #0x0
   13814:	cinc	x3, x3, eq  // eq = none
   13818:	stp	x0, x3, [x5]
   1381c:	orr	x0, x0, x3
   13820:	cmp	x0, #0x0
   13824:	cinc	x0, x2, eq  // eq = none
   13828:	str	x0, [x5, #16]
   1382c:	cbnz	x0, 13654 <mpfr_sub1sp@@Base+0x44c>
   13830:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   13834:	str	x0, [x5, #16]
   13838:	add	x23, x23, #0x1
   1383c:	str	x23, [x27, #16]
   13840:	b	13654 <mpfr_sub1sp@@Base+0x44c>
   13844:	ldr	x0, [x3]
   13848:	ldr	x2, [x6]
   1384c:	subs	x1, x0, x2
   13850:	cmp	x0, x2
   13854:	cset	x3, cc  // cc = lo, ul, last
   13858:	cbz	x1, 14140 <mpfr_sub1sp@@Base+0xf38>
   1385c:	ldr	w6, [x20, #8]
   13860:	cbz	x3, 1386c <mpfr_sub1sp@@Base+0x664>
   13864:	neg	w6, w6
   13868:	sub	x1, x2, x0
   1386c:	clz	x3, x1
   13870:	mrs	x2, tpidr_el0
   13874:	str	w6, [x27, #8]
   13878:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1387c:	ldr	x6, [x0, #2512]
   13880:	add	x0, x0, #0x9d0
   13884:	blr	x6
   13888:	lsl	x1, x1, x3
   1388c:	str	x1, [x5]
   13890:	sub	x23, x23, x3
   13894:	ldr	x6, [x2, x0]
   13898:	cmp	x23, x6
   1389c:	b.ge	13b20 <mpfr_sub1sp@@Base+0x918>  // b.tcont
   138a0:	cbnz	w4, 14880 <mpfr_sub1sp@@Base+0x1678>
   138a4:	sub	x6, x6, #0x1
   138a8:	cmp	x6, x23
   138ac:	b.le	14f64 <mpfr_sub1sp@@Base+0x1d5c>
   138b0:	mov	w4, #0x1                   	// #1
   138b4:	b	14880 <mpfr_sub1sp@@Base+0x1678>
   138b8:	cmp	x23, x28
   138bc:	ldr	x3, [x1, #24]
   138c0:	ldr	x6, [x2, #24]
   138c4:	ldr	x5, [x27, #24]
   138c8:	b.eq	13cdc <mpfr_sub1sp@@Base+0xad4>  // b.none
   138cc:	ldr	w1, [x1, #8]
   138d0:	b.gt	138f0 <mpfr_sub1sp@@Base+0x6e8>
   138d4:	mov	x2, x3
   138d8:	mov	x0, x23
   138dc:	mov	x3, x6
   138e0:	mov	x23, x28
   138e4:	mov	x6, x2
   138e8:	mov	x28, x0
   138ec:	neg	w1, w1
   138f0:	mov	x8, #0x80                  	// #128
   138f4:	sub	x19, x8, x19
   138f8:	ldp	x11, x12, [x3]
   138fc:	str	w1, [x27, #8]
   13900:	sub	x28, x23, x28
   13904:	mov	x9, #0x1                   	// #1
   13908:	lsl	x7, x9, x19
   1390c:	cmp	x28, #0x3f
   13910:	sub	x10, x7, #0x1
   13914:	b.hi	13dd8 <mpfr_sub1sp@@Base+0xbd0>  // b.pmore
   13918:	ldp	x8, x0, [x6]
   1391c:	mov	w3, #0x40                  	// #64
   13920:	sub	w3, w3, w28
   13924:	lsr	x6, x8, x28
   13928:	lsl	x2, x0, x3
   1392c:	orr	x2, x2, x6
   13930:	cmp	x2, x11
   13934:	lsl	x8, x8, x3
   13938:	lsr	x0, x0, x28
   1393c:	cset	x3, hi  // hi = pmore
   13940:	sub	x0, x12, x0
   13944:	sub	x2, x11, x2
   13948:	sub	x0, x0, x3
   1394c:	cbnz	x8, 140c4 <mpfr_sub1sp@@Base+0xebc>
   13950:	cbnz	x0, 14f00 <mpfr_sub1sp@@Base+0x1cf8>
   13954:	sub	x23, x23, #0x40
   13958:	mov	x8, x0
   1395c:	clz	x3, x2
   13960:	cbz	x3, 1398c <mpfr_sub1sp@@Base+0x784>
   13964:	mov	w6, #0x40                  	// #64
   13968:	sub	w6, w6, w3
   1396c:	lsl	x2, x2, x3
   13970:	sub	x23, x23, x3
   13974:	lsr	x9, x0, x6
   13978:	orr	x2, x2, x9
   1397c:	lsr	x6, x8, x6
   13980:	lsl	x0, x0, x3
   13984:	orr	x0, x6, x0
   13988:	lsl	x8, x8, x3
   1398c:	sub	w9, w19, #0x1
   13990:	mov	x6, #0x1                   	// #1
   13994:	str	x2, [x5, #8]
   13998:	neg	x3, x7
   1399c:	lsl	x6, x6, x9
   139a0:	eor	x2, x10, x6
   139a4:	and	x2, x2, x0
   139a8:	and	x9, x6, x0
   139ac:	orr	x2, x2, x8
   139b0:	and	x0, x3, x0
   139b4:	str	x0, [x5]
   139b8:	b	14094 <mpfr_sub1sp@@Base+0xe8c>
   139bc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   139c0:	cmp	x2, x0
   139c4:	b.ls	14b70 <mpfr_sub1sp@@Base+0x1968>  // b.plast
   139c8:	mov	x19, #0xffffffffffffffff    	// #-1
   139cc:	mov	x21, #0x1                   	// #1
   139d0:	str	x19, [x29, #128]
   139d4:	mov	x20, #0x1                   	// #1
   139d8:	mov	x2, x9
   139dc:	lsl	x23, x20, x24
   139e0:	neg	x0, x23
   139e4:	ldr	x25, [x27, #24]
   139e8:	and	x3, x0, x3
   139ec:	str	x3, [x9]
   139f0:	mov	x3, x8
   139f4:	mov	x0, x25
   139f8:	str	w4, [x29, #136]
   139fc:	stp	x5, x8, [x29, #144]
   13a00:	bl	be60 <__gmpn_sub_n@plt>
   13a04:	ldr	w4, [x29, #136]
   13a08:	ldp	x5, x8, [x29, #144]
   13a0c:	ldr	x0, [x25, x5]
   13a10:	add	x9, x25, x5
   13a14:	tbz	x0, #63, 14650 <mpfr_sub1sp@@Base+0x1448>
   13a18:	cmp	w4, #0x5
   13a1c:	b.ne	14188 <mpfr_sub1sp@@Base+0xf80>  // b.any
   13a20:	ldr	x0, [x9]
   13a24:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   13a28:	cmp	x0, x1
   13a2c:	b.eq	144cc <mpfr_sub1sp@@Base+0x12c4>  // b.none
   13a30:	orr	x21, x22, x21
   13a34:	cmp	x21, #0x0
   13a38:	cset	w19, ne  // ne = any
   13a3c:	ldr	x0, [x29, #168]
   13a40:	str	x28, [x27, #16]
   13a44:	cbnz	x0, 14398 <mpfr_sub1sp@@Base+0x1190>
   13a48:	ldr	w1, [x27, #8]
   13a4c:	mul	w1, w19, w1
   13a50:	cbz	w1, 1350c <mpfr_sub1sp@@Base+0x304>
   13a54:	mrs	x2, tpidr_el0
   13a58:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   13a5c:	ldr	x3, [x0, #2576]
   13a60:	add	x0, x0, #0xa10
   13a64:	blr	x3
   13a68:	add	x0, x2, x0
   13a6c:	ldr	w2, [x0]
   13a70:	orr	w2, w2, #0x8
   13a74:	str	w2, [x0]
   13a78:	b	1350c <mpfr_sub1sp@@Base+0x304>
   13a7c:	cmp	x23, x28
   13a80:	ldr	x0, [x1, #24]
   13a84:	ldr	x5, [x2, #24]
   13a88:	ldr	x6, [x27, #24]
   13a8c:	b.eq	14100 <mpfr_sub1sp@@Base+0xef8>  // b.none
   13a90:	ldr	w1, [x1, #8]
   13a94:	b.gt	13ab4 <mpfr_sub1sp@@Base+0x8ac>
   13a98:	mov	x3, x0
   13a9c:	mov	x2, x23
   13aa0:	mov	x0, x5
   13aa4:	mov	x23, x28
   13aa8:	mov	x5, x3
   13aac:	mov	x28, x2
   13ab0:	neg	w1, w1
   13ab4:	ldr	x3, [x0]
   13ab8:	str	w1, [x27, #8]
   13abc:	sub	x28, x23, x28
   13ac0:	cmp	x28, #0x3f
   13ac4:	b.hi	143a0 <mpfr_sub1sp@@Base+0x1198>  // b.pmore
   13ac8:	ldr	x5, [x5]
   13acc:	mov	w2, #0x40                  	// #64
   13ad0:	sub	w0, w2, w28
   13ad4:	lsl	x0, x5, x0
   13ad8:	negs	x0, x0
   13adc:	lsr	x28, x5, x28
   13ae0:	cset	x5, ne  // ne = any
   13ae4:	sub	x3, x3, x28
   13ae8:	subs	x3, x3, x5
   13aec:	b.ne	14808 <mpfr_sub1sp@@Base+0x1600>  // b.any
   13af0:	sub	x23, x23, #0x40
   13af4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   13af8:	str	x0, [x6]
   13afc:	mrs	x1, tpidr_el0
   13b00:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   13b04:	ldr	x2, [x0, #2512]
   13b08:	add	x0, x0, #0x9d0
   13b0c:	blr	x2
   13b10:	ldr	x0, [x1, x0]
   13b14:	cmp	x23, x0
   13b18:	b.lt	14f40 <mpfr_sub1sp@@Base+0x1d38>  // b.tstop
   13b1c:	nop
   13b20:	mov	w1, #0x0                   	// #0
   13b24:	str	x23, [x27, #16]
   13b28:	b	1350c <mpfr_sub1sp@@Base+0x304>
   13b2c:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   13b30:	cmp	x0, x3
   13b34:	b.hi	13fe8 <mpfr_sub1sp@@Base+0xde0>  // b.pmore
   13b38:	cmp	x28, #0x40
   13b3c:	ccmp	x19, #0x1, #0x0, ls  // ls = plast
   13b40:	b.gt	13b50 <mpfr_sub1sp@@Base+0x948>
   13b44:	ldr	x0, [x6]
   13b48:	cmp	x0, x3
   13b4c:	cset	x2, eq  // eq = none
   13b50:	sub	x23, x23, #0x1
   13b54:	neg	x0, x7
   13b58:	str	x0, [x5]
   13b5c:	mrs	x20, tpidr_el0
   13b60:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   13b64:	ldr	x3, [x0, #2512]
   13b68:	add	x0, x0, #0x9d0
   13b6c:	blr	x3
   13b70:	ldr	x6, [x20, x0]
   13b74:	cmp	x23, x6
   13b78:	b.lt	138a0 <mpfr_sub1sp@@Base+0x698>  // b.tstop
   13b7c:	mov	x0, #0x1                   	// #1
   13b80:	str	x23, [x27, #16]
   13b84:	b	13624 <mpfr_sub1sp@@Base+0x41c>
   13b88:	tbnz	x0, #63, 149ec <mpfr_sub1sp@@Base+0x17e4>
   13b8c:	add	x19, x23, #0x8
   13b90:	cmp	x19, #0x4, lsl #12
   13b94:	ldr	x22, [x27, #24]
   13b98:	b.hi	14208 <mpfr_sub1sp@@Base+0x1000>  // b.pmore
   13b9c:	add	x23, x23, #0x17
   13ba0:	and	x23, x23, #0xfffffffffffffff0
   13ba4:	sub	sp, sp, x23
   13ba8:	mov	x20, sp
   13bac:	mov	x1, x6
   13bb0:	mov	x2, x8
   13bb4:	mov	w3, #0x1                   	// #1
   13bb8:	mov	x0, x20
   13bbc:	str	w4, [x29, #144]
   13bc0:	sub	x28, x28, #0x1
   13bc4:	str	x8, [x29, #152]
   13bc8:	bl	bcc0 <__gmpn_lshift@plt>
   13bcc:	ldr	x8, [x29, #152]
   13bd0:	mov	x2, x24
   13bd4:	mov	x1, x20
   13bd8:	mov	x0, x22
   13bdc:	mov	x3, x8
   13be0:	bl	be60 <__gmpn_sub_n@plt>
   13be4:	ldr	w4, [x29, #144]
   13be8:	ldr	x8, [x29, #152]
   13bec:	b	13c1c <mpfr_sub1sp@@Base+0xa14>
   13bf0:	ldr	x22, [x27, #24]
   13bf4:	lsl	x19, x8, #3
   13bf8:	mov	x3, x8
   13bfc:	mov	x2, x24
   13c00:	mov	x1, x6
   13c04:	mov	x0, x22
   13c08:	str	w4, [x29, #144]
   13c0c:	str	x8, [x29, #152]
   13c10:	bl	be60 <__gmpn_sub_n@plt>
   13c14:	ldr	w4, [x29, #144]
   13c18:	ldr	x8, [x29, #152]
   13c1c:	add	x19, x22, x19
   13c20:	ldur	x0, [x19, #-8]
   13c24:	cbz	x0, 13c80 <mpfr_sub1sp@@Base+0xa78>
   13c28:	clz	x3, x0
   13c2c:	cbz	x3, 13c4c <mpfr_sub1sp@@Base+0xa44>
   13c30:	mov	x2, x8
   13c34:	sub	x28, x28, x3
   13c38:	mov	x1, x22
   13c3c:	mov	x0, x22
   13c40:	str	w4, [x29, #152]
   13c44:	bl	bcc0 <__gmpn_lshift@plt>
   13c48:	ldr	w4, [x29, #152]
   13c4c:	mrs	x20, tpidr_el0
   13c50:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   13c54:	ldr	x1, [x0, #2512]
   13c58:	add	x0, x0, #0x9d0
   13c5c:	blr	x1
   13c60:	ldr	x0, [x20, x0]
   13c64:	cmp	x0, x28
   13c68:	ldr	x0, [x29, #168]
   13c6c:	b.gt	14848 <mpfr_sub1sp@@Base+0x1640>
   13c70:	str	x28, [x27, #16]
   13c74:	cbz	x0, 13508 <mpfr_sub1sp@@Base+0x300>
   13c78:	bl	c410 <mpfr_tmp_free@plt>
   13c7c:	b	13508 <mpfr_sub1sp@@Base+0x300>
   13c80:	mov	x2, x26
   13c84:	sub	x26, x26, #0x1
   13c88:	ldr	x0, [x22, x26, lsl #3]
   13c8c:	cbz	x0, 13c80 <mpfr_sub1sp@@Base+0xa78>
   13c90:	sub	x20, x8, x2
   13c94:	str	w4, [x29, #152]
   13c98:	clz	x3, x0
   13c9c:	mov	x1, x22
   13ca0:	lsl	x21, x20, #3
   13ca4:	mov	x19, x3
   13ca8:	add	x0, x22, x21
   13cac:	cbz	x3, 14a48 <mpfr_sub1sp@@Base+0x1840>
   13cb0:	bl	bcc0 <__gmpn_lshift@plt>
   13cb4:	ldr	w4, [x29, #152]
   13cb8:	mov	x2, x21
   13cbc:	mov	x0, x22
   13cc0:	mov	w1, #0x0                   	// #0
   13cc4:	str	w4, [x29, #152]
   13cc8:	bl	c110 <memset@plt>
   13ccc:	add	x0, x19, x20, lsl #6
   13cd0:	ldr	w4, [x29, #152]
   13cd4:	sub	x28, x28, x0
   13cd8:	b	13c4c <mpfr_sub1sp@@Base+0xa44>
   13cdc:	ldp	x1, x8, [x3]
   13ce0:	ldp	x7, x3, [x6]
   13ce4:	cmp	x1, x7
   13ce8:	sub	x0, x8, x3
   13cec:	cset	x6, cc  // cc = lo, ul, last
   13cf0:	sub	x2, x1, x7
   13cf4:	sub	x0, x0, x6
   13cf8:	orr	x9, x2, x0
   13cfc:	cbz	x9, 13db8 <mpfr_sub1sp@@Base+0xbb0>
   13d00:	ldr	w9, [x20, #8]
   13d04:	cmp	x8, x0
   13d08:	b.hi	13d24 <mpfr_sub1sp@@Base+0xb1c>  // b.pmore
   13d0c:	subs	x2, x7, x1
   13d10:	sub	x0, x3, x8
   13d14:	cset	x1, ne  // ne = any
   13d18:	neg	w9, w9
   13d1c:	sub	x6, x6, x1
   13d20:	add	x0, x6, x0
   13d24:	str	w9, [x27, #8]
   13d28:	cbnz	x0, 13d38 <mpfr_sub1sp@@Base+0xb30>
   13d2c:	sub	x23, x23, #0x40
   13d30:	mov	x0, x2
   13d34:	mov	x2, #0x0                   	// #0
   13d38:	clz	x3, x0
   13d3c:	cbz	x3, 147b0 <mpfr_sub1sp@@Base+0x15a8>
   13d40:	neg	w6, w3
   13d44:	lsl	x1, x0, x3
   13d48:	sub	x23, x23, x3
   13d4c:	lsl	x3, x2, x3
   13d50:	lsr	x0, x2, x6
   13d54:	orr	x0, x0, x1
   13d58:	stp	x3, x0, [x5]
   13d5c:	mrs	x1, tpidr_el0
   13d60:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   13d64:	ldr	x2, [x0, #2512]
   13d68:	add	x0, x0, #0x9d0
   13d6c:	blr	x2
   13d70:	ldr	x0, [x1, x0]
   13d74:	cmp	x23, x0
   13d78:	b.ge	13b20 <mpfr_sub1sp@@Base+0x918>  // b.tcont
   13d7c:	cbnz	w4, 14880 <mpfr_sub1sp@@Base+0x1678>
   13d80:	sub	x0, x0, #0x1
   13d84:	cmp	x0, x23
   13d88:	b.gt	138b0 <mpfr_sub1sp@@Base+0x6a8>
   13d8c:	ldr	x1, [x5, #8]
   13d90:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   13d94:	cmp	x1, x0
   13d98:	b.ne	14880 <mpfr_sub1sp@@Base+0x1678>  // b.any
   13d9c:	ldr	x0, [x5]
   13da0:	cmp	x0, #0x0
   13da4:	cset	w4, eq  // eq = none
   13da8:	b	14880 <mpfr_sub1sp@@Base+0x1678>
   13dac:	sub	x0, x0, #0x1
   13db0:	cmn	x0, #0x1
   13db4:	b.ne	13408 <mpfr_sub1sp@@Base+0x200>  // b.any
   13db8:	cmp	w4, #0x3
   13dbc:	mov	w0, #0x1                   	// #1
   13dc0:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   13dc4:	cneg	w0, w0, eq  // eq = none
   13dc8:	mov	w1, #0x0                   	// #0
   13dcc:	str	w0, [x27, #8]
   13dd0:	str	x2, [x27, #16]
   13dd4:	b	1350c <mpfr_sub1sp@@Base+0x304>
   13dd8:	cmp	x28, #0x7f
   13ddc:	b.ls	13ff4 <mpfr_sub1sp@@Base+0xdec>  // b.plast
   13de0:	cmp	x7, x11
   13de4:	cset	x3, hi  // hi = pmore
   13de8:	subs	x3, x12, x3
   13dec:	b.mi	1483c <mpfr_sub1sp@@Base+0x1634>  // b.first
   13df0:	cmp	x28, #0x80
   13df4:	ccmp	x19, #0x1, #0x0, ls  // ls = plast
   13df8:	b.gt	13e20 <mpfr_sub1sp@@Base+0xc18>
   13dfc:	ldr	x2, [x6, #8]
   13e00:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   13e04:	mov	x9, #0x0                   	// #0
   13e08:	cmp	x2, x0
   13e0c:	b.ne	13e20 <mpfr_sub1sp@@Base+0xc18>  // b.any
   13e10:	ldr	x0, [x6]
   13e14:	cmp	x0, #0x0
   13e18:	cset	x9, eq  // eq = none
   13e1c:	nop
   13e20:	sub	x23, x23, #0x1
   13e24:	neg	x2, x7
   13e28:	mov	x0, #0xffffffffffffffff    	// #-1
   13e2c:	stp	x2, x0, [x5]
   13e30:	mrs	x20, tpidr_el0
   13e34:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   13e38:	ldr	x2, [x0, #2512]
   13e3c:	add	x0, x0, #0x9d0
   13e40:	blr	x2
   13e44:	ldr	x0, [x20, x0]
   13e48:	cmp	x23, x0
   13e4c:	b.lt	13d7c <mpfr_sub1sp@@Base+0xb74>  // b.tstop
   13e50:	mov	x2, #0x1                   	// #1
   13e54:	str	x23, [x27, #16]
   13e58:	cmp	w4, #0x5
   13e5c:	b.eq	13508 <mpfr_sub1sp@@Base+0x300>  // b.none
   13e60:	cbnz	w4, 14360 <mpfr_sub1sp@@Base+0x1158>
   13e64:	cbz	x9, 13ed8 <mpfr_sub1sp@@Base+0xcd0>
   13e68:	ldr	x0, [x5]
   13e6c:	lsr	x19, x0, x19
   13e70:	and	x3, x19, #0x1
   13e74:	orr	x2, x3, x2
   13e78:	cbz	x2, 13ed8 <mpfr_sub1sp@@Base+0xcd0>
   13e7c:	ldr	x2, [x5, #8]
   13e80:	add	x7, x0, x7
   13e84:	cmp	x7, #0x0
   13e88:	cinc	x0, x2, eq  // eq = none
   13e8c:	stp	x7, x0, [x5]
   13e90:	cbnz	x0, 13654 <mpfr_sub1sp@@Base+0x44c>
   13e94:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   13e98:	str	x0, [x5, #8]
   13e9c:	add	x23, x23, #0x1
   13ea0:	str	x23, [x27, #16]
   13ea4:	b	13654 <mpfr_sub1sp@@Base+0x44c>
   13ea8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   13eac:	cmp	x2, x0
   13eb0:	csel	x19, x12, xzr, hi  // hi = pmore
   13eb4:	str	x19, [x29, #128]
   13eb8:	b	139d4 <mpfr_sub1sp@@Base+0x7cc>
   13ebc:	cbz	x2, 13ed8 <mpfr_sub1sp@@Base+0xcd0>
   13ec0:	ldr	x2, [x5]
   13ec4:	lsr	x19, x2, x19
   13ec8:	and	x19, x19, #0x1
   13ecc:	orr	x0, x19, x0
   13ed0:	cbnz	x0, 13648 <mpfr_sub1sp@@Base+0x440>
   13ed4:	nop
   13ed8:	cbz	w1, 13508 <mpfr_sub1sp@@Base+0x300>
   13edc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   13ee0:	ldr	x2, [x0, #2576]
   13ee4:	add	x0, x0, #0xa10
   13ee8:	blr	x2
   13eec:	add	x0, x20, x0
   13ef0:	neg	w1, w1
   13ef4:	ldr	w2, [x0]
   13ef8:	orr	w2, w2, #0x8
   13efc:	str	w2, [x0]
   13f00:	b	1350c <mpfr_sub1sp@@Base+0x304>
   13f04:	cmp	x28, #0x7f
   13f08:	b.hi	146f8 <mpfr_sub1sp@@Base+0x14f0>  // b.pmore
   13f0c:	cmp	x28, #0x40
   13f10:	sub	w3, w28, #0x40
   13f14:	ldp	x11, x8, [x10]
   13f18:	ldr	x7, [x10, #16]
   13f1c:	b.eq	13f44 <mpfr_sub1sp@@Base+0xd3c>  // b.none
   13f20:	mov	w0, #0x80                  	// #128
   13f24:	sub	w28, w0, w28
   13f28:	cmp	x11, #0x0
   13f2c:	lsr	x0, x8, x3
   13f30:	cset	x11, ne  // ne = any
   13f34:	lsl	x8, x8, x28
   13f38:	lsl	x28, x7, x28
   13f3c:	orr	x11, x8, x11
   13f40:	orr	x8, x28, x0
   13f44:	subs	x10, x14, x8
   13f48:	lsr	x7, x7, x3
   13f4c:	cmp	x14, x8
   13f50:	mov	x9, x10
   13f54:	sbc	x0, x12, x7
   13f58:	mov	x3, #0x1                   	// #1
   13f5c:	cset	w7, cc  // cc = lo, ul, last
   13f60:	cmp	x0, x12
   13f64:	b.hi	13f74 <mpfr_sub1sp@@Base+0xd6c>  // b.pmore
   13f68:	cmp	w7, #0x0
   13f6c:	ccmp	x0, x12, #0x0, ne  // ne = any
   13f70:	cset	x3, eq  // eq = none
   13f74:	sub	x3, x13, x3
   13f78:	cbz	x11, 13fa0 <mpfr_sub1sp@@Base+0xd98>
   13f7c:	orr	x7, x10, x0
   13f80:	neg	x11, x11
   13f84:	cmp	x7, #0x0
   13f88:	sub	x9, x10, #0x1
   13f8c:	cset	x8, eq  // eq = none
   13f90:	cmp	x10, #0x0
   13f94:	cset	x7, eq  // eq = none
   13f98:	sub	x3, x3, x8
   13f9c:	sub	x0, x0, x7
   13fa0:	tbnz	x3, #63, 14938 <mpfr_sub1sp@@Base+0x1730>
   13fa4:	sub	x23, x23, #0x1
   13fa8:	extr	x3, x3, x0, #63
   13fac:	extr	x0, x0, x9, #63
   13fb0:	stp	x0, x3, [x5, #8]
   13fb4:	extr	x9, x9, x11, #63
   13fb8:	lsl	x11, x11, #1
   13fbc:	sub	w3, w19, #0x1
   13fc0:	mov	x8, #0x1                   	// #1
   13fc4:	neg	x0, x6
   13fc8:	lsl	x8, x8, x3
   13fcc:	eor	x2, x2, x8
   13fd0:	and	x2, x2, x9
   13fd4:	and	x8, x8, x9
   13fd8:	orr	x2, x2, x11
   13fdc:	and	x9, x0, x9
   13fe0:	str	x9, [x5]
   13fe4:	b	137b8 <mpfr_sub1sp@@Base+0x5b0>
   13fe8:	sub	x0, x0, x7
   13fec:	str	x0, [x5]
   13ff0:	b	13b5c <mpfr_sub1sp@@Base+0x954>
   13ff4:	ldp	x9, x6, [x6]
   13ff8:	cmp	x9, #0x0
   13ffc:	cset	w13, ne  // ne = any
   14000:	cset	x2, ne  // ne = any
   14004:	cmp	x28, #0x40
   14008:	b.eq	14024 <mpfr_sub1sp@@Base+0xe1c>  // b.none
   1400c:	sub	w3, w8, w28
   14010:	lsl	x3, x6, x3
   14014:	orr	x9, x3, x2
   14018:	cmp	x9, #0x0
   1401c:	cset	w13, ne  // ne = any
   14020:	cset	x2, ne  // ne = any
   14024:	sub	w28, w28, #0x40
   14028:	neg	x3, x9
   1402c:	lsr	x6, x6, x28
   14030:	add	x6, x6, x2
   14034:	cmp	x6, x11
   14038:	sub	x11, x11, x6
   1403c:	cset	x0, hi  // hi = pmore
   14040:	cmp	x6, #0x0
   14044:	ccmp	w13, #0x0, #0x4, eq  // eq = none
   14048:	sub	x0, x12, x0
   1404c:	cset	x2, ne  // ne = any
   14050:	subs	x0, x0, x2
   14054:	b.mi	14068 <mpfr_sub1sp@@Base+0xe60>  // b.first
   14058:	sub	x23, x23, #0x1
   1405c:	extr	x0, x0, x11, #63
   14060:	extr	x11, x11, x3, #63
   14064:	lsl	x3, x3, #1
   14068:	sub	w2, w19, #0x1
   1406c:	mov	x9, #0x1                   	// #1
   14070:	neg	x8, x7
   14074:	str	x0, [x5, #8]
   14078:	lsl	x9, x9, x2
   1407c:	eor	x2, x10, x9
   14080:	and	x2, x2, x11
   14084:	and	x9, x9, x11
   14088:	orr	x2, x2, x3
   1408c:	and	x0, x8, x11
   14090:	str	x0, [x5]
   14094:	mrs	x20, tpidr_el0
   14098:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1409c:	ldr	x3, [x0, #2512]
   140a0:	add	x0, x0, #0x9d0
   140a4:	blr	x3
   140a8:	ldr	x0, [x20, x0]
   140ac:	cmp	x0, x23
   140b0:	b.gt	13d7c <mpfr_sub1sp@@Base+0xb74>
   140b4:	str	x23, [x27, #16]
   140b8:	orr	x0, x9, x2
   140bc:	cbnz	x0, 13e58 <mpfr_sub1sp@@Base+0xc50>
   140c0:	b	13508 <mpfr_sub1sp@@Base+0x300>
   140c4:	cmp	x2, #0x0
   140c8:	neg	x8, x8
   140cc:	cset	x3, eq  // eq = none
   140d0:	sub	x3, x0, x3
   140d4:	sub	x0, x2, #0x1
   140d8:	mov	x2, x3
   140dc:	b	1395c <mpfr_sub1sp@@Base+0x754>
   140e0:	mov	x3, x0
   140e4:	mov	x2, x23
   140e8:	mov	x0, x10
   140ec:	mov	x23, x28
   140f0:	mov	x10, x3
   140f4:	mov	x28, x2
   140f8:	neg	w1, w1
   140fc:	b	13698 <mpfr_sub1sp@@Base+0x490>
   14100:	ldr	x2, [x5]
   14104:	ldr	x1, [x0]
   14108:	subs	x0, x1, x2
   1410c:	cmp	x1, x2
   14110:	cset	x5, cc  // cc = lo, ul, last
   14114:	cbz	x0, 13db8 <mpfr_sub1sp@@Base+0xbb0>
   14118:	ldr	w3, [x20, #8]
   1411c:	cbz	x5, 14128 <mpfr_sub1sp@@Base+0xf20>
   14120:	neg	w3, w3
   14124:	sub	x0, x2, x1
   14128:	clz	x1, x0
   1412c:	str	w3, [x27, #8]
   14130:	sub	x23, x23, x1
   14134:	lsl	x0, x0, x1
   14138:	str	x0, [x6]
   1413c:	b	13afc <mpfr_sub1sp@@Base+0x8f4>
   14140:	cmp	w4, #0x3
   14144:	mov	w0, #0x1                   	// #1
   14148:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   1414c:	cneg	w0, w0, eq  // eq = none
   14150:	str	w0, [x27, #8]
   14154:	str	x2, [x27, #16]
   14158:	b	1350c <mpfr_sub1sp@@Base+0x304>
   1415c:	mov	x1, x25
   14160:	add	x0, x29, #0xa8
   14164:	str	x10, [x29, #128]
   14168:	str	w4, [x29, #136]
   1416c:	stp	x11, x8, [x29, #144]
   14170:	bl	bdc0 <mpfr_tmp_allocate@plt>
   14174:	ldr	w4, [x29, #136]
   14178:	mov	x9, x0
   1417c:	ldr	x10, [x29, #128]
   14180:	ldp	x11, x8, [x29, #144]
   14184:	b	132e8 <mpfr_sub1sp@@Base+0xe0>
   14188:	ldr	x2, [x25]
   1418c:	cbnz	w4, 14bf4 <mpfr_sub1sp@@Base+0x19ec>
   14190:	cbz	x22, 13a20 <mpfr_sub1sp@@Base+0x818>
   14194:	cbnz	x21, 141a0 <mpfr_sub1sp@@Base+0xf98>
   14198:	lsr	x0, x2, x24
   1419c:	tbz	w0, #0, 13a20 <mpfr_sub1sp@@Base+0x818>
   141a0:	mov	x5, #0x1                   	// #1
   141a4:	lsl	x5, x5, x24
   141a8:	sub	x0, x2, x5
   141ac:	str	x0, [x25]
   141b0:	cmp	x5, x2
   141b4:	b.ls	141e4 <mpfr_sub1sp@@Base+0xfdc>  // b.plast
   141b8:	mov	x0, #0x1                   	// #1
   141bc:	nop
   141c0:	ldr	x2, [x25, x0, lsl #3]
   141c4:	cmp	x26, x0
   141c8:	cset	w1, gt
   141cc:	sub	x3, x2, #0x1
   141d0:	str	x3, [x25, x0, lsl #3]
   141d4:	cmp	x2, #0x0
   141d8:	add	x0, x0, #0x1
   141dc:	csel	w1, w1, wzr, eq  // eq = none
   141e0:	cbnz	w1, 141c0 <mpfr_sub1sp@@Base+0xfb8>
   141e4:	ldr	x0, [x9]
   141e8:	tbz	x0, #63, 14c48 <mpfr_sub1sp@@Base+0x1a40>
   141ec:	mov	w19, #0xffffffff            	// #-1
   141f0:	b	13a3c <mpfr_sub1sp@@Base+0x834>
   141f4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   141f8:	str	x0, [x5]
   141fc:	add	x23, x23, #0x1
   14200:	str	x23, [x27, #16]
   14204:	b	13654 <mpfr_sub1sp@@Base+0x44c>
   14208:	mov	x1, x19
   1420c:	add	x0, x29, #0xa8
   14210:	str	w4, [x29, #144]
   14214:	str	x8, [x29, #152]
   14218:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1421c:	ldr	w4, [x29, #144]
   14220:	mov	x20, x0
   14224:	ldr	x6, [x21, #24]
   14228:	ldr	x8, [x29, #152]
   1422c:	b	13bac <mpfr_sub1sp@@Base+0x9a4>
   14230:	ldp	x7, x6, [x0]
   14234:	mov	x9, #0x1                   	// #1
   14238:	ldp	x8, x2, [x10]
   1423c:	ldr	x11, [x0, #16]
   14240:	ldr	x10, [x10, #16]
   14244:	cmp	x7, x8
   14248:	sub	x1, x6, x2
   1424c:	cset	x12, cc  // cc = lo, ul, last
   14250:	cset	w3, cc  // cc = lo, ul, last
   14254:	sub	x1, x1, x12
   14258:	sub	x13, x7, x8
   1425c:	cmp	x6, x2
   14260:	sub	x0, x11, x10
   14264:	b.cc	14274 <mpfr_sub1sp@@Base+0x106c>  // b.lo, b.ul, b.last
   14268:	cmp	w3, #0x0
   1426c:	ccmp	x6, x2, #0x0, ne  // ne = any
   14270:	cset	x9, eq  // eq = none
   14274:	sub	x0, x0, x9
   14278:	orr	x3, x13, x1
   1427c:	orr	x3, x3, x0
   14280:	cbz	x3, 13db8 <mpfr_sub1sp@@Base+0xbb0>
   14284:	ldr	w3, [x20, #8]
   14288:	cmp	x11, x0
   1428c:	b.hi	142c0 <mpfr_sub1sp@@Base+0x10b8>  // b.pmore
   14290:	subs	x13, x8, x7
   14294:	sub	x1, x2, x6
   14298:	cset	x0, ne  // ne = any
   1429c:	sub	x10, x10, x11
   142a0:	sub	x12, x12, x0
   142a4:	neg	w3, w3
   142a8:	add	x1, x12, x1
   142ac:	orr	x0, x13, x1
   142b0:	cmp	x0, #0x0
   142b4:	cset	x0, ne  // ne = any
   142b8:	sub	x0, x9, x0
   142bc:	add	x0, x0, x10
   142c0:	str	w3, [x27, #8]
   142c4:	cbnz	x0, 142dc <mpfr_sub1sp@@Base+0x10d4>
   142c8:	cbz	x1, 14950 <mpfr_sub1sp@@Base+0x1748>
   142cc:	sub	x23, x23, #0x40
   142d0:	mov	x0, x1
   142d4:	mov	x1, x13
   142d8:	mov	x13, #0x0                   	// #0
   142dc:	clz	x2, x0
   142e0:	cbz	x2, 147d4 <mpfr_sub1sp@@Base+0x15cc>
   142e4:	mov	w3, #0x40                  	// #64
   142e8:	sub	w3, w3, w2
   142ec:	lsl	x0, x0, x2
   142f0:	sub	x23, x23, x2
   142f4:	lsr	x6, x1, x3
   142f8:	orr	x0, x0, x6
   142fc:	lsl	x1, x1, x2
   14300:	str	x0, [x5, #16]
   14304:	lsr	x3, x13, x3
   14308:	orr	x3, x1, x3
   1430c:	lsl	x2, x13, x2
   14310:	stp	x2, x3, [x5]
   14314:	mrs	x1, tpidr_el0
   14318:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1431c:	ldr	x2, [x0, #2512]
   14320:	add	x0, x0, #0x9d0
   14324:	blr	x2
   14328:	ldr	x0, [x1, x0]
   1432c:	cmp	x23, x0
   14330:	b.ge	13b20 <mpfr_sub1sp@@Base+0x918>  // b.tcont
   14334:	cbnz	w4, 14880 <mpfr_sub1sp@@Base+0x1678>
   14338:	sub	x0, x0, #0x1
   1433c:	cmp	x0, x23
   14340:	b.gt	138b0 <mpfr_sub1sp@@Base+0x6a8>
   14344:	ldr	x1, [x5, #16]
   14348:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1434c:	cmp	x1, x0
   14350:	b.ne	14880 <mpfr_sub1sp@@Base+0x1678>  // b.any
   14354:	ldr	x0, [x5, #8]
   14358:	cbz	x0, 13d9c <mpfr_sub1sp@@Base+0xb94>
   1435c:	b	14880 <mpfr_sub1sp@@Base+0x1678>
   14360:	cmp	w4, #0x1
   14364:	b.eq	13ed8 <mpfr_sub1sp@@Base+0xcd0>  // b.none
   14368:	add	w3, w4, w1, lsr #31
   1436c:	cmp	w3, #0x3
   14370:	b.eq	13ed8 <mpfr_sub1sp@@Base+0xcd0>  // b.none
   14374:	ldr	x0, [x5]
   14378:	b	13e7c <mpfr_sub1sp@@Base+0xc74>
   1437c:	cmp	w4, #0x1
   14380:	b.eq	13ed8 <mpfr_sub1sp@@Base+0xcd0>  // b.none
   14384:	add	w3, w4, w1, lsr #31
   14388:	cmp	w3, #0x3
   1438c:	b.eq	13ed8 <mpfr_sub1sp@@Base+0xcd0>  // b.none
   14390:	ldr	x0, [x5]
   14394:	b	13808 <mpfr_sub1sp@@Base+0x600>
   14398:	bl	c410 <mpfr_tmp_free@plt>
   1439c:	b	13a48 <mpfr_sub1sp@@Base+0x840>
   143a0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   143a4:	cmp	x3, x8
   143a8:	b.ls	147e0 <mpfr_sub1sp@@Base+0x15d8>  // b.plast
   143ac:	mov	x2, #0x1                   	// #1
   143b0:	cmp	x28, #0x40
   143b4:	mov	x7, x2
   143b8:	b.ne	143cc <mpfr_sub1sp@@Base+0x11c4>  // b.any
   143bc:	ldr	x0, [x5]
   143c0:	cmp	x0, x8
   143c4:	cset	x7, eq  // eq = none
   143c8:	cset	x2, ne  // ne = any
   143cc:	sub	x3, x3, #0x1
   143d0:	str	x3, [x6]
   143d4:	mrs	x20, tpidr_el0
   143d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   143dc:	ldr	x3, [x0, #2512]
   143e0:	add	x0, x0, #0x9d0
   143e4:	blr	x3
   143e8:	ldr	x0, [x20, x0]
   143ec:	cmp	x0, x23
   143f0:	b.gt	14f40 <mpfr_sub1sp@@Base+0x1d38>
   143f4:	orr	x0, x7, x2
   143f8:	str	x23, [x27, #16]
   143fc:	cmp	x0, #0x0
   14400:	ccmp	w4, #0x5, #0x4, ne  // ne = any
   14404:	b.eq	13508 <mpfr_sub1sp@@Base+0x300>  // b.none
   14408:	cbnz	w4, 147b8 <mpfr_sub1sp@@Base+0x15b0>
   1440c:	cbz	x7, 13ed8 <mpfr_sub1sp@@Base+0xcd0>
   14410:	ldr	x0, [x6]
   14414:	and	x3, x0, #0x1
   14418:	orr	x2, x3, x2
   1441c:	cbz	x2, 13ed8 <mpfr_sub1sp@@Base+0xcd0>
   14420:	add	x0, x0, #0x1
   14424:	str	x0, [x6]
   14428:	cbnz	x0, 13654 <mpfr_sub1sp@@Base+0x44c>
   1442c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   14430:	str	x0, [x6]
   14434:	add	x23, x23, #0x1
   14438:	str	x23, [x27, #16]
   1443c:	b	13654 <mpfr_sub1sp@@Base+0x44c>
   14440:	ldr	x1, [x21, #24]
   14444:	ldr	x25, [x27, #24]
   14448:	b.eq	14ab4 <mpfr_sub1sp@@Base+0x18ac>  // b.none
   1444c:	cmp	x10, x22
   14450:	cset	w0, eq  // eq = none
   14454:	cset	x2, eq  // eq = none
   14458:	cmp	w4, #0x0
   1445c:	str	x2, [x29, #128]
   14460:	cset	w21, eq  // eq = none
   14464:	cmp	w0, #0x0
   14468:	ccmp	w21, #0x0, #0x4, ne  // ne = any
   1446c:	b.ne	14df8 <mpfr_sub1sp@@Base+0x1bf0>  // b.any
   14470:	lsl	x20, x8, #3
   14474:	mov	x19, #0xffffffffffffffff    	// #-1
   14478:	cmp	x25, x1
   1447c:	b.eq	14494 <mpfr_sub1sp@@Base+0x128c>  // b.none
   14480:	mov	x2, x20
   14484:	mov	x0, x25
   14488:	str	w4, [x29, #152]
   1448c:	bl	ba10 <memcpy@plt>
   14490:	ldr	w4, [x29, #152]
   14494:	sub	x8, x20, #0x8
   14498:	cmp	w21, #0x0
   1449c:	ccmp	w4, #0x5, #0x4, eq  // eq = none
   144a0:	add	x9, x25, x8
   144a4:	b.eq	14940 <mpfr_sub1sp@@Base+0x1738>  // b.none
   144a8:	ldr	w0, [x27, #8]
   144ac:	add	w0, w4, w0, lsr #31
   144b0:	cmp	w0, #0x3
   144b4:	ccmp	w4, #0x1, #0x4, ne  // ne = any
   144b8:	b.eq	149d0 <mpfr_sub1sp@@Base+0x17c8>  // b.none
   144bc:	mov	x21, #0x1                   	// #1
   144c0:	mov	x22, #0x0                   	// #0
   144c4:	ldr	x0, [x9]
   144c8:	b	13a24 <mpfr_sub1sp@@Base+0x81c>
   144cc:	sub	x0, x26, #0x1
   144d0:	ldr	x1, [x25, x0, lsl #3]
   144d4:	sub	x0, x0, #0x1
   144d8:	cmn	x0, #0x1
   144dc:	cbnz	x1, 13a30 <mpfr_sub1sp@@Base+0x828>
   144e0:	b.ne	144d0 <mpfr_sub1sp@@Base+0x12c8>  // b.any
   144e4:	cmp	w4, #0x0
   144e8:	ccmp	x22, #0x0, #0x0, eq  // eq = none
   144ec:	b.ne	14c9c <mpfr_sub1sp@@Base+0x1a94>  // b.any
   144f0:	ldr	x0, [x29, #128]
   144f4:	cmp	x0, #0x0
   144f8:	ccmp	x19, #0x0, #0x4, ne  // ne = any
   144fc:	b.eq	13a30 <mpfr_sub1sp@@Base+0x828>  // b.none
   14500:	ldrb	w2, [x29, #104]
   14504:	mov	x0, #0x1                   	// #1
   14508:	ldr	x1, [x25]
   1450c:	lsl	x3, x0, x2
   14510:	sub	x2, x1, x3
   14514:	str	x2, [x25]
   14518:	cmp	x3, x1
   1451c:	b.hi	14548 <mpfr_sub1sp@@Base+0x1340>  // b.pmore
   14520:	ldr	x0, [x9]
   14524:	sub	x28, x28, #0x1
   14528:	mov	w19, #0x0                   	// #0
   1452c:	orr	x0, x0, #0x8000000000000000
   14530:	str	x0, [x9]
   14534:	cbz	x21, 13a3c <mpfr_sub1sp@@Base+0x834>
   14538:	cmp	w4, #0x0
   1453c:	mov	w1, #0x1                   	// #1
   14540:	cneg	w19, w1, eq  // eq = none
   14544:	b	13a3c <mpfr_sub1sp@@Base+0x834>
   14548:	ldr	x1, [x25, x0, lsl #3]
   1454c:	cmp	x1, #0x0
   14550:	sub	x1, x1, #0x1
   14554:	cset	w2, eq  // eq = none
   14558:	cmp	x26, x0
   1455c:	str	x1, [x25, x0, lsl #3]
   14560:	cset	w1, gt
   14564:	add	x0, x0, #0x1
   14568:	tst	w2, w1
   1456c:	b.ne	14548 <mpfr_sub1sp@@Base+0x1340>  // b.any
   14570:	b	14520 <mpfr_sub1sp@@Base+0x1318>
   14574:	lsl	x3, x0, #3
   14578:	sub	x22, x8, x0
   1457c:	add	x1, x1, x3
   14580:	cmp	x1, x9
   14584:	b.eq	145bc <mpfr_sub1sp@@Base+0x13b4>  // b.none
   14588:	sub	x22, x8, x0
   1458c:	mov	x0, x9
   14590:	str	x10, [x29, #120]
   14594:	lsl	x2, x22, #3
   14598:	str	w4, [x29, #128]
   1459c:	stp	x11, x3, [x29, #136]
   145a0:	str	x8, [x29, #152]
   145a4:	bl	ba10 <memcpy@plt>
   145a8:	ldp	x11, x3, [x29, #136]
   145ac:	mov	x9, x0
   145b0:	ldr	w4, [x29, #128]
   145b4:	ldr	x10, [x29, #120]
   145b8:	ldr	x8, [x29, #152]
   145bc:	mov	x2, x3
   145c0:	add	x0, x9, x22, lsl #3
   145c4:	mov	w1, #0x0                   	// #0
   145c8:	str	x10, [x29, #120]
   145cc:	str	w4, [x29, #128]
   145d0:	stp	x11, x8, [x29, #136]
   145d4:	str	x9, [x29, #152]
   145d8:	bl	c110 <memset@plt>
   145dc:	b	13318 <mpfr_sub1sp@@Base+0x110>
   145e0:	add	x0, x19, x23
   145e4:	mov	x11, #0x3f                  	// #63
   145e8:	subs	x0, x0, x28
   145ec:	mov	x14, #0x1                   	// #1
   145f0:	add	x21, x0, x11
   145f4:	mov	x12, #0xffffffffffffffff    	// #-1
   145f8:	csel	x21, x21, x0, mi  // mi = first
   145fc:	negs	x7, x0
   14600:	ldr	x13, [x20, #24]
   14604:	sub	x21, x26, x21, asr #6
   14608:	and	x7, x7, x11
   1460c:	and	x0, x0, x11
   14610:	csneg	x0, x0, x7, mi  // mi = first
   14614:	sub	x0, x11, x0
   14618:	ldr	x11, [x13, x21, lsl #3]
   1461c:	lsl	x7, x14, x0
   14620:	lsl	x0, x12, x0
   14624:	and	x22, x7, x11
   14628:	bics	xzr, x11, x0
   1462c:	b.ne	139bc <mpfr_sub1sp@@Base+0x7b4>  // b.any
   14630:	b	1463c <mpfr_sub1sp@@Base+0x1434>
   14634:	ldr	x0, [x13, x21, lsl #3]
   14638:	cbnz	x0, 14644 <mpfr_sub1sp@@Base+0x143c>
   1463c:	subs	x21, x21, #0x1
   14640:	b.pl	14634 <mpfr_sub1sp@@Base+0x142c>  // b.nfrst
   14644:	mvn	x21, x21
   14648:	lsr	x21, x21, #63
   1464c:	b	133d4 <mpfr_sub1sp@@Base+0x1cc>
   14650:	mov	x2, x8
   14654:	mov	w3, w20
   14658:	mov	x1, x25
   1465c:	mov	x0, x25
   14660:	str	w4, [x29, #144]
   14664:	str	x9, [x29, #152]
   14668:	bl	bcc0 <__gmpn_lshift@plt>
   1466c:	ldr	w4, [x29, #144]
   14670:	ldr	x9, [x29, #152]
   14674:	cbnz	x22, 14b30 <mpfr_sub1sp@@Base+0x1928>
   14678:	sub	x28, x28, #0x1
   1467c:	mov	x21, x19
   14680:	ldr	x22, [x29, #128]
   14684:	b	13a18 <mpfr_sub1sp@@Base+0x810>
   14688:	lsl	x7, x0, #3
   1468c:	sub	x22, x8, x0
   14690:	add	x1, x1, x7
   14694:	mov	x2, x22
   14698:	mov	x0, x9
   1469c:	str	x10, [x29, #96]
   146a0:	str	w4, [x29, #120]
   146a4:	stp	x11, x8, [x29, #128]
   146a8:	stp	x7, x9, [x29, #144]
   146ac:	bl	bce0 <__gmpn_rshift@plt>
   146b0:	mov	w1, #0x0                   	// #0
   146b4:	ldp	x7, x9, [x29, #144]
   146b8:	add	x0, x9, x22, lsl #3
   146bc:	mov	x2, x7
   146c0:	bl	c110 <memset@plt>
   146c4:	ldr	w4, [x29, #120]
   146c8:	ldr	x10, [x29, #96]
   146cc:	ldp	x11, x8, [x29, #128]
   146d0:	ldr	x9, [x29, #152]
   146d4:	b	13328 <mpfr_sub1sp@@Base+0x120>
   146d8:	stp	x9, x0, [x5, #8]
   146dc:	b	13790 <mpfr_sub1sp@@Base+0x588>
   146e0:	cbnz	x11, 14eac <mpfr_sub1sp@@Base+0x1ca4>
   146e4:	cbz	x9, 14924 <mpfr_sub1sp@@Base+0x171c>
   146e8:	mov	x0, x9
   146ec:	sub	x23, x23, #0x40
   146f0:	mov	x9, x16
   146f4:	b	1374c <mpfr_sub1sp@@Base+0x544>
   146f8:	cmp	x28, #0xbf
   146fc:	b.hi	148a8 <mpfr_sub1sp@@Base+0x16a0>  // b.pmore
   14700:	cmp	x28, #0x80
   14704:	ldp	x3, x9, [x10]
   14708:	ldr	x0, [x10, #16]
   1470c:	b.eq	14aa4 <mpfr_sub1sp@@Base+0x189c>  // b.none
   14710:	orr	x3, x3, x9
   14714:	sub	w7, w7, w28
   14718:	cmp	x3, #0x0
   1471c:	cset	x9, ne  // ne = any
   14720:	lsl	x7, x0, x7
   14724:	orr	x7, x9, x7
   14728:	sub	w28, w28, #0x80
   1472c:	negs	x9, x7
   14730:	cset	x8, ne  // ne = any
   14734:	cset	w3, ne  // ne = any
   14738:	lsr	x7, x0, x28
   1473c:	sub	x7, x14, x7
   14740:	sub	x7, x7, x8
   14744:	mov	x0, #0x1                   	// #1
   14748:	cmp	x7, x14
   1474c:	b.hi	1475c <mpfr_sub1sp@@Base+0x1554>  // b.pmore
   14750:	cmp	w3, #0x0
   14754:	ccmp	x7, x14, #0x0, ne  // ne = any
   14758:	cset	x0, eq  // eq = none
   1475c:	subs	x8, x12, x0
   14760:	cmp	x12, x0
   14764:	sbc	x3, x13, xzr
   14768:	tbnz	x3, #63, 14a9c <mpfr_sub1sp@@Base+0x1894>
   1476c:	sub	x23, x23, #0x1
   14770:	extr	x3, x3, x8, #63
   14774:	extr	x8, x8, x7, #63
   14778:	stp	x8, x3, [x5, #8]
   1477c:	extr	x7, x7, x9, #63
   14780:	lsl	x9, x9, #1
   14784:	sub	w3, w19, #0x1
   14788:	mov	x8, #0x1                   	// #1
   1478c:	neg	x0, x6
   14790:	lsl	x8, x8, x3
   14794:	eor	x2, x2, x8
   14798:	and	x2, x2, x7
   1479c:	and	x8, x8, x7
   147a0:	orr	x2, x2, x9
   147a4:	and	x7, x0, x7
   147a8:	str	x7, [x5]
   147ac:	b	137b8 <mpfr_sub1sp@@Base+0x5b0>
   147b0:	stp	x2, x0, [x5]
   147b4:	b	13d5c <mpfr_sub1sp@@Base+0xb54>
   147b8:	cmp	w4, #0x1
   147bc:	b.eq	13ed8 <mpfr_sub1sp@@Base+0xcd0>  // b.none
   147c0:	add	w3, w4, w1, lsr #31
   147c4:	cmp	w3, #0x3
   147c8:	b.eq	13ed8 <mpfr_sub1sp@@Base+0xcd0>  // b.none
   147cc:	ldr	x0, [x6]
   147d0:	b	14420 <mpfr_sub1sp@@Base+0x1218>
   147d4:	stp	x13, x1, [x5]
   147d8:	str	x0, [x5, #16]
   147dc:	b	14314 <mpfr_sub1sp@@Base+0x110c>
   147e0:	sub	x23, x23, #0x1
   147e4:	cmp	x28, #0x40
   147e8:	b.eq	14a5c <mpfr_sub1sp@@Base+0x1854>  // b.none
   147ec:	mov	x7, #0x1                   	// #1
   147f0:	cmp	x28, #0x41
   147f4:	mov	x2, x7
   147f8:	b.eq	14c2c <mpfr_sub1sp@@Base+0x1a24>  // b.none
   147fc:	mov	x0, #0xffffffffffffffff    	// #-1
   14800:	str	x0, [x6]
   14804:	b	143d4 <mpfr_sub1sp@@Base+0x11cc>
   14808:	clz	x5, x3
   1480c:	sub	w2, w2, w5
   14810:	cmp	w5, #0x0
   14814:	lsl	x7, x3, x5
   14818:	sub	x23, x23, x5
   1481c:	lsr	x2, x0, x2
   14820:	orr	x2, x2, x7
   14824:	csel	x3, x2, x3, ne  // ne = any
   14828:	lsl	x0, x0, x5
   1482c:	and	x7, x0, #0x8000000000000000
   14830:	and	x2, x0, #0x7fffffffffffffff
   14834:	str	x3, [x6]
   14838:	b	143d4 <mpfr_sub1sp@@Base+0x11cc>
   1483c:	sub	x0, x11, x7
   14840:	stp	x0, x3, [x5]
   14844:	b	13e30 <mpfr_sub1sp@@Base+0xc28>
   14848:	cbnz	x0, 14898 <mpfr_sub1sp@@Base+0x1690>
   1484c:	cbnz	w4, 14880 <mpfr_sub1sp@@Base+0x1678>
   14850:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   14854:	ldr	x1, [x0, #2512]
   14858:	add	x0, x0, #0x9d0
   1485c:	blr	x1
   14860:	ldr	x0, [x20, x0]
   14864:	sub	x0, x0, #0x1
   14868:	cmp	x0, x28
   1486c:	b.gt	138b0 <mpfr_sub1sp@@Base+0x6a8>
   14870:	mov	x0, x27
   14874:	bl	bf00 <mpfr_powerof2_raw@plt>
   14878:	cmp	w0, #0x0
   1487c:	cset	w4, ne  // ne = any
   14880:	ldr	w2, [x27, #8]
   14884:	mov	w1, w4
   14888:	mov	x0, x27
   1488c:	bl	c3c0 <mpfr_underflow@plt>
   14890:	mov	w1, w0
   14894:	b	1350c <mpfr_sub1sp@@Base+0x304>
   14898:	str	w4, [x29, #152]
   1489c:	bl	c410 <mpfr_tmp_free@plt>
   148a0:	ldr	w4, [x29, #152]
   148a4:	b	1484c <mpfr_sub1sp@@Base+0x1644>
   148a8:	cmp	x6, x14
   148ac:	cset	x0, hi  // hi = pmore
   148b0:	subs	x3, x12, x0
   148b4:	cmp	x12, x0
   148b8:	sbc	x2, x13, xzr
   148bc:	tbnz	x2, #63, 14a88 <mpfr_sub1sp@@Base+0x1880>
   148c0:	cmp	x28, #0xc0
   148c4:	mov	x8, x11
   148c8:	ccmp	x19, #0x1, #0x0, ls  // ls = plast
   148cc:	b.gt	148e4 <mpfr_sub1sp@@Base+0x16dc>
   148d0:	ldr	x2, [x10, #16]
   148d4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   148d8:	mov	x8, #0x0                   	// #0
   148dc:	cmp	x2, x0
   148e0:	b.eq	14cc0 <mpfr_sub1sp@@Base+0x1ab8>  // b.none
   148e4:	sub	x23, x23, #0x1
   148e8:	mov	x0, #0xffffffffffffffff    	// #-1
   148ec:	neg	x2, x6
   148f0:	stp	x2, x0, [x5]
   148f4:	str	x0, [x5, #16]
   148f8:	mrs	x20, tpidr_el0
   148fc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   14900:	ldr	x2, [x0, #2512]
   14904:	add	x0, x0, #0x9d0
   14908:	blr	x2
   1490c:	ldr	x0, [x20, x0]
   14910:	cmp	x23, x0
   14914:	b.lt	14334 <mpfr_sub1sp@@Base+0x112c>  // b.tstop
   14918:	mov	x2, #0x1                   	// #1
   1491c:	str	x23, [x27, #16]
   14920:	b	137e4 <mpfr_sub1sp@@Base+0x5dc>
   14924:	sub	x23, x23, #0x80
   14928:	mov	x0, x16
   1492c:	mov	x7, x9
   14930:	mov	x11, x9
   14934:	b	1374c <mpfr_sub1sp@@Base+0x544>
   14938:	stp	x0, x3, [x5, #8]
   1493c:	b	13fbc <mpfr_sub1sp@@Base+0xdb4>
   14940:	mov	x21, #0x1                   	// #1
   14944:	mov	x22, #0x0                   	// #0
   14948:	ldr	x0, [x25, x8]
   1494c:	b	13a24 <mpfr_sub1sp@@Base+0x81c>
   14950:	mov	x0, x13
   14954:	sub	x23, x23, #0x80
   14958:	mov	x13, #0x0                   	// #0
   1495c:	b	142dc <mpfr_sub1sp@@Base+0x10d4>
   14960:	add	x0, x29, #0xa8
   14964:	str	w4, [x29, #128]
   14968:	stp	x6, x8, [x29, #136]
   1496c:	str	x5, [x29, #152]
   14970:	bl	bdc0 <mpfr_tmp_allocate@plt>
   14974:	ldr	w4, [x29, #128]
   14978:	ldr	x24, [x20, #24]
   1497c:	mov	x20, x0
   14980:	ldp	x6, x8, [x29, #136]
   14984:	ldr	x5, [x29, #152]
   14988:	b	13498 <mpfr_sub1sp@@Base+0x290>
   1498c:	mov	w1, w19
   14990:	str	x1, [x29, #104]
   14994:	cmp	w4, #0x5
   14998:	b.eq	14cac <mpfr_sub1sp@@Base+0x1aa4>  // b.none
   1499c:	ldr	x2, [x25]
   149a0:	cbnz	w4, 14b08 <mpfr_sub1sp@@Base+0x1900>
   149a4:	mov	x3, #0xffffffffffffffff    	// #-1
   149a8:	str	x3, [x29, #128]
   149ac:	lsr	x1, x2, x19
   149b0:	mvn	x1, x1
   149b4:	and	x22, x1, #0x1
   149b8:	mov	x19, x3
   149bc:	mov	x21, #0x0                   	// #0
   149c0:	tbnz	w1, #0, 13a24 <mpfr_sub1sp@@Base+0x81c>
   149c4:	mov	x21, x22
   149c8:	mov	x22, #0x1                   	// #1
   149cc:	b	141a8 <mpfr_sub1sp@@Base+0xfa0>
   149d0:	mov	x5, #0x1                   	// #1
   149d4:	mov	x21, x5
   149d8:	mov	w4, w21
   149dc:	lsl	x5, x5, x24
   149e0:	mov	x22, #0x0                   	// #0
   149e4:	ldr	x2, [x25]
   149e8:	b	141a8 <mpfr_sub1sp@@Base+0xfa0>
   149ec:	lsl	x0, x1, #63
   149f0:	sub	x1, x26, #0x1
   149f4:	nop
   149f8:	ldr	x2, [x24, x1, lsl #3]
   149fc:	ldr	x5, [x6, x1, lsl #3]
   14a00:	sub	x1, x1, #0x1
   14a04:	add	x3, x0, x2, lsr #1
   14a08:	lsl	x0, x2, #63
   14a0c:	cmp	x5, x3
   14a10:	b.ne	14a54 <mpfr_sub1sp@@Base+0x184c>  // b.any
   14a14:	cmn	x1, #0x1
   14a18:	b.ne	149f8 <mpfr_sub1sp@@Base+0x17f0>  // b.any
   14a1c:	ldr	x3, [x27, #24]
   14a20:	cbnz	x0, 14e70 <mpfr_sub1sp@@Base+0x1c68>
   14a24:	mov	x0, x3
   14a28:	mov	x2, x23
   14a2c:	mov	w1, #0x0                   	// #0
   14a30:	bl	c110 <memset@plt>
   14a34:	mov	x3, x0
   14a38:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   14a3c:	str	x0, [x3, x23]
   14a40:	str	x28, [x27, #16]
   14a44:	b	13500 <mpfr_sub1sp@@Base+0x2f8>
   14a48:	bl	bae0 <__gmpn_copyd@plt>
   14a4c:	ldr	w4, [x29, #152]
   14a50:	b	13cb8 <mpfr_sub1sp@@Base+0xab0>
   14a54:	b.hi	1345c <mpfr_sub1sp@@Base+0x254>  // b.pmore
   14a58:	b	13b8c <mpfr_sub1sp@@Base+0x984>
   14a5c:	ldr	x0, [x5]
   14a60:	cmp	x0, x8
   14a64:	b.ls	14c20 <mpfr_sub1sp@@Base+0x1a18>  // b.plast
   14a68:	neg	x0, x0
   14a6c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   14a70:	cmp	x0, x2
   14a74:	mov	x3, #0xfffffffffffffffe    	// #-2
   14a78:	lsl	x2, x0, #2
   14a7c:	cset	x7, hi  // hi = pmore
   14a80:	str	x3, [x6]
   14a84:	b	143d4 <mpfr_sub1sp@@Base+0x11cc>
   14a88:	sub	x0, x14, x6
   14a8c:	mov	x8, x11
   14a90:	stp	x0, x3, [x5]
   14a94:	str	x2, [x5, #16]
   14a98:	b	148f8 <mpfr_sub1sp@@Base+0x16f0>
   14a9c:	stp	x8, x3, [x5, #8]
   14aa0:	b	14784 <mpfr_sub1sp@@Base+0x157c>
   14aa4:	cmp	x3, #0x0
   14aa8:	cset	x7, ne  // ne = any
   14aac:	orr	x7, x7, x9
   14ab0:	b	14728 <mpfr_sub1sp@@Base+0x1520>
   14ab4:	lsl	x2, x8, #3
   14ab8:	ldr	x5, [x20, #24]
   14abc:	sub	x20, x2, #0x8
   14ac0:	ldr	x3, [x5, x20]
   14ac4:	and	x6, x3, #0x4000000000000000
   14ac8:	str	x6, [x29, #128]
   14acc:	tbz	x3, #62, 14d78 <mpfr_sub1sp@@Base+0x1b70>
   14ad0:	cmp	w4, #0x5
   14ad4:	mov	x21, #0x1                   	// #1
   14ad8:	b.ne	14d44 <mpfr_sub1sp@@Base+0x1b3c>  // b.any
   14adc:	cmp	x25, x1
   14ae0:	b.eq	14aec <mpfr_sub1sp@@Base+0x18e4>  // b.none
   14ae4:	mov	x0, x25
   14ae8:	bl	ba10 <memcpy@plt>
   14aec:	mov	x7, #0x1                   	// #1
   14af0:	add	x9, x25, x20
   14af4:	mov	x22, x7
   14af8:	lsl	x5, x7, x24
   14afc:	mov	w4, #0x5                   	// #5
   14b00:	ldr	x2, [x25]
   14b04:	b	141a8 <mpfr_sub1sp@@Base+0xfa0>
   14b08:	ldr	w1, [x27, #8]
   14b0c:	add	w1, w4, w1, lsr #31
   14b10:	cmp	w1, #0x3
   14b14:	ccmp	w4, #0x1, #0x4, ne  // ne = any
   14b18:	b.eq	14cd8 <mpfr_sub1sp@@Base+0x1ad0>  // b.none
   14b1c:	mov	x19, #0xffffffffffffffff    	// #-1
   14b20:	mov	x21, #0x0                   	// #0
   14b24:	mov	x22, #0x1                   	// #1
   14b28:	str	x19, [x29, #128]
   14b2c:	b	13a24 <mpfr_sub1sp@@Base+0x81c>
   14b30:	ldr	x0, [x25]
   14b34:	sub	x1, x0, x23
   14b38:	str	x1, [x25]
   14b3c:	cmp	x23, x0
   14b40:	b.ls	14678 <mpfr_sub1sp@@Base+0x1470>  // b.plast
   14b44:	ldr	x0, [x25, x20, lsl #3]
   14b48:	cmp	x0, #0x0
   14b4c:	sub	x0, x0, #0x1
   14b50:	cset	w1, eq  // eq = none
   14b54:	cmp	x26, x20
   14b58:	str	x0, [x25, x20, lsl #3]
   14b5c:	cset	w0, gt
   14b60:	add	x20, x20, #0x1
   14b64:	tst	w1, w0
   14b68:	b.ne	14b44 <mpfr_sub1sp@@Base+0x193c>  // b.any
   14b6c:	b	14678 <mpfr_sub1sp@@Base+0x1470>
   14b70:	ldr	x13, [x20, #24]
   14b74:	sub	x23, x23, x28
   14b78:	adds	x10, x23, x10
   14b7c:	mov	x11, #0x3f                  	// #63
   14b80:	add	x0, x10, x11
   14b84:	mov	x6, #0x1                   	// #1
   14b88:	csel	x0, x0, x10, mi  // mi = first
   14b8c:	negs	x2, x10
   14b90:	and	x2, x2, x11
   14b94:	and	x10, x10, x11
   14b98:	sub	x0, x26, x0, asr #6
   14b9c:	csneg	x10, x10, x2, mi  // mi = first
   14ba0:	sub	x10, x11, x10
   14ba4:	mov	x21, x6
   14ba8:	mov	x19, x6
   14bac:	ldr	x2, [x13, x0, lsl #3]
   14bb0:	lsl	x6, x6, x10
   14bb4:	ands	x6, x6, x2
   14bb8:	str	x6, [x29, #128]
   14bbc:	b.eq	139d4 <mpfr_sub1sp@@Base+0x7cc>  // b.none
   14bc0:	mov	x11, #0xffffffffffffffff    	// #-1
   14bc4:	lsl	x10, x11, x10
   14bc8:	bics	xzr, x2, x10
   14bcc:	b.ne	139d4 <mpfr_sub1sp@@Base+0x7cc>  // b.any
   14bd0:	b	14bdc <mpfr_sub1sp@@Base+0x19d4>
   14bd4:	ldr	x2, [x13, x0, lsl #3]
   14bd8:	cbnz	x2, 14be4 <mpfr_sub1sp@@Base+0x19dc>
   14bdc:	subs	x0, x0, #0x1
   14be0:	b.pl	14bd4 <mpfr_sub1sp@@Base+0x19cc>  // b.nfrst
   14be4:	mvn	x0, x0
   14be8:	mov	x21, #0x1                   	// #1
   14bec:	lsr	x19, x0, #63
   14bf0:	b	139d4 <mpfr_sub1sp@@Base+0x7cc>
   14bf4:	ldr	w0, [x27, #8]
   14bf8:	add	w0, w4, w0, lsr #31
   14bfc:	cmp	w0, #0x3
   14c00:	ccmp	w4, #0x1, #0x4, ne  // ne = any
   14c04:	b.ne	13a20 <mpfr_sub1sp@@Base+0x818>  // b.any
   14c08:	orr	x0, x22, x21
   14c0c:	cbz	x0, 14e60 <mpfr_sub1sp@@Base+0x1c58>
   14c10:	mov	x5, #0x1                   	// #1
   14c14:	mov	w4, w5
   14c18:	lsl	x5, x5, x24
   14c1c:	b	141a8 <mpfr_sub1sp@@Base+0xfa0>
   14c20:	mov	x7, #0x0                   	// #0
   14c24:	mov	x2, #0x0                   	// #0
   14c28:	b	147fc <mpfr_sub1sp@@Base+0x15f4>
   14c2c:	ldr	x0, [x5]
   14c30:	cmp	x0, x8
   14c34:	b.eq	14c24 <mpfr_sub1sp@@Base+0x1a1c>  // b.none
   14c38:	mov	x7, #0x0                   	// #0
   14c3c:	b.hi	147fc <mpfr_sub1sp@@Base+0x15f4>  // b.pmore
   14c40:	mov	x2, #0x0                   	// #0
   14c44:	b	147fc <mpfr_sub1sp@@Base+0x15f4>
   14c48:	ldr	x0, [x25]
   14c4c:	cmp	w4, #0x1
   14c50:	cset	w2, eq  // eq = none
   14c54:	cmp	x22, #0x0
   14c58:	sub	x28, x28, #0x1
   14c5c:	ccmp	w2, #0x0, #0x4, eq  // eq = none
   14c60:	lsl	x0, x0, #1
   14c64:	str	x0, [x25]
   14c68:	ldr	x0, [x9]
   14c6c:	orr	x0, x0, #0x8000000000000000
   14c70:	str	x0, [x9]
   14c74:	b.eq	14cf0 <mpfr_sub1sp@@Base+0x1ae8>  // b.none
   14c78:	ldr	x1, [x25]
   14c7c:	eor	x0, x21, #0x1
   14c80:	and	w0, w0, #0x1
   14c84:	orr	x5, x1, x5
   14c88:	str	x5, [x25]
   14c8c:	cmp	w2, #0x0
   14c90:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   14c94:	csetm	w19, eq  // eq = none
   14c98:	b	13a3c <mpfr_sub1sp@@Base+0x834>
   14c9c:	cmp	x22, #0x0
   14ca0:	ccmp	w4, #0x1, #0x4, ne  // ne = any
   14ca4:	b.ne	14500 <mpfr_sub1sp@@Base+0x12f8>  // b.any
   14ca8:	b	13a30 <mpfr_sub1sp@@Base+0x828>
   14cac:	mov	x19, #0xffffffffffffffff    	// #-1
   14cb0:	mov	x21, #0x0                   	// #0
   14cb4:	mov	x22, #0x1                   	// #1
   14cb8:	str	x19, [x29, #128]
   14cbc:	b	13a24 <mpfr_sub1sp@@Base+0x81c>
   14cc0:	ldr	x0, [x10, #8]
   14cc4:	cbnz	x0, 148e4 <mpfr_sub1sp@@Base+0x16dc>
   14cc8:	ldr	x0, [x10]
   14ccc:	cmp	x0, #0x0
   14cd0:	cset	x8, eq  // eq = none
   14cd4:	b	148e4 <mpfr_sub1sp@@Base+0x16dc>
   14cd8:	mov	x22, #0x1                   	// #1
   14cdc:	mov	x0, #0xffffffffffffffff    	// #-1
   14ce0:	mov	w4, w22
   14ce4:	mov	x21, #0x0                   	// #0
   14ce8:	str	x0, [x29, #128]
   14cec:	b	141a8 <mpfr_sub1sp@@Base+0xfa0>
   14cf0:	ldr	x0, [x29, #128]
   14cf4:	cmp	w4, #0x0
   14cf8:	ccmp	x0, #0x0, #0x0, eq  // eq = none
   14cfc:	b.eq	14d30 <mpfr_sub1sp@@Base+0x1b28>  // b.none
   14d00:	cmp	x22, #0x0
   14d04:	eor	x21, x21, #0x1
   14d08:	cset	w1, ne  // ne = any
   14d0c:	and	w0, w21, #0x1
   14d10:	ands	w1, w1, w21
   14d14:	b.eq	14c8c <mpfr_sub1sp@@Base+0x1a84>  // b.none
   14d18:	ldr	x0, [x25]
   14d1c:	orr	x5, x0, x5
   14d20:	str	x5, [x25]
   14d24:	cbnz	w4, 14ef8 <mpfr_sub1sp@@Base+0x1cf0>
   14d28:	mov	w19, #0x1                   	// #1
   14d2c:	b	13a3c <mpfr_sub1sp@@Base+0x834>
   14d30:	ldr	x0, [x25]
   14d34:	mov	w19, #0x1                   	// #1
   14d38:	orr	x5, x0, x5
   14d3c:	str	x5, [x25]
   14d40:	b	13a3c <mpfr_sub1sp@@Base+0x834>
   14d44:	mov	x21, #0x1                   	// #1
   14d48:	cbnz	w4, 14e1c <mpfr_sub1sp@@Base+0x1c14>
   14d4c:	cmp	x25, x1
   14d50:	b.eq	14d5c <mpfr_sub1sp@@Base+0x1b54>  // b.none
   14d54:	mov	x0, x25
   14d58:	bl	ba10 <memcpy@plt>
   14d5c:	mov	x7, #0x1                   	// #1
   14d60:	add	x9, x25, x20
   14d64:	mov	x22, x7
   14d68:	lsl	x5, x7, x24
   14d6c:	mov	w4, #0x0                   	// #0
   14d70:	ldr	x2, [x25]
   14d74:	b	141a8 <mpfr_sub1sp@@Base+0xfa0>
   14d78:	mov	x7, #0x8000000000000000    	// #-9223372036854775808
   14d7c:	cmp	x3, x7
   14d80:	b.ne	14ad0 <mpfr_sub1sp@@Base+0x18c8>  // b.any
   14d84:	sub	x22, x26, #0x1
   14d88:	ldr	x21, [x5, x22, lsl #3]
   14d8c:	cbnz	x21, 14f10 <mpfr_sub1sp@@Base+0x1d08>
   14d90:	sub	x22, x22, #0x1
   14d94:	cmn	x22, #0x1
   14d98:	b.ne	14d88 <mpfr_sub1sp@@Base+0x1b80>  // b.any
   14d9c:	cmp	w4, #0x5
   14da0:	b.eq	14adc <mpfr_sub1sp@@Base+0x18d4>  // b.none
   14da4:	cbnz	w4, 14e1c <mpfr_sub1sp@@Base+0x1c14>
   14da8:	cmn	x22, #0x1
   14dac:	b.ne	14f38 <mpfr_sub1sp@@Base+0x1d30>  // b.any
   14db0:	ldr	x0, [x1]
   14db4:	lsr	x0, x0, x24
   14db8:	and	x21, x0, #0x1
   14dbc:	tbnz	w0, #0, 14f30 <mpfr_sub1sp@@Base+0x1d28>
   14dc0:	cmp	x25, x1
   14dc4:	b.eq	14f18 <mpfr_sub1sp@@Base+0x1d10>  // b.none
   14dc8:	add	x9, x25, x20
   14dcc:	mov	x0, x25
   14dd0:	str	w4, [x29, #144]
   14dd4:	mov	x19, x22
   14dd8:	str	x9, [x29, #152]
   14ddc:	mov	x22, #0x1                   	// #1
   14de0:	bl	ba10 <memcpy@plt>
   14de4:	ldr	w4, [x29, #144]
   14de8:	ldr	x0, [x25, x20]
   14dec:	str	xzr, [x29, #128]
   14df0:	ldr	x9, [x29, #152]
   14df4:	b	13a24 <mpfr_sub1sp@@Base+0x81c>
   14df8:	ldr	x2, [x20, #24]
   14dfc:	lsl	x20, x8, #3
   14e00:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   14e04:	add	x3, x2, x20
   14e08:	ldur	x3, [x3, #-8]
   14e0c:	cmp	x3, x0
   14e10:	b.eq	14e88 <mpfr_sub1sp@@Base+0x1c80>  // b.none
   14e14:	mov	x19, #0x1                   	// #1
   14e18:	b	14478 <mpfr_sub1sp@@Base+0x1270>
   14e1c:	add	w0, w4, w0, lsr #31
   14e20:	cmp	w0, #0x3
   14e24:	ccmp	w4, #0x1, #0x4, ne  // ne = any
   14e28:	b.eq	14ecc <mpfr_sub1sp@@Base+0x1cc4>  // b.none
   14e2c:	cmp	x25, x1
   14e30:	b.eq	14eb8 <mpfr_sub1sp@@Base+0x1cb0>  // b.none
   14e34:	add	x9, x25, x20
   14e38:	mov	x0, x25
   14e3c:	str	w4, [x29, #144]
   14e40:	mov	x19, #0xffffffffffffffff    	// #-1
   14e44:	str	x9, [x29, #152]
   14e48:	mov	x22, #0x1                   	// #1
   14e4c:	bl	ba10 <memcpy@plt>
   14e50:	ldr	w4, [x29, #144]
   14e54:	ldr	x0, [x25, x20]
   14e58:	ldr	x9, [x29, #152]
   14e5c:	b	13a24 <mpfr_sub1sp@@Base+0x81c>
   14e60:	mov	x21, #0x0                   	// #0
   14e64:	mov	x22, #0x0                   	// #0
   14e68:	mov	w4, #0x1                   	// #1
   14e6c:	b	13a20 <mpfr_sub1sp@@Base+0x818>
   14e70:	lsl	x2, x8, #3
   14e74:	mov	x0, x3
   14e78:	sub	x28, x28, #0x1
   14e7c:	bl	c110 <memset@plt>
   14e80:	str	x28, [x27, #16]
   14e84:	b	13500 <mpfr_sub1sp@@Base+0x2f8>
   14e88:	sub	x0, x26, #0x1
   14e8c:	b	14e94 <mpfr_sub1sp@@Base+0x1c8c>
   14e90:	b.eq	14478 <mpfr_sub1sp@@Base+0x1270>  // b.none
   14e94:	ldr	x19, [x2, x0, lsl #3]
   14e98:	sub	x0, x0, #0x1
   14e9c:	cmn	x0, #0x1
   14ea0:	cbz	x19, 14e90 <mpfr_sub1sp@@Base+0x1c88>
   14ea4:	mov	x19, #0x1                   	// #1
   14ea8:	b	14478 <mpfr_sub1sp@@Base+0x1270>
   14eac:	mov	x0, x11
   14eb0:	mov	x11, x16
   14eb4:	b	1374c <mpfr_sub1sp@@Base+0x544>
   14eb8:	add	x9, x25, x20
   14ebc:	mov	x19, #0xffffffffffffffff    	// #-1
   14ec0:	mov	x22, #0x1                   	// #1
   14ec4:	ldr	x0, [x25, x20]
   14ec8:	b	13a24 <mpfr_sub1sp@@Base+0x81c>
   14ecc:	cmp	x25, x1
   14ed0:	b.eq	14edc <mpfr_sub1sp@@Base+0x1cd4>  // b.none
   14ed4:	mov	x0, x25
   14ed8:	bl	ba10 <memcpy@plt>
   14edc:	mov	x5, #0x1                   	// #1
   14ee0:	mov	x22, x5
   14ee4:	add	x9, x25, x20
   14ee8:	mov	w4, w22
   14eec:	lsl	x5, x5, x24
   14ef0:	ldr	x2, [x25]
   14ef4:	b	141a8 <mpfr_sub1sp@@Base+0xfa0>
   14ef8:	mov	w0, w1
   14efc:	b	14c8c <mpfr_sub1sp@@Base+0x1a84>
   14f00:	mov	x3, x0
   14f04:	mov	x0, x2
   14f08:	mov	x2, x3
   14f0c:	b	1395c <mpfr_sub1sp@@Base+0x754>
   14f10:	mov	x21, #0x1                   	// #1
   14f14:	b	14d9c <mpfr_sub1sp@@Base+0x1b94>
   14f18:	mov	x19, x22
   14f1c:	add	x9, x25, x20
   14f20:	mov	x22, #0x1                   	// #1
   14f24:	ldr	x0, [x25, x20]
   14f28:	str	xzr, [x29, #128]
   14f2c:	b	13a24 <mpfr_sub1sp@@Base+0x81c>
   14f30:	mov	x21, #0x0                   	// #0
   14f34:	b	14d4c <mpfr_sub1sp@@Base+0x1b44>
   14f38:	mov	x21, #0x1                   	// #1
   14f3c:	b	14d4c <mpfr_sub1sp@@Base+0x1b44>
   14f40:	cbnz	w4, 14880 <mpfr_sub1sp@@Base+0x1678>
   14f44:	sub	x0, x0, #0x1
   14f48:	cmp	x0, x23
   14f4c:	b.gt	138b0 <mpfr_sub1sp@@Base+0x6a8>
   14f50:	ldr	x1, [x6]
   14f54:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   14f58:	cmp	x1, x0
   14f5c:	cset	w4, eq  // eq = none
   14f60:	b	14880 <mpfr_sub1sp@@Base+0x1678>
   14f64:	ldr	x1, [x5]
   14f68:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   14f6c:	cmp	x1, x0
   14f70:	cset	w4, eq  // eq = none
   14f74:	b	14880 <mpfr_sub1sp@@Base+0x1678>

0000000000014f78 <mpfr_allocate_func@@Base>:
   14f78:	stp	x29, x30, [sp, #-64]!
   14f7c:	mov	x29, sp
   14f80:	add	x2, sp, #0x38
   14f84:	add	x1, sp, #0x30
   14f88:	str	x19, [sp, #16]
   14f8c:	mov	x19, x0
   14f90:	add	x0, sp, #0x28
   14f94:	bl	bc50 <__gmp_get_memory_functions@plt>
   14f98:	ldr	x1, [sp, #40]
   14f9c:	mov	x0, x19
   14fa0:	blr	x1
   14fa4:	ldr	x19, [sp, #16]
   14fa8:	ldp	x29, x30, [sp], #64
   14fac:	ret

0000000000014fb0 <mpfr_reallocate_func@@Base>:
   14fb0:	stp	x29, x30, [sp, #-80]!
   14fb4:	mov	x29, sp
   14fb8:	stp	x19, x20, [sp, #16]
   14fbc:	mov	x19, x0
   14fc0:	mov	x20, x1
   14fc4:	add	x0, sp, #0x38
   14fc8:	add	x1, sp, #0x40
   14fcc:	str	x21, [sp, #32]
   14fd0:	mov	x21, x2
   14fd4:	add	x2, sp, #0x48
   14fd8:	bl	bc50 <__gmp_get_memory_functions@plt>
   14fdc:	ldr	x3, [sp, #64]
   14fe0:	mov	x2, x21
   14fe4:	mov	x1, x20
   14fe8:	mov	x0, x19
   14fec:	blr	x3
   14ff0:	ldp	x19, x20, [sp, #16]
   14ff4:	ldr	x21, [sp, #32]
   14ff8:	ldp	x29, x30, [sp], #80
   14ffc:	ret

0000000000015000 <mpfr_free_func@@Base>:
   15000:	stp	x29, x30, [sp, #-64]!
   15004:	mov	x29, sp
   15008:	add	x2, sp, #0x38
   1500c:	stp	x19, x20, [sp, #16]
   15010:	mov	x19, x0
   15014:	mov	x20, x1
   15018:	add	x0, sp, #0x28
   1501c:	add	x1, sp, #0x30
   15020:	bl	bc50 <__gmp_get_memory_functions@plt>
   15024:	ldr	x2, [sp, #56]
   15028:	mov	x1, x20
   1502c:	mov	x0, x19
   15030:	blr	x2
   15034:	ldp	x19, x20, [sp, #16]
   15038:	ldp	x29, x30, [sp], #64
   1503c:	ret

0000000000015040 <mpfr_add1sp@@Base>:
   15040:	stp	x29, x30, [sp, #-160]!
   15044:	mov	x29, sp
   15048:	ldr	w5, [x1, #8]
   1504c:	stp	x19, x20, [sp, #16]
   15050:	mov	x19, x1
   15054:	stp	x21, x22, [sp, #32]
   15058:	stp	x23, x24, [sp, #48]
   1505c:	stp	x25, x26, [sp, #64]
   15060:	mov	x26, x0
   15064:	mov	w25, w3
   15068:	stp	x27, x28, [sp, #80]
   1506c:	mov	x28, x2
   15070:	ldr	x21, [x1]
   15074:	str	xzr, [x29, #152]
   15078:	ldr	x22, [x1, #16]
   1507c:	cmp	x21, #0x3f
   15080:	ldr	x1, [x2, #16]
   15084:	str	w5, [x0, #8]
   15088:	b.le	15268 <mpfr_add1sp@@Base+0x228>
   1508c:	sub	x0, x21, #0x41
   15090:	cmp	x0, #0x3e
   15094:	b.ls	15624 <mpfr_add1sp@@Base+0x5e4>  // b.plast
   15098:	cmp	x21, #0x40
   1509c:	b.eq	15844 <mpfr_add1sp@@Base+0x804>  // b.none
   150a0:	sub	x0, x21, #0x81
   150a4:	cmp	x0, #0x3e
   150a8:	b.ls	15300 <mpfr_add1sp@@Base+0x2c0>  // b.plast
   150ac:	ldr	w24, [x19, #8]
   150b0:	sub	x9, x21, #0x1
   150b4:	cmp	x22, x1
   150b8:	lsr	w0, w24, #31
   150bc:	str	w0, [x29, #132]
   150c0:	b.ge	150dc <mpfr_add1sp@@Base+0x9c>  // b.tcont
   150c4:	mov	x2, x19
   150c8:	mov	x0, x1
   150cc:	mov	x19, x28
   150d0:	mov	x1, x22
   150d4:	mov	x28, x2
   150d8:	mov	x22, x0
   150dc:	asr	x0, x9, #6
   150e0:	str	x0, [x29, #136]
   150e4:	neg	w23, w21
   150e8:	subs	x20, x22, x1
   150ec:	add	x24, x0, #0x1
   150f0:	and	w23, w23, #0x3f
   150f4:	b.eq	15768 <mpfr_add1sp@@Base+0x728>  // b.none
   150f8:	cmp	x21, x20
   150fc:	b.ls	15c60 <mpfr_add1sp@@Base+0xc20>  // b.plast
   15100:	lsl	x0, x24, #3
   15104:	str	x0, [x29, #104]
   15108:	cmp	x0, #0x4, lsl #12
   1510c:	b.hi	15d3c <mpfr_add1sp@@Base+0xcfc>  // b.pmore
   15110:	add	x0, x0, #0xf
   15114:	and	x0, x0, #0xfffffffffffffff0
   15118:	sub	sp, sp, x0
   1511c:	mov	x8, sp
   15120:	lsr	x0, x20, #6
   15124:	ands	x3, x20, #0x3f
   15128:	ldr	x1, [x28, #24]
   1512c:	b.eq	15cf0 <mpfr_add1sp@@Base+0xcb0>  // b.none
   15130:	cbnz	x0, 15dd8 <mpfr_add1sp@@Base+0xd98>
   15134:	mov	x0, x8
   15138:	mov	x2, x24
   1513c:	stp	x9, x8, [x29, #112]
   15140:	bl	bce0 <__gmpn_rshift@plt>
   15144:	ldp	x9, x8, [x29, #112]
   15148:	cmp	w25, #0x5
   1514c:	ldr	x0, [x8]
   15150:	b.eq	1593c <mpfr_add1sp@@Base+0x8fc>  // b.none
   15154:	cbnz	w23, 154b4 <mpfr_add1sp@@Base+0x474>
   15158:	subs	x1, x21, x20
   1515c:	mov	x10, #0x3f                  	// #63
   15160:	ldr	x4, [x29, #136]
   15164:	add	x2, x1, x10
   15168:	csel	x2, x2, x1, mi  // mi = first
   1516c:	negs	x9, x1
   15170:	ldr	x3, [x28, #24]
   15174:	sub	x2, x4, x2, asr #6
   15178:	and	x6, x9, x10
   1517c:	and	x1, x1, x10
   15180:	csneg	x1, x1, x6, mi  // mi = first
   15184:	mov	x28, #0x1                   	// #1
   15188:	ldr	x9, [x3, x2, lsl #3]
   1518c:	sub	x1, x10, x1
   15190:	mov	x27, x28
   15194:	mov	x6, #0xffffffffffffffff    	// #-1
   15198:	lsl	x28, x28, x1
   1519c:	and	x4, x28, x9
   151a0:	str	x4, [x29, #120]
   151a4:	lsl	x1, x6, x1
   151a8:	bics	xzr, x9, x1
   151ac:	b.eq	154a0 <mpfr_add1sp@@Base+0x460>  // b.none
   151b0:	mov	x28, #0x1                   	// #1
   151b4:	mov	x2, x8
   151b8:	ldr	x1, [x19, #24]
   151bc:	lsl	x21, x28, x23
   151c0:	neg	x20, x21
   151c4:	mov	x3, x24
   151c8:	ldr	x19, [x26, #24]
   151cc:	and	x0, x20, x0
   151d0:	str	x0, [x8]
   151d4:	mov	x0, x19
   151d8:	bl	c5a0 <__gmpn_add_n@plt>
   151dc:	cbnz	x0, 15d88 <mpfr_add1sp@@Base+0xd48>
   151e0:	cmp	w25, #0x5
   151e4:	mov	w20, #0x0                   	// #0
   151e8:	ldr	x2, [x29, #152]
   151ec:	b.ne	15d58 <mpfr_add1sp@@Base+0xd18>  // b.any
   151f0:	mrs	x19, tpidr_el0
   151f4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   151f8:	ldr	x1, [x0, #2544]
   151fc:	add	x0, x0, #0x9f0
   15200:	blr	x1
   15204:	ldr	x0, [x19, x0]
   15208:	cmp	x0, x22
   1520c:	b.lt	15bac <mpfr_add1sp@@Base+0xb6c>  // b.tstop
   15210:	str	x22, [x26, #16]
   15214:	cbnz	x2, 15bd0 <mpfr_add1sp@@Base+0xb90>
   15218:	ldr	w5, [x26, #8]
   1521c:	mul	w5, w20, w5
   15220:	cbz	w5, 15244 <mpfr_add1sp@@Base+0x204>
   15224:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   15228:	ldr	x1, [x0, #2576]
   1522c:	add	x0, x0, #0xa10
   15230:	blr	x1
   15234:	add	x0, x19, x0
   15238:	ldr	w1, [x0]
   1523c:	orr	w1, w1, #0x8
   15240:	str	w1, [x0]
   15244:	mov	sp, x29
   15248:	mov	w0, w5
   1524c:	ldp	x19, x20, [sp, #16]
   15250:	ldp	x21, x22, [sp, #32]
   15254:	ldp	x23, x24, [sp, #48]
   15258:	ldp	x25, x26, [sp, #64]
   1525c:	ldp	x27, x28, [sp, #80]
   15260:	ldp	x29, x30, [sp], #160
   15264:	ret
   15268:	mov	x0, #0x40                  	// #64
   1526c:	cmp	x22, x1
   15270:	sub	x21, x0, x21
   15274:	ldr	x9, [x19, #24]
   15278:	ldr	x6, [x26, #24]
   1527c:	ldr	x2, [x2, #24]
   15280:	b.eq	154e0 <mpfr_add1sp@@Base+0x4a0>  // b.none
   15284:	b.gt	152a0 <mpfr_add1sp@@Base+0x260>
   15288:	mov	x3, x9
   1528c:	mov	x0, x22
   15290:	mov	x9, x2
   15294:	mov	x22, x1
   15298:	mov	x2, x3
   1529c:	mov	x1, x0
   152a0:	sub	x1, x22, x1
   152a4:	mov	x3, #0x1                   	// #1
   152a8:	lsl	x3, x3, x21
   152ac:	cmp	x1, x21
   152b0:	sub	x8, x3, #0x1
   152b4:	ldr	x0, [x9]
   152b8:	b.cs	1558c <mpfr_add1sp@@Base+0x54c>  // b.hs, b.nlast
   152bc:	ldr	x2, [x2]
   152c0:	lsr	x1, x2, x1
   152c4:	adds	x0, x0, x1
   152c8:	b.cc	152d8 <mpfr_add1sp@@Base+0x298>  // b.lo, b.ul, b.last
   152cc:	lsr	x0, x0, #1
   152d0:	add	x22, x22, #0x1
   152d4:	orr	x0, x0, #0x8000000000000000
   152d8:	sub	w1, w21, #0x1
   152dc:	mov	x2, #0x1                   	// #1
   152e0:	neg	x3, x3
   152e4:	lsl	x2, x2, x1
   152e8:	eor	x1, x8, x2
   152ec:	and	x3, x3, x0
   152f0:	and	x1, x1, x0
   152f4:	and	x2, x2, x0
   152f8:	str	x3, [x6]
   152fc:	b	15510 <mpfr_add1sp@@Base+0x4d0>
   15300:	mov	x0, #0xc0                  	// #192
   15304:	cmp	x22, x1
   15308:	sub	x21, x0, x21
   1530c:	ldr	x12, [x19, #24]
   15310:	ldr	x8, [x26, #24]
   15314:	ldr	x11, [x2, #24]
   15318:	b.eq	15bdc <mpfr_add1sp@@Base+0xb9c>  // b.none
   1531c:	b.le	15b68 <mpfr_add1sp@@Base+0xb28>
   15320:	sub	x1, x22, x1
   15324:	mov	x15, #0x1                   	// #1
   15328:	lsl	x13, x15, x21
   1532c:	cmp	x1, #0x3f
   15330:	sub	x0, x13, #0x1
   15334:	ldr	x10, [x12]
   15338:	b.hi	159d0 <mpfr_add1sp@@Base+0x990>  // b.pmore
   1533c:	ldp	x16, x9, [x11]
   15340:	mov	w6, #0x40                  	// #64
   15344:	ldr	x3, [x11, #16]
   15348:	sub	w6, w6, w1
   1534c:	ldr	x17, [x12, #8]
   15350:	lsr	x11, x16, x1
   15354:	lsl	x2, x9, x6
   15358:	orr	x2, x2, x11
   1535c:	adds	x2, x2, x10
   15360:	lsl	x14, x3, x6
   15364:	lsr	x9, x9, x1
   15368:	orr	x9, x14, x9
   1536c:	adc	x14, x17, x9
   15370:	cset	w10, cs  // cs = hs, nlast
   15374:	mov	x11, x2
   15378:	cmp	x17, x14
   1537c:	lsl	x16, x16, x6
   15380:	b.hi	15f08 <mpfr_add1sp@@Base+0xec8>  // b.pmore
   15384:	csel	w10, w10, wzr, eq  // eq = none
   15388:	and	x15, x10, #0xff
   1538c:	ldr	x6, [x12, #16]
   15390:	lsr	x3, x3, x1
   15394:	sub	w1, w21, #0x1
   15398:	mov	x2, #0x1                   	// #1
   1539c:	add	x3, x3, x6
   153a0:	neg	x13, x13
   153a4:	add	x3, x3, x15
   153a8:	lsl	x2, x2, x1
   153ac:	cmp	x6, x3
   153b0:	eor	x0, x0, x2
   153b4:	b.hi	15e44 <mpfr_add1sp@@Base+0xe04>  // b.pmore
   153b8:	csel	w10, w10, wzr, eq  // eq = none
   153bc:	cbnz	w10, 15e44 <mpfr_add1sp@@Base+0xe04>
   153c0:	stp	x14, x3, [x8, #8]
   153c4:	and	x0, x0, x11
   153c8:	orr	x16, x0, x16
   153cc:	and	x2, x2, x11
   153d0:	and	x13, x13, x11
   153d4:	str	x13, [x8]
   153d8:	mrs	x19, tpidr_el0
   153dc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   153e0:	ldr	x1, [x0, #2544]
   153e4:	add	x0, x0, #0x9f0
   153e8:	blr	x1
   153ec:	ldr	x0, [x19, x0]
   153f0:	cmp	x0, x22
   153f4:	b.lt	15480 <mpfr_add1sp@@Base+0x440>  // b.tstop
   153f8:	str	x22, [x26, #16]
   153fc:	orr	x0, x2, x16
   15400:	cbz	x0, 1561c <mpfr_add1sp@@Base+0x5dc>
   15404:	cmp	w25, #0x5
   15408:	b.eq	1561c <mpfr_add1sp@@Base+0x5dc>  // b.none
   1540c:	cbnz	w25, 15cd0 <mpfr_add1sp@@Base+0xc90>
   15410:	cbz	x2, 15560 <mpfr_add1sp@@Base+0x520>
   15414:	ldr	x3, [x8]
   15418:	mov	w9, w21
   1541c:	lsr	x1, x3, x21
   15420:	and	x1, x1, #0x1
   15424:	orr	x1, x1, x16
   15428:	cbz	x1, 15560 <mpfr_add1sp@@Base+0x520>
   1542c:	ldp	x2, x1, [x8, #8]
   15430:	mov	x0, #0x1                   	// #1
   15434:	lsl	x0, x0, x9
   15438:	add	x0, x0, x3
   1543c:	cmp	x0, #0x0
   15440:	cinc	x2, x2, eq  // eq = none
   15444:	stp	x0, x2, [x8]
   15448:	orr	x0, x0, x2
   1544c:	cmp	x0, #0x0
   15450:	cinc	x0, x1, eq  // eq = none
   15454:	str	x0, [x8, #16]
   15458:	cbnz	x0, 15220 <mpfr_add1sp@@Base+0x1e0>
   1545c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   15460:	ldr	x1, [x0, #2544]
   15464:	add	x0, x0, #0x9f0
   15468:	blr	x1
   1546c:	ldr	x0, [x19, x0]
   15470:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   15474:	str	x1, [x8, #16]
   15478:	cmp	x22, x0
   1547c:	b.lt	15930 <mpfr_add1sp@@Base+0x8f0>  // b.tstop
   15480:	mov	w2, w5
   15484:	mov	w1, w25
   15488:	mov	x0, x26
   1548c:	bl	bf40 <mpfr_overflow@plt>
   15490:	mov	w5, w0
   15494:	b	15244 <mpfr_add1sp@@Base+0x204>
   15498:	ldr	x1, [x3, x2, lsl #3]
   1549c:	cbnz	x1, 154a8 <mpfr_add1sp@@Base+0x468>
   154a0:	subs	x2, x2, #0x1
   154a4:	b.pl	15498 <mpfr_add1sp@@Base+0x458>  // b.nfrst
   154a8:	mvn	x27, x2
   154ac:	lsr	x27, x27, #63
   154b0:	b	151b0 <mpfr_add1sp@@Base+0x170>
   154b4:	sub	w27, w23, #0x1
   154b8:	mov	x1, #0x1                   	// #1
   154bc:	mov	x2, #0xffffffffffffffff    	// #-1
   154c0:	lsl	x3, x1, x27
   154c4:	and	x3, x3, x0
   154c8:	str	x3, [x29, #120]
   154cc:	lsl	x27, x2, x27
   154d0:	bics	x27, x0, x27
   154d4:	b.eq	15f58 <mpfr_add1sp@@Base+0xf18>  // b.none
   154d8:	mov	x27, x1
   154dc:	b	151b0 <mpfr_add1sp@@Base+0x170>
   154e0:	ldr	x3, [x2]
   154e4:	sub	w1, w21, #0x1
   154e8:	ldr	x2, [x9]
   154ec:	mov	x0, #0x1                   	// #1
   154f0:	lsr	x3, x3, #1
   154f4:	add	x22, x22, x0
   154f8:	lsl	x0, x0, x1
   154fc:	mov	x1, #0x0                   	// #0
   15500:	add	x2, x3, x2, lsr #1
   15504:	bic	x3, x2, x0
   15508:	and	x2, x0, x2
   1550c:	str	x3, [x6]
   15510:	mrs	x19, tpidr_el0
   15514:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   15518:	ldr	x3, [x0, #2544]
   1551c:	add	x0, x0, #0x9f0
   15520:	blr	x3
   15524:	ldr	x0, [x19, x0]
   15528:	cmp	x0, x22
   1552c:	b.lt	15480 <mpfr_add1sp@@Base+0x440>  // b.tstop
   15530:	str	x22, [x26, #16]
   15534:	orr	x0, x2, x1
   15538:	cbz	x0, 1561c <mpfr_add1sp@@Base+0x5dc>
   1553c:	cmp	w25, #0x5
   15540:	b.eq	1561c <mpfr_add1sp@@Base+0x5dc>  // b.none
   15544:	cbnz	w25, 155c8 <mpfr_add1sp@@Base+0x588>
   15548:	cbz	x2, 15560 <mpfr_add1sp@@Base+0x520>
   1554c:	ldr	x2, [x6]
   15550:	lsr	x0, x2, x21
   15554:	and	x0, x0, #0x1
   15558:	orr	x1, x0, x1
   1555c:	cbnz	x1, 155e0 <mpfr_add1sp@@Base+0x5a0>
   15560:	cbz	w5, 1561c <mpfr_add1sp@@Base+0x5dc>
   15564:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   15568:	ldr	x1, [x0, #2576]
   1556c:	add	x0, x0, #0xa10
   15570:	blr	x1
   15574:	add	x0, x19, x0
   15578:	neg	w5, w5
   1557c:	ldr	w1, [x0]
   15580:	orr	w1, w1, #0x8
   15584:	str	w1, [x0]
   15588:	b	15244 <mpfr_add1sp@@Base+0x204>
   1558c:	cmp	x1, #0x3f
   15590:	b.ls	15a74 <mpfr_add1sp@@Base+0xa34>  // b.plast
   15594:	mrs	x19, tpidr_el0
   15598:	str	x0, [x6]
   1559c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   155a0:	ldr	x1, [x0, #2544]
   155a4:	add	x0, x0, #0x9f0
   155a8:	blr	x1
   155ac:	ldr	x0, [x19, x0]
   155b0:	cmp	x22, x0
   155b4:	b.gt	15480 <mpfr_add1sp@@Base+0x440>
   155b8:	str	x22, [x26, #16]
   155bc:	cmp	w25, #0x5
   155c0:	b.eq	1561c <mpfr_add1sp@@Base+0x5dc>  // b.none
   155c4:	cbz	w25, 15560 <mpfr_add1sp@@Base+0x520>
   155c8:	cmp	w25, #0x1
   155cc:	b.eq	15560 <mpfr_add1sp@@Base+0x520>  // b.none
   155d0:	add	w0, w25, w5, lsr #31
   155d4:	cmp	w0, #0x3
   155d8:	b.eq	15560 <mpfr_add1sp@@Base+0x520>  // b.none
   155dc:	ldr	x2, [x6]
   155e0:	mov	x0, #0x1                   	// #1
   155e4:	lsl	x21, x0, x21
   155e8:	add	x21, x21, x2
   155ec:	str	x21, [x6]
   155f0:	cbnz	x21, 15220 <mpfr_add1sp@@Base+0x1e0>
   155f4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   155f8:	str	x0, [x6]
   155fc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   15600:	ldr	x1, [x0, #2544]
   15604:	add	x0, x0, #0x9f0
   15608:	blr	x1
   1560c:	ldr	x0, [x19, x0]
   15610:	cmp	x0, x22
   15614:	b.gt	15930 <mpfr_add1sp@@Base+0x8f0>
   15618:	b	15480 <mpfr_add1sp@@Base+0x440>
   1561c:	mov	w5, #0x0                   	// #0
   15620:	b	15244 <mpfr_add1sp@@Base+0x204>
   15624:	mov	x0, #0x80                  	// #128
   15628:	cmp	x22, x1
   1562c:	sub	x21, x0, x21
   15630:	ldr	x13, [x19, #24]
   15634:	ldr	x9, [x26, #24]
   15638:	ldr	x8, [x2, #24]
   1563c:	b.eq	15948 <mpfr_add1sp@@Base+0x908>  // b.none
   15640:	b.gt	1565c <mpfr_add1sp@@Base+0x61c>
   15644:	mov	x2, x13
   15648:	mov	x0, x22
   1564c:	mov	x13, x8
   15650:	mov	x22, x1
   15654:	mov	x8, x2
   15658:	mov	x1, x0
   1565c:	sub	x1, x22, x1
   15660:	mov	x0, #0x1                   	// #1
   15664:	lsl	x6, x0, x21
   15668:	cmp	x1, #0x3f
   1566c:	sub	x10, x6, #0x1
   15670:	ldr	x14, [x13]
   15674:	b.hi	15988 <mpfr_add1sp@@Base+0x948>  // b.pmore
   15678:	ldp	x11, x8, [x8]
   1567c:	mov	w3, #0x40                  	// #64
   15680:	sub	w3, w3, w1
   15684:	neg	x6, x6
   15688:	ldr	x12, [x13, #8]
   1568c:	lsl	x2, x8, x3
   15690:	lsr	x13, x11, x1
   15694:	orr	x2, x2, x13
   15698:	adds	x2, x2, x14
   1569c:	sub	w13, w21, #0x1
   156a0:	lsr	x8, x8, x1
   156a4:	adc	x8, x12, x8
   156a8:	lsl	x0, x0, x13
   156ac:	cmp	x12, x8
   156b0:	eor	x1, x10, x0
   156b4:	lsl	x3, x11, x3
   156b8:	b.hi	15b48 <mpfr_add1sp@@Base+0xb08>  // b.pmore
   156bc:	and	x1, x2, x1
   156c0:	and	x6, x2, x6
   156c4:	orr	x3, x1, x3
   156c8:	and	x2, x0, x2
   156cc:	stp	x6, x8, [x9]
   156d0:	mrs	x19, tpidr_el0
   156d4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   156d8:	ldr	x1, [x0, #2544]
   156dc:	add	x0, x0, #0x9f0
   156e0:	blr	x1
   156e4:	ldr	x0, [x19, x0]
   156e8:	cmp	x0, x22
   156ec:	b.lt	15480 <mpfr_add1sp@@Base+0x440>  // b.tstop
   156f0:	str	x22, [x26, #16]
   156f4:	orr	x0, x2, x3
   156f8:	cbz	x0, 1561c <mpfr_add1sp@@Base+0x5dc>
   156fc:	cmp	w25, #0x5
   15700:	b.eq	1561c <mpfr_add1sp@@Base+0x5dc>  // b.none
   15704:	cbz	w25, 15acc <mpfr_add1sp@@Base+0xa8c>
   15708:	cmp	w25, #0x1
   1570c:	b.eq	15560 <mpfr_add1sp@@Base+0x520>  // b.none
   15710:	add	w0, w25, w5, lsr #31
   15714:	cmp	w0, #0x3
   15718:	b.eq	15560 <mpfr_add1sp@@Base+0x520>  // b.none
   1571c:	ldr	x2, [x9]
   15720:	mov	x0, #0x1                   	// #1
   15724:	ldr	x1, [x9, #8]
   15728:	lsl	x21, x0, x21
   1572c:	add	x21, x21, x2
   15730:	cmp	x21, #0x0
   15734:	cinc	x0, x1, eq  // eq = none
   15738:	stp	x21, x0, [x9]
   1573c:	cbnz	x0, 15220 <mpfr_add1sp@@Base+0x1e0>
   15740:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   15744:	ldr	x1, [x0, #2544]
   15748:	add	x0, x0, #0x9f0
   1574c:	blr	x1
   15750:	ldr	x0, [x19, x0]
   15754:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   15758:	str	x1, [x9, #8]
   1575c:	cmp	x22, x0
   15760:	b.lt	15930 <mpfr_add1sp@@Base+0x8f0>  // b.tstop
   15764:	b	15480 <mpfr_add1sp@@Base+0x440>
   15768:	ldr	x1, [x19, #24]
   1576c:	mov	x3, x24
   15770:	ldr	x2, [x28, #24]
   15774:	add	x22, x22, #0x1
   15778:	ldr	x19, [x26, #24]
   1577c:	mov	x0, x19
   15780:	bl	c5a0 <__gmpn_add_n@plt>
   15784:	mov	x1, x19
   15788:	mov	w3, #0x1                   	// #1
   1578c:	mov	x0, x19
   15790:	mov	x2, x24
   15794:	ldr	x20, [x19]
   15798:	bl	bce0 <__gmpn_rshift@plt>
   1579c:	lsl	x5, x24, #3
   157a0:	mov	x3, #0x1                   	// #1
   157a4:	sub	x5, x5, #0x8
   157a8:	lsl	x21, x3, x23
   157ac:	neg	x0, x21
   157b0:	cmp	w25, #0x5
   157b4:	ldr	x1, [x19, x5]
   157b8:	orr	x1, x1, #0x8000000000000000
   157bc:	str	x1, [x19, x5]
   157c0:	ldr	x1, [x19]
   157c4:	and	x0, x0, x1
   157c8:	str	x0, [x19]
   157cc:	b.eq	15c54 <mpfr_add1sp@@Base+0xc14>  // b.none
   157d0:	lsr	x1, x20, x23
   157d4:	mov	w20, #0x0                   	// #0
   157d8:	ldr	x2, [x29, #152]
   157dc:	tbz	w1, #0, 151f0 <mpfr_add1sp@@Base+0x1b0>
   157e0:	cbnz	w25, 15fe0 <mpfr_add1sp@@Base+0xfa0>
   157e4:	lsr	x23, x0, x23
   157e8:	mov	w20, #0xffffffff            	// #-1
   157ec:	tbz	w23, #0, 151f0 <mpfr_add1sp@@Base+0x1b0>
   157f0:	adds	x0, x21, x0
   157f4:	str	x0, [x19]
   157f8:	mov	w20, #0x1                   	// #1
   157fc:	b.cc	151f0 <mpfr_add1sp@@Base+0x1b0>  // b.lo, b.ul, b.last
   15800:	ldr	x1, [x29, #136]
   15804:	mov	x0, x19
   15808:	add	x3, x19, x1, lsl #3
   1580c:	nop
   15810:	ldr	x1, [x0, #8]
   15814:	add	x0, x0, #0x8
   15818:	add	x1, x1, #0x1
   1581c:	str	x1, [x0]
   15820:	cbnz	x1, 15f10 <mpfr_add1sp@@Base+0xed0>
   15824:	cmp	x0, x3
   15828:	b.ne	15810 <mpfr_add1sp@@Base+0x7d0>  // b.any
   1582c:	ldr	x1, [x29, #136]
   15830:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   15834:	add	x22, x22, #0x1
   15838:	mov	w20, #0x1                   	// #1
   1583c:	str	x0, [x19, x1, lsl #3]
   15840:	b	151f0 <mpfr_add1sp@@Base+0x1b0>
   15844:	cmp	x22, x1
   15848:	ldr	x0, [x19, #24]
   1584c:	ldr	x6, [x26, #24]
   15850:	ldr	x3, [x2, #24]
   15854:	b.eq	15b84 <mpfr_add1sp@@Base+0xb44>  // b.none
   15858:	b.gt	15874 <mpfr_add1sp@@Base+0x834>
   1585c:	mov	x8, x0
   15860:	mov	x2, x22
   15864:	mov	x0, x3
   15868:	mov	x22, x1
   1586c:	mov	x3, x8
   15870:	mov	x1, x2
   15874:	sub	x1, x22, x1
   15878:	cmp	x1, #0x3f
   1587c:	ldr	x0, [x0]
   15880:	b.hi	15e18 <mpfr_add1sp@@Base+0xdd8>  // b.pmore
   15884:	ldr	x2, [x3]
   15888:	neg	w3, w1
   1588c:	lsr	x1, x2, x1
   15890:	adds	x1, x1, x0
   15894:	lsl	x2, x2, x3
   15898:	b.cc	15f48 <mpfr_add1sp@@Base+0xf08>  // b.lo, b.ul, b.last
   1589c:	lsr	x0, x1, #1
   158a0:	add	x22, x22, #0x1
   158a4:	and	x3, x1, #0x1
   158a8:	orr	x0, x0, #0x8000000000000000
   158ac:	str	x0, [x6]
   158b0:	mrs	x19, tpidr_el0
   158b4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   158b8:	ldr	x1, [x0, #2544]
   158bc:	add	x0, x0, #0x9f0
   158c0:	blr	x1
   158c4:	ldr	x0, [x19, x0]
   158c8:	cmp	x0, x22
   158cc:	b.lt	15480 <mpfr_add1sp@@Base+0x440>  // b.tstop
   158d0:	orr	x0, x3, x2
   158d4:	str	x22, [x26, #16]
   158d8:	cmp	x0, #0x0
   158dc:	ccmp	w25, #0x5, #0x4, ne  // ne = any
   158e0:	b.eq	1561c <mpfr_add1sp@@Base+0x5dc>  // b.none
   158e4:	cbnz	w25, 15e6c <mpfr_add1sp@@Base+0xe2c>
   158e8:	cbz	x3, 15560 <mpfr_add1sp@@Base+0x520>
   158ec:	ldr	x0, [x6]
   158f0:	and	x1, x0, #0x1
   158f4:	orr	x2, x1, x2
   158f8:	cbz	x2, 15560 <mpfr_add1sp@@Base+0x520>
   158fc:	add	x0, x0, #0x1
   15900:	str	x0, [x6]
   15904:	cbnz	x0, 15220 <mpfr_add1sp@@Base+0x1e0>
   15908:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1590c:	str	x0, [x6]
   15910:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   15914:	ldr	x1, [x0, #2544]
   15918:	add	x0, x0, #0x9f0
   1591c:	blr	x1
   15920:	ldr	x0, [x19, x0]
   15924:	cmp	x22, x0
   15928:	b.ge	15480 <mpfr_add1sp@@Base+0x440>  // b.tcont
   1592c:	nop
   15930:	add	x22, x22, #0x1
   15934:	str	x22, [x26, #16]
   15938:	b	15220 <mpfr_add1sp@@Base+0x1e0>
   1593c:	mov	x27, #0x0                   	// #0
   15940:	str	xzr, [x29, #120]
   15944:	b	151b0 <mpfr_add1sp@@Base+0x170>
   15948:	ldp	x3, x6, [x8]
   1594c:	sub	w10, w21, #0x1
   15950:	ldp	x1, x0, [x13]
   15954:	mov	x2, #0x1                   	// #1
   15958:	add	x22, x22, x2
   1595c:	lsl	x2, x2, x10
   15960:	adds	x1, x1, x3
   15964:	mov	x3, #0x0                   	// #0
   15968:	adc	x0, x0, x6
   1596c:	extr	x1, x0, x1, #1
   15970:	lsr	x0, x0, #1
   15974:	bic	x6, x1, x2
   15978:	orr	x0, x0, #0x8000000000000000
   1597c:	and	x2, x2, x1
   15980:	stp	x6, x0, [x9]
   15984:	b	156d0 <mpfr_add1sp@@Base+0x690>
   15988:	cmp	x1, #0x7f
   1598c:	b.ls	15ae8 <mpfr_add1sp@@Base+0xaa8>  // b.plast
   15990:	mrs	x19, tpidr_el0
   15994:	str	x14, [x9]
   15998:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1599c:	ldr	x1, [x0, #2544]
   159a0:	add	x0, x0, #0x9f0
   159a4:	blr	x1
   159a8:	ldr	x1, [x13, #8]
   159ac:	str	x1, [x9, #8]
   159b0:	ldr	x0, [x19, x0]
   159b4:	cmp	x22, x0
   159b8:	b.gt	15480 <mpfr_add1sp@@Base+0x440>
   159bc:	str	x22, [x26, #16]
   159c0:	cmp	w25, #0x5
   159c4:	b.eq	1561c <mpfr_add1sp@@Base+0x5dc>  // b.none
   159c8:	cbz	w25, 15560 <mpfr_add1sp@@Base+0x520>
   159cc:	b	15708 <mpfr_add1sp@@Base+0x6c8>
   159d0:	cmp	x1, #0x7f
   159d4:	b.hi	15e88 <mpfr_add1sp@@Base+0xe48>  // b.pmore
   159d8:	cmp	x1, #0x40
   159dc:	sub	w14, w1, #0x40
   159e0:	ldp	x16, x9, [x11]
   159e4:	ldr	x3, [x11, #16]
   159e8:	b.eq	15a08 <mpfr_add1sp@@Base+0x9c8>  // b.none
   159ec:	mov	w6, #0x80                  	// #128
   159f0:	sub	w1, w6, w1
   159f4:	lsr	x2, x9, x14
   159f8:	lsl	x9, x9, x1
   159fc:	orr	x16, x16, x9
   15a00:	lsl	x1, x3, x1
   15a04:	orr	x9, x1, x2
   15a08:	ldr	x2, [x12, #8]
   15a0c:	adds	x9, x9, x10
   15a10:	lsr	x3, x3, x14
   15a14:	cset	w6, cs  // cs = hs, nlast
   15a18:	adc	x14, x2, x3
   15a1c:	mov	x11, x9
   15a20:	cmp	x2, x14
   15a24:	mov	x1, #0x1                   	// #1
   15a28:	ldr	x3, [x12, #16]
   15a2c:	b.hi	15a3c <mpfr_add1sp@@Base+0x9fc>  // b.pmore
   15a30:	cmp	w6, #0x0
   15a34:	ccmp	x2, x14, #0x0, ne  // ne = any
   15a38:	cset	x1, eq  // eq = none
   15a3c:	sub	w2, w21, #0x1
   15a40:	mov	x10, #0x1                   	// #1
   15a44:	neg	x13, x13
   15a48:	adds	x6, x3, x1
   15a4c:	lsl	x2, x10, x2
   15a50:	eor	x0, x2, x0
   15a54:	b.eq	15fd0 <mpfr_add1sp@@Base+0xf90>  // b.none
   15a58:	and	x0, x0, x9
   15a5c:	and	x13, x13, x9
   15a60:	orr	x16, x0, x16
   15a64:	and	x2, x2, x9
   15a68:	stp	x13, x14, [x8]
   15a6c:	str	x6, [x8, #16]
   15a70:	b	153d8 <mpfr_add1sp@@Base+0x398>
   15a74:	ldr	x2, [x2]
   15a78:	neg	w9, w1
   15a7c:	lsr	x1, x2, x1
   15a80:	adds	x0, x0, x1
   15a84:	lsl	x9, x2, x9
   15a88:	b.cc	15aa0 <mpfr_add1sp@@Base+0xa60>  // b.lo, b.ul, b.last
   15a8c:	and	x1, x0, #0x1
   15a90:	lsr	x0, x0, #1
   15a94:	add	x22, x22, #0x1
   15a98:	orr	x9, x9, x1
   15a9c:	orr	x0, x0, #0x8000000000000000
   15aa0:	sub	w1, w21, #0x1
   15aa4:	mov	x2, #0x1                   	// #1
   15aa8:	neg	x3, x3
   15aac:	lsl	x2, x2, x1
   15ab0:	eor	x1, x8, x2
   15ab4:	and	x1, x1, x0
   15ab8:	and	x3, x3, x0
   15abc:	orr	x1, x1, x9
   15ac0:	and	x2, x2, x0
   15ac4:	str	x3, [x6]
   15ac8:	b	15510 <mpfr_add1sp@@Base+0x4d0>
   15acc:	cbz	x2, 15560 <mpfr_add1sp@@Base+0x520>
   15ad0:	ldr	x2, [x9]
   15ad4:	lsr	x0, x2, x21
   15ad8:	and	x0, x0, #0x1
   15adc:	orr	x3, x0, x3
   15ae0:	cbnz	x3, 15720 <mpfr_add1sp@@Base+0x6e0>
   15ae4:	b	15560 <mpfr_add1sp@@Base+0x520>
   15ae8:	ldp	x3, x11, [x8]
   15aec:	mov	w12, #0x80                  	// #128
   15af0:	sub	w8, w12, w1
   15af4:	sub	w2, w1, #0x40
   15af8:	ldr	x12, [x13, #8]
   15afc:	cmp	x1, #0x40
   15b00:	sub	w13, w21, #0x1
   15b04:	neg	x6, x6
   15b08:	lsl	x1, x11, x8
   15b0c:	orr	x1, x3, x1
   15b10:	csel	x3, x1, x3, ne  // ne = any
   15b14:	lsr	x1, x11, x2
   15b18:	adds	x8, x1, x14
   15b1c:	lsl	x0, x0, x13
   15b20:	mov	x2, x8
   15b24:	cinc	x11, x12, cs  // cs = hs, nlast
   15b28:	eor	x1, x10, x0
   15b2c:	cbz	x11, 15fd8 <mpfr_add1sp@@Base+0xf98>
   15b30:	and	x1, x8, x1
   15b34:	and	x6, x8, x6
   15b38:	orr	x3, x1, x3
   15b3c:	and	x2, x8, x0
   15b40:	stp	x6, x11, [x9]
   15b44:	b	156d0 <mpfr_add1sp@@Base+0x690>
   15b48:	lsr	x10, x8, #1
   15b4c:	lsl	x11, x8, #63
   15b50:	orr	x8, x10, #0x8000000000000000
   15b54:	and	x10, x2, #0x1
   15b58:	add	x22, x22, #0x1
   15b5c:	orr	x3, x3, x10
   15b60:	orr	x2, x11, x2, lsr #1
   15b64:	b	156bc <mpfr_add1sp@@Base+0x67c>
   15b68:	mov	x2, x12
   15b6c:	mov	x0, x22
   15b70:	mov	x12, x11
   15b74:	mov	x22, x1
   15b78:	mov	x11, x2
   15b7c:	mov	x1, x0
   15b80:	b	15320 <mpfr_add1sp@@Base+0x2e0>
   15b84:	ldr	x1, [x3]
   15b88:	add	x22, x22, #0x1
   15b8c:	ldr	x0, [x0]
   15b90:	mov	x2, #0x0                   	// #0
   15b94:	add	x0, x0, x1
   15b98:	and	x3, x0, #0x1
   15b9c:	lsr	x0, x0, #1
   15ba0:	orr	x0, x0, #0x8000000000000000
   15ba4:	str	x0, [x6]
   15ba8:	b	158b0 <mpfr_add1sp@@Base+0x870>
   15bac:	cbz	x2, 15bb8 <mpfr_add1sp@@Base+0xb78>
   15bb0:	mov	x0, x2
   15bb4:	bl	c410 <mpfr_tmp_free@plt>
   15bb8:	ldr	w2, [x26, #8]
   15bbc:	mov	w1, w25
   15bc0:	mov	x0, x26
   15bc4:	bl	bf40 <mpfr_overflow@plt>
   15bc8:	mov	w5, w0
   15bcc:	b	15244 <mpfr_add1sp@@Base+0x204>
   15bd0:	mov	x0, x2
   15bd4:	bl	c410 <mpfr_tmp_free@plt>
   15bd8:	b	15218 <mpfr_add1sp@@Base+0x1d8>
   15bdc:	ldp	x1, x2, [x12]
   15be0:	mov	x6, #0x1                   	// #1
   15be4:	ldr	x3, [x11]
   15be8:	ldr	x9, [x11, #16]
   15bec:	adds	x1, x1, x3
   15bf0:	ldr	x3, [x11, #8]
   15bf4:	cset	w10, cs  // cs = hs, nlast
   15bf8:	ldr	x0, [x12, #16]
   15bfc:	adc	x3, x2, x3
   15c00:	cmp	x2, x3
   15c04:	add	x0, x0, x9
   15c08:	b.hi	15c18 <mpfr_add1sp@@Base+0xbd8>  // b.pmore
   15c0c:	cmp	w10, #0x0
   15c10:	ccmp	x2, x3, #0x0, ne  // ne = any
   15c14:	cset	x6, eq  // eq = none
   15c18:	add	x0, x0, x6
   15c1c:	sub	w9, w21, #0x1
   15c20:	mov	x2, #0x1                   	// #1
   15c24:	extr	x1, x3, x1, #1
   15c28:	lsr	x6, x0, #1
   15c2c:	add	x22, x22, x2
   15c30:	mov	x16, #0x0                   	// #0
   15c34:	extr	x0, x0, x3, #1
   15c38:	lsl	x2, x2, x9
   15c3c:	orr	x3, x6, #0x8000000000000000
   15c40:	bic	x9, x1, x2
   15c44:	and	x2, x2, x1
   15c48:	stp	x9, x0, [x8]
   15c4c:	str	x3, [x8, #16]
   15c50:	b	153d8 <mpfr_add1sp@@Base+0x398>
   15c54:	mov	w20, #0x0                   	// #0
   15c58:	ldr	x2, [x29, #152]
   15c5c:	b	151f0 <mpfr_add1sp@@Base+0x1b0>
   15c60:	cmp	w25, #0x5
   15c64:	ldr	x1, [x19, #24]
   15c68:	b.ne	1602c <mpfr_add1sp@@Base+0xfec>  // b.any
   15c6c:	ldr	x0, [x26, #24]
   15c70:	cmp	x0, x1
   15c74:	b.eq	16000 <mpfr_add1sp@@Base+0xfc0>  // b.none
   15c78:	lsl	x2, x24, #3
   15c7c:	bl	ba10 <memcpy@plt>
   15c80:	mov	w20, #0xffffffff            	// #-1
   15c84:	ldr	x2, [x29, #152]
   15c88:	b	151f0 <mpfr_add1sp@@Base+0x1b0>
   15c8c:	str	x10, [x8]
   15c90:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   15c94:	ldr	x1, [x0, #2544]
   15c98:	add	x0, x0, #0x9f0
   15c9c:	blr	x1
   15ca0:	mrs	x19, tpidr_el0
   15ca4:	ldr	x1, [x12, #8]
   15ca8:	str	x1, [x8, #8]
   15cac:	ldr	x0, [x19, x0]
   15cb0:	ldr	x1, [x12, #16]
   15cb4:	str	x1, [x8, #16]
   15cb8:	cmp	x22, x0
   15cbc:	b.gt	15480 <mpfr_add1sp@@Base+0x440>
   15cc0:	str	x22, [x26, #16]
   15cc4:	cmp	w25, #0x5
   15cc8:	b.eq	1561c <mpfr_add1sp@@Base+0x5dc>  // b.none
   15ccc:	cbz	w25, 15560 <mpfr_add1sp@@Base+0x520>
   15cd0:	cmp	w25, #0x1
   15cd4:	b.eq	15560 <mpfr_add1sp@@Base+0x520>  // b.none
   15cd8:	add	w0, w25, w5, lsr #31
   15cdc:	cmp	w0, #0x3
   15ce0:	b.eq	15560 <mpfr_add1sp@@Base+0x520>  // b.none
   15ce4:	mov	w9, w21
   15ce8:	ldr	x3, [x8]
   15cec:	b	1542c <mpfr_add1sp@@Base+0x3ec>
   15cf0:	lsl	x3, x0, #3
   15cf4:	sub	x27, x24, x0
   15cf8:	add	x1, x1, x3
   15cfc:	cmp	x1, x8
   15d00:	b.eq	15d20 <mpfr_add1sp@@Base+0xce0>  // b.none
   15d04:	sub	x27, x24, x0
   15d08:	mov	x0, x8
   15d0c:	stp	x9, x3, [x29, #112]
   15d10:	lsl	x2, x27, #3
   15d14:	bl	ba10 <memcpy@plt>
   15d18:	mov	x8, x0
   15d1c:	ldp	x9, x3, [x29, #112]
   15d20:	add	x0, x8, x27, lsl #3
   15d24:	mov	x2, x3
   15d28:	mov	w1, #0x0                   	// #0
   15d2c:	stp	x9, x8, [x29, #112]
   15d30:	bl	c110 <memset@plt>
   15d34:	ldp	x9, x8, [x29, #112]
   15d38:	b	15148 <mpfr_add1sp@@Base+0x108>
   15d3c:	ldr	x1, [x29, #104]
   15d40:	add	x0, x29, #0x98
   15d44:	str	x9, [x29, #120]
   15d48:	bl	bdc0 <mpfr_tmp_allocate@plt>
   15d4c:	mov	x8, x0
   15d50:	ldr	x9, [x29, #120]
   15d54:	b	15120 <mpfr_add1sp@@Base+0xe0>
   15d58:	ldr	x0, [x29, #120]
   15d5c:	cbnz	w25, 15f18 <mpfr_add1sp@@Base+0xed8>
   15d60:	cmp	x27, #0x0
   15d64:	csetm	w20, ne  // ne = any
   15d68:	cbz	x0, 151f0 <mpfr_add1sp@@Base+0x1b0>
   15d6c:	ldr	x0, [x19]
   15d70:	mov	w20, #0xffffffff            	// #-1
   15d74:	lsr	x1, x0, x23
   15d78:	and	x1, x1, #0x1
   15d7c:	orr	x27, x1, x27
   15d80:	cbz	x27, 151f0 <mpfr_add1sp@@Base+0x1b0>
   15d84:	b	157f0 <mpfr_add1sp@@Base+0x7b0>
   15d88:	ldr	x0, [x19]
   15d8c:	mov	x2, x24
   15d90:	mov	x1, x19
   15d94:	mov	w3, w28
   15d98:	and	x24, x21, x0
   15d9c:	mov	x0, x19
   15da0:	bl	bce0 <__gmpn_rshift@plt>
   15da4:	add	x22, x22, x28
   15da8:	ldr	x0, [x29, #104]
   15dac:	sub	x1, x0, #0x8
   15db0:	ldr	x0, [x29, #120]
   15db4:	str	x24, [x29, #120]
   15db8:	orr	x27, x27, x0
   15dbc:	ldr	x0, [x19, x1]
   15dc0:	orr	x0, x0, #0x8000000000000000
   15dc4:	str	x0, [x19, x1]
   15dc8:	ldr	x0, [x19]
   15dcc:	and	x20, x0, x20
   15dd0:	str	x20, [x19]
   15dd4:	b	151e0 <mpfr_add1sp@@Base+0x1a0>
   15dd8:	lsl	x4, x0, #3
   15ddc:	sub	x27, x24, x0
   15de0:	add	x1, x1, x4
   15de4:	mov	x2, x27
   15de8:	mov	x0, x8
   15dec:	str	x9, [x29, #96]
   15df0:	stp	x4, x8, [x29, #112]
   15df4:	bl	bce0 <__gmpn_rshift@plt>
   15df8:	mov	w1, #0x0                   	// #0
   15dfc:	ldp	x4, x8, [x29, #112]
   15e00:	add	x0, x8, x27, lsl #3
   15e04:	mov	x2, x4
   15e08:	bl	c110 <memset@plt>
   15e0c:	ldr	x9, [x29, #96]
   15e10:	ldr	x8, [x29, #120]
   15e14:	b	15148 <mpfr_add1sp@@Base+0x108>
   15e18:	cmp	x1, #0x40
   15e1c:	mov	x2, #0x1                   	// #1
   15e20:	b.ne	15e34 <mpfr_add1sp@@Base+0xdf4>  // b.any
   15e24:	ldr	x3, [x3]
   15e28:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   15e2c:	cmp	x3, x2
   15e30:	cset	x2, ne  // ne = any
   15e34:	cmp	x1, #0x40
   15e38:	str	x0, [x6]
   15e3c:	cset	x3, eq  // eq = none
   15e40:	b	158b0 <mpfr_add1sp@@Base+0x870>
   15e44:	lsr	x1, x3, #1
   15e48:	lsl	x6, x3, #63
   15e4c:	orr	x1, x1, #0x8000000000000000
   15e50:	and	x9, x11, #0x1
   15e54:	orr	x3, x6, x14, lsr #1
   15e58:	add	x22, x22, #0x1
   15e5c:	orr	x16, x16, x9
   15e60:	stp	x3, x1, [x8, #8]
   15e64:	extr	x11, x14, x11, #1
   15e68:	b	153c4 <mpfr_add1sp@@Base+0x384>
   15e6c:	cmp	w25, #0x1
   15e70:	b.eq	15560 <mpfr_add1sp@@Base+0x520>  // b.none
   15e74:	add	w0, w25, w5, lsr #31
   15e78:	cmp	w0, #0x3
   15e7c:	b.eq	15560 <mpfr_add1sp@@Base+0x520>  // b.none
   15e80:	ldr	x0, [x6]
   15e84:	b	158fc <mpfr_add1sp@@Base+0x8bc>
   15e88:	cmp	x1, #0xbf
   15e8c:	b.hi	15c8c <mpfr_add1sp@@Base+0xc4c>  // b.pmore
   15e90:	ldr	x3, [x11, #16]
   15e94:	sub	w14, w1, #0x80
   15e98:	mov	w9, #0xc0                  	// #192
   15e9c:	sub	w9, w9, w1
   15ea0:	cmp	x1, #0x80
   15ea4:	sub	w2, w21, #0x1
   15ea8:	lsr	x1, x3, x14
   15eac:	neg	x13, x13
   15eb0:	lsl	x9, x3, x9
   15eb4:	csel	x9, x9, xzr, ne  // ne = any
   15eb8:	ldp	x6, x16, [x11]
   15ebc:	adds	x1, x1, x10
   15ec0:	ldp	x11, x3, [x12, #8]
   15ec4:	cset	x10, cs  // cs = hs, nlast
   15ec8:	lsl	x2, x15, x2
   15ecc:	eor	x0, x2, x0
   15ed0:	orr	x16, x16, x6
   15ed4:	orr	x16, x16, x9
   15ed8:	adds	x10, x11, x10
   15edc:	mov	x11, x1
   15ee0:	cinc	x6, x3, cs  // cs = hs, nlast
   15ee4:	mov	x14, x10
   15ee8:	cbz	x6, 15fd0 <mpfr_add1sp@@Base+0xf90>
   15eec:	and	x0, x1, x0
   15ef0:	and	x13, x1, x13
   15ef4:	orr	x16, x0, x16
   15ef8:	and	x2, x2, x1
   15efc:	stp	x13, x10, [x8]
   15f00:	str	x6, [x8, #16]
   15f04:	b	153d8 <mpfr_add1sp@@Base+0x398>
   15f08:	mov	w10, w15
   15f0c:	b	1538c <mpfr_add1sp@@Base+0x34c>
   15f10:	mov	w20, #0x1                   	// #1
   15f14:	b	151f0 <mpfr_add1sp@@Base+0x1b0>
   15f18:	orr	x27, x0, x27
   15f1c:	ldr	w0, [x29, #132]
   15f20:	cmp	x27, #0x0
   15f24:	add	w24, w0, w25
   15f28:	csetm	w20, ne  // ne = any
   15f2c:	cmp	w24, #0x3
   15f30:	b.eq	16078 <mpfr_add1sp@@Base+0x1038>  // b.none
   15f34:	cmp	x27, #0x0
   15f38:	ccmp	w25, #0x1, #0x4, ne  // ne = any
   15f3c:	b.eq	151f0 <mpfr_add1sp@@Base+0x1b0>  // b.none
   15f40:	ldr	x0, [x19]
   15f44:	b	157f0 <mpfr_add1sp@@Base+0x7b0>
   15f48:	and	x3, x2, #0x8000000000000000
   15f4c:	and	x2, x2, #0x7fffffffffffffff
   15f50:	str	x1, [x6]
   15f54:	b	158b0 <mpfr_add1sp@@Base+0x870>
   15f58:	mov	w3, w23
   15f5c:	sub	x20, x3, x20
   15f60:	add	x9, x20, x9
   15f64:	cmp	x21, x9
   15f68:	b.lt	151b0 <mpfr_add1sp@@Base+0x170>  // b.tstop
   15f6c:	ldr	x4, [x29, #136]
   15f70:	cmp	x9, #0x0
   15f74:	add	x3, x9, #0x3f
   15f78:	mov	x27, x1
   15f7c:	csel	x3, x3, x9, lt  // lt = tstop
   15f80:	negs	x10, x9
   15f84:	ldr	x11, [x28, #24]
   15f88:	sub	x3, x4, x3, asr #6
   15f8c:	and	x6, x10, #0x3f
   15f90:	and	x9, x9, #0x3f
   15f94:	csneg	x9, x9, x6, mi  // mi = first
   15f98:	mov	x6, #0x3f                  	// #63
   15f9c:	ldr	x10, [x11, x3, lsl #3]
   15fa0:	sub	x9, x6, x9
   15fa4:	lsl	x2, x2, x9
   15fa8:	bics	xzr, x10, x2
   15fac:	b.ne	151b0 <mpfr_add1sp@@Base+0x170>  // b.any
   15fb0:	b	15fbc <mpfr_add1sp@@Base+0xf7c>
   15fb4:	ldr	x1, [x11, x3, lsl #3]
   15fb8:	cbnz	x1, 15fc4 <mpfr_add1sp@@Base+0xf84>
   15fbc:	subs	x3, x3, #0x1
   15fc0:	b.pl	15fb4 <mpfr_add1sp@@Base+0xf74>  // b.nfrst
   15fc4:	mvn	x3, x3
   15fc8:	lsr	x27, x3, #63
   15fcc:	b	151b0 <mpfr_add1sp@@Base+0x170>
   15fd0:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   15fd4:	b	15e50 <mpfr_add1sp@@Base+0xe10>
   15fd8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
   15fdc:	b	15b54 <mpfr_add1sp@@Base+0xb14>
   15fe0:	ldr	w1, [x29, #132]
   15fe4:	add	w24, w1, w25
   15fe8:	cmp	w24, #0x3
   15fec:	ccmp	w25, #0x1, #0x4, ne  // ne = any
   15ff0:	b.ne	157f0 <mpfr_add1sp@@Base+0x7b0>  // b.any
   15ff4:	mov	w25, w3
   15ff8:	mov	w20, #0xffffffff            	// #-1
   15ffc:	b	151f0 <mpfr_add1sp@@Base+0x1b0>
   16000:	mrs	x19, tpidr_el0
   16004:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   16008:	ldr	x1, [x0, #2544]
   1600c:	add	x0, x0, #0x9f0
   16010:	blr	x1
   16014:	ldr	x0, [x19, x0]
   16018:	cmp	x0, x22
   1601c:	b.lt	15bb8 <mpfr_add1sp@@Base+0xb78>  // b.tstop
   16020:	mov	w20, #0xffffffff            	// #-1
   16024:	str	x22, [x26, #16]
   16028:	b	15218 <mpfr_add1sp@@Base+0x1d8>
   1602c:	cmp	x21, x20
   16030:	b.cs	16080 <mpfr_add1sp@@Base+0x1040>  // b.hs, b.nlast
   16034:	cmp	w25, #0x1
   16038:	b.ls	15c6c <mpfr_add1sp@@Base+0xc2c>  // b.plast
   1603c:	ldr	w0, [x29, #132]
   16040:	add	w0, w0, w25
   16044:	cmp	w0, #0x3
   16048:	b.eq	15c6c <mpfr_add1sp@@Base+0xc2c>  // b.none
   1604c:	ldr	x19, [x26, #24]
   16050:	cmp	x19, x1
   16054:	b.eq	160c8 <mpfr_add1sp@@Base+0x1088>  // b.none
   16058:	lsl	x2, x24, #3
   1605c:	mov	x0, x19
   16060:	bl	ba10 <memcpy@plt>
   16064:	mov	x0, #0x1                   	// #1
   16068:	lsl	x21, x0, x23
   1606c:	ldr	x0, [x19]
   16070:	ldr	x2, [x29, #152]
   16074:	b	157f0 <mpfr_add1sp@@Base+0x7b0>
   16078:	mov	w25, #0x1                   	// #1
   1607c:	b	151f0 <mpfr_add1sp@@Base+0x1b0>
   16080:	cbnz	w25, 160dc <mpfr_add1sp@@Base+0x109c>
   16084:	ldr	x2, [x28, #24]
   16088:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1608c:	add	x3, x2, x24, lsl #3
   16090:	ldur	x3, [x3, #-8]
   16094:	cmp	x3, x0
   16098:	b.ne	1604c <mpfr_add1sp@@Base+0x100c>  // b.any
   1609c:	ldr	x0, [x29, #136]
   160a0:	sub	x0, x0, #0x1
   160a4:	ldr	x3, [x2, x0, lsl #3]
   160a8:	sub	x0, x0, #0x1
   160ac:	cmn	x0, #0x1
   160b0:	cbnz	x3, 1604c <mpfr_add1sp@@Base+0x100c>
   160b4:	b.ne	160a4 <mpfr_add1sp@@Base+0x1064>  // b.any
   160b8:	ldr	x0, [x1]
   160bc:	lsr	x0, x0, x23
   160c0:	tbz	w0, #0, 15c6c <mpfr_add1sp@@Base+0xc2c>
   160c4:	b	1604c <mpfr_add1sp@@Base+0x100c>
   160c8:	mov	x0, #0x1                   	// #1
   160cc:	mov	x2, #0x0                   	// #0
   160d0:	lsl	x21, x0, x23
   160d4:	ldr	x0, [x1]
   160d8:	b	157f0 <mpfr_add1sp@@Base+0x7b0>
   160dc:	cmp	w25, #0x1
   160e0:	b.ne	1603c <mpfr_add1sp@@Base+0xffc>  // b.any
   160e4:	b	15c6c <mpfr_add1sp@@Base+0xc2c>

00000000000160e8 <mpfr_set_ui_2exp@@Base>:
   160e8:	stp	x29, x30, [sp, #-96]!
   160ec:	mov	w4, #0x1                   	// #1
   160f0:	mov	x29, sp
   160f4:	stp	x19, x20, [sp, #16]
   160f8:	mov	x19, x0
   160fc:	str	w4, [x0, #8]
   16100:	cbz	x1, 16220 <mpfr_set_ui_2exp@@Base+0x138>
   16104:	ldr	x0, [x0]
   16108:	stp	x21, x22, [sp, #32]
   1610c:	mov	x20, x2
   16110:	add	x21, x0, #0x3e
   16114:	subs	x0, x0, #0x1
   16118:	csel	x21, x21, x0, mi  // mi = first
   1611c:	stp	x23, x24, [sp, #48]
   16120:	clz	x23, x1
   16124:	ldr	x22, [x19, #24]
   16128:	asr	x21, x21, #6
   1612c:	str	x25, [sp, #64]
   16130:	lsl	x4, x1, x23
   16134:	str	wzr, [sp, #92]
   16138:	lsl	x2, x21, #3
   1613c:	str	x4, [x22, x21, lsl #3]
   16140:	add	x24, x22, x2
   16144:	mov	x0, x22
   16148:	mov	w25, w3
   1614c:	mov	w1, #0x0                   	// #0
   16150:	bl	c110 <memset@plt>
   16154:	mov	w2, #0x40                  	// #64
   16158:	sub	w2, w2, w23
   1615c:	ldr	x4, [x19]
   16160:	sxtw	x2, w2
   16164:	add	x20, x2, x20
   16168:	cmp	x2, x4
   1616c:	b.gt	16238 <mpfr_set_ui_2exp@@Base+0x150>
   16170:	mrs	x2, tpidr_el0
   16174:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   16178:	ldr	x1, [x0, #2512]
   1617c:	add	x0, x0, #0x9d0
   16180:	blr	x1
   16184:	str	x20, [x19, #16]
   16188:	ldr	w1, [sp, #92]
   1618c:	ldr	x0, [x2, x0]
   16190:	cmp	x0, x20
   16194:	b.gt	161f4 <mpfr_set_ui_2exp@@Base+0x10c>
   16198:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1619c:	ldr	x3, [x0, #2544]
   161a0:	add	x0, x0, #0x9f0
   161a4:	blr	x3
   161a8:	ldr	x0, [x2, x0]
   161ac:	cmp	x0, x20
   161b0:	b.lt	161f4 <mpfr_set_ui_2exp@@Base+0x10c>  // b.tstop
   161b4:	cbz	w1, 161d8 <mpfr_set_ui_2exp@@Base+0xf0>
   161b8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   161bc:	ldr	x3, [x0, #2576]
   161c0:	add	x0, x0, #0xa10
   161c4:	blr	x3
   161c8:	add	x0, x2, x0
   161cc:	ldr	w2, [x0]
   161d0:	orr	w2, w2, #0x8
   161d4:	str	w2, [x0]
   161d8:	mov	w0, w1
   161dc:	ldp	x19, x20, [sp, #16]
   161e0:	ldp	x21, x22, [sp, #32]
   161e4:	ldp	x23, x24, [sp, #48]
   161e8:	ldr	x25, [sp, #64]
   161ec:	ldp	x29, x30, [sp], #96
   161f0:	ret
   161f4:	mov	w2, w25
   161f8:	mov	x0, x19
   161fc:	bl	cb30 <mpfr_check_range@plt>
   16200:	mov	w1, w0
   16204:	mov	w0, w1
   16208:	ldp	x19, x20, [sp, #16]
   1620c:	ldp	x21, x22, [sp, #32]
   16210:	ldp	x23, x24, [sp, #48]
   16214:	ldr	x25, [sp, #64]
   16218:	ldp	x29, x30, [sp], #96
   1621c:	ret
   16220:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   16224:	str	x0, [x19, #16]
   16228:	mov	w0, w1
   1622c:	ldp	x19, x20, [sp, #16]
   16230:	ldp	x29, x30, [sp], #96
   16234:	ret
   16238:	add	x6, sp, #0x5c
   1623c:	mov	w5, w25
   16240:	mov	x1, x24
   16244:	mov	x0, x24
   16248:	mov	w3, #0x0                   	// #0
   1624c:	bl	ca20 <mpfr_round_raw@plt>
   16250:	cbz	w0, 16170 <mpfr_set_ui_2exp@@Base+0x88>
   16254:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   16258:	add	x20, x20, #0x1
   1625c:	str	x0, [x22, x21, lsl #3]
   16260:	b	16170 <mpfr_set_ui_2exp@@Base+0x88>
   16264:	nop

0000000000016268 <mpfr_mpz_init@@Base>:
   16268:	mrs	x1, tpidr_el0
   1626c:	stp	x29, x30, [sp, #-16]!
   16270:	mov	x3, x0
   16274:	mov	x29, sp
   16278:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1627c:	ldr	x2, [x0, #2496]
   16280:	add	x0, x0, #0x9c0
   16284:	blr	x2
   16288:	add	x2, x1, x0
   1628c:	ldr	w1, [x1, x0]
   16290:	cmp	w1, #0x0
   16294:	b.le	162b8 <mpfr_mpz_init@@Base+0x50>
   16298:	sub	w1, w1, #0x1
   1629c:	str	w1, [x2], #8
   162a0:	add	x1, x2, w1, sxtw #4
   162a4:	ldp	x0, x1, [x1]
   162a8:	stp	x0, x1, [x3]
   162ac:	str	wzr, [x3, #4]
   162b0:	ldp	x29, x30, [sp], #16
   162b4:	ret
   162b8:	ldp	x29, x30, [sp], #16
   162bc:	mov	x0, x3
   162c0:	b	cb50 <__gmpz_init@plt>
   162c4:	nop

00000000000162c8 <mpfr_mpz_init2@@Base>:
   162c8:	mrs	x2, tpidr_el0
   162cc:	stp	x29, x30, [sp, #-16]!
   162d0:	mov	x4, x0
   162d4:	mov	x29, sp
   162d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   162dc:	ldr	x3, [x0, #2496]
   162e0:	add	x0, x0, #0x9c0
   162e4:	blr	x3
   162e8:	ldr	w3, [x2, x0]
   162ec:	cmp	x1, #0x800
   162f0:	add	x2, x2, x0
   162f4:	ccmp	w3, #0x0, #0x4, ls  // ls = plast
   162f8:	b.le	16320 <mpfr_mpz_init2@@Base+0x58>
   162fc:	mov	x1, x2
   16300:	sub	w3, w3, #0x1
   16304:	str	w3, [x1], #8
   16308:	add	x3, x1, w3, sxtw #4
   1630c:	ldp	x0, x1, [x3]
   16310:	stp	x0, x1, [x4]
   16314:	str	wzr, [x4, #4]
   16318:	ldp	x29, x30, [sp], #16
   1631c:	ret
   16320:	ldp	x29, x30, [sp], #16
   16324:	mov	x0, x4
   16328:	b	ca90 <__gmpz_init2@plt>
   1632c:	nop

0000000000016330 <mpfr_mpz_clear@@Base>:
   16330:	mrs	x2, tpidr_el0
   16334:	stp	x29, x30, [sp, #-16]!
   16338:	mov	x3, x0
   1633c:	mov	x29, sp
   16340:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   16344:	ldr	x1, [x0, #2496]
   16348:	add	x0, x0, #0x9c0
   1634c:	blr	x1
   16350:	add	x1, x2, x0
   16354:	ldr	w2, [x2, x0]
   16358:	sxtw	x0, w2
   1635c:	cmp	x0, #0x1f
   16360:	b.hi	1638c <mpfr_mpz_clear@@Base+0x5c>  // b.pmore
   16364:	ldr	w4, [x3]
   16368:	cmp	w4, #0x20
   1636c:	b.gt	1638c <mpfr_mpz_clear@@Base+0x5c>
   16370:	add	w2, w2, #0x1
   16374:	str	w2, [x1], #8
   16378:	ldp	x4, x5, [x3]
   1637c:	add	x1, x1, x0, lsl #4
   16380:	stp	x4, x5, [x1]
   16384:	ldp	x29, x30, [sp], #16
   16388:	ret
   1638c:	ldp	x29, x30, [sp], #16
   16390:	mov	x0, x3
   16394:	b	c640 <__gmpz_clear@plt>
   16398:	adrp	x0, 7f000 <__gmpfr_l2b@@Base+0x200>
   1639c:	ldr	x0, [x0, #4024]
   163a0:	cbz	x0, 163a8 <mpfr_mpz_clear@@Base+0x78>
   163a4:	b	c390 <__gmon_start__@plt>
   163a8:	ret
   163ac:	nop
   163b0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   163b4:	add	x0, x0, #0xa68
   163b8:	adrp	x1, 80000 <mpfr_agm@@Base+0x69750>
   163bc:	add	x1, x1, #0xa68
   163c0:	cmp	x1, x0
   163c4:	b.eq	163dc <mpfr_mpz_clear@@Base+0xac>  // b.none
   163c8:	adrp	x1, 7f000 <__gmpfr_l2b@@Base+0x200>
   163cc:	ldr	x1, [x1, #3936]
   163d0:	cbz	x1, 163dc <mpfr_mpz_clear@@Base+0xac>
   163d4:	mov	x16, x1
   163d8:	br	x16
   163dc:	ret
   163e0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   163e4:	add	x0, x0, #0xa68
   163e8:	adrp	x1, 80000 <mpfr_agm@@Base+0x69750>
   163ec:	add	x1, x1, #0xa68
   163f0:	sub	x1, x1, x0
   163f4:	lsr	x2, x1, #63
   163f8:	add	x1, x2, x1, asr #3
   163fc:	cmp	xzr, x1, asr #1
   16400:	asr	x1, x1, #1
   16404:	b.eq	1641c <mpfr_mpz_clear@@Base+0xec>  // b.none
   16408:	adrp	x2, 7f000 <__gmpfr_l2b@@Base+0x200>
   1640c:	ldr	x2, [x2, #4056]
   16410:	cbz	x2, 1641c <mpfr_mpz_clear@@Base+0xec>
   16414:	mov	x16, x2
   16418:	br	x16
   1641c:	ret
   16420:	stp	x29, x30, [sp, #-32]!
   16424:	mov	x29, sp
   16428:	str	x19, [sp, #16]
   1642c:	adrp	x19, 80000 <mpfr_agm@@Base+0x69750>
   16430:	ldrb	w0, [x19, #2664]
   16434:	cbnz	w0, 1645c <mpfr_mpz_clear@@Base+0x12c>
   16438:	adrp	x0, 7f000 <__gmpfr_l2b@@Base+0x200>
   1643c:	ldr	x0, [x0, #3952]
   16440:	cbz	x0, 16450 <mpfr_mpz_clear@@Base+0x120>
   16444:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   16448:	ldr	x0, [x0, #2656]
   1644c:	bl	bd00 <__cxa_finalize@plt>
   16450:	bl	163b0 <mpfr_mpz_clear@@Base+0x80>
   16454:	mov	w0, #0x1                   	// #1
   16458:	strb	w0, [x19, #2664]
   1645c:	ldr	x19, [sp, #16]
   16460:	ldp	x29, x30, [sp], #32
   16464:	ret
   16468:	b	163e0 <mpfr_mpz_clear@@Base+0xb0>
   1646c:	nop

0000000000016470 <mpfr_set_emin@@Base>:
   16470:	mov	x1, x0
   16474:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   16478:	add	x2, x1, x2
   1647c:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   16480:	cmp	x2, x0
   16484:	b.hi	164b8 <mpfr_set_emin@@Base+0x48>  // b.pmore
   16488:	stp	x29, x30, [sp, #-16]!
   1648c:	mrs	x2, tpidr_el0
   16490:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   16494:	ldr	x3, [x0, #2512]
   16498:	add	x0, x0, #0x9d0
   1649c:	blr	x3
   164a0:	mov	x29, sp
   164a4:	str	x1, [x2, x0]
   164a8:	mov	w3, #0x0                   	// #0
   164ac:	mov	w0, w3
   164b0:	ldp	x29, x30, [sp], #16
   164b4:	ret
   164b8:	mov	w3, #0x1                   	// #1
   164bc:	mov	w0, w3
   164c0:	ret
   164c4:	nop

00000000000164c8 <mpfr_set_emax@@Base>:
   164c8:	mov	x1, x0
   164cc:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   164d0:	add	x2, x1, x2
   164d4:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   164d8:	cmp	x2, x0
   164dc:	b.hi	16510 <mpfr_set_emax@@Base+0x48>  // b.pmore
   164e0:	stp	x29, x30, [sp, #-16]!
   164e4:	mrs	x2, tpidr_el0
   164e8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   164ec:	ldr	x3, [x0, #2544]
   164f0:	add	x0, x0, #0x9f0
   164f4:	blr	x3
   164f8:	mov	x29, sp
   164fc:	str	x1, [x2, x0]
   16500:	mov	w3, #0x0                   	// #0
   16504:	mov	w0, w3
   16508:	ldp	x29, x30, [sp], #16
   1650c:	ret
   16510:	mov	w3, #0x1                   	// #1
   16514:	mov	w0, w3
   16518:	ret
   1651c:	nop

0000000000016520 <mpfr_clear_flags@@Base>:
   16520:	stp	x29, x30, [sp, #-16]!
   16524:	mrs	x1, tpidr_el0
   16528:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1652c:	ldr	x2, [x0, #2576]
   16530:	add	x0, x0, #0xa10
   16534:	blr	x2
   16538:	mov	x29, sp
   1653c:	str	wzr, [x1, x0]
   16540:	ldp	x29, x30, [sp], #16
   16544:	ret

0000000000016548 <mpfr_check_range@@Base>:
   16548:	stp	x29, x30, [sp, #-32]!
   1654c:	mov	x29, sp
   16550:	ldr	x3, [x0, #16]
   16554:	stp	x19, x20, [sp, #16]
   16558:	mov	w19, w1
   1655c:	mov	w1, w2
   16560:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   16564:	cmp	x3, x2
   16568:	b.le	165ec <mpfr_check_range@@Base+0xa4>
   1656c:	mrs	x4, tpidr_el0
   16570:	mov	x20, x0
   16574:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   16578:	ldr	x2, [x0, #2512]
   1657c:	add	x0, x0, #0x9d0
   16580:	blr	x2
   16584:	ldr	x0, [x4, x0]
   16588:	cmp	x3, x0
   1658c:	b.lt	16618 <mpfr_check_range@@Base+0xd0>  // b.tstop
   16590:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   16594:	ldr	x2, [x0, #2544]
   16598:	add	x0, x0, #0x9f0
   1659c:	blr	x2
   165a0:	ldr	x0, [x4, x0]
   165a4:	cmp	x3, x0
   165a8:	b.gt	1665c <mpfr_check_range@@Base+0x114>
   165ac:	cbz	w19, 165dc <mpfr_check_range@@Base+0x94>
   165b0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   165b4:	ldr	x1, [x0, #2576]
   165b8:	add	x0, x0, #0xa10
   165bc:	blr	x1
   165c0:	ldr	w0, [x4, x0]
   165c4:	orr	w1, w0, #0x8
   165c8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   165cc:	ldr	x2, [x0, #2576]
   165d0:	add	x0, x0, #0xa10
   165d4:	blr	x2
   165d8:	str	w1, [x4, x0]
   165dc:	mov	w0, w19
   165e0:	ldp	x19, x20, [sp, #16]
   165e4:	ldp	x29, x30, [sp], #32
   165e8:	ret
   165ec:	cbz	w19, 165dc <mpfr_check_range@@Base+0x94>
   165f0:	mrs	x4, tpidr_el0
   165f4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   165f8:	ldr	x1, [x0, #2576]
   165fc:	add	x0, x0, #0xa10
   16600:	blr	x1
   16604:	cmp	x3, x2
   16608:	ldr	w0, [x4, x0]
   1660c:	orr	w1, w0, #0x2
   16610:	csel	w0, w1, w0, eq  // eq = none
   16614:	b	165c4 <mpfr_check_range@@Base+0x7c>
   16618:	cbnz	w1, 16648 <mpfr_check_range@@Base+0x100>
   1661c:	add	x3, x3, #0x1
   16620:	cmp	x0, x3
   16624:	b.gt	16670 <mpfr_check_range@@Base+0x128>
   16628:	mov	x0, x20
   1662c:	bl	bf00 <mpfr_powerof2_raw@plt>
   16630:	mov	w1, w0
   16634:	cbz	w0, 16648 <mpfr_check_range@@Base+0x100>
   16638:	ldr	w0, [x20, #8]
   1663c:	tbz	w0, #31, 16678 <mpfr_check_range@@Base+0x130>
   16640:	cmp	w19, #0x0
   16644:	cset	w1, le
   16648:	ldr	w2, [x20, #8]
   1664c:	mov	x0, x20
   16650:	ldp	x19, x20, [sp, #16]
   16654:	ldp	x29, x30, [sp], #32
   16658:	b	c3c0 <mpfr_underflow@plt>
   1665c:	ldr	w2, [x20, #8]
   16660:	mov	x0, x20
   16664:	ldp	x19, x20, [sp, #16]
   16668:	ldp	x29, x30, [sp], #32
   1666c:	b	bf40 <mpfr_overflow@plt>
   16670:	mov	w1, #0x1                   	// #1
   16674:	b	16648 <mpfr_check_range@@Base+0x100>
   16678:	mvn	w19, w19
   1667c:	lsr	w1, w19, #31
   16680:	b	16648 <mpfr_check_range@@Base+0x100>
   16684:	nop

0000000000016688 <mpfr_extract@@Base>:
   16688:	stp	x29, x30, [sp, #-64]!
   1668c:	mov	x29, sp
   16690:	stp	x19, x20, [sp, #16]
   16694:	mov	x19, #0x1                   	// #1
   16698:	ldr	x20, [x1]
   1669c:	stp	x21, x22, [sp, #32]
   166a0:	mov	x22, x0
   166a4:	sub	x20, x20, #0x1
   166a8:	str	x23, [sp, #48]
   166ac:	lsl	x21, x19, x2
   166b0:	mov	x23, x1
   166b4:	asr	x20, x20, #6
   166b8:	add	x20, x20, x19
   166bc:	cbz	w2, 16744 <mpfr_extract@@Base+0xbc>
   166c0:	cmp	x21, #0x0
   166c4:	lsr	x19, x21, #1
   166c8:	mov	x0, #0x7fffffff            	// #2147483647
   166cc:	ccmp	x19, x0, #0x2, ne  // ne = any
   166d0:	b.hi	167a0 <mpfr_extract@@Base+0x118>  // b.pmore
   166d4:	lsl	x1, x19, #6
   166d8:	mov	x0, x22
   166dc:	bl	c440 <__gmpz_realloc2@plt>
   166e0:	cmp	x20, x21
   166e4:	b.cs	1674c <mpfr_extract@@Base+0xc4>  // b.hs, b.nlast
   166e8:	ldr	x0, [x22, #8]
   166ec:	lsl	x2, x19, #3
   166f0:	mov	w1, #0x0                   	// #0
   166f4:	bl	c110 <memset@plt>
   166f8:	cmp	x20, x19
   166fc:	b.cs	16778 <mpfr_extract@@Base+0xf0>  // b.hs, b.nlast
   16700:	cbz	x19, 16720 <mpfr_extract@@Base+0x98>
   16704:	ldr	x3, [x22, #8]
   16708:	sub	x3, x3, #0x8
   1670c:	b	16718 <mpfr_extract@@Base+0x90>
   16710:	subs	x19, x19, #0x1
   16714:	b.eq	16770 <mpfr_extract@@Base+0xe8>  // b.none
   16718:	ldr	x2, [x3, x19, lsl #3]
   1671c:	cbz	x2, 16710 <mpfr_extract@@Base+0x88>
   16720:	ldr	w0, [x23, #8]
   16724:	ldr	x23, [sp, #48]
   16728:	cmp	w0, #0x0
   1672c:	cneg	w19, w19, lt  // lt = tstop
   16730:	str	w19, [x22, #4]
   16734:	ldp	x19, x20, [sp, #16]
   16738:	ldp	x21, x22, [sp, #32]
   1673c:	ldp	x29, x30, [sp], #64
   16740:	ret
   16744:	mov	x1, #0x40                  	// #64
   16748:	bl	c440 <__gmpz_realloc2@plt>
   1674c:	ldr	x1, [x23, #24]
   16750:	sub	x20, x20, x21
   16754:	ldr	x0, [x22, #8]
   16758:	add	x1, x1, x20, lsl #3
   1675c:	cmp	x0, x1
   16760:	b.eq	16700 <mpfr_extract@@Base+0x78>  // b.none
   16764:	lsl	x2, x19, #3
   16768:	bl	ba10 <memcpy@plt>
   1676c:	b	16700 <mpfr_extract@@Base+0x78>
   16770:	mov	w19, #0x0                   	// #0
   16774:	b	16720 <mpfr_extract@@Base+0x98>
   16778:	ldr	x0, [x22, #8]
   1677c:	sub	x21, x21, x20
   16780:	ldr	x1, [x23, #24]
   16784:	add	x0, x0, x21, lsl #3
   16788:	cmp	x0, x1
   1678c:	b.eq	16700 <mpfr_extract@@Base+0x78>  // b.none
   16790:	sub	x2, x20, x19
   16794:	lsl	x2, x2, #3
   16798:	bl	ba10 <memcpy@plt>
   1679c:	b	16700 <mpfr_extract@@Base+0x78>
   167a0:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   167a4:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   167a8:	add	x2, x2, #0xa50
   167ac:	add	x0, x0, #0xa78
   167b0:	mov	w1, #0x28                  	// #40
   167b4:	bl	cb40 <mpfr_assert_fail@plt>
   167b8:	b	166d4 <mpfr_extract@@Base+0x4c>
   167bc:	nop

00000000000167c0 <__gmpfr_ceil_exp2@@Base>:
   167c0:	mov	x0, #0x4090000000000000    	// #4652218415073722368
   167c4:	fmov	d1, x0
   167c8:	fcmpe	d0, d1
   167cc:	b.hi	167fc <__gmpfr_ceil_exp2@@Base+0x3c>  // b.pmore
   167d0:	fcvtzs	x0, d0
   167d4:	mov	x1, #0xfffffffffffffc02    	// #-1022
   167d8:	scvtf	d1, x0
   167dc:	fcmp	d1, d0
   167e0:	cinc	x0, x0, ne  // ne = any
   167e4:	cmp	x0, x1
   167e8:	csel	x0, x0, x1, ge  // ge = tcont
   167ec:	add	w0, w0, #0x3ff
   167f0:	ubfiz	x0, x0, #52, #11
   167f4:	fmov	d0, x0
   167f8:	ret
   167fc:	stp	x29, x30, [sp, #-16]!
   16800:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   16804:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   16808:	mov	x29, sp
   1680c:	add	x2, x2, #0xa88
   16810:	add	x0, x0, #0xa98
   16814:	mov	w1, #0x26                  	// #38
   16818:	bl	cb40 <mpfr_assert_fail@plt>
   1681c:	nop

0000000000016820 <__gmpfr_ceil_log2@@Base>:
   16820:	fmov	x1, d0
   16824:	ubfx	x2, x1, #52, #11
   16828:	sub	x0, x2, #0x3ff
   1682c:	cmp	x0, #0x3fe
   16830:	b.gt	16854 <__gmpfr_ceil_log2@@Base+0x34>
   16834:	mov	x3, #0x3ff                 	// #1023
   16838:	fmov	d0, #1.000000000000000000e+00
   1683c:	bfi	x1, x3, #52, #11
   16840:	fmov	d1, x1
   16844:	sub	x2, x2, #0x3fe
   16848:	fcmp	d0, d1
   1684c:	csel	x0, x2, x0, ne  // ne = any
   16850:	ret
   16854:	stp	x29, x30, [sp, #-16]!
   16858:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   1685c:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   16860:	mov	x29, sp
   16864:	add	x2, x2, #0xaa8
   16868:	add	x0, x0, #0xab8
   1686c:	mov	w1, #0x28                  	// #40
   16870:	bl	cb40 <mpfr_assert_fail@plt>
   16874:	nop

0000000000016878 <__gmpfr_floor_log2@@Base>:
   16878:	fmov	x0, d0
   1687c:	ubfx	x0, x0, #52, #11
   16880:	sub	x0, x0, #0x3ff
   16884:	cmp	x0, #0x3fe
   16888:	b.gt	16890 <__gmpfr_floor_log2@@Base+0x18>
   1688c:	ret
   16890:	stp	x29, x30, [sp, #-16]!
   16894:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   16898:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   1689c:	mov	x29, sp
   168a0:	add	x2, x2, #0xaa8
   168a4:	add	x0, x0, #0xac8
   168a8:	mov	w1, #0x25                  	// #37
   168ac:	bl	cb40 <mpfr_assert_fail@plt>

00000000000168b0 <mpfr_agm@@Base>:
   168b0:	stp	x29, x30, [sp, #-432]!
   168b4:	mov	x29, sp
   168b8:	stp	x21, x22, [sp, #32]
   168bc:	mov	x22, x1
   168c0:	mov	x21, x2
   168c4:	ldr	x1, [x2, #16]
   168c8:	stp	x19, x20, [sp, #16]
   168cc:	stp	x23, x24, [sp, #48]
   168d0:	stp	x25, x26, [sp, #64]
   168d4:	stp	x27, x28, [sp, #80]
   168d8:	mov	x28, x0
   168dc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   168e0:	str	w3, [x29, #188]
   168e4:	cmp	x1, x0
   168e8:	b.le	16e10 <mpfr_agm@@Base+0x560>
   168ec:	ldr	x2, [x22, #16]
   168f0:	cmp	x2, x0
   168f4:	b.le	16e24 <mpfr_agm@@Base+0x574>
   168f8:	ldr	w0, [x21, #8]
   168fc:	tbnz	w0, #31, 16e60 <mpfr_agm@@Base+0x5b0>
   16900:	ldr	w0, [x22, #8]
   16904:	tbnz	w0, #31, 16e60 <mpfr_agm@@Base+0x5b0>
   16908:	ldr	x0, [x28]
   1690c:	str	x0, [x29, #160]
   16910:	cmp	x0, #0x1
   16914:	b.eq	1709c <mpfr_agm@@Base+0x7ec>  // b.none
   16918:	b.le	17278 <mpfr_agm@@Base+0x9c8>
   1691c:	ldr	x1, [x29, #160]
   16920:	mov	w19, #0x40                  	// #64
   16924:	sub	x0, x1, #0x1
   16928:	clz	x0, x0
   1692c:	sub	w19, w19, w0
   16930:	add	x19, x1, w19, sxtw
   16934:	add	x24, x19, #0xe
   16938:	mov	x1, x22
   1693c:	mov	x0, x21
   16940:	mov	w2, #0x1                   	// #1
   16944:	asr	x24, x24, #6
   16948:	bl	c9a0 <mpfr_cmp3@plt>
   1694c:	add	x19, x19, #0xf
   16950:	add	x24, x24, #0x1
   16954:	cmp	w0, #0x0
   16958:	cbz	w0, 17080 <mpfr_agm@@Base+0x7d0>
   1695c:	mrs	x20, tpidr_el0
   16960:	csel	x1, x21, x22, le
   16964:	csel	x22, x22, x21, le
   16968:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1696c:	ldr	x2, [x0, #2576]
   16970:	add	x0, x0, #0xa10
   16974:	blr	x2
   16978:	mov	x21, x1
   1697c:	mov	x4, #0x40                  	// #64
   16980:	ldr	w0, [x20, x0]
   16984:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   16988:	str	w0, [x29, #184]
   1698c:	add	x25, x29, #0xd0
   16990:	add	x23, x29, #0xf0
   16994:	str	x4, [x29, #120]
   16998:	str	x28, [x29, #96]
   1699c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   169a0:	ldr	x1, [x0, #2512]
   169a4:	add	x0, x0, #0x9d0
   169a8:	blr	x1
   169ac:	add	x2, x20, x0
   169b0:	ldr	x0, [x20, x0]
   169b4:	add	x1, x29, #0x110
   169b8:	str	x3, [x2]
   169bc:	str	x0, [x29, #112]
   169c0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   169c4:	ldr	x4, [x0, #2544]
   169c8:	add	x0, x0, #0x9f0
   169cc:	blr	x4
   169d0:	str	xzr, [x29, #152]
   169d4:	ldr	x2, [x20, x0]
   169d8:	str	x2, [x29, #104]
   169dc:	str	x1, [x29, #168]
   169e0:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   169e4:	str	x1, [x20, x0]
   169e8:	str	xzr, [x29, #192]
   169ec:	lsl	x24, x24, #3
   169f0:	cmp	x24, #0x4, lsl #12
   169f4:	b.hi	16fe4 <mpfr_agm@@Base+0x734>  // b.pmore
   169f8:	add	x1, x24, #0xf
   169fc:	mov	w2, #0x1                   	// #1
   16a00:	and	x1, x1, #0xfffffffffffffff0
   16a04:	str	x19, [x29, #208]
   16a08:	sub	sp, sp, x1
   16a0c:	str	w2, [x29, #216]
   16a10:	mov	x0, sp
   16a14:	sub	sp, sp, x1
   16a18:	stp	x0, x19, [x29, #232]
   16a1c:	mov	x0, sp
   16a20:	sub	sp, sp, x1
   16a24:	str	x0, [x29, #264]
   16a28:	mov	x0, sp
   16a2c:	sub	sp, sp, x1
   16a30:	str	x0, [x29, #296]
   16a34:	mov	x0, sp
   16a38:	str	w2, [x29, #248]
   16a3c:	str	x19, [x29, #272]
   16a40:	str	w2, [x29, #280]
   16a44:	adrp	x26, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   16a48:	adrp	x24, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   16a4c:	add	x26, x26, #0xbb8
   16a50:	add	x24, x24, #0xb00
   16a54:	mov	w1, #0x1                   	// #1
   16a58:	str	x19, [x29, #304]
   16a5c:	str	w1, [x29, #312]
   16a60:	str	x0, [x29, #328]
   16a64:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   16a68:	ldr	x1, [x0, #2576]
   16a6c:	add	x0, x0, #0xa10
   16a70:	blr	x1
   16a74:	add	x27, x20, x0
   16a78:	mov	x2, x22
   16a7c:	mov	x1, x21
   16a80:	mov	w3, #0x0                   	// #0
   16a84:	str	wzr, [x20, x0]
   16a88:	mov	x0, x25
   16a8c:	bl	bd50 <mpfr_mul@plt>
   16a90:	mov	x2, x22
   16a94:	mov	x1, x21
   16a98:	mov	x0, x23
   16a9c:	mov	w3, #0x0                   	// #0
   16aa0:	bl	c1a0 <mpfr_add@plt>
   16aa4:	ldr	w0, [x27]
   16aa8:	tbnz	w0, #1, 16ee0 <mpfr_agm@@Base+0x630>
   16aac:	tbnz	w0, #0, 16f00 <mpfr_agm@@Base+0x650>
   16ab0:	mov	x1, x25
   16ab4:	mov	w2, #0x0                   	// #0
   16ab8:	mov	x0, x25
   16abc:	str	wzr, [x27]
   16ac0:	bl	c930 <mpfr_sqrt@plt>
   16ac4:	mov	x24, #0x1                   	// #1
   16ac8:	mov	x1, x23
   16acc:	mov	x2, x24
   16ad0:	mov	x0, x23
   16ad4:	mov	w3, #0x0                   	// #0
   16ad8:	bl	c8f0 <mpfr_div_2ui@plt>
   16adc:	add	x26, x29, #0x190
   16ae0:	add	x0, x19, x24
   16ae4:	add	x27, x29, #0xc8
   16ae8:	sub	x1, x19, #0x1
   16aec:	str	x21, [x29, #144]
   16af0:	add	x0, x0, x0, lsr #63
   16af4:	str	x1, [x29, #176]
   16af8:	asr	x0, x0, #1
   16afc:	stp	xzr, x0, [x29, #128]
   16b00:	mov	x2, x27
   16b04:	mov	x1, x23
   16b08:	mov	x0, x25
   16b0c:	bl	bdb0 <mpfr_cmp2@plt>
   16b10:	cbz	w0, 16ed4 <mpfr_agm@@Base+0x624>
   16b14:	ldr	x1, [x29, #176]
   16b18:	ldr	x0, [x29, #200]
   16b1c:	cmp	x1, x0
   16b20:	b.le	16ed4 <mpfr_agm@@Base+0x624>
   16b24:	add	x28, x29, #0x130
   16b28:	mov	x2, x23
   16b2c:	mov	x1, x25
   16b30:	mov	w3, #0x0                   	// #0
   16b34:	mov	x0, x28
   16b38:	bl	c1a0 <mpfr_add@plt>
   16b3c:	mov	x1, x28
   16b40:	mov	x0, x28
   16b44:	mov	w3, #0x0                   	// #0
   16b48:	mov	x2, #0x1                   	// #1
   16b4c:	bl	c8f0 <mpfr_div_2ui@plt>
   16b50:	ldr	x0, [x29, #200]
   16b54:	cmp	x19, x0, lsl #2
   16b58:	b.ge	16db8 <mpfr_agm@@Base+0x508>  // b.tcont
   16b5c:	ldr	x1, [x29, #136]
   16b60:	mov	x0, x26
   16b64:	bl	ca80 <mpfr_init2@plt>
   16b68:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   16b6c:	ldr	x1, [x0, #2576]
   16b70:	add	x0, x0, #0xa10
   16b74:	blr	x1
   16b78:	mov	w3, #0x0                   	// #0
   16b7c:	mov	x2, x25
   16b80:	mov	x1, x23
   16b84:	add	x21, x20, x0
   16b88:	str	wzr, [x20, x0]
   16b8c:	mov	x0, x26
   16b90:	bl	bb70 <mpfr_sub@plt>
   16b94:	mov	x1, x26
   16b98:	mov	w2, #0x0                   	// #0
   16b9c:	mov	x0, x26
   16ba0:	bl	c400 <mpfr_sqr@plt>
   16ba4:	mov	x1, x26
   16ba8:	mov	w3, #0x0                   	// #0
   16bac:	mov	x2, #0x4                   	// #4
   16bb0:	mov	x0, x26
   16bb4:	bl	c8f0 <mpfr_div_2ui@plt>
   16bb8:	mov	x2, x28
   16bbc:	mov	x1, x26
   16bc0:	mov	x0, x26
   16bc4:	mov	w3, #0x0                   	// #0
   16bc8:	bl	c620 <mpfr_div@plt>
   16bcc:	ldr	w0, [x21]
   16bd0:	tbnz	w0, #0, 16dac <mpfr_agm@@Base+0x4fc>
   16bd4:	mov	x2, x26
   16bd8:	mov	x1, x28
   16bdc:	mov	x0, x23
   16be0:	mov	w3, #0x0                   	// #0
   16be4:	ldr	x21, [x29, #144]
   16be8:	bl	bb70 <mpfr_sub@plt>
   16bec:	ldr	x2, [x29, #256]
   16bf0:	mov	x0, x26
   16bf4:	ldr	x26, [x29, #320]
   16bf8:	sub	x26, x26, x2
   16bfc:	bl	c070 <mpfr_clear@plt>
   16c00:	add	x0, x24, x24, lsl #3
   16c04:	lsl	x0, x0, #1
   16c08:	cmn	x0, #0x32
   16c0c:	b.eq	16fd4 <mpfr_agm@@Base+0x724>  // b.none
   16c10:	add	x1, x0, #0x33
   16c14:	cmp	x1, #0x1
   16c18:	b.ls	17050 <mpfr_agm@@Base+0x7a0>  // b.plast
   16c1c:	add	x0, x0, #0x32
   16c20:	mov	w4, #0x40                  	// #64
   16c24:	clz	x0, x0
   16c28:	sub	w0, w4, w0
   16c2c:	sxtw	x4, w0
   16c30:	cmn	x24, #0x1
   16c34:	b.eq	16fdc <mpfr_agm@@Base+0x72c>  // b.none
   16c38:	cmn	x24, #0x2
   16c3c:	b.cs	17068 <mpfr_agm@@Base+0x7b8>  // b.hs, b.nlast
   16c40:	add	x24, x24, #0x1
   16c44:	mov	w0, #0x40                  	// #64
   16c48:	clz	x24, x24
   16c4c:	sub	w24, w0, w24
   16c50:	sxtw	x24, w24
   16c54:	cmp	x19, #0x0
   16c58:	add	x0, x19, #0x3
   16c5c:	csel	x0, x0, x19, lt  // lt = tstop
   16c60:	cmp	x24, x0, asr #2
   16c64:	b.gt	16e98 <mpfr_agm@@Base+0x5e8>
   16c68:	ldr	x1, [x29, #256]
   16c6c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   16c70:	cmp	x1, x0
   16c74:	b.le	16e98 <mpfr_agm@@Base+0x5e8>
   16c78:	ldr	w0, [x29, #188]
   16c7c:	sub	x2, x19, x26
   16c80:	ldr	x1, [x29, #240]
   16c84:	cmp	w0, #0x0
   16c88:	ldr	x0, [x29, #264]
   16c8c:	sub	x1, x1, #0x1
   16c90:	ldr	x3, [x29, #160]
   16c94:	asr	x1, x1, #6
   16c98:	sub	x2, x2, x4
   16c9c:	add	x1, x1, #0x1
   16ca0:	cinc	x3, x3, eq  // eq = none
   16ca4:	bl	c370 <mpfr_round_p@plt>
   16ca8:	cbz	w0, 16e98 <mpfr_agm@@Base+0x5e8>
   16cac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   16cb0:	ldr	x1, [x0, #2576]
   16cb4:	add	x0, x0, #0xa10
   16cb8:	blr	x1
   16cbc:	ldr	w1, [x20, x0]
   16cc0:	add	x19, x20, x0
   16cc4:	mov	w0, #0x37                  	// #55
   16cc8:	tst	w1, w0
   16ccc:	ldr	x28, [x29, #96]
   16cd0:	b.ne	170a4 <mpfr_agm@@Base+0x7f4>  // b.any
   16cd4:	ldr	w2, [x29, #188]
   16cd8:	mov	x1, x23
   16cdc:	ldr	w3, [x29, #248]
   16ce0:	mov	x0, x28
   16ce4:	bl	c6a0 <mpfr_set4@plt>
   16ce8:	ldr	x3, [x29, #128]
   16cec:	ldr	x1, [x29, #152]
   16cf0:	ldr	x2, [x28, #16]
   16cf4:	add	x1, x1, x3
   16cf8:	ldr	x3, [x29, #192]
   16cfc:	sub	x2, x2, x1
   16d00:	str	x2, [x28, #16]
   16d04:	mov	w1, w0
   16d08:	cbnz	x3, 170d0 <mpfr_agm@@Base+0x820>
   16d0c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   16d10:	ldr	x3, [x0, #2576]
   16d14:	add	x0, x0, #0xa10
   16d18:	blr	x3
   16d1c:	ldr	w3, [x29, #184]
   16d20:	str	w3, [x20, x0]
   16d24:	add	x3, x20, x0
   16d28:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   16d2c:	ldr	x4, [x0, #2512]
   16d30:	add	x0, x0, #0x9d0
   16d34:	blr	x4
   16d38:	ldr	x4, [x29, #112]
   16d3c:	str	x4, [x20, x0]
   16d40:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   16d44:	ldr	x5, [x0, #2544]
   16d48:	add	x0, x0, #0x9f0
   16d4c:	blr	x5
   16d50:	ldr	x5, [x29, #104]
   16d54:	str	x5, [x20, x0]
   16d58:	cmp	x4, x2
   16d5c:	ccmp	x5, x2, #0x1, le
   16d60:	b.ge	16d98 <mpfr_agm@@Base+0x4e8>  // b.tcont
   16d64:	ldr	w2, [x29, #188]
   16d68:	mov	x0, x28
   16d6c:	bl	cb30 <mpfr_check_range@plt>
   16d70:	mov	w1, w0
   16d74:	mov	sp, x29
   16d78:	mov	w0, w1
   16d7c:	ldp	x19, x20, [sp, #16]
   16d80:	ldp	x21, x22, [sp, #32]
   16d84:	ldp	x23, x24, [sp, #48]
   16d88:	ldp	x25, x26, [sp, #64]
   16d8c:	ldp	x27, x28, [sp, #80]
   16d90:	ldp	x29, x30, [sp], #432
   16d94:	ret
   16d98:	cbz	w1, 16d74 <mpfr_agm@@Base+0x4c4>
   16d9c:	ldr	w0, [x29, #184]
   16da0:	orr	w0, w0, #0x8
   16da4:	str	w0, [x3]
   16da8:	b	16d74 <mpfr_agm@@Base+0x4c4>
   16dac:	mov	x0, x26
   16db0:	bl	c070 <mpfr_clear@plt>
   16db4:	nop
   16db8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   16dbc:	ldr	x1, [x0, #2576]
   16dc0:	add	x0, x0, #0xa10
   16dc4:	blr	x1
   16dc8:	add	x21, x20, x0
   16dcc:	str	wzr, [x20, x0]
   16dd0:	mov	x2, x23
   16dd4:	ldr	x0, [x29, #168]
   16dd8:	mov	x1, x25
   16ddc:	mov	w3, #0x0                   	// #0
   16de0:	bl	bd50 <mpfr_mul@plt>
   16de4:	ldr	w0, [x21]
   16de8:	tbnz	w0, #1, 16f88 <mpfr_agm@@Base+0x6d8>
   16dec:	ldr	x1, [x29, #168]
   16df0:	mov	w2, #0x0                   	// #0
   16df4:	mov	x0, x25
   16df8:	add	x24, x24, #0x1
   16dfc:	bl	c930 <mpfr_sqrt@plt>
   16e00:	mov	x1, x28
   16e04:	mov	x0, x23
   16e08:	bl	c4a0 <mpfr_swap@plt>
   16e0c:	b	16b00 <mpfr_agm@@Base+0x250>
   16e10:	mov	x0, #0x2                   	// #2
   16e14:	movk	x0, #0x8000, lsl #48
   16e18:	cmp	x1, x0
   16e1c:	b.eq	16e60 <mpfr_agm@@Base+0x5b0>  // b.none
   16e20:	ldr	x2, [x22, #16]
   16e24:	mov	x0, #0x2                   	// #2
   16e28:	movk	x0, #0x8000, lsl #48
   16e2c:	cmp	x2, x0
   16e30:	b.eq	16e60 <mpfr_agm@@Base+0x5b0>  // b.none
   16e34:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   16e38:	cmp	x1, x0
   16e3c:	ccmp	x2, x0, #0x4, ne  // ne = any
   16e40:	b.ne	170e8 <mpfr_agm@@Base+0x838>  // b.any
   16e44:	mov	x3, #0x8000000000000001    	// #-9223372036854775807
   16e48:	cmp	x1, x3
   16e4c:	b.eq	16e60 <mpfr_agm@@Base+0x5b0>  // b.none
   16e50:	ldr	w4, [x21, #8]
   16e54:	cmp	w4, #0x0
   16e58:	ccmp	x2, x3, #0x4, gt
   16e5c:	b.ne	17100 <mpfr_agm@@Base+0x850>  // b.any
   16e60:	mrs	x1, tpidr_el0
   16e64:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   16e68:	ldr	x2, [x0, #2576]
   16e6c:	add	x0, x0, #0xa10
   16e70:	blr	x2
   16e74:	add	x0, x1, x0
   16e78:	mov	x2, #0x2                   	// #2
   16e7c:	movk	x2, #0x8000, lsl #48
   16e80:	str	x2, [x28, #16]
   16e84:	mov	w1, #0x0                   	// #0
   16e88:	ldr	w2, [x0]
   16e8c:	orr	w2, w2, #0x4
   16e90:	str	w2, [x0]
   16e94:	b	16d74 <mpfr_agm@@Base+0x4c4>
   16e98:	ldr	x1, [x29, #120]
   16e9c:	mov	x0, #0xfffffffffffffeff    	// #-257
   16ea0:	movk	x0, #0x7fff, lsl #48
   16ea4:	sub	x0, x0, x19
   16ea8:	cmp	x0, x1
   16eac:	b.lt	1711c <mpfr_agm@@Base+0x86c>  // b.tstop
   16eb0:	ldr	x0, [x29, #120]
   16eb4:	add	x19, x19, x0
   16eb8:	sub	x24, x19, #0x1
   16ebc:	add	x0, x19, x19, lsr #63
   16ec0:	asr	x24, x24, #6
   16ec4:	asr	x0, x0, #1
   16ec8:	add	x24, x24, #0x1
   16ecc:	str	x0, [x29, #120]
   16ed0:	b	169ec <mpfr_agm@@Base+0x13c>
   16ed4:	mov	x26, #0x0                   	// #0
   16ed8:	ldr	x21, [x29, #144]
   16edc:	b	16c00 <mpfr_agm@@Base+0x350>
   16ee0:	ldr	x0, [x29, #152]
   16ee4:	cbz	x0, 171c0 <mpfr_agm@@Base+0x910>
   16ee8:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   16eec:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   16ef0:	add	x2, x2, #0xb08
   16ef4:	add	x0, x0, #0xb00
   16ef8:	mov	w1, #0x8d                  	// #141
   16efc:	bl	cb40 <mpfr_assert_fail@plt>
   16f00:	ldr	x0, [x29, #152]
   16f04:	cbnz	x0, 16ee8 <mpfr_agm@@Base+0x638>
   16f08:	ldr	x27, [x22, #16]
   16f0c:	ldr	x28, [x21, #16]
   16f10:	cmp	x27, #0x0
   16f14:	ccmp	x28, x27, #0x0, le
   16f18:	b.gt	171fc <mpfr_agm@@Base+0x94c>
   16f1c:	mov	x0, #0xc000000000000003    	// #-4611686018427387901
   16f20:	sub	x0, x0, x28
   16f24:	sub	x0, x0, x27
   16f28:	cmp	x0, #0x1
   16f2c:	add	x0, x0, x0, lsr #63
   16f30:	asr	x0, x0, #1
   16f34:	str	x0, [x29, #152]
   16f38:	b.le	17210 <mpfr_agm@@Base+0x960>
   16f3c:	add	x27, x0, x27
   16f40:	ldr	x1, [x29, #152]
   16f44:	ldr	x0, [x21]
   16f48:	str	x0, [x29, #336]
   16f4c:	ldr	w0, [x21, #8]
   16f50:	add	x28, x1, x28
   16f54:	ldr	w1, [x22, #8]
   16f58:	str	w0, [x29, #344]
   16f5c:	ldr	x2, [x22]
   16f60:	str	x2, [x29, #368]
   16f64:	ldr	x3, [x21, #24]
   16f68:	add	x21, x29, #0x150
   16f6c:	ldr	x0, [x22, #24]
   16f70:	add	x22, x29, #0x170
   16f74:	stp	x28, x3, [x29, #352]
   16f78:	str	w1, [x29, #376]
   16f7c:	str	x27, [x29, #384]
   16f80:	str	x0, [x29, #392]
   16f84:	b	16a64 <mpfr_agm@@Base+0x1b4>
   16f88:	ldr	x2, [x29, #224]
   16f8c:	mov	w3, #0x3d                  	// #61
   16f90:	ldr	x1, [x29, #256]
   16f94:	and	w0, w0, w3
   16f98:	mov	x3, #0x2                   	// #2
   16f9c:	str	w0, [x21]
   16fa0:	add	x0, x2, x1
   16fa4:	movk	x3, #0xc000, lsl #48
   16fa8:	add	x0, x0, x3
   16fac:	ldr	x3, [x29, #128]
   16fb0:	add	x0, x0, x0, lsr #63
   16fb4:	neg	x0, x0, asr #1
   16fb8:	add	x2, x2, x0
   16fbc:	add	x1, x1, x0
   16fc0:	add	x0, x3, x0
   16fc4:	str	x0, [x29, #128]
   16fc8:	str	x2, [x29, #224]
   16fcc:	str	x1, [x29, #256]
   16fd0:	b	16b28 <mpfr_agm@@Base+0x278>
   16fd4:	mov	x4, #0x0                   	// #0
   16fd8:	b	16c30 <mpfr_agm@@Base+0x380>
   16fdc:	mov	x24, #0x0                   	// #0
   16fe0:	b	16c54 <mpfr_agm@@Base+0x3a4>
   16fe4:	add	x26, x29, #0xc0
   16fe8:	mov	x1, x24
   16fec:	mov	x0, x26
   16ff0:	bl	bdc0 <mpfr_tmp_allocate@plt>
   16ff4:	mov	x2, x0
   16ff8:	mov	w27, #0x1                   	// #1
   16ffc:	mov	x1, x24
   17000:	mov	x0, x26
   17004:	str	x19, [x29, #208]
   17008:	str	w27, [x29, #216]
   1700c:	str	x2, [x29, #232]
   17010:	bl	bdc0 <mpfr_tmp_allocate@plt>
   17014:	mov	x2, x0
   17018:	mov	x1, x24
   1701c:	mov	x0, x26
   17020:	str	x19, [x29, #240]
   17024:	str	w27, [x29, #248]
   17028:	str	x2, [x29, #264]
   1702c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   17030:	mov	x2, x0
   17034:	mov	x1, x24
   17038:	mov	x0, x26
   1703c:	str	x19, [x29, #272]
   17040:	str	w27, [x29, #280]
   17044:	str	x2, [x29, #296]
   17048:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1704c:	b	16a44 <mpfr_agm@@Base+0x194>
   17050:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   17054:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   17058:	add	x2, x2, #0xbe0
   1705c:	add	x0, x0, #0xb00
   17060:	mov	w1, #0x117                 	// #279
   17064:	bl	cb40 <mpfr_assert_fail@plt>
   17068:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   1706c:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   17070:	add	x2, x2, #0xbf8
   17074:	add	x0, x0, #0xb00
   17078:	mov	w1, #0x11a                 	// #282
   1707c:	bl	cb40 <mpfr_assert_fail@plt>
   17080:	ldr	w3, [x21, #8]
   17084:	mov	x1, x21
   17088:	ldr	w2, [x29, #188]
   1708c:	mov	x0, x28
   17090:	bl	c6a0 <mpfr_set4@plt>
   17094:	mov	w1, w0
   17098:	b	16d74 <mpfr_agm@@Base+0x4c4>
   1709c:	ldr	x19, [x29, #160]
   170a0:	b	16934 <mpfr_agm@@Base+0x84>
   170a4:	tbnz	w1, #1, 1719c <mpfr_agm@@Base+0x8ec>
   170a8:	tbnz	w1, #0, 17168 <mpfr_agm@@Base+0x8b8>
   170ac:	tbnz	w1, #5, 17134 <mpfr_agm@@Base+0x884>
   170b0:	tbz	w1, #2, 16cd4 <mpfr_agm@@Base+0x424>
   170b4:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   170b8:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   170bc:	add	x2, x2, #0xcb0
   170c0:	add	x0, x0, #0xb00
   170c4:	mov	w1, #0x12a                 	// #298
   170c8:	bl	cb40 <mpfr_assert_fail@plt>
   170cc:	b	16cd4 <mpfr_agm@@Base+0x424>
   170d0:	mov	x0, x3
   170d4:	str	w1, [x29, #176]
   170d8:	bl	c410 <mpfr_tmp_free@plt>
   170dc:	ldr	w1, [x29, #176]
   170e0:	ldr	x2, [x28, #16]
   170e4:	b	16d0c <mpfr_agm@@Base+0x45c>
   170e8:	mov	w2, #0x1                   	// #1
   170ec:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   170f0:	mov	w1, #0x0                   	// #0
   170f4:	str	w2, [x28, #8]
   170f8:	str	x0, [x28, #16]
   170fc:	b	16d74 <mpfr_agm@@Base+0x4c4>
   17100:	ldr	w1, [x22, #8]
   17104:	cmp	w1, #0x0
   17108:	b.le	16e60 <mpfr_agm@@Base+0x5b0>
   1710c:	mov	w1, #0x0                   	// #0
   17110:	str	w4, [x28, #8]
   17114:	str	x0, [x28, #16]
   17118:	b	16d74 <mpfr_agm@@Base+0x4c4>
   1711c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   17120:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   17124:	add	x2, x2, #0xc08
   17128:	add	x0, x0, #0xb00
   1712c:	mov	w1, #0x11f                 	// #287
   17130:	bl	cb40 <mpfr_assert_fail@plt>
   17134:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   17138:	add	x0, x0, #0xb00
   1713c:	mov	w1, #0x129                 	// #297
   17140:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   17144:	add	x2, x2, #0xc90
   17148:	bl	cb40 <mpfr_assert_fail@plt>
   1714c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   17150:	ldr	x1, [x0, #2576]
   17154:	add	x0, x0, #0xa10
   17158:	blr	x1
   1715c:	ldr	w1, [x20, x0]
   17160:	tbz	w1, #2, 16cd4 <mpfr_agm@@Base+0x424>
   17164:	b	170b4 <mpfr_agm@@Base+0x804>
   17168:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   1716c:	add	x0, x0, #0xb00
   17170:	mov	w1, #0x128                 	// #296
   17174:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   17178:	add	x2, x2, #0xc70
   1717c:	bl	cb40 <mpfr_assert_fail@plt>
   17180:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   17184:	ldr	x1, [x0, #2576]
   17188:	add	x0, x0, #0xa10
   1718c:	blr	x1
   17190:	ldr	w1, [x20, x0]
   17194:	tbz	w1, #5, 170b0 <mpfr_agm@@Base+0x800>
   17198:	b	17134 <mpfr_agm@@Base+0x884>
   1719c:	mov	w1, #0x127                 	// #295
   171a0:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   171a4:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   171a8:	add	x2, x2, #0xc50
   171ac:	add	x0, x0, #0xb00
   171b0:	bl	cb40 <mpfr_assert_fail@plt>
   171b4:	ldr	w1, [x19]
   171b8:	tbz	w1, #0, 170ac <mpfr_agm@@Base+0x7fc>
   171bc:	b	17168 <mpfr_agm@@Base+0x8b8>
   171c0:	ldr	x28, [x21, #16]
   171c4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   171c8:	ldr	x27, [x22, #16]
   171cc:	add	x0, x28, x27
   171d0:	cmp	x0, x1
   171d4:	b.gt	17228 <mpfr_agm@@Base+0x978>
   171d8:	cmp	x27, x1
   171dc:	b.ne	17248 <mpfr_agm@@Base+0x998>  // b.any
   171e0:	mov	x0, #0xc000000000000001    	// #-4611686018427387903
   171e4:	cmp	x28, x0
   171e8:	b.le	17260 <mpfr_agm@@Base+0x9b0>
   171ec:	mov	x0, #0xffffffffffffffff    	// #-1
   171f0:	mov	x27, #0x3ffffffffffffffe    	// #4611686018427387902
   171f4:	str	x0, [x29, #152]
   171f8:	b	16f40 <mpfr_agm@@Base+0x690>
   171fc:	mov	x2, x26
   17200:	mov	x0, x24
   17204:	mov	w1, #0xc1                  	// #193
   17208:	bl	cb40 <mpfr_assert_fail@plt>
   1720c:	b	16f1c <mpfr_agm@@Base+0x66c>
   17210:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   17214:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   17218:	add	x2, x2, #0xbd0
   1721c:	add	x0, x0, #0xb00
   17220:	mov	w1, #0xc3                  	// #195
   17224:	bl	cb40 <mpfr_assert_fail@plt>
   17228:	mov	x1, #0x2                   	// #2
   1722c:	movk	x1, #0xc000, lsl #48
   17230:	add	x0, x0, x1
   17234:	add	x0, x0, x0, lsr #63
   17238:	neg	x0, x0, asr #1
   1723c:	str	x0, [x29, #152]
   17240:	add	x27, x0, x27
   17244:	b	16f40 <mpfr_agm@@Base+0x690>
   17248:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   1724c:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   17250:	add	x2, x2, #0xb18
   17254:	add	x0, x0, #0xb00
   17258:	mov	w1, #0xaf                  	// #175
   1725c:	bl	cb40 <mpfr_assert_fail@plt>
   17260:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   17264:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   17268:	add	x2, x2, #0xb68
   1726c:	add	x0, x0, #0xb00
   17270:	mov	w1, #0xb3                  	// #179
   17274:	bl	cb40 <mpfr_assert_fail@plt>
   17278:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   1727c:	adrp	x0, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   17280:	add	x2, x2, #0xaf8
   17284:	add	x0, x0, #0xb00
   17288:	mov	w1, #0x5f                  	// #95
   1728c:	bl	cb40 <mpfr_assert_fail@plt>

0000000000017290 <mpfr_cmp@@Base>:
   17290:	mov	w2, #0x1                   	// #1
   17294:	b	c9a0 <mpfr_cmp3@plt>

0000000000017298 <mpfr_cmpabs@@Base>:
   17298:	mov	x4, x0
   1729c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   172a0:	ldr	x2, [x4, #16]
   172a4:	cmp	x2, x0
   172a8:	b.le	17388 <mpfr_cmpabs@@Base+0xf0>
   172ac:	ldr	x3, [x1, #16]
   172b0:	cmp	x3, x0
   172b4:	b.le	1731c <mpfr_cmpabs@@Base+0x84>
   172b8:	cmp	x2, x3
   172bc:	mov	w0, #0x1                   	// #1
   172c0:	b.gt	1733c <mpfr_cmpabs@@Base+0xa4>
   172c4:	mov	w0, #0xffffffff            	// #-1
   172c8:	b.lt	1733c <mpfr_cmpabs@@Base+0xa4>  // b.tstop
   172cc:	ldr	x3, [x1]
   172d0:	ldr	x2, [x4]
   172d4:	sub	x3, x3, #0x1
   172d8:	ldr	x5, [x1, #24]
   172dc:	sub	x2, x2, #0x1
   172e0:	asr	x1, x3, #6
   172e4:	asr	x0, x2, #6
   172e8:	ldr	x4, [x4, #24]
   172ec:	b	17300 <mpfr_cmpabs@@Base+0x68>
   172f0:	b.cc	17360 <mpfr_cmpabs@@Base+0xc8>  // b.lo, b.ul, b.last
   172f4:	subs	x0, x0, #0x1
   172f8:	ccmp	x1, #0x0, #0x1, pl  // pl = nfrst
   172fc:	b.lt	17368 <mpfr_cmpabs@@Base+0xd0>  // b.tstop
   17300:	ldr	x2, [x5, x1, lsl #3]
   17304:	sub	x1, x1, #0x1
   17308:	ldr	x3, [x4, x0, lsl #3]
   1730c:	cmp	x3, x2
   17310:	b.ls	172f0 <mpfr_cmpabs@@Base+0x58>  // b.plast
   17314:	mov	w0, #0x1                   	// #1
   17318:	ret
   1731c:	mov	x0, #0x2                   	// #2
   17320:	movk	x0, #0x8000, lsl #48
   17324:	cmp	x3, x0
   17328:	b.eq	173b8 <mpfr_cmpabs@@Base+0x120>  // b.none
   1732c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   17330:	mov	w0, #0xffffffff            	// #-1
   17334:	cmp	x3, x1
   17338:	b.eq	173f0 <mpfr_cmpabs@@Base+0x158>  // b.none
   1733c:	ret
   17340:	cmn	x1, #0x1
   17344:	b.ne	17350 <mpfr_cmpabs@@Base+0xb8>  // b.any
   17348:	b	17400 <mpfr_cmpabs@@Base+0x168>
   1734c:	b.eq	173fc <mpfr_cmpabs@@Base+0x164>  // b.none
   17350:	ldr	x0, [x5, x1, lsl #3]
   17354:	sub	x1, x1, #0x1
   17358:	cmn	x1, #0x1
   1735c:	cbz	x0, 1734c <mpfr_cmpabs@@Base+0xb4>
   17360:	mov	w0, #0xffffffff            	// #-1
   17364:	ret
   17368:	cmn	x0, #0x1
   1736c:	nop
   17370:	b.eq	17340 <mpfr_cmpabs@@Base+0xa8>  // b.none
   17374:	ldr	x2, [x4, x0, lsl #3]
   17378:	sub	x0, x0, #0x1
   1737c:	cmn	x0, #0x1
   17380:	cbz	x2, 17370 <mpfr_cmpabs@@Base+0xd8>
   17384:	b	17314 <mpfr_cmpabs@@Base+0x7c>
   17388:	mov	x4, #0x2                   	// #2
   1738c:	movk	x4, #0x8000, lsl #48
   17390:	cmp	x2, x4
   17394:	b.eq	173b8 <mpfr_cmpabs@@Base+0x120>  // b.none
   17398:	ldr	x3, [x1, #16]
   1739c:	cmp	x3, x4
   173a0:	b.eq	173b8 <mpfr_cmpabs@@Base+0x120>  // b.none
   173a4:	cmp	x2, x0
   173a8:	b.ne	1732c <mpfr_cmpabs@@Base+0x94>  // b.any
   173ac:	cmp	x3, x2
   173b0:	cset	w0, ne  // ne = any
   173b4:	ret
   173b8:	mrs	x1, tpidr_el0
   173bc:	stp	x29, x30, [sp, #-16]!
   173c0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   173c4:	ldr	x2, [x0, #2576]
   173c8:	add	x0, x0, #0xa10
   173cc:	blr	x2
   173d0:	add	x1, x1, x0
   173d4:	mov	x29, sp
   173d8:	mov	w0, #0x0                   	// #0
   173dc:	ldr	w2, [x1]
   173e0:	orr	w2, w2, #0x10
   173e4:	str	w2, [x1]
   173e8:	ldp	x29, x30, [sp], #16
   173ec:	ret
   173f0:	cmp	x2, x3
   173f4:	cset	w0, ne  // ne = any
   173f8:	ret
   173fc:	ret
   17400:	mov	w0, #0x0                   	// #0
   17404:	ret

0000000000017408 <mpfr_cmp_si_2exp@@Base>:
   17408:	ldr	x5, [x0, #16]
   1740c:	cmp	x1, #0x0
   17410:	mov	x4, x0
   17414:	mov	w3, #0x1                   	// #1
   17418:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1741c:	cneg	w3, w3, lt  // lt = tstop
   17420:	cmp	x5, x0
   17424:	b.le	174e0 <mpfr_cmp_si_2exp@@Base+0xd8>
   17428:	ldr	w0, [x4, #8]
   1742c:	cmp	x1, #0x0
   17430:	ccmp	w0, w3, #0x0, ne  // ne = any
   17434:	b.eq	1743c <mpfr_cmp_si_2exp@@Base+0x34>  // b.none
   17438:	ret
   1743c:	cmp	x1, #0x0
   17440:	cneg	x1, x1, lt  // lt = tstop
   17444:	cmp	x5, x2
   17448:	b.le	174d8 <mpfr_cmp_si_2exp@@Base+0xd0>
   1744c:	mov	x0, #0xffffffffffffffbe    	// #-66
   17450:	movk	x0, #0x3fff, lsl #48
   17454:	cmp	x2, x0
   17458:	b.gt	1746c <mpfr_cmp_si_2exp@@Base+0x64>
   1745c:	add	x6, x2, #0x40
   17460:	mov	w0, w3
   17464:	cmp	x5, x6
   17468:	b.gt	17438 <mpfr_cmp_si_2exp@@Base+0x30>
   1746c:	clz	x6, x1
   17470:	sub	w2, w5, w2
   17474:	mov	w0, #0x40                  	// #64
   17478:	sub	w0, w0, w6
   1747c:	cmp	w2, w0
   17480:	mov	w0, w3
   17484:	b.gt	17438 <mpfr_cmp_si_2exp@@Base+0x30>
   17488:	b.lt	17528 <mpfr_cmp_si_2exp@@Base+0x120>  // b.tstop
   1748c:	ldr	x5, [x4]
   17490:	lsl	x1, x1, x6
   17494:	ldr	x4, [x4, #24]
   17498:	add	x2, x5, #0x3e
   1749c:	subs	x5, x5, #0x1
   174a0:	csel	x2, x2, x5, mi  // mi = first
   174a4:	asr	x2, x2, #6
   174a8:	ldr	x5, [x4, x2, lsl #3]
   174ac:	cmp	x5, x1
   174b0:	b.hi	17438 <mpfr_cmp_si_2exp@@Base+0x30>  // b.pmore
   174b4:	b.cs	174c4 <mpfr_cmp_si_2exp@@Base+0xbc>  // b.hs, b.nlast
   174b8:	b	17528 <mpfr_cmp_si_2exp@@Base+0x120>
   174bc:	ldr	x0, [x4, x2, lsl #3]
   174c0:	cbnz	x0, 17544 <mpfr_cmp_si_2exp@@Base+0x13c>
   174c4:	cmp	x2, #0x0
   174c8:	sub	x2, x2, #0x1
   174cc:	b.gt	174bc <mpfr_cmp_si_2exp@@Base+0xb4>
   174d0:	mov	w0, #0x0                   	// #0
   174d4:	ret
   174d8:	neg	w0, w3
   174dc:	ret
   174e0:	b.eq	1753c <mpfr_cmp_si_2exp@@Base+0x134>  // b.none
   174e4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   174e8:	cmp	x5, x0
   174ec:	b.eq	17530 <mpfr_cmp_si_2exp@@Base+0x128>  // b.none
   174f0:	mrs	x1, tpidr_el0
   174f4:	stp	x29, x30, [sp, #-16]!
   174f8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   174fc:	ldr	x2, [x0, #2576]
   17500:	add	x0, x0, #0xa10
   17504:	blr	x2
   17508:	add	x1, x1, x0
   1750c:	mov	x29, sp
   17510:	mov	w0, #0x0                   	// #0
   17514:	ldr	w2, [x1]
   17518:	orr	w2, w2, #0x10
   1751c:	str	w2, [x1]
   17520:	ldp	x29, x30, [sp], #16
   17524:	ret
   17528:	neg	w0, w0
   1752c:	ret
   17530:	cmp	x1, #0x0
   17534:	csneg	w0, wzr, w3, eq  // eq = none
   17538:	ret
   1753c:	ldr	w0, [x4, #8]
   17540:	ret
   17544:	mov	w0, w3
   17548:	ret
   1754c:	nop

0000000000017550 <mpfr_cmp_si@@Base>:
   17550:	mov	x2, #0x0                   	// #0
   17554:	b	c3d0 <mpfr_cmp_si_2exp@plt>

0000000000017558 <mpfr_cmp_ui_2exp@@Base>:
   17558:	ldr	x4, [x0, #16]
   1755c:	mov	x5, #0x8000000000000003    	// #-9223372036854775805
   17560:	mov	x3, x0
   17564:	cmp	x4, x5
   17568:	b.le	1760c <mpfr_cmp_ui_2exp@@Base+0xb4>
   1756c:	ldr	w0, [x0, #8]
   17570:	tbnz	w0, #31, 17640 <mpfr_cmp_ui_2exp@@Base+0xe8>
   17574:	cbz	x1, 17630 <mpfr_cmp_ui_2exp@@Base+0xd8>
   17578:	cmp	x4, x2
   1757c:	b.le	17640 <mpfr_cmp_ui_2exp@@Base+0xe8>
   17580:	mov	x0, #0xffffffffffffffbe    	// #-66
   17584:	movk	x0, #0x3fff, lsl #48
   17588:	cmp	x2, x0
   1758c:	b.gt	175a0 <mpfr_cmp_ui_2exp@@Base+0x48>
   17590:	add	x5, x2, #0x40
   17594:	mov	w0, #0x1                   	// #1
   17598:	cmp	x4, x5
   1759c:	b.gt	1762c <mpfr_cmp_ui_2exp@@Base+0xd4>
   175a0:	clz	x5, x1
   175a4:	sub	w2, w4, w2
   175a8:	mov	w0, #0x40                  	// #64
   175ac:	sub	w0, w0, w5
   175b0:	cmp	w2, w0
   175b4:	mov	w0, #0x1                   	// #1
   175b8:	b.gt	1762c <mpfr_cmp_ui_2exp@@Base+0xd4>
   175bc:	b.lt	17640 <mpfr_cmp_ui_2exp@@Base+0xe8>  // b.tstop
   175c0:	ldr	x4, [x3]
   175c4:	lsl	x2, x1, x5
   175c8:	ldr	x3, [x3, #24]
   175cc:	add	x1, x4, #0x3e
   175d0:	subs	x4, x4, #0x1
   175d4:	csel	x1, x1, x4, mi  // mi = first
   175d8:	asr	x1, x1, #6
   175dc:	ldr	x4, [x3, x1, lsl #3]
   175e0:	cmp	x4, x2
   175e4:	b.hi	1762c <mpfr_cmp_ui_2exp@@Base+0xd4>  // b.pmore
   175e8:	b.cs	175f8 <mpfr_cmp_ui_2exp@@Base+0xa0>  // b.hs, b.nlast
   175ec:	b	17640 <mpfr_cmp_ui_2exp@@Base+0xe8>
   175f0:	ldr	x0, [x3, x1, lsl #3]
   175f4:	cbnz	x0, 17630 <mpfr_cmp_ui_2exp@@Base+0xd8>
   175f8:	cmp	x1, #0x0
   175fc:	sub	x1, x1, #0x1
   17600:	b.gt	175f0 <mpfr_cmp_ui_2exp@@Base+0x98>
   17604:	mov	w0, #0x0                   	// #0
   17608:	ret
   1760c:	mov	x0, #0x2                   	// #2
   17610:	movk	x0, #0x8000, lsl #48
   17614:	cmp	x4, x0
   17618:	b.eq	17648 <mpfr_cmp_ui_2exp@@Base+0xf0>  // b.none
   1761c:	cmp	x1, #0x0
   17620:	csetm	w0, ne  // ne = any
   17624:	cmp	x4, x5
   17628:	b.eq	17638 <mpfr_cmp_ui_2exp@@Base+0xe0>  // b.none
   1762c:	ret
   17630:	mov	w0, #0x1                   	// #1
   17634:	ret
   17638:	ldr	w0, [x3, #8]
   1763c:	ret
   17640:	mov	w0, #0xffffffff            	// #-1
   17644:	ret
   17648:	mrs	x1, tpidr_el0
   1764c:	stp	x29, x30, [sp, #-16]!
   17650:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   17654:	ldr	x2, [x0, #2576]
   17658:	add	x0, x0, #0xa10
   1765c:	blr	x2
   17660:	add	x1, x1, x0
   17664:	mov	x29, sp
   17668:	mov	w0, #0x0                   	// #0
   1766c:	ldr	w2, [x1]
   17670:	orr	w2, w2, #0x10
   17674:	str	w2, [x1]
   17678:	ldp	x29, x30, [sp], #16
   1767c:	ret

0000000000017680 <mpfr_cmp_ui@@Base>:
   17680:	mov	x2, #0x0                   	// #0
   17684:	b	bf50 <mpfr_cmp_ui_2exp@plt>

0000000000017688 <mpfr_greater_p@@Base>:
   17688:	ldr	x4, [x0, #16]
   1768c:	mov	x3, #0x2                   	// #2
   17690:	movk	x3, #0x8000, lsl #48
   17694:	cmp	x4, x3
   17698:	b.eq	176d8 <mpfr_greater_p@@Base+0x50>  // b.none
   1769c:	ldr	x4, [x1, #16]
   176a0:	mov	w2, #0x0                   	// #0
   176a4:	cmp	x4, x3
   176a8:	b.ne	176b4 <mpfr_greater_p@@Base+0x2c>  // b.any
   176ac:	mov	w0, w2
   176b0:	ret
   176b4:	stp	x29, x30, [sp, #-16]!
   176b8:	mov	w2, #0x1                   	// #1
   176bc:	mov	x29, sp
   176c0:	bl	c9a0 <mpfr_cmp3@plt>
   176c4:	cmp	w0, #0x0
   176c8:	cset	w2, gt
   176cc:	mov	w0, w2
   176d0:	ldp	x29, x30, [sp], #16
   176d4:	ret
   176d8:	mov	w2, #0x0                   	// #0
   176dc:	mov	w0, w2
   176e0:	ret
   176e4:	nop

00000000000176e8 <mpfr_greaterequal_p@@Base>:
   176e8:	ldr	x4, [x0, #16]
   176ec:	mov	x3, #0x2                   	// #2
   176f0:	movk	x3, #0x8000, lsl #48
   176f4:	cmp	x4, x3
   176f8:	b.eq	17738 <mpfr_greaterequal_p@@Base+0x50>  // b.none
   176fc:	ldr	x4, [x1, #16]
   17700:	mov	w2, #0x0                   	// #0
   17704:	cmp	x4, x3
   17708:	b.ne	17714 <mpfr_greaterequal_p@@Base+0x2c>  // b.any
   1770c:	mov	w0, w2
   17710:	ret
   17714:	stp	x29, x30, [sp, #-16]!
   17718:	mov	w2, #0x1                   	// #1
   1771c:	mov	x29, sp
   17720:	bl	c9a0 <mpfr_cmp3@plt>
   17724:	mvn	w2, w0
   17728:	ldp	x29, x30, [sp], #16
   1772c:	lsr	w2, w2, #31
   17730:	mov	w0, w2
   17734:	ret
   17738:	mov	w2, #0x0                   	// #0
   1773c:	mov	w0, w2
   17740:	ret
   17744:	nop

0000000000017748 <mpfr_less_p@@Base>:
   17748:	ldr	x4, [x0, #16]
   1774c:	mov	x3, #0x2                   	// #2
   17750:	movk	x3, #0x8000, lsl #48
   17754:	cmp	x4, x3
   17758:	b.eq	17794 <mpfr_less_p@@Base+0x4c>  // b.none
   1775c:	ldr	x4, [x1, #16]
   17760:	mov	w2, #0x0                   	// #0
   17764:	cmp	x4, x3
   17768:	b.ne	17774 <mpfr_less_p@@Base+0x2c>  // b.any
   1776c:	mov	w0, w2
   17770:	ret
   17774:	stp	x29, x30, [sp, #-16]!
   17778:	mov	w2, #0x1                   	// #1
   1777c:	mov	x29, sp
   17780:	bl	c9a0 <mpfr_cmp3@plt>
   17784:	lsr	w2, w0, #31
   17788:	mov	w0, w2
   1778c:	ldp	x29, x30, [sp], #16
   17790:	ret
   17794:	mov	w2, #0x0                   	// #0
   17798:	mov	w0, w2
   1779c:	ret

00000000000177a0 <mpfr_lessequal_p@@Base>:
   177a0:	ldr	x4, [x0, #16]
   177a4:	mov	x3, #0x2                   	// #2
   177a8:	movk	x3, #0x8000, lsl #48
   177ac:	cmp	x4, x3
   177b0:	b.eq	177f0 <mpfr_lessequal_p@@Base+0x50>  // b.none
   177b4:	ldr	x4, [x1, #16]
   177b8:	mov	w2, #0x0                   	// #0
   177bc:	cmp	x4, x3
   177c0:	b.ne	177cc <mpfr_lessequal_p@@Base+0x2c>  // b.any
   177c4:	mov	w0, w2
   177c8:	ret
   177cc:	stp	x29, x30, [sp, #-16]!
   177d0:	mov	w2, #0x1                   	// #1
   177d4:	mov	x29, sp
   177d8:	bl	c9a0 <mpfr_cmp3@plt>
   177dc:	cmp	w0, #0x0
   177e0:	cset	w2, le
   177e4:	mov	w0, w2
   177e8:	ldp	x29, x30, [sp], #16
   177ec:	ret
   177f0:	mov	w2, #0x0                   	// #0
   177f4:	mov	w0, w2
   177f8:	ret
   177fc:	nop

0000000000017800 <mpfr_lessgreater_p@@Base>:
   17800:	ldr	x4, [x0, #16]
   17804:	mov	x3, #0x2                   	// #2
   17808:	movk	x3, #0x8000, lsl #48
   1780c:	cmp	x4, x3
   17810:	b.eq	17850 <mpfr_lessgreater_p@@Base+0x50>  // b.none
   17814:	ldr	x4, [x1, #16]
   17818:	mov	w2, #0x0                   	// #0
   1781c:	cmp	x4, x3
   17820:	b.ne	1782c <mpfr_lessgreater_p@@Base+0x2c>  // b.any
   17824:	mov	w0, w2
   17828:	ret
   1782c:	stp	x29, x30, [sp, #-16]!
   17830:	mov	w2, #0x1                   	// #1
   17834:	mov	x29, sp
   17838:	bl	c9a0 <mpfr_cmp3@plt>
   1783c:	cmp	w0, #0x0
   17840:	cset	w2, ne  // ne = any
   17844:	mov	w0, w2
   17848:	ldp	x29, x30, [sp], #16
   1784c:	ret
   17850:	mov	w2, #0x0                   	// #0
   17854:	mov	w0, w2
   17858:	ret
   1785c:	nop

0000000000017860 <mpfr_equal_p@@Base>:
   17860:	ldr	x4, [x0, #16]
   17864:	mov	x3, #0x2                   	// #2
   17868:	movk	x3, #0x8000, lsl #48
   1786c:	cmp	x4, x3
   17870:	b.eq	178b0 <mpfr_equal_p@@Base+0x50>  // b.none
   17874:	ldr	x4, [x1, #16]
   17878:	mov	w2, #0x0                   	// #0
   1787c:	cmp	x4, x3
   17880:	b.ne	1788c <mpfr_equal_p@@Base+0x2c>  // b.any
   17884:	mov	w0, w2
   17888:	ret
   1788c:	stp	x29, x30, [sp, #-16]!
   17890:	mov	w2, #0x1                   	// #1
   17894:	mov	x29, sp
   17898:	bl	c9a0 <mpfr_cmp3@plt>
   1789c:	cmp	w0, #0x0
   178a0:	cset	w2, eq  // eq = none
   178a4:	mov	w0, w2
   178a8:	ldp	x29, x30, [sp], #16
   178ac:	ret
   178b0:	mov	w2, #0x0                   	// #0
   178b4:	mov	w0, w2
   178b8:	ret
   178bc:	nop

00000000000178c0 <mpfr_unordered_p@@Base>:
   178c0:	ldr	x0, [x0, #16]
   178c4:	mov	x2, #0x2                   	// #2
   178c8:	movk	x2, #0x8000, lsl #48
   178cc:	cmp	x0, x2
   178d0:	b.eq	178e4 <mpfr_unordered_p@@Base+0x24>  // b.none
   178d4:	ldr	x0, [x1, #16]
   178d8:	cmp	x0, x2
   178dc:	cset	w0, eq  // eq = none
   178e0:	ret
   178e4:	mov	w0, #0x1                   	// #1
   178e8:	ret
   178ec:	nop

00000000000178f0 <mpfr_div_2exp@@Base>:
   178f0:	b	c8f0 <mpfr_div_2ui@plt>
   178f4:	nop

00000000000178f8 <mpfr_div_2ui@@Base>:
   178f8:	stp	x29, x30, [sp, #-80]!
   178fc:	mov	x29, sp
   17900:	stp	x21, x22, [sp, #32]
   17904:	mov	x21, x0
   17908:	stp	x23, x24, [sp, #48]
   1790c:	mov	w23, w3
   17910:	cbz	x2, 17b6c <mpfr_div_2ui@@Base+0x274>
   17914:	stp	x19, x20, [sp, #16]
   17918:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1791c:	ldr	x20, [x1, #16]
   17920:	cmp	x20, x0
   17924:	b.le	17b68 <mpfr_div_2ui@@Base+0x270>
   17928:	mov	x19, x2
   1792c:	cmp	x1, x21
   17930:	mov	w22, #0x0                   	// #0
   17934:	b.eq	17a2c <mpfr_div_2ui@@Base+0x134>  // b.none
   17938:	ldr	w22, [x1, #8]
   1793c:	ldr	x5, [x1]
   17940:	str	w22, [x21, #8]
   17944:	ldr	x2, [x21]
   17948:	cmp	x2, x5
   1794c:	b.eq	17ab0 <mpfr_div_2ui@@Base+0x1b8>  // b.none
   17950:	sub	x5, x5, #0x1
   17954:	sub	x6, x2, #0x1
   17958:	ldr	x8, [x1, #24]
   1795c:	asr	x5, x5, #6
   17960:	asr	x6, x6, #6
   17964:	ldr	x24, [x21, #24]
   17968:	b.ge	17c08 <mpfr_div_2ui@@Base+0x310>  // b.tcont
   1796c:	sub	x5, x5, x6
   17970:	str	x25, [sp, #64]
   17974:	neg	w2, w2
   17978:	add	x7, x6, #0x1
   1797c:	ands	w2, w2, #0x3f
   17980:	add	x1, x8, x5, lsl #3
   17984:	b.eq	17c44 <mpfr_div_2ui@@Base+0x34c>  // b.none
   17988:	ldr	x3, [x8, x5, lsl #3]
   1798c:	sub	w2, w2, #0x1
   17990:	mov	x0, #0x1                   	// #1
   17994:	cmp	w23, #0x0
   17998:	lsl	x0, x0, x2
   1799c:	and	x9, x3, x0
   179a0:	sub	x0, x0, #0x1
   179a4:	ccmp	x9, #0x0, #0x4, ne  // ne = any
   179a8:	and	x0, x0, x3
   179ac:	b.ne	179d8 <mpfr_div_2ui@@Base+0xe0>  // b.any
   179b0:	cmp	x5, #0x0
   179b4:	mov	x4, x5
   179b8:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   179bc:	b.ne	179d8 <mpfr_div_2ui@@Base+0xe0>  // b.any
   179c0:	mvn	x3, x5
   179c4:	add	x3, x1, x3, lsl #3
   179c8:	ldr	x0, [x3, x4, lsl #3]
   179cc:	subs	x4, x4, #0x1
   179d0:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   179d4:	b.eq	179c8 <mpfr_div_2ui@@Base+0xd0>  // b.none
   179d8:	mov	x25, #0x2                   	// #2
   179dc:	lsl	x25, x25, x2
   179e0:	cmp	w23, #0x5
   179e4:	b.eq	17b60 <mpfr_div_2ui@@Base+0x268>  // b.none
   179e8:	cbnz	w23, 17adc <mpfr_div_2ui@@Base+0x1e4>
   179ec:	cbz	x9, 17b5c <mpfr_div_2ui@@Base+0x264>
   179f0:	ldr	x2, [x8, x5, lsl #3]
   179f4:	and	x3, x25, x2
   179f8:	orr	x0, x3, x0
   179fc:	cbnz	x0, 17afc <mpfr_div_2ui@@Base+0x204>
   17a00:	neg	w22, w22
   17a04:	cmp	x24, x1
   17a08:	b.eq	17a18 <mpfr_div_2ui@@Base+0x120>  // b.none
   17a0c:	lsl	x2, x7, #3
   17a10:	mov	x0, x24
   17a14:	bl	ba10 <memcpy@plt>
   17a18:	ldr	x0, [x24]
   17a1c:	neg	x2, x25
   17a20:	ldr	x25, [sp, #64]
   17a24:	and	x2, x0, x2
   17a28:	str	x2, [x24]
   17a2c:	mrs	x1, tpidr_el0
   17a30:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   17a34:	ldr	x2, [x0, #2512]
   17a38:	add	x0, x0, #0x9d0
   17a3c:	blr	x2
   17a40:	mov	x2, #0x1                   	// #1
   17a44:	ldr	x0, [x1, x0]
   17a48:	sub	x0, x2, x0
   17a4c:	add	x0, x0, x20
   17a50:	cmp	x19, x0
   17a54:	b.cs	17b88 <mpfr_div_2ui@@Base+0x290>  // b.hs, b.nlast
   17a58:	mov	x2, x19
   17a5c:	tbz	x19, #63, 17a6c <mpfr_div_2ui@@Base+0x174>
   17a60:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   17a64:	add	x20, x20, x0
   17a68:	add	x2, x19, x0
   17a6c:	sub	x2, x20, x2
   17a70:	str	x2, [x21, #16]
   17a74:	cbz	w22, 17a98 <mpfr_div_2ui@@Base+0x1a0>
   17a78:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   17a7c:	ldr	x2, [x0, #2576]
   17a80:	add	x0, x0, #0xa10
   17a84:	blr	x2
   17a88:	add	x0, x1, x0
   17a8c:	ldr	w1, [x0]
   17a90:	orr	w1, w1, #0x8
   17a94:	str	w1, [x0]
   17a98:	mov	w0, w22
   17a9c:	ldp	x19, x20, [sp, #16]
   17aa0:	ldp	x21, x22, [sp, #32]
   17aa4:	ldp	x23, x24, [sp, #48]
   17aa8:	ldp	x29, x30, [sp], #80
   17aac:	ret
   17ab0:	ldr	x1, [x1, #24]
   17ab4:	mov	w22, #0x0                   	// #0
   17ab8:	ldr	x0, [x21, #24]
   17abc:	cmp	x0, x1
   17ac0:	b.eq	17a2c <mpfr_div_2ui@@Base+0x134>  // b.none
   17ac4:	sub	x2, x2, #0x1
   17ac8:	asr	x2, x2, #6
   17acc:	add	x2, x2, #0x1
   17ad0:	lsl	x2, x2, #3
   17ad4:	bl	ba10 <memcpy@plt>
   17ad8:	b	17a2c <mpfr_div_2ui@@Base+0x134>
   17adc:	orr	x0, x0, x9
   17ae0:	cmp	w23, #0x1
   17ae4:	b.eq	17b5c <mpfr_div_2ui@@Base+0x264>  // b.none
   17ae8:	add	w2, w23, w22, lsr #31
   17aec:	cmp	w2, #0x3
   17af0:	b.eq	17b5c <mpfr_div_2ui@@Base+0x264>  // b.none
   17af4:	cbz	x0, 17b60 <mpfr_div_2ui@@Base+0x268>
   17af8:	ldr	x2, [x8, x5, lsl #3]
   17afc:	adds	x2, x2, x25
   17b00:	str	x2, [x24]
   17b04:	b.cc	17bcc <mpfr_div_2ui@@Base+0x2d4>  // b.lo, b.ul, b.last
   17b08:	mov	x0, #0x1                   	// #1
   17b0c:	b	17b28 <mpfr_div_2ui@@Base+0x230>
   17b10:	ldr	x3, [x1, x0, lsl #3]
   17b14:	add	x4, x0, #0x1
   17b18:	add	x3, x3, #0x1
   17b1c:	str	x3, [x24, x0, lsl #3]
   17b20:	cbnz	x3, 17c88 <mpfr_div_2ui@@Base+0x390>
   17b24:	mov	x0, x4
   17b28:	cmp	x7, x0
   17b2c:	b.gt	17b10 <mpfr_div_2ui@@Base+0x218>
   17b30:	add	x7, x24, x7, lsl #3
   17b34:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   17b38:	add	x20, x20, #0x1
   17b3c:	stur	x0, [x7, #-8]
   17b40:	ldr	x2, [x24]
   17b44:	nop
   17b48:	neg	x25, x25
   17b4c:	and	x2, x25, x2
   17b50:	ldr	x25, [sp, #64]
   17b54:	str	x2, [x24]
   17b58:	b	17a2c <mpfr_div_2ui@@Base+0x134>
   17b5c:	cbnz	x0, 17a00 <mpfr_div_2ui@@Base+0x108>
   17b60:	mov	w22, #0x0                   	// #0
   17b64:	b	17a04 <mpfr_div_2ui@@Base+0x10c>
   17b68:	ldp	x19, x20, [sp, #16]
   17b6c:	mov	w2, w23
   17b70:	mov	x0, x21
   17b74:	ldr	w3, [x1, #8]
   17b78:	ldp	x21, x22, [sp, #32]
   17b7c:	ldp	x23, x24, [sp, #48]
   17b80:	ldp	x29, x30, [sp], #80
   17b84:	b	c6a0 <mpfr_set4@plt>
   17b88:	ldr	w1, [x21, #8]
   17b8c:	cbnz	w23, 17bac <mpfr_div_2ui@@Base+0x2b4>
   17b90:	b.hi	17ce4 <mpfr_div_2ui@@Base+0x3ec>  // b.pmore
   17b94:	tbnz	w1, #31, 17bfc <mpfr_div_2ui@@Base+0x304>
   17b98:	tbnz	w22, #31, 17bac <mpfr_div_2ui@@Base+0x2b4>
   17b9c:	mov	x0, x21
   17ba0:	bl	bf00 <mpfr_powerof2_raw@plt>
   17ba4:	cmp	w0, #0x0
   17ba8:	cset	w23, ne  // ne = any
   17bac:	ldr	w2, [x21, #8]
   17bb0:	mov	w1, w23
   17bb4:	mov	x0, x21
   17bb8:	ldp	x19, x20, [sp, #16]
   17bbc:	ldp	x21, x22, [sp, #32]
   17bc0:	ldp	x23, x24, [sp, #48]
   17bc4:	ldp	x29, x30, [sp], #80
   17bc8:	b	c3c0 <mpfr_underflow@plt>
   17bcc:	cmp	x24, x1
   17bd0:	b.eq	17b48 <mpfr_div_2ui@@Base+0x250>  // b.none
   17bd4:	cmp	x7, #0x1
   17bd8:	b.eq	17b48 <mpfr_div_2ui@@Base+0x250>  // b.none
   17bdc:	mov	x0, #0x1                   	// #1
   17be0:	ldr	x2, [x1, x0, lsl #3]
   17be4:	str	x2, [x24, x0, lsl #3]
   17be8:	add	x0, x0, #0x1
   17bec:	cmp	x0, x7
   17bf0:	b.ne	17be0 <mpfr_div_2ui@@Base+0x2e8>  // b.any
   17bf4:	ldr	x2, [x24]
   17bf8:	b	17b48 <mpfr_div_2ui@@Base+0x250>
   17bfc:	cmp	w22, #0x0
   17c00:	b.le	17b9c <mpfr_div_2ui@@Base+0x2a4>
   17c04:	b	17bac <mpfr_div_2ui@@Base+0x2b4>
   17c08:	sub	x6, x6, x5
   17c0c:	add	x5, x5, #0x1
   17c10:	lsl	x22, x6, #3
   17c14:	add	x0, x24, x22
   17c18:	cmp	x0, x8
   17c1c:	b.eq	17c2c <mpfr_div_2ui@@Base+0x334>  // b.none
   17c20:	lsl	x2, x5, #3
   17c24:	mov	x1, x8
   17c28:	bl	ba10 <memcpy@plt>
   17c2c:	mov	x2, x22
   17c30:	mov	x0, x24
   17c34:	mov	w1, #0x0                   	// #0
   17c38:	mov	w22, #0x0                   	// #0
   17c3c:	bl	c110 <memset@plt>
   17c40:	b	17a2c <mpfr_div_2ui@@Base+0x134>
   17c44:	ldur	x0, [x1, #-8]
   17c48:	cmp	w3, #0x0
   17c4c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   17c50:	and	x9, x0, #0x8000000000000000
   17c54:	and	x3, x0, #0x7fffffffffffffff
   17c58:	b.lt	17cb4 <mpfr_div_2ui@@Base+0x3bc>  // b.tstop
   17c5c:	subs	x2, x5, #0x1
   17c60:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   17c64:	b.ne	17cd8 <mpfr_div_2ui@@Base+0x3e0>  // b.any
   17c68:	mvn	x3, x5
   17c6c:	add	x3, x1, x3, lsl #3
   17c70:	ldr	x0, [x3, x2, lsl #3]
   17c74:	subs	x2, x2, #0x1
   17c78:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   17c7c:	b.eq	17c70 <mpfr_div_2ui@@Base+0x378>  // b.none
   17c80:	mov	x25, #0x1                   	// #1
   17c84:	b	179e0 <mpfr_div_2ui@@Base+0xe8>
   17c88:	cmp	x24, x1
   17c8c:	b.eq	17bf4 <mpfr_div_2ui@@Base+0x2fc>  // b.none
   17c90:	cmp	x0, x6
   17c94:	b.ge	17bf4 <mpfr_div_2ui@@Base+0x2fc>  // b.tcont
   17c98:	ldr	x0, [x1, x4, lsl #3]
   17c9c:	str	x0, [x24, x4, lsl #3]
   17ca0:	cmp	x6, x4
   17ca4:	add	x4, x4, #0x1
   17ca8:	b.gt	17c98 <mpfr_div_2ui@@Base+0x3a0>
   17cac:	ldr	x2, [x24]
   17cb0:	b	17b48 <mpfr_div_2ui@@Base+0x250>
   17cb4:	cmp	w23, #0x5
   17cb8:	mov	x25, #0x1                   	// #1
   17cbc:	b.eq	17b60 <mpfr_div_2ui@@Base+0x268>  // b.none
   17cc0:	cmp	w23, #0x1
   17cc4:	b.eq	17a00 <mpfr_div_2ui@@Base+0x108>  // b.none
   17cc8:	add	w2, w23, w22, lsr #31
   17ccc:	cmp	w2, #0x3
   17cd0:	b.ne	17af4 <mpfr_div_2ui@@Base+0x1fc>  // b.any
   17cd4:	b	17a00 <mpfr_div_2ui@@Base+0x108>
   17cd8:	mov	x0, x3
   17cdc:	mov	x25, #0x1                   	// #1
   17ce0:	b	179e0 <mpfr_div_2ui@@Base+0xe8>
   17ce4:	mov	w23, w2
   17ce8:	b	17bac <mpfr_div_2ui@@Base+0x2b4>
   17cec:	nop
   17cf0:	mov	x7, x0
   17cf4:	cbz	x2, 17d54 <mpfr_div_2ui@@Base+0x45c>
   17cf8:	mov	x0, x3
   17cfc:	add	x9, x1, #0x8
   17d00:	lsl	x8, x2, #3
   17d04:	mov	x2, #0x0                   	// #0
   17d08:	and	w6, w0, #0x1
   17d0c:	ldr	x5, [x1, x2]
   17d10:	cbz	w4, 17d1c <mpfr_div_2ui@@Base+0x424>
   17d14:	ldr	x3, [x9, x2]
   17d18:	extr	x5, x3, x5, #1
   17d1c:	ldr	x3, [x7, x2]
   17d20:	sub	x0, x3, x0
   17d24:	cmp	x3, x5
   17d28:	sub	x5, x0, x5
   17d2c:	mov	x0, #0x1                   	// #1
   17d30:	b.cc	17d40 <mpfr_div_2ui@@Base+0x448>  // b.lo, b.ul, b.last
   17d34:	cmn	x5, #0x1
   17d38:	csel	w6, w6, wzr, eq  // eq = none
   17d3c:	and	x0, x6, #0xff
   17d40:	str	x5, [x7, x2]
   17d44:	add	x2, x2, #0x8
   17d48:	cmp	x8, x2
   17d4c:	b.ne	17d08 <mpfr_div_2ui@@Base+0x410>  // b.any
   17d50:	ret
   17d54:	mov	x0, x3
   17d58:	ret
   17d5c:	nop

0000000000017d60 <mpfr_fdump@@Base>:
   17d60:	stp	x29, x30, [sp, #-112]!
   17d64:	mov	x29, sp
   17d68:	stp	x21, x22, [sp, #32]
   17d6c:	mov	x21, x0
   17d70:	ldr	w0, [x1, #8]
   17d74:	stp	x27, x28, [sp, #80]
   17d78:	mov	x27, x1
   17d7c:	tbnz	w0, #31, 17f70 <mpfr_fdump@@Base+0x210>
   17d80:	ldr	x0, [x27, #16]
   17d84:	mov	x1, #0x2                   	// #2
   17d88:	movk	x1, #0x8000, lsl #48
   17d8c:	cmp	x0, x1
   17d90:	b.eq	17f90 <mpfr_fdump@@Base+0x230>  // b.none
   17d94:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   17d98:	cmp	x0, x1
   17d9c:	b.eq	18004 <mpfr_fdump@@Base+0x2a4>  // b.none
   17da0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   17da4:	cmp	x0, x1
   17da8:	b.eq	17e64 <mpfr_fdump@@Base+0x104>  // b.none
   17dac:	stp	x19, x20, [sp, #16]
   17db0:	mov	x3, x21
   17db4:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   17db8:	ldr	x19, [x27]
   17dbc:	add	x0, x0, #0xce0
   17dc0:	mov	x2, #0x2                   	// #2
   17dc4:	mov	x1, #0x1                   	// #1
   17dc8:	stp	x23, x24, [sp, #48]
   17dcc:	stp	x25, x26, [sp, #64]
   17dd0:	add	x26, x19, #0x3e
   17dd4:	ldr	x28, [x27, #24]
   17dd8:	bl	c8c0 <fwrite@plt>
   17ddc:	subs	x20, x19, #0x1
   17de0:	csel	x26, x26, x20, mi  // mi = first
   17de4:	cmn	x19, #0x3e
   17de8:	asr	x26, x26, #6
   17dec:	b.lt	17eac <mpfr_fdump@@Base+0x14c>  // b.tstop
   17df0:	ldr	x22, [x28, x26, lsl #3]
   17df4:	mov	w23, #0x0                   	// #0
   17df8:	tbnz	x22, #63, 17e08 <mpfr_fdump@@Base+0xa8>
   17dfc:	mov	w0, #0x4e                  	// #78
   17e00:	mov	w23, #0x1                   	// #1
   17e04:	strb	w0, [sp, #104]
   17e08:	add	x25, sp, #0x68
   17e0c:	mov	w24, #0x54                  	// #84
   17e10:	mov	x19, #0x8000000000000000    	// #-9223372036854775808
   17e14:	nop
   17e18:	tst	x22, x19
   17e1c:	mov	x1, x21
   17e20:	cset	w0, ne  // ne = any
   17e24:	add	w0, w0, #0x30
   17e28:	bl	bd20 <putc@plt>
   17e2c:	sub	x2, x19, #0x1
   17e30:	mov	x1, x21
   17e34:	mov	w0, #0x5b                  	// #91
   17e38:	cbnz	x20, 17e8c <mpfr_fdump@@Base+0x12c>
   17e3c:	tst	x2, x22
   17e40:	b.eq	17ec0 <mpfr_fdump@@Base+0x160>  // b.none
   17e44:	bl	bd20 <putc@plt>
   17e48:	strb	w24, [x25, w23, sxtw]
   17e4c:	add	w0, w23, #0x1
   17e50:	lsr	x19, x19, #1
   17e54:	mov	w23, w0
   17e58:	cbz	x19, 17ec0 <mpfr_fdump@@Base+0x160>
   17e5c:	sub	x20, x20, #0x1
   17e60:	b	17e18 <mpfr_fdump@@Base+0xb8>
   17e64:	mov	x1, x21
   17e68:	mov	w0, #0x30                  	// #48
   17e6c:	bl	bda0 <fputc@plt>
   17e70:	mov	x1, x21
   17e74:	mov	w0, #0xa                   	// #10
   17e78:	bl	bd20 <putc@plt>
   17e7c:	ldp	x21, x22, [sp, #32]
   17e80:	ldp	x27, x28, [sp, #80]
   17e84:	ldp	x29, x30, [sp], #112
   17e88:	ret
   17e8c:	lsr	x19, x19, #1
   17e90:	cbnz	x19, 17e5c <mpfr_fdump@@Base+0xfc>
   17e94:	sub	x26, x26, #0x1
   17e98:	cmn	x26, #0x1
   17e9c:	b.eq	1806c <mpfr_fdump@@Base+0x30c>  // b.none
   17ea0:	sub	x20, x20, #0x1
   17ea4:	ldr	x22, [x28, x26, lsl #3]
   17ea8:	b	17e10 <mpfr_fdump@@Base+0xb0>
   17eac:	mov	w23, #0x0                   	// #0
   17eb0:	mov	x1, x21
   17eb4:	mov	w0, #0x5d                  	// #93
   17eb8:	bl	bd20 <putc@plt>
   17ebc:	nop
   17ec0:	ldr	x19, [x27, #16]
   17ec4:	mov	x0, #0x4                   	// #4
   17ec8:	movk	x0, #0x8000, lsl #48
   17ecc:	cmp	x19, x0
   17ed0:	b.eq	18038 <mpfr_fdump@@Base+0x2d8>  // b.none
   17ed4:	mov	x2, x19
   17ed8:	mov	x0, x21
   17edc:	adrp	x1, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   17ee0:	add	x1, x1, #0xcf0
   17ee4:	bl	cce0 <fprintf@plt>
   17ee8:	mrs	x1, tpidr_el0
   17eec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   17ef0:	ldr	x2, [x0, #2512]
   17ef4:	add	x0, x0, #0x9d0
   17ef8:	blr	x2
   17efc:	ldr	x0, [x1, x0]
   17f00:	cmp	x19, x0
   17f04:	b.lt	17fc4 <mpfr_fdump@@Base+0x264>  // b.tstop
   17f08:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   17f0c:	ldr	x2, [x0, #2544]
   17f10:	add	x0, x0, #0x9f0
   17f14:	blr	x2
   17f18:	ldr	x0, [x1, x0]
   17f1c:	cmp	x19, x0
   17f20:	b.le	17fd8 <mpfr_fdump@@Base+0x278>
   17f24:	add	x2, sp, #0x68
   17f28:	add	w3, w23, #0x1
   17f2c:	mov	w0, #0x3e                  	// #62
   17f30:	strb	w0, [x2, w23, sxtw]
   17f34:	mov	x0, x21
   17f38:	adrp	x1, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   17f3c:	add	x1, x1, #0xcf8
   17f40:	strb	wzr, [x2, w3, sxtw]
   17f44:	bl	cce0 <fprintf@plt>
   17f48:	mov	x1, x21
   17f4c:	mov	w0, #0xa                   	// #10
   17f50:	ldp	x19, x20, [sp, #16]
   17f54:	ldp	x23, x24, [sp, #48]
   17f58:	ldp	x25, x26, [sp, #64]
   17f5c:	bl	bd20 <putc@plt>
   17f60:	ldp	x21, x22, [sp, #32]
   17f64:	ldp	x27, x28, [sp, #80]
   17f68:	ldp	x29, x30, [sp], #112
   17f6c:	ret
   17f70:	mov	x1, x21
   17f74:	mov	w0, #0x2d                  	// #45
   17f78:	bl	bda0 <fputc@plt>
   17f7c:	ldr	x0, [x27, #16]
   17f80:	mov	x1, #0x2                   	// #2
   17f84:	movk	x1, #0x8000, lsl #48
   17f88:	cmp	x0, x1
   17f8c:	b.ne	17d94 <mpfr_fdump@@Base+0x34>  // b.any
   17f90:	mov	x3, x21
   17f94:	mov	x2, #0x5                   	// #5
   17f98:	mov	x1, #0x1                   	// #1
   17f9c:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   17fa0:	add	x0, x0, #0xcd0
   17fa4:	bl	c8c0 <fwrite@plt>
   17fa8:	mov	x1, x21
   17fac:	mov	w0, #0xa                   	// #10
   17fb0:	bl	bd20 <putc@plt>
   17fb4:	ldp	x21, x22, [sp, #32]
   17fb8:	ldp	x27, x28, [sp, #80]
   17fbc:	ldp	x29, x30, [sp], #112
   17fc0:	ret
   17fc4:	add	x2, sp, #0x68
   17fc8:	mov	w0, #0x3c                  	// #60
   17fcc:	add	w3, w23, #0x1
   17fd0:	strb	w0, [x2, w23, sxtw]
   17fd4:	b	17f34 <mpfr_fdump@@Base+0x1d4>
   17fd8:	cbnz	w23, 18060 <mpfr_fdump@@Base+0x300>
   17fdc:	mov	x1, x21
   17fe0:	mov	w0, #0xa                   	// #10
   17fe4:	ldp	x19, x20, [sp, #16]
   17fe8:	ldp	x23, x24, [sp, #48]
   17fec:	ldp	x25, x26, [sp, #64]
   17ff0:	bl	bd20 <putc@plt>
   17ff4:	ldp	x21, x22, [sp, #32]
   17ff8:	ldp	x27, x28, [sp, #80]
   17ffc:	ldp	x29, x30, [sp], #112
   18000:	ret
   18004:	mov	x3, x21
   18008:	mov	x2, #0x5                   	// #5
   1800c:	mov	x1, #0x1                   	// #1
   18010:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   18014:	add	x0, x0, #0xcd8
   18018:	bl	c8c0 <fwrite@plt>
   1801c:	mov	x1, x21
   18020:	mov	w0, #0xa                   	// #10
   18024:	bl	bd20 <putc@plt>
   18028:	ldp	x21, x22, [sp, #32]
   1802c:	ldp	x27, x28, [sp, #80]
   18030:	ldp	x29, x30, [sp], #112
   18034:	ret
   18038:	add	x2, x27, #0x20
   1803c:	mov	x0, x21
   18040:	adrp	x1, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   18044:	add	x1, x1, #0xce8
   18048:	bl	c550 <__gmp_fprintf@plt>
   1804c:	add	x2, sp, #0x68
   18050:	mov	w0, #0x55                  	// #85
   18054:	add	w3, w23, #0x1
   18058:	strb	w0, [x2, w23, sxtw]
   1805c:	b	17f34 <mpfr_fdump@@Base+0x1d4>
   18060:	mov	w3, w23
   18064:	add	x2, sp, #0x68
   18068:	b	17f34 <mpfr_fdump@@Base+0x1d4>
   1806c:	tbz	x20, #63, 17ec0 <mpfr_fdump@@Base+0x160>
   18070:	b	17eb0 <mpfr_fdump@@Base+0x150>
   18074:	nop

0000000000018078 <mpfr_dump@@Base>:
   18078:	adrp	x2, 7f000 <__gmpfr_l2b@@Base+0x200>
   1807c:	mov	x1, x0
   18080:	ldr	x2, [x2, #3992]
   18084:	ldr	x0, [x2]
   18088:	b	bbf0 <mpfr_fdump@plt>
   1808c:	nop

0000000000018090 <mpfr_eq@@Base>:
   18090:	ldr	x4, [x0, #16]
   18094:	mov	x5, #0x8000000000000003    	// #-9223372036854775805
   18098:	mov	x3, x0
   1809c:	cmp	x4, x5
   180a0:	b.le	181f4 <mpfr_eq@@Base+0x164>
   180a4:	ldr	x6, [x1, #16]
   180a8:	cmp	x6, x5
   180ac:	b.le	18270 <mpfr_eq@@Base+0x1e0>
   180b0:	ldr	w5, [x1, #8]
   180b4:	mov	w0, #0x0                   	// #0
   180b8:	ldr	w7, [x3, #8]
   180bc:	cmp	w7, w5
   180c0:	ccmp	x4, x6, #0x0, eq  // eq = none
   180c4:	b.eq	180cc <mpfr_eq@@Base+0x3c>  // b.none
   180c8:	ret
   180cc:	ldr	x0, [x1]
   180d0:	ldr	x4, [x3]
   180d4:	ldr	x11, [x3, #24]
   180d8:	sub	x4, x4, #0x1
   180dc:	sub	x3, x0, #0x1
   180e0:	asr	x0, x4, #6
   180e4:	asr	x3, x3, #6
   180e8:	add	x4, x0, #0x1
   180ec:	cmp	x0, x3
   180f0:	add	x3, x3, #0x1
   180f4:	ldr	x12, [x1, #24]
   180f8:	b.ge	18114 <mpfr_eq@@Base+0x84>  // b.tcont
   180fc:	mov	x1, x4
   18100:	mov	x0, x11
   18104:	mov	x4, x3
   18108:	mov	x11, x12
   1810c:	mov	x3, x1
   18110:	mov	x12, x0
   18114:	cmp	x4, x3
   18118:	b.gt	1818c <mpfr_eq@@Base+0xfc>
   1811c:	mov	x10, x4
   18120:	mov	x0, x4
   18124:	sub	x5, x2, #0x1
   18128:	lsr	x5, x5, #6
   1812c:	add	x5, x5, #0x1
   18130:	cmp	x5, x10
   18134:	b.cs	18260 <mpfr_eq@@Base+0x1d0>  // b.hs, b.nlast
   18138:	mov	x0, x5
   1813c:	sub	x1, x3, x0
   18140:	sub	x4, x4, x0
   18144:	cmp	x2, #0x3f
   18148:	sub	x0, x0, #0x1
   1814c:	add	x3, x11, x4, lsl #3
   18150:	add	x1, x12, x1, lsl #3
   18154:	ccmp	x0, #0x0, #0x4, hi  // hi = pmore
   18158:	b.gt	1816c <mpfr_eq@@Base+0xdc>
   1815c:	b	18234 <mpfr_eq@@Base+0x1a4>
   18160:	cmp	x2, #0x3f
   18164:	ccmp	x0, #0x0, #0x4, hi  // hi = pmore
   18168:	b.le	18234 <mpfr_eq@@Base+0x1a4>
   1816c:	ldr	x5, [x3, x0, lsl #3]
   18170:	sub	x2, x2, #0x40
   18174:	ldr	x4, [x1, x0, lsl #3]
   18178:	sub	x0, x0, #0x1
   1817c:	cmp	x5, x4
   18180:	b.eq	18160 <mpfr_eq@@Base+0xd0>  // b.none
   18184:	mov	w0, #0x0                   	// #0
   18188:	ret
   1818c:	cmp	x2, x3, lsl #6
   18190:	mov	x10, x3
   18194:	lsl	x5, x3, #6
   18198:	b.ls	182b0 <mpfr_eq@@Base+0x220>  // b.plast
   1819c:	sub	x5, x2, x5
   181a0:	sub	w6, w4, #0x1
   181a4:	cmp	x5, #0x3f
   181a8:	sub	w6, w6, w3
   181ac:	ccmp	w6, #0x0, #0x1, hi  // hi = pmore
   181b0:	b.lt	18298 <mpfr_eq@@Base+0x208>  // b.tstop
   181b4:	sub	w0, w6, #0x1
   181b8:	add	x1, x11, #0x8
   181bc:	sxtw	x0, w0
   181c0:	b	181d0 <mpfr_eq@@Base+0x140>
   181c4:	sub	x0, x0, #0x1
   181c8:	tst	w8, w9, lsr #31
   181cc:	b.eq	18298 <mpfr_eq@@Base+0x208>  // b.none
   181d0:	ldr	x7, [x1, x0, lsl #3]
   181d4:	sub	x5, x5, #0x40
   181d8:	cmp	x5, #0x3f
   181dc:	mvn	w9, w0
   181e0:	cset	w8, hi  // hi = pmore
   181e4:	mov	w6, w0
   181e8:	cbz	x7, 181c4 <mpfr_eq@@Base+0x134>
   181ec:	mov	w0, #0x0                   	// #0
   181f0:	b	18188 <mpfr_eq@@Base+0xf8>
   181f4:	mov	x2, #0x2                   	// #2
   181f8:	mov	w0, #0x0                   	// #0
   181fc:	movk	x2, #0x8000, lsl #48
   18200:	cmp	x4, x2
   18204:	b.eq	180c8 <mpfr_eq@@Base+0x38>  // b.none
   18208:	ldr	x6, [x1, #16]
   1820c:	cmp	x6, x2
   18210:	b.eq	180c8 <mpfr_eq@@Base+0x38>  // b.none
   18214:	cmp	x6, x5
   18218:	ccmp	x4, x5, #0x0, eq  // eq = none
   1821c:	b.ne	18284 <mpfr_eq@@Base+0x1f4>  // b.any
   18220:	ldr	w0, [x1, #8]
   18224:	ldr	w2, [x3, #8]
   18228:	cmp	w2, w0
   1822c:	cset	w0, eq  // eq = none
   18230:	ret
   18234:	ands	x2, x2, #0x3f
   18238:	ldr	x3, [x3, x0, lsl #3]
   1823c:	ldr	x0, [x1, x0, lsl #3]
   18240:	b.eq	182b8 <mpfr_eq@@Base+0x228>  // b.none
   18244:	mov	w1, #0x40                  	// #64
   18248:	sub	w2, w1, w2
   1824c:	lsr	x0, x0, x2
   18250:	lsr	x3, x3, x2
   18254:	cmp	x3, x0
   18258:	cset	w0, eq  // eq = none
   1825c:	ret
   18260:	lsl	x10, x10, #6
   18264:	cmp	x2, x10
   18268:	csel	x2, x2, x10, ls  // ls = plast
   1826c:	b	1813c <mpfr_eq@@Base+0xac>
   18270:	mov	x1, #0x2                   	// #2
   18274:	mov	w0, #0x0                   	// #0
   18278:	movk	x1, #0x8000, lsl #48
   1827c:	cmp	x6, x1
   18280:	b.eq	180c8 <mpfr_eq@@Base+0x38>  // b.none
   18284:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   18288:	cmp	x6, x0
   1828c:	ccmp	x4, x0, #0x0, eq  // eq = none
   18290:	cset	w0, eq  // eq = none
   18294:	ret
   18298:	mov	x0, x3
   1829c:	tbnz	w6, #31, 18124 <mpfr_eq@@Base+0x94>
   182a0:	cmp	x5, #0x3f
   182a4:	ldr	x1, [x11, w6, sxtw #3]
   182a8:	b.ls	182c4 <mpfr_eq@@Base+0x234>  // b.plast
   182ac:	cbnz	x1, 18184 <mpfr_eq@@Base+0xf4>
   182b0:	mov	x0, x3
   182b4:	b	18124 <mpfr_eq@@Base+0x94>
   182b8:	cmp	x3, x0
   182bc:	cset	w0, eq  // eq = none
   182c0:	ret
   182c4:	neg	w5, w5
   182c8:	mov	w0, #0x0                   	// #0
   182cc:	lsr	x5, x1, x5
   182d0:	cbnz	x5, 180c8 <mpfr_eq@@Base+0x38>
   182d4:	mov	x0, x3
   182d8:	b	18124 <mpfr_eq@@Base+0x94>
   182dc:	nop

00000000000182e0 <mpfr_exp10@@Base>:
   182e0:	mov	w3, w2
   182e4:	mov	x2, x1
   182e8:	mov	x1, #0xa                   	// #10
   182ec:	b	ca10 <mpfr_ui_pow@plt>

00000000000182f0 <mpfr_exp2@@Base>:
   182f0:	stp	x29, x30, [sp, #-192]!
   182f4:	mov	x29, sp
   182f8:	stp	x21, x22, [sp, #32]
   182fc:	mov	x22, x1
   18300:	mov	w21, w2
   18304:	ldr	x1, [x1, #16]
   18308:	stp	x19, x20, [sp, #16]
   1830c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   18310:	stp	x25, x26, [sp, #64]
   18314:	mov	x20, x0
   18318:	cmp	x1, x2
   1831c:	b.le	1872c <mpfr_exp2@@Base+0x43c>
   18320:	mrs	x19, tpidr_el0
   18324:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   18328:	ldr	x1, [x0, #2512]
   1832c:	add	x0, x0, #0x9d0
   18330:	blr	x1
   18334:	mov	x2, #0x0                   	// #0
   18338:	stp	x23, x24, [sp, #48]
   1833c:	add	x24, x19, x0
   18340:	ldr	x1, [x19, x0]
   18344:	mov	x0, x22
   18348:	sub	x1, x1, #0x2
   1834c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   18350:	cmp	w0, #0x0
   18354:	b.le	18858 <mpfr_exp2@@Base+0x568>
   18358:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1835c:	ldr	x1, [x0, #2544]
   18360:	add	x0, x0, #0x9f0
   18364:	blr	x1
   18368:	mov	x2, #0x0                   	// #0
   1836c:	ldr	x1, [x19, x0]
   18370:	add	x25, x19, x0
   18374:	mov	x0, x22
   18378:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   1837c:	tbz	w0, #31, 18878 <mpfr_exp2@@Base+0x588>
   18380:	ldr	x2, [x22, #16]
   18384:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   18388:	ldr	x4, [x0, #2576]
   1838c:	add	x0, x0, #0xa10
   18390:	blr	x4
   18394:	add	x23, x19, x0
   18398:	ldr	w0, [x19, x0]
   1839c:	stp	x27, x28, [sp, #80]
   183a0:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   183a4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   183a8:	str	w0, [sp, #108]
   183ac:	ldr	x28, [x24]
   183b0:	str	x3, [x24]
   183b4:	ldr	x27, [x25]
   183b8:	str	x1, [x25]
   183bc:	tbz	x2, #63, 183d4 <mpfr_exp2@@Base+0xe4>
   183c0:	ldr	x0, [x20]
   183c4:	neg	x2, x2
   183c8:	add	x0, x0, #0x1
   183cc:	cmp	x2, x0
   183d0:	b.hi	1866c <mpfr_exp2@@Base+0x37c>  // b.pmore
   183d4:	mov	w1, #0x1                   	// #1
   183d8:	mov	x0, x22
   183dc:	bl	c190 <mpfr_get_si@plt>
   183e0:	add	x25, sp, #0x80
   183e4:	ldr	x1, [x22]
   183e8:	mov	x24, x0
   183ec:	mov	x0, x25
   183f0:	bl	ca80 <mpfr_init2@plt>
   183f4:	mov	x1, x22
   183f8:	mov	x2, x24
   183fc:	mov	x0, x25
   18400:	mov	w3, #0x0                   	// #0
   18404:	bl	c060 <mpfr_sub_si@plt>
   18408:	ldr	x1, [sp, #144]
   1840c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   18410:	cmp	x1, x0
   18414:	b.eq	186d4 <mpfr_exp2@@Base+0x3e4>  // b.none
   18418:	ldr	x26, [x20]
   1841c:	cmp	x26, #0x1
   18420:	add	x1, x26, #0x5
   18424:	b.eq	187e4 <mpfr_exp2@@Base+0x4f4>  // b.none
   18428:	b.le	18894 <mpfr_exp2@@Base+0x5a4>
   1842c:	sub	x0, x26, #0x1
   18430:	mov	w22, #0x40                  	// #64
   18434:	clz	x0, x0
   18438:	sub	w0, w22, w0
   1843c:	add	x22, x1, w0, sxtw
   18440:	mov	x0, #0x40                  	// #64
   18444:	add	x23, sp, #0xa0
   18448:	mov	x1, x22
   1844c:	str	x0, [sp, #120]
   18450:	mov	x0, x23
   18454:	bl	ca80 <mpfr_init2@plt>
   18458:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1845c:	ldr	x1, [x0, #2560]
   18460:	add	x0, x0, #0xa00
   18464:	blr	x1
   18468:	mov	w2, #0x2                   	// #2
   1846c:	add	x1, x19, x0
   18470:	mov	x0, x23
   18474:	bl	c380 <mpfr_cache@plt>
   18478:	mov	x2, x23
   1847c:	mov	x1, x25
   18480:	mov	w3, #0x2                   	// #2
   18484:	mov	x0, x23
   18488:	bl	bd50 <mpfr_mul@plt>
   1848c:	ldr	x3, [sp, #176]
   18490:	mov	x1, x23
   18494:	mov	x0, x23
   18498:	mov	w2, #0x0                   	// #0
   1849c:	add	x3, x3, #0x2
   184a0:	sub	x3, x22, x3
   184a4:	str	x3, [sp, #112]
   184a8:	bl	c750 <mpfr_exp@plt>
   184ac:	ldr	x0, [sp, #176]
   184b0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   184b4:	ldr	x3, [sp, #112]
   184b8:	cmp	x0, x1
   184bc:	b.le	186f0 <mpfr_exp2@@Base+0x400>
   184c0:	ldr	x1, [sp, #160]
   184c4:	cmp	w21, #0x0
   184c8:	ldr	x0, [sp, #184]
   184cc:	sub	x1, x1, #0x1
   184d0:	mov	x2, x3
   184d4:	cinc	x3, x26, eq  // eq = none
   184d8:	asr	x1, x1, #6
   184dc:	add	x1, x1, #0x1
   184e0:	bl	c370 <mpfr_round_p@plt>
   184e4:	cbz	w0, 186f0 <mpfr_exp2@@Base+0x400>
   184e8:	ldr	w3, [sp, #168]
   184ec:	mov	w2, w21
   184f0:	mov	x1, x23
   184f4:	mov	x0, x20
   184f8:	bl	c6a0 <mpfr_set4@plt>
   184fc:	mov	w26, w0
   18500:	mov	x0, x23
   18504:	bl	c070 <mpfr_clear@plt>
   18508:	mov	x0, x25
   1850c:	bl	c070 <mpfr_clear@plt>
   18510:	cbz	w21, 1875c <mpfr_exp2@@Base+0x46c>
   18514:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   18518:	ldr	x1, [x0, #2576]
   1851c:	add	x0, x0, #0xa10
   18520:	blr	x1
   18524:	mov	x2, x24
   18528:	mov	x1, x20
   1852c:	add	x22, x19, x0
   18530:	mov	w3, w21
   18534:	str	wzr, [x19, x0]
   18538:	mov	x0, x20
   1853c:	bl	bb90 <mpfr_mul_2si@plt>
   18540:	mov	w1, w0
   18544:	cbnz	w0, 185c4 <mpfr_exp2@@Base+0x2d4>
   18548:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1854c:	ldr	x1, [x0, #2512]
   18550:	add	x0, x0, #0x9d0
   18554:	blr	x1
   18558:	ldr	w2, [x22]
   1855c:	str	x28, [x19, x0]
   18560:	ldr	w0, [sp, #108]
   18564:	ldr	x1, [x20, #16]
   18568:	orr	w23, w0, w2
   1856c:	str	w23, [x22]
   18570:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   18574:	ldr	x2, [x0, #2544]
   18578:	add	x0, x0, #0x9f0
   1857c:	blr	x2
   18580:	str	x27, [x19, x0]
   18584:	cmp	x27, x1
   18588:	ccmp	x28, x1, #0x0, ge  // ge = tcont
   1858c:	b.le	18648 <mpfr_exp2@@Base+0x358>
   18590:	mov	w1, w26
   18594:	mov	w2, w21
   18598:	mov	x0, x20
   1859c:	bl	cb30 <mpfr_check_range@plt>
   185a0:	ldp	x23, x24, [sp, #48]
   185a4:	mov	w26, w0
   185a8:	ldp	x27, x28, [sp, #80]
   185ac:	mov	w0, w26
   185b0:	ldp	x19, x20, [sp, #16]
   185b4:	ldp	x21, x22, [sp, #32]
   185b8:	ldp	x25, x26, [sp, #64]
   185bc:	ldp	x29, x30, [sp], #192
   185c0:	ret
   185c4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   185c8:	ldr	x2, [x0, #2512]
   185cc:	add	x0, x0, #0x9d0
   185d0:	blr	x2
   185d4:	ldr	w3, [x22]
   185d8:	str	x28, [x19, x0]
   185dc:	mov	w26, w1
   185e0:	ldr	w0, [sp, #108]
   185e4:	ldr	x2, [x20, #16]
   185e8:	orr	w23, w0, w3
   185ec:	str	w23, [x22]
   185f0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   185f4:	ldr	x3, [x0, #2544]
   185f8:	add	x0, x0, #0x9f0
   185fc:	blr	x3
   18600:	str	x27, [x19, x0]
   18604:	cmp	x28, x2
   18608:	ccmp	x27, x2, #0x1, le
   1860c:	b.lt	18590 <mpfr_exp2@@Base+0x2a0>  // b.tstop
   18610:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   18614:	ldr	x1, [x0, #2576]
   18618:	add	x0, x0, #0xa10
   1861c:	blr	x1
   18620:	orr	w23, w23, #0x8
   18624:	str	w23, [x19, x0]
   18628:	mov	w0, w26
   1862c:	ldp	x19, x20, [sp, #16]
   18630:	ldp	x21, x22, [sp, #32]
   18634:	ldp	x23, x24, [sp, #48]
   18638:	ldp	x25, x26, [sp, #64]
   1863c:	ldp	x27, x28, [sp, #80]
   18640:	ldp	x29, x30, [sp], #192
   18644:	ret
   18648:	cbnz	w26, 18610 <mpfr_exp2@@Base+0x320>
   1864c:	mov	w0, w26
   18650:	ldp	x19, x20, [sp, #16]
   18654:	ldp	x21, x22, [sp, #32]
   18658:	ldp	x23, x24, [sp, #48]
   1865c:	ldp	x25, x26, [sp, #64]
   18660:	ldp	x27, x28, [sp, #80]
   18664:	ldp	x29, x30, [sp], #192
   18668:	ret
   1866c:	adrp	x1, 7f000 <__gmpfr_l2b@@Base+0x200>
   18670:	ldr	w0, [x22, #8]
   18674:	mov	w4, w21
   18678:	str	wzr, [x23]
   1867c:	ldr	x1, [x1, #3928]
   18680:	cmp	w0, #0x0
   18684:	cset	w3, gt
   18688:	mov	x0, x20
   1868c:	bl	c540 <mpfr_round_near_x@plt>
   18690:	mov	w26, w0
   18694:	cbz	w0, 183d4 <mpfr_exp2@@Base+0xe4>
   18698:	ldr	w0, [x23]
   1869c:	ldr	w2, [sp, #108]
   186a0:	ldr	x1, [x20, #16]
   186a4:	orr	w0, w2, w0
   186a8:	str	x28, [x24]
   186ac:	str	w0, [x23]
   186b0:	cmp	x27, x1
   186b4:	str	x27, [x25]
   186b8:	ccmp	x28, x1, #0x0, ge  // ge = tcont
   186bc:	b.gt	18590 <mpfr_exp2@@Base+0x2a0>
   186c0:	orr	w0, w0, #0x8
   186c4:	ldp	x27, x28, [sp, #80]
   186c8:	str	w0, [x23]
   186cc:	ldp	x23, x24, [sp, #48]
   186d0:	b	185ac <mpfr_exp2@@Base+0x2bc>
   186d4:	mov	x0, x20
   186d8:	mov	w3, #0x0                   	// #0
   186dc:	mov	x2, #0x0                   	// #0
   186e0:	mov	x1, #0x1                   	// #1
   186e4:	mov	w26, #0x0                   	// #0
   186e8:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   186ec:	b	18508 <mpfr_exp2@@Base+0x218>
   186f0:	ldr	x1, [sp, #120]
   186f4:	mov	x0, #0xfffffffffffffeff    	// #-257
   186f8:	movk	x0, #0x7fff, lsl #48
   186fc:	sub	x0, x0, x22
   18700:	cmp	x0, x1
   18704:	b.lt	18840 <mpfr_exp2@@Base+0x550>  // b.tstop
   18708:	ldr	x0, [sp, #120]
   1870c:	add	x22, x22, x0
   18710:	mov	x0, x23
   18714:	mov	x1, x22
   18718:	add	x2, x22, x22, lsr #63
   1871c:	asr	x2, x2, #1
   18720:	str	x2, [sp, #120]
   18724:	bl	bed0 <mpfr_set_prec@plt>
   18728:	b	18458 <mpfr_exp2@@Base+0x168>
   1872c:	mov	x3, #0x2                   	// #2
   18730:	movk	x3, #0x8000, lsl #48
   18734:	cmp	x1, x3
   18738:	b.eq	18810 <mpfr_exp2@@Base+0x520>  // b.none
   1873c:	cmp	x1, x2
   18740:	b.eq	187ec <mpfr_exp2@@Base+0x4fc>  // b.none
   18744:	mov	w3, w21
   18748:	mov	x2, #0x0                   	// #0
   1874c:	mov	x1, #0x1                   	// #1
   18750:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   18754:	mov	w26, w0
   18758:	b	185ac <mpfr_exp2@@Base+0x2bc>
   1875c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   18760:	ldr	x1, [x0, #2512]
   18764:	add	x0, x0, #0x9d0
   18768:	blr	x1
   1876c:	add	x22, x19, x0
   18770:	ldr	x0, [x19, x0]
   18774:	sub	x0, x0, #0x1
   18778:	cmp	x0, x24
   1877c:	b.ne	18514 <mpfr_exp2@@Base+0x224>  // b.any
   18780:	ldr	x0, [x20, #16]
   18784:	cbnz	x0, 18514 <mpfr_exp2@@Base+0x224>
   18788:	mov	x0, x20
   1878c:	bl	bf00 <mpfr_powerof2_raw@plt>
   18790:	cbz	w0, 18514 <mpfr_exp2@@Base+0x224>
   18794:	ldr	w0, [sp, #108]
   18798:	mov	w26, #0x1                   	// #1
   1879c:	ldr	x1, [x22]
   187a0:	orr	w23, w0, #0x1
   187a4:	str	x28, [x22]
   187a8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   187ac:	ldr	x2, [x0, #2576]
   187b0:	add	x0, x0, #0xa10
   187b4:	blr	x2
   187b8:	str	w23, [x19, x0]
   187bc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   187c0:	ldr	x2, [x0, #2544]
   187c4:	add	x0, x0, #0x9f0
   187c8:	blr	x2
   187cc:	str	x27, [x19, x0]
   187d0:	str	x1, [x20, #16]
   187d4:	cmp	x27, x1
   187d8:	ccmp	x28, x1, #0x0, ge  // ge = tcont
   187dc:	b.gt	18590 <mpfr_exp2@@Base+0x2a0>
   187e0:	b	18610 <mpfr_exp2@@Base+0x320>
   187e4:	mov	x22, #0x6                   	// #6
   187e8:	b	18440 <mpfr_exp2@@Base+0x150>
   187ec:	ldr	w3, [x22, #8]
   187f0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   187f4:	mov	w2, #0x1                   	// #1
   187f8:	mov	w26, #0x0                   	// #0
   187fc:	cmp	w3, #0x0
   18800:	str	w2, [x20, #8]
   18804:	csel	x1, x1, x0, gt
   18808:	str	x1, [x20, #16]
   1880c:	b	185ac <mpfr_exp2@@Base+0x2bc>
   18810:	mrs	x2, tpidr_el0
   18814:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   18818:	ldr	x3, [x0, #2576]
   1881c:	add	x0, x0, #0xa10
   18820:	blr	x3
   18824:	add	x0, x2, x0
   18828:	str	x1, [x20, #16]
   1882c:	mov	w26, #0x0                   	// #0
   18830:	ldr	w1, [x0]
   18834:	orr	w1, w1, #0x4
   18838:	str	w1, [x0]
   1883c:	b	185ac <mpfr_exp2@@Base+0x2bc>
   18840:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   18844:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   18848:	add	x2, x2, #0xd20
   1884c:	add	x0, x0, #0xd18
   18850:	mov	w1, #0x86                  	// #134
   18854:	bl	cb40 <mpfr_assert_fail@plt>
   18858:	cmp	w21, #0x0
   1885c:	mov	w2, #0x1                   	// #1
   18860:	mov	x0, x20
   18864:	csel	w1, w21, w2, ne  // ne = any
   18868:	bl	c3c0 <mpfr_underflow@plt>
   1886c:	mov	w26, w0
   18870:	ldp	x23, x24, [sp, #48]
   18874:	b	185ac <mpfr_exp2@@Base+0x2bc>
   18878:	mov	w1, w21
   1887c:	mov	x0, x20
   18880:	mov	w2, #0x1                   	// #1
   18884:	bl	bf40 <mpfr_overflow@plt>
   18888:	mov	w26, w0
   1888c:	ldp	x23, x24, [sp, #48]
   18890:	b	185ac <mpfr_exp2@@Base+0x2bc>
   18894:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   18898:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   1889c:	add	x2, x2, #0xd08
   188a0:	add	x0, x0, #0xd18
   188a4:	mov	w1, #0x73                  	// #115
   188a8:	bl	cb40 <mpfr_assert_fail@plt>
   188ac:	nop
   188b0:	stp	x29, x30, [sp, #-192]!
   188b4:	cmp	w3, #0x3e
   188b8:	mov	x29, sp
   188bc:	str	x0, [sp, #184]
   188c0:	ldr	x0, [x0]
   188c4:	stp	x19, x20, [sp, #16]
   188c8:	stp	x21, x22, [sp, #32]
   188cc:	stp	x23, x24, [sp, #48]
   188d0:	stp	x25, x26, [sp, #64]
   188d4:	stp	x27, x28, [sp, #80]
   188d8:	str	x4, [sp, #136]
   188dc:	str	x0, [sp, #152]
   188e0:	str	x5, [sp, #160]
   188e4:	b.hi	18d74 <mpfr_exp2@@Base+0xa84>  // b.pmore
   188e8:	mov	x21, x2
   188ec:	sxtw	x20, w3
   188f0:	ldr	x2, [sp, #136]
   188f4:	add	w25, w3, #0x1
   188f8:	add	x20, x20, #0x1
   188fc:	mov	w19, w3
   18900:	lsl	w25, w25, #1
   18904:	mov	x22, x1
   18908:	add	x3, x2, x20, lsl #4
   1890c:	str	x3, [sp, #144]
   18910:	ldr	x3, [sp, #160]
   18914:	add	x2, x2, w25, sxtw #4
   18918:	mov	x0, x22
   1891c:	mov	x1, #0x0                   	// #0
   18920:	str	x2, [sp, #112]
   18924:	add	x28, x3, x20, lsl #3
   18928:	bl	ba90 <__gmpz_scan1@plt>
   1892c:	mov	x23, x0
   18930:	tbnz	x0, #63, 18d5c <mpfr_exp2@@Base+0xa6c>
   18934:	mov	x2, x0
   18938:	mov	x1, x22
   1893c:	mov	x0, x22
   18940:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   18944:	ldr	x0, [sp, #112]
   18948:	mov	x1, x22
   1894c:	bl	bfa0 <__gmpz_set@plt>
   18950:	sub	x0, x21, x23
   18954:	str	x0, [sp, #96]
   18958:	cmp	w19, #0x1
   1895c:	b.le	18994 <mpfr_exp2@@Base+0x6a4>
   18960:	sub	w21, w19, #0x2
   18964:	mov	x0, #0x20                  	// #32
   18968:	ldr	x1, [sp, #112]
   1896c:	add	x21, x0, w21, uxtw #4
   18970:	add	x22, x1, #0x10
   18974:	add	x21, x1, x21
   18978:	sub	x2, x22, #0x10
   1897c:	mov	x0, x22
   18980:	mov	x1, x2
   18984:	add	x22, x22, #0x10
   18988:	bl	bff0 <__gmpz_mul@plt>
   1898c:	cmp	x21, x22
   18990:	b.ne	18978 <mpfr_exp2@@Base+0x688>  // b.any
   18994:	ldr	x0, [sp, #136]
   18998:	mov	x1, #0x1                   	// #1
   1899c:	mov	x24, #0x1                   	// #1
   189a0:	mov	x23, #0x0                   	// #0
   189a4:	bl	bcb0 <__gmpz_set_ui@plt>
   189a8:	str	wzr, [sp, #120]
   189ac:	ldr	x0, [sp, #144]
   189b0:	mov	x1, #0x1                   	// #1
   189b4:	bl	bcb0 <__gmpz_set_ui@plt>
   189b8:	str	x24, [sp, #104]
   189bc:	ldr	x0, [sp, #160]
   189c0:	mov	x4, #0x0                   	// #0
   189c4:	str	xzr, [x0]
   189c8:	str	xzr, [x0, x20, lsl #3]
   189cc:	ldr	x0, [sp, #152]
   189d0:	cmp	x0, #0x0
   189d4:	lsl	x0, x24, x19
   189d8:	str	x0, [sp, #168]
   189dc:	ccmp	x0, x24, #0x0, gt
   189e0:	b.ls	18c48 <mpfr_exp2@@Base+0x958>  // b.plast
   189e4:	nop
   189e8:	ldr	w21, [sp, #120]
   189ec:	ldr	x0, [sp, #104]
   189f0:	add	w2, w21, #0x1
   189f4:	str	w2, [sp, #124]
   189f8:	sxtw	x3, w2
   189fc:	sbfiz	x27, x2, #3, #32
   18a00:	ldr	x2, [sp, #136]
   18a04:	add	x19, x0, #0x1
   18a08:	str	x0, [sp, #176]
   18a0c:	lsl	x0, x3, #4
   18a10:	add	x20, x2, x0
   18a14:	str	xzr, [x28, x3, lsl #3]
   18a18:	ldr	x2, [sp, #144]
   18a1c:	mov	x1, x19
   18a20:	str	x19, [sp, #104]
   18a24:	add	x23, x2, x0
   18a28:	mov	x0, x20
   18a2c:	str	x4, [sp, #128]
   18a30:	bl	bcb0 <__gmpz_set_ui@plt>
   18a34:	mov	x0, x23
   18a38:	mov	x1, x19
   18a3c:	bl	bcb0 <__gmpz_set_ui@plt>
   18a40:	ldr	w2, [sp, #124]
   18a44:	mov	x0, x19
   18a48:	ldr	x4, [sp, #128]
   18a4c:	tbnz	w19, #0, 18b60 <mpfr_exp2@@Base+0x870>
   18a50:	ldr	x1, [sp, #160]
   18a54:	mov	x19, x20
   18a58:	ldr	x25, [sp, #112]
   18a5c:	sxtw	x26, w21
   18a60:	mov	x20, x0
   18a64:	add	x27, x1, x27
   18a68:	sub	x21, x23, #0x10
   18a6c:	mov	x2, x25
   18a70:	mov	x1, x23
   18a74:	mov	x0, x23
   18a78:	bl	bff0 <__gmpz_mul@plt>
   18a7c:	sub	x22, x19, #0x10
   18a80:	mov	x2, x19
   18a84:	mov	x1, x21
   18a88:	mov	x0, x21
   18a8c:	bl	bff0 <__gmpz_mul@plt>
   18a90:	ldr	w0, [sp, #120]
   18a94:	mov	x1, x21
   18a98:	ldr	x2, [sp, #96]
   18a9c:	sub	w4, w0, w26
   18aa0:	mov	x0, x21
   18aa4:	lsr	x20, x20, #1
   18aa8:	add	x25, x25, #0x10
   18aac:	lsl	x24, x2, x4
   18ab0:	mov	x2, x24
   18ab4:	bl	c200 <__gmpz_mul_2exp@plt>
   18ab8:	mov	x2, x23
   18abc:	mov	x1, x21
   18ac0:	mov	x0, x21
   18ac4:	bl	c9c0 <__gmpz_add@plt>
   18ac8:	mov	x2, x19
   18acc:	mov	x1, x22
   18ad0:	mov	x0, x22
   18ad4:	bl	bff0 <__gmpz_mul@plt>
   18ad8:	ldr	w1, [x19, #4]
   18adc:	mov	x3, #0xfffffffffffffff8    	// #-8
   18ae0:	ldur	w0, [x25, #-12]
   18ae4:	mov	w2, w26
   18ae8:	cmp	w1, #0x0
   18aec:	mov	x23, x21
   18af0:	cneg	w1, w1, lt  // lt = tstop
   18af4:	cmp	w0, #0x0
   18af8:	ldr	x4, [x28, x26, lsl #3]
   18afc:	cneg	w0, w0, lt  // lt = tstop
   18b00:	ldr	x14, [x19, #8]
   18b04:	add	x13, x3, w1, sxtw #3
   18b08:	ldur	x12, [x25, #-8]
   18b0c:	add	x4, x4, #0x1
   18b10:	add	x9, x3, w0, sxtw #3
   18b14:	str	x4, [x28, x26, lsl #3]
   18b18:	sbfiz	x1, x1, #6, #32
   18b1c:	sbfiz	x0, x0, #6, #32
   18b20:	ldr	x4, [x14, x13]
   18b24:	mov	x19, x22
   18b28:	ldr	x9, [x12, x9]
   18b2c:	clz	x4, x4
   18b30:	sub	x4, x1, x4
   18b34:	sub	x26, x26, #0x1
   18b38:	clz	x1, x9
   18b3c:	add	x4, x4, x24
   18b40:	sub	x0, x0, x1
   18b44:	ldur	x1, [x27, #-8]
   18b48:	sub	x4, x4, x0
   18b4c:	sub	x4, x4, #0x1
   18b50:	add	x4, x4, x1
   18b54:	stur	x4, [x27, #-8]
   18b58:	str	x4, [x27], #-8
   18b5c:	tbz	w20, #0, 18a68 <mpfr_exp2@@Base+0x778>
   18b60:	ldr	x0, [sp, #152]
   18b64:	ldr	x1, [sp, #168]
   18b68:	cmp	x0, x4
   18b6c:	ldr	x0, [sp, #104]
   18b70:	ccmp	x0, x1, #0x2, gt
   18b74:	b.cs	18b80 <mpfr_exp2@@Base+0x890>  // b.hs, b.nlast
   18b78:	str	w2, [sp, #120]
   18b7c:	b	189e8 <mpfr_exp2@@Base+0x6f8>
   18b80:	ldr	x1, [sp, #96]
   18b84:	cmp	w2, #0x0
   18b88:	ldr	x0, [sp, #176]
   18b8c:	mul	x23, x0, x1
   18b90:	b.le	18c48 <mpfr_exp2@@Base+0x958>
   18b94:	ldr	x0, [sp, #144]
   18b98:	sbfiz	x5, x2, #4, #32
   18b9c:	sub	w1, w2, #0x1
   18ba0:	add	x24, x28, w2, sxtw #3
   18ba4:	sub	x21, x0, #0x10
   18ba8:	add	x22, x0, x5
   18bac:	ldr	x0, [sp, #136]
   18bb0:	sub	x1, x5, w1, uxtw #4
   18bb4:	add	x26, x1, x21
   18bb8:	mov	x19, #0x0                   	// #0
   18bbc:	add	x20, x0, x5
   18bc0:	mov	x25, #0x1                   	// #1
   18bc4:	nop
   18bc8:	ldur	x2, [x24, #-8]
   18bcc:	sub	x21, x22, #0x10
   18bd0:	ldr	x3, [sp, #112]
   18bd4:	mov	x1, x22
   18bd8:	mov	x0, x22
   18bdc:	sub	x28, x20, #0x10
   18be0:	add	x2, x3, x2, lsl #4
   18be4:	bl	bff0 <__gmpz_mul@plt>
   18be8:	mov	x2, x20
   18bec:	mov	x1, x21
   18bf0:	mov	x0, x21
   18bf4:	bl	bff0 <__gmpz_mul@plt>
   18bf8:	ldr	x2, [x24], #-8
   18bfc:	mov	x1, x21
   18c00:	mov	x0, x21
   18c04:	lsl	x2, x25, x2
   18c08:	add	x19, x19, x2
   18c0c:	ldr	x2, [sp, #96]
   18c10:	mul	x2, x19, x2
   18c14:	bl	c200 <__gmpz_mul_2exp@plt>
   18c18:	mov	x2, x22
   18c1c:	mov	x1, x21
   18c20:	mov	x0, x21
   18c24:	bl	c9c0 <__gmpz_add@plt>
   18c28:	mov	x2, x20
   18c2c:	mov	x1, x28
   18c30:	mov	x0, x28
   18c34:	bl	bff0 <__gmpz_mul@plt>
   18c38:	mov	x22, x21
   18c3c:	cmp	x26, x21
   18c40:	mov	x20, x28
   18c44:	b.ne	18bc8 <mpfr_exp2@@Base+0x8d8>  // b.any
   18c48:	ldp	x4, x2, [sp, #144]
   18c4c:	mov	x1, #0xfffffffffffffff8    	// #-8
   18c50:	ldr	w0, [x4, #4]
   18c54:	lsl	x2, x2, #1
   18c58:	ldr	x3, [x4, #8]
   18c5c:	cmp	w0, #0x0
   18c60:	cneg	w0, w0, lt  // lt = tstop
   18c64:	add	x1, x1, w0, sxtw #3
   18c68:	sbfiz	x0, x0, #6, #32
   18c6c:	ldr	x1, [x3, x1]
   18c70:	clz	x1, x1
   18c74:	sub	x0, x0, x1
   18c78:	subs	x19, x0, x2
   18c7c:	b.mi	18d30 <mpfr_exp2@@Base+0xa40>  // b.first
   18c80:	mov	x2, x19
   18c84:	mov	x1, x4
   18c88:	mov	x0, x4
   18c8c:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   18c90:	ldr	x3, [sp, #136]
   18c94:	mov	x1, #0xfffffffffffffff8    	// #-8
   18c98:	ldr	w0, [x3, #4]
   18c9c:	ldr	x2, [x3, #8]
   18ca0:	cmp	w0, #0x0
   18ca4:	cneg	w0, w0, lt  // lt = tstop
   18ca8:	add	x1, x1, w0, sxtw #3
   18cac:	sbfiz	x0, x0, #6, #32
   18cb0:	ldr	x1, [x2, x1]
   18cb4:	clz	x1, x1
   18cb8:	sub	x0, x0, x1
   18cbc:	ldr	x1, [sp, #152]
   18cc0:	sub	x2, x0, x1
   18cc4:	sub	x19, x19, x2
   18cc8:	cmp	x2, #0x0
   18ccc:	b.le	18d44 <mpfr_exp2@@Base+0xa54>
   18cd0:	mov	x1, x3
   18cd4:	mov	x0, x3
   18cd8:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   18cdc:	ldp	x2, x20, [sp, #136]
   18ce0:	mov	x1, x20
   18ce4:	mov	x0, x20
   18ce8:	bl	bb30 <__gmpz_tdiv_q@plt>
   18cec:	mov	x1, x20
   18cf0:	mov	w2, #0x3                   	// #3
   18cf4:	ldr	x20, [sp, #184]
   18cf8:	mov	x0, x20
   18cfc:	bl	c240 <mpfr_set_z@plt>
   18d00:	ldr	x0, [x20, #16]
   18d04:	mov	x1, x20
   18d08:	ldp	x21, x22, [sp, #32]
   18d0c:	add	x19, x19, x0
   18d10:	sub	x20, x19, x23
   18d14:	ldp	x23, x24, [sp, #48]
   18d18:	ldp	x25, x26, [sp, #64]
   18d1c:	ldp	x27, x28, [sp, #80]
   18d20:	str	x20, [x1, #16]
   18d24:	ldp	x19, x20, [sp, #16]
   18d28:	ldp	x29, x30, [sp], #192
   18d2c:	ret
   18d30:	sub	x2, x2, x0
   18d34:	ldr	x0, [sp, #144]
   18d38:	mov	x1, x0
   18d3c:	bl	c200 <__gmpz_mul_2exp@plt>
   18d40:	b	18c90 <mpfr_exp2@@Base+0x9a0>
   18d44:	ldr	x1, [sp, #152]
   18d48:	sub	x2, x1, x0
   18d4c:	ldr	x0, [sp, #136]
   18d50:	mov	x1, x0
   18d54:	bl	c200 <__gmpz_mul_2exp@plt>
   18d58:	b	18cdc <mpfr_exp2@@Base+0x9ec>
   18d5c:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   18d60:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   18d64:	add	x2, x2, #0xd98
   18d68:	add	x0, x0, #0xd90
   18d6c:	mov	w1, #0x3d                  	// #61
   18d70:	bl	cb40 <mpfr_assert_fail@plt>
   18d74:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   18d78:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   18d7c:	add	x2, x2, #0xd68
   18d80:	add	x0, x0, #0xd90
   18d84:	mov	w1, #0x34                  	// #52
   18d88:	bl	cb40 <mpfr_assert_fail@plt>
   18d8c:	nop

0000000000018d90 <mpfr_exp_3@@Base>:
   18d90:	stp	x29, x30, [sp, #-320]!
   18d94:	mrs	x7, tpidr_el0
   18d98:	mov	x4, x0
   18d9c:	mov	x29, sp
   18da0:	stp	x19, x20, [sp, #16]
   18da4:	mov	x20, x1
   18da8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   18dac:	ldr	x1, [x0, #2576]
   18db0:	add	x0, x0, #0xa10
   18db4:	blr	x1
   18db8:	ldr	w0, [x7, x0]
   18dbc:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   18dc0:	str	w0, [sp, #188]
   18dc4:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   18dc8:	stp	x21, x22, [sp, #32]
   18dcc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   18dd0:	ldr	x1, [x0, #2512]
   18dd4:	add	x0, x0, #0x9d0
   18dd8:	blr	x1
   18ddc:	add	x5, x7, x0
   18de0:	ldr	x0, [x7, x0]
   18de4:	stp	x23, x24, [sp, #48]
   18de8:	stp	x25, x26, [sp, #64]
   18dec:	stp	x27, x28, [sp, #80]
   18df0:	stp	x4, x7, [sp, #160]
   18df4:	str	x0, [sp, #192]
   18df8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   18dfc:	ldr	x8, [x0, #2544]
   18e00:	add	x0, x0, #0x9f0
   18e04:	blr	x8
   18e08:	ldr	x1, [x20]
   18e0c:	str	x6, [x5]
   18e10:	ldr	x4, [x7, x0]
   18e14:	str	x3, [x7, x0]
   18e18:	str	w2, [sp, #180]
   18e1c:	cmp	x1, #0x1
   18e20:	str	x4, [sp, #200]
   18e24:	b.eq	1938c <mpfr_exp_3@@Base+0x5fc>  // b.none
   18e28:	b.le	193f4 <mpfr_exp_3@@Base+0x664>
   18e2c:	sub	x0, x1, #0x1
   18e30:	mov	w2, #0x3a                  	// #58
   18e34:	clz	x0, x0
   18e38:	subs	w0, w2, w0
   18e3c:	csel	w0, w0, wzr, pl  // pl = nfrst
   18e40:	str	w0, [sp, #176]
   18e44:	sxtw	x19, w0
   18e48:	ldr	x2, [x20, #16]
   18e4c:	add	x26, sp, #0x100
   18e50:	mov	x0, x26
   18e54:	str	x2, [sp, #96]
   18e58:	mov	x21, x2
   18e5c:	str	xzr, [sp, #136]
   18e60:	bl	ca80 <mpfr_init2@plt>
   18e64:	ldr	w3, [x20, #8]
   18e68:	mov	w2, #0x3                   	// #3
   18e6c:	mov	x0, x26
   18e70:	mov	x1, x20
   18e74:	bl	c6a0 <mpfr_set4@plt>
   18e78:	mov	x2, x21
   18e7c:	cmp	x21, #0x0
   18e80:	b.le	18ea0 <mpfr_exp_3@@Base+0x110>
   18e84:	mov	x1, x20
   18e88:	mov	x0, x26
   18e8c:	mov	w3, #0x0                   	// #0
   18e90:	str	x21, [sp, #136]
   18e94:	bl	c8f0 <mpfr_div_2ui@plt>
   18e98:	ldr	x0, [sp, #272]
   18e9c:	str	x0, [sp, #96]
   18ea0:	ldr	x0, [sp, #160]
   18ea4:	ldr	x0, [x0]
   18ea8:	str	x0, [sp, #104]
   18eac:	add	x0, x0, x19
   18eb0:	cmp	x0, #0x1
   18eb4:	b.eq	18ed8 <mpfr_exp_3@@Base+0x148>  // b.none
   18eb8:	b.le	19414 <mpfr_exp_3@@Base+0x684>
   18ebc:	sub	x0, x0, #0x1
   18ec0:	mov	w1, #0x40                  	// #64
   18ec4:	clz	x0, x0
   18ec8:	sub	w0, w1, w0
   18ecc:	ldr	x1, [sp, #104]
   18ed0:	add	x0, x1, w0, sxtw
   18ed4:	str	x0, [sp, #104]
   18ed8:	ldr	x0, [sp, #104]
   18edc:	add	x27, sp, #0xe0
   18ee0:	ldr	x21, [sp, #136]
   18ee4:	add	x19, x0, #0x22
   18ee8:	mov	x0, x27
   18eec:	add	x20, sp, #0x120
   18ef0:	add	x19, x19, x21
   18ef4:	add	x22, sp, #0xd0
   18ef8:	mov	x1, x19
   18efc:	bl	ca80 <mpfr_init2@plt>
   18f00:	mov	x1, x19
   18f04:	mov	x0, x20
   18f08:	bl	ca80 <mpfr_init2@plt>
   18f0c:	sub	w0, w21, #0x1
   18f10:	str	w0, [sp, #184]
   18f14:	mov	x0, x22
   18f18:	bl	bf90 <mpfr_mpz_init@plt>
   18f1c:	ldr	x1, [sp, #96]
   18f20:	mov	x0, #0x60                  	// #96
   18f24:	cmp	x19, #0x1
   18f28:	sub	x0, x0, x1
   18f2c:	str	x0, [sp, #152]
   18f30:	mov	x0, #0x40                  	// #64
   18f34:	str	x0, [sp, #128]
   18f38:	b.eq	191a0 <mpfr_exp_3@@Base+0x410>  // b.none
   18f3c:	nop
   18f40:	b.le	1928c <mpfr_exp_3@@Base+0x4fc>
   18f44:	sub	x19, x19, #0x1
   18f48:	mov	w0, #0x3c                  	// #60
   18f4c:	clz	x19, x19
   18f50:	mov	w21, #0x3a                  	// #58
   18f54:	sub	w0, w0, w19
   18f58:	mov	w28, #0x3b                  	// #59
   18f5c:	sub	w21, w21, w19
   18f60:	sub	w28, w28, w19
   18f64:	lsl	w1, w0, #1
   18f68:	add	w23, w1, w0
   18f6c:	str	w23, [sp, #124]
   18f70:	sbfiz	x0, x1, #3, #32
   18f74:	str	x0, [sp, #112]
   18f78:	sbfiz	x0, x23, #4, #32
   18f7c:	str	x0, [sp, #144]
   18f80:	bl	ccf0 <mpfr_allocate_func@plt>
   18f84:	mov	w1, w23
   18f88:	cmp	w23, #0x0
   18f8c:	mov	x23, x0
   18f90:	b.le	18fbc <mpfr_exp_3@@Base+0x22c>
   18f94:	sub	w19, w1, #0x1
   18f98:	add	x0, x0, #0x10
   18f9c:	mov	x24, x23
   18fa0:	add	x19, x0, w19, uxtw #4
   18fa4:	nop
   18fa8:	mov	x0, x24
   18fac:	add	x24, x24, #0x10
   18fb0:	bl	bf90 <mpfr_mpz_init@plt>
   18fb4:	cmp	x19, x24
   18fb8:	b.ne	18fa8 <mpfr_exp_3@@Base+0x218>  // b.any
   18fbc:	ldr	x0, [sp, #112]
   18fc0:	mov	w19, #0x20                  	// #32
   18fc4:	bl	ccf0 <mpfr_allocate_func@plt>
   18fc8:	mov	x24, x0
   18fcc:	mov	x1, x26
   18fd0:	mov	x0, x22
   18fd4:	mov	w2, #0x0                   	// #0
   18fd8:	bl	c9d0 <mpfr_extract@plt>
   18fdc:	ldr	x2, [sp, #152]
   18fe0:	mov	x5, x24
   18fe4:	mov	x4, x23
   18fe8:	mov	w3, w28
   18fec:	mov	x1, x22
   18ff0:	mov	x0, x20
   18ff4:	bl	188b0 <mpfr_exp2@@Base+0x5c0>
   18ff8:	mov	x1, x20
   18ffc:	mov	x0, x20
   19000:	mov	w2, #0x3                   	// #3
   19004:	bl	c400 <mpfr_sqr@plt>
   19008:	subs	w19, w19, #0x1
   1900c:	b.ne	18ff8 <mpfr_exp_3@@Base+0x268>  // b.any
   19010:	ldr	w0, [sp, #176]
   19014:	add	w28, w21, #0x1
   19018:	mov	w25, #0x1                   	// #1
   1901c:	mov	x19, #0x80                  	// #128
   19020:	cmp	w0, w21
   19024:	csel	w21, w0, w21, le
   19028:	cmp	w21, #0x0
   1902c:	b.le	19094 <mpfr_exp_3@@Base+0x304>
   19030:	mov	x0, x22
   19034:	mov	w2, w25
   19038:	mov	x1, x26
   1903c:	bl	c9d0 <mpfr_extract@plt>
   19040:	ldr	w0, [sp, #212]
   19044:	cbz	w0, 1907c <mpfr_exp_3@@Base+0x2ec>
   19048:	ldr	x0, [sp, #96]
   1904c:	mov	x5, x24
   19050:	mov	x4, x23
   19054:	sub	w3, w28, w25
   19058:	sub	x2, x19, x0
   1905c:	mov	x1, x22
   19060:	mov	x0, x27
   19064:	bl	188b0 <mpfr_exp2@@Base+0x5c0>
   19068:	mov	x2, x27
   1906c:	mov	x1, x20
   19070:	mov	x0, x20
   19074:	mov	w3, #0x3                   	// #3
   19078:	bl	bd50 <mpfr_mul@plt>
   1907c:	cmp	w25, #0x38
   19080:	b.eq	191d0 <mpfr_exp_3@@Base+0x440>  // b.none
   19084:	add	w25, w25, #0x1
   19088:	lsl	x19, x19, #1
   1908c:	cmp	w21, w25
   19090:	b.ge	19030 <mpfr_exp_3@@Base+0x2a0>  // b.tcont
   19094:	ldr	w0, [sp, #124]
   19098:	cmp	w0, #0x0
   1909c:	b.le	190cc <mpfr_exp_3@@Base+0x33c>
   190a0:	ldr	w0, [sp, #124]
   190a4:	add	x19, x23, #0x10
   190a8:	mov	x21, x23
   190ac:	sub	w1, w0, #0x1
   190b0:	add	x19, x19, w1, uxtw #4
   190b4:	nop
   190b8:	mov	x0, x21
   190bc:	add	x21, x21, #0x10
   190c0:	bl	c170 <mpfr_mpz_clear@plt>
   190c4:	cmp	x19, x21
   190c8:	b.ne	190b8 <mpfr_exp_3@@Base+0x328>  // b.any
   190cc:	ldr	x1, [sp, #144]
   190d0:	mov	x0, x23
   190d4:	bl	cc20 <mpfr_free_func@plt>
   190d8:	ldr	x1, [sp, #112]
   190dc:	mov	x0, x24
   190e0:	bl	cc20 <mpfr_free_func@plt>
   190e4:	ldr	x0, [sp, #136]
   190e8:	cbnz	x0, 191e8 <mpfr_exp_3@@Base+0x458>
   190ec:	ldr	x0, [sp, #304]
   190f0:	mov	x23, x20
   190f4:	mov	w19, #0x0                   	// #0
   190f8:	mov	x24, #0x8000000000000003    	// #-9223372036854775805
   190fc:	cmp	x0, x24
   19100:	b.le	1913c <mpfr_exp_3@@Base+0x3ac>
   19104:	ldr	x2, [sp, #160]
   19108:	ldr	w0, [sp, #180]
   1910c:	ldr	x1, [x23]
   19110:	cmp	w0, #0x0
   19114:	ldr	x3, [x2]
   19118:	sub	x1, x1, #0x1
   1911c:	ldr	x0, [x23, #24]
   19120:	asr	x1, x1, #6
   19124:	ldr	x2, [sp, #104]
   19128:	cset	w21, eq  // eq = none
   1912c:	add	x1, x1, #0x1
   19130:	cinc	x3, x3, eq  // eq = none
   19134:	bl	c370 <mpfr_round_p@plt>
   19138:	cbnz	w0, 192a4 <mpfr_exp_3@@Base+0x514>
   1913c:	ldr	x1, [sp, #104]
   19140:	mov	x0, #0xfffffffffffffeff    	// #-257
   19144:	movk	x0, #0x7fff, lsl #48
   19148:	sub	x0, x0, x1
   1914c:	ldr	x1, [sp, #128]
   19150:	cmp	x0, x1
   19154:	b.lt	19274 <mpfr_exp_3@@Base+0x4e4>  // b.tstop
   19158:	ldr	x0, [sp, #104]
   1915c:	ldr	x1, [sp, #128]
   19160:	add	x1, x0, x1
   19164:	str	x1, [sp, #104]
   19168:	add	x19, x1, #0x22
   1916c:	mov	x0, x27
   19170:	add	x2, x1, x1, lsr #63
   19174:	ldr	x1, [sp, #136]
   19178:	asr	x2, x2, #1
   1917c:	str	x2, [sp, #128]
   19180:	add	x19, x19, x1
   19184:	mov	x1, x19
   19188:	bl	bed0 <mpfr_set_prec@plt>
   1918c:	mov	x1, x19
   19190:	mov	x0, x20
   19194:	bl	bed0 <mpfr_set_prec@plt>
   19198:	cmp	x19, #0x1
   1919c:	b.ne	18f40 <mpfr_exp_3@@Base+0x1b0>  // b.any
   191a0:	mov	x0, #0xffffffffffffff40    	// #-192
   191a4:	bl	ccf0 <mpfr_allocate_func@plt>
   191a8:	mov	x23, x0
   191ac:	mov	x0, #0xffffffffffffffc0    	// #-64
   191b0:	str	x0, [sp, #112]
   191b4:	mov	x0, #0xffffffffffffff40    	// #-192
   191b8:	mov	w28, #0xfffffffb            	// #-5
   191bc:	mov	w21, #0xfffffffa            	// #-6
   191c0:	str	x0, [sp, #144]
   191c4:	mov	w0, #0xfffffff4            	// #-12
   191c8:	str	w0, [sp, #124]
   191cc:	b	18fbc <mpfr_exp_3@@Base+0x22c>
   191d0:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   191d4:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   191d8:	add	x2, x2, #0xe08
   191dc:	add	x0, x0, #0xd90
   191e0:	mov	w1, #0xf5                  	// #245
   191e4:	bl	cb40 <mpfr_assert_fail@plt>
   191e8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   191ec:	ldr	x1, [x0, #2576]
   191f0:	add	x0, x0, #0xa10
   191f4:	blr	x1
   191f8:	mov	w19, #0x0                   	// #0
   191fc:	ldr	x1, [sp, #168]
   19200:	str	wzr, [x1, x0]
   19204:	ldr	x0, [sp, #136]
   19208:	cmp	x0, #0x1
   1920c:	b.eq	19234 <mpfr_exp_3@@Base+0x4a4>  // b.none
   19210:	ldr	w21, [sp, #184]
   19214:	nop
   19218:	add	w19, w19, #0x1
   1921c:	mov	x1, x20
   19220:	mov	x0, x20
   19224:	mov	w2, #0x3                   	// #3
   19228:	bl	c400 <mpfr_sqr@plt>
   1922c:	cmp	w19, w21
   19230:	b.ne	19218 <mpfr_exp_3@@Base+0x488>  // b.any
   19234:	mov	x1, x20
   19238:	mov	x0, x27
   1923c:	mov	w2, #0x3                   	// #3
   19240:	bl	c400 <mpfr_sqr@plt>
   19244:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19248:	ldr	x1, [x0, #2576]
   1924c:	add	x0, x0, #0xa10
   19250:	blr	x1
   19254:	ldr	x1, [sp, #168]
   19258:	ldr	w0, [x1, x0]
   1925c:	tbnz	w0, #1, 194a4 <mpfr_exp_3@@Base+0x714>
   19260:	tbnz	w0, #0, 1934c <mpfr_exp_3@@Base+0x5bc>
   19264:	mov	x23, x27
   19268:	mov	w19, #0x0                   	// #0
   1926c:	ldr	x0, [sp, #240]
   19270:	b	190f8 <mpfr_exp_3@@Base+0x368>
   19274:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   19278:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   1927c:	add	x2, x2, #0xe30
   19280:	add	x0, x0, #0xd90
   19284:	mov	w1, #0x146                 	// #326
   19288:	bl	cb40 <mpfr_assert_fail@plt>
   1928c:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   19290:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   19294:	add	x2, x2, #0xdf8
   19298:	add	x0, x0, #0xd90
   1929c:	mov	w1, #0xd8                  	// #216
   192a0:	bl	cb40 <mpfr_assert_fail@plt>
   192a4:	ldr	w3, [x23, #8]
   192a8:	mov	x1, x23
   192ac:	ldr	w2, [sp, #180]
   192b0:	ldr	x0, [sp, #160]
   192b4:	bl	c6a0 <mpfr_set4@plt>
   192b8:	mov	w23, w0
   192bc:	cbnz	w19, 19398 <mpfr_exp_3@@Base+0x608>
   192c0:	mov	x0, x22
   192c4:	bl	c170 <mpfr_mpz_clear@plt>
   192c8:	mov	x0, x20
   192cc:	bl	c070 <mpfr_clear@plt>
   192d0:	mov	x0, x27
   192d4:	bl	c070 <mpfr_clear@plt>
   192d8:	mov	x0, x26
   192dc:	bl	c070 <mpfr_clear@plt>
   192e0:	ldr	w2, [sp, #188]
   192e4:	ldp	x19, x20, [sp, #16]
   192e8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   192ec:	ldr	x1, [x0, #2576]
   192f0:	add	x0, x0, #0xa10
   192f4:	blr	x1
   192f8:	ldr	x1, [sp, #168]
   192fc:	ldp	x21, x22, [sp, #32]
   19300:	ldp	x25, x26, [sp, #64]
   19304:	ldp	x27, x28, [sp, #80]
   19308:	str	w2, [x1, x0]
   1930c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19310:	ldr	x2, [x0, #2512]
   19314:	add	x0, x0, #0x9d0
   19318:	blr	x2
   1931c:	ldr	x2, [sp, #192]
   19320:	str	x2, [x1, x0]
   19324:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19328:	ldr	x2, [x0, #2544]
   1932c:	add	x0, x0, #0x9f0
   19330:	blr	x2
   19334:	ldr	x2, [sp, #200]
   19338:	str	x2, [x1, x0]
   1933c:	mov	w0, w23
   19340:	ldp	x23, x24, [sp, #48]
   19344:	ldp	x29, x30, [sp], #320
   19348:	ret
   1934c:	mov	w3, #0x3                   	// #3
   19350:	mov	x1, x20
   19354:	mov	x2, #0x1                   	// #1
   19358:	mov	x0, x20
   1935c:	bl	c2c0 <mpfr_mul_2ui@plt>
   19360:	mov	x1, x20
   19364:	mov	x0, x27
   19368:	mov	w2, #0x3                   	// #3
   1936c:	bl	c400 <mpfr_sqr@plt>
   19370:	ldr	x0, [sp, #240]
   19374:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   19378:	cmp	x0, x1
   1937c:	b.eq	19478 <mpfr_exp_3@@Base+0x6e8>  // b.none
   19380:	mov	x23, x27
   19384:	mov	w19, #0x1                   	// #1
   19388:	b	190f8 <mpfr_exp_3@@Base+0x368>
   1938c:	mov	x19, #0x0                   	// #0
   19390:	str	wzr, [sp, #176]
   19394:	b	18e48 <mpfr_exp_3@@Base+0xb8>
   19398:	ldr	x0, [sp, #160]
   1939c:	ldr	x19, [x0, #16]
   193a0:	cmp	x19, x24
   193a4:	b.le	192c0 <mpfr_exp_3@@Base+0x530>
   193a8:	ldr	w3, [sp, #180]
   193ac:	mov	x1, x0
   193b0:	mov	x24, x0
   193b4:	mov	x2, #0xfffffffffffffffe    	// #-2
   193b8:	bl	bb90 <mpfr_mul_2si@plt>
   193bc:	mov	w1, w0
   193c0:	cbz	w0, 192c0 <mpfr_exp_3@@Base+0x530>
   193c4:	cmp	w23, #0x0
   193c8:	ccmp	w21, #0x0, #0x4, lt  // lt = tstop
   193cc:	b.eq	193e0 <mpfr_exp_3@@Base+0x650>  // b.none
   193d0:	ldr	x2, [x24, #16]
   193d4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   193d8:	cmp	x2, x0
   193dc:	b.eq	1943c <mpfr_exp_3@@Base+0x6ac>  // b.none
   193e0:	ldr	w0, [sp, #188]
   193e4:	mov	w23, w1
   193e8:	orr	w0, w0, #0x1
   193ec:	str	w0, [sp, #188]
   193f0:	b	192c0 <mpfr_exp_3@@Base+0x530>
   193f4:	mov	w1, #0xb7                  	// #183
   193f8:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   193fc:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   19400:	add	x2, x2, #0xdb8
   19404:	add	x0, x0, #0xd90
   19408:	bl	cb40 <mpfr_assert_fail@plt>
   1940c:	ldr	x1, [x20]
   19410:	b	18e2c <mpfr_exp_3@@Base+0x9c>
   19414:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   19418:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   1941c:	add	x2, x2, #0xdd0
   19420:	add	x0, x0, #0xd90
   19424:	mov	w1, #0xcb                  	// #203
   19428:	bl	cb40 <mpfr_assert_fail@plt>
   1942c:	ldr	x0, [sp, #160]
   19430:	ldr	x0, [x0]
   19434:	add	x0, x19, x0
   19438:	b	18ebc <mpfr_exp_3@@Base+0x12c>
   1943c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19440:	ldr	x2, [x0, #2512]
   19444:	add	x0, x0, #0x9d0
   19448:	blr	x2
   1944c:	ldr	x2, [sp, #168]
   19450:	ldr	x0, [x2, x0]
   19454:	add	x0, x0, #0x1
   19458:	cmp	x19, x0
   1945c:	b.ne	193e0 <mpfr_exp_3@@Base+0x650>  // b.any
   19460:	ldr	x0, [sp, #160]
   19464:	mov	w1, #0x2                   	// #2
   19468:	mov	w2, #0x1                   	// #1
   1946c:	bl	c3c0 <mpfr_underflow@plt>
   19470:	mov	w1, w0
   19474:	b	193e0 <mpfr_exp_3@@Base+0x650>
   19478:	ldr	w1, [sp, #180]
   1947c:	mov	w2, #0x1                   	// #1
   19480:	ldr	w3, [sp, #188]
   19484:	ldr	x0, [sp, #160]
   19488:	cmp	w1, #0x0
   1948c:	orr	w3, w3, w2
   19490:	csel	w1, w1, w2, ne  // ne = any
   19494:	str	w3, [sp, #188]
   19498:	bl	c3c0 <mpfr_underflow@plt>
   1949c:	mov	w23, w0
   194a0:	b	192c0 <mpfr_exp_3@@Base+0x530>
   194a4:	ldr	w1, [sp, #180]
   194a8:	mov	w2, #0x1                   	// #1
   194ac:	ldr	x0, [sp, #160]
   194b0:	bl	bf40 <mpfr_overflow@plt>
   194b4:	mov	w23, w0
   194b8:	ldr	w1, [sp, #188]
   194bc:	orr	w1, w1, #0x2
   194c0:	str	w1, [sp, #188]
   194c4:	b	192c0 <mpfr_exp_3@@Base+0x530>

00000000000194c8 <mpfr_exp@@Base>:
   194c8:	stp	x29, x30, [sp, #-144]!
   194cc:	mov	x29, sp
   194d0:	stp	x19, x20, [sp, #16]
   194d4:	mov	x20, x1
   194d8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   194dc:	stp	x21, x22, [sp, #32]
   194e0:	mov	w22, w2
   194e4:	mov	x21, x0
   194e8:	ldr	x2, [x20, #16]
   194ec:	cmp	x2, x1
   194f0:	b.le	196e8 <mpfr_exp@@Base+0x220>
   194f4:	mrs	x19, tpidr_el0
   194f8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   194fc:	ldr	x1, [x0, #2544]
   19500:	add	x0, x0, #0x9f0
   19504:	blr	x1
   19508:	add	x4, x19, x0
   1950c:	stp	x23, x24, [sp, #48]
   19510:	ldr	x23, [x19, x0]
   19514:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19518:	ldr	x1, [x0, #2464]
   1951c:	add	x0, x0, #0x9a0
   19520:	blr	x1
   19524:	ldr	x1, [x19, x0]
   19528:	stp	x25, x26, [sp, #64]
   1952c:	add	x24, x19, x0
   19530:	stp	x27, x28, [sp, #80]
   19534:	cmp	x23, x1
   19538:	b.ne	1982c <mpfr_exp@@Base+0x364>  // b.any
   1953c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19540:	ldr	x1, [x0, #2464]
   19544:	add	x0, x0, #0x9a0
   19548:	blr	x1
   1954c:	add	x23, x19, x0
   19550:	add	x1, x23, #0x8
   19554:	mov	x0, x20
   19558:	mov	w2, #0x1                   	// #1
   1955c:	bl	c9a0 <mpfr_cmp3@plt>
   19560:	tbz	w0, #31, 19a74 <mpfr_exp@@Base+0x5ac>
   19564:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19568:	ldr	x1, [x0, #2512]
   1956c:	add	x0, x0, #0x9d0
   19570:	blr	x1
   19574:	add	x4, x19, x0
   19578:	ldr	x24, [x19, x0]
   1957c:	ldr	x0, [x23, #48]
   19580:	cmp	x24, x0
   19584:	b.ne	19718 <mpfr_exp@@Base+0x250>  // b.any
   19588:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1958c:	ldr	x1, [x0, #2464]
   19590:	add	x0, x0, #0x9a0
   19594:	blr	x1
   19598:	add	x0, x19, x0
   1959c:	add	x1, x0, #0x38
   195a0:	mov	w2, #0x1                   	// #1
   195a4:	mov	x0, x20
   195a8:	bl	c9a0 <mpfr_cmp3@plt>
   195ac:	cmp	w0, #0x0
   195b0:	b.le	19a98 <mpfr_exp@@Base+0x5d0>
   195b4:	ldr	x0, [x20, #16]
   195b8:	ldr	x1, [x21]
   195bc:	tbnz	x0, #63, 19918 <mpfr_exp@@Base+0x450>
   195c0:	mov	x0, #0x61a7                	// #24999
   195c4:	cmp	x1, x0
   195c8:	b.gt	199b4 <mpfr_exp@@Base+0x4ec>
   195cc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   195d0:	ldr	x1, [x0, #2576]
   195d4:	add	x0, x0, #0xa10
   195d8:	blr	x1
   195dc:	ldr	w27, [x19, x0]
   195e0:	add	x24, x19, x0
   195e4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   195e8:	ldr	x1, [x0, #2512]
   195ec:	add	x0, x0, #0x9d0
   195f0:	blr	x1
   195f4:	mov	x1, x20
   195f8:	add	x25, x19, x0
   195fc:	ldr	x23, [x19, x0]
   19600:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19604:	ldr	x2, [x0, #2544]
   19608:	add	x0, x0, #0x9f0
   1960c:	blr	x2
   19610:	add	x20, x19, x0
   19614:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   19618:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   1961c:	mov	w2, w22
   19620:	str	x4, [x25]
   19624:	ldr	x26, [x19, x0]
   19628:	mov	x0, x21
   1962c:	str	x3, [x20]
   19630:	bl	c870 <mpfr_exp_2@plt>
   19634:	ldr	w2, [x24]
   19638:	mov	w1, w0
   1963c:	str	x26, [x20]
   19640:	orr	w2, w2, w27
   19644:	str	x23, [x25]
   19648:	str	w2, [x24]
   1964c:	ldr	x2, [x21, #16]
   19650:	cmp	x23, x2
   19654:	b.gt	196b8 <mpfr_exp@@Base+0x1f0>
   19658:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1965c:	ldr	x3, [x0, #2544]
   19660:	add	x0, x0, #0x9f0
   19664:	blr	x3
   19668:	ldr	x0, [x19, x0]
   1966c:	cmp	x2, x0
   19670:	b.gt	196b8 <mpfr_exp@@Base+0x1f0>
   19674:	cbz	w1, 196c8 <mpfr_exp@@Base+0x200>
   19678:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1967c:	ldr	x2, [x0, #2576]
   19680:	add	x0, x0, #0xa10
   19684:	blr	x2
   19688:	add	x0, x19, x0
   1968c:	ldp	x23, x24, [sp, #48]
   19690:	ldr	w2, [x0]
   19694:	ldp	x25, x26, [sp, #64]
   19698:	orr	w2, w2, #0x8
   1969c:	ldp	x27, x28, [sp, #80]
   196a0:	str	w2, [x0]
   196a4:	mov	w0, w1
   196a8:	ldp	x19, x20, [sp, #16]
   196ac:	ldp	x21, x22, [sp, #32]
   196b0:	ldp	x29, x30, [sp], #144
   196b4:	ret
   196b8:	mov	w2, w22
   196bc:	mov	x0, x21
   196c0:	bl	cb30 <mpfr_check_range@plt>
   196c4:	mov	w1, w0
   196c8:	ldp	x23, x24, [sp, #48]
   196cc:	ldp	x25, x26, [sp, #64]
   196d0:	ldp	x27, x28, [sp, #80]
   196d4:	mov	w0, w1
   196d8:	ldp	x19, x20, [sp, #16]
   196dc:	ldp	x21, x22, [sp, #32]
   196e0:	ldp	x29, x30, [sp], #144
   196e4:	ret
   196e8:	mov	x3, #0x2                   	// #2
   196ec:	movk	x3, #0x8000, lsl #48
   196f0:	cmp	x2, x3
   196f4:	b.eq	19a04 <mpfr_exp@@Base+0x53c>  // b.none
   196f8:	cmp	x2, x1
   196fc:	b.eq	199e0 <mpfr_exp@@Base+0x518>  // b.none
   19700:	mov	x1, #0x1                   	// #1
   19704:	mov	w3, w22
   19708:	mov	x2, #0x0                   	// #0
   1970c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   19710:	mov	w1, w0
   19714:	b	196d4 <mpfr_exp@@Base+0x20c>
   19718:	add	x8, x23, #0x58
   1971c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19720:	ldr	x1, [x0, #2576]
   19724:	add	x0, x0, #0xa10
   19728:	blr	x1
   1972c:	mov	w5, #0x1                   	// #1
   19730:	mov	x6, #0x3fffffffffffffff    	// #4611686018427387903
   19734:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   19738:	mov	x7, #0x20                  	// #32
   1973c:	ldr	w28, [x19, x0]
   19740:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19744:	ldr	x1, [x0, #2544]
   19748:	add	x0, x0, #0x9f0
   1974c:	blr	x1
   19750:	str	x7, [x23, #56]
   19754:	add	x25, sp, #0x70
   19758:	str	w5, [x23, #64]
   1975c:	add	x1, sp, #0x68
   19760:	str	x8, [x23, #80]
   19764:	mov	x2, #0x3f                  	// #63
   19768:	mov	w3, #0x0                   	// #0
   1976c:	str	x9, [x4]
   19770:	str	x2, [sp, #112]
   19774:	mov	x2, #0x0                   	// #0
   19778:	str	w5, [sp, #120]
   1977c:	add	x26, x23, #0x38
   19780:	str	x1, [sp, #136]
   19784:	mov	x1, x24
   19788:	ldr	x27, [x19, x0]
   1978c:	str	x6, [x19, x0]
   19790:	mov	x0, x25
   19794:	bl	ba80 <mpfr_set_si_2exp@plt>
   19798:	mov	x1, x25
   1979c:	mov	w3, #0x0                   	// #0
   197a0:	mov	x2, #0x2                   	// #2
   197a4:	mov	x0, x25
   197a8:	bl	c530 <mpfr_sub_ui@plt>
   197ac:	mvn	x2, x24
   197b0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   197b4:	ldr	x1, [x0, #2560]
   197b8:	add	x0, x0, #0xa00
   197bc:	blr	x1
   197c0:	add	x1, x19, x0
   197c4:	mov	x0, x26
   197c8:	lsr	x2, x2, #63
   197cc:	add	w2, w2, #0x2
   197d0:	bl	c380 <mpfr_cache@plt>
   197d4:	mov	x1, x26
   197d8:	mov	x2, x25
   197dc:	mov	x0, x26
   197e0:	mov	w3, #0x3                   	// #3
   197e4:	bl	bd50 <mpfr_mul@plt>
   197e8:	str	x24, [x23, #48]
   197ec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   197f0:	ldr	x1, [x0, #2576]
   197f4:	add	x0, x0, #0xa10
   197f8:	blr	x1
   197fc:	str	w28, [x19, x0]
   19800:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19804:	ldr	x1, [x0, #2512]
   19808:	add	x0, x0, #0x9d0
   1980c:	blr	x1
   19810:	str	x24, [x19, x0]
   19814:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19818:	ldr	x1, [x0, #2544]
   1981c:	add	x0, x0, #0x9f0
   19820:	blr	x1
   19824:	str	x27, [x19, x0]
   19828:	b	19588 <mpfr_exp@@Base+0xc0>
   1982c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19830:	ldr	x1, [x0, #2576]
   19834:	add	x0, x0, #0xa10
   19838:	blr	x1
   1983c:	add	x7, x24, #0x28
   19840:	ldr	w28, [x19, x0]
   19844:	mov	w5, #0x1                   	// #1
   19848:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1984c:	ldr	x1, [x0, #2512]
   19850:	add	x0, x0, #0x9d0
   19854:	blr	x1
   19858:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   1985c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   19860:	mov	x8, #0x20                  	// #32
   19864:	str	x8, [x24, #8]
   19868:	add	x25, sp, #0x70
   1986c:	str	w5, [x24, #16]
   19870:	add	x1, sp, #0x68
   19874:	str	x7, [x24, #32]
   19878:	mov	x2, #0x40                  	// #64
   1987c:	mov	w3, #0x0                   	// #0
   19880:	str	x9, [x4]
   19884:	str	x2, [sp, #112]
   19888:	mov	x2, #0x0                   	// #0
   1988c:	str	w5, [sp, #120]
   19890:	add	x26, x24, #0x8
   19894:	str	x1, [sp, #136]
   19898:	mov	x1, x23
   1989c:	ldr	x27, [x19, x0]
   198a0:	str	x6, [x19, x0]
   198a4:	mov	x0, x25
   198a8:	bl	ba80 <mpfr_set_si_2exp@plt>
   198ac:	adrp	x1, 7f000 <__gmpfr_l2b@@Base+0x200>
   198b0:	adrp	x4, 7f000 <__gmpfr_l2b@@Base+0x200>
   198b4:	cmp	x23, #0x0
   198b8:	mov	x2, x25
   198bc:	ldr	x1, [x1, #4048]
   198c0:	mov	x0, x26
   198c4:	ldr	x4, [x4, #3984]
   198c8:	mov	w3, #0x2                   	// #2
   198cc:	csel	x1, x4, x1, lt  // lt = tstop
   198d0:	bl	bd50 <mpfr_mul@plt>
   198d4:	str	x23, [x24]
   198d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   198dc:	ldr	x1, [x0, #2576]
   198e0:	add	x0, x0, #0xa10
   198e4:	blr	x1
   198e8:	str	w28, [x19, x0]
   198ec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   198f0:	ldr	x1, [x0, #2512]
   198f4:	add	x0, x0, #0x9d0
   198f8:	blr	x1
   198fc:	str	x27, [x19, x0]
   19900:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19904:	ldr	x1, [x0, #2544]
   19908:	add	x0, x0, #0x9f0
   1990c:	blr	x1
   19910:	str	x23, [x19, x0]
   19914:	b	1953c <mpfr_exp@@Base+0x74>
   19918:	neg	x0, x0
   1991c:	cmp	x0, x1
   19920:	b.ls	195c0 <mpfr_exp@@Base+0xf8>  // b.plast
   19924:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19928:	ldr	x1, [x0, #2512]
   1992c:	add	x0, x0, #0x9d0
   19930:	blr	x1
   19934:	add	x2, x19, x0
   19938:	ldr	w20, [x20, #8]
   1993c:	mov	x1, #0x2                   	// #2
   19940:	mov	w24, #0x1                   	// #1
   19944:	str	w24, [x21, #8]
   19948:	ldr	x23, [x19, x0]
   1994c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19950:	ldr	x3, [x0, #2544]
   19954:	add	x0, x0, #0x9f0
   19958:	blr	x3
   1995c:	str	xzr, [x2]
   19960:	ldr	x25, [x19, x0]
   19964:	str	x1, [x19, x0]
   19968:	tbz	w20, #31, 19a34 <mpfr_exp@@Base+0x56c>
   1996c:	and	w0, w22, #0xfffffffd
   19970:	cmp	w0, w24
   19974:	b.eq	19a60 <mpfr_exp@@Base+0x598>  // b.none
   19978:	mov	x0, x21
   1997c:	mov	x1, #0x1                   	// #1
   19980:	bl	c2b0 <mpfr_setmin@plt>
   19984:	neg	w1, w20
   19988:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1998c:	ldr	x2, [x0, #2512]
   19990:	add	x0, x0, #0x9d0
   19994:	blr	x2
   19998:	str	x23, [x19, x0]
   1999c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   199a0:	ldr	x2, [x0, #2544]
   199a4:	add	x0, x0, #0x9f0
   199a8:	blr	x2
   199ac:	str	x25, [x19, x0]
   199b0:	b	1964c <mpfr_exp@@Base+0x184>
   199b4:	mov	w2, w22
   199b8:	mov	x1, x20
   199bc:	mov	x0, x21
   199c0:	bl	be20 <mpfr_exp_3@plt>
   199c4:	mov	w1, w0
   199c8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   199cc:	ldr	x2, [x0, #2512]
   199d0:	add	x0, x0, #0x9d0
   199d4:	blr	x2
   199d8:	ldr	x23, [x19, x0]
   199dc:	b	1964c <mpfr_exp@@Base+0x184>
   199e0:	ldr	w4, [x20, #8]
   199e4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   199e8:	mov	w3, #0x1                   	// #1
   199ec:	mov	w1, #0x0                   	// #0
   199f0:	cmp	w4, #0x0
   199f4:	str	w3, [x21, #8]
   199f8:	csel	x2, x2, x0, gt
   199fc:	str	x2, [x21, #16]
   19a00:	b	196d4 <mpfr_exp@@Base+0x20c>
   19a04:	mrs	x1, tpidr_el0
   19a08:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19a0c:	ldr	x3, [x0, #2576]
   19a10:	add	x0, x0, #0xa10
   19a14:	blr	x3
   19a18:	add	x0, x1, x0
   19a1c:	str	x2, [x21, #16]
   19a20:	mov	w1, #0x0                   	// #0
   19a24:	ldr	w2, [x0]
   19a28:	orr	w2, w2, #0x4
   19a2c:	str	w2, [x0]
   19a30:	b	196d4 <mpfr_exp@@Base+0x20c>
   19a34:	mov	x0, x21
   19a38:	mov	x1, #0x1                   	// #1
   19a3c:	bl	c2b0 <mpfr_setmin@plt>
   19a40:	cbz	w20, 19984 <mpfr_exp@@Base+0x4bc>
   19a44:	sub	w0, w22, #0x2
   19a48:	tst	w0, #0xfffffffd
   19a4c:	b.ne	19984 <mpfr_exp@@Base+0x4bc>  // b.any
   19a50:	mov	x0, x21
   19a54:	bl	c120 <mpfr_nextabove@plt>
   19a58:	mov	w1, w24
   19a5c:	b	19988 <mpfr_exp@@Base+0x4c0>
   19a60:	mov	x1, #0x0                   	// #0
   19a64:	mov	x0, x21
   19a68:	bl	c0d0 <mpfr_setmax@plt>
   19a6c:	mov	w1, #0xffffffff            	// #-1
   19a70:	b	19988 <mpfr_exp@@Base+0x4c0>
   19a74:	mov	w1, w22
   19a78:	mov	x0, x21
   19a7c:	mov	w2, #0x1                   	// #1
   19a80:	bl	bf40 <mpfr_overflow@plt>
   19a84:	mov	w1, w0
   19a88:	ldp	x23, x24, [sp, #48]
   19a8c:	ldp	x25, x26, [sp, #64]
   19a90:	ldp	x27, x28, [sp, #80]
   19a94:	b	196d4 <mpfr_exp@@Base+0x20c>
   19a98:	cmp	w22, #0x0
   19a9c:	mov	w2, #0x1                   	// #1
   19aa0:	csel	w1, w22, w2, ne  // ne = any
   19aa4:	mov	x0, x21
   19aa8:	bl	c3c0 <mpfr_underflow@plt>
   19aac:	mov	w1, w0
   19ab0:	ldp	x23, x24, [sp, #48]
   19ab4:	ldp	x25, x26, [sp, #64]
   19ab8:	ldp	x27, x28, [sp, #80]
   19abc:	b	196d4 <mpfr_exp@@Base+0x20c>

0000000000019ac0 <mpfr_frac@@Base>:
   19ac0:	stp	x29, x30, [sp, #-160]!
   19ac4:	mov	x29, sp
   19ac8:	stp	x21, x22, [sp, #32]
   19acc:	mov	w22, w2
   19ad0:	mov	x21, x0
   19ad4:	ldr	x2, [x1, #16]
   19ad8:	mov	x0, #0x2                   	// #2
   19adc:	movk	x0, #0x8000, lsl #48
   19ae0:	cmp	x2, x0
   19ae4:	b.eq	19e58 <mpfr_frac@@Base+0x398>  // b.none
   19ae8:	stp	x25, x26, [sp, #64]
   19aec:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   19af0:	mov	x26, x1
   19af4:	cmp	x2, x0
   19af8:	b.eq	19e10 <mpfr_frac@@Base+0x350>  // b.none
   19afc:	mov	x0, x1
   19b00:	bl	c160 <mpfr_integer_p@plt>
   19b04:	cbnz	w0, 19e10 <mpfr_frac@@Base+0x350>
   19b08:	ldr	x3, [x26, #16]
   19b0c:	cmp	x3, #0x0
   19b10:	b.le	19e34 <mpfr_frac@@Base+0x374>
   19b14:	ldr	x0, [x26]
   19b18:	stp	x19, x20, [sp, #16]
   19b1c:	neg	x2, x3, asr #6
   19b20:	add	x19, x0, #0x3e
   19b24:	subs	x0, x0, #0x1
   19b28:	csel	x0, x19, x0, mi  // mi = first
   19b2c:	stp	x27, x28, [sp, #80]
   19b30:	and	x3, x3, #0x3f
   19b34:	ldr	x27, [x26, #24]
   19b38:	add	x19, x2, x0, asr #6
   19b3c:	stp	x23, x24, [sp, #48]
   19b40:	ldr	x4, [x27, x19, lsl #3]
   19b44:	lsl	x4, x4, x3
   19b48:	cbz	x4, 19cd0 <mpfr_frac@@Base+0x210>
   19b4c:	clz	x24, x4
   19b50:	neg	w23, w24
   19b54:	add	w20, w24, w3
   19b58:	cmp	w20, #0x3f
   19b5c:	lsl	x24, x4, x24
   19b60:	sxtw	x0, w23
   19b64:	str	x0, [sp, #104]
   19b68:	b.gt	19ec0 <mpfr_frac@@Base+0x400>
   19b6c:	ldr	x0, [x21]
   19b70:	add	x2, x0, #0x3e
   19b74:	subs	x0, x0, #0x1
   19b78:	csel	x0, x2, x0, mi  // mi = first
   19b7c:	cmp	x19, x0, asr #6
   19b80:	asr	x25, x0, #6
   19b84:	b.gt	19d2c <mpfr_frac@@Base+0x26c>
   19b88:	ldr	w0, [x26, #8]
   19b8c:	mov	x23, x21
   19b90:	str	w0, [x21, #8]
   19b94:	sub	x28, x25, x19
   19b98:	ldr	x26, [x23, #24]
   19b9c:	cbz	w20, 19da4 <mpfr_frac@@Base+0x2e4>
   19ba0:	cbnz	x19, 19db8 <mpfr_frac@@Base+0x2f8>
   19ba4:	str	x24, [x26, x25, lsl #3]
   19ba8:	cmp	x28, #0x0
   19bac:	b.le	19bc0 <mpfr_frac@@Base+0x100>
   19bb0:	lsl	x2, x28, #3
   19bb4:	mov	x0, x26
   19bb8:	mov	w1, #0x0                   	// #0
   19bbc:	bl	c110 <memset@plt>
   19bc0:	mrs	x19, tpidr_el0
   19bc4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19bc8:	ldr	x1, [x0, #2576]
   19bcc:	add	x0, x0, #0xa10
   19bd0:	blr	x1
   19bd4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   19bd8:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   19bdc:	ldr	w20, [x19, x0]
   19be0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19be4:	ldr	x2, [x0, #2512]
   19be8:	add	x0, x0, #0x9d0
   19bec:	blr	x2
   19bf0:	add	x2, x19, x0
   19bf4:	ldr	x27, [x19, x0]
   19bf8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19bfc:	ldr	x4, [x0, #2544]
   19c00:	add	x0, x0, #0x9f0
   19c04:	blr	x4
   19c08:	str	x3, [x2]
   19c0c:	cmp	x21, x23
   19c10:	ldr	x24, [x19, x0]
   19c14:	str	x1, [x19, x0]
   19c18:	b.eq	19dd4 <mpfr_frac@@Base+0x314>  // b.none
   19c1c:	ldr	w3, [x23, #8]
   19c20:	mov	x1, x23
   19c24:	str	xzr, [x23, #16]
   19c28:	mov	w2, w22
   19c2c:	mov	x0, x21
   19c30:	bl	c6a0 <mpfr_set4@plt>
   19c34:	mov	w1, w0
   19c38:	mov	x0, x23
   19c3c:	str	w1, [sp, #124]
   19c40:	bl	c070 <mpfr_clear@plt>
   19c44:	ldr	x3, [x21, #16]
   19c48:	ldr	x0, [sp, #104]
   19c4c:	add	x3, x0, x3
   19c50:	str	x3, [x21, #16]
   19c54:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19c58:	ldr	x1, [x0, #2576]
   19c5c:	add	x0, x0, #0xa10
   19c60:	blr	x1
   19c64:	str	w20, [x19, x0]
   19c68:	add	x1, x19, x0
   19c6c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19c70:	ldr	x2, [x0, #2512]
   19c74:	add	x0, x0, #0x9d0
   19c78:	blr	x2
   19c7c:	str	x27, [x19, x0]
   19c80:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19c84:	ldr	x2, [x0, #2544]
   19c88:	add	x0, x0, #0x9f0
   19c8c:	blr	x2
   19c90:	str	x24, [x19, x0]
   19c94:	cmp	x27, x3
   19c98:	ldr	w0, [sp, #124]
   19c9c:	ccmp	x24, x3, #0x1, le
   19ca0:	b.ge	19d7c <mpfr_frac@@Base+0x2bc>  // b.tcont
   19ca4:	mov	w1, w0
   19ca8:	mov	w2, w22
   19cac:	mov	x0, x21
   19cb0:	bl	cb30 <mpfr_check_range@plt>
   19cb4:	ldp	x19, x20, [sp, #16]
   19cb8:	ldp	x21, x22, [sp, #32]
   19cbc:	ldp	x23, x24, [sp, #48]
   19cc0:	ldp	x25, x26, [sp, #64]
   19cc4:	ldp	x27, x28, [sp, #80]
   19cc8:	ldp	x29, x30, [sp], #160
   19ccc:	ret
   19cd0:	sub	x19, x19, #0x1
   19cd4:	sub	w3, w3, #0x40
   19cd8:	sxtw	x3, w3
   19cdc:	ldr	x4, [x27, x19, lsl #3]
   19ce0:	cbnz	x4, 19cf8 <mpfr_frac@@Base+0x238>
   19ce4:	nop
   19ce8:	sub	x19, x19, #0x1
   19cec:	sub	x3, x3, #0x40
   19cf0:	ldr	x4, [x27, x19, lsl #3]
   19cf4:	cbz	x4, 19ce8 <mpfr_frac@@Base+0x228>
   19cf8:	tbnz	x19, #63, 19ea8 <mpfr_frac@@Base+0x3e8>
   19cfc:	clz	x24, x4
   19d00:	sub	x0, x3, x24
   19d04:	str	x0, [sp, #104]
   19d08:	ldr	x0, [x21]
   19d0c:	mov	w20, w24
   19d10:	lsl	x24, x4, x24
   19d14:	add	x2, x0, #0x3e
   19d18:	subs	x0, x0, #0x1
   19d1c:	csel	x0, x2, x0, mi  // mi = first
   19d20:	cmp	x19, x0, asr #6
   19d24:	asr	x25, x0, #6
   19d28:	b.le	19b88 <mpfr_frac@@Base+0xc8>
   19d2c:	add	x1, x19, #0x1
   19d30:	add	x0, sp, #0x80
   19d34:	mov	x23, x0
   19d38:	lsl	x1, x1, #6
   19d3c:	bl	ca80 <mpfr_init2@plt>
   19d40:	ldr	x1, [sp, #128]
   19d44:	ldr	w0, [x26, #8]
   19d48:	add	x25, x1, #0x3e
   19d4c:	subs	x1, x1, #0x1
   19d50:	csel	x1, x25, x1, mi  // mi = first
   19d54:	str	w0, [sp, #136]
   19d58:	cmp	x19, x1, asr #6
   19d5c:	asr	x25, x1, #6
   19d60:	b.le	19b94 <mpfr_frac@@Base+0xd4>
   19d64:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   19d68:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   19d6c:	add	x2, x2, #0xea0
   19d70:	add	x0, x0, #0xe90
   19d74:	mov	w1, #0x6b                  	// #107
   19d78:	bl	cb40 <mpfr_assert_fail@plt>
   19d7c:	cbz	w0, 19cb4 <mpfr_frac@@Base+0x1f4>
   19d80:	orr	w20, w20, #0x8
   19d84:	ldp	x23, x24, [sp, #48]
   19d88:	ldp	x25, x26, [sp, #64]
   19d8c:	ldp	x27, x28, [sp, #80]
   19d90:	str	w20, [x1]
   19d94:	ldp	x19, x20, [sp, #16]
   19d98:	ldp	x21, x22, [sp, #32]
   19d9c:	ldp	x29, x30, [sp], #160
   19da0:	ret
   19da4:	add	x2, x19, #0x1
   19da8:	mov	x1, x27
   19dac:	add	x0, x26, x28, lsl #3
   19db0:	bl	bae0 <__gmpn_copyd@plt>
   19db4:	b	19ba8 <mpfr_frac@@Base+0xe8>
   19db8:	mov	w3, w20
   19dbc:	mov	x2, x19
   19dc0:	mov	x1, x27
   19dc4:	add	x0, x26, x28, lsl #3
   19dc8:	bl	bcc0 <__gmpn_lshift@plt>
   19dcc:	orr	x24, x24, x0
   19dd0:	b	19ba4 <mpfr_frac@@Base+0xe4>
   19dd4:	ldr	x4, [x21]
   19dd8:	add	x2, x25, #0x1
   19ddc:	ldr	w3, [x21, #8]
   19de0:	add	x6, sp, #0x7c
   19de4:	ldr	x0, [sp, #104]
   19de8:	str	x0, [x21, #16]
   19dec:	lsl	x2, x2, #6
   19df0:	mov	w5, w22
   19df4:	mov	x1, x26
   19df8:	lsr	w3, w3, #31
   19dfc:	mov	x0, x26
   19e00:	bl	ca20 <mpfr_round_raw@plt>
   19e04:	cbnz	w0, 19e90 <mpfr_frac@@Base+0x3d0>
   19e08:	ldr	x3, [x21, #16]
   19e0c:	b	19c54 <mpfr_frac@@Base+0x194>
   19e10:	ldr	w2, [x26, #8]
   19e14:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   19e18:	ldp	x25, x26, [sp, #64]
   19e1c:	str	w2, [x21, #8]
   19e20:	str	x1, [x21, #16]
   19e24:	mov	w0, #0x0                   	// #0
   19e28:	ldp	x21, x22, [sp, #32]
   19e2c:	ldp	x29, x30, [sp], #160
   19e30:	ret
   19e34:	ldr	w3, [x26, #8]
   19e38:	mov	w2, w22
   19e3c:	mov	x1, x26
   19e40:	mov	x0, x21
   19e44:	bl	c6a0 <mpfr_set4@plt>
   19e48:	ldp	x21, x22, [sp, #32]
   19e4c:	ldp	x25, x26, [sp, #64]
   19e50:	ldp	x29, x30, [sp], #160
   19e54:	ret
   19e58:	mrs	x1, tpidr_el0
   19e5c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19e60:	ldr	x3, [x0, #2576]
   19e64:	add	x0, x0, #0xa10
   19e68:	blr	x3
   19e6c:	add	x1, x1, x0
   19e70:	str	x2, [x21, #16]
   19e74:	mov	w0, #0x0                   	// #0
   19e78:	ldp	x21, x22, [sp, #32]
   19e7c:	ldr	w2, [x1]
   19e80:	orr	w2, w2, #0x4
   19e84:	str	w2, [x1]
   19e88:	ldp	x29, x30, [sp], #160
   19e8c:	ret
   19e90:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   19e94:	str	x0, [x26, x25, lsl #3]
   19e98:	ldr	x3, [x21, #16]
   19e9c:	add	x3, x3, #0x1
   19ea0:	str	x3, [x21, #16]
   19ea4:	b	19c54 <mpfr_frac@@Base+0x194>
   19ea8:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   19eac:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   19eb0:	add	x2, x2, #0xe98
   19eb4:	add	x0, x0, #0xe90
   19eb8:	mov	w1, #0x59                  	// #89
   19ebc:	bl	cb40 <mpfr_assert_fail@plt>
   19ec0:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   19ec4:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   19ec8:	add	x2, x2, #0xe80
   19ecc:	add	x0, x0, #0xe90
   19ed0:	mov	w1, #0x50                  	// #80
   19ed4:	bl	cb40 <mpfr_assert_fail@plt>

0000000000019ed8 <mpfr_frexp@@Base>:
   19ed8:	stp	x29, x30, [sp, #-80]!
   19edc:	mov	x29, sp
   19ee0:	stp	x19, x20, [sp, #16]
   19ee4:	mov	x20, x2
   19ee8:	mov	x19, x1
   19eec:	stp	x25, x26, [sp, #64]
   19ef0:	mov	x25, x0
   19ef4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19ef8:	ldr	x2, [x0, #2576]
   19efc:	add	x0, x0, #0xa10
   19f00:	blr	x2
   19f04:	stp	x23, x24, [sp, #48]
   19f08:	mrs	x23, tpidr_el0
   19f0c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   19f10:	ldr	x2, [x20, #16]
   19f14:	stp	x21, x22, [sp, #32]
   19f18:	ldr	w26, [x23, x0]
   19f1c:	add	x24, x23, x0
   19f20:	cmp	x2, x1
   19f24:	b.le	19fe0 <mpfr_frexp@@Base+0x108>
   19f28:	mov	w2, w3
   19f2c:	mov	w22, w3
   19f30:	ldr	w3, [x20, #8]
   19f34:	mov	x1, x20
   19f38:	mov	x0, x19
   19f3c:	str	wzr, [x24]
   19f40:	bl	c6a0 <mpfr_set4@plt>
   19f44:	mov	w21, w0
   19f48:	ldr	w1, [x24]
   19f4c:	str	w26, [x24]
   19f50:	tbnz	w1, #1, 1a014 <mpfr_frexp@@Base+0x13c>
   19f54:	ldr	x0, [x19, #16]
   19f58:	str	x0, [x25]
   19f5c:	str	xzr, [x19, #16]
   19f60:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19f64:	ldr	x1, [x0, #2512]
   19f68:	add	x0, x0, #0x9d0
   19f6c:	blr	x1
   19f70:	ldr	x0, [x23, x0]
   19f74:	cmp	x0, #0x0
   19f78:	b.le	19fa0 <mpfr_frexp@@Base+0xc8>
   19f7c:	mov	w2, w22
   19f80:	mov	w1, w21
   19f84:	mov	x0, x19
   19f88:	ldp	x19, x20, [sp, #16]
   19f8c:	ldp	x21, x22, [sp, #32]
   19f90:	ldp	x23, x24, [sp, #48]
   19f94:	ldp	x25, x26, [sp, #64]
   19f98:	ldp	x29, x30, [sp], #80
   19f9c:	b	cb30 <mpfr_check_range@plt>
   19fa0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   19fa4:	ldr	x1, [x0, #2544]
   19fa8:	add	x0, x0, #0x9f0
   19fac:	blr	x1
   19fb0:	ldr	x0, [x23, x0]
   19fb4:	tbnz	x0, #63, 19f7c <mpfr_frexp@@Base+0xa4>
   19fb8:	cbz	w21, 19fc4 <mpfr_frexp@@Base+0xec>
   19fbc:	orr	w26, w26, #0x8
   19fc0:	str	w26, [x24]
   19fc4:	mov	w0, w21
   19fc8:	ldp	x19, x20, [sp, #16]
   19fcc:	ldp	x21, x22, [sp, #32]
   19fd0:	ldp	x23, x24, [sp, #48]
   19fd4:	ldp	x25, x26, [sp, #64]
   19fd8:	ldp	x29, x30, [sp], #80
   19fdc:	ret
   19fe0:	mov	x0, #0x2                   	// #2
   19fe4:	movk	x0, #0x8000, lsl #48
   19fe8:	cmp	x2, x0
   19fec:	b.eq	1a080 <mpfr_frexp@@Base+0x1a8>  // b.none
   19ff0:	ldr	w0, [x20, #8]
   19ff4:	cmp	x2, x1
   19ff8:	b.eq	1a070 <mpfr_frexp@@Base+0x198>  // b.none
   19ffc:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1a000:	str	w0, [x19, #8]
   1a004:	str	x1, [x19, #16]
   1a008:	mov	w21, #0x0                   	// #0
   1a00c:	str	xzr, [x25]
   1a010:	b	19fc4 <mpfr_frexp@@Base+0xec>
   1a014:	ldr	x2, [x20, #16]
   1a018:	mov	w3, w22
   1a01c:	ldrsw	x1, [x20, #8]
   1a020:	mov	x0, x19
   1a024:	add	x2, x2, #0x1
   1a028:	str	x2, [x25]
   1a02c:	mov	x2, #0xffffffffffffffff    	// #-1
   1a030:	bl	ba80 <mpfr_set_si_2exp@plt>
   1a034:	mov	w1, w0
   1a038:	cbnz	w0, 1a048 <mpfr_frexp@@Base+0x170>
   1a03c:	cbz	w21, 19fc4 <mpfr_frexp@@Base+0xec>
   1a040:	mov	w1, w21
   1a044:	nop
   1a048:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1a04c:	ldr	x2, [x0, #2576]
   1a050:	add	x0, x0, #0xa10
   1a054:	blr	x2
   1a058:	add	x23, x23, x0
   1a05c:	mov	w21, w1
   1a060:	ldr	w0, [x23]
   1a064:	orr	w0, w0, #0x8
   1a068:	str	w0, [x23]
   1a06c:	b	19fc4 <mpfr_frexp@@Base+0xec>
   1a070:	mov	w21, #0x0                   	// #0
   1a074:	str	w0, [x19, #8]
   1a078:	str	x2, [x19, #16]
   1a07c:	b	19fc4 <mpfr_frexp@@Base+0xec>
   1a080:	orr	w26, w26, #0x4
   1a084:	mov	w21, #0x0                   	// #0
   1a088:	str	w26, [x24]
   1a08c:	str	x2, [x19, #16]
   1a090:	b	19fc4 <mpfr_frexp@@Base+0xec>
   1a094:	nop

000000000001a098 <mpfr_get_d@@Base>:
   1a098:	stp	x29, x30, [sp, #-48]!
   1a09c:	mov	w5, w1
   1a0a0:	mov	x4, x0
   1a0a4:	mov	x29, sp
   1a0a8:	stp	x19, x20, [sp, #16]
   1a0ac:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1a0b0:	ldr	x19, [x0, #16]
   1a0b4:	cmp	x19, x1
   1a0b8:	b.le	1a134 <mpfr_get_d@@Base+0x9c>
   1a0bc:	ldr	w20, [x0, #8]
   1a0c0:	cmp	w5, #0x4
   1a0c4:	lsr	w3, w20, #31
   1a0c8:	b.eq	1a15c <mpfr_get_d@@Base+0xc4>  // b.none
   1a0cc:	cmn	x19, #0x431
   1a0d0:	b.lt	1a178 <mpfr_get_d@@Base+0xe0>  // b.tstop
   1a0d4:	cmp	x19, #0x400
   1a0d8:	b.gt	1a1a8 <mpfr_get_d@@Base+0x110>
   1a0dc:	ldr	x2, [x4]
   1a0e0:	cmn	x19, #0x3fd
   1a0e4:	ldr	x1, [x4, #24]
   1a0e8:	mov	x6, #0x35                  	// #53
   1a0ec:	add	w4, w19, #0x432
   1a0f0:	add	x0, sp, #0x28
   1a0f4:	csel	x4, x4, x6, lt  // lt = tstop
   1a0f8:	bl	c720 <mpfr_round_raw_4@plt>
   1a0fc:	cbnz	w0, 1a1c4 <mpfr_get_d@@Base+0x12c>
   1a100:	ldr	d0, [sp, #40]
   1a104:	mov	x0, #0x3bf0000000000000    	// #4318952042648305664
   1a108:	fmov	d1, x0
   1a10c:	ucvtf	d0, d0
   1a110:	fmul	d0, d0, d1
   1a114:	mov	w0, w19
   1a118:	bl	cba0 <mpfr_scale2@plt>
   1a11c:	fneg	d1, d0
   1a120:	cmp	w20, #0x0
   1a124:	fcsel	d0, d1, d0, lt  // lt = tstop
   1a128:	ldp	x19, x20, [sp, #16]
   1a12c:	ldp	x29, x30, [sp], #48
   1a130:	ret
   1a134:	mov	x0, #0x2                   	// #2
   1a138:	movk	x0, #0x8000, lsl #48
   1a13c:	cmp	x19, x0
   1a140:	b.eq	1a22c <mpfr_get_d@@Base+0x194>  // b.none
   1a144:	ldr	w0, [x4, #8]
   1a148:	cmp	x19, x1
   1a14c:	b.eq	1a204 <mpfr_get_d@@Base+0x16c>  // b.none
   1a150:	tbnz	w0, #31, 1a1d8 <mpfr_get_d@@Base+0x140>
   1a154:	movi	d0, #0x0
   1a158:	b	1a128 <mpfr_get_d@@Base+0x90>
   1a15c:	tbnz	w20, #31, 1a214 <mpfr_get_d@@Base+0x17c>
   1a160:	cmn	x19, #0x431
   1a164:	b.lt	1a19c <mpfr_get_d@@Base+0x104>  // b.tstop
   1a168:	cmp	x19, #0x400
   1a16c:	b.gt	1a208 <mpfr_get_d@@Base+0x170>
   1a170:	mov	w5, #0x2                   	// #2
   1a174:	b	1a0dc <mpfr_get_d@@Base+0x44>
   1a178:	tbnz	w20, #31, 1a1cc <mpfr_get_d@@Base+0x134>
   1a17c:	cmp	w5, #0x2
   1a180:	b.eq	1a19c <mpfr_get_d@@Base+0x104>  // b.none
   1a184:	cbnz	w5, 1a154 <mpfr_get_d@@Base+0xbc>
   1a188:	mov	x2, #0xfffffffffffffbcd    	// #-1075
   1a18c:	mov	x1, #0x1                   	// #1
   1a190:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   1a194:	cmp	w0, #0x0
   1a198:	b.le	1a154 <mpfr_get_d@@Base+0xbc>
   1a19c:	mov	x0, #0x1                   	// #1
   1a1a0:	fmov	d0, x0
   1a1a4:	b	1a128 <mpfr_get_d@@Base+0x90>
   1a1a8:	tbnz	w20, #31, 1a1e4 <mpfr_get_d@@Base+0x14c>
   1a1ac:	and	w5, w5, #0xfffffffd
   1a1b0:	cmp	w5, #0x1
   1a1b4:	b.ne	1a208 <mpfr_get_d@@Base+0x170>  // b.any
   1a1b8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   1a1bc:	fmov	d0, x0
   1a1c0:	b	1a128 <mpfr_get_d@@Base+0x90>
   1a1c4:	fmov	d0, #1.000000000000000000e+00
   1a1c8:	b	1a114 <mpfr_get_d@@Base+0x7c>
   1a1cc:	cmp	w5, #0x3
   1a1d0:	b.eq	1a248 <mpfr_get_d@@Base+0x1b0>  // b.none
   1a1d4:	cbz	w5, 1a238 <mpfr_get_d@@Base+0x1a0>
   1a1d8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1a1dc:	fmov	d0, x0
   1a1e0:	b	1a128 <mpfr_get_d@@Base+0x90>
   1a1e4:	sub	w5, w5, #0x1
   1a1e8:	mov	x0, #0xffefffffffffffff    	// #-4503599627370497
   1a1ec:	cmp	w5, #0x1
   1a1f0:	fmov	d0, x0
   1a1f4:	b.ls	1a128 <mpfr_get_d@@Base+0x90>  // b.plast
   1a1f8:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   1a1fc:	ldr	d0, [x0, #3832]
   1a200:	b	1a128 <mpfr_get_d@@Base+0x90>
   1a204:	tbnz	w0, #31, 1a1f8 <mpfr_get_d@@Base+0x160>
   1a208:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   1a20c:	ldr	d0, [x0, #3840]
   1a210:	b	1a128 <mpfr_get_d@@Base+0x90>
   1a214:	cmn	x19, #0x431
   1a218:	b.lt	1a248 <mpfr_get_d@@Base+0x1b0>  // b.tstop
   1a21c:	cmp	x19, #0x400
   1a220:	b.gt	1a1f8 <mpfr_get_d@@Base+0x160>
   1a224:	mov	w5, #0x3                   	// #3
   1a228:	b	1a0dc <mpfr_get_d@@Base+0x44>
   1a22c:	movi	d0, #0x0
   1a230:	fdiv	d0, d0, d0
   1a234:	b	1a128 <mpfr_get_d@@Base+0x90>
   1a238:	mov	x2, #0xfffffffffffffbcd    	// #-1075
   1a23c:	mov	x1, #0xffffffffffffffff    	// #-1
   1a240:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   1a244:	tbz	w0, #31, 1a1d8 <mpfr_get_d@@Base+0x140>
   1a248:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1a24c:	fmov	d0, x0
   1a250:	b	1a128 <mpfr_get_d@@Base+0x90>
   1a254:	nop

000000000001a258 <mpfr_get_d1@@Base>:
   1a258:	stp	x29, x30, [sp, #-16]!
   1a25c:	mov	x2, x0
   1a260:	mrs	x1, tpidr_el0
   1a264:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1a268:	ldr	x3, [x0, #2640]
   1a26c:	add	x0, x0, #0xa50
   1a270:	blr	x3
   1a274:	mov	x29, sp
   1a278:	ldp	x29, x30, [sp], #16
   1a27c:	ldr	w1, [x1, x0]
   1a280:	mov	x0, x2
   1a284:	b	bd30 <mpfr_get_d@plt>

000000000001a288 <mpfr_get_d_2exp@@Base>:
   1a288:	stp	x29, x30, [sp, #-96]!
   1a28c:	mov	x29, sp
   1a290:	stp	x19, x20, [sp, #16]
   1a294:	mov	x20, x0
   1a298:	mov	x19, x1
   1a29c:	ldr	x0, [x1, #16]
   1a2a0:	str	x21, [sp, #32]
   1a2a4:	mov	x21, #0x8000000000000003    	// #-9223372036854775805
   1a2a8:	cmp	x0, x21
   1a2ac:	b.le	1a378 <mpfr_get_d_2exp@@Base+0xf0>
   1a2b0:	ldr	w3, [x19, #8]
   1a2b4:	mov	w1, w2
   1a2b8:	ldr	x4, [x19]
   1a2bc:	add	x0, sp, #0x40
   1a2c0:	ldr	x2, [x19, #24]
   1a2c4:	str	x4, [sp, #64]
   1a2c8:	str	w3, [sp, #72]
   1a2cc:	stp	xzr, x2, [sp, #80]
   1a2d0:	bl	bd30 <mpfr_get_d@plt>
   1a2d4:	ldr	x19, [x19, #16]
   1a2d8:	cmp	x19, x21
   1a2dc:	b.le	1a308 <mpfr_get_d_2exp@@Base+0x80>
   1a2e0:	fmov	d1, #1.000000000000000000e+00
   1a2e4:	fcmp	d0, d1
   1a2e8:	b.ne	1a310 <mpfr_get_d_2exp@@Base+0x88>  // b.any
   1a2ec:	add	x19, x19, #0x1
   1a2f0:	fmov	d0, #5.000000000000000000e-01
   1a2f4:	str	x19, [x20]
   1a2f8:	ldp	x19, x20, [sp, #16]
   1a2fc:	ldr	x21, [sp, #32]
   1a300:	ldp	x29, x30, [sp], #96
   1a304:	ret
   1a308:	mov	x19, #0x0                   	// #0
   1a30c:	b	1a2f4 <mpfr_get_d_2exp@@Base+0x6c>
   1a310:	fmov	d2, #-1.000000000000000000e+00
   1a314:	fcmp	d0, d2
   1a318:	b.eq	1a36c <mpfr_get_d_2exp@@Base+0xe4>  // b.none
   1a31c:	fmov	d2, #5.000000000000000000e-01
   1a320:	fcmpe	d0, d2
   1a324:	b.lt	1a330 <mpfr_get_d_2exp@@Base+0xa8>  // b.tstop
   1a328:	fcmpe	d0, d1
   1a32c:	b.mi	1a2f4 <mpfr_get_d_2exp@@Base+0x6c>  // b.first
   1a330:	fmov	d1, #-5.000000000000000000e-01
   1a334:	fcmpe	d0, d1
   1a338:	b.hi	1a348 <mpfr_get_d_2exp@@Base+0xc0>  // b.pmore
   1a33c:	fmov	d1, #-1.000000000000000000e+00
   1a340:	fcmpe	d0, d1
   1a344:	b.gt	1a2f4 <mpfr_get_d_2exp@@Base+0x6c>
   1a348:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   1a34c:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   1a350:	add	x2, x2, #0xeb0
   1a354:	add	x0, x0, #0xef0
   1a358:	mov	w1, #0xad                  	// #173
   1a35c:	str	d0, [sp, #56]
   1a360:	bl	cb40 <mpfr_assert_fail@plt>
   1a364:	ldr	d0, [sp, #56]
   1a368:	b	1a2f4 <mpfr_get_d_2exp@@Base+0x6c>
   1a36c:	add	x19, x19, #0x1
   1a370:	fmov	d0, #-5.000000000000000000e-01
   1a374:	b	1a2f4 <mpfr_get_d_2exp@@Base+0x6c>
   1a378:	str	xzr, [x20]
   1a37c:	mov	x1, #0x2                   	// #2
   1a380:	movk	x1, #0x8000, lsl #48
   1a384:	ldr	x0, [x19, #16]
   1a388:	cmp	x0, x1
   1a38c:	b.eq	1a3c4 <mpfr_get_d_2exp@@Base+0x13c>  // b.none
   1a390:	cmp	x0, x21
   1a394:	ldr	w0, [x19, #8]
   1a398:	b.eq	1a3b4 <mpfr_get_d_2exp@@Base+0x12c>  // b.none
   1a39c:	movi	d1, #0x0
   1a3a0:	cmp	w0, #0x0
   1a3a4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1a3a8:	fmov	d0, x0
   1a3ac:	fcsel	d0, d0, d1, lt  // lt = tstop
   1a3b0:	b	1a2f8 <mpfr_get_d_2exp@@Base+0x70>
   1a3b4:	tbnz	w0, #31, 1a3d0 <mpfr_get_d_2exp@@Base+0x148>
   1a3b8:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   1a3bc:	ldr	d0, [x0, #3840]
   1a3c0:	b	1a2f8 <mpfr_get_d_2exp@@Base+0x70>
   1a3c4:	movi	d0, #0x0
   1a3c8:	fdiv	d0, d0, d0
   1a3cc:	b	1a2f8 <mpfr_get_d_2exp@@Base+0x70>
   1a3d0:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   1a3d4:	ldr	d0, [x0, #3832]
   1a3d8:	b	1a2f8 <mpfr_get_d_2exp@@Base+0x70>
   1a3dc:	nop

000000000001a3e0 <mpfr_get_exp@@Base>:
   1a3e0:	stp	x29, x30, [sp, #-32]!
   1a3e4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1a3e8:	mov	x29, sp
   1a3ec:	str	x19, [sp, #16]
   1a3f0:	mov	x19, x0
   1a3f4:	ldr	x0, [x0, #16]
   1a3f8:	cmp	x0, x1
   1a3fc:	b.le	1a40c <mpfr_get_exp@@Base+0x2c>
   1a400:	ldr	x19, [sp, #16]
   1a404:	ldp	x29, x30, [sp], #32
   1a408:	ret
   1a40c:	mov	w1, #0x1d                  	// #29
   1a410:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   1a414:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1a418:	add	x2, x2, #0xf08
   1a41c:	add	x0, x0, #0x7b8
   1a420:	bl	cb40 <mpfr_assert_fail@plt>
   1a424:	ldr	x0, [x19, #16]
   1a428:	ldr	x19, [sp, #16]
   1a42c:	ldp	x29, x30, [sp], #32
   1a430:	ret
   1a434:	nop
   1a438:	stp	x29, x30, [sp, #-128]!
   1a43c:	cmp	x4, #0x0
   1a440:	mov	x29, sp
   1a444:	stp	x19, x20, [sp, #16]
   1a448:	stp	x21, x22, [sp, #32]
   1a44c:	stp	x23, x24, [sp, #48]
   1a450:	stp	x25, x26, [sp, #64]
   1a454:	stp	x27, x28, [sp, #80]
   1a458:	str	x1, [x29, #104]
   1a45c:	b.gt	1a75c <mpfr_get_exp@@Base+0x37c>
   1a460:	mov	x26, x0
   1a464:	neg	x0, x3, lsl #6
   1a468:	mov	x20, x4
   1a46c:	mov	x21, x3
   1a470:	cmp	x0, x4
   1a474:	b.ge	1a744 <mpfr_get_exp@@Base+0x364>  // b.tcont
   1a478:	mov	x23, x5
   1a47c:	sub	w5, w6, #0x2
   1a480:	cmp	w5, #0x23
   1a484:	adrp	x4, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1a488:	add	x4, x4, #0x878
   1a48c:	str	xzr, [x29, #120]
   1a490:	add	x27, x4, #0x28
   1a494:	lsl	x22, x3, #6
   1a498:	mov	x24, x2
   1a49c:	mov	w28, w6
   1a4a0:	mov	x19, x7
   1a4a4:	csel	x27, x4, x27, cc  // cc = lo, ul, last
   1a4a8:	add	x25, x20, x22
   1a4ac:	tbnz	x23, #63, 1a4d0 <mpfr_get_exp@@Base+0xf0>
   1a4b0:	ldr	w0, [x29, #128]
   1a4b4:	mov	x1, x3
   1a4b8:	sub	x2, x22, x23
   1a4bc:	cmp	w0, #0x0
   1a4c0:	mov	x0, x24
   1a4c4:	cinc	x3, x25, eq  // eq = none
   1a4c8:	bl	c370 <mpfr_round_p@plt>
   1a4cc:	cbz	w0, 1a5f4 <mpfr_get_exp@@Base+0x214>
   1a4d0:	cmp	x20, #0x0
   1a4d4:	add	x0, x20, #0x3f
   1a4d8:	csel	x0, x0, x20, lt  // lt = tstop
   1a4dc:	mov	x2, x22
   1a4e0:	ldr	w5, [x29, #128]
   1a4e4:	mov	x4, x25
   1a4e8:	neg	x22, x0, asr #6
   1a4ec:	mov	x1, x24
   1a4f0:	neg	x20, x20
   1a4f4:	add	x6, x29, #0x74
   1a4f8:	lsl	x9, x22, #3
   1a4fc:	mov	w3, #0x0                   	// #0
   1a500:	add	x25, x24, x9
   1a504:	str	x9, [x29, #96]
   1a508:	mov	x0, x25
   1a50c:	and	x20, x20, #0x3f
   1a510:	bl	ca20 <mpfr_round_raw@plt>
   1a514:	sxtw	x1, w0
   1a518:	ldr	x9, [x29, #96]
   1a51c:	cbnz	w0, 1a5d0 <mpfr_get_exp@@Base+0x1f0>
   1a520:	sub	x21, x21, x22
   1a524:	cbnz	x20, 1a6ec <mpfr_get_exp@@Base+0x30c>
   1a528:	add	x1, x19, #0x3
   1a52c:	cmp	x1, #0x4, lsl #12
   1a530:	b.hi	1a704 <mpfr_get_exp@@Base+0x324>  // b.pmore
   1a534:	add	x0, x19, #0x12
   1a538:	and	x0, x0, #0xfffffffffffffff0
   1a53c:	sub	sp, sp, x0
   1a540:	mov	x20, sp
   1a544:	cmp	w28, #0x0
   1a548:	mov	x3, x21
   1a54c:	cneg	w28, w28, lt  // lt = tstop
   1a550:	mov	x2, x25
   1a554:	mov	w1, w28
   1a558:	mov	x0, x20
   1a55c:	bl	c5e0 <__gmpn_get_str@plt>
   1a560:	cmp	x19, x0
   1a564:	b.hi	1a774 <mpfr_get_exp@@Base+0x394>  // b.pmore
   1a568:	ldr	x2, [x29, #104]
   1a56c:	sub	x1, x0, x19
   1a570:	str	x1, [x2]
   1a574:	add	x1, x19, #0x1
   1a578:	cmp	x1, x0
   1a57c:	b.eq	1a60c <mpfr_get_exp@@Base+0x22c>  // b.none
   1a580:	mov	x1, #0x0                   	// #0
   1a584:	cbz	x19, 1a5a0 <mpfr_get_exp@@Base+0x1c0>
   1a588:	ldrb	w2, [x20, x1]
   1a58c:	ldrb	w2, [x27, x2]
   1a590:	strb	w2, [x26, x1]
   1a594:	add	x1, x1, #0x1
   1a598:	cmp	x19, x1
   1a59c:	b.ne	1a588 <mpfr_get_exp@@Base+0x1a8>  // b.any
   1a5a0:	strb	wzr, [x26, x19]
   1a5a4:	ldr	x0, [x29, #120]
   1a5a8:	cbnz	x0, 1a604 <mpfr_get_exp@@Base+0x224>
   1a5ac:	ldr	w0, [x29, #116]
   1a5b0:	mov	sp, x29
   1a5b4:	ldp	x19, x20, [sp, #16]
   1a5b8:	ldp	x21, x22, [sp, #32]
   1a5bc:	ldp	x23, x24, [sp, #48]
   1a5c0:	ldp	x25, x26, [sp, #64]
   1a5c4:	ldp	x27, x28, [sp, #80]
   1a5c8:	ldp	x29, x30, [sp], #128
   1a5cc:	ret
   1a5d0:	lsl	x0, x21, #3
   1a5d4:	sub	x0, x0, #0x8
   1a5d8:	cbz	x20, 1a640 <mpfr_get_exp@@Base+0x260>
   1a5dc:	sub	w20, w20, #0x1
   1a5e0:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   1a5e4:	sub	x21, x21, x22
   1a5e8:	lsr	x20, x1, x20
   1a5ec:	str	x20, [x24, x0]
   1a5f0:	b	1a528 <mpfr_get_exp@@Base+0x148>
   1a5f4:	mov	w0, #0x3                   	// #3
   1a5f8:	str	w0, [x29, #116]
   1a5fc:	ldr	x0, [x29, #120]
   1a600:	cbz	x0, 1a5ac <mpfr_get_exp@@Base+0x1cc>
   1a604:	bl	c410 <mpfr_tmp_free@plt>
   1a608:	b	1a5ac <mpfr_get_exp@@Base+0x1cc>
   1a60c:	ldr	w1, [x29, #116]
   1a610:	cbz	w1, 1a65c <mpfr_get_exp@@Base+0x27c>
   1a614:	ldr	w2, [x29, #128]
   1a618:	cbnz	w2, 1a680 <mpfr_get_exp@@Base+0x2a0>
   1a61c:	add	x3, x20, x0
   1a620:	ldurb	w2, [x3, #-1]
   1a624:	lsl	w4, w2, #1
   1a628:	cmp	w4, w28
   1a62c:	b.eq	1a714 <mpfr_get_exp@@Base+0x334>  // b.none
   1a630:	b.ge	1a698 <mpfr_get_exp@@Base+0x2b8>  // b.tcont
   1a634:	mov	w0, #0xffffffff            	// #-1
   1a638:	str	w0, [x29, #116]
   1a63c:	b	1a580 <mpfr_get_exp@@Base+0x1a0>
   1a640:	sub	x9, x9, #0x8
   1a644:	sub	x22, x22, #0x1
   1a648:	str	x1, [x24, x0]
   1a64c:	add	x25, x24, x9
   1a650:	sub	x21, x21, x22
   1a654:	str	xzr, [x24, x9]
   1a658:	b	1a528 <mpfr_get_exp@@Base+0x148>
   1a65c:	add	x2, x20, x0
   1a660:	ldurb	w2, [x2, #-1]
   1a664:	cbz	w2, 1a580 <mpfr_get_exp@@Base+0x1a0>
   1a668:	b	1a614 <mpfr_get_exp@@Base+0x234>
   1a66c:	ldurb	w1, [x3, #-2]
   1a670:	mov	w25, #0x3                   	// #3
   1a674:	and	w1, w1, #0x1
   1a678:	sub	w1, w25, w1
   1a67c:	str	w1, [x29, #128]
   1a680:	ldr	w1, [x29, #128]
   1a684:	sub	w25, w1, #0x2
   1a688:	tst	w25, #0xfffffffd
   1a68c:	b.ne	1a634 <mpfr_get_exp@@Base+0x254>  // b.any
   1a690:	add	x1, x20, x0
   1a694:	ldurb	w2, [x1, #-1]
   1a698:	cbz	w2, 1a6e0 <mpfr_get_exp@@Base+0x300>
   1a69c:	cmp	x0, #0x1
   1a6a0:	b.ls	1a72c <mpfr_get_exp@@Base+0x34c>  // b.plast
   1a6a4:	sub	x2, x0, #0x2
   1a6a8:	sub	w28, w28, #0x1
   1a6ac:	add	x1, x20, x2
   1a6b0:	ldrb	w0, [x20, x2]
   1a6b4:	cmp	w0, w28
   1a6b8:	b.ne	1a6d8 <mpfr_get_exp@@Base+0x2f8>  // b.any
   1a6bc:	add	x3, x20, #0x1
   1a6c0:	sub	x2, x2, #0x1
   1a6c4:	add	x1, x20, x2
   1a6c8:	strb	wzr, [x3, x2]
   1a6cc:	ldrb	w0, [x20, x2]
   1a6d0:	cmp	w28, w0
   1a6d4:	b.eq	1a6c0 <mpfr_get_exp@@Base+0x2e0>  // b.none
   1a6d8:	add	w0, w0, #0x1
   1a6dc:	strb	w0, [x1]
   1a6e0:	mov	w0, #0x1                   	// #1
   1a6e4:	str	w0, [x29, #116]
   1a6e8:	b	1a580 <mpfr_get_exp@@Base+0x1a0>
   1a6ec:	mov	w3, w20
   1a6f0:	mov	x2, x21
   1a6f4:	mov	x1, x25
   1a6f8:	mov	x0, x25
   1a6fc:	bl	bce0 <__gmpn_rshift@plt>
   1a700:	b	1a528 <mpfr_get_exp@@Base+0x148>
   1a704:	add	x0, x29, #0x78
   1a708:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1a70c:	mov	x20, x0
   1a710:	b	1a544 <mpfr_get_exp@@Base+0x164>
   1a714:	cmp	x23, #0x0
   1a718:	ccmp	w1, #0x0, #0x0, lt  // lt = tstop
   1a71c:	b.eq	1a66c <mpfr_get_exp@@Base+0x28c>  // b.none
   1a720:	mov	w0, #0xfffffffd            	// #-3
   1a724:	str	w0, [x29, #116]
   1a728:	b	1a5a4 <mpfr_get_exp@@Base+0x1c4>
   1a72c:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1a730:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1a734:	add	x2, x2, #0x808
   1a738:	add	x0, x0, #0x7d0
   1a73c:	mov	w1, #0xd2                  	// #210
   1a740:	bl	cb40 <mpfr_assert_fail@plt>
   1a744:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1a748:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1a74c:	add	x2, x2, #0x7e0
   1a750:	add	x0, x0, #0x7d0
   1a754:	mov	w1, #0x64                  	// #100
   1a758:	bl	cb40 <mpfr_assert_fail@plt>
   1a75c:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1a760:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1a764:	add	x2, x2, #0x7c8
   1a768:	add	x0, x0, #0x7d0
   1a76c:	mov	w1, #0x62                  	// #98
   1a770:	bl	cb40 <mpfr_assert_fail@plt>
   1a774:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1a778:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1a77c:	add	x2, x2, #0x7f8
   1a780:	add	x0, x0, #0x7d0
   1a784:	mov	w1, #0x9d                  	// #157
   1a788:	bl	cb40 <mpfr_assert_fail@plt>
   1a78c:	nop

000000000001a790 <mpfr_ceil_mul@@Base>:
   1a790:	stp	x29, x30, [sp, #-96]!
   1a794:	mov	x6, #0x3f                  	// #63
   1a798:	mov	w5, #0x1                   	// #1
   1a79c:	add	x4, sp, #0x38
   1a7a0:	mov	x29, sp
   1a7a4:	mov	w3, #0x2                   	// #2
   1a7a8:	stp	x19, x20, [sp, #16]
   1a7ac:	add	x20, sp, #0x40
   1a7b0:	mov	w19, w1
   1a7b4:	mov	x1, x0
   1a7b8:	mov	x0, x20
   1a7bc:	stp	x21, x22, [sp, #32]
   1a7c0:	mov	w22, w3
   1a7c4:	sxtw	x21, w2
   1a7c8:	mov	x2, #0x0                   	// #0
   1a7cc:	str	x6, [sp, #64]
   1a7d0:	str	w5, [sp, #72]
   1a7d4:	sub	w19, w19, #0x2
   1a7d8:	str	x4, [sp, #88]
   1a7dc:	bl	ba80 <mpfr_set_si_2exp@plt>
   1a7e0:	adrp	x2, 7f000 <__gmpfr_l2b@@Base+0x200>
   1a7e4:	add	x19, x21, w19, sxtw #1
   1a7e8:	mov	w3, w22
   1a7ec:	mov	x1, x20
   1a7f0:	ldr	x2, [x2, #4016]
   1a7f4:	mov	x0, x20
   1a7f8:	add	x2, x2, x19, lsl #5
   1a7fc:	bl	bd50 <mpfr_mul@plt>
   1a800:	mov	w1, w22
   1a804:	mov	x0, x20
   1a808:	bl	c190 <mpfr_get_si@plt>
   1a80c:	ldp	x19, x20, [sp, #16]
   1a810:	ldp	x21, x22, [sp, #32]
   1a814:	ldp	x29, x30, [sp], #96
   1a818:	ret
   1a81c:	nop

000000000001a820 <mpfr_get_str@@Base>:
   1a820:	stp	x29, x30, [sp, #-272]!
   1a824:	cmn	w2, #0x24
   1a828:	mov	x29, sp
   1a82c:	stp	x19, x20, [sp, #16]
   1a830:	stp	x21, x22, [sp, #32]
   1a834:	stp	x23, x24, [sp, #48]
   1a838:	stp	x25, x26, [sp, #64]
   1a83c:	stp	x27, x28, [sp, #80]
   1a840:	sub	sp, sp, #0x10
   1a844:	str	x0, [x29, #168]
   1a848:	str	w2, [x29, #208]
   1a84c:	str	x1, [x29, #216]
   1a850:	b.lt	1ac8c <mpfr_get_str@@Base+0x46c>  // b.tstop
   1a854:	cmp	w2, #0x3e
   1a858:	add	w0, w2, #0x1
   1a85c:	mov	x21, x3
   1a860:	ccmp	w0, #0x2, #0x0, le
   1a864:	mov	w3, w2
   1a868:	b.ls	1ac8c <mpfr_get_str@@Base+0x46c>  // b.plast
   1a86c:	sub	w1, w2, #0x2
   1a870:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1a874:	add	x0, x0, #0x878
   1a878:	cmp	w1, #0x23
   1a87c:	add	x27, x0, #0x28
   1a880:	mov	x2, #0x2                   	// #2
   1a884:	csel	x27, x0, x27, cc  // cc = lo, ul, last
   1a888:	cmp	w3, #0x0
   1a88c:	cneg	w0, w3, lt  // lt = tstop
   1a890:	cmp	w5, #0x5
   1a894:	ldr	x1, [x4, #16]
   1a898:	str	w0, [x29, #192]
   1a89c:	csel	w0, w5, wzr, ne  // ne = any
   1a8a0:	str	w0, [x29, #196]
   1a8a4:	movk	x2, #0x8000, lsl #48
   1a8a8:	mov	x23, x4
   1a8ac:	cmp	x1, x2
   1a8b0:	b.eq	1b380 <mpfr_get_str@@Base+0xb60>  // b.none
   1a8b4:	ldr	w19, [x4, #8]
   1a8b8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1a8bc:	cmp	x1, x0
   1a8c0:	lsr	w20, w19, #31
   1a8c4:	b.eq	1ad18 <mpfr_get_str@@Base+0x4f8>  // b.none
   1a8c8:	mrs	x4, tpidr_el0
   1a8cc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1a8d0:	ldr	x1, [x0, #2576]
   1a8d4:	add	x0, x0, #0xa10
   1a8d8:	blr	x1
   1a8dc:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   1a8e0:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   1a8e4:	str	x4, [x29, #96]
   1a8e8:	ldr	w0, [x4, x0]
   1a8ec:	str	w0, [x29, #124]
   1a8f0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1a8f4:	ldr	x2, [x0, #2512]
   1a8f8:	add	x0, x0, #0x9d0
   1a8fc:	blr	x2
   1a900:	add	x2, x4, x0
   1a904:	ldr	x0, [x4, x0]
   1a908:	str	x0, [x29, #112]
   1a90c:	str	x3, [x2]
   1a910:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1a914:	ldr	x5, [x0, #2544]
   1a918:	add	x0, x0, #0x9f0
   1a91c:	blr	x5
   1a920:	ldr	x2, [x4, x0]
   1a924:	str	x1, [x4, x0]
   1a928:	str	x2, [x29, #104]
   1a92c:	cbnz	x21, 1a954 <mpfr_get_str@@Base+0x134>
   1a930:	ldr	w1, [x29, #192]
   1a934:	mov	w2, #0x1                   	// #1
   1a938:	ldr	x3, [x23]
   1a93c:	sub	w0, w1, #0x1
   1a940:	tst	w0, w1
   1a944:	cset	x0, eq  // eq = none
   1a948:	sub	x0, x3, x0
   1a94c:	bl	cb80 <mpfr_ceil_mul@plt>
   1a950:	add	x21, x0, #0x1
   1a954:	ldr	x0, [x29, #168]
   1a958:	cbz	x0, 1b368 <mpfr_get_str@@Base+0xb48>
   1a95c:	ldr	x0, [x29, #168]
   1a960:	str	x0, [x29, #200]
   1a964:	tbz	w19, #31, 1a978 <mpfr_get_str@@Base+0x158>
   1a968:	mov	x1, x0
   1a96c:	mov	w0, #0x2d                  	// #45
   1a970:	strb	w0, [x1], #1
   1a974:	str	x1, [x29, #200]
   1a978:	ldr	x0, [x23, #16]
   1a97c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1a980:	cmp	x0, x1
   1a984:	b.eq	1b3d8 <mpfr_get_str@@Base+0xbb8>  // b.none
   1a988:	ldr	w1, [x29, #192]
   1a98c:	sub	w3, w1, #0x1
   1a990:	ands	w3, w3, w1
   1a994:	ldr	x1, [x23, #24]
   1a998:	str	x1, [x29, #232]
   1a99c:	b.eq	1b160 <mpfr_get_str@@Base+0x940>  // b.none
   1a9a0:	tbnz	w19, #31, 1acf8 <mpfr_get_str@@Base+0x4d8>
   1a9a4:	ldr	w19, [x29, #192]
   1a9a8:	mov	w2, #0x1                   	// #1
   1a9ac:	sub	x0, x0, #0x1
   1a9b0:	mov	w1, w19
   1a9b4:	bl	cb80 <mpfr_ceil_mul@plt>
   1a9b8:	mov	w1, w19
   1a9bc:	mov	x20, x0
   1a9c0:	mov	w2, #0x0                   	// #0
   1a9c4:	mov	x0, x21
   1a9c8:	bl	cb80 <mpfr_ceil_mul@plt>
   1a9cc:	add	x1, x0, #0x1
   1a9d0:	str	x1, [x29, #240]
   1a9d4:	cmp	x21, x20
   1a9d8:	b.lt	1acb4 <mpfr_get_str@@Base+0x494>  // b.tstop
   1a9dc:	ldr	x1, [x29, #240]
   1a9e0:	cmp	x1, #0x1
   1a9e4:	sub	x1, x21, x20
   1a9e8:	str	x1, [x29, #248]
   1a9ec:	b.eq	1aa14 <mpfr_get_str@@Base+0x1f4>  // b.none
   1a9f0:	ldr	x1, [x29, #240]
   1a9f4:	cmp	x1, #0x1
   1a9f8:	b.le	1b4e8 <mpfr_get_str@@Base+0xcc8>
   1a9fc:	mov	w1, #0x40                  	// #64
   1aa00:	clz	x0, x0
   1aa04:	sub	w0, w1, w0
   1aa08:	ldr	x1, [x29, #240]
   1aa0c:	add	x0, x1, w0, sxtw
   1aa10:	str	x0, [x29, #240]
   1aa14:	ldr	x0, [x29, #248]
   1aa18:	cbnz	x0, 1acc8 <mpfr_get_str@@Base+0x4a8>
   1aa1c:	ldr	x0, [x29, #240]
   1aa20:	sub	x0, x0, #0x1
   1aa24:	str	x0, [x29, #224]
   1aa28:	add	x0, x29, #0x108
   1aa2c:	str	x0, [x29, #136]
   1aa30:	add	x0, x29, #0x100
   1aa34:	str	x0, [x29, #176]
   1aa38:	mov	x0, #0x40                  	// #64
   1aa3c:	str	x0, [x29, #184]
   1aa40:	ldr	x0, [x29, #224]
   1aa44:	str	xzr, [x29, #264]
   1aa48:	asr	x26, x0, #6
   1aa4c:	add	x25, x26, #0x1
   1aa50:	lsl	x22, x25, #3
   1aa54:	cmp	x22, #0x4, lsl #12
   1aa58:	b.hi	1abfc <mpfr_get_str@@Base+0x3dc>  // b.pmore
   1aa5c:	ldr	x19, [x23]
   1aa60:	add	x0, x22, #0xf
   1aa64:	and	x0, x0, #0xfffffffffffffff0
   1aa68:	cmp	x20, x21
   1aa6c:	sub	x19, x19, #0x1
   1aa70:	sub	sp, sp, x0
   1aa74:	add	x24, sp, #0x10
   1aa78:	asr	x19, x19, #6
   1aa7c:	add	x28, x19, #0x1
   1aa80:	b.eq	1ac28 <mpfr_get_str@@Base+0x408>  // b.none
   1aa84:	cmp	x21, x20
   1aa88:	b.le	1ad90 <mpfr_get_str@@Base+0x570>
   1aa8c:	ldr	w2, [x29, #192]
   1aa90:	mov	x4, x25
   1aa94:	ldr	x1, [x29, #176]
   1aa98:	mov	x0, x24
   1aa9c:	ldr	x3, [x29, #248]
   1aaa0:	sub	x19, x19, x26
   1aaa4:	bl	cbe0 <mpfr_mpn_exp@plt>
   1aaa8:	mov	x27, x0
   1aaac:	ldr	x1, [x29, #232]
   1aab0:	cmp	x25, x28
   1aab4:	csel	x4, x25, x28, ls  // ls = plast
   1aab8:	add	x26, x1, x19, lsl #3
   1aabc:	csel	x26, x26, x1, ls  // ls = plast
   1aac0:	b.cc	1b030 <mpfr_get_str@@Base+0x810>  // b.lo, b.ul, b.last
   1aac4:	cmn	x0, #0x1
   1aac8:	cset	w8, eq  // eq = none
   1aacc:	add	x28, x25, x4
   1aad0:	cmp	x27, #0x0
   1aad4:	csinc	x27, x27, xzr, gt
   1aad8:	lsl	x28, x28, #3
   1aadc:	add	x27, x27, #0x1
   1aae0:	cmp	x28, #0x4, lsl #12
   1aae4:	b.hi	1b078 <mpfr_get_str@@Base+0x858>  // b.pmore
   1aae8:	add	x0, x28, #0xf
   1aaec:	and	x0, x0, #0xfffffffffffffff0
   1aaf0:	sub	sp, sp, x0
   1aaf4:	add	x19, sp, #0x10
   1aaf8:	mov	x3, x26
   1aafc:	mov	x2, x25
   1ab00:	mov	x1, x24
   1ab04:	mov	x0, x19
   1ab08:	str	w8, [x29, #144]
   1ab0c:	add	x28, x19, x28
   1ab10:	str	x4, [x29, #160]
   1ab14:	bl	c7a0 <__gmpn_mul@plt>
   1ab18:	ldr	x4, [x29, #160]
   1ab1c:	mov	x0, x19
   1ab20:	ldr	x2, [x29, #256]
   1ab24:	mov	x1, #0x0                   	// #0
   1ab28:	add	x5, x19, x4, lsl #3
   1ab2c:	stp	x4, x5, [x29, #152]
   1ab30:	ldr	x26, [x23, #16]
   1ab34:	add	x26, x26, x2
   1ab38:	str	x26, [x29, #256]
   1ab3c:	bl	caa0 <__gmpn_scan1@plt>
   1ab40:	ldp	x4, x5, [x29, #152]
   1ab44:	ldr	w8, [x29, #144]
   1ab48:	cmp	x0, x4, lsl #6
   1ab4c:	ldur	x0, [x28, #-8]
   1ab50:	csel	w8, w8, wzr, cs  // cs = hs, nlast
   1ab54:	tbz	x0, #63, 1b09c <mpfr_get_str@@Base+0x87c>
   1ab58:	cmp	x5, x24
   1ab5c:	b.eq	1ab7c <mpfr_get_str@@Base+0x35c>  // b.none
   1ab60:	mov	x2, x22
   1ab64:	mov	x1, x5
   1ab68:	mov	x0, x24
   1ab6c:	str	w8, [x29, #160]
   1ab70:	bl	ba10 <memcpy@plt>
   1ab74:	ldr	w8, [x29, #160]
   1ab78:	ldr	x26, [x29, #256]
   1ab7c:	cbnz	w8, 1ac84 <mpfr_get_str@@Base+0x464>
   1ab80:	ldr	w0, [x29, #196]
   1ab84:	mov	x5, x27
   1ab88:	ldr	w6, [x29, #208]
   1ab8c:	mov	x4, x26
   1ab90:	str	w0, [sp]
   1ab94:	mov	x3, x25
   1ab98:	ldr	x0, [x29, #200]
   1ab9c:	mov	x2, x24
   1aba0:	ldr	x1, [x29, #216]
   1aba4:	mov	x7, x21
   1aba8:	bl	1a438 <mpfr_get_exp@@Base+0x58>
   1abac:	mov	w19, w0
   1abb0:	ldr	x1, [x29, #264]
   1abb4:	cbnz	x1, 1b0dc <mpfr_get_str@@Base+0x8bc>
   1abb8:	cmp	w19, #0x3
   1abbc:	b.eq	1ad4c <mpfr_get_str@@Base+0x52c>  // b.none
   1abc0:	cmn	w19, #0x3
   1abc4:	b.ne	1b0f0 <mpfr_get_str@@Base+0x8d0>  // b.any
   1abc8:	cmp	x21, x20
   1abcc:	add	x20, x20, #0x1
   1abd0:	ldr	x0, [x29, #248]
   1abd4:	b.le	1aee0 <mpfr_get_str@@Base+0x6c0>
   1abd8:	sub	x0, x0, #0x1
   1abdc:	str	x0, [x29, #248]
   1abe0:	ldr	x0, [x29, #224]
   1abe4:	str	xzr, [x29, #264]
   1abe8:	asr	x26, x0, #6
   1abec:	add	x25, x26, #0x1
   1abf0:	lsl	x22, x25, #3
   1abf4:	cmp	x22, #0x4, lsl #12
   1abf8:	b.ls	1aa5c <mpfr_get_str@@Base+0x23c>  // b.plast
   1abfc:	ldr	x0, [x29, #136]
   1ac00:	mov	x1, x22
   1ac04:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1ac08:	mov	x24, x0
   1ac0c:	ldr	x19, [x23]
   1ac10:	cmp	x20, x21
   1ac14:	sub	x19, x19, #0x1
   1ac18:	asr	x19, x19, #6
   1ac1c:	add	x28, x19, #0x1
   1ac20:	b.ne	1aa84 <mpfr_get_str@@Base+0x264>  // b.any
   1ac24:	nop
   1ac28:	cmp	x25, x28
   1ac2c:	b.cs	1aeec <mpfr_get_str@@Base+0x6cc>  // b.hs, b.nlast
   1ac30:	ldr	x0, [x29, #232]
   1ac34:	sub	x19, x19, x26
   1ac38:	mov	x1, #0x0                   	// #0
   1ac3c:	bl	caa0 <__gmpn_scan1@plt>
   1ac40:	lsl	x1, x19, #6
   1ac44:	cmp	x0, x1
   1ac48:	cset	w8, cs  // cs = hs, nlast
   1ac4c:	cset	x27, cc  // cc = lo, ul, last
   1ac50:	ldr	x0, [x29, #232]
   1ac54:	add	x1, x0, x19, lsl #3
   1ac58:	cmp	x1, x24
   1ac5c:	b.eq	1ac74 <mpfr_get_str@@Base+0x454>  // b.none
   1ac60:	mov	x2, x22
   1ac64:	mov	x0, x24
   1ac68:	str	w8, [x29, #160]
   1ac6c:	bl	ba10 <memcpy@plt>
   1ac70:	ldr	w8, [x29, #160]
   1ac74:	ldr	x26, [x23, #16]
   1ac78:	sub	x26, x26, x25, lsl #6
   1ac7c:	str	x26, [x29, #256]
   1ac80:	cbz	w8, 1ab80 <mpfr_get_str@@Base+0x360>
   1ac84:	mov	x27, #0xffffffffffffffff    	// #-1
   1ac88:	b	1ab80 <mpfr_get_str@@Base+0x360>
   1ac8c:	mov	x1, #0x0                   	// #0
   1ac90:	mov	sp, x29
   1ac94:	mov	x0, x1
   1ac98:	ldp	x19, x20, [sp, #16]
   1ac9c:	ldp	x21, x22, [sp, #32]
   1aca0:	ldp	x23, x24, [sp, #48]
   1aca4:	ldp	x25, x26, [sp, #64]
   1aca8:	ldp	x27, x28, [sp, #80]
   1acac:	ldp	x29, x30, [sp], #272
   1acb0:	ret
   1acb4:	cmp	x1, #0x1
   1acb8:	sub	x1, x20, x21
   1acbc:	str	x1, [x29, #248]
   1acc0:	b.ne	1a9f0 <mpfr_get_str@@Base+0x1d0>  // b.any
   1acc4:	nop
   1acc8:	ldr	x0, [x29, #248]
   1accc:	cmp	x0, #0x1
   1acd0:	b.eq	1aa1c <mpfr_get_str@@Base+0x1fc>  // b.none
   1acd4:	sub	x0, x0, #0x1
   1acd8:	mov	w1, #0x40                  	// #64
   1acdc:	clz	x0, x0
   1ace0:	mov	w2, #0x3                   	// #3
   1ace4:	sub	w0, w1, w0
   1ace8:	ldr	x1, [x29, #240]
   1acec:	smaddl	x0, w0, w2, x1
   1acf0:	str	x0, [x29, #240]
   1acf4:	b	1aa1c <mpfr_get_str@@Base+0x1fc>
   1acf8:	ldr	w2, [x29, #196]
   1acfc:	cmp	w2, #0x2
   1ad00:	b.eq	1b4a8 <mpfr_get_str@@Base+0xc88>  // b.none
   1ad04:	cmp	w2, #0x3
   1ad08:	mov	w1, #0x2                   	// #2
   1ad0c:	csel	w1, w2, w1, ne  // ne = any
   1ad10:	str	w1, [x29, #196]
   1ad14:	b	1a9a4 <mpfr_get_str@@Base+0x184>
   1ad18:	ldr	x0, [x29, #168]
   1ad1c:	cbz	x0, 1b428 <mpfr_get_str@@Base+0xc08>
   1ad20:	cmp	w19, #0x0
   1ad24:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1ad28:	add	x2, x2, #0x818
   1ad2c:	adrp	x1, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   1ad30:	ldr	x19, [x29, #168]
   1ad34:	add	x1, x1, #0xcd8
   1ad38:	csel	x1, x2, x1, lt  // lt = tstop
   1ad3c:	mov	x0, x19
   1ad40:	bl	c910 <strcpy@plt>
   1ad44:	mov	x1, x19
   1ad48:	b	1ac90 <mpfr_get_str@@Base+0x470>
   1ad4c:	ldr	x1, [x29, #240]
   1ad50:	mov	x0, #0xfffffffffffffeff    	// #-257
   1ad54:	movk	x0, #0x7fff, lsl #48
   1ad58:	sub	x0, x0, x1
   1ad5c:	ldr	x1, [x29, #184]
   1ad60:	cmp	x0, x1
   1ad64:	b.lt	1b2c8 <mpfr_get_str@@Base+0xaa8>  // b.tstop
   1ad68:	ldr	x1, [x29, #184]
   1ad6c:	ldr	x0, [x29, #240]
   1ad70:	add	x0, x0, x1
   1ad74:	str	x0, [x29, #240]
   1ad78:	sub	x1, x0, #0x1
   1ad7c:	str	x1, [x29, #224]
   1ad80:	add	x0, x0, x0, lsr #63
   1ad84:	asr	x0, x0, #1
   1ad88:	str	x0, [x29, #184]
   1ad8c:	b	1aa40 <mpfr_get_str@@Base+0x220>
   1ad90:	ldr	w2, [x29, #192]
   1ad94:	mov	x4, x25
   1ad98:	ldr	x1, [x29, #176]
   1ad9c:	mov	x0, x24
   1ada0:	ldr	x3, [x29, #248]
   1ada4:	bl	cbe0 <mpfr_mpn_exp@plt>
   1ada8:	cmn	x0, #0x1
   1adac:	mov	x19, x0
   1adb0:	cset	w0, eq  // eq = none
   1adb4:	str	w0, [x29, #160]
   1adb8:	lsl	x2, x25, #4
   1adbc:	cmp	x2, #0x4, lsl #12
   1adc0:	b.hi	1b318 <mpfr_get_str@@Base+0xaf8>  // b.pmore
   1adc4:	sub	sp, sp, x2
   1adc8:	add	x3, sp, #0x10
   1adcc:	add	x1, x22, #0x8
   1add0:	cmp	x1, #0x4, lsl #12
   1add4:	b.hi	1b2e0 <mpfr_get_str@@Base+0xac0>  // b.pmore
   1add8:	add	x0, x22, #0x17
   1addc:	and	x0, x0, #0xfffffffffffffff0
   1ade0:	sub	sp, sp, x0
   1ade4:	add	x26, sp, #0x10
   1ade8:	add	x0, x22, #0xf
   1adec:	and	x0, x0, #0xfffffffffffffff0
   1adf0:	sub	sp, sp, x0
   1adf4:	add	x27, sp, #0x10
   1adf8:	cmp	x28, x25, lsl #1
   1adfc:	lsl	x4, x25, #1
   1ae00:	b.cc	1af34 <mpfr_get_str@@Base+0x714>  // b.lo, b.ul, b.last
   1ae04:	ldr	x0, [x29, #232]
   1ae08:	sub	x1, x28, x4
   1ae0c:	add	x1, x0, x1, lsl #3
   1ae10:	cmp	x1, x3
   1ae14:	b.eq	1ae2c <mpfr_get_str@@Base+0x60c>  // b.none
   1ae18:	mov	x0, x3
   1ae1c:	str	x4, [x29, #152]
   1ae20:	bl	ba10 <memcpy@plt>
   1ae24:	mov	x3, x0
   1ae28:	ldr	x4, [x29, #152]
   1ae2c:	ldr	w0, [x29, #160]
   1ae30:	cmp	w0, #0x0
   1ae34:	lsl	x0, x25, #7
   1ae38:	str	x0, [x29, #160]
   1ae3c:	ccmp	x4, x28, #0x2, ne  // ne = any
   1ae40:	b.cc	1af98 <mpfr_get_str@@Base+0x778>  // b.lo, b.ul, b.last
   1ae44:	mov	x0, x26
   1ae48:	mov	x6, x25
   1ae4c:	mov	x5, x24
   1ae50:	mov	x1, x27
   1ae54:	mov	x2, #0x0                   	// #0
   1ae58:	bl	ba60 <__gmpn_tdiv_qr@plt>
   1ae5c:	ldr	x0, [x23, #16]
   1ae60:	cmn	x19, #0x1
   1ae64:	ldr	x4, [x29, #256]
   1ae68:	mov	w8, #0x0                   	// #0
   1ae6c:	sub	x4, x0, x4
   1ae70:	lsl	x0, x25, #7
   1ae74:	sub	x4, x4, x0
   1ae78:	str	x4, [x29, #256]
   1ae7c:	b.ne	1ae9c <mpfr_get_str@@Base+0x67c>  // b.any
   1ae80:	mov	x0, x27
   1ae84:	mov	x1, x25
   1ae88:	str	x4, [x29, #160]
   1ae8c:	bl	c860 <__gmpn_popcount@plt>
   1ae90:	cmp	x0, #0x0
   1ae94:	ldr	x4, [x29, #160]
   1ae98:	cset	w8, eq  // eq = none
   1ae9c:	ldr	x3, [x26, x25, lsl #3]
   1aea0:	cmp	x3, #0x1
   1aea4:	b.eq	1aff8 <mpfr_get_str@@Base+0x7d8>  // b.none
   1aea8:	cmp	x26, x24
   1aeac:	b.eq	1b0e8 <mpfr_get_str@@Base+0x8c8>  // b.none
   1aeb0:	mov	x1, x26
   1aeb4:	mov	x2, x22
   1aeb8:	mov	x0, x24
   1aebc:	str	w8, [x29, #160]
   1aec0:	bl	ba10 <memcpy@plt>
   1aec4:	ldr	w8, [x29, #160]
   1aec8:	ldr	x26, [x29, #256]
   1aecc:	cmn	x19, #0x1
   1aed0:	add	x19, x19, #0x2
   1aed4:	mov	x0, #0x2                   	// #2
   1aed8:	csel	x27, x19, x0, ne  // ne = any
   1aedc:	b	1ab7c <mpfr_get_str@@Base+0x35c>
   1aee0:	add	x0, x0, #0x1
   1aee4:	str	x0, [x29, #248]
   1aee8:	b	1aa40 <mpfr_get_str@@Base+0x220>
   1aeec:	b.eq	1b4d8 <mpfr_get_str@@Base+0xcb8>  // b.none
   1aef0:	sub	x19, x26, x19
   1aef4:	ldr	x1, [x29, #232]
   1aef8:	lsl	x19, x19, #3
   1aefc:	add	x0, x24, x19
   1af00:	cmp	x0, x1
   1af04:	b.eq	1af10 <mpfr_get_str@@Base+0x6f0>  // b.none
   1af08:	lsl	x2, x28, #3
   1af0c:	bl	ba10 <memcpy@plt>
   1af10:	mov	x2, x19
   1af14:	mov	x0, x24
   1af18:	mov	w1, #0x0                   	// #0
   1af1c:	bl	c110 <memset@plt>
   1af20:	ldr	x26, [x23, #16]
   1af24:	mov	x27, #0xffffffffffffffff    	// #-1
   1af28:	sub	x26, x26, x25, lsl #6
   1af2c:	str	x26, [x29, #256]
   1af30:	b	1ab80 <mpfr_get_str@@Base+0x360>
   1af34:	sub	x5, x4, x28
   1af38:	ldr	x1, [x29, #232]
   1af3c:	lsl	x5, x5, #3
   1af40:	add	x0, x3, x5
   1af44:	cmp	x0, x1
   1af48:	b.eq	1af64 <mpfr_get_str@@Base+0x744>  // b.none
   1af4c:	lsl	x2, x28, #3
   1af50:	str	x3, [x29, #128]
   1af54:	stp	x5, x4, [x29, #144]
   1af58:	bl	ba10 <memcpy@plt>
   1af5c:	ldp	x5, x4, [x29, #144]
   1af60:	ldr	x3, [x29, #128]
   1af64:	mov	x0, x3
   1af68:	mov	x2, x5
   1af6c:	mov	w1, #0x0                   	// #0
   1af70:	str	x4, [x29, #152]
   1af74:	bl	c110 <memset@plt>
   1af78:	mov	x3, x0
   1af7c:	ldr	w0, [x29, #160]
   1af80:	ldr	x4, [x29, #152]
   1af84:	cmp	w0, #0x0
   1af88:	lsl	x0, x25, #7
   1af8c:	str	x0, [x29, #160]
   1af90:	ccmp	x4, x28, #0x2, ne  // ne = any
   1af94:	b.cs	1ae44 <mpfr_get_str@@Base+0x624>  // b.hs, b.nlast
   1af98:	ldr	x0, [x29, #232]
   1af9c:	mov	x1, #0x0                   	// #0
   1afa0:	stp	x3, x4, [x29, #152]
   1afa4:	bl	caa0 <__gmpn_scan1@plt>
   1afa8:	ldp	x3, x4, [x29, #152]
   1afac:	sub	x8, x28, x4
   1afb0:	cmp	x0, x8, lsl #6
   1afb4:	b.cs	1b334 <mpfr_get_str@@Base+0xb14>  // b.hs, b.nlast
   1afb8:	mov	x0, x26
   1afbc:	mov	x1, x27
   1afc0:	mov	x6, x25
   1afc4:	mov	x5, x24
   1afc8:	mov	x2, #0x0                   	// #0
   1afcc:	bl	ba60 <__gmpn_tdiv_qr@plt>
   1afd0:	ldr	x0, [x23, #16]
   1afd4:	mov	w8, #0x0                   	// #0
   1afd8:	ldr	x4, [x29, #256]
   1afdc:	sub	x4, x0, x4
   1afe0:	lsl	x0, x25, #7
   1afe4:	sub	x4, x4, x0
   1afe8:	str	x4, [x29, #256]
   1afec:	ldr	x3, [x26, x25, lsl #3]
   1aff0:	cmp	x3, #0x1
   1aff4:	b.ne	1aea8 <mpfr_get_str@@Base+0x688>  // b.any
   1aff8:	sub	x22, x22, #0x8
   1affc:	mov	x1, x26
   1b000:	mov	x2, x25
   1b004:	mov	x0, x24
   1b008:	str	w8, [x29, #160]
   1b00c:	bl	bce0 <__gmpn_rshift@plt>
   1b010:	ldr	x0, [x24, x22]
   1b014:	ldr	w8, [x29, #160]
   1b018:	orr	x0, x0, #0x8000000000000000
   1b01c:	str	x0, [x24, x22]
   1b020:	ldr	x26, [x29, #256]
   1b024:	add	x26, x26, #0x1
   1b028:	str	x26, [x29, #256]
   1b02c:	b	1aecc <mpfr_get_str@@Base+0x6ac>
   1b030:	cmn	x0, #0x1
   1b034:	mov	w8, #0x0                   	// #0
   1b038:	b.ne	1aacc <mpfr_get_str@@Base+0x2ac>  // b.any
   1b03c:	ldr	x0, [x29, #232]
   1b040:	mov	x1, #0x0                   	// #0
   1b044:	str	x4, [x29, #160]
   1b048:	bl	caa0 <__gmpn_scan1@plt>
   1b04c:	cmp	x0, x19, lsl #6
   1b050:	ldr	x4, [x29, #160]
   1b054:	cset	w8, cs  // cs = hs, nlast
   1b058:	cmp	x27, #0x0
   1b05c:	add	x28, x25, x4
   1b060:	csinc	x27, x27, xzr, gt
   1b064:	add	x27, x27, #0x1
   1b068:	lsl	x28, x28, #3
   1b06c:	cmp	x28, #0x4, lsl #12
   1b070:	b.ls	1aae8 <mpfr_get_str@@Base+0x2c8>  // b.plast
   1b074:	nop
   1b078:	ldr	x0, [x29, #136]
   1b07c:	mov	x1, x28
   1b080:	str	x4, [x29, #152]
   1b084:	str	w8, [x29, #160]
   1b088:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1b08c:	mov	x19, x0
   1b090:	ldr	w8, [x29, #160]
   1b094:	ldr	x4, [x29, #152]
   1b098:	b	1aaf8 <mpfr_get_str@@Base+0x2d8>
   1b09c:	mov	x1, x5
   1b0a0:	mov	x2, x25
   1b0a4:	mov	x0, x24
   1b0a8:	mov	w3, #0x1                   	// #1
   1b0ac:	str	w8, [x29, #152]
   1b0b0:	bl	bcc0 <__gmpn_lshift@plt>
   1b0b4:	ldr	x5, [x29, #160]
   1b0b8:	ldr	x1, [x24]
   1b0bc:	ldur	x0, [x5, #-8]
   1b0c0:	ldr	w8, [x29, #152]
   1b0c4:	orr	x0, x1, x0, lsr #63
   1b0c8:	str	x0, [x24]
   1b0cc:	ldr	x26, [x29, #256]
   1b0d0:	sub	x26, x26, #0x1
   1b0d4:	str	x26, [x29, #256]
   1b0d8:	b	1ab7c <mpfr_get_str@@Base+0x35c>
   1b0dc:	mov	x0, x1
   1b0e0:	bl	c410 <mpfr_tmp_free@plt>
   1b0e4:	b	1abb8 <mpfr_get_str@@Base+0x398>
   1b0e8:	mov	x26, x4
   1b0ec:	b	1aecc <mpfr_get_str@@Base+0x6ac>
   1b0f0:	ldr	x3, [x29, #216]
   1b0f4:	cmp	w19, #0x0
   1b0f8:	ldr	w4, [x29, #124]
   1b0fc:	ldr	x1, [x29, #168]
   1b100:	orr	w2, w4, #0x8
   1b104:	ldr	x0, [x3]
   1b108:	add	x20, x0, x20
   1b10c:	str	x20, [x3]
   1b110:	csel	w3, w2, w4, ne  // ne = any
   1b114:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1b118:	ldr	x2, [x0, #2576]
   1b11c:	add	x0, x0, #0xa10
   1b120:	blr	x2
   1b124:	ldr	x2, [x29, #96]
   1b128:	str	w3, [x2, x0]
   1b12c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1b130:	ldr	x3, [x0, #2512]
   1b134:	add	x0, x0, #0x9d0
   1b138:	blr	x3
   1b13c:	ldr	x3, [x29, #112]
   1b140:	str	x3, [x2, x0]
   1b144:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1b148:	ldr	x3, [x0, #2544]
   1b14c:	add	x0, x0, #0x9f0
   1b150:	blr	x3
   1b154:	ldr	x3, [x29, #104]
   1b158:	str	x3, [x2, x0]
   1b15c:	b	1ac90 <mpfr_get_str@@Base+0x470>
   1b160:	ldrsw	x1, [x29, #192]
   1b164:	mov	w24, #0x3f                  	// #63
   1b168:	sub	x20, x0, #0x1
   1b16c:	clz	x1, x1
   1b170:	sub	w1, w24, w1
   1b174:	str	w1, [x29, #240]
   1b178:	sxtw	x7, w1
   1b17c:	sdiv	x20, x20, x7
   1b180:	msub	x28, x7, x20, x0
   1b184:	cmp	x28, #0x0
   1b188:	b.le	1b3d0 <mpfr_get_str@@Base+0xbb0>
   1b18c:	add	x20, x20, #0x1
   1b190:	sub	x4, x21, #0x1
   1b194:	str	xzr, [x29, #264]
   1b198:	madd	x4, x4, x7, x28
   1b19c:	sub	x19, x4, #0x1
   1b1a0:	asr	x19, x19, #6
   1b1a4:	add	x24, x19, #0x1
   1b1a8:	add	x19, x19, #0x2
   1b1ac:	str	x24, [x29, #248]
   1b1b0:	lsl	x26, x19, #3
   1b1b4:	lsl	x22, x24, #6
   1b1b8:	cmp	x26, #0x4, lsl #12
   1b1bc:	sub	x22, x22, x4
   1b1c0:	b.hi	1b43c <mpfr_get_str@@Base+0xc1c>  // b.pmore
   1b1c4:	add	x0, x26, #0xf
   1b1c8:	and	x0, x0, #0xfffffffffffffff0
   1b1cc:	sub	sp, sp, x0
   1b1d0:	ldr	x2, [x23]
   1b1d4:	add	x25, sp, #0x10
   1b1d8:	ldr	w0, [x23, #8]
   1b1dc:	cmp	w0, #0x0
   1b1e0:	cset	w3, lt  // lt = tstop
   1b1e4:	ldr	w5, [x29, #196]
   1b1e8:	add	x6, x29, #0x100
   1b1ec:	ldr	x1, [x29, #232]
   1b1f0:	mov	x0, x25
   1b1f4:	str	x7, [x29, #248]
   1b1f8:	bl	ca20 <mpfr_round_raw@plt>
   1b1fc:	sxtw	x1, w0
   1b200:	add	x8, x25, x26
   1b204:	stur	x1, [x8, #-8]
   1b208:	cbz	x1, 1b220 <mpfr_get_str@@Base+0xa00>
   1b20c:	ldr	x7, [x29, #248]
   1b210:	cmp	x7, x28
   1b214:	b.eq	1b4b4 <mpfr_get_str@@Base+0xc94>  // b.none
   1b218:	mov	x24, x19
   1b21c:	str	x19, [x29, #248]
   1b220:	cbnz	x22, 1b47c <mpfr_get_str@@Base+0xc5c>
   1b224:	ldr	w1, [x29, #192]
   1b228:	mov	x2, x25
   1b22c:	ldr	x19, [x29, #200]
   1b230:	mov	x3, x24
   1b234:	mov	x0, x19
   1b238:	bl	c5e0 <__gmpn_get_str@plt>
   1b23c:	mov	x0, x19
   1b240:	add	x2, x21, x19
   1b244:	cbz	x21, 1b25c <mpfr_get_str@@Base+0xa3c>
   1b248:	ldrb	w1, [x0]
   1b24c:	ldrb	w1, [x27, x1]
   1b250:	strb	w1, [x0], #1
   1b254:	cmp	x2, x0
   1b258:	b.ne	1b248 <mpfr_get_str@@Base+0xa28>  // b.any
   1b25c:	ldr	x0, [x29, #200]
   1b260:	strb	wzr, [x0, x21]
   1b264:	ldr	x0, [x29, #216]
   1b268:	str	x20, [x0]
   1b26c:	ldr	x0, [x29, #264]
   1b270:	cbnz	x0, 1b4d0 <mpfr_get_str@@Base+0xcb0>
   1b274:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1b278:	ldr	x1, [x0, #2576]
   1b27c:	add	x0, x0, #0xa10
   1b280:	blr	x1
   1b284:	ldr	w1, [x29, #124]
   1b288:	ldr	x2, [x29, #96]
   1b28c:	str	w1, [x2, x0]
   1b290:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1b294:	ldr	x1, [x0, #2512]
   1b298:	add	x0, x0, #0x9d0
   1b29c:	blr	x1
   1b2a0:	ldr	x1, [x29, #112]
   1b2a4:	str	x1, [x2, x0]
   1b2a8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1b2ac:	ldr	x3, [x0, #2544]
   1b2b0:	add	x0, x0, #0x9f0
   1b2b4:	blr	x3
   1b2b8:	ldr	x3, [x29, #104]
   1b2bc:	str	x3, [x2, x0]
   1b2c0:	ldr	x1, [x29, #168]
   1b2c4:	b	1ac90 <mpfr_get_str@@Base+0x470>
   1b2c8:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1b2cc:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1b2d0:	add	x2, x2, #0x830
   1b2d4:	add	x0, x0, #0x7d0
   1b2d8:	mov	w1, #0x9f9                 	// #2553
   1b2dc:	bl	cb40 <mpfr_assert_fail@plt>
   1b2e0:	ldr	x0, [x29, #136]
   1b2e4:	stp	x3, x2, [x29, #144]
   1b2e8:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1b2ec:	mov	x26, x0
   1b2f0:	cmp	x22, #0x4, lsl #12
   1b2f4:	ldp	x3, x2, [x29, #144]
   1b2f8:	b.ls	1ade8 <mpfr_get_str@@Base+0x5c8>  // b.plast
   1b2fc:	ldr	x0, [x29, #136]
   1b300:	mov	x1, x22
   1b304:	stp	x3, x2, [x29, #144]
   1b308:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1b30c:	mov	x27, x0
   1b310:	ldp	x3, x2, [x29, #144]
   1b314:	b	1adf8 <mpfr_get_str@@Base+0x5d8>
   1b318:	ldr	x0, [x29, #136]
   1b31c:	mov	x1, x2
   1b320:	str	x2, [x29, #152]
   1b324:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1b328:	mov	x3, x0
   1b32c:	ldr	x2, [x29, #152]
   1b330:	b	1adcc <mpfr_get_str@@Base+0x5ac>
   1b334:	mov	x0, x26
   1b338:	mov	x6, x25
   1b33c:	mov	x5, x24
   1b340:	mov	x1, x27
   1b344:	mov	x2, #0x0                   	// #0
   1b348:	bl	ba60 <__gmpn_tdiv_qr@plt>
   1b34c:	ldr	x0, [x23, #16]
   1b350:	ldr	x4, [x29, #256]
   1b354:	sub	x4, x0, x4
   1b358:	lsl	x0, x25, #7
   1b35c:	sub	x4, x4, x0
   1b360:	str	x4, [x29, #256]
   1b364:	b	1ae80 <mpfr_get_str@@Base+0x660>
   1b368:	and	x0, x20, #0xff
   1b36c:	add	x0, x0, #0x1
   1b370:	add	x0, x0, x21
   1b374:	bl	ccf0 <mpfr_allocate_func@plt>
   1b378:	str	x0, [x29, #168]
   1b37c:	b	1a95c <mpfr_get_str@@Base+0x13c>
   1b380:	ldr	x0, [x29, #168]
   1b384:	cbz	x0, 1b418 <mpfr_get_str@@Base+0xbf8>
   1b388:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   1b38c:	add	x2, x2, #0xcd0
   1b390:	ldr	x4, [x29, #168]
   1b394:	mrs	x1, tpidr_el0
   1b398:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1b39c:	ldr	x3, [x0, #2576]
   1b3a0:	add	x0, x0, #0xa10
   1b3a4:	blr	x3
   1b3a8:	add	x0, x1, x0
   1b3ac:	ldr	w3, [x2]
   1b3b0:	mov	x1, x4
   1b3b4:	str	w3, [x4]
   1b3b8:	ldrh	w3, [x2, #4]
   1b3bc:	ldr	w2, [x0]
   1b3c0:	strh	w3, [x4, #4]
   1b3c4:	orr	w2, w2, #0x4
   1b3c8:	str	w2, [x0]
   1b3cc:	b	1ac90 <mpfr_get_str@@Base+0x470>
   1b3d0:	add	x28, x28, x7
   1b3d4:	b	1b190 <mpfr_get_str@@Base+0x970>
   1b3d8:	ldr	x19, [x29, #200]
   1b3dc:	mov	w1, #0x30                  	// #48
   1b3e0:	mov	x2, x21
   1b3e4:	mov	x0, x19
   1b3e8:	bl	c110 <memset@plt>
   1b3ec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1b3f0:	ldr	x1, [x0, #2576]
   1b3f4:	add	x0, x0, #0xa10
   1b3f8:	blr	x1
   1b3fc:	strb	wzr, [x19, x21]
   1b400:	ldr	x1, [x29, #216]
   1b404:	ldr	w3, [x29, #124]
   1b408:	ldr	x2, [x29, #96]
   1b40c:	str	xzr, [x1]
   1b410:	ldr	x1, [x29, #168]
   1b414:	b	1b128 <mpfr_get_str@@Base+0x908>
   1b418:	mov	x0, #0x6                   	// #6
   1b41c:	bl	ccf0 <mpfr_allocate_func@plt>
   1b420:	str	x0, [x29, #168]
   1b424:	b	1b388 <mpfr_get_str@@Base+0xb68>
   1b428:	add	w0, w20, #0x6
   1b42c:	sxtw	x0, w0
   1b430:	bl	ccf0 <mpfr_allocate_func@plt>
   1b434:	str	x0, [x29, #168]
   1b438:	b	1ad20 <mpfr_get_str@@Base+0x500>
   1b43c:	mov	x1, x26
   1b440:	add	x0, x29, #0x108
   1b444:	str	x7, [x29, #208]
   1b448:	str	x4, [x29, #224]
   1b44c:	str	w3, [x29, #248]
   1b450:	bl	bdc0 <mpfr_tmp_allocate@plt>
   1b454:	ldr	x1, [x23, #16]
   1b458:	mov	x25, x0
   1b45c:	ldr	w3, [x29, #248]
   1b460:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1b464:	cmp	x1, x0
   1b468:	ldr	x2, [x23]
   1b46c:	ldr	x7, [x29, #208]
   1b470:	ldr	x4, [x29, #224]
   1b474:	b.eq	1b1e4 <mpfr_get_str@@Base+0x9c4>  // b.none
   1b478:	b	1b1d8 <mpfr_get_str@@Base+0x9b8>
   1b47c:	mov	x2, x24
   1b480:	mov	w3, w22
   1b484:	mov	x1, x25
   1b488:	mov	x0, x25
   1b48c:	bl	bce0 <__gmpn_rshift@plt>
   1b490:	sub	x26, x24, #0x1
   1b494:	add	x0, x25, x24, lsl #3
   1b498:	ldur	x0, [x0, #-8]
   1b49c:	cmp	x0, #0x0
   1b4a0:	csel	x24, x26, x24, eq  // eq = none
   1b4a4:	b	1b224 <mpfr_get_str@@Base+0xa04>
   1b4a8:	mov	w1, #0x3                   	// #3
   1b4ac:	str	w1, [x29, #196]
   1b4b0:	b	1a9a4 <mpfr_get_str@@Base+0x184>
   1b4b4:	ldr	w3, [x29, #240]
   1b4b8:	mov	x2, x19
   1b4bc:	add	x20, x20, #0x1
   1b4c0:	mov	x1, x25
   1b4c4:	mov	x0, x25
   1b4c8:	bl	bce0 <__gmpn_rshift@plt>
   1b4cc:	b	1b220 <mpfr_get_str@@Base+0xa00>
   1b4d0:	bl	c410 <mpfr_tmp_free@plt>
   1b4d4:	b	1b274 <mpfr_get_str@@Base+0xa54>
   1b4d8:	sub	x19, x19, x26
   1b4dc:	mov	x27, #0x0                   	// #0
   1b4e0:	mov	w8, #0x1                   	// #1
   1b4e4:	b	1ac50 <mpfr_get_str@@Base+0x430>
   1b4e8:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1b4ec:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1b4f0:	add	x2, x2, #0x820
   1b4f4:	add	x0, x0, #0x7d0
   1b4f8:	mov	w1, #0x983                 	// #2435
   1b4fc:	bl	cb40 <mpfr_assert_fail@plt>

000000000001b500 <mpfr_free_str@@Base>:
   1b500:	stp	x29, x30, [sp, #-32]!
   1b504:	mov	x29, sp
   1b508:	str	x19, [sp, #16]
   1b50c:	mov	x19, x0
   1b510:	bl	bab0 <strlen@plt>
   1b514:	mov	x1, x0
   1b518:	mov	x0, x19
   1b51c:	add	x1, x1, #0x1
   1b520:	ldr	x19, [sp, #16]
   1b524:	ldp	x29, x30, [sp], #32
   1b528:	b	cc20 <mpfr_free_func@plt>
   1b52c:	nop

000000000001b530 <mpfr_init@@Base>:
   1b530:	stp	x29, x30, [sp, #-16]!
   1b534:	mov	x2, x0
   1b538:	mrs	x1, tpidr_el0
   1b53c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1b540:	ldr	x3, [x0, #2528]
   1b544:	add	x0, x0, #0x9e0
   1b548:	blr	x3
   1b54c:	mov	x29, sp
   1b550:	ldp	x29, x30, [sp], #16
   1b554:	ldr	x1, [x1, x0]
   1b558:	mov	x0, x2
   1b55c:	b	ca80 <mpfr_init2@plt>

000000000001b560 <__gmpfr_inp_str@@Base>:
   1b560:	stp	x29, x30, [sp, #-112]!
   1b564:	mov	x29, sp
   1b568:	stp	x19, x20, [sp, #16]
   1b56c:	stp	x21, x22, [sp, #32]
   1b570:	mov	x21, x1
   1b574:	stp	x23, x24, [sp, #48]
   1b578:	mov	x24, x0
   1b57c:	mov	x0, #0x64                  	// #100
   1b580:	stp	x25, x26, [sp, #64]
   1b584:	mov	w25, w2
   1b588:	mov	w26, w3
   1b58c:	stp	x27, x28, [sp, #80]
   1b590:	bl	ccf0 <mpfr_allocate_func@plt>
   1b594:	mov	x20, x0
   1b598:	bl	c630 <__ctype_b_loc@plt>
   1b59c:	mov	x23, x0
   1b5a0:	mov	x27, #0x0                   	// #0
   1b5a4:	nop
   1b5a8:	mov	x0, x21
   1b5ac:	bl	c2a0 <getc@plt>
   1b5b0:	ldr	x1, [x23]
   1b5b4:	mov	w19, w0
   1b5b8:	mov	x22, x27
   1b5bc:	add	x27, x27, #0x1
   1b5c0:	ldrh	w0, [x1, w19, sxtw #1]
   1b5c4:	tbnz	w0, #13, 1b5a8 <__gmpfr_inp_str@@Base+0x48>
   1b5c8:	mov	x27, #0x0                   	// #0
   1b5cc:	mov	x28, #0x64                  	// #100
   1b5d0:	mov	x0, x21
   1b5d4:	cmn	w19, #0x1
   1b5d8:	add	x2, x20, x27
   1b5dc:	b.eq	1b630 <__gmpfr_inp_str@@Base+0xd0>  // b.none
   1b5e0:	ldr	x1, [x23]
   1b5e4:	ldrh	w1, [x1, w19, sxtw #1]
   1b5e8:	tbnz	w1, #13, 1b630 <__gmpfr_inp_str@@Base+0xd0>
   1b5ec:	strb	w19, [x2]
   1b5f0:	add	x27, x27, #0x1
   1b5f4:	bl	c2a0 <getc@plt>
   1b5f8:	mov	w19, w0
   1b5fc:	cmp	x28, x27
   1b600:	b.hi	1b5d0 <__gmpfr_inp_str@@Base+0x70>  // b.pmore
   1b604:	add	x2, x28, x28, lsl #1
   1b608:	mov	x1, x28
   1b60c:	mov	x0, x20
   1b610:	lsr	x28, x2, #1
   1b614:	mov	x2, x28
   1b618:	bl	c1c0 <mpfr_reallocate_func@plt>
   1b61c:	mov	x20, x0
   1b620:	cmn	w19, #0x1
   1b624:	mov	x0, x21
   1b628:	add	x2, x20, x27
   1b62c:	b.ne	1b5e0 <__gmpfr_inp_str@@Base+0x80>  // b.any
   1b630:	mov	x1, x21
   1b634:	mov	w0, w19
   1b638:	str	x2, [sp, #104]
   1b63c:	bl	c730 <ungetc@plt>
   1b640:	ldr	x2, [sp, #104]
   1b644:	mov	w3, w26
   1b648:	mov	x1, x20
   1b64c:	mov	x0, x24
   1b650:	strb	wzr, [x2]
   1b654:	mov	w2, w25
   1b658:	bl	c6c0 <mpfr_set_str@plt>
   1b65c:	mov	w19, w0
   1b660:	mov	x1, x28
   1b664:	mov	x0, x20
   1b668:	bl	cc20 <mpfr_free_func@plt>
   1b66c:	cmn	w19, #0x1
   1b670:	add	x0, x22, x27
   1b674:	csel	x0, x0, xzr, ne  // ne = any
   1b678:	ldp	x19, x20, [sp, #16]
   1b67c:	ldp	x21, x22, [sp, #32]
   1b680:	ldp	x23, x24, [sp, #48]
   1b684:	ldp	x25, x26, [sp, #64]
   1b688:	ldp	x27, x28, [sp, #80]
   1b68c:	ldp	x29, x30, [sp], #112
   1b690:	ret
   1b694:	nop

000000000001b698 <mpfr_integer_p@@Base>:
   1b698:	ldr	x2, [x0, #16]
   1b69c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1b6a0:	cmp	x2, x1
   1b6a4:	b.le	1b720 <mpfr_integer_p@@Base+0x88>
   1b6a8:	cmp	x2, #0x0
   1b6ac:	b.le	1b714 <mpfr_integer_p@@Base+0x7c>
   1b6b0:	ldr	x3, [x0]
   1b6b4:	cmp	x2, x3
   1b6b8:	b.cs	1b70c <mpfr_integer_p@@Base+0x74>  // b.hs, b.nlast
   1b6bc:	add	x1, x3, #0x3e
   1b6c0:	subs	x3, x3, #0x1
   1b6c4:	csel	x1, x1, x3, mi  // mi = first
   1b6c8:	cmp	x2, #0x0
   1b6cc:	add	x3, x2, #0x3f
   1b6d0:	csel	x3, x3, x2, lt  // lt = tstop
   1b6d4:	ldr	x4, [x0, #24]
   1b6d8:	neg	x0, x3, asr #6
   1b6dc:	adds	x1, x0, x1, asr #6
   1b6e0:	b.mi	1b730 <mpfr_integer_p@@Base+0x98>  // b.first
   1b6e4:	ldr	x3, [x4, x1, lsl #3]
   1b6e8:	mov	w0, #0x0                   	// #0
   1b6ec:	lsl	x2, x3, x2
   1b6f0:	cbz	x2, 1b700 <mpfr_integer_p@@Base+0x68>
   1b6f4:	b	1b71c <mpfr_integer_p@@Base+0x84>
   1b6f8:	ldr	x0, [x4, x1, lsl #3]
   1b6fc:	cbnz	x0, 1b714 <mpfr_integer_p@@Base+0x7c>
   1b700:	sub	x1, x1, #0x1
   1b704:	cmn	x1, #0x1
   1b708:	b.ne	1b6f8 <mpfr_integer_p@@Base+0x60>  // b.any
   1b70c:	mov	w0, #0x1                   	// #1
   1b710:	ret
   1b714:	mov	w0, #0x0                   	// #0
   1b718:	ret
   1b71c:	ret
   1b720:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1b724:	cmp	x2, x0
   1b728:	cset	w0, eq  // eq = none
   1b72c:	ret
   1b730:	stp	x29, x30, [sp, #-16]!
   1b734:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1b738:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1b73c:	mov	x29, sp
   1b740:	add	x2, x2, #0xe98
   1b744:	add	x0, x0, #0xea0
   1b748:	mov	w1, #0x34                  	// #52
   1b74c:	bl	cb40 <mpfr_assert_fail@plt>

000000000001b750 <mpfr_inf_p@@Base>:
   1b750:	ldr	x0, [x0, #16]
   1b754:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1b758:	cmp	x0, x1
   1b75c:	cset	w0, eq  // eq = none
   1b760:	ret
   1b764:	nop

000000000001b768 <mpfr_nan_p@@Base>:
   1b768:	ldr	x0, [x0, #16]
   1b76c:	mov	x1, #0x2                   	// #2
   1b770:	movk	x1, #0x8000, lsl #48
   1b774:	cmp	x0, x1
   1b778:	cset	w0, eq  // eq = none
   1b77c:	ret

000000000001b780 <mpfr_number_p@@Base>:
   1b780:	ldr	x0, [x0, #16]
   1b784:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   1b788:	add	x0, x0, x1
   1b78c:	cmp	x0, #0x1
   1b790:	cset	w0, hi  // hi = pmore
   1b794:	ret
   1b798:	stp	x29, x30, [sp, #-80]!
   1b79c:	mov	x29, sp
   1b7a0:	stp	x19, x20, [sp, #16]
   1b7a4:	mov	x19, x3
   1b7a8:	mov	x20, x2
   1b7ac:	stp	x21, x22, [sp, #32]
   1b7b0:	mov	x21, x0
   1b7b4:	mov	x22, x1
   1b7b8:	stp	x23, x24, [sp, #48]
   1b7bc:	mov	x23, x4
   1b7c0:	add	x4, x3, #0x1
   1b7c4:	cmp	x4, x23
   1b7c8:	b.ne	1b884 <mpfr_number_p@@Base+0x104>  // b.any
   1b7cc:	cbz	x3, 1b84c <mpfr_number_p@@Base+0xcc>
   1b7d0:	mov	x1, x3
   1b7d4:	mov	x0, x22
   1b7d8:	bl	bcb0 <__gmpz_set_ui@plt>
   1b7dc:	ldr	w0, [x22, #4]
   1b7e0:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
   1b7e4:	cmp	x19, x1
   1b7e8:	neg	w0, w0
   1b7ec:	str	w0, [x22, #4]
   1b7f0:	b.ls	1b858 <mpfr_number_p@@Base+0xd8>  // b.plast
   1b7f4:	mov	x1, x19
   1b7f8:	mov	x0, x20
   1b7fc:	bl	bcb0 <__gmpz_set_ui@plt>
   1b800:	mov	x1, x20
   1b804:	mov	x0, x20
   1b808:	mov	x2, #0x1                   	// #1
   1b80c:	bl	c200 <__gmpz_mul_2exp@plt>
   1b810:	mov	x1, x20
   1b814:	mov	x0, x20
   1b818:	mov	x2, #0x1                   	// #1
   1b81c:	bl	c360 <__gmpz_add_ui@plt>
   1b820:	mov	x1, x20
   1b824:	mov	x0, x20
   1b828:	mov	x2, #0x2                   	// #2
   1b82c:	bl	c200 <__gmpz_mul_2exp@plt>
   1b830:	mov	x1, x22
   1b834:	mov	x0, x21
   1b838:	ldp	x19, x20, [sp, #16]
   1b83c:	ldp	x21, x22, [sp, #32]
   1b840:	ldp	x23, x24, [sp, #48]
   1b844:	ldp	x29, x30, [sp], #80
   1b848:	b	bfa0 <__gmpz_set@plt>
   1b84c:	mov	x0, x22
   1b850:	mov	x1, #0x3                   	// #3
   1b854:	bl	bcb0 <__gmpz_set_ui@plt>
   1b858:	lsl	x19, x19, #3
   1b85c:	mov	x0, x20
   1b860:	add	x1, x19, #0x4
   1b864:	bl	bcb0 <__gmpz_set_ui@plt>
   1b868:	mov	x1, x22
   1b86c:	mov	x0, x21
   1b870:	ldp	x19, x20, [sp, #16]
   1b874:	ldp	x21, x22, [sp, #32]
   1b878:	ldp	x23, x24, [sp, #48]
   1b87c:	ldp	x29, x30, [sp], #80
   1b880:	b	bfa0 <__gmpz_set@plt>
   1b884:	and	x4, x3, x23
   1b888:	mov	w24, w5
   1b88c:	lsr	x5, x23, #1
   1b890:	and	x4, x4, #0x1
   1b894:	add	x19, x5, x3, lsr #1
   1b898:	mov	w5, #0x1                   	// #1
   1b89c:	add	x19, x19, x4
   1b8a0:	str	x25, [sp, #64]
   1b8a4:	mov	x4, x19
   1b8a8:	bl	1b798 <mpfr_number_p@@Base+0x18>
   1b8ac:	mov	x3, x19
   1b8b0:	mov	x4, x23
   1b8b4:	mov	w5, w24
   1b8b8:	add	x19, x21, #0x10
   1b8bc:	add	x23, x20, #0x10
   1b8c0:	add	x25, x22, #0x10
   1b8c4:	mov	x0, x19
   1b8c8:	mov	x1, x25
   1b8cc:	mov	x2, x23
   1b8d0:	bl	1b798 <mpfr_number_p@@Base+0x18>
   1b8d4:	mov	x2, x23
   1b8d8:	mov	x1, x21
   1b8dc:	mov	x0, x21
   1b8e0:	bl	bff0 <__gmpz_mul@plt>
   1b8e4:	mov	x2, x22
   1b8e8:	mov	x1, x19
   1b8ec:	mov	x0, x19
   1b8f0:	bl	bff0 <__gmpz_mul@plt>
   1b8f4:	mov	x2, x19
   1b8f8:	mov	x1, x21
   1b8fc:	mov	x0, x21
   1b900:	bl	c9c0 <__gmpz_add@plt>
   1b904:	cbnz	w24, 1b944 <mpfr_number_p@@Base+0x1c4>
   1b908:	mov	x2, x23
   1b90c:	mov	x1, x20
   1b910:	mov	x0, x20
   1b914:	bl	bff0 <__gmpz_mul@plt>
   1b918:	mov	x0, x21
   1b91c:	mov	x1, #0x0                   	// #0
   1b920:	bl	ba90 <__gmpz_scan1@plt>
   1b924:	mov	x19, x0
   1b928:	cbnz	x0, 1b9d4 <mpfr_number_p@@Base+0x254>
   1b92c:	ldp	x19, x20, [sp, #16]
   1b930:	ldp	x21, x22, [sp, #32]
   1b934:	ldp	x23, x24, [sp, #48]
   1b938:	ldr	x25, [sp, #64]
   1b93c:	ldp	x29, x30, [sp], #80
   1b940:	ret
   1b944:	mov	x2, x25
   1b948:	mov	x1, x22
   1b94c:	mov	x0, x22
   1b950:	bl	bff0 <__gmpz_mul@plt>
   1b954:	mov	x2, x23
   1b958:	mov	x1, x20
   1b95c:	mov	x0, x20
   1b960:	bl	bff0 <__gmpz_mul@plt>
   1b964:	mov	x0, x21
   1b968:	mov	x1, #0x0                   	// #0
   1b96c:	bl	ba90 <__gmpz_scan1@plt>
   1b970:	mov	x19, x0
   1b974:	cbz	x0, 1b92c <mpfr_number_p@@Base+0x1ac>
   1b978:	mov	x1, #0x0                   	// #0
   1b97c:	mov	x0, x20
   1b980:	bl	ba90 <__gmpz_scan1@plt>
   1b984:	mov	x23, x0
   1b988:	mov	x1, #0x0                   	// #0
   1b98c:	mov	x0, x22
   1b990:	bl	ba90 <__gmpz_scan1@plt>
   1b994:	cmp	x0, x23
   1b998:	csel	x2, x0, x23, ls  // ls = plast
   1b99c:	cmp	x2, x19
   1b9a0:	csel	x19, x2, x19, ls  // ls = plast
   1b9a4:	cbz	x19, 1b92c <mpfr_number_p@@Base+0x1ac>
   1b9a8:	mov	x2, x19
   1b9ac:	mov	x1, x21
   1b9b0:	mov	x0, x21
   1b9b4:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   1b9b8:	mov	x2, x19
   1b9bc:	mov	x1, x20
   1b9c0:	mov	x0, x20
   1b9c4:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   1b9c8:	mov	x2, x19
   1b9cc:	mov	x1, x22
   1b9d0:	b	1ba04 <mpfr_number_p@@Base+0x284>
   1b9d4:	mov	x0, x20
   1b9d8:	mov	x1, #0x0                   	// #0
   1b9dc:	bl	ba90 <__gmpz_scan1@plt>
   1b9e0:	cmp	x0, x19
   1b9e4:	csel	x19, x0, x19, ls  // ls = plast
   1b9e8:	cbz	x19, 1b92c <mpfr_number_p@@Base+0x1ac>
   1b9ec:	mov	x2, x19
   1b9f0:	mov	x1, x21
   1b9f4:	mov	x0, x21
   1b9f8:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   1b9fc:	mov	x2, x19
   1ba00:	mov	x1, x20
   1ba04:	ldp	x19, x20, [sp, #16]
   1ba08:	mov	x0, x1
   1ba0c:	ldp	x21, x22, [sp, #32]
   1ba10:	ldp	x23, x24, [sp, #48]
   1ba14:	ldr	x25, [sp, #64]
   1ba18:	ldp	x29, x30, [sp], #80
   1ba1c:	b	c130 <__gmpz_fdiv_q_2exp@plt>

000000000001ba20 <mpfr_const_log2_internal@@Base>:
   1ba20:	stp	x29, x30, [sp, #-368]!
   1ba24:	mov	x29, sp
   1ba28:	stp	x19, x20, [sp, #16]
   1ba2c:	stp	x21, x22, [sp, #32]
   1ba30:	stp	x23, x24, [sp, #48]
   1ba34:	stp	x25, x26, [sp, #64]
   1ba38:	stp	x27, x28, [sp, #80]
   1ba3c:	str	x0, [x29, #104]
   1ba40:	ldr	x0, [x0]
   1ba44:	str	w1, [x29, #140]
   1ba48:	str	x0, [x29, #144]
   1ba4c:	cmp	x0, #0x42c
   1ba50:	b.hi	1bc2c <mpfr_const_log2_internal@@Base+0x20c>  // b.pmore
   1ba54:	add	x0, x0, #0x9
   1ba58:	str	x0, [x29, #152]
   1ba5c:	ldr	x0, [x29, #152]
   1ba60:	sub	x19, x0, #0x1
   1ba64:	asr	x19, x19, #6
   1ba68:	add	x19, x19, #0x1
   1ba6c:	lsl	x0, x19, #1
   1ba70:	cmp	x0, #0x10
   1ba74:	b.gt	1bc4c <mpfr_const_log2_internal@@Base+0x22c>
   1ba78:	add	x1, x29, #0xf0
   1ba7c:	stp	xzr, x1, [x29, #224]
   1ba80:	mov	x0, x1
   1ba84:	add	x1, x29, #0xc0
   1ba88:	add	x27, x29, #0xa0
   1ba8c:	add	x19, x0, x19, lsl #3
   1ba90:	mov	x2, #0x40                  	// #64
   1ba94:	str	x2, [x29, #96]
   1ba98:	str	x1, [x29, #112]
   1ba9c:	mov	w1, #0x1                   	// #1
   1baa0:	ldr	x2, [x29, #152]
   1baa4:	stp	x0, x2, [x29, #184]
   1baa8:	ldr	x0, [x29, #152]
   1baac:	str	w1, [x29, #168]
   1bab0:	str	w1, [x29, #200]
   1bab4:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1bab8:	movk	x1, #0xaaab
   1babc:	str	x19, [x29, #216]
   1bac0:	str	x2, [x29, #160]
   1bac4:	umulh	x0, x0, x1
   1bac8:	mov	x1, sp
   1bacc:	lsr	x0, x0, #1
   1bad0:	clz	x23, x0
   1bad4:	add	x0, x0, #0x1
   1bad8:	str	x0, [x29, #128]
   1badc:	mov	w0, #0x41                  	// #65
   1bae0:	sub	w23, w0, w23
   1bae4:	mov	w0, #0x30                  	// #48
   1bae8:	sbfiz	x25, x23, #5, #32
   1baec:	smsubl	x0, w23, w0, x1
   1baf0:	mov	sp, x0
   1baf4:	mov	x24, sp
   1baf8:	add	x0, x24, w23, sxtw #4
   1bafc:	add	x25, x24, x25
   1bb00:	mov	x22, x0
   1bb04:	mov	x20, x0
   1bb08:	mov	x23, x0
   1bb0c:	mov	x19, x25
   1bb10:	mov	x21, x25
   1bb14:	mov	x28, x24
   1bb18:	mov	x26, x24
   1bb1c:	str	x0, [x29, #120]
   1bb20:	mov	x0, x26
   1bb24:	bl	bf90 <mpfr_mpz_init@plt>
   1bb28:	mov	x0, x22
   1bb2c:	bl	bf90 <mpfr_mpz_init@plt>
   1bb30:	mov	x0, x21
   1bb34:	add	x26, x26, #0x10
   1bb38:	bl	bf90 <mpfr_mpz_init@plt>
   1bb3c:	add	x22, x22, #0x10
   1bb40:	cmp	x23, x26
   1bb44:	add	x21, x21, #0x10
   1bb48:	b.ne	1bb20 <mpfr_const_log2_internal@@Base+0x100>  // b.any
   1bb4c:	ldp	x1, x4, [x29, #120]
   1bb50:	mov	x3, #0x0                   	// #0
   1bb54:	mov	w5, #0x0                   	// #0
   1bb58:	mov	x2, x25
   1bb5c:	mov	x0, x24
   1bb60:	bl	1b798 <mpfr_number_p@@Base+0x18>
   1bb64:	mov	x1, x24
   1bb68:	mov	w2, #0x0                   	// #0
   1bb6c:	mov	x0, x27
   1bb70:	bl	c240 <mpfr_set_z@plt>
   1bb74:	ldr	x21, [x29, #112]
   1bb78:	mov	x1, x25
   1bb7c:	mov	w2, #0x0                   	// #0
   1bb80:	mov	x0, x21
   1bb84:	bl	c240 <mpfr_set_z@plt>
   1bb88:	mov	x2, x21
   1bb8c:	mov	x1, x27
   1bb90:	mov	x0, x27
   1bb94:	mov	w3, #0x0                   	// #0
   1bb98:	bl	c620 <mpfr_div@plt>
   1bb9c:	nop
   1bba0:	mov	x0, x28
   1bba4:	bl	c170 <mpfr_mpz_clear@plt>
   1bba8:	mov	x0, x20
   1bbac:	bl	c170 <mpfr_mpz_clear@plt>
   1bbb0:	mov	x0, x19
   1bbb4:	add	x28, x28, #0x10
   1bbb8:	bl	c170 <mpfr_mpz_clear@plt>
   1bbbc:	add	x20, x20, #0x10
   1bbc0:	cmp	x23, x28
   1bbc4:	add	x19, x19, #0x10
   1bbc8:	b.ne	1bba0 <mpfr_const_log2_internal@@Base+0x180>  // b.any
   1bbcc:	ldr	x0, [x29, #144]
   1bbd0:	mov	x1, #0x93df                	// #37855
   1bbd4:	movk	x1, #0x4, lsl #16
   1bbd8:	cmp	x0, x1
   1bbdc:	b.hi	1bc60 <mpfr_const_log2_internal@@Base+0x240>  // b.pmore
   1bbe0:	ldr	w2, [x29, #140]
   1bbe4:	mov	x1, x27
   1bbe8:	ldr	w3, [x29, #168]
   1bbec:	ldr	x0, [x29, #104]
   1bbf0:	bl	c6a0 <mpfr_set4@plt>
   1bbf4:	mov	w19, w0
   1bbf8:	ldr	x1, [x29, #224]
   1bbfc:	cbz	x1, 1bc08 <mpfr_const_log2_internal@@Base+0x1e8>
   1bc00:	ldr	x0, [x29, #232]
   1bc04:	bl	cc20 <mpfr_free_func@plt>
   1bc08:	mov	sp, x29
   1bc0c:	mov	w0, w19
   1bc10:	ldp	x19, x20, [sp, #16]
   1bc14:	ldp	x21, x22, [sp, #32]
   1bc18:	ldp	x23, x24, [sp, #48]
   1bc1c:	ldp	x25, x26, [sp, #64]
   1bc20:	ldp	x27, x28, [sp, #80]
   1bc24:	ldp	x29, x30, [sp], #368
   1bc28:	ret
   1bc2c:	ldr	x0, [x29, #144]
   1bc30:	add	x0, x0, #0xa
   1bc34:	mov	x1, x0
   1bc38:	str	x1, [x29, #152]
   1bc3c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   1bc40:	cmp	x1, x0
   1bc44:	b.lt	1ba5c <mpfr_const_log2_internal@@Base+0x3c>  // b.tstop
   1bc48:	bl	c8e0 <mpfr_abort_prec_max@plt>
   1bc4c:	lsl	x0, x19, #4
   1bc50:	str	x0, [x29, #224]
   1bc54:	bl	ccf0 <mpfr_allocate_func@plt>
   1bc58:	str	x0, [x29, #232]
   1bc5c:	b	1ba84 <mpfr_const_log2_internal@@Base+0x64>
   1bc60:	ldr	x1, [x29, #176]
   1bc64:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1bc68:	cmp	x1, x0
   1bc6c:	b.le	1bca4 <mpfr_const_log2_internal@@Base+0x284>
   1bc70:	ldr	w0, [x29, #140]
   1bc74:	ldr	x2, [x29, #144]
   1bc78:	cmp	w0, #0x0
   1bc7c:	ldr	x1, [x29, #160]
   1bc80:	cinc	x3, x2, eq  // eq = none
   1bc84:	ldr	x0, [x29, #184]
   1bc88:	sub	x1, x1, #0x1
   1bc8c:	ldr	x2, [x29, #152]
   1bc90:	asr	x1, x1, #6
   1bc94:	add	x1, x1, #0x1
   1bc98:	sub	x2, x2, #0x2
   1bc9c:	bl	c370 <mpfr_round_p@plt>
   1bca0:	cbnz	w0, 1bbe0 <mpfr_const_log2_internal@@Base+0x1c0>
   1bca4:	ldr	x1, [x29, #152]
   1bca8:	mov	x0, #0xfffffffffffffeff    	// #-257
   1bcac:	movk	x0, #0x7fff, lsl #48
   1bcb0:	sub	x0, x0, x1
   1bcb4:	ldr	x1, [x29, #96]
   1bcb8:	cmp	x0, x1
   1bcbc:	b.lt	1bd2c <mpfr_const_log2_internal@@Base+0x30c>  // b.tstop
   1bcc0:	ldr	x1, [x29, #96]
   1bcc4:	ldr	x0, [x29, #152]
   1bcc8:	add	x2, x0, x1
   1bccc:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   1bcd0:	cmp	x2, x0
   1bcd4:	str	x2, [x29, #152]
   1bcd8:	add	x0, x2, x2, lsr #63
   1bcdc:	ldr	x1, [x29, #224]
   1bce0:	asr	x0, x0, #1
   1bce4:	str	x0, [x29, #96]
   1bce8:	b.ge	1bc48 <mpfr_const_log2_internal@@Base+0x228>  // b.tcont
   1bcec:	sub	x19, x2, #0x1
   1bcf0:	asr	x19, x19, #6
   1bcf4:	add	x19, x19, #0x1
   1bcf8:	lsl	x2, x19, #4
   1bcfc:	str	x2, [x29, #224]
   1bd00:	cbnz	x1, 1bd1c <mpfr_const_log2_internal@@Base+0x2fc>
   1bd04:	mov	x0, x2
   1bd08:	bl	ccf0 <mpfr_allocate_func@plt>
   1bd0c:	str	x0, [x29, #232]
   1bd10:	add	x19, x0, x19, lsl #3
   1bd14:	mov	w1, #0x1                   	// #1
   1bd18:	b	1baa0 <mpfr_const_log2_internal@@Base+0x80>
   1bd1c:	ldr	x0, [x29, #232]
   1bd20:	bl	c1c0 <mpfr_reallocate_func@plt>
   1bd24:	str	x0, [x29, #232]
   1bd28:	b	1bd10 <mpfr_const_log2_internal@@Base+0x2f0>
   1bd2c:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1bd30:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1bd34:	add	x2, x2, #0xeb0
   1bd38:	add	x0, x0, #0xef8
   1bd3c:	mov	w1, #0xb1                  	// #177
   1bd40:	bl	cb40 <mpfr_assert_fail@plt>
   1bd44:	nop

000000000001bd48 <mpfr_const_log2@@Base>:
   1bd48:	stp	x29, x30, [sp, #-16]!
   1bd4c:	mov	x4, x0
   1bd50:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1bd54:	ldr	x2, [x0, #2560]
   1bd58:	add	x0, x0, #0xa00
   1bd5c:	blr	x2
   1bd60:	mov	x29, sp
   1bd64:	ldp	x29, x30, [sp], #16
   1bd68:	mrs	x3, tpidr_el0
   1bd6c:	mov	w2, w1
   1bd70:	add	x1, x3, x0
   1bd74:	mov	x0, x4
   1bd78:	b	c380 <mpfr_cache@plt>
   1bd7c:	nop

000000000001bd80 <mpfr_log@@Base>:
   1bd80:	stp	x29, x30, [sp, #-352]!
   1bd84:	mov	x29, sp
   1bd88:	stp	x27, x28, [sp, #80]
   1bd8c:	mov	x28, x1
   1bd90:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1bd94:	stp	x23, x24, [sp, #48]
   1bd98:	ldr	x23, [x28, #16]
   1bd9c:	stp	x19, x20, [sp, #16]
   1bda0:	stp	x21, x22, [sp, #32]
   1bda4:	cmp	x23, x1
   1bda8:	mov	x21, x0
   1bdac:	b.le	1c20c <mpfr_log@@Base+0x48c>
   1bdb0:	ldr	w0, [x28, #8]
   1bdb4:	tbnz	w0, #31, 1c1bc <mpfr_log@@Base+0x43c>
   1bdb8:	mov	w22, w2
   1bdbc:	cmp	x23, #0x1
   1bdc0:	b.eq	1c264 <mpfr_log@@Base+0x4e4>  // b.none
   1bdc4:	ldr	x0, [x21]
   1bdc8:	stp	x25, x26, [sp, #64]
   1bdcc:	str	x0, [sp, #96]
   1bdd0:	cmp	x0, #0x1
   1bdd4:	b.eq	1c28c <mpfr_log@@Base+0x50c>  // b.none
   1bdd8:	b.le	1c34c <mpfr_log@@Base+0x5cc>
   1bddc:	mrs	x20, tpidr_el0
   1bde0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1bde4:	ldr	x2, [x0, #2576]
   1bde8:	add	x0, x0, #0xa10
   1bdec:	blr	x2
   1bdf0:	ldr	x5, [sp, #96]
   1bdf4:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   1bdf8:	ldr	w0, [x20, x0]
   1bdfc:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   1be00:	sub	x25, x5, #0x1
   1be04:	str	w0, [sp, #116]
   1be08:	clz	x1, x25
   1be0c:	mov	w25, #0x40                  	// #64
   1be10:	sub	w25, w25, w1
   1be14:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1be18:	ldr	x1, [x0, #2512]
   1be1c:	add	x0, x0, #0x9d0
   1be20:	blr	x1
   1be24:	add	x3, x20, x0
   1be28:	ldr	x0, [x20, x0]
   1be2c:	lsl	w25, w25, #1
   1be30:	str	x4, [x3]
   1be34:	mov	x1, #0x7fffffffffffff00    	// #9223372036854775552
   1be38:	add	x25, x5, w25, sxtw
   1be3c:	str	x0, [sp, #136]
   1be40:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1be44:	ldr	x5, [x0, #2544]
   1be48:	add	x0, x0, #0x9f0
   1be4c:	blr	x5
   1be50:	add	x27, x25, #0xa
   1be54:	ldr	x3, [x20, x0]
   1be58:	str	x2, [x20, x0]
   1be5c:	str	x3, [sp, #128]
   1be60:	cmp	x27, x1
   1be64:	b.ge	1c348 <mpfr_log@@Base+0x5c8>  // b.tcont
   1be68:	add	x25, x25, #0x9
   1be6c:	asr	x25, x25, #6
   1be70:	add	x25, x25, #0x1
   1be74:	lsl	x0, x25, #1
   1be78:	cmp	x0, #0x10
   1be7c:	b.gt	1c0f0 <mpfr_log@@Base+0x370>
   1be80:	add	x1, sp, #0xe0
   1be84:	stp	xzr, x1, [sp, #208]
   1be88:	mov	x0, x1
   1be8c:	adrp	x26, 7f000 <__gmpfr_l2b@@Base+0x200>
   1be90:	adrp	x1, 7f000 <__gmpfr_l2b@@Base+0x200>
   1be94:	add	x24, sp, #0xb0
   1be98:	add	x19, sp, #0x90
   1be9c:	ldr	x26, [x26, #3976]
   1bea0:	add	x2, x0, x25, lsl #3
   1bea4:	mov	x3, #0x40                  	// #64
   1bea8:	str	x3, [sp, #120]
   1beac:	ldr	x25, [x1, #3928]
   1beb0:	mov	w1, #0x1                   	// #1
   1beb4:	str	x27, [sp, #144]
   1beb8:	str	w1, [sp, #152]
   1bebc:	stp	x0, x27, [sp, #168]
   1bec0:	str	w1, [sp, #184]
   1bec4:	str	x2, [sp, #200]
   1bec8:	add	x4, x27, #0x3
   1becc:	mov	x1, x28
   1bed0:	mov	w3, #0x0                   	// #0
   1bed4:	mov	x0, x24
   1bed8:	asr	x4, x4, #1
   1bedc:	sub	x4, x4, x23
   1bee0:	str	x4, [sp, #104]
   1bee4:	mov	x2, x4
   1bee8:	bl	bb90 <mpfr_mul_2si@plt>
   1beec:	mov	x2, x24
   1bef0:	mov	x1, x26
   1bef4:	mov	w3, #0x0                   	// #0
   1bef8:	mov	x0, x19
   1befc:	bl	c620 <mpfr_div@plt>
   1bf00:	mov	x2, x19
   1bf04:	mov	x1, x25
   1bf08:	mov	w3, #0x0                   	// #0
   1bf0c:	mov	x0, x24
   1bf10:	bl	ba00 <mpfr_agm@plt>
   1bf14:	mov	x1, x24
   1bf18:	mov	w3, #0x0                   	// #0
   1bf1c:	mov	x2, #0x1                   	// #1
   1bf20:	mov	x0, x24
   1bf24:	bl	c2c0 <mpfr_mul_2ui@plt>
   1bf28:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1bf2c:	ldr	x1, [x0, #2624]
   1bf30:	add	x0, x0, #0xa40
   1bf34:	blr	x1
   1bf38:	mov	w2, #0x0                   	// #0
   1bf3c:	add	x1, x20, x0
   1bf40:	mov	x0, x19
   1bf44:	bl	c380 <mpfr_cache@plt>
   1bf48:	mov	x1, x19
   1bf4c:	mov	w3, #0x0                   	// #0
   1bf50:	mov	x2, x24
   1bf54:	mov	x0, x24
   1bf58:	bl	c620 <mpfr_div@plt>
   1bf5c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1bf60:	ldr	x1, [x0, #2560]
   1bf64:	add	x0, x0, #0xa00
   1bf68:	blr	x1
   1bf6c:	mov	w2, #0x0                   	// #0
   1bf70:	add	x1, x20, x0
   1bf74:	mov	x0, x19
   1bf78:	bl	c380 <mpfr_cache@plt>
   1bf7c:	ldr	x4, [sp, #104]
   1bf80:	mov	x1, x19
   1bf84:	mov	w3, #0x0                   	// #0
   1bf88:	mov	x0, x19
   1bf8c:	mov	x2, x4
   1bf90:	bl	c960 <mpfr_mul_si@plt>
   1bf94:	mov	x1, x24
   1bf98:	mov	x2, x19
   1bf9c:	mov	x0, x19
   1bfa0:	mov	w3, #0x0                   	// #0
   1bfa4:	bl	bb70 <mpfr_sub@plt>
   1bfa8:	ldr	x4, [sp, #160]
   1bfac:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1bfb0:	cmp	x4, x1
   1bfb4:	b.le	1c104 <mpfr_log@@Base+0x384>
   1bfb8:	ldr	x0, [sp, #192]
   1bfbc:	cmp	x0, x1
   1bfc0:	b.le	1c104 <mpfr_log@@Base+0x384>
   1bfc4:	ldr	x1, [sp, #144]
   1bfc8:	subs	x4, x0, x4
   1bfcc:	ldr	x0, [sp, #168]
   1bfd0:	csel	x4, x4, xzr, pl  // pl = nfrst
   1bfd4:	sub	x1, x1, #0x1
   1bfd8:	cmp	w22, #0x0
   1bfdc:	ldr	x3, [sp, #96]
   1bfe0:	sub	x2, x27, x4
   1bfe4:	asr	x1, x1, #6
   1bfe8:	sub	x2, x2, #0x4
   1bfec:	cinc	x3, x3, eq  // eq = none
   1bff0:	add	x1, x1, #0x1
   1bff4:	str	x4, [sp, #104]
   1bff8:	bl	c370 <mpfr_round_p@plt>
   1bffc:	ldr	x4, [sp, #104]
   1c000:	cbz	w0, 1c240 <mpfr_log@@Base+0x4c0>
   1c004:	ldr	w3, [sp, #152]
   1c008:	mov	x1, x19
   1c00c:	mov	w2, w22
   1c010:	mov	x0, x21
   1c014:	bl	c6a0 <mpfr_set4@plt>
   1c018:	mov	w19, w0
   1c01c:	ldr	x1, [sp, #208]
   1c020:	cbnz	x1, 1c0e4 <mpfr_log@@Base+0x364>
   1c024:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1c028:	ldr	x1, [x0, #2576]
   1c02c:	add	x0, x0, #0xa10
   1c030:	blr	x1
   1c034:	add	x2, x20, x0
   1c038:	ldr	w1, [sp, #116]
   1c03c:	str	w1, [x20, x0]
   1c040:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1c044:	ldr	x3, [x0, #2512]
   1c048:	add	x0, x0, #0x9d0
   1c04c:	blr	x3
   1c050:	ldr	x3, [sp, #136]
   1c054:	str	x3, [x20, x0]
   1c058:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1c05c:	ldr	x4, [x0, #2544]
   1c060:	add	x0, x0, #0x9f0
   1c064:	blr	x4
   1c068:	ldr	x1, [x21, #16]
   1c06c:	ldr	x4, [sp, #128]
   1c070:	str	x4, [x20, x0]
   1c074:	cmp	x4, x1
   1c078:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   1c07c:	b.le	1c0b4 <mpfr_log@@Base+0x334>
   1c080:	mov	w1, w19
   1c084:	mov	w2, w22
   1c088:	mov	x0, x21
   1c08c:	bl	cb30 <mpfr_check_range@plt>
   1c090:	mov	w19, w0
   1c094:	ldp	x25, x26, [sp, #64]
   1c098:	mov	w0, w19
   1c09c:	ldp	x19, x20, [sp, #16]
   1c0a0:	ldp	x21, x22, [sp, #32]
   1c0a4:	ldp	x23, x24, [sp, #48]
   1c0a8:	ldp	x27, x28, [sp, #80]
   1c0ac:	ldp	x29, x30, [sp], #352
   1c0b0:	ret
   1c0b4:	cbz	w19, 1c094 <mpfr_log@@Base+0x314>
   1c0b8:	ldr	w0, [sp, #116]
   1c0bc:	ldp	x25, x26, [sp, #64]
   1c0c0:	orr	w0, w0, #0x8
   1c0c4:	str	w0, [x2]
   1c0c8:	mov	w0, w19
   1c0cc:	ldp	x19, x20, [sp, #16]
   1c0d0:	ldp	x21, x22, [sp, #32]
   1c0d4:	ldp	x23, x24, [sp, #48]
   1c0d8:	ldp	x27, x28, [sp, #80]
   1c0dc:	ldp	x29, x30, [sp], #352
   1c0e0:	ret
   1c0e4:	ldr	x0, [sp, #216]
   1c0e8:	bl	cc20 <mpfr_free_func@plt>
   1c0ec:	b	1c024 <mpfr_log@@Base+0x2a4>
   1c0f0:	lsl	x0, x25, #4
   1c0f4:	str	x0, [sp, #208]
   1c0f8:	bl	ccf0 <mpfr_allocate_func@plt>
   1c0fc:	str	x0, [sp, #216]
   1c100:	b	1be8c <mpfr_log@@Base+0x10c>
   1c104:	cmp	x27, #0x1
   1c108:	b.eq	1c138 <mpfr_log@@Base+0x3b8>  // b.none
   1c10c:	sub	x1, x27, #0x1
   1c110:	mov	w0, #0x40                  	// #64
   1c114:	clz	x1, x1
   1c118:	sub	w0, w0, w1
   1c11c:	add	x27, x27, w0, sxtw
   1c120:	ldr	x1, [sp, #120]
   1c124:	mov	x0, #0xfffffffffffffeff    	// #-257
   1c128:	movk	x0, #0x7fff, lsl #48
   1c12c:	sub	x0, x0, x27
   1c130:	cmp	x0, x1
   1c134:	b.lt	1c330 <mpfr_log@@Base+0x5b0>  // b.tstop
   1c138:	ldr	x0, [sp, #120]
   1c13c:	ldr	x1, [sp, #208]
   1c140:	add	x27, x27, x0
   1c144:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   1c148:	cmp	x27, x0
   1c14c:	add	x0, x27, x27, lsr #63
   1c150:	asr	x0, x0, #1
   1c154:	str	x0, [sp, #120]
   1c158:	b.ge	1c348 <mpfr_log@@Base+0x5c8>  // b.tcont
   1c15c:	sub	x3, x27, #0x1
   1c160:	asr	x3, x3, #6
   1c164:	add	x3, x3, #0x1
   1c168:	str	x3, [sp, #104]
   1c16c:	lsl	x2, x3, #4
   1c170:	str	x2, [sp, #208]
   1c174:	cbz	x1, 1c1a8 <mpfr_log@@Base+0x428>
   1c178:	ldr	x0, [sp, #216]
   1c17c:	bl	c1c0 <mpfr_reallocate_func@plt>
   1c180:	str	x0, [sp, #216]
   1c184:	ldr	x3, [sp, #104]
   1c188:	mov	w1, #0x1                   	// #1
   1c18c:	add	x3, x0, x3, lsl #3
   1c190:	str	x27, [sp, #144]
   1c194:	str	w1, [sp, #152]
   1c198:	stp	x0, x27, [sp, #168]
   1c19c:	str	w1, [sp, #184]
   1c1a0:	str	x3, [sp, #200]
   1c1a4:	b	1bec8 <mpfr_log@@Base+0x148>
   1c1a8:	mov	x0, x2
   1c1ac:	bl	ccf0 <mpfr_allocate_func@plt>
   1c1b0:	str	x0, [sp, #216]
   1c1b4:	ldr	x3, [sp, #104]
   1c1b8:	b	1c188 <mpfr_log@@Base+0x408>
   1c1bc:	mrs	x1, tpidr_el0
   1c1c0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1c1c4:	ldr	x2, [x0, #2576]
   1c1c8:	add	x0, x0, #0xa10
   1c1cc:	blr	x2
   1c1d0:	add	x0, x1, x0
   1c1d4:	mov	x1, #0x2                   	// #2
   1c1d8:	movk	x1, #0x8000, lsl #48
   1c1dc:	str	x1, [x21, #16]
   1c1e0:	mov	w19, #0x0                   	// #0
   1c1e4:	ldr	w1, [x0]
   1c1e8:	ldp	x21, x22, [sp, #32]
   1c1ec:	orr	w1, w1, #0x4
   1c1f0:	str	w1, [x0]
   1c1f4:	mov	w0, w19
   1c1f8:	ldp	x19, x20, [sp, #16]
   1c1fc:	ldp	x23, x24, [sp, #48]
   1c200:	ldp	x27, x28, [sp, #80]
   1c204:	ldp	x29, x30, [sp], #352
   1c208:	ret
   1c20c:	mov	x0, #0x2                   	// #2
   1c210:	movk	x0, #0x8000, lsl #48
   1c214:	cmp	x23, x0
   1c218:	b.eq	1c1bc <mpfr_log@@Base+0x43c>  // b.none
   1c21c:	cmp	x23, x1
   1c220:	b.ne	1c2f8 <mpfr_log@@Base+0x578>  // b.any
   1c224:	ldr	w0, [x28, #8]
   1c228:	tbnz	w0, #31, 1c1bc <mpfr_log@@Base+0x43c>
   1c22c:	mov	w0, #0x1                   	// #1
   1c230:	mov	w19, #0x0                   	// #0
   1c234:	str	w0, [x21, #8]
   1c238:	str	x23, [x21, #16]
   1c23c:	b	1c098 <mpfr_log@@Base+0x318>
   1c240:	cmp	x27, #0x1
   1c244:	b.eq	1c25c <mpfr_log@@Base+0x4dc>  // b.none
   1c248:	sub	x0, x27, #0x1
   1c24c:	mov	w1, #0x40                  	// #64
   1c250:	clz	x0, x0
   1c254:	sub	w0, w1, w0
   1c258:	add	x4, x4, w0, sxtw
   1c25c:	add	x27, x27, x4
   1c260:	b	1c120 <mpfr_log@@Base+0x3a0>
   1c264:	mov	x1, x23
   1c268:	mov	x0, x28
   1c26c:	mov	x2, #0x0                   	// #0
   1c270:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   1c274:	mov	w19, w0
   1c278:	cbnz	w0, 1bdc4 <mpfr_log@@Base+0x44>
   1c27c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1c280:	str	w23, [x21, #8]
   1c284:	str	x0, [x21, #16]
   1c288:	b	1c098 <mpfr_log@@Base+0x318>
   1c28c:	mrs	x20, tpidr_el0
   1c290:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1c294:	ldr	x1, [x0, #2576]
   1c298:	add	x0, x0, #0xa10
   1c29c:	blr	x1
   1c2a0:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   1c2a4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   1c2a8:	mov	x27, #0xb                   	// #11
   1c2ac:	ldr	w0, [x20, x0]
   1c2b0:	str	w0, [sp, #116]
   1c2b4:	ldr	x25, [sp, #96]
   1c2b8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1c2bc:	ldr	x2, [x0, #2512]
   1c2c0:	add	x0, x0, #0x9d0
   1c2c4:	blr	x2
   1c2c8:	add	x2, x20, x0
   1c2cc:	ldr	x0, [x20, x0]
   1c2d0:	str	x0, [sp, #136]
   1c2d4:	str	x3, [x2]
   1c2d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1c2dc:	ldr	x4, [x0, #2544]
   1c2e0:	add	x0, x0, #0x9f0
   1c2e4:	blr	x4
   1c2e8:	ldr	x2, [x20, x0]
   1c2ec:	str	x1, [x20, x0]
   1c2f0:	str	x2, [sp, #128]
   1c2f4:	b	1be80 <mpfr_log@@Base+0x100>
   1c2f8:	mrs	x2, tpidr_el0
   1c2fc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1c300:	ldr	x3, [x0, #2576]
   1c304:	add	x0, x0, #0xa10
   1c308:	blr	x3
   1c30c:	add	x0, x2, x0
   1c310:	str	x1, [x21, #16]
   1c314:	mov	w2, #0xffffffff            	// #-1
   1c318:	mov	w19, #0x0                   	// #0
   1c31c:	str	w2, [x21, #8]
   1c320:	ldr	w1, [x0]
   1c324:	orr	w1, w1, #0x20
   1c328:	str	w1, [x0]
   1c32c:	b	1c098 <mpfr_log@@Base+0x318>
   1c330:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   1c334:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1c338:	add	x2, x2, #0xc08
   1c33c:	add	x0, x0, #0xf08
   1c340:	mov	w1, #0xb5                  	// #181
   1c344:	bl	cb40 <mpfr_assert_fail@plt>
   1c348:	bl	c8e0 <mpfr_abort_prec_max@plt>
   1c34c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   1c350:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1c354:	add	x2, x2, #0xaf8
   1c358:	add	x0, x0, #0xf08
   1c35c:	mov	w1, #0x70                  	// #112
   1c360:	bl	cb40 <mpfr_assert_fail@plt>
   1c364:	nop

000000000001c368 <mpfr_modf@@Base>:
   1c368:	stp	x29, x30, [sp, #-64]!
   1c36c:	cmp	x0, x1
   1c370:	mov	x29, sp
   1c374:	stp	x19, x20, [sp, #16]
   1c378:	stp	x21, x22, [sp, #32]
   1c37c:	str	x23, [sp, #48]
   1c380:	b.eq	1c664 <mpfr_modf@@Base+0x2fc>  // b.none
   1c384:	mov	x19, x2
   1c388:	mov	x21, x1
   1c38c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   1c390:	mov	x20, x0
   1c394:	ldr	x1, [x19, #16]
   1c398:	cmp	x1, x2
   1c39c:	b.le	1c5e0 <mpfr_modf@@Base+0x278>
   1c3a0:	mov	w22, w3
   1c3a4:	cmp	x1, #0x0
   1c3a8:	b.le	1c4cc <mpfr_modf@@Base+0x164>
   1c3ac:	ldr	x2, [x19]
   1c3b0:	cmp	x1, x2
   1c3b4:	b.ge	1c438 <mpfr_modf@@Base+0xd0>  // b.tcont
   1c3b8:	cmp	x0, x19
   1c3bc:	b.ne	1c5b8 <mpfr_modf@@Base+0x250>  // b.any
   1c3c0:	mov	w2, w3
   1c3c4:	mov	x1, x20
   1c3c8:	mov	x0, x21
   1c3cc:	bl	bec0 <mpfr_frac@plt>
   1c3d0:	mov	w2, w22
   1c3d4:	mov	w19, w0
   1c3d8:	mov	x1, x20
   1c3dc:	mov	x0, x20
   1c3e0:	bl	bf30 <mpfr_rint_trunc@plt>
   1c3e4:	mov	w23, w0
   1c3e8:	cmp	w23, #0x0
   1c3ec:	cbz	w23, 1c4b0 <mpfr_modf@@Base+0x148>
   1c3f0:	cset	w23, le
   1c3f4:	add	w23, w23, #0x1
   1c3f8:	cbnz	w19, 1c4b4 <mpfr_modf@@Base+0x14c>
   1c3fc:	mrs	x1, tpidr_el0
   1c400:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1c404:	ldr	x2, [x0, #2576]
   1c408:	add	x0, x0, #0xa10
   1c40c:	blr	x2
   1c410:	add	x0, x1, x0
   1c414:	ldr	w1, [x0]
   1c418:	orr	w1, w1, #0x8
   1c41c:	str	w1, [x0]
   1c420:	mov	w0, w23
   1c424:	ldp	x19, x20, [sp, #16]
   1c428:	ldp	x21, x22, [sp, #32]
   1c42c:	ldr	x23, [sp, #48]
   1c430:	ldp	x29, x30, [sp], #64
   1c434:	ret
   1c438:	ldr	w3, [x19, #8]
   1c43c:	cmp	x0, x19
   1c440:	b.eq	1c590 <mpfr_modf@@Base+0x228>  // b.none
   1c444:	mov	w2, w22
   1c448:	mov	x1, x19
   1c44c:	bl	c6a0 <mpfr_set4@plt>
   1c450:	ldr	w2, [x19, #8]
   1c454:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1c458:	str	w2, [x21, #8]
   1c45c:	mov	w2, w0
   1c460:	str	x1, [x21, #16]
   1c464:	cbz	w0, 1c574 <mpfr_modf@@Base+0x20c>
   1c468:	mrs	x1, tpidr_el0
   1c46c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1c470:	ldr	x3, [x0, #2576]
   1c474:	add	x0, x0, #0xa10
   1c478:	blr	x3
   1c47c:	add	x1, x1, x0
   1c480:	cmp	w2, #0x0
   1c484:	cset	w23, le
   1c488:	add	w23, w23, #0x1
   1c48c:	ldr	w0, [x1]
   1c490:	ldp	x19, x20, [sp, #16]
   1c494:	orr	w0, w0, #0x8
   1c498:	str	w0, [x1]
   1c49c:	mov	w0, w23
   1c4a0:	ldp	x21, x22, [sp, #32]
   1c4a4:	ldr	x23, [sp, #48]
   1c4a8:	ldp	x29, x30, [sp], #64
   1c4ac:	ret
   1c4b0:	cbz	w19, 1c574 <mpfr_modf@@Base+0x20c>
   1c4b4:	cmp	w19, #0x0
   1c4b8:	mov	w0, #0x4                   	// #4
   1c4bc:	mov	w1, #0x8                   	// #8
   1c4c0:	csel	w0, w0, w1, gt
   1c4c4:	orr	w23, w23, w0
   1c4c8:	b	1c3fc <mpfr_modf@@Base+0x94>
   1c4cc:	ldr	w3, [x19, #8]
   1c4d0:	cmp	x21, x19
   1c4d4:	b.eq	1c54c <mpfr_modf@@Base+0x1e4>  // b.none
   1c4d8:	mov	w2, w22
   1c4dc:	mov	x1, x19
   1c4e0:	mov	x0, x21
   1c4e4:	bl	c6a0 <mpfr_set4@plt>
   1c4e8:	ldr	w2, [x19, #8]
   1c4ec:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1c4f0:	str	w2, [x20, #8]
   1c4f4:	mov	w2, w0
   1c4f8:	str	x1, [x20, #16]
   1c4fc:	cbz	w0, 1c574 <mpfr_modf@@Base+0x20c>
   1c500:	mrs	x1, tpidr_el0
   1c504:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1c508:	ldr	x3, [x0, #2576]
   1c50c:	add	x0, x0, #0xa10
   1c510:	blr	x3
   1c514:	add	x1, x1, x0
   1c518:	cmp	w2, #0x0
   1c51c:	mov	w0, #0x8                   	// #8
   1c520:	mov	w23, #0x4                   	// #4
   1c524:	csel	w23, w23, w0, gt
   1c528:	ldr	w0, [x1]
   1c52c:	ldp	x19, x20, [sp, #16]
   1c530:	orr	w0, w0, #0x8
   1c534:	str	w0, [x1]
   1c538:	mov	w0, w23
   1c53c:	ldp	x21, x22, [sp, #32]
   1c540:	ldr	x23, [sp, #48]
   1c544:	ldp	x29, x30, [sp], #64
   1c548:	ret
   1c54c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1c550:	str	w3, [x20, #8]
   1c554:	str	x0, [x20, #16]
   1c558:	mov	w23, #0x0                   	// #0
   1c55c:	mov	w0, w23
   1c560:	ldp	x19, x20, [sp, #16]
   1c564:	ldp	x21, x22, [sp, #32]
   1c568:	ldr	x23, [sp, #48]
   1c56c:	ldp	x29, x30, [sp], #64
   1c570:	ret
   1c574:	mov	w23, #0x0                   	// #0
   1c578:	mov	w0, w23
   1c57c:	ldp	x19, x20, [sp, #16]
   1c580:	ldp	x21, x22, [sp, #32]
   1c584:	ldr	x23, [sp, #48]
   1c588:	ldp	x29, x30, [sp], #64
   1c58c:	ret
   1c590:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1c594:	str	w3, [x21, #8]
   1c598:	str	x0, [x21, #16]
   1c59c:	mov	w23, #0x0                   	// #0
   1c5a0:	mov	w0, w23
   1c5a4:	ldp	x19, x20, [sp, #16]
   1c5a8:	ldp	x21, x22, [sp, #32]
   1c5ac:	ldr	x23, [sp, #48]
   1c5b0:	ldp	x29, x30, [sp], #64
   1c5b4:	ret
   1c5b8:	mov	w2, w3
   1c5bc:	mov	x1, x19
   1c5c0:	bl	bf30 <mpfr_rint_trunc@plt>
   1c5c4:	mov	w23, w0
   1c5c8:	mov	x1, x19
   1c5cc:	mov	w2, w22
   1c5d0:	mov	x0, x21
   1c5d4:	bl	bec0 <mpfr_frac@plt>
   1c5d8:	mov	w19, w0
   1c5dc:	b	1c3e8 <mpfr_modf@@Base+0x80>
   1c5e0:	mov	x0, #0x2                   	// #2
   1c5e4:	movk	x0, #0x8000, lsl #48
   1c5e8:	cmp	x1, x0
   1c5ec:	b.eq	1c630 <mpfr_modf@@Base+0x2c8>  // b.none
   1c5f0:	ldr	w0, [x19, #8]
   1c5f4:	cmp	x1, x2
   1c5f8:	str	w0, [x20, #8]
   1c5fc:	ldr	w0, [x19, #8]
   1c600:	str	w0, [x21, #8]
   1c604:	b.eq	1c61c <mpfr_modf@@Base+0x2b4>  // b.none
   1c608:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1c60c:	str	x0, [x20, #16]
   1c610:	mov	w23, #0x0                   	// #0
   1c614:	str	x0, [x21, #16]
   1c618:	b	1c420 <mpfr_modf@@Base+0xb8>
   1c61c:	str	x1, [x20, #16]
   1c620:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1c624:	mov	w23, #0x0                   	// #0
   1c628:	str	x0, [x21, #16]
   1c62c:	b	1c420 <mpfr_modf@@Base+0xb8>
   1c630:	mrs	x2, tpidr_el0
   1c634:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1c638:	ldr	x3, [x0, #2576]
   1c63c:	add	x0, x0, #0xa10
   1c640:	blr	x3
   1c644:	add	x0, x2, x0
   1c648:	str	x1, [x20, #16]
   1c64c:	str	x1, [x21, #16]
   1c650:	mov	w23, #0x0                   	// #0
   1c654:	ldr	w1, [x0]
   1c658:	orr	w1, w1, #0x4
   1c65c:	str	w1, [x0]
   1c660:	b	1c420 <mpfr_modf@@Base+0xb8>
   1c664:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1c668:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1c66c:	add	x2, x2, #0xf10
   1c670:	add	x0, x0, #0xf20
   1c674:	mov	w1, #0x2b                  	// #43
   1c678:	bl	cb40 <mpfr_assert_fail@plt>
   1c67c:	nop

000000000001c680 <mpfr_mul_2exp@@Base>:
   1c680:	b	c2c0 <mpfr_mul_2ui@plt>
   1c684:	nop

000000000001c688 <mpfr_mul_2si@@Base>:
   1c688:	stp	x29, x30, [sp, #-80]!
   1c68c:	mov	x29, sp
   1c690:	stp	x21, x22, [sp, #32]
   1c694:	mov	w22, w3
   1c698:	ldr	x21, [x1, #16]
   1c69c:	stp	x19, x20, [sp, #16]
   1c6a0:	mov	x20, x2
   1c6a4:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   1c6a8:	cmp	x21, x2
   1c6ac:	b.le	1c8f0 <mpfr_mul_2si@@Base+0x268>
   1c6b0:	stp	x23, x24, [sp, #48]
   1c6b4:	mov	x19, x0
   1c6b8:	cmp	x1, x0
   1c6bc:	mov	w23, #0x0                   	// #0
   1c6c0:	b.eq	1c7bc <mpfr_mul_2si@@Base+0x134>  // b.none
   1c6c4:	ldr	w23, [x1, #8]
   1c6c8:	ldr	x6, [x1]
   1c6cc:	str	w23, [x0, #8]
   1c6d0:	ldr	x5, [x0]
   1c6d4:	cmp	x5, x6
   1c6d8:	b.eq	1c838 <mpfr_mul_2si@@Base+0x1b0>  // b.none
   1c6dc:	sub	x6, x6, #0x1
   1c6e0:	sub	x7, x5, #0x1
   1c6e4:	ldr	x8, [x1, #24]
   1c6e8:	asr	x6, x6, #6
   1c6ec:	asr	x7, x7, #6
   1c6f0:	ldr	x24, [x0, #24]
   1c6f4:	b.ge	1c9ec <mpfr_mul_2si@@Base+0x364>  // b.tcont
   1c6f8:	sub	x6, x6, x7
   1c6fc:	str	x25, [sp, #64]
   1c700:	neg	w5, w5
   1c704:	add	x2, x7, #0x1
   1c708:	ands	w5, w5, #0x3f
   1c70c:	add	x1, x8, x6, lsl #3
   1c710:	b.eq	1ca28 <mpfr_mul_2si@@Base+0x3a0>  // b.none
   1c714:	ldr	x3, [x8, x6, lsl #3]
   1c718:	sub	w5, w5, #0x1
   1c71c:	mov	x0, #0x1                   	// #1
   1c720:	cmp	w22, #0x0
   1c724:	lsl	x0, x0, x5
   1c728:	and	x9, x3, x0
   1c72c:	sub	x0, x0, #0x1
   1c730:	ccmp	x9, #0x0, #0x4, ne  // ne = any
   1c734:	and	x0, x0, x3
   1c738:	b.ne	1c768 <mpfr_mul_2si@@Base+0xe0>  // b.any
   1c73c:	cmp	x0, #0x0
   1c740:	mov	x4, x6
   1c744:	ccmp	x6, #0x0, #0x4, eq  // eq = none
   1c748:	b.eq	1c768 <mpfr_mul_2si@@Base+0xe0>  // b.none
   1c74c:	mvn	x3, x6
   1c750:	add	x3, x1, x3, lsl #3
   1c754:	nop
   1c758:	ldr	x0, [x3, x4, lsl #3]
   1c75c:	subs	x4, x4, #0x1
   1c760:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   1c764:	b.eq	1c758 <mpfr_mul_2si@@Base+0xd0>  // b.none
   1c768:	mov	x25, #0x2                   	// #2
   1c76c:	lsl	x25, x25, x5
   1c770:	cmp	w22, #0x5
   1c774:	b.eq	1c8e8 <mpfr_mul_2si@@Base+0x260>  // b.none
   1c778:	cbnz	w22, 1c864 <mpfr_mul_2si@@Base+0x1dc>
   1c77c:	cbz	x9, 1c8e4 <mpfr_mul_2si@@Base+0x25c>
   1c780:	ldr	x3, [x8, x6, lsl #3]
   1c784:	and	x4, x25, x3
   1c788:	orr	x0, x4, x0
   1c78c:	cbnz	x0, 1c884 <mpfr_mul_2si@@Base+0x1fc>
   1c790:	neg	w23, w23
   1c794:	cmp	x24, x1
   1c798:	b.eq	1c7a8 <mpfr_mul_2si@@Base+0x120>  // b.none
   1c79c:	lsl	x2, x2, #3
   1c7a0:	mov	x0, x24
   1c7a4:	bl	ba10 <memcpy@plt>
   1c7a8:	ldr	x0, [x24]
   1c7ac:	neg	x5, x25
   1c7b0:	ldr	x25, [sp, #64]
   1c7b4:	and	x5, x0, x5
   1c7b8:	str	x5, [x24]
   1c7bc:	mrs	x1, tpidr_el0
   1c7c0:	tbz	x20, #63, 1c908 <mpfr_mul_2si@@Base+0x280>
   1c7c4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1c7c8:	ldr	x2, [x0, #2512]
   1c7cc:	add	x0, x0, #0x9d0
   1c7d0:	blr	x2
   1c7d4:	ldr	x0, [x1, x0]
   1c7d8:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   1c7dc:	add	x2, x20, x2
   1c7e0:	cmp	x2, x0
   1c7e4:	b.lt	1c98c <mpfr_mul_2si@@Base+0x304>  // b.tstop
   1c7e8:	sub	x2, x0, x20
   1c7ec:	cmp	x2, x21
   1c7f0:	b.gt	1c98c <mpfr_mul_2si@@Base+0x304>
   1c7f4:	add	x20, x21, x20
   1c7f8:	str	x20, [x19, #16]
   1c7fc:	cbz	w23, 1c820 <mpfr_mul_2si@@Base+0x198>
   1c800:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1c804:	ldr	x2, [x0, #2576]
   1c808:	add	x0, x0, #0xa10
   1c80c:	blr	x2
   1c810:	add	x0, x1, x0
   1c814:	ldr	w1, [x0]
   1c818:	orr	w1, w1, #0x8
   1c81c:	str	w1, [x0]
   1c820:	mov	w0, w23
   1c824:	ldp	x19, x20, [sp, #16]
   1c828:	ldp	x21, x22, [sp, #32]
   1c82c:	ldp	x23, x24, [sp, #48]
   1c830:	ldp	x29, x30, [sp], #80
   1c834:	ret
   1c838:	ldr	x1, [x1, #24]
   1c83c:	mov	w23, #0x0                   	// #0
   1c840:	ldr	x0, [x0, #24]
   1c844:	cmp	x0, x1
   1c848:	b.eq	1c7bc <mpfr_mul_2si@@Base+0x134>  // b.none
   1c84c:	sub	x5, x5, #0x1
   1c850:	asr	x5, x5, #6
   1c854:	add	x5, x5, #0x1
   1c858:	lsl	x2, x5, #3
   1c85c:	bl	ba10 <memcpy@plt>
   1c860:	b	1c7bc <mpfr_mul_2si@@Base+0x134>
   1c864:	orr	x0, x0, x9
   1c868:	cmp	w22, #0x1
   1c86c:	b.eq	1c8e4 <mpfr_mul_2si@@Base+0x25c>  // b.none
   1c870:	add	w3, w22, w23, lsr #31
   1c874:	cmp	w3, #0x3
   1c878:	b.eq	1c8e4 <mpfr_mul_2si@@Base+0x25c>  // b.none
   1c87c:	cbz	x0, 1c8e8 <mpfr_mul_2si@@Base+0x260>
   1c880:	ldr	x3, [x8, x6, lsl #3]
   1c884:	adds	x3, x3, x25
   1c888:	str	x3, [x24]
   1c88c:	b.cc	1c958 <mpfr_mul_2si@@Base+0x2d0>  // b.lo, b.ul, b.last
   1c890:	mov	x0, #0x1                   	// #1
   1c894:	b	1c8b0 <mpfr_mul_2si@@Base+0x228>
   1c898:	ldr	x3, [x1, x0, lsl #3]
   1c89c:	add	x4, x0, #0x1
   1c8a0:	add	x3, x3, #0x1
   1c8a4:	str	x3, [x24, x0, lsl #3]
   1c8a8:	cbnz	x3, 1ca70 <mpfr_mul_2si@@Base+0x3e8>
   1c8ac:	mov	x0, x4
   1c8b0:	cmp	x2, x0
   1c8b4:	b.gt	1c898 <mpfr_mul_2si@@Base+0x210>
   1c8b8:	add	x2, x24, x2, lsl #3
   1c8bc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1c8c0:	add	x21, x21, #0x1
   1c8c4:	stur	x0, [x2, #-8]
   1c8c8:	ldr	x3, [x24]
   1c8cc:	nop
   1c8d0:	neg	x5, x25
   1c8d4:	and	x3, x5, x3
   1c8d8:	ldr	x25, [sp, #64]
   1c8dc:	str	x3, [x24]
   1c8e0:	b	1c7bc <mpfr_mul_2si@@Base+0x134>
   1c8e4:	cbnz	x0, 1c790 <mpfr_mul_2si@@Base+0x108>
   1c8e8:	mov	w23, #0x0                   	// #0
   1c8ec:	b	1c794 <mpfr_mul_2si@@Base+0x10c>
   1c8f0:	ldp	x19, x20, [sp, #16]
   1c8f4:	mov	w2, w3
   1c8f8:	ldp	x21, x22, [sp, #32]
   1c8fc:	ldp	x29, x30, [sp], #80
   1c900:	ldr	w3, [x1, #8]
   1c904:	b	c6a0 <mpfr_set4@plt>
   1c908:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1c90c:	ldr	x2, [x0, #2544]
   1c910:	add	x0, x0, #0x9f0
   1c914:	blr	x2
   1c918:	ldr	x0, [x1, x0]
   1c91c:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   1c920:	add	x2, x20, x2
   1c924:	cmp	x2, x0
   1c928:	b.gt	1c938 <mpfr_mul_2si@@Base+0x2b0>
   1c92c:	sub	x0, x0, x20
   1c930:	cmp	x0, x21
   1c934:	b.ge	1c7f4 <mpfr_mul_2si@@Base+0x16c>  // b.tcont
   1c938:	ldr	w2, [x19, #8]
   1c93c:	mov	w1, w22
   1c940:	mov	x0, x19
   1c944:	ldp	x19, x20, [sp, #16]
   1c948:	ldp	x21, x22, [sp, #32]
   1c94c:	ldp	x23, x24, [sp, #48]
   1c950:	ldp	x29, x30, [sp], #80
   1c954:	b	bf40 <mpfr_overflow@plt>
   1c958:	cmp	x24, x1
   1c95c:	b.eq	1c8d0 <mpfr_mul_2si@@Base+0x248>  // b.none
   1c960:	cmp	x2, #0x1
   1c964:	b.eq	1c8d0 <mpfr_mul_2si@@Base+0x248>  // b.none
   1c968:	mov	x0, #0x1                   	// #1
   1c96c:	nop
   1c970:	ldr	x3, [x1, x0, lsl #3]
   1c974:	str	x3, [x24, x0, lsl #3]
   1c978:	add	x0, x0, #0x1
   1c97c:	cmp	x0, x2
   1c980:	b.ne	1c970 <mpfr_mul_2si@@Base+0x2e8>  // b.any
   1c984:	ldr	x3, [x24]
   1c988:	b	1c8d0 <mpfr_mul_2si@@Base+0x248>
   1c98c:	ldr	w2, [x19, #8]
   1c990:	cbnz	w22, 1c9cc <mpfr_mul_2si@@Base+0x344>
   1c994:	mov	x1, #0x4000000000000000    	// #4611686018427387904
   1c998:	add	x1, x20, x1
   1c99c:	cmp	x0, x1
   1c9a0:	b.gt	1cad8 <mpfr_mul_2si@@Base+0x450>
   1c9a4:	add	x20, x20, #0x1
   1c9a8:	sub	x0, x0, x20
   1c9ac:	cmp	x0, x21
   1c9b0:	b.gt	1cad8 <mpfr_mul_2si@@Base+0x450>
   1c9b4:	tbnz	w2, #31, 1cac0 <mpfr_mul_2si@@Base+0x438>
   1c9b8:	tbnz	w23, #31, 1c9cc <mpfr_mul_2si@@Base+0x344>
   1c9bc:	mov	x0, x19
   1c9c0:	bl	bf00 <mpfr_powerof2_raw@plt>
   1c9c4:	cmp	w0, #0x0
   1c9c8:	cset	w22, ne  // ne = any
   1c9cc:	ldr	w2, [x19, #8]
   1c9d0:	mov	w1, w22
   1c9d4:	mov	x0, x19
   1c9d8:	ldp	x19, x20, [sp, #16]
   1c9dc:	ldp	x21, x22, [sp, #32]
   1c9e0:	ldp	x23, x24, [sp, #48]
   1c9e4:	ldp	x29, x30, [sp], #80
   1c9e8:	b	c3c0 <mpfr_underflow@plt>
   1c9ec:	sub	x7, x7, x6
   1c9f0:	add	x6, x6, #0x1
   1c9f4:	lsl	x23, x7, #3
   1c9f8:	add	x0, x24, x23
   1c9fc:	cmp	x0, x8
   1ca00:	b.eq	1ca10 <mpfr_mul_2si@@Base+0x388>  // b.none
   1ca04:	lsl	x2, x6, #3
   1ca08:	mov	x1, x8
   1ca0c:	bl	ba10 <memcpy@plt>
   1ca10:	mov	x2, x23
   1ca14:	mov	x0, x24
   1ca18:	mov	w1, #0x0                   	// #0
   1ca1c:	mov	w23, #0x0                   	// #0
   1ca20:	bl	c110 <memset@plt>
   1ca24:	b	1c7bc <mpfr_mul_2si@@Base+0x134>
   1ca28:	ldur	x0, [x1, #-8]
   1ca2c:	cmp	w3, #0x0
   1ca30:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   1ca34:	and	x9, x0, #0x8000000000000000
   1ca38:	and	x4, x0, #0x7fffffffffffffff
   1ca3c:	b.lt	1ca9c <mpfr_mul_2si@@Base+0x414>  // b.tstop
   1ca40:	subs	x3, x6, #0x1
   1ca44:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   1ca48:	b.ne	1cacc <mpfr_mul_2si@@Base+0x444>  // b.any
   1ca4c:	mvn	x4, x6
   1ca50:	add	x4, x1, x4, lsl #3
   1ca54:	nop
   1ca58:	ldr	x0, [x4, x3, lsl #3]
   1ca5c:	subs	x3, x3, #0x1
   1ca60:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   1ca64:	b.eq	1ca58 <mpfr_mul_2si@@Base+0x3d0>  // b.none
   1ca68:	mov	x25, #0x1                   	// #1
   1ca6c:	b	1c770 <mpfr_mul_2si@@Base+0xe8>
   1ca70:	cmp	x24, x1
   1ca74:	b.eq	1c984 <mpfr_mul_2si@@Base+0x2fc>  // b.none
   1ca78:	cmp	x7, x0
   1ca7c:	b.le	1c984 <mpfr_mul_2si@@Base+0x2fc>
   1ca80:	ldr	x0, [x1, x4, lsl #3]
   1ca84:	str	x0, [x24, x4, lsl #3]
   1ca88:	cmp	x7, x4
   1ca8c:	add	x4, x4, #0x1
   1ca90:	b.gt	1ca80 <mpfr_mul_2si@@Base+0x3f8>
   1ca94:	ldr	x3, [x24]
   1ca98:	b	1c8d0 <mpfr_mul_2si@@Base+0x248>
   1ca9c:	cmp	w3, #0x5
   1caa0:	mov	x25, #0x1                   	// #1
   1caa4:	b.eq	1c8e8 <mpfr_mul_2si@@Base+0x260>  // b.none
   1caa8:	cmp	w3, #0x1
   1caac:	b.eq	1c790 <mpfr_mul_2si@@Base+0x108>  // b.none
   1cab0:	add	w3, w3, w23, lsr #31
   1cab4:	cmp	w3, #0x3
   1cab8:	b.ne	1c87c <mpfr_mul_2si@@Base+0x1f4>  // b.any
   1cabc:	b	1c790 <mpfr_mul_2si@@Base+0x108>
   1cac0:	cmp	w23, #0x0
   1cac4:	b.le	1c9bc <mpfr_mul_2si@@Base+0x334>
   1cac8:	b	1c9cc <mpfr_mul_2si@@Base+0x344>
   1cacc:	mov	x0, x4
   1cad0:	mov	x25, #0x1                   	// #1
   1cad4:	b	1c770 <mpfr_mul_2si@@Base+0xe8>
   1cad8:	mov	w22, #0x1                   	// #1
   1cadc:	b	1c9cc <mpfr_mul_2si@@Base+0x344>

000000000001cae0 <mpfr_mul_2ui@@Base>:
   1cae0:	stp	x29, x30, [sp, #-64]!
   1cae4:	cmp	x0, x1
   1cae8:	mov	x29, sp
   1caec:	stp	x19, x20, [sp, #16]
   1caf0:	mov	x20, x0
   1caf4:	mov	x19, x2
   1caf8:	stp	x21, x22, [sp, #32]
   1cafc:	mov	w21, w3
   1cb00:	mov	w22, #0x0                   	// #0
   1cb04:	str	x23, [sp, #48]
   1cb08:	b.eq	1cb1c <mpfr_mul_2ui@@Base+0x3c>  // b.none
   1cb0c:	mov	w2, w3
   1cb10:	ldr	w3, [x1, #8]
   1cb14:	bl	c6a0 <mpfr_set4@plt>
   1cb18:	mov	w22, w0
   1cb1c:	ldr	x1, [x20, #16]
   1cb20:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1cb24:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   1cb28:	cmp	x1, x0
   1cb2c:	b.le	1cb74 <mpfr_mul_2ui@@Base+0x94>
   1cb30:	tbnz	x19, #63, 1cb8c <mpfr_mul_2ui@@Base+0xac>
   1cb34:	mrs	x1, tpidr_el0
   1cb38:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1cb3c:	ldr	x2, [x0, #2544]
   1cb40:	add	x0, x0, #0x9f0
   1cb44:	blr	x2
   1cb48:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   1cb4c:	add	x3, x19, x3
   1cb50:	ldr	x2, [x20, #16]
   1cb54:	ldr	x1, [x1, x0]
   1cb58:	cmp	x3, x1
   1cb5c:	b.gt	1cbb0 <mpfr_mul_2ui@@Base+0xd0>
   1cb60:	sub	x1, x1, x19
   1cb64:	cmp	x1, x2
   1cb68:	b.lt	1cbb0 <mpfr_mul_2ui@@Base+0xd0>  // b.tstop
   1cb6c:	add	x19, x19, x2
   1cb70:	str	x19, [x20, #16]
   1cb74:	mov	w0, w22
   1cb78:	ldp	x19, x20, [sp, #16]
   1cb7c:	ldp	x21, x22, [sp, #32]
   1cb80:	ldr	x23, [sp, #48]
   1cb84:	ldp	x29, x30, [sp], #64
   1cb88:	ret
   1cb8c:	mov	w3, w21
   1cb90:	mov	x1, x20
   1cb94:	mov	x0, x20
   1cb98:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
   1cb9c:	add	x19, x19, x23
   1cba0:	bl	1cae0 <mpfr_mul_2ui@@Base>
   1cba4:	cbz	w0, 1cb30 <mpfr_mul_2ui@@Base+0x50>
   1cba8:	mov	w22, w0
   1cbac:	b	1cb74 <mpfr_mul_2ui@@Base+0x94>
   1cbb0:	ldr	w2, [x20, #8]
   1cbb4:	mov	w1, w21
   1cbb8:	mov	x0, x20
   1cbbc:	ldp	x19, x20, [sp, #16]
   1cbc0:	ldp	x21, x22, [sp, #32]
   1cbc4:	ldr	x23, [sp, #48]
   1cbc8:	ldp	x29, x30, [sp], #64
   1cbcc:	b	bf40 <mpfr_overflow@plt>

000000000001cbd0 <mpfr_neg@@Base>:
   1cbd0:	cmp	x0, x1
   1cbd4:	b.ne	1cc04 <mpfr_neg@@Base+0x34>  // b.any
   1cbd8:	mov	x3, x0
   1cbdc:	ldr	w0, [x0, #8]
   1cbe0:	mov	x1, #0x2                   	// #2
   1cbe4:	neg	w0, w0
   1cbe8:	movk	x1, #0x8000, lsl #48
   1cbec:	ldr	x2, [x3, #16]
   1cbf0:	str	w0, [x3, #8]
   1cbf4:	cmp	x2, x1
   1cbf8:	b.eq	1cc10 <mpfr_neg@@Base+0x40>  // b.none
   1cbfc:	mov	w0, #0x0                   	// #0
   1cc00:	ret
   1cc04:	ldr	w3, [x1, #8]
   1cc08:	neg	w3, w3
   1cc0c:	b	c6a0 <mpfr_set4@plt>
   1cc10:	mrs	x1, tpidr_el0
   1cc14:	stp	x29, x30, [sp, #-16]!
   1cc18:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1cc1c:	ldr	x2, [x0, #2576]
   1cc20:	add	x0, x0, #0xa10
   1cc24:	blr	x2
   1cc28:	add	x0, x1, x0
   1cc2c:	mov	x29, sp
   1cc30:	ldr	w1, [x0]
   1cc34:	orr	w1, w1, #0x4
   1cc38:	str	w1, [x0]
   1cc3c:	mov	w0, #0x0                   	// #0
   1cc40:	ldp	x29, x30, [sp], #16
   1cc44:	ret

000000000001cc48 <mpfr_nexttozero@@Base>:
   1cc48:	stp	x29, x30, [sp, #-32]!
   1cc4c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1cc50:	mov	x29, sp
   1cc54:	str	x19, [sp, #16]
   1cc58:	mov	x19, x0
   1cc5c:	ldr	x0, [x0, #16]
   1cc60:	cmp	x0, x1
   1cc64:	b.le	1ccdc <mpfr_nexttozero@@Base+0x94>
   1cc68:	ldr	x5, [x19, #24]
   1cc6c:	mov	x0, #0x1                   	// #1
   1cc70:	ldr	x3, [x19]
   1cc74:	ldr	x1, [x5]
   1cc78:	neg	w2, w3
   1cc7c:	sub	x3, x3, #0x1
   1cc80:	lsl	x0, x0, x2
   1cc84:	sub	x2, x1, x0
   1cc88:	str	x2, [x5]
   1cc8c:	asr	x3, x3, #6
   1cc90:	cmp	x0, x1
   1cc94:	add	x0, x3, #0x1
   1cc98:	b.ls	1ccc0 <mpfr_nexttozero@@Base+0x78>  // b.plast
   1cc9c:	add	x3, x5, x3, lsl #3
   1cca0:	mov	x1, x5
   1cca4:	b	1ccb8 <mpfr_nexttozero@@Base+0x70>
   1cca8:	ldr	x2, [x1, #8]
   1ccac:	sub	x4, x2, #0x1
   1ccb0:	str	x4, [x1, #8]!
   1ccb4:	cbnz	x2, 1ccc0 <mpfr_nexttozero@@Base+0x78>
   1ccb8:	cmp	x3, x1
   1ccbc:	b.ne	1cca8 <mpfr_nexttozero@@Base+0x60>  // b.any
   1ccc0:	lsl	x1, x0, #3
   1ccc4:	sub	x1, x1, #0x8
   1ccc8:	ldr	x0, [x5, x1]
   1cccc:	tbz	x0, #63, 1cd20 <mpfr_nexttozero@@Base+0xd8>
   1ccd0:	ldr	x19, [sp, #16]
   1ccd4:	ldp	x29, x30, [sp], #32
   1ccd8:	ret
   1ccdc:	b.eq	1cd5c <mpfr_nexttozero@@Base+0x114>  // b.none
   1cce0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1cce4:	cmp	x0, x1
   1cce8:	b.ne	1cd90 <mpfr_nexttozero@@Base+0x148>  // b.any
   1ccec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1ccf0:	ldr	x2, [x0, #2512]
   1ccf4:	add	x0, x0, #0x9d0
   1ccf8:	blr	x2
   1ccfc:	mrs	x1, tpidr_el0
   1cd00:	ldr	w2, [x19, #8]
   1cd04:	neg	w2, w2
   1cd08:	str	w2, [x19, #8]
   1cd0c:	ldr	x1, [x1, x0]
   1cd10:	mov	x0, x19
   1cd14:	ldr	x19, [sp, #16]
   1cd18:	ldp	x29, x30, [sp], #32
   1cd1c:	b	c2b0 <mpfr_setmin@plt>
   1cd20:	mrs	x3, tpidr_el0
   1cd24:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1cd28:	ldr	x2, [x0, #2512]
   1cd2c:	add	x0, x0, #0x9d0
   1cd30:	blr	x2
   1cd34:	ldr	x2, [x19, #16]
   1cd38:	ldr	x0, [x3, x0]
   1cd3c:	cmp	x0, x2
   1cd40:	b.eq	1cd84 <mpfr_nexttozero@@Base+0x13c>  // b.none
   1cd44:	sub	x2, x2, #0x1
   1cd48:	str	x2, [x19, #16]
   1cd4c:	ldr	x0, [x5, x1]
   1cd50:	orr	x0, x0, #0x8000000000000000
   1cd54:	str	x0, [x5, x1]
   1cd58:	b	1ccd0 <mpfr_nexttozero@@Base+0x88>
   1cd5c:	mrs	x1, tpidr_el0
   1cd60:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1cd64:	ldr	x2, [x0, #2544]
   1cd68:	add	x0, x0, #0x9f0
   1cd6c:	blr	x2
   1cd70:	ldr	x1, [x1, x0]
   1cd74:	mov	x0, x19
   1cd78:	ldr	x19, [sp, #16]
   1cd7c:	ldp	x29, x30, [sp], #32
   1cd80:	b	c0d0 <mpfr_setmax@plt>
   1cd84:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1cd88:	str	x0, [x19, #16]
   1cd8c:	b	1ccd0 <mpfr_nexttozero@@Base+0x88>
   1cd90:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1cd94:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1cd98:	add	x2, x2, #0xf80
   1cd9c:	add	x0, x0, #0xfb8
   1cda0:	mov	w1, #0x2b                  	// #43
   1cda4:	bl	cb40 <mpfr_assert_fail@plt>
   1cda8:	b	1ccec <mpfr_nexttozero@@Base+0xa4>
   1cdac:	nop

000000000001cdb0 <mpfr_nexttoinf@@Base>:
   1cdb0:	stp	x29, x30, [sp, #-16]!
   1cdb4:	mov	x3, x0
   1cdb8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1cdbc:	mov	x29, sp
   1cdc0:	ldr	x0, [x0, #16]
   1cdc4:	cmp	x0, x1
   1cdc8:	b.le	1ce58 <mpfr_nexttoinf@@Base+0xa8>
   1cdcc:	ldr	x5, [x3, #24]
   1cdd0:	mov	x1, #0x1                   	// #1
   1cdd4:	ldr	x0, [x3]
   1cdd8:	ldr	x2, [x5]
   1cddc:	neg	w4, w0
   1cde0:	lsl	x1, x1, x4
   1cde4:	adds	x1, x1, x2
   1cde8:	str	x1, [x5]
   1cdec:	b.cc	1ce50 <mpfr_nexttoinf@@Base+0xa0>  // b.lo, b.ul, b.last
   1cdf0:	sub	x0, x0, #0x1
   1cdf4:	mov	x2, x5
   1cdf8:	asr	x4, x0, #6
   1cdfc:	add	x0, x5, x4, lsl #3
   1ce00:	b	1ce14 <mpfr_nexttoinf@@Base+0x64>
   1ce04:	ldr	x1, [x2, #8]
   1ce08:	add	x1, x1, #0x1
   1ce0c:	str	x1, [x2, #8]!
   1ce10:	cbnz	x1, 1ce50 <mpfr_nexttoinf@@Base+0xa0>
   1ce14:	cmp	x2, x0
   1ce18:	b.ne	1ce04 <mpfr_nexttoinf@@Base+0x54>  // b.any
   1ce1c:	mrs	x1, tpidr_el0
   1ce20:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1ce24:	ldr	x2, [x0, #2544]
   1ce28:	add	x0, x0, #0x9f0
   1ce2c:	blr	x2
   1ce30:	ldr	x2, [x3, #16]
   1ce34:	ldr	x0, [x1, x0]
   1ce38:	cmp	x0, x2
   1ce3c:	b.eq	1ce88 <mpfr_nexttoinf@@Base+0xd8>  // b.none
   1ce40:	add	x2, x2, #0x1
   1ce44:	str	x2, [x3, #16]
   1ce48:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   1ce4c:	str	x0, [x5, x4, lsl #3]
   1ce50:	ldp	x29, x30, [sp], #16
   1ce54:	ret
   1ce58:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1ce5c:	cmp	x0, x1
   1ce60:	b.ne	1ce50 <mpfr_nexttoinf@@Base+0xa0>  // b.any
   1ce64:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1ce68:	ldr	x2, [x0, #2512]
   1ce6c:	add	x0, x0, #0x9d0
   1ce70:	blr	x2
   1ce74:	mrs	x1, tpidr_el0
   1ce78:	ldp	x29, x30, [sp], #16
   1ce7c:	ldr	x1, [x1, x0]
   1ce80:	mov	x0, x3
   1ce84:	b	c2b0 <mpfr_setmin@plt>
   1ce88:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1ce8c:	str	x0, [x3, #16]
   1ce90:	b	1ce50 <mpfr_nexttoinf@@Base+0xa0>
   1ce94:	nop

000000000001ce98 <mpfr_nextabove@@Base>:
   1ce98:	ldr	x3, [x0, #16]
   1ce9c:	mov	x2, #0x2                   	// #2
   1cea0:	movk	x2, #0x8000, lsl #48
   1cea4:	cmp	x3, x2
   1cea8:	b.eq	1cebc <mpfr_nextabove@@Base+0x24>  // b.none
   1ceac:	ldr	w1, [x0, #8]
   1ceb0:	tbnz	w1, #31, 1ceb8 <mpfr_nextabove@@Base+0x20>
   1ceb4:	b	c670 <mpfr_nexttoinf@plt>
   1ceb8:	b	c460 <mpfr_nexttozero@plt>
   1cebc:	mrs	x1, tpidr_el0
   1cec0:	stp	x29, x30, [sp, #-16]!
   1cec4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1cec8:	ldr	x2, [x0, #2576]
   1cecc:	add	x0, x0, #0xa10
   1ced0:	blr	x2
   1ced4:	add	x0, x1, x0
   1ced8:	mov	x29, sp
   1cedc:	ldr	w1, [x0]
   1cee0:	orr	w1, w1, #0x4
   1cee4:	str	w1, [x0]
   1cee8:	ldp	x29, x30, [sp], #16
   1ceec:	ret

000000000001cef0 <mpfr_nextbelow@@Base>:
   1cef0:	ldr	x3, [x0, #16]
   1cef4:	mov	x2, #0x2                   	// #2
   1cef8:	movk	x2, #0x8000, lsl #48
   1cefc:	cmp	x3, x2
   1cf00:	b.eq	1cf14 <mpfr_nextbelow@@Base+0x24>  // b.none
   1cf04:	ldr	w1, [x0, #8]
   1cf08:	tbnz	w1, #31, 1cf10 <mpfr_nextbelow@@Base+0x20>
   1cf0c:	b	c460 <mpfr_nexttozero@plt>
   1cf10:	b	c670 <mpfr_nexttoinf@plt>
   1cf14:	mrs	x1, tpidr_el0
   1cf18:	stp	x29, x30, [sp, #-16]!
   1cf1c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1cf20:	ldr	x2, [x0, #2576]
   1cf24:	add	x0, x0, #0xa10
   1cf28:	blr	x2
   1cf2c:	add	x0, x1, x0
   1cf30:	mov	x29, sp
   1cf34:	ldr	w1, [x0]
   1cf38:	orr	w1, w1, #0x4
   1cf3c:	str	w1, [x0]
   1cf40:	ldp	x29, x30, [sp], #16
   1cf44:	ret

000000000001cf48 <mpfr_nexttoward@@Base>:
   1cf48:	stp	x29, x30, [sp, #-32]!
   1cf4c:	mov	x3, #0x2                   	// #2
   1cf50:	movk	x3, #0x8000, lsl #48
   1cf54:	mov	x29, sp
   1cf58:	ldr	x4, [x0, #16]
   1cf5c:	cmp	x4, x3
   1cf60:	b.eq	1cfb0 <mpfr_nexttoward@@Base+0x68>  // b.none
   1cf64:	ldr	x2, [x1, #16]
   1cf68:	str	x19, [sp, #16]
   1cf6c:	mov	x19, x0
   1cf70:	cmp	x2, x3
   1cf74:	b.eq	1cfdc <mpfr_nexttoward@@Base+0x94>  // b.none
   1cf78:	mov	w2, #0x1                   	// #1
   1cf7c:	bl	c9a0 <mpfr_cmp3@plt>
   1cf80:	cmp	w0, #0x0
   1cf84:	cbz	w0, 1cfa4 <mpfr_nexttoward@@Base+0x5c>
   1cf88:	mov	x0, x19
   1cf8c:	ldr	x19, [sp, #16]
   1cf90:	b.lt	1cf9c <mpfr_nexttoward@@Base+0x54>  // b.tstop
   1cf94:	ldp	x29, x30, [sp], #32
   1cf98:	b	bdd0 <mpfr_nextbelow@plt>
   1cf9c:	ldp	x29, x30, [sp], #32
   1cfa0:	b	c120 <mpfr_nextabove@plt>
   1cfa4:	ldr	x19, [sp, #16]
   1cfa8:	ldp	x29, x30, [sp], #32
   1cfac:	ret
   1cfb0:	mrs	x1, tpidr_el0
   1cfb4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1cfb8:	ldr	x2, [x0, #2576]
   1cfbc:	add	x0, x0, #0xa10
   1cfc0:	blr	x2
   1cfc4:	add	x0, x1, x0
   1cfc8:	ldr	w1, [x0]
   1cfcc:	orr	w1, w1, #0x4
   1cfd0:	str	w1, [x0]
   1cfd4:	ldp	x29, x30, [sp], #32
   1cfd8:	ret
   1cfdc:	mrs	x1, tpidr_el0
   1cfe0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1cfe4:	ldr	x3, [x0, #2576]
   1cfe8:	add	x0, x0, #0xa10
   1cfec:	blr	x3
   1cff0:	add	x0, x1, x0
   1cff4:	str	x2, [x19, #16]
   1cff8:	ldr	x19, [sp, #16]
   1cffc:	ldr	w1, [x0]
   1d000:	orr	w1, w1, #0x4
   1d004:	str	w1, [x0]
   1d008:	b	1cfa8 <mpfr_nexttoward@@Base+0x60>
   1d00c:	nop

000000000001d010 <__gmpfr_out_str@@Base>:
   1d010:	stp	x29, x30, [sp, #-80]!
   1d014:	sub	w6, w1, #0x2
   1d018:	cmp	w6, #0x3c
   1d01c:	mov	x29, sp
   1d020:	stp	x19, x20, [sp, #16]
   1d024:	stp	x21, x22, [sp, #32]
   1d028:	mov	w21, w1
   1d02c:	b.hi	1d218 <__gmpfr_out_str@@Base+0x208>  // b.pmore
   1d030:	mov	x1, x3
   1d034:	mov	x3, x2
   1d038:	mov	w5, w4
   1d03c:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
   1d040:	ldr	x2, [x1, #16]
   1d044:	cmp	x2, x4
   1d048:	b.le	1d19c <__gmpfr_out_str@@Base+0x18c>
   1d04c:	mov	x4, x1
   1d050:	mov	w2, w21
   1d054:	add	x1, sp, #0x48
   1d058:	mov	x22, x0
   1d05c:	mov	x0, #0x0                   	// #0
   1d060:	str	x23, [sp, #48]
   1d064:	bl	c500 <mpfr_get_str@plt>
   1d068:	mov	x20, x0
   1d06c:	bl	bab0 <strlen@plt>
   1d070:	add	x19, x0, #0x1
   1d074:	mov	x23, x20
   1d078:	ldrb	w0, [x20]
   1d07c:	cmp	w0, #0x2d
   1d080:	b.eq	1d158 <__gmpfr_out_str@@Base+0x148>  // b.none
   1d084:	mov	x1, x22
   1d088:	bl	bda0 <fputc@plt>
   1d08c:	cmn	w0, #0x1
   1d090:	b.ne	1d0bc <__gmpfr_out_str@@Base+0xac>  // b.any
   1d094:	mov	x1, x19
   1d098:	mov	x0, x20
   1d09c:	bl	cc20 <mpfr_free_func@plt>
   1d0a0:	mov	x19, #0x0                   	// #0
   1d0a4:	ldr	x23, [sp, #48]
   1d0a8:	mov	x0, x19
   1d0ac:	ldp	x19, x20, [sp, #16]
   1d0b0:	ldp	x21, x22, [sp, #32]
   1d0b4:	ldp	x29, x30, [sp], #80
   1d0b8:	ret
   1d0bc:	bl	bea0 <localeconv@plt>
   1d0c0:	mov	x1, x0
   1d0c4:	mov	w0, #0x2e                  	// #46
   1d0c8:	ldr	x1, [x1]
   1d0cc:	ldrb	w1, [x1, #1]
   1d0d0:	cbz	w1, 1d18c <__gmpfr_out_str@@Base+0x17c>
   1d0d4:	mov	x1, x22
   1d0d8:	bl	bda0 <fputc@plt>
   1d0dc:	cmn	w0, #0x1
   1d0e0:	b.eq	1d094 <__gmpfr_out_str@@Base+0x84>  // b.none
   1d0e4:	add	x0, x23, #0x1
   1d0e8:	mov	x1, x22
   1d0ec:	bl	bac0 <fputs@plt>
   1d0f0:	cmn	w0, #0x1
   1d0f4:	b.eq	1d094 <__gmpfr_out_str@@Base+0x84>  // b.none
   1d0f8:	mov	x0, x20
   1d0fc:	mov	x1, x19
   1d100:	bl	cc20 <mpfr_free_func@plt>
   1d104:	ldr	x2, [sp, #72]
   1d108:	sub	x2, x2, #0x1
   1d10c:	str	x2, [sp, #72]
   1d110:	cbz	x2, 1d174 <__gmpfr_out_str@@Base+0x164>
   1d114:	cmp	w21, #0xb
   1d118:	adrp	x3, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1d11c:	add	x3, x3, #0xfd0
   1d120:	adrp	x1, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1d124:	add	x1, x1, #0xfc8
   1d128:	mov	x0, x22
   1d12c:	csel	x1, x1, x3, lt  // lt = tstop
   1d130:	bl	cce0 <fprintf@plt>
   1d134:	cmp	w0, #0x0
   1d138:	add	x19, x19, w0, sxtw
   1d13c:	csel	x19, x19, xzr, ge  // ge = tcont
   1d140:	mov	x0, x19
   1d144:	ldp	x19, x20, [sp, #16]
   1d148:	ldp	x21, x22, [sp, #32]
   1d14c:	ldr	x23, [sp, #48]
   1d150:	ldp	x29, x30, [sp], #80
   1d154:	ret
   1d158:	mov	x1, x22
   1d15c:	bl	bda0 <fputc@plt>
   1d160:	cmn	w0, #0x1
   1d164:	b.eq	1d094 <__gmpfr_out_str@@Base+0x84>  // b.none
   1d168:	ldrb	w0, [x20, #1]
   1d16c:	add	x23, x20, #0x1
   1d170:	b	1d084 <__gmpfr_out_str@@Base+0x74>
   1d174:	mov	x0, x19
   1d178:	ldp	x19, x20, [sp, #16]
   1d17c:	ldp	x21, x22, [sp, #32]
   1d180:	ldr	x23, [sp, #48]
   1d184:	ldp	x29, x30, [sp], #80
   1d188:	ret
   1d18c:	bl	bea0 <localeconv@plt>
   1d190:	ldr	x0, [x0]
   1d194:	ldrb	w0, [x0]
   1d198:	b	1d0d4 <__gmpfr_out_str@@Base+0xc4>
   1d19c:	mov	x3, #0x2                   	// #2
   1d1a0:	movk	x3, #0x8000, lsl #48
   1d1a4:	cmp	x2, x3
   1d1a8:	b.eq	1d1fc <__gmpfr_out_str@@Base+0x1ec>  // b.none
   1d1ac:	ldr	w3, [x1, #8]
   1d1b0:	cmp	x2, x4
   1d1b4:	b.eq	1d1e4 <__gmpfr_out_str@@Base+0x1d4>  // b.none
   1d1b8:	adrp	x1, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1d1bc:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   1d1c0:	add	x1, x1, #0xfc0
   1d1c4:	cmp	w3, #0x0
   1d1c8:	add	x2, x2, #0x328
   1d1cc:	csel	x1, x2, x1, gt
   1d1d0:	bl	cce0 <fprintf@plt>
   1d1d4:	cmp	w0, #0x0
   1d1d8:	csel	w0, w0, wzr, ge  // ge = tcont
   1d1dc:	sxtw	x19, w0
   1d1e0:	b	1d0a8 <__gmpfr_out_str@@Base+0x98>
   1d1e4:	adrp	x1, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1d1e8:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   1d1ec:	add	x1, x1, #0x818
   1d1f0:	cmp	w3, #0x0
   1d1f4:	add	x2, x2, #0xcd8
   1d1f8:	b	1d1cc <__gmpfr_out_str@@Base+0x1bc>
   1d1fc:	adrp	x1, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   1d200:	add	x1, x1, #0xcd0
   1d204:	bl	cce0 <fprintf@plt>
   1d208:	cmp	w0, #0x0
   1d20c:	csel	w0, w0, wzr, ge  // ge = tcont
   1d210:	sxtw	x19, w0
   1d214:	b	1d0a8 <__gmpfr_out_str@@Base+0x98>
   1d218:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1d21c:	adrp	x0, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   1d220:	add	x2, x2, #0xfd8
   1d224:	add	x0, x0, #0xff0
   1d228:	mov	w1, #0x2c                  	// #44
   1d22c:	str	x23, [sp, #48]
   1d230:	bl	cb40 <mpfr_assert_fail@plt>
   1d234:	nop

000000000001d238 <mpfr_snprintf@@Base>:
   1d238:	stp	x29, x30, [sp, #-256]!
   1d23c:	mov	w8, #0xffffffd8            	// #-40
   1d240:	mov	w10, #0xffffff80            	// #-128
   1d244:	mov	x29, sp
   1d248:	add	x9, sp, #0xd0
   1d24c:	add	x11, sp, #0x100
   1d250:	stp	x11, x11, [sp, #48]
   1d254:	str	x9, [sp, #64]
   1d258:	mov	x9, x1
   1d25c:	stp	w8, w10, [sp, #72]
   1d260:	mov	x8, x2
   1d264:	ldp	x12, x13, [sp, #48]
   1d268:	mov	x1, x0
   1d26c:	ldp	x10, x11, [sp, #64]
   1d270:	mov	x2, x9
   1d274:	mov	x0, #0x0                   	// #0
   1d278:	stp	x12, x13, [sp, #16]
   1d27c:	stp	x10, x11, [sp, #32]
   1d280:	str	q0, [sp, #80]
   1d284:	str	q1, [sp, #96]
   1d288:	str	q2, [sp, #112]
   1d28c:	str	q3, [sp, #128]
   1d290:	str	q4, [sp, #144]
   1d294:	str	q5, [sp, #160]
   1d298:	str	q6, [sp, #176]
   1d29c:	str	q7, [sp, #192]
   1d2a0:	stp	x3, x4, [sp, #216]
   1d2a4:	add	x4, sp, #0x10
   1d2a8:	mov	x3, x8
   1d2ac:	stp	x5, x6, [sp, #232]
   1d2b0:	str	x7, [sp, #248]
   1d2b4:	bl	bc20 <mpfr_vasnprintf_aux@plt>
   1d2b8:	ldp	x29, x30, [sp], #256
   1d2bc:	ret

000000000001d2c0 <__gmpfr_vsnprintf@@Base>:
   1d2c0:	mov	x5, x3
   1d2c4:	stp	x29, x30, [sp, #-48]!
   1d2c8:	mov	x4, x1
   1d2cc:	mov	x29, sp
   1d2d0:	ldp	x8, x9, [x5]
   1d2d4:	mov	x1, x0
   1d2d8:	ldp	x6, x7, [x5, #16]
   1d2dc:	mov	x3, x2
   1d2e0:	mov	x0, #0x0                   	// #0
   1d2e4:	mov	x2, x4
   1d2e8:	add	x4, sp, #0x10
   1d2ec:	stp	x8, x9, [sp, #16]
   1d2f0:	stp	x6, x7, [sp, #32]
   1d2f4:	bl	bc20 <mpfr_vasnprintf_aux@plt>
   1d2f8:	ldp	x29, x30, [sp], #48
   1d2fc:	ret

000000000001d300 <__gmpfr_vasprintf@@Base>:
   1d300:	mov	x5, x2
   1d304:	stp	x29, x30, [sp, #-48]!
   1d308:	mov	x3, x1
   1d30c:	mov	x29, sp
   1d310:	ldp	x6, x7, [x5]
   1d314:	stp	x6, x7, [sp, #16]
   1d318:	add	x4, sp, #0x10
   1d31c:	ldp	x6, x7, [x5, #16]
   1d320:	mov	x2, #0x0                   	// #0
   1d324:	mov	x1, #0x0                   	// #0
   1d328:	stp	x6, x7, [sp, #32]
   1d32c:	bl	bc20 <mpfr_vasnprintf_aux@plt>
   1d330:	ldp	x29, x30, [sp], #48
   1d334:	ret

000000000001d338 <mpfr_printf@@Base>:
   1d338:	stp	x29, x30, [sp, #-304]!
   1d33c:	mov	w10, #0xffffffc8            	// #-56
   1d340:	mov	w9, #0xffffff80            	// #-128
   1d344:	mov	x29, sp
   1d348:	add	x11, sp, #0xf0
   1d34c:	add	x8, sp, #0x130
   1d350:	stp	x8, x8, [sp, #80]
   1d354:	mov	x8, x0
   1d358:	add	x0, sp, #0x48
   1d35c:	str	x11, [sp, #96]
   1d360:	stp	w10, w9, [sp, #104]
   1d364:	ldp	x12, x13, [sp, #80]
   1d368:	str	x19, [sp, #16]
   1d36c:	ldp	x10, x11, [sp, #96]
   1d370:	stp	x12, x13, [sp, #32]
   1d374:	stp	x10, x11, [sp, #48]
   1d378:	str	q0, [sp, #112]
   1d37c:	str	q1, [sp, #128]
   1d380:	str	q2, [sp, #144]
   1d384:	str	q3, [sp, #160]
   1d388:	str	q4, [sp, #176]
   1d38c:	str	q5, [sp, #192]
   1d390:	str	q6, [sp, #208]
   1d394:	str	q7, [sp, #224]
   1d398:	stp	x1, x2, [sp, #248]
   1d39c:	mov	x1, x8
   1d3a0:	add	x2, sp, #0x20
   1d3a4:	stp	x3, x4, [sp, #264]
   1d3a8:	stp	x5, x6, [sp, #280]
   1d3ac:	str	x7, [sp, #296]
   1d3b0:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1d3b4:	tbnz	w0, #31, 1d3e4 <mpfr_printf@@Base+0xac>
   1d3b8:	ldr	x1, [sp, #72]
   1d3bc:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1d3c0:	add	x0, x0, #0x0
   1d3c4:	bl	cbf0 <printf@plt>
   1d3c8:	mov	w19, w0
   1d3cc:	ldr	x0, [sp, #72]
   1d3d0:	bl	c890 <mpfr_free_str@plt>
   1d3d4:	mov	w0, w19
   1d3d8:	ldr	x19, [sp, #16]
   1d3dc:	ldp	x29, x30, [sp], #304
   1d3e0:	ret
   1d3e4:	ldr	x0, [sp, #72]
   1d3e8:	cbz	x0, 1d3f0 <mpfr_printf@@Base+0xb8>
   1d3ec:	bl	c890 <mpfr_free_str@plt>
   1d3f0:	mov	w19, #0xffffffff            	// #-1
   1d3f4:	b	1d3d4 <mpfr_printf@@Base+0x9c>

000000000001d3f8 <__gmpfr_vprintf@@Base>:
   1d3f8:	mov	x3, x1
   1d3fc:	stp	x29, x30, [sp, #-80]!
   1d400:	mov	x1, x0
   1d404:	mov	x29, sp
   1d408:	ldp	x4, x5, [x3]
   1d40c:	stp	x4, x5, [sp, #32]
   1d410:	add	x2, sp, #0x20
   1d414:	ldp	x4, x5, [x3, #16]
   1d418:	add	x0, sp, #0x48
   1d41c:	str	x19, [sp, #16]
   1d420:	stp	x4, x5, [sp, #48]
   1d424:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1d428:	tbnz	w0, #31, 1d458 <__gmpfr_vprintf@@Base+0x60>
   1d42c:	ldr	x1, [sp, #72]
   1d430:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1d434:	add	x0, x0, #0x0
   1d438:	bl	cbf0 <printf@plt>
   1d43c:	mov	w19, w0
   1d440:	ldr	x0, [sp, #72]
   1d444:	bl	c890 <mpfr_free_str@plt>
   1d448:	mov	w0, w19
   1d44c:	ldr	x19, [sp, #16]
   1d450:	ldp	x29, x30, [sp], #80
   1d454:	ret
   1d458:	ldr	x0, [sp, #72]
   1d45c:	mov	w19, #0xffffffff            	// #-1
   1d460:	cbnz	x0, 1d444 <__gmpfr_vprintf@@Base+0x4c>
   1d464:	b	1d448 <__gmpfr_vprintf@@Base+0x50>

000000000001d468 <__gmpfr_fprintf@@Base>:
   1d468:	stp	x29, x30, [sp, #-288]!
   1d46c:	mov	w9, #0xffffffd0            	// #-48
   1d470:	mov	w8, #0xffffff80            	// #-128
   1d474:	mov	x29, sp
   1d478:	add	x10, sp, #0xf0
   1d47c:	add	x11, sp, #0x120
   1d480:	stp	x11, x11, [sp, #80]
   1d484:	str	x10, [sp, #96]
   1d488:	stp	w9, w8, [sp, #104]
   1d48c:	ldp	x10, x11, [sp, #80]
   1d490:	str	x19, [sp, #16]
   1d494:	ldp	x8, x9, [sp, #96]
   1d498:	mov	x19, x0
   1d49c:	add	x0, sp, #0x48
   1d4a0:	stp	x10, x11, [sp, #32]
   1d4a4:	stp	x8, x9, [sp, #48]
   1d4a8:	str	q0, [sp, #112]
   1d4ac:	str	q1, [sp, #128]
   1d4b0:	str	q2, [sp, #144]
   1d4b4:	str	q3, [sp, #160]
   1d4b8:	str	q4, [sp, #176]
   1d4bc:	str	q5, [sp, #192]
   1d4c0:	str	q6, [sp, #208]
   1d4c4:	str	q7, [sp, #224]
   1d4c8:	stp	x2, x3, [sp, #240]
   1d4cc:	add	x2, sp, #0x20
   1d4d0:	stp	x4, x5, [sp, #256]
   1d4d4:	stp	x6, x7, [sp, #272]
   1d4d8:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1d4dc:	tbnz	w0, #31, 1d510 <__gmpfr_fprintf@@Base+0xa8>
   1d4e0:	ldr	x2, [sp, #72]
   1d4e4:	mov	x0, x19
   1d4e8:	adrp	x1, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1d4ec:	add	x1, x1, #0x0
   1d4f0:	bl	cce0 <fprintf@plt>
   1d4f4:	mov	w19, w0
   1d4f8:	ldr	x0, [sp, #72]
   1d4fc:	bl	c890 <mpfr_free_str@plt>
   1d500:	mov	w0, w19
   1d504:	ldr	x19, [sp, #16]
   1d508:	ldp	x29, x30, [sp], #288
   1d50c:	ret
   1d510:	ldr	x0, [sp, #72]
   1d514:	cbz	x0, 1d51c <__gmpfr_fprintf@@Base+0xb4>
   1d518:	bl	c890 <mpfr_free_str@plt>
   1d51c:	mov	w19, #0xffffffff            	// #-1
   1d520:	b	1d500 <__gmpfr_fprintf@@Base+0x98>
   1d524:	nop

000000000001d528 <__gmpfr_vfprintf@@Base>:
   1d528:	mov	x3, x2
   1d52c:	stp	x29, x30, [sp, #-80]!
   1d530:	mov	x29, sp
   1d534:	ldp	x4, x5, [x3]
   1d538:	stp	x4, x5, [sp, #32]
   1d53c:	add	x2, sp, #0x20
   1d540:	ldp	x4, x5, [x3, #16]
   1d544:	str	x19, [sp, #16]
   1d548:	mov	x19, x0
   1d54c:	add	x0, sp, #0x48
   1d550:	stp	x4, x5, [sp, #48]
   1d554:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1d558:	tbnz	w0, #31, 1d58c <__gmpfr_vfprintf@@Base+0x64>
   1d55c:	ldr	x2, [sp, #72]
   1d560:	mov	x0, x19
   1d564:	adrp	x1, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1d568:	add	x1, x1, #0x0
   1d56c:	bl	cce0 <fprintf@plt>
   1d570:	mov	w19, w0
   1d574:	ldr	x0, [sp, #72]
   1d578:	bl	c890 <mpfr_free_str@plt>
   1d57c:	mov	w0, w19
   1d580:	ldr	x19, [sp, #16]
   1d584:	ldp	x29, x30, [sp], #80
   1d588:	ret
   1d58c:	ldr	x0, [sp, #72]
   1d590:	mov	w19, #0xffffffff            	// #-1
   1d594:	cbnz	x0, 1d578 <__gmpfr_vfprintf@@Base+0x50>
   1d598:	b	1d57c <__gmpfr_vfprintf@@Base+0x54>
   1d59c:	nop

000000000001d5a0 <mpfr_sprintf@@Base>:
   1d5a0:	stp	x29, x30, [sp, #-288]!
   1d5a4:	mov	w9, #0xffffffd0            	// #-48
   1d5a8:	mov	w8, #0xffffff80            	// #-128
   1d5ac:	mov	x29, sp
   1d5b0:	add	x10, sp, #0xf0
   1d5b4:	add	x11, sp, #0x120
   1d5b8:	stp	x11, x11, [sp, #80]
   1d5bc:	str	x10, [sp, #96]
   1d5c0:	stp	w9, w8, [sp, #104]
   1d5c4:	ldp	x10, x11, [sp, #80]
   1d5c8:	str	x19, [sp, #16]
   1d5cc:	ldp	x8, x9, [sp, #96]
   1d5d0:	mov	x19, x0
   1d5d4:	add	x0, sp, #0x48
   1d5d8:	stp	x10, x11, [sp, #32]
   1d5dc:	stp	x8, x9, [sp, #48]
   1d5e0:	str	q0, [sp, #112]
   1d5e4:	str	q1, [sp, #128]
   1d5e8:	str	q2, [sp, #144]
   1d5ec:	str	q3, [sp, #160]
   1d5f0:	str	q4, [sp, #176]
   1d5f4:	str	q5, [sp, #192]
   1d5f8:	str	q6, [sp, #208]
   1d5fc:	str	q7, [sp, #224]
   1d600:	stp	x2, x3, [sp, #240]
   1d604:	add	x2, sp, #0x20
   1d608:	stp	x4, x5, [sp, #256]
   1d60c:	stp	x6, x7, [sp, #272]
   1d610:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1d614:	tbnz	w0, #31, 1d648 <mpfr_sprintf@@Base+0xa8>
   1d618:	ldr	x2, [sp, #72]
   1d61c:	mov	x0, x19
   1d620:	adrp	x1, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1d624:	add	x1, x1, #0x0
   1d628:	bl	bd10 <sprintf@plt>
   1d62c:	mov	w19, w0
   1d630:	ldr	x0, [sp, #72]
   1d634:	bl	c890 <mpfr_free_str@plt>
   1d638:	mov	w0, w19
   1d63c:	ldr	x19, [sp, #16]
   1d640:	ldp	x29, x30, [sp], #288
   1d644:	ret
   1d648:	ldr	x0, [sp, #72]
   1d64c:	cbz	x0, 1d654 <mpfr_sprintf@@Base+0xb4>
   1d650:	bl	c890 <mpfr_free_str@plt>
   1d654:	mov	w19, #0xffffffff            	// #-1
   1d658:	b	1d638 <mpfr_sprintf@@Base+0x98>
   1d65c:	nop

000000000001d660 <__gmpfr_vsprintf@@Base>:
   1d660:	mov	x3, x2
   1d664:	stp	x29, x30, [sp, #-80]!
   1d668:	mov	x29, sp
   1d66c:	ldp	x4, x5, [x3]
   1d670:	stp	x4, x5, [sp, #32]
   1d674:	add	x2, sp, #0x20
   1d678:	ldp	x4, x5, [x3, #16]
   1d67c:	str	x19, [sp, #16]
   1d680:	mov	x19, x0
   1d684:	add	x0, sp, #0x48
   1d688:	stp	x4, x5, [sp, #48]
   1d68c:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1d690:	tbnz	w0, #31, 1d6c4 <__gmpfr_vsprintf@@Base+0x64>
   1d694:	ldr	x2, [sp, #72]
   1d698:	mov	x0, x19
   1d69c:	adrp	x1, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1d6a0:	add	x1, x1, #0x0
   1d6a4:	bl	bd10 <sprintf@plt>
   1d6a8:	mov	w19, w0
   1d6ac:	ldr	x0, [sp, #72]
   1d6b0:	bl	c890 <mpfr_free_str@plt>
   1d6b4:	mov	w0, w19
   1d6b8:	ldr	x19, [sp, #16]
   1d6bc:	ldp	x29, x30, [sp], #80
   1d6c0:	ret
   1d6c4:	ldr	x0, [sp, #72]
   1d6c8:	mov	w19, #0xffffffff            	// #-1
   1d6cc:	cbnz	x0, 1d6b0 <__gmpfr_vsprintf@@Base+0x50>
   1d6d0:	b	1d6b4 <__gmpfr_vsprintf@@Base+0x54>
   1d6d4:	nop

000000000001d6d8 <mpfr_asprintf@@Base>:
   1d6d8:	stp	x29, x30, [sp, #-272]!
   1d6dc:	mov	w9, #0xffffffd0            	// #-48
   1d6e0:	mov	w8, #0xffffff80            	// #-128
   1d6e4:	mov	x29, sp
   1d6e8:	add	x10, sp, #0xe0
   1d6ec:	add	x11, sp, #0x110
   1d6f0:	stp	x11, x11, [sp, #64]
   1d6f4:	str	x10, [sp, #80]
   1d6f8:	stp	w9, w8, [sp, #88]
   1d6fc:	ldp	x10, x11, [sp, #64]
   1d700:	str	x19, [sp, #16]
   1d704:	ldp	x8, x9, [sp, #80]
   1d708:	mov	x19, x0
   1d70c:	stp	x10, x11, [sp, #32]
   1d710:	stp	x8, x9, [sp, #48]
   1d714:	str	q0, [sp, #96]
   1d718:	str	q1, [sp, #112]
   1d71c:	str	q2, [sp, #128]
   1d720:	str	q3, [sp, #144]
   1d724:	str	q4, [sp, #160]
   1d728:	str	q5, [sp, #176]
   1d72c:	str	q6, [sp, #192]
   1d730:	str	q7, [sp, #208]
   1d734:	stp	x2, x3, [sp, #224]
   1d738:	add	x2, sp, #0x20
   1d73c:	stp	x4, x5, [sp, #240]
   1d740:	stp	x6, x7, [sp, #256]
   1d744:	bl	bfd0 <__gmpfr_vasprintf@plt>
   1d748:	tbnz	w0, #31, 1d758 <mpfr_asprintf@@Base+0x80>
   1d74c:	ldr	x19, [sp, #16]
   1d750:	ldp	x29, x30, [sp], #272
   1d754:	ret
   1d758:	ldr	x0, [x19]
   1d75c:	cbz	x0, 1d764 <mpfr_asprintf@@Base+0x8c>
   1d760:	bl	c890 <mpfr_free_str@plt>
   1d764:	mov	w0, #0xffffffff            	// #-1
   1d768:	b	1d74c <mpfr_asprintf@@Base+0x74>
   1d76c:	nop
   1d770:	stp	x29, x30, [sp, #-48]!
   1d774:	mov	x29, sp
   1d778:	stp	x19, x20, [sp, #16]
   1d77c:	mov	x19, x0
   1d780:	and	x20, x1, #0xfffffffffffff000
   1d784:	ldr	x0, [x0]
   1d788:	str	x21, [sp, #32]
   1d78c:	ldr	x21, [x19, #8]
   1d790:	adds	x20, x20, #0x1, lsl #12
   1d794:	ccmp	x1, x20, #0x2, cc  // cc = lo, ul, last
   1d798:	sub	x21, x21, x0
   1d79c:	b.hi	1d7e0 <mpfr_asprintf@@Base+0x108>  // b.pmore
   1d7a0:	ldr	x1, [x19, #16]
   1d7a4:	mvn	x0, x20
   1d7a8:	cmp	x1, x0
   1d7ac:	b.cs	1d808 <mpfr_asprintf@@Base+0x130>  // b.hs, b.nlast
   1d7b0:	ldr	x0, [x19]
   1d7b4:	add	x2, x20, x1
   1d7b8:	bl	c1c0 <mpfr_reallocate_func@plt>
   1d7bc:	add	x21, x0, x21
   1d7c0:	ldr	x1, [x19, #16]
   1d7c4:	stp	x0, x21, [x19]
   1d7c8:	add	x20, x1, x20
   1d7cc:	str	x20, [x19, #16]
   1d7d0:	ldp	x19, x20, [sp, #16]
   1d7d4:	ldr	x21, [sp, #32]
   1d7d8:	ldp	x29, x30, [sp], #48
   1d7dc:	ret
   1d7e0:	mov	w1, #0x260                 	// #608
   1d7e4:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1d7e8:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1d7ec:	add	x2, x2, #0x8
   1d7f0:	add	x0, x0, #0x20
   1d7f4:	bl	cb40 <mpfr_assert_fail@plt>
   1d7f8:	ldr	x1, [x19, #16]
   1d7fc:	mvn	x0, x20
   1d800:	cmp	x1, x0
   1d804:	b.cc	1d7b0 <mpfr_asprintf@@Base+0xd8>  // b.lo, b.ul, b.last
   1d808:	mov	w1, #0x265                 	// #613
   1d80c:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1d810:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1d814:	add	x2, x2, #0x30
   1d818:	add	x0, x0, #0x20
   1d81c:	bl	cb40 <mpfr_assert_fail@plt>
   1d820:	ldr	x1, [x19, #16]
   1d824:	b	1d7b0 <mpfr_asprintf@@Base+0xd8>
   1d828:	cbz	x0, 1d870 <mpfr_asprintf@@Base+0x198>
   1d82c:	stp	x29, x30, [sp, #-32]!
   1d830:	mov	x29, sp
   1d834:	stp	x19, x20, [sp, #16]
   1d838:	mov	x19, x0
   1d83c:	nop
   1d840:	ldr	x0, [x19]
   1d844:	cbz	x0, 1d84c <mpfr_asprintf@@Base+0x174>
   1d848:	bl	c890 <mpfr_free_str@plt>
   1d84c:	ldr	x20, [x19, #8]
   1d850:	mov	x0, x19
   1d854:	mov	x1, #0x10                  	// #16
   1d858:	bl	cc20 <mpfr_free_func@plt>
   1d85c:	mov	x19, x20
   1d860:	cbnz	x20, 1d840 <mpfr_asprintf@@Base+0x168>
   1d864:	ldp	x19, x20, [sp, #16]
   1d868:	ldp	x29, x30, [sp], #32
   1d86c:	ret
   1d870:	ret
   1d874:	nop
   1d878:	stp	x29, x30, [sp, #-80]!
   1d87c:	mov	x2, #0x40                  	// #64
   1d880:	mov	x29, sp
   1d884:	stp	x19, x20, [sp, #16]
   1d888:	mov	x19, x0
   1d88c:	add	x20, sp, #0x30
   1d890:	mov	x0, x20
   1d894:	ldr	x1, [x19]
   1d898:	str	x21, [sp, #32]
   1d89c:	cmp	x1, x2
   1d8a0:	csel	x1, x1, x2, ge  // ge = tcont
   1d8a4:	bl	ca80 <mpfr_init2@plt>
   1d8a8:	ldr	x0, [x19, #16]
   1d8ac:	mov	w2, #0x1                   	// #1
   1d8b0:	mov	w1, #0xa                   	// #10
   1d8b4:	bl	cb80 <mpfr_ceil_mul@plt>
   1d8b8:	mov	x21, x0
   1d8bc:	sub	x1, x21, #0x1
   1d8c0:	mov	x0, x20
   1d8c4:	mov	w3, #0x2                   	// #2
   1d8c8:	mov	x2, #0x0                   	// #0
   1d8cc:	bl	ba80 <mpfr_set_si_2exp@plt>
   1d8d0:	mov	x2, x20
   1d8d4:	mov	w3, #0x2                   	// #2
   1d8d8:	mov	x0, x20
   1d8dc:	mov	x1, #0xa                   	// #10
   1d8e0:	bl	ca10 <mpfr_ui_pow@plt>
   1d8e4:	mov	x1, x20
   1d8e8:	mov	x0, x19
   1d8ec:	bl	c9b0 <mpfr_cmpabs@plt>
   1d8f0:	mov	w19, w0
   1d8f4:	eor	x19, x19, #0x80000000
   1d8f8:	mov	x0, x20
   1d8fc:	bl	c070 <mpfr_clear@plt>
   1d900:	lsr	w19, w19, #31
   1d904:	add	x19, x19, x21
   1d908:	sub	x19, x19, #0x2
   1d90c:	mov	x0, x19
   1d910:	ldp	x19, x20, [sp, #16]
   1d914:	ldr	x21, [sp, #32]
   1d918:	ldp	x29, x30, [sp], #80
   1d91c:	ret
   1d920:	stp	x29, x30, [sp, #-48]!
   1d924:	mov	x29, sp
   1d928:	stp	x19, x20, [sp, #16]
   1d92c:	mov	x19, x0
   1d930:	ldr	x0, [x0, #24]
   1d934:	cmn	x0, #0x1
   1d938:	b.eq	1d9ac <mpfr_asprintf@@Base+0x2d4>  // b.none
   1d93c:	adds	x0, x2, x0
   1d940:	mov	x20, x2
   1d944:	ccmp	x0, #0x0, #0x1, cc  // cc = lo, ul, last
   1d948:	b.lt	1d9bc <mpfr_asprintf@@Base+0x2e4>  // b.tstop
   1d94c:	str	x21, [sp, #32]
   1d950:	mov	x21, x1
   1d954:	ldr	x1, [x19, #16]
   1d958:	str	x0, [x19, #24]
   1d95c:	cbz	x1, 1d998 <mpfr_asprintf@@Base+0x2c0>
   1d960:	mvn	x0, x2
   1d964:	cmp	x1, x0
   1d968:	b.cs	1d9e0 <mpfr_asprintf@@Base+0x308>  // b.hs, b.nlast
   1d96c:	ldp	x2, x0, [x19]
   1d970:	add	x1, x2, x1
   1d974:	add	x2, x0, x20
   1d978:	cmp	x2, x1
   1d97c:	b.cs	1d9cc <mpfr_asprintf@@Base+0x2f4>  // b.hs, b.nlast
   1d980:	mov	x2, x20
   1d984:	mov	x1, x21
   1d988:	bl	c940 <strncat@plt>
   1d98c:	ldr	x2, [x19, #8]
   1d990:	add	x20, x2, x20
   1d994:	str	x20, [x19, #8]
   1d998:	ldr	x21, [sp, #32]
   1d99c:	mov	w0, #0x0                   	// #0
   1d9a0:	ldp	x19, x20, [sp, #16]
   1d9a4:	ldp	x29, x30, [sp], #48
   1d9a8:	ret
   1d9ac:	mov	w0, #0x1                   	// #1
   1d9b0:	ldp	x19, x20, [sp, #16]
   1d9b4:	ldp	x29, x30, [sp], #48
   1d9b8:	ret
   1d9bc:	mov	x1, #0xffffffffffffffff    	// #-1
   1d9c0:	mov	w0, #0x1                   	// #1
   1d9c4:	str	x1, [x19, #24]
   1d9c8:	b	1d9a0 <mpfr_asprintf@@Base+0x2c8>
   1d9cc:	mov	x0, x19
   1d9d0:	mov	x1, x20
   1d9d4:	bl	1d770 <mpfr_asprintf@@Base+0x98>
   1d9d8:	ldr	x0, [x19, #8]
   1d9dc:	b	1d980 <mpfr_asprintf@@Base+0x2a8>
   1d9e0:	mov	w1, #0x27e                 	// #638
   1d9e4:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1d9e8:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1d9ec:	add	x2, x2, #0x50
   1d9f0:	add	x0, x0, #0x20
   1d9f4:	bl	cb40 <mpfr_assert_fail@plt>
   1d9f8:	ldr	x1, [x19, #16]
   1d9fc:	b	1d96c <mpfr_asprintf@@Base+0x294>
   1da00:	stp	x29, x30, [sp, #-80]!
   1da04:	mov	x29, sp
   1da08:	stp	x19, x20, [sp, #16]
   1da0c:	mov	w20, w1
   1da10:	stp	x21, x22, [sp, #32]
   1da14:	mov	x22, x0
   1da18:	mov	x21, x2
   1da1c:	stp	x23, x24, [sp, #48]
   1da20:	mov	x23, x3
   1da24:	cbnz	x4, 1dadc <mpfr_asprintf@@Base+0x404>
   1da28:	and	w4, w1, #0xff
   1da2c:	cmp	w1, #0xa
   1da30:	add	w0, w4, #0x2f
   1da34:	add	w19, w4, #0x56
   1da38:	and	w0, w0, #0xff
   1da3c:	and	w19, w19, #0xff
   1da40:	csel	w19, w19, w0, gt
   1da44:	mov	w24, w5
   1da48:	cmp	x2, #0x8
   1da4c:	b.ls	1dad8 <mpfr_asprintf@@Base+0x400>  // b.plast
   1da50:	stp	x25, x26, [sp, #64]
   1da54:	mov	w25, #0x3d                  	// #61
   1da58:	mov	x26, #0x8                   	// #8
   1da5c:	nop
   1da60:	mov	x1, x22
   1da64:	mov	x4, x23
   1da68:	mov	w2, w20
   1da6c:	mov	x3, x26
   1da70:	mov	w5, #0x1                   	// #1
   1da74:	mov	x0, #0x0                   	// #0
   1da78:	bl	c500 <mpfr_get_str@plt>
   1da7c:	ldrb	w1, [x0]
   1da80:	cmp	w1, #0x2d
   1da84:	cset	w2, eq  // eq = none
   1da88:	cset	x1, eq  // eq = none
   1da8c:	cinc	x4, x0, eq  // eq = none
   1da90:	ldrb	w2, [x0, w2, uxtw]
   1da94:	cmp	w2, w19
   1da98:	b.ne	1daac <mpfr_asprintf@@Base+0x3d4>  // b.any
   1da9c:	nop
   1daa0:	ldrb	w6, [x4, #1]!
   1daa4:	cmp	w6, w19
   1daa8:	b.eq	1daa0 <mpfr_asprintf@@Base+0x3c8>  // b.none
   1daac:	add	x1, x1, x26
   1dab0:	add	x1, x0, x1
   1dab4:	cmp	x4, x1
   1dab8:	b.cc	1db1c <mpfr_asprintf@@Base+0x444>  // b.lo, b.ul, b.last
   1dabc:	bl	c890 <mpfr_free_str@plt>
   1dac0:	subs	w25, w25, #0x1
   1dac4:	b.eq	1db04 <mpfr_asprintf@@Base+0x42c>  // b.none
   1dac8:	lsl	x26, x26, #1
   1dacc:	cmp	x21, x26
   1dad0:	b.hi	1da60 <mpfr_asprintf@@Base+0x388>  // b.pmore
   1dad4:	ldp	x25, x26, [sp, #64]
   1dad8:	mov	w5, w24
   1dadc:	mov	x4, x23
   1dae0:	mov	x3, x21
   1dae4:	mov	w2, w20
   1dae8:	mov	x1, x22
   1daec:	ldp	x19, x20, [sp, #16]
   1daf0:	mov	x0, #0x0                   	// #0
   1daf4:	ldp	x21, x22, [sp, #32]
   1daf8:	ldp	x23, x24, [sp, #48]
   1dafc:	ldp	x29, x30, [sp], #80
   1db00:	b	c500 <mpfr_get_str@plt>
   1db04:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1db08:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1db0c:	add	x2, x2, #0x70
   1db10:	add	x0, x0, #0x20
   1db14:	mov	w1, #0x3df                 	// #991
   1db18:	bl	cb40 <mpfr_assert_fail@plt>
   1db1c:	ldp	x19, x20, [sp, #16]
   1db20:	ldp	x21, x22, [sp, #32]
   1db24:	ldp	x23, x24, [sp, #48]
   1db28:	ldp	x25, x26, [sp, #64]
   1db2c:	ldp	x29, x30, [sp], #80
   1db30:	ret
   1db34:	nop
   1db38:	stp	x29, x30, [sp, #-112]!
   1db3c:	mov	x29, sp
   1db40:	stp	x19, x20, [sp, #16]
   1db44:	mov	x20, x0
   1db48:	ldrb	w0, [x2, #32]
   1db4c:	stp	x21, x22, [sp, #32]
   1db50:	mov	x22, x2
   1db54:	and	w19, w0, #0xfffffffd
   1db58:	stp	x23, x24, [sp, #48]
   1db5c:	and	w0, w0, #0xffffffdf
   1db60:	and	w19, w19, #0xff
   1db64:	stp	x25, x26, [sp, #64]
   1db68:	cmp	w0, #0x47
   1db6c:	mov	x25, x1
   1db70:	str	x27, [sp, #80]
   1db74:	and	w23, w0, #0xff
   1db78:	ldr	w27, [x2, #8]
   1db7c:	b.eq	1dd2c <mpfr_asprintf@@Base+0x654>  // b.none
   1db80:	ldr	w2, [x25, #8]
   1db84:	cmp	w27, #0x0
   1db88:	cset	w24, gt
   1db8c:	tbnz	w2, #31, 1dd3c <mpfr_asprintf@@Base+0x664>
   1db90:	ldrb	w0, [x22]
   1db94:	mov	w1, #0xa                   	// #10
   1db98:	tst	w0, w1
   1db9c:	b.ne	1ddb4 <mpfr_asprintf@@Base+0x6dc>  // b.any
   1dba0:	mov	x0, #0x1                   	// #1
   1dba4:	str	x0, [x20, #56]
   1dba8:	cbz	x3, 1dd50 <mpfr_asprintf@@Base+0x678>
   1dbac:	ldp	x0, x21, [x3]
   1dbb0:	str	x0, [sp, #96]
   1dbb4:	lsr	w2, w2, #31
   1dbb8:	add	x21, x21, x2
   1dbbc:	str	x21, [x20, #48]
   1dbc0:	cbz	w27, 1dd08 <mpfr_asprintf@@Base+0x630>
   1dbc4:	add	x25, x21, #0x1
   1dbc8:	mov	x0, x25
   1dbcc:	bl	bab0 <strlen@plt>
   1dbd0:	mov	x1, x0
   1dbd4:	cbz	w24, 1ddcc <mpfr_asprintf@@Base+0x6f4>
   1dbd8:	mov	x0, #0x7fffffff            	// #2147483647
   1dbdc:	cmp	x1, x0
   1dbe0:	b.hi	1de10 <mpfr_asprintf@@Base+0x738>  // b.pmore
   1dbe4:	cbz	x1, 1dd08 <mpfr_asprintf@@Base+0x630>
   1dbe8:	stp	x25, x1, [x20, #80]
   1dbec:	cmp	w23, #0x47
   1dbf0:	b.eq	1de04 <mpfr_asprintf@@Base+0x72c>  // b.none
   1dbf4:	cmp	w27, #0x0
   1dbf8:	b.le	1dc10 <mpfr_asprintf@@Base+0x538>
   1dbfc:	cmp	w27, w1
   1dc00:	b.le	1dc10 <mpfr_asprintf@@Base+0x538>
   1dc04:	sub	w1, w27, w1
   1dc08:	str	w1, [x20, #96]
   1dc0c:	nop
   1dc10:	bl	bea0 <localeconv@plt>
   1dc14:	ldr	x0, [x0]
   1dc18:	ldrb	w0, [x0, #1]
   1dc1c:	cbz	w0, 1ddf0 <mpfr_asprintf@@Base+0x718>
   1dc20:	mov	w0, #0x2e                  	// #46
   1dc24:	strb	w0, [x20, #68]
   1dc28:	ldr	x1, [sp, #96]
   1dc2c:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
   1dc30:	mov	x2, #0x3                   	// #3
   1dc34:	movk	x4, #0xcccd
   1dc38:	subs	x1, x1, #0x1
   1dc3c:	str	x1, [sp, #96]
   1dc40:	cneg	x1, x1, mi  // mi = first
   1dc44:	cmp	x1, #0x9
   1dc48:	b.ls	1dda4 <mpfr_asprintf@@Base+0x6cc>  // b.plast
   1dc4c:	nop
   1dc50:	umulh	x3, x1, x4
   1dc54:	cmp	x1, #0x63
   1dc58:	mov	x0, x2
   1dc5c:	add	x2, x2, #0x1
   1dc60:	lsr	x1, x3, #3
   1dc64:	b.hi	1dc50 <mpfr_asprintf@@Base+0x578>  // b.pmore
   1dc68:	str	x2, [x20, #112]
   1dc6c:	add	x0, x0, #0x2
   1dc70:	cmp	x2, #0x3
   1dc74:	b.ls	1dda4 <mpfr_asprintf@@Base+0x6cc>  // b.plast
   1dc78:	bl	ccf0 <mpfr_allocate_func@plt>
   1dc7c:	mov	x22, x0
   1dc80:	ldr	x1, [x20, #120]
   1dc84:	nop
   1dc88:	mov	x21, x1
   1dc8c:	ldr	x1, [x1, #8]
   1dc90:	cbnz	x1, 1dc88 <mpfr_asprintf@@Base+0x5b0>
   1dc94:	mov	x0, #0x10                  	// #16
   1dc98:	bl	ccf0 <mpfr_allocate_func@plt>
   1dc9c:	mov	x3, x0
   1dca0:	adrp	x4, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1dca4:	add	x4, x4, #0x90
   1dca8:	str	x3, [x21, #8]
   1dcac:	cmp	w19, #0x45
   1dcb0:	add	x1, sp, #0x68
   1dcb4:	ldr	x2, [sp, #96]
   1dcb8:	stp	x22, xzr, [x3]
   1dcbc:	mov	w3, #0x65                  	// #101
   1dcc0:	csel	w19, w19, w3, eq  // eq = none
   1dcc4:	ldr	w3, [x4]
   1dcc8:	stur	w3, [sp, #105]
   1dccc:	mov	x0, x22
   1dcd0:	ldur	w3, [x4, #3]
   1dcd4:	strb	w19, [sp, #104]
   1dcd8:	str	w3, [x1, #4]
   1dcdc:	str	x22, [x20, #104]
   1dce0:	bl	bd10 <sprintf@plt>
   1dce4:	cmp	w0, #0x0
   1dce8:	csetm	w0, lt  // lt = tstop
   1dcec:	ldp	x19, x20, [sp, #16]
   1dcf0:	ldp	x21, x22, [sp, #32]
   1dcf4:	ldp	x23, x24, [sp, #48]
   1dcf8:	ldp	x25, x26, [sp, #64]
   1dcfc:	ldr	x27, [sp, #80]
   1dd00:	ldp	x29, x30, [sp], #112
   1dd04:	ret
   1dd08:	ldr	x0, [x20, #88]
   1dd0c:	cbnz	x0, 1dc10 <mpfr_asprintf@@Base+0x538>
   1dd10:	ldrb	w0, [x22]
   1dd14:	tbz	w0, #0, 1dc28 <mpfr_asprintf@@Base+0x550>
   1dd18:	bl	bea0 <localeconv@plt>
   1dd1c:	ldr	x0, [x0]
   1dd20:	ldrb	w0, [x0, #1]
   1dd24:	cbnz	w0, 1dc20 <mpfr_asprintf@@Base+0x548>
   1dd28:	b	1ddf0 <mpfr_asprintf@@Base+0x718>
   1dd2c:	ldrb	w24, [x2]
   1dd30:	ldr	w2, [x25, #8]
   1dd34:	and	w24, w24, #0x1
   1dd38:	tbz	w2, #31, 1db90 <mpfr_asprintf@@Base+0x4b8>
   1dd3c:	mov	w0, #0x2d                  	// #45
   1dd40:	strb	w0, [x20, #16]
   1dd44:	mov	x0, #0x1                   	// #1
   1dd48:	str	x0, [x20, #56]
   1dd4c:	cbnz	x3, 1dbac <mpfr_asprintf@@Base+0x4d4>
   1dd50:	ldr	w5, [x22, #28]
   1dd54:	cmp	w27, #0x0
   1dd58:	ldr	x4, [x22, #16]
   1dd5c:	sxtw	x2, w27
   1dd60:	csinc	x2, xzr, x2, lt  // lt = tstop
   1dd64:	mov	x3, x25
   1dd68:	add	x0, sp, #0x60
   1dd6c:	mov	w1, #0xa                   	// #10
   1dd70:	bl	1da00 <mpfr_asprintf@@Base+0x328>
   1dd74:	mov	x21, x0
   1dd78:	ldr	x4, [x20, #120]
   1dd7c:	nop
   1dd80:	mov	x26, x4
   1dd84:	ldr	x4, [x4, #8]
   1dd88:	cbnz	x4, 1dd80 <mpfr_asprintf@@Base+0x6a8>
   1dd8c:	mov	x0, #0x10                  	// #16
   1dd90:	bl	ccf0 <mpfr_allocate_func@plt>
   1dd94:	ldr	w2, [x25, #8]
   1dd98:	str	x0, [x26, #8]
   1dd9c:	stp	x21, xzr, [x0]
   1dda0:	b	1dbb4 <mpfr_asprintf@@Base+0x4dc>
   1dda4:	mov	x1, #0x4                   	// #4
   1dda8:	mov	x0, #0x5                   	// #5
   1ddac:	str	x1, [x20, #112]
   1ddb0:	b	1dc78 <mpfr_asprintf@@Base+0x5a0>
   1ddb4:	tst	x0, #0x8
   1ddb8:	mov	w1, #0x20                  	// #32
   1ddbc:	mov	w0, #0x2b                  	// #43
   1ddc0:	csel	w0, w0, w1, ne  // ne = any
   1ddc4:	strb	w0, [x20, #16]
   1ddc8:	b	1dba0 <mpfr_asprintf@@Base+0x4c8>
   1ddcc:	ldrb	w0, [x21, x0]
   1ddd0:	cmp	w0, #0x30
   1ddd4:	b.ne	1dbd8 <mpfr_asprintf@@Base+0x500>  // b.any
   1ddd8:	cbz	x1, 1dd08 <mpfr_asprintf@@Base+0x630>
   1dddc:	sub	x1, x1, #0x1
   1dde0:	ldrb	w0, [x21, x1]
   1dde4:	cmp	w0, #0x30
   1dde8:	b.eq	1ddd8 <mpfr_asprintf@@Base+0x700>  // b.none
   1ddec:	b	1dbd8 <mpfr_asprintf@@Base+0x500>
   1ddf0:	bl	bea0 <localeconv@plt>
   1ddf4:	ldr	x0, [x0]
   1ddf8:	ldrb	w0, [x0]
   1ddfc:	strb	w0, [x20, #68]
   1de00:	b	1dc28 <mpfr_asprintf@@Base+0x550>
   1de04:	ldrb	w0, [x22]
   1de08:	tbz	w0, #0, 1dc10 <mpfr_asprintf@@Base+0x538>
   1de0c:	b	1dbf4 <mpfr_asprintf@@Base+0x51c>
   1de10:	mov	w0, #0xffffffff            	// #-1
   1de14:	b	1dcec <mpfr_asprintf@@Base+0x614>
   1de18:	stp	x29, x30, [sp, #-160]!
   1de1c:	mov	x29, sp
   1de20:	stp	x21, x22, [sp, #32]
   1de24:	mov	x21, x1
   1de28:	ldrb	w22, [x2, #32]
   1de2c:	stp	x19, x20, [sp, #16]
   1de30:	mov	x20, x2
   1de34:	and	w22, w22, #0xffffffdf
   1de38:	stp	x23, x24, [sp, #48]
   1de3c:	and	w22, w22, #0xff
   1de40:	ldr	w24, [x2, #8]
   1de44:	stp	x25, x26, [sp, #64]
   1de48:	mov	x19, x0
   1de4c:	ldr	w26, [x2, #28]
   1de50:	stp	x27, x28, [sp, #80]
   1de54:	mov	x25, x3
   1de58:	cmp	w22, #0x47
   1de5c:	mov	w23, #0x1                   	// #1
   1de60:	ldr	x27, [x2, #16]
   1de64:	b.ne	1de70 <mpfr_asprintf@@Base+0x798>  // b.any
   1de68:	ldrb	w23, [x2]
   1de6c:	and	w23, w23, #0x1
   1de70:	ldr	w0, [x21, #8]
   1de74:	tbnz	w0, #31, 1e0ac <mpfr_asprintf@@Base+0x9d4>
   1de78:	ldrb	w0, [x20]
   1de7c:	mov	w1, #0xa                   	// #10
   1de80:	tst	w0, w1
   1de84:	b.ne	1df98 <mpfr_asprintf@@Base+0x8c0>  // b.any
   1de88:	ldr	x0, [x21, #16]
   1de8c:	cmp	x0, #0x0
   1de90:	b.le	1dfb8 <mpfr_asprintf@@Base+0x8e0>
   1de94:	mov	x0, x21
   1de98:	bl	1d878 <mpfr_asprintf@@Base+0x1a0>
   1de9c:	str	x0, [sp, #120]
   1dea0:	mov	x1, #0x7fffffff            	// #2147483647
   1dea4:	cmp	x0, x1
   1dea8:	b.gt	1e3f8 <mpfr_asprintf@@Base+0xd20>
   1deac:	cbz	x25, 1e120 <mpfr_asprintf@@Base+0xa48>
   1deb0:	ldr	x22, [x25, #8]
   1deb4:	ldr	x25, [x25]
   1deb8:	str	x25, [sp, #120]
   1debc:	ldrsw	x0, [x21, #8]
   1dec0:	add	x22, x22, x0, lsr #63
   1dec4:	str	x22, [x19, #48]
   1dec8:	mov	x0, x22
   1decc:	bl	bab0 <strlen@plt>
   1ded0:	mov	x21, x0
   1ded4:	cmp	x25, x0
   1ded8:	b.ls	1e0c0 <mpfr_asprintf@@Base+0x9e8>  // b.plast
   1dedc:	sub	w25, w25, w0
   1dee0:	str	w25, [x19, #64]
   1dee4:	ldrb	w25, [x20]
   1dee8:	str	x0, [x19, #56]
   1deec:	tbnz	w25, #4, 1e0cc <mpfr_asprintf@@Base+0x9f4>
   1def0:	ldr	x2, [x19, #56]
   1def4:	add	x22, x22, x2
   1def8:	sub	x20, x21, x2
   1defc:	cbnz	w23, 1e0b8 <mpfr_asprintf@@Base+0x9e0>
   1df00:	sub	x1, x20, #0x1
   1df04:	add	x0, x22, x1
   1df08:	ldrb	w3, [x22, x1]
   1df0c:	cmp	w3, #0x30
   1df10:	b.ne	1df3c <mpfr_asprintf@@Base+0x864>  // b.any
   1df14:	sub	x21, x2, x21
   1df18:	add	x21, x0, x21
   1df1c:	cbnz	x20, 1df2c <mpfr_asprintf@@Base+0x854>
   1df20:	b	1df74 <mpfr_asprintf@@Base+0x89c>
   1df24:	cbz	x1, 1df74 <mpfr_asprintf@@Base+0x89c>
   1df28:	sub	x1, x1, #0x1
   1df2c:	ldrb	w0, [x21, x1]
   1df30:	mov	x20, x1
   1df34:	cmp	w0, #0x30
   1df38:	b.eq	1df24 <mpfr_asprintf@@Base+0x84c>  // b.none
   1df3c:	cbz	x20, 1df74 <mpfr_asprintf@@Base+0x89c>
   1df40:	mov	x0, #0x7fffffff            	// #2147483647
   1df44:	cmp	x20, x0
   1df48:	b.hi	1e3f8 <mpfr_asprintf@@Base+0xd20>  // b.pmore
   1df4c:	bl	bea0 <localeconv@plt>
   1df50:	ldr	x0, [x0]
   1df54:	mov	w1, #0x2e                  	// #46
   1df58:	ldrb	w0, [x0, #1]
   1df5c:	cbz	w0, 1e198 <mpfr_asprintf@@Base+0xac0>
   1df60:	strb	w1, [x19, #68]
   1df64:	stp	x22, x20, [x19, #80]
   1df68:	cbz	w23, 1df74 <mpfr_asprintf@@Base+0x89c>
   1df6c:	cmp	x20, w24, sxtw
   1df70:	b.cc	1e16c <mpfr_asprintf@@Base+0xa94>  // b.lo, b.ul, b.last
   1df74:	tbnz	w25, #0, 1e0e8 <mpfr_asprintf@@Base+0xa10>
   1df78:	mov	w0, #0x0                   	// #0
   1df7c:	ldp	x19, x20, [sp, #16]
   1df80:	ldp	x21, x22, [sp, #32]
   1df84:	ldp	x23, x24, [sp, #48]
   1df88:	ldp	x25, x26, [sp, #64]
   1df8c:	ldp	x27, x28, [sp, #80]
   1df90:	ldp	x29, x30, [sp], #160
   1df94:	ret
   1df98:	tst	x0, #0x8
   1df9c:	mov	w1, #0x20                  	// #32
   1dfa0:	mov	w0, #0x2b                  	// #43
   1dfa4:	csel	w0, w0, w1, ne  // ne = any
   1dfa8:	strb	w0, [x19, #16]
   1dfac:	ldr	x0, [x21, #16]
   1dfb0:	cmp	x0, #0x0
   1dfb4:	b.gt	1de94 <mpfr_asprintf@@Base+0x7bc>
   1dfb8:	mov	x0, #0x1                   	// #1
   1dfbc:	str	x0, [x19, #56]
   1dfc0:	mov	x0, #0x2                   	// #2
   1dfc4:	bl	ccf0 <mpfr_allocate_func@plt>
   1dfc8:	mov	x1, x0
   1dfcc:	mov	w0, #0x30                  	// #48
   1dfd0:	strh	w0, [x1]
   1dfd4:	ldr	x4, [x19, #120]
   1dfd8:	mov	x28, x4
   1dfdc:	ldr	x4, [x4, #8]
   1dfe0:	cbnz	x4, 1dfd8 <mpfr_asprintf@@Base+0x900>
   1dfe4:	mov	x0, #0x10                  	// #16
   1dfe8:	str	x1, [sp, #104]
   1dfec:	bl	ccf0 <mpfr_allocate_func@plt>
   1dff0:	str	x0, [x28, #8]
   1dff4:	ldr	x1, [sp, #104]
   1dff8:	stp	x1, xzr, [x0]
   1dffc:	str	x1, [x19, #48]
   1e000:	cbnz	w24, 1e1cc <mpfr_asprintf@@Base+0xaf4>
   1e004:	ldr	x0, [x21]
   1e008:	str	x0, [sp, #128]
   1e00c:	ldr	x2, [x21, #16]
   1e010:	mov	w3, #0x1                   	// #1
   1e014:	ldr	x0, [x21, #24]
   1e018:	str	w3, [sp, #136]
   1e01c:	str	x2, [sp, #144]
   1e020:	cmp	w26, #0x4
   1e024:	str	x0, [sp, #152]
   1e028:	b.eq	1e058 <mpfr_asprintf@@Base+0x980>  // b.none
   1e02c:	cmp	w26, #0x3
   1e030:	b.eq	1e35c <mpfr_asprintf@@Base+0xc84>  // b.none
   1e034:	cmp	w26, #0x2
   1e038:	b.eq	1e368 <mpfr_asprintf@@Base+0xc90>  // b.none
   1e03c:	cbnz	w26, 1e060 <mpfr_asprintf@@Base+0x988>
   1e040:	fmov	d0, #5.000000000000000000e-01
   1e044:	add	x0, sp, #0x80
   1e048:	bl	bcf0 <mpfr_cmp_d@plt>
   1e04c:	cmp	w0, #0x0
   1e050:	b.le	1e060 <mpfr_asprintf@@Base+0x988>
   1e054:	ldr	x1, [x19, #48]
   1e058:	mov	w0, #0x31                  	// #49
   1e05c:	strb	w0, [x1]
   1e060:	ldrb	w1, [x20]
   1e064:	and	w1, w1, #0x1
   1e068:	cbnz	w1, 1e088 <mpfr_asprintf@@Base+0x9b0>
   1e06c:	ldr	w25, [x19, #72]
   1e070:	cbnz	w25, 1e088 <mpfr_asprintf@@Base+0x9b0>
   1e074:	ldr	x0, [x19, #88]
   1e078:	cbnz	x0, 1e088 <mpfr_asprintf@@Base+0x9b0>
   1e07c:	ldr	w0, [x19, #96]
   1e080:	cbz	w0, 1df78 <mpfr_asprintf@@Base+0x8a0>
   1e084:	nop
   1e088:	bl	bea0 <localeconv@plt>
   1e08c:	ldr	x0, [x0]
   1e090:	mov	w1, #0x2e                  	// #46
   1e094:	ldrb	w0, [x0, #1]
   1e098:	cbnz	w0, 1e0fc <mpfr_asprintf@@Base+0xa24>
   1e09c:	bl	bea0 <localeconv@plt>
   1e0a0:	ldr	x0, [x0]
   1e0a4:	ldrb	w1, [x0]
   1e0a8:	b	1e0fc <mpfr_asprintf@@Base+0xa24>
   1e0ac:	mov	w0, #0x2d                  	// #45
   1e0b0:	strb	w0, [x19, #16]
   1e0b4:	b	1de88 <mpfr_asprintf@@Base+0x7b0>
   1e0b8:	cbnz	x20, 1df40 <mpfr_asprintf@@Base+0x868>
   1e0bc:	b	1df6c <mpfr_asprintf@@Base+0x894>
   1e0c0:	str	x25, [x19, #56]
   1e0c4:	ldrb	w25, [x20]
   1e0c8:	tbz	w25, #4, 1def0 <mpfr_asprintf@@Base+0x818>
   1e0cc:	bl	bea0 <localeconv@plt>
   1e0d0:	ldr	x0, [x0, #8]
   1e0d4:	ldrb	w0, [x0]
   1e0d8:	cbnz	w0, 1e1a8 <mpfr_asprintf@@Base+0xad0>
   1e0dc:	mov	w0, #0x0                   	// #0
   1e0e0:	strb	w0, [x19, #40]
   1e0e4:	b	1def0 <mpfr_asprintf@@Base+0x818>
   1e0e8:	bl	bea0 <localeconv@plt>
   1e0ec:	ldr	x0, [x0]
   1e0f0:	mov	w1, #0x2e                  	// #46
   1e0f4:	ldrb	w0, [x0, #1]
   1e0f8:	cbz	w0, 1e09c <mpfr_asprintf@@Base+0x9c4>
   1e0fc:	strb	w1, [x19, #68]
   1e100:	mov	w0, #0x0                   	// #0
   1e104:	ldp	x19, x20, [sp, #16]
   1e108:	ldp	x21, x22, [sp, #32]
   1e10c:	ldp	x23, x24, [sp, #48]
   1e110:	ldp	x25, x26, [sp, #64]
   1e114:	ldp	x27, x28, [sp, #80]
   1e118:	ldp	x29, x30, [sp], #160
   1e11c:	ret
   1e120:	add	x0, x0, w24, sxtw
   1e124:	mov	w1, #0xa                   	// #10
   1e128:	add	x2, x0, #0x1
   1e12c:	mov	w5, w26
   1e130:	mov	x4, x27
   1e134:	mov	x3, x21
   1e138:	add	x0, sp, #0x78
   1e13c:	bl	1da00 <mpfr_asprintf@@Base+0x328>
   1e140:	ldr	x1, [x19, #120]
   1e144:	mov	x22, x0
   1e148:	mov	x25, x1
   1e14c:	ldr	x1, [x1, #8]
   1e150:	cbnz	x1, 1e148 <mpfr_asprintf@@Base+0xa70>
   1e154:	mov	x0, #0x10                  	// #16
   1e158:	bl	ccf0 <mpfr_allocate_func@plt>
   1e15c:	str	x0, [x25, #8]
   1e160:	ldr	x25, [sp, #120]
   1e164:	stp	x22, xzr, [x0]
   1e168:	b	1debc <mpfr_asprintf@@Base+0x7e4>
   1e16c:	bl	bea0 <localeconv@plt>
   1e170:	ldr	x0, [x0]
   1e174:	mov	w1, #0x2e                  	// #46
   1e178:	ldrb	w0, [x0, #1]
   1e17c:	cbz	w0, 1e3c4 <mpfr_asprintf@@Base+0xcec>
   1e180:	ldr	x0, [x19, #88]
   1e184:	strb	w1, [x19, #68]
   1e188:	sub	w24, w24, w0
   1e18c:	str	w24, [x19, #96]
   1e190:	tbz	w25, #0, 1df78 <mpfr_asprintf@@Base+0x8a0>
   1e194:	b	1e0e8 <mpfr_asprintf@@Base+0xa10>
   1e198:	bl	bea0 <localeconv@plt>
   1e19c:	ldr	x0, [x0]
   1e1a0:	ldrb	w1, [x0]
   1e1a4:	b	1df60 <mpfr_asprintf@@Base+0x888>
   1e1a8:	bl	bea0 <localeconv@plt>
   1e1ac:	ldr	x0, [x0, #8]
   1e1b0:	ldrb	w0, [x0, #1]
   1e1b4:	cbnz	w0, 1e0dc <mpfr_asprintf@@Base+0xa04>
   1e1b8:	bl	bea0 <localeconv@plt>
   1e1bc:	ldr	x0, [x0, #8]
   1e1c0:	ldrb	w0, [x0]
   1e1c4:	strb	w0, [x19, #40]
   1e1c8:	b	1def0 <mpfr_asprintf@@Base+0x818>
   1e1cc:	neg	w28, w24
   1e1d0:	mov	x0, x21
   1e1d4:	bl	1d878 <mpfr_asprintf@@Base+0x1a0>
   1e1d8:	str	x0, [sp, #120]
   1e1dc:	cmp	x0, w28, sxtw
   1e1e0:	sxtw	x28, w28
   1e1e4:	b.ge	1e2bc <mpfr_asprintf@@Base+0xbe4>  // b.tcont
   1e1e8:	cmp	w26, #0x3
   1e1ec:	b.eq	1e3e8 <mpfr_asprintf@@Base+0xd10>  // b.none
   1e1f0:	b.gt	1e298 <mpfr_asprintf@@Base+0xbc0>
   1e1f4:	cmp	w26, #0x1
   1e1f8:	b.eq	1e290 <mpfr_asprintf@@Base+0xbb8>  // b.none
   1e1fc:	cmp	w26, #0x2
   1e200:	b.ne	1e400 <mpfr_asprintf@@Base+0xd28>  // b.any
   1e204:	ldr	w0, [x21, #8]
   1e208:	cmp	w0, #0x0
   1e20c:	cset	w21, gt
   1e210:	cbz	w21, 1e290 <mpfr_asprintf@@Base+0xbb8>
   1e214:	nop
   1e218:	mov	x1, #0x1                   	// #1
   1e21c:	sub	w24, w24, #0x1
   1e220:	str	w24, [x19, #72]
   1e224:	mov	x0, #0x2                   	// #2
   1e228:	str	x1, [x19, #88]
   1e22c:	bl	ccf0 <mpfr_allocate_func@plt>
   1e230:	mov	x22, x0
   1e234:	mov	w0, #0x31                  	// #49
   1e238:	strh	w0, [x22]
   1e23c:	ldr	x1, [x19, #120]
   1e240:	mov	x21, x1
   1e244:	ldr	x1, [x1, #8]
   1e248:	cbnz	x1, 1e240 <mpfr_asprintf@@Base+0xb68>
   1e24c:	mov	x0, #0x10                  	// #16
   1e250:	bl	ccf0 <mpfr_allocate_func@plt>
   1e254:	str	x0, [x21, #8]
   1e258:	stp	x22, xzr, [x0]
   1e25c:	ldrb	w1, [x20]
   1e260:	str	x22, [x19, #80]
   1e264:	and	w1, w1, #0x1
   1e268:	cbz	w1, 1e06c <mpfr_asprintf@@Base+0x994>
   1e26c:	b	1e088 <mpfr_asprintf@@Base+0x9b0>
   1e270:	ldr	x0, [x19, #48]
   1e274:	mov	w1, #0x31                  	// #49
   1e278:	cmp	w22, #0x47
   1e27c:	strb	w1, [x0]
   1e280:	b.ne	1e290 <mpfr_asprintf@@Base+0xbb8>  // b.any
   1e284:	ldrb	w0, [x20]
   1e288:	tbz	w0, #0, 1e06c <mpfr_asprintf@@Base+0x994>
   1e28c:	nop
   1e290:	str	w24, [x19, #72]
   1e294:	b	1e088 <mpfr_asprintf@@Base+0x9b0>
   1e298:	sub	w26, w26, #0x4
   1e29c:	cmp	w26, #0x1
   1e2a0:	b.ls	1e218 <mpfr_asprintf@@Base+0xb40>  // b.plast
   1e2a4:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1e2a8:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1e2ac:	add	x2, x2, #0x98
   1e2b0:	add	x0, x0, #0x20
   1e2b4:	mov	w1, #0x58f                 	// #1423
   1e2b8:	bl	cb40 <mpfr_assert_fail@plt>
   1e2bc:	cbz	x25, 1e378 <mpfr_asprintf@@Base+0xca0>
   1e2c0:	ldp	x1, x26, [x25]
   1e2c4:	str	x1, [sp, #120]
   1e2c8:	ldrsw	x0, [x21, #8]
   1e2cc:	cmp	x1, #0x1
   1e2d0:	add	x26, x26, x0, lsr #63
   1e2d4:	b.eq	1e270 <mpfr_asprintf@@Base+0xb98>  // b.none
   1e2d8:	neg	w25, w1
   1e2dc:	str	w25, [x19, #72]
   1e2e0:	str	x26, [x19, #80]
   1e2e4:	mov	w21, w1
   1e2e8:	mov	x0, x26
   1e2ec:	bl	bab0 <strlen@plt>
   1e2f0:	cbnz	w23, 1e318 <mpfr_asprintf@@Base+0xc40>
   1e2f4:	add	x1, x26, x0
   1e2f8:	ldurb	w1, [x1, #-1]
   1e2fc:	cmp	w1, #0x30
   1e300:	b.ne	1e318 <mpfr_asprintf@@Base+0xc40>  // b.any
   1e304:	sub	x26, x26, #0x1
   1e308:	sub	x0, x0, #0x1
   1e30c:	ldrb	w1, [x26, x0]
   1e310:	cmp	w1, #0x30
   1e314:	b.eq	1e308 <mpfr_asprintf@@Base+0xc30>  // b.none
   1e318:	mov	x1, #0x7fffffff            	// #2147483647
   1e31c:	cmp	x0, x1
   1e320:	b.hi	1e3f8 <mpfr_asprintf@@Base+0xd20>  // b.pmore
   1e324:	ldrb	w1, [x20]
   1e328:	cmp	w22, #0x47
   1e32c:	str	x0, [x19, #88]
   1e330:	and	w1, w1, #0x1
   1e334:	b.ne	1e3d4 <mpfr_asprintf@@Base+0xcfc>  // b.any
   1e338:	cbz	w1, 1e070 <mpfr_asprintf@@Base+0x998>
   1e33c:	add	x25, x0, w25, sxtw
   1e340:	cmp	x25, w24, sxtw
   1e344:	b.cs	1e088 <mpfr_asprintf@@Base+0x9b0>  // b.hs, b.nlast
   1e348:	add	w21, w24, w21
   1e34c:	sub	w0, w21, w0
   1e350:	str	w0, [x19, #96]
   1e354:	cbz	w1, 1e06c <mpfr_asprintf@@Base+0x994>
   1e358:	b	1e088 <mpfr_asprintf@@Base+0x9b0>
   1e35c:	ldr	w0, [x21, #8]
   1e360:	tbz	w0, #31, 1e060 <mpfr_asprintf@@Base+0x988>
   1e364:	b	1e058 <mpfr_asprintf@@Base+0x980>
   1e368:	ldr	w0, [x21, #8]
   1e36c:	cmp	w0, #0x0
   1e370:	b.gt	1e058 <mpfr_asprintf@@Base+0x980>
   1e374:	b	1e060 <mpfr_asprintf@@Base+0x988>
   1e378:	add	x0, x0, #0x1
   1e37c:	mov	w5, w26
   1e380:	add	x2, x0, w24, sxtw
   1e384:	mov	w1, #0xa                   	// #10
   1e388:	mov	x4, x27
   1e38c:	mov	x3, x21
   1e390:	add	x0, sp, #0x78
   1e394:	bl	1da00 <mpfr_asprintf@@Base+0x328>
   1e398:	ldr	x1, [x19, #120]
   1e39c:	mov	x26, x0
   1e3a0:	mov	x25, x1
   1e3a4:	ldr	x1, [x1, #8]
   1e3a8:	cbnz	x1, 1e3a0 <mpfr_asprintf@@Base+0xcc8>
   1e3ac:	mov	x0, #0x10                  	// #16
   1e3b0:	bl	ccf0 <mpfr_allocate_func@plt>
   1e3b4:	str	x0, [x25, #8]
   1e3b8:	ldr	x1, [sp, #120]
   1e3bc:	stp	x26, xzr, [x0]
   1e3c0:	b	1e2c8 <mpfr_asprintf@@Base+0xbf0>
   1e3c4:	bl	bea0 <localeconv@plt>
   1e3c8:	ldr	x0, [x0]
   1e3cc:	ldrb	w1, [x0]
   1e3d0:	b	1e180 <mpfr_asprintf@@Base+0xaa8>
   1e3d4:	add	x25, x0, w25, sxtw
   1e3d8:	cmp	x25, w24, sxtw
   1e3dc:	b.cc	1e348 <mpfr_asprintf@@Base+0xc70>  // b.lo, b.ul, b.last
   1e3e0:	cbz	w1, 1e06c <mpfr_asprintf@@Base+0x994>
   1e3e4:	b	1e088 <mpfr_asprintf@@Base+0x9b0>
   1e3e8:	ldr	w0, [x21, #8]
   1e3ec:	lsr	w21, w0, #31
   1e3f0:	cbz	w21, 1e290 <mpfr_asprintf@@Base+0xbb8>
   1e3f4:	b	1e218 <mpfr_asprintf@@Base+0xb40>
   1e3f8:	mov	w0, #0xffffffff            	// #-1
   1e3fc:	b	1df7c <mpfr_asprintf@@Base+0x8a4>
   1e400:	ldr	x0, [x21]
   1e404:	mov	x23, #0x38                  	// #56
   1e408:	cmp	x0, x23
   1e40c:	csel	x0, x0, x23, ge  // ge = tcont
   1e410:	cbnz	w26, 1e2a4 <mpfr_asprintf@@Base+0xbcc>
   1e414:	add	x23, x0, #0x8
   1e418:	add	x22, sp, #0x80
   1e41c:	mov	x1, x23
   1e420:	mov	x0, x22
   1e424:	bl	ca80 <mpfr_init2@plt>
   1e428:	b	1e430 <mpfr_asprintf@@Base+0xd58>
   1e42c:	add	x23, x23, #0x8
   1e430:	mov	x1, x23
   1e434:	mov	x0, x22
   1e438:	bl	bed0 <mpfr_set_prec@plt>
   1e43c:	mov	w3, #0x0                   	// #0
   1e440:	mov	x1, x28
   1e444:	mov	x2, #0x0                   	// #0
   1e448:	mov	x0, x22
   1e44c:	bl	ba80 <mpfr_set_si_2exp@plt>
   1e450:	mov	x1, x22
   1e454:	mov	w2, #0x3                   	// #3
   1e458:	mov	x0, x22
   1e45c:	bl	bd80 <mpfr_exp10@plt>
   1e460:	mov	w3, #0x0                   	// #0
   1e464:	mov	x2, #0x1                   	// #1
   1e468:	mov	x1, x22
   1e46c:	mov	x0, x22
   1e470:	bl	c8f0 <mpfr_div_2ui@plt>
   1e474:	mov	x1, x21
   1e478:	mov	x0, x22
   1e47c:	bl	c9b0 <mpfr_cmpabs@plt>
   1e480:	cbz	w0, 1e42c <mpfr_asprintf@@Base+0xd54>
   1e484:	lsr	w21, w0, #31
   1e488:	mov	x0, x22
   1e48c:	bl	c070 <mpfr_clear@plt>
   1e490:	cbz	w21, 1e290 <mpfr_asprintf@@Base+0xbb8>
   1e494:	b	1e218 <mpfr_asprintf@@Base+0xb40>
   1e498:	stp	x29, x30, [sp, #-48]!
   1e49c:	mov	x29, sp
   1e4a0:	stp	x19, x20, [sp, #16]
   1e4a4:	mov	x20, x0
   1e4a8:	ldr	x0, [x0, #24]
   1e4ac:	cmn	x0, #0x1
   1e4b0:	b.eq	1e528 <mpfr_asprintf@@Base+0xe50>  // b.none
   1e4b4:	adds	x0, x2, x0
   1e4b8:	mov	x19, x2
   1e4bc:	ccmp	x0, #0x0, #0x1, cc  // cc = lo, ul, last
   1e4c0:	b.lt	1e548 <mpfr_asprintf@@Base+0xe70>  // b.tstop
   1e4c4:	str	x21, [sp, #32]
   1e4c8:	and	w21, w1, #0xff
   1e4cc:	ldr	x1, [x20, #16]
   1e4d0:	str	x0, [x20, #24]
   1e4d4:	cbz	x1, 1e514 <mpfr_asprintf@@Base+0xe3c>
   1e4d8:	mvn	x0, x2
   1e4dc:	cmp	x1, x0
   1e4e0:	b.cs	1e56c <mpfr_asprintf@@Base+0xe94>  // b.hs, b.nlast
   1e4e4:	ldp	x2, x0, [x20]
   1e4e8:	add	x1, x2, x1
   1e4ec:	add	x2, x0, x19
   1e4f0:	cmp	x2, x1
   1e4f4:	b.cs	1e558 <mpfr_asprintf@@Base+0xe80>  // b.hs, b.nlast
   1e4f8:	cmp	x19, #0x1
   1e4fc:	b.ne	1e538 <mpfr_asprintf@@Base+0xe60>  // b.any
   1e500:	strb	w21, [x0]
   1e504:	ldr	x0, [x20, #8]
   1e508:	add	x1, x0, x19
   1e50c:	str	x1, [x20, #8]
   1e510:	strb	wzr, [x0, x19]
   1e514:	ldr	x21, [sp, #32]
   1e518:	mov	w0, #0x0                   	// #0
   1e51c:	ldp	x19, x20, [sp, #16]
   1e520:	ldp	x29, x30, [sp], #48
   1e524:	ret
   1e528:	mov	w0, #0x1                   	// #1
   1e52c:	ldp	x19, x20, [sp, #16]
   1e530:	ldp	x29, x30, [sp], #48
   1e534:	ret
   1e538:	mov	w1, w21
   1e53c:	mov	x2, x19
   1e540:	bl	c110 <memset@plt>
   1e544:	b	1e504 <mpfr_asprintf@@Base+0xe2c>
   1e548:	mov	x1, #0xffffffffffffffff    	// #-1
   1e54c:	mov	w0, #0x1                   	// #1
   1e550:	str	x1, [x20, #24]
   1e554:	b	1e51c <mpfr_asprintf@@Base+0xe44>
   1e558:	mov	x0, x20
   1e55c:	mov	x1, x19
   1e560:	bl	1d770 <mpfr_asprintf@@Base+0x98>
   1e564:	ldr	x0, [x20, #8]
   1e568:	b	1e4f8 <mpfr_asprintf@@Base+0xe20>
   1e56c:	mov	w1, #0x29a                 	// #666
   1e570:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1e574:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1e578:	add	x2, x2, #0x30
   1e57c:	add	x0, x0, #0x20
   1e580:	bl	cb40 <mpfr_assert_fail@plt>
   1e584:	ldr	x1, [x20, #16]
   1e588:	b	1e4e4 <mpfr_asprintf@@Base+0xe0c>
   1e58c:	nop

000000000001e590 <mpfr_vasnprintf_aux@@Base>:
   1e590:	sub	sp, sp, #0x2a0
   1e594:	mrs	x8, tpidr_el0
   1e598:	mov	x7, x0
   1e59c:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   1e5a0:	mov	x9, x7
   1e5a4:	stp	x29, x30, [sp, #16]
   1e5a8:	add	x29, sp, #0x10
   1e5ac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1e5b0:	ldr	x5, [x0, #2576]
   1e5b4:	add	x0, x0, #0xa10
   1e5b8:	blr	x5
   1e5bc:	ldr	w0, [x8, x0]
   1e5c0:	stp	x21, x22, [sp, #48]
   1e5c4:	mov	x22, x4
   1e5c8:	ldr	w21, [x4, #24]
   1e5cc:	stp	x23, x24, [sp, #64]
   1e5d0:	str	w0, [x29, #240]
   1e5d4:	ldr	x23, [x4]
   1e5d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1e5dc:	ldr	x4, [x0, #2512]
   1e5e0:	add	x0, x0, #0x9d0
   1e5e4:	blr	x4
   1e5e8:	add	x5, x8, x0
   1e5ec:	stp	x19, x20, [sp, #32]
   1e5f0:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   1e5f4:	ldr	x0, [x8, x0]
   1e5f8:	stp	x25, x26, [sp, #80]
   1e5fc:	stp	x27, x28, [sp, #96]
   1e600:	str	x1, [x29, #152]
   1e604:	ldr	x1, [x22, #8]
   1e608:	str	x6, [x5]
   1e60c:	str	x0, [x29, #192]
   1e610:	str	x7, [x29, #224]
   1e614:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1e618:	ldr	x7, [x0, #2544]
   1e61c:	add	x0, x0, #0x9f0
   1e620:	blr	x7
   1e624:	str	x1, [x29, #248]
   1e628:	mov	x7, x3
   1e62c:	ldr	x5, [x8, x0]
   1e630:	str	x4, [x8, x0]
   1e634:	ldr	x1, [x22, #16]
   1e638:	orr	x0, x9, x2
   1e63c:	str	x0, [x29, #160]
   1e640:	str	x8, [x29, #176]
   1e644:	str	x5, [x29, #184]
   1e648:	str	x2, [x29, #208]
   1e64c:	mov	x2, #0x0                   	// #0
   1e650:	str	x1, [x29, #232]
   1e654:	ldr	w1, [x22, #28]
   1e658:	str	w1, [x29, #244]
   1e65c:	cbnz	x0, 1fb38 <mpfr_vasnprintf_aux@@Base+0x15a8>
   1e660:	ldrb	w19, [x7]
   1e664:	stp	x2, xzr, [x29, #400]
   1e668:	ldp	x0, x1, [x22]
   1e66c:	stp	x0, x1, [x29, #416]
   1e670:	ldp	x2, x3, [x22, #16]
   1e674:	stp	x2, x3, [x29, #432]
   1e678:	cbz	w19, 1e774 <mpfr_vasnprintf_aux@@Base+0x1e4>
   1e67c:	ldr	x0, [x29, #224]
   1e680:	mov	x24, #0x71                  	// #113
   1e684:	mov	x20, #0x800000              	// #8388608
   1e688:	add	x1, x29, #0x180
   1e68c:	cmp	x0, #0x0
   1e690:	mov	x14, x7
   1e694:	ldr	x0, [x29, #208]
   1e698:	mov	w26, w21
   1e69c:	mov	x28, x22
   1e6a0:	movk	x24, #0x71, lsl #32
   1e6a4:	csinc	x0, x0, xzr, eq  // eq = none
   1e6a8:	movk	x20, #0xc, lsl #32
   1e6ac:	str	x0, [x29, #216]
   1e6b0:	mov	w0, #0x0                   	// #0
   1e6b4:	str	x1, [x29, #256]
   1e6b8:	b	1e6c0 <mpfr_vasnprintf_aux@@Base+0x130>
   1e6bc:	ldrb	w19, [x7, #1]!
   1e6c0:	cmp	w19, #0x25
   1e6c4:	ccmp	w19, #0x0, #0x4, ne  // ne = any
   1e6c8:	b.ne	1e6bc <mpfr_vasnprintf_aux@@Base+0x12c>  // b.any
   1e6cc:	cbz	w19, 1e6ec <mpfr_vasnprintf_aux@@Base+0x15c>
   1e6d0:	ldrb	w2, [x7, #1]
   1e6d4:	cmp	w2, #0x25
   1e6d8:	b.ne	1e820 <mpfr_vasnprintf_aux@@Base+0x290>  // b.any
   1e6dc:	ldrb	w19, [x7, #2]
   1e6e0:	mov	w0, #0x1                   	// #1
   1e6e4:	add	x7, x7, #0x2
   1e6e8:	cbnz	w19, 1e6c0 <mpfr_vasnprintf_aux@@Base+0x130>
   1e6ec:	cmp	x7, x14
   1e6f0:	b.eq	1e774 <mpfr_vasnprintf_aux@@Base+0x1e4>  // b.none
   1e6f4:	sub	x19, x7, x14
   1e6f8:	cbz	w0, 1f9f4 <mpfr_vasnprintf_aux@@Base+0x1464>
   1e6fc:	str	xzr, [x29, #488]
   1e700:	add	x1, x19, #0x1
   1e704:	cmp	x1, #0x4, lsl #12
   1e708:	b.hi	20a74 <mpfr_vasnprintf_aux@@Base+0x24e4>  // b.pmore
   1e70c:	add	x0, x19, #0x10
   1e710:	and	x0, x0, #0xfffffffffffffff0
   1e714:	sub	sp, sp, x0
   1e718:	add	x3, sp, #0x10
   1e71c:	mov	x1, x14
   1e720:	mov	x2, x19
   1e724:	mov	x0, x3
   1e728:	bl	cad0 <strncpy@plt>
   1e72c:	strb	wzr, [x0, x19]
   1e730:	mov	x1, x0
   1e734:	add	x2, x29, #0x140
   1e738:	add	x0, x29, #0x210
   1e73c:	ldp	x4, x5, [x29, #416]
   1e740:	stp	x4, x5, [x29, #320]
   1e744:	ldp	x4, x5, [x29, #432]
   1e748:	stp	x4, x5, [x29, #336]
   1e74c:	bl	c050 <__gmp_vasprintf@plt>
   1e750:	tbnz	w0, #31, 1fd58 <mpfr_vasnprintf_aux@@Base+0x17c8>
   1e754:	ldr	x1, [x29, #528]
   1e758:	sxtw	x2, w0
   1e75c:	add	x0, x29, #0x180
   1e760:	bl	1d920 <mpfr_asprintf@@Base+0x248>
   1e764:	ldr	x0, [x29, #528]
   1e768:	bl	c890 <mpfr_free_str@plt>
   1e76c:	ldr	x0, [x29, #488]
   1e770:	cbnz	x0, 206ec <mpfr_vasnprintf_aux@@Base+0x215c>
   1e774:	ldr	x1, [x29, #408]
   1e778:	mov	x0, #0x7fffffff            	// #2147483647
   1e77c:	cmp	x1, x0
   1e780:	ccmn	x1, #0x1, #0x4, le
   1e784:	b.eq	1fa18 <mpfr_vasnprintf_aux@@Base+0x1488>  // b.none
   1e788:	ldr	x19, [x29, #224]
   1e78c:	mov	w20, w1
   1e790:	cbz	x19, 1fd70 <mpfr_vasnprintf_aux@@Base+0x17e0>
   1e794:	add	w2, w1, #0x1
   1e798:	ldr	x0, [x29, #384]
   1e79c:	sxtw	x2, w2
   1e7a0:	ldr	x1, [x29, #400]
   1e7a4:	bl	c1c0 <mpfr_reallocate_func@plt>
   1e7a8:	str	x0, [x19]
   1e7ac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1e7b0:	ldr	x1, [x0, #2576]
   1e7b4:	add	x0, x0, #0xa10
   1e7b8:	blr	x1
   1e7bc:	ldr	w2, [x29, #240]
   1e7c0:	ldr	x1, [x29, #176]
   1e7c4:	str	w2, [x1, x0]
   1e7c8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1e7cc:	ldr	x2, [x0, #2512]
   1e7d0:	add	x0, x0, #0x9d0
   1e7d4:	blr	x2
   1e7d8:	ldr	x2, [x29, #192]
   1e7dc:	str	x2, [x1, x0]
   1e7e0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1e7e4:	ldr	x2, [x0, #2544]
   1e7e8:	add	x0, x0, #0x9f0
   1e7ec:	blr	x2
   1e7f0:	ldr	x2, [x29, #184]
   1e7f4:	str	x2, [x1, x0]
   1e7f8:	sub	sp, x29, #0x10
   1e7fc:	mov	w0, w20
   1e800:	ldp	x29, x30, [sp, #16]
   1e804:	ldp	x19, x20, [sp, #32]
   1e808:	ldp	x21, x22, [sp, #48]
   1e80c:	ldp	x23, x24, [sp, #64]
   1e810:	ldp	x25, x26, [sp, #80]
   1e814:	ldp	x27, x28, [sp, #96]
   1e818:	add	sp, sp, #0x2a0
   1e81c:	ret
   1e820:	add	x1, x7, #0x1
   1e824:	cbz	w2, 1fad0 <mpfr_vasnprintf_aux@@Base+0x1540>
   1e828:	mov	x6, x1
   1e82c:	mov	w3, #0x20                  	// #32
   1e830:	mov	w13, #0x0                   	// #0
   1e834:	mov	w5, #0x0                   	// #0
   1e838:	mov	w8, #0x0                   	// #0
   1e83c:	mov	w4, #0x0                   	// #0
   1e840:	mov	w12, #0x0                   	// #0
   1e844:	b	1e870 <mpfr_vasnprintf_aux@@Base+0x2e0>
   1e848:	cmp	w2, #0x23
   1e84c:	b.eq	1ed3c <mpfr_vasnprintf_aux@@Base+0x7ac>  // b.none
   1e850:	cmp	w2, #0x27
   1e854:	b.ne	1e8a0 <mpfr_vasnprintf_aux@@Base+0x310>  // b.any
   1e858:	add	x6, x6, #0x1
   1e85c:	mov	w13, #0x1                   	// #1
   1e860:	mov	x1, x6
   1e864:	nop
   1e868:	ldrb	w2, [x6]
   1e86c:	cbz	w2, 1fae8 <mpfr_vasnprintf_aux@@Base+0x1558>
   1e870:	cmp	w2, #0x2b
   1e874:	mov	x1, x6
   1e878:	b.eq	1ed5c <mpfr_vasnprintf_aux@@Base+0x7cc>  // b.none
   1e87c:	b.ls	1e848 <mpfr_vasnprintf_aux@@Base+0x2b8>  // b.plast
   1e880:	cmp	w2, #0x2d
   1e884:	b.eq	1ed4c <mpfr_vasnprintf_aux@@Base+0x7bc>  // b.none
   1e888:	cmp	w2, #0x30
   1e88c:	b.ne	1e8b8 <mpfr_vasnprintf_aux@@Base+0x328>  // b.any
   1e890:	add	x6, x6, #0x1
   1e894:	mov	w3, w2
   1e898:	mov	x1, x6
   1e89c:	b	1e868 <mpfr_vasnprintf_aux@@Base+0x2d8>
   1e8a0:	cmp	w2, #0x20
   1e8a4:	b.ne	1e8b8 <mpfr_vasnprintf_aux@@Base+0x328>  // b.any
   1e8a8:	add	x6, x6, #0x1
   1e8ac:	mov	w4, #0x1                   	// #1
   1e8b0:	mov	x1, x6
   1e8b4:	b	1e868 <mpfr_vasnprintf_aux@@Base+0x2d8>
   1e8b8:	ldrb	w19, [x6]
   1e8bc:	mov	w25, #0x0                   	// #0
   1e8c0:	mov	w10, #0x7fffffff            	// #2147483647
   1e8c4:	cbnz	w19, 1e90c <mpfr_vasnprintf_aux@@Base+0x37c>
   1e8c8:	b	1fae8 <mpfr_vasnprintf_aux@@Base+0x1558>
   1e8cc:	sub	w6, w19, #0x30
   1e8d0:	and	w2, w6, #0xff
   1e8d4:	cmp	w2, #0x9
   1e8d8:	b.hi	1eec0 <mpfr_vasnprintf_aux@@Base+0x930>  // b.pmore
   1e8dc:	add	w2, w25, w25, lsl #2
   1e8e0:	mov	w9, #0xcccc                	// #52428
   1e8e4:	ldrb	w19, [x1, #1]!
   1e8e8:	movk	w9, #0xccc, lsl #16
   1e8ec:	lsl	w2, w2, #1
   1e8f0:	cmp	w25, w9
   1e8f4:	csel	w2, w2, w10, le
   1e8f8:	sub	w9, w10, w6
   1e8fc:	cmp	w9, w2
   1e900:	add	w2, w2, w6
   1e904:	csel	w25, w2, w10, ge  // ge = tcont
   1e908:	cbz	w19, 1e954 <mpfr_vasnprintf_aux@@Base+0x3c4>
   1e90c:	cmp	w19, #0x2a
   1e910:	b.ne	1e8cc <mpfr_vasnprintf_aux@@Base+0x33c>  // b.any
   1e914:	tbnz	w26, #31, 1f028 <mpfr_vasnprintf_aux@@Base+0xa98>
   1e918:	add	x2, x23, #0xb
   1e91c:	and	x2, x2, #0xfffffffffffffff8
   1e920:	ldr	w25, [x23]
   1e924:	add	x6, x1, #0x1
   1e928:	tbz	w25, #31, 1eeb8 <mpfr_vasnprintf_aux@@Base+0x928>
   1e92c:	mov	w10, #0x80000001            	// #-2147483647
   1e930:	cmp	w25, w10
   1e934:	neg	w25, w25
   1e938:	b.eq	1fb20 <mpfr_vasnprintf_aux@@Base+0x1590>  // b.none
   1e93c:	ldrb	w19, [x1, #1]
   1e940:	mov	x23, x2
   1e944:	mov	x1, x6
   1e948:	mov	w8, #0x1                   	// #1
   1e94c:	cmp	w19, #0x2e
   1e950:	b.eq	1ea58 <mpfr_vasnprintf_aux@@Base+0x4c8>  // b.none
   1e954:	mov	w22, #0xffffffff            	// #-1
   1e958:	cmp	w19, #0x52
   1e95c:	b.eq	1eaec <mpfr_vasnprintf_aux@@Base+0x55c>  // b.none
   1e960:	b.hi	1ecd8 <mpfr_vasnprintf_aux@@Base+0x748>  // b.pmore
   1e964:	cmp	w19, #0x4e
   1e968:	b.eq	1f898 <mpfr_vasnprintf_aux@@Base+0x1308>  // b.none
   1e96c:	b.hi	1ecb4 <mpfr_vasnprintf_aux@@Base+0x724>  // b.pmore
   1e970:	cmp	w19, #0x4c
   1e974:	b.eq	1f860 <mpfr_vasnprintf_aux@@Base+0x12d0>  // b.none
   1e978:	cmp	w19, #0x4d
   1e97c:	b.ne	1eb60 <mpfr_vasnprintf_aux@@Base+0x5d0>  // b.any
   1e980:	ldrb	w19, [x1, #1]
   1e984:	add	x21, x1, #0x1
   1e988:	mov	w27, #0xb                   	// #11
   1e98c:	nop
   1e990:	cmp	w19, #0x6e
   1e994:	b.eq	1eb7c <mpfr_vasnprintf_aux@@Base+0x5ec>  // b.none
   1e998:	b.hi	1ee70 <mpfr_vasnprintf_aux@@Base+0x8e0>  // b.pmore
   1e99c:	cmp	w19, #0x62
   1e9a0:	b.eq	1f0e0 <mpfr_vasnprintf_aux@@Base+0xb50>  // b.none
   1e9a4:	b.ls	1ee1c <mpfr_vasnprintf_aux@@Base+0x88c>  // b.plast
   1e9a8:	cmp	w19, #0x64
   1e9ac:	b.eq	1ed74 <mpfr_vasnprintf_aux@@Base+0x7e4>  // b.none
   1e9b0:	b.ls	1edec <mpfr_vasnprintf_aux@@Base+0x85c>  // b.plast
   1e9b4:	cmp	w19, #0x67
   1e9b8:	b.hi	1ed6c <mpfr_vasnprintf_aux@@Base+0x7dc>  // b.pmore
   1e9bc:	add	x1, x21, #0x1
   1e9c0:	str	x1, [x29, #264]
   1e9c4:	cbnz	w27, 1ee40 <mpfr_vasnprintf_aux@@Base+0x8b0>
   1e9c8:	cmp	w19, #0x67
   1e9cc:	b.ls	1ea28 <mpfr_vasnprintf_aux@@Base+0x498>  // b.plast
   1e9d0:	sub	w0, w19, #0x69
   1e9d4:	and	w0, w0, #0xff
   1e9d8:	cmp	w0, #0xf
   1e9dc:	b.hi	1ea44 <mpfr_vasnprintf_aux@@Base+0x4b4>  // b.pmore
   1e9e0:	mov	x1, #0x1                   	// #1
   1e9e4:	mov	x2, #0x9041                	// #36929
   1e9e8:	lsl	x0, x1, x0
   1e9ec:	tst	x0, x2
   1e9f0:	b.ne	1f134 <mpfr_vasnprintf_aux@@Base+0xba4>  // b.any
   1e9f4:	tbnz	w0, #7, 1e9fc <mpfr_vasnprintf_aux@@Base+0x46c>
   1e9f8:	tbz	w0, #10, 1ea44 <mpfr_vasnprintf_aux@@Base+0x4b4>
   1e9fc:	tbz	w26, #31, 1edd0 <mpfr_vasnprintf_aux@@Base+0x840>
   1ea00:	add	w26, w26, #0x8
   1ea04:	cmp	w26, #0x0
   1ea08:	b.le	1ea44 <mpfr_vasnprintf_aux@@Base+0x4b4>
   1ea0c:	ldrb	w19, [x21, #1]
   1ea10:	add	x23, x23, #0xf
   1ea14:	and	x23, x23, #0xfffffffffffffff8
   1ea18:	mov	w0, w1
   1ea1c:	ldr	x7, [x29, #264]
   1ea20:	cbnz	w19, 1e6c0 <mpfr_vasnprintf_aux@@Base+0x130>
   1ea24:	b	1e6ec <mpfr_vasnprintf_aux@@Base+0x15c>
   1ea28:	sub	w19, w19, #0x41
   1ea2c:	mov	x0, #0x1                   	// #1
   1ea30:	lsl	x19, x0, x19
   1ea34:	tst	x19, x24
   1ea38:	b.ne	20ab8 <mpfr_vasnprintf_aux@@Base+0x2528>  // b.any
   1ea3c:	tst	x19, x20
   1ea40:	b.ne	1f134 <mpfr_vasnprintf_aux@@Base+0xba4>  // b.any
   1ea44:	ldrb	w19, [x21, #1]
   1ea48:	mov	w0, #0x1                   	// #1
   1ea4c:	ldr	x7, [x29, #264]
   1ea50:	cbnz	w19, 1e6c0 <mpfr_vasnprintf_aux@@Base+0x130>
   1ea54:	b	1e6ec <mpfr_vasnprintf_aux@@Base+0x15c>
   1ea58:	ldrb	w19, [x1, #1]
   1ea5c:	add	x15, x1, #0x1
   1ea60:	cbz	w19, 1faf4 <mpfr_vasnprintf_aux@@Base+0x1564>
   1ea64:	mov	x1, x15
   1ea68:	mov	w6, w19
   1ea6c:	mov	w22, #0x0                   	// #0
   1ea70:	mov	w11, #0x7fffffff            	// #2147483647
   1ea74:	b	1eab8 <mpfr_vasnprintf_aux@@Base+0x528>
   1ea78:	sub	w9, w6, #0x30
   1ea7c:	and	w2, w9, #0xff
   1ea80:	cmp	w2, #0x9
   1ea84:	b.hi	1ead8 <mpfr_vasnprintf_aux@@Base+0x548>  // b.pmore
   1ea88:	add	w2, w22, w22, lsl #2
   1ea8c:	mov	w10, #0xcccc                	// #52428
   1ea90:	ldrb	w6, [x1, #1]!
   1ea94:	movk	w10, #0xccc, lsl #16
   1ea98:	lsl	w2, w2, #1
   1ea9c:	cmp	w22, w10
   1eaa0:	csel	w2, w2, w11, le
   1eaa4:	sub	w10, w11, w9
   1eaa8:	cmp	w10, w2
   1eaac:	add	w2, w2, w9
   1eab0:	csel	w22, w2, w11, ge  // ge = tcont
   1eab4:	cbz	w6, 20ae0 <mpfr_vasnprintf_aux@@Base+0x2550>
   1eab8:	cmp	w6, #0x2a
   1eabc:	b.ne	1ea78 <mpfr_vasnprintf_aux@@Base+0x4e8>  // b.any
   1eac0:	tbnz	w26, #31, 1f930 <mpfr_vasnprintf_aux@@Base+0x13a0>
   1eac4:	add	x6, x23, #0xb
   1eac8:	mov	x2, x23
   1eacc:	and	x23, x6, #0xfffffffffffffff8
   1ead0:	ldr	w22, [x2]
   1ead4:	add	x1, x1, #0x1
   1ead8:	cmp	x1, x15
   1eadc:	b.eq	1faf4 <mpfr_vasnprintf_aux@@Base+0x1564>  // b.none
   1eae0:	ldrb	w19, [x1]
   1eae4:	cmp	w19, #0x52
   1eae8:	b.ne	1e960 <mpfr_vasnprintf_aux@@Base+0x3d0>  // b.any
   1eaec:	ldrb	w19, [x1, #1]
   1eaf0:	add	x21, x1, #0x1
   1eaf4:	cmp	w19, #0x55
   1eaf8:	b.eq	1fb7c <mpfr_vasnprintf_aux@@Base+0x15ec>  // b.none
   1eafc:	b.hi	1eef0 <mpfr_vasnprintf_aux@@Base+0x960>  // b.pmore
   1eb00:	cmp	w19, #0x44
   1eb04:	b.eq	1fb88 <mpfr_vasnprintf_aux@@Base+0x15f8>  // b.none
   1eb08:	cmp	w19, #0x4e
   1eb0c:	b.ne	1eec8 <mpfr_vasnprintf_aux@@Base+0x938>  // b.any
   1eb10:	add	x21, x1, #0x2
   1eb14:	mov	w6, #0x0                   	// #0
   1eb18:	ldrb	w19, [x21]
   1eb1c:	cmp	w19, #0x69
   1eb20:	b.eq	1ee04 <mpfr_vasnprintf_aux@@Base+0x874>  // b.none
   1eb24:	b.hi	1ef30 <mpfr_vasnprintf_aux@@Base+0x9a0>  // b.pmore
   1eb28:	cmp	w19, #0x62
   1eb2c:	b.eq	1f8d0 <mpfr_vasnprintf_aux@@Base+0x1340>  // b.none
   1eb30:	b.ls	1efe8 <mpfr_vasnprintf_aux@@Base+0xa58>  // b.plast
   1eb34:	cmp	w19, #0x63
   1eb38:	b.eq	1ee04 <mpfr_vasnprintf_aux@@Base+0x874>  // b.none
   1eb3c:	cmp	w19, #0x64
   1eb40:	b.eq	1ee04 <mpfr_vasnprintf_aux@@Base+0x874>  // b.none
   1eb44:	sub	w1, w19, #0x65
   1eb48:	and	w1, w1, #0xff
   1eb4c:	cmp	w1, #0x2
   1eb50:	b.ls	1f000 <mpfr_vasnprintf_aux@@Base+0xa70>  // b.plast
   1eb54:	nop
   1eb58:	mov	x7, x21
   1eb5c:	b	1e6c0 <mpfr_vasnprintf_aux@@Base+0x130>
   1eb60:	cmp	w19, #0x46
   1eb64:	b.ne	1ee14 <mpfr_vasnprintf_aux@@Base+0x884>  // b.any
   1eb68:	ldrb	w19, [x1, #1]
   1eb6c:	add	x21, x1, #0x1
   1eb70:	mov	w27, #0x9                   	// #9
   1eb74:	cmp	w19, #0x6e
   1eb78:	b.ne	1e998 <mpfr_vasnprintf_aux@@Base+0x408>  // b.any
   1eb7c:	add	x1, x21, #0x1
   1eb80:	mov	w6, #0x0                   	// #0
   1eb84:	str	x1, [x29, #264]
   1eb88:	tbnz	w26, #31, 1ef7c <mpfr_vasnprintf_aux@@Base+0x9ec>
   1eb8c:	add	x2, x23, #0xf
   1eb90:	mov	x1, x23
   1eb94:	and	x23, x2, #0xfffffffffffffff8
   1eb98:	sub	x22, x7, x14
   1eb9c:	ldr	x19, [x1]
   1eba0:	cbz	w0, 1efa4 <mpfr_vasnprintf_aux@@Base+0xa14>
   1eba4:	str	xzr, [x29, #488]
   1eba8:	add	x1, x22, #0x1
   1ebac:	cmp	x1, #0x4, lsl #12
   1ebb0:	b.hi	20254 <mpfr_vasnprintf_aux@@Base+0x1cc4>  // b.pmore
   1ebb4:	add	x0, x22, #0x10
   1ebb8:	and	x0, x0, #0xfffffffffffffff0
   1ebbc:	sub	sp, sp, x0
   1ebc0:	add	x3, sp, #0x10
   1ebc4:	mov	x1, x14
   1ebc8:	mov	x2, x22
   1ebcc:	mov	x0, x3
   1ebd0:	str	w6, [x29, #168]
   1ebd4:	bl	cad0 <strncpy@plt>
   1ebd8:	strb	wzr, [x0, x22]
   1ebdc:	add	x10, x29, #0x1a0
   1ebe0:	mov	x1, x0
   1ebe4:	ldp	x4, x5, [x29, #416]
   1ebe8:	stp	x4, x5, [x29, #320]
   1ebec:	add	x2, x29, #0x140
   1ebf0:	ldp	x4, x5, [x29, #432]
   1ebf4:	add	x0, x29, #0x210
   1ebf8:	str	x10, [x29, #200]
   1ebfc:	stp	x4, x5, [x29, #336]
   1ec00:	bl	c050 <__gmp_vasprintf@plt>
   1ec04:	ldr	w6, [x29, #168]
   1ec08:	ldr	x10, [x29, #200]
   1ec0c:	tbnz	w0, #31, 1fd58 <mpfr_vasnprintf_aux@@Base+0x17c8>
   1ec10:	sxtw	x2, w0
   1ec14:	str	x10, [x29, #168]
   1ec18:	ldr	x0, [x29, #256]
   1ec1c:	str	w6, [x29, #200]
   1ec20:	ldr	x1, [x29, #528]
   1ec24:	bl	1d920 <mpfr_asprintf@@Base+0x248>
   1ec28:	ldr	x0, [x29, #528]
   1ec2c:	bl	c890 <mpfr_free_str@plt>
   1ec30:	ldr	x0, [x29, #488]
   1ec34:	ldr	w6, [x29, #200]
   1ec38:	ldr	x10, [x29, #168]
   1ec3c:	cbnz	x0, 20240 <mpfr_vasnprintf_aux@@Base+0x1cb0>
   1ec40:	cmp	w27, #0x7
   1ec44:	b.eq	1ec68 <mpfr_vasnprintf_aux@@Base+0x6d8>  // b.none
   1ec48:	b.hi	1f060 <mpfr_vasnprintf_aux@@Base+0xad0>  // b.pmore
   1ec4c:	cmp	w27, #0x4
   1ec50:	b.eq	1ec68 <mpfr_vasnprintf_aux@@Base+0x6d8>  // b.none
   1ec54:	b.hi	1f044 <mpfr_vasnprintf_aux@@Base+0xab4>  // b.pmore
   1ec58:	cmp	w27, #0x2
   1ec5c:	b.eq	20120 <mpfr_vasnprintf_aux@@Base+0x1b90>  // b.none
   1ec60:	cmp	w27, #0x3
   1ec64:	b.ne	1f09c <mpfr_vasnprintf_aux@@Base+0xb0c>  // b.any
   1ec68:	ldr	x0, [x29, #408]
   1ec6c:	str	x0, [x19]
   1ec70:	ldr	x0, [x29, #248]
   1ec74:	stp	x23, x0, [x28]
   1ec78:	ldr	x0, [x29, #232]
   1ec7c:	str	x0, [x28, #16]
   1ec80:	ldr	w0, [x29, #244]
   1ec84:	str	w26, [x28, #24]
   1ec88:	str	w0, [x28, #28]
   1ec8c:	ldp	x0, x1, [x28]
   1ec90:	stp	x0, x1, [x10]
   1ec94:	ldp	x0, x1, [x28, #16]
   1ec98:	stp	x0, x1, [x10, #16]
   1ec9c:	ldrb	w19, [x21, #1]
   1eca0:	ldr	x14, [x29, #264]
   1eca4:	mov	w0, #0x0                   	// #0
   1eca8:	mov	x7, x14
   1ecac:	cbnz	w19, 1e6c0 <mpfr_vasnprintf_aux@@Base+0x130>
   1ecb0:	b	1e6ec <mpfr_vasnprintf_aux@@Base+0x15c>
   1ecb4:	cmp	w19, #0x50
   1ecb8:	b.eq	1f888 <mpfr_vasnprintf_aux@@Base+0x12f8>  // b.none
   1ecbc:	mov	x21, x1
   1ecc0:	cmp	w19, #0x51
   1ecc4:	b.ne	1eb58 <mpfr_vasnprintf_aux@@Base+0x5c8>  // b.any
   1ecc8:	ldrb	w19, [x1, #1]
   1eccc:	add	x21, x1, #0x1
   1ecd0:	mov	w27, #0xa                   	// #10
   1ecd4:	b	1e990 <mpfr_vasnprintf_aux@@Base+0x400>
   1ecd8:	cmp	w19, #0x6c
   1ecdc:	b.eq	1f870 <mpfr_vasnprintf_aux@@Base+0x12e0>  // b.none
   1ece0:	b.hi	1ed04 <mpfr_vasnprintf_aux@@Base+0x774>  // b.pmore
   1ece4:	cmp	w19, #0x68
   1ece8:	b.eq	1f8a8 <mpfr_vasnprintf_aux@@Base+0x1318>  // b.none
   1ecec:	cmp	w19, #0x6a
   1ecf0:	b.ne	1ed24 <mpfr_vasnprintf_aux@@Base+0x794>  // b.any
   1ecf4:	ldrb	w19, [x1, #1]
   1ecf8:	add	x21, x1, #0x1
   1ecfc:	mov	w27, #0x5                   	// #5
   1ed00:	b	1e990 <mpfr_vasnprintf_aux@@Base+0x400>
   1ed04:	cmp	w19, #0x74
   1ed08:	b.eq	1f8c0 <mpfr_vasnprintf_aux@@Base+0x1330>  // b.none
   1ed0c:	cmp	w19, #0x7a
   1ed10:	b.ne	20db8 <mpfr_vasnprintf_aux@@Base+0x2828>  // b.any
   1ed14:	ldrb	w19, [x1, #1]
   1ed18:	add	x21, x1, #0x1
   1ed1c:	mov	w27, #0x6                   	// #6
   1ed20:	b	1e990 <mpfr_vasnprintf_aux@@Base+0x400>
   1ed24:	cmp	w19, #0x5a
   1ed28:	b.ne	20dc4 <mpfr_vasnprintf_aux@@Base+0x2834>  // b.any
   1ed2c:	ldrb	w19, [x1, #1]
   1ed30:	add	x21, x1, #0x1
   1ed34:	mov	w27, #0xd                   	// #13
   1ed38:	b	1e990 <mpfr_vasnprintf_aux@@Base+0x400>
   1ed3c:	add	x6, x6, #0x1
   1ed40:	mov	w12, #0x1                   	// #1
   1ed44:	mov	x1, x6
   1ed48:	b	1e868 <mpfr_vasnprintf_aux@@Base+0x2d8>
   1ed4c:	add	x6, x6, #0x1
   1ed50:	mov	w8, #0x1                   	// #1
   1ed54:	mov	x1, x6
   1ed58:	b	1e868 <mpfr_vasnprintf_aux@@Base+0x2d8>
   1ed5c:	add	x6, x6, #0x1
   1ed60:	mov	w5, #0x1                   	// #1
   1ed64:	mov	x1, x6
   1ed68:	b	1e868 <mpfr_vasnprintf_aux@@Base+0x2d8>
   1ed6c:	cmp	w19, #0x69
   1ed70:	b.ne	1eb58 <mpfr_vasnprintf_aux@@Base+0x5c8>  // b.any
   1ed74:	cmp	w27, #0x7
   1ed78:	mov	w6, #0x0                   	// #0
   1ed7c:	b.hi	1fabc <mpfr_vasnprintf_aux@@Base+0x152c>  // b.pmore
   1ed80:	add	x1, x21, #0x1
   1ed84:	str	x1, [x29, #264]
   1ed88:	cmp	w19, #0x6e
   1ed8c:	b.eq	1eb88 <mpfr_vasnprintf_aux@@Base+0x5f8>  // b.none
   1ed90:	cmp	w27, #0xe
   1ed94:	b.eq	1f188 <mpfr_vasnprintf_aux@@Base+0xbf8>  // b.none
   1ed98:	cmp	w27, #0xf
   1ed9c:	b.eq	1f3b0 <mpfr_vasnprintf_aux@@Base+0xe20>  // b.none
   1eda0:	cmp	w27, #0x8
   1eda4:	b.eq	201b0 <mpfr_vasnprintf_aux@@Base+0x1c20>  // b.none
   1eda8:	b.hi	1f0f8 <mpfr_vasnprintf_aux@@Base+0xb68>  // b.pmore
   1edac:	cmp	w27, #0x5
   1edb0:	b.eq	1edcc <mpfr_vasnprintf_aux@@Base+0x83c>  // b.none
   1edb4:	b.hi	1f154 <mpfr_vasnprintf_aux@@Base+0xbc4>  // b.pmore
   1edb8:	cmp	w27, #0x3
   1edbc:	b.eq	201d8 <mpfr_vasnprintf_aux@@Base+0x1c48>  // b.none
   1edc0:	b.ls	1f128 <mpfr_vasnprintf_aux@@Base+0xb98>  // b.plast
   1edc4:	cmp	w27, #0x4
   1edc8:	b.ne	1e9c8 <mpfr_vasnprintf_aux@@Base+0x438>  // b.any
   1edcc:	tbnz	w26, #31, 1f118 <mpfr_vasnprintf_aux@@Base+0xb88>
   1edd0:	ldrb	w19, [x21, #1]
   1edd4:	add	x23, x23, #0xf
   1edd8:	and	x23, x23, #0xfffffffffffffff8
   1eddc:	mov	w0, #0x1                   	// #1
   1ede0:	ldr	x7, [x29, #264]
   1ede4:	cbnz	w19, 1e6c0 <mpfr_vasnprintf_aux@@Base+0x130>
   1ede8:	b	1e6ec <mpfr_vasnprintf_aux@@Base+0x15c>
   1edec:	cmp	w19, #0x63
   1edf0:	b.ne	1f17c <mpfr_vasnprintf_aux@@Base+0xbec>  // b.any
   1edf4:	cmp	w27, #0x0
   1edf8:	mov	w6, #0x0                   	// #0
   1edfc:	ccmp	w27, #0x3, #0x4, ne  // ne = any
   1ee00:	b.eq	1ed80 <mpfr_vasnprintf_aux@@Base+0x7f0>  // b.none
   1ee04:	ldrb	w19, [x21]
   1ee08:	mov	x7, x21
   1ee0c:	cbnz	w19, 1e6c0 <mpfr_vasnprintf_aux@@Base+0x130>
   1ee10:	b	1e6ec <mpfr_vasnprintf_aux@@Base+0x15c>
   1ee14:	mov	x21, x1
   1ee18:	mov	w27, #0x0                   	// #0
   1ee1c:	cmp	w19, #0x47
   1ee20:	b.hi	1ee58 <mpfr_vasnprintf_aux@@Base+0x8c8>  // b.pmore
   1ee24:	cmp	w19, #0x44
   1ee28:	b.hi	1e9bc <mpfr_vasnprintf_aux@@Base+0x42c>  // b.pmore
   1ee2c:	cmp	w19, #0x41
   1ee30:	b.ne	1ee08 <mpfr_vasnprintf_aux@@Base+0x878>  // b.any
   1ee34:	add	x1, x21, #0x1
   1ee38:	str	x1, [x29, #264]
   1ee3c:	cbz	w27, 1e9c8 <mpfr_vasnprintf_aux@@Base+0x438>
   1ee40:	sub	w1, w27, #0x8
   1ee44:	cmp	w1, #0x1
   1ee48:	ccmp	w27, #0xf, #0x4, hi  // hi = pmore
   1ee4c:	b.ne	1ee04 <mpfr_vasnprintf_aux@@Base+0x874>  // b.any
   1ee50:	mov	w6, #0x0                   	// #0
   1ee54:	b	1f004 <mpfr_vasnprintf_aux@@Base+0xa74>
   1ee58:	cmp	w19, #0x58
   1ee5c:	b.eq	1ed74 <mpfr_vasnprintf_aux@@Base+0x7e4>  // b.none
   1ee60:	cmp	w19, #0x61
   1ee64:	b.eq	1e9bc <mpfr_vasnprintf_aux@@Base+0x42c>  // b.none
   1ee68:	mov	x7, x21
   1ee6c:	b	1e6c0 <mpfr_vasnprintf_aux@@Base+0x130>
   1ee70:	cmp	w19, #0x70
   1ee74:	b.eq	1ef10 <mpfr_vasnprintf_aux@@Base+0x980>  // b.none
   1ee78:	b.ls	1eea4 <mpfr_vasnprintf_aux@@Base+0x914>  // b.plast
   1ee7c:	cmp	w19, #0x73
   1ee80:	b.eq	1edf4 <mpfr_vasnprintf_aux@@Base+0x864>  // b.none
   1ee84:	cmp	w19, #0x72
   1ee88:	b.ls	1eb58 <mpfr_vasnprintf_aux@@Base+0x5c8>  // b.plast
   1ee8c:	cmp	w19, #0x75
   1ee90:	b.eq	1ed74 <mpfr_vasnprintf_aux@@Base+0x7e4>  // b.none
   1ee94:	cmp	w19, #0x78
   1ee98:	b.eq	1ed74 <mpfr_vasnprintf_aux@@Base+0x7e4>  // b.none
   1ee9c:	mov	x7, x21
   1eea0:	b	1e6c0 <mpfr_vasnprintf_aux@@Base+0x130>
   1eea4:	cmp	w19, #0x6f
   1eea8:	b.eq	1ed74 <mpfr_vasnprintf_aux@@Base+0x7e4>  // b.none
   1eeac:	mov	x7, x21
   1eeb0:	mov	w19, #0x70                  	// #112
   1eeb4:	b	1e6c0 <mpfr_vasnprintf_aux@@Base+0x130>
   1eeb8:	mov	x23, x2
   1eebc:	mov	x1, x6
   1eec0:	ldrb	w19, [x1]
   1eec4:	b	1e94c <mpfr_vasnprintf_aux@@Base+0x3bc>
   1eec8:	cmp	w19, #0x2a
   1eecc:	mov	w27, #0xf                   	// #15
   1eed0:	b.ne	1ee1c <mpfr_vasnprintf_aux@@Base+0x88c>  // b.any
   1eed4:	add	x21, x1, #0x2
   1eed8:	tbnz	w26, #31, 1fdb0 <mpfr_vasnprintf_aux@@Base+0x1820>
   1eedc:	mov	x1, x23
   1eee0:	add	x2, x23, #0xb
   1eee4:	and	x23, x2, #0xfffffffffffffff8
   1eee8:	ldr	w6, [x1]
   1eeec:	b	1eb18 <mpfr_vasnprintf_aux@@Base+0x588>
   1eef0:	cmp	w19, #0x59
   1eef4:	b.eq	1fb70 <mpfr_vasnprintf_aux@@Base+0x15e0>  // b.none
   1eef8:	cmp	w19, #0x5a
   1eefc:	mov	w27, #0xf                   	// #15
   1ef00:	b.ne	1e990 <mpfr_vasnprintf_aux@@Base+0x400>  // b.any
   1ef04:	add	x21, x1, #0x2
   1ef08:	mov	w6, #0x1                   	// #1
   1ef0c:	b	1eb18 <mpfr_vasnprintf_aux@@Base+0x588>
   1ef10:	mov	w6, #0x0                   	// #0
   1ef14:	cmp	w27, #0x0
   1ef18:	mov	w19, #0x70                  	// #112
   1ef1c:	cset	w1, eq  // eq = none
   1ef20:	cbnz	w1, 1ed80 <mpfr_vasnprintf_aux@@Base+0x7f0>
   1ef24:	ldrb	w19, [x21]
   1ef28:	mov	x7, x21
   1ef2c:	b	1e6c0 <mpfr_vasnprintf_aux@@Base+0x130>
   1ef30:	cmp	w19, #0x70
   1ef34:	b.eq	1f8d8 <mpfr_vasnprintf_aux@@Base+0x1348>  // b.none
   1ef38:	b.ls	1ef64 <mpfr_vasnprintf_aux@@Base+0x9d4>  // b.plast
   1ef3c:	cmp	w19, #0x73
   1ef40:	b.eq	1ee04 <mpfr_vasnprintf_aux@@Base+0x874>  // b.none
   1ef44:	cmp	w19, #0x72
   1ef48:	b.ls	1eb58 <mpfr_vasnprintf_aux@@Base+0x5c8>  // b.plast
   1ef4c:	cmp	w19, #0x75
   1ef50:	b.eq	1ee04 <mpfr_vasnprintf_aux@@Base+0x874>  // b.none
   1ef54:	cmp	w19, #0x78
   1ef58:	b.ne	1eb58 <mpfr_vasnprintf_aux@@Base+0x5c8>  // b.any
   1ef5c:	ldrb	w19, [x21]
   1ef60:	b	1ee08 <mpfr_vasnprintf_aux@@Base+0x878>
   1ef64:	cmp	w19, #0x6e
   1ef68:	mov	w27, #0xf                   	// #15
   1ef6c:	b.ne	1efd8 <mpfr_vasnprintf_aux@@Base+0xa48>  // b.any
   1ef70:	add	x1, x21, #0x1
   1ef74:	str	x1, [x29, #264]
   1ef78:	tbz	w26, #31, 1eb8c <mpfr_vasnprintf_aux@@Base+0x5fc>
   1ef7c:	add	w2, w26, #0x8
   1ef80:	cmp	w2, #0x0
   1ef84:	b.le	1f950 <mpfr_vasnprintf_aux@@Base+0x13c0>
   1ef88:	mov	x1, x23
   1ef8c:	add	x3, x23, #0xf
   1ef90:	mov	w26, w2
   1ef94:	and	x23, x3, #0xfffffffffffffff8
   1ef98:	sub	x22, x7, x14
   1ef9c:	ldr	x19, [x1]
   1efa0:	cbnz	w0, 1eba4 <mpfr_vasnprintf_aux@@Base+0x614>
   1efa4:	add	x10, x29, #0x1a0
   1efa8:	cmp	x14, x7
   1efac:	b.eq	1ec40 <mpfr_vasnprintf_aux@@Base+0x6b0>  // b.none
   1efb0:	ldr	x0, [x29, #256]
   1efb4:	add	x10, x29, #0x1a0
   1efb8:	mov	x2, x22
   1efbc:	mov	x1, x14
   1efc0:	str	w6, [x29, #168]
   1efc4:	str	x10, [x29, #200]
   1efc8:	bl	1d920 <mpfr_asprintf@@Base+0x248>
   1efcc:	ldr	w6, [x29, #168]
   1efd0:	ldr	x10, [x29, #200]
   1efd4:	b	1ec40 <mpfr_vasnprintf_aux@@Base+0x6b0>
   1efd8:	cmp	w19, #0x6f
   1efdc:	b.ne	1eb58 <mpfr_vasnprintf_aux@@Base+0x5c8>  // b.any
   1efe0:	ldrb	w19, [x21]
   1efe4:	b	1ee08 <mpfr_vasnprintf_aux@@Base+0x878>
   1efe8:	cmp	w19, #0x47
   1efec:	b.hi	1f010 <mpfr_vasnprintf_aux@@Base+0xa80>  // b.pmore
   1eff0:	cmp	w19, #0x44
   1eff4:	b.hi	1f000 <mpfr_vasnprintf_aux@@Base+0xa70>  // b.pmore
   1eff8:	cmp	w19, #0x41
   1effc:	b.ne	1ee08 <mpfr_vasnprintf_aux@@Base+0x878>  // b.any
   1f000:	mov	w27, #0xf                   	// #15
   1f004:	add	x1, x21, #0x1
   1f008:	str	x1, [x29, #264]
   1f00c:	b	1ed90 <mpfr_vasnprintf_aux@@Base+0x800>
   1f010:	cmp	w19, #0x58
   1f014:	b.eq	1ee04 <mpfr_vasnprintf_aux@@Base+0x874>  // b.none
   1f018:	cmp	w19, #0x61
   1f01c:	b.eq	1f000 <mpfr_vasnprintf_aux@@Base+0xa70>  // b.none
   1f020:	mov	x7, x21
   1f024:	b	1e6c0 <mpfr_vasnprintf_aux@@Base+0x130>
   1f028:	add	w6, w26, #0x8
   1f02c:	cmp	w6, #0x0
   1f030:	b.le	1f398 <mpfr_vasnprintf_aux@@Base+0xe08>
   1f034:	add	x2, x23, #0xb
   1f038:	mov	w26, w6
   1f03c:	and	x2, x2, #0xfffffffffffffff8
   1f040:	b	1e920 <mpfr_vasnprintf_aux@@Base+0x390>
   1f044:	cmp	w27, #0x5
   1f048:	b.eq	1ec68 <mpfr_vasnprintf_aux@@Base+0x6d8>  // b.none
   1f04c:	cmp	w27, #0x6
   1f050:	b.eq	1ec68 <mpfr_vasnprintf_aux@@Base+0x6d8>  // b.none
   1f054:	ldr	x0, [x29, #408]
   1f058:	str	w0, [x19]
   1f05c:	b	1ec70 <mpfr_vasnprintf_aux@@Base+0x6e0>
   1f060:	cmp	w27, #0xc
   1f064:	b.eq	2012c <mpfr_vasnprintf_aux@@Base+0x1b9c>  // b.none
   1f068:	b.hi	1f0b0 <mpfr_vasnprintf_aux@@Base+0xb20>  // b.pmore
   1f06c:	cmp	w27, #0xa
   1f070:	b.eq	2017c <mpfr_vasnprintf_aux@@Base+0x1bec>  // b.none
   1f074:	cmp	w27, #0xb
   1f078:	b.eq	1ec68 <mpfr_vasnprintf_aux@@Base+0x6d8>  // b.none
   1f07c:	cmp	w27, #0x9
   1f080:	b.ne	1f054 <mpfr_vasnprintf_aux@@Base+0xac4>  // b.any
   1f084:	ldr	x1, [x29, #408]
   1f088:	mov	x0, x19
   1f08c:	str	x10, [x29, #200]
   1f090:	bl	c180 <__gmpf_set_ui@plt>
   1f094:	ldr	x10, [x29, #200]
   1f098:	b	1ec70 <mpfr_vasnprintf_aux@@Base+0x6e0>
   1f09c:	cmp	w27, #0x1
   1f0a0:	b.ne	1f054 <mpfr_vasnprintf_aux@@Base+0xac4>  // b.any
   1f0a4:	ldr	x0, [x29, #408]
   1f0a8:	strb	w0, [x19]
   1f0ac:	b	1ec70 <mpfr_vasnprintf_aux@@Base+0x6e0>
   1f0b0:	cmp	w27, #0xd
   1f0b4:	b.eq	20108 <mpfr_vasnprintf_aux@@Base+0x1b78>  // b.none
   1f0b8:	cmp	w27, #0xf
   1f0bc:	b.ne	1f054 <mpfr_vasnprintf_aux@@Base+0xac4>  // b.any
   1f0c0:	ldr	x1, [x29, #408]
   1f0c4:	mov	w3, w6
   1f0c8:	mov	x0, x19
   1f0cc:	mov	x2, #0x0                   	// #0
   1f0d0:	str	x10, [x29, #200]
   1f0d4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   1f0d8:	ldr	x10, [x29, #200]
   1f0dc:	b	1ec70 <mpfr_vasnprintf_aux@@Base+0x6e0>
   1f0e0:	mov	w6, #0x0                   	// #0
   1f0e4:	cmp	w27, #0xf
   1f0e8:	mov	w19, #0x62                  	// #98
   1f0ec:	cset	w1, eq  // eq = none
   1f0f0:	cbnz	w1, 1ed80 <mpfr_vasnprintf_aux@@Base+0x7f0>
   1f0f4:	b	1ef24 <mpfr_vasnprintf_aux@@Base+0x994>
   1f0f8:	cmp	w27, #0xb
   1f0fc:	b.eq	1edcc <mpfr_vasnprintf_aux@@Base+0x83c>  // b.none
   1f100:	b.ls	1f168 <mpfr_vasnprintf_aux@@Base+0xbd8>  // b.plast
   1f104:	cmp	w27, #0xc
   1f108:	b.eq	201a0 <mpfr_vasnprintf_aux@@Base+0x1c10>  // b.none
   1f10c:	cmp	w27, #0xd
   1f110:	b.ne	1e9c8 <mpfr_vasnprintf_aux@@Base+0x438>  // b.any
   1f114:	tbz	w26, #31, 1edd0 <mpfr_vasnprintf_aux@@Base+0x840>
   1f118:	add	w26, w26, #0x8
   1f11c:	cmp	w26, #0x0
   1f120:	b.gt	1edd0 <mpfr_vasnprintf_aux@@Base+0x840>
   1f124:	b	1ea44 <mpfr_vasnprintf_aux@@Base+0x4b4>
   1f128:	sub	w27, w27, #0x1
   1f12c:	cmp	w27, #0x1
   1f130:	b.hi	1e9c8 <mpfr_vasnprintf_aux@@Base+0x438>  // b.pmore
   1f134:	tbnz	w26, #31, 20408 <mpfr_vasnprintf_aux@@Base+0x1e78>
   1f138:	ldrb	w19, [x21, #1]
   1f13c:	add	x23, x23, #0xb
   1f140:	and	x23, x23, #0xfffffffffffffff8
   1f144:	mov	w0, #0x1                   	// #1
   1f148:	ldr	x7, [x29, #264]
   1f14c:	cbnz	w19, 1e6c0 <mpfr_vasnprintf_aux@@Base+0x130>
   1f150:	b	1e6ec <mpfr_vasnprintf_aux@@Base+0x15c>
   1f154:	cmp	w27, #0x6
   1f158:	b.eq	1edcc <mpfr_vasnprintf_aux@@Base+0x83c>  // b.none
   1f15c:	cmp	w27, #0x7
   1f160:	b.eq	1edcc <mpfr_vasnprintf_aux@@Base+0x83c>  // b.none
   1f164:	b	1e9c8 <mpfr_vasnprintf_aux@@Base+0x438>
   1f168:	cmp	w27, #0x9
   1f16c:	b.eq	1edcc <mpfr_vasnprintf_aux@@Base+0x83c>  // b.none
   1f170:	cmp	w27, #0xa
   1f174:	b.eq	1edcc <mpfr_vasnprintf_aux@@Base+0x83c>  // b.none
   1f178:	b	1e9c8 <mpfr_vasnprintf_aux@@Base+0x438>
   1f17c:	mov	x7, x21
   1f180:	mov	w19, #0x64                  	// #100
   1f184:	b	1e6c0 <mpfr_vasnprintf_aux@@Base+0x130>
   1f188:	tbnz	w26, #31, 1fb00 <mpfr_vasnprintf_aux@@Base+0x1570>
   1f18c:	add	x2, x23, #0xf
   1f190:	mov	x1, x23
   1f194:	and	x23, x2, #0xfffffffffffffff8
   1f198:	ldr	x1, [x1]
   1f19c:	str	x1, [x29, #200]
   1f1a0:	sub	x2, x7, x14
   1f1a4:	cbz	w0, 1f8e0 <mpfr_vasnprintf_aux@@Base+0x1350>
   1f1a8:	str	xzr, [x29, #488]
   1f1ac:	add	x1, x2, #0x1
   1f1b0:	cmp	x1, #0x4, lsl #12
   1f1b4:	b.hi	20014 <mpfr_vasnprintf_aux@@Base+0x1a84>  // b.pmore
   1f1b8:	add	x0, x2, #0x10
   1f1bc:	and	x0, x0, #0xfffffffffffffff0
   1f1c0:	sub	sp, sp, x0
   1f1c4:	add	x6, sp, #0x10
   1f1c8:	mov	x1, x14
   1f1cc:	mov	x0, x6
   1f1d0:	str	w13, [x29, #112]
   1f1d4:	add	x27, x29, #0x210
   1f1d8:	stp	w3, w8, [x29, #120]
   1f1dc:	str	w12, [x29, #128]
   1f1e0:	str	w5, [x29, #136]
   1f1e4:	str	w4, [x29, #144]
   1f1e8:	str	x2, [x29, #168]
   1f1ec:	bl	cad0 <strncpy@plt>
   1f1f0:	ldr	x2, [x29, #168]
   1f1f4:	mov	x6, x0
   1f1f8:	mov	x1, x0
   1f1fc:	mov	x0, x27
   1f200:	strb	wzr, [x6, x2]
   1f204:	add	x2, x29, #0x140
   1f208:	ldp	x6, x7, [x29, #416]
   1f20c:	stp	x6, x7, [x29, #320]
   1f210:	ldp	x6, x7, [x29, #432]
   1f214:	stp	x6, x7, [x29, #336]
   1f218:	bl	c050 <__gmp_vasprintf@plt>
   1f21c:	ldr	w13, [x29, #112]
   1f220:	add	x10, x29, #0x1a0
   1f224:	ldp	w3, w8, [x29, #120]
   1f228:	ldr	w12, [x29, #128]
   1f22c:	ldr	w5, [x29, #136]
   1f230:	ldr	w4, [x29, #144]
   1f234:	tbnz	w0, #31, 1fd58 <mpfr_vasnprintf_aux@@Base+0x17c8>
   1f238:	sxtw	x2, w0
   1f23c:	str	x10, [x29, #112]
   1f240:	ldr	x0, [x29, #256]
   1f244:	stp	w13, w3, [x29, #120]
   1f248:	ldr	x1, [x29, #528]
   1f24c:	str	w8, [x29, #128]
   1f250:	str	w12, [x29, #136]
   1f254:	str	w5, [x29, #144]
   1f258:	str	w4, [x29, #168]
   1f25c:	bl	1d920 <mpfr_asprintf@@Base+0x248>
   1f260:	ldr	x0, [x29, #528]
   1f264:	bl	c890 <mpfr_free_str@plt>
   1f268:	ldr	x0, [x29, #488]
   1f26c:	ldp	w13, w3, [x29, #120]
   1f270:	ldr	w8, [x29, #128]
   1f274:	ldr	w12, [x29, #136]
   1f278:	ldr	w5, [x29, #144]
   1f27c:	ldr	w4, [x29, #168]
   1f280:	ldr	x10, [x29, #112]
   1f284:	cbnz	x0, 203c0 <mpfr_vasnprintf_aux@@Base+0x1e30>
   1f288:	ldrb	w0, [x29, #448]
   1f28c:	cmp	w3, #0x30
   1f290:	ldr	x3, [x29, #248]
   1f294:	stp	x23, x3, [x28]
   1f298:	bfxil	w0, w12, #0, #1
   1f29c:	adrp	x3, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1f2a0:	add	x12, x3, #0xb8
   1f2a4:	bfi	w0, w4, #1, #1
   1f2a8:	adrp	x1, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   1f2ac:	ldr	x3, [x29, #232]
   1f2b0:	bfi	w0, w8, #2, #1
   1f2b4:	str	x3, [x28, #16]
   1f2b8:	adrp	x3, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1f2bc:	bfi	w0, w5, #3, #1
   1f2c0:	add	x1, x1, #0xd00
   1f2c4:	add	x5, x3, #0xc8
   1f2c8:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   1f2cc:	bfi	w0, w13, #4, #1
   1f2d0:	ldr	w3, [x29, #244]
   1f2d4:	add	x2, x2, #0x328
   1f2d8:	str	w26, [x28, #24]
   1f2dc:	csel	x2, x2, x1, eq  // eq = none
   1f2e0:	tst	x0, #0x1
   1f2e4:	str	w3, [x28, #28]
   1f2e8:	adrp	x4, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1f2ec:	csel	x3, x12, x1, ne  // ne = any
   1f2f0:	add	x4, x4, #0xc0
   1f2f4:	tst	x0, #0x8
   1f2f8:	str	w19, [sp]
   1f2fc:	csel	x4, x4, x1, ne  // ne = any
   1f300:	tst	x0, #0x2
   1f304:	csel	x5, x5, x1, ne  // ne = any
   1f308:	adrp	x6, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1f30c:	tst	x0, #0x4
   1f310:	add	x6, x6, #0xd0
   1f314:	ldp	x12, x13, [x28, #16]
   1f318:	csel	x6, x6, x1, ne  // ne = any
   1f31c:	adrp	x7, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1f320:	tst	x0, #0x10
   1f324:	add	x7, x7, #0xd8
   1f328:	strb	w0, [x29, #448]
   1f32c:	csel	x7, x7, x1, ne  // ne = any
   1f330:	stp	x12, x13, [x10, #16]
   1f334:	ldp	x0, x1, [x28]
   1f338:	stp	x0, x1, [x10]
   1f33c:	mov	x0, x27
   1f340:	adrp	x1, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1f344:	add	x1, x1, #0x108
   1f348:	bl	bd10 <sprintf@plt>
   1f34c:	ldr	x4, [x29, #200]
   1f350:	mov	w3, w22
   1f354:	mov	w2, w25
   1f358:	mov	x1, x27
   1f35c:	add	x0, x29, #0x1e8
   1f360:	bl	c0c0 <__gmp_asprintf@plt>
   1f364:	sxtw	x2, w0
   1f368:	ldp	x0, x14, [x29, #256]
   1f36c:	str	x14, [x29, #200]
   1f370:	ldr	x1, [x29, #488]
   1f374:	bl	1d920 <mpfr_asprintf@@Base+0x248>
   1f378:	ldr	x0, [x29, #488]
   1f37c:	bl	c890 <mpfr_free_str@plt>
   1f380:	ldrb	w19, [x21, #1]
   1f384:	mov	w0, #0x0                   	// #0
   1f388:	ldr	x14, [x29, #200]
   1f38c:	ldr	x7, [x29, #264]
   1f390:	cbnz	w19, 1e6c0 <mpfr_vasnprintf_aux@@Base+0x130>
   1f394:	b	1e6ec <mpfr_vasnprintf_aux@@Base+0x15c>
   1f398:	ldr	x2, [x29, #248]
   1f39c:	add	x10, x2, w26, sxtw
   1f3a0:	mov	x2, x23
   1f3a4:	mov	w26, w6
   1f3a8:	mov	x23, x10
   1f3ac:	b	1e920 <mpfr_vasnprintf_aux@@Base+0x390>
   1f3b0:	and	w27, w19, #0xffffffdf
   1f3b4:	sub	w1, w19, #0x61
   1f3b8:	and	w1, w1, #0xff
   1f3bc:	sub	w2, w27, #0x45
   1f3c0:	cmp	w19, #0x41
   1f3c4:	and	w27, w27, #0xff
   1f3c8:	ccmp	w1, #0x1, #0x0, ne  // ne = any
   1f3cc:	and	w1, w2, #0xff
   1f3d0:	ccmp	w1, #0x2, #0x0, hi  // hi = pmore
   1f3d4:	b.hi	20b04 <mpfr_vasnprintf_aux@@Base+0x2574>  // b.pmore
   1f3d8:	tbnz	w26, #31, 1f960 <mpfr_vasnprintf_aux@@Base+0x13d0>
   1f3dc:	add	x2, x23, #0xf
   1f3e0:	mov	x1, x23
   1f3e4:	and	x23, x2, #0xfffffffffffffff8
   1f3e8:	sub	x2, x7, x14
   1f3ec:	ldr	x11, [x1]
   1f3f0:	cbz	w0, 1f988 <mpfr_vasnprintf_aux@@Base+0x13f8>
   1f3f4:	str	xzr, [x29, #488]
   1f3f8:	add	x1, x2, #0x1
   1f3fc:	cmp	x1, #0x4, lsl #12
   1f400:	b.hi	20a24 <mpfr_vasnprintf_aux@@Base+0x2494>  // b.pmore
   1f404:	add	x0, x2, #0x10
   1f408:	and	x0, x0, #0xfffffffffffffff0
   1f40c:	sub	sp, sp, x0
   1f410:	add	x7, sp, #0x10
   1f414:	mov	x1, x14
   1f418:	mov	x0, x7
   1f41c:	str	w13, [x29, #104]
   1f420:	str	w6, [x29, #112]
   1f424:	stp	w3, w8, [x29, #120]
   1f428:	str	x11, [x29, #128]
   1f42c:	str	w12, [x29, #136]
   1f430:	str	w5, [x29, #144]
   1f434:	str	w4, [x29, #168]
   1f438:	str	x2, [x29, #200]
   1f43c:	bl	cad0 <strncpy@plt>
   1f440:	ldr	x2, [x29, #200]
   1f444:	mov	x7, x0
   1f448:	add	x10, x29, #0x1a0
   1f44c:	mov	x1, x0
   1f450:	add	x0, x29, #0x210
   1f454:	str	x10, [x29, #200]
   1f458:	strb	wzr, [x7, x2]
   1f45c:	add	x2, x29, #0x140
   1f460:	ldp	x14, x15, [x29, #416]
   1f464:	stp	x14, x15, [x29, #320]
   1f468:	ldp	x14, x15, [x29, #432]
   1f46c:	stp	x14, x15, [x29, #336]
   1f470:	bl	c050 <__gmp_vasprintf@plt>
   1f474:	sxtw	x2, w0
   1f478:	ldr	w13, [x29, #104]
   1f47c:	ldr	w6, [x29, #112]
   1f480:	ldp	w3, w8, [x29, #120]
   1f484:	ldr	w12, [x29, #136]
   1f488:	ldr	w5, [x29, #144]
   1f48c:	ldr	w4, [x29, #168]
   1f490:	ldr	x11, [x29, #128]
   1f494:	ldr	x10, [x29, #200]
   1f498:	tbnz	w2, #31, 1fd58 <mpfr_vasnprintf_aux@@Base+0x17c8>
   1f49c:	ldr	x0, [x29, #256]
   1f4a0:	str	x10, [x29, #104]
   1f4a4:	ldr	x1, [x29, #528]
   1f4a8:	str	w13, [x29, #112]
   1f4ac:	stp	w6, w3, [x29, #120]
   1f4b0:	str	w8, [x29, #128]
   1f4b4:	str	x11, [x29, #136]
   1f4b8:	str	w12, [x29, #144]
   1f4bc:	str	w5, [x29, #168]
   1f4c0:	str	w4, [x29, #200]
   1f4c4:	bl	1d920 <mpfr_asprintf@@Base+0x248>
   1f4c8:	ldr	x0, [x29, #528]
   1f4cc:	bl	c890 <mpfr_free_str@plt>
   1f4d0:	ldr	x0, [x29, #488]
   1f4d4:	ldr	w13, [x29, #112]
   1f4d8:	ldp	w6, w3, [x29, #120]
   1f4dc:	ldr	w8, [x29, #128]
   1f4e0:	ldr	w12, [x29, #144]
   1f4e4:	ldr	w5, [x29, #168]
   1f4e8:	ldr	w4, [x29, #200]
   1f4ec:	ldr	x10, [x29, #104]
   1f4f0:	ldr	x11, [x29, #136]
   1f4f4:	cbnz	x0, 209a8 <mpfr_vasnprintf_aux@@Base+0x2418>
   1f4f8:	ldrb	w2, [x29, #488]
   1f4fc:	mov	w0, #0xf                   	// #15
   1f500:	ldr	x1, [x29, #248]
   1f504:	stp	x23, x1, [x28]
   1f508:	bfxil	w2, w12, #0, #1
   1f50c:	ldr	x1, [x29, #232]
   1f510:	bfi	w2, w4, #1, #1
   1f514:	str	x1, [x28, #16]
   1f518:	mov	w7, #0x2                   	// #2
   1f51c:	bfi	w2, w8, #2, #1
   1f520:	ldr	w1, [x29, #244]
   1f524:	str	w26, [x28, #24]
   1f528:	bfi	w2, w5, #3, #1
   1f52c:	str	w1, [x28, #28]
   1f530:	ldr	x1, [x29, #216]
   1f534:	bfi	w2, w13, #4, #1
   1f538:	str	x1, [x29, #504]
   1f53c:	and	w8, w2, #0xff
   1f540:	str	w0, [x29, #512]
   1f544:	ldp	x0, x1, [x28]
   1f548:	stp	x0, x1, [x10]
   1f54c:	ldp	x4, x5, [x28, #16]
   1f550:	stp	x4, x5, [x10, #16]
   1f554:	str	w8, [x29, #168]
   1f558:	strb	w2, [x29, #488]
   1f55c:	str	w25, [x29, #492]
   1f560:	str	w22, [x29, #496]
   1f564:	str	w6, [x29, #516]
   1f568:	strb	w19, [x29, #520]
   1f56c:	strb	w3, [x29, #521]
   1f570:	tbnz	w2, #2, 1f57c <mpfr_vasnprintf_aux@@Base+0xfec>
   1f574:	cmp	w3, #0x30
   1f578:	cset	w7, eq  // eq = none
   1f57c:	add	x1, x29, #0x228
   1f580:	mov	x0, #0x10                  	// #16
   1f584:	str	w6, [x29, #144]
   1f588:	str	x11, [x29, #200]
   1f58c:	stp	xzr, xzr, [x1]
   1f590:	stp	xzr, xzr, [x1, #24]
   1f594:	str	w7, [x29, #528]
   1f598:	str	xzr, [x29, #536]
   1f59c:	strb	wzr, [x29, #544]
   1f5a0:	strb	wzr, [x29, #568]
   1f5a4:	str	wzr, [x29, #592]
   1f5a8:	strb	wzr, [x29, #596]
   1f5ac:	str	wzr, [x29, #600]
   1f5b0:	str	xzr, [x29, #608]
   1f5b4:	str	xzr, [x29, #616]
   1f5b8:	str	wzr, [x29, #624]
   1f5bc:	str	xzr, [x29, #632]
   1f5c0:	str	xzr, [x29, #640]
   1f5c4:	bl	ccf0 <mpfr_allocate_func@plt>
   1f5c8:	mov	w2, #0xffffffdb            	// #-37
   1f5cc:	and	w2, w19, w2
   1f5d0:	ldr	x11, [x29, #200]
   1f5d4:	cmp	w2, #0x41
   1f5d8:	sub	w2, w19, #0x45
   1f5dc:	mov	x1, x0
   1f5e0:	and	w2, w2, #0xff
   1f5e4:	cset	w0, eq  // eq = none
   1f5e8:	cmp	w27, #0x41
   1f5ec:	str	w0, [x29, #136]
   1f5f0:	cset	w3, eq  // eq = none
   1f5f4:	cmp	w2, #0x2
   1f5f8:	cset	w2, ls  // ls = plast
   1f5fc:	cmp	w19, #0x41
   1f600:	str	x1, [x29, #648]
   1f604:	csinc	w2, w2, wzr, ne  // ne = any
   1f608:	ldr	x0, [x11, #16]
   1f60c:	stp	xzr, xzr, [x1]
   1f610:	ldr	w6, [x29, #144]
   1f614:	str	w2, [x29, #200]
   1f618:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1f61c:	cmp	x0, x1
   1f620:	b.le	20418 <mpfr_vasnprintf_aux@@Base+0x1e88>
   1f624:	mov	x1, #0x4                   	// #4
   1f628:	movk	x1, #0x8000, lsl #48
   1f62c:	cmp	x0, x1
   1f630:	b.eq	20310 <mpfr_vasnprintf_aux@@Base+0x1d80>  // b.none
   1f634:	cmp	w19, #0x62
   1f638:	cset	w1, eq  // eq = none
   1f63c:	str	w1, [x29, #200]
   1f640:	cmp	w3, #0x0
   1f644:	ccmp	w1, #0x0, #0x0, eq  // eq = none
   1f648:	b.eq	1fb94 <mpfr_vasnprintf_aux@@Base+0x1604>  // b.none
   1f64c:	ldr	w0, [x11, #8]
   1f650:	tbnz	w0, #31, 1fdf4 <mpfr_vasnprintf_aux@@Base+0x1864>
   1f654:	ldr	w1, [x29, #168]
   1f658:	mov	w0, #0xa                   	// #10
   1f65c:	tst	w1, w0
   1f660:	b.eq	1f678 <mpfr_vasnprintf_aux@@Base+0x10e8>  // b.none
   1f664:	tst	x1, #0x8
   1f668:	mov	w0, #0x2b                  	// #43
   1f66c:	mov	w1, #0x20                  	// #32
   1f670:	csel	w0, w0, w1, ne  // ne = any
   1f674:	strb	w0, [x29, #544]
   1f678:	cmp	w27, #0x41
   1f67c:	b.eq	1fe04 <mpfr_vasnprintf_aux@@Base+0x1874>  // b.none
   1f680:	mov	x0, #0x1                   	// #1
   1f684:	str	x0, [x29, #584]
   1f688:	cbz	w22, 203ac <mpfr_vasnprintf_aux@@Base+0x1e1c>
   1f68c:	mov	w1, #0x2                   	// #2
   1f690:	ldr	x4, [x29, #216]
   1f694:	cmp	w22, #0x0
   1f698:	sxtw	x0, w22
   1f69c:	mov	x3, x11
   1f6a0:	csinc	x2, xzr, x0, lt  // lt = tstop
   1f6a4:	mov	w5, w6
   1f6a8:	add	x0, x29, #0x168
   1f6ac:	str	x11, [x29, #136]
   1f6b0:	str	w1, [x29, #144]
   1f6b4:	bl	1da00 <mpfr_asprintf@@Base+0x328>
   1f6b8:	ldr	w1, [x29, #144]
   1f6bc:	mov	x27, x0
   1f6c0:	ldr	x11, [x29, #136]
   1f6c4:	ldr	x2, [x29, #648]
   1f6c8:	mov	x3, x2
   1f6cc:	ldr	x2, [x2, #8]
   1f6d0:	cbnz	x2, 1f6c8 <mpfr_vasnprintf_aux@@Base+0x1138>
   1f6d4:	mov	x0, #0x10                  	// #16
   1f6d8:	str	x11, [x29, #128]
   1f6dc:	str	w1, [x29, #136]
   1f6e0:	str	x3, [x29, #144]
   1f6e4:	bl	ccf0 <mpfr_allocate_func@plt>
   1f6e8:	ldr	x11, [x29, #128]
   1f6ec:	mov	x2, x0
   1f6f0:	ldr	x3, [x29, #144]
   1f6f4:	ldrsw	x4, [x11, #8]
   1f6f8:	ldr	x0, [x29, #360]
   1f6fc:	str	x2, [x3, #8]
   1f700:	stp	x27, xzr, [x2]
   1f704:	add	x27, x27, x4, lsr #63
   1f708:	ldr	w1, [x29, #136]
   1f70c:	str	x27, [x29, #576]
   1f710:	cmp	w1, #0x10
   1f714:	b.eq	20390 <mpfr_vasnprintf_aux@@Base+0x1e00>  // b.none
   1f718:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   1f71c:	cmp	x0, x1
   1f720:	b.eq	20bdc <mpfr_vasnprintf_aux@@Base+0x264c>  // b.none
   1f724:	sub	x0, x0, #0x1
   1f728:	str	x0, [x29, #360]
   1f72c:	cmp	w19, #0x41
   1f730:	b.eq	20274 <mpfr_vasnprintf_aux@@Base+0x1ce4>  // b.none
   1f734:	add	x2, x27, #0x1
   1f738:	str	x2, [x29, #200]
   1f73c:	mov	x0, x2
   1f740:	bl	bab0 <strlen@plt>
   1f744:	ldr	x2, [x29, #200]
   1f748:	tbnz	w22, #31, 2021c <mpfr_vasnprintf_aux@@Base+0x1c8c>
   1f74c:	mov	x1, #0x7fffffff            	// #2147483647
   1f750:	cmp	x0, x1
   1f754:	b.hi	1f84c <mpfr_vasnprintf_aux@@Base+0x12bc>  // b.pmore
   1f758:	cbz	x0, 1ffb8 <mpfr_vasnprintf_aux@@Base+0x1a28>
   1f75c:	str	x2, [x29, #608]
   1f760:	cmp	w22, w0
   1f764:	str	x0, [x29, #616]
   1f768:	b.le	1f774 <mpfr_vasnprintf_aux@@Base+0x11e4>
   1f76c:	sub	w0, w22, w0
   1f770:	str	w0, [x29, #624]
   1f774:	bl	bea0 <localeconv@plt>
   1f778:	ldr	x0, [x0]
   1f77c:	ldrb	w0, [x0, #1]
   1f780:	cbz	w0, 20380 <mpfr_vasnprintf_aux@@Base+0x1df0>
   1f784:	mov	w0, #0x2e                  	// #46
   1f788:	strb	w0, [x29, #596]
   1f78c:	ldr	x0, [x29, #360]
   1f790:	mov	x1, #0x3                   	// #3
   1f794:	str	x1, [x29, #640]
   1f798:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
   1f79c:	cmp	x0, #0x0
   1f7a0:	movk	x4, #0xcccd
   1f7a4:	cneg	x0, x0, lt  // lt = tstop
   1f7a8:	mov	x1, #0x4                   	// #4
   1f7ac:	cmp	x0, #0x9
   1f7b0:	b.ls	207c8 <mpfr_vasnprintf_aux@@Base+0x2238>  // b.plast
   1f7b4:	nop
   1f7b8:	umulh	x3, x0, x4
   1f7bc:	cmp	x0, #0x63
   1f7c0:	mov	x2, x1
   1f7c4:	add	x1, x1, #0x1
   1f7c8:	lsr	x0, x3, #3
   1f7cc:	b.hi	1f7b8 <mpfr_vasnprintf_aux@@Base+0x1228>  // b.pmore
   1f7d0:	mov	x0, x1
   1f7d4:	str	x2, [x29, #640]
   1f7d8:	bl	ccf0 <mpfr_allocate_func@plt>
   1f7dc:	mov	x27, x0
   1f7e0:	ldr	x1, [x29, #648]
   1f7e4:	nop
   1f7e8:	mov	x22, x1
   1f7ec:	ldr	x1, [x1, #8]
   1f7f0:	cbnz	x1, 1f7e8 <mpfr_vasnprintf_aux@@Base+0x1258>
   1f7f4:	mov	x0, #0x10                  	// #16
   1f7f8:	bl	ccf0 <mpfr_allocate_func@plt>
   1f7fc:	cmp	w19, #0x41
   1f800:	mov	w5, #0x70                  	// #112
   1f804:	adrp	x3, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1f808:	add	x3, x3, #0x178
   1f80c:	mov	w4, #0x50                  	// #80
   1f810:	csel	w4, w4, w5, eq  // eq = none
   1f814:	add	x5, x29, #0x200
   1f818:	str	x0, [x22, #8]
   1f81c:	add	x1, x29, #0x170
   1f820:	ldr	x2, [x29, #360]
   1f824:	stp	x27, xzr, [x0]
   1f828:	mov	x0, x27
   1f82c:	strb	w4, [x29, #368]
   1f830:	ldr	w4, [x3]
   1f834:	ldur	w3, [x3, #3]
   1f838:	stur	w4, [x5, #-143]
   1f83c:	str	w3, [x1, #4]
   1f840:	str	x27, [x29, #632]
   1f844:	bl	bd10 <sprintf@plt>
   1f848:	tbz	w0, #31, 1fbe4 <mpfr_vasnprintf_aux@@Base+0x1654>
   1f84c:	ldr	x0, [x29, #648]
   1f850:	bl	1d828 <mpfr_asprintf@@Base+0x150>
   1f854:	mov	x0, #0xffffffffffffffff    	// #-1
   1f858:	str	x0, [x29, #408]
   1f85c:	b	1fd40 <mpfr_vasnprintf_aux@@Base+0x17b0>
   1f860:	ldrb	w19, [x1, #1]
   1f864:	add	x21, x1, #0x1
   1f868:	mov	w27, #0x8                   	// #8
   1f86c:	b	1e990 <mpfr_vasnprintf_aux@@Base+0x400>
   1f870:	ldrb	w19, [x1, #1]
   1f874:	cmp	w19, #0x6c
   1f878:	b.eq	1faac <mpfr_vasnprintf_aux@@Base+0x151c>  // b.none
   1f87c:	add	x21, x1, #0x1
   1f880:	mov	w27, #0x3                   	// #3
   1f884:	b	1e990 <mpfr_vasnprintf_aux@@Base+0x400>
   1f888:	ldrb	w19, [x1, #1]
   1f88c:	add	x21, x1, #0x1
   1f890:	mov	w27, #0xe                   	// #14
   1f894:	b	1e990 <mpfr_vasnprintf_aux@@Base+0x400>
   1f898:	ldrb	w19, [x1, #1]
   1f89c:	add	x21, x1, #0x1
   1f8a0:	mov	w27, #0xc                   	// #12
   1f8a4:	b	1e990 <mpfr_vasnprintf_aux@@Base+0x400>
   1f8a8:	ldrb	w19, [x1, #1]
   1f8ac:	cmp	w19, #0x68
   1f8b0:	b.eq	1fa9c <mpfr_vasnprintf_aux@@Base+0x150c>  // b.none
   1f8b4:	add	x21, x1, #0x1
   1f8b8:	mov	w27, #0x2                   	// #2
   1f8bc:	b	1e990 <mpfr_vasnprintf_aux@@Base+0x400>
   1f8c0:	ldrb	w19, [x1, #1]
   1f8c4:	add	x21, x1, #0x1
   1f8c8:	mov	w27, #0x7                   	// #7
   1f8cc:	b	1e990 <mpfr_vasnprintf_aux@@Base+0x400>
   1f8d0:	mov	w27, #0xf                   	// #15
   1f8d4:	b	1f0e4 <mpfr_vasnprintf_aux@@Base+0xb54>
   1f8d8:	mov	w27, #0xf                   	// #15
   1f8dc:	b	1ef14 <mpfr_vasnprintf_aux@@Base+0x984>
   1f8e0:	cmp	x14, x7
   1f8e4:	b.eq	1f9e8 <mpfr_vasnprintf_aux@@Base+0x1458>  // b.none
   1f8e8:	ldr	x0, [x29, #256]
   1f8ec:	add	x10, x29, #0x1a0
   1f8f0:	mov	x1, x14
   1f8f4:	str	w13, [x29, #112]
   1f8f8:	stp	w3, w8, [x29, #120]
   1f8fc:	add	x27, x29, #0x210
   1f900:	str	w12, [x29, #128]
   1f904:	str	w5, [x29, #136]
   1f908:	str	w4, [x29, #144]
   1f90c:	str	x10, [x29, #168]
   1f910:	bl	1d920 <mpfr_asprintf@@Base+0x248>
   1f914:	ldr	w13, [x29, #112]
   1f918:	ldp	w3, w8, [x29, #120]
   1f91c:	ldr	w12, [x29, #128]
   1f920:	ldr	w5, [x29, #136]
   1f924:	ldr	w4, [x29, #144]
   1f928:	ldr	x10, [x29, #168]
   1f92c:	b	1f288 <mpfr_vasnprintf_aux@@Base+0xcf8>
   1f930:	add	w6, w26, #0x8
   1f934:	cmp	w6, #0x0
   1f938:	b.le	1fdd4 <mpfr_vasnprintf_aux@@Base+0x1844>
   1f93c:	add	x10, x23, #0xb
   1f940:	mov	x2, x23
   1f944:	mov	w26, w6
   1f948:	and	x23, x10, #0xfffffffffffffff8
   1f94c:	b	1ead0 <mpfr_vasnprintf_aux@@Base+0x540>
   1f950:	ldr	x1, [x29, #248]
   1f954:	add	x1, x1, w26, sxtw
   1f958:	mov	w26, w2
   1f95c:	b	1eb98 <mpfr_vasnprintf_aux@@Base+0x608>
   1f960:	add	w2, w26, #0x8
   1f964:	cmp	w2, #0x0
   1f968:	b.le	1fde4 <mpfr_vasnprintf_aux@@Base+0x1854>
   1f96c:	mov	x1, x23
   1f970:	add	x10, x23, #0xf
   1f974:	mov	w26, w2
   1f978:	and	x23, x10, #0xfffffffffffffff8
   1f97c:	sub	x2, x7, x14
   1f980:	ldr	x11, [x1]
   1f984:	cbnz	w0, 1f3f4 <mpfr_vasnprintf_aux@@Base+0xe64>
   1f988:	add	x10, x29, #0x1a0
   1f98c:	cmp	x14, x7
   1f990:	b.eq	1f4f8 <mpfr_vasnprintf_aux@@Base+0xf68>  // b.none
   1f994:	ldr	x0, [x29, #256]
   1f998:	add	x10, x29, #0x1a0
   1f99c:	mov	x1, x14
   1f9a0:	str	w13, [x29, #104]
   1f9a4:	str	w6, [x29, #112]
   1f9a8:	stp	w3, w8, [x29, #120]
   1f9ac:	str	x11, [x29, #128]
   1f9b0:	str	w12, [x29, #136]
   1f9b4:	str	w5, [x29, #144]
   1f9b8:	str	w4, [x29, #168]
   1f9bc:	str	x10, [x29, #200]
   1f9c0:	bl	1d920 <mpfr_asprintf@@Base+0x248>
   1f9c4:	ldr	w13, [x29, #104]
   1f9c8:	ldr	w6, [x29, #112]
   1f9cc:	ldp	w3, w8, [x29, #120]
   1f9d0:	ldr	w12, [x29, #136]
   1f9d4:	ldr	w5, [x29, #144]
   1f9d8:	ldr	w4, [x29, #168]
   1f9dc:	ldr	x11, [x29, #128]
   1f9e0:	ldr	x10, [x29, #200]
   1f9e4:	b	1f4f8 <mpfr_vasnprintf_aux@@Base+0xf68>
   1f9e8:	add	x10, x29, #0x1a0
   1f9ec:	add	x27, x29, #0x210
   1f9f0:	b	1f288 <mpfr_vasnprintf_aux@@Base+0xcf8>
   1f9f4:	mov	x1, x14
   1f9f8:	mov	x2, x19
   1f9fc:	add	x0, x29, #0x180
   1fa00:	bl	1d920 <mpfr_asprintf@@Base+0x248>
   1fa04:	ldr	x1, [x29, #408]
   1fa08:	mov	x0, #0x7fffffff            	// #2147483647
   1fa0c:	cmp	x1, x0
   1fa10:	ccmn	x1, #0x1, #0x4, le
   1fa14:	b.ne	1e788 <mpfr_vasnprintf_aux@@Base+0x1f8>  // b.any
   1fa18:	bl	cc00 <__errno_location@plt>
   1fa1c:	ldr	w1, [x29, #240]
   1fa20:	orr	w1, w1, #0x10
   1fa24:	str	w1, [x29, #240]
   1fa28:	mov	w1, #0x4b                  	// #75
   1fa2c:	str	w1, [x0]
   1fa30:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1fa34:	ldr	x1, [x0, #2576]
   1fa38:	add	x0, x0, #0xa10
   1fa3c:	blr	x1
   1fa40:	ldr	w2, [x29, #240]
   1fa44:	ldr	x1, [x29, #176]
   1fa48:	str	w2, [x1, x0]
   1fa4c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1fa50:	ldr	x2, [x0, #2512]
   1fa54:	add	x0, x0, #0x9d0
   1fa58:	blr	x2
   1fa5c:	ldr	x2, [x29, #192]
   1fa60:	str	x2, [x1, x0]
   1fa64:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   1fa68:	ldr	x2, [x0, #2544]
   1fa6c:	add	x0, x0, #0x9f0
   1fa70:	blr	x2
   1fa74:	ldr	x2, [x29, #184]
   1fa78:	str	x2, [x1, x0]
   1fa7c:	ldr	x0, [x29, #224]
   1fa80:	cbz	x0, 1fb60 <mpfr_vasnprintf_aux@@Base+0x15d0>
   1fa84:	str	xzr, [x0]
   1fa88:	ldr	x0, [x29, #384]
   1fa8c:	mov	w20, #0xffffffff            	// #-1
   1fa90:	ldr	x1, [x29, #400]
   1fa94:	bl	cc20 <mpfr_free_func@plt>
   1fa98:	b	1e7f8 <mpfr_vasnprintf_aux@@Base+0x268>
   1fa9c:	ldrb	w19, [x1, #2]
   1faa0:	add	x21, x1, #0x2
   1faa4:	mov	w27, #0x1                   	// #1
   1faa8:	b	1e990 <mpfr_vasnprintf_aux@@Base+0x400>
   1faac:	ldrb	w19, [x1, #2]
   1fab0:	add	x21, x1, #0x2
   1fab4:	mov	w27, #0x4                   	// #4
   1fab8:	b	1e990 <mpfr_vasnprintf_aux@@Base+0x400>
   1fabc:	sub	w1, w27, #0xa
   1fac0:	cmp	w1, #0x4
   1fac4:	b.ls	1ed80 <mpfr_vasnprintf_aux@@Base+0x7f0>  // b.plast
   1fac8:	ldrb	w19, [x21]
   1facc:	b	1ee08 <mpfr_vasnprintf_aux@@Base+0x878>
   1fad0:	mov	w3, #0x20                  	// #32
   1fad4:	mov	w13, #0x0                   	// #0
   1fad8:	mov	w5, #0x0                   	// #0
   1fadc:	mov	w8, #0x0                   	// #0
   1fae0:	mov	w4, #0x0                   	// #0
   1fae4:	mov	w12, #0x0                   	// #0
   1fae8:	mov	w19, #0x0                   	// #0
   1faec:	mov	w25, #0x0                   	// #0
   1faf0:	b	1e954 <mpfr_vasnprintf_aux@@Base+0x3c4>
   1faf4:	mov	x1, x15
   1faf8:	mov	w22, #0xffffffff            	// #-1
   1fafc:	b	1e958 <mpfr_vasnprintf_aux@@Base+0x3c8>
   1fb00:	add	w2, w26, #0x8
   1fb04:	cmp	w2, #0x0
   1fb08:	b.le	20078 <mpfr_vasnprintf_aux@@Base+0x1ae8>
   1fb0c:	add	x6, x23, #0xf
   1fb10:	mov	x1, x23
   1fb14:	mov	w26, w2
   1fb18:	and	x23, x6, #0xfffffffffffffff8
   1fb1c:	b	1f198 <mpfr_vasnprintf_aux@@Base+0xc08>
   1fb20:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1fb24:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1fb28:	add	x2, x2, #0xf0
   1fb2c:	add	x0, x0, #0x20
   1fb30:	mov	w1, #0x815                 	// #2069
   1fb34:	bl	cb40 <mpfr_assert_fail@plt>
   1fb38:	mov	x0, #0x1000                	// #4096
   1fb3c:	str	x3, [x29, #264]
   1fb40:	bl	ccf0 <mpfr_allocate_func@plt>
   1fb44:	str	x0, [x29, #384]
   1fb48:	strb	wzr, [x0]
   1fb4c:	mov	x2, #0x1000                	// #4096
   1fb50:	ldr	x7, [x29, #264]
   1fb54:	ldr	x0, [x29, #384]
   1fb58:	str	x0, [x29, #392]
   1fb5c:	b	1e660 <mpfr_vasnprintf_aux@@Base+0xd0>
   1fb60:	ldr	x0, [x29, #160]
   1fb64:	mov	w20, #0xffffffff            	// #-1
   1fb68:	cbz	x0, 1e7f8 <mpfr_vasnprintf_aux@@Base+0x268>
   1fb6c:	b	1fa88 <mpfr_vasnprintf_aux@@Base+0x14f8>
   1fb70:	add	x21, x1, #0x2
   1fb74:	mov	w6, #0x4                   	// #4
   1fb78:	b	1eb18 <mpfr_vasnprintf_aux@@Base+0x588>
   1fb7c:	add	x21, x1, #0x2
   1fb80:	mov	w6, #0x2                   	// #2
   1fb84:	b	1eb18 <mpfr_vasnprintf_aux@@Base+0x588>
   1fb88:	add	x21, x1, #0x2
   1fb8c:	mov	w6, #0x3                   	// #3
   1fb90:	b	1eb18 <mpfr_vasnprintf_aux@@Base+0x588>
   1fb94:	cmp	w27, #0x46
   1fb98:	b.ne	1ffcc <mpfr_vasnprintf_aux@@Base+0x1a3c>  // b.any
   1fb9c:	mov	w0, #0x6                   	// #6
   1fba0:	cmp	w22, #0x0
   1fba4:	csel	w22, w22, w0, ge  // ge = tcont
   1fba8:	add	x0, x29, #0x2b0
   1fbac:	mov	x1, x11
   1fbb0:	ldp	x4, x5, [x0, #-184]
   1fbb4:	str	w22, [x29, #496]
   1fbb8:	ldp	x2, x3, [x0, #-200]
   1fbbc:	stp	x2, x3, [x29, #272]
   1fbc0:	ldr	x0, [x29, #520]
   1fbc4:	mov	x3, #0x0                   	// #0
   1fbc8:	add	x2, x29, #0x110
   1fbcc:	stp	x4, x5, [x29, #288]
   1fbd0:	str	x0, [x29, #304]
   1fbd4:	add	x0, x29, #0x210
   1fbd8:	bl	1de18 <mpfr_asprintf@@Base+0x740>
   1fbdc:	cmn	w0, #0x1
   1fbe0:	b.eq	1f84c <mpfr_vasnprintf_aux@@Base+0x12bc>  // b.none
   1fbe4:	ldrb	w1, [x29, #544]
   1fbe8:	ldr	x0, [x29, #560]
   1fbec:	cmp	w1, #0x0
   1fbf0:	cset	w2, ne  // ne = any
   1fbf4:	tbnz	x0, #63, 1f84c <mpfr_vasnprintf_aux@@Base+0x12bc>
   1fbf8:	ldr	x4, [x29, #584]
   1fbfc:	tbnz	x4, #63, 1f84c <mpfr_vasnprintf_aux@@Base+0x12bc>
   1fc00:	ldrb	w5, [x29, #568]
   1fc04:	add	w0, w4, w0
   1fc08:	ldr	w3, [x29, #592]
   1fc0c:	add	w2, w3, w2
   1fc10:	add	w2, w0, w2
   1fc14:	cbz	w5, 1fc34 <mpfr_vasnprintf_aux@@Base+0x16a4>
   1fc18:	sub	x0, x4, #0x1
   1fc1c:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1fc20:	add	x0, x0, w3, sxtw
   1fc24:	movk	x4, #0xaaab
   1fc28:	umulh	x0, x0, x4
   1fc2c:	lsr	x0, x0, #1
   1fc30:	add	w2, w2, w0
   1fc34:	ldrb	w0, [x29, #596]
   1fc38:	ldr	x3, [x29, #616]
   1fc3c:	cmp	w0, #0x0
   1fc40:	cinc	w2, w2, ne  // ne = any
   1fc44:	ldr	w0, [x29, #600]
   1fc48:	tbnz	x3, #63, 1f84c <mpfr_vasnprintf_aux@@Base+0x12bc>
   1fc4c:	ldr	x4, [x29, #640]
   1fc50:	add	w3, w0, w3
   1fc54:	ldr	w0, [x29, #624]
   1fc58:	tbnz	x4, #63, 1f84c <mpfr_vasnprintf_aux@@Base+0x12bc>
   1fc5c:	add	w0, w0, w4
   1fc60:	add	w0, w0, w3
   1fc64:	add	w0, w0, w2
   1fc68:	cmp	w0, w25
   1fc6c:	b.cs	1fc7c <mpfr_vasnprintf_aux@@Base+0x16ec>  // b.hs, b.nlast
   1fc70:	sub	w2, w25, w0
   1fc74:	mov	w0, w25
   1fc78:	str	x2, [x29, #536]
   1fc7c:	ldr	x3, [x29, #216]
   1fc80:	ldr	x2, [x29, #408]
   1fc84:	cbz	x3, 2005c <mpfr_vasnprintf_aux@@Base+0x1acc>
   1fc88:	ldr	w0, [x29, #528]
   1fc8c:	cbnz	w0, 1fc98 <mpfr_vasnprintf_aux@@Base+0x1708>
   1fc90:	ldr	x2, [x29, #536]
   1fc94:	cbnz	x2, 1fff0 <mpfr_vasnprintf_aux@@Base+0x1a60>
   1fc98:	cbnz	w1, 20004 <mpfr_vasnprintf_aux@@Base+0x1a74>
   1fc9c:	ldr	x1, [x29, #552]
   1fca0:	cbz	x1, 1fcb0 <mpfr_vasnprintf_aux@@Base+0x1720>
   1fca4:	ldr	x0, [x29, #256]
   1fca8:	ldr	x2, [x29, #560]
   1fcac:	bl	1d920 <mpfr_asprintf@@Base+0x248>
   1fcb0:	ldr	w0, [x29, #528]
   1fcb4:	cmp	w0, #0x1
   1fcb8:	b.eq	20088 <mpfr_vasnprintf_aux@@Base+0x1af8>  // b.none
   1fcbc:	ldr	x27, [x29, #576]
   1fcc0:	cbz	x27, 209e8 <mpfr_vasnprintf_aux@@Base+0x2458>
   1fcc4:	ldrb	w0, [x29, #568]
   1fcc8:	str	w0, [x29, #200]
   1fccc:	ldr	x22, [x29, #584]
   1fcd0:	cbnz	w0, 20848 <mpfr_vasnprintf_aux@@Base+0x22b8>
   1fcd4:	ldr	x0, [x29, #256]
   1fcd8:	mov	x2, x22
   1fcdc:	mov	x1, x27
   1fce0:	bl	1d920 <mpfr_asprintf@@Base+0x248>
   1fce4:	ldr	w2, [x29, #592]
   1fce8:	cbnz	w2, 200c8 <mpfr_vasnprintf_aux@@Base+0x1b38>
   1fcec:	ldrb	w1, [x29, #596]
   1fcf0:	cbnz	w1, 200a0 <mpfr_vasnprintf_aux@@Base+0x1b10>
   1fcf4:	ldr	w2, [x29, #600]
   1fcf8:	cbnz	w2, 200b4 <mpfr_vasnprintf_aux@@Base+0x1b24>
   1fcfc:	ldr	x1, [x29, #608]
   1fd00:	cbz	x1, 1fd10 <mpfr_vasnprintf_aux@@Base+0x1780>
   1fd04:	ldr	x0, [x29, #256]
   1fd08:	ldr	x2, [x29, #616]
   1fd0c:	bl	1d920 <mpfr_asprintf@@Base+0x248>
   1fd10:	ldr	w2, [x29, #624]
   1fd14:	cbnz	w2, 200f4 <mpfr_vasnprintf_aux@@Base+0x1b64>
   1fd18:	ldr	x1, [x29, #632]
   1fd1c:	cbz	x1, 1fd2c <mpfr_vasnprintf_aux@@Base+0x179c>
   1fd20:	ldr	x0, [x29, #256]
   1fd24:	ldr	x2, [x29, #640]
   1fd28:	bl	1d920 <mpfr_asprintf@@Base+0x248>
   1fd2c:	ldr	w0, [x29, #528]
   1fd30:	cmp	w0, #0x2
   1fd34:	b.eq	200dc <mpfr_vasnprintf_aux@@Base+0x1b4c>  // b.none
   1fd38:	ldr	x0, [x29, #648]
   1fd3c:	bl	1d828 <mpfr_asprintf@@Base+0x150>
   1fd40:	ldrb	w19, [x21, #1]
   1fd44:	mov	w0, #0x0                   	// #0
   1fd48:	ldr	x14, [x29, #264]
   1fd4c:	mov	x7, x14
   1fd50:	cbnz	w19, 1e6c0 <mpfr_vasnprintf_aux@@Base+0x130>
   1fd54:	b	1e6ec <mpfr_vasnprintf_aux@@Base+0x15c>
   1fd58:	ldr	x0, [x29, #488]
   1fd5c:	cbnz	x0, 20ad8 <mpfr_vasnprintf_aux@@Base+0x2548>
   1fd60:	ldr	x0, [x29, #408]
   1fd64:	cmn	x0, #0x1
   1fd68:	b.ne	1fa30 <mpfr_vasnprintf_aux@@Base+0x14a0>  // b.any
   1fd6c:	b	1fa18 <mpfr_vasnprintf_aux@@Base+0x1488>
   1fd70:	ldr	x0, [x29, #160]
   1fd74:	cbz	x0, 1e7ac <mpfr_vasnprintf_aux@@Base+0x21c>
   1fd78:	ldr	x0, [x29, #208]
   1fd7c:	sxtw	x19, w1
   1fd80:	cmp	x0, w1, sxtw
   1fd84:	ldr	x1, [x29, #384]
   1fd88:	b.ls	20668 <mpfr_vasnprintf_aux@@Base+0x20d8>  // b.plast
   1fd8c:	ldr	x21, [x29, #152]
   1fd90:	mov	x2, x19
   1fd94:	mov	x0, x21
   1fd98:	bl	cad0 <strncpy@plt>
   1fd9c:	strb	wzr, [x21, x19]
   1fda0:	ldr	x0, [x29, #384]
   1fda4:	ldr	x1, [x29, #400]
   1fda8:	bl	cc20 <mpfr_free_func@plt>
   1fdac:	b	1e7ac <mpfr_vasnprintf_aux@@Base+0x21c>
   1fdb0:	add	w2, w26, #0x8
   1fdb4:	cmp	w2, #0x0
   1fdb8:	b.le	203f4 <mpfr_vasnprintf_aux@@Base+0x1e64>
   1fdbc:	mov	x1, x23
   1fdc0:	add	x6, x23, #0xb
   1fdc4:	and	x23, x6, #0xfffffffffffffff8
   1fdc8:	mov	w26, w2
   1fdcc:	ldr	w6, [x1]
   1fdd0:	b	1eb18 <mpfr_vasnprintf_aux@@Base+0x588>
   1fdd4:	ldr	x2, [x29, #248]
   1fdd8:	add	x2, x2, w26, sxtw
   1fddc:	mov	w26, w6
   1fde0:	b	1ead0 <mpfr_vasnprintf_aux@@Base+0x540>
   1fde4:	ldr	x1, [x29, #248]
   1fde8:	add	x1, x1, w26, sxtw
   1fdec:	mov	w26, w2
   1fdf0:	b	1f3e8 <mpfr_vasnprintf_aux@@Base+0xe58>
   1fdf4:	mov	w0, #0x2d                  	// #45
   1fdf8:	strb	w0, [x29, #544]
   1fdfc:	cmp	w27, #0x41
   1fe00:	b.ne	1f680 <mpfr_vasnprintf_aux@@Base+0x10f0>  // b.any
   1fe04:	mov	x1, #0x2                   	// #2
   1fe08:	mov	x0, #0x3                   	// #3
   1fe0c:	str	w6, [x29, #136]
   1fe10:	str	x11, [x29, #144]
   1fe14:	str	x1, [x29, #560]
   1fe18:	bl	ccf0 <mpfr_allocate_func@plt>
   1fe1c:	mov	x27, x0
   1fe20:	cmp	w19, #0x41
   1fe24:	mov	w1, #0x30                  	// #48
   1fe28:	mov	w0, #0x58                  	// #88
   1fe2c:	mov	w2, #0x78                  	// #120
   1fe30:	csel	w0, w0, w2, eq  // eq = none
   1fe34:	strb	w1, [x27]
   1fe38:	strb	w0, [x27, #1]
   1fe3c:	strb	wzr, [x27, #2]
   1fe40:	ldr	w6, [x29, #136]
   1fe44:	ldr	x11, [x29, #144]
   1fe48:	ldr	x0, [x29, #648]
   1fe4c:	mov	x1, x0
   1fe50:	ldr	x0, [x0, #8]
   1fe54:	cbnz	x0, 1fe4c <mpfr_vasnprintf_aux@@Base+0x18bc>
   1fe58:	mov	x0, #0x10                  	// #16
   1fe5c:	str	x11, [x29, #128]
   1fe60:	str	w6, [x29, #136]
   1fe64:	str	x1, [x29, #144]
   1fe68:	bl	ccf0 <mpfr_allocate_func@plt>
   1fe6c:	ldr	x1, [x29, #144]
   1fe70:	cmp	w19, #0x62
   1fe74:	ldr	w6, [x29, #136]
   1fe78:	ldr	x11, [x29, #128]
   1fe7c:	str	x0, [x1, #8]
   1fe80:	stp	x27, xzr, [x0]
   1fe84:	mov	x1, #0x1                   	// #1
   1fe88:	str	x27, [x29, #552]
   1fe8c:	str	x1, [x29, #584]
   1fe90:	b.eq	1f688 <mpfr_vasnprintf_aux@@Base+0x10f8>  // b.none
   1fe94:	cbnz	w22, 20198 <mpfr_vasnprintf_aux@@Base+0x1c08>
   1fe98:	cmp	w6, #0x1
   1fe9c:	b.eq	20c64 <mpfr_vasnprintf_aux@@Base+0x26d4>  // b.none
   1fea0:	mov	w3, #0x10                  	// #16
   1fea4:	mov	x1, #0x4                   	// #4
   1fea8:	cmp	w6, #0x3
   1feac:	b.eq	20804 <mpfr_vasnprintf_aux@@Base+0x2274>  // b.none
   1feb0:	cmp	w6, #0x2
   1feb4:	b.eq	206e0 <mpfr_vasnprintf_aux@@Base+0x2150>  // b.none
   1feb8:	ldr	x0, [x11]
   1febc:	cmp	x0, x1
   1fec0:	b.le	1fef0 <mpfr_vasnprintf_aux@@Base+0x1960>
   1fec4:	sub	x0, x0, #0x1
   1fec8:	neg	w5, w1
   1fecc:	ldr	x4, [x11, #24]
   1fed0:	asr	x2, x0, #6
   1fed4:	mov	x0, #0x1                   	// #1
   1fed8:	lsl	x0, x0, x5
   1fedc:	sub	x0, x0, #0x1
   1fee0:	ldr	x4, [x4, x2, lsl #3]
   1fee4:	orr	x2, x4, x0
   1fee8:	cmn	x2, #0x1
   1feec:	b.eq	20674 <mpfr_vasnprintf_aux@@Base+0x20e4>  // b.none
   1fef0:	cmp	w3, #0x2
   1fef4:	b.eq	20760 <mpfr_vasnprintf_aux@@Base+0x21d0>  // b.none
   1fef8:	ldr	x0, [x11]
   1fefc:	cmp	w6, #0x4
   1ff00:	ldr	x1, [x11, #24]
   1ff04:	sub	x0, x0, #0x1
   1ff08:	asr	x0, x0, #6
   1ff0c:	ldr	x2, [x1, x0, lsl #3]
   1ff10:	lsr	x0, x2, #60
   1ff14:	mov	w1, w0
   1ff18:	b.eq	1ff34 <mpfr_vasnprintf_aux@@Base+0x19a4>  // b.none
   1ff1c:	cmp	w6, #0x2
   1ff20:	b.eq	207b8 <mpfr_vasnprintf_aux@@Base+0x2228>  // b.none
   1ff24:	cmp	w6, #0x3
   1ff28:	b.eq	20b2c <mpfr_vasnprintf_aux@@Base+0x259c>  // b.none
   1ff2c:	cbnz	w6, 1ff38 <mpfr_vasnprintf_aux@@Base+0x19a8>
   1ff30:	tbz	x2, #59, 1ff38 <mpfr_vasnprintf_aux@@Base+0x19a8>
   1ff34:	add	w1, w0, #0x1
   1ff38:	mov	x0, #0x2                   	// #2
   1ff3c:	str	w1, [x29, #136]
   1ff40:	str	x11, [x29, #144]
   1ff44:	bl	ccf0 <mpfr_allocate_func@plt>
   1ff48:	ldr	w1, [x29, #136]
   1ff4c:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   1ff50:	add	x2, x2, #0x1c8
   1ff54:	mov	x27, x0
   1ff58:	strb	wzr, [x0, #1]
   1ff5c:	ldr	x11, [x29, #144]
   1ff60:	ldrb	w0, [x2, w1, sxtw]
   1ff64:	strb	w0, [x27]
   1ff68:	ldr	x0, [x29, #648]
   1ff6c:	mov	x1, x0
   1ff70:	ldr	x0, [x0, #8]
   1ff74:	cbnz	x0, 1ff6c <mpfr_vasnprintf_aux@@Base+0x19dc>
   1ff78:	mov	x0, #0x10                  	// #16
   1ff7c:	stp	x11, x1, [x29, #136]
   1ff80:	bl	ccf0 <mpfr_allocate_func@plt>
   1ff84:	ldp	x11, x1, [x29, #136]
   1ff88:	str	x0, [x1, #8]
   1ff8c:	ldr	x1, [x11, #16]
   1ff90:	stp	x27, xzr, [x0]
   1ff94:	sub	x0, x1, #0x4
   1ff98:	str	x0, [x29, #360]
   1ff9c:	str	x27, [x29, #576]
   1ffa0:	cmp	w19, #0x41
   1ffa4:	b.eq	20304 <mpfr_vasnprintf_aux@@Base+0x1d74>  // b.none
   1ffa8:	ldr	w0, [x29, #200]
   1ffac:	cmp	w22, #0x0
   1ffb0:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   1ffb4:	b.ne	1f734 <mpfr_vasnprintf_aux@@Base+0x11a4>  // b.any
   1ffb8:	ldr	x0, [x29, #616]
   1ffbc:	cbnz	x0, 1f774 <mpfr_vasnprintf_aux@@Base+0x11e4>
   1ffc0:	ldr	x0, [x29, #168]
   1ffc4:	tbnz	w0, #0, 1f774 <mpfr_vasnprintf_aux@@Base+0x11e4>
   1ffc8:	b	1f78c <mpfr_vasnprintf_aux@@Base+0x11fc>
   1ffcc:	cmp	w27, #0x45
   1ffd0:	b.eq	20a08 <mpfr_vasnprintf_aux@@Base+0x2478>  // b.none
   1ffd4:	cmp	w22, #0x0
   1ffd8:	b.lt	2056c <mpfr_vasnprintf_aux@@Base+0x1fdc>  // b.tstop
   1ffdc:	sxtw	x19, w22
   1ffe0:	b.ne	20574 <mpfr_vasnprintf_aux@@Base+0x1fe4>  // b.any
   1ffe4:	mov	x19, #0x1                   	// #1
   1ffe8:	mov	w22, w19
   1ffec:	b	20574 <mpfr_vasnprintf_aux@@Base+0x1fe4>
   1fff0:	ldr	x0, [x29, #256]
   1fff4:	mov	w1, #0x20                  	// #32
   1fff8:	bl	1e498 <mpfr_asprintf@@Base+0xdc0>
   1fffc:	ldrb	w1, [x29, #544]
   20000:	cbz	w1, 1fc9c <mpfr_vasnprintf_aux@@Base+0x170c>
   20004:	ldr	x0, [x29, #256]
   20008:	mov	x2, #0x1                   	// #1
   2000c:	bl	1e498 <mpfr_asprintf@@Base+0xdc0>
   20010:	b	1fc9c <mpfr_vasnprintf_aux@@Base+0x170c>
   20014:	add	x0, x29, #0x1e8
   20018:	str	x14, [x29, #104]
   2001c:	str	w13, [x29, #112]
   20020:	stp	w3, w8, [x29, #120]
   20024:	str	x2, [x29, #128]
   20028:	str	w12, [x29, #136]
   2002c:	str	w5, [x29, #144]
   20030:	str	w4, [x29, #168]
   20034:	bl	bdc0 <mpfr_tmp_allocate@plt>
   20038:	ldr	w13, [x29, #112]
   2003c:	mov	x6, x0
   20040:	ldp	w3, w8, [x29, #120]
   20044:	ldr	w12, [x29, #136]
   20048:	ldr	w5, [x29, #144]
   2004c:	ldr	w4, [x29, #168]
   20050:	ldr	x14, [x29, #104]
   20054:	ldr	x2, [x29, #128]
   20058:	b	1f1c8 <mpfr_vasnprintf_aux@@Base+0xc38>
   2005c:	cmn	x2, #0x1
   20060:	b.eq	1fd38 <mpfr_vasnprintf_aux@@Base+0x17a8>  // b.none
   20064:	adds	x0, x0, x2
   20068:	ccmp	x0, #0x0, #0x1, cc  // cc = lo, ul, last
   2006c:	csinv	x0, x0, xzr, ge  // ge = tcont
   20070:	str	x0, [x29, #408]
   20074:	b	1fd38 <mpfr_vasnprintf_aux@@Base+0x17a8>
   20078:	ldr	x1, [x29, #248]
   2007c:	add	x1, x1, w26, sxtw
   20080:	mov	w26, w2
   20084:	b	1f198 <mpfr_vasnprintf_aux@@Base+0xc08>
   20088:	ldr	x2, [x29, #536]
   2008c:	cbz	x2, 1fcbc <mpfr_vasnprintf_aux@@Base+0x172c>
   20090:	ldr	x0, [x29, #256]
   20094:	mov	w1, #0x30                  	// #48
   20098:	bl	1e498 <mpfr_asprintf@@Base+0xdc0>
   2009c:	b	1fcbc <mpfr_vasnprintf_aux@@Base+0x172c>
   200a0:	ldr	x0, [x29, #256]
   200a4:	mov	x2, #0x1                   	// #1
   200a8:	bl	1e498 <mpfr_asprintf@@Base+0xdc0>
   200ac:	ldr	w2, [x29, #600]
   200b0:	cbz	w2, 1fcfc <mpfr_vasnprintf_aux@@Base+0x176c>
   200b4:	ldr	x0, [x29, #256]
   200b8:	sxtw	x2, w2
   200bc:	mov	w1, #0x30                  	// #48
   200c0:	bl	1e498 <mpfr_asprintf@@Base+0xdc0>
   200c4:	b	1fcfc <mpfr_vasnprintf_aux@@Base+0x176c>
   200c8:	ldr	x0, [x29, #256]
   200cc:	sxtw	x2, w2
   200d0:	mov	w1, #0x30                  	// #48
   200d4:	bl	1e498 <mpfr_asprintf@@Base+0xdc0>
   200d8:	b	1fcec <mpfr_vasnprintf_aux@@Base+0x175c>
   200dc:	ldr	x2, [x29, #536]
   200e0:	cbz	x2, 1fd38 <mpfr_vasnprintf_aux@@Base+0x17a8>
   200e4:	ldr	x0, [x29, #256]
   200e8:	mov	w1, #0x20                  	// #32
   200ec:	bl	1e498 <mpfr_asprintf@@Base+0xdc0>
   200f0:	b	1fd38 <mpfr_vasnprintf_aux@@Base+0x17a8>
   200f4:	ldr	x0, [x29, #256]
   200f8:	sxtw	x2, w2
   200fc:	mov	w1, #0x30                  	// #48
   20100:	bl	1e498 <mpfr_asprintf@@Base+0xdc0>
   20104:	b	1fd18 <mpfr_vasnprintf_aux@@Base+0x1788>
   20108:	ldr	x1, [x29, #408]
   2010c:	mov	x0, x19
   20110:	str	x10, [x29, #200]
   20114:	bl	bcb0 <__gmpz_set_ui@plt>
   20118:	ldr	x10, [x29, #200]
   2011c:	b	1ec70 <mpfr_vasnprintf_aux@@Base+0x6e0>
   20120:	ldr	x0, [x29, #408]
   20124:	strh	w0, [x19]
   20128:	b	1ec70 <mpfr_vasnprintf_aux@@Base+0x6e0>
   2012c:	tbnz	w26, #31, 20814 <mpfr_vasnprintf_aux@@Base+0x2284>
   20130:	add	x1, x23, #0xf
   20134:	mov	x0, x23
   20138:	and	x23, x1, #0xfffffffffffffff8
   2013c:	ldr	x0, [x0]
   20140:	cmp	x0, #0x0
   20144:	b.lt	20b48 <mpfr_vasnprintf_aux@@Base+0x25b8>  // b.tstop
   20148:	b.eq	1ec70 <mpfr_vasnprintf_aux@@Base+0x6e0>  // b.none
   2014c:	ldr	x1, [x29, #408]
   20150:	str	x1, [x19]
   20154:	cmp	x0, #0x1
   20158:	b.eq	1ec70 <mpfr_vasnprintf_aux@@Base+0x6e0>  // b.none
   2015c:	sub	x0, x0, #0x1
   20160:	add	x19, x19, #0x8
   20164:	mov	x1, #0x0                   	// #0
   20168:	str	xzr, [x19, x1, lsl #3]
   2016c:	add	x1, x1, #0x1
   20170:	cmp	x0, x1
   20174:	b.ne	20168 <mpfr_vasnprintf_aux@@Base+0x1bd8>  // b.any
   20178:	b	1ec70 <mpfr_vasnprintf_aux@@Base+0x6e0>
   2017c:	ldr	x1, [x29, #408]
   20180:	mov	x0, x19
   20184:	mov	x2, #0x1                   	// #1
   20188:	str	x10, [x29, #200]
   2018c:	bl	c560 <__gmpq_set_ui@plt>
   20190:	ldr	x10, [x29, #200]
   20194:	b	1ec70 <mpfr_vasnprintf_aux@@Base+0x6e0>
   20198:	mov	w1, #0x10                  	// #16
   2019c:	b	1f690 <mpfr_vasnprintf_aux@@Base+0x1100>
   201a0:	tbnz	w26, #31, 207e8 <mpfr_vasnprintf_aux@@Base+0x2258>
   201a4:	add	x23, x23, #0xf
   201a8:	and	x23, x23, #0xfffffffffffffff8
   201ac:	b	1edd0 <mpfr_vasnprintf_aux@@Base+0x840>
   201b0:	ldr	w0, [x29, #244]
   201b4:	tbnz	w0, #31, 207d0 <mpfr_vasnprintf_aux@@Base+0x2240>
   201b8:	ldrb	w19, [x21, #1]
   201bc:	add	x23, x23, #0xf
   201c0:	and	x23, x23, #0xfffffffffffffff0
   201c4:	mov	w0, #0x1                   	// #1
   201c8:	add	x23, x23, #0x10
   201cc:	ldr	x7, [x29, #264]
   201d0:	cbnz	w19, 1e6c0 <mpfr_vasnprintf_aux@@Base+0x130>
   201d4:	b	1e6ec <mpfr_vasnprintf_aux@@Base+0x15c>
   201d8:	cmp	w19, #0x75
   201dc:	mov	w0, #0x6f                  	// #111
   201e0:	ccmp	w19, w0, #0x4, ne  // ne = any
   201e4:	mov	w1, #0x69                  	// #105
   201e8:	cset	w0, eq  // eq = none
   201ec:	cmp	w19, #0x64
   201f0:	ccmp	w19, w1, #0x4, ne  // ne = any
   201f4:	and	w1, w19, #0xffffffdf
   201f8:	csinc	w0, w0, wzr, ne  // ne = any
   201fc:	cmp	w1, #0x58
   20200:	csinc	w0, w0, wzr, ne  // ne = any
   20204:	cbnz	w0, 1edcc <mpfr_vasnprintf_aux@@Base+0x83c>
   20208:	cmp	w19, #0x63
   2020c:	b.eq	1f134 <mpfr_vasnprintf_aux@@Base+0xba4>  // b.none
   20210:	cmp	w19, #0x73
   20214:	b.ne	1ea44 <mpfr_vasnprintf_aux@@Base+0x4b4>  // b.any
   20218:	b	1f134 <mpfr_vasnprintf_aux@@Base+0xba4>
   2021c:	ldrb	w1, [x27, x0]
   20220:	cmp	w1, #0x30
   20224:	b.ne	1f74c <mpfr_vasnprintf_aux@@Base+0x11bc>  // b.any
   20228:	cbz	x0, 1ffb8 <mpfr_vasnprintf_aux@@Base+0x1a28>
   2022c:	sub	x0, x0, #0x1
   20230:	ldrb	w1, [x27, x0]
   20234:	cmp	w1, #0x30
   20238:	b.eq	20228 <mpfr_vasnprintf_aux@@Base+0x1c98>  // b.none
   2023c:	b	1f74c <mpfr_vasnprintf_aux@@Base+0x11bc>
   20240:	str	w6, [x29, #200]
   20244:	bl	c410 <mpfr_tmp_free@plt>
   20248:	ldr	w6, [x29, #200]
   2024c:	ldr	x10, [x29, #168]
   20250:	b	1ec40 <mpfr_vasnprintf_aux@@Base+0x6b0>
   20254:	add	x0, x29, #0x1e8
   20258:	str	x14, [x29, #168]
   2025c:	str	w6, [x29, #200]
   20260:	bl	bdc0 <mpfr_tmp_allocate@plt>
   20264:	ldr	w6, [x29, #200]
   20268:	mov	x3, x0
   2026c:	ldr	x14, [x29, #168]
   20270:	b	1ebc4 <mpfr_vasnprintf_aux@@Base+0x634>
   20274:	ldrb	w0, [x27]
   20278:	cbz	w0, 1f734 <mpfr_vasnprintf_aux@@Base+0x11a4>
   2027c:	mov	x1, x27
   20280:	mov	w7, #0x44                  	// #68
   20284:	mov	w6, #0x45                  	// #69
   20288:	mov	w5, #0x46                  	// #70
   2028c:	mov	w4, #0x42                  	// #66
   20290:	mov	w3, #0x43                  	// #67
   20294:	mov	w2, #0x41                  	// #65
   20298:	b	202b8 <mpfr_vasnprintf_aux@@Base+0x1d28>
   2029c:	cmp	w0, #0x62
   202a0:	b.eq	202f4 <mpfr_vasnprintf_aux@@Base+0x1d64>  // b.none
   202a4:	cmp	w0, #0x63
   202a8:	b.ne	202dc <mpfr_vasnprintf_aux@@Base+0x1d4c>  // b.any
   202ac:	strb	w3, [x1]
   202b0:	ldrb	w0, [x1, #1]!
   202b4:	cbz	w0, 1ffa8 <mpfr_vasnprintf_aux@@Base+0x1a18>
   202b8:	cmp	w0, #0x64
   202bc:	b.eq	202ec <mpfr_vasnprintf_aux@@Base+0x1d5c>  // b.none
   202c0:	b.ls	2029c <mpfr_vasnprintf_aux@@Base+0x1d0c>  // b.plast
   202c4:	cmp	w0, #0x65
   202c8:	b.eq	202fc <mpfr_vasnprintf_aux@@Base+0x1d6c>  // b.none
   202cc:	cmp	w0, #0x66
   202d0:	b.ne	202b0 <mpfr_vasnprintf_aux@@Base+0x1d20>  // b.any
   202d4:	strb	w5, [x1]
   202d8:	b	202b0 <mpfr_vasnprintf_aux@@Base+0x1d20>
   202dc:	cmp	w0, #0x61
   202e0:	b.ne	202b0 <mpfr_vasnprintf_aux@@Base+0x1d20>  // b.any
   202e4:	strb	w2, [x1]
   202e8:	b	202b0 <mpfr_vasnprintf_aux@@Base+0x1d20>
   202ec:	strb	w7, [x1]
   202f0:	b	202b0 <mpfr_vasnprintf_aux@@Base+0x1d20>
   202f4:	strb	w4, [x1]
   202f8:	b	202b0 <mpfr_vasnprintf_aux@@Base+0x1d20>
   202fc:	strb	w6, [x1]
   20300:	b	202b0 <mpfr_vasnprintf_aux@@Base+0x1d20>
   20304:	ldrb	w0, [x27]
   20308:	cbnz	w0, 2027c <mpfr_vasnprintf_aux@@Base+0x1cec>
   2030c:	b	1ffa8 <mpfr_vasnprintf_aux@@Base+0x1a18>
   20310:	ldr	w0, [x29, #528]
   20314:	cmp	w0, #0x1
   20318:	b.eq	20700 <mpfr_vasnprintf_aux@@Base+0x2170>  // b.none
   2031c:	ldr	w0, [x11, #8]
   20320:	tbnz	w0, #31, 206f4 <mpfr_vasnprintf_aux@@Base+0x2164>
   20324:	mov	x1, #0x3                   	// #3
   20328:	mov	x0, #0x4                   	// #4
   2032c:	str	x1, [x29, #584]
   20330:	bl	ccf0 <mpfr_allocate_func@plt>
   20334:	mov	x19, x0
   20338:	ldr	w1, [x29, #200]
   2033c:	mov	w0, #0x6275                	// #25205
   20340:	movk	w0, #0x66, lsl #16
   20344:	cmp	w1, #0x0
   20348:	mov	w1, #0x4255                	// #16981
   2034c:	movk	w1, #0x46, lsl #16
   20350:	csel	w0, w0, w1, eq  // eq = none
   20354:	str	w0, [x19]
   20358:	ldr	x0, [x29, #648]
   2035c:	mov	x22, x0
   20360:	ldr	x0, [x0, #8]
   20364:	cbnz	x0, 2035c <mpfr_vasnprintf_aux@@Base+0x1dcc>
   20368:	mov	x0, #0x10                  	// #16
   2036c:	bl	ccf0 <mpfr_allocate_func@plt>
   20370:	str	x0, [x22, #8]
   20374:	stp	x19, xzr, [x0]
   20378:	str	x19, [x29, #576]
   2037c:	b	1fbe4 <mpfr_vasnprintf_aux@@Base+0x1654>
   20380:	bl	bea0 <localeconv@plt>
   20384:	ldr	x0, [x0]
   20388:	ldrb	w0, [x0]
   2038c:	b	1f788 <mpfr_vasnprintf_aux@@Base+0x11f8>
   20390:	mov	x1, #0xe000000000000001    	// #-2305843009213693951
   20394:	cmp	x0, x1
   20398:	b.le	20d80 <mpfr_vasnprintf_aux@@Base+0x27f0>
   2039c:	sub	x0, x0, #0x1
   203a0:	lsl	x0, x0, #2
   203a4:	str	x0, [x29, #360]
   203a8:	b	1f72c <mpfr_vasnprintf_aux@@Base+0x119c>
   203ac:	cmp	w6, #0x1
   203b0:	b.eq	20760 <mpfr_vasnprintf_aux@@Base+0x21d0>  // b.none
   203b4:	mov	w3, #0x2                   	// #2
   203b8:	mov	x1, #0x1                   	// #1
   203bc:	b	1fea8 <mpfr_vasnprintf_aux@@Base+0x1918>
   203c0:	stp	w13, w3, [x29, #120]
   203c4:	str	w8, [x29, #128]
   203c8:	str	w12, [x29, #136]
   203cc:	str	w5, [x29, #144]
   203d0:	str	w4, [x29, #168]
   203d4:	bl	c410 <mpfr_tmp_free@plt>
   203d8:	ldp	w13, w3, [x29, #120]
   203dc:	ldr	w8, [x29, #128]
   203e0:	ldr	w12, [x29, #136]
   203e4:	ldr	w5, [x29, #144]
   203e8:	ldr	w4, [x29, #168]
   203ec:	ldr	x10, [x29, #112]
   203f0:	b	1f288 <mpfr_vasnprintf_aux@@Base+0xcf8>
   203f4:	ldr	x1, [x29, #248]
   203f8:	add	x1, x1, w26, sxtw
   203fc:	mov	w26, w2
   20400:	ldr	w6, [x1]
   20404:	b	1eb18 <mpfr_vasnprintf_aux@@Base+0x588>
   20408:	add	w26, w26, #0x8
   2040c:	cmp	w26, #0x0
   20410:	b.gt	1f138 <mpfr_vasnprintf_aux@@Base+0xba8>
   20414:	b	1ea44 <mpfr_vasnprintf_aux@@Base+0x4b4>
   20418:	mov	x2, #0x2                   	// #2
   2041c:	movk	x2, #0x8000, lsl #48
   20420:	cmp	x0, x2
   20424:	b.eq	20708 <mpfr_vasnprintf_aux@@Base+0x2178>  // b.none
   20428:	cmp	x0, x1
   2042c:	b.eq	20b50 <mpfr_vasnprintf_aux@@Base+0x25c0>  // b.none
   20430:	ldr	w0, [x11, #8]
   20434:	tbnz	w0, #31, 20b20 <mpfr_vasnprintf_aux@@Base+0x2590>
   20438:	ldr	w1, [x29, #168]
   2043c:	mov	w0, #0xa                   	// #10
   20440:	tst	w1, w0
   20444:	b.eq	2045c <mpfr_vasnprintf_aux@@Base+0x1ecc>  // b.none
   20448:	tst	x1, #0x8
   2044c:	mov	w0, #0x2b                  	// #43
   20450:	mov	w1, #0x20                  	// #32
   20454:	csel	w0, w0, w1, ne  // ne = any
   20458:	strb	w0, [x29, #544]
   2045c:	cmp	w27, #0x41
   20460:	b.eq	20d10 <mpfr_vasnprintf_aux@@Base+0x2780>  // b.none
   20464:	mov	x1, #0x1                   	// #1
   20468:	mov	x0, #0x2                   	// #2
   2046c:	str	x1, [x29, #584]
   20470:	bl	ccf0 <mpfr_allocate_func@plt>
   20474:	mov	x1, x0
   20478:	mov	w2, #0x30                  	// #48
   2047c:	strh	w2, [x0]
   20480:	ldr	x0, [x29, #648]
   20484:	mov	x2, x0
   20488:	ldr	x0, [x0, #8]
   2048c:	cbnz	x0, 20484 <mpfr_vasnprintf_aux@@Base+0x1ef4>
   20490:	mov	x0, #0x10                  	// #16
   20494:	str	x1, [x29, #128]
   20498:	str	x2, [x29, #144]
   2049c:	bl	ccf0 <mpfr_allocate_func@plt>
   204a0:	ldr	x2, [x29, #144]
   204a4:	cmp	w22, #0x0
   204a8:	ldr	x1, [x29, #128]
   204ac:	str	x0, [x2, #8]
   204b0:	stp	x1, xzr, [x0]
   204b4:	str	x1, [x29, #576]
   204b8:	b.le	20bb8 <mpfr_vasnprintf_aux@@Base+0x2628>
   204bc:	cmp	w27, #0x47
   204c0:	b.ne	20cbc <mpfr_vasnprintf_aux@@Base+0x272c>  // b.any
   204c4:	ldr	x0, [x29, #168]
   204c8:	tbz	w0, #0, 20bfc <mpfr_vasnprintf_aux@@Base+0x266c>
   204cc:	bl	bea0 <localeconv@plt>
   204d0:	ldr	x0, [x0]
   204d4:	ldrb	w0, [x0, #1]
   204d8:	cbz	w0, 20da0 <mpfr_vasnprintf_aux@@Base+0x2810>
   204dc:	sub	w22, w22, #0x1
   204e0:	mov	w0, #0x2e                  	// #46
   204e4:	strb	w0, [x29, #596]
   204e8:	str	w22, [x29, #624]
   204ec:	ldr	w0, [x29, #136]
   204f0:	cmp	w19, #0x62
   204f4:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   204f8:	b.eq	1fbe4 <mpfr_vasnprintf_aux@@Base+0x1654>  // b.none
   204fc:	cmp	w27, #0x45
   20500:	b.ne	20c0c <mpfr_vasnprintf_aux@@Base+0x267c>  // b.any
   20504:	mov	x1, #0x4                   	// #4
   20508:	mov	x0, #0x5                   	// #5
   2050c:	str	x1, [x29, #640]
   20510:	bl	ccf0 <mpfr_allocate_func@plt>
   20514:	mov	x19, x0
   20518:	ldr	w1, [x29, #200]
   2051c:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   20520:	add	x2, x2, #0xe8
   20524:	cmp	w1, #0x0
   20528:	adrp	x1, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   2052c:	add	x1, x1, #0xe0
   20530:	csel	x1, x1, x2, ne  // ne = any
   20534:	ldrb	w0, [x1, #4]
   20538:	ldr	w2, [x1]
   2053c:	str	w2, [x19]
   20540:	strb	w0, [x19, #4]
   20544:	ldr	x0, [x29, #648]
   20548:	mov	x22, x0
   2054c:	ldr	x0, [x0, #8]
   20550:	cbnz	x0, 20548 <mpfr_vasnprintf_aux@@Base+0x1fb8>
   20554:	mov	x0, #0x10                  	// #16
   20558:	bl	ccf0 <mpfr_allocate_func@plt>
   2055c:	str	x0, [x22, #8]
   20560:	stp	x19, xzr, [x0]
   20564:	str	x19, [x29, #632]
   20568:	b	1fbe4 <mpfr_vasnprintf_aux@@Base+0x1654>
   2056c:	mov	x19, #0x6                   	// #6
   20570:	mov	w22, w19
   20574:	ldr	x3, [x11]
   20578:	cmp	x0, #0x0
   2057c:	sub	x3, x3, x0
   20580:	b.le	205a0 <mpfr_vasnprintf_aux@@Base+0x2010>
   20584:	add	x0, x0, #0x2
   20588:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   2058c:	movk	x1, #0xaaab
   20590:	cmp	x3, #0x0
   20594:	csel	x3, x3, xzr, ge  // ge = tcont
   20598:	umulh	x0, x0, x1
   2059c:	add	x3, x3, x0, lsr #1
   205a0:	cmp	x19, x3
   205a4:	add	x27, x29, #0x170
   205a8:	csel	x3, x19, x3, le
   205ac:	mov	x4, x11
   205b0:	mov	w5, w6
   205b4:	mov	x1, x27
   205b8:	mov	w2, #0xa                   	// #10
   205bc:	mov	x0, #0x0                   	// #0
   205c0:	str	x11, [x29, #200]
   205c4:	bl	c500 <mpfr_get_str@plt>
   205c8:	mov	x3, x0
   205cc:	str	x3, [x29, #376]
   205d0:	ldr	x11, [x29, #200]
   205d4:	ldr	x0, [x29, #648]
   205d8:	mov	x1, x0
   205dc:	ldr	x0, [x0, #8]
   205e0:	cbnz	x0, 205d8 <mpfr_vasnprintf_aux@@Base+0x2048>
   205e4:	mov	x0, #0x10                  	// #16
   205e8:	str	x11, [x29, #144]
   205ec:	str	x3, [x29, #168]
   205f0:	str	x1, [x29, #200]
   205f4:	bl	ccf0 <mpfr_allocate_func@plt>
   205f8:	ldr	x1, [x29, #200]
   205fc:	ldr	x2, [x29, #368]
   20600:	str	x0, [x1, #8]
   20604:	ldr	x3, [x29, #168]
   20608:	sub	x1, x2, #0x1
   2060c:	stp	x3, xzr, [x0]
   20610:	cmp	x1, x19
   20614:	ccmn	x1, #0x4, #0x1, lt  // lt = tstop
   20618:	ldr	x11, [x29, #144]
   2061c:	b.ge	20a8c <mpfr_vasnprintf_aux@@Base+0x24fc>  // b.tcont
   20620:	add	x1, x29, #0x2b0
   20624:	sub	w22, w22, #0x1
   20628:	str	w22, [x29, #496]
   2062c:	mov	x3, x27
   20630:	ldr	x0, [x29, #520]
   20634:	ldp	x4, x5, [x1, #-200]
   20638:	mov	x1, x11
   2063c:	stp	x4, x5, [x29, #272]
   20640:	add	x2, x29, #0x2b0
   20644:	ldp	x4, x5, [x2, #-184]
   20648:	add	x2, x29, #0x110
   2064c:	stp	x4, x5, [x29, #288]
   20650:	str	x0, [x29, #304]
   20654:	add	x0, x29, #0x210
   20658:	bl	1db38 <mpfr_asprintf@@Base+0x460>
   2065c:	cmn	w0, #0x1
   20660:	b.ne	1fbe4 <mpfr_vasnprintf_aux@@Base+0x1654>  // b.any
   20664:	b	1f84c <mpfr_vasnprintf_aux@@Base+0x12bc>
   20668:	ldr	x0, [x29, #208]
   2066c:	sub	x19, x0, #0x1
   20670:	b	1fd8c <mpfr_vasnprintf_aux@@Base+0x17fc>
   20674:	cmp	w6, #0x0
   20678:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   2067c:	lsr	x1, x2, x1
   20680:	csel	x0, x1, x0, eq  // eq = none
   20684:	tst	x4, x0
   20688:	b.eq	1fef0 <mpfr_vasnprintf_aux@@Base+0x1960>  // b.none
   2068c:	mov	x0, #0x2                   	// #2
   20690:	str	x11, [x29, #144]
   20694:	bl	ccf0 <mpfr_allocate_func@plt>
   20698:	mov	x27, x0
   2069c:	mov	w1, #0x31                  	// #49
   206a0:	strh	w1, [x0]
   206a4:	ldr	x11, [x29, #144]
   206a8:	ldr	x0, [x29, #648]
   206ac:	mov	x1, x0
   206b0:	ldr	x0, [x0, #8]
   206b4:	cbnz	x0, 206ac <mpfr_vasnprintf_aux@@Base+0x211c>
   206b8:	mov	x0, #0x10                  	// #16
   206bc:	stp	x11, x1, [x29, #136]
   206c0:	bl	ccf0 <mpfr_allocate_func@plt>
   206c4:	ldp	x11, x1, [x29, #136]
   206c8:	str	x0, [x1, #8]
   206cc:	ldr	x1, [x11, #16]
   206d0:	stp	x27, xzr, [x0]
   206d4:	str	x1, [x29, #360]
   206d8:	str	x27, [x29, #576]
   206dc:	b	1ffa0 <mpfr_vasnprintf_aux@@Base+0x1a10>
   206e0:	ldr	w0, [x11, #8]
   206e4:	tbz	w0, #31, 1feb8 <mpfr_vasnprintf_aux@@Base+0x1928>
   206e8:	b	1fef0 <mpfr_vasnprintf_aux@@Base+0x1960>
   206ec:	bl	c410 <mpfr_tmp_free@plt>
   206f0:	b	1e774 <mpfr_vasnprintf_aux@@Base+0x1e4>
   206f4:	mov	w0, #0x2d                  	// #45
   206f8:	strb	w0, [x29, #544]
   206fc:	b	20324 <mpfr_vasnprintf_aux@@Base+0x1d94>
   20700:	str	wzr, [x29, #528]
   20704:	b	2031c <mpfr_vasnprintf_aux@@Base+0x1d8c>
   20708:	ldr	w0, [x29, #528]
   2070c:	cmp	w0, #0x1
   20710:	b.ne	20718 <mpfr_vasnprintf_aux@@Base+0x2188>  // b.any
   20714:	str	wzr, [x29, #528]
   20718:	mov	x1, #0x3                   	// #3
   2071c:	mov	x0, #0x4                   	// #4
   20720:	str	x1, [x29, #584]
   20724:	bl	ccf0 <mpfr_allocate_func@plt>
   20728:	mov	x19, x0
   2072c:	ldr	w1, [x29, #200]
   20730:	mov	w0, #0x616e                	// #24942
   20734:	movk	w0, #0x6e, lsl #16
   20738:	cmp	w1, #0x0
   2073c:	mov	w1, #0x414e                	// #16718
   20740:	movk	w1, #0x4e, lsl #16
   20744:	csel	w0, w0, w1, eq  // eq = none
   20748:	str	w0, [x19]
   2074c:	ldr	x0, [x29, #648]
   20750:	mov	x22, x0
   20754:	ldr	x0, [x0, #8]
   20758:	cbnz	x0, 20750 <mpfr_vasnprintf_aux@@Base+0x21c0>
   2075c:	b	20368 <mpfr_vasnprintf_aux@@Base+0x1dd8>
   20760:	mov	x0, #0x2                   	// #2
   20764:	str	x11, [x29, #144]
   20768:	bl	ccf0 <mpfr_allocate_func@plt>
   2076c:	mov	x27, x0
   20770:	mov	w1, #0x31                  	// #49
   20774:	strh	w1, [x0]
   20778:	ldr	x11, [x29, #144]
   2077c:	ldr	x0, [x29, #648]
   20780:	mov	x1, x0
   20784:	ldr	x0, [x0, #8]
   20788:	cbnz	x0, 20780 <mpfr_vasnprintf_aux@@Base+0x21f0>
   2078c:	mov	x0, #0x10                  	// #16
   20790:	stp	x11, x1, [x29, #136]
   20794:	bl	ccf0 <mpfr_allocate_func@plt>
   20798:	ldp	x11, x1, [x29, #136]
   2079c:	str	x0, [x1, #8]
   207a0:	ldr	x1, [x11, #16]
   207a4:	stp	x27, xzr, [x0]
   207a8:	sub	x0, x1, #0x1
   207ac:	str	x0, [x29, #360]
   207b0:	str	x27, [x29, #576]
   207b4:	b	1ffa0 <mpfr_vasnprintf_aux@@Base+0x1a10>
   207b8:	ldr	w2, [x11, #8]
   207bc:	cmp	w2, #0x0
   207c0:	b.gt	1ff34 <mpfr_vasnprintf_aux@@Base+0x19a4>
   207c4:	b	1ff38 <mpfr_vasnprintf_aux@@Base+0x19a8>
   207c8:	mov	x0, x1
   207cc:	b	1f7d8 <mpfr_vasnprintf_aux@@Base+0x1248>
   207d0:	ldr	w0, [x29, #244]
   207d4:	add	w0, w0, #0x10
   207d8:	str	w0, [x29, #244]
   207dc:	cmp	w0, #0x0
   207e0:	b.gt	201b8 <mpfr_vasnprintf_aux@@Base+0x1c28>
   207e4:	b	1ea44 <mpfr_vasnprintf_aux@@Base+0x4b4>
   207e8:	add	w0, w26, #0x8
   207ec:	cmp	w0, #0x0
   207f0:	b.le	20834 <mpfr_vasnprintf_aux@@Base+0x22a4>
   207f4:	add	x23, x23, #0xf
   207f8:	mov	w26, w0
   207fc:	and	x23, x23, #0xfffffffffffffff8
   20800:	b	1edd0 <mpfr_vasnprintf_aux@@Base+0x840>
   20804:	ldr	w0, [x11, #8]
   20808:	cmp	w0, #0x0
   2080c:	b.le	1feb8 <mpfr_vasnprintf_aux@@Base+0x1928>
   20810:	b	1fef0 <mpfr_vasnprintf_aux@@Base+0x1960>
   20814:	add	w1, w26, #0x8
   20818:	cmp	w1, #0x0
   2081c:	b.le	20b38 <mpfr_vasnprintf_aux@@Base+0x25a8>
   20820:	add	x2, x23, #0xf
   20824:	mov	x0, x23
   20828:	mov	w26, w1
   2082c:	and	x23, x2, #0xfffffffffffffff8
   20830:	b	2013c <mpfr_vasnprintf_aux@@Base+0x1bac>
   20834:	b.eq	20d08 <mpfr_vasnprintf_aux@@Base+0x2778>  // b.none
   20838:	add	w26, w26, #0x10
   2083c:	cmp	w26, #0x0
   20840:	b.gt	1edd0 <mpfr_vasnprintf_aux@@Base+0x840>
   20844:	b	1ea44 <mpfr_vasnprintf_aux@@Base+0x4b4>
   20848:	ldrsw	x1, [x29, #592]
   2084c:	mvn	x0, x1
   20850:	cmp	x22, x0
   20854:	b.hi	20b14 <mpfr_vasnprintf_aux@@Base+0x2584>  // b.pmore
   20858:	add	x1, x1, x22
   2085c:	mov	x19, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   20860:	sub	x0, x1, #0x1
   20864:	movk	x19, #0xaaab
   20868:	str	x0, [x29, #168]
   2086c:	umulh	x19, x0, x19
   20870:	lsr	x2, x19, #1
   20874:	str	x2, [x29, #144]
   20878:	mvn	x0, x2
   2087c:	cmp	x1, x0
   20880:	b.hi	20b14 <mpfr_vasnprintf_aux@@Base+0x2584>  // b.pmore
   20884:	ldr	x0, [x29, #408]
   20888:	add	x19, x1, x2
   2088c:	cmn	x0, #0x1
   20890:	b.eq	20b14 <mpfr_vasnprintf_aux@@Base+0x2584>  // b.none
   20894:	adds	x0, x19, x0
   20898:	ccmp	x0, #0x0, #0x1, cc  // cc = lo, ul, last
   2089c:	b.lt	20b14 <mpfr_vasnprintf_aux@@Base+0x2584>  // b.tstop
   208a0:	ldr	x1, [x29, #400]
   208a4:	str	x0, [x29, #408]
   208a8:	cbz	x1, 1fcec <mpfr_vasnprintf_aux@@Base+0x175c>
   208ac:	mvn	x0, x19
   208b0:	cmp	x1, x0
   208b4:	b.cs	20c44 <mpfr_vasnprintf_aux@@Base+0x26b4>  // b.hs, b.nlast
   208b8:	ldp	x2, x0, [x29, #384]
   208bc:	add	x1, x2, x1
   208c0:	add	x2, x0, x19
   208c4:	cmp	x2, x1
   208c8:	b.cs	20ca8 <mpfr_vasnprintf_aux@@Base+0x2718>  // b.hs, b.nlast
   208cc:	ldr	x3, [x29, #168]
   208d0:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   208d4:	movk	x1, #0xaaab
   208d8:	umulh	x1, x3, x1
   208dc:	and	x2, x1, #0xfffffffffffffffe
   208e0:	add	x1, x2, x1, lsr #1
   208e4:	sub	x1, x3, x1
   208e8:	add	x25, x1, #0x1
   208ec:	cmp	x22, x25
   208f0:	b.cc	20c80 <mpfr_vasnprintf_aux@@Base+0x26f0>  // b.lo, b.ul, b.last
   208f4:	mov	x1, x27
   208f8:	sub	x19, x22, x25
   208fc:	mov	x2, x25
   20900:	add	x27, x27, x25
   20904:	bl	ba10 <memcpy@plt>
   20908:	ldr	x1, [x29, #168]
   2090c:	ldr	x0, [x29, #392]
   20910:	cmp	x1, #0x2
   20914:	add	x1, x0, x25
   20918:	str	x1, [x29, #392]
   2091c:	b.ls	209a0 <mpfr_vasnprintf_aux@@Base+0x2410>  // b.plast
   20920:	mov	x3, #0x0                   	// #0
   20924:	str	x28, [x29, #168]
   20928:	mov	x28, x23
   2092c:	mov	x23, x21
   20930:	mov	x21, x3
   20934:	mov	w6, #0x3030                	// #12336
   20938:	mov	w22, #0x30                  	// #48
   2093c:	mov	x25, #0x3                   	// #3
   20940:	add	x0, x1, #0x1
   20944:	str	x0, [x29, #392]
   20948:	ldrb	w0, [x29, #200]
   2094c:	strb	w0, [x1]
   20950:	cbz	x19, 20e00 <mpfr_vasnprintf_aux@@Base+0x2870>
   20954:	cmp	x19, #0x2
   20958:	ldr	x0, [x29, #392]
   2095c:	b.ls	20dd0 <mpfr_vasnprintf_aux@@Base+0x2840>  // b.plast
   20960:	ldrh	w1, [x27]
   20964:	sub	x19, x19, #0x3
   20968:	strh	w1, [x0]
   2096c:	add	x27, x27, #0x3
   20970:	ldurb	w1, [x27, #-1]
   20974:	strb	w1, [x0, #2]
   20978:	ldr	x1, [x29, #392]
   2097c:	add	x21, x21, #0x1
   20980:	ldr	x0, [x29, #144]
   20984:	add	x1, x1, #0x3
   20988:	str	x1, [x29, #392]
   2098c:	cmp	x0, x21
   20990:	b.hi	20940 <mpfr_vasnprintf_aux@@Base+0x23b0>  // b.pmore
   20994:	mov	x21, x23
   20998:	mov	x23, x28
   2099c:	ldr	x28, [x29, #168]
   209a0:	strb	wzr, [x1]
   209a4:	b	1fcec <mpfr_vasnprintf_aux@@Base+0x175c>
   209a8:	str	w13, [x29, #112]
   209ac:	stp	w6, w3, [x29, #120]
   209b0:	str	w8, [x29, #128]
   209b4:	str	w12, [x29, #144]
   209b8:	str	w5, [x29, #168]
   209bc:	str	w4, [x29, #200]
   209c0:	bl	c410 <mpfr_tmp_free@plt>
   209c4:	ldr	w13, [x29, #112]
   209c8:	ldp	w6, w3, [x29, #120]
   209cc:	ldr	w8, [x29, #128]
   209d0:	ldr	w12, [x29, #144]
   209d4:	ldr	w5, [x29, #168]
   209d8:	ldr	w4, [x29, #200]
   209dc:	ldr	x10, [x29, #104]
   209e0:	ldr	x11, [x29, #136]
   209e4:	b	1f4f8 <mpfr_vasnprintf_aux@@Base+0xf68>
   209e8:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   209ec:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   209f0:	add	x2, x2, #0x180
   209f4:	add	x0, x0, #0x20
   209f8:	mov	w1, #0x7a3                 	// #1955
   209fc:	bl	cb40 <mpfr_assert_fail@plt>
   20a00:	ldr	x27, [x29, #576]
   20a04:	b	1fcc4 <mpfr_vasnprintf_aux@@Base+0x1734>
   20a08:	add	x0, x29, #0x2b0
   20a0c:	mov	x1, x11
   20a10:	ldp	x2, x3, [x0, #-200]
   20a14:	stp	x2, x3, [x29, #272]
   20a18:	ldr	x0, [x29, #520]
   20a1c:	mov	x3, #0x0                   	// #0
   20a20:	b	20640 <mpfr_vasnprintf_aux@@Base+0x20b0>
   20a24:	add	x0, x29, #0x1e8
   20a28:	str	x14, [x29, #96]
   20a2c:	str	w13, [x29, #104]
   20a30:	str	w6, [x29, #112]
   20a34:	stp	w3, w8, [x29, #120]
   20a38:	stp	x2, x11, [x29, #128]
   20a3c:	str	w12, [x29, #144]
   20a40:	str	w5, [x29, #168]
   20a44:	str	w4, [x29, #200]
   20a48:	bl	bdc0 <mpfr_tmp_allocate@plt>
   20a4c:	ldr	w13, [x29, #104]
   20a50:	mov	x7, x0
   20a54:	ldr	w6, [x29, #112]
   20a58:	ldp	w3, w8, [x29, #120]
   20a5c:	ldr	w12, [x29, #144]
   20a60:	ldr	w5, [x29, #168]
   20a64:	ldr	w4, [x29, #200]
   20a68:	ldr	x14, [x29, #96]
   20a6c:	ldp	x2, x11, [x29, #128]
   20a70:	b	1f414 <mpfr_vasnprintf_aux@@Base+0xe84>
   20a74:	add	x0, x29, #0x1e8
   20a78:	str	x14, [x29, #264]
   20a7c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   20a80:	mov	x3, x0
   20a84:	ldr	x14, [x29, #264]
   20a88:	b	1e71c <mpfr_vasnprintf_aux@@Base+0x18c>
   20a8c:	add	x1, x29, #0x2b0
   20a90:	sub	w2, w22, w2
   20a94:	str	w2, [x29, #496]
   20a98:	add	x2, x29, #0x2b0
   20a9c:	mov	x3, x27
   20aa0:	ldp	x4, x5, [x1, #-200]
   20aa4:	stp	x4, x5, [x29, #272]
   20aa8:	mov	x1, x11
   20aac:	ldp	x4, x5, [x2, #-184]
   20ab0:	ldr	x0, [x29, #520]
   20ab4:	b	1fbc8 <mpfr_vasnprintf_aux@@Base+0x1638>
   20ab8:	ldr	w1, [x29, #244]
   20abc:	tbnz	w1, #31, 20af0 <mpfr_vasnprintf_aux@@Base+0x2560>
   20ac0:	ldrb	w19, [x21, #1]
   20ac4:	add	x23, x23, #0xf
   20ac8:	and	x23, x23, #0xfffffffffffffff8
   20acc:	ldr	x7, [x29, #264]
   20ad0:	cbnz	w19, 1e6c0 <mpfr_vasnprintf_aux@@Base+0x130>
   20ad4:	b	1e6ec <mpfr_vasnprintf_aux@@Base+0x15c>
   20ad8:	bl	c410 <mpfr_tmp_free@plt>
   20adc:	b	1fd60 <mpfr_vasnprintf_aux@@Base+0x17d0>
   20ae0:	cmp	x15, x1
   20ae4:	b.eq	1faf4 <mpfr_vasnprintf_aux@@Base+0x1564>  // b.none
   20ae8:	mov	x7, x1
   20aec:	b	1e6ec <mpfr_vasnprintf_aux@@Base+0x15c>
   20af0:	ldr	w1, [x29, #244]
   20af4:	add	w1, w1, #0x10
   20af8:	str	w1, [x29, #244]
   20afc:	cmp	w1, #0x0
   20b00:	b.gt	20ac0 <mpfr_vasnprintf_aux@@Base+0x2530>
   20b04:	ldrb	w19, [x21, #1]
   20b08:	ldr	x7, [x29, #264]
   20b0c:	cbnz	w19, 1e6c0 <mpfr_vasnprintf_aux@@Base+0x130>
   20b10:	b	1e6ec <mpfr_vasnprintf_aux@@Base+0x15c>
   20b14:	mov	x0, #0xffffffffffffffff    	// #-1
   20b18:	str	x0, [x29, #408]
   20b1c:	b	1fd38 <mpfr_vasnprintf_aux@@Base+0x17a8>
   20b20:	mov	w0, #0x2d                  	// #45
   20b24:	strb	w0, [x29, #544]
   20b28:	b	2045c <mpfr_vasnprintf_aux@@Base+0x1ecc>
   20b2c:	ldr	w2, [x11, #8]
   20b30:	tbz	w2, #31, 1ff38 <mpfr_vasnprintf_aux@@Base+0x19a8>
   20b34:	b	1ff34 <mpfr_vasnprintf_aux@@Base+0x19a4>
   20b38:	ldr	x0, [x29, #248]
   20b3c:	add	x0, x0, w26, sxtw
   20b40:	mov	w26, w1
   20b44:	b	2013c <mpfr_vasnprintf_aux@@Base+0x1bac>
   20b48:	neg	x0, x0
   20b4c:	b	2014c <mpfr_vasnprintf_aux@@Base+0x1bbc>
   20b50:	ldr	w0, [x29, #528]
   20b54:	cmp	w0, #0x1
   20b58:	b.ne	20b60 <mpfr_vasnprintf_aux@@Base+0x25d0>  // b.any
   20b5c:	str	wzr, [x29, #528]
   20b60:	ldr	w0, [x11, #8]
   20b64:	tbz	w0, #31, 20b70 <mpfr_vasnprintf_aux@@Base+0x25e0>
   20b68:	mov	w0, #0x2d                  	// #45
   20b6c:	strb	w0, [x29, #544]
   20b70:	mov	x1, #0x3                   	// #3
   20b74:	mov	x0, #0x4                   	// #4
   20b78:	str	x1, [x29, #584]
   20b7c:	bl	ccf0 <mpfr_allocate_func@plt>
   20b80:	mov	x19, x0
   20b84:	ldr	w1, [x29, #200]
   20b88:	mov	w0, #0x6e69                	// #28265
   20b8c:	movk	w0, #0x66, lsl #16
   20b90:	cmp	w1, #0x0
   20b94:	mov	w1, #0x4e49                	// #20041
   20b98:	movk	w1, #0x46, lsl #16
   20b9c:	csel	w0, w0, w1, eq  // eq = none
   20ba0:	str	w0, [x19]
   20ba4:	ldr	x0, [x29, #648]
   20ba8:	mov	x22, x0
   20bac:	ldr	x0, [x0, #8]
   20bb0:	cbnz	x0, 20ba8 <mpfr_vasnprintf_aux@@Base+0x2618>
   20bb4:	b	20368 <mpfr_vasnprintf_aux@@Base+0x1dd8>
   20bb8:	ldr	x0, [x29, #168]
   20bbc:	tbz	w0, #0, 204ec <mpfr_vasnprintf_aux@@Base+0x1f5c>
   20bc0:	bl	bea0 <localeconv@plt>
   20bc4:	ldr	x0, [x0]
   20bc8:	mov	w1, #0x2e                  	// #46
   20bcc:	ldrb	w0, [x0, #1]
   20bd0:	cbz	w0, 20cdc <mpfr_vasnprintf_aux@@Base+0x274c>
   20bd4:	strb	w1, [x29, #596]
   20bd8:	b	204ec <mpfr_vasnprintf_aux@@Base+0x1f5c>
   20bdc:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   20be0:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   20be4:	add	x2, x2, #0x150
   20be8:	add	x0, x0, #0x20
   20bec:	mov	w1, #0x428                 	// #1064
   20bf0:	bl	cb40 <mpfr_assert_fail@plt>
   20bf4:	ldr	x0, [x29, #360]
   20bf8:	b	1f724 <mpfr_vasnprintf_aux@@Base+0x1194>
   20bfc:	ldr	w0, [x29, #136]
   20c00:	cmp	w19, #0x62
   20c04:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   20c08:	b.eq	1fbe4 <mpfr_vasnprintf_aux@@Base+0x1654>  // b.none
   20c0c:	mov	x1, #0x3                   	// #3
   20c10:	mov	x0, #0x4                   	// #4
   20c14:	str	x1, [x29, #640]
   20c18:	bl	ccf0 <mpfr_allocate_func@plt>
   20c1c:	mov	x19, x0
   20c20:	ldr	w1, [x29, #200]
   20c24:	mov	w0, #0x2b50                	// #11088
   20c28:	movk	w0, #0x30, lsl #16
   20c2c:	cmp	w1, #0x0
   20c30:	mov	w1, #0x2b70                	// #11120
   20c34:	movk	w1, #0x30, lsl #16
   20c38:	csel	w0, w0, w1, ne  // ne = any
   20c3c:	str	w0, [x19]
   20c40:	b	20544 <mpfr_vasnprintf_aux@@Base+0x1fb4>
   20c44:	mov	w1, #0x2d6                 	// #726
   20c48:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   20c4c:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   20c50:	add	x2, x2, #0x1a0
   20c54:	add	x0, x0, #0x20
   20c58:	bl	cb40 <mpfr_assert_fail@plt>
   20c5c:	ldr	x1, [x29, #400]
   20c60:	b	208b8 <mpfr_vasnprintf_aux@@Base+0x2328>
   20c64:	ldr	x0, [x11]
   20c68:	ldr	x1, [x11, #24]
   20c6c:	sub	x0, x0, #0x1
   20c70:	asr	x0, x0, #6
   20c74:	ldr	x1, [x1, x0, lsl #3]
   20c78:	lsr	x1, x1, #60
   20c7c:	b	1ff38 <mpfr_vasnprintf_aux@@Base+0x19a8>
   20c80:	mov	x2, x22
   20c84:	mov	x1, x27
   20c88:	bl	ba10 <memcpy@plt>
   20c8c:	mov	x19, #0x0                   	// #0
   20c90:	ldr	x0, [x29, #392]
   20c94:	sub	x2, x25, x22
   20c98:	mov	w1, #0x30                  	// #48
   20c9c:	add	x0, x0, x22
   20ca0:	bl	c110 <memset@plt>
   20ca4:	b	20908 <mpfr_vasnprintf_aux@@Base+0x2378>
   20ca8:	ldr	x0, [x29, #256]
   20cac:	mov	x1, x19
   20cb0:	bl	1d770 <mpfr_asprintf@@Base+0x98>
   20cb4:	ldr	x0, [x29, #392]
   20cb8:	b	208cc <mpfr_vasnprintf_aux@@Base+0x233c>
   20cbc:	bl	bea0 <localeconv@plt>
   20cc0:	ldr	x0, [x0]
   20cc4:	ldrb	w0, [x0, #1]
   20cc8:	cbz	w0, 20cf0 <mpfr_vasnprintf_aux@@Base+0x2760>
   20ccc:	mov	w0, #0x2e                  	// #46
   20cd0:	strb	w0, [x29, #596]
   20cd4:	str	w22, [x29, #624]
   20cd8:	b	204ec <mpfr_vasnprintf_aux@@Base+0x1f5c>
   20cdc:	bl	bea0 <localeconv@plt>
   20ce0:	ldr	x0, [x0]
   20ce4:	ldrb	w1, [x0]
   20ce8:	strb	w1, [x29, #596]
   20cec:	b	204ec <mpfr_vasnprintf_aux@@Base+0x1f5c>
   20cf0:	bl	bea0 <localeconv@plt>
   20cf4:	ldr	x0, [x0]
   20cf8:	ldrb	w0, [x0]
   20cfc:	strb	w0, [x29, #596]
   20d00:	str	w22, [x29, #624]
   20d04:	b	204ec <mpfr_vasnprintf_aux@@Base+0x1f5c>
   20d08:	mov	w26, #0x0                   	// #0
   20d0c:	b	1edd0 <mpfr_vasnprintf_aux@@Base+0x840>
   20d10:	mov	x1, #0x2                   	// #2
   20d14:	mov	x0, #0x3                   	// #3
   20d18:	str	x1, [x29, #560]
   20d1c:	bl	ccf0 <mpfr_allocate_func@plt>
   20d20:	ldr	w1, [x29, #200]
   20d24:	mov	w2, #0x30                  	// #48
   20d28:	mov	w3, #0x78                  	// #120
   20d2c:	cmp	w1, #0x0
   20d30:	mov	x1, x0
   20d34:	mov	w0, #0x58                  	// #88
   20d38:	csel	w0, w0, w3, ne  // ne = any
   20d3c:	strb	w2, [x1]
   20d40:	strb	w0, [x1, #1]
   20d44:	strb	wzr, [x1, #2]
   20d48:	ldr	x0, [x29, #648]
   20d4c:	mov	x2, x0
   20d50:	ldr	x0, [x0, #8]
   20d54:	cbnz	x0, 20d4c <mpfr_vasnprintf_aux@@Base+0x27bc>
   20d58:	mov	x0, #0x10                  	// #16
   20d5c:	str	x1, [x29, #128]
   20d60:	str	x2, [x29, #144]
   20d64:	bl	ccf0 <mpfr_allocate_func@plt>
   20d68:	ldr	x2, [x29, #144]
   20d6c:	ldr	x1, [x29, #128]
   20d70:	str	x0, [x2, #8]
   20d74:	stp	x1, xzr, [x0]
   20d78:	str	x1, [x29, #552]
   20d7c:	b	20464 <mpfr_vasnprintf_aux@@Base+0x1ed4>
   20d80:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   20d84:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   20d88:	add	x2, x2, #0x120
   20d8c:	add	x0, x0, #0x20
   20d90:	mov	w1, #0x41f                 	// #1055
   20d94:	bl	cb40 <mpfr_assert_fail@plt>
   20d98:	ldr	x0, [x29, #360]
   20d9c:	b	2039c <mpfr_vasnprintf_aux@@Base+0x1e0c>
   20da0:	bl	bea0 <localeconv@plt>
   20da4:	sub	w22, w22, #0x1
   20da8:	ldr	x0, [x0]
   20dac:	ldrb	w0, [x0]
   20db0:	strb	w0, [x29, #596]
   20db4:	b	204e8 <mpfr_vasnprintf_aux@@Base+0x1f58>
   20db8:	mov	x21, x1
   20dbc:	mov	w27, #0x0                   	// #0
   20dc0:	b	1e990 <mpfr_vasnprintf_aux@@Base+0x400>
   20dc4:	mov	x21, x1
   20dc8:	mov	w27, #0x0                   	// #0
   20dcc:	b	1e99c <mpfr_vasnprintf_aux@@Base+0x40c>
   20dd0:	mov	x2, x19
   20dd4:	mov	x1, x27
   20dd8:	str	w6, [x29, #136]
   20ddc:	bl	ba10 <memcpy@plt>
   20de0:	ldr	x0, [x29, #392]
   20de4:	sub	x2, x25, x19
   20de8:	mov	w1, #0x30                  	// #48
   20dec:	add	x0, x0, x19
   20df0:	bl	c110 <memset@plt>
   20df4:	ldr	w6, [x29, #136]
   20df8:	mov	x19, #0x0                   	// #0
   20dfc:	b	20978 <mpfr_vasnprintf_aux@@Base+0x23e8>
   20e00:	ldr	x0, [x29, #392]
   20e04:	strh	w6, [x0]
   20e08:	strb	w22, [x0, #2]
   20e0c:	b	20978 <mpfr_vasnprintf_aux@@Base+0x23e8>

0000000000020e10 <mpfr_const_pi_internal@@Base>:
   20e10:	stp	x29, x30, [sp, #-432]!
   20e14:	mov	x2, #0x1c72                	// #7282
   20e18:	movk	x2, #0x71c7, lsl #16
   20e1c:	mov	x29, sp
   20e20:	ldr	x3, [x0]
   20e24:	movk	x2, #0xc71c, lsl #32
   20e28:	str	x0, [sp, #112]
   20e2c:	movk	x2, #0x1c71, lsl #48
   20e30:	add	x0, x3, #0x10
   20e34:	str	w1, [sp, #108]
   20e38:	stp	x19, x20, [sp, #16]
   20e3c:	smulh	x1, x0, x2
   20e40:	stp	x21, x22, [sp, #32]
   20e44:	stp	x23, x24, [sp, #48]
   20e48:	sub	x0, x1, x0, asr #63
   20e4c:	stp	x25, x26, [sp, #64]
   20e50:	cmp	xzr, x0, lsr #2
   20e54:	stp	x27, x28, [sp, #80]
   20e58:	str	x3, [sp, #96]
   20e5c:	b.eq	211c0 <mpfr_const_pi_internal@@Base+0x3b0>  // b.none
   20e60:	add	x1, x3, #0x12
   20e64:	mov	x21, #0x2                   	// #2
   20e68:	smulh	x0, x1, x2
   20e6c:	add	x21, x21, #0x1
   20e70:	sub	x0, x0, x1, asr #63
   20e74:	add	x1, x1, #0x2
   20e78:	asr	x0, x0, x21
   20e7c:	cbnz	x0, 20e68 <mpfr_const_pi_internal@@Base+0x58>
   20e80:	add	x0, x21, x21, lsl #1
   20e84:	ldr	x1, [sp, #96]
   20e88:	add	x0, x1, x0
   20e8c:	mov	x1, #0x7fffffffffffff00    	// #9223372036854775552
   20e90:	add	x20, x0, #0xe
   20e94:	cmp	x20, x1
   20e98:	b.ge	211e4 <mpfr_const_pi_internal@@Base+0x3d4>  // b.tcont
   20e9c:	add	x23, x0, #0x4c
   20ea0:	adds	x0, x0, #0xd
   20ea4:	csel	x23, x23, x0, mi  // mi = first
   20ea8:	asr	x23, x23, #6
   20eac:	add	x23, x23, #0x1
   20eb0:	add	x0, x23, x23, lsl #2
   20eb4:	cmp	x0, #0x10
   20eb8:	b.gt	21118 <mpfr_const_pi_internal@@Base+0x308>
   20ebc:	add	x1, sp, #0x130
   20ec0:	stp	xzr, x1, [sp, #288]
   20ec4:	mov	x0, x1
   20ec8:	add	x2, x23, x23, lsl #1
   20ecc:	add	x7, x0, x23, lsl #3
   20ed0:	add	x3, x0, x23, lsl #4
   20ed4:	add	x25, sp, #0x80
   20ed8:	add	x19, sp, #0xa0
   20edc:	add	x27, sp, #0xc0
   20ee0:	add	x22, sp, #0xe0
   20ee4:	add	x28, sp, #0x100
   20ee8:	add	x2, x0, x2, lsl #3
   20eec:	add	x23, x0, x23, lsl #5
   20ef0:	mov	x4, #0x40                  	// #64
   20ef4:	mov	w1, #0x1                   	// #1
   20ef8:	str	x4, [sp, #120]
   20efc:	str	x20, [sp, #128]
   20f00:	mov	x24, #0x0                   	// #0
   20f04:	str	w1, [sp, #136]
   20f08:	stp	x0, x20, [sp, #152]
   20f0c:	mov	x0, x25
   20f10:	str	w1, [sp, #168]
   20f14:	stp	x7, x20, [sp, #184]
   20f18:	str	w1, [sp, #200]
   20f1c:	stp	x3, x20, [sp, #216]
   20f20:	mov	w3, #0x0                   	// #0
   20f24:	str	w1, [sp, #232]
   20f28:	stp	x2, x20, [sp, #248]
   20f2c:	mov	x2, #0x0                   	// #0
   20f30:	str	w1, [sp, #264]
   20f34:	mov	x1, #0x1                   	// #1
   20f38:	str	x23, [sp, #280]
   20f3c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   20f40:	mov	x0, x19
   20f44:	mov	w3, #0x0                   	// #0
   20f48:	mov	x2, #0x0                   	// #0
   20f4c:	mov	x1, #0x1                   	// #1
   20f50:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   20f54:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   20f58:	mov	x0, x27
   20f5c:	mov	w3, #0x0                   	// #0
   20f60:	mov	x2, #0xffffffffffffffff    	// #-1
   20f64:	mov	x1, #0x1                   	// #1
   20f68:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   20f6c:	mov	x0, x22
   20f70:	mov	w3, #0x0                   	// #0
   20f74:	mov	x2, #0xfffffffffffffffe    	// #-2
   20f78:	mov	x1, #0x1                   	// #1
   20f7c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   20f80:	b	20f88 <mpfr_const_pi_internal@@Base+0x178>
   20f84:	add	x24, x24, #0x1
   20f88:	mov	x2, x27
   20f8c:	mov	x1, x19
   20f90:	mov	w3, #0x0                   	// #0
   20f94:	mov	x0, x28
   20f98:	bl	c1a0 <mpfr_add@plt>
   20f9c:	mov	w3, #0x0                   	// #0
   20fa0:	mov	x1, x28
   20fa4:	mov	x2, #0x2                   	// #2
   20fa8:	mov	x0, x28
   20fac:	bl	c8f0 <mpfr_div_2ui@plt>
   20fb0:	mov	x1, x27
   20fb4:	mov	w2, #0x0                   	// #0
   20fb8:	mov	x0, x27
   20fbc:	bl	c930 <mpfr_sqrt@plt>
   20fc0:	mov	x2, x27
   20fc4:	mov	x1, x25
   20fc8:	mov	w3, #0x0                   	// #0
   20fcc:	mov	x0, x25
   20fd0:	bl	c1a0 <mpfr_add@plt>
   20fd4:	mov	x1, x25
   20fd8:	mov	w3, #0x0                   	// #0
   20fdc:	mov	x2, #0x1                   	// #1
   20fe0:	mov	x0, x25
   20fe4:	bl	c8f0 <mpfr_div_2ui@plt>
   20fe8:	mov	x2, x25
   20fec:	mov	x1, x25
   20ff0:	mov	w3, #0x0                   	// #0
   20ff4:	mov	x0, x19
   20ff8:	bl	bd50 <mpfr_mul@plt>
   20ffc:	mov	x2, x28
   21000:	mov	x1, x19
   21004:	mov	w3, #0x0                   	// #0
   21008:	mov	x0, x27
   2100c:	bl	bb70 <mpfr_sub@plt>
   21010:	mov	x1, x27
   21014:	mov	w3, #0x0                   	// #0
   21018:	mov	x2, #0x1                   	// #1
   2101c:	mov	x0, x27
   21020:	bl	c2c0 <mpfr_mul_2ui@plt>
   21024:	mov	x2, x27
   21028:	mov	x1, x19
   2102c:	mov	w3, #0x0                   	// #0
   21030:	mov	x0, x28
   21034:	bl	bb70 <mpfr_sub@plt>
   21038:	ldr	x7, [sp, #272]
   2103c:	mov	x2, x24
   21040:	mov	x1, x28
   21044:	mov	w3, #0x0                   	// #0
   21048:	cmp	x7, x23
   2104c:	mov	x0, x28
   21050:	csneg	x26, x20, x7, eq  // eq = none
   21054:	bl	c2c0 <mpfr_mul_2ui@plt>
   21058:	mov	x2, x28
   2105c:	mov	x1, x22
   21060:	mov	x0, x22
   21064:	mov	w3, #0x0                   	// #0
   21068:	bl	bb70 <mpfr_sub@plt>
   2106c:	sub	x0, x20, x24
   21070:	cmp	x0, x26
   21074:	b.gt	20f84 <mpfr_const_pi_internal@@Base+0x174>
   21078:	mov	x1, x27
   2107c:	mov	x2, x22
   21080:	mov	x0, x19
   21084:	mov	w3, #0x0                   	// #0
   21088:	bl	c620 <mpfr_div@plt>
   2108c:	ldr	x1, [sp, #176]
   21090:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   21094:	cmp	x1, x0
   21098:	b.le	2112c <mpfr_const_pi_internal@@Base+0x31c>
   2109c:	ldr	w0, [sp, #108]
   210a0:	sub	x2, x20, x24, lsl #1
   210a4:	ldr	x1, [sp, #160]
   210a8:	cmp	w0, #0x0
   210ac:	ldr	x0, [sp, #184]
   210b0:	sub	x1, x1, #0x1
   210b4:	ldr	x3, [sp, #96]
   210b8:	asr	x1, x1, #6
   210bc:	sub	x2, x2, #0x8
   210c0:	add	x1, x1, #0x1
   210c4:	cinc	x3, x3, eq  // eq = none
   210c8:	bl	c370 <mpfr_round_p@plt>
   210cc:	cbz	w0, 2112c <mpfr_const_pi_internal@@Base+0x31c>
   210d0:	ldr	w2, [sp, #108]
   210d4:	mov	x1, x19
   210d8:	ldr	w3, [sp, #168]
   210dc:	ldr	x0, [sp, #112]
   210e0:	bl	c6a0 <mpfr_set4@plt>
   210e4:	mov	w19, w0
   210e8:	ldr	x1, [sp, #288]
   210ec:	cbz	x1, 210f8 <mpfr_const_pi_internal@@Base+0x2e8>
   210f0:	ldr	x0, [sp, #296]
   210f4:	bl	cc20 <mpfr_free_func@plt>
   210f8:	mov	w0, w19
   210fc:	ldp	x19, x20, [sp, #16]
   21100:	ldp	x21, x22, [sp, #32]
   21104:	ldp	x23, x24, [sp, #48]
   21108:	ldp	x25, x26, [sp, #64]
   2110c:	ldp	x27, x28, [sp, #80]
   21110:	ldp	x29, x30, [sp], #432
   21114:	ret
   21118:	lsl	x0, x0, #3
   2111c:	str	x0, [sp, #288]
   21120:	bl	ccf0 <mpfr_allocate_func@plt>
   21124:	str	x0, [sp, #296]
   21128:	b	20ec8 <mpfr_const_pi_internal@@Base+0xb8>
   2112c:	ldr	x1, [sp, #120]
   21130:	add	x20, x21, x20
   21134:	mov	x0, #0xfffffffffffffeff    	// #-257
   21138:	movk	x0, #0x7fff, lsl #48
   2113c:	sub	x0, x0, x20
   21140:	cmp	x0, x1
   21144:	b.lt	211cc <mpfr_const_pi_internal@@Base+0x3bc>  // b.tstop
   21148:	ldr	x0, [sp, #120]
   2114c:	ldr	x1, [sp, #288]
   21150:	add	x20, x0, x20
   21154:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   21158:	cmp	x20, x0
   2115c:	add	x0, x20, x20, lsr #63
   21160:	asr	x0, x0, #1
   21164:	str	x0, [sp, #120]
   21168:	b.ge	211e4 <mpfr_const_pi_internal@@Base+0x3d4>  // b.tcont
   2116c:	sub	x23, x20, #0x1
   21170:	asr	x23, x23, #6
   21174:	add	x23, x23, #0x1
   21178:	add	x2, x23, x23, lsl #2
   2117c:	lsl	x2, x2, #3
   21180:	str	x2, [sp, #288]
   21184:	cbz	x1, 211b0 <mpfr_const_pi_internal@@Base+0x3a0>
   21188:	ldr	x0, [sp, #296]
   2118c:	bl	c1c0 <mpfr_reallocate_func@plt>
   21190:	str	x0, [sp, #296]
   21194:	add	x2, x23, x23, lsl #1
   21198:	add	x7, x0, x23, lsl #3
   2119c:	add	x3, x0, x23, lsl #4
   211a0:	mov	w1, #0x1                   	// #1
   211a4:	add	x2, x0, x2, lsl #3
   211a8:	add	x23, x0, x23, lsl #5
   211ac:	b	20efc <mpfr_const_pi_internal@@Base+0xec>
   211b0:	mov	x0, x2
   211b4:	bl	ccf0 <mpfr_allocate_func@plt>
   211b8:	str	x0, [sp, #296]
   211bc:	b	21194 <mpfr_const_pi_internal@@Base+0x384>
   211c0:	mov	x0, #0x6                   	// #6
   211c4:	mov	x21, #0x2                   	// #2
   211c8:	b	20e84 <mpfr_const_pi_internal@@Base+0x74>
   211cc:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   211d0:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   211d4:	add	x2, x2, #0xc08
   211d8:	add	x0, x0, #0x1e0
   211dc:	mov	w1, #0x6c                  	// #108
   211e0:	bl	cb40 <mpfr_assert_fail@plt>
   211e4:	bl	c8e0 <mpfr_abort_prec_max@plt>

00000000000211e8 <mpfr_const_pi@@Base>:
   211e8:	stp	x29, x30, [sp, #-16]!
   211ec:	mov	x4, x0
   211f0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   211f4:	ldr	x2, [x0, #2624]
   211f8:	add	x0, x0, #0xa40
   211fc:	blr	x2
   21200:	mov	x29, sp
   21204:	ldp	x29, x30, [sp], #16
   21208:	mrs	x3, tpidr_el0
   2120c:	mov	w2, w1
   21210:	add	x1, x3, x0
   21214:	mov	x0, x4
   21218:	b	c380 <mpfr_cache@plt>
   2121c:	nop

0000000000021220 <mpfr_pow_general@@Base>:
   21220:	stp	x29, x30, [sp, #-368]!
   21224:	mov	x29, sp
   21228:	stp	x21, x22, [sp, #32]
   2122c:	mov	x22, x0
   21230:	ldr	w0, [x1, #8]
   21234:	ldr	x6, [x1]
   21238:	str	x6, [sp, #304]
   2123c:	ldp	x6, x1, [x1, #16]
   21240:	stp	x19, x20, [sp, #16]
   21244:	mov	w19, #0x1                   	// #1
   21248:	stp	x23, x24, [sp, #48]
   2124c:	mov	x21, x2
   21250:	mov	w23, w3
   21254:	stp	x25, x26, [sp, #64]
   21258:	stp	x27, x28, [sp, #80]
   2125c:	str	x5, [sp, #136]
   21260:	str	w4, [sp, #148]
   21264:	str	w19, [sp, #312]
   21268:	stp	x6, x1, [sp, #320]
   2126c:	ldr	x25, [x22]
   21270:	tbnz	w0, #31, 21560 <mpfr_pow_general@@Base+0x340>
   21274:	str	wzr, [sp, #144]
   21278:	cmp	x25, #0x1
   2127c:	add	x1, x25, #0x9
   21280:	b.eq	21590 <mpfr_pow_general@@Base+0x370>  // b.none
   21284:	b.le	21a1c <mpfr_pow_general@@Base+0x7fc>
   21288:	sub	x0, x25, #0x1
   2128c:	mov	w20, #0x40                  	// #64
   21290:	clz	x0, x0
   21294:	sub	w0, w20, w0
   21298:	add	x20, x1, w0, sxtw
   2129c:	add	x19, sp, #0xd0
   212a0:	mov	x1, x20
   212a4:	mov	x0, x19
   212a8:	bl	ca80 <mpfr_init2@plt>
   212ac:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   212b0:	add	x28, sp, #0x130
   212b4:	add	x0, x0, #0x218
   212b8:	mrs	x24, tpidr_el0
   212bc:	add	x26, sp, #0xf0
   212c0:	add	x27, sp, #0x110
   212c4:	str	wzr, [sp, #96]
   212c8:	str	wzr, [sp, #128]
   212cc:	str	x0, [sp, #152]
   212d0:	mov	x0, #0x40                  	// #64
   212d4:	str	x0, [sp, #112]
   212d8:	ldr	w2, [x21, #8]
   212dc:	mov	x1, x28
   212e0:	mov	x0, x19
   212e4:	lsr	w2, w2, #31
   212e8:	add	w2, w2, #0x2
   212ec:	bl	c090 <mpfr_log@plt>
   212f0:	mov	x2, x19
   212f4:	mov	x1, x21
   212f8:	mov	x0, x19
   212fc:	mov	w3, #0x2                   	// #2
   21300:	bl	bd50 <mpfr_mul@plt>
   21304:	ldr	w0, [sp, #96]
   21308:	cbnz	w0, 21490 <mpfr_pow_general@@Base+0x270>
   2130c:	ldr	x0, [sp, #224]
   21310:	mov	x3, #0xfffffffffffffffe    	// #-2
   21314:	mov	x1, x19
   21318:	mov	w2, #0x0                   	// #0
   2131c:	cmp	x0, x3
   21320:	csel	x0, x0, x3, ge  // ge = tcont
   21324:	add	x0, x0, #0x3
   21328:	str	x0, [sp, #104]
   2132c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21330:	ldr	x3, [x0, #2576]
   21334:	add	x0, x0, #0xa10
   21338:	blr	x3
   2133c:	add	x3, x24, x0
   21340:	str	wzr, [x24, x0]
   21344:	mov	x0, x19
   21348:	str	x3, [sp, #120]
   2134c:	bl	c750 <mpfr_exp@plt>
   21350:	ldr	x3, [sp, #120]
   21354:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   21358:	ldr	x0, [sp, #224]
   2135c:	ldr	w2, [x3]
   21360:	cmp	x0, x1
   21364:	b.le	21598 <mpfr_pow_general@@Base+0x378>
   21368:	tbnz	w2, #0, 215c0 <mpfr_pow_general@@Base+0x3a0>
   2136c:	ldr	x1, [sp, #208]
   21370:	cmp	w23, #0x0
   21374:	ldr	x0, [sp, #232]
   21378:	sub	x1, x1, #0x1
   2137c:	ldr	x2, [sp, #104]
   21380:	cset	w3, eq  // eq = none
   21384:	asr	x1, x1, #6
   21388:	str	w3, [sp, #104]
   2138c:	sub	x2, x20, x2
   21390:	add	x1, x1, #0x1
   21394:	cinc	x3, x25, eq  // eq = none
   21398:	bl	c370 <mpfr_round_p@plt>
   2139c:	cbz	w0, 21638 <mpfr_pow_general@@Base+0x418>
   213a0:	ldr	w3, [sp, #216]
   213a4:	mov	w2, w23
   213a8:	mov	x1, x19
   213ac:	mov	x0, x22
   213b0:	bl	c6a0 <mpfr_set4@plt>
   213b4:	mov	w20, w0
   213b8:	ldr	w0, [sp, #96]
   213bc:	cbz	w0, 21454 <mpfr_pow_general@@Base+0x234>
   213c0:	add	x25, sp, #0x110
   213c4:	mov	w1, #0x0                   	// #0
   213c8:	mov	x0, x25
   213cc:	bl	c190 <mpfr_get_si@plt>
   213d0:	mov	x21, x0
   213d4:	ldr	w0, [sp, #104]
   213d8:	cmp	w20, #0x0
   213dc:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
   213e0:	ccmp	x21, #0x0, #0x0, ne  // ne = any
   213e4:	b.lt	21910 <mpfr_pow_general@@Base+0x6f0>  // b.tstop
   213e8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   213ec:	ldr	x1, [x0, #2576]
   213f0:	add	x0, x0, #0xa10
   213f4:	blr	x1
   213f8:	mov	x2, x21
   213fc:	mov	w3, w23
   21400:	mov	x1, x22
   21404:	str	wzr, [x24, x0]
   21408:	mov	x0, x22
   2140c:	bl	bb90 <mpfr_mul_2si@plt>
   21410:	mov	w21, w0
   21414:	cbz	w21, 21444 <mpfr_pow_general@@Base+0x224>
   21418:	ldr	x2, [sp, #136]
   2141c:	mov	w20, w21
   21420:	cbz	x2, 21444 <mpfr_pow_general@@Base+0x224>
   21424:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21428:	ldr	x1, [x0, #2576]
   2142c:	add	x0, x0, #0xa10
   21430:	blr	x1
   21434:	ldr	w0, [x24, x0]
   21438:	ldr	w1, [x2]
   2143c:	orr	w1, w1, w0
   21440:	str	w1, [x2]
   21444:	mov	x1, x25
   21448:	add	x0, sp, #0xf0
   2144c:	mov	x2, #0x0                   	// #0
   21450:	bl	c1b0 <mpfr_clears@plt>
   21454:	mov	x0, x19
   21458:	bl	c070 <mpfr_clear@plt>
   2145c:	ldr	w0, [sp, #144]
   21460:	cbz	w0, 21470 <mpfr_pow_general@@Base+0x250>
   21464:	neg	w20, w20
   21468:	mov	w0, #0xffffffff            	// #-1
   2146c:	str	w0, [x22, #8]
   21470:	mov	w0, w20
   21474:	ldp	x19, x20, [sp, #16]
   21478:	ldp	x21, x22, [sp, #32]
   2147c:	ldp	x23, x24, [sp, #48]
   21480:	ldp	x25, x26, [sp, #64]
   21484:	ldp	x27, x28, [sp, #80]
   21488:	ldp	x29, x30, [sp], #368
   2148c:	ret
   21490:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21494:	ldr	x1, [x0, #2560]
   21498:	add	x0, x0, #0xa00
   2149c:	blr	x1
   214a0:	mov	w2, #0x3                   	// #3
   214a4:	add	x1, x24, x0
   214a8:	mov	x0, x26
   214ac:	bl	c380 <mpfr_cache@plt>
   214b0:	mov	x2, x27
   214b4:	mov	x1, x26
   214b8:	mov	w3, #0x3                   	// #3
   214bc:	mov	x0, x26
   214c0:	bl	bd50 <mpfr_mul@plt>
   214c4:	mov	x2, x26
   214c8:	mov	x1, x19
   214cc:	mov	w3, #0x2                   	// #2
   214d0:	mov	x0, x19
   214d4:	bl	bb70 <mpfr_sub@plt>
   214d8:	ldr	x1, [sp, #224]
   214dc:	mov	x0, #0xfffffffffffffffe    	// #-2
   214e0:	ldr	x3, [sp, #288]
   214e4:	cmp	x1, x0
   214e8:	csel	x0, x1, x0, ge  // ge = tcont
   214ec:	mov	w2, #0x0                   	// #0
   214f0:	add	x0, x0, #0x3
   214f4:	mov	x1, x19
   214f8:	cmp	x3, x0
   214fc:	csel	x0, x3, x0, ge  // ge = tcont
   21500:	add	x0, x0, #0x1
   21504:	str	x0, [sp, #104]
   21508:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2150c:	ldr	x3, [x0, #2576]
   21510:	add	x0, x0, #0xa10
   21514:	blr	x3
   21518:	add	x3, x24, x0
   2151c:	str	wzr, [x24, x0]
   21520:	mov	x0, x19
   21524:	str	x3, [sp, #120]
   21528:	bl	c750 <mpfr_exp@plt>
   2152c:	ldr	x3, [sp, #120]
   21530:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   21534:	ldr	x1, [sp, #224]
   21538:	ldr	w2, [x3]
   2153c:	cmp	x1, x0
   21540:	b.le	21548 <mpfr_pow_general@@Base+0x328>
   21544:	tbz	w2, #0, 2136c <mpfr_pow_general@@Base+0x14c>
   21548:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   2154c:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   21550:	add	x2, x2, #0x208
   21554:	add	x0, x0, #0x200
   21558:	mov	w1, #0xcd                  	// #205
   2155c:	bl	cb40 <mpfr_assert_fail@plt>
   21560:	mov	x0, x2
   21564:	bl	cca0 <mpfr_odd_p@plt>
   21568:	cbz	w0, 21274 <mpfr_pow_general@@Base+0x54>
   2156c:	cmp	w23, #0x2
   21570:	b.eq	21904 <mpfr_pow_general@@Base+0x6e4>  // b.none
   21574:	str	w19, [sp, #144]
   21578:	cmp	w23, #0x3
   2157c:	mov	w0, #0x2                   	// #2
   21580:	add	x1, x25, #0x9
   21584:	csel	w23, w23, w0, ne  // ne = any
   21588:	cmp	x25, #0x1
   2158c:	b.ne	21284 <mpfr_pow_general@@Base+0x64>  // b.any
   21590:	mov	x20, #0xa                   	// #10
   21594:	b	2129c <mpfr_pow_general@@Base+0x7c>
   21598:	mov	x1, #0x2                   	// #2
   2159c:	movk	x1, #0x8000, lsl #48
   215a0:	cmp	x0, x1
   215a4:	b.ne	215c0 <mpfr_pow_general@@Base+0x3a0>  // b.any
   215a8:	ldr	x2, [sp, #152]
   215ac:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   215b0:	mov	w1, #0xce                  	// #206
   215b4:	add	x0, x0, #0x200
   215b8:	bl	cb40 <mpfr_assert_fail@plt>
   215bc:	ldr	x0, [sp, #224]
   215c0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   215c4:	cmp	x0, x1
   215c8:	b.eq	21a34 <mpfr_pow_general@@Base+0x814>  // b.none
   215cc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   215d0:	cmp	x0, x1
   215d4:	b.eq	21698 <mpfr_pow_general@@Base+0x478>  // b.none
   215d8:	cmp	x20, #0x3f
   215dc:	b.le	21734 <mpfr_pow_general@@Base+0x514>
   215e0:	mov	x1, x20
   215e4:	mov	x0, x26
   215e8:	bl	ca80 <mpfr_init2@plt>
   215ec:	mov	w0, #0x1                   	// #1
   215f0:	mov	x1, #0x40                  	// #64
   215f4:	str	w0, [sp, #96]
   215f8:	mov	x0, x27
   215fc:	bl	ca80 <mpfr_init2@plt>
   21600:	mov	x1, x28
   21604:	mov	x0, x27
   21608:	mov	w2, #0x0                   	// #0
   2160c:	bl	c1d0 <mpfr_log2@plt>
   21610:	mov	w3, #0x0                   	// #0
   21614:	mov	x2, x27
   21618:	mov	x1, x21
   2161c:	mov	x0, x27
   21620:	bl	bd50 <mpfr_mul@plt>
   21624:	mov	x1, x27
   21628:	mov	x0, x27
   2162c:	mov	w2, #0xffffffff            	// #-1
   21630:	bl	c300 <mpfr_rint@plt>
   21634:	b	212d8 <mpfr_pow_general@@Base+0xb8>
   21638:	ldr	w0, [sp, #128]
   2163c:	ldr	w1, [sp, #148]
   21640:	orr	w0, w0, w1
   21644:	cbz	w0, 21748 <mpfr_pow_general@@Base+0x528>
   21648:	ldr	x1, [sp, #112]
   2164c:	mov	x0, #0xfffffffffffffeff    	// #-257
   21650:	movk	x0, #0x7fff, lsl #48
   21654:	sub	x0, x0, x20
   21658:	cmp	x0, x1
   2165c:	b.lt	21998 <mpfr_pow_general@@Base+0x778>  // b.tstop
   21660:	ldr	x0, [sp, #112]
   21664:	add	x20, x20, x0
   21668:	mov	x0, x19
   2166c:	mov	x1, x20
   21670:	add	x2, x20, x20, lsr #63
   21674:	asr	x2, x2, #1
   21678:	str	x2, [sp, #112]
   2167c:	bl	bed0 <mpfr_set_prec@plt>
   21680:	ldr	w0, [sp, #96]
   21684:	cbz	w0, 212d8 <mpfr_pow_general@@Base+0xb8>
   21688:	mov	x1, x20
   2168c:	mov	x0, x26
   21690:	bl	bed0 <mpfr_set_prec@plt>
   21694:	b	212d8 <mpfr_pow_general@@Base+0xb8>
   21698:	ldr	w2, [x21, #8]
   2169c:	mov	x1, x28
   216a0:	mov	x0, x19
   216a4:	mvn	w2, w2
   216a8:	lsr	w2, w2, #31
   216ac:	add	w2, w2, #0x2
   216b0:	bl	c090 <mpfr_log@plt>
   216b4:	mov	x1, x21
   216b8:	mov	x2, x19
   216bc:	mov	w3, #0x3                   	// #3
   216c0:	mov	x0, x19
   216c4:	bl	bd50 <mpfr_mul@plt>
   216c8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   216cc:	ldr	x1, [x0, #2576]
   216d0:	add	x0, x0, #0xa10
   216d4:	blr	x1
   216d8:	add	x3, x24, x0
   216dc:	mov	x1, x19
   216e0:	mov	w2, #0x3                   	// #3
   216e4:	str	wzr, [x24, x0]
   216e8:	mov	x0, x19
   216ec:	str	x3, [sp, #96]
   216f0:	bl	c750 <mpfr_exp@plt>
   216f4:	ldr	x3, [sp, #96]
   216f8:	ldr	w0, [x3]
   216fc:	tbz	w0, #1, 215d8 <mpfr_pow_general@@Base+0x3b8>
   21700:	mov	w1, w23
   21704:	mov	x0, x22
   21708:	mov	w2, #0x1                   	// #1
   2170c:	bl	bf40 <mpfr_overflow@plt>
   21710:	mov	w20, w0
   21714:	ldr	x0, [sp, #136]
   21718:	cbz	x0, 21454 <mpfr_pow_general@@Base+0x234>
   2171c:	mov	x2, x0
   21720:	ldr	w0, [x0]
   21724:	mov	w1, #0xa                   	// #10
   21728:	orr	w0, w0, w1
   2172c:	str	w0, [x2]
   21730:	b	21454 <mpfr_pow_general@@Base+0x234>
   21734:	mov	x20, #0x40                  	// #64
   21738:	mov	x0, x19
   2173c:	mov	x1, x20
   21740:	bl	bed0 <mpfr_set_prec@plt>
   21744:	b	215e0 <mpfr_pow_general@@Base+0x3c0>
   21748:	ldr	w0, [x21, #8]
   2174c:	tbnz	w0, #31, 2195c <mpfr_pow_general@@Base+0x73c>
   21750:	add	x4, sp, #0xb0
   21754:	add	x1, sp, #0xc0
   21758:	mov	x0, x1
   2175c:	str	x4, [sp, #128]
   21760:	str	x1, [sp, #168]
   21764:	bl	bf90 <mpfr_mpz_init@plt>
   21768:	ldr	x0, [sp, #168]
   2176c:	mov	x1, x21
   21770:	bl	cac0 <mpfr_get_z_2exp@plt>
   21774:	mov	x3, x0
   21778:	ldr	x0, [sp, #168]
   2177c:	mov	x1, #0x0                   	// #0
   21780:	str	x3, [sp, #160]
   21784:	bl	ba90 <__gmpz_scan1@plt>
   21788:	mov	x2, x0
   2178c:	ldr	x1, [sp, #168]
   21790:	str	x2, [sp, #120]
   21794:	mov	x0, x1
   21798:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2179c:	ldp	x2, x4, [sp, #120]
   217a0:	ldr	x3, [sp, #160]
   217a4:	add	x1, x3, x2
   217a8:	mov	x0, x4
   217ac:	str	x1, [sp, #120]
   217b0:	bl	bf90 <mpfr_mpz_init@plt>
   217b4:	ldr	x4, [sp, #128]
   217b8:	mov	x1, x28
   217bc:	mov	x0, x4
   217c0:	bl	cac0 <mpfr_get_z_2exp@plt>
   217c4:	mov	x3, x0
   217c8:	ldr	x4, [sp, #128]
   217cc:	mov	x1, #0x0                   	// #0
   217d0:	str	x3, [sp, #160]
   217d4:	mov	x0, x4
   217d8:	bl	ba90 <__gmpz_scan1@plt>
   217dc:	mov	x2, x0
   217e0:	ldr	x3, [sp, #160]
   217e4:	ldr	x4, [sp, #128]
   217e8:	add	x3, x3, x0
   217ec:	str	x3, [sp, #160]
   217f0:	mov	x1, x4
   217f4:	mov	x0, x4
   217f8:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   217fc:	ldr	x4, [sp, #128]
   21800:	ldr	x3, [sp, #160]
   21804:	nop
   21808:	tbnz	w3, #0, 21968 <mpfr_pow_general@@Base+0x748>
   2180c:	ldrsw	x1, [sp, #180]
   21810:	cmp	x1, #0x0
   21814:	b.le	21990 <mpfr_pow_general@@Base+0x770>
   21818:	ldr	x0, [sp, #184]
   2181c:	str	x3, [sp, #128]
   21820:	str	x4, [sp, #160]
   21824:	bl	ca40 <__gmpn_perfect_square_p@plt>
   21828:	ldr	x3, [sp, #128]
   2182c:	ldr	x4, [sp, #160]
   21830:	str	x3, [sp, #128]
   21834:	cbz	w0, 219b0 <mpfr_pow_general@@Base+0x790>
   21838:	mov	x0, x4
   2183c:	mov	x1, x4
   21840:	str	x4, [sp, #160]
   21844:	bl	bc60 <__gmpz_sqrt@plt>
   21848:	ldp	x0, x3, [sp, #120]
   2184c:	ldr	x4, [sp, #160]
   21850:	add	x3, x3, x3, lsr #63
   21854:	adds	x0, x0, #0x1
   21858:	str	x0, [sp, #120]
   2185c:	asr	x3, x3, #1
   21860:	b.ne	21808 <mpfr_pow_general@@Base+0x5e8>  // b.any
   21864:	ldr	w0, [sp, #180]
   21868:	mov	x2, #0xfffffffffffffff8    	// #-8
   2186c:	ldr	x5, [sp, #184]
   21870:	cmp	w0, #0x0
   21874:	cneg	w1, w0, lt  // lt = tstop
   21878:	add	x21, sp, #0x150
   2187c:	mov	x0, x21
   21880:	stp	x4, x3, [sp, #112]
   21884:	add	x2, x2, w1, sxtw #3
   21888:	sbfiz	x1, x1, #6, #32
   2188c:	ldr	x2, [x5, x2]
   21890:	clz	x2, x2
   21894:	sub	x1, x1, x2
   21898:	bl	ca80 <mpfr_init2@plt>
   2189c:	ldr	x4, [sp, #112]
   218a0:	mov	x0, x21
   218a4:	mov	w2, #0x0                   	// #0
   218a8:	mov	x1, x4
   218ac:	bl	c240 <mpfr_set_z@plt>
   218b0:	ldr	x3, [sp, #120]
   218b4:	mov	x1, x21
   218b8:	mov	x0, x21
   218bc:	mov	x2, x3
   218c0:	mov	w3, #0x0                   	// #0
   218c4:	bl	bb90 <mpfr_mul_2si@plt>
   218c8:	ldr	x25, [sp, #168]
   218cc:	mov	w3, w23
   218d0:	mov	x1, x21
   218d4:	mov	x0, x22
   218d8:	mov	x2, x25
   218dc:	bl	bef0 <mpfr_pow_z@plt>
   218e0:	mov	w20, w0
   218e4:	mov	x0, x21
   218e8:	bl	c070 <mpfr_clear@plt>
   218ec:	ldr	x4, [sp, #112]
   218f0:	mov	x0, x4
   218f4:	bl	c170 <mpfr_mpz_clear@plt>
   218f8:	mov	x0, x25
   218fc:	bl	c170 <mpfr_mpz_clear@plt>
   21900:	b	213b8 <mpfr_pow_general@@Base+0x198>
   21904:	mov	w23, #0x3                   	// #3
   21908:	str	w19, [sp, #144]
   2190c:	b	21278 <mpfr_pow_general@@Base+0x58>
   21910:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21914:	ldr	x1, [x0, #2512]
   21918:	add	x0, x0, #0x9d0
   2191c:	blr	x1
   21920:	ldr	x0, [x24, x0]
   21924:	ldr	x1, [x22, #16]
   21928:	sub	x0, x0, #0x1
   2192c:	sub	x0, x0, x21
   21930:	cmp	x1, x0
   21934:	b.ne	213e8 <mpfr_pow_general@@Base+0x1c8>  // b.any
   21938:	mov	x0, x22
   2193c:	bl	bf00 <mpfr_powerof2_raw@plt>
   21940:	cbz	w0, 213e8 <mpfr_pow_general@@Base+0x1c8>
   21944:	ldr	x1, [x22]
   21948:	cmp	x1, #0x1
   2194c:	b.le	219cc <mpfr_pow_general@@Base+0x7ac>
   21950:	mov	x0, x22
   21954:	bl	c120 <mpfr_nextabove@plt>
   21958:	b	213e8 <mpfr_pow_general@@Base+0x1c8>
   2195c:	mov	w0, #0x1                   	// #1
   21960:	str	w0, [sp, #128]
   21964:	b	21648 <mpfr_pow_general@@Base+0x428>
   21968:	sub	x3, x3, #0x1
   2196c:	mov	x1, x4
   21970:	mov	x0, x4
   21974:	mov	x2, #0x1                   	// #1
   21978:	str	x4, [sp, #128]
   2197c:	str	x3, [sp, #160]
   21980:	bl	c200 <__gmpz_mul_2exp@plt>
   21984:	ldr	x4, [sp, #128]
   21988:	ldr	x3, [sp, #160]
   2198c:	b	2180c <mpfr_pow_general@@Base+0x5ec>
   21990:	cset	w0, eq  // eq = none
   21994:	b	21830 <mpfr_pow_general@@Base+0x610>
   21998:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   2199c:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   219a0:	add	x2, x2, #0x258
   219a4:	add	x0, x0, #0x200
   219a8:	mov	w1, #0x113                 	// #275
   219ac:	bl	cb40 <mpfr_assert_fail@plt>
   219b0:	mov	w0, #0x1                   	// #1
   219b4:	str	w0, [sp, #128]
   219b8:	mov	x0, x4
   219bc:	bl	c170 <mpfr_mpz_clear@plt>
   219c0:	ldr	x0, [sp, #168]
   219c4:	bl	c170 <mpfr_mpz_clear@plt>
   219c8:	b	21648 <mpfr_pow_general@@Base+0x428>
   219cc:	add	x23, sp, #0x150
   219d0:	add	x1, x1, #0x1
   219d4:	mov	x0, x23
   219d8:	bl	ca80 <mpfr_init2@plt>
   219dc:	ldr	w3, [x22, #8]
   219e0:	mov	x1, x22
   219e4:	mov	w2, #0x1                   	// #1
   219e8:	mov	x0, x23
   219ec:	bl	c6a0 <mpfr_set4@plt>
   219f0:	mov	x0, x23
   219f4:	bl	c120 <mpfr_nextabove@plt>
   219f8:	mov	x2, x21
   219fc:	mov	x1, x23
   21a00:	mov	w3, #0x0                   	// #0
   21a04:	mov	x0, x22
   21a08:	bl	bb90 <mpfr_mul_2si@plt>
   21a0c:	mov	w21, w0
   21a10:	mov	x0, x23
   21a14:	bl	c070 <mpfr_clear@plt>
   21a18:	b	21414 <mpfr_pow_general@@Base+0x1f4>
   21a1c:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   21a20:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   21a24:	add	x2, x2, #0x1f0
   21a28:	add	x0, x0, #0x200
   21a2c:	mov	w1, #0x9f                  	// #159
   21a30:	bl	cb40 <mpfr_assert_fail@plt>
   21a34:	cmp	w23, #0x0
   21a38:	mov	w2, #0x1                   	// #1
   21a3c:	mov	x0, x22
   21a40:	csel	w1, w23, w2, ne  // ne = any
   21a44:	bl	c3c0 <mpfr_underflow@plt>
   21a48:	mov	w20, w0
   21a4c:	ldr	x0, [sp, #136]
   21a50:	cbz	x0, 21454 <mpfr_pow_general@@Base+0x234>
   21a54:	mov	x2, x0
   21a58:	ldr	w0, [x0]
   21a5c:	mov	w1, #0x9                   	// #9
   21a60:	orr	w0, w0, w1
   21a64:	str	w0, [x2]
   21a68:	b	21454 <mpfr_pow_general@@Base+0x234>
   21a6c:	nop

0000000000021a70 <mpfr_pow@@Base>:
   21a70:	stp	x29, x30, [sp, #-176]!
   21a74:	mov	x29, sp
   21a78:	stp	x25, x26, [sp, #64]
   21a7c:	ldr	x25, [x1, #16]
   21a80:	stp	x19, x20, [sp, #16]
   21a84:	mov	x19, x1
   21a88:	stp	x21, x22, [sp, #32]
   21a8c:	mov	x22, x0
   21a90:	mov	x21, x2
   21a94:	stp	x23, x24, [sp, #48]
   21a98:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   21a9c:	mov	w24, w3
   21aa0:	cmp	x25, x0
   21aa4:	ldr	x20, [x2, #16]
   21aa8:	b.le	221fc <mpfr_pow@@Base+0x78c>
   21aac:	cmp	x20, x0
   21ab0:	b.le	22264 <mpfr_pow@@Base+0x7f4>
   21ab4:	mov	x0, x2
   21ab8:	bl	c160 <mpfr_integer_p@plt>
   21abc:	ldr	w1, [x19, #8]
   21ac0:	mov	w25, w0
   21ac4:	cmp	w1, #0x0
   21ac8:	ccmp	w0, #0x0, #0x0, lt  // lt = tstop
   21acc:	b.eq	2218c <mpfr_pow@@Base+0x71c>  // b.none
   21ad0:	adrp	x26, 7f000 <__gmpfr_l2b@@Base+0x200>
   21ad4:	mov	x0, x19
   21ad8:	ldr	x1, [x26, #3928]
   21adc:	bl	c9b0 <mpfr_cmpabs@plt>
   21ae0:	mov	w23, w0
   21ae4:	cbz	w0, 21e24 <mpfr_pow@@Base+0x3b4>
   21ae8:	mrs	x20, tpidr_el0
   21aec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21af0:	ldr	x1, [x0, #2544]
   21af4:	add	x0, x0, #0x9f0
   21af8:	blr	x1
   21afc:	stp	x27, x28, [sp, #80]
   21b00:	mov	x1, #0x3ffffffe            	// #1073741822
   21b04:	ldr	x3, [x20, x0]
   21b08:	cmp	x3, x1
   21b0c:	b.le	21b58 <mpfr_pow@@Base+0xe8>
   21b10:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21b14:	ldr	x1, [x0, #2512]
   21b18:	add	x0, x0, #0x9d0
   21b1c:	blr	x1
   21b20:	ldr	x0, [x20, x0]
   21b24:	mov	x1, #0xffffffffc0000001    	// #-1073741823
   21b28:	cmp	x0, x1
   21b2c:	b.gt	21b58 <mpfr_pow@@Base+0xe8>
   21b30:	ldr	x0, [x21, #16]
   21b34:	cmp	x0, #0xf
   21b38:	b.gt	21b58 <mpfr_pow@@Base+0xe8>
   21b3c:	ldr	x0, [x19, #16]
   21b40:	mov	x2, #0x7ffe                	// #32766
   21b44:	mov	x1, #0xfffd                	// #65533
   21b48:	add	x0, x0, x2
   21b4c:	cmp	x0, x1
   21b50:	b.ls	222a0 <mpfr_pow@@Base+0x830>  // b.plast
   21b54:	nop
   21b58:	ldr	w2, [x21, #8]
   21b5c:	mul	w0, w2, w23
   21b60:	cmp	w0, #0x0
   21b64:	b.gt	22068 <mpfr_pow@@Base+0x5f8>
   21b68:	ldr	x1, [x19, #16]
   21b6c:	lsr	x0, x1, #63
   21b70:	and	w0, w0, #0xff
   21b74:	tbnz	w2, #31, 21e60 <mpfr_pow@@Base+0x3f0>
   21b78:	cbz	w0, 21c8c <mpfr_pow@@Base+0x21c>
   21b7c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21b80:	ldr	x2, [x0, #2576]
   21b84:	add	x0, x0, #0xa10
   21b88:	blr	x2
   21b8c:	ldr	w3, [x20, x0]
   21b90:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21b94:	ldr	x2, [x0, #2512]
   21b98:	add	x0, x0, #0x9d0
   21b9c:	blr	x2
   21ba0:	add	x6, x20, x0
   21ba4:	ldr	x2, [x20, x0]
   21ba8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21bac:	ldr	x4, [x0, #2544]
   21bb0:	add	x0, x0, #0x9f0
   21bb4:	blr	x4
   21bb8:	ldr	x10, [x20, x0]
   21bbc:	add	x4, sp, #0x70
   21bc0:	mov	x7, #0xc000000000000001    	// #-4611686018427387903
   21bc4:	mov	x5, #0x3fffffffffffffff    	// #4611686018427387903
   21bc8:	mov	x9, #0x40                  	// #64
   21bcc:	mov	w8, #0x1                   	// #1
   21bd0:	add	x28, sp, #0x90
   21bd4:	str	x5, [x20, x0]
   21bd8:	mov	x0, x28
   21bdc:	str	x7, [x6]
   21be0:	str	w3, [sp, #120]
   21be4:	mov	w3, #0x0                   	// #0
   21be8:	stp	x2, x10, [sp, #128]
   21bec:	mov	x2, #0x0                   	// #0
   21bf0:	str	x9, [sp, #144]
   21bf4:	str	w8, [sp, #152]
   21bf8:	str	x4, [sp, #168]
   21bfc:	bl	ba80 <mpfr_set_si_2exp@plt>
   21c00:	cbnz	w0, 225b8 <mpfr_pow@@Base+0xb48>
   21c04:	ldr	w0, [x21, #8]
   21c08:	tbnz	w0, #31, 21ea8 <mpfr_pow@@Base+0x438>
   21c0c:	mov	x2, x21
   21c10:	mov	x1, x28
   21c14:	mov	x0, x28
   21c18:	mov	w3, #0x2                   	// #2
   21c1c:	bl	bd50 <mpfr_mul@plt>
   21c20:	ldr	w0, [x21, #8]
   21c24:	tbnz	w0, #31, 21f14 <mpfr_pow@@Base+0x4a4>
   21c28:	mov	w1, #0x2                   	// #2
   21c2c:	mov	x0, x28
   21c30:	bl	c190 <mpfr_get_si@plt>
   21c34:	mov	x2, x0
   21c38:	ldr	w1, [sp, #120]
   21c3c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21c40:	ldr	x3, [x0, #2576]
   21c44:	add	x0, x0, #0xa10
   21c48:	blr	x3
   21c4c:	str	w1, [x20, x0]
   21c50:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21c54:	ldr	x1, [x0, #2512]
   21c58:	add	x0, x0, #0x9d0
   21c5c:	blr	x1
   21c60:	ldp	x1, x3, [sp, #128]
   21c64:	str	x1, [x20, x0]
   21c68:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21c6c:	ldr	x4, [x0, #2544]
   21c70:	add	x0, x0, #0x9f0
   21c74:	blr	x4
   21c78:	str	x3, [x20, x0]
   21c7c:	cbnz	w24, 21e6c <mpfr_pow@@Base+0x3fc>
   21c80:	sub	x1, x1, #0x2
   21c84:	cmp	x2, x1
   21c88:	b.le	22324 <mpfr_pow@@Base+0x8b4>
   21c8c:	cbz	w25, 21c9c <mpfr_pow@@Base+0x22c>
   21c90:	ldr	x0, [x21, #16]
   21c94:	cmp	x0, #0x100
   21c98:	b.le	222a8 <mpfr_pow@@Base+0x838>
   21c9c:	mov	x0, x19
   21ca0:	bl	bf00 <mpfr_powerof2_raw@plt>
   21ca4:	cbnz	w0, 21f20 <mpfr_pow@@Base+0x4b0>
   21ca8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21cac:	ldr	x1, [x0, #2576]
   21cb0:	add	x0, x0, #0xa10
   21cb4:	blr	x1
   21cb8:	ldr	w6, [x20, x0]
   21cbc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21cc0:	ldr	x1, [x0, #2512]
   21cc4:	add	x0, x0, #0x9d0
   21cc8:	blr	x1
   21ccc:	add	x2, x20, x0
   21cd0:	ldr	x5, [x20, x0]
   21cd4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21cd8:	ldr	x1, [x0, #2544]
   21cdc:	add	x0, x0, #0x9f0
   21ce0:	blr	x1
   21ce4:	ldr	x4, [x20, x0]
   21ce8:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   21cec:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   21cf0:	str	x3, [x2]
   21cf4:	str	x1, [x20, x0]
   21cf8:	ldr	w0, [x19, #8]
   21cfc:	str	w6, [sp, #120]
   21d00:	stp	x5, x4, [sp, #128]
   21d04:	cmp	w0, #0x0
   21d08:	b.le	21ed8 <mpfr_pow@@Base+0x468>
   21d0c:	ldr	x2, [x19, #16]
   21d10:	cmp	w23, #0x0
   21d14:	mov	x0, #0x1                   	// #1
   21d18:	sub	x0, x0, x2
   21d1c:	csel	x2, x0, x2, le
   21d20:	cmp	x2, #0x1
   21d24:	b.eq	22408 <mpfr_pow@@Base+0x998>  // b.none
   21d28:	b.le	225a0 <mpfr_pow@@Base+0xb30>
   21d2c:	sub	x0, x2, #0x1
   21d30:	mov	w2, #0x40                  	// #64
   21d34:	clz	x0, x0
   21d38:	sub	w2, w2, w0
   21d3c:	sxtw	x2, w2
   21d40:	ldr	x1, [x21, #16]
   21d44:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21d48:	ldr	x3, [x0, #2576]
   21d4c:	add	x0, x0, #0xa10
   21d50:	blr	x3
   21d54:	str	wzr, [x20, x0]
   21d58:	add	x27, x20, x0
   21d5c:	adds	x2, x2, x1
   21d60:	b.pl	21d78 <mpfr_pow@@Base+0x308>  // b.nfrst
   21d64:	ldr	x0, [x22]
   21d68:	neg	x2, x2
   21d6c:	add	x0, x0, #0x1
   21d70:	cmp	x2, x0
   21d74:	b.hi	22458 <mpfr_pow@@Base+0x9e8>  // b.pmore
   21d78:	mov	x2, x21
   21d7c:	mov	w4, w25
   21d80:	mov	x1, x19
   21d84:	add	x5, sp, #0x78
   21d88:	mov	w3, w24
   21d8c:	mov	x0, x22
   21d90:	bl	c6f0 <mpfr_pow_general@plt>
   21d94:	mov	w23, w0
   21d98:	ldp	x4, x3, [sp, #128]
   21d9c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21da0:	ldr	x2, [x0, #2576]
   21da4:	add	x0, x0, #0xa10
   21da8:	blr	x2
   21dac:	ldr	w1, [sp, #120]
   21db0:	add	x5, x20, x0
   21db4:	str	w1, [x20, x0]
   21db8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21dbc:	ldr	x2, [x0, #2512]
   21dc0:	add	x0, x0, #0x9d0
   21dc4:	blr	x2
   21dc8:	ldr	x2, [x22, #16]
   21dcc:	str	x4, [x20, x0]
   21dd0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21dd4:	ldr	x6, [x0, #2544]
   21dd8:	add	x0, x0, #0x9f0
   21ddc:	blr	x6
   21de0:	str	x3, [x20, x0]
   21de4:	cmp	x4, x2
   21de8:	ccmp	x3, x2, #0x1, le
   21dec:	b.ge	2203c <mpfr_pow@@Base+0x5cc>  // b.tcont
   21df0:	mov	w1, w23
   21df4:	mov	w2, w24
   21df8:	mov	x0, x22
   21dfc:	bl	cb30 <mpfr_check_range@plt>
   21e00:	ldp	x27, x28, [sp, #80]
   21e04:	mov	w23, w0
   21e08:	mov	w0, w23
   21e0c:	ldp	x19, x20, [sp, #16]
   21e10:	ldp	x21, x22, [sp, #32]
   21e14:	ldp	x23, x24, [sp, #48]
   21e18:	ldp	x25, x26, [sp, #64]
   21e1c:	ldp	x29, x30, [sp], #176
   21e20:	ret
   21e24:	ldr	w0, [x19, #8]
   21e28:	tbnz	w0, #31, 21f00 <mpfr_pow@@Base+0x490>
   21e2c:	mov	x1, #0x1                   	// #1
   21e30:	mov	w3, w24
   21e34:	mov	x0, x22
   21e38:	mov	x2, #0x0                   	// #0
   21e3c:	bl	ba80 <mpfr_set_si_2exp@plt>
   21e40:	mov	w23, w0
   21e44:	mov	w0, w23
   21e48:	ldp	x19, x20, [sp, #16]
   21e4c:	ldp	x21, x22, [sp, #32]
   21e50:	ldp	x23, x24, [sp, #48]
   21e54:	ldp	x25, x26, [sp, #64]
   21e58:	ldp	x29, x30, [sp], #176
   21e5c:	ret
   21e60:	cmp	x1, #0x1
   21e64:	cset	w0, gt
   21e68:	b	21b78 <mpfr_pow@@Base+0x108>
   21e6c:	sub	x1, x1, #0x1
   21e70:	cmp	x2, x1
   21e74:	b.gt	21c8c <mpfr_pow@@Base+0x21c>
   21e78:	ldr	w0, [x19, #8]
   21e7c:	tbz	w0, #31, 22590 <mpfr_pow@@Base+0xb20>
   21e80:	mov	x0, x21
   21e84:	bl	cca0 <mpfr_odd_p@plt>
   21e88:	cbz	w0, 22590 <mpfr_pow@@Base+0xb20>
   21e8c:	mov	w2, #0xffffffff            	// #-1
   21e90:	mov	w1, w24
   21e94:	mov	x0, x22
   21e98:	bl	c3c0 <mpfr_underflow@plt>
   21e9c:	mov	w23, w0
   21ea0:	ldp	x27, x28, [sp, #80]
   21ea4:	b	21e08 <mpfr_pow@@Base+0x398>
   21ea8:	mov	x1, x28
   21eac:	mov	x0, x28
   21eb0:	mov	w3, #0x0                   	// #0
   21eb4:	mov	x2, #0x1                   	// #1
   21eb8:	bl	c530 <mpfr_sub_ui@plt>
   21ebc:	cbz	w0, 21c0c <mpfr_pow@@Base+0x19c>
   21ec0:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   21ec4:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   21ec8:	add	x2, x2, #0x2a0
   21ecc:	add	x0, x0, #0x200
   21ed0:	mov	w1, #0x24f                 	// #591
   21ed4:	bl	cb40 <mpfr_assert_fail@plt>
   21ed8:	mov	x0, x19
   21edc:	mov	x2, #0x0                   	// #0
   21ee0:	mov	x1, #0xffffffffffffffff    	// #-1
   21ee4:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   21ee8:	cmp	w0, #0x0
   21eec:	b.le	222ec <mpfr_pow@@Base+0x87c>
   21ef0:	ldr	x0, [x19, #16]
   21ef4:	mov	x2, #0x1                   	// #1
   21ef8:	sub	x2, x2, x0
   21efc:	b	21d20 <mpfr_pow@@Base+0x2b0>
   21f00:	mov	x0, x21
   21f04:	bl	cca0 <mpfr_odd_p@plt>
   21f08:	cbz	w0, 21e2c <mpfr_pow@@Base+0x3bc>
   21f0c:	mov	x1, #0xffffffffffffffff    	// #-1
   21f10:	b	21e30 <mpfr_pow@@Base+0x3c0>
   21f14:	mov	x0, x28
   21f18:	bl	c120 <mpfr_nextabove@plt>
   21f1c:	b	21c28 <mpfr_pow@@Base+0x1b8>
   21f20:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21f24:	ldr	x1, [x0, #2576]
   21f28:	add	x0, x0, #0xa10
   21f2c:	blr	x1
   21f30:	ldr	w7, [x20, x0]
   21f34:	add	x26, x20, x0
   21f38:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21f3c:	ldr	x1, [x0, #2512]
   21f40:	add	x0, x0, #0x9d0
   21f44:	blr	x1
   21f48:	add	x3, x20, x0
   21f4c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   21f50:	ldr	x6, [x20, x0]
   21f54:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21f58:	ldr	x5, [x0, #2544]
   21f5c:	add	x0, x0, #0x9f0
   21f60:	blr	x5
   21f64:	ldr	x5, [x20, x0]
   21f68:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   21f6c:	ldr	x1, [x21]
   21f70:	add	x25, sp, #0x90
   21f74:	ldr	x23, [x19, #16]
   21f78:	add	x1, x1, #0x40
   21f7c:	ldr	w19, [x19, #8]
   21f80:	sub	x23, x23, #0x1
   21f84:	str	x2, [x20, x0]
   21f88:	mov	x0, x25
   21f8c:	str	x4, [x3]
   21f90:	str	w7, [sp, #120]
   21f94:	stp	x6, x5, [sp, #128]
   21f98:	bl	ca80 <mpfr_init2@plt>
   21f9c:	mov	x2, x23
   21fa0:	mov	x0, x25
   21fa4:	mov	x1, x21
   21fa8:	mov	w3, #0x0                   	// #0
   21fac:	bl	c960 <mpfr_mul_si@plt>
   21fb0:	cbnz	w0, 225d0 <mpfr_pow@@Base+0xb60>
   21fb4:	mov	w2, w24
   21fb8:	mov	x1, x25
   21fbc:	mov	x0, x22
   21fc0:	str	wzr, [x26]
   21fc4:	bl	cc90 <mpfr_exp2@plt>
   21fc8:	mov	w23, w0
   21fcc:	mov	x0, x25
   21fd0:	bl	c070 <mpfr_clear@plt>
   21fd4:	tbnz	w19, #31, 223a0 <mpfr_pow@@Base+0x930>
   21fd8:	ldp	x4, x2, [sp, #128]
   21fdc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21fe0:	ldr	x1, [x0, #2576]
   21fe4:	add	x0, x0, #0xa10
   21fe8:	blr	x1
   21fec:	ldr	w6, [x20, x0]
   21ff0:	add	x5, x20, x0
   21ff4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   21ff8:	ldr	x3, [x0, #2512]
   21ffc:	add	x0, x0, #0x9d0
   22000:	blr	x3
   22004:	ldr	w1, [sp, #120]
   22008:	ldr	x3, [x22, #16]
   2200c:	str	x4, [x20, x0]
   22010:	orr	w1, w1, w6
   22014:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22018:	ldr	x6, [x0, #2544]
   2201c:	add	x0, x0, #0x9f0
   22020:	blr	x6
   22024:	str	w1, [x5]
   22028:	cmp	x2, x3
   2202c:	str	x2, [x20, x0]
   22030:	ccmp	x4, x3, #0x0, ge  // ge = tcont
   22034:	str	w1, [sp, #120]
   22038:	b.gt	21df0 <mpfr_pow@@Base+0x380>
   2203c:	cbz	w23, 221dc <mpfr_pow@@Base+0x76c>
   22040:	orr	w1, w1, #0x8
   22044:	mov	w0, w23
   22048:	ldp	x27, x28, [sp, #80]
   2204c:	str	w1, [x5]
   22050:	ldp	x19, x20, [sp, #16]
   22054:	ldp	x21, x22, [sp, #32]
   22058:	ldp	x23, x24, [sp, #48]
   2205c:	ldp	x25, x26, [sp, #64]
   22060:	ldp	x29, x30, [sp], #176
   22064:	ret
   22068:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2206c:	ldr	x1, [x0, #2576]
   22070:	add	x0, x0, #0xa10
   22074:	blr	x1
   22078:	ldr	w5, [x20, x0]
   2207c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22080:	ldr	x1, [x0, #2512]
   22084:	add	x0, x0, #0x9d0
   22088:	blr	x1
   2208c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   22090:	ldr	x4, [x20, x0]
   22094:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   22098:	add	x28, sp, #0x90
   2209c:	str	x1, [x20, x0]
   220a0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   220a4:	ldr	x1, [x0, #2544]
   220a8:	add	x0, x0, #0x9f0
   220ac:	blr	x1
   220b0:	str	x2, [x20, x0]
   220b4:	mov	x1, #0x35                  	// #53
   220b8:	mov	x0, x28
   220bc:	str	w5, [sp, #120]
   220c0:	stp	x4, x3, [sp, #128]
   220c4:	bl	ca80 <mpfr_init2@plt>
   220c8:	ldr	w0, [x19, #8]
   220cc:	cmp	w0, #0x0
   220d0:	b.gt	2228c <mpfr_pow@@Base+0x81c>
   220d4:	cmp	w23, #0x0
   220d8:	mov	x1, x19
   220dc:	cset	w2, le
   220e0:	mov	x0, x28
   220e4:	add	w2, w2, #0x1
   220e8:	bl	bd70 <mpfr_neg@plt>
   220ec:	mov	x1, x28
   220f0:	mov	x0, x28
   220f4:	mov	w2, #0x1                   	// #1
   220f8:	bl	c1d0 <mpfr_log2@plt>
   220fc:	mov	x1, x28
   22100:	mov	x2, x21
   22104:	mov	w3, #0x1                   	// #1
   22108:	mov	x0, x28
   2210c:	bl	bd50 <mpfr_mul@plt>
   22110:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22114:	ldr	x1, [x0, #2544]
   22118:	add	x0, x0, #0x9f0
   2211c:	blr	x1
   22120:	add	x3, x20, x0
   22124:	ldr	x1, [x20, x0]
   22128:	mov	x2, #0x0                   	// #0
   2212c:	mov	x0, x28
   22130:	str	x3, [sp, #104]
   22134:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   22138:	mov	w27, w0
   2213c:	mov	x0, x28
   22140:	bl	c070 <mpfr_clear@plt>
   22144:	ldr	w2, [sp, #120]
   22148:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2214c:	ldr	x3, [x0, #2576]
   22150:	add	x0, x0, #0xa10
   22154:	blr	x3
   22158:	str	w2, [x20, x0]
   2215c:	ldr	x3, [sp, #104]
   22160:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22164:	ldr	x2, [x0, #2512]
   22168:	add	x0, x0, #0x9d0
   2216c:	blr	x2
   22170:	ldp	x1, x2, [sp, #128]
   22174:	str	x1, [x20, x0]
   22178:	str	x2, [x3]
   2217c:	cmp	w27, #0x0
   22180:	b.gt	22560 <mpfr_pow@@Base+0xaf0>
   22184:	ldr	w2, [x21, #8]
   22188:	b	21b68 <mpfr_pow@@Base+0xf8>
   2218c:	mrs	x1, tpidr_el0
   22190:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22194:	ldr	x2, [x0, #2576]
   22198:	add	x0, x0, #0xa10
   2219c:	blr	x2
   221a0:	add	x0, x1, x0
   221a4:	mov	x1, #0x2                   	// #2
   221a8:	movk	x1, #0x8000, lsl #48
   221ac:	str	x1, [x22, #16]
   221b0:	mov	w23, #0x0                   	// #0
   221b4:	ldr	w1, [x0]
   221b8:	ldp	x19, x20, [sp, #16]
   221bc:	orr	w1, w1, #0x4
   221c0:	str	w1, [x0]
   221c4:	mov	w0, w23
   221c8:	ldp	x21, x22, [sp, #32]
   221cc:	ldp	x23, x24, [sp, #48]
   221d0:	ldp	x25, x26, [sp, #64]
   221d4:	ldp	x29, x30, [sp], #176
   221d8:	ret
   221dc:	mov	w0, w23
   221e0:	ldp	x19, x20, [sp, #16]
   221e4:	ldp	x21, x22, [sp, #32]
   221e8:	ldp	x23, x24, [sp, #48]
   221ec:	ldp	x25, x26, [sp, #64]
   221f0:	ldp	x27, x28, [sp, #80]
   221f4:	ldp	x29, x30, [sp], #176
   221f8:	ret
   221fc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   22200:	cmp	x20, x0
   22204:	b.eq	22270 <mpfr_pow@@Base+0x800>  // b.none
   22208:	mov	x0, #0x2                   	// #2
   2220c:	movk	x0, #0x8000, lsl #48
   22210:	cmp	x25, x0
   22214:	b.eq	22370 <mpfr_pow@@Base+0x900>  // b.none
   22218:	mov	x0, #0x2                   	// #2
   2221c:	movk	x0, #0x8000, lsl #48
   22220:	cmp	x20, x0
   22224:	b.eq	223c4 <mpfr_pow@@Base+0x954>  // b.none
   22228:	mov	x23, #0x8000000000000003    	// #-9223372036854775805
   2222c:	cmp	x20, x23
   22230:	b.eq	2232c <mpfr_pow@@Base+0x8bc>  // b.none
   22234:	ldr	w0, [x19, #8]
   22238:	cmp	x25, x23
   2223c:	b.eq	2243c <mpfr_pow@@Base+0x9cc>  // b.none
   22240:	tbnz	w0, #31, 222f4 <mpfr_pow@@Base+0x884>
   22244:	ldr	w0, [x21, #8]
   22248:	tbnz	w0, #31, 22410 <mpfr_pow@@Base+0x9a0>
   2224c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   22250:	str	x0, [x22, #16]
   22254:	mov	w0, #0x1                   	// #1
   22258:	mov	w23, #0x0                   	// #0
   2225c:	str	w0, [x22, #8]
   22260:	b	21e08 <mpfr_pow@@Base+0x398>
   22264:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   22268:	cmp	x20, x0
   2226c:	b.ne	22218 <mpfr_pow@@Base+0x7a8>  // b.any
   22270:	mov	w3, w24
   22274:	mov	x0, x22
   22278:	mov	x2, #0x0                   	// #0
   2227c:	mov	x1, #0x1                   	// #1
   22280:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   22284:	mov	w23, w0
   22288:	b	21e08 <mpfr_pow@@Base+0x398>
   2228c:	mov	x1, x19
   22290:	mov	x0, x28
   22294:	mov	w2, #0x1                   	// #1
   22298:	bl	c1d0 <mpfr_log2@plt>
   2229c:	b	220fc <mpfr_pow@@Base+0x68c>
   222a0:	cbz	w25, 21c9c <mpfr_pow@@Base+0x22c>
   222a4:	nop
   222a8:	add	x20, sp, #0x90
   222ac:	mov	x0, x20
   222b0:	bl	bf90 <mpfr_mpz_init@plt>
   222b4:	mov	x1, x21
   222b8:	mov	w2, #0x0                   	// #0
   222bc:	mov	x0, x20
   222c0:	bl	be00 <mpfr_get_z@plt>
   222c4:	mov	w3, w24
   222c8:	mov	x2, x20
   222cc:	mov	x1, x19
   222d0:	mov	x0, x22
   222d4:	bl	bef0 <mpfr_pow_z@plt>
   222d8:	mov	w23, w0
   222dc:	mov	x0, x20
   222e0:	bl	c170 <mpfr_mpz_clear@plt>
   222e4:	ldp	x27, x28, [sp, #80]
   222e8:	b	21e08 <mpfr_pow@@Base+0x398>
   222ec:	ldr	x2, [x19, #16]
   222f0:	b	21d20 <mpfr_pow@@Base+0x2b0>
   222f4:	mov	x0, x21
   222f8:	bl	cca0 <mpfr_odd_p@plt>
   222fc:	ldr	w2, [x21, #8]
   22300:	mov	w1, w0
   22304:	tbnz	w2, #31, 22510 <mpfr_pow@@Base+0xaa0>
   22308:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2230c:	str	x0, [x22, #16]
   22310:	cbz	w1, 22254 <mpfr_pow@@Base+0x7e4>
   22314:	mov	w0, #0xffffffff            	// #-1
   22318:	mov	w23, #0x0                   	// #0
   2231c:	str	w0, [x22, #8]
   22320:	b	21e08 <mpfr_pow@@Base+0x398>
   22324:	mov	w24, #0x1                   	// #1
   22328:	b	21e78 <mpfr_pow@@Base+0x408>
   2232c:	cmp	x25, x20
   22330:	b.eq	224e0 <mpfr_pow@@Base+0xa70>  // b.none
   22334:	adrp	x1, 7f000 <__gmpfr_l2b@@Base+0x200>
   22338:	mov	x0, x19
   2233c:	ldr	x1, [x1, #3928]
   22340:	bl	c9b0 <mpfr_cmpabs@plt>
   22344:	ldr	w1, [x21, #8]
   22348:	mov	w2, #0x1                   	// #1
   2234c:	str	w2, [x22, #8]
   22350:	mul	w0, w0, w1
   22354:	cmp	w0, #0x0
   22358:	b.gt	22504 <mpfr_pow@@Base+0xa94>
   2235c:	b.eq	22270 <mpfr_pow@@Base+0x800>  // b.none
   22360:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   22364:	mov	w23, #0x0                   	// #0
   22368:	str	x0, [x22, #16]
   2236c:	b	21e08 <mpfr_pow@@Base+0x398>
   22370:	mrs	x1, tpidr_el0
   22374:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22378:	ldr	x2, [x0, #2576]
   2237c:	add	x0, x0, #0xa10
   22380:	blr	x2
   22384:	add	x0, x1, x0
   22388:	mov	w23, #0x0                   	// #0
   2238c:	str	x25, [x22, #16]
   22390:	ldr	w1, [x0]
   22394:	orr	w1, w1, #0x4
   22398:	str	w1, [x0]
   2239c:	b	21e08 <mpfr_pow@@Base+0x398>
   223a0:	mov	x0, x21
   223a4:	bl	cca0 <mpfr_odd_p@plt>
   223a8:	cbz	w0, 21fd8 <mpfr_pow@@Base+0x568>
   223ac:	neg	w23, w23
   223b0:	mov	w2, w24
   223b4:	mov	x1, x22
   223b8:	mov	x0, x22
   223bc:	bl	bd70 <mpfr_neg@plt>
   223c0:	b	21fd8 <mpfr_pow@@Base+0x568>
   223c4:	mov	x0, x19
   223c8:	mov	x2, #0x0                   	// #0
   223cc:	mov	x1, #0x1                   	// #1
   223d0:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   223d4:	cbz	w0, 22270 <mpfr_pow@@Base+0x800>
   223d8:	mrs	x1, tpidr_el0
   223dc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   223e0:	ldr	x2, [x0, #2576]
   223e4:	add	x0, x0, #0xa10
   223e8:	blr	x2
   223ec:	add	x0, x1, x0
   223f0:	mov	w23, #0x0                   	// #0
   223f4:	str	x20, [x22, #16]
   223f8:	ldr	w1, [x0]
   223fc:	orr	w1, w1, #0x4
   22400:	str	w1, [x0]
   22404:	b	21e08 <mpfr_pow@@Base+0x398>
   22408:	mov	x2, #0x0                   	// #0
   2240c:	b	21d40 <mpfr_pow@@Base+0x2d0>
   22410:	mrs	x1, tpidr_el0
   22414:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22418:	ldr	x2, [x0, #2576]
   2241c:	add	x0, x0, #0xa10
   22420:	blr	x2
   22424:	add	x0, x1, x0
   22428:	str	x23, [x22, #16]
   2242c:	ldr	w1, [x0]
   22430:	orr	w1, w1, #0x20
   22434:	str	w1, [x0]
   22438:	b	22254 <mpfr_pow@@Base+0x7e4>
   2243c:	tbnz	w0, #31, 2253c <mpfr_pow@@Base+0xacc>
   22440:	ldr	w1, [x21, #8]
   22444:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   22448:	cmp	w1, #0x0
   2244c:	csel	x25, x0, x25, le
   22450:	str	x25, [x22, #16]
   22454:	b	22254 <mpfr_pow@@Base+0x7e4>
   22458:	ldr	w0, [x21, #8]
   2245c:	mov	w4, w24
   22460:	ldr	x1, [x26, #3928]
   22464:	cmp	w0, #0x0
   22468:	cset	w3, gt
   2246c:	mov	x0, x22
   22470:	eor	w3, w3, w23, lsr #31
   22474:	bl	c540 <mpfr_round_near_x@plt>
   22478:	mov	w23, w0
   2247c:	cbz	w0, 21d78 <mpfr_pow@@Base+0x308>
   22480:	ldr	w3, [x27]
   22484:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22488:	ldr	x2, [x0, #2512]
   2248c:	add	x0, x0, #0x9d0
   22490:	blr	x2
   22494:	ldr	w1, [sp, #120]
   22498:	orr	w1, w1, w3
   2249c:	str	w1, [x27]
   224a0:	ldp	x4, x3, [sp, #128]
   224a4:	str	x4, [x20, x0]
   224a8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   224ac:	ldr	x2, [x0, #2544]
   224b0:	add	x0, x0, #0x9f0
   224b4:	blr	x2
   224b8:	str	x3, [x20, x0]
   224bc:	ldr	x2, [x22, #16]
   224c0:	str	w1, [sp, #120]
   224c4:	cmp	x4, x2
   224c8:	ccmp	x3, x2, #0x1, le
   224cc:	b.lt	21df0 <mpfr_pow@@Base+0x380>  // b.tstop
   224d0:	orr	w1, w1, #0x8
   224d4:	str	w1, [x27]
   224d8:	ldp	x27, x28, [sp, #80]
   224dc:	b	21e08 <mpfr_pow@@Base+0x398>
   224e0:	ldr	w2, [x21, #8]
   224e4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   224e8:	mov	w1, #0x1                   	// #1
   224ec:	mov	w23, #0x0                   	// #0
   224f0:	cmp	w2, #0x0
   224f4:	str	w1, [x22, #8]
   224f8:	csel	x25, x25, x0, gt
   224fc:	str	x25, [x22, #16]
   22500:	b	21e08 <mpfr_pow@@Base+0x398>
   22504:	mov	w23, #0x0                   	// #0
   22508:	str	x20, [x22, #16]
   2250c:	b	21e08 <mpfr_pow@@Base+0x398>
   22510:	mrs	x2, tpidr_el0
   22514:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22518:	ldr	x3, [x0, #2576]
   2251c:	add	x0, x0, #0xa10
   22520:	blr	x3
   22524:	add	x0, x2, x0
   22528:	str	x23, [x22, #16]
   2252c:	ldr	w2, [x0]
   22530:	orr	w2, w2, #0x20
   22534:	str	w2, [x0]
   22538:	b	22310 <mpfr_pow@@Base+0x8a0>
   2253c:	mov	x0, x21
   22540:	bl	cca0 <mpfr_odd_p@plt>
   22544:	ldr	w2, [x21, #8]
   22548:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   2254c:	cmp	w2, #0x0
   22550:	csel	x25, x25, x1, gt
   22554:	str	x25, [x22, #16]
   22558:	cbnz	w0, 22314 <mpfr_pow@@Base+0x8a4>
   2255c:	b	22254 <mpfr_pow@@Base+0x7e4>
   22560:	ldr	w0, [x19, #8]
   22564:	tbz	w0, #31, 22598 <mpfr_pow@@Base+0xb28>
   22568:	mov	x0, x21
   2256c:	bl	cca0 <mpfr_odd_p@plt>
   22570:	cbz	w0, 22598 <mpfr_pow@@Base+0xb28>
   22574:	mov	w2, #0xffffffff            	// #-1
   22578:	mov	w1, w24
   2257c:	mov	x0, x22
   22580:	bl	bf40 <mpfr_overflow@plt>
   22584:	mov	w23, w0
   22588:	ldp	x27, x28, [sp, #80]
   2258c:	b	21e08 <mpfr_pow@@Base+0x398>
   22590:	mov	w2, #0x1                   	// #1
   22594:	b	21e90 <mpfr_pow@@Base+0x420>
   22598:	mov	w2, #0x1                   	// #1
   2259c:	b	22578 <mpfr_pow@@Base+0xb08>
   225a0:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   225a4:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   225a8:	add	x2, x2, #0x2c0
   225ac:	add	x0, x0, #0x200
   225b0:	mov	w1, #0x2aa                 	// #682
   225b4:	bl	cb40 <mpfr_assert_fail@plt>
   225b8:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   225bc:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   225c0:	add	x2, x2, #0x2a0
   225c4:	add	x0, x0, #0x200
   225c8:	mov	w1, #0x24b                 	// #587
   225cc:	bl	cb40 <mpfr_assert_fail@plt>
   225d0:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   225d4:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   225d8:	add	x2, x2, #0x2b0
   225dc:	add	x0, x0, #0x200
   225e0:	mov	w1, #0x289                 	// #649
   225e4:	bl	cb40 <mpfr_assert_fail@plt>

00000000000225e8 <mpfr_pow_si@@Base>:
   225e8:	stp	x29, x30, [sp, #-240]!
   225ec:	mov	x29, sp
   225f0:	stp	x19, x20, [sp, #16]
   225f4:	tbz	x2, #63, 2291c <mpfr_pow_si@@Base+0x334>
   225f8:	stp	x25, x26, [sp, #64]
   225fc:	mov	x26, x1
   22600:	mov	x19, x2
   22604:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   22608:	mov	x20, x0
   2260c:	ldr	x2, [x26, #16]
   22610:	cmp	x2, x1
   22614:	b.le	229d4 <mpfr_pow_si@@Base+0x3ec>
   22618:	ldrsw	x1, [x26, #8]
   2261c:	sub	x2, x2, #0x1
   22620:	mov	x0, x26
   22624:	stp	x21, x22, [sp, #32]
   22628:	mov	w21, w3
   2262c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   22630:	cbz	w0, 22864 <mpfr_pow_si@@Base+0x27c>
   22634:	neg	x0, x19
   22638:	stp	x23, x24, [sp, #48]
   2263c:	mov	x1, x0
   22640:	str	x1, [sp, #104]
   22644:	clz	x1, x1
   22648:	mov	w0, #0x40                  	// #64
   2264c:	sub	w1, w0, w1
   22650:	ldr	x23, [x20]
   22654:	sxtw	x1, w1
   22658:	stp	x27, x28, [sp, #80]
   2265c:	add	x22, x1, x23
   22660:	str	x1, [sp, #128]
   22664:	cmp	x23, #0x1
   22668:	add	x22, x22, #0x3
   2266c:	b.eq	22684 <mpfr_pow_si@@Base+0x9c>  // b.none
   22670:	b.le	22b84 <mpfr_pow_si@@Base+0x59c>
   22674:	sub	x1, x23, #0x1
   22678:	clz	x1, x1
   2267c:	sub	w0, w0, w1
   22680:	add	x22, x22, w0, sxtw
   22684:	mrs	x27, tpidr_el0
   22688:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2268c:	ldr	x1, [x0, #2576]
   22690:	add	x0, x0, #0xa10
   22694:	blr	x1
   22698:	mov	x7, #0xc000000000000001    	// #-4611686018427387903
   2269c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   226a0:	add	x28, sp, #0x90
   226a4:	mov	x1, x22
   226a8:	ldr	w0, [x27, x0]
   226ac:	mov	w25, #0x1                   	// #1
   226b0:	str	w0, [sp, #100]
   226b4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   226b8:	ldr	x3, [x0, #2512]
   226bc:	add	x0, x0, #0x9d0
   226c0:	blr	x3
   226c4:	add	x3, x27, x0
   226c8:	ldr	x0, [x27, x0]
   226cc:	str	x0, [sp, #112]
   226d0:	str	x7, [x3]
   226d4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   226d8:	ldr	x4, [x0, #2544]
   226dc:	add	x0, x0, #0x9f0
   226e0:	blr	x4
   226e4:	ldr	x3, [x27, x0]
   226e8:	str	x2, [x27, x0]
   226ec:	mov	x0, x28
   226f0:	str	x3, [sp, #120]
   226f4:	bl	ca80 <mpfr_init2@plt>
   226f8:	ldr	x0, [x26, #16]
   226fc:	cmp	x0, #0x0
   22700:	b.le	22714 <mpfr_pow_si@@Base+0x12c>
   22704:	ldr	w0, [x26, #8]
   22708:	cmp	w0, #0x0
   2270c:	cset	w25, le
   22710:	add	w25, w25, #0x2
   22714:	mov	x0, #0x40                  	// #64
   22718:	str	x0, [sp, #136]
   2271c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22720:	ldr	x1, [x0, #2576]
   22724:	add	x0, x0, #0xa10
   22728:	blr	x1
   2272c:	add	x24, x27, x0
   22730:	mov	w3, w25
   22734:	mov	x2, x26
   22738:	mov	x1, #0x1                   	// #1
   2273c:	str	wzr, [x27, x0]
   22740:	mov	x0, x28
   22744:	bl	c2f0 <mpfr_ui_div@plt>
   22748:	ldr	w0, [x24]
   2274c:	tbnz	w0, #1, 22968 <mpfr_pow_si@@Base+0x380>
   22750:	ldr	x2, [sp, #104]
   22754:	mov	w3, w21
   22758:	mov	x1, x28
   2275c:	mov	x0, x28
   22760:	str	wzr, [x24]
   22764:	bl	bf70 <mpfr_pow_ui@plt>
   22768:	ldr	w0, [x24]
   2276c:	tbnz	w0, #1, 22968 <mpfr_pow_si@@Base+0x380>
   22770:	tbnz	w0, #0, 22a88 <mpfr_pow_si@@Base+0x4a0>
   22774:	ldr	x0, [sp, #160]
   22778:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2277c:	cmp	x0, x1
   22780:	b.le	22a40 <mpfr_pow_si@@Base+0x458>
   22784:	ldr	x1, [sp, #144]
   22788:	cmp	w21, #0x0
   2278c:	ldr	x2, [sp, #128]
   22790:	sub	x1, x1, #0x1
   22794:	ldr	x0, [sp, #168]
   22798:	sub	x2, x22, x2
   2279c:	asr	x1, x1, #6
   227a0:	cinc	x3, x23, eq  // eq = none
   227a4:	sub	x2, x2, #0x2
   227a8:	add	x1, x1, #0x1
   227ac:	bl	c370 <mpfr_round_p@plt>
   227b0:	cbz	w0, 22a40 <mpfr_pow_si@@Base+0x458>
   227b4:	ldr	w3, [sp, #152]
   227b8:	mov	w2, w21
   227bc:	mov	x1, x28
   227c0:	mov	x0, x20
   227c4:	bl	c6a0 <mpfr_set4@plt>
   227c8:	mov	w19, w0
   227cc:	mov	x0, x28
   227d0:	bl	c070 <mpfr_clear@plt>
   227d4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   227d8:	ldr	x1, [x0, #2576]
   227dc:	add	x0, x0, #0xa10
   227e0:	blr	x1
   227e4:	add	x2, x27, x0
   227e8:	ldr	w1, [sp, #100]
   227ec:	str	w1, [x27, x0]
   227f0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   227f4:	ldr	x3, [x0, #2512]
   227f8:	add	x0, x0, #0x9d0
   227fc:	blr	x3
   22800:	ldr	x3, [sp, #112]
   22804:	str	x3, [x27, x0]
   22808:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2280c:	ldr	x4, [x0, #2544]
   22810:	add	x0, x0, #0x9f0
   22814:	blr	x4
   22818:	ldr	x1, [x20, #16]
   2281c:	ldr	x4, [sp, #120]
   22820:	str	x4, [x27, x0]
   22824:	cmp	x4, x1
   22828:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   2282c:	b.le	228ec <mpfr_pow_si@@Base+0x304>
   22830:	mov	w2, w21
   22834:	mov	w1, w19
   22838:	mov	x0, x20
   2283c:	bl	cb30 <mpfr_check_range@plt>
   22840:	ldp	x21, x22, [sp, #32]
   22844:	mov	w19, w0
   22848:	ldp	x23, x24, [sp, #48]
   2284c:	ldp	x25, x26, [sp, #64]
   22850:	ldp	x27, x28, [sp, #80]
   22854:	mov	w0, w19
   22858:	ldp	x19, x20, [sp, #16]
   2285c:	ldp	x29, x30, [sp], #240
   22860:	ret
   22864:	ldr	x1, [x26, #16]
   22868:	cmn	x19, #0x1
   2286c:	cset	w0, eq  // eq = none
   22870:	sub	x1, x1, #0x1
   22874:	cmp	x1, #0x0
   22878:	ccmp	w0, #0x0, #0x0, gt
   2287c:	b.eq	22934 <mpfr_pow_si@@Base+0x34c>  // b.none
   22880:	cmp	x1, #0x0
   22884:	ccmp	w0, #0x0, #0x0, lt  // lt = tstop
   22888:	b.ne	22960 <mpfr_pow_si@@Base+0x378>  // b.any
   2288c:	mrs	x3, tpidr_el0
   22890:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22894:	ldr	x2, [x0, #2544]
   22898:	add	x0, x0, #0x9f0
   2289c:	blr	x2
   228a0:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   228a4:	ldr	x0, [x3, x0]
   228a8:	sub	x0, x0, #0x1
   228ac:	sdiv	x0, x0, x19
   228b0:	cmp	x0, x1
   228b4:	b.le	22960 <mpfr_pow_si@@Base+0x378>
   228b8:	mov	x1, #0x1                   	// #1
   228bc:	tbz	w19, #0, 228c4 <mpfr_pow_si@@Base+0x2dc>
   228c0:	ldrsw	x1, [x26, #8]
   228c4:	mov	w3, w21
   228c8:	mov	x0, x20
   228cc:	bl	ba80 <mpfr_set_si_2exp@plt>
   228d0:	mov	w19, w0
   228d4:	mov	w0, w19
   228d8:	ldp	x19, x20, [sp, #16]
   228dc:	ldp	x21, x22, [sp, #32]
   228e0:	ldp	x25, x26, [sp, #64]
   228e4:	ldp	x29, x30, [sp], #240
   228e8:	ret
   228ec:	cbz	w19, 228fc <mpfr_pow_si@@Base+0x314>
   228f0:	ldr	w0, [sp, #100]
   228f4:	orr	w0, w0, #0x8
   228f8:	str	w0, [x2]
   228fc:	mov	w0, w19
   22900:	ldp	x19, x20, [sp, #16]
   22904:	ldp	x21, x22, [sp, #32]
   22908:	ldp	x23, x24, [sp, #48]
   2290c:	ldp	x25, x26, [sp, #64]
   22910:	ldp	x27, x28, [sp, #80]
   22914:	ldp	x29, x30, [sp], #240
   22918:	ret
   2291c:	bl	bf70 <mpfr_pow_ui@plt>
   22920:	mov	w19, w0
   22924:	mov	w0, w19
   22928:	ldp	x19, x20, [sp, #16]
   2292c:	ldp	x29, x30, [sp], #240
   22930:	ret
   22934:	mrs	x2, tpidr_el0
   22938:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2293c:	ldr	x3, [x0, #2512]
   22940:	add	x0, x0, #0x9d0
   22944:	blr	x3
   22948:	ldr	x0, [x2, x0]
   2294c:	mov	x2, #0xbfffffffffffffff    	// #-4611686018427387905
   22950:	sub	x0, x0, #0x1
   22954:	sdiv	x0, x0, x19
   22958:	cmp	x0, x1
   2295c:	b.lt	228b8 <mpfr_pow_si@@Base+0x2d0>  // b.tstop
   22960:	mul	x2, x19, x1
   22964:	b	228b8 <mpfr_pow_si@@Base+0x2d0>
   22968:	mov	x0, x28
   2296c:	bl	c070 <mpfr_clear@plt>
   22970:	mov	w2, #0x1                   	// #1
   22974:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22978:	ldr	x1, [x0, #2576]
   2297c:	add	x0, x0, #0xa10
   22980:	blr	x1
   22984:	ldr	w1, [sp, #100]
   22988:	str	w1, [x27, x0]
   2298c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22990:	ldr	x1, [x0, #2512]
   22994:	add	x0, x0, #0x9d0
   22998:	blr	x1
   2299c:	ldr	x1, [sp, #112]
   229a0:	str	x1, [x27, x0]
   229a4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   229a8:	ldr	x1, [x0, #2544]
   229ac:	add	x0, x0, #0x9f0
   229b0:	blr	x1
   229b4:	ldr	x1, [sp, #120]
   229b8:	str	x1, [x27, x0]
   229bc:	ldr	x0, [sp, #104]
   229c0:	tbnz	w0, #0, 22b7c <mpfr_pow_si@@Base+0x594>
   229c4:	mov	w1, w21
   229c8:	mov	x0, x20
   229cc:	bl	bf40 <mpfr_overflow@plt>
   229d0:	b	22840 <mpfr_pow_si@@Base+0x258>
   229d4:	mov	x0, #0x2                   	// #2
   229d8:	movk	x0, #0x8000, lsl #48
   229dc:	cmp	x2, x0
   229e0:	b.eq	22b30 <mpfr_pow_si@@Base+0x548>  // b.none
   229e4:	ldr	w0, [x26, #8]
   229e8:	mvn	x19, x19
   229ec:	and	x19, x19, #0x1
   229f0:	cmp	w0, #0x0
   229f4:	csinc	w19, w19, wzr, le
   229f8:	cmp	x2, x1
   229fc:	b.eq	22a7c <mpfr_pow_si@@Base+0x494>  // b.none
   22a00:	mrs	x2, tpidr_el0
   22a04:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22a08:	ldr	x3, [x0, #2576]
   22a0c:	add	x0, x0, #0xa10
   22a10:	blr	x3
   22a14:	add	x0, x2, x0
   22a18:	str	x1, [x20, #16]
   22a1c:	ldr	w1, [x0]
   22a20:	orr	w1, w1, #0x20
   22a24:	str	w1, [x0]
   22a28:	cbz	w19, 22b20 <mpfr_pow_si@@Base+0x538>
   22a2c:	mov	w0, #0x1                   	// #1
   22a30:	mov	w19, #0x0                   	// #0
   22a34:	ldp	x25, x26, [sp, #64]
   22a38:	str	w0, [x20, #8]
   22a3c:	b	22854 <mpfr_pow_si@@Base+0x26c>
   22a40:	ldr	x1, [sp, #136]
   22a44:	mov	x0, #0xfffffffffffffeff    	// #-257
   22a48:	movk	x0, #0x7fff, lsl #48
   22a4c:	sub	x0, x0, x22
   22a50:	cmp	x0, x1
   22a54:	b.lt	22b64 <mpfr_pow_si@@Base+0x57c>  // b.tstop
   22a58:	ldr	x0, [sp, #136]
   22a5c:	add	x22, x22, x0
   22a60:	mov	x0, x28
   22a64:	mov	x1, x22
   22a68:	add	x2, x22, x22, lsr #63
   22a6c:	asr	x2, x2, #1
   22a70:	str	x2, [sp, #136]
   22a74:	bl	bed0 <mpfr_set_prec@plt>
   22a78:	b	2271c <mpfr_pow_si@@Base+0x134>
   22a7c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   22a80:	str	x0, [x20, #16]
   22a84:	b	22a28 <mpfr_pow_si@@Base+0x440>
   22a88:	mov	x0, x28
   22a8c:	bl	c070 <mpfr_clear@plt>
   22a90:	cbnz	w21, 22bb4 <mpfr_pow_si@@Base+0x5cc>
   22a94:	add	x22, sp, #0xb0
   22a98:	add	x23, sp, #0xd0
   22a9c:	mov	x0, x22
   22aa0:	mov	x1, #0x2                   	// #2
   22aa4:	bl	ca80 <mpfr_init2@plt>
   22aa8:	mov	x0, x23
   22aac:	mov	x1, #0x40                  	// #64
   22ab0:	bl	ca80 <mpfr_init2@plt>
   22ab4:	mov	x1, x19
   22ab8:	mov	x0, x23
   22abc:	mov	w3, #0x0                   	// #0
   22ac0:	mov	x2, #0x0                   	// #0
   22ac4:	bl	ba80 <mpfr_set_si_2exp@plt>
   22ac8:	cbnz	w0, 22b9c <mpfr_pow_si@@Base+0x5b4>
   22acc:	mov	x1, x26
   22ad0:	mov	x2, x23
   22ad4:	mov	x5, #0x0                   	// #0
   22ad8:	mov	w4, #0x1                   	// #1
   22adc:	mov	w3, #0x0                   	// #0
   22ae0:	mov	x0, x22
   22ae4:	bl	c6f0 <mpfr_pow_general@plt>
   22ae8:	mov	w19, w0
   22aec:	mov	x0, x23
   22af0:	bl	c070 <mpfr_clear@plt>
   22af4:	ldr	w3, [sp, #184]
   22af8:	mov	x1, x22
   22afc:	ldr	w0, [sp, #100]
   22b00:	mov	w2, #0x0                   	// #0
   22b04:	orr	w0, w0, #0x1
   22b08:	str	w0, [sp, #100]
   22b0c:	mov	x0, x20
   22b10:	bl	c6a0 <mpfr_set4@plt>
   22b14:	mov	x0, x22
   22b18:	bl	c070 <mpfr_clear@plt>
   22b1c:	b	227d4 <mpfr_pow_si@@Base+0x1ec>
   22b20:	mov	w0, #0xffffffff            	// #-1
   22b24:	ldp	x25, x26, [sp, #64]
   22b28:	str	w0, [x20, #8]
   22b2c:	b	22854 <mpfr_pow_si@@Base+0x26c>
   22b30:	mrs	x1, tpidr_el0
   22b34:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22b38:	ldr	x3, [x0, #2576]
   22b3c:	add	x0, x0, #0xa10
   22b40:	blr	x3
   22b44:	add	x0, x1, x0
   22b48:	mov	w19, #0x0                   	// #0
   22b4c:	ldp	x25, x26, [sp, #64]
   22b50:	str	x2, [x20, #16]
   22b54:	ldr	w1, [x0]
   22b58:	orr	w1, w1, #0x4
   22b5c:	str	w1, [x0]
   22b60:	b	22854 <mpfr_pow_si@@Base+0x26c>
   22b64:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   22b68:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   22b6c:	add	x2, x2, #0xd20
   22b70:	add	x0, x0, #0x2d0
   22b74:	mov	w1, #0xed                  	// #237
   22b78:	bl	cb40 <mpfr_assert_fail@plt>
   22b7c:	ldr	w2, [x26, #8]
   22b80:	b	229c4 <mpfr_pow_si@@Base+0x3dc>
   22b84:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   22b88:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   22b8c:	add	x2, x2, #0xd08
   22b90:	add	x0, x0, #0x2d0
   22b94:	mov	w1, #0x9d                  	// #157
   22b98:	bl	cb40 <mpfr_assert_fail@plt>
   22b9c:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   22ba0:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   22ba4:	add	x2, x2, #0x2b0
   22ba8:	add	x0, x0, #0x2d0
   22bac:	mov	w1, #0xd8                  	// #216
   22bb0:	bl	cb40 <mpfr_assert_fail@plt>
   22bb4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22bb8:	ldr	x1, [x0, #2512]
   22bbc:	add	x0, x0, #0x9d0
   22bc0:	blr	x1
   22bc4:	ldr	x1, [sp, #112]
   22bc8:	str	x1, [x27, x0]
   22bcc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22bd0:	ldr	x1, [x0, #2544]
   22bd4:	add	x0, x0, #0x9f0
   22bd8:	blr	x1
   22bdc:	ldr	w1, [sp, #100]
   22be0:	str	w1, [x24]
   22be4:	ldr	x1, [sp, #120]
   22be8:	str	x1, [x27, x0]
   22bec:	ldr	x0, [sp, #104]
   22bf0:	tbz	w0, #0, 22c08 <mpfr_pow_si@@Base+0x620>
   22bf4:	ldr	w2, [x26, #8]
   22bf8:	mov	w1, w21
   22bfc:	mov	x0, x20
   22c00:	bl	c3c0 <mpfr_underflow@plt>
   22c04:	b	22840 <mpfr_pow_si@@Base+0x258>
   22c08:	mov	w2, #0x1                   	// #1
   22c0c:	b	22bf8 <mpfr_pow_si@@Base+0x610>

0000000000022c10 <mpfr_pow_ui@@Base>:
   22c10:	stp	x29, x30, [sp, #-192]!
   22c14:	mov	x29, sp
   22c18:	stp	x19, x20, [sp, #16]
   22c1c:	cbz	x2, 22fdc <mpfr_pow_ui@@Base+0x3cc>
   22c20:	mov	x20, x2
   22c24:	stp	x21, x22, [sp, #32]
   22c28:	mov	x21, x1
   22c2c:	ldr	x2, [x1, #16]
   22c30:	stp	x23, x24, [sp, #48]
   22c34:	mov	x23, x0
   22c38:	stp	x25, x26, [sp, #64]
   22c3c:	mov	w25, w3
   22c40:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   22c44:	cmp	x2, x3
   22c48:	b.le	22ff8 <mpfr_pow_ui@@Base+0x3e8>
   22c4c:	cmp	x20, #0x2
   22c50:	b.ls	23040 <mpfr_pow_ui@@Base+0x430>  // b.plast
   22c54:	mrs	x19, tpidr_el0
   22c58:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22c5c:	ldr	x1, [x0, #2576]
   22c60:	add	x0, x0, #0xa10
   22c64:	blr	x1
   22c68:	stp	x27, x28, [sp, #80]
   22c6c:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   22c70:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   22c74:	ldr	w0, [x19, x0]
   22c78:	str	w0, [sp, #104]
   22c7c:	ldr	x1, [x23]
   22c80:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22c84:	ldr	x3, [x0, #2512]
   22c88:	add	x0, x0, #0x9d0
   22c8c:	blr	x3
   22c90:	add	x3, x19, x0
   22c94:	ldr	x0, [x19, x0]
   22c98:	str	x0, [sp, #112]
   22c9c:	str	x4, [x3]
   22ca0:	add	x22, x1, #0x43
   22ca4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22ca8:	ldr	x5, [x0, #2544]
   22cac:	add	x0, x0, #0x9f0
   22cb0:	blr	x5
   22cb4:	ldr	x3, [x19, x0]
   22cb8:	str	x2, [x19, x0]
   22cbc:	str	x3, [sp, #120]
   22cc0:	cmp	x1, #0x1
   22cc4:	b.eq	230fc <mpfr_pow_ui@@Base+0x4ec>  // b.none
   22cc8:	b.le	23108 <mpfr_pow_ui@@Base+0x4f8>
   22ccc:	sub	x1, x1, #0x1
   22cd0:	mov	w26, #0x40                  	// #64
   22cd4:	clz	x1, x1
   22cd8:	sub	w1, w26, w1
   22cdc:	add	x0, x22, w1, sxtw
   22ce0:	str	x0, [sp, #96]
   22ce4:	ldr	x1, [sp, #96]
   22ce8:	add	x27, sp, #0xa0
   22cec:	mov	x0, x27
   22cf0:	mov	w22, #0x27                  	// #39
   22cf4:	bl	ca80 <mpfr_init2@plt>
   22cf8:	ldr	w0, [x21, #8]
   22cfc:	mov	x1, #0x40                  	// #64
   22d00:	str	x1, [sp, #136]
   22d04:	cmp	w0, #0x0
   22d08:	cset	w24, le
   22d0c:	add	w24, w24, #0x2
   22d10:	mov	x0, x20
   22d14:	mov	w1, #0x0                   	// #0
   22d18:	mov	w7, w1
   22d1c:	lsr	x0, x0, #1
   22d20:	add	w1, w1, #0x1
   22d24:	cbnz	x0, 22d18 <mpfr_pow_ui@@Base+0x108>
   22d28:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22d2c:	ldr	x2, [x0, #2576]
   22d30:	add	x0, x0, #0xa10
   22d34:	blr	x2
   22d38:	sxtw	x1, w1
   22d3c:	mov	x2, x21
   22d40:	mov	w3, #0x2                   	// #2
   22d44:	str	wzr, [x19, x0]
   22d48:	mov	x0, x27
   22d4c:	str	w7, [sp, #108]
   22d50:	str	x1, [sp, #128]
   22d54:	mov	x1, x21
   22d58:	bl	bd50 <mpfr_mul@plt>
   22d5c:	mov	w28, w0
   22d60:	ldr	w7, [sp, #108]
   22d64:	sub	w1, w7, #0x1
   22d68:	lsr	x1, x20, x1
   22d6c:	tbnz	w1, #0, 22f0c <mpfr_pow_ui@@Base+0x2fc>
   22d70:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22d74:	ldr	x1, [x0, #2576]
   22d78:	add	x0, x0, #0xa10
   22d7c:	blr	x1
   22d80:	sub	w26, w7, #0x2
   22d84:	ldr	w0, [x19, x0]
   22d88:	cmp	w7, #0x1
   22d8c:	b.ne	22db4 <mpfr_pow_ui@@Base+0x1a4>  // b.any
   22d90:	b	22e18 <mpfr_pow_ui@@Base+0x208>
   22d94:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22d98:	ldr	x1, [x0, #2576]
   22d9c:	add	x0, x0, #0xa10
   22da0:	blr	x1
   22da4:	sub	w26, w26, #0x1
   22da8:	ldr	w0, [x19, x0]
   22dac:	cmn	w26, #0x1
   22db0:	b.eq	22e18 <mpfr_pow_ui@@Base+0x208>  // b.none
   22db4:	tst	w0, w22
   22db8:	b.ne	22e18 <mpfr_pow_ui@@Base+0x208>  // b.any
   22dbc:	mov	x2, x27
   22dc0:	mov	x1, x27
   22dc4:	mov	x0, x27
   22dc8:	mov	w3, #0x2                   	// #2
   22dcc:	bl	bd50 <mpfr_mul@plt>
   22dd0:	orr	w28, w28, w0
   22dd4:	lsr	x0, x20, x26
   22dd8:	tbz	w0, #0, 22d94 <mpfr_pow_ui@@Base+0x184>
   22ddc:	mov	x1, x27
   22de0:	mov	w3, w24
   22de4:	mov	x2, x21
   22de8:	mov	x0, x27
   22dec:	bl	bd50 <mpfr_mul@plt>
   22df0:	sub	w26, w26, #0x1
   22df4:	orr	w28, w28, w0
   22df8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22dfc:	ldr	x1, [x0, #2576]
   22e00:	add	x0, x0, #0xa10
   22e04:	blr	x1
   22e08:	cmn	w26, #0x1
   22e0c:	ldr	w0, [x19, x0]
   22e10:	b.ne	22db4 <mpfr_pow_ui@@Base+0x1a4>  // b.any
   22e14:	nop
   22e18:	and	w1, w0, #0x2
   22e1c:	cbnz	w28, 23064 <mpfr_pow_ui@@Base+0x454>
   22e20:	cbnz	w1, 22f30 <mpfr_pow_ui@@Base+0x320>
   22e24:	tbnz	w0, #0, 22f30 <mpfr_pow_ui@@Base+0x320>
   22e28:	ldr	w3, [sp, #168]
   22e2c:	mov	w2, w25
   22e30:	mov	x1, x27
   22e34:	mov	x0, x23
   22e38:	bl	c6a0 <mpfr_set4@plt>
   22e3c:	mov	w20, w0
   22e40:	mov	x0, x27
   22e44:	bl	c070 <mpfr_clear@plt>
   22e48:	ldr	x1, [x23, #16]
   22e4c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22e50:	ldr	x2, [x0, #2576]
   22e54:	add	x0, x0, #0xa10
   22e58:	blr	x2
   22e5c:	ldr	w2, [sp, #104]
   22e60:	str	w2, [x19, x0]
   22e64:	add	x2, x19, x0
   22e68:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22e6c:	ldr	x3, [x0, #2512]
   22e70:	add	x0, x0, #0x9d0
   22e74:	blr	x3
   22e78:	ldr	x3, [sp, #112]
   22e7c:	str	x3, [x19, x0]
   22e80:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22e84:	ldr	x4, [x0, #2544]
   22e88:	add	x0, x0, #0x9f0
   22e8c:	blr	x4
   22e90:	ldr	x4, [sp, #120]
   22e94:	str	x4, [x19, x0]
   22e98:	cmp	x4, x1
   22e9c:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   22ea0:	b.le	22ed8 <mpfr_pow_ui@@Base+0x2c8>
   22ea4:	mov	w2, w25
   22ea8:	mov	w1, w20
   22eac:	mov	x0, x23
   22eb0:	bl	cb30 <mpfr_check_range@plt>
   22eb4:	mov	w20, w0
   22eb8:	mov	w0, w20
   22ebc:	ldp	x19, x20, [sp, #16]
   22ec0:	ldp	x21, x22, [sp, #32]
   22ec4:	ldp	x23, x24, [sp, #48]
   22ec8:	ldp	x25, x26, [sp, #64]
   22ecc:	ldp	x27, x28, [sp, #80]
   22ed0:	ldp	x29, x30, [sp], #192
   22ed4:	ret
   22ed8:	cbnz	w20, 22efc <mpfr_pow_ui@@Base+0x2ec>
   22edc:	ldp	x21, x22, [sp, #32]
   22ee0:	ldp	x23, x24, [sp, #48]
   22ee4:	ldp	x25, x26, [sp, #64]
   22ee8:	ldp	x27, x28, [sp, #80]
   22eec:	mov	w0, w20
   22ef0:	ldp	x19, x20, [sp, #16]
   22ef4:	ldp	x29, x30, [sp], #192
   22ef8:	ret
   22efc:	ldr	w0, [sp, #104]
   22f00:	orr	w0, w0, #0x8
   22f04:	str	w0, [x2]
   22f08:	b	22edc <mpfr_pow_ui@@Base+0x2cc>
   22f0c:	mov	w3, w24
   22f10:	mov	x2, x21
   22f14:	mov	x1, x27
   22f18:	mov	x0, x27
   22f1c:	str	w7, [sp, #108]
   22f20:	bl	bd50 <mpfr_mul@plt>
   22f24:	ldr	w7, [sp, #108]
   22f28:	orr	w28, w28, w0
   22f2c:	b	22d70 <mpfr_pow_ui@@Base+0x160>
   22f30:	mov	x0, x27
   22f34:	bl	c070 <mpfr_clear@plt>
   22f38:	add	x2, sp, #0x90
   22f3c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22f40:	ldr	x1, [x0, #2576]
   22f44:	add	x0, x0, #0xa10
   22f48:	blr	x1
   22f4c:	ldr	w1, [sp, #104]
   22f50:	str	w1, [x19, x0]
   22f54:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22f58:	ldr	x1, [x0, #2512]
   22f5c:	add	x0, x0, #0x9d0
   22f60:	blr	x1
   22f64:	ldr	x1, [sp, #112]
   22f68:	str	x1, [x19, x0]
   22f6c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   22f70:	ldr	x1, [x0, #2544]
   22f74:	add	x0, x0, #0x9f0
   22f78:	blr	x1
   22f7c:	ldr	x1, [sp, #120]
   22f80:	str	x1, [x19, x0]
   22f84:	mov	x19, x2
   22f88:	mov	x0, x2
   22f8c:	bl	bf90 <mpfr_mpz_init@plt>
   22f90:	mov	x1, x20
   22f94:	mov	x0, x19
   22f98:	bl	bcb0 <__gmpz_set_ui@plt>
   22f9c:	mov	w3, w25
   22fa0:	mov	x2, x19
   22fa4:	mov	x1, x21
   22fa8:	mov	x0, x23
   22fac:	bl	bef0 <mpfr_pow_z@plt>
   22fb0:	mov	w20, w0
   22fb4:	mov	x0, x19
   22fb8:	bl	c170 <mpfr_mpz_clear@plt>
   22fbc:	mov	w0, w20
   22fc0:	ldp	x19, x20, [sp, #16]
   22fc4:	ldp	x21, x22, [sp, #32]
   22fc8:	ldp	x23, x24, [sp, #48]
   22fcc:	ldp	x25, x26, [sp, #64]
   22fd0:	ldp	x27, x28, [sp, #80]
   22fd4:	ldp	x29, x30, [sp], #192
   22fd8:	ret
   22fdc:	mov	x1, #0x1                   	// #1
   22fe0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   22fe4:	mov	w20, w0
   22fe8:	mov	w0, w20
   22fec:	ldp	x19, x20, [sp, #16]
   22ff0:	ldp	x29, x30, [sp], #192
   22ff4:	ret
   22ff8:	mov	x0, #0x2                   	// #2
   22ffc:	movk	x0, #0x8000, lsl #48
   23000:	cmp	x2, x0
   23004:	b.eq	2318c <mpfr_pow_ui@@Base+0x57c>  // b.none
   23008:	cmp	x2, x3
   2300c:	b.eq	23148 <mpfr_pow_ui@@Base+0x538>  // b.none
   23010:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   23014:	str	x0, [x23, #16]
   23018:	ldr	w0, [x1, #8]
   2301c:	cmp	w0, #0x0
   23020:	b.le	23180 <mpfr_pow_ui@@Base+0x570>
   23024:	mov	w0, #0x1                   	// #1
   23028:	mov	w20, #0x0                   	// #0
   2302c:	ldp	x21, x22, [sp, #32]
   23030:	ldp	x25, x26, [sp, #64]
   23034:	str	w0, [x23, #8]
   23038:	ldp	x23, x24, [sp, #48]
   2303c:	b	22eec <mpfr_pow_ui@@Base+0x2dc>
   23040:	cmp	x20, #0x1
   23044:	b.eq	23128 <mpfr_pow_ui@@Base+0x518>  // b.none
   23048:	mov	w2, w25
   2304c:	bl	c400 <mpfr_sqr@plt>
   23050:	mov	w20, w0
   23054:	ldp	x21, x22, [sp, #32]
   23058:	ldp	x23, x24, [sp, #48]
   2305c:	ldp	x25, x26, [sp, #64]
   23060:	b	22eec <mpfr_pow_ui@@Base+0x2dc>
   23064:	cbnz	w1, 22f30 <mpfr_pow_ui@@Base+0x320>
   23068:	tbnz	w0, #0, 22f30 <mpfr_pow_ui@@Base+0x320>
   2306c:	ldr	x0, [sp, #176]
   23070:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   23074:	cmp	x0, x1
   23078:	b.le	230b4 <mpfr_pow_ui@@Base+0x4a4>
   2307c:	ldr	x1, [sp, #160]
   23080:	cmp	w25, #0x0
   23084:	ldr	x2, [sp, #96]
   23088:	sub	x1, x1, #0x1
   2308c:	ldr	x4, [sp, #128]
   23090:	asr	x1, x1, #6
   23094:	ldr	x0, [sp, #184]
   23098:	sub	x2, x2, #0x1
   2309c:	ldr	x3, [x23]
   230a0:	add	x1, x1, #0x1
   230a4:	sub	x2, x2, x4
   230a8:	cinc	x3, x3, eq  // eq = none
   230ac:	bl	c370 <mpfr_round_p@plt>
   230b0:	cbnz	w0, 22e28 <mpfr_pow_ui@@Base+0x218>
   230b4:	ldr	x1, [sp, #96]
   230b8:	mov	x0, #0xfffffffffffffeff    	// #-257
   230bc:	movk	x0, #0x7fff, lsl #48
   230c0:	sub	x0, x0, x1
   230c4:	ldr	x1, [sp, #136]
   230c8:	cmp	x0, x1
   230cc:	b.lt	231c8 <mpfr_pow_ui@@Base+0x5b8>  // b.tstop
   230d0:	ldr	x0, [sp, #96]
   230d4:	ldr	x1, [sp, #136]
   230d8:	add	x0, x0, x1
   230dc:	mov	x1, x0
   230e0:	mov	x0, x27
   230e4:	str	x1, [sp, #96]
   230e8:	add	x2, x1, x1, lsr #63
   230ec:	asr	x2, x2, #1
   230f0:	str	x2, [sp, #136]
   230f4:	bl	bed0 <mpfr_set_prec@plt>
   230f8:	b	22d10 <mpfr_pow_ui@@Base+0x100>
   230fc:	mov	x0, #0x44                  	// #68
   23100:	str	x0, [sp, #96]
   23104:	b	22ce4 <mpfr_pow_ui@@Base+0xd4>
   23108:	mov	w1, #0x5e                  	// #94
   2310c:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   23110:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   23114:	add	x2, x2, #0x2e0
   23118:	add	x0, x0, #0x2f8
   2311c:	bl	cb40 <mpfr_assert_fail@plt>
   23120:	ldr	x1, [x23]
   23124:	b	22ccc <mpfr_pow_ui@@Base+0xbc>
   23128:	ldr	w3, [x1, #8]
   2312c:	mov	w2, w25
   23130:	bl	c6a0 <mpfr_set4@plt>
   23134:	mov	w20, w0
   23138:	ldp	x21, x22, [sp, #32]
   2313c:	ldp	x23, x24, [sp, #48]
   23140:	ldp	x25, x26, [sp, #64]
   23144:	b	22eec <mpfr_pow_ui@@Base+0x2dc>
   23148:	ldr	w1, [x1, #8]
   2314c:	mov	w0, #0x1                   	// #1
   23150:	tbz	w1, #31, 23160 <mpfr_pow_ui@@Base+0x550>
   23154:	tst	x20, #0x1
   23158:	mov	w0, #0xffffffff            	// #-1
   2315c:	cneg	w0, w0, eq  // eq = none
   23160:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   23164:	mov	w20, #0x0                   	// #0
   23168:	ldp	x21, x22, [sp, #32]
   2316c:	ldp	x25, x26, [sp, #64]
   23170:	str	w0, [x23, #8]
   23174:	str	x1, [x23, #16]
   23178:	ldp	x23, x24, [sp, #48]
   2317c:	b	22eec <mpfr_pow_ui@@Base+0x2dc>
   23180:	mov	w0, #0xffffffff            	// #-1
   23184:	tbnz	w20, #0, 23028 <mpfr_pow_ui@@Base+0x418>
   23188:	b	23024 <mpfr_pow_ui@@Base+0x414>
   2318c:	mrs	x1, tpidr_el0
   23190:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   23194:	ldr	x3, [x0, #2576]
   23198:	add	x0, x0, #0xa10
   2319c:	blr	x3
   231a0:	add	x0, x1, x0
   231a4:	mov	w20, #0x0                   	// #0
   231a8:	ldp	x21, x22, [sp, #32]
   231ac:	ldr	w1, [x0]
   231b0:	ldp	x25, x26, [sp, #64]
   231b4:	orr	w1, w1, #0x4
   231b8:	str	w1, [x0]
   231bc:	str	x2, [x23, #16]
   231c0:	ldp	x23, x24, [sp, #48]
   231c4:	b	22eec <mpfr_pow_ui@@Base+0x2dc>
   231c8:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   231cc:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   231d0:	add	x2, x2, #0x830
   231d4:	add	x0, x0, #0x2f8
   231d8:	mov	w1, #0x86                  	// #134
   231dc:	bl	cb40 <mpfr_assert_fail@plt>

00000000000231e0 <mpfr_print_mant_binary@@Base>:
   231e0:	stp	x29, x30, [sp, #-96]!
   231e4:	mov	x29, sp
   231e8:	stp	x19, x20, [sp, #16]
   231ec:	adrp	x19, 7f000 <__gmpfr_l2b@@Base+0x200>
   231f0:	stp	x21, x22, [sp, #32]
   231f4:	mov	x21, #0x40                  	// #64
   231f8:	stp	x23, x24, [sp, #48]
   231fc:	mov	x23, x2
   23200:	mov	x24, x1
   23204:	mov	x1, x0
   23208:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   2320c:	add	x0, x0, #0x308
   23210:	stp	x25, x26, [sp, #64]
   23214:	mov	x25, #0x0                   	// #0
   23218:	stp	x27, x28, [sp, #80]
   2321c:	sub	x27, x2, #0x1
   23220:	bl	cbf0 <printf@plt>
   23224:	ldr	x19, [x19, #3992]
   23228:	asr	x27, x27, #6
   2322c:	mov	x20, x27
   23230:	mov	x26, x19
   23234:	nop
   23238:	mov	x28, x25
   2323c:	add	w22, w25, #0x3f
   23240:	b	2324c <mpfr_print_mant_binary@@Base+0x6c>
   23244:	cmp	x21, x28
   23248:	b.eq	23288 <mpfr_print_mant_binary@@Base+0xa8>  // b.none
   2324c:	ldr	x0, [x24, x20, lsl #3]
   23250:	sub	w2, w22, w28
   23254:	ldr	x1, [x19]
   23258:	add	x28, x28, #0x1
   2325c:	lsr	x0, x0, x2
   23260:	and	x0, x0, #0x1
   23264:	add	w0, w0, #0x30
   23268:	bl	bd20 <putc@plt>
   2326c:	cmp	x23, x28
   23270:	b.ne	23244 <mpfr_print_mant_binary@@Base+0x64>  // b.any
   23274:	ldr	x1, [x19]
   23278:	mov	w0, #0x5b                  	// #91
   2327c:	bl	bd20 <putc@plt>
   23280:	cmp	x21, x28
   23284:	b.ne	2324c <mpfr_print_mant_binary@@Base+0x6c>  // b.any
   23288:	ldr	x1, [x26]
   2328c:	sub	x20, x20, #0x1
   23290:	mov	w0, #0x2e                  	// #46
   23294:	add	x25, x25, #0x40
   23298:	add	x21, x21, #0x40
   2329c:	bl	bd20 <putc@plt>
   232a0:	cmn	x20, #0x1
   232a4:	b.ne	23238 <mpfr_print_mant_binary@@Base+0x58>  // b.any
   232a8:	add	x27, x27, #0x1
   232ac:	ldr	x1, [x26]
   232b0:	cmp	x23, x27, lsl #6
   232b4:	b.le	232d8 <mpfr_print_mant_binary@@Base+0xf8>
   232b8:	ldp	x19, x20, [sp, #16]
   232bc:	mov	w0, #0xa                   	// #10
   232c0:	ldp	x21, x22, [sp, #32]
   232c4:	ldp	x23, x24, [sp, #48]
   232c8:	ldp	x25, x26, [sp, #64]
   232cc:	ldp	x27, x28, [sp, #80]
   232d0:	ldp	x29, x30, [sp], #96
   232d4:	b	bd20 <putc@plt>
   232d8:	mov	w0, #0x5d                  	// #93
   232dc:	bl	bd20 <putc@plt>
   232e0:	ldr	x1, [x26]
   232e4:	mov	w0, #0xa                   	// #10
   232e8:	ldp	x19, x20, [sp, #16]
   232ec:	ldp	x21, x22, [sp, #32]
   232f0:	ldp	x23, x24, [sp, #48]
   232f4:	ldp	x25, x26, [sp, #64]
   232f8:	ldp	x27, x28, [sp, #80]
   232fc:	ldp	x29, x30, [sp], #96
   23300:	b	bd20 <putc@plt>
   23304:	nop

0000000000023308 <mpfr_print_rnd_mode@@Base>:
   23308:	mov	w2, w0
   2330c:	cmp	w0, #0x3
   23310:	b.eq	2337c <mpfr_print_rnd_mode@@Base+0x74>  // b.none
   23314:	b.gt	23348 <mpfr_print_rnd_mode@@Base+0x40>
   23318:	cmp	w0, #0x1
   2331c:	b.eq	23370 <mpfr_print_rnd_mode@@Base+0x68>  // b.none
   23320:	cmp	w0, #0x2
   23324:	adrp	x1, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   23328:	add	x0, x1, #0x320
   2332c:	b.ne	23334 <mpfr_print_rnd_mode@@Base+0x2c>  // b.any
   23330:	ret
   23334:	cmp	w2, #0x0
   23338:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   2333c:	add	x0, x0, #0x340
   23340:	csel	x0, x0, xzr, eq  // eq = none
   23344:	ret
   23348:	cmp	w0, #0x4
   2334c:	b.eq	23364 <mpfr_print_rnd_mode@@Base+0x5c>  // b.none
   23350:	cmp	w0, #0x5
   23354:	b.ne	23388 <mpfr_print_rnd_mode@@Base+0x80>  // b.any
   23358:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   2335c:	add	x0, x0, #0x360
   23360:	ret
   23364:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   23368:	add	x0, x0, #0x350
   2336c:	ret
   23370:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   23374:	add	x0, x0, #0x310
   23378:	ret
   2337c:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   23380:	add	x0, x0, #0x330
   23384:	ret
   23388:	mov	x0, #0x0                   	// #0
   2338c:	ret

0000000000023390 <mpfr_reldiff@@Base>:
   23390:	stp	x29, x30, [sp, #-80]!
   23394:	mov	x29, sp
   23398:	stp	x19, x20, [sp, #16]
   2339c:	mov	x19, x1
   233a0:	mov	x20, x0
   233a4:	stp	x21, x22, [sp, #32]
   233a8:	mov	x22, x2
   233ac:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   233b0:	ldr	x2, [x19, #16]
   233b4:	mov	w21, w3
   233b8:	cmp	x2, x1
   233bc:	b.le	23498 <mpfr_reldiff@@Base+0x108>
   233c0:	ldr	x0, [x22, #16]
   233c4:	cmp	x0, x1
   233c8:	b.le	234f0 <mpfr_reldiff@@Base+0x160>
   233cc:	cmp	x19, x20
   233d0:	b.eq	23420 <mpfr_reldiff@@Base+0x90>  // b.none
   233d4:	mov	x2, x22
   233d8:	mov	w3, w21
   233dc:	mov	x1, x19
   233e0:	mov	x0, x20
   233e4:	bl	bb70 <mpfr_sub@plt>
   233e8:	mov	w2, w21
   233ec:	mov	x1, x20
   233f0:	mov	w3, #0x1                   	// #1
   233f4:	mov	x0, x20
   233f8:	bl	c6a0 <mpfr_set4@plt>
   233fc:	mov	w3, w21
   23400:	mov	x2, x19
   23404:	mov	x1, x20
   23408:	mov	x0, x20
   2340c:	bl	c620 <mpfr_div@plt>
   23410:	ldp	x19, x20, [sp, #16]
   23414:	ldp	x21, x22, [sp, #32]
   23418:	ldp	x29, x30, [sp], #80
   2341c:	ret
   23420:	ldr	x1, [x19]
   23424:	add	x20, sp, #0x30
   23428:	mov	x0, x20
   2342c:	bl	ca80 <mpfr_init2@plt>
   23430:	ldr	w3, [x19, #8]
   23434:	mov	x1, x19
   23438:	mov	x0, x20
   2343c:	mov	w2, #0x0                   	// #0
   23440:	bl	c6a0 <mpfr_set4@plt>
   23444:	mov	w3, w21
   23448:	mov	x2, x22
   2344c:	mov	x1, x19
   23450:	mov	x0, x19
   23454:	bl	bb70 <mpfr_sub@plt>
   23458:	mov	w2, w21
   2345c:	mov	x1, x19
   23460:	mov	x0, x19
   23464:	mov	w3, #0x1                   	// #1
   23468:	bl	c6a0 <mpfr_set4@plt>
   2346c:	mov	w3, w21
   23470:	mov	x2, x20
   23474:	mov	x1, x19
   23478:	mov	x0, x19
   2347c:	bl	c620 <mpfr_div@plt>
   23480:	mov	x0, x20
   23484:	bl	c070 <mpfr_clear@plt>
   23488:	ldp	x19, x20, [sp, #16]
   2348c:	ldp	x21, x22, [sp, #32]
   23490:	ldp	x29, x30, [sp], #80
   23494:	ret
   23498:	mov	x4, #0x2                   	// #2
   2349c:	movk	x4, #0x8000, lsl #48
   234a0:	cmp	x2, x4
   234a4:	b.eq	234e0 <mpfr_reldiff@@Base+0x150>  // b.none
   234a8:	ldr	x5, [x22, #16]
   234ac:	cmp	x5, x4
   234b0:	b.eq	234e0 <mpfr_reldiff@@Base+0x150>  // b.none
   234b4:	cmp	x2, x1
   234b8:	b.ne	2351c <mpfr_reldiff@@Base+0x18c>  // b.any
   234bc:	cmp	x5, x2
   234c0:	b.ne	234e0 <mpfr_reldiff@@Base+0x150>  // b.any
   234c4:	ldr	w0, [x19, #8]
   234c8:	ldr	w1, [x22, #8]
   234cc:	cmp	w1, w0
   234d0:	b.ne	234e0 <mpfr_reldiff@@Base+0x150>  // b.any
   234d4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   234d8:	str	x0, [x20, #16]
   234dc:	b	23410 <mpfr_reldiff@@Base+0x80>
   234e0:	mov	x0, #0x2                   	// #2
   234e4:	movk	x0, #0x8000, lsl #48
   234e8:	str	x0, [x20, #16]
   234ec:	b	23410 <mpfr_reldiff@@Base+0x80>
   234f0:	mov	x2, #0x2                   	// #2
   234f4:	movk	x2, #0x8000, lsl #48
   234f8:	cmp	x0, x2
   234fc:	b.eq	234e0 <mpfr_reldiff@@Base+0x150>  // b.none
   23500:	cmp	x0, x1
   23504:	b.ne	233cc <mpfr_reldiff@@Base+0x3c>  // b.any
   23508:	ldr	w1, [x19, #8]
   2350c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   23510:	str	w1, [x20, #8]
   23514:	str	x0, [x20, #16]
   23518:	b	23410 <mpfr_reldiff@@Base+0x80>
   2351c:	cmp	x5, x1
   23520:	b.eq	23508 <mpfr_reldiff@@Base+0x178>  // b.none
   23524:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   23528:	cmp	x2, x1
   2352c:	b.ne	233cc <mpfr_reldiff@@Base+0x3c>  // b.any
   23530:	ldrsw	x1, [x22, #8]
   23534:	mov	x2, #0x0                   	// #0
   23538:	bl	ba80 <mpfr_set_si_2exp@plt>
   2353c:	b	23410 <mpfr_reldiff@@Base+0x80>

0000000000023540 <mpfr_round_raw@@Base>:
   23540:	stp	x29, x30, [sp, #-32]!
   23544:	cmp	x4, #0x0
   23548:	sub	x8, x2, #0x1
   2354c:	mov	x29, sp
   23550:	add	x7, x4, #0x3f
   23554:	csel	x7, x7, x4, lt  // lt = tstop
   23558:	stp	x19, x20, [sp, #16]
   2355c:	asr	x8, x8, #6
   23560:	mov	x9, x2
   23564:	mov	x20, x0
   23568:	add	x2, x8, #0x1
   2356c:	asr	x7, x7, #6
   23570:	cmp	w5, #0x5
   23574:	and	w8, w4, #0x3f
   23578:	b.eq	23708 <mpfr_round_raw@@Base+0x1c8>  // b.none
   2357c:	cmp	x9, x4
   23580:	b.le	23714 <mpfr_round_raw@@Base+0x1d4>
   23584:	sub	x4, x2, x7
   23588:	sub	x10, x4, #0x1
   2358c:	cbz	w8, 23804 <mpfr_round_raw@@Base+0x2c4>
   23590:	neg	w0, w8
   23594:	add	x7, x7, #0x1
   23598:	mov	x9, #0x1                   	// #1
   2359c:	sub	x4, x2, x7
   235a0:	lsl	x0, x9, x0
   235a4:	sub	x2, x0, #0x1
   235a8:	neg	x19, x0
   235ac:	ldr	x0, [x1, x10, lsl #3]
   235b0:	add	w9, w5, #0x1
   235b4:	cmp	w9, #0x1
   235b8:	and	x0, x2, x0
   235bc:	b.ls	23658 <mpfr_round_raw@@Base+0x118>  // b.plast
   235c0:	cmp	w5, #0x1
   235c4:	b.eq	23760 <mpfr_round_raw@@Base+0x220>  // b.none
   235c8:	add	w5, w3, w5
   235cc:	cmp	w5, #0x3
   235d0:	b.eq	23760 <mpfr_round_raw@@Base+0x220>  // b.none
   235d4:	cbz	x0, 238c8 <mpfr_round_raw@@Base+0x388>
   235d8:	cmp	w8, #0x0
   235dc:	neg	w0, w8
   235e0:	ldr	x8, [x1, x4, lsl #3]
   235e4:	mov	x2, #0x1                   	// #1
   235e8:	mov	w5, #0x1                   	// #1
   235ec:	lsl	x0, x2, x0
   235f0:	sub	w3, w5, w3, lsl #1
   235f4:	csel	x0, x0, x2, ne  // ne = any
   235f8:	str	w3, [x6]
   235fc:	adds	x0, x0, x8
   23600:	str	x0, [x20]
   23604:	add	x1, x1, x4, lsl #3
   23608:	mov	x3, x0
   2360c:	b.cs	236f4 <mpfr_round_raw@@Base+0x1b4>  // b.hs, b.nlast
   23610:	cmp	x1, x20
   23614:	mov	w0, #0x0                   	// #0
   23618:	b.eq	23644 <mpfr_round_raw@@Base+0x104>  // b.none
   2361c:	cmp	x7, #0x1
   23620:	b.le	23644 <mpfr_round_raw@@Base+0x104>
   23624:	nop
   23628:	ldr	x0, [x1, x2, lsl #3]
   2362c:	str	x0, [x20, x2, lsl #3]
   23630:	add	x2, x2, #0x1
   23634:	cmp	x2, x7
   23638:	b.ne	23628 <mpfr_round_raw@@Base+0xe8>  // b.any
   2363c:	ldr	x3, [x20]
   23640:	mov	w0, #0x0                   	// #0
   23644:	and	x19, x3, x19
   23648:	str	x19, [x20]
   2364c:	ldp	x19, x20, [sp, #16]
   23650:	ldp	x29, x30, [sp], #32
   23654:	ret
   23658:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   2365c:	lsr	x2, x2, x8
   23660:	tst	x0, x2
   23664:	b.eq	23760 <mpfr_round_raw@@Base+0x220>  // b.none
   23668:	cmn	w5, #0x1
   2366c:	b.eq	23854 <mpfr_round_raw@@Base+0x314>  // b.none
   23670:	bics	xzr, x0, x2
   23674:	b.eq	23810 <mpfr_round_raw@@Base+0x2d0>  // b.none
   23678:	mov	w0, #0x1                   	// #1
   2367c:	add	x5, x1, x4, lsl #3
   23680:	sub	w3, w0, w3, lsl #1
   23684:	ldr	x9, [x1, x4, lsl #3]
   23688:	str	w3, [x6]
   2368c:	neg	w0, w8
   23690:	cmp	w8, #0x0
   23694:	mov	x2, #0x1                   	// #1
   23698:	lsl	x0, x2, x0
   2369c:	csel	x0, x0, x2, ne  // ne = any
   236a0:	adds	x0, x0, x9
   236a4:	str	x0, [x20]
   236a8:	mov	x3, x0
   236ac:	b.cs	237b0 <mpfr_round_raw@@Base+0x270>  // b.hs, b.nlast
   236b0:	cmp	x20, x5
   236b4:	mov	w0, #0x0                   	// #0
   236b8:	b.eq	23644 <mpfr_round_raw@@Base+0x104>  // b.none
   236bc:	cmp	x7, #0x1
   236c0:	b.le	23644 <mpfr_round_raw@@Base+0x104>
   236c4:	nop
   236c8:	ldr	x0, [x5, x2, lsl #3]
   236cc:	str	x0, [x20, x2, lsl #3]
   236d0:	add	x2, x2, #0x1
   236d4:	cmp	x2, x7
   236d8:	b.ne	236c8 <mpfr_round_raw@@Base+0x188>  // b.any
   236dc:	b	2363c <mpfr_round_raw@@Base+0xfc>
   236e0:	ldr	x0, [x1, x2, lsl #3]
   236e4:	add	x0, x0, #0x1
   236e8:	str	x0, [x20, x2, lsl #3]
   236ec:	add	x2, x2, #0x1
   236f0:	cbnz	x0, 23870 <mpfr_round_raw@@Base+0x330>
   236f4:	cmp	x2, x7
   236f8:	b.lt	236e0 <mpfr_round_raw@@Base+0x1a0>  // b.tstop
   236fc:	mov	w0, #0x1                   	// #1
   23700:	ldr	x3, [x20]
   23704:	b	23644 <mpfr_round_raw@@Base+0x104>
   23708:	str	wzr, [x6]
   2370c:	cmp	x9, x4
   23710:	b.gt	237bc <mpfr_round_raw@@Base+0x27c>
   23714:	cmp	w8, #0x0
   23718:	str	wzr, [x6]
   2371c:	cinc	x7, x7, ne  // ne = any
   23720:	sub	x7, x7, x2
   23724:	lsl	x19, x7, #3
   23728:	add	x0, x20, x19
   2372c:	bl	bae0 <__gmpn_copyd@plt>
   23730:	mov	x2, x19
   23734:	mov	x0, x20
   23738:	mov	w1, #0x0                   	// #0
   2373c:	bl	c110 <memset@plt>
   23740:	mov	w0, #0x0                   	// #0
   23744:	ldp	x19, x20, [sp, #16]
   23748:	ldp	x29, x30, [sp], #32
   2374c:	ret
   23750:	cbz	x10, 238e8 <mpfr_round_raw@@Base+0x3a8>
   23754:	sub	x10, x10, #0x1
   23758:	ldr	x0, [x1, x10, lsl #3]
   2375c:	nop
   23760:	cbz	x0, 23750 <mpfr_round_raw@@Base+0x210>
   23764:	lsl	w3, w3, #1
   23768:	sub	w3, w3, #0x1
   2376c:	str	w3, [x6]
   23770:	add	x1, x1, x4, lsl #3
   23774:	mov	x0, x20
   23778:	mov	x2, x7
   2377c:	bl	c520 <__gmpn_copyi@plt>
   23780:	ldr	x1, [x20]
   23784:	mov	w0, #0x0                   	// #0
   23788:	and	x19, x1, x19
   2378c:	str	x19, [x20]
   23790:	ldp	x19, x20, [sp, #16]
   23794:	ldp	x29, x30, [sp], #32
   23798:	ret
   2379c:	ldr	x0, [x5, x2, lsl #3]
   237a0:	add	x0, x0, #0x1
   237a4:	str	x0, [x20, x2, lsl #3]
   237a8:	add	x2, x2, #0x1
   237ac:	cbnz	x0, 238a0 <mpfr_round_raw@@Base+0x360>
   237b0:	cmp	x2, x7
   237b4:	b.lt	2379c <mpfr_round_raw@@Base+0x25c>  // b.tstop
   237b8:	b	236fc <mpfr_round_raw@@Base+0x1bc>
   237bc:	cbz	w8, 238e0 <mpfr_round_raw@@Base+0x3a0>
   237c0:	neg	w8, w8
   237c4:	mov	x19, #0x1                   	// #1
   237c8:	add	x7, x7, x19
   237cc:	lsl	x19, x19, x8
   237d0:	neg	x19, x19
   237d4:	sub	x3, x2, x7
   237d8:	mov	x0, x20
   237dc:	mov	x2, x7
   237e0:	add	x1, x1, x3, lsl #3
   237e4:	bl	c520 <__gmpn_copyi@plt>
   237e8:	ldr	x1, [x20]
   237ec:	mov	w0, #0x0                   	// #0
   237f0:	and	x19, x1, x19
   237f4:	str	x19, [x20]
   237f8:	ldp	x19, x20, [sp, #16]
   237fc:	ldp	x29, x30, [sp], #32
   23800:	ret
   23804:	mov	x2, #0xffffffffffffffff    	// #-1
   23808:	mov	x19, x2
   2380c:	b	235ac <mpfr_round_raw@@Base+0x6c>
   23810:	cbz	x10, 23824 <mpfr_round_raw@@Base+0x2e4>
   23814:	sub	x10, x10, #0x1
   23818:	ldr	x0, [x1, x10, lsl #3]
   2381c:	cbnz	x0, 23678 <mpfr_round_raw@@Base+0x138>
   23820:	b	23810 <mpfr_round_raw@@Base+0x2d0>
   23824:	ldr	x9, [x1, x4, lsl #3]
   23828:	eor	x0, x19, x19, lsl #1
   2382c:	lsl	w3, w3, #2
   23830:	add	x5, x1, x4, lsl #3
   23834:	tst	x0, x9
   23838:	b.ne	23860 <mpfr_round_raw@@Base+0x320>  // b.any
   2383c:	sub	w3, w3, #0x2
   23840:	mov	x2, x7
   23844:	mov	x1, x5
   23848:	mov	x0, x20
   2384c:	str	w3, [x6]
   23850:	b	237e4 <mpfr_round_raw@@Base+0x2a4>
   23854:	ldr	x9, [x1, x4, lsl #3]
   23858:	lsl	w3, w3, #2
   2385c:	add	x5, x1, x4, lsl #3
   23860:	mov	w0, #0x2                   	// #2
   23864:	sub	w3, w0, w3
   23868:	str	w3, [x6]
   2386c:	b	2368c <mpfr_round_raw@@Base+0x14c>
   23870:	cmp	x1, x20
   23874:	b.eq	23894 <mpfr_round_raw@@Base+0x354>  // b.none
   23878:	cmp	x2, x7
   2387c:	b.ge	23894 <mpfr_round_raw@@Base+0x354>  // b.tcont
   23880:	ldr	x0, [x1, x2, lsl #3]
   23884:	str	x0, [x20, x2, lsl #3]
   23888:	add	x2, x2, #0x1
   2388c:	cmp	x2, x7
   23890:	b.ne	23880 <mpfr_round_raw@@Base+0x340>  // b.any
   23894:	mov	w0, #0x0                   	// #0
   23898:	ldr	x3, [x20]
   2389c:	b	23644 <mpfr_round_raw@@Base+0x104>
   238a0:	cmp	x20, x5
   238a4:	b.eq	23894 <mpfr_round_raw@@Base+0x354>  // b.none
   238a8:	cmp	x2, x7
   238ac:	b.ge	23894 <mpfr_round_raw@@Base+0x354>  // b.tcont
   238b0:	ldr	x0, [x5, x2, lsl #3]
   238b4:	str	x0, [x20, x2, lsl #3]
   238b8:	add	x2, x2, #0x1
   238bc:	cmp	x2, x7
   238c0:	b.ne	238b0 <mpfr_round_raw@@Base+0x370>  // b.any
   238c4:	b	23894 <mpfr_round_raw@@Base+0x354>
   238c8:	cbz	x10, 238d8 <mpfr_round_raw@@Base+0x398>
   238cc:	sub	x10, x10, #0x1
   238d0:	ldr	x0, [x1, x10, lsl #3]
   238d4:	b	235d4 <mpfr_round_raw@@Base+0x94>
   238d8:	str	wzr, [x6]
   238dc:	b	23770 <mpfr_round_raw@@Base+0x230>
   238e0:	mov	x19, #0xffffffffffffffff    	// #-1
   238e4:	b	237d4 <mpfr_round_raw@@Base+0x294>
   238e8:	mov	w3, #0x0                   	// #0
   238ec:	b	2376c <mpfr_round_raw@@Base+0x22c>

00000000000238f0 <mpfr_round_raw_2@@Base>:
   238f0:	and	w5, w4, #0xfffffffb
   238f4:	mov	x7, x0
   238f8:	cmp	w5, #0x1
   238fc:	ccmp	x1, x3, #0x4, ne  // ne = any
   23900:	b.le	23974 <mpfr_round_raw_2@@Base+0x84>
   23904:	add	w2, w2, w4
   23908:	mov	w0, #0x0                   	// #0
   2390c:	cmp	w2, #0x3
   23910:	b.eq	23970 <mpfr_round_raw_2@@Base+0x80>  // b.none
   23914:	cmp	x3, #0x0
   23918:	add	x2, x3, #0x3f
   2391c:	csel	x2, x2, x3, lt  // lt = tstop
   23920:	sub	x1, x1, #0x1
   23924:	ands	w3, w3, #0x3f
   23928:	asr	x1, x1, #6
   2392c:	asr	x2, x2, #6
   23930:	sub	x8, x1, x2
   23934:	add	x1, x1, #0x1
   23938:	b.eq	239ec <mpfr_round_raw_2@@Base+0xfc>  // b.none
   2393c:	neg	w5, w3
   23940:	mov	x6, #0x1                   	// #1
   23944:	add	x2, x2, x6
   23948:	lsl	x5, x6, x5
   2394c:	sub	x6, x5, #0x1
   23950:	neg	x5, x5
   23954:	ldr	x0, [x7, x8, lsl #3]
   23958:	add	w9, w4, #0x1
   2395c:	cmp	w9, #0x1
   23960:	and	x6, x6, x0
   23964:	b.ls	2397c <mpfr_round_raw_2@@Base+0x8c>  // b.plast
   23968:	mov	w0, #0x1                   	// #1
   2396c:	cbz	x6, 239bc <mpfr_round_raw_2@@Base+0xcc>
   23970:	ret
   23974:	mov	w0, #0x0                   	// #0
   23978:	ret
   2397c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
   23980:	mov	w0, #0x0                   	// #0
   23984:	lsr	x3, x9, x3
   23988:	tst	x6, x3
   2398c:	b.eq	23970 <mpfr_round_raw_2@@Base+0x80>  // b.none
   23990:	cmn	w4, #0x1
   23994:	b.eq	239b4 <mpfr_round_raw_2@@Base+0xc4>  // b.none
   23998:	bics	xzr, x6, x3
   2399c:	mov	w0, #0x1                   	// #1
   239a0:	b.ne	23970 <mpfr_round_raw_2@@Base+0x80>  // b.any
   239a4:	cbz	x8, 239d4 <mpfr_round_raw_2@@Base+0xe4>
   239a8:	sub	x8, x8, #0x1
   239ac:	ldr	x0, [x7, x8, lsl #3]
   239b0:	cbz	x0, 239a4 <mpfr_round_raw_2@@Base+0xb4>
   239b4:	mov	w0, #0x1                   	// #1
   239b8:	ret
   239bc:	cbz	x8, 23974 <mpfr_round_raw_2@@Base+0x84>
   239c0:	sub	x8, x8, #0x1
   239c4:	ldr	x0, [x7, x8, lsl #3]
   239c8:	cbnz	x0, 239b4 <mpfr_round_raw_2@@Base+0xc4>
   239cc:	cbnz	x8, 239c0 <mpfr_round_raw_2@@Base+0xd0>
   239d0:	ret
   239d4:	sub	x1, x1, x2
   239d8:	eor	x5, x5, x5, lsl #1
   239dc:	ldr	x0, [x7, x1, lsl #3]
   239e0:	tst	x5, x0
   239e4:	cset	w0, ne  // ne = any
   239e8:	ret
   239ec:	mov	x6, #0xffffffffffffffff    	// #-1
   239f0:	mov	x5, x6
   239f4:	b	23954 <mpfr_round_raw_2@@Base+0x64>

00000000000239f8 <mpfr_round_raw_4@@Base>:
   239f8:	stp	x29, x30, [sp, #-32]!
   239fc:	cmp	x4, #0x0
   23a00:	add	x6, x4, #0x3f
   23a04:	mov	x29, sp
   23a08:	sub	x7, x2, #0x1
   23a0c:	csel	x6, x6, x4, lt  // lt = tstop
   23a10:	stp	x19, x20, [sp, #16]
   23a14:	asr	x7, x7, #6
   23a18:	mov	x20, x0
   23a1c:	asr	x6, x6, #6
   23a20:	cmp	w5, #0x5
   23a24:	add	x7, x7, #0x1
   23a28:	and	w8, w4, #0x3f
   23a2c:	b.eq	23bb4 <mpfr_round_raw_4@@Base+0x1bc>  // b.none
   23a30:	cmp	x2, x4
   23a34:	b.le	23c24 <mpfr_round_raw_4@@Base+0x22c>
   23a38:	cmp	w5, #0x1
   23a3c:	b.eq	23bbc <mpfr_round_raw_4@@Base+0x1c4>  // b.none
   23a40:	add	w3, w3, w5
   23a44:	cmp	w3, #0x3
   23a48:	b.eq	23bbc <mpfr_round_raw_4@@Base+0x1c4>  // b.none
   23a4c:	sub	x3, x7, x6
   23a50:	sub	x2, x3, #0x1
   23a54:	cbz	w8, 23c8c <mpfr_round_raw_4@@Base+0x294>
   23a58:	neg	w4, w8
   23a5c:	mov	x0, #0x1                   	// #1
   23a60:	add	x6, x6, #0x1
   23a64:	lsl	x4, x0, x4
   23a68:	sub	x3, x7, x6
   23a6c:	sub	x0, x4, #0x1
   23a70:	neg	x19, x4
   23a74:	ldr	x4, [x1, x2, lsl #3]
   23a78:	add	w7, w5, #0x1
   23a7c:	cmp	w7, #0x1
   23a80:	and	x0, x0, x4
   23a84:	b.ls	23b28 <mpfr_round_raw_4@@Base+0x130>  // b.plast
   23a88:	cbz	x0, 23cd4 <mpfr_round_raw_4@@Base+0x2dc>
   23a8c:	neg	w0, w8
   23a90:	cmp	w8, #0x0
   23a94:	ldr	x4, [x1, x3, lsl #3]
   23a98:	mov	x2, #0x1                   	// #1
   23a9c:	lsl	x0, x2, x0
   23aa0:	csel	x0, x0, x2, ne  // ne = any
   23aa4:	adds	x0, x0, x4
   23aa8:	str	x0, [x20]
   23aac:	mov	x4, x0
   23ab0:	add	x3, x1, x3, lsl #3
   23ab4:	b.cs	23b14 <mpfr_round_raw_4@@Base+0x11c>  // b.hs, b.nlast
   23ab8:	cmp	x3, x20
   23abc:	mov	w0, #0x0                   	// #0
   23ac0:	b.eq	23aec <mpfr_round_raw_4@@Base+0xf4>  // b.none
   23ac4:	cmp	x6, #0x1
   23ac8:	b.le	23aec <mpfr_round_raw_4@@Base+0xf4>
   23acc:	nop
   23ad0:	ldr	x0, [x3, x2, lsl #3]
   23ad4:	str	x0, [x20, x2, lsl #3]
   23ad8:	add	x2, x2, #0x1
   23adc:	cmp	x2, x6
   23ae0:	b.ne	23ad0 <mpfr_round_raw_4@@Base+0xd8>  // b.any
   23ae4:	ldr	x4, [x20]
   23ae8:	mov	w0, #0x0                   	// #0
   23aec:	and	x4, x4, x19
   23af0:	str	x4, [x20]
   23af4:	ldp	x19, x20, [sp, #16]
   23af8:	ldp	x29, x30, [sp], #32
   23afc:	ret
   23b00:	ldr	x4, [x3, x2, lsl #3]
   23b04:	add	x4, x4, #0x1
   23b08:	str	x4, [x20, x2, lsl #3]
   23b0c:	add	x2, x2, #0x1
   23b10:	cbnz	x4, 23c98 <mpfr_round_raw_4@@Base+0x2a0>
   23b14:	cmp	x2, x6
   23b18:	b.lt	23b00 <mpfr_round_raw_4@@Base+0x108>  // b.tstop
   23b1c:	mov	w0, #0x1                   	// #1
   23b20:	ldr	x4, [x20]
   23b24:	b	23aec <mpfr_round_raw_4@@Base+0xf4>
   23b28:	mov	x4, #0x8000000000000000    	// #-9223372036854775808
   23b2c:	lsr	x4, x4, x8
   23b30:	tst	x0, x4
   23b34:	b.eq	23c60 <mpfr_round_raw_4@@Base+0x268>  // b.none
   23b38:	cmn	w5, #0x1
   23b3c:	b.eq	23cc8 <mpfr_round_raw_4@@Base+0x2d0>  // b.none
   23b40:	bics	xzr, x0, x4
   23b44:	b.eq	23ce8 <mpfr_round_raw_4@@Base+0x2f0>  // b.none
   23b48:	ldr	x4, [x1, x3, lsl #3]
   23b4c:	add	x5, x1, x3, lsl #3
   23b50:	neg	w0, w8
   23b54:	cmp	w8, #0x0
   23b58:	mov	x2, #0x1                   	// #1
   23b5c:	lsl	x0, x2, x0
   23b60:	csel	x0, x0, x2, ne  // ne = any
   23b64:	adds	x0, x0, x4
   23b68:	str	x0, [x20]
   23b6c:	mov	x4, x0
   23b70:	b.cs	23c18 <mpfr_round_raw_4@@Base+0x220>  // b.hs, b.nlast
   23b74:	cmp	x20, x5
   23b78:	mov	w0, #0x0                   	// #0
   23b7c:	b.eq	23aec <mpfr_round_raw_4@@Base+0xf4>  // b.none
   23b80:	cmp	x6, #0x1
   23b84:	b.le	23aec <mpfr_round_raw_4@@Base+0xf4>
   23b88:	ldr	x0, [x5, x2, lsl #3]
   23b8c:	str	x0, [x20, x2, lsl #3]
   23b90:	add	x2, x2, #0x1
   23b94:	cmp	x2, x6
   23b98:	b.eq	23ae4 <mpfr_round_raw_4@@Base+0xec>  // b.none
   23b9c:	ldr	x0, [x5, x2, lsl #3]
   23ba0:	str	x0, [x20, x2, lsl #3]
   23ba4:	add	x2, x2, #0x1
   23ba8:	cmp	x2, x6
   23bac:	b.ne	23b88 <mpfr_round_raw_4@@Base+0x190>  // b.any
   23bb0:	b	23ae4 <mpfr_round_raw_4@@Base+0xec>
   23bb4:	cmp	x2, x4
   23bb8:	b.le	23c24 <mpfr_round_raw_4@@Base+0x22c>
   23bbc:	cbz	w8, 23d48 <mpfr_round_raw_4@@Base+0x350>
   23bc0:	neg	w8, w8
   23bc4:	mov	x19, #0x1                   	// #1
   23bc8:	add	x6, x6, x19
   23bcc:	lsl	x19, x19, x8
   23bd0:	neg	x19, x19
   23bd4:	sub	x7, x7, x6
   23bd8:	mov	x0, x20
   23bdc:	mov	x2, x6
   23be0:	add	x1, x1, x7, lsl #3
   23be4:	bl	c520 <__gmpn_copyi@plt>
   23be8:	ldr	x1, [x20]
   23bec:	mov	w0, #0x0                   	// #0
   23bf0:	and	x19, x1, x19
   23bf4:	str	x19, [x20]
   23bf8:	ldp	x19, x20, [sp, #16]
   23bfc:	ldp	x29, x30, [sp], #32
   23c00:	ret
   23c04:	ldr	x0, [x5, x2, lsl #3]
   23c08:	add	x0, x0, #0x1
   23c0c:	str	x0, [x20, x2, lsl #3]
   23c10:	add	x2, x2, #0x1
   23c14:	cbnz	x0, 23d1c <mpfr_round_raw_4@@Base+0x324>
   23c18:	cmp	x2, x6
   23c1c:	b.lt	23c04 <mpfr_round_raw_4@@Base+0x20c>  // b.tstop
   23c20:	b	23b1c <mpfr_round_raw_4@@Base+0x124>
   23c24:	cmp	w8, #0x0
   23c28:	mov	x2, x7
   23c2c:	cinc	x6, x6, ne  // ne = any
   23c30:	sub	x6, x6, x7
   23c34:	lsl	x19, x6, #3
   23c38:	add	x0, x20, x19
   23c3c:	bl	bae0 <__gmpn_copyd@plt>
   23c40:	mov	x2, x19
   23c44:	mov	x0, x20
   23c48:	mov	w1, #0x0                   	// #0
   23c4c:	bl	c110 <memset@plt>
   23c50:	mov	w0, #0x0                   	// #0
   23c54:	ldp	x19, x20, [sp, #16]
   23c58:	ldp	x29, x30, [sp], #32
   23c5c:	ret
   23c60:	mov	x2, x6
   23c64:	add	x1, x1, x3, lsl #3
   23c68:	mov	x0, x20
   23c6c:	bl	c520 <__gmpn_copyi@plt>
   23c70:	ldr	x4, [x20]
   23c74:	mov	w0, #0x0                   	// #0
   23c78:	and	x4, x4, x19
   23c7c:	str	x4, [x20]
   23c80:	ldp	x19, x20, [sp, #16]
   23c84:	ldp	x29, x30, [sp], #32
   23c88:	ret
   23c8c:	mov	x0, #0xffffffffffffffff    	// #-1
   23c90:	mov	x19, x0
   23c94:	b	23a74 <mpfr_round_raw_4@@Base+0x7c>
   23c98:	cmp	x3, x20
   23c9c:	b.eq	23cbc <mpfr_round_raw_4@@Base+0x2c4>  // b.none
   23ca0:	cmp	x2, x6
   23ca4:	b.ge	23cbc <mpfr_round_raw_4@@Base+0x2c4>  // b.tcont
   23ca8:	ldr	x0, [x3, x2, lsl #3]
   23cac:	str	x0, [x20, x2, lsl #3]
   23cb0:	add	x2, x2, #0x1
   23cb4:	cmp	x2, x6
   23cb8:	b.ne	23ca8 <mpfr_round_raw_4@@Base+0x2b0>  // b.any
   23cbc:	mov	w0, #0x0                   	// #0
   23cc0:	ldr	x4, [x20]
   23cc4:	b	23aec <mpfr_round_raw_4@@Base+0xf4>
   23cc8:	add	x5, x1, x3, lsl #3
   23ccc:	ldr	x4, [x1, x3, lsl #3]
   23cd0:	b	23b50 <mpfr_round_raw_4@@Base+0x158>
   23cd4:	cbz	x2, 23c60 <mpfr_round_raw_4@@Base+0x268>
   23cd8:	sub	x2, x2, #0x1
   23cdc:	ldr	x0, [x1, x2, lsl #3]
   23ce0:	cbnz	x0, 23a8c <mpfr_round_raw_4@@Base+0x94>
   23ce4:	b	23cd4 <mpfr_round_raw_4@@Base+0x2dc>
   23ce8:	cbz	x2, 23cfc <mpfr_round_raw_4@@Base+0x304>
   23cec:	sub	x2, x2, #0x1
   23cf0:	ldr	x0, [x1, x2, lsl #3]
   23cf4:	cbnz	x0, 23b48 <mpfr_round_raw_4@@Base+0x150>
   23cf8:	b	23ce8 <mpfr_round_raw_4@@Base+0x2f0>
   23cfc:	ldr	x4, [x1, x3, lsl #3]
   23d00:	eor	x0, x19, x19, lsl #1
   23d04:	add	x5, x1, x3, lsl #3
   23d08:	tst	x0, x4
   23d0c:	b.ne	23b50 <mpfr_round_raw_4@@Base+0x158>  // b.any
   23d10:	mov	x2, x6
   23d14:	mov	x1, x5
   23d18:	b	23c68 <mpfr_round_raw_4@@Base+0x270>
   23d1c:	cmp	x20, x5
   23d20:	b.eq	23cbc <mpfr_round_raw_4@@Base+0x2c4>  // b.none
   23d24:	cmp	x2, x6
   23d28:	b.ge	23cbc <mpfr_round_raw_4@@Base+0x2c4>  // b.tcont
   23d2c:	nop
   23d30:	ldr	x0, [x5, x2, lsl #3]
   23d34:	str	x0, [x20, x2, lsl #3]
   23d38:	add	x2, x2, #0x1
   23d3c:	cmp	x2, x6
   23d40:	b.ne	23d30 <mpfr_round_raw_4@@Base+0x338>  // b.any
   23d44:	b	23cbc <mpfr_round_raw_4@@Base+0x2c4>
   23d48:	mov	x19, #0xffffffffffffffff    	// #-1
   23d4c:	b	23bd4 <mpfr_round_raw_4@@Base+0x1dc>

0000000000023d50 <mpfr_prec_round@@Base>:
   23d50:	stp	x29, x30, [sp, #-96]!
   23d54:	mov	x29, sp
   23d58:	stp	x19, x20, [sp, #16]
   23d5c:	sub	x20, x1, #0x1
   23d60:	mov	x19, x0
   23d64:	stp	x21, x22, [sp, #32]
   23d68:	mov	x0, #0xfffffffffffffefe    	// #-258
   23d6c:	movk	x0, #0x7fff, lsl #48
   23d70:	stp	x23, x24, [sp, #48]
   23d74:	cmp	x20, x0
   23d78:	stp	x25, x26, [sp, #64]
   23d7c:	b.hi	23f40 <mpfr_prec_round@@Base+0x1f0>  // b.pmore
   23d80:	ldr	x0, [x19]
   23d84:	asr	x20, x20, #6
   23d88:	mov	x21, x1
   23d8c:	mov	w25, w2
   23d90:	sub	x0, x0, #0x1
   23d94:	add	x26, x20, #0x1
   23d98:	cmp	x20, x0, asr #6
   23d9c:	b.gt	23e4c <mpfr_prec_round@@Base+0xfc>
   23da0:	ldr	x0, [x19, #16]
   23da4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   23da8:	cmp	x0, x1
   23dac:	b.le	23e84 <mpfr_prec_round@@Base+0x134>
   23db0:	str	xzr, [x29, #88]
   23db4:	lsl	x22, x26, #3
   23db8:	cmp	x22, #0x4, lsl #12
   23dbc:	b.hi	23ec4 <mpfr_prec_round@@Base+0x174>  // b.pmore
   23dc0:	add	x0, x22, #0xf
   23dc4:	and	x0, x0, #0xfffffffffffffff0
   23dc8:	sub	sp, sp, x0
   23dcc:	mov	x23, sp
   23dd0:	ldr	x2, [x19]
   23dd4:	add	x6, x29, #0x54
   23dd8:	ldr	w3, [x19, #8]
   23ddc:	mov	w5, w25
   23de0:	ldr	x24, [x19, #24]
   23de4:	mov	x4, x21
   23de8:	mov	x0, x23
   23dec:	lsr	w3, w3, #31
   23df0:	mov	x1, x24
   23df4:	bl	ca20 <mpfr_round_raw@plt>
   23df8:	str	x21, [x19]
   23dfc:	cbnz	w0, 23ed8 <mpfr_prec_round@@Base+0x188>
   23e00:	cmp	x23, x24
   23e04:	b.eq	23e18 <mpfr_prec_round@@Base+0xc8>  // b.none
   23e08:	mov	x2, x22
   23e0c:	mov	x1, x23
   23e10:	mov	x0, x24
   23e14:	bl	ba10 <memcpy@plt>
   23e18:	ldr	x0, [x29, #88]
   23e1c:	cbnz	x0, 23e44 <mpfr_prec_round@@Base+0xf4>
   23e20:	ldr	w1, [x29, #84]
   23e24:	mov	sp, x29
   23e28:	mov	w0, w1
   23e2c:	ldp	x19, x20, [sp, #16]
   23e30:	ldp	x21, x22, [sp, #32]
   23e34:	ldp	x23, x24, [sp, #48]
   23e38:	ldp	x25, x26, [sp, #64]
   23e3c:	ldp	x29, x30, [sp], #96
   23e40:	ret
   23e44:	bl	c410 <mpfr_tmp_free@plt>
   23e48:	b	23e20 <mpfr_prec_round@@Base+0xd0>
   23e4c:	ldr	x0, [x19, #24]
   23e50:	ldur	x1, [x0, #-8]
   23e54:	cmp	x26, x1
   23e58:	b.le	23da0 <mpfr_prec_round@@Base+0x50>
   23e5c:	add	x1, x1, #0x1
   23e60:	add	x2, x20, #0x2
   23e64:	sub	x0, x0, #0x8
   23e68:	lsl	x1, x1, #3
   23e6c:	lsl	x2, x2, #3
   23e70:	bl	c1c0 <mpfr_reallocate_func@plt>
   23e74:	add	x1, x0, #0x8
   23e78:	str	x1, [x19, #24]
   23e7c:	str	x26, [x0]
   23e80:	b	23da0 <mpfr_prec_round@@Base+0x50>
   23e84:	str	x21, [x19]
   23e88:	mov	x2, #0x2                   	// #2
   23e8c:	movk	x2, #0x8000, lsl #48
   23e90:	mov	w1, #0x0                   	// #0
   23e94:	cmp	x0, x2
   23e98:	b.ne	23e24 <mpfr_prec_round@@Base+0xd4>  // b.any
   23e9c:	mrs	x2, tpidr_el0
   23ea0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   23ea4:	ldr	x3, [x0, #2576]
   23ea8:	add	x0, x0, #0xa10
   23eac:	blr	x3
   23eb0:	add	x0, x2, x0
   23eb4:	ldr	w2, [x0]
   23eb8:	orr	w2, w2, #0x4
   23ebc:	str	w2, [x0]
   23ec0:	b	23e24 <mpfr_prec_round@@Base+0xd4>
   23ec4:	mov	x1, x22
   23ec8:	add	x0, x29, #0x58
   23ecc:	bl	bdc0 <mpfr_tmp_allocate@plt>
   23ed0:	mov	x23, x0
   23ed4:	b	23dd0 <mpfr_prec_round@@Base+0x80>
   23ed8:	mrs	x2, tpidr_el0
   23edc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   23ee0:	ldr	x1, [x0, #2544]
   23ee4:	add	x0, x0, #0x9f0
   23ee8:	blr	x1
   23eec:	ldr	x1, [x19, #16]
   23ef0:	ldr	x0, [x2, x0]
   23ef4:	cmp	x0, x1
   23ef8:	b.eq	23f2c <mpfr_prec_round@@Base+0x1dc>  // b.none
   23efc:	add	x22, x24, x22
   23f00:	add	x1, x1, #0x1
   23f04:	str	x1, [x19, #16]
   23f08:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   23f0c:	cmp	x26, #0x1
   23f10:	stur	x0, [x22, #-8]
   23f14:	b.eq	23e18 <mpfr_prec_round@@Base+0xc8>  // b.none
   23f18:	lsl	x2, x20, #3
   23f1c:	mov	x0, x24
   23f20:	mov	w1, #0x0                   	// #0
   23f24:	bl	c110 <memset@plt>
   23f28:	b	23e18 <mpfr_prec_round@@Base+0xc8>
   23f2c:	ldr	w2, [x19, #8]
   23f30:	mov	w1, w25
   23f34:	mov	x0, x19
   23f38:	bl	bf40 <mpfr_overflow@plt>
   23f3c:	b	23e18 <mpfr_prec_round@@Base+0xc8>
   23f40:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   23f44:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   23f48:	add	x2, x2, #0x370
   23f4c:	add	x0, x0, #0x3c0
   23f50:	mov	w1, #0x3b                  	// #59
   23f54:	bl	cb40 <mpfr_assert_fail@plt>

0000000000023f58 <mpfr_can_round_raw@@Base>:
   23f58:	stp	x29, x30, [sp, #-224]!
   23f5c:	cmp	x6, #0x0
   23f60:	mov	x29, sp
   23f64:	stp	x19, x20, [sp, #16]
   23f68:	stp	x21, x22, [sp, #32]
   23f6c:	stp	x23, x24, [sp, #48]
   23f70:	stp	x25, x26, [sp, #64]
   23f74:	stp	x27, x28, [sp, #80]
   23f78:	b.le	24900 <mpfr_can_round_raw@@Base+0x9a8>
   23f7c:	mov	x21, x6
   23f80:	mov	x23, x0
   23f84:	mov	x22, x1
   23f88:	mov	x7, x3
   23f8c:	mov	w26, w4
   23f90:	mov	w25, w5
   23f94:	lsr	w8, w2, #31
   23f98:	cmp	w4, #0x5
   23f9c:	b.eq	2440c <mpfr_can_round_raw@@Base+0x4b4>  // b.none
   23fa0:	cbz	w4, 2412c <mpfr_can_round_raw@@Base+0x1d4>
   23fa4:	cmp	w4, #0x1
   23fa8:	b.eq	245b4 <mpfr_can_round_raw@@Base+0x65c>  // b.none
   23fac:	add	w26, w8, w4
   23fb0:	cmp	w26, #0x3
   23fb4:	b.eq	245b4 <mpfr_can_round_raw@@Base+0x65c>  // b.none
   23fb8:	str	wzr, [x29, #192]
   23fbc:	mov	x14, x6
   23fc0:	cmp	w5, #0x5
   23fc4:	mov	w26, #0x4                   	// #4
   23fc8:	b.eq	24830 <mpfr_can_round_raw@@Base+0x8d8>  // b.none
   23fcc:	nop
   23fd0:	cbz	w25, 23fec <mpfr_can_round_raw@@Base+0x94>
   23fd4:	cmp	w25, #0x1
   23fd8:	b.eq	23fec <mpfr_can_round_raw@@Base+0x94>  // b.none
   23fdc:	add	w25, w8, w25
   23fe0:	mov	w4, #0x4                   	// #4
   23fe4:	cmp	w25, #0x3
   23fe8:	csinc	w25, w4, wzr, ne  // ne = any
   23fec:	cmp	x14, x7
   23ff0:	b.gt	24430 <mpfr_can_round_raw@@Base+0x4d8>
   23ff4:	b.eq	24678 <mpfr_can_round_raw@@Base+0x720>  // b.none
   23ff8:	cmp	x21, x22, lsl #6
   23ffc:	lsl	x19, x22, #6
   24000:	b.gt	2468c <mpfr_can_round_raw@@Base+0x734>
   24004:	cmp	x19, x7
   24008:	b.lt	246b8 <mpfr_can_round_raw@@Base+0x760>  // b.tstop
   2400c:	sub	x19, x21, #0x1
   24010:	sub	x6, x7, #0x1
   24014:	neg	w28, w21
   24018:	str	xzr, [x29, #216]
   2401c:	asr	x19, x19, #6
   24020:	asr	x6, x6, #6
   24024:	sub	x22, x22, x19
   24028:	and	w0, w28, #0x3f
   2402c:	str	w0, [x29, #200]
   24030:	neg	w27, w7
   24034:	sub	x6, x6, x19
   24038:	lsl	x5, x22, #3
   2403c:	add	x24, x6, #0x1
   24040:	sub	x3, x21, x19, lsl #6
   24044:	cmp	x5, #0x4, lsl #12
   24048:	and	w27, w27, #0x3f
   2404c:	b.hi	247c0 <mpfr_can_round_raw@@Base+0x868>  // b.pmore
   24050:	add	x0, x5, #0xf
   24054:	and	x0, x0, #0xfffffffffffffff0
   24058:	sub	sp, sp, x0
   2405c:	mov	x28, sp
   24060:	subs	x20, x22, x24
   24064:	ccmp	x28, x23, #0x4, gt
   24068:	b.ne	241d0 <mpfr_can_round_raw@@Base+0x278>  // b.any
   2406c:	cbz	w26, 24204 <mpfr_can_round_raw@@Base+0x2ac>
   24070:	cmp	w26, #0x1
   24074:	b.ne	242bc <mpfr_can_round_raw@@Base+0x364>  // b.any
   24078:	sub	x13, x5, #0x8
   2407c:	stp	x7, x6, [x29, #152]
   24080:	ldrb	w6, [x29, #200]
   24084:	lsl	x26, x22, #6
   24088:	mov	w2, w8
   2408c:	ldr	x5, [x23, x13]
   24090:	mov	x1, x26
   24094:	mov	w4, w25
   24098:	mov	x0, x23
   2409c:	str	x3, [x29, #168]
   240a0:	lsr	x5, x5, x6
   240a4:	and	x5, x5, #0x1
   240a8:	str	w8, [x29, #176]
   240ac:	str	x13, [x29, #184]
   240b0:	str	x5, [x29, #192]
   240b4:	bl	c760 <mpfr_round_raw_2@plt>
   240b8:	lsl	x11, x20, #3
   240bc:	mov	x2, #0x1                   	// #1
   240c0:	ldp	x13, x5, [x29, #184]
   240c4:	add	x12, x28, x11
   240c8:	ldr	x1, [x23, x20, lsl #3]
   240cc:	lsl	x27, x2, x27
   240d0:	sxtw	x0, w0
   240d4:	ldr	w8, [x29, #176]
   240d8:	adds	x27, x27, x1
   240dc:	str	x27, [x12]
   240e0:	add	x11, x23, x11
   240e4:	eor	x10, x0, x5
   240e8:	ldp	x7, x6, [x29, #152]
   240ec:	ldr	x3, [x29, #168]
   240f0:	b.cs	2415c <mpfr_can_round_raw@@Base+0x204>  // b.hs, b.nlast
   240f4:	cmp	x12, x11
   240f8:	b.eq	2411c <mpfr_can_round_raw@@Base+0x1c4>  // b.none
   240fc:	cmp	x24, #0x1
   24100:	b.eq	2411c <mpfr_can_round_raw@@Base+0x1c4>  // b.none
   24104:	nop
   24108:	ldr	x0, [x11, x2, lsl #3]
   2410c:	str	x0, [x12, x2, lsl #3]
   24110:	add	x2, x2, #0x1
   24114:	cmp	x24, x2
   24118:	b.ne	24108 <mpfr_can_round_raw@@Base+0x1b0>  // b.any
   2411c:	cmp	x21, x7
   24120:	b.eq	241c8 <mpfr_can_round_raw@@Base+0x270>  // b.none
   24124:	add	x12, x28, x13
   24128:	b	243a4 <mpfr_can_round_raw@@Base+0x44c>
   2412c:	cmp	w5, #0x5
   24130:	add	x14, x6, #0x1
   24134:	b.eq	2463c <mpfr_can_round_raw@@Base+0x6e4>  // b.none
   24138:	mov	w0, #0x1                   	// #1
   2413c:	str	w0, [x29, #192]
   24140:	b	23fd0 <mpfr_can_round_raw@@Base+0x78>
   24144:	ldr	x4, [x11, x2, lsl #3]
   24148:	add	x1, x2, #0x1
   2414c:	add	x4, x4, #0x1
   24150:	str	x4, [x12, x2, lsl #3]
   24154:	cbnz	x4, 24808 <mpfr_can_round_raw@@Base+0x8b0>
   24158:	mov	x2, x1
   2415c:	cmp	x2, x24
   24160:	b.ne	24144 <mpfr_can_round_raw@@Base+0x1ec>  // b.any
   24164:	cmp	x21, #0x80
   24168:	b.le	241a4 <mpfr_can_round_raw@@Base+0x24c>
   2416c:	add	x23, x23, x13
   24170:	mov	x2, #0x1                   	// #1
   24174:	b	24180 <mpfr_can_round_raw@@Base+0x228>
   24178:	cmn	x1, #0x1
   2417c:	b.ne	2411c <mpfr_can_round_raw@@Base+0x1c4>  // b.any
   24180:	ldr	x1, [x23, x2, lsl #3]
   24184:	add	x2, x2, #0x1
   24188:	cmp	x2, x19
   2418c:	b.lt	24178 <mpfr_can_round_raw@@Base+0x220>  // b.tstop
   24190:	cmp	x21, x7
   24194:	ccmn	x1, #0x1, #0x4, eq  // eq = none
   24198:	b.ne	241c8 <mpfr_can_round_raw@@Base+0x270>  // b.any
   2419c:	cmn	x1, #0x1
   241a0:	b.ne	24124 <mpfr_can_round_raw@@Base+0x1cc>  // b.any
   241a4:	cmp	w25, #0x1
   241a8:	b.eq	241c8 <mpfr_can_round_raw@@Base+0x270>  // b.none
   241ac:	cmp	x0, x5
   241b0:	cset	w19, eq  // eq = none
   241b4:	cmp	w25, #0x4
   241b8:	b.ne	243e0 <mpfr_can_round_raw@@Base+0x488>  // b.any
   241bc:	cmp	x21, x7
   241c0:	ccmp	x22, x24, #0x0, lt  // lt = tstop
   241c4:	b.eq	24524 <mpfr_can_round_raw@@Base+0x5cc>  // b.none
   241c8:	mov	w19, #0x0                   	// #0
   241cc:	b	243e0 <mpfr_can_round_raw@@Base+0x488>
   241d0:	lsl	x2, x20, #3
   241d4:	mov	x1, x23
   241d8:	mov	x0, x28
   241dc:	stp	x7, x3, [x29, #144]
   241e0:	str	x6, [x29, #160]
   241e4:	str	w8, [x29, #168]
   241e8:	stp	x5, x14, [x29, #176]
   241ec:	bl	ba10 <memcpy@plt>
   241f0:	ldr	w8, [x29, #168]
   241f4:	ldp	x7, x3, [x29, #144]
   241f8:	ldr	x6, [x29, #160]
   241fc:	ldp	x5, x14, [x29, #176]
   24200:	cbnz	w26, 24070 <mpfr_can_round_raw@@Base+0x118>
   24204:	lsl	x2, x20, #3
   24208:	mov	x0, #0x1                   	// #1
   2420c:	add	x26, x28, x2
   24210:	lsl	x11, x0, x27
   24214:	ldr	x1, [x23, x20, lsl #3]
   24218:	add	x20, x23, x2
   2421c:	adds	x1, x11, x1
   24220:	str	x1, [x26]
   24224:	b.cs	24450 <mpfr_can_round_raw@@Base+0x4f8>  // b.hs, b.nlast
   24228:	cmp	x26, x20
   2422c:	b.eq	245d4 <mpfr_can_round_raw@@Base+0x67c>  // b.none
   24230:	cmp	x24, #0x1
   24234:	b.eq	245d4 <mpfr_can_round_raw@@Base+0x67c>  // b.none
   24238:	ldr	x1, [x20, x0, lsl #3]
   2423c:	str	x1, [x26, x0, lsl #3]
   24240:	add	x0, x0, #0x1
   24244:	cmp	x0, x24
   24248:	b.ne	24238 <mpfr_can_round_raw@@Base+0x2e0>  // b.any
   2424c:	cmp	x21, #0x80
   24250:	b.gt	245d4 <mpfr_can_round_raw@@Base+0x67c>
   24254:	sub	x13, x5, #0x8
   24258:	lsl	x1, x22, #6
   2425c:	stp	x5, x1, [x29, #144]
   24260:	add	x12, x28, x13
   24264:	ldrb	w5, [x29, #200]
   24268:	ldr	x10, [x28, x13]
   2426c:	mov	w2, w8
   24270:	mov	w4, w25
   24274:	mov	x0, x28
   24278:	stp	x7, x6, [x29, #112]
   2427c:	lsr	x10, x10, x5
   24280:	and	x22, x10, #0x1
   24284:	stp	x11, x14, [x29, #128]
   24288:	str	x3, [x29, #160]
   2428c:	str	w8, [x29, #168]
   24290:	stp	x13, x12, [x29, #176]
   24294:	bl	c760 <mpfr_round_raw_2@plt>
   24298:	sxtw	x10, w0
   2429c:	ldr	w8, [x29, #168]
   242a0:	eor	x10, x10, x22
   242a4:	ldp	x7, x6, [x29, #112]
   242a8:	ldp	x11, x14, [x29, #128]
   242ac:	ldp	x5, x1, [x29, #144]
   242b0:	ldr	x3, [x29, #160]
   242b4:	ldp	x13, x12, [x29, #176]
   242b8:	b	2432c <mpfr_can_round_raw@@Base+0x3d4>
   242bc:	sub	x13, x5, #0x8
   242c0:	stp	x14, x5, [x29, #136]
   242c4:	ldrb	w5, [x29, #200]
   242c8:	add	x12, x28, x13
   242cc:	lsl	x1, x22, #6
   242d0:	ldr	x10, [x23, x13]
   242d4:	mov	w2, w8
   242d8:	mov	w4, w25
   242dc:	mov	x0, x23
   242e0:	stp	x7, x6, [x29, #120]
   242e4:	lsl	x20, x20, #3
   242e8:	lsr	x10, x10, x5
   242ec:	and	x22, x10, #0x1
   242f0:	stp	x1, x3, [x29, #152]
   242f4:	add	x26, x28, x20
   242f8:	str	w8, [x29, #168]
   242fc:	add	x20, x23, x20
   24300:	stp	x13, x12, [x29, #176]
   24304:	bl	c760 <mpfr_round_raw_2@plt>
   24308:	ldr	w8, [x29, #168]
   2430c:	ldp	x7, x6, [x29, #120]
   24310:	sxtw	x10, w0
   24314:	ldp	x14, x5, [x29, #136]
   24318:	mov	x11, #0x1                   	// #1
   2431c:	ldp	x1, x3, [x29, #152]
   24320:	eor	x10, x10, x22
   24324:	ldp	x13, x12, [x29, #176]
   24328:	lsl	x11, x11, x27
   2432c:	ldr	x0, [x20]
   24330:	sub	x2, x0, x11
   24334:	str	x2, [x26]
   24338:	cmp	x11, x0
   2433c:	b.ls	24538 <mpfr_can_round_raw@@Base+0x5e0>  // b.plast
   24340:	mov	x0, #0x1                   	// #1
   24344:	b	24360 <mpfr_can_round_raw@@Base+0x408>
   24348:	ldr	x4, [x20, x0, lsl #3]
   2434c:	add	x2, x0, #0x1
   24350:	sub	x9, x4, #0x1
   24354:	str	x9, [x26, x0, lsl #3]
   24358:	cbnz	x4, 2464c <mpfr_can_round_raw@@Base+0x6f4>
   2435c:	mov	x0, x2
   24360:	cmp	x0, x24
   24364:	b.ne	24348 <mpfr_can_round_raw@@Base+0x3f0>  // b.any
   24368:	cmp	x21, #0x40
   2436c:	b.le	248f4 <mpfr_can_round_raw@@Base+0x99c>
   24370:	add	x5, x23, x5
   24374:	mov	x0, #0x0                   	// #0
   24378:	ldr	x2, [x5, x0, lsl #3]
   2437c:	add	x0, x0, #0x1
   24380:	cmp	x2, #0x0
   24384:	ccmp	x19, x0, #0x4, eq  // eq = none
   24388:	b.gt	24378 <mpfr_can_round_raw@@Base+0x420>
   2438c:	sub	x2, x2, #0x1
   24390:	cmp	x19, x0
   24394:	b.eq	24574 <mpfr_can_round_raw@@Base+0x61c>  // b.none
   24398:	mov	x26, x1
   2439c:	cmp	x14, x7
   243a0:	b.eq	2475c <mpfr_can_round_raw@@Base+0x804>  // b.none
   243a4:	ldrb	w6, [x29, #200]
   243a8:	mov	x0, x28
   243ac:	ldr	x5, [x12]
   243b0:	mov	w4, w25
   243b4:	mov	w2, w8
   243b8:	mov	x1, x26
   243bc:	str	x10, [x29, #192]
   243c0:	lsr	x28, x5, x6
   243c4:	bl	c760 <mpfr_round_raw_2@plt>
   243c8:	ldr	x10, [x29, #192]
   243cc:	and	x28, x28, #0x1
   243d0:	sxtw	x0, w0
   243d4:	eor	x0, x0, x28
   243d8:	cmp	x0, x10
   243dc:	cset	w19, eq  // eq = none
   243e0:	ldr	x0, [x29, #216]
   243e4:	cbnz	x0, 247b8 <mpfr_can_round_raw@@Base+0x860>
   243e8:	mov	sp, x29
   243ec:	mov	w0, w19
   243f0:	ldp	x19, x20, [sp, #16]
   243f4:	ldp	x21, x22, [sp, #32]
   243f8:	ldp	x23, x24, [sp, #48]
   243fc:	ldp	x25, x26, [sp, #64]
   24400:	ldp	x27, x28, [sp, #80]
   24404:	ldp	x29, x30, [sp], #224
   24408:	ret
   2440c:	mov	w0, #0x1                   	// #1
   24410:	str	w0, [x29, #192]
   24414:	cmp	w5, #0x5
   24418:	add	x14, x6, #0x1
   2441c:	mov	w26, #0x0                   	// #0
   24420:	b.ne	23fd0 <mpfr_can_round_raw@@Base+0x78>  // b.any
   24424:	cmp	x14, x7
   24428:	mov	w25, #0x0                   	// #0
   2442c:	b.le	23ff4 <mpfr_can_round_raw@@Base+0x9c>
   24430:	mov	w19, #0x0                   	// #0
   24434:	b	243e8 <mpfr_can_round_raw@@Base+0x490>
   24438:	ldr	x1, [x20, x0, lsl #3]
   2443c:	add	x2, x0, #0x1
   24440:	add	x1, x1, #0x1
   24444:	str	x1, [x26, x0, lsl #3]
   24448:	cbnz	x1, 245cc <mpfr_can_round_raw@@Base+0x674>
   2444c:	mov	x0, x2
   24450:	cmp	x0, x24
   24454:	b.ne	24438 <mpfr_can_round_raw@@Base+0x4e0>  // b.any
   24458:	cmp	x21, #0x80
   2445c:	b.le	248d4 <mpfr_can_round_raw@@Base+0x97c>
   24460:	sub	x13, x5, #0x8
   24464:	mov	x0, #0x1                   	// #1
   24468:	add	x1, x23, x13
   2446c:	b	24478 <mpfr_can_round_raw@@Base+0x520>
   24470:	cmn	x27, #0x1
   24474:	b.ne	245d8 <mpfr_can_round_raw@@Base+0x680>  // b.any
   24478:	ldr	x27, [x1, x0, lsl #3]
   2447c:	add	x0, x0, #0x1
   24480:	cmp	x0, x19
   24484:	b.lt	24470 <mpfr_can_round_raw@@Base+0x518>  // b.tstop
   24488:	ldr	x10, [x28, x13]
   2448c:	stp	x14, x5, [x29, #104]
   24490:	ldrb	w5, [x29, #200]
   24494:	add	x12, x28, x13
   24498:	lsl	x1, x22, #6
   2449c:	mov	w2, w8
   244a0:	mov	w4, w25
   244a4:	lsr	x10, x10, x5
   244a8:	and	x10, x10, #0x1
   244ac:	mov	x0, x28
   244b0:	stp	x11, x6, [x29, #120]
   244b4:	stp	x7, x1, [x29, #136]
   244b8:	str	x3, [x29, #152]
   244bc:	str	w8, [x29, #160]
   244c0:	stp	x13, x12, [x29, #168]
   244c4:	str	x10, [x29, #184]
   244c8:	bl	c760 <mpfr_round_raw_2@plt>
   244cc:	ldr	x10, [x29, #184]
   244d0:	sxtw	x0, w0
   244d4:	ldr	w8, [x29, #160]
   244d8:	cmn	x27, #0x1
   244dc:	eor	x10, x0, x10
   244e0:	ldp	x14, x5, [x29, #104]
   244e4:	ldp	x11, x6, [x29, #120]
   244e8:	ldp	x7, x1, [x29, #136]
   244ec:	ldr	x3, [x29, #152]
   244f0:	ldp	x13, x12, [x29, #168]
   244f4:	b.ne	2432c <mpfr_can_round_raw@@Base+0x3d4>  // b.any
   244f8:	cmp	w25, #0x1
   244fc:	b.eq	241c8 <mpfr_can_round_raw@@Base+0x270>  // b.none
   24500:	add	x21, x21, #0x1
   24504:	cmp	x7, x21
   24508:	cset	w0, gt
   2450c:	cmp	w25, #0x4
   24510:	mov	w19, w0
   24514:	b.ne	243e0 <mpfr_can_round_raw@@Base+0x488>  // b.any
   24518:	cmp	w0, #0x0
   2451c:	ccmp	x22, x24, #0x0, ne  // ne = any
   24520:	b.ne	241c8 <mpfr_can_round_raw@@Base+0x270>  // b.any
   24524:	ldr	x0, [x28]
   24528:	mov	w19, #0x1                   	// #1
   2452c:	cbz	x0, 243e0 <mpfr_can_round_raw@@Base+0x488>
   24530:	mov	w19, #0x0                   	// #0
   24534:	b	243e0 <mpfr_can_round_raw@@Base+0x488>
   24538:	cmp	x20, x26
   2453c:	b.eq	24564 <mpfr_can_round_raw@@Base+0x60c>  // b.none
   24540:	cmp	x24, #0x1
   24544:	b.eq	24564 <mpfr_can_round_raw@@Base+0x60c>  // b.none
   24548:	mov	x0, #0x1                   	// #1
   2454c:	nop
   24550:	ldr	x2, [x20, x0, lsl #3]
   24554:	str	x2, [x26, x0, lsl #3]
   24558:	add	x0, x0, #0x1
   2455c:	cmp	x0, x24
   24560:	b.ne	24550 <mpfr_can_round_raw@@Base+0x5f8>  // b.any
   24564:	mov	x0, #0x0                   	// #0
   24568:	cmp	x19, x0
   2456c:	ldr	x2, [x12]
   24570:	b.ne	24398 <mpfr_can_round_raw@@Base+0x440>  // b.any
   24574:	tbnz	x2, #63, 24398 <mpfr_can_round_raw@@Base+0x440>
   24578:	cmp	w25, #0x1
   2457c:	b.eq	241c8 <mpfr_can_round_raw@@Base+0x270>  // b.none
   24580:	ldr	w0, [x29, #192]
   24584:	cmp	w0, #0x0
   24588:	ccmp	w25, #0x4, #0x0, ne  // ne = any
   2458c:	ccmp	x10, #0x0, #0x0, ne  // ne = any
   24590:	b.ne	241c8 <mpfr_can_round_raw@@Base+0x270>  // b.any
   24594:	mov	w4, w25
   24598:	add	x3, x3, #0x1
   2459c:	mov	w2, w8
   245a0:	mov	x0, x28
   245a4:	bl	c760 <mpfr_round_raw_2@plt>
   245a8:	cmp	w0, #0x0
   245ac:	cset	w19, ne  // ne = any
   245b0:	b	243e0 <mpfr_can_round_raw@@Base+0x488>
   245b4:	cmp	w25, #0x5
   245b8:	b.eq	247f4 <mpfr_can_round_raw@@Base+0x89c>  // b.none
   245bc:	mov	x14, x21
   245c0:	mov	w26, #0x1                   	// #1
   245c4:	str	wzr, [x29, #192]
   245c8:	b	23fd0 <mpfr_can_round_raw@@Base+0x78>
   245cc:	cmp	x26, x20
   245d0:	b.ne	24838 <mpfr_can_round_raw@@Base+0x8e0>  // b.any
   245d4:	sub	x13, x5, #0x8
   245d8:	ldr	x10, [x28, x13]
   245dc:	stp	x11, x5, [x29, #128]
   245e0:	ldrb	w5, [x29, #200]
   245e4:	add	x12, x28, x13
   245e8:	lsl	x1, x22, #6
   245ec:	mov	w2, w8
   245f0:	mov	w4, w25
   245f4:	lsr	x10, x10, x5
   245f8:	mov	x0, x28
   245fc:	and	x22, x10, #0x1
   24600:	stp	x7, x6, [x29, #112]
   24604:	stp	x14, x1, [x29, #144]
   24608:	str	x3, [x29, #160]
   2460c:	str	w8, [x29, #168]
   24610:	stp	x13, x12, [x29, #176]
   24614:	bl	c760 <mpfr_round_raw_2@plt>
   24618:	sxtw	x10, w0
   2461c:	ldr	w8, [x29, #168]
   24620:	eor	x10, x10, x22
   24624:	ldp	x7, x6, [x29, #112]
   24628:	ldp	x11, x5, [x29, #128]
   2462c:	ldp	x14, x1, [x29, #144]
   24630:	ldr	x3, [x29, #160]
   24634:	ldp	x13, x12, [x29, #176]
   24638:	b	2432c <mpfr_can_round_raw@@Base+0x3d4>
   2463c:	mov	w0, #0x1                   	// #1
   24640:	mov	w25, #0x0                   	// #0
   24644:	str	w0, [x29, #192]
   24648:	b	23fec <mpfr_can_round_raw@@Base+0x94>
   2464c:	cmp	x20, x26
   24650:	b.eq	24564 <mpfr_can_round_raw@@Base+0x60c>  // b.none
   24654:	cmp	x6, x0
   24658:	b.le	24564 <mpfr_can_round_raw@@Base+0x60c>
   2465c:	nop
   24660:	ldr	x0, [x20, x2, lsl #3]
   24664:	str	x0, [x26, x2, lsl #3]
   24668:	cmp	x6, x2
   2466c:	add	x2, x2, #0x1
   24670:	b.gt	24660 <mpfr_can_round_raw@@Base+0x708>
   24674:	b	24564 <mpfr_can_round_raw@@Base+0x60c>
   24678:	cmp	w26, #0x4
   2467c:	ccmp	w25, #0x1, #0x4, ne  // ne = any
   24680:	b.ne	23ff8 <mpfr_can_round_raw@@Base+0xa0>  // b.any
   24684:	mov	w19, #0x0                   	// #0
   24688:	b	243e8 <mpfr_can_round_raw@@Base+0x490>
   2468c:	cmp	w25, #0x0
   24690:	ccmp	w26, w25, #0x4, ne  // ne = any
   24694:	ccmp	x21, x7, #0x0, eq  // eq = none
   24698:	b.ge	24430 <mpfr_can_round_raw@@Base+0x4d8>  // b.tcont
   2469c:	cmp	w26, #0x1
   246a0:	b.eq	246b0 <mpfr_can_round_raw@@Base+0x758>  // b.none
   246a4:	add	x21, x21, #0x1
   246a8:	cmp	x21, x7
   246ac:	b.eq	24880 <mpfr_can_round_raw@@Base+0x928>  // b.none
   246b0:	mov	w19, #0x1                   	// #1
   246b4:	b	243e8 <mpfr_can_round_raw@@Base+0x490>
   246b8:	mov	x1, x22
   246bc:	mov	x0, x23
   246c0:	str	x7, [x29, #192]
   246c4:	str	w8, [x29, #200]
   246c8:	bl	c7d0 <mpfr_powerof2_raw2@plt>
   246cc:	ldr	w8, [x29, #200]
   246d0:	ldr	x7, [x29, #192]
   246d4:	cbnz	w0, 24858 <mpfr_can_round_raw@@Base+0x900>
   246d8:	cbnz	w25, 24898 <mpfr_can_round_raw@@Base+0x940>
   246dc:	add	x3, x21, #0x1
   246e0:	cmp	x3, x7
   246e4:	b.eq	248c4 <mpfr_can_round_raw@@Base+0x96c>  // b.none
   246e8:	cmp	x19, x21
   246ec:	b.le	246b0 <mpfr_can_round_raw@@Base+0x758>
   246f0:	asr	x0, x21, #6
   246f4:	mvn	w1, w21
   246f8:	add	x0, x0, #0x1
   246fc:	sub	x0, x22, x0
   24700:	ldr	x0, [x23, x0, lsl #3]
   24704:	lsr	x0, x0, x1
   24708:	tbz	w0, #0, 246b0 <mpfr_can_round_raw@@Base+0x758>
   2470c:	mov	w2, w8
   24710:	mov	x1, x19
   24714:	mov	x0, x23
   24718:	mov	w4, #0x4                   	// #4
   2471c:	bl	c760 <mpfr_round_raw_2@plt>
   24720:	cbnz	w0, 246b0 <mpfr_can_round_raw@@Base+0x758>
   24724:	cbz	w26, 24430 <mpfr_can_round_raw@@Base+0x4d8>
   24728:	sub	x0, x21, #0x1
   2472c:	neg	w21, w21
   24730:	cmp	w26, #0x1
   24734:	asr	x0, x0, #6
   24738:	cset	w19, eq  // eq = none
   2473c:	add	x0, x0, #0x1
   24740:	sub	x22, x22, x0
   24744:	ldr	x0, [x23, x22, lsl #3]
   24748:	lsr	x0, x0, x21
   2474c:	mvn	x0, x0
   24750:	and	w0, w0, #0x1
   24754:	eor	w19, w19, w0
   24758:	b	243e8 <mpfr_can_round_raw@@Base+0x490>
   2475c:	cbnz	w25, 241c8 <mpfr_can_round_raw@@Base+0x270>
   24760:	ldr	x0, [x23, x13]
   24764:	ldrb	w2, [x29, #200]
   24768:	lsr	x28, x0, x2
   2476c:	tbnz	w28, #0, 241c8 <mpfr_can_round_raw@@Base+0x270>
   24770:	mov	w2, w8
   24774:	mov	w4, #0x1                   	// #1
   24778:	mov	x0, x23
   2477c:	str	x3, [x29, #184]
   24780:	str	w8, [x29, #192]
   24784:	str	x1, [x29, #200]
   24788:	bl	c760 <mpfr_round_raw_2@plt>
   2478c:	ldr	w8, [x29, #192]
   24790:	mov	w19, w0
   24794:	ldr	x3, [x29, #184]
   24798:	mov	x0, x23
   2479c:	ldr	x1, [x29, #200]
   247a0:	mov	w2, w8
   247a4:	mov	w4, #0x4                   	// #4
   247a8:	bl	c760 <mpfr_round_raw_2@plt>
   247ac:	cmp	w19, w0
   247b0:	cset	w19, eq  // eq = none
   247b4:	b	243e0 <mpfr_can_round_raw@@Base+0x488>
   247b8:	bl	c410 <mpfr_tmp_free@plt>
   247bc:	b	243e8 <mpfr_can_round_raw@@Base+0x490>
   247c0:	mov	x1, x5
   247c4:	add	x0, x29, #0xd8
   247c8:	stp	x7, x3, [x29, #144]
   247cc:	str	x6, [x29, #160]
   247d0:	str	w8, [x29, #168]
   247d4:	stp	x14, x5, [x29, #176]
   247d8:	bl	bdc0 <mpfr_tmp_allocate@plt>
   247dc:	ldr	w8, [x29, #168]
   247e0:	mov	x28, x0
   247e4:	ldp	x7, x3, [x29, #144]
   247e8:	ldr	x6, [x29, #160]
   247ec:	ldp	x14, x5, [x29, #176]
   247f0:	b	24060 <mpfr_can_round_raw@@Base+0x108>
   247f4:	mov	w25, #0x1                   	// #1
   247f8:	mov	x14, x21
   247fc:	mov	w26, w25
   24800:	str	wzr, [x29, #192]
   24804:	b	23fec <mpfr_can_round_raw@@Base+0x94>
   24808:	cmp	x12, x11
   2480c:	b.eq	2411c <mpfr_can_round_raw@@Base+0x1c4>  // b.none
   24810:	cmp	x6, x2
   24814:	b.le	2411c <mpfr_can_round_raw@@Base+0x1c4>
   24818:	ldr	x0, [x11, x1, lsl #3]
   2481c:	str	x0, [x12, x1, lsl #3]
   24820:	cmp	x6, x1
   24824:	add	x1, x1, #0x1
   24828:	b.gt	24818 <mpfr_can_round_raw@@Base+0x8c0>
   2482c:	b	2411c <mpfr_can_round_raw@@Base+0x1c4>
   24830:	mov	w25, #0x1                   	// #1
   24834:	b	23fec <mpfr_can_round_raw@@Base+0x94>
   24838:	cmp	x6, x0
   2483c:	b.le	245d4 <mpfr_can_round_raw@@Base+0x67c>
   24840:	ldr	x0, [x20, x2, lsl #3]
   24844:	str	x0, [x26, x2, lsl #3]
   24848:	cmp	x2, x6
   2484c:	add	x2, x2, #0x1
   24850:	b.lt	24840 <mpfr_can_round_raw@@Base+0x8e8>  // b.tstop
   24854:	b	2424c <mpfr_can_round_raw@@Base+0x2f4>
   24858:	cmp	w25, #0x1
   2485c:	ccmp	w25, #0x4, #0x4, ne  // ne = any
   24860:	ccmp	w26, w25, #0x4, eq  // eq = none
   24864:	b.ne	24430 <mpfr_can_round_raw@@Base+0x4d8>  // b.any
   24868:	cmp	w26, #0x1
   2486c:	b.eq	246b0 <mpfr_can_round_raw@@Base+0x758>  // b.none
   24870:	add	x21, x21, #0x1
   24874:	cmp	x21, x7
   24878:	cset	w19, lt  // lt = tstop
   2487c:	b	243e8 <mpfr_can_round_raw@@Base+0x490>
   24880:	mov	x1, x22
   24884:	mov	x0, x23
   24888:	bl	c7d0 <mpfr_powerof2_raw2@plt>
   2488c:	cmp	w0, #0x0
   24890:	cset	w19, eq  // eq = none
   24894:	b	243e8 <mpfr_can_round_raw@@Base+0x490>
   24898:	cmp	w26, w25
   2489c:	b.eq	246b0 <mpfr_can_round_raw@@Base+0x758>  // b.none
   248a0:	mov	x1, x19
   248a4:	mov	x3, x21
   248a8:	mov	w2, w8
   248ac:	mov	x0, x23
   248b0:	mov	w4, #0x4                   	// #4
   248b4:	bl	c760 <mpfr_round_raw_2@plt>
   248b8:	cmp	w0, #0x0
   248bc:	cset	w19, ne  // ne = any
   248c0:	b	243e8 <mpfr_can_round_raw@@Base+0x490>
   248c4:	ldr	x0, [x23]
   248c8:	tbz	w0, #0, 246e8 <mpfr_can_round_raw@@Base+0x790>
   248cc:	mov	w19, #0x0                   	// #0
   248d0:	b	243e8 <mpfr_can_round_raw@@Base+0x490>
   248d4:	mov	w2, w8
   248d8:	mov	w4, w25
   248dc:	lsl	x1, x22, #6
   248e0:	mov	x0, x28
   248e4:	str	x7, [x29, #200]
   248e8:	bl	c760 <mpfr_round_raw_2@plt>
   248ec:	ldr	x7, [x29, #200]
   248f0:	b	244f8 <mpfr_can_round_raw@@Base+0x5a0>
   248f4:	mov	x0, #0x0                   	// #0
   248f8:	ldr	x2, [x12]
   248fc:	b	24390 <mpfr_can_round_raw@@Base+0x438>
   24900:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   24904:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   24908:	add	x2, x2, #0x3d0
   2490c:	add	x0, x0, #0x3c0
   24910:	mov	w1, #0xbf                  	// #191
   24914:	bl	cb40 <mpfr_assert_fail@plt>

0000000000024918 <mpfr_can_round@@Base>:
   24918:	ldr	x7, [x0, #16]
   2491c:	mov	w8, w2
   24920:	mov	w5, w3
   24924:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   24928:	mov	x6, x4
   2492c:	cmp	x7, x2
   24930:	b.le	24958 <mpfr_can_round@@Base+0x40>
   24934:	ldr	x7, [x0]
   24938:	mov	x3, x1
   2493c:	ldr	w2, [x0, #8]
   24940:	mov	w4, w8
   24944:	ldr	x0, [x0, #24]
   24948:	sub	x7, x7, #0x1
   2494c:	asr	x1, x7, #6
   24950:	add	x1, x1, #0x1
   24954:	b	c350 <mpfr_can_round_raw@plt>
   24958:	mov	w0, #0x0                   	// #0
   2495c:	ret

0000000000024960 <mpfr_set@@Base>:
   24960:	ldr	w3, [x1, #8]
   24964:	b	c6a0 <mpfr_set4@plt>

0000000000024968 <mpfr_abs@@Base>:
   24968:	mov	w3, #0x1                   	// #1
   2496c:	b	c6a0 <mpfr_set4@plt>

0000000000024970 <mpfr_set_1_2@@Base>:
   24970:	stp	x29, x30, [sp, #-64]!
   24974:	mov	x29, sp
   24978:	ldr	x4, [x1, #16]
   2497c:	stp	x21, x22, [sp, #32]
   24980:	sxtw	x22, w3
   24984:	stp	x23, x24, [sp, #48]
   24988:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   2498c:	cmp	x4, x3
   24990:	ldr	x23, [x0]
   24994:	b.le	24bb4 <mpfr_set_1_2@@Base+0x244>
   24998:	stp	x19, x20, [sp, #16]
   2499c:	mov	w24, w2
   249a0:	mov	x19, x1
   249a4:	mov	x20, x0
   249a8:	cmp	x23, #0x3f
   249ac:	ldr	x3, [x1]
   249b0:	b.gt	24a78 <mpfr_set_1_2@@Base+0x108>
   249b4:	ldr	x6, [x19, #24]
   249b8:	mov	x4, #0x40                  	// #64
   249bc:	sub	x4, x4, x23
   249c0:	mov	x0, #0x1                   	// #1
   249c4:	sub	w5, w4, #0x1
   249c8:	cmp	x3, #0x40
   249cc:	lsl	x2, x0, x4
   249d0:	sub	x1, x2, #0x1
   249d4:	lsl	x0, x0, x5
   249d8:	neg	x3, x2
   249dc:	eor	x1, x1, x0
   249e0:	ldr	x5, [x6]
   249e4:	b.le	24a68 <mpfr_set_1_2@@Base+0xf8>
   249e8:	ldr	x6, [x6, #8]
   249ec:	and	x1, x6, x1
   249f0:	and	x0, x6, x0
   249f4:	orr	x1, x1, x5
   249f8:	and	x3, x6, x3
   249fc:	ldr	x5, [x20, #24]
   24a00:	ldr	w21, [x19, #8]
   24a04:	str	x3, [x5]
   24a08:	ldr	x6, [x19, #16]
   24a0c:	mul	w3, w21, w22
   24a10:	str	w21, [x20, #8]
   24a14:	str	x6, [x20, #16]
   24a18:	cmp	w3, #0x0
   24a1c:	b.le	24ae0 <mpfr_set_1_2@@Base+0x170>
   24a20:	cmp	x0, #0x0
   24a24:	ccmp	x1, #0x0, #0x0, ne  // ne = any
   24a28:	b.eq	24b44 <mpfr_set_1_2@@Base+0x1d4>  // b.none
   24a2c:	orr	x3, x0, x1
   24a30:	cbnz	x3, 24aec <mpfr_set_1_2@@Base+0x17c>
   24a34:	cbz	w22, 24ac4 <mpfr_set_1_2@@Base+0x154>
   24a38:	mrs	x1, tpidr_el0
   24a3c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   24a40:	ldr	x2, [x0, #2576]
   24a44:	add	x0, x0, #0xa10
   24a48:	blr	x2
   24a4c:	add	x0, x1, x0
   24a50:	mov	w21, w22
   24a54:	ldp	x19, x20, [sp, #16]
   24a58:	ldr	w1, [x0]
   24a5c:	orr	w1, w1, #0x8
   24a60:	str	w1, [x0]
   24a64:	b	24ab0 <mpfr_set_1_2@@Base+0x140>
   24a68:	and	x0, x0, x5
   24a6c:	and	x1, x5, x1
   24a70:	and	x3, x3, x5
   24a74:	b	249fc <mpfr_set_1_2@@Base+0x8c>
   24a78:	bl	c1f0 <mpfr_set@plt>
   24a7c:	mov	w21, w0
   24a80:	cbnz	w24, 24aa8 <mpfr_set_1_2@@Base+0x138>
   24a84:	mul	w0, w0, w22
   24a88:	cmp	w0, #0x0
   24a8c:	b.le	24aa8 <mpfr_set_1_2@@Base+0x138>
   24a90:	mov	x0, x19
   24a94:	bl	c990 <mpfr_min_prec@plt>
   24a98:	add	x4, x23, #0x1
   24a9c:	cmp	x0, x4
   24aa0:	b.eq	24c08 <mpfr_set_1_2@@Base+0x298>  // b.none
   24aa4:	nop
   24aa8:	cbz	w21, 24ac4 <mpfr_set_1_2@@Base+0x154>
   24aac:	ldp	x19, x20, [sp, #16]
   24ab0:	mov	w0, w21
   24ab4:	ldp	x21, x22, [sp, #32]
   24ab8:	ldp	x23, x24, [sp, #48]
   24abc:	ldp	x29, x30, [sp], #64
   24ac0:	ret
   24ac4:	mov	w21, w22
   24ac8:	mov	w0, w21
   24acc:	ldp	x19, x20, [sp, #16]
   24ad0:	ldp	x21, x22, [sp, #32]
   24ad4:	ldp	x23, x24, [sp, #48]
   24ad8:	ldp	x29, x30, [sp], #64
   24adc:	ret
   24ae0:	orr	x1, x1, x22
   24ae4:	orr	x3, x0, x1
   24ae8:	cbz	x3, 24b7c <mpfr_set_1_2@@Base+0x20c>
   24aec:	cbz	w24, 24b98 <mpfr_set_1_2@@Base+0x228>
   24af0:	cmp	w24, #0x1
   24af4:	b.eq	24b48 <mpfr_set_1_2@@Base+0x1d8>  // b.none
   24af8:	add	w0, w24, w21, lsr #31
   24afc:	cmp	w0, #0x3
   24b00:	b.eq	24b48 <mpfr_set_1_2@@Base+0x1d8>  // b.none
   24b04:	ldr	x0, [x5]
   24b08:	add	x2, x2, x0
   24b0c:	str	x2, [x5]
   24b10:	cbz	x2, 24bd0 <mpfr_set_1_2@@Base+0x260>
   24b14:	cbz	w21, 24aac <mpfr_set_1_2@@Base+0x13c>
   24b18:	mrs	x1, tpidr_el0
   24b1c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   24b20:	ldr	x2, [x0, #2576]
   24b24:	add	x0, x0, #0xa10
   24b28:	blr	x2
   24b2c:	add	x0, x1, x0
   24b30:	ldp	x19, x20, [sp, #16]
   24b34:	ldr	w1, [x0]
   24b38:	orr	w1, w1, #0x8
   24b3c:	str	w1, [x0]
   24b40:	b	24ab0 <mpfr_set_1_2@@Base+0x140>
   24b44:	cbnz	w24, 24af0 <mpfr_set_1_2@@Base+0x180>
   24b48:	cbz	w21, 24aac <mpfr_set_1_2@@Base+0x13c>
   24b4c:	mrs	x1, tpidr_el0
   24b50:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   24b54:	ldr	x2, [x0, #2576]
   24b58:	add	x0, x0, #0xa10
   24b5c:	blr	x2
   24b60:	add	x0, x1, x0
   24b64:	neg	w21, w21
   24b68:	ldp	x19, x20, [sp, #16]
   24b6c:	ldr	w1, [x0]
   24b70:	orr	w1, w1, #0x8
   24b74:	str	w1, [x0]
   24b78:	b	24ab0 <mpfr_set_1_2@@Base+0x140>
   24b7c:	mov	w21, #0x0                   	// #0
   24b80:	mov	w0, w21
   24b84:	ldp	x19, x20, [sp, #16]
   24b88:	ldp	x21, x22, [sp, #32]
   24b8c:	ldp	x23, x24, [sp, #48]
   24b90:	ldp	x29, x30, [sp], #64
   24b94:	ret
   24b98:	cbz	x0, 24b48 <mpfr_set_1_2@@Base+0x1d8>
   24b9c:	ldr	x0, [x5]
   24ba0:	lsr	x4, x0, x4
   24ba4:	and	x4, x4, #0x1
   24ba8:	orr	x1, x4, x1
   24bac:	cbnz	x1, 24b08 <mpfr_set_1_2@@Base+0x198>
   24bb0:	b	24b48 <mpfr_set_1_2@@Base+0x1d8>
   24bb4:	bl	c1f0 <mpfr_set@plt>
   24bb8:	mov	w21, w22
   24bbc:	mov	w0, w21
   24bc0:	ldp	x21, x22, [sp, #32]
   24bc4:	ldp	x23, x24, [sp, #48]
   24bc8:	ldp	x29, x30, [sp], #64
   24bcc:	ret
   24bd0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   24bd4:	mrs	x1, tpidr_el0
   24bd8:	str	x0, [x5]
   24bdc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   24be0:	ldr	x2, [x0, #2544]
   24be4:	add	x0, x0, #0x9f0
   24be8:	blr	x2
   24bec:	ldr	x1, [x1, x0]
   24bf0:	ldr	x0, [x20, #16]
   24bf4:	cmp	x0, x1
   24bf8:	b.ge	24c2c <mpfr_set_1_2@@Base+0x2bc>  // b.tcont
   24bfc:	add	x0, x0, #0x1
   24c00:	str	x0, [x20, #16]
   24c04:	b	24b14 <mpfr_set_1_2@@Base+0x1a4>
   24c08:	mov	x0, x20
   24c0c:	cmp	w22, #0x0
   24c10:	b.le	24c24 <mpfr_set_1_2@@Base+0x2b4>
   24c14:	bl	bdd0 <mpfr_nextbelow@plt>
   24c18:	neg	w21, w22
   24c1c:	ldp	x19, x20, [sp, #16]
   24c20:	b	24ab0 <mpfr_set_1_2@@Base+0x140>
   24c24:	bl	c120 <mpfr_nextabove@plt>
   24c28:	b	24c18 <mpfr_set_1_2@@Base+0x2a8>
   24c2c:	mov	w2, w21
   24c30:	mov	w1, w24
   24c34:	mov	x0, x20
   24c38:	ldp	x19, x20, [sp, #16]
   24c3c:	ldp	x21, x22, [sp, #32]
   24c40:	ldp	x23, x24, [sp, #48]
   24c44:	ldp	x29, x30, [sp], #64
   24c48:	b	bf40 <mpfr_overflow@plt>
   24c4c:	nop

0000000000024c50 <mpfr_setmax@@Base>:
   24c50:	ldr	x4, [x0]
   24c54:	mov	x2, #0xffffffffffffffff    	// #-1
   24c58:	str	x1, [x0, #16]
   24c5c:	add	x1, x4, x2
   24c60:	ldr	x0, [x0, #24]
   24c64:	asr	x1, x1, #6
   24c68:	add	x3, x1, #0x1
   24c6c:	cmp	x3, #0x1
   24c70:	lsl	w3, w3, #6
   24c74:	sub	w3, w3, w4
   24c78:	lsl	x3, x2, x3
   24c7c:	str	x3, [x0]
   24c80:	b.eq	24c94 <mpfr_setmax@@Base+0x44>  // b.none
   24c84:	add	x1, x0, x1, lsl #3
   24c88:	str	x2, [x0, #8]!
   24c8c:	cmp	x0, x1
   24c90:	b.ne	24c88 <mpfr_setmax@@Base+0x38>  // b.any
   24c94:	ret

0000000000024c98 <mpfr_setmin@@Base>:
   24c98:	ldr	x2, [x0]
   24c9c:	mov	x3, x1
   24ca0:	str	x3, [x0, #16]
   24ca4:	mov	x4, #0x8000000000000000    	// #-9223372036854775808
   24ca8:	add	x3, x2, #0x3e
   24cac:	subs	x2, x2, #0x1
   24cb0:	csel	x3, x3, x2, mi  // mi = first
   24cb4:	mov	w1, #0x0                   	// #0
   24cb8:	ldr	x0, [x0, #24]
   24cbc:	asr	x3, x3, #6
   24cc0:	lsl	x2, x3, #3
   24cc4:	str	x4, [x0, x3, lsl #3]
   24cc8:	b	c110 <memset@plt>
   24ccc:	nop

0000000000024cd0 <mpfr_set_d@@Base>:
   24cd0:	stp	x29, x30, [sp, #-112]!
   24cd4:	fcmp	d0, d0
   24cd8:	mov	x29, sp
   24cdc:	stp	x19, x20, [sp, #16]
   24ce0:	mov	x20, x0
   24ce4:	b.ne	24ea4 <mpfr_set_d@@Base+0x1d4>  // b.any
   24ce8:	fcmp	d0, #0.0
   24cec:	b.eq	24ee4 <mpfr_set_d@@Base+0x214>  // b.none
   24cf0:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
   24cf4:	fmov	d1, x0
   24cf8:	fcmpe	d0, d1
   24cfc:	b.gt	24e7c <mpfr_set_d@@Base+0x1ac>
   24d00:	mov	x0, #0xffefffffffffffff    	// #-4503599627370497
   24d04:	fmov	d1, x0
   24d08:	fcmpe	d0, d1
   24d0c:	b.mi	24e7c <mpfr_set_d@@Base+0x1ac>  // b.first
   24d10:	mrs	x19, tpidr_el0
   24d14:	stp	x21, x22, [sp, #32]
   24d18:	mov	w21, w1
   24d1c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   24d20:	ldr	x1, [x0, #2576]
   24d24:	add	x0, x0, #0xa10
   24d28:	blr	x1
   24d2c:	stp	x23, x24, [sp, #48]
   24d30:	add	x1, sp, #0x48
   24d34:	ldr	w22, [x19, x0]
   24d38:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   24d3c:	ldr	x3, [x0, #2512]
   24d40:	add	x0, x0, #0x9d0
   24d44:	blr	x3
   24d48:	add	x4, x19, x0
   24d4c:	fmov	x3, d0
   24d50:	mov	x5, #0x35                  	// #53
   24d54:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   24d58:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   24d5c:	str	x5, [sp, #80]
   24d60:	str	x1, [sp, #104]
   24d64:	ldr	x23, [x19, x0]
   24d68:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   24d6c:	ldr	x1, [x0, #2544]
   24d70:	add	x0, x0, #0x9f0
   24d74:	blr	x1
   24d78:	str	x6, [x4]
   24d7c:	ubfx	x5, x3, #52, #11
   24d80:	ldr	x24, [x19, x0]
   24d84:	str	x2, [x19, x0]
   24d88:	ubfx	x4, x3, #32, #20
   24d8c:	ubfiz	x1, x3, #11, #32
   24d90:	cbnz	w5, 24e4c <mpfr_set_d@@Base+0x17c>
   24d94:	orr	x4, x1, x4, lsl #43
   24d98:	mov	w5, #0xfffffc03            	// #-1021
   24d9c:	clz	x3, x4
   24da0:	sub	w5, w5, w3
   24da4:	lsl	x4, x4, x3
   24da8:	fcmpe	d0, #0.0
   24dac:	sxtw	x5, w5
   24db0:	add	x1, sp, #0x50
   24db4:	mov	w2, w21
   24db8:	mov	x0, x20
   24dbc:	mov	w3, #0x1                   	// #1
   24dc0:	str	x4, [sp, #72]
   24dc4:	cneg	w3, w3, mi  // mi = first
   24dc8:	str	x5, [sp, #96]
   24dcc:	bl	c6a0 <mpfr_set4@plt>
   24dd0:	mov	w3, w0
   24dd4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   24dd8:	ldr	x1, [x0, #2576]
   24ddc:	add	x0, x0, #0xa10
   24de0:	blr	x1
   24de4:	str	w22, [x19, x0]
   24de8:	ldr	x1, [x20, #16]
   24dec:	add	x2, x19, x0
   24df0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   24df4:	ldr	x4, [x0, #2512]
   24df8:	add	x0, x0, #0x9d0
   24dfc:	blr	x4
   24e00:	str	x23, [x19, x0]
   24e04:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   24e08:	ldr	x4, [x0, #2544]
   24e0c:	add	x0, x0, #0x9f0
   24e10:	blr	x4
   24e14:	str	x24, [x19, x0]
   24e18:	cmp	x24, x1
   24e1c:	mov	w0, w3
   24e20:	ccmp	x23, x1, #0x0, ge  // ge = tcont
   24e24:	b.le	24e5c <mpfr_set_d@@Base+0x18c>
   24e28:	mov	w1, w0
   24e2c:	mov	w2, w21
   24e30:	mov	x0, x20
   24e34:	bl	cb30 <mpfr_check_range@plt>
   24e38:	ldp	x21, x22, [sp, #32]
   24e3c:	ldp	x23, x24, [sp, #48]
   24e40:	ldp	x19, x20, [sp, #16]
   24e44:	ldp	x29, x30, [sp], #112
   24e48:	ret
   24e4c:	orr	x4, x1, x4, lsl #43
   24e50:	sub	w5, w5, #0x3fe
   24e54:	orr	x4, x4, #0x8000000000000000
   24e58:	b	24da8 <mpfr_set_d@@Base+0xd8>
   24e5c:	cbz	w0, 24e38 <mpfr_set_d@@Base+0x168>
   24e60:	orr	w22, w22, #0x8
   24e64:	ldp	x23, x24, [sp, #48]
   24e68:	str	w22, [x2]
   24e6c:	ldp	x19, x20, [sp, #16]
   24e70:	ldp	x21, x22, [sp, #32]
   24e74:	ldp	x29, x30, [sp], #112
   24e78:	ret
   24e7c:	fcmpe	d0, #0.0
   24e80:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   24e84:	str	x0, [x20, #16]
   24e88:	b.le	24ef4 <mpfr_set_d@@Base+0x224>
   24e8c:	mov	w1, #0x1                   	// #1
   24e90:	str	w1, [x20, #8]
   24e94:	mov	w0, #0x0                   	// #0
   24e98:	ldp	x19, x20, [sp, #16]
   24e9c:	ldp	x29, x30, [sp], #112
   24ea0:	ret
   24ea4:	mrs	x1, tpidr_el0
   24ea8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   24eac:	ldr	x2, [x0, #2576]
   24eb0:	add	x0, x0, #0xa10
   24eb4:	blr	x2
   24eb8:	add	x1, x1, x0
   24ebc:	mov	x2, #0x2                   	// #2
   24ec0:	movk	x2, #0x8000, lsl #48
   24ec4:	str	x2, [x20, #16]
   24ec8:	mov	w0, #0x0                   	// #0
   24ecc:	ldr	w2, [x1]
   24ed0:	ldp	x19, x20, [sp, #16]
   24ed4:	orr	w2, w2, #0x4
   24ed8:	str	w2, [x1]
   24edc:	ldp	x29, x30, [sp], #112
   24ee0:	ret
   24ee4:	fmov	x1, d0
   24ee8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   24eec:	str	x0, [x20, #16]
   24ef0:	tbz	x1, #63, 24e8c <mpfr_set_d@@Base+0x1bc>
   24ef4:	mov	w1, #0xffffffff            	// #-1
   24ef8:	mov	w0, #0x0                   	// #0
   24efc:	str	w1, [x20, #8]
   24f00:	b	24e40 <mpfr_set_d@@Base+0x170>
   24f04:	nop

0000000000024f08 <mpfr_set_default_prec@@Base>:
   24f08:	stp	x29, x30, [sp, #-16]!
   24f0c:	mov	x1, x0
   24f10:	mov	x2, #0xfffffffffffffefe    	// #-258
   24f14:	mov	x29, sp
   24f18:	sub	x0, x0, #0x1
   24f1c:	movk	x2, #0x7fff, lsl #48
   24f20:	cmp	x0, x2
   24f24:	b.hi	24f48 <mpfr_set_default_prec@@Base+0x40>  // b.pmore
   24f28:	mrs	x2, tpidr_el0
   24f2c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   24f30:	ldr	x3, [x0, #2528]
   24f34:	add	x0, x0, #0x9e0
   24f38:	blr	x3
   24f3c:	str	x1, [x2, x0]
   24f40:	ldp	x29, x30, [sp], #16
   24f44:	ret
   24f48:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   24f4c:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   24f50:	add	x2, x2, #0x370
   24f54:	add	x0, x0, #0x3e0
   24f58:	mov	w1, #0x20                  	// #32
   24f5c:	bl	cb40 <mpfr_assert_fail@plt>

0000000000024f60 <mpfr_get_default_prec@@Base>:
   24f60:	stp	x29, x30, [sp, #-16]!
   24f64:	mrs	x1, tpidr_el0
   24f68:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   24f6c:	ldr	x2, [x0, #2528]
   24f70:	add	x0, x0, #0x9e0
   24f74:	blr	x2
   24f78:	mov	x29, sp
   24f7c:	ldp	x29, x30, [sp], #16
   24f80:	ldr	x0, [x1, x0]
   24f84:	ret

0000000000024f88 <mpfr_set_exp@@Base>:
   24f88:	mov	x2, x0
   24f8c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   24f90:	ldr	x3, [x2, #16]
   24f94:	cmp	x3, x0
   24f98:	b.le	24ffc <mpfr_set_exp@@Base+0x74>
   24f9c:	mrs	x3, tpidr_el0
   24fa0:	stp	x29, x30, [sp, #-16]!
   24fa4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   24fa8:	ldr	x4, [x0, #2512]
   24fac:	add	x0, x0, #0x9d0
   24fb0:	blr	x4
   24fb4:	mov	x29, sp
   24fb8:	ldr	x0, [x3, x0]
   24fbc:	cmp	x0, x1
   24fc0:	b.gt	24ff0 <mpfr_set_exp@@Base+0x68>
   24fc4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   24fc8:	ldr	x4, [x0, #2544]
   24fcc:	add	x0, x0, #0x9f0
   24fd0:	blr	x4
   24fd4:	ldr	x0, [x3, x0]
   24fd8:	cmp	x0, x1
   24fdc:	b.lt	24ff0 <mpfr_set_exp@@Base+0x68>  // b.tstop
   24fe0:	str	x1, [x2, #16]
   24fe4:	mov	w0, #0x0                   	// #0
   24fe8:	ldp	x29, x30, [sp], #16
   24fec:	ret
   24ff0:	mov	w0, #0x1                   	// #1
   24ff4:	ldp	x29, x30, [sp], #16
   24ff8:	ret
   24ffc:	mov	w0, #0x1                   	// #1
   25000:	ret
   25004:	nop

0000000000025008 <mpfr_set_default_rounding_mode@@Base>:
   25008:	cmp	w0, #0x5
   2500c:	b.hi	2503c <mpfr_set_default_rounding_mode@@Base+0x34>  // b.pmore
   25010:	stp	x29, x30, [sp, #-16]!
   25014:	mrs	x2, tpidr_el0
   25018:	mov	w1, w0
   2501c:	mov	x29, sp
   25020:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   25024:	ldr	x3, [x0, #2640]
   25028:	add	x0, x0, #0xa50
   2502c:	blr	x3
   25030:	str	w1, [x2, x0]
   25034:	ldp	x29, x30, [sp], #16
   25038:	ret
   2503c:	ret

0000000000025040 <mpfr_get_default_rounding_mode@@Base>:
   25040:	stp	x29, x30, [sp, #-16]!
   25044:	mrs	x1, tpidr_el0
   25048:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2504c:	ldr	x2, [x0, #2640]
   25050:	add	x0, x0, #0xa50
   25054:	blr	x2
   25058:	mov	x29, sp
   2505c:	ldr	w0, [x1, x0]
   25060:	ldp	x29, x30, [sp], #16
   25064:	ret

0000000000025068 <mpfr_set_f@@Base>:
   25068:	stp	x29, x30, [sp, #-128]!
   2506c:	mov	x29, sp
   25070:	stp	x21, x22, [sp, #32]
   25074:	mov	x21, x1
   25078:	ldr	w1, [x1, #4]
   2507c:	stp	x19, x20, [sp, #16]
   25080:	mov	x19, x0
   25084:	stp	x23, x24, [sp, #48]
   25088:	stp	x25, x26, [sp, #64]
   2508c:	str	x27, [sp, #80]
   25090:	cbz	w1, 25264 <mpfr_set_f@@Base+0x1fc>
   25094:	ldr	w0, [x0, #8]
   25098:	mov	w22, w2
   2509c:	mul	w2, w1, w0
   250a0:	tbnz	w2, #31, 25230 <mpfr_set_f@@Base+0x1c8>
   250a4:	cmp	w1, #0x0
   250a8:	cneg	w3, w1, lt  // lt = tstop
   250ac:	ldr	x24, [x21, #16]
   250b0:	sbfiz	x1, x3, #3, #32
   250b4:	ldr	x20, [x19]
   250b8:	add	x0, x24, x1
   250bc:	sxtw	x2, w3
   250c0:	sub	x20, x20, #0x1
   250c4:	ldur	x23, [x0, #-8]
   250c8:	asr	x20, x20, #6
   250cc:	add	x20, x20, #0x1
   250d0:	cmp	x20, w3, sxtw
   250d4:	clz	x23, x23
   250d8:	ldr	x25, [x19, #24]
   250dc:	b.gt	25158 <mpfr_set_f@@Base+0xf0>
   250e0:	str	xzr, [x29, #120]
   250e4:	cmp	x1, #0x4, lsl #12
   250e8:	lsl	x27, x2, #6
   250ec:	b.hi	252ac <mpfr_set_f@@Base+0x244>  // b.pmore
   250f0:	add	x1, x1, #0xf
   250f4:	and	x1, x1, #0xfffffffffffffff0
   250f8:	sub	sp, sp, x1
   250fc:	mov	x26, sp
   25100:	cbnz	x23, 25288 <mpfr_set_f@@Base+0x220>
   25104:	cmp	x26, x24
   25108:	b.eq	2511c <mpfr_set_f@@Base+0xb4>  // b.none
   2510c:	lsl	x2, x2, #3
   25110:	mov	x1, x24
   25114:	mov	x0, x26
   25118:	bl	ba10 <memcpy@plt>
   2511c:	ldr	x4, [x19]
   25120:	mov	x2, x27
   25124:	ldr	w3, [x21, #4]
   25128:	mov	x1, x26
   2512c:	add	x6, x29, #0x74
   25130:	mov	w5, w22
   25134:	mov	x0, x25
   25138:	lsr	w3, w3, #31
   2513c:	bl	ca20 <mpfr_round_raw@plt>
   25140:	mov	w24, w0
   25144:	cbnz	w0, 2529c <mpfr_set_f@@Base+0x234>
   25148:	ldr	x0, [x29, #120]
   2514c:	cbz	x0, 25190 <mpfr_set_f@@Base+0x128>
   25150:	bl	c410 <mpfr_tmp_free@plt>
   25154:	b	25190 <mpfr_set_f@@Base+0x128>
   25158:	sub	x20, x20, x2
   2515c:	add	x0, x25, x20, lsl #3
   25160:	cbnz	x23, 25278 <mpfr_set_f@@Base+0x210>
   25164:	cmp	x24, x0
   25168:	b.eq	25178 <mpfr_set_f@@Base+0x110>  // b.none
   2516c:	mov	x2, x1
   25170:	mov	x1, x24
   25174:	bl	ba10 <memcpy@plt>
   25178:	lsl	x2, x20, #3
   2517c:	mov	x0, x25
   25180:	mov	w1, #0x0                   	// #0
   25184:	mov	w24, #0x0                   	// #0
   25188:	bl	c110 <memset@plt>
   2518c:	str	wzr, [x29, #116]
   25190:	mrs	x4, tpidr_el0
   25194:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   25198:	ldr	x1, [x0, #2544]
   2519c:	add	x0, x0, #0x9f0
   251a0:	blr	x1
   251a4:	ldr	x2, [x21, #8]
   251a8:	ldr	x3, [x4, x0]
   251ac:	subs	x0, x3, #0x1
   251b0:	add	x1, x3, #0x3e
   251b4:	csel	x1, x1, x0, mi  // mi = first
   251b8:	asr	x1, x1, #6
   251bc:	add	x1, x1, #0x1
   251c0:	cmp	x2, x1
   251c4:	b.gt	252c4 <mpfr_set_f@@Base+0x25c>
   251c8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   251cc:	ldr	x1, [x0, #2512]
   251d0:	add	x0, x0, #0x9d0
   251d4:	blr	x1
   251d8:	lsl	x2, x2, #6
   251dc:	ldr	x0, [x4, x0]
   251e0:	sub	x23, x2, x23
   251e4:	add	x23, x23, w24, sxtw
   251e8:	str	x23, [x19, #16]
   251ec:	cmp	x23, x0
   251f0:	ldr	w1, [x29, #116]
   251f4:	ccmp	x3, x23, #0x1, ge  // ge = tcont
   251f8:	b.ge	2523c <mpfr_set_f@@Base+0x1d4>  // b.tcont
   251fc:	mov	w2, w22
   25200:	mov	x0, x19
   25204:	bl	cb30 <mpfr_check_range@plt>
   25208:	mov	w1, w0
   2520c:	mov	sp, x29
   25210:	mov	w0, w1
   25214:	ldp	x19, x20, [sp, #16]
   25218:	ldp	x21, x22, [sp, #32]
   2521c:	ldp	x23, x24, [sp, #48]
   25220:	ldp	x25, x26, [sp, #64]
   25224:	ldr	x27, [sp, #80]
   25228:	ldp	x29, x30, [sp], #128
   2522c:	ret
   25230:	neg	w0, w0
   25234:	str	w0, [x19, #8]
   25238:	b	250a4 <mpfr_set_f@@Base+0x3c>
   2523c:	cbz	w1, 2520c <mpfr_set_f@@Base+0x1a4>
   25240:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   25244:	ldr	x2, [x0, #2576]
   25248:	add	x0, x0, #0xa10
   2524c:	blr	x2
   25250:	add	x0, x4, x0
   25254:	ldr	w2, [x0]
   25258:	orr	w2, w2, #0x8
   2525c:	str	w2, [x0]
   25260:	b	2520c <mpfr_set_f@@Base+0x1a4>
   25264:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   25268:	mov	w2, #0x1                   	// #1
   2526c:	str	w2, [x19, #8]
   25270:	str	x0, [x19, #16]
   25274:	b	2520c <mpfr_set_f@@Base+0x1a4>
   25278:	mov	x1, x24
   2527c:	mov	w3, w23
   25280:	bl	bcc0 <__gmpn_lshift@plt>
   25284:	b	25178 <mpfr_set_f@@Base+0x110>
   25288:	mov	x1, x24
   2528c:	mov	w3, w23
   25290:	mov	x0, x26
   25294:	bl	bcc0 <__gmpn_lshift@plt>
   25298:	b	2511c <mpfr_set_f@@Base+0xb4>
   2529c:	add	x20, x25, x20, lsl #3
   252a0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   252a4:	stur	x0, [x20, #-8]
   252a8:	b	25148 <mpfr_set_f@@Base+0xe0>
   252ac:	add	x0, x29, #0x78
   252b0:	str	x2, [x29, #104]
   252b4:	bl	bdc0 <mpfr_tmp_allocate@plt>
   252b8:	mov	x26, x0
   252bc:	ldr	x2, [x29, #104]
   252c0:	b	25100 <mpfr_set_f@@Base+0x98>
   252c4:	ldr	w2, [x19, #8]
   252c8:	mov	w1, w22
   252cc:	mov	x0, x19
   252d0:	bl	bf40 <mpfr_overflow@plt>
   252d4:	mov	w1, w0
   252d8:	b	2520c <mpfr_set_f@@Base+0x1a4>
   252dc:	nop

00000000000252e0 <mpfr_set_prec_raw@@Base>:
   252e0:	stp	x29, x30, [sp, #-32]!
   252e4:	mov	x29, sp
   252e8:	stp	x19, x20, [sp, #16]
   252ec:	mov	x19, x1
   252f0:	mov	x20, x0
   252f4:	sub	x1, x1, #0x1
   252f8:	mov	x0, #0xfffffffffffffefe    	// #-258
   252fc:	movk	x0, #0x7fff, lsl #48
   25300:	cmp	x1, x0
   25304:	b.hi	25350 <mpfr_set_prec_raw@@Base+0x70>  // b.pmore
   25308:	ldr	x0, [x20, #24]
   2530c:	ldur	x0, [x0, #-8]
   25310:	cmp	x19, x0, lsl #6
   25314:	b.gt	25328 <mpfr_set_prec_raw@@Base+0x48>
   25318:	str	x19, [x20]
   2531c:	ldp	x19, x20, [sp, #16]
   25320:	ldp	x29, x30, [sp], #32
   25324:	ret
   25328:	mov	w1, #0x1d                  	// #29
   2532c:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   25330:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   25334:	add	x2, x2, #0x448
   25338:	add	x0, x0, #0x438
   2533c:	bl	cb40 <mpfr_assert_fail@plt>
   25340:	str	x19, [x20]
   25344:	ldp	x19, x20, [sp, #16]
   25348:	ldp	x29, x30, [sp], #32
   2534c:	ret
   25350:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   25354:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   25358:	add	x2, x2, #0x3f0
   2535c:	add	x0, x0, #0x438
   25360:	mov	w1, #0x1c                  	// #28
   25364:	bl	cb40 <mpfr_assert_fail@plt>

0000000000025368 <mpfr_get_prec@@Base>:
   25368:	ldr	x0, [x0]
   2536c:	ret
   25370:	stp	x29, x30, [sp, #-64]!
   25374:	mov	x29, sp
   25378:	stp	x19, x20, [sp, #16]
   2537c:	ldr	w19, [x1]
   25380:	ldr	x20, [x2]
   25384:	cmp	w19, #0x0
   25388:	cneg	w19, w19, lt  // lt = tstop
   2538c:	stp	x21, x22, [sp, #32]
   25390:	mov	x21, x0
   25394:	stp	x23, x24, [sp, #48]
   25398:	sxtw	x19, w19
   2539c:	mov	x23, x1
   253a0:	str	x19, [x3]
   253a4:	ldr	x0, [x20]
   253a8:	cbnz	x0, 253bc <mpfr_get_prec@@Base+0x54>
   253ac:	nop
   253b0:	ldr	x2, [x20, #8]!
   253b4:	sub	x19, x19, #0x1
   253b8:	cbz	x2, 253b0 <mpfr_get_prec@@Base+0x48>
   253bc:	lsl	x24, x19, #3
   253c0:	lsl	x3, x19, #6
   253c4:	add	x1, x20, x24
   253c8:	mov	x0, x21
   253cc:	ldur	x22, [x1, #-8]
   253d0:	clz	x1, x22
   253d4:	mov	x22, x1
   253d8:	sub	x1, x3, x1
   253dc:	cmp	x1, #0x0
   253e0:	csinc	x1, x1, xzr, gt
   253e4:	bl	ca80 <mpfr_init2@plt>
   253e8:	ldr	x0, [x21, #24]
   253ec:	cbz	x22, 25430 <mpfr_get_prec@@Base+0xc8>
   253f0:	mov	x2, x19
   253f4:	mov	x1, x20
   253f8:	mov	w3, w22
   253fc:	bl	bcc0 <__gmpn_lshift@plt>
   25400:	ldr	w2, [x23]
   25404:	mov	w1, #0x1                   	// #1
   25408:	ldp	x19, x20, [sp, #16]
   2540c:	cmp	w2, #0x0
   25410:	cneg	w1, w1, lt  // lt = tstop
   25414:	neg	w0, w22
   25418:	ldp	x23, x24, [sp, #48]
   2541c:	str	w1, [x21, #8]
   25420:	str	xzr, [x21, #16]
   25424:	ldp	x21, x22, [sp, #32]
   25428:	ldp	x29, x30, [sp], #64
   2542c:	ret
   25430:	cmp	x0, x20
   25434:	b.eq	25400 <mpfr_get_prec@@Base+0x98>  // b.none
   25438:	mov	x2, x24
   2543c:	mov	x1, x20
   25440:	bl	ba10 <memcpy@plt>
   25444:	b	25400 <mpfr_get_prec@@Base+0x98>

0000000000025448 <mpfr_set_q@@Base>:
   25448:	stp	x29, x30, [sp, #-208]!
   2544c:	mov	x29, sp
   25450:	stp	x23, x24, [sp, #48]
   25454:	mov	x23, x0
   25458:	ldr	w0, [x1, #4]
   2545c:	stp	x19, x20, [sp, #16]
   25460:	ldr	w19, [x1, #20]
   25464:	cbz	w0, 25678 <mpfr_set_q@@Base+0x230>
   25468:	cbz	w19, 25694 <mpfr_set_q@@Base+0x24c>
   2546c:	stp	x27, x28, [sp, #80]
   25470:	mrs	x28, tpidr_el0
   25474:	mov	x4, x1
   25478:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2547c:	ldr	x1, [x0, #2576]
   25480:	add	x0, x0, #0xa10
   25484:	blr	x1
   25488:	add	x1, x28, x0
   2548c:	ldr	w0, [x28, x0]
   25490:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   25494:	str	w0, [sp, #108]
   25498:	mov	x7, #0x3fffffffffffffff    	// #4611686018427387903
   2549c:	stp	x1, x4, [sp, #112]
   254a0:	add	x3, sp, #0x80
   254a4:	mov	w20, w2
   254a8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   254ac:	ldr	x1, [x0, #2512]
   254b0:	add	x0, x0, #0x9d0
   254b4:	blr	x1
   254b8:	stp	x25, x26, [sp, #64]
   254bc:	add	x25, x28, x0
   254c0:	ldr	x26, [x28, x0]
   254c4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   254c8:	ldr	x1, [x0, #2544]
   254cc:	add	x0, x0, #0x9f0
   254d0:	blr	x1
   254d4:	add	x24, x28, x0
   254d8:	stp	x21, x22, [sp, #32]
   254dc:	add	x21, sp, #0x90
   254e0:	add	x2, x4, #0x8
   254e4:	add	x1, x4, #0x4
   254e8:	str	x8, [x25]
   254ec:	add	x22, sp, #0xb0
   254f0:	ldr	x27, [x28, x0]
   254f4:	mov	x0, x21
   254f8:	str	x7, [x24]
   254fc:	bl	25370 <mpfr_get_prec@@Base+0x8>
   25500:	ldr	x4, [sp, #120]
   25504:	add	x3, sp, #0x88
   25508:	mov	w19, w0
   2550c:	mov	x0, x22
   25510:	add	x2, x4, #0x18
   25514:	add	x1, x4, #0x14
   25518:	bl	25370 <mpfr_get_prec@@Base+0x8>
   2551c:	mov	w4, w0
   25520:	ldp	x1, x2, [sp, #128]
   25524:	mov	x0, #0xffffffffffffff      	// #72057594037927935
   25528:	sub	x1, x1, x2
   2552c:	str	x1, [sp, #128]
   25530:	cmp	x1, x0
   25534:	b.gt	2571c <mpfr_set_q@@Base+0x2d4>
   25538:	mov	x0, #0xff00000000000000    	// #-72057594037927936
   2553c:	cmp	x1, x0
   25540:	b.lt	256ec <mpfr_set_q@@Base+0x2a4>  // b.tstop
   25544:	mov	w3, w20
   25548:	mov	x2, x22
   2554c:	mov	x1, x21
   25550:	mov	x0, x23
   25554:	str	w4, [sp, #120]
   25558:	bl	c620 <mpfr_div@plt>
   2555c:	ldr	x2, [sp, #128]
   25560:	sxtw	x7, w19
   25564:	ldr	w4, [sp, #120]
   25568:	mov	x1, x23
   2556c:	mov	w19, w0
   25570:	mov	w3, w20
   25574:	add	x2, x7, x2, lsl #6
   25578:	mov	x0, x23
   2557c:	sub	x2, x2, w4, sxtw
   25580:	bl	bb90 <mpfr_mul_2si@plt>
   25584:	str	x27, [x24]
   25588:	ldr	x1, [sp, #112]
   2558c:	str	x26, [x25]
   25590:	ldr	w2, [sp, #108]
   25594:	str	w2, [x1]
   25598:	cbnz	w0, 256b0 <mpfr_set_q@@Base+0x268>
   2559c:	ldr	x0, [x23, #16]
   255a0:	cmp	x27, x0
   255a4:	ccmp	x26, x0, #0x0, ge  // ge = tcont
   255a8:	b.le	255e4 <mpfr_set_q@@Base+0x19c>
   255ac:	mov	w1, w19
   255b0:	mov	w2, w20
   255b4:	mov	x0, x23
   255b8:	bl	cb30 <mpfr_check_range@plt>
   255bc:	mov	w19, w0
   255c0:	mov	x0, x22
   255c4:	bl	c070 <mpfr_clear@plt>
   255c8:	mov	x0, x21
   255cc:	bl	c070 <mpfr_clear@plt>
   255d0:	cbnz	w19, 25608 <mpfr_set_q@@Base+0x1c0>
   255d4:	ldp	x21, x22, [sp, #32]
   255d8:	ldp	x25, x26, [sp, #64]
   255dc:	ldp	x27, x28, [sp, #80]
   255e0:	b	25664 <mpfr_set_q@@Base+0x21c>
   255e4:	cbz	w19, 25648 <mpfr_set_q@@Base+0x200>
   255e8:	ldr	w0, [sp, #108]
   255ec:	orr	w23, w0, #0x8
   255f0:	ldr	x0, [sp, #112]
   255f4:	str	w23, [x0]
   255f8:	mov	x0, x22
   255fc:	bl	c070 <mpfr_clear@plt>
   25600:	mov	x0, x21
   25604:	bl	c070 <mpfr_clear@plt>
   25608:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2560c:	ldr	x1, [x0, #2576]
   25610:	add	x0, x0, #0xa10
   25614:	blr	x1
   25618:	add	x0, x28, x0
   2561c:	ldp	x21, x22, [sp, #32]
   25620:	ldr	w1, [x0]
   25624:	ldp	x25, x26, [sp, #64]
   25628:	orr	w1, w1, #0x8
   2562c:	ldp	x27, x28, [sp, #80]
   25630:	str	w1, [x0]
   25634:	mov	w0, w19
   25638:	ldp	x19, x20, [sp, #16]
   2563c:	ldp	x23, x24, [sp, #48]
   25640:	ldp	x29, x30, [sp], #208
   25644:	ret
   25648:	mov	x0, x22
   2564c:	bl	c070 <mpfr_clear@plt>
   25650:	mov	x0, x21
   25654:	bl	c070 <mpfr_clear@plt>
   25658:	ldp	x21, x22, [sp, #32]
   2565c:	ldp	x25, x26, [sp, #64]
   25660:	ldp	x27, x28, [sp, #80]
   25664:	mov	w0, w19
   25668:	ldp	x19, x20, [sp, #16]
   2566c:	ldp	x23, x24, [sp, #48]
   25670:	ldp	x29, x30, [sp], #208
   25674:	ret
   25678:	cbz	w19, 256b8 <mpfr_set_q@@Base+0x270>
   2567c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   25680:	mov	w1, #0x1                   	// #1
   25684:	mov	w19, #0x0                   	// #0
   25688:	str	w1, [x23, #8]
   2568c:	str	x0, [x23, #16]
   25690:	b	25664 <mpfr_set_q@@Base+0x21c>
   25694:	cmp	w0, #0x0
   25698:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2569c:	mov	w0, #0x1                   	// #1
   256a0:	cneg	w0, w0, lt  // lt = tstop
   256a4:	str	w0, [x23, #8]
   256a8:	str	x1, [x23, #16]
   256ac:	b	25664 <mpfr_set_q@@Base+0x21c>
   256b0:	mov	w19, w0
   256b4:	b	255f8 <mpfr_set_q@@Base+0x1b0>
   256b8:	mrs	x1, tpidr_el0
   256bc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   256c0:	ldr	x2, [x0, #2576]
   256c4:	add	x0, x0, #0xa10
   256c8:	blr	x2
   256cc:	add	x0, x1, x0
   256d0:	mov	x1, #0x2                   	// #2
   256d4:	movk	x1, #0x8000, lsl #48
   256d8:	str	x1, [x23, #16]
   256dc:	ldr	w1, [x0]
   256e0:	orr	w1, w1, #0x4
   256e4:	str	w1, [x0]
   256e8:	b	25664 <mpfr_set_q@@Base+0x21c>
   256ec:	ldr	w4, [sp, #108]
   256f0:	cmp	w20, #0x0
   256f4:	ldr	w2, [x23, #8]
   256f8:	csinc	w1, w20, wzr, ne  // ne = any
   256fc:	ldr	x3, [sp, #112]
   25700:	mov	x0, x23
   25704:	str	x27, [x24]
   25708:	str	x26, [x25]
   2570c:	str	w4, [x3]
   25710:	bl	c3c0 <mpfr_underflow@plt>
   25714:	mov	w19, w0
   25718:	b	255c0 <mpfr_set_q@@Base+0x178>
   2571c:	ldr	w4, [sp, #108]
   25720:	mov	w1, w20
   25724:	ldr	w2, [x23, #8]
   25728:	mov	x0, x23
   2572c:	ldr	x3, [sp, #112]
   25730:	str	x27, [x24]
   25734:	str	x26, [x25]
   25738:	str	w4, [x3]
   2573c:	bl	bf40 <mpfr_overflow@plt>
   25740:	mov	w19, w0
   25744:	b	255c0 <mpfr_set_q@@Base+0x178>

0000000000025748 <mpfr_set_si@@Base>:
   25748:	mov	w3, w2
   2574c:	mov	x2, #0x0                   	// #0
   25750:	b	ba80 <mpfr_set_si_2exp@plt>
   25754:	nop

0000000000025758 <mpfr_set_str@@Base>:
   25758:	mov	w4, w3
   2575c:	ldrb	w3, [x1]
   25760:	cbz	w3, 25790 <mpfr_set_str@@Base+0x38>
   25764:	stp	x29, x30, [sp, #-32]!
   25768:	mov	w3, w2
   2576c:	mov	x29, sp
   25770:	add	x2, sp, #0x18
   25774:	bl	bc10 <mpfr_strtofr@plt>
   25778:	ldr	x0, [sp, #24]
   2577c:	ldrb	w0, [x0]
   25780:	ldp	x29, x30, [sp], #32
   25784:	cmp	w0, #0x0
   25788:	csetm	w0, ne  // ne = any
   2578c:	ret
   25790:	mov	w0, #0xffffffff            	// #-1
   25794:	ret

0000000000025798 <mpfr_init_set_str@@Base>:
   25798:	stp	x29, x30, [sp, #-48]!
   2579c:	mov	x29, sp
   257a0:	stp	x19, x20, [sp, #16]
   257a4:	mov	x20, x1
   257a8:	mov	x19, x0
   257ac:	stp	x21, x22, [sp, #32]
   257b0:	mov	w21, w2
   257b4:	mov	w22, w3
   257b8:	bl	bbd0 <mpfr_init@plt>
   257bc:	mov	w3, w22
   257c0:	mov	w2, w21
   257c4:	mov	x1, x20
   257c8:	mov	x0, x19
   257cc:	ldp	x19, x20, [sp, #16]
   257d0:	ldp	x21, x22, [sp, #32]
   257d4:	ldp	x29, x30, [sp], #48
   257d8:	b	c6c0 <mpfr_set_str@plt>
   257dc:	nop

00000000000257e0 <mpfr_set_str_binary@@Base>:
   257e0:	stp	x29, x30, [sp, #-16]!
   257e4:	mov	x4, x0
   257e8:	mov	x29, sp
   257ec:	ldrb	w3, [x1]
   257f0:	cmp	w3, #0x4e
   257f4:	b.eq	25854 <mpfr_set_str_binary@@Base+0x74>  // b.none
   257f8:	sub	w3, w3, #0x2b
   257fc:	mov	w5, #0xfd                  	// #253
   25800:	tst	w3, w5
   25804:	cset	w3, eq  // eq = none
   25808:	ldrb	w3, [x1, w3, uxtw]
   2580c:	cmp	w3, #0x49
   25810:	b.eq	25830 <mpfr_set_str_binary@@Base+0x50>  // b.none
   25814:	mov	w4, #0x1                   	// #1
   25818:	mov	w3, #0x2                   	// #2
   2581c:	mov	x2, #0x0                   	// #0
   25820:	bl	bc10 <mpfr_strtofr@plt>
   25824:	cbnz	w0, 2588c <mpfr_set_str_binary@@Base+0xac>
   25828:	ldp	x29, x30, [sp], #16
   2582c:	ret
   25830:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   25834:	str	x0, [x4, #16]
   25838:	mov	w0, #0xffffffff            	// #-1
   2583c:	ldrb	w1, [x1]
   25840:	cmp	w1, #0x2d
   25844:	csinc	w0, w0, wzr, eq  // eq = none
   25848:	str	w0, [x4, #8]
   2584c:	ldp	x29, x30, [sp], #16
   25850:	ret
   25854:	mrs	x1, tpidr_el0
   25858:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2585c:	ldr	x2, [x0, #2576]
   25860:	add	x0, x0, #0xa10
   25864:	blr	x2
   25868:	add	x0, x1, x0
   2586c:	mov	x1, #0x2                   	// #2
   25870:	movk	x1, #0x8000, lsl #48
   25874:	str	x1, [x4, #16]
   25878:	ldr	w1, [x0]
   2587c:	orr	w1, w1, #0x4
   25880:	str	w1, [x0]
   25884:	ldp	x29, x30, [sp], #16
   25888:	ret
   2588c:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   25890:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   25894:	add	x2, x2, #0x4b8
   25898:	add	x0, x0, #0x4c8
   2589c:	mov	w1, #0x36                  	// #54
   258a0:	bl	cb40 <mpfr_assert_fail@plt>
   258a4:	nop

00000000000258a8 <mpfr_set_ui@@Base>:
   258a8:	mov	w3, w2
   258ac:	mov	x2, #0x0                   	// #0
   258b0:	b	c5f0 <mpfr_set_ui_2exp@plt>
   258b4:	nop

00000000000258b8 <mpfr_set_z@@Base>:
   258b8:	mov	w3, w2
   258bc:	mov	x2, #0x0                   	// #0
   258c0:	b	c4f0 <mpfr_set_z_2exp@plt>
   258c4:	nop

00000000000258c8 <mpfr_sqrt@@Base>:
   258c8:	stp	x29, x30, [sp, #-192]!
   258cc:	mov	x29, sp
   258d0:	stp	x25, x26, [sp, #64]
   258d4:	ldr	x26, [x1, #16]
   258d8:	stp	x19, x20, [sp, #16]
   258dc:	stp	x21, x22, [sp, #32]
   258e0:	mov	x22, x1
   258e4:	stp	x23, x24, [sp, #48]
   258e8:	mov	x24, x0
   258ec:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   258f0:	stp	x27, x28, [sp, #80]
   258f4:	cmp	x26, x0
   258f8:	b.le	25e1c <mpfr_sqrt@@Base+0x554>
   258fc:	ldr	w0, [x1, #8]
   25900:	tbnz	w0, #31, 25e40 <mpfr_sqrt@@Base+0x578>
   25904:	ldr	x19, [x1]
   25908:	mov	w0, #0x1                   	// #1
   2590c:	ldr	x3, [x24]
   25910:	str	w0, [x24, #8]
   25914:	mov	w20, w2
   25918:	cmp	x3, x19
   2591c:	ldr	x25, [x24, #24]
   25920:	b.eq	25aec <mpfr_sqrt@@Base+0x224>  // b.none
   25924:	sub	x19, x19, #0x1
   25928:	neg	w23, w3
   2592c:	sub	x3, x3, #0x1
   25930:	str	xzr, [x29, #160]
   25934:	asr	x19, x19, #6
   25938:	and	w23, w23, #0x3f
   2593c:	add	x19, x19, #0x1
   25940:	asr	x3, x3, #6
   25944:	orr	w0, w20, w23
   25948:	cbz	w0, 25a8c <mpfr_sqrt@@Base+0x1c4>
   2594c:	add	x21, x3, #0x1
   25950:	mov	x27, x25
   25954:	lsl	x6, x21, #1
   25958:	and	w0, w26, #0x1
   2595c:	str	w0, [x29, #120]
   25960:	lsl	x1, x6, #3
   25964:	cmp	x1, #0x4, lsl #12
   25968:	ldr	x7, [x22, #24]
   2596c:	b.hi	25f08 <mpfr_sqrt@@Base+0x640>  // b.pmore
   25970:	sub	sp, sp, x1
   25974:	mov	x26, sp
   25978:	cmp	x19, x6
   2597c:	b.gt	25eac <mpfr_sqrt@@Base+0x5e4>
   25980:	subs	x28, x6, x19
   25984:	b.eq	25ab8 <mpfr_sqrt@@Base+0x1f0>  // b.none
   25988:	lsl	x28, x28, #3
   2598c:	mov	w1, #0x0                   	// #0
   25990:	mov	x2, x28
   25994:	mov	x0, x26
   25998:	stp	x6, x7, [x29, #104]
   2599c:	bl	c110 <memset@plt>
   259a0:	ldr	w1, [x29, #120]
   259a4:	add	x0, x26, x28
   259a8:	ldp	x6, x7, [x29, #104]
   259ac:	cbz	w1, 25ac8 <mpfr_sqrt@@Base+0x200>
   259b0:	sub	x4, x28, #0x8
   259b4:	mov	x2, x19
   259b8:	mov	x1, x7
   259bc:	mov	w3, #0x1                   	// #1
   259c0:	str	x4, [x29, #112]
   259c4:	mov	x28, #0x0                   	// #0
   259c8:	bl	bce0 <__gmpn_rshift@plt>
   259cc:	ldp	x6, x4, [x29, #104]
   259d0:	str	x0, [x26, x4]
   259d4:	mov	x3, x6
   259d8:	mov	x1, #0x0                   	// #0
   259dc:	mov	x2, x26
   259e0:	mov	x0, x27
   259e4:	bl	ccc0 <__gmpn_sqrtrem@plt>
   259e8:	orr	x0, x0, x28
   259ec:	cmp	x0, #0x0
   259f0:	mov	x1, #0x0                   	// #0
   259f4:	cset	x4, ne  // ne = any
   259f8:	cmp	w23, #0x40
   259fc:	ldr	x3, [x27]
   25a00:	b.eq	25a1c <mpfr_sqrt@@Base+0x154>  // b.none
   25a04:	mov	x2, #0x1                   	// #1
   25a08:	lsl	x2, x2, x23
   25a0c:	neg	x1, x2
   25a10:	sub	x2, x2, #0x1
   25a14:	and	x1, x1, x3
   25a18:	and	x3, x2, x3
   25a1c:	str	x1, [x27]
   25a20:	orr	x2, x4, x3
   25a24:	ldr	w4, [x29, #120]
   25a28:	and	w5, w20, #0xfffffffd
   25a2c:	ldr	x19, [x22, #16]
   25a30:	cmp	w5, #0x1
   25a34:	add	x19, x19, w4, sxtw
   25a38:	add	x19, x19, x19, lsr #63
   25a3c:	asr	x19, x19, #1
   25a40:	b.eq	25cc0 <mpfr_sqrt@@Base+0x3f8>  // b.none
   25a44:	cbz	x2, 25e14 <mpfr_sqrt@@Base+0x54c>
   25a48:	cmp	w23, #0x40
   25a4c:	cbnz	w20, 25d8c <mpfr_sqrt@@Base+0x4c4>
   25a50:	b.eq	25f2c <mpfr_sqrt@@Base+0x664>  // b.none
   25a54:	sub	w4, w23, #0x1
   25a58:	mov	w22, #0xffffffff            	// #-1
   25a5c:	lsr	x2, x3, x4
   25a60:	tbz	w2, #0, 25cd0 <mpfr_sqrt@@Base+0x408>
   25a64:	mov	x2, #0x1                   	// #1
   25a68:	lsl	x4, x2, x4
   25a6c:	cmp	x4, x3
   25a70:	b.ne	25a84 <mpfr_sqrt@@Base+0x1bc>  // b.any
   25a74:	lsr	x5, x1, x23
   25a78:	and	x5, x5, #0x1
   25a7c:	orr	x0, x5, x0
   25a80:	cbz	x0, 25cd0 <mpfr_sqrt@@Base+0x408>
   25a84:	lsl	x23, x2, x23
   25a88:	b	25d98 <mpfr_sqrt@@Base+0x4d0>
   25a8c:	add	x21, x3, #0x2
   25a90:	lsl	x1, x21, #3
   25a94:	lsl	x6, x21, #1
   25a98:	cmp	x1, #0x4, lsl #12
   25a9c:	b.hi	26450 <mpfr_sqrt@@Base+0xb88>  // b.pmore
   25aa0:	add	x1, x1, #0xf
   25aa4:	mov	w23, #0x40                  	// #64
   25aa8:	and	x1, x1, #0xfffffffffffffff0
   25aac:	sub	sp, sp, x1
   25ab0:	mov	x27, sp
   25ab4:	b	25958 <mpfr_sqrt@@Base+0x90>
   25ab8:	ldr	w0, [x29, #120]
   25abc:	cbnz	w0, 263e4 <mpfr_sqrt@@Base+0xb1c>
   25ac0:	mov	x0, x26
   25ac4:	nop
   25ac8:	cmp	x7, x0
   25acc:	mov	x28, #0x0                   	// #0
   25ad0:	b.eq	259d4 <mpfr_sqrt@@Base+0x10c>  // b.none
   25ad4:	lsl	x2, x19, #3
   25ad8:	mov	x1, x7
   25adc:	str	x6, [x29, #112]
   25ae0:	bl	ba10 <memcpy@plt>
   25ae4:	ldr	x6, [x29, #112]
   25ae8:	b	259d4 <mpfr_sqrt@@Base+0x10c>
   25aec:	cmp	x3, #0x3f
   25af0:	b.le	25f50 <mpfr_sqrt@@Base+0x688>
   25af4:	sub	x0, x3, #0x41
   25af8:	cmp	x0, #0x3e
   25afc:	b.ls	2614c <mpfr_sqrt@@Base+0x884>  // b.plast
   25b00:	cmp	x3, #0x40
   25b04:	b.ne	25924 <mpfr_sqrt@@Base+0x5c>  // b.any
   25b08:	ldr	x0, [x1, #24]
   25b0c:	mov	x7, #0x0                   	// #0
   25b10:	ldr	x3, [x0]
   25b14:	tbz	w26, #0, 25b24 <mpfr_sqrt@@Base+0x25c>
   25b18:	lsl	x7, x3, #63
   25b1c:	add	x26, x26, #0x1
   25b20:	lsr	x3, x3, #1
   25b24:	lsr	x4, x3, #54
   25b28:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   25b2c:	sub	x4, x4, #0x100
   25b30:	add	x0, x0, #0x588
   25b34:	adrp	x6, 5f000 <mpfr_l2b_2_0__tab@@Base+0x1170>
   25b38:	add	x6, x6, #0xd88
   25b3c:	lsr	x1, x3, #27
   25b40:	lsr	x2, x3, #31
   25b44:	ldr	x0, [x0, x4, lsl #3]
   25b48:	add	x26, x26, x26, lsr #63
   25b4c:	ldr	x8, [x6, x4, lsl #3]
   25b50:	mov	x4, x1
   25b54:	madd	x1, x1, x0, x0
   25b58:	mov	x6, #0x1fffffffe           	// #8589934590
   25b5c:	asr	x5, x26, #1
   25b60:	lsl	x0, x8, #57
   25b64:	lsl	x8, x8, #11
   25b68:	sub	x0, x0, x1
   25b6c:	add	x0, x8, x0, lsr #47
   25b70:	mul	x1, x0, x0
   25b74:	madd	x1, x4, x1, x1
   25b78:	neg	x1, x1
   25b7c:	umulh	x1, x0, x1
   25b80:	lsr	x1, x1, #6
   25b84:	add	x1, x1, x0, lsl #10
   25b88:	mul	x0, x2, x1
   25b8c:	lsr	x0, x0, #32
   25b90:	msub	x2, x0, x0, x3
   25b94:	cmp	x2, x6
   25b98:	b.ls	25bb4 <mpfr_sqrt@@Base+0x2ec>  // b.plast
   25b9c:	mvn	x4, x0, lsl #1
   25ba0:	add	x2, x2, x4
   25ba4:	add	x0, x0, #0x1
   25ba8:	cmp	x2, x6
   25bac:	sub	x4, x4, #0x2
   25bb0:	b.hi	25ba0 <mpfr_sqrt@@Base+0x2d8>  // b.pmore
   25bb4:	cmp	x2, x0, lsl #1
   25bb8:	lsl	x4, x0, #1
   25bbc:	b.ls	25bcc <mpfr_sqrt@@Base+0x304>  // b.plast
   25bc0:	sub	x2, x2, #0x1
   25bc4:	add	x0, x0, #0x1
   25bc8:	sub	x2, x2, x4
   25bcc:	mul	x1, x1, x2
   25bd0:	lsl	x0, x0, #32
   25bd4:	adds	x1, x0, x1, lsr #32
   25bd8:	b.pl	2686c <mpfr_sqrt@@Base+0xfa4>  // b.nfrst
   25bdc:	mul	x4, x1, x1
   25be0:	umulh	x0, x1, x1
   25be4:	subs	x2, x7, x4
   25be8:	sbc	x3, x3, x0
   25bec:	cbnz	x3, 25c14 <mpfr_sqrt@@Base+0x34c>
   25bf0:	b	264b4 <mpfr_sqrt@@Base+0xbec>
   25bf4:	cmp	x1, x2
   25bf8:	sub	x2, x2, x1
   25bfc:	add	x1, x1, #0x1
   25c00:	cset	x0, hi  // hi = pmore
   25c04:	subs	x2, x2, x1
   25c08:	cinc	x0, x0, cc  // cc = lo, ul, last
   25c0c:	subs	x3, x3, x0
   25c10:	b.eq	264b4 <mpfr_sqrt@@Base+0xbec>  // b.none
   25c14:	cmp	x3, #0x1
   25c18:	b.ne	25bf4 <mpfr_sqrt@@Base+0x32c>  // b.any
   25c1c:	cmp	x2, x1, lsl #1
   25c20:	b.hi	25bf4 <mpfr_sqrt@@Base+0x32c>  // b.pmore
   25c24:	mov	w6, w3
   25c28:	mrs	x4, tpidr_el0
   25c2c:	str	x1, [x25]
   25c30:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   25c34:	ldr	x7, [x0, #2544]
   25c38:	add	x0, x0, #0x9f0
   25c3c:	blr	x7
   25c40:	orr	x2, x2, x3
   25c44:	ldr	x0, [x4, x0]
   25c48:	cmp	x5, x0
   25c4c:	b.gt	268b8 <mpfr_sqrt@@Base+0xff0>
   25c50:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   25c54:	ldr	x3, [x0, #2512]
   25c58:	add	x0, x0, #0x9d0
   25c5c:	blr	x3
   25c60:	ldr	x0, [x4, x0]
   25c64:	cmp	x5, x0
   25c68:	b.lt	26840 <mpfr_sqrt@@Base+0xf78>  // b.tstop
   25c6c:	str	x5, [x24, #16]
   25c70:	cmp	x2, #0x0
   25c74:	ccmp	w20, #0x5, #0x4, ne  // ne = any
   25c78:	b.eq	26418 <mpfr_sqrt@@Base+0xb50>  // b.none
   25c7c:	cbnz	w20, 267fc <mpfr_sqrt@@Base+0xf34>
   25c80:	cbz	w6, 263a8 <mpfr_sqrt@@Base+0xae0>
   25c84:	ldr	x0, [x25]
   25c88:	adds	x0, x0, #0x1
   25c8c:	b.ne	26570 <mpfr_sqrt@@Base+0xca8>  // b.any
   25c90:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   25c94:	str	x0, [x25]
   25c98:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   25c9c:	ldr	x1, [x0, #2544]
   25ca0:	add	x0, x0, #0x9f0
   25ca4:	blr	x1
   25ca8:	ldr	x0, [x4, x0]
   25cac:	cmp	x5, x0
   25cb0:	b.ge	268b8 <mpfr_sqrt@@Base+0xff0>  // b.tcont
   25cb4:	add	x5, x5, #0x1
   25cb8:	str	x5, [x24, #16]
   25cbc:	b	260f0 <mpfr_sqrt@@Base+0x828>
   25cc0:	cmp	x2, #0x0
   25cc4:	csetm	w22, ne  // ne = any
   25cc8:	cmp	w23, #0x40
   25ccc:	b.eq	25df4 <mpfr_sqrt@@Base+0x52c>  // b.none
   25cd0:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   25cd4:	add	x0, x19, x0
   25cd8:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   25cdc:	cmp	x0, x1
   25ce0:	b.hi	268a0 <mpfr_sqrt@@Base+0xfd8>  // b.pmore
   25ce4:	ldr	x0, [x29, #160]
   25ce8:	str	x19, [x24, #16]
   25cec:	cbnz	x0, 25f20 <mpfr_sqrt@@Base+0x658>
   25cf0:	mrs	x1, tpidr_el0
   25cf4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   25cf8:	ldr	x2, [x0, #2512]
   25cfc:	add	x0, x0, #0x9d0
   25d00:	blr	x2
   25d04:	ldr	x0, [x1, x0]
   25d08:	cmp	x0, x19
   25d0c:	b.gt	25d74 <mpfr_sqrt@@Base+0x4ac>
   25d10:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   25d14:	ldr	x2, [x0, #2544]
   25d18:	add	x0, x0, #0x9f0
   25d1c:	blr	x2
   25d20:	ldr	x0, [x1, x0]
   25d24:	cmp	x0, x19
   25d28:	b.lt	25d74 <mpfr_sqrt@@Base+0x4ac>  // b.tstop
   25d2c:	cbz	w22, 25d50 <mpfr_sqrt@@Base+0x488>
   25d30:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   25d34:	ldr	x2, [x0, #2576]
   25d38:	add	x0, x0, #0xa10
   25d3c:	blr	x2
   25d40:	add	x0, x1, x0
   25d44:	ldr	w1, [x0]
   25d48:	orr	w1, w1, #0x8
   25d4c:	str	w1, [x0]
   25d50:	mov	sp, x29
   25d54:	mov	w0, w22
   25d58:	ldp	x19, x20, [sp, #16]
   25d5c:	ldp	x21, x22, [sp, #32]
   25d60:	ldp	x23, x24, [sp, #48]
   25d64:	ldp	x25, x26, [sp, #64]
   25d68:	ldp	x27, x28, [sp, #80]
   25d6c:	ldp	x29, x30, [sp], #192
   25d70:	ret
   25d74:	mov	w1, w22
   25d78:	mov	w2, w20
   25d7c:	mov	x0, x24
   25d80:	bl	cb30 <mpfr_check_range@plt>
   25d84:	mov	w22, w0
   25d88:	b	25d50 <mpfr_sqrt@@Base+0x488>
   25d8c:	b.eq	26448 <mpfr_sqrt@@Base+0xb80>  // b.none
   25d90:	mov	x0, #0x1                   	// #1
   25d94:	lsl	x23, x0, x23
   25d98:	adds	x1, x1, x23
   25d9c:	str	x1, [x25]
   25da0:	b.cc	25e78 <mpfr_sqrt@@Base+0x5b0>  // b.lo, b.ul, b.last
   25da4:	mov	x3, #0x1                   	// #1
   25da8:	b	25dc0 <mpfr_sqrt@@Base+0x4f8>
   25dac:	ldr	x0, [x27, x3, lsl #3]
   25db0:	add	x0, x0, #0x1
   25db4:	str	x0, [x25, x3, lsl #3]
   25db8:	add	x3, x3, #0x1
   25dbc:	cbnz	x0, 26118 <mpfr_sqrt@@Base+0x850>
   25dc0:	cmp	x21, x3
   25dc4:	b.gt	25dac <mpfr_sqrt@@Base+0x4e4>
   25dc8:	add	x3, x25, x21, lsl #3
   25dcc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   25dd0:	add	x19, x19, #0x1
   25dd4:	mov	w22, #0x1                   	// #1
   25dd8:	stur	x0, [x3, #-8]
   25ddc:	b	25cd0 <mpfr_sqrt@@Base+0x408>
   25de0:	and	x2, x1, #0x1
   25de4:	orr	x0, x2, x0
   25de8:	cbnz	x0, 25f40 <mpfr_sqrt@@Base+0x678>
   25dec:	nop
   25df0:	mov	w22, #0xffffffff            	// #-1
   25df4:	add	x1, x27, #0x8
   25df8:	cmp	x1, x25
   25dfc:	b.eq	25cd0 <mpfr_sqrt@@Base+0x408>  // b.none
   25e00:	sub	x2, x21, #0x1
   25e04:	mov	x0, x25
   25e08:	lsl	x2, x2, #3
   25e0c:	bl	ba10 <memcpy@plt>
   25e10:	b	25cd0 <mpfr_sqrt@@Base+0x408>
   25e14:	mov	w22, #0x0                   	// #0
   25e18:	b	25cc8 <mpfr_sqrt@@Base+0x400>
   25e1c:	mov	x1, #0x2                   	// #2
   25e20:	movk	x1, #0x8000, lsl #48
   25e24:	cmp	x26, x1
   25e28:	b.eq	25e40 <mpfr_sqrt@@Base+0x578>  // b.none
   25e2c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   25e30:	cmp	x26, x1
   25e34:	b.eq	264a0 <mpfr_sqrt@@Base+0xbd8>  // b.none
   25e38:	ldr	w1, [x22, #8]
   25e3c:	tbz	w1, #31, 263d0 <mpfr_sqrt@@Base+0xb08>
   25e40:	mrs	x1, tpidr_el0
   25e44:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   25e48:	ldr	x2, [x0, #2576]
   25e4c:	add	x0, x0, #0xa10
   25e50:	blr	x2
   25e54:	add	x0, x1, x0
   25e58:	mov	x1, #0x2                   	// #2
   25e5c:	movk	x1, #0x8000, lsl #48
   25e60:	str	x1, [x24, #16]
   25e64:	mov	w22, #0x0                   	// #0
   25e68:	ldr	w1, [x0]
   25e6c:	orr	w1, w1, #0x4
   25e70:	str	w1, [x0]
   25e74:	b	25d50 <mpfr_sqrt@@Base+0x488>
   25e78:	cmp	x27, x25
   25e7c:	mov	w22, #0x1                   	// #1
   25e80:	b.eq	25cd0 <mpfr_sqrt@@Base+0x408>  // b.none
   25e84:	cmp	x21, #0x1
   25e88:	b.le	25cd0 <mpfr_sqrt@@Base+0x408>
   25e8c:	mov	x0, #0x1                   	// #1
   25e90:	ldr	x1, [x27, x0, lsl #3]
   25e94:	str	x1, [x25, x0, lsl #3]
   25e98:	add	x0, x0, #0x1
   25e9c:	cmp	x21, x0
   25ea0:	b.ne	25e90 <mpfr_sqrt@@Base+0x5c8>  // b.any
   25ea4:	mov	w22, #0x1                   	// #1
   25ea8:	b	25cd0 <mpfr_sqrt@@Base+0x408>
   25eac:	ldr	w0, [x29, #120]
   25eb0:	sub	x19, x19, x6
   25eb4:	add	x1, x7, x19, lsl #3
   25eb8:	cbnz	w0, 26420 <mpfr_sqrt@@Base+0xb58>
   25ebc:	cmp	x26, x1
   25ec0:	b.eq	264c4 <mpfr_sqrt@@Base+0xbfc>  // b.none
   25ec4:	lsl	x2, x21, #4
   25ec8:	mov	x0, x26
   25ecc:	stp	x6, x7, [x29, #104]
   25ed0:	bl	ba10 <memcpy@plt>
   25ed4:	mov	x28, #0x0                   	// #0
   25ed8:	ldp	x6, x7, [x29, #104]
   25edc:	mov	w0, #0x1                   	// #1
   25ee0:	cmp	x19, #0x0
   25ee4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   25ee8:	b.eq	259d4 <mpfr_sqrt@@Base+0x10c>  // b.none
   25eec:	nop
   25ef0:	sub	x19, x19, #0x1
   25ef4:	ldr	x28, [x7, x19, lsl #3]
   25ef8:	cmp	x28, #0x0
   25efc:	ccmp	x19, #0x0, #0x4, eq  // eq = none
   25f00:	b.ne	25ef0 <mpfr_sqrt@@Base+0x628>  // b.any
   25f04:	b	259d4 <mpfr_sqrt@@Base+0x10c>
   25f08:	add	x0, x29, #0xa0
   25f0c:	stp	x6, x7, [x29, #104]
   25f10:	bl	bdc0 <mpfr_tmp_allocate@plt>
   25f14:	mov	x26, x0
   25f18:	ldp	x6, x7, [x29, #104]
   25f1c:	b	25978 <mpfr_sqrt@@Base+0xb0>
   25f20:	bl	c410 <mpfr_tmp_free@plt>
   25f24:	ldr	x19, [x24, #16]
   25f28:	b	25cf0 <mpfr_sqrt@@Base+0x428>
   25f2c:	tbz	x3, #63, 25df0 <mpfr_sqrt@@Base+0x528>
   25f30:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   25f34:	cmp	x3, x1
   25f38:	ldr	x1, [x27, #8]
   25f3c:	b.eq	25de0 <mpfr_sqrt@@Base+0x518>  // b.none
   25f40:	add	x27, x27, #0x8
   25f44:	sub	x21, x21, #0x1
   25f48:	mov	x23, #0x1                   	// #1
   25f4c:	b	25d98 <mpfr_sqrt@@Base+0x4d0>
   25f50:	ldr	x0, [x22, #24]
   25f54:	mov	x1, #0x40                  	// #64
   25f58:	sub	x3, x1, x3
   25f5c:	mov	x6, #0x1                   	// #1
   25f60:	lsl	x6, x6, x3
   25f64:	sub	x7, x6, #0x1
   25f68:	ldr	x8, [x0]
   25f6c:	tbz	w26, #0, 25f78 <mpfr_sqrt@@Base+0x6b0>
   25f70:	lsr	x8, x8, #1
   25f74:	add	x26, x26, #0x1
   25f78:	lsr	x2, x8, #54
   25f7c:	adrp	x1, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   25f80:	sub	x2, x2, #0x100
   25f84:	add	x1, x1, #0x588
   25f88:	adrp	x5, 5f000 <mpfr_l2b_2_0__tab@@Base+0x1170>
   25f8c:	add	x5, x5, #0xd88
   25f90:	lsr	x4, x8, #27
   25f94:	lsr	x0, x8, #31
   25f98:	ldr	x1, [x1, x2, lsl #3]
   25f9c:	add	x26, x26, x26, lsr #63
   25fa0:	ldr	x9, [x5, x2, lsl #3]
   25fa4:	mov	x2, x4
   25fa8:	madd	x4, x4, x1, x1
   25fac:	mov	x5, #0x1fffffffe           	// #8589934590
   25fb0:	asr	x26, x26, #1
   25fb4:	lsl	x1, x9, #57
   25fb8:	lsl	x9, x9, #11
   25fbc:	sub	x1, x1, x4
   25fc0:	add	x1, x9, x1, lsr #47
   25fc4:	mul	x4, x1, x1
   25fc8:	madd	x4, x2, x4, x4
   25fcc:	neg	x4, x4
   25fd0:	umulh	x4, x1, x4
   25fd4:	lsr	x4, x4, #6
   25fd8:	add	x4, x4, x1, lsl #10
   25fdc:	mul	x0, x0, x4
   25fe0:	lsr	x0, x0, #32
   25fe4:	msub	x1, x0, x0, x8
   25fe8:	cmp	x1, x5
   25fec:	b.ls	2600c <mpfr_sqrt@@Base+0x744>  // b.plast
   25ff0:	mvn	x2, x0, lsl #1
   25ff4:	nop
   25ff8:	add	x1, x1, x2
   25ffc:	add	x0, x0, #0x1
   26000:	cmp	x1, x5
   26004:	sub	x2, x2, #0x2
   26008:	b.hi	25ff8 <mpfr_sqrt@@Base+0x730>  // b.pmore
   2600c:	cmp	x1, x0, lsl #1
   26010:	lsl	x2, x0, #1
   26014:	b.hi	26408 <mpfr_sqrt@@Base+0xb40>  // b.pmore
   26018:	mul	x1, x4, x1
   2601c:	lsl	x0, x0, #32
   26020:	add	x1, x0, x1, lsr #32
   26024:	add	x0, x1, #0x7
   26028:	and	x0, x0, x7, lsr #1
   2602c:	cmp	x0, #0x7
   26030:	b.ls	26578 <mpfr_sqrt@@Base+0xcb0>  // b.plast
   26034:	sub	w3, w3, #0x1
   26038:	mov	x0, #0x1                   	// #1
   2603c:	neg	x5, x6
   26040:	mov	w2, #0x0                   	// #0
   26044:	lsl	x3, x0, x3
   26048:	eor	x0, x7, x3
   2604c:	and	x0, x0, x1
   26050:	ands	x3, x3, x1
   26054:	orr	x7, x0, #0x1
   26058:	cset	w8, ne  // ne = any
   2605c:	and	x1, x1, x5
   26060:	str	x1, [x25]
   26064:	mrs	x4, tpidr_el0
   26068:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2606c:	ldr	x9, [x0, #2544]
   26070:	add	x0, x0, #0x9f0
   26074:	blr	x9
   26078:	ldr	x0, [x4, x0]
   2607c:	cmp	x26, x0
   26080:	b.gt	268b8 <mpfr_sqrt@@Base+0xff0>
   26084:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   26088:	ldr	x9, [x0, #2512]
   2608c:	add	x0, x0, #0x9d0
   26090:	blr	x9
   26094:	ldr	x0, [x4, x0]
   26098:	cmp	x26, x0
   2609c:	b.lt	26604 <mpfr_sqrt@@Base+0xd3c>  // b.tstop
   260a0:	str	x26, [x24, #16]
   260a4:	cmp	w2, #0x0
   260a8:	ccmp	w20, #0x5, #0x4, eq  // eq = none
   260ac:	b.eq	26418 <mpfr_sqrt@@Base+0xb50>  // b.none
   260b0:	cbnz	w20, 264d0 <mpfr_sqrt@@Base+0xc08>
   260b4:	cbz	x3, 263a8 <mpfr_sqrt@@Base+0xae0>
   260b8:	ldr	x0, [x25]
   260bc:	adds	x0, x6, x0
   260c0:	b.ne	26570 <mpfr_sqrt@@Base+0xca8>  // b.any
   260c4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   260c8:	str	x0, [x25]
   260cc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   260d0:	ldr	x1, [x0, #2544]
   260d4:	add	x0, x0, #0x9f0
   260d8:	blr	x1
   260dc:	ldr	x0, [x4, x0]
   260e0:	cmp	x26, x0
   260e4:	b.ge	268b8 <mpfr_sqrt@@Base+0xff0>  // b.tcont
   260e8:	add	x26, x26, #0x1
   260ec:	str	x26, [x24, #16]
   260f0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   260f4:	ldr	x1, [x0, #2576]
   260f8:	add	x0, x0, #0xa10
   260fc:	blr	x1
   26100:	add	x0, x4, x0
   26104:	mov	w22, #0x1                   	// #1
   26108:	ldr	w1, [x0]
   2610c:	orr	w1, w1, #0x8
   26110:	str	w1, [x0]
   26114:	b	25d50 <mpfr_sqrt@@Base+0x488>
   26118:	cmp	x27, x25
   2611c:	mov	w22, #0x1                   	// #1
   26120:	b.eq	25cd0 <mpfr_sqrt@@Base+0x408>  // b.none
   26124:	cmp	x21, x3
   26128:	b.le	25cd0 <mpfr_sqrt@@Base+0x408>
   2612c:	nop
   26130:	ldr	x0, [x27, x3, lsl #3]
   26134:	str	x0, [x25, x3, lsl #3]
   26138:	add	x3, x3, #0x1
   2613c:	cmp	x21, x3
   26140:	b.ne	26130 <mpfr_sqrt@@Base+0x868>  // b.any
   26144:	mov	w22, #0x1                   	// #1
   26148:	b	25cd0 <mpfr_sqrt@@Base+0x408>
   2614c:	ldr	x0, [x1, #24]
   26150:	mov	x21, #0x80                  	// #128
   26154:	sub	x21, x21, x3
   26158:	ldr	x3, [x0, #8]
   2615c:	tbz	w26, #0, 26470 <mpfr_sqrt@@Base+0xba8>
   26160:	lsr	x3, x3, #1
   26164:	str	x3, [x29, #152]
   26168:	add	x26, x26, #0x1
   2616c:	ldp	x2, x1, [x0]
   26170:	extr	x1, x1, x2, #1
   26174:	str	x1, [x29, #144]
   26178:	ldr	x0, [x0]
   2617c:	lsl	x0, x0, #63
   26180:	str	x0, [x29, #136]
   26184:	lsr	x2, x3, #54
   26188:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   2618c:	sub	x2, x2, #0x100
   26190:	add	x0, x0, #0x588
   26194:	adrp	x4, 5f000 <mpfr_l2b_2_0__tab@@Base+0x1170>
   26198:	add	x4, x4, #0xd88
   2619c:	lsr	x1, x3, #27
   261a0:	mov	x6, #0x2000000000000000    	// #2305843009213693952
   261a4:	ldr	x0, [x0, x2, lsl #3]
   261a8:	add	x26, x26, x26, lsr #63
   261ac:	ldr	x4, [x4, x2, lsl #3]
   261b0:	mov	x2, x1
   261b4:	madd	x5, x1, x0, x0
   261b8:	mov	x23, #0x1                   	// #1
   261bc:	lsl	x23, x23, x21
   261c0:	asr	x19, x26, #1
   261c4:	lsl	x0, x4, #57
   261c8:	lsl	x4, x4, #11
   261cc:	sub	x0, x0, x5
   261d0:	sub	x22, x23, #0x1
   261d4:	add	x0, x4, x0, lsr #47
   261d8:	mul	x1, x0, x0
   261dc:	madd	x1, x2, x1, x1
   261e0:	neg	x1, x1
   261e4:	umulh	x1, x0, x1
   261e8:	lsr	x1, x1, #6
   261ec:	add	x0, x1, x0, lsl #10
   261f0:	lsl	x7, x0, #33
   261f4:	mul	x1, x0, x0
   261f8:	umulh	x1, x1, x3
   261fc:	add	x1, x1, #0x2
   26200:	sub	x1, x6, x1, lsr #1
   26204:	mul	x0, x0, x1
   26208:	add	x7, x7, x0, lsr #29
   2620c:	umulh	x0, x7, x3
   26210:	adds	x6, x0, x3
   26214:	b.pl	26628 <mpfr_sqrt@@Base+0xd60>  // b.nfrst
   26218:	mul	x0, x6, x6
   2621c:	umulh	x1, x6, x6
   26220:	negs	x4, x0
   26224:	sbc	x1, x3, x1
   26228:	mov	x3, x1
   2622c:	cmp	x1, #0xf
   26230:	b.ls	26254 <mpfr_sqrt@@Base+0x98c>  // b.plast
   26234:	lsl	x1, x6, #4
   26238:	lsr	x0, x6, #60
   2623c:	add	x6, x6, #0x8
   26240:	subs	x2, x4, x1
   26244:	sbc	x3, x3, x0
   26248:	subs	x1, x2, #0x40
   2624c:	sbc	x3, x3, xzr
   26250:	mov	x4, x1
   26254:	cmp	x3, #0x7
   26258:	b.ls	2627c <mpfr_sqrt@@Base+0x9b4>  // b.plast
   2625c:	lsl	x1, x6, #3
   26260:	lsr	x0, x6, #61
   26264:	add	x6, x6, #0x4
   26268:	subs	x2, x4, x1
   2626c:	sbc	x3, x3, x0
   26270:	subs	x1, x2, #0x10
   26274:	sbc	x3, x3, xzr
   26278:	mov	x4, x1
   2627c:	cmp	x3, #0x3
   26280:	b.ls	262c4 <mpfr_sqrt@@Base+0x9fc>  // b.plast
   26284:	lsl	x1, x6, #2
   26288:	lsr	x0, x6, #62
   2628c:	add	x6, x6, #0x2
   26290:	subs	x2, x4, x1
   26294:	sbc	x3, x3, x0
   26298:	subs	x1, x2, #0x4
   2629c:	sbc	x3, x3, xzr
   262a0:	mov	x4, x1
   262a4:	b	262c4 <mpfr_sqrt@@Base+0x9fc>
   262a8:	lsr	x1, x6, #63
   262ac:	add	x2, x2, #0x1
   262b0:	add	x6, x6, #0x1
   262b4:	subs	x5, x4, x2
   262b8:	sbc	x1, x3, x1
   262bc:	mov	x3, x1
   262c0:	mov	x4, x5
   262c4:	cmp	x3, #0x1
   262c8:	lsl	x2, x6, #1
   262cc:	b.hi	262a8 <mpfr_sqrt@@Base+0x9e0>  // b.pmore
   262d0:	b.ne	26480 <mpfr_sqrt@@Base+0xbb8>  // b.any
   262d4:	cmp	x4, x2
   262d8:	b.hi	262a8 <mpfr_sqrt@@Base+0x9e0>  // b.pmore
   262dc:	ldr	x1, [x29, #144]
   262e0:	adds	x1, x4, x1
   262e4:	cset	x2, cs  // cs = hs, nlast
   262e8:	add	x2, x2, #0x1
   262ec:	extr	x1, x2, x1, #1
   262f0:	lsr	x2, x2, #1
   262f4:	umulh	x0, x7, x1
   262f8:	adds	x1, x1, x0
   262fc:	adc	x0, x6, x2
   26300:	cbz	x2, 2630c <mpfr_sqrt@@Base+0xa44>
   26304:	adds	x1, x7, x1
   26308:	cinc	x0, x0, cs  // cs = hs, nlast
   2630c:	add	x2, x1, #0x1a
   26310:	stp	x1, x0, [x25]
   26314:	and	x0, x2, x22, lsr #1
   26318:	cmp	x0, #0x1e
   2631c:	mov	x5, #0x1                   	// #1
   26320:	b.ls	26634 <mpfr_sqrt@@Base+0xd6c>  // b.plast
   26324:	ldr	x1, [x25]
   26328:	neg	x7, x23
   2632c:	mrs	x4, tpidr_el0
   26330:	sub	w3, w21, #0x1
   26334:	and	x6, x1, x7
   26338:	str	x6, [x25]
   2633c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   26340:	ldr	x8, [x0, #2544]
   26344:	add	x0, x0, #0x9f0
   26348:	blr	x8
   2634c:	mov	x2, #0x1                   	// #1
   26350:	ldr	x0, [x4, x0]
   26354:	lsl	x3, x2, x3
   26358:	eor	x22, x22, x3
   2635c:	and	x3, x1, x3
   26360:	and	x22, x22, x1
   26364:	cmp	x19, x0
   26368:	orr	x22, x22, x5
   2636c:	b.gt	268d0 <mpfr_sqrt@@Base+0x1008>
   26370:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   26374:	ldr	x1, [x0, #2512]
   26378:	add	x0, x0, #0x9d0
   2637c:	blr	x1
   26380:	ldr	x0, [x4, x0]
   26384:	cmp	x19, x0
   26388:	b.lt	267a8 <mpfr_sqrt@@Base+0xee0>  // b.tstop
   2638c:	str	x19, [x24, #16]
   26390:	cmp	x22, #0x0
   26394:	ccmp	w20, #0x5, #0x4, ne  // ne = any
   26398:	mov	w22, #0x0                   	// #0
   2639c:	b.eq	25d50 <mpfr_sqrt@@Base+0x488>  // b.none
   263a0:	cbnz	w20, 26560 <mpfr_sqrt@@Base+0xc98>
   263a4:	cbnz	x3, 26518 <mpfr_sqrt@@Base+0xc50>
   263a8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   263ac:	ldr	x1, [x0, #2576]
   263b0:	add	x0, x0, #0xa10
   263b4:	blr	x1
   263b8:	add	x0, x4, x0
   263bc:	mov	w22, #0xffffffff            	// #-1
   263c0:	ldr	w1, [x0]
   263c4:	orr	w1, w1, #0x8
   263c8:	str	w1, [x0]
   263cc:	b	25d50 <mpfr_sqrt@@Base+0x488>
   263d0:	mov	w1, #0x1                   	// #1
   263d4:	mov	w22, #0x0                   	// #0
   263d8:	str	w1, [x24, #8]
   263dc:	str	x0, [x24, #16]
   263e0:	b	25d50 <mpfr_sqrt@@Base+0x488>
   263e4:	mov	x2, x19
   263e8:	mov	x1, x7
   263ec:	mov	x0, x26
   263f0:	mov	w3, #0x1                   	// #1
   263f4:	str	x6, [x29, #112]
   263f8:	bl	bce0 <__gmpn_rshift@plt>
   263fc:	mov	x28, x0
   26400:	ldr	x6, [x29, #112]
   26404:	b	259d4 <mpfr_sqrt@@Base+0x10c>
   26408:	sub	x1, x1, #0x1
   2640c:	add	x0, x0, #0x1
   26410:	sub	x1, x1, x2
   26414:	b	26018 <mpfr_sqrt@@Base+0x750>
   26418:	mov	w22, #0x0                   	// #0
   2641c:	b	25d50 <mpfr_sqrt@@Base+0x488>
   26420:	mov	x2, x6
   26424:	mov	x0, x26
   26428:	mov	w3, #0x1                   	// #1
   2642c:	stp	x7, x6, [x29, #104]
   26430:	bl	bce0 <__gmpn_rshift@plt>
   26434:	cmp	x0, #0x0
   26438:	mov	x28, x0
   2643c:	cset	w0, eq  // eq = none
   26440:	ldp	x7, x6, [x29, #104]
   26444:	b	25ee0 <mpfr_sqrt@@Base+0x618>
   26448:	ldr	x1, [x27, #8]
   2644c:	b	25f40 <mpfr_sqrt@@Base+0x678>
   26450:	add	x0, x29, #0xa0
   26454:	str	x6, [x29, #120]
   26458:	bl	bdc0 <mpfr_tmp_allocate@plt>
   2645c:	mov	w23, #0x40                  	// #64
   26460:	mov	x27, x0
   26464:	ldr	x26, [x22, #16]
   26468:	ldr	x6, [x29, #120]
   2646c:	b	25958 <mpfr_sqrt@@Base+0x90>
   26470:	str	x3, [x29, #152]
   26474:	ldr	x0, [x0]
   26478:	stp	xzr, x0, [x29, #136]
   2647c:	b	26184 <mpfr_sqrt@@Base+0x8bc>
   26480:	ldr	x1, [x29, #144]
   26484:	adds	x1, x4, x1
   26488:	cset	x0, cs  // cs = hs, nlast
   2648c:	extr	x1, x0, x1, #1
   26490:	umulh	x0, x7, x1
   26494:	adds	x1, x1, x0
   26498:	cinc	x0, x6, cs  // cs = hs, nlast
   2649c:	b	2630c <mpfr_sqrt@@Base+0xa44>
   264a0:	ldr	w0, [x22, #8]
   264a4:	mov	w22, #0x0                   	// #0
   264a8:	str	w0, [x24, #8]
   264ac:	str	x26, [x24, #16]
   264b0:	b	25d50 <mpfr_sqrt@@Base+0x488>
   264b4:	cmp	x1, x2
   264b8:	cset	w6, cc  // cc = lo, ul, last
   264bc:	cset	x3, cc  // cc = lo, ul, last
   264c0:	b	25c28 <mpfr_sqrt@@Base+0x360>
   264c4:	mov	w0, #0x1                   	// #1
   264c8:	mov	x28, #0x0                   	// #0
   264cc:	b	25ee0 <mpfr_sqrt@@Base+0x618>
   264d0:	and	w0, w20, #0xfffffffd
   264d4:	cmp	w0, #0x1
   264d8:	b.eq	263a8 <mpfr_sqrt@@Base+0xae0>  // b.none
   264dc:	b	260b8 <mpfr_sqrt@@Base+0x7f0>
   264e0:	sub	w1, w20, #0x2
   264e4:	tst	w1, #0xfffffffd
   264e8:	b.ne	267e4 <mpfr_sqrt@@Base+0xf1c>  // b.any
   264ec:	sub	x0, x0, #0x1
   264f0:	cmp	x19, x0
   264f4:	b.ne	267e4 <mpfr_sqrt@@Base+0xf1c>  // b.any
   264f8:	ldr	x0, [x25, #8]
   264fc:	cmp	x7, x6
   26500:	ccmn	x0, #0x1, #0x0, eq  // eq = none
   26504:	b.ne	267e4 <mpfr_sqrt@@Base+0xf1c>  // b.any
   26508:	orr	x3, x3, x22
   2650c:	cbz	x3, 267e4 <mpfr_sqrt@@Base+0xf1c>
   26510:	str	x19, [x24, #16]
   26514:	nop
   26518:	ldp	x0, x1, [x25]
   2651c:	add	x23, x23, x0
   26520:	str	x23, [x25]
   26524:	cmp	x23, #0x0
   26528:	cinc	x0, x1, eq  // eq = none
   2652c:	cbnz	x0, 2680c <mpfr_sqrt@@Base+0xf44>
   26530:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   26534:	ldr	x1, [x0, #2544]
   26538:	add	x0, x0, #0x9f0
   2653c:	blr	x1
   26540:	ldr	x0, [x4, x0]
   26544:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   26548:	str	x1, [x25, #8]
   2654c:	cmp	x19, x0
   26550:	b.ge	268b8 <mpfr_sqrt@@Base+0xff0>  // b.tcont
   26554:	add	x19, x19, #0x1
   26558:	str	x19, [x24, #16]
   2655c:	b	260f0 <mpfr_sqrt@@Base+0x828>
   26560:	and	w0, w20, #0xfffffffd
   26564:	cmp	w0, #0x1
   26568:	b.eq	263a8 <mpfr_sqrt@@Base+0xae0>  // b.none
   2656c:	b	26518 <mpfr_sqrt@@Base+0xc50>
   26570:	str	x0, [x25]
   26574:	b	260f0 <mpfr_sqrt@@Base+0x828>
   26578:	cmp	x1, #0x0
   2657c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   26580:	csel	x1, x1, x0, lt  // lt = tstop
   26584:	umulh	x2, x1, x1
   26588:	mul	x4, x1, x1
   2658c:	negs	x0, x4
   26590:	sbc	x2, x8, x2
   26594:	cbnz	x2, 265b8 <mpfr_sqrt@@Base+0xcf0>
   26598:	b	265cc <mpfr_sqrt@@Base+0xd04>
   2659c:	subs	x0, x0, x1
   265a0:	add	x1, x1, #0x1
   265a4:	cset	x4, cc  // cc = lo, ul, last
   265a8:	subs	x0, x0, x1
   265ac:	cinc	x4, x4, cc  // cc = lo, ul, last
   265b0:	subs	x2, x2, x4
   265b4:	b.eq	265cc <mpfr_sqrt@@Base+0xd04>  // b.none
   265b8:	cmp	x2, #0x1
   265bc:	b.ne	2659c <mpfr_sqrt@@Base+0xcd4>  // b.any
   265c0:	cmp	x0, x1, lsl #1
   265c4:	b.hi	2659c <mpfr_sqrt@@Base+0xcd4>  // b.pmore
   265c8:	orr	x0, x0, #0x1
   265cc:	sub	w3, w3, #0x1
   265d0:	mov	x2, #0x1                   	// #1
   265d4:	neg	x5, x6
   265d8:	lsl	x3, x2, x3
   265dc:	eor	x7, x7, x3
   265e0:	and	x7, x7, x1
   265e4:	ands	x3, x3, x1
   265e8:	orr	x7, x7, x0
   265ec:	cset	w8, ne  // ne = any
   265f0:	cmp	x7, #0x0
   265f4:	and	x1, x5, x1
   265f8:	cset	w2, eq  // eq = none
   265fc:	str	x1, [x25]
   26600:	b	26064 <mpfr_sqrt@@Base+0x79c>
   26604:	cbnz	w20, 26814 <mpfr_sqrt@@Base+0xf4c>
   26608:	sub	x0, x0, #0x1
   2660c:	cmp	x26, x0
   26610:	b.ne	26888 <mpfr_sqrt@@Base+0xfc0>  // b.any
   26614:	cmp	w8, #0x0
   26618:	ccmp	x1, x5, #0x0, ne  // ne = any
   2661c:	b.ne	2688c <mpfr_sqrt@@Base+0xfc4>  // b.any
   26620:	str	x26, [x24, #16]
   26624:	b	260b8 <mpfr_sqrt@@Base+0x7f0>
   26628:	mov	x0, #0x0                   	// #0
   2662c:	mov	x6, #0x8000000000000000    	// #-9223372036854775808
   26630:	b	2621c <mpfr_sqrt@@Base+0x954>
   26634:	add	x26, x29, #0xa0
   26638:	mov	x1, x25
   2663c:	mov	x0, x26
   26640:	mov	x2, #0x2                   	// #2
   26644:	add	x27, x29, #0x80
   26648:	str	xzr, [x29, #128]
   2664c:	bl	c3b0 <__gmpn_sqr@plt>
   26650:	mov	x2, x26
   26654:	mov	x1, x27
   26658:	mov	x3, #0x3                   	// #3
   2665c:	mov	x0, x26
   26660:	bl	be60 <__gmpn_sub_n@plt>
   26664:	ldp	x1, x2, [x25]
   26668:	ldr	x5, [x29, #176]
   2666c:	ldp	x3, x4, [x29, #160]
   26670:	lsl	x0, x1, #1
   26674:	extr	x2, x2, x1, #63
   26678:	tbz	x5, #63, 266d4 <mpfr_sqrt@@Base+0xe0c>
   2667c:	nop
   26680:	cmp	x0, #0x1
   26684:	sub	x1, x0, #0x1
   26688:	add	x3, x3, x1
   2668c:	sub	x0, x0, #0x2
   26690:	cset	x1, ls  // ls = plast
   26694:	cmp	x0, x3
   26698:	sub	x2, x2, x1
   2669c:	cset	w7, hi  // hi = pmore
   266a0:	cinc	x6, x2, hi  // hi = pmore
   266a4:	mov	x1, #0x2                   	// #2
   266a8:	add	x4, x4, x6
   266ac:	cmp	x2, x4
   266b0:	b.hi	266c4 <mpfr_sqrt@@Base+0xdfc>  // b.pmore
   266b4:	cmp	w7, #0x0
   266b8:	ccmp	x2, x4, #0x0, ne  // ne = any
   266bc:	cset	x1, eq  // eq = none
   266c0:	add	x1, x1, #0x1
   266c4:	adds	x5, x5, x1
   266c8:	b.mi	26680 <mpfr_sqrt@@Base+0xdb8>  // b.first
   266cc:	stp	x3, x4, [x29, #160]
   266d0:	str	x5, [x29, #176]
   266d4:	mov	w1, #0x0                   	// #0
   266d8:	b	2671c <mpfr_sqrt@@Base+0xe54>
   266dc:	cmp	x3, x0
   266e0:	cset	w1, ls  // ls = plast
   266e4:	cmp	x4, x2
   266e8:	b.cs	26758 <mpfr_sqrt@@Base+0xe90>  // b.hs, b.nlast
   266ec:	and	x1, x1, #0xff
   266f0:	mov	x6, #0x1                   	// #1
   266f4:	mvn	x7, x0
   266f8:	add	x0, x0, #0x2
   266fc:	mvn	x6, x6
   26700:	cmp	x0, #0x1
   26704:	add	x1, x1, x2
   26708:	add	x5, x5, x6
   2670c:	cinc	x2, x2, ls  // ls = plast
   26710:	add	x3, x3, x7
   26714:	sub	x4, x4, x1
   26718:	mov	w1, #0x1                   	// #1
   2671c:	cmp	x5, #0x1
   26720:	b.hi	266dc <mpfr_sqrt@@Base+0xe14>  // b.pmore
   26724:	b.eq	26778 <mpfr_sqrt@@Base+0xeb0>  // b.none
   26728:	cbz	w1, 26734 <mpfr_sqrt@@Base+0xe6c>
   2672c:	stp	x3, x4, [x29, #160]
   26730:	str	xzr, [x29, #176]
   26734:	lsr	x1, x2, #1
   26738:	extr	x0, x2, x0, #1
   2673c:	orr	x1, x1, #0x8000000000000000
   26740:	stp	x0, x1, [x25]
   26744:	ldp	x1, x0, [x29, #160]
   26748:	ldr	x5, [x29, #176]
   2674c:	orr	x5, x5, x1
   26750:	orr	x5, x5, x0
   26754:	b	26324 <mpfr_sqrt@@Base+0xa5c>
   26758:	b.eq	26768 <mpfr_sqrt@@Base+0xea0>  // b.none
   2675c:	and	x1, x1, #0xff
   26760:	mov	x6, #0x0                   	// #0
   26764:	b	266f4 <mpfr_sqrt@@Base+0xe2c>
   26768:	cmp	x3, x0
   2676c:	cset	x1, ls  // ls = plast
   26770:	mov	x6, x1
   26774:	b	266f4 <mpfr_sqrt@@Base+0xe2c>
   26778:	cmp	x4, x2
   2677c:	b.ls	2678c <mpfr_sqrt@@Base+0xec4>  // b.plast
   26780:	cmp	x3, x0
   26784:	cset	w1, ls  // ls = plast
   26788:	b	2675c <mpfr_sqrt@@Base+0xe94>
   2678c:	b.ne	26878 <mpfr_sqrt@@Base+0xfb0>  // b.any
   26790:	cmp	x3, x0
   26794:	b.hi	26768 <mpfr_sqrt@@Base+0xea0>  // b.pmore
   26798:	cbz	w1, 26734 <mpfr_sqrt@@Base+0xe6c>
   2679c:	stp	x3, x2, [x29, #160]
   267a0:	str	x5, [x29, #176]
   267a4:	b	26734 <mpfr_sqrt@@Base+0xe6c>
   267a8:	cbnz	w20, 264e0 <mpfr_sqrt@@Base+0xc18>
   267ac:	sub	x0, x0, #0x1
   267b0:	cmp	x19, x0
   267b4:	b.ne	268e4 <mpfr_sqrt@@Base+0x101c>  // b.any
   267b8:	ldr	x0, [x25, #8]
   267bc:	cmp	x3, #0x0
   267c0:	ccmp	x7, x6, #0x0, ne  // ne = any
   267c4:	ccmn	x0, #0x1, #0x0, eq  // eq = none
   267c8:	b.eq	26510 <mpfr_sqrt@@Base+0xc48>  // b.none
   267cc:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   267d0:	cmp	x0, x1
   267d4:	b.ne	267e4 <mpfr_sqrt@@Base+0xf1c>  // b.any
   267d8:	orr	x22, x22, x6
   267dc:	cmp	x22, #0x0
   267e0:	cset	w20, eq  // eq = none
   267e4:	mov	w1, w20
   267e8:	mov	x0, x24
   267ec:	mov	w2, #0x1                   	// #1
   267f0:	bl	c3c0 <mpfr_underflow@plt>
   267f4:	mov	w22, w0
   267f8:	b	25d50 <mpfr_sqrt@@Base+0x488>
   267fc:	and	w0, w20, #0xfffffffd
   26800:	cmp	w0, #0x1
   26804:	b.eq	263a8 <mpfr_sqrt@@Base+0xae0>  // b.none
   26808:	b	25c84 <mpfr_sqrt@@Base+0x3bc>
   2680c:	str	x0, [x25, #8]
   26810:	b	260f0 <mpfr_sqrt@@Base+0x828>
   26814:	sub	w2, w20, #0x2
   26818:	tst	w2, #0xfffffffd
   2681c:	b.ne	267e4 <mpfr_sqrt@@Base+0xf1c>  // b.any
   26820:	sub	x0, x0, #0x1
   26824:	cmp	x0, x26
   26828:	ccmp	x1, x5, #0x0, eq  // eq = none
   2682c:	b.ne	267e4 <mpfr_sqrt@@Base+0xf1c>  // b.any
   26830:	orr	x0, x7, x3
   26834:	cbz	x0, 267e4 <mpfr_sqrt@@Base+0xf1c>
   26838:	str	x26, [x24, #16]
   2683c:	b	260b8 <mpfr_sqrt@@Base+0x7f0>
   26840:	cbz	w20, 268f0 <mpfr_sqrt@@Base+0x1028>
   26844:	sub	w3, w20, #0x2
   26848:	tst	w3, #0xfffffffd
   2684c:	b.ne	267e4 <mpfr_sqrt@@Base+0xf1c>  // b.any
   26850:	sub	x0, x0, #0x1
   26854:	cmp	x0, x5
   26858:	ccmn	x1, #0x1, #0x0, eq  // eq = none
   2685c:	ccmp	x2, #0x0, #0x4, eq  // eq = none
   26860:	b.eq	267e4 <mpfr_sqrt@@Base+0xf1c>  // b.none
   26864:	str	x5, [x24, #16]
   26868:	b	25c84 <mpfr_sqrt@@Base+0x3bc>
   2686c:	mov	x4, #0x0                   	// #0
   26870:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   26874:	b	25be0 <mpfr_sqrt@@Base+0x318>
   26878:	cbz	w1, 26734 <mpfr_sqrt@@Base+0xe6c>
   2687c:	stp	x3, x4, [x29, #160]
   26880:	str	x5, [x29, #176]
   26884:	b	26734 <mpfr_sqrt@@Base+0xe6c>
   26888:	b.lt	268e8 <mpfr_sqrt@@Base+0x1020>  // b.tstop
   2688c:	cmp	w2, #0x0
   26890:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   26894:	ccmp	x1, x0, #0x0, ne  // ne = any
   26898:	cset	w20, eq  // eq = none
   2689c:	b	267e4 <mpfr_sqrt@@Base+0xf1c>
   268a0:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   268a4:	adrp	x0, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   268a8:	add	x2, x2, #0x4d8
   268ac:	add	x0, x0, #0x580
   268b0:	mov	w1, #0x2b5                 	// #693
   268b4:	bl	cb40 <mpfr_assert_fail@plt>
   268b8:	mov	w1, w20
   268bc:	mov	x0, x24
   268c0:	mov	w2, #0x1                   	// #1
   268c4:	bl	bf40 <mpfr_overflow@plt>
   268c8:	mov	w22, w0
   268cc:	b	25d50 <mpfr_sqrt@@Base+0x488>
   268d0:	mov	w1, w20
   268d4:	mov	x0, x24
   268d8:	bl	bf40 <mpfr_overflow@plt>
   268dc:	mov	w22, w0
   268e0:	b	25d50 <mpfr_sqrt@@Base+0x488>
   268e4:	b.ge	26910 <mpfr_sqrt@@Base+0x1048>  // b.tcont
   268e8:	mov	w20, #0x1                   	// #1
   268ec:	b	267e4 <mpfr_sqrt@@Base+0xf1c>
   268f0:	sub	x0, x0, #0x1
   268f4:	cmp	x5, x0
   268f8:	b.lt	268e8 <mpfr_sqrt@@Base+0x1020>  // b.tstop
   268fc:	cmp	x2, #0x0
   26900:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   26904:	ccmp	x1, x0, #0x0, eq  // eq = none
   26908:	cset	w20, eq  // eq = none
   2690c:	b	267e4 <mpfr_sqrt@@Base+0xf1c>
   26910:	ldr	x0, [x25, #8]
   26914:	b	267cc <mpfr_sqrt@@Base+0xf04>

0000000000026918 <mpfr_sqrt_ui@@Base>:
   26918:	stp	x29, x30, [sp, #-128]!
   2691c:	mov	x29, sp
   26920:	stp	x19, x20, [sp, #16]
   26924:	mov	x19, x0
   26928:	cbnz	x1, 2694c <mpfr_sqrt_ui@@Base+0x34>
   2692c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   26930:	mov	w2, #0x1                   	// #1
   26934:	str	w2, [x19, #8]
   26938:	mov	w0, #0x0                   	// #0
   2693c:	str	x1, [x19, #16]
   26940:	ldp	x19, x20, [sp, #16]
   26944:	ldp	x29, x30, [sp], #128
   26948:	ret
   2694c:	mrs	x4, tpidr_el0
   26950:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   26954:	ldr	x3, [x0, #2576]
   26958:	add	x0, x0, #0xa10
   2695c:	blr	x3
   26960:	clz	x3, x1
   26964:	mov	x7, #0x40                  	// #64
   26968:	sub	w6, w7, w3
   2696c:	stp	x21, x22, [sp, #32]
   26970:	ldr	w21, [x4, x0]
   26974:	stp	x25, x26, [sp, #64]
   26978:	add	x26, x4, x0
   2697c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   26980:	ldr	x5, [x0, #2512]
   26984:	add	x0, x0, #0x9d0
   26988:	blr	x5
   2698c:	add	x25, x4, x0
   26990:	sxtw	x6, w6
   26994:	ldr	x22, [x4, x0]
   26998:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2699c:	ldr	x5, [x0, #2544]
   269a0:	add	x0, x0, #0x9f0
   269a4:	blr	x5
   269a8:	add	x5, sp, #0x58
   269ac:	stp	x23, x24, [sp, #48]
   269b0:	add	x24, x4, x0
   269b4:	lsl	x3, x1, x3
   269b8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   269bc:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
   269c0:	mov	w10, #0x1                   	// #1
   269c4:	add	x1, sp, #0x60
   269c8:	mov	w20, w2
   269cc:	str	x9, [x25]
   269d0:	stp	x3, x7, [sp, #88]
   269d4:	str	w10, [sp, #104]
   269d8:	str	x6, [sp, #112]
   269dc:	str	x5, [sp, #120]
   269e0:	ldr	x23, [x4, x0]
   269e4:	mov	x0, x19
   269e8:	str	x8, [x24]
   269ec:	bl	c930 <mpfr_sqrt@plt>
   269f0:	ldr	x1, [x19, #16]
   269f4:	str	x23, [x24]
   269f8:	str	x22, [x25]
   269fc:	str	w21, [x26]
   26a00:	cmp	x23, x1
   26a04:	ccmp	x22, x1, #0x0, ge  // ge = tcont
   26a08:	b.le	26a34 <mpfr_sqrt_ui@@Base+0x11c>
   26a0c:	mov	w1, w0
   26a10:	mov	w2, w20
   26a14:	mov	x0, x19
   26a18:	bl	cb30 <mpfr_check_range@plt>
   26a1c:	ldp	x19, x20, [sp, #16]
   26a20:	ldp	x21, x22, [sp, #32]
   26a24:	ldp	x23, x24, [sp, #48]
   26a28:	ldp	x25, x26, [sp, #64]
   26a2c:	ldp	x29, x30, [sp], #128
   26a30:	ret
   26a34:	cbz	w0, 26a1c <mpfr_sqrt_ui@@Base+0x104>
   26a38:	orr	w21, w21, #0x8
   26a3c:	ldp	x23, x24, [sp, #48]
   26a40:	str	w21, [x26]
   26a44:	ldp	x19, x20, [sp, #16]
   26a48:	ldp	x21, x22, [sp, #32]
   26a4c:	ldp	x25, x26, [sp, #64]
   26a50:	ldp	x29, x30, [sp], #128
   26a54:	ret

0000000000026a58 <mpfr_sub1@@Base>:
   26a58:	stp	x29, x30, [sp, #-160]!
   26a5c:	mov	x29, sp
   26a60:	stp	x21, x22, [sp, #32]
   26a64:	ldr	x21, [x0]
   26a68:	stp	x25, x26, [sp, #64]
   26a6c:	mov	x26, x0
   26a70:	sub	x21, x21, #0x1
   26a74:	stp	x23, x24, [sp, #48]
   26a78:	mov	x23, x1
   26a7c:	mov	w25, w3
   26a80:	mov	x1, x2
   26a84:	mov	x0, x23
   26a88:	stp	x19, x20, [sp, #16]
   26a8c:	asr	x20, x21, #6
   26a90:	stp	x27, x28, [sp, #80]
   26a94:	mov	x27, x2
   26a98:	add	x2, x29, #0x90
   26a9c:	str	x20, [x29, #104]
   26aa0:	str	xzr, [x29, #152]
   26aa4:	ldr	x28, [x26, #24]
   26aa8:	bl	bdb0 <mpfr_cmp2@plt>
   26aac:	cbz	w0, 270e4 <mpfr_sub1@@Base+0x68c>
   26ab0:	cmp	w0, #0x0
   26ab4:	add	x20, x20, #0x1
   26ab8:	ldr	w0, [x23, #8]
   26abc:	b.ge	26ad0 <mpfr_sub1@@Base+0x78>  // b.tcont
   26ac0:	mov	x1, x23
   26ac4:	neg	w0, w0
   26ac8:	mov	x23, x27
   26acc:	mov	x27, x1
   26ad0:	ldr	x22, [x23, #16]
   26ad4:	str	w0, [x26, #8]
   26ad8:	mov	x1, #0x4                   	// #4
   26adc:	movk	x1, #0x8000, lsl #48
   26ae0:	cmp	x22, x1
   26ae4:	b.eq	2706c <mpfr_sub1@@Base+0x614>  // b.none
   26ae8:	ldr	x6, [x27, #16]
   26aec:	cmp	x6, x1
   26af0:	b.eq	27078 <mpfr_sub1@@Base+0x620>  // b.none
   26af4:	sub	x6, x22, x6
   26af8:	ldr	x4, [x23]
   26afc:	ldr	x24, [x26]
   26b00:	cmp	x24, x4
   26b04:	csel	x0, x24, x4, ge  // ge = tcont
   26b08:	add	x0, x0, #0x1
   26b0c:	cmp	x0, x6
   26b10:	b.lt	27104 <mpfr_sub1@@Base+0x6ac>  // b.tstop
   26b14:	ldr	x5, [x29, #144]
   26b18:	sub	x4, x4, #0x1
   26b1c:	neg	w3, w5
   26b20:	asr	x4, x4, #6
   26b24:	and	x1, x3, #0x3f
   26b28:	add	x21, x4, #0x1
   26b2c:	adds	x1, x1, x5
   26b30:	mov	w0, w5
   26b34:	add	x19, x1, #0x3f
   26b38:	csel	x19, x19, x1, mi  // mi = first
   26b3c:	ands	w3, w3, #0x3f
   26b40:	asr	x1, x19, #6
   26b44:	str	x1, [x29, #128]
   26b48:	b.eq	272b4 <mpfr_sub1@@Base+0x85c>  // b.none
   26b4c:	add	x0, x4, #0x2
   26b50:	str	x0, [x29, #136]
   26b54:	lsl	x1, x0, #3
   26b58:	cmp	x1, #0x4, lsl #12
   26b5c:	b.hi	27494 <mpfr_sub1@@Base+0xa3c>  // b.pmore
   26b60:	add	x1, x1, #0xf
   26b64:	and	x1, x1, #0xfffffffffffffff0
   26b68:	sub	sp, sp, x1
   26b6c:	mov	x19, sp
   26b70:	ldr	x1, [x23, #24]
   26b74:	mov	x2, x21
   26b78:	add	x0, x19, #0x8
   26b7c:	str	x6, [x29, #120]
   26b80:	bl	bce0 <__gmpn_rshift@plt>
   26b84:	str	x0, [x19]
   26b88:	ldr	x6, [x29, #120]
   26b8c:	ldr	x5, [x29, #144]
   26b90:	mov	w0, w5
   26b94:	ldr	x7, [x27]
   26b98:	sub	w3, w6, w0
   26b9c:	ands	w3, w3, #0x3f
   26ba0:	sub	x7, x7, #0x1
   26ba4:	asr	x7, x7, #6
   26ba8:	add	x23, x7, #0x1
   26bac:	b.eq	27310 <mpfr_sub1@@Base+0x8b8>  // b.none
   26bb0:	add	x21, x7, #0x2
   26bb4:	lsl	x1, x21, #3
   26bb8:	cmp	x1, #0x4, lsl #12
   26bbc:	b.hi	274c4 <mpfr_sub1@@Base+0xa6c>  // b.pmore
   26bc0:	add	x1, x1, #0xf
   26bc4:	and	x1, x1, #0xfffffffffffffff0
   26bc8:	sub	sp, sp, x1
   26bcc:	mov	x9, sp
   26bd0:	ldr	x1, [x27, #24]
   26bd4:	add	x0, x9, #0x8
   26bd8:	mov	x2, x23
   26bdc:	stp	x6, x9, [x29, #112]
   26be0:	bl	bce0 <__gmpn_rshift@plt>
   26be4:	ldp	x6, x9, [x29, #112]
   26be8:	str	x0, [x9]
   26bec:	ldr	x5, [x29, #144]
   26bf0:	cmp	x5, x6
   26bf4:	b.ge	26e7c <mpfr_sub1@@Base+0x424>  // b.tcont
   26bf8:	subs	x6, x6, x5
   26bfc:	add	x5, x6, #0x3f
   26c00:	csel	x5, x5, x6, mi  // mi = first
   26c04:	neg	x27, x5, asr #6
   26c08:	ldr	x0, [x29, #128]
   26c0c:	add	x4, x20, x0
   26c10:	ldr	x0, [x29, #136]
   26c14:	cmp	x4, x0
   26c18:	b.gt	273fc <mpfr_sub1@@Base+0x9a4>
   26c1c:	sub	x1, x0, x4
   26c20:	add	x1, x19, x1, lsl #3
   26c24:	cmp	x1, x28
   26c28:	b.eq	26c40 <mpfr_sub1@@Base+0x1e8>  // b.none
   26c2c:	lsl	x2, x20, #3
   26c30:	mov	x0, x28
   26c34:	stp	x9, x4, [x29, #120]
   26c38:	bl	ba10 <memcpy@plt>
   26c3c:	ldp	x9, x4, [x29, #120]
   26c40:	add	x23, x27, x20
   26c44:	cmp	x23, #0x0
   26c48:	b.le	26c60 <mpfr_sub1@@Base+0x208>
   26c4c:	tbnz	x27, #63, 26eb8 <mpfr_sub1@@Base+0x460>
   26c50:	cmp	x23, x21
   26c54:	b.le	27094 <mpfr_sub1@@Base+0x63c>
   26c58:	cmp	x27, x21
   26c5c:	b.lt	26fc0 <mpfr_sub1@@Base+0x568>  // b.tstop
   26c60:	lsl	w1, w20, #6
   26c64:	mov	x5, #0xffffffffffffffff    	// #-1
   26c68:	ldr	x2, [x28]
   26c6c:	sub	w24, w1, w24
   26c70:	cmp	w25, #0x5
   26c74:	lsl	x0, x5, x24
   26c78:	and	x3, x2, x0
   26c7c:	str	x3, [x28]
   26c80:	bic	x0, x2, x0
   26c84:	b.eq	2705c <mpfr_sub1@@Base+0x604>  // b.none
   26c88:	cbnz	w25, 26e94 <mpfr_sub1@@Base+0x43c>
   26c8c:	cbz	w24, 27684 <mpfr_sub1@@Base+0xc2c>
   26c90:	sub	w2, w24, #0x1
   26c94:	mov	x1, #0x1                   	// #1
   26c98:	lsl	x1, x1, x2
   26c9c:	cmp	x1, x0
   26ca0:	b.cc	26d98 <mpfr_sub1@@Base+0x340>  // b.lo, b.ul, b.last
   26ca4:	cmp	x0, #0x0
   26ca8:	ccmp	x1, x0, #0x0, ne  // ne = any
   26cac:	b.hi	26eb0 <mpfr_sub1@@Base+0x458>  // b.pmore
   26cb0:	ldr	x2, [x29, #136]
   26cb4:	sub	x1, x21, x23
   26cb8:	cmp	x1, #0x0
   26cbc:	sub	x27, x2, x4
   26cc0:	cset	w2, gt
   26cc4:	cmp	x27, #0x0
   26cc8:	cset	w4, gt
   26ccc:	orr	w2, w2, w4
   26cd0:	cbz	x0, 26fb0 <mpfr_sub1@@Base+0x558>
   26cd4:	cbz	w2, 277e0 <mpfr_sub1@@Base+0xd88>
   26cd8:	mov	w0, w24
   26cdc:	mov	w2, #0x2                   	// #2
   26ce0:	mov	w6, #0x0                   	// #0
   26ce4:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   26ce8:	cmp	x27, #0x0
   26cec:	mov	x4, #0x0                   	// #0
   26cf0:	b.le	26cfc <mpfr_sub1@@Base+0x2a4>
   26cf4:	sub	x27, x27, #0x1
   26cf8:	ldr	x4, [x19, x27, lsl #3]
   26cfc:	cmp	x1, #0x0
   26d00:	b.le	26fe8 <mpfr_sub1@@Base+0x590>
   26d04:	cmp	x1, x21
   26d08:	sub	x1, x1, #0x1
   26d0c:	b.gt	26fe8 <mpfr_sub1@@Base+0x590>
   26d10:	ldr	x5, [x9, x1, lsl #3]
   26d14:	cbnz	w2, 26ff0 <mpfr_sub1@@Base+0x598>
   26d18:	cmp	x4, x5
   26d1c:	b.cs	27040 <mpfr_sub1@@Base+0x5e8>  // b.hs, b.nlast
   26d20:	sub	w2, w6, #0x2
   26d24:	cbnz	w0, 26d40 <mpfr_sub1@@Base+0x2e8>
   26d28:	mov	w2, #0xffffffff            	// #-1
   26d2c:	cbnz	w6, 26d40 <mpfr_sub1@@Base+0x2e8>
   26d30:	mov	w2, #0xfffffffe            	// #-2
   26d34:	tbnz	x5, #63, 27064 <mpfr_sub1@@Base+0x60c>
   26d38:	add	x4, x4, x10
   26d3c:	nop
   26d40:	cmp	w25, #0x1
   26d44:	b.eq	27270 <mpfr_sub1@@Base+0x818>  // b.none
   26d48:	cbnz	w25, 2708c <mpfr_sub1@@Base+0x634>
   26d4c:	cmp	x4, x5
   26d50:	ccmn	w2, #0x1, #0x4, ls  // ls = plast
   26d54:	ccmp	w24, #0x0, #0x0, ne  // ne = any
   26d58:	b.gt	2708c <mpfr_sub1@@Base+0x634>
   26d5c:	cmp	x4, x5
   26d60:	b.cc	27270 <mpfr_sub1@@Base+0x818>  // b.lo, b.ul, b.last
   26d64:	mov	w2, #0xfffffffe            	// #-2
   26d68:	cmp	x27, #0x0
   26d6c:	mov	w6, #0x1                   	// #1
   26d70:	ccmp	x1, #0x0, #0x0, le
   26d74:	b.gt	26ce8 <mpfr_sub1@@Base+0x290>
   26d78:	cmp	w25, #0x0
   26d7c:	ccmp	w2, #0x0, #0x4, eq  // eq = none
   26d80:	b.eq	2705c <mpfr_sub1@@Base+0x604>  // b.none
   26d84:	lsr	x0, x3, x24
   26d88:	tbz	w0, #0, 27534 <mpfr_sub1@@Base+0xadc>
   26d8c:	mov	w25, #0x0                   	// #0
   26d90:	tbnz	w2, #31, 27270 <mpfr_sub1@@Base+0x818>
   26d94:	nop
   26d98:	mov	x19, #0x1                   	// #1
   26d9c:	lsl	x24, x19, x24
   26da0:	adds	x24, x3, x24
   26da4:	str	x24, [x28]
   26da8:	b.cs	26f50 <mpfr_sub1@@Base+0x4f8>  // b.hs, b.nlast
   26dac:	nop
   26db0:	lsl	x0, x20, #3
   26db4:	mov	x23, #0x0                   	// #0
   26db8:	sub	x0, x0, #0x8
   26dbc:	ldr	x1, [x28, x0]
   26dc0:	tbz	x1, #63, 274b4 <mpfr_sub1@@Base+0xa5c>
   26dc4:	ldr	x0, [x29, #152]
   26dc8:	cbnz	x0, 27450 <mpfr_sub1@@Base+0x9f8>
   26dcc:	ldr	x20, [x29, #144]
   26dd0:	cbz	x20, 27360 <mpfr_sub1@@Base+0x908>
   26dd4:	sub	x20, x20, x23
   26dd8:	str	x20, [x29, #144]
   26ddc:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   26de0:	mrs	x21, tpidr_el0
   26de4:	cmp	x22, x0
   26de8:	sub	x20, x22, x20
   26dec:	b.eq	27458 <mpfr_sub1@@Base+0xa00>  // b.none
   26df0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   26df4:	ldr	x1, [x0, #2512]
   26df8:	add	x0, x0, #0x9d0
   26dfc:	blr	x1
   26e00:	ldr	x0, [x21, x0]
   26e04:	cmp	x0, x20
   26e08:	b.gt	273a8 <mpfr_sub1@@Base+0x950>
   26e0c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   26e10:	ldr	x1, [x0, #2544]
   26e14:	add	x0, x0, #0x9f0
   26e18:	blr	x1
   26e1c:	ldr	x0, [x21, x0]
   26e20:	cmp	x0, x20
   26e24:	b.lt	27258 <mpfr_sub1@@Base+0x800>  // b.tstop
   26e28:	ldr	w0, [x26, #8]
   26e2c:	str	x20, [x26, #16]
   26e30:	mul	w19, w19, w0
   26e34:	cbz	w19, 26e58 <mpfr_sub1@@Base+0x400>
   26e38:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   26e3c:	ldr	x1, [x0, #2576]
   26e40:	add	x0, x0, #0xa10
   26e44:	blr	x1
   26e48:	add	x0, x21, x0
   26e4c:	ldr	w1, [x0]
   26e50:	orr	w1, w1, #0x8
   26e54:	str	w1, [x0]
   26e58:	mov	sp, x29
   26e5c:	mov	w0, w19
   26e60:	ldp	x19, x20, [sp, #16]
   26e64:	ldp	x21, x22, [sp, #32]
   26e68:	ldp	x23, x24, [sp, #48]
   26e6c:	ldp	x25, x26, [sp, #64]
   26e70:	ldp	x27, x28, [sp, #80]
   26e74:	ldp	x29, x30, [sp], #160
   26e78:	ret
   26e7c:	sub	x5, x5, x6
   26e80:	add	x0, x5, #0x7e
   26e84:	adds	x5, x5, #0x3f
   26e88:	csel	x5, x0, x5, mi  // mi = first
   26e8c:	asr	x27, x5, #6
   26e90:	b	26c08 <mpfr_sub1@@Base+0x1b0>
   26e94:	ldr	w1, [x26, #8]
   26e98:	add	w1, w25, w1, lsr #31
   26e9c:	cmp	w1, #0x3
   26ea0:	b.eq	270b8 <mpfr_sub1@@Base+0x660>  // b.none
   26ea4:	cbz	x0, 26f90 <mpfr_sub1@@Base+0x538>
   26ea8:	cmp	w25, #0x1
   26eac:	b.ne	26d98 <mpfr_sub1@@Base+0x340>  // b.any
   26eb0:	mov	w19, #0xffffffff            	// #-1
   26eb4:	b	26db0 <mpfr_sub1@@Base+0x358>
   26eb8:	str	x4, [x29, #120]
   26ebc:	cmp	x23, x21
   26ec0:	b.le	26f2c <mpfr_sub1@@Base+0x4d4>
   26ec4:	sub	x1, x20, x21
   26ec8:	mov	x2, x9
   26ecc:	add	x1, x1, x27
   26ed0:	mov	x3, x21
   26ed4:	str	x9, [x29, #128]
   26ed8:	add	x1, x28, x1, lsl #3
   26edc:	mov	x0, x1
   26ee0:	bl	be60 <__gmpn_sub_n@plt>
   26ee4:	ldp	x4, x9, [x29, #120]
   26ee8:	add	x3, x28, x23, lsl #3
   26eec:	ldr	x1, [x28, x23, lsl #3]
   26ef0:	sub	x2, x1, x0
   26ef4:	str	x2, [x28, x23, lsl #3]
   26ef8:	cmp	x0, x1
   26efc:	b.ls	26c60 <mpfr_sub1@@Base+0x208>  // b.plast
   26f00:	neg	x0, x27
   26f04:	mov	x1, #0x1                   	// #1
   26f08:	b	26f20 <mpfr_sub1@@Base+0x4c8>
   26f0c:	ldr	x2, [x3, x1, lsl #3]
   26f10:	sub	x5, x2, #0x1
   26f14:	str	x5, [x3, x1, lsl #3]
   26f18:	add	x1, x1, #0x1
   26f1c:	cbnz	x2, 26c60 <mpfr_sub1@@Base+0x208>
   26f20:	cmp	x0, x1
   26f24:	b.ne	26f0c <mpfr_sub1@@Base+0x4b4>  // b.any
   26f28:	b	26c60 <mpfr_sub1@@Base+0x208>
   26f2c:	sub	x2, x21, x23
   26f30:	mov	x3, x23
   26f34:	mov	x1, x28
   26f38:	mov	x0, x28
   26f3c:	add	x2, x9, x2, lsl #3
   26f40:	str	x9, [x29, #128]
   26f44:	bl	be60 <__gmpn_sub_n@plt>
   26f48:	ldp	x4, x9, [x29, #120]
   26f4c:	b	26ee8 <mpfr_sub1@@Base+0x490>
   26f50:	ldr	x0, [x29, #104]
   26f54:	mov	x1, x28
   26f58:	add	x2, x28, x0, lsl #3
   26f5c:	b	26f70 <mpfr_sub1@@Base+0x518>
   26f60:	ldr	x0, [x1, #8]
   26f64:	add	x0, x0, #0x1
   26f68:	str	x0, [x1, #8]!
   26f6c:	cbnz	x0, 2708c <mpfr_sub1@@Base+0x634>
   26f70:	cmp	x2, x1
   26f74:	b.ne	26f60 <mpfr_sub1@@Base+0x508>  // b.any
   26f78:	ldr	x1, [x29, #104]
   26f7c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   26f80:	mov	x23, #0x1                   	// #1
   26f84:	mov	w19, w23
   26f88:	str	x0, [x28, x1, lsl #3]
   26f8c:	b	26dc4 <mpfr_sub1@@Base+0x36c>
   26f90:	ldr	x0, [x29, #136]
   26f94:	sub	x1, x21, x23
   26f98:	sub	x27, x0, x4
   26f9c:	cmp	x27, #0x0
   26fa0:	cset	w2, gt
   26fa4:	cmp	x1, #0x0
   26fa8:	cset	w0, gt
   26fac:	orr	w2, w2, w0
   26fb0:	cbz	w2, 2705c <mpfr_sub1@@Base+0x604>
   26fb4:	orr	w0, w25, w24
   26fb8:	mov	w2, #0x0                   	// #0
   26fbc:	b	26ce0 <mpfr_sub1@@Base+0x288>
   26fc0:	sub	x1, x27, x21
   26fc4:	mov	x2, x9
   26fc8:	add	x1, x1, x20
   26fcc:	sub	x3, x21, x27
   26fd0:	stp	x4, x9, [x29, #120]
   26fd4:	add	x1, x28, x1, lsl #3
   26fd8:	mov	x0, x1
   26fdc:	bl	be60 <__gmpn_sub_n@plt>
   26fe0:	ldp	x4, x9, [x29, #120]
   26fe4:	b	26c60 <mpfr_sub1@@Base+0x208>
   26fe8:	mov	x5, #0x0                   	// #0
   26fec:	cbz	w2, 27040 <mpfr_sub1@@Base+0x5e8>
   26ff0:	orr	w6, w6, w0
   26ff4:	cbnz	w6, 27028 <mpfr_sub1@@Base+0x5d0>
   26ff8:	tbnz	w2, #31, 26d34 <mpfr_sub1@@Base+0x2dc>
   26ffc:	tbnz	x5, #63, 27054 <mpfr_sub1@@Base+0x5fc>
   27000:	add	x5, x5, x10
   27004:	cbz	w2, 26d68 <mpfr_sub1@@Base+0x310>
   27008:	mov	w2, #0x2                   	// #2
   2700c:	nop
   27010:	cbnz	w25, 26d98 <mpfr_sub1@@Base+0x340>
   27014:	cmp	x4, x5
   27018:	b.hi	276b8 <mpfr_sub1@@Base+0xc60>  // b.pmore
   2701c:	b.cs	26d68 <mpfr_sub1@@Base+0x310>  // b.hs, b.nlast
   27020:	mov	w19, #0xffffffff            	// #-1
   27024:	b	26db0 <mpfr_sub1@@Base+0x358>
   27028:	tbnz	w2, #31, 26d40 <mpfr_sub1@@Base+0x2e8>
   2702c:	cbz	w2, 26d68 <mpfr_sub1@@Base+0x310>
   27030:	cmp	w25, #0x1
   27034:	b.ne	27010 <mpfr_sub1@@Base+0x5b8>  // b.any
   27038:	mov	w19, #0xffffffff            	// #-1
   2703c:	b	26db0 <mpfr_sub1@@Base+0x358>
   27040:	cmp	x4, x5
   27044:	cset	w2, hi  // hi = pmore
   27048:	cbnz	w0, 2702c <mpfr_sub1@@Base+0x5d4>
   2704c:	cbnz	w6, 2702c <mpfr_sub1@@Base+0x5d4>
   27050:	tbz	x5, #63, 27000 <mpfr_sub1@@Base+0x5a8>
   27054:	add	x4, x4, x10
   27058:	b	27004 <mpfr_sub1@@Base+0x5ac>
   2705c:	mov	w19, #0x0                   	// #0
   27060:	b	26db0 <mpfr_sub1@@Base+0x358>
   27064:	add	x5, x5, x10
   27068:	b	26d40 <mpfr_sub1@@Base+0x2e8>
   2706c:	add	x0, x23, #0x20
   27070:	bl	bc40 <mpfr_ubf_zexp2exp@plt>
   27074:	mov	x22, x0
   27078:	mov	x1, x27
   2707c:	mov	x0, x23
   27080:	bl	cb00 <mpfr_ubf_diff_exp@plt>
   27084:	mov	x6, x0
   27088:	b	26af8 <mpfr_sub1@@Base+0xa0>
   2708c:	mov	w19, #0x1                   	// #1
   27090:	b	26db0 <mpfr_sub1@@Base+0x358>
   27094:	sub	x2, x21, x23
   27098:	mov	x3, x20
   2709c:	mov	x1, x28
   270a0:	mov	x0, x28
   270a4:	add	x2, x9, x2, lsl #3
   270a8:	stp	x4, x9, [x29, #120]
   270ac:	bl	be60 <__gmpn_sub_n@plt>
   270b0:	ldp	x4, x9, [x29, #120]
   270b4:	b	26c60 <mpfr_sub1@@Base+0x208>
   270b8:	cbnz	x0, 274e4 <mpfr_sub1@@Base+0xa8c>
   270bc:	ldr	x0, [x29, #136]
   270c0:	sub	x1, x21, x23
   270c4:	mov	w25, #0x1                   	// #1
   270c8:	sub	x27, x0, x4
   270cc:	cmp	x27, #0x0
   270d0:	cset	w2, gt
   270d4:	cmp	x1, #0x0
   270d8:	cset	w0, gt
   270dc:	orr	w2, w2, w0
   270e0:	b	26fb0 <mpfr_sub1@@Base+0x558>
   270e4:	cmp	w25, #0x3
   270e8:	mov	w19, w0
   270ec:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   270f0:	mov	w0, #0x1                   	// #1
   270f4:	cneg	w0, w0, eq  // eq = none
   270f8:	str	w0, [x26, #8]
   270fc:	str	x1, [x26, #16]
   27100:	b	26e58 <mpfr_sub1@@Base+0x400>
   27104:	cmp	w25, #0x5
   27108:	b.eq	276f8 <mpfr_sub1@@Base+0xca0>  // b.none
   2710c:	sub	x0, x4, #0x1
   27110:	sub	x7, x24, #0x1
   27114:	ldr	x8, [x23, #24]
   27118:	str	x22, [x26, #16]
   2711c:	cmp	x24, x4
   27120:	asr	x7, x7, #6
   27124:	asr	x4, x0, #6
   27128:	ldr	x22, [x26, #24]
   2712c:	b.ge	2757c <mpfr_sub1@@Base+0xb24>  // b.tcont
   27130:	sub	x4, x4, x7
   27134:	neg	w0, w24
   27138:	ands	w0, w0, #0x3f
   2713c:	add	x2, x7, #0x1
   27140:	add	x1, x8, x4, lsl #3
   27144:	mov	w23, w24
   27148:	b.eq	2775c <mpfr_sub1@@Base+0xd04>  // b.none
   2714c:	ldr	x3, [x8, x4, lsl #3]
   27150:	sub	w5, w0, #0x1
   27154:	mov	x0, #0x1                   	// #1
   27158:	cmp	w25, #0x0
   2715c:	lsl	x0, x0, x5
   27160:	and	x9, x3, x0
   27164:	sub	x0, x0, #0x1
   27168:	ccmp	x9, #0x0, #0x4, ne  // ne = any
   2716c:	and	x0, x0, x3
   27170:	b.ne	271a0 <mpfr_sub1@@Base+0x748>  // b.any
   27174:	cmp	x4, #0x0
   27178:	mov	x3, x4
   2717c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   27180:	b.ne	271a0 <mpfr_sub1@@Base+0x748>  // b.any
   27184:	mvn	x6, x4
   27188:	add	x6, x1, x6, lsl #3
   2718c:	nop
   27190:	ldr	x0, [x6, x3, lsl #3]
   27194:	subs	x3, x3, #0x1
   27198:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   2719c:	b.eq	27190 <mpfr_sub1@@Base+0x738>  // b.none
   271a0:	mov	x27, #0x2                   	// #2
   271a4:	lsl	x27, x27, x5
   271a8:	cbnz	w25, 2750c <mpfr_sub1@@Base+0xab4>
   271ac:	cbz	x9, 276a8 <mpfr_sub1@@Base+0xc50>
   271b0:	ldr	w19, [x26, #8]
   271b4:	ldr	x3, [x8, x4, lsl #3]
   271b8:	cbz	x0, 27544 <mpfr_sub1@@Base+0xaec>
   271bc:	mov	w6, w19
   271c0:	adds	x3, x27, x3
   271c4:	str	x3, [x22]
   271c8:	b.cc	276c8 <mpfr_sub1@@Base+0xc70>  // b.lo, b.ul, b.last
   271cc:	mov	x0, #0x1                   	// #1
   271d0:	b	271ec <mpfr_sub1@@Base+0x794>
   271d4:	ldr	x3, [x1, x0, lsl #3]
   271d8:	add	x4, x0, #0x1
   271dc:	add	x3, x3, #0x1
   271e0:	str	x3, [x22, x0, lsl #3]
   271e4:	cbnz	x3, 27714 <mpfr_sub1@@Base+0xcbc>
   271e8:	mov	x0, x4
   271ec:	cmp	x2, x0
   271f0:	b.gt	271d4 <mpfr_sub1@@Base+0x77c>
   271f4:	add	x0, x22, x2, lsl #3
   271f8:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   271fc:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   27200:	stur	x2, [x0, #-8]
   27204:	ldr	x0, [x26, #16]
   27208:	cmp	x0, x1
   2720c:	b.eq	27218 <mpfr_sub1@@Base+0x7c0>  // b.none
   27210:	add	x0, x0, #0x1
   27214:	str	x0, [x26, #16]
   27218:	ldr	x3, [x22]
   2721c:	neg	x5, x27
   27220:	and	x3, x5, x3
   27224:	str	x3, [x22]
   27228:	cbz	w19, 275b8 <mpfr_sub1@@Base+0xb60>
   2722c:	cmp	w19, w6, lsl #1
   27230:	b.eq	275fc <mpfr_sub1@@Base+0xba4>  // b.none
   27234:	mrs	x21, tpidr_el0
   27238:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2723c:	ldr	x1, [x0, #2544]
   27240:	add	x0, x0, #0x9f0
   27244:	blr	x1
   27248:	ldr	x1, [x26, #16]
   2724c:	ldr	x0, [x21, x0]
   27250:	cmp	x1, x0
   27254:	b.le	26e38 <mpfr_sub1@@Base+0x3e0>
   27258:	ldr	w2, [x26, #8]
   2725c:	mov	w1, w25
   27260:	mov	x0, x26
   27264:	bl	bf40 <mpfr_overflow@plt>
   27268:	mov	w19, w0
   2726c:	b	26e58 <mpfr_sub1@@Base+0x400>
   27270:	mov	x0, #0x1                   	// #1
   27274:	lsl	x24, x0, x24
   27278:	subs	x0, x3, x24
   2727c:	str	x0, [x28]
   27280:	b.cs	272a8 <mpfr_sub1@@Base+0x850>  // b.hs, b.nlast
   27284:	ldr	x0, [x29, #104]
   27288:	add	x21, x28, x0, lsl #3
   2728c:	b	272a0 <mpfr_sub1@@Base+0x848>
   27290:	ldr	x0, [x28, #8]
   27294:	sub	x1, x0, #0x1
   27298:	str	x1, [x28, #8]!
   2729c:	cbnz	x0, 272a8 <mpfr_sub1@@Base+0x850>
   272a0:	cmp	x21, x28
   272a4:	b.ne	27290 <mpfr_sub1@@Base+0x838>  // b.any
   272a8:	mov	x23, #0x0                   	// #0
   272ac:	mov	w19, #0xffffffff            	// #-1
   272b0:	b	26dc4 <mpfr_sub1@@Base+0x36c>
   272b4:	ldr	x19, [x23, #24]
   272b8:	str	x21, [x29, #136]
   272bc:	cmp	x28, x19
   272c0:	b.ne	26b94 <mpfr_sub1@@Base+0x13c>  // b.any
   272c4:	lsl	x23, x21, #3
   272c8:	cmp	x23, #0x4, lsl #12
   272cc:	b.hi	277ec <mpfr_sub1@@Base+0xd94>  // b.pmore
   272d0:	add	x0, x23, #0xf
   272d4:	and	x0, x0, #0xfffffffffffffff0
   272d8:	sub	sp, sp, x0
   272dc:	mov	x19, sp
   272e0:	cmp	x19, x28
   272e4:	b.eq	277d0 <mpfr_sub1@@Base+0xd78>  // b.none
   272e8:	mov	x2, x23
   272ec:	mov	x1, x28
   272f0:	mov	x0, x19
   272f4:	str	x6, [x29, #120]
   272f8:	bl	ba10 <memcpy@plt>
   272fc:	str	x21, [x29, #136]
   27300:	ldr	x5, [x29, #144]
   27304:	ldr	x6, [x29, #120]
   27308:	mov	w0, w5
   2730c:	b	26b94 <mpfr_sub1@@Base+0x13c>
   27310:	ldr	x9, [x27, #24]
   27314:	mov	x21, x23
   27318:	cmp	x28, x9
   2731c:	b.ne	26bf0 <mpfr_sub1@@Base+0x198>  // b.any
   27320:	lsl	x2, x23, #3
   27324:	cmp	x2, #0x4, lsl #12
   27328:	b.hi	277b4 <mpfr_sub1@@Base+0xd5c>  // b.pmore
   2732c:	add	x0, x2, #0xf
   27330:	and	x0, x0, #0xfffffffffffffff0
   27334:	sub	sp, sp, x0
   27338:	mov	x9, sp
   2733c:	mov	x0, x9
   27340:	mov	x1, x28
   27344:	str	x6, [x29, #120]
   27348:	bl	ba10 <memcpy@plt>
   2734c:	mov	x21, x23
   27350:	mov	x9, x0
   27354:	ldr	x6, [x29, #120]
   27358:	ldr	x5, [x29, #144]
   2735c:	b	26bf0 <mpfr_sub1@@Base+0x198>
   27360:	mrs	x21, tpidr_el0
   27364:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   27368:	ldr	x1, [x0, #2544]
   2736c:	add	x0, x0, #0x9f0
   27370:	blr	x1
   27374:	ldr	x0, [x21, x0]
   27378:	sub	x0, x0, x23
   2737c:	cmp	x0, x22
   27380:	b.lt	27258 <mpfr_sub1@@Base+0x800>  // b.tstop
   27384:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   27388:	ldr	x1, [x0, #2512]
   2738c:	add	x0, x0, #0x9d0
   27390:	blr	x1
   27394:	add	x20, x23, x22
   27398:	ldr	x0, [x21, x0]
   2739c:	cmp	x0, x20
   273a0:	b.le	26e28 <mpfr_sub1@@Base+0x3d0>
   273a4:	nop
   273a8:	cbnz	w25, 273e4 <mpfr_sub1@@Base+0x98c>
   273ac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   273b0:	ldr	x1, [x0, #2512]
   273b4:	add	x0, x0, #0x9d0
   273b8:	blr	x1
   273bc:	ldr	x0, [x21, x0]
   273c0:	sub	x0, x0, #0x1
   273c4:	cmp	x0, x20
   273c8:	b.gt	27820 <mpfr_sub1@@Base+0xdc8>
   273cc:	cmn	w19, #0x1
   273d0:	b.eq	273e4 <mpfr_sub1@@Base+0x98c>  // b.none
   273d4:	mov	x0, x26
   273d8:	bl	bf00 <mpfr_powerof2_raw@plt>
   273dc:	cmp	w0, #0x0
   273e0:	cset	w25, ne  // ne = any
   273e4:	ldr	w2, [x26, #8]
   273e8:	mov	w1, w25
   273ec:	mov	x0, x26
   273f0:	bl	c3c0 <mpfr_underflow@plt>
   273f4:	mov	w19, w0
   273f8:	b	26e58 <mpfr_sub1@@Base+0x400>
   273fc:	ldp	x0, x1, [x29, #128]
   27400:	cmp	x0, x1
   27404:	b.ge	274f0 <mpfr_sub1@@Base+0xa98>  // b.tcont
   27408:	sub	x23, x4, x1
   2740c:	mov	x0, x28
   27410:	mov	w1, #0x0                   	// #0
   27414:	stp	x9, x4, [x29, #112]
   27418:	lsl	x23, x23, #3
   2741c:	mov	x2, x23
   27420:	bl	c110 <memset@plt>
   27424:	add	x0, x28, x23
   27428:	cmp	x0, x19
   2742c:	ldp	x9, x4, [x29, #112]
   27430:	b.eq	26c40 <mpfr_sub1@@Base+0x1e8>  // b.none
   27434:	ldp	x2, x1, [x29, #128]
   27438:	sub	x2, x1, x2
   2743c:	mov	x1, x19
   27440:	lsl	x2, x2, #3
   27444:	bl	ba10 <memcpy@plt>
   27448:	ldp	x9, x4, [x29, #112]
   2744c:	b	26c40 <mpfr_sub1@@Base+0x1e8>
   27450:	bl	c410 <mpfr_tmp_free@plt>
   27454:	b	26dcc <mpfr_sub1@@Base+0x374>
   27458:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2745c:	ldr	x1, [x0, #2544]
   27460:	add	x0, x0, #0x9f0
   27464:	blr	x1
   27468:	ldr	x0, [x21, x0]
   2746c:	cmp	x0, x20
   27470:	b.ge	27740 <mpfr_sub1@@Base+0xce8>  // b.tcont
   27474:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   27478:	ldr	x1, [x0, #2512]
   2747c:	add	x0, x0, #0x9d0
   27480:	blr	x1
   27484:	ldr	x0, [x21, x0]
   27488:	cmp	x20, x0
   2748c:	b.lt	273a8 <mpfr_sub1@@Base+0x950>  // b.tstop
   27490:	b	27258 <mpfr_sub1@@Base+0x800>
   27494:	add	x0, x29, #0x98
   27498:	str	x6, [x29, #112]
   2749c:	str	w3, [x29, #120]
   274a0:	bl	bdc0 <mpfr_tmp_allocate@plt>
   274a4:	ldr	w3, [x29, #120]
   274a8:	mov	x19, x0
   274ac:	ldr	x6, [x29, #112]
   274b0:	b	26b70 <mpfr_sub1@@Base+0x118>
   274b4:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   274b8:	mov	x23, #0x1                   	// #1
   274bc:	str	x1, [x28, x0]
   274c0:	b	26dc4 <mpfr_sub1@@Base+0x36c>
   274c4:	add	x0, x29, #0x98
   274c8:	str	x6, [x29, #112]
   274cc:	str	w3, [x29, #120]
   274d0:	bl	bdc0 <mpfr_tmp_allocate@plt>
   274d4:	ldr	w3, [x29, #120]
   274d8:	mov	x9, x0
   274dc:	ldr	x6, [x29, #112]
   274e0:	b	26bd0 <mpfr_sub1@@Base+0x178>
   274e4:	mov	w19, w5
   274e8:	mov	w25, #0x1                   	// #1
   274ec:	b	26db0 <mpfr_sub1@@Base+0x358>
   274f0:	lsl	x2, x20, #3
   274f4:	mov	x0, x28
   274f8:	mov	w1, #0x0                   	// #0
   274fc:	stp	x9, x4, [x29, #120]
   27500:	bl	c110 <memset@plt>
   27504:	ldp	x9, x4, [x29, #120]
   27508:	b	26c40 <mpfr_sub1@@Base+0x1e8>
   2750c:	orr	x0, x0, x9
   27510:	cmp	w25, #0x1
   27514:	b.eq	276a8 <mpfr_sub1@@Base+0xc50>  // b.none
   27518:	ldr	w19, [x26, #8]
   2751c:	add	w3, w25, w19, lsr #31
   27520:	cmp	w3, #0x3
   27524:	b.eq	276a8 <mpfr_sub1@@Base+0xc50>  // b.none
   27528:	cbz	x0, 277a4 <mpfr_sub1@@Base+0xd4c>
   2752c:	ldr	x3, [x8, x4, lsl #3]
   27530:	b	271bc <mpfr_sub1@@Base+0x764>
   27534:	cmp	w2, #0x0
   27538:	mov	w25, #0x0                   	// #0
   2753c:	csinv	w19, w6, wzr, le
   27540:	b	26db0 <mpfr_sub1@@Base+0x358>
   27544:	tst	x27, x3
   27548:	b.ne	27814 <mpfr_sub1@@Base+0xdbc>  // b.any
   2754c:	neg	w19, w19, lsl #1
   27550:	cmp	x22, x1
   27554:	b.eq	27564 <mpfr_sub1@@Base+0xb0c>  // b.none
   27558:	lsl	x2, x2, #3
   2755c:	mov	x0, x22
   27560:	bl	ba10 <memcpy@plt>
   27564:	ldr	x0, [x22]
   27568:	neg	x5, x27
   2756c:	ldr	w6, [x26, #8]
   27570:	and	x0, x0, x5
   27574:	str	x0, [x22]
   27578:	b	27228 <mpfr_sub1@@Base+0x7d0>
   2757c:	sub	x7, x7, x4
   27580:	add	x4, x4, #0x1
   27584:	lsl	x19, x7, #3
   27588:	add	x0, x22, x19
   2758c:	cmp	x0, x8
   27590:	b.eq	275a0 <mpfr_sub1@@Base+0xb48>  // b.none
   27594:	lsl	x2, x4, #3
   27598:	mov	x1, x8
   2759c:	bl	ba10 <memcpy@plt>
   275a0:	mov	x2, x19
   275a4:	mov	x0, x22
   275a8:	mov	w1, #0x0                   	// #0
   275ac:	bl	c110 <memset@plt>
   275b0:	ldr	w6, [x26, #8]
   275b4:	nop
   275b8:	cmp	w25, #0x1
   275bc:	b.eq	275f8 <mpfr_sub1@@Base+0xba0>  // b.none
   275c0:	add	w0, w25, w6, lsr #31
   275c4:	cmp	w0, #0x3
   275c8:	b.eq	275f8 <mpfr_sub1@@Base+0xba0>  // b.none
   275cc:	ldr	x1, [x26, #16]
   275d0:	mov	w19, w6
   275d4:	mrs	x21, tpidr_el0
   275d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   275dc:	ldr	x2, [x0, #2544]
   275e0:	add	x0, x0, #0x9f0
   275e4:	blr	x2
   275e8:	ldr	x0, [x21, x0]
   275ec:	cmp	x0, x1
   275f0:	b.ge	26e34 <mpfr_sub1@@Base+0x3dc>  // b.tcont
   275f4:	b	27258 <mpfr_sub1@@Base+0x800>
   275f8:	mov	w23, w24
   275fc:	lsl	w0, w20, #6
   27600:	mov	x1, #0x1                   	// #1
   27604:	ldr	x2, [x28]
   27608:	sub	w23, w0, w23
   2760c:	lsl	x23, x1, x23
   27610:	sub	x0, x2, x23
   27614:	str	x0, [x28]
   27618:	cmp	x23, x2
   2761c:	b.ls	27648 <mpfr_sub1@@Base+0xbf0>  // b.plast
   27620:	ldr	x0, [x29, #104]
   27624:	add	x21, x28, x0, lsl #3
   27628:	mov	x0, x28
   2762c:	b	27640 <mpfr_sub1@@Base+0xbe8>
   27630:	ldr	x1, [x0, #8]
   27634:	sub	x2, x1, #0x1
   27638:	str	x2, [x0, #8]!
   2763c:	cbnz	x1, 27648 <mpfr_sub1@@Base+0xbf0>
   27640:	cmp	x0, x21
   27644:	b.ne	27630 <mpfr_sub1@@Base+0xbd8>  // b.any
   27648:	lsl	x0, x20, #3
   2764c:	sub	x0, x0, #0x8
   27650:	ldr	x1, [x26, #16]
   27654:	ldr	x2, [x28, x0]
   27658:	tbz	x2, #63, 27664 <mpfr_sub1@@Base+0xc0c>
   2765c:	neg	w19, w6
   27660:	b	275d4 <mpfr_sub1@@Base+0xb7c>
   27664:	sub	x1, x1, #0x1
   27668:	str	x1, [x26, #16]
   2766c:	neg	w19, w6
   27670:	ldr	x1, [x28, x0]
   27674:	orr	x1, x1, #0x8000000000000000
   27678:	str	x1, [x28, x0]
   2767c:	ldr	x1, [x26, #16]
   27680:	b	275d4 <mpfr_sub1@@Base+0xb7c>
   27684:	ldr	x0, [x29, #136]
   27688:	sub	x1, x21, x23
   2768c:	cmp	x1, #0x0
   27690:	sub	x27, x0, x4
   27694:	cset	w2, gt
   27698:	cmp	x27, #0x0
   2769c:	cset	w0, gt
   276a0:	orr	w2, w2, w0
   276a4:	b	26fb0 <mpfr_sub1@@Base+0x558>
   276a8:	cbz	x0, 277a4 <mpfr_sub1@@Base+0xd4c>
   276ac:	ldr	w19, [x26, #8]
   276b0:	neg	w19, w19
   276b4:	b	27550 <mpfr_sub1@@Base+0xaf8>
   276b8:	cmp	w2, #0x2
   276bc:	b.eq	26d98 <mpfr_sub1@@Base+0x340>  // b.none
   276c0:	mov	w19, #0xffffffff            	// #-1
   276c4:	b	26db0 <mpfr_sub1@@Base+0x358>
   276c8:	cmp	x22, x1
   276cc:	b.eq	2721c <mpfr_sub1@@Base+0x7c4>  // b.none
   276d0:	cmp	x2, #0x1
   276d4:	b.eq	2721c <mpfr_sub1@@Base+0x7c4>  // b.none
   276d8:	mov	x0, #0x1                   	// #1
   276dc:	nop
   276e0:	ldr	x3, [x1, x0, lsl #3]
   276e4:	str	x3, [x22, x0, lsl #3]
   276e8:	add	x0, x0, #0x1
   276ec:	cmp	x0, x2
   276f0:	b.ne	276e0 <mpfr_sub1@@Base+0xc88>  // b.any
   276f4:	b	27218 <mpfr_sub1@@Base+0x7c0>
   276f8:	ldr	w3, [x26, #8]
   276fc:	mov	x1, x23
   27700:	mov	x0, x26
   27704:	mov	w2, #0x1                   	// #1
   27708:	bl	c6a0 <mpfr_set4@plt>
   2770c:	mov	w19, w0
   27710:	b	26e58 <mpfr_sub1@@Base+0x400>
   27714:	cmp	x22, x1
   27718:	b.eq	27218 <mpfr_sub1@@Base+0x7c0>  // b.none
   2771c:	cmp	x0, x7
   27720:	b.ge	27218 <mpfr_sub1@@Base+0x7c0>  // b.tcont
   27724:	nop
   27728:	ldr	x0, [x1, x4, lsl #3]
   2772c:	str	x0, [x22, x4, lsl #3]
   27730:	cmp	x4, x7
   27734:	add	x4, x4, #0x1
   27738:	b.lt	27728 <mpfr_sub1@@Base+0xcd0>  // b.tstop
   2773c:	b	27218 <mpfr_sub1@@Base+0x7c0>
   27740:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   27744:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   27748:	add	x2, x2, #0x588
   2774c:	add	x0, x0, #0x5c0
   27750:	mov	w1, #0x298                 	// #664
   27754:	bl	cb40 <mpfr_assert_fail@plt>
   27758:	b	27474 <mpfr_sub1@@Base+0xa1c>
   2775c:	ldur	x0, [x1, #-8]
   27760:	cmp	w25, #0x0
   27764:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   27768:	and	x9, x0, #0x8000000000000000
   2776c:	and	x5, x0, #0x7fffffffffffffff
   27770:	b.lt	277ac <mpfr_sub1@@Base+0xd54>  // b.tstop
   27774:	subs	x3, x4, #0x1
   27778:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   2777c:	b.ne	27808 <mpfr_sub1@@Base+0xdb0>  // b.any
   27780:	mvn	x5, x4
   27784:	add	x5, x1, x5, lsl #3
   27788:	ldr	x0, [x5, x3, lsl #3]
   2778c:	subs	x3, x3, #0x1
   27790:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   27794:	b.eq	27788 <mpfr_sub1@@Base+0xd30>  // b.none
   27798:	mov	x27, #0x1                   	// #1
   2779c:	cbz	w25, 271ac <mpfr_sub1@@Base+0x754>
   277a0:	b	2750c <mpfr_sub1@@Base+0xab4>
   277a4:	mov	w19, #0x0                   	// #0
   277a8:	b	27550 <mpfr_sub1@@Base+0xaf8>
   277ac:	mov	x27, #0x1                   	// #1
   277b0:	b	27510 <mpfr_sub1@@Base+0xab8>
   277b4:	mov	x1, x2
   277b8:	add	x0, x29, #0x98
   277bc:	stp	x6, x2, [x29, #112]
   277c0:	bl	bdc0 <mpfr_tmp_allocate@plt>
   277c4:	mov	x9, x0
   277c8:	ldp	x6, x2, [x29, #112]
   277cc:	b	2733c <mpfr_sub1@@Base+0x8e4>
   277d0:	ldr	x5, [x29, #144]
   277d4:	str	x21, [x29, #136]
   277d8:	mov	w0, w5
   277dc:	b	26b94 <mpfr_sub1@@Base+0x13c>
   277e0:	lsr	x0, x3, x24
   277e4:	tbnz	w0, #0, 26d98 <mpfr_sub1@@Base+0x340>
   277e8:	b	26eb0 <mpfr_sub1@@Base+0x458>
   277ec:	mov	x1, x23
   277f0:	add	x0, x29, #0x98
   277f4:	str	x6, [x29, #136]
   277f8:	bl	bdc0 <mpfr_tmp_allocate@plt>
   277fc:	mov	x19, x0
   27800:	ldr	x6, [x29, #136]
   27804:	b	272e0 <mpfr_sub1@@Base+0x888>
   27808:	mov	x0, x5
   2780c:	mov	x27, #0x1                   	// #1
   27810:	b	2779c <mpfr_sub1@@Base+0xd44>
   27814:	mov	w6, w19
   27818:	lsl	w19, w19, #1
   2781c:	b	271c0 <mpfr_sub1@@Base+0x768>
   27820:	mov	w25, #0x1                   	// #1
   27824:	b	273e4 <mpfr_sub1@@Base+0x98c>

0000000000027828 <mpfr_sub_ui@@Base>:
   27828:	stp	x29, x30, [sp, #-128]!
   2782c:	mov	x6, x1
   27830:	mov	x29, sp
   27834:	stp	x21, x22, [sp, #32]
   27838:	mov	w21, w3
   2783c:	cbz	x2, 2796c <mpfr_sub_ui@@Base+0x144>
   27840:	ldr	x1, [x1, #16]
   27844:	stp	x19, x20, [sp, #16]
   27848:	mov	x19, x0
   2784c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   27850:	cmp	x1, x0
   27854:	b.le	27984 <mpfr_sub_ui@@Base+0x15c>
   27858:	mrs	x4, tpidr_el0
   2785c:	clz	x5, x2
   27860:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   27864:	ldr	x1, [x0, #2576]
   27868:	add	x0, x0, #0xa10
   2786c:	blr	x1
   27870:	mov	x8, #0x40                  	// #64
   27874:	sub	w7, w8, w5
   27878:	add	x22, x4, x0
   2787c:	ldr	w20, [x4, x0]
   27880:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   27884:	ldr	x1, [x0, #2512]
   27888:	add	x0, x0, #0x9d0
   2788c:	blr	x1
   27890:	mov	x1, x6
   27894:	sxtw	x7, w7
   27898:	add	x6, sp, #0x58
   2789c:	stp	x23, x24, [sp, #48]
   278a0:	lsl	x5, x2, x5
   278a4:	stp	x25, x26, [sp, #64]
   278a8:	add	x26, x4, x0
   278ac:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   278b0:	ldr	x23, [x4, x0]
   278b4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   278b8:	ldr	x3, [x0, #2544]
   278bc:	add	x0, x0, #0x9f0
   278c0:	blr	x3
   278c4:	add	x25, x4, x0
   278c8:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   278cc:	mov	w11, #0x1                   	// #1
   278d0:	add	x2, sp, #0x60
   278d4:	mov	w3, w21
   278d8:	str	x10, [x26]
   278dc:	stp	x5, x8, [sp, #88]
   278e0:	str	w11, [sp, #104]
   278e4:	str	x7, [sp, #112]
   278e8:	str	x6, [sp, #120]
   278ec:	ldr	x24, [x4, x0]
   278f0:	mov	x0, x19
   278f4:	str	x9, [x25]
   278f8:	bl	bb70 <mpfr_sub@plt>
   278fc:	ldr	w1, [x22]
   27900:	ldr	x2, [x19, #16]
   27904:	orr	w1, w20, w1
   27908:	str	x24, [x25]
   2790c:	str	w1, [x22]
   27910:	cmp	x24, x2
   27914:	str	x23, [x26]
   27918:	ccmp	x23, x2, #0x0, ge  // ge = tcont
   2791c:	b.le	27948 <mpfr_sub_ui@@Base+0x120>
   27920:	mov	w1, w0
   27924:	mov	w2, w21
   27928:	mov	x0, x19
   2792c:	bl	cb30 <mpfr_check_range@plt>
   27930:	ldp	x19, x20, [sp, #16]
   27934:	ldp	x23, x24, [sp, #48]
   27938:	ldp	x25, x26, [sp, #64]
   2793c:	ldp	x21, x22, [sp, #32]
   27940:	ldp	x29, x30, [sp], #128
   27944:	ret
   27948:	cbz	w0, 27930 <mpfr_sub_ui@@Base+0x108>
   2794c:	orr	w1, w1, #0x8
   27950:	ldp	x19, x20, [sp, #16]
   27954:	ldp	x23, x24, [sp, #48]
   27958:	ldp	x25, x26, [sp, #64]
   2795c:	str	w1, [x22]
   27960:	ldp	x21, x22, [sp, #32]
   27964:	ldp	x29, x30, [sp], #128
   27968:	ret
   2796c:	mov	w2, w3
   27970:	ldr	w3, [x1, #8]
   27974:	bl	c6a0 <mpfr_set4@plt>
   27978:	ldp	x21, x22, [sp, #32]
   2797c:	ldp	x29, x30, [sp], #128
   27980:	ret
   27984:	mov	x3, #0x2                   	// #2
   27988:	movk	x3, #0x8000, lsl #48
   2798c:	cmp	x1, x3
   27990:	b.eq	279b4 <mpfr_sub_ui@@Base+0x18c>  // b.none
   27994:	cmp	x1, x0
   27998:	b.ne	27858 <mpfr_sub_ui@@Base+0x30>  // b.any
   2799c:	ldr	w2, [x6, #8]
   279a0:	mov	w0, #0x0                   	// #0
   279a4:	str	w2, [x19, #8]
   279a8:	str	x1, [x19, #16]
   279ac:	ldp	x19, x20, [sp, #16]
   279b0:	b	2793c <mpfr_sub_ui@@Base+0x114>
   279b4:	mrs	x2, tpidr_el0
   279b8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   279bc:	ldr	x3, [x0, #2576]
   279c0:	add	x0, x0, #0xa10
   279c4:	blr	x3
   279c8:	add	x2, x2, x0
   279cc:	str	x1, [x19, #16]
   279d0:	mov	w0, #0x0                   	// #0
   279d4:	ldp	x19, x20, [sp, #16]
   279d8:	ldr	w1, [x2]
   279dc:	orr	w1, w1, #0x4
   279e0:	str	w1, [x2]
   279e4:	b	2793c <mpfr_sub_ui@@Base+0x114>

00000000000279e8 <mpfr_rint@@Base>:
   279e8:	stp	x29, x30, [sp, #-144]!
   279ec:	mov	x4, x1
   279f0:	mov	x29, sp
   279f4:	stp	x25, x26, [sp, #64]
   279f8:	ldr	x25, [x1, #16]
   279fc:	stp	x23, x24, [sp, #48]
   27a00:	mov	x23, x0
   27a04:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   27a08:	cmp	x25, x0
   27a0c:	b.le	27f48 <mpfr_rint@@Base+0x560>
   27a10:	ldr	w26, [x1, #8]
   27a14:	cmp	w2, #0x3
   27a18:	stp	x27, x28, [sp, #80]
   27a1c:	mov	w27, w2
   27a20:	str	w26, [x23, #8]
   27a24:	b.eq	27a60 <mpfr_rint@@Base+0x78>  // b.none
   27a28:	cmp	w26, #0x0
   27a2c:	cset	w28, gt
   27a30:	cmp	w2, #0x2
   27a34:	b.eq	27a64 <mpfr_rint@@Base+0x7c>  // b.none
   27a38:	cmp	w2, #0x1
   27a3c:	b.eq	27f30 <mpfr_rint@@Base+0x548>  // b.none
   27a40:	cmp	w2, #0x4
   27a44:	b.eq	27e94 <mpfr_rint@@Base+0x4ac>  // b.none
   27a48:	cmp	x25, #0x0
   27a4c:	b.le	28050 <mpfr_rint@@Base+0x668>
   27a50:	mov	w28, #0xffffffff            	// #-1
   27a54:	stp	x19, x20, [sp, #16]
   27a58:	stp	x21, x22, [sp, #32]
   27a5c:	b	27a74 <mpfr_rint@@Base+0x8c>
   27a60:	lsr	w28, w26, #31
   27a64:	cmp	x25, #0x0
   27a68:	b.le	27eec <mpfr_rint@@Base+0x504>
   27a6c:	stp	x19, x20, [sp, #16]
   27a70:	stp	x21, x22, [sp, #32]
   27a74:	sub	x1, x25, #0x1
   27a78:	ldr	x5, [x4]
   27a7c:	ldr	x21, [x23]
   27a80:	sub	x5, x5, #0x1
   27a84:	ldr	x24, [x4, #24]
   27a88:	sub	x19, x21, #0x1
   27a8c:	asr	x5, x5, #6
   27a90:	str	x25, [x23, #16]
   27a94:	add	x0, x5, #0x1
   27a98:	asr	x19, x19, #6
   27a9c:	neg	w21, w21
   27aa0:	cmp	x0, x1, asr #6
   27aa4:	and	w21, w21, #0x3f
   27aa8:	asr	x1, x1, #6
   27aac:	add	x22, x19, #0x1
   27ab0:	ldr	x20, [x23, #24]
   27ab4:	b.gt	27ba8 <mpfr_rint@@Base+0x1c0>
   27ab8:	mov	x6, x0
   27abc:	mov	w3, #0x0                   	// #0
   27ac0:	mov	w7, #0x0                   	// #0
   27ac4:	cmp	x6, x22
   27ac8:	b.le	27bd4 <mpfr_rint@@Base+0x1ec>
   27acc:	sub	x19, x5, x19
   27ad0:	add	x1, x24, x19, lsl #3
   27ad4:	cmp	x1, x20
   27ad8:	b.eq	27af8 <mpfr_rint@@Base+0x110>  // b.none
   27adc:	lsl	x2, x22, #3
   27ae0:	mov	x0, x20
   27ae4:	str	x1, [sp, #104]
   27ae8:	str	w3, [sp, #112]
   27aec:	bl	ba10 <memcpy@plt>
   27af0:	ldr	w3, [sp, #112]
   27af4:	ldr	x1, [sp, #104]
   27af8:	cmn	w28, #0x1
   27afc:	b.eq	27d54 <mpfr_rint@@Base+0x36c>  // b.none
   27b00:	cbnz	w3, 27d9c <mpfr_rint@@Base+0x3b4>
   27b04:	cbz	w21, 27d78 <mpfr_rint@@Base+0x390>
   27b08:	ldr	x2, [x20]
   27b0c:	neg	w0, w21
   27b10:	lsl	x0, x2, x0
   27b14:	cbz	x0, 27f78 <mpfr_rint@@Base+0x590>
   27b18:	mov	x0, #0xffffffffffffffff    	// #-1
   27b1c:	mov	w3, #0x1                   	// #1
   27b20:	lsl	x0, x0, x21
   27b24:	and	x2, x0, x2
   27b28:	str	x2, [x20]
   27b2c:	nop
   27b30:	cbz	w28, 27dc0 <mpfr_rint@@Base+0x3d8>
   27b34:	ldr	x0, [x20]
   27b38:	mov	x28, #0x1                   	// #1
   27b3c:	lsl	x21, x28, x21
   27b40:	adds	x21, x21, x0
   27b44:	str	x21, [x20]
   27b48:	b.cc	27dc0 <mpfr_rint@@Base+0x3d8>  // b.lo, b.ul, b.last
   27b4c:	add	x22, x20, x22, lsl #3
   27b50:	add	x4, x20, #0x8
   27b54:	b	27b68 <mpfr_rint@@Base+0x180>
   27b58:	ldr	x1, [x4]
   27b5c:	add	x1, x1, #0x1
   27b60:	str	x1, [x4], #8
   27b64:	cbnz	x1, 27dbc <mpfr_rint@@Base+0x3d4>
   27b68:	cmp	x4, x22
   27b6c:	b.ne	27b58 <mpfr_rint@@Base+0x170>  // b.any
   27b70:	mrs	x1, tpidr_el0
   27b74:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   27b78:	ldr	x2, [x0, #2544]
   27b7c:	add	x0, x0, #0x9f0
   27b80:	blr	x2
   27b84:	ldr	x0, [x1, x0]
   27b88:	cmp	x25, x0
   27b8c:	b.eq	28140 <mpfr_rint@@Base+0x758>  // b.none
   27b90:	add	x25, x25, #0x1
   27b94:	str	x25, [x23, #16]
   27b98:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   27b9c:	mov	w28, #0x1                   	// #1
   27ba0:	stur	x0, [x4, #-8]
   27ba4:	b	27dc4 <mpfr_rint@@Base+0x3dc>
   27ba8:	and	x2, x25, #0x3f
   27bac:	add	x6, x1, #0x1
   27bb0:	mov	w7, w2
   27bb4:	sub	x1, x5, x1
   27bb8:	cbz	x2, 27d40 <mpfr_rint@@Base+0x358>
   27bbc:	ldr	x3, [x24, x1, lsl #3]
   27bc0:	lsl	x2, x3, x2
   27bc4:	cbz	x2, 27d40 <mpfr_rint@@Base+0x358>
   27bc8:	cmp	x6, x22
   27bcc:	mov	w3, #0x2                   	// #2
   27bd0:	b.gt	27acc <mpfr_rint@@Base+0xe4>
   27bd4:	sub	x22, x22, x6
   27bd8:	sub	x4, x0, x6
   27bdc:	cmp	x24, x20
   27be0:	lsl	x5, x22, #3
   27be4:	add	x19, x20, x5
   27be8:	b.eq	27c24 <mpfr_rint@@Base+0x23c>  // b.none
   27bec:	add	x1, x24, x4, lsl #3
   27bf0:	cmp	x1, x19
   27bf4:	b.eq	27c24 <mpfr_rint@@Base+0x23c>  // b.none
   27bf8:	lsl	x2, x6, #3
   27bfc:	mov	x0, x19
   27c00:	str	x6, [sp, #104]
   27c04:	str	w7, [sp, #112]
   27c08:	stp	x5, x4, [sp, #120]
   27c0c:	str	w3, [sp, #140]
   27c10:	bl	ba10 <memcpy@plt>
   27c14:	ldp	x5, x4, [sp, #120]
   27c18:	ldr	w7, [sp, #112]
   27c1c:	ldr	w3, [sp, #140]
   27c20:	ldr	x6, [sp, #104]
   27c24:	cmp	w7, #0x0
   27c28:	mov	w0, #0x40                  	// #64
   27c2c:	sub	w0, w0, w7
   27c30:	csel	w7, w0, w7, ne  // ne = any
   27c34:	cmp	x22, #0x0
   27c38:	ccmp	w7, w21, #0x0, eq  // eq = none
   27c3c:	b.ge	27e0c <mpfr_rint@@Base+0x424>  // b.tcont
   27c40:	cbnz	w3, 27c60 <mpfr_rint@@Base+0x278>
   27c44:	ldr	x1, [x19]
   27c48:	mov	x0, #0x1                   	// #1
   27c4c:	lsl	x7, x0, x7
   27c50:	lsl	x0, x0, x21
   27c54:	sub	x0, x0, x7
   27c58:	tst	x0, x1
   27c5c:	cset	w3, ne  // ne = any
   27c60:	cmn	w28, #0x1
   27c64:	b.ne	27e64 <mpfr_rint@@Base+0x47c>  // b.any
   27c68:	mov	w1, #0x0                   	// #0
   27c6c:	cbnz	w27, 27e54 <mpfr_rint@@Base+0x46c>
   27c70:	ldr	x0, [x19]
   27c74:	lsr	x2, x0, x21
   27c78:	tbnz	w2, #0, 28024 <mpfr_rint@@Base+0x63c>
   27c7c:	cbz	w21, 280e8 <mpfr_rint@@Base+0x700>
   27c80:	sub	w8, w21, #0x1
   27c84:	mov	x2, #0xffffffffffffffff    	// #-1
   27c88:	lsl	x2, x2, x21
   27c8c:	mov	x7, #0x1                   	// #1
   27c90:	bic	x0, x0, x2
   27c94:	lsl	x2, x7, x8
   27c98:	cmp	x0, x2
   27c9c:	cset	w28, hi  // hi = pmore
   27ca0:	b.ne	27e64 <mpfr_rint@@Base+0x47c>  // b.any
   27ca4:	sub	x0, x4, #0x1
   27ca8:	and	x1, x1, #0xff
   27cac:	subs	x0, x0, x1
   27cb0:	b.pl	27cbc <mpfr_rint@@Base+0x2d4>  // b.nfrst
   27cb4:	b	2806c <mpfr_rint@@Base+0x684>
   27cb8:	b.eq	28138 <mpfr_rint@@Base+0x750>  // b.none
   27cbc:	ldr	x1, [x24, x0, lsl #3]
   27cc0:	sub	x0, x0, #0x1
   27cc4:	cmn	x0, #0x1
   27cc8:	cbz	x1, 27cb8 <mpfr_rint@@Base+0x2d0>
   27ccc:	mov	w7, w21
   27cd0:	mov	w28, #0x1                   	// #1
   27cd4:	nop
   27cd8:	mov	x2, x5
   27cdc:	mov	x0, x20
   27ce0:	mov	w1, #0x0                   	// #0
   27ce4:	str	x6, [sp, #104]
   27ce8:	str	w7, [sp, #112]
   27cec:	str	w3, [sp, #120]
   27cf0:	bl	c110 <memset@plt>
   27cf4:	ldr	w7, [sp, #112]
   27cf8:	ldr	w3, [sp, #120]
   27cfc:	ldr	x6, [sp, #104]
   27d00:	cbnz	w7, 28098 <mpfr_rint@@Base+0x6b0>
   27d04:	mov	x22, x6
   27d08:	mov	x20, x19
   27d0c:	mov	w21, #0x0                   	// #0
   27d10:	cbnz	w3, 27b30 <mpfr_rint@@Base+0x148>
   27d14:	mov	w3, #0x0                   	// #0
   27d18:	mov	w0, w3
   27d1c:	ldp	x19, x20, [sp, #16]
   27d20:	ldp	x21, x22, [sp, #32]
   27d24:	ldp	x23, x24, [sp, #48]
   27d28:	ldp	x25, x26, [sp, #64]
   27d2c:	ldp	x27, x28, [sp, #80]
   27d30:	ldp	x29, x30, [sp], #144
   27d34:	ret
   27d38:	ldr	x4, [x24, x1, lsl #3]
   27d3c:	cbnz	x4, 27bc8 <mpfr_rint@@Base+0x1e0>
   27d40:	cmp	x1, #0x0
   27d44:	sub	x1, x1, #0x1
   27d48:	b.gt	27d38 <mpfr_rint@@Base+0x350>
   27d4c:	mov	w3, #0x0                   	// #0
   27d50:	b	27ac4 <mpfr_rint@@Base+0xdc>
   27d54:	cbnz	w27, 27d64 <mpfr_rint@@Base+0x37c>
   27d58:	ldr	x2, [x20]
   27d5c:	lsr	x0, x2, x21
   27d60:	tbz	w0, #0, 27fbc <mpfr_rint@@Base+0x5d4>
   27d64:	cbnz	w21, 27f9c <mpfr_rint@@Base+0x5b4>
   27d68:	ldur	x0, [x1, #-8]
   27d6c:	tbz	x0, #63, 28044 <mpfr_rint@@Base+0x65c>
   27d70:	cbnz	w3, 27b34 <mpfr_rint@@Base+0x14c>
   27d74:	mov	w28, #0x1                   	// #1
   27d78:	subs	x5, x19, #0x1
   27d7c:	b.pl	27d88 <mpfr_rint@@Base+0x3a0>  // b.nfrst
   27d80:	b	27d14 <mpfr_rint@@Base+0x32c>
   27d84:	b.eq	27f80 <mpfr_rint@@Base+0x598>  // b.none
   27d88:	ldr	x0, [x24, x5, lsl #3]
   27d8c:	sub	x5, x5, #0x1
   27d90:	cmn	x5, #0x1
   27d94:	cbz	x0, 27d84 <mpfr_rint@@Base+0x39c>
   27d98:	mov	w3, #0x1                   	// #1
   27d9c:	cbz	w21, 27b30 <mpfr_rint@@Base+0x148>
   27da0:	ldr	x2, [x20]
   27da4:	mov	x1, x2
   27da8:	mov	x0, #0xffffffffffffffff    	// #-1
   27dac:	lsl	x0, x0, x21
   27db0:	and	x0, x0, x1
   27db4:	str	x0, [x20]
   27db8:	b	27d10 <mpfr_rint@@Base+0x328>
   27dbc:	mov	w28, #0x1                   	// #1
   27dc0:	mrs	x1, tpidr_el0
   27dc4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   27dc8:	ldr	x2, [x0, #2576]
   27dcc:	add	x0, x0, #0xa10
   27dd0:	blr	x2
   27dd4:	add	x0, x1, x0
   27dd8:	cmp	w28, w26, lsr #31
   27ddc:	cneg	w3, w3, eq  // eq = none
   27de0:	ldr	w1, [x0]
   27de4:	ldp	x19, x20, [sp, #16]
   27de8:	orr	w1, w1, #0x8
   27dec:	ldp	x21, x22, [sp, #32]
   27df0:	ldp	x27, x28, [sp, #80]
   27df4:	str	w1, [x0]
   27df8:	mov	w0, w3
   27dfc:	ldp	x23, x24, [sp, #48]
   27e00:	ldp	x25, x26, [sp, #64]
   27e04:	ldp	x29, x30, [sp], #144
   27e08:	ret
   27e0c:	cmn	w28, #0x1
   27e10:	b.ne	27cd8 <mpfr_rint@@Base+0x2f0>  // b.any
   27e14:	cmp	w7, #0x0
   27e18:	mov	w28, #0x0                   	// #0
   27e1c:	cset	w1, eq  // eq = none
   27e20:	cmp	x4, #0x0
   27e24:	ccmp	w1, #0x0, #0x4, eq  // eq = none
   27e28:	b.eq	2801c <mpfr_rint@@Base+0x634>  // b.none
   27e2c:	mov	x0, x20
   27e30:	mov	x2, x5
   27e34:	mov	x22, x6
   27e38:	mov	w1, #0x0                   	// #0
   27e3c:	str	w3, [sp, #104]
   27e40:	bl	c110 <memset@plt>
   27e44:	ldr	w3, [sp, #104]
   27e48:	mov	x20, x19
   27e4c:	mov	w21, #0x0                   	// #0
   27e50:	b	27d10 <mpfr_rint@@Base+0x328>
   27e54:	ldr	x28, [x19]
   27e58:	sub	w0, w21, #0x1
   27e5c:	lsr	x28, x28, x0
   27e60:	and	w28, w28, #0x1
   27e64:	mov	x2, x5
   27e68:	mov	x0, x20
   27e6c:	mov	w1, #0x0                   	// #0
   27e70:	str	x6, [sp, #104]
   27e74:	str	w3, [sp, #112]
   27e78:	bl	c110 <memset@plt>
   27e7c:	ldr	w3, [sp, #112]
   27e80:	ldr	x6, [sp, #104]
   27e84:	mov	x22, x6
   27e88:	mov	x20, x19
   27e8c:	ldr	x1, [x19]
   27e90:	b	27da8 <mpfr_rint@@Base+0x3c0>
   27e94:	cmp	x25, #0x0
   27e98:	mov	w28, #0x1                   	// #1
   27e9c:	b.gt	27a6c <mpfr_rint@@Base+0x84>
   27ea0:	sxtw	x1, w26
   27ea4:	mov	x2, #0x0                   	// #0
   27ea8:	mov	w3, w27
   27eac:	mov	x0, x23
   27eb0:	bl	ba80 <mpfr_set_si_2exp@plt>
   27eb4:	mrs	x1, tpidr_el0
   27eb8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   27ebc:	ldr	x2, [x0, #2576]
   27ec0:	add	x0, x0, #0xa10
   27ec4:	blr	x2
   27ec8:	add	x0, x1, x0
   27ecc:	cmp	w26, #0x0
   27ed0:	ldr	w1, [x0]
   27ed4:	orr	w1, w1, #0x8
   27ed8:	str	w1, [x0]
   27edc:	b.le	27f24 <mpfr_rint@@Base+0x53c>
   27ee0:	mov	w3, #0x2                   	// #2
   27ee4:	ldp	x27, x28, [sp, #80]
   27ee8:	b	27df8 <mpfr_rint@@Base+0x410>
   27eec:	cbnz	w28, 27ea0 <mpfr_rint@@Base+0x4b8>
   27ef0:	mrs	x1, tpidr_el0
   27ef4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   27ef8:	ldr	x2, [x0, #2576]
   27efc:	add	x0, x0, #0xa10
   27f00:	blr	x2
   27f04:	add	x0, x1, x0
   27f08:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   27f0c:	str	x1, [x23, #16]
   27f10:	cmp	w26, #0x0
   27f14:	ldr	w1, [x0]
   27f18:	orr	w1, w1, #0x8
   27f1c:	str	w1, [x0]
   27f20:	b.le	27ee0 <mpfr_rint@@Base+0x4f8>
   27f24:	mov	w3, #0xfffffffe            	// #-2
   27f28:	ldp	x27, x28, [sp, #80]
   27f2c:	b	27df8 <mpfr_rint@@Base+0x410>
   27f30:	cmp	x25, #0x0
   27f34:	b.le	27ef0 <mpfr_rint@@Base+0x508>
   27f38:	mov	w28, #0x0                   	// #0
   27f3c:	stp	x19, x20, [sp, #16]
   27f40:	stp	x21, x22, [sp, #32]
   27f44:	b	27a74 <mpfr_rint@@Base+0x8c>
   27f48:	mov	x1, #0x2                   	// #2
   27f4c:	movk	x1, #0x8000, lsl #48
   27f50:	cmp	x25, x1
   27f54:	b.eq	280ac <mpfr_rint@@Base+0x6c4>  // b.none
   27f58:	ldr	w1, [x4, #8]
   27f5c:	cmp	x25, x0
   27f60:	str	w1, [x23, #8]
   27f64:	b.eq	280a0 <mpfr_rint@@Base+0x6b8>  // b.none
   27f68:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   27f6c:	mov	w3, #0x0                   	// #0
   27f70:	str	x0, [x23, #16]
   27f74:	b	27df8 <mpfr_rint@@Base+0x410>
   27f78:	subs	x5, x19, #0x1
   27f7c:	b.pl	27d88 <mpfr_rint@@Base+0x3a0>  // b.nfrst
   27f80:	cbz	w21, 27d14 <mpfr_rint@@Base+0x32c>
   27f84:	ldr	x0, [x20]
   27f88:	mov	x1, #0xffffffffffffffff    	// #-1
   27f8c:	lsl	x21, x1, x21
   27f90:	and	x0, x0, x21
   27f94:	str	x0, [x20]
   27f98:	b	27d14 <mpfr_rint@@Base+0x32c>
   27f9c:	ldr	x2, [x20]
   27fa0:	sub	w0, w21, #0x1
   27fa4:	mov	x1, x2
   27fa8:	lsr	x0, x2, x0
   27fac:	tbz	w0, #0, 28038 <mpfr_rint@@Base+0x650>
   27fb0:	mov	w28, #0x1                   	// #1
   27fb4:	cbz	w3, 27b0c <mpfr_rint@@Base+0x124>
   27fb8:	b	27da8 <mpfr_rint@@Base+0x3c0>
   27fbc:	cbz	w21, 280dc <mpfr_rint@@Base+0x6f4>
   27fc0:	sub	w4, w21, #0x1
   27fc4:	mov	x0, #0xffffffffffffffff    	// #-1
   27fc8:	mov	x1, #0x1                   	// #1
   27fcc:	lsl	x0, x0, x21
   27fd0:	bic	x2, x2, x0
   27fd4:	lsl	x1, x1, x4
   27fd8:	cmp	x2, x1
   27fdc:	cset	w28, hi  // hi = pmore
   27fe0:	b.ne	27b00 <mpfr_rint@@Base+0x118>  // b.any
   27fe4:	cmp	w21, #0x0
   27fe8:	sub	x0, x19, #0x1
   27fec:	cset	x1, eq  // eq = none
   27ff0:	subs	x0, x0, x1
   27ff4:	b.pl	28000 <mpfr_rint@@Base+0x618>  // b.nfrst
   27ff8:	b	27b00 <mpfr_rint@@Base+0x118>
   27ffc:	b.eq	27b00 <mpfr_rint@@Base+0x118>  // b.none
   28000:	ldr	x1, [x24, x0, lsl #3]
   28004:	sub	x0, x0, #0x1
   28008:	cmn	x0, #0x1
   2800c:	cbz	x1, 27ffc <mpfr_rint@@Base+0x614>
   28010:	mov	w28, #0x1                   	// #1
   28014:	cbz	w3, 27b04 <mpfr_rint@@Base+0x11c>
   28018:	b	27d9c <mpfr_rint@@Base+0x3b4>
   2801c:	mov	w21, w7
   28020:	cbz	w27, 27c70 <mpfr_rint@@Base+0x288>
   28024:	cbnz	w21, 27e54 <mpfr_rint@@Base+0x46c>
   28028:	add	x0, x24, x4, lsl #3
   2802c:	ldur	x28, [x0, #-8]
   28030:	lsr	x28, x28, #63
   28034:	b	27e2c <mpfr_rint@@Base+0x444>
   28038:	mov	w28, #0x0                   	// #0
   2803c:	cbz	w3, 27b0c <mpfr_rint@@Base+0x124>
   28040:	b	27da4 <mpfr_rint@@Base+0x3bc>
   28044:	mov	w28, #0x0                   	// #0
   28048:	cbnz	w3, 27dc0 <mpfr_rint@@Base+0x3d8>
   2804c:	b	27d78 <mpfr_rint@@Base+0x390>
   28050:	b.ne	27ef0 <mpfr_rint@@Base+0x508>  // b.any
   28054:	cmn	w2, #0x1
   28058:	b.eq	27ea0 <mpfr_rint@@Base+0x4b8>  // b.none
   2805c:	mov	x0, x1
   28060:	bl	bf00 <mpfr_powerof2_raw@plt>
   28064:	cbz	w0, 27ea0 <mpfr_rint@@Base+0x4b8>
   28068:	b	27ef0 <mpfr_rint@@Base+0x508>
   2806c:	mov	x2, x5
   28070:	mov	x0, x20
   28074:	mov	w1, #0x0                   	// #0
   28078:	str	w21, [sp, #104]
   2807c:	str	x6, [sp, #112]
   28080:	str	w3, [sp, #120]
   28084:	bl	c110 <memset@plt>
   28088:	ldr	w7, [sp, #104]
   2808c:	ldr	w3, [sp, #120]
   28090:	ldr	x6, [sp, #112]
   28094:	nop
   28098:	mov	w21, w7
   2809c:	b	27e84 <mpfr_rint@@Base+0x49c>
   280a0:	mov	w3, #0x0                   	// #0
   280a4:	str	x25, [x23, #16]
   280a8:	b	27df8 <mpfr_rint@@Base+0x410>
   280ac:	mrs	x1, tpidr_el0
   280b0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   280b4:	ldr	x2, [x0, #2576]
   280b8:	add	x0, x0, #0xa10
   280bc:	blr	x2
   280c0:	add	x0, x1, x0
   280c4:	mov	w3, #0x0                   	// #0
   280c8:	str	x25, [x23, #16]
   280cc:	ldr	w1, [x0]
   280d0:	orr	w1, w1, #0x4
   280d4:	str	w1, [x0]
   280d8:	b	27df8 <mpfr_rint@@Base+0x410>
   280dc:	ldur	x2, [x1, #-8]
   280e0:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   280e4:	b	27fd8 <mpfr_rint@@Base+0x5f0>
   280e8:	add	x0, x24, x4, lsl #3
   280ec:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   280f0:	ldur	x0, [x0, #-8]
   280f4:	cmp	x0, x2
   280f8:	cset	w28, hi  // hi = pmore
   280fc:	b.eq	28124 <mpfr_rint@@Base+0x73c>  // b.none
   28100:	mov	x0, x20
   28104:	mov	x2, x5
   28108:	mov	x22, x6
   2810c:	mov	w1, #0x0                   	// #0
   28110:	str	w3, [sp, #104]
   28114:	bl	c110 <memset@plt>
   28118:	ldr	w3, [sp, #104]
   2811c:	mov	x20, x19
   28120:	b	27d10 <mpfr_rint@@Base+0x328>
   28124:	sub	x0, x4, #0x1
   28128:	and	x1, x1, #0xff
   2812c:	subs	x0, x0, x1
   28130:	b.pl	27cbc <mpfr_rint@@Base+0x2d4>  // b.nfrst
   28134:	b	28100 <mpfr_rint@@Base+0x718>
   28138:	mov	w7, w21
   2813c:	b	27cd8 <mpfr_rint@@Base+0x2f0>
   28140:	mov	w2, w26
   28144:	mov	w1, w27
   28148:	mov	x0, x23
   2814c:	str	w3, [sp, #104]
   28150:	bl	bf40 <mpfr_overflow@plt>
   28154:	ldr	w3, [sp, #104]
   28158:	tbz	w0, #31, 28170 <mpfr_rint@@Base+0x788>
   2815c:	neg	w3, w3
   28160:	ldp	x19, x20, [sp, #16]
   28164:	ldp	x21, x22, [sp, #32]
   28168:	ldp	x27, x28, [sp, #80]
   2816c:	b	27df8 <mpfr_rint@@Base+0x410>
   28170:	ldp	x19, x20, [sp, #16]
   28174:	ldp	x21, x22, [sp, #32]
   28178:	ldp	x27, x28, [sp, #80]
   2817c:	b	27df8 <mpfr_rint@@Base+0x410>

0000000000028180 <mpfr_roundeven@@Base>:
   28180:	mov	w2, #0x0                   	// #0
   28184:	b	c300 <mpfr_rint@plt>

0000000000028188 <mpfr_round@@Base>:
   28188:	mov	w2, #0xffffffff            	// #-1
   2818c:	b	c300 <mpfr_rint@plt>

0000000000028190 <mpfr_trunc@@Base>:
   28190:	mov	w2, #0x1                   	// #1
   28194:	b	c300 <mpfr_rint@plt>

0000000000028198 <mpfr_ceil@@Base>:
   28198:	mov	w2, #0x2                   	// #2
   2819c:	b	c300 <mpfr_rint@plt>

00000000000281a0 <mpfr_floor@@Base>:
   281a0:	mov	w2, #0x3                   	// #3
   281a4:	b	c300 <mpfr_rint@plt>

00000000000281a8 <mpfr_rint_roundeven@@Base>:
   281a8:	stp	x29, x30, [sp, #-96]!
   281ac:	mov	x29, sp
   281b0:	stp	x19, x20, [sp, #16]
   281b4:	mov	x19, x1
   281b8:	mov	x20, x0
   281bc:	ldr	x1, [x1, #16]
   281c0:	stp	x21, x22, [sp, #32]
   281c4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   281c8:	mov	w21, w2
   281cc:	cmp	x1, x0
   281d0:	b.le	281e0 <mpfr_rint_roundeven@@Base+0x38>
   281d4:	mov	x0, x19
   281d8:	bl	c160 <mpfr_integer_p@plt>
   281dc:	cbz	w0, 2820c <mpfr_rint_roundeven@@Base+0x64>
   281e0:	ldr	w3, [x19, #8]
   281e4:	mov	w2, w21
   281e8:	mov	x1, x19
   281ec:	mov	x0, x20
   281f0:	bl	c6a0 <mpfr_set4@plt>
   281f4:	mov	w19, w0
   281f8:	mov	w0, w19
   281fc:	ldp	x19, x20, [sp, #16]
   28200:	ldp	x21, x22, [sp, #32]
   28204:	ldp	x29, x30, [sp], #96
   28208:	ret
   2820c:	ldr	x1, [x19]
   28210:	mrs	x2, tpidr_el0
   28214:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   28218:	ldr	x3, [x0, #2576]
   2821c:	add	x0, x0, #0xa10
   28220:	blr	x3
   28224:	stp	x23, x24, [sp, #48]
   28228:	add	x23, x2, x0
   2822c:	add	x22, sp, #0x40
   28230:	ldr	w24, [x2, x0]
   28234:	mov	x0, x22
   28238:	bl	ca80 <mpfr_init2@plt>
   2823c:	mov	x0, x22
   28240:	mov	x1, x19
   28244:	str	wzr, [x23]
   28248:	bl	c280 <mpfr_roundeven@plt>
   2824c:	ldr	w0, [x23]
   28250:	str	w24, [x23]
   28254:	tbnz	w0, #1, 28290 <mpfr_rint_roundeven@@Base+0xe8>
   28258:	ldr	w3, [sp, #72]
   2825c:	mov	w2, w21
   28260:	mov	x0, x20
   28264:	mov	x1, x22
   28268:	bl	c6a0 <mpfr_set4@plt>
   2826c:	mov	w19, w0
   28270:	mov	x0, x22
   28274:	bl	c070 <mpfr_clear@plt>
   28278:	mov	w0, w19
   2827c:	ldp	x19, x20, [sp, #16]
   28280:	ldp	x21, x22, [sp, #32]
   28284:	ldp	x23, x24, [sp, #48]
   28288:	ldp	x29, x30, [sp], #96
   2828c:	ret
   28290:	ldr	w2, [x19, #8]
   28294:	mov	w1, w21
   28298:	mov	x0, x20
   2829c:	bl	bf40 <mpfr_overflow@plt>
   282a0:	mov	w19, w0
   282a4:	b	28270 <mpfr_rint_roundeven@@Base+0xc8>

00000000000282a8 <mpfr_rint_round@@Base>:
   282a8:	stp	x29, x30, [sp, #-96]!
   282ac:	mov	x29, sp
   282b0:	stp	x19, x20, [sp, #16]
   282b4:	mov	x19, x1
   282b8:	mov	x20, x0
   282bc:	ldr	x1, [x1, #16]
   282c0:	stp	x21, x22, [sp, #32]
   282c4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   282c8:	mov	w21, w2
   282cc:	cmp	x1, x0
   282d0:	b.le	282e0 <mpfr_rint_round@@Base+0x38>
   282d4:	mov	x0, x19
   282d8:	bl	c160 <mpfr_integer_p@plt>
   282dc:	cbz	w0, 2830c <mpfr_rint_round@@Base+0x64>
   282e0:	ldr	w3, [x19, #8]
   282e4:	mov	w2, w21
   282e8:	mov	x1, x19
   282ec:	mov	x0, x20
   282f0:	bl	c6a0 <mpfr_set4@plt>
   282f4:	mov	w19, w0
   282f8:	mov	w0, w19
   282fc:	ldp	x19, x20, [sp, #16]
   28300:	ldp	x21, x22, [sp, #32]
   28304:	ldp	x29, x30, [sp], #96
   28308:	ret
   2830c:	ldr	x1, [x19]
   28310:	mrs	x2, tpidr_el0
   28314:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   28318:	ldr	x3, [x0, #2576]
   2831c:	add	x0, x0, #0xa10
   28320:	blr	x3
   28324:	stp	x23, x24, [sp, #48]
   28328:	add	x23, x2, x0
   2832c:	add	x22, sp, #0x40
   28330:	ldr	w24, [x2, x0]
   28334:	mov	x0, x22
   28338:	bl	ca80 <mpfr_init2@plt>
   2833c:	mov	x0, x22
   28340:	mov	x1, x19
   28344:	str	wzr, [x23]
   28348:	bl	c220 <mpfr_round@plt>
   2834c:	ldr	w0, [x23]
   28350:	str	w24, [x23]
   28354:	tbnz	w0, #1, 28390 <mpfr_rint_round@@Base+0xe8>
   28358:	ldr	w3, [sp, #72]
   2835c:	mov	w2, w21
   28360:	mov	x0, x20
   28364:	mov	x1, x22
   28368:	bl	c6a0 <mpfr_set4@plt>
   2836c:	mov	w19, w0
   28370:	mov	x0, x22
   28374:	bl	c070 <mpfr_clear@plt>
   28378:	mov	w0, w19
   2837c:	ldp	x19, x20, [sp, #16]
   28380:	ldp	x21, x22, [sp, #32]
   28384:	ldp	x23, x24, [sp, #48]
   28388:	ldp	x29, x30, [sp], #96
   2838c:	ret
   28390:	ldr	w2, [x19, #8]
   28394:	mov	w1, w21
   28398:	mov	x0, x20
   2839c:	bl	bf40 <mpfr_overflow@plt>
   283a0:	mov	w19, w0
   283a4:	b	28370 <mpfr_rint_round@@Base+0xc8>

00000000000283a8 <mpfr_rint_trunc@@Base>:
   283a8:	stp	x29, x30, [sp, #-96]!
   283ac:	mov	x29, sp
   283b0:	stp	x19, x20, [sp, #16]
   283b4:	mov	x19, x1
   283b8:	mov	x20, x0
   283bc:	ldr	x1, [x1, #16]
   283c0:	stp	x21, x22, [sp, #32]
   283c4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   283c8:	mov	w21, w2
   283cc:	cmp	x1, x0
   283d0:	b.le	283e0 <mpfr_rint_trunc@@Base+0x38>
   283d4:	mov	x0, x19
   283d8:	bl	c160 <mpfr_integer_p@plt>
   283dc:	cbz	w0, 2840c <mpfr_rint_trunc@@Base+0x64>
   283e0:	ldr	w3, [x19, #8]
   283e4:	mov	w2, w21
   283e8:	mov	x1, x19
   283ec:	mov	x0, x20
   283f0:	bl	c6a0 <mpfr_set4@plt>
   283f4:	mov	w19, w0
   283f8:	mov	w0, w19
   283fc:	ldp	x19, x20, [sp, #16]
   28400:	ldp	x21, x22, [sp, #32]
   28404:	ldp	x29, x30, [sp], #96
   28408:	ret
   2840c:	ldr	x1, [x19]
   28410:	mrs	x2, tpidr_el0
   28414:	add	x22, sp, #0x40
   28418:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2841c:	ldr	x3, [x0, #2576]
   28420:	add	x0, x0, #0xa10
   28424:	blr	x3
   28428:	stp	x23, x24, [sp, #48]
   2842c:	add	x23, x2, x0
   28430:	ldr	w24, [x2, x0]
   28434:	mov	x0, x22
   28438:	bl	ca80 <mpfr_init2@plt>
   2843c:	mov	x1, x19
   28440:	mov	x0, x22
   28444:	bl	c3f0 <mpfr_trunc@plt>
   28448:	str	w24, [x23]
   2844c:	ldr	w3, [sp, #72]
   28450:	mov	w2, w21
   28454:	mov	x1, x22
   28458:	mov	x0, x20
   2845c:	bl	c6a0 <mpfr_set4@plt>
   28460:	mov	w19, w0
   28464:	mov	x0, x22
   28468:	bl	c070 <mpfr_clear@plt>
   2846c:	mov	w0, w19
   28470:	ldp	x19, x20, [sp, #16]
   28474:	ldp	x21, x22, [sp, #32]
   28478:	ldp	x23, x24, [sp, #48]
   2847c:	ldp	x29, x30, [sp], #96
   28480:	ret
   28484:	nop

0000000000028488 <mpfr_rint_ceil@@Base>:
   28488:	stp	x29, x30, [sp, #-96]!
   2848c:	mov	x29, sp
   28490:	stp	x19, x20, [sp, #16]
   28494:	mov	x19, x1
   28498:	mov	x20, x0
   2849c:	ldr	x1, [x1, #16]
   284a0:	stp	x21, x22, [sp, #32]
   284a4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   284a8:	mov	w21, w2
   284ac:	cmp	x1, x0
   284b0:	b.le	284c0 <mpfr_rint_ceil@@Base+0x38>
   284b4:	mov	x0, x19
   284b8:	bl	c160 <mpfr_integer_p@plt>
   284bc:	cbz	w0, 284ec <mpfr_rint_ceil@@Base+0x64>
   284c0:	ldr	w3, [x19, #8]
   284c4:	mov	w2, w21
   284c8:	mov	x1, x19
   284cc:	mov	x0, x20
   284d0:	bl	c6a0 <mpfr_set4@plt>
   284d4:	mov	w19, w0
   284d8:	mov	w0, w19
   284dc:	ldp	x19, x20, [sp, #16]
   284e0:	ldp	x21, x22, [sp, #32]
   284e4:	ldp	x29, x30, [sp], #96
   284e8:	ret
   284ec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   284f0:	ldr	x3, [x0, #2576]
   284f4:	add	x0, x0, #0xa10
   284f8:	blr	x3
   284fc:	mrs	x2, tpidr_el0
   28500:	ldr	x1, [x19]
   28504:	add	x3, sp, #0x40
   28508:	add	x22, x2, x0
   2850c:	stp	x23, x24, [sp, #48]
   28510:	ldr	w23, [x2, x0]
   28514:	mov	x24, x3
   28518:	mov	x0, x3
   2851c:	bl	ca80 <mpfr_init2@plt>
   28520:	str	wzr, [x22]
   28524:	mov	x1, x19
   28528:	mov	x0, x24
   2852c:	bl	c980 <mpfr_ceil@plt>
   28530:	ldr	w0, [x22]
   28534:	str	w23, [x22]
   28538:	tbnz	w0, #1, 28574 <mpfr_rint_ceil@@Base+0xec>
   2853c:	ldr	w3, [sp, #72]
   28540:	mov	w2, w21
   28544:	mov	x0, x20
   28548:	mov	x1, x24
   2854c:	bl	c6a0 <mpfr_set4@plt>
   28550:	mov	w19, w0
   28554:	mov	x0, x24
   28558:	bl	c070 <mpfr_clear@plt>
   2855c:	mov	w0, w19
   28560:	ldp	x19, x20, [sp, #16]
   28564:	ldp	x21, x22, [sp, #32]
   28568:	ldp	x23, x24, [sp, #48]
   2856c:	ldp	x29, x30, [sp], #96
   28570:	ret
   28574:	mov	w1, w21
   28578:	mov	x0, x20
   2857c:	mov	w2, #0x1                   	// #1
   28580:	bl	bf40 <mpfr_overflow@plt>
   28584:	mov	w19, w0
   28588:	b	28554 <mpfr_rint_ceil@@Base+0xcc>
   2858c:	nop

0000000000028590 <mpfr_rint_floor@@Base>:
   28590:	stp	x29, x30, [sp, #-96]!
   28594:	mov	x29, sp
   28598:	stp	x19, x20, [sp, #16]
   2859c:	mov	x19, x1
   285a0:	mov	x20, x0
   285a4:	ldr	x1, [x1, #16]
   285a8:	stp	x21, x22, [sp, #32]
   285ac:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   285b0:	mov	w21, w2
   285b4:	cmp	x1, x0
   285b8:	b.le	285c8 <mpfr_rint_floor@@Base+0x38>
   285bc:	mov	x0, x19
   285c0:	bl	c160 <mpfr_integer_p@plt>
   285c4:	cbz	w0, 285f4 <mpfr_rint_floor@@Base+0x64>
   285c8:	ldr	w3, [x19, #8]
   285cc:	mov	w2, w21
   285d0:	mov	x1, x19
   285d4:	mov	x0, x20
   285d8:	bl	c6a0 <mpfr_set4@plt>
   285dc:	mov	w19, w0
   285e0:	mov	w0, w19
   285e4:	ldp	x19, x20, [sp, #16]
   285e8:	ldp	x21, x22, [sp, #32]
   285ec:	ldp	x29, x30, [sp], #96
   285f0:	ret
   285f4:	ldr	x1, [x19]
   285f8:	mrs	x2, tpidr_el0
   285fc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   28600:	ldr	x3, [x0, #2576]
   28604:	add	x0, x0, #0xa10
   28608:	blr	x3
   2860c:	stp	x23, x24, [sp, #48]
   28610:	add	x23, x2, x0
   28614:	add	x22, sp, #0x40
   28618:	ldr	w24, [x2, x0]
   2861c:	mov	x0, x22
   28620:	bl	ca80 <mpfr_init2@plt>
   28624:	mov	x1, x19
   28628:	mov	x0, x22
   2862c:	str	wzr, [x23]
   28630:	bl	c210 <mpfr_floor@plt>
   28634:	ldr	w0, [x23]
   28638:	str	w24, [x23]
   2863c:	tbnz	w0, #1, 28678 <mpfr_rint_floor@@Base+0xe8>
   28640:	ldr	w3, [sp, #72]
   28644:	mov	w2, w21
   28648:	mov	x0, x20
   2864c:	mov	x1, x22
   28650:	bl	c6a0 <mpfr_set4@plt>
   28654:	mov	w19, w0
   28658:	mov	x0, x22
   2865c:	bl	c070 <mpfr_clear@plt>
   28660:	mov	w0, w19
   28664:	ldp	x19, x20, [sp, #16]
   28668:	ldp	x21, x22, [sp, #32]
   2866c:	ldp	x23, x24, [sp, #48]
   28670:	ldp	x29, x30, [sp], #96
   28674:	ret
   28678:	mov	w1, w21
   2867c:	mov	x0, x20
   28680:	mov	w2, #0xffffffff            	// #-1
   28684:	bl	bf40 <mpfr_overflow@plt>
   28688:	mov	w19, w0
   2868c:	b	28658 <mpfr_rint_floor@@Base+0xc8>

0000000000028690 <mpfr_ui_div@@Base>:
   28690:	stp	x29, x30, [sp, #-128]!
   28694:	mov	x6, #0x8000000000000003    	// #-9223372036854775805
   28698:	mov	x4, x2
   2869c:	mov	x29, sp
   286a0:	ldr	x5, [x2, #16]
   286a4:	stp	x19, x20, [sp, #16]
   286a8:	mov	x19, x0
   286ac:	cmp	x5, x6
   286b0:	b.le	287ec <mpfr_ui_div@@Base+0x15c>
   286b4:	cbz	x1, 287cc <mpfr_ui_div@@Base+0x13c>
   286b8:	mrs	x4, tpidr_el0
   286bc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   286c0:	ldr	x5, [x0, #2576]
   286c4:	add	x0, x0, #0xa10
   286c8:	blr	x5
   286cc:	clz	x5, x1
   286d0:	mov	x8, #0x40                  	// #64
   286d4:	sub	w7, w8, w5
   286d8:	stp	x21, x22, [sp, #32]
   286dc:	ldr	w20, [x4, x0]
   286e0:	add	x22, x4, x0
   286e4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   286e8:	ldr	x6, [x0, #2512]
   286ec:	add	x0, x0, #0x9d0
   286f0:	blr	x6
   286f4:	stp	x23, x24, [sp, #48]
   286f8:	sxtw	x7, w7
   286fc:	lsl	x5, x1, x5
   28700:	stp	x25, x26, [sp, #64]
   28704:	add	x26, x4, x0
   28708:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   2870c:	ldr	x23, [x4, x0]
   28710:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   28714:	ldr	x6, [x0, #2544]
   28718:	add	x0, x0, #0x9f0
   2871c:	blr	x6
   28720:	add	x6, sp, #0x58
   28724:	add	x25, x4, x0
   28728:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   2872c:	mov	w11, #0x1                   	// #1
   28730:	add	x1, sp, #0x60
   28734:	mov	w21, w3
   28738:	str	x10, [x26]
   2873c:	stp	x5, x8, [sp, #88]
   28740:	str	w11, [sp, #104]
   28744:	str	x7, [sp, #112]
   28748:	str	x6, [sp, #120]
   2874c:	ldr	x24, [x4, x0]
   28750:	mov	x0, x19
   28754:	str	x9, [x25]
   28758:	bl	c620 <mpfr_div@plt>
   2875c:	ldr	w1, [x22]
   28760:	ldr	x2, [x19, #16]
   28764:	orr	w1, w20, w1
   28768:	str	x24, [x25]
   2876c:	str	w1, [x22]
   28770:	cmp	x24, x2
   28774:	str	x23, [x26]
   28778:	ccmp	x23, x2, #0x0, ge  // ge = tcont
   2877c:	b.le	287a8 <mpfr_ui_div@@Base+0x118>
   28780:	mov	w2, w21
   28784:	mov	w1, w0
   28788:	mov	x0, x19
   2878c:	bl	cb30 <mpfr_check_range@plt>
   28790:	ldp	x21, x22, [sp, #32]
   28794:	ldp	x23, x24, [sp, #48]
   28798:	ldp	x25, x26, [sp, #64]
   2879c:	ldp	x19, x20, [sp, #16]
   287a0:	ldp	x29, x30, [sp], #128
   287a4:	ret
   287a8:	cbz	w0, 287b4 <mpfr_ui_div@@Base+0x124>
   287ac:	orr	w1, w1, #0x8
   287b0:	str	w1, [x22]
   287b4:	ldp	x19, x20, [sp, #16]
   287b8:	ldp	x21, x22, [sp, #32]
   287bc:	ldp	x23, x24, [sp, #48]
   287c0:	ldp	x25, x26, [sp, #64]
   287c4:	ldp	x29, x30, [sp], #128
   287c8:	ret
   287cc:	ldr	w2, [x4, #8]
   287d0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   287d4:	str	w2, [x19, #8]
   287d8:	mov	w0, #0x0                   	// #0
   287dc:	str	x1, [x19, #16]
   287e0:	ldp	x19, x20, [sp, #16]
   287e4:	ldp	x29, x30, [sp], #128
   287e8:	ret
   287ec:	mov	x3, #0x2                   	// #2
   287f0:	movk	x3, #0x8000, lsl #48
   287f4:	cmp	x5, x3
   287f8:	b.eq	28854 <mpfr_ui_div@@Base+0x1c4>  // b.none
   287fc:	cmp	x5, x6
   28800:	b.eq	287cc <mpfr_ui_div@@Base+0x13c>  // b.none
   28804:	mrs	x2, tpidr_el0
   28808:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2880c:	ldr	x5, [x0, #2576]
   28810:	add	x0, x0, #0xa10
   28814:	blr	x5
   28818:	add	x5, x2, x0
   2881c:	ldr	w0, [x2, x0]
   28820:	cbz	x1, 28840 <mpfr_ui_div@@Base+0x1b0>
   28824:	ldr	w2, [x4, #8]
   28828:	orr	w1, w0, #0x20
   2882c:	mov	w0, #0x0                   	// #0
   28830:	str	w1, [x5]
   28834:	str	w2, [x19, #8]
   28838:	str	x6, [x19, #16]
   2883c:	b	2879c <mpfr_ui_div@@Base+0x10c>
   28840:	orr	w1, w0, #0x4
   28844:	mov	w0, #0x0                   	// #0
   28848:	str	w1, [x5]
   2884c:	str	x3, [x19, #16]
   28850:	b	2879c <mpfr_ui_div@@Base+0x10c>
   28854:	mrs	x1, tpidr_el0
   28858:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2885c:	ldr	x2, [x0, #2576]
   28860:	add	x0, x0, #0xa10
   28864:	blr	x2
   28868:	add	x1, x1, x0
   2886c:	mov	w0, #0x0                   	// #0
   28870:	str	x5, [x19, #16]
   28874:	ldr	w2, [x1]
   28878:	orr	w2, w2, #0x4
   2887c:	str	w2, [x1]
   28880:	b	2879c <mpfr_ui_div@@Base+0x10c>
   28884:	nop

0000000000028888 <mpfr_ui_sub@@Base>:
   28888:	stp	x29, x30, [sp, #-128]!
   2888c:	mov	x4, x2
   28890:	mov	x29, sp
   28894:	stp	x25, x26, [sp, #64]
   28898:	mov	w26, w3
   2889c:	cbz	x1, 289c8 <mpfr_ui_sub@@Base+0x140>
   288a0:	ldr	x6, [x2, #16]
   288a4:	stp	x19, x20, [sp, #16]
   288a8:	mov	x7, #0x8000000000000003    	// #-9223372036854775805
   288ac:	mov	x19, x0
   288b0:	cmp	x6, x7
   288b4:	b.le	289e0 <mpfr_ui_sub@@Base+0x158>
   288b8:	mrs	x4, tpidr_el0
   288bc:	mov	x5, x1
   288c0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   288c4:	ldr	x1, [x0, #2576]
   288c8:	add	x0, x0, #0xa10
   288cc:	blr	x1
   288d0:	mov	x8, #0x40                  	// #64
   288d4:	clz	x1, x5
   288d8:	stp	x21, x22, [sp, #32]
   288dc:	ldr	w20, [x4, x0]
   288e0:	add	x21, x4, x0
   288e4:	sub	w7, w8, w1
   288e8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   288ec:	ldr	x6, [x0, #2512]
   288f0:	add	x0, x0, #0x9d0
   288f4:	blr	x6
   288f8:	add	x25, x4, x0
   288fc:	ldr	x22, [x4, x0]
   28900:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   28904:	ldr	x6, [x0, #2544]
   28908:	add	x0, x0, #0x9f0
   2890c:	blr	x6
   28910:	sxtw	x7, w7
   28914:	add	x6, sp, #0x58
   28918:	stp	x23, x24, [sp, #48]
   2891c:	add	x24, x4, x0
   28920:	lsl	x5, x5, x1
   28924:	mov	x10, #0xc000000000000001    	// #-4611686018427387903
   28928:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   2892c:	mov	w11, #0x1                   	// #1
   28930:	add	x1, sp, #0x60
   28934:	str	x10, [x25]
   28938:	stp	x5, x8, [sp, #88]
   2893c:	str	w11, [sp, #104]
   28940:	str	x7, [sp, #112]
   28944:	str	x6, [sp, #120]
   28948:	ldr	x23, [x4, x0]
   2894c:	mov	x0, x19
   28950:	str	x9, [x24]
   28954:	bl	bb70 <mpfr_sub@plt>
   28958:	ldr	w1, [x21]
   2895c:	ldr	x2, [x19, #16]
   28960:	orr	w1, w20, w1
   28964:	str	x23, [x24]
   28968:	str	w1, [x21]
   2896c:	cmp	x23, x2
   28970:	str	x22, [x25]
   28974:	ccmp	x22, x2, #0x0, ge  // ge = tcont
   28978:	b.le	289a4 <mpfr_ui_sub@@Base+0x11c>
   2897c:	mov	w1, w0
   28980:	mov	w2, w26
   28984:	mov	x0, x19
   28988:	bl	cb30 <mpfr_check_range@plt>
   2898c:	ldp	x19, x20, [sp, #16]
   28990:	ldp	x21, x22, [sp, #32]
   28994:	ldp	x23, x24, [sp, #48]
   28998:	ldp	x25, x26, [sp, #64]
   2899c:	ldp	x29, x30, [sp], #128
   289a0:	ret
   289a4:	cbz	w0, 2898c <mpfr_ui_sub@@Base+0x104>
   289a8:	orr	w1, w1, #0x8
   289ac:	ldp	x19, x20, [sp, #16]
   289b0:	ldp	x23, x24, [sp, #48]
   289b4:	str	w1, [x21]
   289b8:	ldp	x21, x22, [sp, #32]
   289bc:	ldp	x25, x26, [sp, #64]
   289c0:	ldp	x29, x30, [sp], #128
   289c4:	ret
   289c8:	mov	w2, w3
   289cc:	mov	x1, x4
   289d0:	bl	bd70 <mpfr_neg@plt>
   289d4:	ldp	x25, x26, [sp, #64]
   289d8:	ldp	x29, x30, [sp], #128
   289dc:	ret
   289e0:	mov	x2, #0x2                   	// #2
   289e4:	movk	x2, #0x8000, lsl #48
   289e8:	cmp	x6, x2
   289ec:	b.eq	28a08 <mpfr_ui_sub@@Base+0x180>  // b.none
   289f0:	cmp	x6, x7
   289f4:	b.eq	28a3c <mpfr_ui_sub@@Base+0x1b4>  // b.none
   289f8:	mov	x2, #0x0                   	// #0
   289fc:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   28a00:	ldp	x19, x20, [sp, #16]
   28a04:	b	28998 <mpfr_ui_sub@@Base+0x110>
   28a08:	mrs	x1, tpidr_el0
   28a0c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   28a10:	ldr	x2, [x0, #2576]
   28a14:	add	x0, x0, #0xa10
   28a18:	blr	x2
   28a1c:	add	x1, x1, x0
   28a20:	mov	w0, #0x0                   	// #0
   28a24:	str	x6, [x19, #16]
   28a28:	ldp	x19, x20, [sp, #16]
   28a2c:	ldr	w2, [x1]
   28a30:	orr	w2, w2, #0x4
   28a34:	str	w2, [x1]
   28a38:	b	28998 <mpfr_ui_sub@@Base+0x110>
   28a3c:	ldr	w1, [x4, #8]
   28a40:	mov	w0, #0x0                   	// #0
   28a44:	str	x6, [x19, #16]
   28a48:	neg	w1, w1
   28a4c:	str	w1, [x19, #8]
   28a50:	ldp	x19, x20, [sp, #16]
   28a54:	b	28998 <mpfr_ui_sub@@Base+0x110>

0000000000028a58 <mpfr_urandom@@Base>:
   28a58:	stp	x29, x30, [sp, #-128]!
   28a5c:	mov	w4, #0x1                   	// #1
   28a60:	mov	x29, sp
   28a64:	stp	x21, x22, [sp, #32]
   28a68:	mrs	x22, tpidr_el0
   28a6c:	mov	x21, x0
   28a70:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   28a74:	ldr	x3, [x0, #2576]
   28a78:	add	x0, x0, #0xa10
   28a7c:	blr	x3
   28a80:	stp	x23, x24, [sp, #48]
   28a84:	ldr	w0, [x22, x0]
   28a88:	str	w0, [sp, #108]
   28a8c:	mov	w23, w2
   28a90:	ldr	x24, [x21, #24]
   28a94:	stp	x19, x20, [sp, #16]
   28a98:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   28a9c:	ldr	x3, [x0, #2512]
   28aa0:	add	x0, x0, #0x9d0
   28aa4:	blr	x3
   28aa8:	add	x3, x22, x0
   28aac:	stp	x25, x26, [sp, #64]
   28ab0:	mov	x19, x1
   28ab4:	stp	x27, x28, [sp, #80]
   28ab8:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   28abc:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   28ac0:	mov	x28, #0x0                   	// #0
   28ac4:	mov	x27, #0xc000000000000000    	// #-4611686018427387904
   28ac8:	str	w4, [x21, #8]
   28acc:	str	xzr, [x21, #16]
   28ad0:	ldr	x25, [x22, x0]
   28ad4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   28ad8:	ldr	x4, [x0, #2544]
   28adc:	add	x0, x0, #0x9f0
   28ae0:	blr	x4
   28ae4:	ldr	x20, [x21]
   28ae8:	str	x2, [x3]
   28aec:	ldr	x26, [x22, x0]
   28af0:	str	x1, [x22, x0]
   28af4:	mov	x1, x19
   28af8:	mov	x0, x24
   28afc:	mov	x2, #0x8                   	// #8
   28b00:	bl	c810 <mpfr_rand_raw@plt>
   28b04:	ldr	x4, [x24]
   28b08:	cbz	x4, 28c3c <mpfr_urandom@@Base+0x1e4>
   28b0c:	clz	x4, x4
   28b10:	mov	x0, #0xc000000000000000    	// #-4611686018427387904
   28b14:	sub	w4, w4, #0x38
   28b18:	cmp	x28, x0
   28b1c:	sub	x4, x28, w4, sxtw
   28b20:	csel	x28, x4, x28, ge  // ge = tcont
   28b24:	cmp	x20, #0x1
   28b28:	b.eq	28c88 <mpfr_urandom@@Base+0x230>  // b.none
   28b2c:	sub	x2, x20, #0x1
   28b30:	mov	x1, x19
   28b34:	mov	x0, x24
   28b38:	bl	c810 <mpfr_rand_raw@plt>
   28b3c:	ldr	x27, [x21]
   28b40:	sub	x27, x27, #0x1
   28b44:	asr	x27, x27, #6
   28b48:	add	x27, x27, #0x1
   28b4c:	lsl	x3, x27, #6
   28b50:	subs	x3, x3, x20
   28b54:	b.eq	28b68 <mpfr_urandom@@Base+0x110>  // b.none
   28b58:	mov	x2, x27
   28b5c:	mov	x1, x24
   28b60:	mov	x0, x24
   28b64:	bl	bcc0 <__gmpn_lshift@plt>
   28b68:	lsl	x27, x27, #3
   28b6c:	sub	x27, x27, #0x8
   28b70:	ldr	x0, [x24, x27]
   28b74:	orr	x0, x0, #0x8000000000000000
   28b78:	str	x0, [x24, x27]
   28b7c:	add	x0, sp, #0x78
   28b80:	mov	x1, x19
   28b84:	mov	x2, #0x1                   	// #1
   28b88:	bl	c810 <mpfr_rand_raw@plt>
   28b8c:	sub	w0, w23, #0x2
   28b90:	tst	w0, #0xfffffffd
   28b94:	ldr	x0, [sp, #120]
   28b98:	b.eq	28c78 <mpfr_urandom@@Base+0x220>  // b.none
   28b9c:	cmp	w23, #0x0
   28ba0:	and	w0, w0, #0x1
   28ba4:	csel	w0, w0, wzr, eq  // eq = none
   28ba8:	mov	w1, #0xffffffff            	// #-1
   28bac:	cbnz	w0, 28c78 <mpfr_urandom@@Base+0x220>
   28bb0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   28bb4:	ldr	x3, [x0, #2576]
   28bb8:	add	x0, x0, #0xa10
   28bbc:	blr	x3
   28bc0:	ldr	x2, [x21, #16]
   28bc4:	ldr	w3, [sp, #108]
   28bc8:	str	w3, [x22, x0]
   28bcc:	add	x3, x22, x0
   28bd0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   28bd4:	ldr	x4, [x0, #2512]
   28bd8:	add	x0, x0, #0x9d0
   28bdc:	blr	x4
   28be0:	str	x25, [x22, x0]
   28be4:	add	x28, x28, x2
   28be8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   28bec:	ldr	x2, [x0, #2544]
   28bf0:	add	x0, x0, #0x9f0
   28bf4:	blr	x2
   28bf8:	str	x26, [x22, x0]
   28bfc:	cmp	x26, x28
   28c00:	str	x28, [x21, #16]
   28c04:	ccmp	x25, x28, #0x0, ge  // ge = tcont
   28c08:	b.le	28c4c <mpfr_urandom@@Base+0x1f4>
   28c0c:	mov	w2, w23
   28c10:	mov	x0, x21
   28c14:	bl	cb30 <mpfr_check_range@plt>
   28c18:	mov	w1, w0
   28c1c:	mov	w0, w1
   28c20:	ldp	x19, x20, [sp, #16]
   28c24:	ldp	x21, x22, [sp, #32]
   28c28:	ldp	x23, x24, [sp, #48]
   28c2c:	ldp	x25, x26, [sp, #64]
   28c30:	ldp	x27, x28, [sp, #80]
   28c34:	ldp	x29, x30, [sp], #128
   28c38:	ret
   28c3c:	cmp	x28, x27
   28c40:	sub	x0, x28, #0x8
   28c44:	csel	x28, x0, x28, ge  // ge = tcont
   28c48:	b	28af4 <mpfr_urandom@@Base+0x9c>
   28c4c:	ldr	w0, [sp, #108]
   28c50:	ldp	x19, x20, [sp, #16]
   28c54:	orr	w24, w0, #0x8
   28c58:	str	w24, [x3]
   28c5c:	mov	w0, w1
   28c60:	ldp	x21, x22, [sp, #32]
   28c64:	ldp	x23, x24, [sp, #48]
   28c68:	ldp	x25, x26, [sp, #64]
   28c6c:	ldp	x27, x28, [sp, #80]
   28c70:	ldp	x29, x30, [sp], #128
   28c74:	ret
   28c78:	mov	x0, x21
   28c7c:	bl	c120 <mpfr_nextabove@plt>
   28c80:	mov	w1, #0x1                   	// #1
   28c84:	b	28bb0 <mpfr_urandom@@Base+0x158>
   28c88:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   28c8c:	str	x0, [x24]
   28c90:	b	28b7c <mpfr_urandom@@Base+0x124>
   28c94:	nop

0000000000028c98 <mpfr_rand_raw@@Base>:
   28c98:	stp	x29, x30, [sp, #-64]!
   28c9c:	cmp	x2, #0x0
   28ca0:	mov	x29, sp
   28ca4:	stp	x19, x20, [sp, #16]
   28ca8:	stp	x21, x22, [sp, #32]
   28cac:	b.le	28d14 <mpfr_rand_raw@@Base+0x7c>
   28cb0:	add	x21, sp, #0x30
   28cb4:	mov	x19, x2
   28cb8:	mov	x20, x0
   28cbc:	mov	x22, x1
   28cc0:	mov	x0, x21
   28cc4:	bl	bf90 <mpfr_mpz_init@plt>
   28cc8:	mov	x1, x22
   28ccc:	mov	x2, x19
   28cd0:	mov	x0, x21
   28cd4:	bl	cd00 <__gmpz_urandomb@plt>
   28cd8:	ldr	x1, [sp, #56]
   28cdc:	cmp	x1, x20
   28ce0:	b.eq	28cfc <mpfr_rand_raw@@Base+0x64>  // b.none
   28ce4:	sub	x19, x19, #0x1
   28ce8:	mov	x0, x20
   28cec:	asr	x19, x19, #6
   28cf0:	add	x2, x19, #0x1
   28cf4:	lsl	x2, x2, #3
   28cf8:	bl	ba10 <memcpy@plt>
   28cfc:	mov	x0, x21
   28d00:	bl	c170 <mpfr_mpz_clear@plt>
   28d04:	ldp	x19, x20, [sp, #16]
   28d08:	ldp	x21, x22, [sp, #32]
   28d0c:	ldp	x29, x30, [sp], #64
   28d10:	ret
   28d14:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   28d18:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   28d1c:	add	x2, x2, #0x5c8
   28d20:	add	x0, x0, #0x5d8
   28d24:	mov	w1, #0x26                  	// #38
   28d28:	bl	cb40 <mpfr_assert_fail@plt>
   28d2c:	nop

0000000000028d30 <mpfr_urandomb@@Base>:
   28d30:	stp	x29, x30, [sp, #-64]!
   28d34:	mov	w3, #0x1                   	// #1
   28d38:	mov	x29, sp
   28d3c:	ldr	x2, [x0]
   28d40:	stp	x19, x20, [sp, #16]
   28d44:	sub	x20, x2, #0x1
   28d48:	stp	x21, x22, [sp, #32]
   28d4c:	mov	x22, x0
   28d50:	asr	x20, x20, #6
   28d54:	str	x23, [sp, #48]
   28d58:	add	x20, x20, #0x1
   28d5c:	str	w3, [x0, #8]
   28d60:	ldr	x23, [x0, #24]
   28d64:	lsl	w21, w20, #6
   28d68:	sub	w21, w21, w2
   28d6c:	mov	x19, x20
   28d70:	mov	x0, x23
   28d74:	bl	c810 <mpfr_rand_raw@plt>
   28d78:	cbz	w21, 28d90 <mpfr_urandomb@@Base+0x60>
   28d7c:	mov	w3, w21
   28d80:	mov	x2, x20
   28d84:	mov	x1, x23
   28d88:	mov	x0, x23
   28d8c:	bl	bcc0 <__gmpn_lshift@plt>
   28d90:	sub	x2, x23, #0x8
   28d94:	mov	x1, #0x0                   	// #0
   28d98:	ldr	x3, [x2, x19, lsl #3]
   28d9c:	sub	x21, x20, x19
   28da0:	cbnz	x3, 28dd0 <mpfr_urandomb@@Base+0xa0>
   28da4:	sub	x1, x1, #0x40
   28da8:	subs	x19, x19, #0x1
   28dac:	b.ne	28d98 <mpfr_urandomb@@Base+0x68>  // b.any
   28db0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   28db4:	str	x1, [x22, #16]
   28db8:	mov	w0, #0x0                   	// #0
   28dbc:	ldp	x19, x20, [sp, #16]
   28dc0:	ldp	x21, x22, [sp, #32]
   28dc4:	ldr	x23, [sp, #48]
   28dc8:	ldp	x29, x30, [sp], #64
   28dcc:	ret
   28dd0:	mrs	x2, tpidr_el0
   28dd4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   28dd8:	ldr	x4, [x0, #2512]
   28ddc:	add	x0, x0, #0x9d0
   28de0:	blr	x4
   28de4:	clz	x4, x3
   28de8:	sub	x1, x1, x4
   28dec:	mov	x3, x4
   28df0:	ldr	x0, [x2, x0]
   28df4:	cmp	x0, x1
   28df8:	b.gt	28e3c <mpfr_urandomb@@Base+0x10c>
   28dfc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   28e00:	ldr	x4, [x0, #2544]
   28e04:	add	x0, x0, #0x9f0
   28e08:	blr	x4
   28e0c:	ldr	x0, [x2, x0]
   28e10:	cmp	x0, x1
   28e14:	b.lt	28e3c <mpfr_urandomb@@Base+0x10c>  // b.tstop
   28e18:	str	x1, [x22, #16]
   28e1c:	cbnz	x3, 28e80 <mpfr_urandomb@@Base+0x150>
   28e20:	cbnz	x21, 28eb0 <mpfr_urandomb@@Base+0x180>
   28e24:	mov	w0, #0x0                   	// #0
   28e28:	ldp	x19, x20, [sp, #16]
   28e2c:	ldp	x21, x22, [sp, #32]
   28e30:	ldr	x23, [sp, #48]
   28e34:	ldp	x29, x30, [sp], #64
   28e38:	ret
   28e3c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   28e40:	ldr	x1, [x0, #2576]
   28e44:	add	x0, x0, #0xa10
   28e48:	blr	x1
   28e4c:	add	x2, x2, x0
   28e50:	mov	x1, #0x2                   	// #2
   28e54:	mov	w0, #0x1                   	// #1
   28e58:	movk	x1, #0x8000, lsl #48
   28e5c:	str	x1, [x22, #16]
   28e60:	ldr	w1, [x2]
   28e64:	ldp	x19, x20, [sp, #16]
   28e68:	orr	w1, w1, #0x4
   28e6c:	str	w1, [x2]
   28e70:	ldp	x21, x22, [sp, #32]
   28e74:	ldr	x23, [sp, #48]
   28e78:	ldp	x29, x30, [sp], #64
   28e7c:	ret
   28e80:	lsl	x20, x21, #3
   28e84:	mov	x2, x19
   28e88:	add	x0, x23, x20
   28e8c:	mov	x1, x23
   28e90:	bl	bcc0 <__gmpn_lshift@plt>
   28e94:	cbz	x21, 28e24 <mpfr_urandomb@@Base+0xf4>
   28e98:	mov	x2, x20
   28e9c:	mov	x0, x23
   28ea0:	mov	w1, #0x0                   	// #0
   28ea4:	bl	c110 <memset@plt>
   28ea8:	mov	w0, #0x0                   	// #0
   28eac:	b	28e28 <mpfr_urandomb@@Base+0xf8>
   28eb0:	lsl	x20, x21, #3
   28eb4:	mov	x2, x19
   28eb8:	add	x0, x23, x20
   28ebc:	mov	x1, x23
   28ec0:	bl	bae0 <__gmpn_copyd@plt>
   28ec4:	mov	x2, x20
   28ec8:	mov	x0, x23
   28ecc:	mov	w1, #0x0                   	// #0
   28ed0:	bl	c110 <memset@plt>
   28ed4:	b	28ea8 <mpfr_urandomb@@Base+0x178>

0000000000028ed8 <mpfr_get_z_2exp@@Base>:
   28ed8:	stp	x29, x30, [sp, #-48]!
   28edc:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   28ee0:	mov	x29, sp
   28ee4:	stp	x19, x20, [sp, #16]
   28ee8:	mov	x20, x1
   28eec:	ldr	x1, [x1, #16]
   28ef0:	str	x21, [sp, #32]
   28ef4:	mov	x21, x0
   28ef8:	cmp	x1, x2
   28efc:	b.le	28f80 <mpfr_get_z_2exp@@Base+0xa8>
   28f00:	ldr	x19, [x20]
   28f04:	mov	x1, #0x7fffffff            	// #2147483647
   28f08:	sub	x19, x19, #0x1
   28f0c:	asr	x19, x19, #6
   28f10:	add	x19, x19, #0x1
   28f14:	cmp	x19, x1
   28f18:	b.gt	29028 <mpfr_get_z_2exp@@Base+0x150>
   28f1c:	lsl	x1, x19, #6
   28f20:	bl	c440 <__gmpz_realloc2@plt>
   28f24:	ldr	x2, [x20]
   28f28:	ldr	x0, [x21, #8]
   28f2c:	neg	w3, w2
   28f30:	ands	w3, w3, #0x3f
   28f34:	ldr	x1, [x20, #24]
   28f38:	b.eq	28fc0 <mpfr_get_z_2exp@@Base+0xe8>  // b.none
   28f3c:	mov	x2, x19
   28f40:	bl	bce0 <__gmpn_rshift@plt>
   28f44:	ldr	x2, [x20]
   28f48:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   28f4c:	ldr	w3, [x20, #8]
   28f50:	ldr	x0, [x20, #16]
   28f54:	cmp	w3, #0x0
   28f58:	cneg	w19, w19, lt  // lt = tstop
   28f5c:	str	w19, [x21, #4]
   28f60:	add	x3, x0, x1
   28f64:	sub	x0, x0, x2
   28f68:	cmp	x3, x2
   28f6c:	b.cc	28fd8 <mpfr_get_z_2exp@@Base+0x100>  // b.lo, b.ul, b.last
   28f70:	ldp	x19, x20, [sp, #16]
   28f74:	ldr	x21, [sp, #32]
   28f78:	ldp	x29, x30, [sp], #48
   28f7c:	ret
   28f80:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   28f84:	mrs	x19, tpidr_el0
   28f88:	cmp	x1, x0
   28f8c:	b.ne	29004 <mpfr_get_z_2exp@@Base+0x12c>  // b.any
   28f90:	mov	x0, x21
   28f94:	mov	x1, #0x0                   	// #0
   28f98:	bl	bcb0 <__gmpz_set_ui@plt>
   28f9c:	ldr	x21, [sp, #32]
   28fa0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   28fa4:	ldr	x1, [x0, #2512]
   28fa8:	add	x0, x0, #0x9d0
   28fac:	blr	x1
   28fb0:	ldr	x0, [x19, x0]
   28fb4:	ldp	x19, x20, [sp, #16]
   28fb8:	ldp	x29, x30, [sp], #48
   28fbc:	ret
   28fc0:	cmp	x0, x1
   28fc4:	b.eq	28f48 <mpfr_get_z_2exp@@Base+0x70>  // b.none
   28fc8:	lsl	x2, x19, #3
   28fcc:	bl	ba10 <memcpy@plt>
   28fd0:	ldr	x2, [x20]
   28fd4:	b	28f48 <mpfr_get_z_2exp@@Base+0x70>
   28fd8:	mrs	x2, tpidr_el0
   28fdc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   28fe0:	ldr	x3, [x0, #2576]
   28fe4:	add	x0, x0, #0xa10
   28fe8:	blr	x3
   28fec:	add	x2, x2, x0
   28ff0:	mov	x0, x1
   28ff4:	ldr	w1, [x2]
   28ff8:	orr	w1, w1, #0x10
   28ffc:	str	w1, [x2]
   29000:	b	28f70 <mpfr_get_z_2exp@@Base+0x98>
   29004:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   29008:	ldr	x1, [x0, #2576]
   2900c:	add	x0, x0, #0xa10
   29010:	blr	x1
   29014:	add	x0, x19, x0
   29018:	ldr	w1, [x0]
   2901c:	orr	w1, w1, #0x10
   29020:	str	w1, [x0]
   29024:	b	28f90 <mpfr_get_z_2exp@@Base+0xb8>
   29028:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2902c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   29030:	add	x2, x2, #0x5e8
   29034:	add	x0, x0, #0x600
   29038:	mov	w1, #0x3c                  	// #60
   2903c:	bl	cb40 <mpfr_assert_fail@plt>

0000000000029040 <mpfr_swap@@Base>:
   29040:	ldr	x3, [x0]
   29044:	ldr	x2, [x1]
   29048:	str	x3, [x1]
   2904c:	ldr	w3, [x0, #8]
   29050:	str	x2, [x0]
   29054:	ldr	w2, [x1, #8]
   29058:	str	w3, [x1, #8]
   2905c:	str	w2, [x0, #8]
   29060:	ldr	x3, [x0, #16]
   29064:	ldr	x2, [x1, #16]
   29068:	str	x3, [x1, #16]
   2906c:	str	x2, [x0, #16]
   29070:	ldr	x3, [x0, #24]
   29074:	ldr	x2, [x1, #24]
   29078:	str	x3, [x1, #24]
   2907c:	str	x2, [x0, #24]
   29080:	ret
   29084:	nop

0000000000029088 <mpfr_fac_ui@@Base>:
   29088:	stp	x29, x30, [sp, #-160]!
   2908c:	cmp	x1, #0x1
   29090:	mov	x29, sp
   29094:	stp	x25, x26, [sp, #64]
   29098:	mov	w25, w2
   2909c:	stp	x27, x28, [sp, #80]
   290a0:	b.ls	293fc <mpfr_fac_ui@@Base+0x374>  // b.plast
   290a4:	stp	x23, x24, [sp, #48]
   290a8:	mov	x23, x0
   290ac:	sub	x0, x1, #0x1
   290b0:	mrs	x24, tpidr_el0
   290b4:	clz	x0, x0
   290b8:	stp	x19, x20, [sp, #16]
   290bc:	mov	x20, x1
   290c0:	mov	w1, #0x40                  	// #64
   290c4:	sub	w1, w1, w0
   290c8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   290cc:	ldr	x2, [x0, #2576]
   290d0:	add	x0, x0, #0xa10
   290d4:	blr	x2
   290d8:	ldr	w0, [x24, x0]
   290dc:	add	x26, sp, #0x80
   290e0:	ldr	x2, [x23]
   290e4:	lsl	w1, w1, #1
   290e8:	str	w0, [sp, #100]
   290ec:	mov	w19, #0x1                   	// #1
   290f0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   290f4:	ldr	x3, [x0, #2512]
   290f8:	add	x0, x0, #0x9d0
   290fc:	blr	x3
   29100:	add	x3, x24, x0
   29104:	ldr	x0, [x24, x0]
   29108:	add	x1, x2, w1, sxtw
   2910c:	stp	x21, x22, [sp, #32]
   29110:	add	x21, x1, #0x7
   29114:	mov	x22, #0x40                  	// #64
   29118:	str	x0, [sp, #104]
   2911c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   29120:	ldr	x1, [x0, #2544]
   29124:	add	x0, x0, #0x9f0
   29128:	blr	x1
   2912c:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   29130:	str	x1, [x3]
   29134:	ldr	x3, [x24, x0]
   29138:	str	x2, [sp, #120]
   2913c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   29140:	mov	x1, x21
   29144:	str	x2, [x24, x0]
   29148:	mov	x0, x26
   2914c:	str	x3, [sp, #112]
   29150:	bl	ca80 <mpfr_init2@plt>
   29154:	nop
   29158:	mov	w3, w19
   2915c:	mov	x0, x26
   29160:	mov	x2, #0x0                   	// #0
   29164:	mov	x1, #0x1                   	// #1
   29168:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   2916c:	mov	w28, w0
   29170:	mov	x27, #0x2                   	// #2
   29174:	nop
   29178:	mov	x2, x27
   2917c:	mov	w3, w19
   29180:	mov	x1, x26
   29184:	mov	x0, x26
   29188:	bl	ba50 <mpfr_mul_ui@plt>
   2918c:	add	x27, x27, #0x1
   29190:	cmp	w28, #0x0
   29194:	csel	w28, w28, w0, ne  // ne = any
   29198:	cmp	x20, x27
   2919c:	b.cs	29178 <mpfr_fac_ui@@Base+0xf0>  // b.hs, b.nlast
   291a0:	subs	x2, x21, #0x1
   291a4:	b.eq	29304 <mpfr_fac_ui@@Base+0x27c>  // b.none
   291a8:	b.le	29324 <mpfr_fac_ui@@Base+0x29c>
   291ac:	clz	x0, x2
   291b0:	mov	w1, #0x40                  	// #64
   291b4:	sub	w0, w1, w0
   291b8:	sub	x2, x2, w0, sxtw
   291bc:	cbz	w28, 29258 <mpfr_fac_ui@@Base+0x1d0>
   291c0:	ldr	x0, [sp, #144]
   291c4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   291c8:	cmp	x0, x1
   291cc:	b.le	29228 <mpfr_fac_ui@@Base+0x1a0>
   291d0:	ldp	x3, x1, [sp, #120]
   291d4:	cmp	w25, #0x0
   291d8:	ldr	x0, [sp, #152]
   291dc:	sub	x1, x1, #0x1
   291e0:	cinc	x3, x3, eq  // eq = none
   291e4:	asr	x1, x1, #6
   291e8:	add	x1, x1, #0x1
   291ec:	bl	c370 <mpfr_round_p@plt>
   291f0:	cbz	w0, 29228 <mpfr_fac_ui@@Base+0x1a0>
   291f4:	ldr	w3, [sp, #136]
   291f8:	mov	w2, w25
   291fc:	mov	x1, x26
   29200:	mov	x0, x23
   29204:	bl	c6a0 <mpfr_set4@plt>
   29208:	cmp	w28, #0x0
   2920c:	ccmp	w0, #0x0, #0x0, lt  // lt = tstop
   29210:	b.le	29360 <mpfr_fac_ui@@Base+0x2d8>
   29214:	cmp	w28, #0x0
   29218:	ccmp	w0, #0x0, #0x1, gt
   2921c:	b.ge	29360 <mpfr_fac_ui@@Base+0x2d8>  // b.tcont
   29220:	mov	w0, #0x3                   	// #3
   29224:	sub	w19, w0, w19
   29228:	mov	x0, #0xfffffffffffffeff    	// #-257
   2922c:	movk	x0, #0x7fff, lsl #48
   29230:	sub	x0, x0, x21
   29234:	cmp	x0, x22
   29238:	b.lt	2930c <mpfr_fac_ui@@Base+0x284>  // b.tstop
   2923c:	add	x21, x21, x22
   29240:	mov	x0, x26
   29244:	mov	x1, x21
   29248:	add	x22, x21, x21, lsr #63
   2924c:	asr	x22, x22, #1
   29250:	bl	bed0 <mpfr_set_prec@plt>
   29254:	b	29158 <mpfr_fac_ui@@Base+0xd0>
   29258:	ldr	w3, [sp, #136]
   2925c:	mov	w2, w25
   29260:	mov	x1, x26
   29264:	mov	x0, x23
   29268:	bl	c6a0 <mpfr_set4@plt>
   2926c:	mov	w28, w0
   29270:	mov	x0, x26
   29274:	bl	c070 <mpfr_clear@plt>
   29278:	ldr	x1, [x23, #16]
   2927c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   29280:	ldr	x2, [x0, #2576]
   29284:	add	x0, x0, #0xa10
   29288:	blr	x2
   2928c:	ldr	w2, [sp, #100]
   29290:	str	w2, [x24, x0]
   29294:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   29298:	ldr	x2, [x0, #2512]
   2929c:	add	x0, x0, #0x9d0
   292a0:	blr	x2
   292a4:	ldr	x2, [sp, #104]
   292a8:	str	x2, [x24, x0]
   292ac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   292b0:	ldr	x3, [x0, #2544]
   292b4:	add	x0, x0, #0x9f0
   292b8:	blr	x3
   292bc:	ldr	x3, [sp, #112]
   292c0:	str	x3, [x24, x0]
   292c4:	cmp	x3, x1
   292c8:	ccmp	x2, x1, #0x0, ge  // ge = tcont
   292cc:	b.le	2933c <mpfr_fac_ui@@Base+0x2b4>
   292d0:	mov	w2, w25
   292d4:	mov	w1, w28
   292d8:	mov	x0, x23
   292dc:	bl	cb30 <mpfr_check_range@plt>
   292e0:	mov	w28, w0
   292e4:	mov	w0, w28
   292e8:	ldp	x19, x20, [sp, #16]
   292ec:	ldp	x21, x22, [sp, #32]
   292f0:	ldp	x23, x24, [sp, #48]
   292f4:	ldp	x25, x26, [sp, #64]
   292f8:	ldp	x27, x28, [sp, #80]
   292fc:	ldp	x29, x30, [sp], #160
   29300:	ret
   29304:	mov	x2, #0x0                   	// #0
   29308:	b	291bc <mpfr_fac_ui@@Base+0x134>
   2930c:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   29310:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   29314:	add	x2, x2, #0xd20
   29318:	add	x0, x0, #0x620
   2931c:	mov	w1, #0x64                  	// #100
   29320:	bl	cb40 <mpfr_assert_fail@plt>
   29324:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   29328:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2932c:	add	x2, x2, #0x610
   29330:	add	x0, x0, #0x620
   29334:	mov	w1, #0x4d                  	// #77
   29338:	bl	cb40 <mpfr_assert_fail@plt>
   2933c:	cbnz	w28, 293c0 <mpfr_fac_ui@@Base+0x338>
   29340:	mov	w0, w28
   29344:	ldp	x19, x20, [sp, #16]
   29348:	ldp	x21, x22, [sp, #32]
   2934c:	ldp	x23, x24, [sp, #48]
   29350:	ldp	x25, x26, [sp, #64]
   29354:	ldp	x27, x28, [sp, #80]
   29358:	ldp	x29, x30, [sp], #160
   2935c:	ret
   29360:	mov	x0, x26
   29364:	bl	c070 <mpfr_clear@plt>
   29368:	ldr	x1, [x23, #16]
   2936c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   29370:	ldr	x2, [x0, #2576]
   29374:	add	x0, x0, #0xa10
   29378:	blr	x2
   2937c:	ldr	w2, [sp, #100]
   29380:	str	w2, [x24, x0]
   29384:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   29388:	ldr	x2, [x0, #2512]
   2938c:	add	x0, x0, #0x9d0
   29390:	blr	x2
   29394:	ldr	x2, [sp, #104]
   29398:	str	x2, [x24, x0]
   2939c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   293a0:	ldr	x3, [x0, #2544]
   293a4:	add	x0, x0, #0x9f0
   293a8:	blr	x3
   293ac:	ldr	x3, [sp, #112]
   293b0:	str	x3, [x24, x0]
   293b4:	cmp	x3, x1
   293b8:	ccmp	x2, x1, #0x0, ge  // ge = tcont
   293bc:	b.gt	292d0 <mpfr_fac_ui@@Base+0x248>
   293c0:	ldr	w0, [sp, #100]
   293c4:	ldp	x19, x20, [sp, #16]
   293c8:	orr	w1, w0, #0x8
   293cc:	ldp	x21, x22, [sp, #32]
   293d0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   293d4:	ldr	x2, [x0, #2576]
   293d8:	add	x0, x0, #0xa10
   293dc:	blr	x2
   293e0:	str	w1, [x24, x0]
   293e4:	mov	w0, w28
   293e8:	ldp	x23, x24, [sp, #48]
   293ec:	ldp	x25, x26, [sp, #64]
   293f0:	ldp	x27, x28, [sp, #80]
   293f4:	ldp	x29, x30, [sp], #160
   293f8:	ret
   293fc:	mov	w3, w2
   29400:	mov	x1, #0x1                   	// #1
   29404:	mov	x2, #0x0                   	// #0
   29408:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   2940c:	mov	w28, w0
   29410:	mov	w0, w28
   29414:	ldp	x25, x26, [sp, #64]
   29418:	ldp	x27, x28, [sp, #80]
   2941c:	ldp	x29, x30, [sp], #160
   29420:	ret
   29424:	nop

0000000000029428 <mpfr_cosh@@Base>:
   29428:	stp	x29, x30, [sp, #-368]!
   2942c:	mov	x29, sp
   29430:	stp	x23, x24, [sp, #48]
   29434:	mov	x23, x1
   29438:	ldr	x1, [x1, #16]
   2943c:	stp	x19, x20, [sp, #16]
   29440:	mov	x20, x0
   29444:	stp	x21, x22, [sp, #32]
   29448:	mov	w21, w2
   2944c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   29450:	cmp	x1, x2
   29454:	b.le	29834 <mpfr_cosh@@Base+0x40c>
   29458:	stp	x25, x26, [sp, #64]
   2945c:	mrs	x25, tpidr_el0
   29460:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   29464:	ldr	x2, [x0, #2576]
   29468:	add	x0, x0, #0xa10
   2946c:	blr	x2
   29470:	add	x6, x25, x0
   29474:	stp	x27, x28, [sp, #80]
   29478:	ldr	w0, [x25, x0]
   2947c:	str	w0, [sp, #100]
   29480:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   29484:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   29488:	neg	x2, x1, lsl #1
   2948c:	ldr	x22, [x20]
   29490:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   29494:	ldr	x5, [x0, #2512]
   29498:	add	x0, x0, #0x9d0
   2949c:	blr	x5
   294a0:	add	x28, x25, x0
   294a4:	ldr	x0, [x25, x0]
   294a8:	str	x0, [sp, #104]
   294ac:	str	x4, [x28]
   294b0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   294b4:	ldr	x5, [x0, #2544]
   294b8:	add	x0, x0, #0x9f0
   294bc:	blr	x5
   294c0:	add	x27, x25, x0
   294c4:	ldr	x26, [x25, x0]
   294c8:	cmp	x2, #0x0
   294cc:	str	x3, [x27]
   294d0:	b.le	294e0 <mpfr_cosh@@Base+0xb8>
   294d4:	add	x0, x22, #0x1
   294d8:	cmp	x2, x0
   294dc:	b.hi	296fc <mpfr_cosh@@Base+0x2d4>  // b.pmore
   294e0:	ldr	x0, [x23]
   294e4:	str	x0, [sp, #128]
   294e8:	ldr	x0, [x23, #24]
   294ec:	mov	w2, #0x1                   	// #1
   294f0:	str	w2, [sp, #136]
   294f4:	cmp	x22, #0x1
   294f8:	str	x1, [sp, #144]
   294fc:	add	x1, x22, #0x3
   29500:	str	x0, [sp, #152]
   29504:	b.eq	29864 <mpfr_cosh@@Base+0x43c>  // b.none
   29508:	b.le	298dc <mpfr_cosh@@Base+0x4b4>
   2950c:	sub	x0, x22, #0x1
   29510:	mov	w19, #0x40                  	// #64
   29514:	clz	x0, x0
   29518:	mov	x2, #0x7fffffffffffff00    	// #9223372036854775552
   2951c:	sub	w0, w19, w0
   29520:	add	x19, x1, w0, sxtw
   29524:	cmp	x19, x2
   29528:	b.ge	298d8 <mpfr_cosh@@Base+0x4b0>  // b.tcont
   2952c:	sub	x28, x19, #0x1
   29530:	asr	x28, x28, #6
   29534:	add	x28, x28, #0x1
   29538:	lsl	x0, x28, #1
   2953c:	cmp	x0, #0x10
   29540:	b.gt	29784 <mpfr_cosh@@Base+0x35c>
   29544:	add	x1, sp, #0xf0
   29548:	stp	xzr, x1, [sp, #224]
   2954c:	mov	x0, x1
   29550:	add	x27, sp, #0x80
   29554:	add	x23, sp, #0xc0
   29558:	add	x24, sp, #0xa0
   2955c:	mov	w2, #0x1                   	// #1
   29560:	add	x1, x0, x28, lsl #3
   29564:	mov	x3, #0x40                  	// #64
   29568:	str	x3, [sp, #112]
   2956c:	str	x19, [sp, #160]
   29570:	str	w2, [sp, #168]
   29574:	stp	x0, x19, [sp, #184]
   29578:	str	w2, [sp, #200]
   2957c:	str	x1, [sp, #216]
   29580:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   29584:	ldr	x1, [x0, #2576]
   29588:	add	x0, x0, #0xa10
   2958c:	blr	x1
   29590:	add	x28, x25, x0
   29594:	mov	x1, x27
   29598:	mov	w2, #0x3                   	// #3
   2959c:	str	wzr, [x25, x0]
   295a0:	mov	x0, x23
   295a4:	bl	c750 <mpfr_exp@plt>
   295a8:	ldr	w0, [x28]
   295ac:	tbnz	w0, #1, 298f4 <mpfr_cosh@@Base+0x4cc>
   295b0:	mov	x2, x23
   295b4:	mov	w3, #0x2                   	// #2
   295b8:	mov	x1, #0x1                   	// #1
   295bc:	mov	x0, x24
   295c0:	bl	c2f0 <mpfr_ui_div@plt>
   295c4:	mov	x2, x24
   295c8:	mov	x1, x23
   295cc:	mov	w3, #0x2                   	// #2
   295d0:	mov	x0, x24
   295d4:	bl	c1a0 <mpfr_add@plt>
   295d8:	mov	x1, x24
   295dc:	mov	x2, #0x1                   	// #1
   295e0:	mov	x0, x24
   295e4:	mov	w3, #0x0                   	// #0
   295e8:	bl	c8f0 <mpfr_div_2ui@plt>
   295ec:	ldr	x1, [sp, #176]
   295f0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   295f4:	sub	x2, x19, #0x3
   295f8:	cmp	x1, x0
   295fc:	b.le	29798 <mpfr_cosh@@Base+0x370>
   29600:	ldr	x1, [sp, #160]
   29604:	cmp	w21, #0x0
   29608:	ldr	x0, [sp, #184]
   2960c:	sub	x1, x1, #0x1
   29610:	cinc	x3, x22, eq  // eq = none
   29614:	asr	x1, x1, #6
   29618:	add	x1, x1, #0x1
   2961c:	bl	c370 <mpfr_round_p@plt>
   29620:	cbz	w0, 29798 <mpfr_cosh@@Base+0x370>
   29624:	ldr	w3, [sp, #168]
   29628:	mov	x1, x24
   2962c:	mov	w2, w21
   29630:	mov	x0, x20
   29634:	bl	c6a0 <mpfr_set4@plt>
   29638:	mov	w19, w0
   2963c:	ldr	x1, [sp, #224]
   29640:	cbnz	x1, 296f0 <mpfr_cosh@@Base+0x2c8>
   29644:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   29648:	ldr	x1, [x0, #2576]
   2964c:	add	x0, x0, #0xa10
   29650:	blr	x1
   29654:	ldr	w1, [sp, #100]
   29658:	str	w1, [x25, x0]
   2965c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   29660:	ldr	x2, [x0, #2512]
   29664:	add	x0, x0, #0x9d0
   29668:	blr	x2
   2966c:	ldr	x1, [x20, #16]
   29670:	ldr	x2, [sp, #104]
   29674:	str	x2, [x25, x0]
   29678:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2967c:	ldr	x3, [x0, #2544]
   29680:	add	x0, x0, #0x9f0
   29684:	blr	x3
   29688:	str	x26, [x25, x0]
   2968c:	cmp	x26, x1
   29690:	ccmp	x2, x1, #0x0, ge  // ge = tcont
   29694:	b.le	296cc <mpfr_cosh@@Base+0x2a4>
   29698:	mov	w1, w19
   2969c:	mov	w2, w21
   296a0:	mov	x0, x20
   296a4:	bl	cb30 <mpfr_check_range@plt>
   296a8:	ldp	x25, x26, [sp, #64]
   296ac:	mov	w19, w0
   296b0:	ldp	x27, x28, [sp, #80]
   296b4:	mov	w0, w19
   296b8:	ldp	x19, x20, [sp, #16]
   296bc:	ldp	x21, x22, [sp, #32]
   296c0:	ldp	x23, x24, [sp, #48]
   296c4:	ldp	x29, x30, [sp], #368
   296c8:	ret
   296cc:	cbnz	w19, 29748 <mpfr_cosh@@Base+0x320>
   296d0:	mov	w0, w19
   296d4:	ldp	x19, x20, [sp, #16]
   296d8:	ldp	x21, x22, [sp, #32]
   296dc:	ldp	x23, x24, [sp, #48]
   296e0:	ldp	x25, x26, [sp, #64]
   296e4:	ldp	x27, x28, [sp, #80]
   296e8:	ldp	x29, x30, [sp], #368
   296ec:	ret
   296f0:	ldr	x0, [sp, #232]
   296f4:	bl	cc20 <mpfr_free_func@plt>
   296f8:	b	29644 <mpfr_cosh@@Base+0x21c>
   296fc:	adrp	x1, 7f000 <__gmpfr_l2b@@Base+0x200>
   29700:	mov	w4, w21
   29704:	mov	x0, x20
   29708:	mov	w3, #0x1                   	// #1
   2970c:	ldr	x1, [x1, #3928]
   29710:	str	x6, [sp, #112]
   29714:	bl	c540 <mpfr_round_near_x@plt>
   29718:	mov	w19, w0
   2971c:	ldr	x6, [sp, #112]
   29720:	cbz	w0, 29870 <mpfr_cosh@@Base+0x448>
   29724:	ldr	w1, [sp, #100]
   29728:	ldr	x0, [x20, #16]
   2972c:	str	w1, [x6]
   29730:	ldr	x1, [sp, #104]
   29734:	str	x26, [x27]
   29738:	str	x1, [x28]
   2973c:	cmp	x26, x0
   29740:	ccmp	x1, x0, #0x0, ge  // ge = tcont
   29744:	b.gt	29698 <mpfr_cosh@@Base+0x270>
   29748:	ldr	w0, [sp, #100]
   2974c:	ldp	x27, x28, [sp, #80]
   29750:	orr	w24, w0, #0x8
   29754:	ldp	x21, x22, [sp, #32]
   29758:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2975c:	ldr	x1, [x0, #2576]
   29760:	add	x0, x0, #0xa10
   29764:	blr	x1
   29768:	str	w24, [x25, x0]
   2976c:	mov	w0, w19
   29770:	ldp	x19, x20, [sp, #16]
   29774:	ldp	x23, x24, [sp, #48]
   29778:	ldp	x25, x26, [sp, #64]
   2977c:	ldp	x29, x30, [sp], #368
   29780:	ret
   29784:	lsl	x0, x28, #4
   29788:	str	x0, [sp, #224]
   2978c:	bl	ccf0 <mpfr_allocate_func@plt>
   29790:	str	x0, [sp, #232]
   29794:	b	29550 <mpfr_cosh@@Base+0x128>
   29798:	ldr	x1, [sp, #112]
   2979c:	mov	x0, #0xfffffffffffffeff    	// #-257
   297a0:	movk	x0, #0x7fff, lsl #48
   297a4:	sub	x0, x0, x19
   297a8:	cmp	x0, x1
   297ac:	b.lt	2987c <mpfr_cosh@@Base+0x454>  // b.tstop
   297b0:	ldr	x0, [sp, #112]
   297b4:	ldr	x1, [sp, #224]
   297b8:	add	x19, x19, x0
   297bc:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   297c0:	cmp	x19, x0
   297c4:	add	x28, x19, x19, lsr #63
   297c8:	asr	x0, x28, #1
   297cc:	str	x0, [sp, #112]
   297d0:	b.ge	298d8 <mpfr_cosh@@Base+0x4b0>  // b.tcont
   297d4:	sub	x3, x19, #0x1
   297d8:	asr	x3, x3, #6
   297dc:	add	x3, x3, #0x1
   297e0:	str	x3, [sp, #120]
   297e4:	lsl	x2, x3, #4
   297e8:	str	x2, [sp, #224]
   297ec:	cbz	x1, 29820 <mpfr_cosh@@Base+0x3f8>
   297f0:	ldr	x0, [sp, #232]
   297f4:	bl	c1c0 <mpfr_reallocate_func@plt>
   297f8:	str	x0, [sp, #232]
   297fc:	ldr	x3, [sp, #120]
   29800:	mov	w1, #0x1                   	// #1
   29804:	add	x3, x0, x3, lsl #3
   29808:	str	x19, [sp, #160]
   2980c:	str	w1, [sp, #168]
   29810:	stp	x0, x19, [sp, #184]
   29814:	str	w1, [sp, #200]
   29818:	str	x3, [sp, #216]
   2981c:	b	29580 <mpfr_cosh@@Base+0x158>
   29820:	mov	x0, x2
   29824:	bl	ccf0 <mpfr_allocate_func@plt>
   29828:	str	x0, [sp, #232]
   2982c:	ldr	x3, [sp, #120]
   29830:	b	29800 <mpfr_cosh@@Base+0x3d8>
   29834:	mov	x3, #0x2                   	// #2
   29838:	movk	x3, #0x8000, lsl #48
   2983c:	cmp	x1, x3
   29840:	b.eq	298a8 <mpfr_cosh@@Base+0x480>  // b.none
   29844:	cmp	x1, x2
   29848:	b.eq	29894 <mpfr_cosh@@Base+0x46c>  // b.none
   2984c:	mov	w3, w21
   29850:	mov	x2, #0x0                   	// #0
   29854:	mov	x1, #0x1                   	// #1
   29858:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   2985c:	mov	w19, w0
   29860:	b	296b4 <mpfr_cosh@@Base+0x28c>
   29864:	mov	x28, x22
   29868:	mov	x19, #0x4                   	// #4
   2986c:	b	29544 <mpfr_cosh@@Base+0x11c>
   29870:	ldr	x22, [x20]
   29874:	ldr	x1, [x23, #16]
   29878:	b	294e0 <mpfr_cosh@@Base+0xb8>
   2987c:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   29880:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   29884:	add	x2, x2, #0xd20
   29888:	add	x0, x0, #0x630
   2988c:	mov	w1, #0x76                  	// #118
   29890:	bl	cb40 <mpfr_assert_fail@plt>
   29894:	mov	w0, #0x1                   	// #1
   29898:	mov	w19, #0x0                   	// #0
   2989c:	str	w0, [x20, #8]
   298a0:	str	x1, [x20, #16]
   298a4:	b	296b4 <mpfr_cosh@@Base+0x28c>
   298a8:	mrs	x2, tpidr_el0
   298ac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   298b0:	ldr	x3, [x0, #2576]
   298b4:	add	x0, x0, #0xa10
   298b8:	blr	x3
   298bc:	add	x0, x2, x0
   298c0:	str	x1, [x20, #16]
   298c4:	mov	w19, #0x0                   	// #0
   298c8:	ldr	w1, [x0]
   298cc:	orr	w1, w1, #0x4
   298d0:	str	w1, [x0]
   298d4:	b	296b4 <mpfr_cosh@@Base+0x28c>
   298d8:	bl	c8e0 <mpfr_abort_prec_max@plt>
   298dc:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   298e0:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   298e4:	add	x2, x2, #0xd08
   298e8:	add	x0, x0, #0x630
   298ec:	mov	w1, #0x53                  	// #83
   298f0:	bl	cb40 <mpfr_assert_fail@plt>
   298f4:	mov	w1, w21
   298f8:	mov	x0, x20
   298fc:	mov	w2, #0x1                   	// #1
   29900:	bl	bf40 <mpfr_overflow@plt>
   29904:	ldr	w1, [sp, #100]
   29908:	mov	w19, w0
   2990c:	orr	w1, w1, #0x2
   29910:	str	w1, [sp, #100]
   29914:	b	2963c <mpfr_cosh@@Base+0x214>

0000000000029918 <mpfr_sinh@@Base>:
   29918:	stp	x29, x30, [sp, #-368]!
   2991c:	mov	x29, sp
   29920:	ldr	x3, [x1, #16]
   29924:	stp	x19, x20, [sp, #16]
   29928:	stp	x21, x22, [sp, #32]
   2992c:	mov	x22, x1
   29930:	mov	x21, x0
   29934:	stp	x23, x24, [sp, #48]
   29938:	mov	w23, w2
   2993c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   29940:	cmp	x3, x2
   29944:	b.le	29dac <mpfr_sinh@@Base+0x494>
   29948:	neg	x2, x3, lsl #1
   2994c:	cmp	x2, #0x0
   29950:	ldr	x5, [x0]
   29954:	b.le	29968 <mpfr_sinh@@Base+0x50>
   29958:	add	x2, x2, #0x2
   2995c:	add	x4, x5, #0x1
   29960:	cmp	x4, x2
   29964:	b.cc	29d84 <mpfr_sinh@@Base+0x46c>  // b.lo, b.ul, b.last
   29968:	stp	x25, x26, [sp, #64]
   2996c:	stp	x27, x28, [sp, #80]
   29970:	mrs	x20, tpidr_el0
   29974:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   29978:	ldr	x1, [x0, #2576]
   2997c:	add	x0, x0, #0xa10
   29980:	blr	x1
   29984:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   29988:	ldr	x4, [x22]
   2998c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   29990:	ldr	w0, [x20, x0]
   29994:	mov	w8, #0x1                   	// #1
   29998:	str	w0, [sp, #108]
   2999c:	str	x4, [sp, #128]
   299a0:	str	w8, [sp, #136]
   299a4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   299a8:	ldr	x2, [x0, #2512]
   299ac:	add	x0, x0, #0x9d0
   299b0:	blr	x2
   299b4:	add	x2, x20, x0
   299b8:	ldr	x0, [x20, x0]
   299bc:	str	x0, [sp, #112]
   299c0:	str	x6, [x2]
   299c4:	str	x3, [sp, #144]
   299c8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   299cc:	ldr	x7, [x0, #2544]
   299d0:	add	x0, x0, #0x9f0
   299d4:	blr	x7
   299d8:	ldr	x2, [x20, x0]
   299dc:	cmp	x4, x5
   299e0:	ldr	x7, [x22, #24]
   299e4:	str	x1, [x20, x0]
   299e8:	str	x2, [sp, #120]
   299ec:	csel	x4, x4, x5, ge  // ge = tcont
   299f0:	str	x7, [sp, #152]
   299f4:	cmp	x4, #0x1
   299f8:	b.eq	29ddc <mpfr_sinh@@Base+0x4c4>  // b.none
   299fc:	b.le	29e6c <mpfr_sinh@@Base+0x554>
   29a00:	sub	x1, x4, #0x1
   29a04:	mov	w0, #0x40                  	// #64
   29a08:	clz	x1, x1
   29a0c:	sub	w0, w0, w1
   29a10:	add	x4, x4, w0, sxtw
   29a14:	add	x26, x4, #0x4
   29a18:	tbnz	x3, #63, 29d68 <mpfr_sinh@@Base+0x450>
   29a1c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   29a20:	cmp	x26, x0
   29a24:	b.ge	29e84 <mpfr_sinh@@Base+0x56c>  // b.tcont
   29a28:	sub	x19, x26, #0x1
   29a2c:	asr	x19, x19, #6
   29a30:	add	x19, x19, #0x1
   29a34:	lsl	x0, x19, #1
   29a38:	cmp	x0, #0x10
   29a3c:	b.gt	29d70 <mpfr_sinh@@Base+0x458>
   29a40:	add	x1, sp, #0xf0
   29a44:	stp	xzr, x1, [sp, #224]
   29a48:	mov	x0, x1
   29a4c:	add	x28, sp, #0x80
   29a50:	add	x27, sp, #0xa0
   29a54:	add	x24, sp, #0xc0
   29a58:	add	x19, x0, x19, lsl #3
   29a5c:	mov	w1, #0x1                   	// #1
   29a60:	mov	x25, #0x40                  	// #64
   29a64:	str	w1, [sp, #168]
   29a68:	mov	w2, #0x3                   	// #3
   29a6c:	stp	x0, x26, [sp, #184]
   29a70:	str	w1, [sp, #200]
   29a74:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   29a78:	ldr	x1, [x0, #2576]
   29a7c:	add	x0, x0, #0xa10
   29a80:	blr	x1
   29a84:	str	x19, [sp, #216]
   29a88:	add	x19, x20, x0
   29a8c:	mov	x1, x28
   29a90:	str	wzr, [x20, x0]
   29a94:	mov	x0, x27
   29a98:	str	x26, [sp, #160]
   29a9c:	bl	c750 <mpfr_exp@plt>
   29aa0:	ldr	w0, [x19]
   29aa4:	tbnz	w0, #1, 29c24 <mpfr_sinh@@Base+0x30c>
   29aa8:	mov	x2, x27
   29aac:	mov	w3, #0x2                   	// #2
   29ab0:	mov	x1, #0x1                   	// #1
   29ab4:	mov	x0, x24
   29ab8:	ldr	x19, [sp, #176]
   29abc:	bl	c2f0 <mpfr_ui_div@plt>
   29ac0:	mov	x2, x24
   29ac4:	mov	x1, x27
   29ac8:	mov	w3, #0x0                   	// #0
   29acc:	mov	x0, x27
   29ad0:	bl	bb70 <mpfr_sub@plt>
   29ad4:	mov	x1, x27
   29ad8:	mov	x0, x27
   29adc:	mov	w3, #0x0                   	// #0
   29ae0:	mov	x2, #0x1                   	// #1
   29ae4:	bl	c8f0 <mpfr_div_2ui@plt>
   29ae8:	ldr	x0, [sp, #176]
   29aec:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   29af0:	cmp	x0, x1
   29af4:	b.eq	29ce0 <mpfr_sinh@@Base+0x3c8>  // b.none
   29af8:	sub	x19, x19, x0
   29afc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   29b00:	adds	x19, x19, #0x2
   29b04:	csel	x19, x19, xzr, pl  // pl = nfrst
   29b08:	cmp	x0, x1
   29b0c:	add	x19, x19, #0x1
   29b10:	sub	x19, x26, x19
   29b14:	b.le	29ce4 <mpfr_sinh@@Base+0x3cc>
   29b18:	ldr	x1, [sp, #160]
   29b1c:	cmp	w23, #0x0
   29b20:	ldr	x0, [sp, #184]
   29b24:	sub	x1, x1, #0x1
   29b28:	ldr	x3, [x21]
   29b2c:	asr	x1, x1, #6
   29b30:	mov	x2, x19
   29b34:	add	x1, x1, #0x1
   29b38:	cinc	x3, x3, eq  // eq = none
   29b3c:	bl	c370 <mpfr_round_p@plt>
   29b40:	cbz	w0, 29ce4 <mpfr_sinh@@Base+0x3cc>
   29b44:	ldr	w3, [x22, #8]
   29b48:	mov	x1, x27
   29b4c:	mov	w2, w23
   29b50:	mov	x0, x21
   29b54:	bl	c6a0 <mpfr_set4@plt>
   29b58:	mov	w19, w0
   29b5c:	ldr	x1, [sp, #224]
   29b60:	cbnz	x1, 29d48 <mpfr_sinh@@Base+0x430>
   29b64:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   29b68:	ldr	x1, [x0, #2576]
   29b6c:	add	x0, x0, #0xa10
   29b70:	blr	x1
   29b74:	add	x2, x20, x0
   29b78:	ldr	w1, [sp, #108]
   29b7c:	str	w1, [x20, x0]
   29b80:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   29b84:	ldr	x3, [x0, #2512]
   29b88:	add	x0, x0, #0x9d0
   29b8c:	blr	x3
   29b90:	ldr	x3, [sp, #112]
   29b94:	str	x3, [x20, x0]
   29b98:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   29b9c:	ldr	x4, [x0, #2544]
   29ba0:	add	x0, x0, #0x9f0
   29ba4:	blr	x4
   29ba8:	ldr	x1, [x21, #16]
   29bac:	ldr	x4, [sp, #120]
   29bb0:	str	x4, [x20, x0]
   29bb4:	cmp	x4, x1
   29bb8:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   29bbc:	b.le	29bf4 <mpfr_sinh@@Base+0x2dc>
   29bc0:	mov	w1, w19
   29bc4:	mov	w2, w23
   29bc8:	mov	x0, x21
   29bcc:	bl	cb30 <mpfr_check_range@plt>
   29bd0:	mov	w19, w0
   29bd4:	ldp	x25, x26, [sp, #64]
   29bd8:	ldp	x27, x28, [sp, #80]
   29bdc:	mov	w0, w19
   29be0:	ldp	x19, x20, [sp, #16]
   29be4:	ldp	x21, x22, [sp, #32]
   29be8:	ldp	x23, x24, [sp, #48]
   29bec:	ldp	x29, x30, [sp], #368
   29bf0:	ret
   29bf4:	cbz	w19, 29bd4 <mpfr_sinh@@Base+0x2bc>
   29bf8:	ldr	w0, [sp, #108]
   29bfc:	ldp	x25, x26, [sp, #64]
   29c00:	orr	w0, w0, #0x8
   29c04:	ldp	x27, x28, [sp, #80]
   29c08:	str	w0, [x2]
   29c0c:	mov	w0, w19
   29c10:	ldp	x19, x20, [sp, #16]
   29c14:	ldp	x21, x22, [sp, #32]
   29c18:	ldp	x23, x24, [sp, #48]
   29c1c:	ldp	x29, x30, [sp], #368
   29c20:	ret
   29c24:	mov	w3, #0x3                   	// #3
   29c28:	mov	x1, x28
   29c2c:	mov	x2, #0x1                   	// #1
   29c30:	mov	x0, x24
   29c34:	bl	c8f0 <mpfr_div_2ui@plt>
   29c38:	str	wzr, [x19]
   29c3c:	mov	x1, x24
   29c40:	mov	x0, x27
   29c44:	mov	w2, #0x3                   	// #3
   29c48:	bl	baf0 <mpfr_cosh@plt>
   29c4c:	ldr	w0, [x19]
   29c50:	tbnz	w0, #1, 29e48 <mpfr_sinh@@Base+0x530>
   29c54:	mov	x1, x24
   29c58:	mov	w2, #0x3                   	// #3
   29c5c:	mov	x0, x24
   29c60:	bl	29918 <mpfr_sinh@@Base>
   29c64:	mov	x2, x24
   29c68:	mov	x1, x27
   29c6c:	mov	x0, x27
   29c70:	mov	w3, #0x3                   	// #3
   29c74:	str	wzr, [x19]
   29c78:	bl	bd50 <mpfr_mul@plt>
   29c7c:	ldr	w0, [x19]
   29c80:	tbnz	w0, #1, 29e48 <mpfr_sinh@@Base+0x530>
   29c84:	mov	x1, x27
   29c88:	mov	x0, x27
   29c8c:	mov	w3, #0x0                   	// #0
   29c90:	mov	x2, #0x1                   	// #1
   29c94:	str	wzr, [x19]
   29c98:	bl	c2c0 <mpfr_mul_2ui@plt>
   29c9c:	ldr	w0, [x19]
   29ca0:	tbnz	w0, #1, 29e48 <mpfr_sinh@@Base+0x530>
   29ca4:	ldr	x1, [sp, #176]
   29ca8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   29cac:	sub	x2, x26, #0x3
   29cb0:	cmp	x1, x0
   29cb4:	b.le	29ce0 <mpfr_sinh@@Base+0x3c8>
   29cb8:	ldr	x1, [sp, #160]
   29cbc:	cmp	w23, #0x0
   29cc0:	ldr	x0, [sp, #184]
   29cc4:	sub	x1, x1, #0x1
   29cc8:	ldr	x3, [x21]
   29ccc:	asr	x1, x1, #6
   29cd0:	add	x1, x1, #0x1
   29cd4:	cinc	x3, x3, eq  // eq = none
   29cd8:	bl	c370 <mpfr_round_p@plt>
   29cdc:	cbnz	w0, 29b44 <mpfr_sinh@@Base+0x22c>
   29ce0:	mov	x19, x26
   29ce4:	add	x4, x26, x19
   29ce8:	mov	x0, #0xfffffffffffffeff    	// #-257
   29cec:	movk	x0, #0x7fff, lsl #48
   29cf0:	sub	x0, x0, x4
   29cf4:	cmp	x0, x25
   29cf8:	b.lt	29dec <mpfr_sinh@@Base+0x4d4>  // b.tstop
   29cfc:	add	x26, x25, x4
   29d00:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   29d04:	cmp	x26, x0
   29d08:	add	x25, x26, x26, lsr #63
   29d0c:	ldr	x1, [sp, #224]
   29d10:	asr	x25, x25, #1
   29d14:	b.ge	29e84 <mpfr_sinh@@Base+0x56c>  // b.tcont
   29d18:	sub	x19, x26, #0x1
   29d1c:	asr	x19, x19, #6
   29d20:	add	x19, x19, #0x1
   29d24:	lsl	x2, x19, #4
   29d28:	str	x2, [sp, #224]
   29d2c:	cbz	x1, 29d54 <mpfr_sinh@@Base+0x43c>
   29d30:	ldr	x0, [sp, #232]
   29d34:	bl	c1c0 <mpfr_reallocate_func@plt>
   29d38:	str	x0, [sp, #232]
   29d3c:	add	x19, x0, x19, lsl #3
   29d40:	mov	w1, #0x1                   	// #1
   29d44:	b	29a64 <mpfr_sinh@@Base+0x14c>
   29d48:	ldr	x0, [sp, #232]
   29d4c:	bl	cc20 <mpfr_free_func@plt>
   29d50:	b	29b64 <mpfr_sinh@@Base+0x24c>
   29d54:	mov	x0, x2
   29d58:	bl	ccf0 <mpfr_allocate_func@plt>
   29d5c:	str	x0, [sp, #232]
   29d60:	b	29d3c <mpfr_sinh@@Base+0x424>
   29d64:	mov	x26, #0x5                   	// #5
   29d68:	sub	x26, x26, x3, lsl #1
   29d6c:	b	29a1c <mpfr_sinh@@Base+0x104>
   29d70:	lsl	x0, x19, #4
   29d74:	str	x0, [sp, #224]
   29d78:	bl	ccf0 <mpfr_allocate_func@plt>
   29d7c:	str	x0, [sp, #232]
   29d80:	b	29a4c <mpfr_sinh@@Base+0x134>
   29d84:	mov	w4, w23
   29d88:	mov	w3, #0x1                   	// #1
   29d8c:	bl	c540 <mpfr_round_near_x@plt>
   29d90:	mov	w19, w0
   29d94:	cbnz	w0, 29bdc <mpfr_sinh@@Base+0x2c4>
   29d98:	stp	x25, x26, [sp, #64]
   29d9c:	stp	x27, x28, [sp, #80]
   29da0:	ldr	x5, [x21]
   29da4:	ldr	x3, [x22, #16]
   29da8:	b	29970 <mpfr_sinh@@Base+0x58>
   29dac:	mov	x0, #0x2                   	// #2
   29db0:	movk	x0, #0x8000, lsl #48
   29db4:	cmp	x3, x0
   29db8:	b.eq	29e18 <mpfr_sinh@@Base+0x500>  // b.none
   29dbc:	cmp	x3, x2
   29dc0:	b.eq	29e04 <mpfr_sinh@@Base+0x4ec>  // b.none
   29dc4:	ldr	w1, [x1, #8]
   29dc8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   29dcc:	mov	w19, #0x0                   	// #0
   29dd0:	str	w1, [x21, #8]
   29dd4:	str	x0, [x21, #16]
   29dd8:	b	29bdc <mpfr_sinh@@Base+0x2c4>
   29ddc:	tbnz	x3, #63, 29d64 <mpfr_sinh@@Base+0x44c>
   29de0:	mov	x19, x4
   29de4:	mov	x26, #0x5                   	// #5
   29de8:	b	29a40 <mpfr_sinh@@Base+0x128>
   29dec:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   29df0:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   29df4:	add	x2, x2, #0xd20
   29df8:	add	x0, x0, #0x638
   29dfc:	mov	w1, #0xaf                  	// #175
   29e00:	bl	cb40 <mpfr_assert_fail@plt>
   29e04:	ldr	w0, [x1, #8]
   29e08:	mov	w19, #0x0                   	// #0
   29e0c:	str	w0, [x21, #8]
   29e10:	str	x3, [x21, #16]
   29e14:	b	29bdc <mpfr_sinh@@Base+0x2c4>
   29e18:	mrs	x1, tpidr_el0
   29e1c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   29e20:	ldr	x2, [x0, #2576]
   29e24:	add	x0, x0, #0xa10
   29e28:	blr	x2
   29e2c:	add	x0, x1, x0
   29e30:	mov	w19, #0x0                   	// #0
   29e34:	str	x3, [x21, #16]
   29e38:	ldr	w1, [x0]
   29e3c:	orr	w1, w1, #0x4
   29e40:	str	w1, [x0]
   29e44:	b	29bdc <mpfr_sinh@@Base+0x2c4>
   29e48:	ldr	w3, [sp, #108]
   29e4c:	mov	w1, w23
   29e50:	ldr	w2, [x22, #8]
   29e54:	mov	x0, x21
   29e58:	orr	w3, w3, #0x2
   29e5c:	str	w3, [sp, #108]
   29e60:	bl	bf40 <mpfr_overflow@plt>
   29e64:	mov	w19, w0
   29e68:	b	29b5c <mpfr_sinh@@Base+0x244>
   29e6c:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   29e70:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   29e74:	add	x2, x2, #0x610
   29e78:	add	x0, x0, #0x638
   29e7c:	mov	w1, #0x52                  	// #82
   29e80:	bl	cb40 <mpfr_assert_fail@plt>
   29e84:	bl	c8e0 <mpfr_abort_prec_max@plt>

0000000000029e88 <mpfr_tanh@@Base>:
   29e88:	stp	x29, x30, [sp, #-384]!
   29e8c:	mov	x29, sp
   29e90:	ldr	x3, [x1, #16]
   29e94:	stp	x19, x20, [sp, #16]
   29e98:	stp	x21, x22, [sp, #32]
   29e9c:	mov	w22, w2
   29ea0:	mov	x21, x0
   29ea4:	stp	x23, x24, [sp, #48]
   29ea8:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   29eac:	mov	x24, x1
   29eb0:	cmp	x3, x2
   29eb4:	b.le	2a2ec <mpfr_tanh@@Base+0x464>
   29eb8:	neg	x2, x3, lsl #1
   29ebc:	cmp	x2, #0x0
   29ec0:	ldr	x23, [x0]
   29ec4:	b.le	29ed8 <mpfr_tanh@@Base+0x50>
   29ec8:	add	x2, x2, #0x1
   29ecc:	add	x4, x23, #0x1
   29ed0:	cmp	x4, x2
   29ed4:	b.cc	2a288 <mpfr_tanh@@Base+0x400>  // b.lo, b.ul, b.last
   29ed8:	stp	x25, x26, [sp, #64]
   29edc:	mrs	x20, tpidr_el0
   29ee0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   29ee4:	ldr	x1, [x0, #2576]
   29ee8:	add	x0, x0, #0xa10
   29eec:	blr	x1
   29ef0:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   29ef4:	ldr	x7, [x24, #24]
   29ef8:	stp	x3, x7, [sp, #160]
   29efc:	ldr	w0, [x20, x0]
   29f00:	str	w0, [sp, #108]
   29f04:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   29f08:	ldr	x8, [x24]
   29f0c:	add	x25, sp, #0x90
   29f10:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   29f14:	ldr	x1, [x0, #2512]
   29f18:	add	x0, x0, #0x9d0
   29f1c:	blr	x1
   29f20:	add	x5, x20, x0
   29f24:	ldr	x0, [x20, x0]
   29f28:	str	x0, [sp, #120]
   29f2c:	mov	w26, #0x1                   	// #1
   29f30:	ldr	w19, [x24, #8]
   29f34:	mov	x2, #0x0                   	// #0
   29f38:	str	x6, [x5]
   29f3c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   29f40:	ldr	x1, [x0, #2544]
   29f44:	add	x0, x0, #0x9f0
   29f48:	blr	x1
   29f4c:	str	x8, [sp, #144]
   29f50:	ldr	x3, [x20, x0]
   29f54:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
   29f58:	str	x4, [x20, x0]
   29f5c:	mov	x0, x25
   29f60:	str	x3, [sp, #128]
   29f64:	str	w26, [sp, #152]
   29f68:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   29f6c:	tbz	w0, #31, 2a31c <mpfr_tanh@@Base+0x494>
   29f70:	stp	x27, x28, [sp, #80]
   29f74:	cmp	x23, #0x1
   29f78:	b.eq	2a344 <mpfr_tanh@@Base+0x4bc>  // b.none
   29f7c:	b.le	2a3b0 <mpfr_tanh@@Base+0x528>
   29f80:	sub	x4, x23, #0x1
   29f84:	mov	w0, #0x40                  	// #64
   29f88:	clz	x4, x4
   29f8c:	sub	w4, w0, w4
   29f90:	add	x4, x23, w4, sxtw
   29f94:	ldr	x1, [sp, #160]
   29f98:	add	x0, x4, #0x4
   29f9c:	ldr	x4, [sp, #144]
   29fa0:	cmp	x1, #0x0
   29fa4:	sub	x1, x0, x1
   29fa8:	mov	x2, #0x7fffffffffffff00    	// #9223372036854775552
   29fac:	csel	x0, x1, x0, lt  // lt = tstop
   29fb0:	cmp	x4, x0
   29fb4:	csel	x27, x4, x0, ge  // ge = tcont
   29fb8:	cmp	x27, x2
   29fbc:	b.ge	2a3ac <mpfr_tanh@@Base+0x524>  // b.tcont
   29fc0:	sub	x26, x27, #0x1
   29fc4:	asr	x26, x26, #6
   29fc8:	add	x26, x26, #0x1
   29fcc:	lsl	x0, x26, #1
   29fd0:	cmp	x0, #0x10
   29fd4:	b.gt	2a1cc <mpfr_tanh@@Base+0x344>
   29fd8:	add	x1, sp, #0x100
   29fdc:	stp	xzr, x1, [sp, #240]
   29fe0:	mov	x0, x1
   29fe4:	add	x28, sp, #0xd0
   29fe8:	add	x24, sp, #0xb0
   29fec:	add	x1, x0, x26, lsl #3
   29ff0:	mov	w2, #0x1                   	// #1
   29ff4:	mov	x3, #0x40                  	// #64
   29ff8:	mov	x26, #0x8000000000000003    	// #-9223372036854775805
   29ffc:	str	x3, [sp, #136]
   2a000:	str	x27, [sp, #176]
   2a004:	str	w2, [sp, #184]
   2a008:	stp	x0, x27, [sp, #200]
   2a00c:	str	w2, [sp, #216]
   2a010:	str	x1, [sp, #232]
   2a014:	mov	w3, #0x0                   	// #0
   2a018:	mov	x1, x25
   2a01c:	mov	x2, #0x1                   	// #1
   2a020:	mov	x0, x28
   2a024:	bl	c2c0 <mpfr_mul_2ui@plt>
   2a028:	mov	x1, x28
   2a02c:	mov	x0, x28
   2a030:	mov	w2, #0x0                   	// #0
   2a034:	bl	c750 <mpfr_exp@plt>
   2a038:	ldr	x5, [sp, #224]
   2a03c:	cmp	x5, x26
   2a040:	b.eq	2a2ac <mpfr_tanh@@Base+0x424>  // b.none
   2a044:	mov	x1, x28
   2a048:	mov	w3, #0x3                   	// #3
   2a04c:	mov	x2, #0x1                   	// #1
   2a050:	mov	x0, x24
   2a054:	str	x5, [sp, #112]
   2a058:	bl	c260 <mpfr_add_ui@plt>
   2a05c:	mov	x1, x28
   2a060:	mov	w3, #0x2                   	// #2
   2a064:	mov	x2, #0x1                   	// #1
   2a068:	mov	x0, x28
   2a06c:	bl	c530 <mpfr_sub_ui@plt>
   2a070:	ldr	x5, [sp, #112]
   2a074:	mov	x2, x24
   2a078:	ldr	x0, [sp, #224]
   2a07c:	mov	x1, x28
   2a080:	mov	w3, #0x0                   	// #0
   2a084:	sub	x5, x5, x0
   2a088:	mov	x0, x24
   2a08c:	str	x5, [sp, #112]
   2a090:	bl	c620 <mpfr_div@plt>
   2a094:	ldr	x5, [sp, #112]
   2a098:	mov	x0, #0x2                   	// #2
   2a09c:	cmp	x5, x0
   2a0a0:	csel	x5, x5, x0, ge  // ge = tcont
   2a0a4:	add	x2, x5, x0
   2a0a8:	cmp	x5, x27, asr #1
   2a0ac:	sub	x2, x27, x2
   2a0b0:	ldr	x0, [sp, #192]
   2a0b4:	b.ge	2a1e4 <mpfr_tanh@@Base+0x35c>  // b.tcont
   2a0b8:	cmp	x0, x26
   2a0bc:	b.le	2a1ec <mpfr_tanh@@Base+0x364>
   2a0c0:	ldr	x1, [sp, #176]
   2a0c4:	cmp	w22, #0x0
   2a0c8:	ldr	x0, [sp, #200]
   2a0cc:	sub	x1, x1, #0x1
   2a0d0:	cinc	x3, x23, eq  // eq = none
   2a0d4:	asr	x1, x1, #6
   2a0d8:	add	x1, x1, #0x1
   2a0dc:	bl	c370 <mpfr_round_p@plt>
   2a0e0:	cbz	w0, 2a1e0 <mpfr_tanh@@Base+0x358>
   2a0e4:	mov	w3, w19
   2a0e8:	mov	x1, x24
   2a0ec:	mov	w2, w22
   2a0f0:	mov	x0, x21
   2a0f4:	bl	c6a0 <mpfr_set4@plt>
   2a0f8:	mov	w19, w0
   2a0fc:	ldp	x27, x28, [sp, #80]
   2a100:	ldr	x1, [sp, #240]
   2a104:	cbnz	x1, 2a1c0 <mpfr_tanh@@Base+0x338>
   2a108:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2a10c:	ldr	x1, [x0, #2576]
   2a110:	add	x0, x0, #0xa10
   2a114:	blr	x1
   2a118:	add	x2, x20, x0
   2a11c:	ldr	w1, [sp, #108]
   2a120:	str	w1, [x20, x0]
   2a124:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2a128:	ldr	x3, [x0, #2512]
   2a12c:	add	x0, x0, #0x9d0
   2a130:	blr	x3
   2a134:	ldr	x3, [sp, #120]
   2a138:	str	x3, [x20, x0]
   2a13c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2a140:	ldr	x4, [x0, #2544]
   2a144:	add	x0, x0, #0x9f0
   2a148:	blr	x4
   2a14c:	ldr	x1, [x21, #16]
   2a150:	ldr	x4, [sp, #128]
   2a154:	str	x4, [x20, x0]
   2a158:	cmp	x4, x1
   2a15c:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   2a160:	b.le	2a194 <mpfr_tanh@@Base+0x30c>
   2a164:	mov	w1, w19
   2a168:	mov	w2, w22
   2a16c:	mov	x0, x21
   2a170:	bl	cb30 <mpfr_check_range@plt>
   2a174:	ldp	x25, x26, [sp, #64]
   2a178:	mov	w19, w0
   2a17c:	mov	w0, w19
   2a180:	ldp	x19, x20, [sp, #16]
   2a184:	ldp	x21, x22, [sp, #32]
   2a188:	ldp	x23, x24, [sp, #48]
   2a18c:	ldp	x29, x30, [sp], #384
   2a190:	ret
   2a194:	cbz	w19, 2a1a4 <mpfr_tanh@@Base+0x31c>
   2a198:	ldr	w0, [sp, #108]
   2a19c:	orr	w0, w0, #0x8
   2a1a0:	str	w0, [x2]
   2a1a4:	mov	w0, w19
   2a1a8:	ldp	x19, x20, [sp, #16]
   2a1ac:	ldp	x21, x22, [sp, #32]
   2a1b0:	ldp	x23, x24, [sp, #48]
   2a1b4:	ldp	x25, x26, [sp, #64]
   2a1b8:	ldp	x29, x30, [sp], #384
   2a1bc:	ret
   2a1c0:	ldr	x0, [sp, #248]
   2a1c4:	bl	cc20 <mpfr_free_func@plt>
   2a1c8:	b	2a108 <mpfr_tanh@@Base+0x280>
   2a1cc:	lsl	x0, x26, #4
   2a1d0:	str	x0, [sp, #240]
   2a1d4:	bl	ccf0 <mpfr_allocate_func@plt>
   2a1d8:	str	x0, [sp, #248]
   2a1dc:	b	29fe4 <mpfr_tanh@@Base+0x15c>
   2a1e0:	ldr	x0, [sp, #192]
   2a1e4:	cmp	x0, #0x1
   2a1e8:	b.eq	2a2ac <mpfr_tanh@@Base+0x424>  // b.none
   2a1ec:	ldr	x1, [sp, #136]
   2a1f0:	mov	x0, #0xfffffffffffffeff    	// #-257
   2a1f4:	movk	x0, #0x7fff, lsl #48
   2a1f8:	sub	x0, x0, x27
   2a1fc:	cmp	x0, x1
   2a200:	b.lt	2a364 <mpfr_tanh@@Base+0x4dc>  // b.tstop
   2a204:	ldr	x0, [sp, #136]
   2a208:	ldr	x1, [sp, #240]
   2a20c:	add	x27, x27, x0
   2a210:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2a214:	cmp	x27, x0
   2a218:	add	x0, x27, x27, lsr #63
   2a21c:	asr	x0, x0, #1
   2a220:	str	x0, [sp, #136]
   2a224:	b.ge	2a3ac <mpfr_tanh@@Base+0x524>  // b.tcont
   2a228:	sub	x3, x27, #0x1
   2a22c:	asr	x3, x3, #6
   2a230:	add	x3, x3, #0x1
   2a234:	str	x3, [sp, #112]
   2a238:	lsl	x2, x3, #4
   2a23c:	str	x2, [sp, #240]
   2a240:	cbz	x1, 2a274 <mpfr_tanh@@Base+0x3ec>
   2a244:	ldr	x0, [sp, #248]
   2a248:	bl	c1c0 <mpfr_reallocate_func@plt>
   2a24c:	str	x0, [sp, #248]
   2a250:	ldr	x3, [sp, #112]
   2a254:	mov	w1, #0x1                   	// #1
   2a258:	add	x3, x0, x3, lsl #3
   2a25c:	str	x27, [sp, #176]
   2a260:	str	w1, [sp, #184]
   2a264:	stp	x0, x27, [sp, #200]
   2a268:	str	w1, [sp, #216]
   2a26c:	str	x3, [sp, #232]
   2a270:	b	2a014 <mpfr_tanh@@Base+0x18c>
   2a274:	mov	x0, x2
   2a278:	bl	ccf0 <mpfr_allocate_func@plt>
   2a27c:	str	x0, [sp, #248]
   2a280:	ldr	x3, [sp, #112]
   2a284:	b	2a254 <mpfr_tanh@@Base+0x3cc>
   2a288:	mov	w4, w22
   2a28c:	mov	w3, #0x0                   	// #0
   2a290:	bl	c540 <mpfr_round_near_x@plt>
   2a294:	mov	w19, w0
   2a298:	cbnz	w0, 2a17c <mpfr_tanh@@Base+0x2f4>
   2a29c:	stp	x25, x26, [sp, #64]
   2a2a0:	ldr	x23, [x21]
   2a2a4:	ldr	x3, [x24, #16]
   2a2a8:	b	29edc <mpfr_tanh@@Base+0x54>
   2a2ac:	ldp	x27, x28, [sp, #80]
   2a2b0:	adrp	x1, 7f000 <__gmpfr_l2b@@Base+0x200>
   2a2b4:	mov	w3, w19
   2a2b8:	mov	x0, x21
   2a2bc:	ldr	x1, [x1, #3928]
   2a2c0:	mov	w2, #0x0                   	// #0
   2a2c4:	bl	c6a0 <mpfr_set4@plt>
   2a2c8:	cmp	w22, #0x1
   2a2cc:	b.eq	2a2dc <mpfr_tanh@@Base+0x454>  // b.none
   2a2d0:	add	w0, w22, w19, lsr #31
   2a2d4:	cmp	w0, #0x3
   2a2d8:	b.ne	2a100 <mpfr_tanh@@Base+0x278>  // b.any
   2a2dc:	neg	w19, w19
   2a2e0:	mov	x0, x21
   2a2e4:	bl	c460 <mpfr_nexttozero@plt>
   2a2e8:	b	2a100 <mpfr_tanh@@Base+0x278>
   2a2ec:	mov	x1, #0x2                   	// #2
   2a2f0:	movk	x1, #0x8000, lsl #48
   2a2f4:	cmp	x3, x1
   2a2f8:	b.eq	2a37c <mpfr_tanh@@Base+0x4f4>  // b.none
   2a2fc:	cmp	x3, x2
   2a300:	b.eq	2a34c <mpfr_tanh@@Base+0x4c4>  // b.none
   2a304:	ldr	w1, [x24, #8]
   2a308:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2a30c:	mov	w19, #0x0                   	// #0
   2a310:	str	w1, [x21, #8]
   2a314:	str	x0, [x21, #16]
   2a318:	b	2a17c <mpfr_tanh@@Base+0x2f4>
   2a31c:	mov	x1, #0x1                   	// #1
   2a320:	add	x2, sp, #0x100
   2a324:	add	x0, sp, #0x108
   2a328:	str	x1, [sp, #176]
   2a32c:	str	w1, [sp, #184]
   2a330:	stp	x2, x1, [sp, #200]
   2a334:	str	w26, [sp, #216]
   2a338:	stp	x0, xzr, [sp, #232]
   2a33c:	str	x2, [sp, #248]
   2a340:	b	2a2b0 <mpfr_tanh@@Base+0x428>
   2a344:	mov	x4, x23
   2a348:	b	29f94 <mpfr_tanh@@Base+0x10c>
   2a34c:	ldrsw	x1, [x24, #8]
   2a350:	mov	w3, w22
   2a354:	mov	x2, #0x0                   	// #0
   2a358:	bl	ba80 <mpfr_set_si_2exp@plt>
   2a35c:	mov	w19, w0
   2a360:	b	2a17c <mpfr_tanh@@Base+0x2f4>
   2a364:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   2a368:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2a36c:	add	x2, x2, #0xd20
   2a370:	add	x0, x0, #0x640
   2a374:	mov	w1, #0x9a                  	// #154
   2a378:	bl	cb40 <mpfr_assert_fail@plt>
   2a37c:	mrs	x1, tpidr_el0
   2a380:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2a384:	ldr	x2, [x0, #2576]
   2a388:	add	x0, x0, #0xa10
   2a38c:	blr	x2
   2a390:	add	x0, x1, x0
   2a394:	mov	w19, #0x0                   	// #0
   2a398:	str	x3, [x21, #16]
   2a39c:	ldr	w1, [x0]
   2a3a0:	orr	w1, w1, #0x4
   2a3a4:	str	w1, [x0]
   2a3a8:	b	2a17c <mpfr_tanh@@Base+0x2f4>
   2a3ac:	bl	c8e0 <mpfr_abort_prec_max@plt>
   2a3b0:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   2a3b4:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2a3b8:	add	x2, x2, #0xd08
   2a3bc:	add	x0, x0, #0x640
   2a3c0:	mov	w1, #0x60                  	// #96
   2a3c4:	bl	cb40 <mpfr_assert_fail@plt>

000000000002a3c8 <mpfr_sinh_cosh@@Base>:
   2a3c8:	stp	x29, x30, [sp, #-416]!
   2a3cc:	cmp	x0, x1
   2a3d0:	mov	x29, sp
   2a3d4:	stp	x19, x20, [sp, #16]
   2a3d8:	stp	x21, x22, [sp, #32]
   2a3dc:	str	x2, [sp, #96]
   2a3e0:	b.eq	2aa70 <mpfr_sinh_cosh@@Base+0x6a8>  // b.none
   2a3e4:	mov	x22, x0
   2a3e8:	mov	x21, x1
   2a3ec:	ldr	x0, [sp, #96]
   2a3f0:	ldr	x2, [x0, #16]
   2a3f4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2a3f8:	cmp	x2, x0
   2a3fc:	b.le	2a964 <mpfr_sinh_cosh@@Base+0x59c>
   2a400:	mrs	x20, tpidr_el0
   2a404:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2a408:	ldr	x1, [x0, #2576]
   2a40c:	add	x0, x0, #0xa10
   2a410:	blr	x1
   2a414:	ldr	x1, [x21]
   2a418:	stp	x23, x24, [sp, #48]
   2a41c:	ldr	w0, [x20, x0]
   2a420:	str	w0, [sp, #124]
   2a424:	mov	w24, w3
   2a428:	ldr	x19, [x22]
   2a42c:	stp	x25, x26, [sp, #64]
   2a430:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2a434:	ldr	x4, [x0, #2512]
   2a438:	add	x0, x0, #0x9d0
   2a43c:	blr	x4
   2a440:	add	x4, x20, x0
   2a444:	stp	x27, x28, [sp, #80]
   2a448:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   2a44c:	ldr	x0, [x20, x0]
   2a450:	str	x0, [sp, #112]
   2a454:	str	x2, [sp, #160]
   2a458:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   2a45c:	mov	w7, #0x1                   	// #1
   2a460:	str	w7, [sp, #152]
   2a464:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2a468:	ldr	x6, [x0, #2544]
   2a46c:	add	x0, x0, #0x9f0
   2a470:	blr	x6
   2a474:	ldr	x6, [sp, #96]
   2a478:	cmp	x19, x1
   2a47c:	ldr	x2, [x20, x0]
   2a480:	csel	x1, x19, x1, ge  // ge = tcont
   2a484:	ldr	x8, [x6]
   2a488:	str	x3, [x20, x0]
   2a48c:	ldr	x6, [x6, #24]
   2a490:	str	x5, [x4]
   2a494:	stp	x2, x8, [sp, #136]
   2a498:	cmp	x1, #0x1
   2a49c:	str	x6, [sp, #168]
   2a4a0:	b.eq	2a9bc <mpfr_sinh_cosh@@Base+0x5f4>  // b.none
   2a4a4:	b.le	2aa20 <mpfr_sinh_cosh@@Base+0x658>
   2a4a8:	sub	x0, x1, #0x1
   2a4ac:	mov	w19, #0x40                  	// #64
   2a4b0:	clz	x0, x0
   2a4b4:	mov	x2, #0x7fffffffffffff00    	// #9223372036854775552
   2a4b8:	sub	w19, w19, w0
   2a4bc:	add	x19, x1, w19, sxtw
   2a4c0:	add	x27, x19, #0x4
   2a4c4:	cmp	x27, x2
   2a4c8:	b.ge	2aa1c <mpfr_sinh_cosh@@Base+0x654>  // b.tcont
   2a4cc:	add	x19, x19, #0x3
   2a4d0:	asr	x19, x19, #6
   2a4d4:	add	x19, x19, #0x1
   2a4d8:	add	x0, x19, x19, lsl #1
   2a4dc:	cmp	x0, #0x10
   2a4e0:	b.gt	2a918 <mpfr_sinh_cosh@@Base+0x550>
   2a4e4:	add	x1, sp, #0x120
   2a4e8:	stp	xzr, x1, [sp, #272]
   2a4ec:	mov	x0, x1
   2a4f0:	add	x1, sp, #0x90
   2a4f4:	add	x2, x0, x19, lsl #3
   2a4f8:	add	x28, sp, #0xb0
   2a4fc:	add	x25, sp, #0xf0
   2a500:	add	x23, sp, #0xd0
   2a504:	add	x19, x0, x19, lsl #4
   2a508:	mov	x26, #0x40                  	// #64
   2a50c:	str	x1, [sp, #104]
   2a510:	mov	w1, #0x1                   	// #1
   2a514:	str	w1, [sp, #184]
   2a518:	stp	x0, x27, [sp, #200]
   2a51c:	str	w1, [sp, #216]
   2a520:	str	w1, [sp, #248]
   2a524:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2a528:	ldr	x1, [x0, #2576]
   2a52c:	add	x0, x0, #0xa10
   2a530:	blr	x1
   2a534:	ldr	x1, [sp, #104]
   2a538:	str	x19, [sp, #264]
   2a53c:	add	x19, x20, x0
   2a540:	str	wzr, [x20, x0]
   2a544:	mov	x0, x28
   2a548:	str	x27, [sp, #176]
   2a54c:	stp	x2, x27, [sp, #232]
   2a550:	mov	w2, #0x3                   	// #3
   2a554:	bl	c750 <mpfr_exp@plt>
   2a558:	ldr	w0, [x19]
   2a55c:	tbnz	w0, #1, 2aa38 <mpfr_sinh_cosh@@Base+0x670>
   2a560:	mov	x2, x28
   2a564:	mov	w3, #0x2                   	// #2
   2a568:	mov	x1, #0x1                   	// #1
   2a56c:	mov	x0, x25
   2a570:	ldr	x19, [sp, #192]
   2a574:	bl	c2f0 <mpfr_ui_div@plt>
   2a578:	mov	x2, x25
   2a57c:	mov	x1, x28
   2a580:	mov	w3, #0x2                   	// #2
   2a584:	mov	x0, x23
   2a588:	bl	c1a0 <mpfr_add@plt>
   2a58c:	mov	x2, x25
   2a590:	mov	x1, x28
   2a594:	mov	w3, #0x0                   	// #0
   2a598:	mov	x0, x28
   2a59c:	bl	bb70 <mpfr_sub@plt>
   2a5a0:	mov	x1, x23
   2a5a4:	mov	w3, #0x0                   	// #0
   2a5a8:	mov	x2, #0x1                   	// #1
   2a5ac:	mov	x0, x23
   2a5b0:	bl	c8f0 <mpfr_div_2ui@plt>
   2a5b4:	mov	x1, x28
   2a5b8:	mov	x0, x28
   2a5bc:	mov	w3, #0x0                   	// #0
   2a5c0:	mov	x2, #0x1                   	// #1
   2a5c4:	bl	c8f0 <mpfr_div_2ui@plt>
   2a5c8:	ldr	x0, [sp, #192]
   2a5cc:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   2a5d0:	cmp	x0, x1
   2a5d4:	b.eq	2a76c <mpfr_sinh_cosh@@Base+0x3a4>  // b.none
   2a5d8:	sub	x2, x19, x0
   2a5dc:	mov	x6, #0x8000000000000003    	// #-9223372036854775805
   2a5e0:	adds	x2, x2, #0x2
   2a5e4:	csel	x2, x2, xzr, pl  // pl = nfrst
   2a5e8:	cmp	x0, x6
   2a5ec:	add	x2, x2, #0x1
   2a5f0:	sub	x19, x27, x2
   2a5f4:	b.le	2a770 <mpfr_sinh_cosh@@Base+0x3a8>
   2a5f8:	ldr	x1, [sp, #176]
   2a5fc:	cmp	w24, #0x0
   2a600:	ldr	x0, [sp, #200]
   2a604:	sub	x1, x1, #0x1
   2a608:	ldr	x3, [x22]
   2a60c:	cset	x2, eq  // eq = none
   2a610:	asr	x1, x1, #6
   2a614:	str	x2, [sp, #128]
   2a618:	cinc	x3, x3, eq  // eq = none
   2a61c:	add	x1, x1, #0x1
   2a620:	mov	x2, x19
   2a624:	bl	c370 <mpfr_round_p@plt>
   2a628:	cbz	w0, 2a770 <mpfr_sinh_cosh@@Base+0x3a8>
   2a62c:	ldr	x0, [sp, #224]
   2a630:	mov	x6, #0x8000000000000003    	// #-9223372036854775805
   2a634:	cmp	x0, x6
   2a638:	b.le	2a770 <mpfr_sinh_cosh@@Base+0x3a8>
   2a63c:	ldr	x1, [sp, #208]
   2a640:	mov	x2, x19
   2a644:	ldr	x4, [sp, #128]
   2a648:	sub	x1, x1, #0x1
   2a64c:	ldr	x0, [sp, #232]
   2a650:	asr	x1, x1, #6
   2a654:	ldr	x3, [x21]
   2a658:	add	x1, x1, #0x1
   2a65c:	add	x3, x4, x3
   2a660:	bl	c370 <mpfr_round_p@plt>
   2a664:	cbz	w0, 2a770 <mpfr_sinh_cosh@@Base+0x3a8>
   2a668:	ldr	x0, [sp, #96]
   2a66c:	mov	x1, x28
   2a670:	mov	w2, w24
   2a674:	ldr	w3, [x0, #8]
   2a678:	mov	x0, x22
   2a67c:	bl	c6a0 <mpfr_set4@plt>
   2a680:	mov	w19, w0
   2a684:	ldr	w3, [sp, #216]
   2a688:	mov	x1, x23
   2a68c:	mov	w2, w24
   2a690:	mov	x0, x21
   2a694:	bl	c6a0 <mpfr_set4@plt>
   2a698:	mov	w23, w0
   2a69c:	ldr	x1, [sp, #272]
   2a6a0:	cbnz	x1, 2a85c <mpfr_sinh_cosh@@Base+0x494>
   2a6a4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2a6a8:	ldr	x1, [x0, #2576]
   2a6ac:	add	x0, x0, #0xa10
   2a6b0:	blr	x1
   2a6b4:	add	x2, x20, x0
   2a6b8:	ldr	w1, [sp, #124]
   2a6bc:	str	w1, [x20, x0]
   2a6c0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2a6c4:	ldr	x3, [x0, #2512]
   2a6c8:	add	x0, x0, #0x9d0
   2a6cc:	blr	x3
   2a6d0:	ldr	x3, [sp, #112]
   2a6d4:	add	x26, x20, x0
   2a6d8:	str	x3, [x20, x0]
   2a6dc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2a6e0:	ldr	x4, [x0, #2544]
   2a6e4:	add	x0, x0, #0x9f0
   2a6e8:	blr	x4
   2a6ec:	ldr	x1, [x22, #16]
   2a6f0:	add	x25, x20, x0
   2a6f4:	ldr	x4, [sp, #136]
   2a6f8:	str	x4, [x20, x0]
   2a6fc:	cmp	x4, x1
   2a700:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   2a704:	b.le	2a7dc <mpfr_sinh_cosh@@Base+0x414>
   2a708:	mov	w1, w19
   2a70c:	mov	x0, x22
   2a710:	mov	w2, w24
   2a714:	bl	cb30 <mpfr_check_range@plt>
   2a718:	mov	w19, w0
   2a71c:	ldr	x1, [x26]
   2a720:	ldr	x0, [x21, #16]
   2a724:	cmp	x0, x1
   2a728:	b.lt	2a92c <mpfr_sinh_cosh@@Base+0x564>  // b.tstop
   2a72c:	ldr	x1, [x25]
   2a730:	cmp	x0, x1
   2a734:	b.gt	2a92c <mpfr_sinh_cosh@@Base+0x564>
   2a738:	cbnz	w23, 2a8b8 <mpfr_sinh_cosh@@Base+0x4f0>
   2a73c:	cbz	w19, 2a82c <mpfr_sinh_cosh@@Base+0x464>
   2a740:	ldp	x23, x24, [sp, #48]
   2a744:	cmp	w19, #0x0
   2a748:	ldp	x25, x26, [sp, #64]
   2a74c:	cset	w19, le
   2a750:	ldp	x27, x28, [sp, #80]
   2a754:	add	w19, w19, #0x1
   2a758:	mov	w0, w19
   2a75c:	ldp	x19, x20, [sp, #16]
   2a760:	ldp	x21, x22, [sp, #32]
   2a764:	ldp	x29, x30, [sp], #416
   2a768:	ret
   2a76c:	mov	x19, x27
   2a770:	add	x4, x27, x19
   2a774:	mov	x0, #0xfffffffffffffeff    	// #-257
   2a778:	movk	x0, #0x7fff, lsl #48
   2a77c:	sub	x0, x0, x4
   2a780:	cmp	x0, x26
   2a784:	b.lt	2a94c <mpfr_sinh_cosh@@Base+0x584>  // b.tstop
   2a788:	add	x27, x26, x4
   2a78c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2a790:	cmp	x27, x0
   2a794:	add	x26, x27, x27, lsr #63
   2a798:	ldr	x1, [sp, #272]
   2a79c:	asr	x26, x26, #1
   2a7a0:	b.ge	2aa1c <mpfr_sinh_cosh@@Base+0x654>  // b.tcont
   2a7a4:	sub	x19, x27, #0x1
   2a7a8:	asr	x19, x19, #6
   2a7ac:	add	x19, x19, #0x1
   2a7b0:	add	x2, x19, x19, lsl #1
   2a7b4:	lsl	x2, x2, #3
   2a7b8:	str	x2, [sp, #272]
   2a7bc:	cbnz	x1, 2a84c <mpfr_sinh_cosh@@Base+0x484>
   2a7c0:	mov	x0, x2
   2a7c4:	bl	ccf0 <mpfr_allocate_func@plt>
   2a7c8:	str	x0, [sp, #280]
   2a7cc:	add	x2, x0, x19, lsl #3
   2a7d0:	mov	w1, #0x1                   	// #1
   2a7d4:	add	x19, x0, x19, lsl #4
   2a7d8:	b	2a514 <mpfr_sinh_cosh@@Base+0x14c>
   2a7dc:	ldr	x0, [x21, #16]
   2a7e0:	cbz	w19, 2a868 <mpfr_sinh_cosh@@Base+0x4a0>
   2a7e4:	ldr	w1, [sp, #124]
   2a7e8:	orr	w1, w1, #0x8
   2a7ec:	str	w1, [x2]
   2a7f0:	ldr	x1, [sp, #112]
   2a7f4:	cmp	x1, x0
   2a7f8:	b.gt	2a808 <mpfr_sinh_cosh@@Base+0x440>
   2a7fc:	ldr	x1, [sp, #136]
   2a800:	cmp	x1, x0
   2a804:	b.ge	2a8b0 <mpfr_sinh_cosh@@Base+0x4e8>  // b.tcont
   2a808:	mov	w1, w23
   2a80c:	mov	w2, w24
   2a810:	mov	x0, x21
   2a814:	bl	cb30 <mpfr_check_range@plt>
   2a818:	mov	w23, w0
   2a81c:	cmp	w19, #0x0
   2a820:	cset	w19, le
   2a824:	add	w19, w19, #0x1
   2a828:	cbnz	w23, 2a8e8 <mpfr_sinh_cosh@@Base+0x520>
   2a82c:	mov	w0, w19
   2a830:	ldp	x19, x20, [sp, #16]
   2a834:	ldp	x21, x22, [sp, #32]
   2a838:	ldp	x23, x24, [sp, #48]
   2a83c:	ldp	x25, x26, [sp, #64]
   2a840:	ldp	x27, x28, [sp, #80]
   2a844:	ldp	x29, x30, [sp], #416
   2a848:	ret
   2a84c:	ldr	x0, [sp, #280]
   2a850:	bl	c1c0 <mpfr_reallocate_func@plt>
   2a854:	str	x0, [sp, #280]
   2a858:	b	2a7cc <mpfr_sinh_cosh@@Base+0x404>
   2a85c:	ldr	x0, [sp, #280]
   2a860:	bl	cc20 <mpfr_free_func@plt>
   2a864:	b	2a6a4 <mpfr_sinh_cosh@@Base+0x2dc>
   2a868:	ldr	x1, [sp, #112]
   2a86c:	cmp	x1, x0
   2a870:	b.gt	2a894 <mpfr_sinh_cosh@@Base+0x4cc>
   2a874:	ldr	x1, [sp, #136]
   2a878:	cmp	x1, x0
   2a87c:	b.lt	2a894 <mpfr_sinh_cosh@@Base+0x4cc>  // b.tstop
   2a880:	cbz	w23, 2a82c <mpfr_sinh_cosh@@Base+0x464>
   2a884:	ldr	w0, [sp, #124]
   2a888:	orr	w0, w0, #0x8
   2a88c:	str	w0, [x2]
   2a890:	b	2a8e8 <mpfr_sinh_cosh@@Base+0x520>
   2a894:	mov	w1, w23
   2a898:	mov	w2, w24
   2a89c:	mov	x0, x21
   2a8a0:	bl	cb30 <mpfr_check_range@plt>
   2a8a4:	mov	w23, w0
   2a8a8:	cbz	w23, 2a82c <mpfr_sinh_cosh@@Base+0x464>
   2a8ac:	b	2a8e8 <mpfr_sinh_cosh@@Base+0x520>
   2a8b0:	cbz	w23, 2a740 <mpfr_sinh_cosh@@Base+0x378>
   2a8b4:	nop
   2a8b8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2a8bc:	ldr	x1, [x0, #2576]
   2a8c0:	add	x0, x0, #0xa10
   2a8c4:	blr	x1
   2a8c8:	add	x20, x20, x0
   2a8cc:	cmp	w19, #0x0
   2a8d0:	cset	w2, le
   2a8d4:	ldr	w1, [x20]
   2a8d8:	add	w2, w2, #0x1
   2a8dc:	csel	w19, w2, w19, ne  // ne = any
   2a8e0:	orr	w1, w1, #0x8
   2a8e4:	str	w1, [x20]
   2a8e8:	cmp	w23, #0x0
   2a8ec:	orr	w1, w19, #0x4
   2a8f0:	orr	w19, w19, #0x8
   2a8f4:	csel	w19, w19, w1, le
   2a8f8:	mov	w0, w19
   2a8fc:	ldp	x19, x20, [sp, #16]
   2a900:	ldp	x21, x22, [sp, #32]
   2a904:	ldp	x23, x24, [sp, #48]
   2a908:	ldp	x25, x26, [sp, #64]
   2a90c:	ldp	x27, x28, [sp, #80]
   2a910:	ldp	x29, x30, [sp], #416
   2a914:	ret
   2a918:	lsl	x0, x0, #3
   2a91c:	str	x0, [sp, #272]
   2a920:	bl	ccf0 <mpfr_allocate_func@plt>
   2a924:	str	x0, [sp, #280]
   2a928:	b	2a4f0 <mpfr_sinh_cosh@@Base+0x128>
   2a92c:	mov	w1, w23
   2a930:	mov	w2, w24
   2a934:	mov	x0, x21
   2a938:	bl	cb30 <mpfr_check_range@plt>
   2a93c:	mov	w23, w0
   2a940:	cbnz	w19, 2a81c <mpfr_sinh_cosh@@Base+0x454>
   2a944:	cbz	w23, 2a82c <mpfr_sinh_cosh@@Base+0x464>
   2a948:	b	2a8e8 <mpfr_sinh_cosh@@Base+0x520>
   2a94c:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2a950:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2a954:	add	x2, x2, #0x670
   2a958:	add	x0, x0, #0x658
   2a95c:	mov	w1, #0x94                  	// #148
   2a960:	bl	cb40 <mpfr_assert_fail@plt>
   2a964:	mov	x1, #0x2                   	// #2
   2a968:	movk	x1, #0x8000, lsl #48
   2a96c:	cmp	x2, x1
   2a970:	b.eq	2a9e8 <mpfr_sinh_cosh@@Base+0x620>  // b.none
   2a974:	cmp	x2, x0
   2a978:	ldr	x0, [sp, #96]
   2a97c:	b.eq	2a9c8 <mpfr_sinh_cosh@@Base+0x600>  // b.none
   2a980:	ldr	w0, [x0, #8]
   2a984:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   2a988:	str	w0, [x22, #8]
   2a98c:	mov	x2, #0x0                   	// #0
   2a990:	str	x1, [x22, #16]
   2a994:	mov	x0, x21
   2a998:	mov	x1, #0x1                   	// #1
   2a99c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   2a9a0:	cmp	w0, #0x0
   2a9a4:	mov	w19, w0
   2a9a8:	mov	w1, #0x4                   	// #4
   2a9ac:	mov	w0, #0x8                   	// #8
   2a9b0:	csel	w1, w1, w0, gt
   2a9b4:	csel	w19, w1, w19, ne  // ne = any
   2a9b8:	b	2a758 <mpfr_sinh_cosh@@Base+0x390>
   2a9bc:	mov	x19, x1
   2a9c0:	mov	x27, #0x5                   	// #5
   2a9c4:	b	2a4e4 <mpfr_sinh_cosh@@Base+0x11c>
   2a9c8:	ldr	w1, [x0, #8]
   2a9cc:	mov	w19, #0x0                   	// #0
   2a9d0:	str	w1, [x22, #8]
   2a9d4:	mov	w0, #0x1                   	// #1
   2a9d8:	str	x2, [x22, #16]
   2a9dc:	str	w0, [x21, #8]
   2a9e0:	str	x2, [x21, #16]
   2a9e4:	b	2a758 <mpfr_sinh_cosh@@Base+0x390>
   2a9e8:	mrs	x1, tpidr_el0
   2a9ec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2a9f0:	ldr	x3, [x0, #2576]
   2a9f4:	add	x0, x0, #0xa10
   2a9f8:	blr	x3
   2a9fc:	add	x0, x1, x0
   2aa00:	str	x2, [x21, #16]
   2aa04:	mov	w19, #0x0                   	// #0
   2aa08:	str	x2, [x22, #16]
   2aa0c:	ldr	w1, [x0]
   2aa10:	orr	w1, w1, #0x4
   2aa14:	str	w1, [x0]
   2aa18:	b	2a758 <mpfr_sinh_cosh@@Base+0x390>
   2aa1c:	bl	c8e0 <mpfr_abort_prec_max@plt>
   2aa20:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2aa24:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2aa28:	add	x2, x2, #0x668
   2aa2c:	add	x0, x0, #0x658
   2aa30:	mov	w1, #0x60                  	// #96
   2aa34:	bl	cb40 <mpfr_assert_fail@plt>
   2aa38:	mov	w1, w24
   2aa3c:	mov	w2, #0x1                   	// #1
   2aa40:	mov	x0, x21
   2aa44:	bl	bf40 <mpfr_overflow@plt>
   2aa48:	ldr	x1, [sp, #96]
   2aa4c:	mov	w23, w0
   2aa50:	mov	w2, w24
   2aa54:	mov	x0, x22
   2aa58:	bl	c320 <mpfr_sinh@plt>
   2aa5c:	mov	w19, w0
   2aa60:	ldr	w1, [sp, #124]
   2aa64:	orr	w1, w1, #0x2
   2aa68:	str	w1, [sp, #124]
   2aa6c:	b	2a69c <mpfr_sinh_cosh@@Base+0x2d4>
   2aa70:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2aa74:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2aa78:	add	x2, x2, #0x648
   2aa7c:	add	x0, x0, #0x658
   2aa80:	mov	w1, #0x28                  	// #40
   2aa84:	stp	x23, x24, [sp, #48]
   2aa88:	stp	x25, x26, [sp, #64]
   2aa8c:	stp	x27, x28, [sp, #80]
   2aa90:	bl	cb40 <mpfr_assert_fail@plt>
   2aa94:	nop

000000000002aa98 <mpfr_acosh@@Base>:
   2aa98:	stp	x29, x30, [sp, #-192]!
   2aa9c:	mov	x29, sp
   2aaa0:	stp	x21, x22, [sp, #32]
   2aaa4:	mov	x21, x1
   2aaa8:	mov	x22, x0
   2aaac:	stp	x19, x20, [sp, #16]
   2aab0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2aab4:	ldr	x0, [x21, #16]
   2aab8:	cmp	x0, x1
   2aabc:	b.le	2ad88 <mpfr_acosh@@Base+0x2f0>
   2aac0:	mov	x0, x21
   2aac4:	mov	x1, #0x1                   	// #1
   2aac8:	stp	x23, x24, [sp, #48]
   2aacc:	mov	w24, w2
   2aad0:	mov	x2, #0x0                   	// #0
   2aad4:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   2aad8:	mov	w19, w0
   2aadc:	cmp	w0, #0x0
   2aae0:	b.lt	2ae58 <mpfr_acosh@@Base+0x3c0>  // b.tstop
   2aae4:	b.eq	2aed8 <mpfr_acosh@@Base+0x440>  // b.none
   2aae8:	mrs	x20, tpidr_el0
   2aaec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2aaf0:	ldr	x1, [x0, #2576]
   2aaf4:	add	x0, x0, #0xa10
   2aaf8:	blr	x1
   2aafc:	stp	x25, x26, [sp, #64]
   2ab00:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2ab04:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   2ab08:	ldr	w0, [x20, x0]
   2ab0c:	str	w0, [sp, #108]
   2ab10:	stp	x27, x28, [sp, #80]
   2ab14:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2ab18:	ldr	x2, [x0, #2512]
   2ab1c:	add	x0, x0, #0x9d0
   2ab20:	blr	x2
   2ab24:	add	x2, x20, x0
   2ab28:	ldr	x25, [x22]
   2ab2c:	ldr	x27, [x20, x0]
   2ab30:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2ab34:	ldr	x4, [x0, #2544]
   2ab38:	add	x0, x0, #0x9f0
   2ab3c:	blr	x4
   2ab40:	str	x3, [x2]
   2ab44:	cmp	x25, #0x1
   2ab48:	ldr	x28, [x20, x0]
   2ab4c:	str	x1, [x20, x0]
   2ab50:	add	x1, x25, #0x4
   2ab54:	b.eq	2aef0 <mpfr_acosh@@Base+0x458>  // b.none
   2ab58:	b.le	2af10 <mpfr_acosh@@Base+0x478>
   2ab5c:	sub	x0, x25, #0x1
   2ab60:	mov	w23, #0x40                  	// #64
   2ab64:	clz	x0, x0
   2ab68:	sub	w0, w23, w0
   2ab6c:	add	x23, x1, w0, sxtw
   2ab70:	add	x0, sp, #0xa0
   2ab74:	add	x26, sp, #0x80
   2ab78:	str	x0, [sp, #120]
   2ab7c:	mov	x0, #0x40                  	// #64
   2ab80:	mov	x1, x23
   2ab84:	str	x0, [sp, #112]
   2ab88:	mov	x0, x26
   2ab8c:	bl	ca80 <mpfr_init2@plt>
   2ab90:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2ab94:	ldr	x1, [x0, #2576]
   2ab98:	add	x0, x0, #0xa10
   2ab9c:	blr	x1
   2aba0:	add	x19, x20, x0
   2aba4:	mov	x2, x21
   2aba8:	mov	x1, x21
   2abac:	mov	w3, #0x3                   	// #3
   2abb0:	str	wzr, [x20, x0]
   2abb4:	mov	x0, x26
   2abb8:	bl	bd50 <mpfr_mul@plt>
   2abbc:	ldr	w0, [x19]
   2abc0:	tbnz	w0, #1, 2ade4 <mpfr_acosh@@Base+0x34c>
   2abc4:	mov	x2, #0x1                   	// #1
   2abc8:	mov	x1, x26
   2abcc:	mov	x0, x26
   2abd0:	mov	w3, #0x3                   	// #3
   2abd4:	ldr	x19, [sp, #144]
   2abd8:	bl	c530 <mpfr_sub_ui@plt>
   2abdc:	ldr	x2, [sp, #144]
   2abe0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2abe4:	cmp	x2, x0
   2abe8:	b.eq	2ae94 <mpfr_acosh@@Base+0x3fc>  // b.none
   2abec:	sub	x19, x19, x2
   2abf0:	mov	x1, x26
   2abf4:	mov	w2, #0x0                   	// #0
   2abf8:	mov	x0, x26
   2abfc:	bl	c930 <mpfr_sqrt@plt>
   2ac00:	mov	w3, #0x0                   	// #0
   2ac04:	mov	x2, x21
   2ac08:	mov	x1, x26
   2ac0c:	mov	x0, x26
   2ac10:	bl	c1a0 <mpfr_add@plt>
   2ac14:	mov	w2, #0x0                   	// #0
   2ac18:	mov	x1, x26
   2ac1c:	mov	x0, x26
   2ac20:	bl	c090 <mpfr_log@plt>
   2ac24:	cmp	x19, #0x0
   2ac28:	ldr	x0, [sp, #144]
   2ac2c:	csinc	x19, x19, xzr, gt
   2ac30:	add	x2, x19, #0x3
   2ac34:	subs	x2, x2, x0
   2ac38:	csinv	x2, x2, xzr, pl  // pl = nfrst
   2ac3c:	add	x2, x2, #0x1
   2ac40:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2ac44:	cmp	x0, x1
   2ac48:	b.le	2ad4c <mpfr_acosh@@Base+0x2b4>
   2ac4c:	ldr	x1, [sp, #128]
   2ac50:	cmp	w24, #0x0
   2ac54:	ldr	x0, [sp, #152]
   2ac58:	sub	x1, x1, #0x1
   2ac5c:	sub	x2, x23, x2
   2ac60:	cinc	x3, x25, eq  // eq = none
   2ac64:	asr	x1, x1, #6
   2ac68:	add	x1, x1, #0x1
   2ac6c:	bl	c370 <mpfr_round_p@plt>
   2ac70:	cbz	w0, 2ad4c <mpfr_acosh@@Base+0x2b4>
   2ac74:	ldr	w3, [sp, #136]
   2ac78:	mov	w2, w24
   2ac7c:	mov	x1, x26
   2ac80:	mov	x0, x22
   2ac84:	bl	c6a0 <mpfr_set4@plt>
   2ac88:	mov	w19, w0
   2ac8c:	mov	x0, x26
   2ac90:	bl	c070 <mpfr_clear@plt>
   2ac94:	ldr	x1, [x22, #16]
   2ac98:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2ac9c:	ldr	x2, [x0, #2576]
   2aca0:	add	x0, x0, #0xa10
   2aca4:	blr	x2
   2aca8:	ldr	w2, [sp, #108]
   2acac:	str	w2, [x20, x0]
   2acb0:	add	x2, x20, x0
   2acb4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2acb8:	ldr	x3, [x0, #2512]
   2acbc:	add	x0, x0, #0x9d0
   2acc0:	blr	x3
   2acc4:	str	x27, [x20, x0]
   2acc8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2accc:	ldr	x3, [x0, #2544]
   2acd0:	add	x0, x0, #0x9f0
   2acd4:	blr	x3
   2acd8:	str	x28, [x20, x0]
   2acdc:	cmp	x28, x1
   2ace0:	ccmp	x27, x1, #0x0, ge  // ge = tcont
   2ace4:	b.le	2ad1c <mpfr_acosh@@Base+0x284>
   2ace8:	mov	w1, w19
   2acec:	mov	w2, w24
   2acf0:	mov	x0, x22
   2acf4:	bl	cb30 <mpfr_check_range@plt>
   2acf8:	mov	w19, w0
   2acfc:	ldp	x23, x24, [sp, #48]
   2ad00:	ldp	x25, x26, [sp, #64]
   2ad04:	ldp	x27, x28, [sp, #80]
   2ad08:	mov	w0, w19
   2ad0c:	ldp	x19, x20, [sp, #16]
   2ad10:	ldp	x21, x22, [sp, #32]
   2ad14:	ldp	x29, x30, [sp], #192
   2ad18:	ret
   2ad1c:	cbz	w19, 2acfc <mpfr_acosh@@Base+0x264>
   2ad20:	ldr	w0, [sp, #108]
   2ad24:	ldp	x23, x24, [sp, #48]
   2ad28:	orr	w26, w0, #0x8
   2ad2c:	ldp	x27, x28, [sp, #80]
   2ad30:	str	w26, [x2]
   2ad34:	mov	w0, w19
   2ad38:	ldp	x19, x20, [sp, #16]
   2ad3c:	ldp	x21, x22, [sp, #32]
   2ad40:	ldp	x25, x26, [sp, #64]
   2ad44:	ldp	x29, x30, [sp], #192
   2ad48:	ret
   2ad4c:	ldr	x1, [sp, #112]
   2ad50:	mov	x0, #0xfffffffffffffeff    	// #-257
   2ad54:	movk	x0, #0x7fff, lsl #48
   2ad58:	sub	x0, x0, x23
   2ad5c:	cmp	x0, x1
   2ad60:	b.lt	2aef8 <mpfr_acosh@@Base+0x460>  // b.tstop
   2ad64:	ldr	x0, [sp, #112]
   2ad68:	add	x23, x23, x0
   2ad6c:	mov	x0, x26
   2ad70:	mov	x1, x23
   2ad74:	add	x2, x23, x23, lsr #63
   2ad78:	asr	x2, x2, #1
   2ad7c:	str	x2, [sp, #112]
   2ad80:	bl	bed0 <mpfr_set_prec@plt>
   2ad84:	b	2ab90 <mpfr_acosh@@Base+0xf8>
   2ad88:	b.ne	2adac <mpfr_acosh@@Base+0x314>  // b.any
   2ad8c:	ldr	w1, [x21, #8]
   2ad90:	cmp	w1, #0x0
   2ad94:	b.le	2adac <mpfr_acosh@@Base+0x314>
   2ad98:	mov	w1, #0x1                   	// #1
   2ad9c:	mov	w19, #0x0                   	// #0
   2ada0:	str	w1, [x22, #8]
   2ada4:	str	x0, [x22, #16]
   2ada8:	b	2ad08 <mpfr_acosh@@Base+0x270>
   2adac:	mrs	x1, tpidr_el0
   2adb0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2adb4:	ldr	x2, [x0, #2576]
   2adb8:	add	x0, x0, #0xa10
   2adbc:	blr	x2
   2adc0:	add	x0, x1, x0
   2adc4:	mov	x1, #0x2                   	// #2
   2adc8:	movk	x1, #0x8000, lsl #48
   2adcc:	str	x1, [x22, #16]
   2add0:	mov	w19, #0x0                   	// #0
   2add4:	ldr	w1, [x0]
   2add8:	orr	w1, w1, #0x4
   2addc:	str	w1, [x0]
   2ade0:	b	2ad08 <mpfr_acosh@@Base+0x270>
   2ade4:	mov	w2, #0x0                   	// #0
   2ade8:	mov	x1, x21
   2adec:	mov	x0, x26
   2adf0:	bl	c090 <mpfr_log@plt>
   2adf4:	ldr	x1, [sp, #144]
   2adf8:	ldr	x19, [sp, #120]
   2adfc:	cmp	x1, x23
   2ae00:	sub	x1, x23, x1
   2ae04:	csinc	x1, x1, xzr, lt  // lt = tstop
   2ae08:	mov	x0, x19
   2ae0c:	bl	ca80 <mpfr_init2@plt>
   2ae10:	mov	w2, #0x0                   	// #0
   2ae14:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2ae18:	ldr	x1, [x0, #2560]
   2ae1c:	add	x0, x0, #0xa00
   2ae20:	blr	x1
   2ae24:	add	x1, x20, x0
   2ae28:	mov	x0, x19
   2ae2c:	bl	c380 <mpfr_cache@plt>
   2ae30:	mov	x2, x19
   2ae34:	mov	x1, x26
   2ae38:	mov	w3, #0x0                   	// #0
   2ae3c:	mov	x0, x26
   2ae40:	bl	c1a0 <mpfr_add@plt>
   2ae44:	mov	x0, x19
   2ae48:	bl	c070 <mpfr_clear@plt>
   2ae4c:	mov	x2, #0x1                   	// #1
   2ae50:	ldr	x0, [sp, #144]
   2ae54:	b	2ac40 <mpfr_acosh@@Base+0x1a8>
   2ae58:	mrs	x1, tpidr_el0
   2ae5c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2ae60:	ldr	x2, [x0, #2576]
   2ae64:	add	x0, x0, #0xa10
   2ae68:	blr	x2
   2ae6c:	add	x0, x1, x0
   2ae70:	mov	x1, #0x2                   	// #2
   2ae74:	movk	x1, #0x8000, lsl #48
   2ae78:	mov	w19, #0x0                   	// #0
   2ae7c:	ldp	x23, x24, [sp, #48]
   2ae80:	str	x1, [x22, #16]
   2ae84:	ldr	w1, [x0]
   2ae88:	orr	w1, w1, #0x4
   2ae8c:	str	w1, [x0]
   2ae90:	b	2ad08 <mpfr_acosh@@Base+0x270>
   2ae94:	mov	x1, x21
   2ae98:	mov	w3, #0x3                   	// #3
   2ae9c:	mov	x2, #0x1                   	// #1
   2aea0:	mov	x0, x26
   2aea4:	bl	c530 <mpfr_sub_ui@plt>
   2aea8:	mov	w3, #0x0                   	// #0
   2aeac:	mov	x1, x26
   2aeb0:	mov	x2, #0x1                   	// #1
   2aeb4:	mov	x0, x26
   2aeb8:	bl	c2c0 <mpfr_mul_2ui@plt>
   2aebc:	mov	w2, #0x0                   	// #0
   2aec0:	mov	x1, x26
   2aec4:	mov	x0, x26
   2aec8:	bl	c930 <mpfr_sqrt@plt>
   2aecc:	mov	x2, #0x1                   	// #1
   2aed0:	ldr	x0, [sp, #144]
   2aed4:	b	2ac40 <mpfr_acosh@@Base+0x1a8>
   2aed8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2aedc:	mov	w1, #0x1                   	// #1
   2aee0:	ldp	x23, x24, [sp, #48]
   2aee4:	str	w1, [x22, #8]
   2aee8:	str	x0, [x22, #16]
   2aeec:	b	2ad08 <mpfr_acosh@@Base+0x270>
   2aef0:	mov	x23, #0x5                   	// #5
   2aef4:	b	2ab70 <mpfr_acosh@@Base+0xd8>
   2aef8:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   2aefc:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2af00:	add	x2, x2, #0xd20
   2af04:	add	x0, x0, #0x6b8
   2af08:	mov	w1, #0x92                  	// #146
   2af0c:	bl	cb40 <mpfr_assert_fail@plt>
   2af10:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   2af14:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2af18:	add	x2, x2, #0xd08
   2af1c:	add	x0, x0, #0x6b8
   2af20:	mov	w1, #0x53                  	// #83
   2af24:	bl	cb40 <mpfr_assert_fail@plt>

000000000002af28 <mpfr_asinh@@Base>:
   2af28:	stp	x29, x30, [sp, #-160]!
   2af2c:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   2af30:	mov	x29, sp
   2af34:	stp	x21, x22, [sp, #32]
   2af38:	mov	w21, w2
   2af3c:	ldr	x2, [x1, #16]
   2af40:	stp	x19, x20, [sp, #16]
   2af44:	stp	x23, x24, [sp, #48]
   2af48:	cmp	x2, x3
   2af4c:	mov	x24, x1
   2af50:	stp	x27, x28, [sp, #80]
   2af54:	mov	x28, x0
   2af58:	b.le	2b0fc <mpfr_asinh@@Base+0x1d4>
   2af5c:	neg	x2, x2, lsl #1
   2af60:	cmp	x2, #0x0
   2af64:	ldr	x22, [x0]
   2af68:	b.le	2af7c <mpfr_asinh@@Base+0x54>
   2af6c:	add	x2, x2, #0x2
   2af70:	add	x3, x22, #0x1
   2af74:	cmp	x3, x2
   2af78:	b.cc	2b0dc <mpfr_asinh@@Base+0x1b4>  // b.lo, b.ul, b.last
   2af7c:	stp	x25, x26, [sp, #64]
   2af80:	ldr	w26, [x24, #8]
   2af84:	cmp	x22, #0x1
   2af88:	add	x1, x22, #0x4
   2af8c:	b.eq	2b240 <mpfr_asinh@@Base+0x318>  // b.none
   2af90:	b.le	2b2a4 <mpfr_asinh@@Base+0x37c>
   2af94:	sub	x0, x22, #0x1
   2af98:	mov	w19, #0x40                  	// #64
   2af9c:	clz	x0, x0
   2afa0:	sub	w0, w19, w0
   2afa4:	add	x19, x1, w0, sxtw
   2afa8:	mrs	x23, tpidr_el0
   2afac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2afb0:	ldr	x1, [x0, #2576]
   2afb4:	add	x0, x0, #0xa10
   2afb8:	blr	x1
   2afbc:	mov	x4, #0x40                  	// #64
   2afc0:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   2afc4:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   2afc8:	add	x27, sp, #0x80
   2afcc:	ldr	w0, [x23, x0]
   2afd0:	mov	x1, x19
   2afd4:	str	w0, [sp, #108]
   2afd8:	adrp	x20, 7f000 <__gmpfr_l2b@@Base+0x200>
   2afdc:	str	x4, [sp, #112]
   2afe0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2afe4:	ldr	x3, [x0, #2512]
   2afe8:	add	x0, x0, #0x9d0
   2afec:	blr	x3
   2aff0:	add	x3, x23, x0
   2aff4:	ldr	x0, [x23, x0]
   2aff8:	str	x0, [sp, #120]
   2affc:	str	x8, [x3]
   2b000:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2b004:	ldr	x4, [x0, #2544]
   2b008:	add	x0, x0, #0x9f0
   2b00c:	blr	x4
   2b010:	ldr	x25, [x23, x0]
   2b014:	str	x2, [x23, x0]
   2b018:	mov	x0, x27
   2b01c:	bl	ca80 <mpfr_init2@plt>
   2b020:	adrp	x0, 7f000 <__gmpfr_l2b@@Base+0x200>
   2b024:	cmp	w26, #0x0
   2b028:	ldr	x20, [x20, #3944]
   2b02c:	ldr	x0, [x0, #4008]
   2b030:	csel	x20, x20, x0, lt  // lt = tstop
   2b034:	mov	x2, x24
   2b038:	mov	x1, x24
   2b03c:	mov	w3, #0x3                   	// #3
   2b040:	mov	x0, x27
   2b044:	bl	bd50 <mpfr_mul@plt>
   2b048:	mov	w3, #0x3                   	// #3
   2b04c:	mov	x1, x27
   2b050:	mov	x2, #0x1                   	// #1
   2b054:	mov	x0, x27
   2b058:	bl	c260 <mpfr_add_ui@plt>
   2b05c:	mov	x1, x27
   2b060:	mov	w2, #0x0                   	// #0
   2b064:	mov	x0, x27
   2b068:	bl	c930 <mpfr_sqrt@plt>
   2b06c:	mov	w3, #0x0                   	// #0
   2b070:	mov	x2, x24
   2b074:	mov	x1, x27
   2b078:	mov	x0, x27
   2b07c:	blr	x20
   2b080:	mov	x1, x27
   2b084:	mov	x0, x27
   2b088:	mov	w2, #0x0                   	// #0
   2b08c:	bl	c090 <mpfr_log@plt>
   2b090:	ldr	x1, [sp, #144]
   2b094:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2b098:	cmp	x1, x0
   2b09c:	b.gt	2b144 <mpfr_asinh@@Base+0x21c>
   2b0a0:	ldr	x1, [sp, #112]
   2b0a4:	mov	x0, #0xfffffffffffffeff    	// #-257
   2b0a8:	movk	x0, #0x7fff, lsl #48
   2b0ac:	sub	x0, x0, x19
   2b0b0:	cmp	x0, x1
   2b0b4:	b.lt	2b28c <mpfr_asinh@@Base+0x364>  // b.tstop
   2b0b8:	ldr	x0, [sp, #112]
   2b0bc:	add	x19, x19, x0
   2b0c0:	mov	x0, x27
   2b0c4:	mov	x1, x19
   2b0c8:	add	x2, x19, x19, lsr #63
   2b0cc:	asr	x2, x2, #1
   2b0d0:	str	x2, [sp, #112]
   2b0d4:	bl	bed0 <mpfr_set_prec@plt>
   2b0d8:	b	2b034 <mpfr_asinh@@Base+0x10c>
   2b0dc:	mov	w4, w21
   2b0e0:	mov	w3, #0x0                   	// #0
   2b0e4:	bl	c540 <mpfr_round_near_x@plt>
   2b0e8:	mov	w19, w0
   2b0ec:	cbnz	w0, 2b128 <mpfr_asinh@@Base+0x200>
   2b0f0:	stp	x25, x26, [sp, #64]
   2b0f4:	ldr	x22, [x28]
   2b0f8:	b	2af80 <mpfr_asinh@@Base+0x58>
   2b0fc:	mov	x0, #0x2                   	// #2
   2b100:	movk	x0, #0x8000, lsl #48
   2b104:	cmp	x2, x0
   2b108:	b.eq	2b25c <mpfr_asinh@@Base+0x334>  // b.none
   2b10c:	cmp	x2, x3
   2b110:	b.eq	2b248 <mpfr_asinh@@Base+0x320>  // b.none
   2b114:	ldr	w1, [x1, #8]
   2b118:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2b11c:	mov	w19, #0x0                   	// #0
   2b120:	str	w1, [x28, #8]
   2b124:	str	x0, [x28, #16]
   2b128:	mov	w0, w19
   2b12c:	ldp	x19, x20, [sp, #16]
   2b130:	ldp	x21, x22, [sp, #32]
   2b134:	ldp	x23, x24, [sp, #48]
   2b138:	ldp	x27, x28, [sp, #80]
   2b13c:	ldp	x29, x30, [sp], #160
   2b140:	ret
   2b144:	ldr	x8, [sp, #128]
   2b148:	cmp	w21, #0x0
   2b14c:	ldr	x0, [sp, #152]
   2b150:	sub	x8, x8, #0x1
   2b154:	mov	x2, #0x4                   	// #4
   2b158:	cinc	x3, x22, eq  // eq = none
   2b15c:	asr	x8, x8, #6
   2b160:	subs	x1, x2, x1
   2b164:	csel	x1, x1, xzr, pl  // pl = nfrst
   2b168:	add	x1, x1, #0x1
   2b16c:	sub	x2, x19, x1
   2b170:	add	x1, x8, #0x1
   2b174:	bl	c370 <mpfr_round_p@plt>
   2b178:	cbz	w0, 2b0a0 <mpfr_asinh@@Base+0x178>
   2b17c:	mov	w3, w26
   2b180:	mov	w2, w21
   2b184:	mov	x1, x27
   2b188:	mov	x0, x28
   2b18c:	bl	c6a0 <mpfr_set4@plt>
   2b190:	mov	w19, w0
   2b194:	mov	x0, x27
   2b198:	bl	c070 <mpfr_clear@plt>
   2b19c:	ldr	x1, [x28, #16]
   2b1a0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2b1a4:	ldr	x2, [x0, #2576]
   2b1a8:	add	x0, x0, #0xa10
   2b1ac:	blr	x2
   2b1b0:	ldr	w2, [sp, #108]
   2b1b4:	str	w2, [x23, x0]
   2b1b8:	add	x2, x23, x0
   2b1bc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2b1c0:	ldr	x3, [x0, #2512]
   2b1c4:	add	x0, x0, #0x9d0
   2b1c8:	blr	x3
   2b1cc:	ldr	x3, [sp, #120]
   2b1d0:	str	x3, [x23, x0]
   2b1d4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2b1d8:	ldr	x4, [x0, #2544]
   2b1dc:	add	x0, x0, #0x9f0
   2b1e0:	blr	x4
   2b1e4:	str	x25, [x23, x0]
   2b1e8:	cmp	x25, x1
   2b1ec:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   2b1f0:	b.le	2b228 <mpfr_asinh@@Base+0x300>
   2b1f4:	mov	w1, w19
   2b1f8:	mov	w2, w21
   2b1fc:	mov	x0, x28
   2b200:	bl	cb30 <mpfr_check_range@plt>
   2b204:	mov	w19, w0
   2b208:	mov	w0, w19
   2b20c:	ldp	x19, x20, [sp, #16]
   2b210:	ldp	x21, x22, [sp, #32]
   2b214:	ldp	x23, x24, [sp, #48]
   2b218:	ldp	x25, x26, [sp, #64]
   2b21c:	ldp	x27, x28, [sp, #80]
   2b220:	ldp	x29, x30, [sp], #160
   2b224:	ret
   2b228:	cbz	w19, 2b208 <mpfr_asinh@@Base+0x2e0>
   2b22c:	ldr	w0, [sp, #108]
   2b230:	ldp	x25, x26, [sp, #64]
   2b234:	orr	w23, w0, #0x8
   2b238:	str	w23, [x2]
   2b23c:	b	2b128 <mpfr_asinh@@Base+0x200>
   2b240:	mov	x19, #0x5                   	// #5
   2b244:	b	2afa8 <mpfr_asinh@@Base+0x80>
   2b248:	ldr	w0, [x1, #8]
   2b24c:	mov	w19, #0x0                   	// #0
   2b250:	str	w0, [x28, #8]
   2b254:	str	x2, [x28, #16]
   2b258:	b	2b128 <mpfr_asinh@@Base+0x200>
   2b25c:	mrs	x1, tpidr_el0
   2b260:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2b264:	ldr	x3, [x0, #2576]
   2b268:	add	x0, x0, #0xa10
   2b26c:	blr	x3
   2b270:	add	x0, x1, x0
   2b274:	mov	w19, #0x0                   	// #0
   2b278:	str	x2, [x28, #16]
   2b27c:	ldr	w1, [x0]
   2b280:	orr	w1, w1, #0x4
   2b284:	str	w1, [x0]
   2b288:	b	2b128 <mpfr_asinh@@Base+0x200>
   2b28c:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   2b290:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2b294:	add	x2, x2, #0xd20
   2b298:	add	x0, x0, #0x6c0
   2b29c:	mov	w1, #0x6c                  	// #108
   2b2a0:	bl	cb40 <mpfr_assert_fail@plt>
   2b2a4:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   2b2a8:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2b2ac:	add	x2, x2, #0xd08
   2b2b0:	add	x0, x0, #0x6c0
   2b2b4:	mov	w1, #0x50                  	// #80
   2b2b8:	bl	cb40 <mpfr_assert_fail@plt>
   2b2bc:	nop

000000000002b2c0 <mpfr_atanh@@Base>:
   2b2c0:	stp	x29, x30, [sp, #-352]!
   2b2c4:	mov	x29, sp
   2b2c8:	ldr	x3, [x1, #16]
   2b2cc:	stp	x19, x20, [sp, #16]
   2b2d0:	mov	x20, #0x8000000000000003    	// #-9223372036854775805
   2b2d4:	stp	x21, x22, [sp, #32]
   2b2d8:	cmp	x3, x20
   2b2dc:	mov	x22, x1
   2b2e0:	stp	x23, x24, [sp, #48]
   2b2e4:	mov	x23, x0
   2b2e8:	str	w2, [sp, #120]
   2b2ec:	b.le	2b6a0 <mpfr_atanh@@Base+0x3e0>
   2b2f0:	cmp	x3, #0x0
   2b2f4:	b.gt	2b6c8 <mpfr_atanh@@Base+0x408>
   2b2f8:	stp	x25, x26, [sp, #64]
   2b2fc:	negs	x2, x3, lsl #1
   2b300:	ldr	x25, [x0]
   2b304:	b.eq	2b318 <mpfr_atanh@@Base+0x58>  // b.none
   2b308:	add	x2, x2, #0x1
   2b30c:	add	x4, x25, #0x1
   2b310:	cmp	x4, x2
   2b314:	b.cc	2b798 <mpfr_atanh@@Base+0x4d8>  // b.lo, b.ul, b.last
   2b318:	stp	x27, x28, [sp, #80]
   2b31c:	mrs	x21, tpidr_el0
   2b320:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2b324:	ldr	x1, [x0, #2576]
   2b328:	add	x0, x0, #0xa10
   2b32c:	blr	x1
   2b330:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   2b334:	ldr	x19, [x22]
   2b338:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2b33c:	ldr	w0, [x21, x0]
   2b340:	mov	w6, #0x1                   	// #1
   2b344:	str	w0, [sp, #124]
   2b348:	str	x19, [sp, #160]
   2b34c:	str	w6, [sp, #168]
   2b350:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2b354:	ldr	x2, [x0, #2512]
   2b358:	add	x0, x0, #0x9d0
   2b35c:	blr	x2
   2b360:	add	x2, x21, x0
   2b364:	ldr	x0, [x21, x0]
   2b368:	str	x0, [sp, #136]
   2b36c:	str	x4, [x2]
   2b370:	str	x3, [sp, #176]
   2b374:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2b378:	ldr	x5, [x0, #2544]
   2b37c:	add	x0, x0, #0x9f0
   2b380:	blr	x5
   2b384:	ldr	x2, [x21, x0]
   2b388:	cmp	x25, x19
   2b38c:	ldr	x5, [x22, #24]
   2b390:	str	x1, [x21, x0]
   2b394:	str	x2, [sp, #144]
   2b398:	csel	x19, x25, x19, ge  // ge = tcont
   2b39c:	str	x5, [sp, #184]
   2b3a0:	cmp	x19, #0x1
   2b3a4:	b.eq	2b3c0 <mpfr_atanh@@Base+0x100>  // b.none
   2b3a8:	b.le	2b838 <mpfr_atanh@@Base+0x578>
   2b3ac:	sub	x1, x19, #0x1
   2b3b0:	mov	w0, #0x40                  	// #64
   2b3b4:	clz	x1, x1
   2b3b8:	sub	w0, w0, w1
   2b3bc:	add	x19, x19, w0, sxtw
   2b3c0:	add	x0, sp, #0xa0
   2b3c4:	str	x0, [sp, #128]
   2b3c8:	add	x0, sp, #0x100
   2b3cc:	add	x19, x19, #0x4
   2b3d0:	add	x20, sp, #0xc0
   2b3d4:	str	x0, [sp, #104]
   2b3d8:	mov	x0, #0x40                  	// #64
   2b3dc:	mov	x1, x19
   2b3e0:	add	x27, sp, #0xe0
   2b3e4:	str	x0, [sp, #152]
   2b3e8:	mov	x0, x20
   2b3ec:	bl	ca80 <mpfr_init2@plt>
   2b3f0:	add	x24, sp, #0x120
   2b3f4:	add	x28, sp, #0x140
   2b3f8:	mov	x1, x19
   2b3fc:	mov	x0, x27
   2b400:	bl	ca80 <mpfr_init2@plt>
   2b404:	mov	x0, x25
   2b408:	bl	bc70 <__gmpfr_int_ceil_log2@plt>
   2b40c:	add	w0, w0, #0x1
   2b410:	ldr	x1, [sp, #176]
   2b414:	sxtw	x0, w0
   2b418:	sdiv	x0, x25, x0
   2b41c:	mvn	x0, x0
   2b420:	cmp	x1, x0
   2b424:	b.le	2b598 <mpfr_atanh@@Base+0x2d8>
   2b428:	ldr	x26, [sp, #128]
   2b42c:	mov	w3, #0x2                   	// #2
   2b430:	mov	x1, #0x1                   	// #1
   2b434:	mov	x0, x27
   2b438:	mov	x2, x26
   2b43c:	bl	ca50 <mpfr_ui_sub@plt>
   2b440:	mov	x1, x26
   2b444:	mov	w3, #0x3                   	// #3
   2b448:	mov	x2, #0x1                   	// #1
   2b44c:	mov	x0, x20
   2b450:	bl	c260 <mpfr_add_ui@plt>
   2b454:	mov	w3, #0x0                   	// #0
   2b458:	mov	x2, x27
   2b45c:	mov	x1, x20
   2b460:	mov	x0, x20
   2b464:	bl	c620 <mpfr_div@plt>
   2b468:	mov	x1, x20
   2b46c:	mov	w2, #0x0                   	// #0
   2b470:	mov	x0, x20
   2b474:	bl	c090 <mpfr_log@plt>
   2b478:	mov	x2, #0x1                   	// #1
   2b47c:	mov	x1, x20
   2b480:	mov	x0, x20
   2b484:	mov	w3, #0x0                   	// #0
   2b488:	bl	c8f0 <mpfr_div_2ui@plt>
   2b48c:	ldr	x0, [sp, #208]
   2b490:	mov	x2, #0x4                   	// #4
   2b494:	subs	x2, x2, x0
   2b498:	csel	x2, x2, xzr, pl  // pl = nfrst
   2b49c:	add	x2, x2, #0x1
   2b4a0:	sub	x2, x19, x2
   2b4a4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   2b4a8:	cmp	x0, x1
   2b4ac:	b.ne	2b71c <mpfr_atanh@@Base+0x45c>  // b.any
   2b4b0:	ldr	w3, [x22, #8]
   2b4b4:	mov	x1, x20
   2b4b8:	ldr	w2, [sp, #120]
   2b4bc:	mov	x0, x23
   2b4c0:	bl	c6a0 <mpfr_set4@plt>
   2b4c4:	mov	w19, w0
   2b4c8:	mov	x0, x20
   2b4cc:	bl	c070 <mpfr_clear@plt>
   2b4d0:	mov	x0, x27
   2b4d4:	bl	c070 <mpfr_clear@plt>
   2b4d8:	ldr	x1, [x23, #16]
   2b4dc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2b4e0:	ldr	x2, [x0, #2576]
   2b4e4:	add	x0, x0, #0xa10
   2b4e8:	blr	x2
   2b4ec:	ldr	w2, [sp, #124]
   2b4f0:	str	w2, [x21, x0]
   2b4f4:	add	x2, x21, x0
   2b4f8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2b4fc:	ldr	x3, [x0, #2512]
   2b500:	add	x0, x0, #0x9d0
   2b504:	blr	x3
   2b508:	ldr	x3, [sp, #136]
   2b50c:	str	x3, [x21, x0]
   2b510:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2b514:	ldr	x4, [x0, #2544]
   2b518:	add	x0, x0, #0x9f0
   2b51c:	blr	x4
   2b520:	ldr	x4, [sp, #144]
   2b524:	str	x4, [x21, x0]
   2b528:	cmp	x3, x1
   2b52c:	ccmp	x4, x1, #0x1, le
   2b530:	b.ge	2b568 <mpfr_atanh@@Base+0x2a8>  // b.tcont
   2b534:	ldr	w2, [sp, #120]
   2b538:	mov	w1, w19
   2b53c:	mov	x0, x23
   2b540:	bl	cb30 <mpfr_check_range@plt>
   2b544:	mov	w19, w0
   2b548:	ldp	x25, x26, [sp, #64]
   2b54c:	ldp	x27, x28, [sp, #80]
   2b550:	mov	w0, w19
   2b554:	ldp	x19, x20, [sp, #16]
   2b558:	ldp	x21, x22, [sp, #32]
   2b55c:	ldp	x23, x24, [sp, #48]
   2b560:	ldp	x29, x30, [sp], #352
   2b564:	ret
   2b568:	cbz	w19, 2b548 <mpfr_atanh@@Base+0x288>
   2b56c:	ldr	w0, [sp, #124]
   2b570:	ldp	x25, x26, [sp, #64]
   2b574:	orr	w0, w0, #0x8
   2b578:	ldp	x27, x28, [sp, #80]
   2b57c:	str	w0, [x2]
   2b580:	mov	w0, w19
   2b584:	ldp	x19, x20, [sp, #16]
   2b588:	ldp	x21, x22, [sp, #32]
   2b58c:	ldp	x23, x24, [sp, #48]
   2b590:	ldp	x29, x30, [sp], #352
   2b594:	ret
   2b598:	ldr	x0, [sp, #192]
   2b59c:	mov	x26, #0x3                   	// #3
   2b5a0:	mov	x1, x0
   2b5a4:	mov	x0, x24
   2b5a8:	str	x1, [sp, #112]
   2b5ac:	bl	ca80 <mpfr_init2@plt>
   2b5b0:	ldr	x1, [sp, #112]
   2b5b4:	mov	x0, x28
   2b5b8:	bl	ca80 <mpfr_init2@plt>
   2b5bc:	ldp	x0, x1, [sp, #104]
   2b5c0:	bl	ca80 <mpfr_init2@plt>
   2b5c4:	ldr	w3, [sp, #168]
   2b5c8:	mov	x0, x24
   2b5cc:	ldr	x1, [sp, #128]
   2b5d0:	mov	w2, #0x5                   	// #5
   2b5d4:	bl	c6a0 <mpfr_set4@plt>
   2b5d8:	ldr	w3, [sp, #296]
   2b5dc:	mov	x1, x24
   2b5e0:	mov	x0, x20
   2b5e4:	mov	w2, #0x5                   	// #5
   2b5e8:	bl	c6a0 <mpfr_set4@plt>
   2b5ec:	ldr	x0, [sp, #104]
   2b5f0:	mov	w3, #0x5                   	// #5
   2b5f4:	ldr	x1, [sp, #128]
   2b5f8:	mov	x2, x1
   2b5fc:	bl	bd50 <mpfr_mul@plt>
   2b600:	b	2b61c <mpfr_atanh@@Base+0x35c>
   2b604:	add	x26, x26, #0x2
   2b608:	mov	x2, x28
   2b60c:	mov	x1, x20
   2b610:	mov	x0, x20
   2b614:	mov	w3, #0x5                   	// #5
   2b618:	bl	c1a0 <mpfr_add@plt>
   2b61c:	ldr	x2, [sp, #104]
   2b620:	mov	x1, x24
   2b624:	mov	w3, #0x5                   	// #5
   2b628:	mov	x0, x24
   2b62c:	bl	bd50 <mpfr_mul@plt>
   2b630:	mov	x2, x26
   2b634:	mov	x1, x24
   2b638:	mov	x0, x28
   2b63c:	mov	w3, #0x5                   	// #5
   2b640:	bl	cc60 <mpfr_div_ui@plt>
   2b644:	ldr	x2, [sp, #112]
   2b648:	ldr	x0, [sp, #208]
   2b64c:	ldr	x1, [sp, #336]
   2b650:	sub	x0, x0, x2
   2b654:	cmp	x1, x0
   2b658:	b.gt	2b604 <mpfr_atanh@@Base+0x344>
   2b65c:	add	x0, x26, #0x8
   2b660:	lsr	x0, x0, #1
   2b664:	bl	bc70 <__gmpfr_int_ceil_log2@plt>
   2b668:	ldr	x1, [sp, #112]
   2b66c:	mov	w26, w0
   2b670:	add	w0, w0, #0x2
   2b674:	cmp	x1, w0, sxtw
   2b678:	b.le	2b800 <mpfr_atanh@@Base+0x540>
   2b67c:	mov	x0, x24
   2b680:	bl	c070 <mpfr_clear@plt>
   2b684:	mov	x0, x28
   2b688:	bl	c070 <mpfr_clear@plt>
   2b68c:	ldr	x0, [sp, #104]
   2b690:	bl	c070 <mpfr_clear@plt>
   2b694:	sub	x2, x19, w26, sxtw
   2b698:	ldr	x0, [sp, #208]
   2b69c:	b	2b4a4 <mpfr_atanh@@Base+0x1e4>
   2b6a0:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   2b6a4:	add	x3, x3, x0
   2b6a8:	cmp	x3, #0x1
   2b6ac:	b.ls	2b6d0 <mpfr_atanh@@Base+0x410>  // b.plast
   2b6b0:	ldr	w1, [x1, #8]
   2b6b4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2b6b8:	mov	w19, #0x0                   	// #0
   2b6bc:	str	w1, [x23, #8]
   2b6c0:	str	x0, [x23, #16]
   2b6c4:	b	2b550 <mpfr_atanh@@Base+0x290>
   2b6c8:	cmp	x3, #0x1
   2b6cc:	b.eq	2b7bc <mpfr_atanh@@Base+0x4fc>  // b.none
   2b6d0:	mrs	x1, tpidr_el0
   2b6d4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2b6d8:	ldr	x2, [x0, #2576]
   2b6dc:	add	x0, x0, #0xa10
   2b6e0:	blr	x2
   2b6e4:	add	x0, x1, x0
   2b6e8:	mov	x1, #0x2                   	// #2
   2b6ec:	movk	x1, #0x8000, lsl #48
   2b6f0:	str	x1, [x23, #16]
   2b6f4:	mov	w19, #0x0                   	// #0
   2b6f8:	ldr	w1, [x0]
   2b6fc:	ldp	x21, x22, [sp, #32]
   2b700:	orr	w1, w1, #0x4
   2b704:	str	w1, [x0]
   2b708:	mov	w0, w19
   2b70c:	ldp	x19, x20, [sp, #16]
   2b710:	ldp	x23, x24, [sp, #48]
   2b714:	ldp	x29, x30, [sp], #352
   2b718:	ret
   2b71c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2b720:	cmp	x0, x1
   2b724:	b.le	2b750 <mpfr_atanh@@Base+0x490>
   2b728:	ldr	w0, [sp, #120]
   2b72c:	ldr	x1, [sp, #192]
   2b730:	cmp	w0, #0x0
   2b734:	ldr	x0, [sp, #216]
   2b738:	sub	x1, x1, #0x1
   2b73c:	cinc	x3, x25, eq  // eq = none
   2b740:	asr	x1, x1, #6
   2b744:	add	x1, x1, #0x1
   2b748:	bl	c370 <mpfr_round_p@plt>
   2b74c:	cbnz	w0, 2b4b0 <mpfr_atanh@@Base+0x1f0>
   2b750:	ldr	x1, [sp, #152]
   2b754:	mov	x0, #0xfffffffffffffeff    	// #-257
   2b758:	movk	x0, #0x7fff, lsl #48
   2b75c:	sub	x0, x0, x19
   2b760:	cmp	x0, x1
   2b764:	b.lt	2b820 <mpfr_atanh@@Base+0x560>  // b.tstop
   2b768:	ldr	x0, [sp, #152]
   2b76c:	add	x19, x19, x0
   2b770:	mov	x0, x20
   2b774:	mov	x1, x19
   2b778:	add	x2, x19, x19, lsr #63
   2b77c:	asr	x2, x2, #1
   2b780:	str	x2, [sp, #152]
   2b784:	bl	bed0 <mpfr_set_prec@plt>
   2b788:	mov	x1, x19
   2b78c:	mov	x0, x27
   2b790:	bl	bed0 <mpfr_set_prec@plt>
   2b794:	b	2b404 <mpfr_atanh@@Base+0x144>
   2b798:	ldr	w4, [sp, #120]
   2b79c:	mov	w3, #0x1                   	// #1
   2b7a0:	bl	c540 <mpfr_round_near_x@plt>
   2b7a4:	mov	w19, w0
   2b7a8:	cbnz	w0, 2b818 <mpfr_atanh@@Base+0x558>
   2b7ac:	stp	x27, x28, [sp, #80]
   2b7b0:	ldr	x25, [x23]
   2b7b4:	ldr	x3, [x22, #16]
   2b7b8:	b	2b31c <mpfr_atanh@@Base+0x5c>
   2b7bc:	mov	x0, x1
   2b7c0:	bl	bf00 <mpfr_powerof2_raw@plt>
   2b7c4:	cbz	w0, 2b6d0 <mpfr_atanh@@Base+0x410>
   2b7c8:	mrs	x1, tpidr_el0
   2b7cc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2b7d0:	ldr	x2, [x0, #2576]
   2b7d4:	add	x0, x0, #0xa10
   2b7d8:	blr	x2
   2b7dc:	add	x0, x1, x0
   2b7e0:	ldr	w1, [x22, #8]
   2b7e4:	str	w1, [x23, #8]
   2b7e8:	mov	w19, #0x0                   	// #0
   2b7ec:	str	x20, [x23, #16]
   2b7f0:	ldr	w1, [x0]
   2b7f4:	orr	w1, w1, #0x20
   2b7f8:	str	w1, [x0]
   2b7fc:	b	2b550 <mpfr_atanh@@Base+0x290>
   2b800:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2b804:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2b808:	add	x2, x2, #0x6d0
   2b80c:	add	x0, x0, #0x6c8
   2b810:	mov	w1, #0x56                  	// #86
   2b814:	bl	cb40 <mpfr_assert_fail@plt>
   2b818:	ldp	x25, x26, [sp, #64]
   2b81c:	b	2b550 <mpfr_atanh@@Base+0x290>
   2b820:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   2b824:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2b828:	add	x2, x2, #0xd20
   2b82c:	add	x0, x0, #0x6c8
   2b830:	mov	w1, #0xca                  	// #202
   2b834:	bl	cb40 <mpfr_assert_fail@plt>
   2b838:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2b83c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2b840:	add	x2, x2, #0x610
   2b844:	add	x0, x0, #0x6c8
   2b848:	mov	w1, #0xa1                  	// #161
   2b84c:	bl	cb40 <mpfr_assert_fail@plt>
   2b850:	stp	x29, x30, [sp, #-48]!
   2b854:	mov	x3, #0x3                   	// #3
   2b858:	mov	x29, sp
   2b85c:	stp	x19, x20, [sp, #16]
   2b860:	mov	x19, x0
   2b864:	ldr	x20, [x0]
   2b868:	str	x21, [sp, #32]
   2b86c:	ldr	x21, [x0, #24]
   2b870:	sub	x2, x20, #0x1
   2b874:	neg	w20, w20
   2b878:	asr	x2, x2, #6
   2b87c:	mov	x0, x21
   2b880:	add	x2, x2, #0x1
   2b884:	sub	x3, x3, x2
   2b888:	add	x1, x1, x3, lsl #3
   2b88c:	bl	c520 <__gmpn_copyi@plt>
   2b890:	ldr	x0, [x21]
   2b894:	mov	x1, #0x1                   	// #1
   2b898:	lsl	x1, x1, x20
   2b89c:	neg	x1, x1
   2b8a0:	and	x1, x0, x1
   2b8a4:	str	x1, [x21]
   2b8a8:	ldr	x21, [sp, #32]
   2b8ac:	str	xzr, [x19, #16]
   2b8b0:	ldp	x19, x20, [sp, #16]
   2b8b4:	ldp	x29, x30, [sp], #48
   2b8b8:	ret
   2b8bc:	nop

000000000002b8c0 <mpfr_atan@@Base>:
   2b8c0:	mov	x12, #0x12d0                	// #4816
   2b8c4:	sub	sp, sp, x12
   2b8c8:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
   2b8cc:	stp	x29, x30, [sp]
   2b8d0:	mov	x29, sp
   2b8d4:	ldr	x3, [x1, #16]
   2b8d8:	stp	x19, x20, [sp, #16]
   2b8dc:	str	x0, [sp, #200]
   2b8e0:	cmp	x3, x4
   2b8e4:	str	w2, [sp, #236]
   2b8e8:	str	x1, [sp, #248]
   2b8ec:	b.le	2c99c <mpfr_atan@@Base+0x10dc>
   2b8f0:	neg	x2, x3, lsl #1
   2b8f4:	cmp	x2, #0x0
   2b8f8:	b.le	2b914 <mpfr_atan@@Base+0x54>
   2b8fc:	ldr	x4, [sp, #200]
   2b900:	add	x2, x2, #0x1
   2b904:	ldr	x4, [x4]
   2b908:	add	x4, x4, #0x1
   2b90c:	cmp	x4, x2
   2b910:	b.cc	2c938 <mpfr_atan@@Base+0x1078>  // b.lo, b.ul, b.last
   2b914:	stp	x21, x22, [sp, #32]
   2b918:	mrs	x10, tpidr_el0
   2b91c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2b920:	ldr	x1, [x0, #2576]
   2b924:	add	x0, x0, #0xa10
   2b928:	blr	x1
   2b92c:	add	x11, sp, #0x170
   2b930:	ldr	x1, [sp, #248]
   2b934:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   2b938:	ldr	w0, [x10, x0]
   2b93c:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   2b940:	str	w0, [sp, #284]
   2b944:	mov	w8, #0x1                   	// #1
   2b948:	ldr	x7, [x1, #24]
   2b94c:	stp	x3, x7, [sp, #384]
   2b950:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2b954:	ldr	x2, [x0, #2512]
   2b958:	add	x0, x0, #0x9d0
   2b95c:	blr	x2
   2b960:	add	x5, x10, x0
   2b964:	str	x11, [sp, #256]
   2b968:	ldr	x0, [x10, x0]
   2b96c:	str	x0, [sp, #304]
   2b970:	ldr	x9, [x1]
   2b974:	mov	x1, #0x1                   	// #1
   2b978:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2b97c:	ldr	x2, [x0, #2544]
   2b980:	add	x0, x0, #0x9f0
   2b984:	blr	x2
   2b988:	str	x6, [x5]
   2b98c:	ldr	x3, [x10, x0]
   2b990:	mov	x2, #0x0                   	// #0
   2b994:	str	x4, [x10, x0]
   2b998:	mov	x0, x11
   2b99c:	str	x10, [sp, #272]
   2b9a0:	str	x3, [sp, #312]
   2b9a4:	str	x9, [sp, #368]
   2b9a8:	str	w8, [sp, #376]
   2b9ac:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   2b9b0:	str	w0, [sp, #232]
   2b9b4:	cbz	w0, 2ca04 <mpfr_atan@@Base+0x1144>
   2b9b8:	ldr	x0, [sp, #200]
   2b9bc:	stp	x23, x24, [sp, #48]
   2b9c0:	stp	x25, x26, [sp, #64]
   2b9c4:	ldr	x20, [x0]
   2b9c8:	stp	x27, x28, [sp, #80]
   2b9cc:	cmp	x20, #0x1
   2b9d0:	b.eq	2cad0 <mpfr_atan@@Base+0x1210>  // b.none
   2b9d4:	b.le	2cb0c <mpfr_atan@@Base+0x124c>
   2b9d8:	sub	x0, x20, #0x1
   2b9dc:	mov	w19, #0x40                  	// #64
   2b9e0:	clz	x0, x0
   2b9e4:	add	x27, sp, #0x160
   2b9e8:	sub	w19, w19, w0
   2b9ec:	mov	x0, x27
   2b9f0:	add	x20, x20, w19, sxtw
   2b9f4:	add	x21, x20, #0x44
   2b9f8:	add	x1, x20, #0x4
   2b9fc:	str	x1, [sp, #240]
   2ba00:	mov	x1, x21
   2ba04:	bl	c900 <mpfr_mpz_init2@plt>
   2ba08:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2ba0c:	cmp	x21, x0
   2ba10:	b.ge	2cdc8 <mpfr_atan@@Base+0x1508>  // b.tcont
   2ba14:	add	x19, x20, #0x82
   2ba18:	adds	x20, x20, #0x43
   2ba1c:	csel	x19, x19, x20, mi  // mi = first
   2ba20:	asr	x19, x19, #6
   2ba24:	add	x19, x19, #0x1
   2ba28:	lsl	x0, x19, #2
   2ba2c:	cmp	x0, #0x10
   2ba30:	b.gt	2c0dc <mpfr_atan@@Base+0x81c>
   2ba34:	add	x1, sp, #0x220
   2ba38:	str	xzr, [sp, #528]
   2ba3c:	mov	x0, x1
   2ba40:	str	x1, [sp, #536]
   2ba44:	add	x1, sp, #0x6a0
   2ba48:	add	x2, x19, x19, lsl #1
   2ba4c:	str	x1, [sp, #112]
   2ba50:	add	x1, sp, #0x6b0
   2ba54:	str	x1, [sp, #320]
   2ba58:	add	x1, sp, #0x2a0
   2ba5c:	add	x3, x0, x19, lsl #3
   2ba60:	add	x2, x0, x2, lsl #3
   2ba64:	add	x19, x0, x19, lsl #4
   2ba68:	mov	x4, #0x40                  	// #64
   2ba6c:	mov	w20, #0x0                   	// #0
   2ba70:	str	x1, [sp, #120]
   2ba74:	mov	w1, #0x1                   	// #1
   2ba78:	str	x4, [sp, #328]
   2ba7c:	str	x21, [sp, #400]
   2ba80:	str	w1, [sp, #408]
   2ba84:	stp	x2, x21, [sp, #424]
   2ba88:	str	w1, [sp, #440]
   2ba8c:	stp	x0, x21, [sp, #456]
   2ba90:	str	w1, [sp, #472]
   2ba94:	stp	x3, x21, [sp, #488]
   2ba98:	str	w1, [sp, #504]
   2ba9c:	str	x19, [sp, #520]
   2baa0:	ldr	x0, [sp, #384]
   2baa4:	mov	x23, #0x2                   	// #2
   2baa8:	cmp	x0, #0x0
   2baac:	sub	x23, x23, x0
   2bab0:	ldr	x0, [sp, #240]
   2bab4:	csinc	x23, x23, xzr, lt  // lt = tstop
   2bab8:	add	x23, x0, x23
   2babc:	cmn	x23, #0x2
   2bac0:	b.eq	2c9d4 <mpfr_atan@@Base+0x1114>  // b.none
   2bac4:	cmn	x23, #0x1
   2bac8:	b.lt	2c9ec <mpfr_atan@@Base+0x112c>  // b.tstop
   2bacc:	add	x24, x23, #0x2
   2bad0:	mov	w1, #0x40                  	// #64
   2bad4:	clz	x24, x24
   2bad8:	add	x23, x23, #0x1
   2badc:	sub	w19, w1, w24
   2bae0:	add	w0, w19, w19, lsl #1
   2bae4:	cmp	w0, #0x3
   2bae8:	b.eq	2bb08 <mpfr_atan@@Base+0x248>  // b.none
   2baec:	mov	w0, #0x3f                  	// #63
   2baf0:	sub	w0, w0, w24
   2baf4:	add	w0, w0, w0, lsl #1
   2baf8:	sxtw	x0, w0
   2bafc:	clz	x0, x0
   2bb00:	sub	w0, w1, w0
   2bb04:	add	x23, x23, w0, sxtw
   2bb08:	ldr	x0, [sp, #200]
   2bb0c:	ldr	x0, [x0]
   2bb10:	cmp	x0, #0x64
   2bb14:	b.gt	2c09c <mpfr_atan@@Base+0x7dc>
   2bb18:	mov	x21, #0x0                   	// #0
   2bb1c:	str	xzr, [sp, #264]
   2bb20:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2bb24:	cmp	x23, x0
   2bb28:	ldr	x1, [sp, #528]
   2bb2c:	b.ge	2cdc8 <mpfr_atan@@Base+0x1508>  // b.tcont
   2bb30:	sub	x22, x23, #0x1
   2bb34:	asr	x22, x22, #6
   2bb38:	add	x22, x22, #0x1
   2bb3c:	lsl	x2, x22, #5
   2bb40:	str	x2, [sp, #528]
   2bb44:	cbnz	x1, 2c5a4 <mpfr_atan@@Base+0xce4>
   2bb48:	mov	x0, x2
   2bb4c:	bl	ccf0 <mpfr_allocate_func@plt>
   2bb50:	str	x0, [sp, #536]
   2bb54:	add	x2, x22, x22, lsl #1
   2bb58:	mov	w1, #0x41                  	// #65
   2bb5c:	sub	w24, w1, w24
   2bb60:	str	x23, [sp, #400]
   2bb64:	add	x1, x0, x2, lsl #3
   2bb68:	add	x2, x0, x22, lsl #3
   2bb6c:	add	x22, x0, x22, lsl #4
   2bb70:	stp	x1, x23, [sp, #424]
   2bb74:	mov	w1, #0x1                   	// #1
   2bb78:	str	w1, [sp, #408]
   2bb7c:	str	w1, [sp, #440]
   2bb80:	stp	x0, x23, [sp, #456]
   2bb84:	add	w0, w24, w24, lsl #1
   2bb88:	cmp	w0, w20
   2bb8c:	str	w0, [sp, #280]
   2bb90:	str	w1, [sp, #472]
   2bb94:	stp	x2, x23, [sp, #488]
   2bb98:	str	w1, [sp, #504]
   2bb9c:	str	x22, [sp, #520]
   2bba0:	b.le	2bbe0 <mpfr_atan@@Base+0x320>
   2bba4:	ldr	x1, [sp, #112]
   2bba8:	mvn	w0, w20
   2bbac:	add	x22, x1, w20, sxtw #4
   2bbb0:	ldr	w1, [sp, #280]
   2bbb4:	add	w0, w0, w1
   2bbb8:	add	x20, x0, w20, sxtw
   2bbbc:	ldr	x0, [sp, #320]
   2bbc0:	add	x20, x0, x20, lsl #4
   2bbc4:	nop
   2bbc8:	mov	x0, x22
   2bbcc:	mov	x1, x23
   2bbd0:	add	x22, x22, #0x10
   2bbd4:	bl	c900 <mpfr_mpz_init2@plt>
   2bbd8:	cmp	x22, x20
   2bbdc:	b.ne	2bbc8 <mpfr_atan@@Base+0x308>  // b.any
   2bbe0:	ldr	w0, [sp, #232]
   2bbe4:	cmp	w0, #0x0
   2bbe8:	b.le	2c85c <mpfr_atan@@Base+0xf9c>
   2bbec:	ldr	x2, [sp, #256]
   2bbf0:	add	x25, sp, #0x1b0
   2bbf4:	mov	x0, x25
   2bbf8:	mov	w3, #0x0                   	// #0
   2bbfc:	mov	x1, #0x1                   	// #1
   2bc00:	neg	x20, x21
   2bc04:	bl	c2f0 <mpfr_ui_div@plt>
   2bc08:	ldr	x0, [sp, #448]
   2bc0c:	cmp	x20, x0
   2bc10:	mov	x21, x0
   2bc14:	b.ge	2c888 <mpfr_atan@@Base+0xfc8>  // b.tcont
   2bc18:	ldr	w0, [sp, #232]
   2bc1c:	add	x23, sp, #0x1d0
   2bc20:	mov	x24, #0x0                   	// #0
   2bc24:	cmp	w0, #0x0
   2bc28:	cset	w22, gt
   2bc2c:	ldr	x26, [sp, #256]
   2bc30:	b	2bc58 <mpfr_atan@@Base+0x398>
   2bc34:	mov	x2, x26
   2bc38:	mov	x1, x23
   2bc3c:	mov	x0, x25
   2bc40:	bl	bd50 <mpfr_mul@plt>
   2bc44:	ldr	x0, [sp, #448]
   2bc48:	add	x24, x24, #0x1
   2bc4c:	cmp	x0, x20
   2bc50:	b.le	2bcd0 <mpfr_atan@@Base+0x410>
   2bc54:	mov	x21, x0
   2bc58:	mov	x1, x25
   2bc5c:	mov	w2, #0x0                   	// #0
   2bc60:	mov	x0, x23
   2bc64:	bl	c400 <mpfr_sqr@plt>
   2bc68:	mov	w3, #0x0                   	// #0
   2bc6c:	mov	x1, x23
   2bc70:	mov	x2, #0x1                   	// #1
   2bc74:	mov	x0, x23
   2bc78:	bl	c260 <mpfr_add_ui@plt>
   2bc7c:	mov	x1, x23
   2bc80:	mov	w2, #0x0                   	// #0
   2bc84:	mov	x0, x23
   2bc88:	bl	c930 <mpfr_sqrt@plt>
   2bc8c:	mov	w3, #0x0                   	// #0
   2bc90:	mov	x1, x23
   2bc94:	mov	x0, x23
   2bc98:	mov	x2, #0x1                   	// #1
   2bc9c:	bl	c530 <mpfr_sub_ui@plt>
   2bca0:	cmp	x24, #0x0
   2bca4:	mov	w3, #0x0                   	// #0
   2bca8:	ccmp	w22, #0x0, #0x4, eq  // eq = none
   2bcac:	b.ne	2bc34 <mpfr_atan@@Base+0x374>  // b.any
   2bcb0:	mov	x2, x25
   2bcb4:	mov	x1, x23
   2bcb8:	mov	x0, x25
   2bcbc:	bl	c620 <mpfr_div@plt>
   2bcc0:	ldr	x0, [sp, #448]
   2bcc4:	add	x24, x24, #0x1
   2bcc8:	cmp	x0, x20
   2bccc:	b.gt	2bc54 <mpfr_atan@@Base+0x394>
   2bcd0:	mov	x1, #0x9                   	// #9
   2bcd4:	sub	x1, x1, x21, lsl #1
   2bcd8:	stp	x24, x1, [sp, #288]
   2bcdc:	sub	w2, w19, #0x1
   2bce0:	str	w2, [sp, #168]
   2bce4:	add	x2, sp, #0x190
   2bce8:	str	x2, [sp, #208]
   2bcec:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   2bcf0:	str	x2, [sp, #416]
   2bcf4:	add	w1, w19, #0x1
   2bcf8:	ldr	x2, [sp, #112]
   2bcfc:	add	x1, x1, #0x1
   2bd00:	mov	x19, #0x1                   	// #1
   2bd04:	add	x1, x2, x1, lsl #4
   2bd08:	str	x1, [sp, #128]
   2bd0c:	b	2bd48 <mpfr_atan@@Base+0x488>
   2bd10:	ldr	x0, [sp, #128]
   2bd14:	sub	x0, x0, #0x10
   2bd18:	str	x0, [sp, #152]
   2bd1c:	lsl	x0, x19, #1
   2bd20:	str	x0, [sp, #176]
   2bd24:	ldr	w0, [sp, #168]
   2bd28:	ldr	x19, [sp, #176]
   2bd2c:	sub	w0, w0, #0x1
   2bd30:	cmn	w0, #0x1
   2bd34:	str	w0, [sp, #168]
   2bd38:	ldr	x0, [sp, #152]
   2bd3c:	str	x0, [sp, #128]
   2bd40:	b.eq	2beb8 <mpfr_atan@@Base+0x5f8>  // b.none
   2bd44:	ldr	x0, [sp, #448]
   2bd48:	mov	x20, #0x8000000000000001    	// #-9223372036854775807
   2bd4c:	cmp	x0, x20
   2bd50:	b.eq	2beb8 <mpfr_atan@@Base+0x5f8>  // b.none
   2bd54:	add	x23, sp, #0x1d0
   2bd58:	mov	w3, #0x0                   	// #0
   2bd5c:	mov	x2, x19
   2bd60:	mov	x1, x25
   2bd64:	mov	x0, x23
   2bd68:	bl	c2c0 <mpfr_mul_2ui@plt>
   2bd6c:	mov	x1, x23
   2bd70:	mov	x0, x23
   2bd74:	mov	w2, #0x1                   	// #1
   2bd78:	bl	c300 <mpfr_rint@plt>
   2bd7c:	ldr	x0, [sp, #480]
   2bd80:	cmp	x0, x20
   2bd84:	b.eq	2bd10 <mpfr_atan@@Base+0x450>  // b.none
   2bd88:	mov	x1, x23
   2bd8c:	mov	x0, x27
   2bd90:	bl	cac0 <mpfr_get_z_2exp@plt>
   2bd94:	neg	x2, x0
   2bd98:	mov	x1, x27
   2bd9c:	mov	x0, x27
   2bda0:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   2bda4:	mov	x1, x27
   2bda8:	mov	w2, #0x0                   	// #0
   2bdac:	mov	x0, x23
   2bdb0:	bl	c240 <mpfr_set_z@plt>
   2bdb4:	mov	x2, x19
   2bdb8:	mov	x1, x23
   2bdbc:	mov	x0, x23
   2bdc0:	mov	w3, #0x0                   	// #0
   2bdc4:	bl	c8f0 <mpfr_div_2ui@plt>
   2bdc8:	ldr	x0, [sp, #496]
   2bdcc:	str	x0, [sp, #136]
   2bdd0:	cmp	x0, #0xc0
   2bdd4:	b.gt	2c138 <mpfr_atan@@Base+0x878>
   2bdd8:	cmp	x19, #0x4
   2bddc:	b.eq	2c8a4 <mpfr_atan@@Base+0xfe4>  // b.none
   2bde0:	b.hi	2c0f0 <mpfr_atan@@Base+0x830>  // b.pmore
   2bde4:	cmp	x19, #0x1
   2bde8:	b.eq	2c8e4 <mpfr_atan@@Base+0x1024>  // b.none
   2bdec:	cmp	x19, #0x2
   2bdf0:	b.ne	2c138 <mpfr_atan@@Base+0x878>  // b.any
   2bdf4:	ldr	x0, [sp, #128]
   2bdf8:	add	x21, sp, #0x1f0
   2bdfc:	adrp	x1, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2be00:	add	x1, x1, #0x788
   2be04:	sub	x0, x0, #0x10
   2be08:	add	x1, x1, #0x18
   2be0c:	str	x0, [sp, #152]
   2be10:	mov	x0, x21
   2be14:	bl	2b850 <mpfr_atanh@@Base+0x590>
   2be18:	mov	x0, #0x4                   	// #4
   2be1c:	str	x0, [sp, #176]
   2be20:	mov	x2, x23
   2be24:	mov	x1, x21
   2be28:	mov	w3, #0x0                   	// #0
   2be2c:	mov	x0, x21
   2be30:	bl	bd50 <mpfr_mul@plt>
   2be34:	ldr	x0, [sp, #208]
   2be38:	mov	x2, x21
   2be3c:	mov	w3, #0x0                   	// #0
   2be40:	mov	x1, x0
   2be44:	bl	c1a0 <mpfr_add@plt>
   2be48:	mov	x2, x23
   2be4c:	mov	x1, x25
   2be50:	mov	w3, #0x0                   	// #0
   2be54:	mov	x0, x21
   2be58:	bl	bb70 <mpfr_sub@plt>
   2be5c:	mov	x2, x23
   2be60:	mov	x1, x25
   2be64:	mov	w3, #0x0                   	// #0
   2be68:	mov	x0, x25
   2be6c:	bl	bd50 <mpfr_mul@plt>
   2be70:	mov	x1, x25
   2be74:	mov	w3, #0x0                   	// #0
   2be78:	mov	x2, #0x1                   	// #1
   2be7c:	mov	x0, x25
   2be80:	bl	c260 <mpfr_add_ui@plt>
   2be84:	mov	x1, x21
   2be88:	mov	x2, x25
   2be8c:	mov	x0, x25
   2be90:	mov	w3, #0x0                   	// #0
   2be94:	bl	c620 <mpfr_div@plt>
   2be98:	ldr	w0, [sp, #168]
   2be9c:	ldr	x19, [sp, #176]
   2bea0:	sub	w0, w0, #0x1
   2bea4:	cmn	w0, #0x1
   2bea8:	str	w0, [sp, #168]
   2beac:	ldr	x0, [sp, #152]
   2beb0:	str	x0, [sp, #128]
   2beb4:	b.ne	2bd44 <mpfr_atan@@Base+0x484>  // b.any
   2beb8:	ldr	x19, [sp, #208]
   2bebc:	mov	x2, x25
   2bec0:	mov	w3, #0x0                   	// #0
   2bec4:	mov	x1, x19
   2bec8:	mov	x0, x19
   2becc:	bl	c1a0 <mpfr_add@plt>
   2bed0:	ldr	x2, [sp, #288]
   2bed4:	mov	x1, x19
   2bed8:	mov	x0, x19
   2bedc:	mov	w3, #0x0                   	// #0
   2bee0:	bl	c2c0 <mpfr_mul_2ui@plt>
   2bee4:	ldr	w0, [sp, #232]
   2bee8:	cmp	w0, #0x0
   2beec:	b.le	2bf40 <mpfr_atan@@Base+0x680>
   2bef0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2bef4:	ldr	x1, [x0, #2624]
   2bef8:	add	x0, x0, #0xa40
   2befc:	blr	x1
   2bf00:	add	x23, sp, #0x1d0
   2bf04:	ldr	x1, [sp, #272]
   2bf08:	mov	w2, #0x0                   	// #0
   2bf0c:	add	x1, x1, x0
   2bf10:	mov	x0, x23
   2bf14:	bl	c380 <mpfr_cache@plt>
   2bf18:	mov	x1, x23
   2bf1c:	mov	w3, #0x0                   	// #0
   2bf20:	mov	x2, #0x1                   	// #1
   2bf24:	mov	x0, x23
   2bf28:	bl	c8f0 <mpfr_div_2ui@plt>
   2bf2c:	ldr	x0, [sp, #208]
   2bf30:	mov	x1, x23
   2bf34:	mov	w3, #0x0                   	// #0
   2bf38:	mov	x2, x0
   2bf3c:	bl	bb70 <mpfr_sub@plt>
   2bf40:	ldr	x1, [sp, #416]
   2bf44:	mov	w0, #0x1                   	// #1
   2bf48:	str	w0, [sp, #408]
   2bf4c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2bf50:	cmp	x1, x0
   2bf54:	b.le	2c95c <mpfr_atan@@Base+0x109c>
   2bf58:	ldr	x2, [sp, #200]
   2bf5c:	ldr	x4, [sp, #264]
   2bf60:	ldr	x3, [x2]
   2bf64:	ldr	x2, [sp, #240]
   2bf68:	ldr	w0, [sp, #236]
   2bf6c:	ldr	x1, [sp, #400]
   2bf70:	cmp	w0, #0x0
   2bf74:	add	x2, x2, x4
   2bf78:	cinc	x3, x3, eq  // eq = none
   2bf7c:	ldr	x4, [sp, #296]
   2bf80:	sub	x1, x1, #0x1
   2bf84:	ldr	x0, [sp, #424]
   2bf88:	asr	x1, x1, #6
   2bf8c:	add	x1, x1, #0x1
   2bf90:	sub	x2, x2, x4
   2bf94:	bl	c370 <mpfr_round_p@plt>
   2bf98:	cbz	w0, 2c95c <mpfr_atan@@Base+0x109c>
   2bf9c:	ldr	x0, [sp, #248]
   2bfa0:	ldr	w2, [sp, #236]
   2bfa4:	ldr	x1, [sp, #208]
   2bfa8:	ldr	w3, [x0, #8]
   2bfac:	ldr	x0, [sp, #200]
   2bfb0:	bl	c6a0 <mpfr_set4@plt>
   2bfb4:	mov	w19, w0
   2bfb8:	ldr	w1, [sp, #280]
   2bfbc:	ldr	x0, [sp, #112]
   2bfc0:	sub	w20, w1, #0x1
   2bfc4:	add	x21, x0, #0x10
   2bfc8:	add	x20, x21, w20, uxtw #4
   2bfcc:	b	2bfd4 <mpfr_atan@@Base+0x714>
   2bfd0:	add	x21, x21, #0x10
   2bfd4:	bl	c170 <mpfr_mpz_clear@plt>
   2bfd8:	cmp	x20, x21
   2bfdc:	mov	x0, x21
   2bfe0:	b.ne	2bfd0 <mpfr_atan@@Base+0x710>  // b.any
   2bfe4:	mov	x0, x27
   2bfe8:	bl	c170 <mpfr_mpz_clear@plt>
   2bfec:	ldr	x1, [sp, #528]
   2bff0:	cbz	x1, 2bffc <mpfr_atan@@Base+0x73c>
   2bff4:	ldr	x0, [sp, #536]
   2bff8:	bl	cc20 <mpfr_free_func@plt>
   2bffc:	ldr	x3, [sp, #272]
   2c000:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2c004:	ldr	x1, [x0, #2576]
   2c008:	add	x0, x0, #0xa10
   2c00c:	blr	x1
   2c010:	ldr	w1, [sp, #284]
   2c014:	ldr	x6, [sp, #200]
   2c018:	add	x2, x3, x0
   2c01c:	str	w1, [x3, x0]
   2c020:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2c024:	ldr	x4, [x0, #2512]
   2c028:	add	x0, x0, #0x9d0
   2c02c:	blr	x4
   2c030:	ldr	x4, [sp, #304]
   2c034:	str	x4, [x3, x0]
   2c038:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2c03c:	ldr	x5, [x0, #2544]
   2c040:	add	x0, x0, #0x9f0
   2c044:	blr	x5
   2c048:	ldr	x1, [x6, #16]
   2c04c:	ldr	x5, [sp, #312]
   2c050:	str	x5, [x3, x0]
   2c054:	cmp	x5, x1
   2c058:	ccmp	x4, x1, #0x0, ge  // ge = tcont
   2c05c:	b.le	2c540 <mpfr_atan@@Base+0xc80>
   2c060:	ldr	w2, [sp, #236]
   2c064:	mov	w1, w19
   2c068:	mov	x0, x6
   2c06c:	bl	cb30 <mpfr_check_range@plt>
   2c070:	mov	w19, w0
   2c074:	ldp	x21, x22, [sp, #32]
   2c078:	ldp	x23, x24, [sp, #48]
   2c07c:	ldp	x25, x26, [sp, #64]
   2c080:	ldp	x27, x28, [sp, #80]
   2c084:	mov	w0, w19
   2c088:	mov	x12, #0x12d0                	// #4816
   2c08c:	ldp	x29, x30, [sp]
   2c090:	ldp	x19, x20, [sp, #16]
   2c094:	add	sp, sp, x12
   2c098:	ret
   2c09c:	cmp	x23, #0x1
   2c0a0:	b.eq	2cb68 <mpfr_atan@@Base+0x12a8>  // b.none
   2c0a4:	b.le	2cb78 <mpfr_atan@@Base+0x12b8>
   2c0a8:	sub	x0, x23, #0x1
   2c0ac:	mov	w2, #0x40                  	// #64
   2c0b0:	clz	x0, x0
   2c0b4:	mov	x1, #0x9                   	// #9
   2c0b8:	sub	w2, w2, w0
   2c0bc:	asr	w2, w2, #1
   2c0c0:	sub	w2, w2, #0x3
   2c0c4:	sxtw	x21, w2
   2c0c8:	add	x0, x1, w2, sxtw #1
   2c0cc:	str	x0, [sp, #264]
   2c0d0:	ldr	x0, [sp, #264]
   2c0d4:	add	x23, x23, x0
   2c0d8:	b	2bb20 <mpfr_atan@@Base+0x260>
   2c0dc:	lsl	x0, x19, #5
   2c0e0:	str	x0, [sp, #528]
   2c0e4:	bl	ccf0 <mpfr_allocate_func@plt>
   2c0e8:	str	x0, [sp, #536]
   2c0ec:	b	2ba44 <mpfr_atan@@Base+0x184>
   2c0f0:	cmp	x19, #0x8
   2c0f4:	b.ne	2c138 <mpfr_atan@@Base+0x878>  // b.any
   2c0f8:	ldr	x2, [sp, #360]
   2c0fc:	mov	x3, #0x10                  	// #16
   2c100:	ldr	x0, [sp, #128]
   2c104:	add	x21, sp, #0x1f0
   2c108:	ldr	x2, [x2]
   2c10c:	sub	x0, x0, #0x10
   2c110:	adrp	x1, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2c114:	add	x1, x1, #0x788
   2c118:	add	x2, x2, #0x4
   2c11c:	str	x0, [sp, #152]
   2c120:	mov	x0, x21
   2c124:	str	x3, [sp, #176]
   2c128:	add	x2, x2, x2, lsl #1
   2c12c:	add	x1, x1, x2, lsl #3
   2c130:	bl	2b850 <mpfr_atanh@@Base+0x590>
   2c134:	b	2be20 <mpfr_atan@@Base+0x560>
   2c138:	ldr	w3, [sp, #168]
   2c13c:	mov	x2, x27
   2c140:	mov	x1, x27
   2c144:	mov	x0, x27
   2c148:	add	w22, w3, #0x1
   2c14c:	lsl	x20, x19, #1
   2c150:	lsl	w21, w3, #1
   2c154:	str	x20, [sp, #176]
   2c158:	ldr	x3, [sp, #112]
   2c15c:	add	w21, w21, #0x4
   2c160:	add	x3, x3, x21, lsl #4
   2c164:	str	x3, [sp, #104]
   2c168:	bl	bff0 <__gmpz_mul@plt>
   2c16c:	mov	x1, #0x0                   	// #0
   2c170:	mov	x0, x27
   2c174:	bl	ba90 <__gmpz_scan1@plt>
   2c178:	ldr	x1, [sp, #128]
   2c17c:	sub	x1, x1, #0x10
   2c180:	str	x1, [sp, #152]
   2c184:	cbnz	x0, 2c840 <mpfr_atan@@Base+0xf80>
   2c188:	mov	x1, #0x1                   	// #1
   2c18c:	mov	x0, x27
   2c190:	str	xzr, [sp, #672]
   2c194:	bl	cb20 <__gmpz_cmp_ui@plt>
   2c198:	mov	x1, #0x1                   	// #1
   2c19c:	mov	w19, w0
   2c1a0:	lsl	x0, x1, x22
   2c1a4:	str	x0, [sp, #216]
   2c1a8:	cbnz	w19, 2c5b4 <mpfr_atan@@Base+0xcf4>
   2c1ac:	ldr	x0, [sp, #136]
   2c1b0:	str	x1, [sp, #160]
   2c1b4:	add	x1, sp, #0x4a0
   2c1b8:	str	x1, [sp, #96]
   2c1bc:	ldr	x1, [sp, #216]
   2c1c0:	mov	x8, #0x2                   	// #2
   2c1c4:	udiv	x0, x0, x20
   2c1c8:	mov	x4, #0x3                   	// #3
   2c1cc:	mov	x28, x4
   2c1d0:	str	x25, [sp, #216]
   2c1d4:	mov	x25, x8
   2c1d8:	str	x23, [sp, #224]
   2c1dc:	mov	w23, w19
   2c1e0:	str	x27, [sp, #192]
   2c1e4:	cmp	x0, x1
   2c1e8:	csinc	x0, x1, x0, hi  // hi = pmore
   2c1ec:	sub	x0, x0, #0x1
   2c1f0:	and	x0, x0, #0xfffffffffffffffe
   2c1f4:	add	x21, x0, #0x4
   2c1f8:	str	x21, [sp, #184]
   2c1fc:	nop
   2c200:	sxtw	x27, w23
   2c204:	mov	x1, x28
   2c208:	ldp	x26, x2, [sp, #104]
   2c20c:	add	x3, x27, #0x1
   2c210:	sub	x24, x28, #0x2
   2c214:	lsl	x22, x27, #3
   2c218:	lsl	x3, x3, #4
   2c21c:	str	x3, [sp, #144]
   2c220:	sub	x6, x3, #0x10
   2c224:	str	x6, [sp, #128]
   2c228:	add	w23, w23, #0x1
   2c22c:	add	x19, x26, x3
   2c230:	add	x21, x2, x6
   2c234:	mov	x0, x19
   2c238:	bl	bcb0 <__gmpz_set_ui@plt>
   2c23c:	mov	x0, x21
   2c240:	mov	x1, x19
   2c244:	mov	x2, x20
   2c248:	bl	c200 <__gmpz_mul_2exp@plt>
   2c24c:	mov	x2, x24
   2c250:	mov	x1, x21
   2c254:	mov	x0, x21
   2c258:	bl	bc30 <__gmpz_sub_ui@plt>
   2c25c:	ldr	x6, [sp, #128]
   2c260:	mov	x2, x24
   2c264:	mov	x1, x19
   2c268:	add	x0, x26, x6
   2c26c:	bl	c100 <__gmpz_mul_ui@plt>
   2c270:	str	w25, [sp, #172]
   2c274:	ldr	x1, [sp, #96]
   2c278:	asr	w0, w25, #1
   2c27c:	ldr	x2, [sp, #160]
   2c280:	sxtw	x24, w0
   2c284:	str	x2, [x1, x27, lsl #3]
   2c288:	ldr	x3, [sp, #144]
   2c28c:	tbnz	w0, #0, 2c348 <mpfr_atan@@Base+0xa88>
   2c290:	ldr	x0, [sp, #104]
   2c294:	sub	x3, x3, #0x20
   2c298:	mov	x23, x21
   2c29c:	mov	x19, #0x2                   	// #2
   2c2a0:	add	x21, x0, x3
   2c2a4:	str	x25, [sp, #128]
   2c2a8:	mov	x25, x22
   2c2ac:	mov	x22, x27
   2c2b0:	mov	x27, x24
   2c2b4:	mov	x24, x19
   2c2b8:	b	2c2d0 <mpfr_atan@@Base+0xa10>
   2c2bc:	sub	x22, x22, #0x1
   2c2c0:	mov	x23, x26
   2c2c4:	sub	x21, x21, #0x10
   2c2c8:	add	x24, x24, #0x1
   2c2cc:	lsl	x25, x22, #3
   2c2d0:	sub	x26, x23, #0x10
   2c2d4:	mov	x1, x23
   2c2d8:	mov	x0, x23
   2c2dc:	mov	x2, x21
   2c2e0:	add	x19, x21, #0x10
   2c2e4:	bl	bff0 <__gmpz_mul@plt>
   2c2e8:	mov	x1, x26
   2c2ec:	mov	x0, x26
   2c2f0:	mov	x2, x19
   2c2f4:	bl	bff0 <__gmpz_mul@plt>
   2c2f8:	sub	w2, w24, #0x1
   2c2fc:	mov	x1, x26
   2c300:	mov	x0, x26
   2c304:	lsr	x27, x27, #1
   2c308:	lsl	x2, x20, x2
   2c30c:	bl	c200 <__gmpz_mul_2exp@plt>
   2c310:	mov	x2, x23
   2c314:	mov	x1, x26
   2c318:	mov	x0, x26
   2c31c:	bl	c9c0 <__gmpz_add@plt>
   2c320:	mov	x0, x21
   2c324:	mov	x2, x19
   2c328:	mov	x1, x21
   2c32c:	bl	bff0 <__gmpz_mul@plt>
   2c330:	ldr	x0, [sp, #96]
   2c334:	mov	w23, w22
   2c338:	add	x3, x0, x25
   2c33c:	stur	x24, [x3, #-8]
   2c340:	tbz	w27, #0, 2c2bc <mpfr_atan@@Base+0x9fc>
   2c344:	ldr	x25, [sp, #128]
   2c348:	add	x25, x25, #0x2
   2c34c:	ldr	x0, [sp, #184]
   2c350:	add	x28, x28, #0x4
   2c354:	cmp	x0, x25
   2c358:	b.ne	2c200 <mpfr_atan@@Base+0x940>  // b.any
   2c35c:	mov	w19, w23
   2c360:	ldp	x25, x23, [sp, #216]
   2c364:	ldr	x27, [sp, #192]
   2c368:	cmp	w19, #0x1
   2c36c:	b.eq	2c46c <mpfr_atan@@Base+0xbac>  // b.none
   2c370:	sxtw	x22, w19
   2c374:	mov	x26, #0x0                   	// #0
   2c378:	sub	x24, x22, #0x1
   2c37c:	mov	x21, #0x1                   	// #1
   2c380:	ldr	x0, [sp, #112]
   2c384:	lsl	x6, x24, #4
   2c388:	str	x20, [sp, #128]
   2c38c:	add	x19, x0, x6
   2c390:	str	x25, [sp, #144]
   2c394:	ldr	x0, [sp, #104]
   2c398:	str	x23, [sp, #160]
   2c39c:	mov	x23, x19
   2c3a0:	add	x28, x0, x6
   2c3a4:	ldr	x19, [sp, #96]
   2c3a8:	b	2c41c <mpfr_atan@@Base+0xb5c>
   2c3ac:	sub	x20, x23, #0x10
   2c3b0:	mov	x2, x28
   2c3b4:	mov	x1, x20
   2c3b8:	mov	x0, x20
   2c3bc:	bl	bff0 <__gmpz_mul@plt>
   2c3c0:	add	x2, x19, x22, lsl #3
   2c3c4:	mov	x1, x20
   2c3c8:	mov	x0, x20
   2c3cc:	mov	x22, x24
   2c3d0:	ldur	x2, [x2, #-8]
   2c3d4:	lsl	x2, x21, x2
   2c3d8:	add	x26, x26, x2
   2c3dc:	ldr	x2, [sp, #128]
   2c3e0:	mul	x2, x26, x2
   2c3e4:	bl	c200 <__gmpz_mul_2exp@plt>
   2c3e8:	mov	x2, x23
   2c3ec:	mov	x1, x20
   2c3f0:	mov	x0, x20
   2c3f4:	bl	c9c0 <__gmpz_add@plt>
   2c3f8:	mov	x2, x28
   2c3fc:	mov	x1, x25
   2c400:	mov	x0, x25
   2c404:	bl	bff0 <__gmpz_mul@plt>
   2c408:	mov	x23, x20
   2c40c:	mov	x28, x25
   2c410:	cmp	w24, #0x1
   2c414:	b.le	2c460 <mpfr_atan@@Base+0xba0>
   2c418:	sub	x24, x24, #0x1
   2c41c:	sub	x25, x28, #0x10
   2c420:	mov	x1, x23
   2c424:	mov	x2, x25
   2c428:	mov	x0, x23
   2c42c:	bl	bff0 <__gmpz_mul@plt>
   2c430:	mov	x0, x27
   2c434:	mov	x1, #0x1                   	// #1
   2c438:	bl	cb20 <__gmpz_cmp_ui@plt>
   2c43c:	cbz	w0, 2c3ac <mpfr_atan@@Base+0xaec>
   2c440:	sub	w2, w22, #0x2
   2c444:	mov	x1, x23
   2c448:	ldr	x3, [sp, #152]
   2c44c:	mov	x0, x23
   2c450:	ldr	x2, [x19, w2, sxtw #3]
   2c454:	add	x2, x3, x2, lsl #4
   2c458:	bl	bff0 <__gmpz_mul@plt>
   2c45c:	b	2c3ac <mpfr_atan@@Base+0xaec>
   2c460:	ldr	x20, [sp, #128]
   2c464:	ldr	x25, [sp, #144]
   2c468:	ldr	x23, [sp, #160]
   2c46c:	mov	x1, #0xfffffffffffffff8    	// #-8
   2c470:	ldr	w0, [sp, #1700]
   2c474:	ldr	x3, [sp, #1704]
   2c478:	cmp	w0, #0x0
   2c47c:	cneg	w0, w0, lt  // lt = tstop
   2c480:	ldr	x2, [sp, #136]
   2c484:	add	x1, x1, w0, sxtw #3
   2c488:	sbfiz	x0, x0, #6, #32
   2c48c:	ldr	x1, [x3, x1]
   2c490:	lsl	x2, x2, #1
   2c494:	clz	x1, x1
   2c498:	sub	x0, x0, x1
   2c49c:	subs	x19, x0, x2
   2c4a0:	b.mi	2c590 <mpfr_atan@@Base+0xcd0>  // b.first
   2c4a4:	ldr	x0, [sp, #112]
   2c4a8:	mov	x2, x19
   2c4ac:	mov	x1, x0
   2c4b0:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   2c4b4:	ldr	x3, [sp, #104]
   2c4b8:	mov	x1, #0xfffffffffffffff8    	// #-8
   2c4bc:	ldr	w0, [x3, #4]
   2c4c0:	ldr	x2, [x3, #8]
   2c4c4:	cmp	w0, #0x0
   2c4c8:	cneg	w0, w0, lt  // lt = tstop
   2c4cc:	add	x1, x1, w0, sxtw #3
   2c4d0:	sbfiz	x0, x0, #6, #32
   2c4d4:	ldr	x2, [x2, x1]
   2c4d8:	ldr	x1, [sp, #136]
   2c4dc:	clz	x2, x2
   2c4e0:	sub	x0, x0, x2
   2c4e4:	sub	x2, x0, x1
   2c4e8:	sub	x19, x19, x2
   2c4ec:	tbnz	x2, #63, 2c578 <mpfr_atan@@Base+0xcb8>
   2c4f0:	mov	x1, x3
   2c4f4:	mov	x0, x3
   2c4f8:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   2c4fc:	ldp	x2, x22, [sp, #104]
   2c500:	add	x21, sp, #0x1f0
   2c504:	mov	x1, x22
   2c508:	mov	x0, x22
   2c50c:	bl	bb30 <__gmpz_tdiv_q@plt>
   2c510:	mov	x1, x22
   2c514:	mov	x0, x21
   2c518:	mov	w2, #0x3                   	// #3
   2c51c:	bl	c240 <mpfr_set_z@plt>
   2c520:	ldr	w0, [sp, #172]
   2c524:	ldr	x1, [sp, #512]
   2c528:	sub	w0, w0, #0x1
   2c52c:	add	x19, x19, x1
   2c530:	sxtw	x0, w0
   2c534:	msub	x20, x0, x20, x19
   2c538:	str	x20, [sp, #512]
   2c53c:	b	2be20 <mpfr_atan@@Base+0x560>
   2c540:	cbz	w19, 2c910 <mpfr_atan@@Base+0x1050>
   2c544:	ldr	w0, [sp, #284]
   2c548:	mov	x12, #0x12d0                	// #4816
   2c54c:	ldp	x21, x22, [sp, #32]
   2c550:	orr	w0, w0, #0x8
   2c554:	ldp	x23, x24, [sp, #48]
   2c558:	ldp	x25, x26, [sp, #64]
   2c55c:	ldp	x27, x28, [sp, #80]
   2c560:	str	w0, [x2]
   2c564:	mov	w0, w19
   2c568:	ldp	x29, x30, [sp]
   2c56c:	ldp	x19, x20, [sp, #16]
   2c570:	add	sp, sp, x12
   2c574:	ret
   2c578:	ldr	x1, [sp, #136]
   2c57c:	sub	x2, x1, x0
   2c580:	ldr	x0, [sp, #104]
   2c584:	mov	x1, x0
   2c588:	bl	c200 <__gmpz_mul_2exp@plt>
   2c58c:	b	2c4fc <mpfr_atan@@Base+0xc3c>
   2c590:	sub	x2, x2, x0
   2c594:	ldr	x0, [sp, #112]
   2c598:	mov	x1, x0
   2c59c:	bl	c200 <__gmpz_mul_2exp@plt>
   2c5a0:	b	2c4b4 <mpfr_atan@@Base+0xbf4>
   2c5a4:	ldr	x0, [sp, #536]
   2c5a8:	bl	c1c0 <mpfr_reallocate_func@plt>
   2c5ac:	str	x0, [sp, #536]
   2c5b0:	b	2bb54 <mpfr_atan@@Base+0x294>
   2c5b4:	ldr	x0, [sp, #152]
   2c5b8:	mov	x1, x27
   2c5bc:	bl	bfa0 <__gmpz_set@plt>
   2c5c0:	ldr	x22, [sp, #128]
   2c5c4:	ldr	w0, [sp, #168]
   2c5c8:	add	x19, x22, #0x10
   2c5cc:	add	x19, x19, w0, uxtw #4
   2c5d0:	sub	x2, x22, #0x10
   2c5d4:	mov	x0, x22
   2c5d8:	mov	x1, x2
   2c5dc:	add	x22, x22, #0x10
   2c5e0:	bl	bff0 <__gmpz_mul@plt>
   2c5e4:	cmp	x19, x22
   2c5e8:	b.ne	2c5d0 <mpfr_atan@@Base+0xd10>  // b.any
   2c5ec:	add	x0, sp, #0x4a0
   2c5f0:	str	x0, [sp, #96]
   2c5f4:	mov	x0, #0x2                   	// #2
   2c5f8:	mov	w19, #0x0                   	// #0
   2c5fc:	str	w19, [sp, #160]
   2c600:	str	x0, [sp, #184]
   2c604:	mov	x0, #0x3                   	// #3
   2c608:	str	x0, [sp, #192]
   2c60c:	str	x27, [sp, #224]
   2c610:	stp	x25, x23, [sp, #336]
   2c614:	nop
   2c618:	ldrsw	x24, [sp, #160]
   2c61c:	ldp	x22, x26, [sp, #104]
   2c620:	add	x3, x24, #0x1
   2c624:	ldr	x0, [sp, #192]
   2c628:	lsl	x25, x3, #4
   2c62c:	sub	x19, x25, #0x10
   2c630:	lsl	x23, x24, #3
   2c634:	mov	x1, x0
   2c638:	sub	x28, x0, #0x2
   2c63c:	add	x27, x22, x25
   2c640:	add	x21, x26, x25
   2c644:	mov	x0, x27
   2c648:	bl	bcb0 <__gmpz_set_ui@plt>
   2c64c:	ldr	x1, [sp, #224]
   2c650:	add	x26, x26, x19
   2c654:	mov	x0, x21
   2c658:	mov	x2, x28
   2c65c:	bl	c100 <__gmpz_mul_ui@plt>
   2c660:	mov	x0, x26
   2c664:	mov	x1, x27
   2c668:	mov	x2, x20
   2c66c:	bl	c200 <__gmpz_mul_2exp@plt>
   2c670:	mov	x2, x21
   2c674:	mov	x1, x26
   2c678:	mov	x0, x26
   2c67c:	bl	bde0 <__gmpz_sub@plt>
   2c680:	mov	x2, x28
   2c684:	mov	x1, x27
   2c688:	add	x0, x22, x19
   2c68c:	bl	c100 <__gmpz_mul_ui@plt>
   2c690:	ldr	x1, [sp, #184]
   2c694:	mov	x3, #0x1                   	// #1
   2c698:	ldr	x2, [sp, #96]
   2c69c:	str	w1, [sp, #172]
   2c6a0:	asr	w0, w1, #1
   2c6a4:	str	x3, [x2, x24, lsl #3]
   2c6a8:	and	w2, w0, #0x1
   2c6ac:	str	w2, [sp, #144]
   2c6b0:	sxtw	x21, w0
   2c6b4:	tbnz	w0, #0, 2c890 <mpfr_atan@@Base+0xfd0>
   2c6b8:	ldr	x0, [sp, #104]
   2c6bc:	sub	x3, x25, #0x20
   2c6c0:	ldr	x28, [sp, #128]
   2c6c4:	add	x25, x0, x3
   2c6c8:	mov	x27, #0x2                   	// #2
   2c6cc:	mov	x0, x24
   2c6d0:	mov	x22, x27
   2c6d4:	mov	x19, x23
   2c6d8:	mov	x24, x28
   2c6dc:	mov	x23, x26
   2c6e0:	mov	x27, x25
   2c6e4:	mov	x28, x0
   2c6e8:	b	2c708 <mpfr_atan@@Base+0xe48>
   2c6ec:	cbnz	x1, 2c800 <mpfr_atan@@Base+0xf40>
   2c6f0:	sub	x28, x28, #0x1
   2c6f4:	add	x22, x22, #0x1
   2c6f8:	mov	x23, x26
   2c6fc:	sub	x27, x27, #0x10
   2c700:	add	x24, x24, #0x10
   2c704:	lsl	x19, x28, #3
   2c708:	mov	x2, x27
   2c70c:	mov	x1, x23
   2c710:	mov	x0, x23
   2c714:	bl	bff0 <__gmpz_mul@plt>
   2c718:	sub	x26, x23, #0x10
   2c71c:	mov	x2, x24
   2c720:	mov	x1, x23
   2c724:	mov	x0, x23
   2c728:	add	x25, x27, #0x10
   2c72c:	bl	bff0 <__gmpz_mul@plt>
   2c730:	mov	x1, x26
   2c734:	mov	x0, x26
   2c738:	mov	x2, x25
   2c73c:	bl	bff0 <__gmpz_mul@plt>
   2c740:	sub	w2, w22, #0x1
   2c744:	mov	x1, x26
   2c748:	mov	x0, x26
   2c74c:	str	w28, [sp, #160]
   2c750:	lsl	x2, x20, x2
   2c754:	bl	c200 <__gmpz_mul_2exp@plt>
   2c758:	mov	x2, x23
   2c75c:	mov	x1, x26
   2c760:	mov	x0, x26
   2c764:	bl	c9c0 <__gmpz_add@plt>
   2c768:	mov	x2, x25
   2c76c:	mov	x1, x27
   2c770:	mov	x0, x27
   2c774:	bl	bff0 <__gmpz_mul@plt>
   2c778:	ldr	x1, [sp, #96]
   2c77c:	lsl	x6, x20, x22
   2c780:	ldr	w0, [x24, #20]
   2c784:	mov	w3, #0x40                  	// #64
   2c788:	add	x1, x1, x19
   2c78c:	cmp	w0, #0x0
   2c790:	cneg	w0, w0, lt  // lt = tstop
   2c794:	cmp	w28, #0x1
   2c798:	stur	x22, [x1, #-8]
   2c79c:	mov	x1, #0xfffffffffffffff8    	// #-8
   2c7a0:	ldr	x2, [x24, #24]
   2c7a4:	add	x1, x1, w0, sxtw #3
   2c7a8:	smsubl	x0, w0, w3, x6
   2c7ac:	ldr	x1, [x2, x1]
   2c7b0:	clz	x1, x1
   2c7b4:	sub	x1, x1, #0x1
   2c7b8:	add	x0, x0, x1
   2c7bc:	b.eq	2c7d0 <mpfr_atan@@Base+0xf10>  // b.none
   2c7c0:	ldr	x2, [sp, #120]
   2c7c4:	sub	w1, w28, #0x2
   2c7c8:	ldr	x1, [x2, w1, sxtw #3]
   2c7cc:	add	x0, x0, x1
   2c7d0:	ldr	x1, [sp, #120]
   2c7d4:	lsr	x21, x21, #1
   2c7d8:	add	x5, x1, x19
   2c7dc:	ldr	x1, [sp, #136]
   2c7e0:	stur	x0, [x5, #-8]
   2c7e4:	cmp	x1, x0
   2c7e8:	and	x1, x21, #0x1
   2c7ec:	b.ge	2c6ec <mpfr_atan@@Base+0xe2c>  // b.tcont
   2c7f0:	cbnz	x1, 2c830 <mpfr_atan@@Base+0xf70>
   2c7f4:	mov	w0, #0x1                   	// #1
   2c7f8:	str	w0, [sp, #144]
   2c7fc:	b	2c6f0 <mpfr_atan@@Base+0xe30>
   2c800:	ldr	w0, [sp, #144]
   2c804:	eor	w21, w0, #0x1
   2c808:	ldr	x1, [sp, #184]
   2c80c:	ldr	x0, [sp, #216]
   2c810:	cmp	x0, x1
   2c814:	add	x1, x1, #0x2
   2c818:	ldr	x0, [sp, #192]
   2c81c:	add	x0, x0, #0x4
   2c820:	stp	x1, x0, [sp, #184]
   2c824:	cset	w0, hi  // hi = pmore
   2c828:	tst	w21, w0
   2c82c:	b.ne	2c618 <mpfr_atan@@Base+0xd58>  // b.any
   2c830:	ldr	w19, [sp, #160]
   2c834:	ldr	x27, [sp, #224]
   2c838:	ldp	x25, x23, [sp, #336]
   2c83c:	b	2c368 <mpfr_atan@@Base+0xaa8>
   2c840:	mov	x2, x0
   2c844:	mov	x1, x27
   2c848:	ldr	x0, [sp, #176]
   2c84c:	sub	x20, x0, x2
   2c850:	mov	x0, x27
   2c854:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   2c858:	b	2c188 <mpfr_atan@@Base+0x8c8>
   2c85c:	ldr	w3, [sp, #376]
   2c860:	add	x25, sp, #0x1b0
   2c864:	ldr	x1, [sp, #256]
   2c868:	mov	x0, x25
   2c86c:	mov	w2, #0x0                   	// #0
   2c870:	neg	x20, x21
   2c874:	bl	c6a0 <mpfr_set4@plt>
   2c878:	ldr	x0, [sp, #448]
   2c87c:	cmp	x20, x0
   2c880:	mov	x21, x0
   2c884:	b.lt	2bc18 <mpfr_atan@@Base+0x358>  // b.tstop
   2c888:	stp	xzr, xzr, [sp, #288]
   2c88c:	b	2bcdc <mpfr_atan@@Base+0x41c>
   2c890:	ldr	w0, [sp, #160]
   2c894:	mov	w21, #0x1                   	// #1
   2c898:	add	w0, w0, #0x1
   2c89c:	str	w0, [sp, #160]
   2c8a0:	b	2c808 <mpfr_atan@@Base+0xf48>
   2c8a4:	ldr	x2, [sp, #360]
   2c8a8:	mov	x3, #0x8                   	// #8
   2c8ac:	ldr	x0, [sp, #128]
   2c8b0:	add	x21, sp, #0x1f0
   2c8b4:	ldr	x2, [x2]
   2c8b8:	sub	x0, x0, #0x10
   2c8bc:	adrp	x1, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2c8c0:	add	x1, x1, #0x788
   2c8c4:	add	x2, x2, #0x1
   2c8c8:	str	x0, [sp, #152]
   2c8cc:	mov	x0, x21
   2c8d0:	str	x3, [sp, #176]
   2c8d4:	add	x2, x2, x2, lsl #1
   2c8d8:	add	x1, x1, x2, lsl #3
   2c8dc:	bl	2b850 <mpfr_atanh@@Base+0x590>
   2c8e0:	b	2be20 <mpfr_atan@@Base+0x560>
   2c8e4:	ldr	x0, [sp, #128]
   2c8e8:	add	x21, sp, #0x1f0
   2c8ec:	adrp	x1, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2c8f0:	add	x1, x1, #0x788
   2c8f4:	sub	x0, x0, #0x10
   2c8f8:	str	x0, [sp, #152]
   2c8fc:	mov	x0, x21
   2c900:	bl	2b850 <mpfr_atanh@@Base+0x590>
   2c904:	mov	x0, #0x2                   	// #2
   2c908:	str	x0, [sp, #176]
   2c90c:	b	2be20 <mpfr_atan@@Base+0x560>
   2c910:	mov	w0, w19
   2c914:	mov	x12, #0x12d0                	// #4816
   2c918:	ldp	x29, x30, [sp]
   2c91c:	ldp	x19, x20, [sp, #16]
   2c920:	ldp	x21, x22, [sp, #32]
   2c924:	ldp	x23, x24, [sp, #48]
   2c928:	ldp	x25, x26, [sp, #64]
   2c92c:	ldp	x27, x28, [sp, #80]
   2c930:	add	sp, sp, x12
   2c934:	ret
   2c938:	ldr	w4, [sp, #236]
   2c93c:	mov	w3, #0x0                   	// #0
   2c940:	bl	c540 <mpfr_round_near_x@plt>
   2c944:	mov	w19, w0
   2c948:	cbnz	w0, 2c084 <mpfr_atan@@Base+0x7c4>
   2c94c:	ldr	x0, [sp, #248]
   2c950:	stp	x21, x22, [sp, #32]
   2c954:	ldr	x3, [x0, #16]
   2c958:	b	2b918 <mpfr_atan@@Base+0x58>
   2c95c:	ldr	x1, [sp, #240]
   2c960:	mov	x0, #0xfffffffffffffeff    	// #-257
   2c964:	movk	x0, #0x7fff, lsl #48
   2c968:	sub	x0, x0, x1
   2c96c:	ldr	x1, [sp, #328]
   2c970:	cmp	x0, x1
   2c974:	b.lt	2cd8c <mpfr_atan@@Base+0x14cc>  // b.tstop
   2c978:	ldr	x0, [sp, #240]
   2c97c:	ldr	x1, [sp, #328]
   2c980:	ldr	w20, [sp, #280]
   2c984:	add	x0, x0, x1
   2c988:	str	x0, [sp, #240]
   2c98c:	add	x0, x0, x0, lsr #63
   2c990:	asr	x0, x0, #1
   2c994:	str	x0, [sp, #328]
   2c998:	b	2baa0 <mpfr_atan@@Base+0x1e0>
   2c99c:	mov	x0, #0x2                   	// #2
   2c9a0:	movk	x0, #0x8000, lsl #48
   2c9a4:	cmp	x3, x0
   2c9a8:	b.eq	2cd58 <mpfr_atan@@Base+0x1498>  // b.none
   2c9ac:	cmp	x3, x4
   2c9b0:	b.eq	2cbec <mpfr_atan@@Base+0x132c>  // b.none
   2c9b4:	ldr	x0, [sp, #248]
   2c9b8:	mov	w19, #0x0                   	// #0
   2c9bc:	ldr	x2, [sp, #200]
   2c9c0:	ldr	w1, [x0, #8]
   2c9c4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2c9c8:	str	w1, [x2, #8]
   2c9cc:	str	x0, [x2, #16]
   2c9d0:	b	2c084 <mpfr_atan@@Base+0x7c4>
   2c9d4:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2c9d8:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2c9dc:	add	x2, x2, #0x778
   2c9e0:	add	x0, x0, #0x700
   2c9e4:	mov	w1, #0x178                 	// #376
   2c9e8:	bl	cb40 <mpfr_assert_fail@plt>
   2c9ec:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2c9f0:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2c9f4:	add	x2, x2, #0x708
   2c9f8:	add	x0, x0, #0x700
   2c9fc:	mov	w1, #0x176                 	// #374
   2ca00:	bl	cb40 <mpfr_assert_fail@plt>
   2ca04:	ldr	x0, [sp, #248]
   2ca08:	ldr	w20, [x0, #8]
   2ca0c:	cmp	w20, #0x0
   2ca10:	b.le	2cb90 <mpfr_atan@@Base+0x12d0>
   2ca14:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2ca18:	ldr	x1, [x0, #2624]
   2ca1c:	add	x0, x0, #0xa40
   2ca20:	blr	x1
   2ca24:	ldr	w2, [sp, #236]
   2ca28:	ldr	x1, [sp, #272]
   2ca2c:	add	x1, x1, x0
   2ca30:	ldr	x0, [sp, #200]
   2ca34:	bl	c380 <mpfr_cache@plt>
   2ca38:	mov	w19, w0
   2ca3c:	ldr	x20, [sp, #200]
   2ca40:	mov	x2, #0x2                   	// #2
   2ca44:	ldr	w21, [sp, #236]
   2ca48:	mov	x1, x20
   2ca4c:	mov	x0, x20
   2ca50:	mov	w3, w21
   2ca54:	bl	c8f0 <mpfr_div_2ui@plt>
   2ca58:	ldr	x4, [sp, #272]
   2ca5c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2ca60:	ldr	x1, [x0, #2576]
   2ca64:	add	x0, x0, #0xa10
   2ca68:	blr	x1
   2ca6c:	ldp	x6, x7, [sp, #304]
   2ca70:	add	x2, x4, x0
   2ca74:	ldr	w1, [sp, #284]
   2ca78:	str	w1, [x4, x0]
   2ca7c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2ca80:	ldr	x3, [x0, #2512]
   2ca84:	add	x0, x0, #0x9d0
   2ca88:	blr	x3
   2ca8c:	ldr	x1, [x20, #16]
   2ca90:	str	x6, [x4, x0]
   2ca94:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2ca98:	ldr	x3, [x0, #2544]
   2ca9c:	add	x0, x0, #0x9f0
   2caa0:	blr	x3
   2caa4:	str	x7, [x4, x0]
   2caa8:	cmp	x7, x1
   2caac:	ccmp	x6, x1, #0x0, ge  // ge = tcont
   2cab0:	b.le	2caf4 <mpfr_atan@@Base+0x1234>
   2cab4:	mov	w2, w21
   2cab8:	mov	w1, w19
   2cabc:	mov	x0, x20
   2cac0:	bl	cb30 <mpfr_check_range@plt>
   2cac4:	mov	w19, w0
   2cac8:	ldp	x21, x22, [sp, #32]
   2cacc:	b	2c084 <mpfr_atan@@Base+0x7c4>
   2cad0:	add	x27, sp, #0x160
   2cad4:	mov	x1, #0x45                  	// #69
   2cad8:	mov	x0, x27
   2cadc:	bl	c900 <mpfr_mpz_init2@plt>
   2cae0:	mov	x0, #0x5                   	// #5
   2cae4:	mov	x19, #0x2                   	// #2
   2cae8:	mov	x21, #0x45                  	// #69
   2caec:	str	x0, [sp, #240]
   2caf0:	b	2ba34 <mpfr_atan@@Base+0x174>
   2caf4:	cbz	w19, 2cb60 <mpfr_atan@@Base+0x12a0>
   2caf8:	ldr	w0, [sp, #284]
   2cafc:	ldp	x21, x22, [sp, #32]
   2cb00:	orr	w0, w0, #0x8
   2cb04:	str	w0, [x2]
   2cb08:	b	2c084 <mpfr_atan@@Base+0x7c4>
   2cb0c:	mov	w1, #0x166                 	// #358
   2cb10:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2cb14:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2cb18:	add	x2, x2, #0x6e0
   2cb1c:	add	x0, x0, #0x700
   2cb20:	bl	cb40 <mpfr_assert_fail@plt>
   2cb24:	ldr	x0, [sp, #200]
   2cb28:	mov	w2, #0x40                  	// #64
   2cb2c:	add	x27, sp, #0x160
   2cb30:	ldr	x1, [x0]
   2cb34:	mov	x0, x27
   2cb38:	sub	x1, x1, #0x1
   2cb3c:	clz	x1, x1
   2cb40:	sub	w1, w2, w1
   2cb44:	add	x20, x20, w1, sxtw
   2cb48:	add	x1, x20, #0x4
   2cb4c:	add	x21, x20, #0x44
   2cb50:	str	x1, [sp, #240]
   2cb54:	mov	x1, x21
   2cb58:	bl	c900 <mpfr_mpz_init2@plt>
   2cb5c:	b	2ba14 <mpfr_atan@@Base+0x154>
   2cb60:	ldp	x21, x22, [sp, #32]
   2cb64:	b	2c084 <mpfr_atan@@Base+0x7c4>
   2cb68:	mov	x0, #0x3                   	// #3
   2cb6c:	mov	x21, #0xfffffffffffffffd    	// #-3
   2cb70:	str	x0, [sp, #264]
   2cb74:	b	2c0d0 <mpfr_atan@@Base+0x810>
   2cb78:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   2cb7c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2cb80:	add	x2, x2, #0x820
   2cb84:	add	x0, x0, #0x700
   2cb88:	mov	w1, #0x17f                 	// #383
   2cb8c:	bl	cb40 <mpfr_assert_fail@plt>
   2cb90:	ldr	w0, [sp, #236]
   2cb94:	mov	w2, #0x3                   	// #3
   2cb98:	cmp	w0, #0x2
   2cb9c:	b.eq	2cbac <mpfr_atan@@Base+0x12ec>  // b.none
   2cba0:	cmp	w0, w2
   2cba4:	mov	w2, #0x2                   	// #2
   2cba8:	csel	w2, w0, w2, ne  // ne = any
   2cbac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2cbb0:	ldr	x1, [x0, #2624]
   2cbb4:	add	x0, x0, #0xa40
   2cbb8:	blr	x1
   2cbbc:	ldr	x21, [sp, #200]
   2cbc0:	ldr	x1, [sp, #272]
   2cbc4:	add	x1, x1, x0
   2cbc8:	mov	x0, x21
   2cbcc:	bl	c380 <mpfr_cache@plt>
   2cbd0:	mov	w19, w0
   2cbd4:	cbz	w20, 2ca3c <mpfr_atan@@Base+0x117c>
   2cbd8:	neg	w19, w0
   2cbdc:	ldr	w0, [x21, #8]
   2cbe0:	neg	w0, w0
   2cbe4:	str	w0, [x21, #8]
   2cbe8:	b	2ca3c <mpfr_atan@@Base+0x117c>
   2cbec:	mrs	x4, tpidr_el0
   2cbf0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2cbf4:	ldr	x1, [x0, #2576]
   2cbf8:	add	x0, x0, #0xa10
   2cbfc:	blr	x1
   2cc00:	ldr	x3, [sp, #248]
   2cc04:	stp	x21, x22, [sp, #32]
   2cc08:	ldr	w20, [x4, x0]
   2cc0c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2cc10:	ldr	x6, [x0, #2512]
   2cc14:	add	x0, x0, #0x9d0
   2cc18:	blr	x6
   2cc1c:	str	x4, [sp, #272]
   2cc20:	mov	x6, x4
   2cc24:	stp	x23, x24, [sp, #48]
   2cc28:	ldr	w3, [x3, #8]
   2cc2c:	ldr	x22, [x4, x0]
   2cc30:	add	x4, x4, x0
   2cc34:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   2cc38:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2cc3c:	ldr	x7, [x0, #2544]
   2cc40:	add	x0, x0, #0x9f0
   2cc44:	blr	x7
   2cc48:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2cc4c:	cmp	w3, #0x0
   2cc50:	str	x5, [x4]
   2cc54:	ldr	x21, [x6, x0]
   2cc58:	str	x1, [x6, x0]
   2cc5c:	b.gt	2cda4 <mpfr_atan@@Base+0x14e4>
   2cc60:	ldr	w0, [sp, #236]
   2cc64:	mov	w2, #0x3                   	// #3
   2cc68:	cmp	w0, #0x2
   2cc6c:	b.eq	2cc7c <mpfr_atan@@Base+0x13bc>  // b.none
   2cc70:	cmp	w0, w2
   2cc74:	mov	w2, #0x2                   	// #2
   2cc78:	csel	w2, w0, w2, ne  // ne = any
   2cc7c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2cc80:	ldr	x1, [x0, #2624]
   2cc84:	add	x0, x0, #0xa40
   2cc88:	blr	x1
   2cc8c:	ldr	x19, [sp, #200]
   2cc90:	ldr	x1, [sp, #272]
   2cc94:	add	x1, x1, x0
   2cc98:	mov	x0, x19
   2cc9c:	bl	c380 <mpfr_cache@plt>
   2cca0:	mov	x2, x19
   2cca4:	neg	w19, w0
   2cca8:	ldr	w1, [x2, #8]
   2ccac:	neg	w1, w1
   2ccb0:	str	w1, [x2, #8]
   2ccb4:	ldr	w3, [sp, #236]
   2ccb8:	mov	x2, #0x1                   	// #1
   2ccbc:	ldr	x23, [sp, #200]
   2ccc0:	mov	x1, x23
   2ccc4:	mov	x0, x23
   2ccc8:	bl	c8f0 <mpfr_div_2ui@plt>
   2cccc:	ldr	x3, [sp, #272]
   2ccd0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2ccd4:	ldr	x1, [x0, #2576]
   2ccd8:	add	x0, x0, #0xa10
   2ccdc:	blr	x1
   2cce0:	ldr	x1, [x23, #16]
   2cce4:	add	x2, x3, x0
   2cce8:	str	w20, [x3, x0]
   2ccec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2ccf0:	ldr	x4, [x0, #2512]
   2ccf4:	add	x0, x0, #0x9d0
   2ccf8:	blr	x4
   2ccfc:	str	x22, [x3, x0]
   2cd00:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2cd04:	ldr	x4, [x0, #2544]
   2cd08:	add	x0, x0, #0x9f0
   2cd0c:	blr	x4
   2cd10:	str	x21, [x3, x0]
   2cd14:	cmp	x22, x1
   2cd18:	ccmp	x21, x1, #0x1, le
   2cd1c:	b.ge	2cd40 <mpfr_atan@@Base+0x1480>  // b.tcont
   2cd20:	ldr	w2, [sp, #236]
   2cd24:	mov	w1, w19
   2cd28:	ldr	x0, [sp, #200]
   2cd2c:	bl	cb30 <mpfr_check_range@plt>
   2cd30:	mov	w19, w0
   2cd34:	ldp	x21, x22, [sp, #32]
   2cd38:	ldp	x23, x24, [sp, #48]
   2cd3c:	b	2c084 <mpfr_atan@@Base+0x7c4>
   2cd40:	cbz	w19, 2cd34 <mpfr_atan@@Base+0x1474>
   2cd44:	orr	w20, w20, #0x8
   2cd48:	ldp	x21, x22, [sp, #32]
   2cd4c:	ldp	x23, x24, [sp, #48]
   2cd50:	str	w20, [x2]
   2cd54:	b	2c084 <mpfr_atan@@Base+0x7c4>
   2cd58:	mrs	x1, tpidr_el0
   2cd5c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2cd60:	ldr	x2, [x0, #2576]
   2cd64:	add	x0, x0, #0xa10
   2cd68:	blr	x2
   2cd6c:	add	x0, x1, x0
   2cd70:	mov	w19, #0x0                   	// #0
   2cd74:	ldr	x1, [sp, #200]
   2cd78:	str	x3, [x1, #16]
   2cd7c:	ldr	w1, [x0]
   2cd80:	orr	w1, w1, #0x4
   2cd84:	str	w1, [x0]
   2cd88:	b	2c084 <mpfr_atan@@Base+0x7c4>
   2cd8c:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2cd90:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2cd94:	add	x2, x2, #0x728
   2cd98:	add	x0, x0, #0x700
   2cd9c:	mov	w1, #0x1f6                 	// #502
   2cda0:	bl	cb40 <mpfr_assert_fail@plt>
   2cda4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2cda8:	ldr	x1, [x0, #2624]
   2cdac:	add	x0, x0, #0xa40
   2cdb0:	blr	x1
   2cdb4:	add	x1, x6, x0
   2cdb8:	ldr	x0, [sp, #200]
   2cdbc:	bl	c380 <mpfr_cache@plt>
   2cdc0:	mov	w19, w0
   2cdc4:	b	2ccb4 <mpfr_atan@@Base+0x13f4>
   2cdc8:	bl	c8e0 <mpfr_abort_prec_max@plt>
   2cdcc:	nop

000000000002cdd0 <mpfr_cmp2@@Base>:
   2cdd0:	stp	x29, x30, [sp, #-160]!
   2cdd4:	mov	x3, #0x4                   	// #4
   2cdd8:	movk	x3, #0x8000, lsl #48
   2cddc:	mov	x29, sp
   2cde0:	stp	x25, x26, [sp, #64]
   2cde4:	mov	x26, x2
   2cde8:	ldr	x2, [x1, #16]
   2cdec:	stp	x21, x22, [sp, #32]
   2cdf0:	ldr	x21, [x0, #16]
   2cdf4:	stp	x19, x20, [sp, #16]
   2cdf8:	cmp	x2, x3
   2cdfc:	stp	x23, x24, [sp, #48]
   2ce00:	ccmp	x21, x3, #0x4, ne  // ne = any
   2ce04:	mov	x23, x1
   2ce08:	stp	x27, x28, [sp, #80]
   2ce0c:	mov	x20, x0
   2ce10:	sub	x21, x21, x2
   2ce14:	str	xzr, [sp, #144]
   2ce18:	b.eq	2d0c4 <mpfr_cmp2@@Base+0x2f4>  // b.none
   2ce1c:	ldr	x0, [x23]
   2ce20:	mov	x22, x21
   2ce24:	ldr	x1, [x20]
   2ce28:	subs	x2, x0, #0x1
   2ce2c:	add	x19, x0, #0x3e
   2ce30:	csel	x19, x19, x2, mi  // mi = first
   2ce34:	add	x3, x1, #0x3e
   2ce38:	subs	x2, x1, #0x1
   2ce3c:	csel	x3, x3, x2, mi  // mi = first
   2ce40:	asr	x19, x19, #6
   2ce44:	cmp	x21, #0x0
   2ce48:	asr	x3, x3, #6
   2ce4c:	mov	x2, x3
   2ce50:	ldr	x27, [x20, #24]
   2ce54:	ldr	x24, [x23, #24]
   2ce58:	b.lt	2cf60 <mpfr_cmp2@@Base+0x190>  // b.tstop
   2ce5c:	b.ne	2cf30 <mpfr_cmp2@@Base+0x160>  // b.any
   2ce60:	cmn	x1, #0x3e
   2ce64:	mov	x1, #0xffffffffffffffc2    	// #-62
   2ce68:	ccmp	x0, x1, #0x1, ge  // ge = tcont
   2ce6c:	b.lt	2d0d0 <mpfr_cmp2@@Base+0x300>  // b.tstop
   2ce70:	add	x0, x27, x3, lsl #3
   2ce74:	b	2ce8c <mpfr_cmp2@@Base+0xbc>
   2ce78:	sub	x19, x19, #0x1
   2ce7c:	subs	x3, x3, #0x1
   2ce80:	ccmp	x19, #0x0, #0x1, pl  // pl = nfrst
   2ce84:	add	x21, x21, #0x40
   2ce88:	b.lt	2d0d0 <mpfr_cmp2@@Base+0x300>  // b.tstop
   2ce8c:	ldr	x1, [x0]
   2ce90:	mov	x2, x0
   2ce94:	ldr	x4, [x24, x19, lsl #3]
   2ce98:	sub	x0, x0, #0x8
   2ce9c:	cmp	x1, x4
   2cea0:	b.eq	2ce78 <mpfr_cmp2@@Base+0xa8>  // b.none
   2cea4:	tbnz	x19, #63, 2d178 <mpfr_cmp2@@Base+0x3a8>
   2cea8:	ldr	x4, [x24, x19, lsl #3]
   2ceac:	add	x0, x24, x19, lsl #3
   2ceb0:	cmp	x4, x1
   2ceb4:	b.hi	2cf80 <mpfr_cmp2@@Base+0x1b0>  // b.pmore
   2ceb8:	mov	x0, x2
   2cebc:	mov	x1, x4
   2cec0:	mov	w28, #0x1                   	// #1
   2cec4:	mov	x22, #0x0                   	// #0
   2cec8:	mov	x23, #0x0                   	// #0
   2cecc:	str	x1, [sp, #144]
   2ced0:	sub	x19, x19, #0x1
   2ced4:	ldr	x0, [x0]
   2ced8:	cmp	x19, #0x0
   2cedc:	ccmp	x23, #0x0, #0x0, lt  // lt = tstop
   2cee0:	sub	x20, x3, #0x1
   2cee4:	sub	x1, x0, x1
   2cee8:	str	x1, [sp, #152]
   2ceec:	b.ne	2cfa0 <mpfr_cmp2@@Base+0x1d0>  // b.any
   2cef0:	mov	x23, #0x0                   	// #0
   2cef4:	clz	x3, x1
   2cef8:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   2cefc:	add	x21, x3, x21
   2cf00:	lsr	x2, x2, x3
   2cf04:	cmp	x2, x1
   2cf08:	b.eq	2d038 <mpfr_cmp2@@Base+0x268>  // b.none
   2cf0c:	str	x21, [x26]
   2cf10:	mov	w0, w28
   2cf14:	ldp	x19, x20, [sp, #16]
   2cf18:	ldp	x21, x22, [sp, #32]
   2cf1c:	ldp	x23, x24, [sp, #48]
   2cf20:	ldp	x25, x26, [sp, #64]
   2cf24:	ldp	x27, x28, [sp, #80]
   2cf28:	ldp	x29, x30, [sp], #160
   2cf2c:	ret
   2cf30:	mov	w28, #0x1                   	// #1
   2cf34:	cmp	x22, #0x3f
   2cf38:	add	x0, x27, x3, lsl #3
   2cf3c:	b.hi	2d0e0 <mpfr_cmp2@@Base+0x310>  // b.pmore
   2cf40:	ldr	x1, [x24, x19, lsl #3]
   2cf44:	neg	w23, w22
   2cf48:	mov	x21, #0x0                   	// #0
   2cf4c:	lsr	x1, x1, x22
   2cf50:	str	x1, [sp, #144]
   2cf54:	ldr	x2, [x24, x19, lsl #3]
   2cf58:	lsl	x23, x2, x23
   2cf5c:	b	2ced0 <mpfr_cmp2@@Base+0x100>
   2cf60:	mov	x0, x27
   2cf64:	mov	x3, x19
   2cf68:	mov	x27, x24
   2cf6c:	neg	x22, x21
   2cf70:	mov	x24, x0
   2cf74:	mov	x19, x2
   2cf78:	mov	w28, #0xffffffff            	// #-1
   2cf7c:	b	2cf34 <mpfr_cmp2@@Base+0x164>
   2cf80:	mov	x4, x3
   2cf84:	mov	x2, x27
   2cf88:	mov	x3, x19
   2cf8c:	mov	x27, x24
   2cf90:	mov	x19, x4
   2cf94:	mov	x24, x2
   2cf98:	mov	w28, #0xffffffff            	// #-1
   2cf9c:	b	2cec4 <mpfr_cmp2@@Base+0xf4>
   2cfa0:	cmp	x1, #0x1
   2cfa4:	b.ne	2cef4 <mpfr_cmp2@@Base+0x124>  // b.any
   2cfa8:	mov	x25, x1
   2cfac:	add	x2, sp, #0x90
   2cfb0:	add	x1, sp, #0x88
   2cfb4:	add	x4, sp, #0x98
   2cfb8:	mov	x0, #0x0                   	// #0
   2cfbc:	tbnz	x20, #63, 2cfc4 <mpfr_cmp2@@Base+0x1f4>
   2cfc0:	ldr	x0, [x27, x20, lsl #3]
   2cfc4:	stp	x0, x23, [sp, #136]
   2cfc8:	tbnz	x19, #63, 2d188 <mpfr_cmp2@@Base+0x3b8>
   2cfcc:	ldr	x0, [x24, x19, lsl #3]
   2cfd0:	cbnz	x22, 2d19c <mpfr_cmp2@@Base+0x3cc>
   2cfd4:	cmp	x23, #0x0
   2cfd8:	add	x0, x23, x0
   2cfdc:	cset	w5, ne  // ne = any
   2cfe0:	str	x0, [sp, #144]
   2cfe4:	mov	x0, x4
   2cfe8:	mov	x3, #0x1                   	// #1
   2cfec:	stp	x4, x1, [sp, #96]
   2cff0:	sub	x20, x20, #0x1
   2cff4:	str	x2, [sp, #112]
   2cff8:	str	w5, [sp, #124]
   2cffc:	bl	be60 <__gmpn_sub_n@plt>
   2d000:	ldr	w5, [sp, #124]
   2d004:	subs	x19, x19, #0x1
   2d008:	sub	x3, x25, x0
   2d00c:	ccmp	w5, #0x0, #0x0, mi  // mi = first
   2d010:	add	x5, x21, #0x40
   2d014:	ldp	x4, x1, [sp, #96]
   2d018:	ldr	x2, [sp, #112]
   2d01c:	ldr	x0, [sp, #152]
   2d020:	b.ne	2d1b4 <mpfr_cmp2@@Base+0x3e4>  // b.any
   2d024:	mov	x23, #0x0                   	// #0
   2d028:	mov	x1, x0
   2d02c:	cbz	x3, 2d194 <mpfr_cmp2@@Base+0x3c4>
   2d030:	add	x21, x21, #0x3f
   2d034:	cbnz	x0, 2cf0c <mpfr_cmp2@@Base+0x13c>
   2d038:	tbnz	x20, #63, 2d100 <mpfr_cmp2@@Base+0x330>
   2d03c:	cmp	x19, #0x0
   2d040:	mov	w2, #0x40                  	// #64
   2d044:	ccmp	x23, #0x0, #0x0, lt  // lt = tstop
   2d048:	b.ne	2d07c <mpfr_cmp2@@Base+0x2ac>  // b.any
   2d04c:	b	2cf0c <mpfr_cmp2@@Base+0x13c>
   2d050:	ldr	x1, [sp, #144]
   2d054:	sub	x22, x22, #0x40
   2d058:	ldr	x0, [x27, x20, lsl #3]
   2d05c:	sub	x20, x20, #0x1
   2d060:	cmp	x0, x1
   2d064:	b.ne	2d0f4 <mpfr_cmp2@@Base+0x324>  // b.any
   2d068:	cmn	x20, #0x1
   2d06c:	b.eq	2d100 <mpfr_cmp2@@Base+0x330>  // b.none
   2d070:	cmp	x19, #0x0
   2d074:	ccmp	x23, #0x0, #0x0, lt  // lt = tstop
   2d078:	b.eq	2cf0c <mpfr_cmp2@@Base+0x13c>  // b.none
   2d07c:	cmp	x22, #0x3f
   2d080:	b.hi	2d050 <mpfr_cmp2@@Base+0x280>  // b.pmore
   2d084:	str	x23, [sp, #144]
   2d088:	mov	x1, x23
   2d08c:	tbnz	x19, #63, 2d0b8 <mpfr_cmp2@@Base+0x2e8>
   2d090:	ldr	x1, [x24, x19, lsl #3]
   2d094:	sub	w0, w2, w22
   2d098:	lsr	x1, x1, x22
   2d09c:	add	x1, x1, x23
   2d0a0:	str	x1, [sp, #144]
   2d0a4:	cbz	x22, 2d0b0 <mpfr_cmp2@@Base+0x2e0>
   2d0a8:	ldr	x23, [x24, x19, lsl #3]
   2d0ac:	lsl	x23, x23, x0
   2d0b0:	sub	x19, x19, #0x1
   2d0b4:	b	2d058 <mpfr_cmp2@@Base+0x288>
   2d0b8:	sub	x19, x19, #0x1
   2d0bc:	mov	x23, #0x0                   	// #0
   2d0c0:	b	2d058 <mpfr_cmp2@@Base+0x288>
   2d0c4:	bl	cb00 <mpfr_ubf_diff_exp@plt>
   2d0c8:	mov	x21, x0
   2d0cc:	b	2ce1c <mpfr_cmp2@@Base+0x4c>
   2d0d0:	tbnz	x3, #63, 2d128 <mpfr_cmp2@@Base+0x358>
   2d0d4:	add	x2, x27, x3, lsl #3
   2d0d8:	ldr	x1, [x27, x3, lsl #3]
   2d0dc:	b	2cea4 <mpfr_cmp2@@Base+0xd4>
   2d0e0:	sub	x22, x22, #0x40
   2d0e4:	mov	x21, #0x0                   	// #0
   2d0e8:	mov	x23, #0x0                   	// #0
   2d0ec:	ldr	x1, [sp, #144]
   2d0f0:	b	2ced4 <mpfr_cmp2@@Base+0x104>
   2d0f4:	cinc	x21, x21, cc  // cc = lo, ul, last
   2d0f8:	str	x21, [x26]
   2d0fc:	b	2cf10 <mpfr_cmp2@@Base+0x140>
   2d100:	cbnz	x23, 2d120 <mpfr_cmp2@@Base+0x350>
   2d104:	tbz	x19, #63, 2d110 <mpfr_cmp2@@Base+0x340>
   2d108:	b	2cf0c <mpfr_cmp2@@Base+0x13c>
   2d10c:	b.eq	2cf0c <mpfr_cmp2@@Base+0x13c>  // b.none
   2d110:	ldr	x0, [x24, x19, lsl #3]
   2d114:	sub	x19, x19, #0x1
   2d118:	cmn	x19, #0x1
   2d11c:	cbz	x0, 2d10c <mpfr_cmp2@@Base+0x33c>
   2d120:	add	x21, x21, #0x1
   2d124:	b	2cf0c <mpfr_cmp2@@Base+0x13c>
   2d128:	mov	w28, #0x0                   	// #0
   2d12c:	tbnz	x19, #63, 2cf10 <mpfr_cmp2@@Base+0x140>
   2d130:	ldr	x1, [x24, x19, lsl #3]
   2d134:	mov	x3, x19
   2d138:	mov	x27, x24
   2d13c:	mov	w28, #0xffffffff            	// #-1
   2d140:	cbnz	x1, 2d168 <mpfr_cmp2@@Base+0x398>
   2d144:	sub	x0, x3, #0x1
   2d148:	cbnz	x3, 2d154 <mpfr_cmp2@@Base+0x384>
   2d14c:	b	2d180 <mpfr_cmp2@@Base+0x3b0>
   2d150:	b.eq	2d180 <mpfr_cmp2@@Base+0x3b0>  // b.none
   2d154:	ldr	x1, [x27, x0, lsl #3]
   2d158:	sub	x0, x0, #0x1
   2d15c:	add	x21, x21, #0x40
   2d160:	cmn	x0, #0x1
   2d164:	cbz	x1, 2d150 <mpfr_cmp2@@Base+0x380>
   2d168:	clz	x1, x1
   2d16c:	add	x21, x1, x21
   2d170:	str	x21, [x26]
   2d174:	b	2cf10 <mpfr_cmp2@@Base+0x140>
   2d178:	mov	w28, #0x1                   	// #1
   2d17c:	b	2d140 <mpfr_cmp2@@Base+0x370>
   2d180:	mov	w28, #0x0                   	// #0
   2d184:	b	2cf10 <mpfr_cmp2@@Base+0x140>
   2d188:	mov	w5, #0x0                   	// #0
   2d18c:	mov	x23, #0x0                   	// #0
   2d190:	b	2cfe4 <mpfr_cmp2@@Base+0x214>
   2d194:	mov	x21, x5
   2d198:	b	2cef4 <mpfr_cmp2@@Base+0x124>
   2d19c:	add	x0, x23, x0, lsr #1
   2d1a0:	str	x0, [sp, #144]
   2d1a4:	ldr	x23, [x24, x19, lsl #3]
   2d1a8:	and	w5, w23, #0x1
   2d1ac:	lsl	x23, x23, #63
   2d1b0:	b	2cfe4 <mpfr_cmp2@@Base+0x214>
   2d1b4:	cmp	x3, #0x0
   2d1b8:	ccmp	x0, #0x1, #0x0, eq  // eq = none
   2d1bc:	b.ne	2d028 <mpfr_cmp2@@Base+0x258>  // b.any
   2d1c0:	mov	x21, x5
   2d1c4:	b	2cfb8 <mpfr_cmp2@@Base+0x1e8>
   2d1c8:	stp	x29, x30, [sp, #-32]!
   2d1cc:	cmp	x3, x2
   2d1d0:	mov	x29, sp
   2d1d4:	str	x19, [sp, #16]
   2d1d8:	mov	x19, x3
   2d1dc:	b.le	2d1f8 <mpfr_cmp2@@Base+0x428>
   2d1e0:	sub	x2, x3, x2
   2d1e4:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2d1e8:	mov	x0, x19
   2d1ec:	ldr	x19, [sp, #16]
   2d1f0:	ldp	x29, x30, [sp], #32
   2d1f4:	ret
   2d1f8:	sub	x2, x2, x3
   2d1fc:	bl	c200 <__gmpz_mul_2exp@plt>
   2d200:	mov	x0, x19
   2d204:	ldr	x19, [sp, #16]
   2d208:	ldp	x29, x30, [sp], #32
   2d20c:	ret
   2d210:	stp	x29, x30, [sp, #-32]!
   2d214:	mov	x5, #0xfffffffffffffff8    	// #-8
   2d218:	mov	x29, sp
   2d21c:	ldr	w3, [x1, #4]
   2d220:	ldr	x4, [x1, #8]
   2d224:	cmp	w3, #0x0
   2d228:	cneg	w3, w3, lt  // lt = tstop
   2d22c:	cmp	x2, #0x0
   2d230:	add	x5, x5, w3, sxtw #3
   2d234:	sbfiz	x3, x3, #6, #32
   2d238:	ldr	x4, [x4, x5]
   2d23c:	clz	x4, x4
   2d240:	sub	x3, x3, x4
   2d244:	ccmp	x2, x3, #0x0, ge  // ge = tcont
   2d248:	b.cs	2d26c <mpfr_cmp2@@Base+0x49c>  // b.hs, b.nlast
   2d24c:	str	x19, [sp, #16]
   2d250:	sub	x19, x3, x2
   2d254:	mov	x2, x19
   2d258:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2d25c:	mov	x0, x19
   2d260:	ldr	x19, [sp, #16]
   2d264:	ldp	x29, x30, [sp], #32
   2d268:	ret
   2d26c:	bl	bfa0 <__gmpz_set@plt>
   2d270:	mov	x0, #0x0                   	// #0
   2d274:	ldp	x29, x30, [sp], #32
   2d278:	ret
   2d27c:	nop
   2d280:	stp	x29, x30, [sp, #-304]!
   2d284:	mov	x29, sp
   2d288:	stp	x21, x22, [sp, #32]
   2d28c:	mov	x21, x0
   2d290:	ldr	x0, [x1, #16]
   2d294:	stp	x19, x20, [sp, #16]
   2d298:	neg	x0, x0
   2d29c:	stp	x23, x24, [sp, #48]
   2d2a0:	mov	x24, x1
   2d2a4:	stp	x25, x26, [sp, #64]
   2d2a8:	sdiv	x0, x2, x0
   2d2ac:	stp	x27, x28, [sp, #80]
   2d2b0:	str	x2, [x29, #208]
   2d2b4:	str	x3, [x29, #224]
   2d2b8:	bl	bf20 <__gmpfr_isqrt@plt>
   2d2bc:	mov	x28, x0
   2d2c0:	mov	x0, #0x2                   	// #2
   2d2c4:	cmp	x28, x0
   2d2c8:	csel	x0, x28, x0, cs  // cs = hs, nlast
   2d2cc:	str	x0, [x29, #232]
   2d2d0:	add	x20, x0, #0x1
   2d2d4:	str	xzr, [x29, #248]
   2d2d8:	lsl	x26, x20, #4
   2d2dc:	cmp	x26, #0x4, lsl #12
   2d2e0:	b.hi	2d790 <mpfr_cmp2@@Base+0x9c0>  // b.pmore
   2d2e4:	sub	sp, sp, x26
   2d2e8:	mov	x0, sp
   2d2ec:	str	x0, [x29, #160]
   2d2f0:	lsl	x0, x20, #3
   2d2f4:	str	x0, [x29, #216]
   2d2f8:	cmp	x0, #0x4, lsl #12
   2d2fc:	b.hi	2d7b0 <mpfr_cmp2@@Base+0x9e0>  // b.pmore
   2d300:	add	x0, x0, #0xf
   2d304:	and	x0, x0, #0xfffffffffffffff0
   2d308:	sub	sp, sp, x0
   2d30c:	mov	x0, sp
   2d310:	str	x0, [x29, #152]
   2d314:	add	x0, x29, #0x110
   2d318:	add	x19, x29, #0x120
   2d31c:	mov	x22, x0
   2d320:	mov	x0, x19
   2d324:	str	x22, [x29, #128]
   2d328:	bl	bf90 <mpfr_mpz_init@plt>
   2d32c:	mov	x0, x22
   2d330:	add	x22, x29, #0x100
   2d334:	bl	bf90 <mpfr_mpz_init@plt>
   2d338:	mov	x23, #0x1                   	// #1
   2d33c:	ldr	x27, [x29, #160]
   2d340:	mov	x0, x22
   2d344:	str	x27, [x29, #112]
   2d348:	bl	bf90 <mpfr_mpz_init@plt>
   2d34c:	mov	x0, x21
   2d350:	mov	x1, #0x0                   	// #0
   2d354:	bl	bcb0 <__gmpz_set_ui@plt>
   2d358:	add	x25, x26, x27
   2d35c:	ldr	x0, [x29, #208]
   2d360:	sub	x23, x23, x0
   2d364:	ldr	x0, [x29, #224]
   2d368:	str	x23, [x0]
   2d36c:	nop
   2d370:	mov	x0, x27
   2d374:	add	x27, x27, #0x10
   2d378:	bl	bf90 <mpfr_mpz_init@plt>
   2d37c:	cmp	x25, x27
   2d380:	b.ne	2d370 <mpfr_cmp2@@Base+0x5a0>  // b.any
   2d384:	ldr	x27, [x29, #160]
   2d388:	mov	x1, x24
   2d38c:	add	x25, x27, #0x10
   2d390:	mov	x0, x25
   2d394:	bl	cac0 <mpfr_get_z_2exp@plt>
   2d398:	ldr	x24, [x29, #152]
   2d39c:	mov	x2, x0
   2d3a0:	mov	x3, x23
   2d3a4:	mov	x1, x25
   2d3a8:	mov	x0, x25
   2d3ac:	str	x2, [x24, #8]
   2d3b0:	bl	2d1c8 <mpfr_cmp2@@Base+0x3f8>
   2d3b4:	str	x0, [x24, #8]
   2d3b8:	ldr	x3, [x29, #208]
   2d3bc:	mov	x2, x25
   2d3c0:	mov	x1, x25
   2d3c4:	mov	x0, x22
   2d3c8:	str	x24, [x29, #152]
   2d3cc:	sub	x24, x3, #0x1
   2d3d0:	bl	bff0 <__gmpz_mul@plt>
   2d3d4:	mov	x0, x27
   2d3d8:	mov	x2, x24
   2d3dc:	add	x0, x0, #0x20
   2d3e0:	mov	x1, x22
   2d3e4:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2d3e8:	add	x27, x27, #0x30
   2d3ec:	ldr	x0, [x29, #152]
   2d3f0:	cmp	x28, #0x2
   2d3f4:	mov	x28, #0x3                   	// #3
   2d3f8:	str	x23, [x0, #16]
   2d3fc:	b.ls	2d478 <mpfr_cmp2@@Base+0x6a8>  // b.plast
   2d400:	stp	x19, x21, [x29, #184]
   2d404:	mov	x21, x28
   2d408:	mov	x19, x27
   2d40c:	mov	x28, x25
   2d410:	str	x20, [x29, #200]
   2d414:	ldp	x25, x20, [x29, #152]
   2d418:	ldr	x27, [x29, #232]
   2d41c:	b	2d454 <mpfr_cmp2@@Base+0x684>
   2d420:	mov	x2, x28
   2d424:	sub	x1, x19, #0x10
   2d428:	mov	x0, x22
   2d42c:	bl	bff0 <__gmpz_mul@plt>
   2d430:	mov	x0, x19
   2d434:	mov	x2, x24
   2d438:	mov	x1, x22
   2d43c:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2d440:	str	x23, [x25, x21, lsl #3]
   2d444:	add	x21, x21, #0x1
   2d448:	cmp	x27, x21
   2d44c:	add	x19, x19, #0x10
   2d450:	b.cc	2d470 <mpfr_cmp2@@Base+0x6a0>  // b.lo, b.ul, b.last
   2d454:	lsr	x2, x21, #1
   2d458:	tbnz	w21, #0, 2d420 <mpfr_cmp2@@Base+0x650>
   2d45c:	add	x2, x20, x2, lsl #4
   2d460:	mov	x0, x22
   2d464:	mov	x1, x2
   2d468:	bl	bff0 <__gmpz_mul@plt>
   2d46c:	b	2d430 <mpfr_cmp2@@Base+0x660>
   2d470:	ldp	x19, x21, [x29, #184]
   2d474:	ldr	x20, [x29, #200]
   2d478:	mov	x1, #0x1                   	// #1
   2d47c:	ldr	x25, [x29, #160]
   2d480:	mov	x0, x25
   2d484:	bl	bcb0 <__gmpz_set_ui@plt>
   2d488:	mov	x2, x24
   2d48c:	mov	x1, x25
   2d490:	mov	x24, x25
   2d494:	mov	x0, x25
   2d498:	bl	c200 <__gmpz_mul_2exp@plt>
   2d49c:	ldr	x25, [x29, #152]
   2d4a0:	mov	x1, #0x1                   	// #1
   2d4a4:	ldr	x28, [x29, #128]
   2d4a8:	str	x23, [x25]
   2d4ac:	mov	x0, x28
   2d4b0:	bl	bcb0 <__gmpz_set_ui@plt>
   2d4b4:	ldr	x3, [x29, #232]
   2d4b8:	sub	x2, x26, #0x20
   2d4bc:	ldr	x4, [x29, #216]
   2d4c0:	sub	x0, x3, #0x2
   2d4c4:	sub	x26, x26, #0x10
   2d4c8:	lsl	x3, x3, #4
   2d4cc:	add	x0, x24, x0, lsl #4
   2d4d0:	str	x0, [x29, #200]
   2d4d4:	add	x0, x24, x2
   2d4d8:	sub	x1, x4, #0x10
   2d4dc:	str	x0, [x29, #192]
   2d4e0:	add	x0, x24, x26
   2d4e4:	str	x0, [x29, #176]
   2d4e8:	add	x0, x25, x1
   2d4ec:	ldr	x1, [x29, #208]
   2d4f0:	sub	x27, x4, #0x8
   2d4f4:	str	x0, [x29, #184]
   2d4f8:	add	x0, x25, x27
   2d4fc:	mov	x25, x1
   2d500:	str	x0, [x29, #168]
   2d504:	add	x0, x24, x3
   2d508:	mov	x26, #0x0                   	// #0
   2d50c:	mov	x24, #0x0                   	// #0
   2d510:	str	x3, [x29, #104]
   2d514:	str	x0, [x29, #120]
   2d518:	neg	x0, x1
   2d51c:	str	x0, [x29, #144]
   2d520:	ldp	x0, x1, [x29, #184]
   2d524:	sub	x27, x20, #0x2
   2d528:	ldr	x23, [x29, #200]
   2d52c:	ldr	x2, [x0]
   2d530:	mov	x0, #0x1                   	// #1
   2d534:	sub	x3, x0, x25
   2d538:	mov	x0, x22
   2d53c:	bl	2d1c8 <mpfr_cmp2@@Base+0x3f8>
   2d540:	str	x0, [x29, #216]
   2d544:	nop
   2d548:	mov	x2, x27
   2d54c:	mov	x1, x22
   2d550:	mov	x0, x22
   2d554:	bl	c610 <__gmpz_fdiv_q_ui@plt>
   2d558:	mov	x2, x23
   2d55c:	sub	x27, x27, #0x1
   2d560:	mov	x1, x22
   2d564:	mov	x0, x22
   2d568:	bl	c9c0 <__gmpz_add@plt>
   2d56c:	sub	x23, x23, #0x10
   2d570:	cmp	x24, x27
   2d574:	b.ne	2d548 <mpfr_cmp2@@Base+0x778>  // b.any
   2d578:	mov	x2, x28
   2d57c:	mov	x1, x22
   2d580:	mov	x0, x22
   2d584:	bl	bff0 <__gmpz_mul@plt>
   2d588:	ldr	x0, [x29, #224]
   2d58c:	mov	x1, x22
   2d590:	add	x23, x24, #0x1
   2d594:	ldr	x3, [x0]
   2d598:	ldr	x0, [x29, #216]
   2d59c:	add	x2, x26, x0
   2d5a0:	mov	x0, x22
   2d5a4:	bl	2d1c8 <mpfr_cmp2@@Base+0x3f8>
   2d5a8:	mov	x2, x22
   2d5ac:	mov	x1, x21
   2d5b0:	mov	x0, x21
   2d5b4:	bl	c9c0 <__gmpz_add@plt>
   2d5b8:	ldr	x2, [x29, #176]
   2d5bc:	mov	x1, x28
   2d5c0:	mov	x0, x22
   2d5c4:	bl	bff0 <__gmpz_mul@plt>
   2d5c8:	ldr	x0, [x29, #168]
   2d5cc:	mov	x1, #0x1                   	// #1
   2d5d0:	ldr	x2, [x0]
   2d5d4:	mov	x0, x19
   2d5d8:	add	x26, x26, x2
   2d5dc:	bl	bcb0 <__gmpz_set_ui@plt>
   2d5e0:	mov	x2, x23
   2d5e4:	mov	x1, x19
   2d5e8:	add	x23, x23, #0x1
   2d5ec:	mov	x0, x19
   2d5f0:	bl	c100 <__gmpz_mul_ui@plt>
   2d5f4:	cmp	x20, x23
   2d5f8:	b.ne	2d5e0 <mpfr_cmp2@@Base+0x810>  // b.any
   2d5fc:	mov	x1, x22
   2d600:	mov	x0, x22
   2d604:	mov	x2, x19
   2d608:	bl	be30 <__gmpz_fdiv_q@plt>
   2d60c:	ldr	w0, [x29, #260]
   2d610:	ldr	x1, [x29, #232]
   2d614:	add	x24, x24, x1
   2d618:	cbz	w0, 2d718 <mpfr_cmp2@@Base+0x948>
   2d61c:	mov	x1, x22
   2d620:	mov	x2, x25
   2d624:	mov	x0, x28
   2d628:	bl	2d210 <mpfr_cmp2@@Base+0x440>
   2d62c:	ldr	w1, [x29, #276]
   2d630:	add	x26, x26, x0
   2d634:	cmp	w1, #0x0
   2d638:	cbz	w1, 2d784 <mpfr_cmp2@@Base+0x9b4>
   2d63c:	cneg	w1, w1, lt  // lt = tstop
   2d640:	mov	x0, #0xfffffffffffffff8    	// #-8
   2d644:	ldr	x2, [x29, #280]
   2d648:	add	x0, x0, w1, sxtw #3
   2d64c:	sbfiz	x1, x1, #6, #32
   2d650:	ldr	x0, [x2, x0]
   2d654:	clz	x0, x0
   2d658:	sub	x0, x1, x0
   2d65c:	mov	x3, x0
   2d660:	ldr	w1, [x21, #4]
   2d664:	add	x0, x26, x0
   2d668:	ldr	x4, [x29, #144]
   2d66c:	cmp	w1, #0x0
   2d670:	cneg	w1, w1, lt  // lt = tstop
   2d674:	cmp	x0, x4
   2d678:	ldr	x0, [x29, #224]
   2d67c:	ldr	x2, [x21, #8]
   2d680:	ldr	x25, [x0]
   2d684:	mov	x0, #0xfffffffffffffff8    	// #-8
   2d688:	add	x0, x0, w1, sxtw #3
   2d68c:	sbfiz	x1, x1, #6, #32
   2d690:	ldr	x4, [x29, #208]
   2d694:	ldr	x0, [x2, x0]
   2d698:	sub	x25, x4, x25
   2d69c:	clz	x0, x0
   2d6a0:	sub	x1, x1, x0
   2d6a4:	sub	x25, x25, x1
   2d6a8:	add	x25, x25, x26
   2d6ac:	add	x25, x25, x3
   2d6b0:	b.ls	2d718 <mpfr_cmp2@@Base+0x948>  // b.plast
   2d6b4:	cbnz	x24, 2d6c4 <mpfr_cmp2@@Base+0x8f4>
   2d6b8:	ldr	x0, [x29, #232]
   2d6bc:	add	x20, x20, x0
   2d6c0:	b	2d520 <mpfr_cmp2@@Base+0x750>
   2d6c4:	ldp	x27, x23, [x29, #152]
   2d6c8:	mov	x0, #0x1                   	// #1
   2d6cc:	sub	x3, x0, x25
   2d6d0:	str	x19, [x29, #136]
   2d6d4:	str	x20, [x29, #216]
   2d6d8:	mov	x20, x3
   2d6dc:	mov	x19, x27
   2d6e0:	ldr	x27, [x29, #120]
   2d6e4:	nop
   2d6e8:	mov	x1, x23
   2d6ec:	ldr	x2, [x19]
   2d6f0:	mov	x0, x23
   2d6f4:	mov	x3, x20
   2d6f8:	add	x23, x23, #0x10
   2d6fc:	bl	2d1c8 <mpfr_cmp2@@Base+0x3f8>
   2d700:	str	x0, [x19], #8
   2d704:	cmp	x27, x23
   2d708:	b.ne	2d6e8 <mpfr_cmp2@@Base+0x918>  // b.any
   2d70c:	ldr	x19, [x29, #136]
   2d710:	ldr	x20, [x29, #216]
   2d714:	b	2d6b8 <mpfr_cmp2@@Base+0x8e8>
   2d718:	ldp	x0, x21, [x29, #104]
   2d71c:	add	x20, x0, #0x10
   2d720:	ldr	x0, [x29, #160]
   2d724:	add	x20, x0, x20
   2d728:	mov	x0, x21
   2d72c:	add	x21, x21, #0x10
   2d730:	bl	c170 <mpfr_mpz_clear@plt>
   2d734:	cmp	x20, x21
   2d738:	b.ne	2d728 <mpfr_cmp2@@Base+0x958>  // b.any
   2d73c:	ldr	x0, [x29, #248]
   2d740:	cbnz	x0, 2d7c4 <mpfr_cmp2@@Base+0x9f4>
   2d744:	ldr	x0, [x29, #128]
   2d748:	bl	c170 <mpfr_mpz_clear@plt>
   2d74c:	mov	x0, x22
   2d750:	bl	c170 <mpfr_mpz_clear@plt>
   2d754:	mov	x0, x19
   2d758:	bl	c170 <mpfr_mpz_clear@plt>
   2d75c:	add	x0, x24, #0x4
   2d760:	mov	sp, x29
   2d764:	mul	x0, x0, x24
   2d768:	ldp	x19, x20, [sp, #16]
   2d76c:	ldp	x21, x22, [sp, #32]
   2d770:	ldp	x23, x24, [sp, #48]
   2d774:	ldp	x25, x26, [sp, #64]
   2d778:	ldp	x27, x28, [sp, #80]
   2d77c:	ldp	x29, x30, [sp], #304
   2d780:	ret
   2d784:	mov	x0, #0x1                   	// #1
   2d788:	mov	x3, x0
   2d78c:	b	2d660 <mpfr_cmp2@@Base+0x890>
   2d790:	mov	x1, x26
   2d794:	add	x0, x29, #0xf8
   2d798:	bl	bdc0 <mpfr_tmp_allocate@plt>
   2d79c:	str	x0, [x29, #160]
   2d7a0:	lsl	x0, x20, #3
   2d7a4:	str	x0, [x29, #216]
   2d7a8:	cmp	x0, #0x4, lsl #12
   2d7ac:	b.ls	2d300 <mpfr_cmp2@@Base+0x530>  // b.plast
   2d7b0:	ldr	x1, [x29, #216]
   2d7b4:	add	x0, x29, #0xf8
   2d7b8:	bl	bdc0 <mpfr_tmp_allocate@plt>
   2d7bc:	str	x0, [x29, #152]
   2d7c0:	b	2d314 <mpfr_cmp2@@Base+0x544>
   2d7c4:	bl	c410 <mpfr_tmp_free@plt>
   2d7c8:	b	2d744 <mpfr_cmp2@@Base+0x974>
   2d7cc:	nop

000000000002d7d0 <mpfr_exp_2@@Base>:
   2d7d0:	stp	x29, x30, [sp, #-464]!
   2d7d4:	mov	x29, sp
   2d7d8:	stp	x19, x20, [sp, #16]
   2d7dc:	str	x0, [sp, #152]
   2d7e0:	ldr	x0, [x0]
   2d7e4:	stp	x21, x22, [sp, #32]
   2d7e8:	ldr	x19, [x1, #16]
   2d7ec:	stp	x23, x24, [sp, #48]
   2d7f0:	stp	x25, x26, [sp, #64]
   2d7f4:	cmn	x19, #0x1
   2d7f8:	stp	x27, x28, [sp, #80]
   2d7fc:	str	x0, [sp, #96]
   2d800:	str	w2, [sp, #124]
   2d804:	str	x1, [sp, #128]
   2d808:	b.lt	2dedc <mpfr_exp_2@@Base+0x70c>  // b.tstop
   2d80c:	adrp	x2, 7f000 <__gmpfr_l2b@@Base+0x200>
   2d810:	add	x4, sp, #0x140
   2d814:	mov	x6, #0x3f                  	// #63
   2d818:	mov	w5, #0x1                   	// #1
   2d81c:	ldr	x2, [x2, #3984]
   2d820:	add	x0, sp, #0x120
   2d824:	mov	w3, #0x0                   	// #0
   2d828:	str	x6, [sp, #288]
   2d82c:	str	w5, [sp, #296]
   2d830:	str	x4, [sp, #312]
   2d834:	bl	c620 <mpfr_div@plt>
   2d838:	ldr	x20, [sp, #304]
   2d83c:	cmp	x20, #0x0
   2d840:	b.le	2dedc <mpfr_exp_2@@Base+0x70c>
   2d844:	ldr	x1, [sp, #312]
   2d848:	mov	w0, #0x40                  	// #64
   2d84c:	ldr	w2, [sp, #296]
   2d850:	sub	w20, w0, w20
   2d854:	ldr	x1, [x1]
   2d858:	cmp	w2, #0x0
   2d85c:	lsr	x20, x1, x20
   2d860:	b.le	2dd44 <mpfr_exp_2@@Base+0x574>
   2d864:	cmp	x20, #0x0
   2d868:	cbz	x20, 2dedc <mpfr_exp_2@@Base+0x70c>
   2d86c:	b.ge	2de78 <mpfr_exp_2@@Base+0x6a8>  // b.tcont
   2d870:	mov	x0, #0x1                   	// #1
   2d874:	sub	x0, x0, x20
   2d878:	clz	x0, x0
   2d87c:	mov	w1, #0x40                  	// #64
   2d880:	sub	w0, w1, w0
   2d884:	str	w0, [sp, #120]
   2d888:	ldr	x0, [sp, #96]
   2d88c:	cmp	x0, #0x63
   2d890:	b.gt	2de98 <mpfr_exp_2@@Base+0x6c8>
   2d894:	add	x0, x0, #0x1
   2d898:	add	x0, x0, x0, lsr #63
   2d89c:	asr	x0, x0, #1
   2d8a0:	bl	bf20 <__gmpfr_isqrt@plt>
   2d8a4:	add	x0, x0, #0x3
   2d8a8:	str	x0, [sp, #104]
   2d8ac:	ldp	x0, x1, [sp, #96]
   2d8b0:	sub	x0, x0, #0x1
   2d8b4:	udiv	x0, x0, x1
   2d8b8:	add	x0, x0, #0xa
   2d8bc:	lsl	x0, x0, #1
   2d8c0:	cmp	x0, #0x1
   2d8c4:	b.ls	2dec4 <mpfr_exp_2@@Base+0x6f4>  // b.plast
   2d8c8:	sub	x0, x0, #0x1
   2d8cc:	mov	w1, #0x40                  	// #64
   2d8d0:	clz	x0, x0
   2d8d4:	cmp	x19, #0x0
   2d8d8:	sub	w1, w1, w0
   2d8dc:	ldrsw	x3, [sp, #120]
   2d8e0:	ldp	x0, x2, [sp, #96]
   2d8e4:	str	x3, [sp, #168]
   2d8e8:	lsl	x2, x2, #1
   2d8ec:	add	x21, x0, #0xa
   2d8f0:	add	x0, x2, w1, sxtw
   2d8f4:	mov	x1, #0x7fffffffffffff00    	// #9223372036854775552
   2d8f8:	add	x21, x0, x21
   2d8fc:	add	x19, x21, x19
   2d900:	csel	x21, x19, x21, gt
   2d904:	add	x23, x21, x3
   2d908:	cmp	x23, x1
   2d90c:	b.ge	2df4c <mpfr_exp_2@@Base+0x77c>  // b.tcont
   2d910:	sub	x19, x23, #0x1
   2d914:	asr	x19, x19, #6
   2d918:	add	x19, x19, #0x1
   2d91c:	lsl	x0, x19, #1
   2d920:	cmp	x0, #0x10
   2d924:	b.gt	2dee8 <mpfr_exp_2@@Base+0x718>
   2d928:	add	x0, sp, #0x150
   2d92c:	stp	xzr, x0, [sp, #320]
   2d930:	mov	x2, x0
   2d934:	mrs	x4, tpidr_el0
   2d938:	add	x1, x2, x19, lsl #3
   2d93c:	str	x4, [sp, #112]
   2d940:	add	x4, sp, #0xc8
   2d944:	mov	w3, #0x1                   	// #1
   2d948:	str	x4, [sp, #160]
   2d94c:	mov	x4, #0x40                  	// #64
   2d950:	add	x27, sp, #0xd0
   2d954:	mov	x0, x27
   2d958:	str	x4, [sp, #136]
   2d95c:	str	x23, [sp, #256]
   2d960:	add	x22, sp, #0x120
   2d964:	str	w3, [sp, #264]
   2d968:	add	x28, sp, #0x100
   2d96c:	stp	x1, x23, [sp, #280]
   2d970:	add	x19, sp, #0xe0
   2d974:	str	w3, [sp, #296]
   2d978:	str	x2, [sp, #312]
   2d97c:	bl	bf90 <mpfr_mpz_init@plt>
   2d980:	ldr	x1, [sp, #104]
   2d984:	cmp	x20, #0x0
   2d988:	mov	x0, #0xfffffffffffffffe    	// #-2
   2d98c:	cneg	x23, x20, lt  // lt = tstop
   2d990:	sub	x0, x0, x1
   2d994:	str	x0, [sp, #144]
   2d998:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2d99c:	ldr	x1, [x0, #2560]
   2d9a0:	add	x0, x0, #0xa00
   2d9a4:	blr	x1
   2d9a8:	tbnz	x20, #63, 2de40 <mpfr_exp_2@@Base+0x670>
   2d9ac:	ldr	x1, [sp, #112]
   2d9b0:	mov	w2, #0x1                   	// #1
   2d9b4:	add	x1, x1, x0
   2d9b8:	mov	x0, x28
   2d9bc:	bl	c380 <mpfr_cache@plt>
   2d9c0:	mov	x2, x23
   2d9c4:	mov	x1, x28
   2d9c8:	mov	x0, x22
   2d9cc:	mov	w3, #0x1                   	// #1
   2d9d0:	bl	ba50 <mpfr_mul_ui@plt>
   2d9d4:	ldr	x1, [sp, #128]
   2d9d8:	mov	x2, x22
   2d9dc:	mov	x0, x22
   2d9e0:	mov	w3, #0x2                   	// #2
   2d9e4:	mov	x23, #0x8000000000000003    	// #-9223372036854775805
   2d9e8:	bl	bb70 <mpfr_sub@plt>
   2d9ec:	ldr	x0, [sp, #304]
   2d9f0:	cmp	x0, x23
   2d9f4:	b.gt	2da20 <mpfr_exp_2@@Base+0x250>
   2d9f8:	b	2dda0 <mpfr_exp_2@@Base+0x5d0>
   2d9fc:	mov	x2, x28
   2da00:	mov	x1, x22
   2da04:	mov	x0, x22
   2da08:	mov	w3, #0x2                   	// #2
   2da0c:	bl	c1a0 <mpfr_add@plt>
   2da10:	sub	x20, x20, #0x1
   2da14:	ldr	x0, [sp, #304]
   2da18:	cmp	x0, x23
   2da1c:	b.le	2dda0 <mpfr_exp_2@@Base+0x5d0>
   2da20:	ldr	w0, [sp, #296]
   2da24:	tbnz	w0, #31, 2d9fc <mpfr_exp_2@@Base+0x22c>
   2da28:	ldr	w0, [sp, #120]
   2da2c:	cbz	w0, 2da40 <mpfr_exp_2@@Base+0x270>
   2da30:	mov	x1, x21
   2da34:	mov	x0, x22
   2da38:	mov	w2, #0x2                   	// #2
   2da3c:	bl	c970 <mpfr_prec_round@plt>
   2da40:	ldr	x2, [sp, #104]
   2da44:	mov	x1, x22
   2da48:	mov	x0, x22
   2da4c:	mov	w3, #0x2                   	// #2
   2da50:	bl	c8f0 <mpfr_div_2ui@plt>
   2da54:	ldr	x0, [sp, #96]
   2da58:	cmp	x0, #0x63
   2da5c:	b.gt	2dd50 <mpfr_exp_2@@Base+0x580>
   2da60:	mov	x23, #0x1                   	// #1
   2da64:	sub	x1, x23, x21
   2da68:	mov	x0, x19
   2da6c:	add	x26, sp, #0xf0
   2da70:	str	x1, [sp, #200]
   2da74:	mov	x24, #0x0                   	// #0
   2da78:	bl	bf90 <mpfr_mpz_init@plt>
   2da7c:	mov	x0, x26
   2da80:	bl	bf90 <mpfr_mpz_init@plt>
   2da84:	mov	x1, x23
   2da88:	mov	x0, x19
   2da8c:	bl	bcb0 <__gmpz_set_ui@plt>
   2da90:	mov	x1, x23
   2da94:	mov	x0, x27
   2da98:	bl	bcb0 <__gmpz_set_ui@plt>
   2da9c:	mov	x23, #0xfffffffffffffff8    	// #-8
   2daa0:	sub	x2, x21, #0x1
   2daa4:	mov	x1, x27
   2daa8:	mov	x0, x27
   2daac:	bl	c200 <__gmpz_mul_2exp@plt>
   2dab0:	mov	x1, x22
   2dab4:	mov	x0, x26
   2dab8:	bl	cac0 <mpfr_get_z_2exp@plt>
   2dabc:	stp	x20, x22, [sp, #176]
   2dac0:	mov	x1, #0x0                   	// #0
   2dac4:	mov	x22, x19
   2dac8:	mov	x20, x0
   2dacc:	mov	x19, x1
   2dad0:	b	2db40 <mpfr_exp_2@@Base+0x370>
   2dad4:	clz	x2, x19
   2dad8:	mov	w0, #0x40                  	// #64
   2dadc:	sub	w2, w0, w2
   2dae0:	mov	x1, x22
   2dae4:	mov	x0, x22
   2dae8:	sxtw	x2, w2
   2daec:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2daf0:	ldr	w0, [sp, #228]
   2daf4:	cbz	w0, 2dbec <mpfr_exp_2@@Base+0x41c>
   2daf8:	mov	x2, x22
   2dafc:	mov	x1, x27
   2db00:	mov	x0, x27
   2db04:	bl	c9c0 <__gmpz_add@plt>
   2db08:	ldr	w2, [sp, #228]
   2db0c:	mov	x1, x26
   2db10:	ldr	x5, [sp, #232]
   2db14:	cmp	w2, #0x0
   2db18:	cneg	w2, w2, lt  // lt = tstop
   2db1c:	mov	x0, x26
   2db20:	mov	x19, x25
   2db24:	add	x3, x23, w2, sxtw #3
   2db28:	sbfiz	x2, x2, #6, #32
   2db2c:	ldr	x3, [x5, x3]
   2db30:	clz	x3, x3
   2db34:	sub	x2, x2, x3
   2db38:	bl	2d210 <mpfr_cmp2@@Base+0x440>
   2db3c:	add	x20, x20, x0
   2db40:	mov	x2, x26
   2db44:	mov	x1, x22
   2db48:	mov	x0, x22
   2db4c:	bl	bff0 <__gmpz_mul@plt>
   2db50:	ldr	w2, [sp, #212]
   2db54:	add	x24, x24, x20
   2db58:	ldr	w3, [sp, #228]
   2db5c:	mov	x1, x22
   2db60:	cmp	w2, #0x0
   2db64:	mov	x0, x22
   2db68:	cneg	w2, w2, lt  // lt = tstop
   2db6c:	cmp	w3, #0x0
   2db70:	cneg	w3, w3, lt  // lt = tstop
   2db74:	add	x25, x19, #0x1
   2db78:	ldr	x8, [sp, #216]
   2db7c:	add	x6, x23, w2, sxtw #3
   2db80:	ldr	x7, [sp, #232]
   2db84:	add	x5, x23, w3, sxtw #3
   2db88:	ldr	x6, [x8, x6]
   2db8c:	sbfiz	x2, x2, #6, #32
   2db90:	ldr	x5, [x7, x5]
   2db94:	clz	x6, x6
   2db98:	ldr	x7, [sp, #200]
   2db9c:	sub	x2, x2, x6
   2dba0:	clz	x5, x5
   2dba4:	sbfiz	x3, x3, #6, #32
   2dba8:	sub	x3, x3, x5
   2dbac:	add	x2, x2, x7
   2dbb0:	sub	x2, x2, x24
   2dbb4:	sub	x2, x2, x3
   2dbb8:	sub	x2, x21, x2
   2dbbc:	bl	2d210 <mpfr_cmp2@@Base+0x440>
   2dbc0:	cmp	x25, #0x1
   2dbc4:	add	x24, x24, x0
   2dbc8:	b.ls	2daf0 <mpfr_exp_2@@Base+0x320>  // b.plast
   2dbcc:	tst	x19, x25
   2dbd0:	b.eq	2dad4 <mpfr_exp_2@@Base+0x304>  // b.none
   2dbd4:	mov	x2, x25
   2dbd8:	mov	x1, x22
   2dbdc:	mov	x0, x22
   2dbe0:	bl	c610 <__gmpz_fdiv_q_ui@plt>
   2dbe4:	ldr	w0, [sp, #228]
   2dbe8:	cbnz	w0, 2daf8 <mpfr_exp_2@@Base+0x328>
   2dbec:	mov	x23, x19
   2dbf0:	mov	x0, x22
   2dbf4:	add	x23, x23, #0x2
   2dbf8:	mov	x19, x22
   2dbfc:	ldp	x20, x22, [sp, #176]
   2dc00:	bl	c170 <mpfr_mpz_clear@plt>
   2dc04:	mov	x0, x26
   2dc08:	bl	c170 <mpfr_mpz_clear@plt>
   2dc0c:	ldr	x24, [sp, #104]
   2dc10:	mul	x25, x23, x25
   2dc14:	add	x25, x25, x25, lsl #1
   2dc18:	cbz	x24, 2dd70 <mpfr_exp_2@@Base+0x5a0>
   2dc1c:	mov	x23, #0x0                   	// #0
   2dc20:	mov	x2, x27
   2dc24:	mov	x1, x27
   2dc28:	mov	x0, x27
   2dc2c:	bl	bff0 <__gmpz_mul@plt>
   2dc30:	ldr	x3, [sp, #200]
   2dc34:	mov	x2, x21
   2dc38:	mov	x1, x27
   2dc3c:	mov	x0, x27
   2dc40:	add	x23, x23, #0x1
   2dc44:	lsl	x3, x3, #1
   2dc48:	str	x3, [sp, #200]
   2dc4c:	bl	2d210 <mpfr_cmp2@@Base+0x440>
   2dc50:	ldr	x2, [sp, #200]
   2dc54:	cmp	x24, x23
   2dc58:	add	x2, x0, x2
   2dc5c:	str	x2, [sp, #200]
   2dc60:	b.ne	2dc20 <mpfr_exp_2@@Base+0x450>  // b.any
   2dc64:	mov	x1, x27
   2dc68:	mov	x0, x28
   2dc6c:	mov	w3, #0x0                   	// #0
   2dc70:	bl	c4f0 <mpfr_set_z_2exp@plt>
   2dc74:	cmp	x25, #0x1
   2dc78:	b.eq	2dd8c <mpfr_exp_2@@Base+0x5bc>  // b.none
   2dc7c:	b.ls	2df1c <mpfr_exp_2@@Base+0x74c>  // b.plast
   2dc80:	sub	x25, x25, #0x1
   2dc84:	mov	w2, #0x40                  	// #64
   2dc88:	clz	x25, x25
   2dc8c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2dc90:	ldr	x1, [sp, #272]
   2dc94:	sub	w2, w2, w25
   2dc98:	cmp	x1, x0
   2dc9c:	sxtw	x2, w2
   2dca0:	b.le	2dda0 <mpfr_exp_2@@Base+0x5d0>
   2dca4:	ldr	w0, [sp, #124]
   2dca8:	sub	x2, x21, x2
   2dcac:	ldr	x1, [sp, #256]
   2dcb0:	cmp	w0, #0x0
   2dcb4:	ldr	x4, [sp, #144]
   2dcb8:	sub	x1, x1, #0x1
   2dcbc:	ldr	x0, [sp, #280]
   2dcc0:	asr	x1, x1, #6
   2dcc4:	ldr	x3, [sp, #96]
   2dcc8:	add	x2, x2, x4
   2dccc:	add	x1, x1, #0x1
   2dcd0:	cinc	x3, x3, eq  // eq = none
   2dcd4:	bl	c370 <mpfr_round_p@plt>
   2dcd8:	cbz	w0, 2dda0 <mpfr_exp_2@@Base+0x5d0>
   2dcdc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2dce0:	ldr	x4, [x0, #2576]
   2dce4:	add	x0, x0, #0xa10
   2dce8:	blr	x4
   2dcec:	ldr	w3, [sp, #124]
   2dcf0:	ldr	x4, [sp, #112]
   2dcf4:	mov	x1, x28
   2dcf8:	mov	x2, x20
   2dcfc:	str	wzr, [x4, x0]
   2dd00:	ldr	x0, [sp, #152]
   2dd04:	bl	bb90 <mpfr_mul_2si@plt>
   2dd08:	mov	w19, w0
   2dd0c:	mov	x0, x27
   2dd10:	bl	c170 <mpfr_mpz_clear@plt>
   2dd14:	ldr	x1, [sp, #320]
   2dd18:	cbz	x1, 2dd24 <mpfr_exp_2@@Base+0x554>
   2dd1c:	ldr	x0, [sp, #328]
   2dd20:	bl	cc20 <mpfr_free_func@plt>
   2dd24:	mov	w0, w19
   2dd28:	ldp	x19, x20, [sp, #16]
   2dd2c:	ldp	x21, x22, [sp, #32]
   2dd30:	ldp	x23, x24, [sp, #48]
   2dd34:	ldp	x25, x26, [sp, #64]
   2dd38:	ldp	x27, x28, [sp, #80]
   2dd3c:	ldp	x29, x30, [sp], #464
   2dd40:	ret
   2dd44:	tbnz	x20, #63, 2df10 <mpfr_exp_2@@Base+0x740>
   2dd48:	neg	x20, x20
   2dd4c:	b	2d864 <mpfr_exp_2@@Base+0x94>
   2dd50:	ldr	x3, [sp, #160]
   2dd54:	mov	x2, x21
   2dd58:	mov	x1, x22
   2dd5c:	mov	x0, x27
   2dd60:	bl	2d280 <mpfr_cmp2@@Base+0x4b0>
   2dd64:	mov	x25, x0
   2dd68:	ldr	x24, [sp, #104]
   2dd6c:	cbnz	x24, 2dc1c <mpfr_exp_2@@Base+0x44c>
   2dd70:	ldr	x2, [sp, #200]
   2dd74:	mov	x1, x27
   2dd78:	mov	x0, x28
   2dd7c:	mov	w3, #0x0                   	// #0
   2dd80:	bl	c4f0 <mpfr_set_z_2exp@plt>
   2dd84:	cmp	x25, #0x1
   2dd88:	b.ne	2dc7c <mpfr_exp_2@@Base+0x4ac>  // b.any
   2dd8c:	ldr	x1, [sp, #272]
   2dd90:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2dd94:	mov	x2, #0x0                   	// #0
   2dd98:	cmp	x1, x0
   2dd9c:	b.gt	2dca4 <mpfr_exp_2@@Base+0x4d4>
   2dda0:	ldr	x1, [sp, #136]
   2dda4:	mov	x0, #0xfffffffffffffeff    	// #-257
   2dda8:	movk	x0, #0x7fff, lsl #48
   2ddac:	sub	x0, x0, x21
   2ddb0:	cmp	x0, x1
   2ddb4:	b.lt	2df34 <mpfr_exp_2@@Base+0x764>  // b.tstop
   2ddb8:	ldr	x0, [sp, #136]
   2ddbc:	mov	x1, #0x7fffffffffffff00    	// #9223372036854775552
   2ddc0:	add	x21, x21, x0
   2ddc4:	ldr	x0, [sp, #168]
   2ddc8:	add	x24, x21, x0
   2ddcc:	add	x0, x21, x21, lsr #63
   2ddd0:	cmp	x24, x1
   2ddd4:	asr	x0, x0, #1
   2ddd8:	str	x0, [sp, #136]
   2dddc:	ldr	x1, [sp, #320]
   2dde0:	b.ge	2df4c <mpfr_exp_2@@Base+0x77c>  // b.tcont
   2dde4:	sub	x23, x24, #0x1
   2dde8:	asr	x23, x23, #6
   2ddec:	add	x23, x23, #0x1
   2ddf0:	lsl	x2, x23, #4
   2ddf4:	str	x2, [sp, #320]
   2ddf8:	cbz	x1, 2df00 <mpfr_exp_2@@Base+0x730>
   2ddfc:	ldr	x0, [sp, #328]
   2de00:	bl	c1c0 <mpfr_reallocate_func@plt>
   2de04:	str	x0, [sp, #328]
   2de08:	cmp	x20, #0x0
   2de0c:	add	x23, x0, x23, lsl #3
   2de10:	mov	w1, #0x1                   	// #1
   2de14:	str	x24, [sp, #256]
   2de18:	str	w1, [sp, #264]
   2de1c:	stp	x23, x24, [sp, #280]
   2de20:	cneg	x23, x20, lt  // lt = tstop
   2de24:	str	w1, [sp, #296]
   2de28:	str	x0, [sp, #312]
   2de2c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2de30:	ldr	x1, [x0, #2560]
   2de34:	add	x0, x0, #0xa00
   2de38:	blr	x1
   2de3c:	tbz	x20, #63, 2d9ac <mpfr_exp_2@@Base+0x1dc>
   2de40:	ldr	x1, [sp, #112]
   2de44:	mov	w2, #0x2                   	// #2
   2de48:	add	x1, x1, x0
   2de4c:	mov	x0, x28
   2de50:	bl	c380 <mpfr_cache@plt>
   2de54:	mov	x2, x23
   2de58:	mov	x1, x28
   2de5c:	mov	x0, x22
   2de60:	mov	w3, #0x2                   	// #2
   2de64:	bl	ba50 <mpfr_mul_ui@plt>
   2de68:	ldr	w0, [sp, #296]
   2de6c:	neg	w0, w0
   2de70:	str	w0, [sp, #296]
   2de74:	b	2d9d4 <mpfr_exp_2@@Base+0x204>
   2de78:	add	x0, x20, #0x1
   2de7c:	mov	w1, #0x40                  	// #64
   2de80:	clz	x0, x0
   2de84:	sub	w0, w1, w0
   2de88:	str	w0, [sp, #120]
   2de8c:	ldr	x0, [sp, #96]
   2de90:	cmp	x0, #0x63
   2de94:	b.le	2d894 <mpfr_exp_2@@Base+0xc4>
   2de98:	ldr	x0, [sp, #96]
   2de9c:	lsl	x0, x0, #2
   2dea0:	bl	c0b0 <__gmpfr_cuberoot@plt>
   2dea4:	str	x0, [sp, #104]
   2dea8:	ldp	x0, x1, [sp, #96]
   2deac:	sub	x0, x0, #0x1
   2deb0:	udiv	x0, x0, x1
   2deb4:	add	x0, x0, #0xa
   2deb8:	lsl	x0, x0, #1
   2debc:	cmp	x0, #0x1
   2dec0:	b.hi	2d8c8 <mpfr_exp_2@@Base+0xf8>  // b.pmore
   2dec4:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2dec8:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2decc:	add	x2, x2, #0x968
   2ded0:	add	x0, x0, #0x980
   2ded4:	mov	w1, #0x9f                  	// #159
   2ded8:	bl	cb40 <mpfr_assert_fail@plt>
   2dedc:	mov	x20, #0x0                   	// #0
   2dee0:	str	wzr, [sp, #120]
   2dee4:	b	2d888 <mpfr_exp_2@@Base+0xb8>
   2dee8:	lsl	x0, x19, #4
   2deec:	str	x0, [sp, #320]
   2def0:	bl	ccf0 <mpfr_allocate_func@plt>
   2def4:	mov	x2, x0
   2def8:	str	x0, [sp, #328]
   2defc:	b	2d934 <mpfr_exp_2@@Base+0x164>
   2df00:	mov	x0, x2
   2df04:	bl	ccf0 <mpfr_allocate_func@plt>
   2df08:	str	x0, [sp, #328]
   2df0c:	b	2de08 <mpfr_exp_2@@Base+0x638>
   2df10:	mov	x20, #0x8000000000000000    	// #-9223372036854775808
   2df14:	str	w0, [sp, #120]
   2df18:	b	2d888 <mpfr_exp_2@@Base+0xb8>
   2df1c:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2df20:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2df24:	add	x2, x2, #0x988
   2df28:	add	x0, x0, #0x980
   2df2c:	mov	w1, #0xf5                  	// #245
   2df30:	bl	cb40 <mpfr_assert_fail@plt>
   2df34:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2df38:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2df3c:	add	x2, x2, #0x990
   2df40:	add	x0, x0, #0x980
   2df44:	mov	w1, #0x102                 	// #258
   2df48:	bl	cb40 <mpfr_assert_fail@plt>
   2df4c:	bl	c8e0 <mpfr_abort_prec_max@plt>

000000000002df50 <mpfr_asin@@Base>:
   2df50:	stp	x29, x30, [sp, #-144]!
   2df54:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   2df58:	mov	x29, sp
   2df5c:	stp	x21, x22, [sp, #32]
   2df60:	mov	w21, w2
   2df64:	ldr	x2, [x1, #16]
   2df68:	stp	x19, x20, [sp, #16]
   2df6c:	mov	x20, x1
   2df70:	stp	x27, x28, [sp, #80]
   2df74:	cmp	x2, x3
   2df78:	mov	x28, x0
   2df7c:	b.le	2e220 <mpfr_asin@@Base+0x2d0>
   2df80:	neg	x2, x2, lsl #1
   2df84:	cmp	x2, #0x0
   2df88:	b.le	2dfa0 <mpfr_asin@@Base+0x50>
   2df8c:	ldr	x3, [x0]
   2df90:	add	x2, x2, #0x2
   2df94:	add	x3, x3, #0x1
   2df98:	cmp	x3, x2
   2df9c:	b.cc	2e2c0 <mpfr_asin@@Base+0x370>  // b.lo, b.ul, b.last
   2dfa0:	ldr	x1, [x20]
   2dfa4:	add	x19, sp, #0x70
   2dfa8:	mov	x0, x19
   2dfac:	stp	x23, x24, [sp, #48]
   2dfb0:	mrs	x23, tpidr_el0
   2dfb4:	stp	x25, x26, [sp, #64]
   2dfb8:	bl	ca80 <mpfr_init2@plt>
   2dfbc:	mov	w3, #0x1                   	// #1
   2dfc0:	mov	x1, x20
   2dfc4:	mov	w2, #0x0                   	// #0
   2dfc8:	mov	x0, x19
   2dfcc:	bl	c6a0 <mpfr_set4@plt>
   2dfd0:	mov	x1, #0x1                   	// #1
   2dfd4:	mov	x2, #0x0                   	// #0
   2dfd8:	mov	x0, x19
   2dfdc:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   2dfe0:	mov	w22, w0
   2dfe4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2dfe8:	ldr	x1, [x0, #2576]
   2dfec:	add	x0, x0, #0xa10
   2dff0:	blr	x1
   2dff4:	add	x3, x23, x0
   2dff8:	ldr	w0, [x23, x0]
   2dffc:	str	w0, [sp, #100]
   2e000:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   2e004:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2e008:	ldr	x1, [x0, #2512]
   2e00c:	add	x0, x0, #0x9d0
   2e010:	blr	x1
   2e014:	add	x26, x23, x0
   2e018:	ldr	x24, [x23, x0]
   2e01c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2e020:	ldr	x1, [x0, #2544]
   2e024:	add	x0, x0, #0x9f0
   2e028:	blr	x1
   2e02c:	add	x27, x23, x0
   2e030:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2e034:	str	x2, [x26]
   2e038:	ldr	x25, [x23, x0]
   2e03c:	str	x1, [x27]
   2e040:	tbz	w22, #31, 2e248 <mpfr_asin@@Base+0x2f8>
   2e044:	mov	x1, #0x1                   	// #1
   2e048:	mov	x2, x19
   2e04c:	mov	x0, x19
   2e050:	mov	w3, #0x3                   	// #3
   2e054:	bl	ca50 <mpfr_ui_sub@plt>
   2e058:	mov	x22, #0x2                   	// #2
   2e05c:	ldr	x6, [x28]
   2e060:	mov	x1, #0x40                  	// #64
   2e064:	ldr	x0, [sp, #128]
   2e068:	add	x6, x6, #0xa
   2e06c:	mov	x26, #0x8000000000000003    	// #-9223372036854775805
   2e070:	str	x1, [sp, #104]
   2e074:	sub	x22, x22, x0
   2e078:	add	x27, x6, x22
   2e07c:	mov	x1, x27
   2e080:	mov	x0, x19
   2e084:	bl	bed0 <mpfr_set_prec@plt>
   2e088:	mov	x1, x20
   2e08c:	mov	w2, #0x0                   	// #0
   2e090:	mov	x0, x19
   2e094:	bl	c400 <mpfr_sqr@plt>
   2e098:	mov	w3, #0x0                   	// #0
   2e09c:	mov	x2, x19
   2e0a0:	mov	x1, #0x1                   	// #1
   2e0a4:	mov	x0, x19
   2e0a8:	bl	ca50 <mpfr_ui_sub@plt>
   2e0ac:	mov	x1, x19
   2e0b0:	mov	w2, #0x0                   	// #0
   2e0b4:	mov	x0, x19
   2e0b8:	bl	c930 <mpfr_sqrt@plt>
   2e0bc:	mov	w3, #0x0                   	// #0
   2e0c0:	mov	x2, x19
   2e0c4:	mov	x1, x20
   2e0c8:	mov	x0, x19
   2e0cc:	bl	c620 <mpfr_div@plt>
   2e0d0:	mov	x1, x19
   2e0d4:	mov	x0, x19
   2e0d8:	mov	w2, #0x0                   	// #0
   2e0dc:	bl	c690 <mpfr_atan@plt>
   2e0e0:	ldr	x0, [sp, #128]
   2e0e4:	cmp	x0, x26
   2e0e8:	b.le	2e1f0 <mpfr_asin@@Base+0x2a0>
   2e0ec:	ldr	x1, [sp, #112]
   2e0f0:	cmp	w21, #0x0
   2e0f4:	ldr	x0, [sp, #136]
   2e0f8:	sub	x1, x1, #0x1
   2e0fc:	ldr	x3, [x28]
   2e100:	asr	x1, x1, #6
   2e104:	sub	x2, x27, x22
   2e108:	add	x1, x1, #0x1
   2e10c:	cinc	x3, x3, eq  // eq = none
   2e110:	bl	c370 <mpfr_round_p@plt>
   2e114:	cbz	w0, 2e1f0 <mpfr_asin@@Base+0x2a0>
   2e118:	ldr	w3, [sp, #120]
   2e11c:	mov	w2, w21
   2e120:	mov	x1, x19
   2e124:	mov	x0, x28
   2e128:	bl	c6a0 <mpfr_set4@plt>
   2e12c:	mov	w22, w0
   2e130:	mov	x0, x19
   2e134:	bl	c070 <mpfr_clear@plt>
   2e138:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2e13c:	ldr	x1, [x0, #2576]
   2e140:	add	x0, x0, #0xa10
   2e144:	blr	x1
   2e148:	add	x2, x23, x0
   2e14c:	ldr	w1, [sp, #100]
   2e150:	str	w1, [x23, x0]
   2e154:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2e158:	ldr	x3, [x0, #2512]
   2e15c:	add	x0, x0, #0x9d0
   2e160:	blr	x3
   2e164:	ldr	x1, [x28, #16]
   2e168:	str	x24, [x23, x0]
   2e16c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2e170:	ldr	x3, [x0, #2544]
   2e174:	add	x0, x0, #0x9f0
   2e178:	blr	x3
   2e17c:	str	x25, [x23, x0]
   2e180:	cmp	x25, x1
   2e184:	ccmp	x24, x1, #0x0, ge  // ge = tcont
   2e188:	b.le	2e1c0 <mpfr_asin@@Base+0x270>
   2e18c:	mov	w1, w22
   2e190:	mov	w2, w21
   2e194:	mov	x0, x28
   2e198:	bl	cb30 <mpfr_check_range@plt>
   2e19c:	mov	w22, w0
   2e1a0:	ldp	x23, x24, [sp, #48]
   2e1a4:	ldp	x25, x26, [sp, #64]
   2e1a8:	mov	w0, w22
   2e1ac:	ldp	x19, x20, [sp, #16]
   2e1b0:	ldp	x21, x22, [sp, #32]
   2e1b4:	ldp	x27, x28, [sp, #80]
   2e1b8:	ldp	x29, x30, [sp], #144
   2e1bc:	ret
   2e1c0:	cbz	w22, 2e1a0 <mpfr_asin@@Base+0x250>
   2e1c4:	ldr	w0, [sp, #100]
   2e1c8:	ldp	x25, x26, [sp, #64]
   2e1cc:	orr	w23, w0, #0x8
   2e1d0:	str	w23, [x2]
   2e1d4:	mov	w0, w22
   2e1d8:	ldp	x19, x20, [sp, #16]
   2e1dc:	ldp	x21, x22, [sp, #32]
   2e1e0:	ldp	x23, x24, [sp, #48]
   2e1e4:	ldp	x27, x28, [sp, #80]
   2e1e8:	ldp	x29, x30, [sp], #144
   2e1ec:	ret
   2e1f0:	ldr	x1, [sp, #104]
   2e1f4:	mov	x0, #0xfffffffffffffeff    	// #-257
   2e1f8:	movk	x0, #0x7fff, lsl #48
   2e1fc:	sub	x0, x0, x27
   2e200:	cmp	x0, x1
   2e204:	b.lt	2e36c <mpfr_asin@@Base+0x41c>  // b.tstop
   2e208:	ldr	x0, [sp, #104]
   2e20c:	add	x27, x27, x0
   2e210:	add	x0, x27, x27, lsr #63
   2e214:	asr	x0, x0, #1
   2e218:	str	x0, [sp, #104]
   2e21c:	b	2e07c <mpfr_asin@@Base+0x12c>
   2e220:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   2e224:	add	x2, x2, x0
   2e228:	cmp	x2, #0x1
   2e22c:	b.ls	2e300 <mpfr_asin@@Base+0x3b0>  // b.plast
   2e230:	ldr	w1, [x1, #8]
   2e234:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2e238:	mov	w22, #0x0                   	// #0
   2e23c:	str	w1, [x28, #8]
   2e240:	str	x0, [x28, #16]
   2e244:	b	2e1a8 <mpfr_asin@@Base+0x258>
   2e248:	mov	x0, x19
   2e24c:	str	x3, [sp, #104]
   2e250:	bl	c070 <mpfr_clear@plt>
   2e254:	cbnz	w22, 2e338 <mpfr_asin@@Base+0x3e8>
   2e258:	ldr	w0, [x20, #8]
   2e25c:	cmp	w0, #0x0
   2e260:	b.gt	2e2d8 <mpfr_asin@@Base+0x388>
   2e264:	cmp	w21, #0x2
   2e268:	mov	w2, #0x3                   	// #3
   2e26c:	b.eq	2e27c <mpfr_asin@@Base+0x32c>  // b.none
   2e270:	cmp	w21, w2
   2e274:	mov	w2, #0x2                   	// #2
   2e278:	csel	w2, w21, w2, ne  // ne = any
   2e27c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2e280:	ldr	x1, [x0, #2624]
   2e284:	add	x0, x0, #0xa40
   2e288:	blr	x1
   2e28c:	add	x1, x23, x0
   2e290:	mov	x0, x28
   2e294:	bl	c380 <mpfr_cache@plt>
   2e298:	ldr	w1, [x28, #8]
   2e29c:	neg	w22, w0
   2e2a0:	neg	w1, w1
   2e2a4:	str	w1, [x28, #8]
   2e2a8:	mov	w3, w21
   2e2ac:	mov	x1, x28
   2e2b0:	mov	x0, x28
   2e2b4:	mov	x2, #0x1                   	// #1
   2e2b8:	bl	c8f0 <mpfr_div_2ui@plt>
   2e2bc:	b	2e138 <mpfr_asin@@Base+0x1e8>
   2e2c0:	mov	w4, w21
   2e2c4:	mov	w3, #0x1                   	// #1
   2e2c8:	bl	c540 <mpfr_round_near_x@plt>
   2e2cc:	mov	w22, w0
   2e2d0:	cbz	w0, 2dfa0 <mpfr_asin@@Base+0x50>
   2e2d4:	b	2e1a8 <mpfr_asin@@Base+0x258>
   2e2d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2e2dc:	ldr	x1, [x0, #2624]
   2e2e0:	add	x0, x0, #0xa40
   2e2e4:	blr	x1
   2e2e8:	mov	w2, w21
   2e2ec:	add	x1, x23, x0
   2e2f0:	mov	x0, x28
   2e2f4:	bl	c380 <mpfr_cache@plt>
   2e2f8:	mov	w22, w0
   2e2fc:	b	2e2a8 <mpfr_asin@@Base+0x358>
   2e300:	mrs	x1, tpidr_el0
   2e304:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2e308:	ldr	x2, [x0, #2576]
   2e30c:	add	x0, x0, #0xa10
   2e310:	blr	x2
   2e314:	add	x0, x1, x0
   2e318:	mov	x1, #0x2                   	// #2
   2e31c:	movk	x1, #0x8000, lsl #48
   2e320:	str	x1, [x28, #16]
   2e324:	mov	w22, #0x0                   	// #0
   2e328:	ldr	w1, [x0]
   2e32c:	orr	w1, w1, #0x4
   2e330:	str	w1, [x0]
   2e334:	b	2e1a8 <mpfr_asin@@Base+0x258>
   2e338:	ldr	x3, [sp, #104]
   2e33c:	mov	w22, #0x0                   	// #0
   2e340:	ldr	w0, [sp, #100]
   2e344:	str	x24, [x26]
   2e348:	orr	w23, w0, #0x4
   2e34c:	mov	x0, #0x2                   	// #2
   2e350:	movk	x0, #0x8000, lsl #48
   2e354:	str	w23, [x3]
   2e358:	ldp	x23, x24, [sp, #48]
   2e35c:	str	x25, [x27]
   2e360:	ldp	x25, x26, [sp, #64]
   2e364:	str	x0, [x28, #16]
   2e368:	b	2e1a8 <mpfr_asin@@Base+0x258>
   2e36c:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   2e370:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2e374:	add	x2, x2, #0x830
   2e378:	add	x0, x0, #0x9d8
   2e37c:	mov	w1, #0x73                  	// #115
   2e380:	bl	cb40 <mpfr_assert_fail@plt>
   2e384:	nop
   2e388:	stp	x29, x30, [sp, #-32]!
   2e38c:	mov	x29, sp
   2e390:	str	x19, [sp, #16]
   2e394:	mov	x19, x0
   2e398:	bl	bf90 <mpfr_mpz_init@plt>
   2e39c:	add	x0, x19, #0x10
   2e3a0:	bl	bf90 <mpfr_mpz_init@plt>
   2e3a4:	add	x0, x19, #0x20
   2e3a8:	bl	bf90 <mpfr_mpz_init@plt>
   2e3ac:	add	x0, x19, #0x30
   2e3b0:	bl	bf90 <mpfr_mpz_init@plt>
   2e3b4:	add	x0, x19, #0x40
   2e3b8:	bl	bf90 <mpfr_mpz_init@plt>
   2e3bc:	add	x0, x19, #0x50
   2e3c0:	ldr	x19, [sp, #16]
   2e3c4:	ldp	x29, x30, [sp], #32
   2e3c8:	b	bf90 <mpfr_mpz_init@plt>
   2e3cc:	nop
   2e3d0:	stp	x29, x30, [sp, #-32]!
   2e3d4:	mov	x29, sp
   2e3d8:	str	x19, [sp, #16]
   2e3dc:	mov	x19, x0
   2e3e0:	bl	c170 <mpfr_mpz_clear@plt>
   2e3e4:	add	x0, x19, #0x10
   2e3e8:	bl	c170 <mpfr_mpz_clear@plt>
   2e3ec:	add	x0, x19, #0x20
   2e3f0:	bl	c170 <mpfr_mpz_clear@plt>
   2e3f4:	add	x0, x19, #0x30
   2e3f8:	bl	c170 <mpfr_mpz_clear@plt>
   2e3fc:	add	x0, x19, #0x40
   2e400:	bl	c170 <mpfr_mpz_clear@plt>
   2e404:	add	x0, x19, #0x50
   2e408:	ldr	x19, [sp, #16]
   2e40c:	ldp	x29, x30, [sp], #32
   2e410:	b	c170 <mpfr_mpz_clear@plt>
   2e414:	nop
   2e418:	stp	x29, x30, [sp, #-352]!
   2e41c:	mov	x29, sp
   2e420:	stp	x19, x20, [sp, #16]
   2e424:	sub	x20, x2, x1
   2e428:	mov	x19, x0
   2e42c:	stp	x21, x22, [sp, #32]
   2e430:	cmp	x20, #0x1
   2e434:	mov	x22, x1
   2e438:	stp	x23, x24, [sp, #48]
   2e43c:	add	x23, x0, #0x50
   2e440:	add	x24, x0, #0x20
   2e444:	stp	x25, x26, [sp, #64]
   2e448:	add	x25, x0, #0x40
   2e44c:	stp	x27, x28, [sp, #80]
   2e450:	mov	x27, x3
   2e454:	add	x28, x0, #0x10
   2e458:	b.eq	2e68c <mpfr_asin@@Base+0x73c>  // b.none
   2e45c:	mov	x26, x2
   2e460:	add	x2, x2, x1
   2e464:	add	x20, sp, #0xa0
   2e468:	add	x21, sp, #0x100
   2e46c:	lsr	x2, x2, #1
   2e470:	mov	x0, x20
   2e474:	str	x2, [sp, #96]
   2e478:	str	w4, [sp, #104]
   2e47c:	bl	2e388 <mpfr_asin@@Base+0x438>
   2e480:	mov	x0, x21
   2e484:	bl	2e388 <mpfr_asin@@Base+0x438>
   2e488:	ldr	x2, [sp, #96]
   2e48c:	mov	x1, x22
   2e490:	mov	x3, x27
   2e494:	mov	x0, x20
   2e498:	mov	w4, #0x1                   	// #1
   2e49c:	add	x22, sp, #0x90
   2e4a0:	bl	2e418 <mpfr_asin@@Base+0x4c8>
   2e4a4:	ldr	x2, [sp, #96]
   2e4a8:	mov	x3, x27
   2e4ac:	mov	w4, #0x1                   	// #1
   2e4b0:	mov	x0, x21
   2e4b4:	mov	x1, x2
   2e4b8:	mov	x2, x26
   2e4bc:	add	x27, sp, #0x70
   2e4c0:	bl	2e418 <mpfr_asin@@Base+0x4c8>
   2e4c4:	mov	x0, x27
   2e4c8:	add	x26, sp, #0x80
   2e4cc:	bl	bf90 <mpfr_mpz_init@plt>
   2e4d0:	mov	x0, x26
   2e4d4:	bl	bf90 <mpfr_mpz_init@plt>
   2e4d8:	mov	x0, x22
   2e4dc:	bl	bf90 <mpfr_mpz_init@plt>
   2e4e0:	ldr	w5, [sp, #104]
   2e4e4:	cbnz	w5, 2e5e0 <mpfr_asin@@Base+0x690>
   2e4e8:	add	x19, x21, #0x10
   2e4ec:	mov	x0, x28
   2e4f0:	mov	x2, x19
   2e4f4:	add	x1, x20, #0x10
   2e4f8:	bl	bff0 <__gmpz_mul@plt>
   2e4fc:	mov	x0, x25
   2e500:	add	x2, x21, #0x40
   2e504:	add	x1, x20, #0x40
   2e508:	bl	bff0 <__gmpz_mul@plt>
   2e50c:	add	x2, x21, #0x20
   2e510:	mov	x1, x20
   2e514:	mov	x0, x27
   2e518:	bl	bff0 <__gmpz_mul@plt>
   2e51c:	mov	x1, x19
   2e520:	add	x2, x20, #0x20
   2e524:	mov	x0, x22
   2e528:	bl	bff0 <__gmpz_mul@plt>
   2e52c:	mov	x2, x22
   2e530:	mov	x1, x27
   2e534:	mov	x0, x24
   2e538:	bl	c9c0 <__gmpz_add@plt>
   2e53c:	add	x2, x21, #0x50
   2e540:	mov	x1, x20
   2e544:	mov	x0, x26
   2e548:	bl	bff0 <__gmpz_mul@plt>
   2e54c:	add	x2, x20, #0x40
   2e550:	mov	x1, x26
   2e554:	mov	x0, x26
   2e558:	bl	bff0 <__gmpz_mul@plt>
   2e55c:	add	x2, x20, #0x50
   2e560:	add	x1, x21, #0x10
   2e564:	mov	x0, x22
   2e568:	bl	bff0 <__gmpz_mul@plt>
   2e56c:	add	x2, x20, #0x30
   2e570:	mov	x1, x27
   2e574:	mov	x0, x22
   2e578:	bl	c290 <__gmpz_addmul@plt>
   2e57c:	add	x2, x21, #0x40
   2e580:	mov	x1, x22
   2e584:	mov	x0, x22
   2e588:	bl	bff0 <__gmpz_mul@plt>
   2e58c:	mov	x2, x22
   2e590:	mov	x1, x26
   2e594:	mov	x0, x23
   2e598:	bl	c9c0 <__gmpz_add@plt>
   2e59c:	mov	x0, x20
   2e5a0:	bl	2e3d0 <mpfr_asin@@Base+0x480>
   2e5a4:	mov	x0, x21
   2e5a8:	bl	2e3d0 <mpfr_asin@@Base+0x480>
   2e5ac:	mov	x0, x27
   2e5b0:	bl	c170 <mpfr_mpz_clear@plt>
   2e5b4:	mov	x0, x26
   2e5b8:	bl	c170 <mpfr_mpz_clear@plt>
   2e5bc:	mov	x0, x22
   2e5c0:	bl	c170 <mpfr_mpz_clear@plt>
   2e5c4:	ldp	x19, x20, [sp, #16]
   2e5c8:	ldp	x21, x22, [sp, #32]
   2e5cc:	ldp	x23, x24, [sp, #48]
   2e5d0:	ldp	x25, x26, [sp, #64]
   2e5d4:	ldp	x27, x28, [sp, #80]
   2e5d8:	ldp	x29, x30, [sp], #352
   2e5dc:	ret
   2e5e0:	add	x4, x21, #0x10
   2e5e4:	mov	x2, x21
   2e5e8:	mov	x1, x20
   2e5ec:	mov	x0, x19
   2e5f0:	str	x4, [sp, #96]
   2e5f4:	add	x19, x19, #0x30
   2e5f8:	bl	bff0 <__gmpz_mul@plt>
   2e5fc:	ldr	x4, [sp, #96]
   2e600:	add	x3, x21, #0x40
   2e604:	mov	x0, x28
   2e608:	add	x1, x20, #0x10
   2e60c:	mov	x2, x4
   2e610:	str	x3, [sp, #104]
   2e614:	bl	bff0 <__gmpz_mul@plt>
   2e618:	add	x28, x20, #0x40
   2e61c:	ldr	x3, [sp, #104]
   2e620:	mov	x0, x25
   2e624:	mov	x1, x28
   2e628:	mov	x25, x3
   2e62c:	mov	x2, x3
   2e630:	bl	bff0 <__gmpz_mul@plt>
   2e634:	add	x2, x21, #0x20
   2e638:	mov	x1, x20
   2e63c:	mov	x0, x27
   2e640:	bl	bff0 <__gmpz_mul@plt>
   2e644:	ldr	x4, [sp, #96]
   2e648:	add	x2, x20, #0x20
   2e64c:	mov	x0, x22
   2e650:	mov	x1, x4
   2e654:	bl	bff0 <__gmpz_mul@plt>
   2e658:	mov	x2, x22
   2e65c:	mov	x1, x27
   2e660:	mov	x0, x24
   2e664:	bl	c9c0 <__gmpz_add@plt>
   2e668:	mov	x2, x25
   2e66c:	mov	x0, x19
   2e670:	add	x1, x20, #0x30
   2e674:	bl	bff0 <__gmpz_mul@plt>
   2e678:	mov	x2, x28
   2e67c:	mov	x0, x19
   2e680:	add	x1, x21, #0x30
   2e684:	bl	c290 <__gmpz_addmul@plt>
   2e688:	b	2e53c <mpfr_asin@@Base+0x5ec>
   2e68c:	mov	x1, x3
   2e690:	bl	bcb0 <__gmpz_set_ui@plt>
   2e694:	mov	x2, x19
   2e698:	mov	x1, x19
   2e69c:	mov	x0, x19
   2e6a0:	add	x22, x22, #0x1
   2e6a4:	bl	bff0 <__gmpz_mul@plt>
   2e6a8:	mov	x1, x22
   2e6ac:	mov	x0, x28
   2e6b0:	bl	bcb0 <__gmpz_set_ui@plt>
   2e6b4:	mov	x2, x28
   2e6b8:	mov	x1, x28
   2e6bc:	mov	x0, x28
   2e6c0:	bl	bff0 <__gmpz_mul@plt>
   2e6c4:	mov	x1, x20
   2e6c8:	add	x0, x19, #0x30
   2e6cc:	bl	bcb0 <__gmpz_set_ui@plt>
   2e6d0:	mov	x1, x22
   2e6d4:	mov	x0, x25
   2e6d8:	bl	bcb0 <__gmpz_set_ui@plt>
   2e6dc:	mov	x1, x19
   2e6e0:	mov	x0, x24
   2e6e4:	bl	bfa0 <__gmpz_set@plt>
   2e6e8:	mov	x1, x19
   2e6ec:	mov	x0, x23
   2e6f0:	bl	bfa0 <__gmpz_set@plt>
   2e6f4:	ldp	x19, x20, [sp, #16]
   2e6f8:	ldp	x21, x22, [sp, #32]
   2e6fc:	ldp	x23, x24, [sp, #48]
   2e700:	ldp	x25, x26, [sp, #64]
   2e704:	ldp	x27, x28, [sp, #80]
   2e708:	ldp	x29, x30, [sp], #352
   2e70c:	ret
   2e710:	stp	x29, x30, [sp, #-160]!
   2e714:	mov	x29, sp
   2e718:	stp	x19, x20, [sp, #16]
   2e71c:	mov	x19, x3
   2e720:	sub	x3, x4, x3
   2e724:	stp	x21, x22, [sp, #32]
   2e728:	mov	x20, x2
   2e72c:	mov	x21, x1
   2e730:	stp	x23, x24, [sp, #48]
   2e734:	cmp	x3, #0x1
   2e738:	mov	x24, x5
   2e73c:	mov	x22, x0
   2e740:	b.ne	2e7c8 <mpfr_asin@@Base+0x878>  // b.any
   2e744:	cbz	x19, 2e7b0 <mpfr_asin@@Base+0x860>
   2e748:	lsl	x1, x19, #1
   2e74c:	sub	x1, x1, #0x1
   2e750:	bl	bcb0 <__gmpz_set_ui@plt>
   2e754:	mov	x2, #0x3                   	// #3
   2e758:	mov	x1, x22
   2e75c:	mov	x0, x22
   2e760:	bl	c330 <__gmpz_pow_ui@plt>
   2e764:	lsl	x1, x19, #5
   2e768:	mov	x0, x21
   2e76c:	bl	bcb0 <__gmpz_set_ui@plt>
   2e770:	mov	x2, x24
   2e774:	mov	x1, x21
   2e778:	mov	x0, x21
   2e77c:	bl	c100 <__gmpz_mul_ui@plt>
   2e780:	mov	x2, x24
   2e784:	mov	x1, x21
   2e788:	mov	x0, x21
   2e78c:	bl	c100 <__gmpz_mul_ui@plt>
   2e790:	mov	x1, x22
   2e794:	mov	x0, x20
   2e798:	bl	bfa0 <__gmpz_set@plt>
   2e79c:	ldp	x19, x20, [sp, #16]
   2e7a0:	ldp	x21, x22, [sp, #32]
   2e7a4:	ldp	x23, x24, [sp, #48]
   2e7a8:	ldp	x29, x30, [sp], #160
   2e7ac:	ret
   2e7b0:	mov	x1, x3
   2e7b4:	bl	bcb0 <__gmpz_set_ui@plt>
   2e7b8:	lsl	x1, x24, #2
   2e7bc:	mov	x0, x21
   2e7c0:	bl	bcb0 <__gmpz_set_ui@plt>
   2e7c4:	b	2e790 <mpfr_asin@@Base+0x840>
   2e7c8:	stp	x25, x26, [sp, #64]
   2e7cc:	add	x25, sp, #0x70
   2e7d0:	mov	x23, x4
   2e7d4:	mov	x0, x25
   2e7d8:	stp	x27, x28, [sp, #80]
   2e7dc:	add	x28, x4, x19
   2e7e0:	add	x27, sp, #0x80
   2e7e4:	str	w6, [sp, #108]
   2e7e8:	bl	bf90 <mpfr_mpz_init@plt>
   2e7ec:	add	x26, sp, #0x90
   2e7f0:	mov	x0, x27
   2e7f4:	bl	bf90 <mpfr_mpz_init@plt>
   2e7f8:	lsr	x28, x28, #1
   2e7fc:	mov	x0, x26
   2e800:	bl	bf90 <mpfr_mpz_init@plt>
   2e804:	mov	x3, x19
   2e808:	mov	x4, x28
   2e80c:	mov	x5, x24
   2e810:	mov	x2, x20
   2e814:	mov	x1, x21
   2e818:	mov	x0, x22
   2e81c:	mov	w6, #0x1                   	// #1
   2e820:	bl	2e710 <mpfr_asin@@Base+0x7c0>
   2e824:	mov	x3, x28
   2e828:	mov	x5, x24
   2e82c:	mov	x4, x23
   2e830:	mov	w6, #0x1                   	// #1
   2e834:	mov	x2, x26
   2e838:	mov	x1, x27
   2e83c:	mov	x0, x25
   2e840:	bl	2e710 <mpfr_asin@@Base+0x7c0>
   2e844:	mov	x2, x27
   2e848:	mov	x1, x20
   2e84c:	mov	x0, x20
   2e850:	bl	bff0 <__gmpz_mul@plt>
   2e854:	mov	x2, x22
   2e858:	mov	x1, x26
   2e85c:	mov	x0, x26
   2e860:	bl	bff0 <__gmpz_mul@plt>
   2e864:	mov	x2, x26
   2e868:	mov	x1, x20
   2e86c:	mov	x0, x20
   2e870:	bl	c9c0 <__gmpz_add@plt>
   2e874:	ldr	w7, [sp, #108]
   2e878:	cbnz	w7, 2e8c0 <mpfr_asin@@Base+0x970>
   2e87c:	mov	x2, x27
   2e880:	mov	x1, x21
   2e884:	mov	x0, x21
   2e888:	bl	bff0 <__gmpz_mul@plt>
   2e88c:	mov	x0, x25
   2e890:	bl	c170 <mpfr_mpz_clear@plt>
   2e894:	mov	x0, x27
   2e898:	bl	c170 <mpfr_mpz_clear@plt>
   2e89c:	mov	x0, x26
   2e8a0:	bl	c170 <mpfr_mpz_clear@plt>
   2e8a4:	ldp	x19, x20, [sp, #16]
   2e8a8:	ldp	x21, x22, [sp, #32]
   2e8ac:	ldp	x23, x24, [sp, #48]
   2e8b0:	ldp	x25, x26, [sp, #64]
   2e8b4:	ldp	x27, x28, [sp, #80]
   2e8b8:	ldp	x29, x30, [sp], #160
   2e8bc:	ret
   2e8c0:	mov	x2, x25
   2e8c4:	mov	x1, x22
   2e8c8:	mov	x0, x22
   2e8cc:	bl	bff0 <__gmpz_mul@plt>
   2e8d0:	b	2e87c <mpfr_asin@@Base+0x92c>
   2e8d4:	nop

000000000002e8d8 <mpfr_const_euler_internal@@Base>:
   2e8d8:	stp	x29, x30, [sp, #-320]!
   2e8dc:	mov	x2, x0
   2e8e0:	mov	x29, sp
   2e8e4:	str	w1, [sp, #100]
   2e8e8:	ldr	x1, [x2]
   2e8ec:	stp	x19, x20, [sp, #16]
   2e8f0:	add	x20, sp, #0xe0
   2e8f4:	add	x19, x1, #0x18
   2e8f8:	str	x1, [sp, #120]
   2e8fc:	mov	x1, x19
   2e900:	str	x2, [sp, #128]
   2e904:	mov	x2, #0x40                  	// #64
   2e908:	stp	x25, x26, [sp, #64]
   2e90c:	add	x26, sp, #0xc0
   2e910:	mov	x0, x26
   2e914:	stp	x21, x22, [sp, #32]
   2e918:	add	x25, sp, #0x90
   2e91c:	stp	x23, x24, [sp, #48]
   2e920:	add	x21, sp, #0xa0
   2e924:	add	x22, sp, #0xb0
   2e928:	stp	x27, x28, [sp, #80]
   2e92c:	str	x2, [sp, #136]
   2e930:	bl	ca80 <mpfr_init2@plt>
   2e934:	mov	x0, x20
   2e938:	bl	2e388 <mpfr_asin@@Base+0x438>
   2e93c:	mov	x0, x25
   2e940:	bl	bf90 <mpfr_mpz_init@plt>
   2e944:	mov	x0, x21
   2e948:	bl	bf90 <mpfr_mpz_init@plt>
   2e94c:	mov	x0, x22
   2e950:	bl	bf90 <mpfr_mpz_init@plt>
   2e954:	add	x1, x19, #0x5
   2e958:	mov	x0, x25
   2e95c:	bl	bcb0 <__gmpz_set_ui@plt>
   2e960:	mov	x2, #0x3882                	// #14466
   2e964:	mov	x1, x25
   2e968:	mov	x0, x25
   2e96c:	movk	x2, #0xd, lsl #16
   2e970:	bl	c100 <__gmpz_mul_ui@plt>
   2e974:	mov	x2, #0x9680                	// #38528
   2e978:	mov	x1, x25
   2e97c:	mov	x0, x25
   2e980:	movk	x2, #0x98, lsl #16
   2e984:	bl	beb0 <__gmpz_cdiv_q_ui@plt>
   2e988:	ldr	x1, [sp, #152]
   2e98c:	ldr	w0, [sp, #148]
   2e990:	ldr	x27, [x1]
   2e994:	lsl	x6, x27, #1
   2e998:	cbnz	w0, 2e9a4 <mpfr_const_euler_internal@@Base+0xcc>
   2e99c:	mov	x6, #0x0                   	// #0
   2e9a0:	mov	x27, #0x0                   	// #0
   2e9a4:	mov	x1, x27
   2e9a8:	mov	x0, x25
   2e9ac:	str	x6, [sp, #112]
   2e9b0:	bl	bcb0 <__gmpz_set_ui@plt>
   2e9b4:	mov	x2, #0xd882                	// #55426
   2e9b8:	mov	x1, x25
   2e9bc:	mov	x0, x25
   2e9c0:	movk	x2, #0x4b, lsl #16
   2e9c4:	bl	c100 <__gmpz_mul_ui@plt>
   2e9c8:	add	x24, x20, #0x20
   2e9cc:	mov	x2, #0x4240                	// #16960
   2e9d0:	mov	x1, x25
   2e9d4:	movk	x2, #0xf, lsl #16
   2e9d8:	mov	x0, x25
   2e9dc:	bl	beb0 <__gmpz_cdiv_q_ui@plt>
   2e9e0:	add	x28, x20, #0x40
   2e9e4:	add	x12, x20, #0x10
   2e9e8:	mov	x1, x25
   2e9ec:	mov	x0, x25
   2e9f0:	mov	x2, #0x1                   	// #1
   2e9f4:	str	x12, [sp, #104]
   2e9f8:	add	x23, x20, #0x50
   2e9fc:	bl	c360 <__gmpz_add_ui@plt>
   2ea00:	ldr	x2, [sp, #152]
   2ea04:	mov	x3, x27
   2ea08:	ldr	w9, [sp, #148]
   2ea0c:	mov	w4, #0x0                   	// #0
   2ea10:	mov	x0, x20
   2ea14:	mov	x1, #0x0                   	// #0
   2ea18:	cmp	w9, #0x0
   2ea1c:	ldr	x2, [x2]
   2ea20:	csel	x2, x2, xzr, ne  // ne = any
   2ea24:	bl	2e418 <mpfr_asin@@Base+0x4c8>
   2ea28:	ldr	x12, [sp, #104]
   2ea2c:	mov	x1, x24
   2ea30:	mov	x0, x24
   2ea34:	mov	x2, x12
   2ea38:	bl	c9c0 <__gmpz_add@plt>
   2ea3c:	mov	x1, x24
   2ea40:	mov	x2, x28
   2ea44:	mov	x0, x25
   2ea48:	bl	bff0 <__gmpz_mul@plt>
   2ea4c:	mov	x1, x23
   2ea50:	mov	x2, x19
   2ea54:	mov	x0, x21
   2ea58:	bl	c200 <__gmpz_mul_2exp@plt>
   2ea5c:	mov	x2, x25
   2ea60:	mov	x1, x21
   2ea64:	mov	x0, x22
   2ea68:	bl	bb30 <__gmpz_tdiv_q@plt>
   2ea6c:	ldr	x6, [sp, #112]
   2ea70:	mov	x5, x27
   2ea74:	mov	x3, #0x0                   	// #0
   2ea78:	mov	x2, x23
   2ea7c:	mov	x4, x6
   2ea80:	mov	x1, x28
   2ea84:	mov	w6, #0x0                   	// #0
   2ea88:	add	x0, x20, #0x30
   2ea8c:	bl	2e710 <mpfr_asin@@Base+0x7c0>
   2ea90:	ldr	x12, [sp, #104]
   2ea94:	mov	x0, x25
   2ea98:	mov	x2, x12
   2ea9c:	mov	x1, x12
   2eaa0:	bl	bff0 <__gmpz_mul@plt>
   2eaa4:	mov	x2, x23
   2eaa8:	mov	x1, x25
   2eaac:	mov	x0, x25
   2eab0:	bl	bff0 <__gmpz_mul@plt>
   2eab4:	mov	x2, x24
   2eab8:	mov	x1, x24
   2eabc:	mov	x0, x21
   2eac0:	bl	bff0 <__gmpz_mul@plt>
   2eac4:	mov	x2, x28
   2eac8:	mov	x1, x21
   2eacc:	mov	x0, x21
   2ead0:	bl	bff0 <__gmpz_mul@plt>
   2ead4:	mov	x2, x19
   2ead8:	mov	x1, x25
   2eadc:	mov	x0, x25
   2eae0:	bl	c200 <__gmpz_mul_2exp@plt>
   2eae4:	mov	x2, x21
   2eae8:	mov	x1, x25
   2eaec:	mov	x0, x25
   2eaf0:	bl	bb30 <__gmpz_tdiv_q@plt>
   2eaf4:	mov	x2, x25
   2eaf8:	mov	x1, x22
   2eafc:	mov	x0, x22
   2eb00:	bl	bde0 <__gmpz_sub@plt>
   2eb04:	cmp	x27, #0x1
   2eb08:	b.eq	2ec5c <mpfr_const_euler_internal@@Base+0x384>  // b.none
   2eb0c:	b.ls	2ec64 <mpfr_const_euler_internal@@Base+0x38c>  // b.plast
   2eb10:	sub	x0, x27, #0x1
   2eb14:	mov	w1, #0x40                  	// #64
   2eb18:	clz	x0, x0
   2eb1c:	sub	w1, w1, w0
   2eb20:	add	x1, x19, w1, sxtw
   2eb24:	mov	x0, x26
   2eb28:	bl	bed0 <mpfr_set_prec@plt>
   2eb2c:	mov	w3, #0x1                   	// #1
   2eb30:	mov	x1, x27
   2eb34:	mov	x2, #0x0                   	// #0
   2eb38:	mov	x0, x26
   2eb3c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   2eb40:	mov	x1, x26
   2eb44:	mov	w2, #0x1                   	// #1
   2eb48:	mov	x0, x26
   2eb4c:	bl	c090 <mpfr_log@plt>
   2eb50:	mov	x2, x19
   2eb54:	mov	x1, x26
   2eb58:	mov	w3, #0x1                   	// #1
   2eb5c:	mov	x0, x26
   2eb60:	bl	c2c0 <mpfr_mul_2ui@plt>
   2eb64:	mov	x2, x26
   2eb68:	mov	x1, x22
   2eb6c:	mov	w3, #0x1                   	// #1
   2eb70:	mov	x0, x26
   2eb74:	bl	c030 <mpfr_z_sub@plt>
   2eb78:	mov	x1, x26
   2eb7c:	mov	x2, x19
   2eb80:	mov	x0, x26
   2eb84:	mov	w3, #0x1                   	// #1
   2eb88:	bl	c8f0 <mpfr_div_2ui@plt>
   2eb8c:	ldr	x1, [sp, #208]
   2eb90:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2eb94:	cmp	x1, x0
   2eb98:	b.le	2ec2c <mpfr_const_euler_internal@@Base+0x354>
   2eb9c:	ldr	w0, [sp, #100]
   2eba0:	ldr	x1, [sp, #192]
   2eba4:	cmp	w0, #0x0
   2eba8:	ldr	x0, [sp, #216]
   2ebac:	sub	x1, x1, #0x1
   2ebb0:	ldr	x2, [sp, #120]
   2ebb4:	asr	x1, x1, #6
   2ebb8:	add	x1, x1, #0x1
   2ebbc:	cinc	x3, x2, eq  // eq = none
   2ebc0:	sub	x2, x19, #0x3
   2ebc4:	bl	c370 <mpfr_round_p@plt>
   2ebc8:	cbz	w0, 2ec2c <mpfr_const_euler_internal@@Base+0x354>
   2ebcc:	ldr	w2, [sp, #100]
   2ebd0:	mov	x1, x26
   2ebd4:	ldr	w3, [sp, #200]
   2ebd8:	ldr	x0, [sp, #128]
   2ebdc:	bl	c6a0 <mpfr_set4@plt>
   2ebe0:	mov	w19, w0
   2ebe4:	mov	x0, x26
   2ebe8:	bl	c070 <mpfr_clear@plt>
   2ebec:	mov	x0, x25
   2ebf0:	bl	c170 <mpfr_mpz_clear@plt>
   2ebf4:	mov	x0, x21
   2ebf8:	bl	c170 <mpfr_mpz_clear@plt>
   2ebfc:	mov	x0, x22
   2ec00:	bl	c170 <mpfr_mpz_clear@plt>
   2ec04:	mov	x0, x20
   2ec08:	bl	2e3d0 <mpfr_asin@@Base+0x480>
   2ec0c:	mov	w0, w19
   2ec10:	ldp	x19, x20, [sp, #16]
   2ec14:	ldp	x21, x22, [sp, #32]
   2ec18:	ldp	x23, x24, [sp, #48]
   2ec1c:	ldp	x25, x26, [sp, #64]
   2ec20:	ldp	x27, x28, [sp, #80]
   2ec24:	ldp	x29, x30, [sp], #320
   2ec28:	ret
   2ec2c:	ldr	x1, [sp, #136]
   2ec30:	mov	x0, #0xfffffffffffffeff    	// #-257
   2ec34:	movk	x0, #0x7fff, lsl #48
   2ec38:	sub	x0, x0, x19
   2ec3c:	cmp	x0, x1
   2ec40:	b.lt	2ec7c <mpfr_const_euler_internal@@Base+0x3a4>  // b.tstop
   2ec44:	ldr	x0, [sp, #136]
   2ec48:	add	x19, x19, x0
   2ec4c:	add	x0, x19, x19, lsr #63
   2ec50:	asr	x0, x0, #1
   2ec54:	str	x0, [sp, #136]
   2ec58:	b	2e954 <mpfr_const_euler_internal@@Base+0x7c>
   2ec5c:	mov	x1, x19
   2ec60:	b	2eb24 <mpfr_const_euler_internal@@Base+0x24c>
   2ec64:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2ec68:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2ec6c:	add	x2, x2, #0x9e0
   2ec70:	add	x0, x0, #0x9e8
   2ec74:	mov	w1, #0xf9                  	// #249
   2ec78:	bl	cb40 <mpfr_assert_fail@plt>
   2ec7c:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2ec80:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2ec84:	add	x2, x2, #0x9f8
   2ec88:	add	x0, x0, #0x9e8
   2ec8c:	mov	w1, #0x107                 	// #263
   2ec90:	bl	cb40 <mpfr_assert_fail@plt>
   2ec94:	nop

000000000002ec98 <mpfr_const_euler@@Base>:
   2ec98:	stp	x29, x30, [sp, #-16]!
   2ec9c:	mov	x4, x0
   2eca0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2eca4:	ldr	x2, [x0, #2608]
   2eca8:	add	x0, x0, #0xa30
   2ecac:	blr	x2
   2ecb0:	mov	x29, sp
   2ecb4:	ldp	x29, x30, [sp], #16
   2ecb8:	mrs	x3, tpidr_el0
   2ecbc:	mov	w2, w1
   2ecc0:	add	x1, x3, x0
   2ecc4:	mov	x0, x4
   2ecc8:	b	c380 <mpfr_cache@plt>
   2eccc:	nop

000000000002ecd0 <mpfr_cos@@Base>:
   2ecd0:	sub	sp, sp, #0x220
   2ecd4:	mov	x3, x1
   2ecd8:	stp	x29, x30, [sp]
   2ecdc:	mov	x29, sp
   2ece0:	str	w2, [sp, #184]
   2ece4:	ldr	x2, [x3, #16]
   2ece8:	stp	x19, x20, [sp, #16]
   2ecec:	str	x0, [sp, #120]
   2ecf0:	str	x1, [sp, #136]
   2ecf4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2ecf8:	str	x2, [sp, #152]
   2ecfc:	cmp	x2, x1
   2ed00:	b.le	2f5f4 <mpfr_cos@@Base+0x924>
   2ed04:	mrs	x4, tpidr_el0
   2ed08:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2ed0c:	ldr	x1, [x0, #2576]
   2ed10:	add	x0, x0, #0xa10
   2ed14:	blr	x1
   2ed18:	stp	x21, x22, [sp, #32]
   2ed1c:	add	x22, x4, x0
   2ed20:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   2ed24:	ldr	w0, [x4, x0]
   2ed28:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2ed2c:	str	w0, [sp, #188]
   2ed30:	ldr	x2, [sp, #152]
   2ed34:	str	x4, [sp, #128]
   2ed38:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2ed3c:	ldr	x5, [x0, #2512]
   2ed40:	add	x0, x0, #0x9d0
   2ed44:	blr	x5
   2ed48:	add	x21, x4, x0
   2ed4c:	ldr	x0, [x4, x0]
   2ed50:	str	x0, [sp, #200]
   2ed54:	str	x3, [x21]
   2ed58:	neg	x2, x2, lsl #1
   2ed5c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2ed60:	ldr	x5, [x0, #2544]
   2ed64:	add	x0, x0, #0x9f0
   2ed68:	blr	x5
   2ed6c:	add	x20, x4, x0
   2ed70:	ldr	x0, [x4, x0]
   2ed74:	str	x0, [sp, #208]
   2ed78:	ldr	x0, [sp, #120]
   2ed7c:	str	x1, [x20]
   2ed80:	cmp	x2, #0x0
   2ed84:	ldr	x0, [x0]
   2ed88:	str	x0, [sp, #144]
   2ed8c:	b.le	2eda0 <mpfr_cos@@Base+0xd0>
   2ed90:	add	x2, x2, #0x1
   2ed94:	add	x0, x0, #0x1
   2ed98:	cmp	x0, x2
   2ed9c:	b.cc	2f518 <mpfr_cos@@Base+0x848>  // b.lo, b.ul, b.last
   2eda0:	ldr	x1, [sp, #144]
   2eda4:	mov	x0, #0x752f                	// #29999
   2eda8:	cmp	x1, x0
   2edac:	b.gt	2f490 <mpfr_cos@@Base+0x7c0>
   2edb0:	ldr	x19, [sp, #144]
   2edb4:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   2edb8:	movk	x0, #0x5556
   2edbc:	stp	x23, x24, [sp, #48]
   2edc0:	smulh	x0, x19, x0
   2edc4:	stp	x25, x26, [sp, #64]
   2edc8:	stp	x27, x28, [sp, #80]
   2edcc:	sub	x0, x0, x19, asr #63
   2edd0:	bl	bf20 <__gmpfr_isqrt@plt>
   2edd4:	str	x0, [sp, #176]
   2edd8:	cmp	x19, #0x1
   2eddc:	b.eq	2f63c <mpfr_cos@@Base+0x96c>  // b.none
   2ede0:	b.le	2f71c <mpfr_cos@@Base+0xa4c>
   2ede4:	ldr	x1, [sp, #144]
   2ede8:	mov	w19, #0x40                  	// #64
   2edec:	sub	x0, x1, #0x1
   2edf0:	clz	x0, x0
   2edf4:	sub	w19, w19, w0
   2edf8:	lsl	w19, w19, #1
   2edfc:	add	x19, x1, w19, sxtw
   2ee00:	ldr	x0, [sp, #176]
   2ee04:	add	x19, x19, x0, lsl #1
   2ee08:	ldr	x0, [sp, #152]
   2ee0c:	add	x28, x19, #0x4
   2ee10:	cmp	x0, #0x2
   2ee14:	b.gt	2f360 <mpfr_cos@@Base+0x690>
   2ee18:	str	wzr, [sp, #116]
   2ee1c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2ee20:	cmp	x28, x0
   2ee24:	b.ge	2f734 <mpfr_cos@@Base+0xa64>  // b.tcont
   2ee28:	add	x20, x19, #0x42
   2ee2c:	adds	x19, x19, #0x3
   2ee30:	csel	x19, x20, x19, mi  // mi = first
   2ee34:	asr	x20, x19, #6
   2ee38:	add	x20, x20, #0x1
   2ee3c:	lsl	x0, x20, #1
   2ee40:	cmp	x0, #0x10
   2ee44:	b.gt	2f554 <mpfr_cos@@Base+0x884>
   2ee48:	add	x1, sp, #0x1a0
   2ee4c:	stp	xzr, x1, [sp, #400]
   2ee50:	mov	x0, x1
   2ee54:	add	x22, sp, #0xe0
   2ee58:	add	x23, sp, #0x100
   2ee5c:	add	x19, sp, #0xf0
   2ee60:	add	x21, sp, #0x130
   2ee64:	add	x26, sp, #0x110
   2ee68:	mov	w1, #0x1                   	// #1
   2ee6c:	add	x20, x0, x20, lsl #3
   2ee70:	mov	x2, #0x40                  	// #64
   2ee74:	str	x2, [sp, #104]
   2ee78:	str	xzr, [sp, #216]
   2ee7c:	str	x28, [sp, #272]
   2ee80:	str	w1, [sp, #280]
   2ee84:	stp	x0, x28, [sp, #296]
   2ee88:	str	w1, [sp, #312]
   2ee8c:	str	x20, [sp, #328]
   2ee90:	ldr	w0, [sp, #116]
   2ee94:	cbz	w0, 2ef80 <mpfr_cos@@Base+0x2b0>
   2ee98:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2ee9c:	ldr	x1, [x0, #2624]
   2eea0:	add	x0, x0, #0xa40
   2eea4:	blr	x1
   2eea8:	add	x24, sp, #0x170
   2eeac:	ldr	x1, [sp, #128]
   2eeb0:	mov	w2, #0x0                   	// #0
   2eeb4:	add	x20, sp, #0x150
   2eeb8:	add	x1, x1, x0
   2eebc:	mov	x0, x24
   2eec0:	bl	c380 <mpfr_cache@plt>
   2eec4:	mov	x1, x24
   2eec8:	mov	w3, #0x0                   	// #0
   2eecc:	mov	x2, #0x1                   	// #1
   2eed0:	mov	x0, x24
   2eed4:	bl	c2c0 <mpfr_mul_2ui@plt>
   2eed8:	ldr	x1, [sp, #136]
   2eedc:	mov	x2, x24
   2eee0:	mov	x0, x20
   2eee4:	mov	w3, #0x0                   	// #0
   2eee8:	bl	cd10 <mpfr_remainder@plt>
   2eeec:	ldr	x1, [sp, #352]
   2eef0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2eef4:	cmp	x1, x0
   2eef8:	b.ne	2f43c <mpfr_cos@@Base+0x76c>  // b.any
   2eefc:	ldr	x1, [sp, #104]
   2ef00:	mov	x0, #0xfffffffffffffeff    	// #-257
   2ef04:	movk	x0, #0x7fff, lsl #48
   2ef08:	sub	x0, x0, x28
   2ef0c:	cmp	x0, x1
   2ef10:	b.lt	2f588 <mpfr_cos@@Base+0x8b8>  // b.tstop
   2ef14:	ldr	x0, [sp, #104]
   2ef18:	ldr	x1, [sp, #400]
   2ef1c:	add	x28, x28, x0
   2ef20:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2ef24:	cmp	x28, x0
   2ef28:	add	x0, x28, x28, lsr #63
   2ef2c:	asr	x0, x0, #1
   2ef30:	str	x0, [sp, #104]
   2ef34:	b.ge	2f734 <mpfr_cos@@Base+0xa64>  // b.tcont
   2ef38:	sub	x20, x28, #0x1
   2ef3c:	asr	x20, x20, #6
   2ef40:	add	x20, x20, #0x1
   2ef44:	lsl	x2, x20, #4
   2ef48:	str	x2, [sp, #400]
   2ef4c:	cbnz	x1, 2f3f0 <mpfr_cos@@Base+0x720>
   2ef50:	mov	x0, x2
   2ef54:	bl	ccf0 <mpfr_allocate_func@plt>
   2ef58:	str	x0, [sp, #408]
   2ef5c:	add	x20, x0, x20, lsl #3
   2ef60:	stp	x0, x28, [sp, #296]
   2ef64:	ldr	w0, [sp, #116]
   2ef68:	mov	w1, #0x1                   	// #1
   2ef6c:	str	x28, [sp, #272]
   2ef70:	str	w1, [sp, #280]
   2ef74:	str	w1, [sp, #312]
   2ef78:	str	x20, [sp, #328]
   2ef7c:	cbnz	w0, 2f454 <mpfr_cos@@Base+0x784>
   2ef80:	ldr	x1, [sp, #136]
   2ef84:	mov	x0, x26
   2ef88:	mov	w3, #0x2                   	// #2
   2ef8c:	mov	x2, x1
   2ef90:	bl	bd50 <mpfr_mul@plt>
   2ef94:	ldr	x1, [sp, #288]
   2ef98:	ldr	x0, [sp, #176]
   2ef9c:	cmp	x1, #0x0
   2efa0:	csel	x2, x1, xzr, ge  // ge = tcont
   2efa4:	add	x27, x0, #0x1
   2efa8:	mov	x0, x22
   2efac:	add	x27, x27, x2, asr #1
   2efb0:	lsl	x2, x27, #1
   2efb4:	str	x2, [sp, #192]
   2efb8:	sub	x1, x1, x2
   2efbc:	str	x1, [sp, #288]
   2efc0:	bl	bf90 <mpfr_mpz_init@plt>
   2efc4:	mov	x0, x23
   2efc8:	bl	bf90 <mpfr_mpz_init@plt>
   2efcc:	mov	x0, x19
   2efd0:	bl	bf90 <mpfr_mpz_init@plt>
   2efd4:	mov	x1, x26
   2efd8:	mov	x0, x22
   2efdc:	bl	cac0 <mpfr_get_z_2exp@plt>
   2efe0:	mov	x24, x0
   2efe4:	mov	x1, #0x0                   	// #0
   2efe8:	mov	x0, x22
   2efec:	bl	ba90 <__gmpz_scan1@plt>
   2eff0:	mov	x2, x0
   2eff4:	mov	x1, x22
   2eff8:	add	x24, x0, x24
   2effc:	mov	x0, x22
   2f000:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2f004:	ldr	x0, [sp, #288]
   2f008:	ldr	x1, [sp, #304]
   2f00c:	neg	x0, x0
   2f010:	sdiv	x0, x1, x0
   2f014:	cmp	x0, #0x0
   2f018:	cinc	x0, x0, eq  // eq = none
   2f01c:	cmp	x0, #0x1
   2f020:	b.eq	2f5b0 <mpfr_cos@@Base+0x8e0>  // b.none
   2f024:	b.ls	2f5dc <mpfr_cos@@Base+0x90c>  // b.plast
   2f028:	sub	x0, x0, #0x1
   2f02c:	mov	w25, #0x42                  	// #66
   2f030:	clz	x0, x0
   2f034:	sub	w25, w25, w0
   2f038:	lsl	w25, w25, #1
   2f03c:	sxtw	x0, w25
   2f040:	mov	x25, x0
   2f044:	add	x0, x1, x0
   2f048:	mov	x20, x0
   2f04c:	mov	x1, #0x1                   	// #1
   2f050:	mov	x0, x23
   2f054:	str	x20, [sp, #160]
   2f058:	bl	bcb0 <__gmpz_set_ui@plt>
   2f05c:	mov	x2, x20
   2f060:	mov	x1, x23
   2f064:	mov	x0, x23
   2f068:	bl	c200 <__gmpz_mul_2exp@plt>
   2f06c:	mov	x1, x23
   2f070:	mov	x0, x19
   2f074:	bl	bfa0 <__gmpz_set@plt>
   2f078:	mov	x20, #0x1                   	// #1
   2f07c:	mov	x0, x19
   2f080:	mov	w1, #0x2                   	// #2
   2f084:	str	x21, [sp, #168]
   2f088:	bl	cb60 <__gmpz_sizeinbase@plt>
   2f08c:	mov	x21, x0
   2f090:	cmp	x25, x0
   2f094:	b.gt	2f124 <mpfr_cos@@Base+0x454>
   2f098:	mov	x0, x22
   2f09c:	mov	w1, #0x2                   	// #2
   2f0a0:	bl	cb60 <__gmpz_sizeinbase@plt>
   2f0a4:	cmp	x0, x21
   2f0a8:	b.gt	2f3d8 <mpfr_cos@@Base+0x708>
   2f0ac:	mov	x2, x22
   2f0b0:	mov	x1, x19
   2f0b4:	mov	x0, x19
   2f0b8:	bl	bff0 <__gmpz_mul@plt>
   2f0bc:	mov	x0, x19
   2f0c0:	neg	x2, x24
   2f0c4:	mov	x1, x19
   2f0c8:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2f0cc:	mov	x0, #0xffffffff            	// #4294967295
   2f0d0:	add	x21, x20, #0x1
   2f0d4:	cmp	x20, x0
   2f0d8:	b.hi	2f394 <mpfr_cos@@Base+0x6c4>  // b.pmore
   2f0dc:	mul	x2, x20, x21
   2f0e0:	mov	x1, x19
   2f0e4:	mov	x0, x19
   2f0e8:	bl	c610 <__gmpz_fdiv_q_ui@plt>
   2f0ec:	and	x0, x20, #0x3
   2f0f0:	mov	x2, x19
   2f0f4:	cmp	x0, #0x1
   2f0f8:	mov	x1, x23
   2f0fc:	mov	x0, x23
   2f100:	b.eq	2f3cc <mpfr_cos@@Base+0x6fc>  // b.none
   2f104:	add	x20, x20, #0x2
   2f108:	bl	c9c0 <__gmpz_add@plt>
   2f10c:	mov	x0, x19
   2f110:	mov	w1, #0x2                   	// #2
   2f114:	bl	cb60 <__gmpz_sizeinbase@plt>
   2f118:	mov	x21, x0
   2f11c:	cmp	x25, x0
   2f120:	b.le	2f098 <mpfr_cos@@Base+0x3c8>
   2f124:	ldr	x21, [sp, #168]
   2f128:	mov	x1, x23
   2f12c:	mov	w2, #0x0                   	// #0
   2f130:	sub	x20, x20, #0x1
   2f134:	mov	x0, x21
   2f138:	bl	c240 <mpfr_set_z@plt>
   2f13c:	ldr	x2, [sp, #160]
   2f140:	mov	x1, x21
   2f144:	mov	w3, #0x0                   	// #0
   2f148:	mov	x0, x21
   2f14c:	lsr	x20, x20, #1
   2f150:	mov	x25, #0x0                   	// #0
   2f154:	bl	c8f0 <mpfr_div_2ui@plt>
   2f158:	mov	x24, #0x8000000000000001    	// #-9223372036854775807
   2f15c:	mov	x0, x22
   2f160:	bl	c170 <mpfr_mpz_clear@plt>
   2f164:	mov	x0, x23
   2f168:	bl	c170 <mpfr_mpz_clear@plt>
   2f16c:	mov	x0, x19
   2f170:	bl	c170 <mpfr_mpz_clear@plt>
   2f174:	ldr	x3, [sp, #272]
   2f178:	clz	x0, x20
   2f17c:	mov	w1, #0x40                  	// #64
   2f180:	sub	w1, w1, w0
   2f184:	sub	x3, x3, #0x1
   2f188:	cmp	x20, #0x0
   2f18c:	lsl	w1, w1, #1
   2f190:	mov	x5, #0x1                   	// #1
   2f194:	ldr	x0, [sp, #296]
   2f198:	asr	x3, x3, #6
   2f19c:	add	w20, w1, #0x1
   2f1a0:	mov	w1, #0x0                   	// #0
   2f1a4:	lsl	x2, x3, #3
   2f1a8:	str	x3, [sp, #160]
   2f1ac:	sxtw	x20, w20
   2f1b0:	str	w5, [sp, #280]
   2f1b4:	csel	x20, x20, x5, ne  // ne = any
   2f1b8:	str	x5, [sp, #288]
   2f1bc:	bl	c110 <memset@plt>
   2f1c0:	ldr	x3, [sp, #160]
   2f1c4:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   2f1c8:	ldr	x0, [sp, #296]
   2f1cc:	cmp	x27, #0x0
   2f1d0:	mov	x5, #0x1                   	// #1
   2f1d4:	str	x1, [x0, x3, lsl #3]
   2f1d8:	b.le	2f61c <mpfr_cos@@Base+0x94c>
   2f1dc:	nop
   2f1e0:	mov	x1, x21
   2f1e4:	mov	w2, #0x2                   	// #2
   2f1e8:	mov	x0, x21
   2f1ec:	bl	c400 <mpfr_sqr@plt>
   2f1f0:	ldr	x4, [sp, #320]
   2f1f4:	mov	x2, x26
   2f1f8:	mov	x1, x21
   2f1fc:	mov	x0, x21
   2f200:	add	x4, x4, #0x1
   2f204:	mov	w3, #0x0                   	// #0
   2f208:	str	x4, [sp, #320]
   2f20c:	bl	bb70 <mpfr_sub@plt>
   2f210:	ldr	x4, [sp, #320]
   2f214:	cmp	x4, x24
   2f218:	b.eq	2eefc <mpfr_cos@@Base+0x22c>  // b.none
   2f21c:	add	x25, x25, #0x1
   2f220:	cmp	x25, x27
   2f224:	b.ne	2f1e0 <mpfr_cos@@Base+0x510>  // b.any
   2f228:	ldr	w1, [sp, #116]
   2f22c:	lsl	x20, x20, #1
   2f230:	add	x0, x20, #0x1
   2f234:	cbnz	w1, 2f5a0 <mpfr_cos@@Base+0x8d0>
   2f238:	mov	w0, #0x40                  	// #64
   2f23c:	clz	x20, x20
   2f240:	sub	w20, w0, w20
   2f244:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   2f248:	cmp	x4, x0
   2f24c:	ldr	x0, [sp, #192]
   2f250:	add	x20, x0, w20, sxtw
   2f254:	b.le	2f5c0 <mpfr_cos@@Base+0x8f0>
   2f258:	ldr	w0, [sp, #184]
   2f25c:	ldr	x1, [sp, #304]
   2f260:	cmp	w0, #0x0
   2f264:	ldr	x2, [sp, #144]
   2f268:	sub	x1, x1, #0x1
   2f26c:	ldr	x0, [sp, #328]
   2f270:	cinc	x24, x2, eq  // eq = none
   2f274:	asr	x1, x1, #6
   2f278:	add	x2, x28, x4
   2f27c:	mov	x3, x24
   2f280:	add	x1, x1, #0x1
   2f284:	sub	x2, x2, x20
   2f288:	str	x4, [sp, #160]
   2f28c:	bl	c370 <mpfr_round_p@plt>
   2f290:	ldr	x4, [sp, #160]
   2f294:	cbz	w0, 2f5b8 <mpfr_cos@@Base+0x8e8>
   2f298:	ldr	w2, [sp, #184]
   2f29c:	mov	x1, x21
   2f2a0:	ldr	w3, [sp, #312]
   2f2a4:	ldr	x0, [sp, #120]
   2f2a8:	bl	c6a0 <mpfr_set4@plt>
   2f2ac:	mov	w19, w0
   2f2b0:	ldr	x1, [sp, #400]
   2f2b4:	cbz	x1, 2f2c0 <mpfr_cos@@Base+0x5f0>
   2f2b8:	ldr	x0, [sp, #408]
   2f2bc:	bl	cc20 <mpfr_free_func@plt>
   2f2c0:	ldr	w0, [sp, #116]
   2f2c4:	cbnz	w0, 2f568 <mpfr_cos@@Base+0x898>
   2f2c8:	ldp	x23, x24, [sp, #48]
   2f2cc:	ldp	x25, x26, [sp, #64]
   2f2d0:	ldp	x27, x28, [sp, #80]
   2f2d4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2f2d8:	ldr	x1, [x0, #2576]
   2f2dc:	add	x0, x0, #0xa10
   2f2e0:	blr	x1
   2f2e4:	ldr	x2, [sp, #128]
   2f2e8:	ldr	w1, [sp, #188]
   2f2ec:	str	w1, [x2, x0]
   2f2f0:	ldr	x0, [sp, #120]
   2f2f4:	ldr	x1, [x0, #16]
   2f2f8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2f2fc:	ldr	x3, [x0, #2512]
   2f300:	add	x0, x0, #0x9d0
   2f304:	blr	x3
   2f308:	ldr	x3, [sp, #200]
   2f30c:	str	x3, [x2, x0]
   2f310:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2f314:	ldr	x4, [x0, #2544]
   2f318:	add	x0, x0, #0x9f0
   2f31c:	blr	x4
   2f320:	ldr	x4, [sp, #208]
   2f324:	str	x4, [x2, x0]
   2f328:	cmp	x3, x1
   2f32c:	ccmp	x4, x1, #0x1, le
   2f330:	b.ge	2f400 <mpfr_cos@@Base+0x730>  // b.tcont
   2f334:	ldr	w2, [sp, #184]
   2f338:	mov	w1, w19
   2f33c:	ldr	x0, [sp, #120]
   2f340:	bl	cb30 <mpfr_check_range@plt>
   2f344:	mov	w19, w0
   2f348:	ldp	x21, x22, [sp, #32]
   2f34c:	mov	w0, w19
   2f350:	ldp	x29, x30, [sp]
   2f354:	ldp	x19, x20, [sp, #16]
   2f358:	add	sp, sp, #0x220
   2f35c:	ret
   2f360:	add	x1, x0, x28
   2f364:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2f368:	cmp	x1, x0
   2f36c:	b.gt	2f704 <mpfr_cos@@Base+0xa34>
   2f370:	add	x0, sp, #0x170
   2f374:	sub	x1, x1, #0x1
   2f378:	bl	ca80 <mpfr_init2@plt>
   2f37c:	mov	w2, #0x1                   	// #1
   2f380:	mov	x1, x28
   2f384:	add	x0, sp, #0x150
   2f388:	str	w2, [sp, #116]
   2f38c:	bl	ca80 <mpfr_init2@plt>
   2f390:	b	2ee1c <mpfr_cos@@Base+0x14c>
   2f394:	mov	x2, x20
   2f398:	mov	x1, x19
   2f39c:	mov	x0, x19
   2f3a0:	bl	c610 <__gmpz_fdiv_q_ui@plt>
   2f3a4:	mov	x2, x21
   2f3a8:	mov	x1, x19
   2f3ac:	mov	x0, x19
   2f3b0:	bl	c610 <__gmpz_fdiv_q_ui@plt>
   2f3b4:	and	x0, x20, #0x3
   2f3b8:	mov	x2, x19
   2f3bc:	cmp	x0, #0x1
   2f3c0:	mov	x1, x23
   2f3c4:	mov	x0, x23
   2f3c8:	b.ne	2f104 <mpfr_cos@@Base+0x434>  // b.any
   2f3cc:	add	x20, x20, #0x2
   2f3d0:	bl	bde0 <__gmpz_sub@plt>
   2f3d4:	b	2f10c <mpfr_cos@@Base+0x43c>
   2f3d8:	sub	x2, x0, x21
   2f3dc:	mov	x1, x22
   2f3e0:	add	x24, x24, x2
   2f3e4:	mov	x0, x22
   2f3e8:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   2f3ec:	b	2f0ac <mpfr_cos@@Base+0x3dc>
   2f3f0:	ldr	x0, [sp, #408]
   2f3f4:	bl	c1c0 <mpfr_reallocate_func@plt>
   2f3f8:	str	x0, [sp, #408]
   2f3fc:	b	2ef5c <mpfr_cos@@Base+0x28c>
   2f400:	cbz	w19, 2f478 <mpfr_cos@@Base+0x7a8>
   2f404:	ldr	w0, [sp, #188]
   2f408:	ldp	x21, x22, [sp, #32]
   2f40c:	orr	w1, w0, #0x8
   2f410:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2f414:	ldr	x2, [x0, #2576]
   2f418:	add	x0, x0, #0xa10
   2f41c:	blr	x2
   2f420:	ldr	x2, [sp, #128]
   2f424:	ldp	x29, x30, [sp]
   2f428:	str	w1, [x2, x0]
   2f42c:	mov	w0, w19
   2f430:	ldp	x19, x20, [sp, #16]
   2f434:	add	sp, sp, #0x220
   2f438:	ret
   2f43c:	mov	x2, x20
   2f440:	mov	x1, x20
   2f444:	mov	x0, x26
   2f448:	mov	w3, #0x2                   	// #2
   2f44c:	bl	bd50 <mpfr_mul@plt>
   2f450:	b	2ef94 <mpfr_cos@@Base+0x2c4>
   2f454:	mov	x1, x28
   2f458:	add	x0, sp, #0x150
   2f45c:	bl	bed0 <mpfr_set_prec@plt>
   2f460:	ldr	x0, [sp, #152]
   2f464:	add	x1, x0, x28
   2f468:	add	x0, sp, #0x170
   2f46c:	sub	x1, x1, #0x1
   2f470:	bl	bed0 <mpfr_set_prec@plt>
   2f474:	b	2ee90 <mpfr_cos@@Base+0x1c0>
   2f478:	mov	w0, w19
   2f47c:	ldp	x29, x30, [sp]
   2f480:	ldp	x19, x20, [sp, #16]
   2f484:	ldp	x21, x22, [sp, #32]
   2f488:	add	sp, sp, #0x220
   2f48c:	ret
   2f490:	ldr	w3, [sp, #184]
   2f494:	mov	x0, #0x0                   	// #0
   2f498:	ldr	x1, [sp, #120]
   2f49c:	ldr	x2, [sp, #136]
   2f4a0:	bl	c020 <mpfr_sincos_fast@plt>
   2f4a4:	asr	w19, w0, #2
   2f4a8:	cmp	w19, #0x2
   2f4ac:	b.ne	2f2d4 <mpfr_cos@@Base+0x604>  // b.any
   2f4b0:	ldr	x2, [sp, #128]
   2f4b4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2f4b8:	ldr	x1, [x0, #2576]
   2f4bc:	add	x0, x0, #0xa10
   2f4c0:	blr	x1
   2f4c4:	ldr	w1, [sp, #188]
   2f4c8:	mov	w19, #0xffffffff            	// #-1
   2f4cc:	str	w1, [x2, x0]
   2f4d0:	ldr	x0, [sp, #120]
   2f4d4:	ldr	x1, [x0, #16]
   2f4d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2f4dc:	ldr	x3, [x0, #2512]
   2f4e0:	add	x0, x0, #0x9d0
   2f4e4:	blr	x3
   2f4e8:	ldr	x3, [sp, #200]
   2f4ec:	str	x3, [x2, x0]
   2f4f0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2f4f4:	ldr	x4, [x0, #2544]
   2f4f8:	add	x0, x0, #0x9f0
   2f4fc:	blr	x4
   2f500:	ldr	x4, [sp, #208]
   2f504:	str	x4, [x2, x0]
   2f508:	cmp	x3, x1
   2f50c:	ccmp	x4, x1, #0x1, le
   2f510:	b.lt	2f334 <mpfr_cos@@Base+0x664>  // b.tstop
   2f514:	b	2f404 <mpfr_cos@@Base+0x734>
   2f518:	adrp	x1, 7f000 <__gmpfr_l2b@@Base+0x200>
   2f51c:	ldr	w4, [sp, #184]
   2f520:	stp	x23, x24, [sp, #48]
   2f524:	mov	w3, #0x0                   	// #0
   2f528:	ldr	x1, [x1, #3928]
   2f52c:	str	wzr, [x22]
   2f530:	ldr	x23, [sp, #120]
   2f534:	mov	x0, x23
   2f538:	bl	c540 <mpfr_round_near_x@plt>
   2f53c:	mov	w19, w0
   2f540:	cbnz	w0, 2f644 <mpfr_cos@@Base+0x974>
   2f544:	ldr	x0, [x23]
   2f548:	str	x0, [sp, #144]
   2f54c:	ldp	x23, x24, [sp, #48]
   2f550:	b	2eda0 <mpfr_cos@@Base+0xd0>
   2f554:	lsl	x0, x20, #4
   2f558:	str	x0, [sp, #400]
   2f55c:	bl	ccf0 <mpfr_allocate_func@plt>
   2f560:	str	x0, [sp, #408]
   2f564:	b	2ee54 <mpfr_cos@@Base+0x184>
   2f568:	add	x0, sp, #0x150
   2f56c:	bl	c070 <mpfr_clear@plt>
   2f570:	add	x0, sp, #0x170
   2f574:	bl	c070 <mpfr_clear@plt>
   2f578:	ldp	x23, x24, [sp, #48]
   2f57c:	ldp	x25, x26, [sp, #64]
   2f580:	ldp	x27, x28, [sp, #80]
   2f584:	b	2f2d4 <mpfr_cos@@Base+0x604>
   2f588:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2f58c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2f590:	add	x2, x2, #0xab0
   2f594:	add	x0, x0, #0xa50
   2f598:	mov	w1, #0x117                 	// #279
   2f59c:	bl	cb40 <mpfr_assert_fail@plt>
   2f5a0:	mov	x20, #0x1                   	// #1
   2f5a4:	add	x20, x20, x0
   2f5a8:	sub	x20, x20, #0x1
   2f5ac:	b	2f238 <mpfr_cos@@Base+0x568>
   2f5b0:	mov	x0, #0x4                   	// #4
   2f5b4:	b	2f040 <mpfr_cos@@Base+0x370>
   2f5b8:	cmp	x4, #0x1
   2f5bc:	b.eq	2f694 <mpfr_cos@@Base+0x9c4>  // b.none
   2f5c0:	ldr	x0, [sp, #216]
   2f5c4:	cmp	x0, x4
   2f5c8:	b.le	2eefc <mpfr_cos@@Base+0x22c>
   2f5cc:	sub	x0, x0, x4
   2f5d0:	str	x4, [sp, #216]
   2f5d4:	add	x28, x28, x0
   2f5d8:	b	2eefc <mpfr_cos@@Base+0x22c>
   2f5dc:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2f5e0:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2f5e4:	add	x2, x2, #0xaa0
   2f5e8:	add	x0, x0, #0xa50
   2f5ec:	mov	w1, #0x4e                  	// #78
   2f5f0:	bl	cb40 <mpfr_assert_fail@plt>
   2f5f4:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   2f5f8:	add	x1, x2, x1
   2f5fc:	cmp	x1, #0x1
   2f600:	b.ls	2f6b4 <mpfr_cos@@Base+0x9e4>  // b.plast
   2f604:	ldr	w3, [sp, #184]
   2f608:	mov	x2, #0x0                   	// #0
   2f60c:	mov	x1, #0x1                   	// #1
   2f610:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   2f614:	mov	w19, w0
   2f618:	b	2f34c <mpfr_cos@@Base+0x67c>
   2f61c:	ldr	w1, [sp, #116]
   2f620:	lsl	x20, x20, #1
   2f624:	add	x0, x20, #0x1
   2f628:	ldr	x4, [sp, #320]
   2f62c:	cbz	w1, 2f238 <mpfr_cos@@Base+0x568>
   2f630:	mov	x20, #0x4                   	// #4
   2f634:	csel	x20, x20, x5, eq  // eq = none
   2f638:	b	2f5a4 <mpfr_cos@@Base+0x8d4>
   2f63c:	ldr	x19, [sp, #144]
   2f640:	b	2ee00 <mpfr_cos@@Base+0x130>
   2f644:	ldr	w0, [x22]
   2f648:	ldr	w2, [sp, #188]
   2f64c:	ldr	x1, [sp, #120]
   2f650:	orr	w0, w2, w0
   2f654:	ldp	x2, x3, [sp, #200]
   2f658:	str	x3, [x20]
   2f65c:	ldr	x1, [x1, #16]
   2f660:	str	x2, [x21]
   2f664:	str	w0, [x22]
   2f668:	cmp	x3, x1
   2f66c:	ccmp	x2, x1, #0x0, ge  // ge = tcont
   2f670:	b.le	2f6f0 <mpfr_cos@@Base+0xa20>
   2f674:	ldr	w2, [sp, #184]
   2f678:	mov	w1, w19
   2f67c:	ldr	x0, [sp, #120]
   2f680:	bl	cb30 <mpfr_check_range@plt>
   2f684:	mov	w19, w0
   2f688:	ldp	x21, x22, [sp, #32]
   2f68c:	ldp	x23, x24, [sp, #48]
   2f690:	b	2f34c <mpfr_cos@@Base+0x67c>
   2f694:	cmp	x28, x20
   2f698:	b.le	2f5c0 <mpfr_cos@@Base+0x8f0>
   2f69c:	sub	x20, x28, x20
   2f6a0:	cmp	x24, x20
   2f6a4:	b.gt	2f5c0 <mpfr_cos@@Base+0x8f0>
   2f6a8:	mov	x0, x21
   2f6ac:	bl	c460 <mpfr_nexttozero@plt>
   2f6b0:	b	2f298 <mpfr_cos@@Base+0x5c8>
   2f6b4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2f6b8:	ldr	x2, [x0, #2576]
   2f6bc:	add	x0, x0, #0xa10
   2f6c0:	blr	x2
   2f6c4:	mrs	x1, tpidr_el0
   2f6c8:	ldr	x2, [sp, #120]
   2f6cc:	add	x0, x1, x0
   2f6d0:	mov	x1, #0x2                   	// #2
   2f6d4:	mov	w19, #0x0                   	// #0
   2f6d8:	movk	x1, #0x8000, lsl #48
   2f6dc:	str	x1, [x2, #16]
   2f6e0:	ldr	w1, [x0]
   2f6e4:	orr	w1, w1, #0x4
   2f6e8:	str	w1, [x0]
   2f6ec:	b	2f34c <mpfr_cos@@Base+0x67c>
   2f6f0:	orr	w0, w0, #0x8
   2f6f4:	ldp	x23, x24, [sp, #48]
   2f6f8:	str	w0, [x22]
   2f6fc:	ldp	x21, x22, [sp, #32]
   2f700:	b	2f34c <mpfr_cos@@Base+0x67c>
   2f704:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2f708:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2f70c:	add	x2, x2, #0xa58
   2f710:	add	x0, x0, #0xa50
   2f714:	mov	w1, #0xb9                  	// #185
   2f718:	bl	cb40 <mpfr_assert_fail@plt>
   2f71c:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2f720:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2f724:	add	x2, x2, #0xa40
   2f728:	add	x0, x0, #0xa50
   2f72c:	mov	w1, #0xb1                  	// #177
   2f730:	bl	cb40 <mpfr_assert_fail@plt>
   2f734:	bl	c8e0 <mpfr_abort_prec_max@plt>

000000000002f738 <mpfr_sin@@Base>:
   2f738:	stp	x29, x30, [sp, #-208]!
   2f73c:	mov	x29, sp
   2f740:	stp	x21, x22, [sp, #32]
   2f744:	mov	x22, x1
   2f748:	ldr	x21, [x1, #16]
   2f74c:	stp	x19, x20, [sp, #16]
   2f750:	stp	x25, x26, [sp, #64]
   2f754:	mov	x26, x0
   2f758:	str	w2, [sp, #120]
   2f75c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   2f760:	cmp	x21, x2
   2f764:	b.le	2fc48 <mpfr_sin@@Base+0x510>
   2f768:	ldr	x2, [x0]
   2f76c:	str	x2, [sp, #112]
   2f770:	neg	x20, x21, lsl #1
   2f774:	cmp	x20, #0x0
   2f778:	mov	x3, x2
   2f77c:	b.le	2f790 <mpfr_sin@@Base+0x58>
   2f780:	add	x2, x20, #0x2
   2f784:	add	x3, x3, #0x1
   2f788:	cmp	x3, x2
   2f78c:	b.cc	2fc24 <mpfr_sin@@Base+0x4ec>  // b.lo, b.ul, b.last
   2f790:	stp	x23, x24, [sp, #48]
   2f794:	mrs	x23, tpidr_el0
   2f798:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2f79c:	ldr	x1, [x0, #2576]
   2f7a0:	add	x0, x0, #0xa10
   2f7a4:	blr	x1
   2f7a8:	add	x4, x23, x0
   2f7ac:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   2f7b0:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2f7b4:	ldr	w0, [x23, x0]
   2f7b8:	str	w0, [sp, #124]
   2f7bc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2f7c0:	ldr	x2, [x0, #2512]
   2f7c4:	add	x0, x0, #0x9d0
   2f7c8:	blr	x2
   2f7cc:	add	x25, x23, x0
   2f7d0:	ldr	x0, [x23, x0]
   2f7d4:	str	x0, [sp, #128]
   2f7d8:	str	x3, [x25]
   2f7dc:	mov	x2, #0x752f                	// #29999
   2f7e0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2f7e4:	ldr	x5, [x0, #2544]
   2f7e8:	add	x0, x0, #0x9f0
   2f7ec:	blr	x5
   2f7f0:	add	x24, x23, x0
   2f7f4:	ldr	x0, [x23, x0]
   2f7f8:	str	x0, [sp, #136]
   2f7fc:	ldr	x0, [sp, #112]
   2f800:	str	x1, [x24]
   2f804:	cmp	x0, x2
   2f808:	b.gt	2fb98 <mpfr_sin@@Base+0x460>
   2f80c:	ldr	x0, [sp, #112]
   2f810:	stp	x27, x28, [sp, #80]
   2f814:	cmp	x0, #0x1
   2f818:	b.eq	2fc70 <mpfr_sin@@Base+0x538>  // b.none
   2f81c:	b.le	2fcb0 <mpfr_sin@@Base+0x578>
   2f820:	ldr	x1, [sp, #112]
   2f824:	mov	w5, #0x40                  	// #64
   2f828:	sub	x0, x1, #0x1
   2f82c:	clz	x0, x0
   2f830:	sub	w5, w5, w0
   2f834:	add	x5, x1, w5, sxtw
   2f838:	add	x28, x5, #0x7
   2f83c:	tbz	x21, #63, 2f858 <mpfr_sin@@Base+0x120>
   2f840:	mov	x0, #0xfffffffffffffeff    	// #-257
   2f844:	movk	x0, #0x7fff, lsl #48
   2f848:	sub	x0, x0, x28
   2f84c:	cmp	x0, x20
   2f850:	add	x28, x28, x20
   2f854:	b.lt	2fcc8 <mpfr_sin@@Base+0x590>  // b.tstop
   2f858:	add	x27, sp, #0x90
   2f85c:	add	x20, sp, #0xb0
   2f860:	mov	x0, x27
   2f864:	mov	x24, #0xfffffffffffffeff    	// #-257
   2f868:	bl	bbd0 <mpfr_init@plt>
   2f86c:	mov	x19, #0x40                  	// #64
   2f870:	mov	x0, x20
   2f874:	movk	x24, #0x7fff, lsl #48
   2f878:	bl	bbd0 <mpfr_init@plt>
   2f87c:	b	2f9c4 <mpfr_sin@@Base+0x28c>
   2f880:	bl	bb70 <mpfr_sub@plt>
   2f884:	ldr	x1, [sp, #192]
   2f888:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   2f88c:	cmp	x1, x2
   2f890:	b.eq	2f9ac <mpfr_sin@@Base+0x274>  // b.none
   2f894:	mov	x0, #0x3                   	// #3
   2f898:	sub	x0, x0, x28
   2f89c:	cmp	x1, x0
   2f8a0:	b.lt	2f9ac <mpfr_sin@@Base+0x274>  // b.tstop
   2f8a4:	ldr	x1, [sp, #160]
   2f8a8:	cmp	x0, x1
   2f8ac:	ccmp	x1, x2, #0x4, le
   2f8b0:	b.eq	2f9ac <mpfr_sin@@Base+0x274>  // b.none
   2f8b4:	mov	x2, x20
   2f8b8:	mov	w0, #0x1                   	// #1
   2f8bc:	str	w0, [sp, #108]
   2f8c0:	ldr	w25, [x2, #8]
   2f8c4:	mov	x1, x28
   2f8c8:	mov	x0, x27
   2f8cc:	str	x2, [sp, #96]
   2f8d0:	bl	bed0 <mpfr_set_prec@plt>
   2f8d4:	ldr	x2, [sp, #96]
   2f8d8:	mov	x0, x27
   2f8dc:	mov	x1, x2
   2f8e0:	mov	w2, #0x4                   	// #4
   2f8e4:	bl	c430 <mpfr_cos@plt>
   2f8e8:	mov	x2, x27
   2f8ec:	mov	x1, x27
   2f8f0:	mov	w3, #0x2                   	// #2
   2f8f4:	mov	x0, x27
   2f8f8:	bl	bd50 <mpfr_mul@plt>
   2f8fc:	mov	w3, #0x1                   	// #1
   2f900:	mov	x2, x27
   2f904:	mov	x1, #0x1                   	// #1
   2f908:	mov	x0, x27
   2f90c:	bl	ca50 <mpfr_ui_sub@plt>
   2f910:	mov	x1, x27
   2f914:	mov	x0, x27
   2f918:	mov	w2, #0x1                   	// #1
   2f91c:	bl	c930 <mpfr_sqrt@plt>
   2f920:	tbz	w25, #31, 2f930 <mpfr_sin@@Base+0x1f8>
   2f924:	ldr	w0, [sp, #152]
   2f928:	neg	w0, w0
   2f92c:	str	w0, [sp, #152]
   2f930:	ldr	x0, [sp, #160]
   2f934:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   2f938:	cmp	x0, x1
   2f93c:	b.eq	2fab0 <mpfr_sin@@Base+0x378>  // b.none
   2f940:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   2f944:	cmp	x0, x1
   2f948:	ldr	w1, [sp, #108]
   2f94c:	add	x2, x28, x0, lsl #1
   2f950:	sub	x2, x2, #0x3
   2f954:	sub	x25, x2, w1, sxtw
   2f958:	b.le	2f990 <mpfr_sin@@Base+0x258>
   2f95c:	ldr	w0, [sp, #120]
   2f960:	ldr	x1, [sp, #144]
   2f964:	cmp	w0, #0x0
   2f968:	ldr	x0, [sp, #168]
   2f96c:	sub	x1, x1, #0x1
   2f970:	ldr	x2, [sp, #112]
   2f974:	asr	x1, x1, #6
   2f978:	add	x1, x1, #0x1
   2f97c:	cinc	x3, x2, eq  // eq = none
   2f980:	mov	x2, x25
   2f984:	bl	c370 <mpfr_round_p@plt>
   2f988:	cbnz	w0, 2fac4 <mpfr_sin@@Base+0x38c>
   2f98c:	ldr	x0, [sp, #160]
   2f990:	ldr	x2, [x26]
   2f994:	subs	x1, x2, x25
   2f998:	add	x1, x28, x1
   2f99c:	csel	x28, x1, x28, gt
   2f9a0:	cmp	x0, #0x1
   2f9a4:	lsl	x0, x28, #1
   2f9a8:	csel	x28, x0, x28, eq  // eq = none
   2f9ac:	sub	x0, x24, x28
   2f9b0:	cmp	x0, x19
   2f9b4:	b.lt	2fa80 <mpfr_sin@@Base+0x348>  // b.tstop
   2f9b8:	add	x28, x28, x19
   2f9bc:	add	x19, x28, x28, lsr #63
   2f9c0:	asr	x19, x19, #1
   2f9c4:	cmp	x21, #0x1
   2f9c8:	b.le	2fa74 <mpfr_sin@@Base+0x33c>
   2f9cc:	add	x1, x21, x28
   2f9d0:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2f9d4:	cmp	x1, x0
   2f9d8:	b.gt	2fa98 <mpfr_sin@@Base+0x360>
   2f9dc:	sub	x1, x1, #0x1
   2f9e0:	mov	x0, x27
   2f9e4:	bl	bed0 <mpfr_set_prec@plt>
   2f9e8:	mov	x1, x28
   2f9ec:	mov	x0, x20
   2f9f0:	bl	bed0 <mpfr_set_prec@plt>
   2f9f4:	mov	w2, #0x0                   	// #0
   2f9f8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2f9fc:	ldr	x1, [x0, #2624]
   2fa00:	add	x0, x0, #0xa40
   2fa04:	blr	x1
   2fa08:	add	x1, x23, x0
   2fa0c:	mov	x0, x27
   2fa10:	bl	c380 <mpfr_cache@plt>
   2fa14:	mov	x1, x27
   2fa18:	mov	w3, #0x0                   	// #0
   2fa1c:	mov	x2, #0x1                   	// #1
   2fa20:	mov	x0, x27
   2fa24:	bl	c2c0 <mpfr_mul_2ui@plt>
   2fa28:	mov	x2, x27
   2fa2c:	mov	x1, x22
   2fa30:	mov	w3, #0x0                   	// #0
   2fa34:	mov	x0, x20
   2fa38:	bl	cd10 <mpfr_remainder@plt>
   2fa3c:	mov	x1, x27
   2fa40:	mov	w3, #0x0                   	// #0
   2fa44:	mov	x2, #0x1                   	// #1
   2fa48:	mov	x0, x27
   2fa4c:	bl	c8f0 <mpfr_div_2ui@plt>
   2fa50:	ldr	w0, [sp, #184]
   2fa54:	mov	x2, x20
   2fa58:	mov	x1, x27
   2fa5c:	mov	w3, #0x1                   	// #1
   2fa60:	cmp	w0, #0x0
   2fa64:	mov	x0, x27
   2fa68:	b.gt	2f880 <mpfr_sin@@Base+0x148>
   2fa6c:	bl	c1a0 <mpfr_add@plt>
   2fa70:	b	2f884 <mpfr_sin@@Base+0x14c>
   2fa74:	mov	x2, x22
   2fa78:	str	wzr, [sp, #108]
   2fa7c:	b	2f8c0 <mpfr_sin@@Base+0x188>
   2fa80:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2fa84:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2fa88:	add	x2, x2, #0xab0
   2fa8c:	add	x0, x0, #0xaf8
   2fa90:	mov	w1, #0xb9                  	// #185
   2fa94:	bl	cb40 <mpfr_assert_fail@plt>
   2fa98:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2fa9c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2faa0:	add	x2, x2, #0xa58
   2faa4:	add	x0, x0, #0xaf8
   2faa8:	mov	w1, #0x74                  	// #116
   2faac:	bl	cb40 <mpfr_assert_fail@plt>
   2fab0:	ldr	x0, [x22]
   2fab4:	cmp	x0, x28
   2fab8:	csel	x5, x0, x28, ge  // ge = tcont
   2fabc:	lsl	x28, x5, #1
   2fac0:	b	2f9ac <mpfr_sin@@Base+0x274>
   2fac4:	ldr	w2, [sp, #120]
   2fac8:	mov	x1, x27
   2facc:	ldr	w3, [sp, #152]
   2fad0:	mov	x0, x26
   2fad4:	bl	c6a0 <mpfr_set4@plt>
   2fad8:	mov	w19, w0
   2fadc:	mov	x0, x27
   2fae0:	bl	c070 <mpfr_clear@plt>
   2fae4:	mov	x0, x20
   2fae8:	bl	c070 <mpfr_clear@plt>
   2faec:	ldp	x27, x28, [sp, #80]
   2faf0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2faf4:	ldr	x1, [x0, #2576]
   2faf8:	add	x0, x0, #0xa10
   2fafc:	blr	x1
   2fb00:	ldr	w1, [sp, #124]
   2fb04:	str	w1, [x23, x0]
   2fb08:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2fb0c:	ldr	x2, [x0, #2512]
   2fb10:	add	x0, x0, #0x9d0
   2fb14:	blr	x2
   2fb18:	ldr	x2, [sp, #128]
   2fb1c:	str	x2, [x23, x0]
   2fb20:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2fb24:	ldr	x3, [x0, #2544]
   2fb28:	add	x0, x0, #0x9f0
   2fb2c:	blr	x3
   2fb30:	ldr	x1, [x26, #16]
   2fb34:	ldr	x3, [sp, #136]
   2fb38:	str	x3, [x23, x0]
   2fb3c:	cmp	x3, x1
   2fb40:	ccmp	x2, x1, #0x0, ge  // ge = tcont
   2fb44:	b.le	2fb78 <mpfr_sin@@Base+0x440>
   2fb48:	ldr	w2, [sp, #120]
   2fb4c:	mov	w1, w19
   2fb50:	mov	x0, x26
   2fb54:	bl	cb30 <mpfr_check_range@plt>
   2fb58:	mov	w19, w0
   2fb5c:	ldp	x23, x24, [sp, #48]
   2fb60:	mov	w0, w19
   2fb64:	ldp	x19, x20, [sp, #16]
   2fb68:	ldp	x21, x22, [sp, #32]
   2fb6c:	ldp	x25, x26, [sp, #64]
   2fb70:	ldp	x29, x30, [sp], #208
   2fb74:	ret
   2fb78:	cbnz	w19, 2fbec <mpfr_sin@@Base+0x4b4>
   2fb7c:	mov	w0, w19
   2fb80:	ldp	x19, x20, [sp, #16]
   2fb84:	ldp	x21, x22, [sp, #32]
   2fb88:	ldp	x23, x24, [sp, #48]
   2fb8c:	ldp	x25, x26, [sp, #64]
   2fb90:	ldp	x29, x30, [sp], #208
   2fb94:	ret
   2fb98:	ldr	w3, [sp, #120]
   2fb9c:	mov	x2, x22
   2fba0:	mov	x0, x26
   2fba4:	mov	x1, #0x0                   	// #0
   2fba8:	str	x4, [sp, #96]
   2fbac:	bl	c020 <mpfr_sincos_fast@plt>
   2fbb0:	and	w19, w0, #0x3
   2fbb4:	cmp	w19, #0x2
   2fbb8:	ldr	x4, [sp, #96]
   2fbbc:	b.ne	2faf0 <mpfr_sin@@Base+0x3b8>  // b.any
   2fbc0:	ldr	w1, [sp, #124]
   2fbc4:	mov	w19, #0xffffffff            	// #-1
   2fbc8:	ldr	x0, [x26, #16]
   2fbcc:	str	w1, [x4]
   2fbd0:	ldr	x2, [sp, #136]
   2fbd4:	str	x2, [x24]
   2fbd8:	ldr	x1, [sp, #128]
   2fbdc:	str	x1, [x25]
   2fbe0:	cmp	x2, x0
   2fbe4:	ccmp	x1, x0, #0x0, ge  // ge = tcont
   2fbe8:	b.gt	2fb48 <mpfr_sin@@Base+0x410>
   2fbec:	ldr	w0, [sp, #124]
   2fbf0:	ldp	x21, x22, [sp, #32]
   2fbf4:	orr	w1, w0, #0x8
   2fbf8:	ldp	x25, x26, [sp, #64]
   2fbfc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2fc00:	ldr	x2, [x0, #2576]
   2fc04:	add	x0, x0, #0xa10
   2fc08:	blr	x2
   2fc0c:	str	w1, [x23, x0]
   2fc10:	mov	w0, w19
   2fc14:	ldp	x19, x20, [sp, #16]
   2fc18:	ldp	x23, x24, [sp, #48]
   2fc1c:	ldp	x29, x30, [sp], #208
   2fc20:	ret
   2fc24:	ldr	w4, [sp, #120]
   2fc28:	mov	w3, #0x0                   	// #0
   2fc2c:	bl	c540 <mpfr_round_near_x@plt>
   2fc30:	mov	w19, w0
   2fc34:	cbnz	w0, 2fb60 <mpfr_sin@@Base+0x428>
   2fc38:	ldr	x0, [x26]
   2fc3c:	stp	x23, x24, [sp, #48]
   2fc40:	str	x0, [sp, #112]
   2fc44:	b	2f794 <mpfr_sin@@Base+0x5c>
   2fc48:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   2fc4c:	add	x21, x21, x0
   2fc50:	cmp	x21, #0x1
   2fc54:	b.ls	2fc78 <mpfr_sin@@Base+0x540>  // b.plast
   2fc58:	ldr	w1, [x1, #8]
   2fc5c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2fc60:	mov	w19, #0x0                   	// #0
   2fc64:	str	w1, [x26, #8]
   2fc68:	str	x0, [x26, #16]
   2fc6c:	b	2fb60 <mpfr_sin@@Base+0x428>
   2fc70:	ldr	x5, [sp, #112]
   2fc74:	b	2f838 <mpfr_sin@@Base+0x100>
   2fc78:	mrs	x1, tpidr_el0
   2fc7c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2fc80:	ldr	x2, [x0, #2576]
   2fc84:	add	x0, x0, #0xa10
   2fc88:	blr	x2
   2fc8c:	add	x0, x1, x0
   2fc90:	mov	x1, #0x2                   	// #2
   2fc94:	movk	x1, #0x8000, lsl #48
   2fc98:	str	x1, [x26, #16]
   2fc9c:	mov	w19, #0x0                   	// #0
   2fca0:	ldr	w1, [x0]
   2fca4:	orr	w1, w1, #0x4
   2fca8:	str	w1, [x0]
   2fcac:	b	2fb60 <mpfr_sin@@Base+0x428>
   2fcb0:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2fcb4:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2fcb8:	add	x2, x2, #0xa40
   2fcbc:	add	x0, x0, #0xaf8
   2fcc0:	mov	w1, #0x55                  	// #85
   2fcc4:	bl	cb40 <mpfr_assert_fail@plt>
   2fcc8:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2fccc:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   2fcd0:	add	x2, x2, #0xb00
   2fcd4:	add	x0, x0, #0xaf8
   2fcd8:	mov	w1, #0x60                  	// #96
   2fcdc:	bl	cb40 <mpfr_assert_fail@plt>

000000000002fce0 <mpfr_tan@@Base>:
   2fce0:	stp	x29, x30, [sp, #-336]!
   2fce4:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   2fce8:	mov	x29, sp
   2fcec:	stp	x19, x20, [sp, #16]
   2fcf0:	mov	w20, w2
   2fcf4:	ldr	x2, [x1, #16]
   2fcf8:	stp	x21, x22, [sp, #32]
   2fcfc:	mov	x22, x1
   2fd00:	stp	x27, x28, [sp, #80]
   2fd04:	cmp	x2, x3
   2fd08:	mov	x27, x0
   2fd0c:	b.le	2ff80 <mpfr_tan@@Base+0x2a0>
   2fd10:	neg	x2, x2, lsl #1
   2fd14:	cmp	x2, #0x0
   2fd18:	ldr	x21, [x0]
   2fd1c:	b.le	2fd30 <mpfr_tan@@Base+0x50>
   2fd20:	add	x2, x2, #0x1
   2fd24:	add	x3, x21, #0x1
   2fd28:	cmp	x3, x2
   2fd2c:	b.cc	2ff5c <mpfr_tan@@Base+0x27c>  // b.lo, b.ul, b.last
   2fd30:	stp	x23, x24, [sp, #48]
   2fd34:	stp	x25, x26, [sp, #64]
   2fd38:	mrs	x24, tpidr_el0
   2fd3c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2fd40:	ldr	x1, [x0, #2576]
   2fd44:	add	x0, x0, #0xa10
   2fd48:	blr	x1
   2fd4c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   2fd50:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   2fd54:	ldr	w0, [x24, x0]
   2fd58:	str	w0, [sp, #108]
   2fd5c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2fd60:	ldr	x2, [x0, #2512]
   2fd64:	add	x0, x0, #0x9d0
   2fd68:	blr	x2
   2fd6c:	add	x2, x24, x0
   2fd70:	ldr	x0, [x24, x0]
   2fd74:	str	x0, [sp, #112]
   2fd78:	str	x3, [x2]
   2fd7c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2fd80:	ldr	x4, [x0, #2544]
   2fd84:	add	x0, x0, #0x9f0
   2fd88:	blr	x4
   2fd8c:	ldr	x23, [x24, x0]
   2fd90:	str	x1, [x24, x0]
   2fd94:	cmp	x21, #0x1
   2fd98:	b.eq	30028 <mpfr_tan@@Base+0x348>  // b.none
   2fd9c:	b.le	30098 <mpfr_tan@@Base+0x3b8>
   2fda0:	sub	x19, x21, #0x1
   2fda4:	mov	w2, #0x40                  	// #64
   2fda8:	clz	x19, x19
   2fdac:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2fdb0:	sub	w19, w2, w19
   2fdb4:	add	x19, x21, w19, sxtw
   2fdb8:	add	x26, x19, #0xd
   2fdbc:	cmp	x26, x0
   2fdc0:	b.ge	30094 <mpfr_tan@@Base+0x3b4>  // b.tcont
   2fdc4:	add	x19, x19, #0xc
   2fdc8:	asr	x19, x19, #6
   2fdcc:	add	x19, x19, #0x1
   2fdd0:	lsl	x0, x19, #1
   2fdd4:	cmp	x0, #0x10
   2fdd8:	b.gt	2ff48 <mpfr_tan@@Base+0x268>
   2fddc:	add	x1, sp, #0xd0
   2fde0:	stp	xzr, x1, [sp, #192]
   2fde4:	mov	x0, x1
   2fde8:	add	x28, sp, #0xa0
   2fdec:	add	x25, sp, #0x80
   2fdf0:	mov	w1, #0x1                   	// #1
   2fdf4:	add	x19, x0, x19, lsl #3
   2fdf8:	mov	x2, #0x40                  	// #64
   2fdfc:	stp	x2, x26, [sp, #120]
   2fe00:	str	w1, [sp, #136]
   2fe04:	stp	x0, x26, [sp, #152]
   2fe08:	str	w1, [sp, #168]
   2fe0c:	str	x19, [sp, #184]
   2fe10:	mov	x2, x22
   2fe14:	mov	x1, x28
   2fe18:	mov	w3, #0x0                   	// #0
   2fe1c:	mov	x0, x25
   2fe20:	bl	cc40 <mpfr_sin_cos@plt>
   2fe24:	mov	x2, x28
   2fe28:	mov	x1, x25
   2fe2c:	mov	w3, #0x0                   	// #0
   2fe30:	mov	x0, x28
   2fe34:	bl	c620 <mpfr_div@plt>
   2fe38:	ldr	x1, [sp, #160]
   2fe3c:	cmp	w20, #0x0
   2fe40:	ldr	x0, [sp, #184]
   2fe44:	sub	x1, x1, #0x1
   2fe48:	cinc	x3, x21, eq  // eq = none
   2fe4c:	sub	x2, x26, #0x2
   2fe50:	asr	x1, x1, #6
   2fe54:	add	x1, x1, #0x1
   2fe58:	bl	c370 <mpfr_round_p@plt>
   2fe5c:	cbz	w0, 2ffa8 <mpfr_tan@@Base+0x2c8>
   2fe60:	ldr	w3, [sp, #168]
   2fe64:	mov	x1, x28
   2fe68:	mov	w2, w20
   2fe6c:	mov	x0, x27
   2fe70:	bl	c6a0 <mpfr_set4@plt>
   2fe74:	mov	w19, w0
   2fe78:	ldr	x1, [sp, #192]
   2fe7c:	cbnz	x1, 2ff3c <mpfr_tan@@Base+0x25c>
   2fe80:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2fe84:	ldr	x1, [x0, #2576]
   2fe88:	add	x0, x0, #0xa10
   2fe8c:	blr	x1
   2fe90:	add	x2, x24, x0
   2fe94:	ldr	w1, [sp, #108]
   2fe98:	str	w1, [x24, x0]
   2fe9c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2fea0:	ldr	x3, [x0, #2512]
   2fea4:	add	x0, x0, #0x9d0
   2fea8:	blr	x3
   2feac:	ldr	x1, [x27, #16]
   2feb0:	ldr	x3, [sp, #112]
   2feb4:	str	x3, [x24, x0]
   2feb8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   2febc:	ldr	x4, [x0, #2544]
   2fec0:	add	x0, x0, #0x9f0
   2fec4:	blr	x4
   2fec8:	str	x23, [x24, x0]
   2fecc:	cmp	x23, x1
   2fed0:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   2fed4:	b.le	2ff0c <mpfr_tan@@Base+0x22c>
   2fed8:	mov	w1, w19
   2fedc:	mov	w2, w20
   2fee0:	mov	x0, x27
   2fee4:	bl	cb30 <mpfr_check_range@plt>
   2fee8:	ldp	x23, x24, [sp, #48]
   2feec:	mov	w19, w0
   2fef0:	ldp	x25, x26, [sp, #64]
   2fef4:	mov	w0, w19
   2fef8:	ldp	x19, x20, [sp, #16]
   2fefc:	ldp	x21, x22, [sp, #32]
   2ff00:	ldp	x27, x28, [sp, #80]
   2ff04:	ldp	x29, x30, [sp], #336
   2ff08:	ret
   2ff0c:	cbz	w19, 2ff1c <mpfr_tan@@Base+0x23c>
   2ff10:	ldr	w0, [sp, #108]
   2ff14:	orr	w21, w0, #0x8
   2ff18:	str	w21, [x2]
   2ff1c:	mov	w0, w19
   2ff20:	ldp	x19, x20, [sp, #16]
   2ff24:	ldp	x21, x22, [sp, #32]
   2ff28:	ldp	x23, x24, [sp, #48]
   2ff2c:	ldp	x25, x26, [sp, #64]
   2ff30:	ldp	x27, x28, [sp, #80]
   2ff34:	ldp	x29, x30, [sp], #336
   2ff38:	ret
   2ff3c:	ldr	x0, [sp, #200]
   2ff40:	bl	cc20 <mpfr_free_func@plt>
   2ff44:	b	2fe80 <mpfr_tan@@Base+0x1a0>
   2ff48:	lsl	x0, x19, #4
   2ff4c:	str	x0, [sp, #192]
   2ff50:	bl	ccf0 <mpfr_allocate_func@plt>
   2ff54:	str	x0, [sp, #200]
   2ff58:	b	2fde8 <mpfr_tan@@Base+0x108>
   2ff5c:	mov	w4, w20
   2ff60:	mov	w3, #0x1                   	// #1
   2ff64:	bl	c540 <mpfr_round_near_x@plt>
   2ff68:	mov	w19, w0
   2ff6c:	cbnz	w0, 2fef4 <mpfr_tan@@Base+0x214>
   2ff70:	stp	x23, x24, [sp, #48]
   2ff74:	stp	x25, x26, [sp, #64]
   2ff78:	ldr	x21, [x27]
   2ff7c:	b	2fd38 <mpfr_tan@@Base+0x58>
   2ff80:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   2ff84:	add	x2, x2, x0
   2ff88:	cmp	x2, #0x1
   2ff8c:	b.ls	30044 <mpfr_tan@@Base+0x364>  // b.plast
   2ff90:	ldr	w1, [x1, #8]
   2ff94:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   2ff98:	mov	w19, #0x0                   	// #0
   2ff9c:	str	w1, [x27, #8]
   2ffa0:	str	x0, [x27, #16]
   2ffa4:	b	2fef4 <mpfr_tan@@Base+0x214>
   2ffa8:	ldr	x1, [sp, #120]
   2ffac:	mov	x0, #0xfffffffffffffeff    	// #-257
   2ffb0:	movk	x0, #0x7fff, lsl #48
   2ffb4:	sub	x0, x0, x26
   2ffb8:	cmp	x0, x1
   2ffbc:	b.lt	3007c <mpfr_tan@@Base+0x39c>  // b.tstop
   2ffc0:	ldr	x0, [sp, #120]
   2ffc4:	ldr	x1, [sp, #192]
   2ffc8:	add	x26, x26, x0
   2ffcc:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   2ffd0:	cmp	x26, x0
   2ffd4:	add	x0, x26, x26, lsr #63
   2ffd8:	asr	x0, x0, #1
   2ffdc:	str	x0, [sp, #120]
   2ffe0:	b.ge	30094 <mpfr_tan@@Base+0x3b4>  // b.tcont
   2ffe4:	sub	x19, x26, #0x1
   2ffe8:	asr	x19, x19, #6
   2ffec:	add	x19, x19, #0x1
   2fff0:	lsl	x2, x19, #4
   2fff4:	str	x2, [sp, #192]
   2fff8:	cbz	x1, 30034 <mpfr_tan@@Base+0x354>
   2fffc:	ldr	x0, [sp, #200]
   30000:	bl	c1c0 <mpfr_reallocate_func@plt>
   30004:	str	x0, [sp, #200]
   30008:	mov	w1, #0x1                   	// #1
   3000c:	add	x19, x0, x19, lsl #3
   30010:	str	x26, [sp, #128]
   30014:	str	w1, [sp, #136]
   30018:	stp	x0, x26, [sp, #152]
   3001c:	str	w1, [sp, #168]
   30020:	str	x19, [sp, #184]
   30024:	b	2fe10 <mpfr_tan@@Base+0x130>
   30028:	mov	x19, x21
   3002c:	mov	x26, #0xe                   	// #14
   30030:	b	2fddc <mpfr_tan@@Base+0xfc>
   30034:	mov	x0, x2
   30038:	bl	ccf0 <mpfr_allocate_func@plt>
   3003c:	str	x0, [sp, #200]
   30040:	b	30008 <mpfr_tan@@Base+0x328>
   30044:	mrs	x1, tpidr_el0
   30048:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3004c:	ldr	x2, [x0, #2576]
   30050:	add	x0, x0, #0xa10
   30054:	blr	x2
   30058:	add	x0, x1, x0
   3005c:	mov	x1, #0x2                   	// #2
   30060:	movk	x1, #0x8000, lsl #48
   30064:	str	x1, [x27, #16]
   30068:	mov	w19, #0x0                   	// #0
   3006c:	ldr	w1, [x0]
   30070:	orr	w1, w1, #0x4
   30074:	str	w1, [x0]
   30078:	b	2fef4 <mpfr_tan@@Base+0x214>
   3007c:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   30080:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   30084:	add	x2, x2, #0xab0
   30088:	add	x0, x0, #0xb40
   3008c:	mov	w1, #0x50                  	// #80
   30090:	bl	cb40 <mpfr_assert_fail@plt>
   30094:	bl	c8e0 <mpfr_abort_prec_max@plt>
   30098:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   3009c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   300a0:	add	x2, x2, #0xa40
   300a4:	add	x0, x0, #0xb40
   300a8:	mov	w1, #0x42                  	// #66
   300ac:	bl	cb40 <mpfr_assert_fail@plt>

00000000000300b0 <mpfr_fma@@Base>:
   300b0:	stp	x29, x30, [sp, #-352]!
   300b4:	mov	x29, sp
   300b8:	stp	x23, x24, [sp, #48]
   300bc:	mov	w23, w4
   300c0:	ldr	x24, [x1, #16]
   300c4:	stp	x19, x20, [sp, #16]
   300c8:	mov	x20, x1
   300cc:	stp	x21, x22, [sp, #32]
   300d0:	mov	x22, x0
   300d4:	mov	x21, x2
   300d8:	stp	x25, x26, [sp, #64]
   300dc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   300e0:	cmp	x24, x0
   300e4:	stp	x27, x28, [sp, #80]
   300e8:	mov	x28, x3
   300ec:	b.le	30454 <mpfr_fma@@Base+0x3a4>
   300f0:	ldr	x2, [x2, #16]
   300f4:	cmp	x2, x0
   300f8:	b.le	30468 <mpfr_fma@@Base+0x3b8>
   300fc:	ldr	x3, [x3, #16]
   30100:	cmp	x3, x0
   30104:	b.le	3050c <mpfr_fma@@Base+0x45c>
   30108:	add	x0, x24, x2
   3010c:	str	x0, [x29, #96]
   30110:	ldr	x1, [x1]
   30114:	ldr	x2, [x21]
   30118:	cmp	x1, x2
   3011c:	b.eq	30290 <mpfr_fma@@Base+0x1e0>  // b.none
   30120:	add	x26, x1, x2
   30124:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   30128:	cmp	x26, x0
   3012c:	b.ge	3082c <mpfr_fma@@Base+0x77c>  // b.tcont
   30130:	sub	x0, x26, #0x1
   30134:	asr	x0, x0, #6
   30138:	add	x0, x0, #0x1
   3013c:	cmp	x0, #0x10
   30140:	b.gt	303a0 <mpfr_fma@@Base+0x2f0>
   30144:	add	x1, x29, #0xe0
   30148:	stp	xzr, x1, [x29, #208]
   3014c:	mov	x4, x1
   30150:	mrs	x19, tpidr_el0
   30154:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   30158:	ldr	x1, [x0, #2576]
   3015c:	add	x0, x0, #0xa10
   30160:	blr	x1
   30164:	mov	x6, #0x3fffffffffffffff    	// #4611686018427387903
   30168:	mov	x7, #0xc000000000000001    	// #-4611686018427387903
   3016c:	mov	w8, #0x1                   	// #1
   30170:	add	x24, x29, #0x80
   30174:	ldr	w27, [x19, x0]
   30178:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3017c:	ldr	x1, [x0, #2512]
   30180:	add	x0, x0, #0x9d0
   30184:	blr	x1
   30188:	add	x5, x19, x0
   3018c:	mov	x2, x21
   30190:	ldr	x25, [x19, x0]
   30194:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   30198:	ldr	x1, [x0, #2544]
   3019c:	add	x0, x0, #0x9f0
   301a0:	blr	x1
   301a4:	mov	x1, x20
   301a8:	mov	w3, #0x0                   	// #0
   301ac:	str	x7, [x5]
   301b0:	str	x5, [x29, #104]
   301b4:	str	x26, [x29, #128]
   301b8:	str	w8, [x29, #136]
   301bc:	str	x4, [x29, #152]
   301c0:	ldr	x26, [x19, x0]
   301c4:	str	x6, [x19, x0]
   301c8:	mov	x0, x24
   301cc:	bl	bd50 <mpfr_mul@plt>
   301d0:	ldr	x5, [x29, #104]
   301d4:	cbnz	w0, 30564 <mpfr_fma@@Base+0x4b4>
   301d8:	mov	x1, x24
   301dc:	mov	x2, x28
   301e0:	mov	w3, w23
   301e4:	mov	x0, x22
   301e8:	bl	c1a0 <mpfr_add@plt>
   301ec:	mov	w20, w0
   301f0:	ldr	x1, [x29, #208]
   301f4:	cbz	x1, 30200 <mpfr_fma@@Base+0x150>
   301f8:	ldr	x0, [x29, #216]
   301fc:	bl	cc20 <mpfr_free_func@plt>
   30200:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   30204:	ldr	x1, [x0, #2576]
   30208:	add	x0, x0, #0xa10
   3020c:	blr	x1
   30210:	ldr	w1, [x19, x0]
   30214:	ldr	x2, [x22, #16]
   30218:	orr	w27, w27, w1
   3021c:	str	w27, [x19, x0]
   30220:	add	x1, x19, x0
   30224:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   30228:	ldr	x3, [x0, #2512]
   3022c:	add	x0, x0, #0x9d0
   30230:	blr	x3
   30234:	str	x25, [x19, x0]
   30238:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3023c:	ldr	x3, [x0, #2544]
   30240:	add	x0, x0, #0x9f0
   30244:	blr	x3
   30248:	str	x26, [x19, x0]
   3024c:	cmp	x26, x2
   30250:	ccmp	x25, x2, #0x0, ge  // ge = tcont
   30254:	b.le	303b8 <mpfr_fma@@Base+0x308>
   30258:	mov	w1, w20
   3025c:	mov	w2, w23
   30260:	mov	x0, x22
   30264:	bl	cb30 <mpfr_check_range@plt>
   30268:	mov	w20, w0
   3026c:	mov	sp, x29
   30270:	mov	w0, w20
   30274:	ldp	x19, x20, [sp, #16]
   30278:	ldp	x21, x22, [sp, #32]
   3027c:	ldp	x23, x24, [sp, #48]
   30280:	ldp	x25, x26, [sp, #64]
   30284:	ldp	x27, x28, [sp, #80]
   30288:	ldp	x29, x30, [sp], #352
   3028c:	ret
   30290:	mrs	x4, tpidr_el0
   30294:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   30298:	ldr	x5, [x0, #2544]
   3029c:	add	x0, x0, #0x9f0
   302a0:	blr	x5
   302a4:	ldr	x5, [x29, #96]
   302a8:	ldr	x0, [x4, x0]
   302ac:	cmp	x0, x5
   302b0:	b.lt	30120 <mpfr_fma@@Base+0x70>  // b.tstop
   302b4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   302b8:	ldr	x6, [x0, #2512]
   302bc:	add	x0, x0, #0x9d0
   302c0:	blr	x6
   302c4:	ldr	x0, [x4, x0]
   302c8:	cmp	x0, x5
   302cc:	b.ge	30120 <mpfr_fma@@Base+0x70>  // b.tcont
   302d0:	cmp	x1, #0x3f
   302d4:	b.gt	303c8 <mpfr_fma@@Base+0x318>
   302d8:	ldr	x0, [x28]
   302dc:	cmp	x0, x1
   302e0:	b.ne	303c8 <mpfr_fma@@Base+0x318>  // b.any
   302e4:	ldr	x4, [x22]
   302e8:	cmp	x4, x0
   302ec:	b.ne	303c8 <mpfr_fma@@Base+0x318>  // b.any
   302f0:	ldr	x5, [x21, #24]
   302f4:	lsl	x4, x4, #1
   302f8:	ldr	x0, [x20, #24]
   302fc:	add	x2, x29, #0x70
   30300:	ldr	w7, [x21, #8]
   30304:	add	x1, x29, #0xa0
   30308:	ldr	x6, [x5]
   3030c:	cmp	x4, #0x40
   30310:	ldr	w5, [x20, #8]
   30314:	ldr	x0, [x0]
   30318:	umulh	x8, x0, x6
   3031c:	str	x4, [x29, #128]
   30320:	mul	w5, w5, w7
   30324:	str	x2, [x29, #152]
   30328:	mul	x0, x0, x6
   3032c:	ldr	w6, [x28, #8]
   30330:	stp	x0, x8, [x29, #112]
   30334:	str	w5, [x29, #136]
   30338:	str	x4, [x29, #208]
   3033c:	str	w6, [x29, #216]
   30340:	stp	x3, x1, [x29, #224]
   30344:	b.gt	307e0 <mpfr_fma@@Base+0x730>
   30348:	tbnz	x8, #63, 30810 <mpfr_fma@@Base+0x760>
   3034c:	ldr	x1, [x29, #96]
   30350:	lsl	x0, x8, #1
   30354:	str	x0, [x29, #112]
   30358:	sub	x24, x1, #0x1
   3035c:	str	x24, [x29, #144]
   30360:	ldr	x0, [x28, #24]
   30364:	ldr	x0, [x0]
   30368:	str	x0, [x29, #160]
   3036c:	add	x19, x29, #0x80
   30370:	mov	w3, w23
   30374:	mov	x1, x19
   30378:	add	x2, x29, #0xd0
   3037c:	mov	x0, x19
   30380:	bl	c1a0 <mpfr_add@plt>
   30384:	mov	w2, w23
   30388:	mov	w3, w0
   3038c:	mov	x1, x19
   30390:	mov	x0, x22
   30394:	bl	cae0 <mpfr_set_1_2@plt>
   30398:	mov	w20, w0
   3039c:	b	3026c <mpfr_fma@@Base+0x1bc>
   303a0:	lsl	x0, x0, #3
   303a4:	str	x0, [x29, #208]
   303a8:	bl	ccf0 <mpfr_allocate_func@plt>
   303ac:	mov	x4, x0
   303b0:	str	x0, [x29, #216]
   303b4:	b	30150 <mpfr_fma@@Base+0xa0>
   303b8:	cbz	w20, 3026c <mpfr_fma@@Base+0x1bc>
   303bc:	orr	w27, w27, #0x8
   303c0:	str	w27, [x1]
   303c4:	b	3026c <mpfr_fma@@Base+0x1bc>
   303c8:	sub	x3, x1, #0x1
   303cc:	asr	x3, x3, #6
   303d0:	add	x3, x3, #0x1
   303d4:	cmp	x3, #0x50
   303d8:	b.gt	30120 <mpfr_fma@@Base+0x70>
   303dc:	mov	x0, sp
   303e0:	lsl	x25, x3, #4
   303e4:	sub	x0, x0, x3, lsl #4
   303e8:	lsl	x4, x3, #7
   303ec:	mov	sp, x0
   303f0:	lsl	x26, x3, #1
   303f4:	ldr	x1, [x20, #24]
   303f8:	mov	x19, sp
   303fc:	ldr	x2, [x21, #24]
   30400:	add	x25, x19, x25
   30404:	mov	w27, #0x1                   	// #1
   30408:	str	x4, [x29, #128]
   3040c:	str	w27, [x29, #136]
   30410:	str	x19, [x29, #152]
   30414:	bl	c470 <__gmpn_mul_n@plt>
   30418:	ldur	x0, [x25, #-8]
   3041c:	tbz	x0, #63, 30788 <mpfr_fma@@Base+0x6d8>
   30420:	ldr	x0, [x29, #96]
   30424:	str	x0, [x29, #144]
   30428:	ldr	w4, [x20, #8]
   3042c:	mov	w3, w23
   30430:	ldr	w5, [x21, #8]
   30434:	mov	x2, x28
   30438:	mov	x0, x22
   3043c:	add	x1, x29, #0x80
   30440:	mul	w4, w4, w5
   30444:	str	w4, [x29, #136]
   30448:	bl	c1a0 <mpfr_add@plt>
   3044c:	mov	w20, w0
   30450:	b	3026c <mpfr_fma@@Base+0x1bc>
   30454:	mov	x0, #0x2                   	// #2
   30458:	movk	x0, #0x8000, lsl #48
   3045c:	cmp	x24, x0
   30460:	b.eq	304d8 <mpfr_fma@@Base+0x428>  // b.none
   30464:	ldr	x2, [x2, #16]
   30468:	mov	x0, #0x2                   	// #2
   3046c:	movk	x0, #0x8000, lsl #48
   30470:	cmp	x2, x0
   30474:	b.eq	304d8 <mpfr_fma@@Base+0x428>  // b.none
   30478:	ldr	x3, [x28, #16]
   3047c:	cmp	x3, x0
   30480:	b.eq	304d8 <mpfr_fma@@Base+0x428>  // b.none
   30484:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   30488:	cmp	x2, x0
   3048c:	ccmp	x24, x0, #0x4, ne  // ne = any
   30490:	b.ne	3051c <mpfr_fma@@Base+0x46c>  // b.any
   30494:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   30498:	cmp	x24, x1
   3049c:	ccmp	x2, x1, #0x4, ne  // ne = any
   304a0:	b.eq	304d8 <mpfr_fma@@Base+0x428>  // b.none
   304a4:	ldr	w2, [x20, #8]
   304a8:	cmp	x3, x0
   304ac:	ldr	w1, [x21, #8]
   304b0:	mul	w1, w1, w2
   304b4:	b.eq	304c8 <mpfr_fma@@Base+0x418>  // b.none
   304b8:	mov	w20, #0x0                   	// #0
   304bc:	str	w1, [x22, #8]
   304c0:	str	x0, [x22, #16]
   304c4:	b	3026c <mpfr_fma@@Base+0x1bc>
   304c8:	ldr	w0, [x28, #8]
   304cc:	cmp	w0, w1
   304d0:	b.eq	306f8 <mpfr_fma@@Base+0x648>  // b.none
   304d4:	nop
   304d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   304dc:	ldr	x1, [x0, #2576]
   304e0:	add	x0, x0, #0xa10
   304e4:	blr	x1
   304e8:	mrs	x2, tpidr_el0
   304ec:	mov	x1, #0x2                   	// #2
   304f0:	mov	w20, #0x0                   	// #0
   304f4:	movk	x1, #0x8000, lsl #48
   304f8:	str	x1, [x22, #16]
   304fc:	ldr	w1, [x2, x0]
   30500:	orr	w1, w1, #0x4
   30504:	str	w1, [x2, x0]
   30508:	b	3026c <mpfr_fma@@Base+0x1bc>
   3050c:	mov	x0, #0x2                   	// #2
   30510:	movk	x0, #0x8000, lsl #48
   30514:	cmp	x3, x0
   30518:	b.eq	304d8 <mpfr_fma@@Base+0x428>  // b.none
   3051c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   30520:	cmp	x3, x0
   30524:	b.eq	306f4 <mpfr_fma@@Base+0x644>  // b.none
   30528:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3052c:	cmp	x2, x0
   30530:	ccmp	x24, x0, #0x4, ne  // ne = any
   30534:	b.ne	30744 <mpfr_fma@@Base+0x694>  // b.any
   30538:	cmp	x3, x0
   3053c:	b.ne	3076c <mpfr_fma@@Base+0x6bc>  // b.any
   30540:	ldr	w0, [x20, #8]
   30544:	cmp	w23, #0x3
   30548:	ldr	w1, [x21, #8]
   3054c:	mul	w0, w0, w1
   30550:	b.eq	307bc <mpfr_fma@@Base+0x70c>  // b.none
   30554:	mov	w1, #0x1                   	// #1
   30558:	tbnz	w0, #31, 30708 <mpfr_fma@@Base+0x658>
   3055c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   30560:	b	304b8 <mpfr_fma@@Base+0x408>
   30564:	ldr	x1, [x29, #144]
   30568:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3056c:	cmp	x1, x0
   30570:	b.eq	3065c <mpfr_fma@@Base+0x5ac>  // b.none
   30574:	ldr	x0, [x22]
   30578:	ldr	x3, [x28]
   3057c:	add	x0, x0, #0x1
   30580:	ldr	x1, [x5]
   30584:	cmp	x0, x3
   30588:	ldr	x2, [x28, #16]
   3058c:	csel	x0, x0, x3, ge  // ge = tcont
   30590:	sub	x2, x2, x1
   30594:	cmp	x2, x0
   30598:	b.ge	3071c <mpfr_fma@@Base+0x66c>  // b.tcont
   3059c:	ldr	x1, [x29, #208]
   305a0:	cbz	x1, 305ac <mpfr_fma@@Base+0x4fc>
   305a4:	ldr	x0, [x29, #216]
   305a8:	bl	cc20 <mpfr_free_func@plt>
   305ac:	ldr	x0, [x21]
   305b0:	str	xzr, [x29, #112]
   305b4:	ldr	x24, [x20]
   305b8:	sub	x0, x0, #0x1
   305bc:	sub	x24, x24, #0x1
   305c0:	asr	x0, x0, #6
   305c4:	add	x24, x0, x24, asr #6
   305c8:	add	x24, x24, #0x2
   305cc:	lsl	x1, x24, #3
   305d0:	cmp	x1, #0x4, lsl #12
   305d4:	b.hi	307ac <mpfr_fma@@Base+0x6fc>  // b.pmore
   305d8:	add	x1, x1, #0xf
   305dc:	and	x1, x1, #0xfffffffffffffff0
   305e0:	sub	sp, sp, x1
   305e4:	mov	x3, sp
   305e8:	add	x4, x29, #0xa0
   305ec:	mov	x1, x20
   305f0:	mov	x0, x4
   305f4:	mov	x2, x21
   305f8:	mov	w5, #0x1                   	// #1
   305fc:	lsl	x24, x24, #6
   30600:	str	x4, [x29, #104]
   30604:	str	x24, [x29, #160]
   30608:	str	w5, [x29, #168]
   3060c:	str	x3, [x29, #184]
   30610:	bl	bf80 <mpfr_ubf_mul_exact@plt>
   30614:	bl	c270 <mpfr_clear_flags@plt>
   30618:	ldr	x4, [x29, #104]
   3061c:	mov	x2, x28
   30620:	mov	w3, w23
   30624:	mov	x0, x22
   30628:	mov	x1, x4
   3062c:	bl	c1a0 <mpfr_add@plt>
   30630:	mov	w20, w0
   30634:	ldr	x2, [x29, #176]
   30638:	mov	x1, #0x4                   	// #4
   3063c:	movk	x1, #0x8000, lsl #48
   30640:	cmp	x2, x1
   30644:	ldr	x4, [x29, #104]
   30648:	b.eq	30760 <mpfr_fma@@Base+0x6b0>  // b.none
   3064c:	ldr	x0, [x29, #112]
   30650:	cbz	x0, 30200 <mpfr_fma@@Base+0x150>
   30654:	bl	c410 <mpfr_tmp_free@plt>
   30658:	b	30200 <mpfr_fma@@Base+0x150>
   3065c:	ldr	x1, [x29, #208]
   30660:	ldr	w24, [x29, #136]
   30664:	cbz	x1, 30670 <mpfr_fma@@Base+0x5c0>
   30668:	ldr	x0, [x29, #216]
   3066c:	bl	cc20 <mpfr_free_func@plt>
   30670:	ldr	w0, [x28, #8]
   30674:	cmp	w0, w24
   30678:	b.eq	306a0 <mpfr_fma@@Base+0x5f0>  // b.none
   3067c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   30680:	ldr	x1, [x0, #2544]
   30684:	add	x0, x0, #0x9f0
   30688:	blr	x1
   3068c:	ldr	x0, [x19, x0]
   30690:	ldr	x1, [x29, #96]
   30694:	add	x0, x0, #0x2
   30698:	cmp	x0, x1
   3069c:	b.ge	305ac <mpfr_fma@@Base+0x4fc>  // b.tcont
   306a0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   306a4:	ldr	x1, [x0, #2576]
   306a8:	add	x0, x0, #0xa10
   306ac:	blr	x1
   306b0:	str	w27, [x19, x0]
   306b4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   306b8:	ldr	x1, [x0, #2512]
   306bc:	add	x0, x0, #0x9d0
   306c0:	blr	x1
   306c4:	str	x25, [x19, x0]
   306c8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   306cc:	ldr	x1, [x0, #2544]
   306d0:	add	x0, x0, #0x9f0
   306d4:	blr	x1
   306d8:	mov	w2, w24
   306dc:	mov	w1, w23
   306e0:	str	x26, [x19, x0]
   306e4:	mov	x0, x22
   306e8:	bl	bf40 <mpfr_overflow@plt>
   306ec:	mov	w20, w0
   306f0:	b	3026c <mpfr_fma@@Base+0x1bc>
   306f4:	ldr	w0, [x28, #8]
   306f8:	mov	w20, #0x0                   	// #0
   306fc:	str	w0, [x22, #8]
   30700:	str	x3, [x22, #16]
   30704:	b	3026c <mpfr_fma@@Base+0x1bc>
   30708:	ldr	w0, [x28, #8]
   3070c:	cmp	w0, #0x0
   30710:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   30714:	cneg	w1, w1, lt  // lt = tstop
   30718:	b	304b8 <mpfr_fma@@Base+0x408>
   3071c:	mov	x2, #0x1                   	// #1
   30720:	mov	x0, x24
   30724:	str	x2, [x29, #128]
   30728:	bl	c2b0 <mpfr_setmin@plt>
   3072c:	ldr	w0, [x20, #8]
   30730:	ldr	w1, [x21, #8]
   30734:	mul	w0, w0, w1
   30738:	str	w0, [x29, #136]
   3073c:	bl	c270 <mpfr_clear_flags@plt>
   30740:	b	301d8 <mpfr_fma@@Base+0x128>
   30744:	mov	x1, x20
   30748:	mov	w3, w23
   3074c:	mov	x2, x21
   30750:	mov	x0, x22
   30754:	bl	bd50 <mpfr_mul@plt>
   30758:	mov	w20, w0
   3075c:	b	3026c <mpfr_fma@@Base+0x1bc>
   30760:	add	x0, x4, #0x20
   30764:	bl	c170 <mpfr_mpz_clear@plt>
   30768:	b	3064c <mpfr_fma@@Base+0x59c>
   3076c:	ldr	w3, [x28, #8]
   30770:	mov	w2, w23
   30774:	mov	x0, x22
   30778:	mov	x1, x28
   3077c:	bl	c6a0 <mpfr_set4@plt>
   30780:	mov	w20, w0
   30784:	b	3026c <mpfr_fma@@Base+0x1bc>
   30788:	mov	w3, w27
   3078c:	mov	x2, x26
   30790:	mov	x1, x19
   30794:	mov	x0, x19
   30798:	bl	bcc0 <__gmpn_lshift@plt>
   3079c:	ldr	x0, [x29, #96]
   307a0:	sub	x24, x0, #0x1
   307a4:	str	x24, [x29, #144]
   307a8:	b	30428 <mpfr_fma@@Base+0x378>
   307ac:	add	x0, x29, #0x70
   307b0:	bl	bdc0 <mpfr_tmp_allocate@plt>
   307b4:	mov	x3, x0
   307b8:	b	305e8 <mpfr_fma@@Base+0x538>
   307bc:	cmp	w0, #0x0
   307c0:	mov	w1, #0xffffffff            	// #-1
   307c4:	b.le	3055c <mpfr_fma@@Base+0x4ac>
   307c8:	ldr	w0, [x28, #8]
   307cc:	mov	w1, #0x1                   	// #1
   307d0:	cmp	w0, w1
   307d4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   307d8:	cneg	w1, w1, lt  // lt = tstop
   307dc:	b	304b8 <mpfr_fma@@Base+0x408>
   307e0:	ldr	x2, [x28, #24]
   307e4:	ldr	x1, [x29, #120]
   307e8:	ldr	x2, [x2]
   307ec:	stp	xzr, x2, [x29, #160]
   307f0:	tbnz	x1, #63, 30820 <mpfr_fma@@Base+0x770>
   307f4:	ldr	x2, [x29, #96]
   307f8:	extr	x1, x1, x0, #63
   307fc:	lsl	x0, x0, #1
   30800:	stp	x0, x1, [x29, #112]
   30804:	sub	x24, x2, #0x1
   30808:	str	x24, [x29, #144]
   3080c:	b	3036c <mpfr_fma@@Base+0x2bc>
   30810:	ldr	x0, [x29, #96]
   30814:	str	x8, [x29, #112]
   30818:	str	x0, [x29, #144]
   3081c:	b	30360 <mpfr_fma@@Base+0x2b0>
   30820:	ldr	x0, [x29, #96]
   30824:	str	x0, [x29, #144]
   30828:	b	3036c <mpfr_fma@@Base+0x2bc>
   3082c:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   30830:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   30834:	add	x2, x2, #0xb48
   30838:	add	x0, x0, #0xb90
   3083c:	mov	w1, #0xd5                  	// #213
   30840:	bl	cb40 <mpfr_assert_fail@plt>
   30844:	nop

0000000000030848 <mpfr_fms@@Base>:
   30848:	mov	x5, x3
   3084c:	stp	x29, x30, [sp, #-48]!
   30850:	mov	x29, sp
   30854:	ldr	w6, [x5, #8]
   30858:	add	x3, sp, #0x10
   3085c:	ldr	x8, [x5]
   30860:	neg	w6, w6
   30864:	ldp	x7, x5, [x5, #16]
   30868:	str	x8, [sp, #16]
   3086c:	str	w6, [sp, #24]
   30870:	stp	x7, x5, [sp, #32]
   30874:	bl	c250 <mpfr_fma@plt>
   30878:	ldp	x29, x30, [sp], #48
   3087c:	ret

0000000000030880 <mpfr_hypot@@Base>:
   30880:	stp	x29, x30, [sp, #-256]!
   30884:	mov	x29, sp
   30888:	stp	x21, x22, [sp, #32]
   3088c:	mov	x21, x1
   30890:	mov	x22, x2
   30894:	ldr	x1, [x1, #16]
   30898:	stp	x19, x20, [sp, #16]
   3089c:	mov	x19, x0
   308a0:	stp	x27, x28, [sp, #80]
   308a4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   308a8:	mov	w20, w3
   308ac:	cmp	x1, x0
   308b0:	b.le	30ce0 <mpfr_hypot@@Base+0x460>
   308b4:	ldr	x2, [x2, #16]
   308b8:	cmp	x2, x0
   308bc:	b.le	30ce8 <mpfr_hypot@@Base+0x468>
   308c0:	mov	x1, x22
   308c4:	mov	x0, x21
   308c8:	stp	x25, x26, [sp, #64]
   308cc:	bl	c9b0 <mpfr_cmpabs@plt>
   308d0:	cmp	w0, #0x0
   308d4:	csel	x9, x21, x22, ge  // ge = tcont
   308d8:	csel	x5, x22, x21, ge  // ge = tcont
   308dc:	ldr	x25, [x19]
   308e0:	ldr	x21, [x9]
   308e4:	ldr	x0, [x5, #16]
   308e8:	cmp	x21, x25
   308ec:	ldr	x28, [x9, #16]
   308f0:	csel	x1, x21, x25, ge  // ge = tcont
   308f4:	sub	x0, x28, x0
   308f8:	cbz	w20, 30964 <mpfr_hypot@@Base+0xe4>
   308fc:	lsl	x1, x1, #1
   30900:	cmp	w20, #0x4
   30904:	b.ne	30bfc <mpfr_hypot@@Base+0x37c>  // b.any
   30908:	cmp	x0, x1
   3090c:	b.ls	30cd4 <mpfr_hypot@@Base+0x454>  // b.plast
   30910:	mov	x1, x9
   30914:	mov	x0, x19
   30918:	mov	w3, #0x1                   	// #1
   3091c:	mov	w2, #0x2                   	// #2
   30920:	bl	c6a0 <mpfr_set4@plt>
   30924:	cbz	w0, 30fdc <mpfr_hypot@@Base+0x75c>
   30928:	mrs	x27, tpidr_el0
   3092c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   30930:	ldr	x1, [x0, #2576]
   30934:	add	x0, x0, #0xa10
   30938:	blr	x1
   3093c:	ldr	w1, [x27, x0]
   30940:	orr	w1, w1, #0x8
   30944:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   30948:	ldr	x2, [x0, #2576]
   3094c:	add	x0, x0, #0xa10
   30950:	blr	x2
   30954:	mov	w28, #0x1                   	// #1
   30958:	str	w1, [x27, x0]
   3095c:	ldp	x25, x26, [sp, #64]
   30960:	b	30c54 <mpfr_hypot@@Base+0x3d4>
   30964:	add	x1, x1, #0x1
   30968:	cmp	x0, x1, lsl #1
   3096c:	b.hi	30c0c <mpfr_hypot@@Base+0x38c>  // b.pmore
   30970:	stp	x23, x24, [sp, #48]
   30974:	ldr	x0, [x5]
   30978:	cmp	x0, x21
   3097c:	csel	x21, x0, x21, ge  // ge = tcont
   30980:	cmp	x25, #0x1
   30984:	b.eq	30e2c <mpfr_hypot@@Base+0x5ac>  // b.none
   30988:	b.le	31110 <mpfr_hypot@@Base+0x890>
   3098c:	sub	x0, x25, #0x1
   30990:	mov	w22, #0x40                  	// #64
   30994:	clz	x0, x0
   30998:	sub	w22, w22, w0
   3099c:	add	x22, x25, w22, sxtw
   309a0:	add	x22, x22, #0x4
   309a4:	add	x26, sp, #0xa0
   309a8:	mov	x1, x22
   309ac:	mov	x0, x26
   309b0:	add	x23, sp, #0xc0
   309b4:	stp	x9, x5, [sp, #120]
   309b8:	bl	ca80 <mpfr_init2@plt>
   309bc:	mov	x1, x22
   309c0:	mov	x0, x23
   309c4:	add	x24, sp, #0xe0
   309c8:	bl	ca80 <mpfr_init2@plt>
   309cc:	mrs	x27, tpidr_el0
   309d0:	mov	x1, x22
   309d4:	mov	x0, x24
   309d8:	bl	ca80 <mpfr_init2@plt>
   309dc:	ldp	x9, x5, [sp, #120]
   309e0:	mov	x4, #0x40                  	// #64
   309e4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   309e8:	ldr	x1, [x0, #2576]
   309ec:	add	x0, x0, #0xa10
   309f0:	blr	x1
   309f4:	ldr	w0, [x27, x0]
   309f8:	str	w0, [sp, #116]
   309fc:	mov	x12, #0x1fffffffffffffff    	// #2305843009213693951
   30a00:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   30a04:	sub	x28, x12, x28
   30a08:	str	x4, [sp, #152]
   30a0c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   30a10:	ldr	x1, [x0, #2512]
   30a14:	add	x0, x0, #0x9d0
   30a18:	blr	x1
   30a1c:	add	x2, x27, x0
   30a20:	ldr	x0, [x27, x0]
   30a24:	str	x0, [sp, #96]
   30a28:	str	x3, [x2]
   30a2c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   30a30:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   30a34:	ldr	x4, [x0, #2544]
   30a38:	add	x0, x0, #0x9f0
   30a3c:	blr	x4
   30a40:	ldr	x2, [x27, x0]
   30a44:	str	x1, [x27, x0]
   30a48:	str	x2, [sp, #104]
   30a4c:	mov	x1, x9
   30a50:	mov	x2, x28
   30a54:	mov	w3, #0x1                   	// #1
   30a58:	mov	x0, x23
   30a5c:	str	x5, [sp, #128]
   30a60:	str	x9, [sp, #144]
   30a64:	bl	bb90 <mpfr_mul_2si@plt>
   30a68:	ldr	x5, [sp, #128]
   30a6c:	mov	w11, w0
   30a70:	mov	w3, #0x1                   	// #1
   30a74:	mov	x2, x28
   30a78:	mov	x1, x5
   30a7c:	mov	x0, x24
   30a80:	str	w11, [sp, #120]
   30a84:	str	x5, [sp, #136]
   30a88:	bl	bb90 <mpfr_mul_2si@plt>
   30a8c:	ldr	w11, [sp, #120]
   30a90:	mov	x1, x23
   30a94:	mov	w2, #0x1                   	// #1
   30a98:	orr	w11, w11, w0
   30a9c:	mov	x0, x23
   30aa0:	str	w11, [sp, #128]
   30aa4:	bl	c400 <mpfr_sqr@plt>
   30aa8:	mov	w8, w0
   30aac:	mov	x3, x23
   30ab0:	mov	x2, x24
   30ab4:	mov	x1, x24
   30ab8:	mov	w4, #0x1                   	// #1
   30abc:	mov	x0, x26
   30ac0:	str	w8, [sp, #120]
   30ac4:	bl	c250 <mpfr_fma@plt>
   30ac8:	ldr	w8, [sp, #120]
   30acc:	mov	x1, x26
   30ad0:	ldr	w11, [sp, #128]
   30ad4:	mov	w2, #0x1                   	// #1
   30ad8:	orr	w8, w8, w0
   30adc:	mov	x0, x26
   30ae0:	orr	w8, w8, w11
   30ae4:	str	w8, [sp, #120]
   30ae8:	bl	c930 <mpfr_sqrt@plt>
   30aec:	ldr	w8, [sp, #120]
   30af0:	cmp	x22, x21
   30af4:	mov	x1, #0x2                   	// #2
   30af8:	orr	w8, w0, w8
   30afc:	mov	x0, #0x4                   	// #4
   30b00:	csel	x2, x0, x1, lt  // lt = tstop
   30b04:	ldp	x5, x9, [sp, #136]
   30b08:	cbnz	w8, 30d90 <mpfr_hypot@@Base+0x510>
   30b0c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   30b10:	ldr	x1, [x0, #2576]
   30b14:	add	x0, x0, #0xa10
   30b18:	blr	x1
   30b1c:	mov	x2, x28
   30b20:	mov	x1, x26
   30b24:	mov	w3, w20
   30b28:	add	x21, x27, x0
   30b2c:	str	wzr, [x27, x0]
   30b30:	mov	x0, x19
   30b34:	bl	c420 <mpfr_div_2si@plt>
   30b38:	cmp	w0, #0x0
   30b3c:	mov	w28, w0
   30b40:	cset	w22, ne  // ne = any
   30b44:	mov	x0, x26
   30b48:	ldr	w21, [x21]
   30b4c:	bl	c070 <mpfr_clear@plt>
   30b50:	mov	x0, x24
   30b54:	bl	c070 <mpfr_clear@plt>
   30b58:	mov	x0, x23
   30b5c:	bl	c070 <mpfr_clear@plt>
   30b60:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   30b64:	ldr	x1, [x0, #2576]
   30b68:	add	x0, x0, #0xa10
   30b6c:	blr	x1
   30b70:	ldr	w1, [sp, #116]
   30b74:	str	w1, [x27, x0]
   30b78:	add	x1, x27, x0
   30b7c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   30b80:	ldr	x2, [x0, #2512]
   30b84:	add	x0, x0, #0x9d0
   30b88:	blr	x2
   30b8c:	ldr	x2, [sp, #96]
   30b90:	str	x2, [x27, x0]
   30b94:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   30b98:	ldr	x2, [x0, #2544]
   30b9c:	add	x0, x0, #0x9f0
   30ba0:	blr	x2
   30ba4:	ldr	x2, [sp, #104]
   30ba8:	str	x2, [x27, x0]
   30bac:	tbnz	w21, #1, 30e34 <mpfr_hypot@@Base+0x5b4>
   30bb0:	ldr	x0, [x19, #16]
   30bb4:	ldr	x1, [sp, #96]
   30bb8:	cmp	x1, x0
   30bbc:	ldr	x1, [sp, #104]
   30bc0:	ccmp	x1, x0, #0x1, le
   30bc4:	b.ge	30c6c <mpfr_hypot@@Base+0x3ec>  // b.tcont
   30bc8:	mov	w2, w20
   30bcc:	mov	w1, w28
   30bd0:	mov	x0, x19
   30bd4:	bl	cb30 <mpfr_check_range@plt>
   30bd8:	mov	w28, w0
   30bdc:	mov	w0, w28
   30be0:	ldp	x19, x20, [sp, #16]
   30be4:	ldp	x21, x22, [sp, #32]
   30be8:	ldp	x23, x24, [sp, #48]
   30bec:	ldp	x25, x26, [sp, #64]
   30bf0:	ldp	x27, x28, [sp, #80]
   30bf4:	ldp	x29, x30, [sp], #256
   30bf8:	ret
   30bfc:	cmp	x0, x1
   30c00:	b.ls	30970 <mpfr_hypot@@Base+0xf0>  // b.plast
   30c04:	cmp	w20, #0x2
   30c08:	b.eq	30910 <mpfr_hypot@@Base+0x90>  // b.none
   30c0c:	cmp	x21, x25
   30c10:	b.gt	30e44 <mpfr_hypot@@Base+0x5c4>
   30c14:	mov	w2, w20
   30c18:	mov	x1, x9
   30c1c:	mov	x0, x19
   30c20:	mov	w3, #0x1                   	// #1
   30c24:	bl	c6a0 <mpfr_set4@plt>
   30c28:	mov	w28, #0xffffffff            	// #-1
   30c2c:	mrs	x1, tpidr_el0
   30c30:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   30c34:	ldr	x2, [x0, #2576]
   30c38:	add	x0, x0, #0xa10
   30c3c:	blr	x2
   30c40:	add	x0, x1, x0
   30c44:	ldp	x25, x26, [sp, #64]
   30c48:	ldr	w1, [x0]
   30c4c:	orr	w1, w1, #0x8
   30c50:	str	w1, [x0]
   30c54:	mov	w0, w28
   30c58:	ldp	x19, x20, [sp, #16]
   30c5c:	ldp	x21, x22, [sp, #32]
   30c60:	ldp	x27, x28, [sp, #80]
   30c64:	ldp	x29, x30, [sp], #256
   30c68:	ret
   30c6c:	cbz	w22, 30cb0 <mpfr_hypot@@Base+0x430>
   30c70:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   30c74:	ldr	x1, [x0, #2576]
   30c78:	add	x0, x0, #0xa10
   30c7c:	blr	x1
   30c80:	add	x0, x27, x0
   30c84:	ldp	x23, x24, [sp, #48]
   30c88:	ldr	w1, [x0]
   30c8c:	ldp	x25, x26, [sp, #64]
   30c90:	orr	w1, w1, #0x8
   30c94:	str	w1, [x0]
   30c98:	mov	w0, w28
   30c9c:	ldp	x19, x20, [sp, #16]
   30ca0:	ldp	x21, x22, [sp, #32]
   30ca4:	ldp	x27, x28, [sp, #80]
   30ca8:	ldp	x29, x30, [sp], #256
   30cac:	ret
   30cb0:	mov	w28, #0x0                   	// #0
   30cb4:	mov	w0, w28
   30cb8:	ldp	x19, x20, [sp, #16]
   30cbc:	ldp	x21, x22, [sp, #32]
   30cc0:	ldp	x23, x24, [sp, #48]
   30cc4:	ldp	x25, x26, [sp, #64]
   30cc8:	ldp	x27, x28, [sp, #80]
   30ccc:	ldp	x29, x30, [sp], #256
   30cd0:	ret
   30cd4:	mov	w20, #0x2                   	// #2
   30cd8:	stp	x23, x24, [sp, #48]
   30cdc:	b	30974 <mpfr_hypot@@Base+0xf4>
   30ce0:	b.eq	30d30 <mpfr_hypot@@Base+0x4b0>  // b.none
   30ce4:	ldr	x2, [x2, #16]
   30ce8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   30cec:	cmp	x2, x0
   30cf0:	b.eq	30d30 <mpfr_hypot@@Base+0x4b0>  // b.none
   30cf4:	mov	x3, #0x2                   	// #2
   30cf8:	movk	x3, #0x8000, lsl #48
   30cfc:	cmp	x2, x3
   30d00:	ccmp	x1, x3, #0x4, ne  // ne = any
   30d04:	b.eq	30d60 <mpfr_hypot@@Base+0x4e0>  // b.none
   30d08:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   30d0c:	mov	w2, w20
   30d10:	cmp	x1, x0
   30d14:	b.eq	30d48 <mpfr_hypot@@Base+0x4c8>  // b.none
   30d18:	mov	x1, x21
   30d1c:	mov	x0, x19
   30d20:	mov	w3, #0x1                   	// #1
   30d24:	bl	c6a0 <mpfr_set4@plt>
   30d28:	mov	w28, w0
   30d2c:	b	30c54 <mpfr_hypot@@Base+0x3d4>
   30d30:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   30d34:	mov	w1, #0x1                   	// #1
   30d38:	mov	w28, #0x0                   	// #0
   30d3c:	str	w1, [x19, #8]
   30d40:	str	x0, [x19, #16]
   30d44:	b	30c54 <mpfr_hypot@@Base+0x3d4>
   30d48:	mov	x1, x22
   30d4c:	mov	x0, x19
   30d50:	mov	w3, #0x1                   	// #1
   30d54:	bl	c6a0 <mpfr_set4@plt>
   30d58:	mov	w28, w0
   30d5c:	b	30c54 <mpfr_hypot@@Base+0x3d4>
   30d60:	mrs	x1, tpidr_el0
   30d64:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   30d68:	ldr	x2, [x0, #2576]
   30d6c:	add	x0, x0, #0xa10
   30d70:	blr	x2
   30d74:	add	x0, x1, x0
   30d78:	mov	w28, #0x0                   	// #0
   30d7c:	str	x3, [x19, #16]
   30d80:	ldr	w1, [x0]
   30d84:	orr	w1, w1, #0x4
   30d88:	str	w1, [x0]
   30d8c:	b	30c54 <mpfr_hypot@@Base+0x3d4>
   30d90:	ldr	x0, [sp, #176]
   30d94:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   30d98:	cmp	x0, x1
   30d9c:	b.le	30dd0 <mpfr_hypot@@Base+0x550>
   30da0:	ldr	x1, [sp, #160]
   30da4:	cmp	w20, #0x0
   30da8:	ldr	x0, [sp, #184]
   30dac:	sub	x1, x1, #0x1
   30db0:	sub	x2, x22, x2
   30db4:	cinc	x3, x25, eq  // eq = none
   30db8:	asr	x1, x1, #6
   30dbc:	stp	x9, x5, [sp, #120]
   30dc0:	add	x1, x1, #0x1
   30dc4:	bl	c370 <mpfr_round_p@plt>
   30dc8:	ldp	x9, x5, [sp, #120]
   30dcc:	cbnz	w0, 30b0c <mpfr_hypot@@Base+0x28c>
   30dd0:	ldr	x1, [sp, #152]
   30dd4:	mov	x0, #0xfffffffffffffeff    	// #-257
   30dd8:	movk	x0, #0x7fff, lsl #48
   30ddc:	sub	x0, x0, x22
   30de0:	cmp	x0, x1
   30de4:	b.lt	310f8 <mpfr_hypot@@Base+0x878>  // b.tstop
   30de8:	ldr	x0, [sp, #152]
   30dec:	stp	x9, x5, [sp, #120]
   30df0:	add	x22, x22, x0
   30df4:	mov	x0, x26
   30df8:	mov	x1, x22
   30dfc:	add	x2, x22, x22, lsr #63
   30e00:	asr	x2, x2, #1
   30e04:	str	x2, [sp, #152]
   30e08:	bl	bed0 <mpfr_set_prec@plt>
   30e0c:	mov	x1, x22
   30e10:	mov	x0, x23
   30e14:	bl	bed0 <mpfr_set_prec@plt>
   30e18:	mov	x1, x22
   30e1c:	mov	x0, x24
   30e20:	bl	bed0 <mpfr_set_prec@plt>
   30e24:	ldp	x9, x5, [sp, #120]
   30e28:	b	30a4c <mpfr_hypot@@Base+0x1cc>
   30e2c:	mov	x22, x25
   30e30:	b	309a0 <mpfr_hypot@@Base+0x120>
   30e34:	ldr	w0, [sp, #116]
   30e38:	orr	w0, w0, #0x2
   30e3c:	str	w0, [x1]
   30e40:	b	30bb0 <mpfr_hypot@@Base+0x330>
   30e44:	sub	x21, x21, #0x1
   30e48:	sub	x8, x25, #0x1
   30e4c:	ldr	x9, [x9, #24]
   30e50:	asr	x8, x8, #6
   30e54:	asr	x0, x21, #6
   30e58:	mov	w1, #0x1                   	// #1
   30e5c:	sub	x0, x0, x8
   30e60:	str	w1, [x19, #8]
   30e64:	str	x28, [x19, #16]
   30e68:	neg	w7, w25
   30e6c:	ands	w7, w7, #0x3f
   30e70:	add	x2, x8, #0x1
   30e74:	add	x1, x9, x0, lsl #3
   30e78:	ldr	x5, [x19, #24]
   30e7c:	b.eq	31088 <mpfr_hypot@@Base+0x808>  // b.none
   30e80:	ldr	x4, [x9, x0, lsl #3]
   30e84:	sub	w6, w7, #0x1
   30e88:	mov	x3, #0x1                   	// #1
   30e8c:	cmp	w20, #0x0
   30e90:	lsl	x3, x3, x6
   30e94:	and	x10, x4, x3
   30e98:	sub	x3, x3, #0x1
   30e9c:	ccmp	x10, #0x0, #0x4, ne  // ne = any
   30ea0:	and	x3, x3, x4
   30ea4:	b.ne	30ed0 <mpfr_hypot@@Base+0x650>  // b.any
   30ea8:	cmp	x3, #0x0
   30eac:	mov	x4, x0
   30eb0:	ccmp	x0, #0x0, #0x4, eq  // eq = none
   30eb4:	b.eq	30ed0 <mpfr_hypot@@Base+0x650>  // b.none
   30eb8:	mvn	x7, x0
   30ebc:	add	x7, x1, x7, lsl #3
   30ec0:	ldr	x3, [x7, x4, lsl #3]
   30ec4:	subs	x4, x4, #0x1
   30ec8:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   30ecc:	b.eq	30ec0 <mpfr_hypot@@Base+0x640>  // b.none
   30ed0:	mov	x21, #0x2                   	// #2
   30ed4:	lsl	x21, x21, x6
   30ed8:	cmp	w20, #0x5
   30edc:	b.eq	30fa8 <mpfr_hypot@@Base+0x728>  // b.none
   30ee0:	cbnz	w20, 31010 <mpfr_hypot@@Base+0x790>
   30ee4:	cbz	x10, 30fa8 <mpfr_hypot@@Base+0x728>
   30ee8:	ldr	x0, [x9, x0, lsl #3]
   30eec:	adds	x0, x0, x21
   30ef0:	str	x0, [x5]
   30ef4:	b.cc	31028 <mpfr_hypot@@Base+0x7a8>  // b.lo, b.ul, b.last
   30ef8:	mov	x0, #0x1                   	// #1
   30efc:	b	30f18 <mpfr_hypot@@Base+0x698>
   30f00:	ldr	x3, [x1, x0, lsl #3]
   30f04:	add	x4, x0, #0x1
   30f08:	add	x3, x3, #0x1
   30f0c:	str	x3, [x5, x0, lsl #3]
   30f10:	cbnz	x3, 31060 <mpfr_hypot@@Base+0x7e0>
   30f14:	mov	x0, x4
   30f18:	cmp	x0, x2
   30f1c:	b.ne	30f00 <mpfr_hypot@@Base+0x680>  // b.any
   30f20:	add	x1, x5, x0, lsl #3
   30f24:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   30f28:	mrs	x27, tpidr_el0
   30f2c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   30f30:	ldr	x3, [x0, #2544]
   30f34:	add	x0, x0, #0x9f0
   30f38:	blr	x3
   30f3c:	stur	x2, [x1, #-8]
   30f40:	ldr	x1, [x19, #16]
   30f44:	ldr	x2, [x27, x0]
   30f48:	add	x0, x1, #0x1
   30f4c:	str	x0, [x19, #16]
   30f50:	cmp	x0, x2
   30f54:	b.gt	31128 <mpfr_hypot@@Base+0x8a8>
   30f58:	ldr	x0, [x5]
   30f5c:	nop
   30f60:	neg	x21, x21
   30f64:	and	x0, x21, x0
   30f68:	mov	w28, #0x1                   	// #1
   30f6c:	str	x0, [x5]
   30f70:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   30f74:	ldr	x1, [x0, #2576]
   30f78:	add	x0, x0, #0xa10
   30f7c:	blr	x1
   30f80:	add	x0, x27, x0
   30f84:	ldp	x25, x26, [sp, #64]
   30f88:	ldr	w1, [x0]
   30f8c:	orr	w1, w1, #0x8
   30f90:	str	w1, [x0]
   30f94:	b	30c54 <mpfr_hypot@@Base+0x3d4>
   30f98:	cmp	w20, #0x5
   30f9c:	mov	x21, #0x1                   	// #1
   30fa0:	b.ne	31010 <mpfr_hypot@@Base+0x790>  // b.any
   30fa4:	nop
   30fa8:	cmp	x5, x1
   30fac:	b.eq	30fc0 <mpfr_hypot@@Base+0x740>  // b.none
   30fb0:	mov	x0, x5
   30fb4:	lsl	x2, x2, #3
   30fb8:	bl	ba10 <memcpy@plt>
   30fbc:	mov	x5, x0
   30fc0:	ldr	x0, [x5]
   30fc4:	neg	x21, x21
   30fc8:	mrs	x27, tpidr_el0
   30fcc:	mov	w28, #0xffffffff            	// #-1
   30fd0:	and	x0, x0, x21
   30fd4:	str	x0, [x5]
   30fd8:	b	30f70 <mpfr_hypot@@Base+0x6f0>
   30fdc:	mov	x0, x19
   30fe0:	bl	c670 <mpfr_nexttoinf@plt>
   30fe4:	ldr	x1, [x19, #16]
   30fe8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   30fec:	mrs	x27, tpidr_el0
   30ff0:	cmp	x1, x0
   30ff4:	b.eq	310d0 <mpfr_hypot@@Base+0x850>  // b.none
   30ff8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   30ffc:	ldr	x1, [x0, #2576]
   31000:	add	x0, x0, #0xa10
   31004:	blr	x1
   31008:	ldr	w1, [x27, x0]
   3100c:	b	30940 <mpfr_hypot@@Base+0xc0>
   31010:	and	w4, w20, #0xfffffffd
   31014:	cmp	w4, #0x1
   31018:	b.eq	30fa8 <mpfr_hypot@@Base+0x728>  // b.none
   3101c:	orr	x3, x10, x3
   31020:	cbnz	x3, 30ee8 <mpfr_hypot@@Base+0x668>
   31024:	b	30fa8 <mpfr_hypot@@Base+0x728>
   31028:	cmp	x5, x1
   3102c:	mrs	x27, tpidr_el0
   31030:	b.eq	30f60 <mpfr_hypot@@Base+0x6e0>  // b.none
   31034:	cmp	x2, #0x1
   31038:	b.eq	30f60 <mpfr_hypot@@Base+0x6e0>  // b.none
   3103c:	mov	x0, #0x1                   	// #1
   31040:	ldr	x3, [x1, x0, lsl #3]
   31044:	str	x3, [x5, x0, lsl #3]
   31048:	add	x0, x0, #0x1
   3104c:	cmp	x2, x0
   31050:	b.ne	31040 <mpfr_hypot@@Base+0x7c0>  // b.any
   31054:	mrs	x27, tpidr_el0
   31058:	ldr	x0, [x5]
   3105c:	b	30f60 <mpfr_hypot@@Base+0x6e0>
   31060:	cmp	x5, x1
   31064:	b.eq	310ec <mpfr_hypot@@Base+0x86c>  // b.none
   31068:	cmp	x8, x0
   3106c:	b.le	31054 <mpfr_hypot@@Base+0x7d4>
   31070:	ldr	x0, [x1, x4, lsl #3]
   31074:	str	x0, [x5, x4, lsl #3]
   31078:	cmp	x8, x4
   3107c:	add	x4, x4, #0x1
   31080:	b.gt	31070 <mpfr_hypot@@Base+0x7f0>
   31084:	b	31054 <mpfr_hypot@@Base+0x7d4>
   31088:	ldur	x3, [x1, #-8]
   3108c:	cmp	w20, #0x0
   31090:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   31094:	and	x10, x3, #0x8000000000000000
   31098:	and	x3, x3, #0x7fffffffffffffff
   3109c:	b.lt	30f98 <mpfr_hypot@@Base+0x718>  // b.tstop
   310a0:	subs	x4, x0, #0x1
   310a4:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   310a8:	b.ne	310c8 <mpfr_hypot@@Base+0x848>  // b.any
   310ac:	mvn	x6, x0
   310b0:	add	x6, x1, x6, lsl #3
   310b4:	nop
   310b8:	ldr	x3, [x6, x4, lsl #3]
   310bc:	subs	x4, x4, #0x1
   310c0:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   310c4:	b.eq	310b8 <mpfr_hypot@@Base+0x838>  // b.none
   310c8:	mov	x21, #0x1                   	// #1
   310cc:	b	30ed8 <mpfr_hypot@@Base+0x658>
   310d0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   310d4:	ldr	x1, [x0, #2576]
   310d8:	add	x0, x0, #0xa10
   310dc:	blr	x1
   310e0:	ldr	w1, [x27, x0]
   310e4:	orr	w1, w1, #0x2
   310e8:	b	30940 <mpfr_hypot@@Base+0xc0>
   310ec:	mrs	x27, tpidr_el0
   310f0:	ldr	x0, [x5]
   310f4:	b	30f60 <mpfr_hypot@@Base+0x6e0>
   310f8:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   310fc:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   31100:	add	x2, x2, #0xd20
   31104:	add	x0, x0, #0xb98
   31108:	mov	w1, #0xbd                  	// #189
   3110c:	bl	cb40 <mpfr_assert_fail@plt>
   31110:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   31114:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   31118:	add	x2, x2, #0x1f0
   3111c:	add	x0, x0, #0xb98
   31120:	mov	w1, #0x8c                  	// #140
   31124:	bl	cb40 <mpfr_assert_fail@plt>
   31128:	mov	w1, w20
   3112c:	mov	x0, x19
   31130:	mov	w2, #0x1                   	// #1
   31134:	bl	bf40 <mpfr_overflow@plt>
   31138:	mov	w28, w0
   3113c:	ldp	x25, x26, [sp, #64]
   31140:	b	30c54 <mpfr_hypot@@Base+0x3d4>
   31144:	nop

0000000000031148 <mpfr_log1p@@Base>:
   31148:	stp	x29, x30, [sp, #-240]!
   3114c:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   31150:	mov	x29, sp
   31154:	stp	x27, x28, [sp, #80]
   31158:	mov	w27, w2
   3115c:	ldr	x2, [x1, #16]
   31160:	stp	x19, x20, [sp, #16]
   31164:	mov	x20, x1
   31168:	stp	x23, x24, [sp, #48]
   3116c:	cmp	x2, x3
   31170:	mov	x23, x0
   31174:	b.le	3155c <mpfr_log1p@@Base+0x414>
   31178:	tbz	x2, #63, 31190 <mpfr_log1p@@Base+0x48>
   3117c:	ldr	w3, [x1, #8]
   31180:	cmp	w3, #0x0
   31184:	b.le	31458 <mpfr_log1p@@Base+0x310>
   31188:	mvn	x2, x2
   3118c:	cbnz	x2, 314f8 <mpfr_log1p@@Base+0x3b0>
   31190:	mov	x0, x20
   31194:	mov	x2, #0x0                   	// #0
   31198:	mov	x1, #0xffffffffffffffff    	// #-1
   3119c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   311a0:	mov	w19, w0
   311a4:	cmp	w0, #0x0
   311a8:	b.le	31594 <mpfr_log1p@@Base+0x44c>
   311ac:	stp	x21, x22, [sp, #32]
   311b0:	mrs	x22, tpidr_el0
   311b4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   311b8:	ldr	x1, [x0, #2576]
   311bc:	add	x0, x0, #0xa10
   311c0:	blr	x1
   311c4:	stp	x25, x26, [sp, #64]
   311c8:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   311cc:	ldr	w0, [x22, x0]
   311d0:	str	w0, [sp, #116]
   311d4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   311d8:	ldr	x25, [x23]
   311dc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   311e0:	ldr	x2, [x0, #2512]
   311e4:	add	x0, x0, #0x9d0
   311e8:	blr	x2
   311ec:	add	x2, x22, x0
   311f0:	ldr	x0, [x22, x0]
   311f4:	str	x0, [sp, #120]
   311f8:	str	x3, [x2]
   311fc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31200:	ldr	x4, [x0, #2544]
   31204:	add	x0, x0, #0x9f0
   31208:	blr	x4
   3120c:	ldr	x2, [x22, x0]
   31210:	str	x1, [x22, x0]
   31214:	str	x2, [sp, #128]
   31218:	cmp	x25, #0x1
   3121c:	b.eq	315d0 <mpfr_log1p@@Base+0x488>  // b.none
   31220:	b.le	3168c <mpfr_log1p@@Base+0x544>
   31224:	sub	x0, x25, #0x1
   31228:	mov	w19, #0x40                  	// #64
   3122c:	clz	x0, x0
   31230:	sub	w19, w19, w0
   31234:	add	x19, x25, w19, sxtw
   31238:	ldr	x0, [x20, #16]
   3123c:	add	x19, x19, #0x6
   31240:	mov	x1, #0x40                  	// #64
   31244:	add	x21, sp, #0x90
   31248:	cmp	x0, #0x0
   3124c:	sub	x0, x19, x0
   31250:	csel	x19, x0, x19, lt  // lt = tstop
   31254:	add	x26, sp, #0xb0
   31258:	add	x28, sp, #0xd0
   3125c:	mov	x0, x21
   31260:	str	x1, [sp, #136]
   31264:	mov	x1, x19
   31268:	bl	ca80 <mpfr_init2@plt>
   3126c:	mov	x0, x25
   31270:	bl	bc70 <__gmpfr_int_ceil_log2@plt>
   31274:	add	w0, w0, #0x1
   31278:	ldr	x1, [x20, #16]
   3127c:	sxtw	x0, w0
   31280:	sdiv	x0, x25, x0
   31284:	neg	x0, x0
   31288:	cmp	x1, x0
   3128c:	b.le	313ac <mpfr_log1p@@Base+0x264>
   31290:	mov	x1, x20
   31294:	mov	x0, x21
   31298:	mov	w3, #0x0                   	// #0
   3129c:	mov	x2, #0x1                   	// #1
   312a0:	bl	c260 <mpfr_add_ui@plt>
   312a4:	cbz	w0, 3165c <mpfr_log1p@@Base+0x514>
   312a8:	mov	x1, x21
   312ac:	mov	w2, #0x0                   	// #0
   312b0:	mov	x0, x21
   312b4:	bl	c090 <mpfr_log@plt>
   312b8:	ldr	x0, [sp, #160]
   312bc:	mov	x1, #0x2                   	// #2
   312c0:	subs	x2, x1, x0
   312c4:	csel	x2, x2, xzr, pl  // pl = nfrst
   312c8:	sub	x2, x19, x2
   312cc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   312d0:	cmp	x0, x1
   312d4:	b.le	31520 <mpfr_log1p@@Base+0x3d8>
   312d8:	ldr	x1, [sp, #144]
   312dc:	cmp	w27, #0x0
   312e0:	ldr	x0, [sp, #168]
   312e4:	sub	x1, x1, #0x1
   312e8:	cinc	x3, x25, eq  // eq = none
   312ec:	asr	x1, x1, #6
   312f0:	add	x1, x1, #0x1
   312f4:	bl	c370 <mpfr_round_p@plt>
   312f8:	cbz	w0, 31520 <mpfr_log1p@@Base+0x3d8>
   312fc:	ldr	w3, [sp, #152]
   31300:	mov	w2, w27
   31304:	mov	x1, x21
   31308:	mov	x0, x23
   3130c:	bl	c6a0 <mpfr_set4@plt>
   31310:	mov	w19, w0
   31314:	mov	x0, x21
   31318:	bl	c070 <mpfr_clear@plt>
   3131c:	ldr	x1, [x23, #16]
   31320:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31324:	ldr	x2, [x0, #2576]
   31328:	add	x0, x0, #0xa10
   3132c:	blr	x2
   31330:	ldr	w2, [sp, #116]
   31334:	str	w2, [x22, x0]
   31338:	add	x2, x22, x0
   3133c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31340:	ldr	x3, [x0, #2512]
   31344:	add	x0, x0, #0x9d0
   31348:	blr	x3
   3134c:	ldr	x3, [sp, #120]
   31350:	str	x3, [x22, x0]
   31354:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31358:	ldr	x4, [x0, #2544]
   3135c:	add	x0, x0, #0x9f0
   31360:	blr	x4
   31364:	ldr	x4, [sp, #128]
   31368:	str	x4, [x22, x0]
   3136c:	cmp	x4, x1
   31370:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   31374:	b.le	31490 <mpfr_log1p@@Base+0x348>
   31378:	mov	w1, w19
   3137c:	mov	w2, w27
   31380:	mov	x0, x23
   31384:	bl	cb30 <mpfr_check_range@plt>
   31388:	mov	w19, w0
   3138c:	ldp	x21, x22, [sp, #32]
   31390:	ldp	x25, x26, [sp, #64]
   31394:	mov	w0, w19
   31398:	ldp	x19, x20, [sp, #16]
   3139c:	ldp	x23, x24, [sp, #48]
   313a0:	ldp	x27, x28, [sp, #80]
   313a4:	ldp	x29, x30, [sp], #240
   313a8:	ret
   313ac:	ldr	x0, [sp, #144]
   313b0:	mov	x24, #0x2                   	// #2
   313b4:	mov	x1, x0
   313b8:	mov	x0, x26
   313bc:	str	x1, [sp, #104]
   313c0:	bl	ca80 <mpfr_init2@plt>
   313c4:	ldr	x1, [sp, #104]
   313c8:	mov	x0, x28
   313cc:	bl	ca80 <mpfr_init2@plt>
   313d0:	ldr	w3, [x20, #8]
   313d4:	mov	x1, x20
   313d8:	mov	w2, #0x5                   	// #5
   313dc:	mov	x0, x26
   313e0:	bl	c6a0 <mpfr_set4@plt>
   313e4:	ldr	w3, [sp, #184]
   313e8:	mov	x1, x26
   313ec:	mov	x0, x21
   313f0:	mov	w2, #0x5                   	// #5
   313f4:	bl	c6a0 <mpfr_set4@plt>
   313f8:	mov	x2, x20
   313fc:	mov	x1, x26
   31400:	mov	w3, #0x5                   	// #5
   31404:	mov	x0, x26
   31408:	bl	bd50 <mpfr_mul@plt>
   3140c:	mov	x2, x24
   31410:	mov	x1, x26
   31414:	mov	x0, x28
   31418:	mov	w3, #0x5                   	// #5
   3141c:	bl	cc60 <mpfr_div_ui@plt>
   31420:	ldr	x2, [sp, #104]
   31424:	ldr	x0, [sp, #160]
   31428:	ldr	x1, [sp, #224]
   3142c:	sub	x0, x0, x2
   31430:	cmp	x1, x0
   31434:	b.le	314c0 <mpfr_log1p@@Base+0x378>
   31438:	mov	x2, x28
   3143c:	mov	x1, x21
   31440:	mov	x0, x21
   31444:	mov	w3, #0x5                   	// #5
   31448:	tbz	w24, #0, 31484 <mpfr_log1p@@Base+0x33c>
   3144c:	add	x24, x24, #0x1
   31450:	bl	c1a0 <mpfr_add@plt>
   31454:	b	313f8 <mpfr_log1p@@Base+0x2b0>
   31458:	ldr	x3, [x0]
   3145c:	neg	x2, x2
   31460:	add	x3, x3, #0x1
   31464:	cmp	x2, x3
   31468:	b.ls	31190 <mpfr_log1p@@Base+0x48>  // b.plast
   3146c:	mov	w4, w27
   31470:	mov	w3, #0x1                   	// #1
   31474:	bl	c540 <mpfr_round_near_x@plt>
   31478:	mov	w19, w0
   3147c:	cbz	w0, 31190 <mpfr_log1p@@Base+0x48>
   31480:	b	31394 <mpfr_log1p@@Base+0x24c>
   31484:	add	x24, x24, #0x1
   31488:	bl	bb70 <mpfr_sub@plt>
   3148c:	b	313f8 <mpfr_log1p@@Base+0x2b0>
   31490:	cbz	w19, 3138c <mpfr_log1p@@Base+0x244>
   31494:	ldr	w0, [sp, #116]
   31498:	ldp	x21, x22, [sp, #32]
   3149c:	orr	w0, w0, #0x8
   314a0:	ldp	x25, x26, [sp, #64]
   314a4:	str	w0, [x2]
   314a8:	mov	w0, w19
   314ac:	ldp	x19, x20, [sp, #16]
   314b0:	ldp	x23, x24, [sp, #48]
   314b4:	ldp	x27, x28, [sp, #80]
   314b8:	ldp	x29, x30, [sp], #240
   314bc:	ret
   314c0:	add	x0, x24, #0x4
   314c4:	lsl	x0, x0, #1
   314c8:	bl	bc70 <__gmpfr_int_ceil_log2@plt>
   314cc:	ldr	x1, [sp, #104]
   314d0:	sxtw	x24, w0
   314d4:	cmp	x1, w0, sxtw
   314d8:	b.le	3160c <mpfr_log1p@@Base+0x4c4>
   314dc:	mov	x0, x26
   314e0:	bl	c070 <mpfr_clear@plt>
   314e4:	mov	x0, x28
   314e8:	bl	c070 <mpfr_clear@plt>
   314ec:	sub	x2, x19, x24
   314f0:	ldr	x0, [sp, #160]
   314f4:	b	312cc <mpfr_log1p@@Base+0x184>
   314f8:	ldr	x3, [x0]
   314fc:	add	x3, x3, #0x1
   31500:	cmp	x2, x3
   31504:	b.ls	31190 <mpfr_log1p@@Base+0x48>  // b.plast
   31508:	mov	w4, w27
   3150c:	mov	w3, #0x0                   	// #0
   31510:	bl	c540 <mpfr_round_near_x@plt>
   31514:	mov	w19, w0
   31518:	cbz	w0, 31190 <mpfr_log1p@@Base+0x48>
   3151c:	b	31394 <mpfr_log1p@@Base+0x24c>
   31520:	ldr	x1, [sp, #136]
   31524:	mov	x0, #0xfffffffffffffeff    	// #-257
   31528:	movk	x0, #0x7fff, lsl #48
   3152c:	sub	x0, x0, x19
   31530:	cmp	x0, x1
   31534:	b.lt	31674 <mpfr_log1p@@Base+0x52c>  // b.tstop
   31538:	ldr	x0, [sp, #136]
   3153c:	add	x19, x19, x0
   31540:	mov	x0, x21
   31544:	mov	x1, x19
   31548:	add	x2, x19, x19, lsr #63
   3154c:	asr	x2, x2, #1
   31550:	str	x2, [sp, #136]
   31554:	bl	bed0 <mpfr_set_prec@plt>
   31558:	b	3126c <mpfr_log1p@@Base+0x124>
   3155c:	mov	x0, #0x2                   	// #2
   31560:	movk	x0, #0x8000, lsl #48
   31564:	cmp	x2, x0
   31568:	b.eq	31624 <mpfr_log1p@@Base+0x4dc>  // b.none
   3156c:	cmp	x2, x3
   31570:	b.ne	315f4 <mpfr_log1p@@Base+0x4ac>  // b.any
   31574:	ldr	w0, [x1, #8]
   31578:	cmp	w0, #0x0
   3157c:	b.le	31624 <mpfr_log1p@@Base+0x4dc>
   31580:	mov	w0, #0x1                   	// #1
   31584:	mov	w19, #0x0                   	// #0
   31588:	str	w0, [x23, #8]
   3158c:	str	x2, [x23, #16]
   31590:	b	31394 <mpfr_log1p@@Base+0x24c>
   31594:	mrs	x1, tpidr_el0
   31598:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3159c:	ldr	x2, [x0, #2576]
   315a0:	add	x0, x0, #0xa10
   315a4:	blr	x2
   315a8:	add	x2, x1, x0
   315ac:	ldr	w0, [x1, x0]
   315b0:	cbnz	w19, 315d8 <mpfr_log1p@@Base+0x490>
   315b4:	orr	w0, w0, #0x20
   315b8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   315bc:	mov	w3, #0xffffffff            	// #-1
   315c0:	str	w0, [x2]
   315c4:	str	w3, [x23, #8]
   315c8:	str	x1, [x23, #16]
   315cc:	b	31394 <mpfr_log1p@@Base+0x24c>
   315d0:	mov	x19, x25
   315d4:	b	31238 <mpfr_log1p@@Base+0xf0>
   315d8:	mov	x1, #0x2                   	// #2
   315dc:	orr	w0, w0, #0x4
   315e0:	movk	x1, #0x8000, lsl #48
   315e4:	mov	w19, #0x0                   	// #0
   315e8:	str	w0, [x2]
   315ec:	str	x1, [x23, #16]
   315f0:	b	31394 <mpfr_log1p@@Base+0x24c>
   315f4:	ldr	w1, [x1, #8]
   315f8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   315fc:	mov	w19, #0x0                   	// #0
   31600:	str	w1, [x23, #8]
   31604:	str	x0, [x23, #16]
   31608:	b	31394 <mpfr_log1p@@Base+0x24c>
   3160c:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   31610:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   31614:	add	x2, x2, #0xba8
   31618:	add	x0, x0, #0xba0
   3161c:	mov	w1, #0x56                  	// #86
   31620:	bl	cb40 <mpfr_assert_fail@plt>
   31624:	mrs	x1, tpidr_el0
   31628:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3162c:	ldr	x2, [x0, #2576]
   31630:	add	x0, x0, #0xa10
   31634:	blr	x2
   31638:	add	x0, x1, x0
   3163c:	mov	x1, #0x2                   	// #2
   31640:	movk	x1, #0x8000, lsl #48
   31644:	str	x1, [x23, #16]
   31648:	mov	w19, #0x0                   	// #0
   3164c:	ldr	w1, [x0]
   31650:	orr	w1, w1, #0x4
   31654:	str	w1, [x0]
   31658:	b	31394 <mpfr_log1p@@Base+0x24c>
   3165c:	mov	w2, w27
   31660:	mov	x1, x21
   31664:	mov	x0, x23
   31668:	bl	c090 <mpfr_log@plt>
   3166c:	mov	w19, w0
   31670:	b	31314 <mpfr_log1p@@Base+0x1cc>
   31674:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   31678:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   3167c:	add	x2, x2, #0xd20
   31680:	add	x0, x0, #0xba0
   31684:	mov	w1, #0xe7                  	// #231
   31688:	bl	cb40 <mpfr_assert_fail@plt>
   3168c:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   31690:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   31694:	add	x2, x2, #0xd08
   31698:	add	x0, x0, #0xba0
   3169c:	mov	w1, #0xb9                  	// #185
   316a0:	bl	cb40 <mpfr_assert_fail@plt>
   316a4:	nop

00000000000316a8 <mpfr_expm1@@Base>:
   316a8:	stp	x29, x30, [sp, #-160]!
   316ac:	mov	x29, sp
   316b0:	stp	x27, x28, [sp, #80]
   316b4:	ldr	x28, [x1, #16]
   316b8:	stp	x19, x20, [sp, #16]
   316bc:	stp	x21, x22, [sp, #32]
   316c0:	mov	x22, x1
   316c4:	mov	x21, x0
   316c8:	stp	x23, x24, [sp, #48]
   316cc:	mov	w23, w2
   316d0:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   316d4:	cmp	x28, x2
   316d8:	b.le	31b00 <mpfr_expm1@@Base+0x458>
   316dc:	stp	x25, x26, [sp, #64]
   316e0:	ldr	w3, [x1, #8]
   316e4:	tbnz	x28, #63, 3194c <mpfr_expm1@@Base+0x2a4>
   316e8:	mrs	x19, tpidr_el0
   316ec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   316f0:	ldr	x2, [x0, #2576]
   316f4:	add	x0, x0, #0xa10
   316f8:	blr	x2
   316fc:	mov	x24, #0xc000000000000001    	// #-4611686018427387903
   31700:	mov	x20, #0x3fffffffffffffff    	// #4611686018427387903
   31704:	ldr	w0, [x19, x0]
   31708:	str	w0, [sp, #100]
   3170c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31710:	ldr	x2, [x0, #2512]
   31714:	add	x0, x0, #0x9d0
   31718:	blr	x2
   3171c:	add	x2, x19, x0
   31720:	ldr	x26, [x19, x0]
   31724:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31728:	ldr	x4, [x0, #2544]
   3172c:	add	x0, x0, #0x9f0
   31730:	blr	x4
   31734:	str	x24, [x2]
   31738:	cmp	w3, #0x0
   3173c:	ldr	x27, [x19, x0]
   31740:	str	x20, [x19, x0]
   31744:	ccmp	x28, #0x5, #0x4, lt  // lt = tstop
   31748:	b.gt	319dc <mpfr_expm1@@Base+0x334>
   3174c:	ldr	x24, [x21]
   31750:	cmp	x24, #0x1
   31754:	b.eq	31b80 <mpfr_expm1@@Base+0x4d8>  // b.none
   31758:	cmp	x24, #0x1
   3175c:	b.le	31cbc <mpfr_expm1@@Base+0x614>
   31760:	sub	x0, x24, #0x1
   31764:	mov	w20, #0x40                  	// #64
   31768:	clz	x0, x0
   3176c:	add	x25, sp, #0x80
   31770:	sub	w20, w20, w0
   31774:	add	x20, x24, w20, sxtw
   31778:	add	x20, x20, #0x6
   3177c:	tbnz	x28, #63, 319d0 <mpfr_expm1@@Base+0x328>
   31780:	mov	x0, #0x40                  	// #64
   31784:	mov	x1, x20
   31788:	str	x0, [sp, #104]
   3178c:	mov	x0, x25
   31790:	bl	ca80 <mpfr_init2@plt>
   31794:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31798:	ldr	x1, [x0, #2576]
   3179c:	add	x0, x0, #0xa10
   317a0:	blr	x1
   317a4:	add	x28, x19, x0
   317a8:	mov	x1, x22
   317ac:	mov	w2, #0x0                   	// #0
   317b0:	str	wzr, [x19, x0]
   317b4:	mov	x0, x25
   317b8:	bl	c750 <mpfr_exp@plt>
   317bc:	ldr	w0, [x28]
   317c0:	tbnz	w0, #1, 31c98 <mpfr_expm1@@Base+0x5f0>
   317c4:	tbnz	w0, #0, 31a80 <mpfr_expm1@@Base+0x3d8>
   317c8:	mov	x1, x25
   317cc:	mov	x2, #0x1                   	// #1
   317d0:	mov	x0, x25
   317d4:	mov	w3, #0x0                   	// #0
   317d8:	ldr	x28, [sp, #144]
   317dc:	bl	c530 <mpfr_sub_ui@plt>
   317e0:	ldr	x0, [sp, #144]
   317e4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   317e8:	subs	x2, x28, x0
   317ec:	csel	x2, x2, xzr, pl  // pl = nfrst
   317f0:	cmp	x0, x1
   317f4:	add	x2, x2, #0x1
   317f8:	sub	x2, x20, x2
   317fc:	b.le	31a44 <mpfr_expm1@@Base+0x39c>
   31800:	ldr	x1, [sp, #128]
   31804:	cmp	w23, #0x0
   31808:	ldr	x0, [sp, #152]
   3180c:	sub	x1, x1, #0x1
   31810:	cinc	x3, x24, eq  // eq = none
   31814:	asr	x1, x1, #6
   31818:	add	x1, x1, #0x1
   3181c:	bl	c370 <mpfr_round_p@plt>
   31820:	cbz	w0, 31a44 <mpfr_expm1@@Base+0x39c>
   31824:	ldr	w3, [sp, #136]
   31828:	mov	w2, w23
   3182c:	mov	x1, x25
   31830:	mov	x0, x21
   31834:	bl	c6a0 <mpfr_set4@plt>
   31838:	mov	w20, w0
   3183c:	mov	x0, x25
   31840:	bl	c070 <mpfr_clear@plt>
   31844:	ldr	x1, [x21, #16]
   31848:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3184c:	ldr	x2, [x0, #2576]
   31850:	add	x0, x0, #0xa10
   31854:	blr	x2
   31858:	ldr	w2, [sp, #100]
   3185c:	str	w2, [x19, x0]
   31860:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31864:	ldr	x2, [x0, #2512]
   31868:	add	x0, x0, #0x9d0
   3186c:	blr	x2
   31870:	str	x26, [x19, x0]
   31874:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31878:	ldr	x2, [x0, #2544]
   3187c:	add	x0, x0, #0x9f0
   31880:	blr	x2
   31884:	str	x27, [x19, x0]
   31888:	cmp	x1, x27
   3188c:	ccmp	x1, x26, #0x1, le
   31890:	b.ge	318c8 <mpfr_expm1@@Base+0x220>  // b.tcont
   31894:	mov	w1, w20
   31898:	mov	w2, w23
   3189c:	mov	x0, x21
   318a0:	bl	cb30 <mpfr_check_range@plt>
   318a4:	ldp	x25, x26, [sp, #64]
   318a8:	mov	w20, w0
   318ac:	mov	w0, w20
   318b0:	ldp	x19, x20, [sp, #16]
   318b4:	ldp	x21, x22, [sp, #32]
   318b8:	ldp	x23, x24, [sp, #48]
   318bc:	ldp	x27, x28, [sp, #80]
   318c0:	ldp	x29, x30, [sp], #160
   318c4:	ret
   318c8:	cbz	w20, 3192c <mpfr_expm1@@Base+0x284>
   318cc:	ldr	w0, [sp, #100]
   318d0:	ldp	x21, x22, [sp, #32]
   318d4:	orr	w25, w0, #0x8
   318d8:	ldp	x23, x24, [sp, #48]
   318dc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   318e0:	ldr	x1, [x0, #2576]
   318e4:	add	x0, x0, #0xa10
   318e8:	blr	x1
   318ec:	str	w25, [x19, x0]
   318f0:	mov	w0, w20
   318f4:	ldp	x19, x20, [sp, #16]
   318f8:	ldp	x25, x26, [sp, #64]
   318fc:	ldp	x27, x28, [sp, #80]
   31900:	ldp	x29, x30, [sp], #160
   31904:	ret
   31908:	mov	x2, #0x1                   	// #1
   3190c:	sub	x2, x2, x28
   31910:	cmp	x3, x2
   31914:	b.cs	31968 <mpfr_expm1@@Base+0x2c0>  // b.hs, b.nlast
   31918:	mov	w4, w23
   3191c:	mov	w3, #0x0                   	// #0
   31920:	bl	c540 <mpfr_round_near_x@plt>
   31924:	mov	w20, w0
   31928:	cbz	w0, 31b60 <mpfr_expm1@@Base+0x4b8>
   3192c:	mov	w0, w20
   31930:	ldp	x19, x20, [sp, #16]
   31934:	ldp	x21, x22, [sp, #32]
   31938:	ldp	x23, x24, [sp, #48]
   3193c:	ldp	x25, x26, [sp, #64]
   31940:	ldp	x27, x28, [sp, #80]
   31944:	ldp	x29, x30, [sp], #160
   31948:	ret
   3194c:	ldr	x24, [x0]
   31950:	cmp	w3, #0x0
   31954:	add	x3, x24, #0x1
   31958:	b.le	31908 <mpfr_expm1@@Base+0x260>
   3195c:	neg	x2, x28
   31960:	cmp	x3, x2
   31964:	b.cc	31b4c <mpfr_expm1@@Base+0x4a4>  // b.lo, b.ul, b.last
   31968:	mrs	x19, tpidr_el0
   3196c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31970:	ldr	x1, [x0, #2576]
   31974:	add	x0, x0, #0xa10
   31978:	blr	x1
   3197c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   31980:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   31984:	mov	x20, #0x7                   	// #7
   31988:	ldr	w0, [x19, x0]
   3198c:	str	w0, [sp, #100]
   31990:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31994:	ldr	x2, [x0, #2512]
   31998:	add	x0, x0, #0x9d0
   3199c:	blr	x2
   319a0:	add	x2, x19, x0
   319a4:	ldr	x26, [x19, x0]
   319a8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   319ac:	ldr	x4, [x0, #2544]
   319b0:	add	x0, x0, #0x9f0
   319b4:	blr	x4
   319b8:	str	x3, [x2]
   319bc:	cmp	x24, #0x1
   319c0:	ldr	x27, [x19, x0]
   319c4:	str	x1, [x19, x0]
   319c8:	b.ne	31758 <mpfr_expm1@@Base+0xb0>  // b.any
   319cc:	nop
   319d0:	sub	x20, x20, x28
   319d4:	add	x25, sp, #0x80
   319d8:	b	31780 <mpfr_expm1@@Base+0xd8>
   319dc:	adrp	x2, 7f000 <__gmpfr_l2b@@Base+0x200>
   319e0:	add	x4, sp, #0x78
   319e4:	mov	x7, #0x40                  	// #64
   319e8:	mov	w6, #0x1                   	// #1
   319ec:	ldr	x2, [x2, #4048]
   319f0:	add	x25, sp, #0x80
   319f4:	mov	w3, #0x2                   	// #2
   319f8:	mov	x0, x25
   319fc:	str	x7, [sp, #128]
   31a00:	str	w6, [sp, #136]
   31a04:	str	x4, [sp, #152]
   31a08:	bl	c620 <mpfr_div@plt>
   31a0c:	mov	x1, x24
   31a10:	mov	x0, x25
   31a14:	mov	x2, #0x0                   	// #0
   31a18:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   31a1c:	cmp	w0, #0x0
   31a20:	b.gt	31b68 <mpfr_expm1@@Base+0x4c0>
   31a24:	ldr	x24, [x21]
   31a28:	add	x0, x24, #0x1
   31a2c:	cmp	x0, x20
   31a30:	b.cc	31c04 <mpfr_expm1@@Base+0x55c>  // b.lo, b.ul, b.last
   31a34:	cmp	x24, #0x1
   31a38:	b.ne	31758 <mpfr_expm1@@Base+0xb0>  // b.any
   31a3c:	mov	x20, #0x7                   	// #7
   31a40:	b	31780 <mpfr_expm1@@Base+0xd8>
   31a44:	ldr	x1, [sp, #104]
   31a48:	mov	x0, #0xfffffffffffffeff    	// #-257
   31a4c:	movk	x0, #0x7fff, lsl #48
   31a50:	sub	x0, x0, x20
   31a54:	cmp	x0, x1
   31a58:	b.lt	31bd4 <mpfr_expm1@@Base+0x52c>  // b.tstop
   31a5c:	ldr	x0, [sp, #104]
   31a60:	add	x20, x20, x0
   31a64:	mov	x0, x25
   31a68:	mov	x1, x20
   31a6c:	add	x2, x20, x20, lsr #63
   31a70:	asr	x2, x2, #1
   31a74:	str	x2, [sp, #104]
   31a78:	bl	bed0 <mpfr_set_prec@plt>
   31a7c:	b	31794 <mpfr_expm1@@Base+0xec>
   31a80:	mov	w3, w23
   31a84:	mov	x0, x21
   31a88:	mov	x2, #0x0                   	// #0
   31a8c:	mov	x1, #0xffffffffffffffff    	// #-1
   31a90:	bl	ba80 <mpfr_set_si_2exp@plt>
   31a94:	mov	w20, #0xffffffff            	// #-1
   31a98:	sub	w0, w23, #0x1
   31a9c:	cmp	w0, #0x1
   31aa0:	b.ls	31b8c <mpfr_expm1@@Base+0x4e4>  // b.plast
   31aa4:	mov	x0, x25
   31aa8:	bl	c070 <mpfr_clear@plt>
   31aac:	ldr	x1, [x21, #16]
   31ab0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31ab4:	ldr	x2, [x0, #2576]
   31ab8:	add	x0, x0, #0xa10
   31abc:	blr	x2
   31ac0:	ldr	w2, [sp, #100]
   31ac4:	str	w2, [x19, x0]
   31ac8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31acc:	ldr	x2, [x0, #2512]
   31ad0:	add	x0, x0, #0x9d0
   31ad4:	blr	x2
   31ad8:	str	x26, [x19, x0]
   31adc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31ae0:	ldr	x2, [x0, #2544]
   31ae4:	add	x0, x0, #0x9f0
   31ae8:	blr	x2
   31aec:	str	x27, [x19, x0]
   31af0:	cmp	x1, x27
   31af4:	ccmp	x1, x26, #0x1, le
   31af8:	b.lt	31894 <mpfr_expm1@@Base+0x1ec>  // b.tstop
   31afc:	b	318cc <mpfr_expm1@@Base+0x224>
   31b00:	mov	x1, #0x2                   	// #2
   31b04:	movk	x1, #0x8000, lsl #48
   31b08:	cmp	x28, x1
   31b0c:	b.eq	31ba4 <mpfr_expm1@@Base+0x4fc>  // b.none
   31b10:	ldr	w1, [x22, #8]
   31b14:	cmp	x28, x2
   31b18:	b.ne	31b38 <mpfr_expm1@@Base+0x490>  // b.any
   31b1c:	cmp	w1, #0x0
   31b20:	b.le	31bec <mpfr_expm1@@Base+0x544>
   31b24:	mov	w0, #0x1                   	// #1
   31b28:	mov	w20, #0x0                   	// #0
   31b2c:	str	w0, [x21, #8]
   31b30:	str	x28, [x21, #16]
   31b34:	b	318ac <mpfr_expm1@@Base+0x204>
   31b38:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   31b3c:	mov	w20, #0x0                   	// #0
   31b40:	str	w1, [x21, #8]
   31b44:	str	x0, [x21, #16]
   31b48:	b	318ac <mpfr_expm1@@Base+0x204>
   31b4c:	mov	w4, w23
   31b50:	mov	w3, #0x1                   	// #1
   31b54:	bl	c540 <mpfr_round_near_x@plt>
   31b58:	mov	w20, w0
   31b5c:	cbnz	w0, 3192c <mpfr_expm1@@Base+0x284>
   31b60:	ldr	x24, [x21]
   31b64:	b	31968 <mpfr_expm1@@Base+0x2c0>
   31b68:	mov	x0, x25
   31b6c:	mov	w1, #0x2                   	// #2
   31b70:	bl	c190 <mpfr_get_si@plt>
   31b74:	tbz	x0, #63, 31b9c <mpfr_expm1@@Base+0x4f4>
   31b78:	neg	x20, x0
   31b7c:	b	31a24 <mpfr_expm1@@Base+0x37c>
   31b80:	add	x25, sp, #0x80
   31b84:	mov	x20, #0x7                   	// #7
   31b88:	b	31780 <mpfr_expm1@@Base+0xd8>
   31b8c:	mov	x0, x21
   31b90:	mov	w20, #0x1                   	// #1
   31b94:	bl	c460 <mpfr_nexttozero@plt>
   31b98:	b	31aa4 <mpfr_expm1@@Base+0x3fc>
   31b9c:	ldr	x24, [x21]
   31ba0:	b	31a34 <mpfr_expm1@@Base+0x38c>
   31ba4:	mrs	x1, tpidr_el0
   31ba8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31bac:	ldr	x2, [x0, #2576]
   31bb0:	add	x0, x0, #0xa10
   31bb4:	blr	x2
   31bb8:	add	x0, x1, x0
   31bbc:	mov	w20, #0x0                   	// #0
   31bc0:	str	x28, [x21, #16]
   31bc4:	ldr	w1, [x0]
   31bc8:	orr	w1, w1, #0x4
   31bcc:	str	w1, [x0]
   31bd0:	b	318ac <mpfr_expm1@@Base+0x204>
   31bd4:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   31bd8:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   31bdc:	add	x2, x2, #0xd20
   31be0:	add	x0, x0, #0xbb0
   31be4:	mov	w1, #0xa5                  	// #165
   31be8:	bl	cb40 <mpfr_assert_fail@plt>
   31bec:	mov	w3, w23
   31bf0:	mov	x2, #0x0                   	// #0
   31bf4:	mov	x1, #0xffffffffffffffff    	// #-1
   31bf8:	bl	ba80 <mpfr_set_si_2exp@plt>
   31bfc:	mov	w20, w0
   31c00:	b	318ac <mpfr_expm1@@Base+0x204>
   31c04:	adrp	x1, 7f000 <__gmpfr_l2b@@Base+0x200>
   31c08:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31c0c:	ldr	x2, [x0, #2576]
   31c10:	add	x0, x0, #0xa10
   31c14:	blr	x2
   31c18:	mov	x2, x20
   31c1c:	add	x24, x19, x0
   31c20:	ldr	x1, [x1, #4000]
   31c24:	mov	w4, w23
   31c28:	mov	w3, #0x0                   	// #0
   31c2c:	str	wzr, [x19, x0]
   31c30:	mov	x0, x21
   31c34:	bl	c540 <mpfr_round_near_x@plt>
   31c38:	mov	w20, w0
   31c3c:	cbz	w0, 31b9c <mpfr_expm1@@Base+0x4f4>
   31c40:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31c44:	ldr	x2, [x0, #2512]
   31c48:	add	x0, x0, #0x9d0
   31c4c:	blr	x2
   31c50:	ldr	w1, [x24]
   31c54:	str	x26, [x19, x0]
   31c58:	ldr	w0, [sp, #100]
   31c5c:	ldr	x2, [x21, #16]
   31c60:	orr	w25, w0, w1
   31c64:	str	w25, [x24]
   31c68:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31c6c:	ldr	x1, [x0, #2544]
   31c70:	add	x0, x0, #0x9f0
   31c74:	blr	x1
   31c78:	str	x27, [x19, x0]
   31c7c:	cmp	x26, x2
   31c80:	ccmp	x27, x2, #0x1, le
   31c84:	b.lt	31894 <mpfr_expm1@@Base+0x1ec>  // b.tstop
   31c88:	orr	w25, w25, #0x8
   31c8c:	str	w25, [x24]
   31c90:	ldp	x25, x26, [sp, #64]
   31c94:	b	318ac <mpfr_expm1@@Base+0x204>
   31c98:	mov	w1, w23
   31c9c:	mov	x0, x21
   31ca0:	mov	w2, #0x1                   	// #1
   31ca4:	bl	bf40 <mpfr_overflow@plt>
   31ca8:	ldr	w1, [sp, #100]
   31cac:	mov	w20, w0
   31cb0:	orr	w1, w1, #0x2
   31cb4:	str	w1, [sp, #100]
   31cb8:	b	3183c <mpfr_expm1@@Base+0x194>
   31cbc:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   31cc0:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   31cc4:	add	x2, x2, #0xd08
   31cc8:	add	x0, x0, #0xbb0
   31ccc:	mov	w1, #0x72                  	// #114
   31cd0:	bl	cb40 <mpfr_assert_fail@plt>
   31cd4:	nop

0000000000031cd8 <mpfr_log2@@Base>:
   31cd8:	stp	x29, x30, [sp, #-176]!
   31cdc:	mov	x29, sp
   31ce0:	stp	x23, x24, [sp, #48]
   31ce4:	mov	x24, x1
   31ce8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   31cec:	stp	x19, x20, [sp, #16]
   31cf0:	mov	x20, x0
   31cf4:	ldr	x0, [x24, #16]
   31cf8:	cmp	x0, x1
   31cfc:	b.le	31fe0 <mpfr_log2@@Base+0x308>
   31d00:	ldr	w0, [x24, #8]
   31d04:	tbnz	w0, #31, 31f98 <mpfr_log2@@Base+0x2c0>
   31d08:	mov	x0, x24
   31d0c:	mov	x1, #0x1                   	// #1
   31d10:	stp	x21, x22, [sp, #32]
   31d14:	mov	w21, w2
   31d18:	mov	x2, #0x0                   	// #0
   31d1c:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   31d20:	mov	w19, w0
   31d24:	cbz	w0, 32014 <mpfr_log2@@Base+0x33c>
   31d28:	ldr	x2, [x24, #16]
   31d2c:	mov	x0, x24
   31d30:	mov	x1, #0x1                   	// #1
   31d34:	sub	x2, x2, #0x1
   31d38:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   31d3c:	cbz	w0, 3202c <mpfr_log2@@Base+0x354>
   31d40:	stp	x27, x28, [sp, #80]
   31d44:	mrs	x28, tpidr_el0
   31d48:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31d4c:	ldr	x1, [x0, #2576]
   31d50:	add	x0, x0, #0xa10
   31d54:	blr	x1
   31d58:	stp	x25, x26, [sp, #64]
   31d5c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   31d60:	ldr	w0, [x28, x0]
   31d64:	str	w0, [sp, #100]
   31d68:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   31d6c:	ldr	x23, [x20]
   31d70:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31d74:	ldr	x2, [x0, #2512]
   31d78:	add	x0, x0, #0x9d0
   31d7c:	blr	x2
   31d80:	add	x2, x28, x0
   31d84:	ldr	x25, [x28, x0]
   31d88:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31d8c:	ldr	x4, [x0, #2544]
   31d90:	add	x0, x0, #0x9f0
   31d94:	blr	x4
   31d98:	str	x3, [x2]
   31d9c:	cmp	x23, #0x1
   31da0:	ldr	x26, [x28, x0]
   31da4:	str	x1, [x28, x0]
   31da8:	add	x1, x23, #0x3
   31dac:	b.eq	32050 <mpfr_log2@@Base+0x378>  // b.none
   31db0:	b.le	320a8 <mpfr_log2@@Base+0x3d0>
   31db4:	sub	x0, x23, #0x1
   31db8:	mov	w19, #0x40                  	// #64
   31dbc:	clz	x0, x0
   31dc0:	sub	w0, w19, w0
   31dc4:	add	x19, x1, w0, sxtw
   31dc8:	mov	x0, #0x40                  	// #64
   31dcc:	add	x27, sp, #0x70
   31dd0:	mov	x1, x19
   31dd4:	add	x22, sp, #0x90
   31dd8:	str	x0, [sp, #104]
   31ddc:	mov	x0, x27
   31de0:	bl	ca80 <mpfr_init2@plt>
   31de4:	mov	x0, x22
   31de8:	mov	x1, x19
   31dec:	bl	ca80 <mpfr_init2@plt>
   31df0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31df4:	ldr	x1, [x0, #2560]
   31df8:	add	x0, x0, #0xa00
   31dfc:	blr	x1
   31e00:	mov	w2, #0x3                   	// #3
   31e04:	add	x1, x28, x0
   31e08:	mov	x0, x27
   31e0c:	bl	c380 <mpfr_cache@plt>
   31e10:	mov	x1, x24
   31e14:	mov	w2, #0x0                   	// #0
   31e18:	mov	x0, x22
   31e1c:	bl	c090 <mpfr_log@plt>
   31e20:	mov	x2, x27
   31e24:	mov	x1, x22
   31e28:	mov	x0, x27
   31e2c:	mov	w3, #0x0                   	// #0
   31e30:	bl	c620 <mpfr_div@plt>
   31e34:	ldr	x0, [sp, #128]
   31e38:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   31e3c:	sub	x2, x19, #0x3
   31e40:	cmp	x0, x1
   31e44:	b.le	31f50 <mpfr_log2@@Base+0x278>
   31e48:	ldr	x1, [sp, #112]
   31e4c:	cmp	w21, #0x0
   31e50:	ldr	x0, [sp, #136]
   31e54:	sub	x1, x1, #0x1
   31e58:	cinc	x3, x23, eq  // eq = none
   31e5c:	asr	x1, x1, #6
   31e60:	add	x1, x1, #0x1
   31e64:	bl	c370 <mpfr_round_p@plt>
   31e68:	cbz	w0, 31f50 <mpfr_log2@@Base+0x278>
   31e6c:	ldr	w3, [sp, #120]
   31e70:	mov	w2, w21
   31e74:	mov	x1, x27
   31e78:	mov	x0, x20
   31e7c:	bl	c6a0 <mpfr_set4@plt>
   31e80:	mov	w19, w0
   31e84:	mov	x0, x27
   31e88:	bl	c070 <mpfr_clear@plt>
   31e8c:	mov	x0, x22
   31e90:	bl	c070 <mpfr_clear@plt>
   31e94:	ldr	x1, [x20, #16]
   31e98:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31e9c:	ldr	x2, [x0, #2576]
   31ea0:	add	x0, x0, #0xa10
   31ea4:	blr	x2
   31ea8:	ldr	w2, [sp, #100]
   31eac:	str	w2, [x28, x0]
   31eb0:	add	x2, x28, x0
   31eb4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31eb8:	ldr	x3, [x0, #2512]
   31ebc:	add	x0, x0, #0x9d0
   31ec0:	blr	x3
   31ec4:	str	x25, [x28, x0]
   31ec8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31ecc:	ldr	x3, [x0, #2544]
   31ed0:	add	x0, x0, #0x9f0
   31ed4:	blr	x3
   31ed8:	str	x26, [x28, x0]
   31edc:	cmp	x26, x1
   31ee0:	ccmp	x25, x1, #0x0, ge  // ge = tcont
   31ee4:	b.le	31f1c <mpfr_log2@@Base+0x244>
   31ee8:	mov	w2, w21
   31eec:	mov	w1, w19
   31ef0:	mov	x0, x20
   31ef4:	bl	cb30 <mpfr_check_range@plt>
   31ef8:	mov	w19, w0
   31efc:	mov	w0, w19
   31f00:	ldp	x19, x20, [sp, #16]
   31f04:	ldp	x21, x22, [sp, #32]
   31f08:	ldp	x23, x24, [sp, #48]
   31f0c:	ldp	x25, x26, [sp, #64]
   31f10:	ldp	x27, x28, [sp, #80]
   31f14:	ldp	x29, x30, [sp], #176
   31f18:	ret
   31f1c:	cbnz	w19, 31f40 <mpfr_log2@@Base+0x268>
   31f20:	ldp	x21, x22, [sp, #32]
   31f24:	ldp	x25, x26, [sp, #64]
   31f28:	ldp	x27, x28, [sp, #80]
   31f2c:	mov	w0, w19
   31f30:	ldp	x19, x20, [sp, #16]
   31f34:	ldp	x23, x24, [sp, #48]
   31f38:	ldp	x29, x30, [sp], #176
   31f3c:	ret
   31f40:	ldr	w0, [sp, #100]
   31f44:	orr	w24, w0, #0x8
   31f48:	str	w24, [x2]
   31f4c:	b	31f20 <mpfr_log2@@Base+0x248>
   31f50:	ldr	x1, [sp, #104]
   31f54:	mov	x0, #0xfffffffffffffeff    	// #-257
   31f58:	movk	x0, #0x7fff, lsl #48
   31f5c:	sub	x0, x0, x19
   31f60:	cmp	x0, x1
   31f64:	b.lt	32090 <mpfr_log2@@Base+0x3b8>  // b.tstop
   31f68:	ldr	x0, [sp, #104]
   31f6c:	add	x19, x19, x0
   31f70:	mov	x0, x27
   31f74:	mov	x1, x19
   31f78:	add	x2, x19, x19, lsr #63
   31f7c:	asr	x2, x2, #1
   31f80:	str	x2, [sp, #104]
   31f84:	bl	bed0 <mpfr_set_prec@plt>
   31f88:	mov	x1, x19
   31f8c:	mov	x0, x22
   31f90:	bl	bed0 <mpfr_set_prec@plt>
   31f94:	b	31df0 <mpfr_log2@@Base+0x118>
   31f98:	mrs	x1, tpidr_el0
   31f9c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   31fa0:	ldr	x2, [x0, #2576]
   31fa4:	add	x0, x0, #0xa10
   31fa8:	blr	x2
   31fac:	add	x0, x1, x0
   31fb0:	mov	x1, #0x2                   	// #2
   31fb4:	movk	x1, #0x8000, lsl #48
   31fb8:	str	x1, [x20, #16]
   31fbc:	mov	w19, #0x0                   	// #0
   31fc0:	ldr	w1, [x0]
   31fc4:	ldp	x23, x24, [sp, #48]
   31fc8:	orr	w1, w1, #0x4
   31fcc:	str	w1, [x0]
   31fd0:	mov	w0, w19
   31fd4:	ldp	x19, x20, [sp, #16]
   31fd8:	ldp	x29, x30, [sp], #176
   31fdc:	ret
   31fe0:	mov	x2, #0x2                   	// #2
   31fe4:	movk	x2, #0x8000, lsl #48
   31fe8:	cmp	x0, x2
   31fec:	b.eq	31f98 <mpfr_log2@@Base+0x2c0>  // b.none
   31ff0:	cmp	x0, x1
   31ff4:	b.ne	32058 <mpfr_log2@@Base+0x380>  // b.any
   31ff8:	ldr	w1, [x24, #8]
   31ffc:	tbnz	w1, #31, 31f98 <mpfr_log2@@Base+0x2c0>
   32000:	mov	w1, #0x1                   	// #1
   32004:	mov	w19, #0x0                   	// #0
   32008:	str	w1, [x20, #8]
   3200c:	str	x0, [x20, #16]
   32010:	b	31f2c <mpfr_log2@@Base+0x254>
   32014:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   32018:	mov	w1, #0x1                   	// #1
   3201c:	ldp	x21, x22, [sp, #32]
   32020:	str	w1, [x20, #8]
   32024:	str	x0, [x20, #16]
   32028:	b	31f2c <mpfr_log2@@Base+0x254>
   3202c:	ldr	x1, [x24, #16]
   32030:	mov	w3, w21
   32034:	mov	x0, x20
   32038:	mov	x2, #0x0                   	// #0
   3203c:	sub	x1, x1, #0x1
   32040:	bl	ba80 <mpfr_set_si_2exp@plt>
   32044:	mov	w19, w0
   32048:	ldp	x21, x22, [sp, #32]
   3204c:	b	31f2c <mpfr_log2@@Base+0x254>
   32050:	mov	x19, #0x4                   	// #4
   32054:	b	31dc8 <mpfr_log2@@Base+0xf0>
   32058:	mrs	x2, tpidr_el0
   3205c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   32060:	ldr	x3, [x0, #2576]
   32064:	add	x0, x0, #0xa10
   32068:	blr	x3
   3206c:	add	x0, x2, x0
   32070:	str	x1, [x20, #16]
   32074:	mov	w2, #0xffffffff            	// #-1
   32078:	mov	w19, #0x0                   	// #0
   3207c:	str	w2, [x20, #8]
   32080:	ldr	w1, [x0]
   32084:	orr	w1, w1, #0x20
   32088:	str	w1, [x0]
   3208c:	b	31f2c <mpfr_log2@@Base+0x254>
   32090:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   32094:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   32098:	add	x2, x2, #0xd20
   3209c:	add	x0, x0, #0xbb8
   320a0:	mov	w1, #0x80                  	// #128
   320a4:	bl	cb40 <mpfr_assert_fail@plt>
   320a8:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   320ac:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   320b0:	add	x2, x2, #0xd08
   320b4:	add	x0, x0, #0xbb8
   320b8:	mov	w1, #0x6b                  	// #107
   320bc:	bl	cb40 <mpfr_assert_fail@plt>

00000000000320c0 <mpfr_log10@@Base>:
   320c0:	stp	x29, x30, [sp, #-176]!
   320c4:	mov	x29, sp
   320c8:	stp	x19, x20, [sp, #16]
   320cc:	mov	x19, x1
   320d0:	mov	x20, x0
   320d4:	stp	x21, x22, [sp, #32]
   320d8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   320dc:	ldr	x0, [x19, #16]
   320e0:	cmp	x0, x1
   320e4:	b.le	323e8 <mpfr_log10@@Base+0x328>
   320e8:	ldr	w0, [x19, #8]
   320ec:	tbnz	w0, #31, 3234c <mpfr_log10@@Base+0x28c>
   320f0:	mov	w22, w2
   320f4:	mov	x0, x19
   320f8:	mov	x2, #0x0                   	// #0
   320fc:	mov	x1, #0x1                   	// #1
   32100:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   32104:	mov	w21, w0
   32108:	cbz	w0, 32320 <mpfr_log10@@Base+0x260>
   3210c:	stp	x27, x28, [sp, #80]
   32110:	mrs	x28, tpidr_el0
   32114:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   32118:	ldr	x1, [x0, #2576]
   3211c:	add	x0, x0, #0xa10
   32120:	blr	x1
   32124:	stp	x23, x24, [sp, #48]
   32128:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   3212c:	ldr	w0, [x28, x0]
   32130:	str	w0, [sp, #100]
   32134:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   32138:	stp	x25, x26, [sp, #64]
   3213c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   32140:	ldr	x2, [x0, #2512]
   32144:	add	x0, x0, #0x9d0
   32148:	blr	x2
   3214c:	add	x2, x28, x0
   32150:	ldr	x24, [x20]
   32154:	ldr	x26, [x28, x0]
   32158:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3215c:	ldr	x4, [x0, #2544]
   32160:	add	x0, x0, #0x9f0
   32164:	blr	x4
   32168:	str	x3, [x2]
   3216c:	cmp	x24, #0x1
   32170:	ldr	x27, [x28, x0]
   32174:	str	x1, [x28, x0]
   32178:	add	x1, x24, #0x4
   3217c:	b.eq	32344 <mpfr_log10@@Base+0x284>  // b.none
   32180:	b.le	324c4 <mpfr_log10@@Base+0x404>
   32184:	sub	x0, x24, #0x1
   32188:	mov	w21, #0x40                  	// #64
   3218c:	clz	x0, x0
   32190:	sub	w0, w21, w0
   32194:	add	x21, x1, w0, sxtw
   32198:	mov	x0, #0x40                  	// #64
   3219c:	add	x25, sp, #0x70
   321a0:	mov	x1, x21
   321a4:	add	x23, sp, #0x90
   321a8:	str	x0, [sp, #104]
   321ac:	mov	x0, x25
   321b0:	bl	ca80 <mpfr_init2@plt>
   321b4:	mov	x0, x23
   321b8:	mov	x1, x21
   321bc:	bl	ca80 <mpfr_init2@plt>
   321c0:	mov	w3, #0x0                   	// #0
   321c4:	mov	x2, #0x0                   	// #0
   321c8:	mov	x1, #0xa                   	// #10
   321cc:	mov	x0, x25
   321d0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   321d4:	mov	x1, x25
   321d8:	mov	w2, #0x3                   	// #3
   321dc:	mov	x0, x25
   321e0:	bl	c090 <mpfr_log@plt>
   321e4:	mov	x1, x19
   321e8:	mov	w2, #0x0                   	// #0
   321ec:	mov	x0, x23
   321f0:	bl	c090 <mpfr_log@plt>
   321f4:	mov	x2, x25
   321f8:	mov	x1, x23
   321fc:	mov	x0, x25
   32200:	mov	w3, #0x0                   	// #0
   32204:	bl	c620 <mpfr_div@plt>
   32208:	ldr	x0, [sp, #128]
   3220c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   32210:	sub	x2, x21, #0x4
   32214:	cmp	x0, x1
   32218:	b.le	32394 <mpfr_log10@@Base+0x2d4>
   3221c:	ldr	x1, [sp, #112]
   32220:	cmp	w22, #0x0
   32224:	ldr	x0, [sp, #136]
   32228:	sub	x1, x1, #0x1
   3222c:	cinc	x3, x24, eq  // eq = none
   32230:	asr	x1, x1, #6
   32234:	add	x1, x1, #0x1
   32238:	bl	c370 <mpfr_round_p@plt>
   3223c:	cbz	w0, 32394 <mpfr_log10@@Base+0x2d4>
   32240:	ldr	w3, [sp, #120]
   32244:	mov	w2, w22
   32248:	mov	x1, x25
   3224c:	mov	x0, x20
   32250:	bl	c6a0 <mpfr_set4@plt>
   32254:	mov	w21, w0
   32258:	mov	x0, x25
   3225c:	bl	c070 <mpfr_clear@plt>
   32260:	mov	x0, x23
   32264:	bl	c070 <mpfr_clear@plt>
   32268:	ldr	x1, [x20, #16]
   3226c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   32270:	ldr	x2, [x0, #2576]
   32274:	add	x0, x0, #0xa10
   32278:	blr	x2
   3227c:	ldr	w2, [sp, #100]
   32280:	str	w2, [x28, x0]
   32284:	add	x2, x28, x0
   32288:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3228c:	ldr	x3, [x0, #2512]
   32290:	add	x0, x0, #0x9d0
   32294:	blr	x3
   32298:	str	x26, [x28, x0]
   3229c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   322a0:	ldr	x3, [x0, #2544]
   322a4:	add	x0, x0, #0x9f0
   322a8:	blr	x3
   322ac:	str	x27, [x28, x0]
   322b0:	cmp	x27, x1
   322b4:	ccmp	x26, x1, #0x0, ge  // ge = tcont
   322b8:	b.le	322f0 <mpfr_log10@@Base+0x230>
   322bc:	mov	w1, w21
   322c0:	mov	w2, w22
   322c4:	mov	x0, x20
   322c8:	bl	cb30 <mpfr_check_range@plt>
   322cc:	ldp	x23, x24, [sp, #48]
   322d0:	mov	w21, w0
   322d4:	ldp	x25, x26, [sp, #64]
   322d8:	ldp	x27, x28, [sp, #80]
   322dc:	mov	w0, w21
   322e0:	ldp	x19, x20, [sp, #16]
   322e4:	ldp	x21, x22, [sp, #32]
   322e8:	ldp	x29, x30, [sp], #176
   322ec:	ret
   322f0:	cbz	w21, 32300 <mpfr_log10@@Base+0x240>
   322f4:	ldr	w0, [sp, #100]
   322f8:	orr	w25, w0, #0x8
   322fc:	str	w25, [x2]
   32300:	mov	w0, w21
   32304:	ldp	x19, x20, [sp, #16]
   32308:	ldp	x21, x22, [sp, #32]
   3230c:	ldp	x23, x24, [sp, #48]
   32310:	ldp	x25, x26, [sp, #64]
   32314:	ldp	x27, x28, [sp, #80]
   32318:	ldp	x29, x30, [sp], #176
   3231c:	ret
   32320:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   32324:	mov	w1, #0x1                   	// #1
   32328:	str	w1, [x20, #8]
   3232c:	str	x0, [x20, #16]
   32330:	mov	w0, w21
   32334:	ldp	x19, x20, [sp, #16]
   32338:	ldp	x21, x22, [sp, #32]
   3233c:	ldp	x29, x30, [sp], #176
   32340:	ret
   32344:	mov	x21, #0x5                   	// #5
   32348:	b	32198 <mpfr_log10@@Base+0xd8>
   3234c:	mrs	x1, tpidr_el0
   32350:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   32354:	ldr	x2, [x0, #2576]
   32358:	add	x0, x0, #0xa10
   3235c:	blr	x2
   32360:	add	x0, x1, x0
   32364:	mov	x1, #0x2                   	// #2
   32368:	movk	x1, #0x8000, lsl #48
   3236c:	str	x1, [x20, #16]
   32370:	mov	w21, #0x0                   	// #0
   32374:	ldr	w1, [x0]
   32378:	ldp	x19, x20, [sp, #16]
   3237c:	orr	w1, w1, #0x4
   32380:	str	w1, [x0]
   32384:	mov	w0, w21
   32388:	ldp	x21, x22, [sp, #32]
   3238c:	ldp	x29, x30, [sp], #176
   32390:	ret
   32394:	ldr	w0, [sp, #120]
   32398:	cmp	w0, #0x0
   3239c:	b.gt	3241c <mpfr_log10@@Base+0x35c>
   323a0:	ldr	x1, [sp, #104]
   323a4:	mov	x0, #0xfffffffffffffeff    	// #-257
   323a8:	movk	x0, #0x7fff, lsl #48
   323ac:	sub	x0, x0, x21
   323b0:	cmp	x0, x1
   323b4:	b.lt	324ac <mpfr_log10@@Base+0x3ec>  // b.tstop
   323b8:	ldr	x0, [sp, #104]
   323bc:	add	x21, x21, x0
   323c0:	mov	x0, x25
   323c4:	mov	x1, x21
   323c8:	add	x2, x21, x21, lsr #63
   323cc:	asr	x2, x2, #1
   323d0:	str	x2, [sp, #104]
   323d4:	bl	bed0 <mpfr_set_prec@plt>
   323d8:	mov	x1, x21
   323dc:	mov	x0, x23
   323e0:	bl	bed0 <mpfr_set_prec@plt>
   323e4:	b	321c0 <mpfr_log10@@Base+0x100>
   323e8:	mov	x2, #0x2                   	// #2
   323ec:	movk	x2, #0x8000, lsl #48
   323f0:	cmp	x0, x2
   323f4:	b.eq	3234c <mpfr_log10@@Base+0x28c>  // b.none
   323f8:	cmp	x0, x1
   323fc:	b.ne	32474 <mpfr_log10@@Base+0x3b4>  // b.any
   32400:	ldr	w1, [x19, #8]
   32404:	tbnz	w1, #31, 3234c <mpfr_log10@@Base+0x28c>
   32408:	mov	w1, #0x1                   	// #1
   3240c:	mov	w21, #0x0                   	// #0
   32410:	str	w1, [x20, #8]
   32414:	str	x0, [x20, #16]
   32418:	b	322dc <mpfr_log10@@Base+0x21c>
   3241c:	mov	x0, x25
   32420:	bl	c160 <mpfr_integer_p@plt>
   32424:	cbz	w0, 323a0 <mpfr_log10@@Base+0x2e0>
   32428:	mov	x0, x25
   3242c:	mov	w1, #0x0                   	// #0
   32430:	bl	be50 <mpfr_fits_ulong_p@plt>
   32434:	cbz	w0, 323a0 <mpfr_log10@@Base+0x2e0>
   32438:	mov	w1, #0x0                   	// #0
   3243c:	mov	x0, x25
   32440:	bl	bca0 <mpfr_get_ui@plt>
   32444:	mov	x2, x0
   32448:	mov	w3, #0x0                   	// #0
   3244c:	mov	x0, x23
   32450:	mov	x1, #0xa                   	// #10
   32454:	bl	bb20 <mpfr_ui_pow_ui@plt>
   32458:	cbnz	w0, 323a0 <mpfr_log10@@Base+0x2e0>
   3245c:	mov	x1, x23
   32460:	mov	x0, x19
   32464:	mov	w2, #0x1                   	// #1
   32468:	bl	c9a0 <mpfr_cmp3@plt>
   3246c:	cbnz	w0, 323a0 <mpfr_log10@@Base+0x2e0>
   32470:	b	32240 <mpfr_log10@@Base+0x180>
   32474:	mrs	x2, tpidr_el0
   32478:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3247c:	ldr	x3, [x0, #2576]
   32480:	add	x0, x0, #0xa10
   32484:	blr	x3
   32488:	add	x0, x2, x0
   3248c:	str	x1, [x20, #16]
   32490:	mov	w2, #0xffffffff            	// #-1
   32494:	mov	w21, #0x0                   	// #0
   32498:	str	w2, [x20, #8]
   3249c:	ldr	w1, [x0]
   324a0:	orr	w1, w1, #0x20
   324a4:	str	w1, [x0]
   324a8:	b	322dc <mpfr_log10@@Base+0x21c>
   324ac:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   324b0:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   324b4:	add	x2, x2, #0xd20
   324b8:	add	x0, x0, #0xbc0
   324bc:	mov	w1, #0x88                  	// #136
   324c0:	bl	cb40 <mpfr_assert_fail@plt>
   324c4:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   324c8:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   324cc:	add	x2, x2, #0xd08
   324d0:	add	x0, x0, #0xbc0
   324d4:	mov	w1, #0x69                  	// #105
   324d8:	bl	cb40 <mpfr_assert_fail@plt>
   324dc:	nop

00000000000324e0 <mpfr_ui_pow@@Base>:
   324e0:	stp	x29, x30, [sp, #-144]!
   324e4:	mrs	x4, tpidr_el0
   324e8:	mov	x7, #0xc000000000000001    	// #-4611686018427387903
   324ec:	mov	x29, sp
   324f0:	stp	x19, x20, [sp, #16]
   324f4:	mov	x19, x0
   324f8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   324fc:	ldr	x5, [x0, #2576]
   32500:	add	x0, x0, #0xa10
   32504:	blr	x5
   32508:	ldr	w20, [x4, x0]
   3250c:	mov	x6, #0x3fffffffffffffff    	// #4611686018427387903
   32510:	stp	x23, x24, [sp, #48]
   32514:	add	x24, x4, x0
   32518:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3251c:	ldr	x5, [x0, #2512]
   32520:	add	x0, x0, #0x9d0
   32524:	blr	x5
   32528:	stp	x25, x26, [sp, #64]
   3252c:	mov	x9, #0x40                  	// #64
   32530:	mov	w8, #0x1                   	// #1
   32534:	stp	x27, x28, [sp, #80]
   32538:	add	x28, x4, x0
   3253c:	mov	x23, x2
   32540:	ldr	x26, [x4, x0]
   32544:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   32548:	ldr	x5, [x0, #2544]
   3254c:	add	x0, x0, #0x9f0
   32550:	blr	x5
   32554:	add	x5, sp, #0x68
   32558:	add	x27, x4, x0
   3255c:	stp	x21, x22, [sp, #32]
   32560:	add	x21, sp, #0x70
   32564:	mov	w22, w3
   32568:	mov	x2, #0x0                   	// #0
   3256c:	mov	w3, #0x0                   	// #0
   32570:	str	x7, [x28]
   32574:	str	x9, [sp, #112]
   32578:	str	w8, [sp, #120]
   3257c:	str	x5, [sp, #136]
   32580:	ldr	x25, [x4, x0]
   32584:	mov	x0, x21
   32588:	str	x6, [x27]
   3258c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   32590:	mov	x2, x23
   32594:	mov	x1, x21
   32598:	mov	w3, w22
   3259c:	mov	x0, x19
   325a0:	bl	bd90 <mpfr_pow@plt>
   325a4:	str	x25, [x27]
   325a8:	ldr	w1, [x24]
   325ac:	ldr	x2, [x19, #16]
   325b0:	orr	w1, w20, w1
   325b4:	str	x26, [x28]
   325b8:	str	w1, [x24]
   325bc:	cmp	x26, x2
   325c0:	ccmp	x25, x2, #0x1, le
   325c4:	b.ge	325f4 <mpfr_ui_pow@@Base+0x114>  // b.tcont
   325c8:	mov	w1, w0
   325cc:	mov	w2, w22
   325d0:	mov	x0, x19
   325d4:	bl	cb30 <mpfr_check_range@plt>
   325d8:	ldp	x19, x20, [sp, #16]
   325dc:	ldp	x21, x22, [sp, #32]
   325e0:	ldp	x23, x24, [sp, #48]
   325e4:	ldp	x25, x26, [sp, #64]
   325e8:	ldp	x27, x28, [sp, #80]
   325ec:	ldp	x29, x30, [sp], #144
   325f0:	ret
   325f4:	cbz	w0, 325d8 <mpfr_ui_pow@@Base+0xf8>
   325f8:	orr	w1, w1, #0x8
   325fc:	str	w1, [x24]
   32600:	ldp	x19, x20, [sp, #16]
   32604:	ldp	x21, x22, [sp, #32]
   32608:	ldp	x23, x24, [sp, #48]
   3260c:	ldp	x25, x26, [sp, #64]
   32610:	ldp	x27, x28, [sp, #80]
   32614:	ldp	x29, x30, [sp], #144
   32618:	ret
   3261c:	nop

0000000000032620 <mpfr_ui_pow_ui@@Base>:
   32620:	stp	x29, x30, [sp, #-176]!
   32624:	cmp	x2, #0x1
   32628:	mov	x29, sp
   3262c:	stp	x19, x20, [sp, #16]
   32630:	stp	x23, x24, [sp, #48]
   32634:	mov	x24, x0
   32638:	stp	x25, x26, [sp, #64]
   3263c:	mov	w25, w3
   32640:	b.ls	32858 <mpfr_ui_pow_ui@@Base+0x238>  // b.plast
   32644:	stp	x21, x22, [sp, #32]
   32648:	mov	x20, x2
   3264c:	mov	x22, x1
   32650:	cmp	x1, #0x1
   32654:	mov	x0, x2
   32658:	mov	w19, #0x0                   	// #0
   3265c:	b.ls	32874 <mpfr_ui_pow_ui@@Base+0x254>  // b.plast
   32660:	stp	x27, x28, [sp, #80]
   32664:	nop
   32668:	mov	w21, w19
   3266c:	lsr	x0, x0, #1
   32670:	add	w19, w19, #0x1
   32674:	cbnz	x0, 32668 <mpfr_ui_pow_ui@@Base+0x48>
   32678:	mrs	x23, tpidr_el0
   3267c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   32680:	ldr	x1, [x0, #2576]
   32684:	add	x0, x0, #0xa10
   32688:	blr	x1
   3268c:	ldr	x1, [x24]
   32690:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   32694:	ldr	w0, [x23, x0]
   32698:	add	x26, sp, #0x90
   3269c:	str	w0, [sp, #108]
   326a0:	add	x1, x1, #0x3
   326a4:	add	x1, x1, w19, sxtw
   326a8:	sub	w21, w21, #0x1
   326ac:	str	x1, [sp, #128]
   326b0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   326b4:	ldr	x2, [x0, #2512]
   326b8:	add	x0, x0, #0x9d0
   326bc:	blr	x2
   326c0:	add	x3, x23, x0
   326c4:	ldr	x0, [x23, x0]
   326c8:	str	x0, [sp, #112]
   326cc:	str	x5, [x3]
   326d0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   326d4:	ldr	x2, [x0, #2544]
   326d8:	add	x0, x0, #0x9f0
   326dc:	blr	x2
   326e0:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   326e4:	ldr	x28, [x23, x0]
   326e8:	str	x2, [x23, x0]
   326ec:	mov	x0, x26
   326f0:	bl	ca80 <mpfr_init2@plt>
   326f4:	mov	w0, w21
   326f8:	mov	x1, #0x40                  	// #64
   326fc:	add	x0, x0, #0x2
   32700:	str	x0, [sp, #120]
   32704:	str	x1, [sp, #136]
   32708:	mov	x1, x22
   3270c:	mov	x0, x26
   32710:	mov	w3, #0x2                   	// #2
   32714:	mov	x2, #0x0                   	// #0
   32718:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3271c:	mov	w19, w0
   32720:	cmn	w21, #0x1
   32724:	b.eq	3286c <mpfr_ui_pow_ui@@Base+0x24c>  // b.none
   32728:	mov	w27, w21
   3272c:	nop
   32730:	mov	x2, x26
   32734:	mov	x1, x26
   32738:	mov	x0, x26
   3273c:	mov	w3, #0x2                   	// #2
   32740:	bl	bd50 <mpfr_mul@plt>
   32744:	orr	w19, w19, w0
   32748:	lsr	x0, x20, x27
   3274c:	tbz	w0, #0, 32768 <mpfr_ui_pow_ui@@Base+0x148>
   32750:	mov	x2, x22
   32754:	mov	x1, x26
   32758:	mov	x0, x26
   3275c:	mov	w3, #0x2                   	// #2
   32760:	bl	ba50 <mpfr_mul_ui@plt>
   32764:	orr	w19, w19, w0
   32768:	sub	w27, w27, #0x1
   3276c:	cmn	w27, #0x1
   32770:	b.ne	32730 <mpfr_ui_pow_ui@@Base+0x110>  // b.any
   32774:	ldr	x2, [sp, #120]
   32778:	cbnz	w19, 32890 <mpfr_ui_pow_ui@@Base+0x270>
   3277c:	ldr	w3, [sp, #152]
   32780:	mov	w2, w25
   32784:	mov	x1, x26
   32788:	mov	x0, x24
   3278c:	bl	c6a0 <mpfr_set4@plt>
   32790:	mov	w19, w0
   32794:	mov	x0, x26
   32798:	bl	c070 <mpfr_clear@plt>
   3279c:	ldr	x1, [x24, #16]
   327a0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   327a4:	ldr	x2, [x0, #2576]
   327a8:	add	x0, x0, #0xa10
   327ac:	blr	x2
   327b0:	ldr	w2, [sp, #108]
   327b4:	str	w2, [x23, x0]
   327b8:	add	x2, x23, x0
   327bc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   327c0:	ldr	x3, [x0, #2512]
   327c4:	add	x0, x0, #0x9d0
   327c8:	blr	x3
   327cc:	ldr	x3, [sp, #112]
   327d0:	str	x3, [x23, x0]
   327d4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   327d8:	ldr	x4, [x0, #2544]
   327dc:	add	x0, x0, #0x9f0
   327e0:	blr	x4
   327e4:	str	x28, [x23, x0]
   327e8:	cmp	x28, x1
   327ec:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   327f0:	b.le	32828 <mpfr_ui_pow_ui@@Base+0x208>
   327f4:	mov	w1, w19
   327f8:	mov	w2, w25
   327fc:	mov	x0, x24
   32800:	bl	cb30 <mpfr_check_range@plt>
   32804:	ldp	x21, x22, [sp, #32]
   32808:	mov	w19, w0
   3280c:	ldp	x27, x28, [sp, #80]
   32810:	mov	w0, w19
   32814:	ldp	x19, x20, [sp, #16]
   32818:	ldp	x23, x24, [sp, #48]
   3281c:	ldp	x25, x26, [sp, #64]
   32820:	ldp	x29, x30, [sp], #176
   32824:	ret
   32828:	cbz	w19, 32838 <mpfr_ui_pow_ui@@Base+0x218>
   3282c:	ldr	w0, [sp, #108]
   32830:	orr	w26, w0, #0x8
   32834:	str	w26, [x2]
   32838:	mov	w0, w19
   3283c:	ldp	x19, x20, [sp, #16]
   32840:	ldp	x21, x22, [sp, #32]
   32844:	ldp	x23, x24, [sp, #48]
   32848:	ldp	x25, x26, [sp, #64]
   3284c:	ldp	x27, x28, [sp, #80]
   32850:	ldp	x29, x30, [sp], #176
   32854:	ret
   32858:	b.ne	32914 <mpfr_ui_pow_ui@@Base+0x2f4>  // b.any
   3285c:	mov	x2, #0x0                   	// #0
   32860:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   32864:	mov	w19, w0
   32868:	b	32810 <mpfr_ui_pow_ui@@Base+0x1f0>
   3286c:	mov	x2, #0x1                   	// #1
   32870:	b	32778 <mpfr_ui_pow_ui@@Base+0x158>
   32874:	b.eq	32910 <mpfr_ui_pow_ui@@Base+0x2f0>  // b.none
   32878:	mov	w1, #0x1                   	// #1
   3287c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   32880:	ldp	x21, x22, [sp, #32]
   32884:	str	w1, [x24, #8]
   32888:	str	x0, [x24, #16]
   3288c:	b	32810 <mpfr_ui_pow_ui@@Base+0x1f0>
   32890:	ldr	x1, [sp, #160]
   32894:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   32898:	cmp	x1, x0
   3289c:	b.le	328d0 <mpfr_ui_pow_ui@@Base+0x2b0>
   328a0:	ldr	x1, [sp, #144]
   328a4:	cmp	w25, #0x0
   328a8:	ldr	x4, [sp, #128]
   328ac:	sub	x1, x1, #0x1
   328b0:	ldr	x0, [sp, #168]
   328b4:	asr	x1, x1, #6
   328b8:	ldr	x3, [x24]
   328bc:	sub	x2, x4, x2
   328c0:	add	x1, x1, #0x1
   328c4:	cinc	x3, x3, eq  // eq = none
   328c8:	bl	c370 <mpfr_round_p@plt>
   328cc:	cbnz	w0, 3277c <mpfr_ui_pow_ui@@Base+0x15c>
   328d0:	ldr	x1, [sp, #128]
   328d4:	mov	x0, #0xfffffffffffffeff    	// #-257
   328d8:	movk	x0, #0x7fff, lsl #48
   328dc:	sub	x0, x0, x1
   328e0:	ldr	x1, [sp, #136]
   328e4:	cmp	x0, x1
   328e8:	b.lt	32930 <mpfr_ui_pow_ui@@Base+0x310>  // b.tstop
   328ec:	ldp	x0, x1, [sp, #128]
   328f0:	add	x0, x0, x1
   328f4:	mov	x1, x0
   328f8:	mov	x0, x26
   328fc:	add	x2, x1, x1, lsr #63
   32900:	asr	x2, x2, #1
   32904:	stp	x1, x2, [sp, #128]
   32908:	bl	bed0 <mpfr_set_prec@plt>
   3290c:	b	32708 <mpfr_ui_pow_ui@@Base+0xe8>
   32910:	ldp	x21, x22, [sp, #32]
   32914:	mov	w3, w25
   32918:	mov	x0, x24
   3291c:	mov	x2, #0x0                   	// #0
   32920:	mov	x1, #0x1                   	// #1
   32924:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   32928:	mov	w19, w0
   3292c:	b	32810 <mpfr_ui_pow_ui@@Base+0x1f0>
   32930:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   32934:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   32938:	add	x2, x2, #0x830
   3293c:	add	x0, x0, #0xbc8
   32940:	mov	w1, #0x54                  	// #84
   32944:	bl	cb40 <mpfr_assert_fail@plt>

0000000000032948 <mpfr_min@@Base>:
   32948:	stp	x29, x30, [sp, #-48]!
   3294c:	mov	x29, sp
   32950:	stp	x19, x20, [sp, #16]
   32954:	mov	x19, x2
   32958:	mov	x20, x1
   3295c:	ldr	x2, [x1, #16]
   32960:	stp	x21, x22, [sp, #32]
   32964:	mov	w22, w3
   32968:	mov	x21, x0
   3296c:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   32970:	cmp	x2, x3
   32974:	ldr	x4, [x19, #16]
   32978:	b.le	329e4 <mpfr_min@@Base+0x9c>
   3297c:	mov	x0, #0x2                   	// #2
   32980:	movk	x0, #0x8000, lsl #48
   32984:	cmp	x4, x0
   32988:	b.eq	329c4 <mpfr_min@@Base+0x7c>  // b.none
   3298c:	mov	x1, x19
   32990:	mov	x0, x20
   32994:	mov	w2, #0x1                   	// #1
   32998:	bl	c9a0 <mpfr_cmp3@plt>
   3299c:	cmp	w0, #0x0
   329a0:	b.le	329c4 <mpfr_min@@Base+0x7c>
   329a4:	ldr	w3, [x19, #8]
   329a8:	mov	w2, w22
   329ac:	mov	x0, x21
   329b0:	mov	x1, x19
   329b4:	ldp	x19, x20, [sp, #16]
   329b8:	ldp	x21, x22, [sp, #32]
   329bc:	ldp	x29, x30, [sp], #48
   329c0:	b	c6a0 <mpfr_set4@plt>
   329c4:	ldr	w3, [x20, #8]
   329c8:	mov	w2, w22
   329cc:	mov	x0, x21
   329d0:	mov	x1, x20
   329d4:	ldp	x19, x20, [sp, #16]
   329d8:	ldp	x21, x22, [sp, #32]
   329dc:	ldp	x29, x30, [sp], #48
   329e0:	b	c6a0 <mpfr_set4@plt>
   329e4:	mov	x3, #0x2                   	// #2
   329e8:	movk	x3, #0x8000, lsl #48
   329ec:	cmp	x2, x3
   329f0:	b.ne	32a38 <mpfr_min@@Base+0xf0>  // b.any
   329f4:	cmp	x4, x2
   329f8:	b.ne	329a4 <mpfr_min@@Base+0x5c>  // b.any
   329fc:	mrs	x1, tpidr_el0
   32a00:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   32a04:	ldr	x2, [x0, #2576]
   32a08:	add	x0, x0, #0xa10
   32a0c:	blr	x2
   32a10:	add	x0, x1, x0
   32a14:	ldp	x19, x20, [sp, #16]
   32a18:	str	x4, [x21, #16]
   32a1c:	ldr	w1, [x0]
   32a20:	ldp	x21, x22, [sp, #32]
   32a24:	orr	w1, w1, #0x4
   32a28:	str	w1, [x0]
   32a2c:	mov	w0, #0x0                   	// #0
   32a30:	ldp	x29, x30, [sp], #48
   32a34:	ret
   32a38:	cmp	x4, x3
   32a3c:	b.eq	329c4 <mpfr_min@@Base+0x7c>  // b.none
   32a40:	mov	x3, #0x8000000000000001    	// #-9223372036854775807
   32a44:	cmp	x4, x3
   32a48:	ccmp	x2, x3, #0x0, eq  // eq = none
   32a4c:	b.ne	3298c <mpfr_min@@Base+0x44>  // b.any
   32a50:	ldr	w3, [x1, #8]
   32a54:	tbz	w3, #31, 329a4 <mpfr_min@@Base+0x5c>
   32a58:	mov	w2, w22
   32a5c:	ldp	x19, x20, [sp, #16]
   32a60:	ldp	x21, x22, [sp, #32]
   32a64:	ldp	x29, x30, [sp], #48
   32a68:	b	c6a0 <mpfr_set4@plt>
   32a6c:	nop

0000000000032a70 <mpfr_max@@Base>:
   32a70:	stp	x29, x30, [sp, #-48]!
   32a74:	mov	x29, sp
   32a78:	stp	x19, x20, [sp, #16]
   32a7c:	mov	x20, x2
   32a80:	mov	x19, x1
   32a84:	ldr	x2, [x1, #16]
   32a88:	stp	x21, x22, [sp, #32]
   32a8c:	mov	w22, w3
   32a90:	mov	x21, x0
   32a94:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   32a98:	cmp	x2, x3
   32a9c:	ldr	x4, [x20, #16]
   32aa0:	b.le	32aec <mpfr_max@@Base+0x7c>
   32aa4:	mov	x0, #0x2                   	// #2
   32aa8:	movk	x0, #0x8000, lsl #48
   32aac:	cmp	x4, x0
   32ab0:	b.eq	32acc <mpfr_max@@Base+0x5c>  // b.none
   32ab4:	mov	x1, x20
   32ab8:	mov	x0, x19
   32abc:	mov	w2, #0x1                   	// #1
   32ac0:	bl	c9a0 <mpfr_cmp3@plt>
   32ac4:	cmp	w0, #0x0
   32ac8:	b.le	32b04 <mpfr_max@@Base+0x94>
   32acc:	ldr	w3, [x19, #8]
   32ad0:	mov	w2, w22
   32ad4:	mov	x0, x21
   32ad8:	mov	x1, x19
   32adc:	ldp	x19, x20, [sp, #16]
   32ae0:	ldp	x21, x22, [sp, #32]
   32ae4:	ldp	x29, x30, [sp], #48
   32ae8:	b	c6a0 <mpfr_set4@plt>
   32aec:	mov	x3, #0x2                   	// #2
   32af0:	movk	x3, #0x8000, lsl #48
   32af4:	cmp	x2, x3
   32af8:	b.ne	32b24 <mpfr_max@@Base+0xb4>  // b.any
   32afc:	cmp	x4, x2
   32b00:	b.eq	32b58 <mpfr_max@@Base+0xe8>  // b.none
   32b04:	ldr	w3, [x20, #8]
   32b08:	mov	w2, w22
   32b0c:	mov	x0, x21
   32b10:	mov	x1, x20
   32b14:	ldp	x19, x20, [sp, #16]
   32b18:	ldp	x21, x22, [sp, #32]
   32b1c:	ldp	x29, x30, [sp], #48
   32b20:	b	c6a0 <mpfr_set4@plt>
   32b24:	cmp	x4, x3
   32b28:	b.eq	32acc <mpfr_max@@Base+0x5c>  // b.none
   32b2c:	mov	x3, #0x8000000000000001    	// #-9223372036854775807
   32b30:	cmp	x4, x3
   32b34:	ccmp	x2, x3, #0x0, eq  // eq = none
   32b38:	b.ne	32ab4 <mpfr_max@@Base+0x44>  // b.any
   32b3c:	ldr	w3, [x1, #8]
   32b40:	tbnz	w3, #31, 32b04 <mpfr_max@@Base+0x94>
   32b44:	mov	w2, w22
   32b48:	ldp	x19, x20, [sp, #16]
   32b4c:	ldp	x21, x22, [sp, #32]
   32b50:	ldp	x29, x30, [sp], #48
   32b54:	b	c6a0 <mpfr_set4@plt>
   32b58:	mrs	x1, tpidr_el0
   32b5c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   32b60:	ldr	x2, [x0, #2576]
   32b64:	add	x0, x0, #0xa10
   32b68:	blr	x2
   32b6c:	add	x0, x1, x0
   32b70:	ldp	x19, x20, [sp, #16]
   32b74:	str	x4, [x21, #16]
   32b78:	ldr	w1, [x0]
   32b7c:	ldp	x21, x22, [sp, #32]
   32b80:	orr	w1, w1, #0x4
   32b84:	str	w1, [x0]
   32b88:	mov	w0, #0x0                   	// #0
   32b8c:	ldp	x29, x30, [sp], #48
   32b90:	ret
   32b94:	nop

0000000000032b98 <mpfr_dim@@Base>:
   32b98:	stp	x29, x30, [sp, #-48]!
   32b9c:	mov	x29, sp
   32ba0:	stp	x19, x20, [sp, #16]
   32ba4:	mov	x19, x1
   32ba8:	ldr	x1, [x1, #16]
   32bac:	stp	x21, x22, [sp, #32]
   32bb0:	mov	x21, x0
   32bb4:	mov	x0, #0x2                   	// #2
   32bb8:	movk	x0, #0x8000, lsl #48
   32bbc:	cmp	x1, x0
   32bc0:	b.eq	32c34 <mpfr_dim@@Base+0x9c>  // b.none
   32bc4:	ldr	x1, [x2, #16]
   32bc8:	mov	x20, x2
   32bcc:	cmp	x1, x0
   32bd0:	b.eq	32c34 <mpfr_dim@@Base+0x9c>  // b.none
   32bd4:	mov	w22, w3
   32bd8:	mov	x1, x20
   32bdc:	mov	x0, x19
   32be0:	mov	w2, #0x1                   	// #1
   32be4:	bl	c9a0 <mpfr_cmp3@plt>
   32be8:	cmp	w0, #0x0
   32bec:	b.gt	32c14 <mpfr_dim@@Base+0x7c>
   32bf0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   32bf4:	mov	w1, #0x1                   	// #1
   32bf8:	str	w1, [x21, #8]
   32bfc:	str	x0, [x21, #16]
   32c00:	mov	w0, #0x0                   	// #0
   32c04:	ldp	x19, x20, [sp, #16]
   32c08:	ldp	x21, x22, [sp, #32]
   32c0c:	ldp	x29, x30, [sp], #48
   32c10:	ret
   32c14:	mov	w3, w22
   32c18:	mov	x2, x20
   32c1c:	mov	x1, x19
   32c20:	mov	x0, x21
   32c24:	ldp	x19, x20, [sp, #16]
   32c28:	ldp	x21, x22, [sp, #32]
   32c2c:	ldp	x29, x30, [sp], #48
   32c30:	b	bb70 <mpfr_sub@plt>
   32c34:	mrs	x1, tpidr_el0
   32c38:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   32c3c:	ldr	x2, [x0, #2576]
   32c40:	add	x0, x0, #0xa10
   32c44:	blr	x2
   32c48:	add	x0, x1, x0
   32c4c:	mov	x1, #0x2                   	// #2
   32c50:	movk	x1, #0x8000, lsl #48
   32c54:	str	x1, [x21, #16]
   32c58:	ldp	x19, x20, [sp, #16]
   32c5c:	ldr	w1, [x0]
   32c60:	ldp	x21, x22, [sp, #32]
   32c64:	orr	w1, w1, #0x4
   32c68:	str	w1, [x0]
   32c6c:	mov	w0, #0x0                   	// #0
   32c70:	ldp	x29, x30, [sp], #48
   32c74:	ret

0000000000032c78 <mpfr_signbit@@Base>:
   32c78:	ldr	w0, [x0, #8]
   32c7c:	lsr	w0, w0, #31
   32c80:	ret
   32c84:	nop

0000000000032c88 <mpfr_copysign@@Base>:
   32c88:	mov	x4, x2
   32c8c:	mov	w2, w3
   32c90:	ldr	w3, [x4, #8]
   32c94:	b	c6a0 <mpfr_set4@plt>

0000000000032c98 <mpfr_setsign@@Base>:
   32c98:	cmp	w2, #0x0
   32c9c:	mov	w2, w3
   32ca0:	mov	w3, #0x1                   	// #1
   32ca4:	cneg	w3, w3, ne  // ne = any
   32ca8:	b	c6a0 <mpfr_set4@plt>
   32cac:	nop
   32cb0:	stp	x29, x30, [sp, #-32]!
   32cb4:	mov	x29, sp
   32cb8:	ldr	w2, [x1, #4]
   32cbc:	stp	x19, x20, [sp, #16]
   32cc0:	mov	x19, x1
   32cc4:	cmp	w2, #0x0
   32cc8:	cneg	w2, w2, lt  // lt = tstop
   32ccc:	mov	x20, x0
   32cd0:	cmp	w2, #0x1
   32cd4:	mov	x1, #0x40                  	// #64
   32cd8:	b.le	32cf8 <mpfr_setsign@@Base+0x60>
   32cdc:	mov	x3, #0xfffffffffffffff8    	// #-8
   32ce0:	sbfiz	x1, x2, #6, #32
   32ce4:	ldr	x0, [x19, #8]
   32ce8:	add	x2, x3, w2, sxtw #3
   32cec:	ldr	x0, [x0, x2]
   32cf0:	clz	x0, x0
   32cf4:	sub	x1, x1, x0
   32cf8:	mov	x0, x20
   32cfc:	bl	ca80 <mpfr_init2@plt>
   32d00:	mov	x1, x19
   32d04:	mov	x0, x20
   32d08:	mov	w2, #0x0                   	// #0
   32d0c:	bl	c240 <mpfr_set_z@plt>
   32d10:	cbnz	w0, 32d20 <mpfr_setsign@@Base+0x88>
   32d14:	ldp	x19, x20, [sp, #16]
   32d18:	ldp	x29, x30, [sp], #32
   32d1c:	ret
   32d20:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   32d24:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   32d28:	add	x2, x2, #0xbd8
   32d2c:	add	x0, x0, #0xbe0
   32d30:	mov	w1, #0x31                  	// #49
   32d34:	bl	cb40 <mpfr_assert_fail@plt>
   32d38:	stp	x29, x30, [sp, #-144]!
   32d3c:	mrs	x5, tpidr_el0
   32d40:	mov	x29, sp
   32d44:	stp	x21, x22, [sp, #32]
   32d48:	mov	x21, x0
   32d4c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   32d50:	ldr	x6, [x0, #2576]
   32d54:	add	x0, x0, #0xa10
   32d58:	blr	x6
   32d5c:	ldr	w22, [x5, x0]
   32d60:	stp	x23, x24, [sp, #48]
   32d64:	mov	x24, x1
   32d68:	mov	x1, x2
   32d6c:	stp	x25, x26, [sp, #64]
   32d70:	add	x25, x5, x0
   32d74:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   32d78:	ldr	x2, [x0, #2512]
   32d7c:	add	x0, x0, #0x9d0
   32d80:	blr	x2
   32d84:	add	x6, x5, x0
   32d88:	stp	x27, x28, [sp, #80]
   32d8c:	mov	w23, w3
   32d90:	ldr	x26, [x5, x0]
   32d94:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   32d98:	ldr	x2, [x0, #2544]
   32d9c:	add	x0, x0, #0x9f0
   32da0:	blr	x2
   32da4:	add	x28, x5, x0
   32da8:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   32dac:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   32db0:	stp	x19, x20, [sp, #16]
   32db4:	add	x20, sp, #0x70
   32db8:	mov	x19, x4
   32dbc:	str	x3, [x6]
   32dc0:	str	x6, [sp, #104]
   32dc4:	ldr	x27, [x5, x0]
   32dc8:	mov	x0, x20
   32dcc:	str	x2, [x28]
   32dd0:	bl	32cb0 <mpfr_setsign@@Base+0x18>
   32dd4:	mov	w3, w23
   32dd8:	mov	x2, x20
   32ddc:	mov	x1, x24
   32de0:	mov	x0, x21
   32de4:	blr	x19
   32de8:	mov	w19, w0
   32dec:	ldr	w1, [x25]
   32df0:	mov	x0, x20
   32df4:	orr	w22, w22, w1
   32df8:	bl	c070 <mpfr_clear@plt>
   32dfc:	str	w22, [x25]
   32e00:	ldr	x6, [sp, #104]
   32e04:	str	x27, [x28]
   32e08:	ldr	x0, [x21, #16]
   32e0c:	str	x26, [x6]
   32e10:	cmp	x27, x0
   32e14:	ccmp	x26, x0, #0x0, ge  // ge = tcont
   32e18:	b.le	32e50 <mpfr_setsign@@Base+0x1b8>
   32e1c:	mov	w1, w19
   32e20:	mov	w2, w23
   32e24:	mov	x0, x21
   32e28:	bl	cb30 <mpfr_check_range@plt>
   32e2c:	mov	w19, w0
   32e30:	mov	w0, w19
   32e34:	ldp	x19, x20, [sp, #16]
   32e38:	ldp	x21, x22, [sp, #32]
   32e3c:	ldp	x23, x24, [sp, #48]
   32e40:	ldp	x25, x26, [sp, #64]
   32e44:	ldp	x27, x28, [sp, #80]
   32e48:	ldp	x29, x30, [sp], #144
   32e4c:	ret
   32e50:	cbz	w19, 32e30 <mpfr_setsign@@Base+0x198>
   32e54:	orr	w20, w22, #0x8
   32e58:	str	w20, [x25]
   32e5c:	mov	w0, w19
   32e60:	ldp	x19, x20, [sp, #16]
   32e64:	ldp	x21, x22, [sp, #32]
   32e68:	ldp	x23, x24, [sp, #48]
   32e6c:	ldp	x25, x26, [sp, #64]
   32e70:	ldp	x27, x28, [sp, #80]
   32e74:	ldp	x29, x30, [sp], #144
   32e78:	ret
   32e7c:	nop

0000000000032e80 <mpfr_mul_z@@Base>:
   32e80:	stp	x29, x30, [sp, #-48]!
   32e84:	mov	x29, sp
   32e88:	stp	x19, x20, [sp, #16]
   32e8c:	mov	x20, x0
   32e90:	mov	x19, x2
   32e94:	mov	x0, x2
   32e98:	stp	x21, x22, [sp, #32]
   32e9c:	mov	x21, x1
   32ea0:	mov	w22, w3
   32ea4:	bl	be90 <__gmpz_fits_slong_p@plt>
   32ea8:	cbz	w0, 32ed4 <mpfr_mul_z@@Base+0x54>
   32eac:	mov	x0, x19
   32eb0:	bl	ba20 <__gmpz_get_si@plt>
   32eb4:	mov	w3, w22
   32eb8:	mov	x2, x0
   32ebc:	mov	x1, x21
   32ec0:	mov	x0, x20
   32ec4:	ldp	x19, x20, [sp, #16]
   32ec8:	ldp	x21, x22, [sp, #32]
   32ecc:	ldp	x29, x30, [sp], #48
   32ed0:	b	c960 <mpfr_mul_si@plt>
   32ed4:	mov	w3, w22
   32ed8:	mov	x2, x19
   32edc:	mov	x1, x21
   32ee0:	mov	x0, x20
   32ee4:	adrp	x4, 7f000 <__gmpfr_l2b@@Base+0x200>
   32ee8:	ldp	x19, x20, [sp, #16]
   32eec:	ldp	x21, x22, [sp, #32]
   32ef0:	ldp	x29, x30, [sp], #48
   32ef4:	ldr	x4, [x4, #3960]
   32ef8:	b	32d38 <mpfr_setsign@@Base+0xa0>
   32efc:	nop

0000000000032f00 <mpfr_div_z@@Base>:
   32f00:	stp	x29, x30, [sp, #-48]!
   32f04:	mov	x29, sp
   32f08:	stp	x19, x20, [sp, #16]
   32f0c:	mov	x20, x0
   32f10:	mov	x19, x2
   32f14:	mov	x0, x2
   32f18:	stp	x21, x22, [sp, #32]
   32f1c:	mov	x21, x1
   32f20:	mov	w22, w3
   32f24:	bl	be90 <__gmpz_fits_slong_p@plt>
   32f28:	cbz	w0, 32f54 <mpfr_div_z@@Base+0x54>
   32f2c:	mov	x0, x19
   32f30:	bl	ba20 <__gmpz_get_si@plt>
   32f34:	mov	w3, w22
   32f38:	mov	x2, x0
   32f3c:	mov	x1, x21
   32f40:	mov	x0, x20
   32f44:	ldp	x19, x20, [sp, #16]
   32f48:	ldp	x21, x22, [sp, #32]
   32f4c:	ldp	x29, x30, [sp], #48
   32f50:	b	c820 <mpfr_div_si@plt>
   32f54:	mov	w3, w22
   32f58:	mov	x2, x19
   32f5c:	mov	x1, x21
   32f60:	mov	x0, x20
   32f64:	adrp	x4, 7f000 <__gmpfr_l2b@@Base+0x200>
   32f68:	ldp	x19, x20, [sp, #16]
   32f6c:	ldp	x21, x22, [sp, #32]
   32f70:	ldp	x29, x30, [sp], #48
   32f74:	ldr	x4, [x4, #4040]
   32f78:	b	32d38 <mpfr_setsign@@Base+0xa0>
   32f7c:	nop
   32f80:	stp	x29, x30, [sp, #-176]!
   32f84:	mov	x6, x3
   32f88:	mov	x29, sp
   32f8c:	ldr	w5, [x2, #4]
   32f90:	stp	x19, x20, [sp, #16]
   32f94:	mov	x20, x0
   32f98:	stp	x23, x24, [sp, #48]
   32f9c:	ldr	w24, [x3, #4]
   32fa0:	cbz	w5, 33140 <mpfr_div_z@@Base+0x240>
   32fa4:	stp	x25, x26, [sp, #64]
   32fa8:	mov	x26, x2
   32fac:	cbz	w24, 33178 <mpfr_div_z@@Base+0x278>
   32fb0:	mrs	x19, tpidr_el0
   32fb4:	stp	x27, x28, [sp, #80]
   32fb8:	mov	x27, x1
   32fbc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   32fc0:	ldr	x1, [x0, #2576]
   32fc4:	add	x0, x0, #0xa10
   32fc8:	blr	x1
   32fcc:	add	x24, x19, x0
   32fd0:	stp	x21, x22, [sp, #32]
   32fd4:	mov	w21, w4
   32fd8:	ldr	w22, [x19, x0]
   32fdc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   32fe0:	ldr	x4, [x0, #2512]
   32fe4:	add	x0, x0, #0x9d0
   32fe8:	blr	x4
   32fec:	add	x4, x19, x0
   32ff0:	str	x6, [sp, #104]
   32ff4:	mov	x1, #0xfffffffffffffff8    	// #-8
   32ff8:	ldr	x23, [x19, x0]
   32ffc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33000:	ldr	x6, [x0, #2544]
   33004:	add	x0, x0, #0x9f0
   33008:	blr	x6
   3300c:	cmp	w5, #0x0
   33010:	mov	x7, #0xc000000000000001    	// #-4611686018427387903
   33014:	cneg	w5, w5, lt  // lt = tstop
   33018:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   3301c:	ldr	x2, [x2, #8]
   33020:	add	x1, x1, w5, sxtw #3
   33024:	str	x7, [x4]
   33028:	sbfiz	x5, x5, #6, #32
   3302c:	ldr	x25, [x19, x0]
   33030:	str	x3, [x19, x0]
   33034:	ldr	x3, [x27]
   33038:	add	x28, sp, #0x70
   3303c:	ldr	x2, [x2, x1]
   33040:	mov	x0, x28
   33044:	clz	x2, x2
   33048:	sub	x5, x5, x2
   3304c:	add	x1, x5, x3
   33050:	bl	ca80 <mpfr_init2@plt>
   33054:	mov	x0, x28
   33058:	mov	x2, x26
   3305c:	mov	x1, x27
   33060:	mov	w3, #0x0                   	// #0
   33064:	bl	c4d0 <mpfr_mul_z@plt>
   33068:	ldr	x6, [sp, #104]
   3306c:	cbnz	w0, 33198 <mpfr_div_z@@Base+0x298>
   33070:	mov	x2, x6
   33074:	mov	w3, w21
   33078:	mov	x1, x28
   3307c:	mov	x0, x20
   33080:	bl	cc80 <mpfr_div_z@plt>
   33084:	mov	w24, w0
   33088:	mov	x0, x28
   3308c:	bl	c070 <mpfr_clear@plt>
   33090:	ldr	x1, [x20, #16]
   33094:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33098:	ldr	x2, [x0, #2576]
   3309c:	add	x0, x0, #0xa10
   330a0:	blr	x2
   330a4:	str	w22, [x19, x0]
   330a8:	add	x2, x19, x0
   330ac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   330b0:	ldr	x3, [x0, #2512]
   330b4:	add	x0, x0, #0x9d0
   330b8:	blr	x3
   330bc:	str	x23, [x19, x0]
   330c0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   330c4:	ldr	x3, [x0, #2544]
   330c8:	add	x0, x0, #0x9f0
   330cc:	blr	x3
   330d0:	str	x25, [x19, x0]
   330d4:	cmp	x25, x1
   330d8:	ccmp	x23, x1, #0x0, ge  // ge = tcont
   330dc:	b.le	33114 <mpfr_div_z@@Base+0x214>
   330e0:	mov	w2, w21
   330e4:	mov	w1, w24
   330e8:	mov	x0, x20
   330ec:	bl	cb30 <mpfr_check_range@plt>
   330f0:	ldp	x21, x22, [sp, #32]
   330f4:	mov	w24, w0
   330f8:	ldp	x25, x26, [sp, #64]
   330fc:	ldp	x27, x28, [sp, #80]
   33100:	mov	w0, w24
   33104:	ldp	x19, x20, [sp, #16]
   33108:	ldp	x23, x24, [sp, #48]
   3310c:	ldp	x29, x30, [sp], #176
   33110:	ret
   33114:	cbz	w24, 33120 <mpfr_div_z@@Base+0x220>
   33118:	orr	w22, w22, #0x8
   3311c:	str	w22, [x2]
   33120:	mov	w0, w24
   33124:	ldp	x19, x20, [sp, #16]
   33128:	ldp	x21, x22, [sp, #32]
   3312c:	ldp	x23, x24, [sp, #48]
   33130:	ldp	x25, x26, [sp, #64]
   33134:	ldp	x27, x28, [sp, #80]
   33138:	ldp	x29, x30, [sp], #176
   3313c:	ret
   33140:	cbz	w24, 33258 <mpfr_div_z@@Base+0x358>
   33144:	mov	w3, #0x0                   	// #0
   33148:	mov	x2, #0x0                   	// #0
   3314c:	str	x6, [sp, #104]
   33150:	bl	ba50 <mpfr_mul_ui@plt>
   33154:	ldr	x6, [sp, #104]
   33158:	ldr	w0, [x6, #4]
   3315c:	tbnz	w0, #31, 33244 <mpfr_div_z@@Base+0x344>
   33160:	mov	w24, #0x0                   	// #0
   33164:	mov	w0, w24
   33168:	ldp	x19, x20, [sp, #16]
   3316c:	ldp	x23, x24, [sp, #48]
   33170:	ldp	x29, x30, [sp], #176
   33174:	ret
   33178:	mov	w3, #0x0                   	// #0
   3317c:	mov	x2, #0x0                   	// #0
   33180:	bl	cc60 <mpfr_div_ui@plt>
   33184:	ldr	w0, [x26, #4]
   33188:	tbnz	w0, #31, 33268 <mpfr_div_z@@Base+0x368>
   3318c:	mov	w24, #0x0                   	// #0
   33190:	ldp	x25, x26, [sp, #64]
   33194:	b	33164 <mpfr_div_z@@Base+0x264>
   33198:	mov	x2, x26
   3319c:	ldr	w5, [x27, #8]
   331a0:	ldp	x26, x4, [x27, #16]
   331a4:	add	x1, sp, #0x90
   331a8:	ldr	x7, [x27]
   331ac:	mov	w3, #0x0                   	// #0
   331b0:	mov	x0, x28
   331b4:	str	wzr, [x24]
   331b8:	str	x7, [sp, #144]
   331bc:	str	w5, [sp, #152]
   331c0:	stp	xzr, x4, [sp, #160]
   331c4:	bl	c4d0 <mpfr_mul_z@plt>
   331c8:	mov	x1, x28
   331cc:	ldr	x6, [sp, #104]
   331d0:	mov	w3, w21
   331d4:	mov	x0, x20
   331d8:	mov	x2, x6
   331dc:	bl	cc80 <mpfr_div_z@plt>
   331e0:	ldr	w1, [x24]
   331e4:	mov	w24, w0
   331e8:	mov	w0, #0x27                  	// #39
   331ec:	tst	w1, w0
   331f0:	b.ne	3329c <mpfr_div_z@@Base+0x39c>  // b.any
   331f4:	ldr	x1, [x20, #16]
   331f8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   331fc:	ldr	x2, [x0, #2512]
   33200:	add	x0, x0, #0x9d0
   33204:	blr	x2
   33208:	ldr	x0, [x19, x0]
   3320c:	add	x26, x26, x1
   33210:	str	x26, [x20, #16]
   33214:	cmp	x26, x0
   33218:	b.lt	3327c <mpfr_div_z@@Base+0x37c>  // b.tstop
   3321c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   33220:	cmp	x26, x0
   33224:	b.gt	33088 <mpfr_div_z@@Base+0x188>
   33228:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   3322c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   33230:	add	x2, x2, #0xc40
   33234:	add	x0, x0, #0xbe0
   33238:	mov	w1, #0xec                  	// #236
   3323c:	bl	cb40 <mpfr_assert_fail@plt>
   33240:	b	33088 <mpfr_div_z@@Base+0x188>
   33244:	ldr	w0, [x20, #8]
   33248:	mov	w24, #0x0                   	// #0
   3324c:	neg	w0, w0
   33250:	str	w0, [x20, #8]
   33254:	b	33100 <mpfr_div_z@@Base+0x200>
   33258:	mov	x0, #0x2                   	// #2
   3325c:	movk	x0, #0x8000, lsl #48
   33260:	str	x0, [x20, #16]
   33264:	b	33100 <mpfr_div_z@@Base+0x200>
   33268:	ldr	w0, [x20, #8]
   3326c:	ldp	x25, x26, [sp, #64]
   33270:	neg	w0, w0
   33274:	str	w0, [x20, #8]
   33278:	b	33100 <mpfr_div_z@@Base+0x200>
   3327c:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   33280:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   33284:	add	x2, x2, #0xc18
   33288:	add	x0, x0, #0xbe0
   3328c:	mov	w1, #0xeb                  	// #235
   33290:	bl	cb40 <mpfr_assert_fail@plt>
   33294:	ldr	x26, [x20, #16]
   33298:	b	3321c <mpfr_div_z@@Base+0x31c>
   3329c:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   332a0:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   332a4:	add	x2, x2, #0xbf0
   332a8:	add	x0, x0, #0xbe0
   332ac:	mov	w1, #0xe8                  	// #232
   332b0:	bl	cb40 <mpfr_assert_fail@plt>
   332b4:	b	331f4 <mpfr_div_z@@Base+0x2f4>

00000000000332b8 <mpfr_add_z@@Base>:
   332b8:	stp	x29, x30, [sp, #-48]!
   332bc:	mov	x29, sp
   332c0:	stp	x19, x20, [sp, #16]
   332c4:	mov	x20, x0
   332c8:	mov	x19, x2
   332cc:	mov	x0, x2
   332d0:	stp	x21, x22, [sp, #32]
   332d4:	mov	x21, x1
   332d8:	mov	w22, w3
   332dc:	bl	be90 <__gmpz_fits_slong_p@plt>
   332e0:	cbz	w0, 3330c <mpfr_add_z@@Base+0x54>
   332e4:	mov	x0, x19
   332e8:	bl	ba20 <__gmpz_get_si@plt>
   332ec:	mov	w3, w22
   332f0:	mov	x2, x0
   332f4:	mov	x1, x21
   332f8:	mov	x0, x20
   332fc:	ldp	x19, x20, [sp, #16]
   33300:	ldp	x21, x22, [sp, #32]
   33304:	ldp	x29, x30, [sp], #48
   33308:	b	c7f0 <mpfr_add_si@plt>
   3330c:	mov	w3, w22
   33310:	mov	x2, x19
   33314:	mov	x1, x21
   33318:	mov	x0, x20
   3331c:	adrp	x4, 7f000 <__gmpfr_l2b@@Base+0x200>
   33320:	ldp	x19, x20, [sp, #16]
   33324:	ldp	x21, x22, [sp, #32]
   33328:	ldp	x29, x30, [sp], #48
   3332c:	ldr	x4, [x4, #4008]
   33330:	b	32d38 <mpfr_setsign@@Base+0xa0>
   33334:	nop

0000000000033338 <mpfr_sub_z@@Base>:
   33338:	stp	x29, x30, [sp, #-48]!
   3333c:	mov	x29, sp
   33340:	stp	x19, x20, [sp, #16]
   33344:	mov	x20, x0
   33348:	mov	x19, x2
   3334c:	mov	x0, x2
   33350:	stp	x21, x22, [sp, #32]
   33354:	mov	x21, x1
   33358:	mov	w22, w3
   3335c:	bl	be90 <__gmpz_fits_slong_p@plt>
   33360:	cbz	w0, 3338c <mpfr_sub_z@@Base+0x54>
   33364:	mov	x0, x19
   33368:	bl	ba20 <__gmpz_get_si@plt>
   3336c:	mov	w3, w22
   33370:	mov	x2, x0
   33374:	mov	x1, x21
   33378:	mov	x0, x20
   3337c:	ldp	x19, x20, [sp, #16]
   33380:	ldp	x21, x22, [sp, #32]
   33384:	ldp	x29, x30, [sp], #48
   33388:	b	c060 <mpfr_sub_si@plt>
   3338c:	mov	w3, w22
   33390:	mov	x2, x19
   33394:	mov	x1, x21
   33398:	mov	x0, x20
   3339c:	adrp	x4, 7f000 <__gmpfr_l2b@@Base+0x200>
   333a0:	ldp	x19, x20, [sp, #16]
   333a4:	ldp	x21, x22, [sp, #32]
   333a8:	ldp	x29, x30, [sp], #48
   333ac:	ldr	x4, [x4, #3944]
   333b0:	b	32d38 <mpfr_setsign@@Base+0xa0>
   333b4:	nop

00000000000333b8 <mpfr_z_sub@@Base>:
   333b8:	stp	x29, x30, [sp, #-144]!
   333bc:	mov	x29, sp
   333c0:	stp	x19, x20, [sp, #16]
   333c4:	mov	x20, x0
   333c8:	mov	x19, x1
   333cc:	mov	x0, x1
   333d0:	stp	x21, x22, [sp, #32]
   333d4:	mov	x22, x2
   333d8:	mov	w21, w3
   333dc:	bl	be90 <__gmpz_fits_slong_p@plt>
   333e0:	cbz	w0, 33418 <mpfr_z_sub@@Base+0x60>
   333e4:	mov	x0, x19
   333e8:	bl	ba20 <__gmpz_get_si@plt>
   333ec:	mov	w3, w21
   333f0:	mov	x2, x22
   333f4:	mov	x1, x0
   333f8:	mov	x0, x20
   333fc:	bl	c5d0 <mpfr_si_sub@plt>
   33400:	mov	w19, w0
   33404:	mov	w0, w19
   33408:	ldp	x19, x20, [sp, #16]
   3340c:	ldp	x21, x22, [sp, #32]
   33410:	ldp	x29, x30, [sp], #144
   33414:	ret
   33418:	mrs	x4, tpidr_el0
   3341c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33420:	ldr	x1, [x0, #2576]
   33424:	add	x0, x0, #0xa10
   33428:	blr	x1
   3342c:	stp	x23, x24, [sp, #48]
   33430:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   33434:	add	x23, sp, #0x70
   33438:	ldr	w24, [x4, x0]
   3343c:	mov	x1, x19
   33440:	stp	x25, x26, [sp, #64]
   33444:	add	x25, x4, x0
   33448:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3344c:	ldr	x2, [x0, #2512]
   33450:	add	x0, x0, #0x9d0
   33454:	blr	x2
   33458:	add	x5, x4, x0
   3345c:	stp	x27, x28, [sp, #80]
   33460:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   33464:	ldr	x26, [x4, x0]
   33468:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3346c:	ldr	x6, [x0, #2544]
   33470:	add	x0, x0, #0x9f0
   33474:	blr	x6
   33478:	add	x28, x4, x0
   3347c:	str	x3, [x5]
   33480:	str	x5, [sp, #104]
   33484:	ldr	x27, [x4, x0]
   33488:	mov	x0, x23
   3348c:	str	x2, [x28]
   33490:	bl	32cb0 <mpfr_setsign@@Base+0x18>
   33494:	mov	x2, x22
   33498:	mov	w3, w21
   3349c:	mov	x1, x23
   334a0:	mov	x0, x20
   334a4:	bl	bb70 <mpfr_sub@plt>
   334a8:	ldr	w22, [x25]
   334ac:	mov	w19, w0
   334b0:	mov	x0, x23
   334b4:	bl	c070 <mpfr_clear@plt>
   334b8:	orr	w22, w24, w22
   334bc:	ldr	x5, [sp, #104]
   334c0:	str	w22, [x25]
   334c4:	ldr	x0, [x20, #16]
   334c8:	str	x27, [x28]
   334cc:	str	x26, [x5]
   334d0:	cmp	x27, x0
   334d4:	ccmp	x26, x0, #0x0, ge  // ge = tcont
   334d8:	b.le	33510 <mpfr_z_sub@@Base+0x158>
   334dc:	mov	w2, w21
   334e0:	mov	w1, w19
   334e4:	mov	x0, x20
   334e8:	bl	cb30 <mpfr_check_range@plt>
   334ec:	mov	w19, w0
   334f0:	mov	w0, w19
   334f4:	ldp	x19, x20, [sp, #16]
   334f8:	ldp	x21, x22, [sp, #32]
   334fc:	ldp	x23, x24, [sp, #48]
   33500:	ldp	x25, x26, [sp, #64]
   33504:	ldp	x27, x28, [sp, #80]
   33508:	ldp	x29, x30, [sp], #144
   3350c:	ret
   33510:	cbz	w19, 3351c <mpfr_z_sub@@Base+0x164>
   33514:	orr	w22, w22, #0x8
   33518:	str	w22, [x25]
   3351c:	mov	w0, w19
   33520:	ldp	x19, x20, [sp, #16]
   33524:	ldp	x21, x22, [sp, #32]
   33528:	ldp	x23, x24, [sp, #48]
   3352c:	ldp	x25, x26, [sp, #64]
   33530:	ldp	x27, x28, [sp, #80]
   33534:	ldp	x29, x30, [sp], #144
   33538:	ret
   3353c:	nop

0000000000033540 <mpfr_cmp_z@@Base>:
   33540:	stp	x29, x30, [sp, #-80]!
   33544:	mov	x29, sp
   33548:	stp	x19, x20, [sp, #16]
   3354c:	mov	x20, x0
   33550:	mov	x19, x1
   33554:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   33558:	ldr	x1, [x20, #16]
   3355c:	cmp	x1, x0
   33560:	b.le	3365c <mpfr_cmp_z@@Base+0x11c>
   33564:	mov	x0, x19
   33568:	bl	be90 <__gmpz_fits_slong_p@plt>
   3356c:	cbnz	w0, 33614 <mpfr_cmp_z@@Base+0xd4>
   33570:	ldr	w2, [x19, #4]
   33574:	mov	x1, #0x40                  	// #64
   33578:	stp	x21, x22, [sp, #32]
   3357c:	cmp	w2, #0x0
   33580:	cneg	w2, w2, lt  // lt = tstop
   33584:	cmp	w2, #0x1
   33588:	b.le	335a8 <mpfr_cmp_z@@Base+0x68>
   3358c:	mov	x3, #0xfffffffffffffff8    	// #-8
   33590:	sbfiz	x1, x2, #6, #32
   33594:	ldr	x0, [x19, #8]
   33598:	add	x2, x3, w2, sxtw #3
   3359c:	ldr	x0, [x0, x2]
   335a0:	clz	x0, x0
   335a4:	sub	x1, x1, x0
   335a8:	add	x21, sp, #0x30
   335ac:	mov	x0, x21
   335b0:	bl	ca80 <mpfr_init2@plt>
   335b4:	mrs	x3, tpidr_el0
   335b8:	mov	x1, x19
   335bc:	mov	w2, #0x0                   	// #0
   335c0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   335c4:	ldr	x4, [x0, #2576]
   335c8:	add	x0, x0, #0xa10
   335cc:	blr	x4
   335d0:	add	x19, x3, x0
   335d4:	ldr	w22, [x3, x0]
   335d8:	mov	x0, x21
   335dc:	bl	c240 <mpfr_set_z@plt>
   335e0:	cbnz	w0, 33640 <mpfr_cmp_z@@Base+0x100>
   335e4:	mov	x1, x21
   335e8:	mov	w2, #0x1                   	// #1
   335ec:	mov	x0, x20
   335f0:	bl	c9a0 <mpfr_cmp3@plt>
   335f4:	mov	w19, w0
   335f8:	mov	x0, x21
   335fc:	bl	c070 <mpfr_clear@plt>
   33600:	mov	w0, w19
   33604:	ldp	x19, x20, [sp, #16]
   33608:	ldp	x21, x22, [sp, #32]
   3360c:	ldp	x29, x30, [sp], #80
   33610:	ret
   33614:	mov	x0, x19
   33618:	bl	ba20 <__gmpz_get_si@plt>
   3361c:	mov	x2, #0x0                   	// #0
   33620:	mov	x1, x0
   33624:	mov	x0, x20
   33628:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   3362c:	mov	w19, w0
   33630:	mov	w0, w19
   33634:	ldp	x19, x20, [sp, #16]
   33638:	ldp	x29, x30, [sp], #80
   3363c:	ret
   33640:	mov	x1, x21
   33644:	mov	x0, x21
   33648:	mov	w3, #0x1                   	// #1
   3364c:	mov	x2, #0x2                   	// #2
   33650:	bl	c8f0 <mpfr_div_2ui@plt>
   33654:	str	w22, [x19]
   33658:	b	335e4 <mpfr_cmp_z@@Base+0xa4>
   3365c:	ldr	w3, [x19, #4]
   33660:	mov	x4, #0xffffffffffffffff    	// #-1
   33664:	mov	x0, x20
   33668:	mov	x2, #0x0                   	// #0
   3366c:	cmp	w3, #0x0
   33670:	cset	x1, gt
   33674:	csel	x1, x1, x4, ge  // ge = tcont
   33678:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   3367c:	mov	w19, w0
   33680:	mov	w0, w19
   33684:	ldp	x19, x20, [sp, #16]
   33688:	ldp	x29, x30, [sp], #80
   3368c:	ret

0000000000033690 <mpfr_mul_q@@Base>:
   33690:	mov	w4, w3
   33694:	add	x3, x2, #0x10
   33698:	b	32f80 <mpfr_div_z@@Base+0x80>
   3369c:	nop

00000000000336a0 <mpfr_div_q@@Base>:
   336a0:	mov	w4, w3
   336a4:	mov	x3, x2
   336a8:	add	x2, x2, #0x10
   336ac:	b	32f80 <mpfr_div_z@@Base+0x80>

00000000000336b0 <mpfr_add_q@@Base>:
   336b0:	stp	x29, x30, [sp, #-192]!
   336b4:	mov	x29, sp
   336b8:	stp	x21, x22, [sp, #32]
   336bc:	mov	w22, w3
   336c0:	mov	x21, x0
   336c4:	ldr	x3, [x1, #16]
   336c8:	stp	x19, x20, [sp, #16]
   336cc:	stp	x23, x24, [sp, #48]
   336d0:	mov	x24, x1
   336d4:	stp	x25, x26, [sp, #64]
   336d8:	mov	x26, x2
   336dc:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   336e0:	cmp	x3, x2
   336e4:	b.le	33978 <mpfr_add_q@@Base+0x2c8>
   336e8:	mrs	x19, tpidr_el0
   336ec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   336f0:	ldr	x1, [x0, #2576]
   336f4:	add	x0, x0, #0xa10
   336f8:	blr	x1
   336fc:	ldr	x20, [x21]
   33700:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   33704:	ldr	w0, [x19, x0]
   33708:	add	x25, sp, #0x80
   3370c:	str	w0, [sp, #100]
   33710:	add	x20, x20, #0xa
   33714:	str	x2, [sp, #112]
   33718:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   3371c:	stp	x27, x28, [sp, #80]
   33720:	add	x23, sp, #0xa0
   33724:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33728:	ldr	x1, [x0, #2512]
   3372c:	add	x0, x0, #0x9d0
   33730:	blr	x1
   33734:	mov	x1, #0x40                  	// #64
   33738:	add	x3, x19, x0
   3373c:	str	x1, [sp, #120]
   33740:	ldr	x28, [x19, x0]
   33744:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33748:	ldr	x1, [x0, #2544]
   3374c:	add	x0, x0, #0x9f0
   33750:	blr	x1
   33754:	mov	x1, x20
   33758:	str	x4, [x3]
   3375c:	ldr	x27, [x19, x0]
   33760:	str	x2, [x19, x0]
   33764:	mov	x0, x25
   33768:	bl	ca80 <mpfr_init2@plt>
   3376c:	mov	x1, x20
   33770:	mov	x0, x23
   33774:	bl	ca80 <mpfr_init2@plt>
   33778:	mov	x1, x26
   3377c:	mov	x0, x23
   33780:	mov	w2, #0x0                   	// #0
   33784:	bl	c850 <mpfr_set_q@plt>
   33788:	cbz	w0, 3395c <mpfr_add_q@@Base+0x2ac>
   3378c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33790:	ldr	x1, [x0, #2576]
   33794:	add	x0, x0, #0xa10
   33798:	blr	x1
   3379c:	add	x4, x19, x0
   337a0:	mov	x2, x23
   337a4:	mov	x1, x24
   337a8:	mov	w3, #0x0                   	// #0
   337ac:	str	wzr, [x19, x0]
   337b0:	mov	x0, x25
   337b4:	str	x4, [sp, #104]
   337b8:	bl	c1a0 <mpfr_add@plt>
   337bc:	ldr	x4, [sp, #104]
   337c0:	ldr	w0, [x4]
   337c4:	tbnz	w0, #1, 33a50 <mpfr_add_q@@Base+0x3a0>
   337c8:	tbnz	w0, #0, 33a50 <mpfr_add_q@@Base+0x3a0>
   337cc:	ldr	x1, [sp, #144]
   337d0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   337d4:	cmp	x1, x0
   337d8:	b.eq	33904 <mpfr_add_q@@Base+0x254>  // b.none
   337dc:	ldr	x2, [sp, #176]
   337e0:	sub	x0, x20, #0x1
   337e4:	ldr	x3, [sp, #112]
   337e8:	subs	x2, x2, x1
   337ec:	csel	x2, x2, xzr, pl  // pl = nfrst
   337f0:	sub	x2, x0, x2
   337f4:	cmp	x1, x3
   337f8:	b.le	33904 <mpfr_add_q@@Base+0x254>
   337fc:	ldr	x1, [sp, #128]
   33800:	cmp	w22, #0x0
   33804:	ldr	x0, [sp, #152]
   33808:	sub	x1, x1, #0x1
   3380c:	ldr	x3, [x21]
   33810:	asr	x1, x1, #6
   33814:	add	x1, x1, #0x1
   33818:	cinc	x3, x3, eq  // eq = none
   3381c:	bl	c370 <mpfr_round_p@plt>
   33820:	cbz	w0, 33904 <mpfr_add_q@@Base+0x254>
   33824:	ldr	w3, [sp, #136]
   33828:	mov	w2, w22
   3382c:	mov	x1, x25
   33830:	mov	x0, x21
   33834:	bl	c6a0 <mpfr_set4@plt>
   33838:	mov	w20, w0
   3383c:	mov	x0, x25
   33840:	bl	c070 <mpfr_clear@plt>
   33844:	mov	x0, x23
   33848:	bl	c070 <mpfr_clear@plt>
   3384c:	ldr	x1, [x21, #16]
   33850:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33854:	ldr	x2, [x0, #2576]
   33858:	add	x0, x0, #0xa10
   3385c:	blr	x2
   33860:	ldr	w2, [sp, #100]
   33864:	str	w2, [x19, x0]
   33868:	add	x2, x19, x0
   3386c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33870:	ldr	x3, [x0, #2512]
   33874:	add	x0, x0, #0x9d0
   33878:	blr	x3
   3387c:	str	x28, [x19, x0]
   33880:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33884:	ldr	x3, [x0, #2544]
   33888:	add	x0, x0, #0x9f0
   3388c:	blr	x3
   33890:	str	x27, [x19, x0]
   33894:	cmp	x28, x1
   33898:	ccmp	x27, x1, #0x1, le
   3389c:	b.ge	338d4 <mpfr_add_q@@Base+0x224>  // b.tcont
   338a0:	mov	w1, w20
   338a4:	mov	w2, w22
   338a8:	mov	x0, x21
   338ac:	bl	cb30 <mpfr_check_range@plt>
   338b0:	mov	w20, w0
   338b4:	ldp	x27, x28, [sp, #80]
   338b8:	mov	w0, w20
   338bc:	ldp	x19, x20, [sp, #16]
   338c0:	ldp	x21, x22, [sp, #32]
   338c4:	ldp	x23, x24, [sp, #48]
   338c8:	ldp	x25, x26, [sp, #64]
   338cc:	ldp	x29, x30, [sp], #192
   338d0:	ret
   338d4:	cbz	w20, 338b4 <mpfr_add_q@@Base+0x204>
   338d8:	ldr	w0, [sp, #100]
   338dc:	ldp	x27, x28, [sp, #80]
   338e0:	orr	w0, w0, #0x8
   338e4:	str	w0, [x2]
   338e8:	mov	w0, w20
   338ec:	ldp	x19, x20, [sp, #16]
   338f0:	ldp	x21, x22, [sp, #32]
   338f4:	ldp	x23, x24, [sp, #48]
   338f8:	ldp	x25, x26, [sp, #64]
   338fc:	ldp	x29, x30, [sp], #192
   33900:	ret
   33904:	ldr	x1, [sp, #120]
   33908:	mov	x0, #0xfffffffffffffeff    	// #-257
   3390c:	movk	x0, #0x7fff, lsl #48
   33910:	sub	x0, x0, x20
   33914:	cmp	x0, x1
   33918:	b.lt	339c0 <mpfr_add_q@@Base+0x310>  // b.tstop
   3391c:	ldr	x0, [sp, #120]
   33920:	add	x20, x20, x0
   33924:	mov	x0, x25
   33928:	mov	x1, x20
   3392c:	add	x2, x20, x20, lsr #63
   33930:	asr	x2, x2, #1
   33934:	str	x2, [sp, #120]
   33938:	bl	bed0 <mpfr_set_prec@plt>
   3393c:	mov	x1, x20
   33940:	mov	x0, x23
   33944:	bl	bed0 <mpfr_set_prec@plt>
   33948:	mov	x1, x26
   3394c:	mov	x0, x23
   33950:	mov	w2, #0x0                   	// #0
   33954:	bl	c850 <mpfr_set_q@plt>
   33958:	cbnz	w0, 3378c <mpfr_add_q@@Base+0xdc>
   3395c:	mov	x1, x24
   33960:	mov	w3, w22
   33964:	mov	x2, x23
   33968:	mov	x0, x21
   3396c:	bl	c1a0 <mpfr_add@plt>
   33970:	mov	w20, w0
   33974:	b	3383c <mpfr_add_q@@Base+0x18c>
   33978:	mov	x4, #0x2                   	// #2
   3397c:	movk	x4, #0x8000, lsl #48
   33980:	cmp	x3, x4
   33984:	b.eq	33a18 <mpfr_add_q@@Base+0x368>  // b.none
   33988:	cmp	x3, x2
   3398c:	b.eq	339d8 <mpfr_add_q@@Base+0x328>  // b.none
   33990:	ldr	w2, [x26, #4]
   33994:	cbz	w2, 339ac <mpfr_add_q@@Base+0x2fc>
   33998:	mov	w2, w22
   3399c:	mov	x1, x26
   339a0:	bl	c850 <mpfr_set_q@plt>
   339a4:	mov	w20, w0
   339a8:	b	338b8 <mpfr_add_q@@Base+0x208>
   339ac:	ldr	w3, [x1, #8]
   339b0:	mov	w2, w22
   339b4:	bl	c6a0 <mpfr_set4@plt>
   339b8:	mov	w20, w0
   339bc:	b	338b8 <mpfr_add_q@@Base+0x208>
   339c0:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   339c4:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   339c8:	add	x2, x2, #0xc08
   339cc:	add	x0, x0, #0xbe0
   339d0:	mov	w1, #0x153                 	// #339
   339d4:	bl	cb40 <mpfr_assert_fail@plt>
   339d8:	ldr	w0, [x1, #8]
   339dc:	ldr	w1, [x26, #20]
   339e0:	cbz	w1, 339f8 <mpfr_add_q@@Base+0x348>
   339e4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   339e8:	mov	w20, #0x0                   	// #0
   339ec:	str	w0, [x21, #8]
   339f0:	str	x1, [x21, #16]
   339f4:	b	338b8 <mpfr_add_q@@Base+0x208>
   339f8:	ldr	w2, [x26, #4]
   339fc:	mov	w3, #0xffffffff            	// #-1
   33a00:	cmp	w2, #0x0
   33a04:	cset	w1, gt
   33a08:	csel	w1, w1, w3, ge  // ge = tcont
   33a0c:	mul	w1, w0, w1
   33a10:	cmp	w1, #0x0
   33a14:	b.gt	339e4 <mpfr_add_q@@Base+0x334>
   33a18:	mrs	x1, tpidr_el0
   33a1c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33a20:	ldr	x2, [x0, #2576]
   33a24:	add	x0, x0, #0xa10
   33a28:	blr	x2
   33a2c:	add	x0, x1, x0
   33a30:	mov	x1, #0x2                   	// #2
   33a34:	movk	x1, #0x8000, lsl #48
   33a38:	str	x1, [x21, #16]
   33a3c:	mov	w20, #0x0                   	// #0
   33a40:	ldr	w1, [x0]
   33a44:	orr	w1, w1, #0x4
   33a48:	str	w1, [x0]
   33a4c:	b	338b8 <mpfr_add_q@@Base+0x208>
   33a50:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   33a54:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   33a58:	add	x2, x2, #0xc80
   33a5c:	add	x0, x0, #0xbe0
   33a60:	mov	w1, #0x144                 	// #324
   33a64:	bl	cb40 <mpfr_assert_fail@plt>

0000000000033a68 <mpfr_sub_q@@Base>:
   33a68:	stp	x29, x30, [sp, #-192]!
   33a6c:	mov	x29, sp
   33a70:	stp	x23, x24, [sp, #48]
   33a74:	mov	w23, w3
   33a78:	mov	x24, x2
   33a7c:	ldr	x3, [x1, #16]
   33a80:	stp	x19, x20, [sp, #16]
   33a84:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   33a88:	stp	x21, x22, [sp, #32]
   33a8c:	mov	x20, x0
   33a90:	mov	x21, x1
   33a94:	cmp	x3, x2
   33a98:	b.le	33d4c <mpfr_sub_q@@Base+0x2e4>
   33a9c:	stp	x25, x26, [sp, #64]
   33aa0:	mrs	x26, tpidr_el0
   33aa4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33aa8:	ldr	x1, [x0, #2576]
   33aac:	add	x0, x0, #0xa10
   33ab0:	blr	x1
   33ab4:	ldr	x19, [x20]
   33ab8:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   33abc:	ldr	w0, [x26, x0]
   33ac0:	add	x25, sp, #0x80
   33ac4:	str	w0, [sp, #100]
   33ac8:	add	x19, x19, #0xa
   33acc:	str	x2, [sp, #120]
   33ad0:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   33ad4:	stp	x27, x28, [sp, #80]
   33ad8:	add	x22, sp, #0xa0
   33adc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33ae0:	ldr	x1, [x0, #2512]
   33ae4:	add	x0, x0, #0x9d0
   33ae8:	blr	x1
   33aec:	mov	x1, #0x40                  	// #64
   33af0:	add	x3, x26, x0
   33af4:	str	x1, [sp, #104]
   33af8:	ldr	x28, [x26, x0]
   33afc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33b00:	ldr	x1, [x0, #2544]
   33b04:	add	x0, x0, #0x9f0
   33b08:	blr	x1
   33b0c:	mov	x1, x19
   33b10:	str	x5, [x3]
   33b14:	ldr	x27, [x26, x0]
   33b18:	str	x2, [x26, x0]
   33b1c:	mov	x0, x25
   33b20:	bl	ca80 <mpfr_init2@plt>
   33b24:	mov	x1, x19
   33b28:	mov	x0, x22
   33b2c:	bl	ca80 <mpfr_init2@plt>
   33b30:	mov	x1, x24
   33b34:	mov	x0, x22
   33b38:	mov	w2, #0x0                   	// #0
   33b3c:	bl	c850 <mpfr_set_q@plt>
   33b40:	cbz	w0, 33ce0 <mpfr_sub_q@@Base+0x278>
   33b44:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33b48:	ldr	x1, [x0, #2576]
   33b4c:	add	x0, x0, #0xa10
   33b50:	blr	x1
   33b54:	add	x5, x26, x0
   33b58:	mov	x2, x22
   33b5c:	mov	x1, x21
   33b60:	mov	w3, #0x0                   	// #0
   33b64:	str	wzr, [x26, x0]
   33b68:	mov	x0, x25
   33b6c:	str	x5, [sp, #112]
   33b70:	bl	bb70 <mpfr_sub@plt>
   33b74:	ldr	x5, [sp, #112]
   33b78:	ldr	w0, [x5]
   33b7c:	tbnz	w0, #1, 33e50 <mpfr_sub_q@@Base+0x3e8>
   33b80:	tbnz	w0, #0, 33e50 <mpfr_sub_q@@Base+0x3e8>
   33b84:	ldr	x0, [sp, #120]
   33b88:	ldr	x6, [sp, #144]
   33b8c:	cmp	x6, x0
   33b90:	b.le	33c84 <mpfr_sub_q@@Base+0x21c>
   33b94:	ldr	x3, [x20]
   33b98:	cmp	w23, #0x0
   33b9c:	ldr	x5, [sp, #176]
   33ba0:	cinc	x3, x3, eq  // eq = none
   33ba4:	ldr	x1, [sp, #128]
   33ba8:	subs	x5, x5, x6
   33bac:	ldr	x0, [sp, #152]
   33bb0:	sub	x1, x1, #0x1
   33bb4:	csel	x5, x5, xzr, pl  // pl = nfrst
   33bb8:	sub	x2, x19, #0x1
   33bbc:	asr	x1, x1, #6
   33bc0:	sub	x2, x2, x5
   33bc4:	add	x1, x1, #0x1
   33bc8:	bl	c370 <mpfr_round_p@plt>
   33bcc:	cbz	w0, 33c84 <mpfr_sub_q@@Base+0x21c>
   33bd0:	ldr	w3, [sp, #136]
   33bd4:	mov	w2, w23
   33bd8:	mov	x1, x25
   33bdc:	mov	x0, x20
   33be0:	bl	c6a0 <mpfr_set4@plt>
   33be4:	mov	w19, w0
   33be8:	mov	x0, x25
   33bec:	bl	c070 <mpfr_clear@plt>
   33bf0:	mov	x0, x22
   33bf4:	bl	c070 <mpfr_clear@plt>
   33bf8:	ldr	x1, [x20, #16]
   33bfc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33c00:	ldr	x2, [x0, #2576]
   33c04:	add	x0, x0, #0xa10
   33c08:	blr	x2
   33c0c:	ldr	w2, [sp, #100]
   33c10:	str	w2, [x26, x0]
   33c14:	add	x2, x26, x0
   33c18:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33c1c:	ldr	x3, [x0, #2512]
   33c20:	add	x0, x0, #0x9d0
   33c24:	blr	x3
   33c28:	str	x28, [x26, x0]
   33c2c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33c30:	ldr	x3, [x0, #2544]
   33c34:	add	x0, x0, #0x9f0
   33c38:	blr	x3
   33c3c:	str	x27, [x26, x0]
   33c40:	cmp	x28, x1
   33c44:	ccmp	x27, x1, #0x1, le
   33c48:	b.ge	33cfc <mpfr_sub_q@@Base+0x294>  // b.tcont
   33c4c:	mov	w1, w19
   33c50:	mov	w2, w23
   33c54:	mov	x0, x20
   33c58:	bl	cb30 <mpfr_check_range@plt>
   33c5c:	ldp	x25, x26, [sp, #64]
   33c60:	mov	w19, w0
   33c64:	ldp	x27, x28, [sp, #80]
   33c68:	str	w0, [sp, #100]
   33c6c:	mov	w0, w19
   33c70:	ldp	x19, x20, [sp, #16]
   33c74:	ldp	x21, x22, [sp, #32]
   33c78:	ldp	x23, x24, [sp, #48]
   33c7c:	ldp	x29, x30, [sp], #192
   33c80:	ret
   33c84:	ldr	x1, [sp, #104]
   33c88:	mov	x0, #0xfffffffffffffeff    	// #-257
   33c8c:	movk	x0, #0x7fff, lsl #48
   33c90:	sub	x0, x0, x19
   33c94:	cmp	x0, x1
   33c98:	b.lt	33e30 <mpfr_sub_q@@Base+0x3c8>  // b.tstop
   33c9c:	ldr	x0, [sp, #104]
   33ca0:	add	x19, x19, x0
   33ca4:	mov	x0, x25
   33ca8:	mov	x1, x19
   33cac:	add	x2, x19, x19, lsr #63
   33cb0:	asr	x2, x2, #1
   33cb4:	str	x2, [sp, #104]
   33cb8:	bl	bed0 <mpfr_set_prec@plt>
   33cbc:	mov	x1, x19
   33cc0:	mov	x0, x22
   33cc4:	bl	bed0 <mpfr_set_prec@plt>
   33cc8:	mov	x1, x24
   33ccc:	mov	x0, x22
   33cd0:	mov	w2, #0x0                   	// #0
   33cd4:	bl	c850 <mpfr_set_q@plt>
   33cd8:	cbnz	w0, 33b44 <mpfr_sub_q@@Base+0xdc>
   33cdc:	nop
   33ce0:	mov	x1, x21
   33ce4:	mov	w3, w23
   33ce8:	mov	x2, x22
   33cec:	mov	x0, x20
   33cf0:	bl	bb70 <mpfr_sub@plt>
   33cf4:	mov	w19, w0
   33cf8:	b	33be8 <mpfr_sub_q@@Base+0x180>
   33cfc:	cbz	w19, 33d2c <mpfr_sub_q@@Base+0x2c4>
   33d00:	ldr	w0, [sp, #100]
   33d04:	ldp	x27, x28, [sp, #80]
   33d08:	orr	w26, w0, #0x8
   33d0c:	str	w26, [x2]
   33d10:	mov	w0, w19
   33d14:	ldp	x19, x20, [sp, #16]
   33d18:	ldp	x21, x22, [sp, #32]
   33d1c:	ldp	x23, x24, [sp, #48]
   33d20:	ldp	x25, x26, [sp, #64]
   33d24:	ldp	x29, x30, [sp], #192
   33d28:	ret
   33d2c:	mov	w0, w19
   33d30:	ldp	x19, x20, [sp, #16]
   33d34:	ldp	x21, x22, [sp, #32]
   33d38:	ldp	x23, x24, [sp, #48]
   33d3c:	ldp	x25, x26, [sp, #64]
   33d40:	ldp	x27, x28, [sp, #80]
   33d44:	ldp	x29, x30, [sp], #192
   33d48:	ret
   33d4c:	mov	x4, #0x2                   	// #2
   33d50:	movk	x4, #0x8000, lsl #48
   33d54:	cmp	x3, x4
   33d58:	b.eq	33df8 <mpfr_sub_q@@Base+0x390>  // b.none
   33d5c:	cmp	x3, x2
   33d60:	b.eq	33db8 <mpfr_sub_q@@Base+0x350>  // b.none
   33d64:	ldr	w2, [x24, #4]
   33d68:	cbz	w2, 33da4 <mpfr_sub_q@@Base+0x33c>
   33d6c:	cmp	w23, #0x2
   33d70:	b.eq	33e48 <mpfr_sub_q@@Base+0x3e0>  // b.none
   33d74:	cmp	w23, #0x3
   33d78:	mov	w0, #0x2                   	// #2
   33d7c:	csel	w23, w23, w0, ne  // ne = any
   33d80:	mov	x1, x24
   33d84:	mov	w2, w23
   33d88:	mov	x0, x20
   33d8c:	bl	c850 <mpfr_set_q@plt>
   33d90:	ldr	w1, [x20, #8]
   33d94:	neg	w19, w0
   33d98:	neg	w1, w1
   33d9c:	str	w1, [x20, #8]
   33da0:	b	33c6c <mpfr_sub_q@@Base+0x204>
   33da4:	ldr	w3, [x1, #8]
   33da8:	mov	w2, w23
   33dac:	bl	c6a0 <mpfr_set4@plt>
   33db0:	mov	w19, w0
   33db4:	b	33c6c <mpfr_sub_q@@Base+0x204>
   33db8:	ldr	w0, [x1, #8]
   33dbc:	ldr	w1, [x24, #20]
   33dc0:	cbz	w1, 33dd8 <mpfr_sub_q@@Base+0x370>
   33dc4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   33dc8:	mov	w19, #0x0                   	// #0
   33dcc:	str	w0, [x20, #8]
   33dd0:	str	x1, [x20, #16]
   33dd4:	b	33c6c <mpfr_sub_q@@Base+0x204>
   33dd8:	ldr	w2, [x24, #4]
   33ddc:	mov	w3, #0xffffffff            	// #-1
   33de0:	cmp	w2, #0x0
   33de4:	cset	w1, gt
   33de8:	csel	w1, w1, w3, ge  // ge = tcont
   33dec:	mul	w1, w0, w1
   33df0:	tbnz	w1, #31, 33dc4 <mpfr_sub_q@@Base+0x35c>
   33df4:	nop
   33df8:	mrs	x1, tpidr_el0
   33dfc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33e00:	ldr	x2, [x0, #2576]
   33e04:	add	x0, x0, #0xa10
   33e08:	blr	x2
   33e0c:	add	x0, x1, x0
   33e10:	mov	x1, #0x2                   	// #2
   33e14:	movk	x1, #0x8000, lsl #48
   33e18:	str	x1, [x20, #16]
   33e1c:	mov	w19, #0x0                   	// #0
   33e20:	ldr	w1, [x0]
   33e24:	orr	w1, w1, #0x4
   33e28:	str	w1, [x0]
   33e2c:	b	33c6c <mpfr_sub_q@@Base+0x204>
   33e30:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   33e34:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   33e38:	add	x2, x2, #0xc08
   33e3c:	add	x0, x0, #0xbe0
   33e40:	mov	w1, #0x1b3                 	// #435
   33e44:	bl	cb40 <mpfr_assert_fail@plt>
   33e48:	mov	w23, #0x3                   	// #3
   33e4c:	b	33d80 <mpfr_sub_q@@Base+0x318>
   33e50:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   33e54:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   33e58:	add	x2, x2, #0xc80
   33e5c:	add	x0, x0, #0xbe0
   33e60:	mov	w1, #0x1a3                 	// #419
   33e64:	bl	cb40 <mpfr_assert_fail@plt>

0000000000033e68 <mpfr_cmp_q@@Base>:
   33e68:	stp	x29, x30, [sp, #-128]!
   33e6c:	mov	x29, sp
   33e70:	ldr	w2, [x1, #20]
   33e74:	stp	x19, x20, [sp, #16]
   33e78:	mov	x19, x1
   33e7c:	mov	x20, x0
   33e80:	cbz	w2, 33f90 <mpfr_cmp_q@@Base+0x128>
   33e84:	ldr	x1, [x20, #16]
   33e88:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   33e8c:	cmp	x1, x0
   33e90:	b.le	34004 <mpfr_cmp_q@@Base+0x19c>
   33e94:	mrs	x3, tpidr_el0
   33e98:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33e9c:	ldr	x1, [x0, #2576]
   33ea0:	add	x0, x0, #0xa10
   33ea4:	blr	x1
   33ea8:	stp	x25, x26, [sp, #64]
   33eac:	add	x26, x3, x0
   33eb0:	mov	x1, #0xfffffffffffffff8    	// #-8
   33eb4:	ldr	x4, [x19, #24]
   33eb8:	str	x27, [sp, #80]
   33ebc:	ldr	w27, [x3, x0]
   33ec0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33ec4:	ldr	x5, [x0, #2512]
   33ec8:	add	x0, x0, #0x9d0
   33ecc:	blr	x5
   33ed0:	stp	x23, x24, [sp, #48]
   33ed4:	add	x23, x3, x0
   33ed8:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   33edc:	ldr	x25, [x3, x0]
   33ee0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33ee4:	ldr	x7, [x0, #2544]
   33ee8:	add	x0, x0, #0x9f0
   33eec:	blr	x7
   33ef0:	cmp	w2, #0x0
   33ef4:	stp	x21, x22, [sp, #32]
   33ef8:	cneg	w2, w2, lt  // lt = tstop
   33efc:	add	x22, x3, x0
   33f00:	mov	x5, #0x3fffffffffffffff    	// #4611686018427387903
   33f04:	ldr	x24, [x3, x0]
   33f08:	add	x0, x1, w2, sxtw #3
   33f0c:	ldr	x1, [x20]
   33f10:	str	x5, [x22]
   33f14:	str	x6, [x23]
   33f18:	sbfiz	x2, x2, #6, #32
   33f1c:	add	x21, sp, #0x60
   33f20:	ldr	x3, [x4, x0]
   33f24:	mov	x0, x21
   33f28:	clz	x3, x3
   33f2c:	sub	x2, x2, x3
   33f30:	add	x1, x2, x1
   33f34:	bl	ca80 <mpfr_init2@plt>
   33f38:	add	x2, x19, #0x10
   33f3c:	mov	w3, #0x0                   	// #0
   33f40:	mov	x1, x20
   33f44:	mov	x0, x21
   33f48:	bl	c4d0 <mpfr_mul_z@plt>
   33f4c:	mov	x1, x19
   33f50:	mov	x0, x21
   33f54:	bl	bbb0 <mpfr_cmp_z@plt>
   33f58:	mov	w19, w0
   33f5c:	mov	x0, x21
   33f60:	bl	c070 <mpfr_clear@plt>
   33f64:	str	x24, [x22]
   33f68:	ldp	x21, x22, [sp, #32]
   33f6c:	str	x25, [x23]
   33f70:	ldp	x23, x24, [sp, #48]
   33f74:	str	w27, [x26]
   33f78:	ldp	x25, x26, [sp, #64]
   33f7c:	ldr	x27, [sp, #80]
   33f80:	mov	w0, w19
   33f84:	ldp	x19, x20, [sp, #16]
   33f88:	ldp	x29, x30, [sp], #128
   33f8c:	ret
   33f90:	stp	x21, x22, [sp, #32]
   33f94:	add	x21, sp, #0x60
   33f98:	mov	x0, x21
   33f9c:	mov	x1, #0x1                   	// #1
   33fa0:	bl	ca80 <mpfr_init2@plt>
   33fa4:	mrs	x3, tpidr_el0
   33fa8:	mov	x1, x19
   33fac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   33fb0:	ldr	x4, [x0, #2576]
   33fb4:	add	x0, x0, #0xa10
   33fb8:	blr	x4
   33fbc:	mov	w2, #0x0                   	// #0
   33fc0:	add	x19, x3, x0
   33fc4:	ldr	w22, [x3, x0]
   33fc8:	mov	x0, x21
   33fcc:	bl	c850 <mpfr_set_q@plt>
   33fd0:	mov	x1, x21
   33fd4:	mov	w2, #0x1                   	// #1
   33fd8:	mov	x0, x20
   33fdc:	str	w22, [x19]
   33fe0:	bl	c9a0 <mpfr_cmp3@plt>
   33fe4:	mov	w19, w0
   33fe8:	mov	x0, x21
   33fec:	bl	c070 <mpfr_clear@plt>
   33ff0:	mov	w0, w19
   33ff4:	ldp	x19, x20, [sp, #16]
   33ff8:	ldp	x21, x22, [sp, #32]
   33ffc:	ldp	x29, x30, [sp], #128
   34000:	ret
   34004:	ldr	w3, [x19, #4]
   34008:	mov	x4, #0xffffffffffffffff    	// #-1
   3400c:	mov	x0, x20
   34010:	mov	x2, #0x0                   	// #0
   34014:	cmp	w3, #0x0
   34018:	cset	x1, gt
   3401c:	csel	x1, x1, x4, ge  // ge = tcont
   34020:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   34024:	mov	w19, w0
   34028:	b	33f80 <mpfr_cmp_q@@Base+0x118>
   3402c:	nop

0000000000034030 <mpfr_cmp_f@@Base>:
   34030:	stp	x29, x30, [sp, #-128]!
   34034:	mov	x29, sp
   34038:	stp	x19, x20, [sp, #16]
   3403c:	mov	x20, x0
   34040:	ldr	w2, [x1, #4]
   34044:	stp	x21, x22, [sp, #32]
   34048:	mov	x21, x1
   3404c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   34050:	ldr	x1, [x20, #16]
   34054:	cmp	x1, x0
   34058:	b.le	34140 <mpfr_cmp_f@@Base+0x110>
   3405c:	mrs	x3, tpidr_el0
   34060:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   34064:	ldr	x1, [x0, #2576]
   34068:	add	x0, x0, #0xa10
   3406c:	blr	x1
   34070:	stp	x25, x26, [sp, #64]
   34074:	add	x26, x3, x0
   34078:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   3407c:	str	x27, [sp, #80]
   34080:	add	x19, sp, #0x60
   34084:	ldr	w27, [x3, x0]
   34088:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3408c:	ldr	x5, [x0, #2512]
   34090:	add	x0, x0, #0x9d0
   34094:	blr	x5
   34098:	stp	x23, x24, [sp, #48]
   3409c:	add	x23, x3, x0
   340a0:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   340a4:	ldr	x25, [x3, x0]
   340a8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   340ac:	ldr	x5, [x0, #2544]
   340b0:	add	x0, x0, #0x9f0
   340b4:	blr	x5
   340b8:	cmp	w2, #0x0
   340bc:	add	x22, x3, x0
   340c0:	cneg	w2, w2, lt  // lt = tstop
   340c4:	str	x4, [x23]
   340c8:	ldr	x24, [x3, x0]
   340cc:	lsl	w2, w2, #6
   340d0:	add	w2, w2, #0x1
   340d4:	mov	x0, x19
   340d8:	str	x1, [x22]
   340dc:	sxtw	x1, w2
   340e0:	bl	ca80 <mpfr_init2@plt>
   340e4:	mov	x1, x21
   340e8:	mov	x0, x19
   340ec:	mov	w2, #0x0                   	// #0
   340f0:	bl	bd40 <mpfr_set_f@plt>
   340f4:	mov	x1, x19
   340f8:	mov	w2, #0x1                   	// #1
   340fc:	mov	x0, x20
   34100:	bl	c9a0 <mpfr_cmp3@plt>
   34104:	mov	w1, w0
   34108:	mov	x0, x19
   3410c:	mov	w19, w1
   34110:	bl	c070 <mpfr_clear@plt>
   34114:	str	x24, [x22]
   34118:	str	x25, [x23]
   3411c:	mov	w0, w19
   34120:	ldp	x23, x24, [sp, #48]
   34124:	str	w27, [x26]
   34128:	ldp	x19, x20, [sp, #16]
   3412c:	ldp	x21, x22, [sp, #32]
   34130:	ldp	x25, x26, [sp, #64]
   34134:	ldr	x27, [sp, #80]
   34138:	ldp	x29, x30, [sp], #128
   3413c:	ret
   34140:	cmp	w2, #0x0
   34144:	mov	x0, #0xffffffffffffffff    	// #-1
   34148:	cset	x1, gt
   3414c:	mov	x2, #0x0                   	// #0
   34150:	csel	x1, x1, x0, ge  // ge = tcont
   34154:	mov	x0, x20
   34158:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   3415c:	mov	w19, w0
   34160:	mov	w0, w19
   34164:	ldp	x19, x20, [sp, #16]
   34168:	ldp	x21, x22, [sp, #32]
   3416c:	ldp	x29, x30, [sp], #128
   34170:	ret
   34174:	nop

0000000000034178 <mpfr_acos@@Base>:
   34178:	stp	x29, x30, [sp, #-208]!
   3417c:	mov	x29, sp
   34180:	stp	x21, x22, [sp, #32]
   34184:	mov	x21, x1
   34188:	mov	x22, x0
   3418c:	stp	x19, x20, [sp, #16]
   34190:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   34194:	ldr	x0, [x21, #16]
   34198:	stp	x23, x24, [sp, #48]
   3419c:	mov	w24, w2
   341a0:	cmp	x0, x1
   341a4:	b.le	34498 <mpfr_acos@@Base+0x320>
   341a8:	ldr	x1, [x21]
   341ac:	add	x23, sp, #0x70
   341b0:	mov	x0, x23
   341b4:	stp	x25, x26, [sp, #64]
   341b8:	ldr	w25, [x21, #8]
   341bc:	bl	ca80 <mpfr_init2@plt>
   341c0:	mov	w3, #0x1                   	// #1
   341c4:	mov	x1, x21
   341c8:	mov	w2, #0x0                   	// #0
   341cc:	mov	x0, x23
   341d0:	bl	c6a0 <mpfr_set4@plt>
   341d4:	mov	x0, x23
   341d8:	mov	x2, #0x0                   	// #0
   341dc:	mov	x1, #0x1                   	// #1
   341e0:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   341e4:	mov	w19, w0
   341e8:	tbz	w0, #31, 345c8 <mpfr_acos@@Base+0x450>
   341ec:	mrs	x20, tpidr_el0
   341f0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   341f4:	ldr	x1, [x0, #2576]
   341f8:	add	x0, x0, #0xa10
   341fc:	blr	x1
   34200:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   34204:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   34208:	stp	x27, x28, [sp, #80]
   3420c:	mov	x2, x23
   34210:	ldr	w0, [x20, x0]
   34214:	str	w0, [sp, #100]
   34218:	mov	w3, #0x3                   	// #3
   3421c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   34220:	ldr	x1, [x0, #2512]
   34224:	add	x0, x0, #0x9d0
   34228:	blr	x1
   3422c:	add	x5, x20, x0
   34230:	ldr	x27, [x20, x0]
   34234:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   34238:	ldr	x7, [x0, #2544]
   3423c:	add	x0, x0, #0x9f0
   34240:	blr	x7
   34244:	mov	x1, #0x1                   	// #1
   34248:	str	x6, [x5]
   3424c:	ldr	x28, [x20, x0]
   34250:	str	x4, [x20, x0]
   34254:	mov	x0, x23
   34258:	bl	ca50 <mpfr_ui_sub@plt>
   3425c:	cmp	w25, #0x0
   34260:	ldr	x0, [sp, #128]
   34264:	b.le	3445c <mpfr_acos@@Base+0x2e4>
   34268:	mov	x25, #0x1                   	// #1
   3426c:	sub	x25, x25, x0
   34270:	lsl	x25, x25, #1
   34274:	mov	x0, x23
   34278:	bl	c070 <mpfr_clear@plt>
   3427c:	ldr	x1, [x22]
   34280:	cmp	x1, #0x1
   34284:	b.eq	345f4 <mpfr_acos@@Base+0x47c>  // b.none
   34288:	b.le	346cc <mpfr_acos@@Base+0x554>
   3428c:	sub	x19, x1, #0x1
   34290:	mov	w0, #0x4a                  	// #74
   34294:	clz	x19, x19
   34298:	sub	w19, w0, w19
   3429c:	sxtw	x19, w19
   342a0:	add	x19, x25, x19
   342a4:	mov	x0, #0x40                  	// #64
   342a8:	add	x19, x19, x1
   342ac:	add	x26, sp, #0xb0
   342b0:	mov	x1, x19
   342b4:	add	x23, sp, #0x90
   342b8:	str	x0, [sp, #104]
   342bc:	mov	x0, x26
   342c0:	bl	ca80 <mpfr_init2@plt>
   342c4:	mov	x1, x19
   342c8:	mov	x0, x23
   342cc:	bl	ca80 <mpfr_init2@plt>
   342d0:	mov	x1, x21
   342d4:	mov	w2, #0x0                   	// #0
   342d8:	mov	x0, x26
   342dc:	bl	c400 <mpfr_sqr@plt>
   342e0:	mov	w3, #0x0                   	// #0
   342e4:	mov	x2, x26
   342e8:	mov	x1, #0x1                   	// #1
   342ec:	mov	x0, x26
   342f0:	bl	ca50 <mpfr_ui_sub@plt>
   342f4:	mov	x1, x26
   342f8:	mov	w2, #0x0                   	// #0
   342fc:	mov	x0, x26
   34300:	bl	c930 <mpfr_sqrt@plt>
   34304:	mov	w3, #0x0                   	// #0
   34308:	mov	x2, x26
   3430c:	mov	x1, x21
   34310:	mov	x0, x26
   34314:	bl	c620 <mpfr_div@plt>
   34318:	mov	x1, x26
   3431c:	mov	w2, #0x0                   	// #0
   34320:	mov	x0, x23
   34324:	bl	c690 <mpfr_atan@plt>
   34328:	mov	w2, #0x0                   	// #0
   3432c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   34330:	ldr	x1, [x0, #2624]
   34334:	add	x0, x0, #0xa40
   34338:	blr	x1
   3433c:	add	x1, x20, x0
   34340:	mov	x0, x26
   34344:	bl	c380 <mpfr_cache@plt>
   34348:	mov	x1, x26
   3434c:	mov	w3, #0x0                   	// #0
   34350:	mov	x2, #0x1                   	// #1
   34354:	mov	x0, x26
   34358:	bl	c8f0 <mpfr_div_2ui@plt>
   3435c:	mov	x1, x26
   34360:	mov	x2, x23
   34364:	mov	x0, x23
   34368:	mov	w3, #0x0                   	// #0
   3436c:	bl	bb70 <mpfr_sub@plt>
   34370:	ldr	x0, [sp, #160]
   34374:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   34378:	cmp	x0, x1
   3437c:	b.le	34580 <mpfr_acos@@Base+0x408>
   34380:	ldr	x1, [sp, #144]
   34384:	cmp	w24, #0x0
   34388:	ldr	x0, [sp, #168]
   3438c:	sub	x1, x1, #0x1
   34390:	ldr	x3, [x22]
   34394:	asr	x1, x1, #6
   34398:	sub	x2, x19, x25
   3439c:	add	x1, x1, #0x1
   343a0:	cinc	x3, x3, eq  // eq = none
   343a4:	bl	c370 <mpfr_round_p@plt>
   343a8:	cbz	w0, 34580 <mpfr_acos@@Base+0x408>
   343ac:	ldr	w3, [sp, #152]
   343b0:	mov	w2, w24
   343b4:	mov	x1, x23
   343b8:	mov	x0, x22
   343bc:	bl	c6a0 <mpfr_set4@plt>
   343c0:	mov	w19, w0
   343c4:	mov	x0, x26
   343c8:	bl	c070 <mpfr_clear@plt>
   343cc:	mov	x0, x23
   343d0:	bl	c070 <mpfr_clear@plt>
   343d4:	ldr	x1, [x22, #16]
   343d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   343dc:	ldr	x2, [x0, #2576]
   343e0:	add	x0, x0, #0xa10
   343e4:	blr	x2
   343e8:	ldr	w2, [sp, #100]
   343ec:	str	w2, [x20, x0]
   343f0:	add	x2, x20, x0
   343f4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   343f8:	ldr	x3, [x0, #2512]
   343fc:	add	x0, x0, #0x9d0
   34400:	blr	x3
   34404:	str	x27, [x20, x0]
   34408:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3440c:	ldr	x3, [x0, #2544]
   34410:	add	x0, x0, #0x9f0
   34414:	blr	x3
   34418:	str	x28, [x20, x0]
   3441c:	cmp	x28, x1
   34420:	ccmp	x27, x1, #0x0, ge  // ge = tcont
   34424:	b.le	34468 <mpfr_acos@@Base+0x2f0>
   34428:	mov	w1, w19
   3442c:	mov	w2, w24
   34430:	mov	x0, x22
   34434:	bl	cb30 <mpfr_check_range@plt>
   34438:	ldp	x25, x26, [sp, #64]
   3443c:	mov	w19, w0
   34440:	ldp	x27, x28, [sp, #80]
   34444:	mov	w0, w19
   34448:	ldp	x19, x20, [sp, #16]
   3444c:	ldp	x21, x22, [sp, #32]
   34450:	ldp	x23, x24, [sp, #48]
   34454:	ldp	x29, x30, [sp], #208
   34458:	ret
   3445c:	mov	x25, #0x2                   	// #2
   34460:	sub	x25, x25, x0
   34464:	b	34274 <mpfr_acos@@Base+0xfc>
   34468:	cbz	w19, 34560 <mpfr_acos@@Base+0x3e8>
   3446c:	ldr	w0, [sp, #100]
   34470:	ldp	x27, x28, [sp, #80]
   34474:	orr	w26, w0, #0x8
   34478:	str	w26, [x2]
   3447c:	mov	w0, w19
   34480:	ldp	x19, x20, [sp, #16]
   34484:	ldp	x21, x22, [sp, #32]
   34488:	ldp	x23, x24, [sp, #48]
   3448c:	ldp	x25, x26, [sp, #64]
   34490:	ldp	x29, x30, [sp], #208
   34494:	ret
   34498:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   3449c:	add	x0, x0, x1
   344a0:	cmp	x0, #0x1
   344a4:	b.ls	34640 <mpfr_acos@@Base+0x4c8>  // b.plast
   344a8:	mrs	x1, tpidr_el0
   344ac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   344b0:	ldr	x3, [x0, #2576]
   344b4:	add	x0, x0, #0xa10
   344b8:	blr	x3
   344bc:	stp	x25, x26, [sp, #64]
   344c0:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   344c4:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   344c8:	ldr	w20, [x1, x0]
   344cc:	stp	x27, x28, [sp, #80]
   344d0:	add	x27, x1, x0
   344d4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   344d8:	ldr	x5, [x0, #2512]
   344dc:	add	x0, x0, #0x9d0
   344e0:	blr	x5
   344e4:	add	x26, x1, x0
   344e8:	ldr	x21, [x1, x0]
   344ec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   344f0:	ldr	x5, [x0, #2544]
   344f4:	add	x0, x0, #0x9f0
   344f8:	blr	x5
   344fc:	add	x25, x1, x0
   34500:	str	x4, [x26]
   34504:	ldr	x23, [x1, x0]
   34508:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3450c:	ldr	x4, [x0, #2624]
   34510:	add	x0, x0, #0xa40
   34514:	blr	x4
   34518:	add	x1, x1, x0
   3451c:	mov	x0, x22
   34520:	str	x3, [x25]
   34524:	bl	c380 <mpfr_cache@plt>
   34528:	mov	w3, w24
   3452c:	mov	w19, w0
   34530:	mov	x1, x22
   34534:	mov	x0, x22
   34538:	mov	x2, #0x1                   	// #1
   3453c:	bl	c8f0 <mpfr_div_2ui@plt>
   34540:	ldr	x0, [x22, #16]
   34544:	str	x23, [x25]
   34548:	str	x21, [x26]
   3454c:	str	w20, [x27]
   34550:	cmp	x23, x0
   34554:	ccmp	x21, x0, #0x0, ge  // ge = tcont
   34558:	b.gt	34428 <mpfr_acos@@Base+0x2b0>
   3455c:	cbnz	w19, 345fc <mpfr_acos@@Base+0x484>
   34560:	mov	w0, w19
   34564:	ldp	x19, x20, [sp, #16]
   34568:	ldp	x21, x22, [sp, #32]
   3456c:	ldp	x23, x24, [sp, #48]
   34570:	ldp	x25, x26, [sp, #64]
   34574:	ldp	x27, x28, [sp, #80]
   34578:	ldp	x29, x30, [sp], #208
   3457c:	ret
   34580:	ldr	x1, [sp, #104]
   34584:	mov	x0, #0xfffffffffffffeff    	// #-257
   34588:	movk	x0, #0x7fff, lsl #48
   3458c:	sub	x0, x0, x19
   34590:	cmp	x0, x1
   34594:	b.lt	346b4 <mpfr_acos@@Base+0x53c>  // b.tstop
   34598:	ldr	x0, [sp, #104]
   3459c:	add	x19, x19, x0
   345a0:	mov	x0, x26
   345a4:	mov	x1, x19
   345a8:	add	x2, x19, x19, lsr #63
   345ac:	asr	x2, x2, #1
   345b0:	str	x2, [sp, #104]
   345b4:	bl	bed0 <mpfr_set_prec@plt>
   345b8:	mov	x1, x19
   345bc:	mov	x0, x23
   345c0:	bl	bed0 <mpfr_set_prec@plt>
   345c4:	b	342d0 <mpfr_acos@@Base+0x158>
   345c8:	mov	x0, x23
   345cc:	bl	c070 <mpfr_clear@plt>
   345d0:	cbnz	w19, 34678 <mpfr_acos@@Base+0x500>
   345d4:	cmp	w25, #0x0
   345d8:	b.le	34610 <mpfr_acos@@Base+0x498>
   345dc:	mov	w1, #0x1                   	// #1
   345e0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   345e4:	ldp	x25, x26, [sp, #64]
   345e8:	str	w1, [x22, #8]
   345ec:	str	x0, [x22, #16]
   345f0:	b	34444 <mpfr_acos@@Base+0x2cc>
   345f4:	mov	x19, #0xa                   	// #10
   345f8:	b	342a0 <mpfr_acos@@Base+0x128>
   345fc:	orr	w20, w20, #0x8
   34600:	ldp	x25, x26, [sp, #64]
   34604:	str	w20, [x27]
   34608:	ldp	x27, x28, [sp, #80]
   3460c:	b	34444 <mpfr_acos@@Base+0x2cc>
   34610:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   34614:	ldr	x1, [x0, #2624]
   34618:	add	x0, x0, #0xa40
   3461c:	blr	x1
   34620:	mov	w2, w24
   34624:	mrs	x1, tpidr_el0
   34628:	add	x1, x1, x0
   3462c:	mov	x0, x22
   34630:	bl	c380 <mpfr_cache@plt>
   34634:	mov	w19, w0
   34638:	ldp	x25, x26, [sp, #64]
   3463c:	b	34444 <mpfr_acos@@Base+0x2cc>
   34640:	mrs	x1, tpidr_el0
   34644:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   34648:	ldr	x2, [x0, #2576]
   3464c:	add	x0, x0, #0xa10
   34650:	blr	x2
   34654:	add	x0, x1, x0
   34658:	mov	x1, #0x2                   	// #2
   3465c:	movk	x1, #0x8000, lsl #48
   34660:	str	x1, [x22, #16]
   34664:	mov	w19, #0x0                   	// #0
   34668:	ldr	w1, [x0]
   3466c:	orr	w1, w1, #0x4
   34670:	str	w1, [x0]
   34674:	b	34444 <mpfr_acos@@Base+0x2cc>
   34678:	mrs	x1, tpidr_el0
   3467c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   34680:	ldr	x2, [x0, #2576]
   34684:	add	x0, x0, #0xa10
   34688:	blr	x2
   3468c:	add	x0, x1, x0
   34690:	mov	x1, #0x2                   	// #2
   34694:	movk	x1, #0x8000, lsl #48
   34698:	mov	w19, #0x0                   	// #0
   3469c:	ldp	x25, x26, [sp, #64]
   346a0:	str	x1, [x22, #16]
   346a4:	ldr	w1, [x0]
   346a8:	orr	w1, w1, #0x4
   346ac:	str	w1, [x0]
   346b0:	b	34444 <mpfr_acos@@Base+0x2cc>
   346b4:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   346b8:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   346bc:	add	x2, x2, #0x830
   346c0:	add	x0, x0, #0xd08
   346c4:	mov	w1, #0x86                  	// #134
   346c8:	bl	cb40 <mpfr_assert_fail@plt>
   346cc:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   346d0:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   346d4:	add	x2, x2, #0x820
   346d8:	add	x0, x0, #0xd08
   346dc:	mov	w1, #0x60                  	// #96
   346e0:	bl	cb40 <mpfr_assert_fail@plt>
   346e4:	nop
   346e8:	stp	x29, x30, [sp, #-32]!
   346ec:	mov	x4, #0xfffffffffffffff8    	// #-8
   346f0:	mov	x29, sp
   346f4:	ldr	w3, [x1, #4]
   346f8:	ldr	x5, [x1, #8]
   346fc:	cmp	w3, #0x0
   34700:	cneg	w3, w3, lt  // lt = tstop
   34704:	str	x19, [sp, #16]
   34708:	add	x4, x4, w3, sxtw #3
   3470c:	sbfiz	x3, x3, #6, #32
   34710:	ldr	x19, [x5, x4]
   34714:	clz	x19, x19
   34718:	sub	x3, x3, x19
   3471c:	cmp	x3, x2
   34720:	b.le	34740 <mpfr_acos@@Base+0x5c8>
   34724:	sub	x19, x3, x2
   34728:	mov	x2, x19
   3472c:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   34730:	mov	x0, x19
   34734:	ldr	x19, [sp, #16]
   34738:	ldp	x29, x30, [sp], #32
   3473c:	ret
   34740:	mov	x2, #0x0                   	// #0
   34744:	mov	x19, #0x0                   	// #0
   34748:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   3474c:	mov	x0, x19
   34750:	ldr	x19, [sp, #16]
   34754:	ldp	x29, x30, [sp], #32
   34758:	ret
   3475c:	nop
   34760:	mov	x12, #0x1540                	// #5440
   34764:	sub	sp, sp, x12
   34768:	stp	x29, x30, [sp]
   3476c:	mov	x29, sp
   34770:	stp	x0, x1, [sp, #264]
   34774:	ldr	w1, [x3, #4]
   34778:	stp	x21, x22, [sp, #32]
   3477c:	str	x5, [sp, #184]
   34780:	stp	x3, x4, [sp, #280]
   34784:	str	x2, [sp, #296]
   34788:	cbz	w1, 34ea0 <mpfr_acos@@Base+0xd28>
   3478c:	mov	x2, #0x1140                	// #4416
   34790:	add	x21, sp, #0x940
   34794:	stp	x19, x20, [sp, #16]
   34798:	add	x20, sp, #0x130
   3479c:	mov	x0, x20
   347a0:	stp	x23, x24, [sp, #48]
   347a4:	mov	x23, x21
   347a8:	add	x24, sp, #0xd40
   347ac:	stp	x25, x26, [sp, #64]
   347b0:	add	x26, sp, x2
   347b4:	add	x21, x26, #0x10
   347b8:	stp	x27, x28, [sp, #80]
   347bc:	mov	x22, x20
   347c0:	mov	x25, #0xfffffffffffffff8    	// #-8
   347c4:	str	x23, [sp, #160]
   347c8:	str	x20, [sp, #200]
   347cc:	bl	bf90 <mpfr_mpz_init@plt>
   347d0:	ldr	x27, [sp, #280]
   347d4:	mov	x1, #0x0                   	// #0
   347d8:	mov	x0, x27
   347dc:	bl	ba90 <__gmpz_scan1@plt>
   347e0:	mov	x19, x0
   347e4:	mov	x1, x27
   347e8:	mov	x0, x20
   347ec:	mov	x2, x19
   347f0:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   347f4:	mov	x2, x20
   347f8:	mov	x1, x20
   347fc:	mov	x0, x20
   34800:	bl	bff0 <__gmpz_mul@plt>
   34804:	mov	x0, x23
   34808:	str	x24, [sp, #152]
   3480c:	str	x26, [sp, #176]
   34810:	bl	bf90 <mpfr_mpz_init@plt>
   34814:	mov	x1, #0x6                   	// #6
   34818:	mov	x0, x23
   3481c:	bl	bcb0 <__gmpz_set_ui@plt>
   34820:	mov	x0, x24
   34824:	bl	bf90 <mpfr_mpz_init@plt>
   34828:	mov	x1, #0x6                   	// #6
   3482c:	mov	x0, x24
   34830:	bl	bcb0 <__gmpz_set_ui@plt>
   34834:	ldr	x28, [sp, #288]
   34838:	mov	x0, x26
   3483c:	bl	bf90 <mpfr_mpz_init@plt>
   34840:	mov	x1, x20
   34844:	sub	x19, x28, x19
   34848:	mov	x0, x26
   3484c:	bl	bfa0 <__gmpz_set@plt>
   34850:	lsl	x26, x19, #1
   34854:	add	x0, x23, #0x10
   34858:	str	x26, [sp, #104]
   3485c:	bl	bf90 <mpfr_mpz_init@plt>
   34860:	add	x0, x24, #0x10
   34864:	bl	bf90 <mpfr_mpz_init@plt>
   34868:	mov	x0, x21
   3486c:	bl	bf90 <mpfr_mpz_init@plt>
   34870:	mov	x2, x22
   34874:	mov	x1, x22
   34878:	mov	x0, x21
   3487c:	bl	bff0 <__gmpz_mul@plt>
   34880:	ldr	w0, [sp, #4436]
   34884:	mov	x2, x26
   34888:	ldr	x5, [sp, #4440]
   3488c:	cmp	w0, #0x0
   34890:	cneg	w3, w0, lt  // lt = tstop
   34894:	mov	x1, x23
   34898:	mov	x0, x23
   3489c:	mov	x20, x26
   348a0:	add	x4, x25, w3, sxtw #3
   348a4:	sbfiz	x3, x3, #6, #32
   348a8:	ldr	x4, [x5, x4]
   348ac:	clz	x4, x4
   348b0:	sub	x3, x3, x4
   348b4:	str	x3, [sp, #1864]
   348b8:	bl	c200 <__gmpz_mul_2exp@plt>
   348bc:	mov	x2, x22
   348c0:	mov	x1, x23
   348c4:	mov	x0, x23
   348c8:	bl	bde0 <__gmpz_sub@plt>
   348cc:	ldr	w0, [sp, #308]
   348d0:	mov	x4, #0x1                   	// #1
   348d4:	ldr	w1, [x27, #4]
   348d8:	cmp	w0, #0x0
   348dc:	str	x4, [sp, #320]
   348e0:	cneg	w0, w0, lt  // lt = tstop
   348e4:	cmp	w1, #0x0
   348e8:	ldr	x6, [sp, #312]
   348ec:	cneg	w1, w1, lt  // lt = tstop
   348f0:	add	x3, x25, w0, sxtw #3
   348f4:	sbfiz	x0, x0, #6, #32
   348f8:	ldr	x5, [x27, #8]
   348fc:	add	x2, x25, w1, sxtw #3
   34900:	ldr	x3, [x6, x3]
   34904:	sbfiz	x1, x1, #6, #32
   34908:	ldr	x2, [x5, x2]
   3490c:	clz	x3, x3
   34910:	sub	x0, x0, x3
   34914:	clz	x2, x2
   34918:	sub	x0, x26, x0
   3491c:	sub	x1, x1, x2
   34920:	add	x0, x0, x28
   34924:	sub	x0, x0, x1
   34928:	str	x0, [sp, #832]
   3492c:	ldr	x1, [sp, #184]
   34930:	cmp	x0, x1
   34934:	b.ge	34edc <mpfr_acos@@Base+0xd64>  // b.tcont
   34938:	lsl	x0, x19, #2
   3493c:	stp	x0, x4, [sp, #216]
   34940:	mov	x0, #0x6                   	// #6
   34944:	str	x0, [sp, #144]
   34948:	mov	w0, #0x2                   	// #2
   3494c:	str	w0, [sp, #172]
   34950:	mov	x0, #0x2                   	// #2
   34954:	str	x0, [sp, #136]
   34958:	add	x0, sp, #0x140
   3495c:	str	x0, [sp, #112]
   34960:	add	x0, sp, #0xd44
   34964:	str	x0, [sp, #232]
   34968:	add	x0, sp, #0xd48
   3496c:	str	x0, [sp, #240]
   34970:	add	x0, sp, #0x340
   34974:	str	x0, [sp, #120]
   34978:	mov	x0, #0x1144                	// #4420
   3497c:	add	x0, sp, x0
   34980:	mov	w6, #0x0                   	// #0
   34984:	mov	x1, #0x1148                	// #4424
   34988:	add	x21, sp, #0x540
   3498c:	mov	w28, w6
   34990:	str	x0, [sp, #248]
   34994:	add	x0, sp, x1
   34998:	str	x25, [sp, #96]
   3499c:	str	x0, [sp, #256]
   349a0:	add	x0, sp, #0x740
   349a4:	str	x0, [sp, #192]
   349a8:	add	w8, w28, #0x1
   349ac:	add	w22, w28, #0x2
   349b0:	ldr	w0, [sp, #172]
   349b4:	sxtw	x26, w8
   349b8:	str	w22, [sp, #132]
   349bc:	mov	x24, x26
   349c0:	cmp	w22, w0
   349c4:	lsl	x19, x26, #4
   349c8:	b.lt	34a4c <mpfr_acos@@Base+0x8d4>  // b.tstop
   349cc:	add	w0, w0, #0x1
   349d0:	stp	w8, w0, [sp, #168]
   349d4:	ldr	x0, [sp, #160]
   349d8:	add	x20, x19, #0x10
   349dc:	add	x0, x0, x20
   349e0:	bl	bf90 <mpfr_mpz_init@plt>
   349e4:	ldr	x0, [sp, #152]
   349e8:	ldr	x23, [sp, #176]
   349ec:	add	x0, x0, x20
   349f0:	bl	bf90 <mpfr_mpz_init@plt>
   349f4:	add	x20, x23, x20
   349f8:	mov	x0, x20
   349fc:	bl	bf90 <mpfr_mpz_init@plt>
   34a00:	add	x2, x23, x19
   34a04:	mov	x0, x20
   34a08:	mov	x1, x2
   34a0c:	bl	bff0 <__gmpz_mul@plt>
   34a10:	ldp	x0, x2, [sp, #248]
   34a14:	sbfiz	x1, x22, #4, #32
   34a18:	ldr	w8, [sp, #168]
   34a1c:	ldr	w0, [x0, x1]
   34a20:	ldr	x2, [x2, x1]
   34a24:	cmp	w0, #0x0
   34a28:	ldr	x1, [sp, #96]
   34a2c:	cneg	w0, w0, lt  // lt = tstop
   34a30:	add	x1, x1, w0, sxtw #3
   34a34:	sbfiz	x0, x0, #6, #32
   34a38:	ldr	x1, [x2, x1]
   34a3c:	clz	x1, x1
   34a40:	sub	x0, x0, x1
   34a44:	ldr	x1, [sp, #192]
   34a48:	str	x0, [x1, w22, sxtw #3]
   34a4c:	ldp	x22, x0, [sp, #144]
   34a50:	str	w8, [sp, #168]
   34a54:	ldr	x2, [sp, #112]
   34a58:	ldr	x3, [sp, #224]
   34a5c:	add	x20, x0, x19
   34a60:	mov	x1, x22
   34a64:	mov	x0, x20
   34a68:	str	x3, [x2, x26, lsl #3]
   34a6c:	bl	bcb0 <__gmpz_set_ui@plt>
   34a70:	ldr	x0, [sp, #160]
   34a74:	mov	x1, x20
   34a78:	add	x2, x22, #0x1
   34a7c:	add	x25, x0, x19
   34a80:	mov	x0, x20
   34a84:	bl	c100 <__gmpz_mul_ui@plt>
   34a88:	ldr	x2, [sp, #104]
   34a8c:	mov	x1, x20
   34a90:	mov	x0, x25
   34a94:	bl	c200 <__gmpz_mul_2exp@plt>
   34a98:	ldr	x2, [sp, #200]
   34a9c:	mov	x1, x25
   34aa0:	mov	x0, x25
   34aa4:	bl	bde0 <__gmpz_sub@plt>
   34aa8:	ldr	x23, [sp, #136]
   34aac:	mov	x1, x20
   34ab0:	mov	x0, x20
   34ab4:	lsl	x2, x23, #1
   34ab8:	bl	c100 <__gmpz_mul_ui@plt>
   34abc:	mov	x1, x20
   34ac0:	mov	x0, x20
   34ac4:	sub	x2, x22, #0x1
   34ac8:	bl	c100 <__gmpz_mul_ui@plt>
   34acc:	add	x0, x23, #0x1
   34ad0:	str	x0, [sp, #208]
   34ad4:	ldr	x0, [sp, #232]
   34ad8:	lsl	x1, x26, #4
   34adc:	ldr	x2, [sp, #240]
   34ae0:	ldr	w0, [x0, x1]
   34ae4:	ldr	x3, [sp, #1864]
   34ae8:	cmp	w0, #0x0
   34aec:	ldr	x2, [x2, x1]
   34af0:	cneg	w0, w0, lt  // lt = tstop
   34af4:	ldr	x1, [sp, #216]
   34af8:	ldr	w8, [sp, #168]
   34afc:	sub	x3, x1, x3
   34b00:	ldr	x1, [sp, #96]
   34b04:	sub	x3, x3, #0x1
   34b08:	add	x1, x1, w0, sxtw #3
   34b0c:	sbfiz	x0, x0, #6, #32
   34b10:	ldr	x1, [x2, x1]
   34b14:	clz	x1, x1
   34b18:	sub	x0, x0, x1
   34b1c:	add	x3, x3, x0
   34b20:	ldr	x0, [sp, #120]
   34b24:	str	x3, [x0, x26, lsl #3]
   34b28:	cbz	w8, 34b34 <mpfr_acos@@Base+0x9bc>
   34b2c:	ldr	x0, [x21, w28, sxtw #3]
   34b30:	add	x3, x3, x0
   34b34:	ldr	x0, [sp, #136]
   34b38:	str	x3, [x21, x26, lsl #3]
   34b3c:	add	x0, x0, #0x2
   34b40:	str	x0, [sp, #136]
   34b44:	lsr	x20, x0, #1
   34b48:	tbnz	w0, #1, 34c80 <mpfr_acos@@Base+0xb08>
   34b4c:	ldr	x0, [sp, #152]
   34b50:	sub	x19, x19, #0x10
   34b54:	add	x26, x0, x19
   34b58:	ldr	x0, [sp, #176]
   34b5c:	add	x27, x0, #0x10
   34b60:	ldr	x0, [sp, #192]
   34b64:	mov	x23, x27
   34b68:	mov	x27, x24
   34b6c:	add	x28, x0, #0x8
   34b70:	mov	x19, x28
   34b74:	mov	x28, x25
   34b78:	sub	x25, x28, #0x10
   34b7c:	mov	x2, x23
   34b80:	mov	x1, x28
   34b84:	mov	x0, x28
   34b88:	add	x22, x26, #0x10
   34b8c:	bl	bff0 <__gmpz_mul@plt>
   34b90:	mov	x1, x25
   34b94:	mov	x0, x25
   34b98:	mov	x2, x22
   34b9c:	bl	bff0 <__gmpz_mul@plt>
   34ba0:	ldr	w0, [sp, #132]
   34ba4:	mov	x1, x25
   34ba8:	ldr	x2, [sp, #104]
   34bac:	sub	w3, w0, w27
   34bb0:	mov	x0, x25
   34bb4:	lsr	x20, x20, #1
   34bb8:	add	x23, x23, #0x10
   34bbc:	add	x19, x19, #0x8
   34bc0:	lsl	x24, x2, x3
   34bc4:	mov	x2, x24
   34bc8:	bl	c200 <__gmpz_mul_2exp@plt>
   34bcc:	mov	x2, x28
   34bd0:	mov	x1, x25
   34bd4:	mov	x0, x25
   34bd8:	bl	c9c0 <__gmpz_add@plt>
   34bdc:	mov	x1, x26
   34be0:	mov	x0, x26
   34be4:	mov	x2, x22
   34be8:	bl	bff0 <__gmpz_mul@plt>
   34bec:	ldr	w0, [x26, #20]
   34bf0:	lsl	x1, x27, #3
   34bf4:	ldr	x2, [sp, #96]
   34bf8:	cmp	w0, #0x0
   34bfc:	cneg	w0, w0, lt  // lt = tstop
   34c00:	add	x7, x21, x1
   34c04:	ldr	x3, [x26, #24]
   34c08:	add	x2, x2, w0, sxtw #3
   34c0c:	ldr	x4, [sp, #112]
   34c10:	sbfiz	x0, x0, #6, #32
   34c14:	ldr	x3, [x3, x2]
   34c18:	sub	w9, w27, #0x2
   34c1c:	ldr	x2, [sp, #120]
   34c20:	clz	x3, x3
   34c24:	sub	x3, x0, x3
   34c28:	sub	w8, w27, #0x1
   34c2c:	add	x2, x2, x1
   34c30:	add	x1, x4, x1
   34c34:	ldur	x0, [x19, #-8]
   34c38:	add	x3, x3, x24
   34c3c:	ldur	x4, [x2, #-8]
   34c40:	sub	x3, x3, x0
   34c44:	ldur	x0, [x1, #-8]
   34c48:	sub	x3, x3, #0x1
   34c4c:	add	x3, x3, x4
   34c50:	stur	x3, [x2, #-8]
   34c54:	add	x0, x0, #0x1
   34c58:	stur	x0, [x1, #-8]
   34c5c:	cmp	w27, #0x1
   34c60:	mov	x28, x25
   34c64:	sub	x27, x27, #0x1
   34c68:	sub	x26, x26, #0x10
   34c6c:	b.eq	34c78 <mpfr_acos@@Base+0xb00>  // b.none
   34c70:	ldr	x0, [x21, w9, sxtw #3]
   34c74:	add	x3, x3, x0
   34c78:	stur	x3, [x7, #-8]
   34c7c:	tbz	w20, #0, 34b78 <mpfr_acos@@Base+0xa00>
   34c80:	ldr	x0, [sp, #144]
   34c84:	add	x0, x0, #0x4
   34c88:	str	x0, [sp, #144]
   34c8c:	ldr	x0, [sp, #184]
   34c90:	cmp	x0, x3
   34c94:	b.le	34ca0 <mpfr_acos@@Base+0xb28>
   34c98:	mov	w28, w8
   34c9c:	b	349a8 <mpfr_acos@@Base+0x830>
   34ca0:	ldr	x24, [sp, #104]
   34ca4:	cmp	w8, #0x0
   34ca8:	ldr	x0, [sp, #208]
   34cac:	mul	x20, x24, x0
   34cb0:	b.le	34d64 <mpfr_acos@@Base+0xbec>
   34cb4:	ldr	x0, [sp, #112]
   34cb8:	sbfiz	x26, x8, #4, #32
   34cbc:	ldr	x27, [sp, #176]
   34cc0:	mov	w28, w8
   34cc4:	add	x22, x0, w8, sxtw #3
   34cc8:	mov	x19, #0x0                   	// #0
   34ccc:	ldr	x0, [sp, #160]
   34cd0:	mov	x21, #0x1                   	// #1
   34cd4:	str	x20, [sp, #96]
   34cd8:	add	x25, x0, x26
   34cdc:	ldr	x0, [sp, #152]
   34ce0:	add	x26, x0, x26
   34ce4:	nop
   34ce8:	ldur	x2, [x22, #-8]
   34cec:	sub	x23, x25, #0x10
   34cf0:	mov	x1, x25
   34cf4:	mov	x0, x25
   34cf8:	sub	x20, x26, #0x10
   34cfc:	sub	w28, w28, #0x1
   34d00:	add	x2, x27, x2, lsl #4
   34d04:	bl	bff0 <__gmpz_mul@plt>
   34d08:	mov	x2, x26
   34d0c:	mov	x1, x23
   34d10:	mov	x0, x23
   34d14:	bl	bff0 <__gmpz_mul@plt>
   34d18:	ldr	x2, [x22], #-8
   34d1c:	mov	x1, x23
   34d20:	mov	x0, x23
   34d24:	lsl	x2, x21, x2
   34d28:	add	x19, x19, x2
   34d2c:	mul	x2, x24, x19
   34d30:	bl	c200 <__gmpz_mul_2exp@plt>
   34d34:	mov	x2, x25
   34d38:	mov	x1, x23
   34d3c:	mov	x0, x23
   34d40:	bl	c9c0 <__gmpz_add@plt>
   34d44:	mov	x2, x26
   34d48:	mov	x25, x23
   34d4c:	mov	x1, x20
   34d50:	mov	x0, x20
   34d54:	mov	x26, x20
   34d58:	bl	bff0 <__gmpz_mul@plt>
   34d5c:	cbnz	w28, 34ce8 <mpfr_acos@@Base+0xb70>
   34d60:	ldr	x20, [sp, #96]
   34d64:	ldr	x0, [sp, #264]
   34d68:	ldr	x23, [sp, #152]
   34d6c:	ldr	x25, [sp, #184]
   34d70:	mov	x1, x23
   34d74:	mov	x2, x25
   34d78:	bl	346e8 <mpfr_acos@@Base+0x570>
   34d7c:	ldr	x24, [sp, #160]
   34d80:	mov	x22, x0
   34d84:	mov	x2, x25
   34d88:	mov	x1, x24
   34d8c:	mov	x0, x24
   34d90:	bl	346e8 <mpfr_acos@@Base+0x570>
   34d94:	mov	x19, x0
   34d98:	ldp	x21, x2, [sp, #272]
   34d9c:	mov	x1, x24
   34da0:	mov	x0, x21
   34da4:	bl	bff0 <__gmpz_mul@plt>
   34da8:	mov	x1, x21
   34dac:	mov	x2, x25
   34db0:	mov	x0, x21
   34db4:	bl	346e8 <mpfr_acos@@Base+0x570>
   34db8:	ldr	x1, [sp, #288]
   34dbc:	add	x21, x1, x20
   34dc0:	add	x1, x19, x0
   34dc4:	ldr	x0, [sp, #200]
   34dc8:	sub	x21, x21, x1
   34dcc:	add	x21, x21, x22
   34dd0:	mov	x19, x24
   34dd4:	bl	c170 <mpfr_mpz_clear@plt>
   34dd8:	ldr	w0, [sp, #172]
   34ddc:	ldr	x22, [sp, #176]
   34de0:	sub	w20, w0, #0x1
   34de4:	add	x0, x24, #0x10
   34de8:	add	x20, x0, w20, uxtw #4
   34dec:	nop
   34df0:	mov	x0, x19
   34df4:	bl	c170 <mpfr_mpz_clear@plt>
   34df8:	mov	x0, x23
   34dfc:	bl	c170 <mpfr_mpz_clear@plt>
   34e00:	mov	x0, x22
   34e04:	add	x19, x19, #0x10
   34e08:	bl	c170 <mpfr_mpz_clear@plt>
   34e0c:	add	x23, x23, #0x10
   34e10:	cmp	x20, x19
   34e14:	add	x22, x22, #0x10
   34e18:	b.ne	34df0 <mpfr_acos@@Base+0xc78>  // b.any
   34e1c:	ldr	x0, [sp, #264]
   34e20:	mov	w1, #0x2                   	// #2
   34e24:	bl	cb60 <__gmpz_sizeinbase@plt>
   34e28:	add	x0, x0, x21
   34e2c:	ldr	x1, [sp, #184]
   34e30:	cmp	x0, x1
   34e34:	b.cc	34ee8 <mpfr_acos@@Base+0xd70>  // b.lo, b.ul, b.last
   34e38:	ldr	x2, [sp, #264]
   34e3c:	ldr	x19, [sp, #296]
   34e40:	mov	x1, x2
   34e44:	mov	x0, x19
   34e48:	bl	bff0 <__gmpz_mul@plt>
   34e4c:	lsl	x2, x21, #1
   34e50:	mov	x1, x19
   34e54:	mov	x0, x19
   34e58:	bl	c200 <__gmpz_mul_2exp@plt>
   34e5c:	ldr	x2, [sp, #272]
   34e60:	mov	x0, x19
   34e64:	mov	x1, x2
   34e68:	bl	c880 <__gmpz_submul@plt>
   34e6c:	mov	x1, x19
   34e70:	mov	x0, x19
   34e74:	bl	bc60 <__gmpz_sqrt@plt>
   34e78:	mov	x0, x21
   34e7c:	mov	x12, #0x1540                	// #5440
   34e80:	ldp	x29, x30, [sp]
   34e84:	ldp	x19, x20, [sp, #16]
   34e88:	ldp	x21, x22, [sp, #32]
   34e8c:	ldp	x23, x24, [sp, #48]
   34e90:	ldp	x25, x26, [sp, #64]
   34e94:	ldp	x27, x28, [sp, #80]
   34e98:	add	sp, sp, x12
   34e9c:	ret
   34ea0:	mov	x1, #0x1                   	// #1
   34ea4:	bl	bcb0 <__gmpz_set_ui@plt>
   34ea8:	ldr	x0, [sp, #272]
   34eac:	mov	x1, #0x1                   	// #1
   34eb0:	mov	x21, #0x0                   	// #0
   34eb4:	bl	bcb0 <__gmpz_set_ui@plt>
   34eb8:	ldr	x0, [sp, #296]
   34ebc:	mov	x1, #0x1                   	// #1
   34ec0:	bl	bcb0 <__gmpz_set_ui@plt>
   34ec4:	mov	x0, x21
   34ec8:	mov	x12, #0x1540                	// #5440
   34ecc:	ldp	x29, x30, [sp]
   34ed0:	ldp	x21, x22, [sp, #32]
   34ed4:	add	sp, sp, x12
   34ed8:	ret
   34edc:	mov	w0, #0x2                   	// #2
   34ee0:	str	w0, [sp, #172]
   34ee4:	b	34d64 <mpfr_acos@@Base+0xbec>
   34ee8:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   34eec:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   34ef0:	add	x2, x2, #0xd10
   34ef4:	add	x0, x0, #0xd38
   34ef8:	mov	w1, #0x1be                 	// #446
   34efc:	bl	cb40 <mpfr_assert_fail@plt>
   34f00:	b	34e38 <mpfr_acos@@Base+0xcc0>
   34f04:	nop
   34f08:	stp	x29, x30, [sp, #-304]!
   34f0c:	mov	x29, sp
   34f10:	stp	x0, x1, [sp, #144]
   34f14:	ldr	x1, [x2]
   34f18:	stp	x23, x24, [sp, #48]
   34f1c:	add	x23, sp, #0x110
   34f20:	stp	x19, x20, [sp, #16]
   34f24:	mov	x19, x2
   34f28:	add	x20, sp, #0xc0
   34f2c:	stp	x21, x22, [sp, #32]
   34f30:	add	x22, sp, #0xb0
   34f34:	add	x24, sp, #0xe0
   34f38:	stp	x25, x26, [sp, #64]
   34f3c:	add	x21, sp, #0xf0
   34f40:	add	x25, sp, #0x100
   34f44:	stp	x27, x28, [sp, #80]
   34f48:	add	x27, sp, #0xa0
   34f4c:	add	x28, sp, #0xd0
   34f50:	ldr	x26, [x0]
   34f54:	mov	x0, x23
   34f58:	bl	ca80 <mpfr_init2@plt>
   34f5c:	mov	x0, x27
   34f60:	bl	bf90 <mpfr_mpz_init@plt>
   34f64:	mov	x0, x22
   34f68:	bl	bf90 <mpfr_mpz_init@plt>
   34f6c:	mov	x0, x20
   34f70:	bl	bf90 <mpfr_mpz_init@plt>
   34f74:	mov	x0, x28
   34f78:	bl	bf90 <mpfr_mpz_init@plt>
   34f7c:	mov	x0, x24
   34f80:	bl	bf90 <mpfr_mpz_init@plt>
   34f84:	mov	x0, x21
   34f88:	bl	bf90 <mpfr_mpz_init@plt>
   34f8c:	mov	x0, x25
   34f90:	bl	bf90 <mpfr_mpz_init@plt>
   34f94:	ldr	w3, [x19, #8]
   34f98:	mov	w2, #0x0                   	// #0
   34f9c:	mov	x1, x19
   34fa0:	mov	x0, x23
   34fa4:	str	xzr, [sp, #104]
   34fa8:	mov	x19, #0x1                   	// #1
   34fac:	str	xzr, [sp, #120]
   34fb0:	bl	c6a0 <mpfr_set4@plt>
   34fb4:	mov	x0, x27
   34fb8:	mov	x1, x19
   34fbc:	bl	bcb0 <__gmpz_set_ui@plt>
   34fc0:	mov	x0, x22
   34fc4:	mov	x1, #0x0                   	// #0
   34fc8:	bl	bcb0 <__gmpz_set_ui@plt>
   34fcc:	mov	x0, x20
   34fd0:	mov	x1, x19
   34fd4:	bl	bcb0 <__gmpz_set_ui@plt>
   34fd8:	add	x0, x26, x26, lsr #63
   34fdc:	asr	x0, x0, #1
   34fe0:	str	x0, [sp, #128]
   34fe4:	b	35194 <mpfr_acos@@Base+0x101c>
   34fe8:	mov	x1, x23
   34fec:	mov	x0, x24
   34ff0:	bl	cac0 <mpfr_get_z_2exp@plt>
   34ff4:	sub	x2, x19, #0x1
   34ff8:	mov	x1, #0x1                   	// #1
   34ffc:	sub	x0, x2, x0
   35000:	str	x0, [sp, #112]
   35004:	mov	x0, x28
   35008:	bl	bcb0 <__gmpz_set_ui@plt>
   3500c:	lsl	x1, x19, #1
   35010:	mov	x0, x21
   35014:	str	x1, [sp, #96]
   35018:	mov	x1, #0x1                   	// #1
   3501c:	bl	bcb0 <__gmpz_set_ui@plt>
   35020:	ldr	x2, [sp, #112]
   35024:	mov	x0, x21
   35028:	mov	x1, x21
   3502c:	bl	c200 <__gmpz_mul_2exp@plt>
   35030:	mov	w0, #0x1                   	// #1
   35034:	str	w0, [sp, #280]
   35038:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3503c:	str	x0, [sp, #288]
   35040:	cmp	x19, #0x1
   35044:	b.eq	35228 <mpfr_acos@@Base+0x10b0>  // b.none
   35048:	mov	x2, x20
   3504c:	mov	x1, x22
   35050:	mov	x0, x25
   35054:	bl	c9c0 <__gmpz_add@plt>
   35058:	mov	x2, x21
   3505c:	mov	x1, x20
   35060:	mov	x0, x20
   35064:	bl	bff0 <__gmpz_mul@plt>
   35068:	mov	x2, x24
   3506c:	mov	x1, x21
   35070:	mov	x0, x21
   35074:	bl	c9c0 <__gmpz_add@plt>
   35078:	mov	x2, x24
   3507c:	mov	x1, x22
   35080:	mov	x0, x24
   35084:	bl	bff0 <__gmpz_mul@plt>
   35088:	mov	x2, x21
   3508c:	mov	x1, x25
   35090:	mov	x0, x25
   35094:	bl	bff0 <__gmpz_mul@plt>
   35098:	mov	x2, x24
   3509c:	mov	x1, x25
   350a0:	mov	x0, x22
   350a4:	bl	bde0 <__gmpz_sub@plt>
   350a8:	mov	x2, x20
   350ac:	mov	x1, x22
   350b0:	mov	x0, x22
   350b4:	bl	bde0 <__gmpz_sub@plt>
   350b8:	mov	x2, x24
   350bc:	mov	x1, x20
   350c0:	mov	x0, x20
   350c4:	bl	bde0 <__gmpz_sub@plt>
   350c8:	mov	x2, x28
   350cc:	mov	x1, x27
   350d0:	mov	x0, x27
   350d4:	bl	bff0 <__gmpz_mul@plt>
   350d8:	mov	x2, x26
   350dc:	mov	x1, x27
   350e0:	mov	x0, x27
   350e4:	bl	346e8 <mpfr_acos@@Base+0x570>
   350e8:	ldr	w1, [sp, #180]
   350ec:	mov	x19, x0
   350f0:	ldr	w3, [sp, #196]
   350f4:	mov	x0, #0xfffffffffffffff8    	// #-8
   350f8:	cmp	w1, #0x0
   350fc:	mov	x2, #0x0                   	// #0
   35100:	cneg	w1, w1, lt  // lt = tstop
   35104:	cmp	w3, #0x0
   35108:	cneg	w3, w3, lt  // lt = tstop
   3510c:	ldr	x6, [sp, #184]
   35110:	add	x4, x0, w1, sxtw #3
   35114:	ldr	x5, [sp, #200]
   35118:	add	x0, x0, w3, sxtw #3
   3511c:	ldr	x4, [x6, x4]
   35120:	sbfiz	x1, x1, #6, #32
   35124:	ldr	x0, [x5, x0]
   35128:	sbfiz	x3, x3, #6, #32
   3512c:	clz	x4, x4
   35130:	clz	x0, x0
   35134:	sub	x1, x1, x4
   35138:	sub	x3, x3, x0
   3513c:	cmp	x1, x3
   35140:	csel	x1, x1, x3, ls  // ls = plast
   35144:	cmp	x1, x26
   35148:	b.ls	35158 <mpfr_acos@@Base+0xfe0>  // b.plast
   3514c:	sub	x0, x26, x1
   35150:	sub	x2, x1, x26
   35154:	add	x19, x19, x0
   35158:	mov	x1, x22
   3515c:	mov	x0, x22
   35160:	str	x2, [sp, #136]
   35164:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   35168:	ldr	x2, [sp, #136]
   3516c:	mov	x1, x20
   35170:	mov	x0, x20
   35174:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   35178:	ldp	x1, x0, [sp, #112]
   3517c:	add	x1, x0, x1
   35180:	add	x0, x19, x1
   35184:	str	x0, [sp, #120]
   35188:	ldp	x19, x0, [sp, #96]
   3518c:	add	x0, x0, #0x1
   35190:	str	x0, [sp, #104]
   35194:	mov	x0, x23
   35198:	bl	c710 <mpfr_sgn@plt>
   3519c:	cmp	w0, #0x0
   351a0:	ccmp	x26, x19, #0x1, ne  // ne = any
   351a4:	b.lt	35258 <mpfr_acos@@Base+0x10e0>  // b.tstop
   351a8:	ldr	x0, [sp, #128]
   351ac:	cmp	x0, x19
   351b0:	b.lt	34fe8 <mpfr_acos@@Base+0xe70>  // b.tstop
   351b4:	mov	x2, x19
   351b8:	mov	x1, x23
   351bc:	mov	w3, #0x0                   	// #0
   351c0:	mov	x0, x23
   351c4:	bl	c2c0 <mpfr_mul_2ui@plt>
   351c8:	lsl	x0, x19, #1
   351cc:	mov	x1, x23
   351d0:	mov	w2, #0x1                   	// #1
   351d4:	str	x0, [sp, #96]
   351d8:	mov	x0, x25
   351dc:	bl	be00 <mpfr_get_z@plt>
   351e0:	ldr	w0, [sp, #260]
   351e4:	cbz	w0, 35188 <mpfr_acos@@Base+0x1010>
   351e8:	mov	x2, x25
   351ec:	mov	x1, x23
   351f0:	mov	w3, #0x0                   	// #0
   351f4:	mov	x0, x23
   351f8:	bl	bd60 <mpfr_sub_z@plt>
   351fc:	ldr	x0, [sp, #96]
   35200:	mov	x5, x26
   35204:	mov	x3, x25
   35208:	mov	x2, x21
   3520c:	sub	x4, x0, #0x1
   35210:	mov	x1, x24
   35214:	mov	x0, x28
   35218:	bl	34760 <mpfr_acos@@Base+0x5e8>
   3521c:	str	x0, [sp, #112]
   35220:	cmp	x19, #0x1
   35224:	b.ne	35048 <mpfr_acos@@Base+0xed0>  // b.any
   35228:	ldr	x0, [sp, #112]
   3522c:	mov	x1, x28
   35230:	str	x0, [sp, #120]
   35234:	mov	x0, x27
   35238:	bl	c0e0 <__gmpz_swap@plt>
   3523c:	mov	x1, x24
   35240:	mov	x0, x22
   35244:	bl	c0e0 <__gmpz_swap@plt>
   35248:	mov	x1, x21
   3524c:	mov	x0, x20
   35250:	bl	c0e0 <__gmpz_swap@plt>
   35254:	b	35188 <mpfr_acos@@Base+0x1010>
   35258:	ldr	x0, [sp, #104]
   3525c:	add	x1, x0, x0, lsl #1
   35260:	lsl	x1, x1, #2
   35264:	sub	x1, x1, x0
   35268:	cmp	x1, #0x1
   3526c:	b.ls	35368 <mpfr_acos@@Base+0x11f0>  // b.plast
   35270:	mov	x0, #0x0                   	// #0
   35274:	nop
   35278:	add	x1, x1, #0x1
   3527c:	add	x0, x0, #0x1
   35280:	cmp	x1, #0x3
   35284:	lsr	x1, x1, #1
   35288:	b.hi	35278 <mpfr_acos@@Base+0x1100>  // b.pmore
   3528c:	mov	w19, w0
   35290:	ldr	x26, [sp, #144]
   35294:	mov	x1, x22
   35298:	mov	w2, #0x0                   	// #0
   3529c:	mov	x0, x26
   352a0:	bl	c240 <mpfr_set_z@plt>
   352a4:	mov	x2, x27
   352a8:	mov	x1, x26
   352ac:	mov	x0, x26
   352b0:	mov	w3, #0x0                   	// #0
   352b4:	bl	cc80 <mpfr_div_z@plt>
   352b8:	ldr	x2, [sp, #120]
   352bc:	mov	x1, x26
   352c0:	mov	w3, #0x0                   	// #0
   352c4:	mov	x0, x26
   352c8:	bl	c8f0 <mpfr_div_2ui@plt>
   352cc:	ldr	x26, [sp, #152]
   352d0:	mov	x1, x20
   352d4:	mov	w2, #0x0                   	// #0
   352d8:	mov	x0, x26
   352dc:	bl	c240 <mpfr_set_z@plt>
   352e0:	mov	x2, x27
   352e4:	mov	x1, x26
   352e8:	mov	x0, x26
   352ec:	mov	w3, #0x0                   	// #0
   352f0:	bl	cc80 <mpfr_div_z@plt>
   352f4:	ldr	x2, [sp, #120]
   352f8:	mov	x1, x26
   352fc:	mov	w3, #0x0                   	// #0
   35300:	mov	x0, x26
   35304:	bl	c8f0 <mpfr_div_2ui@plt>
   35308:	mov	x0, x27
   3530c:	bl	c170 <mpfr_mpz_clear@plt>
   35310:	mov	x0, x22
   35314:	bl	c170 <mpfr_mpz_clear@plt>
   35318:	mov	x0, x20
   3531c:	bl	c170 <mpfr_mpz_clear@plt>
   35320:	mov	x0, x28
   35324:	bl	c170 <mpfr_mpz_clear@plt>
   35328:	mov	x0, x24
   3532c:	bl	c170 <mpfr_mpz_clear@plt>
   35330:	mov	x0, x21
   35334:	bl	c170 <mpfr_mpz_clear@plt>
   35338:	mov	x0, x25
   3533c:	bl	c170 <mpfr_mpz_clear@plt>
   35340:	mov	x0, x23
   35344:	bl	c070 <mpfr_clear@plt>
   35348:	mov	w0, w19
   3534c:	ldp	x19, x20, [sp, #16]
   35350:	ldp	x21, x22, [sp, #32]
   35354:	ldp	x23, x24, [sp, #48]
   35358:	ldp	x25, x26, [sp, #64]
   3535c:	ldp	x27, x28, [sp, #80]
   35360:	ldp	x29, x30, [sp], #304
   35364:	ret
   35368:	mov	w19, #0x0                   	// #0
   3536c:	b	35290 <mpfr_acos@@Base+0x1118>

0000000000035370 <mpfr_sincos_fast@@Base>:
   35370:	stp	x29, x30, [sp, #-416]!
   35374:	cmp	x0, x1
   35378:	mov	x29, sp
   3537c:	stp	x19, x20, [sp, #16]
   35380:	stp	x21, x22, [sp, #32]
   35384:	stp	x23, x24, [sp, #48]
   35388:	stp	x25, x26, [sp, #64]
   3538c:	mov	x26, x0
   35390:	stp	x27, x28, [sp, #80]
   35394:	str	x1, [sp, #104]
   35398:	str	w3, [sp, #124]
   3539c:	b.eq	3588c <mpfr_sincos_fast@@Base+0x51c>  // b.none
   353a0:	mov	x22, x2
   353a4:	cbz	x0, 35850 <mpfr_sincos_fast@@Base+0x4e0>
   353a8:	ldr	x1, [sp, #104]
   353ac:	ldr	x0, [x0]
   353b0:	cbz	x1, 353c0 <mpfr_sincos_fast@@Base+0x50>
   353b4:	ldr	x1, [x1]
   353b8:	cmp	x0, x1
   353bc:	csel	x0, x0, x1, ge  // ge = tcont
   353c0:	cmp	x0, #0x1
   353c4:	b.eq	35860 <mpfr_sincos_fast@@Base+0x4f0>  // b.none
   353c8:	b.le	35874 <mpfr_sincos_fast@@Base+0x504>
   353cc:	sub	x1, x0, #0x1
   353d0:	mov	w5, #0x49                  	// #73
   353d4:	clz	x1, x1
   353d8:	mov	x2, #0x7fffffffffffff00    	// #9223372036854775552
   353dc:	sub	w5, w5, w1
   353e0:	add	x27, x0, w5, sxtw
   353e4:	cmp	x27, x2
   353e8:	b.ge	358a4 <mpfr_sincos_fast@@Base+0x534>  // b.tcont
   353ec:	sub	x0, x27, #0x1
   353f0:	asr	x0, x0, #6
   353f4:	add	x19, x0, #0x1
   353f8:	lsl	x0, x19, #1
   353fc:	cmp	x0, #0x10
   35400:	b.gt	357b0 <mpfr_sincos_fast@@Base+0x440>
   35404:	add	x1, sp, #0x120
   35408:	stp	xzr, x1, [sp, #272]
   3540c:	mov	x0, x1
   35410:	add	x19, x0, x19, lsl #3
   35414:	mov	w1, #0x1                   	// #1
   35418:	str	x27, [sp, #176]
   3541c:	add	x25, sp, #0xd0
   35420:	str	w1, [sp, #184]
   35424:	add	x24, sp, #0xb0
   35428:	stp	x0, x27, [sp, #200]
   3542c:	add	x23, sp, #0x90
   35430:	ldr	w0, [x22, #8]
   35434:	str	w1, [sp, #216]
   35438:	add	x21, sp, #0xf0
   3543c:	str	x19, [sp, #232]
   35440:	add	x28, sp, #0x88
   35444:	cmp	w0, #0x0
   35448:	mov	x20, #0x40                  	// #64
   3544c:	b.gt	35624 <mpfr_sincos_fast@@Base+0x2b4>
   35450:	tbnz	w0, #31, 35648 <mpfr_sincos_fast@@Base+0x2d8>
   35454:	mov	x1, x27
   35458:	mov	x0, x23
   3545c:	bl	ca80 <mpfr_init2@plt>
   35460:	ldr	x1, [x22, #16]
   35464:	mov	x0, x21
   35468:	cmp	x1, #0x0
   3546c:	add	x1, x1, x27
   35470:	csel	x1, x1, x27, gt
   35474:	bl	ca80 <mpfr_init2@plt>
   35478:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3547c:	ldr	x2, [x0, #2624]
   35480:	add	x0, x0, #0xa40
   35484:	blr	x2
   35488:	mrs	x1, tpidr_el0
   3548c:	add	x1, x1, x0
   35490:	mov	w2, #0x0                   	// #0
   35494:	mov	x0, x21
   35498:	bl	c380 <mpfr_cache@plt>
   3549c:	mov	x1, x21
   354a0:	mov	w3, #0x0                   	// #0
   354a4:	mov	x2, #0x1                   	// #1
   354a8:	mov	x0, x21
   354ac:	bl	c8f0 <mpfr_div_2ui@plt>
   354b0:	mov	x3, x21
   354b4:	mov	x2, x22
   354b8:	mov	x1, x28
   354bc:	mov	x0, x23
   354c0:	mov	w4, #0x0                   	// #0
   354c4:	bl	c510 <mpfr_remquo@plt>
   354c8:	ldr	w0, [sp, #152]
   354cc:	tbnz	w0, #31, 356f4 <mpfr_sincos_fast@@Base+0x384>
   354d0:	mov	x2, x23
   354d4:	mov	x1, x25
   354d8:	mov	x0, x24
   354dc:	bl	34f08 <mpfr_acos@@Base+0xd90>
   354e0:	sxtw	x0, w0
   354e4:	add	x19, x0, #0x1
   354e8:	ldr	x0, [sp, #136]
   354ec:	tbnz	w0, #1, 3569c <mpfr_sincos_fast@@Base+0x32c>
   354f0:	tbnz	w0, #0, 356c4 <mpfr_sincos_fast@@Base+0x354>
   354f4:	mov	x0, x23
   354f8:	bl	c070 <mpfr_clear@plt>
   354fc:	mov	x0, x21
   35500:	bl	c070 <mpfr_clear@plt>
   35504:	ldr	x4, [sp, #224]
   35508:	cbz	x26, 35558 <mpfr_sincos_fast@@Base+0x1e8>
   3550c:	ldr	x2, [sp, #192]
   35510:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   35514:	cmp	x2, x0
   35518:	b.le	355a8 <mpfr_sincos_fast@@Base+0x238>
   3551c:	ldr	w0, [sp, #124]
   35520:	sub	x2, x19, x2
   35524:	ldr	x1, [sp, #176]
   35528:	cmp	w0, #0x0
   3552c:	ldr	x0, [sp, #200]
   35530:	sub	x1, x1, #0x1
   35534:	ldr	x3, [x26]
   35538:	asr	x1, x1, #6
   3553c:	sub	x2, x27, x2
   35540:	add	x1, x1, #0x1
   35544:	cinc	x3, x3, eq  // eq = none
   35548:	str	x4, [sp, #112]
   3554c:	bl	c370 <mpfr_round_p@plt>
   35550:	ldr	x4, [sp, #112]
   35554:	cbz	w0, 355a8 <mpfr_sincos_fast@@Base+0x238>
   35558:	ldr	x0, [sp, #104]
   3555c:	cbz	x0, 35760 <mpfr_sincos_fast@@Base+0x3f0>
   35560:	ldr	x1, [sp, #224]
   35564:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   35568:	cmp	x1, x0
   3556c:	b.le	355a8 <mpfr_sincos_fast@@Base+0x238>
   35570:	ldr	x2, [sp, #104]
   35574:	ldr	w0, [sp, #124]
   35578:	ldr	x1, [sp, #208]
   3557c:	cmp	w0, #0x0
   35580:	ldr	x0, [sp, #232]
   35584:	sub	x1, x1, #0x1
   35588:	ldr	x3, [x2]
   3558c:	asr	x1, x1, #6
   35590:	sub	x2, x19, x4
   35594:	add	x1, x1, #0x1
   35598:	sub	x2, x27, x2
   3559c:	cinc	x3, x3, eq  // eq = none
   355a0:	bl	c370 <mpfr_round_p@plt>
   355a4:	cbnz	w0, 357c4 <mpfr_sincos_fast@@Base+0x454>
   355a8:	mov	x0, #0xfffffffffffffeff    	// #-257
   355ac:	movk	x0, #0x7fff, lsl #48
   355b0:	sub	x0, x0, x27
   355b4:	cmp	x0, x20
   355b8:	b.lt	35748 <mpfr_sincos_fast@@Base+0x3d8>  // b.tstop
   355bc:	add	x27, x27, x20
   355c0:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   355c4:	cmp	x27, x0
   355c8:	add	x20, x27, x27, lsr #63
   355cc:	ldr	x1, [sp, #272]
   355d0:	asr	x20, x20, #1
   355d4:	b.ge	358a4 <mpfr_sincos_fast@@Base+0x534>  // b.tcont
   355d8:	sub	x19, x27, #0x1
   355dc:	asr	x19, x19, #6
   355e0:	add	x19, x19, #0x1
   355e4:	lsl	x2, x19, #4
   355e8:	str	x2, [sp, #272]
   355ec:	cbnz	x1, 356e4 <mpfr_sincos_fast@@Base+0x374>
   355f0:	mov	x0, x2
   355f4:	bl	ccf0 <mpfr_allocate_func@plt>
   355f8:	str	x0, [sp, #280]
   355fc:	add	x19, x0, x19, lsl #3
   35600:	mov	w1, #0x1                   	// #1
   35604:	str	x27, [sp, #176]
   35608:	str	w1, [sp, #184]
   3560c:	stp	x0, x27, [sp, #200]
   35610:	ldr	w0, [x22, #8]
   35614:	str	w1, [sp, #216]
   35618:	str	x19, [sp, #232]
   3561c:	cmp	w0, #0x0
   35620:	b.le	35450 <mpfr_sincos_fast@@Base+0xe0>
   35624:	mov	x1, #0xed51                	// #60753
   35628:	mov	x0, x22
   3562c:	mov	x2, #0xffffffffffffffe1    	// #-31
   35630:	movk	x1, #0x6487, lsl #16
   35634:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   35638:	cmp	w0, #0x0
   3563c:	b.le	35730 <mpfr_sincos_fast@@Base+0x3c0>
   35640:	ldr	w0, [x22, #8]
   35644:	tbz	w0, #31, 35454 <mpfr_sincos_fast@@Base+0xe4>
   35648:	mov	x1, #0xffffffffffff12af    	// #-60753
   3564c:	mov	x0, x22
   35650:	mov	x2, #0xffffffffffffffe1    	// #-31
   35654:	movk	x1, #0x9b78, lsl #16
   35658:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   3565c:	tbnz	w0, #31, 35454 <mpfr_sincos_fast@@Base+0xe4>
   35660:	ldp	x4, x3, [x22, #16]
   35664:	mov	w6, #0x1                   	// #1
   35668:	ldr	x7, [x22]
   3566c:	mov	x1, x25
   35670:	mov	x2, x23
   35674:	mov	x0, x24
   35678:	str	x7, [sp, #144]
   3567c:	str	w6, [sp, #152]
   35680:	stp	x4, x3, [sp, #160]
   35684:	bl	34f08 <mpfr_acos@@Base+0xd90>
   35688:	ldr	w1, [sp, #184]
   3568c:	sxtw	x19, w0
   35690:	neg	w1, w1
   35694:	str	w1, [sp, #184]
   35698:	b	35504 <mpfr_sincos_fast@@Base+0x194>
   3569c:	mov	x1, x24
   356a0:	mov	w2, #0x0                   	// #0
   356a4:	mov	x0, x24
   356a8:	bl	bd70 <mpfr_neg@plt>
   356ac:	mov	x1, x25
   356b0:	mov	x0, x25
   356b4:	mov	w2, #0x0                   	// #0
   356b8:	bl	bd70 <mpfr_neg@plt>
   356bc:	ldr	x0, [sp, #136]
   356c0:	tbz	w0, #0, 354f4 <mpfr_sincos_fast@@Base+0x184>
   356c4:	mov	w2, #0x0                   	// #0
   356c8:	mov	x1, x24
   356cc:	mov	x0, x24
   356d0:	bl	bd70 <mpfr_neg@plt>
   356d4:	mov	x1, x25
   356d8:	mov	x0, x24
   356dc:	bl	c4a0 <mpfr_swap@plt>
   356e0:	b	354f4 <mpfr_sincos_fast@@Base+0x184>
   356e4:	ldr	x0, [sp, #280]
   356e8:	bl	c1c0 <mpfr_reallocate_func@plt>
   356ec:	str	x0, [sp, #280]
   356f0:	b	355fc <mpfr_sincos_fast@@Base+0x28c>
   356f4:	mov	x1, x23
   356f8:	mov	x0, x23
   356fc:	mov	w2, #0x0                   	// #0
   35700:	bl	bd70 <mpfr_neg@plt>
   35704:	mov	x2, x23
   35708:	mov	x1, x25
   3570c:	mov	x0, x24
   35710:	bl	34f08 <mpfr_acos@@Base+0xd90>
   35714:	sxtw	x19, w0
   35718:	mov	x1, x24
   3571c:	mov	x0, x24
   35720:	add	x19, x19, #0x1
   35724:	mov	w2, #0x0                   	// #0
   35728:	bl	bd70 <mpfr_neg@plt>
   3572c:	b	354e8 <mpfr_sincos_fast@@Base+0x178>
   35730:	mov	x2, x22
   35734:	mov	x1, x25
   35738:	mov	x0, x24
   3573c:	bl	34f08 <mpfr_acos@@Base+0xd90>
   35740:	sxtw	x19, w0
   35744:	b	35504 <mpfr_sincos_fast@@Base+0x194>
   35748:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   3574c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   35750:	add	x2, x2, #0xeb0
   35754:	add	x0, x0, #0xd38
   35758:	mov	w1, #0x28f                 	// #655
   3575c:	bl	cb40 <mpfr_assert_fail@plt>
   35760:	cbz	x26, 35784 <mpfr_sincos_fast@@Base+0x414>
   35764:	ldr	w2, [sp, #124]
   35768:	mov	x1, x24
   3576c:	ldr	w3, [sp, #184]
   35770:	mov	x0, x26
   35774:	mov	w20, #0x0                   	// #0
   35778:	bl	c6a0 <mpfr_set4@plt>
   3577c:	mov	w19, w0
   35780:	b	357fc <mpfr_sincos_fast@@Base+0x48c>
   35784:	ldr	x1, [sp, #272]
   35788:	mov	w19, #0x0                   	// #0
   3578c:	cbnz	x1, 3586c <mpfr_sincos_fast@@Base+0x4fc>
   35790:	mov	w0, w19
   35794:	ldp	x19, x20, [sp, #16]
   35798:	ldp	x21, x22, [sp, #32]
   3579c:	ldp	x23, x24, [sp, #48]
   357a0:	ldp	x25, x26, [sp, #64]
   357a4:	ldp	x27, x28, [sp, #80]
   357a8:	ldp	x29, x30, [sp], #416
   357ac:	ret
   357b0:	lsl	x0, x19, #4
   357b4:	str	x0, [sp, #272]
   357b8:	bl	ccf0 <mpfr_allocate_func@plt>
   357bc:	str	x0, [sp, #280]
   357c0:	b	35410 <mpfr_sincos_fast@@Base+0xa0>
   357c4:	mov	w19, #0x0                   	// #0
   357c8:	cbz	x26, 357e4 <mpfr_sincos_fast@@Base+0x474>
   357cc:	ldr	w2, [sp, #124]
   357d0:	mov	x1, x24
   357d4:	ldr	w3, [sp, #184]
   357d8:	mov	x0, x26
   357dc:	bl	c6a0 <mpfr_set4@plt>
   357e0:	mov	w19, w0
   357e4:	ldr	w2, [sp, #124]
   357e8:	mov	x1, x25
   357ec:	ldr	w3, [sp, #216]
   357f0:	ldr	x0, [sp, #104]
   357f4:	bl	c6a0 <mpfr_set4@plt>
   357f8:	mov	w20, w0
   357fc:	ldr	x1, [sp, #272]
   35800:	cbz	x1, 3580c <mpfr_sincos_fast@@Base+0x49c>
   35804:	ldr	x0, [sp, #280]
   35808:	bl	cc20 <mpfr_free_func@plt>
   3580c:	cmp	w19, #0x0
   35810:	cset	w0, le
   35814:	add	w0, w0, #0x1
   35818:	csel	w19, w0, w19, ne  // ne = any
   3581c:	cmp	w20, #0x0
   35820:	orr	w1, w19, #0x4
   35824:	orr	w0, w19, #0x8
   35828:	csel	w0, w0, w1, le
   3582c:	csel	w19, w0, w19, ne  // ne = any
   35830:	mov	w0, w19
   35834:	ldp	x19, x20, [sp, #16]
   35838:	ldp	x21, x22, [sp, #32]
   3583c:	ldp	x23, x24, [sp, #48]
   35840:	ldp	x25, x26, [sp, #64]
   35844:	ldp	x27, x28, [sp, #80]
   35848:	ldp	x29, x30, [sp], #416
   3584c:	ret
   35850:	ldr	x0, [sp, #104]
   35854:	ldr	x0, [x0]
   35858:	cmp	x0, #0x1
   3585c:	b.ne	353c8 <mpfr_sincos_fast@@Base+0x58>  // b.any
   35860:	mov	x19, x0
   35864:	mov	x27, #0xa                   	// #10
   35868:	b	35404 <mpfr_sincos_fast@@Base+0x94>
   3586c:	mov	w20, #0x0                   	// #0
   35870:	b	35804 <mpfr_sincos_fast@@Base+0x494>
   35874:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   35878:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   3587c:	add	x2, x2, #0xd50
   35880:	add	x0, x0, #0xd38
   35884:	mov	w1, #0x24e                 	// #590
   35888:	bl	cb40 <mpfr_assert_fail@plt>
   3588c:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   35890:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   35894:	add	x2, x2, #0xd48
   35898:	add	x0, x0, #0xd38
   3589c:	mov	w1, #0x247                 	// #583
   358a0:	bl	cb40 <mpfr_assert_fail@plt>
   358a4:	bl	c8e0 <mpfr_abort_prec_max@plt>

00000000000358a8 <mpfr_sin_cos@@Base>:
   358a8:	stp	x29, x30, [sp, #-224]!
   358ac:	cmp	x0, x1
   358b0:	mov	x29, sp
   358b4:	stp	x19, x20, [sp, #16]
   358b8:	stp	x21, x22, [sp, #32]
   358bc:	stp	x23, x24, [sp, #48]
   358c0:	str	x0, [sp, #128]
   358c4:	str	w3, [sp, #136]
   358c8:	b.eq	361c4 <mpfr_sin_cos@@Base+0x91c>  // b.none
   358cc:	ldr	x22, [x2, #16]
   358d0:	stp	x27, x28, [sp, #80]
   358d4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   358d8:	mov	x28, x1
   358dc:	mov	x23, x2
   358e0:	cmp	x22, x0
   358e4:	b.le	36008 <mpfr_sin_cos@@Base+0x760>
   358e8:	mrs	x6, tpidr_el0
   358ec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   358f0:	ldr	x1, [x0, #2576]
   358f4:	add	x0, x0, #0xa10
   358f8:	blr	x1
   358fc:	ldr	x2, [x28]
   35900:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   35904:	ldr	w0, [x6, x0]
   35908:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   3590c:	str	w0, [sp, #140]
   35910:	str	x6, [sp, #112]
   35914:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   35918:	ldr	x1, [x0, #2512]
   3591c:	add	x0, x0, #0x9d0
   35920:	blr	x1
   35924:	add	x4, x6, x0
   35928:	ldr	x1, [sp, #128]
   3592c:	ldr	x0, [x6, x0]
   35930:	str	x0, [sp, #144]
   35934:	ldr	x1, [x1]
   35938:	str	x5, [x4]
   3593c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   35940:	ldr	x7, [x0, #2544]
   35944:	add	x0, x0, #0x9f0
   35948:	blr	x7
   3594c:	ldr	x4, [x6, x0]
   35950:	cmp	x2, x1
   35954:	str	x3, [x6, x0]
   35958:	csel	x20, x2, x1, ge  // ge = tcont
   3595c:	str	x4, [sp, #152]
   35960:	cmp	x20, #0x1
   35964:	b.eq	36054 <mpfr_sin_cos@@Base+0x7ac>  // b.none
   35968:	b.le	361a8 <mpfr_sin_cos@@Base+0x900>
   3596c:	sub	x0, x20, #0x1
   35970:	mov	w5, #0x40                  	// #64
   35974:	clz	x0, x0
   35978:	sub	w5, w5, w0
   3597c:	add	x5, x20, w5, sxtw
   35980:	add	x27, x5, #0xd
   35984:	tbnz	x22, #63, 35de8 <mpfr_sin_cos@@Base+0x540>
   35988:	mov	x0, #0x752f                	// #29999
   3598c:	cmp	x20, x0
   35990:	b.gt	35e18 <mpfr_sin_cos@@Base+0x570>
   35994:	stp	x25, x26, [sp, #64]
   35998:	add	x26, sp, #0xa0
   3599c:	mov	x0, x26
   359a0:	add	x20, sp, #0xc0
   359a4:	bl	bbd0 <mpfr_init@plt>
   359a8:	mov	x24, #0xfffffffffffffeff    	// #-257
   359ac:	mov	x0, x20
   359b0:	mov	x19, #0x40                  	// #64
   359b4:	mov	x25, #0x8000000000000003    	// #-9223372036854775805
   359b8:	movk	x24, #0x7fff, lsl #48
   359bc:	bl	bbd0 <mpfr_init@plt>
   359c0:	b	35c1c <mpfr_sin_cos@@Base+0x374>
   359c4:	add	x1, x22, x27
   359c8:	mov	x0, x26
   359cc:	sub	x1, x1, #0x1
   359d0:	bl	bed0 <mpfr_set_prec@plt>
   359d4:	mov	x1, x27
   359d8:	mov	x0, x20
   359dc:	bl	bed0 <mpfr_set_prec@plt>
   359e0:	mov	w2, #0x0                   	// #0
   359e4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   359e8:	ldr	x1, [x0, #2624]
   359ec:	add	x0, x0, #0xa40
   359f0:	blr	x1
   359f4:	ldr	x1, [sp, #112]
   359f8:	add	x1, x1, x0
   359fc:	mov	x0, x26
   35a00:	bl	c380 <mpfr_cache@plt>
   35a04:	mov	x1, x26
   35a08:	mov	w3, #0x0                   	// #0
   35a0c:	mov	x2, #0x1                   	// #1
   35a10:	mov	x0, x26
   35a14:	bl	c2c0 <mpfr_mul_2ui@plt>
   35a18:	mov	x2, x26
   35a1c:	mov	x1, x23
   35a20:	mov	w3, #0x0                   	// #0
   35a24:	mov	x0, x20
   35a28:	bl	cd10 <mpfr_remainder@plt>
   35a2c:	mov	x1, x26
   35a30:	mov	w3, #0x0                   	// #0
   35a34:	mov	x2, #0x1                   	// #1
   35a38:	mov	x0, x26
   35a3c:	bl	c8f0 <mpfr_div_2ui@plt>
   35a40:	ldr	w0, [sp, #200]
   35a44:	mov	x2, x20
   35a48:	mov	x1, x26
   35a4c:	mov	w3, #0x1                   	// #1
   35a50:	cmp	w0, #0x0
   35a54:	mov	x0, x26
   35a58:	b.le	35c58 <mpfr_sin_cos@@Base+0x3b0>
   35a5c:	bl	bb70 <mpfr_sub@plt>
   35a60:	ldr	x1, [sp, #208]
   35a64:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   35a68:	cmp	x1, x0
   35a6c:	b.eq	35bf8 <mpfr_sin_cos@@Base+0x350>  // b.none
   35a70:	mov	x0, #0x3                   	// #3
   35a74:	sub	x0, x0, x27
   35a78:	cmp	x1, x0
   35a7c:	b.lt	35bf8 <mpfr_sin_cos@@Base+0x350>  // b.tstop
   35a80:	ldr	x1, [sp, #176]
   35a84:	cmp	x0, x1
   35a88:	b.gt	35bf8 <mpfr_sin_cos@@Base+0x350>
   35a8c:	ldr	w2, [sp, #200]
   35a90:	mov	x1, x27
   35a94:	mov	x0, x26
   35a98:	str	w2, [sp, #108]
   35a9c:	mov	w21, #0x1                   	// #1
   35aa0:	bl	bed0 <mpfr_set_prec@plt>
   35aa4:	mov	w2, #0x1                   	// #1
   35aa8:	mov	x1, x20
   35aac:	mov	x0, x26
   35ab0:	bl	c430 <mpfr_cos@plt>
   35ab4:	ldr	x0, [sp, #176]
   35ab8:	sub	x2, x27, #0x3
   35abc:	add	x2, x2, x0
   35ac0:	cmp	x0, x25
   35ac4:	b.le	35bf8 <mpfr_sin_cos@@Base+0x350>
   35ac8:	ldr	w0, [sp, #136]
   35acc:	ldr	x1, [sp, #160]
   35ad0:	cmp	w0, #0x0
   35ad4:	ldr	x0, [sp, #184]
   35ad8:	cset	x4, eq  // eq = none
   35adc:	sub	x1, x1, #0x1
   35ae0:	str	x4, [sp, #120]
   35ae4:	ldr	x3, [x28]
   35ae8:	asr	x1, x1, #6
   35aec:	add	x1, x1, #0x1
   35af0:	cinc	x3, x3, eq  // eq = none
   35af4:	bl	c370 <mpfr_round_p@plt>
   35af8:	cbz	w0, 35bf8 <mpfr_sin_cos@@Base+0x350>
   35afc:	ldr	x1, [sp, #160]
   35b00:	mov	x0, x20
   35b04:	add	w21, w21, #0x1
   35b08:	bl	bed0 <mpfr_set_prec@plt>
   35b0c:	add	w21, w21, w21, lsl #1
   35b10:	mov	x1, x26
   35b14:	mov	x0, x20
   35b18:	bl	c4a0 <mpfr_swap@plt>
   35b1c:	mov	x1, x20
   35b20:	mov	w2, #0x2                   	// #2
   35b24:	mov	x0, x26
   35b28:	bl	c400 <mpfr_sqr@plt>
   35b2c:	mov	w3, #0x0                   	// #0
   35b30:	mov	x2, x26
   35b34:	mov	x1, #0x1                   	// #1
   35b38:	mov	x0, x26
   35b3c:	bl	ca50 <mpfr_ui_sub@plt>
   35b40:	mov	x1, x26
   35b44:	mov	w2, #0x0                   	// #0
   35b48:	mov	x0, x26
   35b4c:	bl	c930 <mpfr_sqrt@plt>
   35b50:	ldr	w1, [sp, #108]
   35b54:	sxtw	x2, w21
   35b58:	ldr	x0, [sp, #176]
   35b5c:	sub	x2, x2, x0
   35b60:	tbz	w1, #31, 35b70 <mpfr_sin_cos@@Base+0x2c8>
   35b64:	ldr	w1, [sp, #168]
   35b68:	neg	w1, w1
   35b6c:	str	w1, [sp, #168]
   35b70:	ldr	x1, [sp, #128]
   35b74:	add	x21, x0, x27
   35b78:	cmp	x0, x25
   35b7c:	sub	x21, x21, x2
   35b80:	ldr	x3, [x1]
   35b84:	b.le	35bbc <mpfr_sin_cos@@Base+0x314>
   35b88:	ldr	x0, [sp, #120]
   35b8c:	mov	x2, x21
   35b90:	ldr	x1, [sp, #160]
   35b94:	add	x3, x0, x3
   35b98:	ldr	x0, [sp, #184]
   35b9c:	sub	x1, x1, #0x1
   35ba0:	asr	x1, x1, #6
   35ba4:	add	x1, x1, #0x1
   35ba8:	bl	c370 <mpfr_round_p@plt>
   35bac:	cbnz	w0, 35c78 <mpfr_sin_cos@@Base+0x3d0>
   35bb0:	ldr	x1, [sp, #128]
   35bb4:	ldr	x0, [sp, #176]
   35bb8:	ldr	x3, [x1]
   35bbc:	subs	x1, x3, x21
   35bc0:	add	x1, x27, x1
   35bc4:	csel	x27, x1, x27, gt
   35bc8:	cmp	x0, #0x1
   35bcc:	b.ne	35bf8 <mpfr_sin_cos@@Base+0x350>  // b.any
   35bd0:	ldr	x0, [sp, #160]
   35bd4:	lsl	x1, x27, #1
   35bd8:	ldr	x3, [sp, #184]
   35bdc:	sub	x0, x0, #0x1
   35be0:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   35be4:	asr	x0, x0, #6
   35be8:	ldr	x0, [x3, x0, lsl #3]
   35bec:	cmp	x0, x2
   35bf0:	csel	x27, x1, x27, eq  // eq = none
   35bf4:	nop
   35bf8:	sub	x0, x24, x27
   35bfc:	cmp	x0, x19
   35c00:	b.lt	35c60 <mpfr_sin_cos@@Base+0x3b8>  // b.tstop
   35c04:	add	x27, x27, x19
   35c08:	mov	x0, x26
   35c0c:	mov	x1, x27
   35c10:	add	x19, x27, x27, lsr #63
   35c14:	asr	x19, x19, #1
   35c18:	bl	bed0 <mpfr_set_prec@plt>
   35c1c:	cmp	x22, #0x1
   35c20:	b.gt	359c4 <mpfr_sin_cos@@Base+0x11c>
   35c24:	ldr	w2, [x23, #8]
   35c28:	mov	x1, x27
   35c2c:	mov	x0, x26
   35c30:	str	w2, [sp, #108]
   35c34:	mov	w21, #0x0                   	// #0
   35c38:	bl	bed0 <mpfr_set_prec@plt>
   35c3c:	mov	w2, #0x1                   	// #1
   35c40:	mov	x1, x23
   35c44:	mov	x0, x26
   35c48:	bl	c430 <mpfr_cos@plt>
   35c4c:	mov	x2, x27
   35c50:	ldr	x0, [sp, #176]
   35c54:	b	35ac0 <mpfr_sin_cos@@Base+0x218>
   35c58:	bl	c1a0 <mpfr_add@plt>
   35c5c:	b	35a60 <mpfr_sin_cos@@Base+0x1b8>
   35c60:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   35c64:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   35c68:	add	x2, x2, #0xab0
   35c6c:	add	x0, x0, #0xd38
   35c70:	mov	w1, #0xd2                  	// #210
   35c74:	bl	cb40 <mpfr_assert_fail@plt>
   35c78:	ldr	w3, [sp, #168]
   35c7c:	mov	x1, x26
   35c80:	ldr	x22, [sp, #128]
   35c84:	ldr	w19, [sp, #136]
   35c88:	mov	x0, x22
   35c8c:	mov	w2, w19
   35c90:	bl	c6a0 <mpfr_set4@plt>
   35c94:	ldr	w3, [sp, #200]
   35c98:	mov	w2, w19
   35c9c:	mov	x1, x20
   35ca0:	mov	w19, w0
   35ca4:	mov	x0, x28
   35ca8:	bl	c6a0 <mpfr_set4@plt>
   35cac:	mov	w21, w0
   35cb0:	mov	x0, x26
   35cb4:	bl	c070 <mpfr_clear@plt>
   35cb8:	mov	x0, x20
   35cbc:	bl	c070 <mpfr_clear@plt>
   35cc0:	ldr	w3, [sp, #140]
   35cc4:	ldr	x1, [x22, #16]
   35cc8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   35ccc:	ldr	x2, [x0, #2576]
   35cd0:	add	x0, x0, #0xa10
   35cd4:	blr	x2
   35cd8:	ldr	x2, [sp, #112]
   35cdc:	str	w3, [x2, x0]
   35ce0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   35ce4:	ldr	x3, [x0, #2512]
   35ce8:	add	x0, x0, #0x9d0
   35cec:	blr	x3
   35cf0:	ldr	x3, [sp, #144]
   35cf4:	str	x3, [x2, x0]
   35cf8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   35cfc:	ldr	x4, [x0, #2544]
   35d00:	add	x0, x0, #0x9f0
   35d04:	blr	x4
   35d08:	ldr	x4, [sp, #152]
   35d0c:	str	x4, [x2, x0]
   35d10:	cmp	x4, x1
   35d14:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   35d18:	b.le	35d94 <mpfr_sin_cos@@Base+0x4ec>
   35d1c:	ldp	x25, x26, [sp, #64]
   35d20:	mov	w1, w19
   35d24:	ldr	w2, [sp, #136]
   35d28:	ldr	x0, [sp, #128]
   35d2c:	bl	cb30 <mpfr_check_range@plt>
   35d30:	mov	w19, w0
   35d34:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   35d38:	ldr	x1, [x0, #2512]
   35d3c:	add	x0, x0, #0x9d0
   35d40:	blr	x1
   35d44:	ldr	x1, [sp, #112]
   35d48:	ldr	x0, [x1, x0]
   35d4c:	ldr	x1, [x28, #16]
   35d50:	cmp	x1, x0
   35d54:	b.ge	35ec8 <mpfr_sin_cos@@Base+0x620>  // b.tcont
   35d58:	ldr	w2, [sp, #136]
   35d5c:	mov	w1, w21
   35d60:	mov	x0, x28
   35d64:	bl	cb30 <mpfr_check_range@plt>
   35d68:	mov	w21, w0
   35d6c:	cbnz	w19, 3614c <mpfr_sin_cos@@Base+0x8a4>
   35d70:	cbnz	w21, 361a0 <mpfr_sin_cos@@Base+0x8f8>
   35d74:	mov	w19, #0x0                   	// #0
   35d78:	mov	w0, w19
   35d7c:	ldp	x19, x20, [sp, #16]
   35d80:	ldp	x21, x22, [sp, #32]
   35d84:	ldp	x23, x24, [sp, #48]
   35d88:	ldp	x27, x28, [sp, #80]
   35d8c:	ldp	x29, x30, [sp], #224
   35d90:	ret
   35d94:	cbnz	w19, 35e94 <mpfr_sin_cos@@Base+0x5ec>
   35d98:	ldr	x1, [x28, #16]
   35d9c:	ldr	x0, [sp, #144]
   35da0:	cmp	x0, x1
   35da4:	b.gt	35f7c <mpfr_sin_cos@@Base+0x6d4>
   35da8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   35dac:	ldr	x2, [x0, #2544]
   35db0:	add	x0, x0, #0x9f0
   35db4:	blr	x2
   35db8:	ldr	x2, [sp, #112]
   35dbc:	ldp	x25, x26, [sp, #64]
   35dc0:	ldr	x0, [x2, x0]
   35dc4:	cmp	x1, x0
   35dc8:	b.gt	35d58 <mpfr_sin_cos@@Base+0x4b0>
   35dcc:	cbnz	w21, 35eec <mpfr_sin_cos@@Base+0x644>
   35dd0:	cmp	w19, #0x0
   35dd4:	cbz	w19, 35d74 <mpfr_sin_cos@@Base+0x4cc>
   35dd8:	cset	w19, le
   35ddc:	add	w19, w19, #0x1
   35de0:	b	35f3c <mpfr_sin_cos@@Base+0x694>
   35de4:	mov	x27, #0xe                   	// #14
   35de8:	ldr	x0, [sp, #128]
   35dec:	neg	x24, x22, lsl #1
   35df0:	cmp	x0, x23
   35df4:	b.eq	35f9c <mpfr_sin_cos@@Base+0x6f4>  // b.none
   35df8:	add	x1, x1, #0x1
   35dfc:	add	x2, x24, #0x2
   35e00:	cmp	x1, x2
   35e04:	b.cc	36064 <mpfr_sin_cos@@Base+0x7bc>  // b.lo, b.ul, b.last
   35e08:	add	x27, x27, x24
   35e0c:	mov	x0, #0x752f                	// #29999
   35e10:	cmp	x20, x0
   35e14:	b.le	35994 <mpfr_sin_cos@@Base+0xec>
   35e18:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   35e1c:	ldr	x1, [x0, #2576]
   35e20:	add	x0, x0, #0xa10
   35e24:	blr	x1
   35e28:	mov	x2, x23
   35e2c:	ldp	w3, w1, [sp, #136]
   35e30:	ldr	x4, [sp, #112]
   35e34:	ldr	x5, [sp, #152]
   35e38:	str	w1, [x4, x0]
   35e3c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   35e40:	ldr	x1, [x0, #2512]
   35e44:	add	x0, x0, #0x9d0
   35e48:	blr	x1
   35e4c:	ldr	x1, [sp, #144]
   35e50:	str	x1, [x4, x0]
   35e54:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   35e58:	ldr	x1, [x0, #2544]
   35e5c:	add	x0, x0, #0x9f0
   35e60:	blr	x1
   35e64:	str	x5, [x4, x0]
   35e68:	ldr	x0, [sp, #128]
   35e6c:	mov	x1, x28
   35e70:	bl	c020 <mpfr_sincos_fast@plt>
   35e74:	mov	w19, w0
   35e78:	mov	w0, w19
   35e7c:	ldp	x19, x20, [sp, #16]
   35e80:	ldp	x21, x22, [sp, #32]
   35e84:	ldp	x23, x24, [sp, #48]
   35e88:	ldp	x27, x28, [sp, #80]
   35e8c:	ldp	x29, x30, [sp], #224
   35e90:	ret
   35e94:	ldp	x25, x26, [sp, #64]
   35e98:	ldr	w0, [sp, #140]
   35e9c:	ldr	x1, [x28, #16]
   35ea0:	orr	w2, w0, #0x8
   35ea4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   35ea8:	ldr	x3, [x0, #2576]
   35eac:	add	x0, x0, #0xa10
   35eb0:	blr	x3
   35eb4:	ldr	x3, [sp, #112]
   35eb8:	str	w2, [x3, x0]
   35ebc:	ldr	x0, [sp, #144]
   35ec0:	cmp	x0, x1
   35ec4:	b.gt	36138 <mpfr_sin_cos@@Base+0x890>
   35ec8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   35ecc:	ldr	x2, [x0, #2544]
   35ed0:	add	x0, x0, #0x9f0
   35ed4:	blr	x2
   35ed8:	ldr	x2, [sp, #112]
   35edc:	ldr	x0, [x2, x0]
   35ee0:	cmp	x1, x0
   35ee4:	b.gt	35d58 <mpfr_sin_cos@@Base+0x4b0>
   35ee8:	cbz	w21, 35dd0 <mpfr_sin_cos@@Base+0x528>
   35eec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   35ef0:	ldr	x1, [x0, #2576]
   35ef4:	add	x0, x0, #0xa10
   35ef8:	blr	x1
   35efc:	ldr	x1, [sp, #112]
   35f00:	cmp	w19, #0x0
   35f04:	add	x0, x1, x0
   35f08:	ldr	w1, [x0]
   35f0c:	orr	w1, w1, #0x8
   35f10:	str	w1, [x0]
   35f14:	cbz	w19, 35f28 <mpfr_sin_cos@@Base+0x680>
   35f18:	mov	w19, #0x1                   	// #1
   35f1c:	b.gt	35f28 <mpfr_sin_cos@@Base+0x680>
   35f20:	mov	w19, #0x2                   	// #2
   35f24:	cbz	w21, 35f3c <mpfr_sin_cos@@Base+0x694>
   35f28:	cmp	w21, #0x0
   35f2c:	mov	w0, #0x4                   	// #4
   35f30:	mov	w1, #0x8                   	// #8
   35f34:	csel	w0, w0, w1, gt
   35f38:	orr	w19, w19, w0
   35f3c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   35f40:	ldr	x1, [x0, #2576]
   35f44:	add	x0, x0, #0xa10
   35f48:	blr	x1
   35f4c:	ldr	x1, [sp, #112]
   35f50:	ldp	x21, x22, [sp, #32]
   35f54:	add	x0, x1, x0
   35f58:	ldp	x23, x24, [sp, #48]
   35f5c:	ldr	w1, [x0]
   35f60:	ldp	x27, x28, [sp, #80]
   35f64:	orr	w1, w1, #0x8
   35f68:	str	w1, [x0]
   35f6c:	mov	w0, w19
   35f70:	ldp	x19, x20, [sp, #16]
   35f74:	ldp	x29, x30, [sp], #224
   35f78:	ret
   35f7c:	ldr	w2, [sp, #136]
   35f80:	mov	w1, w21
   35f84:	mov	x0, x28
   35f88:	bl	cb30 <mpfr_check_range@plt>
   35f8c:	mov	w21, w0
   35f90:	ldp	x25, x26, [sp, #64]
   35f94:	cbz	w21, 35d74 <mpfr_sin_cos@@Base+0x4cc>
   35f98:	b	361a0 <mpfr_sin_cos@@Base+0x8f8>
   35f9c:	add	x0, x2, #0x1
   35fa0:	add	x2, x24, #0x1
   35fa4:	cmp	x0, x2
   35fa8:	b.cs	35e08 <mpfr_sin_cos@@Base+0x560>  // b.hs, b.nlast
   35fac:	adrp	x1, 7f000 <__gmpfr_l2b@@Base+0x200>
   35fb0:	ldr	w4, [sp, #136]
   35fb4:	mov	x0, x28
   35fb8:	mov	w3, #0x0                   	// #0
   35fbc:	ldr	x1, [x1, #3928]
   35fc0:	bl	c540 <mpfr_round_near_x@plt>
   35fc4:	mov	w21, w0
   35fc8:	cbz	w0, 35e08 <mpfr_sin_cos@@Base+0x560>
   35fcc:	ldr	x0, [sp, #128]
   35fd0:	add	x2, x24, #0x2
   35fd4:	ldr	x0, [x0]
   35fd8:	add	x0, x0, #0x1
   35fdc:	cmp	x0, x2
   35fe0:	b.cs	35e08 <mpfr_sin_cos@@Base+0x560>  // b.hs, b.nlast
   35fe4:	ldr	w4, [sp, #136]
   35fe8:	mov	w3, #0x0                   	// #0
   35fec:	ldr	x0, [sp, #128]
   35ff0:	mov	x1, x0
   35ff4:	bl	c540 <mpfr_round_near_x@plt>
   35ff8:	mov	w19, w0
   35ffc:	cbnz	w0, 360b0 <mpfr_sin_cos@@Base+0x808>
   36000:	add	x27, x27, x24
   36004:	b	35e0c <mpfr_sin_cos@@Base+0x564>
   36008:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   3600c:	add	x22, x22, x0
   36010:	cmp	x22, #0x1
   36014:	b.ls	36160 <mpfr_sin_cos@@Base+0x8b8>  // b.plast
   36018:	ldr	w0, [x2, #8]
   3601c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   36020:	ldr	x2, [sp, #128]
   36024:	str	w0, [x2, #8]
   36028:	mov	x0, x28
   3602c:	str	x1, [x2, #16]
   36030:	mov	x2, #0x0                   	// #0
   36034:	mov	x1, #0x1                   	// #1
   36038:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3603c:	cmp	w0, #0x0
   36040:	cbz	w0, 35d74 <mpfr_sin_cos@@Base+0x4cc>
   36044:	mov	w19, #0x4                   	// #4
   36048:	mov	w0, #0x8                   	// #8
   3604c:	csel	w19, w19, w0, gt
   36050:	b	35d78 <mpfr_sin_cos@@Base+0x4d0>
   36054:	tbnz	x22, #63, 35de4 <mpfr_sin_cos@@Base+0x53c>
   36058:	mov	x27, #0xe                   	// #14
   3605c:	stp	x25, x26, [sp, #64]
   36060:	b	35998 <mpfr_sin_cos@@Base+0xf0>
   36064:	ldr	w4, [sp, #136]
   36068:	mov	x1, x23
   3606c:	mov	w3, #0x0                   	// #0
   36070:	bl	c540 <mpfr_round_near_x@plt>
   36074:	mov	w19, w0
   36078:	cbz	w0, 35e08 <mpfr_sin_cos@@Base+0x560>
   3607c:	ldr	x0, [x28]
   36080:	add	x2, x24, #0x1
   36084:	add	x0, x0, #0x1
   36088:	cmp	x0, x2
   3608c:	b.cs	35e08 <mpfr_sin_cos@@Base+0x560>  // b.hs, b.nlast
   36090:	adrp	x1, 7f000 <__gmpfr_l2b@@Base+0x200>
   36094:	ldr	w4, [sp, #136]
   36098:	mov	x0, x28
   3609c:	mov	w3, #0x0                   	// #0
   360a0:	ldr	x1, [x1, #3928]
   360a4:	bl	c540 <mpfr_round_near_x@plt>
   360a8:	mov	w21, w0
   360ac:	cbz	w0, 35e08 <mpfr_sin_cos@@Base+0x560>
   360b0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   360b4:	ldr	x1, [x0, #2576]
   360b8:	add	x0, x0, #0xa10
   360bc:	blr	x1
   360c0:	ldr	x1, [sp, #112]
   360c4:	ldr	x2, [sp, #112]
   360c8:	ldr	w0, [x1, x0]
   360cc:	ldr	w1, [sp, #140]
   360d0:	orr	w0, w1, w0
   360d4:	str	w0, [sp, #140]
   360d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   360dc:	ldr	x1, [x0, #2576]
   360e0:	add	x0, x0, #0xa10
   360e4:	blr	x1
   360e8:	ldr	w1, [sp, #140]
   360ec:	str	w1, [x2, x0]
   360f0:	ldr	x0, [sp, #128]
   360f4:	ldr	x1, [x0, #16]
   360f8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   360fc:	ldr	x3, [x0, #2512]
   36100:	add	x0, x0, #0x9d0
   36104:	blr	x3
   36108:	ldr	x3, [sp, #144]
   3610c:	str	x3, [x2, x0]
   36110:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   36114:	ldr	x4, [x0, #2544]
   36118:	add	x0, x0, #0x9f0
   3611c:	blr	x4
   36120:	ldr	x4, [sp, #152]
   36124:	str	x4, [x2, x0]
   36128:	cmp	x3, x1
   3612c:	ccmp	x4, x1, #0x1, le
   36130:	b.lt	35d20 <mpfr_sin_cos@@Base+0x478>  // b.tstop
   36134:	b	35e98 <mpfr_sin_cos@@Base+0x5f0>
   36138:	ldr	w2, [sp, #136]
   3613c:	mov	w1, w21
   36140:	mov	x0, x28
   36144:	bl	cb30 <mpfr_check_range@plt>
   36148:	mov	w21, w0
   3614c:	cmp	w19, #0x0
   36150:	cset	w19, le
   36154:	add	w19, w19, #0x1
   36158:	cbz	w21, 35f3c <mpfr_sin_cos@@Base+0x694>
   3615c:	b	35f28 <mpfr_sin_cos@@Base+0x680>
   36160:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   36164:	ldr	x2, [x0, #2576]
   36168:	add	x0, x0, #0xa10
   3616c:	blr	x2
   36170:	mrs	x1, tpidr_el0
   36174:	ldr	x2, [sp, #128]
   36178:	add	x0, x1, x0
   3617c:	mov	x1, #0x2                   	// #2
   36180:	mov	w19, #0x0                   	// #0
   36184:	movk	x1, #0x8000, lsl #48
   36188:	str	x1, [x2, #16]
   3618c:	str	x1, [x28, #16]
   36190:	ldr	w1, [x0]
   36194:	orr	w1, w1, #0x4
   36198:	str	w1, [x0]
   3619c:	b	35d78 <mpfr_sin_cos@@Base+0x4d0>
   361a0:	mov	w19, #0x0                   	// #0
   361a4:	b	35f28 <mpfr_sin_cos@@Base+0x680>
   361a8:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   361ac:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   361b0:	add	x2, x2, #0x820
   361b4:	add	x0, x0, #0xd38
   361b8:	mov	w1, #0x47                  	// #71
   361bc:	stp	x25, x26, [sp, #64]
   361c0:	bl	cb40 <mpfr_assert_fail@plt>
   361c4:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   361c8:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   361cc:	add	x2, x2, #0xd58
   361d0:	add	x0, x0, #0xd38
   361d4:	mov	w1, #0x28                  	// #40
   361d8:	stp	x25, x26, [sp, #64]
   361dc:	stp	x27, x28, [sp, #80]
   361e0:	bl	cb40 <mpfr_assert_fail@plt>
   361e4:	nop

00000000000361e8 <mpfr_set_nan@@Base>:
   361e8:	mrs	x1, tpidr_el0
   361ec:	stp	x29, x30, [sp, #-16]!
   361f0:	mov	x2, x0
   361f4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   361f8:	ldr	x3, [x0, #2576]
   361fc:	add	x0, x0, #0xa10
   36200:	blr	x3
   36204:	add	x0, x1, x0
   36208:	mov	x1, #0x2                   	// #2
   3620c:	mov	x29, sp
   36210:	movk	x1, #0x8000, lsl #48
   36214:	str	x1, [x2, #16]
   36218:	ldr	w1, [x0]
   3621c:	orr	w1, w1, #0x4
   36220:	str	w1, [x0]
   36224:	ldp	x29, x30, [sp], #16
   36228:	ret
   3622c:	nop

0000000000036230 <mpfr_set_inf@@Base>:
   36230:	cmp	w1, #0x0
   36234:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   36238:	mov	w1, #0xffffffff            	// #-1
   3623c:	cneg	w1, w1, ge  // ge = tcont
   36240:	str	w1, [x0, #8]
   36244:	str	x2, [x0, #16]
   36248:	ret
   3624c:	nop

0000000000036250 <mpfr_set_zero@@Base>:
   36250:	cmp	w1, #0x0
   36254:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   36258:	mov	w1, #0xffffffff            	// #-1
   3625c:	csinc	w1, w1, wzr, lt  // lt = tstop
   36260:	str	w1, [x0, #8]
   36264:	str	x2, [x0, #16]
   36268:	ret
   3626c:	nop

0000000000036270 <mpfr_powerof2_raw2@@Base>:
   36270:	sub	x1, x1, #0x1
   36274:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   36278:	ldr	x3, [x0, x1, lsl #3]
   3627c:	cmp	x3, x2
   36280:	b.eq	36294 <mpfr_powerof2_raw2@@Base+0x24>  // b.none
   36284:	mov	w0, #0x0                   	// #0
   36288:	ret
   3628c:	ldr	x2, [x0, x1, lsl #3]
   36290:	cbnz	x2, 36284 <mpfr_powerof2_raw2@@Base+0x14>
   36294:	cmp	x1, #0x0
   36298:	sub	x1, x1, #0x1
   3629c:	b.gt	3628c <mpfr_powerof2_raw2@@Base+0x1c>
   362a0:	mov	w0, #0x1                   	// #1
   362a4:	ret

00000000000362a8 <mpfr_powerof2_raw@@Base>:
   362a8:	ldr	x1, [x0]
   362ac:	ldr	x0, [x0, #24]
   362b0:	sub	x1, x1, #0x1
   362b4:	asr	x1, x1, #6
   362b8:	add	x1, x1, #0x1
   362bc:	b	c7d0 <mpfr_powerof2_raw2@plt>
   362c0:	stp	x29, x30, [sp, #-320]!
   362c4:	mov	x29, sp
   362c8:	stp	x25, x26, [sp, #64]
   362cc:	mrs	x25, tpidr_el0
   362d0:	stp	x19, x20, [sp, #16]
   362d4:	mov	x20, x3
   362d8:	mov	w3, #0x3                   	// #3
   362dc:	stp	x23, x24, [sp, #48]
   362e0:	mov	x23, x0
   362e4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   362e8:	ldr	x6, [x0, #2576]
   362ec:	add	x0, x0, #0xa10
   362f0:	blr	x6
   362f4:	add	x19, x25, x0
   362f8:	stp	x21, x22, [sp, #32]
   362fc:	mov	x24, x2
   36300:	mov	x22, x4
   36304:	mov	x2, x1
   36308:	mov	w21, w5
   3630c:	add	x1, sp, #0x6c
   36310:	str	wzr, [x25, x0]
   36314:	mov	x0, x20
   36318:	bl	c0a0 <mpfr_lgamma@plt>
   3631c:	ldr	w1, [x19]
   36320:	cbz	w0, 3652c <mpfr_powerof2_raw@@Base+0x284>
   36324:	ldr	w3, [x20, #8]
   36328:	tbnz	w1, #1, 36500 <mpfr_powerof2_raw@@Base+0x258>
   3632c:	mov	x1, x20
   36330:	mov	w2, #0x0                   	// #0
   36334:	mov	x0, x22
   36338:	stp	x27, x28, [sp, #80]
   3633c:	bl	c6a0 <mpfr_set4@plt>
   36340:	mov	x0, x22
   36344:	bl	c120 <mpfr_nextabove@plt>
   36348:	ldr	w0, [sp, #108]
   3634c:	tbnz	w0, #31, 36460 <mpfr_powerof2_raw@@Base+0x1b8>
   36350:	ldr	x26, [x23]
   36354:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   36358:	cmp	x26, x0
   3635c:	b.ge	364fc <mpfr_powerof2_raw@@Base+0x254>  // b.tcont
   36360:	sub	x19, x26, #0x1
   36364:	asr	x19, x19, #6
   36368:	add	x19, x19, #0x1
   3636c:	lsl	x0, x19, #1
   36370:	cmp	x0, #0x10
   36374:	b.gt	36478 <mpfr_powerof2_raw@@Base+0x1d0>
   36378:	add	x0, sp, #0xc0
   3637c:	stp	xzr, x0, [sp, #176]
   36380:	mov	x3, x0
   36384:	mov	w4, #0x1                   	// #1
   36388:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3638c:	ldr	x1, [x0, #2576]
   36390:	add	x0, x0, #0xa10
   36394:	blr	x1
   36398:	add	x28, sp, #0x70
   3639c:	add	x19, x3, x19, lsl #3
   363a0:	add	x27, x25, x0
   363a4:	mov	x1, x20
   363a8:	mov	w2, w21
   363ac:	str	wzr, [x25, x0]
   363b0:	mov	x0, x28
   363b4:	str	x26, [sp, #112]
   363b8:	str	w4, [sp, #120]
   363bc:	add	x20, sp, #0x90
   363c0:	stp	x3, x26, [sp, #136]
   363c4:	str	w4, [sp, #152]
   363c8:	str	x19, [sp, #168]
   363cc:	bl	c750 <mpfr_exp@plt>
   363d0:	mov	w2, w21
   363d4:	mov	x1, x22
   363d8:	ldr	w21, [x27]
   363dc:	mov	w19, w0
   363e0:	mov	x0, x20
   363e4:	str	wzr, [x27]
   363e8:	bl	c750 <mpfr_exp@plt>
   363ec:	ldr	w22, [x27]
   363f0:	mov	x1, x20
   363f4:	mov	w20, w0
   363f8:	mov	x0, x28
   363fc:	bl	ca60 <mpfr_equal_p@plt>
   36400:	cmp	w0, #0x0
   36404:	ccmp	w21, w22, #0x0, ne  // ne = any
   36408:	b.eq	36490 <mpfr_powerof2_raw@@Base+0x1e8>  // b.none
   3640c:	mov	w19, #0x0                   	// #0
   36410:	ldr	x1, [sp, #176]
   36414:	cbnz	x1, 36438 <mpfr_powerof2_raw@@Base+0x190>
   36418:	ldp	x27, x28, [sp, #80]
   3641c:	mov	w0, w19
   36420:	ldp	x19, x20, [sp, #16]
   36424:	ldp	x21, x22, [sp, #32]
   36428:	ldp	x23, x24, [sp, #48]
   3642c:	ldp	x25, x26, [sp, #64]
   36430:	ldp	x29, x30, [sp], #320
   36434:	ret
   36438:	ldr	x0, [sp, #184]
   3643c:	bl	cc20 <mpfr_free_func@plt>
   36440:	mov	w0, w19
   36444:	ldp	x19, x20, [sp, #16]
   36448:	ldp	x21, x22, [sp, #32]
   3644c:	ldp	x23, x24, [sp, #48]
   36450:	ldp	x25, x26, [sp, #64]
   36454:	ldp	x27, x28, [sp, #80]
   36458:	ldp	x29, x30, [sp], #320
   3645c:	ret
   36460:	cmp	w21, #0x2
   36464:	b.eq	364cc <mpfr_powerof2_raw@@Base+0x224>  // b.none
   36468:	cmp	w21, #0x3
   3646c:	mov	w0, #0x2                   	// #2
   36470:	csel	w21, w21, w0, ne  // ne = any
   36474:	b	36350 <mpfr_powerof2_raw@@Base+0xa8>
   36478:	lsl	x0, x19, #4
   3647c:	str	x0, [sp, #176]
   36480:	bl	ccf0 <mpfr_allocate_func@plt>
   36484:	mov	x3, x0
   36488:	str	x0, [sp, #184]
   3648c:	b	36384 <mpfr_powerof2_raw@@Base+0xdc>
   36490:	cmp	w19, #0x0
   36494:	ccmp	w20, #0x0, #0x4, gt
   36498:	b.le	364d4 <mpfr_powerof2_raw@@Base+0x22c>
   3649c:	ldr	w3, [sp, #108]
   364a0:	mov	x1, x28
   364a4:	mov	x0, x23
   364a8:	mov	w2, #0x0                   	// #0
   364ac:	bl	c6a0 <mpfr_set4@plt>
   364b0:	ldr	w1, [sp, #108]
   364b4:	ldr	w0, [x24]
   364b8:	cmp	w1, #0x0
   364bc:	orr	w21, w0, w21
   364c0:	cneg	w19, w19, lt  // lt = tstop
   364c4:	str	w21, [x24]
   364c8:	b	36410 <mpfr_powerof2_raw@@Base+0x168>
   364cc:	mov	w21, #0x3                   	// #3
   364d0:	b	36350 <mpfr_powerof2_raw@@Base+0xa8>
   364d4:	cmp	w19, #0x0
   364d8:	ccmp	w20, #0x0, #0x0, lt  // lt = tstop
   364dc:	b.lt	3649c <mpfr_powerof2_raw@@Base+0x1f4>  // b.tstop
   364e0:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   364e4:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   364e8:	add	x2, x2, #0xd80
   364ec:	add	x0, x0, #0xd70
   364f0:	mov	w1, #0x69                  	// #105
   364f4:	bl	cb40 <mpfr_assert_fail@plt>
   364f8:	b	3649c <mpfr_powerof2_raw@@Base+0x1f4>
   364fc:	bl	c8e0 <mpfr_abort_prec_max@plt>
   36500:	ldr	w0, [x24]
   36504:	cmp	w3, #0x0
   36508:	ldr	w2, [sp, #108]
   3650c:	b.le	36548 <mpfr_powerof2_raw@@Base+0x2a0>
   36510:	orr	w0, w0, #0x2
   36514:	str	w0, [x24]
   36518:	mov	w1, w21
   3651c:	mov	x0, x23
   36520:	bl	bf40 <mpfr_overflow@plt>
   36524:	mov	w19, w0
   36528:	b	3641c <mpfr_powerof2_raw@@Base+0x174>
   3652c:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   36530:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   36534:	add	x2, x2, #0xd60
   36538:	add	x0, x0, #0xd70
   3653c:	mov	w1, #0x4b                  	// #75
   36540:	stp	x27, x28, [sp, #80]
   36544:	bl	cb40 <mpfr_assert_fail@plt>
   36548:	cmp	w21, #0x0
   3654c:	orr	w0, w0, #0x1
   36550:	str	w0, [x24]
   36554:	csinc	w1, w21, wzr, ne  // ne = any
   36558:	mov	x0, x23
   3655c:	bl	c3c0 <mpfr_underflow@plt>
   36560:	mov	w19, w0
   36564:	b	3641c <mpfr_powerof2_raw@@Base+0x174>
   36568:	stp	x29, x30, [sp, #-496]!
   3656c:	mov	x29, sp
   36570:	stp	x19, x20, [sp, #16]
   36574:	mrs	x20, tpidr_el0
   36578:	stp	x21, x22, [sp, #32]
   3657c:	mov	x21, x0
   36580:	str	x1, [sp, #128]
   36584:	str	x0, [sp, #232]
   36588:	mov	x0, x1
   3658c:	mov	x1, #0x1                   	// #1
   36590:	stp	x23, x24, [sp, #48]
   36594:	add	x24, sp, #0x170
   36598:	stp	x25, x26, [sp, #64]
   3659c:	add	x26, sp, #0x190
   365a0:	stp	x27, x28, [sp, #80]
   365a4:	add	x28, sp, #0x150
   365a8:	add	x27, sp, #0x1b0
   365ac:	str	x20, [sp, #160]
   365b0:	str	w2, [sp, #212]
   365b4:	mov	x2, #0x0                   	// #0
   365b8:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   365bc:	mov	w19, w0
   365c0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   365c4:	ldr	x1, [x0, #2576]
   365c8:	add	x0, x0, #0xa10
   365cc:	blr	x1
   365d0:	ldr	w7, [x20, x0]
   365d4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   365d8:	ldr	x1, [x0, #2512]
   365dc:	add	x0, x0, #0x9d0
   365e0:	blr	x1
   365e4:	add	x2, x20, x0
   365e8:	ldr	x6, [x20, x0]
   365ec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   365f0:	ldr	x1, [x0, #2544]
   365f4:	add	x0, x0, #0x9f0
   365f8:	blr	x1
   365fc:	ldr	x5, [x20, x0]
   36600:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   36604:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   36608:	mov	x1, #0x1                   	// #1
   3660c:	ldr	x21, [x21]
   36610:	str	x4, [x20, x0]
   36614:	mov	x0, x28
   36618:	add	x20, sp, #0x1d0
   3661c:	str	x3, [x2]
   36620:	str	x21, [sp, #200]
   36624:	str	x20, [sp, #248]
   36628:	str	w7, [sp, #312]
   3662c:	stp	x6, x5, [sp, #320]
   36630:	bl	ca80 <mpfr_init2@plt>
   36634:	mov	x0, x24
   36638:	mov	x1, #0x1                   	// #1
   3663c:	bl	ca80 <mpfr_init2@plt>
   36640:	mov	x0, x26
   36644:	mov	x1, #0x1                   	// #1
   36648:	bl	ca80 <mpfr_init2@plt>
   3664c:	mov	x0, x27
   36650:	mov	x1, #0x1                   	// #1
   36654:	bl	ca80 <mpfr_init2@plt>
   36658:	mov	x0, x20
   3665c:	mov	x1, #0x1                   	// #1
   36660:	bl	ca80 <mpfr_init2@plt>
   36664:	tbnz	w19, #31, 3708c <mpfr_powerof2_raw@@Base+0xde4>
   36668:	ldr	x0, [sp, #200]
   3666c:	cmp	x0, #0x1
   36670:	b.eq	37414 <mpfr_powerof2_raw@@Base+0x116c>  // b.none
   36674:	b.le	374f0 <mpfr_powerof2_raw@@Base+0x1248>
   36678:	ldr	x3, [sp, #200]
   3667c:	mov	w0, #0x40                  	// #64
   36680:	mov	w2, #0x4d                  	// #77
   36684:	sub	x1, x3, #0x1
   36688:	clz	x1, x1
   3668c:	sub	w0, w0, w1
   36690:	add	x0, x3, w0, sxtw
   36694:	sub	x1, x0, #0x1
   36698:	clz	x1, x1
   3669c:	sub	w1, w2, w1
   366a0:	add	x0, x0, w1, sxtw
   366a4:	str	x0, [sp, #152]
   366a8:	str	x28, [sp, #144]
   366ac:	mov	x0, #0x40                  	// #64
   366b0:	str	x0, [sp, #240]
   366b4:	mov	x1, #0x35                  	// #53
   366b8:	ldr	x0, [sp, #144]
   366bc:	str	x27, [sp, #216]
   366c0:	ldr	x27, [sp, #248]
   366c4:	bl	bed0 <mpfr_set_prec@plt>
   366c8:	ldr	x0, [sp, #152]
   366cc:	cmp	x0, #0x64
   366d0:	b.le	37074 <mpfr_powerof2_raw@@Base+0xdcc>
   366d4:	ldr	x0, [sp, #152]
   366d8:	cmp	x0, #0x1f4
   366dc:	b.le	36730 <mpfr_powerof2_raw@@Base+0x488>
   366e0:	ldr	x0, [sp, #152]
   366e4:	cmp	x0, #0x3e8
   366e8:	b.le	37398 <mpfr_powerof2_raw@@Base+0x10f0>
   366ec:	ldr	x0, [sp, #152]
   366f0:	cmp	x0, #0x7d0
   366f4:	b.le	373b0 <mpfr_powerof2_raw@@Base+0x1108>
   366f8:	ldr	x1, [sp, #152]
   366fc:	mov	x0, #0x1388                	// #5000
   36700:	cmp	x1, x0
   36704:	b.le	37380 <mpfr_powerof2_raw@@Base+0x10d8>
   36708:	ldr	x1, [sp, #152]
   3670c:	mov	x0, #0x2710                	// #10000
   36710:	mov	w3, #0x0                   	// #0
   36714:	cmp	x1, x0
   36718:	b.gt	37400 <mpfr_powerof2_raw@@Base+0x1158>
   3671c:	ldr	x0, [sp, #144]
   36720:	mov	x2, #0xfffffffffffffff6    	// #-10
   36724:	mov	x1, #0xd9a                 	// #3482
   36728:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3672c:	b	36744 <mpfr_powerof2_raw@@Base+0x49c>
   36730:	ldr	x0, [sp, #144]
   36734:	mov	w3, #0x0                   	// #0
   36738:	mov	x2, #0xfffffffffffffff6    	// #-10
   3673c:	mov	x1, #0x333                 	// #819
   36740:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   36744:	ldr	x19, [sp, #144]
   36748:	mov	w3, #0x2                   	// #2
   3674c:	mov	x2, #0xfffffffffffffffc    	// #-4
   36750:	mov	x1, #0x4                   	// #4
   36754:	mov	x0, x19
   36758:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3675c:	ldr	x2, [sp, #152]
   36760:	mov	x0, #0x3                   	// #3
   36764:	mov	x1, x19
   36768:	mov	w3, #0x2                   	// #2
   3676c:	str	x0, [sp, #168]
   36770:	mov	x0, x19
   36774:	bl	ba50 <mpfr_mul_ui@plt>
   36778:	ldr	x0, [sp, #128]
   3677c:	mov	x1, x19
   36780:	mov	w2, #0x1                   	// #1
   36784:	bl	c9a0 <mpfr_cmp3@plt>
   36788:	tbnz	w0, #31, 37348 <mpfr_powerof2_raw@@Base+0x10a0>
   3678c:	ldp	x19, x20, [sp, #144]
   36790:	mov	x1, x20
   36794:	mov	x0, x19
   36798:	bl	bed0 <mpfr_set_prec@plt>
   3679c:	mov	x1, x20
   367a0:	mov	x0, x24
   367a4:	bl	bed0 <mpfr_set_prec@plt>
   367a8:	mov	x1, x20
   367ac:	mov	x0, x26
   367b0:	bl	bed0 <mpfr_set_prec@plt>
   367b4:	ldr	x21, [sp, #216]
   367b8:	mov	x1, x20
   367bc:	mov	x0, x21
   367c0:	bl	bed0 <mpfr_set_prec@plt>
   367c4:	mov	x1, x20
   367c8:	mov	x0, x27
   367cc:	bl	bed0 <mpfr_set_prec@plt>
   367d0:	ldr	x1, [sp, #128]
   367d4:	mov	w3, #0x0                   	// #0
   367d8:	ldr	x2, [sp, #168]
   367dc:	mov	x0, x27
   367e0:	bl	c260 <mpfr_add_ui@plt>
   367e4:	mov	x1, x27
   367e8:	mov	w2, #0x0                   	// #0
   367ec:	mov	x0, x19
   367f0:	bl	c090 <mpfr_log@plt>
   367f4:	mov	x1, x27
   367f8:	mov	w3, #0x0                   	// #0
   367fc:	mov	x2, #0x1                   	// #1
   36800:	mov	x0, x24
   36804:	bl	c2c0 <mpfr_mul_2ui@plt>
   36808:	mov	x1, x24
   3680c:	mov	w3, #0x0                   	// #0
   36810:	mov	x2, #0x1                   	// #1
   36814:	mov	x0, x24
   36818:	bl	c530 <mpfr_sub_ui@plt>
   3681c:	mov	x2, x24
   36820:	mov	x1, x19
   36824:	mov	w3, #0x0                   	// #0
   36828:	mov	x0, x19
   3682c:	bl	bd50 <mpfr_mul@plt>
   36830:	mov	x1, x19
   36834:	mov	w3, #0x0                   	// #0
   36838:	mov	x2, #0x1                   	// #1
   3683c:	mov	x0, x19
   36840:	bl	c8f0 <mpfr_div_2ui@plt>
   36844:	mov	x2, x27
   36848:	mov	x1, x19
   3684c:	mov	w3, #0x0                   	// #0
   36850:	mov	x0, x19
   36854:	bl	bb70 <mpfr_sub@plt>
   36858:	mov	x2, x27
   3685c:	mov	w3, #0x0                   	// #0
   36860:	mov	x1, #0x1                   	// #1
   36864:	mov	x0, x26
   36868:	bl	c2f0 <mpfr_ui_div@plt>
   3686c:	mov	x1, x26
   36870:	mov	w3, #0x0                   	// #0
   36874:	mov	x2, #0xc                   	// #12
   36878:	mov	x0, x24
   3687c:	bl	cc60 <mpfr_div_ui@plt>
   36880:	ldr	w3, [sp, #376]
   36884:	mov	x1, x24
   36888:	mov	w2, #0x0                   	// #0
   3688c:	mov	x0, x21
   36890:	bl	c6a0 <mpfr_set4@plt>
   36894:	str	x21, [sp, #216]
   36898:	mov	x2, x21
   3689c:	mov	x1, x19
   368a0:	mov	w3, #0x0                   	// #0
   368a4:	mov	x0, x19
   368a8:	bl	c1a0 <mpfr_add@plt>
   368ac:	mov	x1, x26
   368b0:	mov	x2, x26
   368b4:	mov	x0, x26
   368b8:	mov	w3, #0x0                   	// #0
   368bc:	bl	bd50 <mpfr_mul@plt>
   368c0:	ldr	x0, [sp, #448]
   368c4:	ldr	x1, [sp, #352]
   368c8:	add	x0, x20, x0
   368cc:	cmp	x0, x1
   368d0:	b.lt	373f4 <mpfr_powerof2_raw@@Base+0x114c>  // b.tstop
   368d4:	mov	x19, #0x2                   	// #2
   368d8:	mov	x21, x24
   368dc:	mov	x20, #0xfffffffffffffff9    	// #-7
   368e0:	mov	x22, #0x80000000            	// #2147483648
   368e4:	mov	x28, #0xfffffffffffffffa    	// #-6
   368e8:	mov	x25, #0xfffffffffffffffc    	// #-4
   368ec:	mov	x23, #0xfffffffffffffffe    	// #-2
   368f0:	str	x26, [sp, #120]
   368f4:	mov	x26, x19
   368f8:	str	x27, [sp, #136]
   368fc:	ldr	x27, [sp, #216]
   36900:	b	36998 <mpfr_powerof2_raw@@Base+0x6f0>
   36904:	mul	x2, x2, x19
   36908:	add	x19, x19, #0x4
   3690c:	mov	x1, x21
   36910:	mov	w3, #0x0                   	// #0
   36914:	mov	x0, x21
   36918:	mul	x24, x19, x26
   3691c:	bl	ba50 <mpfr_mul_ui@plt>
   36920:	mov	x2, x24
   36924:	mov	x1, x21
   36928:	mov	w3, #0x0                   	// #0
   3692c:	mov	x0, x21
   36930:	bl	cc60 <mpfr_div_ui@plt>
   36934:	add	x2, x24, x26, lsl #2
   36938:	mov	x1, x21
   3693c:	mov	x0, x21
   36940:	mov	w3, #0x0                   	// #0
   36944:	bl	cc60 <mpfr_div_ui@plt>
   36948:	mov	x0, x26
   3694c:	bl	c830 <mpfr_bernoulli_cache@plt>
   36950:	mov	x1, x21
   36954:	mov	x2, x0
   36958:	mov	w3, #0x0                   	// #0
   3695c:	mov	x0, x27
   36960:	bl	c4d0 <mpfr_mul_z@plt>
   36964:	sub	x20, x20, #0x2
   36968:	ldr	x0, [sp, #144]
   3696c:	mov	x2, x27
   36970:	mov	w3, #0x0                   	// #0
   36974:	add	x26, x26, #0x1
   36978:	mov	x1, x0
   3697c:	bl	c1a0 <mpfr_add@plt>
   36980:	ldr	x2, [sp, #152]
   36984:	ldr	x0, [sp, #448]
   36988:	ldr	x1, [sp, #352]
   3698c:	add	x0, x2, x0
   36990:	cmp	x0, x1
   36994:	b.lt	36a40 <mpfr_powerof2_raw@@Base+0x798>  // b.tstop
   36998:	ldr	x2, [sp, #120]
   3699c:	mov	x1, x21
   369a0:	mov	x0, x21
   369a4:	mov	w3, #0x0                   	// #0
   369a8:	lsl	x24, x26, #1
   369ac:	bl	bd50 <mpfr_mul@plt>
   369b0:	cmp	x26, x22
   369b4:	sub	x2, x26, #0x1
   369b8:	b.ls	36904 <mpfr_powerof2_raw@@Base+0x65c>  // b.plast
   369bc:	mov	x0, #0xfffffffffffffffb    	// #-5
   369c0:	mov	x1, x21
   369c4:	sub	x2, x0, x20
   369c8:	mov	w3, #0x0                   	// #0
   369cc:	mov	x0, x21
   369d0:	bl	ba50 <mpfr_mul_ui@plt>
   369d4:	sub	x2, x28, x20
   369d8:	mov	x1, x21
   369dc:	mov	x0, x21
   369e0:	mov	w3, #0x0                   	// #0
   369e4:	bl	ba50 <mpfr_mul_ui@plt>
   369e8:	add	x19, x19, #0x4
   369ec:	mov	x2, x24
   369f0:	mov	x1, x21
   369f4:	mov	x0, x21
   369f8:	mov	w3, #0x0                   	// #0
   369fc:	bl	cc60 <mpfr_div_ui@plt>
   36a00:	sub	x2, x25, x20
   36a04:	mov	x1, x21
   36a08:	mov	x0, x21
   36a0c:	mov	w3, #0x0                   	// #0
   36a10:	bl	cc60 <mpfr_div_ui@plt>
   36a14:	mov	x2, x24
   36a18:	mov	x1, x21
   36a1c:	mov	x0, x21
   36a20:	mov	w3, #0x0                   	// #0
   36a24:	bl	cc60 <mpfr_div_ui@plt>
   36a28:	sub	x2, x23, x20
   36a2c:	mov	x1, x21
   36a30:	mov	x0, x21
   36a34:	mov	w3, #0x0                   	// #0
   36a38:	bl	cc60 <mpfr_div_ui@plt>
   36a3c:	b	36948 <mpfr_powerof2_raw@@Base+0x6a0>
   36a40:	str	x26, [sp, #264]
   36a44:	mov	x24, x21
   36a48:	ldr	x26, [sp, #120]
   36a4c:	ldr	x27, [sp, #136]
   36a50:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   36a54:	ldr	x1, [x0, #2624]
   36a58:	add	x0, x0, #0xa40
   36a5c:	blr	x1
   36a60:	ldr	x1, [sp, #160]
   36a64:	mov	w2, #0x0                   	// #0
   36a68:	ldr	x19, [sp, #216]
   36a6c:	add	x1, x1, x0
   36a70:	mov	x20, #0x2                   	// #2
   36a74:	mov	x0, x19
   36a78:	bl	c380 <mpfr_cache@plt>
   36a7c:	mov	x1, x19
   36a80:	mov	w3, #0x0                   	// #0
   36a84:	mov	x2, #0x1                   	// #1
   36a88:	mov	x0, x19
   36a8c:	bl	c2c0 <mpfr_mul_2ui@plt>
   36a90:	ldr	x1, [sp, #128]
   36a94:	mov	w2, #0x0                   	// #0
   36a98:	mov	x0, x24
   36a9c:	ldr	w3, [x1, #8]
   36aa0:	bl	c6a0 <mpfr_set4@plt>
   36aa4:	ldr	x2, [sp, #168]
   36aa8:	mov	x0, x20
   36aac:	nop
   36ab0:	mov	x23, x0
   36ab4:	add	x0, x0, #0x1
   36ab8:	mul	x1, x0, x0
   36abc:	cmp	x1, x2
   36ac0:	b.cc	36ab0 <mpfr_powerof2_raw@@Base+0x808>  // b.lo, b.ul, b.last
   36ac4:	str	x0, [sp, #136]
   36ac8:	lsl	x0, x0, #5
   36acc:	str	x0, [sp, #288]
   36ad0:	bl	ccf0 <mpfr_allocate_func@plt>
   36ad4:	str	x0, [sp, #224]
   36ad8:	cmp	x23, #0x1
   36adc:	b.ls	373d8 <mpfr_powerof2_raw@@Base+0x1130>  // b.plast
   36ae0:	ldr	x0, [sp, #224]
   36ae4:	ldr	x22, [sp, #152]
   36ae8:	add	x20, x0, #0x40
   36aec:	add	x19, x0, x23, lsl #5
   36af0:	mov	x21, x20
   36af4:	nop
   36af8:	mov	x0, x21
   36afc:	mov	x1, x22
   36b00:	bl	ca80 <mpfr_init2@plt>
   36b04:	cmp	x19, x21
   36b08:	add	x21, x21, #0x20
   36b0c:	b.ne	36af8 <mpfr_powerof2_raw@@Base+0x850>  // b.any
   36b10:	ldr	x1, [sp, #128]
   36b14:	mov	x0, x20
   36b18:	mov	w2, #0x0                   	// #0
   36b1c:	str	x20, [sp, #256]
   36b20:	bl	c400 <mpfr_sqr@plt>
   36b24:	cmp	x23, #0x2
   36b28:	b.ls	36b68 <mpfr_powerof2_raw@@Base+0x8c0>  // b.plast
   36b2c:	ldr	x21, [sp, #224]
   36b30:	mov	x19, #0x3                   	// #3
   36b34:	ldr	x22, [sp, #128]
   36b38:	add	x20, x21, #0x60
   36b3c:	nop
   36b40:	tbnz	w19, #0, 36d28 <mpfr_powerof2_raw@@Base+0xa80>
   36b44:	lsr	x1, x19, #1
   36b48:	mov	x0, x20
   36b4c:	mov	w2, #0x0                   	// #0
   36b50:	add	x1, x21, x1, lsl #5
   36b54:	bl	c400 <mpfr_sqr@plt>
   36b58:	cmp	x23, x19
   36b5c:	add	x20, x20, #0x20
   36b60:	add	x19, x19, #0x1
   36b64:	b.ne	36b40 <mpfr_powerof2_raw@@Base+0x898>  // b.any
   36b68:	ldr	x0, [sp, #136]
   36b6c:	lsl	x0, x0, #4
   36b70:	str	x0, [sp, #296]
   36b74:	bl	ccf0 <mpfr_allocate_func@plt>
   36b78:	mov	x19, x0
   36b7c:	add	x1, x23, #0x1
   36b80:	mov	x20, x0
   36b84:	add	x21, x0, x1, lsl #4
   36b88:	stp	x0, x21, [sp, #272]
   36b8c:	nop
   36b90:	mov	x0, x20
   36b94:	add	x20, x20, #0x10
   36b98:	bl	bf90 <mpfr_mpz_init@plt>
   36b9c:	cmp	x21, x20
   36ba0:	b.ne	36b90 <mpfr_powerof2_raw@@Base+0x8e8>  // b.any
   36ba4:	ldr	x0, [sp, #136]
   36ba8:	ldr	x1, [sp, #168]
   36bac:	cmp	x0, x1
   36bb0:	b.hi	373c8 <mpfr_powerof2_raw@@Base+0x1120>  // b.pmore
   36bb4:	add	x0, x19, #0x10
   36bb8:	stp	x24, x0, [sp, #176]
   36bbc:	mov	x25, #0x1                   	// #1
   36bc0:	ldr	x0, [sp, #224]
   36bc4:	mov	x24, x25
   36bc8:	mov	x1, #0x1                   	// #1
   36bcc:	add	x0, x0, #0x20
   36bd0:	str	x0, [sp, #192]
   36bd4:	mov	x0, x19
   36bd8:	ldr	x28, [sp, #128]
   36bdc:	bl	bcb0 <__gmpz_set_ui@plt>
   36be0:	cbz	x23, 36d14 <mpfr_powerof2_raw@@Base+0xa6c>
   36be4:	nop
   36be8:	ldr	x25, [sp, #184]
   36bec:	mov	x1, x19
   36bf0:	sub	x24, x24, #0x1
   36bf4:	mov	x21, #0x1                   	// #1
   36bf8:	mov	x0, x25
   36bfc:	bl	bfa0 <__gmpz_set@plt>
   36c00:	add	x2, x21, x24
   36c04:	mov	x1, x19
   36c08:	mov	x0, x19
   36c0c:	bl	c100 <__gmpz_mul_ui@plt>
   36c10:	mov	x22, x25
   36c14:	cmp	x21, x23
   36c18:	b.eq	36c80 <mpfr_powerof2_raw@@Base+0x9d8>  // b.none
   36c1c:	nop
   36c20:	add	x21, x21, #0x1
   36c24:	add	x0, x25, #0x10
   36c28:	add	x20, x21, x24
   36c2c:	mov	x1, x25
   36c30:	str	x0, [sp, #120]
   36c34:	bl	bfa0 <__gmpz_set@plt>
   36c38:	mov	x1, x25
   36c3c:	mov	x0, x25
   36c40:	mov	x2, x20
   36c44:	bl	c100 <__gmpz_mul_ui@plt>
   36c48:	sub	x2, x25, #0x10
   36c4c:	mov	x1, x25
   36c50:	mov	x0, x25
   36c54:	mov	x25, x2
   36c58:	bl	c9c0 <__gmpz_add@plt>
   36c5c:	cmp	x25, x19
   36c60:	b.ne	36c38 <mpfr_powerof2_raw@@Base+0x990>  // b.any
   36c64:	add	x2, x21, x24
   36c68:	mov	x1, x19
   36c6c:	mov	x0, x19
   36c70:	ldr	x25, [sp, #120]
   36c74:	bl	c100 <__gmpz_mul_ui@plt>
   36c78:	cmp	x21, x23
   36c7c:	b.ne	36c20 <mpfr_powerof2_raw@@Base+0x978>  // b.any
   36c80:	mov	x1, x19
   36c84:	mov	x0, x26
   36c88:	mov	w2, #0x0                   	// #0
   36c8c:	bl	c240 <mpfr_set_z@plt>
   36c90:	ldr	x21, [sp, #192]
   36c94:	mov	x20, #0x0                   	// #0
   36c98:	cmp	x20, #0x0
   36c9c:	add	x1, x21, x20, lsl #5
   36ca0:	csel	x1, x1, x28, ne  // ne = any
   36ca4:	mov	x2, x22
   36ca8:	mov	w3, #0x0                   	// #0
   36cac:	mov	x0, x27
   36cb0:	bl	c4d0 <mpfr_mul_z@plt>
   36cb4:	add	x20, x20, #0x1
   36cb8:	mov	x2, x27
   36cbc:	mov	x1, x26
   36cc0:	mov	x0, x26
   36cc4:	mov	w3, #0x0                   	// #0
   36cc8:	bl	c1a0 <mpfr_add@plt>
   36ccc:	add	x22, x22, #0x10
   36cd0:	cmp	x23, x20
   36cd4:	b.ne	36c98 <mpfr_powerof2_raw@@Base+0x9f0>  // b.any
   36cd8:	ldr	x0, [sp, #176]
   36cdc:	mov	x2, x26
   36ce0:	mov	w3, #0x0                   	// #0
   36ce4:	mov	x1, x0
   36ce8:	bl	bd50 <mpfr_mul@plt>
   36cec:	ldr	x24, [sp, #136]
   36cf0:	ldr	x1, [sp, #168]
   36cf4:	add	x0, x24, x23
   36cf8:	cmp	x1, x0
   36cfc:	b.cc	36d40 <mpfr_powerof2_raw@@Base+0xa98>  // b.lo, b.ul, b.last
   36d00:	mov	x1, #0x1                   	// #1
   36d04:	str	x0, [sp, #136]
   36d08:	mov	x0, x19
   36d0c:	bl	bcb0 <__gmpz_set_ui@plt>
   36d10:	cbnz	x23, 36be8 <mpfr_powerof2_raw@@Base+0x940>
   36d14:	mov	x1, x19
   36d18:	mov	x0, x26
   36d1c:	mov	w2, #0x0                   	// #0
   36d20:	bl	c240 <mpfr_set_z@plt>
   36d24:	b	36cd8 <mpfr_powerof2_raw@@Base+0xa30>
   36d28:	mov	x2, x22
   36d2c:	sub	x1, x20, #0x20
   36d30:	mov	x0, x20
   36d34:	mov	w3, #0x0                   	// #0
   36d38:	bl	bd50 <mpfr_mul@plt>
   36d3c:	b	36b58 <mpfr_powerof2_raw@@Base+0x8b0>
   36d40:	ldp	x20, x21, [sp, #272]
   36d44:	ldr	x24, [sp, #176]
   36d48:	mov	x0, x20
   36d4c:	add	x20, x20, #0x10
   36d50:	bl	c170 <mpfr_mpz_clear@plt>
   36d54:	cmp	x21, x20
   36d58:	b.ne	36d48 <mpfr_powerof2_raw@@Base+0xaa0>  // b.any
   36d5c:	ldr	x1, [sp, #296]
   36d60:	mov	x0, x19
   36d64:	bl	cc20 <mpfr_free_func@plt>
   36d68:	ldr	x0, [sp, #224]
   36d6c:	cmp	x23, #0x1
   36d70:	ldr	x20, [sp, #256]
   36d74:	add	x23, x0, x23, lsl #5
   36d78:	b.ls	36d94 <mpfr_powerof2_raw@@Base+0xaec>  // b.plast
   36d7c:	nop
   36d80:	mov	x0, x20
   36d84:	bl	c070 <mpfr_clear@plt>
   36d88:	cmp	x23, x20
   36d8c:	add	x20, x20, #0x20
   36d90:	b.ne	36d80 <mpfr_powerof2_raw@@Base+0xad8>  // b.any
   36d94:	ldr	x0, [sp, #224]
   36d98:	ldr	x1, [sp, #288]
   36d9c:	bl	cc20 <mpfr_free_func@plt>
   36da0:	ldr	x1, [sp, #136]
   36da4:	ldr	x0, [sp, #168]
   36da8:	cmp	x0, x1
   36dac:	b.ls	36dec <mpfr_powerof2_raw@@Base+0xb44>  // b.plast
   36db0:	ldp	x21, x19, [sp, #128]
   36db4:	ldr	x20, [sp, #168]
   36db8:	mov	x2, x19
   36dbc:	mov	x1, x21
   36dc0:	mov	w3, #0x0                   	// #0
   36dc4:	mov	x0, x26
   36dc8:	bl	c260 <mpfr_add_ui@plt>
   36dcc:	add	x19, x19, #0x1
   36dd0:	mov	x2, x26
   36dd4:	mov	x1, x24
   36dd8:	mov	x0, x24
   36ddc:	mov	w3, #0x0                   	// #0
   36de0:	bl	bd50 <mpfr_mul@plt>
   36de4:	cmp	x20, x19
   36de8:	b.ne	36db8 <mpfr_powerof2_raw@@Base+0xb10>  // b.any
   36dec:	mov	x2, x24
   36df0:	mov	x1, x24
   36df4:	mov	w3, #0x0                   	// #0
   36df8:	mov	x0, x24
   36dfc:	bl	bd50 <mpfr_mul@plt>
   36e00:	mov	x19, #0x8000000000000003    	// #-9223372036854775805
   36e04:	ldr	x0, [sp, #216]
   36e08:	mov	x2, x24
   36e0c:	mov	w3, #0x0                   	// #0
   36e10:	mov	x1, x0
   36e14:	bl	c620 <mpfr_div@plt>
   36e18:	ldr	x0, [sp, #144]
   36e1c:	mov	w2, #0x0                   	// #0
   36e20:	ldr	x20, [sp, #352]
   36e24:	mov	x1, x0
   36e28:	bl	c750 <mpfr_exp@plt>
   36e2c:	ldr	x0, [sp, #352]
   36e30:	cmp	x0, x19
   36e34:	b.eq	37000 <mpfr_powerof2_raw@@Base+0xd58>  // b.none
   36e38:	ldr	x1, [sp, #216]
   36e3c:	mov	w2, #0x0                   	// #0
   36e40:	mov	x0, x24
   36e44:	bl	c930 <mpfr_sqrt@plt>
   36e48:	ldr	x0, [sp, #144]
   36e4c:	mov	x2, x24
   36e50:	mov	w3, #0x0                   	// #0
   36e54:	mov	x1, x0
   36e58:	bl	bd50 <mpfr_mul@plt>
   36e5c:	ldr	x0, [sp, #264]
   36e60:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   36e64:	movk	x1, #0xcccd
   36e68:	umulh	x0, x0, x1
   36e6c:	lsr	x0, x0, #2
   36e70:	add	x0, x0, x0, lsl #1
   36e74:	add	x0, x0, #0x12
   36e78:	bl	bc70 <__gmpfr_int_ceil_log2@plt>
   36e7c:	ldr	d0, [sp, #168]
   36e80:	fmov	d1, #2.500000000000000000e+00
   36e84:	add	w0, w0, #0x2
   36e88:	ucvtf	d2, d0
   36e8c:	fmov	d0, #2.000000000000000000e+00
   36e90:	add	x20, x20, w0, sxtw
   36e94:	fmadd	d0, d2, d0, d1
   36e98:	bl	c950 <__gmpfr_ceil_log2@plt>
   36e9c:	cmp	x20, x0
   36ea0:	ldr	x1, [sp, #352]
   36ea4:	add	x0, x0, #0x1
   36ea8:	csinc	x20, x0, x20, lt  // lt = tstop
   36eac:	cmp	x1, x19
   36eb0:	b.le	37024 <mpfr_powerof2_raw@@Base+0xd7c>
   36eb4:	ldr	w0, [sp, #212]
   36eb8:	ldr	x1, [sp, #336]
   36ebc:	cmp	w0, #0x0
   36ec0:	ldr	x0, [sp, #360]
   36ec4:	sub	x1, x1, #0x1
   36ec8:	ldr	x2, [sp, #152]
   36ecc:	asr	x1, x1, #6
   36ed0:	ldr	x3, [sp, #200]
   36ed4:	sub	x2, x2, x20
   36ed8:	add	x1, x1, #0x1
   36edc:	cinc	x3, x3, eq  // eq = none
   36ee0:	bl	c370 <mpfr_round_p@plt>
   36ee4:	cbz	w0, 37024 <mpfr_powerof2_raw@@Base+0xd7c>
   36ee8:	ldr	x28, [sp, #144]
   36eec:	ldr	x27, [sp, #216]
   36ef0:	mov	x1, x28
   36ef4:	ldr	w2, [sp, #212]
   36ef8:	ldr	w3, [sp, #344]
   36efc:	ldr	x20, [sp, #232]
   36f00:	mov	x0, x20
   36f04:	bl	c6a0 <mpfr_set4@plt>
   36f08:	mov	w19, w0
   36f0c:	mov	x0, x28
   36f10:	bl	c070 <mpfr_clear@plt>
   36f14:	mov	x0, x24
   36f18:	bl	c070 <mpfr_clear@plt>
   36f1c:	mov	x0, x26
   36f20:	bl	c070 <mpfr_clear@plt>
   36f24:	mov	x0, x27
   36f28:	bl	c070 <mpfr_clear@plt>
   36f2c:	ldr	x0, [sp, #248]
   36f30:	bl	c070 <mpfr_clear@plt>
   36f34:	ldr	x5, [sp, #160]
   36f38:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   36f3c:	ldr	x2, [x0, #2576]
   36f40:	add	x0, x0, #0xa10
   36f44:	blr	x2
   36f48:	ldp	x3, x4, [sp, #320]
   36f4c:	ldr	w1, [sp, #312]
   36f50:	str	w1, [x5, x0]
   36f54:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   36f58:	ldr	x2, [x0, #2512]
   36f5c:	add	x0, x0, #0x9d0
   36f60:	blr	x2
   36f64:	ldr	x2, [x20, #16]
   36f68:	str	x3, [x5, x0]
   36f6c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   36f70:	ldr	x6, [x0, #2544]
   36f74:	add	x0, x0, #0x9f0
   36f78:	blr	x6
   36f7c:	str	x4, [x5, x0]
   36f80:	cmp	x4, x2
   36f84:	ccmp	x3, x2, #0x0, ge  // ge = tcont
   36f88:	b.le	36fc0 <mpfr_powerof2_raw@@Base+0xd18>
   36f8c:	ldr	w2, [sp, #212]
   36f90:	mov	w1, w19
   36f94:	ldr	x0, [sp, #232]
   36f98:	bl	cb30 <mpfr_check_range@plt>
   36f9c:	mov	w19, w0
   36fa0:	mov	w0, w19
   36fa4:	ldp	x19, x20, [sp, #16]
   36fa8:	ldp	x21, x22, [sp, #32]
   36fac:	ldp	x23, x24, [sp, #48]
   36fb0:	ldp	x25, x26, [sp, #64]
   36fb4:	ldp	x27, x28, [sp, #80]
   36fb8:	ldp	x29, x30, [sp], #496
   36fbc:	ret
   36fc0:	cbz	w19, 36fa0 <mpfr_powerof2_raw@@Base+0xcf8>
   36fc4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   36fc8:	ldr	x2, [x0, #2576]
   36fcc:	add	x0, x0, #0xa10
   36fd0:	blr	x2
   36fd4:	orr	w1, w1, #0x8
   36fd8:	ldr	x2, [sp, #160]
   36fdc:	ldp	x21, x22, [sp, #32]
   36fe0:	str	w1, [x2, x0]
   36fe4:	mov	w0, w19
   36fe8:	ldp	x19, x20, [sp, #16]
   36fec:	ldp	x23, x24, [sp, #48]
   36ff0:	ldp	x25, x26, [sp, #64]
   36ff4:	ldp	x27, x28, [sp, #80]
   36ff8:	ldp	x29, x30, [sp], #496
   36ffc:	ret
   37000:	ldr	w5, [sp, #212]
   37004:	mov	x4, x24
   37008:	ldr	x1, [sp, #128]
   3700c:	add	x2, sp, #0x138
   37010:	ldr	x3, [sp, #144]
   37014:	ldr	x0, [sp, #232]
   37018:	bl	362c0 <mpfr_powerof2_raw@@Base+0x18>
   3701c:	mov	w19, w0
   37020:	cbnz	w0, 37444 <mpfr_powerof2_raw@@Base+0x119c>
   37024:	ldr	x1, [sp, #152]
   37028:	mov	x0, #0xfffffffffffffeff    	// #-257
   3702c:	movk	x0, #0x7fff, lsl #48
   37030:	sub	x0, x0, x1
   37034:	ldr	x1, [sp, #240]
   37038:	cmp	x0, x1
   3703c:	b.lt	37420 <mpfr_powerof2_raw@@Base+0x1178>  // b.tstop
   37040:	ldr	x0, [sp, #152]
   37044:	ldr	x1, [sp, #240]
   37048:	add	x0, x0, x1
   3704c:	str	x0, [sp, #152]
   37050:	mov	x1, #0x35                  	// #53
   37054:	add	x0, x0, x0, lsr #63
   37058:	asr	x0, x0, #1
   3705c:	str	x0, [sp, #240]
   37060:	ldr	x0, [sp, #144]
   37064:	bl	bed0 <mpfr_set_prec@plt>
   37068:	ldr	x0, [sp, #152]
   3706c:	cmp	x0, #0x64
   37070:	b.gt	366d4 <mpfr_powerof2_raw@@Base+0x42c>
   37074:	ldr	x0, [sp, #144]
   37078:	mov	w3, #0x0                   	// #0
   3707c:	mov	x2, #0xfffffffffffffff6    	// #-10
   37080:	mov	x1, #0x266                 	// #614
   37084:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   37088:	b	36744 <mpfr_powerof2_raw@@Base+0x49c>
   3708c:	stp	d8, d9, [sp, #96]
   37090:	cmp	x21, #0x1
   37094:	b.eq	3743c <mpfr_powerof2_raw@@Base+0x1194>  // b.none
   37098:	b.le	374d8 <mpfr_powerof2_raw@@Base+0x1230>
   3709c:	ldr	x2, [sp, #200]
   370a0:	mov	w0, #0x40                  	// #64
   370a4:	mov	w25, #0x4e                  	// #78
   370a8:	sub	x1, x2, #0x1
   370ac:	clz	x1, x1
   370b0:	sub	w0, w0, w1
   370b4:	add	x0, x2, w0, sxtw
   370b8:	sub	x1, x0, #0x1
   370bc:	clz	x1, x1
   370c0:	sub	w25, w25, w1
   370c4:	add	x25, x0, w25, sxtw
   370c8:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   370cc:	mov	x22, #0xfffffffffffffeff    	// #-257
   370d0:	mov	x23, x27
   370d4:	mov	x20, #0x40                  	// #64
   370d8:	ldr	d9, [x0, #3632]
   370dc:	mov	x0, x28
   370e0:	mov	x21, #0xffffffffffffffff    	// #-1
   370e4:	mov	x28, x25
   370e8:	movk	x22, #0x7fff, lsl #48
   370ec:	mov	x25, x0
   370f0:	b	37114 <mpfr_powerof2_raw@@Base+0xe6c>
   370f4:	add	x0, x27, #0x6
   370f8:	add	x28, x28, x0
   370fc:	sub	x0, x22, x28
   37100:	cmp	x0, x20
   37104:	b.lt	37330 <mpfr_powerof2_raw@@Base+0x1088>  // b.tstop
   37108:	add	x28, x28, x20
   3710c:	add	x20, x28, x28, lsr #63
   37110:	asr	x20, x20, #1
   37114:	mov	x1, x28
   37118:	mov	x0, x25
   3711c:	bl	bed0 <mpfr_set_prec@plt>
   37120:	mov	x19, #0x1                   	// #1
   37124:	mov	x1, x28
   37128:	mov	x0, x24
   3712c:	bl	bed0 <mpfr_set_prec@plt>
   37130:	mov	x1, x28
   37134:	mov	x0, x26
   37138:	bl	bed0 <mpfr_set_prec@plt>
   3713c:	mov	x1, x28
   37140:	mov	x0, x23
   37144:	bl	bed0 <mpfr_set_prec@plt>
   37148:	ldr	x2, [sp, #128]
   3714c:	mov	x1, #0x2                   	// #2
   37150:	mov	w3, #0x3                   	// #3
   37154:	mov	x0, x25
   37158:	bl	ca50 <mpfr_ui_sub@plt>
   3715c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   37160:	ldr	x1, [x0, #2624]
   37164:	add	x0, x0, #0xa40
   37168:	blr	x1
   3716c:	mov	w2, #0x0                   	// #0
   37170:	ldr	x1, [sp, #160]
   37174:	add	x1, x1, x0
   37178:	mov	x0, x24
   3717c:	bl	c380 <mpfr_cache@plt>
   37180:	mov	x1, x25
   37184:	mov	x0, x26
   37188:	mov	w2, #0x0                   	// #0
   3718c:	bl	c600 <mpfr_lngamma@plt>
   37190:	ldr	x1, [sp, #416]
   37194:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   37198:	cmp	x1, x0
   3719c:	b.eq	371cc <mpfr_powerof2_raw@@Base+0xf24>  // b.none
   371a0:	ldr	d8, [sp, #352]
   371a4:	scvtf	d0, d8
   371a8:	fmul	d0, d0, d9
   371ac:	bl	c950 <__gmpfr_ceil_log2@plt>
   371b0:	fmov	x2, d8
   371b4:	ldr	x1, [sp, #416]
   371b8:	add	x19, x2, x0
   371bc:	add	x19, x19, #0x1
   371c0:	subs	x19, x19, x1
   371c4:	csel	x19, x19, x21, pl  // pl = nfrst
   371c8:	add	x19, x19, #0x1
   371cc:	mov	w3, #0x0                   	// #0
   371d0:	mov	x2, x24
   371d4:	mov	x1, x25
   371d8:	mov	x0, x25
   371dc:	bl	bd50 <mpfr_mul@plt>
   371e0:	mov	x1, x25
   371e4:	mov	w2, #0x0                   	// #0
   371e8:	mov	x0, x25
   371ec:	ldr	x27, [sp, #352]
   371f0:	bl	c450 <mpfr_sin@plt>
   371f4:	ldr	x4, [sp, #352]
   371f8:	mov	w3, #0x0                   	// #0
   371fc:	ldr	x1, [sp, #128]
   37200:	sub	x4, x27, x4
   37204:	adds	x27, x4, #0x3
   37208:	mov	x2, #0x1                   	// #1
   3720c:	csel	x27, x27, x21, pl  // pl = nfrst
   37210:	mov	x0, x23
   37214:	bl	c530 <mpfr_sub_ui@plt>
   37218:	mov	x2, x24
   3721c:	mov	x1, x23
   37220:	mov	w3, #0x0                   	// #0
   37224:	mov	x0, x23
   37228:	bl	bd50 <mpfr_mul@plt>
   3722c:	mov	x2, x25
   37230:	mov	x1, x23
   37234:	mov	w3, #0x0                   	// #0
   37238:	mov	x0, x23
   3723c:	bl	c620 <mpfr_div@plt>
   37240:	mov	w3, #0x1                   	// #1
   37244:	mov	x1, x23
   37248:	mov	w2, #0x0                   	// #0
   3724c:	mov	x0, x23
   37250:	bl	c6a0 <mpfr_set4@plt>
   37254:	mov	x1, x23
   37258:	mov	x0, x23
   3725c:	mov	w2, #0x0                   	// #0
   37260:	bl	c090 <mpfr_log@plt>
   37264:	add	x1, x27, #0x5
   37268:	cmp	x1, x28
   3726c:	b.ge	370f4 <mpfr_powerof2_raw@@Base+0xe4c>  // b.tcont
   37270:	ldr	x2, [sp, #448]
   37274:	add	x0, x27, #0x4
   37278:	mov	x27, x1
   3727c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   37280:	cmp	x2, x1
   37284:	ldr	x1, [sp, #416]
   37288:	str	x1, [sp, #120]
   3728c:	b.eq	372a8 <mpfr_powerof2_raw@@Base+0x1000>  // b.none
   37290:	mov	x1, #0x1                   	// #1
   37294:	sub	x1, x1, x2
   37298:	adds	x0, x1, x0
   3729c:	csel	x0, x0, x21, pl  // pl = nfrst
   372a0:	add	x0, x0, #0x1
   372a4:	add	x27, x2, x0
   372a8:	mov	x1, x23
   372ac:	mov	x2, x26
   372b0:	mov	x0, x25
   372b4:	mov	w3, #0x0                   	// #0
   372b8:	bl	bb70 <mpfr_sub@plt>
   372bc:	ldr	x0, [sp, #352]
   372c0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   372c4:	cmp	x0, x1
   372c8:	b.le	370fc <mpfr_powerof2_raw@@Base+0xe54>
   372cc:	ldr	x1, [sp, #120]
   372d0:	mov	x2, #0x1                   	// #1
   372d4:	sub	x0, x2, x0
   372d8:	add	x1, x19, x1
   372dc:	ldr	x2, [sp, #336]
   372e0:	cmp	x1, x27
   372e4:	csel	x1, x1, x27, ge  // ge = tcont
   372e8:	adds	x1, x0, x1
   372ec:	sub	x4, x2, #0x1
   372f0:	ldr	w2, [sp, #212]
   372f4:	csel	x1, x1, x21, pl  // pl = nfrst
   372f8:	ldr	x0, [sp, #360]
   372fc:	cmp	w2, #0x0
   37300:	add	x2, x1, #0x1
   37304:	ldr	x1, [sp, #200]
   37308:	sub	x2, x28, x2
   3730c:	cinc	x3, x1, eq  // eq = none
   37310:	asr	x1, x4, #6
   37314:	add	x1, x1, #0x1
   37318:	bl	c370 <mpfr_round_p@plt>
   3731c:	cbz	w0, 370fc <mpfr_powerof2_raw@@Base+0xe54>
   37320:	mov	x28, x25
   37324:	mov	x27, x23
   37328:	ldp	d8, d9, [sp, #96]
   3732c:	b	36ef0 <mpfr_powerof2_raw@@Base+0xc48>
   37330:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   37334:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   37338:	add	x2, x2, #0xeb0
   3733c:	add	x0, x0, #0xd70
   37340:	mov	w1, #0x1a5                 	// #421
   37344:	bl	cb40 <mpfr_assert_fail@plt>
   37348:	ldr	x2, [sp, #128]
   3734c:	mov	w3, #0x2                   	// #2
   37350:	ldr	x19, [sp, #144]
   37354:	mov	x1, x19
   37358:	mov	x0, x19
   3735c:	bl	bb70 <mpfr_sub@plt>
   37360:	mov	w1, #0x2                   	// #2
   37364:	mov	x0, x19
   37368:	bl	bca0 <mpfr_get_ui@plt>
   3736c:	cmp	x0, #0x3
   37370:	mov	x1, #0x3                   	// #3
   37374:	csel	x0, x0, x1, cs  // cs = hs, nlast
   37378:	str	x0, [sp, #168]
   3737c:	b	3678c <mpfr_powerof2_raw@@Base+0x4e4>
   37380:	ldr	x0, [sp, #144]
   37384:	mov	w3, #0x0                   	// #0
   37388:	mov	x2, #0xfffffffffffffff6    	// #-10
   3738c:	mov	x1, #0x8cd                 	// #2253
   37390:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   37394:	b	36744 <mpfr_powerof2_raw@@Base+0x49c>
   37398:	ldr	x0, [sp, #144]
   3739c:	mov	w3, #0x0                   	// #0
   373a0:	mov	x2, #0xfffffffffffffff6    	// #-10
   373a4:	mov	x1, #0x533                 	// #1331
   373a8:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   373ac:	b	36744 <mpfr_powerof2_raw@@Base+0x49c>
   373b0:	ldr	x0, [sp, #144]
   373b4:	mov	w3, #0x0                   	// #0
   373b8:	mov	x2, #0xfffffffffffffff6    	// #-10
   373bc:	mov	x1, #0x6cd                 	// #1741
   373c0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   373c4:	b	36744 <mpfr_powerof2_raw@@Base+0x49c>
   373c8:	mov	x0, #0x1                   	// #1
   373cc:	str	x0, [sp, #136]
   373d0:	ldp	x20, x21, [sp, #272]
   373d4:	b	36d48 <mpfr_powerof2_raw@@Base+0xaa0>
   373d8:	ldr	x1, [sp, #128]
   373dc:	mov	w2, #0x0                   	// #0
   373e0:	ldr	x0, [sp, #224]
   373e4:	add	x0, x0, #0x40
   373e8:	str	x0, [sp, #256]
   373ec:	bl	c400 <mpfr_sqr@plt>
   373f0:	b	36b68 <mpfr_powerof2_raw@@Base+0x8c0>
   373f4:	mov	x0, #0x2                   	// #2
   373f8:	str	x0, [sp, #264]
   373fc:	b	36a50 <mpfr_powerof2_raw@@Base+0x7a8>
   37400:	ldr	x0, [sp, #144]
   37404:	mov	x2, #0xffffffffffffffff    	// #-1
   37408:	mov	x1, #0x9                   	// #9
   3740c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   37410:	b	36744 <mpfr_powerof2_raw@@Base+0x49c>
   37414:	mov	x0, #0xe                   	// #14
   37418:	str	x0, [sp, #152]
   3741c:	b	366a8 <mpfr_powerof2_raw@@Base+0x400>
   37420:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   37424:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   37428:	add	x2, x2, #0xeb0
   3742c:	add	x0, x0, #0xd70
   37430:	mov	w1, #0x2b8                 	// #696
   37434:	stp	d8, d9, [sp, #96]
   37438:	bl	cb40 <mpfr_assert_fail@plt>
   3743c:	mov	x25, #0xf                   	// #15
   37440:	b	370c8 <mpfr_powerof2_raw@@Base+0xe20>
   37444:	ldr	x28, [sp, #144]
   37448:	ldr	x27, [sp, #216]
   3744c:	mov	x0, x28
   37450:	bl	c070 <mpfr_clear@plt>
   37454:	mov	x0, x24
   37458:	bl	c070 <mpfr_clear@plt>
   3745c:	mov	x0, x26
   37460:	bl	c070 <mpfr_clear@plt>
   37464:	mov	x0, x27
   37468:	bl	c070 <mpfr_clear@plt>
   3746c:	ldr	x0, [sp, #248]
   37470:	bl	c070 <mpfr_clear@plt>
   37474:	ldr	x5, [sp, #160]
   37478:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3747c:	ldr	x2, [x0, #2576]
   37480:	add	x0, x0, #0xa10
   37484:	blr	x2
   37488:	ldr	w1, [sp, #312]
   3748c:	ldr	x4, [sp, #320]
   37490:	str	w1, [x5, x0]
   37494:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   37498:	ldr	x3, [x0, #2512]
   3749c:	add	x0, x0, #0x9d0
   374a0:	blr	x3
   374a4:	str	x4, [x5, x0]
   374a8:	ldr	x3, [sp, #232]
   374ac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   374b0:	ldr	x6, [x0, #2544]
   374b4:	add	x0, x0, #0x9f0
   374b8:	blr	x6
   374bc:	ldr	x2, [sp, #328]
   374c0:	str	x2, [x5, x0]
   374c4:	ldr	x3, [x3, #16]
   374c8:	cmp	x3, x4
   374cc:	ccmp	x3, x2, #0x0, ge  // ge = tcont
   374d0:	b.gt	36f8c <mpfr_powerof2_raw@@Base+0xce4>
   374d4:	b	36fc4 <mpfr_powerof2_raw@@Base+0xd1c>
   374d8:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   374dc:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   374e0:	add	x2, x2, #0xa40
   374e4:	add	x0, x0, #0xd70
   374e8:	mov	w1, #0x14a                 	// #330
   374ec:	bl	cb40 <mpfr_assert_fail@plt>
   374f0:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   374f4:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   374f8:	add	x2, x2, #0xa40
   374fc:	add	x0, x0, #0xd70
   37500:	mov	w1, #0x1b0                 	// #432
   37504:	stp	d8, d9, [sp, #96]
   37508:	bl	cb40 <mpfr_assert_fail@plt>
   3750c:	nop

0000000000037510 <mpfr_gamma@@Base>:
   37510:	stp	x29, x30, [sp, #-448]!
   37514:	mov	x29, sp
   37518:	stp	x25, x26, [sp, #64]
   3751c:	mov	x26, x1
   37520:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   37524:	stp	x19, x20, [sp, #16]
   37528:	mov	w19, w2
   3752c:	ldr	x2, [x26, #16]
   37530:	stp	x21, x22, [sp, #32]
   37534:	stp	x27, x28, [sp, #80]
   37538:	cmp	x2, x1
   3753c:	mov	x27, x0
   37540:	b.le	37d2c <mpfr_gamma@@Base+0x81c>
   37544:	ldr	x0, [x26]
   37548:	ldr	x1, [x27]
   3754c:	cmp	x1, x0
   37550:	csel	x1, x1, x0, ge  // ge = tcont
   37554:	neg	x1, x1, lsl #1
   37558:	cmp	x2, x1
   3755c:	b.gt	376a8 <mpfr_gamma@@Base+0x198>
   37560:	mrs	x28, tpidr_el0
   37564:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   37568:	ldr	x1, [x0, #2576]
   3756c:	add	x0, x0, #0xa10
   37570:	blr	x1
   37574:	ldr	w20, [x26, #8]
   37578:	add	x22, x28, x0
   3757c:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   37580:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   37584:	ldr	w5, [x28, x0]
   37588:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3758c:	ldr	x1, [x0, #2512]
   37590:	add	x0, x0, #0x9d0
   37594:	blr	x1
   37598:	add	x1, x28, x0
   3759c:	str	w5, [sp, #152]
   375a0:	ldr	x5, [x28, x0]
   375a4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   375a8:	ldr	x6, [x0, #2544]
   375ac:	add	x0, x0, #0x9f0
   375b0:	blr	x6
   375b4:	cmp	w20, #0x0
   375b8:	str	x5, [sp, #160]
   375bc:	ldr	x5, [x28, x0]
   375c0:	cset	w21, gt
   375c4:	str	x4, [x28, x0]
   375c8:	cmp	w21, #0x0
   375cc:	str	x3, [x1]
   375d0:	mov	x0, #0x2                   	// #2
   375d4:	str	x5, [sp, #168]
   375d8:	movk	x0, #0xc000, lsl #48
   375dc:	ccmp	x2, x0, #0x0, ne  // ne = any
   375e0:	b.eq	37d60 <mpfr_gamma@@Base+0x850>  // b.none
   375e4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   375e8:	ldr	x1, [x0, #2576]
   375ec:	add	x0, x0, #0xa10
   375f0:	blr	x1
   375f4:	mov	x2, x26
   375f8:	mov	w3, w19
   375fc:	mov	x1, #0x1                   	// #1
   37600:	str	wzr, [x28, x0]
   37604:	mov	x0, x27
   37608:	bl	c2f0 <mpfr_ui_div@plt>
   3760c:	mov	w22, w0
   37610:	cbnz	w0, 37734 <mpfr_gamma@@Base+0x224>
   37614:	tst	w19, #0xfffffffd
   37618:	b.ne	37e6c <mpfr_gamma@@Base+0x95c>  // b.any
   3761c:	ldr	w1, [sp, #152]
   37620:	mov	w22, #0x1                   	// #1
   37624:	ldp	x3, x4, [sp, #160]
   37628:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3762c:	ldr	x2, [x0, #2576]
   37630:	add	x0, x0, #0xa10
   37634:	blr	x2
   37638:	add	x5, x28, x0
   3763c:	str	w1, [x28, x0]
   37640:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   37644:	ldr	x2, [x0, #2512]
   37648:	add	x0, x0, #0x9d0
   3764c:	blr	x2
   37650:	str	x3, [x28, x0]
   37654:	ldr	x2, [x27, #16]
   37658:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3765c:	ldr	x6, [x0, #2544]
   37660:	add	x0, x0, #0x9f0
   37664:	blr	x6
   37668:	str	x4, [x28, x0]
   3766c:	cmp	x4, x2
   37670:	ccmp	x3, x2, #0x0, ge  // ge = tcont
   37674:	b.le	37710 <mpfr_gamma@@Base+0x200>
   37678:	mov	w1, w22
   3767c:	mov	w2, w19
   37680:	mov	x0, x27
   37684:	bl	cb30 <mpfr_check_range@plt>
   37688:	mov	w22, w0
   3768c:	mov	w0, w22
   37690:	ldp	x19, x20, [sp, #16]
   37694:	ldp	x21, x22, [sp, #32]
   37698:	ldp	x25, x26, [sp, #64]
   3769c:	ldp	x27, x28, [sp, #80]
   376a0:	ldp	x29, x30, [sp], #448
   376a4:	ret
   376a8:	mov	x0, x26
   376ac:	stp	x23, x24, [sp, #48]
   376b0:	bl	c160 <mpfr_integer_p@plt>
   376b4:	cbz	w0, 379a4 <mpfr_gamma@@Base+0x494>
   376b8:	ldr	w0, [x26, #8]
   376bc:	tbnz	w0, #31, 37e04 <mpfr_gamma@@Base+0x8f4>
   376c0:	mov	x0, x26
   376c4:	mov	x2, #0x0                   	// #0
   376c8:	mov	x1, #0x1                   	// #1
   376cc:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   376d0:	mov	w20, w0
   376d4:	cbnz	w0, 37768 <mpfr_gamma@@Base+0x258>
   376d8:	mov	w3, w19
   376dc:	mov	x0, x27
   376e0:	mov	x2, #0x0                   	// #0
   376e4:	mov	x1, #0x1                   	// #1
   376e8:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   376ec:	mov	w22, w0
   376f0:	mov	w0, w22
   376f4:	ldp	x19, x20, [sp, #16]
   376f8:	ldp	x21, x22, [sp, #32]
   376fc:	ldp	x23, x24, [sp, #48]
   37700:	ldp	x25, x26, [sp, #64]
   37704:	ldp	x27, x28, [sp, #80]
   37708:	ldp	x29, x30, [sp], #448
   3770c:	ret
   37710:	orr	w1, w1, #0x8
   37714:	str	w1, [x5]
   37718:	mov	w0, w22
   3771c:	ldp	x19, x20, [sp, #16]
   37720:	ldp	x21, x22, [sp, #32]
   37724:	ldp	x25, x26, [sp, #64]
   37728:	ldp	x27, x28, [sp, #80]
   3772c:	ldp	x29, x30, [sp], #448
   37730:	ret
   37734:	mov	w20, #0x0                   	// #0
   37738:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3773c:	ldr	x1, [x0, #2576]
   37740:	add	x0, x0, #0xa10
   37744:	blr	x1
   37748:	ldr	w0, [x28, x0]
   3774c:	eor	w20, w20, #0x1
   37750:	ldr	w1, [sp, #152]
   37754:	tst	w20, w0, lsr #1
   37758:	b.eq	37624 <mpfr_gamma@@Base+0x114>  // b.none
   3775c:	orr	w1, w1, w0
   37760:	str	w1, [sp, #152]
   37764:	b	37624 <mpfr_gamma@@Base+0x114>
   37768:	mov	x0, x26
   3776c:	mov	w1, #0x0                   	// #0
   37770:	bl	be50 <mpfr_fits_ulong_p@plt>
   37774:	cbnz	w0, 37ed0 <mpfr_gamma@@Base+0x9c0>
   37778:	mrs	x28, tpidr_el0
   3777c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   37780:	ldr	x1, [x0, #2576]
   37784:	add	x0, x0, #0xa10
   37788:	blr	x1
   3778c:	ldr	w24, [x28, x0]
   37790:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   37794:	ldr	x1, [x0, #2512]
   37798:	add	x0, x0, #0x9d0
   3779c:	blr	x1
   377a0:	ldr	x22, [x28, x0]
   377a4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   377a8:	ldr	x1, [x0, #2544]
   377ac:	add	x0, x0, #0x9f0
   377b0:	blr	x1
   377b4:	ldr	x21, [x28, x0]
   377b8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   377bc:	ldr	x1, [x0, #2512]
   377c0:	add	x0, x0, #0x9d0
   377c4:	blr	x1
   377c8:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   377cc:	str	x1, [x28, x0]
   377d0:	add	x4, x28, x0
   377d4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   377d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   377dc:	ldr	x2, [x0, #2544]
   377e0:	add	x0, x0, #0x9f0
   377e4:	blr	x2
   377e8:	str	x1, [x28, x0]
   377ec:	str	w24, [sp, #152]
   377f0:	cmp	w20, #0x0
   377f4:	stp	x22, x21, [sp, #160]
   377f8:	add	x3, x28, x0
   377fc:	b.le	379c0 <mpfr_gamma@@Base+0x4b0>
   37800:	ldr	x0, [x26, #16]
   37804:	cmp	x0, #0x19
   37808:	b.le	37e40 <mpfr_gamma@@Base+0x930>
   3780c:	add	x4, sp, #0x140
   37810:	add	x5, sp, #0x148
   37814:	add	x3, sp, #0x150
   37818:	mov	x2, #0x35                  	// #53
   3781c:	add	x22, sp, #0x110
   37820:	add	x20, sp, #0xb0
   37824:	mov	w21, #0x1                   	// #1
   37828:	mov	x0, x22
   3782c:	adrp	x1, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   37830:	add	x1, x1, #0xde0
   37834:	str	x2, [sp, #176]
   37838:	add	x23, sp, #0xf0
   3783c:	str	w21, [sp, #184]
   37840:	str	x4, [sp, #200]
   37844:	str	x2, [sp, #240]
   37848:	str	w21, [sp, #248]
   3784c:	stp	x5, x2, [sp, #264]
   37850:	str	w21, [sp, #280]
   37854:	stp	x3, xzr, [sp, #296]
   37858:	str	x4, [sp, #312]
   3785c:	bl	c340 <mpfr_set_str_binary@plt>
   37860:	mov	w3, w21
   37864:	mov	x2, x22
   37868:	mov	x0, x20
   3786c:	mov	x1, x26
   37870:	bl	bd50 <mpfr_mul@plt>
   37874:	mov	w3, w21
   37878:	mov	x1, x26
   3787c:	mov	x2, #0x2                   	// #2
   37880:	mov	x0, x23
   37884:	bl	c530 <mpfr_sub_ui@plt>
   37888:	mov	w3, w21
   3788c:	mov	x1, x20
   37890:	mov	x2, x23
   37894:	mov	x0, x20
   37898:	bl	bd90 <mpfr_pow@plt>
   3789c:	mov	w3, w21
   378a0:	mov	x1, x20
   378a4:	mov	x2, x22
   378a8:	mov	x0, x20
   378ac:	bl	bd50 <mpfr_mul@plt>
   378b0:	mov	w3, w21
   378b4:	mov	x1, x20
   378b8:	mov	x2, x22
   378bc:	mov	x0, x20
   378c0:	bl	bd50 <mpfr_mul@plt>
   378c4:	mov	x1, x20
   378c8:	mov	w3, w21
   378cc:	mov	x2, x26
   378d0:	mov	x0, x20
   378d4:	bl	bd50 <mpfr_mul@plt>
   378d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   378dc:	ldr	x1, [x0, #2576]
   378e0:	add	x0, x0, #0xa10
   378e4:	blr	x1
   378e8:	mov	w3, w21
   378ec:	mov	x1, x20
   378f0:	add	x21, x28, x0
   378f4:	mov	x2, #0x1                   	// #1
   378f8:	str	wzr, [x28, x0]
   378fc:	mov	x0, x20
   37900:	bl	c2c0 <mpfr_mul_2ui@plt>
   37904:	ldr	x1, [sp, #304]
   37908:	ldr	w21, [x21]
   3790c:	ldr	x20, [sp, #192]
   37910:	cbz	x1, 3791c <mpfr_gamma@@Base+0x40c>
   37914:	ldr	x0, [sp, #312]
   37918:	bl	cc20 <mpfr_free_func@plt>
   3791c:	ldr	w1, [sp, #152]
   37920:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   37924:	ldr	x2, [x0, #2576]
   37928:	add	x0, x0, #0xa10
   3792c:	blr	x2
   37930:	str	w1, [x28, x0]
   37934:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   37938:	ldr	x1, [x0, #2512]
   3793c:	add	x0, x0, #0x9d0
   37940:	blr	x1
   37944:	ldr	x1, [sp, #160]
   37948:	str	x1, [x28, x0]
   3794c:	ldr	x1, [sp, #168]
   37950:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   37954:	ldr	x2, [x0, #2544]
   37958:	add	x0, x0, #0x9f0
   3795c:	blr	x2
   37960:	str	x1, [x28, x0]
   37964:	tst	x21, #0x2
   37968:	ccmp	x1, x20, #0x1, eq  // eq = none
   3796c:	b.lt	383ec <mpfr_gamma@@Base+0xedc>  // b.tstop
   37970:	mov	w2, w19
   37974:	mov	x1, x26
   37978:	mov	x0, x27
   3797c:	bl	36568 <mpfr_powerof2_raw@@Base+0x2c0>
   37980:	mov	w22, w0
   37984:	mov	w0, w22
   37988:	ldp	x19, x20, [sp, #16]
   3798c:	ldp	x21, x22, [sp, #32]
   37990:	ldp	x23, x24, [sp, #48]
   37994:	ldp	x25, x26, [sp, #64]
   37998:	ldp	x27, x28, [sp, #80]
   3799c:	ldp	x29, x30, [sp], #448
   379a0:	ret
   379a4:	mov	x0, x26
   379a8:	mov	x2, #0x0                   	// #0
   379ac:	mov	x1, #0x1                   	// #1
   379b0:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   379b4:	mov	w20, w0
   379b8:	cbnz	w0, 37778 <mpfr_gamma@@Base+0x268>
   379bc:	b	376d8 <mpfr_gamma@@Base+0x1c8>
   379c0:	ldr	w0, [x26, #8]
   379c4:	tbnz	w0, #31, 3816c <mpfr_gamma@@Base+0xc5c>
   379c8:	cmp	w0, #0x0
   379cc:	ldr	x0, [x26]
   379d0:	ldr	x2, [x26, #16]
   379d4:	ldr	x21, [x27]
   379d8:	sub	x1, x0, x2
   379dc:	b.gt	379ec <mpfr_gamma@@Base+0x4dc>
   379e0:	cmp	x2, #0x0
   379e4:	add	x1, x0, #0x1
   379e8:	b.le	38104 <mpfr_gamma@@Base+0xbf4>
   379ec:	cmp	x21, x1
   379f0:	add	x9, x0, #0x1
   379f4:	csel	x21, x21, x1, ge  // ge = tcont
   379f8:	cmp	x2, #0x1
   379fc:	b.le	38110 <mpfr_gamma@@Base+0xc00>
   37a00:	cmp	x21, x9
   37a04:	csel	x21, x21, x9, ge  // ge = tcont
   37a08:	cmp	x21, #0x1
   37a0c:	b.eq	3832c <mpfr_gamma@@Base+0xe1c>  // b.none
   37a10:	b.le	38408 <mpfr_gamma@@Base+0xef8>
   37a14:	sub	x9, x21, #0x1
   37a18:	mov	w0, #0x40                  	// #64
   37a1c:	clz	x9, x9
   37a20:	mov	x2, #0x7fffffffffffff00    	// #9223372036854775552
   37a24:	sub	w9, w0, w9
   37a28:	add	x21, x21, w9, sxtw
   37a2c:	add	x1, x21, #0x13
   37a30:	add	x25, x21, #0x14
   37a34:	clz	x1, x1
   37a38:	sub	w0, w0, w1
   37a3c:	add	x0, x25, w0, sxtw
   37a40:	add	x22, x0, #0x14
   37a44:	cmp	x22, x2
   37a48:	b.ge	37e00 <mpfr_gamma@@Base+0x8f0>  // b.tcont
   37a4c:	add	x21, x0, #0x13
   37a50:	asr	x21, x21, #6
   37a54:	add	x21, x21, #0x1
   37a58:	lsl	x0, x21, #2
   37a5c:	cmp	x0, #0x10
   37a60:	b.gt	3811c <mpfr_gamma@@Base+0xc0c>
   37a64:	add	x0, sp, #0x140
   37a68:	stp	xzr, x0, [sp, #304]
   37a6c:	mov	x1, x0
   37a70:	add	x2, x21, x21, lsl #1
   37a74:	add	x3, x1, x21, lsl #3
   37a78:	mov	w20, #0x1                   	// #1
   37a7c:	add	x0, sp, #0x88
   37a80:	add	x2, x1, x2, lsl #3
   37a84:	add	x21, x1, x21, lsl #4
   37a88:	str	x0, [sp, #112]
   37a8c:	str	x22, [sp, #176]
   37a90:	str	w20, [sp, #184]
   37a94:	stp	x1, x22, [sp, #200]
   37a98:	str	w20, [sp, #216]
   37a9c:	stp	x2, x22, [sp, #232]
   37aa0:	str	w20, [sp, #248]
   37aa4:	stp	x3, x22, [sp, #264]
   37aa8:	str	w20, [sp, #280]
   37aac:	str	x21, [sp, #296]
   37ab0:	bl	bf90 <mpfr_mpz_init@plt>
   37ab4:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   37ab8:	cmp	x25, x0
   37abc:	ldr	x1, [sp, #304]
   37ac0:	b.ge	37e00 <mpfr_gamma@@Base+0x8f0>  // b.tcont
   37ac4:	add	x0, sp, #0xf0
   37ac8:	add	x23, sp, #0x110
   37acc:	add	x21, sp, #0xb0
   37ad0:	add	x24, sp, #0xd0
   37ad4:	str	x0, [sp, #96]
   37ad8:	add	x0, sp, #0x98
   37adc:	str	x0, [sp, #120]
   37ae0:	mov	x0, #0x40                  	// #64
   37ae4:	str	x0, [sp, #104]
   37ae8:	sub	x22, x25, #0x1
   37aec:	asr	x22, x22, #6
   37af0:	add	x22, x22, #0x1
   37af4:	lsl	x2, x22, #5
   37af8:	str	x2, [sp, #304]
   37afc:	cbnz	x1, 37d1c <mpfr_gamma@@Base+0x80c>
   37b00:	mov	x0, x2
   37b04:	bl	ccf0 <mpfr_allocate_func@plt>
   37b08:	str	x0, [sp, #312]
   37b0c:	add	x4, x22, x22, lsl #1
   37b10:	add	x5, x0, x22, lsl #3
   37b14:	mov	w3, #0x0                   	// #0
   37b18:	add	x22, x0, x22, lsl #4
   37b1c:	add	x4, x0, x4, lsl #3
   37b20:	mov	x2, x26
   37b24:	mov	x1, #0x2                   	// #2
   37b28:	str	x25, [sp, #176]
   37b2c:	str	w20, [sp, #184]
   37b30:	stp	x0, x25, [sp, #200]
   37b34:	mov	x0, x21
   37b38:	str	w20, [sp, #216]
   37b3c:	stp	x4, x25, [sp, #232]
   37b40:	str	w20, [sp, #248]
   37b44:	stp	x5, x25, [sp, #264]
   37b48:	str	w20, [sp, #280]
   37b4c:	str	x22, [sp, #296]
   37b50:	bl	ca50 <mpfr_ui_sub@plt>
   37b54:	ldr	x0, [sp, #96]
   37b58:	mov	x1, x21
   37b5c:	mov	w2, #0x0                   	// #0
   37b60:	bl	37510 <mpfr_gamma@@Base>
   37b64:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   37b68:	ldr	x1, [x0, #2624]
   37b6c:	add	x0, x0, #0xa40
   37b70:	blr	x1
   37b74:	mov	w2, #0x0                   	// #0
   37b78:	add	x1, x28, x0
   37b7c:	mov	x0, x23
   37b80:	bl	c380 <mpfr_cache@plt>
   37b84:	mov	w3, #0x0                   	// #0
   37b88:	mov	x2, x21
   37b8c:	mov	x1, x23
   37b90:	mov	x0, x24
   37b94:	bl	bd50 <mpfr_mul@plt>
   37b98:	mov	x1, x24
   37b9c:	mov	x0, x24
   37ba0:	mov	w2, #0x0                   	// #0
   37ba4:	ldr	x22, [sp, #224]
   37ba8:	bl	c450 <mpfr_sin@plt>
   37bac:	ldr	x0, [sp, #256]
   37bb0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   37bb4:	cmp	x0, x1
   37bb8:	b.eq	37da0 <mpfr_gamma@@Base+0x890>  // b.none
   37bbc:	ldr	x0, [sp, #224]
   37bc0:	add	x22, x22, #0x1
   37bc4:	mov	x1, x26
   37bc8:	mov	w3, #0x0                   	// #0
   37bcc:	sub	x22, x22, x0
   37bd0:	mov	x2, #0x1                   	// #1
   37bd4:	mov	x0, x21
   37bd8:	bl	c530 <mpfr_sub_ui@plt>
   37bdc:	mov	x2, x21
   37be0:	mov	x1, x23
   37be4:	mov	w3, #0x0                   	// #0
   37be8:	mov	x0, x21
   37bec:	bl	bd50 <mpfr_mul@plt>
   37bf0:	ldr	x2, [sp, #96]
   37bf4:	mov	x1, x24
   37bf8:	mov	w3, #0x0                   	// #0
   37bfc:	mov	x0, x24
   37c00:	bl	bd50 <mpfr_mul@plt>
   37c04:	mov	x1, x21
   37c08:	mov	x2, x24
   37c0c:	mov	x0, x24
   37c10:	mov	w3, #0x0                   	// #0
   37c14:	bl	c620 <mpfr_div@plt>
   37c18:	ldr	x0, [sp, #224]
   37c1c:	cmp	x22, #0x2
   37c20:	mov	x1, #0x2                   	// #2
   37c24:	csel	x22, x22, x1, ge  // ge = tcont
   37c28:	add	x22, x22, #0x4
   37c2c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   37c30:	cmp	x0, x1
   37c34:	b.le	37dc4 <mpfr_gamma@@Base+0x8b4>
   37c38:	ldr	x1, [sp, #208]
   37c3c:	cmp	w19, #0x0
   37c40:	ldr	x0, [sp, #232]
   37c44:	sub	x1, x1, #0x1
   37c48:	ldr	x3, [x27]
   37c4c:	asr	x1, x1, #6
   37c50:	sub	x2, x25, x22
   37c54:	add	x1, x1, #0x1
   37c58:	cinc	x3, x3, eq  // eq = none
   37c5c:	bl	c370 <mpfr_round_p@plt>
   37c60:	cbz	w0, 37dc4 <mpfr_gamma@@Base+0x8b4>
   37c64:	ldr	w3, [sp, #216]
   37c68:	mov	x1, x24
   37c6c:	mov	w2, w19
   37c70:	mov	x0, x27
   37c74:	bl	c6a0 <mpfr_set4@plt>
   37c78:	mov	w22, w0
   37c7c:	ldr	x1, [sp, #304]
   37c80:	cbz	x1, 37c8c <mpfr_gamma@@Base+0x77c>
   37c84:	ldr	x0, [sp, #312]
   37c88:	bl	cc20 <mpfr_free_func@plt>
   37c8c:	ldr	x0, [sp, #112]
   37c90:	bl	c170 <mpfr_mpz_clear@plt>
   37c94:	ldp	x3, x4, [sp, #160]
   37c98:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   37c9c:	ldr	x2, [x0, #2576]
   37ca0:	add	x0, x0, #0xa10
   37ca4:	blr	x2
   37ca8:	ldr	w1, [sp, #152]
   37cac:	add	x5, x28, x0
   37cb0:	str	w1, [x28, x0]
   37cb4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   37cb8:	ldr	x2, [x0, #2512]
   37cbc:	add	x0, x0, #0x9d0
   37cc0:	blr	x2
   37cc4:	ldr	x2, [x27, #16]
   37cc8:	str	x3, [x28, x0]
   37ccc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   37cd0:	ldr	x6, [x0, #2544]
   37cd4:	add	x0, x0, #0x9f0
   37cd8:	blr	x6
   37cdc:	str	x4, [x28, x0]
   37ce0:	cmp	x4, x2
   37ce4:	ccmp	x3, x2, #0x0, ge  // ge = tcont
   37ce8:	b.le	37d08 <mpfr_gamma@@Base+0x7f8>
   37cec:	mov	w1, w22
   37cf0:	mov	w2, w19
   37cf4:	mov	x0, x27
   37cf8:	bl	cb30 <mpfr_check_range@plt>
   37cfc:	mov	w22, w0
   37d00:	ldp	x23, x24, [sp, #48]
   37d04:	b	3768c <mpfr_gamma@@Base+0x17c>
   37d08:	cbz	w22, 37e64 <mpfr_gamma@@Base+0x954>
   37d0c:	orr	w1, w1, #0x8
   37d10:	ldp	x23, x24, [sp, #48]
   37d14:	str	w1, [x5]
   37d18:	b	3768c <mpfr_gamma@@Base+0x17c>
   37d1c:	ldr	x0, [sp, #312]
   37d20:	bl	c1c0 <mpfr_reallocate_func@plt>
   37d24:	str	x0, [sp, #312]
   37d28:	b	37b0c <mpfr_gamma@@Base+0x5fc>
   37d2c:	mov	x0, #0x2                   	// #2
   37d30:	movk	x0, #0x8000, lsl #48
   37d34:	cmp	x2, x0
   37d38:	b.eq	38134 <mpfr_gamma@@Base+0xc24>  // b.none
   37d3c:	cmp	x2, x1
   37d40:	b.ne	37e98 <mpfr_gamma@@Base+0x988>  // b.any
   37d44:	ldr	w0, [x26, #8]
   37d48:	tbnz	w0, #31, 38134 <mpfr_gamma@@Base+0xc24>
   37d4c:	mov	w0, #0x1                   	// #1
   37d50:	mov	w22, #0x0                   	// #0
   37d54:	str	w0, [x27, #8]
   37d58:	str	x2, [x27, #16]
   37d5c:	b	3768c <mpfr_gamma@@Base+0x17c>
   37d60:	and	w0, w19, #0xfffffffd
   37d64:	cmp	w0, #0x1
   37d68:	b.ne	375e4 <mpfr_gamma@@Base+0xd4>  // b.any
   37d6c:	mov	x0, x26
   37d70:	bl	bf00 <mpfr_powerof2_raw@plt>
   37d74:	cmp	w0, #0x0
   37d78:	mov	x2, x26
   37d7c:	mov	w3, w19
   37d80:	cset	w20, ne  // ne = any
   37d84:	mov	x0, x27
   37d88:	mov	x1, #0x1                   	// #1
   37d8c:	str	wzr, [x22]
   37d90:	bl	c2f0 <mpfr_ui_div@plt>
   37d94:	mov	w22, w0
   37d98:	cbz	w0, 37e78 <mpfr_gamma@@Base+0x968>
   37d9c:	b	37738 <mpfr_gamma@@Base+0x228>
   37da0:	ldr	x3, [sp, #96]
   37da4:	mov	w5, w19
   37da8:	ldr	x2, [sp, #120]
   37dac:	mov	x4, x23
   37db0:	mov	x1, x26
   37db4:	mov	x0, x27
   37db8:	bl	362c0 <mpfr_powerof2_raw@@Base+0x18>
   37dbc:	mov	w22, w0
   37dc0:	cbnz	w0, 37c7c <mpfr_gamma@@Base+0x76c>
   37dc4:	ldr	x1, [sp, #104]
   37dc8:	mov	x0, #0xfffffffffffffeff    	// #-257
   37dcc:	movk	x0, #0x7fff, lsl #48
   37dd0:	sub	x0, x0, x25
   37dd4:	cmp	x0, x1
   37dd8:	b.lt	38338 <mpfr_gamma@@Base+0xe28>  // b.tstop
   37ddc:	ldr	x0, [sp, #104]
   37de0:	ldr	x1, [sp, #304]
   37de4:	add	x25, x25, x0
   37de8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   37dec:	cmp	x25, x0
   37df0:	add	x0, x25, x25, lsr #63
   37df4:	asr	x0, x0, #1
   37df8:	str	x0, [sp, #104]
   37dfc:	b.lt	37ae8 <mpfr_gamma@@Base+0x5d8>  // b.tstop
   37e00:	bl	c8e0 <mpfr_abort_prec_max@plt>
   37e04:	mrs	x1, tpidr_el0
   37e08:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   37e0c:	ldr	x2, [x0, #2576]
   37e10:	add	x0, x0, #0xa10
   37e14:	blr	x2
   37e18:	add	x0, x1, x0
   37e1c:	mov	x1, #0x2                   	// #2
   37e20:	movk	x1, #0x8000, lsl #48
   37e24:	mov	w22, #0x0                   	// #0
   37e28:	ldp	x23, x24, [sp, #48]
   37e2c:	str	x1, [x27, #16]
   37e30:	ldr	w1, [x0]
   37e34:	orr	w1, w1, #0x4
   37e38:	str	w1, [x0]
   37e3c:	b	3768c <mpfr_gamma@@Base+0x17c>
   37e40:	mov	w2, w19
   37e44:	mov	x1, x26
   37e48:	mov	x0, x27
   37e4c:	str	x22, [x4]
   37e50:	str	x21, [x3]
   37e54:	bl	36568 <mpfr_powerof2_raw@@Base+0x2c0>
   37e58:	mov	w22, w0
   37e5c:	ldp	x23, x24, [sp, #48]
   37e60:	b	3768c <mpfr_gamma@@Base+0x17c>
   37e64:	ldp	x23, x24, [sp, #48]
   37e68:	b	3768c <mpfr_gamma@@Base+0x17c>
   37e6c:	cmp	w20, #0x0
   37e70:	ccmp	w19, #0x1, #0x0, lt  // lt = tstop
   37e74:	b.eq	3761c <mpfr_gamma@@Base+0x10c>  // b.none
   37e78:	cmp	w21, #0x0
   37e7c:	ccmp	w19, #0x4, #0x0, ne  // ne = any
   37e80:	b.eq	3761c <mpfr_gamma@@Base+0x10c>  // b.none
   37e84:	mov	x0, x27
   37e88:	bl	bdd0 <mpfr_nextbelow@plt>
   37e8c:	ldr	w1, [sp, #152]
   37e90:	mov	w22, #0xffffffff            	// #-1
   37e94:	b	37624 <mpfr_gamma@@Base+0x114>
   37e98:	mrs	x2, tpidr_el0
   37e9c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   37ea0:	ldr	x3, [x0, #2576]
   37ea4:	add	x0, x0, #0xa10
   37ea8:	blr	x3
   37eac:	add	x0, x2, x0
   37eb0:	ldr	w2, [x26, #8]
   37eb4:	str	x1, [x27, #16]
   37eb8:	mov	w22, #0x0                   	// #0
   37ebc:	str	w2, [x27, #8]
   37ec0:	ldr	w1, [x0]
   37ec4:	orr	w1, w1, #0x20
   37ec8:	str	w1, [x0]
   37ecc:	b	3768c <mpfr_gamma@@Base+0x17c>
   37ed0:	ldr	x2, [x27]
   37ed4:	mov	w1, #0x0                   	// #0
   37ed8:	mov	x0, x26
   37edc:	str	x2, [sp, #96]
   37ee0:	mrs	x28, tpidr_el0
   37ee4:	bl	bca0 <mpfr_get_ui@plt>
   37ee8:	mov	x2, x0
   37eec:	mov	x1, #0x68d8                	// #26840
   37ef0:	movk	x1, #0x2ab, lsl #16
   37ef4:	cmp	x0, x1
   37ef8:	b.hi	3777c <mpfr_gamma@@Base+0x26c>  // b.pmore
   37efc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   37f00:	ldr	x1, [x0, #2576]
   37f04:	add	x0, x0, #0xa10
   37f08:	blr	x1
   37f0c:	ldr	w24, [x28, x0]
   37f10:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   37f14:	ldr	x1, [x0, #2512]
   37f18:	add	x0, x0, #0x9d0
   37f1c:	blr	x1
   37f20:	add	x3, x28, x0
   37f24:	ldr	x22, [x28, x0]
   37f28:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   37f2c:	ldr	x5, [x0, #2544]
   37f30:	add	x0, x0, #0x9f0
   37f34:	blr	x5
   37f38:	add	x5, sp, #0x130
   37f3c:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   37f40:	sub	x25, x2, #0x1
   37f44:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   37f48:	add	x23, sp, #0x110
   37f4c:	mov	x1, #0x26                  	// #38
   37f50:	str	x4, [x3]
   37f54:	str	x5, [sp, #104]
   37f58:	ldr	x21, [x28, x0]
   37f5c:	str	x2, [x28, x0]
   37f60:	mov	x0, x23
   37f64:	bl	ca80 <mpfr_init2@plt>
   37f68:	ldr	x5, [sp, #104]
   37f6c:	mov	x1, #0x26                  	// #38
   37f70:	mov	x0, x5
   37f74:	bl	ca80 <mpfr_init2@plt>
   37f78:	mov	w3, #0x1                   	// #1
   37f7c:	mov	x2, #0x0                   	// #0
   37f80:	mov	x1, x25
   37f84:	mov	x0, x23
   37f88:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   37f8c:	ldr	x5, [sp, #104]
   37f90:	adrp	x1, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   37f94:	add	x1, x1, #0xdb8
   37f98:	mov	x0, x5
   37f9c:	bl	c340 <mpfr_set_str_binary@plt>
   37fa0:	ldr	x5, [sp, #104]
   37fa4:	mov	x1, x23
   37fa8:	mov	w3, #0x1                   	// #1
   37fac:	mov	x0, x23
   37fb0:	mov	x2, x5
   37fb4:	bl	c620 <mpfr_div@plt>
   37fb8:	mov	x1, x23
   37fbc:	mov	w3, #0x1                   	// #1
   37fc0:	mov	x2, x25
   37fc4:	mov	x0, x23
   37fc8:	bl	bf70 <mpfr_pow_ui@plt>
   37fcc:	ldr	x5, [sp, #104]
   37fd0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   37fd4:	ldr	x1, [x0, #2624]
   37fd8:	add	x0, x0, #0xa40
   37fdc:	blr	x1
   37fe0:	mov	w2, #0x1                   	// #1
   37fe4:	add	x1, x28, x0
   37fe8:	mov	x0, x5
   37fec:	bl	c380 <mpfr_cache@plt>
   37ff0:	ldr	x5, [sp, #104]
   37ff4:	mov	w3, #0x1                   	// #1
   37ff8:	lsl	x2, x25, #1
   37ffc:	mov	x1, x5
   38000:	mov	x0, x5
   38004:	bl	ba50 <mpfr_mul_ui@plt>
   38008:	ldr	x5, [sp, #104]
   3800c:	mov	w2, #0x1                   	// #1
   38010:	mov	x1, x5
   38014:	mov	x0, x5
   38018:	bl	c930 <mpfr_sqrt@plt>
   3801c:	ldr	x5, [sp, #104]
   38020:	mov	w3, #0x1                   	// #1
   38024:	mov	x1, x23
   38028:	mov	x0, x23
   3802c:	mov	x2, x5
   38030:	bl	bd50 <mpfr_mul@plt>
   38034:	mov	w2, #0x1                   	// #1
   38038:	mov	x1, x23
   3803c:	mov	x0, x23
   38040:	bl	c1d0 <mpfr_log2@plt>
   38044:	mov	x0, x23
   38048:	mov	w1, #0x2                   	// #2
   3804c:	bl	bca0 <mpfr_get_ui@plt>
   38050:	mov	x2, x0
   38054:	cmp	x25, #0x1
   38058:	ldr	x5, [sp, #104]
   3805c:	b.eq	38080 <mpfr_gamma@@Base+0xb70>  // b.none
   38060:	lsr	x0, x25, #1
   38064:	mov	x1, #0x2                   	// #2
   38068:	b	38070 <mpfr_gamma@@Base+0xb60>
   3806c:	udiv	x0, x25, x1
   38070:	lsl	x1, x1, #1
   38074:	sub	x2, x2, x0
   38078:	cmp	x25, x1
   3807c:	b.cs	3806c <mpfr_gamma@@Base+0xb5c>  // b.hs, b.nlast
   38080:	mov	x0, x23
   38084:	stp	x2, x5, [sp, #104]
   38088:	bl	c070 <mpfr_clear@plt>
   3808c:	ldr	x5, [sp, #112]
   38090:	mov	x0, x5
   38094:	bl	c070 <mpfr_clear@plt>
   38098:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3809c:	ldr	x1, [x0, #2576]
   380a0:	add	x0, x0, #0xa10
   380a4:	blr	x1
   380a8:	str	w24, [x28, x0]
   380ac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   380b0:	ldr	x1, [x0, #2512]
   380b4:	add	x0, x0, #0x9d0
   380b8:	blr	x1
   380bc:	str	x22, [x28, x0]
   380c0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   380c4:	ldr	x1, [x0, #2544]
   380c8:	add	x0, x0, #0x9f0
   380cc:	blr	x1
   380d0:	str	x21, [x28, x0]
   380d4:	ldp	x0, x2, [sp, #96]
   380d8:	cmp	w19, #0x0
   380dc:	cinc	x0, x0, eq  // eq = none
   380e0:	cmp	x0, x2
   380e4:	b.cc	377b8 <mpfr_gamma@@Base+0x2a8>  // b.lo, b.ul, b.last
   380e8:	mov	w2, w19
   380ec:	mov	x1, x25
   380f0:	mov	x0, x27
   380f4:	bl	c6e0 <mpfr_fac_ui@plt>
   380f8:	mov	w22, w0
   380fc:	ldp	x23, x24, [sp, #48]
   38100:	b	3768c <mpfr_gamma@@Base+0x17c>
   38104:	sub	x1, x1, x2
   38108:	cmp	x1, x21
   3810c:	csel	x21, x1, x21, ge  // ge = tcont
   38110:	add	x0, x0, #0x2
   38114:	sub	x9, x0, x2
   38118:	b	37a00 <mpfr_gamma@@Base+0x4f0>
   3811c:	lsl	x0, x21, #5
   38120:	str	x0, [sp, #304]
   38124:	bl	ccf0 <mpfr_allocate_func@plt>
   38128:	mov	x1, x0
   3812c:	str	x0, [sp, #312]
   38130:	b	37a70 <mpfr_gamma@@Base+0x560>
   38134:	mrs	x1, tpidr_el0
   38138:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3813c:	ldr	x2, [x0, #2576]
   38140:	add	x0, x0, #0xa10
   38144:	blr	x2
   38148:	add	x0, x1, x0
   3814c:	mov	x1, #0x2                   	// #2
   38150:	movk	x1, #0x8000, lsl #48
   38154:	str	x1, [x27, #16]
   38158:	mov	w22, #0x0                   	// #0
   3815c:	ldr	w1, [x0]
   38160:	orr	w1, w1, #0x4
   38164:	str	w1, [x0]
   38168:	b	3768c <mpfr_gamma@@Base+0x17c>
   3816c:	add	x21, sp, #0xb0
   38170:	add	x22, sp, #0xf0
   38174:	mov	x0, x21
   38178:	mov	x1, #0x35                  	// #53
   3817c:	str	x22, [sp, #96]
   38180:	bl	ca80 <mpfr_init2@plt>
   38184:	add	x23, sp, #0x110
   38188:	mov	x0, x22
   3818c:	mov	x1, #0x35                  	// #53
   38190:	bl	ca80 <mpfr_init2@plt>
   38194:	mov	x0, x23
   38198:	mov	x1, #0x35                  	// #53
   3819c:	bl	ca80 <mpfr_init2@plt>
   381a0:	mov	w3, #0x3                   	// #3
   381a4:	mov	x2, x26
   381a8:	mov	x1, #0x2                   	// #2
   381ac:	mov	x0, x21
   381b0:	bl	ca50 <mpfr_ui_sub@plt>
   381b4:	mov	x1, x21
   381b8:	mov	w2, #0x3                   	// #3
   381bc:	mov	x0, x21
   381c0:	bl	c090 <mpfr_log@plt>
   381c4:	mov	x1, x21
   381c8:	mov	w3, #0x3                   	// #3
   381cc:	mov	x2, #0x1                   	// #1
   381d0:	mov	x0, x21
   381d4:	bl	c530 <mpfr_sub_ui@plt>
   381d8:	mov	w3, #0x2                   	// #2
   381dc:	mov	x1, x21
   381e0:	mov	x2, x26
   381e4:	mov	x0, x21
   381e8:	bl	bd50 <mpfr_mul@plt>
   381ec:	ldr	x1, [x26]
   381f0:	mov	x0, x22
   381f4:	ldr	x2, [x26, #16]
   381f8:	add	x20, x1, #0x2
   381fc:	cmp	x2, #0x1
   38200:	sub	x20, x20, x2
   38204:	csinc	x1, x20, x1, le
   38208:	add	x20, x1, #0x11
   3820c:	mov	x1, x20
   38210:	bl	bed0 <mpfr_set_prec@plt>
   38214:	mov	x1, x20
   38218:	mov	x0, x23
   3821c:	bl	bed0 <mpfr_set_prec@plt>
   38220:	mov	x1, #0x2                   	// #2
   38224:	mov	w3, #0x0                   	// #0
   38228:	mov	x2, x26
   3822c:	mov	x0, x22
   38230:	bl	ca50 <mpfr_ui_sub@plt>
   38234:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   38238:	ldr	x1, [x0, #2624]
   3823c:	add	x0, x0, #0xa40
   38240:	blr	x1
   38244:	mov	w2, #0x0                   	// #0
   38248:	add	x1, x28, x0
   3824c:	mov	x0, x23
   38250:	bl	c380 <mpfr_cache@plt>
   38254:	mov	w3, #0x0                   	// #0
   38258:	mov	x2, x22
   3825c:	mov	x1, x23
   38260:	mov	x0, x23
   38264:	bl	bd50 <mpfr_mul@plt>
   38268:	mov	x1, x23
   3826c:	mov	x0, x22
   38270:	mov	w2, #0x0                   	// #0
   38274:	bl	c450 <mpfr_sin@plt>
   38278:	ldr	x0, [sp, #256]
   3827c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   38280:	cmp	x0, x1
   38284:	b.ge	38324 <mpfr_gamma@@Base+0xe14>  // b.tcont
   38288:	mov	x1, #0x2                   	// #2
   3828c:	mov	w20, #0x0                   	// #0
   38290:	movk	x1, #0x8000, lsl #48
   38294:	cmp	x0, x1
   38298:	b.eq	383e4 <mpfr_gamma@@Base+0xed4>  // b.none
   3829c:	ldr	x22, [sp, #96]
   382a0:	mov	w3, #0x1                   	// #1
   382a4:	mov	w2, #0x0                   	// #0
   382a8:	mov	x1, x22
   382ac:	mov	x0, x22
   382b0:	bl	c6a0 <mpfr_set4@plt>
   382b4:	mov	x1, x23
   382b8:	mov	w3, #0x2                   	// #2
   382bc:	mov	x2, #0x3                   	// #3
   382c0:	mov	x0, x23
   382c4:	bl	ba50 <mpfr_mul_ui@plt>
   382c8:	mov	x1, x23
   382cc:	mov	w3, #0x2                   	// #2
   382d0:	mov	x2, #0x1                   	// #1
   382d4:	mov	x0, x23
   382d8:	bl	c260 <mpfr_add_ui@plt>
   382dc:	ldr	x2, [sp, #240]
   382e0:	mov	w3, #0x2                   	// #2
   382e4:	mov	x1, x23
   382e8:	mov	x0, x23
   382ec:	bl	c8f0 <mpfr_div_2ui@plt>
   382f0:	mov	x1, x22
   382f4:	mov	x0, x23
   382f8:	mov	w2, #0x1                   	// #1
   382fc:	bl	c9a0 <mpfr_cmp3@plt>
   38300:	tbnz	w0, #31, 38350 <mpfr_gamma@@Base+0xe40>
   38304:	mov	x0, x21
   38308:	bl	c070 <mpfr_clear@plt>
   3830c:	mov	x0, x22
   38310:	bl	c070 <mpfr_clear@plt>
   38314:	mov	x0, x23
   38318:	bl	c070 <mpfr_clear@plt>
   3831c:	ldr	w0, [x26, #8]
   38320:	b	379c8 <mpfr_gamma@@Base+0x4b8>
   38324:	ldr	w20, [sp, #248]
   38328:	b	3829c <mpfr_gamma@@Base+0xd8c>
   3832c:	mov	x22, #0x2e                  	// #46
   38330:	mov	x25, #0x15                  	// #21
   38334:	b	37a64 <mpfr_gamma@@Base+0x554>
   38338:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   3833c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38340:	add	x2, x2, #0x728
   38344:	add	x0, x0, #0xe28
   38348:	mov	w1, #0x1d2                 	// #466
   3834c:	bl	cb40 <mpfr_assert_fail@plt>
   38350:	ldr	x22, [sp, #96]
   38354:	mov	x2, x23
   38358:	mov	w3, #0x1                   	// #1
   3835c:	mov	x1, x22
   38360:	mov	x0, x22
   38364:	bl	bb70 <mpfr_sub@plt>
   38368:	mov	w3, #0x2                   	// #2
   3836c:	mov	x2, x22
   38370:	mov	x1, #0xc                   	// #12
   38374:	mov	x0, x22
   38378:	bl	c2f0 <mpfr_ui_div@plt>
   3837c:	mov	x1, x22
   38380:	mov	w2, #0x2                   	// #2
   38384:	mov	x0, x22
   38388:	bl	c1d0 <mpfr_log2@plt>
   3838c:	mov	w3, #0x2                   	// #2
   38390:	mov	x2, x21
   38394:	mov	x1, x22
   38398:	mov	x0, x21
   3839c:	bl	c1a0 <mpfr_add@plt>
   383a0:	ldr	x1, [sp, #160]
   383a4:	mov	x2, #0x0                   	// #0
   383a8:	mov	x0, x21
   383ac:	sub	x1, x1, #0x2
   383b0:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   383b4:	mov	w1, w0
   383b8:	mov	x0, x21
   383bc:	mov	w21, w1
   383c0:	bl	c070 <mpfr_clear@plt>
   383c4:	mov	x0, x22
   383c8:	bl	c070 <mpfr_clear@plt>
   383cc:	mov	x0, x23
   383d0:	bl	c070 <mpfr_clear@plt>
   383d4:	cmp	w21, #0x0
   383d8:	b.le	38420 <mpfr_gamma@@Base+0xf10>
   383dc:	ldr	w0, [x26, #8]
   383e0:	b	379c8 <mpfr_gamma@@Base+0x4b8>
   383e4:	bl	bc90 <mpfr_set_erangeflag@plt>
   383e8:	b	3829c <mpfr_gamma@@Base+0xd8c>
   383ec:	mov	w1, w19
   383f0:	mov	x0, x27
   383f4:	mov	w2, #0x1                   	// #1
   383f8:	bl	bf40 <mpfr_overflow@plt>
   383fc:	mov	w22, w0
   38400:	ldp	x23, x24, [sp, #48]
   38404:	b	3768c <mpfr_gamma@@Base+0x17c>
   38408:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   3840c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38410:	add	x2, x2, #0xe18
   38414:	add	x0, x0, #0xe28
   38418:	mov	w1, #0x18f                 	// #399
   3841c:	bl	cb40 <mpfr_assert_fail@plt>
   38420:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   38424:	ldr	x1, [x0, #2576]
   38428:	add	x0, x0, #0xa10
   3842c:	blr	x1
   38430:	neg	w2, w20
   38434:	ldr	w1, [sp, #152]
   38438:	str	w1, [x28, x0]
   3843c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   38440:	ldr	x1, [x0, #2512]
   38444:	add	x0, x0, #0x9d0
   38448:	blr	x1
   3844c:	ldp	x1, x3, [sp, #160]
   38450:	str	x1, [x28, x0]
   38454:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   38458:	ldr	x1, [x0, #2544]
   3845c:	add	x0, x0, #0x9f0
   38460:	blr	x1
   38464:	str	x3, [x28, x0]
   38468:	cmp	w19, #0x0
   3846c:	mov	x0, x27
   38470:	csinc	w1, w19, wzr, ne  // ne = any
   38474:	bl	c3c0 <mpfr_underflow@plt>
   38478:	mov	w22, w0
   3847c:	ldp	x23, x24, [sp, #48]
   38480:	b	3768c <mpfr_gamma@@Base+0x17c>
   38484:	nop

0000000000038488 <mpfr_set_ld@@Base>:
   38488:	stp	x29, x30, [sp, #-208]!
   3848c:	mov	x29, sp
   38490:	stp	x25, x26, [sp, #64]
   38494:	str	q0, [sp, #96]
   38498:	ldp	x26, x25, [sp, #96]
   3849c:	stp	x19, x20, [sp, #16]
   384a0:	str	x0, [sp, #112]
   384a4:	mov	w0, #0x7fff                	// #32767
   384a8:	str	w1, [sp, #120]
   384ac:	ubfx	x1, x25, #48, #15
   384b0:	cmp	w1, w0
   384b4:	b.eq	38d08 <mpfr_set_ld@@Base+0x880>  // b.none
   384b8:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   384bc:	add	x0, x0, #0xe40
   384c0:	stp	x26, x25, [sp, #96]
   384c4:	ldr	q1, [x0]
   384c8:	ldr	q0, [sp, #96]
   384cc:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   384d0:	cmp	w0, #0x0
   384d4:	b.gt	38dcc <mpfr_set_ld@@Base+0x944>
   384d8:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   384dc:	add	x0, x0, #0xe50
   384e0:	stp	x26, x25, [sp, #96]
   384e4:	ldr	q1, [x0]
   384e8:	ldr	q0, [sp, #96]
   384ec:	bl	5a160 <mpfr_free_pool@@Base+0xe08>
   384f0:	tbnz	w0, #31, 38df0 <mpfr_set_ld@@Base+0x968>
   384f4:	movi	v1.2d, #0x0
   384f8:	stp	x26, x25, [sp, #96]
   384fc:	ldr	q0, [sp, #96]
   38500:	bl	59f10 <mpfr_free_pool@@Base+0xbb8>
   38504:	cbz	w0, 38d9c <mpfr_set_ld@@Base+0x914>
   38508:	stp	x23, x24, [sp, #48]
   3850c:	add	x23, sp, #0x90
   38510:	mov	x0, x23
   38514:	mov	x1, #0x71                  	// #113
   38518:	stp	x21, x22, [sp, #32]
   3851c:	stp	x27, x28, [sp, #80]
   38520:	bl	ca80 <mpfr_init2@plt>
   38524:	add	x28, sp, #0xb0
   38528:	mrs	x27, tpidr_el0
   3852c:	mov	x0, x28
   38530:	mov	x1, #0x35                  	// #53
   38534:	bl	ca80 <mpfr_init2@plt>
   38538:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   3853c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   38540:	ldr	x1, [x0, #2576]
   38544:	add	x0, x0, #0xa10
   38548:	blr	x1
   3854c:	ldr	w0, [x27, x0]
   38550:	str	w0, [sp, #124]
   38554:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   38558:	ldr	x1, [x0, #2512]
   3855c:	add	x0, x0, #0x9d0
   38560:	blr	x1
   38564:	add	x2, x27, x0
   38568:	ldr	x0, [x27, x0]
   3856c:	str	x0, [sp, #128]
   38570:	str	x3, [x2]
   38574:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   38578:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3857c:	ldr	x4, [x0, #2544]
   38580:	add	x0, x0, #0x9f0
   38584:	blr	x4
   38588:	ldr	x2, [x27, x0]
   3858c:	str	x1, [x27, x0]
   38590:	str	x2, [sp, #136]
   38594:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   38598:	mov	x20, x26
   3859c:	mov	x19, x25
   385a0:	mov	w24, #0x0                   	// #0
   385a4:	str	x0, [sp, #160]
   385a8:	b	386d4 <mpfr_set_ld@@Base+0x24c>
   385ac:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   385b0:	add	x0, x0, #0xe70
   385b4:	stp	x20, x19, [sp, #96]
   385b8:	ldr	q1, [x0]
   385bc:	ldr	q0, [sp, #96]
   385c0:	bl	5a160 <mpfr_free_pool@@Base+0xe08>
   385c4:	tbnz	w0, #31, 386f4 <mpfr_set_ld@@Base+0x26c>
   385c8:	stp	x20, x19, [sp, #96]
   385cc:	eor	x21, x19, #0x8000000000000000
   385d0:	movi	v1.2d, #0x0
   385d4:	ldr	q0, [sp, #96]
   385d8:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   385dc:	cmp	w0, #0x0
   385e0:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   385e4:	add	x0, x0, #0xef0
   385e8:	csel	x21, x21, x19, lt  // lt = tstop
   385ec:	stp	x20, x21, [sp, #96]
   385f0:	ldr	q1, [x0]
   385f4:	ldr	q0, [sp, #96]
   385f8:	bl	5a160 <mpfr_free_pool@@Base+0xe08>
   385fc:	str	x20, [sp, #96]
   38600:	tbz	w0, #31, 38aa0 <mpfr_set_ld@@Base+0x618>
   38604:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38608:	add	x0, x0, #0xe90
   3860c:	str	x21, [sp, #104]
   38610:	ldr	q1, [x0]
   38614:	ldr	q0, [sp, #96]
   38618:	bl	5a160 <mpfr_free_pool@@Base+0xe08>
   3861c:	cmp	w0, #0x0
   38620:	b.le	38c3c <mpfr_set_ld@@Base+0x7b4>
   38624:	movi	v1.2d, #0x0
   38628:	stp	x20, x19, [sp, #96]
   3862c:	ldr	q0, [sp, #96]
   38630:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   38634:	str	x20, [sp, #96]
   38638:	tbnz	w0, #31, 38b0c <mpfr_set_ld@@Base+0x684>
   3863c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38640:	add	x0, x0, #0xeb0
   38644:	str	x19, [sp, #104]
   38648:	ldr	q1, [x0]
   3864c:	ldr	q0, [sp, #96]
   38650:	bl	5a160 <mpfr_free_pool@@Base+0xe08>
   38654:	cmp	w0, #0x0
   38658:	b.le	38c00 <mpfr_set_ld@@Base+0x778>
   3865c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38660:	add	x0, x0, #0xed0
   38664:	stp	x20, x19, [sp, #96]
   38668:	mov	x21, x19
   3866c:	ldr	q1, [x0]
   38670:	ldr	q0, [sp, #96]
   38674:	bl	5a160 <mpfr_free_pool@@Base+0xe08>
   38678:	cmp	w0, #0x0
   3867c:	b.le	38cb4 <mpfr_set_ld@@Base+0x82c>
   38680:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38684:	add	x0, x0, #0xef0
   38688:	stp	x20, x19, [sp, #96]
   3868c:	ldr	q1, [x0]
   38690:	ldr	q0, [sp, #96]
   38694:	bl	5a160 <mpfr_free_pool@@Base+0xe08>
   38698:	cmp	w0, #0x0
   3869c:	b.le	38c78 <mpfr_set_ld@@Base+0x7f0>
   386a0:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   386a4:	add	x0, x0, #0xf10
   386a8:	stp	x20, x21, [sp, #96]
   386ac:	ldr	q1, [x0]
   386b0:	ldr	q0, [sp, #96]
   386b4:	bl	5a160 <mpfr_free_pool@@Base+0xe08>
   386b8:	cmp	w0, #0x0
   386bc:	b.le	38bc4 <mpfr_set_ld@@Base+0x73c>
   386c0:	movi	v1.2d, #0x0
   386c4:	stp	x20, x19, [sp, #96]
   386c8:	ldr	q0, [sp, #96]
   386cc:	bl	59f10 <mpfr_free_pool@@Base+0xbb8>
   386d0:	cbz	w0, 3880c <mpfr_set_ld@@Base+0x384>
   386d4:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   386d8:	add	x0, x0, #0xe60
   386dc:	stp	x20, x19, [sp, #96]
   386e0:	ldr	q1, [x0]
   386e4:	ldr	q0, [sp, #96]
   386e8:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   386ec:	cmp	w0, #0x0
   386f0:	b.le	385ac <mpfr_set_ld@@Base+0x124>
   386f4:	movi	v1.2d, #0x0
   386f8:	stp	x20, x19, [sp, #96]
   386fc:	ldr	q0, [sp, #96]
   38700:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   38704:	str	x20, [sp, #96]
   38708:	tbnz	w0, #31, 38948 <mpfr_set_ld@@Base+0x4c0>
   3870c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38710:	add	x0, x0, #0xf20
   38714:	str	x19, [sp, #104]
   38718:	ldr	q1, [x0]
   3871c:	ldr	q0, [sp, #96]
   38720:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   38724:	tbz	w0, #31, 389ec <mpfr_set_ld@@Base+0x564>
   38728:	mov	x22, x20
   3872c:	mov	x21, x19
   38730:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38734:	add	x0, x0, #0xea0
   38738:	stp	x20, x19, [sp, #96]
   3873c:	ldr	q1, [x0]
   38740:	ldr	q0, [sp, #96]
   38744:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   38748:	tbz	w0, #31, 389b0 <mpfr_set_ld@@Base+0x528>
   3874c:	movi	v1.2d, #0x0
   38750:	stp	x22, x21, [sp, #96]
   38754:	ldr	q0, [sp, #96]
   38758:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   3875c:	str	x22, [sp, #96]
   38760:	tbnz	w0, #31, 388c8 <mpfr_set_ld@@Base+0x440>
   38764:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38768:	add	x0, x0, #0xf50
   3876c:	str	x21, [sp, #104]
   38770:	ldr	q1, [x0]
   38774:	ldr	q0, [sp, #96]
   38778:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   3877c:	tbz	w0, #31, 38a64 <mpfr_set_ld@@Base+0x5dc>
   38780:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38784:	add	x0, x0, #0xf70
   38788:	stp	x22, x21, [sp, #96]
   3878c:	ldr	q1, [x0]
   38790:	ldr	q0, [sp, #96]
   38794:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   38798:	tbz	w0, #31, 38a28 <mpfr_set_ld@@Base+0x5a0>
   3879c:	mov	x20, x22
   387a0:	mov	x19, x21
   387a4:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   387a8:	add	x0, x0, #0xf00
   387ac:	stp	x22, x21, [sp, #96]
   387b0:	ldr	q1, [x0]
   387b4:	ldr	q0, [sp, #96]
   387b8:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   387bc:	tbnz	w0, #31, 386c0 <mpfr_set_ld@@Base+0x238>
   387c0:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   387c4:	add	x0, x0, #0xf10
   387c8:	stp	x20, x19, [sp, #96]
   387cc:	add	w24, w24, #0x200
   387d0:	ldr	q1, [x0]
   387d4:	ldr	q0, [sp, #96]
   387d8:	bl	5a2a0 <mpfr_free_pool@@Base+0xf48>
   387dc:	str	q0, [sp, #96]
   387e0:	ldp	x20, x19, [sp, #96]
   387e4:	mov	x1, x23
   387e8:	mov	x0, x23
   387ec:	mov	w3, #0x1                   	// #1
   387f0:	mov	x2, #0x200                 	// #512
   387f4:	bl	c420 <mpfr_div_2si@plt>
   387f8:	movi	v1.2d, #0x0
   387fc:	stp	x20, x19, [sp, #96]
   38800:	ldr	q0, [sp, #96]
   38804:	bl	59f10 <mpfr_free_pool@@Base+0xbb8>
   38808:	cbnz	w0, 386d4 <mpfr_set_ld@@Base+0x24c>
   3880c:	ldr	w3, [sp, #120]
   38810:	sxtw	x2, w24
   38814:	ldr	x20, [sp, #112]
   38818:	mov	x1, x23
   3881c:	mov	x0, x20
   38820:	bl	bb90 <mpfr_mul_2si@plt>
   38824:	mov	w19, w0
   38828:	mov	x0, x23
   3882c:	bl	c070 <mpfr_clear@plt>
   38830:	mov	x0, x28
   38834:	bl	c070 <mpfr_clear@plt>
   38838:	ldr	x1, [x20, #16]
   3883c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   38840:	ldr	x2, [x0, #2576]
   38844:	add	x0, x0, #0xa10
   38848:	blr	x2
   3884c:	ldr	w2, [sp, #124]
   38850:	str	w2, [x27, x0]
   38854:	add	x2, x27, x0
   38858:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3885c:	ldr	x3, [x0, #2512]
   38860:	add	x0, x0, #0x9d0
   38864:	blr	x3
   38868:	ldr	x3, [sp, #128]
   3886c:	str	x3, [x27, x0]
   38870:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   38874:	ldr	x4, [x0, #2544]
   38878:	add	x0, x0, #0x9f0
   3887c:	blr	x4
   38880:	ldr	x4, [sp, #136]
   38884:	str	x4, [x27, x0]
   38888:	cmp	x4, x1
   3888c:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   38890:	b.le	38d6c <mpfr_set_ld@@Base+0x8e4>
   38894:	ldr	w2, [sp, #120]
   38898:	mov	w1, w19
   3889c:	ldr	x0, [sp, #112]
   388a0:	bl	cb30 <mpfr_check_range@plt>
   388a4:	mov	w19, w0
   388a8:	mov	w0, w19
   388ac:	ldp	x19, x20, [sp, #16]
   388b0:	ldp	x21, x22, [sp, #32]
   388b4:	ldp	x23, x24, [sp, #48]
   388b8:	ldp	x25, x26, [sp, #64]
   388bc:	ldp	x27, x28, [sp, #80]
   388c0:	ldp	x29, x30, [sp], #208
   388c4:	ret
   388c8:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   388cc:	add	x0, x0, #0xec0
   388d0:	str	x21, [sp, #104]
   388d4:	ldr	q1, [x0]
   388d8:	ldr	q0, [sp, #96]
   388dc:	bl	5a160 <mpfr_free_pool@@Base+0xe08>
   388e0:	cmp	w0, #0x0
   388e4:	b.le	38a64 <mpfr_set_ld@@Base+0x5dc>
   388e8:	movi	v1.2d, #0x0
   388ec:	stp	x22, x21, [sp, #96]
   388f0:	ldr	q0, [sp, #96]
   388f4:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   388f8:	tbz	w0, #31, 38780 <mpfr_set_ld@@Base+0x2f8>
   388fc:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38900:	add	x0, x0, #0xee0
   38904:	stp	x22, x21, [sp, #96]
   38908:	mov	x20, x22
   3890c:	mov	x19, x21
   38910:	ldr	q1, [x0]
   38914:	ldr	q0, [sp, #96]
   38918:	bl	5a160 <mpfr_free_pool@@Base+0xe08>
   3891c:	cmp	w0, #0x0
   38920:	b.le	38a28 <mpfr_set_ld@@Base+0x5a0>
   38924:	stp	x20, x19, [sp, #96]
   38928:	mov	x22, x20
   3892c:	eor	x21, x19, #0x8000000000000000
   38930:	movi	v1.2d, #0x0
   38934:	ldr	q0, [sp, #96]
   38938:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   3893c:	tbnz	w0, #31, 387a4 <mpfr_set_ld@@Base+0x31c>
   38940:	mov	x21, x19
   38944:	b	387a4 <mpfr_set_ld@@Base+0x31c>
   38948:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   3894c:	add	x0, x0, #0xe80
   38950:	str	x19, [sp, #104]
   38954:	mov	x22, x20
   38958:	mov	x21, x19
   3895c:	ldr	q1, [x0]
   38960:	ldr	q0, [sp, #96]
   38964:	bl	5a160 <mpfr_free_pool@@Base+0xe08>
   38968:	cmp	w0, #0x0
   3896c:	b.le	389ec <mpfr_set_ld@@Base+0x564>
   38970:	stp	x22, x21, [sp, #96]
   38974:	mov	x20, x22
   38978:	eor	x19, x21, #0x8000000000000000
   3897c:	movi	v1.2d, #0x0
   38980:	ldr	q0, [sp, #96]
   38984:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   38988:	tbnz	w0, #31, 38730 <mpfr_set_ld@@Base+0x2a8>
   3898c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38990:	add	x0, x0, #0xea0
   38994:	mov	x19, x21
   38998:	stp	x20, x19, [sp, #96]
   3899c:	ldr	q1, [x0]
   389a0:	ldr	q0, [sp, #96]
   389a4:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   389a8:	tbnz	w0, #31, 3874c <mpfr_set_ld@@Base+0x2c4>
   389ac:	nop
   389b0:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   389b4:	add	x0, x0, #0xeb0
   389b8:	stp	x22, x21, [sp, #96]
   389bc:	add	w24, w24, #0x1, lsl #12
   389c0:	ldr	q1, [x0]
   389c4:	ldr	q0, [sp, #96]
   389c8:	bl	5a2a0 <mpfr_free_pool@@Base+0xf48>
   389cc:	str	q0, [sp, #96]
   389d0:	mov	x1, x23
   389d4:	mov	x0, x23
   389d8:	mov	w3, #0x1                   	// #1
   389dc:	mov	x2, #0x1000                	// #4096
   389e0:	ldp	x22, x21, [sp, #96]
   389e4:	bl	c420 <mpfr_div_2si@plt>
   389e8:	b	3874c <mpfr_set_ld@@Base+0x2c4>
   389ec:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   389f0:	add	x0, x0, #0xe90
   389f4:	stp	x20, x19, [sp, #96]
   389f8:	add	w24, w24, #0x2, lsl #12
   389fc:	ldr	q1, [x0]
   38a00:	ldr	q0, [sp, #96]
   38a04:	bl	5a2a0 <mpfr_free_pool@@Base+0xf48>
   38a08:	str	q0, [sp, #96]
   38a0c:	mov	x1, x23
   38a10:	mov	x0, x23
   38a14:	mov	w3, #0x1                   	// #1
   38a18:	mov	x2, #0x2000                	// #8192
   38a1c:	ldp	x22, x21, [sp, #96]
   38a20:	bl	c420 <mpfr_div_2si@plt>
   38a24:	b	38970 <mpfr_set_ld@@Base+0x4e8>
   38a28:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38a2c:	add	x0, x0, #0xef0
   38a30:	stp	x22, x21, [sp, #96]
   38a34:	add	w24, w24, #0x400
   38a38:	ldr	q1, [x0]
   38a3c:	ldr	q0, [sp, #96]
   38a40:	bl	5a2a0 <mpfr_free_pool@@Base+0xf48>
   38a44:	str	q0, [sp, #96]
   38a48:	mov	x1, x23
   38a4c:	mov	x0, x23
   38a50:	mov	w3, #0x1                   	// #1
   38a54:	mov	x2, #0x400                 	// #1024
   38a58:	ldp	x20, x19, [sp, #96]
   38a5c:	bl	c420 <mpfr_div_2si@plt>
   38a60:	b	38924 <mpfr_set_ld@@Base+0x49c>
   38a64:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38a68:	add	x0, x0, #0xed0
   38a6c:	stp	x22, x21, [sp, #96]
   38a70:	add	w24, w24, #0x800
   38a74:	ldr	q1, [x0]
   38a78:	ldr	q0, [sp, #96]
   38a7c:	bl	5a2a0 <mpfr_free_pool@@Base+0xf48>
   38a80:	str	q0, [sp, #96]
   38a84:	mov	x1, x23
   38a88:	mov	x0, x23
   38a8c:	mov	w3, #0x1                   	// #1
   38a90:	mov	x2, #0x800                 	// #2048
   38a94:	ldp	x22, x21, [sp, #96]
   38a98:	bl	c420 <mpfr_div_2si@plt>
   38a9c:	b	388e8 <mpfr_set_ld@@Base+0x460>
   38aa0:	str	x19, [sp, #104]
   38aa4:	ldr	q0, [sp, #96]
   38aa8:	bl	5b6b8 <mpfr_free_pool@@Base+0x2360>
   38aac:	mov	w1, #0x1                   	// #1
   38ab0:	mov	x0, x28
   38ab4:	bl	be40 <mpfr_set_d@plt>
   38ab8:	mov	x2, x28
   38abc:	mov	x1, x23
   38ac0:	mov	x0, x23
   38ac4:	mov	w3, #0x1                   	// #1
   38ac8:	bl	c1a0 <mpfr_add@plt>
   38acc:	cbnz	w0, 38e14 <mpfr_set_ld@@Base+0x98c>
   38ad0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   38ad4:	ldr	x1, [x0, #2640]
   38ad8:	add	x0, x0, #0xa50
   38adc:	blr	x1
   38ae0:	ldr	w1, [x27, x0]
   38ae4:	mov	x0, x28
   38ae8:	bl	bd30 <mpfr_get_d@plt>
   38aec:	bl	5b568 <mpfr_free_pool@@Base+0x2210>
   38af0:	stp	x20, x19, [sp, #96]
   38af4:	mov	v1.16b, v0.16b
   38af8:	ldr	q0, [sp, #96]
   38afc:	bl	5aa88 <mpfr_free_pool@@Base+0x1730>
   38b00:	str	q0, [sp, #96]
   38b04:	ldp	x20, x19, [sp, #96]
   38b08:	b	386c0 <mpfr_set_ld@@Base+0x238>
   38b0c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38b10:	add	x0, x0, #0xf30
   38b14:	str	x19, [sp, #104]
   38b18:	ldr	q1, [x0]
   38b1c:	ldr	q0, [sp, #96]
   38b20:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   38b24:	tbz	w0, #31, 38c00 <mpfr_set_ld@@Base+0x778>
   38b28:	movi	v1.2d, #0x0
   38b2c:	stp	x20, x19, [sp, #96]
   38b30:	ldr	q0, [sp, #96]
   38b34:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   38b38:	tbz	w0, #31, 3865c <mpfr_set_ld@@Base+0x1d4>
   38b3c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38b40:	add	x0, x0, #0xf40
   38b44:	stp	x20, x19, [sp, #96]
   38b48:	ldr	q1, [x0]
   38b4c:	ldr	q0, [sp, #96]
   38b50:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   38b54:	tbz	w0, #31, 38cb4 <mpfr_set_ld@@Base+0x82c>
   38b58:	movi	v1.2d, #0x0
   38b5c:	stp	x20, x19, [sp, #96]
   38b60:	ldr	q0, [sp, #96]
   38b64:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   38b68:	tbz	w0, #31, 38d00 <mpfr_set_ld@@Base+0x878>
   38b6c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38b70:	add	x0, x0, #0xf60
   38b74:	stp	x20, x19, [sp, #96]
   38b78:	ldr	q1, [x0]
   38b7c:	ldr	q0, [sp, #96]
   38b80:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   38b84:	tbz	w0, #31, 38c78 <mpfr_set_ld@@Base+0x7f0>
   38b88:	stp	x20, x19, [sp, #96]
   38b8c:	eor	x21, x19, #0x8000000000000000
   38b90:	movi	v1.2d, #0x0
   38b94:	ldr	q0, [sp, #96]
   38b98:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   38b9c:	cmp	w0, #0x0
   38ba0:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38ba4:	add	x0, x0, #0xf10
   38ba8:	csel	x21, x21, x19, lt  // lt = tstop
   38bac:	stp	x20, x21, [sp, #96]
   38bb0:	ldr	q1, [x0]
   38bb4:	ldr	q0, [sp, #96]
   38bb8:	bl	5a160 <mpfr_free_pool@@Base+0xe08>
   38bbc:	cmp	w0, #0x0
   38bc0:	b.gt	386c0 <mpfr_set_ld@@Base+0x238>
   38bc4:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38bc8:	add	x0, x0, #0xf00
   38bcc:	stp	x20, x19, [sp, #96]
   38bd0:	sub	w24, w24, #0x200
   38bd4:	ldr	q1, [x0]
   38bd8:	ldr	q0, [sp, #96]
   38bdc:	bl	5a2a0 <mpfr_free_pool@@Base+0xf48>
   38be0:	str	q0, [sp, #96]
   38be4:	mov	x1, x23
   38be8:	mov	x0, x23
   38bec:	mov	w3, #0x1                   	// #1
   38bf0:	mov	x2, #0x200                 	// #512
   38bf4:	ldp	x20, x19, [sp, #96]
   38bf8:	bl	bb90 <mpfr_mul_2si@plt>
   38bfc:	b	386c0 <mpfr_set_ld@@Base+0x238>
   38c00:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38c04:	add	x0, x0, #0xea0
   38c08:	stp	x20, x19, [sp, #96]
   38c0c:	sub	w24, w24, #0x1, lsl #12
   38c10:	ldr	q1, [x0]
   38c14:	ldr	q0, [sp, #96]
   38c18:	bl	5a2a0 <mpfr_free_pool@@Base+0xf48>
   38c1c:	str	q0, [sp, #96]
   38c20:	mov	x1, x23
   38c24:	mov	x0, x23
   38c28:	mov	w3, #0x1                   	// #1
   38c2c:	mov	x2, #0x1000                	// #4096
   38c30:	ldp	x20, x19, [sp, #96]
   38c34:	bl	bb90 <mpfr_mul_2si@plt>
   38c38:	b	38b28 <mpfr_set_ld@@Base+0x6a0>
   38c3c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38c40:	add	x0, x0, #0xf20
   38c44:	stp	x20, x19, [sp, #96]
   38c48:	sub	w24, w24, #0x2, lsl #12
   38c4c:	ldr	q1, [x0]
   38c50:	ldr	q0, [sp, #96]
   38c54:	bl	5a2a0 <mpfr_free_pool@@Base+0xf48>
   38c58:	str	q0, [sp, #96]
   38c5c:	mov	x1, x23
   38c60:	mov	x0, x23
   38c64:	mov	w3, #0x1                   	// #1
   38c68:	mov	x2, #0x2000                	// #8192
   38c6c:	ldp	x20, x19, [sp, #96]
   38c70:	bl	bb90 <mpfr_mul_2si@plt>
   38c74:	b	38624 <mpfr_set_ld@@Base+0x19c>
   38c78:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38c7c:	add	x0, x0, #0xf70
   38c80:	stp	x20, x19, [sp, #96]
   38c84:	sub	w24, w24, #0x400
   38c88:	ldr	q1, [x0]
   38c8c:	ldr	q0, [sp, #96]
   38c90:	bl	5a2a0 <mpfr_free_pool@@Base+0xf48>
   38c94:	str	q0, [sp, #96]
   38c98:	mov	x1, x23
   38c9c:	mov	x0, x23
   38ca0:	mov	w3, #0x1                   	// #1
   38ca4:	mov	x2, #0x400                 	// #1024
   38ca8:	ldp	x20, x19, [sp, #96]
   38cac:	bl	bb90 <mpfr_mul_2si@plt>
   38cb0:	b	38b88 <mpfr_set_ld@@Base+0x700>
   38cb4:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38cb8:	add	x0, x0, #0xf50
   38cbc:	stp	x20, x19, [sp, #96]
   38cc0:	sub	w24, w24, #0x800
   38cc4:	ldr	q1, [x0]
   38cc8:	ldr	q0, [sp, #96]
   38ccc:	bl	5a2a0 <mpfr_free_pool@@Base+0xf48>
   38cd0:	str	q0, [sp, #96]
   38cd4:	ldp	x20, x19, [sp, #96]
   38cd8:	mov	x1, x23
   38cdc:	mov	x0, x23
   38ce0:	mov	w3, #0x1                   	// #1
   38ce4:	mov	x2, #0x800                 	// #2048
   38ce8:	bl	bb90 <mpfr_mul_2si@plt>
   38cec:	movi	v1.2d, #0x0
   38cf0:	stp	x20, x19, [sp, #96]
   38cf4:	ldr	q0, [sp, #96]
   38cf8:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   38cfc:	tbnz	w0, #31, 38b6c <mpfr_set_ld@@Base+0x6e4>
   38d00:	mov	x21, x19
   38d04:	b	38680 <mpfr_set_ld@@Base+0x1f8>
   38d08:	ubfx	x1, x25, #32, #16
   38d0c:	orr	w2, w1, w25
   38d10:	lsr	x1, x26, #32
   38d14:	orr	w0, w26, w1
   38d18:	orr	w0, w0, w2
   38d1c:	cbz	w0, 384b8 <mpfr_set_ld@@Base+0x30>
   38d20:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   38d24:	ldr	x2, [x0, #2576]
   38d28:	add	x0, x0, #0xa10
   38d2c:	blr	x2
   38d30:	mrs	x1, tpidr_el0
   38d34:	ldr	x2, [sp, #112]
   38d38:	add	x0, x1, x0
   38d3c:	mov	x1, #0x2                   	// #2
   38d40:	mov	w19, #0x0                   	// #0
   38d44:	movk	x1, #0x8000, lsl #48
   38d48:	str	x1, [x2, #16]
   38d4c:	ldr	w1, [x0]
   38d50:	ldp	x25, x26, [sp, #64]
   38d54:	orr	w1, w1, #0x4
   38d58:	str	w1, [x0]
   38d5c:	mov	w0, w19
   38d60:	ldp	x19, x20, [sp, #16]
   38d64:	ldp	x29, x30, [sp], #208
   38d68:	ret
   38d6c:	cbz	w19, 388a8 <mpfr_set_ld@@Base+0x420>
   38d70:	ldr	w0, [sp, #124]
   38d74:	ldp	x21, x22, [sp, #32]
   38d78:	orr	w0, w0, #0x8
   38d7c:	ldp	x23, x24, [sp, #48]
   38d80:	ldp	x27, x28, [sp, #80]
   38d84:	str	w0, [x2]
   38d88:	mov	w0, w19
   38d8c:	ldp	x19, x20, [sp, #16]
   38d90:	ldp	x25, x26, [sp, #64]
   38d94:	ldp	x29, x30, [sp], #208
   38d98:	ret
   38d9c:	stp	x26, x25, [sp, #96]
   38da0:	ldr	q0, [sp, #96]
   38da4:	bl	5b6b8 <mpfr_free_pool@@Base+0x2360>
   38da8:	ldr	w1, [sp, #120]
   38dac:	ldr	x0, [sp, #112]
   38db0:	bl	be40 <mpfr_set_d@plt>
   38db4:	mov	w19, w0
   38db8:	mov	w0, w19
   38dbc:	ldp	x19, x20, [sp, #16]
   38dc0:	ldp	x25, x26, [sp, #64]
   38dc4:	ldp	x29, x30, [sp], #208
   38dc8:	ret
   38dcc:	ldr	x0, [sp, #112]
   38dd0:	mov	w1, #0x1                   	// #1
   38dd4:	mov	w19, #0x0                   	// #0
   38dd8:	bl	c5b0 <mpfr_set_inf@plt>
   38ddc:	mov	w0, w19
   38de0:	ldp	x19, x20, [sp, #16]
   38de4:	ldp	x25, x26, [sp, #64]
   38de8:	ldp	x29, x30, [sp], #208
   38dec:	ret
   38df0:	ldr	x0, [sp, #112]
   38df4:	mov	w1, #0xffffffff            	// #-1
   38df8:	mov	w19, #0x0                   	// #0
   38dfc:	bl	c5b0 <mpfr_set_inf@plt>
   38e00:	mov	w0, w19
   38e04:	ldp	x19, x20, [sp, #16]
   38e08:	ldp	x25, x26, [sp, #64]
   38e0c:	ldp	x29, x30, [sp], #208
   38e10:	ret
   38e14:	mov	x0, x23
   38e18:	bl	cb90 <mpfr_number_p@plt>
   38e1c:	cbz	w0, 3880c <mpfr_set_ld@@Base+0x384>
   38e20:	ldr	x0, [sp, #112]
   38e24:	ldr	x2, [sp, #144]
   38e28:	ldr	x0, [x0]
   38e2c:	add	x1, x0, #0x1
   38e30:	cmp	x2, x1
   38e34:	b.eq	38e44 <mpfr_set_ld@@Base+0x9bc>  // b.none
   38e38:	mov	x0, x23
   38e3c:	bl	bed0 <mpfr_set_prec@plt>
   38e40:	b	38594 <mpfr_set_ld@@Base+0x10c>
   38e44:	ldr	w3, [sp, #120]
   38e48:	mvn	w0, w0
   38e4c:	ldr	x2, [sp, #168]
   38e50:	mov	x1, #0x1                   	// #1
   38e54:	lsl	x0, x1, x0
   38e58:	sxtw	x0, w0
   38e5c:	ldr	x1, [x2]
   38e60:	cbnz	w3, 38e7c <mpfr_set_ld@@Base+0x9f4>
   38e64:	ldrsw	x4, [sp, #152]
   38e68:	and	x3, x0, x1
   38e6c:	cmp	x3, x4, lsr #63
   38e70:	cset	w3, eq  // eq = none
   38e74:	add	w3, w3, #0x2
   38e78:	str	w3, [sp, #120]
   38e7c:	orr	x0, x0, x1
   38e80:	str	x0, [x2]
   38e84:	b	3880c <mpfr_set_ld@@Base+0x384>

0000000000038e88 <mpfr_get_ld@@Base>:
   38e88:	stp	x29, x30, [sp, #-224]!
   38e8c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   38e90:	mov	x29, sp
   38e94:	ldr	x3, [x0, #16]
   38e98:	stp	x19, x20, [sp, #16]
   38e9c:	cmp	x3, x2
   38ea0:	b.le	3910c <mpfr_get_ld@@Base+0x284>
   38ea4:	stp	x23, x24, [sp, #48]
   38ea8:	mrs	x24, tpidr_el0
   38eac:	mov	w23, w1
   38eb0:	stp	x21, x22, [sp, #32]
   38eb4:	mov	x21, x0
   38eb8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   38ebc:	ldr	x1, [x0, #2576]
   38ec0:	add	x0, x0, #0xa10
   38ec4:	blr	x1
   38ec8:	stp	x27, x28, [sp, #80]
   38ecc:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   38ed0:	ldr	w27, [x24, x0]
   38ed4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   38ed8:	ldr	x3, [x0, #2512]
   38edc:	add	x0, x0, #0x9d0
   38ee0:	blr	x3
   38ee4:	add	x3, x24, x0
   38ee8:	stp	x25, x26, [sp, #64]
   38eec:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   38ef0:	add	x25, sp, #0xa0
   38ef4:	ldr	x26, [x24, x0]
   38ef8:	str	d8, [sp, #96]
   38efc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   38f00:	ldr	x4, [x0, #2544]
   38f04:	add	x0, x0, #0x9f0
   38f08:	blr	x4
   38f0c:	str	x5, [x3]
   38f10:	ldr	x3, [x24, x0]
   38f14:	mov	x1, #0x71                  	// #113
   38f18:	add	x22, sp, #0xc0
   38f1c:	str	x2, [x24, x0]
   38f20:	mov	x0, x25
   38f24:	str	x3, [sp, #152]
   38f28:	bl	ca80 <mpfr_init2@plt>
   38f2c:	mov	x20, #0x0                   	// #0
   38f30:	mov	x0, x22
   38f34:	mov	x1, #0x71                  	// #113
   38f38:	bl	ca80 <mpfr_init2@plt>
   38f3c:	mov	x19, #0x0                   	// #0
   38f40:	ldr	w3, [x21, #8]
   38f44:	mov	w2, w23
   38f48:	mov	x1, x21
   38f4c:	mov	x0, x25
   38f50:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   38f54:	bl	c6a0 <mpfr_set4@plt>
   38f58:	ldr	w28, [sp, #168]
   38f5c:	mov	w0, #0x1                   	// #1
   38f60:	str	w0, [sp, #168]
   38f64:	ldr	x21, [sp, #176]
   38f68:	str	xzr, [sp, #176]
   38f6c:	nop
   38f70:	mov	x0, x25
   38f74:	mov	w1, #0x0                   	// #0
   38f78:	bl	bd30 <mpfr_get_d@plt>
   38f7c:	fmov	d8, d0
   38f80:	bl	5b568 <mpfr_free_pool@@Base+0x2210>
   38f84:	stp	x20, x19, [sp, #112]
   38f88:	mov	v1.16b, v0.16b
   38f8c:	ldr	q0, [sp, #112]
   38f90:	bl	593e8 <mpfr_free_pool@@Base+0x90>
   38f94:	str	q0, [sp, #112]
   38f98:	fmov	d0, d8
   38f9c:	mov	w1, #0x0                   	// #0
   38fa0:	mov	x0, x22
   38fa4:	ldp	x20, x19, [sp, #112]
   38fa8:	bl	be40 <mpfr_set_d@plt>
   38fac:	mov	x2, x22
   38fb0:	mov	x1, x25
   38fb4:	mov	x0, x25
   38fb8:	mov	w3, #0x0                   	// #0
   38fbc:	bl	bb70 <mpfr_sub@plt>
   38fc0:	ldr	x0, [sp, #176]
   38fc4:	cmp	x0, x23
   38fc8:	b.ne	38f70 <mpfr_get_ld@@Base+0xe8>  // b.any
   38fcc:	mov	x0, x22
   38fd0:	bl	c070 <mpfr_clear@plt>
   38fd4:	mov	x0, x25
   38fd8:	bl	c070 <mpfr_clear@plt>
   38fdc:	cbz	x21, 39098 <mpfr_get_ld@@Base+0x210>
   38fe0:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   38fe4:	add	x0, x0, #0xf90
   38fe8:	stp	x20, x19, [sp, #112]
   38fec:	ldr	q1, [x0]
   38ff0:	ldr	q0, [sp, #112]
   38ff4:	bl	5a160 <mpfr_free_pool@@Base+0xe08>
   38ff8:	tbz	w0, #31, 39034 <mpfr_get_ld@@Base+0x1ac>
   38ffc:	nop
   39000:	stp	x20, x19, [sp, #112]
   39004:	sub	x21, x21, #0x1
   39008:	stp	x20, x19, [sp, #128]
   3900c:	ldr	q1, [sp, #112]
   39010:	ldr	q0, [sp, #128]
   39014:	bl	593e8 <mpfr_free_pool@@Base+0x90>
   39018:	str	q0, [sp, #112]
   3901c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   39020:	add	x0, x0, #0xf90
   39024:	ldp	x20, x19, [sp, #112]
   39028:	ldr	q1, [x0]
   3902c:	bl	5a160 <mpfr_free_pool@@Base+0xe08>
   39030:	tbnz	w0, #31, 39000 <mpfr_get_ld@@Base+0x178>
   39034:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   39038:	add	x0, x0, #0xfa0
   3903c:	cmp	x21, #0x0
   39040:	ldr	q2, [x0]
   39044:	b.gt	39064 <mpfr_get_ld@@Base+0x1dc>
   39048:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   3904c:	add	x0, x0, #0xfb0
   39050:	neg	x21, x21
   39054:	ldr	q2, [x0]
   39058:	b	39064 <mpfr_get_ld@@Base+0x1dc>
   3905c:	bl	5a2a0 <mpfr_free_pool@@Base+0xf48>
   39060:	mov	v2.16b, v0.16b
   39064:	stp	x20, x19, [sp, #112]
   39068:	mov	v1.16b, v2.16b
   3906c:	tbz	w21, #0, 39088 <mpfr_get_ld@@Base+0x200>
   39070:	ldr	q0, [sp, #112]
   39074:	str	q2, [sp, #128]
   39078:	bl	5a2a0 <mpfr_free_pool@@Base+0xf48>
   3907c:	str	q0, [sp, #112]
   39080:	ldp	x20, x19, [sp, #112]
   39084:	ldr	q2, [sp, #128]
   39088:	mov	v1.16b, v2.16b
   3908c:	mov	v0.16b, v2.16b
   39090:	asr	x21, x21, #1
   39094:	cbnz	x21, 3905c <mpfr_get_ld@@Base+0x1d4>
   39098:	cmp	w28, #0x0
   3909c:	eor	x0, x19, #0x8000000000000000
   390a0:	csel	x19, x0, x19, lt  // lt = tstop
   390a4:	stp	x20, x19, [sp, #112]
   390a8:	ldr	d8, [sp, #96]
   390ac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   390b0:	ldr	x1, [x0, #2576]
   390b4:	add	x0, x0, #0xa10
   390b8:	blr	x1
   390bc:	str	w27, [x24, x0]
   390c0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   390c4:	ldr	x1, [x0, #2512]
   390c8:	add	x0, x0, #0x9d0
   390cc:	blr	x1
   390d0:	str	x26, [x24, x0]
   390d4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   390d8:	ldr	x1, [x0, #2544]
   390dc:	add	x0, x0, #0x9f0
   390e0:	blr	x1
   390e4:	ldr	q0, [sp, #112]
   390e8:	ldr	x1, [sp, #152]
   390ec:	ldp	x21, x22, [sp, #32]
   390f0:	ldp	x25, x26, [sp, #64]
   390f4:	ldp	x27, x28, [sp, #80]
   390f8:	str	x1, [x24, x0]
   390fc:	ldp	x19, x20, [sp, #16]
   39100:	ldp	x23, x24, [sp, #48]
   39104:	ldp	x29, x30, [sp], #224
   39108:	ret
   3910c:	bl	bd30 <mpfr_get_d@plt>
   39110:	bl	5b568 <mpfr_free_pool@@Base+0x2210>
   39114:	str	q0, [sp, #112]
   39118:	ldp	x20, x19, [sp, #112]
   3911c:	stp	x20, x19, [sp, #112]
   39120:	ldp	x19, x20, [sp, #16]
   39124:	ldr	q0, [sp, #112]
   39128:	ldp	x29, x30, [sp], #224
   3912c:	ret

0000000000039130 <mpfr_get_ld_2exp@@Base>:
   39130:	stp	x29, x30, [sp, #-96]!
   39134:	mov	x29, sp
   39138:	ldr	x4, [x1, #16]
   3913c:	stp	x19, x20, [sp, #16]
   39140:	mov	x20, #0x8000000000000003    	// #-9223372036854775805
   39144:	cmp	x4, x20
   39148:	b.le	392b4 <mpfr_get_ld_2exp@@Base+0x184>
   3914c:	mov	x19, x1
   39150:	mov	w1, w2
   39154:	ldr	w3, [x19, #8]
   39158:	ldr	x4, [x19]
   3915c:	str	x4, [sp, #64]
   39160:	ldr	x2, [x19, #24]
   39164:	str	x21, [sp, #32]
   39168:	mov	x21, x0
   3916c:	add	x0, sp, #0x40
   39170:	str	w3, [sp, #72]
   39174:	stp	xzr, x2, [sp, #80]
   39178:	bl	c580 <mpfr_get_ld@plt>
   3917c:	mov	v2.16b, v0.16b
   39180:	ldr	x19, [x19, #16]
   39184:	cmp	x19, x20
   39188:	b.gt	391a8 <mpfr_get_ld_2exp@@Base+0x78>
   3918c:	mov	x19, #0x0                   	// #0
   39190:	str	x19, [x21]
   39194:	mov	v0.16b, v2.16b
   39198:	ldp	x19, x20, [sp, #16]
   3919c:	ldr	x21, [sp, #32]
   391a0:	ldp	x29, x30, [sp], #96
   391a4:	ret
   391a8:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   391ac:	add	x0, x0, #0xf90
   391b0:	str	q0, [sp, #48]
   391b4:	ldr	q1, [x0]
   391b8:	bl	59f10 <mpfr_free_pool@@Base+0xbb8>
   391bc:	ldr	q2, [sp, #48]
   391c0:	cbnz	w0, 391d8 <mpfr_get_ld_2exp@@Base+0xa8>
   391c4:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   391c8:	add	x0, x0, #0xfb0
   391cc:	add	x19, x19, #0x1
   391d0:	ldr	q2, [x0]
   391d4:	b	39190 <mpfr_get_ld_2exp@@Base+0x60>
   391d8:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   391dc:	add	x0, x0, #0xfc0
   391e0:	mov	v0.16b, v2.16b
   391e4:	str	q2, [sp, #48]
   391e8:	ldr	q1, [x0]
   391ec:	bl	59f10 <mpfr_free_pool@@Base+0xbb8>
   391f0:	ldr	q2, [sp, #48]
   391f4:	cbz	w0, 392a0 <mpfr_get_ld_2exp@@Base+0x170>
   391f8:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   391fc:	add	x0, x0, #0xfb0
   39200:	mov	v0.16b, v2.16b
   39204:	str	q2, [sp, #48]
   39208:	ldr	q1, [x0]
   3920c:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   39210:	ldr	q2, [sp, #48]
   39214:	tbnz	w0, #31, 39234 <mpfr_get_ld_2exp@@Base+0x104>
   39218:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   3921c:	add	x0, x0, #0xf90
   39220:	mov	v0.16b, v2.16b
   39224:	ldr	q1, [x0]
   39228:	bl	5a160 <mpfr_free_pool@@Base+0xe08>
   3922c:	ldr	q2, [sp, #48]
   39230:	tbnz	w0, #31, 39190 <mpfr_get_ld_2exp@@Base+0x60>
   39234:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   39238:	add	x0, x0, #0xfd0
   3923c:	mov	v0.16b, v2.16b
   39240:	str	q2, [sp, #48]
   39244:	ldr	q1, [x0]
   39248:	bl	5a160 <mpfr_free_pool@@Base+0xe08>
   3924c:	cmp	w0, #0x0
   39250:	ldr	q2, [sp, #48]
   39254:	b.gt	3927c <mpfr_get_ld_2exp@@Base+0x14c>
   39258:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   3925c:	add	x0, x0, #0xfc0
   39260:	mov	v0.16b, v2.16b
   39264:	str	q2, [sp, #48]
   39268:	ldr	q1, [x0]
   3926c:	bl	5a018 <mpfr_free_pool@@Base+0xcc0>
   39270:	cmp	w0, #0x0
   39274:	ldr	q2, [sp, #48]
   39278:	b.gt	39190 <mpfr_get_ld_2exp@@Base+0x60>
   3927c:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   39280:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   39284:	add	x2, x2, #0xeb0
   39288:	add	x0, x0, #0xf80
   3928c:	mov	w1, #0x10e                 	// #270
   39290:	str	q2, [sp, #48]
   39294:	bl	cb40 <mpfr_assert_fail@plt>
   39298:	ldr	q2, [sp, #48]
   3929c:	b	39190 <mpfr_get_ld_2exp@@Base+0x60>
   392a0:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   392a4:	add	x0, x0, #0xfd0
   392a8:	add	x19, x19, #0x1
   392ac:	ldr	q2, [x0]
   392b0:	b	39190 <mpfr_get_ld_2exp@@Base+0x60>
   392b4:	bl	cbd0 <mpfr_get_d_2exp@plt>
   392b8:	bl	5b568 <mpfr_free_pool@@Base+0x2210>
   392bc:	mov	v2.16b, v0.16b
   392c0:	mov	v0.16b, v2.16b
   392c4:	ldp	x19, x20, [sp, #16]
   392c8:	ldp	x29, x30, [sp], #96
   392cc:	ret

00000000000392d0 <mpfr_cbrt@@Base>:
   392d0:	stp	x29, x30, [sp, #-128]!
   392d4:	mov	x29, sp
   392d8:	stp	x19, x20, [sp, #16]
   392dc:	mov	x19, x1
   392e0:	ldr	x1, [x1, #16]
   392e4:	stp	x23, x24, [sp, #48]
   392e8:	mov	x23, x0
   392ec:	stp	x27, x28, [sp, #80]
   392f0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   392f4:	cmp	x1, x0
   392f8:	b.le	3965c <mpfr_cbrt@@Base+0x38c>
   392fc:	mrs	x20, tpidr_el0
   39300:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   39304:	ldr	x1, [x0, #2576]
   39308:	add	x0, x0, #0xa10
   3930c:	blr	x1
   39310:	stp	x21, x22, [sp, #32]
   39314:	mov	w21, w2
   39318:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   3931c:	ldr	w0, [x20, x0]
   39320:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   39324:	str	w0, [sp, #108]
   39328:	add	x28, sp, #0x70
   3932c:	stp	x25, x26, [sp, #64]
   39330:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   39334:	ldr	x2, [x0, #2512]
   39338:	add	x0, x0, #0x9d0
   3933c:	blr	x2
   39340:	add	x2, x20, x0
   39344:	ldr	x24, [x20, x0]
   39348:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3934c:	ldr	x3, [x0, #2544]
   39350:	add	x0, x0, #0x9f0
   39354:	blr	x3
   39358:	str	x4, [x2]
   3935c:	ldr	x25, [x20, x0]
   39360:	str	x1, [x20, x0]
   39364:	mov	x0, x28
   39368:	bl	bf90 <mpfr_mpz_init@plt>
   3936c:	mov	x1, x19
   39370:	mov	x0, x28
   39374:	bl	cac0 <mpfr_get_z_2exp@plt>
   39378:	ldr	w22, [x19, #8]
   3937c:	mov	x26, x0
   39380:	ldr	w0, [sp, #116]
   39384:	tbz	w22, #31, 39390 <mpfr_cbrt@@Base+0xc0>
   39388:	neg	w0, w0
   3938c:	str	w0, [sp, #116]
   39390:	mov	x4, #0x5555555555555555    	// #6148914691236517205
   39394:	mov	x5, #0xfffffffffffffff8    	// #-8
   39398:	movk	x4, #0x5556
   3939c:	ldr	x6, [sp, #120]
   393a0:	smulh	x1, x26, x4
   393a4:	ldr	x19, [x23]
   393a8:	sub	x1, x1, x26, asr #63
   393ac:	add	x1, x1, x1, lsl #1
   393b0:	subs	x1, x26, x1
   393b4:	add	x2, x1, #0x3
   393b8:	csel	x1, x2, x1, mi  // mi = first
   393bc:	cmp	w0, #0x0
   393c0:	cneg	w0, w0, lt  // lt = tstop
   393c4:	cmp	w21, #0x0
   393c8:	cinc	x27, x19, eq  // eq = none
   393cc:	add	x5, x5, w0, sxtw #3
   393d0:	sbfiz	x0, x0, #6, #32
   393d4:	add	x2, x27, x27, lsl #1
   393d8:	ldr	x5, [x6, x5]
   393dc:	clz	x5, x5
   393e0:	sub	x0, x0, x5
   393e4:	sub	x2, x2, x0
   393e8:	sub	x2, x2, x1
   393ec:	smulh	x4, x2, x4
   393f0:	sub	x2, x4, x2, asr #63
   393f4:	add	x2, x2, x2, lsl #1
   393f8:	adds	x2, x2, x1
   393fc:	b.pl	395f0 <mpfr_cbrt@@Base+0x320>  // b.nfrst
   39400:	cbnz	x1, 395d8 <mpfr_cbrt@@Base+0x308>
   39404:	mov	x1, x28
   39408:	mov	x2, #0x3                   	// #3
   3940c:	mov	x0, x28
   39410:	bl	c2e0 <__gmpz_root@plt>
   39414:	ldr	w1, [sp, #116]
   39418:	mov	x2, #0xfffffffffffffff8    	// #-8
   3941c:	ldr	x4, [sp, #120]
   39420:	cmp	w1, #0x0
   39424:	cneg	w1, w1, lt  // lt = tstop
   39428:	cmp	w0, #0x0
   3942c:	add	x2, x2, w1, sxtw #3
   39430:	sbfiz	x1, x1, #6, #32
   39434:	ldr	x19, [x4, x2]
   39438:	clz	x19, x19
   3943c:	sub	x19, x1, x19
   39440:	sub	x19, x19, x27
   39444:	cset	w27, eq  // eq = none
   39448:	cmp	x19, #0x0
   3944c:	b.le	39470 <mpfr_cbrt@@Base+0x1a0>
   39450:	mov	w27, #0x1                   	// #1
   39454:	cbnz	w0, 395c0 <mpfr_cbrt@@Base+0x2f0>
   39458:	mov	x2, x19
   3945c:	add	x19, x19, x19, lsl #1
   39460:	add	x26, x26, x19
   39464:	mov	x1, x28
   39468:	mov	x0, x28
   3946c:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   39470:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   39474:	movk	x0, #0x5556
   39478:	smulh	x0, x26, x0
   3947c:	sub	x26, x0, x26, asr #63
   39480:	cbnz	w27, 39568 <mpfr_cbrt@@Base+0x298>
   39484:	mov	w2, #0x0                   	// #0
   39488:	mov	x1, x28
   3948c:	mov	x0, x23
   39490:	bl	c240 <mpfr_set_z@plt>
   39494:	ldr	x2, [x23, #16]
   39498:	add	w27, w27, w0
   3949c:	add	x26, x2, x26
   394a0:	str	x26, [x23, #16]
   394a4:	tbnz	w22, #31, 39628 <mpfr_cbrt@@Base+0x358>
   394a8:	mov	x0, x28
   394ac:	bl	c170 <mpfr_mpz_clear@plt>
   394b0:	ldr	x1, [x23, #16]
   394b4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   394b8:	ldr	x2, [x0, #2576]
   394bc:	add	x0, x0, #0xa10
   394c0:	blr	x2
   394c4:	ldr	w2, [sp, #108]
   394c8:	str	w2, [x20, x0]
   394cc:	add	x2, x20, x0
   394d0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   394d4:	ldr	x3, [x0, #2512]
   394d8:	add	x0, x0, #0x9d0
   394dc:	blr	x3
   394e0:	str	x24, [x20, x0]
   394e4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   394e8:	ldr	x3, [x0, #2544]
   394ec:	add	x0, x0, #0x9f0
   394f0:	blr	x3
   394f4:	str	x25, [x20, x0]
   394f8:	cmp	x25, x1
   394fc:	ccmp	x24, x1, #0x0, ge  // ge = tcont
   39500:	b.le	39538 <mpfr_cbrt@@Base+0x268>
   39504:	mov	w2, w21
   39508:	mov	w1, w27
   3950c:	mov	x0, x23
   39510:	bl	cb30 <mpfr_check_range@plt>
   39514:	ldp	x21, x22, [sp, #32]
   39518:	mov	w27, w0
   3951c:	ldp	x25, x26, [sp, #64]
   39520:	mov	w0, w27
   39524:	ldp	x19, x20, [sp, #16]
   39528:	ldp	x23, x24, [sp, #48]
   3952c:	ldp	x27, x28, [sp, #80]
   39530:	ldp	x29, x30, [sp], #128
   39534:	ret
   39538:	cbz	w27, 395a0 <mpfr_cbrt@@Base+0x2d0>
   3953c:	ldr	w0, [sp, #108]
   39540:	ldp	x21, x22, [sp, #32]
   39544:	orr	w23, w0, #0x8
   39548:	ldp	x25, x26, [sp, #64]
   3954c:	str	w23, [x2]
   39550:	mov	w0, w27
   39554:	ldp	x19, x20, [sp, #16]
   39558:	ldp	x23, x24, [sp, #48]
   3955c:	ldp	x27, x28, [sp, #80]
   39560:	ldp	x29, x30, [sp], #128
   39564:	ret
   39568:	tbnz	w22, #31, 39644 <mpfr_cbrt@@Base+0x374>
   3956c:	sub	w0, w21, #0x2
   39570:	tst	w0, #0xfffffffd
   39574:	b.eq	3958c <mpfr_cbrt@@Base+0x2bc>  // b.none
   39578:	cbnz	w21, 3963c <mpfr_cbrt@@Base+0x36c>
   3957c:	mov	x0, x28
   39580:	mov	x1, #0x0                   	// #0
   39584:	bl	bfe0 <__gmpz_tstbit@plt>
   39588:	cbz	w0, 3963c <mpfr_cbrt@@Base+0x36c>
   3958c:	mov	x1, x28
   39590:	mov	x0, x28
   39594:	mov	x2, #0x1                   	// #1
   39598:	bl	c360 <__gmpz_add_ui@plt>
   3959c:	b	39484 <mpfr_cbrt@@Base+0x1b4>
   395a0:	mov	w0, w27
   395a4:	ldp	x19, x20, [sp, #16]
   395a8:	ldp	x21, x22, [sp, #32]
   395ac:	ldp	x23, x24, [sp, #48]
   395b0:	ldp	x25, x26, [sp, #64]
   395b4:	ldp	x27, x28, [sp, #80]
   395b8:	ldp	x29, x30, [sp], #128
   395bc:	ret
   395c0:	mov	x0, x28
   395c4:	mov	x1, #0x0                   	// #0
   395c8:	bl	ba90 <__gmpz_scan1@plt>
   395cc:	cmp	x0, x19
   395d0:	cset	w27, lt  // lt = tstop
   395d4:	b	39458 <mpfr_cbrt@@Base+0x188>
   395d8:	sub	x26, x26, x1
   395dc:	mov	x2, x1
   395e0:	mov	x0, x28
   395e4:	mov	x1, x28
   395e8:	bl	c200 <__gmpz_mul_2exp@plt>
   395ec:	b	39404 <mpfr_cbrt@@Base+0x134>
   395f0:	sub	x26, x26, x2
   395f4:	mov	x1, x28
   395f8:	mov	x0, x28
   395fc:	bl	c200 <__gmpz_mul_2exp@plt>
   39600:	b	39404 <mpfr_cbrt@@Base+0x134>
   39604:	mov	x1, x28
   39608:	mov	x0, x23
   3960c:	mov	w2, #0x0                   	// #0
   39610:	bl	c240 <mpfr_set_z@plt>
   39614:	ldr	x1, [x23, #16]
   39618:	sub	w27, w0, #0x1
   3961c:	mov	w21, #0x3                   	// #3
   39620:	add	x26, x1, x26
   39624:	str	x26, [x23, #16]
   39628:	ldr	w0, [x23, #8]
   3962c:	neg	w27, w27
   39630:	neg	w0, w0
   39634:	str	w0, [x23, #8]
   39638:	b	394a8 <mpfr_cbrt@@Base+0x1d8>
   3963c:	mov	w27, #0xffffffff            	// #-1
   39640:	b	39484 <mpfr_cbrt@@Base+0x1b4>
   39644:	cmp	w21, #0x2
   39648:	b.eq	39604 <mpfr_cbrt@@Base+0x334>  // b.none
   3964c:	cmp	w21, #0x3
   39650:	b.ne	3956c <mpfr_cbrt@@Base+0x29c>  // b.any
   39654:	mov	w21, #0x2                   	// #2
   39658:	b	3958c <mpfr_cbrt@@Base+0x2bc>
   3965c:	mov	x2, #0x2                   	// #2
   39660:	movk	x2, #0x8000, lsl #48
   39664:	cmp	x1, x2
   39668:	b.eq	396a0 <mpfr_cbrt@@Base+0x3d0>  // b.none
   3966c:	cmp	x1, x0
   39670:	b.eq	3968c <mpfr_cbrt@@Base+0x3bc>  // b.none
   39674:	ldr	w1, [x19, #8]
   39678:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3967c:	mov	w27, #0x0                   	// #0
   39680:	str	w1, [x23, #8]
   39684:	str	x0, [x23, #16]
   39688:	b	39520 <mpfr_cbrt@@Base+0x250>
   3968c:	ldr	w0, [x19, #8]
   39690:	mov	w27, #0x0                   	// #0
   39694:	str	w0, [x23, #8]
   39698:	str	x1, [x23, #16]
   3969c:	b	39520 <mpfr_cbrt@@Base+0x250>
   396a0:	mrs	x2, tpidr_el0
   396a4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   396a8:	ldr	x3, [x0, #2576]
   396ac:	add	x0, x0, #0xa10
   396b0:	blr	x3
   396b4:	add	x0, x2, x0
   396b8:	str	x1, [x23, #16]
   396bc:	mov	w27, #0x0                   	// #0
   396c0:	ldr	w1, [x0]
   396c4:	orr	w1, w1, #0x4
   396c8:	str	w1, [x0]
   396cc:	b	39520 <mpfr_cbrt@@Base+0x250>

00000000000396d0 <mpfr_fits_sshort_p@@Base>:
   396d0:	stp	x29, x30, [sp, #-112]!
   396d4:	mov	x29, sp
   396d8:	stp	x19, x20, [sp, #16]
   396dc:	mov	x19, x0
   396e0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   396e4:	ldr	x3, [x19, #16]
   396e8:	cmp	x3, x0
   396ec:	b.le	397e4 <mpfr_fits_sshort_p@@Base+0x114>
   396f0:	cmp	x3, #0x0
   396f4:	mov	w20, #0x1                   	// #1
   396f8:	b.le	397c0 <mpfr_fits_sshort_p@@Base+0xf0>
   396fc:	stp	x21, x22, [sp, #32]
   39700:	mov	w0, #0xf                   	// #15
   39704:	ldr	w22, [x19, #8]
   39708:	mov	w21, w1
   3970c:	mov	w1, #0xe                   	// #14
   39710:	cmp	w22, #0x0
   39714:	mov	w2, #0x10                  	// #16
   39718:	csel	w1, w1, w0, ge  // ge = tcont
   3971c:	csel	w0, w0, w2, ge  // ge = tcont
   39720:	cmp	x3, w1, sxtw
   39724:	b.le	397d0 <mpfr_fits_sshort_p@@Base+0x100>
   39728:	add	w1, w0, w20
   3972c:	mov	w20, #0x0                   	// #0
   39730:	cmp	x3, w1, sxtw
   39734:	b.ge	397d0 <mpfr_fits_sshort_p@@Base+0x100>  // b.tcont
   39738:	stp	x23, x24, [sp, #48]
   3973c:	mrs	x24, tpidr_el0
   39740:	sxtw	x20, w0
   39744:	add	x23, sp, #0x50
   39748:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3974c:	ldr	x1, [x0, #2576]
   39750:	add	x0, x0, #0xa10
   39754:	blr	x1
   39758:	mov	x1, x20
   3975c:	str	x25, [sp, #64]
   39760:	ldr	w25, [x24, x0]
   39764:	mov	x0, x23
   39768:	bl	ca80 <mpfr_init2@plt>
   3976c:	ldr	w3, [x19, #8]
   39770:	cmp	w21, #0x5
   39774:	mov	w2, #0x4                   	// #4
   39778:	mov	x0, x23
   3977c:	csel	w2, w21, w2, ne  // ne = any
   39780:	mov	x1, x19
   39784:	bl	c6a0 <mpfr_set4@plt>
   39788:	tbnz	w22, #31, 39800 <mpfr_fits_sshort_p@@Base+0x130>
   3978c:	ldr	x0, [sp, #96]
   39790:	cmp	x0, x20
   39794:	cset	w20, eq  // eq = none
   39798:	mov	x0, x23
   3979c:	bl	c070 <mpfr_clear@plt>
   397a0:	ldp	x21, x22, [sp, #32]
   397a4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   397a8:	ldr	x1, [x0, #2576]
   397ac:	add	x0, x0, #0xa10
   397b0:	blr	x1
   397b4:	str	w25, [x24, x0]
   397b8:	ldp	x23, x24, [sp, #48]
   397bc:	ldr	x25, [sp, #64]
   397c0:	mov	w0, w20
   397c4:	ldp	x19, x20, [sp, #16]
   397c8:	ldp	x29, x30, [sp], #112
   397cc:	ret
   397d0:	mov	w0, w20
   397d4:	ldp	x19, x20, [sp, #16]
   397d8:	ldp	x21, x22, [sp, #32]
   397dc:	ldp	x29, x30, [sp], #112
   397e0:	ret
   397e4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   397e8:	cmp	x3, x0
   397ec:	cset	w20, eq  // eq = none
   397f0:	mov	w0, w20
   397f4:	ldp	x19, x20, [sp, #16]
   397f8:	ldp	x29, x30, [sp], #112
   397fc:	ret
   39800:	mov	x0, x23
   39804:	mov	x2, #0x0                   	// #0
   39808:	mov	x1, #0xffffffffffff8000    	// #-32768
   3980c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   39810:	mvn	w20, w0
   39814:	lsr	w20, w20, #31
   39818:	b	39798 <mpfr_fits_sshort_p@@Base+0xc8>
   3981c:	nop

0000000000039820 <mpfr_fits_sint_p@@Base>:
   39820:	stp	x29, x30, [sp, #-112]!
   39824:	mov	x29, sp
   39828:	stp	x19, x20, [sp, #16]
   3982c:	mov	x19, x0
   39830:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   39834:	ldr	x3, [x19, #16]
   39838:	cmp	x3, x0
   3983c:	b.le	39934 <mpfr_fits_sint_p@@Base+0x114>
   39840:	cmp	x3, #0x0
   39844:	mov	w20, #0x1                   	// #1
   39848:	b.le	39910 <mpfr_fits_sint_p@@Base+0xf0>
   3984c:	stp	x21, x22, [sp, #32]
   39850:	mov	w0, #0x1f                  	// #31
   39854:	ldr	w22, [x19, #8]
   39858:	mov	w21, w1
   3985c:	mov	w1, #0x1e                  	// #30
   39860:	cmp	w22, #0x0
   39864:	mov	w2, #0x20                  	// #32
   39868:	csel	w1, w1, w0, ge  // ge = tcont
   3986c:	csel	w0, w0, w2, ge  // ge = tcont
   39870:	cmp	x3, w1, sxtw
   39874:	b.le	39920 <mpfr_fits_sint_p@@Base+0x100>
   39878:	add	w1, w0, w20
   3987c:	mov	w20, #0x0                   	// #0
   39880:	cmp	x3, w1, sxtw
   39884:	b.ge	39920 <mpfr_fits_sint_p@@Base+0x100>  // b.tcont
   39888:	stp	x23, x24, [sp, #48]
   3988c:	mrs	x24, tpidr_el0
   39890:	sxtw	x20, w0
   39894:	add	x23, sp, #0x50
   39898:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3989c:	ldr	x1, [x0, #2576]
   398a0:	add	x0, x0, #0xa10
   398a4:	blr	x1
   398a8:	mov	x1, x20
   398ac:	str	x25, [sp, #64]
   398b0:	ldr	w25, [x24, x0]
   398b4:	mov	x0, x23
   398b8:	bl	ca80 <mpfr_init2@plt>
   398bc:	ldr	w3, [x19, #8]
   398c0:	cmp	w21, #0x5
   398c4:	mov	w2, #0x4                   	// #4
   398c8:	mov	x0, x23
   398cc:	csel	w2, w21, w2, ne  // ne = any
   398d0:	mov	x1, x19
   398d4:	bl	c6a0 <mpfr_set4@plt>
   398d8:	tbnz	w22, #31, 39950 <mpfr_fits_sint_p@@Base+0x130>
   398dc:	ldr	x0, [sp, #96]
   398e0:	cmp	x0, x20
   398e4:	cset	w20, eq  // eq = none
   398e8:	mov	x0, x23
   398ec:	bl	c070 <mpfr_clear@plt>
   398f0:	ldp	x21, x22, [sp, #32]
   398f4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   398f8:	ldr	x1, [x0, #2576]
   398fc:	add	x0, x0, #0xa10
   39900:	blr	x1
   39904:	str	w25, [x24, x0]
   39908:	ldp	x23, x24, [sp, #48]
   3990c:	ldr	x25, [sp, #64]
   39910:	mov	w0, w20
   39914:	ldp	x19, x20, [sp, #16]
   39918:	ldp	x29, x30, [sp], #112
   3991c:	ret
   39920:	mov	w0, w20
   39924:	ldp	x19, x20, [sp, #16]
   39928:	ldp	x21, x22, [sp, #32]
   3992c:	ldp	x29, x30, [sp], #112
   39930:	ret
   39934:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   39938:	cmp	x3, x0
   3993c:	cset	w20, eq  // eq = none
   39940:	mov	w0, w20
   39944:	ldp	x19, x20, [sp, #16]
   39948:	ldp	x29, x30, [sp], #112
   3994c:	ret
   39950:	mov	x0, x23
   39954:	mov	x2, #0x0                   	// #0
   39958:	mov	x1, #0xffffffff80000000    	// #-2147483648
   3995c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   39960:	mvn	w20, w0
   39964:	lsr	w20, w20, #31
   39968:	b	398e8 <mpfr_fits_sint_p@@Base+0xc8>
   3996c:	nop

0000000000039970 <mpfr_fits_slong_p@@Base>:
   39970:	stp	x29, x30, [sp, #-112]!
   39974:	mov	x29, sp
   39978:	stp	x19, x20, [sp, #16]
   3997c:	mov	x19, x0
   39980:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   39984:	ldr	x3, [x19, #16]
   39988:	cmp	x3, x0
   3998c:	b.le	39a84 <mpfr_fits_slong_p@@Base+0x114>
   39990:	cmp	x3, #0x0
   39994:	mov	w20, #0x1                   	// #1
   39998:	b.le	39a60 <mpfr_fits_slong_p@@Base+0xf0>
   3999c:	stp	x21, x22, [sp, #32]
   399a0:	mov	w0, #0x3f                  	// #63
   399a4:	ldr	w22, [x19, #8]
   399a8:	mov	w21, w1
   399ac:	mov	w1, #0x3e                  	// #62
   399b0:	cmp	w22, #0x0
   399b4:	mov	w2, #0x40                  	// #64
   399b8:	csel	w1, w1, w0, ge  // ge = tcont
   399bc:	csel	w0, w0, w2, ge  // ge = tcont
   399c0:	cmp	x3, w1, sxtw
   399c4:	b.le	39a70 <mpfr_fits_slong_p@@Base+0x100>
   399c8:	add	w1, w0, w20
   399cc:	mov	w20, #0x0                   	// #0
   399d0:	cmp	x3, w1, sxtw
   399d4:	b.ge	39a70 <mpfr_fits_slong_p@@Base+0x100>  // b.tcont
   399d8:	stp	x23, x24, [sp, #48]
   399dc:	mrs	x24, tpidr_el0
   399e0:	sxtw	x20, w0
   399e4:	add	x23, sp, #0x50
   399e8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   399ec:	ldr	x1, [x0, #2576]
   399f0:	add	x0, x0, #0xa10
   399f4:	blr	x1
   399f8:	mov	x1, x20
   399fc:	str	x25, [sp, #64]
   39a00:	ldr	w25, [x24, x0]
   39a04:	mov	x0, x23
   39a08:	bl	ca80 <mpfr_init2@plt>
   39a0c:	ldr	w3, [x19, #8]
   39a10:	cmp	w21, #0x5
   39a14:	mov	w2, #0x4                   	// #4
   39a18:	mov	x0, x23
   39a1c:	csel	w2, w21, w2, ne  // ne = any
   39a20:	mov	x1, x19
   39a24:	bl	c6a0 <mpfr_set4@plt>
   39a28:	tbnz	w22, #31, 39a94 <mpfr_fits_slong_p@@Base+0x124>
   39a2c:	ldr	x0, [sp, #96]
   39a30:	cmp	x0, x20
   39a34:	cset	w20, eq  // eq = none
   39a38:	mov	x0, x23
   39a3c:	bl	c070 <mpfr_clear@plt>
   39a40:	ldp	x21, x22, [sp, #32]
   39a44:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   39a48:	ldr	x1, [x0, #2576]
   39a4c:	add	x0, x0, #0xa10
   39a50:	blr	x1
   39a54:	str	w25, [x24, x0]
   39a58:	ldp	x23, x24, [sp, #48]
   39a5c:	ldr	x25, [sp, #64]
   39a60:	mov	w0, w20
   39a64:	ldp	x19, x20, [sp, #16]
   39a68:	ldp	x29, x30, [sp], #112
   39a6c:	ret
   39a70:	mov	w0, w20
   39a74:	ldp	x19, x20, [sp, #16]
   39a78:	ldp	x21, x22, [sp, #32]
   39a7c:	ldp	x29, x30, [sp], #112
   39a80:	ret
   39a84:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   39a88:	cmp	x3, x0
   39a8c:	cset	w20, eq  // eq = none
   39a90:	b	39a60 <mpfr_fits_slong_p@@Base+0xf0>
   39a94:	mov	x0, x23
   39a98:	mov	x2, #0x0                   	// #0
   39a9c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   39aa0:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   39aa4:	mvn	w20, w0
   39aa8:	lsr	w20, w20, #31
   39aac:	b	39a38 <mpfr_fits_slong_p@@Base+0xc8>

0000000000039ab0 <mpfr_fits_ushort_p@@Base>:
   39ab0:	stp	x29, x30, [sp, #-96]!
   39ab4:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   39ab8:	mov	x29, sp
   39abc:	stp	x19, x20, [sp, #16]
   39ac0:	mov	w20, w1
   39ac4:	ldr	x1, [x0, #16]
   39ac8:	stp	x21, x22, [sp, #32]
   39acc:	cmp	x1, x2
   39ad0:	b.le	39ba0 <mpfr_fits_ushort_p@@Base+0xf0>
   39ad4:	ldr	w2, [x0, #8]
   39ad8:	mov	x19, x0
   39adc:	tbnz	w2, #31, 39b7c <mpfr_fits_ushort_p@@Base+0xcc>
   39ae0:	cmp	x1, #0xf
   39ae4:	mov	w21, #0x1                   	// #1
   39ae8:	b.le	39b68 <mpfr_fits_ushort_p@@Base+0xb8>
   39aec:	cmp	x1, #0x10
   39af0:	mov	w21, #0x0                   	// #0
   39af4:	b.ne	39b68 <mpfr_fits_ushort_p@@Base+0xb8>  // b.any
   39af8:	mrs	x22, tpidr_el0
   39afc:	add	x21, sp, #0x40
   39b00:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   39b04:	ldr	x2, [x0, #2576]
   39b08:	add	x0, x0, #0xa10
   39b0c:	blr	x2
   39b10:	str	x23, [sp, #48]
   39b14:	ldr	w23, [x22, x0]
   39b18:	mov	x0, x21
   39b1c:	bl	ca80 <mpfr_init2@plt>
   39b20:	ldr	w3, [x19, #8]
   39b24:	cmp	w20, #0x5
   39b28:	mov	x0, x21
   39b2c:	mov	x1, x19
   39b30:	mov	w2, #0x2                   	// #2
   39b34:	csel	w2, w20, w2, ne  // ne = any
   39b38:	bl	c6a0 <mpfr_set4@plt>
   39b3c:	ldr	x1, [sp, #80]
   39b40:	mov	x0, x21
   39b44:	cmp	x1, #0x10
   39b48:	cset	w21, eq  // eq = none
   39b4c:	bl	c070 <mpfr_clear@plt>
   39b50:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   39b54:	ldr	x1, [x0, #2576]
   39b58:	add	x0, x0, #0xa10
   39b5c:	blr	x1
   39b60:	str	w23, [x22, x0]
   39b64:	ldr	x23, [sp, #48]
   39b68:	mov	w0, w21
   39b6c:	ldp	x19, x20, [sp, #16]
   39b70:	ldp	x21, x22, [sp, #32]
   39b74:	ldp	x29, x30, [sp], #96
   39b78:	ret
   39b7c:	cmp	x1, #0x0
   39b80:	mov	w21, #0x0                   	// #0
   39b84:	b.gt	39b68 <mpfr_fits_ushort_p@@Base+0xb8>
   39b88:	cbnz	w20, 39bc0 <mpfr_fits_ushort_p@@Base+0x110>
   39b8c:	mov	w21, #0x1                   	// #1
   39b90:	cbnz	x1, 39b68 <mpfr_fits_ushort_p@@Base+0xb8>
   39b94:	bl	bf00 <mpfr_powerof2_raw@plt>
   39b98:	mov	w21, w0
   39b9c:	b	39b68 <mpfr_fits_ushort_p@@Base+0xb8>
   39ba0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   39ba4:	cmp	x1, x0
   39ba8:	cset	w21, eq  // eq = none
   39bac:	mov	w0, w21
   39bb0:	ldp	x19, x20, [sp, #16]
   39bb4:	ldp	x21, x22, [sp, #32]
   39bb8:	ldp	x29, x30, [sp], #96
   39bbc:	ret
   39bc0:	sub	w1, w20, #0x1
   39bc4:	cmp	w1, #0x1
   39bc8:	cset	w21, ls  // ls = plast
   39bcc:	b	39b68 <mpfr_fits_ushort_p@@Base+0xb8>

0000000000039bd0 <mpfr_fits_uint_p@@Base>:
   39bd0:	stp	x29, x30, [sp, #-96]!
   39bd4:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   39bd8:	mov	x29, sp
   39bdc:	stp	x19, x20, [sp, #16]
   39be0:	mov	w20, w1
   39be4:	ldr	x1, [x0, #16]
   39be8:	stp	x21, x22, [sp, #32]
   39bec:	cmp	x1, x2
   39bf0:	b.le	39cc0 <mpfr_fits_uint_p@@Base+0xf0>
   39bf4:	ldr	w2, [x0, #8]
   39bf8:	mov	x19, x0
   39bfc:	tbnz	w2, #31, 39c9c <mpfr_fits_uint_p@@Base+0xcc>
   39c00:	cmp	x1, #0x1f
   39c04:	mov	w21, #0x1                   	// #1
   39c08:	b.le	39c88 <mpfr_fits_uint_p@@Base+0xb8>
   39c0c:	cmp	x1, #0x20
   39c10:	mov	w21, #0x0                   	// #0
   39c14:	b.ne	39c88 <mpfr_fits_uint_p@@Base+0xb8>  // b.any
   39c18:	mrs	x22, tpidr_el0
   39c1c:	add	x21, sp, #0x40
   39c20:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   39c24:	ldr	x2, [x0, #2576]
   39c28:	add	x0, x0, #0xa10
   39c2c:	blr	x2
   39c30:	str	x23, [sp, #48]
   39c34:	ldr	w23, [x22, x0]
   39c38:	mov	x0, x21
   39c3c:	bl	ca80 <mpfr_init2@plt>
   39c40:	ldr	w3, [x19, #8]
   39c44:	cmp	w20, #0x5
   39c48:	mov	x0, x21
   39c4c:	mov	x1, x19
   39c50:	mov	w2, #0x2                   	// #2
   39c54:	csel	w2, w20, w2, ne  // ne = any
   39c58:	bl	c6a0 <mpfr_set4@plt>
   39c5c:	ldr	x1, [sp, #80]
   39c60:	mov	x0, x21
   39c64:	cmp	x1, #0x20
   39c68:	cset	w21, eq  // eq = none
   39c6c:	bl	c070 <mpfr_clear@plt>
   39c70:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   39c74:	ldr	x1, [x0, #2576]
   39c78:	add	x0, x0, #0xa10
   39c7c:	blr	x1
   39c80:	str	w23, [x22, x0]
   39c84:	ldr	x23, [sp, #48]
   39c88:	mov	w0, w21
   39c8c:	ldp	x19, x20, [sp, #16]
   39c90:	ldp	x21, x22, [sp, #32]
   39c94:	ldp	x29, x30, [sp], #96
   39c98:	ret
   39c9c:	cmp	x1, #0x0
   39ca0:	mov	w21, #0x0                   	// #0
   39ca4:	b.gt	39c88 <mpfr_fits_uint_p@@Base+0xb8>
   39ca8:	cbnz	w20, 39ce0 <mpfr_fits_uint_p@@Base+0x110>
   39cac:	mov	w21, #0x1                   	// #1
   39cb0:	cbnz	x1, 39c88 <mpfr_fits_uint_p@@Base+0xb8>
   39cb4:	bl	bf00 <mpfr_powerof2_raw@plt>
   39cb8:	mov	w21, w0
   39cbc:	b	39c88 <mpfr_fits_uint_p@@Base+0xb8>
   39cc0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   39cc4:	cmp	x1, x0
   39cc8:	cset	w21, eq  // eq = none
   39ccc:	mov	w0, w21
   39cd0:	ldp	x19, x20, [sp, #16]
   39cd4:	ldp	x21, x22, [sp, #32]
   39cd8:	ldp	x29, x30, [sp], #96
   39cdc:	ret
   39ce0:	sub	w1, w20, #0x1
   39ce4:	cmp	w1, #0x1
   39ce8:	cset	w21, ls  // ls = plast
   39cec:	b	39c88 <mpfr_fits_uint_p@@Base+0xb8>

0000000000039cf0 <mpfr_fits_ulong_p@@Base>:
   39cf0:	stp	x29, x30, [sp, #-96]!
   39cf4:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   39cf8:	mov	x29, sp
   39cfc:	stp	x19, x20, [sp, #16]
   39d00:	mov	w20, w1
   39d04:	ldr	x1, [x0, #16]
   39d08:	stp	x21, x22, [sp, #32]
   39d0c:	cmp	x1, x2
   39d10:	b.le	39de0 <mpfr_fits_ulong_p@@Base+0xf0>
   39d14:	ldr	w2, [x0, #8]
   39d18:	mov	x19, x0
   39d1c:	tbnz	w2, #31, 39dbc <mpfr_fits_ulong_p@@Base+0xcc>
   39d20:	cmp	x1, #0x3f
   39d24:	mov	w21, #0x1                   	// #1
   39d28:	b.le	39da8 <mpfr_fits_ulong_p@@Base+0xb8>
   39d2c:	cmp	x1, #0x40
   39d30:	mov	w21, #0x0                   	// #0
   39d34:	b.ne	39da8 <mpfr_fits_ulong_p@@Base+0xb8>  // b.any
   39d38:	mrs	x22, tpidr_el0
   39d3c:	add	x21, sp, #0x40
   39d40:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   39d44:	ldr	x2, [x0, #2576]
   39d48:	add	x0, x0, #0xa10
   39d4c:	blr	x2
   39d50:	str	x23, [sp, #48]
   39d54:	ldr	w23, [x22, x0]
   39d58:	mov	x0, x21
   39d5c:	bl	ca80 <mpfr_init2@plt>
   39d60:	ldr	w3, [x19, #8]
   39d64:	cmp	w20, #0x5
   39d68:	mov	x0, x21
   39d6c:	mov	x1, x19
   39d70:	mov	w2, #0x2                   	// #2
   39d74:	csel	w2, w20, w2, ne  // ne = any
   39d78:	bl	c6a0 <mpfr_set4@plt>
   39d7c:	ldr	x1, [sp, #80]
   39d80:	mov	x0, x21
   39d84:	cmp	x1, #0x40
   39d88:	cset	w21, eq  // eq = none
   39d8c:	bl	c070 <mpfr_clear@plt>
   39d90:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   39d94:	ldr	x1, [x0, #2576]
   39d98:	add	x0, x0, #0xa10
   39d9c:	blr	x1
   39da0:	str	w23, [x22, x0]
   39da4:	ldr	x23, [sp, #48]
   39da8:	mov	w0, w21
   39dac:	ldp	x19, x20, [sp, #16]
   39db0:	ldp	x21, x22, [sp, #32]
   39db4:	ldp	x29, x30, [sp], #96
   39db8:	ret
   39dbc:	cmp	x1, #0x0
   39dc0:	mov	w21, #0x0                   	// #0
   39dc4:	b.gt	39da8 <mpfr_fits_ulong_p@@Base+0xb8>
   39dc8:	cbnz	w20, 39e00 <mpfr_fits_ulong_p@@Base+0x110>
   39dcc:	mov	w21, #0x1                   	// #1
   39dd0:	cbnz	x1, 39da8 <mpfr_fits_ulong_p@@Base+0xb8>
   39dd4:	bl	bf00 <mpfr_powerof2_raw@plt>
   39dd8:	mov	w21, w0
   39ddc:	b	39da8 <mpfr_fits_ulong_p@@Base+0xb8>
   39de0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   39de4:	cmp	x1, x0
   39de8:	cset	w21, eq  // eq = none
   39dec:	mov	w0, w21
   39df0:	ldp	x19, x20, [sp, #16]
   39df4:	ldp	x21, x22, [sp, #32]
   39df8:	ldp	x29, x30, [sp], #96
   39dfc:	ret
   39e00:	sub	w1, w20, #0x1
   39e04:	cmp	w1, #0x1
   39e08:	cset	w21, ls  // ls = plast
   39e0c:	b	39da8 <mpfr_fits_ulong_p@@Base+0xb8>

0000000000039e10 <mpfr_fits_uintmax_p@@Base>:
   39e10:	stp	x29, x30, [sp, #-96]!
   39e14:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   39e18:	mov	x29, sp
   39e1c:	stp	x19, x20, [sp, #16]
   39e20:	mov	w20, w1
   39e24:	ldr	x1, [x0, #16]
   39e28:	stp	x21, x22, [sp, #32]
   39e2c:	cmp	x1, x2
   39e30:	b.le	39f00 <mpfr_fits_uintmax_p@@Base+0xf0>
   39e34:	ldr	w2, [x0, #8]
   39e38:	mov	x19, x0
   39e3c:	tbnz	w2, #31, 39edc <mpfr_fits_uintmax_p@@Base+0xcc>
   39e40:	cmp	x1, #0x3f
   39e44:	mov	w21, #0x1                   	// #1
   39e48:	b.le	39ec8 <mpfr_fits_uintmax_p@@Base+0xb8>
   39e4c:	cmp	x1, #0x40
   39e50:	mov	w21, #0x0                   	// #0
   39e54:	b.ne	39ec8 <mpfr_fits_uintmax_p@@Base+0xb8>  // b.any
   39e58:	mrs	x22, tpidr_el0
   39e5c:	add	x21, sp, #0x40
   39e60:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   39e64:	ldr	x2, [x0, #2576]
   39e68:	add	x0, x0, #0xa10
   39e6c:	blr	x2
   39e70:	str	x23, [sp, #48]
   39e74:	ldr	w23, [x22, x0]
   39e78:	mov	x0, x21
   39e7c:	bl	ca80 <mpfr_init2@plt>
   39e80:	ldr	w3, [x19, #8]
   39e84:	cmp	w20, #0x5
   39e88:	mov	x0, x21
   39e8c:	mov	x1, x19
   39e90:	mov	w2, #0x2                   	// #2
   39e94:	csel	w2, w20, w2, ne  // ne = any
   39e98:	bl	c6a0 <mpfr_set4@plt>
   39e9c:	ldr	x1, [sp, #80]
   39ea0:	mov	x0, x21
   39ea4:	cmp	x1, #0x40
   39ea8:	cset	w21, eq  // eq = none
   39eac:	bl	c070 <mpfr_clear@plt>
   39eb0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   39eb4:	ldr	x1, [x0, #2576]
   39eb8:	add	x0, x0, #0xa10
   39ebc:	blr	x1
   39ec0:	str	w23, [x22, x0]
   39ec4:	ldr	x23, [sp, #48]
   39ec8:	mov	w0, w21
   39ecc:	ldp	x19, x20, [sp, #16]
   39ed0:	ldp	x21, x22, [sp, #32]
   39ed4:	ldp	x29, x30, [sp], #96
   39ed8:	ret
   39edc:	cmp	x1, #0x0
   39ee0:	mov	w21, #0x0                   	// #0
   39ee4:	b.gt	39ec8 <mpfr_fits_uintmax_p@@Base+0xb8>
   39ee8:	cbnz	w20, 39f20 <mpfr_fits_uintmax_p@@Base+0x110>
   39eec:	mov	w21, #0x1                   	// #1
   39ef0:	cbnz	x1, 39ec8 <mpfr_fits_uintmax_p@@Base+0xb8>
   39ef4:	bl	bf00 <mpfr_powerof2_raw@plt>
   39ef8:	mov	w21, w0
   39efc:	b	39ec8 <mpfr_fits_uintmax_p@@Base+0xb8>
   39f00:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   39f04:	cmp	x1, x0
   39f08:	cset	w21, eq  // eq = none
   39f0c:	mov	w0, w21
   39f10:	ldp	x19, x20, [sp, #16]
   39f14:	ldp	x21, x22, [sp, #32]
   39f18:	ldp	x29, x30, [sp], #96
   39f1c:	ret
   39f20:	sub	w1, w20, #0x1
   39f24:	cmp	w1, #0x1
   39f28:	cset	w21, ls  // ls = plast
   39f2c:	b	39ec8 <mpfr_fits_uintmax_p@@Base+0xb8>

0000000000039f30 <mpfr_fits_intmax_p@@Base>:
   39f30:	stp	x29, x30, [sp, #-144]!
   39f34:	mov	x29, sp
   39f38:	stp	x19, x20, [sp, #16]
   39f3c:	mov	x19, x0
   39f40:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   39f44:	stp	x21, x22, [sp, #32]
   39f48:	ldr	x3, [x19, #16]
   39f4c:	cmp	x3, x0
   39f50:	b.le	3a060 <mpfr_fits_intmax_p@@Base+0x130>
   39f54:	cmp	x3, #0x0
   39f58:	mov	w22, #0x1                   	// #1
   39f5c:	b.le	3a018 <mpfr_fits_intmax_p@@Base+0xe8>
   39f60:	stp	x23, x24, [sp, #48]
   39f64:	mov	w0, #0x3f                  	// #63
   39f68:	ldr	w23, [x19, #8]
   39f6c:	mov	w21, w1
   39f70:	mov	w1, #0x3e                  	// #62
   39f74:	cmp	w23, #0x0
   39f78:	mov	w2, #0x40                  	// #64
   39f7c:	csel	w1, w1, w0, ge  // ge = tcont
   39f80:	csel	w0, w0, w2, ge  // ge = tcont
   39f84:	cmp	x3, w1, sxtw
   39f88:	b.le	3a02c <mpfr_fits_intmax_p@@Base+0xfc>
   39f8c:	add	w1, w0, w22
   39f90:	cmp	x3, w1, sxtw
   39f94:	b.ge	3a044 <mpfr_fits_intmax_p@@Base+0x114>  // b.tcont
   39f98:	stp	x25, x26, [sp, #64]
   39f9c:	mrs	x25, tpidr_el0
   39fa0:	sxtw	x20, w0
   39fa4:	add	x24, sp, #0x50
   39fa8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   39fac:	ldr	x1, [x0, #2576]
   39fb0:	add	x0, x0, #0xa10
   39fb4:	blr	x1
   39fb8:	mov	x1, x20
   39fbc:	ldr	w26, [x25, x0]
   39fc0:	mov	x0, x24
   39fc4:	bl	ca80 <mpfr_init2@plt>
   39fc8:	ldr	w3, [x19, #8]
   39fcc:	cmp	w21, #0x5
   39fd0:	mov	w2, #0x4                   	// #4
   39fd4:	mov	x0, x24
   39fd8:	csel	w2, w21, w2, ne  // ne = any
   39fdc:	mov	x1, x19
   39fe0:	bl	c6a0 <mpfr_set4@plt>
   39fe4:	tbnz	w23, #31, 3a070 <mpfr_fits_intmax_p@@Base+0x140>
   39fe8:	ldr	x0, [sp, #96]
   39fec:	cmp	x0, x20
   39ff0:	cset	w22, eq  // eq = none
   39ff4:	mov	x0, x24
   39ff8:	bl	c070 <mpfr_clear@plt>
   39ffc:	ldp	x23, x24, [sp, #48]
   3a000:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3a004:	ldr	x1, [x0, #2576]
   3a008:	add	x0, x0, #0xa10
   3a00c:	blr	x1
   3a010:	str	w26, [x25, x0]
   3a014:	ldp	x25, x26, [sp, #64]
   3a018:	mov	w0, w22
   3a01c:	ldp	x19, x20, [sp, #16]
   3a020:	ldp	x21, x22, [sp, #32]
   3a024:	ldp	x29, x30, [sp], #144
   3a028:	ret
   3a02c:	mov	w0, w22
   3a030:	ldp	x19, x20, [sp, #16]
   3a034:	ldp	x21, x22, [sp, #32]
   3a038:	ldp	x23, x24, [sp, #48]
   3a03c:	ldp	x29, x30, [sp], #144
   3a040:	ret
   3a044:	mov	w22, #0x0                   	// #0
   3a048:	mov	w0, w22
   3a04c:	ldp	x19, x20, [sp, #16]
   3a050:	ldp	x21, x22, [sp, #32]
   3a054:	ldp	x23, x24, [sp, #48]
   3a058:	ldp	x29, x30, [sp], #144
   3a05c:	ret
   3a060:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3a064:	cmp	x3, x0
   3a068:	cset	w22, eq  // eq = none
   3a06c:	b	3a018 <mpfr_fits_intmax_p@@Base+0xe8>
   3a070:	add	x19, sp, #0x70
   3a074:	mov	x1, x20
   3a078:	mov	x0, x19
   3a07c:	bl	ca80 <mpfr_init2@plt>
   3a080:	mov	x0, x19
   3a084:	mov	w2, #0x0                   	// #0
   3a088:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3a08c:	bl	c080 <__gmpfr_set_sj@plt>
   3a090:	mov	w2, w22
   3a094:	mov	x1, x19
   3a098:	mov	x0, x24
   3a09c:	bl	c9a0 <mpfr_cmp3@plt>
   3a0a0:	mov	w22, w0
   3a0a4:	mov	x0, x19
   3a0a8:	mvn	w22, w22
   3a0ac:	lsr	w22, w22, #31
   3a0b0:	bl	c070 <mpfr_clear@plt>
   3a0b4:	b	39ff4 <mpfr_fits_intmax_p@@Base+0xc4>

000000000003a0b8 <mpfr_get_si@@Base>:
   3a0b8:	stp	x29, x30, [sp, #-128]!
   3a0bc:	mov	x29, sp
   3a0c0:	stp	x19, x20, [sp, #16]
   3a0c4:	mov	x20, x0
   3a0c8:	stp	x25, x26, [sp, #64]
   3a0cc:	mov	w26, w1
   3a0d0:	bl	c790 <mpfr_fits_slong_p@plt>
   3a0d4:	cbz	w0, 3a234 <mpfr_get_si@@Base+0x17c>
   3a0d8:	ldr	x0, [x20, #16]
   3a0dc:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   3a0e0:	cmp	x0, x25
   3a0e4:	b.eq	3a21c <mpfr_get_si@@Base+0x164>  // b.none
   3a0e8:	mrs	x19, tpidr_el0
   3a0ec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3a0f0:	ldr	x1, [x0, #2576]
   3a0f4:	add	x0, x0, #0xa10
   3a0f8:	blr	x1
   3a0fc:	stp	x23, x24, [sp, #48]
   3a100:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   3a104:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   3a108:	ldr	w23, [x19, x0]
   3a10c:	add	x24, sp, #0x60
   3a110:	str	x27, [sp, #80]
   3a114:	add	x27, x19, x0
   3a118:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3a11c:	ldr	x1, [x0, #2512]
   3a120:	add	x0, x0, #0x9d0
   3a124:	blr	x1
   3a128:	add	x3, x19, x0
   3a12c:	stp	x21, x22, [sp, #32]
   3a130:	mov	x1, #0x3f                  	// #63
   3a134:	ldr	x22, [x19, x0]
   3a138:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3a13c:	ldr	x5, [x0, #2544]
   3a140:	add	x0, x0, #0x9f0
   3a144:	blr	x5
   3a148:	str	x4, [x3]
   3a14c:	ldr	x21, [x19, x0]
   3a150:	str	x2, [x19, x0]
   3a154:	mov	x0, x24
   3a158:	bl	ca80 <mpfr_init2@plt>
   3a15c:	mov	x1, x20
   3a160:	mov	w2, w26
   3a164:	mov	x0, x24
   3a168:	bl	c300 <mpfr_rint@plt>
   3a16c:	ldr	x1, [sp, #112]
   3a170:	ldr	w0, [x27]
   3a174:	cmp	x1, x25
   3a178:	orr	w23, w23, w0
   3a17c:	b.eq	3a280 <mpfr_get_si@@Base+0x1c8>  // b.none
   3a180:	ldr	x0, [sp, #96]
   3a184:	neg	w1, w1
   3a188:	ldr	x2, [sp, #120]
   3a18c:	sub	x0, x0, #0x1
   3a190:	ldr	w3, [x20, #8]
   3a194:	asr	x0, x0, #6
   3a198:	cmp	w3, #0x0
   3a19c:	ldr	x20, [x2, x0, lsl #3]
   3a1a0:	lsr	x20, x20, x1
   3a1a4:	b.le	3a20c <mpfr_get_si@@Base+0x154>
   3a1a8:	mov	x0, x24
   3a1ac:	bl	c070 <mpfr_clear@plt>
   3a1b0:	ldr	x27, [sp, #80]
   3a1b4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3a1b8:	ldr	x1, [x0, #2576]
   3a1bc:	add	x0, x0, #0xa10
   3a1c0:	blr	x1
   3a1c4:	str	w23, [x19, x0]
   3a1c8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3a1cc:	ldr	x1, [x0, #2512]
   3a1d0:	add	x0, x0, #0x9d0
   3a1d4:	blr	x1
   3a1d8:	str	x22, [x19, x0]
   3a1dc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3a1e0:	ldr	x1, [x0, #2544]
   3a1e4:	add	x0, x0, #0x9f0
   3a1e8:	blr	x1
   3a1ec:	str	x21, [x19, x0]
   3a1f0:	ldp	x21, x22, [sp, #32]
   3a1f4:	ldp	x23, x24, [sp, #48]
   3a1f8:	mov	x0, x20
   3a1fc:	ldp	x19, x20, [sp, #16]
   3a200:	ldp	x25, x26, [sp, #64]
   3a204:	ldp	x29, x30, [sp], #128
   3a208:	ret
   3a20c:	cmp	x20, #0x0
   3a210:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3a214:	csneg	x20, x0, x20, lt  // lt = tstop
   3a218:	b	3a1a8 <mpfr_get_si@@Base+0xf0>
   3a21c:	mov	x20, #0x0                   	// #0
   3a220:	mov	x0, x20
   3a224:	ldp	x19, x20, [sp, #16]
   3a228:	ldp	x25, x26, [sp, #64]
   3a22c:	ldp	x29, x30, [sp], #128
   3a230:	ret
   3a234:	mrs	x1, tpidr_el0
   3a238:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3a23c:	ldr	x2, [x0, #2576]
   3a240:	add	x0, x0, #0xa10
   3a244:	blr	x2
   3a248:	add	x0, x1, x0
   3a24c:	mov	x2, #0x2                   	// #2
   3a250:	ldr	x3, [x20, #16]
   3a254:	movk	x2, #0x8000, lsl #48
   3a258:	ldr	w1, [x0]
   3a25c:	cmp	x3, x2
   3a260:	orr	w1, w1, #0x10
   3a264:	str	w1, [x0]
   3a268:	b.eq	3a21c <mpfr_get_si@@Base+0x164>  // b.none
   3a26c:	ldr	w0, [x20, #8]
   3a270:	mov	x20, #0x7fffffffffffffff    	// #9223372036854775807
   3a274:	cmp	w0, #0x0
   3a278:	cinv	x20, x20, lt  // lt = tstop
   3a27c:	b	3a1f8 <mpfr_get_si@@Base+0x140>
   3a280:	mov	x20, #0x0                   	// #0
   3a284:	b	3a1a8 <mpfr_get_si@@Base+0xf0>

000000000003a288 <mpfr_get_ui@@Base>:
   3a288:	stp	x29, x30, [sp, #-128]!
   3a28c:	mov	x29, sp
   3a290:	stp	x19, x20, [sp, #16]
   3a294:	mov	x20, x0
   3a298:	stp	x25, x26, [sp, #64]
   3a29c:	mov	w26, w1
   3a2a0:	bl	be50 <mpfr_fits_ulong_p@plt>
   3a2a4:	cbz	w0, 3a3f0 <mpfr_get_ui@@Base+0x168>
   3a2a8:	ldr	x0, [x20, #16]
   3a2ac:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   3a2b0:	cmp	x0, x25
   3a2b4:	b.eq	3a3d0 <mpfr_get_ui@@Base+0x148>  // b.none
   3a2b8:	mrs	x19, tpidr_el0
   3a2bc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3a2c0:	ldr	x1, [x0, #2576]
   3a2c4:	add	x0, x0, #0xa10
   3a2c8:	blr	x1
   3a2cc:	stp	x23, x24, [sp, #48]
   3a2d0:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   3a2d4:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   3a2d8:	ldr	w23, [x19, x0]
   3a2dc:	add	x24, sp, #0x60
   3a2e0:	str	x27, [sp, #80]
   3a2e4:	add	x27, x19, x0
   3a2e8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3a2ec:	ldr	x1, [x0, #2512]
   3a2f0:	add	x0, x0, #0x9d0
   3a2f4:	blr	x1
   3a2f8:	add	x3, x19, x0
   3a2fc:	stp	x21, x22, [sp, #32]
   3a300:	mov	x1, #0x40                  	// #64
   3a304:	ldr	x22, [x19, x0]
   3a308:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3a30c:	ldr	x5, [x0, #2544]
   3a310:	add	x0, x0, #0x9f0
   3a314:	blr	x5
   3a318:	str	x4, [x3]
   3a31c:	ldr	x21, [x19, x0]
   3a320:	str	x2, [x19, x0]
   3a324:	mov	x0, x24
   3a328:	bl	ca80 <mpfr_init2@plt>
   3a32c:	mov	x1, x20
   3a330:	mov	w2, w26
   3a334:	mov	x0, x24
   3a338:	bl	c300 <mpfr_rint@plt>
   3a33c:	ldr	x1, [sp, #112]
   3a340:	ldr	w0, [x27]
   3a344:	cmp	x1, x25
   3a348:	orr	w23, w23, w0
   3a34c:	b.eq	3a3e8 <mpfr_get_ui@@Base+0x160>  // b.none
   3a350:	ldr	x0, [sp, #96]
   3a354:	neg	w1, w1
   3a358:	ldr	x2, [sp, #120]
   3a35c:	sub	x0, x0, #0x1
   3a360:	asr	x0, x0, #6
   3a364:	ldr	x20, [x2, x0, lsl #3]
   3a368:	lsr	x20, x20, x1
   3a36c:	mov	x0, x24
   3a370:	bl	c070 <mpfr_clear@plt>
   3a374:	ldr	x27, [sp, #80]
   3a378:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3a37c:	ldr	x1, [x0, #2576]
   3a380:	add	x0, x0, #0xa10
   3a384:	blr	x1
   3a388:	str	w23, [x19, x0]
   3a38c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3a390:	ldr	x1, [x0, #2512]
   3a394:	add	x0, x0, #0x9d0
   3a398:	blr	x1
   3a39c:	str	x22, [x19, x0]
   3a3a0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3a3a4:	ldr	x1, [x0, #2544]
   3a3a8:	add	x0, x0, #0x9f0
   3a3ac:	blr	x1
   3a3b0:	str	x21, [x19, x0]
   3a3b4:	ldp	x21, x22, [sp, #32]
   3a3b8:	ldp	x23, x24, [sp, #48]
   3a3bc:	mov	x0, x20
   3a3c0:	ldp	x19, x20, [sp, #16]
   3a3c4:	ldp	x25, x26, [sp, #64]
   3a3c8:	ldp	x29, x30, [sp], #128
   3a3cc:	ret
   3a3d0:	mov	x20, #0x0                   	// #0
   3a3d4:	mov	x0, x20
   3a3d8:	ldp	x19, x20, [sp, #16]
   3a3dc:	ldp	x25, x26, [sp, #64]
   3a3e0:	ldp	x29, x30, [sp], #128
   3a3e4:	ret
   3a3e8:	mov	x20, #0x0                   	// #0
   3a3ec:	b	3a36c <mpfr_get_ui@@Base+0xe4>
   3a3f0:	mrs	x1, tpidr_el0
   3a3f4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3a3f8:	ldr	x2, [x0, #2576]
   3a3fc:	add	x0, x0, #0xa10
   3a400:	blr	x2
   3a404:	add	x0, x1, x0
   3a408:	mov	x2, #0x2                   	// #2
   3a40c:	ldr	x3, [x20, #16]
   3a410:	movk	x2, #0x8000, lsl #48
   3a414:	ldr	w1, [x0]
   3a418:	cmp	x3, x2
   3a41c:	orr	w1, w1, #0x10
   3a420:	str	w1, [x0]
   3a424:	b.eq	3a3d0 <mpfr_get_ui@@Base+0x148>  // b.none
   3a428:	ldrsw	x20, [x20, #8]
   3a42c:	mov	x0, #0x0                   	// #0
   3a430:	cmp	x20, x0
   3a434:	csetm	x20, ge  // ge = tcont
   3a438:	b	3a3bc <mpfr_get_ui@@Base+0x134>
   3a43c:	nop
   3a440:	sub	sp, sp, #0x320
   3a444:	stp	x29, x30, [sp]
   3a448:	mov	x29, sp
   3a44c:	stp	x19, x20, [sp, #16]
   3a450:	mov	x20, x1
   3a454:	str	w2, [sp, #176]
   3a458:	ldr	x2, [x20]
   3a45c:	str	x2, [sp, #168]
   3a460:	ldr	x2, [x0]
   3a464:	str	x2, [sp, #152]
   3a468:	ldr	x1, [x1, #16]
   3a46c:	str	x0, [sp, #192]
   3a470:	cmp	x1, #0x3
   3a474:	b.le	3a4a0 <mpfr_get_ui@@Base+0x218>
   3a478:	ldr	x4, [sp, #152]
   3a47c:	sub	x1, x1, #0x1
   3a480:	cmp	x1, #0x3f
   3a484:	mov	x3, #0x1                   	// #1
   3a488:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   3a48c:	add	x4, x4, x3
   3a490:	lsl	x1, x3, x1
   3a494:	csel	x2, x1, x2, lt  // lt = tstop
   3a498:	cmp	x4, x2
   3a49c:	b.cc	3ad08 <mpfr_get_ui@@Base+0xa80>  // b.lo, b.ul, b.last
   3a4a0:	ldr	x0, [sp, #152]
   3a4a4:	stp	x21, x22, [sp, #32]
   3a4a8:	stp	x23, x24, [sp, #48]
   3a4ac:	cmp	x0, #0x1
   3a4b0:	stp	x25, x26, [sp, #64]
   3a4b4:	stp	x27, x28, [sp, #80]
   3a4b8:	stp	d8, d9, [sp, #96]
   3a4bc:	stp	d10, d11, [sp, #112]
   3a4c0:	stp	d12, d13, [sp, #128]
   3a4c4:	b.eq	3a4e4 <mpfr_get_ui@@Base+0x25c>  // b.none
   3a4c8:	b.le	3af94 <mpfr_get_ui@@Base+0xd0c>
   3a4cc:	ldr	x2, [sp, #152]
   3a4d0:	mov	w1, #0x40                  	// #64
   3a4d4:	sub	x0, x2, #0x1
   3a4d8:	clz	x0, x0
   3a4dc:	sub	w0, w1, w0
   3a4e0:	add	x0, x2, w0, sxtw
   3a4e4:	ldr	x1, [x20, #16]
   3a4e8:	add	x28, sp, #0x180
   3a4ec:	ldr	x2, [sp, #168]
   3a4f0:	add	x25, x0, #0xa
   3a4f4:	mov	x0, x28
   3a4f8:	add	x26, sp, #0x1e0
   3a4fc:	cmp	x1, x2
   3a500:	csel	x1, x1, x2, ge  // ge = tcont
   3a504:	mov	x2, #0x40                  	// #64
   3a508:	str	x2, [sp, #200]
   3a50c:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3a510:	ldr	d9, [x2, #216]
   3a514:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3a518:	ldr	d11, [x2, #224]
   3a51c:	bl	ca80 <mpfr_init2@plt>
   3a520:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3a524:	adrp	x4, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3a528:	mov	x1, x20
   3a52c:	mov	w3, #0x0                   	// #0
   3a530:	ldr	d10, [x0, #232]
   3a534:	adrp	x0, 7f000 <__gmpfr_l2b@@Base+0x200>
   3a538:	ldr	d12, [x4, #240]
   3a53c:	ldr	x2, [x0, #3928]
   3a540:	mov	x0, x28
   3a544:	bl	bb70 <mpfr_sub@plt>
   3a548:	str	x28, [sp, #160]
   3a54c:	add	x1, sp, #0x228
   3a550:	str	x1, [sp, #376]
   3a554:	ldr	x1, [sp, #400]
   3a558:	mov	x0, #0x1                   	// #1
   3a55c:	add	x2, sp, #0x210
   3a560:	add	x4, sp, #0x218
   3a564:	add	x3, sp, #0x220
   3a568:	str	x0, [sp, #256]
   3a56c:	str	w0, [sp, #264]
   3a570:	stp	x2, x0, [sp, #280]
   3a574:	str	w0, [sp, #296]
   3a578:	stp	x4, x0, [sp, #312]
   3a57c:	str	w0, [sp, #328]
   3a580:	stp	x3, x0, [sp, #344]
   3a584:	str	w0, [sp, #360]
   3a588:	str	xzr, [sp, #512]
   3a58c:	str	x2, [sp, #520]
   3a590:	sub	x24, x25, #0x3
   3a594:	add	x0, x24, x24, lsr #63
   3a598:	neg	x0, x0, asr #1
   3a59c:	cmp	x0, x1
   3a5a0:	b.lt	3a738 <mpfr_get_ui@@Base+0x4b0>  // b.tstop
   3a5a4:	ldr	x1, [sp, #168]
   3a5a8:	add	x0, x25, #0x2
   3a5ac:	add	x22, x25, #0x3
   3a5b0:	cmp	x0, x1
   3a5b4:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3a5b8:	csel	x22, x22, x1, ge  // ge = tcont
   3a5bc:	cmp	x22, x0
   3a5c0:	ldr	x1, [sp, #512]
   3a5c4:	b.ge	3afac <mpfr_get_ui@@Base+0xd24>  // b.tcont
   3a5c8:	sub	x21, x22, #0x1
   3a5cc:	asr	x21, x21, #6
   3a5d0:	add	x21, x21, #0x1
   3a5d4:	lsl	x2, x21, #5
   3a5d8:	str	x2, [sp, #512]
   3a5dc:	cbz	x1, 3a724 <mpfr_get_ui@@Base+0x49c>
   3a5e0:	ldr	x0, [sp, #520]
   3a5e4:	bl	c1c0 <mpfr_reallocate_func@plt>
   3a5e8:	mov	x2, x0
   3a5ec:	str	x0, [sp, #520]
   3a5f0:	add	x5, x21, x21, lsl #1
   3a5f4:	adrp	x0, 7f000 <__gmpfr_l2b@@Base+0x200>
   3a5f8:	add	x6, x2, x21, lsl #3
   3a5fc:	add	x21, x2, x21, lsl #4
   3a600:	add	x5, x2, x5, lsl #3
   3a604:	stp	x2, x22, [sp, #280]
   3a608:	mov	w4, #0x1                   	// #1
   3a60c:	ldr	x1, [x0, #3928]
   3a610:	add	x19, sp, #0x140
   3a614:	ldr	x2, [sp, #160]
   3a618:	mov	w3, #0x0                   	// #0
   3a61c:	mov	x0, x19
   3a620:	str	x22, [sp, #256]
   3a624:	str	w4, [sp, #264]
   3a628:	add	x23, sp, #0x160
   3a62c:	str	w4, [sp, #296]
   3a630:	stp	x6, x22, [sp, #312]
   3a634:	str	w4, [sp, #328]
   3a638:	stp	x21, x22, [sp, #344]
   3a63c:	str	w4, [sp, #360]
   3a640:	str	x5, [sp, #376]
   3a644:	bl	c620 <mpfr_div@plt>
   3a648:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3a64c:	ldr	x1, [x0, #2608]
   3a650:	add	x0, x0, #0xa30
   3a654:	blr	x1
   3a658:	mov	w2, #0x0                   	// #0
   3a65c:	mrs	x1, tpidr_el0
   3a660:	add	x1, x1, x0
   3a664:	mov	x0, x23
   3a668:	bl	c380 <mpfr_cache@plt>
   3a66c:	mov	x1, x19
   3a670:	mov	x2, x23
   3a674:	mov	x0, x19
   3a678:	mov	w3, #0x0                   	// #0
   3a67c:	bl	c1a0 <mpfr_add@plt>
   3a680:	ldr	x1, [sp, #336]
   3a684:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3a688:	cmp	x1, x0
   3a68c:	b.le	3acb0 <mpfr_get_ui@@Base+0xa28>
   3a690:	ldr	w0, [sp, #176]
   3a694:	mov	x2, x24
   3a698:	ldr	x1, [sp, #320]
   3a69c:	cmp	w0, #0x0
   3a6a0:	ldr	x0, [sp, #344]
   3a6a4:	sub	x1, x1, #0x1
   3a6a8:	ldr	x3, [sp, #152]
   3a6ac:	asr	x1, x1, #6
   3a6b0:	add	x1, x1, #0x1
   3a6b4:	cinc	x3, x3, eq  // eq = none
   3a6b8:	bl	c370 <mpfr_round_p@plt>
   3a6bc:	cbz	w0, 3acb0 <mpfr_get_ui@@Base+0xa28>
   3a6c0:	ldr	w2, [sp, #176]
   3a6c4:	mov	x1, x19
   3a6c8:	ldr	w3, [sp, #328]
   3a6cc:	ldr	x0, [sp, #192]
   3a6d0:	ldr	x28, [sp, #160]
   3a6d4:	bl	c6a0 <mpfr_set4@plt>
   3a6d8:	mov	w19, w0
   3a6dc:	ldr	x1, [sp, #512]
   3a6e0:	cbz	x1, 3a6ec <mpfr_get_ui@@Base+0x464>
   3a6e4:	ldr	x0, [sp, #520]
   3a6e8:	bl	cc20 <mpfr_free_func@plt>
   3a6ec:	mov	x0, x28
   3a6f0:	bl	c070 <mpfr_clear@plt>
   3a6f4:	ldp	x21, x22, [sp, #32]
   3a6f8:	ldp	x23, x24, [sp, #48]
   3a6fc:	ldp	x25, x26, [sp, #64]
   3a700:	ldp	x27, x28, [sp, #80]
   3a704:	ldp	d8, d9, [sp, #96]
   3a708:	ldp	d10, d11, [sp, #112]
   3a70c:	ldp	d12, d13, [sp, #128]
   3a710:	mov	w0, w19
   3a714:	ldp	x29, x30, [sp]
   3a718:	ldp	x19, x20, [sp, #16]
   3a71c:	add	sp, sp, #0x320
   3a720:	ret
   3a724:	mov	x0, x2
   3a728:	bl	ccf0 <mpfr_allocate_func@plt>
   3a72c:	mov	x2, x0
   3a730:	str	x0, [sp, #520]
   3a734:	b	3a5f0 <mpfr_get_ui@@Base+0x368>
   3a738:	mov	x0, x20
   3a73c:	mov	w1, #0x0                   	// #0
   3a740:	bl	bd30 <mpfr_get_d@plt>
   3a744:	fmov	d8, d0
   3a748:	scvtf	d13, x25
   3a74c:	bl	bcd0 <__gmpfr_floor_log2@plt>
   3a750:	scvtf	d1, x0
   3a754:	fmadd	d0, d13, d9, d11
   3a758:	fmsub	d1, d1, d9, d10
   3a75c:	fmadd	d0, d1, d8, d0
   3a760:	fcmpe	d0, #0.0
   3a764:	b.ls	3af40 <mpfr_get_ui@@Base+0xcb8>  // b.plast
   3a768:	fcvtzs	w0, d0
   3a76c:	fmov	d1, #2.000000000000000000e+00
   3a770:	fmov	d0, #1.000000000000000000e+00
   3a774:	add	w0, w0, w0, lsr #31
   3a778:	asr	w0, w0, #1
   3a77c:	add	w0, w0, #0x1
   3a780:	str	w0, [sp, #180]
   3a784:	scvtf	d2, w0
   3a788:	fmadd	d8, d2, d1, d8
   3a78c:	fsub	d8, d8, d0
   3a790:	fdiv	d8, d8, d12
   3a794:	fcvtzs	w23, d8
   3a798:	add	w0, w23, #0x1
   3a79c:	str	w0, [sp, #216]
   3a7a0:	cmp	x25, #0x1
   3a7a4:	b.le	3af64 <mpfr_get_ui@@Base+0xcdc>
   3a7a8:	sub	x1, x25, #0x1
   3a7ac:	ldr	w19, [sp, #180]
   3a7b0:	clz	x1, x1
   3a7b4:	mov	w0, #0x40                  	// #64
   3a7b8:	sub	w0, w0, w1
   3a7bc:	add	w2, w19, #0x1
   3a7c0:	str	w2, [sp, #208]
   3a7c4:	add	w22, w0, w0, lsl #1
   3a7c8:	sbfiz	x1, x2, #5, #32
   3a7cc:	mov	x0, x1
   3a7d0:	str	x1, [sp, #224]
   3a7d4:	asr	w22, w22, #1
   3a7d8:	add	w22, w22, #0x4
   3a7dc:	ldr	x1, [sp, #168]
   3a7e0:	add	x22, x25, w22, sxtw
   3a7e4:	cmp	x1, x22
   3a7e8:	csel	x22, x1, x22, ge  // ge = tcont
   3a7ec:	bl	ccf0 <mpfr_allocate_func@plt>
   3a7f0:	str	x0, [sp, #184]
   3a7f4:	cmp	w19, #0x0
   3a7f8:	b.le	3a830 <mpfr_get_ui@@Base+0x5a8>
   3a7fc:	ldr	w0, [sp, #180]
   3a800:	sub	w19, w0, #0x1
   3a804:	ldr	x0, [sp, #184]
   3a808:	ubfiz	x19, x19, #5, #32
   3a80c:	add	x19, x19, #0x40
   3a810:	add	x21, x0, #0x20
   3a814:	add	x19, x0, x19
   3a818:	mov	x0, x21
   3a81c:	mov	x1, x22
   3a820:	add	x21, x21, #0x20
   3a824:	bl	ca80 <mpfr_init2@plt>
   3a828:	cmp	x21, x19
   3a82c:	b.ne	3a818 <mpfr_get_ui@@Base+0x590>  // b.any
   3a830:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3a834:	cmp	x22, x0
   3a838:	ldr	x1, [sp, #512]
   3a83c:	b.ge	3afac <mpfr_get_ui@@Base+0xd24>  // b.tcont
   3a840:	sub	x19, x22, #0x1
   3a844:	asr	x21, x19, #6
   3a848:	add	x21, x21, #0x1
   3a84c:	lsl	x2, x21, #5
   3a850:	str	x2, [sp, #512]
   3a854:	cbnz	x1, 3ace4 <mpfr_get_ui@@Base+0xa5c>
   3a858:	mov	x0, x2
   3a85c:	bl	ccf0 <mpfr_allocate_func@plt>
   3a860:	str	x0, [sp, #520]
   3a864:	add	x2, x21, x21, lsl #1
   3a868:	mov	w1, #0x1                   	// #1
   3a86c:	ldr	w23, [sp, #180]
   3a870:	add	x2, x0, x2, lsl #3
   3a874:	str	x22, [sp, #256]
   3a878:	str	w1, [sp, #264]
   3a87c:	cmp	w23, #0x0
   3a880:	stp	x0, x22, [sp, #280]
   3a884:	str	w1, [sp, #296]
   3a888:	str	x22, [sp, #320]
   3a88c:	str	w1, [sp, #328]
   3a890:	str	x22, [sp, #352]
   3a894:	str	w1, [sp, #360]
   3a898:	add	x1, x0, x21, lsl #3
   3a89c:	add	x21, x0, x21, lsl #4
   3a8a0:	str	x1, [sp, #312]
   3a8a4:	str	x21, [sp, #344]
   3a8a8:	str	x2, [sp, #376]
   3a8ac:	b.gt	3ad3c <mpfr_get_ui@@Base+0xab4>
   3a8b0:	asr	x19, x19, #6
   3a8b4:	add	x19, x19, #0x1
   3a8b8:	lsl	x0, x19, #1
   3a8bc:	cmp	x0, #0x10
   3a8c0:	b.gt	3ae94 <mpfr_get_ui@@Base+0xc0c>
   3a8c4:	add	x0, sp, #0x2a0
   3a8c8:	str	xzr, [sp, #656]
   3a8cc:	mov	x4, x0
   3a8d0:	str	x0, [sp, #664]
   3a8d4:	add	x3, x4, x19, lsl #3
   3a8d8:	ldr	w23, [sp, #216]
   3a8dc:	mov	w5, #0x1                   	// #1
   3a8e0:	add	x28, sp, #0x1c0
   3a8e4:	mov	x1, x20
   3a8e8:	mov	w2, #0x0                   	// #0
   3a8ec:	sxtw	x21, w23
   3a8f0:	mov	x0, x26
   3a8f4:	str	x21, [sp, #208]
   3a8f8:	add	x19, sp, #0x140
   3a8fc:	str	x22, [sp, #448]
   3a900:	str	w5, [sp, #456]
   3a904:	stp	x4, x22, [sp, #472]
   3a908:	sub	w22, w23, #0x1
   3a90c:	str	w5, [sp, #488]
   3a910:	str	x3, [sp, #504]
   3a914:	bl	bd70 <mpfr_neg@plt>
   3a918:	mov	x1, x21
   3a91c:	mov	x2, x26
   3a920:	mov	w3, #0x0                   	// #0
   3a924:	mov	x0, x28
   3a928:	bl	ca10 <mpfr_ui_pow@plt>
   3a92c:	mov	x1, x28
   3a930:	mov	w3, #0x0                   	// #0
   3a934:	mov	x2, #0x1                   	// #1
   3a938:	mov	x0, x28
   3a93c:	bl	c8f0 <mpfr_div_2ui@plt>
   3a940:	ldr	w3, [sp, #456]
   3a944:	mov	x1, x28
   3a948:	mov	x0, x19
   3a94c:	mov	w2, #0x0                   	// #0
   3a950:	bl	c6a0 <mpfr_set4@plt>
   3a954:	cmp	w22, #0x1
   3a958:	b.le	3a9ac <mpfr_get_ui@@Base+0x724>
   3a95c:	ldr	x0, [sp, #208]
   3a960:	sxtw	x22, w22
   3a964:	sub	x21, x0, #0x2
   3a968:	ldr	w0, [sp, #216]
   3a96c:	sub	w0, w0, #0x3
   3a970:	sub	x21, x21, x0
   3a974:	nop
   3a978:	mov	x1, x22
   3a97c:	mov	x2, x26
   3a980:	mov	w3, #0x0                   	// #0
   3a984:	mov	x0, x28
   3a988:	bl	ca10 <mpfr_ui_pow@plt>
   3a98c:	sub	x22, x22, #0x1
   3a990:	mov	x2, x28
   3a994:	mov	x1, x19
   3a998:	mov	x0, x19
   3a99c:	mov	w3, #0x0                   	// #0
   3a9a0:	bl	c1a0 <mpfr_add@plt>
   3a9a4:	cmp	x21, x22
   3a9a8:	b.ne	3a978 <mpfr_get_ui@@Base+0x6f0>  // b.any
   3a9ac:	adrp	x0, 7f000 <__gmpfr_l2b@@Base+0x200>
   3a9b0:	mov	x1, x19
   3a9b4:	mov	w3, #0x0                   	// #0
   3a9b8:	ldr	x2, [x0, #3928]
   3a9bc:	mov	x0, x19
   3a9c0:	bl	c1a0 <mpfr_add@plt>
   3a9c4:	ldr	x1, [sp, #656]
   3a9c8:	cbz	x1, 3a9d4 <mpfr_get_ui@@Base+0x74c>
   3a9cc:	ldr	x0, [sp, #664]
   3a9d0:	bl	cc20 <mpfr_free_func@plt>
   3a9d4:	ldr	w0, [sp, #180]
   3a9d8:	cbz	w0, 3aeac <mpfr_get_ui@@Base+0xc24>
   3a9dc:	ldr	w0, [sp, #216]
   3a9e0:	ldr	x22, [sp, #256]
   3a9e4:	mul	w23, w0, w0
   3a9e8:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3a9ec:	cmp	x22, x0
   3a9f0:	sxtw	x1, w23
   3a9f4:	str	x1, [sp, #232]
   3a9f8:	b.ge	3afac <mpfr_get_ui@@Base+0xd24>  // b.tcont
   3a9fc:	sub	x21, x22, #0x1
   3aa00:	asr	x21, x21, #6
   3aa04:	add	x21, x21, #0x1
   3aa08:	add	x0, x21, x21, lsl #1
   3aa0c:	cmp	x0, #0x10
   3aa10:	b.gt	3acf4 <mpfr_get_ui@@Base+0xa6c>
   3aa14:	add	x1, sp, #0x2a0
   3aa18:	str	xzr, [sp, #656]
   3aa1c:	mov	x0, x1
   3aa20:	str	x1, [sp, #664]
   3aa24:	ldr	x1, [sp, #224]
   3aa28:	mov	w2, #0x1                   	// #1
   3aa2c:	ldr	x3, [sp, #184]
   3aa30:	sub	x1, x1, #0x20
   3aa34:	str	w2, [sp, #424]
   3aa38:	add	x1, x3, x1
   3aa3c:	str	w2, [sp, #456]
   3aa40:	str	w2, [sp, #488]
   3aa44:	add	x2, x0, x21, lsl #3
   3aa48:	ldr	w23, [sp, #180]
   3aa4c:	add	x21, x0, x21, lsl #4
   3aa50:	ldr	w3, [x1, #8]
   3aa54:	sub	w27, w23, #0x1
   3aa58:	str	w27, [sp, #216]
   3aa5c:	str	x22, [sp, #416]
   3aa60:	stp	x0, x22, [sp, #440]
   3aa64:	mov	x0, x28
   3aa68:	stp	x2, x22, [sp, #472]
   3aa6c:	mov	w2, #0x0                   	// #0
   3aa70:	add	x22, sp, #0x1a0
   3aa74:	str	x21, [sp, #504]
   3aa78:	bl	c6a0 <mpfr_set4@plt>
   3aa7c:	cmp	w23, #0x1
   3aa80:	lsl	w6, w27, #1
   3aa84:	sxtw	x21, w23
   3aa88:	b.le	3ab6c <mpfr_get_ui@@Base+0x8e4>
   3aa8c:	ldr	w0, [sp, #180]
   3aa90:	sxtw	x23, w6
   3aa94:	ldr	x1, [sp, #184]
   3aa98:	sub	w0, w0, #0x2
   3aa9c:	sub	x27, x23, #0x2
   3aaa0:	sub	x21, x21, #0x1
   3aaa4:	sub	x0, x27, w0, uxtw #1
   3aaa8:	add	x22, sp, #0x1a0
   3aaac:	add	x21, x1, x21, lsl #5
   3aab0:	stp	x24, x19, [sp, #240]
   3aab4:	mov	x24, x27
   3aab8:	mov	x19, x23
   3aabc:	mov	x27, x0
   3aac0:	ldr	x23, [sp, #232]
   3aac4:	b	3aacc <mpfr_get_ui@@Base+0x844>
   3aac8:	sub	x24, x24, #0x2
   3aacc:	mov	x2, x19
   3aad0:	mov	x1, x20
   3aad4:	mov	w3, #0x0                   	// #0
   3aad8:	mov	x0, x22
   3aadc:	bl	c260 <mpfr_add_ui@plt>
   3aae0:	mov	x2, x22
   3aae4:	mov	x1, x28
   3aae8:	mov	w3, #0x0                   	// #0
   3aaec:	mov	x0, x28
   3aaf0:	bl	bd50 <mpfr_mul@plt>
   3aaf4:	sub	x2, x19, #0x1
   3aaf8:	mov	x1, x20
   3aafc:	mov	w3, #0x0                   	// #0
   3ab00:	mov	x0, x22
   3ab04:	bl	c260 <mpfr_add_ui@plt>
   3ab08:	mov	x2, x22
   3ab0c:	mov	x1, x28
   3ab10:	mov	w3, #0x0                   	// #0
   3ab14:	mov	x0, x28
   3ab18:	bl	bd50 <mpfr_mul@plt>
   3ab1c:	mov	x2, x23
   3ab20:	mov	x1, x28
   3ab24:	mov	w3, #0x0                   	// #0
   3ab28:	mov	x0, x28
   3ab2c:	bl	cc60 <mpfr_div_ui@plt>
   3ab30:	mov	x2, x21
   3ab34:	mov	w3, #0x0                   	// #0
   3ab38:	mov	x1, x28
   3ab3c:	mov	x0, x28
   3ab40:	bl	c1a0 <mpfr_add@plt>
   3ab44:	mov	x1, x21
   3ab48:	mov	x0, x28
   3ab4c:	bl	c9b0 <mpfr_cmpabs@plt>
   3ab50:	cmp	w0, #0x0
   3ab54:	b.gt	3ad24 <mpfr_get_ui@@Base+0xa9c>
   3ab58:	sub	x21, x21, #0x20
   3ab5c:	cmp	x27, x24
   3ab60:	mov	x19, x24
   3ab64:	b.ne	3aac8 <mpfr_get_ui@@Base+0x840>  // b.any
   3ab68:	ldp	x24, x19, [sp, #240]
   3ab6c:	mov	x2, x20
   3ab70:	mov	x1, x28
   3ab74:	mov	w3, #0x0                   	// #0
   3ab78:	mov	x0, x28
   3ab7c:	bl	bd50 <mpfr_mul@plt>
   3ab80:	adrp	x0, 7f000 <__gmpfr_l2b@@Base+0x200>
   3ab84:	mov	w3, #0x0                   	// #0
   3ab88:	mov	x1, x20
   3ab8c:	add	x21, sp, #0x100
   3ab90:	ldr	x2, [x0, #3928]
   3ab94:	mov	x0, x22
   3ab98:	bl	c1a0 <mpfr_add@plt>
   3ab9c:	mov	x1, x22
   3aba0:	mov	w2, #0x0                   	// #0
   3aba4:	mov	x0, x22
   3aba8:	bl	bd70 <mpfr_neg@plt>
   3abac:	ldr	x1, [sp, #208]
   3abb0:	mov	x2, x22
   3abb4:	mov	w3, #0x0                   	// #0
   3abb8:	mov	x0, x26
   3abbc:	bl	ca10 <mpfr_ui_pow@plt>
   3abc0:	mov	x1, x28
   3abc4:	mov	x0, x21
   3abc8:	mov	x2, x26
   3abcc:	mov	w3, #0x0                   	// #0
   3abd0:	bl	bd50 <mpfr_mul@plt>
   3abd4:	ldr	x1, [sp, #656]
   3abd8:	cbz	x1, 3abe4 <mpfr_get_ui@@Base+0x95c>
   3abdc:	ldr	x0, [sp, #664]
   3abe0:	bl	cc20 <mpfr_free_func@plt>
   3abe4:	adrp	x0, 7f000 <__gmpfr_l2b@@Base+0x200>
   3abe8:	add	x22, sp, #0x120
   3abec:	ldr	x27, [sp, #160]
   3abf0:	mov	w3, #0x0                   	// #0
   3abf4:	ldr	x1, [x0, #3928]
   3abf8:	mov	x2, x27
   3abfc:	mov	x0, x22
   3ac00:	add	x23, sp, #0x160
   3ac04:	bl	c620 <mpfr_div@plt>
   3ac08:	ldr	x1, [sp, #208]
   3ac0c:	mov	x2, x27
   3ac10:	mov	w3, #0x0                   	// #0
   3ac14:	mov	x0, x23
   3ac18:	bl	ca10 <mpfr_ui_pow@plt>
   3ac1c:	mov	x2, x23
   3ac20:	mov	x1, x22
   3ac24:	mov	w3, #0x0                   	// #0
   3ac28:	mov	x0, x22
   3ac2c:	bl	c620 <mpfr_div@plt>
   3ac30:	mov	x2, x22
   3ac34:	mov	x1, x19
   3ac38:	mov	w3, #0x0                   	// #0
   3ac3c:	mov	x0, x19
   3ac40:	bl	c1a0 <mpfr_add@plt>
   3ac44:	mov	x2, x21
   3ac48:	mov	x1, x19
   3ac4c:	mov	x0, x19
   3ac50:	mov	w3, #0x0                   	// #0
   3ac54:	bl	c1a0 <mpfr_add@plt>
   3ac58:	ldr	w0, [sp, #180]
   3ac5c:	cmp	w0, #0x0
   3ac60:	b.le	3ac94 <mpfr_get_ui@@Base+0xa0c>
   3ac64:	ldr	x0, [sp, #216]
   3ac68:	ubfiz	x21, x0, #5, #32
   3ac6c:	ldr	x0, [sp, #184]
   3ac70:	add	x21, x21, #0x40
   3ac74:	add	x22, x0, #0x20
   3ac78:	add	x21, x0, x21
   3ac7c:	nop
   3ac80:	mov	x0, x22
   3ac84:	add	x22, x22, #0x20
   3ac88:	bl	c070 <mpfr_clear@plt>
   3ac8c:	cmp	x22, x21
   3ac90:	b.ne	3ac80 <mpfr_get_ui@@Base+0x9f8>  // b.any
   3ac94:	ldr	x0, [sp, #184]
   3ac98:	ldr	x1, [sp, #224]
   3ac9c:	bl	cc20 <mpfr_free_func@plt>
   3aca0:	ldr	x1, [sp, #336]
   3aca4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3aca8:	cmp	x1, x0
   3acac:	b.gt	3a690 <mpfr_get_ui@@Base+0x408>
   3acb0:	ldr	x1, [sp, #200]
   3acb4:	mov	x0, #0xfffffffffffffeff    	// #-257
   3acb8:	movk	x0, #0x7fff, lsl #48
   3acbc:	sub	x0, x0, x25
   3acc0:	cmp	x0, x1
   3acc4:	b.lt	3af7c <mpfr_get_ui@@Base+0xcf4>  // b.tstop
   3acc8:	ldr	x0, [sp, #200]
   3accc:	ldr	x1, [sp, #400]
   3acd0:	add	x25, x25, x0
   3acd4:	add	x0, x25, x25, lsr #63
   3acd8:	asr	x0, x0, #1
   3acdc:	str	x0, [sp, #200]
   3ace0:	b	3a590 <mpfr_get_ui@@Base+0x308>
   3ace4:	ldr	x0, [sp, #520]
   3ace8:	bl	c1c0 <mpfr_reallocate_func@plt>
   3acec:	str	x0, [sp, #520]
   3acf0:	b	3a864 <mpfr_get_ui@@Base+0x5dc>
   3acf4:	lsl	x0, x0, #3
   3acf8:	str	x0, [sp, #656]
   3acfc:	bl	ccf0 <mpfr_allocate_func@plt>
   3ad00:	str	x0, [sp, #664]
   3ad04:	b	3aa24 <mpfr_get_ui@@Base+0x79c>
   3ad08:	adrp	x1, 7f000 <__gmpfr_l2b@@Base+0x200>
   3ad0c:	ldr	w4, [sp, #176]
   3ad10:	ldr	x1, [x1, #3928]
   3ad14:	bl	c540 <mpfr_round_near_x@plt>
   3ad18:	mov	w19, w0
   3ad1c:	cbz	w0, 3a4a0 <mpfr_get_ui@@Base+0x218>
   3ad20:	b	3a710 <mpfr_get_ui@@Base+0x488>
   3ad24:	ldr	w3, [x21, #8]
   3ad28:	mov	x1, x21
   3ad2c:	mov	x0, x28
   3ad30:	mov	w2, #0x0                   	// #0
   3ad34:	bl	c6a0 <mpfr_set4@plt>
   3ad38:	b	3ab58 <mpfr_get_ui@@Base+0x8d0>
   3ad3c:	ldr	x2, [sp, #184]
   3ad40:	add	x28, sp, #0x290
   3ad44:	mov	x0, x28
   3ad48:	add	x19, x2, #0x20
   3ad4c:	ldr	x1, [x2, #32]
   3ad50:	bl	ca80 <mpfr_init2@plt>
   3ad54:	adrp	x0, 7f000 <__gmpfr_l2b@@Base+0x200>
   3ad58:	mov	w3, #0x0                   	// #0
   3ad5c:	mov	x2, #0xc                   	// #12
   3ad60:	ldr	x1, [x0, #3928]
   3ad64:	mov	x0, x19
   3ad68:	bl	cc60 <mpfr_div_ui@plt>
   3ad6c:	cmp	w23, #0x1
   3ad70:	b.eq	3ae64 <mpfr_get_ui@@Base+0xbdc>  // b.none
   3ad74:	ldr	x0, [sp, #184]
   3ad78:	str	x20, [sp, #248]
   3ad7c:	ldr	w20, [sp, #208]
   3ad80:	mov	x23, #0x1e                  	// #30
   3ad84:	add	x27, x0, #0x40
   3ad88:	stp	x24, x25, [sp, #232]
   3ad8c:	mov	x19, x27
   3ad90:	mov	x24, x28
   3ad94:	mov	x28, x26
   3ad98:	mov	x22, #0x1                   	// #1
   3ad9c:	mov	w21, #0x2                   	// #2
   3ada0:	mov	x1, x22
   3ada4:	mov	w3, #0x0                   	// #0
   3ada8:	mov	x2, #0x0                   	// #0
   3adac:	mov	x0, x24
   3adb0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3adb4:	mov	w26, w22
   3adb8:	mov	x2, x23
   3adbc:	mov	x1, x24
   3adc0:	mov	x0, x24
   3adc4:	mov	w3, #0x0                   	// #0
   3adc8:	bl	cc60 <mpfr_div_ui@plt>
   3adcc:	mov	x25, x27
   3add0:	cmp	w21, #0x2
   3add4:	b.eq	3ae1c <mpfr_get_ui@@Base+0xb94>  // b.none
   3add8:	lsl	w2, w26, #1
   3addc:	mov	x1, x24
   3ade0:	mov	w3, #0x0                   	// #0
   3ade4:	mov	x0, x24
   3ade8:	madd	w2, w2, w26, w26
   3adec:	sub	w26, w26, #0x1
   3adf0:	lsl	w2, w2, #3
   3adf4:	sxtw	x2, w2
   3adf8:	bl	cc60 <mpfr_div_ui@plt>
   3adfc:	mov	x2, x25
   3ae00:	mov	x1, x24
   3ae04:	mov	x0, x24
   3ae08:	mov	w3, #0x0                   	// #0
   3ae0c:	bl	c1a0 <mpfr_add@plt>
   3ae10:	add	x25, x25, #0x20
   3ae14:	cmp	w26, #0x1
   3ae18:	b.ne	3add8 <mpfr_get_ui@@Base+0xb50>  // b.any
   3ae1c:	mov	x0, x19
   3ae20:	mov	x1, x24
   3ae24:	mov	w3, #0x0                   	// #0
   3ae28:	mov	x2, #0x18                  	// #24
   3ae2c:	bl	cc60 <mpfr_div_ui@plt>
   3ae30:	add	w21, w21, #0x1
   3ae34:	ldr	w0, [x19, #8]
   3ae38:	add	x22, x22, #0x1
   3ae3c:	add	x23, x23, #0xc
   3ae40:	cmp	w20, w21
   3ae44:	neg	w0, w0
   3ae48:	str	w0, [x19, #8]
   3ae4c:	add	x19, x19, #0x20
   3ae50:	b.ne	3ada0 <mpfr_get_ui@@Base+0xb18>  // b.any
   3ae54:	mov	x26, x28
   3ae58:	mov	x28, x24
   3ae5c:	ldp	x24, x25, [sp, #232]
   3ae60:	ldr	x20, [sp, #248]
   3ae64:	mov	x0, x28
   3ae68:	bl	c070 <mpfr_clear@plt>
   3ae6c:	ldr	x22, [sp, #320]
   3ae70:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3ae74:	cmp	x22, x0
   3ae78:	b.ge	3afac <mpfr_get_ui@@Base+0xd24>  // b.tcont
   3ae7c:	sub	x19, x22, #0x1
   3ae80:	asr	x19, x19, #6
   3ae84:	add	x19, x19, #0x1
   3ae88:	lsl	x0, x19, #1
   3ae8c:	cmp	x0, #0x10
   3ae90:	b.le	3a8c4 <mpfr_get_ui@@Base+0x63c>
   3ae94:	lsl	x0, x19, #4
   3ae98:	str	x0, [sp, #656]
   3ae9c:	bl	ccf0 <mpfr_allocate_func@plt>
   3aea0:	mov	x4, x0
   3aea4:	str	x0, [sp, #664]
   3aea8:	b	3a8d4 <mpfr_get_ui@@Base+0x64c>
   3aeac:	adrp	x0, 7f000 <__gmpfr_l2b@@Base+0x200>
   3aeb0:	add	x21, sp, #0x120
   3aeb4:	ldr	x23, [sp, #160]
   3aeb8:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   3aebc:	ldr	x1, [x0, #3928]
   3aec0:	mov	w3, #0x1                   	// #1
   3aec4:	mov	x0, x21
   3aec8:	str	w3, [sp, #264]
   3aecc:	mov	w3, #0x0                   	// #0
   3aed0:	str	x2, [sp, #272]
   3aed4:	mov	x2, x23
   3aed8:	bl	c620 <mpfr_div@plt>
   3aedc:	ldr	x1, [sp, #208]
   3aee0:	add	x22, sp, #0x160
   3aee4:	mov	x2, x23
   3aee8:	mov	x0, x22
   3aeec:	mov	w3, #0x0                   	// #0
   3aef0:	bl	ca10 <mpfr_ui_pow@plt>
   3aef4:	mov	x2, x22
   3aef8:	mov	x1, x21
   3aefc:	mov	x0, x21
   3af00:	mov	w3, #0x0                   	// #0
   3af04:	bl	c620 <mpfr_div@plt>
   3af08:	mov	x2, x21
   3af0c:	mov	x1, x19
   3af10:	mov	x0, x19
   3af14:	mov	w3, #0x0                   	// #0
   3af18:	bl	c1a0 <mpfr_add@plt>
   3af1c:	mov	x1, x19
   3af20:	add	x2, sp, #0x100
   3af24:	mov	x0, x19
   3af28:	mov	w3, #0x0                   	// #0
   3af2c:	bl	c1a0 <mpfr_add@plt>
   3af30:	ldr	x0, [sp, #184]
   3af34:	ldr	x1, [sp, #224]
   3af38:	bl	cc20 <mpfr_free_func@plt>
   3af3c:	b	3aca0 <mpfr_get_ui@@Base+0xa18>
   3af40:	fmov	d0, #1.000000000000000000e+00
   3af44:	str	wzr, [sp, #180]
   3af48:	fsub	d0, d13, d0
   3af4c:	fdiv	d0, d0, d8
   3af50:	bl	bb40 <__gmpfr_ceil_exp2@plt>
   3af54:	fcvtzs	w0, d0
   3af58:	add	w0, w0, #0x1
   3af5c:	str	w0, [sp, #216]
   3af60:	b	3a7a0 <mpfr_get_ui@@Base+0x518>
   3af64:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   3af68:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   3af6c:	add	x2, x2, #0xff8
   3af70:	add	x0, x0, #0xff0
   3af74:	mov	w1, #0xef                  	// #239
   3af78:	bl	cb40 <mpfr_assert_fail@plt>
   3af7c:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3af80:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   3af84:	add	x2, x2, #0x0
   3af88:	add	x0, x0, #0xff0
   3af8c:	mov	w1, #0x112                 	// #274
   3af90:	bl	cb40 <mpfr_assert_fail@plt>
   3af94:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   3af98:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   3af9c:	add	x2, x2, #0xfe0
   3afa0:	add	x0, x0, #0xff0
   3afa4:	mov	w1, #0xb6                  	// #182
   3afa8:	bl	cb40 <mpfr_assert_fail@plt>
   3afac:	bl	c8e0 <mpfr_abort_prec_max@plt>
   3afb0:	stp	x29, x30, [sp, #-96]!
   3afb4:	mov	x29, sp
   3afb8:	stp	x23, x24, [sp, #48]
   3afbc:	add	x24, sp, #0x50
   3afc0:	mov	x23, x1
   3afc4:	stp	x19, x20, [sp, #16]
   3afc8:	mov	w20, w5
   3afcc:	mov	x19, x3
   3afd0:	stp	x21, x22, [sp, #32]
   3afd4:	mov	x21, x0
   3afd8:	mov	x0, x24
   3afdc:	stp	x25, x26, [sp, #64]
   3afe0:	mov	x26, x2
   3afe4:	mov	x25, x4
   3afe8:	bl	bf90 <mpfr_mpz_init@plt>
   3afec:	mov	w22, #0x5                   	// #5
   3aff0:	mov	w2, #0x3                   	// #3
   3aff4:	mov	x1, x26
   3aff8:	mov	x0, x24
   3affc:	bl	be00 <mpfr_get_z@plt>
   3b000:	mov	x0, x24
   3b004:	mov	x1, #0x0                   	// #0
   3b008:	sub	w22, w22, w20
   3b00c:	bl	bfe0 <__gmpz_tstbit@plt>
   3b010:	cbz	w0, 3b168 <mpfr_get_ui@@Base+0xee0>
   3b014:	cmp	w20, #0x3
   3b018:	b.eq	3b1b0 <mpfr_get_ui@@Base+0xf28>  // b.none
   3b01c:	mov	x2, x26
   3b020:	mov	w3, w22
   3b024:	mov	x1, x25
   3b028:	mov	x0, x19
   3b02c:	bl	bd50 <mpfr_mul@plt>
   3b030:	mov	w3, #0x0                   	// #0
   3b034:	mov	x2, #0x1                   	// #1
   3b038:	mov	x1, x19
   3b03c:	mov	x0, x19
   3b040:	bl	c8f0 <mpfr_div_2ui@plt>
   3b044:	mov	x0, x24
   3b048:	mov	x1, #0x1                   	// #1
   3b04c:	bl	bfe0 <__gmpz_tstbit@plt>
   3b050:	cbnz	w0, 3b140 <mpfr_get_ui@@Base+0xeb8>
   3b054:	mov	w2, w20
   3b058:	mov	x1, x19
   3b05c:	mov	x0, x19
   3b060:	bl	c450 <mpfr_sin@plt>
   3b064:	mov	x0, x24
   3b068:	bl	c170 <mpfr_mpz_clear@plt>
   3b06c:	mov	w2, w20
   3b070:	mov	x1, x23
   3b074:	mov	x0, x21
   3b078:	bl	3a440 <mpfr_get_ui@@Base+0x1b8>
   3b07c:	mov	w3, w20
   3b080:	mov	x2, x19
   3b084:	mov	x1, x21
   3b088:	mov	x0, x21
   3b08c:	bl	bd50 <mpfr_mul@plt>
   3b090:	mov	w2, w20
   3b094:	mov	x1, x21
   3b098:	mov	x0, x21
   3b09c:	bl	c090 <mpfr_log@plt>
   3b0a0:	mov	w2, w20
   3b0a4:	mov	x1, x23
   3b0a8:	mov	x0, x19
   3b0ac:	bl	c600 <mpfr_lngamma@plt>
   3b0b0:	mov	w3, w20
   3b0b4:	mov	x2, x19
   3b0b8:	mov	x1, x21
   3b0bc:	mov	x0, x21
   3b0c0:	bl	c1a0 <mpfr_add@plt>
   3b0c4:	mov	w3, w22
   3b0c8:	mov	x1, x25
   3b0cc:	mov	x2, #0x1                   	// #1
   3b0d0:	mov	x0, x19
   3b0d4:	bl	c2c0 <mpfr_mul_2ui@plt>
   3b0d8:	mov	w2, w22
   3b0dc:	mov	x1, x19
   3b0e0:	mov	x0, x19
   3b0e4:	bl	c090 <mpfr_log@plt>
   3b0e8:	mov	w3, w22
   3b0ec:	mov	x2, x23
   3b0f0:	mov	x1, x19
   3b0f4:	mov	x0, x19
   3b0f8:	bl	bd50 <mpfr_mul@plt>
   3b0fc:	mov	w3, w20
   3b100:	mov	x2, x19
   3b104:	mov	x1, x21
   3b108:	mov	x0, x21
   3b10c:	bl	bb70 <mpfr_sub@plt>
   3b110:	mov	w2, w20
   3b114:	mov	x1, x21
   3b118:	mov	x0, x21
   3b11c:	bl	c750 <mpfr_exp@plt>
   3b120:	cmp	w20, #0x3
   3b124:	b.eq	3b190 <mpfr_get_ui@@Base+0xf08>  // b.none
   3b128:	ldp	x19, x20, [sp, #16]
   3b12c:	ldp	x21, x22, [sp, #32]
   3b130:	ldp	x23, x24, [sp, #48]
   3b134:	ldp	x25, x26, [sp, #64]
   3b138:	ldp	x29, x30, [sp], #96
   3b13c:	ret
   3b140:	mov	w2, w22
   3b144:	mov	x1, x19
   3b148:	mov	x0, x19
   3b14c:	bl	c450 <mpfr_sin@plt>
   3b150:	mov	x1, x19
   3b154:	mov	x0, x19
   3b158:	mov	w3, #0x1                   	// #1
   3b15c:	mov	w2, #0x0                   	// #0
   3b160:	bl	c6a0 <mpfr_set4@plt>
   3b164:	b	3b064 <mpfr_get_ui@@Base+0xddc>
   3b168:	mov	x2, x26
   3b16c:	mov	w3, w20
   3b170:	mov	x1, x25
   3b174:	mov	x0, x19
   3b178:	bl	bd50 <mpfr_mul@plt>
   3b17c:	cmp	w20, #0x3
   3b180:	b.ne	3b030 <mpfr_get_ui@@Base+0xda8>  // b.any
   3b184:	mov	x0, x25
   3b188:	bl	c120 <mpfr_nextabove@plt>
   3b18c:	b	3b030 <mpfr_get_ui@@Base+0xda8>
   3b190:	mov	x0, x25
   3b194:	bl	bdd0 <mpfr_nextbelow@plt>
   3b198:	ldp	x19, x20, [sp, #16]
   3b19c:	ldp	x21, x22, [sp, #32]
   3b1a0:	ldp	x23, x24, [sp, #48]
   3b1a4:	ldp	x25, x26, [sp, #64]
   3b1a8:	ldp	x29, x30, [sp], #96
   3b1ac:	ret
   3b1b0:	mov	x0, x25
   3b1b4:	bl	c120 <mpfr_nextabove@plt>
   3b1b8:	b	3b01c <mpfr_get_ui@@Base+0xd94>
   3b1bc:	nop

000000000003b1c0 <mpfr_zeta@@Base>:
   3b1c0:	stp	x29, x30, [sp, #-496]!
   3b1c4:	mov	x29, sp
   3b1c8:	stp	x19, x20, [sp, #16]
   3b1cc:	mov	x19, x1
   3b1d0:	ldr	x1, [x1, #16]
   3b1d4:	stp	x21, x22, [sp, #32]
   3b1d8:	mov	x22, x0
   3b1dc:	str	w2, [sp, #112]
   3b1e0:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   3b1e4:	cmp	x1, x2
   3b1e8:	b.le	3bc24 <mpfr_zeta@@Base+0xa64>
   3b1ec:	ldr	x0, [x0]
   3b1f0:	stp	x23, x24, [sp, #48]
   3b1f4:	add	x2, x1, #0x1
   3b1f8:	neg	x0, x0
   3b1fc:	ldr	w23, [x19, #8]
   3b200:	cmp	x2, x0
   3b204:	b.lt	3ba48 <mpfr_zeta@@Base+0x888>  // b.tstop
   3b208:	tbnz	w23, #31, 3b79c <mpfr_zeta@@Base+0x5dc>
   3b20c:	stp	x25, x26, [sp, #64]
   3b210:	adrp	x26, 7f000 <__gmpfr_l2b@@Base+0x200>
   3b214:	mov	x0, x19
   3b218:	ldr	x1, [x26, #3928]
   3b21c:	mov	w2, #0x1                   	// #1
   3b220:	bl	c9a0 <mpfr_cmp3@plt>
   3b224:	mov	w21, w0
   3b228:	cbz	w0, 3b7ec <mpfr_zeta@@Base+0x62c>
   3b22c:	mrs	x20, tpidr_el0
   3b230:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3b234:	ldr	x1, [x0, #2576]
   3b238:	add	x0, x0, #0xa10
   3b23c:	blr	x1
   3b240:	ldr	w2, [x19, #8]
   3b244:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   3b248:	stp	x27, x28, [sp, #80]
   3b24c:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   3b250:	ldr	w0, [x20, x0]
   3b254:	str	w0, [sp, #116]
   3b258:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3b25c:	ldr	x3, [x0, #2512]
   3b260:	add	x0, x0, #0x9d0
   3b264:	blr	x3
   3b268:	add	x3, x20, x0
   3b26c:	ldr	x0, [x20, x0]
   3b270:	str	x0, [sp, #128]
   3b274:	str	x4, [x3]
   3b278:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3b27c:	ldr	x5, [x0, #2544]
   3b280:	add	x0, x0, #0x9f0
   3b284:	blr	x5
   3b288:	cmp	w2, #0x0
   3b28c:	ldr	x2, [x20, x0]
   3b290:	str	x1, [x20, x0]
   3b294:	str	x2, [sp, #136]
   3b298:	ldr	x0, [x19, #16]
   3b29c:	b.le	3bb74 <mpfr_zeta@@Base+0x9b4>
   3b2a0:	tbz	x0, #63, 3b83c <mpfr_zeta@@Base+0x67c>
   3b2a4:	ldr	x28, [x19]
   3b2a8:	ldr	x1, [x22]
   3b2ac:	add	x28, x28, #0x2
   3b2b0:	str	x1, [sp, #96]
   3b2b4:	sub	x28, x28, x0
   3b2b8:	add	x25, sp, #0x160
   3b2bc:	mov	x4, #0x0                   	// #0
   3b2c0:	mov	x3, x25
   3b2c4:	add	x23, sp, #0x140
   3b2c8:	add	x21, sp, #0x120
   3b2cc:	mov	x2, x23
   3b2d0:	mov	x1, x21
   3b2d4:	mov	x0, #0x40                  	// #64
   3b2d8:	bl	cc50 <mpfr_inits2@plt>
   3b2dc:	mov	x0, x19
   3b2e0:	mov	x2, #0x0                   	// #0
   3b2e4:	mov	x1, #0x1                   	// #1
   3b2e8:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   3b2ec:	mov	w3, #0x2                   	// #2
   3b2f0:	tbnz	w0, #31, 3bbf4 <mpfr_zeta@@Base+0xa34>
   3b2f4:	mov	x1, x19
   3b2f8:	mov	x0, x21
   3b2fc:	mov	x2, #0x1                   	// #1
   3b300:	bl	c530 <mpfr_sub_ui@plt>
   3b304:	ldr	x24, [sp, #96]
   3b308:	mov	w3, #0x2                   	// #2
   3b30c:	mov	x1, #0x1                   	// #1
   3b310:	mov	x0, x23
   3b314:	mov	x2, #0xfffffffffffffff2    	// #-14
   3b318:	sub	x2, x2, x24
   3b31c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3b320:	add	x27, x24, #0xe
   3b324:	ldr	x1, [sp, #304]
   3b328:	add	x0, x24, #0xd
   3b32c:	mov	w3, #0x2                   	// #2
   3b330:	cmp	x0, x1
   3b334:	b.ge	3bbcc <mpfr_zeta@@Base+0xa0c>  // b.tcont
   3b338:	mov	x1, x21
   3b33c:	mov	x0, x21
   3b340:	mov	x2, #0x1                   	// #1
   3b344:	bl	c2c0 <mpfr_mul_2ui@plt>
   3b348:	mov	x1, x23
   3b34c:	mov	w3, #0x2                   	// #2
   3b350:	mov	x2, #0x1                   	// #1
   3b354:	mov	x0, x23
   3b358:	bl	c260 <mpfr_add_ui@plt>
   3b35c:	mov	x2, x23
   3b360:	mov	x1, x21
   3b364:	mov	w3, #0x2                   	// #2
   3b368:	mov	x0, x21
   3b36c:	bl	bd50 <mpfr_mul@plt>
   3b370:	mov	x1, x21
   3b374:	mov	x0, x25
   3b378:	mov	w3, #0x2                   	// #2
   3b37c:	mov	x2, #0x1                   	// #1
   3b380:	bl	c260 <mpfr_add_ui@plt>
   3b384:	ldr	x0, [sp, #368]
   3b388:	cmp	x0, #0x3
   3b38c:	b.gt	3bbb4 <mpfr_zeta@@Base+0x9f4>
   3b390:	mov	x0, x21
   3b394:	mov	w3, #0x2                   	// #2
   3b398:	mov	x2, #0x0                   	// #0
   3b39c:	mov	x1, #0x8                   	// #8
   3b3a0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3b3a4:	mov	x2, x27
   3b3a8:	mov	x1, x21
   3b3ac:	mov	w3, #0x2                   	// #2
   3b3b0:	mov	x0, x21
   3b3b4:	bl	c8f0 <mpfr_div_2ui@plt>
   3b3b8:	mov	x1, x21
   3b3bc:	mov	w3, #0x2                   	// #2
   3b3c0:	mov	x2, #0x1                   	// #1
   3b3c4:	mov	x0, x21
   3b3c8:	bl	c260 <mpfr_add_ui@plt>
   3b3cc:	mov	x2, x23
   3b3d0:	mov	x1, x21
   3b3d4:	mov	w3, #0x2                   	// #2
   3b3d8:	mov	x0, x21
   3b3dc:	bl	bd50 <mpfr_mul@plt>
   3b3e0:	mov	x1, x25
   3b3e4:	mov	w3, #0x2                   	// #2
   3b3e8:	mov	x2, #0xd                   	// #13
   3b3ec:	mov	x0, x23
   3b3f0:	bl	c260 <mpfr_add_ui@plt>
   3b3f4:	mov	w3, #0x2                   	// #2
   3b3f8:	mov	x2, x21
   3b3fc:	mov	x1, x23
   3b400:	mov	x0, x23
   3b404:	bl	bd50 <mpfr_mul@plt>
   3b408:	mov	x1, x21
   3b40c:	mov	w2, #0x2                   	// #2
   3b410:	mov	x0, x21
   3b414:	bl	c400 <mpfr_sqr@plt>
   3b418:	mov	x2, x21
   3b41c:	mov	x1, x23
   3b420:	mov	w3, #0x2                   	// #2
   3b424:	mov	x0, x23
   3b428:	bl	bd50 <mpfr_mul@plt>
   3b42c:	ldr	x0, [sp, #336]
   3b430:	mov	x1, x23
   3b434:	mov	x2, x25
   3b438:	mov	x3, #0x0                   	// #0
   3b43c:	mov	x24, x0
   3b440:	mov	x0, x21
   3b444:	str	x24, [sp, #152]
   3b448:	bl	c1b0 <mpfr_clears@plt>
   3b44c:	ldr	x1, [sp, #96]
   3b450:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3b454:	add	x1, x1, x24
   3b458:	cmp	x1, x28
   3b45c:	csel	x28, x1, x28, ge  // ge = tcont
   3b460:	add	x24, x28, #0xa
   3b464:	cmp	x24, x0
   3b468:	b.ge	3bdf8 <mpfr_zeta@@Base+0xc38>  // b.tcont
   3b46c:	add	x1, x28, #0x48
   3b470:	adds	x28, x28, #0x9
   3b474:	csel	x1, x1, x28, mi  // mi = first
   3b478:	asr	x1, x1, #6
   3b47c:	add	x1, x1, #0x1
   3b480:	lsl	x0, x1, #2
   3b484:	cmp	x0, #0x10
   3b488:	b.gt	3bc08 <mpfr_zeta@@Base+0xa48>
   3b48c:	add	x25, x25, #0x10
   3b490:	stp	xzr, x25, [sp, #352]
   3b494:	mov	x0, x25
   3b498:	ldr	x2, [x26, #3928]
   3b49c:	add	x3, x1, x1, lsl #1
   3b4a0:	add	x28, sp, #0x100
   3b4a4:	add	x27, sp, #0xc0
   3b4a8:	add	x25, sp, #0xe0
   3b4ac:	add	x26, sp, #0xa0
   3b4b0:	str	x2, [sp, #120]
   3b4b4:	mov	w2, #0x1                   	// #1
   3b4b8:	add	x3, x0, x3, lsl #3
   3b4bc:	str	x24, [sp, #160]
   3b4c0:	str	w2, [sp, #168]
   3b4c4:	stp	x0, x24, [sp, #184]
   3b4c8:	str	w2, [sp, #200]
   3b4cc:	str	x24, [sp, #224]
   3b4d0:	str	w2, [sp, #232]
   3b4d4:	str	x24, [sp, #256]
   3b4d8:	str	w2, [sp, #264]
   3b4dc:	add	x2, x0, x1, lsl #3
   3b4e0:	add	x1, x0, x1, lsl #4
   3b4e4:	mov	x0, #0x40                  	// #64
   3b4e8:	str	x0, [sp, #104]
   3b4ec:	str	x2, [sp, #216]
   3b4f0:	str	x1, [sp, #248]
   3b4f4:	str	x3, [sp, #280]
   3b4f8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3b4fc:	ldr	x1, [x0, #2624]
   3b500:	add	x0, x0, #0xa40
   3b504:	blr	x1
   3b508:	add	x0, x20, x0
   3b50c:	mov	x1, x0
   3b510:	mov	w2, #0x3                   	// #3
   3b514:	str	x0, [sp, #144]
   3b518:	mov	x0, x28
   3b51c:	bl	c380 <mpfr_cache@plt>
   3b520:	ldr	x1, [sp, #120]
   3b524:	mov	w3, #0x0                   	// #0
   3b528:	mov	x2, x19
   3b52c:	mov	x0, x27
   3b530:	bl	bb70 <mpfr_sub@plt>
   3b534:	mov	x1, x27
   3b538:	mov	x0, x25
   3b53c:	mov	w2, #0x0                   	// #0
   3b540:	bl	c7b0 <mpfr_gamma@plt>
   3b544:	ldr	x0, [sp, #240]
   3b548:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3b54c:	cmp	x0, x1
   3b550:	b.eq	3b884 <mpfr_zeta@@Base+0x6c4>  // b.none
   3b554:	mov	x1, x27
   3b558:	mov	w2, #0x0                   	// #0
   3b55c:	mov	x0, x26
   3b560:	bl	3a440 <mpfr_get_ui@@Base+0x1b8>
   3b564:	mov	x2, x25
   3b568:	mov	x1, x26
   3b56c:	mov	w3, #0x0                   	// #0
   3b570:	mov	x0, x26
   3b574:	bl	bd50 <mpfr_mul@plt>
   3b578:	mov	w3, #0x0                   	// #0
   3b57c:	mov	x1, x28
   3b580:	mov	x2, #0x1                   	// #1
   3b584:	mov	x0, x25
   3b588:	bl	c2c0 <mpfr_mul_2ui@plt>
   3b58c:	mov	x1, x27
   3b590:	mov	w2, #0x0                   	// #0
   3b594:	mov	x0, x27
   3b598:	bl	bd70 <mpfr_neg@plt>
   3b59c:	mov	x2, x27
   3b5a0:	mov	x1, x25
   3b5a4:	mov	w3, #0x0                   	// #0
   3b5a8:	mov	x0, x25
   3b5ac:	bl	bd90 <mpfr_pow@plt>
   3b5b0:	mov	x2, x25
   3b5b4:	mov	x1, x26
   3b5b8:	mov	w3, #0x0                   	// #0
   3b5bc:	mov	x0, x26
   3b5c0:	bl	bd50 <mpfr_mul@plt>
   3b5c4:	mov	x1, x26
   3b5c8:	mov	w3, #0x0                   	// #0
   3b5cc:	mov	x2, #0x1                   	// #1
   3b5d0:	mov	x0, x26
   3b5d4:	bl	c2c0 <mpfr_mul_2ui@plt>
   3b5d8:	mov	x2, x28
   3b5dc:	mov	x1, x19
   3b5e0:	mov	w3, #0x0                   	// #0
   3b5e4:	mov	x0, x25
   3b5e8:	bl	bd50 <mpfr_mul@plt>
   3b5ec:	mov	w3, #0x0                   	// #0
   3b5f0:	mov	x1, x25
   3b5f4:	mov	x2, #0x1                   	// #1
   3b5f8:	mov	x0, x28
   3b5fc:	bl	c8f0 <mpfr_div_2ui@plt>
   3b600:	mov	x1, x28
   3b604:	mov	x0, x25
   3b608:	mov	w2, #0x0                   	// #0
   3b60c:	bl	c450 <mpfr_sin@plt>
   3b610:	ldr	x1, [sp, #240]
   3b614:	tbz	x1, #63, 3b68c <mpfr_zeta@@Base+0x4cc>
   3b618:	mov	x2, #0xfffffffffffffeff    	// #-257
   3b61c:	neg	x0, x1
   3b620:	movk	x2, #0x7fff, lsl #48
   3b624:	sub	x2, x2, x24
   3b628:	cmp	x0, x2
   3b62c:	b.ge	3bd58 <mpfr_zeta@@Base+0xb98>  // b.tcont
   3b630:	sub	x1, x24, x1
   3b634:	mov	x0, x23
   3b638:	bl	ca80 <mpfr_init2@plt>
   3b63c:	ldr	x1, [sp, #144]
   3b640:	mov	w2, #0x3                   	// #3
   3b644:	mov	x0, x23
   3b648:	bl	c380 <mpfr_cache@plt>
   3b64c:	mov	x2, x23
   3b650:	mov	x1, x19
   3b654:	mov	w3, #0x0                   	// #0
   3b658:	mov	x0, x23
   3b65c:	bl	bd50 <mpfr_mul@plt>
   3b660:	mov	x1, x23
   3b664:	mov	w3, #0x0                   	// #0
   3b668:	mov	x2, #0x1                   	// #1
   3b66c:	mov	x0, x23
   3b670:	bl	c8f0 <mpfr_div_2ui@plt>
   3b674:	mov	x1, x23
   3b678:	mov	w2, #0x0                   	// #0
   3b67c:	mov	x0, x25
   3b680:	bl	c450 <mpfr_sin@plt>
   3b684:	mov	x0, x23
   3b688:	bl	c070 <mpfr_clear@plt>
   3b68c:	mov	x1, x26
   3b690:	mov	x2, x25
   3b694:	mov	x0, x26
   3b698:	mov	w3, #0x0                   	// #0
   3b69c:	bl	bd50 <mpfr_mul@plt>
   3b6a0:	ldr	x0, [sp, #176]
   3b6a4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3b6a8:	cmp	x0, x1
   3b6ac:	b.le	3b97c <mpfr_zeta@@Base+0x7bc>
   3b6b0:	ldr	w0, [sp, #112]
   3b6b4:	ldr	x2, [sp, #96]
   3b6b8:	cmp	w0, #0x0
   3b6bc:	ldr	x1, [sp, #160]
   3b6c0:	cinc	x3, x2, eq  // eq = none
   3b6c4:	ldr	x0, [sp, #184]
   3b6c8:	sub	x1, x1, #0x1
   3b6cc:	ldr	x2, [sp, #152]
   3b6d0:	asr	x1, x1, #6
   3b6d4:	add	x1, x1, #0x1
   3b6d8:	sub	x2, x24, x2
   3b6dc:	bl	c370 <mpfr_round_p@plt>
   3b6e0:	cbz	w0, 3b97c <mpfr_zeta@@Base+0x7bc>
   3b6e4:	ldr	w2, [sp, #112]
   3b6e8:	mov	x1, x26
   3b6ec:	ldr	w3, [sp, #168]
   3b6f0:	mov	x0, x22
   3b6f4:	bl	c6a0 <mpfr_set4@plt>
   3b6f8:	mov	w21, w0
   3b6fc:	ldr	x1, [sp, #352]
   3b700:	cbz	x1, 3b70c <mpfr_zeta@@Base+0x54c>
   3b704:	ldr	x0, [sp, #360]
   3b708:	bl	cc20 <mpfr_free_func@plt>
   3b70c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3b710:	ldr	x1, [x0, #2576]
   3b714:	add	x0, x0, #0xa10
   3b718:	blr	x1
   3b71c:	add	x2, x20, x0
   3b720:	ldr	w1, [sp, #116]
   3b724:	str	w1, [x20, x0]
   3b728:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3b72c:	ldr	x3, [x0, #2512]
   3b730:	add	x0, x0, #0x9d0
   3b734:	blr	x3
   3b738:	ldr	x3, [sp, #128]
   3b73c:	str	x3, [x20, x0]
   3b740:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3b744:	ldr	x4, [x0, #2544]
   3b748:	add	x0, x0, #0x9f0
   3b74c:	blr	x4
   3b750:	ldr	x1, [x22, #16]
   3b754:	ldr	x4, [sp, #136]
   3b758:	str	x4, [x20, x0]
   3b75c:	cmp	x4, x1
   3b760:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   3b764:	b.le	3b854 <mpfr_zeta@@Base+0x694>
   3b768:	ldr	w2, [sp, #112]
   3b76c:	mov	w1, w21
   3b770:	mov	x0, x22
   3b774:	bl	cb30 <mpfr_check_range@plt>
   3b778:	mov	w21, w0
   3b77c:	mov	w0, w21
   3b780:	ldp	x19, x20, [sp, #16]
   3b784:	ldp	x21, x22, [sp, #32]
   3b788:	ldp	x23, x24, [sp, #48]
   3b78c:	ldp	x25, x26, [sp, #64]
   3b790:	ldp	x27, x28, [sp, #80]
   3b794:	ldp	x29, x30, [sp], #496
   3b798:	ret
   3b79c:	ldp	x2, x3, [x19, #16]
   3b7a0:	stp	x2, x3, [sp, #368]
   3b7a4:	sub	x1, x1, #0x1
   3b7a8:	ldp	x2, x3, [x19]
   3b7ac:	add	x0, sp, #0x160
   3b7b0:	stp	x2, x3, [sp, #352]
   3b7b4:	str	x1, [sp, #368]
   3b7b8:	bl	c160 <mpfr_integer_p@plt>
   3b7bc:	cbz	w0, 3b20c <mpfr_zeta@@Base+0x4c>
   3b7c0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3b7c4:	mov	w1, #0x1                   	// #1
   3b7c8:	ldp	x23, x24, [sp, #48]
   3b7cc:	str	w1, [x22, #8]
   3b7d0:	str	x0, [x22, #16]
   3b7d4:	mov	w21, #0x0                   	// #0
   3b7d8:	mov	w0, w21
   3b7dc:	ldp	x19, x20, [sp, #16]
   3b7e0:	ldp	x21, x22, [sp, #32]
   3b7e4:	ldp	x29, x30, [sp], #496
   3b7e8:	ret
   3b7ec:	mrs	x1, tpidr_el0
   3b7f0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3b7f4:	ldr	x2, [x0, #2576]
   3b7f8:	add	x0, x0, #0xa10
   3b7fc:	blr	x2
   3b800:	add	x0, x1, x0
   3b804:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3b808:	ldp	x23, x24, [sp, #48]
   3b80c:	mov	w2, #0x1                   	// #1
   3b810:	ldp	x25, x26, [sp, #64]
   3b814:	str	x1, [x22, #16]
   3b818:	ldr	w1, [x0]
   3b81c:	str	w2, [x22, #8]
   3b820:	orr	w1, w1, #0x20
   3b824:	str	w1, [x0]
   3b828:	mov	w0, w21
   3b82c:	ldp	x19, x20, [sp, #16]
   3b830:	ldp	x21, x22, [sp, #32]
   3b834:	ldp	x29, x30, [sp], #496
   3b838:	ret
   3b83c:	ldr	w2, [sp, #112]
   3b840:	mov	x1, x19
   3b844:	mov	x0, x22
   3b848:	bl	3a440 <mpfr_get_ui@@Base+0x1b8>
   3b84c:	mov	w21, w0
   3b850:	b	3b70c <mpfr_zeta@@Base+0x54c>
   3b854:	cbz	w21, 3ba28 <mpfr_zeta@@Base+0x868>
   3b858:	ldr	w0, [sp, #116]
   3b85c:	ldp	x23, x24, [sp, #48]
   3b860:	orr	w0, w0, #0x8
   3b864:	ldp	x25, x26, [sp, #64]
   3b868:	ldp	x27, x28, [sp, #80]
   3b86c:	str	w0, [x2]
   3b870:	mov	w0, w21
   3b874:	ldp	x19, x20, [sp, #16]
   3b878:	ldp	x21, x22, [sp, #32]
   3b87c:	ldp	x29, x30, [sp], #496
   3b880:	ret
   3b884:	mov	x1, x27
   3b888:	mov	x0, x26
   3b88c:	mov	x4, x28
   3b890:	mov	x3, x25
   3b894:	mov	x2, x19
   3b898:	mov	w5, #0x3                   	// #3
   3b89c:	bl	3afb0 <mpfr_get_ui@@Base+0xd28>
   3b8a0:	ldr	x1, [sp, #176]
   3b8a4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3b8a8:	cmp	x1, x0
   3b8ac:	b.eq	3bd98 <mpfr_zeta@@Base+0xbd8>  // b.none
   3b8b0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3b8b4:	ldr	x2, [x0, #2544]
   3b8b8:	add	x0, x0, #0x9f0
   3b8bc:	blr	x2
   3b8c0:	add	x2, x20, x0
   3b8c4:	ldr	x0, [x20, x0]
   3b8c8:	str	x2, [sp, #144]
   3b8cc:	cmp	x1, x0
   3b8d0:	b.eq	3bd98 <mpfr_zeta@@Base+0xbd8>  // b.none
   3b8d4:	ldr	x1, [sp, #160]
   3b8d8:	mov	x0, x21
   3b8dc:	bl	ca80 <mpfr_init2@plt>
   3b8e0:	mov	x1, x27
   3b8e4:	mov	x0, x21
   3b8e8:	mov	x4, x28
   3b8ec:	mov	x3, x25
   3b8f0:	mov	x2, x19
   3b8f4:	mov	w5, #0x2                   	// #2
   3b8f8:	bl	3afb0 <mpfr_get_ui@@Base+0xd28>
   3b8fc:	ldr	x0, [sp, #304]
   3b900:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   3b904:	cmp	x0, x1
   3b908:	b.eq	3b97c <mpfr_zeta@@Base+0x7bc>  // b.none
   3b90c:	ldr	x1, [sp, #144]
   3b910:	ldr	x1, [x1]
   3b914:	cmp	x0, x1
   3b918:	b.eq	3b97c <mpfr_zeta@@Base+0x7bc>  // b.none
   3b91c:	ldr	x1, [sp, #96]
   3b920:	mov	x0, x23
   3b924:	bl	ca80 <mpfr_init2@plt>
   3b928:	ldr	w3, [sp, #168]
   3b92c:	mov	x1, x26
   3b930:	ldr	w2, [sp, #112]
   3b934:	mov	x0, x23
   3b938:	bl	c6a0 <mpfr_set4@plt>
   3b93c:	ldr	w2, [sp, #112]
   3b940:	mov	x0, x21
   3b944:	ldr	x1, [sp, #96]
   3b948:	bl	c970 <mpfr_prec_round@plt>
   3b94c:	mov	x1, x21
   3b950:	mov	w2, #0x1                   	// #1
   3b954:	mov	x0, x23
   3b958:	bl	c9a0 <mpfr_cmp3@plt>
   3b95c:	mov	w1, w0
   3b960:	mov	x0, x21
   3b964:	str	w1, [sp, #144]
   3b968:	bl	c070 <mpfr_clear@plt>
   3b96c:	mov	x0, x23
   3b970:	bl	c070 <mpfr_clear@plt>
   3b974:	ldr	w1, [sp, #144]
   3b978:	cbz	w1, 3bcc8 <mpfr_zeta@@Base+0xb08>
   3b97c:	ldr	x1, [sp, #104]
   3b980:	mov	x0, #0xfffffffffffffeff    	// #-257
   3b984:	movk	x0, #0x7fff, lsl #48
   3b988:	sub	x0, x0, x24
   3b98c:	cmp	x0, x1
   3b990:	b.lt	3bd40 <mpfr_zeta@@Base+0xb80>  // b.tstop
   3b994:	ldr	x0, [sp, #104]
   3b998:	ldr	x1, [sp, #352]
   3b99c:	add	x24, x24, x0
   3b9a0:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3b9a4:	cmp	x24, x0
   3b9a8:	add	x0, x24, x24, lsr #63
   3b9ac:	asr	x0, x0, #1
   3b9b0:	str	x0, [sp, #104]
   3b9b4:	b.ge	3bdf8 <mpfr_zeta@@Base+0xc38>  // b.tcont
   3b9b8:	sub	x3, x24, #0x1
   3b9bc:	asr	x3, x3, #6
   3b9c0:	add	x3, x3, #0x1
   3b9c4:	str	x3, [sp, #144]
   3b9c8:	lsl	x2, x3, #5
   3b9cc:	str	x2, [sp, #352]
   3b9d0:	cbnz	x1, 3bbe0 <mpfr_zeta@@Base+0xa20>
   3b9d4:	mov	x0, x2
   3b9d8:	bl	ccf0 <mpfr_allocate_func@plt>
   3b9dc:	ldr	x3, [sp, #144]
   3b9e0:	str	x0, [sp, #360]
   3b9e4:	add	x2, x3, x3, lsl #1
   3b9e8:	mov	w1, #0x1                   	// #1
   3b9ec:	str	x24, [sp, #160]
   3b9f0:	add	x2, x0, x2, lsl #3
   3b9f4:	str	w1, [sp, #168]
   3b9f8:	stp	x0, x24, [sp, #184]
   3b9fc:	str	w1, [sp, #200]
   3ba00:	str	x24, [sp, #224]
   3ba04:	str	w1, [sp, #232]
   3ba08:	str	x24, [sp, #256]
   3ba0c:	str	w1, [sp, #264]
   3ba10:	add	x1, x0, x3, lsl #3
   3ba14:	add	x3, x0, x3, lsl #4
   3ba18:	str	x1, [sp, #216]
   3ba1c:	str	x3, [sp, #248]
   3ba20:	str	x2, [sp, #280]
   3ba24:	b	3b4f8 <mpfr_zeta@@Base+0x338>
   3ba28:	mov	w0, w21
   3ba2c:	ldp	x19, x20, [sp, #16]
   3ba30:	ldp	x21, x22, [sp, #32]
   3ba34:	ldp	x23, x24, [sp, #48]
   3ba38:	ldp	x25, x26, [sp, #64]
   3ba3c:	ldp	x27, x28, [sp, #80]
   3ba40:	ldp	x29, x30, [sp], #496
   3ba44:	ret
   3ba48:	mrs	x20, tpidr_el0
   3ba4c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3ba50:	ldr	x1, [x0, #2576]
   3ba54:	add	x0, x0, #0xa10
   3ba58:	blr	x1
   3ba5c:	ldr	w21, [sp, #112]
   3ba60:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   3ba64:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   3ba68:	stp	x25, x26, [sp, #64]
   3ba6c:	ldr	w19, [x20, x0]
   3ba70:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3ba74:	ldr	x1, [x0, #2512]
   3ba78:	add	x0, x0, #0x9d0
   3ba7c:	blr	x1
   3ba80:	add	x5, x20, x0
   3ba84:	ldr	x25, [x20, x0]
   3ba88:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3ba8c:	ldr	x7, [x0, #2544]
   3ba90:	add	x0, x0, #0x9f0
   3ba94:	blr	x7
   3ba98:	mov	x2, #0xffffffffffffffff    	// #-1
   3ba9c:	mov	w3, w21
   3baa0:	mov	x1, x2
   3baa4:	str	x6, [x5]
   3baa8:	ldr	x26, [x20, x0]
   3baac:	str	x4, [x20, x0]
   3bab0:	mov	x0, x22
   3bab4:	bl	ba80 <mpfr_set_si_2exp@plt>
   3bab8:	cmp	w21, #0x4
   3babc:	b.eq	3bc80 <mpfr_zeta@@Base+0xac0>  // b.none
   3bac0:	sub	w0, w21, #0x1
   3bac4:	cmp	w0, #0x1
   3bac8:	b.hi	3bd2c <mpfr_zeta@@Base+0xb6c>  // b.pmore
   3bacc:	tbnz	w23, #31, 3bd70 <mpfr_zeta@@Base+0xbb0>
   3bad0:	ldr	w1, [sp, #112]
   3bad4:	mov	w21, #0x1                   	// #1
   3bad8:	cmp	w1, #0x2
   3badc:	b.ne	3bb60 <mpfr_zeta@@Base+0x9a0>  // b.any
   3bae0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3bae4:	ldr	x1, [x0, #2576]
   3bae8:	add	x0, x0, #0xa10
   3baec:	blr	x1
   3baf0:	str	w19, [x20, x0]
   3baf4:	ldr	x1, [x22, #16]
   3baf8:	add	x2, x20, x0
   3bafc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3bb00:	ldr	x3, [x0, #2512]
   3bb04:	add	x0, x0, #0x9d0
   3bb08:	blr	x3
   3bb0c:	str	x25, [x20, x0]
   3bb10:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3bb14:	ldr	x3, [x0, #2544]
   3bb18:	add	x0, x0, #0x9f0
   3bb1c:	blr	x3
   3bb20:	str	x26, [x20, x0]
   3bb24:	cmp	x26, x1
   3bb28:	ccmp	x25, x1, #0x0, ge  // ge = tcont
   3bb2c:	b.le	3bb90 <mpfr_zeta@@Base+0x9d0>
   3bb30:	ldr	w2, [sp, #112]
   3bb34:	mov	w1, w21
   3bb38:	mov	x0, x22
   3bb3c:	bl	cb30 <mpfr_check_range@plt>
   3bb40:	mov	w21, w0
   3bb44:	mov	w0, w21
   3bb48:	ldp	x19, x20, [sp, #16]
   3bb4c:	ldp	x21, x22, [sp, #32]
   3bb50:	ldp	x23, x24, [sp, #48]
   3bb54:	ldp	x25, x26, [sp, #64]
   3bb58:	ldp	x29, x30, [sp], #496
   3bb5c:	ret
   3bb60:	cmp	w23, #0x0
   3bb64:	mov	w0, #0xffffffff            	// #-1
   3bb68:	ccmp	w1, #0x3, #0x4, gt
   3bb6c:	cneg	w21, w0, ne  // ne = any
   3bb70:	b	3bae0 <mpfr_zeta@@Base+0x920>
   3bb74:	ldr	x28, [x19]
   3bb78:	cmp	x0, #0x0
   3bb7c:	ldr	x1, [x22]
   3bb80:	str	x1, [sp, #96]
   3bb84:	add	x28, x28, #0x2
   3bb88:	b.gt	3b2b8 <mpfr_zeta@@Base+0xf8>
   3bb8c:	b	3b2b4 <mpfr_zeta@@Base+0xf4>
   3bb90:	orr	w19, w19, #0x8
   3bb94:	mov	w0, w21
   3bb98:	ldp	x23, x24, [sp, #48]
   3bb9c:	ldp	x25, x26, [sp, #64]
   3bba0:	str	w19, [x2]
   3bba4:	ldp	x19, x20, [sp, #16]
   3bba8:	ldp	x21, x22, [sp, #32]
   3bbac:	ldp	x29, x30, [sp], #496
   3bbb0:	ret
   3bbb4:	ldr	w3, [sp, #360]
   3bbb8:	mov	x1, x25
   3bbbc:	mov	x0, x21
   3bbc0:	mov	w2, #0x2                   	// #2
   3bbc4:	bl	c6a0 <mpfr_set4@plt>
   3bbc8:	b	3b3a4 <mpfr_zeta@@Base+0x1e4>
   3bbcc:	mov	x2, x27
   3bbd0:	mov	x0, x21
   3bbd4:	mov	x1, #0x1                   	// #1
   3bbd8:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3bbdc:	b	3b348 <mpfr_zeta@@Base+0x188>
   3bbe0:	ldr	x0, [sp, #360]
   3bbe4:	bl	c1c0 <mpfr_reallocate_func@plt>
   3bbe8:	str	x0, [sp, #360]
   3bbec:	ldr	x3, [sp, #144]
   3bbf0:	b	3b9e4 <mpfr_zeta@@Base+0x824>
   3bbf4:	mov	x2, x19
   3bbf8:	mov	x0, x21
   3bbfc:	mov	x1, #0x1                   	// #1
   3bc00:	bl	ca50 <mpfr_ui_sub@plt>
   3bc04:	b	3b304 <mpfr_zeta@@Base+0x144>
   3bc08:	lsl	x0, x1, #5
   3bc0c:	str	x1, [sp, #104]
   3bc10:	str	x0, [sp, #352]
   3bc14:	bl	ccf0 <mpfr_allocate_func@plt>
   3bc18:	str	x0, [sp, #360]
   3bc1c:	ldr	x1, [sp, #104]
   3bc20:	b	3b498 <mpfr_zeta@@Base+0x2d8>
   3bc24:	mov	x3, #0x2                   	// #2
   3bc28:	movk	x3, #0x8000, lsl #48
   3bc2c:	cmp	x1, x3
   3bc30:	b.eq	3bc48 <mpfr_zeta@@Base+0xa88>  // b.none
   3bc34:	cmp	x1, x2
   3bc38:	b.ne	3bca0 <mpfr_zeta@@Base+0xae0>  // b.any
   3bc3c:	ldr	w1, [x19, #8]
   3bc40:	cmp	w1, #0x0
   3bc44:	b.gt	3bd80 <mpfr_zeta@@Base+0xbc0>
   3bc48:	mrs	x1, tpidr_el0
   3bc4c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3bc50:	ldr	x2, [x0, #2576]
   3bc54:	add	x0, x0, #0xa10
   3bc58:	blr	x2
   3bc5c:	add	x0, x1, x0
   3bc60:	mov	x1, #0x2                   	// #2
   3bc64:	movk	x1, #0x8000, lsl #48
   3bc68:	str	x1, [x22, #16]
   3bc6c:	mov	w21, #0x0                   	// #0
   3bc70:	ldr	w1, [x0]
   3bc74:	orr	w1, w1, #0x4
   3bc78:	str	w1, [x0]
   3bc7c:	b	3b828 <mpfr_zeta@@Base+0x668>
   3bc80:	cmp	w23, #0x0
   3bc84:	b.le	3bcb8 <mpfr_zeta@@Base+0xaf8>
   3bc88:	mov	w1, #0x3                   	// #3
   3bc8c:	mov	x0, x22
   3bc90:	mov	w21, #0xffffffff            	// #-1
   3bc94:	str	w1, [sp, #112]
   3bc98:	bl	bdd0 <mpfr_nextbelow@plt>
   3bc9c:	b	3bae0 <mpfr_zeta@@Base+0x920>
   3bca0:	ldr	w3, [sp, #112]
   3bca4:	mov	x2, #0xffffffffffffffff    	// #-1
   3bca8:	mov	x1, x2
   3bcac:	bl	ba80 <mpfr_set_si_2exp@plt>
   3bcb0:	mov	w21, w0
   3bcb4:	b	3b828 <mpfr_zeta@@Base+0x668>
   3bcb8:	mov	w0, #0x3                   	// #3
   3bcbc:	mov	w21, #0xffffffff            	// #-1
   3bcc0:	str	w0, [sp, #112]
   3bcc4:	b	3bae0 <mpfr_zeta@@Base+0x920>
   3bcc8:	mov	w3, #0x0                   	// #0
   3bccc:	mov	x1, x19
   3bcd0:	mov	x2, #0x2                   	// #2
   3bcd4:	mov	x0, x27
   3bcd8:	bl	c8f0 <mpfr_div_2ui@plt>
   3bcdc:	mov	x1, x27
   3bce0:	mov	w2, #0x0                   	// #0
   3bce4:	mov	x0, x27
   3bce8:	bl	bec0 <mpfr_frac@plt>
   3bcec:	mov	x2, #0xffffffffffffffff    	// #-1
   3bcf0:	mov	x0, x27
   3bcf4:	mov	x1, x2
   3bcf8:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   3bcfc:	cmp	w0, #0x0
   3bd00:	b.le	3bd14 <mpfr_zeta@@Base+0xb54>
   3bd04:	ldr	w2, [sp, #112]
   3bd08:	mov	x1, x26
   3bd0c:	mov	x0, x26
   3bd10:	bl	bd70 <mpfr_neg@plt>
   3bd14:	ldr	w3, [sp, #112]
   3bd18:	mov	x1, x26
   3bd1c:	mov	x0, x26
   3bd20:	mov	x2, #0x1                   	// #1
   3bd24:	bl	c2c0 <mpfr_mul_2ui@plt>
   3bd28:	b	3b6e4 <mpfr_zeta@@Base+0x524>
   3bd2c:	ldr	w0, [sp, #112]
   3bd30:	cmp	w23, #0x0
   3bd34:	ccmp	w0, #0x3, #0x0, gt
   3bd38:	b.eq	3bc88 <mpfr_zeta@@Base+0xac8>  // b.none
   3bd3c:	b	3bad0 <mpfr_zeta@@Base+0x910>
   3bd40:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3bd44:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   3bd48:	add	x2, x2, #0x90
   3bd4c:	add	x0, x0, #0xff0
   3bd50:	mov	w1, #0x290                 	// #656
   3bd54:	bl	cb40 <mpfr_assert_fail@plt>
   3bd58:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3bd5c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   3bd60:	add	x2, x2, #0x48
   3bd64:	add	x0, x0, #0xff0
   3bd68:	mov	w1, #0x281                 	// #641
   3bd6c:	bl	cb40 <mpfr_assert_fail@plt>
   3bd70:	mov	x0, x22
   3bd74:	mov	w21, #0x1                   	// #1
   3bd78:	bl	c120 <mpfr_nextabove@plt>
   3bd7c:	b	3bae0 <mpfr_zeta@@Base+0x920>
   3bd80:	mov	w3, #0x0                   	// #0
   3bd84:	mov	x2, #0x0                   	// #0
   3bd88:	mov	x1, #0x1                   	// #1
   3bd8c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3bd90:	mov	w21, w0
   3bd94:	b	3b828 <mpfr_zeta@@Base+0x668>
   3bd98:	mov	w3, #0x0                   	// #0
   3bd9c:	mov	x1, x19
   3bda0:	mov	x2, #0x2                   	// #2
   3bda4:	mov	x0, x27
   3bda8:	bl	c8f0 <mpfr_div_2ui@plt>
   3bdac:	ldr	w0, [sp, #116]
   3bdb0:	mov	x1, x27
   3bdb4:	mov	w2, #0x0                   	// #0
   3bdb8:	orr	w0, w0, #0x2
   3bdbc:	str	w0, [sp, #116]
   3bdc0:	mov	x0, x27
   3bdc4:	bl	bec0 <mpfr_frac@plt>
   3bdc8:	mov	x2, #0xffffffffffffffff    	// #-1
   3bdcc:	mov	x0, x27
   3bdd0:	mov	x1, x2
   3bdd4:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   3bdd8:	ldr	w1, [sp, #112]
   3bddc:	cmp	w0, #0x0
   3bde0:	mov	w2, #0xffffffff            	// #-1
   3bde4:	mov	x0, x22
   3bde8:	cneg	w2, w2, le
   3bdec:	bl	bf40 <mpfr_overflow@plt>
   3bdf0:	mov	w21, w0
   3bdf4:	b	3b6fc <mpfr_zeta@@Base+0x53c>
   3bdf8:	bl	c8e0 <mpfr_abort_prec_max@plt>
   3bdfc:	nop

000000000003be00 <mpfr_cmp_d@@Base>:
   3be00:	stp	x29, x30, [sp, #-144]!
   3be04:	mrs	x3, tpidr_el0
   3be08:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   3be0c:	mov	x29, sp
   3be10:	stp	x21, x22, [sp, #32]
   3be14:	mov	x21, x0
   3be18:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3be1c:	ldr	x1, [x0, #2576]
   3be20:	add	x0, x0, #0xa10
   3be24:	blr	x1
   3be28:	stp	x19, x20, [sp, #16]
   3be2c:	add	x20, x3, x0
   3be30:	add	x4, sp, #0x68
   3be34:	stp	x25, x26, [sp, #64]
   3be38:	mov	x6, #0x35                  	// #53
   3be3c:	ldr	w26, [x3, x0]
   3be40:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3be44:	ldr	x1, [x0, #2512]
   3be48:	add	x0, x0, #0x9d0
   3be4c:	blr	x1
   3be50:	stp	x23, x24, [sp, #48]
   3be54:	add	x23, x3, x0
   3be58:	str	x27, [sp, #80]
   3be5c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   3be60:	ldr	x27, [x3, x0]
   3be64:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3be68:	ldr	x1, [x0, #2544]
   3be6c:	add	x0, x0, #0x9f0
   3be70:	blr	x1
   3be74:	add	x22, x3, x0
   3be78:	add	x19, sp, #0x70
   3be7c:	mov	w24, #0x1                   	// #1
   3be80:	mov	w1, #0x0                   	// #0
   3be84:	str	x5, [x23]
   3be88:	str	x6, [sp, #112]
   3be8c:	str	w24, [sp, #120]
   3be90:	str	x4, [sp, #136]
   3be94:	ldr	x25, [x3, x0]
   3be98:	mov	x0, x19
   3be9c:	str	x2, [x22]
   3bea0:	bl	be40 <mpfr_set_d@plt>
   3bea4:	mov	w2, w24
   3bea8:	mov	x1, x19
   3beac:	mov	x0, x21
   3beb0:	str	wzr, [x20]
   3beb4:	bl	c9a0 <mpfr_cmp3@plt>
   3beb8:	ldr	w1, [x20]
   3bebc:	orr	w1, w1, w26
   3bec0:	str	w1, [x20]
   3bec4:	ldp	x19, x20, [sp, #16]
   3bec8:	str	x25, [x22]
   3becc:	ldp	x21, x22, [sp, #32]
   3bed0:	ldp	x25, x26, [sp, #64]
   3bed4:	str	x27, [x23]
   3bed8:	ldp	x23, x24, [sp, #48]
   3bedc:	ldr	x27, [sp, #80]
   3bee0:	ldp	x29, x30, [sp], #144
   3bee4:	ret

000000000003bee8 <mpfr_erf@@Base>:
   3bee8:	sub	sp, sp, #0x230
   3beec:	stp	x29, x30, [sp]
   3bef0:	mov	x29, sp
   3bef4:	ldr	x3, [x1, #16]
   3bef8:	stp	x19, x20, [sp, #16]
   3befc:	mov	x20, x1
   3bf00:	stp	x23, x24, [sp, #48]
   3bf04:	mov	x24, x0
   3bf08:	stp	x25, x26, [sp, #64]
   3bf0c:	mov	w26, w2
   3bf10:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   3bf14:	cmp	x3, x2
   3bf18:	b.le	3c738 <mpfr_erf@@Base+0x850>
   3bf1c:	stp	x21, x22, [sp, #32]
   3bf20:	mrs	x21, tpidr_el0
   3bf24:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3bf28:	ldr	x1, [x0, #2576]
   3bf2c:	add	x0, x0, #0xa10
   3bf30:	blr	x1
   3bf34:	ldr	x1, [x24]
   3bf38:	stp	x27, x28, [sp, #80]
   3bf3c:	ldr	w0, [x21, x0]
   3bf40:	str	w0, [sp, #164]
   3bf44:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   3bf48:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   3bf4c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3bf50:	ldr	x2, [x0, #2512]
   3bf54:	add	x0, x0, #0x9d0
   3bf58:	blr	x2
   3bf5c:	add	x5, x21, x0
   3bf60:	ldr	x0, [x21, x0]
   3bf64:	add	x2, x1, x1, lsr #63
   3bf68:	str	x6, [x5]
   3bf6c:	str	x0, [sp, #184]
   3bf70:	neg	x2, x2, asr #1
   3bf74:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3bf78:	ldr	x7, [x0, #2544]
   3bf7c:	add	x0, x0, #0x9f0
   3bf80:	blr	x7
   3bf84:	ldr	x5, [x21, x0]
   3bf88:	str	x4, [x21, x0]
   3bf8c:	str	x5, [sp, #192]
   3bf90:	cmp	x3, x2
   3bf94:	b.lt	3c288 <mpfr_erf@@Base+0x3a0>  // b.tstop
   3bf98:	adrp	x2, 7f000 <__gmpfr_l2b@@Base+0x200>
   3bf9c:	add	x4, sp, #0xd8
   3bfa0:	mov	x5, #0x35                  	// #53
   3bfa4:	add	x19, sp, #0xe0
   3bfa8:	ldr	x2, [x2, #4048]
   3bfac:	mov	w22, #0x1                   	// #1
   3bfb0:	mov	x1, x20
   3bfb4:	mov	w3, w22
   3bfb8:	mov	x0, x19
   3bfbc:	str	x5, [sp, #224]
   3bfc0:	str	w22, [sp, #232]
   3bfc4:	str	x4, [sp, #248]
   3bfc8:	bl	c620 <mpfr_div@plt>
   3bfcc:	mov	w3, w22
   3bfd0:	mov	x2, x20
   3bfd4:	mov	x1, x19
   3bfd8:	mov	x0, x19
   3bfdc:	bl	bd50 <mpfr_mul@plt>
   3bfe0:	ldr	x1, [x24]
   3bfe4:	mov	x0, x19
   3bfe8:	mov	x2, #0x0                   	// #0
   3bfec:	add	x1, x1, #0x1
   3bff0:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   3bff4:	cmp	w0, #0x0
   3bff8:	b.gt	3c794 <mpfr_erf@@Base+0x8ac>
   3bffc:	mov	x0, x20
   3c000:	mov	w1, #0x0                   	// #0
   3c004:	stp	d8, d9, [sp, #96]
   3c008:	stp	d10, d11, [sp, #112]
   3c00c:	str	d12, [sp, #128]
   3c010:	bl	bd30 <mpfr_get_d@plt>
   3c014:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3c018:	fmul	d8, d0, d0
   3c01c:	ldr	d1, [x0, #216]
   3c020:	ldr	x0, [x24]
   3c024:	str	x0, [sp, #168]
   3c028:	fdiv	d1, d8, d1
   3c02c:	cmp	x0, #0x1
   3c030:	fcvtzs	x19, d1
   3c034:	add	x19, x19, x0
   3c038:	add	x19, x19, #0x8
   3c03c:	b.eq	3c05c <mpfr_erf@@Base+0x174>  // b.none
   3c040:	b.le	3c860 <mpfr_erf@@Base+0x978>
   3c044:	ldr	x0, [sp, #168]
   3c048:	mov	w1, #0x40                  	// #64
   3c04c:	sub	x0, x0, #0x1
   3c050:	clz	x0, x0
   3c054:	sub	w0, w1, w0
   3c058:	add	x19, x19, w0, sxtw
   3c05c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3c060:	cmp	x19, x0
   3c064:	b.ge	3c85c <mpfr_erf@@Base+0x974>  // b.tcont
   3c068:	sub	x25, x19, #0x1
   3c06c:	asr	x25, x25, #6
   3c070:	add	x25, x25, #0x1
   3c074:	lsl	x0, x25, #2
   3c078:	cmp	x0, #0x10
   3c07c:	b.gt	3c404 <mpfr_erf@@Base+0x51c>
   3c080:	add	x1, sp, #0x1b0
   3c084:	stp	xzr, x1, [sp, #416]
   3c088:	mov	x0, x1
   3c08c:	add	x2, x25, x25, lsl #1
   3c090:	add	x1, sp, #0x100
   3c094:	add	x3, x0, x25, lsl #3
   3c098:	add	x28, sp, #0x180
   3c09c:	add	x23, sp, #0x120
   3c0a0:	add	x22, sp, #0x140
   3c0a4:	add	x2, x0, x2, lsl #3
   3c0a8:	add	x25, x0, x25, lsl #4
   3c0ac:	str	x1, [sp, #152]
   3c0b0:	add	x1, sp, #0x160
   3c0b4:	mov	x5, #0x3ef0000000000000    	// #4535124824762089472
   3c0b8:	mov	x4, #0x40                  	// #64
   3c0bc:	fmov	d9, x5
   3c0c0:	str	x1, [sp, #144]
   3c0c4:	mov	w1, #0x1                   	// #1
   3c0c8:	str	x4, [sp, #200]
   3c0cc:	str	x19, [sp, #256]
   3c0d0:	stp	x0, x19, [sp, #280]
   3c0d4:	ldr	x0, [sp, #152]
   3c0d8:	str	w1, [sp, #264]
   3c0dc:	str	w1, [sp, #296]
   3c0e0:	stp	x3, x19, [sp, #312]
   3c0e4:	mov	w3, #0x2                   	// #2
   3c0e8:	str	w1, [sp, #328]
   3c0ec:	stp	x25, x19, [sp, #344]
   3c0f0:	str	w1, [sp, #360]
   3c0f4:	mov	x1, x20
   3c0f8:	str	x2, [sp, #376]
   3c0fc:	mov	x2, x20
   3c100:	bl	bd50 <mpfr_mul@plt>
   3c104:	fmov	d12, #5.000000000000000000e-01
   3c108:	mov	w3, #0x0                   	// #0
   3c10c:	mov	x2, #0x0                   	// #0
   3c110:	mov	x1, #0x1                   	// #1
   3c114:	mov	x0, x23
   3c118:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3c11c:	fmov	d11, #8.000000000000000000e+00
   3c120:	mov	w3, #0x0                   	// #0
   3c124:	mov	x2, #0x0                   	// #0
   3c128:	mov	x1, #0x1                   	// #1
   3c12c:	mov	x0, x22
   3c130:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   3c134:	neg	x0, x19
   3c138:	mov	x1, #0x35                  	// #53
   3c13c:	str	x0, [sp, #176]
   3c140:	mov	x0, x28
   3c144:	bl	ca80 <mpfr_init2@plt>
   3c148:	mov	w0, #0x1                   	// #1
   3c14c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   3c150:	mov	w25, w0
   3c154:	str	w0, [sp, #392]
   3c158:	mov	w0, #0x3                   	// #3
   3c15c:	str	w0, [sp, #160]
   3c160:	str	x1, [sp, #400]
   3c164:	nop
   3c168:	ldr	x1, [sp, #152]
   3c16c:	mov	x2, x22
   3c170:	mov	w3, #0x2                   	// #2
   3c174:	mov	x0, x22
   3c178:	bl	bd50 <mpfr_mul@plt>
   3c17c:	mov	w2, w25
   3c180:	mov	x1, x22
   3c184:	mov	w3, #0x2                   	// #2
   3c188:	mov	x0, x22
   3c18c:	bl	cc60 <mpfr_div_ui@plt>
   3c190:	ldr	w2, [sp, #160]
   3c194:	mov	x1, x22
   3c198:	ldr	x0, [sp, #144]
   3c19c:	mov	w3, #0x2                   	// #2
   3c1a0:	bl	cc60 <mpfr_div_ui@plt>
   3c1a4:	mov	x1, x23
   3c1a8:	mov	x0, x23
   3c1ac:	mov	w3, #0x0                   	// #0
   3c1b0:	ldr	x2, [sp, #144]
   3c1b4:	ldr	x27, [sp, #304]
   3c1b8:	tbz	w25, #0, 3c448 <mpfr_erf@@Base+0x560>
   3c1bc:	bl	bb70 <mpfr_sub@plt>
   3c1c0:	ldr	x1, [sp, #304]
   3c1c4:	ldr	x0, [sp, #368]
   3c1c8:	sub	x2, x27, x1
   3c1cc:	sub	x27, x0, x1
   3c1d0:	ldr	x0, [sp, #176]
   3c1d4:	cmp	x0, x27
   3c1d8:	b.le	3c418 <mpfr_erf@@Base+0x530>
   3c1dc:	ucvtf	d10, w25
   3c1e0:	fcmpe	d8, d10
   3c1e4:	b.ls	3c46c <mpfr_erf@@Base+0x584>  // b.plast
   3c1e8:	mov	x1, x28
   3c1ec:	mov	x0, x28
   3c1f0:	mov	w3, #0x2                   	// #2
   3c1f4:	bl	bb90 <mpfr_mul_2si@plt>
   3c1f8:	fmov	d0, #1.000000000000000000e+00
   3c1fc:	cmn	x27, #0xf
   3c200:	fmadd	d0, d10, d11, d0
   3c204:	b.ge	3c280 <mpfr_erf@@Base+0x398>  // b.tcont
   3c208:	mov	x0, x27
   3c20c:	nop
   3c210:	add	x0, x0, #0x10
   3c214:	fmul	d0, d0, d9
   3c218:	cmn	x0, #0xf
   3c21c:	b.lt	3c210 <mpfr_erf@@Base+0x328>  // b.tstop
   3c220:	mov	x0, #0xfffffffffffffff0    	// #-16
   3c224:	sub	x0, x0, x27
   3c228:	cmn	x27, #0xf
   3c22c:	and	x0, x0, #0xfffffffffffffff0
   3c230:	add	x27, x27, #0x10
   3c234:	csel	x0, x0, xzr, lt  // lt = tstop
   3c238:	add	x27, x0, x27
   3c23c:	add	x0, x27, #0x1
   3c240:	cbz	x27, 3c258 <mpfr_erf@@Base+0x370>
   3c244:	nop
   3c248:	add	x0, x0, #0x1
   3c24c:	fmul	d0, d0, d12
   3c250:	cmp	x0, #0x1
   3c254:	b.ne	3c248 <mpfr_erf@@Base+0x360>  // b.any
   3c258:	fadd	d0, d0, d12
   3c25c:	ldr	w0, [sp, #160]
   3c260:	add	w25, w25, #0x1
   3c264:	mov	x1, x28
   3c268:	add	w0, w0, #0x2
   3c26c:	mov	w2, #0x2                   	// #2
   3c270:	str	w0, [sp, #160]
   3c274:	mov	x0, x28
   3c278:	bl	c3a0 <mpfr_add_d@plt>
   3c27c:	b	3c168 <mpfr_erf@@Base+0x280>
   3c280:	add	x0, x27, #0x1
   3c284:	b	3c248 <mpfr_erf@@Base+0x360>
   3c288:	add	x28, sp, #0x180
   3c28c:	add	x1, x1, #0x11
   3c290:	mov	x0, x28
   3c294:	bl	ca80 <mpfr_init2@plt>
   3c298:	ldr	x1, [x24]
   3c29c:	add	x22, sp, #0x1a0
   3c2a0:	mov	x0, x22
   3c2a4:	add	x1, x1, #0x11
   3c2a8:	bl	ca80 <mpfr_init2@plt>
   3c2ac:	mov	x2, x20
   3c2b0:	mov	x1, x20
   3c2b4:	mov	w3, #0x2                   	// #2
   3c2b8:	mov	x0, x28
   3c2bc:	bl	bd50 <mpfr_mul@plt>
   3c2c0:	mov	x1, x28
   3c2c4:	mov	w3, #0x2                   	// #2
   3c2c8:	mov	x2, #0x3                   	// #3
   3c2cc:	mov	x0, x28
   3c2d0:	bl	cc60 <mpfr_div_ui@plt>
   3c2d4:	mov	x1, #0x1                   	// #1
   3c2d8:	mov	w3, #0x1                   	// #1
   3c2dc:	mov	x2, x28
   3c2e0:	mov	x0, x28
   3c2e4:	bl	ca50 <mpfr_ui_sub@plt>
   3c2e8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3c2ec:	ldr	x1, [x0, #2624]
   3c2f0:	add	x0, x0, #0xa40
   3c2f4:	blr	x1
   3c2f8:	add	x19, x21, x0
   3c2fc:	mov	x1, x19
   3c300:	mov	w2, #0x2                   	// #2
   3c304:	mov	x0, x22
   3c308:	bl	c380 <mpfr_cache@plt>
   3c30c:	mov	x1, x22
   3c310:	mov	w2, #0x2                   	// #2
   3c314:	mov	x0, x22
   3c318:	bl	c930 <mpfr_sqrt@plt>
   3c31c:	mov	x2, x22
   3c320:	mov	x1, x28
   3c324:	mov	w3, #0x1                   	// #1
   3c328:	mov	x0, x28
   3c32c:	bl	c620 <mpfr_div@plt>
   3c330:	mov	x1, x28
   3c334:	mov	w3, #0x1                   	// #1
   3c338:	mov	x2, #0x1                   	// #1
   3c33c:	mov	x0, x28
   3c340:	bl	c2c0 <mpfr_mul_2ui@plt>
   3c344:	mov	w3, #0x1                   	// #1
   3c348:	mov	x1, x28
   3c34c:	mov	x2, x20
   3c350:	mov	x0, x28
   3c354:	bl	bd50 <mpfr_mul@plt>
   3c358:	mov	x1, x19
   3c35c:	mov	w2, #0x3                   	// #3
   3c360:	mov	x0, x22
   3c364:	bl	c380 <mpfr_cache@plt>
   3c368:	mov	x1, x22
   3c36c:	mov	w2, #0x3                   	// #3
   3c370:	mov	x0, x22
   3c374:	bl	c930 <mpfr_sqrt@plt>
   3c378:	mov	x1, x22
   3c37c:	mov	w3, #0x3                   	// #3
   3c380:	mov	x2, #0x1                   	// #1
   3c384:	mov	x0, x22
   3c388:	bl	c8f0 <mpfr_div_2ui@plt>
   3c38c:	ldr	w1, [x20, #8]
   3c390:	mov	x2, x22
   3c394:	mov	x0, x22
   3c398:	cmp	w1, #0x0
   3c39c:	mov	x1, x20
   3c3a0:	cset	w3, le
   3c3a4:	add	w3, w3, #0x2
   3c3a8:	bl	c620 <mpfr_div@plt>
   3c3ac:	ldr	x1, [x24]
   3c3b0:	mov	w2, w26
   3c3b4:	mov	x0, x28
   3c3b8:	bl	c970 <mpfr_prec_round@plt>
   3c3bc:	mov	w19, w0
   3c3c0:	ldr	x1, [x24]
   3c3c4:	mov	x0, x22
   3c3c8:	mov	w2, w26
   3c3cc:	bl	c970 <mpfr_prec_round@plt>
   3c3d0:	tbnz	w19, #31, 3c67c <mpfr_erf@@Base+0x794>
   3c3d4:	tbnz	w0, #31, 3c3f0 <mpfr_erf@@Base+0x508>
   3c3d8:	cmp	w19, #0x0
   3c3dc:	cset	w1, gt
   3c3e0:	cmp	w0, #0x0
   3c3e4:	cset	w0, gt
   3c3e8:	cmp	w1, w0
   3c3ec:	b.eq	3c680 <mpfr_erf@@Base+0x798>  // b.none
   3c3f0:	mov	x0, x28
   3c3f4:	bl	c070 <mpfr_clear@plt>
   3c3f8:	mov	x0, x22
   3c3fc:	bl	c070 <mpfr_clear@plt>
   3c400:	b	3bf98 <mpfr_erf@@Base+0xb0>
   3c404:	lsl	x0, x25, #5
   3c408:	str	x0, [sp, #416]
   3c40c:	bl	ccf0 <mpfr_allocate_func@plt>
   3c410:	str	x0, [sp, #424]
   3c414:	b	3c08c <mpfr_erf@@Base+0x1a4>
   3c418:	mov	x1, x28
   3c41c:	mov	x0, x28
   3c420:	mov	w3, #0x2                   	// #2
   3c424:	bl	bb90 <mpfr_mul_2si@plt>
   3c428:	ucvtf	d1, w25
   3c42c:	fmov	d0, #1.000000000000000000e+00
   3c430:	cmp	x27, #0x0
   3c434:	fmadd	d0, d1, d11, d0
   3c438:	b.gt	3c450 <mpfr_erf@@Base+0x568>
   3c43c:	cmn	x27, #0xf
   3c440:	b.lt	3c208 <mpfr_erf@@Base+0x320>  // b.tstop
   3c444:	b	3c23c <mpfr_erf@@Base+0x354>
   3c448:	bl	c1a0 <mpfr_add@plt>
   3c44c:	b	3c1c0 <mpfr_erf@@Base+0x2d8>
   3c450:	sub	x27, x27, #0x1
   3c454:	nop
   3c458:	sub	x27, x27, #0x1
   3c45c:	fadd	d0, d0, d0
   3c460:	cmn	x27, #0x1
   3c464:	b.ne	3c458 <mpfr_erf@@Base+0x570>  // b.any
   3c468:	b	3c258 <mpfr_erf@@Base+0x370>
   3c46c:	mov	x1, x20
   3c470:	mov	x2, x23
   3c474:	mov	w3, #0x2                   	// #2
   3c478:	mov	x0, x23
   3c47c:	bl	bd50 <mpfr_mul@plt>
   3c480:	ldr	x3, [sp, #304]
   3c484:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3c488:	ldr	x1, [x0, #2624]
   3c48c:	add	x0, x0, #0xa40
   3c490:	blr	x1
   3c494:	mov	w2, #0x1                   	// #1
   3c498:	add	x1, x21, x0
   3c49c:	add	x3, x3, #0x1
   3c4a0:	mov	x0, x22
   3c4a4:	str	x3, [sp, #304]
   3c4a8:	bl	c380 <mpfr_cache@plt>
   3c4ac:	mov	x1, x22
   3c4b0:	mov	w2, #0x1                   	// #1
   3c4b4:	mov	x0, x22
   3c4b8:	bl	c930 <mpfr_sqrt@plt>
   3c4bc:	mov	x2, x22
   3c4c0:	mov	x1, x23
   3c4c4:	mov	w3, #0x0                   	// #0
   3c4c8:	mov	x0, x23
   3c4cc:	bl	c620 <mpfr_div@plt>
   3c4d0:	mov	x1, x28
   3c4d4:	mov	w3, #0x2                   	// #2
   3c4d8:	mov	x2, #0x2                   	// #2
   3c4dc:	mov	x0, x28
   3c4e0:	bl	c2c0 <mpfr_mul_2ui@plt>
   3c4e4:	mov	x1, x28
   3c4e8:	mov	x0, x28
   3c4ec:	mov	w3, #0x2                   	// #2
   3c4f0:	mov	x2, #0xb                   	// #11
   3c4f4:	bl	c260 <mpfr_add_ui@plt>
   3c4f8:	ldr	x25, [sp, #400]
   3c4fc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3c500:	cmp	x25, x0
   3c504:	b.eq	3c764 <mpfr_erf@@Base+0x87c>  // b.none
   3c508:	mov	x0, x28
   3c50c:	bl	c070 <mpfr_clear@plt>
   3c510:	ldr	x1, [sp, #304]
   3c514:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3c518:	cmp	x1, x0
   3c51c:	b.le	3c6bc <mpfr_erf@@Base+0x7d4>
   3c520:	ldr	x1, [sp, #288]
   3c524:	cmp	w26, #0x0
   3c528:	ldr	x0, [sp, #312]
   3c52c:	sub	x1, x1, #0x1
   3c530:	ldr	x3, [sp, #168]
   3c534:	asr	x1, x1, #6
   3c538:	sub	x2, x19, x25
   3c53c:	add	x1, x1, #0x1
   3c540:	cinc	x3, x3, eq  // eq = none
   3c544:	bl	c370 <mpfr_round_p@plt>
   3c548:	cbz	w0, 3c6bc <mpfr_erf@@Base+0x7d4>
   3c54c:	ldr	w3, [sp, #296]
   3c550:	mov	x1, x23
   3c554:	mov	w2, w26
   3c558:	mov	x0, x24
   3c55c:	bl	c6a0 <mpfr_set4@plt>
   3c560:	mov	w19, w0
   3c564:	ldr	x1, [sp, #416]
   3c568:	cbz	x1, 3c66c <mpfr_erf@@Base+0x784>
   3c56c:	ldr	x0, [sp, #424]
   3c570:	bl	cc20 <mpfr_free_func@plt>
   3c574:	ldp	d8, d9, [sp, #96]
   3c578:	ldp	d10, d11, [sp, #112]
   3c57c:	ldr	d12, [sp, #128]
   3c580:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3c584:	ldr	x1, [x0, #2576]
   3c588:	add	x0, x0, #0xa10
   3c58c:	blr	x1
   3c590:	add	x2, x21, x0
   3c594:	ldr	w1, [sp, #164]
   3c598:	str	w1, [x21, x0]
   3c59c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3c5a0:	ldr	x3, [x0, #2512]
   3c5a4:	add	x0, x0, #0x9d0
   3c5a8:	blr	x3
   3c5ac:	ldr	x3, [sp, #184]
   3c5b0:	str	x3, [x21, x0]
   3c5b4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3c5b8:	ldr	x4, [x0, #2544]
   3c5bc:	add	x0, x0, #0x9f0
   3c5c0:	blr	x4
   3c5c4:	ldr	x1, [x24, #16]
   3c5c8:	ldr	x4, [sp, #192]
   3c5cc:	str	x4, [x21, x0]
   3c5d0:	cmp	x3, x1
   3c5d4:	ccmp	x4, x1, #0x1, le
   3c5d8:	b.ge	3c614 <mpfr_erf@@Base+0x72c>  // b.tcont
   3c5dc:	mov	w1, w19
   3c5e0:	mov	w2, w26
   3c5e4:	mov	x0, x24
   3c5e8:	bl	cb30 <mpfr_check_range@plt>
   3c5ec:	ldp	x21, x22, [sp, #32]
   3c5f0:	mov	w19, w0
   3c5f4:	ldp	x27, x28, [sp, #80]
   3c5f8:	mov	w0, w19
   3c5fc:	ldp	x29, x30, [sp]
   3c600:	ldp	x19, x20, [sp, #16]
   3c604:	ldp	x23, x24, [sp, #48]
   3c608:	ldp	x25, x26, [sp, #64]
   3c60c:	add	sp, sp, #0x230
   3c610:	ret
   3c614:	cbz	w19, 3c648 <mpfr_erf@@Base+0x760>
   3c618:	ldr	w0, [sp, #164]
   3c61c:	ldp	x21, x22, [sp, #32]
   3c620:	orr	w0, w0, #0x8
   3c624:	ldp	x27, x28, [sp, #80]
   3c628:	str	w0, [x2]
   3c62c:	mov	w0, w19
   3c630:	ldp	x29, x30, [sp]
   3c634:	ldp	x19, x20, [sp, #16]
   3c638:	ldp	x23, x24, [sp, #48]
   3c63c:	ldp	x25, x26, [sp, #64]
   3c640:	add	sp, sp, #0x230
   3c644:	ret
   3c648:	mov	w0, w19
   3c64c:	ldp	x29, x30, [sp]
   3c650:	ldp	x19, x20, [sp, #16]
   3c654:	ldp	x21, x22, [sp, #32]
   3c658:	ldp	x23, x24, [sp, #48]
   3c65c:	ldp	x25, x26, [sp, #64]
   3c660:	ldp	x27, x28, [sp, #80]
   3c664:	add	sp, sp, #0x230
   3c668:	ret
   3c66c:	ldp	d8, d9, [sp, #96]
   3c670:	ldp	d10, d11, [sp, #112]
   3c674:	ldr	d12, [sp, #128]
   3c678:	b	3c580 <mpfr_erf@@Base+0x698>
   3c67c:	tbz	w0, #31, 3c3f0 <mpfr_erf@@Base+0x508>
   3c680:	mov	x1, x22
   3c684:	mov	x0, x28
   3c688:	mov	w2, #0x1                   	// #1
   3c68c:	bl	c9a0 <mpfr_cmp3@plt>
   3c690:	cbnz	w0, 3c3f0 <mpfr_erf@@Base+0x508>
   3c694:	ldr	w3, [sp, #424]
   3c698:	mov	w2, w26
   3c69c:	mov	x1, x22
   3c6a0:	mov	x0, x24
   3c6a4:	bl	c6a0 <mpfr_set4@plt>
   3c6a8:	mov	x0, x28
   3c6ac:	bl	c070 <mpfr_clear@plt>
   3c6b0:	mov	x0, x22
   3c6b4:	bl	c070 <mpfr_clear@plt>
   3c6b8:	b	3c580 <mpfr_erf@@Base+0x698>
   3c6bc:	ldr	x1, [sp, #200]
   3c6c0:	mov	x0, #0xfffffffffffffeff    	// #-257
   3c6c4:	movk	x0, #0x7fff, lsl #48
   3c6c8:	sub	x0, x0, x19
   3c6cc:	cmp	x0, x1
   3c6d0:	b.lt	3c844 <mpfr_erf@@Base+0x95c>  // b.tstop
   3c6d4:	ldr	x0, [sp, #200]
   3c6d8:	ldr	x1, [sp, #416]
   3c6dc:	add	x19, x19, x0
   3c6e0:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3c6e4:	cmp	x19, x0
   3c6e8:	add	x0, x19, x19, lsr #63
   3c6ec:	asr	x0, x0, #1
   3c6f0:	str	x0, [sp, #200]
   3c6f4:	b.ge	3c85c <mpfr_erf@@Base+0x974>  // b.tcont
   3c6f8:	sub	x25, x19, #0x1
   3c6fc:	asr	x25, x25, #6
   3c700:	add	x25, x25, #0x1
   3c704:	lsl	x2, x25, #5
   3c708:	str	x2, [sp, #416]
   3c70c:	cbnz	x1, 3c784 <mpfr_erf@@Base+0x89c>
   3c710:	mov	x0, x2
   3c714:	bl	ccf0 <mpfr_allocate_func@plt>
   3c718:	str	x0, [sp, #424]
   3c71c:	add	x2, x25, x25, lsl #1
   3c720:	add	x3, x0, x25, lsl #3
   3c724:	mov	w1, #0x1                   	// #1
   3c728:	add	x25, x0, x25, lsl #4
   3c72c:	add	x2, x0, x2, lsl #3
   3c730:	str	x19, [sp, #256]
   3c734:	b	3c0d0 <mpfr_erf@@Base+0x1e8>
   3c738:	mov	x4, #0x2                   	// #2
   3c73c:	movk	x4, #0x8000, lsl #48
   3c740:	cmp	x3, x4
   3c744:	b.eq	3c814 <mpfr_erf@@Base+0x92c>  // b.none
   3c748:	cmp	x3, x2
   3c74c:	b.eq	3c7fc <mpfr_erf@@Base+0x914>  // b.none
   3c750:	ldr	w3, [x1, #8]
   3c754:	mov	w2, #0x0                   	// #0
   3c758:	bl	c6a0 <mpfr_set4@plt>
   3c75c:	mov	w19, w0
   3c760:	b	3c5f8 <mpfr_erf@@Base+0x710>
   3c764:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3c768:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3c76c:	add	x2, x2, #0x100
   3c770:	add	x0, x0, #0xf8
   3c774:	mov	w1, #0xf7                  	// #247
   3c778:	bl	cb40 <mpfr_assert_fail@plt>
   3c77c:	ldr	x25, [sp, #400]
   3c780:	b	3c508 <mpfr_erf@@Base+0x620>
   3c784:	ldr	x0, [sp, #424]
   3c788:	bl	c1c0 <mpfr_reallocate_func@plt>
   3c78c:	str	x0, [sp, #424]
   3c790:	b	3c71c <mpfr_erf@@Base+0x834>
   3c794:	ldr	w19, [x20, #8]
   3c798:	cmp	w19, #0x0
   3c79c:	b.le	3c7cc <mpfr_erf@@Base+0x8e4>
   3c7a0:	tst	w26, #0xfffffffd
   3c7a4:	b.eq	3c7f4 <mpfr_erf@@Base+0x90c>  // b.none
   3c7a8:	cmp	w26, #0x4
   3c7ac:	b.eq	3c7f4 <mpfr_erf@@Base+0x90c>  // b.none
   3c7b0:	mov	x0, x24
   3c7b4:	mov	x1, #0x0                   	// #0
   3c7b8:	bl	c0d0 <mpfr_setmax@plt>
   3c7bc:	neg	w19, w19
   3c7c0:	ldr	w0, [x20, #8]
   3c7c4:	str	w0, [x24, #8]
   3c7c8:	b	3c580 <mpfr_erf@@Base+0x698>
   3c7cc:	cmp	w26, #0x2
   3c7d0:	b.eq	3c7b0 <mpfr_erf@@Base+0x8c8>  // b.none
   3c7d4:	cmp	w26, #0x3
   3c7d8:	b.ne	3c7a0 <mpfr_erf@@Base+0x8b8>  // b.any
   3c7dc:	mov	w3, #0x2                   	// #2
   3c7e0:	sxtw	x1, w19
   3c7e4:	mov	x0, x24
   3c7e8:	mov	x2, #0x0                   	// #0
   3c7ec:	bl	ba80 <mpfr_set_si_2exp@plt>
   3c7f0:	b	3c580 <mpfr_erf@@Base+0x698>
   3c7f4:	mov	w3, w26
   3c7f8:	b	3c7e0 <mpfr_erf@@Base+0x8f8>
   3c7fc:	ldrsw	x1, [x1, #8]
   3c800:	mov	w3, #0x0                   	// #0
   3c804:	mov	x2, #0x0                   	// #0
   3c808:	bl	ba80 <mpfr_set_si_2exp@plt>
   3c80c:	mov	w19, w0
   3c810:	b	3c5f8 <mpfr_erf@@Base+0x710>
   3c814:	mrs	x1, tpidr_el0
   3c818:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3c81c:	ldr	x2, [x0, #2576]
   3c820:	add	x0, x0, #0xa10
   3c824:	blr	x2
   3c828:	add	x0, x1, x0
   3c82c:	mov	w19, #0x0                   	// #0
   3c830:	str	x3, [x24, #16]
   3c834:	ldr	w1, [x0]
   3c838:	orr	w1, w1, #0x4
   3c83c:	str	w1, [x0]
   3c840:	b	3c5f8 <mpfr_erf@@Base+0x710>
   3c844:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   3c848:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3c84c:	add	x2, x2, #0xab0
   3c850:	add	x0, x0, #0xf8
   3c854:	mov	w1, #0xff                  	// #255
   3c858:	bl	cb40 <mpfr_assert_fail@plt>
   3c85c:	bl	c8e0 <mpfr_abort_prec_max@plt>
   3c860:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   3c864:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3c868:	add	x2, x2, #0x9e0
   3c86c:	add	x0, x0, #0xf8
   3c870:	mov	w1, #0xc6                  	// #198
   3c874:	bl	cb40 <mpfr_assert_fail@plt>

000000000003c878 <mpfr_inits@@Base>:
   3c878:	stp	x29, x30, [sp, #-112]!
   3c87c:	mov	w8, #0xffffffc8            	// #-56
   3c880:	mov	x29, sp
   3c884:	add	x9, sp, #0x30
   3c888:	str	x9, [sp, #32]
   3c88c:	stp	w8, wzr, [sp, #40]
   3c890:	stp	x1, x2, [sp, #56]
   3c894:	add	x1, sp, #0x70
   3c898:	stp	x1, x1, [sp, #16]
   3c89c:	stp	x3, x4, [sp, #72]
   3c8a0:	stp	x5, x6, [sp, #88]
   3c8a4:	str	x7, [sp, #104]
   3c8a8:	cbnz	x0, 3c8c0 <mpfr_inits@@Base+0x48>
   3c8ac:	b	3c8f8 <mpfr_inits@@Base+0x80>
   3c8b0:	and	x2, x2, #0xfffffffffffffff8
   3c8b4:	str	x2, [sp, #16]
   3c8b8:	ldr	x0, [x0]
   3c8bc:	cbz	x0, 3c8f8 <mpfr_inits@@Base+0x80>
   3c8c0:	bl	bbd0 <mpfr_init@plt>
   3c8c4:	ldr	w1, [sp, #40]
   3c8c8:	ldr	x0, [sp, #16]
   3c8cc:	add	w3, w1, #0x8
   3c8d0:	add	x2, x0, #0xf
   3c8d4:	tbz	w1, #31, 3c8b0 <mpfr_inits@@Base+0x38>
   3c8d8:	str	w3, [sp, #40]
   3c8dc:	add	x2, x0, #0xf
   3c8e0:	cmp	w3, #0x0
   3c8e4:	and	x2, x2, #0xfffffffffffffff8
   3c8e8:	b.le	3c900 <mpfr_inits@@Base+0x88>
   3c8ec:	ldr	x0, [x0]
   3c8f0:	str	x2, [sp, #16]
   3c8f4:	cbnz	x0, 3c8c0 <mpfr_inits@@Base+0x48>
   3c8f8:	ldp	x29, x30, [sp], #112
   3c8fc:	ret
   3c900:	ldr	x0, [sp, #24]
   3c904:	add	x0, x0, w1, sxtw
   3c908:	b	3c8b8 <mpfr_inits@@Base+0x40>
   3c90c:	nop

000000000003c910 <mpfr_inits2@@Base>:
   3c910:	stp	x29, x30, [sp, #-112]!
   3c914:	mov	w8, #0xffffffd0            	// #-48
   3c918:	mov	x29, sp
   3c91c:	str	x19, [sp, #16]
   3c920:	mov	x19, x0
   3c924:	add	x0, sp, #0x70
   3c928:	add	x9, sp, #0x40
   3c92c:	str	x0, [sp, #32]
   3c930:	mov	x0, x1
   3c934:	add	x1, sp, #0x70
   3c938:	str	x1, [sp, #40]
   3c93c:	str	x9, [sp, #48]
   3c940:	stp	w8, wzr, [sp, #56]
   3c944:	stp	x2, x3, [sp, #64]
   3c948:	stp	x4, x5, [sp, #80]
   3c94c:	stp	x6, x7, [sp, #96]
   3c950:	cbnz	x0, 3c968 <mpfr_inits2@@Base+0x58>
   3c954:	b	3c9a4 <mpfr_inits2@@Base+0x94>
   3c958:	and	x4, x4, #0xfffffffffffffff8
   3c95c:	str	x4, [sp, #32]
   3c960:	ldr	x0, [x2]
   3c964:	cbz	x0, 3c9a4 <mpfr_inits2@@Base+0x94>
   3c968:	mov	x1, x19
   3c96c:	bl	ca80 <mpfr_init2@plt>
   3c970:	ldr	w3, [sp, #56]
   3c974:	ldr	x2, [sp, #32]
   3c978:	add	w0, w3, #0x8
   3c97c:	add	x4, x2, #0xf
   3c980:	tbz	w3, #31, 3c958 <mpfr_inits2@@Base+0x48>
   3c984:	str	w0, [sp, #56]
   3c988:	add	x4, x2, #0xf
   3c98c:	cmp	w0, #0x0
   3c990:	and	x4, x4, #0xfffffffffffffff8
   3c994:	b.le	3c9b0 <mpfr_inits2@@Base+0xa0>
   3c998:	ldr	x0, [x2]
   3c99c:	str	x4, [sp, #32]
   3c9a0:	cbnz	x0, 3c968 <mpfr_inits2@@Base+0x58>
   3c9a4:	ldr	x19, [sp, #16]
   3c9a8:	ldp	x29, x30, [sp], #112
   3c9ac:	ret
   3c9b0:	ldr	x2, [sp, #40]
   3c9b4:	add	x2, x2, w3, sxtw
   3c9b8:	b	3c960 <mpfr_inits2@@Base+0x50>
   3c9bc:	nop

000000000003c9c0 <mpfr_clears@@Base>:
   3c9c0:	stp	x29, x30, [sp, #-112]!
   3c9c4:	mov	w8, #0xffffffc8            	// #-56
   3c9c8:	mov	x29, sp
   3c9cc:	add	x9, sp, #0x30
   3c9d0:	str	x9, [sp, #32]
   3c9d4:	stp	w8, wzr, [sp, #40]
   3c9d8:	stp	x1, x2, [sp, #56]
   3c9dc:	add	x1, sp, #0x70
   3c9e0:	stp	x1, x1, [sp, #16]
   3c9e4:	stp	x3, x4, [sp, #72]
   3c9e8:	stp	x5, x6, [sp, #88]
   3c9ec:	str	x7, [sp, #104]
   3c9f0:	cbnz	x0, 3ca08 <mpfr_clears@@Base+0x48>
   3c9f4:	b	3ca40 <mpfr_clears@@Base+0x80>
   3c9f8:	and	x2, x2, #0xfffffffffffffff8
   3c9fc:	str	x2, [sp, #16]
   3ca00:	ldr	x0, [x0]
   3ca04:	cbz	x0, 3ca40 <mpfr_clears@@Base+0x80>
   3ca08:	bl	c070 <mpfr_clear@plt>
   3ca0c:	ldr	w1, [sp, #40]
   3ca10:	ldr	x0, [sp, #16]
   3ca14:	add	w3, w1, #0x8
   3ca18:	add	x2, x0, #0xf
   3ca1c:	tbz	w1, #31, 3c9f8 <mpfr_clears@@Base+0x38>
   3ca20:	str	w3, [sp, #40]
   3ca24:	add	x2, x0, #0xf
   3ca28:	cmp	w3, #0x0
   3ca2c:	and	x2, x2, #0xfffffffffffffff8
   3ca30:	b.le	3ca48 <mpfr_clears@@Base+0x88>
   3ca34:	ldr	x0, [x0]
   3ca38:	str	x2, [sp, #16]
   3ca3c:	cbnz	x0, 3ca08 <mpfr_clears@@Base+0x48>
   3ca40:	ldp	x29, x30, [sp], #112
   3ca44:	ret
   3ca48:	ldr	x0, [sp, #24]
   3ca4c:	add	x0, x0, w1, sxtw
   3ca50:	b	3ca00 <mpfr_clears@@Base+0x40>
   3ca54:	nop

000000000003ca58 <mpfr_sgn@@Base>:
   3ca58:	ldr	x1, [x0, #16]
   3ca5c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   3ca60:	cmp	x1, x2
   3ca64:	b.le	3ca74 <mpfr_sgn@@Base+0x1c>
   3ca68:	ldr	w2, [x0, #8]
   3ca6c:	mov	w0, w2
   3ca70:	ret
   3ca74:	mov	x3, #0x8000000000000001    	// #-9223372036854775807
   3ca78:	mov	w2, #0x0                   	// #0
   3ca7c:	cmp	x1, x3
   3ca80:	b.eq	3ca6c <mpfr_sgn@@Base+0x14>  // b.none
   3ca84:	add	x3, x3, #0x1
   3ca88:	cmp	x1, x3
   3ca8c:	b.ne	3ca68 <mpfr_sgn@@Base+0x10>  // b.any
   3ca90:	mrs	x1, tpidr_el0
   3ca94:	stp	x29, x30, [sp, #-16]!
   3ca98:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3ca9c:	ldr	x3, [x0, #2576]
   3caa0:	add	x0, x0, #0xa10
   3caa4:	blr	x3
   3caa8:	add	x0, x1, x0
   3caac:	mov	x29, sp
   3cab0:	ldr	w1, [x0]
   3cab4:	orr	w1, w1, #0x10
   3cab8:	str	w1, [x0]
   3cabc:	mov	w0, w2
   3cac0:	ldp	x29, x30, [sp], #16
   3cac4:	ret

000000000003cac8 <mpfr_check@@Base>:
   3cac8:	ldr	w1, [x0, #8]
   3cacc:	add	w1, w1, #0x1
   3cad0:	ands	w1, w1, #0xfffffffd
   3cad4:	b.ne	3cbdc <mpfr_check@@Base+0x114>  // b.any
   3cad8:	ldr	x4, [x0]
   3cadc:	mov	x3, #0xfffffffffffffefe    	// #-258
   3cae0:	movk	x3, #0x7fff, lsl #48
   3cae4:	mov	w2, #0x0                   	// #0
   3cae8:	sub	x6, x4, #0x1
   3caec:	cmp	x6, x3
   3caf0:	b.hi	3cbd4 <mpfr_check@@Base+0x10c>  // b.pmore
   3caf4:	ldr	x5, [x0, #24]
   3caf8:	cbz	x5, 3cbd4 <mpfr_check@@Base+0x10c>
   3cafc:	ldur	x3, [x5, #-8]
   3cb00:	mov	w2, w1
   3cb04:	cmp	x3, #0x0
   3cb08:	b.le	3cbd4 <mpfr_check@@Base+0x10c>
   3cb0c:	cmp	x4, x3, lsl #6
   3cb10:	b.gt	3cbd4 <mpfr_check@@Base+0x10c>
   3cb14:	add	x2, x5, x3, lsl #3
   3cb18:	mov	x1, x5
   3cb1c:	nop
   3cb20:	ldr	x3, [x1], #8
   3cb24:	cmp	x1, x2
   3cb28:	b.ne	3cb20 <mpfr_check@@Base+0x58>  // b.any
   3cb2c:	ldr	x1, [x0, #16]
   3cb30:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3cb34:	cmp	x1, x0
   3cb38:	b.le	3cbc0 <mpfr_check@@Base+0xf8>
   3cb3c:	asr	x6, x6, #6
   3cb40:	mov	w2, #0x0                   	// #0
   3cb44:	ldr	x0, [x5, x6, lsl #3]
   3cb48:	tbz	x0, #63, 3cbd4 <mpfr_check@@Base+0x10c>
   3cb4c:	ands	x4, x4, #0x3f
   3cb50:	b.eq	3cb6c <mpfr_check@@Base+0xa4>  // b.none
   3cb54:	ldr	x3, [x5]
   3cb58:	neg	w4, w4
   3cb5c:	mov	x0, #0xffffffffffffffff    	// #-1
   3cb60:	lsl	x4, x0, x4
   3cb64:	bics	xzr, x3, x4
   3cb68:	b.ne	3cbd4 <mpfr_check@@Base+0x10c>  // b.any
   3cb6c:	mrs	x3, tpidr_el0
   3cb70:	stp	x29, x30, [sp, #-16]!
   3cb74:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3cb78:	ldr	x2, [x0, #2512]
   3cb7c:	add	x0, x0, #0x9d0
   3cb80:	blr	x2
   3cb84:	mov	x29, sp
   3cb88:	ldr	x0, [x3, x0]
   3cb8c:	mov	w2, #0x0                   	// #0
   3cb90:	cmp	x1, x0
   3cb94:	b.lt	3cbb4 <mpfr_check@@Base+0xec>  // b.tstop
   3cb98:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3cb9c:	ldr	x2, [x0, #2544]
   3cba0:	add	x0, x0, #0x9f0
   3cba4:	blr	x2
   3cba8:	ldr	x0, [x3, x0]
   3cbac:	cmp	x1, x0
   3cbb0:	cset	w2, le
   3cbb4:	mov	w0, w2
   3cbb8:	ldp	x29, x30, [sp], #16
   3cbbc:	ret
   3cbc0:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
   3cbc4:	add	x2, x1, x2
   3cbc8:	cmp	x2, #0x1
   3cbcc:	ccmp	x1, x0, #0x4, hi  // hi = pmore
   3cbd0:	cset	w2, eq  // eq = none
   3cbd4:	mov	w0, w2
   3cbd8:	ret
   3cbdc:	mov	w2, #0x0                   	// #0
   3cbe0:	mov	w0, w2
   3cbe4:	ret

000000000003cbe8 <mpfr_get_version@@Base>:
   3cbe8:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3cbec:	add	x0, x0, #0x140
   3cbf0:	ret
   3cbf4:	nop

000000000003cbf8 <mpfr_mpn_exp@@Base>:
   3cbf8:	stp	x29, x30, [sp, #-208]!
   3cbfc:	cmp	x3, #0x0
   3cc00:	mov	x29, sp
   3cc04:	stp	x19, x20, [sp, #16]
   3cc08:	stp	x21, x22, [sp, #32]
   3cc0c:	stp	x23, x24, [sp, #48]
   3cc10:	stp	x25, x26, [sp, #64]
   3cc14:	stp	x27, x28, [sp, #80]
   3cc18:	str	x1, [x29, #96]
   3cc1c:	str	x3, [x29, #152]
   3cc20:	b.le	3cfe8 <mpfr_mpn_exp@@Base+0x3f0>
   3cc24:	mov	x28, x0
   3cc28:	sub	w0, w2, #0x2
   3cc2c:	cmp	w0, #0x3c
   3cc30:	b.hi	3d000 <mpfr_mpn_exp@@Base+0x408>  // b.pmore
   3cc34:	sxtw	x2, w2
   3cc38:	mov	x0, #0x40                  	// #64
   3cc3c:	clz	x1, x2
   3cc40:	str	xzr, [x29, #200]
   3cc44:	mov	x19, x1
   3cc48:	lsl	x23, x4, #4
   3cc4c:	sub	x0, x0, x19
   3cc50:	lsl	x1, x2, x1
   3cc54:	stp	x0, x1, [x29, #112]
   3cc58:	mov	x22, x4
   3cc5c:	neg	x20, x19
   3cc60:	cmp	x23, #0x4, lsl #12
   3cc64:	b.hi	3cf94 <mpfr_mpn_exp@@Base+0x39c>  // b.pmore
   3cc68:	sub	sp, sp, x23
   3cc6c:	mov	x21, sp
   3cc70:	lsl	x24, x22, #3
   3cc74:	lsl	x3, x22, #6
   3cc78:	sub	x26, x24, #0x8
   3cc7c:	str	x3, [x29, #144]
   3cc80:	ldr	x3, [x29, #120]
   3cc84:	sub	x19, x22, #0x1
   3cc88:	str	x3, [x28, x26]
   3cc8c:	mov	w1, #0x0                   	// #0
   3cc90:	lsl	x2, x19, #3
   3cc94:	mov	x0, x28
   3cc98:	str	wzr, [x29, #108]
   3cc9c:	sub	x19, x20, x19, lsl #6
   3cca0:	str	x24, [x29, #128]
   3cca4:	str	wzr, [x29, #184]
   3cca8:	bl	c110 <memset@plt>
   3ccac:	ldr	x0, [x29, #152]
   3ccb0:	mov	x1, #0x40                  	// #64
   3ccb4:	mov	x2, x23
   3ccb8:	clz	x0, x0
   3ccbc:	sub	x0, x1, x0
   3ccc0:	mov	w1, #0x0                   	// #0
   3ccc4:	mov	x20, x0
   3ccc8:	mov	x0, x21
   3cccc:	str	x20, [x29, #176]
   3ccd0:	bl	c110 <memset@plt>
   3ccd4:	str	w20, [x29, #188]
   3ccd8:	cmp	w20, #0x1
   3ccdc:	sub	w20, w20, #0x2
   3cce0:	b.eq	3cfb0 <mpfr_mpn_exp@@Base+0x3b8>  // b.none
   3cce4:	add	x26, x21, x26
   3cce8:	add	x0, x21, x24
   3ccec:	mov	x27, x28
   3ccf0:	sub	x23, x23, #0x8
   3ccf4:	mov	x28, x26
   3ccf8:	str	x0, [x29, #168]
   3ccfc:	b	3cd68 <mpfr_mpn_exp@@Base+0x170>
   3cd00:	cbnz	x0, 3cf08 <mpfr_mpn_exp@@Base+0x310>
   3cd04:	mov	x19, x6
   3cd08:	tbnz	x6, #63, 3cf08 <mpfr_mpn_exp@@Base+0x310>
   3cd0c:	ldr	x0, [x21, x23]
   3cd10:	add	x1, x21, x23
   3cd14:	str	x1, [x29, #136]
   3cd18:	str	x6, [x29, #160]
   3cd1c:	ldr	w7, [x29, #188]
   3cd20:	tbz	x0, #63, 3cdcc <mpfr_mpn_exp@@Base+0x1d4>
   3cd24:	ldr	x1, [x29, #168]
   3cd28:	cmp	x1, x27
   3cd2c:	b.eq	3cd44 <mpfr_mpn_exp@@Base+0x14c>  // b.none
   3cd30:	ldr	x2, [x29, #128]
   3cd34:	mov	x0, x27
   3cd38:	str	x7, [x29, #160]
   3cd3c:	bl	ba10 <memcpy@plt>
   3cd40:	ldr	x7, [x29, #160]
   3cd44:	ldr	x0, [x29, #176]
   3cd48:	cmp	x7, x0
   3cd4c:	b.eq	3cedc <mpfr_mpn_exp@@Base+0x2e4>  // b.none
   3cd50:	ldr	x0, [x29, #152]
   3cd54:	asr	x0, x0, x20
   3cd58:	tbnz	w0, #0, 3ce34 <mpfr_mpn_exp@@Base+0x23c>
   3cd5c:	sub	w20, w20, #0x1
   3cd60:	cmn	w20, #0x1
   3cd64:	b.eq	3cea0 <mpfr_mpn_exp@@Base+0x2a8>  // b.none
   3cd68:	mov	x1, #0x0                   	// #0
   3cd6c:	mov	x0, x27
   3cd70:	bl	caa0 <__gmpn_scan1@plt>
   3cd74:	lsr	x26, x0, #6
   3cd78:	sub	x24, x22, x26
   3cd7c:	add	x25, x21, x26, lsl #4
   3cd80:	mov	x2, x24
   3cd84:	mov	x0, x25
   3cd88:	add	x1, x27, x26, lsl #3
   3cd8c:	bl	c3b0 <__gmpn_sqr@plt>
   3cd90:	mov	x0, #0x4000000000000000    	// #4611686018427387904
   3cd94:	cmn	x19, x0
   3cd98:	b.mi	3cf08 <mpfr_mpn_exp@@Base+0x310>  // b.first
   3cd9c:	ldr	x0, [x29, #144]
   3cda0:	lsl	x19, x19, #1
   3cda4:	adds	x6, x19, x0
   3cda8:	cset	x0, cs  // cs = hs, nlast
   3cdac:	tbz	x19, #63, 3cd00 <mpfr_mpn_exp@@Base+0x108>
   3cdb0:	ldr	x0, [x21, x23]
   3cdb4:	add	x1, x21, x23
   3cdb8:	str	x1, [x29, #136]
   3cdbc:	mov	x19, x6
   3cdc0:	str	x6, [x29, #160]
   3cdc4:	ldr	w7, [x29, #188]
   3cdc8:	tbnz	x0, #63, 3cd24 <mpfr_mpn_exp@@Base+0x12c>
   3cdcc:	ldr	x1, [x29, #168]
   3cdd0:	mov	x2, x22
   3cdd4:	mov	w3, #0x1                   	// #1
   3cdd8:	mov	x0, x27
   3cddc:	str	x7, [x29, #136]
   3cde0:	bl	bcc0 <__gmpn_lshift@plt>
   3cde4:	ldr	x6, [x29, #160]
   3cde8:	mov	x1, x28
   3cdec:	mov	x2, #0x1                   	// #1
   3cdf0:	mov	x0, x28
   3cdf4:	sub	x19, x6, #0x1
   3cdf8:	mov	w3, #0x1                   	// #1
   3cdfc:	bl	bcc0 <__gmpn_lshift@plt>
   3ce00:	ldr	x1, [x27]
   3ce04:	ldr	x7, [x29, #136]
   3ce08:	orr	x1, x1, x0
   3ce0c:	ldr	x2, [x29, #176]
   3ce10:	str	x1, [x27]
   3ce14:	cmp	x7, x2
   3ce18:	b.eq	3cedc <mpfr_mpn_exp@@Base+0x2e4>  // b.none
   3ce1c:	ldr	w0, [x29, #184]
   3ce20:	add	w0, w0, #0x1
   3ce24:	str	w0, [x29, #184]
   3ce28:	ldr	x0, [x29, #152]
   3ce2c:	asr	x0, x0, x20
   3ce30:	tbz	w0, #0, 3cd5c <mpfr_mpn_exp@@Base+0x164>
   3ce34:	ldr	x3, [x29, #120]
   3ce38:	mov	x1, x27
   3ce3c:	mov	x2, x22
   3ce40:	mov	x0, x28
   3ce44:	bl	cd30 <__gmpn_mul_1@plt>
   3ce48:	ldr	w24, [x29, #188]
   3ce4c:	add	x1, x21, x23
   3ce50:	str	x0, [x1]
   3ce54:	ldr	x1, [x29, #112]
   3ce58:	add	x19, x19, x1
   3ce5c:	tbz	x0, #63, 3cf38 <mpfr_mpn_exp@@Base+0x340>
   3ce60:	ldr	x0, [x29, #168]
   3ce64:	cmp	x0, x27
   3ce68:	b.eq	3ce7c <mpfr_mpn_exp@@Base+0x284>  // b.none
   3ce6c:	ldr	x2, [x29, #128]
   3ce70:	mov	x1, x0
   3ce74:	mov	x0, x27
   3ce78:	bl	ba10 <memcpy@plt>
   3ce7c:	ldr	x0, [x29, #176]
   3ce80:	cmp	x24, x0
   3ce84:	b.eq	3cf7c <mpfr_mpn_exp@@Base+0x384>  // b.none
   3ce88:	ldr	w0, [x29, #108]
   3ce8c:	sub	w20, w20, #0x1
   3ce90:	cmn	w20, #0x1
   3ce94:	add	w0, w0, #0x1
   3ce98:	str	w0, [x29, #108]
   3ce9c:	b.ne	3cd68 <mpfr_mpn_exp@@Base+0x170>  // b.any
   3cea0:	ldr	x0, [x29, #200]
   3cea4:	ldr	w1, [x29, #188]
   3cea8:	mov	w21, w1
   3ceac:	add	w20, w1, #0x3
   3ceb0:	cbnz	x0, 3cfc8 <mpfr_mpn_exp@@Base+0x3d0>
   3ceb4:	ldr	x0, [x29, #96]
   3ceb8:	str	x19, [x0]
   3cebc:	ldr	x0, [x29, #176]
   3cec0:	cmp	x0, x21
   3cec4:	b.eq	3cfe0 <mpfr_mpn_exp@@Base+0x3e8>  // b.none
   3cec8:	ldr	w1, [x29, #108]
   3cecc:	ldr	w0, [x29, #184]
   3ced0:	add	w0, w1, w0, asr #1
   3ced4:	add	w20, w0, w20
   3ced8:	b	3cf14 <mpfr_mpn_exp@@Base+0x31c>
   3cedc:	cmp	x22, x26, lsl #1
   3cee0:	b.cc	3cd50 <mpfr_mpn_exp@@Base+0x158>  // b.lo, b.ul, b.last
   3cee4:	sub	x24, x24, x26
   3cee8:	mov	x0, x25
   3ceec:	mov	x1, #0x0                   	// #0
   3cef0:	bl	caa0 <__gmpn_scan1@plt>
   3cef4:	cmp	x0, x24, lsl #6
   3cef8:	ldr	w0, [x29, #188]
   3cefc:	csel	w0, w0, w20, cs  // cs = hs, nlast
   3cf00:	str	w0, [x29, #188]
   3cf04:	b	3cd50 <mpfr_mpn_exp@@Base+0x158>
   3cf08:	ldr	x0, [x29, #200]
   3cf0c:	mov	x20, #0xfffffffffffffffe    	// #-2
   3cf10:	cbnz	x0, 3cfa8 <mpfr_mpn_exp@@Base+0x3b0>
   3cf14:	mov	sp, x29
   3cf18:	mov	x0, x20
   3cf1c:	ldp	x19, x20, [sp, #16]
   3cf20:	ldp	x21, x22, [sp, #32]
   3cf24:	ldp	x23, x24, [sp, #48]
   3cf28:	ldp	x25, x26, [sp, #64]
   3cf2c:	ldp	x27, x28, [sp, #80]
   3cf30:	ldp	x29, x30, [sp], #208
   3cf34:	ret
   3cf38:	ldr	x1, [x29, #168]
   3cf3c:	mov	x2, x22
   3cf40:	mov	w3, #0x1                   	// #1
   3cf44:	mov	x0, x27
   3cf48:	sub	x19, x19, #0x1
   3cf4c:	bl	bcc0 <__gmpn_lshift@plt>
   3cf50:	mov	x1, x28
   3cf54:	mov	x2, #0x1                   	// #1
   3cf58:	mov	x0, x28
   3cf5c:	mov	w3, #0x1                   	// #1
   3cf60:	bl	bcc0 <__gmpn_lshift@plt>
   3cf64:	ldr	x1, [x27]
   3cf68:	ldr	x2, [x29, #176]
   3cf6c:	orr	x1, x1, x0
   3cf70:	str	x1, [x27]
   3cf74:	cmp	x24, x2
   3cf78:	b.ne	3cd5c <mpfr_mpn_exp@@Base+0x164>  // b.any
   3cf7c:	ldr	x0, [x28]
   3cf80:	cmp	x0, #0x0
   3cf84:	ldr	w0, [x29, #188]
   3cf88:	csel	w0, w0, w20, eq  // eq = none
   3cf8c:	str	w0, [x29, #188]
   3cf90:	b	3cd5c <mpfr_mpn_exp@@Base+0x164>
   3cf94:	mov	x1, x23
   3cf98:	add	x0, x29, #0xc8
   3cf9c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   3cfa0:	mov	x21, x0
   3cfa4:	b	3cc70 <mpfr_mpn_exp@@Base+0x78>
   3cfa8:	bl	c410 <mpfr_tmp_free@plt>
   3cfac:	b	3cf14 <mpfr_mpn_exp@@Base+0x31c>
   3cfb0:	ldr	x0, [x29, #200]
   3cfb4:	mov	w1, #0x0                   	// #0
   3cfb8:	ldr	x21, [x29, #176]
   3cfbc:	str	w1, [x29, #184]
   3cfc0:	add	w20, w21, #0x3
   3cfc4:	cbz	x0, 3cfd0 <mpfr_mpn_exp@@Base+0x3d8>
   3cfc8:	bl	c410 <mpfr_tmp_free@plt>
   3cfcc:	b	3ceb4 <mpfr_mpn_exp@@Base+0x2bc>
   3cfd0:	ldr	x0, [x29, #96]
   3cfd4:	mov	x20, #0xffffffffffffffff    	// #-1
   3cfd8:	str	x19, [x0]
   3cfdc:	b	3cf14 <mpfr_mpn_exp@@Base+0x31c>
   3cfe0:	mov	x20, #0xffffffffffffffff    	// #-1
   3cfe4:	b	3cf14 <mpfr_mpn_exp@@Base+0x31c>
   3cfe8:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3cfec:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3cff0:	add	x2, x2, #0x148
   3cff4:	add	x0, x0, #0x150
   3cff8:	mov	w1, #0x36                  	// #54
   3cffc:	bl	cb40 <mpfr_assert_fail@plt>
   3d000:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3d004:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3d008:	add	x2, x2, #0x160
   3d00c:	add	x0, x0, #0x150
   3d010:	mov	w1, #0x37                  	// #55
   3d014:	bl	cb40 <mpfr_assert_fail@plt>

000000000003d018 <mpfr_tmp_allocate@@Base>:
   3d018:	stp	x29, x30, [sp, #-48]!
   3d01c:	mov	x29, sp
   3d020:	stp	x19, x20, [sp, #16]
   3d024:	mov	x20, x0
   3d028:	mov	x0, #0x18                  	// #24
   3d02c:	str	x21, [sp, #32]
   3d030:	mov	x21, x1
   3d034:	bl	ccf0 <mpfr_allocate_func@plt>
   3d038:	mov	x19, x0
   3d03c:	mov	x0, x21
   3d040:	bl	ccf0 <mpfr_allocate_func@plt>
   3d044:	stp	x0, x21, [x19]
   3d048:	ldr	x0, [x20]
   3d04c:	ldr	x21, [sp, #32]
   3d050:	str	x0, [x19, #16]
   3d054:	str	x19, [x20]
   3d058:	ldr	x0, [x19]
   3d05c:	ldp	x19, x20, [sp, #16]
   3d060:	ldp	x29, x30, [sp], #48
   3d064:	ret

000000000003d068 <mpfr_tmp_free@@Base>:
   3d068:	cbz	x0, 3d0a8 <mpfr_tmp_free@@Base+0x40>
   3d06c:	stp	x29, x30, [sp, #-32]!
   3d070:	mov	x29, sp
   3d074:	str	x19, [sp, #16]
   3d078:	mov	x19, x0
   3d07c:	nop
   3d080:	ldp	x0, x1, [x19]
   3d084:	bl	cc20 <mpfr_free_func@plt>
   3d088:	mov	x0, x19
   3d08c:	mov	x1, #0x18                  	// #24
   3d090:	ldr	x19, [x19, #16]
   3d094:	bl	cc20 <mpfr_free_func@plt>
   3d098:	cbnz	x19, 3d080 <mpfr_tmp_free@@Base+0x18>
   3d09c:	ldr	x19, [sp, #16]
   3d0a0:	ldp	x29, x30, [sp], #32
   3d0a4:	ret
   3d0a8:	ret
   3d0ac:	nop
   3d0b0:	stp	x29, x30, [sp, #-192]!
   3d0b4:	mov	x29, sp
   3d0b8:	ldr	w8, [sp, #200]
   3d0bc:	str	x1, [sp, #104]
   3d0c0:	sub	x1, x1, #0x1
   3d0c4:	stp	x25, x26, [sp, #64]
   3d0c8:	mov	x26, x0
   3d0cc:	mov	x25, x3
   3d0d0:	stp	x27, x28, [sp, #80]
   3d0d4:	add	w28, w8, #0x1
   3d0d8:	mov	x27, x0
   3d0dc:	str	x1, [sp, #152]
   3d0e0:	add	x1, x26, x1, lsl #3
   3d0e4:	sub	x0, x2, w28, sxtw
   3d0e8:	str	x1, [sp, #144]
   3d0ec:	sxtw	x1, w8
   3d0f0:	stp	x19, x20, [sp, #16]
   3d0f4:	mov	x26, x4
   3d0f8:	stp	x21, x22, [sp, #32]
   3d0fc:	mov	x21, x7
   3d100:	stp	x23, x24, [sp, #48]
   3d104:	mov	x23, x5
   3d108:	mov	x24, x6
   3d10c:	str	x1, [sp, #160]
   3d110:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3d114:	stp	x2, x0, [sp, #168]
   3d118:	add	x0, x0, x1
   3d11c:	str	x0, [sp, #184]
   3d120:	cbz	x26, 3d2f0 <mpfr_tmp_free@@Base+0x288>
   3d124:	nop
   3d128:	mov	x4, x21
   3d12c:	mov	x20, #0x0                   	// #0
   3d130:	mov	x21, x27
   3d134:	mov	x27, x24
   3d138:	mov	x24, x20
   3d13c:	mov	x28, #0x8000000000000000    	// #-9223372036854775808
   3d140:	mov	x22, #0x8000000000000003    	// #-9223372036854775805
   3d144:	nop
   3d148:	ldr	x1, [x25, x24, lsl #3]
   3d14c:	ldr	x0, [x1, #16]
   3d150:	cmp	x0, x22
   3d154:	b.le	3d280 <mpfr_tmp_free@@Base+0x218>
   3d158:	ldr	x6, [x1]
   3d15c:	ldr	x2, [x1, #24]
   3d160:	sub	x19, x6, #0x1
   3d164:	asr	x19, x19, #6
   3d168:	add	x19, x19, #0x1
   3d16c:	sub	x3, x0, x19, lsl #6
   3d170:	subs	x9, x3, x23
   3d174:	b.mi	3d2f8 <mpfr_tmp_free@@Base+0x290>  // b.first
   3d178:	ldr	x3, [sp, #104]
   3d17c:	asr	x8, x9, #6
   3d180:	sub	x7, x3, x8
   3d184:	cmp	x7, #0x0
   3d188:	b.le	3d280 <mpfr_tmp_free@@Base+0x218>
   3d18c:	add	x20, x21, x8, lsl #3
   3d190:	cmp	x0, x27
   3d194:	b.le	3d458 <mpfr_tmp_free@@Base+0x3f0>
   3d198:	subs	x0, x0, x27
   3d19c:	add	x3, x0, #0x3f
   3d1a0:	csel	x3, x3, x0, mi  // mi = first
   3d1a4:	sub	x19, x19, x3, asr #6
   3d1a8:	cmp	x19, #0x0
   3d1ac:	b.le	3d280 <mpfr_tmp_free@@Base+0x218>
   3d1b0:	and	x0, x0, #0x3f
   3d1b4:	mov	w6, w0
   3d1b8:	mov	w5, w0
   3d1bc:	ands	x9, x9, #0x3f
   3d1c0:	b.eq	3d200 <mpfr_tmp_free@@Base+0x198>  // b.none
   3d1c4:	mov	x1, x2
   3d1c8:	mov	w3, w9
   3d1cc:	mov	x2, x19
   3d1d0:	mov	x0, x4
   3d1d4:	stp	x4, x9, [sp, #112]
   3d1d8:	str	x7, [sp, #128]
   3d1dc:	str	w5, [sp, #136]
   3d1e0:	bl	bcc0 <__gmpn_lshift@plt>
   3d1e4:	ldp	x4, x9, [sp, #112]
   3d1e8:	ldr	w5, [sp, #136]
   3d1ec:	ldr	x1, [x25, x24, lsl #3]
   3d1f0:	ldr	x7, [sp, #128]
   3d1f4:	mov	x2, x4
   3d1f8:	subs	w6, w5, w9
   3d1fc:	b.mi	3d55c <mpfr_tmp_free@@Base+0x4f4>  // b.first
   3d200:	ldr	w0, [x1, #8]
   3d204:	cbz	w6, 3d3e4 <mpfr_tmp_free@@Base+0x37c>
   3d208:	sub	x19, x19, #0x1
   3d20c:	cmp	w0, #0x0
   3d210:	b.gt	3d464 <mpfr_tmp_free@@Base+0x3fc>
   3d214:	cbnz	x19, 3d648 <mpfr_tmp_free@@Base+0x5e0>
   3d218:	mov	x1, #0x0                   	// #0
   3d21c:	ldr	x2, [x2]
   3d220:	mov	w0, #0x40                  	// #64
   3d224:	sub	w0, w0, w6
   3d228:	mov	x3, #0xffffffffffffffff    	// #-1
   3d22c:	lsl	x0, x3, x0
   3d230:	bic	x0, x2, x0
   3d234:	add	x0, x0, x1
   3d238:	cmp	x7, x19
   3d23c:	b.le	3d280 <mpfr_tmp_free@@Base+0x218>
   3d240:	ldr	x1, [x20, x19, lsl #3]
   3d244:	add	x2, x20, x19, lsl #3
   3d248:	sub	x3, x1, x0
   3d24c:	str	x3, [x20, x19, lsl #3]
   3d250:	cmp	x0, x1
   3d254:	b.ls	3d280 <mpfr_tmp_free@@Base+0x218>  // b.plast
   3d258:	sub	x19, x7, x19
   3d25c:	mov	x0, #0x1                   	// #1
   3d260:	b	3d278 <mpfr_tmp_free@@Base+0x210>
   3d264:	ldr	x1, [x2, x0, lsl #3]
   3d268:	sub	x3, x1, #0x1
   3d26c:	str	x3, [x2, x0, lsl #3]
   3d270:	add	x0, x0, #0x1
   3d274:	cbnz	x1, 3d280 <mpfr_tmp_free@@Base+0x218>
   3d278:	cmp	x19, x0
   3d27c:	b.gt	3d264 <mpfr_tmp_free@@Base+0x1fc>
   3d280:	add	x24, x24, #0x1
   3d284:	cmp	x26, x24
   3d288:	b.ne	3d148 <mpfr_tmp_free@@Base+0xe0>  // b.any
   3d28c:	mov	x27, x21
   3d290:	mov	x21, x4
   3d294:	ldp	x0, x1, [sp, #144]
   3d298:	ldr	x2, [x0]
   3d29c:	mov	x0, #0x0                   	// #0
   3d2a0:	asr	x3, x2, #63
   3d2a4:	b	3d2ac <mpfr_tmp_free@@Base+0x244>
   3d2a8:	ldr	x2, [x27, x1, lsl #3]
   3d2ac:	cmp	x2, x3
   3d2b0:	b.ne	3d48c <mpfr_tmp_free@@Base+0x424>  // b.any
   3d2b4:	sub	x1, x1, #0x1
   3d2b8:	add	x0, x0, #0x40
   3d2bc:	cmn	x1, #0x1
   3d2c0:	b.ne	3d2a8 <mpfr_tmp_free@@Base+0x240>  // b.any
   3d2c4:	cbnz	x2, 3d498 <mpfr_tmp_free@@Base+0x430>
   3d2c8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3d2cc:	cmp	x28, x0
   3d2d0:	b.eq	3d628 <mpfr_tmp_free@@Base+0x5c0>  // b.none
   3d2d4:	ldr	x0, [sp, #184]
   3d2d8:	cmp	x0, x28
   3d2dc:	b.gt	3d570 <mpfr_tmp_free@@Base+0x508>
   3d2e0:	ldr	x0, [sp, #176]
   3d2e4:	mov	x24, x28
   3d2e8:	sub	x23, x28, x0
   3d2ec:	cbnz	x26, 3d128 <mpfr_tmp_free@@Base+0xc0>
   3d2f0:	mov	x28, #0x8000000000000000    	// #-9223372036854775808
   3d2f4:	b	3d294 <mpfr_tmp_free@@Base+0x22c>
   3d2f8:	cmp	x0, x23
   3d2fc:	b.gt	3d318 <mpfr_tmp_free@@Base+0x2b0>
   3d300:	cmp	x0, x28
   3d304:	add	x24, x24, #0x1
   3d308:	csel	x28, x28, x0, le
   3d30c:	cmp	x26, x24
   3d310:	b.ne	3d148 <mpfr_tmp_free@@Base+0xe0>  // b.any
   3d314:	b	3d28c <mpfr_tmp_free@@Base+0x224>
   3d318:	sub	x6, x0, x6
   3d31c:	sub	x3, x23, x3
   3d320:	cmp	x6, x23
   3d324:	add	x6, x3, #0x3f
   3d328:	csel	x28, x28, x23, ge  // ge = tcont
   3d32c:	cmp	x3, #0x0
   3d330:	csel	x6, x6, x3, lt  // lt = tstop
   3d334:	cmp	x0, x27
   3d338:	asr	x6, x6, #6
   3d33c:	sub	x19, x19, x6
   3d340:	add	x2, x2, x6, lsl #3
   3d344:	b.le	3d538 <mpfr_tmp_free@@Base+0x4d0>
   3d348:	subs	x0, x0, x27
   3d34c:	add	x7, x0, #0x3f
   3d350:	and	w6, w0, #0x3f
   3d354:	csel	x7, x7, x0, mi  // mi = first
   3d358:	sub	x19, x19, x7, asr #6
   3d35c:	ands	x20, x3, #0x3f
   3d360:	b.eq	3d52c <mpfr_tmp_free@@Base+0x4c4>  // b.none
   3d364:	negs	x3, x3
   3d368:	mov	x1, x2
   3d36c:	and	x0, x3, #0x3f
   3d370:	mov	x2, x19
   3d374:	csneg	x20, x20, x0, mi  // mi = first
   3d378:	mov	x0, x4
   3d37c:	mov	w3, w20
   3d380:	str	x4, [sp, #112]
   3d384:	str	w6, [sp, #120]
   3d388:	bl	bce0 <__gmpn_rshift@plt>
   3d38c:	ldr	w6, [sp, #120]
   3d390:	ldr	x4, [sp, #112]
   3d394:	add	w0, w6, w20
   3d398:	cmp	w0, #0x3f
   3d39c:	b.ls	3d3a8 <mpfr_tmp_free@@Base+0x340>  // b.plast
   3d3a0:	sub	x19, x19, #0x1
   3d3a4:	sub	w0, w0, #0x40
   3d3a8:	cbz	w0, 3d3d0 <mpfr_tmp_free@@Base+0x368>
   3d3ac:	lsl	x1, x19, #3
   3d3b0:	mov	w2, #0x40                  	// #64
   3d3b4:	sub	x1, x1, #0x8
   3d3b8:	sub	w0, w2, w0
   3d3bc:	mov	x2, #0xffffffffffffffff    	// #-1
   3d3c0:	lsl	x0, x2, x0
   3d3c4:	ldr	x2, [x4, x1]
   3d3c8:	bic	x0, x2, x0
   3d3cc:	str	x0, [x4, x1]
   3d3d0:	ldr	x0, [x25, x24, lsl #3]
   3d3d4:	mov	x2, x4
   3d3d8:	ldr	x7, [sp, #104]
   3d3dc:	mov	x20, x21
   3d3e0:	ldr	w0, [x0, #8]
   3d3e4:	cmp	w0, #0x0
   3d3e8:	b.le	3d540 <mpfr_tmp_free@@Base+0x4d8>
   3d3ec:	mov	x3, x19
   3d3f0:	mov	x1, x20
   3d3f4:	mov	x0, x20
   3d3f8:	stp	x7, x4, [sp, #112]
   3d3fc:	bl	c5a0 <__gmpn_add_n@plt>
   3d400:	ldp	x7, x4, [sp, #112]
   3d404:	cmp	x19, x7
   3d408:	b.ge	3d280 <mpfr_tmp_free@@Base+0x218>  // b.tcont
   3d40c:	ldr	x1, [x20, x19, lsl #3]
   3d410:	add	x2, x20, x19, lsl #3
   3d414:	adds	x0, x0, x1
   3d418:	str	x0, [x20, x19, lsl #3]
   3d41c:	b.cc	3d280 <mpfr_tmp_free@@Base+0x218>  // b.lo, b.ul, b.last
   3d420:	sub	x19, x7, x19
   3d424:	mov	x0, #0x1                   	// #1
   3d428:	b	3d440 <mpfr_tmp_free@@Base+0x3d8>
   3d42c:	ldr	x1, [x2, x0, lsl #3]
   3d430:	add	x1, x1, #0x1
   3d434:	str	x1, [x2, x0, lsl #3]
   3d438:	add	x0, x0, #0x1
   3d43c:	cbnz	x1, 3d280 <mpfr_tmp_free@@Base+0x218>
   3d440:	cmp	x19, x0
   3d444:	b.gt	3d42c <mpfr_tmp_free@@Base+0x3c4>
   3d448:	add	x24, x24, #0x1
   3d44c:	cmp	x26, x24
   3d450:	b.ne	3d148 <mpfr_tmp_free@@Base+0xe0>  // b.any
   3d454:	b	3d28c <mpfr_tmp_free@@Base+0x224>
   3d458:	mov	w5, #0x0                   	// #0
   3d45c:	mov	w6, #0x0                   	// #0
   3d460:	b	3d1bc <mpfr_tmp_free@@Base+0x154>
   3d464:	cbnz	x19, 3d67c <mpfr_tmp_free@@Base+0x614>
   3d468:	mov	x1, #0x0                   	// #0
   3d46c:	ldr	x2, [x2, x19, lsl #3]
   3d470:	mov	w0, #0x40                  	// #64
   3d474:	sub	w0, w0, w6
   3d478:	mov	x3, #0xffffffffffffffff    	// #-1
   3d47c:	lsl	x0, x3, x0
   3d480:	bic	x0, x2, x0
   3d484:	add	x0, x0, x1
   3d488:	b	3d404 <mpfr_tmp_free@@Base+0x39c>
   3d48c:	eor	x2, x2, x3
   3d490:	clz	x2, x2
   3d494:	add	x0, x0, x2
   3d498:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   3d49c:	cmp	x28, x2
   3d4a0:	ldp	x2, x1, [sp, #160]
   3d4a4:	add	x1, x1, x23
   3d4a8:	add	x2, x2, x28
   3d4ac:	sub	x1, x1, x0
   3d4b0:	b.eq	3d5ac <mpfr_tmp_free@@Base+0x544>  // b.none
   3d4b4:	cmp	x1, x2
   3d4b8:	b.lt	3d4cc <mpfr_tmp_free@@Base+0x464>  // b.tstop
   3d4bc:	ldr	x4, [sp, #208]
   3d4c0:	sub	x3, x1, x2
   3d4c4:	cmp	x3, x4
   3d4c8:	b.cs	3d5ac <mpfr_tmp_free@@Base+0x544>  // b.hs, b.nlast
   3d4cc:	subs	x19, x2, x1
   3d4d0:	sub	x0, x0, #0x2
   3d4d4:	csel	x19, x19, xzr, pl  // pl = nfrst
   3d4d8:	sub	x19, x0, x19
   3d4dc:	ldr	x0, [sp, #104]
   3d4e0:	asr	x22, x19, #6
   3d4e4:	ands	x3, x19, #0x3f
   3d4e8:	sub	x2, x0, x22
   3d4ec:	lsl	x22, x22, #3
   3d4f0:	add	x0, x27, x22
   3d4f4:	b.eq	3d5a0 <mpfr_tmp_free@@Base+0x538>  // b.none
   3d4f8:	mov	x1, x27
   3d4fc:	bl	bcc0 <__gmpn_lshift@plt>
   3d500:	mov	x2, x22
   3d504:	mov	x0, x27
   3d508:	mov	w1, #0x0                   	// #0
   3d50c:	bl	c110 <memset@plt>
   3d510:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3d514:	add	x0, x19, x0
   3d518:	cmp	x0, x23
   3d51c:	b.gt	3d588 <mpfr_tmp_free@@Base+0x520>
   3d520:	sub	x23, x23, x19
   3d524:	mov	x24, x28
   3d528:	b	3d2ec <mpfr_tmp_free@@Base+0x284>
   3d52c:	mov	x20, x21
   3d530:	ldr	x7, [sp, #104]
   3d534:	b	3d200 <mpfr_tmp_free@@Base+0x198>
   3d538:	mov	w6, #0x0                   	// #0
   3d53c:	b	3d35c <mpfr_tmp_free@@Base+0x2f4>
   3d540:	mov	x3, x19
   3d544:	mov	x1, x20
   3d548:	mov	x0, x20
   3d54c:	stp	x7, x4, [sp, #112]
   3d550:	bl	be60 <__gmpn_sub_n@plt>
   3d554:	ldp	x7, x4, [sp, #112]
   3d558:	b	3d238 <mpfr_tmp_free@@Base+0x1d0>
   3d55c:	add	w6, w6, #0x40
   3d560:	str	x0, [x4, x19, lsl #3]
   3d564:	ldr	w0, [x1, #8]
   3d568:	add	x19, x19, #0x1
   3d56c:	b	3d208 <mpfr_tmp_free@@Base+0x1a0>
   3d570:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3d574:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3d578:	add	x2, x2, #0x9e8
   3d57c:	add	x0, x0, #0x9e0
   3d580:	mov	w1, #0x200                 	// #512
   3d584:	bl	cb40 <mpfr_assert_fail@plt>
   3d588:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3d58c:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3d590:	add	x2, x2, #0x9b0
   3d594:	add	x0, x0, #0x9e0
   3d598:	mov	w1, #0x1f3                 	// #499
   3d59c:	bl	cb40 <mpfr_assert_fail@plt>
   3d5a0:	mov	x1, x27
   3d5a4:	bl	bae0 <__gmpn_copyd@plt>
   3d5a8:	b	3d500 <mpfr_tmp_free@@Base+0x498>
   3d5ac:	ldr	x2, [sp, #216]
   3d5b0:	mov	x27, x23
   3d5b4:	cmp	x2, #0x0
   3d5b8:	ldr	x2, [sp, #224]
   3d5bc:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   3d5c0:	b.eq	3d5f8 <mpfr_tmp_free@@Base+0x590>  // b.none
   3d5c4:	ldr	x2, [sp, #216]
   3d5c8:	str	x1, [x2]
   3d5cc:	ldr	x1, [sp, #224]
   3d5d0:	str	x27, [x1]
   3d5d4:	ldr	x1, [sp, #232]
   3d5d8:	str	x28, [x1]
   3d5dc:	ldp	x19, x20, [sp, #16]
   3d5e0:	ldp	x21, x22, [sp, #32]
   3d5e4:	ldp	x23, x24, [sp, #48]
   3d5e8:	ldp	x25, x26, [sp, #64]
   3d5ec:	ldp	x27, x28, [sp, #80]
   3d5f0:	ldp	x29, x30, [sp], #192
   3d5f4:	ret
   3d5f8:	ldp	x2, x3, [sp, #216]
   3d5fc:	orr	x2, x2, x3
   3d600:	cbz	x2, 3d5dc <mpfr_tmp_free@@Base+0x574>
   3d604:	ldr	x2, [sp, #216]
   3d608:	cbnz	x2, 3d5c4 <mpfr_tmp_free@@Base+0x55c>
   3d60c:	ldp	x19, x20, [sp, #16]
   3d610:	ldp	x21, x22, [sp, #32]
   3d614:	ldp	x23, x24, [sp, #48]
   3d618:	ldp	x25, x26, [sp, #64]
   3d61c:	ldp	x27, x28, [sp, #80]
   3d620:	ldp	x29, x30, [sp], #192
   3d624:	ret
   3d628:	mov	x0, #0x0                   	// #0
   3d62c:	ldp	x19, x20, [sp, #16]
   3d630:	ldp	x21, x22, [sp, #32]
   3d634:	ldp	x23, x24, [sp, #48]
   3d638:	ldp	x25, x26, [sp, #64]
   3d63c:	ldp	x27, x28, [sp, #80]
   3d640:	ldp	x29, x30, [sp], #192
   3d644:	ret
   3d648:	mov	x1, x20
   3d64c:	mov	x3, x19
   3d650:	mov	x0, x20
   3d654:	stp	x2, x7, [sp, #112]
   3d658:	str	w6, [sp, #128]
   3d65c:	str	x4, [sp, #136]
   3d660:	bl	be60 <__gmpn_sub_n@plt>
   3d664:	ldp	x2, x7, [sp, #112]
   3d668:	mov	x1, x0
   3d66c:	ldr	w6, [sp, #128]
   3d670:	ldr	x4, [sp, #136]
   3d674:	add	x2, x2, x19, lsl #3
   3d678:	b	3d21c <mpfr_tmp_free@@Base+0x1b4>
   3d67c:	mov	x1, x20
   3d680:	mov	x3, x19
   3d684:	mov	x0, x20
   3d688:	stp	x2, x7, [sp, #112]
   3d68c:	str	w6, [sp, #128]
   3d690:	str	x4, [sp, #136]
   3d694:	bl	c5a0 <__gmpn_add_n@plt>
   3d698:	ldr	w6, [sp, #128]
   3d69c:	mov	x1, x0
   3d6a0:	ldp	x2, x7, [sp, #112]
   3d6a4:	ldr	x4, [sp, #136]
   3d6a8:	b	3d46c <mpfr_tmp_free@@Base+0x404>
   3d6ac:	nop
   3d6b0:	stp	x29, x30, [sp, #-240]!
   3d6b4:	sub	x5, x5, #0x1
   3d6b8:	clz	x5, x5
   3d6bc:	mov	x29, sp
   3d6c0:	stp	x19, x20, [sp, #16]
   3d6c4:	mov	x20, x0
   3d6c8:	mov	w0, #0x41                  	// #65
   3d6cc:	sub	w0, w0, w5
   3d6d0:	stp	x27, x28, [sp, #80]
   3d6d4:	ldr	x28, [x20]
   3d6d8:	stp	x23, x24, [sp, #48]
   3d6dc:	mov	w23, #0x40                  	// #64
   3d6e0:	sub	w23, w23, w5
   3d6e4:	sxtw	x0, w0
   3d6e8:	stp	x25, x26, [sp, #64]
   3d6ec:	mov	x24, x1
   3d6f0:	sxtw	x26, w23
   3d6f4:	str	x4, [x29, #200]
   3d6f8:	add	x4, x28, x0
   3d6fc:	add	x4, x4, x26
   3d700:	str	w3, [x29, #196]
   3d704:	add	x4, x4, #0x1
   3d708:	str	x0, [x29, #152]
   3d70c:	stp	x21, x22, [sp, #32]
   3d710:	mov	x25, x2
   3d714:	asr	x4, x4, #6
   3d718:	add	x4, x4, #0x1
   3d71c:	str	xzr, [x29, #216]
   3d720:	sub	sp, sp, #0x30
   3d724:	lsl	x3, x4, #6
   3d728:	sub	x5, x3, x0
   3d72c:	sub	x0, x3, x28
   3d730:	add	x19, x5, #0x3e
   3d734:	sub	x0, x0, #0x1
   3d738:	ldr	x21, [x20, #24]
   3d73c:	asr	x19, x19, #6
   3d740:	asr	x0, x0, #6
   3d744:	add	x19, x19, #0x1
   3d748:	add	x1, x4, x19
   3d74c:	str	x0, [x29, #144]
   3d750:	add	x0, x0, #0x1
   3d754:	str	x0, [x29, #160]
   3d758:	add	x1, x1, x0
   3d75c:	lsl	x1, x1, #3
   3d760:	cmp	x1, #0x4, lsl #12
   3d764:	b.hi	3e104 <mpfr_tmp_free@@Base+0x109c>  // b.pmore
   3d768:	add	x1, x1, #0xf
   3d76c:	and	x1, x1, #0xfffffffffffffff0
   3d770:	sub	sp, sp, x1
   3d774:	add	x27, sp, #0x30
   3d778:	add	x8, x27, x19, lsl #3
   3d77c:	lsl	x22, x4, #3
   3d780:	mov	x0, x8
   3d784:	mov	x2, x22
   3d788:	mov	w1, #0x0                   	// #0
   3d78c:	stp	x3, x5, [x29, #168]
   3d790:	str	x4, [x29, #184]
   3d794:	bl	c110 <memset@plt>
   3d798:	ldp	x3, x5, [x29, #168]
   3d79c:	mov	x8, x0
   3d7a0:	ldr	x6, [x29, #200]
   3d7a4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3d7a8:	ldr	x4, [x29, #184]
   3d7ac:	add	x0, x5, x0
   3d7b0:	cmp	x0, x6
   3d7b4:	b.gt	3e124 <mpfr_tmp_free@@Base+0x10bc>
   3d7b8:	add	x0, x29, #0xc8
   3d7bc:	add	x1, x29, #0xe0
   3d7c0:	add	x2, x29, #0xe8
   3d7c4:	add	x7, x28, #0x3
   3d7c8:	str	x19, [sp]
   3d7cc:	sub	x5, x6, x5
   3d7d0:	str	w23, [sp, #8]
   3d7d4:	stp	x7, x2, [sp, #16]
   3d7d8:	mov	x2, x3
   3d7dc:	mov	x7, x27
   3d7e0:	stp	x1, x0, [sp, #32]
   3d7e4:	mov	x3, x24
   3d7e8:	mov	x1, x4
   3d7ec:	mov	x0, x8
   3d7f0:	mov	x4, x25
   3d7f4:	str	x8, [x29, #184]
   3d7f8:	str	x5, [x29, #224]
   3d7fc:	bl	3d0b0 <mpfr_tmp_free@@Base+0x48>
   3d800:	mov	x10, x0
   3d804:	ldr	x8, [x29, #184]
   3d808:	cbz	x0, 3e158 <mpfr_tmp_free@@Base+0x10f0>
   3d80c:	add	x13, x8, x22
   3d810:	ldr	w0, [x29, #196]
   3d814:	ldp	x3, x9, [x29, #224]
   3d818:	mov	w14, #0x1                   	// #1
   3d81c:	ldur	x15, [x13, #-8]
   3d820:	lsr	x15, x15, #63
   3d824:	mov	x5, x3
   3d828:	cmp	x15, #0x0
   3d82c:	sub	x9, x9, x28
   3d830:	cneg	w14, w14, ne  // ne = any
   3d834:	cmp	w0, #0x5
   3d838:	b.eq	3d960 <mpfr_tmp_free@@Base+0x8f8>  // b.none
   3d83c:	cmp	x9, x3
   3d840:	b.le	3dc58 <mpfr_tmp_free@@Base+0xbf0>
   3d844:	sub	x6, x9, x3
   3d848:	and	x0, x6, #0x3f
   3d84c:	asr	x1, x6, #6
   3d850:	mov	w22, w0
   3d854:	lsl	x17, x1, #3
   3d858:	ldr	x2, [x8, x1, lsl #3]
   3d85c:	lsr	x4, x2, x0
   3d860:	and	x4, x4, #0x1
   3d864:	str	x4, [x29, #184]
   3d868:	cbz	x0, 3d924 <mpfr_tmp_free@@Base+0x8bc>
   3d86c:	ldr	x4, [x29, #200]
   3d870:	sub	w30, w0, #0x1
   3d874:	mov	x7, #0x8000000000000000    	// #-9223372036854775808
   3d878:	lsr	x18, x2, x30
   3d87c:	cmp	x4, x7
   3d880:	and	x18, x18, #0x1
   3d884:	b.eq	3db5c <mpfr_tmp_free@@Base+0xaf4>  // b.none
   3d888:	add	x16, x26, x4
   3d88c:	cmp	x0, #0x1
   3d890:	sub	x7, x9, x16
   3d894:	b.eq	3e2e8 <mpfr_tmp_free@@Base+0x1280>  // b.none
   3d898:	mov	x6, #0x1                   	// #1
   3d89c:	sxtw	x0, w0
   3d8a0:	lsl	x6, x6, x30
   3d8a4:	sub	x6, x6, #0x1
   3d8a8:	subs	x0, x7, x0
   3d8ac:	b.ge	3d8c0 <mpfr_tmp_free@@Base+0x858>  // b.tcont
   3d8b0:	sub	w7, w22, w7
   3d8b4:	mov	x0, #0x0                   	// #0
   3d8b8:	lsr	x2, x2, x7
   3d8bc:	lsr	x6, x6, x7
   3d8c0:	ands	x2, x2, x6
   3d8c4:	b.ne	3def8 <mpfr_tmp_free@@Base+0xe90>  // b.any
   3d8c8:	cbnz	x18, 3e21c <mpfr_tmp_free@@Base+0x11b4>
   3d8cc:	cbz	x0, 3e4e0 <mpfr_tmp_free@@Base+0x1478>
   3d8d0:	cbz	x1, 3e4e0 <mpfr_tmp_free@@Base+0x1478>
   3d8d4:	mov	x2, x18
   3d8d8:	mov	w22, #0x1                   	// #1
   3d8dc:	nop
   3d8e0:	sub	x1, x1, #0x1
   3d8e4:	cmp	x0, #0x3f
   3d8e8:	ldr	x6, [x8, x1, lsl #3]
   3d8ec:	b.le	3e098 <mpfr_tmp_free@@Base+0x1030>
   3d8f0:	cmp	x2, x6
   3d8f4:	b.eq	3db04 <mpfr_tmp_free@@Base+0xa9c>  // b.none
   3d8f8:	mov	w26, #0x1                   	// #1
   3d8fc:	ldr	w0, [x29, #196]
   3d900:	cmp	w0, #0x2
   3d904:	b.eq	3e3c4 <mpfr_tmp_free@@Base+0x135c>  // b.none
   3d908:	b.le	3e408 <mpfr_tmp_free@@Base+0x13a0>
   3d90c:	ldr	w0, [x29, #196]
   3d910:	cmp	w0, #0x3
   3d914:	b.eq	3e4d4 <mpfr_tmp_free@@Base+0x146c>  // b.none
   3d918:	cmp	w0, #0x4
   3d91c:	b.eq	3de3c <mpfr_tmp_free@@Base+0xdd4>  // b.none
   3d920:	b	3e41c <mpfr_tmp_free@@Base+0x13b4>
   3d924:	add	x7, x8, x17
   3d928:	mov	x16, #0x8000000000000000    	// #-9223372036854775808
   3d92c:	ldr	x4, [x29, #200]
   3d930:	ldur	x7, [x7, #-8]
   3d934:	cmp	x4, x16
   3d938:	lsr	x18, x7, #63
   3d93c:	b.eq	3db5c <mpfr_tmp_free@@Base+0xaf4>  // b.none
   3d940:	add	x16, x26, x4
   3d944:	mov	x2, x7
   3d948:	mov	x0, #0x40                  	// #64
   3d94c:	sub	x1, x1, #0x1
   3d950:	sub	x7, x9, x16
   3d954:	mov	w22, w0
   3d958:	mov	x6, #0x7fffffffffffffff    	// #9223372036854775807
   3d95c:	b	3d8a8 <mpfr_tmp_free@@Base+0x840>
   3d960:	cmp	x9, x3
   3d964:	b.le	3e3fc <mpfr_tmp_free@@Base+0x1394>
   3d968:	sub	x0, x9, x3
   3d96c:	ands	x1, x0, #0x3f
   3d970:	asr	x0, x0, #6
   3d974:	b.ne	3db44 <mpfr_tmp_free@@Base+0xadc>  // b.any
   3d978:	add	x0, x8, x0, lsl #3
   3d97c:	mov	w26, #0x0                   	// #0
   3d980:	ldur	x23, [x0, #-8]
   3d984:	lsr	x23, x23, #63
   3d988:	sub	x19, x28, #0x1
   3d98c:	negs	x22, x10
   3d990:	str	w14, [x20, #8]
   3d994:	and	x22, x22, #0x3f
   3d998:	asr	x19, x19, #6
   3d99c:	and	x10, x10, #0x3f
   3d9a0:	add	x25, x19, #0x1
   3d9a4:	csneg	x22, x10, x22, mi  // mi = first
   3d9a8:	cmp	x3, x9
   3d9ac:	lsl	w0, w25, #6
   3d9b0:	sub	w27, w0, w28
   3d9b4:	b.ge	3e184 <mpfr_tmp_free@@Base+0x111c>  // b.tcont
   3d9b8:	subs	x9, x9, x3
   3d9bc:	add	x24, x9, #0x3f
   3d9c0:	csel	x24, x24, x9, mi  // mi = first
   3d9c4:	asr	x24, x24, #6
   3d9c8:	cbz	x10, 3e234 <mpfr_tmp_free@@Base+0x11cc>
   3d9cc:	ldr	x1, [x29, #232]
   3d9d0:	subs	x3, x1, x3
   3d9d4:	add	x1, x3, #0x3f
   3d9d8:	csel	x1, x1, x3, mi  // mi = first
   3d9dc:	asr	x1, x1, #6
   3d9e0:	sub	x1, x1, x19
   3d9e4:	cmp	x24, x1
   3d9e8:	b.eq	3dfec <mpfr_tmp_free@@Base+0xf84>  // b.none
   3d9ec:	add	x1, x8, x1, lsl #3
   3d9f0:	mov	w3, w22
   3d9f4:	mov	x2, x25
   3d9f8:	mov	x0, x21
   3d9fc:	stp	x15, x8, [x29, #176]
   3da00:	bl	bcc0 <__gmpn_lshift@plt>
   3da04:	neg	w1, w22
   3da08:	ldp	x15, x8, [x29, #176]
   3da0c:	ldr	x0, [x21]
   3da10:	ldr	x22, [x8, x24, lsl #3]
   3da14:	lsr	x22, x22, x1
   3da18:	orr	x22, x0, x22
   3da1c:	str	x22, [x21]
   3da20:	cmp	x28, #0x1
   3da24:	b.eq	3e1e8 <mpfr_tmp_free@@Base+0x1180>  // b.none
   3da28:	lsl	x0, x25, #3
   3da2c:	mov	x2, #0x1                   	// #1
   3da30:	sub	x3, x0, #0x8
   3da34:	lsl	x4, x2, x27
   3da38:	neg	x1, x4
   3da3c:	ldr	x0, [x21]
   3da40:	cbz	x15, 3dbf4 <mpfr_tmp_free@@Base+0xb8c>
   3da44:	cmp	w23, #0x2
   3da48:	bic	x1, x1, x0
   3da4c:	b.eq	3e00c <mpfr_tmp_free@@Base+0xfa4>  // b.none
   3da50:	sub	w2, w2, w23
   3da54:	sxtw	x0, w2
   3da58:	lsl	x0, x0, x27
   3da5c:	adds	x1, x1, x0
   3da60:	str	x1, [x21]
   3da64:	b.cs	3deac <mpfr_tmp_free@@Base+0xe44>  // b.hs, b.nlast
   3da68:	cmp	x0, #0x0
   3da6c:	ccmp	w23, #0x0, #0x0, eq  // eq = none
   3da70:	b.lt	3deac <mpfr_tmp_free@@Base+0xe44>  // b.tstop
   3da74:	cmp	x25, #0x1
   3da78:	b.ne	3e320 <mpfr_tmp_free@@Base+0x12b8>  // b.any
   3da7c:	nop
   3da80:	ldr	x1, [x29, #232]
   3da84:	str	x1, [x20, #16]
   3da88:	ldr	x0, [x29, #216]
   3da8c:	cbnz	x0, 3e210 <mpfr_tmp_free@@Base+0x11a8>
   3da90:	mrs	x2, tpidr_el0
   3da94:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3da98:	ldr	x3, [x0, #2512]
   3da9c:	add	x0, x0, #0x9d0
   3daa0:	blr	x3
   3daa4:	ldr	x0, [x2, x0]
   3daa8:	cmp	x0, x1
   3daac:	b.gt	3dacc <mpfr_tmp_free@@Base+0xa64>
   3dab0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3dab4:	ldr	x3, [x0, #2544]
   3dab8:	add	x0, x0, #0x9f0
   3dabc:	blr	x3
   3dac0:	ldr	x0, [x2, x0]
   3dac4:	cmp	x0, x1
   3dac8:	b.ge	3dbcc <mpfr_tmp_free@@Base+0xb64>  // b.tcont
   3dacc:	ldr	w2, [x29, #196]
   3dad0:	mov	w1, w26
   3dad4:	mov	x0, x20
   3dad8:	bl	cb30 <mpfr_check_range@plt>
   3dadc:	mov	w26, w0
   3dae0:	mov	sp, x29
   3dae4:	mov	w0, w26
   3dae8:	ldp	x19, x20, [sp, #16]
   3daec:	ldp	x21, x22, [sp, #32]
   3daf0:	ldp	x23, x24, [sp, #48]
   3daf4:	ldp	x25, x26, [sp, #64]
   3daf8:	ldp	x27, x28, [sp, #80]
   3dafc:	ldp	x29, x30, [sp], #240
   3db00:	ret
   3db04:	subs	x0, x0, #0x40
   3db08:	b.eq	3dc88 <mpfr_tmp_free@@Base+0xc20>  // b.none
   3db0c:	cbnz	x1, 3d8e0 <mpfr_tmp_free@@Base+0x878>
   3db10:	cbz	x2, 3dc88 <mpfr_tmp_free@@Base+0xc20>
   3db14:	ldr	w0, [x29, #196]
   3db18:	cmp	w0, #0x3
   3db1c:	b.eq	3e30c <mpfr_tmp_free@@Base+0x12a4>  // b.none
   3db20:	b.gt	3de2c <mpfr_tmp_free@@Base+0xdc4>
   3db24:	cmp	w0, #0x1
   3db28:	b.eq	3e0b4 <mpfr_tmp_free@@Base+0x104c>  // b.none
   3db2c:	cmp	w0, #0x2
   3db30:	mov	w26, #0x1                   	// #1
   3db34:	b.ne	3e414 <mpfr_tmp_free@@Base+0x13ac>  // b.any
   3db38:	mov	w23, #0x1                   	// #1
   3db3c:	mov	w26, w23
   3db40:	b	3d988 <mpfr_tmp_free@@Base+0x920>
   3db44:	ldr	x23, [x8, x0, lsl #3]
   3db48:	sub	w1, w1, #0x1
   3db4c:	mov	w26, #0x0                   	// #0
   3db50:	lsr	x1, x23, x1
   3db54:	and	w23, w1, #0x1
   3db58:	b	3d988 <mpfr_tmp_free@@Base+0x920>
   3db5c:	cbnz	x18, 3e434 <mpfr_tmp_free@@Base+0x13cc>
   3db60:	tst	x6, #0x3e
   3db64:	b.eq	3e2c8 <mpfr_tmp_free@@Base+0x1260>  // b.none
   3db68:	sub	w4, w0, #0x1
   3db6c:	mov	x0, #0xffffffffffffffff    	// #-1
   3db70:	lsl	x0, x0, x4
   3db74:	bics	xzr, x2, x0
   3db78:	cset	w0, ne  // ne = any
   3db7c:	cbnz	w0, 3db14 <mpfr_tmp_free@@Base+0xaac>
   3db80:	cmp	x1, #0x0
   3db84:	b.le	3e498 <mpfr_tmp_free@@Base+0x1430>
   3db88:	sub	x1, x1, #0x1
   3db8c:	ldr	x2, [x8, x1, lsl #3]
   3db90:	cmp	x2, #0x0
   3db94:	cset	w0, eq  // eq = none
   3db98:	cmp	x1, #0x0
   3db9c:	ccmp	w0, #0x0, #0x4, gt
   3dba0:	b.ne	3db88 <mpfr_tmp_free@@Base+0xb20>  // b.any
   3dba4:	cmp	x2, #0x0
   3dba8:	cset	w26, ne  // ne = any
   3dbac:	tst	w0, w18
   3dbb0:	b.eq	3d8fc <mpfr_tmp_free@@Base+0x894>  // b.none
   3dbb4:	mov	x18, #0x0                   	// #0
   3dbb8:	mov	w26, #0x1                   	// #1
   3dbbc:	eor	w0, w18, #0x1
   3dbc0:	mov	w23, w18
   3dbc4:	and	w0, w0, w26
   3dbc8:	b	3de4c <mpfr_tmp_free@@Base+0xde4>
   3dbcc:	cbz	w26, 3dae0 <mpfr_tmp_free@@Base+0xa78>
   3dbd0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3dbd4:	ldr	x1, [x0, #2576]
   3dbd8:	add	x0, x0, #0xa10
   3dbdc:	blr	x1
   3dbe0:	add	x0, x2, x0
   3dbe4:	ldr	w1, [x0]
   3dbe8:	orr	w1, w1, #0x8
   3dbec:	str	w1, [x0]
   3dbf0:	b	3dae0 <mpfr_tmp_free@@Base+0xa78>
   3dbf4:	and	x0, x1, x0
   3dbf8:	str	x0, [x21]
   3dbfc:	cmp	w23, #0x0
   3dc00:	b.le	3de58 <mpfr_tmp_free@@Base+0xdf0>
   3dc04:	sxtw	x23, w23
   3dc08:	lsl	x27, x23, x27
   3dc0c:	cbz	x27, 3e060 <mpfr_tmp_free@@Base+0xff8>
   3dc10:	adds	x0, x0, x27
   3dc14:	str	x0, [x21]
   3dc18:	b.cc	3da80 <mpfr_tmp_free@@Base+0xa18>  // b.lo, b.ul, b.last
   3dc1c:	add	x19, x21, x19, lsl #3
   3dc20:	mov	x1, x21
   3dc24:	b	3dc38 <mpfr_tmp_free@@Base+0xbd0>
   3dc28:	ldr	x0, [x1, #8]
   3dc2c:	add	x0, x0, #0x1
   3dc30:	str	x0, [x1, #8]!
   3dc34:	cbnz	x0, 3da80 <mpfr_tmp_free@@Base+0xa18>
   3dc38:	cmp	x1, x19
   3dc3c:	b.ne	3dc28 <mpfr_tmp_free@@Base+0xbc0>  // b.any
   3dc40:	ldr	x0, [x21, x3]
   3dc44:	orr	x0, x0, #0x8000000000000000
   3dc48:	str	x0, [x21, x3]
   3dc4c:	ldr	x1, [x29, #232]
   3dc50:	add	x1, x1, #0x1
   3dc54:	b	3da84 <mpfr_tmp_free@@Base+0xa1c>
   3dc58:	str	xzr, [x29, #184]
   3dc5c:	b.ne	3dc6c <mpfr_tmp_free@@Base+0xc04>  // b.any
   3dc60:	ldr	x0, [x8]
   3dc64:	and	x0, x0, #0x1
   3dc68:	str	x0, [x29, #184]
   3dc6c:	ldr	x4, [x29, #200]
   3dc70:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3dc74:	cmp	x4, x0
   3dc78:	cset	w22, ne  // ne = any
   3dc7c:	b.eq	3e4f8 <mpfr_tmp_free@@Base+0x1490>  // b.none
   3dc80:	add	x16, x26, x4
   3dc84:	mov	x18, #0x0                   	// #0
   3dc88:	ldr	x0, [x29, #160]
   3dc8c:	cmp	x3, x16
   3dc90:	lsl	x26, x0, #6
   3dc94:	b.gt	3dfc4 <mpfr_tmp_free@@Base+0xf5c>
   3dc98:	sub	x3, x16, x3
   3dc9c:	add	x2, x3, #0x2
   3dca0:	ands	x7, x2, #0x3f
   3dca4:	asr	x2, x2, #6
   3dca8:	b.eq	3e264 <mpfr_tmp_free@@Base+0x11fc>  // b.none
   3dcac:	ldr	x0, [x29, #144]
   3dcb0:	mov	w3, #0x40                  	// #64
   3dcb4:	sub	w3, w3, w7
   3dcb8:	mov	x1, x8
   3dcbc:	sub	x4, x0, x2
   3dcc0:	add	x2, x2, #0x1
   3dcc4:	sxtw	x7, w3
   3dcc8:	stp	x9, x10, [x29, #96]
   3dccc:	lsl	x6, x4, #3
   3dcd0:	add	x0, x13, x6
   3dcd4:	str	w14, [x29, #112]
   3dcd8:	stp	x15, x18, [x29, #120]
   3dcdc:	stp	x4, x6, [x29, #136]
   3dce0:	str	x13, [x29, #152]
   3dce4:	stp	x7, x8, [x29, #168]
   3dce8:	bl	bcc0 <__gmpn_lshift@plt>
   3dcec:	ldr	w14, [x29, #112]
   3dcf0:	ldp	x9, x10, [x29, #96]
   3dcf4:	ldp	x15, x18, [x29, #120]
   3dcf8:	ldp	x4, x6, [x29, #136]
   3dcfc:	ldp	x7, x8, [x29, #168]
   3dd00:	ldr	x13, [x29, #152]
   3dd04:	ldr	x5, [x29, #224]
   3dd08:	add	x4, x7, x4, lsl #6
   3dd0c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3dd10:	add	x0, x4, x0
   3dd14:	cmp	x0, x5
   3dd18:	b.gt	3e370 <mpfr_tmp_free@@Base+0x1308>
   3dd1c:	sub	x5, x5, x4
   3dd20:	mov	x2, x6
   3dd24:	mov	x0, x13
   3dd28:	mov	w1, #0x0                   	// #0
   3dd2c:	stp	x9, x10, [x29, #120]
   3dd30:	str	x8, [x29, #136]
   3dd34:	str	w14, [x29, #144]
   3dd38:	str	x5, [x29, #152]
   3dd3c:	stp	x15, x18, [x29, #168]
   3dd40:	bl	c110 <memset@plt>
   3dd44:	mov	x13, x0
   3dd48:	ldr	x5, [x29, #152]
   3dd4c:	str	x19, [sp]
   3dd50:	ldr	x6, [x29, #200]
   3dd54:	mov	x0, #0x1                   	// #1
   3dd58:	ldr	x19, [x29, #160]
   3dd5c:	str	w23, [sp, #8]
   3dd60:	stp	x0, xzr, [sp, #16]
   3dd64:	mov	x7, x27
   3dd68:	mov	x4, x25
   3dd6c:	stp	xzr, xzr, [sp, #32]
   3dd70:	mov	x3, x24
   3dd74:	mov	x2, x26
   3dd78:	mov	x0, x13
   3dd7c:	mov	x1, x19
   3dd80:	str	x13, [x29, #160]
   3dd84:	bl	3d0b0 <mpfr_tmp_free@@Base+0x48>
   3dd88:	ldr	w14, [x29, #144]
   3dd8c:	ldp	x9, x10, [x29, #120]
   3dd90:	ldr	x8, [x29, #136]
   3dd94:	ldp	x15, x18, [x29, #168]
   3dd98:	cbz	x0, 3df24 <mpfr_tmp_free@@Base+0xebc>
   3dd9c:	ldr	x13, [x29, #160]
   3dda0:	mov	w0, #0xffffffff            	// #-1
   3dda4:	add	x1, x13, x19, lsl #3
   3dda8:	ldur	x1, [x1, #-8]
   3ddac:	cmn	x1, #0x1
   3ddb0:	cneg	w0, w0, gt
   3ddb4:	ldr	w1, [x29, #196]
   3ddb8:	cmp	w1, #0x3
   3ddbc:	b.eq	3e0cc <mpfr_tmp_free@@Base+0x1064>  // b.none
   3ddc0:	cmp	w1, #0x1
   3ddc4:	cset	w1, eq  // eq = none
   3ddc8:	cmp	w14, #0x0
   3ddcc:	cset	w2, gt
   3ddd0:	cmp	w1, #0x0
   3ddd4:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   3ddd8:	b.eq	3e3cc <mpfr_tmp_free@@Base+0x1364>  // b.none
   3dddc:	cmp	w0, #0x0
   3dde0:	mov	w23, w18
   3dde4:	csetm	w26, ne  // ne = any
   3dde8:	cmp	w22, #0x2
   3ddec:	b.eq	3e0e0 <mpfr_tmp_free@@Base+0x1078>  // b.none
   3ddf0:	ldr	w1, [x29, #196]
   3ddf4:	cmp	w14, #0x0
   3ddf8:	ccmp	w1, #0x1, #0x0, gt
   3ddfc:	b.ne	3df98 <mpfr_tmp_free@@Base+0xf30>  // b.any
   3de00:	cmn	w0, #0x1
   3de04:	b.eq	3e258 <mpfr_tmp_free@@Base+0x11f0>  // b.none
   3de08:	ldr	w1, [x29, #196]
   3de0c:	cmp	w14, #0x0
   3de10:	ccmp	w1, #0x4, #0x0, gt
   3de14:	b.ne	3de24 <mpfr_tmp_free@@Base+0xdbc>  // b.any
   3de18:	cmp	w0, #0x1
   3de1c:	b.ne	3de24 <mpfr_tmp_free@@Base+0xdbc>  // b.any
   3de20:	add	w23, w23, #0x1
   3de24:	ldr	x3, [x29, #224]
   3de28:	b	3d988 <mpfr_tmp_free@@Base+0x920>
   3de2c:	ldr	w0, [x29, #196]
   3de30:	mov	w26, #0x1                   	// #1
   3de34:	cmp	w0, #0x4
   3de38:	b.ne	3e41c <mpfr_tmp_free@@Base+0x13b4>  // b.any
   3de3c:	eor	w23, w15, #0x1
   3de40:	and	w23, w23, w26
   3de44:	eor	w0, w23, #0x1
   3de48:	and	w0, w0, w26
   3de4c:	cmp	w0, #0x0
   3de50:	csinv	w26, w26, wzr, eq  // eq = none
   3de54:	b	3d988 <mpfr_tmp_free@@Base+0x920>
   3de58:	cmn	w23, #0x1
   3de5c:	b.ne	3da80 <mpfr_tmp_free@@Base+0xa18>  // b.any
   3de60:	subs	x1, x0, x4
   3de64:	str	x1, [x21]
   3de68:	b.cs	3de90 <mpfr_tmp_free@@Base+0xe28>  // b.hs, b.nlast
   3de6c:	add	x19, x21, x19, lsl #3
   3de70:	mov	x0, x21
   3de74:	b	3de88 <mpfr_tmp_free@@Base+0xe20>
   3de78:	ldr	x1, [x0, #8]
   3de7c:	sub	x2, x1, #0x1
   3de80:	str	x2, [x0, #8]!
   3de84:	cbnz	x1, 3de90 <mpfr_tmp_free@@Base+0xe28>
   3de88:	cmp	x19, x0
   3de8c:	b.ne	3de78 <mpfr_tmp_free@@Base+0xe10>  // b.any
   3de90:	ldr	x0, [x21, x3]
   3de94:	tbnz	x0, #63, 3da80 <mpfr_tmp_free@@Base+0xa18>
   3de98:	orr	x0, x0, #0x8000000000000000
   3de9c:	str	x0, [x21, x3]
   3dea0:	ldr	x1, [x29, #232]
   3dea4:	sub	x1, x1, #0x1
   3dea8:	b	3da84 <mpfr_tmp_free@@Base+0xa1c>
   3deac:	cmp	x25, #0x1
   3deb0:	b.eq	3dc40 <mpfr_tmp_free@@Base+0xbd8>  // b.none
   3deb4:	ldr	x0, [x21, #8]
   3deb8:	sub	x2, x19, #0x1
   3debc:	add	x1, x21, #0x8
   3dec0:	cbnz	x0, 3ded8 <mpfr_tmp_free@@Base+0xe70>
   3dec4:	nop
   3dec8:	cbz	x2, 3dc40 <mpfr_tmp_free@@Base+0xbd8>
   3decc:	ldr	x0, [x1, #8]!
   3ded0:	sub	x2, x2, #0x1
   3ded4:	cbz	x0, 3dec8 <mpfr_tmp_free@@Base+0xe60>
   3ded8:	neg	x0, x0
   3dedc:	str	x0, [x1]
   3dee0:	cbz	x2, 3da80 <mpfr_tmp_free@@Base+0xa18>
   3dee4:	add	x1, x1, #0x8
   3dee8:	mov	x0, x1
   3deec:	bl	be10 <__gmpn_com@plt>
   3def0:	ldr	x1, [x29, #232]
   3def4:	b	3da84 <mpfr_tmp_free@@Base+0xa1c>
   3def8:	cmp	x6, x2
   3defc:	mov	w26, #0x1                   	// #1
   3df00:	b.ne	3d8fc <mpfr_tmp_free@@Base+0x894>  // b.any
   3df04:	cbnz	x18, 3e338 <mpfr_tmp_free@@Base+0x12d0>
   3df08:	ldr	w2, [x29, #196]
   3df0c:	cbnz	w2, 3d8fc <mpfr_tmp_free@@Base+0x894>
   3df10:	cbz	x0, 3e4f0 <mpfr_tmp_free@@Base+0x1488>
   3df14:	cbz	x1, 3dbbc <mpfr_tmp_free@@Base+0xb54>
   3df18:	mov	w22, #0x2                   	// #2
   3df1c:	mov	x2, #0xffffffffffffffff    	// #-1
   3df20:	b	3d8e0 <mpfr_tmp_free@@Base+0x878>
   3df24:	cmp	w22, #0x1
   3df28:	b.eq	3e318 <mpfr_tmp_free@@Base+0x12b0>  // b.none
   3df2c:	ldr	x0, [x29, #184]
   3df30:	lsr	w3, w14, #31
   3df34:	ldr	w1, [x29, #196]
   3df38:	cmp	x0, #0x0
   3df3c:	mov	w0, #0xffffffff            	// #-1
   3df40:	cneg	w0, w0, ne  // ne = any
   3df44:	cmp	w14, #0x0
   3df48:	cset	w2, gt
   3df4c:	cmp	w1, #0x4
   3df50:	cset	w4, eq  // eq = none
   3df54:	mov	w1, #0x0                   	// #0
   3df58:	ldr	w5, [x29, #196]
   3df5c:	cmp	w5, #0x2
   3df60:	b.eq	3e360 <mpfr_tmp_free@@Base+0x12f8>  // b.none
   3df64:	cmp	w3, #0x0
   3df68:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   3df6c:	b.ne	3e360 <mpfr_tmp_free@@Base+0x12f8>  // b.any
   3df70:	cmp	w2, #0x0
   3df74:	ccmp	w4, #0x0, #0x4, ne  // ne = any
   3df78:	b.ne	3e360 <mpfr_tmp_free@@Base+0x12f8>  // b.any
   3df7c:	cmp	w22, #0x1
   3df80:	mov	w23, w18
   3df84:	mov	w26, w0
   3df88:	b.eq	3e4e8 <mpfr_tmp_free@@Base+0x1480>  // b.none
   3df8c:	nop
   3df90:	cmp	w22, #0x2
   3df94:	b.eq	3e0e0 <mpfr_tmp_free@@Base+0x1078>  // b.none
   3df98:	ldr	w1, [x29, #196]
   3df9c:	cmp	w14, #0x0
   3dfa0:	ccmp	w1, #0x4, #0x0, lt  // lt = tstop
   3dfa4:	b.eq	3de00 <mpfr_tmp_free@@Base+0xd98>  // b.none
   3dfa8:	ldr	w1, [x29, #196]
   3dfac:	cmp	w1, #0x2
   3dfb0:	b.eq	3de18 <mpfr_tmp_free@@Base+0xdb0>  // b.none
   3dfb4:	cmp	w14, #0x0
   3dfb8:	ccmp	w1, #0x1, #0x0, lt  // lt = tstop
   3dfbc:	b.eq	3de18 <mpfr_tmp_free@@Base+0xdb0>  // b.none
   3dfc0:	b	3de08 <mpfr_tmp_free@@Base+0xda0>
   3dfc4:	ldr	x0, [x29, #152]
   3dfc8:	sub	x5, x26, x0
   3dfcc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3dfd0:	add	x0, x5, x0
   3dfd4:	cmp	x0, x4
   3dfd8:	b.gt	3e450 <mpfr_tmp_free@@Base+0x13e8>
   3dfdc:	ldr	x0, [x29, #160]
   3dfe0:	sub	x5, x4, x5
   3dfe4:	lsl	x6, x0, #3
   3dfe8:	b	3dd20 <mpfr_tmp_free@@Base+0xcb8>
   3dfec:	mov	w3, w22
   3dff0:	add	x1, x8, x24, lsl #3
   3dff4:	mov	x2, x25
   3dff8:	mov	x0, x21
   3dffc:	str	x15, [x29, #184]
   3e000:	bl	bcc0 <__gmpn_lshift@plt>
   3e004:	ldr	x15, [x29, #184]
   3e008:	b	3da20 <mpfr_tmp_free@@Base+0x9b8>
   3e00c:	sub	x4, x1, x4
   3e010:	str	x4, [x21]
   3e014:	add	x0, x21, #0x8
   3e018:	cbz	x1, 3e040 <mpfr_tmp_free@@Base+0xfd8>
   3e01c:	cmp	x2, x25
   3e020:	b.ge	3de90 <mpfr_tmp_free@@Base+0xe28>  // b.tcont
   3e024:	add	x1, x21, x2, lsl #3
   3e028:	sub	x2, x25, x2
   3e02c:	mov	x0, x1
   3e030:	bl	be10 <__gmpn_com@plt>
   3e034:	ldr	x1, [x29, #232]
   3e038:	b	3da84 <mpfr_tmp_free@@Base+0xa1c>
   3e03c:	add	x0, x0, #0x8
   3e040:	ldr	x1, [x0]
   3e044:	add	x2, x2, #0x1
   3e048:	cmn	x1, #0x1
   3e04c:	b.eq	3e03c <mpfr_tmp_free@@Base+0xfd4>  // b.none
   3e050:	mov	x4, #0xfffffffffffffffe    	// #-2
   3e054:	sub	x1, x4, x1
   3e058:	str	x1, [x0]
   3e05c:	b	3e01c <mpfr_tmp_free@@Base+0xfb4>
   3e060:	ldr	x0, [x21, #8]
   3e064:	add	x0, x0, #0x1
   3e068:	str	x0, [x21, #8]
   3e06c:	cbnz	x0, 3da80 <mpfr_tmp_free@@Base+0xa18>
   3e070:	add	x1, x21, #0x8
   3e074:	b	3e08c <mpfr_tmp_free@@Base+0x1024>
   3e078:	ldr	x0, [x1, x2, lsl #3]
   3e07c:	add	x0, x0, #0x1
   3e080:	str	x0, [x1, x2, lsl #3]
   3e084:	add	x2, x2, #0x1
   3e088:	cbnz	x0, 3da80 <mpfr_tmp_free@@Base+0xa18>
   3e08c:	cmp	x19, x2
   3e090:	b.gt	3e078 <mpfr_tmp_free@@Base+0x1010>
   3e094:	b	3dc40 <mpfr_tmp_free@@Base+0xbd8>
   3e098:	mov	w1, #0x40                  	// #64
   3e09c:	sub	w0, w1, w0
   3e0a0:	lsr	x6, x6, x0
   3e0a4:	lsr	x2, x2, x0
   3e0a8:	cmp	x6, x2
   3e0ac:	b.ne	3db14 <mpfr_tmp_free@@Base+0xaac>  // b.any
   3e0b0:	b	3dc88 <mpfr_tmp_free@@Base+0xc20>
   3e0b4:	ldr	w23, [x29, #196]
   3e0b8:	mov	w26, w23
   3e0bc:	and	w23, w23, w15
   3e0c0:	eor	w0, w23, #0x1
   3e0c4:	and	w0, w0, w26
   3e0c8:	b	3de4c <mpfr_tmp_free@@Base+0xde4>
   3e0cc:	cmp	w0, #0x0
   3e0d0:	mov	w23, w18
   3e0d4:	csetm	w26, ne  // ne = any
   3e0d8:	cmp	w22, #0x2
   3e0dc:	b.ne	3de00 <mpfr_tmp_free@@Base+0xd98>  // b.any
   3e0e0:	cmp	x18, #0x0
   3e0e4:	mov	w1, #0xffffffff            	// #-1
   3e0e8:	cneg	w1, w1, eq  // eq = none
   3e0ec:	cmp	w0, w1
   3e0f0:	b.eq	3e3ec <mpfr_tmp_free@@Base+0x1384>  // b.none
   3e0f4:	ldr	w1, [x29, #196]
   3e0f8:	cmp	w1, #0x3
   3e0fc:	b.eq	3de00 <mpfr_tmp_free@@Base+0xd98>  // b.none
   3e100:	b	3ddf0 <mpfr_tmp_free@@Base+0xd88>
   3e104:	add	x0, x29, #0xd8
   3e108:	stp	x3, x4, [x29, #168]
   3e10c:	str	x5, [x29, #184]
   3e110:	bl	bdc0 <mpfr_tmp_allocate@plt>
   3e114:	mov	x27, x0
   3e118:	ldp	x3, x4, [x29, #168]
   3e11c:	ldr	x5, [x29, #184]
   3e120:	b	3d778 <mpfr_tmp_free@@Base+0x710>
   3e124:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3e128:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3e12c:	add	x2, x2, #0xa18
   3e130:	add	x0, x0, #0x9e0
   3e134:	mov	w1, #0x278                 	// #632
   3e138:	str	x8, [x29, #136]
   3e13c:	stp	x4, x5, [x29, #176]
   3e140:	bl	cb40 <mpfr_assert_fail@plt>
   3e144:	ldr	x8, [x29, #136]
   3e148:	ldp	x3, x4, [x29, #168]
   3e14c:	ldr	x5, [x29, #184]
   3e150:	ldr	x6, [x29, #200]
   3e154:	b	3d7b8 <mpfr_tmp_free@@Base+0x750>
   3e158:	ldr	w1, [x29, #196]
   3e15c:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   3e160:	ldr	x0, [x29, #216]
   3e164:	cmp	w1, #0x3
   3e168:	mov	w1, #0xffffffff            	// #-1
   3e16c:	cneg	w1, w1, ne  // ne = any
   3e170:	str	w1, [x20, #8]
   3e174:	str	x2, [x20, #16]
   3e178:	cbnz	x0, 3e3b8 <mpfr_tmp_free@@Base+0x1350>
   3e17c:	mov	w26, #0x0                   	// #0
   3e180:	b	3dae0 <mpfr_tmp_free@@Base+0xa78>
   3e184:	ldr	x0, [x29, #232]
   3e188:	sub	x3, x0, x3
   3e18c:	add	x24, x3, #0x7e
   3e190:	adds	x0, x3, #0x3f
   3e194:	csel	x24, x24, x0, mi  // mi = first
   3e198:	asr	x24, x24, #6
   3e19c:	cbz	x10, 3e4a4 <mpfr_tmp_free@@Base+0x143c>
   3e1a0:	sub	x0, x25, x24
   3e1a4:	mov	w3, w22
   3e1a8:	mov	x1, x8
   3e1ac:	mov	x2, x24
   3e1b0:	add	x0, x21, x0, lsl #3
   3e1b4:	str	x15, [x29, #184]
   3e1b8:	bl	bcc0 <__gmpn_lshift@plt>
   3e1bc:	ldr	x15, [x29, #184]
   3e1c0:	cmp	x25, x24
   3e1c4:	b.le	3da20 <mpfr_tmp_free@@Base+0x9b8>
   3e1c8:	sub	x2, x25, x24
   3e1cc:	mov	x0, x21
   3e1d0:	mov	w1, #0x0                   	// #0
   3e1d4:	str	x15, [x29, #184]
   3e1d8:	lsl	x2, x2, #3
   3e1dc:	bl	c110 <memset@plt>
   3e1e0:	ldr	x15, [x29, #184]
   3e1e4:	b	3da20 <mpfr_tmp_free@@Base+0x9b8>
   3e1e8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3e1ec:	str	x0, [x21]
   3e1f0:	sub	w0, w28, w23
   3e1f4:	sxtw	x1, w23
   3e1f8:	ldr	x2, [x29, #232]
   3e1fc:	cmp	x15, #0x0
   3e200:	sxtw	x0, w0
   3e204:	csel	x1, x1, x0, eq  // eq = none
   3e208:	add	x1, x1, x2
   3e20c:	b	3da84 <mpfr_tmp_free@@Base+0xa1c>
   3e210:	bl	c410 <mpfr_tmp_free@plt>
   3e214:	ldr	x1, [x20, #16]
   3e218:	b	3da90 <mpfr_tmp_free@@Base+0xa28>
   3e21c:	ldr	w6, [x29, #196]
   3e220:	cbnz	w6, 3d8f8 <mpfr_tmp_free@@Base+0x890>
   3e224:	cbz	x0, 3e4f0 <mpfr_tmp_free@@Base+0x1488>
   3e228:	mov	w22, #0x2                   	// #2
   3e22c:	cbnz	x1, 3d8e0 <mpfr_tmp_free@@Base+0x878>
   3e230:	b	3dc88 <mpfr_tmp_free@@Base+0xc20>
   3e234:	add	x1, x8, x24, lsl #3
   3e238:	cmp	x1, x21
   3e23c:	b.eq	3da20 <mpfr_tmp_free@@Base+0x9b8>  // b.none
   3e240:	lsl	x2, x25, #3
   3e244:	mov	x0, x21
   3e248:	str	x15, [x29, #184]
   3e24c:	bl	ba10 <memcpy@plt>
   3e250:	ldr	x15, [x29, #184]
   3e254:	b	3da20 <mpfr_tmp_free@@Base+0x9b8>
   3e258:	sub	w23, w23, #0x1
   3e25c:	ldr	x3, [x29, #224]
   3e260:	b	3d988 <mpfr_tmp_free@@Base+0x920>
   3e264:	ldr	x0, [x29, #160]
   3e268:	sub	x4, x0, x2
   3e26c:	cmp	x4, #0x0
   3e270:	lsl	x6, x4, #3
   3e274:	b.le	3dd08 <mpfr_tmp_free@@Base+0xca0>
   3e278:	add	x0, x13, x6
   3e27c:	cmp	x0, x8
   3e280:	b.eq	3dd08 <mpfr_tmp_free@@Base+0xca0>  // b.none
   3e284:	mov	x1, x8
   3e288:	lsl	x2, x2, #3
   3e28c:	stp	x6, x13, [x29, #96]
   3e290:	stp	x9, x10, [x29, #112]
   3e294:	str	w14, [x29, #128]
   3e298:	stp	x4, x7, [x29, #136]
   3e29c:	str	x15, [x29, #152]
   3e2a0:	stp	x18, x8, [x29, #168]
   3e2a4:	bl	ba10 <memcpy@plt>
   3e2a8:	ldr	w14, [x29, #128]
   3e2ac:	ldp	x6, x13, [x29, #96]
   3e2b0:	ldp	x9, x10, [x29, #112]
   3e2b4:	ldp	x4, x7, [x29, #136]
   3e2b8:	ldr	x15, [x29, #152]
   3e2bc:	ldp	x18, x8, [x29, #168]
   3e2c0:	ldr	x5, [x29, #224]
   3e2c4:	b	3dd08 <mpfr_tmp_free@@Base+0xca0>
   3e2c8:	cbnz	x0, 3db80 <mpfr_tmp_free@@Base+0xb18>
   3e2cc:	add	x17, x8, x17
   3e2d0:	sub	x1, x1, #0x1
   3e2d4:	ldur	x0, [x17, #-8]
   3e2d8:	tst	x0, #0x7fffffffffffffff
   3e2dc:	cset	w0, ne  // ne = any
   3e2e0:	cbnz	w0, 3db14 <mpfr_tmp_free@@Base+0xaac>
   3e2e4:	b	3db80 <mpfr_tmp_free@@Base+0xb18>
   3e2e8:	cmp	x6, #0x3f
   3e2ec:	b.le	3e34c <mpfr_tmp_free@@Base+0x12e4>
   3e2f0:	add	x17, x8, x17
   3e2f4:	mov	x0, #0x41                  	// #65
   3e2f8:	sub	x1, x1, #0x1
   3e2fc:	mov	w22, w0
   3e300:	mov	x6, #0xffffffffffffffff    	// #-1
   3e304:	ldur	x2, [x17, #-8]
   3e308:	b	3d8a8 <mpfr_tmp_free@@Base+0x840>
   3e30c:	mov	w23, #0x0                   	// #0
   3e310:	mov	w26, #0xffffffff            	// #-1
   3e314:	b	3d988 <mpfr_tmp_free@@Base+0x920>
   3e318:	mov	w0, #0x0                   	// #0
   3e31c:	b	3ddb4 <mpfr_tmp_free@@Base+0xd4c>
   3e320:	add	x1, x21, #0x8
   3e324:	mov	x2, x19
   3e328:	mov	x0, x1
   3e32c:	bl	be10 <__gmpn_com@plt>
   3e330:	ldr	x1, [x29, #232]
   3e334:	b	3da84 <mpfr_tmp_free@@Base+0xa1c>
   3e338:	cbz	x0, 3e4e0 <mpfr_tmp_free@@Base+0x1478>
   3e33c:	cbz	x1, 3db14 <mpfr_tmp_free@@Base+0xaac>
   3e340:	mov	w22, w26
   3e344:	mov	x2, #0xffffffffffffffff    	// #-1
   3e348:	b	3d8e0 <mpfr_tmp_free@@Base+0x878>
   3e34c:	mov	x0, #0x41                  	// #65
   3e350:	mov	x6, #0xffffffffffffffff    	// #-1
   3e354:	mov	w22, w0
   3e358:	mov	x2, #0x0                   	// #0
   3e35c:	b	3d8a8 <mpfr_tmp_free@@Base+0x840>
   3e360:	cmp	w0, #0x0
   3e364:	mov	w23, w18
   3e368:	cset	w26, ne  // ne = any
   3e36c:	b	3df90 <mpfr_tmp_free@@Base+0xf28>
   3e370:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3e374:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3e378:	add	x2, x2, #0x9b0
   3e37c:	add	x0, x0, #0x9e0
   3e380:	mov	w1, #0x3de                 	// #990
   3e384:	stp	x6, x13, [x29, #104]
   3e388:	stp	x4, x9, [x29, #120]
   3e38c:	stp	x10, x8, [x29, #136]
   3e390:	str	w14, [x29, #152]
   3e394:	stp	x15, x18, [x29, #168]
   3e398:	bl	cb40 <mpfr_assert_fail@plt>
   3e39c:	ldr	w14, [x29, #152]
   3e3a0:	ldp	x6, x13, [x29, #104]
   3e3a4:	ldp	x4, x9, [x29, #120]
   3e3a8:	ldp	x10, x8, [x29, #136]
   3e3ac:	ldp	x15, x18, [x29, #168]
   3e3b0:	ldr	x5, [x29, #224]
   3e3b4:	b	3dd1c <mpfr_tmp_free@@Base+0xcb4>
   3e3b8:	mov	w26, #0x0                   	// #0
   3e3bc:	bl	c410 <mpfr_tmp_free@plt>
   3e3c0:	b	3dae0 <mpfr_tmp_free@@Base+0xa78>
   3e3c4:	mov	w23, w26
   3e3c8:	b	3d988 <mpfr_tmp_free@@Base+0x920>
   3e3cc:	ldr	w3, [x29, #196]
   3e3d0:	cmp	w3, #0x4
   3e3d4:	lsr	w3, w14, #31
   3e3d8:	cset	w4, eq  // eq = none
   3e3dc:	cmp	w4, #0x0
   3e3e0:	ccmp	w3, #0x0, #0x4, ne  // ne = any
   3e3e4:	b.ne	3dddc <mpfr_tmp_free@@Base+0xd74>  // b.any
   3e3e8:	b	3df58 <mpfr_tmp_free@@Base+0xef0>
   3e3ec:	mov	w0, #0x1                   	// #1
   3e3f0:	sub	w23, w0, w23
   3e3f4:	ldr	x3, [x29, #224]
   3e3f8:	b	3d988 <mpfr_tmp_free@@Base+0x920>
   3e3fc:	mov	w23, #0x0                   	// #0
   3e400:	mov	w26, #0x0                   	// #0
   3e404:	b	3d988 <mpfr_tmp_free@@Base+0x920>
   3e408:	cmp	w0, #0x1
   3e40c:	and	w23, w26, #0x1
   3e410:	b.eq	3e0bc <mpfr_tmp_free@@Base+0x1054>  // b.none
   3e414:	ldr	w0, [x29, #196]
   3e418:	cbz	w0, 3dbbc <mpfr_tmp_free@@Base+0xb54>
   3e41c:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3e420:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3e424:	add	x2, x2, #0xa48
   3e428:	add	x0, x0, #0x9e0
   3e42c:	mov	w1, #0x390                 	// #912
   3e430:	bl	cb40 <mpfr_assert_fail@plt>
   3e434:	ldr	w4, [x29, #196]
   3e438:	cmp	w4, #0x0
   3e43c:	ldr	w4, [x29, #184]
   3e440:	eor	w4, w4, #0x1
   3e444:	csel	w4, w4, wzr, eq  // eq = none
   3e448:	cbnz	w4, 3db60 <mpfr_tmp_free@@Base+0xaf8>
   3e44c:	b	3db14 <mpfr_tmp_free@@Base+0xaac>
   3e450:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3e454:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3e458:	add	x2, x2, #0xa18
   3e45c:	add	x0, x0, #0x9e0
   3e460:	mov	w1, #0x3ec                 	// #1004
   3e464:	stp	x13, x5, [x29, #112]
   3e468:	stp	x9, x10, [x29, #128]
   3e46c:	str	x8, [x29, #144]
   3e470:	str	w14, [x29, #152]
   3e474:	stp	x15, x18, [x29, #168]
   3e478:	bl	cb40 <mpfr_assert_fail@plt>
   3e47c:	ldr	w14, [x29, #152]
   3e480:	ldp	x13, x5, [x29, #112]
   3e484:	ldp	x9, x10, [x29, #128]
   3e488:	ldr	x8, [x29, #144]
   3e48c:	ldp	x15, x18, [x29, #168]
   3e490:	ldr	x4, [x29, #200]
   3e494:	b	3dfdc <mpfr_tmp_free@@Base+0xf74>
   3e498:	mov	w26, #0x0                   	// #0
   3e49c:	mov	w0, #0x1                   	// #1
   3e4a0:	b	3dbac <mpfr_tmp_free@@Base+0xb44>
   3e4a4:	cmp	x3, #0x0
   3e4a8:	b.le	3e1c0 <mpfr_tmp_free@@Base+0x1158>
   3e4ac:	sub	x0, x25, x24
   3e4b0:	add	x0, x21, x0, lsl #3
   3e4b4:	cmp	x0, x8
   3e4b8:	b.eq	3e1c0 <mpfr_tmp_free@@Base+0x1158>  // b.none
   3e4bc:	mov	x1, x8
   3e4c0:	lsl	x2, x24, #3
   3e4c4:	str	x15, [x29, #184]
   3e4c8:	bl	ba10 <memcpy@plt>
   3e4cc:	ldr	x15, [x29, #184]
   3e4d0:	b	3e1c0 <mpfr_tmp_free@@Base+0x1158>
   3e4d4:	and	w0, w26, #0x1
   3e4d8:	mov	w23, #0x0                   	// #0
   3e4dc:	b	3de4c <mpfr_tmp_free@@Base+0xde4>
   3e4e0:	mov	w22, #0x1                   	// #1
   3e4e4:	b	3dc88 <mpfr_tmp_free@@Base+0xc20>
   3e4e8:	neg	w26, w0
   3e4ec:	b	3df98 <mpfr_tmp_free@@Base+0xf30>
   3e4f0:	mov	w22, #0x2                   	// #2
   3e4f4:	b	3dc88 <mpfr_tmp_free@@Base+0xc20>
   3e4f8:	mov	w26, w22
   3e4fc:	mov	x18, #0x0                   	// #0
   3e500:	b	3d8fc <mpfr_tmp_free@@Base+0x894>
   3e504:	nop

000000000003e508 <mpfr_sum@@Base>:
   3e508:	cmp	x2, #0x2
   3e50c:	mov	x12, x0
   3e510:	mov	w10, w3
   3e514:	b.ls	3e618 <mpfr_sum@@Base+0x110>  // b.plast
   3e518:	stp	x29, x30, [sp, #-16]!
   3e51c:	mov	x11, #0x2                   	// #2
   3e520:	mov	w13, #0x0                   	// #0
   3e524:	mov	x29, sp
   3e528:	mov	w3, #0x0                   	// #0
   3e52c:	mov	x5, #0x0                   	// #0
   3e530:	mov	x7, #0x0                   	// #0
   3e534:	mov	x4, #0x8000000000000000    	// #-9223372036854775808
   3e538:	mov	x9, #0x8000000000000003    	// #-9223372036854775805
   3e53c:	movk	x11, #0x8000, lsl #48
   3e540:	mov	w14, #0xffffffff            	// #-1
   3e544:	b	3e564 <mpfr_sum@@Base+0x5c>
   3e548:	cmp	x4, x6
   3e54c:	add	x5, x5, #0x1
   3e550:	csel	x4, x4, x6, ge  // ge = tcont
   3e554:	add	x6, x7, #0x1
   3e558:	cmp	x2, x6
   3e55c:	b.eq	3e5a4 <mpfr_sum@@Base+0x9c>  // b.none
   3e560:	mov	x7, x6
   3e564:	ldr	x8, [x1, x7, lsl #3]
   3e568:	ldr	x6, [x8, #16]
   3e56c:	cmp	x6, x9
   3e570:	b.gt	3e548 <mpfr_sum@@Base+0x40>
   3e574:	cmp	x6, x11
   3e578:	b.eq	3e5dc <mpfr_sum@@Base+0xd4>  // b.none
   3e57c:	cmp	x6, x9
   3e580:	b.eq	3e5c4 <mpfr_sum@@Base+0xbc>  // b.none
   3e584:	cbnz	x5, 3e554 <mpfr_sum@@Base+0x4c>
   3e588:	ldr	w0, [x8, #8]
   3e58c:	cbz	w13, 3e654 <mpfr_sum@@Base+0x14c>
   3e590:	cmp	w0, w13
   3e594:	b.eq	3e554 <mpfr_sum@@Base+0x4c>  // b.none
   3e598:	cmp	w10, #0x3
   3e59c:	cneg	w13, w14, ne  // ne = any
   3e5a0:	b	3e554 <mpfr_sum@@Base+0x4c>
   3e5a4:	cbnz	w3, 3e634 <mpfr_sum@@Base+0x12c>
   3e5a8:	cbz	x5, 3e644 <mpfr_sum@@Base+0x13c>
   3e5ac:	cmp	x5, #0x2
   3e5b0:	b.ls	3e65c <mpfr_sum@@Base+0x154>  // b.plast
   3e5b4:	ldp	x29, x30, [sp], #16
   3e5b8:	mov	w3, w10
   3e5bc:	mov	x0, x12
   3e5c0:	b	3d6b0 <mpfr_tmp_free@@Base+0x648>
   3e5c4:	ldr	w0, [x8, #8]
   3e5c8:	cbnz	w3, 3e5d4 <mpfr_sum@@Base+0xcc>
   3e5cc:	mov	w3, w0
   3e5d0:	b	3e554 <mpfr_sum@@Base+0x4c>
   3e5d4:	cmp	w0, w3
   3e5d8:	b.eq	3e554 <mpfr_sum@@Base+0x4c>  // b.none
   3e5dc:	mrs	x1, tpidr_el0
   3e5e0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3e5e4:	ldr	x2, [x0, #2576]
   3e5e8:	add	x0, x0, #0xa10
   3e5ec:	blr	x2
   3e5f0:	add	x0, x1, x0
   3e5f4:	mov	x1, #0x2                   	// #2
   3e5f8:	movk	x1, #0x8000, lsl #48
   3e5fc:	str	x1, [x12, #16]
   3e600:	ldr	w1, [x0]
   3e604:	orr	w1, w1, #0x4
   3e608:	str	w1, [x0]
   3e60c:	mov	w0, #0x0                   	// #0
   3e610:	ldp	x29, x30, [sp], #16
   3e614:	ret
   3e618:	cbz	x2, 3e6c4 <mpfr_sum@@Base+0x1bc>
   3e61c:	cmp	x2, #0x1
   3e620:	ldr	x4, [x1]
   3e624:	b.eq	3e6b4 <mpfr_sum@@Base+0x1ac>  // b.none
   3e628:	ldr	x2, [x1, #8]
   3e62c:	mov	x1, x4
   3e630:	b	c1a0 <mpfr_add@plt>
   3e634:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3e638:	str	w3, [x12, #8]
   3e63c:	str	x0, [x12, #16]
   3e640:	b	3e60c <mpfr_sum@@Base+0x104>
   3e644:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3e648:	str	w13, [x12, #8]
   3e64c:	str	x0, [x12, #16]
   3e650:	b	3e60c <mpfr_sum@@Base+0x104>
   3e654:	mov	w13, w0
   3e658:	b	3e554 <mpfr_sum@@Base+0x4c>
   3e65c:	mov	x3, #0xffffffffffffffff    	// #-1
   3e660:	mov	x4, #0x0                   	// #0
   3e664:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3e668:	b	3e684 <mpfr_sum@@Base+0x17c>
   3e66c:	cmn	x3, #0x1
   3e670:	b.ne	3e6dc <mpfr_sum@@Base+0x1d4>  // b.any
   3e674:	mov	x3, x4
   3e678:	cmp	x7, x4
   3e67c:	add	x4, x4, #0x1
   3e680:	b.eq	3e6f4 <mpfr_sum@@Base+0x1ec>  // b.none
   3e684:	ldr	x6, [x1, x4, lsl #3]
   3e688:	ldr	x2, [x6, #16]
   3e68c:	cmp	x2, x0
   3e690:	b.le	3e678 <mpfr_sum@@Base+0x170>
   3e694:	cmp	x5, #0x1
   3e698:	b.ne	3e66c <mpfr_sum@@Base+0x164>  // b.any
   3e69c:	ldp	x29, x30, [sp], #16
   3e6a0:	mov	w2, w10
   3e6a4:	ldr	w3, [x6, #8]
   3e6a8:	mov	x0, x12
   3e6ac:	mov	x1, x6
   3e6b0:	b	c6a0 <mpfr_set4@plt>
   3e6b4:	mov	w2, w3
   3e6b8:	ldr	w3, [x4, #8]
   3e6bc:	mov	x1, x4
   3e6c0:	b	c6a0 <mpfr_set4@plt>
   3e6c4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3e6c8:	mov	w1, #0x1                   	// #1
   3e6cc:	str	w1, [x12, #8]
   3e6d0:	str	x0, [x12, #16]
   3e6d4:	mov	w0, #0x0                   	// #0
   3e6d8:	ret
   3e6dc:	ldp	x29, x30, [sp], #16
   3e6e0:	mov	x2, x6
   3e6e4:	ldr	x1, [x1, x3, lsl #3]
   3e6e8:	mov	x0, x12
   3e6ec:	mov	w3, w10
   3e6f0:	b	c1a0 <mpfr_add@plt>
   3e6f4:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   3e6f8:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3e6fc:	add	x2, x2, #0x328
   3e700:	add	x0, x0, #0x9e0
   3e704:	mov	w1, #0x564                 	// #1380
   3e708:	bl	cb40 <mpfr_assert_fail@plt>
   3e70c:	nop
   3e710:	stp	x29, x30, [sp, #-32]!
   3e714:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3e718:	ldr	x1, [x0, #2624]
   3e71c:	add	x0, x0, #0xa40
   3e720:	blr	x1
   3e724:	mov	x29, sp
   3e728:	str	x19, [sp, #16]
   3e72c:	mrs	x19, tpidr_el0
   3e730:	add	x0, x19, x0
   3e734:	bl	be70 <mpfr_clear_cache@plt>
   3e738:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3e73c:	ldr	x1, [x0, #2560]
   3e740:	add	x0, x0, #0xa00
   3e744:	blr	x1
   3e748:	add	x0, x19, x0
   3e74c:	bl	be70 <mpfr_clear_cache@plt>
   3e750:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3e754:	ldr	x1, [x0, #2608]
   3e758:	add	x0, x0, #0xa30
   3e75c:	blr	x1
   3e760:	add	x0, x19, x0
   3e764:	bl	be70 <mpfr_clear_cache@plt>
   3e768:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3e76c:	ldr	x1, [x0, #2592]
   3e770:	add	x0, x0, #0xa20
   3e774:	blr	x1
   3e778:	add	x0, x19, x0
   3e77c:	ldr	x19, [sp, #16]
   3e780:	ldp	x29, x30, [sp], #32
   3e784:	b	be70 <mpfr_clear_cache@plt>

000000000003e788 <mpfr_free_cache@@Base>:
   3e788:	stp	x29, x30, [sp, #-16]!
   3e78c:	mov	x29, sp
   3e790:	bl	bfb0 <mpfr_bernoulli_freecache@plt>
   3e794:	bl	c230 <mpfr_free_pool@plt>
   3e798:	ldp	x29, x30, [sp], #16
   3e79c:	b	3e710 <mpfr_sum@@Base+0x208>

000000000003e7a0 <mpfr_free_cache2@@Base>:
   3e7a0:	tbnz	w0, #0, 3e7a8 <mpfr_free_cache2@@Base+0x8>
   3e7a4:	ret
   3e7a8:	stp	x29, x30, [sp, #-16]!
   3e7ac:	mov	x29, sp
   3e7b0:	bl	bfb0 <mpfr_bernoulli_freecache@plt>
   3e7b4:	bl	c230 <mpfr_free_pool@plt>
   3e7b8:	ldp	x29, x30, [sp], #16
   3e7bc:	b	3e710 <mpfr_sum@@Base+0x208>

000000000003e7c0 <mpfr_mp_memory_cleanup@@Base>:
   3e7c0:	stp	x29, x30, [sp, #-16]!
   3e7c4:	mov	x29, sp
   3e7c8:	bl	bb10 <mpfr_free_cache@plt>
   3e7cc:	mov	w0, #0x0                   	// #0
   3e7d0:	ldp	x29, x30, [sp], #16
   3e7d4:	ret

000000000003e7d8 <mpfr_add_si@@Base>:
   3e7d8:	tbnz	x2, #63, 3e7e0 <mpfr_add_si@@Base+0x8>
   3e7dc:	b	c260 <mpfr_add_ui@plt>
   3e7e0:	neg	x2, x2
   3e7e4:	b	c530 <mpfr_sub_ui@plt>

000000000003e7e8 <mpfr_sub_si@@Base>:
   3e7e8:	tbnz	x2, #63, 3e7f0 <mpfr_sub_si@@Base+0x8>
   3e7ec:	b	c530 <mpfr_sub_ui@plt>
   3e7f0:	neg	x2, x2
   3e7f4:	b	c260 <mpfr_add_ui@plt>

000000000003e7f8 <mpfr_si_sub@@Base>:
   3e7f8:	tbz	x1, #63, 3e854 <mpfr_si_sub@@Base+0x5c>
   3e7fc:	stp	x29, x30, [sp, #-32]!
   3e800:	mov	x6, x2
   3e804:	cmp	w3, #0x2
   3e808:	mov	x29, sp
   3e80c:	str	x19, [sp, #16]
   3e810:	neg	x2, x1
   3e814:	mov	x19, x0
   3e818:	b.eq	3e858 <mpfr_si_sub@@Base+0x60>  // b.none
   3e81c:	cmp	w3, #0x3
   3e820:	mov	w0, #0x2                   	// #2
   3e824:	csel	w5, w3, w0, ne  // ne = any
   3e828:	mov	x1, x6
   3e82c:	mov	w3, w5
   3e830:	mov	x0, x19
   3e834:	bl	c260 <mpfr_add_ui@plt>
   3e838:	ldr	w1, [x19, #8]
   3e83c:	neg	w0, w0
   3e840:	neg	w1, w1
   3e844:	str	w1, [x19, #8]
   3e848:	ldr	x19, [sp, #16]
   3e84c:	ldp	x29, x30, [sp], #32
   3e850:	ret
   3e854:	b	ca50 <mpfr_ui_sub@plt>
   3e858:	mov	w5, #0x3                   	// #3
   3e85c:	b	3e828 <mpfr_si_sub@@Base+0x30>

000000000003e860 <mpfr_mul_si@@Base>:
   3e860:	tbnz	x2, #63, 3e868 <mpfr_mul_si@@Base+0x8>
   3e864:	b	ba50 <mpfr_mul_ui@plt>
   3e868:	stp	x29, x30, [sp, #-32]!
   3e86c:	mov	x6, x1
   3e870:	neg	x2, x2
   3e874:	mov	x29, sp
   3e878:	str	x19, [sp, #16]
   3e87c:	cmp	w3, #0x2
   3e880:	mov	x19, x0
   3e884:	b.eq	3e8c0 <mpfr_mul_si@@Base+0x60>  // b.none
   3e888:	cmp	w3, #0x3
   3e88c:	mov	w0, #0x2                   	// #2
   3e890:	csel	w5, w3, w0, ne  // ne = any
   3e894:	mov	x1, x6
   3e898:	mov	w3, w5
   3e89c:	mov	x0, x19
   3e8a0:	bl	ba50 <mpfr_mul_ui@plt>
   3e8a4:	ldr	w1, [x19, #8]
   3e8a8:	neg	w0, w0
   3e8ac:	neg	w1, w1
   3e8b0:	str	w1, [x19, #8]
   3e8b4:	ldr	x19, [sp, #16]
   3e8b8:	ldp	x29, x30, [sp], #32
   3e8bc:	ret
   3e8c0:	mov	w5, #0x3                   	// #3
   3e8c4:	b	3e894 <mpfr_mul_si@@Base+0x34>

000000000003e8c8 <mpfr_div_si@@Base>:
   3e8c8:	tbnz	x2, #63, 3e8d0 <mpfr_div_si@@Base+0x8>
   3e8cc:	b	cc60 <mpfr_div_ui@plt>
   3e8d0:	stp	x29, x30, [sp, #-32]!
   3e8d4:	mov	x6, x1
   3e8d8:	neg	x2, x2
   3e8dc:	mov	x29, sp
   3e8e0:	str	x19, [sp, #16]
   3e8e4:	cmp	w3, #0x2
   3e8e8:	mov	x19, x0
   3e8ec:	b.eq	3e928 <mpfr_div_si@@Base+0x60>  // b.none
   3e8f0:	cmp	w3, #0x3
   3e8f4:	mov	w0, #0x2                   	// #2
   3e8f8:	csel	w5, w3, w0, ne  // ne = any
   3e8fc:	mov	x1, x6
   3e900:	mov	w3, w5
   3e904:	mov	x0, x19
   3e908:	bl	cc60 <mpfr_div_ui@plt>
   3e90c:	ldr	w1, [x19, #8]
   3e910:	neg	w0, w0
   3e914:	neg	w1, w1
   3e918:	str	w1, [x19, #8]
   3e91c:	ldr	x19, [sp, #16]
   3e920:	ldp	x29, x30, [sp], #32
   3e924:	ret
   3e928:	mov	w5, #0x3                   	// #3
   3e92c:	b	3e8fc <mpfr_div_si@@Base+0x34>

000000000003e930 <mpfr_si_div@@Base>:
   3e930:	tbz	x1, #63, 3e98c <mpfr_si_div@@Base+0x5c>
   3e934:	stp	x29, x30, [sp, #-32]!
   3e938:	mov	x6, x2
   3e93c:	neg	x1, x1
   3e940:	mov	x29, sp
   3e944:	str	x19, [sp, #16]
   3e948:	cmp	w3, #0x2
   3e94c:	mov	x19, x0
   3e950:	b.eq	3e990 <mpfr_si_div@@Base+0x60>  // b.none
   3e954:	cmp	w3, #0x3
   3e958:	mov	w0, #0x2                   	// #2
   3e95c:	csel	w5, w3, w0, ne  // ne = any
   3e960:	mov	w3, w5
   3e964:	mov	x2, x6
   3e968:	mov	x0, x19
   3e96c:	bl	c2f0 <mpfr_ui_div@plt>
   3e970:	ldr	w1, [x19, #8]
   3e974:	neg	w0, w0
   3e978:	neg	w1, w1
   3e97c:	str	w1, [x19, #8]
   3e980:	ldr	x19, [sp, #16]
   3e984:	ldp	x29, x30, [sp], #32
   3e988:	ret
   3e98c:	b	c2f0 <mpfr_ui_div@plt>
   3e990:	mov	w5, #0x3                   	// #3
   3e994:	b	3e960 <mpfr_si_div@@Base+0x30>

000000000003e998 <mpfr_cmp_ld@@Base>:
   3e998:	stp	x29, x30, [sp, #-128]!
   3e99c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   3e9a0:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   3e9a4:	mov	x29, sp
   3e9a8:	stp	x19, x20, [sp, #16]
   3e9ac:	mrs	x19, tpidr_el0
   3e9b0:	add	x20, sp, #0x60
   3e9b4:	stp	x21, x22, [sp, #32]
   3e9b8:	mov	x22, x0
   3e9bc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3e9c0:	ldr	x1, [x0, #2576]
   3e9c4:	add	x0, x0, #0xa10
   3e9c8:	blr	x1
   3e9cc:	ldr	w21, [x19, x0]
   3e9d0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3e9d4:	ldr	x1, [x0, #2512]
   3e9d8:	add	x0, x0, #0x9d0
   3e9dc:	blr	x1
   3e9e0:	add	x3, x19, x0
   3e9e4:	stp	x23, x24, [sp, #48]
   3e9e8:	str	x25, [sp, #64]
   3e9ec:	ldr	x25, [x19, x0]
   3e9f0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3e9f4:	ldr	x1, [x0, #2544]
   3e9f8:	add	x0, x0, #0x9f0
   3e9fc:	blr	x1
   3ea00:	mov	x1, #0x71                  	// #113
   3ea04:	str	x4, [x3]
   3ea08:	str	q0, [sp, #80]
   3ea0c:	ldr	x24, [x19, x0]
   3ea10:	str	x2, [x19, x0]
   3ea14:	mov	x0, x20
   3ea18:	bl	ca80 <mpfr_init2@plt>
   3ea1c:	ldr	q0, [sp, #80]
   3ea20:	mov	x0, x20
   3ea24:	mov	w1, #0x0                   	// #0
   3ea28:	bl	ba40 <mpfr_set_ld@plt>
   3ea2c:	cbnz	w0, 3eab8 <mpfr_cmp_ld@@Base+0x120>
   3ea30:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3ea34:	ldr	x1, [x0, #2576]
   3ea38:	add	x0, x0, #0xa10
   3ea3c:	blr	x1
   3ea40:	add	x23, x19, x0
   3ea44:	mov	x1, x20
   3ea48:	mov	w2, #0x1                   	// #1
   3ea4c:	str	wzr, [x19, x0]
   3ea50:	mov	x0, x22
   3ea54:	bl	c9a0 <mpfr_cmp3@plt>
   3ea58:	mov	w1, w0
   3ea5c:	ldr	w2, [x23]
   3ea60:	mov	x0, x20
   3ea64:	mov	w20, w1
   3ea68:	orr	w21, w21, w2
   3ea6c:	bl	c070 <mpfr_clear@plt>
   3ea70:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3ea74:	ldr	x1, [x0, #2512]
   3ea78:	add	x0, x0, #0x9d0
   3ea7c:	blr	x1
   3ea80:	str	x25, [x19, x0]
   3ea84:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3ea88:	ldr	x1, [x0, #2544]
   3ea8c:	add	x0, x0, #0x9f0
   3ea90:	blr	x1
   3ea94:	str	x24, [x19, x0]
   3ea98:	mov	w0, w20
   3ea9c:	ldp	x19, x20, [sp, #16]
   3eaa0:	ldr	x25, [sp, #64]
   3eaa4:	str	w21, [x23]
   3eaa8:	ldp	x21, x22, [sp, #32]
   3eaac:	ldp	x23, x24, [sp, #48]
   3eab0:	ldp	x29, x30, [sp], #128
   3eab4:	ret
   3eab8:	mov	x0, x20
   3eabc:	mov	x1, #0x832                 	// #2098
   3eac0:	bl	bed0 <mpfr_set_prec@plt>
   3eac4:	ldr	q0, [sp, #80]
   3eac8:	mov	x0, x20
   3eacc:	mov	w1, #0x0                   	// #0
   3ead0:	bl	ba40 <mpfr_set_ld@plt>
   3ead4:	b	3ea30 <mpfr_cmp_ld@@Base+0x98>

000000000003ead8 <mpfr_set_si_2exp@@Base>:
   3ead8:	stp	x29, x30, [sp, #-96]!
   3eadc:	mov	x29, sp
   3eae0:	stp	x19, x20, [sp, #16]
   3eae4:	mov	x19, x0
   3eae8:	cbnz	x1, 3eb10 <mpfr_set_si_2exp@@Base+0x38>
   3eaec:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3eaf0:	mov	w2, #0x1                   	// #1
   3eaf4:	str	w2, [x19, #8]
   3eaf8:	mov	w1, #0x0                   	// #0
   3eafc:	str	x0, [x19, #16]
   3eb00:	mov	w0, w1
   3eb04:	ldp	x19, x20, [sp, #16]
   3eb08:	ldp	x29, x30, [sp], #96
   3eb0c:	ret
   3eb10:	ldr	x0, [x0]
   3eb14:	stp	x21, x22, [sp, #32]
   3eb18:	mov	x22, x2
   3eb1c:	add	x21, x0, #0x3e
   3eb20:	subs	x0, x0, #0x1
   3eb24:	csel	x0, x21, x0, mi  // mi = first
   3eb28:	stp	x25, x26, [sp, #64]
   3eb2c:	mov	x20, x1
   3eb30:	asr	x21, x0, #6
   3eb34:	stp	x23, x24, [sp, #48]
   3eb38:	mov	w24, w3
   3eb3c:	ldr	x25, [x19, #24]
   3eb40:	str	wzr, [sp, #92]
   3eb44:	lsl	x2, x21, #3
   3eb48:	add	x23, x25, x2
   3eb4c:	tbnz	x1, #63, 3ec14 <mpfr_set_si_2exp@@Base+0x13c>
   3eb50:	clz	x0, x1
   3eb54:	mov	w1, #0x0                   	// #0
   3eb58:	mov	w26, w0
   3eb5c:	lsl	x0, x20, x0
   3eb60:	str	x0, [x25, x21, lsl #3]
   3eb64:	mov	x0, x25
   3eb68:	bl	c110 <memset@plt>
   3eb6c:	mov	w1, #0x1                   	// #1
   3eb70:	mov	w0, #0x40                  	// #64
   3eb74:	sub	w0, w0, w26
   3eb78:	ldr	x4, [x19]
   3eb7c:	str	w1, [x19, #8]
   3eb80:	sxtw	x2, w0
   3eb84:	add	x22, x2, x22
   3eb88:	cmp	x2, x4
   3eb8c:	b.gt	3ec68 <mpfr_set_si_2exp@@Base+0x190>
   3eb90:	mrs	x2, tpidr_el0
   3eb94:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3eb98:	ldr	x1, [x0, #2512]
   3eb9c:	add	x0, x0, #0x9d0
   3eba0:	blr	x1
   3eba4:	str	x22, [x19, #16]
   3eba8:	ldr	w1, [sp, #92]
   3ebac:	ldr	x0, [x2, x0]
   3ebb0:	cmp	x0, x22
   3ebb4:	b.gt	3ec3c <mpfr_set_si_2exp@@Base+0x164>
   3ebb8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3ebbc:	ldr	x3, [x0, #2544]
   3ebc0:	add	x0, x0, #0x9f0
   3ebc4:	blr	x3
   3ebc8:	ldr	x0, [x2, x0]
   3ebcc:	cmp	x0, x22
   3ebd0:	b.lt	3ec3c <mpfr_set_si_2exp@@Base+0x164>  // b.tstop
   3ebd4:	cbz	w1, 3ebf8 <mpfr_set_si_2exp@@Base+0x120>
   3ebd8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3ebdc:	ldr	x3, [x0, #2576]
   3ebe0:	add	x0, x0, #0xa10
   3ebe4:	blr	x3
   3ebe8:	add	x0, x2, x0
   3ebec:	ldr	w2, [x0]
   3ebf0:	orr	w2, w2, #0x8
   3ebf4:	str	w2, [x0]
   3ebf8:	mov	w0, w1
   3ebfc:	ldp	x19, x20, [sp, #16]
   3ec00:	ldp	x21, x22, [sp, #32]
   3ec04:	ldp	x23, x24, [sp, #48]
   3ec08:	ldp	x25, x26, [sp, #64]
   3ec0c:	ldp	x29, x30, [sp], #96
   3ec10:	ret
   3ec14:	neg	x3, x1
   3ec18:	mov	x0, x25
   3ec1c:	clz	x4, x3
   3ec20:	mov	w1, #0x0                   	// #0
   3ec24:	mov	w26, w4
   3ec28:	lsl	x3, x3, x4
   3ec2c:	str	x3, [x25, x21, lsl #3]
   3ec30:	bl	c110 <memset@plt>
   3ec34:	mov	w1, #0xffffffff            	// #-1
   3ec38:	b	3eb70 <mpfr_set_si_2exp@@Base+0x98>
   3ec3c:	mov	w2, w24
   3ec40:	mov	x0, x19
   3ec44:	bl	cb30 <mpfr_check_range@plt>
   3ec48:	mov	w1, w0
   3ec4c:	mov	w0, w1
   3ec50:	ldp	x19, x20, [sp, #16]
   3ec54:	ldp	x21, x22, [sp, #32]
   3ec58:	ldp	x23, x24, [sp, #48]
   3ec5c:	ldp	x25, x26, [sp, #64]
   3ec60:	ldp	x29, x30, [sp], #96
   3ec64:	ret
   3ec68:	lsr	x3, x20, #63
   3ec6c:	add	x6, sp, #0x5c
   3ec70:	mov	w5, w24
   3ec74:	mov	x1, x23
   3ec78:	mov	x0, x23
   3ec7c:	bl	ca20 <mpfr_round_raw@plt>
   3ec80:	cbz	w0, 3eb90 <mpfr_set_si_2exp@@Base+0xb8>
   3ec84:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3ec88:	add	x22, x22, #0x1
   3ec8c:	str	x0, [x25, x21, lsl #3]
   3ec90:	b	3eb90 <mpfr_set_si_2exp@@Base+0xb8>
   3ec94:	nop

000000000003ec98 <__gmpfr_set_uj_2exp@@Base>:
   3ec98:	stp	x29, x30, [sp, #-80]!
   3ec9c:	mov	x29, sp
   3eca0:	str	x19, [sp, #16]
   3eca4:	mov	x19, x0
   3eca8:	cbz	x1, 3ed34 <__gmpfr_set_uj_2exp@@Base+0x9c>
   3ecac:	mrs	x7, tpidr_el0
   3ecb0:	clz	x5, x1
   3ecb4:	mov	w6, w3
   3ecb8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3ecbc:	ldr	x3, [x0, #2512]
   3ecc0:	add	x0, x0, #0x9d0
   3ecc4:	blr	x3
   3ecc8:	mov	x4, #0x40                  	// #64
   3eccc:	lsl	x1, x1, x5
   3ecd0:	ldr	x8, [x7, x0]
   3ecd4:	sub	x5, x4, x5
   3ecd8:	add	x0, sp, #0x28
   3ecdc:	mov	w3, #0x1                   	// #1
   3ece0:	stp	x1, x4, [sp, #40]
   3ece4:	add	x4, x5, x2
   3ece8:	cmp	x4, x8
   3ecec:	str	w3, [sp, #56]
   3ecf0:	str	x0, [sp, #72]
   3ecf4:	b.lt	3ed54 <__gmpfr_set_uj_2exp@@Base+0xbc>  // b.tstop
   3ecf8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3ecfc:	ldr	x1, [x0, #2544]
   3ed00:	add	x0, x0, #0x9f0
   3ed04:	blr	x1
   3ed08:	ldr	x0, [x7, x0]
   3ed0c:	cmp	x4, x0
   3ed10:	b.gt	3ed90 <__gmpfr_set_uj_2exp@@Base+0xf8>
   3ed14:	mov	w2, w6
   3ed18:	mov	x0, x19
   3ed1c:	add	x1, sp, #0x30
   3ed20:	str	x4, [sp, #64]
   3ed24:	bl	c6a0 <mpfr_set4@plt>
   3ed28:	ldr	x19, [sp, #16]
   3ed2c:	ldp	x29, x30, [sp], #80
   3ed30:	ret
   3ed34:	mov	w2, #0x1                   	// #1
   3ed38:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   3ed3c:	str	w2, [x19, #8]
   3ed40:	mov	w0, #0x0                   	// #0
   3ed44:	str	x1, [x19, #16]
   3ed48:	ldr	x19, [sp, #16]
   3ed4c:	ldp	x29, x30, [sp], #80
   3ed50:	ret
   3ed54:	cbnz	w6, 3ed74 <__gmpfr_set_uj_2exp@@Base+0xdc>
   3ed58:	add	x4, x4, #0x1
   3ed5c:	cmp	x8, x4
   3ed60:	b.gt	3ed88 <__gmpfr_set_uj_2exp@@Base+0xf0>
   3ed64:	add	x0, sp, #0x30
   3ed68:	bl	bf00 <mpfr_powerof2_raw@plt>
   3ed6c:	cmp	w0, #0x0
   3ed70:	cset	w6, ne  // ne = any
   3ed74:	mov	w1, w6
   3ed78:	mov	x0, x19
   3ed7c:	mov	w2, #0x1                   	// #1
   3ed80:	bl	c3c0 <mpfr_underflow@plt>
   3ed84:	b	3ed28 <__gmpfr_set_uj_2exp@@Base+0x90>
   3ed88:	mov	w6, w3
   3ed8c:	b	3ed74 <__gmpfr_set_uj_2exp@@Base+0xdc>
   3ed90:	mov	w2, w3
   3ed94:	mov	w1, w6
   3ed98:	mov	x0, x19
   3ed9c:	bl	bf40 <mpfr_overflow@plt>
   3eda0:	b	3ed28 <__gmpfr_set_uj_2exp@@Base+0x90>
   3eda4:	nop

000000000003eda8 <__gmpfr_set_uj@@Base>:
   3eda8:	mov	w3, w2
   3edac:	mov	x2, #0x0                   	// #0
   3edb0:	b	c000 <__gmpfr_set_uj_2exp@plt>
   3edb4:	nop

000000000003edb8 <__gmpfr_set_sj_2exp@@Base>:
   3edb8:	tbz	x1, #63, 3ee14 <__gmpfr_set_sj_2exp@@Base+0x5c>
   3edbc:	stp	x29, x30, [sp, #-32]!
   3edc0:	mov	x6, x2
   3edc4:	neg	x1, x1
   3edc8:	mov	x29, sp
   3edcc:	str	x19, [sp, #16]
   3edd0:	cmp	w3, #0x2
   3edd4:	mov	x19, x0
   3edd8:	b.eq	3ee18 <__gmpfr_set_sj_2exp@@Base+0x60>  // b.none
   3eddc:	cmp	w3, #0x3
   3ede0:	mov	w0, #0x2                   	// #2
   3ede4:	csel	w5, w3, w0, ne  // ne = any
   3ede8:	mov	w3, w5
   3edec:	mov	x2, x6
   3edf0:	mov	x0, x19
   3edf4:	bl	c000 <__gmpfr_set_uj_2exp@plt>
   3edf8:	ldr	w1, [x19, #8]
   3edfc:	neg	w0, w0
   3ee00:	neg	w1, w1
   3ee04:	str	w1, [x19, #8]
   3ee08:	ldr	x19, [sp, #16]
   3ee0c:	ldp	x29, x30, [sp], #32
   3ee10:	ret
   3ee14:	b	c000 <__gmpfr_set_uj_2exp@plt>
   3ee18:	mov	w5, #0x3                   	// #3
   3ee1c:	b	3ede8 <__gmpfr_set_sj_2exp@@Base+0x30>

000000000003ee20 <__gmpfr_set_sj@@Base>:
   3ee20:	mov	w3, w2
   3ee24:	mov	x2, #0x0                   	// #0
   3ee28:	b	c920 <__gmpfr_set_sj_2exp@plt>
   3ee2c:	nop

000000000003ee30 <__gmpfr_mpfr_get_sj@@Base>:
   3ee30:	stp	x29, x30, [sp, #-112]!
   3ee34:	mov	x29, sp
   3ee38:	stp	x19, x20, [sp, #16]
   3ee3c:	mov	x19, x0
   3ee40:	mov	w20, w1
   3ee44:	bl	bbc0 <mpfr_fits_intmax_p@plt>
   3ee48:	cbz	w0, 3f004 <__gmpfr_mpfr_get_sj@@Base+0x1d4>
   3ee4c:	ldr	x1, [x19, #16]
   3ee50:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3ee54:	cmp	x1, x0
   3ee58:	b.eq	3eff0 <__gmpfr_mpfr_get_sj@@Base+0x1c0>  // b.none
   3ee5c:	stp	x23, x24, [sp, #48]
   3ee60:	mrs	x23, tpidr_el0
   3ee64:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3ee68:	ldr	x1, [x0, #2576]
   3ee6c:	add	x0, x0, #0xa10
   3ee70:	blr	x1
   3ee74:	str	x25, [sp, #64]
   3ee78:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   3ee7c:	ldr	w25, [x23, x0]
   3ee80:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3ee84:	ldr	x3, [x0, #2512]
   3ee88:	add	x0, x0, #0x9d0
   3ee8c:	blr	x3
   3ee90:	add	x3, x23, x0
   3ee94:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   3ee98:	add	x24, sp, #0x50
   3ee9c:	stp	x21, x22, [sp, #32]
   3eea0:	mov	x1, #0x3f                  	// #63
   3eea4:	ldr	x22, [x23, x0]
   3eea8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3eeac:	ldr	x5, [x0, #2544]
   3eeb0:	add	x0, x0, #0x9f0
   3eeb4:	blr	x5
   3eeb8:	str	x4, [x3]
   3eebc:	ldr	x21, [x23, x0]
   3eec0:	str	x2, [x23, x0]
   3eec4:	mov	x0, x24
   3eec8:	bl	ca80 <mpfr_init2@plt>
   3eecc:	mov	x1, x19
   3eed0:	mov	w2, w20
   3eed4:	mov	x0, x24
   3eed8:	bl	c300 <mpfr_rint@plt>
   3eedc:	ldr	x1, [sp, #96]
   3eee0:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   3eee4:	add	x0, x1, x0
   3eee8:	cmp	x0, #0x1
   3eeec:	b.ls	3f050 <__gmpfr_mpfr_get_sj@@Base+0x220>  // b.plast
   3eef0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3eef4:	ldr	x2, [x0, #2576]
   3eef8:	add	x0, x0, #0xa10
   3eefc:	blr	x2
   3ef00:	ldr	w20, [x23, x0]
   3ef04:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3ef08:	cmp	x1, x0
   3ef0c:	orr	w20, w25, w20
   3ef10:	b.eq	3efe8 <__gmpfr_mpfr_get_sj@@Base+0x1b8>  // b.none
   3ef14:	sxtw	x0, w1
   3ef18:	cmp	x0, #0x40
   3ef1c:	ldr	x2, [sp, #104]
   3ef20:	b.gt	3f0a4 <__gmpfr_mpfr_get_sj@@Base+0x274>
   3ef24:	ldr	w3, [sp, #88]
   3ef28:	b.eq	3f070 <__gmpfr_mpfr_get_sj@@Base+0x240>  // b.none
   3ef2c:	ldr	x0, [sp, #80]
   3ef30:	cmp	w1, #0x0
   3ef34:	cset	w4, gt
   3ef38:	cmp	w3, #0x0
   3ef3c:	sub	x0, x0, #0x1
   3ef40:	asr	x0, x0, #6
   3ef44:	mvn	w3, w0
   3ef48:	and	w3, w4, w3, lsr #31
   3ef4c:	b.le	3efc8 <__gmpfr_mpfr_get_sj@@Base+0x198>
   3ef50:	cbz	w3, 3efe8 <__gmpfr_mpfr_get_sj@@Base+0x1b8>
   3ef54:	add	x2, x2, #0x8
   3ef58:	sub	w0, w0, #0x1
   3ef5c:	neg	w1, w1
   3ef60:	ldr	x19, [x2, w0, sxtw #3]
   3ef64:	lsr	x19, x19, x1
   3ef68:	mov	x0, x24
   3ef6c:	bl	c070 <mpfr_clear@plt>
   3ef70:	ldr	x25, [sp, #64]
   3ef74:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3ef78:	ldr	x1, [x0, #2576]
   3ef7c:	add	x0, x0, #0xa10
   3ef80:	blr	x1
   3ef84:	str	w20, [x23, x0]
   3ef88:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3ef8c:	ldr	x1, [x0, #2512]
   3ef90:	add	x0, x0, #0x9d0
   3ef94:	blr	x1
   3ef98:	str	x22, [x23, x0]
   3ef9c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3efa0:	ldr	x1, [x0, #2544]
   3efa4:	add	x0, x0, #0x9f0
   3efa8:	blr	x1
   3efac:	str	x21, [x23, x0]
   3efb0:	ldp	x21, x22, [sp, #32]
   3efb4:	ldp	x23, x24, [sp, #48]
   3efb8:	mov	x0, x19
   3efbc:	ldp	x19, x20, [sp, #16]
   3efc0:	ldp	x29, x30, [sp], #112
   3efc4:	ret
   3efc8:	cbz	w3, 3efe8 <__gmpfr_mpfr_get_sj@@Base+0x1b8>
   3efcc:	add	x2, x2, #0x8
   3efd0:	sub	w0, w0, #0x1
   3efd4:	neg	w1, w1
   3efd8:	ldr	x19, [x2, w0, sxtw #3]
   3efdc:	lsr	x1, x19, x1
   3efe0:	neg	x19, x1
   3efe4:	b	3ef68 <__gmpfr_mpfr_get_sj@@Base+0x138>
   3efe8:	mov	x19, #0x0                   	// #0
   3efec:	b	3ef68 <__gmpfr_mpfr_get_sj@@Base+0x138>
   3eff0:	mov	x19, #0x0                   	// #0
   3eff4:	mov	x0, x19
   3eff8:	ldp	x19, x20, [sp, #16]
   3effc:	ldp	x29, x30, [sp], #112
   3f000:	ret
   3f004:	mrs	x1, tpidr_el0
   3f008:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f00c:	ldr	x2, [x0, #2576]
   3f010:	add	x0, x0, #0xa10
   3f014:	blr	x2
   3f018:	add	x0, x1, x0
   3f01c:	mov	x2, #0x2                   	// #2
   3f020:	ldr	x3, [x19, #16]
   3f024:	movk	x2, #0x8000, lsl #48
   3f028:	ldr	w1, [x0]
   3f02c:	cmp	x3, x2
   3f030:	orr	w1, w1, #0x10
   3f034:	str	w1, [x0]
   3f038:	b.eq	3eff0 <__gmpfr_mpfr_get_sj@@Base+0x1c0>  // b.none
   3f03c:	ldr	w0, [x19, #8]
   3f040:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   3f044:	cmp	w0, #0x0
   3f048:	cinv	x19, x1, lt  // lt = tstop
   3f04c:	b	3efb8 <__gmpfr_mpfr_get_sj@@Base+0x188>
   3f050:	mov	w1, #0x3e                  	// #62
   3f054:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3f058:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3f05c:	add	x2, x2, #0xa60
   3f060:	add	x0, x0, #0xad8
   3f064:	bl	cb40 <mpfr_assert_fail@plt>
   3f068:	ldr	x1, [sp, #96]
   3f06c:	b	3eef0 <__gmpfr_mpfr_get_sj@@Base+0xc0>
   3f070:	tbz	w3, #31, 3f084 <__gmpfr_mpfr_get_sj@@Base+0x254>
   3f074:	mov	x0, x24
   3f078:	mov	x19, #0x8000000000000000    	// #-9223372036854775808
   3f07c:	bl	bf00 <mpfr_powerof2_raw@plt>
   3f080:	cbnz	w0, 3ef68 <__gmpfr_mpfr_get_sj@@Base+0x138>
   3f084:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3f088:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3f08c:	add	x2, x2, #0xb08
   3f090:	add	x0, x0, #0xad8
   3f094:	mov	w1, #0x53                  	// #83
   3f098:	mov	x19, #0x8000000000000000    	// #-9223372036854775808
   3f09c:	bl	cb40 <mpfr_assert_fail@plt>
   3f0a0:	b	3ef68 <__gmpfr_mpfr_get_sj@@Base+0x138>
   3f0a4:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3f0a8:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3f0ac:	add	x2, x2, #0xae8
   3f0b0:	add	x0, x0, #0xad8
   3f0b4:	mov	w1, #0x4b                  	// #75
   3f0b8:	bl	cb40 <mpfr_assert_fail@plt>
   3f0bc:	nop

000000000003f0c0 <__gmpfr_mpfr_get_uj@@Base>:
   3f0c0:	stp	x29, x30, [sp, #-112]!
   3f0c4:	mov	x29, sp
   3f0c8:	stp	x19, x20, [sp, #16]
   3f0cc:	mov	w19, w1
   3f0d0:	stp	x21, x22, [sp, #32]
   3f0d4:	mov	x22, x0
   3f0d8:	bl	c010 <mpfr_fits_uintmax_p@plt>
   3f0dc:	cbz	w0, 3f278 <__gmpfr_mpfr_get_uj@@Base+0x1b8>
   3f0e0:	ldr	x1, [x22, #16]
   3f0e4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3f0e8:	cmp	x1, x0
   3f0ec:	b.eq	3f258 <__gmpfr_mpfr_get_uj@@Base+0x198>  // b.none
   3f0f0:	stp	x23, x24, [sp, #48]
   3f0f4:	mrs	x23, tpidr_el0
   3f0f8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f0fc:	ldr	x1, [x0, #2576]
   3f100:	add	x0, x0, #0xa10
   3f104:	blr	x1
   3f108:	str	x25, [sp, #64]
   3f10c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   3f110:	ldr	w25, [x23, x0]
   3f114:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f118:	ldr	x3, [x0, #2512]
   3f11c:	add	x0, x0, #0x9d0
   3f120:	blr	x3
   3f124:	add	x3, x23, x0
   3f128:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   3f12c:	add	x24, sp, #0x50
   3f130:	mov	x1, #0x40                  	// #64
   3f134:	ldr	x20, [x23, x0]
   3f138:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f13c:	ldr	x5, [x0, #2544]
   3f140:	add	x0, x0, #0x9f0
   3f144:	blr	x5
   3f148:	str	x4, [x3]
   3f14c:	ldr	x21, [x23, x0]
   3f150:	str	x2, [x23, x0]
   3f154:	mov	x0, x24
   3f158:	bl	ca80 <mpfr_init2@plt>
   3f15c:	mov	x1, x22
   3f160:	mov	w2, w19
   3f164:	mov	x0, x24
   3f168:	bl	c300 <mpfr_rint@plt>
   3f16c:	ldr	x1, [sp, #96]
   3f170:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   3f174:	add	x0, x1, x0
   3f178:	cmp	x0, #0x1
   3f17c:	b.ls	3f2c4 <__gmpfr_mpfr_get_uj@@Base+0x204>  // b.plast
   3f180:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f184:	ldr	x2, [x0, #2576]
   3f188:	add	x0, x0, #0xa10
   3f18c:	blr	x2
   3f190:	ldr	w19, [x23, x0]
   3f194:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3f198:	cmp	x1, x0
   3f19c:	orr	w19, w25, w19
   3f1a0:	b.eq	3f270 <__gmpfr_mpfr_get_uj@@Base+0x1b0>  // b.none
   3f1a4:	ldr	w0, [sp, #88]
   3f1a8:	cmp	w0, #0x0
   3f1ac:	b.le	3f2e4 <__gmpfr_mpfr_get_uj@@Base+0x224>
   3f1b0:	cmp	w1, #0x40
   3f1b4:	ldr	x4, [sp, #104]
   3f1b8:	b.gt	3f304 <__gmpfr_mpfr_get_uj@@Base+0x244>
   3f1bc:	ldr	x2, [sp, #80]
   3f1c0:	mov	x22, #0x0                   	// #0
   3f1c4:	sub	x2, x2, #0x1
   3f1c8:	asr	x0, x2, #6
   3f1cc:	sbfx	x2, x2, #6, #32
   3f1d0:	tbnz	w0, #31, 3f270 <__gmpfr_mpfr_get_uj@@Base+0x1b0>
   3f1d4:	nop
   3f1d8:	ldr	x0, [x4, x2, lsl #3]
   3f1dc:	subs	w1, w1, #0x40
   3f1e0:	neg	w3, w1
   3f1e4:	sub	x2, x2, #0x1
   3f1e8:	lsr	x3, x0, x3
   3f1ec:	csel	x0, x3, x0, ne  // ne = any
   3f1f0:	add	x22, x22, x0
   3f1f4:	tbz	w2, #31, 3f1d8 <__gmpfr_mpfr_get_uj@@Base+0x118>
   3f1f8:	mov	x0, x24
   3f1fc:	bl	c070 <mpfr_clear@plt>
   3f200:	ldr	x25, [sp, #64]
   3f204:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f208:	ldr	x1, [x0, #2576]
   3f20c:	add	x0, x0, #0xa10
   3f210:	blr	x1
   3f214:	str	w19, [x23, x0]
   3f218:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f21c:	ldr	x1, [x0, #2512]
   3f220:	add	x0, x0, #0x9d0
   3f224:	blr	x1
   3f228:	str	x20, [x23, x0]
   3f22c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f230:	ldr	x1, [x0, #2544]
   3f234:	add	x0, x0, #0x9f0
   3f238:	blr	x1
   3f23c:	str	x21, [x23, x0]
   3f240:	ldp	x23, x24, [sp, #48]
   3f244:	mov	x0, x22
   3f248:	ldp	x19, x20, [sp, #16]
   3f24c:	ldp	x21, x22, [sp, #32]
   3f250:	ldp	x29, x30, [sp], #112
   3f254:	ret
   3f258:	mov	x22, #0x0                   	// #0
   3f25c:	mov	x0, x22
   3f260:	ldp	x19, x20, [sp, #16]
   3f264:	ldp	x21, x22, [sp, #32]
   3f268:	ldp	x29, x30, [sp], #112
   3f26c:	ret
   3f270:	mov	x22, #0x0                   	// #0
   3f274:	b	3f1f8 <__gmpfr_mpfr_get_uj@@Base+0x138>
   3f278:	mrs	x1, tpidr_el0
   3f27c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f280:	ldr	x2, [x0, #2576]
   3f284:	add	x0, x0, #0xa10
   3f288:	blr	x2
   3f28c:	add	x0, x1, x0
   3f290:	mov	x2, #0x2                   	// #2
   3f294:	ldr	x3, [x22, #16]
   3f298:	movk	x2, #0x8000, lsl #48
   3f29c:	ldr	w1, [x0]
   3f2a0:	cmp	x3, x2
   3f2a4:	orr	w1, w1, #0x10
   3f2a8:	str	w1, [x0]
   3f2ac:	b.eq	3f258 <__gmpfr_mpfr_get_uj@@Base+0x198>  // b.none
   3f2b0:	ldrsw	x22, [x22, #8]
   3f2b4:	mov	x0, #0x0                   	// #0
   3f2b8:	cmp	x22, x0
   3f2bc:	csetm	x22, ge  // ge = tcont
   3f2c0:	b	3f244 <__gmpfr_mpfr_get_uj@@Base+0x184>
   3f2c4:	mov	w1, #0x3c                  	// #60
   3f2c8:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3f2cc:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3f2d0:	add	x2, x2, #0xa60
   3f2d4:	add	x0, x0, #0xb40
   3f2d8:	bl	cb40 <mpfr_assert_fail@plt>
   3f2dc:	ldr	x1, [sp, #96]
   3f2e0:	b	3f180 <__gmpfr_mpfr_get_uj@@Base+0xc0>
   3f2e4:	mov	w1, #0x47                  	// #71
   3f2e8:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3f2ec:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3f2f0:	add	x2, x2, #0xb50
   3f2f4:	add	x0, x0, #0xb40
   3f2f8:	bl	cb40 <mpfr_assert_fail@plt>
   3f2fc:	ldr	x1, [sp, #96]
   3f300:	b	3f1b0 <__gmpfr_mpfr_get_uj@@Base+0xf0>
   3f304:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3f308:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3f30c:	add	x2, x2, #0xb68
   3f310:	add	x0, x0, #0xb40
   3f314:	mov	w1, #0x4a                  	// #74
   3f318:	bl	cb40 <mpfr_assert_fail@plt>
   3f31c:	nop

000000000003f320 <mpfr_get_z@@Base>:
   3f320:	stp	x29, x30, [sp, #-112]!
   3f324:	mov	x29, sp
   3f328:	stp	x21, x22, [sp, #32]
   3f32c:	mov	x21, x1
   3f330:	ldr	x1, [x1, #16]
   3f334:	stp	x19, x20, [sp, #16]
   3f338:	mov	x20, x0
   3f33c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3f340:	cmp	x1, x0
   3f344:	b.le	3f4a8 <mpfr_get_z@@Base+0x188>
   3f348:	mrs	x19, tpidr_el0
   3f34c:	stp	x25, x26, [sp, #64]
   3f350:	mov	w25, w2
   3f354:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f358:	ldr	x2, [x0, #2576]
   3f35c:	add	x0, x0, #0xa10
   3f360:	blr	x2
   3f364:	stp	x23, x24, [sp, #48]
   3f368:	ldr	w26, [x19, x0]
   3f36c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f370:	ldr	x4, [x0, #2512]
   3f374:	add	x0, x0, #0x9d0
   3f378:	blr	x4
   3f37c:	add	x4, x19, x0
   3f380:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   3f384:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   3f388:	ldr	x24, [x19, x0]
   3f38c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f390:	ldr	x6, [x0, #2544]
   3f394:	add	x0, x0, #0x9f0
   3f398:	blr	x6
   3f39c:	str	x5, [x4]
   3f3a0:	mov	x3, #0x7fffffffffffff00    	// #9223372036854775552
   3f3a4:	ldr	x23, [x19, x0]
   3f3a8:	str	x2, [x19, x0]
   3f3ac:	cmp	x1, x3
   3f3b0:	b.ge	3f538 <mpfr_get_z@@Base+0x218>  // b.tcont
   3f3b4:	cmp	x1, #0x0
   3f3b8:	add	x22, sp, #0x50
   3f3bc:	csinc	x1, x1, xzr, gt
   3f3c0:	mov	x0, x22
   3f3c4:	bl	ca80 <mpfr_init2@plt>
   3f3c8:	mov	x1, x21
   3f3cc:	mov	w2, w25
   3f3d0:	mov	x0, x22
   3f3d4:	bl	c300 <mpfr_rint@plt>
   3f3d8:	mov	w21, w0
   3f3dc:	add	w0, w0, #0x1
   3f3e0:	tst	w0, #0xfffffffd
   3f3e4:	b.eq	3f4d8 <mpfr_get_z@@Base+0x1b8>  // b.none
   3f3e8:	ldr	x0, [sp, #96]
   3f3ec:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   3f3f0:	add	x0, x0, x1
   3f3f4:	cmp	x0, #0x1
   3f3f8:	b.ls	3f4f4 <mpfr_get_z@@Base+0x1d4>  // b.plast
   3f3fc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f400:	ldr	x1, [x0, #2576]
   3f404:	add	x0, x0, #0xa10
   3f408:	blr	x1
   3f40c:	ldr	w25, [x19, x0]
   3f410:	mov	x1, x22
   3f414:	mov	x0, x20
   3f418:	orr	w25, w26, w25
   3f41c:	bl	cac0 <mpfr_get_z_2exp@plt>
   3f420:	mov	x2, x0
   3f424:	tbnz	x0, #63, 3f494 <mpfr_get_z@@Base+0x174>
   3f428:	mov	x1, x20
   3f42c:	mov	x0, x20
   3f430:	bl	c200 <__gmpz_mul_2exp@plt>
   3f434:	mov	x0, x22
   3f438:	bl	c070 <mpfr_clear@plt>
   3f43c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f440:	ldr	x1, [x0, #2576]
   3f444:	add	x0, x0, #0xa10
   3f448:	blr	x1
   3f44c:	str	w25, [x19, x0]
   3f450:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f454:	ldr	x1, [x0, #2512]
   3f458:	add	x0, x0, #0x9d0
   3f45c:	blr	x1
   3f460:	str	x24, [x19, x0]
   3f464:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f468:	ldr	x1, [x0, #2544]
   3f46c:	add	x0, x0, #0x9f0
   3f470:	blr	x1
   3f474:	str	x23, [x19, x0]
   3f478:	mov	w0, w21
   3f47c:	ldp	x19, x20, [sp, #16]
   3f480:	ldp	x21, x22, [sp, #32]
   3f484:	ldp	x23, x24, [sp, #48]
   3f488:	ldp	x25, x26, [sp, #64]
   3f48c:	ldp	x29, x30, [sp], #112
   3f490:	ret
   3f494:	neg	x2, x0
   3f498:	mov	x1, x20
   3f49c:	mov	x0, x20
   3f4a0:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   3f4a4:	b	3f434 <mpfr_get_z@@Base+0x114>
   3f4a8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   3f4ac:	cmp	x1, x0
   3f4b0:	b.ne	3f510 <mpfr_get_z@@Base+0x1f0>  // b.any
   3f4b4:	mov	x0, x20
   3f4b8:	mov	x1, #0x0                   	// #0
   3f4bc:	mov	w21, #0x0                   	// #0
   3f4c0:	bl	bcb0 <__gmpz_set_ui@plt>
   3f4c4:	mov	w0, w21
   3f4c8:	ldp	x19, x20, [sp, #16]
   3f4cc:	ldp	x21, x22, [sp, #32]
   3f4d0:	ldp	x29, x30, [sp], #112
   3f4d4:	ret
   3f4d8:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3f4dc:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3f4e0:	add	x2, x2, #0xbd8
   3f4e4:	add	x0, x0, #0xbd0
   3f4e8:	mov	w1, #0x35                  	// #53
   3f4ec:	bl	cb40 <mpfr_assert_fail@plt>
   3f4f0:	b	3f3e8 <mpfr_get_z@@Base+0xc8>
   3f4f4:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3f4f8:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3f4fc:	add	x2, x2, #0xbf0
   3f500:	add	x0, x0, #0xbd0
   3f504:	mov	w1, #0x37                  	// #55
   3f508:	bl	cb40 <mpfr_assert_fail@plt>
   3f50c:	b	3f3fc <mpfr_get_z@@Base+0xdc>
   3f510:	mrs	x1, tpidr_el0
   3f514:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f518:	ldr	x2, [x0, #2576]
   3f51c:	add	x0, x0, #0xa10
   3f520:	blr	x2
   3f524:	add	x0, x1, x0
   3f528:	ldr	w1, [x0]
   3f52c:	orr	w1, w1, #0x10
   3f530:	str	w1, [x0]
   3f534:	b	3f4b4 <mpfr_get_z@@Base+0x194>
   3f538:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3f53c:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3f540:	add	x2, x2, #0xb88
   3f544:	add	x0, x0, #0xbd0
   3f548:	mov	w1, #0x31                  	// #49
   3f54c:	bl	cb40 <mpfr_assert_fail@plt>

000000000003f550 <mpfr_zero_p@@Base>:
   3f550:	ldr	x0, [x0, #16]
   3f554:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   3f558:	cmp	x0, x1
   3f55c:	cset	w0, eq  // eq = none
   3f560:	ret
   3f564:	nop

000000000003f568 <mpfr_clear_cache@@Base>:
   3f568:	ldr	x1, [x0]
   3f56c:	cbnz	x1, 3f574 <mpfr_clear_cache@@Base+0xc>
   3f570:	ret
   3f574:	stp	x29, x30, [sp, #-32]!
   3f578:	mov	x29, sp
   3f57c:	str	x19, [sp, #16]
   3f580:	mov	x19, x0
   3f584:	bl	c070 <mpfr_clear@plt>
   3f588:	str	xzr, [x19]
   3f58c:	ldr	x19, [sp, #16]
   3f590:	ldp	x29, x30, [sp], #32
   3f594:	ret

000000000003f598 <mpfr_cache@@Base>:
   3f598:	stp	x29, x30, [sp, #-96]!
   3f59c:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   3f5a0:	mov	x29, sp
   3f5a4:	stp	x21, x22, [sp, #32]
   3f5a8:	mrs	x21, tpidr_el0
   3f5ac:	mov	x22, x1
   3f5b0:	stp	x19, x20, [sp, #16]
   3f5b4:	mov	x20, x0
   3f5b8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f5bc:	ldr	x1, [x0, #2576]
   3f5c0:	add	x0, x0, #0xa10
   3f5c4:	blr	x1
   3f5c8:	stp	x23, x24, [sp, #48]
   3f5cc:	mov	w19, w2
   3f5d0:	ldr	w24, [x21, x0]
   3f5d4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f5d8:	ldr	x1, [x0, #2512]
   3f5dc:	add	x0, x0, #0x9d0
   3f5e0:	blr	x1
   3f5e4:	add	x3, x21, x0
   3f5e8:	stp	x25, x26, [sp, #64]
   3f5ec:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   3f5f0:	stp	x27, x28, [sp, #80]
   3f5f4:	ldr	x23, [x22]
   3f5f8:	ldr	x27, [x20]
   3f5fc:	ldr	x25, [x21, x0]
   3f600:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f604:	ldr	x5, [x0, #2544]
   3f608:	add	x0, x0, #0x9f0
   3f60c:	blr	x5
   3f610:	str	x4, [x3]
   3f614:	cmp	x27, x23
   3f618:	ldr	x26, [x21, x0]
   3f61c:	str	x1, [x21, x0]
   3f620:	b.gt	3fa08 <mpfr_cache@@Base+0x470>
   3f624:	ldr	w27, [x22, #8]
   3f628:	cmp	w27, #0x0
   3f62c:	b.le	3f994 <mpfr_cache@@Base+0x3fc>
   3f630:	ldr	x0, [x22, #16]
   3f634:	str	x0, [x20, #16]
   3f638:	ldr	x3, [x20]
   3f63c:	sub	x0, x23, #0x1
   3f640:	ldr	x8, [x22, #24]
   3f644:	sub	x6, x3, #0x1
   3f648:	str	w27, [x20, #8]
   3f64c:	cmp	x3, x23
   3f650:	asr	x0, x0, #6
   3f654:	asr	x6, x6, #6
   3f658:	ldr	x23, [x20, #24]
   3f65c:	b.ge	3f958 <mpfr_cache@@Base+0x3c0>  // b.tcont
   3f660:	sub	x0, x0, x6
   3f664:	neg	w3, w3
   3f668:	ands	w3, w3, #0x3f
   3f66c:	add	x2, x6, #0x1
   3f670:	add	x1, x8, x0, lsl #3
   3f674:	b.eq	3f9bc <mpfr_cache@@Base+0x424>  // b.none
   3f678:	ldr	x4, [x8, x0, lsl #3]
   3f67c:	sub	w5, w3, #0x1
   3f680:	mov	x3, #0x1                   	// #1
   3f684:	cmp	w19, #0x0
   3f688:	lsl	x3, x3, x5
   3f68c:	and	x9, x4, x3
   3f690:	sub	x3, x3, #0x1
   3f694:	ccmp	x9, #0x0, #0x4, ne  // ne = any
   3f698:	and	x3, x3, x4
   3f69c:	b.ne	3f6c8 <mpfr_cache@@Base+0x130>  // b.any
   3f6a0:	cmp	x0, #0x0
   3f6a4:	mov	x4, x0
   3f6a8:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   3f6ac:	b.ne	3f6c8 <mpfr_cache@@Base+0x130>  // b.any
   3f6b0:	mvn	x7, x0
   3f6b4:	add	x7, x1, x7, lsl #3
   3f6b8:	ldr	x3, [x7, x4, lsl #3]
   3f6bc:	subs	x4, x4, #0x1
   3f6c0:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   3f6c4:	b.eq	3f6b8 <mpfr_cache@@Base+0x120>  // b.none
   3f6c8:	mov	x28, #0x2                   	// #2
   3f6cc:	lsl	x28, x28, x5
   3f6d0:	cmp	w19, #0x5
   3f6d4:	b.eq	3f8d8 <mpfr_cache@@Base+0x340>  // b.none
   3f6d8:	cbnz	w19, 3f7a8 <mpfr_cache@@Base+0x210>
   3f6dc:	cbnz	x9, 3f940 <mpfr_cache@@Base+0x3a8>
   3f6e0:	cbz	x3, 3f8d8 <mpfr_cache@@Base+0x340>
   3f6e4:	neg	w27, w27
   3f6e8:	cmp	x23, x1
   3f6ec:	b.eq	3f6fc <mpfr_cache@@Base+0x164>  // b.none
   3f6f0:	lsl	x2, x2, #3
   3f6f4:	mov	x0, x23
   3f6f8:	bl	ba10 <memcpy@plt>
   3f6fc:	ldr	x0, [x23]
   3f700:	neg	x5, x28
   3f704:	and	x5, x0, x5
   3f708:	str	x5, [x23]
   3f70c:	ldr	w0, [x22, #32]
   3f710:	cbz	w0, 3f848 <mpfr_cache@@Base+0x2b0>
   3f714:	cmp	w19, #0x3
   3f718:	b.eq	3f8f4 <mpfr_cache@@Base+0x35c>  // b.none
   3f71c:	b.gt	3f8e0 <mpfr_cache@@Base+0x348>
   3f720:	cmp	w19, #0x1
   3f724:	b.eq	3f8f4 <mpfr_cache@@Base+0x35c>  // b.none
   3f728:	cmp	w19, #0x2
   3f72c:	b.ne	3f8e8 <mpfr_cache@@Base+0x350>  // b.any
   3f730:	cbz	w27, 3fa9c <mpfr_cache@@Base+0x504>
   3f734:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f738:	ldr	x1, [x0, #2576]
   3f73c:	add	x0, x0, #0xa10
   3f740:	blr	x1
   3f744:	str	w24, [x21, x0]
   3f748:	ldr	x1, [x20, #16]
   3f74c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f750:	ldr	x2, [x0, #2512]
   3f754:	add	x0, x0, #0x9d0
   3f758:	blr	x2
   3f75c:	str	x25, [x21, x0]
   3f760:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f764:	ldr	x2, [x0, #2544]
   3f768:	add	x0, x0, #0x9f0
   3f76c:	blr	x2
   3f770:	str	x26, [x21, x0]
   3f774:	cmp	x25, x1
   3f778:	ccmp	x26, x1, #0x1, le
   3f77c:	b.ge	3f898 <mpfr_cache@@Base+0x300>  // b.tcont
   3f780:	mov	w2, w19
   3f784:	mov	w1, w27
   3f788:	mov	x0, x20
   3f78c:	ldp	x19, x20, [sp, #16]
   3f790:	ldp	x21, x22, [sp, #32]
   3f794:	ldp	x23, x24, [sp, #48]
   3f798:	ldp	x25, x26, [sp, #64]
   3f79c:	ldp	x27, x28, [sp, #80]
   3f7a0:	ldp	x29, x30, [sp], #96
   3f7a4:	b	cb30 <mpfr_check_range@plt>
   3f7a8:	orr	x3, x3, x9
   3f7ac:	cmp	w19, #0x1
   3f7b0:	b.eq	3f6e0 <mpfr_cache@@Base+0x148>  // b.none
   3f7b4:	cmp	w19, #0x3
   3f7b8:	b.eq	3f6e0 <mpfr_cache@@Base+0x148>  // b.none
   3f7bc:	cbz	x3, 3f8d8 <mpfr_cache@@Base+0x340>
   3f7c0:	ldr	x4, [x8, x0, lsl #3]
   3f7c4:	adds	x3, x4, x28
   3f7c8:	str	x3, [x23]
   3f7cc:	b.cc	3f914 <mpfr_cache@@Base+0x37c>  // b.lo, b.ul, b.last
   3f7d0:	mov	x0, #0x1                   	// #1
   3f7d4:	b	3f7f0 <mpfr_cache@@Base+0x258>
   3f7d8:	ldr	x4, [x1, x0, lsl #3]
   3f7dc:	add	x3, x0, #0x1
   3f7e0:	add	x4, x4, #0x1
   3f7e4:	str	x4, [x23, x0, lsl #3]
   3f7e8:	cbnz	x4, 3fa50 <mpfr_cache@@Base+0x4b8>
   3f7ec:	mov	x0, x3
   3f7f0:	cmp	x2, x0
   3f7f4:	b.gt	3f7d8 <mpfr_cache@@Base+0x240>
   3f7f8:	add	x2, x23, x2, lsl #3
   3f7fc:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   3f800:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f804:	ldr	x3, [x0, #2544]
   3f808:	add	x0, x0, #0x9f0
   3f80c:	blr	x3
   3f810:	stur	x1, [x2, #-8]
   3f814:	ldr	x1, [x20, #16]
   3f818:	ldr	x2, [x21, x0]
   3f81c:	add	x0, x1, #0x1
   3f820:	str	x0, [x20, #16]
   3f824:	cmp	x0, x2
   3f828:	b.gt	3fae0 <mpfr_cache@@Base+0x548>
   3f82c:	nop
   3f830:	ldr	x3, [x23]
   3f834:	neg	x5, x28
   3f838:	ldr	w0, [x22, #32]
   3f83c:	and	x3, x5, x3
   3f840:	str	x3, [x23]
   3f844:	cbnz	w0, 3f714 <mpfr_cache@@Base+0x17c>
   3f848:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f84c:	ldr	x1, [x0, #2576]
   3f850:	add	x0, x0, #0xa10
   3f854:	blr	x1
   3f858:	str	w24, [x21, x0]
   3f85c:	ldr	x1, [x20, #16]
   3f860:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f864:	ldr	x2, [x0, #2512]
   3f868:	add	x0, x0, #0x9d0
   3f86c:	blr	x2
   3f870:	str	x25, [x21, x0]
   3f874:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f878:	ldr	x2, [x0, #2544]
   3f87c:	add	x0, x0, #0x9f0
   3f880:	blr	x2
   3f884:	str	x26, [x21, x0]
   3f888:	cmp	x25, x1
   3f88c:	ccmp	x26, x1, #0x1, le
   3f890:	b.lt	3f780 <mpfr_cache@@Base+0x1e8>  // b.tstop
   3f894:	cbz	w27, 3f8b0 <mpfr_cache@@Base+0x318>
   3f898:	orr	w24, w24, #0x8
   3f89c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3f8a0:	ldr	x1, [x0, #2576]
   3f8a4:	add	x0, x0, #0xa10
   3f8a8:	blr	x1
   3f8ac:	str	w24, [x21, x0]
   3f8b0:	mov	w0, w27
   3f8b4:	ldp	x19, x20, [sp, #16]
   3f8b8:	ldp	x21, x22, [sp, #32]
   3f8bc:	ldp	x23, x24, [sp, #48]
   3f8c0:	ldp	x25, x26, [sp, #64]
   3f8c4:	ldp	x27, x28, [sp, #80]
   3f8c8:	ldp	x29, x30, [sp], #96
   3f8cc:	ret
   3f8d0:	mov	x28, #0x1                   	// #1
   3f8d4:	nop
   3f8d8:	mov	w27, #0x0                   	// #0
   3f8dc:	b	3f6e8 <mpfr_cache@@Base+0x150>
   3f8e0:	cmp	w19, #0x4
   3f8e4:	b.eq	3f730 <mpfr_cache@@Base+0x198>  // b.none
   3f8e8:	cmp	w27, #0x0
   3f8ec:	csel	w27, w27, w0, ne  // ne = any
   3f8f0:	b	3f734 <mpfr_cache@@Base+0x19c>
   3f8f4:	cbnz	w27, 3f734 <mpfr_cache@@Base+0x19c>
   3f8f8:	mov	w27, w0
   3f8fc:	cmp	w0, #0x0
   3f900:	b.le	3f734 <mpfr_cache@@Base+0x19c>
   3f904:	neg	w27, w0
   3f908:	mov	x0, x20
   3f90c:	bl	bdd0 <mpfr_nextbelow@plt>
   3f910:	b	3f734 <mpfr_cache@@Base+0x19c>
   3f914:	cmp	x23, x1
   3f918:	b.eq	3f834 <mpfr_cache@@Base+0x29c>  // b.none
   3f91c:	cmp	x2, #0x1
   3f920:	b.eq	3f834 <mpfr_cache@@Base+0x29c>  // b.none
   3f924:	mov	x0, #0x1                   	// #1
   3f928:	ldr	x3, [x1, x0, lsl #3]
   3f92c:	str	x3, [x23, x0, lsl #3]
   3f930:	add	x0, x0, #0x1
   3f934:	cmp	x0, x2
   3f938:	b.ne	3f928 <mpfr_cache@@Base+0x390>  // b.any
   3f93c:	b	3f830 <mpfr_cache@@Base+0x298>
   3f940:	cbnz	x3, 3f7c0 <mpfr_cache@@Base+0x228>
   3f944:	ldr	w3, [x22, #32]
   3f948:	cmp	w3, #0x0
   3f94c:	cbz	w3, 3fad0 <mpfr_cache@@Base+0x538>
   3f950:	b.ge	3f6e4 <mpfr_cache@@Base+0x14c>  // b.tcont
   3f954:	b	3f7c0 <mpfr_cache@@Base+0x228>
   3f958:	sub	x6, x6, x0
   3f95c:	add	x2, x0, #0x1
   3f960:	lsl	x27, x6, #3
   3f964:	add	x0, x23, x27
   3f968:	cmp	x0, x8
   3f96c:	b.eq	3f97c <mpfr_cache@@Base+0x3e4>  // b.none
   3f970:	lsl	x2, x2, #3
   3f974:	mov	x1, x8
   3f978:	bl	ba10 <memcpy@plt>
   3f97c:	mov	x2, x27
   3f980:	mov	x0, x23
   3f984:	mov	w1, #0x0                   	// #0
   3f988:	mov	w27, #0x0                   	// #0
   3f98c:	bl	c110 <memset@plt>
   3f990:	b	3f70c <mpfr_cache@@Base+0x174>
   3f994:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3f998:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   3f99c:	add	x2, x2, #0xc68
   3f9a0:	add	x0, x0, #0xc88
   3f9a4:	mov	w1, #0x76                  	// #118
   3f9a8:	bl	cb40 <mpfr_assert_fail@plt>
   3f9ac:	ldr	x0, [x22, #16]
   3f9b0:	ldr	w27, [x22, #8]
   3f9b4:	str	x0, [x20, #16]
   3f9b8:	b	3f638 <mpfr_cache@@Base+0xa0>
   3f9bc:	ldur	x3, [x1, #-8]
   3f9c0:	cmp	w19, #0x0
   3f9c4:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   3f9c8:	and	x9, x3, #0x8000000000000000
   3f9cc:	and	x5, x3, #0x7fffffffffffffff
   3f9d0:	b.lt	3fa78 <mpfr_cache@@Base+0x4e0>  // b.tstop
   3f9d4:	cmp	x5, #0x0
   3f9d8:	sub	x4, x0, #0x1
   3f9dc:	ccmp	x4, #0x0, #0x4, eq  // eq = none
   3f9e0:	b.eq	3fac4 <mpfr_cache@@Base+0x52c>  // b.none
   3f9e4:	mvn	x5, x0
   3f9e8:	add	x5, x1, x5, lsl #3
   3f9ec:	nop
   3f9f0:	ldr	x3, [x5, x4, lsl #3]
   3f9f4:	subs	x4, x4, #0x1
   3f9f8:	ccmp	x3, #0x0, #0x0, ne  // ne = any
   3f9fc:	b.eq	3f9f0 <mpfr_cache@@Base+0x458>  // b.none
   3fa00:	mov	x28, #0x1                   	// #1
   3fa04:	b	3f6d0 <mpfr_cache@@Base+0x138>
   3fa08:	cbz	x23, 3fab4 <mpfr_cache@@Base+0x51c>
   3fa0c:	mov	x0, #0x6666666666666666    	// #7378697629483820646
   3fa10:	movk	x0, #0x6667
   3fa14:	smulh	x0, x23, x0
   3fa18:	asr	x0, x0, #2
   3fa1c:	sub	x0, x0, x23, asr #63
   3fa20:	add	x23, x23, x0
   3fa24:	cmp	x23, x27
   3fa28:	mov	x0, x22
   3fa2c:	csel	x23, x23, x27, ge  // ge = tcont
   3fa30:	mov	x1, x23
   3fa34:	bl	bed0 <mpfr_set_prec@plt>
   3fa38:	ldr	x2, [x22, #40]
   3fa3c:	mov	x0, x22
   3fa40:	mov	w1, #0x0                   	// #0
   3fa44:	blr	x2
   3fa48:	str	w0, [x22, #32]
   3fa4c:	b	3f624 <mpfr_cache@@Base+0x8c>
   3fa50:	cmp	x23, x1
   3fa54:	b.eq	3f830 <mpfr_cache@@Base+0x298>  // b.none
   3fa58:	cmp	x0, x6
   3fa5c:	b.ge	3f830 <mpfr_cache@@Base+0x298>  // b.tcont
   3fa60:	ldr	x0, [x1, x3, lsl #3]
   3fa64:	str	x0, [x23, x3, lsl #3]
   3fa68:	cmp	x3, x6
   3fa6c:	add	x3, x3, #0x1
   3fa70:	b.lt	3fa60 <mpfr_cache@@Base+0x4c8>  // b.tstop
   3fa74:	b	3f830 <mpfr_cache@@Base+0x298>
   3fa78:	cmp	w19, #0x5
   3fa7c:	b.eq	3f8d0 <mpfr_cache@@Base+0x338>  // b.none
   3fa80:	cmp	w19, #0x1
   3fa84:	mov	x28, #0x1                   	// #1
   3fa88:	b.eq	3f6e4 <mpfr_cache@@Base+0x14c>  // b.none
   3fa8c:	cmp	w19, #0x3
   3fa90:	b.eq	3f6e4 <mpfr_cache@@Base+0x14c>  // b.none
   3fa94:	cbnz	x3, 3f7c0 <mpfr_cache@@Base+0x228>
   3fa98:	b	3f8d8 <mpfr_cache@@Base+0x340>
   3fa9c:	mov	w27, w0
   3faa0:	tbz	w0, #31, 3f734 <mpfr_cache@@Base+0x19c>
   3faa4:	neg	w27, w0
   3faa8:	mov	x0, x20
   3faac:	bl	c120 <mpfr_nextabove@plt>
   3fab0:	b	3f734 <mpfr_cache@@Base+0x19c>
   3fab4:	mov	x1, x27
   3fab8:	mov	x0, x22
   3fabc:	bl	ca80 <mpfr_init2@plt>
   3fac0:	b	3fa24 <mpfr_cache@@Base+0x48c>
   3fac4:	mov	x3, x5
   3fac8:	mov	x28, #0x1                   	// #1
   3facc:	b	3f6d0 <mpfr_cache@@Base+0x138>
   3fad0:	ldr	x4, [x8, x0, lsl #3]
   3fad4:	tst	x28, x4
   3fad8:	b.ne	3f7c4 <mpfr_cache@@Base+0x22c>  // b.any
   3fadc:	b	3f6e4 <mpfr_cache@@Base+0x14c>
   3fae0:	mov	w2, w27
   3fae4:	mov	w1, w19
   3fae8:	mov	x0, x20
   3faec:	bl	bf40 <mpfr_overflow@plt>
   3faf0:	b	3f830 <mpfr_cache@@Base+0x298>
   3faf4:	nop

000000000003faf8 <mpfr_sqr@@Base>:
   3faf8:	stp	x29, x30, [sp, #-160]!
   3fafc:	mov	x29, sp
   3fb00:	stp	x21, x22, [sp, #32]
   3fb04:	ldr	x21, [x1, #16]
   3fb08:	stp	x19, x20, [sp, #16]
   3fb0c:	mov	x20, x0
   3fb10:	stp	x23, x24, [sp, #48]
   3fb14:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   3fb18:	cmp	x21, x0
   3fb1c:	stp	x25, x26, [sp, #64]
   3fb20:	stp	x27, x28, [sp, #80]
   3fb24:	b.le	40024 <mpfr_sqr@@Base+0x52c>
   3fb28:	ldr	x3, [x1]
   3fb2c:	mov	x25, x1
   3fb30:	ldr	x23, [x20]
   3fb34:	cmp	x3, #0x40
   3fb38:	cset	w0, le
   3fb3c:	mov	w22, w2
   3fb40:	cmp	x23, #0x3f
   3fb44:	lsl	x21, x21, #1
   3fb48:	ccmp	w0, #0x0, #0x4, le
   3fb4c:	b.ne	3fe94 <mpfr_sqr@@Base+0x39c>  // b.any
   3fb50:	sub	x1, x23, #0x41
   3fb54:	cmp	x1, #0x3e
   3fb58:	b.ls	3fcb0 <mpfr_sqr@@Base+0x1b8>  // b.plast
   3fb5c:	cmp	x23, #0x40
   3fb60:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   3fb64:	b.ne	3fe10 <mpfr_sqr@@Base+0x318>  // b.any
   3fb68:	sub	x0, x23, #0x81
   3fb6c:	cmp	x0, #0x3e
   3fb70:	b.hi	3fb80 <mpfr_sqr@@Base+0x88>  // b.pmore
   3fb74:	sub	x0, x3, #0x81
   3fb78:	cmp	x0, #0x3f
   3fb7c:	b.ls	40054 <mpfr_sqr@@Base+0x55c>  // b.plast
   3fb80:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   3fb84:	lsl	x28, x3, #1
   3fb88:	cmp	x0, x3, lsl #1
   3fb8c:	b.ls	404fc <mpfr_sqr@@Base+0xa04>  // b.plast
   3fb90:	sub	x19, x3, #0x1
   3fb94:	sub	x2, x28, #0x1
   3fb98:	asr	x19, x19, #6
   3fb9c:	asr	x2, x2, #6
   3fba0:	add	x19, x19, #0x1
   3fba4:	add	x24, x2, #0x1
   3fba8:	cmp	x19, #0x14
   3fbac:	b.gt	402c8 <mpfr_sqr@@Base+0x7d0>
   3fbb0:	mov	x0, sp
   3fbb4:	lsl	x27, x19, #4
   3fbb8:	sub	x0, x0, x19, lsl #4
   3fbbc:	mov	x2, x19
   3fbc0:	mov	sp, x0
   3fbc4:	lsl	x19, x19, #1
   3fbc8:	ldr	x1, [x25, #24]
   3fbcc:	mov	x26, sp
   3fbd0:	add	x27, x26, x27
   3fbd4:	sub	x19, x19, x24
   3fbd8:	bl	c3b0 <__gmpn_sqr@plt>
   3fbdc:	ldur	x0, [x27, #-8]
   3fbe0:	add	x1, x26, x19, lsl #3
   3fbe4:	lsr	x19, x0, #63
   3fbe8:	tbz	x0, #63, 402e4 <mpfr_sqr@@Base+0x7ec>
   3fbec:	ldr	x0, [x20, #24]
   3fbf0:	mov	x4, x23
   3fbf4:	mov	x2, x28
   3fbf8:	add	x6, x29, #0x70
   3fbfc:	mov	w5, w22
   3fc00:	mov	w3, #0x0                   	// #0
   3fc04:	bl	ca20 <mpfr_round_raw@plt>
   3fc08:	mov	w1, w0
   3fc0c:	cbnz	w0, 40338 <mpfr_sqr@@Base+0x840>
   3fc10:	mrs	x3, tpidr_el0
   3fc14:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3fc18:	ldr	x2, [x0, #2544]
   3fc1c:	add	x0, x0, #0x9f0
   3fc20:	blr	x2
   3fc24:	add	x1, x19, w1, sxtw
   3fc28:	sub	x2, x21, #0x1
   3fc2c:	add	x1, x2, x1
   3fc30:	ldr	x0, [x3, x0]
   3fc34:	cmp	x0, x1
   3fc38:	b.lt	3fdf8 <mpfr_sqr@@Base+0x300>  // b.tstop
   3fc3c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3fc40:	ldr	x2, [x0, #2512]
   3fc44:	add	x0, x0, #0x9d0
   3fc48:	blr	x2
   3fc4c:	ldr	x0, [x3, x0]
   3fc50:	cmp	x0, x1
   3fc54:	b.gt	40300 <mpfr_sqr@@Base+0x808>
   3fc58:	ldr	w2, [x29, #112]
   3fc5c:	mov	w0, #0x1                   	// #1
   3fc60:	str	w0, [x20, #8]
   3fc64:	str	x1, [x20, #16]
   3fc68:	cbz	w2, 3fc8c <mpfr_sqr@@Base+0x194>
   3fc6c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3fc70:	ldr	x1, [x0, #2576]
   3fc74:	add	x0, x0, #0xa10
   3fc78:	blr	x1
   3fc7c:	add	x0, x3, x0
   3fc80:	ldr	w1, [x0]
   3fc84:	orr	w1, w1, #0x8
   3fc88:	str	w1, [x0]
   3fc8c:	mov	sp, x29
   3fc90:	mov	w0, w2
   3fc94:	ldp	x19, x20, [sp, #16]
   3fc98:	ldp	x21, x22, [sp, #32]
   3fc9c:	ldp	x23, x24, [sp, #48]
   3fca0:	ldp	x25, x26, [sp, #64]
   3fca4:	ldp	x27, x28, [sp, #80]
   3fca8:	ldp	x29, x30, [sp], #160
   3fcac:	ret
   3fcb0:	sub	x0, x3, #0x41
   3fcb4:	cmp	x0, #0x3f
   3fcb8:	b.hi	3fb80 <mpfr_sqr@@Base+0x88>  // b.pmore
   3fcbc:	ldr	x1, [x25, #24]
   3fcc0:	mov	x4, #0x80                  	// #128
   3fcc4:	sub	x23, x4, x23
   3fcc8:	mov	x7, #0x1                   	// #1
   3fccc:	mov	x8, x7
   3fcd0:	ldp	x4, x0, [x1]
   3fcd4:	umulh	x6, x0, x4
   3fcd8:	lsl	x2, x6, #1
   3fcdc:	lsl	x7, x7, x23
   3fce0:	sub	x3, x7, #0x1
   3fce4:	mov	x9, x8
   3fce8:	ldr	x10, [x20, #24]
   3fcec:	mul	x1, x0, x0
   3fcf0:	adds	x1, x1, x2
   3fcf4:	mov	x5, x1
   3fcf8:	add	x1, x1, #0x2
   3fcfc:	and	x1, x1, x3, lsr #2
   3fd00:	umulh	x2, x0, x0
   3fd04:	add	x6, x2, x6, lsr #63
   3fd08:	cinc	x6, x6, cs  // cs = hs, nlast
   3fd0c:	cmp	x1, #0x2
   3fd10:	b.ls	40228 <mpfr_sqr@@Base+0x730>  // b.plast
   3fd14:	tbnz	x6, #63, 3fd28 <mpfr_sqr@@Base+0x230>
   3fd18:	sub	x21, x21, #0x1
   3fd1c:	extr	x6, x6, x5, #63
   3fd20:	extr	x5, x5, x9, #63
   3fd24:	lsl	x9, x9, #1
   3fd28:	neg	x11, x7
   3fd2c:	mrs	x1, tpidr_el0
   3fd30:	and	x12, x5, x11
   3fd34:	stp	x12, x6, [x10]
   3fd38:	sub	w4, w23, #0x1
   3fd3c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3fd40:	ldr	x13, [x0, #2544]
   3fd44:	add	x0, x0, #0x9f0
   3fd48:	blr	x13
   3fd4c:	mov	x2, #0x1                   	// #1
   3fd50:	ldr	x13, [x1, x0]
   3fd54:	lsl	x4, x2, x4
   3fd58:	eor	x3, x3, x4
   3fd5c:	str	w2, [x20, #8]
   3fd60:	orr	x0, x8, x9
   3fd64:	and	x3, x3, x5
   3fd68:	orr	x3, x3, x0
   3fd6c:	cmp	x13, x21
   3fd70:	and	x8, x4, x5
   3fd74:	b.lt	40490 <mpfr_sqr@@Base+0x998>  // b.tstop
   3fd78:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3fd7c:	ldr	x2, [x0, #2512]
   3fd80:	add	x0, x0, #0x9d0
   3fd84:	blr	x2
   3fd88:	ldr	x0, [x1, x0]
   3fd8c:	cmp	x21, x0
   3fd90:	b.lt	403f4 <mpfr_sqr@@Base+0x8fc>  // b.tstop
   3fd94:	str	x21, [x20, #16]
   3fd98:	orr	x0, x8, x3
   3fd9c:	cbz	x0, 3fe8c <mpfr_sqr@@Base+0x394>
   3fda0:	cmp	w22, #0x5
   3fda4:	b.eq	3fe8c <mpfr_sqr@@Base+0x394>  // b.none
   3fda8:	cbz	w22, 403cc <mpfr_sqr@@Base+0x8d4>
   3fdac:	and	w0, w22, #0xfffffffd
   3fdb0:	cmp	w0, #0x1
   3fdb4:	b.eq	401e8 <mpfr_sqr@@Base+0x6f0>  // b.none
   3fdb8:	ldr	x0, [x10]
   3fdbc:	add	x7, x7, x0
   3fdc0:	ldr	x0, [x10, #8]
   3fdc4:	str	x7, [x10]
   3fdc8:	cmp	x7, #0x0
   3fdcc:	cinc	x0, x0, eq  // eq = none
   3fdd0:	cbnz	x0, 40458 <mpfr_sqr@@Base+0x960>
   3fdd4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3fdd8:	ldr	x2, [x0, #2544]
   3fddc:	add	x0, x0, #0x9f0
   3fde0:	blr	x2
   3fde4:	ldr	x0, [x1, x0]
   3fde8:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   3fdec:	str	x2, [x10, #8]
   3fdf0:	cmp	x21, x0
   3fdf4:	b.lt	3fff4 <mpfr_sqr@@Base+0x4fc>  // b.tstop
   3fdf8:	mov	w2, #0x1                   	// #1
   3fdfc:	mov	w1, w22
   3fe00:	mov	x0, x20
   3fe04:	bl	bf40 <mpfr_overflow@plt>
   3fe08:	mov	w2, w0
   3fe0c:	b	3fc8c <mpfr_sqr@@Base+0x194>
   3fe10:	ldr	x0, [x25, #24]
   3fe14:	ldr	x5, [x20, #24]
   3fe18:	ldr	x0, [x0]
   3fe1c:	umulh	x4, x0, x0
   3fe20:	mul	x3, x0, x0
   3fe24:	tbnz	x4, #63, 3fe34 <mpfr_sqr@@Base+0x33c>
   3fe28:	sub	x21, x21, #0x1
   3fe2c:	extr	x4, x4, x3, #63
   3fe30:	lsl	x3, x3, #1
   3fe34:	mrs	x1, tpidr_el0
   3fe38:	str	x4, [x5]
   3fe3c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3fe40:	ldr	x2, [x0, #2544]
   3fe44:	add	x0, x0, #0x9f0
   3fe48:	blr	x2
   3fe4c:	mov	w2, #0x1                   	// #1
   3fe50:	str	w2, [x20, #8]
   3fe54:	ldr	x0, [x1, x0]
   3fe58:	cmp	x0, x21
   3fe5c:	b.lt	40490 <mpfr_sqr@@Base+0x998>  // b.tstop
   3fe60:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3fe64:	ldr	x2, [x0, #2512]
   3fe68:	add	x0, x0, #0x9d0
   3fe6c:	blr	x2
   3fe70:	ldr	x0, [x1, x0]
   3fe74:	cmp	x21, x0
   3fe78:	b.lt	3ff8c <mpfr_sqr@@Base+0x494>  // b.tstop
   3fe7c:	str	x21, [x20, #16]
   3fe80:	cmp	x3, #0x0
   3fe84:	ccmp	w22, #0x5, #0x4, ne  // ne = any
   3fe88:	b.ne	3ffb0 <mpfr_sqr@@Base+0x4b8>  // b.any
   3fe8c:	mov	w2, #0x0                   	// #0
   3fe90:	b	3fc8c <mpfr_sqr@@Base+0x194>
   3fe94:	ldr	x0, [x1, #24]
   3fe98:	mov	x4, #0x40                  	// #64
   3fe9c:	sub	x23, x4, x23
   3fea0:	mov	x8, #0x1                   	// #1
   3fea4:	ldr	x11, [x20, #24]
   3fea8:	lsl	x8, x8, x23
   3feac:	ldr	x0, [x0]
   3feb0:	sub	x5, x8, #0x1
   3feb4:	umulh	x7, x0, x0
   3feb8:	mul	x3, x0, x0
   3febc:	tbnz	x7, #63, 3fecc <mpfr_sqr@@Base+0x3d4>
   3fec0:	sub	x21, x21, #0x1
   3fec4:	extr	x7, x7, x3, #63
   3fec8:	lsl	x3, x3, #1
   3fecc:	neg	x9, x8
   3fed0:	mrs	x1, tpidr_el0
   3fed4:	and	x4, x7, x9
   3fed8:	str	x4, [x11]
   3fedc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3fee0:	ldr	x2, [x0, #2544]
   3fee4:	add	x0, x0, #0x9f0
   3fee8:	blr	x2
   3feec:	sub	w6, w23, #0x1
   3fef0:	mov	x2, #0x1                   	// #1
   3fef4:	str	w2, [x20, #8]
   3fef8:	ldr	x10, [x1, x0]
   3fefc:	lsl	x0, x2, x6
   3ff00:	eor	x5, x5, x0
   3ff04:	and	x6, x0, x7
   3ff08:	and	x0, x5, x7
   3ff0c:	cmp	x10, x21
   3ff10:	orr	x3, x0, x3
   3ff14:	b.lt	40490 <mpfr_sqr@@Base+0x998>  // b.tstop
   3ff18:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3ff1c:	ldr	x2, [x0, #2512]
   3ff20:	add	x0, x0, #0x9d0
   3ff24:	blr	x2
   3ff28:	ldr	x0, [x1, x0]
   3ff2c:	cmp	x21, x0
   3ff30:	b.lt	40390 <mpfr_sqr@@Base+0x898>  // b.tstop
   3ff34:	str	x21, [x20, #16]
   3ff38:	orr	x0, x6, x3
   3ff3c:	cbz	x0, 3fe8c <mpfr_sqr@@Base+0x394>
   3ff40:	cmp	w22, #0x5
   3ff44:	b.eq	3fe8c <mpfr_sqr@@Base+0x394>  // b.none
   3ff48:	cbz	w22, 40210 <mpfr_sqr@@Base+0x718>
   3ff4c:	and	w0, w22, #0xfffffffd
   3ff50:	cmp	w0, #0x1
   3ff54:	b.eq	401e8 <mpfr_sqr@@Base+0x6f0>  // b.none
   3ff58:	ldr	x0, [x11]
   3ff5c:	adds	x0, x0, x8
   3ff60:	b.ne	403ec <mpfr_sqr@@Base+0x8f4>  // b.any
   3ff64:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3ff68:	str	x0, [x11]
   3ff6c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3ff70:	ldr	x2, [x0, #2544]
   3ff74:	add	x0, x0, #0x9f0
   3ff78:	blr	x2
   3ff7c:	ldr	x0, [x1, x0]
   3ff80:	cmp	x21, x0
   3ff84:	b.lt	3fff4 <mpfr_sqr@@Base+0x4fc>  // b.tstop
   3ff88:	b	3fdf8 <mpfr_sqr@@Base+0x300>
   3ff8c:	sub	x0, x0, #0x1
   3ff90:	cmp	x21, x0
   3ff94:	ccmn	x4, #0x1, #0x0, eq  // eq = none
   3ff98:	b.ne	40514 <mpfr_sqr@@Base+0xa1c>  // b.any
   3ff9c:	sub	w2, w22, #0x2
   3ffa0:	tst	w2, #0xfffffffd
   3ffa4:	b.ne	40514 <mpfr_sqr@@Base+0xa1c>  // b.any
   3ffa8:	str	x21, [x20, #16]
   3ffac:	nop
   3ffb0:	cbnz	w22, 401dc <mpfr_sqr@@Base+0x6e4>
   3ffb4:	tbz	x3, #63, 401e8 <mpfr_sqr@@Base+0x6f0>
   3ffb8:	tst	x3, #0x7fffffffffffffff
   3ffbc:	ldr	x0, [x5]
   3ffc0:	b.ne	3ffc8 <mpfr_sqr@@Base+0x4d0>  // b.any
   3ffc4:	tbz	w0, #0, 401e8 <mpfr_sqr@@Base+0x6f0>
   3ffc8:	adds	x0, x0, #0x1
   3ffcc:	b.ne	40450 <mpfr_sqr@@Base+0x958>  // b.any
   3ffd0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   3ffd4:	str	x0, [x5]
   3ffd8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   3ffdc:	ldr	x2, [x0, #2544]
   3ffe0:	add	x0, x0, #0x9f0
   3ffe4:	blr	x2
   3ffe8:	ldr	x0, [x1, x0]
   3ffec:	cmp	x21, x0
   3fff0:	b.ge	3fdf8 <mpfr_sqr@@Base+0x300>  // b.tcont
   3fff4:	add	x21, x21, #0x1
   3fff8:	str	x21, [x20, #16]
   3fffc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   40000:	ldr	x2, [x0, #2576]
   40004:	add	x0, x0, #0xa10
   40008:	blr	x2
   4000c:	add	x0, x1, x0
   40010:	mov	w2, #0x1                   	// #1
   40014:	ldr	w3, [x0]
   40018:	orr	w3, w3, #0x8
   4001c:	str	w3, [x0]
   40020:	b	3fc8c <mpfr_sqr@@Base+0x194>
   40024:	mov	x1, #0x2                   	// #2
   40028:	movk	x1, #0x8000, lsl #48
   4002c:	cmp	x21, x1
   40030:	b.eq	40360 <mpfr_sqr@@Base+0x868>  // b.none
   40034:	mov	w1, #0x1                   	// #1
   40038:	str	w1, [x20, #8]
   4003c:	cmp	x21, x0
   40040:	b.eq	40354 <mpfr_sqr@@Base+0x85c>  // b.none
   40044:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   40048:	mov	w2, #0x0                   	// #0
   4004c:	str	x0, [x20, #16]
   40050:	b	3fc8c <mpfr_sqr@@Base+0x194>
   40054:	ldr	x1, [x25, #24]
   40058:	mov	x4, #0xc0                  	// #192
   4005c:	sub	x23, x4, x23
   40060:	mov	x24, #0x1                   	// #1
   40064:	mov	x7, x24
   40068:	ldp	x3, x0, [x1]
   4006c:	umulh	x4, x0, x0
   40070:	ldr	x2, [x1, #16]
   40074:	umulh	x5, x2, x0
   40078:	umulh	x3, x2, x3
   4007c:	lsl	x24, x24, x23
   40080:	sub	x19, x24, #0x1
   40084:	mul	x0, x2, x0
   40088:	mov	x9, x7
   4008c:	mul	x8, x2, x2
   40090:	adds	x0, x0, x3
   40094:	cinc	x5, x5, cs  // cs = hs, nlast
   40098:	lsl	x6, x0, #1
   4009c:	extr	x3, x5, x0, #63
   400a0:	adds	x3, x3, x8
   400a4:	cset	x8, cs  // cs = hs, nlast
   400a8:	adds	x6, x6, x4
   400ac:	cinc	x3, x3, cs  // cs = hs, nlast
   400b0:	cset	w0, cs  // cs = hs, nlast
   400b4:	cmp	x3, #0x0
   400b8:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   400bc:	add	x0, x6, #0x4
   400c0:	cinc	x8, x8, ne  // ne = any
   400c4:	and	x0, x0, x19, lsr #2
   400c8:	umulh	x2, x2, x2
   400cc:	add	x2, x2, x5, lsr #63
   400d0:	cmp	x0, #0x4
   400d4:	add	x2, x8, x2
   400d8:	ldr	x25, [x20, #24]
   400dc:	b.ls	40264 <mpfr_sqr@@Base+0x76c>  // b.plast
   400e0:	tbnz	x2, #63, 400f8 <mpfr_sqr@@Base+0x600>
   400e4:	sub	x21, x21, #0x1
   400e8:	extr	x2, x2, x3, #63
   400ec:	extr	x3, x3, x6, #63
   400f0:	extr	x6, x6, x9, #63
   400f4:	lsl	x9, x9, #1
   400f8:	neg	x12, x24
   400fc:	mrs	x1, tpidr_el0
   40100:	and	x10, x6, x12
   40104:	stp	x10, x3, [x25]
   40108:	sub	w5, w23, #0x1
   4010c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   40110:	ldr	x4, [x0, #2544]
   40114:	add	x0, x0, #0x9f0
   40118:	blr	x4
   4011c:	mov	x8, #0x1                   	// #1
   40120:	str	x2, [x25, #16]
   40124:	lsl	x5, x8, x5
   40128:	ldr	x11, [x1, x0]
   4012c:	eor	x4, x19, x5
   40130:	str	w8, [x20, #8]
   40134:	orr	x0, x7, x9
   40138:	and	x4, x4, x6
   4013c:	cmp	x11, x21
   40140:	orr	x4, x4, x0
   40144:	and	x7, x5, x6
   40148:	b.lt	4048c <mpfr_sqr@@Base+0x994>  // b.tstop
   4014c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   40150:	ldr	x8, [x0, #2512]
   40154:	add	x0, x0, #0x9d0
   40158:	blr	x8
   4015c:	ldr	x0, [x1, x0]
   40160:	cmp	x21, x0
   40164:	b.lt	40288 <mpfr_sqr@@Base+0x790>  // b.tstop
   40168:	str	x21, [x20, #16]
   4016c:	orr	x0, x7, x4
   40170:	cbz	x0, 3fe8c <mpfr_sqr@@Base+0x394>
   40174:	cmp	w22, #0x5
   40178:	b.eq	3fe8c <mpfr_sqr@@Base+0x394>  // b.none
   4017c:	cbz	w22, 40430 <mpfr_sqr@@Base+0x938>
   40180:	and	w0, w22, #0xfffffffd
   40184:	cmp	w0, #0x1
   40188:	b.eq	401e8 <mpfr_sqr@@Base+0x6f0>  // b.none
   4018c:	ldr	x0, [x25]
   40190:	add	x24, x0, x24
   40194:	ldp	x0, x2, [x25, #8]
   40198:	cmp	x24, #0x0
   4019c:	cinc	x0, x0, eq  // eq = none
   401a0:	stp	x24, x0, [x25]
   401a4:	orr	x3, x24, x0
   401a8:	cmp	x3, #0x0
   401ac:	cinc	x0, x2, eq  // eq = none
   401b0:	cbnz	x0, 40460 <mpfr_sqr@@Base+0x968>
   401b4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   401b8:	ldr	x2, [x0, #2544]
   401bc:	add	x0, x0, #0x9f0
   401c0:	blr	x2
   401c4:	ldr	x0, [x1, x0]
   401c8:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   401cc:	str	x2, [x25, #16]
   401d0:	cmp	x21, x0
   401d4:	b.lt	3fff4 <mpfr_sqr@@Base+0x4fc>  // b.tstop
   401d8:	b	3fdf8 <mpfr_sqr@@Base+0x300>
   401dc:	and	w0, w22, #0xfffffffd
   401e0:	cmp	w0, #0x1
   401e4:	b.ne	403e4 <mpfr_sqr@@Base+0x8ec>  // b.any
   401e8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   401ec:	ldr	x2, [x0, #2576]
   401f0:	add	x0, x0, #0xa10
   401f4:	blr	x2
   401f8:	add	x0, x1, x0
   401fc:	mov	w2, #0xffffffff            	// #-1
   40200:	ldr	w3, [x0]
   40204:	orr	w3, w3, #0x8
   40208:	str	w3, [x0]
   4020c:	b	3fc8c <mpfr_sqr@@Base+0x194>
   40210:	cbz	x6, 401e8 <mpfr_sqr@@Base+0x6f0>
   40214:	ldr	x0, [x11]
   40218:	cbnz	x3, 3ff5c <mpfr_sqr@@Base+0x464>
   4021c:	lsr	x23, x0, x23
   40220:	tbz	w23, #0, 401e8 <mpfr_sqr@@Base+0x6f0>
   40224:	b	3ff5c <mpfr_sqr@@Base+0x464>
   40228:	mul	x0, x0, x4
   4022c:	umulh	x2, x4, x4
   40230:	adds	x2, x0, x2
   40234:	mul	x8, x4, x4
   40238:	cset	x1, cs  // cs = hs, nlast
   4023c:	adds	x1, x5, x1
   40240:	cinc	x6, x6, cs  // cs = hs, nlast
   40244:	adds	x0, x0, x2
   40248:	cset	x5, cs  // cs = hs, nlast
   4024c:	mov	x9, x0
   40250:	adds	x1, x1, x5
   40254:	mov	x5, x1
   40258:	cinc	x6, x6, cs  // cs = hs, nlast
   4025c:	tbz	x6, #63, 3fd18 <mpfr_sqr@@Base+0x220>
   40260:	b	3fd28 <mpfr_sqr@@Base+0x230>
   40264:	add	x0, x29, #0x70
   40268:	mov	x2, #0x3                   	// #3
   4026c:	bl	c3b0 <__gmpn_sqr@plt>
   40270:	ldp	x0, x7, [x29, #112]
   40274:	ldp	x3, x2, [x29, #144]
   40278:	ldp	x9, x6, [x29, #128]
   4027c:	orr	x7, x7, x0
   40280:	tbz	x2, #63, 400e4 <mpfr_sqr@@Base+0x5ec>
   40284:	b	400f8 <mpfr_sqr@@Base+0x600>
   40288:	cmp	x12, x10
   4028c:	and	x8, x2, x3
   40290:	sub	x0, x0, #0x1
   40294:	ccmn	x8, #0x1, #0x0, eq  // eq = none
   40298:	ccmp	x21, x0, #0x0, eq  // eq = none
   4029c:	b.ne	40478 <mpfr_sqr@@Base+0x980>  // b.any
   402a0:	cmp	w22, #0x0
   402a4:	ccmp	x7, #0x0, #0x4, eq  // eq = none
   402a8:	b.ne	40470 <mpfr_sqr@@Base+0x978>  // b.any
   402ac:	sub	w8, w22, #0x2
   402b0:	tst	w8, #0xfffffffd
   402b4:	b.ne	40478 <mpfr_sqr@@Base+0x980>  // b.any
   402b8:	orr	x8, x7, x4
   402bc:	cbz	x8, 40478 <mpfr_sqr@@Base+0x980>
   402c0:	str	x21, [x20, #16]
   402c4:	b	4017c <mpfr_sqr@@Base+0x684>
   402c8:	mov	x2, x25
   402cc:	mov	w3, w22
   402d0:	mov	x0, x20
   402d4:	mov	x1, x25
   402d8:	bl	bd50 <mpfr_mul@plt>
   402dc:	mov	w2, w0
   402e0:	b	3fc8c <mpfr_sqr@@Base+0x194>
   402e4:	mov	x0, x1
   402e8:	mov	x2, x24
   402ec:	mov	w3, #0x1                   	// #1
   402f0:	str	x1, [x29, #104]
   402f4:	bl	bcc0 <__gmpn_lshift@plt>
   402f8:	ldr	x1, [x29, #104]
   402fc:	b	3fbec <mpfr_sqr@@Base+0xf4>
   40300:	cbnz	w22, 40320 <mpfr_sqr@@Base+0x828>
   40304:	add	x21, x19, x21
   40308:	cmp	x0, x21
   4030c:	b.gt	40484 <mpfr_sqr@@Base+0x98c>
   40310:	mov	x0, x25
   40314:	bl	bf00 <mpfr_powerof2_raw@plt>
   40318:	cmp	w0, #0x0
   4031c:	cset	w22, ne  // ne = any
   40320:	mov	w2, #0x1                   	// #1
   40324:	mov	w1, w22
   40328:	mov	x0, x20
   4032c:	bl	c3c0 <mpfr_underflow@plt>
   40330:	mov	w2, w0
   40334:	b	3fc8c <mpfr_sqr@@Base+0x194>
   40338:	ldr	x0, [x20]
   4033c:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   40340:	ldr	x2, [x20, #24]
   40344:	sub	x0, x0, #0x1
   40348:	asr	x0, x0, #6
   4034c:	str	x3, [x2, x0, lsl #3]
   40350:	b	3fc10 <mpfr_sqr@@Base+0x118>
   40354:	mov	w2, #0x0                   	// #0
   40358:	str	x21, [x20, #16]
   4035c:	b	3fc8c <mpfr_sqr@@Base+0x194>
   40360:	mrs	x1, tpidr_el0
   40364:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   40368:	ldr	x2, [x0, #2576]
   4036c:	add	x0, x0, #0xa10
   40370:	blr	x2
   40374:	add	x0, x1, x0
   40378:	mov	w2, #0x0                   	// #0
   4037c:	str	x21, [x20, #16]
   40380:	ldr	w1, [x0]
   40384:	orr	w1, w1, #0x4
   40388:	str	w1, [x0]
   4038c:	b	3fc8c <mpfr_sqr@@Base+0x194>
   40390:	sub	x0, x0, #0x1
   40394:	cmp	x9, x4
   40398:	ccmp	x21, x0, #0x0, eq  // eq = none
   4039c:	b.ne	404a4 <mpfr_sqr@@Base+0x9ac>  // b.any
   403a0:	cmp	w22, #0x0
   403a4:	ccmp	x6, #0x0, #0x4, eq  // eq = none
   403a8:	b.ne	40448 <mpfr_sqr@@Base+0x950>  // b.any
   403ac:	sub	w2, w22, #0x2
   403b0:	tst	w2, #0xfffffffd
   403b4:	b.ne	404a4 <mpfr_sqr@@Base+0x9ac>  // b.any
   403b8:	orr	x2, x6, x3
   403bc:	cbz	x2, 404a4 <mpfr_sqr@@Base+0x9ac>
   403c0:	str	x21, [x20, #16]
   403c4:	cbnz	w22, 3ff4c <mpfr_sqr@@Base+0x454>
   403c8:	b	40210 <mpfr_sqr@@Base+0x718>
   403cc:	cbz	x8, 401e8 <mpfr_sqr@@Base+0x6f0>
   403d0:	ldr	x0, [x10]
   403d4:	cbnz	x3, 3fdbc <mpfr_sqr@@Base+0x2c4>
   403d8:	lsr	x23, x0, x23
   403dc:	tbz	w23, #0, 401e8 <mpfr_sqr@@Base+0x6f0>
   403e0:	b	3fdbc <mpfr_sqr@@Base+0x2c4>
   403e4:	ldr	x0, [x5]
   403e8:	b	3ffc8 <mpfr_sqr@@Base+0x4d0>
   403ec:	str	x0, [x11]
   403f0:	b	3fffc <mpfr_sqr@@Base+0x504>
   403f4:	sub	x0, x0, #0x1
   403f8:	cmp	x21, x0
   403fc:	ccmn	x6, #0x1, #0x0, eq  // eq = none
   40400:	ccmp	x11, x12, #0x0, eq  // eq = none
   40404:	b.ne	404cc <mpfr_sqr@@Base+0x9d4>  // b.any
   40408:	cmp	w22, #0x0
   4040c:	ccmp	x8, #0x0, #0x4, eq  // eq = none
   40410:	b.ne	40468 <mpfr_sqr@@Base+0x970>  // b.any
   40414:	sub	w2, w22, #0x2
   40418:	tst	w2, #0xfffffffd
   4041c:	b.ne	404cc <mpfr_sqr@@Base+0x9d4>  // b.any
   40420:	orr	x2, x8, x3
   40424:	cbz	x2, 404cc <mpfr_sqr@@Base+0x9d4>
   40428:	str	x21, [x20, #16]
   4042c:	b	3fda8 <mpfr_sqr@@Base+0x2b0>
   40430:	cbz	x7, 401e8 <mpfr_sqr@@Base+0x6f0>
   40434:	ldr	x0, [x25]
   40438:	cbnz	x4, 40190 <mpfr_sqr@@Base+0x698>
   4043c:	lsr	x23, x0, x23
   40440:	tbz	w23, #0, 401e8 <mpfr_sqr@@Base+0x6f0>
   40444:	b	40190 <mpfr_sqr@@Base+0x698>
   40448:	str	x21, [x20, #16]
   4044c:	b	40214 <mpfr_sqr@@Base+0x71c>
   40450:	str	x0, [x5]
   40454:	b	3fffc <mpfr_sqr@@Base+0x504>
   40458:	str	x0, [x10, #8]
   4045c:	b	3fffc <mpfr_sqr@@Base+0x504>
   40460:	str	x0, [x25, #16]
   40464:	b	3fffc <mpfr_sqr@@Base+0x504>
   40468:	str	x21, [x20, #16]
   4046c:	b	403d0 <mpfr_sqr@@Base+0x8d8>
   40470:	str	x21, [x20, #16]
   40474:	b	40434 <mpfr_sqr@@Base+0x93c>
   40478:	cbnz	w22, 40320 <mpfr_sqr@@Base+0x828>
   4047c:	cmp	x21, x0
   40480:	b.ge	40534 <mpfr_sqr@@Base+0xa3c>  // b.tcont
   40484:	mov	w22, #0x1                   	// #1
   40488:	b	40320 <mpfr_sqr@@Base+0x828>
   4048c:	mov	w2, w8
   40490:	mov	w1, w22
   40494:	mov	x0, x20
   40498:	bl	bf40 <mpfr_overflow@plt>
   4049c:	mov	w2, w0
   404a0:	b	3fc8c <mpfr_sqr@@Base+0x194>
   404a4:	cbnz	w22, 40320 <mpfr_sqr@@Base+0x828>
   404a8:	cmp	x21, x0
   404ac:	b.lt	40484 <mpfr_sqr@@Base+0x98c>  // b.tstop
   404b0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   404b4:	cmp	x4, x0
   404b8:	b.ne	40320 <mpfr_sqr@@Base+0x828>  // b.any
   404bc:	orr	x3, x6, x3
   404c0:	cmp	x3, #0x0
   404c4:	cset	w22, eq  // eq = none
   404c8:	b	40320 <mpfr_sqr@@Base+0x828>
   404cc:	cbnz	w22, 40320 <mpfr_sqr@@Base+0x828>
   404d0:	cmp	x21, x0
   404d4:	b.lt	40484 <mpfr_sqr@@Base+0x98c>  // b.tstop
   404d8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   404dc:	cmp	x6, x0
   404e0:	b.ne	40320 <mpfr_sqr@@Base+0x828>  // b.any
   404e4:	orr	x0, x4, x11
   404e8:	and	x0, x0, x5
   404ec:	orr	x3, x0, x3
   404f0:	cmp	x3, #0x0
   404f4:	cset	w22, eq  // eq = none
   404f8:	b	40320 <mpfr_sqr@@Base+0x828>
   404fc:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   40500:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   40504:	add	x2, x2, #0xc90
   40508:	add	x0, x0, #0xce0
   4050c:	mov	w1, #0x22a                 	// #554
   40510:	bl	cb40 <mpfr_assert_fail@plt>
   40514:	cbnz	w22, 40320 <mpfr_sqr@@Base+0x828>
   40518:	cmp	x21, x0
   4051c:	b.lt	40484 <mpfr_sqr@@Base+0x98c>  // b.tstop
   40520:	cmp	x3, #0x0
   40524:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   40528:	ccmp	x4, x0, #0x0, eq  // eq = none
   4052c:	cset	w22, eq  // eq = none
   40530:	b	40320 <mpfr_sqr@@Base+0x828>
   40534:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   40538:	cmp	x2, x0
   4053c:	b.ne	40320 <mpfr_sqr@@Base+0x828>  // b.any
   40540:	orr	x5, x5, x12
   40544:	and	x6, x5, x6
   40548:	orr	x3, x6, x3
   4054c:	orr	x4, x3, x4
   40550:	cmp	x4, #0x0
   40554:	cset	w22, eq  // eq = none
   40558:	b	40320 <mpfr_sqr@@Base+0x828>
   4055c:	nop

0000000000040560 <__gmpfr_int_ceil_log2@@Base>:
   40560:	cmp	x0, #0x1
   40564:	b.eq	40580 <__gmpfr_int_ceil_log2@@Base+0x20>  // b.none
   40568:	b.ls	40588 <__gmpfr_int_ceil_log2@@Base+0x28>  // b.plast
   4056c:	sub	x0, x0, #0x1
   40570:	mov	w1, #0x40                  	// #64
   40574:	clz	x0, x0
   40578:	sub	w0, w1, w0
   4057c:	ret
   40580:	mov	w0, #0x0                   	// #0
   40584:	ret
   40588:	stp	x29, x30, [sp, #-16]!
   4058c:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   40590:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   40594:	mov	x29, sp
   40598:	add	x2, x2, #0xce8
   4059c:	add	x0, x0, #0xcf0
   405a0:	mov	w1, #0x24                  	// #36
   405a4:	bl	cb40 <mpfr_assert_fail@plt>

00000000000405a8 <__gmpfr_isqrt@@Base>:
   405a8:	mov	x2, x0
   405ac:	cmp	x0, #0x1
   405b0:	b.ls	40600 <__gmpfr_isqrt@@Base+0x58>  // b.plast
   405b4:	mov	x1, x0
   405b8:	mov	x0, #0x1                   	// #1
   405bc:	nop
   405c0:	lsr	x1, x1, #2
   405c4:	lsl	x0, x0, #1
   405c8:	cmp	x1, #0x1
   405cc:	b.hi	405c0 <__gmpfr_isqrt@@Base+0x18>  // b.pmore
   405d0:	udiv	x1, x2, x0
   405d4:	add	x0, x1, x0
   405d8:	lsr	x0, x0, #1
   405dc:	add	x1, x0, #0x2
   405e0:	mul	x3, x0, x0
   405e4:	mul	x1, x1, x0
   405e8:	cmp	x3, x2
   405ec:	b.hi	405d0 <__gmpfr_isqrt@@Base+0x28>  // b.pmore
   405f0:	cmp	x1, x2
   405f4:	ccmp	x3, x1, #0x2, cc  // cc = lo, ul, last
   405f8:	b.ls	405d0 <__gmpfr_isqrt@@Base+0x28>  // b.plast
   405fc:	ret
   40600:	mov	x0, #0x1                   	// #1
   40604:	b	405d0 <__gmpfr_isqrt@@Base+0x28>

0000000000040608 <__gmpfr_cuberoot@@Base>:
   40608:	mov	x4, x0
   4060c:	cmp	x0, #0x3
   40610:	b.ls	406d0 <__gmpfr_cuberoot@@Base+0xc8>  // b.plast
   40614:	mov	x1, x0
   40618:	mov	x0, #0x1                   	// #1
   4061c:	nop
   40620:	lsr	x1, x1, #3
   40624:	lsl	x0, x0, #1
   40628:	cmp	x1, #0x3
   4062c:	b.hi	40620 <__gmpfr_cuberoot@@Base+0x18>  // b.pmore
   40630:	mul	x1, x0, x0
   40634:	lsl	x5, x0, #1
   40638:	cmp	x4, #0xff
   4063c:	udiv	x0, x4, x1
   40640:	b.ls	40688 <__gmpfr_cuberoot@@Base+0x80>  // b.plast
   40644:	add	x0, x5, x0
   40648:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   4064c:	movk	x1, #0xaaab
   40650:	umulh	x0, x0, x1
   40654:	lsr	x0, x0, #1
   40658:	mul	x2, x0, x0
   4065c:	udiv	x2, x4, x2
   40660:	add	x0, x2, x0, lsl #1
   40664:	umulh	x0, x0, x1
   40668:	lsr	x0, x0, #1
   4066c:	mul	x2, x0, x0
   40670:	udiv	x2, x4, x2
   40674:	add	x0, x2, x0, lsl #1
   40678:	umulh	x2, x0, x1
   4067c:	and	x5, x2, #0xfffffffffffffffe
   40680:	lsr	x0, x2, #1
   40684:	mul	x1, x0, x0
   40688:	mov	x7, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   4068c:	movk	x7, #0xaaab
   40690:	udiv	x0, x4, x1
   40694:	add	x0, x0, x5
   40698:	umulh	x0, x0, x7
   4069c:	lsr	x0, x0, #1
   406a0:	add	x3, x0, #0x1
   406a4:	lsl	x5, x0, #1
   406a8:	mul	x1, x0, x0
   406ac:	mul	x2, x3, x3
   406b0:	mul	x6, x1, x0
   406b4:	mul	x2, x2, x3
   406b8:	cmp	x6, x4
   406bc:	b.hi	40690 <__gmpfr_cuberoot@@Base+0x88>  // b.pmore
   406c0:	cmp	x2, x4
   406c4:	ccmp	x6, x2, #0x2, ls  // ls = plast
   406c8:	b.ls	40690 <__gmpfr_cuberoot@@Base+0x88>  // b.plast
   406cc:	ret
   406d0:	mov	x5, #0x2                   	// #2
   406d4:	mov	x1, #0x1                   	// #1
   406d8:	b	40688 <__gmpfr_cuberoot@@Base+0x80>
   406dc:	nop
   406e0:	stp	x29, x30, [sp, #-208]!
   406e4:	mov	x29, sp
   406e8:	stp	x27, x28, [sp, #80]
   406ec:	mov	x27, x1
   406f0:	ldr	x1, [x0]
   406f4:	stp	x19, x20, [sp, #16]
   406f8:	stp	x21, x22, [sp, #32]
   406fc:	cmp	x1, #0x1
   40700:	stp	x23, x24, [sp, #48]
   40704:	stp	x25, x26, [sp, #64]
   40708:	str	x0, [x29, #136]
   4070c:	str	x1, [x29, #160]
   40710:	str	w2, [x29, #172]
   40714:	b.eq	4102c <__gmpfr_cuberoot@@Base+0xa24>  // b.none
   40718:	sub	x0, x1, #0x1
   4071c:	mov	w21, #0x40                  	// #64
   40720:	clz	x0, x0
   40724:	str	xzr, [x29, #192]
   40728:	sub	w0, w21, w0
   4072c:	add	x21, x1, w0, sxtw
   40730:	sub	x20, x21, #0x1
   40734:	asr	x20, x20, #6
   40738:	add	x28, x20, #0x1
   4073c:	lsl	x22, x28, #6
   40740:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   40744:	add	x0, x0, #0xd68
   40748:	str	x0, [x29, #144]
   4074c:	add	x0, x29, #0xc8
   40750:	mov	x23, x20
   40754:	str	x0, [x29, #112]
   40758:	mov	x0, #0x40                  	// #64
   4075c:	str	x0, [x29, #184]
   40760:	add	x0, x23, #0x2
   40764:	add	x1, x29, #0xc0
   40768:	str	x1, [x29, #104]
   4076c:	mov	x20, x27
   40770:	str	x0, [x29, #152]
   40774:	lsl	x1, x0, #4
   40778:	cmp	x1, #0x4, lsl #12
   4077c:	b.hi	40914 <__gmpfr_cuberoot@@Base+0x30c>  // b.pmore
   40780:	sub	sp, sp, x1
   40784:	mov	x26, sp
   40788:	ldr	w3, [x20, #4]
   4078c:	lsl	x0, x28, #3
   40790:	ldr	x5, [x29, #144]
   40794:	sub	w2, w3, #0x2
   40798:	ldp	x1, x9, [x20, #16]
   4079c:	sbfiz	x2, x2, #3, #32
   407a0:	add	x4, x5, x2
   407a4:	add	x23, x26, x0
   407a8:	str	x0, [x29, #176]
   407ac:	mov	x0, x23
   407b0:	ldr	w10, [x5, x2]
   407b4:	ldr	w5, [x4, #4]
   407b8:	sub	x11, x5, #0x1
   407bc:	udiv	x2, x22, x5
   407c0:	msub	x4, x2, x5, x22
   407c4:	madd	x4, x4, x10, x11
   407c8:	udiv	x4, x4, x5
   407cc:	madd	x4, x2, x10, x4
   407d0:	add	x4, x4, #0x1
   407d4:	cmp	x4, x9
   407d8:	csel	x24, x4, x9, ls  // ls = plast
   407dc:	mov	x2, x24
   407e0:	bl	bb80 <__gmpn_set_str@plt>
   407e4:	add	x1, x23, x0, lsl #3
   407e8:	mov	x2, x0
   407ec:	ldr	x0, [x20, #24]
   407f0:	ldur	x19, [x1, #-8]
   407f4:	cmp	x0, x24
   407f8:	cset	w25, eq  // eq = none
   407fc:	subs	x27, x28, x2
   40800:	clz	x19, x19
   40804:	b.mi	40b38 <__gmpfr_cuberoot@@Base+0x530>  // b.first
   40808:	cbnz	x19, 40d4c <__gmpfr_cuberoot@@Base+0x744>
   4080c:	cbnz	x27, 40e28 <__gmpfr_cuberoot@@Base+0x820>
   40810:	add	x19, x19, x27, lsl #6
   40814:	neg	x19, x19
   40818:	ldr	w2, [x20, #4]
   4081c:	sub	w27, w2, #0x1
   40820:	ands	w27, w27, w2
   40824:	b.ne	40924 <__gmpfr_cuberoot@@Base+0x31c>  // b.any
   40828:	ldr	x1, [x20, #40]
   4082c:	sxtw	x2, w2
   40830:	clz	x2, x2
   40834:	mov	w0, #0x3f                  	// #63
   40838:	sub	w2, w0, w2
   4083c:	tbnz	x1, #63, 40d80 <__gmpfr_cuberoot@@Base+0x778>
   40840:	cmp	x24, #0x0
   40844:	b.le	40b64 <__gmpfr_cuberoot@@Base+0x55c>
   40848:	sub	x4, x1, x24
   4084c:	cmp	x4, #0x0
   40850:	b.le	40e20 <__gmpfr_cuberoot@@Base+0x818>
   40854:	sxtw	x2, w2
   40858:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   4085c:	udiv	x0, x0, x2
   40860:	cmp	x0, x4
   40864:	b.le	4100c <__gmpfr_cuberoot@@Base+0xa04>
   40868:	ldr	x1, [x20, #48]
   4086c:	mul	x4, x2, x4
   40870:	add	x0, x4, x1
   40874:	tbnz	x1, #63, 40b90 <__gmpfr_cuberoot@@Base+0x588>
   40878:	mov	x4, x0
   4087c:	tbnz	x0, #63, 4100c <__gmpfr_cuberoot@@Base+0xa04>
   40880:	tbnz	x19, #63, 40df8 <__gmpfr_cuberoot@@Base+0x7f0>
   40884:	add	x19, x19, x0
   40888:	mov	x0, #0xfffffffffffffffd    	// #-3
   4088c:	movk	x0, #0x7fff, lsl #48
   40890:	cmp	x19, x0
   40894:	b.hi	4100c <__gmpfr_cuberoot@@Base+0xa04>  // b.pmore
   40898:	cbnz	w25, 40e64 <__gmpfr_cuberoot@@Base+0x85c>
   4089c:	ldr	w0, [x29, #172]
   408a0:	sub	x2, x22, w27, sxtw
   408a4:	sub	x2, x2, #0x1
   408a8:	mov	x1, x28
   408ac:	cmp	w0, #0x0
   408b0:	ldr	x0, [x29, #160]
   408b4:	cinc	x3, x0, eq  // eq = none
   408b8:	mov	x0, x23
   408bc:	bl	c370 <mpfr_round_p@plt>
   408c0:	cbnz	w0, 40e64 <__gmpfr_cuberoot@@Base+0x85c>
   408c4:	ldr	x1, [x29, #184]
   408c8:	mov	x0, #0xfffffffffffffeff    	// #-257
   408cc:	movk	x0, #0x7fff, lsl #48
   408d0:	sub	x0, x0, x21
   408d4:	cmp	x0, x1
   408d8:	b.lt	40e44 <__gmpfr_cuberoot@@Base+0x83c>  // b.tstop
   408dc:	ldr	x0, [x29, #184]
   408e0:	add	x21, x21, x0
   408e4:	sub	x23, x21, #0x1
   408e8:	add	x24, x21, x21, lsr #63
   408ec:	asr	x23, x23, #6
   408f0:	asr	x0, x24, #1
   408f4:	str	x0, [x29, #184]
   408f8:	add	x0, x23, #0x2
   408fc:	add	x28, x23, #0x1
   40900:	str	x0, [x29, #152]
   40904:	lsl	x1, x0, #4
   40908:	lsl	x22, x28, #6
   4090c:	cmp	x1, #0x4, lsl #12
   40910:	b.ls	40780 <__gmpfr_cuberoot@@Base+0x178>  // b.plast
   40914:	ldr	x0, [x29, #104]
   40918:	bl	bdc0 <mpfr_tmp_allocate@plt>
   4091c:	mov	x26, x0
   40920:	b	40788 <__gmpfr_cuberoot@@Base+0x180>
   40924:	ldr	x3, [x20, #40]
   40928:	cmp	x3, x24
   4092c:	b.le	40be4 <__gmpfr_cuberoot@@Base+0x5dc>
   40930:	lsl	x1, x28, #4
   40934:	add	x1, x1, #0x8
   40938:	cmp	x1, #0x4, lsl #12
   4093c:	b.hi	40fc8 <__gmpfr_cuberoot@@Base+0x9c0>  // b.pmore
   40940:	add	x1, x1, #0xf
   40944:	and	x1, x1, #0xfffffffffffffff0
   40948:	sub	sp, sp, x1
   4094c:	mov	x5, sp
   40950:	sub	x3, x3, x24
   40954:	mov	x4, x28
   40958:	ldr	x24, [x29, #112]
   4095c:	mov	x0, x26
   40960:	str	x5, [x29, #120]
   40964:	mov	x1, x24
   40968:	bl	cbe0 <mpfr_mpn_exp@plt>
   4096c:	str	x24, [x29, #128]
   40970:	mov	x27, x0
   40974:	cmn	w0, #0x2
   40978:	ldr	x5, [x29, #120]
   4097c:	b.eq	4100c <__gmpfr_cuberoot@@Base+0xa04>  // b.none
   40980:	cmn	w0, #0x1
   40984:	and	w25, w25, #0x1
   40988:	csel	w25, w25, wzr, eq  // eq = none
   4098c:	mov	x1, x23
   40990:	mov	x0, x5
   40994:	mov	x2, x26
   40998:	mov	x3, x28
   4099c:	str	x5, [x29, #120]
   409a0:	bl	c470 <__gmpn_mul_n@plt>
   409a4:	ldr	x1, [x29, #200]
   409a8:	adds	w27, w27, #0x1
   409ac:	csinc	w27, w27, wzr, ne  // ne = any
   409b0:	ldr	x5, [x29, #120]
   409b4:	tbnz	x1, #63, 40e00 <__gmpfr_cuberoot@@Base+0x7f8>
   409b8:	adds	x1, x1, x22
   409bc:	b.mi	4100c <__gmpfr_cuberoot@@Base+0xa04>  // b.first
   409c0:	str	x1, [x29, #200]
   409c4:	tbnz	x19, #63, 40e10 <__gmpfr_cuberoot@@Base+0x808>
   409c8:	add	x19, x19, x1
   409cc:	mov	x0, #0xfffffffffffffffd    	// #-3
   409d0:	movk	x0, #0x7fff, lsl #48
   409d4:	cmp	x19, x0
   409d8:	b.hi	4100c <__gmpfr_cuberoot@@Base+0xa04>  // b.pmore
   409dc:	add	x0, x5, x28, lsl #4
   409e0:	ldur	x0, [x0, #-8]
   409e4:	tbz	x0, #63, 40b00 <__gmpfr_cuberoot@@Base+0x4f8>
   409e8:	cbz	w25, 40b2c <__gmpfr_cuberoot@@Base+0x524>
   409ec:	mov	x0, x5
   409f0:	mov	x1, #0x0                   	// #0
   409f4:	str	x5, [x29, #152]
   409f8:	bl	caa0 <__gmpn_scan1@plt>
   409fc:	cmp	x0, x22
   40a00:	ldr	x5, [x29, #152]
   40a04:	b.cc	40b2c <__gmpfr_cuberoot@@Base+0x524>  // b.lo, b.ul, b.last
   40a08:	ldr	x26, [x29, #176]
   40a0c:	mov	x27, x20
   40a10:	add	x20, x5, x26
   40a14:	ldp	x6, x0, [x29, #128]
   40a18:	mov	x1, x20
   40a1c:	ldr	w3, [x27]
   40a20:	mov	x2, x22
   40a24:	ldr	w5, [x29, #172]
   40a28:	ldr	x4, [x29, #160]
   40a2c:	ldr	x0, [x0, #24]
   40a30:	bl	ca20 <mpfr_round_raw@plt>
   40a34:	cbz	w0, 40a58 <__gmpfr_cuberoot@@Base+0x450>
   40a38:	ldr	x1, [x29, #136]
   40a3c:	add	x19, x19, #0x1
   40a40:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   40a44:	ldr	x0, [x1]
   40a48:	ldr	x1, [x1, #24]
   40a4c:	sub	x0, x0, #0x1
   40a50:	asr	x0, x0, #6
   40a54:	str	x2, [x1, x0, lsl #3]
   40a58:	ldr	x2, [x29, #136]
   40a5c:	mov	w0, #0x1                   	// #1
   40a60:	ldr	w1, [x27]
   40a64:	cmp	w1, #0x0
   40a68:	cneg	w0, w0, ne  // ne = any
   40a6c:	str	w0, [x2, #8]
   40a70:	tbz	x19, #63, 40e78 <__gmpfr_cuberoot@@Base+0x870>
   40a74:	add	x19, x22, x19
   40a78:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   40a7c:	ldr	x1, [x0, #2512]
   40a80:	add	x0, x0, #0x9d0
   40a84:	blr	x1
   40a88:	mrs	x2, tpidr_el0
   40a8c:	ldr	x1, [x29, #136]
   40a90:	ldr	x0, [x2, x0]
   40a94:	str	x19, [x1, #16]
   40a98:	cmp	x0, x19
   40a9c:	ldr	w1, [x29, #200]
   40aa0:	b.gt	40ac0 <__gmpfr_cuberoot@@Base+0x4b8>
   40aa4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   40aa8:	ldr	x3, [x0, #2544]
   40aac:	add	x0, x0, #0x9f0
   40ab0:	blr	x3
   40ab4:	ldr	x0, [x2, x0]
   40ab8:	cmp	x0, x19
   40abc:	b.ge	40f14 <__gmpfr_cuberoot@@Base+0x90c>  // b.tcont
   40ac0:	ldr	w2, [x29, #172]
   40ac4:	ldr	x0, [x29, #136]
   40ac8:	bl	cb30 <mpfr_check_range@plt>
   40acc:	mov	w1, w0
   40ad0:	str	w1, [x29, #200]
   40ad4:	ldr	x0, [x29, #192]
   40ad8:	cbnz	x0, 41024 <__gmpfr_cuberoot@@Base+0xa1c>
   40adc:	ldr	w0, [x29, #200]
   40ae0:	mov	sp, x29
   40ae4:	ldp	x19, x20, [sp, #16]
   40ae8:	ldp	x21, x22, [sp, #32]
   40aec:	ldp	x23, x24, [sp, #48]
   40af0:	ldp	x25, x26, [sp, #64]
   40af4:	ldp	x27, x28, [sp, #80]
   40af8:	ldp	x29, x30, [sp], #208
   40afc:	ret
   40b00:	ldr	x0, [x29, #176]
   40b04:	mov	w3, #0x1                   	// #1
   40b08:	ldr	x2, [x29, #152]
   40b0c:	sub	x1, x0, #0x8
   40b10:	add	x1, x5, x1
   40b14:	str	x5, [x29, #120]
   40b18:	mov	x0, x1
   40b1c:	sub	x19, x19, #0x1
   40b20:	bl	bcc0 <__gmpn_lshift@plt>
   40b24:	ldr	x5, [x29, #120]
   40b28:	cbnz	w25, 409ec <__gmpfr_cuberoot@@Base+0x3e4>
   40b2c:	ldr	x0, [x29, #176]
   40b30:	add	x23, x5, x0
   40b34:	b	4089c <__gmpfr_cuberoot@@Base+0x294>
   40b38:	cbz	x19, 40d20 <__gmpfr_cuberoot@@Base+0x718>
   40b3c:	mov	x1, x23
   40b40:	mov	x0, x23
   40b44:	mov	w3, #0x40                  	// #64
   40b48:	sub	w3, w3, w19
   40b4c:	bl	bce0 <__gmpn_rshift@plt>
   40b50:	cmp	x0, #0x0
   40b54:	csel	w25, w25, wzr, eq  // eq = none
   40b58:	mov	x0, #0x40                  	// #64
   40b5c:	sub	x19, x0, x19
   40b60:	b	40818 <__gmpfr_cuberoot@@Base+0x210>
   40b64:	sub	x4, x1, x24
   40b68:	cmp	x4, x1
   40b6c:	b.cc	4100c <__gmpfr_cuberoot@@Base+0xa04>  // b.lo, b.ul, b.last
   40b70:	cmp	x4, #0x0
   40b74:	b.lt	4100c <__gmpfr_cuberoot@@Base+0xa04>  // b.tstop
   40b78:	b.ne	40854 <__gmpfr_cuberoot@@Base+0x24c>  // b.any
   40b7c:	ldr	x1, [x20, #48]
   40b80:	mov	x4, #0x0                   	// #0
   40b84:	mov	x0, x1
   40b88:	tbz	x1, #63, 40878 <__gmpfr_cuberoot@@Base+0x270>
   40b8c:	nop
   40b90:	add	x4, x4, x1
   40b94:	cmp	x19, #0x0
   40b98:	ccmp	x4, #0x0, #0x1, ge  // ge = tcont
   40b9c:	mov	x0, x4
   40ba0:	b.ge	40884 <__gmpfr_cuberoot@@Base+0x27c>  // b.tcont
   40ba4:	lsr	x0, x4, #63
   40ba8:	and	w0, w0, #0xff
   40bac:	cmp	x19, #0x0
   40bb0:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
   40bb4:	b.eq	40df8 <__gmpfr_cuberoot@@Base+0x7f0>  // b.none
   40bb8:	neg	x19, x19
   40bbc:	sub	x4, x19, x4
   40bc0:	cmp	x4, x19
   40bc4:	b.cc	40eb0 <__gmpfr_cuberoot@@Base+0x8a8>  // b.lo, b.ul, b.last
   40bc8:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   40bcc:	cmp	x4, x0
   40bd0:	b.cc	40e5c <__gmpfr_cuberoot@@Base+0x854>  // b.lo, b.ul, b.last
   40bd4:	b.ne	40eb0 <__gmpfr_cuberoot@@Base+0x8a8>  // b.any
   40bd8:	mov	x19, #0x2                   	// #2
   40bdc:	movk	x19, #0x8000, lsl #48
   40be0:	b	40898 <__gmpfr_cuberoot@@Base+0x290>
   40be4:	b.ge	40e18 <__gmpfr_cuberoot@@Base+0x810>  // b.tcont
   40be8:	lsl	x27, x28, #1
   40bec:	add	x1, x27, x28
   40bf0:	add	x1, x1, #0x1
   40bf4:	lsl	x1, x1, #3
   40bf8:	cmp	x1, #0x4, lsl #12
   40bfc:	b.hi	41014 <__gmpfr_cuberoot@@Base+0xa0c>  // b.pmore
   40c00:	add	x1, x1, #0xf
   40c04:	and	x1, x1, #0xfffffffffffffff0
   40c08:	sub	sp, sp, x1
   40c0c:	mov	x9, sp
   40c10:	ldr	x2, [x29, #176]
   40c14:	mov	x0, x26
   40c18:	mov	w1, #0x0                   	// #0
   40c1c:	str	x9, [x29, #128]
   40c20:	bl	c110 <memset@plt>
   40c24:	ldr	x3, [x20, #40]
   40c28:	ldr	x9, [x29, #128]
   40c2c:	tbnz	x24, #63, 40f70 <__gmpfr_cuberoot@@Base+0x968>
   40c30:	cmp	x3, #0x0
   40c34:	b.le	40ea0 <__gmpfr_cuberoot@@Base+0x898>
   40c38:	sub	x3, x24, x3
   40c3c:	str	x3, [x29, #200]
   40c40:	ldr	w2, [x20, #4]
   40c44:	add	x5, x9, x28, lsl #4
   40c48:	ldr	x1, [x29, #112]
   40c4c:	add	x24, x5, #0x8
   40c50:	mov	x0, x24
   40c54:	mov	x4, x28
   40c58:	stp	x9, x1, [x29, #120]
   40c5c:	bl	cbe0 <mpfr_mpn_exp@plt>
   40c60:	cmn	w0, #0x2
   40c64:	b.eq	40eb0 <__gmpfr_cuberoot@@Base+0x8a8>  // b.none
   40c68:	ldr	x1, [x29, #200]
   40c6c:	cmn	w0, #0x1
   40c70:	csel	w25, w25, wzr, eq  // eq = none
   40c74:	csel	w2, w0, wzr, ne  // ne = any
   40c78:	ldr	x9, [x29, #120]
   40c7c:	tbnz	x1, #63, 40f3c <__gmpfr_cuberoot@@Base+0x934>
   40c80:	adds	x1, x1, x22
   40c84:	b.mi	40eb0 <__gmpfr_cuberoot@@Base+0x8a8>  // b.first
   40c88:	str	x1, [x29, #200]
   40c8c:	tbnz	x19, #63, 40ee8 <__gmpfr_cuberoot@@Base+0x8e0>
   40c90:	sub	x19, x19, x1
   40c94:	ldr	x0, [x29, #176]
   40c98:	mov	x5, x24
   40c9c:	mov	x4, x27
   40ca0:	mov	x1, x9
   40ca4:	add	x23, x9, x0
   40ca8:	mov	x3, x26
   40cac:	mov	x0, x23
   40cb0:	add	w27, w2, #0x1
   40cb4:	mov	x6, x28
   40cb8:	mov	x2, #0x0                   	// #0
   40cbc:	str	x9, [x29, #120]
   40cc0:	bl	ba60 <__gmpn_tdiv_qr@plt>
   40cc4:	ldr	x0, [x29, #176]
   40cc8:	ldr	x9, [x29, #120]
   40ccc:	ldr	x24, [x23, x0]
   40cd0:	cbz	w25, 40cf8 <__gmpfr_cuberoot@@Base+0x6f0>
   40cd4:	mov	x0, x9
   40cd8:	mov	x1, x28
   40cdc:	bl	c860 <__gmpn_popcount@plt>
   40ce0:	cbnz	x0, 40cf8 <__gmpfr_cuberoot@@Base+0x6f0>
   40ce4:	cmp	x24, #0x1
   40ce8:	b.eq	40ff0 <__gmpfr_cuberoot@@Base+0x9e8>  // b.none
   40cec:	mov	x27, x20
   40cf0:	mov	x20, x23
   40cf4:	b	40a14 <__gmpfr_cuberoot@@Base+0x40c>
   40cf8:	cmp	x24, #0x1
   40cfc:	b.ne	4089c <__gmpfr_cuberoot@@Base+0x294>  // b.any
   40d00:	mov	w25, #0x0                   	// #0
   40d04:	ldr	x2, [x29, #152]
   40d08:	add	x19, x19, #0x1
   40d0c:	mov	x1, x23
   40d10:	mov	x0, x23
   40d14:	mov	w3, #0x1                   	// #1
   40d18:	bl	bce0 <__gmpn_rshift@plt>
   40d1c:	b	40898 <__gmpfr_cuberoot@@Base+0x290>
   40d20:	cmp	x0, x24
   40d24:	mov	w25, #0x0                   	// #0
   40d28:	b.ne	40d38 <__gmpfr_cuberoot@@Base+0x730>  // b.any
   40d2c:	ldr	x0, [x23]
   40d30:	cmp	x0, #0x0
   40d34:	cset	w25, eq  // eq = none
   40d38:	sub	x2, x2, #0x1
   40d3c:	add	x1, x23, #0x8
   40d40:	mov	x0, x23
   40d44:	bl	c520 <__gmpn_copyi@plt>
   40d48:	b	40b58 <__gmpfr_cuberoot@@Base+0x550>
   40d4c:	lsl	x5, x27, #3
   40d50:	mov	w3, w19
   40d54:	add	x0, x23, x5
   40d58:	mov	x1, x23
   40d5c:	str	x5, [x29, #128]
   40d60:	bl	bcc0 <__gmpn_lshift@plt>
   40d64:	ldr	x5, [x29, #128]
   40d68:	cbz	x27, 40810 <__gmpfr_cuberoot@@Base+0x208>
   40d6c:	mov	x2, x5
   40d70:	mov	x0, x23
   40d74:	mov	w1, #0x0                   	// #0
   40d78:	bl	c110 <memset@plt>
   40d7c:	b	40810 <__gmpfr_cuberoot@@Base+0x208>
   40d80:	cmp	x24, #0x0
   40d84:	b.le	40848 <__gmpfr_cuberoot@@Base+0x240>
   40d88:	sub	x3, x24, x1
   40d8c:	neg	x4, x1
   40d90:	cmp	x3, x4
   40d94:	b.cc	40eb0 <__gmpfr_cuberoot@@Base+0x8a8>  // b.lo, b.ul, b.last
   40d98:	tbnz	x3, #63, 40eb0 <__gmpfr_cuberoot@@Base+0x8a8>
   40d9c:	neg	x4, x3
   40da0:	sxtw	x2, w2
   40da4:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   40da8:	sdiv	x0, x3, x2
   40dac:	cmp	x0, x4
   40db0:	b.ge	40eb0 <__gmpfr_cuberoot@@Base+0x8a8>  // b.tcont
   40db4:	ldr	x1, [x20, #48]
   40db8:	mul	x4, x2, x4
   40dbc:	tbz	x1, #63, 40b90 <__gmpfr_cuberoot@@Base+0x588>
   40dc0:	neg	x4, x4
   40dc4:	sub	x1, x4, x1
   40dc8:	cmp	x1, x4
   40dcc:	b.cc	40eb0 <__gmpfr_cuberoot@@Base+0x8a8>  // b.lo, b.ul, b.last
   40dd0:	neg	x4, x1
   40dd4:	mov	w0, #0x1                   	// #1
   40dd8:	tbz	x1, #63, 40bac <__gmpfr_cuberoot@@Base+0x5a4>
   40ddc:	cmp	x1, x3
   40de0:	b.ne	40eb0 <__gmpfr_cuberoot@@Base+0x8a8>  // b.any
   40de4:	cmp	x19, #0x0
   40de8:	mov	x4, x1
   40dec:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
   40df0:	b.ne	40bb8 <__gmpfr_cuberoot@@Base+0x5b0>  // b.any
   40df4:	nop
   40df8:	add	x19, x19, x4
   40dfc:	b	40898 <__gmpfr_cuberoot@@Base+0x290>
   40e00:	add	x1, x22, x1
   40e04:	str	x1, [x29, #200]
   40e08:	tbnz	x19, #63, 40f98 <__gmpfr_cuberoot@@Base+0x990>
   40e0c:	tbz	x1, #63, 409c8 <__gmpfr_cuberoot@@Base+0x3c0>
   40e10:	add	x19, x19, x1
   40e14:	b	409dc <__gmpfr_cuberoot@@Base+0x3d4>
   40e18:	mov	w27, #0x0                   	// #0
   40e1c:	b	40898 <__gmpfr_cuberoot@@Base+0x290>
   40e20:	b.ne	40da0 <__gmpfr_cuberoot@@Base+0x798>  // b.any
   40e24:	b	40b7c <__gmpfr_cuberoot@@Base+0x574>
   40e28:	lsl	x5, x27, #3
   40e2c:	mov	x1, x23
   40e30:	add	x0, x23, x5
   40e34:	str	x5, [x29, #128]
   40e38:	bl	bae0 <__gmpn_copyd@plt>
   40e3c:	ldr	x5, [x29, #128]
   40e40:	b	40d6c <__gmpfr_cuberoot@@Base+0x764>
   40e44:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   40e48:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   40e4c:	add	x2, x2, #0x830
   40e50:	add	x0, x0, #0xd00
   40e54:	mov	w1, #0x372                 	// #882
   40e58:	bl	cb40 <mpfr_assert_fail@plt>
   40e5c:	neg	x19, x4
   40e60:	b	40898 <__gmpfr_cuberoot@@Base+0x290>
   40e64:	mov	x27, x20
   40e68:	add	x0, x29, #0xc8
   40e6c:	mov	x20, x23
   40e70:	str	x0, [x29, #128]
   40e74:	b	40a14 <__gmpfr_cuberoot@@Base+0x40c>
   40e78:	adds	x19, x19, x22
   40e7c:	b.pl	40a78 <__gmpfr_cuberoot@@Base+0x470>  // b.nfrst
   40e80:	cmp	w1, #0x0
   40e84:	ldr	w1, [x29, #172]
   40e88:	ldr	x0, [x29, #136]
   40e8c:	mov	w2, #0x1                   	// #1
   40e90:	cneg	w2, w2, ne  // ne = any
   40e94:	bl	bf40 <mpfr_overflow@plt>
   40e98:	str	w0, [x29, #200]
   40e9c:	b	40ad4 <__gmpfr_cuberoot@@Base+0x4cc>
   40ea0:	sub	x3, x24, x3
   40ea4:	cmp	x3, x24
   40ea8:	b.cc	40eb0 <__gmpfr_cuberoot@@Base+0x8a8>  // b.lo, b.ul, b.last
   40eac:	tbz	x3, #63, 40c3c <__gmpfr_cuberoot@@Base+0x634>
   40eb0:	ldr	w1, [x29, #172]
   40eb4:	mov	w2, #0x1                   	// #1
   40eb8:	ldr	w0, [x20]
   40ebc:	cmp	w1, #0x0
   40ec0:	csel	w1, w1, w2, ne  // ne = any
   40ec4:	cmp	w0, #0x0
   40ec8:	ldr	x0, [x29, #136]
   40ecc:	cneg	w2, w2, ne  // ne = any
   40ed0:	bl	c3c0 <mpfr_underflow@plt>
   40ed4:	str	w0, [x29, #200]
   40ed8:	b	40ad4 <__gmpfr_cuberoot@@Base+0x4cc>
   40edc:	cmp	x1, #0x0
   40ee0:	b.le	40c90 <__gmpfr_cuberoot@@Base+0x688>
   40ee4:	nop
   40ee8:	sub	x1, x1, x19
   40eec:	neg	x19, x19
   40ef0:	cmp	x1, x19
   40ef4:	b.cc	40eb0 <__gmpfr_cuberoot@@Base+0x8a8>  // b.lo, b.ul, b.last
   40ef8:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   40efc:	cmp	x1, x0
   40f00:	b.cc	40fe8 <__gmpfr_cuberoot@@Base+0x9e0>  // b.lo, b.ul, b.last
   40f04:	b.ne	40eb0 <__gmpfr_cuberoot@@Base+0x8a8>  // b.any
   40f08:	mov	x19, #0x2                   	// #2
   40f0c:	movk	x19, #0x8000, lsl #48
   40f10:	b	40c94 <__gmpfr_cuberoot@@Base+0x68c>
   40f14:	cbz	w1, 40ad0 <__gmpfr_cuberoot@@Base+0x4c8>
   40f18:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   40f1c:	ldr	x3, [x0, #2576]
   40f20:	add	x0, x0, #0xa10
   40f24:	blr	x3
   40f28:	add	x0, x2, x0
   40f2c:	ldr	w2, [x0]
   40f30:	orr	w2, w2, #0x8
   40f34:	str	w2, [x0]
   40f38:	b	40ad0 <__gmpfr_cuberoot@@Base+0x4c8>
   40f3c:	add	x1, x22, x1
   40f40:	str	x1, [x29, #200]
   40f44:	tbnz	x19, #63, 40edc <__gmpfr_cuberoot@@Base+0x8d4>
   40f48:	cmp	x1, #0x0
   40f4c:	b.gt	40c90 <__gmpfr_cuberoot@@Base+0x688>
   40f50:	sub	x1, x19, x1
   40f54:	mov	x0, #0xfffffffffffffffd    	// #-3
   40f58:	cmp	x1, x19
   40f5c:	movk	x0, #0x7fff, lsl #48
   40f60:	ccmp	x1, x0, #0x2, cs  // cs = hs, nlast
   40f64:	b.hi	4100c <__gmpfr_cuberoot@@Base+0xa04>  // b.pmore
   40f68:	mov	x19, x1
   40f6c:	b	40c94 <__gmpfr_cuberoot@@Base+0x68c>
   40f70:	cmp	x3, #0x0
   40f74:	b.le	40c38 <__gmpfr_cuberoot@@Base+0x630>
   40f78:	sub	x3, x3, x24
   40f7c:	neg	x4, x24
   40f80:	cmp	x3, x4
   40f84:	b.cc	4100c <__gmpfr_cuberoot@@Base+0xa04>  // b.lo, b.ul, b.last
   40f88:	tbnz	x3, #63, 41000 <__gmpfr_cuberoot@@Base+0x9f8>
   40f8c:	neg	x3, x3
   40f90:	str	x3, [x29, #200]
   40f94:	b	40c40 <__gmpfr_cuberoot@@Base+0x638>
   40f98:	tbz	x1, #63, 40e10 <__gmpfr_cuberoot@@Base+0x808>
   40f9c:	neg	x19, x19
   40fa0:	sub	x1, x19, x1
   40fa4:	cmp	x1, x19
   40fa8:	b.cc	40eb0 <__gmpfr_cuberoot@@Base+0x8a8>  // b.lo, b.ul, b.last
   40fac:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   40fb0:	cmp	x1, x0
   40fb4:	b.cc	40fe0 <__gmpfr_cuberoot@@Base+0x9d8>  // b.lo, b.ul, b.last
   40fb8:	b.ne	40eb0 <__gmpfr_cuberoot@@Base+0x8a8>  // b.any
   40fbc:	mov	x19, #0x2                   	// #2
   40fc0:	movk	x19, #0x8000, lsl #48
   40fc4:	b	409dc <__gmpfr_cuberoot@@Base+0x3d4>
   40fc8:	ldr	x0, [x29, #104]
   40fcc:	bl	bdc0 <mpfr_tmp_allocate@plt>
   40fd0:	mov	x5, x0
   40fd4:	ldr	w2, [x20, #4]
   40fd8:	ldr	x3, [x20, #40]
   40fdc:	b	40950 <__gmpfr_cuberoot@@Base+0x348>
   40fe0:	neg	x19, x1
   40fe4:	b	409dc <__gmpfr_cuberoot@@Base+0x3d4>
   40fe8:	neg	x19, x1
   40fec:	b	40c94 <__gmpfr_cuberoot@@Base+0x68c>
   40ff0:	ldr	x25, [x23]
   40ff4:	and	x25, x25, #0x1
   40ff8:	sub	w25, w24, w25
   40ffc:	b	40d04 <__gmpfr_cuberoot@@Base+0x6fc>
   41000:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   41004:	cmp	x3, x0
   41008:	b.eq	40c3c <__gmpfr_cuberoot@@Base+0x634>  // b.none
   4100c:	ldr	w1, [x20]
   41010:	b	40e80 <__gmpfr_cuberoot@@Base+0x878>
   41014:	ldr	x0, [x29, #104]
   41018:	bl	bdc0 <mpfr_tmp_allocate@plt>
   4101c:	mov	x9, x0
   41020:	b	40c10 <__gmpfr_cuberoot@@Base+0x608>
   41024:	bl	c410 <mpfr_tmp_free@plt>
   41028:	b	40adc <__gmpfr_cuberoot@@Base+0x4d4>
   4102c:	ldr	x28, [x29, #160]
   41030:	mov	x22, #0x40                  	// #64
   41034:	mov	x20, #0x0                   	// #0
   41038:	str	xzr, [x29, #192]
   4103c:	mov	x21, x28
   41040:	b	40740 <__gmpfr_cuberoot@@Base+0x138>
   41044:	nop

0000000000041048 <mpfr_strtofr@@Base>:
   41048:	stp	x29, x30, [sp, #-160]!
   4104c:	mov	x29, sp
   41050:	stp	x19, x20, [sp, #16]
   41054:	stp	x21, x22, [sp, #32]
   41058:	stp	x23, x24, [sp, #48]
   4105c:	stp	x25, x26, [sp, #64]
   41060:	mov	w25, w3
   41064:	sub	w3, w3, #0x2
   41068:	stp	x27, x28, [sp, #80]
   4106c:	cmp	w3, #0x3c
   41070:	ccmp	w25, #0x0, #0x4, hi  // hi = pmore
   41074:	b.ne	41740 <mpfr_strtofr@@Base+0x6f8>  // b.any
   41078:	mov	x20, x0
   4107c:	mov	x21, x1
   41080:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   41084:	mov	w1, #0x1                   	// #1
   41088:	mov	x22, x2
   4108c:	mov	w23, w4
   41090:	str	w1, [x20, #8]
   41094:	mov	w24, #0x2e                  	// #46
   41098:	str	x0, [x20, #16]
   4109c:	bl	bea0 <localeconv@plt>
   410a0:	ldr	x0, [x0]
   410a4:	ldrb	w0, [x0, #1]
   410a8:	cbz	w0, 413ec <mpfr_strtofr@@Base+0x3a4>
   410ac:	str	xzr, [sp, #112]
   410b0:	bl	c630 <__ctype_b_loc@plt>
   410b4:	mov	x26, x0
   410b8:	mov	x1, x21
   410bc:	ldr	x0, [x0]
   410c0:	mov	x19, x1
   410c4:	ldrb	w2, [x1]
   410c8:	add	x1, x1, #0x1
   410cc:	ubfiz	x3, x2, #1, #8
   410d0:	ldrh	w3, [x0, x3]
   410d4:	tbnz	w3, #13, 410c0 <mpfr_strtofr@@Base+0x78>
   410d8:	cmp	w2, #0x2d
   410dc:	sub	w0, w2, #0x2b
   410e0:	cset	w3, eq  // eq = none
   410e4:	str	w3, [sp, #104]
   410e8:	mov	w4, w2
   410ec:	mov	w3, #0xfd                  	// #253
   410f0:	tst	w0, w3
   410f4:	b.ne	41100 <mpfr_strtofr@@Base+0xb8>  // b.any
   410f8:	ldrb	w4, [x19, #1]
   410fc:	mov	x19, x1
   41100:	adrp	x5, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   41104:	mov	w1, w4
   41108:	add	x5, x5, #0xd38
   4110c:	mov	x3, #0x0                   	// #0
   41110:	mov	w0, #0x40                  	// #64
   41114:	b	4111c <mpfr_strtofr@@Base+0xd4>
   41118:	ldrb	w1, [x19, x3]
   4111c:	sub	w7, w1, #0x41
   41120:	add	w6, w1, #0x20
   41124:	and	w7, w7, #0xff
   41128:	and	w6, w6, #0xff
   4112c:	cmp	w7, #0x1a
   41130:	csel	w1, w6, w1, cc  // cc = lo, ul, last
   41134:	cmp	w1, w0
   41138:	b.ne	411b0 <mpfr_strtofr@@Base+0x168>  // b.any
   4113c:	add	x3, x3, #0x1
   41140:	ldrb	w0, [x3, x5]
   41144:	cbnz	w0, 41118 <mpfr_strtofr@@Base+0xd0>
   41148:	ldrb	w0, [x19, #5]
   4114c:	add	x21, x19, #0x5
   41150:	cmp	w0, #0x28
   41154:	b.eq	41210 <mpfr_strtofr@@Base+0x1c8>  // b.none
   41158:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4115c:	ldr	x1, [x0, #2576]
   41160:	add	x0, x0, #0xa10
   41164:	blr	x1
   41168:	mrs	x2, tpidr_el0
   4116c:	mov	x1, #0x2                   	// #2
   41170:	mov	w23, #0x0                   	// #0
   41174:	movk	x1, #0x8000, lsl #48
   41178:	str	x1, [x20, #16]
   4117c:	ldr	w1, [x2, x0]
   41180:	orr	w1, w1, #0x4
   41184:	str	w1, [x2, x0]
   41188:	cbz	x22, 41190 <mpfr_strtofr@@Base+0x148>
   4118c:	str	x21, [x22]
   41190:	mov	w0, w23
   41194:	ldp	x19, x20, [sp, #16]
   41198:	ldp	x21, x22, [sp, #32]
   4119c:	ldp	x23, x24, [sp, #48]
   411a0:	ldp	x25, x26, [sp, #64]
   411a4:	ldp	x27, x28, [sp, #80]
   411a8:	ldp	x29, x30, [sp], #160
   411ac:	ret
   411b0:	cmp	w25, #0x10
   411b4:	b.gt	4125c <mpfr_strtofr@@Base+0x214>
   411b8:	adrp	x7, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   411bc:	mov	w1, w4
   411c0:	add	x7, x7, #0xd40
   411c4:	mov	x0, #0x0                   	// #0
   411c8:	mov	w6, #0x6e                  	// #110
   411cc:	b	411d4 <mpfr_strtofr@@Base+0x18c>
   411d0:	ldrb	w1, [x19, x0]
   411d4:	sub	w5, w1, #0x41
   411d8:	add	w3, w1, #0x20
   411dc:	and	w5, w5, #0xff
   411e0:	and	w3, w3, #0xff
   411e4:	cmp	w5, #0x1a
   411e8:	csel	w1, w3, w1, cc  // cc = lo, ul, last
   411ec:	cmp	w1, w6
   411f0:	b.ne	4125c <mpfr_strtofr@@Base+0x214>  // b.any
   411f4:	add	x0, x0, #0x1
   411f8:	ldrb	w6, [x0, x7]
   411fc:	cbnz	w6, 411d0 <mpfr_strtofr@@Base+0x188>
   41200:	ldrb	w0, [x19, #3]
   41204:	add	x21, x19, #0x3
   41208:	cmp	w0, #0x28
   4120c:	b.ne	41158 <mpfr_strtofr@@Base+0x110>  // b.any
   41210:	ldrb	w1, [x21, #1]
   41214:	add	x2, x21, #0x1
   41218:	cmp	w1, #0x29
   4121c:	b.eq	41254 <mpfr_strtofr@@Base+0x20c>  // b.none
   41220:	and	w0, w1, #0xffffffdf
   41224:	sub	w0, w0, #0x41
   41228:	and	w0, w0, #0xff
   4122c:	cmp	w0, #0x19
   41230:	b.ls	41248 <mpfr_strtofr@@Base+0x200>  // b.plast
   41234:	sub	w0, w1, #0x30
   41238:	cmp	w1, #0x5f
   4123c:	and	w0, w0, #0xff
   41240:	ccmp	w0, #0x9, #0x0, ne  // ne = any
   41244:	b.hi	41158 <mpfr_strtofr@@Base+0x110>  // b.pmore
   41248:	ldrb	w1, [x2, #1]!
   4124c:	cmp	w1, #0x29
   41250:	b.ne	41220 <mpfr_strtofr@@Base+0x1d8>  // b.any
   41254:	add	x21, x2, #0x1
   41258:	b	41158 <mpfr_strtofr@@Base+0x110>
   4125c:	adrp	x7, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   41260:	mov	w1, w4
   41264:	add	x7, x7, #0xd48
   41268:	mov	x3, #0x0                   	// #0
   4126c:	mov	w6, #0x40                  	// #64
   41270:	b	41278 <mpfr_strtofr@@Base+0x230>
   41274:	ldrb	w1, [x19, x3]
   41278:	sub	w5, w1, #0x41
   4127c:	add	w0, w1, #0x20
   41280:	and	w5, w5, #0xff
   41284:	and	w0, w0, #0xff
   41288:	cmp	w5, #0x1a
   4128c:	csel	w1, w0, w1, cc  // cc = lo, ul, last
   41290:	cmp	w1, w6
   41294:	b.ne	412c8 <mpfr_strtofr@@Base+0x280>  // b.any
   41298:	add	x3, x3, #0x1
   4129c:	ldrb	w6, [x3, x7]
   412a0:	cbnz	w6, 41274 <mpfr_strtofr@@Base+0x22c>
   412a4:	add	x21, x19, #0x5
   412a8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   412ac:	str	x0, [x20, #16]
   412b0:	cmp	w2, #0x2d
   412b4:	b.ne	41458 <mpfr_strtofr@@Base+0x410>  // b.any
   412b8:	mov	w0, #0xffffffff            	// #-1
   412bc:	mov	w23, #0x0                   	// #0
   412c0:	str	w0, [x20, #8]
   412c4:	b	41188 <mpfr_strtofr@@Base+0x140>
   412c8:	cmp	w25, #0x10
   412cc:	and	w8, w25, #0xfffffffd
   412d0:	b.le	4139c <mpfr_strtofr@@Base+0x354>
   412d4:	mov	x28, #0x0                   	// #0
   412d8:	cbnz	w8, 412f0 <mpfr_strtofr@@Base+0x2a8>
   412dc:	cmp	w4, #0x30
   412e0:	b.eq	41514 <mpfr_strtofr@@Base+0x4cc>  // b.none
   412e4:	mov	x28, #0x0                   	// #0
   412e8:	cbnz	w25, 412f0 <mpfr_strtofr@@Base+0x2a8>
   412ec:	mov	w25, #0xa                   	// #10
   412f0:	mov	x0, x19
   412f4:	str	w25, [sp, #108]
   412f8:	bl	bab0 <strlen@plt>
   412fc:	add	x0, x0, #0x1
   41300:	str	x0, [sp, #136]
   41304:	bl	ccf0 <mpfr_allocate_func@plt>
   41308:	mov	x5, x0
   4130c:	str	x0, [sp, #112]
   41310:	mov	x27, x19
   41314:	stp	xzr, xzr, [sp, #144]
   41318:	mov	w4, #0x0                   	// #0
   4131c:	ldrb	w3, [x27], #1
   41320:	cmp	w3, #0x2e
   41324:	ccmp	w3, w24, #0x4, ne  // ne = any
   41328:	b.ne	41350 <mpfr_strtofr@@Base+0x308>  // b.any
   4132c:	nop
   41330:	cbnz	w4, 41418 <mpfr_strtofr@@Base+0x3d0>
   41334:	mov	w4, #0x1                   	// #1
   41338:	mov	x19, x27
   4133c:	mov	x27, x19
   41340:	ldrb	w3, [x27], #1
   41344:	cmp	w3, #0x2e
   41348:	ccmp	w3, w24, #0x4, ne  // ne = any
   4134c:	b.eq	41330 <mpfr_strtofr@@Base+0x2e8>  // b.none
   41350:	sub	w1, w3, #0x30
   41354:	cmp	w1, #0x9
   41358:	b.ls	41378 <mpfr_strtofr@@Base+0x330>  // b.plast
   4135c:	sub	w0, w3, #0x61
   41360:	cmp	w0, #0x19
   41364:	b.hi	413fc <mpfr_strtofr@@Base+0x3b4>  // b.pmore
   41368:	cmp	w25, #0x25
   4136c:	sub	w1, w3, #0x3d
   41370:	sub	w2, w3, #0x57
   41374:	csel	w1, w2, w1, lt  // lt = tstop
   41378:	cmp	w25, w1
   4137c:	b.le	41418 <mpfr_strtofr@@Base+0x3d0>
   41380:	strb	w1, [x5], #1
   41384:	cbnz	w4, 41338 <mpfr_strtofr@@Base+0x2f0>
   41388:	ldr	x0, [sp, #144]
   4138c:	mov	x19, x27
   41390:	add	x0, x0, #0x1
   41394:	str	x0, [sp, #144]
   41398:	b	4133c <mpfr_strtofr@@Base+0x2f4>
   4139c:	adrp	x7, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   413a0:	mov	w1, w4
   413a4:	add	x7, x7, #0xd50
   413a8:	mov	x0, #0x0                   	// #0
   413ac:	mov	w6, #0x69                  	// #105
   413b0:	b	413b8 <mpfr_strtofr@@Base+0x370>
   413b4:	ldrb	w1, [x19, x0]
   413b8:	sub	w5, w1, #0x41
   413bc:	add	w3, w1, #0x20
   413c0:	and	w5, w5, #0xff
   413c4:	and	w3, w3, #0xff
   413c8:	cmp	w5, #0x1a
   413cc:	csel	w1, w3, w1, cc  // cc = lo, ul, last
   413d0:	cmp	w1, w6
   413d4:	b.ne	41468 <mpfr_strtofr@@Base+0x420>  // b.any
   413d8:	add	x0, x0, #0x1
   413dc:	ldrb	w6, [x0, x7]
   413e0:	cbnz	w6, 413b4 <mpfr_strtofr@@Base+0x36c>
   413e4:	add	x21, x19, #0x8
   413e8:	b	412a8 <mpfr_strtofr@@Base+0x260>
   413ec:	bl	bea0 <localeconv@plt>
   413f0:	ldr	x0, [x0]
   413f4:	ldrb	w24, [x0]
   413f8:	b	410ac <mpfr_strtofr@@Base+0x64>
   413fc:	sub	w0, w3, #0x41
   41400:	cmp	w0, #0x19
   41404:	b.hi	41418 <mpfr_strtofr@@Base+0x3d0>  // b.pmore
   41408:	sub	w1, w3, #0x37
   4140c:	cmp	w25, w1
   41410:	b.gt	41380 <mpfr_strtofr@@Base+0x338>
   41414:	nop
   41418:	ldr	x0, [sp, #112]
   4141c:	sub	x5, x5, x0
   41420:	str	x5, [sp, #128]
   41424:	cbnz	x5, 41524 <mpfr_strtofr@@Base+0x4dc>
   41428:	cbnz	x28, 41448 <mpfr_strtofr@@Base+0x400>
   4142c:	cbnz	x0, 41438 <mpfr_strtofr@@Base+0x3f0>
   41430:	mov	w23, #0x0                   	// #0
   41434:	b	41188 <mpfr_strtofr@@Base+0x140>
   41438:	ldr	x1, [sp, #136]
   4143c:	mov	w23, #0x0                   	// #0
   41440:	bl	cc20 <mpfr_free_func@plt>
   41444:	b	41188 <mpfr_strtofr@@Base+0x140>
   41448:	mov	x19, x28
   4144c:	mov	x5, x0
   41450:	mov	x28, #0x0                   	// #0
   41454:	b	41310 <mpfr_strtofr@@Base+0x2c8>
   41458:	mov	w0, #0x1                   	// #1
   4145c:	mov	w23, #0x0                   	// #0
   41460:	str	w0, [x20, #8]
   41464:	b	41188 <mpfr_strtofr@@Base+0x140>
   41468:	adrp	x7, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   4146c:	mov	w1, w4
   41470:	add	x7, x7, #0xd60
   41474:	mov	x0, #0x0                   	// #0
   41478:	mov	w6, #0x69                  	// #105
   4147c:	b	41484 <mpfr_strtofr@@Base+0x43c>
   41480:	ldrb	w1, [x19, x0]
   41484:	sub	w5, w1, #0x41
   41488:	add	w3, w1, #0x20
   4148c:	and	w5, w5, #0xff
   41490:	and	w3, w3, #0xff
   41494:	cmp	w5, #0x1a
   41498:	csel	w1, w3, w1, cc  // cc = lo, ul, last
   4149c:	cmp	w1, w6
   414a0:	b.ne	414b8 <mpfr_strtofr@@Base+0x470>  // b.any
   414a4:	add	x0, x0, #0x1
   414a8:	ldrb	w6, [x0, x7]
   414ac:	cbnz	w6, 41480 <mpfr_strtofr@@Base+0x438>
   414b0:	add	x21, x19, #0x3
   414b4:	b	412a8 <mpfr_strtofr@@Base+0x260>
   414b8:	tst	w25, #0xffffffef
   414bc:	b.ne	412d4 <mpfr_strtofr@@Base+0x28c>  // b.any
   414c0:	cmp	w4, #0x30
   414c4:	b.eq	414d4 <mpfr_strtofr@@Base+0x48c>  // b.none
   414c8:	cbz	w8, 412e4 <mpfr_strtofr@@Base+0x29c>
   414cc:	mov	x28, #0x0                   	// #0
   414d0:	b	412f0 <mpfr_strtofr@@Base+0x2a8>
   414d4:	ldrb	w0, [x19, #1]
   414d8:	and	w0, w0, #0xffffffdf
   414dc:	and	w0, w0, #0xff
   414e0:	cmp	w0, #0x58
   414e4:	b.eq	41504 <mpfr_strtofr@@Base+0x4bc>  // b.none
   414e8:	cbnz	w8, 414cc <mpfr_strtofr@@Base+0x484>
   414ec:	cmp	w0, #0x42
   414f0:	b.ne	412e4 <mpfr_strtofr@@Base+0x29c>  // b.any
   414f4:	mov	x28, x19
   414f8:	mov	w25, #0x2                   	// #2
   414fc:	add	x19, x19, #0x2
   41500:	b	412f0 <mpfr_strtofr@@Base+0x2a8>
   41504:	mov	x28, x19
   41508:	mov	w25, #0x10                  	// #16
   4150c:	add	x19, x19, #0x2
   41510:	b	412f0 <mpfr_strtofr@@Base+0x2a8>
   41514:	ldrb	w0, [x19, #1]
   41518:	and	w0, w0, #0xffffffdf
   4151c:	and	w0, w0, #0xff
   41520:	b	414ec <mpfr_strtofr@@Base+0x4a4>
   41524:	cmp	w3, #0x40
   41528:	b.eq	41540 <mpfr_strtofr@@Base+0x4f8>  // b.none
   4152c:	cmp	w25, #0xa
   41530:	b.gt	41550 <mpfr_strtofr@@Base+0x508>
   41534:	and	w1, w3, #0xffffffdf
   41538:	cmp	w1, #0x45
   4153c:	b.ne	41550 <mpfr_strtofr@@Base+0x508>  // b.any
   41540:	ldrb	w2, [x27]
   41544:	ldr	x1, [x26]
   41548:	ldrh	w1, [x1, x2, lsl #1]
   4154c:	tbz	w1, #13, 41688 <mpfr_strtofr@@Base+0x640>
   41550:	cmp	w25, #0x2
   41554:	ccmp	w25, #0x10, #0x4, ne  // ne = any
   41558:	b.ne	41608 <mpfr_strtofr@@Base+0x5c0>  // b.any
   4155c:	and	w3, w3, #0xffffffdf
   41560:	cmp	w3, #0x50
   41564:	b.ne	41608 <mpfr_strtofr@@Base+0x5c0>  // b.any
   41568:	ldrb	w2, [x27]
   4156c:	mov	w21, #0x1                   	// #1
   41570:	ldr	x1, [x26]
   41574:	ldrh	w1, [x1, x2, lsl #1]
   41578:	tbz	w1, #13, 41704 <mpfr_strtofr@@Base+0x6bc>
   4157c:	nop
   41580:	add	x5, x0, x5
   41584:	mov	x2, x0
   41588:	b	415a8 <mpfr_strtofr@@Base+0x560>
   4158c:	ldr	x1, [sp, #144]
   41590:	add	x2, x2, #0x1
   41594:	sub	x3, x5, x2
   41598:	str	x3, [sp, #128]
   4159c:	sub	x1, x1, #0x1
   415a0:	str	x1, [sp, #144]
   415a4:	cbz	x3, 41640 <mpfr_strtofr@@Base+0x5f8>
   415a8:	ldrb	w1, [x2]
   415ac:	cbz	w1, 4158c <mpfr_strtofr@@Base+0x544>
   415b0:	ldr	x1, [sp, #128]
   415b4:	cbnz	x1, 415c4 <mpfr_strtofr@@Base+0x57c>
   415b8:	b	41640 <mpfr_strtofr@@Base+0x5f8>
   415bc:	str	x1, [sp, #128]
   415c0:	cbz	x1, 41640 <mpfr_strtofr@@Base+0x5f8>
   415c4:	sub	x1, x1, #0x1
   415c8:	ldrb	w3, [x2, x1]
   415cc:	cbz	w3, 415bc <mpfr_strtofr@@Base+0x574>
   415d0:	str	x2, [sp, #120]
   415d4:	cbz	x0, 416c8 <mpfr_strtofr@@Base+0x680>
   415d8:	cmp	w21, #0x1
   415dc:	b.ne	41734 <mpfr_strtofr@@Base+0x6ec>  // b.any
   415e0:	mov	w2, w23
   415e4:	add	x1, sp, #0x68
   415e8:	mov	x0, x20
   415ec:	bl	406e0 <__gmpfr_cuberoot@@Base+0xd8>
   415f0:	mov	w23, w0
   415f4:	mov	x21, x19
   415f8:	ldr	x0, [sp, #112]
   415fc:	ldr	x1, [sp, #136]
   41600:	bl	cc20 <mpfr_free_func@plt>
   41604:	b	41188 <mpfr_strtofr@@Base+0x140>
   41608:	mov	w21, #0x1                   	// #1
   4160c:	b	41580 <mpfr_strtofr@@Base+0x538>
   41610:	tbz	x1, #63, 416f8 <mpfr_strtofr@@Base+0x6b0>
   41614:	neg	x0, x0
   41618:	subs	x1, x0, x1
   4161c:	b.mi	41728 <mpfr_strtofr@@Base+0x6e0>  // b.first
   41620:	neg	x1, x1
   41624:	mov	w21, #0x1                   	// #1
   41628:	str	x1, [sp, #144]
   4162c:	ldr	x5, [sp, #128]
   41630:	ldr	x0, [sp, #112]
   41634:	mov	x2, x0
   41638:	cbnz	x5, 41580 <mpfr_strtofr@@Base+0x538>
   4163c:	nop
   41640:	ldr	w23, [sp, #104]
   41644:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   41648:	str	x1, [x20, #16]
   4164c:	str	x2, [sp, #120]
   41650:	cbz	w23, 41674 <mpfr_strtofr@@Base+0x62c>
   41654:	mov	w1, #0xffffffff            	// #-1
   41658:	str	w1, [x20, #8]
   4165c:	cbz	x0, 41668 <mpfr_strtofr@@Base+0x620>
   41660:	ldr	x1, [sp, #136]
   41664:	bl	cc20 <mpfr_free_func@plt>
   41668:	mov	x21, x19
   4166c:	mov	w23, #0x0                   	// #0
   41670:	b	41188 <mpfr_strtofr@@Base+0x140>
   41674:	mov	w1, #0x1                   	// #1
   41678:	str	w1, [x20, #8]
   4167c:	cbnz	x0, 41660 <mpfr_strtofr@@Base+0x618>
   41680:	mov	x21, x19
   41684:	b	41188 <mpfr_strtofr@@Base+0x140>
   41688:	add	x1, sp, #0x60
   4168c:	mov	w2, #0xa                   	// #10
   41690:	mov	x0, x27
   41694:	bl	c650 <strtol@plt>
   41698:	ldr	x2, [sp, #96]
   4169c:	ldr	x1, [sp, #144]
   416a0:	cmp	x27, x2
   416a4:	csel	x19, x19, x2, eq  // eq = none
   416a8:	tbnz	x0, #63, 41610 <mpfr_strtofr@@Base+0x5c8>
   416ac:	tbnz	x1, #63, 416f8 <mpfr_strtofr@@Base+0x6b0>
   416b0:	adds	x1, x0, x1
   416b4:	mov	w21, #0x1                   	// #1
   416b8:	b.pl	41628 <mpfr_strtofr@@Base+0x5e0>  // b.nfrst
   416bc:	mov	x1, x0
   416c0:	mov	w21, #0x2                   	// #2
   416c4:	b	41628 <mpfr_strtofr@@Base+0x5e0>
   416c8:	cmp	w21, #0x1
   416cc:	b.eq	415e0 <mpfr_strtofr@@Base+0x598>  // b.none
   416d0:	ldr	w3, [sp, #104]
   416d4:	mov	w1, w23
   416d8:	mov	x0, x20
   416dc:	mov	w2, #0x1                   	// #1
   416e0:	cmp	w3, #0x0
   416e4:	mov	x21, x19
   416e8:	cneg	w2, w2, ne  // ne = any
   416ec:	bl	bf40 <mpfr_overflow@plt>
   416f0:	mov	w23, w0
   416f4:	b	41188 <mpfr_strtofr@@Base+0x140>
   416f8:	add	x1, x0, x1
   416fc:	mov	w21, #0x1                   	// #1
   41700:	b	41628 <mpfr_strtofr@@Base+0x5e0>
   41704:	add	x1, sp, #0x60
   41708:	mov	x0, x27
   4170c:	mov	w2, #0xa                   	// #10
   41710:	bl	c650 <strtol@plt>
   41714:	str	x0, [sp, #152]
   41718:	ldr	x0, [sp, #96]
   4171c:	cmp	x27, x0
   41720:	csel	x19, x19, x0, eq  // eq = none
   41724:	b	4162c <mpfr_strtofr@@Base+0x5e4>
   41728:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   4172c:	mov	w21, #0x1                   	// #1
   41730:	b	41628 <mpfr_strtofr@@Base+0x5e0>
   41734:	ldr	x1, [sp, #136]
   41738:	bl	cc20 <mpfr_free_func@plt>
   4173c:	b	416d0 <mpfr_strtofr@@Base+0x688>
   41740:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   41744:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   41748:	add	x2, x2, #0xd10
   4174c:	add	x0, x0, #0xd00
   41750:	mov	w1, #0x3b0                 	// #944
   41754:	bl	cb40 <mpfr_assert_fail@plt>
   41758:	stp	x29, x30, [sp, #-272]!
   4175c:	mov	x29, sp
   41760:	stp	x25, x26, [sp, #64]
   41764:	mov	x25, x2
   41768:	stp	x19, x20, [sp, #16]
   4176c:	mov	w19, w4
   41770:	stp	x23, x24, [sp, #48]
   41774:	mov	x23, x1
   41778:	mov	x1, #0x1                   	// #1
   4177c:	str	x0, [sp, #96]
   41780:	mov	x0, x2
   41784:	str	w3, [sp, #120]
   41788:	bl	bc00 <__gmpz_cmpabs_ui@plt>
   4178c:	ldr	w1, [x25, #4]
   41790:	cbz	w0, 419e8 <mpfr_strtofr@@Base+0x9a0>
   41794:	ldr	x0, [x25, #8]
   41798:	cmp	w1, #0x0
   4179c:	cneg	w1, w1, lt  // lt = tstop
   417a0:	str	x0, [sp, #152]
   417a4:	ldp	x2, x3, [x25]
   417a8:	add	x0, x0, w1, sxtw #3
   417ac:	stp	x2, x3, [sp, #160]
   417b0:	sbfiz	x2, x1, #6, #32
   417b4:	ldur	x0, [x0, #-8]
   417b8:	str	w1, [sp, #164]
   417bc:	ldr	x1, [x23, #16]
   417c0:	clz	x0, x0
   417c4:	sub	x0, x2, x0
   417c8:	stp	x21, x22, [sp, #32]
   417cc:	cmp	x1, #0x0
   417d0:	stp	x27, x28, [sp, #80]
   417d4:	mov	w21, #0x3                   	// #3
   417d8:	mov	w27, #0x1                   	// #1
   417dc:	str	x0, [sp, #112]
   417e0:	b.gt	417fc <mpfr_strtofr@@Base+0x7b4>
   417e4:	ldr	w1, [x23, #8]
   417e8:	mov	w0, w21
   417ec:	mov	w27, #0x2                   	// #2
   417f0:	mov	w21, w27
   417f4:	cmp	w1, #0x0
   417f8:	csel	w27, w27, w0, gt
   417fc:	ldr	x0, [sp, #96]
   41800:	ldr	x0, [x0]
   41804:	str	x0, [sp, #104]
   41808:	cbnz	w19, 41994 <mpfr_strtofr@@Base+0x94c>
   4180c:	ldr	x1, [sp, #104]
   41810:	add	x28, sp, #0xb0
   41814:	mov	x0, x28
   41818:	eor	w19, w19, #0x1
   4181c:	mrs	x20, tpidr_el0
   41820:	add	x22, sp, #0xa0
   41824:	bl	ca80 <mpfr_init2@plt>
   41828:	mov	w24, #0x27                  	// #39
   4182c:	and	w0, w19, #0x1
   41830:	str	w0, [sp, #124]
   41834:	ldr	x0, [sp, #112]
   41838:	sub	x1, x0, #0x2
   4183c:	sub	x0, x0, #0x3
   41840:	stp	x0, x1, [sp, #128]
   41844:	mov	x0, #0x40                  	// #64
   41848:	str	x0, [sp, #144]
   4184c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   41850:	ldr	x1, [x0, #2576]
   41854:	add	x0, x0, #0xa10
   41858:	blr	x1
   4185c:	mov	w3, w21
   41860:	mov	x1, x23
   41864:	mov	x2, x23
   41868:	str	wzr, [x20, x0]
   4186c:	mov	x0, x28
   41870:	bl	bd50 <mpfr_mul@plt>
   41874:	mov	w19, w0
   41878:	ldr	x1, [sp, #136]
   4187c:	mov	x0, x22
   41880:	bl	bfe0 <__gmpz_tstbit@plt>
   41884:	cbnz	w0, 419cc <mpfr_strtofr@@Base+0x984>
   41888:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4188c:	ldr	x1, [x0, #2576]
   41890:	add	x0, x0, #0xa10
   41894:	blr	x1
   41898:	ldr	w0, [x20, x0]
   4189c:	ldr	x1, [sp, #128]
   418a0:	mov	x26, x1
   418a4:	cmn	x1, #0x1
   418a8:	b.ne	418d0 <mpfr_strtofr@@Base+0x888>  // b.any
   418ac:	b	41938 <mpfr_strtofr@@Base+0x8f0>
   418b0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   418b4:	ldr	x1, [x0, #2576]
   418b8:	add	x0, x0, #0xa10
   418bc:	blr	x1
   418c0:	sub	x26, x26, #0x1
   418c4:	ldr	w0, [x20, x0]
   418c8:	cmn	x26, #0x1
   418cc:	b.eq	41938 <mpfr_strtofr@@Base+0x8f0>  // b.none
   418d0:	tst	w0, w24
   418d4:	b.ne	41938 <mpfr_strtofr@@Base+0x8f0>  // b.any
   418d8:	mov	w3, w21
   418dc:	mov	x2, x28
   418e0:	mov	x1, x28
   418e4:	mov	x0, x28
   418e8:	bl	bd50 <mpfr_mul@plt>
   418ec:	orr	w19, w19, w0
   418f0:	mov	x1, x26
   418f4:	mov	x0, x22
   418f8:	bl	bfe0 <__gmpz_tstbit@plt>
   418fc:	cbz	w0, 418b0 <mpfr_strtofr@@Base+0x868>
   41900:	mov	x1, x28
   41904:	mov	w3, w27
   41908:	mov	x2, x23
   4190c:	mov	x0, x28
   41910:	bl	bd50 <mpfr_mul@plt>
   41914:	sub	x26, x26, #0x1
   41918:	orr	w19, w19, w0
   4191c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   41920:	ldr	x1, [x0, #2576]
   41924:	add	x0, x0, #0xa10
   41928:	blr	x1
   4192c:	cmn	x26, #0x1
   41930:	ldr	w0, [x20, x0]
   41934:	b.ne	418d0 <mpfr_strtofr@@Base+0x888>  // b.any
   41938:	ldr	w2, [sp, #124]
   4193c:	cmp	w19, #0x0
   41940:	and	w1, w0, #0x2
   41944:	csinc	w2, w2, wzr, ne  // ne = any
   41948:	cbz	w2, 41a18 <mpfr_strtofr@@Base+0x9d0>
   4194c:	cbnz	w1, 41bac <mpfr_strtofr@@Base+0xb64>
   41950:	tbnz	w0, #0, 41ab8 <mpfr_strtofr@@Base+0xa70>
   41954:	ldr	w2, [sp, #120]
   41958:	mov	x1, x28
   4195c:	ldr	w3, [sp, #184]
   41960:	ldr	x0, [sp, #96]
   41964:	bl	c6a0 <mpfr_set4@plt>
   41968:	mov	w19, w0
   4196c:	mov	x0, x28
   41970:	bl	c070 <mpfr_clear@plt>
   41974:	mov	w0, w19
   41978:	ldp	x19, x20, [sp, #16]
   4197c:	ldp	x21, x22, [sp, #32]
   41980:	ldp	x23, x24, [sp, #48]
   41984:	ldp	x25, x26, [sp, #64]
   41988:	ldp	x27, x28, [sp, #80]
   4198c:	ldp	x29, x30, [sp], #272
   41990:	ret
   41994:	add	x20, x0, #0x3
   41998:	cmp	x0, #0x1
   4199c:	ldr	x0, [sp, #112]
   419a0:	add	x20, x20, x0
   419a4:	b.eq	41b64 <mpfr_strtofr@@Base+0xb1c>  // b.none
   419a8:	b.le	41b6c <mpfr_strtofr@@Base+0xb24>
   419ac:	ldr	x0, [sp, #104]
   419b0:	sub	x26, x0, #0x1
   419b4:	clz	x0, x26
   419b8:	mov	w26, #0x40                  	// #64
   419bc:	sub	w26, w26, w0
   419c0:	add	x0, x20, w26, sxtw
   419c4:	str	x0, [sp, #104]
   419c8:	b	4180c <mpfr_strtofr@@Base+0x7c4>
   419cc:	mov	w3, w27
   419d0:	mov	x2, x23
   419d4:	mov	x1, x28
   419d8:	mov	x0, x28
   419dc:	bl	bd50 <mpfr_mul@plt>
   419e0:	orr	w19, w19, w0
   419e4:	b	41888 <mpfr_strtofr@@Base+0x840>
   419e8:	ldr	w3, [x23, #8]
   419ec:	mov	x1, x23
   419f0:	ldr	w2, [sp, #120]
   419f4:	ldr	x0, [sp, #96]
   419f8:	bl	c6a0 <mpfr_set4@plt>
   419fc:	mov	w19, w0
   41a00:	mov	w0, w19
   41a04:	ldp	x19, x20, [sp, #16]
   41a08:	ldp	x23, x24, [sp, #48]
   41a0c:	ldp	x25, x26, [sp, #64]
   41a10:	ldp	x29, x30, [sp], #272
   41a14:	ret
   41a18:	cbnz	w1, 41bac <mpfr_strtofr@@Base+0xb64>
   41a1c:	tbnz	w0, #0, 41ab8 <mpfr_strtofr@@Base+0xa70>
   41a20:	ldr	x0, [sp, #192]
   41a24:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   41a28:	cmp	x0, x1
   41a2c:	b.le	41a70 <mpfr_strtofr@@Base+0xa28>
   41a30:	ldr	x2, [sp, #96]
   41a34:	ldr	w0, [sp, #120]
   41a38:	ldr	x1, [sp, #176]
   41a3c:	cmp	w0, #0x0
   41a40:	ldr	x3, [x2]
   41a44:	sub	x1, x1, #0x1
   41a48:	ldr	x2, [sp, #104]
   41a4c:	asr	x1, x1, #6
   41a50:	ldr	x4, [sp, #112]
   41a54:	sub	x2, x2, #0x1
   41a58:	ldr	x0, [sp, #200]
   41a5c:	add	x1, x1, #0x1
   41a60:	cinc	x3, x3, eq  // eq = none
   41a64:	sub	x2, x2, x4
   41a68:	bl	c370 <mpfr_round_p@plt>
   41a6c:	cbnz	w0, 41954 <mpfr_strtofr@@Base+0x90c>
   41a70:	ldr	x1, [sp, #104]
   41a74:	mov	x0, #0xfffffffffffffeff    	// #-257
   41a78:	movk	x0, #0x7fff, lsl #48
   41a7c:	sub	x0, x0, x1
   41a80:	ldr	x1, [sp, #144]
   41a84:	cmp	x1, x0
   41a88:	b.gt	41b94 <mpfr_strtofr@@Base+0xb4c>
   41a8c:	ldr	x0, [sp, #104]
   41a90:	ldr	x1, [sp, #144]
   41a94:	add	x0, x0, x1
   41a98:	mov	x1, x0
   41a9c:	mov	x0, x28
   41aa0:	str	x1, [sp, #104]
   41aa4:	add	x2, x1, x1, lsr #63
   41aa8:	asr	x2, x2, #1
   41aac:	str	x2, [sp, #144]
   41ab0:	bl	bed0 <mpfr_set_prec@plt>
   41ab4:	b	4184c <mpfr_strtofr@@Base+0x804>
   41ab8:	ldr	w0, [sp, #120]
   41abc:	cbnz	w0, 41be8 <mpfr_strtofr@@Base+0xba0>
   41ac0:	add	x21, sp, #0xd0
   41ac4:	mov	x1, #0x2                   	// #2
   41ac8:	mov	x0, x21
   41acc:	bl	ca80 <mpfr_init2@plt>
   41ad0:	ldr	w1, [x25, #4]
   41ad4:	add	x22, sp, #0xf0
   41ad8:	mov	x0, x22
   41adc:	cmp	w1, #0x0
   41ae0:	cneg	w1, w1, lt  // lt = tstop
   41ae4:	lsl	w1, w1, #6
   41ae8:	sxtw	x1, w1
   41aec:	bl	ca80 <mpfr_init2@plt>
   41af0:	mov	x1, x25
   41af4:	mov	x0, x22
   41af8:	mov	w2, #0x0                   	// #0
   41afc:	bl	c240 <mpfr_set_z@plt>
   41b00:	cbnz	w0, 41bd0 <mpfr_strtofr@@Base+0xb88>
   41b04:	mov	x1, x23
   41b08:	mov	x2, x22
   41b0c:	mov	x5, #0x0                   	// #0
   41b10:	mov	w4, #0x1                   	// #1
   41b14:	mov	w3, #0x0                   	// #0
   41b18:	mov	x0, x21
   41b1c:	bl	c6f0 <mpfr_pow_general@plt>
   41b20:	mov	w19, w0
   41b24:	mov	x0, x22
   41b28:	bl	c070 <mpfr_clear@plt>
   41b2c:	ldr	w3, [sp, #216]
   41b30:	mov	x1, x21
   41b34:	ldr	x0, [sp, #96]
   41b38:	mov	w2, #0x0                   	// #0
   41b3c:	bl	c6a0 <mpfr_set4@plt>
   41b40:	mov	x0, x21
   41b44:	bl	c070 <mpfr_clear@plt>
   41b48:	mov	w1, #0x9                   	// #9
   41b4c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   41b50:	ldr	x2, [x0, #2576]
   41b54:	add	x0, x0, #0xa10
   41b58:	blr	x2
   41b5c:	str	w1, [x20, x0]
   41b60:	b	4196c <mpfr_strtofr@@Base+0x924>
   41b64:	str	x20, [sp, #104]
   41b68:	b	4180c <mpfr_strtofr@@Base+0x7c4>
   41b6c:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   41b70:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   41b74:	add	x2, x2, #0x2e0
   41b78:	add	x0, x0, #0xf50
   41b7c:	mov	w1, #0x42                  	// #66
   41b80:	bl	cb40 <mpfr_assert_fail@plt>
   41b84:	ldr	x0, [sp, #96]
   41b88:	ldr	x0, [x0]
   41b8c:	str	x0, [sp, #104]
   41b90:	b	419ac <mpfr_strtofr@@Base+0x964>
   41b94:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   41b98:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   41b9c:	add	x2, x2, #0x830
   41ba0:	add	x0, x0, #0xf50
   41ba4:	mov	w1, #0x64                  	// #100
   41ba8:	bl	cb40 <mpfr_assert_fail@plt>
   41bac:	ldr	x0, [sp, #152]
   41bb0:	ldr	x0, [x0]
   41bb4:	tbz	w0, #0, 41c0c <mpfr_strtofr@@Base+0xbc4>
   41bb8:	ldr	w2, [x23, #8]
   41bbc:	ldr	w1, [sp, #120]
   41bc0:	ldr	x0, [sp, #96]
   41bc4:	bl	bf40 <mpfr_overflow@plt>
   41bc8:	mov	w19, w0
   41bcc:	b	4196c <mpfr_strtofr@@Base+0x924>
   41bd0:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   41bd4:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   41bd8:	add	x2, x2, #0x2b0
   41bdc:	add	x0, x0, #0xf50
   41be0:	mov	w1, #0x85                  	// #133
   41be4:	bl	cb40 <mpfr_assert_fail@plt>
   41be8:	ldr	x0, [sp, #152]
   41bec:	ldr	x0, [x0]
   41bf0:	tbz	w0, #0, 41c14 <mpfr_strtofr@@Base+0xbcc>
   41bf4:	ldr	w2, [x23, #8]
   41bf8:	ldr	w1, [sp, #120]
   41bfc:	ldr	x0, [sp, #96]
   41c00:	bl	c3c0 <mpfr_underflow@plt>
   41c04:	mov	w19, w0
   41c08:	b	4196c <mpfr_strtofr@@Base+0x924>
   41c0c:	mov	w2, #0x1                   	// #1
   41c10:	b	41bbc <mpfr_strtofr@@Base+0xb74>
   41c14:	mov	w2, #0x1                   	// #1
   41c18:	b	41bf8 <mpfr_strtofr@@Base+0xbb0>
   41c1c:	nop

0000000000041c20 <mpfr_pow_z@@Base>:
   41c20:	stp	x29, x30, [sp, #-224]!
   41c24:	mov	x29, sp
   41c28:	stp	x25, x26, [sp, #64]
   41c2c:	mov	x25, x1
   41c30:	ldr	w1, [x2, #4]
   41c34:	stp	x21, x22, [sp, #32]
   41c38:	cbz	w1, 41f10 <mpfr_pow_z@@Base+0x2f0>
   41c3c:	stp	x19, x20, [sp, #16]
   41c40:	mov	x19, x2
   41c44:	mov	w21, w3
   41c48:	ldr	x2, [x25, #16]
   41c4c:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   41c50:	mov	x20, x0
   41c54:	cmp	x2, x3
   41c58:	b.le	41fbc <mpfr_pow_z@@Base+0x39c>
   41c5c:	stp	x27, x28, [sp, #80]
   41c60:	mrs	x28, tpidr_el0
   41c64:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   41c68:	ldr	x1, [x0, #2576]
   41c6c:	add	x0, x0, #0xa10
   41c70:	blr	x1
   41c74:	stp	x23, x24, [sp, #48]
   41c78:	add	x24, x28, x0
   41c7c:	ldr	w23, [x28, x0]
   41c80:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   41c84:	ldr	x4, [x0, #2512]
   41c88:	add	x0, x0, #0x9d0
   41c8c:	blr	x4
   41c90:	add	x4, x28, x0
   41c94:	ldr	x0, [x28, x0]
   41c98:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   41c9c:	ldrsw	x1, [x25, #8]
   41ca0:	mov	x7, #0xc000000000000001    	// #-4611686018427387903
   41ca4:	str	x0, [sp, #96]
   41ca8:	sub	x2, x2, #0x1
   41cac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   41cb0:	ldr	x5, [x0, #2544]
   41cb4:	add	x0, x0, #0x9f0
   41cb8:	blr	x5
   41cbc:	str	x7, [x4]
   41cc0:	ldr	x26, [x28, x0]
   41cc4:	str	x3, [x28, x0]
   41cc8:	mov	x0, x25
   41ccc:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   41cd0:	mov	w22, w0
   41cd4:	cbz	w0, 42004 <mpfr_pow_z@@Base+0x3e4>
   41cd8:	ldr	w22, [x19, #4]
   41cdc:	cmp	w22, #0x0
   41ce0:	b.gt	41ebc <mpfr_pow_z@@Base+0x29c>
   41ce4:	neg	w22, w22
   41ce8:	mov	x1, #0xfffffffffffffff8    	// #-8
   41cec:	ldr	x2, [x19, #8]
   41cf0:	add	x1, x1, w22, sxtw #3
   41cf4:	ldr	x0, [x20]
   41cf8:	sbfiz	x22, x22, #6, #32
   41cfc:	ldr	x1, [x2, x1]
   41d00:	cmp	x0, #0x1
   41d04:	clz	x1, x1
   41d08:	sub	x1, x22, x1
   41d0c:	str	x1, [sp, #112]
   41d10:	add	x24, x1, x0
   41d14:	add	x24, x24, #0x3
   41d18:	b.eq	41d34 <mpfr_pow_z@@Base+0x114>  // b.none
   41d1c:	b.le	42284 <mpfr_pow_z@@Base+0x664>
   41d20:	sub	x0, x0, #0x1
   41d24:	mov	w1, #0x40                  	// #64
   41d28:	clz	x0, x0
   41d2c:	sub	w0, w1, w0
   41d30:	add	x24, x24, w0, sxtw
   41d34:	add	x27, sp, #0x80
   41d38:	mov	x1, x24
   41d3c:	mov	x0, x27
   41d40:	bl	ca80 <mpfr_init2@plt>
   41d44:	ldr	x0, [x25, #16]
   41d48:	mov	w1, #0x1                   	// #1
   41d4c:	str	w1, [sp, #108]
   41d50:	cmp	x0, #0x0
   41d54:	b.le	41d6c <mpfr_pow_z@@Base+0x14c>
   41d58:	ldr	w0, [x25, #8]
   41d5c:	cmp	w0, #0x0
   41d60:	cset	w0, le
   41d64:	add	w0, w0, #0x2
   41d68:	str	w0, [sp, #108]
   41d6c:	mov	x0, #0x40                  	// #64
   41d70:	str	x0, [sp, #120]
   41d74:	ldr	w3, [sp, #108]
   41d78:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   41d7c:	ldr	x1, [x0, #2576]
   41d80:	add	x0, x0, #0xa10
   41d84:	blr	x1
   41d88:	add	x22, x28, x0
   41d8c:	mov	x2, x25
   41d90:	mov	x1, #0x1                   	// #1
   41d94:	str	wzr, [x28, x0]
   41d98:	mov	x0, x27
   41d9c:	bl	c2f0 <mpfr_ui_div@plt>
   41da0:	ldr	w0, [x22]
   41da4:	tbnz	w0, #1, 41f34 <mpfr_pow_z@@Base+0x314>
   41da8:	mov	w3, w21
   41dac:	mov	x2, x19
   41db0:	mov	x1, x27
   41db4:	mov	x0, x27
   41db8:	mov	w4, #0x0                   	// #0
   41dbc:	str	wzr, [x22]
   41dc0:	bl	41758 <mpfr_strtofr@@Base+0x710>
   41dc4:	ldr	w0, [x22]
   41dc8:	tbnz	w0, #1, 41f34 <mpfr_pow_z@@Base+0x314>
   41dcc:	tbnz	w0, #0, 42164 <mpfr_pow_z@@Base+0x544>
   41dd0:	ldr	x0, [sp, #144]
   41dd4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   41dd8:	cmp	x0, x1
   41ddc:	b.le	420d8 <mpfr_pow_z@@Base+0x4b8>
   41de0:	ldr	x1, [sp, #128]
   41de4:	cmp	w21, #0x0
   41de8:	ldr	x2, [sp, #112]
   41dec:	sub	x1, x1, #0x1
   41df0:	ldr	x0, [sp, #152]
   41df4:	asr	x1, x1, #6
   41df8:	ldr	x3, [x20]
   41dfc:	sub	x2, x24, x2
   41e00:	add	x1, x1, #0x1
   41e04:	sub	x2, x2, #0x2
   41e08:	cinc	x3, x3, eq  // eq = none
   41e0c:	bl	c370 <mpfr_round_p@plt>
   41e10:	cbz	w0, 420d8 <mpfr_pow_z@@Base+0x4b8>
   41e14:	ldr	w3, [sp, #136]
   41e18:	mov	w2, w21
   41e1c:	mov	x1, x27
   41e20:	mov	x0, x20
   41e24:	bl	c6a0 <mpfr_set4@plt>
   41e28:	mov	w22, w0
   41e2c:	mov	x0, x27
   41e30:	bl	c070 <mpfr_clear@plt>
   41e34:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   41e38:	ldr	x1, [x0, #2576]
   41e3c:	add	x0, x0, #0xa10
   41e40:	blr	x1
   41e44:	add	x2, x28, x0
   41e48:	str	w23, [x28, x0]
   41e4c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   41e50:	ldr	x3, [x0, #2512]
   41e54:	add	x0, x0, #0x9d0
   41e58:	blr	x3
   41e5c:	ldr	x1, [x20, #16]
   41e60:	ldr	x3, [sp, #96]
   41e64:	str	x3, [x28, x0]
   41e68:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   41e6c:	ldr	x4, [x0, #2544]
   41e70:	add	x0, x0, #0x9f0
   41e74:	blr	x4
   41e78:	str	x26, [x28, x0]
   41e7c:	cmp	x26, x1
   41e80:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   41e84:	b.le	41ee4 <mpfr_pow_z@@Base+0x2c4>
   41e88:	mov	w1, w22
   41e8c:	mov	w2, w21
   41e90:	mov	x0, x20
   41e94:	bl	cb30 <mpfr_check_range@plt>
   41e98:	mov	w22, w0
   41e9c:	ldp	x19, x20, [sp, #16]
   41ea0:	ldp	x23, x24, [sp, #48]
   41ea4:	ldp	x27, x28, [sp, #80]
   41ea8:	mov	w0, w22
   41eac:	ldp	x21, x22, [sp, #32]
   41eb0:	ldp	x25, x26, [sp, #64]
   41eb4:	ldp	x29, x30, [sp], #224
   41eb8:	ret
   41ebc:	mov	x1, x25
   41ec0:	mov	x2, x19
   41ec4:	mov	w3, w21
   41ec8:	mov	x0, x20
   41ecc:	mov	w4, #0x1                   	// #1
   41ed0:	bl	41758 <mpfr_strtofr@@Base+0x710>
   41ed4:	ldr	w1, [x24]
   41ed8:	mov	w22, w0
   41edc:	orr	w23, w23, w1
   41ee0:	b	41e34 <mpfr_pow_z@@Base+0x214>
   41ee4:	cbz	w22, 41e9c <mpfr_pow_z@@Base+0x27c>
   41ee8:	orr	w23, w23, #0x8
   41eec:	mov	w0, w22
   41ef0:	ldp	x19, x20, [sp, #16]
   41ef4:	ldp	x27, x28, [sp, #80]
   41ef8:	str	w23, [x2]
   41efc:	ldp	x21, x22, [sp, #32]
   41f00:	ldp	x23, x24, [sp, #48]
   41f04:	ldp	x25, x26, [sp, #64]
   41f08:	ldp	x29, x30, [sp], #224
   41f0c:	ret
   41f10:	mov	x2, #0x0                   	// #0
   41f14:	mov	x1, #0x1                   	// #1
   41f18:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   41f1c:	mov	w22, w0
   41f20:	mov	w0, w22
   41f24:	ldp	x21, x22, [sp, #32]
   41f28:	ldp	x25, x26, [sp, #64]
   41f2c:	ldp	x29, x30, [sp], #224
   41f30:	ret
   41f34:	mov	x0, x27
   41f38:	bl	c070 <mpfr_clear@plt>
   41f3c:	ldr	x2, [x19, #8]
   41f40:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   41f44:	ldr	x1, [x0, #2576]
   41f48:	add	x0, x0, #0xa10
   41f4c:	blr	x1
   41f50:	str	w23, [x28, x0]
   41f54:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   41f58:	ldr	x1, [x0, #2512]
   41f5c:	add	x0, x0, #0x9d0
   41f60:	blr	x1
   41f64:	ldr	x1, [sp, #96]
   41f68:	str	x1, [x28, x0]
   41f6c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   41f70:	ldr	x1, [x0, #2544]
   41f74:	add	x0, x0, #0x9f0
   41f78:	blr	x1
   41f7c:	str	x26, [x28, x0]
   41f80:	ldr	w1, [x19, #4]
   41f84:	ldr	x0, [x2]
   41f88:	cmp	w1, #0x0
   41f8c:	cset	w1, ne  // ne = any
   41f90:	mov	w2, #0x1                   	// #1
   41f94:	tst	w1, w0
   41f98:	b.ne	4227c <mpfr_pow_z@@Base+0x65c>  // b.any
   41f9c:	mov	x0, x20
   41fa0:	mov	w1, w21
   41fa4:	bl	bf40 <mpfr_overflow@plt>
   41fa8:	mov	w22, w0
   41fac:	ldp	x19, x20, [sp, #16]
   41fb0:	ldp	x23, x24, [sp, #48]
   41fb4:	ldp	x27, x28, [sp, #80]
   41fb8:	b	41ea8 <mpfr_pow_z@@Base+0x288>
   41fbc:	mov	x0, #0x2                   	// #2
   41fc0:	movk	x0, #0x8000, lsl #48
   41fc4:	cmp	x2, x0
   41fc8:	b.eq	42230 <mpfr_pow_z@@Base+0x610>  // b.none
   41fcc:	cmp	x2, x3
   41fd0:	b.eq	4212c <mpfr_pow_z@@Base+0x50c>  // b.none
   41fd4:	cmp	w1, #0x0
   41fd8:	b.le	42204 <mpfr_pow_z@@Base+0x5e4>
   41fdc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   41fe0:	str	x0, [x20, #16]
   41fe4:	ldr	w0, [x25, #8]
   41fe8:	cmp	w0, #0x0
   41fec:	b.le	42144 <mpfr_pow_z@@Base+0x524>
   41ff0:	mov	w0, #0x1                   	// #1
   41ff4:	mov	w22, #0x0                   	// #0
   41ff8:	str	w0, [x20, #8]
   41ffc:	ldp	x19, x20, [sp, #16]
   42000:	b	41ea8 <mpfr_pow_z@@Base+0x288>
   42004:	ldr	x0, [x19, #8]
   42008:	ldr	w1, [x19, #4]
   4200c:	ldr	x24, [x25, #16]
   42010:	cmp	w1, #0x0
   42014:	ldr	x0, [x0]
   42018:	cset	w1, ne  // ne = any
   4201c:	tst	w1, w0
   42020:	b.eq	42114 <mpfr_pow_z@@Base+0x4f4>  // b.none
   42024:	ldrsw	x1, [x25, #8]
   42028:	mov	w3, w21
   4202c:	mov	x0, x20
   42030:	mov	x2, #0x0                   	// #0
   42034:	bl	ba80 <mpfr_set_si_2exp@plt>
   42038:	add	x27, sp, #0xc0
   4203c:	mov	x0, x27
   42040:	bl	bf90 <mpfr_mpz_init@plt>
   42044:	sub	x2, x24, #0x1
   42048:	mov	x1, x19
   4204c:	mov	x0, x27
   42050:	bl	c680 <__gmpz_mul_si@plt>
   42054:	mov	x1, x27
   42058:	mov	x0, x27
   4205c:	mov	x2, #0x1                   	// #1
   42060:	bl	c360 <__gmpz_add_ui@plt>
   42064:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   42068:	ldr	x1, [x0, #2512]
   4206c:	add	x0, x0, #0x9d0
   42070:	blr	x1
   42074:	ldr	x1, [x28, x0]
   42078:	mov	x0, x27
   4207c:	bl	c800 <__gmpz_cmp_si@plt>
   42080:	tbnz	w0, #31, 422b4 <mpfr_pow_z@@Base+0x694>
   42084:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   42088:	ldr	x1, [x0, #2544]
   4208c:	add	x0, x0, #0x9f0
   42090:	blr	x1
   42094:	ldr	x1, [x28, x0]
   42098:	mov	x0, x27
   4209c:	bl	c800 <__gmpz_cmp_si@plt>
   420a0:	cmp	w0, #0x0
   420a4:	b.gt	4229c <mpfr_pow_z@@Base+0x67c>
   420a8:	mov	x0, x27
   420ac:	bl	ba20 <__gmpz_get_si@plt>
   420b0:	str	x0, [x20, #16]
   420b4:	mov	x0, x27
   420b8:	bl	c170 <mpfr_mpz_clear@plt>
   420bc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   420c0:	ldr	x1, [x0, #2576]
   420c4:	add	x0, x0, #0xa10
   420c8:	blr	x1
   420cc:	ldr	w0, [x28, x0]
   420d0:	orr	w23, w23, w0
   420d4:	b	41e34 <mpfr_pow_z@@Base+0x214>
   420d8:	ldr	x1, [sp, #120]
   420dc:	mov	x0, #0xfffffffffffffeff    	// #-257
   420e0:	movk	x0, #0x7fff, lsl #48
   420e4:	sub	x0, x0, x24
   420e8:	cmp	x0, x1
   420ec:	b.lt	42264 <mpfr_pow_z@@Base+0x644>  // b.tstop
   420f0:	ldr	x0, [sp, #120]
   420f4:	add	x24, x24, x0
   420f8:	mov	x0, x27
   420fc:	mov	x1, x24
   42100:	add	x2, x24, x24, lsr #63
   42104:	asr	x2, x2, #1
   42108:	str	x2, [sp, #120]
   4210c:	bl	bed0 <mpfr_set_prec@plt>
   42110:	b	41d74 <mpfr_pow_z@@Base+0x154>
   42114:	mov	w3, w21
   42118:	mov	x0, x20
   4211c:	mov	x2, #0x0                   	// #0
   42120:	mov	x1, #0x1                   	// #1
   42124:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   42128:	b	42038 <mpfr_pow_z@@Base+0x418>
   4212c:	ldr	w0, [x25, #8]
   42130:	cmp	w1, #0x0
   42134:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   42138:	csel	x2, x2, x1, gt
   4213c:	str	x2, [x20, #16]
   42140:	tbz	w0, #31, 41ff0 <mpfr_pow_z@@Base+0x3d0>
   42144:	ldr	x0, [x19, #8]
   42148:	ldr	x0, [x0]
   4214c:	tbz	w0, #0, 41ff0 <mpfr_pow_z@@Base+0x3d0>
   42150:	mov	w0, #0xffffffff            	// #-1
   42154:	mov	w22, #0x0                   	// #0
   42158:	str	w0, [x20, #8]
   4215c:	ldp	x19, x20, [sp, #16]
   42160:	b	41ea8 <mpfr_pow_z@@Base+0x288>
   42164:	mov	x0, x27
   42168:	bl	c070 <mpfr_clear@plt>
   4216c:	cbnz	w21, 422ec <mpfr_pow_z@@Base+0x6cc>
   42170:	add	x24, sp, #0xa0
   42174:	mov	x1, #0x2                   	// #2
   42178:	mov	x0, x24
   4217c:	bl	ca80 <mpfr_init2@plt>
   42180:	ldr	w1, [x19, #4]
   42184:	add	x27, sp, #0xc0
   42188:	mov	x0, x27
   4218c:	cmp	w1, #0x0
   42190:	cneg	w1, w1, lt  // lt = tstop
   42194:	lsl	w1, w1, #6
   42198:	sxtw	x1, w1
   4219c:	bl	ca80 <mpfr_init2@plt>
   421a0:	mov	x1, x19
   421a4:	mov	x0, x27
   421a8:	mov	w2, #0x0                   	// #0
   421ac:	bl	c240 <mpfr_set_z@plt>
   421b0:	mov	w21, w0
   421b4:	cbnz	w0, 422d4 <mpfr_pow_z@@Base+0x6b4>
   421b8:	mov	x1, x25
   421bc:	mov	x2, x27
   421c0:	mov	x5, #0x0                   	// #0
   421c4:	mov	w4, #0x1                   	// #1
   421c8:	mov	w3, #0x0                   	// #0
   421cc:	mov	x0, x24
   421d0:	bl	c6f0 <mpfr_pow_general@plt>
   421d4:	mov	w22, w0
   421d8:	mov	x0, x27
   421dc:	bl	c070 <mpfr_clear@plt>
   421e0:	ldr	w3, [sp, #168]
   421e4:	mov	x1, x24
   421e8:	mov	w2, #0x0                   	// #0
   421ec:	mov	x0, x20
   421f0:	orr	w23, w23, #0x1
   421f4:	bl	c6a0 <mpfr_set4@plt>
   421f8:	mov	x0, x24
   421fc:	bl	c070 <mpfr_clear@plt>
   42200:	b	41e34 <mpfr_pow_z@@Base+0x214>
   42204:	mrs	x1, tpidr_el0
   42208:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4220c:	ldr	x2, [x0, #2576]
   42210:	add	x0, x0, #0xa10
   42214:	blr	x2
   42218:	add	x0, x1, x0
   4221c:	str	x3, [x20, #16]
   42220:	ldr	w1, [x0]
   42224:	orr	w1, w1, #0x20
   42228:	str	w1, [x0]
   4222c:	b	41fe4 <mpfr_pow_z@@Base+0x3c4>
   42230:	mrs	x1, tpidr_el0
   42234:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   42238:	ldr	x3, [x0, #2576]
   4223c:	add	x0, x0, #0xa10
   42240:	blr	x3
   42244:	add	x0, x1, x0
   42248:	mov	w22, #0x0                   	// #0
   4224c:	str	x2, [x20, #16]
   42250:	ldp	x19, x20, [sp, #16]
   42254:	ldr	w1, [x0]
   42258:	orr	w1, w1, #0x4
   4225c:	str	w1, [x0]
   42260:	b	41ea8 <mpfr_pow_z@@Base+0x288>
   42264:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   42268:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   4226c:	add	x2, x2, #0xd20
   42270:	add	x0, x0, #0xf50
   42274:	mov	w1, #0x169                 	// #361
   42278:	bl	cb40 <mpfr_assert_fail@plt>
   4227c:	ldr	w2, [x25, #8]
   42280:	b	41f9c <mpfr_pow_z@@Base+0x37c>
   42284:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   42288:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   4228c:	add	x2, x2, #0x610
   42290:	add	x0, x0, #0xf50
   42294:	mov	w1, #0x118                 	// #280
   42298:	bl	cb40 <mpfr_assert_fail@plt>
   4229c:	ldr	w2, [x20, #8]
   422a0:	mov	w1, w21
   422a4:	mov	x0, x20
   422a8:	bl	bf40 <mpfr_overflow@plt>
   422ac:	mov	w22, w0
   422b0:	b	420b4 <mpfr_pow_z@@Base+0x494>
   422b4:	ldr	w2, [x20, #8]
   422b8:	cmp	w21, #0x0
   422bc:	csinc	w21, w21, wzr, ne  // ne = any
   422c0:	mov	x0, x20
   422c4:	mov	w1, w21
   422c8:	bl	c3c0 <mpfr_underflow@plt>
   422cc:	mov	w22, w0
   422d0:	b	420b4 <mpfr_pow_z@@Base+0x494>
   422d4:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   422d8:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   422dc:	add	x2, x2, #0x2b0
   422e0:	add	x0, x0, #0xf50
   422e4:	mov	w1, #0x155                 	// #341
   422e8:	bl	cb40 <mpfr_assert_fail@plt>
   422ec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   422f0:	ldr	x1, [x0, #2512]
   422f4:	add	x0, x0, #0x9d0
   422f8:	blr	x1
   422fc:	ldr	x1, [sp, #96]
   42300:	str	x1, [x28, x0]
   42304:	ldr	x2, [x19, #8]
   42308:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4230c:	ldr	x1, [x0, #2544]
   42310:	add	x0, x0, #0x9f0
   42314:	blr	x1
   42318:	str	x26, [x28, x0]
   4231c:	ldr	w1, [x19, #4]
   42320:	ldr	x0, [x2]
   42324:	cmp	w1, #0x0
   42328:	str	w23, [x22]
   4232c:	cset	w1, ne  // ne = any
   42330:	tst	w1, w0
   42334:	b.eq	4235c <mpfr_pow_z@@Base+0x73c>  // b.none
   42338:	ldr	w2, [x25, #8]
   4233c:	mov	x0, x20
   42340:	mov	w1, w21
   42344:	bl	c3c0 <mpfr_underflow@plt>
   42348:	mov	w22, w0
   4234c:	ldp	x19, x20, [sp, #16]
   42350:	ldp	x23, x24, [sp, #48]
   42354:	ldp	x27, x28, [sp, #80]
   42358:	b	41ea8 <mpfr_pow_z@@Base+0x288>
   4235c:	mov	w2, #0x1                   	// #1
   42360:	b	4233c <mpfr_pow_z@@Base+0x71c>
   42364:	nop
   42368:	stp	x29, x30, [sp, #-64]!
   4236c:	mov	x29, sp
   42370:	stp	x21, x22, [sp, #32]
   42374:	mov	x22, x3
   42378:	lsl	x3, x3, #3
   4237c:	sub	x3, x3, #0x8
   42380:	cmp	x22, #0x1
   42384:	ldr	x5, [x2]
   42388:	add	x21, x0, x3
   4238c:	ldr	x4, [x1, x3]
   42390:	umulh	x6, x4, x5
   42394:	str	x6, [x0, x22, lsl #3]
   42398:	mul	x4, x4, x5
   4239c:	str	x4, [x0, x3]
   423a0:	b.le	423f0 <mpfr_pow_z@@Base+0x7d0>
   423a4:	add	x1, x1, x22, lsl #3
   423a8:	stp	x19, x20, [sp, #16]
   423ac:	sub	x20, x1, #0x10
   423b0:	str	x23, [sp, #48]
   423b4:	sub	x23, x2, #0x8
   423b8:	mov	x19, #0x1                   	// #1
   423bc:	nop
   423c0:	add	x19, x19, #0x1
   423c4:	mov	x1, x20
   423c8:	mov	x2, x19
   423cc:	mov	x0, x21
   423d0:	sub	x20, x20, #0x8
   423d4:	ldr	x3, [x23, x19, lsl #3]
   423d8:	bl	ccd0 <__gmpn_addmul_1@plt>
   423dc:	str	x0, [x21, x19, lsl #3]
   423e0:	cmp	x19, x22
   423e4:	b.ne	423c0 <mpfr_pow_z@@Base+0x7a0>  // b.any
   423e8:	ldp	x19, x20, [sp, #16]
   423ec:	ldr	x23, [sp, #48]
   423f0:	ldp	x21, x22, [sp, #32]
   423f4:	ldp	x29, x30, [sp], #64
   423f8:	ret
   423fc:	nop

0000000000042400 <mpfr_mulhigh_n@@Base>:
   42400:	stp	x29, x30, [sp, #-96]!
   42404:	cmp	x3, #0x10
   42408:	mov	x29, sp
   4240c:	stp	x19, x20, [sp, #16]
   42410:	mov	x19, x3
   42414:	mov	x20, x1
   42418:	stp	x21, x22, [sp, #32]
   4241c:	mov	x21, x2
   42420:	stp	x23, x24, [sp, #48]
   42424:	mov	x23, x0
   42428:	b.hi	425ac <mpfr_mulhigh_n@@Base+0x1ac>  // b.pmore
   4242c:	adrp	x1, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   42430:	add	x1, x1, #0xf58
   42434:	ldrsh	x24, [x1, x3, lsl #1]
   42438:	cmp	x24, #0x0
   4243c:	b.lt	42498 <mpfr_mulhigh_n@@Base+0x98>  // b.tstop
   42440:	b.eq	42474 <mpfr_mulhigh_n@@Base+0x74>  // b.none
   42444:	mov	x0, #0x2100                	// #8448
   42448:	cmp	x19, x0
   4244c:	b.le	424c0 <mpfr_mulhigh_n@@Base+0xc0>
   42450:	mov	x3, x19
   42454:	mov	x2, x21
   42458:	mov	x1, x20
   4245c:	mov	x0, x23
   42460:	ldp	x19, x20, [sp, #16]
   42464:	ldp	x21, x22, [sp, #32]
   42468:	ldp	x23, x24, [sp, #48]
   4246c:	ldp	x29, x30, [sp], #96
   42470:	b	c470 <__gmpn_mul_n@plt>
   42474:	mov	x3, x19
   42478:	mov	x2, x21
   4247c:	mov	x1, x20
   42480:	mov	x0, x23
   42484:	ldp	x19, x20, [sp, #16]
   42488:	ldp	x21, x22, [sp, #32]
   4248c:	ldp	x23, x24, [sp, #48]
   42490:	ldp	x29, x30, [sp], #96
   42494:	b	42368 <mpfr_pow_z@@Base+0x748>
   42498:	mov	x3, x21
   4249c:	mov	x1, x20
   424a0:	mov	x0, x23
   424a4:	mov	x4, x19
   424a8:	mov	x2, x19
   424ac:	ldp	x19, x20, [sp, #16]
   424b0:	ldp	x21, x22, [sp, #32]
   424b4:	ldp	x23, x24, [sp, #48]
   424b8:	ldp	x29, x30, [sp], #96
   424bc:	b	c7a0 <__gmpn_mul@plt>
   424c0:	stp	x25, x26, [sp, #64]
   424c4:	sub	x25, x19, x24
   424c8:	mov	x3, x24
   424cc:	lsl	x22, x25, #3
   424d0:	add	x0, x23, x25, lsl #4
   424d4:	add	x2, x21, x22
   424d8:	add	x1, x20, x22
   424dc:	add	x26, x23, x19, lsl #3
   424e0:	sub	x22, x22, #0x8
   424e4:	stp	x27, x28, [sp, #80]
   424e8:	bl	c470 <__gmpn_mul_n@plt>
   424ec:	lsl	x27, x24, #3
   424f0:	sub	x26, x26, #0x8
   424f4:	mov	x2, x21
   424f8:	add	x28, x25, #0x1
   424fc:	mov	x3, x25
   42500:	add	x1, x20, x27
   42504:	mov	x0, x23
   42508:	add	x22, x23, x22
   4250c:	bl	42400 <mpfr_mulhigh_n@@Base>
   42510:	add	x19, x19, x25
   42514:	mov	x2, x22
   42518:	mov	x3, x28
   4251c:	mov	x1, x26
   42520:	mov	x0, x26
   42524:	bl	c5a0 <__gmpn_add_n@plt>
   42528:	add	x2, x21, x27
   4252c:	mov	x1, x20
   42530:	mov	x21, x0
   42534:	mov	x3, x25
   42538:	mov	x0, x23
   4253c:	bl	42400 <mpfr_mulhigh_n@@Base>
   42540:	mov	x2, x22
   42544:	mov	x1, x26
   42548:	mov	x3, x28
   4254c:	mov	x0, x26
   42550:	bl	c5a0 <__gmpn_add_n@plt>
   42554:	add	x1, x21, x0
   42558:	ldr	x0, [x23, x19, lsl #3]
   4255c:	add	x2, x23, x19, lsl #3
   42560:	adds	x1, x1, x0
   42564:	str	x1, [x23, x19, lsl #3]
   42568:	b.cc	42590 <mpfr_mulhigh_n@@Base+0x190>  // b.lo, b.ul, b.last
   4256c:	mov	x0, #0x1                   	// #1
   42570:	b	42588 <mpfr_mulhigh_n@@Base+0x188>
   42574:	ldr	x1, [x2, x0, lsl #3]
   42578:	add	x1, x1, #0x1
   4257c:	str	x1, [x2, x0, lsl #3]
   42580:	add	x0, x0, #0x1
   42584:	cbnz	x1, 42590 <mpfr_mulhigh_n@@Base+0x190>
   42588:	cmp	x24, x0
   4258c:	b.gt	42574 <mpfr_mulhigh_n@@Base+0x174>
   42590:	ldp	x19, x20, [sp, #16]
   42594:	ldp	x21, x22, [sp, #32]
   42598:	ldp	x23, x24, [sp, #48]
   4259c:	ldp	x25, x26, [sp, #64]
   425a0:	ldp	x27, x28, [sp, #80]
   425a4:	ldp	x29, x30, [sp], #96
   425a8:	ret
   425ac:	cmp	x3, #0x0
   425b0:	add	x24, x3, #0x3
   425b4:	csel	x24, x24, x3, lt  // lt = tstop
   425b8:	asr	x24, x24, #2
   425bc:	add	x24, x24, x24, lsl #1
   425c0:	b	42438 <mpfr_mulhigh_n@@Base+0x38>
   425c4:	nop

00000000000425c8 <mpfr_sqrhigh_n@@Base>:
   425c8:	stp	x29, x30, [sp, #-80]!
   425cc:	cmp	x2, #0x10
   425d0:	mov	x29, sp
   425d4:	stp	x19, x20, [sp, #16]
   425d8:	mov	x19, x2
   425dc:	mov	x20, x0
   425e0:	stp	x21, x22, [sp, #32]
   425e4:	mov	x22, x1
   425e8:	b.hi	42708 <mpfr_sqrhigh_n@@Base+0x140>  // b.pmore
   425ec:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   425f0:	add	x0, x0, #0xf58
   425f4:	ldrsh	x21, [x0, x2, lsl #1]
   425f8:	cmp	x21, #0x0
   425fc:	b.lt	426ec <mpfr_sqrhigh_n@@Base+0x124>  // b.tstop
   42600:	b.ne	42624 <mpfr_sqrhigh_n@@Base+0x5c>  // b.any
   42604:	mov	x3, x19
   42608:	mov	x0, x20
   4260c:	mov	x2, x22
   42610:	mov	x1, x22
   42614:	ldp	x19, x20, [sp, #16]
   42618:	ldp	x21, x22, [sp, #32]
   4261c:	ldp	x29, x30, [sp], #80
   42620:	b	42368 <mpfr_pow_z@@Base+0x748>
   42624:	stp	x23, x24, [sp, #48]
   42628:	sub	x24, x19, x21
   4262c:	mov	x2, x21
   42630:	lsl	x23, x24, #3
   42634:	add	x0, x20, x24, lsl #4
   42638:	add	x1, x22, x23
   4263c:	str	x25, [sp, #64]
   42640:	bl	c3b0 <__gmpn_sqr@plt>
   42644:	add	x25, x24, #0x1
   42648:	add	x2, x22, x21, lsl #3
   4264c:	mov	x1, x22
   42650:	sub	x22, x23, #0x8
   42654:	mov	x3, x24
   42658:	add	x22, x20, x22
   4265c:	mov	x0, x20
   42660:	bl	bc80 <mpfr_mulhigh_n@plt>
   42664:	mov	x1, x22
   42668:	mov	x2, x25
   4266c:	mov	x0, x22
   42670:	mov	w3, #0x1                   	// #1
   42674:	bl	bcc0 <__gmpn_lshift@plt>
   42678:	add	x1, x20, x19, lsl #3
   4267c:	add	x19, x19, x24
   42680:	sub	x1, x1, #0x8
   42684:	mov	x2, x22
   42688:	mov	x3, x25
   4268c:	mov	x22, x0
   42690:	mov	x0, x1
   42694:	bl	c5a0 <__gmpn_add_n@plt>
   42698:	ldr	x1, [x20, x19, lsl #3]
   4269c:	add	x0, x22, x0
   426a0:	add	x2, x20, x19, lsl #3
   426a4:	adds	x0, x0, x1
   426a8:	str	x0, [x20, x19, lsl #3]
   426ac:	b.cc	426d4 <mpfr_sqrhigh_n@@Base+0x10c>  // b.lo, b.ul, b.last
   426b0:	mov	x0, #0x1                   	// #1
   426b4:	b	426cc <mpfr_sqrhigh_n@@Base+0x104>
   426b8:	ldr	x1, [x2, x0, lsl #3]
   426bc:	add	x1, x1, #0x1
   426c0:	str	x1, [x2, x0, lsl #3]
   426c4:	add	x0, x0, #0x1
   426c8:	cbnz	x1, 426d4 <mpfr_sqrhigh_n@@Base+0x10c>
   426cc:	cmp	x21, x0
   426d0:	b.gt	426b8 <mpfr_sqrhigh_n@@Base+0xf0>
   426d4:	ldp	x19, x20, [sp, #16]
   426d8:	ldp	x21, x22, [sp, #32]
   426dc:	ldp	x23, x24, [sp, #48]
   426e0:	ldr	x25, [sp, #64]
   426e4:	ldp	x29, x30, [sp], #80
   426e8:	ret
   426ec:	mov	x2, x19
   426f0:	mov	x1, x22
   426f4:	mov	x0, x20
   426f8:	ldp	x19, x20, [sp, #16]
   426fc:	ldp	x21, x22, [sp, #32]
   42700:	ldp	x29, x30, [sp], #80
   42704:	b	c3b0 <__gmpn_sqr@plt>
   42708:	add	x21, x2, #0x4
   4270c:	add	x21, x21, x21, lsr #63
   42710:	asr	x21, x21, #1
   42714:	b	425f8 <mpfr_sqrhigh_n@@Base+0x30>

0000000000042718 <mpfr_divhigh_n@@Base>:
   42718:	stp	x29, x30, [sp, #-128]!
   4271c:	cmp	x3, #0x10
   42720:	mov	x29, sp
   42724:	stp	x19, x20, [sp, #16]
   42728:	stp	x21, x22, [sp, #32]
   4272c:	mov	x21, x0
   42730:	stp	x23, x24, [sp, #48]
   42734:	mov	x23, x2
   42738:	stp	x25, x26, [sp, #64]
   4273c:	mov	x26, x3
   42740:	stp	x27, x28, [sp, #80]
   42744:	stp	x3, x1, [x29, #96]
   42748:	b.hi	42b04 <mpfr_divhigh_n@@Base+0x3ec>  // b.pmore
   4274c:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   42750:	add	x0, x0, #0xf58
   42754:	add	x0, x0, #0x28
   42758:	ldrsh	x20, [x0, x3, lsl #1]
   4275c:	cbz	x20, 428f4 <mpfr_divhigh_n@@Base+0x1dc>
   42760:	cmp	x20, x26
   42764:	b.eq	42b1c <mpfr_divhigh_n@@Base+0x404>  // b.none
   42768:	sub	x24, x26, x20
   4276c:	mov	x5, x20
   42770:	ldr	x2, [x29, #104]
   42774:	lsl	x28, x24, #3
   42778:	lsl	x25, x24, #4
   4277c:	add	x19, x21, x28
   42780:	lsl	x3, x20, #1
   42784:	add	x4, x23, x28
   42788:	mov	x0, x19
   4278c:	add	x2, x2, x25
   42790:	mov	x1, #0x0                   	// #0
   42794:	str	xzr, [x29, #120]
   42798:	bl	ccb0 <__gmpn_divrem@plt>
   4279c:	mov	x22, x0
   427a0:	cmp	x25, #0x4, lsl #12
   427a4:	b.hi	42b40 <mpfr_divhigh_n@@Base+0x428>  // b.pmore
   427a8:	sub	sp, sp, x25
   427ac:	mov	x27, sp
   427b0:	ldr	x4, [x29, #104]
   427b4:	lsl	x25, x20, #3
   427b8:	mov	x0, x27
   427bc:	mov	x3, x24
   427c0:	add	x1, x21, x25
   427c4:	mov	x2, x23
   427c8:	add	x4, x4, x26, lsl #3
   427cc:	str	x4, [x29, #96]
   427d0:	bl	bc80 <mpfr_mulhigh_n@plt>
   427d4:	ldr	x4, [x29, #96]
   427d8:	add	x2, x27, x28
   427dc:	mov	x3, x24
   427e0:	mov	x1, x4
   427e4:	mov	x0, x4
   427e8:	bl	be60 <__gmpn_sub_n@plt>
   427ec:	mov	x27, x0
   427f0:	ldr	x4, [x29, #96]
   427f4:	cbnz	x22, 428d8 <mpfr_divhigh_n@@Base+0x1c0>
   427f8:	ldr	x0, [x29, #104]
   427fc:	add	x28, x0, x28
   42800:	cbz	x27, 4285c <mpfr_divhigh_n@@Base+0x144>
   42804:	nop
   42808:	ldr	x0, [x19]
   4280c:	sub	x1, x0, #0x1
   42810:	str	x1, [x19]
   42814:	cbnz	x0, 42840 <mpfr_divhigh_n@@Base+0x128>
   42818:	mov	x4, #0x1                   	// #1
   4281c:	b	42834 <mpfr_divhigh_n@@Base+0x11c>
   42820:	ldr	x6, [x19, x4, lsl #3]
   42824:	sub	x7, x6, #0x1
   42828:	str	x7, [x19, x4, lsl #3]
   4282c:	add	x4, x4, #0x1
   42830:	cbnz	x6, 42840 <mpfr_divhigh_n@@Base+0x128>
   42834:	cmp	x20, x4
   42838:	b.gt	42820 <mpfr_divhigh_n@@Base+0x108>
   4283c:	sub	x22, x22, #0x1
   42840:	mov	x3, x26
   42844:	mov	x2, x23
   42848:	mov	x1, x28
   4284c:	mov	x0, x28
   42850:	bl	c5a0 <__gmpn_add_n@plt>
   42854:	subs	x27, x27, x0
   42858:	b.ne	42808 <mpfr_divhigh_n@@Base+0xf0>  // b.any
   4285c:	ldr	x0, [x29, #104]
   42860:	add	x2, x23, x25
   42864:	mov	x3, x24
   42868:	add	x1, x0, x25
   4286c:	mov	x0, x21
   42870:	bl	42718 <mpfr_divhigh_n@@Base>
   42874:	ldr	x1, [x21, x24, lsl #3]
   42878:	adds	x0, x0, x1
   4287c:	str	x0, [x21, x24, lsl #3]
   42880:	b.cc	428ac <mpfr_divhigh_n@@Base+0x194>  // b.lo, b.ul, b.last
   42884:	mov	x0, #0x1                   	// #1
   42888:	b	428a0 <mpfr_divhigh_n@@Base+0x188>
   4288c:	ldr	x1, [x19, x0, lsl #3]
   42890:	add	x1, x1, #0x1
   42894:	str	x1, [x19, x0, lsl #3]
   42898:	add	x0, x0, #0x1
   4289c:	cbnz	x1, 428ac <mpfr_divhigh_n@@Base+0x194>
   428a0:	cmp	x20, x0
   428a4:	b.gt	4288c <mpfr_divhigh_n@@Base+0x174>
   428a8:	add	x22, x22, #0x1
   428ac:	ldr	x0, [x29, #120]
   428b0:	cbnz	x0, 42b54 <mpfr_divhigh_n@@Base+0x43c>
   428b4:	mov	sp, x29
   428b8:	mov	x0, x22
   428bc:	ldp	x19, x20, [sp, #16]
   428c0:	ldp	x21, x22, [sp, #32]
   428c4:	ldp	x23, x24, [sp, #48]
   428c8:	ldp	x25, x26, [sp, #64]
   428cc:	ldp	x27, x28, [sp, #80]
   428d0:	ldp	x29, x30, [sp], #128
   428d4:	ret
   428d8:	mov	x3, x24
   428dc:	mov	x2, x23
   428e0:	mov	x1, x4
   428e4:	mov	x0, x4
   428e8:	bl	be60 <__gmpn_sub_n@plt>
   428ec:	add	x27, x27, x0
   428f0:	b	427f8 <mpfr_divhigh_n@@Base+0xe0>
   428f4:	ldr	x1, [x29, #104]
   428f8:	lsl	x25, x26, #3
   428fc:	mov	x0, x26
   42900:	add	x19, x1, x25
   42904:	b	42918 <mpfr_divhigh_n@@Base+0x200>
   42908:	ldr	x3, [x19, x0, lsl #3]
   4290c:	ldr	x2, [x23, x0, lsl #3]
   42910:	cmp	x3, x2
   42914:	b.ne	42af8 <mpfr_divhigh_n@@Base+0x3e0>  // b.any
   42918:	subs	x0, x0, #0x1
   4291c:	b.pl	42908 <mpfr_divhigh_n@@Base+0x1f0>  // b.nfrst
   42920:	mov	x3, x26
   42924:	mov	x2, x23
   42928:	mov	x1, x19
   4292c:	mov	x0, x19
   42930:	mov	x22, #0x1                   	// #1
   42934:	bl	be60 <__gmpn_sub_n@plt>
   42938:	add	x2, x23, x25
   4293c:	cmp	x26, #0x1
   42940:	ldur	x24, [x2, #-8]
   42944:	mvn	x0, x24
   42948:	lsr	x1, x24, #32
   4294c:	b.eq	42b5c <mpfr_divhigh_n@@Base+0x444>  // b.none
   42950:	udiv	x28, x0, x1
   42954:	and	x3, x24, #0xffffffff
   42958:	ldur	x27, [x2, #-16]
   4295c:	msub	x0, x28, x1, x0
   42960:	mul	x2, x3, x28
   42964:	lsl	x0, x0, #32
   42968:	orr	x0, x0, #0xffffffff
   4296c:	cmp	x2, x0
   42970:	b.ls	42988 <mpfr_divhigh_n@@Base+0x270>  // b.plast
   42974:	adds	x0, x24, x0
   42978:	sub	x4, x28, #0x1
   4297c:	ccmp	x2, x0, #0x0, cc  // cc = lo, ul, last
   42980:	b.hi	42be0 <mpfr_divhigh_n@@Base+0x4c8>  // b.pmore
   42984:	mov	x28, x4
   42988:	sub	x0, x0, x2
   4298c:	udiv	x2, x0, x1
   42990:	msub	x0, x2, x1, x0
   42994:	mul	x3, x3, x2
   42998:	lsl	x0, x0, #32
   4299c:	orr	x0, x0, #0xffffffff
   429a0:	cmp	x3, x0
   429a4:	b.ls	429bc <mpfr_divhigh_n@@Base+0x2a4>  // b.plast
   429a8:	adds	x0, x24, x0
   429ac:	sub	x1, x2, #0x1
   429b0:	ccmp	x3, x0, #0x0, cc  // cc = lo, ul, last
   429b4:	sub	x2, x2, #0x2
   429b8:	csel	x2, x2, x1, hi  // hi = pmore
   429bc:	orr	x28, x2, x28, lsl #32
   429c0:	mul	x0, x24, x28
   429c4:	adds	x0, x27, x0
   429c8:	b.cc	429ec <mpfr_divhigh_n@@Base+0x2d4>  // b.lo, b.ul, b.last
   429cc:	cmp	x24, x0
   429d0:	sub	x28, x28, #0x1
   429d4:	cset	x2, ls  // ls = plast
   429d8:	sub	x0, x0, x24
   429dc:	neg	x1, x2
   429e0:	sub	x28, x28, x2
   429e4:	and	x1, x1, x24
   429e8:	sub	x0, x0, x1
   429ec:	umulh	x1, x27, x28
   429f0:	adds	x0, x1, x0
   429f4:	b.cs	42bf8 <mpfr_divhigh_n@@Base+0x4e0>  // b.hs, b.nlast
   429f8:	add	x25, x19, x25
   429fc:	cmp	x26, #0x1
   42a00:	sub	x19, x19, #0x8
   42a04:	b.le	42aa8 <mpfr_divhigh_n@@Base+0x390>
   42a08:	ldur	x2, [x25, #-8]
   42a0c:	cmp	x24, x2
   42a10:	b.cc	42ac8 <mpfr_divhigh_n@@Base+0x3b0>  // b.lo, b.ul, b.last
   42a14:	mul	x3, x2, x28
   42a18:	ldur	x0, [x25, #-16]
   42a1c:	b.eq	42ac0 <mpfr_divhigh_n@@Base+0x3a8>  // b.none
   42a20:	umulh	x1, x2, x28
   42a24:	adds	x7, x3, x0
   42a28:	adc	x1, x1, x2
   42a2c:	umulh	x2, x27, x1
   42a30:	msub	x0, x24, x1, x0
   42a34:	mul	x6, x27, x1
   42a38:	ldur	x5, [x25, #-24]
   42a3c:	subs	x3, x5, x27
   42a40:	sbc	x0, x0, x24
   42a44:	subs	x5, x3, x6
   42a48:	sbc	x0, x0, x2
   42a4c:	cmp	x7, x0
   42a50:	csetm	x2, ls  // ls = plast
   42a54:	cinc	x20, x1, hi  // hi = pmore
   42a58:	and	x3, x24, x2
   42a5c:	and	x1, x27, x2
   42a60:	adds	x2, x5, x1
   42a64:	adc	x0, x0, x3
   42a68:	cmp	x24, x0
   42a6c:	b.ls	42aec <mpfr_divhigh_n@@Base+0x3d4>  // b.plast
   42a70:	mov	x1, x23
   42a74:	mov	x3, x20
   42a78:	mov	x2, x26
   42a7c:	mov	x0, x19
   42a80:	bl	c4c0 <__gmpn_submul_1@plt>
   42a84:	sub	x25, x25, #0x8
   42a88:	ldr	x1, [x25]
   42a8c:	cmp	x0, x1
   42a90:	b.hi	42ad0 <mpfr_divhigh_n@@Base+0x3b8>  // b.pmore
   42a94:	sub	x26, x26, #0x1
   42a98:	add	x23, x23, #0x8
   42a9c:	cmp	x26, #0x1
   42aa0:	str	x20, [x21, x26, lsl #3]
   42aa4:	b.ne	42a08 <mpfr_divhigh_n@@Base+0x2f0>  // b.any
   42aa8:	ldp	x1, x0, [x29, #96]
   42aac:	ldr	x0, [x0, x1, lsl #3]
   42ab0:	umulh	x28, x0, x28
   42ab4:	add	x0, x0, x28
   42ab8:	str	x0, [x21]
   42abc:	b	428b4 <mpfr_divhigh_n@@Base+0x19c>
   42ac0:	cmp	x0, x27
   42ac4:	b.cc	42a20 <mpfr_divhigh_n@@Base+0x308>  // b.lo, b.ul, b.last
   42ac8:	mov	x20, #0xffffffffffffffff    	// #-1
   42acc:	b	42a70 <mpfr_divhigh_n@@Base+0x358>
   42ad0:	sub	x20, x20, #0x1
   42ad4:	mov	x3, x26
   42ad8:	mov	x2, x23
   42adc:	mov	x1, x19
   42ae0:	mov	x0, x19
   42ae4:	bl	c5a0 <__gmpn_add_n@plt>
   42ae8:	b	42a94 <mpfr_divhigh_n@@Base+0x37c>
   42aec:	ccmp	x27, x2, #0x0, cs  // cs = hs, nlast
   42af0:	cinc	x20, x20, ls  // ls = plast
   42af4:	b	42a70 <mpfr_divhigh_n@@Base+0x358>
   42af8:	mov	x22, #0x0                   	// #0
   42afc:	b.ls	42938 <mpfr_divhigh_n@@Base+0x220>  // b.plast
   42b00:	b	42920 <mpfr_divhigh_n@@Base+0x208>
   42b04:	mov	x20, #0x5555555555555555    	// #6148914691236517205
   42b08:	movk	x20, #0x5556
   42b0c:	smulh	x20, x3, x20
   42b10:	sub	x20, x20, x3, asr #63
   42b14:	lsl	x20, x20, #1
   42b18:	b	4275c <mpfr_divhigh_n@@Base+0x44>
   42b1c:	ldr	x2, [x29, #104]
   42b20:	mov	x4, x23
   42b24:	mov	x0, x21
   42b28:	mov	x5, x20
   42b2c:	lsl	x3, x20, #1
   42b30:	mov	x1, #0x0                   	// #0
   42b34:	bl	ccb0 <__gmpn_divrem@plt>
   42b38:	mov	x22, x0
   42b3c:	b	428b4 <mpfr_divhigh_n@@Base+0x19c>
   42b40:	mov	x1, x25
   42b44:	add	x0, x29, #0x78
   42b48:	bl	bdc0 <mpfr_tmp_allocate@plt>
   42b4c:	mov	x27, x0
   42b50:	b	427b0 <mpfr_divhigh_n@@Base+0x98>
   42b54:	bl	c410 <mpfr_tmp_free@plt>
   42b58:	b	428b4 <mpfr_divhigh_n@@Base+0x19c>
   42b5c:	udiv	x2, x0, x1
   42b60:	and	x4, x24, #0xffffffff
   42b64:	msub	x0, x2, x1, x0
   42b68:	mul	x3, x4, x2
   42b6c:	lsl	x0, x0, #32
   42b70:	orr	x0, x0, #0xffffffff
   42b74:	cmp	x3, x0
   42b78:	b.ls	42b90 <mpfr_divhigh_n@@Base+0x478>  // b.plast
   42b7c:	adds	x0, x24, x0
   42b80:	sub	x5, x2, #0x1
   42b84:	ccmp	x3, x0, #0x0, cc  // cc = lo, ul, last
   42b88:	b.hi	42bec <mpfr_divhigh_n@@Base+0x4d4>  // b.pmore
   42b8c:	mov	x2, x5
   42b90:	sub	x0, x0, x3
   42b94:	udiv	x3, x0, x1
   42b98:	msub	x0, x3, x1, x0
   42b9c:	mul	x1, x4, x3
   42ba0:	lsl	x0, x0, #32
   42ba4:	orr	x0, x0, #0xffffffff
   42ba8:	cmp	x1, x0
   42bac:	b.ls	42bc4 <mpfr_divhigh_n@@Base+0x4ac>  // b.plast
   42bb0:	adds	x0, x24, x0
   42bb4:	sub	x4, x3, #0x1
   42bb8:	ccmp	x1, x0, #0x0, cc  // cc = lo, ul, last
   42bbc:	sub	x0, x3, #0x2
   42bc0:	csel	x3, x0, x4, hi  // hi = pmore
   42bc4:	ldr	x0, [x29, #104]
   42bc8:	ldr	x1, [x0, #8]
   42bcc:	orr	x0, x3, x2, lsl #32
   42bd0:	umulh	x0, x1, x0
   42bd4:	add	x0, x1, x0
   42bd8:	str	x0, [x21]
   42bdc:	b	428b4 <mpfr_divhigh_n@@Base+0x19c>
   42be0:	sub	x28, x28, #0x2
   42be4:	add	x0, x0, x24
   42be8:	b	42988 <mpfr_divhigh_n@@Base+0x270>
   42bec:	sub	x2, x2, #0x2
   42bf0:	add	x0, x0, x24
   42bf4:	b	42b90 <mpfr_divhigh_n@@Base+0x478>
   42bf8:	cmp	x24, x0
   42bfc:	sub	x1, x28, #0x1
   42c00:	b.ls	42c0c <mpfr_divhigh_n@@Base+0x4f4>  // b.plast
   42c04:	mov	x28, x1
   42c08:	b	429f8 <mpfr_divhigh_n@@Base+0x2e0>
   42c0c:	mul	x2, x27, x28
   42c10:	sub	x28, x28, #0x2
   42c14:	cmp	x27, x2
   42c18:	ccmp	x24, x0, #0x0, hi  // hi = pmore
   42c1c:	csel	x28, x28, x1, cc  // cc = lo, ul, last
   42c20:	b	429f8 <mpfr_divhigh_n@@Base+0x2e0>
   42c24:	nop

0000000000042c28 <mpfr_get_f@@Base>:
   42c28:	stp	x29, x30, [sp, #-128]!
   42c2c:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   42c30:	mov	x29, sp
   42c34:	stp	x19, x20, [sp, #16]
   42c38:	mov	x19, x1
   42c3c:	mov	x20, x0
   42c40:	ldr	x1, [x1, #16]
   42c44:	stp	x23, x24, [sp, #48]
   42c48:	cmp	x1, x3
   42c4c:	b.le	42e24 <mpfr_get_f@@Base+0x1fc>
   42c50:	negs	x3, x1
   42c54:	and	x1, x1, #0x3f
   42c58:	and	x3, x3, #0x3f
   42c5c:	stp	x25, x26, [sp, #64]
   42c60:	csneg	x3, x1, x3, mi  // mi = first
   42c64:	cmp	x3, #0x0
   42c68:	mov	w26, #0x40                  	// #64
   42c6c:	sub	w0, w26, w3
   42c70:	stp	x21, x22, [sp, #32]
   42c74:	csneg	w3, w0, w3, gt
   42c78:	ldr	w21, [x20]
   42c7c:	ldr	x4, [x19]
   42c80:	sxtw	x22, w3
   42c84:	sbfiz	x1, x21, #6, #32
   42c88:	sxtw	x23, w21
   42c8c:	add	x0, x4, x22
   42c90:	cmp	x1, x0
   42c94:	ldr	x25, [x20, #16]
   42c98:	b.lt	42d30 <mpfr_get_f@@Base+0x108>  // b.tstop
   42c9c:	sub	x2, x4, #0x1
   42ca0:	asr	x2, x2, #6
   42ca4:	add	x2, x2, #0x1
   42ca8:	cmp	x23, x2
   42cac:	b.lt	42f10 <mpfr_get_f@@Base+0x2e8>  // b.tstop
   42cb0:	sub	x23, x23, x2
   42cb4:	ldr	x1, [x19, #24]
   42cb8:	add	x0, x25, x23, lsl #3
   42cbc:	cbnz	w3, 42dd8 <mpfr_get_f@@Base+0x1b0>
   42cc0:	cmp	x1, x0
   42cc4:	b.eq	42cd0 <mpfr_get_f@@Base+0xa8>  // b.none
   42cc8:	lsl	x2, x2, #3
   42ccc:	bl	ba10 <memcpy@plt>
   42cd0:	cmp	x23, #0x0
   42cd4:	b.le	42ce8 <mpfr_get_f@@Base+0xc0>
   42cd8:	lsl	x2, x23, #3
   42cdc:	mov	x0, x25
   42ce0:	mov	w1, #0x0                   	// #0
   42ce4:	bl	c110 <memset@plt>
   42ce8:	ldr	x0, [x19, #16]
   42cec:	mov	w24, #0x0                   	// #0
   42cf0:	adds	x22, x22, x0
   42cf4:	add	x1, x22, #0x3f
   42cf8:	csel	x22, x1, x22, mi  // mi = first
   42cfc:	asr	x22, x22, #6
   42d00:	str	x22, [x20, #8]
   42d04:	ldr	w0, [x19, #8]
   42d08:	ldp	x25, x26, [sp, #64]
   42d0c:	cmp	w0, #0x0
   42d10:	cneg	w21, w21, lt  // lt = tstop
   42d14:	str	w21, [x20, #4]
   42d18:	ldp	x21, x22, [sp, #32]
   42d1c:	mov	w0, w24
   42d20:	ldp	x19, x20, [sp, #16]
   42d24:	ldp	x23, x24, [sp, #48]
   42d28:	ldp	x29, x30, [sp], #128
   42d2c:	ret
   42d30:	str	x27, [sp, #80]
   42d34:	add	x27, sp, #0x60
   42d38:	sub	x1, x1, x22
   42d3c:	mov	w24, w2
   42d40:	mov	x0, x27
   42d44:	bl	ca80 <mpfr_init2@plt>
   42d48:	ldr	x22, [sp, #96]
   42d4c:	sub	x22, x22, #0x1
   42d50:	asr	x22, x22, #6
   42d54:	add	x22, x22, #0x1
   42d58:	cmp	x23, x22
   42d5c:	b.ne	42edc <mpfr_get_f@@Base+0x2b4>  // b.any
   42d60:	ldr	w3, [x19, #8]
   42d64:	mov	w2, w24
   42d68:	mov	x1, x19
   42d6c:	mov	x0, x27
   42d70:	bl	c6a0 <mpfr_set4@plt>
   42d74:	mov	w24, w0
   42d78:	ldr	x2, [sp, #112]
   42d7c:	negs	x3, x2
   42d80:	and	x0, x2, #0x3f
   42d84:	and	x3, x3, #0x3f
   42d88:	csneg	x3, x0, x3, mi  // mi = first
   42d8c:	cmp	x3, #0x0
   42d90:	b.le	42dfc <mpfr_get_f@@Base+0x1d4>
   42d94:	ldr	x1, [sp, #120]
   42d98:	sub	w26, w26, w3
   42d9c:	mov	x2, x22
   42da0:	mov	x0, x25
   42da4:	mov	w3, w26
   42da8:	bl	bce0 <__gmpn_rshift@plt>
   42dac:	ldr	x2, [sp, #112]
   42db0:	add	x2, x2, w26, sxtw
   42db4:	cmp	x2, #0x0
   42db8:	add	x3, x2, #0x3f
   42dbc:	csel	x2, x3, x2, lt  // lt = tstop
   42dc0:	mov	x0, x27
   42dc4:	asr	x2, x2, #6
   42dc8:	str	x2, [x20, #8]
   42dcc:	bl	c070 <mpfr_clear@plt>
   42dd0:	ldr	x27, [sp, #80]
   42dd4:	b	42d04 <mpfr_get_f@@Base+0xdc>
   42dd8:	bl	bce0 <__gmpn_rshift@plt>
   42ddc:	cmp	x23, #0x0
   42de0:	ccmp	x0, #0x0, #0x4, le
   42de4:	b.ne	42ef4 <mpfr_get_f@@Base+0x2cc>  // b.any
   42de8:	cmp	x23, #0x0
   42dec:	b.le	42ce8 <mpfr_get_f@@Base+0xc0>
   42df0:	sub	x23, x23, #0x1
   42df4:	str	x0, [x25, x23, lsl #3]
   42df8:	b	42cd0 <mpfr_get_f@@Base+0xa8>
   42dfc:	neg	w26, w3
   42e00:	ldr	x1, [sp, #120]
   42e04:	cbnz	x0, 42d9c <mpfr_get_f@@Base+0x174>
   42e08:	cmp	x1, x25
   42e0c:	b.eq	42db4 <mpfr_get_f@@Base+0x18c>  // b.none
   42e10:	lsl	x2, x23, #3
   42e14:	mov	x0, x25
   42e18:	bl	ba10 <memcpy@plt>
   42e1c:	ldr	x2, [sp, #112]
   42e20:	b	42db4 <mpfr_get_f@@Base+0x18c>
   42e24:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   42e28:	cmp	x1, x2
   42e2c:	b.eq	42ec4 <mpfr_get_f@@Base+0x29c>  // b.none
   42e30:	mrs	x2, tpidr_el0
   42e34:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   42e38:	ldr	x3, [x0, #2576]
   42e3c:	add	x0, x0, #0xa10
   42e40:	blr	x3
   42e44:	add	x4, x2, x0
   42e48:	mov	x3, #0x2                   	// #2
   42e4c:	movk	x3, #0x8000, lsl #48
   42e50:	cmp	x1, x3
   42e54:	ldr	w0, [x2, x0]
   42e58:	orr	w0, w0, #0x10
   42e5c:	b.eq	42eb8 <mpfr_get_f@@Base+0x290>  // b.none
   42e60:	ldr	w1, [x20]
   42e64:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
   42e68:	str	w0, [x4]
   42e6c:	mov	x3, #0xffffffffffffffff    	// #-1
   42e70:	str	w1, [x20, #4]
   42e74:	cmp	w1, #0x0
   42e78:	str	x2, [x20, #8]
   42e7c:	mov	x0, #0x0                   	// #0
   42e80:	ldr	x2, [x20, #16]
   42e84:	b.le	42e98 <mpfr_get_f@@Base+0x270>
   42e88:	str	x3, [x2, x0, lsl #3]
   42e8c:	add	x0, x0, #0x1
   42e90:	cmp	w1, w0
   42e94:	b.gt	42e88 <mpfr_get_f@@Base+0x260>
   42e98:	ldr	w0, [x19, #8]
   42e9c:	cmp	w0, #0x0
   42ea0:	b.gt	42ed4 <mpfr_get_f@@Base+0x2ac>
   42ea4:	mov	x1, x20
   42ea8:	mov	x0, x20
   42eac:	mov	w24, #0x1                   	// #1
   42eb0:	bl	c6d0 <__gmpf_neg@plt>
   42eb4:	b	42d1c <mpfr_get_f@@Base+0xf4>
   42eb8:	mov	w24, #0x0                   	// #0
   42ebc:	str	w0, [x4]
   42ec0:	b	42d1c <mpfr_get_f@@Base+0xf4>
   42ec4:	mov	x1, #0x0                   	// #0
   42ec8:	mov	w24, #0x0                   	// #0
   42ecc:	bl	c180 <__gmpf_set_ui@plt>
   42ed0:	b	42d1c <mpfr_get_f@@Base+0xf4>
   42ed4:	mov	w24, #0xffffffff            	// #-1
   42ed8:	b	42d1c <mpfr_get_f@@Base+0xf4>
   42edc:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   42ee0:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   42ee4:	add	x2, x2, #0xfd8
   42ee8:	add	x0, x0, #0xfb8
   42eec:	mov	w1, #0x7c                  	// #124
   42ef0:	bl	cb40 <mpfr_assert_fail@plt>
   42ef4:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   42ef8:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   42efc:	add	x2, x2, #0xfc0
   42f00:	add	x0, x0, #0xfb8
   42f04:	mov	w1, #0x68                  	// #104
   42f08:	str	x27, [sp, #80]
   42f0c:	bl	cb40 <mpfr_assert_fail@plt>
   42f10:	adrp	x2, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   42f14:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   42f18:	add	x2, x2, #0xfa8
   42f1c:	add	x0, x0, #0xfb8
   42f20:	mov	w1, #0x61                  	// #97
   42f24:	str	x27, [sp, #80]
   42f28:	bl	cb40 <mpfr_assert_fail@plt>
   42f2c:	nop

0000000000042f30 <mpfr_round_p@@Base>:
   42f30:	cmp	x2, #0x0
   42f34:	lsl	x5, x1, #6
   42f38:	ccmp	x2, x3, #0x0, gt
   42f3c:	ccmp	x5, x3, #0x4, hi  // hi = pmore
   42f40:	b.le	42fe8 <mpfr_round_p@@Base+0xb8>
   42f44:	cmp	x5, x2
   42f48:	add	x4, x3, #0x3f
   42f4c:	csel	x2, x5, x2, ls  // ls = plast
   42f50:	cmp	x3, #0x0
   42f54:	csel	x4, x4, x3, lt  // lt = tstop
   42f58:	negs	x5, x3
   42f5c:	and	x5, x5, #0x3f
   42f60:	and	x3, x3, #0x3f
   42f64:	asr	x6, x4, #6
   42f68:	csneg	x3, x3, x5, mi  // mi = first
   42f6c:	sub	x1, x1, #0x1
   42f70:	cmp	x2, #0x0
   42f74:	add	x4, x2, #0x3f
   42f78:	sub	x1, x1, x6
   42f7c:	csel	x4, x4, x2, lt  // lt = tstop
   42f80:	mov	w5, #0x40                  	// #64
   42f84:	sub	w3, w5, w3
   42f88:	add	x7, x0, x1, lsl #3
   42f8c:	asr	x4, x4, #6
   42f90:	cmp	w3, w5
   42f94:	sub	x4, x4, x6
   42f98:	mov	x5, #0xffffffffffffffff    	// #-1
   42f9c:	ldr	x0, [x0, x1, lsl #3]
   42fa0:	b.eq	42fb4 <mpfr_round_p@@Base+0x84>  // b.none
   42fa4:	mov	x5, #0x1                   	// #1
   42fa8:	lsl	x5, x5, x3
   42fac:	sub	x5, x5, #0x1
   42fb0:	and	x0, x0, x5
   42fb4:	cbnz	x4, 42ff0 <mpfr_round_p@@Base+0xc0>
   42fb8:	negs	x1, x2
   42fbc:	and	x2, x2, #0x3f
   42fc0:	and	x1, x1, #0x3f
   42fc4:	mov	w3, #0x40                  	// #64
   42fc8:	csneg	x2, x2, x1, mi  // mi = first
   42fcc:	sub	w2, w3, w2
   42fd0:	lsr	x0, x0, x2
   42fd4:	cmp	x0, #0x0
   42fd8:	lsr	x5, x5, x2
   42fdc:	ccmp	x5, x0, #0x4, ne  // ne = any
   42fe0:	cset	w0, ne  // ne = any
   42fe4:	ret
   42fe8:	mov	w0, #0x0                   	// #0
   42fec:	ret
   42ff0:	sub	x1, x7, #0x8
   42ff4:	cbz	x0, 43060 <mpfr_round_p@@Base+0x130>
   42ff8:	cmp	x0, x5
   42ffc:	sub	x4, x7, x4, lsl #3
   43000:	mov	w0, #0x1                   	// #1
   43004:	b.eq	43018 <mpfr_round_p@@Base+0xe8>  // b.none
   43008:	ret
   4300c:	ldr	x0, [x1], #-8
   43010:	cmn	x0, #0x1
   43014:	b.ne	430b0 <mpfr_round_p@@Base+0x180>  // b.any
   43018:	cmp	x4, x1
   4301c:	b.ne	4300c <mpfr_round_p@@Base+0xdc>  // b.any
   43020:	negs	x1, x2
   43024:	and	x2, x2, #0x3f
   43028:	and	x1, x1, #0x3f
   4302c:	mov	w3, #0x40                  	// #64
   43030:	csneg	x1, x2, x1, mi  // mi = first
   43034:	mov	w0, #0x0                   	// #0
   43038:	sub	w1, w3, w1
   4303c:	cmp	w1, w3
   43040:	b.eq	42fe4 <mpfr_round_p@@Base+0xb4>  // b.none
   43044:	ldr	x2, [x4]
   43048:	mov	x0, #0xffffffffffffffff    	// #-1
   4304c:	lsr	x0, x0, x1
   43050:	lsr	x1, x2, x1
   43054:	cmp	x1, x0
   43058:	cset	w0, ne  // ne = any
   4305c:	ret
   43060:	sub	x4, x7, x4, lsl #3
   43064:	b	43070 <mpfr_round_p@@Base+0x140>
   43068:	ldr	x0, [x1], #-8
   4306c:	cbnz	x0, 430b0 <mpfr_round_p@@Base+0x180>
   43070:	cmp	x1, x4
   43074:	b.ne	43068 <mpfr_round_p@@Base+0x138>  // b.any
   43078:	negs	x0, x2
   4307c:	and	x2, x2, #0x3f
   43080:	and	x0, x0, #0x3f
   43084:	mov	w3, #0x40                  	// #64
   43088:	csneg	x2, x2, x0, mi  // mi = first
   4308c:	mov	w0, #0x0                   	// #0
   43090:	sub	w2, w3, w2
   43094:	cmp	w2, w3
   43098:	b.eq	42fe4 <mpfr_round_p@@Base+0xb4>  // b.none
   4309c:	ldr	x0, [x1]
   430a0:	lsr	x2, x0, x2
   430a4:	cmp	x2, #0x0
   430a8:	cset	w0, ne  // ne = any
   430ac:	ret
   430b0:	mov	w0, #0x1                   	// #1
   430b4:	ret

00000000000430b8 <mpfr_erfc@@Base>:
   430b8:	stp	x29, x30, [sp, #-288]!
   430bc:	mov	x29, sp
   430c0:	stp	x19, x20, [sp, #16]
   430c4:	mov	x20, x1
   430c8:	stp	x21, x22, [sp, #32]
   430cc:	mrs	x21, tpidr_el0
   430d0:	stp	x23, x24, [sp, #48]
   430d4:	mov	x24, x0
   430d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   430dc:	ldr	x1, [x0, #2512]
   430e0:	add	x0, x0, #0x9d0
   430e4:	blr	x1
   430e8:	ldr	x0, [x21, x0]
   430ec:	stp	x25, x26, [sp, #64]
   430f0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   430f4:	ldr	x22, [x20, #16]
   430f8:	str	x0, [sp, #120]
   430fc:	mov	w25, w2
   43100:	cmp	x22, x1
   43104:	b.le	43818 <mpfr_erfc@@Base+0x760>
   43108:	ldr	w1, [x20, #8]
   4310c:	cmp	w1, #0x0
   43110:	b.le	4315c <mpfr_erfc@@Base+0xa4>
   43114:	ldr	x1, [sp, #120]
   43118:	mov	x0, #0xffffffffc0000001    	// #-1073741823
   4311c:	cmp	x1, x0
   43120:	b.ge	43398 <mpfr_erfc@@Base+0x2e0>  // b.tcont
   43124:	mov	x1, #0x2646                	// #9798
   43128:	mov	x0, x20
   4312c:	mov	x2, #0x0                   	// #0
   43130:	movk	x1, #0x6a91, lsl #16
   43134:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   43138:	tbz	w0, #31, 433ac <mpfr_erfc@@Base+0x2f4>
   4313c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43140:	ldr	x1, [x0, #2512]
   43144:	add	x0, x0, #0x9d0
   43148:	blr	x1
   4314c:	ldr	w1, [x20, #8]
   43150:	ldr	x22, [x20, #16]
   43154:	ldr	x0, [x21, x0]
   43158:	str	x0, [sp, #120]
   4315c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43160:	ldr	x2, [x0, #2576]
   43164:	add	x0, x0, #0xa10
   43168:	blr	x2
   4316c:	ldr	w0, [x21, x0]
   43170:	str	w0, [sp, #132]
   43174:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   43178:	ldr	x19, [x24]
   4317c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43180:	ldr	x2, [x0, #2544]
   43184:	add	x0, x0, #0x9f0
   43188:	blr	x2
   4318c:	add	x3, x21, x0
   43190:	ldr	x0, [x21, x0]
   43194:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   43198:	str	x4, [x3]
   4319c:	str	x0, [sp, #136]
   431a0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   431a4:	ldr	x5, [x0, #2512]
   431a8:	add	x0, x0, #0x9d0
   431ac:	blr	x5
   431b0:	str	x2, [x21, x0]
   431b4:	tbnz	w1, #31, 43444 <mpfr_erfc@@Base+0x38c>
   431b8:	mvn	x22, x22
   431bc:	cmp	x22, #0x0
   431c0:	b.le	431d0 <mpfr_erfc@@Base+0x118>
   431c4:	add	x0, x19, #0x1
   431c8:	cmp	x22, x0
   431cc:	b.hi	43a4c <mpfr_erfc@@Base+0x994>  // b.pmore
   431d0:	stp	x27, x28, [sp, #80]
   431d4:	cmp	x19, #0x1
   431d8:	b.eq	431f8 <mpfr_erfc@@Base+0x140>  // b.none
   431dc:	mov	x0, x19
   431e0:	b.le	43960 <mpfr_erfc@@Base+0x8a8>
   431e4:	sub	x0, x0, #0x1
   431e8:	mov	w1, #0x40                  	// #64
   431ec:	clz	x0, x0
   431f0:	sub	w0, w1, w0
   431f4:	add	x19, x19, w0, sxtw
   431f8:	ldr	x0, [x20, #16]
   431fc:	add	x19, x19, #0x3
   43200:	mov	x1, #0x40                  	// #64
   43204:	add	x28, sp, #0xa0
   43208:	cmp	x0, #0x0
   4320c:	add	x22, sp, #0xc0
   43210:	add	x0, x19, x0, lsl #1
   43214:	add	x26, sp, #0xe0
   43218:	csel	x19, x0, x19, gt
   4321c:	add	x23, sp, #0x100
   43220:	mov	x0, x28
   43224:	str	x1, [sp, #152]
   43228:	mov	x1, x19
   4322c:	bl	ca80 <mpfr_init2@plt>
   43230:	ldr	w0, [x20, #8]
   43234:	cmp	w0, #0x0
   43238:	b.le	43270 <mpfr_erfc@@Base+0x1b8>
   4323c:	ldr	x0, [x20, #16]
   43240:	cmp	x19, #0x1
   43244:	sub	x0, x0, #0x1
   43248:	lsl	x0, x0, #1
   4324c:	b.eq	43958 <mpfr_erfc@@Base+0x8a0>  // b.none
   43250:	b.le	436d0 <mpfr_erfc@@Base+0x618>
   43254:	sub	x1, x19, #0x1
   43258:	mov	w2, #0x40                  	// #64
   4325c:	clz	x1, x1
   43260:	sub	w1, w2, w1
   43264:	sxtw	x1, w1
   43268:	cmp	x0, x1
   4326c:	b.ge	43488 <mpfr_erfc@@Base+0x3d0>  // b.tcont
   43270:	mov	x1, x20
   43274:	mov	w2, #0x0                   	// #0
   43278:	mov	x0, x28
   4327c:	bl	c1e0 <mpfr_erf@plt>
   43280:	mov	x1, #0x1                   	// #1
   43284:	mov	x2, x28
   43288:	mov	x0, x28
   4328c:	mov	w3, #0x0                   	// #0
   43290:	ldr	x27, [sp, #176]
   43294:	bl	ca50 <mpfr_ui_sub@plt>
   43298:	ldr	x0, [sp, #176]
   4329c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   432a0:	cmp	x0, x1
   432a4:	b.eq	433c8 <mpfr_erfc@@Base+0x310>  // b.none
   432a8:	subs	x27, x27, x0
   432ac:	csel	x27, x27, xzr, pl  // pl = nfrst
   432b0:	add	x27, x27, #0x1
   432b4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   432b8:	cmp	x0, x1
   432bc:	b.le	433cc <mpfr_erfc@@Base+0x314>
   432c0:	ldr	x1, [sp, #160]
   432c4:	cmp	w25, #0x0
   432c8:	ldr	x0, [sp, #184]
   432cc:	sub	x1, x1, #0x1
   432d0:	ldr	x3, [x24]
   432d4:	asr	x1, x1, #6
   432d8:	sub	x2, x19, x27
   432dc:	add	x1, x1, #0x1
   432e0:	cinc	x3, x3, eq  // eq = none
   432e4:	bl	c370 <mpfr_round_p@plt>
   432e8:	cbz	w0, 433cc <mpfr_erfc@@Base+0x314>
   432ec:	ldr	w3, [sp, #168]
   432f0:	mov	w2, w25
   432f4:	mov	x1, x28
   432f8:	mov	x0, x24
   432fc:	bl	c6a0 <mpfr_set4@plt>
   43300:	mov	w19, w0
   43304:	mov	x0, x28
   43308:	bl	c070 <mpfr_clear@plt>
   4330c:	ldp	x27, x28, [sp, #80]
   43310:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43314:	ldr	x2, [x0, #2576]
   43318:	add	x0, x0, #0xa10
   4331c:	blr	x2
   43320:	ldr	w2, [sp, #132]
   43324:	str	w2, [x21, x0]
   43328:	ldr	x1, [x24, #16]
   4332c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43330:	ldr	x2, [x0, #2512]
   43334:	add	x0, x0, #0x9d0
   43338:	blr	x2
   4333c:	ldr	x2, [sp, #120]
   43340:	str	x2, [x21, x0]
   43344:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43348:	ldr	x3, [x0, #2544]
   4334c:	add	x0, x0, #0x9f0
   43350:	blr	x3
   43354:	ldr	x3, [sp, #136]
   43358:	str	x3, [x21, x0]
   4335c:	cmp	x3, x1
   43360:	ccmp	x2, x1, #0x0, ge  // ge = tcont
   43364:	b.le	43408 <mpfr_erfc@@Base+0x350>
   43368:	mov	w1, w19
   4336c:	mov	w2, w25
   43370:	mov	x0, x24
   43374:	bl	cb30 <mpfr_check_range@plt>
   43378:	mov	w19, w0
   4337c:	mov	w0, w19
   43380:	ldp	x19, x20, [sp, #16]
   43384:	ldp	x21, x22, [sp, #32]
   43388:	ldp	x23, x24, [sp, #48]
   4338c:	ldp	x25, x26, [sp, #64]
   43390:	ldp	x29, x30, [sp], #288
   43394:	ret
   43398:	mov	x0, x20
   4339c:	mov	x2, #0x0                   	// #0
   433a0:	mov	x1, #0x6a92                	// #27282
   433a4:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   433a8:	tbnz	w0, #31, 43124 <mpfr_erfc@@Base+0x6c>
   433ac:	cmp	w25, #0x0
   433b0:	mov	w2, #0x1                   	// #1
   433b4:	mov	x0, x24
   433b8:	csel	w1, w25, w2, ne  // ne = any
   433bc:	bl	c3c0 <mpfr_underflow@plt>
   433c0:	mov	w19, w0
   433c4:	b	4337c <mpfr_erfc@@Base+0x2c4>
   433c8:	lsl	x19, x19, #1
   433cc:	ldr	x1, [sp, #152]
   433d0:	mov	x0, #0xfffffffffffffeff    	// #-257
   433d4:	movk	x0, #0x7fff, lsl #48
   433d8:	sub	x0, x0, x19
   433dc:	cmp	x0, x1
   433e0:	b.lt	43a9c <mpfr_erfc@@Base+0x9e4>  // b.tstop
   433e4:	ldr	x0, [sp, #152]
   433e8:	add	x19, x19, x0
   433ec:	mov	x0, x28
   433f0:	mov	x1, x19
   433f4:	add	x2, x19, x19, lsr #63
   433f8:	asr	x2, x2, #1
   433fc:	str	x2, [sp, #152]
   43400:	bl	bed0 <mpfr_set_prec@plt>
   43404:	b	43230 <mpfr_erfc@@Base+0x178>
   43408:	cbz	w19, 4337c <mpfr_erfc@@Base+0x2c4>
   4340c:	ldr	w0, [sp, #132]
   43410:	ldp	x23, x24, [sp, #48]
   43414:	orr	w1, w0, #0x8
   43418:	ldp	x25, x26, [sp, #64]
   4341c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43420:	ldr	x2, [x0, #2576]
   43424:	add	x0, x0, #0xa10
   43428:	blr	x2
   4342c:	str	w1, [x21, x0]
   43430:	mov	w0, w19
   43434:	ldp	x19, x20, [sp, #16]
   43438:	ldp	x21, x22, [sp, #32]
   4343c:	ldp	x29, x30, [sp], #288
   43440:	ret
   43444:	cmp	x19, #0x7
   43448:	b.le	4360c <mpfr_erfc@@Base+0x554>
   4344c:	cmp	x19, #0x19
   43450:	b.le	43ab4 <mpfr_erfc@@Base+0x9fc>
   43454:	cmp	x19, #0x78
   43458:	b.le	43614 <mpfr_erfc@@Base+0x55c>
   4345c:	mov	x0, x20
   43460:	mov	x2, #0x0                   	// #0
   43464:	mov	x1, #0xffffffffffff956e    	// #-27282
   43468:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   4346c:	cmp	w0, #0x0
   43470:	b.le	43630 <mpfr_erfc@@Base+0x578>
   43474:	cmp	x22, #0x2
   43478:	b.gt	43980 <mpfr_erfc@@Base+0x8c8>
   4347c:	ldr	x19, [x24]
   43480:	ldr	x22, [x20, #16]
   43484:	b	431b8 <mpfr_erfc@@Base+0x100>
   43488:	ldr	x0, [sp, #160]
   4348c:	mov	x27, #0x1                   	// #1
   43490:	mov	x1, x0
   43494:	mov	x0, x22
   43498:	str	x1, [sp, #144]
   4349c:	bl	ca80 <mpfr_init2@plt>
   434a0:	ldr	x1, [sp, #144]
   434a4:	mov	x0, x26
   434a8:	bl	ca80 <mpfr_init2@plt>
   434ac:	mov	x0, x23
   434b0:	mov	x1, #0x1f                  	// #31
   434b4:	bl	ca80 <mpfr_init2@plt>
   434b8:	mov	x2, x20
   434bc:	mov	x1, x20
   434c0:	mov	w3, #0x3                   	// #3
   434c4:	mov	x0, x26
   434c8:	bl	bd50 <mpfr_mul@plt>
   434cc:	mov	x2, x26
   434d0:	mov	x1, x27
   434d4:	mov	w3, #0x2                   	// #2
   434d8:	mov	x0, x26
   434dc:	bl	c2f0 <mpfr_ui_div@plt>
   434e0:	mov	x2, x27
   434e4:	mov	x1, x26
   434e8:	mov	w3, #0x2                   	// #2
   434ec:	mov	x0, x26
   434f0:	bl	c8f0 <mpfr_div_2ui@plt>
   434f4:	mov	x1, x27
   434f8:	mov	w3, #0x0                   	// #0
   434fc:	mov	x2, #0x0                   	// #0
   43500:	mov	x0, x22
   43504:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   43508:	str	x27, [sp, #112]
   4350c:	ldr	w3, [sp, #200]
   43510:	mov	x1, x22
   43514:	mov	x0, x28
   43518:	mov	w2, #0x0                   	// #0
   4351c:	bl	c6a0 <mpfr_set4@plt>
   43520:	mov	x0, #0xe                   	// #14
   43524:	str	x0, [sp, #104]
   43528:	mov	w0, #0x1                   	// #1
   4352c:	str	w0, [sp, #264]
   43530:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   43534:	str	x0, [sp, #272]
   43538:	b	43560 <mpfr_erfc@@Base+0x4a8>
   4353c:	mov	x0, x28
   43540:	bl	bb70 <mpfr_sub@plt>
   43544:	ldr	x0, [sp, #112]
   43548:	add	x27, x27, #0x2
   4354c:	add	x0, x0, #0x1
   43550:	str	x0, [sp, #112]
   43554:	ldr	x0, [sp, #104]
   43558:	add	x0, x0, #0xe
   4355c:	str	x0, [sp, #104]
   43560:	mov	x2, x27
   43564:	mov	x1, x22
   43568:	mov	w3, #0x2                   	// #2
   4356c:	mov	x0, x22
   43570:	bl	ba50 <mpfr_mul_ui@plt>
   43574:	mov	x2, x26
   43578:	mov	x1, x22
   4357c:	mov	w3, #0x2                   	// #2
   43580:	mov	x0, x22
   43584:	bl	bd50 <mpfr_mul@plt>
   43588:	ldr	x5, [sp, #176]
   4358c:	mov	x1, x23
   43590:	ldr	x2, [sp, #208]
   43594:	mov	w3, #0x2                   	// #2
   43598:	mov	x0, x23
   4359c:	sub	x2, x5, x2
   435a0:	bl	bb90 <mpfr_mul_2si@plt>
   435a4:	ldr	x2, [sp, #104]
   435a8:	mov	x1, x23
   435ac:	mov	w3, #0x2                   	// #2
   435b0:	mov	x0, x23
   435b4:	bl	c260 <mpfr_add_ui@plt>
   435b8:	ldr	x5, [sp, #176]
   435bc:	mov	x1, x23
   435c0:	ldr	x2, [sp, #208]
   435c4:	mov	x0, x23
   435c8:	mov	w3, #0x2                   	// #2
   435cc:	sub	x2, x5, x2
   435d0:	bl	c420 <mpfr_div_2si@plt>
   435d4:	ldr	x2, [sp, #144]
   435d8:	ldr	x0, [sp, #208]
   435dc:	ldr	x1, [sp, #176]
   435e0:	add	x0, x2, x0
   435e4:	cmp	x0, x1
   435e8:	b.le	436e8 <mpfr_erfc@@Base+0x630>
   435ec:	ldr	x0, [sp, #112]
   435f0:	mov	x2, x22
   435f4:	mov	x1, x28
   435f8:	mov	w3, #0x0                   	// #0
   435fc:	tbnz	w0, #0, 4353c <mpfr_erfc@@Base+0x484>
   43600:	mov	x0, x28
   43604:	bl	c1a0 <mpfr_add@plt>
   43608:	b	43544 <mpfr_erfc@@Base+0x48c>
   4360c:	cmp	x22, #0x1
   43610:	b.gt	43630 <mpfr_erfc@@Base+0x578>
   43614:	mov	x0, x20
   43618:	mov	x2, #0x0                   	// #0
   4361c:	mov	x1, #0xfffffffffffffff7    	// #-9
   43620:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   43624:	cmp	w0, #0x0
   43628:	b.gt	4345c <mpfr_erfc@@Base+0x3a4>
   4362c:	nop
   43630:	mov	x2, #0x0                   	// #0
   43634:	mov	x1, #0x2                   	// #2
   43638:	mov	x0, x24
   4363c:	mov	w3, #0x0                   	// #0
   43640:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   43644:	mov	w19, #0x1                   	// #1
   43648:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4364c:	ldr	x2, [x0, #2576]
   43650:	add	x0, x0, #0xa10
   43654:	blr	x2
   43658:	add	x0, x21, x0
   4365c:	and	w1, w25, #0xfffffffd
   43660:	cmp	w1, #0x1
   43664:	ldr	w1, [x0]
   43668:	orr	w1, w1, #0x8
   4366c:	str	w1, [x0]
   43670:	b.eq	43854 <mpfr_erfc@@Base+0x79c>  // b.none
   43674:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43678:	ldr	x1, [x0, #2576]
   4367c:	add	x0, x0, #0xa10
   43680:	blr	x1
   43684:	ldr	w1, [sp, #132]
   43688:	str	w1, [x21, x0]
   4368c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43690:	ldr	x2, [x0, #2512]
   43694:	add	x0, x0, #0x9d0
   43698:	blr	x2
   4369c:	ldr	x2, [sp, #120]
   436a0:	str	x2, [x21, x0]
   436a4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   436a8:	ldr	x3, [x0, #2544]
   436ac:	add	x0, x0, #0x9f0
   436b0:	blr	x3
   436b4:	ldr	x1, [x24, #16]
   436b8:	ldr	x3, [sp, #136]
   436bc:	str	x3, [x21, x0]
   436c0:	cmp	x3, x1
   436c4:	ccmp	x1, x2, #0x1, ge  // ge = tcont
   436c8:	b.lt	43368 <mpfr_erfc@@Base+0x2b0>  // b.tstop
   436cc:	b	4340c <mpfr_erfc@@Base+0x354>
   436d0:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   436d4:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   436d8:	add	x2, x2, #0x820
   436dc:	add	x0, x0, #0x10
   436e0:	mov	w1, #0xee                  	// #238
   436e4:	bl	cb40 <mpfr_assert_fail@plt>
   436e8:	mov	x1, x23
   436ec:	mov	w3, #0x2                   	// #2
   436f0:	mov	x2, #0x1                   	// #1
   436f4:	mov	x0, x23
   436f8:	bl	c260 <mpfr_add_ui@plt>
   436fc:	mov	x2, x20
   43700:	mov	x1, x20
   43704:	mov	w3, #0x2                   	// #2
   43708:	mov	x0, x22
   4370c:	bl	bd50 <mpfr_mul@plt>
   43710:	mov	x1, x23
   43714:	mov	w3, #0x2                   	// #2
   43718:	mov	x2, #0x3                   	// #3
   4371c:	mov	x0, x23
   43720:	bl	c8f0 <mpfr_div_2ui@plt>
   43724:	mov	x2, x22
   43728:	mov	x1, x23
   4372c:	mov	w3, #0x2                   	// #2
   43730:	mov	x0, x23
   43734:	bl	c1a0 <mpfr_add@plt>
   43738:	mov	w3, #0x2                   	// #2
   4373c:	mov	x1, x23
   43740:	mov	x2, #0x3                   	// #3
   43744:	mov	x0, x23
   43748:	bl	c2c0 <mpfr_mul_2ui@plt>
   4374c:	mov	x1, x22
   43750:	mov	w2, #0x2                   	// #2
   43754:	mov	x0, x22
   43758:	bl	c750 <mpfr_exp@plt>
   4375c:	mov	x1, x22
   43760:	mov	w3, #0x0                   	// #0
   43764:	mov	x2, x20
   43768:	mov	x0, x22
   4376c:	bl	bd50 <mpfr_mul@plt>
   43770:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43774:	ldr	x1, [x0, #2624]
   43778:	add	x0, x0, #0xa40
   4377c:	blr	x1
   43780:	add	x27, x21, x0
   43784:	mov	x1, x27
   43788:	mov	w2, #0x1                   	// #1
   4378c:	mov	x0, x26
   43790:	bl	c380 <mpfr_cache@plt>
   43794:	mov	x1, x26
   43798:	mov	w2, #0x0                   	// #0
   4379c:	mov	x0, x26
   437a0:	bl	c930 <mpfr_sqrt@plt>
   437a4:	mov	x2, x26
   437a8:	mov	x1, x22
   437ac:	mov	w3, #0x0                   	// #0
   437b0:	mov	x0, x22
   437b4:	bl	bd50 <mpfr_mul@plt>
   437b8:	mov	x1, x28
   437bc:	mov	x2, x22
   437c0:	mov	x0, x28
   437c4:	mov	w3, #0x0                   	// #0
   437c8:	bl	c620 <mpfr_div@plt>
   437cc:	ldr	x1, [sp, #176]
   437d0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   437d4:	cmp	x1, x0
   437d8:	b.eq	43864 <mpfr_erfc@@Base+0x7ac>  // b.none
   437dc:	mov	x1, x23
   437e0:	mov	w3, #0x2                   	// #2
   437e4:	mov	x2, #0x7                   	// #7
   437e8:	mov	x0, x23
   437ec:	bl	c260 <mpfr_add_ui@plt>
   437f0:	ldr	x27, [sp, #272]
   437f4:	mov	x0, x22
   437f8:	bl	c070 <mpfr_clear@plt>
   437fc:	mov	x0, x26
   43800:	bl	c070 <mpfr_clear@plt>
   43804:	mov	x0, x23
   43808:	bl	c070 <mpfr_clear@plt>
   4380c:	cbz	x27, 438e8 <mpfr_erfc@@Base+0x830>
   43810:	ldr	x0, [sp, #176]
   43814:	b	432b4 <mpfr_erfc@@Base+0x1fc>
   43818:	mov	x0, #0x2                   	// #2
   4381c:	movk	x0, #0x8000, lsl #48
   43820:	cmp	x22, x0
   43824:	b.eq	43adc <mpfr_erfc@@Base+0xa24>  // b.none
   43828:	cmp	x22, x1
   4382c:	b.ne	43a80 <mpfr_erfc@@Base+0x9c8>  // b.any
   43830:	ldr	w0, [x20, #8]
   43834:	cmp	w0, #0x0
   43838:	b.le	43ac0 <mpfr_erfc@@Base+0xa08>
   4383c:	mov	w1, #0x1                   	// #1
   43840:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   43844:	mov	w19, #0x0                   	// #0
   43848:	str	w1, [x24, #8]
   4384c:	str	x0, [x24, #16]
   43850:	b	4337c <mpfr_erfc@@Base+0x2c4>
   43854:	mov	x0, x24
   43858:	mov	w19, #0xffffffff            	// #-1
   4385c:	bl	bdd0 <mpfr_nextbelow@plt>
   43860:	b	43674 <mpfr_erfc@@Base+0x5bc>
   43864:	mov	w3, #0x3                   	// #3
   43868:	mov	x2, x20
   4386c:	mov	x1, x20
   43870:	mov	x0, x22
   43874:	bl	bd50 <mpfr_mul@plt>
   43878:	mov	x1, x22
   4387c:	mov	w2, #0x2                   	// #2
   43880:	mov	x0, x22
   43884:	bl	bd70 <mpfr_neg@plt>
   43888:	mov	x1, x22
   4388c:	mov	w2, #0x2                   	// #2
   43890:	mov	x0, x22
   43894:	bl	c750 <mpfr_exp@plt>
   43898:	mov	x1, x27
   4389c:	mov	w2, #0x3                   	// #3
   438a0:	mov	x0, x26
   438a4:	bl	c380 <mpfr_cache@plt>
   438a8:	mov	x2, x20
   438ac:	mov	x1, x26
   438b0:	mov	w3, #0x3                   	// #3
   438b4:	mov	x0, x26
   438b8:	bl	bd50 <mpfr_mul@plt>
   438bc:	mov	x2, x26
   438c0:	mov	x1, x22
   438c4:	mov	w3, #0x0                   	// #0
   438c8:	mov	x0, x28
   438cc:	bl	c620 <mpfr_div@plt>
   438d0:	mov	x0, x22
   438d4:	bl	c070 <mpfr_clear@plt>
   438d8:	mov	x0, x26
   438dc:	bl	c070 <mpfr_clear@plt>
   438e0:	mov	x0, x23
   438e4:	bl	c070 <mpfr_clear@plt>
   438e8:	mov	x0, x28
   438ec:	bl	c070 <mpfr_clear@plt>
   438f0:	mov	w2, #0x1                   	// #1
   438f4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   438f8:	ldr	x1, [x0, #2576]
   438fc:	add	x0, x0, #0xa10
   43900:	blr	x1
   43904:	ldr	w1, [sp, #132]
   43908:	str	w1, [x21, x0]
   4390c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43910:	ldr	x1, [x0, #2512]
   43914:	add	x0, x0, #0x9d0
   43918:	blr	x1
   4391c:	ldr	x1, [sp, #120]
   43920:	str	x1, [x21, x0]
   43924:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43928:	ldr	x1, [x0, #2544]
   4392c:	add	x0, x0, #0x9f0
   43930:	blr	x1
   43934:	cmp	w25, #0x0
   43938:	ldr	x1, [sp, #136]
   4393c:	str	x1, [x21, x0]
   43940:	mov	x0, x24
   43944:	csel	w1, w25, w2, ne  // ne = any
   43948:	bl	c3c0 <mpfr_underflow@plt>
   4394c:	mov	w19, w0
   43950:	ldp	x27, x28, [sp, #80]
   43954:	b	4337c <mpfr_erfc@@Base+0x2c4>
   43958:	mov	x1, #0x0                   	// #0
   4395c:	b	43268 <mpfr_erfc@@Base+0x1b0>
   43960:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   43964:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   43968:	add	x2, x2, #0x2e0
   4396c:	add	x0, x0, #0x10
   43970:	mov	w1, #0xe2                  	// #226
   43974:	bl	cb40 <mpfr_assert_fail@plt>
   43978:	ldr	x0, [x24]
   4397c:	b	431e4 <mpfr_erfc@@Base+0x12c>
   43980:	add	x22, sp, #0xe0
   43984:	add	x19, sp, #0x100
   43988:	mov	x0, x22
   4398c:	mov	x1, #0x20                  	// #32
   43990:	bl	ca80 <mpfr_init2@plt>
   43994:	mov	x0, x19
   43998:	mov	x1, #0x20                  	// #32
   4399c:	bl	ca80 <mpfr_init2@plt>
   439a0:	mov	x0, x22
   439a4:	adrp	x1, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   439a8:	add	x1, x1, #0xfe8
   439ac:	bl	c340 <mpfr_set_str_binary@plt>
   439b0:	mov	x1, x20
   439b4:	mov	w2, #0x1                   	// #1
   439b8:	mov	x0, x19
   439bc:	bl	c400 <mpfr_sqr@plt>
   439c0:	mov	w3, #0x1                   	// #1
   439c4:	mov	x1, x22
   439c8:	mov	x2, x19
   439cc:	mov	x0, x22
   439d0:	bl	bd50 <mpfr_mul@plt>
   439d4:	mov	x1, x20
   439d8:	mov	w2, #0x1                   	// #1
   439dc:	mov	x0, x19
   439e0:	bl	bd70 <mpfr_neg@plt>
   439e4:	mov	x1, x19
   439e8:	mov	w2, #0x1                   	// #1
   439ec:	mov	x0, x19
   439f0:	bl	c1d0 <mpfr_log2@plt>
   439f4:	mov	x1, x22
   439f8:	mov	x2, x19
   439fc:	mov	x0, x22
   43a00:	mov	w3, #0x1                   	// #1
   43a04:	bl	c1a0 <mpfr_add@plt>
   43a08:	ldr	x1, [x24]
   43a0c:	mov	w3, #0x2                   	// #2
   43a10:	mov	x2, #0x0                   	// #0
   43a14:	mov	x0, x19
   43a18:	bl	ba80 <mpfr_set_si_2exp@plt>
   43a1c:	mov	x1, x19
   43a20:	mov	x0, x22
   43a24:	mov	w2, #0x1                   	// #1
   43a28:	bl	c9a0 <mpfr_cmp3@plt>
   43a2c:	mov	w1, w0
   43a30:	mov	x0, x22
   43a34:	mov	w22, w1
   43a38:	bl	c070 <mpfr_clear@plt>
   43a3c:	mov	x0, x19
   43a40:	bl	c070 <mpfr_clear@plt>
   43a44:	tbnz	w22, #31, 4347c <mpfr_erfc@@Base+0x3c4>
   43a48:	b	43630 <mpfr_erfc@@Base+0x578>
   43a4c:	adrp	x1, 7f000 <__gmpfr_l2b@@Base+0x200>
   43a50:	ldr	w3, [x20, #8]
   43a54:	mov	x2, x22
   43a58:	mov	w4, w25
   43a5c:	ldr	x1, [x1, #3928]
   43a60:	mov	x0, x24
   43a64:	lsr	w3, w3, #31
   43a68:	bl	c540 <mpfr_round_near_x@plt>
   43a6c:	mov	w19, w0
   43a70:	cbnz	w0, 43674 <mpfr_erfc@@Base+0x5bc>
   43a74:	stp	x27, x28, [sp, #80]
   43a78:	ldr	x19, [x24]
   43a7c:	b	431d4 <mpfr_erfc@@Base+0x11c>
   43a80:	mov	w3, w2
   43a84:	mov	x0, x24
   43a88:	mov	x2, #0x0                   	// #0
   43a8c:	mov	x1, #0x1                   	// #1
   43a90:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   43a94:	mov	w19, w0
   43a98:	b	4337c <mpfr_erfc@@Base+0x2c4>
   43a9c:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   43aa0:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   43aa4:	add	x2, x2, #0x830
   43aa8:	add	x0, x0, #0x10
   43aac:	mov	w1, #0x10a                 	// #266
   43ab0:	bl	cb40 <mpfr_assert_fail@plt>
   43ab4:	cmp	x22, #0x2
   43ab8:	b.gt	43630 <mpfr_erfc@@Base+0x578>
   43abc:	b	43614 <mpfr_erfc@@Base+0x55c>
   43ac0:	mov	w3, w2
   43ac4:	mov	x0, x24
   43ac8:	mov	x2, #0x0                   	// #0
   43acc:	mov	x1, #0x2                   	// #2
   43ad0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   43ad4:	mov	w19, w0
   43ad8:	b	4337c <mpfr_erfc@@Base+0x2c4>
   43adc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43ae0:	ldr	x1, [x0, #2576]
   43ae4:	add	x0, x0, #0xa10
   43ae8:	blr	x1
   43aec:	add	x0, x21, x0
   43af0:	mov	w19, #0x0                   	// #0
   43af4:	str	x22, [x24, #16]
   43af8:	ldr	w1, [x0]
   43afc:	orr	w1, w1, #0x4
   43b00:	str	w1, [x0]
   43b04:	b	4337c <mpfr_erfc@@Base+0x2c4>
   43b08:	stp	x29, x30, [sp, #-80]!
   43b0c:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   43b10:	mov	x29, sp
   43b14:	stp	x19, x20, [sp, #16]
   43b18:	mrs	x19, tpidr_el0
   43b1c:	mov	x20, x0
   43b20:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43b24:	ldr	x4, [x0, #2576]
   43b28:	add	x0, x0, #0xa10
   43b2c:	blr	x4
   43b30:	stp	x23, x24, [sp, #48]
   43b34:	ldr	w23, [x19, x0]
   43b38:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43b3c:	ldr	x5, [x0, #2512]
   43b40:	add	x0, x0, #0x9d0
   43b44:	blr	x5
   43b48:	add	x5, x19, x0
   43b4c:	stp	x21, x22, [sp, #32]
   43b50:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   43b54:	mov	w21, w3
   43b58:	stp	x25, x26, [sp, #64]
   43b5c:	mov	w26, w1
   43b60:	ldr	x24, [x19, x0]
   43b64:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43b68:	ldr	x7, [x0, #2544]
   43b6c:	add	x0, x0, #0x9f0
   43b70:	blr	x7
   43b74:	str	x6, [x5]
   43b78:	ldr	x25, [x19, x0]
   43b7c:	str	x4, [x19, x0]
   43b80:	cbz	w2, 43c78 <mpfr_erfc@@Base+0xbc0>
   43b84:	cmp	w3, #0x2
   43b88:	mov	w2, #0x3                   	// #3
   43b8c:	b.eq	43b9c <mpfr_erfc@@Base+0xae4>  // b.none
   43b90:	cmp	w3, w2
   43b94:	mov	w2, #0x2                   	// #2
   43b98:	csel	w2, w3, w2, ne  // ne = any
   43b9c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43ba0:	ldr	x1, [x0, #2624]
   43ba4:	add	x0, x0, #0xa40
   43ba8:	blr	x1
   43bac:	add	x1, x19, x0
   43bb0:	mov	x0, x20
   43bb4:	bl	c380 <mpfr_cache@plt>
   43bb8:	ldr	w1, [x20, #8]
   43bbc:	neg	w22, w0
   43bc0:	neg	w1, w1
   43bc4:	str	w1, [x20, #8]
   43bc8:	mov	x1, x20
   43bcc:	mov	w3, w21
   43bd0:	sxtw	x2, w26
   43bd4:	mov	x0, x20
   43bd8:	bl	c8f0 <mpfr_div_2ui@plt>
   43bdc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43be0:	ldr	x1, [x0, #2576]
   43be4:	add	x0, x0, #0xa10
   43be8:	blr	x1
   43bec:	str	w23, [x19, x0]
   43bf0:	ldr	x1, [x20, #16]
   43bf4:	add	x2, x19, x0
   43bf8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43bfc:	ldr	x3, [x0, #2512]
   43c00:	add	x0, x0, #0x9d0
   43c04:	blr	x3
   43c08:	str	x24, [x19, x0]
   43c0c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43c10:	ldr	x3, [x0, #2544]
   43c14:	add	x0, x0, #0x9f0
   43c18:	blr	x3
   43c1c:	str	x25, [x19, x0]
   43c20:	cmp	x25, x1
   43c24:	ccmp	x24, x1, #0x0, ge  // ge = tcont
   43c28:	b.le	43c50 <mpfr_erfc@@Base+0xb98>
   43c2c:	mov	w2, w21
   43c30:	mov	w1, w22
   43c34:	mov	x0, x20
   43c38:	ldp	x19, x20, [sp, #16]
   43c3c:	ldp	x21, x22, [sp, #32]
   43c40:	ldp	x23, x24, [sp, #48]
   43c44:	ldp	x25, x26, [sp, #64]
   43c48:	ldp	x29, x30, [sp], #80
   43c4c:	b	cb30 <mpfr_check_range@plt>
   43c50:	cbz	w22, 43c5c <mpfr_erfc@@Base+0xba4>
   43c54:	orr	w23, w23, #0x8
   43c58:	str	w23, [x2]
   43c5c:	mov	w0, w22
   43c60:	ldp	x19, x20, [sp, #16]
   43c64:	ldp	x21, x22, [sp, #32]
   43c68:	ldp	x23, x24, [sp, #48]
   43c6c:	ldp	x25, x26, [sp, #64]
   43c70:	ldp	x29, x30, [sp], #80
   43c74:	ret
   43c78:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43c7c:	ldr	x1, [x0, #2624]
   43c80:	add	x0, x0, #0xa40
   43c84:	blr	x1
   43c88:	mov	w2, w3
   43c8c:	add	x1, x19, x0
   43c90:	mov	x0, x20
   43c94:	bl	c380 <mpfr_cache@plt>
   43c98:	mov	w22, w0
   43c9c:	b	43bc8 <mpfr_erfc@@Base+0xb10>

0000000000043ca0 <mpfr_atan2@@Base>:
   43ca0:	stp	x29, x30, [sp, #-192]!
   43ca4:	mov	x29, sp
   43ca8:	stp	x21, x22, [sp, #32]
   43cac:	mov	x21, x2
   43cb0:	ldr	x2, [x2, #16]
   43cb4:	stp	x19, x20, [sp, #16]
   43cb8:	mov	x20, x0
   43cbc:	stp	x23, x24, [sp, #48]
   43cc0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   43cc4:	mov	x24, x1
   43cc8:	mov	w23, w3
   43ccc:	cmp	x2, x0
   43cd0:	b.le	44040 <mpfr_atan2@@Base+0x3a0>
   43cd4:	ldr	x1, [x1, #16]
   43cd8:	cmp	x1, x0
   43cdc:	b.le	44054 <mpfr_atan2@@Base+0x3b4>
   43ce0:	ldr	w0, [x21, #8]
   43ce4:	stp	x25, x26, [sp, #64]
   43ce8:	cmp	w0, #0x0
   43cec:	b.gt	4411c <mpfr_atan2@@Base+0x47c>
   43cf0:	mrs	x19, tpidr_el0
   43cf4:	stp	x27, x28, [sp, #80]
   43cf8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43cfc:	ldr	x1, [x0, #2576]
   43d00:	add	x0, x0, #0xa10
   43d04:	blr	x1
   43d08:	ldr	w0, [x19, x0]
   43d0c:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   43d10:	str	w0, [sp, #108]
   43d14:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   43d18:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43d1c:	ldr	x1, [x0, #2512]
   43d20:	add	x0, x0, #0x9d0
   43d24:	blr	x1
   43d28:	add	x3, x19, x0
   43d2c:	ldr	x1, [x20]
   43d30:	ldr	x26, [x19, x0]
   43d34:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43d38:	ldr	x5, [x0, #2544]
   43d3c:	add	x0, x0, #0x9f0
   43d40:	blr	x5
   43d44:	str	x4, [x3]
   43d48:	cmp	x1, #0x1
   43d4c:	ldr	x27, [x19, x0]
   43d50:	str	x2, [x19, x0]
   43d54:	add	x28, x1, #0x3
   43d58:	b.eq	44134 <mpfr_atan2@@Base+0x494>  // b.none
   43d5c:	b.le	4413c <mpfr_atan2@@Base+0x49c>
   43d60:	sub	x1, x1, #0x1
   43d64:	mov	w22, #0x40                  	// #64
   43d68:	clz	x1, x1
   43d6c:	sub	w1, w22, w1
   43d70:	add	x22, x28, w1, sxtw
   43d74:	add	x25, sp, #0x80
   43d78:	mov	x1, x22
   43d7c:	mov	x0, x25
   43d80:	bl	ca80 <mpfr_init2@plt>
   43d84:	ldr	w0, [x21, #8]
   43d88:	cmp	w0, #0x0
   43d8c:	mov	x0, #0x40                  	// #64
   43d90:	b.le	43f14 <mpfr_atan2@@Base+0x274>
   43d94:	str	x0, [sp, #112]
   43d98:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43d9c:	ldr	x1, [x0, #2576]
   43da0:	add	x0, x0, #0xa10
   43da4:	blr	x1
   43da8:	add	x28, x19, x0
   43dac:	mov	x1, x24
   43db0:	mov	x2, x21
   43db4:	mov	w3, #0x0                   	// #0
   43db8:	str	wzr, [x19, x0]
   43dbc:	mov	x0, x25
   43dc0:	bl	c620 <mpfr_div@plt>
   43dc4:	ldr	w1, [x28]
   43dc8:	cbz	w0, 443d4 <mpfr_atan2@@Base+0x734>
   43dcc:	tbnz	w1, #0, 44194 <mpfr_atan2@@Base+0x4f4>
   43dd0:	mov	x1, x25
   43dd4:	mov	x0, x25
   43dd8:	mov	w2, #0x0                   	// #0
   43ddc:	bl	c690 <mpfr_atan@plt>
   43de0:	ldr	x0, [sp, #144]
   43de4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   43de8:	cmp	x0, x1
   43dec:	b.le	440e0 <mpfr_atan2@@Base+0x440>
   43df0:	ldr	x1, [sp, #128]
   43df4:	cmp	w23, #0x0
   43df8:	ldr	x0, [sp, #152]
   43dfc:	sub	x1, x1, #0x1
   43e00:	ldr	x3, [x20]
   43e04:	asr	x1, x1, #6
   43e08:	sub	x2, x22, #0x2
   43e0c:	add	x1, x1, #0x1
   43e10:	cinc	x3, x3, eq  // eq = none
   43e14:	bl	c370 <mpfr_round_p@plt>
   43e18:	cbz	w0, 440e0 <mpfr_atan2@@Base+0x440>
   43e1c:	ldr	w3, [sp, #136]
   43e20:	mov	w2, w23
   43e24:	mov	x1, x25
   43e28:	mov	x0, x20
   43e2c:	bl	c6a0 <mpfr_set4@plt>
   43e30:	mov	w21, w0
   43e34:	mov	x0, x25
   43e38:	bl	c070 <mpfr_clear@plt>
   43e3c:	ldr	x1, [x20, #16]
   43e40:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43e44:	ldr	x2, [x0, #2576]
   43e48:	add	x0, x0, #0xa10
   43e4c:	blr	x2
   43e50:	ldr	w2, [sp, #108]
   43e54:	str	w2, [x19, x0]
   43e58:	add	x2, x19, x0
   43e5c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43e60:	ldr	x3, [x0, #2512]
   43e64:	add	x0, x0, #0x9d0
   43e68:	blr	x3
   43e6c:	str	x26, [x19, x0]
   43e70:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43e74:	ldr	x3, [x0, #2544]
   43e78:	add	x0, x0, #0x9f0
   43e7c:	blr	x3
   43e80:	str	x27, [x19, x0]
   43e84:	cmp	x27, x1
   43e88:	ccmp	x26, x1, #0x0, ge  // ge = tcont
   43e8c:	b.le	43ec4 <mpfr_atan2@@Base+0x224>
   43e90:	mov	w1, w21
   43e94:	mov	w2, w23
   43e98:	mov	x0, x20
   43e9c:	bl	cb30 <mpfr_check_range@plt>
   43ea0:	ldp	x25, x26, [sp, #64]
   43ea4:	mov	w21, w0
   43ea8:	ldp	x27, x28, [sp, #80]
   43eac:	mov	w0, w21
   43eb0:	ldp	x19, x20, [sp, #16]
   43eb4:	ldp	x21, x22, [sp, #32]
   43eb8:	ldp	x23, x24, [sp, #48]
   43ebc:	ldp	x29, x30, [sp], #192
   43ec0:	ret
   43ec4:	cbz	w21, 43ef4 <mpfr_atan2@@Base+0x254>
   43ec8:	ldr	w0, [sp, #108]
   43ecc:	ldp	x27, x28, [sp, #80]
   43ed0:	orr	w25, w0, #0x8
   43ed4:	str	w25, [x2]
   43ed8:	mov	w0, w21
   43edc:	ldp	x19, x20, [sp, #16]
   43ee0:	ldp	x21, x22, [sp, #32]
   43ee4:	ldp	x23, x24, [sp, #48]
   43ee8:	ldp	x25, x26, [sp, #64]
   43eec:	ldp	x29, x30, [sp], #192
   43ef0:	ret
   43ef4:	mov	w0, w21
   43ef8:	ldp	x19, x20, [sp, #16]
   43efc:	ldp	x21, x22, [sp, #32]
   43f00:	ldp	x23, x24, [sp, #48]
   43f04:	ldp	x25, x26, [sp, #64]
   43f08:	ldp	x27, x28, [sp, #80]
   43f0c:	ldp	x29, x30, [sp], #192
   43f10:	ret
   43f14:	add	x28, sp, #0xa0
   43f18:	mov	x1, x22
   43f1c:	str	x0, [sp, #120]
   43f20:	mov	x0, x28
   43f24:	bl	ca80 <mpfr_init2@plt>
   43f28:	mov	w3, #0x0                   	// #0
   43f2c:	mov	x2, x21
   43f30:	mov	x1, x24
   43f34:	mov	x0, x25
   43f38:	bl	c620 <mpfr_div@plt>
   43f3c:	mov	x1, x25
   43f40:	mov	w0, #0x1                   	// #1
   43f44:	mov	w2, #0x0                   	// #0
   43f48:	str	w0, [sp, #136]
   43f4c:	mov	x0, x25
   43f50:	bl	c690 <mpfr_atan@plt>
   43f54:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   43f58:	ldr	x1, [x0, #2624]
   43f5c:	add	x0, x0, #0xa40
   43f60:	blr	x1
   43f64:	mov	w2, #0x0                   	// #0
   43f68:	add	x1, x19, x0
   43f6c:	mov	x0, x28
   43f70:	bl	c380 <mpfr_cache@plt>
   43f74:	ldr	x5, [sp, #144]
   43f78:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   43f7c:	cmp	x5, x0
   43f80:	b.eq	44024 <mpfr_atan2@@Base+0x384>  // b.none
   43f84:	mov	x2, x25
   43f88:	mov	x1, x28
   43f8c:	mov	x0, x25
   43f90:	mov	w3, #0x0                   	// #0
   43f94:	str	x5, [sp, #112]
   43f98:	bl	bb70 <mpfr_sub@plt>
   43f9c:	ldr	w0, [x24, #8]
   43fa0:	ldr	x5, [sp, #112]
   43fa4:	tbnz	w0, #31, 44014 <mpfr_atan2@@Base+0x374>
   43fa8:	ldr	x0, [sp, #144]
   43fac:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   43fb0:	ldr	x2, [sp, #176]
   43fb4:	sub	x5, x5, x0
   43fb8:	add	x5, x5, #0x1
   43fbc:	sub	x2, x2, x0
   43fc0:	subs	x2, x2, #0x1
   43fc4:	csinv	x2, x2, xzr, pl  // pl = nfrst
   43fc8:	cmp	x2, x5
   43fcc:	csel	x2, x2, x5, ge  // ge = tcont
   43fd0:	cmp	x0, x1
   43fd4:	add	x2, x2, #0x2
   43fd8:	b.le	4438c <mpfr_atan2@@Base+0x6ec>
   43fdc:	ldr	x1, [sp, #128]
   43fe0:	cmp	w23, #0x0
   43fe4:	ldr	x0, [sp, #152]
   43fe8:	sub	x1, x1, #0x1
   43fec:	ldr	x3, [x20]
   43ff0:	asr	x1, x1, #6
   43ff4:	sub	x2, x22, x2
   43ff8:	add	x1, x1, #0x1
   43ffc:	cinc	x3, x3, eq  // eq = none
   44000:	bl	c370 <mpfr_round_p@plt>
   44004:	cbz	w0, 4438c <mpfr_atan2@@Base+0x6ec>
   44008:	mov	x0, x28
   4400c:	bl	c070 <mpfr_clear@plt>
   44010:	b	43e1c <mpfr_atan2@@Base+0x17c>
   44014:	ldr	w0, [sp, #136]
   44018:	neg	w0, w0
   4401c:	str	w0, [sp, #136]
   44020:	b	43fa8 <mpfr_atan2@@Base+0x308>
   44024:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   44028:	ldr	x1, [x0, #2512]
   4402c:	add	x0, x0, #0x9d0
   44030:	blr	x1
   44034:	ldr	x5, [x19, x0]
   44038:	sub	x5, x5, #0x1
   4403c:	b	43f84 <mpfr_atan2@@Base+0x2e4>
   44040:	mov	x0, #0x2                   	// #2
   44044:	movk	x0, #0x8000, lsl #48
   44048:	cmp	x2, x0
   4404c:	b.eq	4415c <mpfr_atan2@@Base+0x4bc>  // b.none
   44050:	ldr	x1, [x1, #16]
   44054:	mov	x0, #0x2                   	// #2
   44058:	movk	x0, #0x8000, lsl #48
   4405c:	cmp	x1, x0
   44060:	b.eq	4415c <mpfr_atan2@@Base+0x4bc>  // b.none
   44064:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   44068:	cmp	x1, x0
   4406c:	b.eq	44084 <mpfr_atan2@@Base+0x3e4>  // b.none
   44070:	cmp	x2, x0
   44074:	b.eq	44418 <mpfr_atan2@@Base+0x778>  // b.none
   44078:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4407c:	cmp	x1, x0
   44080:	b.eq	4422c <mpfr_atan2@@Base+0x58c>  // b.none
   44084:	ldr	w0, [x21, #8]
   44088:	tbz	w0, #31, 44214 <mpfr_atan2@@Base+0x574>
   4408c:	ldr	w0, [x24, #8]
   44090:	tbz	w0, #31, 443ec <mpfr_atan2@@Base+0x74c>
   44094:	cmp	w23, #0x2
   44098:	b.eq	44450 <mpfr_atan2@@Base+0x7b0>  // b.none
   4409c:	cmp	w23, #0x3
   440a0:	mov	w0, #0x2                   	// #2
   440a4:	csel	w23, w23, w0, ne  // ne = any
   440a8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   440ac:	ldr	x1, [x0, #2624]
   440b0:	add	x0, x0, #0xa40
   440b4:	blr	x1
   440b8:	mov	w2, w23
   440bc:	mrs	x1, tpidr_el0
   440c0:	add	x1, x1, x0
   440c4:	mov	x0, x20
   440c8:	bl	c380 <mpfr_cache@plt>
   440cc:	neg	w21, w0
   440d0:	ldr	w1, [x20, #8]
   440d4:	neg	w1, w1
   440d8:	str	w1, [x20, #8]
   440dc:	b	43eac <mpfr_atan2@@Base+0x20c>
   440e0:	ldr	x1, [sp, #112]
   440e4:	mov	x0, #0xfffffffffffffeff    	// #-257
   440e8:	movk	x0, #0x7fff, lsl #48
   440ec:	sub	x0, x0, x22
   440f0:	cmp	x0, x1
   440f4:	b.lt	44438 <mpfr_atan2@@Base+0x798>  // b.tstop
   440f8:	ldr	x0, [sp, #112]
   440fc:	add	x22, x22, x0
   44100:	mov	x0, x25
   44104:	mov	x1, x22
   44108:	add	x2, x22, x22, lsr #63
   4410c:	asr	x2, x2, #1
   44110:	str	x2, [sp, #112]
   44114:	bl	bed0 <mpfr_set_prec@plt>
   44118:	b	43d98 <mpfr_atan2@@Base+0xf8>
   4411c:	mov	x0, x21
   44120:	mrs	x19, tpidr_el0
   44124:	bl	bf00 <mpfr_powerof2_raw@plt>
   44128:	cbnz	w0, 444fc <mpfr_atan2@@Base+0x85c>
   4412c:	stp	x27, x28, [sp, #80]
   44130:	b	43cf8 <mpfr_atan2@@Base+0x58>
   44134:	mov	x22, #0x4                   	// #4
   44138:	b	43d74 <mpfr_atan2@@Base+0xd4>
   4413c:	mov	w1, #0xb7                  	// #183
   44140:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   44144:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   44148:	add	x2, x2, #0x68
   4414c:	add	x0, x0, #0x60
   44150:	bl	cb40 <mpfr_assert_fail@plt>
   44154:	ldr	x1, [x20]
   44158:	b	43d60 <mpfr_atan2@@Base+0xc0>
   4415c:	mrs	x1, tpidr_el0
   44160:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   44164:	ldr	x2, [x0, #2576]
   44168:	add	x0, x0, #0xa10
   4416c:	blr	x2
   44170:	add	x0, x1, x0
   44174:	mov	x1, #0x2                   	// #2
   44178:	movk	x1, #0x8000, lsl #48
   4417c:	str	x1, [x20, #16]
   44180:	mov	w21, #0x0                   	// #0
   44184:	ldr	w1, [x0]
   44188:	orr	w1, w1, #0x4
   4418c:	str	w1, [x0]
   44190:	b	43eac <mpfr_atan2@@Base+0x20c>
   44194:	cbnz	w23, 441a8 <mpfr_atan2@@Base+0x508>
   44198:	ldr	x1, [sp, #144]
   4419c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   441a0:	cmp	x1, x0
   441a4:	cset	w23, eq  // eq = none
   441a8:	mov	x0, x25
   441ac:	ldr	w21, [sp, #136]
   441b0:	bl	c070 <mpfr_clear@plt>
   441b4:	mov	w2, w21
   441b8:	mov	w1, w23
   441bc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   441c0:	ldr	x3, [x0, #2576]
   441c4:	add	x0, x0, #0xa10
   441c8:	blr	x3
   441cc:	ldr	w3, [sp, #108]
   441d0:	str	w3, [x19, x0]
   441d4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   441d8:	ldr	x3, [x0, #2512]
   441dc:	add	x0, x0, #0x9d0
   441e0:	blr	x3
   441e4:	str	x26, [x19, x0]
   441e8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   441ec:	ldr	x3, [x0, #2544]
   441f0:	add	x0, x0, #0x9f0
   441f4:	blr	x3
   441f8:	str	x27, [x19, x0]
   441fc:	mov	x0, x20
   44200:	bl	c3c0 <mpfr_underflow@plt>
   44204:	mov	w21, w0
   44208:	ldp	x25, x26, [sp, #64]
   4420c:	ldp	x27, x28, [sp, #80]
   44210:	b	43eac <mpfr_atan2@@Base+0x20c>
   44214:	ldr	w1, [x24, #8]
   44218:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4421c:	mov	w21, #0x0                   	// #0
   44220:	str	w1, [x20, #8]
   44224:	str	x0, [x20, #16]
   44228:	b	43eac <mpfr_atan2@@Base+0x20c>
   4422c:	cmp	x2, x1
   44230:	b.ne	44418 <mpfr_atan2@@Base+0x778>  // b.any
   44234:	ldr	w0, [x21, #8]
   44238:	cmp	w0, #0x0
   4423c:	b.gt	44564 <mpfr_atan2@@Base+0x8c4>
   44240:	mrs	x19, tpidr_el0
   44244:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   44248:	ldr	x1, [x0, #2576]
   4424c:	add	x0, x0, #0xa10
   44250:	blr	x1
   44254:	ldr	x4, [x20]
   44258:	mov	x21, x2
   4425c:	ldr	w0, [x19, x0]
   44260:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   44264:	str	w0, [sp, #108]
   44268:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   4426c:	stp	x25, x26, [sp, #64]
   44270:	add	x26, x4, #0xa
   44274:	mov	x25, #0xfffffffffffffeff    	// #-257
   44278:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4427c:	ldr	x1, [x0, #2512]
   44280:	add	x0, x0, #0x9d0
   44284:	blr	x1
   44288:	add	x3, x19, x0
   4428c:	ldr	x0, [x19, x0]
   44290:	stp	x27, x28, [sp, #80]
   44294:	add	x28, sp, #0xa0
   44298:	str	x0, [sp, #112]
   4429c:	mov	x22, #0x40                  	// #64
   442a0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   442a4:	ldr	x1, [x0, #2544]
   442a8:	add	x0, x0, #0x9f0
   442ac:	blr	x1
   442b0:	movk	x25, #0x7fff, lsl #48
   442b4:	mov	x1, x26
   442b8:	str	x5, [x3]
   442bc:	ldr	x27, [x19, x0]
   442c0:	str	x2, [x19, x0]
   442c4:	mov	x0, x28
   442c8:	bl	ca80 <mpfr_init2@plt>
   442cc:	b	442e8 <mpfr_atan2@@Base+0x648>
   442d0:	add	x26, x26, x22
   442d4:	mov	x0, x28
   442d8:	mov	x1, x26
   442dc:	add	x22, x26, x26, lsr #63
   442e0:	asr	x22, x22, #1
   442e4:	bl	bed0 <mpfr_set_prec@plt>
   442e8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   442ec:	ldr	x1, [x0, #2624]
   442f0:	add	x0, x0, #0xa40
   442f4:	blr	x1
   442f8:	mov	w2, #0x0                   	// #0
   442fc:	add	x1, x19, x0
   44300:	mov	x0, x28
   44304:	bl	c380 <mpfr_cache@plt>
   44308:	mov	x1, x28
   4430c:	mov	w3, #0x0                   	// #0
   44310:	mov	x2, #0x3                   	// #3
   44314:	mov	x0, x28
   44318:	bl	ba50 <mpfr_mul_ui@plt>
   4431c:	mov	x1, x28
   44320:	mov	x0, x28
   44324:	mov	w3, #0x0                   	// #0
   44328:	mov	x2, #0x2                   	// #2
   4432c:	bl	c8f0 <mpfr_div_2ui@plt>
   44330:	ldr	x0, [sp, #176]
   44334:	cmp	x0, x21
   44338:	b.le	44368 <mpfr_atan2@@Base+0x6c8>
   4433c:	ldr	x2, [sp, #160]
   44340:	cmp	w23, #0x0
   44344:	ldr	x0, [sp, #184]
   44348:	sub	x1, x2, #0x1
   4434c:	ldr	x3, [x20]
   44350:	asr	x1, x1, #6
   44354:	add	x1, x1, #0x1
   44358:	sub	x2, x2, #0x2
   4435c:	cinc	x3, x3, eq  // eq = none
   44360:	bl	c370 <mpfr_round_p@plt>
   44364:	cbnz	w0, 44458 <mpfr_atan2@@Base+0x7b8>
   44368:	sub	x0, x25, x26
   4436c:	cmp	x0, x22
   44370:	b.ge	442d0 <mpfr_atan2@@Base+0x630>  // b.tcont
   44374:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   44378:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4437c:	add	x2, x2, #0x18
   44380:	add	x0, x0, #0x60
   44384:	mov	w1, #0x88                  	// #136
   44388:	bl	cb40 <mpfr_assert_fail@plt>
   4438c:	ldr	x1, [sp, #120]
   44390:	mov	x0, #0xfffffffffffffeff    	// #-257
   44394:	movk	x0, #0x7fff, lsl #48
   44398:	sub	x0, x0, x22
   4439c:	cmp	x0, x1
   443a0:	b.lt	44584 <mpfr_atan2@@Base+0x8e4>  // b.tstop
   443a4:	ldr	x0, [sp, #120]
   443a8:	add	x22, x22, x0
   443ac:	mov	x0, x25
   443b0:	mov	x1, x22
   443b4:	add	x2, x22, x22, lsr #63
   443b8:	asr	x2, x2, #1
   443bc:	str	x2, [sp, #120]
   443c0:	bl	bed0 <mpfr_set_prec@plt>
   443c4:	mov	x1, x22
   443c8:	mov	x0, x28
   443cc:	bl	bed0 <mpfr_set_prec@plt>
   443d0:	b	43f28 <mpfr_atan2@@Base+0x288>
   443d4:	mov	w2, w23
   443d8:	mov	x1, x25
   443dc:	mov	x0, x20
   443e0:	bl	c690 <mpfr_atan@plt>
   443e4:	mov	w21, w0
   443e8:	b	43e34 <mpfr_atan2@@Base+0x194>
   443ec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   443f0:	ldr	x1, [x0, #2624]
   443f4:	add	x0, x0, #0xa40
   443f8:	blr	x1
   443fc:	mov	w2, w23
   44400:	mrs	x1, tpidr_el0
   44404:	add	x1, x1, x0
   44408:	mov	x0, x20
   4440c:	bl	c380 <mpfr_cache@plt>
   44410:	mov	w21, w0
   44414:	b	43eac <mpfr_atan2@@Base+0x20c>
   44418:	ldr	w2, [x24, #8]
   4441c:	mov	w3, w23
   44420:	mov	x0, x20
   44424:	mov	w1, #0x1                   	// #1
   44428:	lsr	w2, w2, #31
   4442c:	bl	43b08 <mpfr_erfc@@Base+0xa50>
   44430:	mov	w21, w0
   44434:	b	43eac <mpfr_atan2@@Base+0x20c>
   44438:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   4443c:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   44440:	add	x2, x2, #0x830
   44444:	add	x0, x0, #0x60
   44448:	mov	w1, #0xef                  	// #239
   4444c:	bl	cb40 <mpfr_assert_fail@plt>
   44450:	mov	w23, #0x3                   	// #3
   44454:	b	440a8 <mpfr_atan2@@Base+0x408>
   44458:	ldr	w0, [x24, #8]
   4445c:	ldr	w3, [sp, #168]
   44460:	tbz	w0, #31, 4446c <mpfr_atan2@@Base+0x7cc>
   44464:	neg	w3, w3
   44468:	str	w3, [sp, #168]
   4446c:	mov	w2, w23
   44470:	mov	x1, x28
   44474:	mov	x0, x20
   44478:	bl	c6a0 <mpfr_set4@plt>
   4447c:	mov	w21, w0
   44480:	mov	x0, x28
   44484:	bl	c070 <mpfr_clear@plt>
   44488:	ldr	x1, [x20, #16]
   4448c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   44490:	ldr	x2, [x0, #2576]
   44494:	add	x0, x0, #0xa10
   44498:	blr	x2
   4449c:	ldr	w2, [sp, #108]
   444a0:	str	w2, [x19, x0]
   444a4:	add	x2, x19, x0
   444a8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   444ac:	ldr	x3, [x0, #2512]
   444b0:	add	x0, x0, #0x9d0
   444b4:	blr	x3
   444b8:	ldr	x3, [sp, #112]
   444bc:	str	x3, [x19, x0]
   444c0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   444c4:	ldr	x4, [x0, #2544]
   444c8:	add	x0, x0, #0x9f0
   444cc:	blr	x4
   444d0:	str	x27, [x19, x0]
   444d4:	cmp	x27, x1
   444d8:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   444dc:	b.gt	43e90 <mpfr_atan2@@Base+0x1f0>
   444e0:	cbz	w21, 43ef4 <mpfr_atan2@@Base+0x254>
   444e4:	ldr	w0, [sp, #108]
   444e8:	ldp	x25, x26, [sp, #64]
   444ec:	orr	w0, w0, #0x8
   444f0:	ldp	x27, x28, [sp, #80]
   444f4:	str	w0, [x2]
   444f8:	b	43eac <mpfr_atan2@@Base+0x20c>
   444fc:	ldr	x1, [x24]
   44500:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   44504:	ldr	x2, [x0, #2576]
   44508:	add	x0, x0, #0xa10
   4450c:	blr	x2
   44510:	add	x22, sp, #0xa0
   44514:	ldr	w26, [x19, x0]
   44518:	add	x25, x19, x0
   4451c:	mov	x0, x22
   44520:	bl	ca80 <mpfr_init2@plt>
   44524:	ldr	x2, [x21, #16]
   44528:	mov	x0, x22
   4452c:	mov	x1, x24
   44530:	mov	w3, #0x0                   	// #0
   44534:	sub	x2, x2, #0x1
   44538:	bl	c420 <mpfr_div_2si@plt>
   4453c:	cbnz	w0, 4459c <mpfr_atan2@@Base+0x8fc>
   44540:	mov	w2, w23
   44544:	mov	x1, x22
   44548:	mov	x0, x20
   4454c:	bl	c690 <mpfr_atan@plt>
   44550:	mov	w21, w0
   44554:	mov	x0, x22
   44558:	bl	c070 <mpfr_clear@plt>
   4455c:	ldp	x25, x26, [sp, #64]
   44560:	b	43eac <mpfr_atan2@@Base+0x20c>
   44564:	ldr	w2, [x24, #8]
   44568:	mov	w3, w23
   4456c:	mov	x0, x20
   44570:	mov	w1, #0x2                   	// #2
   44574:	lsr	w2, w2, #31
   44578:	bl	43b08 <mpfr_erfc@@Base+0xa50>
   4457c:	mov	w21, w0
   44580:	b	43eac <mpfr_atan2@@Base+0x20c>
   44584:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   44588:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4458c:	add	x2, x2, #0x830
   44590:	add	x0, x0, #0x60
   44594:	mov	w1, #0x10b                 	// #267
   44598:	bl	cb40 <mpfr_assert_fail@plt>
   4459c:	mov	x0, x22
   445a0:	stp	x27, x28, [sp, #80]
   445a4:	bl	c070 <mpfr_clear@plt>
   445a8:	str	w26, [x25]
   445ac:	b	43cf8 <mpfr_atan2@@Base+0x58>

00000000000445b0 <mpfr_subnormalize@@Base>:
   445b0:	stp	x29, x30, [sp, #-112]!
   445b4:	mov	x29, sp
   445b8:	stp	x19, x20, [sp, #16]
   445bc:	mov	x20, x0
   445c0:	mov	w19, w1
   445c4:	stp	x21, x22, [sp, #32]
   445c8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   445cc:	ldr	x1, [x20, #16]
   445d0:	cmp	x1, x0
   445d4:	b.gt	44630 <mpfr_subnormalize@@Base+0x80>
   445d8:	cbnz	w19, 445f4 <mpfr_subnormalize@@Base+0x44>
   445dc:	mov	w21, #0x0                   	// #0
   445e0:	mov	w0, w21
   445e4:	ldp	x19, x20, [sp, #16]
   445e8:	ldp	x21, x22, [sp, #32]
   445ec:	ldp	x29, x30, [sp], #112
   445f0:	ret
   445f4:	mrs	x1, tpidr_el0
   445f8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   445fc:	ldr	x2, [x0, #2576]
   44600:	add	x0, x0, #0xa10
   44604:	blr	x2
   44608:	add	x0, x1, x0
   4460c:	mov	w21, w19
   44610:	ldp	x19, x20, [sp, #16]
   44614:	ldr	w1, [x0]
   44618:	orr	w1, w1, #0x8
   4461c:	str	w1, [x0]
   44620:	mov	w0, w21
   44624:	ldp	x21, x22, [sp, #32]
   44628:	ldp	x29, x30, [sp], #112
   4462c:	ret
   44630:	stp	x23, x24, [sp, #48]
   44634:	mrs	x23, tpidr_el0
   44638:	mov	w22, w2
   4463c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   44640:	ldr	x2, [x0, #2512]
   44644:	add	x0, x0, #0x9d0
   44648:	blr	x2
   4464c:	ldr	x2, [x20]
   44650:	ldr	x3, [x23, x0]
   44654:	add	x2, x3, x2
   44658:	sub	x2, x2, #0x1
   4465c:	cmp	x1, x2
   44660:	b.lt	44670 <mpfr_subnormalize@@Base+0xc0>  // b.tstop
   44664:	ldp	x23, x24, [sp, #48]
   44668:	cbnz	w19, 445f4 <mpfr_subnormalize@@Base+0x44>
   4466c:	b	445dc <mpfr_subnormalize@@Base+0x2c>
   44670:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   44674:	ldr	x2, [x0, #2576]
   44678:	add	x0, x0, #0xa10
   4467c:	blr	x2
   44680:	add	x24, x23, x0
   44684:	ldr	w21, [x20, #8]
   44688:	cmp	x1, x3
   4468c:	ldr	w0, [x24]
   44690:	orr	w0, w0, #0x1
   44694:	str	w0, [x24]
   44698:	b.eq	448a0 <mpfr_subnormalize@@Base+0x2f0>  // b.none
   4469c:	mov	x24, #0x1                   	// #1
   446a0:	sub	x3, x24, x3
   446a4:	stp	x25, x26, [sp, #64]
   446a8:	add	x25, sp, #0x50
   446ac:	mov	x0, x25
   446b0:	add	x1, x3, x1
   446b4:	bl	ca80 <mpfr_init2@plt>
   446b8:	ldr	x1, [x20]
   446bc:	str	w21, [sp, #88]
   446c0:	ldr	x0, [sp, #80]
   446c4:	sub	x5, x1, #0x1
   446c8:	ldp	x2, x8, [x20, #16]
   446cc:	sub	x6, x0, #0x1
   446d0:	str	x2, [sp, #96]
   446d4:	asr	x5, x5, #6
   446d8:	cmp	x1, x0
   446dc:	asr	x6, x6, #6
   446e0:	ldr	x26, [sp, #104]
   446e4:	b.le	44970 <mpfr_subnormalize@@Base+0x3c0>
   446e8:	sub	x5, x5, x6
   446ec:	neg	w0, w0
   446f0:	ands	w0, w0, #0x3f
   446f4:	add	x2, x6, #0x1
   446f8:	add	x1, x8, x5, lsl #3
   446fc:	b.eq	44a68 <mpfr_subnormalize@@Base+0x4b8>  // b.none
   44700:	ldr	x3, [x8, x5, lsl #3]
   44704:	sub	w4, w0, #0x1
   44708:	cmp	w22, #0x0
   4470c:	lsl	x0, x24, x4
   44710:	and	x9, x3, x0
   44714:	sub	x0, x0, #0x1
   44718:	ccmp	x9, #0x0, #0x4, ne  // ne = any
   4471c:	and	x0, x0, x3
   44720:	b.ne	44750 <mpfr_subnormalize@@Base+0x1a0>  // b.any
   44724:	cmp	x5, #0x0
   44728:	mov	x3, x5
   4472c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   44730:	b.ne	44750 <mpfr_subnormalize@@Base+0x1a0>  // b.any
   44734:	mvn	x7, x5
   44738:	add	x7, x1, x7, lsl #3
   4473c:	nop
   44740:	ldr	x0, [x7, x3, lsl #3]
   44744:	subs	x3, x3, #0x1
   44748:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   4474c:	b.eq	44740 <mpfr_subnormalize@@Base+0x190>  // b.none
   44750:	mov	x24, #0x2                   	// #2
   44754:	lsl	x24, x24, x4
   44758:	cmp	w22, #0x5
   4475c:	b.eq	4493c <mpfr_subnormalize@@Base+0x38c>  // b.none
   44760:	cbnz	w22, 4485c <mpfr_subnormalize@@Base+0x2ac>
   44764:	cbz	x9, 44880 <mpfr_subnormalize@@Base+0x2d0>
   44768:	ldr	x3, [x8, x5, lsl #3]
   4476c:	cbz	x0, 44b00 <mpfr_subnormalize@@Base+0x550>
   44770:	adds	x3, x3, x24
   44774:	str	x3, [x26]
   44778:	b.cc	44944 <mpfr_subnormalize@@Base+0x394>  // b.lo, b.ul, b.last
   4477c:	mov	x0, #0x1                   	// #1
   44780:	b	4479c <mpfr_subnormalize@@Base+0x1ec>
   44784:	ldr	x3, [x1, x0, lsl #3]
   44788:	add	x4, x0, #0x1
   4478c:	add	x3, x3, #0x1
   44790:	str	x3, [x26, x0, lsl #3]
   44794:	cbnz	x3, 44ab4 <mpfr_subnormalize@@Base+0x504>
   44798:	mov	x0, x4
   4479c:	cmp	x2, x0
   447a0:	b.gt	44784 <mpfr_subnormalize@@Base+0x1d4>
   447a4:	add	x2, x26, x2, lsl #3
   447a8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   447ac:	stur	x0, [x2, #-8]
   447b0:	ldr	x0, [sp, #96]
   447b4:	add	x0, x0, #0x1
   447b8:	str	x0, [sp, #96]
   447bc:	ldr	x0, [x26]
   447c0:	neg	x24, x24
   447c4:	and	x0, x0, x24
   447c8:	str	x0, [x26]
   447cc:	cbz	w19, 447e8 <mpfr_subnormalize@@Base+0x238>
   447d0:	add	w0, w21, #0x2
   447d4:	and	w0, w0, #0xfffffffb
   447d8:	orr	w0, w0, w22
   447dc:	cbz	w0, 44b14 <mpfr_subnormalize@@Base+0x564>
   447e0:	cmp	w21, #0x0
   447e4:	csel	w21, w21, w19, ne  // ne = any
   447e8:	ldr	w3, [sp, #88]
   447ec:	mov	w2, w22
   447f0:	mov	x1, x25
   447f4:	mov	x0, x20
   447f8:	bl	c6a0 <mpfr_set4@plt>
   447fc:	cbnz	w0, 44b7c <mpfr_subnormalize@@Base+0x5cc>
   44800:	ldr	x1, [x20, #16]
   44804:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   44808:	cmp	x1, x0
   4480c:	b.le	449ac <mpfr_subnormalize@@Base+0x3fc>
   44810:	mov	x0, x25
   44814:	bl	c070 <mpfr_clear@plt>
   44818:	cbz	w21, 44848 <mpfr_subnormalize@@Base+0x298>
   4481c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   44820:	ldr	x1, [x0, #2576]
   44824:	add	x0, x0, #0xa10
   44828:	blr	x1
   4482c:	add	x0, x23, x0
   44830:	ldp	x23, x24, [sp, #48]
   44834:	ldr	w1, [x0]
   44838:	ldp	x25, x26, [sp, #64]
   4483c:	orr	w1, w1, #0x8
   44840:	str	w1, [x0]
   44844:	b	445e0 <mpfr_subnormalize@@Base+0x30>
   44848:	ldp	x23, x24, [sp, #48]
   4484c:	ldp	x25, x26, [sp, #64]
   44850:	b	445e0 <mpfr_subnormalize@@Base+0x30>
   44854:	cmp	w22, #0x5
   44858:	b.eq	4493c <mpfr_subnormalize@@Base+0x38c>  // b.none
   4485c:	orr	x0, x0, x9
   44860:	cmp	w22, #0x1
   44864:	b.eq	44880 <mpfr_subnormalize@@Base+0x2d0>  // b.none
   44868:	add	w3, w22, w21, lsr #31
   4486c:	cmp	w3, #0x3
   44870:	b.eq	44880 <mpfr_subnormalize@@Base+0x2d0>  // b.none
   44874:	cbz	x0, 4493c <mpfr_subnormalize@@Base+0x38c>
   44878:	ldr	x3, [x8, x5, lsl #3]
   4487c:	b	44770 <mpfr_subnormalize@@Base+0x1c0>
   44880:	cmp	x0, #0x0
   44884:	csneg	w21, wzr, w21, eq  // eq = none
   44888:	cmp	x26, x1
   4488c:	b.eq	447bc <mpfr_subnormalize@@Base+0x20c>  // b.none
   44890:	lsl	x2, x2, #3
   44894:	mov	x0, x26
   44898:	bl	ba10 <memcpy@plt>
   4489c:	b	447bc <mpfr_subnormalize@@Base+0x20c>
   448a0:	mov	x0, x20
   448a4:	bl	bf00 <mpfr_powerof2_raw@plt>
   448a8:	cbnz	w0, 44adc <mpfr_subnormalize@@Base+0x52c>
   448ac:	cbnz	w22, 449c8 <mpfr_subnormalize@@Base+0x418>
   448b0:	ldr	x1, [x20]
   448b4:	ldr	x2, [x20, #24]
   448b8:	sub	x1, x1, #0x1
   448bc:	asr	x1, x1, #6
   448c0:	ldr	x0, [x2, x1, lsl #3]
   448c4:	tbz	x0, #62, 449e0 <mpfr_subnormalize@@Base+0x430>
   448c8:	tst	x0, #0x3fffffffffffffff
   448cc:	b.ne	448f0 <mpfr_subnormalize@@Base+0x340>  // b.any
   448d0:	sub	x0, x1, #0x1
   448d4:	cbnz	x1, 448e8 <mpfr_subnormalize@@Base+0x338>
   448d8:	b	44a08 <mpfr_subnormalize@@Base+0x458>
   448dc:	sub	x0, x0, #0x1
   448e0:	cmn	x0, #0x1
   448e4:	b.eq	44a08 <mpfr_subnormalize@@Base+0x458>  // b.none
   448e8:	ldr	x1, [x2, x0, lsl #3]
   448ec:	cbz	x1, 448dc <mpfr_subnormalize@@Base+0x32c>
   448f0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   448f4:	ldr	x1, [x0, #2512]
   448f8:	add	x0, x0, #0x9d0
   448fc:	blr	x1
   44900:	ldr	x1, [x23, x0]
   44904:	mov	x0, x20
   44908:	add	x1, x1, #0x1
   4490c:	bl	c2b0 <mpfr_setmin@plt>
   44910:	cbz	w21, 44a00 <mpfr_subnormalize@@Base+0x450>
   44914:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   44918:	ldr	x1, [x0, #2576]
   4491c:	add	x0, x0, #0xa10
   44920:	blr	x1
   44924:	add	x0, x23, x0
   44928:	ldp	x23, x24, [sp, #48]
   4492c:	ldr	w1, [x0]
   44930:	orr	w1, w1, #0x8
   44934:	str	w1, [x0]
   44938:	b	445e0 <mpfr_subnormalize@@Base+0x30>
   4493c:	mov	w21, #0x0                   	// #0
   44940:	b	44888 <mpfr_subnormalize@@Base+0x2d8>
   44944:	cmp	x26, x1
   44948:	b.eq	447bc <mpfr_subnormalize@@Base+0x20c>  // b.none
   4494c:	cmp	x2, #0x1
   44950:	b.eq	447bc <mpfr_subnormalize@@Base+0x20c>  // b.none
   44954:	mov	x0, #0x1                   	// #1
   44958:	ldr	x3, [x1, x0, lsl #3]
   4495c:	str	x3, [x26, x0, lsl #3]
   44960:	add	x0, x0, #0x1
   44964:	cmp	x2, x0
   44968:	b.ne	44958 <mpfr_subnormalize@@Base+0x3a8>  // b.any
   4496c:	b	447bc <mpfr_subnormalize@@Base+0x20c>
   44970:	sub	x6, x6, x5
   44974:	add	x5, x5, x24
   44978:	add	x0, x26, x6, lsl #3
   4497c:	lsl	x21, x6, #3
   44980:	cmp	x0, x8
   44984:	b.eq	44994 <mpfr_subnormalize@@Base+0x3e4>  // b.none
   44988:	lsl	x2, x5, #3
   4498c:	mov	x1, x8
   44990:	bl	ba10 <memcpy@plt>
   44994:	mov	x2, x21
   44998:	mov	x0, x26
   4499c:	mov	w1, #0x0                   	// #0
   449a0:	mov	w21, #0x0                   	// #0
   449a4:	bl	c110 <memset@plt>
   449a8:	b	447cc <mpfr_subnormalize@@Base+0x21c>
   449ac:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   449b0:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   449b4:	add	x2, x2, #0x98
   449b8:	add	x0, x0, #0x88
   449bc:	mov	w1, #0xa1                  	// #161
   449c0:	bl	cb40 <mpfr_assert_fail@plt>
   449c4:	b	44810 <mpfr_subnormalize@@Base+0x260>
   449c8:	cmp	w22, #0x1
   449cc:	b.eq	449e0 <mpfr_subnormalize@@Base+0x430>  // b.none
   449d0:	ldr	w2, [x20, #8]
   449d4:	add	w2, w22, w2, lsr #31
   449d8:	cmp	w2, #0x3
   449dc:	b.ne	448f0 <mpfr_subnormalize@@Base+0x340>  // b.any
   449e0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   449e4:	ldr	x1, [x0, #2512]
   449e8:	add	x0, x0, #0x9d0
   449ec:	blr	x1
   449f0:	ldr	x1, [x23, x0]
   449f4:	mov	x0, x20
   449f8:	bl	c2b0 <mpfr_setmin@plt>
   449fc:	cbnz	w21, 44a3c <mpfr_subnormalize@@Base+0x48c>
   44a00:	ldp	x23, x24, [sp, #48]
   44a04:	b	445e0 <mpfr_subnormalize@@Base+0x30>
   44a08:	cmp	w19, #0x0
   44a0c:	ccmp	w21, #0x0, #0x4, gt
   44a10:	b.gt	44a20 <mpfr_subnormalize@@Base+0x470>
   44a14:	cmp	w19, #0x0
   44a18:	ccmp	w21, #0x0, #0x0, lt  // lt = tstop
   44a1c:	b.ge	448f0 <mpfr_subnormalize@@Base+0x340>  // b.tcont
   44a20:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   44a24:	ldr	x1, [x0, #2512]
   44a28:	add	x0, x0, #0x9d0
   44a2c:	blr	x1
   44a30:	ldr	x1, [x23, x0]
   44a34:	mov	x0, x20
   44a38:	bl	c2b0 <mpfr_setmin@plt>
   44a3c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   44a40:	ldr	x1, [x0, #2576]
   44a44:	add	x0, x0, #0xa10
   44a48:	blr	x1
   44a4c:	add	x0, x23, x0
   44a50:	neg	w21, w21
   44a54:	ldp	x23, x24, [sp, #48]
   44a58:	ldr	w1, [x0]
   44a5c:	orr	w1, w1, #0x8
   44a60:	str	w1, [x0]
   44a64:	b	445e0 <mpfr_subnormalize@@Base+0x30>
   44a68:	ldur	x0, [x1, #-8]
   44a6c:	cmp	w22, #0x0
   44a70:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   44a74:	and	x9, x0, #0x8000000000000000
   44a78:	and	x0, x0, #0x7fffffffffffffff
   44a7c:	b.lt	44854 <mpfr_subnormalize@@Base+0x2a4>  // b.tstop
   44a80:	cmp	x0, #0x0
   44a84:	sub	x3, x5, #0x1
   44a88:	ccmp	x3, #0x0, #0x4, eq  // eq = none
   44a8c:	b.eq	44758 <mpfr_subnormalize@@Base+0x1a8>  // b.none
   44a90:	mov	x0, #0xfffffffffffffff8    	// #-8
   44a94:	madd	x0, x5, x0, x0
   44a98:	add	x4, x1, x0
   44a9c:	ldr	x0, [x4, x3, lsl #3]
   44aa0:	subs	x3, x3, #0x1
   44aa4:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   44aa8:	b.eq	44a9c <mpfr_subnormalize@@Base+0x4ec>  // b.none
   44aac:	mov	x24, #0x1                   	// #1
   44ab0:	b	44758 <mpfr_subnormalize@@Base+0x1a8>
   44ab4:	cmp	x26, x1
   44ab8:	b.eq	447bc <mpfr_subnormalize@@Base+0x20c>  // b.none
   44abc:	cmp	x0, x6
   44ac0:	b.ge	447bc <mpfr_subnormalize@@Base+0x20c>  // b.tcont
   44ac4:	ldr	x0, [x1, x4, lsl #3]
   44ac8:	str	x0, [x26, x4, lsl #3]
   44acc:	cmp	x4, x6
   44ad0:	add	x4, x4, #0x1
   44ad4:	b.lt	44ac4 <mpfr_subnormalize@@Base+0x514>  // b.tstop
   44ad8:	b	447bc <mpfr_subnormalize@@Base+0x20c>
   44adc:	cbz	w19, 44af8 <mpfr_subnormalize@@Base+0x548>
   44ae0:	ldr	w0, [x24]
   44ae4:	mov	w21, w19
   44ae8:	orr	w0, w0, #0x8
   44aec:	str	w0, [x24]
   44af0:	ldp	x23, x24, [sp, #48]
   44af4:	b	445e0 <mpfr_subnormalize@@Base+0x30>
   44af8:	ldp	x23, x24, [sp, #48]
   44afc:	b	445dc <mpfr_subnormalize@@Base+0x2c>
   44b00:	tst	x24, x3
   44b04:	b.ne	44b50 <mpfr_subnormalize@@Base+0x5a0>  // b.any
   44b08:	mov	w0, #0xfffffffe            	// #-2
   44b0c:	mul	w21, w21, w0
   44b10:	b	44888 <mpfr_subnormalize@@Base+0x2d8>
   44b14:	tbnz	w21, #31, 44b58 <mpfr_subnormalize@@Base+0x5a8>
   44b18:	tbnz	w19, #31, 447e8 <mpfr_subnormalize@@Base+0x238>
   44b1c:	cmp	w21, #0x0
   44b20:	b.le	447e8 <mpfr_subnormalize@@Base+0x238>
   44b24:	ldr	w0, [x20, #8]
   44b28:	tbnz	w0, #31, 44b40 <mpfr_subnormalize@@Base+0x590>
   44b2c:	mov	w1, #0x1                   	// #1
   44b30:	cmp	w0, #0x0
   44b34:	cset	w0, gt
   44b38:	cmp	w0, w1
   44b3c:	b.eq	44b6c <mpfr_subnormalize@@Base+0x5bc>  // b.none
   44b40:	mov	x0, x25
   44b44:	neg	w21, w21
   44b48:	bl	c670 <mpfr_nexttoinf@plt>
   44b4c:	b	447e8 <mpfr_subnormalize@@Base+0x238>
   44b50:	lsl	w21, w21, #1
   44b54:	b	44770 <mpfr_subnormalize@@Base+0x1c0>
   44b58:	tbz	w19, #31, 447e8 <mpfr_subnormalize@@Base+0x238>
   44b5c:	ldr	w0, [x20, #8]
   44b60:	tbnz	w0, #31, 44b6c <mpfr_subnormalize@@Base+0x5bc>
   44b64:	mov	w1, #0xffffffff            	// #-1
   44b68:	b	44b30 <mpfr_subnormalize@@Base+0x580>
   44b6c:	mov	x0, x25
   44b70:	neg	w21, w21
   44b74:	bl	c460 <mpfr_nexttozero@plt>
   44b78:	b	447e8 <mpfr_subnormalize@@Base+0x238>
   44b7c:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   44b80:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   44b84:	add	x2, x2, #0x2a0
   44b88:	add	x0, x0, #0x88
   44b8c:	mov	w1, #0xa0                  	// #160
   44b90:	bl	cb40 <mpfr_assert_fail@plt>
   44b94:	nop
   44b98:	stp	x29, x30, [sp, #-128]!
   44b9c:	mov	x29, sp
   44ba0:	stp	x19, x20, [sp, #16]
   44ba4:	mov	x19, x3
   44ba8:	mov	x20, x1
   44bac:	stp	x21, x22, [sp, #32]
   44bb0:	mov	x21, x4
   44bb4:	add	x4, x3, #0x1
   44bb8:	stp	x23, x24, [sp, #48]
   44bbc:	cmp	x4, x21
   44bc0:	mov	x22, x0
   44bc4:	mov	x24, x2
   44bc8:	b.ne	44c4c <mpfr_subnormalize@@Base+0x69c>  // b.any
   44bcc:	cbz	x3, 44c30 <mpfr_subnormalize@@Base+0x680>
   44bd0:	lsl	x21, x3, #1
   44bd4:	mov	x0, x1
   44bd8:	sub	x1, x21, #0x1
   44bdc:	bl	bcb0 <__gmpz_set_ui@plt>
   44be0:	mov	x2, x19
   44be4:	mov	x1, x20
   44be8:	mov	x0, x20
   44bec:	bl	c100 <__gmpz_mul_ui@plt>
   44bf0:	add	x1, x21, #0x1
   44bf4:	mov	x0, x24
   44bf8:	mov	x2, #0x2                   	// #2
   44bfc:	bl	c4e0 <__gmpz_ui_pow_ui@plt>
   44c00:	mov	x1, x24
   44c04:	mov	x0, x24
   44c08:	mov	x2, #0x1                   	// #1
   44c0c:	bl	c200 <__gmpz_mul_2exp@plt>
   44c10:	mov	x1, x20
   44c14:	mov	x0, x22
   44c18:	bl	bfa0 <__gmpz_set@plt>
   44c1c:	ldp	x19, x20, [sp, #16]
   44c20:	ldp	x21, x22, [sp, #32]
   44c24:	ldp	x23, x24, [sp, #48]
   44c28:	ldp	x29, x30, [sp], #128
   44c2c:	ret
   44c30:	mov	x0, x20
   44c34:	mov	x1, #0x1                   	// #1
   44c38:	bl	bcb0 <__gmpz_set_ui@plt>
   44c3c:	mov	x0, x24
   44c40:	mov	x1, #0x1                   	// #1
   44c44:	bl	bcb0 <__gmpz_set_ui@plt>
   44c48:	b	44c10 <mpfr_subnormalize@@Base+0x660>
   44c4c:	add	x19, x3, x21
   44c50:	add	x23, sp, #0x50
   44c54:	stp	x25, x26, [sp, #64]
   44c58:	add	x26, sp, #0x60
   44c5c:	lsr	x19, x19, #1
   44c60:	mov	x4, x19
   44c64:	bl	44b98 <mpfr_subnormalize@@Base+0x5e8>
   44c68:	mov	x0, x23
   44c6c:	add	x25, sp, #0x70
   44c70:	bl	bf90 <mpfr_mpz_init@plt>
   44c74:	mov	x0, x26
   44c78:	bl	bf90 <mpfr_mpz_init@plt>
   44c7c:	mov	x0, x25
   44c80:	bl	bf90 <mpfr_mpz_init@plt>
   44c84:	mov	x4, x21
   44c88:	mov	x3, x19
   44c8c:	mov	x2, x25
   44c90:	mov	x1, x26
   44c94:	mov	x0, x23
   44c98:	bl	44b98 <mpfr_subnormalize@@Base+0x5e8>
   44c9c:	mov	x2, x25
   44ca0:	mov	x1, x22
   44ca4:	mov	x0, x22
   44ca8:	bl	bff0 <__gmpz_mul@plt>
   44cac:	mov	x2, x20
   44cb0:	mov	x1, x23
   44cb4:	mov	x0, x23
   44cb8:	bl	bff0 <__gmpz_mul@plt>
   44cbc:	mov	x2, x23
   44cc0:	mov	x1, x22
   44cc4:	mov	x0, x22
   44cc8:	bl	c9c0 <__gmpz_add@plt>
   44ccc:	mov	x2, x26
   44cd0:	mov	x1, x20
   44cd4:	mov	x0, x20
   44cd8:	bl	bff0 <__gmpz_mul@plt>
   44cdc:	mov	x2, x25
   44ce0:	mov	x1, x24
   44ce4:	mov	x0, x24
   44ce8:	bl	bff0 <__gmpz_mul@plt>
   44cec:	mov	x0, x23
   44cf0:	bl	c170 <mpfr_mpz_clear@plt>
   44cf4:	mov	x0, x26
   44cf8:	bl	c170 <mpfr_mpz_clear@plt>
   44cfc:	mov	x0, x25
   44d00:	bl	c170 <mpfr_mpz_clear@plt>
   44d04:	ldp	x19, x20, [sp, #16]
   44d08:	ldp	x21, x22, [sp, #32]
   44d0c:	ldp	x23, x24, [sp, #48]
   44d10:	ldp	x25, x26, [sp, #64]
   44d14:	ldp	x29, x30, [sp], #128
   44d18:	ret
   44d1c:	nop

0000000000044d20 <mpfr_const_catalan_internal@@Base>:
   44d20:	stp	x29, x30, [sp, #-416]!
   44d24:	mov	x29, sp
   44d28:	stp	x23, x24, [sp, #48]
   44d2c:	mov	x24, x0
   44d30:	ldr	x23, [x0]
   44d34:	stp	x19, x20, [sp, #16]
   44d38:	stp	x21, x22, [sp, #32]
   44d3c:	cmp	x23, #0x1
   44d40:	mov	w22, w1
   44d44:	stp	x25, x26, [sp, #64]
   44d48:	stp	x27, x28, [sp, #80]
   44d4c:	b.eq	4505c <mpfr_const_catalan_internal@@Base+0x33c>  // b.none
   44d50:	b.le	45080 <mpfr_const_catalan_internal@@Base+0x360>
   44d54:	sub	x21, x23, #0x1
   44d58:	mov	w0, #0x40                  	// #64
   44d5c:	clz	x21, x21
   44d60:	mov	x1, #0x7fffffffffffff00    	// #9223372036854775552
   44d64:	sub	w21, w0, w21
   44d68:	add	x21, x23, w21, sxtw
   44d6c:	add	x27, x21, #0x7
   44d70:	cmp	x27, x1
   44d74:	b.ge	45098 <mpfr_const_catalan_internal@@Base+0x378>  // b.tcont
   44d78:	add	x21, x21, #0x6
   44d7c:	asr	x21, x21, #6
   44d80:	add	x21, x21, #0x1
   44d84:	add	x0, x21, x21, lsl #1
   44d88:	cmp	x0, #0x10
   44d8c:	b.gt	44f94 <mpfr_const_catalan_internal@@Base+0x274>
   44d90:	add	x0, sp, #0x120
   44d94:	stp	xzr, x0, [sp, #272]
   44d98:	mov	x2, x0
   44d9c:	add	x4, x2, x21, lsl #3
   44da0:	add	x1, x2, x21, lsl #4
   44da4:	mov	w3, #0x1                   	// #1
   44da8:	mov	x5, #0x40                  	// #64
   44dac:	mrs	x0, tpidr_el0
   44db0:	add	x20, sp, #0x80
   44db4:	stp	x0, x5, [sp, #104]
   44db8:	sub	x0, x27, #0x1
   44dbc:	add	x25, sp, #0x90
   44dc0:	str	x0, [sp, #96]
   44dc4:	mov	x0, x20
   44dc8:	str	x27, [sp, #176]
   44dcc:	add	x21, sp, #0xa0
   44dd0:	str	w3, [sp, #184]
   44dd4:	add	x28, sp, #0xb0
   44dd8:	stp	x2, x27, [sp, #200]
   44ddc:	add	x19, sp, #0xd0
   44de0:	add	x26, sp, #0xf0
   44de4:	str	w3, [sp, #216]
   44de8:	stp	x4, x27, [sp, #232]
   44dec:	str	w3, [sp, #248]
   44df0:	str	x1, [sp, #264]
   44df4:	bl	bf90 <mpfr_mpz_init@plt>
   44df8:	mov	x0, x25
   44dfc:	bl	bf90 <mpfr_mpz_init@plt>
   44e00:	mov	x0, x21
   44e04:	bl	bf90 <mpfr_mpz_init@plt>
   44e08:	mov	w2, #0x2                   	// #2
   44e0c:	mov	x1, #0x3                   	// #3
   44e10:	mov	x0, x28
   44e14:	bl	c840 <mpfr_sqrt_ui@plt>
   44e18:	mov	w3, #0x2                   	// #2
   44e1c:	mov	x1, x28
   44e20:	mov	x2, #0x2                   	// #2
   44e24:	mov	x0, x28
   44e28:	bl	c260 <mpfr_add_ui@plt>
   44e2c:	mov	x1, x28
   44e30:	mov	w2, #0x2                   	// #2
   44e34:	mov	x0, x28
   44e38:	bl	c090 <mpfr_log@plt>
   44e3c:	mov	w2, #0x2                   	// #2
   44e40:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   44e44:	ldr	x1, [x0, #2624]
   44e48:	add	x0, x0, #0xa40
   44e4c:	blr	x1
   44e50:	ldr	x1, [sp, #104]
   44e54:	add	x1, x1, x0
   44e58:	mov	x0, x19
   44e5c:	bl	c380 <mpfr_cache@plt>
   44e60:	mov	x2, x19
   44e64:	mov	x1, x28
   44e68:	mov	w3, #0x0                   	// #0
   44e6c:	mov	x0, x28
   44e70:	bl	bd50 <mpfr_mul@plt>
   44e74:	ldr	x0, [sp, #96]
   44e78:	mov	x3, #0x0                   	// #0
   44e7c:	mov	x2, x21
   44e80:	mov	x1, x25
   44e84:	asr	x4, x0, #1
   44e88:	mov	x0, x20
   44e8c:	bl	44b98 <mpfr_subnormalize@@Base+0x5e8>
   44e90:	mov	x1, x20
   44e94:	mov	x0, x20
   44e98:	mov	x2, #0x3                   	// #3
   44e9c:	bl	c100 <__gmpz_mul_ui@plt>
   44ea0:	mov	x1, x20
   44ea4:	mov	w2, #0x2                   	// #2
   44ea8:	mov	x0, x19
   44eac:	bl	c240 <mpfr_set_z@plt>
   44eb0:	mov	x1, x21
   44eb4:	mov	w2, #0x3                   	// #3
   44eb8:	mov	x0, x26
   44ebc:	bl	c240 <mpfr_set_z@plt>
   44ec0:	mov	x2, x26
   44ec4:	mov	x1, x19
   44ec8:	mov	w3, #0x0                   	// #0
   44ecc:	mov	x0, x19
   44ed0:	bl	c620 <mpfr_div@plt>
   44ed4:	mov	x2, x19
   44ed8:	mov	x1, x28
   44edc:	mov	w3, #0x0                   	// #0
   44ee0:	mov	x0, x28
   44ee4:	bl	c1a0 <mpfr_add@plt>
   44ee8:	mov	x1, x28
   44eec:	mov	x0, x28
   44ef0:	mov	w3, #0x0                   	// #0
   44ef4:	mov	x2, #0x3                   	// #3
   44ef8:	bl	c8f0 <mpfr_div_2ui@plt>
   44efc:	ldr	x1, [sp, #192]
   44f00:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   44f04:	cmp	x1, x0
   44f08:	b.le	44fac <mpfr_const_catalan_internal@@Base+0x28c>
   44f0c:	ldr	x1, [sp, #176]
   44f10:	cmp	w22, #0x0
   44f14:	ldr	x0, [sp, #200]
   44f18:	sub	x1, x1, #0x1
   44f1c:	cinc	x3, x23, eq  // eq = none
   44f20:	sub	x2, x27, #0x5
   44f24:	asr	x1, x1, #6
   44f28:	add	x1, x1, #0x1
   44f2c:	bl	c370 <mpfr_round_p@plt>
   44f30:	cbz	w0, 44fac <mpfr_const_catalan_internal@@Base+0x28c>
   44f34:	ldr	w3, [sp, #184]
   44f38:	mov	x1, x28
   44f3c:	mov	w2, w22
   44f40:	mov	x0, x24
   44f44:	bl	c6a0 <mpfr_set4@plt>
   44f48:	mov	w19, w0
   44f4c:	ldr	x1, [sp, #272]
   44f50:	cbz	x1, 44f5c <mpfr_const_catalan_internal@@Base+0x23c>
   44f54:	ldr	x0, [sp, #280]
   44f58:	bl	cc20 <mpfr_free_func@plt>
   44f5c:	mov	x0, x20
   44f60:	bl	c170 <mpfr_mpz_clear@plt>
   44f64:	mov	x0, x25
   44f68:	bl	c170 <mpfr_mpz_clear@plt>
   44f6c:	mov	x0, x21
   44f70:	bl	c170 <mpfr_mpz_clear@plt>
   44f74:	mov	w0, w19
   44f78:	ldp	x19, x20, [sp, #16]
   44f7c:	ldp	x21, x22, [sp, #32]
   44f80:	ldp	x23, x24, [sp, #48]
   44f84:	ldp	x25, x26, [sp, #64]
   44f88:	ldp	x27, x28, [sp, #80]
   44f8c:	ldp	x29, x30, [sp], #416
   44f90:	ret
   44f94:	lsl	x0, x0, #3
   44f98:	str	x0, [sp, #272]
   44f9c:	bl	ccf0 <mpfr_allocate_func@plt>
   44fa0:	mov	x2, x0
   44fa4:	str	x0, [sp, #280]
   44fa8:	b	44d9c <mpfr_const_catalan_internal@@Base+0x7c>
   44fac:	ldr	x1, [sp, #112]
   44fb0:	mov	x0, #0xfffffffffffffeff    	// #-257
   44fb4:	movk	x0, #0x7fff, lsl #48
   44fb8:	sub	x0, x0, x27
   44fbc:	cmp	x0, x1
   44fc0:	b.lt	45068 <mpfr_const_catalan_internal@@Base+0x348>  // b.tstop
   44fc4:	ldr	x0, [sp, #112]
   44fc8:	ldr	x1, [sp, #272]
   44fcc:	add	x27, x27, x0
   44fd0:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   44fd4:	cmp	x27, x0
   44fd8:	add	x0, x27, x27, lsr #63
   44fdc:	asr	x0, x0, #1
   44fe0:	str	x0, [sp, #112]
   44fe4:	b.ge	45098 <mpfr_const_catalan_internal@@Base+0x378>  // b.tcont
   44fe8:	sub	x0, x27, #0x1
   44fec:	str	x0, [sp, #96]
   44ff0:	asr	x3, x0, #6
   44ff4:	add	x3, x3, #0x1
   44ff8:	str	x3, [sp, #120]
   44ffc:	add	x2, x3, x3, lsl #1
   45000:	lsl	x2, x2, #3
   45004:	str	x2, [sp, #272]
   45008:	cbz	x1, 45048 <mpfr_const_catalan_internal@@Base+0x328>
   4500c:	ldr	x0, [sp, #280]
   45010:	bl	c1c0 <mpfr_reallocate_func@plt>
   45014:	str	x0, [sp, #280]
   45018:	ldr	x3, [sp, #120]
   4501c:	mov	w1, #0x1                   	// #1
   45020:	add	x2, x0, x3, lsl #3
   45024:	add	x3, x0, x3, lsl #4
   45028:	str	x27, [sp, #176]
   4502c:	str	w1, [sp, #184]
   45030:	stp	x0, x27, [sp, #200]
   45034:	str	w1, [sp, #216]
   45038:	stp	x2, x27, [sp, #232]
   4503c:	str	w1, [sp, #248]
   45040:	str	x3, [sp, #264]
   45044:	b	44e08 <mpfr_const_catalan_internal@@Base+0xe8>
   45048:	mov	x0, x2
   4504c:	bl	ccf0 <mpfr_allocate_func@plt>
   45050:	str	x0, [sp, #280]
   45054:	ldr	x3, [sp, #120]
   45058:	b	4501c <mpfr_const_catalan_internal@@Base+0x2fc>
   4505c:	mov	x21, x23
   45060:	mov	x27, #0x8                   	// #8
   45064:	b	44d90 <mpfr_const_catalan_internal@@Base+0x70>
   45068:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   4506c:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   45070:	add	x2, x2, #0xc08
   45074:	add	x0, x0, #0x958
   45078:	mov	w1, #0x8d                  	// #141
   4507c:	bl	cb40 <mpfr_assert_fail@plt>
   45080:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   45084:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   45088:	add	x2, x2, #0x948
   4508c:	add	x0, x0, #0x958
   45090:	mov	w1, #0x74                  	// #116
   45094:	bl	cb40 <mpfr_assert_fail@plt>
   45098:	bl	c8e0 <mpfr_abort_prec_max@plt>
   4509c:	nop

00000000000450a0 <mpfr_const_catalan@@Base>:
   450a0:	stp	x29, x30, [sp, #-16]!
   450a4:	mov	x4, x0
   450a8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   450ac:	ldr	x2, [x0, #2592]
   450b0:	add	x0, x0, #0xa20
   450b4:	blr	x2
   450b8:	mov	x29, sp
   450bc:	ldp	x29, x30, [sp], #16
   450c0:	mrs	x3, tpidr_el0
   450c4:	mov	w2, w1
   450c8:	add	x1, x3, x0
   450cc:	mov	x0, x4
   450d0:	b	c380 <mpfr_cache@plt>
   450d4:	nop
   450d8:	stp	x29, x30, [sp, #-416]!
   450dc:	mov	x29, sp
   450e0:	stp	x23, x24, [sp, #48]
   450e4:	mov	x24, x0
   450e8:	mov	w0, #0x1                   	// #1
   450ec:	str	w0, [sp, #152]
   450f0:	ldr	x0, [x1]
   450f4:	stp	x27, x28, [sp, #80]
   450f8:	mov	x28, x1
   450fc:	str	x0, [sp, #144]
   45100:	ldp	x0, x1, [x1, #16]
   45104:	stp	x19, x20, [sp, #16]
   45108:	mov	x20, x2
   4510c:	ldr	x5, [x24]
   45110:	stp	x21, x22, [sp, #32]
   45114:	mov	w19, w3
   45118:	stp	x25, x26, [sp, #64]
   4511c:	cmp	x0, #0x0
   45120:	add	x26, x5, #0xa
   45124:	stp	x0, x1, [sp, #160]
   45128:	b.le	45148 <mpfr_const_catalan@@Base+0xa8>
   4512c:	cmp	x0, #0x1
   45130:	b.eq	45148 <mpfr_const_catalan@@Base+0xa8>  // b.none
   45134:	sub	x0, x0, #0x1
   45138:	mov	w1, #0x40                  	// #64
   4513c:	clz	x0, x0
   45140:	sub	w0, w1, w0
   45144:	add	x26, x26, w0, sxtw
   45148:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   4514c:	cmp	x26, x0
   45150:	b.ge	454d0 <mpfr_const_catalan@@Base+0x430>  // b.tcont
   45154:	sub	x0, x26, #0x1
   45158:	asr	x0, x0, #6
   4515c:	add	x0, x0, #0x1
   45160:	cmp	x0, #0x10
   45164:	b.gt	45380 <mpfr_const_catalan@@Base+0x2e0>
   45168:	add	x1, sp, #0x120
   4516c:	stp	xzr, x1, [sp, #272]
   45170:	mov	x2, x1
   45174:	mrs	x21, tpidr_el0
   45178:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4517c:	ldr	x1, [x0, #2576]
   45180:	add	x0, x0, #0xa10
   45184:	blr	x1
   45188:	add	x1, sp, #0xd0
   4518c:	str	x1, [sp, #120]
   45190:	add	x1, sp, #0xf0
   45194:	str	x1, [sp, #128]
   45198:	ldr	w0, [x21, x0]
   4519c:	add	x25, sp, #0x90
   451a0:	str	w0, [sp, #100]
   451a4:	add	x27, sp, #0xb0
   451a8:	mov	x9, #0xc000000000000001    	// #-4611686018427387903
   451ac:	mov	w10, #0x1                   	// #1
   451b0:	str	x26, [sp, #176]
   451b4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   451b8:	ldr	x1, [x0, #2512]
   451bc:	add	x0, x0, #0x9d0
   451c0:	blr	x1
   451c4:	add	x3, x21, x0
   451c8:	ldr	x22, [x21, x0]
   451cc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   451d0:	ldr	x4, [x0, #2544]
   451d4:	add	x0, x0, #0x9f0
   451d8:	blr	x4
   451dc:	cmp	w19, #0x0
   451e0:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   451e4:	cset	x4, eq  // eq = none
   451e8:	str	x9, [x3]
   451ec:	str	x4, [sp, #112]
   451f0:	mov	x4, #0x40                  	// #64
   451f4:	str	x4, [sp, #136]
   451f8:	str	w10, [sp, #184]
   451fc:	str	x2, [sp, #200]
   45200:	ldr	x23, [x21, x0]
   45204:	str	x1, [x21, x0]
   45208:	mov	x1, x25
   4520c:	mov	w2, #0x0                   	// #0
   45210:	mov	x0, x27
   45214:	bl	c090 <mpfr_log@plt>
   45218:	mov	x2, x20
   4521c:	mov	x1, x27
   45220:	mov	w3, #0x0                   	// #0
   45224:	mov	x0, x27
   45228:	bl	cc60 <mpfr_div_ui@plt>
   4522c:	ldr	x3, [sp, #192]
   45230:	mov	w2, #0x0                   	// #0
   45234:	mov	x1, x27
   45238:	mov	x0, x27
   4523c:	str	x3, [sp, #104]
   45240:	bl	c750 <mpfr_exp@plt>
   45244:	ldr	x3, [sp, #104]
   45248:	add	w2, w3, #0x3
   4524c:	cmn	x3, #0x1
   45250:	b.ge	45260 <mpfr_const_catalan@@Base+0x1c0>  // b.tcont
   45254:	cmn	x3, #0x2
   45258:	cset	w2, eq  // eq = none
   4525c:	add	w2, w2, #0x1
   45260:	ldr	x0, [sp, #192]
   45264:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   45268:	ldr	x3, [x24]
   4526c:	cmp	x0, x1
   45270:	ldr	x0, [sp, #112]
   45274:	add	x3, x0, x3
   45278:	b.le	453a4 <mpfr_const_catalan@@Base+0x304>
   4527c:	ldr	x9, [sp, #176]
   45280:	sub	x2, x26, w2, uxtw
   45284:	ldr	x0, [sp, #200]
   45288:	sub	x1, x9, #0x1
   4528c:	asr	x1, x1, #6
   45290:	add	x1, x1, #0x1
   45294:	bl	c370 <mpfr_round_p@plt>
   45298:	cbz	w0, 45398 <mpfr_const_catalan@@Base+0x2f8>
   4529c:	ldr	w3, [x28, #8]
   452a0:	mov	x1, x27
   452a4:	mov	w2, w19
   452a8:	mov	x0, x24
   452ac:	bl	c6a0 <mpfr_set4@plt>
   452b0:	mov	w20, w0
   452b4:	ldr	x1, [sp, #272]
   452b8:	cbnz	x1, 45374 <mpfr_const_catalan@@Base+0x2d4>
   452bc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   452c0:	ldr	x1, [x0, #2576]
   452c4:	add	x0, x0, #0xa10
   452c8:	blr	x1
   452cc:	add	x2, x21, x0
   452d0:	ldr	w1, [sp, #100]
   452d4:	str	w1, [x21, x0]
   452d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   452dc:	ldr	x3, [x0, #2512]
   452e0:	add	x0, x0, #0x9d0
   452e4:	blr	x3
   452e8:	ldr	x1, [x24, #16]
   452ec:	str	x22, [x21, x0]
   452f0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   452f4:	ldr	x3, [x0, #2544]
   452f8:	add	x0, x0, #0x9f0
   452fc:	blr	x3
   45300:	str	x23, [x21, x0]
   45304:	cmp	x23, x1
   45308:	ccmp	x22, x1, #0x0, ge  // ge = tcont
   4530c:	b.le	45344 <mpfr_const_catalan@@Base+0x2a4>
   45310:	mov	w1, w20
   45314:	mov	w2, w19
   45318:	mov	x0, x24
   4531c:	bl	cb30 <mpfr_check_range@plt>
   45320:	mov	w20, w0
   45324:	mov	w0, w20
   45328:	ldp	x19, x20, [sp, #16]
   4532c:	ldp	x21, x22, [sp, #32]
   45330:	ldp	x23, x24, [sp, #48]
   45334:	ldp	x25, x26, [sp, #64]
   45338:	ldp	x27, x28, [sp, #80]
   4533c:	ldp	x29, x30, [sp], #416
   45340:	ret
   45344:	cbz	w20, 45324 <mpfr_const_catalan@@Base+0x284>
   45348:	ldr	w0, [sp, #100]
   4534c:	ldp	x23, x24, [sp, #48]
   45350:	orr	w21, w0, #0x8
   45354:	str	w21, [x2]
   45358:	mov	w0, w20
   4535c:	ldp	x19, x20, [sp, #16]
   45360:	ldp	x21, x22, [sp, #32]
   45364:	ldp	x25, x26, [sp, #64]
   45368:	ldp	x27, x28, [sp, #80]
   4536c:	ldp	x29, x30, [sp], #416
   45370:	ret
   45374:	ldr	x0, [sp, #280]
   45378:	bl	cc20 <mpfr_free_func@plt>
   4537c:	b	452bc <mpfr_const_catalan@@Base+0x21c>
   45380:	lsl	x0, x0, #3
   45384:	str	x0, [sp, #272]
   45388:	bl	ccf0 <mpfr_allocate_func@plt>
   4538c:	mov	x2, x0
   45390:	str	x0, [sp, #280]
   45394:	b	45174 <mpfr_const_catalan@@Base+0xd4>
   45398:	ldr	x3, [x24]
   4539c:	ldr	x0, [sp, #112]
   453a0:	add	x3, x0, x3
   453a4:	ldr	x0, [sp, #120]
   453a8:	mov	x1, x3
   453ac:	bl	ca80 <mpfr_init2@plt>
   453b0:	ldr	x1, [x28]
   453b4:	ldr	x0, [sp, #128]
   453b8:	bl	ca80 <mpfr_init2@plt>
   453bc:	ldr	w3, [sp, #184]
   453c0:	mov	x1, x27
   453c4:	ldr	x0, [sp, #120]
   453c8:	mov	w2, #0x0                   	// #0
   453cc:	bl	c6a0 <mpfr_set4@plt>
   453d0:	ldp	x1, x0, [sp, #120]
   453d4:	mov	x2, x20
   453d8:	mov	w3, #0x0                   	// #0
   453dc:	bl	bf70 <mpfr_pow_ui@plt>
   453e0:	cbz	w0, 45478 <mpfr_const_catalan@@Base+0x3d8>
   453e4:	ldr	x0, [sp, #128]
   453e8:	bl	c070 <mpfr_clear@plt>
   453ec:	ldr	x0, [sp, #120]
   453f0:	bl	c070 <mpfr_clear@plt>
   453f4:	ldr	x1, [sp, #136]
   453f8:	mov	x0, #0xfffffffffffffeff    	// #-257
   453fc:	movk	x0, #0x7fff, lsl #48
   45400:	sub	x0, x0, x26
   45404:	cmp	x0, x1
   45408:	b.lt	454b8 <mpfr_const_catalan@@Base+0x418>  // b.tstop
   4540c:	ldr	x0, [sp, #136]
   45410:	ldr	x1, [sp, #272]
   45414:	add	x26, x26, x0
   45418:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   4541c:	cmp	x26, x0
   45420:	add	x0, x26, x26, lsr #63
   45424:	asr	x0, x0, #1
   45428:	str	x0, [sp, #136]
   4542c:	b.ge	454d0 <mpfr_const_catalan@@Base+0x430>  // b.tcont
   45430:	sub	x2, x26, #0x1
   45434:	asr	x2, x2, #6
   45438:	add	x2, x2, #0x1
   4543c:	lsl	x2, x2, #3
   45440:	str	x2, [sp, #272]
   45444:	cbz	x1, 45468 <mpfr_const_catalan@@Base+0x3c8>
   45448:	ldr	x0, [sp, #280]
   4544c:	bl	c1c0 <mpfr_reallocate_func@plt>
   45450:	str	x0, [sp, #280]
   45454:	mov	w1, #0x1                   	// #1
   45458:	str	x26, [sp, #176]
   4545c:	str	w1, [sp, #184]
   45460:	str	x0, [sp, #200]
   45464:	b	45208 <mpfr_const_catalan@@Base+0x168>
   45468:	mov	x0, x2
   4546c:	bl	ccf0 <mpfr_allocate_func@plt>
   45470:	str	x0, [sp, #280]
   45474:	b	45454 <mpfr_const_catalan@@Base+0x3b4>
   45478:	ldr	x0, [sp, #128]
   4547c:	mov	x1, x25
   45480:	bl	ca60 <mpfr_equal_p@plt>
   45484:	cbz	w0, 453e4 <mpfr_const_catalan@@Base+0x344>
   45488:	ldr	w3, [x28, #8]
   4548c:	mov	w2, w19
   45490:	ldr	x25, [sp, #120]
   45494:	mov	x0, x24
   45498:	mov	x1, x25
   4549c:	bl	c6a0 <mpfr_set4@plt>
   454a0:	mov	w20, w0
   454a4:	ldr	x0, [sp, #128]
   454a8:	bl	c070 <mpfr_clear@plt>
   454ac:	mov	x0, x25
   454b0:	bl	c070 <mpfr_clear@plt>
   454b4:	b	452b4 <mpfr_const_catalan@@Base+0x214>
   454b8:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   454bc:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   454c0:	add	x2, x2, #0xeb0
   454c4:	add	x0, x0, #0x968
   454c8:	mov	w1, #0x11d                 	// #285
   454cc:	bl	cb40 <mpfr_assert_fail@plt>
   454d0:	bl	c8e0 <mpfr_abort_prec_max@plt>
   454d4:	nop

00000000000454d8 <mpfr_rootn_ui@@Base>:
   454d8:	stp	x29, x30, [sp, #-128]!
   454dc:	cmp	x2, #0x1
   454e0:	mov	x29, sp
   454e4:	stp	x19, x20, [sp, #16]
   454e8:	mov	x19, x2
   454ec:	mov	x20, x1
   454f0:	stp	x21, x22, [sp, #32]
   454f4:	mov	w22, w3
   454f8:	mov	x21, x0
   454fc:	stp	x27, x28, [sp, #80]
   45500:	b.ls	458e4 <mpfr_rootn_ui@@Base+0x40c>  // b.plast
   45504:	ldr	x0, [x20, #16]
   45508:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4550c:	cmp	x0, x1
   45510:	b.le	45934 <mpfr_rootn_ui@@Base+0x45c>
   45514:	ldr	w0, [x20, #8]
   45518:	tbnz	w0, #31, 4596c <mpfr_rootn_ui@@Base+0x494>
   4551c:	adrp	x1, 7f000 <__gmpfr_l2b@@Base+0x200>
   45520:	mov	x0, x20
   45524:	ldr	x1, [x1, #3928]
   45528:	bl	c9b0 <mpfr_cmpabs@plt>
   4552c:	cbz	w0, 458b4 <mpfr_rootn_ui@@Base+0x3dc>
   45530:	cmp	x19, #0x64
   45534:	b.hi	457a8 <mpfr_rootn_ui@@Base+0x2d0>  // b.pmore
   45538:	stp	x23, x24, [sp, #48]
   4553c:	mrs	x23, tpidr_el0
   45540:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45544:	ldr	x1, [x0, #2576]
   45548:	add	x0, x0, #0xa10
   4554c:	blr	x1
   45550:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   45554:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   45558:	ldr	w0, [x23, x0]
   4555c:	add	x24, sp, #0x70
   45560:	str	w0, [sp, #100]
   45564:	stp	x25, x26, [sp, #64]
   45568:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4556c:	ldr	x2, [x0, #2512]
   45570:	add	x0, x0, #0x9d0
   45574:	blr	x2
   45578:	add	x2, x23, x0
   4557c:	ldr	x25, [x23, x0]
   45580:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45584:	ldr	x3, [x0, #2544]
   45588:	add	x0, x0, #0x9f0
   4558c:	blr	x3
   45590:	str	x4, [x2]
   45594:	ldr	x26, [x23, x0]
   45598:	str	x1, [x23, x0]
   4559c:	mov	x0, x24
   455a0:	bl	bf90 <mpfr_mpz_init@plt>
   455a4:	mov	x1, x20
   455a8:	mov	x0, x24
   455ac:	bl	cac0 <mpfr_get_z_2exp@plt>
   455b0:	ldr	w27, [x20, #8]
   455b4:	mov	x20, x0
   455b8:	tbz	w27, #31, 455c8 <mpfr_rootn_ui@@Base+0xf0>
   455bc:	ldr	w0, [sp, #116]
   455c0:	neg	w0, w0
   455c4:	str	w0, [sp, #116]
   455c8:	sdiv	x28, x20, x19
   455cc:	msub	x28, x28, x19, x20
   455d0:	mov	x2, x28
   455d4:	tbz	x28, #63, 455e0 <mpfr_rootn_ui@@Base+0x108>
   455d8:	add	x28, x28, x19
   455dc:	mov	x2, x28
   455e0:	ldr	w1, [sp, #116]
   455e4:	mov	x0, #0xfffffffffffffff8    	// #-8
   455e8:	ldr	x4, [sp, #120]
   455ec:	cmp	w1, #0x0
   455f0:	cneg	w1, w1, lt  // lt = tstop
   455f4:	cmp	w22, #0x0
   455f8:	ldr	x5, [x21]
   455fc:	add	x0, x0, w1, sxtw #3
   45600:	sbfiz	x1, x1, #6, #32
   45604:	cinc	x5, x5, eq  // eq = none
   45608:	ldr	x4, [x4, x0]
   4560c:	mul	x6, x5, x19
   45610:	clz	x4, x4
   45614:	sub	x0, x1, x4
   45618:	add	x0, x0, x28
   4561c:	cmp	x0, x6
   45620:	b.cs	4563c <mpfr_rootn_ui@@Base+0x164>  // b.hs, b.nlast
   45624:	sub	x2, x4, x28
   45628:	sub	x1, x6, x1
   4562c:	add	x2, x2, x1
   45630:	udiv	x2, x2, x19
   45634:	madd	x2, x2, x19, x28
   45638:	mov	x28, x2
   4563c:	mov	x1, x24
   45640:	mov	x0, x24
   45644:	str	x5, [sp, #104]
   45648:	bl	c200 <__gmpz_mul_2exp@plt>
   4564c:	mov	x2, x19
   45650:	mov	x1, x24
   45654:	mov	x0, x24
   45658:	bl	c2e0 <__gmpz_root@plt>
   4565c:	ldr	w1, [sp, #116]
   45660:	mov	x2, #0xfffffffffffffff8    	// #-8
   45664:	ldr	x4, [sp, #120]
   45668:	cmp	w1, #0x0
   4566c:	cneg	w1, w1, lt  // lt = tstop
   45670:	cmp	w0, #0x0
   45674:	ldr	x5, [sp, #104]
   45678:	add	x2, x2, w1, sxtw #3
   4567c:	sbfiz	x1, x1, #6, #32
   45680:	sub	x20, x20, x28
   45684:	cset	w28, eq  // eq = none
   45688:	ldr	x2, [x4, x2]
   4568c:	clz	x2, x2
   45690:	sub	x2, x1, x2
   45694:	sub	x2, x2, x5
   45698:	cmp	x2, #0x0
   4569c:	b.le	456b8 <mpfr_rootn_ui@@Base+0x1e0>
   456a0:	mov	w28, #0x1                   	// #1
   456a4:	cbnz	w0, 45828 <mpfr_rootn_ui@@Base+0x350>
   456a8:	madd	x20, x2, x19, x20
   456ac:	mov	x1, x24
   456b0:	mov	x0, x24
   456b4:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   456b8:	cbz	w28, 456f0 <mpfr_rootn_ui@@Base+0x218>
   456bc:	tbnz	w27, #31, 45858 <mpfr_rootn_ui@@Base+0x380>
   456c0:	sub	w0, w22, #0x2
   456c4:	tst	w0, #0xfffffffd
   456c8:	b.eq	456e0 <mpfr_rootn_ui@@Base+0x208>  // b.none
   456cc:	cbnz	w22, 45870 <mpfr_rootn_ui@@Base+0x398>
   456d0:	mov	x0, x24
   456d4:	mov	x1, #0x0                   	// #0
   456d8:	bl	bfe0 <__gmpz_tstbit@plt>
   456dc:	cbz	w0, 45870 <mpfr_rootn_ui@@Base+0x398>
   456e0:	mov	x1, x24
   456e4:	mov	x0, x24
   456e8:	mov	x2, #0x1                   	// #1
   456ec:	bl	c360 <__gmpz_add_ui@plt>
   456f0:	mov	x1, x24
   456f4:	mov	x0, x21
   456f8:	mov	w2, #0x0                   	// #0
   456fc:	bl	c240 <mpfr_set_z@plt>
   45700:	sdiv	x19, x20, x19
   45704:	add	w28, w28, w0
   45708:	ldr	x0, [x21, #16]
   4570c:	add	x19, x0, x19
   45710:	str	x19, [x21, #16]
   45714:	tbnz	w27, #31, 458a0 <mpfr_rootn_ui@@Base+0x3c8>
   45718:	mov	x0, x24
   4571c:	bl	c170 <mpfr_mpz_clear@plt>
   45720:	ldr	x1, [x21, #16]
   45724:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45728:	ldr	x2, [x0, #2576]
   4572c:	add	x0, x0, #0xa10
   45730:	blr	x2
   45734:	ldr	w2, [sp, #100]
   45738:	str	w2, [x23, x0]
   4573c:	add	x2, x23, x0
   45740:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45744:	ldr	x3, [x0, #2512]
   45748:	add	x0, x0, #0x9d0
   4574c:	blr	x3
   45750:	str	x25, [x23, x0]
   45754:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45758:	ldr	x3, [x0, #2544]
   4575c:	add	x0, x0, #0x9f0
   45760:	blr	x3
   45764:	str	x26, [x23, x0]
   45768:	cmp	x26, x1
   4576c:	ccmp	x25, x1, #0x0, ge  // ge = tcont
   45770:	b.le	457d8 <mpfr_rootn_ui@@Base+0x300>
   45774:	mov	w2, w22
   45778:	mov	w1, w28
   4577c:	mov	x0, x21
   45780:	bl	cb30 <mpfr_check_range@plt>
   45784:	mov	w28, w0
   45788:	mov	w0, w28
   4578c:	ldp	x19, x20, [sp, #16]
   45790:	ldp	x21, x22, [sp, #32]
   45794:	ldp	x23, x24, [sp, #48]
   45798:	ldp	x25, x26, [sp, #64]
   4579c:	ldp	x27, x28, [sp, #80]
   457a0:	ldp	x29, x30, [sp], #128
   457a4:	ret
   457a8:	mov	w3, w22
   457ac:	mov	x2, x19
   457b0:	mov	x1, x20
   457b4:	mov	x0, x21
   457b8:	bl	450d8 <mpfr_const_catalan@@Base+0x38>
   457bc:	mov	w28, w0
   457c0:	mov	w0, w28
   457c4:	ldp	x19, x20, [sp, #16]
   457c8:	ldp	x21, x22, [sp, #32]
   457cc:	ldp	x27, x28, [sp, #80]
   457d0:	ldp	x29, x30, [sp], #128
   457d4:	ret
   457d8:	cbz	w28, 45808 <mpfr_rootn_ui@@Base+0x330>
   457dc:	ldr	w0, [sp, #100]
   457e0:	ldp	x25, x26, [sp, #64]
   457e4:	orr	w24, w0, #0x8
   457e8:	str	w24, [x2]
   457ec:	mov	w0, w28
   457f0:	ldp	x19, x20, [sp, #16]
   457f4:	ldp	x21, x22, [sp, #32]
   457f8:	ldp	x23, x24, [sp, #48]
   457fc:	ldp	x27, x28, [sp, #80]
   45800:	ldp	x29, x30, [sp], #128
   45804:	ret
   45808:	mov	w0, w28
   4580c:	ldp	x19, x20, [sp, #16]
   45810:	ldp	x21, x22, [sp, #32]
   45814:	ldp	x23, x24, [sp, #48]
   45818:	ldp	x25, x26, [sp, #64]
   4581c:	ldp	x27, x28, [sp, #80]
   45820:	ldp	x29, x30, [sp], #128
   45824:	ret
   45828:	mov	x0, x24
   4582c:	mov	x1, #0x0                   	// #0
   45830:	str	x2, [sp, #104]
   45834:	bl	ba90 <__gmpz_scan1@plt>
   45838:	ldr	x2, [sp, #104]
   4583c:	mov	x1, x24
   45840:	cmp	x0, x2
   45844:	mov	x0, x24
   45848:	madd	x20, x2, x19, x20
   4584c:	cset	w28, lt  // lt = tstop
   45850:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   45854:	b	456b8 <mpfr_rootn_ui@@Base+0x1e0>
   45858:	cmp	w22, #0x2
   4585c:	b.eq	45878 <mpfr_rootn_ui@@Base+0x3a0>  // b.none
   45860:	cmp	w22, #0x3
   45864:	b.ne	456c0 <mpfr_rootn_ui@@Base+0x1e8>  // b.any
   45868:	mov	w22, #0x2                   	// #2
   4586c:	b	456e0 <mpfr_rootn_ui@@Base+0x208>
   45870:	mov	w28, #0xffffffff            	// #-1
   45874:	b	456f0 <mpfr_rootn_ui@@Base+0x218>
   45878:	mov	x1, x24
   4587c:	mov	x0, x21
   45880:	mov	w2, #0x0                   	// #0
   45884:	bl	c240 <mpfr_set_z@plt>
   45888:	sdiv	x19, x20, x19
   4588c:	sub	w28, w0, #0x1
   45890:	ldr	x20, [x21, #16]
   45894:	mov	w22, #0x3                   	// #3
   45898:	add	x19, x20, x19
   4589c:	str	x19, [x21, #16]
   458a0:	ldr	w0, [x21, #8]
   458a4:	neg	w28, w28
   458a8:	neg	w0, w0
   458ac:	str	w0, [x21, #8]
   458b0:	b	45718 <mpfr_rootn_ui@@Base+0x240>
   458b4:	ldr	w3, [x20, #8]
   458b8:	mov	w2, w22
   458bc:	mov	x1, x20
   458c0:	mov	x0, x21
   458c4:	bl	c6a0 <mpfr_set4@plt>
   458c8:	mov	w28, w0
   458cc:	mov	w0, w28
   458d0:	ldp	x19, x20, [sp, #16]
   458d4:	ldp	x21, x22, [sp, #32]
   458d8:	ldp	x27, x28, [sp, #80]
   458dc:	ldp	x29, x30, [sp], #128
   458e0:	ret
   458e4:	cbnz	x2, 45998 <mpfr_rootn_ui@@Base+0x4c0>
   458e8:	mrs	x1, tpidr_el0
   458ec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   458f0:	ldr	x2, [x0, #2576]
   458f4:	add	x0, x0, #0xa10
   458f8:	blr	x2
   458fc:	add	x0, x1, x0
   45900:	mov	x1, #0x2                   	// #2
   45904:	movk	x1, #0x8000, lsl #48
   45908:	str	x1, [x21, #16]
   4590c:	mov	w28, #0x0                   	// #0
   45910:	ldr	w1, [x0]
   45914:	ldp	x19, x20, [sp, #16]
   45918:	orr	w1, w1, #0x4
   4591c:	str	w1, [x0]
   45920:	mov	w0, w28
   45924:	ldp	x21, x22, [sp, #32]
   45928:	ldp	x27, x28, [sp, #80]
   4592c:	ldp	x29, x30, [sp], #128
   45930:	ret
   45934:	mov	x2, #0x2                   	// #2
   45938:	movk	x2, #0x8000, lsl #48
   4593c:	cmp	x0, x2
   45940:	b.eq	458e8 <mpfr_rootn_ui@@Base+0x410>  // b.none
   45944:	cmp	x0, x1
   45948:	b.ne	45974 <mpfr_rootn_ui@@Base+0x49c>  // b.any
   4594c:	ldr	w0, [x20, #8]
   45950:	tbz	w0, #31, 45958 <mpfr_rootn_ui@@Base+0x480>
   45954:	tbz	w19, #0, 458e8 <mpfr_rootn_ui@@Base+0x410>
   45958:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4595c:	mov	w28, #0x0                   	// #0
   45960:	str	w0, [x21, #8]
   45964:	str	x1, [x21, #16]
   45968:	b	457c0 <mpfr_rootn_ui@@Base+0x2e8>
   4596c:	tbnz	w2, #0, 4551c <mpfr_rootn_ui@@Base+0x44>
   45970:	b	458e8 <mpfr_rootn_ui@@Base+0x410>
   45974:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   45978:	str	x0, [x21, #16]
   4597c:	ldr	w0, [x20, #8]
   45980:	cmp	w0, #0x0
   45984:	b.le	459ac <mpfr_rootn_ui@@Base+0x4d4>
   45988:	mov	w0, #0x1                   	// #1
   4598c:	mov	w28, #0x0                   	// #0
   45990:	str	w0, [x21, #8]
   45994:	b	457c0 <mpfr_rootn_ui@@Base+0x2e8>
   45998:	mov	w2, w3
   4599c:	ldr	w3, [x1, #8]
   459a0:	bl	c6a0 <mpfr_set4@plt>
   459a4:	mov	w28, w0
   459a8:	b	457c0 <mpfr_rootn_ui@@Base+0x2e8>
   459ac:	tbz	w19, #0, 45988 <mpfr_rootn_ui@@Base+0x4b0>
   459b0:	mov	w0, #0xffffffff            	// #-1
   459b4:	mov	w28, #0x0                   	// #0
   459b8:	str	w0, [x21, #8]
   459bc:	b	457c0 <mpfr_rootn_ui@@Base+0x2e8>

00000000000459c0 <mpfr_root@@Base>:
   459c0:	cmp	x2, #0x1
   459c4:	mov	x6, x0
   459c8:	b.ls	459e0 <mpfr_root@@Base+0x20>  // b.plast
   459cc:	ldr	x4, [x1, #16]
   459d0:	mov	x7, #0x8000000000000001    	// #-9223372036854775807
   459d4:	cmp	x4, x7
   459d8:	b.eq	45a28 <mpfr_root@@Base+0x68>  // b.none
   459dc:	b	c6b0 <mpfr_rootn_ui@plt>
   459e0:	cbnz	x2, 45a3c <mpfr_root@@Base+0x7c>
   459e4:	mrs	x1, tpidr_el0
   459e8:	stp	x29, x30, [sp, #-16]!
   459ec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   459f0:	ldr	x2, [x0, #2576]
   459f4:	add	x0, x0, #0xa10
   459f8:	blr	x2
   459fc:	add	x0, x1, x0
   45a00:	mov	x1, #0x2                   	// #2
   45a04:	mov	x29, sp
   45a08:	movk	x1, #0x8000, lsl #48
   45a0c:	str	x1, [x6, #16]
   45a10:	ldr	w1, [x0]
   45a14:	orr	w1, w1, #0x4
   45a18:	str	w1, [x0]
   45a1c:	mov	w0, #0x0                   	// #0
   45a20:	ldp	x29, x30, [sp], #16
   45a24:	ret
   45a28:	ldr	w0, [x1, #8]
   45a2c:	str	w0, [x6, #8]
   45a30:	mov	w0, #0x0                   	// #0
   45a34:	str	x4, [x6, #16]
   45a38:	ret
   45a3c:	mov	w2, w3
   45a40:	ldr	w3, [x1, #8]
   45a44:	b	c6a0 <mpfr_set4@plt>

0000000000045a48 <mpfr_sec@@Base>:
   45a48:	stp	x29, x30, [sp, #-144]!
   45a4c:	mov	x29, sp
   45a50:	stp	x21, x22, [sp, #32]
   45a54:	mov	x22, x1
   45a58:	mov	w21, w2
   45a5c:	stp	x19, x20, [sp, #16]
   45a60:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   45a64:	mov	x20, x0
   45a68:	ldr	x2, [x22, #16]
   45a6c:	cmp	x2, x1
   45a70:	b.le	45da0 <mpfr_sec@@Base+0x358>
   45a74:	stp	x25, x26, [sp, #64]
   45a78:	mrs	x26, tpidr_el0
   45a7c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45a80:	ldr	x1, [x0, #2576]
   45a84:	add	x0, x0, #0xa10
   45a88:	blr	x1
   45a8c:	add	x6, x26, x0
   45a90:	stp	x23, x24, [sp, #48]
   45a94:	ldr	w0, [x26, x0]
   45a98:	str	w0, [sp, #100]
   45a9c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   45aa0:	stp	x27, x28, [sp, #80]
   45aa4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   45aa8:	neg	x2, x2, lsl #1
   45aac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45ab0:	ldr	x4, [x0, #2512]
   45ab4:	add	x0, x0, #0x9d0
   45ab8:	blr	x4
   45abc:	add	x28, x26, x0
   45ac0:	ldr	x25, [x26, x0]
   45ac4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45ac8:	ldr	x4, [x0, #2544]
   45acc:	add	x0, x0, #0x9f0
   45ad0:	blr	x4
   45ad4:	add	x24, x26, x0
   45ad8:	cmp	x2, #0x0
   45adc:	ldr	x23, [x20]
   45ae0:	str	x3, [x28]
   45ae4:	ldr	x27, [x26, x0]
   45ae8:	str	x1, [x24]
   45aec:	b.le	45afc <mpfr_sec@@Base+0xb4>
   45af0:	add	x0, x23, #0x1
   45af4:	cmp	x2, x0
   45af8:	b.hi	45c6c <mpfr_sec@@Base+0x224>  // b.pmore
   45afc:	cmp	x23, #0x1
   45b00:	b.eq	45dc8 <mpfr_sec@@Base+0x380>  // b.none
   45b04:	b.le	45e28 <mpfr_sec@@Base+0x3e0>
   45b08:	sub	x0, x23, #0x1
   45b0c:	mov	w19, #0x40                  	// #64
   45b10:	clz	x0, x0
   45b14:	sub	w19, w19, w0
   45b18:	add	x19, x23, w19, sxtw
   45b1c:	mov	x0, #0x40                  	// #64
   45b20:	add	x19, x19, #0x3
   45b24:	add	x28, sp, #0x70
   45b28:	mov	x1, x19
   45b2c:	str	x0, [sp, #104]
   45b30:	mov	x0, x28
   45b34:	bl	ca80 <mpfr_init2@plt>
   45b38:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45b3c:	ldr	x1, [x0, #2576]
   45b40:	add	x0, x0, #0xa10
   45b44:	blr	x1
   45b48:	add	x24, x26, x0
   45b4c:	mov	x1, x22
   45b50:	mov	w2, #0x1                   	// #1
   45b54:	str	wzr, [x26, x0]
   45b58:	mov	x0, x28
   45b5c:	bl	c430 <mpfr_cos@plt>
   45b60:	ldr	w0, [x24]
   45b64:	tbnz	w0, #1, 45d2c <mpfr_sec@@Base+0x2e4>
   45b68:	mov	x1, #0x1                   	// #1
   45b6c:	mov	x2, x28
   45b70:	mov	x0, x28
   45b74:	mov	w3, #0x0                   	// #0
   45b78:	bl	c2f0 <mpfr_ui_div@plt>
   45b7c:	ldr	x0, [sp, #128]
   45b80:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   45b84:	cmp	x0, x1
   45b88:	b.le	45cf0 <mpfr_sec@@Base+0x2a8>
   45b8c:	ldr	x1, [sp, #112]
   45b90:	cmp	w21, #0x0
   45b94:	ldr	x0, [sp, #136]
   45b98:	sub	x1, x1, #0x1
   45b9c:	cinc	x3, x23, eq  // eq = none
   45ba0:	sub	x2, x19, #0x2
   45ba4:	asr	x1, x1, #6
   45ba8:	add	x1, x1, #0x1
   45bac:	bl	c370 <mpfr_round_p@plt>
   45bb0:	cbz	w0, 45cf0 <mpfr_sec@@Base+0x2a8>
   45bb4:	ldr	w3, [sp, #120]
   45bb8:	mov	w2, w21
   45bbc:	mov	x1, x28
   45bc0:	mov	x0, x20
   45bc4:	bl	c6a0 <mpfr_set4@plt>
   45bc8:	mov	w19, w0
   45bcc:	mov	x0, x28
   45bd0:	bl	c070 <mpfr_clear@plt>
   45bd4:	ldr	w0, [sp, #100]
   45bd8:	ldr	x1, [x20, #16]
   45bdc:	str	w0, [x24]
   45be0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45be4:	ldr	x2, [x0, #2512]
   45be8:	add	x0, x0, #0x9d0
   45bec:	blr	x2
   45bf0:	str	x25, [x26, x0]
   45bf4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45bf8:	ldr	x2, [x0, #2544]
   45bfc:	add	x0, x0, #0x9f0
   45c00:	blr	x2
   45c04:	str	x27, [x26, x0]
   45c08:	cmp	x27, x1
   45c0c:	ccmp	x25, x1, #0x0, ge  // ge = tcont
   45c10:	b.le	45c48 <mpfr_sec@@Base+0x200>
   45c14:	mov	w1, w19
   45c18:	mov	w2, w21
   45c1c:	mov	x0, x20
   45c20:	bl	cb30 <mpfr_check_range@plt>
   45c24:	ldp	x23, x24, [sp, #48]
   45c28:	mov	w19, w0
   45c2c:	ldp	x25, x26, [sp, #64]
   45c30:	ldp	x27, x28, [sp, #80]
   45c34:	mov	w0, w19
   45c38:	ldp	x19, x20, [sp, #16]
   45c3c:	ldp	x21, x22, [sp, #32]
   45c40:	ldp	x29, x30, [sp], #144
   45c44:	ret
   45c48:	cbnz	w19, 45cb4 <mpfr_sec@@Base+0x26c>
   45c4c:	mov	w0, w19
   45c50:	ldp	x19, x20, [sp, #16]
   45c54:	ldp	x21, x22, [sp, #32]
   45c58:	ldp	x23, x24, [sp, #48]
   45c5c:	ldp	x25, x26, [sp, #64]
   45c60:	ldp	x27, x28, [sp, #80]
   45c64:	ldp	x29, x30, [sp], #144
   45c68:	ret
   45c6c:	adrp	x1, 7f000 <__gmpfr_l2b@@Base+0x200>
   45c70:	mov	w4, w21
   45c74:	mov	x0, x20
   45c78:	mov	w3, #0x1                   	// #1
   45c7c:	ldr	x1, [x1, #3928]
   45c80:	str	x6, [sp, #104]
   45c84:	bl	c540 <mpfr_round_near_x@plt>
   45c88:	mov	w19, w0
   45c8c:	ldr	x6, [sp, #104]
   45c90:	cbz	w0, 45e08 <mpfr_sec@@Base+0x3c0>
   45c94:	ldr	x0, [x20, #16]
   45c98:	str	x27, [x24]
   45c9c:	ldr	w1, [sp, #100]
   45ca0:	str	w1, [x6]
   45ca4:	cmp	x27, x0
   45ca8:	str	x25, [x28]
   45cac:	ccmp	x25, x0, #0x0, ge  // ge = tcont
   45cb0:	b.gt	45c14 <mpfr_sec@@Base+0x1cc>
   45cb4:	ldr	w0, [sp, #100]
   45cb8:	ldp	x23, x24, [sp, #48]
   45cbc:	orr	w25, w0, #0x8
   45cc0:	ldp	x27, x28, [sp, #80]
   45cc4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45cc8:	ldr	x1, [x0, #2576]
   45ccc:	add	x0, x0, #0xa10
   45cd0:	blr	x1
   45cd4:	str	w25, [x26, x0]
   45cd8:	mov	w0, w19
   45cdc:	ldp	x19, x20, [sp, #16]
   45ce0:	ldp	x21, x22, [sp, #32]
   45ce4:	ldp	x25, x26, [sp, #64]
   45ce8:	ldp	x29, x30, [sp], #144
   45cec:	ret
   45cf0:	ldr	x1, [sp, #104]
   45cf4:	mov	x0, #0xfffffffffffffeff    	// #-257
   45cf8:	movk	x0, #0x7fff, lsl #48
   45cfc:	sub	x0, x0, x19
   45d00:	cmp	x0, x1
   45d04:	b.lt	45e10 <mpfr_sec@@Base+0x3c8>  // b.tstop
   45d08:	ldr	x0, [sp, #104]
   45d0c:	add	x19, x19, x0
   45d10:	mov	x0, x28
   45d14:	mov	x1, x19
   45d18:	add	x2, x19, x19, lsr #63
   45d1c:	asr	x2, x2, #1
   45d20:	str	x2, [sp, #104]
   45d24:	bl	bed0 <mpfr_set_prec@plt>
   45d28:	b	45b38 <mpfr_sec@@Base+0xf0>
   45d2c:	ldr	w19, [sp, #120]
   45d30:	mov	x0, x28
   45d34:	bl	c070 <mpfr_clear@plt>
   45d38:	ldr	w0, [sp, #100]
   45d3c:	mov	w2, w19
   45d40:	str	w0, [x24]
   45d44:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45d48:	ldr	x1, [x0, #2512]
   45d4c:	add	x0, x0, #0x9d0
   45d50:	blr	x1
   45d54:	str	x25, [x26, x0]
   45d58:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45d5c:	ldr	x1, [x0, #2544]
   45d60:	add	x0, x0, #0x9f0
   45d64:	blr	x1
   45d68:	str	x27, [x26, x0]
   45d6c:	cmp	w21, #0x0
   45d70:	mov	x0, x20
   45d74:	csinc	w1, w21, wzr, ne  // ne = any
   45d78:	bl	c3c0 <mpfr_underflow@plt>
   45d7c:	mov	w19, w0
   45d80:	mov	w0, w19
   45d84:	ldp	x19, x20, [sp, #16]
   45d88:	ldp	x21, x22, [sp, #32]
   45d8c:	ldp	x23, x24, [sp, #48]
   45d90:	ldp	x25, x26, [sp, #64]
   45d94:	ldp	x27, x28, [sp, #80]
   45d98:	ldp	x29, x30, [sp], #144
   45d9c:	ret
   45da0:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
   45da4:	add	x2, x2, x1
   45da8:	cmp	x2, #0x1
   45dac:	b.ls	45dd0 <mpfr_sec@@Base+0x388>  // b.plast
   45db0:	mov	w3, w21
   45db4:	mov	x2, #0x0                   	// #0
   45db8:	mov	x1, #0x1                   	// #1
   45dbc:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   45dc0:	mov	w19, w0
   45dc4:	b	45c34 <mpfr_sec@@Base+0x1ec>
   45dc8:	mov	x19, x23
   45dcc:	b	45b1c <mpfr_sec@@Base+0xd4>
   45dd0:	mrs	x1, tpidr_el0
   45dd4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45dd8:	ldr	x2, [x0, #2576]
   45ddc:	add	x0, x0, #0xa10
   45de0:	blr	x2
   45de4:	add	x0, x1, x0
   45de8:	mov	x1, #0x2                   	// #2
   45dec:	movk	x1, #0x8000, lsl #48
   45df0:	str	x1, [x20, #16]
   45df4:	mov	w19, #0x0                   	// #0
   45df8:	ldr	w1, [x0]
   45dfc:	orr	w1, w1, #0x4
   45e00:	str	w1, [x0]
   45e04:	b	45c34 <mpfr_sec@@Base+0x1ec>
   45e08:	ldr	x23, [x20]
   45e0c:	b	45afc <mpfr_sec@@Base+0xb4>
   45e10:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   45e14:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   45e18:	add	x2, x2, #0xab0
   45e1c:	add	x0, x0, #0x970
   45e20:	mov	w1, #0x5f                  	// #95
   45e24:	bl	cb40 <mpfr_assert_fail@plt>
   45e28:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   45e2c:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   45e30:	add	x2, x2, #0xa40
   45e34:	add	x0, x0, #0x970
   45e38:	mov	w1, #0x43                  	// #67
   45e3c:	bl	cb40 <mpfr_assert_fail@plt>

0000000000045e40 <mpfr_csc@@Base>:
   45e40:	stp	x29, x30, [sp, #-144]!
   45e44:	mov	x29, sp
   45e48:	stp	x21, x22, [sp, #32]
   45e4c:	mov	x21, x1
   45e50:	mov	w22, w2
   45e54:	stp	x27, x28, [sp, #80]
   45e58:	mrs	x28, tpidr_el0
   45e5c:	ldr	x2, [x21, #16]
   45e60:	stp	x19, x20, [sp, #16]
   45e64:	mov	x20, x0
   45e68:	stp	x23, x24, [sp, #48]
   45e6c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45e70:	ldr	x1, [x0, #2576]
   45e74:	add	x0, x0, #0xa10
   45e78:	blr	x1
   45e7c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   45e80:	ldr	w24, [x28, x0]
   45e84:	add	x3, x28, x0
   45e88:	cmp	x2, x1
   45e8c:	b.le	46148 <mpfr_csc@@Base+0x308>
   45e90:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45e94:	ldr	x1, [x0, #2512]
   45e98:	add	x0, x0, #0x9d0
   45e9c:	blr	x1
   45ea0:	add	x5, x28, x0
   45ea4:	ldr	x23, [x20]
   45ea8:	stp	x25, x26, [sp, #64]
   45eac:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   45eb0:	ldr	x1, [x21]
   45eb4:	ldr	x26, [x28, x0]
   45eb8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45ebc:	ldr	x3, [x0, #2544]
   45ec0:	add	x0, x0, #0x9f0
   45ec4:	blr	x3
   45ec8:	cmp	x1, x23
   45ecc:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   45ed0:	csel	x1, x1, x23, ge  // ge = tcont
   45ed4:	str	x6, [x5]
   45ed8:	ldr	x25, [x28, x0]
   45edc:	str	x3, [x28, x0]
   45ee0:	neg	x1, x1, lsl #1
   45ee4:	cmp	x2, x1
   45ee8:	b.le	4609c <mpfr_csc@@Base+0x25c>
   45eec:	cmp	x23, #0x1
   45ef0:	b.eq	461d8 <mpfr_csc@@Base+0x398>  // b.none
   45ef4:	b.le	46250 <mpfr_csc@@Base+0x410>
   45ef8:	sub	x19, x23, #0x1
   45efc:	mov	w0, #0x40                  	// #64
   45f00:	clz	x19, x19
   45f04:	sub	w19, w0, w19
   45f08:	add	x19, x23, w19, sxtw
   45f0c:	mov	x0, #0x40                  	// #64
   45f10:	add	x19, x19, #0x3
   45f14:	add	x27, sp, #0x70
   45f18:	mov	x1, x19
   45f1c:	str	x0, [sp, #104]
   45f20:	mov	x0, x27
   45f24:	bl	ca80 <mpfr_init2@plt>
   45f28:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45f2c:	ldr	x1, [x0, #2576]
   45f30:	add	x0, x0, #0xa10
   45f34:	blr	x1
   45f38:	add	x1, x28, x0
   45f3c:	mov	w2, #0x1                   	// #1
   45f40:	str	wzr, [x28, x0]
   45f44:	mov	x0, x27
   45f48:	str	x1, [sp, #96]
   45f4c:	mov	x1, x21
   45f50:	bl	c450 <mpfr_sin@plt>
   45f54:	ldr	x1, [sp, #96]
   45f58:	ldr	w0, [x1]
   45f5c:	tbnz	w0, #1, 4617c <mpfr_csc@@Base+0x33c>
   45f60:	mov	x1, #0x1                   	// #1
   45f64:	mov	x2, x27
   45f68:	mov	x0, x27
   45f6c:	mov	w3, #0x0                   	// #0
   45f70:	bl	c2f0 <mpfr_ui_div@plt>
   45f74:	ldr	x0, [sp, #128]
   45f78:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   45f7c:	cmp	x0, x1
   45f80:	b.le	4610c <mpfr_csc@@Base+0x2cc>
   45f84:	ldr	x1, [sp, #112]
   45f88:	cmp	w22, #0x0
   45f8c:	ldr	x0, [sp, #136]
   45f90:	sub	x1, x1, #0x1
   45f94:	cinc	x3, x23, eq  // eq = none
   45f98:	sub	x2, x19, #0x2
   45f9c:	asr	x1, x1, #6
   45fa0:	add	x1, x1, #0x1
   45fa4:	bl	c370 <mpfr_round_p@plt>
   45fa8:	cbz	w0, 4610c <mpfr_csc@@Base+0x2cc>
   45fac:	ldr	w3, [sp, #120]
   45fb0:	mov	w2, w22
   45fb4:	mov	x1, x27
   45fb8:	mov	x0, x20
   45fbc:	bl	c6a0 <mpfr_set4@plt>
   45fc0:	mov	w19, w0
   45fc4:	mov	x0, x27
   45fc8:	bl	c070 <mpfr_clear@plt>
   45fcc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45fd0:	ldr	x1, [x0, #2576]
   45fd4:	add	x0, x0, #0xa10
   45fd8:	blr	x1
   45fdc:	str	w24, [x28, x0]
   45fe0:	ldr	x1, [x20, #16]
   45fe4:	add	x2, x28, x0
   45fe8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   45fec:	ldr	x3, [x0, #2512]
   45ff0:	add	x0, x0, #0x9d0
   45ff4:	blr	x3
   45ff8:	str	x26, [x28, x0]
   45ffc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   46000:	ldr	x3, [x0, #2544]
   46004:	add	x0, x0, #0x9f0
   46008:	blr	x3
   4600c:	str	x25, [x28, x0]
   46010:	cmp	x26, x1
   46014:	ccmp	x25, x1, #0x1, le
   46018:	b.ge	46050 <mpfr_csc@@Base+0x210>  // b.tcont
   4601c:	mov	w1, w19
   46020:	mov	w2, w22
   46024:	mov	x0, x20
   46028:	bl	cb30 <mpfr_check_range@plt>
   4602c:	ldp	x25, x26, [sp, #64]
   46030:	mov	w19, w0
   46034:	mov	w0, w19
   46038:	ldp	x19, x20, [sp, #16]
   4603c:	ldp	x21, x22, [sp, #32]
   46040:	ldp	x23, x24, [sp, #48]
   46044:	ldp	x27, x28, [sp, #80]
   46048:	ldp	x29, x30, [sp], #144
   4604c:	ret
   46050:	cbz	w19, 4607c <mpfr_csc@@Base+0x23c>
   46054:	orr	w24, w24, #0x8
   46058:	mov	w0, w19
   4605c:	ldp	x25, x26, [sp, #64]
   46060:	str	w24, [x2]
   46064:	ldp	x19, x20, [sp, #16]
   46068:	ldp	x21, x22, [sp, #32]
   4606c:	ldp	x23, x24, [sp, #48]
   46070:	ldp	x27, x28, [sp, #80]
   46074:	ldp	x29, x30, [sp], #144
   46078:	ret
   4607c:	mov	w0, w19
   46080:	ldp	x19, x20, [sp, #16]
   46084:	ldp	x21, x22, [sp, #32]
   46088:	ldp	x23, x24, [sp, #48]
   4608c:	ldp	x25, x26, [sp, #64]
   46090:	ldp	x27, x28, [sp, #80]
   46094:	ldp	x29, x30, [sp], #144
   46098:	ret
   4609c:	mov	x2, x21
   460a0:	mov	w3, w22
   460a4:	ldr	w21, [x21, #8]
   460a8:	mov	x0, x20
   460ac:	mov	x1, #0x1                   	// #1
   460b0:	bl	c2f0 <mpfr_ui_div@plt>
   460b4:	mov	w19, w0
   460b8:	cbnz	w0, 460f0 <mpfr_csc@@Base+0x2b0>
   460bc:	cmp	w22, #0x4
   460c0:	b.eq	46204 <mpfr_csc@@Base+0x3c4>  // b.none
   460c4:	cmp	w22, #0x2
   460c8:	b.eq	461e0 <mpfr_csc@@Base+0x3a0>  // b.none
   460cc:	cmp	w22, #0x3
   460d0:	neg	w19, w21
   460d4:	b.ne	460f0 <mpfr_csc@@Base+0x2b0>  // b.any
   460d8:	mov	w19, #0xffffffff            	// #-1
   460dc:	mov	w22, #0x3                   	// #3
   460e0:	tbz	w21, #31, 460f0 <mpfr_csc@@Base+0x2b0>
   460e4:	mov	x0, x20
   460e8:	bl	bdd0 <mpfr_nextbelow@plt>
   460ec:	nop
   460f0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   460f4:	ldr	x1, [x0, #2576]
   460f8:	add	x0, x0, #0xa10
   460fc:	blr	x1
   46100:	ldr	w0, [x28, x0]
   46104:	orr	w24, w24, w0
   46108:	b	45fcc <mpfr_csc@@Base+0x18c>
   4610c:	ldr	x1, [sp, #104]
   46110:	mov	x0, #0xfffffffffffffeff    	// #-257
   46114:	movk	x0, #0x7fff, lsl #48
   46118:	sub	x0, x0, x19
   4611c:	cmp	x0, x1
   46120:	b.lt	46238 <mpfr_csc@@Base+0x3f8>  // b.tstop
   46124:	ldr	x0, [sp, #104]
   46128:	add	x19, x19, x0
   4612c:	mov	x0, x27
   46130:	mov	x1, x19
   46134:	add	x2, x19, x19, lsr #63
   46138:	asr	x2, x2, #1
   4613c:	str	x2, [sp, #104]
   46140:	bl	bed0 <mpfr_set_prec@plt>
   46144:	b	45f28 <mpfr_csc@@Base+0xe8>
   46148:	mov	x0, #0x2                   	// #2
   4614c:	movk	x0, #0x8000, lsl #48
   46150:	cmp	x2, x0
   46154:	b.eq	46224 <mpfr_csc@@Base+0x3e4>  // b.none
   46158:	cmp	x2, x1
   4615c:	b.eq	46210 <mpfr_csc@@Base+0x3d0>  // b.none
   46160:	ldr	w0, [x21, #8]
   46164:	orr	w24, w24, #0x20
   46168:	mov	w19, #0x0                   	// #0
   4616c:	str	w24, [x3]
   46170:	str	w0, [x20, #8]
   46174:	str	x1, [x20, #16]
   46178:	b	46034 <mpfr_csc@@Base+0x1f4>
   4617c:	ldr	w19, [sp, #120]
   46180:	mov	x0, x27
   46184:	bl	c070 <mpfr_clear@plt>
   46188:	ldr	x0, [sp, #96]
   4618c:	mov	w2, w19
   46190:	str	w24, [x0]
   46194:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   46198:	ldr	x1, [x0, #2512]
   4619c:	add	x0, x0, #0x9d0
   461a0:	blr	x1
   461a4:	str	x26, [x28, x0]
   461a8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   461ac:	ldr	x1, [x0, #2544]
   461b0:	add	x0, x0, #0x9f0
   461b4:	blr	x1
   461b8:	cmp	w22, #0x0
   461bc:	str	x25, [x28, x0]
   461c0:	csinc	w1, w22, wzr, ne  // ne = any
   461c4:	mov	x0, x20
   461c8:	bl	c3c0 <mpfr_underflow@plt>
   461cc:	mov	w19, w0
   461d0:	ldp	x25, x26, [sp, #64]
   461d4:	b	46034 <mpfr_csc@@Base+0x1f4>
   461d8:	mov	x19, x23
   461dc:	b	45f0c <mpfr_csc@@Base+0xcc>
   461e0:	cmp	w21, #0x0
   461e4:	mov	w19, #0x1                   	// #1
   461e8:	b.le	460f0 <mpfr_csc@@Base+0x2b0>
   461ec:	nop
   461f0:	mov	x0, x20
   461f4:	mov	w19, #0x1                   	// #1
   461f8:	mov	w22, #0x2                   	// #2
   461fc:	bl	c120 <mpfr_nextabove@plt>
   46200:	b	460f0 <mpfr_csc@@Base+0x2b0>
   46204:	cmp	w21, #0x0
   46208:	b.gt	461f0 <mpfr_csc@@Base+0x3b0>
   4620c:	b	460d8 <mpfr_csc@@Base+0x298>
   46210:	orr	w24, w24, #0x4
   46214:	mov	w19, #0x0                   	// #0
   46218:	str	w24, [x3]
   4621c:	str	x0, [x20, #16]
   46220:	b	46034 <mpfr_csc@@Base+0x1f4>
   46224:	orr	w24, w24, #0x4
   46228:	mov	w19, #0x0                   	// #0
   4622c:	str	w24, [x3]
   46230:	str	x2, [x20, #16]
   46234:	b	46034 <mpfr_csc@@Base+0x1f4>
   46238:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   4623c:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   46240:	add	x2, x2, #0xab0
   46244:	add	x0, x0, #0x970
   46248:	mov	w1, #0x5f                  	// #95
   4624c:	bl	cb40 <mpfr_assert_fail@plt>
   46250:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   46254:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   46258:	add	x2, x2, #0xa40
   4625c:	add	x0, x0, #0x970
   46260:	mov	w1, #0x43                  	// #67
   46264:	bl	cb40 <mpfr_assert_fail@plt>

0000000000046268 <mpfr_cot@@Base>:
   46268:	stp	x29, x30, [sp, #-144]!
   4626c:	mov	x29, sp
   46270:	stp	x25, x26, [sp, #64]
   46274:	mov	x26, x1
   46278:	stp	x21, x22, [sp, #32]
   4627c:	mov	w21, w2
   46280:	stp	x27, x28, [sp, #80]
   46284:	mrs	x28, tpidr_el0
   46288:	ldr	x2, [x26, #16]
   4628c:	stp	x19, x20, [sp, #16]
   46290:	mov	x19, x0
   46294:	stp	x23, x24, [sp, #48]
   46298:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4629c:	ldr	x1, [x0, #2576]
   462a0:	add	x0, x0, #0xa10
   462a4:	blr	x1
   462a8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   462ac:	ldr	w23, [x28, x0]
   462b0:	add	x3, x28, x0
   462b4:	cmp	x2, x1
   462b8:	b.le	465a0 <mpfr_cot@@Base+0x338>
   462bc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   462c0:	ldr	x1, [x0, #2512]
   462c4:	add	x0, x0, #0x9d0
   462c8:	blr	x1
   462cc:	add	x6, x28, x0
   462d0:	ldr	x22, [x19]
   462d4:	mov	x7, #0xc000000000000001    	// #-4611686018427387903
   462d8:	ldr	x1, [x26]
   462dc:	ldr	x24, [x28, x0]
   462e0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   462e4:	ldr	x3, [x0, #2544]
   462e8:	add	x0, x0, #0x9f0
   462ec:	blr	x3
   462f0:	add	x20, x28, x0
   462f4:	cmp	x1, x22
   462f8:	csel	x1, x1, x22, ge  // ge = tcont
   462fc:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   46300:	str	x7, [x6]
   46304:	ldr	x25, [x28, x0]
   46308:	str	x3, [x20]
   4630c:	neg	x1, x1, lsl #1
   46310:	cmp	x2, x1
   46314:	b.lt	464a8 <mpfr_cot@@Base+0x240>  // b.tstop
   46318:	cmp	x22, #0x1
   4631c:	b.eq	4662c <mpfr_cot@@Base+0x3c4>  // b.none
   46320:	b.le	466cc <mpfr_cot@@Base+0x464>
   46324:	sub	x20, x22, #0x1
   46328:	mov	w0, #0x40                  	// #64
   4632c:	clz	x20, x20
   46330:	sub	w20, w0, w20
   46334:	add	x20, x22, w20, sxtw
   46338:	mov	x0, #0x40                  	// #64
   4633c:	add	x20, x20, #0x3
   46340:	add	x27, sp, #0x70
   46344:	mov	x1, x20
   46348:	str	x0, [sp, #104]
   4634c:	mov	x0, x27
   46350:	bl	ca80 <mpfr_init2@plt>
   46354:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   46358:	ldr	x1, [x0, #2576]
   4635c:	add	x0, x0, #0xa10
   46360:	blr	x1
   46364:	add	x1, x28, x0
   46368:	mov	w2, #0x1                   	// #1
   4636c:	str	wzr, [x28, x0]
   46370:	mov	x0, x27
   46374:	str	x1, [sp, #96]
   46378:	mov	x1, x26
   4637c:	bl	bbe0 <mpfr_tan@plt>
   46380:	ldr	x1, [sp, #96]
   46384:	ldr	w0, [x1]
   46388:	tbnz	w0, #1, 465d4 <mpfr_cot@@Base+0x36c>
   4638c:	mov	x1, #0x1                   	// #1
   46390:	mov	x2, x27
   46394:	mov	x0, x27
   46398:	mov	w3, #0x0                   	// #0
   4639c:	bl	c2f0 <mpfr_ui_div@plt>
   463a0:	ldr	x0, [sp, #128]
   463a4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   463a8:	cmp	x0, x1
   463ac:	b.le	4653c <mpfr_cot@@Base+0x2d4>
   463b0:	ldr	x1, [sp, #112]
   463b4:	cmp	w21, #0x0
   463b8:	ldr	x0, [sp, #136]
   463bc:	sub	x1, x1, #0x1
   463c0:	cinc	x3, x22, eq  // eq = none
   463c4:	sub	x2, x20, #0x2
   463c8:	asr	x1, x1, #6
   463cc:	add	x1, x1, #0x1
   463d0:	bl	c370 <mpfr_round_p@plt>
   463d4:	cbz	w0, 4653c <mpfr_cot@@Base+0x2d4>
   463d8:	ldr	w3, [sp, #120]
   463dc:	mov	w2, w21
   463e0:	mov	x1, x27
   463e4:	mov	x0, x19
   463e8:	bl	c6a0 <mpfr_set4@plt>
   463ec:	mov	w20, w0
   463f0:	mov	x0, x27
   463f4:	bl	c070 <mpfr_clear@plt>
   463f8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   463fc:	ldr	x1, [x0, #2576]
   46400:	add	x0, x0, #0xa10
   46404:	blr	x1
   46408:	str	w23, [x28, x0]
   4640c:	ldr	x1, [x19, #16]
   46410:	add	x2, x28, x0
   46414:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   46418:	ldr	x3, [x0, #2512]
   4641c:	add	x0, x0, #0x9d0
   46420:	blr	x3
   46424:	str	x24, [x28, x0]
   46428:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4642c:	ldr	x3, [x0, #2544]
   46430:	add	x0, x0, #0x9f0
   46434:	blr	x3
   46438:	str	x25, [x28, x0]
   4643c:	cmp	x25, x1
   46440:	ccmp	x24, x1, #0x0, ge  // ge = tcont
   46444:	b.le	4647c <mpfr_cot@@Base+0x214>
   46448:	mov	w1, w20
   4644c:	mov	w2, w21
   46450:	mov	x0, x19
   46454:	bl	cb30 <mpfr_check_range@plt>
   46458:	mov	w20, w0
   4645c:	mov	w0, w20
   46460:	ldp	x19, x20, [sp, #16]
   46464:	ldp	x21, x22, [sp, #32]
   46468:	ldp	x23, x24, [sp, #48]
   4646c:	ldp	x25, x26, [sp, #64]
   46470:	ldp	x27, x28, [sp, #80]
   46474:	ldp	x29, x30, [sp], #144
   46478:	ret
   4647c:	cbz	w20, 4645c <mpfr_cot@@Base+0x1f4>
   46480:	orr	w23, w23, #0x8
   46484:	str	w23, [x2]
   46488:	mov	w0, w20
   4648c:	ldp	x19, x20, [sp, #16]
   46490:	ldp	x21, x22, [sp, #32]
   46494:	ldp	x23, x24, [sp, #48]
   46498:	ldp	x25, x26, [sp, #64]
   4649c:	ldp	x27, x28, [sp, #80]
   464a0:	ldp	x29, x30, [sp], #144
   464a4:	ret
   464a8:	mov	x0, #0x2                   	// #2
   464ac:	ldr	w22, [x26, #8]
   464b0:	movk	x0, #0xc000, lsl #48
   464b4:	cmp	x2, x0
   464b8:	b.eq	46578 <mpfr_cot@@Base+0x310>  // b.none
   464bc:	mov	x2, x26
   464c0:	mov	w3, w21
   464c4:	mov	x0, x19
   464c8:	mov	x1, #0x1                   	// #1
   464cc:	bl	c2f0 <mpfr_ui_div@plt>
   464d0:	mov	w20, w0
   464d4:	cbnz	w0, 46520 <mpfr_cot@@Base+0x2b8>
   464d8:	mov	w26, #0x0                   	// #0
   464dc:	cmp	w21, #0x4
   464e0:	b.eq	46634 <mpfr_cot@@Base+0x3cc>  // b.none
   464e4:	cmp	w21, #0x2
   464e8:	b.eq	46650 <mpfr_cot@@Base+0x3e8>  // b.none
   464ec:	cmp	w22, #0x0
   464f0:	ccmp	w21, #0x1, #0x0, lt  // lt = tstop
   464f4:	b.ne	4665c <mpfr_cot@@Base+0x3f4>  // b.any
   464f8:	mov	w21, #0x1                   	// #1
   464fc:	mov	x0, x19
   46500:	mov	w20, #0x1                   	// #1
   46504:	bl	c120 <mpfr_nextabove@plt>
   46508:	cbz	w26, 46520 <mpfr_cot@@Base+0x2b8>
   4650c:	mov	w3, w21
   46510:	mov	x1, x19
   46514:	mov	x0, x19
   46518:	mov	x2, #0x1                   	// #1
   4651c:	bl	c2c0 <mpfr_mul_2ui@plt>
   46520:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   46524:	ldr	x1, [x0, #2576]
   46528:	add	x0, x0, #0xa10
   4652c:	blr	x1
   46530:	ldr	w0, [x28, x0]
   46534:	orr	w23, w23, w0
   46538:	b	463f8 <mpfr_cot@@Base+0x190>
   4653c:	ldr	x1, [sp, #104]
   46540:	mov	x0, #0xfffffffffffffeff    	// #-257
   46544:	movk	x0, #0x7fff, lsl #48
   46548:	sub	x0, x0, x20
   4654c:	cmp	x0, x1
   46550:	b.lt	466ac <mpfr_cot@@Base+0x444>  // b.tstop
   46554:	ldr	x0, [sp, #104]
   46558:	add	x20, x20, x0
   4655c:	mov	x0, x27
   46560:	mov	x1, x20
   46564:	add	x2, x20, x20, lsr #63
   46568:	asr	x2, x2, #1
   4656c:	str	x2, [sp, #104]
   46570:	bl	bed0 <mpfr_set_prec@plt>
   46574:	b	46354 <mpfr_cot@@Base+0xec>
   46578:	mov	x0, x26
   4657c:	bl	bf00 <mpfr_powerof2_raw@plt>
   46580:	cbz	w0, 464bc <mpfr_cot@@Base+0x254>
   46584:	ldr	x2, [x20]
   46588:	sxtw	x1, w22
   4658c:	mov	x0, x19
   46590:	mov	w3, #0x0                   	// #0
   46594:	mov	w26, #0x1                   	// #1
   46598:	bl	ba80 <mpfr_set_si_2exp@plt>
   4659c:	b	464dc <mpfr_cot@@Base+0x274>
   465a0:	mov	x0, #0x2                   	// #2
   465a4:	movk	x0, #0x8000, lsl #48
   465a8:	cmp	x2, x0
   465ac:	b.eq	46698 <mpfr_cot@@Base+0x430>  // b.none
   465b0:	cmp	x2, x1
   465b4:	b.eq	46684 <mpfr_cot@@Base+0x41c>  // b.none
   465b8:	ldr	w0, [x26, #8]
   465bc:	orr	w23, w23, #0x20
   465c0:	mov	w20, #0x0                   	// #0
   465c4:	str	w23, [x3]
   465c8:	str	w0, [x19, #8]
   465cc:	str	x1, [x19, #16]
   465d0:	b	4645c <mpfr_cot@@Base+0x1f4>
   465d4:	ldr	w20, [sp, #120]
   465d8:	mov	x0, x27
   465dc:	bl	c070 <mpfr_clear@plt>
   465e0:	ldr	x0, [sp, #96]
   465e4:	mov	w2, w20
   465e8:	str	w23, [x0]
   465ec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   465f0:	ldr	x1, [x0, #2512]
   465f4:	add	x0, x0, #0x9d0
   465f8:	blr	x1
   465fc:	str	x24, [x28, x0]
   46600:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   46604:	ldr	x1, [x0, #2544]
   46608:	add	x0, x0, #0x9f0
   4660c:	blr	x1
   46610:	cmp	w21, #0x0
   46614:	str	x25, [x28, x0]
   46618:	csinc	w1, w21, wzr, ne  // ne = any
   4661c:	mov	x0, x19
   46620:	bl	c3c0 <mpfr_underflow@plt>
   46624:	mov	w20, w0
   46628:	b	4645c <mpfr_cot@@Base+0x1f4>
   4662c:	mov	x20, x22
   46630:	b	46338 <mpfr_cot@@Base+0xd0>
   46634:	cmp	w22, #0x0
   46638:	mov	w21, #0x3                   	// #3
   4663c:	mov	w0, #0x2                   	// #2
   46640:	mov	w20, #0x1                   	// #1
   46644:	csel	w21, w21, w0, le
   46648:	csinv	w20, w20, wzr, gt
   4664c:	b	46508 <mpfr_cot@@Base+0x2a0>
   46650:	mov	w20, #0x1                   	// #1
   46654:	tbz	w22, #31, 46508 <mpfr_cot@@Base+0x2a0>
   46658:	b	464fc <mpfr_cot@@Base+0x294>
   4665c:	and	w0, w21, #0xfffffffd
   46660:	mov	w20, w22
   46664:	cmp	w0, #0x1
   46668:	b.ne	46508 <mpfr_cot@@Base+0x2a0>  // b.any
   4666c:	cmp	w22, #0x0
   46670:	b.le	466c4 <mpfr_cot@@Base+0x45c>
   46674:	mov	x0, x19
   46678:	mov	w20, #0xffffffff            	// #-1
   4667c:	bl	bdd0 <mpfr_nextbelow@plt>
   46680:	b	46508 <mpfr_cot@@Base+0x2a0>
   46684:	orr	w23, w23, #0x4
   46688:	mov	w20, #0x0                   	// #0
   4668c:	str	w23, [x3]
   46690:	str	x0, [x19, #16]
   46694:	b	4645c <mpfr_cot@@Base+0x1f4>
   46698:	orr	w23, w23, #0x4
   4669c:	mov	w20, #0x0                   	// #0
   466a0:	str	w23, [x3]
   466a4:	str	x2, [x19, #16]
   466a8:	b	4645c <mpfr_cot@@Base+0x1f4>
   466ac:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   466b0:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   466b4:	add	x2, x2, #0xab0
   466b8:	add	x0, x0, #0x970
   466bc:	mov	w1, #0x5f                  	// #95
   466c0:	bl	cb40 <mpfr_assert_fail@plt>
   466c4:	mov	w20, #0xffffffff            	// #-1
   466c8:	b	46508 <mpfr_cot@@Base+0x2a0>
   466cc:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   466d0:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   466d4:	add	x2, x2, #0xa40
   466d8:	add	x0, x0, #0x970
   466dc:	mov	w1, #0x43                  	// #67
   466e0:	bl	cb40 <mpfr_assert_fail@plt>
   466e4:	nop

00000000000466e8 <mpfr_eint@@Base>:
   466e8:	sub	sp, sp, #0x290
   466ec:	stp	x29, x30, [sp]
   466f0:	mov	x29, sp
   466f4:	stp	x27, x28, [sp, #80]
   466f8:	mov	x27, x1
   466fc:	ldr	x1, [x1, #16]
   46700:	stp	x19, x20, [sp, #16]
   46704:	str	x0, [sp, #112]
   46708:	str	w2, [sp, #160]
   4670c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   46710:	cmp	x1, x2
   46714:	b.le	47238 <mpfr_eint@@Base+0xb50>
   46718:	mrs	x3, tpidr_el0
   4671c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   46720:	ldr	x2, [x0, #2576]
   46724:	add	x0, x0, #0xa10
   46728:	blr	x2
   4672c:	ldr	x5, [sp, #112]
   46730:	mov	x8, x3
   46734:	ldr	w0, [x3, x0]
   46738:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   4673c:	str	x3, [sp, #136]
   46740:	mov	w6, #0x1                   	// #1
   46744:	str	w0, [sp, #164]
   46748:	ldr	x20, [x5]
   4674c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   46750:	ldr	x4, [x0, #2512]
   46754:	add	x0, x0, #0x9d0
   46758:	blr	x4
   4675c:	add	x3, x3, x0
   46760:	stp	x25, x26, [sp, #64]
   46764:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   46768:	ldr	x0, [x8, x0]
   4676c:	str	x0, [sp, #168]
   46770:	ldr	x5, [x27, #24]
   46774:	stp	x1, x5, [sp, #400]
   46778:	ldr	x7, [x27]
   4677c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   46780:	ldr	x5, [x0, #2544]
   46784:	add	x0, x0, #0x9f0
   46788:	blr	x5
   4678c:	str	x4, [x3]
   46790:	cmp	x20, #0x1
   46794:	ldr	x3, [x8, x0]
   46798:	str	x2, [x8, x0]
   4679c:	str	x3, [sp, #176]
   467a0:	str	x7, [sp, #384]
   467a4:	str	w6, [sp, #392]
   467a8:	b.eq	467cc <mpfr_eint@@Base+0xe4>  // b.none
   467ac:	mov	x0, x20
   467b0:	b.le	4728c <mpfr_eint@@Base+0xba4>
   467b4:	sub	x0, x0, #0x1
   467b8:	mov	w1, #0x40                  	// #64
   467bc:	clz	x0, x0
   467c0:	sub	w0, w1, w0
   467c4:	lsl	w0, w0, #1
   467c8:	add	x20, x20, w0, sxtw
   467cc:	add	x25, sp, #0x140
   467d0:	mov	x1, #0x40                  	// #64
   467d4:	mov	x0, x25
   467d8:	bl	ca80 <mpfr_init2@plt>
   467dc:	add	x0, x20, #0x6
   467e0:	add	x28, sp, #0x160
   467e4:	mov	x1, #0x40                  	// #64
   467e8:	str	x0, [sp, #120]
   467ec:	mov	x0, x28
   467f0:	bl	ca80 <mpfr_init2@plt>
   467f4:	ldr	w0, [x27, #8]
   467f8:	cmp	w0, #0x0
   467fc:	b.gt	46eec <mpfr_eint@@Base+0x804>
   46800:	b.eq	46810 <mpfr_eint@@Base+0x128>  // b.none
   46804:	ldr	x0, [x27, #16]
   46808:	cmp	x0, #0x0
   4680c:	b.gt	471e0 <mpfr_eint@@Base+0xaf8>
   46810:	stp	x21, x22, [sp, #32]
   46814:	stp	x23, x24, [sp, #48]
   46818:	str	d8, [sp, #96]
   4681c:	add	x0, sp, #0x180
   46820:	add	x26, sp, #0x200
   46824:	str	x0, [sp, #152]
   46828:	add	x0, x26, #0x10
   4682c:	str	x0, [sp, #208]
   46830:	add	x0, sp, #0x110
   46834:	str	x0, [sp, #144]
   46838:	mov	x0, #0x40                  	// #64
   4683c:	str	x0, [sp, #184]
   46840:	adrp	x0, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   46844:	ldr	x19, [sp, #120]
   46848:	add	x24, sp, #0x120
   4684c:	ldr	d8, [x0, #216]
   46850:	mov	x0, x25
   46854:	mov	x1, x19
   46858:	bl	bed0 <mpfr_set_prec@plt>
   4685c:	mov	x1, x19
   46860:	mov	x0, x28
   46864:	bl	bed0 <mpfr_set_prec@plt>
   46868:	ldr	x0, [x27, #16]
   4686c:	cmp	x0, #0x0
   46870:	b.le	468a4 <mpfr_eint@@Base+0x1bc>
   46874:	ldr	d0, [sp, #120]
   46878:	scvtf	d1, x0
   4687c:	fmov	d3, #5.000000000000000000e-01
   46880:	ldr	x0, [sp, #152]
   46884:	scvtf	d2, d0
   46888:	fmov	d0, #1.000000000000000000e+00
   4688c:	fmadd	d1, d1, d3, d2
   46890:	fmadd	d0, d1, d8, d0
   46894:	bl	bcf0 <mpfr_cmp_d@plt>
   46898:	cmp	w0, #0x0
   4689c:	b.gt	47004 <mpfr_eint@@Base+0x91c>
   468a0:	ldr	x0, [x27, #16]
   468a4:	ldr	x1, [sp, #320]
   468a8:	str	x1, [sp, #128]
   468ac:	neg	x1, x1
   468b0:	cmp	x1, x0
   468b4:	b.ge	46fe8 <mpfr_eint@@Base+0x900>  // b.tcont
   468b8:	ldr	x0, [sp, #144]
   468bc:	add	x1, sp, #0x130
   468c0:	mov	x19, x1
   468c4:	str	x1, [sp, #200]
   468c8:	add	x22, sp, #0x100
   468cc:	bl	bf90 <mpfr_mpz_init@plt>
   468d0:	mov	x0, x24
   468d4:	bl	bf90 <mpfr_mpz_init@plt>
   468d8:	mov	x0, x19
   468dc:	bl	bf90 <mpfr_mpz_init@plt>
   468e0:	mov	x0, x22
   468e4:	bl	bf90 <mpfr_mpz_init@plt>
   468e8:	mov	x2, #0x1f                  	// #31
   468ec:	add	x3, x26, #0x18
   468f0:	ldr	x4, [sp, #208]
   468f4:	str	x2, [sp, #416]
   468f8:	stp	x4, x2, [sp, #440]
   468fc:	mov	w1, #0x1                   	// #1
   46900:	mov	x0, x22
   46904:	stp	x3, x2, [sp, #472]
   46908:	add	x2, x26, #0x20
   4690c:	str	w1, [sp, #424]
   46910:	str	w1, [sp, #456]
   46914:	str	w1, [sp, #488]
   46918:	mov	x1, x27
   4691c:	str	x2, [sp, #504]
   46920:	str	xzr, [sp, #512]
   46924:	str	x4, [sp, #520]
   46928:	bl	cac0 <mpfr_get_z_2exp@plt>
   4692c:	mov	x19, x0
   46930:	ldr	x2, [x27]
   46934:	ldr	x0, [sp, #128]
   46938:	cmp	x0, x2
   4693c:	b.lt	471c8 <mpfr_eint@@Base+0xae0>  // b.tstop
   46940:	mov	x0, x22
   46944:	mov	x1, #0x0                   	// #0
   46948:	bl	ba90 <__gmpz_scan1@plt>
   4694c:	mov	x2, x0
   46950:	add	x0, x19, x0
   46954:	mov	x1, x22
   46958:	mov	x3, x0
   4695c:	mov	x0, x22
   46960:	neg	x4, x3
   46964:	str	x4, [sp, #192]
   46968:	str	x3, [sp, #216]
   4696c:	add	x19, sp, #0x1e0
   46970:	add	x23, sp, #0x1a0
   46974:	add	x20, sp, #0x1c0
   46978:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   4697c:	ldr	x21, [sp, #128]
   46980:	mov	x1, #0x1                   	// #1
   46984:	sub	x0, x21, #0x1
   46988:	str	x0, [sp, #224]
   4698c:	mov	x0, x24
   46990:	bl	bcb0 <__gmpz_set_ui@plt>
   46994:	mov	x1, x24
   46998:	mov	x0, x24
   4699c:	mov	x2, x21
   469a0:	bl	c200 <__gmpz_mul_2exp@plt>
   469a4:	mov	w1, #0x1                   	// #1
   469a8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   469ac:	mov	x21, #0x1                   	// #1
   469b0:	stp	x27, x25, [sp, #232]
   469b4:	mov	x27, x24
   469b8:	mov	x24, x22
   469bc:	str	x28, [sp, #248]
   469c0:	str	w1, [sp, #424]
   469c4:	str	x0, [sp, #432]
   469c8:	str	w1, [sp, #488]
   469cc:	str	x0, [sp, #496]
   469d0:	ldr	x28, [sp, #144]
   469d4:	ldr	x25, [sp, #200]
   469d8:	ldr	x22, [sp, #224]
   469dc:	str	x26, [sp, #224]
   469e0:	mov	x26, x23
   469e4:	mov	x23, x19
   469e8:	ldr	x19, [sp, #216]
   469ec:	b	46b30 <mpfr_eint@@Base+0x448>
   469f0:	mov	x0, x26
   469f4:	bl	c480 <mpfr_add_z@plt>
   469f8:	ldr	w0, [sp, #260]
   469fc:	mov	x2, #0xfffffffffffffff8    	// #-8
   46a00:	ldr	x7, [sp, #264]
   46a04:	cmp	w0, #0x0
   46a08:	cneg	w0, w0, lt  // lt = tstop
   46a0c:	mov	x1, x26
   46a10:	mov	w3, #0x2                   	// #2
   46a14:	add	x6, x2, w0, sxtw #3
   46a18:	sbfiz	x2, x0, #6, #32
   46a1c:	mov	x0, x26
   46a20:	ldr	x6, [x7, x6]
   46a24:	clz	x6, x6
   46a28:	sub	x2, x2, x6
   46a2c:	sub	x2, x2, x22
   46a30:	add	x2, x2, x19
   46a34:	bl	bb90 <mpfr_mul_2si@plt>
   46a38:	mov	x2, x21
   46a3c:	mov	x1, x26
   46a40:	mov	w3, #0x2                   	// #2
   46a44:	mov	x0, x26
   46a48:	bl	cc60 <mpfr_div_ui@plt>
   46a4c:	mov	w3, #0x2                   	// #2
   46a50:	mov	x1, x26
   46a54:	mov	x2, #0x1                   	// #1
   46a58:	mov	x0, x26
   46a5c:	bl	c260 <mpfr_add_ui@plt>
   46a60:	mov	x2, x24
   46a64:	mov	x1, x27
   46a68:	mov	x0, x27
   46a6c:	bl	bff0 <__gmpz_mul@plt>
   46a70:	tbnz	x19, #63, 46b64 <mpfr_eint@@Base+0x47c>
   46a74:	mov	x2, x19
   46a78:	mov	x1, x27
   46a7c:	mov	x0, x27
   46a80:	bl	c200 <__gmpz_mul_2exp@plt>
   46a84:	mov	x2, x21
   46a88:	mov	x1, x27
   46a8c:	mov	x0, x27
   46a90:	bl	c040 <__gmpz_tdiv_q_ui@plt>
   46a94:	mov	x2, x21
   46a98:	mov	x1, x27
   46a9c:	mov	x0, x25
   46aa0:	bl	c040 <__gmpz_tdiv_q_ui@plt>
   46aa4:	mov	x2, x25
   46aa8:	mov	x1, x28
   46aac:	mov	x0, x28
   46ab0:	bl	c9c0 <__gmpz_add@plt>
   46ab4:	mov	x2, x21
   46ab8:	mov	x1, x26
   46abc:	mov	w3, #0x2                   	// #2
   46ac0:	mov	x0, x20
   46ac4:	bl	cc60 <mpfr_div_ui@plt>
   46ac8:	mov	x1, x20
   46acc:	mov	w3, #0x2                   	// #2
   46ad0:	mov	x2, #0x1                   	// #1
   46ad4:	mov	x0, x20
   46ad8:	bl	c260 <mpfr_add_ui@plt>
   46adc:	mov	x1, x23
   46ae0:	mov	x2, x20
   46ae4:	mov	x0, x23
   46ae8:	mov	w3, #0x2                   	// #2
   46aec:	bl	c1a0 <mpfr_add@plt>
   46af0:	ldr	w1, [sp, #292]
   46af4:	mov	x0, #0x0                   	// #0
   46af8:	cmp	w1, #0x0
   46afc:	cbz	w1, 46b20 <mpfr_eint@@Base+0x438>
   46b00:	cneg	w0, w1, lt  // lt = tstop
   46b04:	mov	x2, #0xfffffffffffffff8    	// #-8
   46b08:	ldr	x3, [sp, #296]
   46b0c:	add	x2, x2, w0, sxtw #3
   46b10:	sbfiz	x0, x0, #6, #32
   46b14:	ldr	x2, [x3, x2]
   46b18:	clz	x2, x2
   46b1c:	sub	x0, x0, x2
   46b20:	ldr	x2, [sp, #496]
   46b24:	cmp	x2, x0
   46b28:	b.gt	46b78 <mpfr_eint@@Base+0x490>
   46b2c:	add	x21, x21, #0x1
   46b30:	mov	x2, x22
   46b34:	mov	x1, x26
   46b38:	mov	w3, #0x2                   	// #2
   46b3c:	mov	x0, x26
   46b40:	bl	c2c0 <mpfr_mul_2ui@plt>
   46b44:	ldr	w0, [sp, #292]
   46b48:	mov	x2, x27
   46b4c:	mov	x1, x26
   46b50:	mov	w3, #0x2                   	// #2
   46b54:	tbz	w0, #31, 469f0 <mpfr_eint@@Base+0x308>
   46b58:	mov	x0, x26
   46b5c:	bl	bd60 <mpfr_sub_z@plt>
   46b60:	b	469f8 <mpfr_eint@@Base+0x310>
   46b64:	ldr	x2, [sp, #192]
   46b68:	mov	x1, x27
   46b6c:	mov	x0, x27
   46b70:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   46b74:	b	46a84 <mpfr_eint@@Base+0x39c>
   46b78:	cmp	w1, #0x0
   46b7c:	mov	x2, x27
   46b80:	cneg	w0, w1, lt  // lt = tstop
   46b84:	mov	x19, x23
   46b88:	mov	x1, x26
   46b8c:	mov	x23, x26
   46b90:	mov	x22, x24
   46b94:	mov	x24, x27
   46b98:	ldp	x26, x27, [sp, #224]
   46b9c:	mov	w3, #0x2                   	// #2
   46ba0:	str	w0, [sp, #292]
   46ba4:	mov	x0, x23
   46ba8:	ldp	x25, x28, [sp, #240]
   46bac:	bl	c480 <mpfr_add_z@plt>
   46bb0:	mov	x2, x21
   46bb4:	mov	x1, x23
   46bb8:	mov	w3, #0x2                   	// #2
   46bbc:	mov	x0, x23
   46bc0:	bl	cc60 <mpfr_div_ui@plt>
   46bc4:	mov	x1, x27
   46bc8:	mov	w3, #0x1                   	// #1
   46bcc:	mov	w2, #0x2                   	// #2
   46bd0:	mov	x0, x20
   46bd4:	bl	c6a0 <mpfr_set4@plt>
   46bd8:	mov	x2, x20
   46bdc:	mov	x1, x23
   46be0:	mov	w3, #0x2                   	// #2
   46be4:	mov	x0, x23
   46be8:	bl	bd50 <mpfr_mul@plt>
   46bec:	mov	x1, x21
   46bf0:	mov	x2, x20
   46bf4:	mov	x0, x20
   46bf8:	mov	w3, #0x3                   	// #3
   46bfc:	bl	ca50 <mpfr_ui_sub@plt>
   46c00:	ldr	w0, [sp, #456]
   46c04:	tbnz	w0, #31, 46c64 <mpfr_eint@@Base+0x57c>
   46c08:	mov	x2, x20
   46c0c:	mov	x1, x23
   46c10:	mov	w3, #0x2                   	// #2
   46c14:	mov	x0, x23
   46c18:	bl	c620 <mpfr_div@plt>
   46c1c:	mov	w3, #0x2                   	// #2
   46c20:	mov	x2, x23
   46c24:	mov	x1, x19
   46c28:	mov	x0, x19
   46c2c:	bl	c1a0 <mpfr_add@plt>
   46c30:	ldr	x1, [sp, #144]
   46c34:	mov	w2, #0x0                   	// #0
   46c38:	mov	x0, x25
   46c3c:	bl	c240 <mpfr_set_z@plt>
   46c40:	ldr	x2, [sp, #128]
   46c44:	mov	x1, x25
   46c48:	mov	x0, x25
   46c4c:	mov	w3, #0x0                   	// #0
   46c50:	bl	c8f0 <mpfr_div_2ui@plt>
   46c54:	ldr	x0, [sp, #336]
   46c58:	ldr	x1, [sp, #496]
   46c5c:	sub	x0, x1, x0
   46c60:	str	x0, [sp, #128]
   46c64:	ldr	x1, [sp, #512]
   46c68:	cbz	x1, 46c74 <mpfr_eint@@Base+0x58c>
   46c6c:	ldr	x0, [sp, #520]
   46c70:	bl	cc20 <mpfr_free_func@plt>
   46c74:	ldr	x0, [sp, #144]
   46c78:	bl	c170 <mpfr_mpz_clear@plt>
   46c7c:	mov	x0, x24
   46c80:	bl	c170 <mpfr_mpz_clear@plt>
   46c84:	ldr	x0, [sp, #200]
   46c88:	bl	c170 <mpfr_mpz_clear@plt>
   46c8c:	mov	x0, x22
   46c90:	bl	c170 <mpfr_mpz_clear@plt>
   46c94:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   46c98:	ldr	x1, [x0, #2608]
   46c9c:	add	x0, x0, #0xa30
   46ca0:	blr	x1
   46ca4:	mov	w2, #0x0                   	// #0
   46ca8:	ldr	x1, [sp, #136]
   46cac:	mov	x21, #0x8000000000000001    	// #-9223372036854775807
   46cb0:	ldr	x20, [sp, #336]
   46cb4:	add	x1, x1, x0
   46cb8:	mov	x0, x28
   46cbc:	bl	c380 <mpfr_cache@plt>
   46cc0:	mov	w3, #0x0                   	// #0
   46cc4:	mov	x2, x28
   46cc8:	mov	x1, x25
   46ccc:	mov	x0, x25
   46cd0:	bl	c1a0 <mpfr_add@plt>
   46cd4:	ldr	x0, [sp, #128]
   46cd8:	mov	w2, #0x0                   	// #0
   46cdc:	ldr	x19, [sp, #336]
   46ce0:	adds	x0, x20, x0
   46ce4:	ldr	x1, [sp, #368]
   46ce8:	csinv	x0, x0, xzr, pl  // pl = nfrst
   46cec:	cmp	x19, x21
   46cf0:	add	x0, x0, #0x2
   46cf4:	csel	x19, x1, x19, eq  // eq = none
   46cf8:	ldr	x1, [sp, #152]
   46cfc:	subs	x0, x0, x19
   46d00:	csel	x20, x0, xzr, pl  // pl = nfrst
   46d04:	mov	x0, x28
   46d08:	add	x19, x19, #0x1
   46d0c:	bl	c090 <mpfr_log@plt>
   46d10:	add	x19, x19, x20
   46d14:	mov	x2, x28
   46d18:	mov	x1, x25
   46d1c:	mov	x0, x25
   46d20:	mov	w3, #0x0                   	// #0
   46d24:	bl	c1a0 <mpfr_add@plt>
   46d28:	ldr	x0, [sp, #368]
   46d2c:	cmp	x0, x21
   46d30:	b.eq	46d3c <mpfr_eint@@Base+0x654>  // b.none
   46d34:	cmp	x19, x0
   46d38:	csel	x19, x19, x0, ge  // ge = tcont
   46d3c:	ldr	x0, [sp, #336]
   46d40:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   46d44:	cmp	x0, x1
   46d48:	b.eq	46e98 <mpfr_eint@@Base+0x7b0>  // b.none
   46d4c:	subs	x19, x19, x0
   46d50:	csel	x19, x19, xzr, pl  // pl = nfrst
   46d54:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   46d58:	cmp	x0, x1
   46d5c:	b.le	46e98 <mpfr_eint@@Base+0x7b0>
   46d60:	ldr	x2, [sp, #112]
   46d64:	ldr	w0, [sp, #160]
   46d68:	ldr	x1, [sp, #320]
   46d6c:	cmp	w0, #0x0
   46d70:	ldr	x0, [sp, #344]
   46d74:	sub	x1, x1, #0x1
   46d78:	ldr	x3, [x2]
   46d7c:	asr	x1, x1, #6
   46d80:	ldr	x2, [sp, #120]
   46d84:	add	x1, x1, #0x1
   46d88:	cinc	x3, x3, eq  // eq = none
   46d8c:	sub	x2, x2, x19
   46d90:	bl	c370 <mpfr_round_p@plt>
   46d94:	cbz	w0, 46e98 <mpfr_eint@@Base+0x7b0>
   46d98:	ldr	w2, [sp, #160]
   46d9c:	mov	x1, x25
   46da0:	ldr	w3, [sp, #328]
   46da4:	ldr	x20, [sp, #112]
   46da8:	mov	x0, x20
   46dac:	bl	c6a0 <mpfr_set4@plt>
   46db0:	mov	w19, w0
   46db4:	mov	x0, x25
   46db8:	bl	c070 <mpfr_clear@plt>
   46dbc:	mov	x0, x28
   46dc0:	bl	c070 <mpfr_clear@plt>
   46dc4:	ldr	x3, [sp, #136]
   46dc8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   46dcc:	ldr	x2, [x0, #2576]
   46dd0:	add	x0, x0, #0xa10
   46dd4:	blr	x2
   46dd8:	ldr	w2, [sp, #164]
   46ddc:	str	w2, [x3, x0]
   46de0:	add	x2, x3, x0
   46de4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   46de8:	ldr	x4, [x0, #2512]
   46dec:	add	x0, x0, #0x9d0
   46df0:	blr	x4
   46df4:	ldr	x4, [sp, #168]
   46df8:	str	x4, [x3, x0]
   46dfc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   46e00:	ldr	x5, [x0, #2544]
   46e04:	add	x0, x0, #0x9f0
   46e08:	blr	x5
   46e0c:	ldr	x1, [x20, #16]
   46e10:	ldr	x5, [sp, #176]
   46e14:	str	x5, [x3, x0]
   46e18:	cmp	x4, x1
   46e1c:	ccmp	x5, x1, #0x1, le
   46e20:	b.ge	46e60 <mpfr_eint@@Base+0x778>  // b.tcont
   46e24:	ldr	w2, [sp, #160]
   46e28:	mov	w1, w19
   46e2c:	ldr	x0, [sp, #112]
   46e30:	bl	cb30 <mpfr_check_range@plt>
   46e34:	mov	w19, w0
   46e38:	ldp	x21, x22, [sp, #32]
   46e3c:	ldp	x23, x24, [sp, #48]
   46e40:	ldp	x25, x26, [sp, #64]
   46e44:	ldr	d8, [sp, #96]
   46e48:	mov	w0, w19
   46e4c:	ldp	x29, x30, [sp]
   46e50:	ldp	x19, x20, [sp, #16]
   46e54:	ldp	x27, x28, [sp, #80]
   46e58:	add	sp, sp, #0x290
   46e5c:	ret
   46e60:	cbz	w19, 46e38 <mpfr_eint@@Base+0x750>
   46e64:	ldr	w0, [sp, #164]
   46e68:	ldp	x21, x22, [sp, #32]
   46e6c:	orr	w0, w0, #0x8
   46e70:	ldp	x23, x24, [sp, #48]
   46e74:	ldp	x25, x26, [sp, #64]
   46e78:	ldr	d8, [sp, #96]
   46e7c:	str	w0, [x2]
   46e80:	mov	w0, w19
   46e84:	ldp	x29, x30, [sp]
   46e88:	ldp	x19, x20, [sp, #16]
   46e8c:	ldp	x27, x28, [sp, #80]
   46e90:	add	sp, sp, #0x290
   46e94:	ret
   46e98:	ldr	x1, [sp, #120]
   46e9c:	mov	x0, #0xfffffffffffffeff    	// #-257
   46ea0:	movk	x0, #0x7fff, lsl #48
   46ea4:	sub	x0, x0, x1
   46ea8:	ldr	x1, [sp, #184]
   46eac:	cmp	x0, x1
   46eb0:	b.lt	472e0 <mpfr_eint@@Base+0xbf8>  // b.tstop
   46eb4:	ldr	x0, [sp, #120]
   46eb8:	ldr	x1, [sp, #184]
   46ebc:	add	x19, x0, x1
   46ec0:	mov	x0, x25
   46ec4:	mov	x1, x19
   46ec8:	str	x19, [sp, #120]
   46ecc:	add	x2, x19, x19, lsr #63
   46ed0:	asr	x2, x2, #1
   46ed4:	str	x2, [sp, #184]
   46ed8:	bl	bed0 <mpfr_set_prec@plt>
   46edc:	mov	x1, x19
   46ee0:	mov	x0, x28
   46ee4:	bl	bed0 <mpfr_set_prec@plt>
   46ee8:	b	46868 <mpfr_eint@@Base+0x180>
   46eec:	mov	x1, x27
   46ef0:	mov	w2, #0x2                   	// #2
   46ef4:	mov	x0, x25
   46ef8:	bl	c090 <mpfr_log@plt>
   46efc:	mov	x2, x25
   46f00:	mov	x1, x27
   46f04:	mov	w3, #0x3                   	// #3
   46f08:	mov	x0, x28
   46f0c:	bl	bb70 <mpfr_sub@plt>
   46f10:	adrp	x2, 7f000 <__gmpfr_l2b@@Base+0x200>
   46f14:	mov	x1, x28
   46f18:	mov	w3, #0x3                   	// #3
   46f1c:	mov	x0, x28
   46f20:	ldr	x2, [x2, #4048]
   46f24:	bl	c620 <mpfr_div@plt>
   46f28:	ldr	x3, [sp, #136]
   46f2c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   46f30:	ldr	x1, [x0, #2544]
   46f34:	add	x0, x0, #0x9f0
   46f38:	blr	x1
   46f3c:	mov	x2, #0x0                   	// #0
   46f40:	add	x19, x3, x0
   46f44:	ldr	x1, [x3, x0]
   46f48:	mov	x0, x28
   46f4c:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   46f50:	tbz	w0, #31, 473ac <mpfr_eint@@Base+0xcc4>
   46f54:	ldr	w0, [x27, #8]
   46f58:	tbnz	w0, #31, 46804 <mpfr_eint@@Base+0x11c>
   46f5c:	stp	x21, x22, [sp, #32]
   46f60:	stp	x23, x24, [sp, #48]
   46f64:	str	d8, [sp, #96]
   46f68:	cmp	w0, #0x0
   46f6c:	b.le	4681c <mpfr_eint@@Base+0x134>
   46f70:	ldr	x0, [x27, #16]
   46f74:	cmn	x0, #0x1
   46f78:	b.ne	4681c <mpfr_eint@@Base+0x134>  // b.any
   46f7c:	add	x19, sp, #0x200
   46f80:	mov	x1, #0x20                  	// #32
   46f84:	mov	x0, x19
   46f88:	bl	ca80 <mpfr_init2@plt>
   46f8c:	mov	x1, #0xa54b                	// #42315
   46f90:	mov	w3, #0x0                   	// #0
   46f94:	movk	x1, #0x5f5c, lsl #16
   46f98:	mov	x2, #0xffffffffffffffe0    	// #-32
   46f9c:	mov	x0, x19
   46fa0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   46fa4:	mov	x1, x27
   46fa8:	mov	x2, x19
   46fac:	mov	x0, x19
   46fb0:	mov	w3, #0x0                   	// #0
   46fb4:	bl	bb70 <mpfr_sub@plt>
   46fb8:	ldr	x0, [sp, #528]
   46fbc:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   46fc0:	cmp	x0, x1
   46fc4:	b.eq	472b0 <mpfr_eint@@Base+0xbc8>  // b.none
   46fc8:	ldr	x1, [sp, #120]
   46fcc:	cmp	x0, #0x0
   46fd0:	sub	x0, x1, x0
   46fd4:	csel	x0, x0, x1, lt  // lt = tstop
   46fd8:	str	x0, [sp, #120]
   46fdc:	mov	x0, x19
   46fe0:	bl	c070 <mpfr_clear@plt>
   46fe4:	b	4681c <mpfr_eint@@Base+0x134>
   46fe8:	ldr	w3, [x27, #8]
   46fec:	mov	x1, x27
   46ff0:	mov	x0, x25
   46ff4:	mov	w2, #0x0                   	// #0
   46ff8:	str	xzr, [sp, #128]
   46ffc:	bl	c6a0 <mpfr_set4@plt>
   47000:	b	46c94 <mpfr_eint@@Base+0x5ac>
   47004:	ldr	x23, [sp, #320]
   47008:	add	x19, sp, #0x1e0
   4700c:	mov	x0, x19
   47010:	add	x20, sp, #0x1c0
   47014:	mov	x1, x23
   47018:	bl	ca80 <mpfr_init2@plt>
   4701c:	mov	x1, x23
   47020:	mov	x0, x20
   47024:	bl	ca80 <mpfr_init2@plt>
   47028:	mov	x22, #0x6                   	// #6
   4702c:	mov	x0, x26
   47030:	mov	x1, #0x1f                  	// #31
   47034:	bl	ca80 <mpfr_init2@plt>
   47038:	mov	x21, #0x1                   	// #1
   4703c:	mov	x2, x27
   47040:	mov	w3, #0x0                   	// #0
   47044:	mov	x1, #0x1                   	// #1
   47048:	mov	x0, x20
   4704c:	bl	c2f0 <mpfr_ui_div@plt>
   47050:	mov	w3, #0x0                   	// #0
   47054:	mov	x2, #0x0                   	// #0
   47058:	mov	x1, #0x1                   	// #1
   4705c:	mov	x0, x19
   47060:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   47064:	ldr	w3, [sp, #488]
   47068:	mov	x1, x19
   4706c:	mov	w2, #0x0                   	// #0
   47070:	mov	x0, x25
   47074:	bl	c6a0 <mpfr_set4@plt>
   47078:	mov	w1, #0x1                   	// #1
   4707c:	str	w1, [sp, #520]
   47080:	ldr	x0, [sp, #496]
   47084:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   47088:	ldr	x1, [sp, #336]
   4708c:	str	x2, [sp, #528]
   47090:	add	x0, x23, x0
   47094:	cmp	x1, x0
   47098:	b.ge	47144 <mpfr_eint@@Base+0xa5c>  // b.tcont
   4709c:	nop
   470a0:	mov	x2, x20
   470a4:	mov	x1, x19
   470a8:	mov	w3, #0x0                   	// #0
   470ac:	mov	x0, x19
   470b0:	bl	bd50 <mpfr_mul@plt>
   470b4:	mov	x2, x21
   470b8:	mov	x1, x19
   470bc:	mov	w3, #0x0                   	// #0
   470c0:	mov	x0, x19
   470c4:	bl	ba50 <mpfr_mul_ui@plt>
   470c8:	add	x21, x21, #0x1
   470cc:	ldr	x4, [sp, #336]
   470d0:	mov	x1, x26
   470d4:	ldr	x2, [sp, #496]
   470d8:	mov	w3, #0x2                   	// #2
   470dc:	mov	x0, x26
   470e0:	sub	x2, x4, x2
   470e4:	bl	bb90 <mpfr_mul_2si@plt>
   470e8:	mov	x2, x22
   470ec:	mov	x1, x26
   470f0:	mov	w3, #0x2                   	// #2
   470f4:	mov	x0, x26
   470f8:	bl	c260 <mpfr_add_ui@plt>
   470fc:	add	x22, x22, #0x6
   47100:	ldr	x4, [sp, #336]
   47104:	mov	x1, x26
   47108:	ldr	x2, [sp, #496]
   4710c:	mov	w3, #0x2                   	// #2
   47110:	mov	x0, x26
   47114:	sub	x2, x4, x2
   47118:	bl	c420 <mpfr_div_2si@plt>
   4711c:	mov	x1, x25
   47120:	mov	x2, x19
   47124:	mov	x0, x25
   47128:	mov	w3, #0x0                   	// #0
   4712c:	bl	c1a0 <mpfr_add@plt>
   47130:	ldr	x0, [sp, #496]
   47134:	ldr	x1, [sp, #336]
   47138:	add	x0, x23, x0
   4713c:	cmp	x0, x1
   47140:	b.gt	470a0 <mpfr_eint@@Base+0x9b8>
   47144:	mov	w3, #0x0                   	// #0
   47148:	mov	x2, x20
   4714c:	mov	x1, x25
   47150:	mov	x0, x25
   47154:	bl	bd50 <mpfr_mul@plt>
   47158:	mov	x1, x27
   4715c:	mov	x0, x19
   47160:	mov	w2, #0x0                   	// #0
   47164:	bl	c750 <mpfr_exp@plt>
   47168:	mov	x2, x19
   4716c:	mov	x1, x25
   47170:	mov	w3, #0x0                   	// #0
   47174:	mov	x0, x25
   47178:	bl	bd50 <mpfr_mul@plt>
   4717c:	mov	x1, x26
   47180:	mov	w3, #0x2                   	// #2
   47184:	mov	x2, #0x2                   	// #2
   47188:	mov	x0, x26
   4718c:	bl	c2c0 <mpfr_mul_2ui@plt>
   47190:	mov	x1, x26
   47194:	mov	w3, #0x2                   	// #2
   47198:	mov	x2, #0x8                   	// #8
   4719c:	mov	x0, x26
   471a0:	bl	c260 <mpfr_add_ui@plt>
   471a4:	mov	x0, x19
   471a8:	ldr	x19, [sp, #528]
   471ac:	bl	c070 <mpfr_clear@plt>
   471b0:	mov	x0, x20
   471b4:	bl	c070 <mpfr_clear@plt>
   471b8:	mov	x0, x26
   471bc:	bl	c070 <mpfr_clear@plt>
   471c0:	ldr	x0, [sp, #336]
   471c4:	b	46d54 <mpfr_eint@@Base+0x66c>
   471c8:	sub	x2, x2, x0
   471cc:	mov	x1, x22
   471d0:	add	x19, x19, x2
   471d4:	mov	x0, x22
   471d8:	bl	c740 <__gmpz_tdiv_q_2exp@plt>
   471dc:	b	46940 <mpfr_eint@@Base+0x258>
   471e0:	adrp	x2, 7f000 <__gmpfr_l2b@@Base+0x200>
   471e4:	mov	x1, x27
   471e8:	mov	w3, #0x2                   	// #2
   471ec:	mov	x0, x28
   471f0:	ldr	x2, [x2, #3984]
   471f4:	bl	c620 <mpfr_div@plt>
   471f8:	ldr	x3, [sp, #136]
   471fc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47200:	ldr	x1, [x0, #2512]
   47204:	add	x0, x0, #0x9d0
   47208:	blr	x1
   4720c:	mov	x2, #0x0                   	// #0
   47210:	add	x19, x3, x0
   47214:	ldr	x1, [x3, x0]
   47218:	mov	x0, x28
   4721c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   47220:	tbnz	w0, #31, 47348 <mpfr_eint@@Base+0xc60>
   47224:	ldr	w0, [x27, #8]
   47228:	stp	x21, x22, [sp, #32]
   4722c:	stp	x23, x24, [sp, #48]
   47230:	str	d8, [sp, #96]
   47234:	b	46f68 <mpfr_eint@@Base+0x880>
   47238:	mov	x0, #0x2                   	// #2
   4723c:	movk	x0, #0x8000, lsl #48
   47240:	cmp	x1, x0
   47244:	b.eq	472f8 <mpfr_eint@@Base+0xc10>  // b.none
   47248:	cmp	x1, x2
   4724c:	b.eq	472bc <mpfr_eint@@Base+0xbd4>  // b.none
   47250:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47254:	ldr	x3, [x0, #2576]
   47258:	add	x0, x0, #0xa10
   4725c:	blr	x3
   47260:	mrs	x1, tpidr_el0
   47264:	ldr	x3, [sp, #112]
   47268:	add	x0, x1, x0
   4726c:	mov	w1, #0xffffffff            	// #-1
   47270:	mov	w19, #0x0                   	// #0
   47274:	str	w1, [x3, #8]
   47278:	ldr	w1, [x0]
   4727c:	str	x2, [x3, #16]
   47280:	orr	w1, w1, #0x20
   47284:	str	w1, [x0]
   47288:	b	46e48 <mpfr_eint@@Base+0x760>
   4728c:	adrp	x2, 5e000 <mpfr_l2b_2_0__tab@@Base+0x170>
   47290:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   47294:	add	x2, x2, #0x2e0
   47298:	add	x0, x0, #0x980
   4729c:	mov	w1, #0xfa                  	// #250
   472a0:	bl	cb40 <mpfr_assert_fail@plt>
   472a4:	ldr	x0, [sp, #112]
   472a8:	ldr	x0, [x0]
   472ac:	b	467b4 <mpfr_eint@@Base+0xcc>
   472b0:	add	x0, x20, #0x26
   472b4:	str	x0, [sp, #120]
   472b8:	b	46fdc <mpfr_eint@@Base+0x8f4>
   472bc:	ldr	w0, [x27, #8]
   472c0:	cmp	w0, #0x0
   472c4:	b.le	4732c <mpfr_eint@@Base+0xc44>
   472c8:	ldr	x2, [sp, #112]
   472cc:	mov	w0, #0x1                   	// #1
   472d0:	mov	w19, #0x0                   	// #0
   472d4:	str	w0, [x2, #8]
   472d8:	str	x1, [x2, #16]
   472dc:	b	46e48 <mpfr_eint@@Base+0x760>
   472e0:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   472e4:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   472e8:	add	x2, x2, #0x830
   472ec:	add	x0, x0, #0x980
   472f0:	mov	w1, #0x159                 	// #345
   472f4:	bl	cb40 <mpfr_assert_fail@plt>
   472f8:	mrs	x2, tpidr_el0
   472fc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47300:	ldr	x3, [x0, #2576]
   47304:	add	x0, x0, #0xa10
   47308:	blr	x3
   4730c:	add	x0, x2, x0
   47310:	mov	w19, #0x0                   	// #0
   47314:	ldr	x2, [sp, #112]
   47318:	str	x1, [x2, #16]
   4731c:	ldr	w1, [x0]
   47320:	orr	w1, w1, #0x4
   47324:	str	w1, [x0]
   47328:	b	46e48 <mpfr_eint@@Base+0x760>
   4732c:	ldr	x2, [sp, #112]
   47330:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   47334:	mov	w1, #0xffffffff            	// #-1
   47338:	mov	w19, #0x0                   	// #0
   4733c:	str	w1, [x2, #8]
   47340:	str	x0, [x2, #16]
   47344:	b	46e48 <mpfr_eint@@Base+0x760>
   47348:	mov	x0, x25
   4734c:	bl	c070 <mpfr_clear@plt>
   47350:	mov	x0, x28
   47354:	bl	c070 <mpfr_clear@plt>
   47358:	ldr	x0, [sp, #168]
   4735c:	str	x0, [x19]
   47360:	ldp	w1, w4, [sp, #160]
   47364:	mov	w2, #0xffffffff            	// #-1
   47368:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4736c:	ldr	x3, [x0, #2576]
   47370:	add	x0, x0, #0xa10
   47374:	blr	x3
   47378:	ldr	x3, [sp, #136]
   4737c:	str	w4, [x3, x0]
   47380:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47384:	ldr	x4, [x0, #2544]
   47388:	add	x0, x0, #0x9f0
   4738c:	blr	x4
   47390:	ldr	x4, [sp, #176]
   47394:	str	x4, [x3, x0]
   47398:	ldr	x0, [sp, #112]
   4739c:	bl	c3c0 <mpfr_underflow@plt>
   473a0:	mov	w19, w0
   473a4:	ldp	x25, x26, [sp, #64]
   473a8:	b	46e48 <mpfr_eint@@Base+0x760>
   473ac:	mov	x0, x25
   473b0:	bl	c070 <mpfr_clear@plt>
   473b4:	mov	x0, x28
   473b8:	bl	c070 <mpfr_clear@plt>
   473bc:	ldr	x0, [sp, #176]
   473c0:	str	x0, [x19]
   473c4:	ldp	w1, w4, [sp, #160]
   473c8:	mov	w2, #0x1                   	// #1
   473cc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   473d0:	ldr	x3, [x0, #2576]
   473d4:	add	x0, x0, #0xa10
   473d8:	blr	x3
   473dc:	ldr	x3, [sp, #136]
   473e0:	str	w4, [x3, x0]
   473e4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   473e8:	ldr	x4, [x0, #2512]
   473ec:	add	x0, x0, #0x9d0
   473f0:	blr	x4
   473f4:	ldr	x4, [sp, #168]
   473f8:	str	x4, [x3, x0]
   473fc:	ldr	x0, [sp, #112]
   47400:	bl	bf40 <mpfr_overflow@plt>
   47404:	mov	w19, w0
   47408:	ldp	x25, x26, [sp, #64]
   4740c:	b	46e48 <mpfr_eint@@Base+0x760>

0000000000047410 <mpfr_sech@@Base>:
   47410:	stp	x29, x30, [sp, #-144]!
   47414:	mov	x29, sp
   47418:	stp	x21, x22, [sp, #32]
   4741c:	mov	x22, x1
   47420:	mov	w21, w2
   47424:	stp	x19, x20, [sp, #16]
   47428:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4742c:	mov	x20, x0
   47430:	ldr	x2, [x22, #16]
   47434:	cmp	x2, x1
   47438:	b.le	4776c <mpfr_sech@@Base+0x35c>
   4743c:	stp	x25, x26, [sp, #64]
   47440:	mrs	x26, tpidr_el0
   47444:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47448:	ldr	x1, [x0, #2576]
   4744c:	add	x0, x0, #0xa10
   47450:	blr	x1
   47454:	add	x6, x26, x0
   47458:	stp	x23, x24, [sp, #48]
   4745c:	ldr	w0, [x26, x0]
   47460:	str	w0, [sp, #100]
   47464:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   47468:	stp	x27, x28, [sp, #80]
   4746c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   47470:	neg	x2, x2, lsl #1
   47474:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47478:	ldr	x4, [x0, #2512]
   4747c:	add	x0, x0, #0x9d0
   47480:	blr	x4
   47484:	add	x28, x26, x0
   47488:	ldr	x25, [x26, x0]
   4748c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47490:	ldr	x4, [x0, #2544]
   47494:	add	x0, x0, #0x9f0
   47498:	blr	x4
   4749c:	add	x24, x26, x0
   474a0:	cmp	x2, #0x0
   474a4:	ldr	x23, [x20]
   474a8:	str	x3, [x28]
   474ac:	ldr	x27, [x26, x0]
   474b0:	str	x1, [x24]
   474b4:	b.le	474c8 <mpfr_sech@@Base+0xb8>
   474b8:	add	x2, x2, #0x1
   474bc:	add	x0, x23, #0x1
   474c0:	cmp	x0, x2
   474c4:	b.cc	47638 <mpfr_sech@@Base+0x228>  // b.lo, b.ul, b.last
   474c8:	cmp	x23, #0x1
   474cc:	b.eq	4779c <mpfr_sech@@Base+0x38c>  // b.none
   474d0:	b.le	4780c <mpfr_sech@@Base+0x3fc>
   474d4:	sub	x0, x23, #0x1
   474d8:	mov	w19, #0x40                  	// #64
   474dc:	clz	x0, x0
   474e0:	sub	w19, w19, w0
   474e4:	add	x19, x23, w19, sxtw
   474e8:	mov	x0, #0x40                  	// #64
   474ec:	add	x19, x19, #0x3
   474f0:	add	x28, sp, #0x70
   474f4:	mov	x1, x19
   474f8:	str	x0, [sp, #104]
   474fc:	mov	x0, x28
   47500:	bl	ca80 <mpfr_init2@plt>
   47504:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47508:	ldr	x1, [x0, #2576]
   4750c:	add	x0, x0, #0xa10
   47510:	blr	x1
   47514:	add	x24, x26, x0
   47518:	mov	x1, x22
   4751c:	mov	w2, #0x1                   	// #1
   47520:	str	wzr, [x26, x0]
   47524:	mov	x0, x28
   47528:	bl	baf0 <mpfr_cosh@plt>
   4752c:	ldr	w0, [x24]
   47530:	tbnz	w0, #1, 476f8 <mpfr_sech@@Base+0x2e8>
   47534:	mov	x1, #0x1                   	// #1
   47538:	mov	x2, x28
   4753c:	mov	x0, x28
   47540:	mov	w3, #0x0                   	// #0
   47544:	bl	c2f0 <mpfr_ui_div@plt>
   47548:	ldr	x0, [sp, #128]
   4754c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   47550:	cmp	x0, x1
   47554:	b.le	476bc <mpfr_sech@@Base+0x2ac>
   47558:	ldr	x1, [sp, #112]
   4755c:	cmp	w21, #0x0
   47560:	ldr	x0, [sp, #136]
   47564:	sub	x1, x1, #0x1
   47568:	cinc	x3, x23, eq  // eq = none
   4756c:	sub	x2, x19, #0x2
   47570:	asr	x1, x1, #6
   47574:	add	x1, x1, #0x1
   47578:	bl	c370 <mpfr_round_p@plt>
   4757c:	cbz	w0, 476bc <mpfr_sech@@Base+0x2ac>
   47580:	ldr	w3, [sp, #120]
   47584:	mov	w2, w21
   47588:	mov	x1, x28
   4758c:	mov	x0, x20
   47590:	bl	c6a0 <mpfr_set4@plt>
   47594:	mov	w19, w0
   47598:	mov	x0, x28
   4759c:	bl	c070 <mpfr_clear@plt>
   475a0:	ldr	w0, [sp, #100]
   475a4:	ldr	x1, [x20, #16]
   475a8:	str	w0, [x24]
   475ac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   475b0:	ldr	x2, [x0, #2512]
   475b4:	add	x0, x0, #0x9d0
   475b8:	blr	x2
   475bc:	str	x25, [x26, x0]
   475c0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   475c4:	ldr	x2, [x0, #2544]
   475c8:	add	x0, x0, #0x9f0
   475cc:	blr	x2
   475d0:	str	x27, [x26, x0]
   475d4:	cmp	x27, x1
   475d8:	ccmp	x25, x1, #0x0, ge  // ge = tcont
   475dc:	b.le	47614 <mpfr_sech@@Base+0x204>
   475e0:	mov	w1, w19
   475e4:	mov	w2, w21
   475e8:	mov	x0, x20
   475ec:	bl	cb30 <mpfr_check_range@plt>
   475f0:	ldp	x23, x24, [sp, #48]
   475f4:	mov	w19, w0
   475f8:	ldp	x25, x26, [sp, #64]
   475fc:	ldp	x27, x28, [sp, #80]
   47600:	mov	w0, w19
   47604:	ldp	x19, x20, [sp, #16]
   47608:	ldp	x21, x22, [sp, #32]
   4760c:	ldp	x29, x30, [sp], #144
   47610:	ret
   47614:	cbnz	w19, 47680 <mpfr_sech@@Base+0x270>
   47618:	mov	w0, w19
   4761c:	ldp	x19, x20, [sp, #16]
   47620:	ldp	x21, x22, [sp, #32]
   47624:	ldp	x23, x24, [sp, #48]
   47628:	ldp	x25, x26, [sp, #64]
   4762c:	ldp	x27, x28, [sp, #80]
   47630:	ldp	x29, x30, [sp], #144
   47634:	ret
   47638:	adrp	x1, 7f000 <__gmpfr_l2b@@Base+0x200>
   4763c:	mov	w4, w21
   47640:	mov	x0, x20
   47644:	mov	w3, #0x0                   	// #0
   47648:	ldr	x1, [x1, #3928]
   4764c:	str	x6, [sp, #104]
   47650:	bl	c540 <mpfr_round_near_x@plt>
   47654:	mov	w19, w0
   47658:	ldr	x6, [sp, #104]
   4765c:	cbz	w0, 477bc <mpfr_sech@@Base+0x3ac>
   47660:	ldr	x0, [x20, #16]
   47664:	str	x27, [x24]
   47668:	ldr	w1, [sp, #100]
   4766c:	str	w1, [x6]
   47670:	cmp	x27, x0
   47674:	str	x25, [x28]
   47678:	ccmp	x25, x0, #0x0, ge  // ge = tcont
   4767c:	b.gt	475e0 <mpfr_sech@@Base+0x1d0>
   47680:	ldr	w0, [sp, #100]
   47684:	ldp	x23, x24, [sp, #48]
   47688:	orr	w25, w0, #0x8
   4768c:	ldp	x27, x28, [sp, #80]
   47690:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47694:	ldr	x1, [x0, #2576]
   47698:	add	x0, x0, #0xa10
   4769c:	blr	x1
   476a0:	str	w25, [x26, x0]
   476a4:	mov	w0, w19
   476a8:	ldp	x19, x20, [sp, #16]
   476ac:	ldp	x21, x22, [sp, #32]
   476b0:	ldp	x25, x26, [sp, #64]
   476b4:	ldp	x29, x30, [sp], #144
   476b8:	ret
   476bc:	ldr	x1, [sp, #104]
   476c0:	mov	x0, #0xfffffffffffffeff    	// #-257
   476c4:	movk	x0, #0x7fff, lsl #48
   476c8:	sub	x0, x0, x19
   476cc:	cmp	x0, x1
   476d0:	b.lt	477f4 <mpfr_sech@@Base+0x3e4>  // b.tstop
   476d4:	ldr	x0, [sp, #104]
   476d8:	add	x19, x19, x0
   476dc:	mov	x0, x28
   476e0:	mov	x1, x19
   476e4:	add	x2, x19, x19, lsr #63
   476e8:	asr	x2, x2, #1
   476ec:	str	x2, [sp, #104]
   476f0:	bl	bed0 <mpfr_set_prec@plt>
   476f4:	b	47504 <mpfr_sech@@Base+0xf4>
   476f8:	ldr	w19, [sp, #120]
   476fc:	mov	x0, x28
   47700:	bl	c070 <mpfr_clear@plt>
   47704:	ldr	w0, [sp, #100]
   47708:	mov	w2, w19
   4770c:	str	w0, [x24]
   47710:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47714:	ldr	x1, [x0, #2512]
   47718:	add	x0, x0, #0x9d0
   4771c:	blr	x1
   47720:	str	x25, [x26, x0]
   47724:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47728:	ldr	x1, [x0, #2544]
   4772c:	add	x0, x0, #0x9f0
   47730:	blr	x1
   47734:	str	x27, [x26, x0]
   47738:	cmp	w21, #0x0
   4773c:	mov	x0, x20
   47740:	csinc	w1, w21, wzr, ne  // ne = any
   47744:	bl	c3c0 <mpfr_underflow@plt>
   47748:	mov	w19, w0
   4774c:	mov	w0, w19
   47750:	ldp	x19, x20, [sp, #16]
   47754:	ldp	x21, x22, [sp, #32]
   47758:	ldp	x23, x24, [sp, #48]
   4775c:	ldp	x25, x26, [sp, #64]
   47760:	ldp	x27, x28, [sp, #80]
   47764:	ldp	x29, x30, [sp], #144
   47768:	ret
   4776c:	mov	x3, #0x2                   	// #2
   47770:	movk	x3, #0x8000, lsl #48
   47774:	cmp	x2, x3
   47778:	b.eq	477c4 <mpfr_sech@@Base+0x3b4>  // b.none
   4777c:	cmp	x2, x1
   47780:	b.ne	477a4 <mpfr_sech@@Base+0x394>  // b.any
   47784:	mov	w1, #0x1                   	// #1
   47788:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4778c:	mov	w19, #0x0                   	// #0
   47790:	str	w1, [x20, #8]
   47794:	str	x0, [x20, #16]
   47798:	b	47600 <mpfr_sech@@Base+0x1f0>
   4779c:	mov	x19, x23
   477a0:	b	474e8 <mpfr_sech@@Base+0xd8>
   477a4:	mov	w3, w21
   477a8:	mov	x2, #0x0                   	// #0
   477ac:	mov	x1, #0x1                   	// #1
   477b0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   477b4:	mov	w19, w0
   477b8:	b	47600 <mpfr_sech@@Base+0x1f0>
   477bc:	ldr	x23, [x20]
   477c0:	b	474c8 <mpfr_sech@@Base+0xb8>
   477c4:	mrs	x1, tpidr_el0
   477c8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   477cc:	ldr	x3, [x0, #2576]
   477d0:	add	x0, x0, #0xa10
   477d4:	blr	x3
   477d8:	add	x0, x1, x0
   477dc:	mov	w19, #0x0                   	// #0
   477e0:	str	x2, [x20, #16]
   477e4:	ldr	w1, [x0]
   477e8:	orr	w1, w1, #0x4
   477ec:	str	w1, [x0]
   477f0:	b	47600 <mpfr_sech@@Base+0x1f0>
   477f4:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   477f8:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   477fc:	add	x2, x2, #0xab0
   47800:	add	x0, x0, #0x970
   47804:	mov	w1, #0x5f                  	// #95
   47808:	bl	cb40 <mpfr_assert_fail@plt>
   4780c:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   47810:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   47814:	add	x2, x2, #0xa40
   47818:	add	x0, x0, #0x970
   4781c:	mov	w1, #0x43                  	// #67
   47820:	bl	cb40 <mpfr_assert_fail@plt>
   47824:	nop

0000000000047828 <mpfr_csch@@Base>:
   47828:	stp	x29, x30, [sp, #-144]!
   4782c:	mov	x29, sp
   47830:	stp	x21, x22, [sp, #32]
   47834:	mov	x21, x1
   47838:	mov	w22, w2
   4783c:	stp	x19, x20, [sp, #16]
   47840:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   47844:	mov	x20, x0
   47848:	ldr	x2, [x21, #16]
   4784c:	cmp	x2, x1
   47850:	b.le	47b08 <mpfr_csch@@Base+0x2e0>
   47854:	stp	x27, x28, [sp, #80]
   47858:	mrs	x28, tpidr_el0
   4785c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47860:	ldr	x1, [x0, #2576]
   47864:	add	x0, x0, #0xa10
   47868:	blr	x1
   4786c:	stp	x23, x24, [sp, #48]
   47870:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   47874:	ldr	w24, [x28, x0]
   47878:	ldr	x23, [x20]
   4787c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47880:	ldr	x4, [x0, #2512]
   47884:	add	x0, x0, #0x9d0
   47888:	blr	x4
   4788c:	ldr	x1, [x21]
   47890:	add	x5, x28, x0
   47894:	stp	x25, x26, [sp, #64]
   47898:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   4789c:	ldr	x25, [x28, x0]
   478a0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   478a4:	ldr	x4, [x0, #2544]
   478a8:	add	x0, x0, #0x9f0
   478ac:	blr	x4
   478b0:	cmp	x1, x23
   478b4:	str	x6, [x5]
   478b8:	csel	x1, x1, x23, ge  // ge = tcont
   478bc:	ldr	x26, [x28, x0]
   478c0:	str	x3, [x28, x0]
   478c4:	neg	x1, x1, lsl #1
   478c8:	cmp	x2, x1
   478cc:	b.le	47a60 <mpfr_csch@@Base+0x238>
   478d0:	cmp	x23, #0x1
   478d4:	b.eq	47bbc <mpfr_csch@@Base+0x394>  // b.none
   478d8:	b.le	47c78 <mpfr_csch@@Base+0x450>
   478dc:	sub	x19, x23, #0x1
   478e0:	mov	w0, #0x40                  	// #64
   478e4:	clz	x19, x19
   478e8:	sub	w19, w0, w19
   478ec:	add	x19, x23, w19, sxtw
   478f0:	mov	x0, #0x40                  	// #64
   478f4:	add	x19, x19, #0x3
   478f8:	add	x27, sp, #0x70
   478fc:	mov	x1, x19
   47900:	str	x0, [sp, #104]
   47904:	mov	x0, x27
   47908:	bl	ca80 <mpfr_init2@plt>
   4790c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47910:	ldr	x1, [x0, #2576]
   47914:	add	x0, x0, #0xa10
   47918:	blr	x1
   4791c:	add	x1, x28, x0
   47920:	mov	w2, #0x1                   	// #1
   47924:	str	wzr, [x28, x0]
   47928:	mov	x0, x27
   4792c:	str	x1, [sp, #96]
   47930:	mov	x1, x21
   47934:	bl	c320 <mpfr_sinh@plt>
   47938:	ldr	x1, [sp, #96]
   4793c:	ldr	w0, [x1]
   47940:	tbnz	w0, #1, 47b58 <mpfr_csch@@Base+0x330>
   47944:	mov	x1, #0x1                   	// #1
   47948:	mov	x2, x27
   4794c:	mov	x0, x27
   47950:	mov	w3, #0x0                   	// #0
   47954:	bl	c2f0 <mpfr_ui_div@plt>
   47958:	ldr	x0, [sp, #128]
   4795c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   47960:	cmp	x0, x1
   47964:	b.le	47acc <mpfr_csch@@Base+0x2a4>
   47968:	ldr	x1, [sp, #112]
   4796c:	cmp	w22, #0x0
   47970:	ldr	x0, [sp, #136]
   47974:	sub	x1, x1, #0x1
   47978:	cinc	x3, x23, eq  // eq = none
   4797c:	sub	x2, x19, #0x2
   47980:	asr	x1, x1, #6
   47984:	add	x1, x1, #0x1
   47988:	bl	c370 <mpfr_round_p@plt>
   4798c:	cbz	w0, 47acc <mpfr_csch@@Base+0x2a4>
   47990:	ldr	w3, [sp, #120]
   47994:	mov	w2, w22
   47998:	mov	x1, x27
   4799c:	mov	x0, x20
   479a0:	bl	c6a0 <mpfr_set4@plt>
   479a4:	mov	w19, w0
   479a8:	mov	x0, x27
   479ac:	bl	c070 <mpfr_clear@plt>
   479b0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   479b4:	ldr	x1, [x0, #2576]
   479b8:	add	x0, x0, #0xa10
   479bc:	blr	x1
   479c0:	str	w24, [x28, x0]
   479c4:	ldr	x1, [x20, #16]
   479c8:	add	x2, x28, x0
   479cc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   479d0:	ldr	x3, [x0, #2512]
   479d4:	add	x0, x0, #0x9d0
   479d8:	blr	x3
   479dc:	str	x25, [x28, x0]
   479e0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   479e4:	ldr	x3, [x0, #2544]
   479e8:	add	x0, x0, #0x9f0
   479ec:	blr	x3
   479f0:	str	x26, [x28, x0]
   479f4:	cmp	x26, x1
   479f8:	ccmp	x25, x1, #0x0, ge  // ge = tcont
   479fc:	b.le	47a34 <mpfr_csch@@Base+0x20c>
   47a00:	mov	w1, w19
   47a04:	mov	w2, w22
   47a08:	mov	x0, x20
   47a0c:	bl	cb30 <mpfr_check_range@plt>
   47a10:	ldp	x23, x24, [sp, #48]
   47a14:	mov	w19, w0
   47a18:	ldp	x25, x26, [sp, #64]
   47a1c:	ldp	x27, x28, [sp, #80]
   47a20:	mov	w0, w19
   47a24:	ldp	x19, x20, [sp, #16]
   47a28:	ldp	x21, x22, [sp, #32]
   47a2c:	ldp	x29, x30, [sp], #144
   47a30:	ret
   47a34:	cbz	w19, 47a40 <mpfr_csch@@Base+0x218>
   47a38:	orr	w24, w24, #0x8
   47a3c:	str	w24, [x2]
   47a40:	mov	w0, w19
   47a44:	ldp	x19, x20, [sp, #16]
   47a48:	ldp	x21, x22, [sp, #32]
   47a4c:	ldp	x23, x24, [sp, #48]
   47a50:	ldp	x25, x26, [sp, #64]
   47a54:	ldp	x27, x28, [sp, #80]
   47a58:	ldp	x29, x30, [sp], #144
   47a5c:	ret
   47a60:	mov	x2, x21
   47a64:	mov	w3, w22
   47a68:	ldr	w21, [x21, #8]
   47a6c:	mov	x0, x20
   47a70:	mov	x1, #0x1                   	// #1
   47a74:	bl	c2f0 <mpfr_ui_div@plt>
   47a78:	mov	w19, w0
   47a7c:	cbnz	w0, 47ab0 <mpfr_csch@@Base+0x288>
   47a80:	cmp	w22, #0x4
   47a84:	b.eq	47bd0 <mpfr_csch@@Base+0x3a8>  // b.none
   47a88:	cmp	w22, #0x2
   47a8c:	b.eq	47bc4 <mpfr_csch@@Base+0x39c>  // b.none
   47a90:	cmp	w21, #0x0
   47a94:	ccmp	w22, #0x1, #0x0, lt  // lt = tstop
   47a98:	b.ne	47c30 <mpfr_csch@@Base+0x408>  // b.any
   47a9c:	mov	w22, #0x1                   	// #1
   47aa0:	mov	x0, x20
   47aa4:	mov	w19, #0x1                   	// #1
   47aa8:	bl	c120 <mpfr_nextabove@plt>
   47aac:	nop
   47ab0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47ab4:	ldr	x1, [x0, #2576]
   47ab8:	add	x0, x0, #0xa10
   47abc:	blr	x1
   47ac0:	ldr	w0, [x28, x0]
   47ac4:	orr	w24, w24, w0
   47ac8:	b	479b0 <mpfr_csch@@Base+0x188>
   47acc:	ldr	x1, [sp, #104]
   47ad0:	mov	x0, #0xfffffffffffffeff    	// #-257
   47ad4:	movk	x0, #0x7fff, lsl #48
   47ad8:	sub	x0, x0, x19
   47adc:	cmp	x0, x1
   47ae0:	b.lt	47c58 <mpfr_csch@@Base+0x430>  // b.tstop
   47ae4:	ldr	x0, [sp, #104]
   47ae8:	add	x19, x19, x0
   47aec:	mov	x0, x27
   47af0:	mov	x1, x19
   47af4:	add	x2, x19, x19, lsr #63
   47af8:	asr	x2, x2, #1
   47afc:	str	x2, [sp, #104]
   47b00:	bl	bed0 <mpfr_set_prec@plt>
   47b04:	b	4790c <mpfr_csch@@Base+0xe4>
   47b08:	mov	x0, #0x2                   	// #2
   47b0c:	movk	x0, #0x8000, lsl #48
   47b10:	cmp	x2, x0
   47b14:	b.eq	47c00 <mpfr_csch@@Base+0x3d8>  // b.none
   47b18:	ldr	w3, [x21, #8]
   47b1c:	cmp	x2, x1
   47b20:	b.eq	47bec <mpfr_csch@@Base+0x3c4>  // b.none
   47b24:	mrs	x2, tpidr_el0
   47b28:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47b2c:	ldr	x4, [x0, #2576]
   47b30:	add	x0, x0, #0xa10
   47b34:	blr	x4
   47b38:	add	x0, x2, x0
   47b3c:	str	x1, [x20, #16]
   47b40:	mov	w19, #0x0                   	// #0
   47b44:	str	w3, [x20, #8]
   47b48:	ldr	w1, [x0]
   47b4c:	orr	w1, w1, #0x20
   47b50:	str	w1, [x0]
   47b54:	b	47a20 <mpfr_csch@@Base+0x1f8>
   47b58:	ldr	w19, [sp, #120]
   47b5c:	mov	x0, x27
   47b60:	bl	c070 <mpfr_clear@plt>
   47b64:	ldr	x0, [sp, #96]
   47b68:	mov	w2, w19
   47b6c:	str	w24, [x0]
   47b70:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47b74:	ldr	x1, [x0, #2512]
   47b78:	add	x0, x0, #0x9d0
   47b7c:	blr	x1
   47b80:	str	x25, [x28, x0]
   47b84:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47b88:	ldr	x1, [x0, #2544]
   47b8c:	add	x0, x0, #0x9f0
   47b90:	blr	x1
   47b94:	cmp	w22, #0x0
   47b98:	str	x26, [x28, x0]
   47b9c:	csinc	w1, w22, wzr, ne  // ne = any
   47ba0:	mov	x0, x20
   47ba4:	bl	c3c0 <mpfr_underflow@plt>
   47ba8:	mov	w19, w0
   47bac:	ldp	x23, x24, [sp, #48]
   47bb0:	ldp	x25, x26, [sp, #64]
   47bb4:	ldp	x27, x28, [sp, #80]
   47bb8:	b	47a20 <mpfr_csch@@Base+0x1f8>
   47bbc:	mov	x19, x23
   47bc0:	b	478f0 <mpfr_csch@@Base+0xc8>
   47bc4:	mov	w19, #0x1                   	// #1
   47bc8:	tbz	w21, #31, 47ab0 <mpfr_csch@@Base+0x288>
   47bcc:	b	47aa0 <mpfr_csch@@Base+0x278>
   47bd0:	cmp	w21, #0x0
   47bd4:	mov	w19, #0x1                   	// #1
   47bd8:	mov	w22, #0x3                   	// #3
   47bdc:	mov	w0, #0x2                   	// #2
   47be0:	csinv	w19, w19, wzr, gt
   47be4:	csel	w22, w22, w0, le
   47be8:	b	47ab0 <mpfr_csch@@Base+0x288>
   47bec:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   47bf0:	mov	w19, #0x0                   	// #0
   47bf4:	str	w3, [x20, #8]
   47bf8:	str	x0, [x20, #16]
   47bfc:	b	47a20 <mpfr_csch@@Base+0x1f8>
   47c00:	mrs	x1, tpidr_el0
   47c04:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47c08:	ldr	x3, [x0, #2576]
   47c0c:	add	x0, x0, #0xa10
   47c10:	blr	x3
   47c14:	add	x0, x1, x0
   47c18:	mov	w19, #0x0                   	// #0
   47c1c:	str	x2, [x20, #16]
   47c20:	ldr	w1, [x0]
   47c24:	orr	w1, w1, #0x4
   47c28:	str	w1, [x0]
   47c2c:	b	47a20 <mpfr_csch@@Base+0x1f8>
   47c30:	and	w0, w22, #0xfffffffd
   47c34:	mov	w19, w21
   47c38:	cmp	w0, #0x1
   47c3c:	b.ne	47ab0 <mpfr_csch@@Base+0x288>  // b.any
   47c40:	cmp	w21, #0x0
   47c44:	b.le	47c70 <mpfr_csch@@Base+0x448>
   47c48:	mov	x0, x20
   47c4c:	mov	w19, #0xffffffff            	// #-1
   47c50:	bl	bdd0 <mpfr_nextbelow@plt>
   47c54:	b	47ab0 <mpfr_csch@@Base+0x288>
   47c58:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   47c5c:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   47c60:	add	x2, x2, #0xab0
   47c64:	add	x0, x0, #0x970
   47c68:	mov	w1, #0x5f                  	// #95
   47c6c:	bl	cb40 <mpfr_assert_fail@plt>
   47c70:	mov	w19, #0xffffffff            	// #-1
   47c74:	b	47ab0 <mpfr_csch@@Base+0x288>
   47c78:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   47c7c:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   47c80:	add	x2, x2, #0xa40
   47c84:	add	x0, x0, #0x970
   47c88:	mov	w1, #0x43                  	// #67
   47c8c:	bl	cb40 <mpfr_assert_fail@plt>

0000000000047c90 <mpfr_coth@@Base>:
   47c90:	stp	x29, x30, [sp, #-144]!
   47c94:	mov	x29, sp
   47c98:	stp	x21, x22, [sp, #32]
   47c9c:	mov	x21, x1
   47ca0:	mov	w22, w2
   47ca4:	stp	x19, x20, [sp, #16]
   47ca8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   47cac:	mov	x20, x0
   47cb0:	ldr	x2, [x21, #16]
   47cb4:	cmp	x2, x1
   47cb8:	b.le	47fa4 <mpfr_coth@@Base+0x314>
   47cbc:	stp	x27, x28, [sp, #80]
   47cc0:	mrs	x28, tpidr_el0
   47cc4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47cc8:	ldr	x1, [x0, #2576]
   47ccc:	add	x0, x0, #0xa10
   47cd0:	blr	x1
   47cd4:	stp	x23, x24, [sp, #48]
   47cd8:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   47cdc:	ldr	w24, [x28, x0]
   47ce0:	ldr	x23, [x20]
   47ce4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47ce8:	ldr	x4, [x0, #2512]
   47cec:	add	x0, x0, #0x9d0
   47cf0:	blr	x4
   47cf4:	ldr	x1, [x21]
   47cf8:	add	x5, x28, x0
   47cfc:	stp	x25, x26, [sp, #64]
   47d00:	mov	x6, #0xc000000000000001    	// #-4611686018427387903
   47d04:	ldr	x25, [x28, x0]
   47d08:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47d0c:	ldr	x4, [x0, #2544]
   47d10:	add	x0, x0, #0x9f0
   47d14:	blr	x4
   47d18:	cmp	x1, x23
   47d1c:	str	x6, [x5]
   47d20:	csel	x1, x1, x23, ge  // ge = tcont
   47d24:	ldr	x26, [x28, x0]
   47d28:	str	x3, [x28, x0]
   47d2c:	neg	x1, x1, lsl #1
   47d30:	cmp	x2, x1
   47d34:	b.lt	47ee8 <mpfr_coth@@Base+0x258>  // b.tstop
   47d38:	cmp	x23, #0x1
   47d3c:	b.eq	48058 <mpfr_coth@@Base+0x3c8>  // b.none
   47d40:	b.le	48158 <mpfr_coth@@Base+0x4c8>
   47d44:	sub	x19, x23, #0x1
   47d48:	mov	w0, #0x40                  	// #64
   47d4c:	clz	x19, x19
   47d50:	sub	w19, w0, w19
   47d54:	add	x19, x23, w19, sxtw
   47d58:	mov	x0, #0x40                  	// #64
   47d5c:	add	x19, x19, #0x3
   47d60:	add	x27, sp, #0x70
   47d64:	mov	x1, x19
   47d68:	str	x0, [sp, #104]
   47d6c:	mov	x0, x27
   47d70:	bl	ca80 <mpfr_init2@plt>
   47d74:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47d78:	ldr	x1, [x0, #2576]
   47d7c:	add	x0, x0, #0xa10
   47d80:	blr	x1
   47d84:	add	x1, x28, x0
   47d88:	mov	w2, #0x1                   	// #1
   47d8c:	str	wzr, [x28, x0]
   47d90:	mov	x0, x27
   47d94:	str	x1, [sp, #96]
   47d98:	mov	x1, x21
   47d9c:	bl	bb00 <mpfr_tanh@plt>
   47da0:	ldr	x1, [sp, #96]
   47da4:	ldr	w0, [x1]
   47da8:	tbnz	w0, #1, 47ff4 <mpfr_coth@@Base+0x364>
   47dac:	mov	x1, #0x1                   	// #1
   47db0:	mov	x2, x27
   47db4:	mov	x0, x27
   47db8:	mov	w3, #0x0                   	// #0
   47dbc:	bl	c2f0 <mpfr_ui_div@plt>
   47dc0:	ldr	x0, [sp, #128]
   47dc4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   47dc8:	cmp	x0, x1
   47dcc:	b.le	47f68 <mpfr_coth@@Base+0x2d8>
   47dd0:	ldr	x1, [sp, #112]
   47dd4:	cmp	w22, #0x0
   47dd8:	ldr	x0, [sp, #136]
   47ddc:	sub	x1, x1, #0x1
   47de0:	cinc	x3, x23, eq  // eq = none
   47de4:	sub	x2, x19, #0x2
   47de8:	asr	x1, x1, #6
   47dec:	add	x1, x1, #0x1
   47df0:	bl	c370 <mpfr_round_p@plt>
   47df4:	cbz	w0, 47f5c <mpfr_coth@@Base+0x2cc>
   47df8:	ldr	w3, [sp, #120]
   47dfc:	mov	w2, w22
   47e00:	mov	x1, x27
   47e04:	mov	x0, x20
   47e08:	bl	c6a0 <mpfr_set4@plt>
   47e0c:	mov	w19, w0
   47e10:	mov	x0, x27
   47e14:	bl	c070 <mpfr_clear@plt>
   47e18:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47e1c:	ldr	x1, [x0, #2576]
   47e20:	add	x0, x0, #0xa10
   47e24:	blr	x1
   47e28:	str	w24, [x28, x0]
   47e2c:	ldr	x1, [x20, #16]
   47e30:	add	x2, x28, x0
   47e34:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47e38:	ldr	x3, [x0, #2512]
   47e3c:	add	x0, x0, #0x9d0
   47e40:	blr	x3
   47e44:	str	x25, [x28, x0]
   47e48:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47e4c:	ldr	x3, [x0, #2544]
   47e50:	add	x0, x0, #0x9f0
   47e54:	blr	x3
   47e58:	str	x26, [x28, x0]
   47e5c:	cmp	x26, x1
   47e60:	ccmp	x25, x1, #0x0, ge  // ge = tcont
   47e64:	b.le	47e9c <mpfr_coth@@Base+0x20c>
   47e68:	mov	w1, w19
   47e6c:	mov	w2, w22
   47e70:	mov	x0, x20
   47e74:	bl	cb30 <mpfr_check_range@plt>
   47e78:	ldp	x23, x24, [sp, #48]
   47e7c:	mov	w19, w0
   47e80:	ldp	x25, x26, [sp, #64]
   47e84:	ldp	x27, x28, [sp, #80]
   47e88:	mov	w0, w19
   47e8c:	ldp	x19, x20, [sp, #16]
   47e90:	ldp	x21, x22, [sp, #32]
   47e94:	ldp	x29, x30, [sp], #144
   47e98:	ret
   47e9c:	cbz	w19, 47ec8 <mpfr_coth@@Base+0x238>
   47ea0:	orr	w24, w24, #0x8
   47ea4:	mov	w0, w19
   47ea8:	ldp	x25, x26, [sp, #64]
   47eac:	ldp	x27, x28, [sp, #80]
   47eb0:	str	w24, [x2]
   47eb4:	ldp	x19, x20, [sp, #16]
   47eb8:	ldp	x21, x22, [sp, #32]
   47ebc:	ldp	x23, x24, [sp, #48]
   47ec0:	ldp	x29, x30, [sp], #144
   47ec4:	ret
   47ec8:	mov	w0, w19
   47ecc:	ldp	x19, x20, [sp, #16]
   47ed0:	ldp	x21, x22, [sp, #32]
   47ed4:	ldp	x23, x24, [sp, #48]
   47ed8:	ldp	x25, x26, [sp, #64]
   47edc:	ldp	x27, x28, [sp, #80]
   47ee0:	ldp	x29, x30, [sp], #144
   47ee4:	ret
   47ee8:	mov	x2, x21
   47eec:	mov	w3, w22
   47ef0:	ldr	w21, [x21, #8]
   47ef4:	mov	x0, x20
   47ef8:	mov	x1, #0x1                   	// #1
   47efc:	bl	c2f0 <mpfr_ui_div@plt>
   47f00:	mov	w19, w0
   47f04:	cbnz	w0, 47f40 <mpfr_coth@@Base+0x2b0>
   47f08:	cmp	w22, #0x4
   47f0c:	b.eq	480cc <mpfr_coth@@Base+0x43c>  // b.none
   47f10:	cmp	w22, #0x2
   47f14:	b.eq	480a8 <mpfr_coth@@Base+0x418>  // b.none
   47f18:	cmp	w22, #0x3
   47f1c:	neg	w19, w21
   47f20:	b.ne	47f40 <mpfr_coth@@Base+0x2b0>  // b.any
   47f24:	nop
   47f28:	mov	w19, #0xffffffff            	// #-1
   47f2c:	mov	w22, #0x3                   	// #3
   47f30:	tbz	w21, #31, 47f40 <mpfr_coth@@Base+0x2b0>
   47f34:	mov	x0, x20
   47f38:	bl	bdd0 <mpfr_nextbelow@plt>
   47f3c:	nop
   47f40:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47f44:	ldr	x1, [x0, #2576]
   47f48:	add	x0, x0, #0xa10
   47f4c:	blr	x1
   47f50:	ldr	w0, [x28, x0]
   47f54:	orr	w24, w24, w0
   47f58:	b	47e18 <mpfr_coth@@Base+0x188>
   47f5c:	ldr	x0, [sp, #128]
   47f60:	cmp	x0, #0x1
   47f64:	b.eq	48060 <mpfr_coth@@Base+0x3d0>  // b.none
   47f68:	ldr	x1, [sp, #104]
   47f6c:	mov	x0, #0xfffffffffffffeff    	// #-257
   47f70:	movk	x0, #0x7fff, lsl #48
   47f74:	sub	x0, x0, x19
   47f78:	cmp	x0, x1
   47f7c:	b.lt	48140 <mpfr_coth@@Base+0x4b0>  // b.tstop
   47f80:	ldr	x0, [sp, #104]
   47f84:	add	x19, x19, x0
   47f88:	mov	x0, x27
   47f8c:	mov	x1, x19
   47f90:	add	x2, x19, x19, lsr #63
   47f94:	asr	x2, x2, #1
   47f98:	str	x2, [sp, #104]
   47f9c:	bl	bed0 <mpfr_set_prec@plt>
   47fa0:	b	47d74 <mpfr_coth@@Base+0xe4>
   47fa4:	mov	x3, #0x2                   	// #2
   47fa8:	movk	x3, #0x8000, lsl #48
   47fac:	cmp	x2, x3
   47fb0:	b.eq	48110 <mpfr_coth@@Base+0x480>  // b.none
   47fb4:	ldr	w3, [x21, #8]
   47fb8:	cmp	x2, x1
   47fbc:	b.eq	480d8 <mpfr_coth@@Base+0x448>  // b.none
   47fc0:	mrs	x2, tpidr_el0
   47fc4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   47fc8:	ldr	x4, [x0, #2576]
   47fcc:	add	x0, x0, #0xa10
   47fd0:	blr	x4
   47fd4:	add	x0, x2, x0
   47fd8:	str	x1, [x20, #16]
   47fdc:	mov	w19, #0x0                   	// #0
   47fe0:	str	w3, [x20, #8]
   47fe4:	ldr	w1, [x0]
   47fe8:	orr	w1, w1, #0x20
   47fec:	str	w1, [x0]
   47ff0:	b	47e88 <mpfr_coth@@Base+0x1f8>
   47ff4:	ldr	w19, [sp, #120]
   47ff8:	mov	x0, x27
   47ffc:	bl	c070 <mpfr_clear@plt>
   48000:	ldr	x0, [sp, #96]
   48004:	mov	w2, w19
   48008:	str	w24, [x0]
   4800c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   48010:	ldr	x1, [x0, #2512]
   48014:	add	x0, x0, #0x9d0
   48018:	blr	x1
   4801c:	str	x25, [x28, x0]
   48020:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   48024:	ldr	x1, [x0, #2544]
   48028:	add	x0, x0, #0x9f0
   4802c:	blr	x1
   48030:	cmp	w22, #0x0
   48034:	str	x26, [x28, x0]
   48038:	csinc	w1, w22, wzr, ne  // ne = any
   4803c:	mov	x0, x20
   48040:	bl	c3c0 <mpfr_underflow@plt>
   48044:	mov	w19, w0
   48048:	ldp	x23, x24, [sp, #48]
   4804c:	ldp	x25, x26, [sp, #64]
   48050:	ldp	x27, x28, [sp, #80]
   48054:	b	47e88 <mpfr_coth@@Base+0x1f8>
   48058:	mov	x19, x23
   4805c:	b	47d58 <mpfr_coth@@Base+0xc8>
   48060:	ldrsw	x2, [sp, #120]
   48064:	mov	x1, x27
   48068:	mov	x0, x27
   4806c:	mov	w3, #0x0                   	// #0
   48070:	bl	c060 <mpfr_sub_si@plt>
   48074:	ldr	x0, [sp, #128]
   48078:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   4807c:	cmp	x0, x1
   48080:	b.eq	48090 <mpfr_coth@@Base+0x400>  // b.none
   48084:	neg	x1, x23
   48088:	cmp	x0, x1
   4808c:	b.gt	47f68 <mpfr_coth@@Base+0x2d8>
   48090:	ldrsw	x2, [sp, #120]
   48094:	mov	x1, x27
   48098:	mov	x0, x27
   4809c:	mov	w3, #0x0                   	// #0
   480a0:	bl	c7f0 <mpfr_add_si@plt>
   480a4:	b	47df8 <mpfr_coth@@Base+0x168>
   480a8:	cmp	w21, #0x0
   480ac:	mov	w19, #0x1                   	// #1
   480b0:	b.le	47f40 <mpfr_coth@@Base+0x2b0>
   480b4:	nop
   480b8:	mov	x0, x20
   480bc:	mov	w19, #0x1                   	// #1
   480c0:	mov	w22, #0x2                   	// #2
   480c4:	bl	c120 <mpfr_nextabove@plt>
   480c8:	b	47f40 <mpfr_coth@@Base+0x2b0>
   480cc:	cmp	w21, #0x0
   480d0:	b.gt	480b8 <mpfr_coth@@Base+0x428>
   480d4:	b	47f28 <mpfr_coth@@Base+0x298>
   480d8:	cmp	w3, #0x0
   480dc:	b.le	480f8 <mpfr_coth@@Base+0x468>
   480e0:	mov	w3, w22
   480e4:	mov	x2, #0x0                   	// #0
   480e8:	mov	x1, #0x1                   	// #1
   480ec:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   480f0:	mov	w19, w0
   480f4:	b	47e88 <mpfr_coth@@Base+0x1f8>
   480f8:	mov	w3, w22
   480fc:	mov	x2, #0x0                   	// #0
   48100:	mov	x1, #0xffffffffffffffff    	// #-1
   48104:	bl	ba80 <mpfr_set_si_2exp@plt>
   48108:	mov	w19, w0
   4810c:	b	47e88 <mpfr_coth@@Base+0x1f8>
   48110:	mrs	x1, tpidr_el0
   48114:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   48118:	ldr	x3, [x0, #2576]
   4811c:	add	x0, x0, #0xa10
   48120:	blr	x3
   48124:	add	x0, x1, x0
   48128:	mov	w19, #0x0                   	// #0
   4812c:	str	x2, [x20, #16]
   48130:	ldr	w1, [x0]
   48134:	orr	w1, w1, #0x4
   48138:	str	w1, [x0]
   4813c:	b	47e88 <mpfr_coth@@Base+0x1f8>
   48140:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   48144:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   48148:	add	x2, x2, #0xab0
   4814c:	add	x0, x0, #0x970
   48150:	mov	w1, #0x5f                  	// #95
   48154:	bl	cb40 <mpfr_assert_fail@plt>
   48158:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   4815c:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   48160:	add	x2, x2, #0xa40
   48164:	add	x0, x0, #0x970
   48168:	mov	w1, #0x43                  	// #67
   4816c:	bl	cb40 <mpfr_assert_fail@plt>

0000000000048170 <mpfr_round_near_x@@Base>:
   48170:	stp	x29, x30, [sp, #-96]!
   48174:	cmp	w4, #0x5
   48178:	mov	x29, sp
   4817c:	stp	x19, x20, [sp, #16]
   48180:	csinc	w19, w4, wzr, ne  // ne = any
   48184:	ldr	x4, [x0]
   48188:	stp	x21, x22, [sp, #32]
   4818c:	mov	x22, x0
   48190:	stp	x25, x26, [sp, #64]
   48194:	add	x0, x4, #0x1
   48198:	mov	x21, x1
   4819c:	cmp	x0, x2
   481a0:	ldr	x5, [x1, #16]
   481a4:	b.cs	483a8 <mpfr_round_near_x@@Base+0x238>  // b.hs, b.nlast
   481a8:	stp	x23, x24, [sp, #48]
   481ac:	mov	w23, w3
   481b0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   481b4:	ldr	x3, [x0, #2576]
   481b8:	add	x0, x0, #0xa10
   481bc:	blr	x3
   481c0:	mrs	x24, tpidr_el0
   481c4:	ldr	x3, [x1]
   481c8:	ldr	w20, [x24, x0]
   481cc:	cmp	x3, x2
   481d0:	b.cs	4836c <mpfr_round_near_x@@Base+0x1fc>  // b.hs, b.nlast
   481d4:	ldr	w25, [x21, #8]
   481d8:	str	x5, [x22, #16]
   481dc:	sub	x0, x3, #0x1
   481e0:	sub	x1, x4, #0x1
   481e4:	ldr	x8, [x21, #24]
   481e8:	str	w25, [x22, #8]
   481ec:	cmp	x3, x4
   481f0:	asr	x0, x0, #6
   481f4:	asr	x7, x1, #6
   481f8:	ldr	x21, [x22, #24]
   481fc:	b.le	48530 <mpfr_round_near_x@@Base+0x3c0>
   48200:	sub	x0, x0, x7
   48204:	str	x27, [sp, #80]
   48208:	neg	w4, w4
   4820c:	add	x2, x7, #0x1
   48210:	ands	w4, w4, #0x3f
   48214:	add	x1, x8, x0, lsl #3
   48218:	b.eq	48568 <mpfr_round_near_x@@Base+0x3f8>  // b.none
   4821c:	ldr	x3, [x8, x0, lsl #3]
   48220:	sub	w4, w4, #0x1
   48224:	mov	x5, #0x1                   	// #1
   48228:	cmp	w19, #0x0
   4822c:	lsl	x5, x5, x4
   48230:	and	x9, x3, x5
   48234:	sub	x5, x5, #0x1
   48238:	ccmp	x9, #0x0, #0x4, ne  // ne = any
   4823c:	and	x5, x5, x3
   48240:	b.ne	48270 <mpfr_round_near_x@@Base+0x100>  // b.any
   48244:	cmp	x5, #0x0
   48248:	mov	x6, x0
   4824c:	ccmp	x0, #0x0, #0x4, eq  // eq = none
   48250:	b.eq	48270 <mpfr_round_near_x@@Base+0x100>  // b.none
   48254:	mvn	x3, x0
   48258:	add	x3, x1, x3, lsl #3
   4825c:	nop
   48260:	ldr	x5, [x3, x6, lsl #3]
   48264:	subs	x6, x6, #0x1
   48268:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   4826c:	b.eq	48260 <mpfr_round_near_x@@Base+0xf0>  // b.none
   48270:	mov	x27, #0x2                   	// #2
   48274:	lsl	x27, x27, x4
   48278:	cbnz	w19, 483c4 <mpfr_round_near_x@@Base+0x254>
   4827c:	cbz	x9, 48448 <mpfr_round_near_x@@Base+0x2d8>
   48280:	cmp	x5, #0x0
   48284:	eor	w3, w23, #0x1
   48288:	cset	w4, eq  // eq = none
   4828c:	neg	w26, w25
   48290:	tst	w3, w4
   48294:	b.ne	483e8 <mpfr_round_near_x@@Base+0x278>  // b.any
   48298:	ldr	x0, [x8, x0, lsl #3]
   4829c:	adds	x0, x27, x0
   482a0:	str	x0, [x21]
   482a4:	b.cc	48488 <mpfr_round_near_x@@Base+0x318>  // b.lo, b.ul, b.last
   482a8:	mov	x0, #0x1                   	// #1
   482ac:	b	482c8 <mpfr_round_near_x@@Base+0x158>
   482b0:	ldr	x5, [x1, x0, lsl #3]
   482b4:	add	x3, x0, #0x1
   482b8:	add	x5, x5, #0x1
   482bc:	str	x5, [x21, x0, lsl #3]
   482c0:	cbnz	x5, 485b4 <mpfr_round_near_x@@Base+0x444>
   482c4:	mov	x0, x3
   482c8:	cmp	x2, x0
   482cc:	b.gt	482b0 <mpfr_round_near_x@@Base+0x140>
   482d0:	add	x2, x21, x2, lsl #3
   482d4:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   482d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   482dc:	ldr	x3, [x0, #2544]
   482e0:	add	x0, x0, #0x9f0
   482e4:	blr	x3
   482e8:	stur	x1, [x2, #-8]
   482ec:	ldr	x1, [x22, #16]
   482f0:	ldr	x2, [x24, x0]
   482f4:	add	x0, x1, #0x1
   482f8:	str	x0, [x22, #16]
   482fc:	cmp	x0, x2
   48300:	b.gt	485f4 <mpfr_round_near_x@@Base+0x484>
   48304:	nop
   48308:	ldr	x0, [x21]
   4830c:	neg	x4, x27
   48310:	and	x0, x4, x0
   48314:	str	x0, [x21]
   48318:	mov	w26, w25
   4831c:	cbz	w26, 48410 <mpfr_round_near_x@@Base+0x2a0>
   48320:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   48324:	ldr	x1, [x0, #2576]
   48328:	add	x0, x0, #0xa10
   4832c:	blr	x1
   48330:	ldr	w1, [x24, x0]
   48334:	ldr	x27, [sp, #80]
   48338:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4833c:	ldr	x2, [x0, #2576]
   48340:	add	x0, x0, #0xa10
   48344:	blr	x2
   48348:	orr	w1, w1, #0x8
   4834c:	str	w1, [x24, x0]
   48350:	mov	w0, w26
   48354:	ldp	x19, x20, [sp, #16]
   48358:	ldp	x21, x22, [sp, #32]
   4835c:	ldp	x23, x24, [sp, #48]
   48360:	ldp	x25, x26, [sp, #64]
   48364:	ldp	x29, x30, [sp], #96
   48368:	ret
   4836c:	ldr	x0, [x21, #24]
   48370:	sub	x1, x3, #0x1
   48374:	cmp	w19, #0x0
   48378:	asr	x1, x1, #6
   4837c:	cinc	x3, x4, eq  // eq = none
   48380:	add	x1, x1, #0x1
   48384:	bl	c370 <mpfr_round_p@plt>
   48388:	cbz	w0, 483a4 <mpfr_round_near_x@@Base+0x234>
   4838c:	ldr	x0, [x21, #16]
   48390:	ldr	w25, [x21, #8]
   48394:	ldr	x3, [x21]
   48398:	str	x0, [x22, #16]
   4839c:	ldr	x4, [x22]
   483a0:	b	481dc <mpfr_round_near_x@@Base+0x6c>
   483a4:	ldp	x23, x24, [sp, #48]
   483a8:	mov	w26, #0x0                   	// #0
   483ac:	mov	w0, w26
   483b0:	ldp	x19, x20, [sp, #16]
   483b4:	ldp	x21, x22, [sp, #32]
   483b8:	ldp	x25, x26, [sp, #64]
   483bc:	ldp	x29, x30, [sp], #96
   483c0:	ret
   483c4:	orr	x5, x5, x9
   483c8:	cmp	w19, #0x1
   483cc:	b.eq	48448 <mpfr_round_near_x@@Base+0x2d8>  // b.none
   483d0:	add	w3, w19, w25, lsr #31
   483d4:	cmp	w3, #0x3
   483d8:	b.eq	48448 <mpfr_round_near_x@@Base+0x2d8>  // b.none
   483dc:	cbnz	x5, 48298 <mpfr_round_near_x@@Base+0x128>
   483e0:	mov	w26, #0x0                   	// #0
   483e4:	nop
   483e8:	cmp	x21, x1
   483ec:	b.eq	483fc <mpfr_round_near_x@@Base+0x28c>  // b.none
   483f0:	lsl	x2, x2, #3
   483f4:	mov	x0, x21
   483f8:	bl	ba10 <memcpy@plt>
   483fc:	ldr	x0, [x21]
   48400:	neg	x4, x27
   48404:	and	x4, x0, x4
   48408:	str	x4, [x21]
   4840c:	cbnz	w26, 48320 <mpfr_round_near_x@@Base+0x1b0>
   48410:	ldr	x27, [sp, #80]
   48414:	cbnz	w23, 48454 <mpfr_round_near_x@@Base+0x2e4>
   48418:	cmp	w19, #0x1
   4841c:	b.eq	484b8 <mpfr_round_near_x@@Base+0x348>  // b.none
   48420:	add	w19, w19, w25, lsr #31
   48424:	cmp	w19, #0x3
   48428:	b.eq	484b8 <mpfr_round_near_x@@Base+0x348>  // b.none
   4842c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   48430:	ldr	x1, [x0, #2576]
   48434:	add	x0, x0, #0xa10
   48438:	blr	x1
   4843c:	mov	w26, w25
   48440:	ldr	w1, [x24, x0]
   48444:	b	48338 <mpfr_round_near_x@@Base+0x1c8>
   48448:	cmp	x5, #0x0
   4844c:	csneg	w26, wzr, w25, eq  // eq = none
   48450:	b	483e8 <mpfr_round_near_x@@Base+0x278>
   48454:	cmp	w19, #0x4
   48458:	b.eq	484f8 <mpfr_round_near_x@@Base+0x388>  // b.none
   4845c:	mvn	w0, w25
   48460:	add	w19, w19, w0, lsr #31
   48464:	cmp	w19, #0x3
   48468:	b.eq	484f8 <mpfr_round_near_x@@Base+0x388>  // b.none
   4846c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   48470:	ldr	x1, [x0, #2576]
   48474:	add	x0, x0, #0xa10
   48478:	blr	x1
   4847c:	neg	w26, w25
   48480:	ldr	w1, [x24, x0]
   48484:	b	48338 <mpfr_round_near_x@@Base+0x1c8>
   48488:	cmp	x21, x1
   4848c:	b.eq	4830c <mpfr_round_near_x@@Base+0x19c>  // b.none
   48490:	cmp	x2, #0x1
   48494:	b.eq	4830c <mpfr_round_near_x@@Base+0x19c>  // b.none
   48498:	mov	x0, #0x1                   	// #1
   4849c:	nop
   484a0:	ldr	x3, [x1, x0, lsl #3]
   484a4:	str	x3, [x21, x0, lsl #3]
   484a8:	add	x0, x0, #0x1
   484ac:	cmp	x0, x2
   484b0:	b.ne	484a0 <mpfr_round_near_x@@Base+0x330>  // b.any
   484b4:	b	48308 <mpfr_round_near_x@@Base+0x198>
   484b8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   484bc:	ldr	x1, [x0, #2576]
   484c0:	add	x0, x0, #0xa10
   484c4:	blr	x1
   484c8:	add	x19, x24, x0
   484cc:	str	w20, [x24, x0]
   484d0:	mov	x0, x22
   484d4:	bl	c460 <mpfr_nexttozero@plt>
   484d8:	neg	w26, w25
   484dc:	ldr	x1, [x22, #16]
   484e0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   484e4:	cmp	x1, x0
   484e8:	ldr	w1, [x19]
   484ec:	b.ne	48338 <mpfr_round_near_x@@Base+0x1c8>  // b.any
   484f0:	orr	w1, w1, #0x1
   484f4:	b	48338 <mpfr_round_near_x@@Base+0x1c8>
   484f8:	mov	x0, x22
   484fc:	bl	c670 <mpfr_nexttoinf@plt>
   48500:	ldr	x1, [x22, #16]
   48504:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   48508:	cmp	x1, x0
   4850c:	b.ne	4842c <mpfr_round_near_x@@Base+0x2bc>  // b.any
   48510:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   48514:	ldr	x1, [x0, #2576]
   48518:	add	x0, x0, #0xa10
   4851c:	blr	x1
   48520:	ldr	w1, [x24, x0]
   48524:	mov	w26, w25
   48528:	orr	w1, w1, #0x2
   4852c:	b	48338 <mpfr_round_near_x@@Base+0x1c8>
   48530:	sub	x1, x7, x0
   48534:	add	x2, x0, #0x1
   48538:	lsl	x26, x1, #3
   4853c:	add	x0, x21, x26
   48540:	cmp	x0, x8
   48544:	b.eq	48554 <mpfr_round_near_x@@Base+0x3e4>  // b.none
   48548:	lsl	x2, x2, #3
   4854c:	mov	x1, x8
   48550:	bl	ba10 <memcpy@plt>
   48554:	mov	x2, x26
   48558:	mov	x0, x21
   4855c:	mov	w1, #0x0                   	// #0
   48560:	bl	c110 <memset@plt>
   48564:	b	48414 <mpfr_round_near_x@@Base+0x2a4>
   48568:	ldur	x5, [x1, #-8]
   4856c:	cmp	w19, #0x0
   48570:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   48574:	and	x9, x5, #0x8000000000000000
   48578:	and	x4, x5, #0x7fffffffffffffff
   4857c:	b.lt	485e0 <mpfr_round_near_x@@Base+0x470>  // b.tstop
   48580:	subs	x3, x0, #0x1
   48584:	ccmp	x4, #0x0, #0x0, ne  // ne = any
   48588:	b.ne	485e8 <mpfr_round_near_x@@Base+0x478>  // b.any
   4858c:	mvn	x4, x0
   48590:	add	x4, x1, x4, lsl #3
   48594:	nop
   48598:	ldr	x5, [x4, x3, lsl #3]
   4859c:	subs	x3, x3, #0x1
   485a0:	ccmp	x5, #0x0, #0x0, ne  // ne = any
   485a4:	b.eq	48598 <mpfr_round_near_x@@Base+0x428>  // b.none
   485a8:	mov	x27, #0x1                   	// #1
   485ac:	cbz	w19, 4827c <mpfr_round_near_x@@Base+0x10c>
   485b0:	b	483c4 <mpfr_round_near_x@@Base+0x254>
   485b4:	cmp	x21, x1
   485b8:	b.eq	48308 <mpfr_round_near_x@@Base+0x198>  // b.none
   485bc:	cmp	x7, x0
   485c0:	b.le	48308 <mpfr_round_near_x@@Base+0x198>
   485c4:	nop
   485c8:	ldr	x0, [x1, x3, lsl #3]
   485cc:	str	x0, [x21, x3, lsl #3]
   485d0:	cmp	x3, x7
   485d4:	add	x3, x3, #0x1
   485d8:	b.lt	485c8 <mpfr_round_near_x@@Base+0x458>  // b.tstop
   485dc:	b	48308 <mpfr_round_near_x@@Base+0x198>
   485e0:	mov	x27, #0x1                   	// #1
   485e4:	b	483c8 <mpfr_round_near_x@@Base+0x258>
   485e8:	mov	x5, x4
   485ec:	mov	x27, #0x1                   	// #1
   485f0:	b	485ac <mpfr_round_near_x@@Base+0x43c>
   485f4:	mov	w2, w25
   485f8:	mov	w1, w19
   485fc:	mov	x0, x22
   48600:	bl	bf40 <mpfr_overflow@plt>
   48604:	b	48308 <mpfr_round_near_x@@Base+0x198>

0000000000048608 <mpfr_custom_get_size@@Base>:
   48608:	sub	x0, x0, #0x1
   4860c:	asr	x0, x0, #6
   48610:	add	x0, x0, #0x1
   48614:	lsl	x0, x0, #3
   48618:	ret
   4861c:	nop

0000000000048620 <mpfr_custom_init@@Base>:
   48620:	ret
   48624:	nop

0000000000048628 <mpfr_custom_get_significand@@Base>:
   48628:	ldr	x0, [x0, #24]
   4862c:	ret

0000000000048630 <mpfr_custom_get_exp@@Base>:
   48630:	ldr	x0, [x0, #16]
   48634:	ret

0000000000048638 <mpfr_custom_move@@Base>:
   48638:	str	x1, [x0, #24]
   4863c:	ret

0000000000048640 <mpfr_custom_init_set@@Base>:
   48640:	tbnz	w1, #31, 48660 <mpfr_custom_init_set@@Base+0x20>
   48644:	cmp	w1, #0x3
   48648:	mov	w5, #0x1                   	// #1
   4864c:	b.ne	48684 <mpfr_custom_init_set@@Base+0x44>  // b.any
   48650:	str	x3, [x0]
   48654:	str	w5, [x0, #8]
   48658:	stp	x2, x4, [x0, #16]
   4865c:	ret
   48660:	cmn	w1, #0x3
   48664:	mov	w5, #0xffffffff            	// #-1
   48668:	neg	w1, w1
   4866c:	b.eq	48650 <mpfr_custom_init_set@@Base+0x10>  // b.none
   48670:	cmp	w1, #0x1
   48674:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   48678:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   4867c:	csel	x2, x2, x1, eq  // eq = none
   48680:	b	48650 <mpfr_custom_init_set@@Base+0x10>
   48684:	cbnz	w1, 48670 <mpfr_custom_init_set@@Base+0x30>
   48688:	mov	x2, #0x2                   	// #2
   4868c:	movk	x2, #0x8000, lsl #48
   48690:	b	48650 <mpfr_custom_init_set@@Base+0x10>
   48694:	nop

0000000000048698 <mpfr_custom_get_kind@@Base>:
   48698:	ldr	x2, [x0, #16]
   4869c:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   486a0:	mov	x1, x0
   486a4:	cmp	x2, x3
   486a8:	b.le	486b8 <mpfr_custom_get_kind@@Base+0x20>
   486ac:	ldr	w0, [x0, #8]
   486b0:	add	w0, w0, w0, lsl #1
   486b4:	ret
   486b8:	b.eq	486dc <mpfr_custom_get_kind@@Base+0x44>  // b.none
   486bc:	mov	x3, #0x2                   	// #2
   486c0:	mov	w0, #0x0                   	// #0
   486c4:	movk	x3, #0x8000, lsl #48
   486c8:	cmp	x2, x3
   486cc:	b.eq	486b4 <mpfr_custom_get_kind@@Base+0x1c>  // b.none
   486d0:	ldr	w0, [x1, #8]
   486d4:	lsl	w0, w0, #1
   486d8:	ret
   486dc:	ldr	w0, [x0, #8]
   486e0:	ret
   486e4:	nop
   486e8:	ldr	x4, [x0, #16]
   486ec:	mov	x3, x0
   486f0:	mov	w0, #0x0                   	// #0
   486f4:	cmp	x4, #0x0
   486f8:	b.le	48748 <mpfr_custom_get_kind@@Base+0xb0>
   486fc:	ldr	x2, [x3]
   48700:	mov	w0, #0x0                   	// #0
   48704:	cmp	x4, x2
   48708:	b.gt	48748 <mpfr_custom_get_kind@@Base+0xb0>
   4870c:	sub	x1, x2, #0x1
   48710:	and	x1, x1, #0xffffffffffffffc0
   48714:	add	x1, x1, #0x40
   48718:	subs	x1, x1, x4
   4871c:	add	x2, x1, #0x3f
   48720:	csel	x2, x2, x1, mi  // mi = first
   48724:	negs	x0, x1
   48728:	ldr	x3, [x3, #24]
   4872c:	asr	x2, x2, #6
   48730:	and	x0, x0, #0x3f
   48734:	and	x1, x1, #0x3f
   48738:	csneg	x1, x1, x0, mi  // mi = first
   4873c:	ldr	x0, [x3, x2, lsl #3]
   48740:	lsr	x0, x0, x1
   48744:	and	w0, w0, #0x1
   48748:	ret
   4874c:	nop

0000000000048750 <mpfr_lngamma@@Base>:
   48750:	stp	x29, x30, [sp, #-48]!
   48754:	mov	x29, sp
   48758:	stp	x19, x20, [sp, #16]
   4875c:	mov	x19, x1
   48760:	mov	x20, x0
   48764:	ldr	x1, [x1, #16]
   48768:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4876c:	cmp	x1, x0
   48770:	b.le	487a8 <mpfr_lngamma@@Base+0x58>
   48774:	ldr	w0, [x19, #8]
   48778:	str	x21, [sp, #32]
   4877c:	mov	w21, w2
   48780:	tbnz	w0, #31, 48808 <mpfr_lngamma@@Base+0xb8>
   48784:	mov	w2, w21
   48788:	mov	x1, x19
   4878c:	mov	x0, x20
   48790:	ldp	x19, x20, [sp, #16]
   48794:	ldr	x21, [sp, #32]
   48798:	ldp	x29, x30, [sp], #48
   4879c:	b	48890 <mpfr_lngamma@@Base+0x140>
   487a0:	ldr	x1, [x19, #16]
   487a4:	ldr	x21, [sp, #32]
   487a8:	mov	x0, #0x2                   	// #2
   487ac:	movk	x0, #0x8000, lsl #48
   487b0:	cmp	x1, x0
   487b4:	b.eq	48860 <mpfr_lngamma@@Base+0x110>  // b.none
   487b8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   487bc:	cmp	x1, x0
   487c0:	b.eq	487e8 <mpfr_lngamma@@Base+0x98>  // b.none
   487c4:	mrs	x1, tpidr_el0
   487c8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   487cc:	ldr	x2, [x0, #2576]
   487d0:	add	x0, x0, #0xa10
   487d4:	blr	x2
   487d8:	add	x0, x1, x0
   487dc:	ldr	w1, [x0]
   487e0:	orr	w1, w1, #0x20
   487e4:	str	w1, [x0]
   487e8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   487ec:	mov	w1, #0x1                   	// #1
   487f0:	str	w1, [x20, #8]
   487f4:	str	x0, [x20, #16]
   487f8:	mov	w0, #0x0                   	// #0
   487fc:	ldp	x19, x20, [sp, #16]
   48800:	ldp	x29, x30, [sp], #48
   48804:	ret
   48808:	mov	x0, x19
   4880c:	bl	c160 <mpfr_integer_p@plt>
   48810:	cbnz	w0, 487a0 <mpfr_lngamma@@Base+0x50>
   48814:	ldr	w0, [x19, #8]
   48818:	tbz	w0, #31, 48784 <mpfr_lngamma@@Base+0x34>
   4881c:	mov	x0, x19
   48820:	bl	486e8 <mpfr_custom_get_kind@@Base+0x50>
   48824:	cbnz	w0, 48784 <mpfr_lngamma@@Base+0x34>
   48828:	mrs	x1, tpidr_el0
   4882c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   48830:	ldr	x2, [x0, #2576]
   48834:	add	x0, x0, #0xa10
   48838:	blr	x2
   4883c:	add	x0, x1, x0
   48840:	mov	x1, #0x2                   	// #2
   48844:	movk	x1, #0x8000, lsl #48
   48848:	ldr	x21, [sp, #32]
   4884c:	str	x1, [x20, #16]
   48850:	ldr	w1, [x0]
   48854:	orr	w1, w1, #0x4
   48858:	str	w1, [x0]
   4885c:	b	487f8 <mpfr_lngamma@@Base+0xa8>
   48860:	mrs	x2, tpidr_el0
   48864:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   48868:	ldr	x3, [x0, #2576]
   4886c:	add	x0, x0, #0xa10
   48870:	blr	x3
   48874:	add	x0, x2, x0
   48878:	str	x1, [x20, #16]
   4887c:	ldr	w1, [x0]
   48880:	orr	w1, w1, #0x4
   48884:	str	w1, [x0]
   48888:	b	487f8 <mpfr_lngamma@@Base+0xa8>
   4888c:	nop
   48890:	stp	x29, x30, [sp, #-480]!
   48894:	mov	x29, sp
   48898:	stp	x23, x24, [sp, #48]
   4889c:	mov	x24, x1
   488a0:	str	x0, [sp, #160]
   488a4:	mov	x0, x1
   488a8:	mov	x1, #0x1                   	// #1
   488ac:	stp	x19, x20, [sp, #16]
   488b0:	mrs	x19, tpidr_el0
   488b4:	stp	x21, x22, [sp, #32]
   488b8:	str	x19, [sp, #128]
   488bc:	str	w2, [sp, #192]
   488c0:	mov	x2, #0x0                   	// #0
   488c4:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   488c8:	mov	w20, w0
   488cc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   488d0:	ldr	x1, [x0, #2576]
   488d4:	add	x0, x0, #0xa10
   488d8:	blr	x1
   488dc:	mov	x1, x19
   488e0:	add	x19, x19, x0
   488e4:	ldr	w0, [x1, x0]
   488e8:	str	w0, [sp, #196]
   488ec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   488f0:	ldr	x2, [x0, #2512]
   488f4:	add	x0, x0, #0x9d0
   488f8:	blr	x2
   488fc:	add	x21, x1, x0
   48900:	ldr	x0, [x1, x0]
   48904:	str	x0, [sp, #216]
   48908:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   4890c:	str	x2, [x21]
   48910:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   48914:	ldr	x3, [x0, #2544]
   48918:	add	x0, x0, #0x9f0
   4891c:	blr	x3
   48920:	add	x22, x1, x0
   48924:	mov	x3, x1
   48928:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   4892c:	ldr	x0, [x3, x0]
   48930:	str	x1, [x22]
   48934:	str	x0, [sp, #224]
   48938:	cbz	w20, 490a4 <mpfr_lngamma@@Base+0x954>
   4893c:	stp	x25, x26, [sp, #64]
   48940:	cmp	w20, #0x0
   48944:	stp	x27, x28, [sp, #80]
   48948:	stp	d8, d9, [sp, #96]
   4894c:	str	d10, [sp, #112]
   48950:	b.gt	48d44 <mpfr_lngamma@@Base+0x5f4>
   48954:	ldr	x0, [sp, #160]
   48958:	ldr	x1, [x24, #16]
   4895c:	ldr	x0, [x0]
   48960:	str	x0, [sp, #152]
   48964:	neg	x0, x0
   48968:	cmp	x1, x0
   4896c:	b.le	48d88 <mpfr_lngamma@@Base+0x638>
   48970:	add	x2, sp, #0x160
   48974:	add	x22, sp, #0x140
   48978:	mov	x19, x2
   4897c:	mov	x0, x22
   48980:	mov	x1, #0x1                   	// #1
   48984:	str	x2, [sp, #248]
   48988:	bl	ca80 <mpfr_init2@plt>
   4898c:	add	x26, sp, #0x180
   48990:	mov	x0, x19
   48994:	mov	x1, #0x1                   	// #1
   48998:	bl	ca80 <mpfr_init2@plt>
   4899c:	add	x27, sp, #0x1a0
   489a0:	mov	x0, x26
   489a4:	mov	x1, #0x1                   	// #1
   489a8:	bl	ca80 <mpfr_init2@plt>
   489ac:	add	x28, sp, #0x1c0
   489b0:	mov	x0, x27
   489b4:	mov	x1, #0x1                   	// #1
   489b8:	bl	ca80 <mpfr_init2@plt>
   489bc:	mov	x0, x28
   489c0:	mov	x1, #0x1                   	// #1
   489c4:	bl	ca80 <mpfr_init2@plt>
   489c8:	ldr	x0, [sp, #152]
   489cc:	cmp	x0, #0x1
   489d0:	b.eq	49d3c <mpfr_lngamma@@Base+0x15ec>  // b.none
   489d4:	b.le	49db0 <mpfr_lngamma@@Base+0x1660>
   489d8:	ldr	x2, [sp, #152]
   489dc:	mov	w0, #0x40                  	// #64
   489e0:	mov	w25, #0x4e                  	// #78
   489e4:	sub	x1, x2, #0x1
   489e8:	clz	x1, x1
   489ec:	sub	w0, w0, w1
   489f0:	add	x0, x2, w0, sxtw
   489f4:	sub	x1, x0, #0x1
   489f8:	clz	x1, x1
   489fc:	sub	w25, w25, w1
   48a00:	add	x25, x0, w25, sxtw
   48a04:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   48a08:	mov	x20, #0x40                  	// #64
   48a0c:	mov	x21, #0xffffffffffffffff    	// #-1
   48a10:	str	x28, [sp, #144]
   48a14:	ldr	d9, [x0, #3632]
   48a18:	mov	x28, x27
   48a1c:	mov	x27, x25
   48a20:	ldr	x23, [sp, #248]
   48a24:	b	48a50 <mpfr_lngamma@@Base+0x300>
   48a28:	add	x0, x25, #0x6
   48a2c:	add	x27, x27, x0
   48a30:	mov	x0, #0xfffffffffffffeff    	// #-257
   48a34:	movk	x0, #0x7fff, lsl #48
   48a38:	sub	x0, x0, x27
   48a3c:	cmp	x0, x20
   48a40:	b.lt	49160 <mpfr_lngamma@@Base+0xa10>  // b.tstop
   48a44:	add	x27, x27, x20
   48a48:	add	x20, x27, x27, lsr #63
   48a4c:	asr	x20, x20, #1
   48a50:	mov	x1, x27
   48a54:	mov	x0, x22
   48a58:	bl	bed0 <mpfr_set_prec@plt>
   48a5c:	mov	x19, #0x1                   	// #1
   48a60:	mov	x1, x27
   48a64:	mov	x0, x23
   48a68:	bl	bed0 <mpfr_set_prec@plt>
   48a6c:	mov	x1, x27
   48a70:	mov	x0, x26
   48a74:	bl	bed0 <mpfr_set_prec@plt>
   48a78:	mov	x1, x27
   48a7c:	mov	x0, x28
   48a80:	bl	bed0 <mpfr_set_prec@plt>
   48a84:	mov	x1, #0x2                   	// #2
   48a88:	mov	w3, #0x3                   	// #3
   48a8c:	mov	x2, x24
   48a90:	mov	x0, x22
   48a94:	bl	ca50 <mpfr_ui_sub@plt>
   48a98:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   48a9c:	ldr	x1, [x0, #2624]
   48aa0:	add	x0, x0, #0xa40
   48aa4:	blr	x1
   48aa8:	mov	w2, #0x0                   	// #0
   48aac:	ldr	x1, [sp, #128]
   48ab0:	add	x1, x1, x0
   48ab4:	mov	x0, x23
   48ab8:	bl	c380 <mpfr_cache@plt>
   48abc:	mov	x1, x22
   48ac0:	mov	x0, x26
   48ac4:	mov	w2, #0x0                   	// #0
   48ac8:	bl	c600 <mpfr_lngamma@plt>
   48acc:	ldr	x1, [sp, #400]
   48ad0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   48ad4:	cmp	x1, x0
   48ad8:	b.eq	48b08 <mpfr_lngamma@@Base+0x3b8>  // b.none
   48adc:	ldr	d8, [sp, #336]
   48ae0:	scvtf	d0, d8
   48ae4:	fmul	d0, d0, d9
   48ae8:	bl	c950 <__gmpfr_ceil_log2@plt>
   48aec:	fmov	x2, d8
   48af0:	ldr	x1, [sp, #400]
   48af4:	add	x19, x2, x0
   48af8:	add	x19, x19, #0x1
   48afc:	subs	x19, x19, x1
   48b00:	csel	x19, x19, x21, pl  // pl = nfrst
   48b04:	add	x19, x19, #0x1
   48b08:	mov	w3, #0x0                   	// #0
   48b0c:	mov	x2, x23
   48b10:	mov	x1, x22
   48b14:	mov	x0, x22
   48b18:	bl	bd50 <mpfr_mul@plt>
   48b1c:	mov	x1, x22
   48b20:	mov	w2, #0x0                   	// #0
   48b24:	mov	x0, x22
   48b28:	ldr	x25, [sp, #336]
   48b2c:	bl	c450 <mpfr_sin@plt>
   48b30:	ldr	x0, [sp, #336]
   48b34:	mov	x1, x24
   48b38:	mov	w3, #0x0                   	// #0
   48b3c:	mov	x2, #0x1                   	// #1
   48b40:	sub	x25, x25, x0
   48b44:	mov	x0, x28
   48b48:	adds	x25, x25, #0x3
   48b4c:	csel	x25, x25, x21, pl  // pl = nfrst
   48b50:	bl	c530 <mpfr_sub_ui@plt>
   48b54:	mov	x2, x23
   48b58:	mov	x1, x28
   48b5c:	mov	w3, #0x0                   	// #0
   48b60:	mov	x0, x28
   48b64:	bl	bd50 <mpfr_mul@plt>
   48b68:	mov	x2, x22
   48b6c:	mov	x1, x28
   48b70:	mov	w3, #0x0                   	// #0
   48b74:	mov	x0, x28
   48b78:	bl	c620 <mpfr_div@plt>
   48b7c:	mov	w3, #0x1                   	// #1
   48b80:	mov	x1, x28
   48b84:	mov	w2, #0x0                   	// #0
   48b88:	mov	x0, x28
   48b8c:	bl	c6a0 <mpfr_set4@plt>
   48b90:	mov	x1, x28
   48b94:	mov	x0, x28
   48b98:	mov	w2, #0x0                   	// #0
   48b9c:	bl	c090 <mpfr_log@plt>
   48ba0:	add	x1, x25, #0x5
   48ba4:	cmp	x1, x27
   48ba8:	b.ge	48a28 <mpfr_lngamma@@Base+0x2d8>  // b.tcont
   48bac:	ldr	x2, [sp, #432]
   48bb0:	add	x0, x25, #0x4
   48bb4:	mov	x25, x1
   48bb8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   48bbc:	cmp	x2, x1
   48bc0:	ldr	x1, [sp, #400]
   48bc4:	str	x1, [sp, #136]
   48bc8:	b.eq	48be4 <mpfr_lngamma@@Base+0x494>  // b.none
   48bcc:	mov	x1, #0x1                   	// #1
   48bd0:	sub	x1, x1, x2
   48bd4:	adds	x0, x1, x0
   48bd8:	csel	x0, x0, x21, pl  // pl = nfrst
   48bdc:	add	x0, x0, #0x1
   48be0:	add	x25, x2, x0
   48be4:	mov	x1, x28
   48be8:	mov	x2, x26
   48bec:	mov	x0, x22
   48bf0:	mov	w3, #0x0                   	// #0
   48bf4:	bl	bb70 <mpfr_sub@plt>
   48bf8:	ldr	x0, [sp, #336]
   48bfc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   48c00:	cmp	x0, x1
   48c04:	b.le	48a30 <mpfr_lngamma@@Base+0x2e0>
   48c08:	ldr	x1, [sp, #136]
   48c0c:	mov	x2, #0x1                   	// #1
   48c10:	sub	x0, x2, x0
   48c14:	add	x1, x1, x19
   48c18:	ldr	x2, [sp, #320]
   48c1c:	cmp	x1, x25
   48c20:	csel	x1, x1, x25, ge  // ge = tcont
   48c24:	adds	x1, x0, x1
   48c28:	sub	x7, x2, #0x1
   48c2c:	ldr	w2, [sp, #192]
   48c30:	csel	x1, x1, x21, pl  // pl = nfrst
   48c34:	ldr	x0, [sp, #344]
   48c38:	cmp	w2, #0x0
   48c3c:	add	x2, x1, #0x1
   48c40:	ldr	x1, [sp, #152]
   48c44:	sub	x2, x27, x2
   48c48:	cinc	x3, x1, eq  // eq = none
   48c4c:	asr	x1, x7, #6
   48c50:	add	x1, x1, #0x1
   48c54:	bl	c370 <mpfr_round_p@plt>
   48c58:	cbz	w0, 48a30 <mpfr_lngamma@@Base+0x2e0>
   48c5c:	mov	x27, x28
   48c60:	ldr	x28, [sp, #144]
   48c64:	mov	x1, x22
   48c68:	ldr	w3, [sp, #328]
   48c6c:	ldr	w20, [sp, #192]
   48c70:	ldr	x19, [sp, #160]
   48c74:	mov	w2, w20
   48c78:	mov	x0, x19
   48c7c:	bl	c6a0 <mpfr_set4@plt>
   48c80:	mov	w23, w0
   48c84:	mov	x0, x22
   48c88:	bl	c070 <mpfr_clear@plt>
   48c8c:	ldr	x0, [sp, #248]
   48c90:	bl	c070 <mpfr_clear@plt>
   48c94:	mov	x0, x26
   48c98:	bl	c070 <mpfr_clear@plt>
   48c9c:	mov	x0, x27
   48ca0:	bl	c070 <mpfr_clear@plt>
   48ca4:	mov	x0, x28
   48ca8:	bl	c070 <mpfr_clear@plt>
   48cac:	ldr	x3, [sp, #128]
   48cb0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   48cb4:	ldr	x2, [x0, #2576]
   48cb8:	add	x0, x0, #0xa10
   48cbc:	blr	x2
   48cc0:	ldr	w2, [sp, #196]
   48cc4:	str	w2, [x3, x0]
   48cc8:	add	x2, x3, x0
   48ccc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   48cd0:	ldr	x5, [x0, #2512]
   48cd4:	add	x0, x0, #0x9d0
   48cd8:	blr	x5
   48cdc:	ldr	x5, [sp, #216]
   48ce0:	str	x5, [x3, x0]
   48ce4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   48ce8:	ldr	x6, [x0, #2544]
   48cec:	add	x0, x0, #0x9f0
   48cf0:	blr	x6
   48cf4:	ldr	x1, [x19, #16]
   48cf8:	ldr	x6, [sp, #224]
   48cfc:	str	x6, [x3, x0]
   48d00:	cmp	x5, x1
   48d04:	ccmp	x6, x1, #0x1, le
   48d08:	b.lt	49058 <mpfr_lngamma@@Base+0x908>  // b.tstop
   48d0c:	cbz	w23, 49138 <mpfr_lngamma@@Base+0x9e8>
   48d10:	ldr	w0, [sp, #196]
   48d14:	ldp	x25, x26, [sp, #64]
   48d18:	orr	w0, w0, #0x8
   48d1c:	ldp	x27, x28, [sp, #80]
   48d20:	ldp	d8, d9, [sp, #96]
   48d24:	ldr	d10, [sp, #112]
   48d28:	str	w0, [x2]
   48d2c:	mov	w0, w23
   48d30:	ldp	x19, x20, [sp, #16]
   48d34:	ldp	x21, x22, [sp, #32]
   48d38:	ldp	x23, x24, [sp, #48]
   48d3c:	ldp	x29, x30, [sp], #480
   48d40:	ret
   48d44:	mov	x0, x24
   48d48:	mov	x2, #0x0                   	// #0
   48d4c:	mov	x1, #0x2                   	// #2
   48d50:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   48d54:	cbz	w0, 49094 <mpfr_lngamma@@Base+0x944>
   48d58:	ldr	x0, [sp, #160]
   48d5c:	ldr	x0, [x0]
   48d60:	mov	x1, x0
   48d64:	str	x1, [sp, #152]
   48d68:	ldr	x0, [x24, #16]
   48d6c:	add	x1, x1, #0x1
   48d70:	cmp	x1, x0
   48d74:	b.lt	49310 <mpfr_lngamma@@Base+0xbc0>  // b.tstop
   48d78:	ldr	x1, [sp, #152]
   48d7c:	neg	x1, x1
   48d80:	cmp	x0, x1
   48d84:	b.gt	492b4 <mpfr_lngamma@@Base+0xb64>
   48d88:	ldr	x0, [sp, #152]
   48d8c:	mov	x22, #0xfffffffffffffeff    	// #-257
   48d90:	ldr	w25, [sp, #192]
   48d94:	add	x26, sp, #0x180
   48d98:	add	x27, sp, #0x1a0
   48d9c:	add	x28, sp, #0x1c0
   48da0:	add	x19, x0, #0xe
   48da4:	mov	x21, #0x40                  	// #64
   48da8:	movk	x22, #0x7fff, lsl #48
   48dac:	str	w20, [sp, #136]
   48db0:	ldr	x20, [sp, #160]
   48db4:	b	48f58 <mpfr_lngamma@@Base+0x808>
   48db8:	mov	x1, x24
   48dbc:	mov	x0, x26
   48dc0:	mov	w2, #0x2                   	// #2
   48dc4:	bl	c090 <mpfr_log@plt>
   48dc8:	ldr	x1, [sp, #384]
   48dcc:	mov	x0, x27
   48dd0:	bl	ca80 <mpfr_init2@plt>
   48dd4:	mov	x1, x26
   48dd8:	mov	w2, #0x3                   	// #3
   48ddc:	mov	x0, x26
   48de0:	bl	bd70 <mpfr_neg@plt>
   48de4:	ldr	w3, [sp, #392]
   48de8:	mov	x1, x26
   48dec:	mov	w2, #0x3                   	// #3
   48df0:	mov	x0, x27
   48df4:	bl	c6a0 <mpfr_set4@plt>
   48df8:	mov	x0, x27
   48dfc:	bl	c120 <mpfr_nextabove@plt>
   48e00:	ldr	x1, [sp, #384]
   48e04:	mov	x0, x28
   48e08:	bl	ca80 <mpfr_init2@plt>
   48e0c:	ldr	w0, [x24, #8]
   48e10:	cmp	w0, #0x0
   48e14:	cset	w2, le
   48e18:	add	w2, w2, #0x2
   48e1c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   48e20:	ldr	x1, [x0, #2608]
   48e24:	add	x0, x0, #0xa30
   48e28:	blr	x1
   48e2c:	ldr	x1, [sp, #128]
   48e30:	add	x23, x1, x0
   48e34:	mov	x0, x28
   48e38:	mov	x1, x23
   48e3c:	bl	c380 <mpfr_cache@plt>
   48e40:	mov	x2, x24
   48e44:	mov	x1, x28
   48e48:	mov	w3, #0x3                   	// #3
   48e4c:	mov	x0, x28
   48e50:	bl	bd50 <mpfr_mul@plt>
   48e54:	mov	w3, #0x3                   	// #3
   48e58:	mov	x2, x28
   48e5c:	mov	x1, x26
   48e60:	mov	x0, x26
   48e64:	bl	bb70 <mpfr_sub@plt>
   48e68:	ldr	w2, [x24, #8]
   48e6c:	mov	x1, x23
   48e70:	mov	x0, x28
   48e74:	cmp	w2, #0x0
   48e78:	cset	w2, gt
   48e7c:	add	w2, w2, #0x2
   48e80:	bl	c380 <mpfr_cache@plt>
   48e84:	mov	x2, x24
   48e88:	mov	x1, x28
   48e8c:	mov	w3, #0x2                   	// #2
   48e90:	mov	x0, x28
   48e94:	bl	bd50 <mpfr_mul@plt>
   48e98:	mov	x2, x28
   48e9c:	mov	x1, x27
   48ea0:	mov	w3, #0x3                   	// #3
   48ea4:	mov	x0, x27
   48ea8:	bl	bb70 <mpfr_sub@plt>
   48eac:	mov	x2, x24
   48eb0:	mov	x1, x24
   48eb4:	mov	w3, #0x2                   	// #2
   48eb8:	mov	x0, x28
   48ebc:	bl	bd50 <mpfr_mul@plt>
   48ec0:	mov	x2, x28
   48ec4:	mov	x1, x27
   48ec8:	mov	w3, #0x2                   	// #2
   48ecc:	mov	x0, x27
   48ed0:	bl	c1a0 <mpfr_add@plt>
   48ed4:	ldr	x1, [x20]
   48ed8:	mov	w2, w25
   48edc:	mov	x0, x26
   48ee0:	bl	c970 <mpfr_prec_round@plt>
   48ee4:	mov	w23, w0
   48ee8:	ldr	x1, [x20]
   48eec:	mov	w2, w25
   48ef0:	mov	x0, x27
   48ef4:	bl	c970 <mpfr_prec_round@plt>
   48ef8:	tbnz	w23, #31, 48fac <mpfr_lngamma@@Base+0x85c>
   48efc:	tbnz	w0, #31, 48f18 <mpfr_lngamma@@Base+0x7c8>
   48f00:	cmp	w23, #0x0
   48f04:	cset	w1, gt
   48f08:	cmp	w0, #0x0
   48f0c:	cset	w0, gt
   48f10:	cmp	w1, w0
   48f14:	b.eq	48fb0 <mpfr_lngamma@@Base+0x860>  // b.none
   48f18:	mov	x0, x26
   48f1c:	bl	c070 <mpfr_clear@plt>
   48f20:	mov	x0, x27
   48f24:	bl	c070 <mpfr_clear@plt>
   48f28:	mov	x0, x28
   48f2c:	bl	c070 <mpfr_clear@plt>
   48f30:	sub	x0, x22, x19
   48f34:	cmp	x0, x21
   48f38:	b.lt	49120 <mpfr_lngamma@@Base+0x9d0>  // b.tstop
   48f3c:	add	x19, x19, x21
   48f40:	ldr	x0, [x24, #16]
   48f44:	add	x21, x19, x19, lsr #63
   48f48:	neg	x0, x0
   48f4c:	asr	x21, x21, #1
   48f50:	cmp	x0, x19
   48f54:	b.lt	49178 <mpfr_lngamma@@Base+0xa28>  // b.tstop
   48f58:	mov	x0, x26
   48f5c:	mov	x1, x19
   48f60:	bl	ca80 <mpfr_init2@plt>
   48f64:	ldr	w0, [x24, #8]
   48f68:	cmp	w0, #0x0
   48f6c:	b.gt	48db8 <mpfr_lngamma@@Base+0x668>
   48f70:	ldr	x1, [x24]
   48f74:	mov	x0, x27
   48f78:	bl	ca80 <mpfr_init2@plt>
   48f7c:	mov	x1, x24
   48f80:	mov	x0, x27
   48f84:	mov	w2, #0x0                   	// #0
   48f88:	bl	bd70 <mpfr_neg@plt>
   48f8c:	mov	x1, x27
   48f90:	mov	x0, x26
   48f94:	mov	w2, #0x2                   	// #2
   48f98:	bl	c090 <mpfr_log@plt>
   48f9c:	ldr	x1, [sp, #384]
   48fa0:	mov	x0, x27
   48fa4:	bl	bed0 <mpfr_set_prec@plt>
   48fa8:	b	48dd4 <mpfr_lngamma@@Base+0x684>
   48fac:	tbz	w0, #31, 48f18 <mpfr_lngamma@@Base+0x7c8>
   48fb0:	mov	x1, x27
   48fb4:	mov	x0, x26
   48fb8:	mov	w2, #0x1                   	// #1
   48fbc:	bl	c9a0 <mpfr_cmp3@plt>
   48fc0:	cbnz	w0, 48f18 <mpfr_lngamma@@Base+0x7c8>
   48fc4:	ldr	w3, [sp, #424]
   48fc8:	mov	x1, x27
   48fcc:	ldr	w20, [sp, #192]
   48fd0:	ldr	x19, [sp, #160]
   48fd4:	mov	w2, w20
   48fd8:	mov	x0, x19
   48fdc:	bl	c6a0 <mpfr_set4@plt>
   48fe0:	mov	x0, x26
   48fe4:	bl	c070 <mpfr_clear@plt>
   48fe8:	mov	x0, x27
   48fec:	bl	c070 <mpfr_clear@plt>
   48ff0:	mov	x0, x28
   48ff4:	bl	c070 <mpfr_clear@plt>
   48ff8:	ldr	x3, [sp, #128]
   48ffc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   49000:	ldr	x2, [x0, #2576]
   49004:	add	x0, x0, #0xa10
   49008:	blr	x2
   4900c:	ldr	w2, [sp, #196]
   49010:	str	w2, [x3, x0]
   49014:	add	x2, x3, x0
   49018:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4901c:	ldr	x5, [x0, #2512]
   49020:	add	x0, x0, #0x9d0
   49024:	blr	x5
   49028:	ldr	x5, [sp, #216]
   4902c:	str	x5, [x3, x0]
   49030:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   49034:	ldr	x6, [x0, #2544]
   49038:	add	x0, x0, #0x9f0
   4903c:	blr	x6
   49040:	ldr	x1, [x19, #16]
   49044:	ldr	x6, [sp, #224]
   49048:	str	x6, [x3, x0]
   4904c:	cmp	x6, x1
   49050:	ccmp	x5, x1, #0x0, ge  // ge = tcont
   49054:	b.le	48d0c <mpfr_lngamma@@Base+0x5bc>
   49058:	mov	w2, w20
   4905c:	mov	w1, w23
   49060:	mov	x0, x19
   49064:	bl	cb30 <mpfr_check_range@plt>
   49068:	ldp	x25, x26, [sp, #64]
   4906c:	mov	w23, w0
   49070:	ldp	x27, x28, [sp, #80]
   49074:	ldp	d8, d9, [sp, #96]
   49078:	ldr	d10, [sp, #112]
   4907c:	mov	w0, w23
   49080:	ldp	x19, x20, [sp, #16]
   49084:	ldp	x21, x22, [sp, #32]
   49088:	ldp	x23, x24, [sp, #48]
   4908c:	ldp	x29, x30, [sp], #480
   49090:	ret
   49094:	ldp	x25, x26, [sp, #64]
   49098:	ldp	x27, x28, [sp, #80]
   4909c:	ldp	d8, d9, [sp, #96]
   490a0:	ldr	d10, [sp, #112]
   490a4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   490a8:	ldr	x1, [x0, #2576]
   490ac:	add	x0, x0, #0xa10
   490b0:	blr	x1
   490b4:	mov	w2, #0x1                   	// #1
   490b8:	ldr	w1, [sp, #196]
   490bc:	mov	w23, #0x0                   	// #0
   490c0:	ldr	x3, [sp, #128]
   490c4:	ldr	x4, [sp, #224]
   490c8:	str	w1, [x3, x0]
   490cc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   490d0:	ldr	x1, [x0, #2512]
   490d4:	add	x0, x0, #0x9d0
   490d8:	blr	x1
   490dc:	ldr	x1, [sp, #216]
   490e0:	str	x1, [x3, x0]
   490e4:	ldp	x19, x20, [sp, #16]
   490e8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   490ec:	ldr	x1, [x0, #2544]
   490f0:	add	x0, x0, #0x9f0
   490f4:	blr	x1
   490f8:	str	x4, [x3, x0]
   490fc:	ldr	x0, [sp, #160]
   49100:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   49104:	ldp	x21, x22, [sp, #32]
   49108:	str	w2, [x0, #8]
   4910c:	str	x1, [x0, #16]
   49110:	mov	w0, w23
   49114:	ldp	x23, x24, [sp, #48]
   49118:	ldp	x29, x30, [sp], #480
   4911c:	ret
   49120:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   49124:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   49128:	add	x2, x2, #0x830
   4912c:	add	x0, x0, #0xd70
   49130:	mov	w1, #0x131                 	// #305
   49134:	bl	cb40 <mpfr_assert_fail@plt>
   49138:	mov	w0, w23
   4913c:	ldr	d10, [sp, #112]
   49140:	ldp	x19, x20, [sp, #16]
   49144:	ldp	x21, x22, [sp, #32]
   49148:	ldp	x23, x24, [sp, #48]
   4914c:	ldp	x25, x26, [sp, #64]
   49150:	ldp	x27, x28, [sp, #80]
   49154:	ldp	d8, d9, [sp, #96]
   49158:	ldp	x29, x30, [sp], #480
   4915c:	ret
   49160:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   49164:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   49168:	add	x2, x2, #0xeb0
   4916c:	add	x0, x0, #0xd70
   49170:	mov	w1, #0x1a5                 	// #421
   49174:	bl	cb40 <mpfr_assert_fail@plt>
   49178:	ldr	x2, [sp, #160]
   4917c:	add	x22, sp, #0x140
   49180:	ldr	w20, [sp, #136]
   49184:	mov	x0, x22
   49188:	add	x19, sp, #0x160
   4918c:	mov	x1, #0x1                   	// #1
   49190:	ldr	x2, [x2]
   49194:	str	x2, [sp, #152]
   49198:	str	x19, [sp, #248]
   4919c:	bl	ca80 <mpfr_init2@plt>
   491a0:	mov	x0, x19
   491a4:	mov	x1, #0x1                   	// #1
   491a8:	bl	ca80 <mpfr_init2@plt>
   491ac:	mov	x0, x26
   491b0:	mov	x1, #0x1                   	// #1
   491b4:	bl	ca80 <mpfr_init2@plt>
   491b8:	mov	x0, x27
   491bc:	mov	x1, #0x1                   	// #1
   491c0:	bl	ca80 <mpfr_init2@plt>
   491c4:	mov	x0, x28
   491c8:	mov	x1, #0x1                   	// #1
   491cc:	bl	ca80 <mpfr_init2@plt>
   491d0:	tbnz	w20, #31, 489c8 <mpfr_lngamma@@Base+0x278>
   491d4:	ldr	x0, [sp, #152]
   491d8:	cmp	x0, #0x1
   491dc:	b.eq	49d1c <mpfr_lngamma@@Base+0x15cc>  // b.none
   491e0:	b.le	49dc8 <mpfr_lngamma@@Base+0x1678>
   491e4:	ldr	x3, [sp, #152]
   491e8:	mov	w0, #0x40                  	// #64
   491ec:	mov	w2, #0x4d                  	// #77
   491f0:	sub	x1, x3, #0x1
   491f4:	clz	x1, x1
   491f8:	sub	w0, w0, w1
   491fc:	add	x0, x3, w0, sxtw
   49200:	sub	x1, x0, #0x1
   49204:	clz	x1, x1
   49208:	sub	w1, w2, w1
   4920c:	add	x0, x0, w1, sxtw
   49210:	str	x0, [sp, #144]
   49214:	mov	x0, #0x4048000000000000    	// #4631952216750555136
   49218:	fmov	d8, x0
   4921c:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   49220:	stp	x24, x27, [sp, #176]
   49224:	mov	x1, #0x40                  	// #64
   49228:	ldr	d10, [x0, #2504]
   4922c:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   49230:	ldr	x27, [sp, #248]
   49234:	str	x22, [sp, #200]
   49238:	ldr	d9, [x0, #2512]
   4923c:	str	x1, [sp, #264]
   49240:	ldr	x0, [sp, #200]
   49244:	mov	x1, #0x35                  	// #53
   49248:	bl	bed0 <mpfr_set_prec@plt>
   4924c:	ldr	x0, [sp, #144]
   49250:	cmp	x0, #0x64
   49254:	b.le	493b4 <mpfr_lngamma@@Base+0xc64>
   49258:	ldr	x0, [sp, #144]
   4925c:	cmp	x0, #0x1f4
   49260:	b.le	49bb8 <mpfr_lngamma@@Base+0x1468>
   49264:	ldr	x0, [sp, #144]
   49268:	cmp	x0, #0x3e8
   4926c:	b.le	49c3c <mpfr_lngamma@@Base+0x14ec>
   49270:	ldr	x0, [sp, #144]
   49274:	cmp	x0, #0x7d0
   49278:	b.le	49c24 <mpfr_lngamma@@Base+0x14d4>
   4927c:	ldr	x1, [sp, #144]
   49280:	mov	x0, #0x1388                	// #5000
   49284:	cmp	x1, x0
   49288:	b.le	49c0c <mpfr_lngamma@@Base+0x14bc>
   4928c:	ldr	x1, [sp, #144]
   49290:	mov	x0, #0x2710                	// #10000
   49294:	mov	w3, #0x0                   	// #0
   49298:	cmp	x1, x0
   4929c:	b.gt	49d28 <mpfr_lngamma@@Base+0x15d8>
   492a0:	ldr	x0, [sp, #200]
   492a4:	mov	x2, #0xfffffffffffffff6    	// #-10
   492a8:	mov	x1, #0xd9a                 	// #3482
   492ac:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   492b0:	b	493c8 <mpfr_lngamma@@Base+0xc78>
   492b4:	add	x2, sp, #0x160
   492b8:	add	x22, sp, #0x140
   492bc:	mov	x19, x2
   492c0:	mov	x0, x22
   492c4:	mov	x1, #0x1                   	// #1
   492c8:	str	x2, [sp, #248]
   492cc:	bl	ca80 <mpfr_init2@plt>
   492d0:	add	x26, sp, #0x180
   492d4:	mov	x0, x19
   492d8:	mov	x1, #0x1                   	// #1
   492dc:	bl	ca80 <mpfr_init2@plt>
   492e0:	add	x27, sp, #0x1a0
   492e4:	mov	x0, x26
   492e8:	mov	x1, #0x1                   	// #1
   492ec:	bl	ca80 <mpfr_init2@plt>
   492f0:	add	x28, sp, #0x1c0
   492f4:	mov	x0, x27
   492f8:	mov	x1, #0x1                   	// #1
   492fc:	bl	ca80 <mpfr_init2@plt>
   49300:	mov	x0, x28
   49304:	mov	x1, #0x1                   	// #1
   49308:	bl	ca80 <mpfr_init2@plt>
   4930c:	b	491d4 <mpfr_lngamma@@Base+0xa84>
   49310:	ldr	x2, [sp, #152]
   49314:	add	x0, sp, #0x160
   49318:	mov	x1, #0x34                  	// #52
   4931c:	mov	x23, x0
   49320:	cmp	x2, #0x34
   49324:	str	x0, [sp, #248]
   49328:	csel	x1, x2, x1, ge  // ge = tcont
   4932c:	add	x1, x1, #0xa
   49330:	bl	ca80 <mpfr_init2@plt>
   49334:	mov	x1, x24
   49338:	mov	w2, #0x2                   	// #2
   4933c:	mov	x0, x23
   49340:	bl	c090 <mpfr_log@plt>
   49344:	mov	x1, x23
   49348:	mov	w3, #0x2                   	// #2
   4934c:	mov	x2, #0x1                   	// #1
   49350:	mov	x0, x23
   49354:	bl	c530 <mpfr_sub_ui@plt>
   49358:	mov	x1, x24
   4935c:	mov	x2, x23
   49360:	mov	x0, x23
   49364:	mov	w3, #0x2                   	// #2
   49368:	bl	bd50 <mpfr_mul@plt>
   4936c:	ldr	x0, [sp, #368]
   49370:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   49374:	cmp	x0, x1
   49378:	b.eq	49d68 <mpfr_lngamma@@Base+0x1618>  // b.none
   4937c:	ldr	x2, [sp, #352]
   49380:	mov	x1, #0x4                   	// #4
   49384:	movk	x1, #0x8000, lsl #48
   49388:	sub	x3, x0, x2
   4938c:	cmp	x3, #0x3d
   49390:	ccmp	x0, x1, #0x1, gt
   49394:	b.ge	49c90 <mpfr_lngamma@@Base+0x1540>  // b.tcont
   49398:	ldr	x0, [sp, #248]
   4939c:	bl	c070 <mpfr_clear@plt>
   493a0:	ldr	x0, [sp, #160]
   493a4:	ldr	x0, [x0]
   493a8:	str	x0, [sp, #152]
   493ac:	ldr	x0, [x24, #16]
   493b0:	b	48d78 <mpfr_lngamma@@Base+0x628>
   493b4:	ldr	x0, [sp, #200]
   493b8:	mov	w3, #0x0                   	// #0
   493bc:	mov	x2, #0xfffffffffffffff6    	// #-10
   493c0:	mov	x1, #0x266                 	// #614
   493c4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   493c8:	ldr	x19, [sp, #200]
   493cc:	mov	w3, #0x2                   	// #2
   493d0:	mov	x2, #0xfffffffffffffffc    	// #-4
   493d4:	mov	x1, #0x4                   	// #4
   493d8:	mov	x0, x19
   493dc:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   493e0:	ldr	x2, [sp, #144]
   493e4:	mov	x0, #0x3                   	// #3
   493e8:	mov	x1, x19
   493ec:	mov	w3, #0x2                   	// #2
   493f0:	str	x0, [sp, #168]
   493f4:	mov	x0, x19
   493f8:	bl	ba50 <mpfr_mul_ui@plt>
   493fc:	ldr	x0, [sp, #176]
   49400:	mov	x1, x19
   49404:	mov	w2, #0x1                   	// #1
   49408:	bl	c9a0 <mpfr_cmp3@plt>
   4940c:	tbnz	w0, #31, 49b80 <mpfr_lngamma@@Base+0x1430>
   49410:	ldr	x20, [sp, #144]
   49414:	ldr	x19, [sp, #200]
   49418:	mov	x1, x20
   4941c:	mov	x0, x19
   49420:	bl	bed0 <mpfr_set_prec@plt>
   49424:	mov	x1, x20
   49428:	mov	x0, x27
   4942c:	bl	bed0 <mpfr_set_prec@plt>
   49430:	mov	x1, x20
   49434:	mov	x0, x26
   49438:	bl	bed0 <mpfr_set_prec@plt>
   4943c:	ldr	x21, [sp, #184]
   49440:	mov	x1, x20
   49444:	mov	x0, x21
   49448:	bl	bed0 <mpfr_set_prec@plt>
   4944c:	mov	x1, x20
   49450:	mov	x0, x28
   49454:	bl	bed0 <mpfr_set_prec@plt>
   49458:	ldp	x2, x1, [sp, #168]
   4945c:	mov	w3, #0x0                   	// #0
   49460:	mov	x0, x28
   49464:	bl	c260 <mpfr_add_ui@plt>
   49468:	mov	x1, x28
   4946c:	mov	w2, #0x0                   	// #0
   49470:	mov	x0, x19
   49474:	bl	c090 <mpfr_log@plt>
   49478:	mov	x1, x28
   4947c:	mov	w3, #0x0                   	// #0
   49480:	mov	x2, #0x1                   	// #1
   49484:	mov	x0, x27
   49488:	bl	c2c0 <mpfr_mul_2ui@plt>
   4948c:	mov	x1, x27
   49490:	mov	w3, #0x0                   	// #0
   49494:	mov	x2, #0x1                   	// #1
   49498:	mov	x0, x27
   4949c:	bl	c530 <mpfr_sub_ui@plt>
   494a0:	mov	x2, x27
   494a4:	mov	x1, x19
   494a8:	mov	w3, #0x0                   	// #0
   494ac:	mov	x0, x19
   494b0:	bl	bd50 <mpfr_mul@plt>
   494b4:	mov	x1, x19
   494b8:	mov	w3, #0x0                   	// #0
   494bc:	mov	x2, #0x1                   	// #1
   494c0:	mov	x0, x19
   494c4:	bl	c8f0 <mpfr_div_2ui@plt>
   494c8:	mov	x2, x28
   494cc:	mov	x1, x19
   494d0:	mov	w3, #0x0                   	// #0
   494d4:	mov	x0, x19
   494d8:	bl	bb70 <mpfr_sub@plt>
   494dc:	mov	x2, x28
   494e0:	mov	w3, #0x0                   	// #0
   494e4:	mov	x1, #0x1                   	// #1
   494e8:	mov	x0, x26
   494ec:	bl	c2f0 <mpfr_ui_div@plt>
   494f0:	mov	x1, x26
   494f4:	mov	w3, #0x0                   	// #0
   494f8:	mov	x2, #0xc                   	// #12
   494fc:	mov	x0, x27
   49500:	bl	cc60 <mpfr_div_ui@plt>
   49504:	ldr	w3, [sp, #360]
   49508:	mov	x1, x27
   4950c:	mov	w2, #0x0                   	// #0
   49510:	mov	x0, x21
   49514:	bl	c6a0 <mpfr_set4@plt>
   49518:	str	x19, [sp, #200]
   4951c:	mov	x2, x21
   49520:	mov	x1, x19
   49524:	mov	w3, #0x0                   	// #0
   49528:	mov	x0, x19
   4952c:	bl	c1a0 <mpfr_add@plt>
   49530:	mov	x1, x26
   49534:	mov	x2, x26
   49538:	mov	x0, x26
   4953c:	mov	w3, #0x0                   	// #0
   49540:	bl	bd50 <mpfr_mul@plt>
   49544:	ldr	x0, [sp, #432]
   49548:	ldr	x1, [sp, #336]
   4954c:	add	x0, x20, x0
   49550:	cmp	x1, x0
   49554:	b.gt	49c84 <mpfr_lngamma@@Base+0x1534>
   49558:	mov	x21, x27
   4955c:	mov	x19, #0x2                   	// #2
   49560:	mov	x20, #0xfffffffffffffff9    	// #-7
   49564:	mov	x27, x19
   49568:	mov	x22, #0x80000000            	// #2147483648
   4956c:	mov	x23, #0xfffffffffffffffb    	// #-5
   49570:	mov	x24, #0xfffffffffffffffa    	// #-6
   49574:	mov	x25, #0xfffffffffffffffc    	// #-4
   49578:	str	x26, [sp, #136]
   4957c:	str	x28, [sp, #208]
   49580:	ldr	x28, [sp, #200]
   49584:	b	49620 <mpfr_lngamma@@Base+0xed0>
   49588:	mul	x2, x2, x19
   4958c:	add	x19, x19, #0x4
   49590:	mov	x1, x21
   49594:	mov	w3, #0x0                   	// #0
   49598:	mov	x0, x21
   4959c:	mul	x26, x19, x27
   495a0:	bl	ba50 <mpfr_mul_ui@plt>
   495a4:	mov	x2, x26
   495a8:	mov	x1, x21
   495ac:	mov	w3, #0x0                   	// #0
   495b0:	mov	x0, x21
   495b4:	bl	cc60 <mpfr_div_ui@plt>
   495b8:	add	x2, x26, x27, lsl #2
   495bc:	mov	x1, x21
   495c0:	mov	x0, x21
   495c4:	mov	w3, #0x0                   	// #0
   495c8:	bl	cc60 <mpfr_div_ui@plt>
   495cc:	mov	x0, x27
   495d0:	bl	c830 <mpfr_bernoulli_cache@plt>
   495d4:	ldr	x26, [sp, #184]
   495d8:	mov	x2, x0
   495dc:	mov	x1, x21
   495e0:	mov	w3, #0x0                   	// #0
   495e4:	mov	x0, x26
   495e8:	bl	c4d0 <mpfr_mul_z@plt>
   495ec:	mov	x2, x26
   495f0:	mov	x1, x28
   495f4:	mov	x0, x28
   495f8:	mov	w3, #0x0                   	// #0
   495fc:	bl	c1a0 <mpfr_add@plt>
   49600:	sub	x20, x20, #0x2
   49604:	ldr	x2, [sp, #144]
   49608:	add	x27, x27, #0x1
   4960c:	ldr	x0, [sp, #432]
   49610:	ldr	x1, [sp, #336]
   49614:	add	x0, x2, x0
   49618:	cmp	x0, x1
   4961c:	b.lt	496c8 <mpfr_lngamma@@Base+0xf78>  // b.tstop
   49620:	ldr	x2, [sp, #136]
   49624:	mov	x1, x21
   49628:	mov	x0, x21
   4962c:	mov	w3, #0x0                   	// #0
   49630:	lsl	x26, x27, #1
   49634:	bl	bd50 <mpfr_mul@plt>
   49638:	cmp	x27, x22
   4963c:	sub	x2, x27, #0x1
   49640:	b.ls	49588 <mpfr_lngamma@@Base+0xe38>  // b.plast
   49644:	sub	x2, x23, x20
   49648:	mov	x1, x21
   4964c:	mov	x0, x21
   49650:	mov	w3, #0x0                   	// #0
   49654:	bl	ba50 <mpfr_mul_ui@plt>
   49658:	add	x19, x19, #0x4
   4965c:	sub	x2, x24, x20
   49660:	mov	x1, x21
   49664:	mov	x0, x21
   49668:	mov	w3, #0x0                   	// #0
   4966c:	bl	ba50 <mpfr_mul_ui@plt>
   49670:	mov	x2, x26
   49674:	mov	x1, x21
   49678:	mov	x0, x21
   4967c:	mov	w3, #0x0                   	// #0
   49680:	bl	cc60 <mpfr_div_ui@plt>
   49684:	sub	x2, x25, x20
   49688:	mov	x1, x21
   4968c:	mov	x0, x21
   49690:	mov	w3, #0x0                   	// #0
   49694:	bl	cc60 <mpfr_div_ui@plt>
   49698:	mov	x2, x26
   4969c:	mov	x1, x21
   496a0:	mov	x0, x21
   496a4:	mov	w3, #0x0                   	// #0
   496a8:	bl	cc60 <mpfr_div_ui@plt>
   496ac:	mov	x0, #0xfffffffffffffffe    	// #-2
   496b0:	mov	x1, x21
   496b4:	sub	x2, x0, x20
   496b8:	mov	w3, #0x0                   	// #0
   496bc:	mov	x0, x21
   496c0:	bl	cc60 <mpfr_div_ui@plt>
   496c4:	b	495cc <mpfr_lngamma@@Base+0xe7c>
   496c8:	ldr	x26, [sp, #136]
   496cc:	str	x27, [sp, #288]
   496d0:	ldr	x28, [sp, #208]
   496d4:	mov	x27, x21
   496d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   496dc:	ldr	x1, [x0, #2624]
   496e0:	add	x0, x0, #0xa40
   496e4:	blr	x1
   496e8:	mov	w2, #0x0                   	// #0
   496ec:	ldr	x1, [sp, #128]
   496f0:	mov	x20, #0x2                   	// #2
   496f4:	ldr	x19, [sp, #184]
   496f8:	add	x1, x1, x0
   496fc:	mov	x0, x19
   49700:	bl	c380 <mpfr_cache@plt>
   49704:	mov	x1, x19
   49708:	mov	w3, #0x0                   	// #0
   4970c:	mov	x2, #0x1                   	// #1
   49710:	mov	x0, x19
   49714:	bl	c2c0 <mpfr_mul_2ui@plt>
   49718:	ldr	x1, [sp, #176]
   4971c:	mov	w2, #0x0                   	// #0
   49720:	mov	x0, x27
   49724:	ldr	w3, [x1, #8]
   49728:	bl	c6a0 <mpfr_set4@plt>
   4972c:	ldr	x2, [sp, #168]
   49730:	mov	x0, x20
   49734:	nop
   49738:	mov	x23, x0
   4973c:	add	x0, x0, #0x1
   49740:	mul	x1, x0, x0
   49744:	cmp	x1, x2
   49748:	b.cc	49738 <mpfr_lngamma@@Base+0xfe8>  // b.lo, b.ul, b.last
   4974c:	str	x0, [sp, #136]
   49750:	lsl	x0, x0, #5
   49754:	str	x0, [sp, #304]
   49758:	bl	ccf0 <mpfr_allocate_func@plt>
   4975c:	str	x0, [sp, #256]
   49760:	cmp	x23, #0x1
   49764:	b.ls	49c68 <mpfr_lngamma@@Base+0x1518>  // b.plast
   49768:	ldr	x0, [sp, #256]
   4976c:	ldr	x22, [sp, #144]
   49770:	add	x20, x0, #0x40
   49774:	add	x19, x0, x23, lsl #5
   49778:	mov	x21, x20
   4977c:	nop
   49780:	mov	x0, x21
   49784:	mov	x1, x22
   49788:	bl	ca80 <mpfr_init2@plt>
   4978c:	cmp	x19, x21
   49790:	add	x21, x21, #0x20
   49794:	b.ne	49780 <mpfr_lngamma@@Base+0x1030>  // b.any
   49798:	ldr	x1, [sp, #176]
   4979c:	mov	x0, x20
   497a0:	mov	w2, #0x0                   	// #0
   497a4:	str	x20, [sp, #272]
   497a8:	bl	c400 <mpfr_sqr@plt>
   497ac:	cmp	x23, #0x2
   497b0:	b.ls	497f0 <mpfr_lngamma@@Base+0x10a0>  // b.plast
   497b4:	ldr	x21, [sp, #256]
   497b8:	mov	x19, #0x3                   	// #3
   497bc:	ldr	x22, [sp, #176]
   497c0:	add	x20, x21, #0x60
   497c4:	nop
   497c8:	tbnz	w19, #0, 499b0 <mpfr_lngamma@@Base+0x1260>
   497cc:	lsr	x1, x19, #1
   497d0:	mov	x0, x20
   497d4:	mov	w2, #0x0                   	// #0
   497d8:	add	x1, x21, x1, lsl #5
   497dc:	bl	c400 <mpfr_sqr@plt>
   497e0:	cmp	x19, x23
   497e4:	add	x20, x20, #0x20
   497e8:	add	x19, x19, #0x1
   497ec:	b.ne	497c8 <mpfr_lngamma@@Base+0x1078>  // b.any
   497f0:	ldr	x0, [sp, #136]
   497f4:	lsl	x0, x0, #4
   497f8:	str	x0, [sp, #312]
   497fc:	bl	ccf0 <mpfr_allocate_func@plt>
   49800:	mov	x19, x0
   49804:	add	x1, x23, #0x1
   49808:	mov	x20, x0
   4980c:	str	x0, [sp, #280]
   49810:	add	x21, x0, x1, lsl #4
   49814:	str	x21, [sp, #296]
   49818:	mov	x0, x20
   4981c:	add	x20, x20, #0x10
   49820:	bl	bf90 <mpfr_mpz_init@plt>
   49824:	cmp	x21, x20
   49828:	b.ne	49818 <mpfr_lngamma@@Base+0x10c8>  // b.any
   4982c:	ldr	x0, [sp, #136]
   49830:	ldr	x1, [sp, #168]
   49834:	cmp	x0, x1
   49838:	b.hi	49c54 <mpfr_lngamma@@Base+0x1504>  // b.pmore
   4983c:	add	x0, x19, #0x10
   49840:	str	x0, [sp, #232]
   49844:	ldr	x0, [sp, #256]
   49848:	mov	x25, #0x1                   	// #1
   4984c:	mov	x1, #0x1                   	// #1
   49850:	str	x27, [sp, #208]
   49854:	add	x0, x0, #0x20
   49858:	str	x0, [sp, #240]
   4985c:	mov	x0, x19
   49860:	bl	bcb0 <__gmpz_set_ui@plt>
   49864:	cbz	x23, 4999c <mpfr_lngamma@@Base+0x124c>
   49868:	ldr	x27, [sp, #232]
   4986c:	mov	x1, x19
   49870:	sub	x25, x25, #0x1
   49874:	mov	x21, #0x1                   	// #1
   49878:	mov	x0, x27
   4987c:	bl	bfa0 <__gmpz_set@plt>
   49880:	add	x2, x21, x25
   49884:	mov	x1, x19
   49888:	mov	x0, x19
   4988c:	bl	c100 <__gmpz_mul_ui@plt>
   49890:	mov	x22, x27
   49894:	cmp	x21, x23
   49898:	b.eq	49900 <mpfr_lngamma@@Base+0x11b0>  // b.none
   4989c:	nop
   498a0:	add	x21, x21, #0x1
   498a4:	add	x24, x27, #0x10
   498a8:	add	x20, x21, x25
   498ac:	mov	x0, x24
   498b0:	mov	x1, x27
   498b4:	bl	bfa0 <__gmpz_set@plt>
   498b8:	mov	x1, x27
   498bc:	mov	x0, x27
   498c0:	mov	x2, x20
   498c4:	bl	c100 <__gmpz_mul_ui@plt>
   498c8:	sub	x2, x27, #0x10
   498cc:	mov	x1, x27
   498d0:	mov	x0, x27
   498d4:	mov	x27, x2
   498d8:	bl	c9c0 <__gmpz_add@plt>
   498dc:	cmp	x19, x27
   498e0:	b.ne	498b8 <mpfr_lngamma@@Base+0x1168>  // b.any
   498e4:	add	x2, x21, x25
   498e8:	mov	x1, x19
   498ec:	mov	x0, x19
   498f0:	bl	c100 <__gmpz_mul_ui@plt>
   498f4:	mov	x27, x24
   498f8:	cmp	x21, x23
   498fc:	b.ne	498a0 <mpfr_lngamma@@Base+0x1150>  // b.any
   49900:	mov	x1, x19
   49904:	mov	x0, x26
   49908:	mov	w2, #0x0                   	// #0
   4990c:	bl	c240 <mpfr_set_z@plt>
   49910:	ldr	x21, [sp, #176]
   49914:	mov	x20, #0x0                   	// #0
   49918:	ldr	x24, [sp, #240]
   4991c:	nop
   49920:	cmp	x20, #0x0
   49924:	add	x1, x24, x20, lsl #5
   49928:	mov	x2, x22
   4992c:	csel	x1, x1, x21, ne  // ne = any
   49930:	mov	w3, #0x0                   	// #0
   49934:	mov	x0, x28
   49938:	bl	c4d0 <mpfr_mul_z@plt>
   4993c:	add	x20, x20, #0x1
   49940:	mov	x2, x28
   49944:	mov	x1, x26
   49948:	mov	x0, x26
   4994c:	mov	w3, #0x0                   	// #0
   49950:	bl	c1a0 <mpfr_add@plt>
   49954:	add	x22, x22, #0x10
   49958:	cmp	x23, x20
   4995c:	b.ne	49920 <mpfr_lngamma@@Base+0x11d0>  // b.any
   49960:	ldr	x0, [sp, #208]
   49964:	mov	x2, x26
   49968:	mov	w3, #0x0                   	// #0
   4996c:	mov	x1, x0
   49970:	bl	bd50 <mpfr_mul@plt>
   49974:	ldr	x25, [sp, #136]
   49978:	ldr	x1, [sp, #168]
   4997c:	add	x0, x23, x25
   49980:	cmp	x1, x0
   49984:	b.cc	499c8 <mpfr_lngamma@@Base+0x1278>  // b.lo, b.ul, b.last
   49988:	mov	x1, #0x1                   	// #1
   4998c:	str	x0, [sp, #136]
   49990:	mov	x0, x19
   49994:	bl	bcb0 <__gmpz_set_ui@plt>
   49998:	cbnz	x23, 49868 <mpfr_lngamma@@Base+0x1118>
   4999c:	mov	x1, x19
   499a0:	mov	x0, x26
   499a4:	mov	w2, #0x0                   	// #0
   499a8:	bl	c240 <mpfr_set_z@plt>
   499ac:	b	49960 <mpfr_lngamma@@Base+0x1210>
   499b0:	mov	x2, x22
   499b4:	sub	x1, x20, #0x20
   499b8:	mov	x0, x20
   499bc:	mov	w3, #0x0                   	// #0
   499c0:	bl	bd50 <mpfr_mul@plt>
   499c4:	b	497e0 <mpfr_lngamma@@Base+0x1090>
   499c8:	ldr	x27, [sp, #208]
   499cc:	ldr	x20, [sp, #280]
   499d0:	ldr	x21, [sp, #296]
   499d4:	nop
   499d8:	mov	x0, x20
   499dc:	add	x20, x20, #0x10
   499e0:	bl	c170 <mpfr_mpz_clear@plt>
   499e4:	cmp	x20, x21
   499e8:	b.ne	499d8 <mpfr_lngamma@@Base+0x1288>  // b.any
   499ec:	ldr	x1, [sp, #312]
   499f0:	mov	x0, x19
   499f4:	bl	cc20 <mpfr_free_func@plt>
   499f8:	ldr	x0, [sp, #256]
   499fc:	cmp	x23, #0x1
   49a00:	ldr	x20, [sp, #272]
   49a04:	add	x23, x0, x23, lsl #5
   49a08:	b.ls	49a24 <mpfr_lngamma@@Base+0x12d4>  // b.plast
   49a0c:	nop
   49a10:	mov	x0, x20
   49a14:	bl	c070 <mpfr_clear@plt>
   49a18:	cmp	x20, x23
   49a1c:	add	x20, x20, #0x20
   49a20:	b.ne	49a10 <mpfr_lngamma@@Base+0x12c0>  // b.any
   49a24:	ldr	x0, [sp, #256]
   49a28:	ldr	x1, [sp, #304]
   49a2c:	bl	cc20 <mpfr_free_func@plt>
   49a30:	ldr	x1, [sp, #136]
   49a34:	ldr	x0, [sp, #168]
   49a38:	cmp	x0, x1
   49a3c:	b.ls	49a7c <mpfr_lngamma@@Base+0x132c>  // b.plast
   49a40:	ldp	x20, x21, [sp, #168]
   49a44:	ldr	x19, [sp, #136]
   49a48:	mov	x2, x19
   49a4c:	mov	x1, x21
   49a50:	mov	w3, #0x0                   	// #0
   49a54:	mov	x0, x26
   49a58:	bl	c260 <mpfr_add_ui@plt>
   49a5c:	add	x19, x19, #0x1
   49a60:	mov	x2, x26
   49a64:	mov	x1, x27
   49a68:	mov	x0, x27
   49a6c:	mov	w3, #0x0                   	// #0
   49a70:	bl	bd50 <mpfr_mul@plt>
   49a74:	cmp	x20, x19
   49a78:	b.ne	49a48 <mpfr_lngamma@@Base+0x12f8>  // b.any
   49a7c:	mov	x2, x27
   49a80:	mov	x1, x27
   49a84:	mov	w3, #0x0                   	// #0
   49a88:	mov	x0, x27
   49a8c:	bl	bd50 <mpfr_mul@plt>
   49a90:	ldr	x19, [sp, #184]
   49a94:	mov	w3, #0x0                   	// #0
   49a98:	mov	x2, x27
   49a9c:	mov	x1, x19
   49aa0:	mov	x0, x19
   49aa4:	bl	c620 <mpfr_div@plt>
   49aa8:	mov	x1, x19
   49aac:	mov	w2, #0x0                   	// #0
   49ab0:	mov	x0, x27
   49ab4:	bl	c090 <mpfr_log@plt>
   49ab8:	mov	x1, x27
   49abc:	mov	w3, #0x0                   	// #0
   49ac0:	mov	x2, #0x1                   	// #1
   49ac4:	mov	x0, x27
   49ac8:	bl	c8f0 <mpfr_div_2ui@plt>
   49acc:	ldr	d0, [sp, #168]
   49ad0:	ldr	x19, [sp, #368]
   49ad4:	ucvtf	d0, d0
   49ad8:	fmadd	d0, d0, d10, d9
   49adc:	bl	c950 <__gmpfr_ceil_log2@plt>
   49ae0:	add	x19, x19, x0
   49ae4:	ldr	d0, [sp, #288]
   49ae8:	ldr	x20, [sp, #336]
   49aec:	ucvtf	d1, d0
   49af0:	fmov	d0, #2.000000000000000000e+00
   49af4:	fmadd	d0, d1, d0, d8
   49af8:	bl	c950 <__gmpfr_ceil_log2@plt>
   49afc:	add	x20, x20, x0
   49b00:	ldr	x0, [sp, #200]
   49b04:	mov	x2, x27
   49b08:	mov	w3, #0x0                   	// #0
   49b0c:	mov	x1, x0
   49b10:	bl	c1a0 <mpfr_add@plt>
   49b14:	ldr	x1, [sp, #336]
   49b18:	cmp	x19, x20
   49b1c:	csel	x3, x19, x20, ge  // ge = tcont
   49b20:	add	x0, x19, #0x1
   49b24:	csel	x0, x0, x3, eq  // eq = none
   49b28:	mov	x2, #0x1                   	// #1
   49b2c:	sub	x2, x2, x1
   49b30:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   49b34:	add	x2, x2, x0
   49b38:	cmp	x1, x3
   49b3c:	b.le	49bd0 <mpfr_lngamma@@Base+0x1480>
   49b40:	ldr	w0, [sp, #192]
   49b44:	ldr	x3, [sp, #144]
   49b48:	cmp	w0, #0x0
   49b4c:	ldr	x1, [sp, #320]
   49b50:	sub	x2, x3, x2
   49b54:	ldr	x0, [sp, #344]
   49b58:	sub	x1, x1, #0x1
   49b5c:	ldr	x3, [sp, #152]
   49b60:	asr	x1, x1, #6
   49b64:	add	x1, x1, #0x1
   49b68:	cinc	x3, x3, eq  // eq = none
   49b6c:	bl	c370 <mpfr_round_p@plt>
   49b70:	cbz	w0, 49bd0 <mpfr_lngamma@@Base+0x1480>
   49b74:	ldr	x27, [sp, #184]
   49b78:	ldr	x22, [sp, #200]
   49b7c:	b	48c64 <mpfr_lngamma@@Base+0x514>
   49b80:	ldr	x2, [sp, #176]
   49b84:	mov	w3, #0x2                   	// #2
   49b88:	ldr	x19, [sp, #200]
   49b8c:	mov	x1, x19
   49b90:	mov	x0, x19
   49b94:	bl	bb70 <mpfr_sub@plt>
   49b98:	mov	w1, #0x2                   	// #2
   49b9c:	mov	x0, x19
   49ba0:	bl	bca0 <mpfr_get_ui@plt>
   49ba4:	cmp	x0, #0x3
   49ba8:	mov	x1, #0x3                   	// #3
   49bac:	csel	x0, x0, x1, cs  // cs = hs, nlast
   49bb0:	str	x0, [sp, #168]
   49bb4:	b	49410 <mpfr_lngamma@@Base+0xcc0>
   49bb8:	ldr	x0, [sp, #200]
   49bbc:	mov	w3, #0x0                   	// #0
   49bc0:	mov	x2, #0xfffffffffffffff6    	// #-10
   49bc4:	mov	x1, #0x333                 	// #819
   49bc8:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   49bcc:	b	493c8 <mpfr_lngamma@@Base+0xc78>
   49bd0:	ldr	x1, [sp, #144]
   49bd4:	mov	x0, #0xfffffffffffffeff    	// #-257
   49bd8:	movk	x0, #0x7fff, lsl #48
   49bdc:	sub	x0, x0, x1
   49be0:	ldr	x1, [sp, #264]
   49be4:	cmp	x0, x1
   49be8:	b.lt	49d98 <mpfr_lngamma@@Base+0x1648>  // b.tstop
   49bec:	ldr	x0, [sp, #144]
   49bf0:	ldr	x1, [sp, #264]
   49bf4:	add	x0, x0, x1
   49bf8:	str	x0, [sp, #144]
   49bfc:	add	x0, x0, x0, lsr #63
   49c00:	asr	x0, x0, #1
   49c04:	str	x0, [sp, #264]
   49c08:	b	49240 <mpfr_lngamma@@Base+0xaf0>
   49c0c:	ldr	x0, [sp, #200]
   49c10:	mov	w3, #0x0                   	// #0
   49c14:	mov	x2, #0xfffffffffffffff6    	// #-10
   49c18:	mov	x1, #0x8cd                 	// #2253
   49c1c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   49c20:	b	493c8 <mpfr_lngamma@@Base+0xc78>
   49c24:	ldr	x0, [sp, #200]
   49c28:	mov	w3, #0x0                   	// #0
   49c2c:	mov	x2, #0xfffffffffffffff6    	// #-10
   49c30:	mov	x1, #0x6cd                 	// #1741
   49c34:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   49c38:	b	493c8 <mpfr_lngamma@@Base+0xc78>
   49c3c:	ldr	x0, [sp, #200]
   49c40:	mov	w3, #0x0                   	// #0
   49c44:	mov	x2, #0xfffffffffffffff6    	// #-10
   49c48:	mov	x1, #0x533                 	// #1331
   49c4c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   49c50:	b	493c8 <mpfr_lngamma@@Base+0xc78>
   49c54:	mov	x0, #0x1                   	// #1
   49c58:	str	x0, [sp, #136]
   49c5c:	ldr	x20, [sp, #280]
   49c60:	ldr	x21, [sp, #296]
   49c64:	b	499d8 <mpfr_lngamma@@Base+0x1288>
   49c68:	ldr	x1, [sp, #176]
   49c6c:	mov	w2, #0x0                   	// #0
   49c70:	ldr	x0, [sp, #256]
   49c74:	add	x0, x0, #0x40
   49c78:	str	x0, [sp, #272]
   49c7c:	bl	c400 <mpfr_sqr@plt>
   49c80:	b	497f0 <mpfr_lngamma@@Base+0x10a0>
   49c84:	mov	x0, #0x2                   	// #2
   49c88:	str	x0, [sp, #288]
   49c8c:	b	496d8 <mpfr_lngamma@@Base+0xf88>
   49c90:	ldr	x3, [sp, #160]
   49c94:	ldr	w1, [sp, #192]
   49c98:	ldr	x0, [sp, #376]
   49c9c:	cmp	w1, #0x0
   49ca0:	sub	x1, x2, #0x1
   49ca4:	sub	x2, x2, #0x3
   49ca8:	ldr	x3, [x3]
   49cac:	asr	x1, x1, #6
   49cb0:	add	x1, x1, #0x1
   49cb4:	cinc	x3, x3, eq  // eq = none
   49cb8:	bl	c370 <mpfr_round_p@plt>
   49cbc:	cbz	w0, 49398 <mpfr_lngamma@@Base+0xc48>
   49cc0:	ldr	x24, [sp, #248]
   49cc4:	ldr	w2, [sp, #192]
   49cc8:	ldr	w3, [sp, #360]
   49ccc:	mov	x1, x24
   49cd0:	ldr	x20, [sp, #160]
   49cd4:	mov	x0, x20
   49cd8:	bl	c6a0 <mpfr_set4@plt>
   49cdc:	mov	w23, w0
   49ce0:	mov	x0, x24
   49ce4:	bl	c070 <mpfr_clear@plt>
   49ce8:	ldp	x1, x2, [sp, #216]
   49cec:	str	x1, [x21]
   49cf0:	ldr	w0, [sp, #196]
   49cf4:	str	w0, [x19]
   49cf8:	ldr	x0, [x20, #16]
   49cfc:	str	x2, [x22]
   49d00:	cmp	x2, x0
   49d04:	ccmp	x1, x0, #0x0, ge  // ge = tcont
   49d08:	b.le	49d44 <mpfr_lngamma@@Base+0x15f4>
   49d0c:	ldr	w2, [sp, #192]
   49d10:	mov	w1, w23
   49d14:	ldr	x0, [sp, #160]
   49d18:	b	49064 <mpfr_lngamma@@Base+0x914>
   49d1c:	mov	x0, #0xe                   	// #14
   49d20:	str	x0, [sp, #144]
   49d24:	b	49214 <mpfr_lngamma@@Base+0xac4>
   49d28:	ldr	x0, [sp, #200]
   49d2c:	mov	x2, #0xffffffffffffffff    	// #-1
   49d30:	mov	x1, #0x9                   	// #9
   49d34:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   49d38:	b	493c8 <mpfr_lngamma@@Base+0xc78>
   49d3c:	mov	x25, #0xf                   	// #15
   49d40:	b	48a04 <mpfr_lngamma@@Base+0x2b4>
   49d44:	cbz	w23, 49138 <mpfr_lngamma@@Base+0x9e8>
   49d48:	ldr	w0, [sp, #196]
   49d4c:	ldp	x25, x26, [sp, #64]
   49d50:	orr	w0, w0, #0x8
   49d54:	ldp	x27, x28, [sp, #80]
   49d58:	ldp	d8, d9, [sp, #96]
   49d5c:	ldr	d10, [sp, #112]
   49d60:	str	w0, [x19]
   49d64:	b	4907c <mpfr_lngamma@@Base+0x92c>
   49d68:	ldr	x0, [sp, #248]
   49d6c:	bl	c070 <mpfr_clear@plt>
   49d70:	ldp	w1, w3, [sp, #192]
   49d74:	str	w3, [x19]
   49d78:	ldr	x3, [sp, #216]
   49d7c:	str	x3, [x21]
   49d80:	ldr	x0, [sp, #160]
   49d84:	mov	w2, #0x1                   	// #1
   49d88:	ldr	x3, [sp, #224]
   49d8c:	str	x3, [x22]
   49d90:	bl	bf40 <mpfr_overflow@plt>
   49d94:	b	49068 <mpfr_lngamma@@Base+0x918>
   49d98:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   49d9c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   49da0:	add	x2, x2, #0xeb0
   49da4:	add	x0, x0, #0xd70
   49da8:	mov	w1, #0x2b8                 	// #696
   49dac:	bl	cb40 <mpfr_assert_fail@plt>
   49db0:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   49db4:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   49db8:	add	x2, x2, #0xa40
   49dbc:	add	x0, x0, #0xd70
   49dc0:	mov	w1, #0x14a                 	// #330
   49dc4:	bl	cb40 <mpfr_assert_fail@plt>
   49dc8:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   49dcc:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   49dd0:	add	x2, x2, #0xa40
   49dd4:	add	x0, x0, #0xd70
   49dd8:	mov	w1, #0x1b0                 	// #432
   49ddc:	bl	cb40 <mpfr_assert_fail@plt>

0000000000049de0 <mpfr_lgamma@@Base>:
   49de0:	stp	x29, x30, [sp, #-176]!
   49de4:	mov	x29, sp
   49de8:	stp	x19, x20, [sp, #16]
   49dec:	mov	x19, x1
   49df0:	mov	x20, x2
   49df4:	stp	x21, x22, [sp, #32]
   49df8:	mov	x21, #0x8000000000000003    	// #-9223372036854775805
   49dfc:	mov	x22, x0
   49e00:	stp	x23, x24, [sp, #48]
   49e04:	mov	w24, #0x1                   	// #1
   49e08:	stp	x27, x28, [sp, #80]
   49e0c:	ldr	x1, [x2, #16]
   49e10:	str	w24, [x19]
   49e14:	cmp	x1, x21
   49e18:	b.le	4a11c <mpfr_lgamma@@Base+0x33c>
   49e1c:	ldr	w0, [x2, #8]
   49e20:	mov	w23, w3
   49e24:	tbnz	w0, #31, 49e58 <mpfr_lgamma@@Base+0x78>
   49e28:	mov	w2, w23
   49e2c:	mov	x1, x20
   49e30:	mov	x0, x22
   49e34:	bl	48890 <mpfr_lngamma@@Base+0x140>
   49e38:	mov	w27, w0
   49e3c:	mov	w0, w27
   49e40:	ldp	x19, x20, [sp, #16]
   49e44:	ldp	x21, x22, [sp, #32]
   49e48:	ldp	x23, x24, [sp, #48]
   49e4c:	ldp	x27, x28, [sp, #80]
   49e50:	ldp	x29, x30, [sp], #176
   49e54:	ret
   49e58:	mov	x0, x2
   49e5c:	bl	c160 <mpfr_integer_p@plt>
   49e60:	cbnz	w0, 4a0c4 <mpfr_lgamma@@Base+0x2e4>
   49e64:	mov	x0, x20
   49e68:	bl	486e8 <mpfr_custom_get_kind@@Base+0x50>
   49e6c:	cbnz	w0, 49e78 <mpfr_lgamma@@Base+0x98>
   49e70:	mov	w0, #0xffffffff            	// #-1
   49e74:	str	w0, [x19]
   49e78:	ldr	x5, [x22]
   49e7c:	ldr	x1, [x20, #16]
   49e80:	neg	x0, x5
   49e84:	cmp	x1, x0
   49e88:	b.ge	49e28 <mpfr_lgamma@@Base+0x48>  // b.tcont
   49e8c:	mrs	x24, tpidr_el0
   49e90:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   49e94:	ldr	x1, [x0, #2576]
   49e98:	add	x0, x0, #0xa10
   49e9c:	blr	x1
   49ea0:	stp	x25, x26, [sp, #64]
   49ea4:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   49ea8:	add	x26, x5, #0xe
   49eac:	ldr	w0, [x24, x0]
   49eb0:	add	x21, sp, #0x70
   49eb4:	str	w0, [sp, #100]
   49eb8:	add	x19, sp, #0x90
   49ebc:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   49ec0:	mov	w25, #0x43                  	// #67
   49ec4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   49ec8:	ldr	x2, [x0, #2512]
   49ecc:	add	x0, x0, #0x9d0
   49ed0:	blr	x2
   49ed4:	add	x2, x24, x0
   49ed8:	ldr	x28, [x24, x0]
   49edc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   49ee0:	ldr	x4, [x0, #2544]
   49ee4:	add	x0, x0, #0x9f0
   49ee8:	blr	x4
   49eec:	str	x3, [x2]
   49ef0:	ldr	x2, [x24, x0]
   49ef4:	str	x1, [x24, x0]
   49ef8:	str	x2, [sp, #104]
   49efc:	nop
   49f00:	mov	x1, x26
   49f04:	mov	x0, x21
   49f08:	bl	ca80 <mpfr_init2@plt>
   49f0c:	mov	x1, x26
   49f10:	mov	x0, x19
   49f14:	bl	ca80 <mpfr_init2@plt>
   49f18:	mov	x1, x20
   49f1c:	mov	w2, #0x2                   	// #2
   49f20:	mov	x0, x21
   49f24:	bl	bd70 <mpfr_neg@plt>
   49f28:	mov	x1, x21
   49f2c:	mov	w2, #0x2                   	// #2
   49f30:	mov	x0, x21
   49f34:	bl	c090 <mpfr_log@plt>
   49f38:	mov	x1, x21
   49f3c:	mov	w2, #0x3                   	// #3
   49f40:	mov	x0, x21
   49f44:	bl	bd70 <mpfr_neg@plt>
   49f48:	mov	x1, x20
   49f4c:	mov	w2, #0x3                   	// #3
   49f50:	mov	x0, x19
   49f54:	bl	bd70 <mpfr_neg@plt>
   49f58:	mov	x1, x19
   49f5c:	mov	w2, #0x3                   	// #3
   49f60:	mov	x0, x19
   49f64:	bl	c090 <mpfr_log@plt>
   49f68:	mov	x1, x19
   49f6c:	mov	w2, #0x2                   	// #2
   49f70:	mov	x0, x19
   49f74:	bl	bd70 <mpfr_neg@plt>
   49f78:	mov	x2, x20
   49f7c:	mov	x1, x19
   49f80:	mov	w3, #0x2                   	// #2
   49f84:	mov	x0, x19
   49f88:	bl	bb70 <mpfr_sub@plt>
   49f8c:	ldr	x1, [x22]
   49f90:	mov	w2, w23
   49f94:	mov	x0, x21
   49f98:	bl	c970 <mpfr_prec_round@plt>
   49f9c:	mov	w27, w0
   49fa0:	ldr	x1, [x22]
   49fa4:	mov	w2, w23
   49fa8:	mov	x0, x19
   49fac:	bl	c970 <mpfr_prec_round@plt>
   49fb0:	tbnz	w27, #31, 4a018 <mpfr_lgamma@@Base+0x238>
   49fb4:	tbnz	w0, #31, 49fd0 <mpfr_lgamma@@Base+0x1f0>
   49fb8:	cmp	w27, #0x0
   49fbc:	cset	w1, gt
   49fc0:	cmp	w0, #0x0
   49fc4:	cset	w0, gt
   49fc8:	cmp	w1, w0
   49fcc:	b.eq	4a01c <mpfr_lgamma@@Base+0x23c>  // b.none
   49fd0:	mov	x0, x21
   49fd4:	ldr	x27, [sp, #128]
   49fd8:	bl	c070 <mpfr_clear@plt>
   49fdc:	mov	x0, x19
   49fe0:	bl	c070 <mpfr_clear@plt>
   49fe4:	ldr	x0, [x20, #16]
   49fe8:	add	x0, x26, x0
   49fec:	cmp	x0, x27
   49ff0:	b.gt	4a170 <mpfr_lgamma@@Base+0x390>
   49ff4:	cmp	x26, #0x1
   49ff8:	b.eq	4a110 <mpfr_lgamma@@Base+0x330>  // b.none
   49ffc:	b.le	4a158 <mpfr_lgamma@@Base+0x378>
   4a000:	sub	x0, x26, #0x1
   4a004:	clz	x0, x0
   4a008:	sub	w0, w25, w0
   4a00c:	sxtw	x0, w0
   4a010:	add	x26, x26, x0
   4a014:	b	49f00 <mpfr_lgamma@@Base+0x120>
   4a018:	tbz	w0, #31, 49fd0 <mpfr_lgamma@@Base+0x1f0>
   4a01c:	mov	x1, x19
   4a020:	mov	x0, x21
   4a024:	bl	ca60 <mpfr_equal_p@plt>
   4a028:	cbz	w0, 49fd0 <mpfr_lgamma@@Base+0x1f0>
   4a02c:	ldr	w3, [sp, #152]
   4a030:	mov	w2, w23
   4a034:	mov	x1, x19
   4a038:	mov	x0, x22
   4a03c:	bl	c6a0 <mpfr_set4@plt>
   4a040:	mov	x0, x21
   4a044:	bl	c070 <mpfr_clear@plt>
   4a048:	mov	x0, x19
   4a04c:	bl	c070 <mpfr_clear@plt>
   4a050:	ldr	x1, [x22, #16]
   4a054:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4a058:	ldr	x2, [x0, #2576]
   4a05c:	add	x0, x0, #0xa10
   4a060:	blr	x2
   4a064:	ldr	w2, [sp, #100]
   4a068:	str	w2, [x24, x0]
   4a06c:	add	x2, x24, x0
   4a070:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4a074:	ldr	x3, [x0, #2512]
   4a078:	add	x0, x0, #0x9d0
   4a07c:	blr	x3
   4a080:	str	x28, [x24, x0]
   4a084:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4a088:	ldr	x3, [x0, #2544]
   4a08c:	add	x0, x0, #0x9f0
   4a090:	blr	x3
   4a094:	ldr	x3, [sp, #104]
   4a098:	str	x3, [x24, x0]
   4a09c:	cmp	x28, x1
   4a0a0:	ccmp	x3, x1, #0x1, le
   4a0a4:	b.ge	4a1bc <mpfr_lgamma@@Base+0x3dc>  // b.tcont
   4a0a8:	mov	w1, w27
   4a0ac:	mov	w2, w23
   4a0b0:	mov	x0, x22
   4a0b4:	bl	cb30 <mpfr_check_range@plt>
   4a0b8:	mov	w27, w0
   4a0bc:	ldp	x25, x26, [sp, #64]
   4a0c0:	b	49e3c <mpfr_lgamma@@Base+0x5c>
   4a0c4:	mrs	x1, tpidr_el0
   4a0c8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4a0cc:	ldr	x2, [x0, #2576]
   4a0d0:	add	x0, x0, #0xa10
   4a0d4:	blr	x2
   4a0d8:	add	x0, x1, x0
   4a0dc:	str	w24, [x22, #8]
   4a0e0:	str	x21, [x22, #16]
   4a0e4:	mov	w27, #0x0                   	// #0
   4a0e8:	ldp	x19, x20, [sp, #16]
   4a0ec:	ldr	w1, [x0]
   4a0f0:	ldp	x21, x22, [sp, #32]
   4a0f4:	orr	w1, w1, #0x20
   4a0f8:	str	w1, [x0]
   4a0fc:	mov	w0, w27
   4a100:	ldp	x23, x24, [sp, #48]
   4a104:	ldp	x27, x28, [sp, #80]
   4a108:	ldp	x29, x30, [sp], #176
   4a10c:	ret
   4a110:	mov	x0, #0x3                   	// #3
   4a114:	add	x26, x26, x0
   4a118:	b	49f00 <mpfr_lgamma@@Base+0x120>
   4a11c:	mov	x0, #0x2                   	// #2
   4a120:	movk	x0, #0x8000, lsl #48
   4a124:	cmp	x1, x0
   4a128:	b.eq	4a204 <mpfr_lgamma@@Base+0x424>  // b.none
   4a12c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4a130:	cmp	x1, x0
   4a134:	b.eq	4a1dc <mpfr_lgamma@@Base+0x3fc>  // b.none
   4a138:	ldr	w1, [x20, #8]
   4a13c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4a140:	str	w1, [x19]
   4a144:	mov	w27, #0x0                   	// #0
   4a148:	mov	w1, #0x1                   	// #1
   4a14c:	str	w1, [x22, #8]
   4a150:	str	x0, [x22, #16]
   4a154:	b	49e3c <mpfr_lgamma@@Base+0x5c>
   4a158:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   4a15c:	adrp	x0, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   4a160:	add	x2, x2, #0xd50
   4a164:	add	x0, x0, #0xd70
   4a168:	mov	w1, #0x35d                 	// #861
   4a16c:	bl	cb40 <mpfr_assert_fail@plt>
   4a170:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4a174:	ldr	x1, [x0, #2576]
   4a178:	add	x0, x0, #0xa10
   4a17c:	blr	x1
   4a180:	ldr	w1, [sp, #100]
   4a184:	ldp	x25, x26, [sp, #64]
   4a188:	str	w1, [x24, x0]
   4a18c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4a190:	ldr	x1, [x0, #2512]
   4a194:	add	x0, x0, #0x9d0
   4a198:	blr	x1
   4a19c:	str	x28, [x24, x0]
   4a1a0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4a1a4:	ldr	x1, [x0, #2544]
   4a1a8:	add	x0, x0, #0x9f0
   4a1ac:	blr	x1
   4a1b0:	ldr	x1, [sp, #104]
   4a1b4:	str	x1, [x24, x0]
   4a1b8:	b	49e28 <mpfr_lgamma@@Base+0x48>
   4a1bc:	cbz	w27, 4a1d4 <mpfr_lgamma@@Base+0x3f4>
   4a1c0:	ldr	w0, [sp, #100]
   4a1c4:	orr	w26, w0, #0x8
   4a1c8:	str	w26, [x2]
   4a1cc:	ldp	x25, x26, [sp, #64]
   4a1d0:	b	49e3c <mpfr_lgamma@@Base+0x5c>
   4a1d4:	ldp	x25, x26, [sp, #64]
   4a1d8:	b	49e3c <mpfr_lgamma@@Base+0x5c>
   4a1dc:	mrs	x1, tpidr_el0
   4a1e0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4a1e4:	ldr	x2, [x0, #2576]
   4a1e8:	add	x0, x0, #0xa10
   4a1ec:	blr	x2
   4a1f0:	add	x0, x1, x0
   4a1f4:	ldr	w1, [x0]
   4a1f8:	orr	w1, w1, #0x20
   4a1fc:	str	w1, [x0]
   4a200:	b	4a138 <mpfr_lgamma@@Base+0x358>
   4a204:	mrs	x2, tpidr_el0
   4a208:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4a20c:	ldr	x3, [x0, #2576]
   4a210:	add	x0, x0, #0xa10
   4a214:	blr	x3
   4a218:	add	x0, x2, x0
   4a21c:	str	x1, [x22, #16]
   4a220:	mov	w27, #0x0                   	// #0
   4a224:	ldr	w1, [x0]
   4a228:	orr	w1, w1, #0x4
   4a22c:	str	w1, [x0]
   4a230:	b	49e3c <mpfr_lgamma@@Base+0x5c>
   4a234:	nop

000000000004a238 <mpfr_zeta_ui@@Base>:
   4a238:	stp	x29, x30, [sp, #-304]!
   4a23c:	mov	x29, sp
   4a240:	stp	x19, x20, [sp, #16]
   4a244:	str	x0, [sp, #128]
   4a248:	str	w2, [sp, #160]
   4a24c:	cbz	x1, 4a918 <mpfr_zeta_ui@@Base+0x6e0>
   4a250:	mrs	x2, tpidr_el0
   4a254:	stp	x25, x26, [sp, #64]
   4a258:	mov	x26, x1
   4a25c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4a260:	ldr	x1, [x0, #2576]
   4a264:	add	x0, x0, #0xa10
   4a268:	blr	x1
   4a26c:	add	x1, x2, x0
   4a270:	ldr	w0, [x2, x0]
   4a274:	cmp	x26, #0x1
   4a278:	str	x2, [sp, #144]
   4a27c:	str	w0, [sp, #164]
   4a280:	b.eq	4a93c <mpfr_zeta_ui@@Base+0x704>  // b.none
   4a284:	ldr	w1, [sp, #160]
   4a288:	mov	w0, #0x2                   	// #2
   4a28c:	ldr	x4, [sp, #144]
   4a290:	cmp	w1, #0x4
   4a294:	csel	w0, w1, w0, ne  // ne = any
   4a298:	str	w0, [sp, #160]
   4a29c:	ldr	x0, [sp, #128]
   4a2a0:	stp	x23, x24, [sp, #48]
   4a2a4:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   4a2a8:	ldr	x23, [x0]
   4a2ac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4a2b0:	ldr	x1, [x0, #2512]
   4a2b4:	add	x0, x0, #0x9d0
   4a2b8:	blr	x1
   4a2bc:	add	x2, x4, x0
   4a2c0:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   4a2c4:	ldr	x0, [x4, x0]
   4a2c8:	str	x0, [sp, #176]
   4a2cc:	str	x3, [x2]
   4a2d0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4a2d4:	ldr	x5, [x0, #2544]
   4a2d8:	add	x0, x0, #0x9f0
   4a2dc:	blr	x5
   4a2e0:	ldr	x2, [x4, x0]
   4a2e4:	str	x1, [x4, x0]
   4a2e8:	str	x2, [sp, #184]
   4a2ec:	cmp	x23, x26
   4a2f0:	b.ls	4a570 <mpfr_zeta_ui@@Base+0x338>  // b.plast
   4a2f4:	add	x19, sp, #0x110
   4a2f8:	mov	x1, #0x1f                  	// #31
   4a2fc:	mov	x0, x19
   4a300:	str	x19, [sp, #168]
   4a304:	bl	ca80 <mpfr_init2@plt>
   4a308:	add	x0, x23, x23, lsr #63
   4a30c:	cmp	x26, x0, asr #1
   4a310:	b.cc	4a34c <mpfr_zeta_ui@@Base+0x114>  // b.lo, b.ul, b.last
   4a314:	mov	x0, x19
   4a318:	adrp	x1, 63000 <mpfr_bases@@Base+0xe58>
   4a31c:	add	x1, x1, #0x9d8
   4a320:	bl	c340 <mpfr_set_str_binary@plt>
   4a324:	mov	w3, #0x1                   	// #1
   4a328:	mov	x2, x26
   4a32c:	mov	x1, x19
   4a330:	mov	x0, x19
   4a334:	bl	ba50 <mpfr_mul_ui@plt>
   4a338:	add	x1, x23, #0x2
   4a33c:	mov	x0, x19
   4a340:	mov	x2, #0x0                   	// #0
   4a344:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4a348:	tbz	w0, #31, 4a9c8 <mpfr_zeta_ui@@Base+0x790>
   4a34c:	stp	x21, x22, [sp, #32]
   4a350:	add	x21, sp, #0xf0
   4a354:	mov	x0, x21
   4a358:	add	x22, sp, #0xd0
   4a35c:	stp	x27, x28, [sp, #80]
   4a360:	add	x19, sp, #0xe0
   4a364:	str	d8, [sp, #96]
   4a368:	bl	bf90 <mpfr_mpz_init@plt>
   4a36c:	mov	x0, x22
   4a370:	bl	bf90 <mpfr_mpz_init@plt>
   4a374:	mov	x0, x19
   4a378:	add	x20, sp, #0x100
   4a37c:	bl	bf90 <mpfr_mpz_init@plt>
   4a380:	mov	x0, x20
   4a384:	bl	bf90 <mpfr_mpz_init@plt>
   4a388:	cmp	x23, #0x1
   4a38c:	b.eq	4aa50 <mpfr_zeta_ui@@Base+0x818>  // b.none
   4a390:	b.le	4aa94 <mpfr_zeta_ui@@Base+0x85c>
   4a394:	sub	x2, x23, #0x1
   4a398:	mov	w0, #0x40                  	// #64
   4a39c:	clz	x2, x2
   4a3a0:	mov	w1, #0x4f                  	// #79
   4a3a4:	sub	w0, w0, w2
   4a3a8:	add	x23, x23, w0, sxtw
   4a3ac:	sub	x0, x23, #0x1
   4a3b0:	clz	x0, x0
   4a3b4:	sub	w0, w1, w0
   4a3b8:	add	x0, x23, w0, sxtw
   4a3bc:	str	x0, [sp, #136]
   4a3c0:	mov	x0, #0x40                  	// #64
   4a3c4:	str	x0, [sp, #200]
   4a3c8:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4a3cc:	sub	x25, x26, #0x1
   4a3d0:	ldr	d8, [x0, #2600]
   4a3d4:	ldr	d0, [sp, #136]
   4a3d8:	ldr	x1, [sp, #136]
   4a3dc:	scvtf	d0, d0
   4a3e0:	ldr	x0, [sp, #168]
   4a3e4:	fmul	d0, d0, d8
   4a3e8:	fcvtzu	d0, d0
   4a3ec:	str	d0, [sp, #120]
   4a3f0:	bl	bed0 <mpfr_set_prec@plt>
   4a3f4:	mov	x0, x21
   4a3f8:	mov	x1, #0x0                   	// #0
   4a3fc:	bl	bcb0 <__gmpz_set_ui@plt>
   4a400:	ldr	x27, [sp, #120]
   4a404:	mov	x1, #0x1                   	// #1
   4a408:	mov	x0, x19
   4a40c:	add	x24, x27, x1
   4a410:	bl	bcb0 <__gmpz_set_ui@plt>
   4a414:	mov	x1, x19
   4a418:	mov	x0, x19
   4a41c:	lsl	x2, x24, #1
   4a420:	add	x23, x27, #0x5
   4a424:	sub	x2, x2, #0x1
   4a428:	bl	c200 <__gmpz_mul_2exp@plt>
   4a42c:	add	x2, x27, #0x2
   4a430:	mov	x1, x19
   4a434:	mov	x0, x22
   4a438:	str	x2, [sp, #152]
   4a43c:	bl	bfa0 <__gmpz_set@plt>
   4a440:	cbz	x24, 4a680 <mpfr_zeta_ui@@Base+0x448>
   4a444:	mov	x27, x24
   4a448:	str	x23, [sp, #192]
   4a44c:	mov	x23, x24
   4a450:	ldr	x28, [sp, #152]
   4a454:	str	x25, [sp, #152]
   4a458:	b	4a4d8 <mpfr_zeta_ui@@Base+0x2a0>
   4a45c:	bl	c9c0 <__gmpz_add@plt>
   4a460:	lsl	x0, x23, #1
   4a464:	mov	x1, #0xf334                	// #62260
   4a468:	movk	x1, #0xb504, lsl #16
   4a46c:	sub	x25, x0, #0x1
   4a470:	cmp	x23, x1
   4a474:	b.hi	4a54c <mpfr_zeta_ui@@Base+0x314>  // b.pmore
   4a478:	mul	x2, x23, x25
   4a47c:	mov	x1, x19
   4a480:	mov	x0, x19
   4a484:	bl	c100 <__gmpz_mul_ui@plt>
   4a488:	mov	x0, x19
   4a48c:	mov	x2, #0x1                   	// #1
   4a490:	mov	x1, x19
   4a494:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   4a498:	ldr	x0, [sp, #120]
   4a49c:	sub	x2, x28, x23
   4a4a0:	add	x25, x0, x23
   4a4a4:	mov	x0, #0xffffffff            	// #4294967295
   4a4a8:	cmp	x27, x0
   4a4ac:	b.hi	4a644 <mpfr_zeta_ui@@Base+0x40c>  // b.pmore
   4a4b0:	mul	x2, x25, x2
   4a4b4:	mov	x1, x19
   4a4b8:	mov	x0, x19
   4a4bc:	bl	c570 <__gmpz_divexact_ui@plt>
   4a4c0:	mov	x2, x19
   4a4c4:	mov	x1, x22
   4a4c8:	mov	x0, x22
   4a4cc:	bl	c9c0 <__gmpz_add@plt>
   4a4d0:	subs	x23, x23, #0x1
   4a4d4:	b.eq	4a678 <mpfr_zeta_ui@@Base+0x440>  // b.none
   4a4d8:	clz	x0, x23
   4a4dc:	mov	x1, #0x40                  	// #64
   4a4e0:	sub	x1, x1, x0
   4a4e4:	mul	x1, x1, x26
   4a4e8:	cmp	x1, #0x80
   4a4ec:	b.ls	4a870 <mpfr_zeta_ui@@Base+0x638>  // b.plast
   4a4f0:	mov	x1, #0x3f                  	// #63
   4a4f4:	sub	x2, x1, x0
   4a4f8:	mov	x0, x22
   4a4fc:	mov	w1, #0x2                   	// #2
   4a500:	mul	x24, x2, x26
   4a504:	bl	cb60 <__gmpz_sizeinbase@plt>
   4a508:	add	x2, x24, #0x1
   4a50c:	cmp	x0, x2
   4a510:	b.cs	4a84c <mpfr_zeta_ui@@Base+0x614>  // b.hs, b.nlast
   4a514:	mov	x0, x20
   4a518:	mov	x1, #0x0                   	// #0
   4a51c:	bl	bcb0 <__gmpz_set_ui@plt>
   4a520:	mov	x2, x20
   4a524:	mov	x1, x21
   4a528:	mov	x0, x21
   4a52c:	tbnz	w23, #0, 4a45c <mpfr_zeta_ui@@Base+0x224>
   4a530:	bl	bde0 <__gmpz_sub@plt>
   4a534:	lsl	x0, x23, #1
   4a538:	mov	x1, #0xf334                	// #62260
   4a53c:	movk	x1, #0xb504, lsl #16
   4a540:	sub	x25, x0, #0x1
   4a544:	cmp	x23, x1
   4a548:	b.ls	4a478 <mpfr_zeta_ui@@Base+0x240>  // b.plast
   4a54c:	mov	x2, x23
   4a550:	mov	x1, x19
   4a554:	mov	x0, x19
   4a558:	bl	c100 <__gmpz_mul_ui@plt>
   4a55c:	mov	x2, x25
   4a560:	mov	x1, x19
   4a564:	mov	x0, x19
   4a568:	bl	c100 <__gmpz_mul_ui@plt>
   4a56c:	b	4a488 <mpfr_zeta_ui@@Base+0x250>
   4a570:	cmp	x26, #0x2
   4a574:	b.eq	4a9ac <mpfr_zeta_ui@@Base+0x774>  // b.none
   4a578:	ldr	w1, [sp, #160]
   4a57c:	mov	x2, #0x0                   	// #0
   4a580:	ldr	w3, [sp, #160]
   4a584:	and	w0, w1, #0xfffffffd
   4a588:	cmp	w0, #0x1
   4a58c:	b.eq	4a59c <mpfr_zeta_ui@@Base+0x364>  // b.none
   4a590:	cmp	w1, #0x0
   4a594:	ccmp	x23, x26, #0x2, eq  // eq = none
   4a598:	b.cs	4aa5c <mpfr_zeta_ui@@Base+0x824>  // b.hs, b.nlast
   4a59c:	ldr	x0, [sp, #128]
   4a5a0:	mov	x1, #0x1                   	// #1
   4a5a4:	mov	w19, #0xffffffff            	// #-1
   4a5a8:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4a5ac:	ldr	x2, [sp, #144]
   4a5b0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4a5b4:	ldr	x1, [x0, #2576]
   4a5b8:	add	x0, x0, #0xa10
   4a5bc:	blr	x1
   4a5c0:	ldr	w1, [sp, #164]
   4a5c4:	str	w1, [x2, x0]
   4a5c8:	ldr	x0, [sp, #128]
   4a5cc:	ldr	x1, [x0, #16]
   4a5d0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4a5d4:	ldr	x3, [x0, #2512]
   4a5d8:	add	x0, x0, #0x9d0
   4a5dc:	blr	x3
   4a5e0:	ldr	x3, [sp, #176]
   4a5e4:	str	x3, [x2, x0]
   4a5e8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4a5ec:	ldr	x4, [x0, #2544]
   4a5f0:	add	x0, x0, #0x9f0
   4a5f4:	blr	x4
   4a5f8:	ldr	x4, [sp, #184]
   4a5fc:	str	x4, [x2, x0]
   4a600:	cmp	x4, x1
   4a604:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   4a608:	b.gt	4a820 <mpfr_zeta_ui@@Base+0x5e8>
   4a60c:	ldr	w0, [sp, #164]
   4a610:	ldp	x23, x24, [sp, #48]
   4a614:	orr	w1, w0, #0x8
   4a618:	ldp	x25, x26, [sp, #64]
   4a61c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4a620:	ldr	x2, [x0, #2576]
   4a624:	add	x0, x0, #0xa10
   4a628:	blr	x2
   4a62c:	ldr	x2, [sp, #144]
   4a630:	str	w1, [x2, x0]
   4a634:	mov	w0, w19
   4a638:	ldp	x19, x20, [sp, #16]
   4a63c:	ldp	x29, x30, [sp], #304
   4a640:	ret
   4a644:	mov	x1, x19
   4a648:	mov	x0, x19
   4a64c:	bl	c570 <__gmpz_divexact_ui@plt>
   4a650:	mov	x2, x25
   4a654:	mov	x1, x19
   4a658:	mov	x0, x19
   4a65c:	bl	c570 <__gmpz_divexact_ui@plt>
   4a660:	mov	x2, x19
   4a664:	mov	x1, x22
   4a668:	mov	x0, x22
   4a66c:	bl	c9c0 <__gmpz_add@plt>
   4a670:	subs	x23, x23, #0x1
   4a674:	b.ne	4a4d8 <mpfr_zeta_ui@@Base+0x2a0>  // b.any
   4a678:	ldr	x25, [sp, #152]
   4a67c:	ldr	x23, [sp, #192]
   4a680:	mov	x2, x25
   4a684:	mov	x1, x21
   4a688:	mov	x0, x19
   4a68c:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   4a690:	mov	x2, x19
   4a694:	mov	x1, x21
   4a698:	mov	x0, x21
   4a69c:	bl	c9c0 <__gmpz_add@plt>
   4a6a0:	mov	x0, x19
   4a6a4:	mov	x2, x25
   4a6a8:	mov	x1, x19
   4a6ac:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   4a6b0:	ldr	w0, [sp, #228]
   4a6b4:	mov	x24, x23
   4a6b8:	add	x23, x23, #0x1
   4a6bc:	cmp	w0, #0x0
   4a6c0:	b.gt	4a690 <mpfr_zeta_ui@@Base+0x458>
   4a6c4:	ldr	x28, [sp, #136]
   4a6c8:	mov	x1, x21
   4a6cc:	mov	x0, x21
   4a6d0:	mov	x2, x28
   4a6d4:	bl	c200 <__gmpz_mul_2exp@plt>
   4a6d8:	mov	x2, x22
   4a6dc:	mov	x1, x21
   4a6e0:	mov	x0, x21
   4a6e4:	bl	bb30 <__gmpz_tdiv_q@plt>
   4a6e8:	ldr	x27, [sp, #168]
   4a6ec:	mov	x1, x21
   4a6f0:	mov	w2, #0x0                   	// #0
   4a6f4:	mov	x0, x27
   4a6f8:	bl	c240 <mpfr_set_z@plt>
   4a6fc:	mov	x2, x28
   4a700:	mov	x1, x27
   4a704:	mov	x0, x27
   4a708:	mov	w3, #0x0                   	// #0
   4a70c:	bl	c8f0 <mpfr_div_2ui@plt>
   4a710:	cmp	x23, #0x1
   4a714:	b.eq	4aa30 <mpfr_zeta_ui@@Base+0x7f8>  // b.none
   4a718:	b.ls	4aa38 <mpfr_zeta_ui@@Base+0x800>  // b.plast
   4a71c:	clz	x24, x24
   4a720:	mov	w2, #0x40                  	// #64
   4a724:	sub	w24, w2, w24
   4a728:	sxtw	x2, w24
   4a72c:	ldr	x1, [sp, #288]
   4a730:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4a734:	cmp	x1, x0
   4a738:	b.le	4a970 <mpfr_zeta_ui@@Base+0x738>
   4a73c:	ldp	x3, x4, [sp, #128]
   4a740:	ldr	w0, [sp, #160]
   4a744:	ldr	x1, [sp, #272]
   4a748:	cmp	w0, #0x0
   4a74c:	ldr	x0, [sp, #296]
   4a750:	sub	x1, x1, #0x1
   4a754:	ldr	x3, [x3]
   4a758:	asr	x1, x1, #6
   4a75c:	sub	x2, x4, x2
   4a760:	add	x1, x1, #0x1
   4a764:	cinc	x3, x3, eq  // eq = none
   4a768:	bl	c370 <mpfr_round_p@plt>
   4a76c:	cbz	w0, 4a970 <mpfr_zeta_ui@@Base+0x738>
   4a770:	mov	x0, x22
   4a774:	bl	c170 <mpfr_mpz_clear@plt>
   4a778:	mov	x0, x19
   4a77c:	bl	c170 <mpfr_mpz_clear@plt>
   4a780:	mov	x0, x20
   4a784:	bl	c170 <mpfr_mpz_clear@plt>
   4a788:	mov	x0, x21
   4a78c:	bl	c170 <mpfr_mpz_clear@plt>
   4a790:	ldr	x20, [sp, #168]
   4a794:	ldr	w2, [sp, #160]
   4a798:	ldr	w3, [sp, #280]
   4a79c:	mov	x1, x20
   4a7a0:	ldr	x0, [sp, #128]
   4a7a4:	bl	c6a0 <mpfr_set4@plt>
   4a7a8:	mov	w19, w0
   4a7ac:	mov	x0, x20
   4a7b0:	bl	c070 <mpfr_clear@plt>
   4a7b4:	ldp	x21, x22, [sp, #32]
   4a7b8:	ldp	x27, x28, [sp, #80]
   4a7bc:	ldr	d8, [sp, #96]
   4a7c0:	ldr	x2, [sp, #144]
   4a7c4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4a7c8:	ldr	x1, [x0, #2576]
   4a7cc:	add	x0, x0, #0xa10
   4a7d0:	blr	x1
   4a7d4:	ldr	w1, [sp, #164]
   4a7d8:	str	w1, [x2, x0]
   4a7dc:	ldr	x0, [sp, #128]
   4a7e0:	ldr	x1, [x0, #16]
   4a7e4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4a7e8:	ldr	x3, [x0, #2512]
   4a7ec:	add	x0, x0, #0x9d0
   4a7f0:	blr	x3
   4a7f4:	ldr	x3, [sp, #176]
   4a7f8:	str	x3, [x2, x0]
   4a7fc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4a800:	ldr	x4, [x0, #2544]
   4a804:	add	x0, x0, #0x9f0
   4a808:	blr	x4
   4a80c:	ldr	x4, [sp, #184]
   4a810:	str	x4, [x2, x0]
   4a814:	cmp	x3, x1
   4a818:	ccmp	x4, x1, #0x1, le
   4a81c:	b.ge	4a8fc <mpfr_zeta_ui@@Base+0x6c4>  // b.tcont
   4a820:	ldr	w2, [sp, #160]
   4a824:	mov	w1, w19
   4a828:	ldr	x0, [sp, #128]
   4a82c:	bl	cb30 <mpfr_check_range@plt>
   4a830:	mov	w19, w0
   4a834:	mov	w0, w19
   4a838:	ldp	x19, x20, [sp, #16]
   4a83c:	ldp	x23, x24, [sp, #48]
   4a840:	ldp	x25, x26, [sp, #64]
   4a844:	ldp	x29, x30, [sp], #304
   4a848:	ret
   4a84c:	mov	x2, x26
   4a850:	mov	x1, x23
   4a854:	mov	x0, x20
   4a858:	bl	c4e0 <__gmpz_ui_pow_ui@plt>
   4a85c:	mov	x2, x20
   4a860:	mov	x1, x22
   4a864:	mov	x0, x20
   4a868:	bl	bb30 <__gmpz_tdiv_q@plt>
   4a86c:	b	4a520 <mpfr_zeta_ui@@Base+0x2e8>
   4a870:	mov	x0, #0xffffffffffffffff    	// #-1
   4a874:	mov	x2, x23
   4a878:	ldr	x25, [sp, #152]
   4a87c:	udiv	x24, x0, x23
   4a880:	cmp	x24, x2
   4a884:	b.ls	4a8a4 <mpfr_zeta_ui@@Base+0x66c>  // b.plast
   4a888:	mul	x2, x2, x23
   4a88c:	subs	x25, x25, #0x1
   4a890:	b.ne	4a880 <mpfr_zeta_ui@@Base+0x648>  // b.any
   4a894:	mov	x1, x22
   4a898:	mov	x0, x20
   4a89c:	bl	c040 <__gmpz_tdiv_q_ui@plt>
   4a8a0:	b	4a520 <mpfr_zeta_ui@@Base+0x2e8>
   4a8a4:	mov	x1, x22
   4a8a8:	mov	x0, x20
   4a8ac:	bl	c040 <__gmpz_tdiv_q_ui@plt>
   4a8b0:	mov	x2, x23
   4a8b4:	subs	x25, x25, #0x1
   4a8b8:	b.eq	4a8dc <mpfr_zeta_ui@@Base+0x6a4>  // b.none
   4a8bc:	cmp	x24, x23
   4a8c0:	b.hi	4a8d0 <mpfr_zeta_ui@@Base+0x698>  // b.pmore
   4a8c4:	b	4a8ec <mpfr_zeta_ui@@Base+0x6b4>
   4a8c8:	cmp	x24, x2
   4a8cc:	b.ls	4a8ec <mpfr_zeta_ui@@Base+0x6b4>  // b.plast
   4a8d0:	mul	x2, x2, x23
   4a8d4:	subs	x25, x25, #0x1
   4a8d8:	b.ne	4a8c8 <mpfr_zeta_ui@@Base+0x690>  // b.any
   4a8dc:	mov	x1, x20
   4a8e0:	mov	x0, x20
   4a8e4:	bl	c040 <__gmpz_tdiv_q_ui@plt>
   4a8e8:	b	4a520 <mpfr_zeta_ui@@Base+0x2e8>
   4a8ec:	mov	x1, x20
   4a8f0:	mov	x0, x20
   4a8f4:	bl	c040 <__gmpz_tdiv_q_ui@plt>
   4a8f8:	b	4a8b0 <mpfr_zeta_ui@@Base+0x678>
   4a8fc:	cbnz	w19, 4a60c <mpfr_zeta_ui@@Base+0x3d4>
   4a900:	mov	w0, w19
   4a904:	ldp	x19, x20, [sp, #16]
   4a908:	ldp	x23, x24, [sp, #48]
   4a90c:	ldp	x25, x26, [sp, #64]
   4a910:	ldp	x29, x30, [sp], #304
   4a914:	ret
   4a918:	mov	w3, w2
   4a91c:	mov	x2, #0xffffffffffffffff    	// #-1
   4a920:	mov	x1, x2
   4a924:	bl	ba80 <mpfr_set_si_2exp@plt>
   4a928:	mov	w19, w0
   4a92c:	mov	w0, w19
   4a930:	ldp	x19, x20, [sp, #16]
   4a934:	ldp	x29, x30, [sp], #304
   4a938:	ret
   4a93c:	mov	w0, w0
   4a940:	mov	w19, #0x0                   	// #0
   4a944:	orr	w2, w0, #0x20
   4a948:	str	w2, [x1]
   4a94c:	ldr	x1, [sp, #128]
   4a950:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4a954:	str	w26, [x1, #8]
   4a958:	str	x0, [x1, #16]
   4a95c:	mov	w0, w19
   4a960:	ldp	x19, x20, [sp, #16]
   4a964:	ldp	x25, x26, [sp, #64]
   4a968:	ldp	x29, x30, [sp], #304
   4a96c:	ret
   4a970:	ldr	x1, [sp, #136]
   4a974:	mov	x0, #0xfffffffffffffeff    	// #-257
   4a978:	movk	x0, #0x7fff, lsl #48
   4a97c:	sub	x0, x0, x1
   4a980:	ldr	x1, [sp, #200]
   4a984:	cmp	x0, x1
   4a988:	b.lt	4aa7c <mpfr_zeta_ui@@Base+0x844>  // b.tstop
   4a98c:	ldr	x0, [sp, #136]
   4a990:	ldr	x1, [sp, #200]
   4a994:	add	x0, x0, x1
   4a998:	str	x0, [sp, #136]
   4a99c:	add	x0, x0, x0, lsr #63
   4a9a0:	asr	x0, x0, #1
   4a9a4:	str	x0, [sp, #200]
   4a9a8:	b	4a3d4 <mpfr_zeta_ui@@Base+0x19c>
   4a9ac:	ldr	w3, [sp, #160]
   4a9b0:	mov	x2, #0xfffffffffffffffd    	// #-3
   4a9b4:	ldr	x0, [sp, #128]
   4a9b8:	mov	x1, #0xd                   	// #13
   4a9bc:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4a9c0:	mov	w19, w0
   4a9c4:	b	4a7c0 <mpfr_zeta_ui@@Base+0x588>
   4a9c8:	ldr	x0, [sp, #168]
   4a9cc:	mov	w19, #0xffffffff            	// #-1
   4a9d0:	bl	c070 <mpfr_clear@plt>
   4a9d4:	ldr	x20, [sp, #128]
   4a9d8:	mov	w3, #0x1                   	// #1
   4a9dc:	mov	x2, #0x0                   	// #0
   4a9e0:	mov	x1, #0x1                   	// #1
   4a9e4:	mov	x0, x20
   4a9e8:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4a9ec:	mov	x2, x26
   4a9f0:	mov	x1, x20
   4a9f4:	mov	w3, #0x1                   	// #1
   4a9f8:	mov	x0, x20
   4a9fc:	bl	c8f0 <mpfr_div_2ui@plt>
   4aa00:	mov	x1, x20
   4aa04:	mov	x0, x20
   4aa08:	mov	w3, #0x1                   	// #1
   4aa0c:	mov	x2, #0x1                   	// #1
   4aa10:	bl	c260 <mpfr_add_ui@plt>
   4aa14:	ldr	w0, [sp, #160]
   4aa18:	cmp	w0, #0x2
   4aa1c:	b.ne	4a5ac <mpfr_zeta_ui@@Base+0x374>  // b.any
   4aa20:	ldr	x0, [sp, #128]
   4aa24:	mov	w19, #0x1                   	// #1
   4aa28:	bl	c120 <mpfr_nextabove@plt>
   4aa2c:	b	4a5ac <mpfr_zeta_ui@@Base+0x374>
   4aa30:	mov	x2, #0x0                   	// #0
   4aa34:	b	4a72c <mpfr_zeta_ui@@Base+0x4f4>
   4aa38:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4aa3c:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4aa40:	add	x2, x2, #0xa18
   4aa44:	add	x0, x0, #0xa08
   4aa48:	mov	w1, #0xdc                  	// #220
   4aa4c:	bl	cb40 <mpfr_assert_fail@plt>
   4aa50:	mov	x0, #0x10                  	// #16
   4aa54:	str	x0, [sp, #136]
   4aa58:	b	4a3c0 <mpfr_zeta_ui@@Base+0x188>
   4aa5c:	ldr	x20, [sp, #128]
   4aa60:	mov	x1, #0x1                   	// #1
   4aa64:	mov	w19, #0x1                   	// #1
   4aa68:	mov	x0, x20
   4aa6c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4aa70:	mov	x0, x20
   4aa74:	bl	c120 <mpfr_nextabove@plt>
   4aa78:	b	4a5ac <mpfr_zeta_ui@@Base+0x374>
   4aa7c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   4aa80:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4aa84:	add	x2, x2, #0xc08
   4aa88:	add	x0, x0, #0xa08
   4aa8c:	mov	w1, #0xe1                  	// #225
   4aa90:	bl	cb40 <mpfr_assert_fail@plt>
   4aa94:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4aa98:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4aa9c:	add	x2, x2, #0xa00
   4aaa0:	add	x0, x0, #0xa08
   4aaa4:	mov	w1, #0x6e                  	// #110
   4aaa8:	bl	cb40 <mpfr_assert_fail@plt>
   4aaac:	nop

000000000004aab0 <mpfr_jn@@Base>:
   4aab0:	sub	sp, sp, #0x2a0
   4aab4:	stp	x29, x30, [sp]
   4aab8:	mov	x29, sp
   4aabc:	ldr	x6, [x2, #16]
   4aac0:	stp	x19, x20, [sp, #16]
   4aac4:	stp	x25, x26, [sp, #64]
   4aac8:	stp	x2, x0, [sp, #112]
   4aacc:	str	x1, [sp, #128]
   4aad0:	str	w3, [sp, #148]
   4aad4:	tbnz	x1, #63, 4b1c4 <mpfr_jn@@Base+0x714>
   4aad8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4aadc:	cmp	x6, x0
   4aae0:	b.le	4bcac <mpfr_jn@@Base+0x11fc>
   4aae4:	mrs	x5, tpidr_el0
   4aae8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4aaec:	ldr	x1, [x0, #2576]
   4aaf0:	add	x0, x0, #0xa10
   4aaf4:	blr	x1
   4aaf8:	add	x4, x5, x0
   4aafc:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   4ab00:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   4ab04:	str	x5, [sp, #136]
   4ab08:	ldr	w0, [x5, x0]
   4ab0c:	str	w0, [sp, #208]
   4ab10:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4ab14:	ldr	x2, [x0, #2512]
   4ab18:	add	x0, x0, #0x9d0
   4ab1c:	blr	x2
   4ab20:	add	x2, x5, x0
   4ab24:	ldr	x0, [x5, x0]
   4ab28:	str	x0, [sp, #168]
   4ab2c:	str	x3, [x2]
   4ab30:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4ab34:	ldr	x7, [x0, #2544]
   4ab38:	add	x0, x0, #0x9f0
   4ab3c:	blr	x7
   4ab40:	ldr	x2, [x5, x0]
   4ab44:	str	x1, [x5, x0]
   4ab48:	ldr	x0, [sp, #120]
   4ab4c:	str	x2, [sp, #184]
   4ab50:	ldr	x1, [x0]
   4ab54:	ldr	x0, [sp, #128]
   4ab58:	cbnz	x0, 4af34 <mpfr_jn@@Base+0x484>
   4ab5c:	neg	x0, x6, lsl #1
   4ab60:	cmp	x0, #0x0
   4ab64:	b.le	4bb58 <mpfr_jn@@Base+0x10a8>
   4ab68:	add	x2, x0, #0x2
   4ab6c:	add	x0, x1, #0x1
   4ab70:	cmp	x0, x2
   4ab74:	mov	x25, #0x0                   	// #0
   4ab78:	b.cc	4be9c <mpfr_jn@@Base+0x13ec>  // b.lo, b.ul, b.last
   4ab7c:	stp	x21, x22, [sp, #32]
   4ab80:	stp	x23, x24, [sp, #48]
   4ab84:	stp	x27, x28, [sp, #80]
   4ab88:	add	x1, x1, x1, lsr #63
   4ab8c:	ldr	x0, [sp, #112]
   4ab90:	mov	w4, #0x1                   	// #1
   4ab94:	asr	x1, x1, #1
   4ab98:	mov	x2, #0x0                   	// #0
   4ab9c:	add	x1, x1, #0x3
   4aba0:	str	w4, [sp, #248]
   4aba4:	ldr	x5, [x0]
   4aba8:	str	x5, [sp, #240]
   4abac:	ldr	x3, [x0, #24]
   4abb0:	add	x0, sp, #0xf0
   4abb4:	stp	x6, x3, [sp, #256]
   4abb8:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4abbc:	cmp	w0, #0x0
   4abc0:	b.gt	4b3c0 <mpfr_jn@@Base+0x910>
   4abc4:	add	x28, sp, #0x170
   4abc8:	add	x26, sp, #0x210
   4abcc:	mov	x20, #0x20                  	// #32
   4abd0:	add	x0, x26, #0x10
   4abd4:	mov	w21, #0x1                   	// #1
   4abd8:	add	x1, x26, #0x18
   4abdc:	add	x26, x26, x20
   4abe0:	str	x20, [sp, #368]
   4abe4:	str	w21, [sp, #376]
   4abe8:	stp	x0, x20, [sp, #392]
   4abec:	str	w21, [sp, #408]
   4abf0:	stp	x1, x20, [sp, #424]
   4abf4:	str	w21, [sp, #440]
   4abf8:	str	x26, [sp, #456]
   4abfc:	str	xzr, [sp, #528]
   4ac00:	str	x0, [sp, #536]
   4ac04:	cbnz	x25, 4b268 <mpfr_jn@@Base+0x7b8>
   4ac08:	add	x19, sp, #0x1d0
   4ac0c:	mov	x1, x20
   4ac10:	mov	x0, x19
   4ac14:	add	x22, sp, #0x1f0
   4ac18:	bl	ca80 <mpfr_init2@plt>
   4ac1c:	mov	x1, x20
   4ac20:	mov	x0, x22
   4ac24:	bl	ca80 <mpfr_init2@plt>
   4ac28:	ldr	x1, [sp, #112]
   4ac2c:	mov	w3, w21
   4ac30:	mov	x0, x19
   4ac34:	mov	w2, #0x0                   	// #0
   4ac38:	bl	c6a0 <mpfr_set4@plt>
   4ac3c:	mov	x0, x22
   4ac40:	adrp	x1, 62000 <mpfr_l2b_2_0__tab@@Base+0x4170>
   4ac44:	add	x1, x1, #0xfe8
   4ac48:	bl	c340 <mpfr_set_str_binary@plt>
   4ac4c:	mov	x2, x22
   4ac50:	mov	w3, #0x0                   	// #0
   4ac54:	mov	x1, x19
   4ac58:	mov	x0, x19
   4ac5c:	bl	bd50 <mpfr_mul@plt>
   4ac60:	mov	x0, x19
   4ac64:	mov	w1, #0x0                   	// #0
   4ac68:	bl	be50 <mpfr_fits_ulong_p@plt>
   4ac6c:	cbnz	w0, 4b364 <mpfr_jn@@Base+0x8b4>
   4ac70:	mov	x1, #0xffffffffffffffff    	// #-1
   4ac74:	mov	x0, x19
   4ac78:	str	x1, [sp, #160]
   4ac7c:	bl	c070 <mpfr_clear@plt>
   4ac80:	mov	x0, x22
   4ac84:	bl	c070 <mpfr_clear@plt>
   4ac88:	ldr	x0, [sp, #120]
   4ac8c:	mov	x20, #0xfffffffffffffe7e    	// #-386
   4ac90:	movk	x20, #0x7fff, lsl #48
   4ac94:	ldr	x19, [x0]
   4ac98:	cmp	x19, #0x1
   4ac9c:	b.eq	4be34 <mpfr_jn@@Base+0x1384>  // b.none
   4aca0:	cmp	x19, #0x1
   4aca4:	mov	x1, x19
   4aca8:	b.le	4bd8c <mpfr_jn@@Base+0x12dc>
   4acac:	sub	x1, x1, #0x1
   4acb0:	mov	x0, #0xfffffffffffffeff    	// #-257
   4acb4:	clz	x2, x1
   4acb8:	mov	w1, #0x40                  	// #64
   4acbc:	sub	w1, w1, w2
   4acc0:	movk	x0, #0x7fff, lsl #48
   4acc4:	str	x0, [sp, #96]
   4acc8:	mov	x2, #0xfffffffffffffefe    	// #-258
   4accc:	lsl	w1, w1, #1
   4acd0:	movk	x2, #0x7fff, lsl #48
   4acd4:	add	x1, x19, w1, sxtw
   4acd8:	add	x1, x1, #0x3
   4acdc:	add	x1, x1, x20
   4ace0:	cmp	x1, x2
   4ace4:	b.ls	4b3b8 <mpfr_jn@@Base+0x908>  // b.plast
   4ace8:	ldr	x1, [sp, #528]
   4acec:	add	x27, sp, #0x190
   4acf0:	add	x24, sp, #0x1b0
   4acf4:	mov	x0, #0x40                  	// #64
   4acf8:	mov	x22, #0x8000000000000001    	// #-9223372036854775807
   4acfc:	mov	x21, #0xc000000000000001    	// #-4611686018427387903
   4ad00:	str	x0, [sp, #152]
   4ad04:	str	wzr, [sp, #176]
   4ad08:	ldr	x0, [sp, #96]
   4ad0c:	sub	x19, x0, #0x1
   4ad10:	asr	x19, x19, #6
   4ad14:	add	x19, x19, #0x1
   4ad18:	add	x2, x19, x19, lsl #1
   4ad1c:	lsl	x2, x2, #3
   4ad20:	str	x2, [sp, #528]
   4ad24:	cbnz	x1, 4b128 <mpfr_jn@@Base+0x678>
   4ad28:	mov	x0, x2
   4ad2c:	bl	ccf0 <mpfr_allocate_func@plt>
   4ad30:	mov	x1, x0
   4ad34:	str	x0, [sp, #536]
   4ad38:	ldr	x3, [sp, #96]
   4ad3c:	mov	w4, #0x1                   	// #1
   4ad40:	ldr	x5, [sp, #136]
   4ad44:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4ad48:	ldr	x2, [x0, #2576]
   4ad4c:	add	x0, x0, #0xa10
   4ad50:	blr	x2
   4ad54:	ldr	x23, [sp, #112]
   4ad58:	add	x20, x5, x0
   4ad5c:	add	x2, x1, x19, lsl #3
   4ad60:	add	x19, x1, x19, lsl #4
   4ad64:	stp	x1, x3, [sp, #392]
   4ad68:	mov	x1, x3
   4ad6c:	str	wzr, [x5, x0]
   4ad70:	mov	x0, x24
   4ad74:	str	x3, [sp, #368]
   4ad78:	mov	w3, #0x0                   	// #0
   4ad7c:	str	w4, [sp, #376]
   4ad80:	str	w4, [sp, #408]
   4ad84:	str	x2, [sp, #424]
   4ad88:	mov	x2, x25
   4ad8c:	str	x1, [sp, #432]
   4ad90:	mov	x1, x23
   4ad94:	str	w4, [sp, #440]
   4ad98:	str	x19, [sp, #456]
   4ad9c:	bl	bf70 <mpfr_pow_ui@plt>
   4ada0:	mov	x2, x23
   4ada4:	mov	x1, x23
   4ada8:	mov	w3, #0x0                   	// #0
   4adac:	mov	x0, x28
   4adb0:	bl	bd50 <mpfr_mul@plt>
   4adb4:	ldr	w2, [x20]
   4adb8:	mov	w0, #0x2f                  	// #47
   4adbc:	mov	w1, #0x2                   	// #2
   4adc0:	and	w2, w2, w0
   4adc4:	mov	x0, x28
   4adc8:	str	w2, [x20]
   4adcc:	bl	bca0 <mpfr_get_ui@plt>
   4add0:	str	x0, [sp, #104]
   4add4:	ldr	w1, [x20]
   4add8:	tbnz	w1, #4, 4bc74 <mpfr_jn@@Base+0x11c4>
   4addc:	mov	w3, #0x0                   	// #0
   4ade0:	mov	x1, x28
   4ade4:	mov	x2, #0x2                   	// #2
   4ade8:	mov	x0, x28
   4adec:	bl	c8f0 <mpfr_div_2ui@plt>
   4adf0:	mov	x1, x25
   4adf4:	mov	w2, #0x0                   	// #0
   4adf8:	mov	x0, x27
   4adfc:	bl	c6e0 <mpfr_fac_ui@plt>
   4ae00:	mov	x2, x27
   4ae04:	mov	x1, x24
   4ae08:	mov	x0, x24
   4ae0c:	mov	w3, #0x0                   	// #0
   4ae10:	bl	c620 <mpfr_div@plt>
   4ae14:	cbnz	x25, 4b250 <mpfr_jn@@Base+0x7a0>
   4ae18:	ldr	w3, [sp, #440]
   4ae1c:	mov	x1, x24
   4ae20:	mov	w2, #0x0                   	// #0
   4ae24:	mov	x0, x27
   4ae28:	mov	x26, #0x1                   	// #1
   4ae2c:	bl	c6a0 <mpfr_set4@plt>
   4ae30:	ldr	x20, [sp, #416]
   4ae34:	mov	w3, #0x0                   	// #0
   4ae38:	mov	x2, x28
   4ae3c:	mov	x1, x24
   4ae40:	cmp	x20, x22
   4ae44:	mov	x0, x24
   4ae48:	csel	x20, x20, x21, ne  // ne = any
   4ae4c:	bl	bd50 <mpfr_mul@plt>
   4ae50:	mov	x1, x24
   4ae54:	mov	x0, x24
   4ae58:	mov	w2, #0x0                   	// #0
   4ae5c:	bl	bd70 <mpfr_neg@plt>
   4ae60:	add	x23, x26, x25
   4ae64:	umulh	x0, x23, x26
   4ae68:	cbnz	x0, 4bf78 <mpfr_jn@@Base+0x14c8>
   4ae6c:	mul	x2, x23, x26
   4ae70:	mov	x1, x24
   4ae74:	mov	x0, x24
   4ae78:	mov	w3, #0x0                   	// #0
   4ae7c:	bl	cc60 <mpfr_div_ui@plt>
   4ae80:	ldr	x0, [sp, #416]
   4ae84:	mov	x2, x24
   4ae88:	ldr	x19, [sp, #448]
   4ae8c:	cmp	x0, x22
   4ae90:	mov	x1, x27
   4ae94:	mov	w3, #0x0                   	// #0
   4ae98:	csel	x19, x19, x21, ne  // ne = any
   4ae9c:	mov	x0, x27
   4aea0:	bl	c1a0 <mpfr_add@plt>
   4aea4:	ldr	x2, [sp, #416]
   4aea8:	ldr	x3, [sp, #96]
   4aeac:	cmp	x2, x22
   4aeb0:	csel	x1, x2, x21, ne  // ne = any
   4aeb4:	ldr	x0, [sp, #448]
   4aeb8:	cmp	x19, x1
   4aebc:	csel	x19, x19, x1, ge  // ge = tcont
   4aec0:	cmp	x20, x19
   4aec4:	add	x0, x3, x0
   4aec8:	csel	x20, x20, x19, ge  // ge = tcont
   4aecc:	cmp	x0, x1
   4aed0:	b.gt	4aee8 <mpfr_jn@@Base+0x438>
   4aed4:	ldr	x3, [sp, #104]
   4aed8:	lsl	x0, x26, #1
   4aedc:	udiv	x0, x3, x0
   4aee0:	cmp	x23, x0
   4aee4:	b.hi	4af70 <mpfr_jn@@Base+0x4c0>  // b.pmore
   4aee8:	mov	w3, #0x0                   	// #0
   4aeec:	mov	x2, x28
   4aef0:	mov	x1, x24
   4aef4:	mov	x0, x24
   4aef8:	bl	bd50 <mpfr_mul@plt>
   4aefc:	add	x26, x26, #0x1
   4af00:	mov	x1, x24
   4af04:	mov	x0, x24
   4af08:	mov	w2, #0x0                   	// #0
   4af0c:	bl	bd70 <mpfr_neg@plt>
   4af10:	mvn	x0, x26
   4af14:	cmp	x25, x0
   4af18:	b.ls	4ae60 <mpfr_jn@@Base+0x3b0>  // b.plast
   4af1c:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4af20:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4af24:	add	x2, x2, #0xac0
   4af28:	add	x0, x0, #0xa40
   4af2c:	mov	w1, #0x10f                 	// #271
   4af30:	bl	cb40 <mpfr_assert_fail@plt>
   4af34:	stp	x21, x22, [sp, #32]
   4af38:	cmp	x0, #0x1
   4af3c:	b.ne	4c024 <mpfr_jn@@Base+0x1574>  // b.any
   4af40:	str	wzr, [x4]
   4af44:	neg	x0, x6, lsl #1
   4af48:	cmp	x0, #0x0
   4af4c:	b.le	4bb48 <mpfr_jn@@Base+0x1098>
   4af50:	add	x2, x0, #0x3
   4af54:	add	x0, x1, #0x1
   4af58:	cmp	x0, x2
   4af5c:	ldr	x25, [sp, #128]
   4af60:	b.cc	4bf2c <mpfr_jn@@Base+0x147c>  // b.lo, b.ul, b.last
   4af64:	stp	x23, x24, [sp, #48]
   4af68:	stp	x27, x28, [sp, #80]
   4af6c:	b	4ab88 <mpfr_jn@@Base+0xd8>
   4af70:	sub	x20, x20, x1
   4af74:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4af78:	ldr	x3, [x0, #2576]
   4af7c:	add	x0, x0, #0xa10
   4af80:	blr	x3
   4af84:	ldr	x1, [sp, #136]
   4af88:	cmn	x26, #0x1
   4af8c:	ldr	w23, [x1, x0]
   4af90:	b.eq	4bc64 <mpfr_jn@@Base+0x11b4>  // b.none
   4af94:	cmn	x26, #0x2
   4af98:	b.cs	4bc90 <mpfr_jn@@Base+0x11e0>  // b.hs, b.nlast
   4af9c:	add	x6, x26, #0x1
   4afa0:	mov	w19, #0x41                  	// #65
   4afa4:	clz	x6, x6
   4afa8:	mov	x0, #0xfffffffffffffeff    	// #-257
   4afac:	sub	w19, w19, w6
   4afb0:	movk	x0, #0x7fff, lsl #48
   4afb4:	lsl	w19, w19, #1
   4afb8:	sxtw	x19, w19
   4afbc:	sub	x0, x0, x19
   4afc0:	tbnz	x20, #63, 4bac0 <mpfr_jn@@Base+0x1010>
   4afc4:	cmp	x20, x0
   4afc8:	b.gt	4c080 <mpfr_jn@@Base+0x15d0>
   4afcc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4afd0:	add	x20, x20, x19
   4afd4:	cmp	x2, x0
   4afd8:	b.le	4b14c <mpfr_jn@@Base+0x69c>
   4afdc:	ldr	x2, [sp, #120]
   4afe0:	ldr	w0, [sp, #148]
   4afe4:	ldr	x1, [sp, #400]
   4afe8:	cmp	w0, #0x0
   4afec:	ldr	x0, [sp, #424]
   4aff0:	sub	x1, x1, #0x1
   4aff4:	ldr	x3, [x2]
   4aff8:	asr	x1, x1, #6
   4affc:	ldr	x2, [sp, #96]
   4b000:	add	x1, x1, #0x1
   4b004:	cinc	x3, x3, eq  // eq = none
   4b008:	sub	x2, x2, x20
   4b00c:	bl	c370 <mpfr_round_p@plt>
   4b010:	cbz	w0, 4b14c <mpfr_jn@@Base+0x69c>
   4b014:	tbnz	w23, #0, 4b13c <mpfr_jn@@Base+0x68c>
   4b018:	tbnz	w23, #1, 4b13c <mpfr_jn@@Base+0x68c>
   4b01c:	ldr	x0, [sp, #128]
   4b020:	tbz	x0, #63, 4b02c <mpfr_jn@@Base+0x57c>
   4b024:	ldr	x0, [sp, #128]
   4b028:	tbnz	w0, #0, 4bc4c <mpfr_jn@@Base+0x119c>
   4b02c:	ldr	w2, [sp, #148]
   4b030:	mov	x1, x27
   4b034:	ldr	w3, [sp, #408]
   4b038:	ldr	x0, [sp, #120]
   4b03c:	bl	c6a0 <mpfr_set4@plt>
   4b040:	mov	w19, w0
   4b044:	ldr	x1, [sp, #528]
   4b048:	cbz	x1, 4b054 <mpfr_jn@@Base+0x5a4>
   4b04c:	ldr	x0, [sp, #536]
   4b050:	bl	cc20 <mpfr_free_func@plt>
   4b054:	ldr	x0, [sp, #120]
   4b058:	ldp	x23, x24, [sp, #48]
   4b05c:	ldp	x27, x28, [sp, #80]
   4b060:	ldr	x1, [x0, #16]
   4b064:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4b068:	ldr	x2, [x0, #2576]
   4b06c:	add	x0, x0, #0xa10
   4b070:	blr	x2
   4b074:	ldr	w3, [sp, #208]
   4b078:	ldr	x2, [sp, #136]
   4b07c:	ldp	x21, x22, [sp, #32]
   4b080:	str	w3, [x2, x0]
   4b084:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4b088:	ldr	x3, [x0, #2512]
   4b08c:	add	x0, x0, #0x9d0
   4b090:	blr	x3
   4b094:	ldr	x3, [sp, #168]
   4b098:	str	x3, [x2, x0]
   4b09c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4b0a0:	ldr	x4, [x0, #2544]
   4b0a4:	add	x0, x0, #0x9f0
   4b0a8:	blr	x4
   4b0ac:	ldr	x4, [sp, #184]
   4b0b0:	str	x4, [x2, x0]
   4b0b4:	cmp	x1, x4
   4b0b8:	ccmp	x1, x3, #0x1, le
   4b0bc:	b.ge	4b0ec <mpfr_jn@@Base+0x63c>  // b.tcont
   4b0c0:	ldr	w2, [sp, #148]
   4b0c4:	mov	w1, w19
   4b0c8:	ldr	x0, [sp, #120]
   4b0cc:	bl	cb30 <mpfr_check_range@plt>
   4b0d0:	mov	w19, w0
   4b0d4:	mov	w0, w19
   4b0d8:	ldp	x29, x30, [sp]
   4b0dc:	ldp	x19, x20, [sp, #16]
   4b0e0:	ldp	x25, x26, [sp, #64]
   4b0e4:	add	sp, sp, #0x2a0
   4b0e8:	ret
   4b0ec:	cbz	w19, 4b0d4 <mpfr_jn@@Base+0x624>
   4b0f0:	ldr	w0, [sp, #208]
   4b0f4:	ldp	x25, x26, [sp, #64]
   4b0f8:	orr	w1, w0, #0x8
   4b0fc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4b100:	ldr	x2, [x0, #2576]
   4b104:	add	x0, x0, #0xa10
   4b108:	blr	x2
   4b10c:	ldr	x2, [sp, #136]
   4b110:	ldp	x29, x30, [sp]
   4b114:	str	w1, [x2, x0]
   4b118:	mov	w0, w19
   4b11c:	ldp	x19, x20, [sp, #16]
   4b120:	add	sp, sp, #0x2a0
   4b124:	ret
   4b128:	ldr	x0, [sp, #536]
   4b12c:	bl	c1c0 <mpfr_reallocate_func@plt>
   4b130:	mov	x1, x0
   4b134:	str	x0, [sp, #536]
   4b138:	b	4ad38 <mpfr_jn@@Base+0x288>
   4b13c:	ldr	w0, [sp, #176]
   4b140:	cbnz	w0, 4bf14 <mpfr_jn@@Base+0x1464>
   4b144:	mov	w0, #0x1                   	// #1
   4b148:	str	w0, [sp, #176]
   4b14c:	ldr	x0, [sp, #96]
   4b150:	mov	x1, #0xfffffffffffffeff    	// #-257
   4b154:	ldr	x2, [sp, #160]
   4b158:	movk	x1, #0x7fff, lsl #48
   4b15c:	sub	x0, x1, x0
   4b160:	cmp	x20, x2
   4b164:	b.ls	4b184 <mpfr_jn@@Base+0x6d4>  // b.plast
   4b168:	sub	x20, x20, x2
   4b16c:	cmp	x20, x0
   4b170:	b.hi	4be00 <mpfr_jn@@Base+0x1350>  // b.pmore
   4b174:	ldr	x0, [sp, #96]
   4b178:	add	x0, x0, x20
   4b17c:	str	x0, [sp, #96]
   4b180:	sub	x0, x1, x0
   4b184:	ldr	x1, [sp, #152]
   4b188:	cmp	x1, x0
   4b18c:	b.gt	4be44 <mpfr_jn@@Base+0x1394>
   4b190:	ldr	x0, [sp, #96]
   4b194:	ldr	x1, [sp, #152]
   4b198:	add	x0, x0, x1
   4b19c:	mov	x1, x0
   4b1a0:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   4b1a4:	cmp	x1, x0
   4b1a8:	str	x1, [sp, #96]
   4b1ac:	add	x0, x1, x1, lsr #63
   4b1b0:	ldr	x1, [sp, #528]
   4b1b4:	asr	x0, x0, #1
   4b1b8:	str	x0, [sp, #152]
   4b1bc:	b.lt	4ad08 <mpfr_jn@@Base+0x258>  // b.tstop
   4b1c0:	bl	c8e0 <mpfr_abort_prec_max@plt>
   4b1c4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4b1c8:	neg	x25, x1
   4b1cc:	cmp	x6, x0
   4b1d0:	b.le	4bca8 <mpfr_jn@@Base+0x11f8>
   4b1d4:	mrs	x5, tpidr_el0
   4b1d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4b1dc:	ldr	x1, [x0, #2576]
   4b1e0:	add	x0, x0, #0xa10
   4b1e4:	blr	x1
   4b1e8:	ldr	x1, [sp, #120]
   4b1ec:	stp	x21, x22, [sp, #32]
   4b1f0:	ldr	w0, [x5, x0]
   4b1f4:	str	w0, [sp, #208]
   4b1f8:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   4b1fc:	stp	x23, x24, [sp, #48]
   4b200:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   4b204:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4b208:	ldr	x3, [x0, #2512]
   4b20c:	add	x0, x0, #0x9d0
   4b210:	blr	x3
   4b214:	add	x3, x5, x0
   4b218:	ldr	x0, [x5, x0]
   4b21c:	stp	x27, x28, [sp, #80]
   4b220:	str	x0, [sp, #168]
   4b224:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4b228:	ldr	x7, [x0, #2544]
   4b22c:	add	x0, x0, #0x9f0
   4b230:	blr	x7
   4b234:	str	x5, [sp, #136]
   4b238:	ldr	x1, [x1]
   4b23c:	str	x4, [x3]
   4b240:	ldr	x3, [x5, x0]
   4b244:	str	x2, [x5, x0]
   4b248:	str	x3, [sp, #184]
   4b24c:	b	4ab88 <mpfr_jn@@Base+0xd8>
   4b250:	mov	x2, x25
   4b254:	mov	x1, x24
   4b258:	mov	x0, x24
   4b25c:	mov	w3, #0x0                   	// #0
   4b260:	bl	c8f0 <mpfr_div_2ui@plt>
   4b264:	b	4ae18 <mpfr_jn@@Base+0x368>
   4b268:	mov	x0, x28
   4b26c:	adrp	x1, 63000 <mpfr_bases@@Base+0xe58>
   4b270:	add	x1, x1, #0xa78
   4b274:	bl	c340 <mpfr_set_str_binary@plt>
   4b278:	ldr	x2, [sp, #112]
   4b27c:	ldr	w0, [x2, #8]
   4b280:	cmp	w0, #0x0
   4b284:	b.le	4bc24 <mpfr_jn@@Base+0x1174>
   4b288:	mov	x1, x28
   4b28c:	mov	x0, x28
   4b290:	mov	w3, #0x2                   	// #2
   4b294:	bl	bd50 <mpfr_mul@plt>
   4b298:	mov	x2, x25
   4b29c:	mov	x1, x28
   4b2a0:	mov	x0, x28
   4b2a4:	mov	w3, #0x2                   	// #2
   4b2a8:	bl	cc60 <mpfr_div_ui@plt>
   4b2ac:	ldr	x0, [sp, #384]
   4b2b0:	tbnz	x0, #63, 4bb6c <mpfr_jn@@Base+0x10bc>
   4b2b4:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   4b2b8:	cmp	x25, x1
   4b2bc:	b.hi	4b2d0 <mpfr_jn@@Base+0x820>  // b.pmore
   4b2c0:	ldr	x1, [sp, #168]
   4b2c4:	sdiv	x1, x1, x25
   4b2c8:	cmp	x0, x1
   4b2cc:	b.lt	4bb7c <mpfr_jn@@Base+0x10cc>  // b.tstop
   4b2d0:	add	x19, sp, #0x1d0
   4b2d4:	add	x22, sp, #0x1f0
   4b2d8:	mov	x0, x19
   4b2dc:	mov	x1, #0x20                  	// #32
   4b2e0:	bl	ca80 <mpfr_init2@plt>
   4b2e4:	mov	x0, x22
   4b2e8:	mov	x1, #0x20                  	// #32
   4b2ec:	bl	ca80 <mpfr_init2@plt>
   4b2f0:	ldr	x1, [sp, #112]
   4b2f4:	mov	w3, #0x0                   	// #0
   4b2f8:	mov	x2, x25
   4b2fc:	mov	x0, x19
   4b300:	bl	cc60 <mpfr_div_ui@plt>
   4b304:	mov	x1, x19
   4b308:	mov	x0, x19
   4b30c:	mov	w2, #0x0                   	// #0
   4b310:	bl	c400 <mpfr_sqr@plt>
   4b314:	mov	w3, #0x0                   	// #0
   4b318:	mov	x1, x19
   4b31c:	mov	x0, x19
   4b320:	mov	x2, #0x1                   	// #1
   4b324:	bl	c260 <mpfr_add_ui@plt>
   4b328:	mov	x1, x19
   4b32c:	mov	x0, x19
   4b330:	mov	w2, #0x0                   	// #0
   4b334:	bl	c930 <mpfr_sqrt@plt>
   4b338:	mov	x1, x19
   4b33c:	mov	x0, x19
   4b340:	mov	w3, #0x0                   	// #0
   4b344:	mov	x2, #0x1                   	// #1
   4b348:	bl	c530 <mpfr_sub_ui@plt>
   4b34c:	mov	x1, x19
   4b350:	mov	x0, x19
   4b354:	mov	x2, x25
   4b358:	mov	w3, #0x0                   	// #0
   4b35c:	bl	ba50 <mpfr_mul_ui@plt>
   4b360:	b	4ac3c <mpfr_jn@@Base+0x18c>
   4b364:	mov	w1, #0x0                   	// #0
   4b368:	mov	x0, x19
   4b36c:	bl	bca0 <mpfr_get_ui@plt>
   4b370:	mov	x20, x0
   4b374:	mov	x0, x19
   4b378:	bl	c070 <mpfr_clear@plt>
   4b37c:	mov	x0, x22
   4b380:	bl	c070 <mpfr_clear@plt>
   4b384:	mov	x1, #0xfffffffffffffe7d    	// #-387
   4b388:	movk	x1, #0x7fff, lsl #48
   4b38c:	cmp	x20, x1
   4b390:	b.hi	4bd84 <mpfr_jn@@Base+0x12d4>  // b.pmore
   4b394:	ldr	x0, [sp, #120]
   4b398:	ldr	x19, [x0]
   4b39c:	cmp	x19, #0x1
   4b3a0:	b.eq	4b3ac <mpfr_jn@@Base+0x8fc>  // b.none
   4b3a4:	str	x20, [sp, #160]
   4b3a8:	b	4aca0 <mpfr_jn@@Base+0x1f0>
   4b3ac:	add	x1, x20, #0x4
   4b3b0:	str	x20, [sp, #160]
   4b3b4:	nop
   4b3b8:	str	x1, [sp, #96]
   4b3bc:	b	4ace8 <mpfr_jn@@Base+0x238>
   4b3c0:	add	x0, sp, #0x130
   4b3c4:	str	x0, [sp, #192]
   4b3c8:	bl	bbd0 <mpfr_init@plt>
   4b3cc:	ldr	x0, [sp, #120]
   4b3d0:	ldr	x28, [x0]
   4b3d4:	cmp	x28, #0x1
   4b3d8:	b.eq	4b3f8 <mpfr_jn@@Base+0x948>  // b.none
   4b3dc:	mov	x0, x28
   4b3e0:	b.le	4be78 <mpfr_jn@@Base+0x13c8>
   4b3e4:	sub	x0, x0, #0x1
   4b3e8:	mov	w1, #0x40                  	// #64
   4b3ec:	clz	x0, x0
   4b3f0:	sub	w0, w1, w0
   4b3f4:	add	x28, x28, w0, sxtw
   4b3f8:	ldr	x0, [sp, #128]
   4b3fc:	add	x24, sp, #0x1b0
   4b400:	add	x1, x28, #0x4
   4b404:	add	x28, sp, #0x170
   4b408:	and	x2, x0, #0x1
   4b40c:	str	x2, [sp, #200]
   4b410:	and	x2, x0, #0x2
   4b414:	lsl	x0, x0, #2
   4b418:	str	x24, [sp, #96]
   4b41c:	add	x27, sp, #0x190
   4b420:	str	x0, [sp, #104]
   4b424:	add	x0, sp, #0x110
   4b428:	ldr	x24, [sp, #192]
   4b42c:	add	x19, sp, #0x1d0
   4b430:	add	x22, sp, #0x1f0
   4b434:	add	x26, sp, #0x210
   4b438:	str	x28, [sp, #160]
   4b43c:	mov	x28, x1
   4b440:	str	x0, [sp, #176]
   4b444:	add	x0, sp, #0x150
   4b448:	str	x0, [sp, #152]
   4b44c:	mov	x0, #0x40                  	// #64
   4b450:	str	x2, [sp, #216]
   4b454:	str	x25, [sp, #224]
   4b458:	str	x0, [sp, #232]
   4b45c:	mov	x1, x28
   4b460:	mov	x0, x24
   4b464:	bl	bed0 <mpfr_set_prec@plt>
   4b468:	ldr	x21, [sp, #176]
   4b46c:	mov	x1, x28
   4b470:	mov	x0, x21
   4b474:	bl	ca80 <mpfr_init2@plt>
   4b478:	ldr	x0, [sp, #152]
   4b47c:	mov	x1, x28
   4b480:	bl	ca80 <mpfr_init2@plt>
   4b484:	ldr	x0, [sp, #160]
   4b488:	mov	x1, x28
   4b48c:	bl	ca80 <mpfr_init2@plt>
   4b490:	mov	x1, x28
   4b494:	mov	x0, x27
   4b498:	bl	ca80 <mpfr_init2@plt>
   4b49c:	ldr	x0, [sp, #96]
   4b4a0:	mov	x1, x28
   4b4a4:	bl	ca80 <mpfr_init2@plt>
   4b4a8:	mov	x0, x19
   4b4ac:	mov	x1, #0x1f                  	// #31
   4b4b0:	bl	ca80 <mpfr_init2@plt>
   4b4b4:	mov	x0, x22
   4b4b8:	mov	x1, #0x1f                  	// #31
   4b4bc:	bl	ca80 <mpfr_init2@plt>
   4b4c0:	mov	x0, x26
   4b4c4:	mov	x1, #0x1f                  	// #31
   4b4c8:	bl	ca80 <mpfr_init2@plt>
   4b4cc:	ldr	x20, [sp, #112]
   4b4d0:	mov	x1, x24
   4b4d4:	mov	x0, x21
   4b4d8:	mov	w3, #0x0                   	// #0
   4b4dc:	mov	x2, x20
   4b4e0:	bl	cc40 <mpfr_sin_cos@plt>
   4b4e4:	ldr	w0, [x20, #8]
   4b4e8:	tbnz	w0, #31, 4bd70 <mpfr_jn@@Base+0x12c0>
   4b4ec:	ldr	x21, [sp, #176]
   4b4f0:	mov	x2, x24
   4b4f4:	mov	w3, #0x0                   	// #0
   4b4f8:	mov	x0, x27
   4b4fc:	mov	x1, x21
   4b500:	bl	c1a0 <mpfr_add@plt>
   4b504:	mov	x2, x24
   4b508:	mov	w3, #0x0                   	// #0
   4b50c:	mov	x1, x21
   4b510:	mov	x0, x24
   4b514:	bl	bb70 <mpfr_sub@plt>
   4b518:	mov	x20, #0x8000000000000001    	// #-9223372036854775807
   4b51c:	mov	x0, x21
   4b520:	mov	x1, x27
   4b524:	bl	c4a0 <mpfr_swap@plt>
   4b528:	str	wzr, [sp, #212]
   4b52c:	ldr	x2, [sp, #112]
   4b530:	mov	w3, #0x0                   	// #0
   4b534:	ldr	x21, [sp, #96]
   4b538:	mov	w25, #0x0                   	// #0
   4b53c:	ldr	w1, [x2, #8]
   4b540:	mov	x0, x21
   4b544:	cmp	w1, #0x0
   4b548:	mov	x1, #0xffffffffffffffff    	// #-1
   4b54c:	cneg	x1, x1, gt
   4b550:	bl	c8b0 <mpfr_si_div@plt>
   4b554:	mov	x1, x21
   4b558:	mov	x0, x21
   4b55c:	mov	w3, #0x0                   	// #0
   4b560:	mov	x2, #0x3                   	// #3
   4b564:	bl	c8f0 <mpfr_div_2ui@plt>
   4b568:	mov	x21, #0x1                   	// #1
   4b56c:	ldr	x0, [sp, #152]
   4b570:	mov	w3, #0x0                   	// #0
   4b574:	mov	x2, #0x0                   	// #0
   4b578:	mov	x1, #0x1                   	// #1
   4b57c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4b580:	str	x20, [sp, #384]
   4b584:	mov	w0, #0x1                   	// #1
   4b588:	mov	w3, #0x0                   	// #0
   4b58c:	mov	x2, #0x0                   	// #0
   4b590:	mov	x1, #0x1                   	// #1
   4b594:	str	w0, [sp, #376]
   4b598:	mov	x0, x27
   4b59c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4b5a0:	str	x20, [sp, #480]
   4b5a4:	mov	w0, #0x1                   	// #1
   4b5a8:	str	w0, [sp, #472]
   4b5ac:	str	w0, [sp, #504]
   4b5b0:	str	x20, [sp, #512]
   4b5b4:	nop
   4b5b8:	ldr	x0, [sp, #128]
   4b5bc:	add	x23, x21, x21, lsl #1
   4b5c0:	add	x20, x0, x21
   4b5c4:	lsl	x23, x23, #1
   4b5c8:	lsl	x20, x20, #1
   4b5cc:	sub	x20, x20, #0x1
   4b5d0:	mov	x2, x20
   4b5d4:	mov	x1, x27
   4b5d8:	mov	w3, #0x0                   	// #0
   4b5dc:	mov	x0, x27
   4b5e0:	bl	c960 <mpfr_mul_si@plt>
   4b5e4:	ldr	x0, [sp, #104]
   4b5e8:	mov	x1, x27
   4b5ec:	mov	w3, #0x0                   	// #0
   4b5f0:	sub	x2, x0, x20
   4b5f4:	mov	x0, x27
   4b5f8:	bl	c960 <mpfr_mul_si@plt>
   4b5fc:	mov	x2, x21
   4b600:	mov	x1, x27
   4b604:	mov	w3, #0x0                   	// #0
   4b608:	mov	x0, x27
   4b60c:	bl	cc60 <mpfr_div_ui@plt>
   4b610:	ldr	x2, [sp, #96]
   4b614:	mov	x1, x27
   4b618:	mov	w3, #0x0                   	// #0
   4b61c:	mov	x0, x27
   4b620:	bl	bd50 <mpfr_mul@plt>
   4b624:	ldr	w0, [sp, #408]
   4b628:	mov	x2, x23
   4b62c:	mov	x1, x27
   4b630:	cmp	w0, #0x0
   4b634:	mov	x0, x19
   4b638:	cset	w3, le
   4b63c:	add	w3, w3, #0x2
   4b640:	bl	ba50 <mpfr_mul_ui@plt>
   4b644:	mov	x1, x19
   4b648:	mov	w3, #0x1                   	// #1
   4b64c:	mov	w2, #0x0                   	// #0
   4b650:	mov	x0, x19
   4b654:	bl	c6a0 <mpfr_set4@plt>
   4b658:	mov	x1, x27
   4b65c:	mov	w3, #0x1                   	// #1
   4b660:	mov	w2, #0x2                   	// #2
   4b664:	mov	x0, x26
   4b668:	bl	c6a0 <mpfr_set4@plt>
   4b66c:	mov	x2, x28
   4b670:	mov	x1, x26
   4b674:	mov	w3, #0x2                   	// #2
   4b678:	mov	x0, x26
   4b67c:	bl	c2c0 <mpfr_mul_2ui@plt>
   4b680:	mov	x2, x19
   4b684:	mov	x1, x26
   4b688:	mov	x0, x26
   4b68c:	mov	w3, #0x2                   	// #2
   4b690:	bl	c1a0 <mpfr_add@plt>
   4b694:	cmp	w25, #0x1
   4b698:	b.gt	4b750 <mpfr_jn@@Base+0xca0>
   4b69c:	and	x0, x21, #0x2
   4b6a0:	mov	x2, x27
   4b6a4:	mov	w3, #0x0                   	// #0
   4b6a8:	tbz	w21, #0, 4b7c0 <mpfr_jn@@Base+0xd10>
   4b6ac:	cbnz	x0, 4b814 <mpfr_jn@@Base+0xd64>
   4b6b0:	ldr	x0, [sp, #160]
   4b6b4:	mov	x1, x0
   4b6b8:	bl	c1a0 <mpfr_add@plt>
   4b6bc:	ldr	x0, [sp, #384]
   4b6c0:	ldr	x1, [sp, #544]
   4b6c4:	cmp	x1, x0
   4b6c8:	b.le	4b7e0 <mpfr_jn@@Base+0xd30>
   4b6cc:	mov	w25, #0x0                   	// #0
   4b6d0:	mov	x2, x19
   4b6d4:	mov	x1, x22
   4b6d8:	mov	x0, x22
   4b6dc:	mov	w3, #0x2                   	// #2
   4b6e0:	bl	c1a0 <mpfr_add@plt>
   4b6e4:	ldr	x3, [sp, #112]
   4b6e8:	add	x21, x21, #0x1
   4b6ec:	ldr	w0, [x3, #8]
   4b6f0:	cmp	w0, #0x0
   4b6f4:	b.gt	4b730 <mpfr_jn@@Base+0xc80>
   4b6f8:	tbz	w0, #31, 4b5b8 <mpfr_jn@@Base+0xb08>
   4b6fc:	ldr	x0, [sp, #112]
   4b700:	add	x1, x21, x21, lsr #63
   4b704:	mov	x2, #0x0                   	// #0
   4b708:	neg	x1, x1, asr #1
   4b70c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   4b710:	cmp	w0, #0x0
   4b714:	b.le	4b5b8 <mpfr_jn@@Base+0xb08>
   4b718:	mov	w0, #0x1                   	// #1
   4b71c:	add	x20, x20, #0x2
   4b720:	add	x23, x23, #0x6
   4b724:	mov	w25, #0x2                   	// #2
   4b728:	str	w0, [sp, #212]
   4b72c:	b	4b5d0 <mpfr_jn@@Base+0xb20>
   4b730:	asr	x1, x21, #1
   4b734:	mov	x0, x3
   4b738:	mov	x2, #0x0                   	// #0
   4b73c:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4b740:	tbnz	w0, #31, 4b718 <mpfr_jn@@Base+0xc68>
   4b744:	ldr	x3, [sp, #112]
   4b748:	ldr	w0, [x3, #8]
   4b74c:	b	4b6f8 <mpfr_jn@@Base+0xc48>
   4b750:	mov	x2, x28
   4b754:	mov	x1, x22
   4b758:	mov	w3, #0x2                   	// #2
   4b75c:	mov	x0, x22
   4b760:	bl	c8f0 <mpfr_div_2ui@plt>
   4b764:	ldr	w0, [sp, #408]
   4b768:	mov	x2, x27
   4b76c:	mov	x1, x22
   4b770:	mov	w3, #0x2                   	// #2
   4b774:	cmp	w0, #0x0
   4b778:	mov	x0, x22
   4b77c:	b.le	4b80c <mpfr_jn@@Base+0xd5c>
   4b780:	bl	c1a0 <mpfr_add@plt>
   4b784:	mov	x2, x28
   4b788:	mov	x1, x22
   4b78c:	mov	w3, #0x2                   	// #2
   4b790:	mov	x0, x22
   4b794:	bl	c2c0 <mpfr_mul_2ui@plt>
   4b798:	mov	x2, x19
   4b79c:	mov	x1, x22
   4b7a0:	mov	x0, x22
   4b7a4:	mov	w3, #0x2                   	// #2
   4b7a8:	bl	c1a0 <mpfr_add@plt>
   4b7ac:	cmp	w25, #0x2
   4b7b0:	b.ne	4b834 <mpfr_jn@@Base+0xd84>  // b.any
   4b7b4:	add	x21, x21, #0x1
   4b7b8:	mov	w25, #0x3                   	// #3
   4b7bc:	b	4b5b8 <mpfr_jn@@Base+0xb08>
   4b7c0:	cbnz	x0, 4b824 <mpfr_jn@@Base+0xd74>
   4b7c4:	ldr	x0, [sp, #152]
   4b7c8:	mov	x1, x0
   4b7cc:	bl	c1a0 <mpfr_add@plt>
   4b7d0:	ldr	x0, [sp, #352]
   4b7d4:	ldr	x1, [sp, #544]
   4b7d8:	cmp	x1, x0
   4b7dc:	b.gt	4b6cc <mpfr_jn@@Base+0xc1c>
   4b7e0:	add	w25, w25, #0x1
   4b7e4:	mov	x2, x19
   4b7e8:	mov	x1, x22
   4b7ec:	mov	x0, x22
   4b7f0:	mov	w3, #0x2                   	// #2
   4b7f4:	bl	c1a0 <mpfr_add@plt>
   4b7f8:	cmp	w25, #0x1
   4b7fc:	b.eq	4b6e4 <mpfr_jn@@Base+0xc34>  // b.none
   4b800:	add	x21, x21, #0x1
   4b804:	mov	w25, #0x2                   	// #2
   4b808:	b	4b5b8 <mpfr_jn@@Base+0xb08>
   4b80c:	bl	bb70 <mpfr_sub@plt>
   4b810:	b	4b784 <mpfr_jn@@Base+0xcd4>
   4b814:	ldr	x0, [sp, #160]
   4b818:	mov	x1, x0
   4b81c:	bl	bb70 <mpfr_sub@plt>
   4b820:	b	4b6bc <mpfr_jn@@Base+0xc0c>
   4b824:	ldr	x0, [sp, #152]
   4b828:	mov	x1, x0
   4b82c:	bl	bb70 <mpfr_sub@plt>
   4b830:	b	4b7d0 <mpfr_jn@@Base+0xd20>
   4b834:	ldr	x0, [sp, #200]
   4b838:	mov	w3, #0x0                   	// #0
   4b83c:	cbz	x0, 4bae0 <mpfr_jn@@Base+0x1030>
   4b840:	ldr	x2, [sp, #152]
   4b844:	mov	x1, x24
   4b848:	mov	x0, x24
   4b84c:	bl	bd50 <mpfr_mul@plt>
   4b850:	ldr	x2, [sp, #160]
   4b854:	mov	w3, #0x0                   	// #0
   4b858:	ldr	x21, [sp, #176]
   4b85c:	mov	x1, x21
   4b860:	mov	x0, x21
   4b864:	bl	bd50 <mpfr_mul@plt>
   4b868:	ldr	x20, [sp, #288]
   4b86c:	mov	x2, x24
   4b870:	ldr	x5, [sp, #320]
   4b874:	mov	x1, x21
   4b878:	mov	x0, x21
   4b87c:	mov	w3, #0x0                   	// #0
   4b880:	cmp	x20, x5
   4b884:	csel	x20, x20, x5, ge  // ge = tcont
   4b888:	bl	c1a0 <mpfr_add@plt>
   4b88c:	ldr	x0, [sp, #216]
   4b890:	cbnz	x0, 4bb34 <mpfr_jn@@Base+0x1084>
   4b894:	ldr	x3, [sp, #288]
   4b898:	mov	w2, #0x0                   	// #0
   4b89c:	ldr	x1, [sp, #352]
   4b8a0:	cmp	x3, x20
   4b8a4:	ldr	x0, [sp, #384]
   4b8a8:	add	x6, x1, #0x2
   4b8ac:	ldr	x5, [sp, #512]
   4b8b0:	csel	x3, x3, x20, ge  // ge = tcont
   4b8b4:	cmp	x1, x0
   4b8b8:	add	x1, x0, #0x2
   4b8bc:	csel	x1, x1, x6, lt  // lt = tstop
   4b8c0:	add	x0, x3, #0x2
   4b8c4:	cmp	x3, x5
   4b8c8:	add	x5, x5, #0x2
   4b8cc:	csel	x0, x0, x5, gt
   4b8d0:	add	x20, x1, #0x1
   4b8d4:	cmp	x1, x0
   4b8d8:	csinc	x20, x20, x0, gt
   4b8dc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4b8e0:	ldr	x1, [x0, #2624]
   4b8e4:	add	x0, x0, #0xa40
   4b8e8:	blr	x1
   4b8ec:	ldr	x1, [sp, #136]
   4b8f0:	add	x1, x1, x0
   4b8f4:	mov	x0, x24
   4b8f8:	bl	c380 <mpfr_cache@plt>
   4b8fc:	ldr	x21, [sp, #112]
   4b900:	mov	x1, x24
   4b904:	mov	w3, #0x0                   	// #0
   4b908:	mov	x0, x24
   4b90c:	mov	x2, x21
   4b910:	bl	bd50 <mpfr_mul@plt>
   4b914:	ldr	w0, [x21, #8]
   4b918:	mov	w3, #0x0                   	// #0
   4b91c:	mov	x2, x24
   4b920:	mov	x1, #0xffffffffffffffff    	// #-1
   4b924:	cmp	w0, #0x0
   4b928:	mov	x0, x24
   4b92c:	cneg	x1, x1, gt
   4b930:	bl	c8b0 <mpfr_si_div@plt>
   4b934:	mov	x1, x24
   4b938:	mov	w2, #0x0                   	// #0
   4b93c:	mov	x0, x24
   4b940:	bl	c930 <mpfr_sqrt@plt>
   4b944:	ldr	w5, [sp, #312]
   4b948:	mov	x1, x24
   4b94c:	ldr	w3, [sp, #280]
   4b950:	mov	x0, x19
   4b954:	ldr	x21, [sp, #176]
   4b958:	cmp	w5, w3
   4b95c:	cset	w3, ne  // ne = any
   4b960:	add	w3, w3, #0x2
   4b964:	mov	x2, x21
   4b968:	bl	bd50 <mpfr_mul@plt>
   4b96c:	mov	x1, x19
   4b970:	mov	w3, #0x1                   	// #1
   4b974:	mov	w2, #0x2                   	// #2
   4b978:	mov	x0, x19
   4b97c:	bl	c6a0 <mpfr_set4@plt>
   4b980:	mov	x1, x19
   4b984:	mov	w3, #0x2                   	// #2
   4b988:	mov	x2, #0x3                   	// #3
   4b98c:	mov	x0, x19
   4b990:	bl	ba50 <mpfr_mul_ui@plt>
   4b994:	ldr	x0, [sp, #320]
   4b998:	mov	x2, x21
   4b99c:	mov	x1, x24
   4b9a0:	mov	w3, #0x0                   	// #0
   4b9a4:	add	x20, x20, x0
   4b9a8:	mov	x0, x24
   4b9ac:	bl	bd50 <mpfr_mul@plt>
   4b9b0:	ldr	x2, [sp, #320]
   4b9b4:	add	x3, x20, #0x1
   4b9b8:	ldr	x1, [sp, #480]
   4b9bc:	add	x5, x2, #0x1
   4b9c0:	mov	x0, x21
   4b9c4:	cmp	x1, x2
   4b9c8:	csinc	x1, x5, x1, le
   4b9cc:	cmp	x20, x1
   4b9d0:	csinc	x20, x3, x1, gt
   4b9d4:	bl	c070 <mpfr_clear@plt>
   4b9d8:	ldr	x0, [sp, #152]
   4b9dc:	bl	c070 <mpfr_clear@plt>
   4b9e0:	ldr	x0, [sp, #160]
   4b9e4:	bl	c070 <mpfr_clear@plt>
   4b9e8:	mov	x0, x27
   4b9ec:	bl	c070 <mpfr_clear@plt>
   4b9f0:	ldr	x0, [sp, #96]
   4b9f4:	bl	c070 <mpfr_clear@plt>
   4b9f8:	mov	x0, x19
   4b9fc:	bl	c070 <mpfr_clear@plt>
   4ba00:	mov	x0, x22
   4ba04:	bl	c070 <mpfr_clear@plt>
   4ba08:	mov	x0, x26
   4ba0c:	bl	c070 <mpfr_clear@plt>
   4ba10:	ldr	x0, [sp, #320]
   4ba14:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4ba18:	sub	x20, x20, x0
   4ba1c:	cmp	x0, x1
   4ba20:	b.le	4bdb0 <mpfr_jn@@Base+0x1300>
   4ba24:	ldr	x2, [sp, #120]
   4ba28:	ldr	w0, [sp, #148]
   4ba2c:	ldr	x1, [sp, #304]
   4ba30:	cmp	w0, #0x0
   4ba34:	ldr	x0, [sp, #328]
   4ba38:	sub	x1, x1, #0x1
   4ba3c:	ldr	x3, [x2]
   4ba40:	asr	x1, x1, #6
   4ba44:	add	x1, x1, #0x1
   4ba48:	sub	x2, x28, x20
   4ba4c:	cinc	x3, x3, eq  // eq = none
   4ba50:	bl	c370 <mpfr_round_p@plt>
   4ba54:	cbz	w0, 4bdb0 <mpfr_jn@@Base+0x1300>
   4ba58:	ldr	x0, [sp, #112]
   4ba5c:	ldr	x28, [sp, #160]
   4ba60:	ldr	w1, [x0, #8]
   4ba64:	ldr	w0, [sp, #200]
   4ba68:	cmp	w1, #0x0
   4ba6c:	cset	w1, gt
   4ba70:	eor	w0, w0, #0x1
   4ba74:	orr	w0, w1, w0
   4ba78:	ldr	x25, [sp, #224]
   4ba7c:	cbz	w0, 4bde8 <mpfr_jn@@Base+0x1338>
   4ba80:	ldr	w2, [sp, #148]
   4ba84:	ldr	w3, [sp, #312]
   4ba88:	ldr	x0, [sp, #120]
   4ba8c:	ldr	x1, [sp, #192]
   4ba90:	bl	c6a0 <mpfr_set4@plt>
   4ba94:	mov	w19, w0
   4ba98:	ldr	x0, [sp, #192]
   4ba9c:	bl	c070 <mpfr_clear@plt>
   4baa0:	ldr	w0, [sp, #148]
   4baa4:	cmp	w0, #0x5
   4baa8:	b.eq	4bcfc <mpfr_jn@@Base+0x124c>  // b.none
   4baac:	cbz	w19, 4abcc <mpfr_jn@@Base+0x11c>
   4bab0:	ldp	x21, x22, [sp, #32]
   4bab4:	ldp	x23, x24, [sp, #48]
   4bab8:	ldp	x27, x28, [sp, #80]
   4babc:	b	4bd0c <mpfr_jn@@Base+0x125c>
   4bac0:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4bac4:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4bac8:	add	x2, x2, #0xb60
   4bacc:	add	x0, x0, #0xa40
   4bad0:	mov	w1, #0x12a                 	// #298
   4bad4:	bl	cb40 <mpfr_assert_fail@plt>
   4bad8:	ldr	x2, [sp, #416]
   4badc:	b	4afcc <mpfr_jn@@Base+0x51c>
   4bae0:	ldr	x2, [sp, #160]
   4bae4:	mov	x1, x24
   4bae8:	mov	x0, x24
   4baec:	bl	bd50 <mpfr_mul@plt>
   4baf0:	ldr	x2, [sp, #152]
   4baf4:	mov	w3, #0x0                   	// #0
   4baf8:	ldr	x21, [sp, #176]
   4bafc:	mov	x1, x21
   4bb00:	mov	x0, x21
   4bb04:	bl	bd50 <mpfr_mul@plt>
   4bb08:	ldr	x20, [sp, #288]
   4bb0c:	mov	x2, x24
   4bb10:	ldr	x5, [sp, #320]
   4bb14:	mov	x1, x21
   4bb18:	mov	x0, x21
   4bb1c:	mov	w3, #0x0                   	// #0
   4bb20:	cmp	x20, x5
   4bb24:	csel	x20, x20, x5, ge  // ge = tcont
   4bb28:	bl	bb70 <mpfr_sub@plt>
   4bb2c:	ldr	x0, [sp, #216]
   4bb30:	cbz	x0, 4b894 <mpfr_jn@@Base+0xde4>
   4bb34:	ldr	x0, [sp, #176]
   4bb38:	mov	w2, #0x0                   	// #0
   4bb3c:	mov	x1, x0
   4bb40:	bl	bd70 <mpfr_neg@plt>
   4bb44:	b	4b894 <mpfr_jn@@Base+0xde4>
   4bb48:	stp	x23, x24, [sp, #48]
   4bb4c:	stp	x27, x28, [sp, #80]
   4bb50:	ldr	x25, [sp, #128]
   4bb54:	b	4ab88 <mpfr_jn@@Base+0xd8>
   4bb58:	mov	x25, #0x0                   	// #0
   4bb5c:	stp	x21, x22, [sp, #32]
   4bb60:	stp	x23, x24, [sp, #48]
   4bb64:	stp	x27, x28, [sp, #80]
   4bb68:	b	4ab88 <mpfr_jn@@Base+0xd8>
   4bb6c:	ldr	x1, [sp, #168]
   4bb70:	neg	x1, x1
   4bb74:	cmp	x1, x25
   4bb78:	b.cs	4b2b4 <mpfr_jn@@Base+0x804>  // b.hs, b.nlast
   4bb7c:	ldr	x1, [sp, #528]
   4bb80:	cbz	x1, 4bb8c <mpfr_jn@@Base+0x10dc>
   4bb84:	ldr	x0, [sp, #536]
   4bb88:	bl	cc20 <mpfr_free_func@plt>
   4bb8c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4bb90:	ldr	x1, [x0, #2576]
   4bb94:	add	x0, x0, #0xa10
   4bb98:	blr	x1
   4bb9c:	ldr	w2, [sp, #208]
   4bba0:	ldr	x1, [sp, #136]
   4bba4:	str	w2, [x1, x0]
   4bba8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4bbac:	ldr	x2, [x0, #2512]
   4bbb0:	add	x0, x0, #0x9d0
   4bbb4:	blr	x2
   4bbb8:	ldr	x2, [sp, #168]
   4bbbc:	str	x2, [x1, x0]
   4bbc0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4bbc4:	ldr	x2, [x0, #2544]
   4bbc8:	add	x0, x0, #0x9f0
   4bbcc:	blr	x2
   4bbd0:	ldr	x2, [sp, #184]
   4bbd4:	str	x2, [x1, x0]
   4bbd8:	ldr	w0, [sp, #148]
   4bbdc:	mov	w2, #0x1                   	// #1
   4bbe0:	cmp	w0, #0x0
   4bbe4:	csel	w0, w0, w2, ne  // ne = any
   4bbe8:	str	w0, [sp, #148]
   4bbec:	ldr	x0, [sp, #128]
   4bbf0:	tbz	w0, #0, 4bc04 <mpfr_jn@@Base+0x1154>
   4bbf4:	cmp	x0, #0x0
   4bbf8:	ldr	x0, [sp, #112]
   4bbfc:	ldr	w2, [x0, #8]
   4bc00:	b.le	4c0b8 <mpfr_jn@@Base+0x1608>
   4bc04:	ldr	w1, [sp, #148]
   4bc08:	ldr	x0, [sp, #120]
   4bc0c:	bl	c3c0 <mpfr_underflow@plt>
   4bc10:	mov	w19, w0
   4bc14:	ldp	x21, x22, [sp, #32]
   4bc18:	ldp	x23, x24, [sp, #48]
   4bc1c:	ldp	x27, x28, [sp, #80]
   4bc20:	b	4b0d4 <mpfr_jn@@Base+0x624>
   4bc24:	ldr	x2, [sp, #112]
   4bc28:	mov	w3, #0x3                   	// #3
   4bc2c:	mov	x1, x28
   4bc30:	mov	x0, x28
   4bc34:	bl	bd50 <mpfr_mul@plt>
   4bc38:	mov	x1, x28
   4bc3c:	mov	x0, x28
   4bc40:	mov	w2, #0x2                   	// #2
   4bc44:	bl	bd70 <mpfr_neg@plt>
   4bc48:	b	4b298 <mpfr_jn@@Base+0x7e8>
   4bc4c:	ldr	w2, [sp, #148]
   4bc50:	mov	x1, x27
   4bc54:	ldr	x0, [sp, #120]
   4bc58:	bl	bd70 <mpfr_neg@plt>
   4bc5c:	mov	w19, w0
   4bc60:	b	4b044 <mpfr_jn@@Base+0x594>
   4bc64:	mov	x0, #0xfffffffffffffefd    	// #-259
   4bc68:	mov	x19, #0x2                   	// #2
   4bc6c:	movk	x0, #0x7fff, lsl #48
   4bc70:	b	4afc0 <mpfr_jn@@Base+0x510>
   4bc74:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4bc78:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4bc7c:	add	x2, x2, #0xaa0
   4bc80:	add	x0, x0, #0xa40
   4bc84:	mov	w1, #0xfc                  	// #252
   4bc88:	bl	cb40 <mpfr_assert_fail@plt>
   4bc8c:	b	4addc <mpfr_jn@@Base+0x32c>
   4bc90:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4bc94:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4bc98:	add	x2, x2, #0xaf0
   4bc9c:	add	x0, x0, #0xa40
   4bca0:	mov	w1, #0x128                 	// #296
   4bca4:	bl	cb40 <mpfr_assert_fail@plt>
   4bca8:	mov	x1, x25
   4bcac:	mov	x0, #0x2                   	// #2
   4bcb0:	movk	x0, #0x8000, lsl #48
   4bcb4:	cmp	x6, x0
   4bcb8:	b.eq	4bee0 <mpfr_jn@@Base+0x1430>  // b.none
   4bcbc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4bcc0:	cmp	x6, x0
   4bcc4:	b.eq	4be5c <mpfr_jn@@Base+0x13ac>  // b.none
   4bcc8:	ldr	x0, [sp, #128]
   4bccc:	cbz	x0, 4be18 <mpfr_jn@@Base+0x1368>
   4bcd0:	tbz	w1, #0, 4be5c <mpfr_jn@@Base+0x13ac>
   4bcd4:	ldr	x0, [sp, #128]
   4bcd8:	cmp	x0, #0x0
   4bcdc:	b.le	4bf64 <mpfr_jn@@Base+0x14b4>
   4bce0:	ldr	x1, [sp, #112]
   4bce4:	ldr	w2, [sp, #148]
   4bce8:	ldr	x0, [sp, #120]
   4bcec:	ldr	w3, [x1, #8]
   4bcf0:	bl	c6a0 <mpfr_set4@plt>
   4bcf4:	mov	w19, w0
   4bcf8:	b	4b0d4 <mpfr_jn@@Base+0x624>
   4bcfc:	ldp	x21, x22, [sp, #32]
   4bd00:	mov	w19, #0x1                   	// #1
   4bd04:	ldp	x23, x24, [sp, #48]
   4bd08:	ldp	x27, x28, [sp, #80]
   4bd0c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4bd10:	ldr	x1, [x0, #2576]
   4bd14:	add	x0, x0, #0xa10
   4bd18:	blr	x1
   4bd1c:	ldr	x2, [sp, #136]
   4bd20:	ldr	w1, [sp, #208]
   4bd24:	str	w1, [x2, x0]
   4bd28:	ldr	x0, [sp, #120]
   4bd2c:	ldr	x1, [x0, #16]
   4bd30:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4bd34:	ldr	x3, [x0, #2512]
   4bd38:	add	x0, x0, #0x9d0
   4bd3c:	blr	x3
   4bd40:	ldr	x3, [sp, #168]
   4bd44:	str	x3, [x2, x0]
   4bd48:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4bd4c:	ldr	x4, [x0, #2544]
   4bd50:	add	x0, x0, #0x9f0
   4bd54:	blr	x4
   4bd58:	ldr	x4, [sp, #184]
   4bd5c:	str	x4, [x2, x0]
   4bd60:	cmp	x4, x1
   4bd64:	ccmp	x1, x3, #0x1, ge  // ge = tcont
   4bd68:	b.lt	4b0c0 <mpfr_jn@@Base+0x610>  // b.tstop
   4bd6c:	b	4b0f0 <mpfr_jn@@Base+0x640>
   4bd70:	ldr	x0, [sp, #176]
   4bd74:	mov	w2, #0x0                   	// #0
   4bd78:	mov	x1, x0
   4bd7c:	bl	bd70 <mpfr_neg@plt>
   4bd80:	b	4b4ec <mpfr_jn@@Base+0xa3c>
   4bd84:	str	x20, [sp, #160]
   4bd88:	b	4ac88 <mpfr_jn@@Base+0x1d8>
   4bd8c:	mov	w1, #0xed                  	// #237
   4bd90:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4bd94:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4bd98:	add	x2, x2, #0xa48
   4bd9c:	add	x0, x0, #0xa40
   4bda0:	bl	cb40 <mpfr_assert_fail@plt>
   4bda4:	ldr	x0, [sp, #120]
   4bda8:	ldr	x1, [x0]
   4bdac:	b	4acac <mpfr_jn@@Base+0x1fc>
   4bdb0:	ldr	w0, [sp, #212]
   4bdb4:	cbnz	w0, 4c010 <mpfr_jn@@Base+0x1560>
   4bdb8:	ldr	x1, [sp, #232]
   4bdbc:	mov	x0, #0xfffffffffffffeff    	// #-257
   4bdc0:	movk	x0, #0x7fff, lsl #48
   4bdc4:	sub	x0, x0, x28
   4bdc8:	cmp	x0, x1
   4bdcc:	b.lt	4bfa4 <mpfr_jn@@Base+0x14f4>  // b.tstop
   4bdd0:	ldr	x0, [sp, #232]
   4bdd4:	add	x28, x28, x0
   4bdd8:	add	x0, x28, x28, lsr #63
   4bddc:	asr	x0, x0, #1
   4bde0:	str	x0, [sp, #232]
   4bde4:	b	4b45c <mpfr_jn@@Base+0x9ac>
   4bde8:	ldr	w2, [sp, #148]
   4bdec:	ldr	x0, [sp, #120]
   4bdf0:	ldr	x1, [sp, #192]
   4bdf4:	bl	bd70 <mpfr_neg@plt>
   4bdf8:	mov	w19, w0
   4bdfc:	b	4ba98 <mpfr_jn@@Base+0xfe8>
   4be00:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4be04:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4be08:	add	x2, x2, #0xb10
   4be0c:	add	x0, x0, #0xa40
   4be10:	mov	w1, #0x13e                 	// #318
   4be14:	bl	cb40 <mpfr_assert_fail@plt>
   4be18:	ldr	w3, [sp, #148]
   4be1c:	mov	x2, #0x0                   	// #0
   4be20:	ldr	x0, [sp, #120]
   4be24:	mov	x1, #0x1                   	// #1
   4be28:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4be2c:	mov	w19, w0
   4be30:	b	4b0d4 <mpfr_jn@@Base+0x624>
   4be34:	mov	x0, #0xfffffffffffffe82    	// #-382
   4be38:	movk	x0, #0x7fff, lsl #48
   4be3c:	str	x0, [sp, #96]
   4be40:	b	4ace8 <mpfr_jn@@Base+0x238>
   4be44:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   4be48:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4be4c:	add	x2, x2, #0x830
   4be50:	add	x0, x0, #0xa40
   4be54:	mov	w1, #0x13f                 	// #319
   4be58:	bl	cb40 <mpfr_assert_fail@plt>
   4be5c:	ldr	x2, [sp, #120]
   4be60:	mov	w1, #0x1                   	// #1
   4be64:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4be68:	mov	w19, #0x0                   	// #0
   4be6c:	str	w1, [x2, #8]
   4be70:	str	x0, [x2, #16]
   4be74:	b	4b0d4 <mpfr_jn@@Base+0x624>
   4be78:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4be7c:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4be80:	add	x2, x2, #0xa48
   4be84:	add	x0, x0, #0xa68
   4be88:	mov	w1, #0x36                  	// #54
   4be8c:	bl	cb40 <mpfr_assert_fail@plt>
   4be90:	ldr	x0, [sp, #120]
   4be94:	ldr	x0, [x0]
   4be98:	b	4b3e4 <mpfr_jn@@Base+0x934>
   4be9c:	adrp	x1, 7f000 <__gmpfr_l2b@@Base+0x200>
   4bea0:	ldr	w4, [sp, #148]
   4bea4:	ldr	x20, [sp, #120]
   4bea8:	mov	w3, #0x0                   	// #0
   4beac:	ldr	x1, [x1, #3928]
   4beb0:	mov	x0, x20
   4beb4:	bl	c540 <mpfr_round_near_x@plt>
   4beb8:	mov	w19, w0
   4bebc:	cbnz	w0, 4bd0c <mpfr_jn@@Base+0x125c>
   4bec0:	ldr	x0, [sp, #112]
   4bec4:	stp	x21, x22, [sp, #32]
   4bec8:	stp	x23, x24, [sp, #48]
   4becc:	stp	x27, x28, [sp, #80]
   4bed0:	ldr	x1, [x20]
   4bed4:	ldr	x6, [x0, #16]
   4bed8:	ldr	x25, [sp, #128]
   4bedc:	b	4ab88 <mpfr_jn@@Base+0xd8>
   4bee0:	mrs	x1, tpidr_el0
   4bee4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4bee8:	ldr	x2, [x0, #2576]
   4beec:	add	x0, x0, #0xa10
   4bef0:	blr	x2
   4bef4:	add	x0, x1, x0
   4bef8:	mov	w19, #0x0                   	// #0
   4befc:	ldr	x1, [sp, #120]
   4bf00:	str	x6, [x1, #16]
   4bf04:	ldr	w1, [x0]
   4bf08:	orr	w1, w1, #0x4
   4bf0c:	str	w1, [x0]
   4bf10:	b	4b0d4 <mpfr_jn@@Base+0x624>
   4bf14:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4bf18:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4bf1c:	add	x2, x2, #0xb00
   4bf20:	add	x0, x0, #0xa40
   4bf24:	mov	w1, #0x137                 	// #311
   4bf28:	bl	cb40 <mpfr_assert_fail@plt>
   4bf2c:	ldp	x21, x19, [sp, #112]
   4bf30:	mov	w3, #0x0                   	// #0
   4bf34:	ldr	w4, [sp, #148]
   4bf38:	mov	x1, x21
   4bf3c:	mov	x0, x19
   4bf40:	bl	c540 <mpfr_round_near_x@plt>
   4bf44:	mov	w20, w0
   4bf48:	cbnz	w0, 4bfbc <mpfr_jn@@Base+0x150c>
   4bf4c:	stp	x23, x24, [sp, #48]
   4bf50:	stp	x27, x28, [sp, #80]
   4bf54:	ldr	x1, [x19]
   4bf58:	ldr	x6, [x21, #16]
   4bf5c:	ldr	x25, [sp, #128]
   4bf60:	b	4ab88 <mpfr_jn@@Base+0xd8>
   4bf64:	ldp	x1, x0, [sp, #112]
   4bf68:	ldr	w2, [sp, #148]
   4bf6c:	bl	bd70 <mpfr_neg@plt>
   4bf70:	mov	w19, w0
   4bf74:	b	4b0d4 <mpfr_jn@@Base+0x624>
   4bf78:	mov	x2, x26
   4bf7c:	mov	x1, x24
   4bf80:	mov	x0, x24
   4bf84:	mov	w3, #0x0                   	// #0
   4bf88:	bl	cc60 <mpfr_div_ui@plt>
   4bf8c:	mov	x2, x23
   4bf90:	mov	x1, x24
   4bf94:	mov	x0, x24
   4bf98:	mov	w3, #0x0                   	// #0
   4bf9c:	bl	cc60 <mpfr_div_ui@plt>
   4bfa0:	b	4ae80 <mpfr_jn@@Base+0x3d0>
   4bfa4:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   4bfa8:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4bfac:	add	x2, x2, #0xeb0
   4bfb0:	add	x0, x0, #0xa68
   4bfb4:	mov	w1, #0x106                 	// #262
   4bfb8:	bl	cb40 <mpfr_assert_fail@plt>
   4bfbc:	ldp	x21, x2, [sp, #120]
   4bfc0:	ldr	w22, [sp, #148]
   4bfc4:	mov	w3, w22
   4bfc8:	mov	x1, x21
   4bfcc:	mov	x0, x21
   4bfd0:	bl	c8f0 <mpfr_div_2ui@plt>
   4bfd4:	mov	w19, w0
   4bfd8:	cbz	w22, 4c034 <mpfr_jn@@Base+0x1584>
   4bfdc:	ldr	x1, [x21, #16]
   4bfe0:	cmp	w19, #0x0
   4bfe4:	csel	w19, w19, w20, ne  // ne = any
   4bfe8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4bfec:	ldr	x2, [x0, #2576]
   4bff0:	add	x0, x0, #0xa10
   4bff4:	blr	x2
   4bff8:	ldr	x2, [sp, #136]
   4bffc:	ldr	w0, [x2, x0]
   4c000:	ldr	w2, [sp, #208]
   4c004:	orr	w0, w2, w0
   4c008:	str	w0, [sp, #208]
   4c00c:	b	4b064 <mpfr_jn@@Base+0x5b4>
   4c010:	ldr	x0, [sp, #192]
   4c014:	ldr	x28, [sp, #160]
   4c018:	ldr	x25, [sp, #224]
   4c01c:	bl	c070 <mpfr_clear@plt>
   4c020:	b	4abcc <mpfr_jn@@Base+0x11c>
   4c024:	mov	x25, x0
   4c028:	stp	x23, x24, [sp, #48]
   4c02c:	stp	x27, x28, [sp, #80]
   4c030:	b	4ab88 <mpfr_jn@@Base+0xd8>
   4c034:	ldr	x0, [sp, #120]
   4c038:	ldr	x1, [x0, #16]
   4c03c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4c040:	cmp	x1, x0
   4c044:	b.ne	4bfe0 <mpfr_jn@@Base+0x1530>  // b.any
   4c048:	cbz	w19, 4c098 <mpfr_jn@@Base+0x15e8>
   4c04c:	ldr	x0, [sp, #112]
   4c050:	cmp	w20, #0x0
   4c054:	ldr	w2, [x0, #8]
   4c058:	mov	w0, #0x1                   	// #1
   4c05c:	cneg	w0, w0, lt  // lt = tstop
   4c060:	cmp	w2, w0
   4c064:	b.eq	4bfe8 <mpfr_jn@@Base+0x1538>  // b.none
   4c068:	ldr	x20, [sp, #120]
   4c06c:	neg	w19, w19
   4c070:	mov	x0, x20
   4c074:	bl	c670 <mpfr_nexttoinf@plt>
   4c078:	ldr	x1, [x20, #16]
   4c07c:	b	4bfe8 <mpfr_jn@@Base+0x1538>
   4c080:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4c084:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4c088:	add	x2, x2, #0xb60
   4c08c:	add	x0, x0, #0xa40
   4c090:	mov	w1, #0x12a                 	// #298
   4c094:	bl	cb40 <mpfr_assert_fail@plt>
   4c098:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4c09c:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4c0a0:	add	x2, x2, #0xa30
   4c0a4:	add	x0, x0, #0xa40
   4c0a8:	mov	w1, #0xa6                  	// #166
   4c0ac:	stp	x23, x24, [sp, #48]
   4c0b0:	stp	x27, x28, [sp, #80]
   4c0b4:	bl	cb40 <mpfr_assert_fail@plt>
   4c0b8:	neg	w2, w2
   4c0bc:	b	4bc04 <mpfr_jn@@Base+0x1154>

000000000004c0c0 <mpfr_j0@@Base>:
   4c0c0:	mov	w3, w2
   4c0c4:	mov	x2, x1
   4c0c8:	mov	x1, #0x0                   	// #0
   4c0cc:	b	cc10 <mpfr_jn@plt>

000000000004c0d0 <mpfr_j1@@Base>:
   4c0d0:	mov	w3, w2
   4c0d4:	mov	x2, x1
   4c0d8:	mov	x1, #0x1                   	// #1
   4c0dc:	b	cc10 <mpfr_jn@plt>

000000000004c0e0 <mpfr_yn@@Base>:
   4c0e0:	sub	sp, sp, #0x220
   4c0e4:	cmp	x1, #0x0
   4c0e8:	stp	x29, x30, [sp]
   4c0ec:	mov	x29, sp
   4c0f0:	stp	x27, x28, [sp, #80]
   4c0f4:	mov	x27, x2
   4c0f8:	ldr	x2, [x2, #16]
   4c0fc:	stp	x21, x22, [sp, #32]
   4c100:	mov	x22, #0x8000000000000003    	// #-9223372036854775805
   4c104:	stp	x23, x24, [sp, #48]
   4c108:	str	x0, [sp, #104]
   4c10c:	cneg	x0, x1, lt  // lt = tstop
   4c110:	str	x0, [sp, #112]
   4c114:	cmp	x2, x22
   4c118:	str	x1, [sp, #120]
   4c11c:	str	w3, [sp, #168]
   4c120:	b.le	4d5a0 <mpfr_yn@@Base+0x14c0>
   4c124:	mrs	x3, tpidr_el0
   4c128:	ldr	w1, [x27, #8]
   4c12c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4c130:	ldr	x4, [x0, #2576]
   4c134:	add	x0, x0, #0xa10
   4c138:	blr	x4
   4c13c:	add	x24, x3, x0
   4c140:	str	x3, [sp, #136]
   4c144:	ldr	w0, [x3, x0]
   4c148:	str	w0, [sp, #172]
   4c14c:	tbnz	w1, #31, 4d0ac <mpfr_yn@@Base+0xfcc>
   4c150:	ldr	x4, [sp, #136]
   4c154:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4c158:	ldr	x1, [x0, #2512]
   4c15c:	add	x0, x0, #0x9d0
   4c160:	blr	x1
   4c164:	stp	x19, x20, [sp, #16]
   4c168:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   4c16c:	add	x21, x4, x0
   4c170:	ldr	x0, [x4, x0]
   4c174:	str	x0, [sp, #184]
   4c178:	stp	x25, x26, [sp, #64]
   4c17c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4c180:	ldr	x3, [x0, #2544]
   4c184:	add	x0, x0, #0x9f0
   4c188:	blr	x3
   4c18c:	add	x20, x4, x0
   4c190:	ldr	x0, [x4, x0]
   4c194:	str	x0, [sp, #192]
   4c198:	ldr	x0, [sp, #104]
   4c19c:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   4c1a0:	str	x1, [x20]
   4c1a4:	str	x3, [x21]
   4c1a8:	ldr	x19, [x0]
   4c1ac:	ldr	x0, [sp, #120]
   4c1b0:	cbnz	x0, 4c8d4 <mpfr_yn@@Base+0x7f4>
   4c1b4:	lsr	x1, x19, #63
   4c1b8:	add	x0, x1, x19
   4c1bc:	neg	x0, x0, asr #1
   4c1c0:	cmp	x2, x0
   4c1c4:	b.lt	4d350 <mpfr_yn@@Base+0x1270>  // b.tstop
   4c1c8:	add	x21, sp, #0x1a0
   4c1cc:	add	x20, sp, #0x1c0
   4c1d0:	add	x1, x1, x19
   4c1d4:	mov	x0, x27
   4c1d8:	mov	x2, #0x0                   	// #0
   4c1dc:	asr	x1, x1, #1
   4c1e0:	add	x1, x1, #0x3
   4c1e4:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4c1e8:	cmp	w0, #0x0
   4c1ec:	b.gt	4c920 <mpfr_yn@@Base+0x840>
   4c1f0:	add	x28, sp, #0x160
   4c1f4:	add	x19, sp, #0x180
   4c1f8:	mov	x0, x28
   4c1fc:	bl	bbd0 <mpfr_init@plt>
   4c200:	mov	x0, x19
   4c204:	bl	bbd0 <mpfr_init@plt>
   4c208:	mov	x0, x21
   4c20c:	bl	bbd0 <mpfr_init@plt>
   4c210:	mov	x0, x20
   4c214:	bl	bbd0 <mpfr_init@plt>
   4c218:	ldr	x0, [sp, #104]
   4c21c:	ldr	x25, [x0]
   4c220:	cmp	x25, #0x1
   4c224:	b.eq	4c248 <mpfr_yn@@Base+0x168>  // b.none
   4c228:	mov	x0, x25
   4c22c:	b.le	4d6e8 <mpfr_yn@@Base+0x1608>
   4c230:	sub	x0, x0, #0x1
   4c234:	mov	w1, #0x40                  	// #64
   4c238:	clz	x0, x0
   4c23c:	sub	w0, w1, w0
   4c240:	lsl	w0, w0, #1
   4c244:	add	x25, x25, w0, sxtw
   4c248:	ldr	x0, [sp, #112]
   4c24c:	mov	x1, #0x40                  	// #64
   4c250:	str	x1, [sp, #248]
   4c254:	add	x1, x25, #0xd
   4c258:	add	x0, x0, #0x1
   4c25c:	str	x0, [sp, #224]
   4c260:	str	x1, [sp, #128]
   4c264:	mov	w1, #0x40                  	// #64
   4c268:	add	x0, x0, x0, lsl #1
   4c26c:	str	x0, [sp, #232]
   4c270:	sub	x0, x0, #0x1
   4c274:	add	x22, sp, #0x200
   4c278:	clz	x0, x0
   4c27c:	str	x27, [sp, #160]
   4c280:	sub	w0, w1, w0
   4c284:	sxtw	x0, w0
   4c288:	str	x0, [sp, #240]
   4c28c:	ldr	x23, [sp, #128]
   4c290:	mov	x0, x28
   4c294:	mov	x1, x23
   4c298:	bl	bed0 <mpfr_set_prec@plt>
   4c29c:	mov	x1, x23
   4c2a0:	mov	x0, x19
   4c2a4:	bl	bed0 <mpfr_set_prec@plt>
   4c2a8:	mov	x1, x23
   4c2ac:	mov	x0, x21
   4c2b0:	bl	bed0 <mpfr_set_prec@plt>
   4c2b4:	mov	x1, x23
   4c2b8:	mov	x0, x20
   4c2bc:	bl	bed0 <mpfr_set_prec@plt>
   4c2c0:	ldr	x23, [sp, #160]
   4c2c4:	mov	w3, #0x0                   	// #0
   4c2c8:	mov	x0, x28
   4c2cc:	mov	x2, x23
   4c2d0:	mov	x1, x23
   4c2d4:	bl	bd50 <mpfr_mul@plt>
   4c2d8:	mov	x1, x28
   4c2dc:	mov	w3, #0x0                   	// #0
   4c2e0:	mov	x2, #0x2                   	// #2
   4c2e4:	mov	x0, x28
   4c2e8:	bl	c8f0 <mpfr_div_2ui@plt>
   4c2ec:	ldr	x24, [sp, #112]
   4c2f0:	mov	x1, x23
   4c2f4:	mov	w3, #0x0                   	// #0
   4c2f8:	mov	x0, x21
   4c2fc:	mov	x2, x24
   4c300:	bl	bf70 <mpfr_pow_ui@plt>
   4c304:	mov	x2, x24
   4c308:	mov	x1, x21
   4c30c:	mov	x0, x21
   4c310:	mov	w3, #0x0                   	// #0
   4c314:	bl	c420 <mpfr_div_2si@plt>
   4c318:	ldr	x0, [sp, #120]
   4c31c:	cbnz	x0, 4d0e8 <mpfr_yn@@Base+0x1008>
   4c320:	mov	w0, #0x1                   	// #1
   4c324:	mov	x23, #0x0                   	// #0
   4c328:	str	w0, [sp, #392]
   4c32c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4c330:	str	x0, [sp, #400]
   4c334:	mov	x2, x21
   4c338:	mov	x1, x19
   4c33c:	mov	x0, x19
   4c340:	mov	w3, #0x0                   	// #0
   4c344:	bl	c620 <mpfr_div@plt>
   4c348:	ldr	x0, [sp, #232]
   4c34c:	cmp	x0, #0x1
   4c350:	b.eq	4c360 <mpfr_yn@@Base+0x280>  // b.none
   4c354:	b.ls	4d6a8 <mpfr_yn@@Base+0x15c8>  // b.plast
   4c358:	ldr	x0, [sp, #240]
   4c35c:	add	x23, x23, x0
   4c360:	mov	w2, #0x0                   	// #0
   4c364:	mov	x1, x28
   4c368:	mov	x0, x28
   4c36c:	bl	bd70 <mpfr_neg@plt>
   4c370:	mov	w1, #0x2                   	// #2
   4c374:	mov	x0, x28
   4c378:	bl	bca0 <mpfr_get_ui@plt>
   4c37c:	cmn	x0, #0x4
   4c380:	add	x1, x23, #0x1
   4c384:	str	x1, [sp, #200]
   4c388:	b.hi	4d660 <mpfr_yn@@Base+0x1580>  // b.pmore
   4c38c:	add	x27, sp, #0x120
   4c390:	add	x0, x0, #0x2
   4c394:	str	x0, [sp, #176]
   4c398:	mov	x0, x27
   4c39c:	bl	bf90 <mpfr_mpz_init@plt>
   4c3a0:	add	x23, sp, #0x140
   4c3a4:	mov	x1, #0x0                   	// #0
   4c3a8:	mov	x0, x27
   4c3ac:	bl	bcb0 <__gmpz_set_ui@plt>
   4c3b0:	mov	x25, #0x1                   	// #1
   4c3b4:	mov	x0, x23
   4c3b8:	bl	bf90 <mpfr_mpz_init@plt>
   4c3bc:	mov	x0, x23
   4c3c0:	mov	x1, #0x1                   	// #1
   4c3c4:	bl	bcb0 <__gmpz_set_ui@plt>
   4c3c8:	ldr	x0, [sp, #112]
   4c3cc:	cbz	x0, 4c410 <mpfr_yn@@Base+0x330>
   4c3d0:	mov	x2, x25
   4c3d4:	mov	x1, x27
   4c3d8:	mov	x0, x27
   4c3dc:	bl	c100 <__gmpz_mul_ui@plt>
   4c3e0:	mov	x2, x23
   4c3e4:	mov	x1, x27
   4c3e8:	mov	x0, x27
   4c3ec:	bl	c9c0 <__gmpz_add@plt>
   4c3f0:	mov	x2, x25
   4c3f4:	mov	x0, x23
   4c3f8:	mov	x1, x23
   4c3fc:	bl	c100 <__gmpz_mul_ui@plt>
   4c400:	ldr	x0, [sp, #112]
   4c404:	add	x25, x25, #0x1
   4c408:	cmp	x0, x25
   4c40c:	b.cs	4c3d0 <mpfr_yn@@Base+0x2f0>  // b.hs, b.nlast
   4c410:	ldr	x26, [sp, #112]
   4c414:	add	x24, sp, #0x1e0
   4c418:	ldr	x1, [sp, #448]
   4c41c:	add	x2, x26, #0x2
   4c420:	mov	x0, x24
   4c424:	str	x2, [sp, #144]
   4c428:	bl	ca80 <mpfr_init2@plt>
   4c42c:	ldr	x1, [sp, #448]
   4c430:	mov	x0, x22
   4c434:	ldr	x25, [sp, #224]
   4c438:	bl	ca80 <mpfr_init2@plt>
   4c43c:	mov	x1, x26
   4c440:	mov	w2, #0x0                   	// #0
   4c444:	mov	x0, x24
   4c448:	bl	c6e0 <mpfr_fac_ui@plt>
   4c44c:	mov	x1, x21
   4c450:	mov	x2, x24
   4c454:	mov	w3, #0x0                   	// #0
   4c458:	mov	x0, x24
   4c45c:	bl	c620 <mpfr_div@plt>
   4c460:	mov	x26, #0x1                   	// #1
   4c464:	mov	x1, x24
   4c468:	mov	x2, x27
   4c46c:	mov	w3, #0x0                   	// #0
   4c470:	mov	x0, x22
   4c474:	bl	c4d0 <mpfr_mul_z@plt>
   4c478:	mov	x0, x20
   4c47c:	mov	x2, x23
   4c480:	mov	x1, x22
   4c484:	mov	w3, #0x0                   	// #0
   4c488:	bl	cc80 <mpfr_div_z@plt>
   4c48c:	stp	x19, x21, [sp, #208]
   4c490:	ldr	x4, [sp, #464]
   4c494:	mov	x21, x4
   4c498:	mov	x4, x28
   4c49c:	mov	x28, x20
   4c4a0:	ldr	x20, [sp, #144]
   4c4a4:	b	4c4b4 <mpfr_yn@@Base+0x3d4>
   4c4a8:	add	x26, x26, #0x1
   4c4ac:	add	x25, x25, #0x1
   4c4b0:	add	x20, x20, #0x2
   4c4b4:	mov	x2, x4
   4c4b8:	mov	x1, x24
   4c4bc:	mov	w3, #0x0                   	// #0
   4c4c0:	mov	x0, x24
   4c4c4:	str	x4, [sp, #152]
   4c4c8:	bl	bd50 <mpfr_mul@plt>
   4c4cc:	lsl	x6, x26, #1
   4c4d0:	mov	x2, x26
   4c4d4:	mov	x1, x24
   4c4d8:	mov	w3, #0x0                   	// #0
   4c4dc:	mov	x0, x24
   4c4e0:	str	x6, [sp, #144]
   4c4e4:	bl	cc60 <mpfr_div_ui@plt>
   4c4e8:	mov	w3, #0x0                   	// #0
   4c4ec:	mov	x2, x25
   4c4f0:	mov	x1, x24
   4c4f4:	mov	x0, x24
   4c4f8:	bl	cc60 <mpfr_div_ui@plt>
   4c4fc:	mov	x2, x26
   4c500:	mov	x1, x27
   4c504:	mov	x0, x27
   4c508:	bl	c100 <__gmpz_mul_ui@plt>
   4c50c:	mov	x2, x25
   4c510:	mov	x1, x27
   4c514:	mov	x0, x27
   4c518:	bl	c100 <__gmpz_mul_ui@plt>
   4c51c:	mov	x2, x20
   4c520:	mov	x1, x23
   4c524:	mov	x0, x27
   4c528:	bl	cc30 <__gmpz_addmul_ui@plt>
   4c52c:	mov	x2, x26
   4c530:	mov	x1, x23
   4c534:	mov	x0, x23
   4c538:	bl	c100 <__gmpz_mul_ui@plt>
   4c53c:	mov	x2, x25
   4c540:	mov	x1, x23
   4c544:	mov	x0, x23
   4c548:	bl	c100 <__gmpz_mul_ui@plt>
   4c54c:	mov	x2, x27
   4c550:	mov	x1, x24
   4c554:	mov	w3, #0x0                   	// #0
   4c558:	mov	x0, x22
   4c55c:	bl	c4d0 <mpfr_mul_z@plt>
   4c560:	mov	x2, x23
   4c564:	mov	x1, x22
   4c568:	mov	w3, #0x0                   	// #0
   4c56c:	mov	x0, x22
   4c570:	bl	cc80 <mpfr_div_z@plt>
   4c574:	mov	x2, x22
   4c578:	mov	x1, x28
   4c57c:	mov	x0, x28
   4c580:	mov	w3, #0x0                   	// #0
   4c584:	ldr	x19, [sp, #528]
   4c588:	bl	c1a0 <mpfr_add@plt>
   4c58c:	ldr	x1, [sp, #464]
   4c590:	ldr	x2, [sp, #512]
   4c594:	cmp	x19, x1
   4c598:	ldr	x0, [sp, #528]
   4c59c:	csel	x19, x19, x1, ge  // ge = tcont
   4c5a0:	cmp	x21, x19
   4c5a4:	add	x0, x0, x2
   4c5a8:	csel	x21, x21, x19, ge  // ge = tcont
   4c5ac:	cmp	x1, x0
   4c5b0:	ldr	x4, [sp, #152]
   4c5b4:	b.le	4c4a8 <mpfr_yn@@Base+0x3c8>
   4c5b8:	ldr	x6, [sp, #144]
   4c5bc:	ldr	x0, [sp, #176]
   4c5c0:	udiv	x6, x0, x6
   4c5c4:	cmp	x6, x25
   4c5c8:	b.cs	4c4a8 <mpfr_yn@@Base+0x3c8>  // b.hs, b.nlast
   4c5cc:	mov	x20, x28
   4c5d0:	mov	x28, x4
   4c5d4:	mov	x4, x21
   4c5d8:	mov	x0, x24
   4c5dc:	str	x4, [sp, #144]
   4c5e0:	ldp	x19, x21, [sp, #208]
   4c5e4:	bl	c070 <mpfr_clear@plt>
   4c5e8:	mov	x0, x22
   4c5ec:	bl	c070 <mpfr_clear@plt>
   4c5f0:	mov	x0, x27
   4c5f4:	bl	c170 <mpfr_mpz_clear@plt>
   4c5f8:	mov	x0, x23
   4c5fc:	bl	c170 <mpfr_mpz_clear@plt>
   4c600:	ldr	x4, [sp, #144]
   4c604:	cmn	x26, #0x1
   4c608:	ldr	x23, [sp, #464]
   4c60c:	sub	x23, x4, x23
   4c610:	b.eq	4d658 <mpfr_yn@@Base+0x1578>  // b.none
   4c614:	cmn	x26, #0x2
   4c618:	b.cs	4d690 <mpfr_yn@@Base+0x15b0>  // b.hs, b.nlast
   4c61c:	add	x4, x26, #0x1
   4c620:	mov	w0, #0x40                  	// #64
   4c624:	clz	x4, x4
   4c628:	sub	w4, w0, w4
   4c62c:	lsl	w4, w4, #1
   4c630:	add	w4, w4, #0x3
   4c634:	sxtw	x4, w4
   4c638:	ldr	x0, [sp, #200]
   4c63c:	add	x23, x23, x4
   4c640:	ldr	x25, [sp, #400]
   4c644:	mov	x2, x20
   4c648:	mov	x1, x19
   4c64c:	mov	w3, #0x0                   	// #0
   4c650:	add	x25, x0, x25
   4c654:	mov	x0, x19
   4c658:	bl	c1a0 <mpfr_add@plt>
   4c65c:	ldr	x4, [sp, #464]
   4c660:	add	x1, x25, #0x1
   4c664:	ldr	x0, [sp, #400]
   4c668:	add	x23, x23, x4
   4c66c:	cmp	x25, x23
   4c670:	mov	w3, #0x0                   	// #0
   4c674:	csinc	x23, x1, x23, ge  // ge = tcont
   4c678:	mov	x2, #0x1                   	// #1
   4c67c:	subs	x23, x23, x0
   4c680:	mov	x0, x21
   4c684:	ldr	x26, [sp, #160]
   4c688:	csel	x23, x23, xzr, pl  // pl = nfrst
   4c68c:	add	x23, x23, x2
   4c690:	mov	x1, x26
   4c694:	bl	c8f0 <mpfr_div_2ui@plt>
   4c698:	mov	x1, x21
   4c69c:	mov	w2, #0x0                   	// #0
   4c6a0:	mov	x0, x21
   4c6a4:	bl	c090 <mpfr_log@plt>
   4c6a8:	ldr	x24, [sp, #136]
   4c6ac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4c6b0:	ldr	x1, [x0, #2608]
   4c6b4:	add	x0, x0, #0xa30
   4c6b8:	blr	x1
   4c6bc:	mov	w2, #0x0                   	// #0
   4c6c0:	add	x1, x24, x0
   4c6c4:	mov	x0, x20
   4c6c8:	bl	c380 <mpfr_cache@plt>
   4c6cc:	ldr	x4, [sp, #432]
   4c6d0:	mov	x2, x20
   4c6d4:	ldr	x25, [sp, #464]
   4c6d8:	mov	x1, x21
   4c6dc:	mov	w3, #0x0                   	// #0
   4c6e0:	mov	x0, x21
   4c6e4:	cmp	x25, x4
   4c6e8:	csel	x25, x25, x4, ge  // ge = tcont
   4c6ec:	bl	c1a0 <mpfr_add@plt>
   4c6f0:	ldr	x0, [sp, #432]
   4c6f4:	mov	x1, x21
   4c6f8:	mov	w3, #0x0                   	// #0
   4c6fc:	mov	x2, #0x1                   	// #1
   4c700:	sub	x25, x25, x0
   4c704:	mov	x0, x21
   4c708:	bl	c2c0 <mpfr_mul_2ui@plt>
   4c70c:	add	x25, x25, #0x4
   4c710:	ldr	x1, [sp, #112]
   4c714:	mov	x2, x26
   4c718:	mov	w3, #0x0                   	// #0
   4c71c:	mov	x0, x20
   4c720:	bl	cc10 <mpfr_jn@plt>
   4c724:	mov	x2, x20
   4c728:	mov	x1, x21
   4c72c:	mov	w3, #0x0                   	// #0
   4c730:	mov	x0, x21
   4c734:	bl	bd50 <mpfr_mul@plt>
   4c738:	ldr	x2, [sp, #400]
   4c73c:	mov	x1, x21
   4c740:	ldr	x0, [sp, #432]
   4c744:	add	x23, x23, x2
   4c748:	mov	w3, #0x0                   	// #0
   4c74c:	mov	x2, x19
   4c750:	add	x25, x25, x0
   4c754:	mov	x0, x21
   4c758:	bl	bb70 <mpfr_sub@plt>
   4c75c:	ldr	x0, [sp, #432]
   4c760:	add	x2, x25, #0x1
   4c764:	cmp	x23, x25
   4c768:	csinc	x23, x2, x23, le
   4c76c:	mov	w2, #0x0                   	// #0
   4c770:	subs	x23, x23, x0
   4c774:	csel	x23, x23, xzr, pl  // pl = nfrst
   4c778:	add	x23, x23, #0x2
   4c77c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4c780:	ldr	x1, [x0, #2624]
   4c784:	add	x0, x0, #0xa40
   4c788:	blr	x1
   4c78c:	add	x1, x24, x0
   4c790:	mov	x0, x28
   4c794:	bl	c380 <mpfr_cache@plt>
   4c798:	mov	x1, x21
   4c79c:	mov	x2, x28
   4c7a0:	mov	x0, x21
   4c7a4:	mov	w3, #0x0                   	// #0
   4c7a8:	bl	c620 <mpfr_div@plt>
   4c7ac:	ldr	x1, [sp, #432]
   4c7b0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4c7b4:	cmp	x1, x0
   4c7b8:	b.le	4d314 <mpfr_yn@@Base+0x1234>
   4c7bc:	ldr	x2, [sp, #104]
   4c7c0:	ldr	w0, [sp, #168]
   4c7c4:	ldr	x1, [sp, #416]
   4c7c8:	cmp	w0, #0x0
   4c7cc:	ldr	x0, [sp, #440]
   4c7d0:	sub	x1, x1, #0x1
   4c7d4:	ldr	x3, [x2]
   4c7d8:	asr	x1, x1, #6
   4c7dc:	ldr	x2, [sp, #128]
   4c7e0:	add	x1, x1, #0x1
   4c7e4:	cinc	x3, x3, eq  // eq = none
   4c7e8:	sub	x2, x2, x23
   4c7ec:	bl	c370 <mpfr_round_p@plt>
   4c7f0:	cbz	w0, 4d314 <mpfr_yn@@Base+0x1234>
   4c7f4:	ldr	x0, [sp, #120]
   4c7f8:	ldr	w3, [sp, #424]
   4c7fc:	tbz	x0, #63, 4c808 <mpfr_yn@@Base+0x728>
   4c800:	tst	x0, #0x1
   4c804:	cneg	w3, w3, ne  // ne = any
   4c808:	ldr	w2, [sp, #168]
   4c80c:	mov	x1, x21
   4c810:	ldr	x0, [sp, #104]
   4c814:	bl	c6a0 <mpfr_set4@plt>
   4c818:	mov	w23, w0
   4c81c:	mov	x0, x28
   4c820:	bl	c070 <mpfr_clear@plt>
   4c824:	mov	x0, x19
   4c828:	bl	c070 <mpfr_clear@plt>
   4c82c:	mov	x0, x21
   4c830:	bl	c070 <mpfr_clear@plt>
   4c834:	mov	x0, x20
   4c838:	bl	c070 <mpfr_clear@plt>
   4c83c:	ldr	x2, [sp, #136]
   4c840:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4c844:	ldr	x1, [x0, #2576]
   4c848:	add	x0, x0, #0xa10
   4c84c:	blr	x1
   4c850:	ldr	w1, [sp, #172]
   4c854:	str	w1, [x2, x0]
   4c858:	ldr	x0, [sp, #104]
   4c85c:	ldr	x1, [x0, #16]
   4c860:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4c864:	ldr	x3, [x0, #2512]
   4c868:	add	x0, x0, #0x9d0
   4c86c:	blr	x3
   4c870:	ldr	x3, [sp, #184]
   4c874:	str	x3, [x2, x0]
   4c878:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4c87c:	ldr	x4, [x0, #2544]
   4c880:	add	x0, x0, #0x9f0
   4c884:	blr	x4
   4c888:	ldr	x4, [sp, #192]
   4c88c:	str	x4, [x2, x0]
   4c890:	cmp	x4, x1
   4c894:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   4c898:	b.le	4c8f8 <mpfr_yn@@Base+0x818>
   4c89c:	ldr	w2, [sp, #168]
   4c8a0:	mov	w1, w23
   4c8a4:	ldr	x0, [sp, #104]
   4c8a8:	bl	cb30 <mpfr_check_range@plt>
   4c8ac:	mov	w23, w0
   4c8b0:	ldp	x19, x20, [sp, #16]
   4c8b4:	ldp	x25, x26, [sp, #64]
   4c8b8:	mov	w0, w23
   4c8bc:	ldp	x29, x30, [sp]
   4c8c0:	ldp	x21, x22, [sp, #32]
   4c8c4:	ldp	x23, x24, [sp, #48]
   4c8c8:	ldp	x27, x28, [sp, #80]
   4c8cc:	add	sp, sp, #0x220
   4c8d0:	ret
   4c8d4:	ldr	x0, [sp, #120]
   4c8d8:	cmp	x0, #0x1
   4c8dc:	b.ne	4c8f0 <mpfr_yn@@Base+0x810>  // b.any
   4c8e0:	add	x2, x2, #0x1
   4c8e4:	neg	x0, x19
   4c8e8:	cmp	x2, x0
   4c8ec:	b.lt	4d1c0 <mpfr_yn@@Base+0x10e0>  // b.tstop
   4c8f0:	lsr	x1, x19, #63
   4c8f4:	b	4c1c8 <mpfr_yn@@Base+0xe8>
   4c8f8:	cbnz	w23, 4d068 <mpfr_yn@@Base+0xf88>
   4c8fc:	mov	w0, w23
   4c900:	ldp	x29, x30, [sp]
   4c904:	ldp	x19, x20, [sp, #16]
   4c908:	ldp	x21, x22, [sp, #32]
   4c90c:	ldp	x23, x24, [sp, #48]
   4c910:	ldp	x25, x26, [sp, #64]
   4c914:	ldp	x27, x28, [sp, #80]
   4c918:	add	sp, sp, #0x220
   4c91c:	ret
   4c920:	add	x26, sp, #0x120
   4c924:	mov	x0, x26
   4c928:	bl	bbd0 <mpfr_init@plt>
   4c92c:	ldr	x0, [sp, #104]
   4c930:	ldr	x19, [x0]
   4c934:	cmp	x19, #0x1
   4c938:	b.eq	4c958 <mpfr_yn@@Base+0x878>  // b.none
   4c93c:	mov	x0, x19
   4c940:	b.le	4d748 <mpfr_yn@@Base+0x1668>
   4c944:	sub	x0, x0, #0x1
   4c948:	mov	w1, #0x40                  	// #64
   4c94c:	clz	x0, x0
   4c950:	sub	w0, w1, w0
   4c954:	add	x19, x19, w0, sxtw
   4c958:	ldr	x0, [sp, #120]
   4c95c:	add	x1, x19, #0x4
   4c960:	add	x28, sp, #0x160
   4c964:	add	x22, sp, #0x1e0
   4c968:	and	x2, x0, #0x1
   4c96c:	str	x2, [sp, #200]
   4c970:	and	x2, x0, #0x2
   4c974:	lsl	x0, x0, #2
   4c978:	add	x25, sp, #0x200
   4c97c:	add	x24, sp, #0x100
   4c980:	add	x19, sp, #0x180
   4c984:	str	x28, [sp, #160]
   4c988:	mov	x28, x1
   4c98c:	str	x0, [sp, #176]
   4c990:	add	x0, sp, #0x140
   4c994:	str	x27, [sp, #128]
   4c998:	str	x21, [sp, #144]
   4c99c:	str	x0, [sp, #152]
   4c9a0:	mov	x0, #0x40                  	// #64
   4c9a4:	str	x2, [sp, #224]
   4c9a8:	str	x0, [sp, #232]
   4c9ac:	mov	x1, x28
   4c9b0:	mov	x0, x26
   4c9b4:	bl	bed0 <mpfr_set_prec@plt>
   4c9b8:	mov	x1, x28
   4c9bc:	mov	x0, x24
   4c9c0:	bl	ca80 <mpfr_init2@plt>
   4c9c4:	ldr	x0, [sp, #152]
   4c9c8:	mov	x1, x28
   4c9cc:	bl	ca80 <mpfr_init2@plt>
   4c9d0:	ldr	x0, [sp, #160]
   4c9d4:	mov	x1, x28
   4c9d8:	bl	ca80 <mpfr_init2@plt>
   4c9dc:	mov	x1, x28
   4c9e0:	mov	x0, x19
   4c9e4:	bl	ca80 <mpfr_init2@plt>
   4c9e8:	ldr	x0, [sp, #144]
   4c9ec:	mov	x1, x28
   4c9f0:	bl	ca80 <mpfr_init2@plt>
   4c9f4:	mov	x0, x20
   4c9f8:	mov	x1, #0x1f                  	// #31
   4c9fc:	bl	ca80 <mpfr_init2@plt>
   4ca00:	mov	x0, x22
   4ca04:	mov	x1, #0x1f                  	// #31
   4ca08:	bl	ca80 <mpfr_init2@plt>
   4ca0c:	mov	x0, x25
   4ca10:	mov	x1, #0x1f                  	// #31
   4ca14:	bl	ca80 <mpfr_init2@plt>
   4ca18:	ldr	x21, [sp, #128]
   4ca1c:	mov	x1, x26
   4ca20:	mov	x0, x24
   4ca24:	mov	w3, #0x0                   	// #0
   4ca28:	mov	x2, x21
   4ca2c:	bl	cc40 <mpfr_sin_cos@plt>
   4ca30:	ldr	w0, [x21, #8]
   4ca34:	tbnz	w0, #31, 4d60c <mpfr_yn@@Base+0x152c>
   4ca38:	mov	x1, x24
   4ca3c:	mov	x2, x26
   4ca40:	mov	w3, #0x0                   	// #0
   4ca44:	mov	x0, x19
   4ca48:	bl	c1a0 <mpfr_add@plt>
   4ca4c:	mov	x23, #0x8000000000000001    	// #-9223372036854775807
   4ca50:	mov	x2, x26
   4ca54:	mov	w3, #0x0                   	// #0
   4ca58:	mov	x1, x24
   4ca5c:	mov	x0, x26
   4ca60:	bl	bb70 <mpfr_sub@plt>
   4ca64:	mov	w27, #0x0                   	// #0
   4ca68:	mov	x0, x24
   4ca6c:	mov	x1, x19
   4ca70:	bl	c4a0 <mpfr_swap@plt>
   4ca74:	str	wzr, [sp, #208]
   4ca78:	ldr	x2, [sp, #128]
   4ca7c:	mov	w3, #0x0                   	// #0
   4ca80:	ldr	x21, [sp, #144]
   4ca84:	ldr	w1, [x2, #8]
   4ca88:	mov	x0, x21
   4ca8c:	cmp	w1, #0x0
   4ca90:	mov	x1, #0xffffffffffffffff    	// #-1
   4ca94:	cneg	x1, x1, gt
   4ca98:	bl	c8b0 <mpfr_si_div@plt>
   4ca9c:	mov	x1, x21
   4caa0:	mov	x0, x21
   4caa4:	mov	w3, #0x0                   	// #0
   4caa8:	mov	x2, #0x3                   	// #3
   4caac:	bl	c8f0 <mpfr_div_2ui@plt>
   4cab0:	mov	x21, #0x1                   	// #1
   4cab4:	ldr	x0, [sp, #152]
   4cab8:	mov	w3, #0x0                   	// #0
   4cabc:	mov	x2, #0x0                   	// #0
   4cac0:	mov	x1, #0x1                   	// #1
   4cac4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4cac8:	str	x23, [sp, #368]
   4cacc:	mov	w0, #0x1                   	// #1
   4cad0:	mov	w3, #0x0                   	// #0
   4cad4:	mov	x2, #0x0                   	// #0
   4cad8:	mov	x1, #0x1                   	// #1
   4cadc:	str	w0, [sp, #360]
   4cae0:	mov	x0, x19
   4cae4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4cae8:	str	x24, [sp, #216]
   4caec:	mov	x24, x22
   4caf0:	mov	w0, #0x1                   	// #1
   4caf4:	str	w0, [sp, #456]
   4caf8:	str	x23, [sp, #464]
   4cafc:	str	w0, [sp, #488]
   4cb00:	str	x23, [sp, #496]
   4cb04:	nop
   4cb08:	ldr	x0, [sp, #120]
   4cb0c:	add	x22, x21, x21, lsl #1
   4cb10:	add	x23, x0, x21
   4cb14:	lsl	x22, x22, #1
   4cb18:	lsl	x23, x23, #1
   4cb1c:	sub	x23, x23, #0x1
   4cb20:	mov	x2, x23
   4cb24:	mov	x1, x19
   4cb28:	mov	w3, #0x0                   	// #0
   4cb2c:	mov	x0, x19
   4cb30:	bl	c960 <mpfr_mul_si@plt>
   4cb34:	ldr	x0, [sp, #176]
   4cb38:	mov	x1, x19
   4cb3c:	mov	w3, #0x0                   	// #0
   4cb40:	sub	x2, x0, x23
   4cb44:	mov	x0, x19
   4cb48:	bl	c960 <mpfr_mul_si@plt>
   4cb4c:	mov	x2, x21
   4cb50:	mov	x1, x19
   4cb54:	mov	w3, #0x0                   	// #0
   4cb58:	mov	x0, x19
   4cb5c:	bl	cc60 <mpfr_div_ui@plt>
   4cb60:	ldr	x2, [sp, #144]
   4cb64:	mov	x1, x19
   4cb68:	mov	w3, #0x0                   	// #0
   4cb6c:	mov	x0, x19
   4cb70:	bl	bd50 <mpfr_mul@plt>
   4cb74:	ldr	w0, [sp, #392]
   4cb78:	mov	x2, x22
   4cb7c:	mov	x1, x19
   4cb80:	cmp	w0, #0x0
   4cb84:	mov	x0, x20
   4cb88:	cset	w3, le
   4cb8c:	add	w3, w3, #0x2
   4cb90:	bl	ba50 <mpfr_mul_ui@plt>
   4cb94:	mov	x1, x20
   4cb98:	mov	w3, #0x1                   	// #1
   4cb9c:	mov	w2, #0x0                   	// #0
   4cba0:	mov	x0, x20
   4cba4:	bl	c6a0 <mpfr_set4@plt>
   4cba8:	mov	x1, x19
   4cbac:	mov	w3, #0x1                   	// #1
   4cbb0:	mov	w2, #0x2                   	// #2
   4cbb4:	mov	x0, x25
   4cbb8:	bl	c6a0 <mpfr_set4@plt>
   4cbbc:	mov	x2, x28
   4cbc0:	mov	x1, x25
   4cbc4:	mov	w3, #0x2                   	// #2
   4cbc8:	mov	x0, x25
   4cbcc:	bl	c2c0 <mpfr_mul_2ui@plt>
   4cbd0:	mov	x2, x20
   4cbd4:	mov	x1, x25
   4cbd8:	mov	x0, x25
   4cbdc:	mov	w3, #0x2                   	// #2
   4cbe0:	bl	c1a0 <mpfr_add@plt>
   4cbe4:	cmp	w27, #0x1
   4cbe8:	b.gt	4cca0 <mpfr_yn@@Base+0xbc0>
   4cbec:	and	x0, x21, #0x2
   4cbf0:	mov	x2, x19
   4cbf4:	mov	w3, #0x0                   	// #0
   4cbf8:	tbz	w21, #0, 4cd10 <mpfr_yn@@Base+0xc30>
   4cbfc:	cbnz	x0, 4cd64 <mpfr_yn@@Base+0xc84>
   4cc00:	ldr	x0, [sp, #160]
   4cc04:	mov	x1, x0
   4cc08:	bl	c1a0 <mpfr_add@plt>
   4cc0c:	ldr	x0, [sp, #368]
   4cc10:	ldr	x1, [sp, #528]
   4cc14:	cmp	x1, x0
   4cc18:	b.le	4cd30 <mpfr_yn@@Base+0xc50>
   4cc1c:	mov	w27, #0x0                   	// #0
   4cc20:	mov	x2, x20
   4cc24:	mov	x1, x24
   4cc28:	mov	x0, x24
   4cc2c:	mov	w3, #0x2                   	// #2
   4cc30:	bl	c1a0 <mpfr_add@plt>
   4cc34:	ldr	x3, [sp, #128]
   4cc38:	add	x21, x21, #0x1
   4cc3c:	ldr	w0, [x3, #8]
   4cc40:	cmp	w0, #0x0
   4cc44:	b.gt	4cc80 <mpfr_yn@@Base+0xba0>
   4cc48:	tbz	w0, #31, 4cb08 <mpfr_yn@@Base+0xa28>
   4cc4c:	ldr	x0, [sp, #128]
   4cc50:	add	x1, x21, x21, lsr #63
   4cc54:	mov	x2, #0x0                   	// #0
   4cc58:	neg	x1, x1, asr #1
   4cc5c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   4cc60:	cmp	w0, #0x0
   4cc64:	b.le	4cb08 <mpfr_yn@@Base+0xa28>
   4cc68:	mov	w0, #0x1                   	// #1
   4cc6c:	add	x23, x23, #0x2
   4cc70:	add	x22, x22, #0x6
   4cc74:	mov	w27, #0x2                   	// #2
   4cc78:	str	w0, [sp, #208]
   4cc7c:	b	4cb20 <mpfr_yn@@Base+0xa40>
   4cc80:	asr	x1, x21, #1
   4cc84:	mov	x0, x3
   4cc88:	mov	x2, #0x0                   	// #0
   4cc8c:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4cc90:	tbnz	w0, #31, 4cc68 <mpfr_yn@@Base+0xb88>
   4cc94:	ldr	x3, [sp, #128]
   4cc98:	ldr	w0, [x3, #8]
   4cc9c:	b	4cc48 <mpfr_yn@@Base+0xb68>
   4cca0:	mov	x2, x28
   4cca4:	mov	x1, x24
   4cca8:	mov	w3, #0x2                   	// #2
   4ccac:	mov	x0, x24
   4ccb0:	bl	c8f0 <mpfr_div_2ui@plt>
   4ccb4:	ldr	w0, [sp, #392]
   4ccb8:	mov	x2, x19
   4ccbc:	mov	x1, x24
   4ccc0:	mov	w3, #0x2                   	// #2
   4ccc4:	cmp	w0, #0x0
   4ccc8:	mov	x0, x24
   4cccc:	b.le	4cd5c <mpfr_yn@@Base+0xc7c>
   4ccd0:	bl	c1a0 <mpfr_add@plt>
   4ccd4:	mov	x2, x28
   4ccd8:	mov	x1, x24
   4ccdc:	mov	w3, #0x2                   	// #2
   4cce0:	mov	x0, x24
   4cce4:	bl	c2c0 <mpfr_mul_2ui@plt>
   4cce8:	mov	x2, x20
   4ccec:	mov	x1, x24
   4ccf0:	mov	x0, x24
   4ccf4:	mov	w3, #0x2                   	// #2
   4ccf8:	bl	c1a0 <mpfr_add@plt>
   4ccfc:	cmp	w27, #0x2
   4cd00:	b.ne	4cd84 <mpfr_yn@@Base+0xca4>  // b.any
   4cd04:	add	x21, x21, #0x1
   4cd08:	mov	w27, #0x3                   	// #3
   4cd0c:	b	4cb08 <mpfr_yn@@Base+0xa28>
   4cd10:	cbnz	x0, 4cd74 <mpfr_yn@@Base+0xc94>
   4cd14:	ldr	x0, [sp, #152]
   4cd18:	mov	x1, x0
   4cd1c:	bl	c1a0 <mpfr_add@plt>
   4cd20:	ldr	x0, [sp, #336]
   4cd24:	ldr	x1, [sp, #528]
   4cd28:	cmp	x1, x0
   4cd2c:	b.gt	4cc1c <mpfr_yn@@Base+0xb3c>
   4cd30:	add	w27, w27, #0x1
   4cd34:	mov	x2, x20
   4cd38:	mov	x1, x24
   4cd3c:	mov	x0, x24
   4cd40:	mov	w3, #0x2                   	// #2
   4cd44:	bl	c1a0 <mpfr_add@plt>
   4cd48:	cmp	w27, #0x1
   4cd4c:	b.eq	4cc34 <mpfr_yn@@Base+0xb54>  // b.none
   4cd50:	add	x21, x21, #0x1
   4cd54:	mov	w27, #0x2                   	// #2
   4cd58:	b	4cb08 <mpfr_yn@@Base+0xa28>
   4cd5c:	bl	bb70 <mpfr_sub@plt>
   4cd60:	b	4ccd4 <mpfr_yn@@Base+0xbf4>
   4cd64:	ldr	x0, [sp, #160]
   4cd68:	mov	x1, x0
   4cd6c:	bl	bb70 <mpfr_sub@plt>
   4cd70:	b	4cc0c <mpfr_yn@@Base+0xb2c>
   4cd74:	ldr	x0, [sp, #152]
   4cd78:	mov	x1, x0
   4cd7c:	bl	bb70 <mpfr_sub@plt>
   4cd80:	b	4cd20 <mpfr_yn@@Base+0xc40>
   4cd84:	ldr	x0, [sp, #200]
   4cd88:	mov	x22, x24
   4cd8c:	mov	w3, #0x0                   	// #0
   4cd90:	ldr	x24, [sp, #216]
   4cd94:	cbnz	x0, 4d2b0 <mpfr_yn@@Base+0x11d0>
   4cd98:	ldr	x2, [sp, #152]
   4cd9c:	mov	x1, x26
   4cda0:	mov	x0, x26
   4cda4:	bl	bd50 <mpfr_mul@plt>
   4cda8:	ldr	x2, [sp, #160]
   4cdac:	mov	x1, x24
   4cdb0:	mov	w3, #0x0                   	// #0
   4cdb4:	mov	x0, x24
   4cdb8:	bl	bd50 <mpfr_mul@plt>
   4cdbc:	ldr	x21, [sp, #272]
   4cdc0:	mov	x2, x26
   4cdc4:	ldr	x4, [sp, #304]
   4cdc8:	mov	x1, x24
   4cdcc:	mov	x0, x24
   4cdd0:	mov	w3, #0x0                   	// #0
   4cdd4:	cmp	x21, x4
   4cdd8:	csel	x21, x21, x4, ge  // ge = tcont
   4cddc:	bl	c1a0 <mpfr_add@plt>
   4cde0:	ldr	x0, [sp, #224]
   4cde4:	cbnz	x0, 4d300 <mpfr_yn@@Base+0x1220>
   4cde8:	ldr	x1, [sp, #272]
   4cdec:	mov	w2, #0x0                   	// #0
   4cdf0:	ldr	x4, [sp, #336]
   4cdf4:	cmp	x1, x21
   4cdf8:	ldr	x0, [sp, #368]
   4cdfc:	add	x5, x4, #0x2
   4ce00:	ldr	x3, [sp, #496]
   4ce04:	csel	x1, x1, x21, ge  // ge = tcont
   4ce08:	cmp	x4, x0
   4ce0c:	add	x0, x0, #0x2
   4ce10:	csel	x0, x0, x5, lt  // lt = tstop
   4ce14:	add	x21, x1, #0x2
   4ce18:	cmp	x1, x3
   4ce1c:	add	x3, x3, #0x2
   4ce20:	csel	x21, x21, x3, gt
   4ce24:	add	x1, x0, #0x1
   4ce28:	cmp	x0, x21
   4ce2c:	csinc	x21, x1, x21, gt
   4ce30:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4ce34:	ldr	x1, [x0, #2624]
   4ce38:	add	x0, x0, #0xa40
   4ce3c:	blr	x1
   4ce40:	ldr	x1, [sp, #136]
   4ce44:	add	x1, x1, x0
   4ce48:	mov	x0, x26
   4ce4c:	bl	c380 <mpfr_cache@plt>
   4ce50:	ldr	x23, [sp, #128]
   4ce54:	mov	x1, x26
   4ce58:	mov	w3, #0x0                   	// #0
   4ce5c:	mov	x0, x26
   4ce60:	mov	x2, x23
   4ce64:	bl	bd50 <mpfr_mul@plt>
   4ce68:	ldr	w0, [x23, #8]
   4ce6c:	mov	w3, #0x0                   	// #0
   4ce70:	mov	x2, x26
   4ce74:	mov	x1, #0xffffffffffffffff    	// #-1
   4ce78:	cmp	w0, #0x0
   4ce7c:	mov	x0, x26
   4ce80:	cneg	x1, x1, gt
   4ce84:	bl	c8b0 <mpfr_si_div@plt>
   4ce88:	mov	x1, x26
   4ce8c:	mov	w2, #0x0                   	// #0
   4ce90:	mov	x0, x26
   4ce94:	bl	c930 <mpfr_sqrt@plt>
   4ce98:	ldr	w4, [sp, #296]
   4ce9c:	mov	x2, x24
   4cea0:	ldr	w3, [sp, #264]
   4cea4:	mov	x1, x26
   4cea8:	mov	x0, x20
   4ceac:	cmp	w4, w3
   4ceb0:	cset	w3, ne  // ne = any
   4ceb4:	add	w3, w3, #0x2
   4ceb8:	bl	bd50 <mpfr_mul@plt>
   4cebc:	mov	x1, x20
   4cec0:	mov	w3, #0x1                   	// #1
   4cec4:	mov	w2, #0x2                   	// #2
   4cec8:	mov	x0, x20
   4cecc:	bl	c6a0 <mpfr_set4@plt>
   4ced0:	mov	x1, x20
   4ced4:	mov	w3, #0x2                   	// #2
   4ced8:	mov	x2, #0x3                   	// #3
   4cedc:	mov	x0, x20
   4cee0:	bl	ba50 <mpfr_mul_ui@plt>
   4cee4:	ldr	x0, [sp, #304]
   4cee8:	mov	x2, x24
   4ceec:	mov	x1, x26
   4cef0:	mov	w3, #0x0                   	// #0
   4cef4:	add	x21, x21, x0
   4cef8:	mov	x0, x26
   4cefc:	bl	bd50 <mpfr_mul@plt>
   4cf00:	ldr	x1, [sp, #304]
   4cf04:	add	x3, x21, #0x1
   4cf08:	ldr	x2, [sp, #464]
   4cf0c:	add	x4, x1, #0x1
   4cf10:	mov	x0, x24
   4cf14:	cmp	x2, x1
   4cf18:	csinc	x2, x4, x2, le
   4cf1c:	cmp	x21, x2
   4cf20:	csinc	x21, x3, x2, gt
   4cf24:	bl	c070 <mpfr_clear@plt>
   4cf28:	ldr	x0, [sp, #152]
   4cf2c:	bl	c070 <mpfr_clear@plt>
   4cf30:	ldr	x0, [sp, #160]
   4cf34:	bl	c070 <mpfr_clear@plt>
   4cf38:	mov	x0, x19
   4cf3c:	bl	c070 <mpfr_clear@plt>
   4cf40:	ldr	x0, [sp, #144]
   4cf44:	bl	c070 <mpfr_clear@plt>
   4cf48:	mov	x0, x20
   4cf4c:	bl	c070 <mpfr_clear@plt>
   4cf50:	mov	x0, x22
   4cf54:	bl	c070 <mpfr_clear@plt>
   4cf58:	mov	x0, x25
   4cf5c:	bl	c070 <mpfr_clear@plt>
   4cf60:	ldr	x0, [sp, #304]
   4cf64:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4cf68:	sub	x21, x21, x0
   4cf6c:	cmp	x0, x1
   4cf70:	b.le	4d620 <mpfr_yn@@Base+0x1540>
   4cf74:	ldr	x2, [sp, #104]
   4cf78:	ldr	w0, [sp, #168]
   4cf7c:	ldr	x1, [sp, #288]
   4cf80:	cmp	w0, #0x0
   4cf84:	ldr	x0, [sp, #312]
   4cf88:	sub	x1, x1, #0x1
   4cf8c:	ldr	x3, [x2]
   4cf90:	asr	x1, x1, #6
   4cf94:	add	x1, x1, #0x1
   4cf98:	sub	x2, x28, x21
   4cf9c:	cinc	x3, x3, eq  // eq = none
   4cfa0:	bl	c370 <mpfr_round_p@plt>
   4cfa4:	cbz	w0, 4d620 <mpfr_yn@@Base+0x1540>
   4cfa8:	ldr	x27, [sp, #128]
   4cfac:	ldr	w0, [sp, #200]
   4cfb0:	ldr	x21, [sp, #144]
   4cfb4:	eor	w0, w0, #0x1
   4cfb8:	ldr	w1, [x27, #8]
   4cfbc:	ldr	x28, [sp, #160]
   4cfc0:	cmp	w1, #0x0
   4cfc4:	cset	w1, gt
   4cfc8:	orr	w0, w1, w0
   4cfcc:	cbz	w0, 4d678 <mpfr_yn@@Base+0x1598>
   4cfd0:	ldr	w2, [sp, #168]
   4cfd4:	mov	x1, x26
   4cfd8:	ldr	w3, [sp, #296]
   4cfdc:	ldr	x0, [sp, #104]
   4cfe0:	bl	c6a0 <mpfr_set4@plt>
   4cfe4:	mov	w23, w0
   4cfe8:	mov	x0, x26
   4cfec:	bl	c070 <mpfr_clear@plt>
   4cff0:	ldr	w0, [sp, #168]
   4cff4:	cmp	w0, #0x5
   4cff8:	b.eq	4d004 <mpfr_yn@@Base+0xf24>  // b.none
   4cffc:	cbz	w23, 4c1f8 <mpfr_yn@@Base+0x118>
   4d000:	b	4d008 <mpfr_yn@@Base+0xf28>
   4d004:	mov	w23, #0x1                   	// #1
   4d008:	ldr	x2, [sp, #136]
   4d00c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4d010:	ldr	x1, [x0, #2576]
   4d014:	add	x0, x0, #0xa10
   4d018:	blr	x1
   4d01c:	ldr	w1, [sp, #172]
   4d020:	str	w1, [x2, x0]
   4d024:	ldr	x0, [sp, #104]
   4d028:	ldr	x1, [x0, #16]
   4d02c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4d030:	ldr	x3, [x0, #2512]
   4d034:	add	x0, x0, #0x9d0
   4d038:	blr	x3
   4d03c:	ldr	x3, [sp, #184]
   4d040:	str	x3, [x2, x0]
   4d044:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4d048:	ldr	x4, [x0, #2544]
   4d04c:	add	x0, x0, #0x9f0
   4d050:	blr	x4
   4d054:	ldr	x4, [sp, #192]
   4d058:	str	x4, [x2, x0]
   4d05c:	cmp	x4, x1
   4d060:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   4d064:	b.gt	4c89c <mpfr_yn@@Base+0x7bc>
   4d068:	ldr	w0, [sp, #172]
   4d06c:	ldp	x19, x20, [sp, #16]
   4d070:	orr	w1, w0, #0x8
   4d074:	ldp	x25, x26, [sp, #64]
   4d078:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4d07c:	ldr	x2, [x0, #2576]
   4d080:	add	x0, x0, #0xa10
   4d084:	blr	x2
   4d088:	ldr	x2, [sp, #136]
   4d08c:	ldp	x29, x30, [sp]
   4d090:	str	w1, [x2, x0]
   4d094:	mov	w0, w23
   4d098:	ldp	x21, x22, [sp, #32]
   4d09c:	ldp	x23, x24, [sp, #48]
   4d0a0:	ldp	x27, x28, [sp, #80]
   4d0a4:	add	sp, sp, #0x220
   4d0a8:	ret
   4d0ac:	mov	w0, w0
   4d0b0:	mov	w23, #0x0                   	// #0
   4d0b4:	orr	w1, w0, #0x4
   4d0b8:	str	w1, [x24]
   4d0bc:	ldr	x1, [sp, #104]
   4d0c0:	mov	x0, #0x2                   	// #2
   4d0c4:	movk	x0, #0x8000, lsl #48
   4d0c8:	ldp	x29, x30, [sp]
   4d0cc:	str	x0, [x1, #16]
   4d0d0:	mov	w0, w23
   4d0d4:	ldp	x21, x22, [sp, #32]
   4d0d8:	ldp	x23, x24, [sp, #48]
   4d0dc:	ldp	x27, x28, [sp, #80]
   4d0e0:	add	sp, sp, #0x220
   4d0e4:	ret
   4d0e8:	mov	x0, x22
   4d0ec:	bl	bf90 <mpfr_mpz_init@plt>
   4d0f0:	mov	x0, x22
   4d0f4:	mov	x1, #0x1                   	// #1
   4d0f8:	bl	bcb0 <__gmpz_set_ui@plt>
   4d0fc:	mov	x0, x19
   4d100:	mov	w3, #0x0                   	// #0
   4d104:	mov	x2, #0x0                   	// #0
   4d108:	mov	x1, #0x1                   	// #1
   4d10c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   4d110:	ldr	x24, [sp, #112]
   4d114:	ldr	x23, [sp, #400]
   4d118:	cmp	x24, #0x1
   4d11c:	b.eq	4d18c <mpfr_yn@@Base+0x10ac>  // b.none
   4d120:	mov	x25, #0x1                   	// #1
   4d124:	nop
   4d128:	mov	w3, #0x0                   	// #0
   4d12c:	mov	x2, x28
   4d130:	mov	x1, x19
   4d134:	mov	x0, x19
   4d138:	bl	bd50 <mpfr_mul@plt>
   4d13c:	sub	x26, x24, x25
   4d140:	mov	x2, x25
   4d144:	mov	x1, x22
   4d148:	mov	x0, x22
   4d14c:	bl	c100 <__gmpz_mul_ui@plt>
   4d150:	mov	x2, x26
   4d154:	mov	x1, x22
   4d158:	mov	x0, x22
   4d15c:	bl	c100 <__gmpz_mul_ui@plt>
   4d160:	mov	x2, x22
   4d164:	mov	x1, x19
   4d168:	mov	x0, x19
   4d16c:	mov	w3, #0x0                   	// #0
   4d170:	bl	c480 <mpfr_add_z@plt>
   4d174:	add	x25, x25, #0x1
   4d178:	ldr	x0, [sp, #400]
   4d17c:	cmp	x23, x0
   4d180:	csel	x23, x23, x0, ge  // ge = tcont
   4d184:	cmp	x24, x25
   4d188:	b.ne	4d128 <mpfr_yn@@Base+0x1048>  // b.any
   4d18c:	mov	x1, x22
   4d190:	mov	x0, x22
   4d194:	bl	bc60 <__gmpz_sqrt@plt>
   4d198:	mov	x2, x22
   4d19c:	mov	x1, x19
   4d1a0:	mov	w3, #0x0                   	// #0
   4d1a4:	mov	x0, x19
   4d1a8:	bl	cc80 <mpfr_div_z@plt>
   4d1ac:	mov	x0, x22
   4d1b0:	bl	c170 <mpfr_mpz_clear@plt>
   4d1b4:	ldr	x0, [sp, #400]
   4d1b8:	sub	x23, x23, x0
   4d1bc:	b	4c334 <mpfr_yn@@Base+0x254>
   4d1c0:	add	x25, sp, #0x200
   4d1c4:	add	x19, x19, #0xa
   4d1c8:	mov	x1, x19
   4d1cc:	mov	x0, x25
   4d1d0:	bl	ca80 <mpfr_init2@plt>
   4d1d4:	mov	w2, #0x2                   	// #2
   4d1d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4d1dc:	ldr	x1, [x0, #2624]
   4d1e0:	add	x0, x0, #0xa40
   4d1e4:	blr	x1
   4d1e8:	ldr	x1, [sp, #136]
   4d1ec:	add	x1, x1, x0
   4d1f0:	mov	x0, x25
   4d1f4:	bl	c380 <mpfr_cache@plt>
   4d1f8:	mov	x1, x25
   4d1fc:	mov	x2, x27
   4d200:	mov	w3, #0x2                   	// #2
   4d204:	mov	x0, x25
   4d208:	bl	bd50 <mpfr_mul@plt>
   4d20c:	str	wzr, [x24]
   4d210:	ldr	w3, [sp, #120]
   4d214:	mov	x2, x25
   4d218:	mov	x0, x25
   4d21c:	mov	x1, #0x2                   	// #2
   4d220:	bl	c2f0 <mpfr_ui_div@plt>
   4d224:	ldr	w0, [x24]
   4d228:	tbnz	w0, #1, 4d7f0 <mpfr_yn@@Base+0x1710>
   4d22c:	mov	x1, x25
   4d230:	mov	w2, #0x0                   	// #0
   4d234:	mov	x0, x25
   4d238:	bl	bd70 <mpfr_neg@plt>
   4d23c:	ldr	x0, [sp, #528]
   4d240:	mov	x3, #0x3                   	// #3
   4d244:	ldr	x1, [sp, #512]
   4d248:	add	x2, x0, #0x2
   4d24c:	cmp	x2, x1
   4d250:	sub	x2, x1, x0
   4d254:	csinc	x2, x3, x2, ge  // ge = tcont
   4d258:	cmp	x0, x22
   4d25c:	b.le	4d290 <mpfr_yn@@Base+0x11b0>
   4d260:	ldr	w3, [sp, #168]
   4d264:	sub	x1, x1, #0x1
   4d268:	ldr	x0, [sp, #536]
   4d26c:	cmp	w3, #0x0
   4d270:	ldr	x3, [sp, #104]
   4d274:	asr	x1, x1, #6
   4d278:	sub	x2, x19, x2
   4d27c:	add	x1, x1, #0x1
   4d280:	ldr	x3, [x3]
   4d284:	cinc	x3, x3, eq  // eq = none
   4d288:	bl	c370 <mpfr_round_p@plt>
   4d28c:	cbnz	w0, 4d7b4 <mpfr_yn@@Base+0x16d4>
   4d290:	mov	x0, x25
   4d294:	bl	c070 <mpfr_clear@plt>
   4d298:	ldr	x0, [sp, #104]
   4d29c:	add	x21, sp, #0x1a0
   4d2a0:	add	x20, sp, #0x1c0
   4d2a4:	ldr	x19, [x0]
   4d2a8:	lsr	x1, x19, #63
   4d2ac:	b	4c1d0 <mpfr_yn@@Base+0xf0>
   4d2b0:	ldr	x2, [sp, #160]
   4d2b4:	mov	x1, x26
   4d2b8:	mov	x0, x26
   4d2bc:	bl	bd50 <mpfr_mul@plt>
   4d2c0:	ldr	x2, [sp, #152]
   4d2c4:	mov	x1, x24
   4d2c8:	mov	w3, #0x0                   	// #0
   4d2cc:	mov	x0, x24
   4d2d0:	bl	bd50 <mpfr_mul@plt>
   4d2d4:	ldr	x21, [sp, #272]
   4d2d8:	mov	x2, x24
   4d2dc:	ldr	x4, [sp, #304]
   4d2e0:	mov	x1, x26
   4d2e4:	mov	x0, x24
   4d2e8:	mov	w3, #0x0                   	// #0
   4d2ec:	cmp	x21, x4
   4d2f0:	csel	x21, x21, x4, ge  // ge = tcont
   4d2f4:	bl	bb70 <mpfr_sub@plt>
   4d2f8:	ldr	x0, [sp, #224]
   4d2fc:	cbz	x0, 4cde8 <mpfr_yn@@Base+0xd08>
   4d300:	mov	x1, x24
   4d304:	mov	x0, x24
   4d308:	mov	w2, #0x0                   	// #0
   4d30c:	bl	bd70 <mpfr_neg@plt>
   4d310:	b	4cde8 <mpfr_yn@@Base+0xd08>
   4d314:	ldr	x1, [sp, #128]
   4d318:	mov	x0, #0xfffffffffffffeff    	// #-257
   4d31c:	movk	x0, #0x7fff, lsl #48
   4d320:	sub	x0, x0, x1
   4d324:	ldr	x1, [sp, #248]
   4d328:	cmp	x0, x1
   4d32c:	b.lt	4d7d8 <mpfr_yn@@Base+0x16f8>  // b.tstop
   4d330:	ldr	x0, [sp, #128]
   4d334:	ldr	x1, [sp, #248]
   4d338:	add	x0, x0, x1
   4d33c:	str	x0, [sp, #128]
   4d340:	add	x0, x0, x0, lsr #63
   4d344:	asr	x0, x0, #1
   4d348:	str	x0, [sp, #248]
   4d34c:	b	4c28c <mpfr_yn@@Base+0x1ac>
   4d350:	add	x21, sp, #0x1a0
   4d354:	add	x19, x19, #0xa
   4d358:	add	x20, sp, #0x1c0
   4d35c:	mov	x1, x19
   4d360:	mov	x0, x21
   4d364:	bl	ca80 <mpfr_init2@plt>
   4d368:	add	x22, sp, #0x1e0
   4d36c:	mov	x1, x19
   4d370:	mov	x0, x20
   4d374:	bl	ca80 <mpfr_init2@plt>
   4d378:	add	x25, sp, #0x200
   4d37c:	mov	x1, x19
   4d380:	mov	x0, x22
   4d384:	bl	ca80 <mpfr_init2@plt>
   4d388:	mov	x1, x19
   4d38c:	mov	x0, x25
   4d390:	bl	ca80 <mpfr_init2@plt>
   4d394:	mov	x1, x27
   4d398:	mov	w2, #0x3                   	// #3
   4d39c:	mov	x0, x25
   4d3a0:	bl	c090 <mpfr_log@plt>
   4d3a4:	ldr	w3, [sp, #520]
   4d3a8:	mov	x1, x25
   4d3ac:	mov	w2, #0x2                   	// #2
   4d3b0:	mov	x0, x20
   4d3b4:	bl	c6a0 <mpfr_set4@plt>
   4d3b8:	mov	x0, x20
   4d3bc:	bl	c120 <mpfr_nextabove@plt>
   4d3c0:	ldr	x19, [sp, #136]
   4d3c4:	mov	w2, #0x3                   	// #3
   4d3c8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4d3cc:	ldr	x1, [x0, #2608]
   4d3d0:	add	x0, x0, #0xa30
   4d3d4:	blr	x1
   4d3d8:	add	x1, x19, x0
   4d3dc:	mov	x0, x22
   4d3e0:	bl	c380 <mpfr_cache@plt>
   4d3e4:	mov	x2, x22
   4d3e8:	mov	x1, x25
   4d3ec:	mov	w3, #0x3                   	// #3
   4d3f0:	mov	x0, x21
   4d3f4:	bl	c1a0 <mpfr_add@plt>
   4d3f8:	mov	x0, x22
   4d3fc:	bl	c120 <mpfr_nextabove@plt>
   4d400:	mov	x1, x20
   4d404:	mov	w3, #0x2                   	// #2
   4d408:	mov	x2, x22
   4d40c:	mov	x0, x20
   4d410:	bl	c1a0 <mpfr_add@plt>
   4d414:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4d418:	ldr	x1, [x0, #2560]
   4d41c:	add	x0, x0, #0xa00
   4d420:	blr	x1
   4d424:	mov	w2, #0x2                   	// #2
   4d428:	add	x1, x19, x0
   4d42c:	mov	x0, x22
   4d430:	bl	c380 <mpfr_cache@plt>
   4d434:	mov	x2, x22
   4d438:	mov	x1, x21
   4d43c:	mov	w3, #0x3                   	// #3
   4d440:	mov	x0, x21
   4d444:	bl	bb70 <mpfr_sub@plt>
   4d448:	mov	x0, x22
   4d44c:	bl	bdd0 <mpfr_nextbelow@plt>
   4d450:	mov	x1, x20
   4d454:	mov	w3, #0x2                   	// #2
   4d458:	mov	x2, x22
   4d45c:	mov	x0, x20
   4d460:	bl	bb70 <mpfr_sub@plt>
   4d464:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4d468:	ldr	x1, [x0, #2624]
   4d46c:	add	x0, x0, #0xa40
   4d470:	blr	x1
   4d474:	mov	w2, #0x2                   	// #2
   4d478:	add	x1, x19, x0
   4d47c:	mov	x0, x22
   4d480:	bl	c380 <mpfr_cache@plt>
   4d484:	mov	x2, x22
   4d488:	mov	x1, x21
   4d48c:	mov	w3, #0x3                   	// #3
   4d490:	mov	x0, x21
   4d494:	bl	c620 <mpfr_div@plt>
   4d498:	mov	x0, x22
   4d49c:	bl	bdd0 <mpfr_nextbelow@plt>
   4d4a0:	mov	x2, x22
   4d4a4:	mov	x1, x20
   4d4a8:	mov	w3, #0x3                   	// #3
   4d4ac:	mov	x0, x20
   4d4b0:	bl	c620 <mpfr_div@plt>
   4d4b4:	mov	x1, x21
   4d4b8:	mov	w3, #0x3                   	// #3
   4d4bc:	mov	x2, #0x1                   	// #1
   4d4c0:	mov	x0, x21
   4d4c4:	bl	c2c0 <mpfr_mul_2ui@plt>
   4d4c8:	mov	x1, x20
   4d4cc:	mov	w3, #0x2                   	// #2
   4d4d0:	mov	x2, #0x1                   	// #1
   4d4d4:	mov	x0, x20
   4d4d8:	bl	c2c0 <mpfr_mul_2ui@plt>
   4d4dc:	mov	w3, #0x2                   	// #2
   4d4e0:	mov	x2, x27
   4d4e4:	mov	x1, x27
   4d4e8:	mov	x0, x22
   4d4ec:	bl	bd50 <mpfr_mul@plt>
   4d4f0:	mov	x1, x22
   4d4f4:	mov	w2, #0x3                   	// #3
   4d4f8:	mov	x0, x22
   4d4fc:	bl	bd70 <mpfr_neg@plt>
   4d500:	mov	x1, x22
   4d504:	mov	w3, #0x3                   	// #3
   4d508:	mov	x2, #0x1                   	// #1
   4d50c:	mov	x0, x22
   4d510:	bl	c8f0 <mpfr_div_2ui@plt>
   4d514:	mov	x2, x25
   4d518:	mov	x1, x22
   4d51c:	mov	w3, #0x2                   	// #2
   4d520:	mov	x0, x22
   4d524:	bl	bd50 <mpfr_mul@plt>
   4d528:	mov	w3, #0x2                   	// #2
   4d52c:	mov	x2, x22
   4d530:	mov	x1, x20
   4d534:	mov	x0, x20
   4d538:	bl	c1a0 <mpfr_add@plt>
   4d53c:	ldr	w24, [sp, #168]
   4d540:	ldr	x19, [sp, #104]
   4d544:	mov	w2, w24
   4d548:	mov	x0, x21
   4d54c:	ldr	x1, [x19]
   4d550:	bl	c970 <mpfr_prec_round@plt>
   4d554:	mov	w23, w0
   4d558:	ldr	x1, [x19]
   4d55c:	mov	x0, x20
   4d560:	mov	w2, w24
   4d564:	bl	c970 <mpfr_prec_round@plt>
   4d568:	cmp	w23, w0
   4d56c:	b.eq	4d76c <mpfr_yn@@Base+0x168c>  // b.none
   4d570:	mov	x0, x21
   4d574:	bl	c070 <mpfr_clear@plt>
   4d578:	mov	x0, x20
   4d57c:	bl	c070 <mpfr_clear@plt>
   4d580:	mov	x0, x22
   4d584:	bl	c070 <mpfr_clear@plt>
   4d588:	mov	x0, x25
   4d58c:	bl	c070 <mpfr_clear@plt>
   4d590:	ldr	x0, [sp, #104]
   4d594:	ldr	x19, [x0]
   4d598:	lsr	x1, x19, #63
   4d59c:	b	4c1d0 <mpfr_yn@@Base+0xf0>
   4d5a0:	mov	x0, #0x2                   	// #2
   4d5a4:	movk	x0, #0x8000, lsl #48
   4d5a8:	cmp	x2, x0
   4d5ac:	b.eq	4d70c <mpfr_yn@@Base+0x162c>  // b.none
   4d5b0:	cmp	x2, x22
   4d5b4:	b.eq	4d6c0 <mpfr_yn@@Base+0x15e0>  // b.none
   4d5b8:	ldr	x0, [sp, #104]
   4d5bc:	mov	w2, #0xffffffff            	// #-1
   4d5c0:	str	x22, [x0, #16]
   4d5c4:	ldr	x0, [sp, #120]
   4d5c8:	tbz	x0, #63, 4d5d8 <mpfr_yn@@Base+0x14f8>
   4d5cc:	tst	x0, #0x1
   4d5d0:	mov	w2, #0x1                   	// #1
   4d5d4:	cneg	w2, w2, eq  // eq = none
   4d5d8:	mrs	x1, tpidr_el0
   4d5dc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4d5e0:	ldr	x3, [x0, #2576]
   4d5e4:	add	x0, x0, #0xa10
   4d5e8:	blr	x3
   4d5ec:	add	x0, x1, x0
   4d5f0:	mov	w23, #0x0                   	// #0
   4d5f4:	ldr	x1, [sp, #104]
   4d5f8:	str	w2, [x1, #8]
   4d5fc:	ldr	w1, [x0]
   4d600:	orr	w1, w1, #0x20
   4d604:	str	w1, [x0]
   4d608:	b	4c8b8 <mpfr_yn@@Base+0x7d8>
   4d60c:	mov	x1, x24
   4d610:	mov	x0, x24
   4d614:	mov	w2, #0x0                   	// #0
   4d618:	bl	bd70 <mpfr_neg@plt>
   4d61c:	b	4ca38 <mpfr_yn@@Base+0x958>
   4d620:	ldr	w0, [sp, #208]
   4d624:	cbnz	w0, 4d844 <mpfr_yn@@Base+0x1764>
   4d628:	ldr	x1, [sp, #232]
   4d62c:	mov	x0, #0xfffffffffffffeff    	// #-257
   4d630:	movk	x0, #0x7fff, lsl #48
   4d634:	sub	x0, x0, x28
   4d638:	cmp	x0, x1
   4d63c:	b.lt	4d82c <mpfr_yn@@Base+0x174c>  // b.tstop
   4d640:	ldr	x0, [sp, #232]
   4d644:	add	x28, x28, x0
   4d648:	add	x0, x28, x28, lsr #63
   4d64c:	asr	x0, x0, #1
   4d650:	str	x0, [sp, #232]
   4d654:	b	4c9ac <mpfr_yn@@Base+0x8cc>
   4d658:	mov	x4, #0x3                   	// #3
   4d65c:	b	4c638 <mpfr_yn@@Base+0x558>
   4d660:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4d664:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4d668:	add	x2, x2, #0xbe0
   4d66c:	add	x0, x0, #0xbc0
   4d670:	mov	w1, #0x5d                  	// #93
   4d674:	bl	cb40 <mpfr_assert_fail@plt>
   4d678:	ldr	w2, [sp, #168]
   4d67c:	mov	x1, x26
   4d680:	ldr	x0, [sp, #104]
   4d684:	bl	bd70 <mpfr_neg@plt>
   4d688:	mov	w23, w0
   4d68c:	b	4cfe8 <mpfr_yn@@Base+0xf08>
   4d690:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4d694:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4d698:	add	x2, x2, #0xaf0
   4d69c:	add	x0, x0, #0xbc0
   4d6a0:	mov	w1, #0x92                  	// #146
   4d6a4:	bl	cb40 <mpfr_assert_fail@plt>
   4d6a8:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4d6ac:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4d6b0:	add	x2, x2, #0xbc8
   4d6b4:	add	x0, x0, #0xbc0
   4d6b8:	mov	w1, #0x167                 	// #359
   4d6bc:	bl	cb40 <mpfr_assert_fail@plt>
   4d6c0:	ldr	w0, [x27, #8]
   4d6c4:	cmp	w0, #0x0
   4d6c8:	b.le	4d70c <mpfr_yn@@Base+0x162c>
   4d6cc:	ldr	x2, [sp, #104]
   4d6d0:	mov	w1, #0x1                   	// #1
   4d6d4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4d6d8:	mov	w23, #0x0                   	// #0
   4d6dc:	str	w1, [x2, #8]
   4d6e0:	str	x0, [x2, #16]
   4d6e4:	b	4c8b8 <mpfr_yn@@Base+0x7d8>
   4d6e8:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4d6ec:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4d6f0:	add	x2, x2, #0xa48
   4d6f4:	add	x0, x0, #0xbc0
   4d6f8:	mov	w1, #0x14c                 	// #332
   4d6fc:	bl	cb40 <mpfr_assert_fail@plt>
   4d700:	ldr	x0, [sp, #104]
   4d704:	ldr	x0, [x0]
   4d708:	b	4c230 <mpfr_yn@@Base+0x150>
   4d70c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4d710:	ldr	x2, [x0, #2576]
   4d714:	add	x0, x0, #0xa10
   4d718:	blr	x2
   4d71c:	mrs	x1, tpidr_el0
   4d720:	ldr	x2, [sp, #104]
   4d724:	add	x0, x1, x0
   4d728:	mov	x1, #0x2                   	// #2
   4d72c:	mov	w23, #0x0                   	// #0
   4d730:	movk	x1, #0x8000, lsl #48
   4d734:	str	x1, [x2, #16]
   4d738:	ldr	w1, [x0]
   4d73c:	orr	w1, w1, #0x4
   4d740:	str	w1, [x0]
   4d744:	b	4c8b8 <mpfr_yn@@Base+0x7d8>
   4d748:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4d74c:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4d750:	add	x2, x2, #0xa48
   4d754:	add	x0, x0, #0xa68
   4d758:	mov	w1, #0x36                  	// #54
   4d75c:	bl	cb40 <mpfr_assert_fail@plt>
   4d760:	ldr	x0, [sp, #104]
   4d764:	ldr	x0, [x0]
   4d768:	b	4c944 <mpfr_yn@@Base+0x864>
   4d76c:	mov	x1, x20
   4d770:	mov	x0, x21
   4d774:	bl	ca60 <mpfr_equal_p@plt>
   4d778:	cbz	w0, 4d570 <mpfr_yn@@Base+0x1490>
   4d77c:	ldr	w2, [sp, #168]
   4d780:	mov	x1, x20
   4d784:	ldr	w3, [sp, #456]
   4d788:	ldr	x0, [sp, #104]
   4d78c:	bl	c6a0 <mpfr_set4@plt>
   4d790:	mov	x0, x21
   4d794:	bl	c070 <mpfr_clear@plt>
   4d798:	mov	x0, x20
   4d79c:	bl	c070 <mpfr_clear@plt>
   4d7a0:	mov	x0, x22
   4d7a4:	bl	c070 <mpfr_clear@plt>
   4d7a8:	mov	x0, x25
   4d7ac:	bl	c070 <mpfr_clear@plt>
   4d7b0:	b	4c83c <mpfr_yn@@Base+0x75c>
   4d7b4:	ldr	w2, [sp, #168]
   4d7b8:	mov	x1, x25
   4d7bc:	ldr	w3, [sp, #520]
   4d7c0:	ldr	x0, [sp, #104]
   4d7c4:	bl	c6a0 <mpfr_set4@plt>
   4d7c8:	mov	w23, w0
   4d7cc:	mov	x0, x25
   4d7d0:	bl	c070 <mpfr_clear@plt>
   4d7d4:	b	4c83c <mpfr_yn@@Base+0x75c>
   4d7d8:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   4d7dc:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4d7e0:	add	x2, x2, #0x830
   4d7e4:	add	x0, x0, #0xbc0
   4d7e8:	mov	w1, #0x196                 	// #406
   4d7ec:	bl	cb40 <mpfr_assert_fail@plt>
   4d7f0:	mov	x0, x25
   4d7f4:	bl	c070 <mpfr_clear@plt>
   4d7f8:	ldp	w1, w3, [sp, #168]
   4d7fc:	str	w3, [x24]
   4d800:	ldr	x3, [sp, #184]
   4d804:	str	x3, [x21]
   4d808:	ldr	x0, [sp, #104]
   4d80c:	mov	w2, #0xffffffff            	// #-1
   4d810:	ldr	x3, [sp, #192]
   4d814:	str	x3, [x20]
   4d818:	bl	bf40 <mpfr_overflow@plt>
   4d81c:	mov	w23, w0
   4d820:	ldp	x19, x20, [sp, #16]
   4d824:	ldp	x25, x26, [sp, #64]
   4d828:	b	4c8b8 <mpfr_yn@@Base+0x7d8>
   4d82c:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   4d830:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4d834:	add	x2, x2, #0xeb0
   4d838:	add	x0, x0, #0xa68
   4d83c:	mov	w1, #0x106                 	// #262
   4d840:	bl	cb40 <mpfr_assert_fail@plt>
   4d844:	mov	x0, x26
   4d848:	ldr	x27, [sp, #128]
   4d84c:	ldr	x21, [sp, #144]
   4d850:	ldr	x28, [sp, #160]
   4d854:	bl	c070 <mpfr_clear@plt>
   4d858:	b	4c1f8 <mpfr_yn@@Base+0x118>
   4d85c:	nop

000000000004d860 <mpfr_y0@@Base>:
   4d860:	mov	w3, w2
   4d864:	mov	x2, x1
   4d868:	mov	x1, #0x0                   	// #0
   4d86c:	b	c5c0 <mpfr_yn@plt>

000000000004d870 <mpfr_y1@@Base>:
   4d870:	mov	w3, w2
   4d874:	mov	x2, x1
   4d878:	mov	x1, #0x1                   	// #1
   4d87c:	b	c5c0 <mpfr_yn@plt>
   4d880:	stp	x29, x30, [sp, #-160]!
   4d884:	mov	x29, sp
   4d888:	stp	x21, x22, [sp, #32]
   4d88c:	mov	x21, x3
   4d890:	mov	x22, x1
   4d894:	stp	x27, x28, [sp, #80]
   4d898:	mov	x27, x4
   4d89c:	ldr	w28, [x3, #8]
   4d8a0:	ldr	x3, [x3, #16]
   4d8a4:	stp	x25, x26, [sp, #64]
   4d8a8:	mov	x25, x0
   4d8ac:	str	w5, [sp, #96]
   4d8b0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4d8b4:	cmp	x3, x0
   4d8b8:	b.le	4dc30 <mpfr_y1@@Base+0x3c0>
   4d8bc:	ldr	x1, [x4, #16]
   4d8c0:	cmp	x1, x0
   4d8c4:	b.le	4dc44 <mpfr_y1@@Base+0x3d4>
   4d8c8:	stp	x23, x24, [sp, #48]
   4d8cc:	add	x23, sp, #0x70
   4d8d0:	mov	w26, w2
   4d8d4:	mov	x0, x23
   4d8d8:	stp	x19, x20, [sp, #16]
   4d8dc:	bl	bf90 <mpfr_mpz_init@plt>
   4d8e0:	add	x19, sp, #0x80
   4d8e4:	add	x20, sp, #0x90
   4d8e8:	mov	x0, x19
   4d8ec:	bl	bf90 <mpfr_mpz_init@plt>
   4d8f0:	mov	x0, x20
   4d8f4:	bl	bf90 <mpfr_mpz_init@plt>
   4d8f8:	mov	x1, x21
   4d8fc:	mov	x0, x23
   4d900:	bl	cac0 <mpfr_get_z_2exp@plt>
   4d904:	mov	x24, x0
   4d908:	mov	x1, x27
   4d90c:	mov	x0, x19
   4d910:	bl	cac0 <mpfr_get_z_2exp@plt>
   4d914:	mov	x21, x0
   4d918:	ldr	w1, [x27, #8]
   4d91c:	mov	w3, #0xffffffff            	// #-1
   4d920:	ldr	w2, [sp, #116]
   4d924:	mov	x0, x19
   4d928:	cmp	w1, w28
   4d92c:	ldr	w1, [sp, #132]
   4d930:	cneg	w3, w3, eq  // eq = none
   4d934:	cmp	w2, #0x0
   4d938:	str	w3, [sp, #100]
   4d93c:	cneg	w3, w2, lt  // lt = tstop
   4d940:	cmp	w1, #0x0
   4d944:	str	w3, [sp, #116]
   4d948:	cneg	w2, w1, lt  // lt = tstop
   4d94c:	mov	x1, #0x0                   	// #0
   4d950:	str	w2, [sp, #132]
   4d954:	bl	ba90 <__gmpz_scan1@plt>
   4d958:	mov	x2, x0
   4d95c:	add	x21, x21, x2
   4d960:	mov	x1, x19
   4d964:	mov	x0, x19
   4d968:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   4d96c:	cmp	x24, x21
   4d970:	b.gt	4da78 <mpfr_y1@@Base+0x208>
   4d974:	mov	w1, #0x2                   	// #2
   4d978:	mov	x0, x23
   4d97c:	bl	cb60 <__gmpz_sizeinbase@plt>
   4d980:	add	x27, x0, x24
   4d984:	mov	w1, #0x2                   	// #2
   4d988:	mov	x0, x19
   4d98c:	bl	cb60 <__gmpz_sizeinbase@plt>
   4d990:	add	x0, x0, x21
   4d994:	cmp	x27, x0
   4d998:	b.ge	4db40 <mpfr_y1@@Base+0x2d0>  // b.tcont
   4d99c:	mov	x1, x23
   4d9a0:	mov	x0, x20
   4d9a4:	bl	bfa0 <__gmpz_set@plt>
   4d9a8:	mov	w0, #0x1                   	// #1
   4d9ac:	mov	x1, #0x0                   	// #0
   4d9b0:	str	w0, [sp, #108]
   4d9b4:	mov	x0, x23
   4d9b8:	bl	bcb0 <__gmpz_set_ui@plt>
   4d9bc:	str	wzr, [sp, #104]
   4d9c0:	cbnz	w26, 4d9d4 <mpfr_y1@@Base+0x164>
   4d9c4:	mov	x0, x23
   4d9c8:	mov	x1, #0x0                   	// #0
   4d9cc:	bl	bfe0 <__gmpz_tstbit@plt>
   4d9d0:	str	w0, [sp, #104]
   4d9d4:	cbz	x22, 4db0c <mpfr_y1@@Base+0x29c>
   4d9d8:	mov	x1, x23
   4d9dc:	mov	x2, #0x3f                  	// #63
   4d9e0:	mov	x0, x23
   4d9e4:	bl	ba30 <__gmpz_tdiv_r_2exp@plt>
   4d9e8:	mov	x0, x23
   4d9ec:	bl	ba20 <__gmpz_get_si@plt>
   4d9f0:	ldr	w27, [sp, #148]
   4d9f4:	str	x0, [x22]
   4d9f8:	cbz	w27, 4db14 <mpfr_y1@@Base+0x2a4>
   4d9fc:	cbz	w26, 4db6c <mpfr_y1@@Base+0x2fc>
   4da00:	tbz	w28, #31, 4da10 <mpfr_y1@@Base+0x1a0>
   4da04:	ldr	w0, [sp, #148]
   4da08:	neg	w0, w0
   4da0c:	str	w0, [sp, #148]
   4da10:	ldr	w3, [sp, #96]
   4da14:	cmp	x24, x21
   4da18:	csel	x2, x24, x21, le
   4da1c:	mov	x0, x25
   4da20:	mov	x1, x20
   4da24:	bl	c4f0 <mpfr_set_z_2exp@plt>
   4da28:	mov	w27, w0
   4da2c:	cbz	x22, 4da40 <mpfr_y1@@Base+0x1d0>
   4da30:	ldrsw	x1, [sp, #100]
   4da34:	ldr	x0, [x22]
   4da38:	mul	x0, x0, x1
   4da3c:	str	x0, [x22]
   4da40:	mov	x0, x23
   4da44:	bl	c170 <mpfr_mpz_clear@plt>
   4da48:	mov	x0, x19
   4da4c:	bl	c170 <mpfr_mpz_clear@plt>
   4da50:	mov	x0, x20
   4da54:	bl	c170 <mpfr_mpz_clear@plt>
   4da58:	ldp	x19, x20, [sp, #16]
   4da5c:	ldp	x23, x24, [sp, #48]
   4da60:	mov	w0, w27
   4da64:	ldp	x21, x22, [sp, #32]
   4da68:	ldp	x25, x26, [sp, #64]
   4da6c:	ldp	x27, x28, [sp, #80]
   4da70:	ldp	x29, x30, [sp], #160
   4da74:	ret
   4da78:	sub	x27, x24, x21
   4da7c:	cbz	x22, 4dbc8 <mpfr_y1@@Base+0x358>
   4da80:	mov	x2, #0x3f                  	// #63
   4da84:	mov	x1, x19
   4da88:	mov	x0, x19
   4da8c:	bl	c200 <__gmpz_mul_2exp@plt>
   4da90:	mov	x0, x20
   4da94:	mov	x1, #0x2                   	// #2
   4da98:	bl	bcb0 <__gmpz_set_ui@plt>
   4da9c:	mov	x3, x19
   4daa0:	mov	x2, x27
   4daa4:	mov	x1, x20
   4daa8:	mov	x0, x20
   4daac:	bl	cbc0 <__gmpz_powm_ui@plt>
   4dab0:	mov	x2, x23
   4dab4:	mov	x1, x20
   4dab8:	mov	x0, x20
   4dabc:	bl	bff0 <__gmpz_mul@plt>
   4dac0:	mov	x2, x19
   4dac4:	mov	x1, x20
   4dac8:	mov	x0, x20
   4dacc:	bl	c8a0 <__gmpz_mod@plt>
   4dad0:	mov	x1, x19
   4dad4:	mov	x0, x19
   4dad8:	mov	x2, #0x3f                  	// #63
   4dadc:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   4dae0:	mov	x3, x19
   4dae4:	mov	x2, x20
   4dae8:	mov	x1, x20
   4daec:	mov	x0, x23
   4daf0:	bl	bad0 <__gmpz_tdiv_qr@plt>
   4daf4:	str	wzr, [sp, #108]
   4daf8:	mov	x0, x23
   4dafc:	bl	ba20 <__gmpz_get_si@plt>
   4db00:	str	x0, [x22]
   4db04:	and	w0, w0, #0x1
   4db08:	str	w0, [sp, #104]
   4db0c:	ldr	w27, [sp, #148]
   4db10:	cbnz	w27, 4d9fc <mpfr_y1@@Base+0x18c>
   4db14:	mov	w1, #0x1                   	// #1
   4db18:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4db1c:	str	w1, [x25, #8]
   4db20:	str	x0, [x25, #16]
   4db24:	tbz	w28, #31, 4da2c <mpfr_y1@@Base+0x1bc>
   4db28:	mov	x1, x25
   4db2c:	mov	x0, x25
   4db30:	mov	w2, #0x0                   	// #0
   4db34:	mov	w27, #0x0                   	// #0
   4db38:	bl	bd70 <mpfr_neg@plt>
   4db3c:	b	4da2c <mpfr_y1@@Base+0x1bc>
   4db40:	sub	x2, x21, x24
   4db44:	mov	x1, x19
   4db48:	mov	x0, x19
   4db4c:	str	wzr, [sp, #108]
   4db50:	bl	c200 <__gmpz_mul_2exp@plt>
   4db54:	mov	x3, x19
   4db58:	mov	x2, x23
   4db5c:	mov	x1, x20
   4db60:	mov	x0, x23
   4db64:	bl	bad0 <__gmpz_tdiv_qr@plt>
   4db68:	b	4d9bc <mpfr_y1@@Base+0x14c>
   4db6c:	mov	x0, x20
   4db70:	mov	x1, x20
   4db74:	mov	x2, #0x1                   	// #1
   4db78:	bl	c200 <__gmpz_mul_2exp@plt>
   4db7c:	ldr	w0, [sp, #108]
   4db80:	cbz	w0, 4dd48 <mpfr_y1@@Base+0x4d8>
   4db84:	mov	w1, #0x2                   	// #2
   4db88:	mov	x0, x20
   4db8c:	bl	cb60 <__gmpz_sizeinbase@plt>
   4db90:	add	x26, x0, x24
   4db94:	mov	w1, #0x2                   	// #2
   4db98:	mov	x0, x19
   4db9c:	bl	cb60 <__gmpz_sizeinbase@plt>
   4dba0:	add	x0, x0, x21
   4dba4:	cmp	x26, x0
   4dba8:	b.ge	4ddb8 <mpfr_y1@@Base+0x548>  // b.tcont
   4dbac:	mov	x1, x20
   4dbb0:	mov	x0, x20
   4dbb4:	mov	x2, #0x1                   	// #1
   4dbb8:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   4dbbc:	ldr	w0, [sp, #104]
   4dbc0:	cbnz	w0, 4dd70 <mpfr_y1@@Base+0x500>
   4dbc4:	b	4da00 <mpfr_y1@@Base+0x190>
   4dbc8:	cbz	w26, 4dca8 <mpfr_y1@@Base+0x438>
   4dbcc:	mov	x0, x20
   4dbd0:	mov	x1, #0x2                   	// #2
   4dbd4:	bl	bcb0 <__gmpz_set_ui@plt>
   4dbd8:	mov	x3, x19
   4dbdc:	mov	x2, x27
   4dbe0:	mov	x1, x20
   4dbe4:	mov	x0, x20
   4dbe8:	bl	cbc0 <__gmpz_powm_ui@plt>
   4dbec:	mov	x2, x23
   4dbf0:	mov	x1, x20
   4dbf4:	mov	x0, x20
   4dbf8:	bl	bff0 <__gmpz_mul@plt>
   4dbfc:	mov	x0, x20
   4dc00:	mov	x2, x19
   4dc04:	mov	x1, x20
   4dc08:	bl	c8a0 <__gmpz_mod@plt>
   4dc0c:	ldr	w0, [sp, #148]
   4dc10:	cbnz	w0, 4da00 <mpfr_y1@@Base+0x190>
   4dc14:	mov	w1, #0x1                   	// #1
   4dc18:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4dc1c:	str	w1, [x25, #8]
   4dc20:	mov	w27, #0x0                   	// #0
   4dc24:	str	x0, [x25, #16]
   4dc28:	tbz	w28, #31, 4da40 <mpfr_y1@@Base+0x1d0>
   4dc2c:	b	4db28 <mpfr_y1@@Base+0x2b8>
   4dc30:	mov	x0, #0x2                   	// #2
   4dc34:	movk	x0, #0x8000, lsl #48
   4dc38:	cmp	x3, x0
   4dc3c:	b.eq	4dc5c <mpfr_y1@@Base+0x3ec>  // b.none
   4dc40:	ldr	x1, [x4, #16]
   4dc44:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   4dc48:	add	x1, x1, x0
   4dc4c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4dc50:	cmp	x1, #0x1
   4dc54:	ccmp	x3, x0, #0x4, hi  // hi = pmore
   4dc58:	b.ne	4dd94 <mpfr_y1@@Base+0x524>  // b.any
   4dc5c:	mrs	x1, tpidr_el0
   4dc60:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4dc64:	ldr	x2, [x0, #2576]
   4dc68:	add	x0, x0, #0xa10
   4dc6c:	blr	x2
   4dc70:	add	x0, x1, x0
   4dc74:	mov	x1, #0x2                   	// #2
   4dc78:	movk	x1, #0x8000, lsl #48
   4dc7c:	str	x1, [x25, #16]
   4dc80:	mov	w27, #0x0                   	// #0
   4dc84:	ldr	w1, [x0]
   4dc88:	ldp	x21, x22, [sp, #32]
   4dc8c:	orr	w1, w1, #0x4
   4dc90:	str	w1, [x0]
   4dc94:	mov	w0, w27
   4dc98:	ldp	x25, x26, [sp, #64]
   4dc9c:	ldp	x27, x28, [sp, #80]
   4dca0:	ldp	x29, x30, [sp], #160
   4dca4:	ret
   4dca8:	mov	x2, #0x1                   	// #1
   4dcac:	mov	x1, x19
   4dcb0:	mov	x0, x19
   4dcb4:	bl	c200 <__gmpz_mul_2exp@plt>
   4dcb8:	mov	x0, x20
   4dcbc:	mov	x1, #0x2                   	// #2
   4dcc0:	bl	bcb0 <__gmpz_set_ui@plt>
   4dcc4:	mov	x3, x19
   4dcc8:	mov	x2, x27
   4dccc:	mov	x1, x20
   4dcd0:	mov	x0, x20
   4dcd4:	bl	cbc0 <__gmpz_powm_ui@plt>
   4dcd8:	mov	x2, x23
   4dcdc:	mov	x1, x20
   4dce0:	mov	x0, x20
   4dce4:	bl	bff0 <__gmpz_mul@plt>
   4dce8:	mov	x2, x19
   4dcec:	mov	x1, x20
   4dcf0:	mov	x0, x20
   4dcf4:	bl	c8a0 <__gmpz_mod@plt>
   4dcf8:	mov	x2, #0x1                   	// #1
   4dcfc:	mov	x1, x19
   4dd00:	mov	x0, x19
   4dd04:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   4dd08:	mov	x1, x19
   4dd0c:	mov	x0, x20
   4dd10:	bl	bee0 <__gmpz_cmpabs@plt>
   4dd14:	tbnz	w0, #31, 4dd2c <mpfr_y1@@Base+0x4bc>
   4dd18:	mov	x2, x19
   4dd1c:	mov	x1, x20
   4dd20:	mov	x0, x20
   4dd24:	mov	w26, #0x1                   	// #1
   4dd28:	bl	bde0 <__gmpz_sub@plt>
   4dd2c:	ldr	w0, [sp, #148]
   4dd30:	cbz	w0, 4dc14 <mpfr_y1@@Base+0x3a4>
   4dd34:	mov	x1, x20
   4dd38:	mov	x0, x20
   4dd3c:	mov	x2, #0x1                   	// #1
   4dd40:	str	w26, [sp, #104]
   4dd44:	bl	c200 <__gmpz_mul_2exp@plt>
   4dd48:	mov	x1, x19
   4dd4c:	mov	x0, x20
   4dd50:	bl	bee0 <__gmpz_cmpabs@plt>
   4dd54:	mov	w26, w0
   4dd58:	mov	x1, x20
   4dd5c:	mov	x0, x20
   4dd60:	mov	x2, #0x1                   	// #1
   4dd64:	bl	c130 <__gmpz_fdiv_q_2exp@plt>
   4dd68:	cmp	w26, #0x0
   4dd6c:	b.le	4dddc <mpfr_y1@@Base+0x56c>
   4dd70:	mov	x2, x19
   4dd74:	mov	x1, x20
   4dd78:	mov	x0, x20
   4dd7c:	bl	bde0 <__gmpz_sub@plt>
   4dd80:	cbz	x22, 4da00 <mpfr_y1@@Base+0x190>
   4dd84:	ldr	x0, [x22]
   4dd88:	add	x0, x0, #0x1
   4dd8c:	str	x0, [x22]
   4dd90:	b	4da00 <mpfr_y1@@Base+0x190>
   4dd94:	cbz	x22, 4dd9c <mpfr_y1@@Base+0x52c>
   4dd98:	str	xzr, [x22]
   4dd9c:	ldr	w2, [sp, #96]
   4dda0:	mov	w3, w28
   4dda4:	mov	x1, x21
   4dda8:	mov	x0, x25
   4ddac:	bl	c6a0 <mpfr_set4@plt>
   4ddb0:	mov	w27, w0
   4ddb4:	b	4da60 <mpfr_y1@@Base+0x1f0>
   4ddb8:	sub	x2, x21, x24
   4ddbc:	mov	x1, x19
   4ddc0:	mov	x0, x19
   4ddc4:	bl	c200 <__gmpz_mul_2exp@plt>
   4ddc8:	mov	x1, x19
   4ddcc:	mov	x0, x20
   4ddd0:	bl	bee0 <__gmpz_cmpabs@plt>
   4ddd4:	mov	w26, w0
   4ddd8:	b	4dd58 <mpfr_y1@@Base+0x4e8>
   4dddc:	b.ne	4da00 <mpfr_y1@@Base+0x190>  // b.any
   4dde0:	b	4dbbc <mpfr_y1@@Base+0x34c>
   4dde4:	nop

000000000004dde8 <mpfr_remainder@@Base>:
   4dde8:	mov	x4, x2
   4ddec:	mov	w5, w3
   4ddf0:	mov	w2, #0x0                   	// #0
   4ddf4:	mov	x3, x1
   4ddf8:	mov	x1, #0x0                   	// #0
   4ddfc:	b	4d880 <mpfr_y1@@Base+0x10>

000000000004de00 <mpfr_remquo@@Base>:
   4de00:	mov	x6, x3
   4de04:	mov	w5, w4
   4de08:	mov	x3, x2
   4de0c:	mov	x4, x6
   4de10:	mov	w2, #0x0                   	// #0
   4de14:	b	4d880 <mpfr_y1@@Base+0x10>

000000000004de18 <mpfr_fmod@@Base>:
   4de18:	mov	x4, x2
   4de1c:	mov	w5, w3
   4de20:	mov	w2, #0x1                   	// #1
   4de24:	mov	x3, x1
   4de28:	mov	x1, #0x0                   	// #0
   4de2c:	b	4d880 <mpfr_y1@@Base+0x10>

000000000004de30 <mpfr_fmodquo@@Base>:
   4de30:	mov	x6, x3
   4de34:	mov	w5, w4
   4de38:	mov	x3, x2
   4de3c:	mov	x4, x6
   4de40:	mov	w2, #0x1                   	// #1
   4de44:	b	4d880 <mpfr_y1@@Base+0x10>

000000000004de48 <mpfr_get_patches@@Base>:
   4de48:	adrp	x0, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   4de4c:	add	x0, x0, #0xd00
   4de50:	ret
   4de54:	nop

000000000004de58 <mpfr_add_d@@Base>:
   4de58:	stp	x29, x30, [sp, #-144]!
   4de5c:	mrs	x4, tpidr_el0
   4de60:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   4de64:	mov	x29, sp
   4de68:	stp	x19, x20, [sp, #16]
   4de6c:	mov	x19, x0
   4de70:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4de74:	ldr	x3, [x0, #2576]
   4de78:	add	x0, x0, #0xa10
   4de7c:	blr	x3
   4de80:	stp	x21, x22, [sp, #32]
   4de84:	mov	w20, w2
   4de88:	ldr	w21, [x4, x0]
   4de8c:	stp	x23, x24, [sp, #48]
   4de90:	add	x23, x4, x0
   4de94:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4de98:	ldr	x3, [x0, #2512]
   4de9c:	add	x0, x0, #0x9d0
   4dea0:	blr	x3
   4dea4:	stp	x25, x26, [sp, #64]
   4dea8:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   4deac:	mov	x7, #0x35                  	// #53
   4deb0:	stp	x27, x28, [sp, #80]
   4deb4:	add	x28, x4, x0
   4deb8:	mov	w6, #0x1                   	// #1
   4debc:	ldr	x25, [x4, x0]
   4dec0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4dec4:	ldr	x2, [x0, #2544]
   4dec8:	add	x0, x0, #0x9f0
   4decc:	blr	x2
   4ded0:	add	x2, sp, #0x68
   4ded4:	add	x27, x4, x0
   4ded8:	add	x22, sp, #0x70
   4dedc:	mov	x24, x1
   4dee0:	mov	w1, w20
   4dee4:	str	x5, [x28]
   4dee8:	str	x7, [sp, #112]
   4deec:	str	w6, [sp, #120]
   4def0:	str	x2, [sp, #136]
   4def4:	ldr	x26, [x4, x0]
   4def8:	mov	x0, x22
   4defc:	str	x3, [x27]
   4df00:	bl	be40 <mpfr_set_d@plt>
   4df04:	mov	x1, x24
   4df08:	mov	x2, x22
   4df0c:	mov	w3, w20
   4df10:	mov	x0, x19
   4df14:	str	wzr, [x23]
   4df18:	bl	c1a0 <mpfr_add@plt>
   4df1c:	ldr	w1, [x23]
   4df20:	ldr	x2, [x19, #16]
   4df24:	orr	w1, w21, w1
   4df28:	str	x26, [x27]
   4df2c:	str	w1, [x23]
   4df30:	cmp	x26, x2
   4df34:	str	x25, [x28]
   4df38:	ccmp	x25, x2, #0x0, ge  // ge = tcont
   4df3c:	b.le	4df6c <mpfr_add_d@@Base+0x114>
   4df40:	mov	w1, w0
   4df44:	mov	w2, w20
   4df48:	mov	x0, x19
   4df4c:	bl	cb30 <mpfr_check_range@plt>
   4df50:	ldp	x19, x20, [sp, #16]
   4df54:	ldp	x21, x22, [sp, #32]
   4df58:	ldp	x23, x24, [sp, #48]
   4df5c:	ldp	x25, x26, [sp, #64]
   4df60:	ldp	x27, x28, [sp, #80]
   4df64:	ldp	x29, x30, [sp], #144
   4df68:	ret
   4df6c:	cbz	w0, 4df50 <mpfr_add_d@@Base+0xf8>
   4df70:	orr	w1, w1, #0x8
   4df74:	str	w1, [x23]
   4df78:	ldp	x19, x20, [sp, #16]
   4df7c:	ldp	x21, x22, [sp, #32]
   4df80:	ldp	x23, x24, [sp, #48]
   4df84:	ldp	x25, x26, [sp, #64]
   4df88:	ldp	x27, x28, [sp, #80]
   4df8c:	ldp	x29, x30, [sp], #144
   4df90:	ret
   4df94:	nop

000000000004df98 <mpfr_sub_d@@Base>:
   4df98:	stp	x29, x30, [sp, #-144]!
   4df9c:	mrs	x4, tpidr_el0
   4dfa0:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   4dfa4:	mov	x29, sp
   4dfa8:	stp	x19, x20, [sp, #16]
   4dfac:	mov	x19, x0
   4dfb0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4dfb4:	ldr	x3, [x0, #2576]
   4dfb8:	add	x0, x0, #0xa10
   4dfbc:	blr	x3
   4dfc0:	stp	x21, x22, [sp, #32]
   4dfc4:	mov	w20, w2
   4dfc8:	ldr	w21, [x4, x0]
   4dfcc:	stp	x23, x24, [sp, #48]
   4dfd0:	add	x23, x4, x0
   4dfd4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4dfd8:	ldr	x3, [x0, #2512]
   4dfdc:	add	x0, x0, #0x9d0
   4dfe0:	blr	x3
   4dfe4:	stp	x25, x26, [sp, #64]
   4dfe8:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   4dfec:	mov	x7, #0x35                  	// #53
   4dff0:	stp	x27, x28, [sp, #80]
   4dff4:	add	x28, x4, x0
   4dff8:	mov	w6, #0x1                   	// #1
   4dffc:	ldr	x25, [x4, x0]
   4e000:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4e004:	ldr	x2, [x0, #2544]
   4e008:	add	x0, x0, #0x9f0
   4e00c:	blr	x2
   4e010:	add	x2, sp, #0x68
   4e014:	add	x27, x4, x0
   4e018:	add	x22, sp, #0x70
   4e01c:	mov	x24, x1
   4e020:	mov	w1, w20
   4e024:	str	x5, [x28]
   4e028:	str	x7, [sp, #112]
   4e02c:	str	w6, [sp, #120]
   4e030:	str	x2, [sp, #136]
   4e034:	ldr	x26, [x4, x0]
   4e038:	mov	x0, x22
   4e03c:	str	x3, [x27]
   4e040:	bl	be40 <mpfr_set_d@plt>
   4e044:	mov	x1, x24
   4e048:	mov	x2, x22
   4e04c:	mov	w3, w20
   4e050:	mov	x0, x19
   4e054:	str	wzr, [x23]
   4e058:	bl	bb70 <mpfr_sub@plt>
   4e05c:	ldr	w1, [x23]
   4e060:	ldr	x2, [x19, #16]
   4e064:	orr	w1, w21, w1
   4e068:	str	x26, [x27]
   4e06c:	str	w1, [x23]
   4e070:	cmp	x26, x2
   4e074:	str	x25, [x28]
   4e078:	ccmp	x25, x2, #0x0, ge  // ge = tcont
   4e07c:	b.le	4e0ac <mpfr_sub_d@@Base+0x114>
   4e080:	mov	w1, w0
   4e084:	mov	w2, w20
   4e088:	mov	x0, x19
   4e08c:	bl	cb30 <mpfr_check_range@plt>
   4e090:	ldp	x19, x20, [sp, #16]
   4e094:	ldp	x21, x22, [sp, #32]
   4e098:	ldp	x23, x24, [sp, #48]
   4e09c:	ldp	x25, x26, [sp, #64]
   4e0a0:	ldp	x27, x28, [sp, #80]
   4e0a4:	ldp	x29, x30, [sp], #144
   4e0a8:	ret
   4e0ac:	cbz	w0, 4e090 <mpfr_sub_d@@Base+0xf8>
   4e0b0:	orr	w1, w1, #0x8
   4e0b4:	str	w1, [x23]
   4e0b8:	ldp	x19, x20, [sp, #16]
   4e0bc:	ldp	x21, x22, [sp, #32]
   4e0c0:	ldp	x23, x24, [sp, #48]
   4e0c4:	ldp	x25, x26, [sp, #64]
   4e0c8:	ldp	x27, x28, [sp, #80]
   4e0cc:	ldp	x29, x30, [sp], #144
   4e0d0:	ret
   4e0d4:	nop

000000000004e0d8 <mpfr_d_sub@@Base>:
   4e0d8:	stp	x29, x30, [sp, #-144]!
   4e0dc:	mrs	x4, tpidr_el0
   4e0e0:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   4e0e4:	mov	x29, sp
   4e0e8:	stp	x19, x20, [sp, #16]
   4e0ec:	mov	x19, x0
   4e0f0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4e0f4:	ldr	x3, [x0, #2576]
   4e0f8:	add	x0, x0, #0xa10
   4e0fc:	blr	x3
   4e100:	stp	x21, x22, [sp, #32]
   4e104:	mov	w20, w2
   4e108:	ldr	w21, [x4, x0]
   4e10c:	stp	x23, x24, [sp, #48]
   4e110:	add	x23, x4, x0
   4e114:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4e118:	ldr	x3, [x0, #2512]
   4e11c:	add	x0, x0, #0x9d0
   4e120:	blr	x3
   4e124:	stp	x25, x26, [sp, #64]
   4e128:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   4e12c:	mov	x7, #0x35                  	// #53
   4e130:	stp	x27, x28, [sp, #80]
   4e134:	add	x28, x4, x0
   4e138:	mov	w6, #0x1                   	// #1
   4e13c:	ldr	x25, [x4, x0]
   4e140:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4e144:	ldr	x2, [x0, #2544]
   4e148:	add	x0, x0, #0x9f0
   4e14c:	blr	x2
   4e150:	add	x2, sp, #0x68
   4e154:	add	x27, x4, x0
   4e158:	add	x22, sp, #0x70
   4e15c:	mov	x24, x1
   4e160:	mov	w1, w20
   4e164:	str	x5, [x28]
   4e168:	str	x7, [sp, #112]
   4e16c:	str	w6, [sp, #120]
   4e170:	str	x2, [sp, #136]
   4e174:	ldr	x26, [x4, x0]
   4e178:	mov	x0, x22
   4e17c:	str	x3, [x27]
   4e180:	bl	be40 <mpfr_set_d@plt>
   4e184:	mov	x2, x24
   4e188:	mov	x1, x22
   4e18c:	mov	w3, w20
   4e190:	mov	x0, x19
   4e194:	str	wzr, [x23]
   4e198:	bl	bb70 <mpfr_sub@plt>
   4e19c:	ldr	w1, [x23]
   4e1a0:	ldr	x2, [x19, #16]
   4e1a4:	orr	w1, w21, w1
   4e1a8:	str	x26, [x27]
   4e1ac:	str	w1, [x23]
   4e1b0:	cmp	x26, x2
   4e1b4:	str	x25, [x28]
   4e1b8:	ccmp	x25, x2, #0x0, ge  // ge = tcont
   4e1bc:	b.le	4e1ec <mpfr_d_sub@@Base+0x114>
   4e1c0:	mov	w1, w0
   4e1c4:	mov	w2, w20
   4e1c8:	mov	x0, x19
   4e1cc:	bl	cb30 <mpfr_check_range@plt>
   4e1d0:	ldp	x19, x20, [sp, #16]
   4e1d4:	ldp	x21, x22, [sp, #32]
   4e1d8:	ldp	x23, x24, [sp, #48]
   4e1dc:	ldp	x25, x26, [sp, #64]
   4e1e0:	ldp	x27, x28, [sp, #80]
   4e1e4:	ldp	x29, x30, [sp], #144
   4e1e8:	ret
   4e1ec:	cbz	w0, 4e1d0 <mpfr_d_sub@@Base+0xf8>
   4e1f0:	orr	w1, w1, #0x8
   4e1f4:	str	w1, [x23]
   4e1f8:	ldp	x19, x20, [sp, #16]
   4e1fc:	ldp	x21, x22, [sp, #32]
   4e200:	ldp	x23, x24, [sp, #48]
   4e204:	ldp	x25, x26, [sp, #64]
   4e208:	ldp	x27, x28, [sp, #80]
   4e20c:	ldp	x29, x30, [sp], #144
   4e210:	ret
   4e214:	nop

000000000004e218 <mpfr_mul_d@@Base>:
   4e218:	stp	x29, x30, [sp, #-144]!
   4e21c:	mrs	x4, tpidr_el0
   4e220:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   4e224:	mov	x29, sp
   4e228:	stp	x19, x20, [sp, #16]
   4e22c:	mov	x19, x0
   4e230:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4e234:	ldr	x3, [x0, #2576]
   4e238:	add	x0, x0, #0xa10
   4e23c:	blr	x3
   4e240:	stp	x21, x22, [sp, #32]
   4e244:	mov	w20, w2
   4e248:	ldr	w21, [x4, x0]
   4e24c:	stp	x23, x24, [sp, #48]
   4e250:	add	x23, x4, x0
   4e254:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4e258:	ldr	x3, [x0, #2512]
   4e25c:	add	x0, x0, #0x9d0
   4e260:	blr	x3
   4e264:	stp	x25, x26, [sp, #64]
   4e268:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   4e26c:	mov	x7, #0x35                  	// #53
   4e270:	stp	x27, x28, [sp, #80]
   4e274:	add	x28, x4, x0
   4e278:	mov	w6, #0x1                   	// #1
   4e27c:	ldr	x25, [x4, x0]
   4e280:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4e284:	ldr	x2, [x0, #2544]
   4e288:	add	x0, x0, #0x9f0
   4e28c:	blr	x2
   4e290:	add	x2, sp, #0x68
   4e294:	add	x27, x4, x0
   4e298:	add	x22, sp, #0x70
   4e29c:	mov	x24, x1
   4e2a0:	mov	w1, w20
   4e2a4:	str	x5, [x28]
   4e2a8:	str	x7, [sp, #112]
   4e2ac:	str	w6, [sp, #120]
   4e2b0:	str	x2, [sp, #136]
   4e2b4:	ldr	x26, [x4, x0]
   4e2b8:	mov	x0, x22
   4e2bc:	str	x3, [x27]
   4e2c0:	bl	be40 <mpfr_set_d@plt>
   4e2c4:	mov	x1, x24
   4e2c8:	mov	x2, x22
   4e2cc:	mov	w3, w20
   4e2d0:	mov	x0, x19
   4e2d4:	str	wzr, [x23]
   4e2d8:	bl	bd50 <mpfr_mul@plt>
   4e2dc:	ldr	w1, [x23]
   4e2e0:	ldr	x2, [x19, #16]
   4e2e4:	orr	w1, w21, w1
   4e2e8:	str	x26, [x27]
   4e2ec:	str	w1, [x23]
   4e2f0:	cmp	x26, x2
   4e2f4:	str	x25, [x28]
   4e2f8:	ccmp	x25, x2, #0x0, ge  // ge = tcont
   4e2fc:	b.le	4e32c <mpfr_mul_d@@Base+0x114>
   4e300:	mov	w1, w0
   4e304:	mov	w2, w20
   4e308:	mov	x0, x19
   4e30c:	bl	cb30 <mpfr_check_range@plt>
   4e310:	ldp	x19, x20, [sp, #16]
   4e314:	ldp	x21, x22, [sp, #32]
   4e318:	ldp	x23, x24, [sp, #48]
   4e31c:	ldp	x25, x26, [sp, #64]
   4e320:	ldp	x27, x28, [sp, #80]
   4e324:	ldp	x29, x30, [sp], #144
   4e328:	ret
   4e32c:	cbz	w0, 4e310 <mpfr_mul_d@@Base+0xf8>
   4e330:	orr	w1, w1, #0x8
   4e334:	str	w1, [x23]
   4e338:	ldp	x19, x20, [sp, #16]
   4e33c:	ldp	x21, x22, [sp, #32]
   4e340:	ldp	x23, x24, [sp, #48]
   4e344:	ldp	x25, x26, [sp, #64]
   4e348:	ldp	x27, x28, [sp, #80]
   4e34c:	ldp	x29, x30, [sp], #144
   4e350:	ret
   4e354:	nop

000000000004e358 <mpfr_div_d@@Base>:
   4e358:	stp	x29, x30, [sp, #-144]!
   4e35c:	mrs	x4, tpidr_el0
   4e360:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   4e364:	mov	x29, sp
   4e368:	stp	x19, x20, [sp, #16]
   4e36c:	mov	x19, x0
   4e370:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4e374:	ldr	x3, [x0, #2576]
   4e378:	add	x0, x0, #0xa10
   4e37c:	blr	x3
   4e380:	stp	x21, x22, [sp, #32]
   4e384:	mov	w20, w2
   4e388:	ldr	w21, [x4, x0]
   4e38c:	stp	x23, x24, [sp, #48]
   4e390:	add	x23, x4, x0
   4e394:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4e398:	ldr	x3, [x0, #2512]
   4e39c:	add	x0, x0, #0x9d0
   4e3a0:	blr	x3
   4e3a4:	stp	x25, x26, [sp, #64]
   4e3a8:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   4e3ac:	mov	x7, #0x35                  	// #53
   4e3b0:	stp	x27, x28, [sp, #80]
   4e3b4:	add	x28, x4, x0
   4e3b8:	mov	w6, #0x1                   	// #1
   4e3bc:	ldr	x25, [x4, x0]
   4e3c0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4e3c4:	ldr	x2, [x0, #2544]
   4e3c8:	add	x0, x0, #0x9f0
   4e3cc:	blr	x2
   4e3d0:	add	x2, sp, #0x68
   4e3d4:	add	x27, x4, x0
   4e3d8:	add	x22, sp, #0x70
   4e3dc:	mov	x24, x1
   4e3e0:	mov	w1, w20
   4e3e4:	str	x5, [x28]
   4e3e8:	str	x7, [sp, #112]
   4e3ec:	str	w6, [sp, #120]
   4e3f0:	str	x2, [sp, #136]
   4e3f4:	ldr	x26, [x4, x0]
   4e3f8:	mov	x0, x22
   4e3fc:	str	x3, [x27]
   4e400:	bl	be40 <mpfr_set_d@plt>
   4e404:	mov	x1, x24
   4e408:	mov	x2, x22
   4e40c:	mov	w3, w20
   4e410:	mov	x0, x19
   4e414:	str	wzr, [x23]
   4e418:	bl	c620 <mpfr_div@plt>
   4e41c:	ldr	w1, [x23]
   4e420:	ldr	x2, [x19, #16]
   4e424:	orr	w1, w21, w1
   4e428:	str	x26, [x27]
   4e42c:	str	w1, [x23]
   4e430:	cmp	x26, x2
   4e434:	str	x25, [x28]
   4e438:	ccmp	x25, x2, #0x0, ge  // ge = tcont
   4e43c:	b.le	4e46c <mpfr_div_d@@Base+0x114>
   4e440:	mov	w1, w0
   4e444:	mov	w2, w20
   4e448:	mov	x0, x19
   4e44c:	bl	cb30 <mpfr_check_range@plt>
   4e450:	ldp	x19, x20, [sp, #16]
   4e454:	ldp	x21, x22, [sp, #32]
   4e458:	ldp	x23, x24, [sp, #48]
   4e45c:	ldp	x25, x26, [sp, #64]
   4e460:	ldp	x27, x28, [sp, #80]
   4e464:	ldp	x29, x30, [sp], #144
   4e468:	ret
   4e46c:	cbz	w0, 4e450 <mpfr_div_d@@Base+0xf8>
   4e470:	orr	w1, w1, #0x8
   4e474:	str	w1, [x23]
   4e478:	ldp	x19, x20, [sp, #16]
   4e47c:	ldp	x21, x22, [sp, #32]
   4e480:	ldp	x23, x24, [sp, #48]
   4e484:	ldp	x25, x26, [sp, #64]
   4e488:	ldp	x27, x28, [sp, #80]
   4e48c:	ldp	x29, x30, [sp], #144
   4e490:	ret
   4e494:	nop

000000000004e498 <mpfr_d_div@@Base>:
   4e498:	stp	x29, x30, [sp, #-144]!
   4e49c:	mrs	x4, tpidr_el0
   4e4a0:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   4e4a4:	mov	x29, sp
   4e4a8:	stp	x19, x20, [sp, #16]
   4e4ac:	mov	x19, x0
   4e4b0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4e4b4:	ldr	x3, [x0, #2576]
   4e4b8:	add	x0, x0, #0xa10
   4e4bc:	blr	x3
   4e4c0:	stp	x21, x22, [sp, #32]
   4e4c4:	mov	w20, w2
   4e4c8:	ldr	w21, [x4, x0]
   4e4cc:	stp	x23, x24, [sp, #48]
   4e4d0:	add	x23, x4, x0
   4e4d4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4e4d8:	ldr	x3, [x0, #2512]
   4e4dc:	add	x0, x0, #0x9d0
   4e4e0:	blr	x3
   4e4e4:	stp	x25, x26, [sp, #64]
   4e4e8:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   4e4ec:	mov	x7, #0x35                  	// #53
   4e4f0:	stp	x27, x28, [sp, #80]
   4e4f4:	add	x28, x4, x0
   4e4f8:	mov	w6, #0x1                   	// #1
   4e4fc:	ldr	x25, [x4, x0]
   4e500:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4e504:	ldr	x2, [x0, #2544]
   4e508:	add	x0, x0, #0x9f0
   4e50c:	blr	x2
   4e510:	add	x2, sp, #0x68
   4e514:	add	x27, x4, x0
   4e518:	add	x22, sp, #0x70
   4e51c:	mov	x24, x1
   4e520:	mov	w1, w20
   4e524:	str	x5, [x28]
   4e528:	str	x7, [sp, #112]
   4e52c:	str	w6, [sp, #120]
   4e530:	str	x2, [sp, #136]
   4e534:	ldr	x26, [x4, x0]
   4e538:	mov	x0, x22
   4e53c:	str	x3, [x27]
   4e540:	bl	be40 <mpfr_set_d@plt>
   4e544:	mov	x2, x24
   4e548:	mov	x1, x22
   4e54c:	mov	w3, w20
   4e550:	mov	x0, x19
   4e554:	str	wzr, [x23]
   4e558:	bl	c620 <mpfr_div@plt>
   4e55c:	ldr	w1, [x23]
   4e560:	ldr	x2, [x19, #16]
   4e564:	orr	w1, w21, w1
   4e568:	str	x26, [x27]
   4e56c:	str	w1, [x23]
   4e570:	cmp	x26, x2
   4e574:	str	x25, [x28]
   4e578:	ccmp	x25, x2, #0x0, ge  // ge = tcont
   4e57c:	b.le	4e5ac <mpfr_d_div@@Base+0x114>
   4e580:	mov	w1, w0
   4e584:	mov	w2, w20
   4e588:	mov	x0, x19
   4e58c:	bl	cb30 <mpfr_check_range@plt>
   4e590:	ldp	x19, x20, [sp, #16]
   4e594:	ldp	x21, x22, [sp, #32]
   4e598:	ldp	x23, x24, [sp, #48]
   4e59c:	ldp	x25, x26, [sp, #64]
   4e5a0:	ldp	x27, x28, [sp, #80]
   4e5a4:	ldp	x29, x30, [sp], #144
   4e5a8:	ret
   4e5ac:	cbz	w0, 4e590 <mpfr_d_div@@Base+0xf8>
   4e5b0:	orr	w1, w1, #0x8
   4e5b4:	str	w1, [x23]
   4e5b8:	ldp	x19, x20, [sp, #16]
   4e5bc:	ldp	x21, x22, [sp, #32]
   4e5c0:	ldp	x23, x24, [sp, #48]
   4e5c4:	ldp	x25, x26, [sp, #64]
   4e5c8:	ldp	x27, x28, [sp, #80]
   4e5cc:	ldp	x29, x30, [sp], #144
   4e5d0:	ret
   4e5d4:	nop
   4e5d8:	stp	x29, x30, [sp, #-272]!
   4e5dc:	mov	x29, sp
   4e5e0:	str	x0, [sp, #136]
   4e5e4:	ldr	x0, [x0]
   4e5e8:	stp	x19, x20, [sp, #16]
   4e5ec:	stp	x21, x22, [sp, #32]
   4e5f0:	cmp	x0, #0x1
   4e5f4:	stp	x23, x24, [sp, #48]
   4e5f8:	stp	x25, x26, [sp, #64]
   4e5fc:	stp	x27, x28, [sp, #80]
   4e600:	str	x1, [sp, #112]
   4e604:	str	x0, [sp, #120]
   4e608:	str	w2, [sp, #132]
   4e60c:	b.eq	4e8d0 <mpfr_d_div@@Base+0x438>  // b.none
   4e610:	b.le	4e8d8 <mpfr_d_div@@Base+0x440>
   4e614:	ldr	x1, [sp, #120]
   4e618:	mov	w22, #0x40                  	// #64
   4e61c:	sub	x0, x1, #0x1
   4e620:	clz	x0, x0
   4e624:	sub	w22, w22, w0
   4e628:	add	x22, x1, w22, sxtw
   4e62c:	add	x22, x22, #0x4
   4e630:	add	x20, sp, #0x90
   4e634:	mov	x1, x22
   4e638:	mov	x0, x20
   4e63c:	add	x24, sp, #0xb0
   4e640:	bl	ca80 <mpfr_init2@plt>
   4e644:	mov	x1, x22
   4e648:	mov	x0, x24
   4e64c:	bl	ca80 <mpfr_init2@plt>
   4e650:	add	x28, sp, #0xd0
   4e654:	mov	x0, #0x40                  	// #64
   4e658:	mov	x1, x22
   4e65c:	add	x21, sp, #0xf0
   4e660:	str	x0, [sp, #104]
   4e664:	mov	x0, x28
   4e668:	bl	ca80 <mpfr_init2@plt>
   4e66c:	mov	x1, x22
   4e670:	mov	x0, x21
   4e674:	bl	ca80 <mpfr_init2@plt>
   4e678:	ldr	x23, [sp, #112]
   4e67c:	mov	w2, #0x2                   	// #2
   4e680:	mov	x0, x24
   4e684:	mov	x27, #0x1                   	// #1
   4e688:	mov	x1, x23
   4e68c:	bl	c400 <mpfr_sqr@plt>
   4e690:	ldr	w3, [x23, #8]
   4e694:	mov	x1, x23
   4e698:	mov	w2, #0x2                   	// #2
   4e69c:	mov	x0, x28
   4e6a0:	mov	x19, #0x2                   	// #2
   4e6a4:	mov	x25, #0x0                   	// #0
   4e6a8:	bl	c6a0 <mpfr_set4@plt>
   4e6ac:	ldr	w3, [x23, #8]
   4e6b0:	mov	x1, x23
   4e6b4:	mov	x0, x20
   4e6b8:	mov	w2, #0x2                   	// #2
   4e6bc:	bl	c6a0 <mpfr_set4@plt>
   4e6c0:	ldr	x26, [sp, #160]
   4e6c4:	nop
   4e6c8:	mov	x2, x28
   4e6cc:	mov	x1, x24
   4e6d0:	mov	w3, #0x2                   	// #2
   4e6d4:	mov	x0, x28
   4e6d8:	bl	bd50 <mpfr_mul@plt>
   4e6dc:	mov	x2, x19
   4e6e0:	mov	x1, x28
   4e6e4:	mov	w3, #0x2                   	// #2
   4e6e8:	mov	x0, x28
   4e6ec:	bl	cc60 <mpfr_div_ui@plt>
   4e6f0:	add	x23, x19, #0x1
   4e6f4:	mov	x2, x19
   4e6f8:	mov	x1, x28
   4e6fc:	mov	w3, #0x2                   	// #2
   4e700:	mov	x0, x28
   4e704:	bl	cc60 <mpfr_div_ui@plt>
   4e708:	str	w27, [sp, #100]
   4e70c:	mov	x2, x23
   4e710:	mov	x1, x28
   4e714:	mov	w3, #0x2                   	// #2
   4e718:	mov	x0, x28
   4e71c:	bl	cc60 <mpfr_div_ui@plt>
   4e720:	str	w19, [sp, #128]
   4e724:	mov	x2, x23
   4e728:	mov	x1, x28
   4e72c:	mov	w3, #0x2                   	// #2
   4e730:	mov	x0, x28
   4e734:	bl	cc60 <mpfr_div_ui@plt>
   4e738:	add	x19, x19, #0x2
   4e73c:	mov	x0, x27
   4e740:	bl	c830 <mpfr_bernoulli_cache@plt>
   4e744:	mov	x1, x28
   4e748:	mov	x2, x0
   4e74c:	mov	w3, #0x0                   	// #0
   4e750:	mov	x0, x21
   4e754:	bl	c4d0 <mpfr_mul_z@plt>
   4e758:	mov	x2, x21
   4e75c:	mov	x1, x20
   4e760:	mov	x0, x20
   4e764:	mov	w3, #0x0                   	// #0
   4e768:	bl	c1a0 <mpfr_add@plt>
   4e76c:	ldr	x1, [sp, #256]
   4e770:	add	x0, x27, x27, lsl #2
   4e774:	add	x0, x0, #0x8
   4e778:	add	x2, x26, x25
   4e77c:	add	x0, x0, x1
   4e780:	add	x27, x27, #0x1
   4e784:	ldr	x26, [sp, #160]
   4e788:	cmp	x0, x2
   4e78c:	csel	x0, x0, x2, ge  // ge = tcont
   4e790:	subs	x0, x0, x26
   4e794:	sub	x2, x26, x22
   4e798:	csinv	x0, x0, xzr, pl  // pl = nfrst
   4e79c:	cmp	x1, x2
   4e7a0:	add	x25, x0, #0x2
   4e7a4:	b.gt	4e6c8 <mpfr_d_div@@Base+0x230>
   4e7a8:	ldr	w1, [sp, #100]
   4e7ac:	add	x0, x0, #0x3
   4e7b0:	add	w23, w1, w1, lsl #1
   4e7b4:	ldr	x1, [sp, #112]
   4e7b8:	lsl	w23, w23, #1
   4e7bc:	ldr	x2, [x1, #16]
   4e7c0:	sub	x23, x2, w23, sxtw
   4e7c4:	sub	x23, x23, #0x4
   4e7c8:	cmp	x23, x25
   4e7cc:	csel	x23, x0, x23, le
   4e7d0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4e7d4:	cmp	x26, x0
   4e7d8:	b.le	4e80c <mpfr_d_div@@Base+0x374>
   4e7dc:	ldr	w0, [sp, #132]
   4e7e0:	sub	x2, x22, x23
   4e7e4:	ldr	x1, [sp, #144]
   4e7e8:	cmp	w0, #0x0
   4e7ec:	ldr	x0, [sp, #168]
   4e7f0:	sub	x1, x1, #0x1
   4e7f4:	ldr	x3, [sp, #120]
   4e7f8:	asr	x1, x1, #6
   4e7fc:	add	x1, x1, #0x1
   4e800:	cinc	x3, x3, eq  // eq = none
   4e804:	bl	c370 <mpfr_round_p@plt>
   4e808:	cbnz	w0, 4e884 <mpfr_d_div@@Base+0x3ec>
   4e80c:	ldr	x1, [sp, #104]
   4e810:	mov	x0, #0xfffffffffffffeff    	// #-257
   4e814:	movk	x0, #0x7fff, lsl #48
   4e818:	sub	x0, x0, x22
   4e81c:	cmp	x0, x1
   4e820:	b.lt	4e86c <mpfr_d_div@@Base+0x3d4>  // b.tstop
   4e824:	ldr	x0, [sp, #104]
   4e828:	add	x22, x22, x0
   4e82c:	mov	x0, x20
   4e830:	mov	x1, x22
   4e834:	add	x2, x22, x22, lsr #63
   4e838:	asr	x2, x2, #1
   4e83c:	str	x2, [sp, #104]
   4e840:	bl	bed0 <mpfr_set_prec@plt>
   4e844:	mov	x1, x22
   4e848:	mov	x0, x24
   4e84c:	bl	bed0 <mpfr_set_prec@plt>
   4e850:	mov	x1, x22
   4e854:	mov	x0, x28
   4e858:	bl	bed0 <mpfr_set_prec@plt>
   4e85c:	mov	x1, x22
   4e860:	mov	x0, x21
   4e864:	bl	bed0 <mpfr_set_prec@plt>
   4e868:	b	4e678 <mpfr_d_div@@Base+0x1e0>
   4e86c:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   4e870:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4e874:	add	x2, x2, #0xc08
   4e878:	add	x0, x0, #0xc20
   4e87c:	mov	w1, #0x5e                  	// #94
   4e880:	bl	cb40 <mpfr_assert_fail@plt>
   4e884:	ldr	w2, [sp, #132]
   4e888:	mov	x1, x20
   4e88c:	ldr	w3, [sp, #152]
   4e890:	ldr	x0, [sp, #136]
   4e894:	bl	c6a0 <mpfr_set4@plt>
   4e898:	mov	x3, x21
   4e89c:	mov	x2, x28
   4e8a0:	mov	x1, x24
   4e8a4:	mov	x0, x20
   4e8a8:	mov	x4, #0x0                   	// #0
   4e8ac:	bl	c1b0 <mpfr_clears@plt>
   4e8b0:	ldr	w0, [sp, #128]
   4e8b4:	ldp	x19, x20, [sp, #16]
   4e8b8:	ldp	x21, x22, [sp, #32]
   4e8bc:	ldp	x23, x24, [sp, #48]
   4e8c0:	ldp	x25, x26, [sp, #64]
   4e8c4:	ldp	x27, x28, [sp, #80]
   4e8c8:	ldp	x29, x30, [sp], #272
   4e8cc:	ret
   4e8d0:	ldr	x22, [sp, #120]
   4e8d4:	b	4e62c <mpfr_d_div@@Base+0x194>
   4e8d8:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4e8dc:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4e8e0:	add	x2, x2, #0xc10
   4e8e4:	add	x0, x0, #0xc20
   4e8e8:	mov	w1, #0x31                  	// #49
   4e8ec:	bl	cb40 <mpfr_assert_fail@plt>

000000000004e8f0 <mpfr_li2@@Base>:
   4e8f0:	stp	x29, x30, [sp, #-336]!
   4e8f4:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
   4e8f8:	mov	x29, sp
   4e8fc:	stp	x25, x26, [sp, #64]
   4e900:	mov	w26, w2
   4e904:	ldr	x2, [x1, #16]
   4e908:	stp	x21, x22, [sp, #32]
   4e90c:	stp	x23, x24, [sp, #48]
   4e910:	cmp	x2, x3
   4e914:	mov	x23, x1
   4e918:	str	x0, [sp, #104]
   4e91c:	b.le	4eeac <mpfr_li2@@Base+0x5bc>
   4e920:	ldr	x4, [sp, #104]
   4e924:	ldr	w3, [x1, #8]
   4e928:	ldr	x4, [x4]
   4e92c:	str	x4, [sp, #96]
   4e930:	cmp	w3, #0x0
   4e934:	b.le	4ed84 <mpfr_li2@@Base+0x494>
   4e938:	tbnz	x2, #63, 4ed48 <mpfr_li2@@Base+0x458>
   4e93c:	stp	x19, x20, [sp, #16]
   4e940:	stp	x27, x28, [sp, #80]
   4e944:	mrs	x4, tpidr_el0
   4e948:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4e94c:	ldr	x1, [x0, #2576]
   4e950:	add	x0, x0, #0xa10
   4e954:	blr	x1
   4e958:	mov	x3, #0xc000000000000001    	// #-4611686018427387903
   4e95c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   4e960:	str	x4, [sp, #112]
   4e964:	ldr	w0, [x4, x0]
   4e968:	str	w0, [sp, #168]
   4e96c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4e970:	ldr	x2, [x0, #2512]
   4e974:	add	x0, x0, #0x9d0
   4e978:	blr	x2
   4e97c:	add	x2, x4, x0
   4e980:	ldr	x0, [x4, x0]
   4e984:	str	x0, [sp, #120]
   4e988:	str	x3, [x2]
   4e98c:	ldr	x2, [sp, #96]
   4e990:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4e994:	ldr	x5, [x0, #2544]
   4e998:	add	x0, x0, #0x9f0
   4e99c:	blr	x5
   4e9a0:	cmp	x2, #0x1
   4e9a4:	ldr	x2, [x4, x0]
   4e9a8:	str	x1, [x4, x0]
   4e9ac:	str	x2, [sp, #128]
   4e9b0:	b.eq	4eee0 <mpfr_li2@@Base+0x5f0>  // b.none
   4e9b4:	b.le	50384 <mpfr_li2@@Base+0x1a94>
   4e9b8:	ldr	x1, [sp, #96]
   4e9bc:	mov	w19, #0x40                  	// #64
   4e9c0:	sub	x0, x1, #0x1
   4e9c4:	clz	x0, x0
   4e9c8:	sub	w19, w19, w0
   4e9cc:	add	x19, x1, w19, sxtw
   4e9d0:	mov	x0, x23
   4e9d4:	add	x19, x19, #0xd
   4e9d8:	bl	c710 <mpfr_sgn@plt>
   4e9dc:	cmp	w0, #0x0
   4e9e0:	b.le	4edb8 <mpfr_li2@@Base+0x4c8>
   4e9e4:	mov	x0, x23
   4e9e8:	mov	x2, #0xffffffffffffffff    	// #-1
   4e9ec:	mov	x1, #0x1                   	// #1
   4e9f0:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4e9f4:	cmp	w0, #0x0
   4e9f8:	b.gt	4edb8 <mpfr_li2@@Base+0x4c8>
   4e9fc:	add	x28, sp, #0x130
   4ea00:	mov	x1, x19
   4ea04:	mov	x0, x28
   4ea08:	add	x21, sp, #0x110
   4ea0c:	bl	ca80 <mpfr_init2@plt>
   4ea10:	mov	x25, #0xfffffffffffffeff    	// #-257
   4ea14:	mov	x0, x21
   4ea18:	mov	x1, x19
   4ea1c:	mov	x20, #0x40                  	// #64
   4ea20:	mov	x24, #0x8000000000000001    	// #-9223372036854775807
   4ea24:	movk	x25, #0x7fff, lsl #48
   4ea28:	bl	ca80 <mpfr_init2@plt>
   4ea2c:	b	4ea54 <mpfr_li2@@Base+0x164>
   4ea30:	add	x19, x19, x20
   4ea34:	mov	x0, x28
   4ea38:	mov	x1, x19
   4ea3c:	bl	bed0 <mpfr_set_prec@plt>
   4ea40:	add	x20, x19, x19, lsr #63
   4ea44:	mov	x1, x19
   4ea48:	mov	x0, x21
   4ea4c:	asr	x20, x20, #1
   4ea50:	bl	bed0 <mpfr_set_prec@plt>
   4ea54:	mov	w3, #0x0                   	// #0
   4ea58:	mov	x2, x23
   4ea5c:	mov	x1, #0x1                   	// #1
   4ea60:	mov	x0, x28
   4ea64:	bl	ca50 <mpfr_ui_sub@plt>
   4ea68:	mov	x1, x28
   4ea6c:	mov	x0, x28
   4ea70:	mov	w2, #0x2                   	// #2
   4ea74:	bl	c090 <mpfr_log@plt>
   4ea78:	ldr	x0, [sp, #320]
   4ea7c:	cmp	x0, x24
   4ea80:	b.eq	4eb58 <mpfr_li2@@Base+0x268>  // b.none
   4ea84:	mov	x1, x28
   4ea88:	mov	w2, #0x0                   	// #0
   4ea8c:	mov	x0, x28
   4ea90:	bl	bd70 <mpfr_neg@plt>
   4ea94:	mov	x1, x28
   4ea98:	mov	x0, x21
   4ea9c:	mov	w2, #0x2                   	// #2
   4eaa0:	ldr	x27, [sp, #320]
   4eaa4:	bl	4e5d8 <mpfr_d_div@@Base+0x140>
   4eaa8:	cmp	w0, #0x0
   4eaac:	cbz	w0, 4eb7c <mpfr_li2@@Base+0x28c>
   4eab0:	b.le	4eb84 <mpfr_li2@@Base+0x294>
   4eab4:	sxtw	x0, w0
   4eab8:	mov	w4, #0x41                  	// #65
   4eabc:	clz	x0, x0
   4eac0:	sub	w4, w4, w0
   4eac4:	sxtw	x22, w4
   4eac8:	mov	x1, x28
   4eacc:	mov	w2, #0x2                   	// #2
   4ead0:	mov	x0, x28
   4ead4:	bl	c400 <mpfr_sqr@plt>
   4ead8:	mov	x1, x28
   4eadc:	mov	w3, #0x2                   	// #2
   4eae0:	mov	x2, #0x2                   	// #2
   4eae4:	mov	x0, x28
   4eae8:	bl	c8f0 <mpfr_div_2ui@plt>
   4eaec:	mov	x1, x21
   4eaf0:	mov	x2, x28
   4eaf4:	mov	x0, x21
   4eaf8:	mov	w3, #0x0                   	// #0
   4eafc:	bl	bb70 <mpfr_sub@plt>
   4eb00:	ldr	x0, [sp, #288]
   4eb04:	cmp	x27, #0x0
   4eb08:	csinv	x27, xzr, x27, ge  // ge = tcont
   4eb0c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4eb10:	cmp	x0, x1
   4eb14:	b.le	4eb58 <mpfr_li2@@Base+0x268>
   4eb18:	cmp	x22, x27
   4eb1c:	ldr	x1, [sp, #272]
   4eb20:	csel	x2, x22, x27, ge  // ge = tcont
   4eb24:	subs	x2, x2, x0
   4eb28:	ldr	x0, [sp, #296]
   4eb2c:	csinv	x2, x2, xzr, pl  // pl = nfrst
   4eb30:	sub	x1, x1, #0x1
   4eb34:	cmp	w26, #0x0
   4eb38:	ldr	x3, [sp, #96]
   4eb3c:	add	x2, x2, #0x2
   4eb40:	asr	x1, x1, #6
   4eb44:	sub	x2, x19, x2
   4eb48:	cinc	x3, x3, eq  // eq = none
   4eb4c:	add	x1, x1, #0x1
   4eb50:	bl	c370 <mpfr_round_p@plt>
   4eb54:	cbnz	w0, 4eb9c <mpfr_li2@@Base+0x2ac>
   4eb58:	sub	x0, x25, x19
   4eb5c:	cmp	x0, x20
   4eb60:	b.ge	4ea30 <mpfr_li2@@Base+0x140>  // b.tcont
   4eb64:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   4eb68:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4eb6c:	add	x2, x2, #0xab0
   4eb70:	add	x0, x0, #0xc20
   4eb74:	mov	w1, #0x12a                 	// #298
   4eb78:	bl	cb40 <mpfr_assert_fail@plt>
   4eb7c:	mov	x22, #0x1                   	// #1
   4eb80:	b	4eac8 <mpfr_li2@@Base+0x1d8>
   4eb84:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4eb88:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4eb8c:	add	x2, x2, #0xc38
   4eb90:	add	x0, x0, #0xc20
   4eb94:	mov	w1, #0x11c                 	// #284
   4eb98:	bl	cb40 <mpfr_assert_fail@plt>
   4eb9c:	ldr	w3, [sp, #280]
   4eba0:	mov	w2, w26
   4eba4:	ldr	x19, [sp, #104]
   4eba8:	mov	x1, x21
   4ebac:	mov	x0, x19
   4ebb0:	bl	c6a0 <mpfr_set4@plt>
   4ebb4:	mov	w22, w0
   4ebb8:	mov	x0, x28
   4ebbc:	bl	c070 <mpfr_clear@plt>
   4ebc0:	mov	x0, x21
   4ebc4:	bl	c070 <mpfr_clear@plt>
   4ebc8:	ldr	x3, [sp, #112]
   4ebcc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4ebd0:	ldr	x2, [x0, #2576]
   4ebd4:	add	x0, x0, #0xa10
   4ebd8:	blr	x2
   4ebdc:	ldr	w2, [sp, #168]
   4ebe0:	str	w2, [x3, x0]
   4ebe4:	add	x2, x3, x0
   4ebe8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4ebec:	ldr	x4, [x0, #2512]
   4ebf0:	add	x0, x0, #0x9d0
   4ebf4:	blr	x4
   4ebf8:	ldr	x4, [sp, #120]
   4ebfc:	str	x4, [x3, x0]
   4ec00:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4ec04:	ldr	x5, [x0, #2544]
   4ec08:	add	x0, x0, #0x9f0
   4ec0c:	blr	x5
   4ec10:	ldr	x1, [x19, #16]
   4ec14:	ldr	x5, [sp, #128]
   4ec18:	str	x5, [x3, x0]
   4ec1c:	cmp	x5, x1
   4ec20:	ccmp	x4, x1, #0x0, ge  // ge = tcont
   4ec24:	b.le	4ecf8 <mpfr_li2@@Base+0x408>
   4ec28:	ldr	x0, [sp, #104]
   4ec2c:	mov	w1, w22
   4ec30:	mov	w2, w26
   4ec34:	bl	cb30 <mpfr_check_range@plt>
   4ec38:	mov	w22, w0
   4ec3c:	ldp	x19, x20, [sp, #16]
   4ec40:	ldp	x27, x28, [sp, #80]
   4ec44:	mov	w0, w22
   4ec48:	ldp	x21, x22, [sp, #32]
   4ec4c:	ldp	x23, x24, [sp, #48]
   4ec50:	ldp	x25, x26, [sp, #64]
   4ec54:	ldp	x29, x30, [sp], #336
   4ec58:	ret
   4ec5c:	ldr	w3, [sp, #216]
   4ec60:	mov	x1, x26
   4ec64:	ldr	x19, [sp, #104]
   4ec68:	mov	x24, x26
   4ec6c:	ldr	w26, [sp, #144]
   4ec70:	mov	x0, x19
   4ec74:	mov	w2, w26
   4ec78:	bl	c6a0 <mpfr_set4@plt>
   4ec7c:	mov	x3, x28
   4ec80:	mov	w22, w0
   4ec84:	mov	x2, x21
   4ec88:	mov	x0, x24
   4ec8c:	mov	x1, x20
   4ec90:	mov	x4, #0x0                   	// #0
   4ec94:	bl	c1b0 <mpfr_clears@plt>
   4ec98:	ldr	x3, [sp, #112]
   4ec9c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4eca0:	ldr	x1, [x0, #2576]
   4eca4:	add	x0, x0, #0xa10
   4eca8:	blr	x1
   4ecac:	ldr	w1, [sp, #168]
   4ecb0:	add	x2, x3, x0
   4ecb4:	str	w1, [x3, x0]
   4ecb8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4ecbc:	ldr	x5, [x0, #2512]
   4ecc0:	add	x0, x0, #0x9d0
   4ecc4:	blr	x5
   4ecc8:	ldr	x5, [sp, #120]
   4eccc:	str	x5, [x3, x0]
   4ecd0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4ecd4:	ldr	x6, [x0, #2544]
   4ecd8:	add	x0, x0, #0x9f0
   4ecdc:	blr	x6
   4ece0:	ldr	x1, [x19, #16]
   4ece4:	ldr	x6, [sp, #128]
   4ece8:	str	x6, [x3, x0]
   4ecec:	cmp	x5, x1
   4ecf0:	ccmp	x6, x1, #0x1, le
   4ecf4:	b.lt	4f398 <mpfr_li2@@Base+0xaa8>  // b.tstop
   4ecf8:	cbz	w22, 4ed28 <mpfr_li2@@Base+0x438>
   4ecfc:	ldr	w0, [sp, #168]
   4ed00:	ldp	x19, x20, [sp, #16]
   4ed04:	orr	w0, w0, #0x8
   4ed08:	ldp	x27, x28, [sp, #80]
   4ed0c:	str	w0, [x2]
   4ed10:	mov	w0, w22
   4ed14:	ldp	x21, x22, [sp, #32]
   4ed18:	ldp	x23, x24, [sp, #48]
   4ed1c:	ldp	x25, x26, [sp, #64]
   4ed20:	ldp	x29, x30, [sp], #336
   4ed24:	ret
   4ed28:	mov	w0, w22
   4ed2c:	ldp	x19, x20, [sp, #16]
   4ed30:	ldp	x21, x22, [sp, #32]
   4ed34:	ldp	x23, x24, [sp, #48]
   4ed38:	ldp	x25, x26, [sp, #64]
   4ed3c:	ldp	x27, x28, [sp, #80]
   4ed40:	ldp	x29, x30, [sp], #336
   4ed44:	ret
   4ed48:	mov	x3, #0x1                   	// #1
   4ed4c:	add	x4, x4, x3
   4ed50:	sub	x2, x3, x2
   4ed54:	cmp	x4, x2
   4ed58:	b.cs	4e93c <mpfr_li2@@Base+0x4c>  // b.hs, b.nlast
   4ed5c:	mov	w4, w26
   4ed60:	bl	c540 <mpfr_round_near_x@plt>
   4ed64:	mov	w22, w0
   4ed68:	cbnz	w0, 4ec44 <mpfr_li2@@Base+0x354>
   4ed6c:	ldr	x0, [sp, #104]
   4ed70:	stp	x19, x20, [sp, #16]
   4ed74:	stp	x27, x28, [sp, #80]
   4ed78:	ldr	x0, [x0]
   4ed7c:	str	x0, [sp, #96]
   4ed80:	b	4e944 <mpfr_li2@@Base+0x54>
   4ed84:	tbz	x2, #63, 4e93c <mpfr_li2@@Base+0x4c>
   4ed88:	ldr	x4, [sp, #96]
   4ed8c:	mov	x3, #0x2                   	// #2
   4ed90:	sub	x2, x3, x2
   4ed94:	add	x4, x4, #0x1
   4ed98:	cmp	x4, x2
   4ed9c:	b.cs	4e93c <mpfr_li2@@Base+0x4c>  // b.hs, b.nlast
   4eda0:	mov	w4, w26
   4eda4:	mov	w3, #0x0                   	// #0
   4eda8:	bl	c540 <mpfr_round_near_x@plt>
   4edac:	mov	w22, w0
   4edb0:	cbz	w0, 4ed6c <mpfr_li2@@Base+0x47c>
   4edb4:	b	4ec44 <mpfr_li2@@Base+0x354>
   4edb8:	mov	x0, x23
   4edbc:	mov	x2, #0x0                   	// #0
   4edc0:	mov	x1, #0x1                   	// #1
   4edc4:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4edc8:	cbnz	w0, 4eee8 <mpfr_li2@@Base+0x5f8>
   4edcc:	add	x28, sp, #0x130
   4edd0:	mov	x22, #0xfffffffffffffeff    	// #-257
   4edd4:	mov	x0, x28
   4edd8:	mov	x1, x19
   4eddc:	mov	x20, #0x40                  	// #64
   4ede0:	bl	ca80 <mpfr_init2@plt>
   4ede4:	mov	x21, #0x8000000000000003    	// #-9223372036854775805
   4ede8:	movk	x22, #0x7fff, lsl #48
   4edec:	ldr	x24, [sp, #96]
   4edf0:	ldr	x23, [sp, #112]
   4edf4:	b	4ee10 <mpfr_li2@@Base+0x520>
   4edf8:	add	x19, x19, x20
   4edfc:	mov	x0, x28
   4ee00:	mov	x1, x19
   4ee04:	add	x20, x19, x19, lsr #63
   4ee08:	asr	x20, x20, #1
   4ee0c:	bl	bed0 <mpfr_set_prec@plt>
   4ee10:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4ee14:	ldr	x1, [x0, #2624]
   4ee18:	add	x0, x0, #0xa40
   4ee1c:	blr	x1
   4ee20:	mov	w2, #0x2                   	// #2
   4ee24:	add	x1, x23, x0
   4ee28:	mov	x0, x28
   4ee2c:	bl	c380 <mpfr_cache@plt>
   4ee30:	mov	x1, x28
   4ee34:	mov	w2, #0x0                   	// #0
   4ee38:	mov	x0, x28
   4ee3c:	bl	c400 <mpfr_sqr@plt>
   4ee40:	mov	x1, x28
   4ee44:	mov	x0, x28
   4ee48:	mov	w3, #0x0                   	// #0
   4ee4c:	mov	x2, #0x6                   	// #6
   4ee50:	bl	cc60 <mpfr_div_ui@plt>
   4ee54:	ldr	x0, [sp, #320]
   4ee58:	cmp	x0, x21
   4ee5c:	b.le	4ee88 <mpfr_li2@@Base+0x598>
   4ee60:	ldr	x1, [sp, #304]
   4ee64:	cmp	w26, #0x0
   4ee68:	ldr	x0, [sp, #328]
   4ee6c:	sub	x1, x1, #0x1
   4ee70:	cinc	x3, x24, eq  // eq = none
   4ee74:	sub	x2, x19, #0x4
   4ee78:	asr	x1, x1, #6
   4ee7c:	add	x1, x1, #0x1
   4ee80:	bl	c370 <mpfr_round_p@plt>
   4ee84:	cbnz	w0, 4f314 <mpfr_li2@@Base+0xa24>
   4ee88:	sub	x0, x22, x19
   4ee8c:	cmp	x0, x20
   4ee90:	b.ge	4edf8 <mpfr_li2@@Base+0x508>  // b.tcont
   4ee94:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   4ee98:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4ee9c:	add	x2, x2, #0xab0
   4eea0:	add	x0, x0, #0xc20
   4eea4:	mov	w1, #0x147                 	// #327
   4eea8:	bl	cb40 <mpfr_assert_fail@plt>
   4eeac:	mov	x0, #0x2                   	// #2
   4eeb0:	movk	x0, #0x8000, lsl #48
   4eeb4:	cmp	x2, x0
   4eeb8:	b.eq	4f758 <mpfr_li2@@Base+0xe68>  // b.none
   4eebc:	cmp	x2, x3
   4eec0:	b.eq	4f740 <mpfr_li2@@Base+0xe50>  // b.none
   4eec4:	ldr	x2, [sp, #104]
   4eec8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   4eecc:	ldr	w1, [x1, #8]
   4eed0:	mov	w22, #0x0                   	// #0
   4eed4:	str	w1, [x2, #8]
   4eed8:	str	x0, [x2, #16]
   4eedc:	b	4ec44 <mpfr_li2@@Base+0x354>
   4eee0:	ldr	x19, [sp, #96]
   4eee4:	b	4e9d0 <mpfr_li2@@Base+0xe0>
   4eee8:	mov	x2, #0x0                   	// #0
   4eeec:	mov	x0, x23
   4eef0:	mov	x1, #0x2                   	// #2
   4eef4:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4eef8:	mov	x2, #0x0                   	// #0
   4eefc:	tbnz	w0, #31, 4f3b8 <mpfr_li2@@Base+0xac8>
   4ef00:	mov	x0, x23
   4ef04:	mov	x1, #0x26                  	// #38
   4ef08:	add	x28, sp, #0x130
   4ef0c:	add	x21, sp, #0x110
   4ef10:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4ef14:	tbnz	w0, #31, 4f058 <mpfr_li2@@Base+0x768>
   4ef18:	ldr	x0, [sp, #104]
   4ef1c:	mov	x2, #0x0                   	// #0
   4ef20:	mov	x1, #0x26                  	// #38
   4ef24:	ldr	x22, [x0]
   4ef28:	mov	x0, x23
   4ef2c:	add	x20, x22, #0x14
   4ef30:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4ef34:	tbnz	w0, #31, 5018c <mpfr_li2@@Base+0x189c>
   4ef38:	add	x21, sp, #0x110
   4ef3c:	add	x28, sp, #0x130
   4ef40:	mov	x1, x20
   4ef44:	mov	x0, x21
   4ef48:	bl	ca80 <mpfr_init2@plt>
   4ef4c:	mov	x0, x28
   4ef50:	mov	x1, x20
   4ef54:	bl	ca80 <mpfr_init2@plt>
   4ef58:	mov	x1, x23
   4ef5c:	mov	w2, #0x0                   	// #0
   4ef60:	mov	x0, x21
   4ef64:	bl	c090 <mpfr_log@plt>
   4ef68:	mov	x1, x21
   4ef6c:	mov	w2, #0x0                   	// #0
   4ef70:	mov	x0, x21
   4ef74:	bl	c400 <mpfr_sqr@plt>
   4ef78:	mov	x1, x21
   4ef7c:	mov	w3, #0x0                   	// #0
   4ef80:	mov	x2, #0x1                   	// #1
   4ef84:	mov	x0, x21
   4ef88:	bl	c8f0 <mpfr_div_2ui@plt>
   4ef8c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4ef90:	ldr	x1, [x0, #2624]
   4ef94:	add	x0, x0, #0xa40
   4ef98:	blr	x1
   4ef9c:	mov	w2, #0x0                   	// #0
   4efa0:	ldr	x1, [sp, #112]
   4efa4:	add	x1, x1, x0
   4efa8:	mov	x0, x28
   4efac:	bl	c380 <mpfr_cache@plt>
   4efb0:	mov	x1, x28
   4efb4:	mov	w2, #0x0                   	// #0
   4efb8:	mov	x0, x28
   4efbc:	bl	c400 <mpfr_sqr@plt>
   4efc0:	mov	x1, x28
   4efc4:	mov	x0, x28
   4efc8:	mov	w3, #0x0                   	// #0
   4efcc:	mov	x2, #0x3                   	// #3
   4efd0:	bl	cc60 <mpfr_div_ui@plt>
   4efd4:	ldr	x1, [sp, #288]
   4efd8:	ldr	x0, [sp, #320]
   4efdc:	cmp	x1, x0
   4efe0:	b.le	50170 <mpfr_li2@@Base+0x1880>
   4efe4:	mov	x1, x28
   4efe8:	mov	x2, x21
   4efec:	mov	x0, x21
   4eff0:	mov	w3, #0x0                   	// #0
   4eff4:	bl	bb70 <mpfr_sub@plt>
   4eff8:	ldr	x0, [sp, #288]
   4effc:	ldr	x1, [x23, #16]
   4f000:	sub	x20, x20, x0
   4f004:	cmp	x1, x20
   4f008:	b.lt	4f048 <mpfr_li2@@Base+0x758>  // b.tstop
   4f00c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4f010:	cmp	x0, x1
   4f014:	b.le	4f048 <mpfr_li2@@Base+0x758>
   4f018:	ldr	x2, [sp, #104]
   4f01c:	cmp	w26, #0x0
   4f020:	ldr	x1, [sp, #272]
   4f024:	ldr	x0, [sp, #296]
   4f028:	sub	x1, x1, #0x1
   4f02c:	ldr	x3, [x2]
   4f030:	asr	x1, x1, #6
   4f034:	add	x1, x1, #0x1
   4f038:	add	x2, x22, #0x10
   4f03c:	cinc	x3, x3, eq  // eq = none
   4f040:	bl	c370 <mpfr_round_p@plt>
   4f044:	cbnz	w0, 4fcd0 <mpfr_li2@@Base+0x13e0>
   4f048:	mov	x0, x21
   4f04c:	bl	c070 <mpfr_clear@plt>
   4f050:	mov	x0, x28
   4f054:	bl	c070 <mpfr_clear@plt>
   4f058:	mov	x0, x21
   4f05c:	mov	x1, x19
   4f060:	add	x20, sp, #0xf0
   4f064:	bl	ca80 <mpfr_init2@plt>
   4f068:	mov	x0, x20
   4f06c:	mov	x1, x19
   4f070:	bl	ca80 <mpfr_init2@plt>
   4f074:	mov	x25, #0x40                  	// #64
   4f078:	mov	x1, x19
   4f07c:	mov	x0, x28
   4f080:	bl	ca80 <mpfr_init2@plt>
   4f084:	str	w26, [sp, #160]
   4f088:	mov	x26, x21
   4f08c:	mov	x21, x23
   4f090:	b	4f298 <mpfr_li2@@Base+0x9a8>
   4f094:	b.le	4f634 <mpfr_li2@@Base+0xd44>
   4f098:	clz	x22, x22
   4f09c:	mov	w0, #0x41                  	// #65
   4f0a0:	sub	w22, w0, w22
   4f0a4:	sxtw	x22, w22
   4f0a8:	mov	x1, x26
   4f0ac:	mov	w2, #0x0                   	// #0
   4f0b0:	mov	x0, x26
   4f0b4:	bl	c400 <mpfr_sqr@plt>
   4f0b8:	mov	x1, x26
   4f0bc:	mov	w3, #0x0                   	// #0
   4f0c0:	mov	x2, #0x2                   	// #2
   4f0c4:	mov	x0, x26
   4f0c8:	bl	c8f0 <mpfr_div_2ui@plt>
   4f0cc:	mov	x23, #0x3                   	// #3
   4f0d0:	mov	x2, x26
   4f0d4:	mov	x1, x20
   4f0d8:	mov	w3, #0x0                   	// #0
   4f0dc:	mov	x0, x20
   4f0e0:	bl	c1a0 <mpfr_add@plt>
   4f0e4:	ldr	x3, [sp, #288]
   4f0e8:	cmp	x24, #0x0
   4f0ec:	sub	x1, x23, x24
   4f0f0:	mov	x0, #0x4                   	// #4
   4f0f4:	csel	x0, x1, x0, lt  // lt = tstop
   4f0f8:	mov	w2, #0x2                   	// #2
   4f0fc:	mov	x1, x21
   4f100:	str	x3, [sp, #136]
   4f104:	str	x0, [sp, #152]
   4f108:	mov	x0, x26
   4f10c:	ldr	x27, [sp, #256]
   4f110:	bl	c090 <mpfr_log@plt>
   4f114:	mov	x1, x26
   4f118:	mov	w2, #0x0                   	// #0
   4f11c:	mov	x0, x26
   4f120:	bl	c400 <mpfr_sqr@plt>
   4f124:	mov	x1, x26
   4f128:	mov	w3, #0x0                   	// #0
   4f12c:	mov	x2, #0x1                   	// #1
   4f130:	mov	x0, x26
   4f134:	bl	c8f0 <mpfr_div_2ui@plt>
   4f138:	mov	x1, x20
   4f13c:	mov	x2, x26
   4f140:	mov	w3, #0x0                   	// #0
   4f144:	mov	x0, x20
   4f148:	bl	bb70 <mpfr_sub@plt>
   4f14c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4f150:	ldr	x1, [x0, #2624]
   4f154:	add	x0, x0, #0xa40
   4f158:	blr	x1
   4f15c:	mov	w2, #0x2                   	// #2
   4f160:	ldr	x3, [sp, #288]
   4f164:	str	x3, [sp, #144]
   4f168:	ldr	x1, [sp, #112]
   4f16c:	ldr	x24, [sp, #256]
   4f170:	add	x1, x1, x0
   4f174:	mov	x0, x26
   4f178:	bl	c380 <mpfr_cache@plt>
   4f17c:	mov	x1, x26
   4f180:	mov	w2, #0x0                   	// #0
   4f184:	mov	x0, x26
   4f188:	bl	c400 <mpfr_sqr@plt>
   4f18c:	mov	x2, x23
   4f190:	mov	x1, x26
   4f194:	mov	w3, #0x0                   	// #0
   4f198:	mov	x0, x26
   4f19c:	bl	cc60 <mpfr_div_ui@plt>
   4f1a0:	mov	x2, x26
   4f1a4:	mov	x1, x20
   4f1a8:	mov	x0, x20
   4f1ac:	mov	w3, #0x0                   	// #0
   4f1b0:	bl	c1a0 <mpfr_add@plt>
   4f1b4:	ldr	x2, [sp, #256]
   4f1b8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4f1bc:	cmp	x2, x0
   4f1c0:	b.le	4f254 <mpfr_li2@@Base+0x964>
   4f1c4:	ldr	x0, [sp, #136]
   4f1c8:	mov	x3, #0xffffffffffffffff    	// #-1
   4f1cc:	ldr	x1, [sp, #152]
   4f1d0:	mov	x5, #0x2                   	// #2
   4f1d4:	add	x1, x0, x1
   4f1d8:	cmp	x1, x22
   4f1dc:	csel	x1, x1, x22, ge  // ge = tcont
   4f1e0:	subs	x1, x1, x27
   4f1e4:	ldr	x0, [sp, #144]
   4f1e8:	csel	x1, x1, x3, pl  // pl = nfrst
   4f1ec:	add	x1, x1, x5
   4f1f0:	add	x1, x27, x1
   4f1f4:	add	x0, x0, #0x3
   4f1f8:	cmp	x0, x1
   4f1fc:	csel	x0, x0, x1, ge  // ge = tcont
   4f200:	subs	x0, x0, x24
   4f204:	csel	x0, x0, x3, pl  // pl = nfrst
   4f208:	add	x0, x0, x5
   4f20c:	add	x24, x24, x0
   4f210:	cmp	x24, x5
   4f214:	csel	x24, x24, x5, ge  // ge = tcont
   4f218:	ldr	x1, [sp, #240]
   4f21c:	subs	x24, x24, x2
   4f220:	ldr	w2, [sp, #160]
   4f224:	csel	x24, x24, x3, pl  // pl = nfrst
   4f228:	ldr	x0, [sp, #264]
   4f22c:	cmp	w2, #0x0
   4f230:	add	x1, x1, x3
   4f234:	add	x24, x24, x5
   4f238:	ldr	x2, [sp, #96]
   4f23c:	asr	x1, x1, #6
   4f240:	add	x1, x1, #0x1
   4f244:	cinc	x3, x2, eq  // eq = none
   4f248:	sub	x2, x19, x24
   4f24c:	bl	c370 <mpfr_round_p@plt>
   4f250:	cbnz	w0, 4f64c <mpfr_li2@@Base+0xd5c>
   4f254:	mov	x0, #0xfffffffffffffeff    	// #-257
   4f258:	movk	x0, #0x7fff, lsl #48
   4f25c:	sub	x0, x0, x19
   4f260:	cmp	x0, x25
   4f264:	b.lt	4f61c <mpfr_li2@@Base+0xd2c>  // b.tstop
   4f268:	add	x19, x19, x25
   4f26c:	mov	x0, x26
   4f270:	mov	x1, x19
   4f274:	bl	bed0 <mpfr_set_prec@plt>
   4f278:	add	x25, x19, x19, lsr #63
   4f27c:	mov	x1, x19
   4f280:	mov	x0, x20
   4f284:	bl	bed0 <mpfr_set_prec@plt>
   4f288:	asr	x25, x25, #1
   4f28c:	mov	x1, x19
   4f290:	mov	x0, x28
   4f294:	bl	bed0 <mpfr_set_prec@plt>
   4f298:	mov	w3, #0x0                   	// #0
   4f29c:	mov	x2, x21
   4f2a0:	mov	x1, #0x1                   	// #1
   4f2a4:	mov	x0, x28
   4f2a8:	bl	c2f0 <mpfr_ui_div@plt>
   4f2ac:	mov	x1, x28
   4f2b0:	mov	w2, #0x0                   	// #0
   4f2b4:	mov	x0, x28
   4f2b8:	bl	bd70 <mpfr_neg@plt>
   4f2bc:	mov	x1, x28
   4f2c0:	mov	w2, #0x3                   	// #3
   4f2c4:	mov	x0, x26
   4f2c8:	bl	c700 <mpfr_log1p@plt>
   4f2cc:	mov	x1, x26
   4f2d0:	mov	w2, #0x2                   	// #2
   4f2d4:	mov	x0, x26
   4f2d8:	bl	bd70 <mpfr_neg@plt>
   4f2dc:	mov	x1, x26
   4f2e0:	mov	w2, #0x0                   	// #0
   4f2e4:	mov	x0, x20
   4f2e8:	ldr	x24, [sp, #288]
   4f2ec:	bl	4e5d8 <mpfr_d_div@@Base+0x140>
   4f2f0:	mov	x1, x20
   4f2f4:	sxtw	x22, w0
   4f2f8:	mov	w2, #0x0                   	// #0
   4f2fc:	mov	x0, x20
   4f300:	bl	bd70 <mpfr_neg@plt>
   4f304:	cmp	w22, #0x0
   4f308:	cbnz	w22, 4f094 <mpfr_li2@@Base+0x7a4>
   4f30c:	mov	x22, #0x1                   	// #1
   4f310:	b	4f0a8 <mpfr_li2@@Base+0x7b8>
   4f314:	ldr	w3, [sp, #312]
   4f318:	mov	w2, w26
   4f31c:	ldr	x19, [sp, #104]
   4f320:	mov	x1, x28
   4f324:	mov	x0, x19
   4f328:	bl	c6a0 <mpfr_set4@plt>
   4f32c:	mov	w22, w0
   4f330:	mov	x0, x28
   4f334:	bl	c070 <mpfr_clear@plt>
   4f338:	ldr	x3, [sp, #112]
   4f33c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4f340:	ldr	x2, [x0, #2576]
   4f344:	add	x0, x0, #0xa10
   4f348:	blr	x2
   4f34c:	ldr	x1, [x19, #16]
   4f350:	ldr	w2, [sp, #168]
   4f354:	str	w2, [x3, x0]
   4f358:	add	x2, x3, x0
   4f35c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4f360:	ldr	x5, [x0, #2512]
   4f364:	add	x0, x0, #0x9d0
   4f368:	blr	x5
   4f36c:	ldr	x5, [sp, #120]
   4f370:	str	x5, [x3, x0]
   4f374:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4f378:	ldr	x6, [x0, #2544]
   4f37c:	add	x0, x0, #0x9f0
   4f380:	blr	x6
   4f384:	ldr	x6, [sp, #128]
   4f388:	str	x6, [x3, x0]
   4f38c:	cmp	x6, x1
   4f390:	ccmp	x5, x1, #0x0, ge  // ge = tcont
   4f394:	b.le	4ecf8 <mpfr_li2@@Base+0x408>
   4f398:	mov	w1, w22
   4f39c:	mov	x0, x19
   4f3a0:	mov	w2, w26
   4f3a4:	bl	cb30 <mpfr_check_range@plt>
   4f3a8:	mov	w22, w0
   4f3ac:	ldp	x19, x20, [sp, #16]
   4f3b0:	ldp	x27, x28, [sp, #80]
   4f3b4:	b	4ec44 <mpfr_li2@@Base+0x354>
   4f3b8:	mov	x0, x23
   4f3bc:	mov	x1, #0x1                   	// #1
   4f3c0:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4f3c4:	cmp	w0, #0x0
   4f3c8:	b.le	4f78c <mpfr_li2@@Base+0xe9c>
   4f3cc:	add	x24, sp, #0xd0
   4f3d0:	mov	x1, x19
   4f3d4:	mov	x0, x24
   4f3d8:	add	x20, sp, #0xf0
   4f3dc:	bl	ca80 <mpfr_init2@plt>
   4f3e0:	add	x21, sp, #0x110
   4f3e4:	mov	x0, x20
   4f3e8:	mov	x1, x19
   4f3ec:	bl	ca80 <mpfr_init2@plt>
   4f3f0:	add	x28, sp, #0x130
   4f3f4:	mov	x0, x21
   4f3f8:	mov	x1, x19
   4f3fc:	mov	x27, #0xfffffffffffffeff    	// #-257
   4f400:	bl	ca80 <mpfr_init2@plt>
   4f404:	mov	x0, x28
   4f408:	mov	x1, x19
   4f40c:	mov	x22, #0x40                  	// #64
   4f410:	bl	ca80 <mpfr_init2@plt>
   4f414:	movk	x27, #0x7fff, lsl #48
   4f418:	str	w26, [sp, #144]
   4f41c:	mov	x26, x24
   4f420:	b	4f4e8 <mpfr_li2@@Base+0xbf8>
   4f424:	b.le	4f710 <mpfr_li2@@Base+0xe20>
   4f428:	sxtw	x1, w24
   4f42c:	mov	w0, #0x41                  	// #65
   4f430:	clz	x1, x1
   4f434:	mov	x2, #0x1                   	// #1
   4f438:	sub	w0, w0, w1
   4f43c:	sub	x2, x2, x25
   4f440:	sxtw	x0, w0
   4f444:	sub	x0, x0, x7
   4f448:	cmp	x0, x2
   4f44c:	csel	x1, x0, x2, ge  // ge = tcont
   4f450:	ldr	x2, [sp, #224]
   4f454:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4f458:	cmp	x2, x0
   4f45c:	b.le	4f4a0 <mpfr_li2@@Base+0xbb0>
   4f460:	ldr	w0, [sp, #144]
   4f464:	ldr	x2, [sp, #96]
   4f468:	cmp	w0, #0x0
   4f46c:	ldr	x6, [sp, #208]
   4f470:	cinc	x3, x2, eq  // eq = none
   4f474:	ldr	x0, [sp, #232]
   4f478:	sub	x6, x6, #0x1
   4f47c:	cmp	x1, #0x5
   4f480:	mov	x2, #0x5                   	// #5
   4f484:	csel	x1, x1, x2, ge  // ge = tcont
   4f488:	add	x2, x1, #0x2
   4f48c:	asr	x1, x6, #6
   4f490:	sub	x2, x19, x2
   4f494:	add	x1, x1, #0x1
   4f498:	bl	c370 <mpfr_round_p@plt>
   4f49c:	cbnz	w0, 4ec5c <mpfr_li2@@Base+0x36c>
   4f4a0:	sub	x0, x27, x19
   4f4a4:	cmp	x0, x22
   4f4a8:	b.lt	4f728 <mpfr_li2@@Base+0xe38>  // b.tstop
   4f4ac:	add	x19, x19, x22
   4f4b0:	mov	x0, x26
   4f4b4:	mov	x1, x19
   4f4b8:	bl	bed0 <mpfr_set_prec@plt>
   4f4bc:	mov	x1, x19
   4f4c0:	mov	x0, x20
   4f4c4:	add	x22, x19, x19, lsr #63
   4f4c8:	bl	bed0 <mpfr_set_prec@plt>
   4f4cc:	mov	x1, x19
   4f4d0:	mov	x0, x21
   4f4d4:	bl	bed0 <mpfr_set_prec@plt>
   4f4d8:	asr	x22, x22, #1
   4f4dc:	mov	x1, x19
   4f4e0:	mov	x0, x28
   4f4e4:	bl	bed0 <mpfr_set_prec@plt>
   4f4e8:	mov	x1, x23
   4f4ec:	mov	w2, #0x2                   	// #2
   4f4f0:	mov	x0, x21
   4f4f4:	bl	c090 <mpfr_log@plt>
   4f4f8:	mov	x1, x21
   4f4fc:	mov	w2, #0x0                   	// #0
   4f500:	mov	x0, x26
   4f504:	bl	4e5d8 <mpfr_d_div@@Base+0x140>
   4f508:	ldr	x7, [sp, #224]
   4f50c:	mov	w24, w0
   4f510:	mov	x1, x21
   4f514:	mov	w2, #0x0                   	// #0
   4f518:	mov	x0, x20
   4f51c:	str	x7, [sp, #136]
   4f520:	bl	c400 <mpfr_sqr@plt>
   4f524:	mov	x1, x20
   4f528:	mov	w3, #0x0                   	// #0
   4f52c:	mov	x2, #0x2                   	// #2
   4f530:	mov	x0, x20
   4f534:	bl	c8f0 <mpfr_div_2ui@plt>
   4f538:	mov	x2, x20
   4f53c:	mov	x1, x26
   4f540:	mov	w3, #0x0                   	// #0
   4f544:	mov	x0, x26
   4f548:	bl	c1a0 <mpfr_add@plt>
   4f54c:	mov	w3, #0x0                   	// #0
   4f550:	mov	x1, x23
   4f554:	mov	x2, #0x1                   	// #1
   4f558:	mov	x0, x28
   4f55c:	bl	c530 <mpfr_sub_ui@plt>
   4f560:	mov	x1, x28
   4f564:	mov	w2, #0x2                   	// #2
   4f568:	mov	x0, x20
   4f56c:	bl	c090 <mpfr_log@plt>
   4f570:	mov	x2, x20
   4f574:	mov	x1, x21
   4f578:	mov	w3, #0x0                   	// #0
   4f57c:	mov	x0, x20
   4f580:	ldr	x25, [sp, #256]
   4f584:	bl	bd50 <mpfr_mul@plt>
   4f588:	mov	x1, x26
   4f58c:	mov	w3, #0x0                   	// #0
   4f590:	mov	x2, x20
   4f594:	mov	x0, x26
   4f598:	bl	bb70 <mpfr_sub@plt>
   4f59c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4f5a0:	ldr	x1, [x0, #2624]
   4f5a4:	add	x0, x0, #0xa40
   4f5a8:	blr	x1
   4f5ac:	mov	w2, #0x2                   	// #2
   4f5b0:	ldr	x1, [sp, #112]
   4f5b4:	add	x1, x1, x0
   4f5b8:	mov	x0, x20
   4f5bc:	bl	c380 <mpfr_cache@plt>
   4f5c0:	mov	x1, x20
   4f5c4:	mov	w2, #0x0                   	// #0
   4f5c8:	mov	x0, x20
   4f5cc:	bl	c400 <mpfr_sqr@plt>
   4f5d0:	mov	x1, x20
   4f5d4:	mov	w3, #0x0                   	// #0
   4f5d8:	mov	x2, #0x6                   	// #6
   4f5dc:	mov	x0, x20
   4f5e0:	bl	cc60 <mpfr_div_ui@plt>
   4f5e4:	mov	x2, x20
   4f5e8:	mov	x1, x26
   4f5ec:	mov	x0, x26
   4f5f0:	mov	w3, #0x0                   	// #0
   4f5f4:	bl	c1a0 <mpfr_add@plt>
   4f5f8:	cmp	w24, #0x0
   4f5fc:	ldr	x7, [sp, #136]
   4f600:	cbnz	w24, 4f424 <mpfr_li2@@Base+0xb34>
   4f604:	mov	x0, #0x1                   	// #1
   4f608:	cmp	x7, x25
   4f60c:	sub	x1, x0, x7
   4f610:	sub	x0, x0, x25
   4f614:	csel	x1, x0, x1, ge  // ge = tcont
   4f618:	b	4f450 <mpfr_li2@@Base+0xb60>
   4f61c:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   4f620:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4f624:	add	x2, x2, #0xab0
   4f628:	add	x0, x0, #0xc20
   4f62c:	mov	w1, #0x189                 	// #393
   4f630:	bl	cb40 <mpfr_assert_fail@plt>
   4f634:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4f638:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4f63c:	add	x2, x2, #0xc38
   4f640:	add	x0, x0, #0xc20
   4f644:	mov	w1, #0x16d                 	// #365
   4f648:	bl	cb40 <mpfr_assert_fail@plt>
   4f64c:	ldr	w3, [sp, #248]
   4f650:	mov	x21, x26
   4f654:	ldr	x19, [sp, #104]
   4f658:	mov	x1, x20
   4f65c:	ldr	w26, [sp, #160]
   4f660:	mov	x0, x19
   4f664:	mov	w2, w26
   4f668:	bl	c6a0 <mpfr_set4@plt>
   4f66c:	mov	x2, x28
   4f670:	mov	w22, w0
   4f674:	mov	x1, x21
   4f678:	mov	x0, x20
   4f67c:	mov	x3, #0x0                   	// #0
   4f680:	bl	c1b0 <mpfr_clears@plt>
   4f684:	ldr	x2, [sp, #112]
   4f688:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4f68c:	ldr	x1, [x0, #2576]
   4f690:	add	x0, x0, #0xa10
   4f694:	blr	x1
   4f698:	ldr	w1, [sp, #168]
   4f69c:	str	w1, [x2, x0]
   4f6a0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4f6a4:	ldr	x3, [x0, #2512]
   4f6a8:	add	x0, x0, #0x9d0
   4f6ac:	blr	x3
   4f6b0:	ldr	x3, [sp, #120]
   4f6b4:	str	x3, [x2, x0]
   4f6b8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4f6bc:	ldr	x4, [x0, #2544]
   4f6c0:	add	x0, x0, #0x9f0
   4f6c4:	blr	x4
   4f6c8:	ldr	x1, [x19, #16]
   4f6cc:	ldr	x4, [sp, #128]
   4f6d0:	str	x4, [x2, x0]
   4f6d4:	cmp	x4, x1
   4f6d8:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   4f6dc:	b.gt	4ec28 <mpfr_li2@@Base+0x338>
   4f6e0:	cbz	w22, 4ed28 <mpfr_li2@@Base+0x438>
   4f6e4:	ldr	w0, [sp, #168]
   4f6e8:	ldp	x19, x20, [sp, #16]
   4f6ec:	orr	w1, w0, #0x8
   4f6f0:	ldp	x27, x28, [sp, #80]
   4f6f4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4f6f8:	ldr	x2, [x0, #2576]
   4f6fc:	add	x0, x0, #0xa10
   4f700:	blr	x2
   4f704:	ldr	x2, [sp, #112]
   4f708:	str	w1, [x2, x0]
   4f70c:	b	4ec44 <mpfr_li2@@Base+0x354>
   4f710:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4f714:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4f718:	add	x2, x2, #0xc38
   4f71c:	add	x0, x0, #0xc20
   4f720:	mov	w1, #0x1b8                 	// #440
   4f724:	bl	cb40 <mpfr_assert_fail@plt>
   4f728:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   4f72c:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4f730:	add	x2, x2, #0xab0
   4f734:	add	x0, x0, #0xc20
   4f738:	mov	w1, #0x1bd                 	// #445
   4f73c:	bl	cb40 <mpfr_assert_fail@plt>
   4f740:	ldr	x1, [sp, #104]
   4f744:	mov	w0, #0xffffffff            	// #-1
   4f748:	mov	w22, #0x0                   	// #0
   4f74c:	str	w0, [x1, #8]
   4f750:	str	x2, [x1, #16]
   4f754:	b	4ec44 <mpfr_li2@@Base+0x354>
   4f758:	mrs	x1, tpidr_el0
   4f75c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4f760:	ldr	x3, [x0, #2576]
   4f764:	add	x0, x0, #0xa10
   4f768:	blr	x3
   4f76c:	add	x0, x1, x0
   4f770:	mov	w22, #0x0                   	// #0
   4f774:	ldr	x1, [sp, #104]
   4f778:	str	x2, [x1, #16]
   4f77c:	ldr	w1, [x0]
   4f780:	orr	w1, w1, #0x4
   4f784:	str	w1, [x0]
   4f788:	b	4ec44 <mpfr_li2@@Base+0x354>
   4f78c:	mov	x0, x23
   4f790:	mov	x2, #0xffffffffffffffff    	// #-1
   4f794:	mov	x1, #0x1                   	// #1
   4f798:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   4f79c:	cmp	w0, #0x0
   4f7a0:	b.le	4fad8 <mpfr_li2@@Base+0x11e8>
   4f7a4:	add	x24, sp, #0xd0
   4f7a8:	mov	x1, x19
   4f7ac:	mov	x0, x24
   4f7b0:	add	x20, sp, #0xf0
   4f7b4:	bl	ca80 <mpfr_init2@plt>
   4f7b8:	add	x21, sp, #0x110
   4f7bc:	mov	x0, x20
   4f7c0:	mov	x1, x19
   4f7c4:	bl	ca80 <mpfr_init2@plt>
   4f7c8:	add	x28, sp, #0x130
   4f7cc:	mov	x0, x21
   4f7d0:	mov	x1, x19
   4f7d4:	bl	ca80 <mpfr_init2@plt>
   4f7d8:	mov	x27, #0x40                  	// #64
   4f7dc:	mov	x0, x28
   4f7e0:	mov	x1, x19
   4f7e4:	bl	ca80 <mpfr_init2@plt>
   4f7e8:	str	x23, [sp, #136]
   4f7ec:	mov	x23, x20
   4f7f0:	str	w26, [sp, #160]
   4f7f4:	b	4f9f8 <mpfr_li2@@Base+0x1108>
   4f7f8:	b.le	4fa4c <mpfr_li2@@Base+0x115c>
   4f7fc:	clz	x22, x22
   4f800:	mov	w0, #0x41                  	// #65
   4f804:	sub	w22, w0, w22
   4f808:	sxtw	x22, w22
   4f80c:	ldr	x2, [sp, #136]
   4f810:	mov	w3, #0x0                   	// #0
   4f814:	ldr	x4, [sp, #224]
   4f818:	mov	x1, #0x1                   	// #1
   4f81c:	mov	x0, x28
   4f820:	str	x4, [sp, #144]
   4f824:	bl	ca50 <mpfr_ui_sub@plt>
   4f828:	mov	x1, x28
   4f82c:	mov	w2, #0x2                   	// #2
   4f830:	mov	x0, x21
   4f834:	bl	c090 <mpfr_log@plt>
   4f838:	mov	x2, x23
   4f83c:	mov	x1, x21
   4f840:	mov	w3, #0x0                   	// #0
   4f844:	mov	x0, x21
   4f848:	bl	bd50 <mpfr_mul@plt>
   4f84c:	mov	x2, x21
   4f850:	mov	x1, x24
   4f854:	mov	w3, #0x0                   	// #0
   4f858:	mov	x0, x24
   4f85c:	bl	c1a0 <mpfr_add@plt>
   4f860:	ldr	x3, [sp, #224]
   4f864:	mov	x1, x23
   4f868:	mov	w2, #0x0                   	// #0
   4f86c:	mov	x0, x23
   4f870:	str	x3, [sp, #152]
   4f874:	ldr	x26, [sp, #288]
   4f878:	bl	c400 <mpfr_sqr@plt>
   4f87c:	mov	x1, x23
   4f880:	mov	w3, #0x0                   	// #0
   4f884:	mov	x2, #0x2                   	// #2
   4f888:	mov	x0, x23
   4f88c:	bl	c8f0 <mpfr_div_2ui@plt>
   4f890:	mov	x1, x24
   4f894:	mov	w3, #0x0                   	// #0
   4f898:	mov	x2, x23
   4f89c:	mov	x0, x24
   4f8a0:	bl	c1a0 <mpfr_add@plt>
   4f8a4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4f8a8:	ldr	x1, [x0, #2624]
   4f8ac:	add	x0, x0, #0xa40
   4f8b0:	blr	x1
   4f8b4:	mov	w2, #0x2                   	// #2
   4f8b8:	ldr	x1, [sp, #112]
   4f8bc:	ldr	x25, [sp, #224]
   4f8c0:	add	x1, x1, x0
   4f8c4:	mov	x0, x23
   4f8c8:	ldr	x20, [sp, #256]
   4f8cc:	bl	c380 <mpfr_cache@plt>
   4f8d0:	mov	x1, x23
   4f8d4:	mov	w2, #0x0                   	// #0
   4f8d8:	mov	x0, x23
   4f8dc:	bl	c400 <mpfr_sqr@plt>
   4f8e0:	mov	x1, x23
   4f8e4:	mov	w3, #0x0                   	// #0
   4f8e8:	mov	x2, #0x6                   	// #6
   4f8ec:	mov	x0, x23
   4f8f0:	bl	cc60 <mpfr_div_ui@plt>
   4f8f4:	mov	x1, x24
   4f8f8:	mov	x2, x23
   4f8fc:	mov	x0, x24
   4f900:	mov	w3, #0x0                   	// #0
   4f904:	bl	c1a0 <mpfr_add@plt>
   4f908:	ldr	x1, [sp, #224]
   4f90c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4f910:	cmp	x1, x0
   4f914:	b.le	4f9a8 <mpfr_li2@@Base+0x10b8>
   4f918:	mov	x0, #0x1                   	// #1
   4f91c:	sub	x26, x0, x26
   4f920:	ldp	x0, x2, [sp, #144]
   4f924:	cmp	x26, #0x3
   4f928:	mov	x6, #0x3                   	// #3
   4f92c:	csel	x26, x26, x6, ge  // ge = tcont
   4f930:	add	x20, x20, #0x2
   4f934:	mov	x3, #0xffffffffffffffff    	// #-1
   4f938:	sub	x0, x22, x0
   4f93c:	cmp	x26, x0
   4f940:	csel	x0, x26, x0, ge  // ge = tcont
   4f944:	add	x0, x0, #0x2
   4f948:	sub	x0, x0, x2
   4f94c:	cmp	x20, x0
   4f950:	csel	x0, x20, x0, ge  // ge = tcont
   4f954:	subs	x0, x0, x25
   4f958:	csel	x0, x0, x3, pl  // pl = nfrst
   4f95c:	add	x0, x0, #0x2
   4f960:	add	x25, x25, x0
   4f964:	ldr	x2, [sp, #208]
   4f968:	cmp	x25, x6
   4f96c:	csel	x25, x25, x6, ge  // ge = tcont
   4f970:	subs	x25, x25, x1
   4f974:	add	x1, x2, x3
   4f978:	ldr	w2, [sp, #160]
   4f97c:	csel	x25, x25, x3, pl  // pl = nfrst
   4f980:	ldr	x0, [sp, #232]
   4f984:	cmp	w2, #0x0
   4f988:	ldr	x2, [sp, #96]
   4f98c:	add	x25, x25, #0x2
   4f990:	asr	x1, x1, #6
   4f994:	cinc	x3, x2, eq  // eq = none
   4f998:	add	x1, x1, #0x1
   4f99c:	sub	x2, x19, x25
   4f9a0:	bl	c370 <mpfr_round_p@plt>
   4f9a4:	cbnz	w0, 4fa7c <mpfr_li2@@Base+0x118c>
   4f9a8:	mov	x0, #0xfffffffffffffeff    	// #-257
   4f9ac:	movk	x0, #0x7fff, lsl #48
   4f9b0:	sub	x0, x0, x19
   4f9b4:	cmp	x0, x27
   4f9b8:	b.lt	4fa64 <mpfr_li2@@Base+0x1174>  // b.tstop
   4f9bc:	add	x19, x19, x27
   4f9c0:	mov	x0, x24
   4f9c4:	mov	x1, x19
   4f9c8:	bl	bed0 <mpfr_set_prec@plt>
   4f9cc:	mov	x1, x19
   4f9d0:	mov	x0, x23
   4f9d4:	add	x27, x19, x19, lsr #63
   4f9d8:	bl	bed0 <mpfr_set_prec@plt>
   4f9dc:	mov	x1, x19
   4f9e0:	mov	x0, x21
   4f9e4:	bl	bed0 <mpfr_set_prec@plt>
   4f9e8:	asr	x27, x27, #1
   4f9ec:	mov	x1, x19
   4f9f0:	mov	x0, x28
   4f9f4:	bl	bed0 <mpfr_set_prec@plt>
   4f9f8:	ldr	x1, [sp, #136]
   4f9fc:	mov	w2, #0x3                   	// #3
   4fa00:	mov	x0, x23
   4fa04:	bl	c090 <mpfr_log@plt>
   4fa08:	mov	x1, x23
   4fa0c:	mov	w2, #0x0                   	// #0
   4fa10:	mov	x0, x23
   4fa14:	bl	bd70 <mpfr_neg@plt>
   4fa18:	mov	x1, x23
   4fa1c:	mov	w2, #0x0                   	// #0
   4fa20:	mov	x0, x24
   4fa24:	bl	4e5d8 <mpfr_d_div@@Base+0x140>
   4fa28:	mov	x1, x24
   4fa2c:	sxtw	x22, w0
   4fa30:	mov	w2, #0x0                   	// #0
   4fa34:	mov	x0, x24
   4fa38:	bl	bd70 <mpfr_neg@plt>
   4fa3c:	cmp	w22, #0x0
   4fa40:	cbnz	w22, 4f7f8 <mpfr_li2@@Base+0xf08>
   4fa44:	mov	x22, #0x1                   	// #1
   4fa48:	b	4f80c <mpfr_li2@@Base+0xf1c>
   4fa4c:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4fa50:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4fa54:	add	x2, x2, #0xc38
   4fa58:	add	x0, x0, #0xc20
   4fa5c:	mov	w1, #0x1dc                 	// #476
   4fa60:	bl	cb40 <mpfr_assert_fail@plt>
   4fa64:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   4fa68:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4fa6c:	add	x2, x2, #0xab0
   4fa70:	add	x0, x0, #0xc20
   4fa74:	mov	w1, #0x1f5                 	// #501
   4fa78:	bl	cb40 <mpfr_assert_fail@plt>
   4fa7c:	ldr	w3, [sp, #216]
   4fa80:	mov	x1, x24
   4fa84:	ldr	x19, [sp, #104]
   4fa88:	ldr	w26, [sp, #160]
   4fa8c:	mov	x0, x19
   4fa90:	mov	w2, w26
   4fa94:	bl	c6a0 <mpfr_set4@plt>
   4fa98:	mov	x1, x23
   4fa9c:	mov	x3, x28
   4faa0:	mov	w22, w0
   4faa4:	mov	x2, x21
   4faa8:	mov	x0, x24
   4faac:	mov	x4, #0x0                   	// #0
   4fab0:	bl	c1b0 <mpfr_clears@plt>
   4fab4:	ldr	x3, [sp, #112]
   4fab8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4fabc:	ldr	x1, [x0, #2576]
   4fac0:	add	x0, x0, #0xa10
   4fac4:	blr	x1
   4fac8:	ldr	w1, [sp, #168]
   4facc:	str	w1, [x3, x0]
   4fad0:	ldr	x1, [x19, #16]
   4fad4:	b	4f358 <mpfr_li2@@Base+0xa68>
   4fad8:	mov	x0, x23
   4fadc:	mov	x2, #0x0                   	// #0
   4fae0:	mov	x1, #0xffffffffffffffff    	// #-1
   4fae4:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   4fae8:	tbnz	w0, #31, 4fd68 <mpfr_li2@@Base+0x1478>
   4faec:	add	x20, sp, #0xf0
   4faf0:	mov	x1, x19
   4faf4:	mov	x0, x20
   4faf8:	add	x21, sp, #0x110
   4fafc:	bl	ca80 <mpfr_init2@plt>
   4fb00:	add	x28, sp, #0x130
   4fb04:	mov	x0, x21
   4fb08:	mov	x1, x19
   4fb0c:	bl	ca80 <mpfr_init2@plt>
   4fb10:	mov	x22, #0x40                  	// #64
   4fb14:	mov	x0, x28
   4fb18:	mov	x1, x19
   4fb1c:	bl	ca80 <mpfr_init2@plt>
   4fb20:	b	4fc14 <mpfr_li2@@Base+0x1324>
   4fb24:	b.le	4fc84 <mpfr_li2@@Base+0x1394>
   4fb28:	clz	x24, x24
   4fb2c:	mov	w0, #0x41                  	// #65
   4fb30:	sub	w24, w0, w24
   4fb34:	sxtw	x24, w24
   4fb38:	mov	x1, x21
   4fb3c:	mov	w2, #0x0                   	// #0
   4fb40:	mov	x0, x21
   4fb44:	ldr	x27, [sp, #256]
   4fb48:	bl	c400 <mpfr_sqr@plt>
   4fb4c:	mov	x1, x21
   4fb50:	mov	w3, #0x0                   	// #0
   4fb54:	mov	x2, #0x2                   	// #2
   4fb58:	mov	x0, x21
   4fb5c:	bl	c8f0 <mpfr_div_2ui@plt>
   4fb60:	mov	x1, x20
   4fb64:	mov	x2, x21
   4fb68:	mov	x0, x20
   4fb6c:	mov	w3, #0x0                   	// #0
   4fb70:	bl	bb70 <mpfr_sub@plt>
   4fb74:	ldr	x0, [sp, #256]
   4fb78:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   4fb7c:	cmp	x0, x1
   4fb80:	b.le	4fbd0 <mpfr_li2@@Base+0x12e0>
   4fb84:	neg	x25, x25
   4fb88:	sub	x2, x24, x27
   4fb8c:	cmp	x25, #0x3
   4fb90:	mov	x0, #0x3                   	// #3
   4fb94:	ldr	x1, [sp, #240]
   4fb98:	csel	x25, x25, x0, ge  // ge = tcont
   4fb9c:	cmp	x25, x2
   4fba0:	ldr	x0, [sp, #264]
   4fba4:	csel	x25, x25, x2, ge  // ge = tcont
   4fba8:	sub	x1, x1, #0x1
   4fbac:	cmp	w26, #0x0
   4fbb0:	ldr	x3, [sp, #96]
   4fbb4:	add	x2, x25, #0x2
   4fbb8:	asr	x1, x1, #6
   4fbbc:	sub	x2, x19, x2
   4fbc0:	cinc	x3, x3, eq  // eq = none
   4fbc4:	add	x1, x1, #0x1
   4fbc8:	bl	c370 <mpfr_round_p@plt>
   4fbcc:	cbnz	w0, 4fc9c <mpfr_li2@@Base+0x13ac>
   4fbd0:	mov	x0, #0xfffffffffffffeff    	// #-257
   4fbd4:	movk	x0, #0x7fff, lsl #48
   4fbd8:	sub	x0, x0, x19
   4fbdc:	cmp	x0, x22
   4fbe0:	b.lt	4fc6c <mpfr_li2@@Base+0x137c>  // b.tstop
   4fbe4:	add	x19, x19, x22
   4fbe8:	mov	x0, x20
   4fbec:	mov	x1, x19
   4fbf0:	bl	bed0 <mpfr_set_prec@plt>
   4fbf4:	add	x22, x19, x19, lsr #63
   4fbf8:	mov	x1, x19
   4fbfc:	mov	x0, x21
   4fc00:	bl	bed0 <mpfr_set_prec@plt>
   4fc04:	asr	x22, x22, #1
   4fc08:	mov	x1, x19
   4fc0c:	mov	x0, x28
   4fc10:	bl	bed0 <mpfr_set_prec@plt>
   4fc14:	mov	x1, x23
   4fc18:	mov	w2, #0x0                   	// #0
   4fc1c:	mov	x0, x28
   4fc20:	bl	bd70 <mpfr_neg@plt>
   4fc24:	mov	x1, x28
   4fc28:	mov	w2, #0x0                   	// #0
   4fc2c:	mov	x0, x21
   4fc30:	bl	c700 <mpfr_log1p@plt>
   4fc34:	mov	x1, x21
   4fc38:	mov	w2, #0x0                   	// #0
   4fc3c:	mov	x0, x20
   4fc40:	bl	4e5d8 <mpfr_d_div@@Base+0x140>
   4fc44:	mov	x1, x20
   4fc48:	sxtw	x24, w0
   4fc4c:	mov	w2, #0x0                   	// #0
   4fc50:	mov	x0, x20
   4fc54:	bl	bd70 <mpfr_neg@plt>
   4fc58:	cmp	w24, #0x0
   4fc5c:	ldr	x25, [sp, #288]
   4fc60:	cbnz	w24, 4fb24 <mpfr_li2@@Base+0x1234>
   4fc64:	mov	x24, #0x1                   	// #1
   4fc68:	b	4fb38 <mpfr_li2@@Base+0x1248>
   4fc6c:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   4fc70:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4fc74:	add	x2, x2, #0xab0
   4fc78:	add	x0, x0, #0xc20
   4fc7c:	mov	w1, #0x21e                 	// #542
   4fc80:	bl	cb40 <mpfr_assert_fail@plt>
   4fc84:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   4fc88:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   4fc8c:	add	x2, x2, #0xc38
   4fc90:	add	x0, x0, #0xc20
   4fc94:	mov	w1, #0x214                 	// #532
   4fc98:	bl	cb40 <mpfr_assert_fail@plt>
   4fc9c:	ldr	w3, [sp, #248]
   4fca0:	mov	w2, w26
   4fca4:	ldr	x19, [sp, #104]
   4fca8:	mov	x1, x20
   4fcac:	mov	x0, x19
   4fcb0:	bl	c6a0 <mpfr_set4@plt>
   4fcb4:	mov	x2, x28
   4fcb8:	mov	w22, w0
   4fcbc:	mov	x1, x21
   4fcc0:	mov	x0, x20
   4fcc4:	mov	x3, #0x0                   	// #0
   4fcc8:	bl	c1b0 <mpfr_clears@plt>
   4fccc:	b	4ec98 <mpfr_li2@@Base+0x3a8>
   4fcd0:	ldr	w3, [sp, #280]
   4fcd4:	mov	w2, w26
   4fcd8:	ldr	x0, [sp, #104]
   4fcdc:	mov	x1, x21
   4fce0:	bl	c6a0 <mpfr_set4@plt>
   4fce4:	mov	w22, w0
   4fce8:	cmp	w26, #0x5
   4fcec:	mov	x0, x21
   4fcf0:	b.eq	501a8 <mpfr_li2@@Base+0x18b8>  // b.none
   4fcf4:	bl	c070 <mpfr_clear@plt>
   4fcf8:	mov	x0, x28
   4fcfc:	bl	c070 <mpfr_clear@plt>
   4fd00:	cbz	w22, 4f058 <mpfr_li2@@Base+0x768>
   4fd04:	ldr	x2, [sp, #112]
   4fd08:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4fd0c:	ldr	x1, [x0, #2576]
   4fd10:	add	x0, x0, #0xa10
   4fd14:	blr	x1
   4fd18:	ldr	w1, [sp, #168]
   4fd1c:	str	w1, [x2, x0]
   4fd20:	ldr	x0, [sp, #104]
   4fd24:	ldr	x1, [x0, #16]
   4fd28:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4fd2c:	ldr	x3, [x0, #2512]
   4fd30:	add	x0, x0, #0x9d0
   4fd34:	blr	x3
   4fd38:	ldr	x3, [sp, #120]
   4fd3c:	str	x3, [x2, x0]
   4fd40:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4fd44:	ldr	x4, [x0, #2544]
   4fd48:	add	x0, x0, #0x9f0
   4fd4c:	blr	x4
   4fd50:	ldr	x4, [sp, #128]
   4fd54:	str	x4, [x2, x0]
   4fd58:	cmp	x4, x1
   4fd5c:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   4fd60:	b.gt	4ec28 <mpfr_li2@@Base+0x338>
   4fd64:	b	4f6e4 <mpfr_li2@@Base+0xdf4>
   4fd68:	mov	x0, x23
   4fd6c:	mov	x2, #0x0                   	// #0
   4fd70:	mov	x1, #0xfffffffffffffff9    	// #-7
   4fd74:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   4fd78:	cmp	w0, #0x0
   4fd7c:	b.le	501bc <mpfr_li2@@Base+0x18cc>
   4fd80:	add	x28, sp, #0x130
   4fd84:	add	x21, sp, #0x110
   4fd88:	add	x25, sp, #0xb0
   4fd8c:	mov	x1, x19
   4fd90:	mov	x0, x25
   4fd94:	bl	ca80 <mpfr_init2@plt>
   4fd98:	mov	x0, #0x40                  	// #64
   4fd9c:	add	x24, sp, #0xd0
   4fda0:	mov	x1, x19
   4fda4:	add	x20, sp, #0xf0
   4fda8:	str	x0, [sp, #136]
   4fdac:	mov	x0, x24
   4fdb0:	bl	ca80 <mpfr_init2@plt>
   4fdb4:	mov	x0, x20
   4fdb8:	mov	x1, x19
   4fdbc:	bl	ca80 <mpfr_init2@plt>
   4fdc0:	mov	x1, x19
   4fdc4:	mov	x0, x21
   4fdc8:	bl	ca80 <mpfr_init2@plt>
   4fdcc:	mov	x1, x19
   4fdd0:	mov	x0, x28
   4fdd4:	bl	ca80 <mpfr_init2@plt>
   4fdd8:	str	w26, [sp, #172]
   4fddc:	mov	x26, x25
   4fde0:	mov	x25, x21
   4fde4:	mov	w3, #0x0                   	// #0
   4fde8:	mov	x2, x23
   4fdec:	mov	x1, #0x1                   	// #1
   4fdf0:	mov	x0, x28
   4fdf4:	bl	c2f0 <mpfr_ui_div@plt>
   4fdf8:	mov	x1, x28
   4fdfc:	mov	w2, #0x0                   	// #0
   4fe00:	mov	x0, x28
   4fe04:	bl	bd70 <mpfr_neg@plt>
   4fe08:	mov	x1, x28
   4fe0c:	mov	w2, #0x0                   	// #0
   4fe10:	mov	x0, x24
   4fe14:	bl	c700 <mpfr_log1p@plt>
   4fe18:	mov	x1, x24
   4fe1c:	mov	w2, #0x0                   	// #0
   4fe20:	mov	x0, x26
   4fe24:	bl	4e5d8 <mpfr_d_div@@Base+0x140>
   4fe28:	mov	w3, #0x0                   	// #0
   4fe2c:	mov	w22, w0
   4fe30:	mov	x2, x23
   4fe34:	mov	x1, #0x1                   	// #1
   4fe38:	mov	x0, x28
   4fe3c:	bl	ca50 <mpfr_ui_sub@plt>
   4fe40:	mov	x1, x28
   4fe44:	mov	w2, #0x2                   	// #2
   4fe48:	mov	x0, x24
   4fe4c:	bl	c090 <mpfr_log@plt>
   4fe50:	mov	x1, x23
   4fe54:	mov	w2, #0x0                   	// #0
   4fe58:	mov	x0, x28
   4fe5c:	bl	bd70 <mpfr_neg@plt>
   4fe60:	mov	x1, x28
   4fe64:	mov	w2, #0x2                   	// #2
   4fe68:	mov	x0, x20
   4fe6c:	bl	c090 <mpfr_log@plt>
   4fe70:	mov	x2, x24
   4fe74:	mov	x1, x20
   4fe78:	mov	w3, #0x0                   	// #0
   4fe7c:	mov	x0, x25
   4fe80:	bl	bd50 <mpfr_mul@plt>
   4fe84:	mov	x1, x25
   4fe88:	mov	w3, #0x0                   	// #0
   4fe8c:	mov	x2, #0x1                   	// #1
   4fe90:	mov	x0, x25
   4fe94:	bl	c8f0 <mpfr_div_2ui@plt>
   4fe98:	mov	x2, x25
   4fe9c:	mov	x1, x26
   4fea0:	mov	x0, x26
   4fea4:	mov	w3, #0x0                   	// #0
   4fea8:	bl	bb70 <mpfr_sub@plt>
   4feac:	cmp	w22, #0x0
   4feb0:	cbz	w22, 500f4 <mpfr_li2@@Base+0x1804>
   4feb4:	b.le	500dc <mpfr_li2@@Base+0x17ec>
   4feb8:	sxtw	x0, w22
   4febc:	mov	w1, #0x41                  	// #65
   4fec0:	clz	x0, x0
   4fec4:	mov	x21, #0x4                   	// #4
   4fec8:	sub	w0, w1, w0
   4fecc:	ldr	x22, [sp, #192]
   4fed0:	sxtw	x0, w0
   4fed4:	sub	x0, x0, x22
   4fed8:	cmp	x0, #0x2
   4fedc:	b.le	4fee4 <mpfr_li2@@Base+0x15f4>
   4fee0:	add	x21, x0, #0x1
   4fee4:	mov	x1, x20
   4fee8:	mov	w2, #0x0                   	// #0
   4feec:	mov	x0, x25
   4fef0:	bl	c400 <mpfr_sqr@plt>
   4fef4:	mov	x1, x25
   4fef8:	mov	w3, #0x0                   	// #0
   4fefc:	mov	x2, #0x2                   	// #2
   4ff00:	mov	x0, x25
   4ff04:	bl	c8f0 <mpfr_div_2ui@plt>
   4ff08:	mov	x2, x25
   4ff0c:	mov	x1, x26
   4ff10:	mov	w3, #0x0                   	// #0
   4ff14:	mov	x0, x26
   4ff18:	bl	bb70 <mpfr_sub@plt>
   4ff1c:	ldr	x7, [sp, #192]
   4ff20:	mov	x1, x24
   4ff24:	ldr	x3, [sp, #288]
   4ff28:	mov	w2, #0x0                   	// #0
   4ff2c:	mov	x0, x25
   4ff30:	stp	x7, x3, [sp, #144]
   4ff34:	bl	c400 <mpfr_sqr@plt>
   4ff38:	mov	x1, x25
   4ff3c:	mov	w3, #0x0                   	// #0
   4ff40:	mov	x2, #0x2                   	// #2
   4ff44:	mov	x0, x25
   4ff48:	bl	c8f0 <mpfr_div_2ui@plt>
   4ff4c:	mov	x1, x26
   4ff50:	mov	x2, x25
   4ff54:	mov	w3, #0x0                   	// #0
   4ff58:	mov	x0, x26
   4ff5c:	bl	c1a0 <mpfr_add@plt>
   4ff60:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   4ff64:	ldr	x1, [x0, #2624]
   4ff68:	add	x0, x0, #0xa40
   4ff6c:	blr	x1
   4ff70:	mov	w2, #0x2                   	// #2
   4ff74:	ldr	x3, [sp, #288]
   4ff78:	str	x3, [sp, #160]
   4ff7c:	ldr	x1, [sp, #112]
   4ff80:	ldr	x27, [sp, #192]
   4ff84:	add	x1, x1, x0
   4ff88:	mov	x0, x25
   4ff8c:	bl	c380 <mpfr_cache@plt>
   4ff90:	mov	x1, x25
   4ff94:	mov	w2, #0x0                   	// #0
   4ff98:	mov	x0, x25
   4ff9c:	bl	c400 <mpfr_sqr@plt>
   4ffa0:	mov	x1, x25
   4ffa4:	mov	w3, #0x0                   	// #0
   4ffa8:	mov	x2, #0x6                   	// #6
   4ffac:	mov	x0, x25
   4ffb0:	bl	cc60 <mpfr_div_ui@plt>
   4ffb4:	mov	x2, x25
   4ffb8:	mov	x1, x26
   4ffbc:	mov	x0, x26
   4ffc0:	mov	w3, #0x0                   	// #0
   4ffc4:	bl	bb70 <mpfr_sub@plt>
   4ffc8:	ldr	x2, [sp, #192]
   4ffcc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   4ffd0:	ldr	x7, [sp, #144]
   4ffd4:	cmp	x2, x0
   4ffd8:	b.le	50070 <mpfr_li2@@Base+0x1780>
   4ffdc:	ldr	x0, [sp, #152]
   4ffe0:	add	x6, x21, x22
   4ffe4:	mov	x3, #0xffffffffffffffff    	// #-1
   4ffe8:	add	x1, x0, #0x3
   4ffec:	cmp	x1, x6
   4fff0:	csel	x1, x1, x6, ge  // ge = tcont
   4fff4:	mov	x6, #0x3                   	// #3
   4fff8:	subs	x1, x1, x7
   4fffc:	ldr	x0, [sp, #160]
   50000:	csel	x1, x1, x3, pl  // pl = nfrst
   50004:	add	x1, x1, #0x2
   50008:	add	x1, x7, x1
   5000c:	add	x0, x0, #0x3
   50010:	cmp	x0, x1
   50014:	csel	x0, x0, x1, ge  // ge = tcont
   50018:	subs	x0, x0, x27
   5001c:	csel	x0, x0, x3, pl  // pl = nfrst
   50020:	add	x0, x0, #0x2
   50024:	add	x0, x27, x0
   50028:	cmp	x0, x6
   5002c:	ldr	x5, [sp, #176]
   50030:	csel	x0, x0, x6, ge  // ge = tcont
   50034:	subs	x1, x0, x2
   50038:	csel	x1, x1, x3, pl  // pl = nfrst
   5003c:	add	x5, x5, x3
   50040:	ldr	w3, [sp, #172]
   50044:	add	x1, x1, #0x2
   50048:	ldr	x0, [sp, #200]
   5004c:	cmp	w3, #0x0
   50050:	ldr	x3, [sp, #96]
   50054:	add	x2, x2, x1
   50058:	asr	x1, x5, #6
   5005c:	sub	x2, x19, x2
   50060:	add	x1, x1, #0x1
   50064:	cinc	x3, x3, eq  // eq = none
   50068:	bl	c370 <mpfr_round_p@plt>
   5006c:	cbnz	w0, 50128 <mpfr_li2@@Base+0x1838>
   50070:	ldr	x1, [sp, #136]
   50074:	mov	x0, #0xfffffffffffffeff    	// #-257
   50078:	movk	x0, #0x7fff, lsl #48
   5007c:	sub	x0, x0, x19
   50080:	cmp	x0, x1
   50084:	b.lt	50110 <mpfr_li2@@Base+0x1820>  // b.tstop
   50088:	ldr	x0, [sp, #136]
   5008c:	add	x19, x19, x0
   50090:	mov	x0, x26
   50094:	mov	x1, x19
   50098:	add	x21, x19, x19, lsr #63
   5009c:	asr	x2, x21, #1
   500a0:	str	x2, [sp, #136]
   500a4:	bl	bed0 <mpfr_set_prec@plt>
   500a8:	mov	x1, x19
   500ac:	mov	x0, x24
   500b0:	bl	bed0 <mpfr_set_prec@plt>
   500b4:	mov	x1, x19
   500b8:	mov	x0, x20
   500bc:	bl	bed0 <mpfr_set_prec@plt>
   500c0:	mov	x1, x19
   500c4:	mov	x0, x25
   500c8:	bl	bed0 <mpfr_set_prec@plt>
   500cc:	mov	x1, x19
   500d0:	mov	x0, x28
   500d4:	bl	bed0 <mpfr_set_prec@plt>
   500d8:	b	4fde4 <mpfr_li2@@Base+0x14f4>
   500dc:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   500e0:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   500e4:	add	x2, x2, #0xe28
   500e8:	add	x0, x0, #0xc20
   500ec:	mov	w1, #0x24d                 	// #589
   500f0:	bl	cb40 <mpfr_assert_fail@plt>
   500f4:	ldr	x22, [sp, #192]
   500f8:	mov	x0, #0x1                   	// #1
   500fc:	mov	x21, #0x4                   	// #4
   50100:	sub	x0, x0, x22
   50104:	cmp	x0, #0x2
   50108:	b.gt	4fee0 <mpfr_li2@@Base+0x15f0>
   5010c:	b	4fee4 <mpfr_li2@@Base+0x15f4>
   50110:	adrp	x2, 61000 <mpfr_l2b_2_0__tab@@Base+0x3170>
   50114:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   50118:	add	x2, x2, #0xab0
   5011c:	add	x0, x0, #0xc20
   50120:	mov	w1, #0x266                 	// #614
   50124:	bl	cb40 <mpfr_assert_fail@plt>
   50128:	ldr	w3, [sp, #184]
   5012c:	mov	x21, x25
   50130:	ldr	x19, [sp, #104]
   50134:	mov	x25, x26
   50138:	mov	x1, x26
   5013c:	ldr	w26, [sp, #172]
   50140:	mov	x0, x19
   50144:	mov	w2, w26
   50148:	bl	c6a0 <mpfr_set4@plt>
   5014c:	mov	x4, x28
   50150:	mov	w22, w0
   50154:	mov	x3, x21
   50158:	mov	x0, x25
   5015c:	mov	x2, x20
   50160:	mov	x1, x24
   50164:	mov	x5, #0x0                   	// #0
   50168:	bl	c1b0 <mpfr_clears@plt>
   5016c:	b	4f684 <mpfr_li2@@Base+0xd94>
   50170:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   50174:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   50178:	add	x2, x2, #0xcb8
   5017c:	add	x0, x0, #0xc20
   50180:	mov	w1, #0x90                  	// #144
   50184:	bl	cb40 <mpfr_assert_fail@plt>
   50188:	b	4efe4 <mpfr_li2@@Base+0x6f4>
   5018c:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   50190:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   50194:	add	x2, x2, #0xc48
   50198:	add	x0, x0, #0xc20
   5019c:	mov	w1, #0x82                  	// #130
   501a0:	bl	cb40 <mpfr_assert_fail@plt>
   501a4:	b	4ef38 <mpfr_li2@@Base+0x648>
   501a8:	bl	c070 <mpfr_clear@plt>
   501ac:	mov	w22, #0x1                   	// #1
   501b0:	mov	x0, x28
   501b4:	bl	c070 <mpfr_clear@plt>
   501b8:	b	4fd04 <mpfr_li2@@Base+0x1414>
   501bc:	ldr	x0, [sp, #104]
   501c0:	mov	x2, #0x0                   	// #0
   501c4:	mov	x1, #0xfffffffffffffff9    	// #-7
   501c8:	ldr	x20, [x0]
   501cc:	mov	x0, x23
   501d0:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   501d4:	cmp	w0, #0x0
   501d8:	add	x22, x20, #0x14
   501dc:	b.gt	502e8 <mpfr_li2@@Base+0x19f8>
   501e0:	add	x21, sp, #0x110
   501e4:	add	x28, sp, #0x130
   501e8:	mov	x1, x22
   501ec:	mov	x0, x21
   501f0:	bl	ca80 <mpfr_init2@plt>
   501f4:	mov	x1, x22
   501f8:	mov	x0, x28
   501fc:	bl	ca80 <mpfr_init2@plt>
   50200:	mov	x1, x23
   50204:	mov	w2, #0x0                   	// #0
   50208:	mov	x0, x21
   5020c:	bl	bd70 <mpfr_neg@plt>
   50210:	mov	x1, x21
   50214:	mov	w2, #0x0                   	// #0
   50218:	mov	x0, x21
   5021c:	bl	c090 <mpfr_log@plt>
   50220:	mov	x1, x21
   50224:	mov	w2, #0x0                   	// #0
   50228:	mov	x0, x21
   5022c:	bl	c400 <mpfr_sqr@plt>
   50230:	mov	x1, x21
   50234:	mov	w3, #0x0                   	// #0
   50238:	mov	x2, #0x1                   	// #1
   5023c:	mov	x0, x21
   50240:	bl	c8f0 <mpfr_div_2ui@plt>
   50244:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   50248:	ldr	x1, [x0, #2624]
   5024c:	add	x0, x0, #0xa40
   50250:	blr	x1
   50254:	mov	w2, #0x0                   	// #0
   50258:	ldr	x1, [sp, #112]
   5025c:	add	x1, x1, x0
   50260:	mov	x0, x28
   50264:	bl	c380 <mpfr_cache@plt>
   50268:	mov	x1, x28
   5026c:	mov	w2, #0x0                   	// #0
   50270:	mov	x0, x28
   50274:	bl	c400 <mpfr_sqr@plt>
   50278:	mov	x1, x28
   5027c:	mov	x0, x28
   50280:	mov	w3, #0x0                   	// #0
   50284:	mov	x2, #0x6                   	// #6
   50288:	bl	cc60 <mpfr_div_ui@plt>
   5028c:	ldr	x1, [sp, #288]
   50290:	ldr	x0, [sp, #320]
   50294:	cmp	x1, x0
   50298:	b.lt	50368 <mpfr_li2@@Base+0x1a78>  // b.tstop
   5029c:	mov	x2, x28
   502a0:	mov	x1, x21
   502a4:	mov	w3, #0x0                   	// #0
   502a8:	mov	x0, x21
   502ac:	bl	c1a0 <mpfr_add@plt>
   502b0:	ldr	x1, [sp, #288]
   502b4:	add	x0, x20, #0x12
   502b8:	ldr	x3, [x23, #16]
   502bc:	sub	x0, x0, x1
   502c0:	mov	x2, #0x4                   	// #4
   502c4:	cmp	x3, x0
   502c8:	movk	x2, #0x8000, lsl #48
   502cc:	ccmp	x1, x2, #0x1, ge  // ge = tcont
   502d0:	b.ge	50304 <mpfr_li2@@Base+0x1a14>  // b.tcont
   502d4:	mov	x0, x21
   502d8:	bl	c070 <mpfr_clear@plt>
   502dc:	mov	x0, x28
   502e0:	bl	c070 <mpfr_clear@plt>
   502e4:	b	4fd88 <mpfr_li2@@Base+0x1498>
   502e8:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   502ec:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   502f0:	add	x2, x2, #0xce0
   502f4:	add	x0, x0, #0xc20
   502f8:	mov	w1, #0xb4                  	// #180
   502fc:	bl	cb40 <mpfr_assert_fail@plt>
   50300:	b	501e0 <mpfr_li2@@Base+0x18f0>
   50304:	ldr	x2, [sp, #104]
   50308:	cmp	w26, #0x0
   5030c:	ldr	x1, [sp, #272]
   50310:	ldr	x0, [sp, #296]
   50314:	sub	x1, x1, #0x1
   50318:	ldr	x3, [x2]
   5031c:	asr	x1, x1, #6
   50320:	add	x1, x1, #0x1
   50324:	add	x2, x20, #0x10
   50328:	cinc	x3, x3, eq  // eq = none
   5032c:	bl	c370 <mpfr_round_p@plt>
   50330:	cbz	w0, 502d4 <mpfr_li2@@Base+0x19e4>
   50334:	ldr	x0, [sp, #104]
   50338:	mov	w2, w26
   5033c:	mov	x1, x21
   50340:	bl	bd70 <mpfr_neg@plt>
   50344:	mov	w22, w0
   50348:	cmp	w26, #0x5
   5034c:	mov	x0, x21
   50350:	b.eq	501a8 <mpfr_li2@@Base+0x18b8>  // b.none
   50354:	bl	c070 <mpfr_clear@plt>
   50358:	mov	x0, x28
   5035c:	bl	c070 <mpfr_clear@plt>
   50360:	cbnz	w22, 4fd04 <mpfr_li2@@Base+0x1414>
   50364:	b	4fd88 <mpfr_li2@@Base+0x1498>
   50368:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   5036c:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   50370:	add	x2, x2, #0xe00
   50374:	add	x0, x0, #0xc20
   50378:	mov	w1, #0xc0                  	// #192
   5037c:	bl	cb40 <mpfr_assert_fail@plt>
   50380:	b	5029c <mpfr_li2@@Base+0x19ac>
   50384:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   50388:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   5038c:	add	x2, x2, #0xc28
   50390:	add	x0, x0, #0xc20
   50394:	mov	w1, #0x106                 	// #262
   50398:	bl	cb40 <mpfr_assert_fail@plt>
   5039c:	nop
   503a0:	stp	x29, x30, [sp, #-192]!
   503a4:	sub	x5, x3, #0x1
   503a8:	mov	x10, x2
   503ac:	mov	x29, sp
   503b0:	stp	x25, x26, [sp, #64]
   503b4:	sub	x26, x1, #0x1
   503b8:	asr	x5, x5, #6
   503bc:	stp	x19, x20, [sp, #16]
   503c0:	asr	x26, x26, #6
   503c4:	add	x11, x5, #0x1
   503c8:	stp	x21, x22, [sp, #32]
   503cc:	mov	x19, x1
   503d0:	mov	x25, x0
   503d4:	stp	x23, x24, [sp, #48]
   503d8:	mov	x2, x11
   503dc:	mov	w24, w4
   503e0:	stp	x27, x28, [sp, #80]
   503e4:	cmp	x26, x5
   503e8:	add	x20, x26, #0x1
   503ec:	b.lt	509f8 <mpfr_li2@@Base+0x2108>  // b.tstop
   503f0:	cmp	x19, #0xb
   503f4:	b.eq	50660 <mpfr_li2@@Base+0x1d70>  // b.none
   503f8:	cmp	x19, #0x11
   503fc:	b.gt	50620 <mpfr_li2@@Base+0x1d30>
   50400:	mov	x0, #0x2                   	// #2
   50404:	mov	x12, #0x1                   	// #1
   50408:	mov	x22, #0xc                   	// #12
   5040c:	mov	x28, #0x16                  	// #22
   50410:	mov	x1, #0xb                   	// #11
   50414:	str	x0, [x29, #112]
   50418:	mov	x0, #0x17                  	// #23
   5041c:	str	x12, [x29, #168]
   50420:	sxtw	x27, w24
   50424:	lsl	x4, x26, #3
   50428:	add	x22, x27, x22
   5042c:	add	x27, x27, x0
   50430:	sub	x3, x22, #0x1
   50434:	sub	x27, x27, #0x1
   50438:	add	x21, x25, x4
   5043c:	sub	x22, x22, #0x3
   50440:	asr	x3, x3, #6
   50444:	asr	x0, x27, #6
   50448:	add	x3, x3, #0x1
   5044c:	add	x27, x0, #0x1
   50450:	cmp	x11, x3
   50454:	stp	x0, x12, [x29, #120]
   50458:	csel	x3, x11, x3, le
   5045c:	sub	x2, x2, x3
   50460:	mov	x0, x21
   50464:	lsl	x3, x3, #6
   50468:	stp	x11, x10, [x29, #136]
   5046c:	add	x2, x10, x2, lsl #3
   50470:	str	x4, [x29, #160]
   50474:	mov	w4, w24
   50478:	bl	503a0 <mpfr_li2@@Base+0x1ab0>
   5047c:	asr	x22, x22, #6
   50480:	ldr	x0, [x29, #168]
   50484:	sub	x23, x27, x22
   50488:	str	xzr, [x29, #184]
   5048c:	add	x0, x23, x0
   50490:	str	x0, [x29, #152]
   50494:	ldp	x12, x11, [x29, #128]
   50498:	lsl	x1, x0, #3
   5049c:	cmp	x1, #0x4, lsl #12
   504a0:	ldr	x10, [x29, #144]
   504a4:	b.hi	50a44 <mpfr_li2@@Base+0x2154>  // b.pmore
   504a8:	add	x1, x1, #0xf
   504ac:	and	x1, x1, #0xfffffffffffffff0
   504b0:	sub	sp, sp, x1
   504b4:	mov	x8, sp
   504b8:	cmp	x28, #0x40
   504bc:	b.gt	5070c <mpfr_li2@@Base+0x1e1c>
   504c0:	ldr	w0, [x25, #4]
   504c4:	add	x14, x8, #0x8
   504c8:	mul	x0, x0, x0
   504cc:	str	x0, [x8, #8]
   504d0:	add	x28, x11, x12
   504d4:	lsl	x1, x28, #3
   504d8:	cmp	x1, #0x4, lsl #12
   504dc:	b.hi	50a1c <mpfr_li2@@Base+0x212c>  // b.pmore
   504e0:	add	x1, x1, #0xf
   504e4:	and	x1, x1, #0xfffffffffffffff0
   504e8:	sub	sp, sp, x1
   504ec:	mov	x13, sp
   504f0:	cmp	x12, #0x1
   504f4:	b.eq	508ac <mpfr_li2@@Base+0x1fbc>  // b.none
   504f8:	mov	x0, x13
   504fc:	mov	x4, x11
   50500:	mov	x3, x10
   50504:	mov	x2, x12
   50508:	mov	x1, x14
   5050c:	stp	x8, x13, [x29, #136]
   50510:	bl	c7a0 <__gmpn_mul@plt>
   50514:	ldp	x8, x13, [x29, #136]
   50518:	sub	x3, x28, x27
   5051c:	lsl	x4, x27, #3
   50520:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   50524:	sub	x4, x4, #0x8
   50528:	add	x1, x13, x3, lsl #3
   5052c:	lsr	x0, x0, x24
   50530:	ldr	x2, [x1, x4]
   50534:	ands	x28, x2, x0
   50538:	b.ne	506c8 <mpfr_li2@@Base+0x1dd8>  // b.any
   5053c:	orr	x0, x2, x0
   50540:	mov	x2, #0x0                   	// #0
   50544:	orr	x0, x0, #0x8000000000000000
   50548:	str	x0, [x1, x4]
   5054c:	nop
   50550:	ldr	x3, [x1, x2, lsl #3]
   50554:	mvn	x3, x3
   50558:	str	x3, [x1, x2, lsl #3]
   5055c:	add	x2, x2, #0x1
   50560:	cmp	x27, x2
   50564:	b.ne	50550 <mpfr_li2@@Base+0x1c60>  // b.any
   50568:	cmp	x23, #0x1
   5056c:	b.ne	50734 <mpfr_li2@@Base+0x1e44>  // b.any
   50570:	ldr	x0, [x1]
   50574:	sub	x22, x20, x22
   50578:	ldr	x1, [x29, #160]
   5057c:	cmp	w24, #0x1
   50580:	ldr	x1, [x25, x1]
   50584:	umulh	x2, x0, x1
   50588:	mul	x0, x0, x1
   5058c:	stp	x0, x2, [x8]
   50590:	ldr	x0, [x29, #152]
   50594:	sub	x23, x0, x22
   50598:	add	x23, x8, x23, lsl #3
   5059c:	b.eq	50768 <mpfr_li2@@Base+0x1e78>  // b.none
   505a0:	lsl	x24, x20, #6
   505a4:	sub	x24, x24, x19
   505a8:	cmp	x24, #0x0
   505ac:	ldr	x1, [x23]
   505b0:	b.le	50790 <mpfr_li2@@Base+0x1ea0>
   505b4:	sub	w4, w24, #0x1
   505b8:	mov	x0, #0x1                   	// #1
   505bc:	lsl	x2, x0, x24
   505c0:	neg	x3, x2
   505c4:	lsl	x0, x0, x4
   505c8:	and	x0, x0, x1
   505cc:	adds	x1, x0, x1
   505d0:	b.cc	507e0 <mpfr_li2@@Base+0x1ef0>  // b.lo, b.ul, b.last
   505d4:	mov	x0, x23
   505d8:	add	x2, x23, x22, lsl #3
   505dc:	str	x1, [x0], #8
   505e0:	b	505f4 <mpfr_li2@@Base+0x1d04>
   505e4:	ldr	x1, [x0]
   505e8:	add	x1, x1, #0x1
   505ec:	str	x1, [x0], #8
   505f0:	cbnz	x1, 50a0c <mpfr_li2@@Base+0x211c>
   505f4:	cmp	x2, x0
   505f8:	b.ne	505e4 <mpfr_li2@@Base+0x1cf4>  // b.any
   505fc:	ldr	x1, [x23]
   50600:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   50604:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   50608:	add	x2, x2, #0xe38
   5060c:	and	x1, x1, x3
   50610:	str	x1, [x23]
   50614:	add	x0, x0, #0xe40
   50618:	mov	w1, #0x17e                 	// #382
   5061c:	bl	cb40 <mpfr_assert_fail@plt>
   50620:	asr	x22, x19, #1
   50624:	add	x1, x22, #0x2
   50628:	add	x0, x22, #0x1
   5062c:	add	x22, x22, #0x3
   50630:	lsl	x28, x1, #1
   50634:	asr	x0, x0, #6
   50638:	sub	x12, x28, #0x1
   5063c:	add	x3, x0, #0x1
   50640:	sub	x26, x26, x0
   50644:	add	x0, x28, #0x1
   50648:	asr	x12, x12, #6
   5064c:	str	x3, [x29, #168]
   50650:	add	x12, x12, #0x1
   50654:	lsl	x3, x3, #1
   50658:	str	x3, [x29, #112]
   5065c:	b	50420 <mpfr_li2@@Base+0x1b30>
   50660:	add	x2, x10, x2, lsl #3
   50664:	mov	w0, #0x34                  	// #52
   50668:	sub	w7, w0, w24
   5066c:	adrp	x1, 63000 <mpfr_bases@@Base+0xe58>
   50670:	add	x1, x1, #0xe50
   50674:	ldur	x0, [x2, #-8]
   50678:	lsr	x0, x0, x7
   5067c:	and	x3, x0, #0xf
   50680:	lsr	x0, x0, #4
   50684:	and	x2, x0, #0x3f0
   50688:	orr	x2, x2, x3
   5068c:	add	x0, x1, x0, lsl #1
   50690:	add	x1, x1, x2
   50694:	ldrsh	x2, [x0, #128]
   50698:	ldurb	w0, [x1, #-128]
   5069c:	add	x0, x0, x2
   506a0:	lsl	x0, x0, #53
   506a4:	str	x0, [x25]
   506a8:	mov	sp, x29
   506ac:	ldp	x19, x20, [sp, #16]
   506b0:	ldp	x21, x22, [sp, #32]
   506b4:	ldp	x23, x24, [sp, #48]
   506b8:	ldp	x25, x26, [sp, #64]
   506bc:	ldp	x27, x28, [sp, #80]
   506c0:	ldp	x29, x30, [sp], #192
   506c4:	ret
   506c8:	eor	x2, x2, x28
   506cc:	str	x2, [x1, x4]
   506d0:	ldr	x0, [x13, x3, lsl #3]
   506d4:	add	x0, x0, #0x1
   506d8:	str	x0, [x13, x3, lsl #3]
   506dc:	cbnz	x0, 50568 <mpfr_li2@@Base+0x1c78>
   506e0:	ldr	x0, [x29, #120]
   506e4:	add	x27, x1, x0, lsl #3
   506e8:	mov	x0, x1
   506ec:	b	50700 <mpfr_li2@@Base+0x1e10>
   506f0:	ldr	x2, [x0, #8]
   506f4:	add	x2, x2, #0x1
   506f8:	str	x2, [x0, #8]!
   506fc:	cbnz	x2, 50568 <mpfr_li2@@Base+0x1c78>
   50700:	cmp	x27, x0
   50704:	b.ne	506f0 <mpfr_li2@@Base+0x1e00>  // b.any
   50708:	b	50568 <mpfr_li2@@Base+0x1c78>
   5070c:	ldr	x0, [x29, #168]
   50710:	cmp	x0, #0x1
   50714:	b.ne	508c4 <mpfr_li2@@Base+0x1fd4>  // b.any
   50718:	ldr	x0, [x29, #160]
   5071c:	mov	x14, x8
   50720:	ldr	x0, [x25, x0]
   50724:	umulh	x1, x0, x0
   50728:	mul	x0, x0, x0
   5072c:	stp	x0, x1, [x8]
   50730:	b	504d0 <mpfr_li2@@Base+0x1be0>
   50734:	ldr	x4, [x29, #168]
   50738:	mov	x2, x23
   5073c:	mov	x0, x8
   50740:	mov	x3, x21
   50744:	str	x8, [x29, #144]
   50748:	sub	x22, x20, x22
   5074c:	bl	c7a0 <__gmpn_mul@plt>
   50750:	ldr	x0, [x29, #152]
   50754:	cmp	w24, #0x1
   50758:	ldr	x8, [x29, #144]
   5075c:	sub	x23, x0, x22
   50760:	add	x23, x8, x23, lsl #3
   50764:	b.ne	505a0 <mpfr_li2@@Base+0x1cb0>  // b.any
   50768:	sub	x1, x23, #0x8
   5076c:	mov	w3, w24
   50770:	lsl	x24, x20, #6
   50774:	mov	x0, x1
   50778:	add	x2, x22, #0x1
   5077c:	sub	x24, x24, x19
   50780:	bl	bcc0 <__gmpn_lshift@plt>
   50784:	cmp	x24, #0x0
   50788:	ldr	x1, [x23]
   5078c:	b.gt	505b4 <mpfr_li2@@Base+0x1cc4>
   50790:	ldur	x0, [x23, #-8]
   50794:	lsr	x0, x0, #63
   50798:	adds	x1, x0, x1
   5079c:	str	x1, [x23]
   507a0:	b.cc	507e8 <mpfr_li2@@Base+0x1ef8>  // b.lo, b.ul, b.last
   507a4:	add	x1, x23, #0x8
   507a8:	add	x2, x23, x22, lsl #3
   507ac:	b	507c0 <mpfr_li2@@Base+0x1ed0>
   507b0:	ldr	x0, [x1]
   507b4:	add	x0, x0, #0x1
   507b8:	str	x0, [x1], #8
   507bc:	cbnz	x0, 507e8 <mpfr_li2@@Base+0x1ef8>
   507c0:	cmp	x2, x1
   507c4:	b.ne	507b0 <mpfr_li2@@Base+0x1ec0>  // b.any
   507c8:	adrp	x2, 63000 <mpfr_bases@@Base+0xe58>
   507cc:	adrp	x0, 63000 <mpfr_bases@@Base+0xe58>
   507d0:	add	x2, x2, #0xe38
   507d4:	add	x0, x0, #0xe40
   507d8:	mov	w1, #0x17e                 	// #382
   507dc:	bl	cb40 <mpfr_assert_fail@plt>
   507e0:	and	x0, x1, x3
   507e4:	str	x0, [x23]
   507e8:	ldr	x2, [x29, #160]
   507ec:	sub	x22, x22, x26
   507f0:	add	x27, x23, x2
   507f4:	cbnz	x28, 50818 <mpfr_li2@@Base+0x1f28>
   507f8:	cmp	x26, #0x0
   507fc:	ccmp	x25, x23, #0x4, gt
   50800:	b.ne	50900 <mpfr_li2@@Base+0x2010>  // b.any
   50804:	cbnz	x22, 50910 <mpfr_li2@@Base+0x2020>
   50808:	ldr	x0, [x29, #184]
   5080c:	cbz	x0, 506a8 <mpfr_li2@@Base+0x1db8>
   50810:	bl	c410 <mpfr_tmp_free@plt>
   50814:	b	506a8 <mpfr_li2@@Base+0x1db8>
   50818:	cbnz	x22, 509c0 <mpfr_li2@@Base+0x20d0>
   5081c:	cmp	x26, #0x0
   50820:	mov	x1, #0x0                   	// #0
   50824:	b.le	50808 <mpfr_li2@@Base+0x1f18>
   50828:	ldr	x0, [x23, x1, lsl #3]
   5082c:	mvn	x0, x0
   50830:	str	x0, [x25, x1, lsl #3]
   50834:	add	x1, x1, #0x1
   50838:	cmp	x1, x26
   5083c:	b.ne	50828 <mpfr_li2@@Base+0x1f38>  // b.any
   50840:	ldr	x0, [x25]
   50844:	add	x0, x0, #0x1
   50848:	str	x0, [x25]
   5084c:	cbnz	x0, 50978 <mpfr_li2@@Base+0x2088>
   50850:	mov	x0, #0x1                   	// #1
   50854:	b	5086c <mpfr_li2@@Base+0x1f7c>
   50858:	ldr	x1, [x25, x0, lsl #3]
   5085c:	add	x1, x1, #0x1
   50860:	str	x1, [x25, x0, lsl #3]
   50864:	add	x0, x0, #0x1
   50868:	cbnz	x1, 50978 <mpfr_li2@@Base+0x2088>
   5086c:	cmp	x20, x0
   50870:	b.gt	50858 <mpfr_li2@@Base+0x1f68>
   50874:	ldr	x2, [x29, #160]
   50878:	ldr	x0, [x25, x2]
   5087c:	sub	x1, x0, #0x1
   50880:	str	x1, [x25, x2]
   50884:	cbz	x0, 50a64 <mpfr_li2@@Base+0x2174>
   50888:	mov	x2, #0x1                   	// #1
   5088c:	ldr	x1, [x25]
   50890:	mov	x0, #0x1                   	// #1
   50894:	lsl	x6, x0, x24
   50898:	sub	x3, x1, x6
   5089c:	str	x3, [x25]
   508a0:	cmp	x6, x1
   508a4:	b.hi	50968 <mpfr_li2@@Base+0x2078>  // b.pmore
   508a8:	b	50620 <mpfr_li2@@Base+0x1d30>
   508ac:	ldr	x1, [x10]
   508b0:	ldr	x0, [x14]
   508b4:	umulh	x2, x0, x1
   508b8:	mul	x0, x0, x1
   508bc:	stp	x0, x2, [x13]
   508c0:	b	50518 <mpfr_li2@@Base+0x1c28>
   508c4:	ldr	x3, [x29, #168]
   508c8:	mov	x0, x8
   508cc:	mov	x2, x21
   508d0:	mov	x1, x21
   508d4:	str	x10, [x29, #104]
   508d8:	stp	x12, x11, [x29, #128]
   508dc:	str	x8, [x29, #144]
   508e0:	bl	c470 <__gmpn_mul_n@plt>
   508e4:	ldp	x10, x0, [x29, #104]
   508e8:	ldp	x12, x11, [x29, #128]
   508ec:	ldr	x8, [x29, #144]
   508f0:	add	x14, x8, #0x8
   508f4:	cmp	x12, x0
   508f8:	csel	x14, x14, x8, lt  // lt = tstop
   508fc:	b	504d0 <mpfr_li2@@Base+0x1be0>
   50900:	mov	x1, x23
   50904:	mov	x0, x25
   50908:	bl	ba10 <memcpy@plt>
   5090c:	cbz	x22, 50808 <mpfr_li2@@Base+0x1f18>
   50910:	mov	x2, x27
   50914:	mov	x3, x22
   50918:	mov	x1, x21
   5091c:	mov	x0, x21
   50920:	bl	c5a0 <__gmpn_add_n@plt>
   50924:	cbz	x0, 50808 <mpfr_li2@@Base+0x1f18>
   50928:	mov	x3, x22
   5092c:	b	50944 <mpfr_li2@@Base+0x2054>
   50930:	ldr	x0, [x21, x3, lsl #3]
   50934:	add	x0, x0, #0x1
   50938:	str	x0, [x21, x3, lsl #3]
   5093c:	add	x3, x3, #0x1
   50940:	cbnz	x0, 50808 <mpfr_li2@@Base+0x1f18>
   50944:	ldr	x0, [x29, #168]
   50948:	cmp	x3, x0
   5094c:	b.lt	50930 <mpfr_li2@@Base+0x2040>  // b.tstop
   50950:	b	50888 <mpfr_li2@@Base+0x1f98>
   50954:	ldr	x1, [x25, x0, lsl #3]
   50958:	sub	x3, x1, #0x1
   5095c:	str	x3, [x25, x0, lsl #3]
   50960:	add	x0, x0, #0x1
   50964:	cbnz	x1, 50620 <mpfr_li2@@Base+0x1d30>
   50968:	cmp	x20, x0
   5096c:	b.gt	50954 <mpfr_li2@@Base+0x2064>
   50970:	cmp	x2, #0x1
   50974:	b.eq	50808 <mpfr_li2@@Base+0x1f18>  // b.none
   50978:	ldr	x1, [x29, #160]
   5097c:	ldr	x2, [x25, x1]
   50980:	sub	x0, x2, #0x1
   50984:	str	x0, [x25, x1]
   50988:	cbnz	x2, 50808 <mpfr_li2@@Base+0x1f18>
   5098c:	ldr	x0, [x29, #168]
   50990:	add	x5, x21, #0x8
   50994:	add	x19, x21, x0, lsl #3
   50998:	b	509ac <mpfr_li2@@Base+0x20bc>
   5099c:	ldr	x0, [x5]
   509a0:	sub	x1, x0, #0x1
   509a4:	str	x1, [x5], #8
   509a8:	cbnz	x0, 509b8 <mpfr_li2@@Base+0x20c8>
   509ac:	cmp	x5, x19
   509b0:	b.ne	5099c <mpfr_li2@@Base+0x20ac>  // b.any
   509b4:	sub	x2, x2, #0x1
   509b8:	cbnz	x2, 5088c <mpfr_li2@@Base+0x1f9c>
   509bc:	b	50808 <mpfr_li2@@Base+0x1f18>
   509c0:	mov	x2, x27
   509c4:	mov	x3, x22
   509c8:	mov	x1, x21
   509cc:	mov	x0, x21
   509d0:	bl	be60 <__gmpn_sub_n@plt>
   509d4:	cbz	x0, 5081c <mpfr_li2@@Base+0x1f2c>
   509d8:	mov	x3, x22
   509dc:	nop
   509e0:	ldr	x0, [x21, x3, lsl #3]
   509e4:	sub	x1, x0, #0x1
   509e8:	str	x1, [x21, x3, lsl #3]
   509ec:	add	x3, x3, #0x1
   509f0:	cbz	x0, 509e0 <mpfr_li2@@Base+0x20f0>
   509f4:	b	5081c <mpfr_li2@@Base+0x1f2c>
   509f8:	sub	x5, x5, x26
   509fc:	mov	x2, x20
   50a00:	mov	x11, x20
   50a04:	add	x10, x10, x5, lsl #3
   50a08:	b	503f0 <mpfr_li2@@Base+0x1b00>
   50a0c:	ldr	x0, [x23]
   50a10:	and	x0, x0, x3
   50a14:	str	x0, [x23]
   50a18:	b	507e8 <mpfr_li2@@Base+0x1ef8>
   50a1c:	add	x0, x29, #0xb8
   50a20:	stp	x10, x12, [x29, #104]
   50a24:	stp	x8, x14, [x29, #128]
   50a28:	str	x11, [x29, #144]
   50a2c:	bl	bdc0 <mpfr_tmp_allocate@plt>
   50a30:	mov	x13, x0
   50a34:	ldp	x10, x12, [x29, #104]
   50a38:	ldp	x8, x14, [x29, #128]
   50a3c:	ldr	x11, [x29, #144]
   50a40:	b	504f0 <mpfr_li2@@Base+0x1c00>
   50a44:	add	x0, x29, #0xb8
   50a48:	stp	x10, x12, [x29, #128]
   50a4c:	str	x11, [x29, #144]
   50a50:	bl	bdc0 <mpfr_tmp_allocate@plt>
   50a54:	mov	x8, x0
   50a58:	ldp	x10, x12, [x29, #128]
   50a5c:	ldr	x11, [x29, #144]
   50a60:	b	504b8 <mpfr_li2@@Base+0x1bc8>
   50a64:	mov	x2, #0x1                   	// #1
   50a68:	b	5098c <mpfr_li2@@Base+0x209c>
   50a6c:	nop

0000000000050a70 <mpfr_rec_sqrt@@Base>:
   50a70:	stp	x29, x30, [sp, #-160]!
   50a74:	mov	x29, sp
   50a78:	stp	x21, x22, [sp, #32]
   50a7c:	ldr	x22, [x1, #16]
   50a80:	stp	x19, x20, [sp, #16]
   50a84:	mov	x20, x0
   50a88:	stp	x23, x24, [sp, #48]
   50a8c:	stp	x25, x26, [sp, #64]
   50a90:	stp	x27, x28, [sp, #80]
   50a94:	mov	w28, w2
   50a98:	mov	x27, x1
   50a9c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   50aa0:	cmp	x22, x2
   50aa4:	b.le	50c78 <mpfr_rec_sqrt@@Base+0x208>
   50aa8:	ldr	w0, [x1, #8]
   50aac:	tbnz	w0, #31, 50ca0 <mpfr_rec_sqrt@@Base+0x230>
   50ab0:	ldr	x9, [x20]
   50ab4:	and	x0, x22, #0x1
   50ab8:	eor	x1, x0, #0x1
   50abc:	str	x1, [x29, #96]
   50ac0:	sub	x8, x9, #0x1
   50ac4:	mov	w19, w1
   50ac8:	mov	w1, #0x1                   	// #1
   50acc:	asr	x22, x8, #6
   50ad0:	add	x2, x22, #0x1
   50ad4:	stp	x2, x0, [x29, #112]
   50ad8:	add	x0, x29, #0x98
   50adc:	lsl	x6, x2, #6
   50ae0:	str	x0, [x29, #104]
   50ae4:	add	x0, x9, #0xb
   50ae8:	cmp	x6, x0
   50aec:	csel	x26, x6, x0, ge  // ge = tcont
   50af0:	cmp	x27, x20
   50af4:	cset	w0, eq  // eq = none
   50af8:	cmp	w28, #0x0
   50afc:	cinc	x25, x9, eq  // eq = none
   50b00:	str	w0, [x29, #132]
   50b04:	ldr	x24, [x27]
   50b08:	str	w1, [x20, #8]
   50b0c:	ldr	w0, [x29, #132]
   50b10:	sub	x21, x26, #0x1
   50b14:	str	xzr, [x29, #152]
   50b18:	asr	x21, x21, #6
   50b1c:	cmp	w0, #0x0
   50b20:	ccmp	x22, x21, #0x1, eq  // eq = none
   50b24:	add	x21, x21, #0x1
   50b28:	b.lt	50c30 <mpfr_rec_sqrt@@Base+0x1c0>  // b.tstop
   50b2c:	ldr	x23, [x20, #24]
   50b30:	mov	w4, w19
   50b34:	ldr	x2, [x27, #24]
   50b38:	mov	x3, x24
   50b3c:	mov	x1, x26
   50b40:	mov	x0, x23
   50b44:	str	x9, [x29, #136]
   50b48:	bl	503a0 <mpfr_li2@@Base+0x1ab0>
   50b4c:	cmp	x26, x24
   50b50:	mov	x3, x25
   50b54:	cset	x2, lt  // lt = tstop
   50b58:	mov	x1, x21
   50b5c:	sub	x2, x26, x2
   50b60:	mov	x0, x23
   50b64:	bl	c370 <mpfr_round_p@plt>
   50b68:	ldr	x9, [x29, #136]
   50b6c:	cbz	w0, 50cd8 <mpfr_rec_sqrt@@Base+0x268>
   50b70:	ldr	x0, [x20, #24]
   50b74:	mov	x1, x23
   50b78:	mov	x4, x9
   50b7c:	mov	x2, x26
   50b80:	add	x6, x29, #0x94
   50b84:	mov	w5, w28
   50b88:	mov	w3, #0x0                   	// #0
   50b8c:	bl	ca20 <mpfr_round_raw@plt>
   50b90:	ldr	x1, [x27, #16]
   50b94:	sxtw	x19, w19
   50b98:	sub	x1, x1, #0x1
   50b9c:	sub	x19, x19, x1
   50ba0:	add	x19, x19, x19, lsr #63
   50ba4:	asr	x19, x19, #1
   50ba8:	str	x19, [x20, #16]
   50bac:	cbnz	w0, 50cf8 <mpfr_rec_sqrt@@Base+0x288>
   50bb0:	ldr	x0, [x29, #152]
   50bb4:	cbnz	x0, 50cf0 <mpfr_rec_sqrt@@Base+0x280>
   50bb8:	mrs	x2, tpidr_el0
   50bbc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   50bc0:	ldr	x1, [x0, #2512]
   50bc4:	add	x0, x0, #0x9d0
   50bc8:	blr	x1
   50bcc:	ldr	x3, [x20, #16]
   50bd0:	ldr	x0, [x2, x0]
   50bd4:	ldr	w1, [x29, #148]
   50bd8:	cmp	x3, x0
   50bdc:	b.lt	50bfc <mpfr_rec_sqrt@@Base+0x18c>  // b.tstop
   50be0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   50be4:	ldr	x4, [x0, #2544]
   50be8:	add	x0, x0, #0x9f0
   50bec:	blr	x4
   50bf0:	ldr	x0, [x2, x0]
   50bf4:	cmp	x3, x0
   50bf8:	b.le	50c50 <mpfr_rec_sqrt@@Base+0x1e0>
   50bfc:	mov	w2, w28
   50c00:	mov	x0, x20
   50c04:	bl	cb30 <mpfr_check_range@plt>
   50c08:	mov	w1, w0
   50c0c:	mov	sp, x29
   50c10:	mov	w0, w1
   50c14:	ldp	x19, x20, [sp, #16]
   50c18:	ldp	x21, x22, [sp, #32]
   50c1c:	ldp	x23, x24, [sp, #48]
   50c20:	ldp	x25, x26, [sp, #64]
   50c24:	ldp	x27, x28, [sp, #80]
   50c28:	ldp	x29, x30, [sp], #160
   50c2c:	ret
   50c30:	lsl	x1, x21, #3
   50c34:	cmp	x1, #0x4, lsl #12
   50c38:	b.hi	50d40 <mpfr_rec_sqrt@@Base+0x2d0>  // b.pmore
   50c3c:	add	x1, x1, #0xf
   50c40:	and	x1, x1, #0xfffffffffffffff0
   50c44:	sub	sp, sp, x1
   50c48:	mov	x23, sp
   50c4c:	b	50b30 <mpfr_rec_sqrt@@Base+0xc0>
   50c50:	cbz	w1, 50c0c <mpfr_rec_sqrt@@Base+0x19c>
   50c54:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   50c58:	ldr	x3, [x0, #2576]
   50c5c:	add	x0, x0, #0xa10
   50c60:	blr	x3
   50c64:	add	x0, x2, x0
   50c68:	ldr	w2, [x0]
   50c6c:	orr	w2, w2, #0x8
   50c70:	str	w2, [x0]
   50c74:	b	50c0c <mpfr_rec_sqrt@@Base+0x19c>
   50c78:	mov	x0, #0x2                   	// #2
   50c7c:	movk	x0, #0x8000, lsl #48
   50c80:	cmp	x22, x0
   50c84:	b.eq	50ca0 <mpfr_rec_sqrt@@Base+0x230>  // b.none
   50c88:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   50c8c:	cmp	x22, x0
   50c90:	b.eq	50dcc <mpfr_rec_sqrt@@Base+0x35c>  // b.none
   50c94:	ldr	w1, [x1, #8]
   50c98:	tbz	w1, #31, 50d18 <mpfr_rec_sqrt@@Base+0x2a8>
   50c9c:	nop
   50ca0:	mrs	x1, tpidr_el0
   50ca4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   50ca8:	ldr	x2, [x0, #2576]
   50cac:	add	x0, x0, #0xa10
   50cb0:	blr	x2
   50cb4:	add	x0, x1, x0
   50cb8:	mov	x2, #0x2                   	// #2
   50cbc:	movk	x2, #0x8000, lsl #48
   50cc0:	str	x2, [x20, #16]
   50cc4:	mov	w1, #0x0                   	// #0
   50cc8:	ldr	w2, [x0]
   50ccc:	orr	w2, w2, #0x4
   50cd0:	str	w2, [x0]
   50cd4:	b	50c0c <mpfr_rec_sqrt@@Base+0x19c>
   50cd8:	ldr	x0, [x29, #120]
   50cdc:	cbnz	x0, 50d58 <mpfr_rec_sqrt@@Base+0x2e8>
   50ce0:	ldr	x0, [x29, #152]
   50ce4:	cbnz	x0, 50d2c <mpfr_rec_sqrt@@Base+0x2bc>
   50ce8:	add	x26, x26, #0x40
   50cec:	b	50b0c <mpfr_rec_sqrt@@Base+0x9c>
   50cf0:	bl	c410 <mpfr_tmp_free@plt>
   50cf4:	b	50bb8 <mpfr_rec_sqrt@@Base+0x148>
   50cf8:	ldr	x1, [x20, #24]
   50cfc:	add	x19, x19, #0x1
   50d00:	ldr	x2, [x29, #112]
   50d04:	str	x19, [x20, #16]
   50d08:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   50d0c:	add	x23, x1, x2, lsl #3
   50d10:	stur	x0, [x23, #-8]
   50d14:	b	50bb0 <mpfr_rec_sqrt@@Base+0x140>
   50d18:	mov	w2, #0x1                   	// #1
   50d1c:	mov	w1, #0x0                   	// #0
   50d20:	str	w2, [x20, #8]
   50d24:	str	x0, [x20, #16]
   50d28:	b	50c0c <mpfr_rec_sqrt@@Base+0x19c>
   50d2c:	str	x9, [x29, #136]
   50d30:	bl	c410 <mpfr_tmp_free@plt>
   50d34:	add	x26, x26, #0x40
   50d38:	ldr	x9, [x29, #136]
   50d3c:	b	50b0c <mpfr_rec_sqrt@@Base+0x9c>
   50d40:	ldr	x0, [x29, #104]
   50d44:	str	x9, [x29, #136]
   50d48:	bl	bdc0 <mpfr_tmp_allocate@plt>
   50d4c:	mov	x23, x0
   50d50:	ldr	x9, [x29, #136]
   50d54:	b	50b30 <mpfr_rec_sqrt@@Base+0xc0>
   50d58:	ldr	x2, [x27, #16]
   50d5c:	mov	x0, x27
   50d60:	mov	x1, #0x1                   	// #1
   50d64:	sub	x2, x2, #0x1
   50d68:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   50d6c:	ldr	x9, [x29, #136]
   50d70:	cbnz	w0, 50ce0 <mpfr_rec_sqrt@@Base+0x270>
   50d74:	lsl	x1, x21, #6
   50d78:	mov	x0, #0x1                   	// #1
   50d7c:	ldr	x2, [x23]
   50d80:	sub	x1, x1, x26
   50d84:	lsl	x1, x0, x1
   50d88:	adds	x1, x1, x2
   50d8c:	str	x1, [x23]
   50d90:	b.cs	50dc0 <mpfr_rec_sqrt@@Base+0x350>  // b.hs, b.nlast
   50d94:	add	x21, x23, x21, lsl #3
   50d98:	ldr	w0, [x29, #96]
   50d9c:	add	w19, w0, #0x2
   50da0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   50da4:	stur	x0, [x21, #-8]
   50da8:	b	50b70 <mpfr_rec_sqrt@@Base+0x100>
   50dac:	ldr	x1, [x23, x0, lsl #3]
   50db0:	add	x1, x1, #0x1
   50db4:	str	x1, [x23, x0, lsl #3]
   50db8:	add	x0, x0, #0x1
   50dbc:	cbnz	x1, 50d94 <mpfr_rec_sqrt@@Base+0x324>
   50dc0:	cmp	x21, x0
   50dc4:	b.gt	50dac <mpfr_rec_sqrt@@Base+0x33c>
   50dc8:	b	50d94 <mpfr_rec_sqrt@@Base+0x324>
   50dcc:	mrs	x1, tpidr_el0
   50dd0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   50dd4:	ldr	x3, [x0, #2576]
   50dd8:	add	x0, x0, #0xa10
   50ddc:	blr	x3
   50de0:	add	x0, x1, x0
   50de4:	str	x2, [x20, #16]
   50de8:	mov	w3, #0x1                   	// #1
   50dec:	mov	w1, #0x0                   	// #0
   50df0:	str	w3, [x20, #8]
   50df4:	ldr	w2, [x0]
   50df8:	orr	w2, w2, #0x20
   50dfc:	str	w2, [x0]
   50e00:	b	50c0c <mpfr_rec_sqrt@@Base+0x19c>
   50e04:	nop

0000000000050e08 <mpfr_min_prec@@Base>:
   50e08:	stp	x29, x30, [sp, #-32]!
   50e0c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   50e10:	mov	x29, sp
   50e14:	str	x19, [sp, #16]
   50e18:	mov	x19, x0
   50e1c:	ldr	x0, [x0, #16]
   50e20:	cmp	x0, x1
   50e24:	b.le	50e54 <mpfr_min_prec@@Base+0x4c>
   50e28:	ldr	x0, [x19, #24]
   50e2c:	mov	x1, #0x0                   	// #0
   50e30:	bl	caa0 <__gmpn_scan1@plt>
   50e34:	ldr	x1, [x19]
   50e38:	ldr	x19, [sp, #16]
   50e3c:	sub	x1, x1, #0x1
   50e40:	and	x1, x1, #0xffffffffffffffc0
   50e44:	add	x1, x1, #0x40
   50e48:	sub	x0, x1, x0
   50e4c:	ldp	x29, x30, [sp], #32
   50e50:	ret
   50e54:	mov	x0, #0x0                   	// #0
   50e58:	ldr	x19, [sp, #16]
   50e5c:	ldp	x29, x30, [sp], #32
   50e60:	ret
   50e64:	nop

0000000000050e68 <mpfr_buildopt_tls_p@@Base>:
   50e68:	mov	w0, #0x1                   	// #1
   50e6c:	ret

0000000000050e70 <mpfr_buildopt_float128_p@@Base>:
   50e70:	mov	w0, #0x0                   	// #0
   50e74:	ret

0000000000050e78 <mpfr_buildopt_decimal_p@@Base>:
   50e78:	mov	w0, #0x0                   	// #0
   50e7c:	ret

0000000000050e80 <mpfr_buildopt_gmpinternals_p@@Base>:
   50e80:	mov	w0, #0x0                   	// #0
   50e84:	ret

0000000000050e88 <mpfr_buildopt_sharedcache_p@@Base>:
   50e88:	mov	w0, #0x0                   	// #0
   50e8c:	ret

0000000000050e90 <mpfr_buildopt_tune_case@@Base>:
   50e90:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   50e94:	add	x0, x0, #0x2d0
   50e98:	ret
   50e9c:	nop

0000000000050ea0 <mpfr_digamma@@Base>:
   50ea0:	stp	x29, x30, [sp, #-400]!
   50ea4:	mov	x29, sp
   50ea8:	str	x1, [sp, #96]
   50eac:	ldr	x1, [x1, #16]
   50eb0:	stp	x19, x20, [sp, #16]
   50eb4:	stp	x27, x28, [sp, #80]
   50eb8:	mov	x28, x0
   50ebc:	str	w2, [sp, #136]
   50ec0:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   50ec4:	cmp	x1, x2
   50ec8:	b.le	51690 <mpfr_digamma@@Base+0x7f0>
   50ecc:	ldr	x0, [sp, #96]
   50ed0:	ldr	w20, [x0, #8]
   50ed4:	tbnz	w20, #31, 50ffc <mpfr_digamma@@Base+0x15c>
   50ed8:	mrs	x5, tpidr_el0
   50edc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   50ee0:	ldr	x2, [x0, #2576]
   50ee4:	add	x0, x0, #0xa10
   50ee8:	blr	x2
   50eec:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   50ef0:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   50ef4:	str	x5, [sp, #144]
   50ef8:	ldr	w0, [x5, x0]
   50efc:	str	w0, [sp, #140]
   50f00:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   50f04:	ldr	x3, [x0, #2512]
   50f08:	add	x0, x0, #0x9d0
   50f0c:	blr	x3
   50f10:	add	x3, x5, x0
   50f14:	ldr	x0, [x5, x0]
   50f18:	str	x0, [sp, #184]
   50f1c:	str	x4, [x3]
   50f20:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   50f24:	ldr	x6, [x0, #2544]
   50f28:	add	x0, x0, #0x9f0
   50f2c:	blr	x6
   50f30:	ldr	x3, [x5, x0]
   50f34:	str	x2, [x5, x0]
   50f38:	str	x3, [sp, #176]
   50f3c:	cmn	x1, #0x2
   50f40:	b.ge	51080 <mpfr_digamma@@Base+0x1e0>  // b.tcont
   50f44:	ldr	x0, [sp, #96]
   50f48:	ldr	x2, [x0]
   50f4c:	ldr	x0, [x28]
   50f50:	cmp	x0, x2
   50f54:	csel	x0, x0, x2, ge  // ge = tcont
   50f58:	neg	x0, x0, lsl #1
   50f5c:	cmp	x0, x1
   50f60:	b.ge	516c8 <mpfr_digamma@@Base+0x828>  // b.tcont
   50f64:	ldr	w2, [sp, #136]
   50f68:	mov	x0, x28
   50f6c:	ldr	x1, [sp, #96]
   50f70:	bl	51838 <mpfr_digamma@@Base+0x998>
   50f74:	mov	w19, w0
   50f78:	ldr	x2, [sp, #144]
   50f7c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   50f80:	ldr	x1, [x0, #2576]
   50f84:	add	x0, x0, #0xa10
   50f88:	blr	x1
   50f8c:	ldr	w1, [sp, #140]
   50f90:	str	w1, [x2, x0]
   50f94:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   50f98:	ldr	x3, [x0, #2512]
   50f9c:	add	x0, x0, #0x9d0
   50fa0:	blr	x3
   50fa4:	ldr	x3, [sp, #184]
   50fa8:	str	x3, [x2, x0]
   50fac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   50fb0:	ldr	x4, [x0, #2544]
   50fb4:	add	x0, x0, #0x9f0
   50fb8:	blr	x4
   50fbc:	ldr	x1, [x28, #16]
   50fc0:	ldr	x4, [sp, #176]
   50fc4:	str	x4, [x2, x0]
   50fc8:	cmp	x1, x4
   50fcc:	ccmp	x1, x3, #0x1, le
   50fd0:	b.ge	513fc <mpfr_digamma@@Base+0x55c>  // b.tcont
   50fd4:	ldr	w2, [sp, #136]
   50fd8:	mov	w1, w19
   50fdc:	mov	x0, x28
   50fe0:	bl	cb30 <mpfr_check_range@plt>
   50fe4:	mov	w19, w0
   50fe8:	mov	w0, w19
   50fec:	ldp	x19, x20, [sp, #16]
   50ff0:	ldp	x27, x28, [sp, #80]
   50ff4:	ldp	x29, x30, [sp], #400
   50ff8:	ret
   50ffc:	mov	x19, x0
   51000:	bl	c160 <mpfr_integer_p@plt>
   51004:	cbnz	w0, 514a8 <mpfr_digamma@@Base+0x608>
   51008:	mrs	x5, tpidr_el0
   5100c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   51010:	ldr	x1, [x0, #2576]
   51014:	add	x0, x0, #0xa10
   51018:	blr	x1
   5101c:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   51020:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   51024:	ldr	x1, [x19, #16]
   51028:	str	x5, [sp, #144]
   5102c:	ldr	w0, [x5, x0]
   51030:	str	w0, [sp, #140]
   51034:	ldr	w20, [x19, #8]
   51038:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   5103c:	ldr	x3, [x0, #2512]
   51040:	add	x0, x0, #0x9d0
   51044:	blr	x3
   51048:	add	x3, x5, x0
   5104c:	ldr	x0, [x5, x0]
   51050:	str	x0, [sp, #184]
   51054:	str	x4, [x3]
   51058:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   5105c:	ldr	x7, [x0, #2544]
   51060:	add	x0, x0, #0x9f0
   51064:	blr	x7
   51068:	ldr	x3, [x5, x0]
   5106c:	str	x2, [x5, x0]
   51070:	str	x3, [sp, #176]
   51074:	cmn	x1, #0x2
   51078:	b.lt	50f44 <mpfr_digamma@@Base+0xa4>  // b.tstop
   5107c:	tbnz	w20, #31, 50f64 <mpfr_digamma@@Base+0xc4>
   51080:	tbnz	x1, #63, 50f64 <mpfr_digamma@@Base+0xc4>
   51084:	ldr	x0, [sp, #96]
   51088:	stp	x21, x22, [sp, #32]
   5108c:	ldr	x20, [x28]
   51090:	ldr	x0, [x0]
   51094:	add	x20, x20, #0xa
   51098:	cmp	x1, x0
   5109c:	csinc	x0, x1, x0, gt
   510a0:	str	x0, [sp, #128]
   510a4:	cmp	x1, x20
   510a8:	b.gt	51434 <mpfr_digamma@@Base+0x594>
   510ac:	add	x22, sp, #0xd0
   510b0:	stp	x23, x24, [sp, #48]
   510b4:	stp	x25, x26, [sp, #64]
   510b8:	add	x2, sp, #0xf0
   510bc:	ldr	x1, [sp, #128]
   510c0:	add	x21, sp, #0x110
   510c4:	mov	x19, x2
   510c8:	mov	x0, x21
   510cc:	str	x2, [sp, #112]
   510d0:	add	x25, sp, #0x150
   510d4:	bl	ca80 <mpfr_init2@plt>
   510d8:	add	x27, sp, #0x170
   510dc:	mov	x1, x20
   510e0:	mov	x0, x22
   510e4:	bl	ca80 <mpfr_init2@plt>
   510e8:	mov	x0, x19
   510ec:	mov	x1, x20
   510f0:	bl	ca80 <mpfr_init2@plt>
   510f4:	add	x19, sp, #0x130
   510f8:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   510fc:	add	x0, x0, #0x2d8
   51100:	stp	x28, x0, [sp, #192]
   51104:	mov	x0, #0x40                  	// #64
   51108:	str	x0, [sp, #120]
   5110c:	nop
   51110:	ldr	x1, [sp, #96]
   51114:	adds	x0, x20, #0x3
   51118:	add	x23, x20, #0x6
   5111c:	mov	w2, #0x0                   	// #0
   51120:	csel	x23, x23, x0, mi  // mi = first
   51124:	mov	x0, #0x2                   	// #2
   51128:	ldr	w3, [x1, #8]
   5112c:	cmp	x23, #0x7
   51130:	asr	x23, x23, #2
   51134:	mov	x24, #0x0                   	// #0
   51138:	csel	x23, x23, x0, hi  // hi = pmore
   5113c:	mov	x0, x21
   51140:	bl	c6a0 <mpfr_set4@plt>
   51144:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   51148:	mov	w1, #0x1                   	// #1
   5114c:	str	w1, [sp, #248]
   51150:	str	x0, [sp, #256]
   51154:	nop
   51158:	mov	x1, x23
   5115c:	mov	x0, x21
   51160:	mov	x2, #0x0                   	// #0
   51164:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   51168:	tbz	w0, #31, 511e8 <mpfr_digamma@@Base+0x348>
   5116c:	mov	x2, x21
   51170:	mov	w3, #0x0                   	// #0
   51174:	mov	x1, #0x1                   	// #1
   51178:	mov	x0, x22
   5117c:	bl	c2f0 <mpfr_ui_div@plt>
   51180:	add	x24, x24, #0x1
   51184:	ldr	x0, [sp, #112]
   51188:	mov	x2, x22
   5118c:	mov	w3, #0x0                   	// #0
   51190:	mov	x1, x0
   51194:	bl	c1a0 <mpfr_add@plt>
   51198:	mov	x1, x21
   5119c:	mov	x0, x21
   511a0:	mov	w3, #0x1                   	// #1
   511a4:	mov	x2, #0x1                   	// #1
   511a8:	bl	c260 <mpfr_add_ui@plt>
   511ac:	cbz	w0, 51158 <mpfr_digamma@@Base+0x2b8>
   511b0:	ldr	x0, [sp, #128]
   511b4:	mov	w2, #0x1                   	// #1
   511b8:	add	x0, x0, #0x1
   511bc:	str	x0, [sp, #128]
   511c0:	mov	x1, x0
   511c4:	mov	x0, x21
   511c8:	bl	c970 <mpfr_prec_round@plt>
   511cc:	mov	x0, x21
   511d0:	bl	c120 <mpfr_nextabove@plt>
   511d4:	mov	x1, x23
   511d8:	mov	x0, x21
   511dc:	mov	x2, #0x0                   	// #0
   511e0:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   511e4:	tbnz	w0, #31, 5116c <mpfr_digamma@@Base+0x2cc>
   511e8:	cmp	x24, #0x1
   511ec:	mov	x23, #0x0                   	// #0
   511f0:	b.ls	5120c <mpfr_digamma@@Base+0x36c>  // b.plast
   511f4:	nop
   511f8:	add	x24, x24, #0x1
   511fc:	add	x23, x23, #0x1
   51200:	cmp	x24, #0x3
   51204:	lsr	x24, x24, #1
   51208:	b.hi	511f8 <mpfr_digamma@@Base+0x358>  // b.pmore
   5120c:	ldr	w0, [sp, #280]
   51210:	ldr	x26, [sp, #208]
   51214:	cmp	w0, #0x0
   51218:	b.le	5161c <mpfr_digamma@@Base+0x77c>
   5121c:	ldr	x0, [sp, #288]
   51220:	cmp	x0, #0x1
   51224:	b.le	5161c <mpfr_digamma@@Base+0x77c>
   51228:	mov	x1, x26
   5122c:	mov	x0, x19
   51230:	bl	ca80 <mpfr_init2@plt>
   51234:	mov	x24, #0x2                   	// #2
   51238:	mov	x1, x26
   5123c:	mov	x0, x25
   51240:	bl	ca80 <mpfr_init2@plt>
   51244:	mov	x28, x24
   51248:	mov	x1, x26
   5124c:	mov	x0, x27
   51250:	bl	ca80 <mpfr_init2@plt>
   51254:	mov	x1, x21
   51258:	mov	x0, x22
   5125c:	mov	w2, #0x0                   	// #0
   51260:	bl	c090 <mpfr_log@plt>
   51264:	mov	x2, x21
   51268:	mov	x0, x19
   5126c:	mov	w3, #0x0                   	// #0
   51270:	mov	x1, #0x1                   	// #1
   51274:	bl	c2f0 <mpfr_ui_div@plt>
   51278:	mov	x1, x19
   5127c:	mov	x0, x19
   51280:	mov	w3, #0x0                   	// #0
   51284:	mov	x2, #0x1                   	// #1
   51288:	bl	c8f0 <mpfr_div_2ui@plt>
   5128c:	mov	x0, #0xe                   	// #14
   51290:	mov	x2, x19
   51294:	mov	x1, x22
   51298:	mov	w3, #0x0                   	// #0
   5129c:	str	x0, [sp, #104]
   512a0:	mov	x0, x22
   512a4:	bl	bb70 <mpfr_sub@plt>
   512a8:	mov	x2, x21
   512ac:	mov	x1, x21
   512b0:	mov	w3, #0x1                   	// #1
   512b4:	mov	x0, x27
   512b8:	bl	bd50 <mpfr_mul@plt>
   512bc:	mov	x2, x27
   512c0:	mov	w3, #0x2                   	// #2
   512c4:	mov	x1, #0x1                   	// #1
   512c8:	mov	x0, x27
   512cc:	bl	c2f0 <mpfr_ui_div@plt>
   512d0:	mov	x0, x19
   512d4:	mov	x1, #0x1                   	// #1
   512d8:	mov	w3, #0x0                   	// #0
   512dc:	mov	x2, #0x0                   	// #0
   512e0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   512e4:	str	x20, [sp, #152]
   512e8:	mov	x1, x21
   512ec:	mov	x0, x19
   512f0:	mov	x21, x22
   512f4:	mov	x19, x25
   512f8:	mov	x22, x1
   512fc:	mov	x25, x0
   51300:	mov	x20, x26
   51304:	mov	x26, #0x1                   	// #1
   51308:	mov	x2, x27
   5130c:	mov	x1, x25
   51310:	mov	w3, #0x2                   	// #2
   51314:	mov	x0, x25
   51318:	bl	bd50 <mpfr_mul@plt>
   5131c:	mov	x2, x24
   51320:	mov	x1, x25
   51324:	mov	w3, #0x2                   	// #2
   51328:	mov	x0, x25
   5132c:	bl	cc60 <mpfr_div_ui@plt>
   51330:	add	x2, x24, #0x1
   51334:	mov	x1, x25
   51338:	mov	w3, #0x2                   	// #2
   5133c:	mov	x0, x25
   51340:	bl	cc60 <mpfr_div_ui@plt>
   51344:	mov	x2, x24
   51348:	mov	x1, x25
   5134c:	mov	w3, #0x2                   	// #2
   51350:	mov	x0, x19
   51354:	bl	cc60 <mpfr_div_ui@plt>
   51358:	mov	x0, x26
   5135c:	bl	c830 <mpfr_bernoulli_cache@plt>
   51360:	mov	x1, x19
   51364:	mov	x2, x0
   51368:	mov	w3, #0x2                   	// #2
   5136c:	mov	x0, x19
   51370:	bl	c4d0 <mpfr_mul_z@plt>
   51374:	ldr	x5, [sp, #224]
   51378:	ldr	x4, [sp, #352]
   5137c:	stp	x4, x5, [sp, #160]
   51380:	sub	x0, x5, x20
   51384:	cmp	x4, x0
   51388:	b.lt	514f0 <mpfr_digamma@@Base+0x650>  // b.tstop
   5138c:	mov	x2, x19
   51390:	mov	x1, x21
   51394:	mov	x0, x21
   51398:	mov	w3, #0x0                   	// #0
   5139c:	bl	bb70 <mpfr_sub@plt>
   513a0:	ldp	x4, x5, [sp, #160]
   513a4:	ldr	x2, [sp, #224]
   513a8:	ldr	x0, [sp, #104]
   513ac:	sub	w1, w5, w2
   513b0:	cmp	x5, x2
   513b4:	lsl	x1, x28, x1
   513b8:	csel	x28, x1, x28, gt
   513bc:	add	x28, x28, #0x1
   513c0:	cmp	x5, x4
   513c4:	b.le	513e0 <mpfr_digamma@@Base+0x540>
   513c8:	add	x0, x0, #0x1
   513cc:	add	x4, x4, #0x1
   513d0:	cmp	x5, x4
   513d4:	add	x0, x0, x0, lsr #63
   513d8:	asr	x0, x0, #1
   513dc:	b.ne	513c8 <mpfr_digamma@@Base+0x528>  // b.any
   513e0:	add	x28, x0, x28
   513e4:	add	x26, x26, #0x1
   513e8:	ldr	x0, [sp, #104]
   513ec:	add	x24, x24, #0x2
   513f0:	add	x0, x0, #0xa
   513f4:	str	x0, [sp, #104]
   513f8:	b	51308 <mpfr_digamma@@Base+0x468>
   513fc:	cbz	w19, 50fe8 <mpfr_digamma@@Base+0x148>
   51400:	ldr	w0, [sp, #140]
   51404:	ldp	x27, x28, [sp, #80]
   51408:	orr	w1, w0, #0x8
   5140c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   51410:	ldr	x2, [x0, #2576]
   51414:	add	x0, x0, #0xa10
   51418:	blr	x2
   5141c:	ldr	x2, [sp, #144]
   51420:	str	w1, [x2, x0]
   51424:	mov	w0, w19
   51428:	ldp	x19, x20, [sp, #16]
   5142c:	ldp	x29, x30, [sp], #400
   51430:	ret
   51434:	add	x22, sp, #0xd0
   51438:	mov	x1, x20
   5143c:	mov	x0, x22
   51440:	bl	ca80 <mpfr_init2@plt>
   51444:	ldr	x1, [sp, #96]
   51448:	mov	x0, x22
   5144c:	mov	w2, #0x1                   	// #1
   51450:	bl	c090 <mpfr_log@plt>
   51454:	ldr	x1, [sp, #224]
   51458:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5145c:	cmp	x1, x0
   51460:	b.le	51494 <mpfr_digamma@@Base+0x5f4>
   51464:	ldr	w0, [sp, #136]
   51468:	ldr	x1, [sp, #208]
   5146c:	cmp	w0, #0x0
   51470:	ldr	x0, [sp, #232]
   51474:	sub	x1, x1, #0x1
   51478:	ldr	x2, [x28]
   5147c:	asr	x1, x1, #6
   51480:	add	x1, x1, #0x1
   51484:	cinc	x3, x2, eq  // eq = none
   51488:	add	x2, x2, #0xa
   5148c:	bl	c370 <mpfr_round_p@plt>
   51490:	cbnz	w0, 517d8 <mpfr_digamma@@Base+0x938>
   51494:	mov	x0, x22
   51498:	stp	x23, x24, [sp, #48]
   5149c:	stp	x25, x26, [sp, #64]
   514a0:	bl	c070 <mpfr_clear@plt>
   514a4:	b	510b8 <mpfr_digamma@@Base+0x218>
   514a8:	mrs	x1, tpidr_el0
   514ac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   514b0:	ldr	x2, [x0, #2576]
   514b4:	add	x0, x0, #0xa10
   514b8:	blr	x2
   514bc:	add	x0, x1, x0
   514c0:	mov	x1, #0x2                   	// #2
   514c4:	movk	x1, #0x8000, lsl #48
   514c8:	str	x1, [x28, #16]
   514cc:	mov	w19, #0x0                   	// #0
   514d0:	ldr	w1, [x0]
   514d4:	ldp	x27, x28, [sp, #80]
   514d8:	orr	w1, w1, #0x4
   514dc:	str	w1, [x0]
   514e0:	mov	w0, w19
   514e4:	ldp	x19, x20, [sp, #16]
   514e8:	ldp	x29, x30, [sp], #400
   514ec:	ret
   514f0:	mov	x1, x22
   514f4:	mov	x0, x25
   514f8:	mov	x22, x21
   514fc:	mov	x25, x19
   51500:	mov	x21, x1
   51504:	mov	x19, x0
   51508:	ldr	x20, [sp, #152]
   5150c:	bl	c070 <mpfr_clear@plt>
   51510:	mov	x0, x25
   51514:	bl	c070 <mpfr_clear@plt>
   51518:	mov	x0, x27
   5151c:	bl	c070 <mpfr_clear@plt>
   51520:	cmp	x28, #0x1
   51524:	mov	x24, #0x0                   	// #0
   51528:	b.le	51544 <mpfr_digamma@@Base+0x6a4>
   5152c:	nop
   51530:	add	x28, x28, #0x1
   51534:	add	x24, x24, #0x1
   51538:	asr	x28, x28, #1
   5153c:	cmp	x28, #0x1
   51540:	b.ne	51530 <mpfr_digamma@@Base+0x690>  // b.any
   51544:	ldr	x2, [sp, #112]
   51548:	mov	x1, x22
   5154c:	mov	w3, #0x0                   	// #0
   51550:	mov	x0, x22
   51554:	ldr	x26, [sp, #224]
   51558:	bl	bb70 <mpfr_sub@plt>
   5155c:	ldr	x0, [sp, #224]
   51560:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
   51564:	ldr	x3, [sp, #256]
   51568:	subs	x2, x26, x0
   5156c:	add	x2, x24, x2
   51570:	sub	x1, x3, x0
   51574:	csel	x24, x2, x24, gt
   51578:	add	x1, x23, x1
   5157c:	cmp	x0, x3
   51580:	csel	x23, x1, x23, lt  // lt = tstop
   51584:	add	x2, x24, #0x2
   51588:	cmp	x24, x23
   5158c:	add	x1, x24, #0x1
   51590:	csinc	x2, x2, x23, eq  // eq = none
   51594:	csel	x2, x2, x1, le
   51598:	cmp	x0, x4
   5159c:	b.le	515d4 <mpfr_digamma@@Base+0x734>
   515a0:	ldr	x3, [sp, #192]
   515a4:	sub	x2, x20, x2
   515a8:	ldr	w0, [sp, #136]
   515ac:	ldr	x1, [sp, #208]
   515b0:	cmp	w0, #0x0
   515b4:	ldr	x0, [sp, #232]
   515b8:	sub	x1, x1, #0x1
   515bc:	ldr	x3, [x3]
   515c0:	asr	x1, x1, #6
   515c4:	add	x1, x1, #0x1
   515c8:	cinc	x3, x3, eq  // eq = none
   515cc:	bl	c370 <mpfr_round_p@plt>
   515d0:	cbnz	w0, 5164c <mpfr_digamma@@Base+0x7ac>
   515d4:	ldr	x1, [sp, #120]
   515d8:	mov	x0, #0xfffffffffffffeff    	// #-257
   515dc:	movk	x0, #0x7fff, lsl #48
   515e0:	sub	x0, x0, x20
   515e4:	cmp	x0, x1
   515e8:	b.lt	51634 <mpfr_digamma@@Base+0x794>  // b.tstop
   515ec:	ldr	x0, [sp, #120]
   515f0:	add	x20, x20, x0
   515f4:	mov	x0, x22
   515f8:	mov	x1, x20
   515fc:	add	x2, x20, x20, lsr #63
   51600:	asr	x2, x2, #1
   51604:	str	x2, [sp, #120]
   51608:	bl	bed0 <mpfr_set_prec@plt>
   5160c:	ldr	x0, [sp, #112]
   51610:	mov	x1, x20
   51614:	bl	bed0 <mpfr_set_prec@plt>
   51618:	b	51110 <mpfr_digamma@@Base+0x270>
   5161c:	ldr	x2, [sp, #200]
   51620:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   51624:	mov	w1, #0x27                  	// #39
   51628:	add	x0, x0, #0x310
   5162c:	bl	cb40 <mpfr_assert_fail@plt>
   51630:	b	51228 <mpfr_digamma@@Base+0x388>
   51634:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   51638:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   5163c:	add	x2, x2, #0xc08
   51640:	add	x0, x0, #0x310
   51644:	mov	w1, #0x11a                 	// #282
   51648:	bl	cb40 <mpfr_assert_fail@plt>
   5164c:	ldr	w2, [sp, #136]
   51650:	mov	x1, x22
   51654:	ldr	w3, [sp, #216]
   51658:	ldr	x28, [sp, #192]
   5165c:	mov	x0, x28
   51660:	bl	c6a0 <mpfr_set4@plt>
   51664:	mov	w19, w0
   51668:	mov	x0, x22
   5166c:	bl	c070 <mpfr_clear@plt>
   51670:	ldr	x0, [sp, #112]
   51674:	bl	c070 <mpfr_clear@plt>
   51678:	mov	x0, x21
   5167c:	bl	c070 <mpfr_clear@plt>
   51680:	ldp	x21, x22, [sp, #32]
   51684:	ldp	x23, x24, [sp, #48]
   51688:	ldp	x25, x26, [sp, #64]
   5168c:	b	50f78 <mpfr_digamma@@Base+0xd8>
   51690:	mov	x0, #0x2                   	// #2
   51694:	movk	x0, #0x8000, lsl #48
   51698:	cmp	x1, x0
   5169c:	b.eq	514a8 <mpfr_digamma@@Base+0x608>  // b.none
   516a0:	ldr	x0, [sp, #96]
   516a4:	cmp	x1, x2
   516a8:	ldr	w3, [x0, #8]
   516ac:	b.ne	517a0 <mpfr_digamma@@Base+0x900>  // b.any
   516b0:	cmp	w3, #0x0
   516b4:	b.le	514a8 <mpfr_digamma@@Base+0x608>
   516b8:	mov	w19, #0x0                   	// #0
   516bc:	str	w3, [x28, #8]
   516c0:	str	x1, [x28, #16]
   516c4:	b	50fe8 <mpfr_digamma@@Base+0x148>
   516c8:	ldr	x2, [sp, #96]
   516cc:	stp	x21, x22, [sp, #32]
   516d0:	ldr	w21, [sp, #136]
   516d4:	mov	x0, x28
   516d8:	mov	x1, #0xffffffffffffffff    	// #-1
   516dc:	mov	w3, w21
   516e0:	bl	c8b0 <mpfr_si_div@plt>
   516e4:	mov	w19, w0
   516e8:	cbnz	w0, 51730 <mpfr_digamma@@Base+0x890>
   516ec:	cmp	w21, #0x4
   516f0:	b.eq	51800 <mpfr_digamma@@Base+0x960>  // b.none
   516f4:	ldr	w0, [sp, #136]
   516f8:	cmp	w0, #0x1
   516fc:	b.eq	51818 <mpfr_digamma@@Base+0x978>  // b.none
   51700:	ldr	w0, [sp, #136]
   51704:	cmp	w0, #0x2
   51708:	b.eq	51830 <mpfr_digamma@@Base+0x990>  // b.none
   5170c:	cmp	w0, #0x3
   51710:	mov	w19, #0x1                   	// #1
   51714:	b.ne	51730 <mpfr_digamma@@Base+0x890>  // b.any
   51718:	mov	x0, x28
   5171c:	bl	bdd0 <mpfr_nextbelow@plt>
   51720:	mov	w0, #0x3                   	// #3
   51724:	mov	w19, #0xffffffff            	// #-1
   51728:	str	w0, [sp, #136]
   5172c:	nop
   51730:	ldr	x3, [sp, #144]
   51734:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   51738:	ldr	x1, [x0, #2576]
   5173c:	add	x0, x0, #0xa10
   51740:	blr	x1
   51744:	ldr	w4, [sp, #140]
   51748:	ldp	x21, x22, [sp, #32]
   5174c:	ldr	w2, [x3, x0]
   51750:	ldr	x1, [x28, #16]
   51754:	orr	w2, w4, w2
   51758:	str	w2, [x3, x0]
   5175c:	str	w2, [sp, #140]
   51760:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   51764:	ldr	x2, [x0, #2512]
   51768:	add	x0, x0, #0x9d0
   5176c:	blr	x2
   51770:	ldr	x2, [sp, #184]
   51774:	str	x2, [x3, x0]
   51778:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   5177c:	ldr	x4, [x0, #2544]
   51780:	add	x0, x0, #0x9f0
   51784:	blr	x4
   51788:	ldr	x4, [sp, #176]
   5178c:	str	x4, [x3, x0]
   51790:	cmp	x1, x4
   51794:	ccmp	x1, x2, #0x1, le
   51798:	b.lt	50fd4 <mpfr_digamma@@Base+0x134>  // b.tstop
   5179c:	b	51400 <mpfr_digamma@@Base+0x560>
   517a0:	mrs	x1, tpidr_el0
   517a4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   517a8:	ldr	x4, [x0, #2576]
   517ac:	add	x0, x0, #0xa10
   517b0:	blr	x4
   517b4:	add	x0, x1, x0
   517b8:	neg	w3, w3
   517bc:	mov	w19, #0x0                   	// #0
   517c0:	str	w3, [x28, #8]
   517c4:	str	x2, [x28, #16]
   517c8:	ldr	w1, [x0]
   517cc:	orr	w1, w1, #0x20
   517d0:	str	w1, [x0]
   517d4:	b	50fe8 <mpfr_digamma@@Base+0x148>
   517d8:	ldr	w2, [sp, #136]
   517dc:	mov	x1, x22
   517e0:	ldr	w3, [sp, #216]
   517e4:	mov	x0, x28
   517e8:	bl	c6a0 <mpfr_set4@plt>
   517ec:	mov	w19, w0
   517f0:	mov	x0, x22
   517f4:	bl	c070 <mpfr_clear@plt>
   517f8:	ldp	x21, x22, [sp, #32]
   517fc:	b	50f78 <mpfr_digamma@@Base+0xd8>
   51800:	cmp	w20, #0x0
   51804:	b.gt	51718 <mpfr_digamma@@Base+0x878>
   51808:	mov	w0, #0x2                   	// #2
   5180c:	mov	w19, #0x1                   	// #1
   51810:	str	w0, [sp, #136]
   51814:	b	51730 <mpfr_digamma@@Base+0x890>
   51818:	mov	x19, x0
   5181c:	mov	w0, #0x2                   	// #2
   51820:	str	w0, [sp, #136]
   51824:	cmp	w20, #0x0
   51828:	b.gt	51730 <mpfr_digamma@@Base+0x890>
   5182c:	b	51718 <mpfr_digamma@@Base+0x878>
   51830:	mov	w19, #0x1                   	// #1
   51834:	b	51730 <mpfr_digamma@@Base+0x890>
   51838:	stp	x29, x30, [sp, #-208]!
   5183c:	mov	x29, sp
   51840:	stp	x23, x24, [sp, #48]
   51844:	mov	x24, x1
   51848:	ldr	x1, [x1, #16]
   5184c:	stp	x19, x20, [sp, #16]
   51850:	stp	x27, x28, [sp, #80]
   51854:	mov	x28, x0
   51858:	str	w2, [sp, #108]
   5185c:	ldr	x19, [x0]
   51860:	ldr	x0, [x24]
   51864:	tbnz	x1, #63, 51ab8 <mpfr_digamma@@Base+0xc18>
   51868:	cmp	x1, x0
   5186c:	csinc	x1, x1, x0, gt
   51870:	add	x23, sp, #0x90
   51874:	mov	x0, x23
   51878:	bl	ca80 <mpfr_init2@plt>
   5187c:	mov	x0, x23
   51880:	mov	x2, x24
   51884:	mov	w3, #0x0                   	// #0
   51888:	mov	x1, #0x1                   	// #1
   5188c:	bl	ca50 <mpfr_ui_sub@plt>
   51890:	cbnz	w0, 51af8 <mpfr_digamma@@Base+0xc58>
   51894:	mov	x1, x23
   51898:	mov	w3, #0x0                   	// #0
   5189c:	mov	x2, #0x1                   	// #1
   518a0:	mov	x0, x23
   518a4:	bl	c2c0 <mpfr_mul_2ui@plt>
   518a8:	mov	x0, x23
   518ac:	bl	c160 <mpfr_integer_p@plt>
   518b0:	mov	x1, x23
   518b4:	mov	w20, w0
   518b8:	mov	w3, #0x0                   	// #0
   518bc:	mov	x0, x23
   518c0:	mov	x2, #0x1                   	// #1
   518c4:	bl	c8f0 <mpfr_div_2ui@plt>
   518c8:	cbnz	w20, 51ac4 <mpfr_digamma@@Base+0xc24>
   518cc:	add	x19, x19, #0xa
   518d0:	stp	x21, x22, [sp, #32]
   518d4:	add	x21, sp, #0x70
   518d8:	mov	x1, x19
   518dc:	mov	x0, x21
   518e0:	add	x20, sp, #0xb0
   518e4:	stp	x25, x26, [sp, #64]
   518e8:	bl	ca80 <mpfr_init2@plt>
   518ec:	mrs	x26, tpidr_el0
   518f0:	mov	x1, x19
   518f4:	mov	x0, x20
   518f8:	mov	x22, #0x40                  	// #64
   518fc:	bl	ca80 <mpfr_init2@plt>
   51900:	b	51928 <mpfr_digamma@@Base+0xa88>
   51904:	add	x19, x19, x22
   51908:	mov	x0, x21
   5190c:	mov	x1, x19
   51910:	bl	bed0 <mpfr_set_prec@plt>
   51914:	add	x22, x19, x19, lsr #63
   51918:	mov	x1, x19
   5191c:	mov	x0, x20
   51920:	asr	x22, x22, #1
   51924:	bl	bed0 <mpfr_set_prec@plt>
   51928:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   5192c:	ldr	x1, [x0, #2624]
   51930:	add	x0, x0, #0xa40
   51934:	blr	x1
   51938:	mov	w2, #0x0                   	// #0
   5193c:	add	x1, x26, x0
   51940:	mov	x0, x20
   51944:	bl	c380 <mpfr_cache@plt>
   51948:	mov	w3, #0x0                   	// #0
   5194c:	mov	x2, x24
   51950:	mov	x1, x20
   51954:	mov	x0, x21
   51958:	bl	bd50 <mpfr_mul@plt>
   5195c:	ldr	x5, [sp, #128]
   51960:	mov	x1, x21
   51964:	mov	w2, #0x0                   	// #0
   51968:	mov	x0, x21
   5196c:	sub	x25, x5, x19
   51970:	bl	ba70 <mpfr_cot@plt>
   51974:	ldr	x0, [sp, #128]
   51978:	add	x6, x25, #0x2
   5197c:	mov	w3, #0x0                   	// #0
   51980:	mov	x2, x20
   51984:	cmp	x0, #0x0
   51988:	sub	x4, x19, x0
   5198c:	add	x0, x25, x0, lsl #1
   51990:	mov	x1, x21
   51994:	add	x5, x0, #0x2
   51998:	mov	x0, x21
   5199c:	csel	x5, x6, x5, le
   519a0:	add	x25, x4, x5
   519a4:	bl	bd50 <mpfr_mul@plt>
   519a8:	mov	x1, x23
   519ac:	mov	w2, #0x0                   	// #0
   519b0:	mov	x0, x20
   519b4:	bl	c9f0 <mpfr_digamma@plt>
   519b8:	mov	x1, x20
   519bc:	mov	w3, #0x0                   	// #0
   519c0:	mov	x2, x21
   519c4:	mov	x0, x20
   519c8:	ldr	x27, [sp, #192]
   519cc:	bl	bb70 <mpfr_sub@plt>
   519d0:	ldr	x6, [sp, #128]
   519d4:	add	x0, x25, #0x1
   519d8:	ldr	x1, [sp, #192]
   519dc:	sub	x3, x6, x1
   519e0:	sub	x5, x27, x1
   519e4:	cmp	x1, x6
   519e8:	add	x3, x0, x3
   519ec:	csel	x0, x3, x0, lt  // lt = tstop
   519f0:	sub	x3, x5, #0x1
   519f4:	cmp	x3, x0
   519f8:	add	x0, x0, #0x2
   519fc:	csel	x5, x5, x0, gt
   51a00:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   51a04:	cmp	x1, x0
   51a08:	b.le	51a3c <mpfr_digamma@@Base+0xb9c>
   51a0c:	ldr	w0, [sp, #108]
   51a10:	sub	x2, x19, x5
   51a14:	ldr	x1, [sp, #176]
   51a18:	cmp	w0, #0x0
   51a1c:	ldr	x0, [sp, #200]
   51a20:	sub	x1, x1, #0x1
   51a24:	ldr	x3, [x28]
   51a28:	asr	x1, x1, #6
   51a2c:	add	x1, x1, #0x1
   51a30:	cinc	x3, x3, eq  // eq = none
   51a34:	bl	c370 <mpfr_round_p@plt>
   51a38:	cbnz	w0, 51a68 <mpfr_digamma@@Base+0xbc8>
   51a3c:	mov	x0, #0xfffffffffffffeff    	// #-257
   51a40:	movk	x0, #0x7fff, lsl #48
   51a44:	sub	x0, x0, x19
   51a48:	cmp	x0, x22
   51a4c:	b.ge	51904 <mpfr_digamma@@Base+0xa64>  // b.tcont
   51a50:	adrp	x2, 5b000 <mpfr_free_pool@@Base+0x1ca8>
   51a54:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   51a58:	add	x2, x2, #0xc08
   51a5c:	add	x0, x0, #0x310
   51a60:	mov	w1, #0xb4                  	// #180
   51a64:	bl	cb40 <mpfr_assert_fail@plt>
   51a68:	ldr	w2, [sp, #108]
   51a6c:	mov	x1, x20
   51a70:	ldr	w3, [sp, #184]
   51a74:	mov	x0, x28
   51a78:	bl	c6a0 <mpfr_set4@plt>
   51a7c:	mov	w19, w0
   51a80:	mov	x0, x21
   51a84:	bl	c070 <mpfr_clear@plt>
   51a88:	mov	x0, x20
   51a8c:	bl	c070 <mpfr_clear@plt>
   51a90:	mov	x0, x23
   51a94:	ldp	x21, x22, [sp, #32]
   51a98:	ldp	x25, x26, [sp, #64]
   51a9c:	bl	c070 <mpfr_clear@plt>
   51aa0:	mov	w0, w19
   51aa4:	ldp	x19, x20, [sp, #16]
   51aa8:	ldp	x23, x24, [sp, #48]
   51aac:	ldp	x27, x28, [sp, #80]
   51ab0:	ldp	x29, x30, [sp], #208
   51ab4:	ret
   51ab8:	add	x0, x0, #0x1
   51abc:	sub	x1, x0, x1
   51ac0:	b	51870 <mpfr_digamma@@Base+0x9d0>
   51ac4:	ldr	w2, [sp, #108]
   51ac8:	mov	x1, x23
   51acc:	mov	x0, x28
   51ad0:	bl	c9f0 <mpfr_digamma@plt>
   51ad4:	mov	w19, w0
   51ad8:	mov	x0, x23
   51adc:	bl	c070 <mpfr_clear@plt>
   51ae0:	mov	w0, w19
   51ae4:	ldp	x19, x20, [sp, #16]
   51ae8:	ldp	x23, x24, [sp, #48]
   51aec:	ldp	x27, x28, [sp, #80]
   51af0:	ldp	x29, x30, [sp], #208
   51af4:	ret
   51af8:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   51afc:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   51b00:	add	x2, x2, #0x320
   51b04:	add	x0, x0, #0x310
   51b08:	mov	w1, #0x88                  	// #136
   51b0c:	stp	x21, x22, [sp, #32]
   51b10:	stp	x25, x26, [sp, #64]
   51b14:	bl	cb40 <mpfr_assert_fail@plt>
   51b18:	sub	sp, sp, #0x220
   51b1c:	mov	x2, #0x108                 	// #264
   51b20:	stp	x29, x30, [sp]
   51b24:	mov	x29, sp
   51b28:	stp	x19, x20, [sp, #16]
   51b2c:	mov	x20, x1
   51b30:	adrp	x1, 64000 <mpfr_bases@@Base+0x1e58>
   51b34:	add	x1, x1, #0x330
   51b38:	stp	x21, x22, [sp, #32]
   51b3c:	add	x22, sp, #0x118
   51b40:	mov	x19, x0
   51b44:	stp	x25, x26, [sp, #64]
   51b48:	add	x25, x0, x20, lsl #4
   51b4c:	mov	x0, x22
   51b50:	bl	ba10 <memcpy@plt>
   51b54:	mov	x0, x25
   51b58:	bl	bf90 <mpfr_mpz_init@plt>
   51b5c:	cbz	x20, 520d4 <mpfr_digamma@@Base+0x1234>
   51b60:	add	x26, sp, #0xc8
   51b64:	lsl	x21, x20, #1
   51b68:	mov	x0, x26
   51b6c:	stp	x23, x24, [sp, #48]
   51b70:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   51b74:	stp	x27, x28, [sp, #80]
   51b78:	bl	bf90 <mpfr_mpz_init@plt>
   51b7c:	add	x2, x21, #0x1
   51b80:	mov	x19, x2
   51b84:	mov	x0, x26
   51b88:	mov	x1, #0x6                   	// #6
   51b8c:	str	x2, [sp, #104]
   51b90:	bl	bcb0 <__gmpz_set_ui@plt>
   51b94:	movk	x24, #0xaaab
   51b98:	cmp	x19, #0x4
   51b9c:	mov	x23, #0x5555555555555555    	// #6148914691236517205
   51ba0:	mov	x19, #0x5                   	// #5
   51ba4:	b.hi	51bbc <mpfr_digamma@@Base+0xd1c>  // b.pmore
   51ba8:	b	51c28 <mpfr_digamma@@Base+0xd88>
   51bac:	ldr	x0, [sp, #104]
   51bb0:	add	x19, x19, #0x2
   51bb4:	cmp	x0, x19
   51bb8:	b.cc	51c28 <mpfr_digamma@@Base+0xd88>  // b.lo, b.ul, b.last
   51bbc:	sub	x1, x19, #0x1
   51bc0:	udiv	x0, x21, x1
   51bc4:	msub	x0, x0, x1, x21
   51bc8:	cbnz	x0, 51bac <mpfr_digamma@@Base+0xd0c>
   51bcc:	cmp	x19, #0x8
   51bd0:	b.ls	51c04 <mpfr_digamma@@Base+0xd64>  // b.plast
   51bd4:	mul	x0, x19, x24
   51bd8:	cmp	x0, x23
   51bdc:	b.ls	51bac <mpfr_digamma@@Base+0xd0c>  // b.plast
   51be0:	mov	x0, #0x3                   	// #3
   51be4:	b	51bf4 <mpfr_digamma@@Base+0xd54>
   51be8:	udiv	x2, x19, x0
   51bec:	msub	x2, x2, x0, x19
   51bf0:	cbz	x2, 51bac <mpfr_digamma@@Base+0xd0c>
   51bf4:	add	x0, x0, #0x2
   51bf8:	mul	x1, x0, x0
   51bfc:	cmp	x19, x1
   51c00:	b.cs	51be8 <mpfr_digamma@@Base+0xd48>  // b.hs, b.nlast
   51c04:	mov	x2, x19
   51c08:	mov	x0, x26
   51c0c:	mov	x1, x26
   51c10:	bl	c100 <__gmpz_mul_ui@plt>
   51c14:	ldr	x0, [sp, #104]
   51c18:	add	x19, x19, #0x2
   51c1c:	cmp	x0, x19
   51c20:	b.cs	51bbc <mpfr_digamma@@Base+0xd1c>  // b.hs, b.nlast
   51c24:	nop
   51c28:	cmp	x21, #0x40
   51c2c:	b.hi	51f78 <mpfr_digamma@@Base+0x10d8>  // b.pmore
   51c30:	lsr	x0, x21, #1
   51c34:	add	x23, sp, #0xf8
   51c38:	ldr	x22, [x22, x0, lsl #3]
   51c3c:	lsl	x20, x20, #2
   51c40:	sub	x0, x21, #0x1
   51c44:	str	x0, [sp, #96]
   51c48:	add	x0, x20, #0x3
   51c4c:	add	x19, sp, #0x98
   51c50:	add	x28, sp, #0xa8
   51c54:	add	x24, sp, #0xd8
   51c58:	add	x20, sp, #0xb8
   51c5c:	str	x0, [sp, #112]
   51c60:	and	x0, x21, #0x2
   51c64:	str	x0, [sp, #120]
   51c68:	mrs	x0, tpidr_el0
   51c6c:	str	x0, [sp, #128]
   51c70:	mov	x0, x19
   51c74:	bl	bf90 <mpfr_mpz_init@plt>
   51c78:	mov	x0, x28
   51c7c:	bl	bf90 <mpfr_mpz_init@plt>
   51c80:	mov	x0, x20
   51c84:	bl	bf90 <mpfr_mpz_init@plt>
   51c88:	mov	x0, x20
   51c8c:	mov	x1, #0x1                   	// #1
   51c90:	bl	bcb0 <__gmpz_set_ui@plt>
   51c94:	mov	x27, #0x4                   	// #4
   51c98:	mov	x2, x22
   51c9c:	mov	x1, x20
   51ca0:	mov	x0, x20
   51ca4:	bl	c200 <__gmpz_mul_2exp@plt>
   51ca8:	mov	x2, x21
   51cac:	mov	x0, x28
   51cb0:	mov	x1, #0x3                   	// #3
   51cb4:	bl	c4e0 <__gmpz_ui_pow_ui@plt>
   51cb8:	mov	x0, x19
   51cbc:	mov	x2, x28
   51cc0:	mov	x1, x20
   51cc4:	bl	be30 <__gmpz_fdiv_q@plt>
   51cc8:	ldr	w0, [sp, #172]
   51ccc:	cmp	w0, #0x0
   51cd0:	b.le	51d18 <mpfr_digamma@@Base+0xe78>
   51cd4:	nop
   51cd8:	mov	x1, x27
   51cdc:	mov	x2, x21
   51ce0:	mov	x0, x28
   51ce4:	bl	c4e0 <__gmpz_ui_pow_ui@plt>
   51ce8:	mov	x2, x28
   51cec:	mov	x1, x20
   51cf0:	mov	x0, x28
   51cf4:	bl	be30 <__gmpz_fdiv_q@plt>
   51cf8:	mov	x0, x19
   51cfc:	mov	x2, x28
   51d00:	mov	x1, x19
   51d04:	bl	c9c0 <__gmpz_add@plt>
   51d08:	ldr	w0, [sp, #172]
   51d0c:	add	x27, x27, #0x1
   51d10:	cmp	w0, #0x0
   51d14:	b.gt	51cd8 <mpfr_digamma@@Base+0xe38>
   51d18:	ldr	x2, [sp, #96]
   51d1c:	mov	x1, x27
   51d20:	mov	x0, x28
   51d24:	bl	c4e0 <__gmpz_ui_pow_ui@plt>
   51d28:	ldr	x2, [sp, #96]
   51d2c:	mov	x1, x28
   51d30:	mov	x0, x28
   51d34:	bl	c100 <__gmpz_mul_ui@plt>
   51d38:	mov	x2, x28
   51d3c:	mov	x1, x20
   51d40:	mov	x0, x28
   51d44:	bl	c770 <__gmpz_cdiv_q@plt>
   51d48:	mov	x2, x28
   51d4c:	mov	x1, x19
   51d50:	mov	x0, x19
   51d54:	bl	c9c0 <__gmpz_add@plt>
   51d58:	mov	x2, x20
   51d5c:	mov	x1, x19
   51d60:	mov	x0, x19
   51d64:	bl	c9c0 <__gmpz_add@plt>
   51d68:	mov	x2, x21
   51d6c:	mov	x1, x20
   51d70:	mov	x0, x20
   51d74:	bl	bb60 <__gmpz_cdiv_q_2exp@plt>
   51d78:	mov	x2, x20
   51d7c:	mov	x1, x19
   51d80:	mov	x0, x19
   51d84:	bl	c9c0 <__gmpz_add@plt>
   51d88:	mov	x1, x21
   51d8c:	mov	x0, x28
   51d90:	bl	bfc0 <__gmpz_fac_ui@plt>
   51d94:	mov	x2, x28
   51d98:	mov	x1, x19
   51d9c:	mov	x0, x19
   51da0:	bl	bff0 <__gmpz_mul@plt>
   51da4:	mov	x2, x26
   51da8:	mov	x1, x19
   51dac:	mov	x0, x19
   51db0:	bl	bff0 <__gmpz_mul@plt>
   51db4:	mov	x2, #0x1                   	// #1
   51db8:	mov	x1, x19
   51dbc:	mov	x0, x19
   51dc0:	bl	c200 <__gmpz_mul_2exp@plt>
   51dc4:	mov	x1, x22
   51dc8:	mov	x0, x23
   51dcc:	bl	ca80 <mpfr_init2@plt>
   51dd0:	mov	x1, x19
   51dd4:	mov	w2, #0x1                   	// #1
   51dd8:	mov	x0, x23
   51ddc:	bl	c240 <mpfr_set_z@plt>
   51de0:	mov	w3, #0x1                   	// #1
   51de4:	mov	x2, x22
   51de8:	mov	x1, x23
   51dec:	mov	x0, x23
   51df0:	bl	c8f0 <mpfr_div_2ui@plt>
   51df4:	mov	x1, x22
   51df8:	mov	x0, x24
   51dfc:	bl	ca80 <mpfr_init2@plt>
   51e00:	mov	w2, #0x2                   	// #2
   51e04:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   51e08:	ldr	x1, [x0, #2624]
   51e0c:	add	x0, x0, #0xa40
   51e10:	blr	x1
   51e14:	ldr	x1, [sp, #128]
   51e18:	add	x1, x1, x0
   51e1c:	mov	x0, x24
   51e20:	bl	c380 <mpfr_cache@plt>
   51e24:	mov	x1, x24
   51e28:	mov	w3, #0x2                   	// #2
   51e2c:	mov	x2, #0x1                   	// #1
   51e30:	mov	x0, x24
   51e34:	bl	c2c0 <mpfr_mul_2ui@plt>
   51e38:	mov	x2, x21
   51e3c:	mov	x1, x24
   51e40:	mov	w3, #0x2                   	// #2
   51e44:	mov	x0, x24
   51e48:	bl	bf70 <mpfr_pow_ui@plt>
   51e4c:	mov	x1, x23
   51e50:	mov	x2, x24
   51e54:	mov	x0, x23
   51e58:	mov	w3, #0x1                   	// #1
   51e5c:	bl	c620 <mpfr_div@plt>
   51e60:	ldr	x0, [sp, #112]
   51e64:	mov	x1, #0x0                   	// #0
   51e68:	add	x4, x0, x27
   51e6c:	cmp	x4, #0x1
   51e70:	b.ls	51e8c <mpfr_digamma@@Base+0xfec>  // b.plast
   51e74:	nop
   51e78:	add	x4, x4, #0x1
   51e7c:	add	x1, x1, #0x1
   51e80:	cmp	x4, #0x3
   51e84:	lsr	x4, x4, #1
   51e88:	b.hi	51e78 <mpfr_digamma@@Base+0xfd8>  // b.pmore
   51e8c:	cmp	x22, x1
   51e90:	b.ls	52024 <mpfr_digamma@@Base+0x1184>  // b.plast
   51e94:	ldr	x3, [sp, #248]
   51e98:	ldr	x0, [sp, #272]
   51e9c:	sub	x3, x3, #0x1
   51ea0:	and	x3, x3, #0xffffffffffffffc0
   51ea4:	add	x3, x3, #0x40
   51ea8:	str	x3, [sp, #136]
   51eac:	sub	x2, x3, x22
   51eb0:	add	x1, x2, x1
   51eb4:	bl	caa0 <__gmpn_scan1@plt>
   51eb8:	ldr	x3, [sp, #136]
   51ebc:	mov	x1, x23
   51ec0:	ldr	x4, [sp, #264]
   51ec4:	sub	x3, x3, x0
   51ec8:	mov	w2, #0x2                   	// #2
   51ecc:	mov	x0, x25
   51ed0:	cmp	x4, x3
   51ed4:	cset	w3, cc  // cc = lo, ul, last
   51ed8:	mov	w27, w3
   51edc:	bl	be00 <mpfr_get_z@plt>
   51ee0:	ldr	x0, [sp, #120]
   51ee4:	cbnz	x0, 51ef4 <mpfr_digamma@@Base+0x1054>
   51ee8:	ldr	w0, [x25, #4]
   51eec:	neg	w0, w0
   51ef0:	str	w0, [x25, #4]
   51ef4:	ldr	x2, [sp, #104]
   51ef8:	mov	x1, x28
   51efc:	mov	x0, x28
   51f00:	bl	c100 <__gmpz_mul_ui@plt>
   51f04:	mov	x2, x26
   51f08:	mov	x1, x28
   51f0c:	mov	x0, x28
   51f10:	bl	bf60 <__gmpz_divexact@plt>
   51f14:	mov	x2, x28
   51f18:	mov	x1, x25
   51f1c:	mov	x0, x25
   51f20:	bl	bff0 <__gmpz_mul@plt>
   51f24:	mov	x1, #0x1                   	// #1
   51f28:	mov	x0, x26
   51f2c:	bl	bcb0 <__gmpz_set_ui@plt>
   51f30:	mov	x0, x24
   51f34:	bl	c070 <mpfr_clear@plt>
   51f38:	mov	x0, x23
   51f3c:	bl	c070 <mpfr_clear@plt>
   51f40:	mov	x0, x19
   51f44:	bl	c170 <mpfr_mpz_clear@plt>
   51f48:	mov	x0, x28
   51f4c:	bl	c170 <mpfr_mpz_clear@plt>
   51f50:	mov	x0, x20
   51f54:	bl	c170 <mpfr_mpz_clear@plt>
   51f58:	cbnz	w27, 520ac <mpfr_digamma@@Base+0x120c>
   51f5c:	mov	x0, #0x6666666666666666    	// #7378697629483820646
   51f60:	movk	x0, #0x6667
   51f64:	smulh	x0, x22, x0
   51f68:	asr	x0, x0, #2
   51f6c:	sub	x0, x0, x22, asr #63
   51f70:	add	x22, x22, x0
   51f74:	b	51c70 <mpfr_digamma@@Base+0xdd0>
   51f78:	ucvtf	d0, x21
   51f7c:	fmov	d1, #7.000000000000000000e+00
   51f80:	add	x23, sp, #0xf8
   51f84:	fmul	d0, d0, d1
   51f88:	bl	c950 <__gmpfr_ceil_log2@plt>
   51f8c:	add	x19, x0, #0x1
   51f90:	mov	x1, #0x35                  	// #53
   51f94:	mov	x0, x23
   51f98:	bl	ca80 <mpfr_init2@plt>
   51f9c:	asr	x19, x19, #1
   51fa0:	mov	x1, #0x1f2c                	// #7980
   51fa4:	mov	w3, #0x2                   	// #2
   51fa8:	movk	x1, #0xefd, lsl #16
   51fac:	mov	x2, #0xffffffffffffffe0    	// #-32
   51fb0:	mov	x0, x23
   51fb4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   51fb8:	mov	w3, #0x2                   	// #2
   51fbc:	mov	x1, x23
   51fc0:	mov	x2, x21
   51fc4:	mov	x0, x23
   51fc8:	bl	ba50 <mpfr_mul_ui@plt>
   51fcc:	add	x19, x19, #0xe
   51fd0:	mov	x1, x23
   51fd4:	mov	w2, #0x2                   	// #2
   51fd8:	mov	x0, x23
   51fdc:	bl	c1d0 <mpfr_log2@plt>
   51fe0:	mov	x2, x21
   51fe4:	mov	w3, #0x2                   	// #2
   51fe8:	mov	x1, x23
   51fec:	mov	x0, x23
   51ff0:	bl	ba50 <mpfr_mul_ui@plt>
   51ff4:	mov	w1, #0x2                   	// #2
   51ff8:	mov	x0, x23
   51ffc:	bl	bca0 <mpfr_get_ui@plt>
   52000:	mov	x22, x0
   52004:	mov	x0, x23
   52008:	bl	c070 <mpfr_clear@plt>
   5200c:	mov	x0, x26
   52010:	mov	w1, #0x2                   	// #2
   52014:	bl	cb60 <__gmpz_sizeinbase@plt>
   52018:	add	x22, x0, x22
   5201c:	add	x22, x19, x22
   52020:	b	51c3c <mpfr_digamma@@Base+0xd9c>
   52024:	mov	x1, x23
   52028:	mov	x0, x25
   5202c:	mov	w2, #0x2                   	// #2
   52030:	bl	be00 <mpfr_get_z@plt>
   52034:	ldr	x0, [sp, #120]
   52038:	cbnz	x0, 52044 <mpfr_digamma@@Base+0x11a4>
   5203c:	mov	w27, #0x0                   	// #0
   52040:	b	51ee8 <mpfr_digamma@@Base+0x1048>
   52044:	ldr	x2, [sp, #104]
   52048:	mov	x1, x28
   5204c:	mov	x0, x28
   52050:	bl	c100 <__gmpz_mul_ui@plt>
   52054:	mov	x2, x26
   52058:	mov	x1, x28
   5205c:	mov	x0, x28
   52060:	bl	bf60 <__gmpz_divexact@plt>
   52064:	mov	x2, x28
   52068:	mov	x1, x25
   5206c:	mov	x0, x25
   52070:	bl	bff0 <__gmpz_mul@plt>
   52074:	mov	x1, #0x1                   	// #1
   52078:	mov	x0, x26
   5207c:	bl	bcb0 <__gmpz_set_ui@plt>
   52080:	mov	x0, x24
   52084:	bl	c070 <mpfr_clear@plt>
   52088:	mov	x0, x23
   5208c:	bl	c070 <mpfr_clear@plt>
   52090:	mov	x0, x19
   52094:	bl	c170 <mpfr_mpz_clear@plt>
   52098:	mov	x0, x28
   5209c:	bl	c170 <mpfr_mpz_clear@plt>
   520a0:	mov	x0, x20
   520a4:	bl	c170 <mpfr_mpz_clear@plt>
   520a8:	b	51f5c <mpfr_digamma@@Base+0x10bc>
   520ac:	mov	x0, x26
   520b0:	bl	c170 <mpfr_mpz_clear@plt>
   520b4:	ldp	x29, x30, [sp]
   520b8:	ldp	x19, x20, [sp, #16]
   520bc:	ldp	x21, x22, [sp, #32]
   520c0:	ldp	x23, x24, [sp, #48]
   520c4:	ldp	x25, x26, [sp, #64]
   520c8:	ldp	x27, x28, [sp, #80]
   520cc:	add	sp, sp, #0x220
   520d0:	ret
   520d4:	mov	x0, x19
   520d8:	mov	x1, #0x1                   	// #1
   520dc:	bl	bcb0 <__gmpz_set_ui@plt>
   520e0:	ldp	x29, x30, [sp]
   520e4:	ldp	x19, x20, [sp, #16]
   520e8:	ldp	x21, x22, [sp, #32]
   520ec:	ldp	x25, x26, [sp, #64]
   520f0:	add	sp, sp, #0x220
   520f4:	ret

00000000000520f8 <mpfr_bernoulli_cache@@Base>:
   520f8:	stp	x29, x30, [sp, #-64]!
   520fc:	mov	x29, sp
   52100:	stp	x21, x22, [sp, #32]
   52104:	mrs	x21, tpidr_el0
   52108:	stp	x19, x20, [sp, #16]
   5210c:	mov	x20, x0
   52110:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   52114:	ldr	x1, [x0, #2480]
   52118:	add	x0, x0, #0x9b0
   5211c:	blr	x1
   52120:	ldr	x19, [x21, x0]
   52124:	add	x22, x21, x0
   52128:	cmp	x19, x20
   5212c:	b.hi	52184 <mpfr_bernoulli_cache@@Base+0x8c>  // b.pmore
   52130:	ldr	x1, [x22, #8]
   52134:	cbz	x1, 521b0 <mpfr_bernoulli_cache@@Base+0xb8>
   52138:	cmp	x1, x20
   5213c:	b.ls	521dc <mpfr_bernoulli_cache@@Base+0xe4>  // b.plast
   52140:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   52144:	ldr	x1, [x0, #2480]
   52148:	add	x0, x0, #0x9b0
   5214c:	blr	x1
   52150:	add	x0, x21, x0
   52154:	ldr	x0, [x0, #16]
   52158:	mov	x1, x19
   5215c:	add	x19, x19, #0x1
   52160:	bl	51b18 <mpfr_digamma@@Base+0xc78>
   52164:	cmp	x20, x19
   52168:	b.cs	52140 <mpfr_bernoulli_cache@@Base+0x48>  // b.hs, b.nlast
   5216c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   52170:	ldr	x1, [x0, #2480]
   52174:	add	x0, x0, #0x9b0
   52178:	blr	x1
   5217c:	add	x1, x20, #0x1
   52180:	str	x1, [x21, x0]
   52184:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   52188:	ldr	x1, [x0, #2480]
   5218c:	add	x0, x0, #0x9b0
   52190:	blr	x1
   52194:	add	x0, x21, x0
   52198:	ldp	x21, x22, [sp, #32]
   5219c:	ldr	x0, [x0, #16]
   521a0:	add	x0, x0, x20, lsl #4
   521a4:	ldp	x19, x20, [sp, #16]
   521a8:	ldp	x29, x30, [sp], #64
   521ac:	ret
   521b0:	add	x0, x20, x20, lsr #2
   521b4:	mov	x1, #0x10                  	// #16
   521b8:	cmp	x0, x1
   521bc:	mov	x19, #0x0                   	// #0
   521c0:	csel	x0, x0, x1, cs  // cs = hs, nlast
   521c4:	str	x0, [x22, #8]
   521c8:	lsl	x0, x0, #4
   521cc:	bl	ccf0 <mpfr_allocate_func@plt>
   521d0:	str	xzr, [x22]
   521d4:	str	x0, [x22, #16]
   521d8:	b	52158 <mpfr_bernoulli_cache@@Base+0x60>
   521dc:	ldr	x0, [x22, #16]
   521e0:	str	x23, [sp, #48]
   521e4:	add	x23, x20, x20, lsr #2
   521e8:	lsl	x1, x1, #4
   521ec:	lsl	x2, x23, #4
   521f0:	bl	c1c0 <mpfr_reallocate_func@plt>
   521f4:	ldr	x19, [x22]
   521f8:	stp	x23, x0, [x22, #8]
   521fc:	cmp	x20, x19
   52200:	ldr	x23, [sp, #48]
   52204:	b.cs	52140 <mpfr_bernoulli_cache@@Base+0x48>  // b.hs, b.nlast
   52208:	b	5216c <mpfr_bernoulli_cache@@Base+0x74>
   5220c:	nop

0000000000052210 <mpfr_bernoulli_freecache@@Base>:
   52210:	stp	x29, x30, [sp, #-32]!
   52214:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   52218:	ldr	x1, [x0, #2480]
   5221c:	add	x0, x0, #0x9b0
   52220:	blr	x1
   52224:	mov	x29, sp
   52228:	stp	x19, x20, [sp, #16]
   5222c:	mrs	x20, tpidr_el0
   52230:	add	x0, x20, x0
   52234:	ldr	x1, [x0, #16]
   52238:	cbz	x1, 522a4 <mpfr_bernoulli_freecache@@Base+0x94>
   5223c:	ldr	x0, [x0]
   52240:	cbz	x0, 52278 <mpfr_bernoulli_freecache@@Base+0x68>
   52244:	mov	x19, #0x0                   	// #0
   52248:	add	x0, x1, x19, lsl #4
   5224c:	bl	c170 <mpfr_mpz_clear@plt>
   52250:	add	x19, x19, #0x1
   52254:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   52258:	ldr	x1, [x0, #2480]
   5225c:	add	x0, x0, #0x9b0
   52260:	blr	x1
   52264:	add	x1, x20, x0
   52268:	ldr	x0, [x20, x0]
   5226c:	ldr	x1, [x1, #16]
   52270:	cmp	x0, x19
   52274:	b.hi	52248 <mpfr_bernoulli_freecache@@Base+0x38>  // b.pmore
   52278:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   5227c:	ldr	x2, [x0, #2480]
   52280:	add	x0, x0, #0x9b0
   52284:	blr	x2
   52288:	add	x20, x20, x0
   5228c:	mov	x0, x1
   52290:	ldr	x1, [x20, #8]
   52294:	lsl	x1, x1, #4
   52298:	bl	cc20 <mpfr_free_func@plt>
   5229c:	stp	xzr, xzr, [x20]
   522a0:	str	xzr, [x20, #16]
   522a4:	ldp	x19, x20, [sp, #16]
   522a8:	ldp	x29, x30, [sp], #32
   522ac:	ret

00000000000522b0 <mpfr_regular_p@@Base>:
   522b0:	ldr	x0, [x0, #16]
   522b4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   522b8:	cmp	x0, x1
   522bc:	cset	w0, gt
   522c0:	ret
   522c4:	nop

00000000000522c8 <mpfr_set_flt@@Base>:
   522c8:	fcvt	d0, s0
   522cc:	b	be40 <mpfr_set_d@plt>

00000000000522d0 <mpfr_get_flt@@Base>:
   522d0:	stp	x29, x30, [sp, #-48]!
   522d4:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   522d8:	mov	x29, sp
   522dc:	stp	x19, x20, [sp, #16]
   522e0:	ldr	x19, [x0, #16]
   522e4:	cmp	x19, x2
   522e8:	b.le	52370 <mpfr_get_flt@@Base+0xa0>
   522ec:	ldr	w20, [x0, #8]
   522f0:	mov	x4, x0
   522f4:	mov	w5, w1
   522f8:	cmp	w1, #0x4
   522fc:	lsr	w3, w20, #31
   52300:	b.eq	52384 <mpfr_get_flt@@Base+0xb4>  // b.none
   52304:	cmn	x19, #0x94
   52308:	b.lt	523a0 <mpfr_get_flt@@Base+0xd0>  // b.tstop
   5230c:	cmp	x19, #0x80
   52310:	b.gt	523b8 <mpfr_get_flt@@Base+0xe8>
   52314:	ldr	x2, [x4]
   52318:	cmn	x19, #0x7d
   5231c:	ldr	x1, [x4, #24]
   52320:	mov	x6, #0x18                  	// #24
   52324:	add	w4, w19, #0x95
   52328:	add	x0, sp, #0x28
   5232c:	csel	x4, x4, x6, lt  // lt = tstop
   52330:	bl	c720 <mpfr_round_raw_4@plt>
   52334:	cbnz	w0, 523e0 <mpfr_get_flt@@Base+0x110>
   52338:	ldr	d0, [sp, #40]
   5233c:	mov	x0, #0x3bf0000000000000    	// #4318952042648305664
   52340:	fmov	d1, x0
   52344:	ucvtf	d0, d0
   52348:	fmul	d0, d0, d1
   5234c:	mov	w0, w19
   52350:	bl	cba0 <mpfr_scale2@plt>
   52354:	fneg	d1, d0
   52358:	cmp	w20, #0x0
   5235c:	fcsel	d0, d1, d0, lt  // lt = tstop
   52360:	fcvt	s0, d0
   52364:	ldp	x19, x20, [sp, #16]
   52368:	ldp	x29, x30, [sp], #48
   5236c:	ret
   52370:	bl	bd30 <mpfr_get_d@plt>
   52374:	fcvt	s0, d0
   52378:	ldp	x19, x20, [sp, #16]
   5237c:	ldp	x29, x30, [sp], #48
   52380:	ret
   52384:	tbnz	w20, #31, 52454 <mpfr_get_flt@@Base+0x184>
   52388:	cmn	x19, #0x94
   5238c:	b.lt	5242c <mpfr_get_flt@@Base+0x15c>  // b.tstop
   52390:	cmp	x19, #0x80
   52394:	b.gt	523d0 <mpfr_get_flt@@Base+0x100>
   52398:	mov	w5, #0x2                   	// #2
   5239c:	b	52314 <mpfr_get_flt@@Base+0x44>
   523a0:	tbnz	w20, #31, 523e8 <mpfr_get_flt@@Base+0x118>
   523a4:	cmp	w1, #0x2
   523a8:	b.eq	5242c <mpfr_get_flt@@Base+0x15c>  // b.none
   523ac:	cbz	w1, 52418 <mpfr_get_flt@@Base+0x148>
   523b0:	movi	v0.2s, #0x0
   523b4:	b	52364 <mpfr_get_flt@@Base+0x94>
   523b8:	tbnz	w20, #31, 523fc <mpfr_get_flt@@Base+0x12c>
   523bc:	and	w5, w1, #0xfffffffd
   523c0:	mov	w0, #0x7f7fffff            	// #2139095039
   523c4:	cmp	w5, #0x1
   523c8:	fmov	s0, w0
   523cc:	b.eq	52364 <mpfr_get_flt@@Base+0x94>  // b.none
   523d0:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   523d4:	ldr	d0, [x0, #1088]
   523d8:	fcvt	s0, d0
   523dc:	b	52364 <mpfr_get_flt@@Base+0x94>
   523e0:	fmov	d0, #1.000000000000000000e+00
   523e4:	b	5234c <mpfr_get_flt@@Base+0x7c>
   523e8:	cmp	w1, #0x3
   523ec:	b.eq	52448 <mpfr_get_flt@@Base+0x178>  // b.none
   523f0:	cbz	w1, 52434 <mpfr_get_flt@@Base+0x164>
   523f4:	movi	v0.2s, #0x80, lsl #24
   523f8:	b	52364 <mpfr_get_flt@@Base+0x94>
   523fc:	sub	w5, w1, #0x1
   52400:	cmp	w5, #0x1
   52404:	b.ls	5246c <mpfr_get_flt@@Base+0x19c>  // b.plast
   52408:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   5240c:	ldr	d0, [x0, #1080]
   52410:	fcvt	s0, d0
   52414:	b	52364 <mpfr_get_flt@@Base+0x94>
   52418:	mov	x2, #0xffffffffffffff6a    	// #-150
   5241c:	mov	x1, #0x1                   	// #1
   52420:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   52424:	cmp	w0, #0x0
   52428:	b.le	523b0 <mpfr_get_flt@@Base+0xe0>
   5242c:	movi	v0.2s, #0x1
   52430:	b	52364 <mpfr_get_flt@@Base+0x94>
   52434:	mov	x2, #0xffffffffffffff6a    	// #-150
   52438:	mov	x1, #0xffffffffffffffff    	// #-1
   5243c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   52440:	tbz	w0, #31, 523f4 <mpfr_get_flt@@Base+0x124>
   52444:	nop
   52448:	mov	w0, #0x80000001            	// #-2147483647
   5244c:	fmov	s0, w0
   52450:	b	52364 <mpfr_get_flt@@Base+0x94>
   52454:	cmn	x19, #0x94
   52458:	b.lt	52448 <mpfr_get_flt@@Base+0x178>  // b.tstop
   5245c:	cmp	x19, #0x80
   52460:	b.gt	52408 <mpfr_get_flt@@Base+0x138>
   52464:	mov	w5, #0x3                   	// #3
   52468:	b	52314 <mpfr_get_flt@@Base+0x44>
   5246c:	mvni	v0.2s, #0x80, lsl #16
   52470:	b	52364 <mpfr_get_flt@@Base+0x94>
   52474:	nop

0000000000052478 <mpfr_scale2@@Base>:
   52478:	fmov	d1, #1.000000000000000000e+00
   5247c:	fcmp	d0, d1
   52480:	b.eq	524a8 <mpfr_scale2@@Base+0x30>  // b.none
   52484:	cmn	w0, #0x3fd
   52488:	fmov	x1, d0
   5248c:	and	w0, w0, #0xffff
   52490:	b.lt	524c0 <mpfr_scale2@@Base+0x48>  // b.tstop
   52494:	ubfx	x2, x1, #52, #11
   52498:	add	w0, w0, w2
   5249c:	bfi	x1, x0, #52, #11
   524a0:	fmov	d0, x1
   524a4:	ret
   524a8:	fmov	d0, #5.000000000000000000e-01
   524ac:	add	w0, w0, #0x1
   524b0:	cmn	w0, #0x3fd
   524b4:	and	w0, w0, #0xffff
   524b8:	fmov	x1, d0
   524bc:	b.ge	52494 <mpfr_scale2@@Base+0x1c>  // b.tcont
   524c0:	ubfx	x3, x1, #52, #11
   524c4:	mov	x2, #0x3cb0000000000000    	// #4372995238176751616
   524c8:	add	w3, w3, #0x34
   524cc:	fmov	d0, x2
   524d0:	add	w0, w0, w3
   524d4:	bfi	x1, x0, #52, #11
   524d8:	fmov	d1, x1
   524dc:	fmul	d0, d1, d0
   524e0:	fmov	x1, d0
   524e4:	fmov	d0, x1
   524e8:	ret
   524ec:	nop

00000000000524f0 <mpfr_set_z_2exp@@Base>:
   524f0:	stp	x29, x30, [sp, #-112]!
   524f4:	mov	x29, sp
   524f8:	ldr	w4, [x1, #4]
   524fc:	stp	x19, x20, [sp, #16]
   52500:	mov	x19, x0
   52504:	cmp	w4, #0x0
   52508:	stp	x23, x24, [sp, #48]
   5250c:	mov	w24, w3
   52510:	stp	x25, x26, [sp, #64]
   52514:	b.lt	52704 <mpfr_set_z_2exp@@Base+0x214>  // b.tstop
   52518:	mov	w25, #0x1                   	// #1
   5251c:	b.eq	5272c <mpfr_set_z_2exp@@Base+0x23c>  // b.none
   52520:	cmp	w4, #0x0
   52524:	cneg	w4, w4, lt  // lt = tstop
   52528:	sxtw	x7, w4
   5252c:	tbnz	x2, #63, 52540 <mpfr_set_z_2exp@@Base+0x50>
   52530:	add	x3, x7, x2, asr #6
   52534:	mov	x0, #0x100000000000000     	// #72057594037927936
   52538:	cmp	x3, x0
   5253c:	b.gt	529c0 <mpfr_set_z_2exp@@Base+0x4d0>
   52540:	ldr	x5, [x1, #8]
   52544:	stp	x21, x22, [sp, #32]
   52548:	mrs	x22, tpidr_el0
   5254c:	ldr	x3, [x19]
   52550:	add	x1, x5, w4, sxtw #3
   52554:	mov	w6, #0x40                  	// #64
   52558:	stp	x27, x28, [sp, #80]
   5255c:	sub	x27, x3, #0x1
   52560:	ldur	x21, [x1, #-8]
   52564:	smaddl	x4, w4, w6, x2
   52568:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   5256c:	ldr	x8, [x0, #2544]
   52570:	add	x0, x0, #0x9f0
   52574:	blr	x8
   52578:	asr	x27, x27, #6
   5257c:	ldr	x0, [x22, x0]
   52580:	clz	x20, x21
   52584:	mov	x21, x20
   52588:	add	x2, x27, #0x1
   5258c:	sub	x20, x4, x20
   52590:	sub	x26, x7, x2
   52594:	cmp	x0, x20
   52598:	ldr	x23, [x19, #24]
   5259c:	b.lt	52998 <mpfr_set_z_2exp@@Base+0x4a8>  // b.tstop
   525a0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   525a4:	ldr	x1, [x0, #2512]
   525a8:	add	x0, x0, #0x9d0
   525ac:	blr	x1
   525b0:	add	x28, x20, #0x1
   525b4:	ldr	x0, [x22, x0]
   525b8:	cmp	x28, x0
   525bc:	b.lt	529d0 <mpfr_set_z_2exp@@Base+0x4e0>  // b.tstop
   525c0:	lsl	x1, x26, #3
   525c4:	tbnz	x26, #63, 5277c <mpfr_set_z_2exp@@Base+0x28c>
   525c8:	add	x1, x5, x1
   525cc:	cbz	x21, 527ec <mpfr_set_z_2exp@@Base+0x2fc>
   525d0:	mov	w3, w21
   525d4:	mov	x0, x23
   525d8:	stp	x1, x5, [sp, #96]
   525dc:	bl	bcc0 <__gmpn_lshift@plt>
   525e0:	mov	w6, #0x40                  	// #64
   525e4:	ldp	x1, x5, [sp, #96]
   525e8:	cbnz	x26, 528d4 <mpfr_set_z_2exp@@Base+0x3e4>
   525ec:	ldr	x0, [x19]
   525f0:	neg	w0, w0
   525f4:	ands	w0, w0, #0x3f
   525f8:	b.eq	528b0 <mpfr_set_z_2exp@@Base+0x3c0>  // b.none
   525fc:	sub	w0, w0, #0x1
   52600:	mov	x3, #0x1                   	// #1
   52604:	ldr	x1, [x23]
   52608:	mov	x2, #0x2                   	// #2
   5260c:	lsl	x2, x2, x0
   52610:	neg	x4, x2
   52614:	lsl	x0, x3, x0
   52618:	sub	x3, x0, #0x1
   5261c:	and	x4, x4, x1
   52620:	and	x3, x3, x1
   52624:	and	x1, x1, x0
   52628:	str	x4, [x23]
   5262c:	cbnz	w24, 52890 <mpfr_set_z_2exp@@Base+0x3a0>
   52630:	cbz	x1, 52750 <mpfr_set_z_2exp@@Base+0x260>
   52634:	ldr	x0, [x23]
   52638:	cbz	x3, 52940 <mpfr_set_z_2exp@@Base+0x450>
   5263c:	adds	x2, x2, x0
   52640:	str	x2, [x23]
   52644:	b.cc	52698 <mpfr_set_z_2exp@@Base+0x1a8>  // b.lo, b.ul, b.last
   52648:	mov	x2, x23
   5264c:	add	x0, x23, x27, lsl #3
   52650:	b	52664 <mpfr_set_z_2exp@@Base+0x174>
   52654:	ldr	x1, [x2, #8]
   52658:	add	x1, x1, #0x1
   5265c:	str	x1, [x2, #8]!
   52660:	cbnz	x1, 52698 <mpfr_set_z_2exp@@Base+0x1a8>
   52664:	cmp	x2, x0
   52668:	b.ne	52654 <mpfr_set_z_2exp@@Base+0x164>  // b.any
   5266c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   52670:	ldr	x1, [x0, #2544]
   52674:	add	x0, x0, #0x9f0
   52678:	blr	x1
   5267c:	ldr	x0, [x22, x0]
   52680:	cmp	x0, x20
   52684:	b.eq	52998 <mpfr_set_z_2exp@@Base+0x4a8>  // b.none
   52688:	mov	x20, x28
   5268c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   52690:	str	x0, [x23, x27, lsl #3]
   52694:	nop
   52698:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   5269c:	ldr	x1, [x0, #2512]
   526a0:	add	x0, x0, #0x9d0
   526a4:	blr	x1
   526a8:	ldr	x0, [x22, x0]
   526ac:	cmp	x0, x20
   526b0:	b.gt	527c4 <mpfr_set_z_2exp@@Base+0x2d4>
   526b4:	mov	w4, w25
   526b8:	str	w25, [x19, #8]
   526bc:	str	x20, [x19, #16]
   526c0:	cbz	w4, 5270c <mpfr_set_z_2exp@@Base+0x21c>
   526c4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   526c8:	ldr	x1, [x0, #2576]
   526cc:	add	x0, x0, #0xa10
   526d0:	blr	x1
   526d4:	add	x0, x22, x0
   526d8:	ldp	x21, x22, [sp, #32]
   526dc:	ldr	w1, [x0]
   526e0:	ldp	x27, x28, [sp, #80]
   526e4:	orr	w1, w1, #0x8
   526e8:	str	w1, [x0]
   526ec:	mov	w0, w4
   526f0:	ldp	x19, x20, [sp, #16]
   526f4:	ldp	x23, x24, [sp, #48]
   526f8:	ldp	x25, x26, [sp, #64]
   526fc:	ldp	x29, x30, [sp], #112
   52700:	ret
   52704:	mov	w25, #0xffffffff            	// #-1
   52708:	b	52520 <mpfr_set_z_2exp@@Base+0x30>
   5270c:	mov	w0, w4
   52710:	ldp	x19, x20, [sp, #16]
   52714:	ldp	x21, x22, [sp, #32]
   52718:	ldp	x23, x24, [sp, #48]
   5271c:	ldp	x25, x26, [sp, #64]
   52720:	ldp	x27, x28, [sp, #80]
   52724:	ldp	x29, x30, [sp], #112
   52728:	ret
   5272c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   52730:	str	w25, [x19, #8]
   52734:	str	x0, [x19, #16]
   52738:	mov	w0, w4
   5273c:	ldp	x19, x20, [sp, #16]
   52740:	ldp	x23, x24, [sp, #48]
   52744:	ldp	x25, x26, [sp, #64]
   52748:	ldp	x29, x30, [sp], #112
   5274c:	ret
   52750:	cmp	x3, #0x0
   52754:	csetm	w1, ne  // ne = any
   52758:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   5275c:	ldr	x2, [x0, #2512]
   52760:	add	x0, x0, #0x9d0
   52764:	blr	x2
   52768:	ldr	x0, [x22, x0]
   5276c:	cmp	x0, x20
   52770:	b.gt	527ac <mpfr_set_z_2exp@@Base+0x2bc>
   52774:	mul	w4, w1, w25
   52778:	b	526b8 <mpfr_set_z_2exp@@Base+0x1c8>
   5277c:	sub	x0, x23, x1
   52780:	cbz	x21, 52950 <mpfr_set_z_2exp@@Base+0x460>
   52784:	mov	w3, w21
   52788:	mov	x2, x7
   5278c:	mov	x1, x5
   52790:	bl	bcc0 <__gmpn_lshift@plt>
   52794:	neg	x2, x26, lsl #3
   52798:	mov	x0, x23
   5279c:	mov	w1, #0x0                   	// #0
   527a0:	bl	c110 <memset@plt>
   527a4:	mov	w1, #0x0                   	// #0
   527a8:	b	52758 <mpfr_set_z_2exp@@Base+0x268>
   527ac:	orr	w4, w1, w24
   527b0:	cbnz	w4, 527c4 <mpfr_set_z_2exp@@Base+0x2d4>
   527b4:	mov	x0, x19
   527b8:	bl	bf00 <mpfr_powerof2_raw@plt>
   527bc:	cmp	w0, #0x0
   527c0:	cset	w24, ne  // ne = any
   527c4:	mov	w2, w25
   527c8:	mov	w1, w24
   527cc:	mov	x0, x19
   527d0:	ldp	x19, x20, [sp, #16]
   527d4:	ldp	x21, x22, [sp, #32]
   527d8:	ldp	x23, x24, [sp, #48]
   527dc:	ldp	x25, x26, [sp, #64]
   527e0:	ldp	x27, x28, [sp, #80]
   527e4:	ldp	x29, x30, [sp], #112
   527e8:	b	c3c0 <mpfr_underflow@plt>
   527ec:	cmp	x1, x23
   527f0:	b.eq	5280c <mpfr_set_z_2exp@@Base+0x31c>  // b.none
   527f4:	lsl	x2, x2, #3
   527f8:	mov	x0, x23
   527fc:	str	x5, [sp, #96]
   52800:	bl	ba10 <memcpy@plt>
   52804:	ldr	x3, [x19]
   52808:	ldr	x5, [sp, #96]
   5280c:	neg	w1, w3
   52810:	ands	w1, w1, #0x3f
   52814:	b.eq	528a8 <mpfr_set_z_2exp@@Base+0x3b8>  // b.none
   52818:	ldr	x4, [x23]
   5281c:	sub	w0, w1, #0x1
   52820:	mov	x2, #0x2                   	// #2
   52824:	mov	x1, #0x1                   	// #1
   52828:	lsl	x2, x2, x0
   5282c:	neg	x3, x2
   52830:	lsl	x1, x1, x0
   52834:	and	x0, x3, x4
   52838:	sub	x3, x1, #0x1
   5283c:	str	x0, [x23]
   52840:	ands	x3, x3, x4
   52844:	and	x1, x1, x4
   52848:	ccmp	x26, #0x0, #0x4, eq  // eq = none
   5284c:	b.le	5262c <mpfr_set_z_2exp@@Base+0x13c>
   52850:	sub	x26, x26, #0x1
   52854:	neg	w3, w21
   52858:	mov	x0, #0xffffffffffffffff    	// #-1
   5285c:	cmp	x21, #0x0
   52860:	lsl	x0, x0, x3
   52864:	ldr	x3, [x5, x26, lsl #3]
   52868:	bic	x0, x3, x0
   5286c:	csel	x3, x0, x3, ne  // ne = any
   52870:	cbnz	x3, 5262c <mpfr_set_z_2exp@@Base+0x13c>
   52874:	cbz	x26, 52930 <mpfr_set_z_2exp@@Base+0x440>
   52878:	sub	x26, x26, #0x1
   5287c:	cmp	x26, #0x0
   52880:	ldr	x3, [x5, x26, lsl #3]
   52884:	ccmp	x3, #0x0, #0x0, gt
   52888:	b.eq	52878 <mpfr_set_z_2exp@@Base+0x388>  // b.none
   5288c:	b	5262c <mpfr_set_z_2exp@@Base+0x13c>
   52890:	orr	x1, x1, x3
   52894:	cmp	w24, #0x1
   52898:	b.ne	52968 <mpfr_set_z_2exp@@Base+0x478>  // b.any
   5289c:	cmp	x1, #0x0
   528a0:	csetm	w1, ne  // ne = any
   528a4:	b	52758 <mpfr_set_z_2exp@@Base+0x268>
   528a8:	cbnz	x26, 528fc <mpfr_set_z_2exp@@Base+0x40c>
   528ac:	nop
   528b0:	cbz	w24, 527a4 <mpfr_set_z_2exp@@Base+0x2b4>
   528b4:	cmp	w24, #0x1
   528b8:	mov	x1, #0x0                   	// #0
   528bc:	b.eq	5289c <mpfr_set_z_2exp@@Base+0x3ac>  // b.none
   528c0:	add	w0, w24, w25, lsr #31
   528c4:	cmp	w0, #0x3
   528c8:	b.eq	5289c <mpfr_set_z_2exp@@Base+0x3ac>  // b.none
   528cc:	mov	w1, #0x0                   	// #0
   528d0:	b	52758 <mpfr_set_z_2exp@@Base+0x268>
   528d4:	ldur	x0, [x1, #-8]
   528d8:	sub	w6, w6, w21
   528dc:	ldr	x4, [x23]
   528e0:	lsr	x6, x0, x6
   528e4:	orr	x4, x4, x6
   528e8:	str	x4, [x23]
   528ec:	ldr	x0, [x19]
   528f0:	neg	w0, w0
   528f4:	ands	w1, w0, #0x3f
   528f8:	b.ne	5281c <mpfr_set_z_2exp@@Base+0x32c>  // b.any
   528fc:	sub	x0, x26, #0x1
   52900:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   52904:	lsr	x21, x1, x21
   52908:	sub	x3, x21, #0x1
   5290c:	cmp	x0, #0x0
   52910:	lsl	x2, x0, #3
   52914:	ldr	x1, [x5, x0, lsl #3]
   52918:	and	x3, x3, x1
   5291c:	and	x1, x1, x21
   52920:	ccmp	x3, #0x0, #0x0, gt
   52924:	b.eq	52980 <mpfr_set_z_2exp@@Base+0x490>  // b.none
   52928:	mov	x2, #0x1                   	// #1
   5292c:	b	5262c <mpfr_set_z_2exp@@Base+0x13c>
   52930:	cbnz	w24, 52894 <mpfr_set_z_2exp@@Base+0x3a4>
   52934:	cbz	x1, 527a4 <mpfr_set_z_2exp@@Base+0x2b4>
   52938:	ldr	x0, [x23]
   5293c:	nop
   52940:	tst	x0, x2
   52944:	b.ne	5263c <mpfr_set_z_2exp@@Base+0x14c>  // b.any
   52948:	mov	w1, #0xffffffff            	// #-1
   5294c:	b	52758 <mpfr_set_z_2exp@@Base+0x268>
   52950:	cmp	x0, x5
   52954:	b.eq	52794 <mpfr_set_z_2exp@@Base+0x2a4>  // b.none
   52958:	lsl	x2, x7, #3
   5295c:	mov	x1, x5
   52960:	bl	ba10 <memcpy@plt>
   52964:	b	52794 <mpfr_set_z_2exp@@Base+0x2a4>
   52968:	add	w0, w24, w25, lsr #31
   5296c:	cmp	w0, #0x3
   52970:	b.eq	5289c <mpfr_set_z_2exp@@Base+0x3ac>  // b.none
   52974:	cbz	x1, 527a4 <mpfr_set_z_2exp@@Base+0x2b4>
   52978:	ldr	x0, [x23]
   5297c:	b	5263c <mpfr_set_z_2exp@@Base+0x14c>
   52980:	add	x0, x5, x2
   52984:	sub	x26, x26, #0x2
   52988:	mov	x2, #0x1                   	// #1
   5298c:	ldur	x3, [x0, #-8]
   52990:	cbnz	x3, 5262c <mpfr_set_z_2exp@@Base+0x13c>
   52994:	b	52874 <mpfr_set_z_2exp@@Base+0x384>
   52998:	ldp	x21, x22, [sp, #32]
   5299c:	mov	w2, w25
   529a0:	ldp	x27, x28, [sp, #80]
   529a4:	mov	w1, w24
   529a8:	mov	x0, x19
   529ac:	ldp	x19, x20, [sp, #16]
   529b0:	ldp	x23, x24, [sp, #48]
   529b4:	ldp	x25, x26, [sp, #64]
   529b8:	ldp	x29, x30, [sp], #112
   529bc:	b	bf40 <mpfr_overflow@plt>
   529c0:	mov	w2, w25
   529c4:	mov	w1, w24
   529c8:	mov	x0, x19
   529cc:	b	529ac <mpfr_set_z_2exp@@Base+0x4bc>
   529d0:	cmp	w24, #0x0
   529d4:	mov	w2, w25
   529d8:	csinc	w1, w24, wzr, ne  // ne = any
   529dc:	b	527cc <mpfr_set_z_2exp@@Base+0x2dc>

00000000000529e0 <mpfr_ai@@Base>:
   529e0:	sub	sp, sp, #0x2a0
   529e4:	stp	x29, x30, [sp]
   529e8:	mov	x29, sp
   529ec:	stp	x27, x28, [sp, #80]
   529f0:	mov	x28, x1
   529f4:	ldr	x1, [x1, #16]
   529f8:	stp	x19, x20, [sp, #16]
   529fc:	str	x0, [sp, #104]
   52a00:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   52a04:	str	w2, [sp, #144]
   52a08:	cmp	x1, x0
   52a0c:	b.le	53c9c <mpfr_ai@@Base+0x12bc>
   52a10:	mrs	x5, tpidr_el0
   52a14:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   52a18:	ldr	x1, [x0, #2576]
   52a1c:	add	x0, x0, #0xa10
   52a20:	blr	x1
   52a24:	stp	x21, x22, [sp, #32]
   52a28:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   52a2c:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   52a30:	ldr	w0, [x5, x0]
   52a34:	add	x19, sp, #0x160
   52a38:	str	w0, [sp, #148]
   52a3c:	add	x20, sp, #0x180
   52a40:	stp	x23, x24, [sp, #48]
   52a44:	mov	x1, #0x20                  	// #32
   52a48:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   52a4c:	ldr	x3, [x0, #2512]
   52a50:	add	x0, x0, #0x9d0
   52a54:	blr	x3
   52a58:	add	x3, x5, x0
   52a5c:	ldr	x0, [x5, x0]
   52a60:	stp	x25, x26, [sp, #64]
   52a64:	str	x4, [x3]
   52a68:	str	x0, [sp, #232]
   52a6c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   52a70:	ldr	x6, [x0, #2544]
   52a74:	add	x0, x0, #0x9f0
   52a78:	blr	x6
   52a7c:	ldr	x3, [x5, x0]
   52a80:	str	x2, [x5, x0]
   52a84:	mov	x0, x19
   52a88:	str	x5, [sp, #152]
   52a8c:	str	x3, [sp, #184]
   52a90:	bl	ca80 <mpfr_init2@plt>
   52a94:	mov	x0, x20
   52a98:	mov	x1, #0x20                  	// #32
   52a9c:	bl	ca80 <mpfr_init2@plt>
   52aa0:	ldr	w3, [x28, #8]
   52aa4:	mov	x1, x28
   52aa8:	mov	w2, #0x0                   	// #0
   52aac:	mov	x0, x19
   52ab0:	bl	c6a0 <mpfr_set4@plt>
   52ab4:	mov	w3, #0x0                   	// #0
   52ab8:	mov	x2, #0x0                   	// #0
   52abc:	mov	x1, #0x51f                 	// #1311
   52ac0:	mov	x0, x20
   52ac4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   52ac8:	ldr	x0, [sp, #104]
   52acc:	mov	w3, #0x0                   	// #0
   52ad0:	mov	x1, x20
   52ad4:	ldr	x2, [x0]
   52ad8:	mov	x0, x20
   52adc:	bl	ba50 <mpfr_mul_ui@plt>
   52ae0:	ldr	w0, [x28, #8]
   52ae4:	mov	w3, #0x0                   	// #0
   52ae8:	tbnz	w0, #31, 53b2c <mpfr_ai@@Base+0x114c>
   52aec:	mov	x1, x19
   52af0:	mov	x0, x19
   52af4:	mov	x2, #0x4ccd                	// #19661
   52af8:	bl	ba50 <mpfr_mul_ui@plt>
   52afc:	mov	x1, x19
   52b00:	mov	x2, x20
   52b04:	mov	w3, #0x0                   	// #0
   52b08:	mov	x0, x19
   52b0c:	bl	c1a0 <mpfr_add@plt>
   52b10:	mov	x0, x20
   52b14:	bl	c070 <mpfr_clear@plt>
   52b18:	mov	x1, #0x100000              	// #1048576
   52b1c:	mov	x2, #0x0                   	// #0
   52b20:	mov	x0, x19
   52b24:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   52b28:	mov	w1, w0
   52b2c:	mov	x0, x19
   52b30:	mov	w19, w1
   52b34:	bl	c070 <mpfr_clear@plt>
   52b38:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   52b3c:	ldr	x1, [x0, #2576]
   52b40:	add	x0, x0, #0xa10
   52b44:	blr	x1
   52b48:	ldr	w1, [sp, #148]
   52b4c:	ldr	x5, [sp, #152]
   52b50:	str	w1, [x5, x0]
   52b54:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   52b58:	ldr	x1, [x0, #2544]
   52b5c:	add	x0, x0, #0x9f0
   52b60:	blr	x1
   52b64:	ldr	x1, [sp, #184]
   52b68:	str	x1, [x5, x0]
   52b6c:	cmp	w19, #0x0
   52b70:	add	x2, x5, x0
   52b74:	b.le	53528 <mpfr_ai@@Base+0xb48>
   52b78:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   52b7c:	str	x3, [x2]
   52b80:	ldr	x2, [sp, #104]
   52b84:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   52b88:	add	x20, sp, #0x220
   52b8c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   52b90:	ldr	x1, [x0, #2512]
   52b94:	add	x0, x0, #0x9d0
   52b98:	blr	x1
   52b9c:	add	x22, sp, #0x240
   52ba0:	mov	x1, #0x20                  	// #32
   52ba4:	ldr	x19, [x2]
   52ba8:	str	x4, [x5, x0]
   52bac:	mov	x0, x20
   52bb0:	str	x22, [sp, #224]
   52bb4:	str	x20, [sp, #240]
   52bb8:	bl	ca80 <mpfr_init2@plt>
   52bbc:	mov	x0, x22
   52bc0:	mov	x1, #0x20                  	// #32
   52bc4:	bl	ca80 <mpfr_init2@plt>
   52bc8:	mov	x21, #0x6                   	// #6
   52bcc:	add	x0, x19, #0xb
   52bd0:	mov	x1, x28
   52bd4:	mov	w3, #0x1                   	// #1
   52bd8:	mov	w2, #0x2                   	// #2
   52bdc:	str	x0, [sp, #128]
   52be0:	mov	x0, x20
   52be4:	bl	c6a0 <mpfr_set4@plt>
   52be8:	str	xzr, [sp, #312]
   52bec:	mov	w3, #0x2                   	// #2
   52bf0:	mov	x1, x20
   52bf4:	mov	x0, x20
   52bf8:	mov	x2, #0x3                   	// #3
   52bfc:	bl	bf70 <mpfr_pow_ui@plt>
   52c00:	mov	x1, x20
   52c04:	mov	x0, x20
   52c08:	mov	w2, #0x2                   	// #2
   52c0c:	bl	c930 <mpfr_sqrt@plt>
   52c10:	mov	w3, #0x2                   	// #2
   52c14:	mov	w2, #0xa                   	// #10
   52c18:	mov	x0, x22
   52c1c:	adrp	x1, 64000 <mpfr_bases@@Base+0x1e58>
   52c20:	add	x1, x1, #0x448
   52c24:	bl	c6c0 <mpfr_set_str@plt>
   52c28:	mov	x1, x20
   52c2c:	mov	x2, x22
   52c30:	mov	x0, x22
   52c34:	mov	w3, #0x2                   	// #2
   52c38:	bl	bd50 <mpfr_mul@plt>
   52c3c:	ldr	x20, [x28, #16]
   52c40:	cmp	x20, #0x0
   52c44:	b.gt	534e4 <mpfr_ai@@Base+0xb04>
   52c48:	mov	x1, #0x2                   	// #2
   52c4c:	str	x1, [sp, #216]
   52c50:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   52c54:	cmp	x20, x0
   52c58:	b.eq	52c80 <mpfr_ai@@Base+0x2a0>  // b.none
   52c5c:	ldr	w0, [x28, #8]
   52c60:	mov	x1, #0xa                   	// #10
   52c64:	str	x1, [sp, #216]
   52c68:	cmp	w0, #0x0
   52c6c:	b.le	52c80 <mpfr_ai@@Base+0x2a0>
   52c70:	mov	x0, #0x3                   	// #3
   52c74:	str	x0, [sp, #216]
   52c78:	cmp	x20, #0x0
   52c7c:	b.gt	53b8c <mpfr_ai@@Base+0x11ac>
   52c80:	add	x0, x19, #0xb
   52c84:	cmp	x0, #0x1
   52c88:	b.eq	53d70 <mpfr_ai@@Base+0x1390>  // b.none
   52c8c:	b.le	54130 <mpfr_ai@@Base+0x1750>
   52c90:	add	x19, x19, #0xa
   52c94:	mov	w0, #0x40                  	// #64
   52c98:	clz	x19, x19
   52c9c:	sub	w19, w0, w19
   52ca0:	ldr	x0, [sp, #128]
   52ca4:	add	x19, x0, w19, sxtw
   52ca8:	ldr	x0, [sp, #216]
   52cac:	add	x21, x0, x21
   52cb0:	ldr	x0, [sp, #128]
   52cb4:	add	x1, x21, x19
   52cb8:	mov	x21, x1
   52cbc:	bl	bf20 <__gmpfr_isqrt@plt>
   52cc0:	add	x19, x0, #0x1
   52cc4:	str	x0, [sp, #120]
   52cc8:	lsl	x19, x19, #5
   52ccc:	mov	x0, x19
   52cd0:	bl	ccf0 <mpfr_allocate_func@plt>
   52cd4:	str	x0, [sp, #112]
   52cd8:	cbz	x0, 54118 <mpfr_ai@@Base+0x1738>
   52cdc:	ldr	x0, [sp, #112]
   52ce0:	sub	x19, x19, #0x20
   52ce4:	mov	x20, x0
   52ce8:	add	x19, x19, x0
   52cec:	nop
   52cf0:	mov	x0, x20
   52cf4:	bl	bbd0 <mpfr_init@plt>
   52cf8:	cmp	x19, x20
   52cfc:	add	x20, x20, #0x20
   52d00:	b.ne	52cf0 <mpfr_ai@@Base+0x310>  // b.any
   52d04:	add	x27, sp, #0x1a0
   52d08:	add	x26, sp, #0x1c0
   52d0c:	mov	x0, x27
   52d10:	bl	bbd0 <mpfr_init@plt>
   52d14:	mov	x0, x26
   52d18:	add	x22, sp, #0x1e0
   52d1c:	bl	bbd0 <mpfr_init@plt>
   52d20:	add	x25, sp, #0x200
   52d24:	mov	x0, x22
   52d28:	bl	bbd0 <mpfr_init@plt>
   52d2c:	add	x19, sp, #0x260
   52d30:	mov	x0, x25
   52d34:	str	x19, [sp, #168]
   52d38:	bl	bbd0 <mpfr_init@plt>
   52d3c:	add	x1, sp, #0x280
   52d40:	mov	x0, #0x40                  	// #64
   52d44:	str	x1, [sp, #176]
   52d48:	mov	x24, x21
   52d4c:	str	x0, [sp, #344]
   52d50:	mov	x0, x19
   52d54:	mov	x19, x1
   52d58:	bl	bbd0 <mpfr_init@plt>
   52d5c:	mov	x0, x19
   52d60:	bl	bbd0 <mpfr_init@plt>
   52d64:	ldp	x19, x0, [sp, #112]
   52d68:	str	x19, [sp, #336]
   52d6c:	lsl	x0, x0, #5
   52d70:	str	x0, [sp, #208]
   52d74:	add	x0, x0, x19
   52d78:	str	x0, [sp, #160]
   52d7c:	nop
   52d80:	mov	x0, x19
   52d84:	mov	x1, x24
   52d88:	bl	bed0 <mpfr_set_prec@plt>
   52d8c:	ldr	x1, [sp, #160]
   52d90:	mov	x0, x19
   52d94:	add	x19, x19, #0x20
   52d98:	cmp	x1, x0
   52d9c:	b.ne	52d80 <mpfr_ai@@Base+0x3a0>  // b.any
   52da0:	mov	x1, x24
   52da4:	mov	x0, x27
   52da8:	bl	bed0 <mpfr_set_prec@plt>
   52dac:	mov	x1, x24
   52db0:	mov	x0, x26
   52db4:	bl	bed0 <mpfr_set_prec@plt>
   52db8:	mov	x1, x24
   52dbc:	mov	x0, x22
   52dc0:	bl	bed0 <mpfr_set_prec@plt>
   52dc4:	mov	x1, x24
   52dc8:	mov	x0, x25
   52dcc:	bl	bed0 <mpfr_set_prec@plt>
   52dd0:	mov	w3, #0x0                   	// #0
   52dd4:	mov	x2, #0x0                   	// #0
   52dd8:	mov	x1, #0x1                   	// #1
   52ddc:	mov	x0, x26
   52de0:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   52de4:	ldr	w3, [x28, #8]
   52de8:	mov	x1, x28
   52dec:	ldr	x20, [sp, #112]
   52df0:	mov	w2, #0x0                   	// #0
   52df4:	mov	x0, x22
   52df8:	bl	c6a0 <mpfr_set4@plt>
   52dfc:	add	x19, x20, #0x20
   52e00:	mov	w3, #0x2                   	// #2
   52e04:	mov	x2, #0x0                   	// #0
   52e08:	mov	x1, #0x1                   	// #1
   52e0c:	mov	x0, x20
   52e10:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   52e14:	mov	x1, x22
   52e18:	mov	w2, #0x2                   	// #2
   52e1c:	mov	x0, x19
   52e20:	bl	c400 <mpfr_sqr@plt>
   52e24:	ldr	w3, [x28, #8]
   52e28:	mov	x1, x19
   52e2c:	mov	x0, x19
   52e30:	mov	x2, x28
   52e34:	cmp	w3, #0x0
   52e38:	cset	w3, le
   52e3c:	add	w3, w3, #0x2
   52e40:	bl	bd50 <mpfr_mul@plt>
   52e44:	ldr	w0, [x28, #8]
   52e48:	tbnz	w0, #31, 534bc <mpfr_ai@@Base+0xadc>
   52e4c:	mov	w1, #0x2                   	// #2
   52e50:	mov	x0, x19
   52e54:	bl	bca0 <mpfr_get_ui@plt>
   52e58:	str	x0, [sp, #248]
   52e5c:	ldr	w1, [x28, #8]
   52e60:	tbnz	w1, #31, 53494 <mpfr_ai@@Base+0xab4>
   52e64:	ldr	x0, [sp, #120]
   52e68:	mov	x20, #0x2                   	// #2
   52e6c:	cmp	x0, #0x1
   52e70:	ldr	x0, [sp, #112]
   52e74:	add	x21, x0, #0x40
   52e78:	b.ls	52eb0 <mpfr_ai@@Base+0x4d0>  // b.plast
   52e7c:	nop
   52e80:	tbnz	w20, #0, 53244 <mpfr_ai@@Base+0x864>
   52e84:	ldr	x3, [sp, #112]
   52e88:	lsr	x1, x20, #1
   52e8c:	mov	x0, x21
   52e90:	mov	w2, #0x0                   	// #0
   52e94:	add	x1, x3, x1, lsl #5
   52e98:	bl	c400 <mpfr_sqr@plt>
   52e9c:	ldr	x0, [sp, #120]
   52ea0:	add	x21, x21, #0x20
   52ea4:	cmp	x20, x0
   52ea8:	add	x20, x20, #0x1
   52eac:	b.ne	52e80 <mpfr_ai@@Base+0x4a0>  // b.any
   52eb0:	ldp	x21, x23, [sp, #168]
   52eb4:	mov	x2, x24
   52eb8:	mov	x1, x23
   52ebc:	mov	x0, x21
   52ec0:	bl	bba0 <mpfr_gamma_one_and_two_third@plt>
   52ec4:	mov	w3, #0x0                   	// #0
   52ec8:	mov	x2, #0x0                   	// #0
   52ecc:	mov	x1, #0x9                   	// #9
   52ed0:	mov	x0, x26
   52ed4:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   52ed8:	ldr	x19, [sp, #120]
   52edc:	mov	x1, x26
   52ee0:	mov	w2, #0x0                   	// #0
   52ee4:	mov	x0, x26
   52ee8:	sub	x3, x19, x19, lsl #2
   52eec:	str	x3, [sp, #256]
   52ef0:	mov	x20, x3
   52ef4:	bl	cd20 <mpfr_cbrt@plt>
   52ef8:	mov	x2, x23
   52efc:	mov	x1, x26
   52f00:	mov	w3, #0x0                   	// #0
   52f04:	mov	x0, x26
   52f08:	bl	bd50 <mpfr_mul@plt>
   52f0c:	add	x0, x20, #0x3
   52f10:	mov	x2, x26
   52f14:	mov	x20, x19
   52f18:	mov	w3, #0x0                   	// #0
   52f1c:	mov	x1, #0x1                   	// #1
   52f20:	str	x0, [sp, #288]
   52f24:	mov	x0, x26
   52f28:	bl	c2f0 <mpfr_ui_div@plt>
   52f2c:	sub	x0, x20, #0x1
   52f30:	mov	w3, #0x0                   	// #0
   52f34:	mov	x2, #0x0                   	// #0
   52f38:	mov	x1, #0x3                   	// #3
   52f3c:	str	x0, [sp, #264]
   52f40:	mov	x0, x22
   52f44:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   52f48:	mov	x19, #0x0                   	// #0
   52f4c:	mov	x1, x22
   52f50:	mov	w2, #0x0                   	// #0
   52f54:	mov	x0, x22
   52f58:	bl	cd20 <mpfr_cbrt@plt>
   52f5c:	mov	w3, #0x0                   	// #0
   52f60:	mov	x2, x21
   52f64:	mov	x1, x22
   52f68:	mov	x0, x22
   52f6c:	bl	bd50 <mpfr_mul@plt>
   52f70:	str	xzr, [sp, #136]
   52f74:	mov	x1, x22
   52f78:	mov	w2, #0x0                   	// #0
   52f7c:	mov	x0, x22
   52f80:	bl	bd70 <mpfr_neg@plt>
   52f84:	mov	x1, x28
   52f88:	mov	x2, x22
   52f8c:	mov	x0, x22
   52f90:	mov	w3, #0x0                   	// #0
   52f94:	bl	c620 <mpfr_div@plt>
   52f98:	stp	x24, x28, [sp, #320]
   52f9c:	add	x0, x20, x20, lsl #1
   52fa0:	ldr	x2, [sp, #208]
   52fa4:	sub	x1, x20, #0x2
   52fa8:	ldr	x28, [sp, #160]
   52fac:	sub	x20, x2, #0x20
   52fb0:	ldr	x2, [sp, #112]
   52fb4:	add	x20, x2, x20
   52fb8:	add	x1, x2, x1, lsl #5
   52fbc:	str	x1, [sp, #200]
   52fc0:	sub	x1, x0, #0x3
   52fc4:	str	x1, [sp, #192]
   52fc8:	add	x1, x0, #0x3
   52fcc:	str	x1, [sp, #304]
   52fd0:	sub	x1, x0, #0x1
   52fd4:	str	x1, [sp, #296]
   52fd8:	mov	x1, #0x3                   	// #3
   52fdc:	sub	x1, x1, x0
   52fe0:	str	x1, [sp, #272]
   52fe4:	mov	x1, #0x4                   	// #4
   52fe8:	sub	x0, x1, x0
   52fec:	str	x0, [sp, #280]
   52ff0:	mov	w0, #0x1                   	// #1
   52ff4:	str	w0, [sp, #520]
   52ff8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   52ffc:	str	x0, [sp, #528]
   53000:	ldp	x0, x23, [sp, #192]
   53004:	mov	x1, x20
   53008:	ldr	w3, [x20, #8]
   5300c:	mov	w2, #0x0                   	// #0
   53010:	add	x19, x19, x0
   53014:	ldr	x0, [sp, #272]
   53018:	mov	x21, x19
   5301c:	add	x24, x0, x19
   53020:	mov	x0, x27
   53024:	bl	c6a0 <mpfr_set4@plt>
   53028:	mov	w4, #0x0                   	// #0
   5302c:	mov	x3, x21
   53030:	sub	x2, x21, #0x1
   53034:	mov	x1, x27
   53038:	mov	x0, x27
   5303c:	bl	be80 <mpfr_div_ui2@plt>
   53040:	mov	x2, x23
   53044:	sub	x21, x21, #0x3
   53048:	mov	x1, x27
   5304c:	mov	x0, x27
   53050:	mov	w3, #0x0                   	// #0
   53054:	bl	c1a0 <mpfr_add@plt>
   53058:	sub	x23, x23, #0x20
   5305c:	cmp	x21, x24
   53060:	b.ne	53028 <mpfr_ai@@Base+0x648>  // b.any
   53064:	ldr	x0, [sp, #288]
   53068:	mov	x2, x26
   5306c:	mov	x1, x27
   53070:	mov	w3, #0x0                   	// #0
   53074:	add	x19, x0, x19
   53078:	mov	x0, x27
   5307c:	bl	bd50 <mpfr_mul@plt>
   53080:	mov	x21, #0x0                   	// #0
   53084:	mov	x2, x27
   53088:	mov	x1, x25
   5308c:	mov	w3, #0x0                   	// #0
   53090:	mov	x0, x25
   53094:	bl	c1a0 <mpfr_add@plt>
   53098:	mov	x2, x28
   5309c:	mov	x1, x26
   530a0:	mov	x0, x26
   530a4:	mov	w3, #0x0                   	// #0
   530a8:	bl	bd50 <mpfr_mul@plt>
   530ac:	nop
   530b0:	add	x2, x19, #0x2
   530b4:	mov	x23, x19
   530b8:	add	x19, x19, #0x3
   530bc:	mov	x0, x26
   530c0:	mov	x3, x19
   530c4:	mov	x1, x26
   530c8:	mov	w4, #0x0                   	// #0
   530cc:	bl	be80 <mpfr_div_ui2@plt>
   530d0:	ldr	x0, [sp, #264]
   530d4:	add	x21, x21, #0x1
   530d8:	cmp	x21, x0
   530dc:	b.ls	530b0 <mpfr_ai@@Base+0x6d0>  // b.plast
   530e0:	ldr	w3, [x20, #8]
   530e4:	add	x19, x23, #0x1
   530e8:	ldr	x0, [sp, #280]
   530ec:	mov	x21, x19
   530f0:	mov	x1, x20
   530f4:	mov	w2, #0x0                   	// #0
   530f8:	add	x23, x0, x23
   530fc:	mov	x0, x27
   53100:	ldr	x24, [sp, #200]
   53104:	bl	c6a0 <mpfr_set4@plt>
   53108:	mov	w4, #0x0                   	// #0
   5310c:	mov	x3, x21
   53110:	sub	x2, x21, #0x1
   53114:	mov	x1, x27
   53118:	mov	x0, x27
   5311c:	bl	be80 <mpfr_div_ui2@plt>
   53120:	mov	x2, x24
   53124:	sub	x21, x21, #0x3
   53128:	mov	x1, x27
   5312c:	mov	x0, x27
   53130:	mov	w3, #0x0                   	// #0
   53134:	bl	c1a0 <mpfr_add@plt>
   53138:	sub	x24, x24, #0x20
   5313c:	cmp	x21, x23
   53140:	b.ne	53108 <mpfr_ai@@Base+0x728>  // b.any
   53144:	ldr	x0, [sp, #256]
   53148:	mov	x2, x22
   5314c:	mov	x1, x27
   53150:	mov	w3, #0x0                   	// #0
   53154:	add	x19, x19, x0
   53158:	ldr	x0, [sp, #304]
   5315c:	add	x21, x19, #0x3
   53160:	mov	x23, x21
   53164:	add	x19, x0, x19
   53168:	mov	x0, x27
   5316c:	bl	bd50 <mpfr_mul@plt>
   53170:	mov	x2, x27
   53174:	mov	x1, x25
   53178:	mov	w3, #0x0                   	// #0
   5317c:	mov	x0, x25
   53180:	bl	c1a0 <mpfr_add@plt>
   53184:	mov	x2, x28
   53188:	mov	x1, x22
   5318c:	mov	x0, x22
   53190:	mov	w3, #0x0                   	// #0
   53194:	bl	bd50 <mpfr_mul@plt>
   53198:	add	x2, x23, #0x2
   5319c:	add	x23, x23, #0x3
   531a0:	mov	x3, x23
   531a4:	mov	x1, x22
   531a8:	mov	x0, x22
   531ac:	mov	w4, #0x0                   	// #0
   531b0:	bl	be80 <mpfr_div_ui2@plt>
   531b4:	cmp	x23, x19
   531b8:	b.ne	53198 <mpfr_ai@@Base+0x7b8>  // b.any
   531bc:	ldr	x1, [sp, #296]
   531c0:	ldr	x0, [sp, #464]
   531c4:	add	x19, x1, x21
   531c8:	ldr	x1, [sp, #192]
   531cc:	add	x21, x1, x21
   531d0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   531d4:	cmp	x0, x1
   531d8:	b.eq	531f4 <mpfr_ai@@Base+0x814>  // b.none
   531dc:	ldr	x2, [sp, #128]
   531e0:	ldr	x1, [sp, #528]
   531e4:	add	x0, x0, x2
   531e8:	add	x0, x0, #0x3
   531ec:	cmp	x0, x1
   531f0:	b.ge	53234 <mpfr_ai@@Base+0x854>  // b.tcont
   531f4:	ldr	x0, [sp, #496]
   531f8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   531fc:	cmp	x0, x1
   53200:	b.eq	5321c <mpfr_ai@@Base+0x83c>  // b.none
   53204:	ldr	x2, [sp, #128]
   53208:	ldr	x1, [sp, #528]
   5320c:	add	x0, x2, x0
   53210:	add	x0, x0, #0x3
   53214:	cmp	x0, x1
   53218:	b.ge	53234 <mpfr_ai@@Base+0x854>  // b.tcont
   5321c:	add	x1, x21, #0x5
   53220:	add	x0, x21, #0x4
   53224:	mul	x0, x0, x1
   53228:	ldr	x1, [sp, #248]
   5322c:	cmp	x1, x0, lsr #1
   53230:	b.ls	5325c <mpfr_ai@@Base+0x87c>  // b.plast
   53234:	ldr	x0, [sp, #136]
   53238:	add	x0, x0, #0x1
   5323c:	str	x0, [sp, #136]
   53240:	b	53000 <mpfr_ai@@Base+0x620>
   53244:	mov	x2, x19
   53248:	sub	x1, x21, #0x20
   5324c:	mov	x0, x21
   53250:	mov	w3, #0x0                   	// #0
   53254:	bl	bd50 <mpfr_mul@plt>
   53258:	b	52e9c <mpfr_ai@@Base+0x4bc>
   5325c:	ldr	x1, [sp, #120]
   53260:	mov	w20, #0x45                  	// #69
   53264:	ldp	x24, x28, [sp, #320]
   53268:	clz	x0, x1
   5326c:	sub	w20, w20, w0
   53270:	cmp	x1, #0x0
   53274:	mov	w0, #0x5                   	// #5
   53278:	csel	w20, w20, w0, ne  // ne = any
   5327c:	ldr	x0, [sp, #136]
   53280:	cbz	x0, 532a0 <mpfr_ai@@Base+0x8c0>
   53284:	add	x0, x0, #0x1
   53288:	cmp	x0, #0x1
   5328c:	b.ls	53d58 <mpfr_ai@@Base+0x1378>  // b.plast
   53290:	ldr	x0, [sp, #136]
   53294:	clz	x0, x0
   53298:	sub	w20, w20, w0
   5329c:	add	w20, w20, #0x40
   532a0:	ldr	x1, [sp, #312]
   532a4:	mov	x23, #0x0                   	// #0
   532a8:	ldr	x0, [sp, #528]
   532ac:	sub	x1, x1, x0
   532b0:	add	x20, x1, w20, sxtw
   532b4:	cmp	x24, x20
   532b8:	b.gt	53478 <mpfr_ai@@Base+0xa98>
   532bc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   532c0:	cmp	x0, x1
   532c4:	b.le	53bc4 <mpfr_ai@@Base+0x11e4>
   532c8:	ldr	x2, [sp, #104]
   532cc:	ldr	w0, [sp, #144]
   532d0:	ldr	x1, [sp, #512]
   532d4:	cmp	w0, #0x0
   532d8:	ldr	x0, [sp, #536]
   532dc:	sub	x1, x1, #0x1
   532e0:	ldr	x3, [x2]
   532e4:	asr	x1, x1, #6
   532e8:	add	x1, x1, #0x1
   532ec:	mov	x2, x23
   532f0:	cinc	x3, x3, eq  // eq = none
   532f4:	bl	c370 <mpfr_round_p@plt>
   532f8:	cbz	w0, 53bc4 <mpfr_ai@@Base+0x11e4>
   532fc:	ldr	w2, [sp, #144]
   53300:	mov	x1, x25
   53304:	ldr	w3, [sp, #520]
   53308:	ldr	x0, [sp, #104]
   5330c:	bl	c6a0 <mpfr_set4@plt>
   53310:	mov	w19, w0
   53314:	ldr	x0, [sp, #240]
   53318:	bl	c070 <mpfr_clear@plt>
   5331c:	ldr	x0, [sp, #224]
   53320:	bl	c070 <mpfr_clear@plt>
   53324:	ldr	x21, [sp, #160]
   53328:	ldr	x20, [sp, #336]
   5332c:	nop
   53330:	mov	x0, x20
   53334:	bl	c070 <mpfr_clear@plt>
   53338:	cmp	x20, x21
   5333c:	add	x20, x20, #0x20
   53340:	b.ne	53330 <mpfr_ai@@Base+0x950>  // b.any
   53344:	ldr	x0, [sp, #208]
   53348:	add	x1, x0, #0x20
   5334c:	ldr	x0, [sp, #112]
   53350:	bl	cc20 <mpfr_free_func@plt>
   53354:	mov	x0, x27
   53358:	bl	c070 <mpfr_clear@plt>
   5335c:	mov	x0, x26
   53360:	bl	c070 <mpfr_clear@plt>
   53364:	mov	x0, x22
   53368:	bl	c070 <mpfr_clear@plt>
   5336c:	mov	x0, x25
   53370:	bl	c070 <mpfr_clear@plt>
   53374:	ldr	x0, [sp, #168]
   53378:	bl	c070 <mpfr_clear@plt>
   5337c:	ldr	x0, [sp, #176]
   53380:	bl	c070 <mpfr_clear@plt>
   53384:	ldr	x0, [sp, #104]
   53388:	ldr	x3, [sp, #152]
   5338c:	ldr	x1, [x0, #16]
   53390:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   53394:	ldr	x2, [x0, #2576]
   53398:	add	x0, x0, #0xa10
   5339c:	blr	x2
   533a0:	ldr	w2, [sp, #148]
   533a4:	str	w2, [x3, x0]
   533a8:	add	x2, x3, x0
   533ac:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   533b0:	ldr	x4, [x0, #2512]
   533b4:	add	x0, x0, #0x9d0
   533b8:	blr	x4
   533bc:	ldr	x4, [sp, #232]
   533c0:	str	x4, [x3, x0]
   533c4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   533c8:	ldr	x5, [x0, #2544]
   533cc:	add	x0, x0, #0x9f0
   533d0:	blr	x5
   533d4:	ldr	x5, [sp, #184]
   533d8:	str	x5, [x3, x0]
   533dc:	cmp	x5, x1
   533e0:	ccmp	x4, x1, #0x0, ge  // ge = tcont
   533e4:	b.le	53420 <mpfr_ai@@Base+0xa40>
   533e8:	ldr	w2, [sp, #144]
   533ec:	mov	w1, w19
   533f0:	ldr	x0, [sp, #104]
   533f4:	bl	cb30 <mpfr_check_range@plt>
   533f8:	ldp	x21, x22, [sp, #32]
   533fc:	mov	w19, w0
   53400:	ldp	x23, x24, [sp, #48]
   53404:	ldp	x25, x26, [sp, #64]
   53408:	mov	w0, w19
   5340c:	ldp	x29, x30, [sp]
   53410:	ldp	x19, x20, [sp, #16]
   53414:	ldp	x27, x28, [sp, #80]
   53418:	add	sp, sp, #0x2a0
   5341c:	ret
   53420:	cbz	w19, 53454 <mpfr_ai@@Base+0xa74>
   53424:	ldr	w0, [sp, #148]
   53428:	ldp	x21, x22, [sp, #32]
   5342c:	orr	w0, w0, #0x8
   53430:	ldp	x23, x24, [sp, #48]
   53434:	ldp	x25, x26, [sp, #64]
   53438:	str	w0, [x2]
   5343c:	mov	w0, w19
   53440:	ldp	x29, x30, [sp]
   53444:	ldp	x19, x20, [sp, #16]
   53448:	ldp	x27, x28, [sp, #80]
   5344c:	add	sp, sp, #0x2a0
   53450:	ret
   53454:	mov	w0, w19
   53458:	ldp	x29, x30, [sp]
   5345c:	ldp	x19, x20, [sp, #16]
   53460:	ldp	x21, x22, [sp, #32]
   53464:	ldp	x23, x24, [sp, #48]
   53468:	ldp	x25, x26, [sp, #64]
   5346c:	ldp	x27, x28, [sp, #80]
   53470:	add	sp, sp, #0x2a0
   53474:	ret
   53478:	ldr	x2, [sp, #128]
   5347c:	sub	x23, x24, x20
   53480:	sub	x23, x23, #0x1
   53484:	add	x1, x2, x20
   53488:	cmp	x24, x1
   5348c:	csel	x23, x23, x2, le
   53490:	b	532bc <mpfr_ai@@Base+0x8dc>
   53494:	ldr	w0, [x19, #8]
   53498:	mov	x20, #0x2                   	// #2
   5349c:	neg	w0, w0
   534a0:	str	w0, [x19, #8]
   534a4:	ldr	x0, [sp, #120]
   534a8:	cmp	x0, #0x1
   534ac:	ldr	x0, [sp, #112]
   534b0:	add	x21, x0, #0x40
   534b4:	b.hi	52e80 <mpfr_ai@@Base+0x4a0>  // b.pmore
   534b8:	b	52eb0 <mpfr_ai@@Base+0x4d0>
   534bc:	ldr	w0, [x19, #8]
   534c0:	mov	w1, #0x2                   	// #2
   534c4:	neg	w0, w0
   534c8:	str	w0, [x19, #8]
   534cc:	mov	x0, x19
   534d0:	bl	bca0 <mpfr_get_ui@plt>
   534d4:	str	x0, [sp, #248]
   534d8:	ldr	w1, [x28, #8]
   534dc:	tbz	w1, #31, 52e64 <mpfr_ai@@Base+0x484>
   534e0:	b	53494 <mpfr_ai@@Base+0xab4>
   534e4:	mov	w1, #0x2                   	// #2
   534e8:	mov	x0, x22
   534ec:	bl	bca0 <mpfr_get_ui@plt>
   534f0:	ldr	x20, [x28, #16]
   534f4:	subs	x2, x20, #0x1
   534f8:	add	x1, x20, #0x2
   534fc:	csel	x1, x1, x2, mi  // mi = first
   53500:	mvn	x1, x1, asr #2
   53504:	add	x0, x1, x0
   53508:	mov	x1, #0x2                   	// #2
   5350c:	str	x1, [sp, #216]
   53510:	add	x21, x0, x21
   53514:	str	x0, [sp, #312]
   53518:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5351c:	cmp	x20, x0
   53520:	b.ne	52c5c <mpfr_ai@@Base+0x27c>  // b.any
   53524:	b	52c80 <mpfr_ai@@Base+0x2a0>
   53528:	ldr	x0, [sp, #104]
   5352c:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   53530:	ldr	x5, [sp, #152]
   53534:	ldr	x19, [x0]
   53538:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   5353c:	ldr	x1, [x0, #2512]
   53540:	add	x0, x0, #0x9d0
   53544:	blr	x1
   53548:	ldr	x3, [x28, #16]
   5354c:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
   53550:	str	x4, [x5, x0]
   53554:	mov	x0, #0xfffffffffffffeff    	// #-257
   53558:	str	x1, [x2]
   5355c:	movk	x0, #0x7fff, lsl #48
   53560:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   53564:	sub	x0, x0, x19
   53568:	cmp	x3, x1
   5356c:	b.eq	53da4 <mpfr_ai@@Base+0x13c4>  // b.none
   53570:	cmp	x0, #0xa
   53574:	b.le	53f44 <mpfr_ai@@Base+0x1564>
   53578:	add	x20, sp, #0x220
   5357c:	add	x22, sp, #0x240
   53580:	mov	x0, x20
   53584:	mov	x1, #0x20                  	// #32
   53588:	str	x22, [sp, #224]
   5358c:	add	x21, x19, #0xb
   53590:	str	x20, [sp, #240]
   53594:	bl	ca80 <mpfr_init2@plt>
   53598:	mov	x0, x22
   5359c:	mov	x1, #0x20                  	// #32
   535a0:	bl	ca80 <mpfr_init2@plt>
   535a4:	mov	x0, x20
   535a8:	mov	x1, x28
   535ac:	mov	w3, #0x1                   	// #1
   535b0:	mov	w2, #0x2                   	// #2
   535b4:	bl	c6a0 <mpfr_set4@plt>
   535b8:	str	xzr, [sp, #120]
   535bc:	mov	w3, #0x2                   	// #2
   535c0:	mov	x1, x20
   535c4:	mov	x0, x20
   535c8:	mov	x2, #0x3                   	// #3
   535cc:	bl	bf70 <mpfr_pow_ui@plt>
   535d0:	mov	x1, x20
   535d4:	mov	x0, x20
   535d8:	mov	w2, #0x2                   	// #2
   535dc:	bl	c930 <mpfr_sqrt@plt>
   535e0:	mov	w3, #0x2                   	// #2
   535e4:	mov	w2, #0xa                   	// #10
   535e8:	mov	x0, x22
   535ec:	adrp	x1, 64000 <mpfr_bases@@Base+0x1e58>
   535f0:	add	x1, x1, #0x448
   535f4:	bl	c6c0 <mpfr_set_str@plt>
   535f8:	mov	x1, x20
   535fc:	mov	x2, x22
   53600:	mov	x0, x22
   53604:	mov	w3, #0x2                   	// #2
   53608:	bl	bd50 <mpfr_mul@plt>
   5360c:	ldr	x20, [x28, #16]
   53610:	cmp	x20, #0x0
   53614:	b.le	53640 <mpfr_ai@@Base+0xc60>
   53618:	mov	w1, #0x2                   	// #2
   5361c:	mov	x0, x22
   53620:	bl	bca0 <mpfr_get_ui@plt>
   53624:	ldr	x20, [x28, #16]
   53628:	add	x25, x20, #0x2
   5362c:	subs	x1, x20, #0x1
   53630:	csel	x25, x25, x1, mi  // mi = first
   53634:	mvn	x25, x25, asr #2
   53638:	add	x0, x25, x0
   5363c:	str	x0, [sp, #120]
   53640:	mov	x1, #0x2                   	// #2
   53644:	str	x1, [sp, #128]
   53648:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5364c:	cmp	x20, x0
   53650:	b.eq	53698 <mpfr_ai@@Base+0xcb8>  // b.none
   53654:	ldr	w0, [x28, #8]
   53658:	mov	x1, #0xa                   	// #10
   5365c:	str	x1, [sp, #128]
   53660:	cmp	w0, #0x0
   53664:	b.le	53698 <mpfr_ai@@Base+0xcb8>
   53668:	mov	x0, #0x3                   	// #3
   5366c:	str	x0, [sp, #128]
   53670:	cmp	x20, #0x0
   53674:	b.le	53698 <mpfr_ai@@Base+0xcb8>
   53678:	ldr	x0, [sp, #224]
   5367c:	asr	x20, x20, #2
   53680:	add	x20, x20, #0x3
   53684:	mov	w1, #0x2                   	// #2
   53688:	bl	bca0 <mpfr_get_ui@plt>
   5368c:	add	x0, x20, x0
   53690:	str	x0, [sp, #128]
   53694:	nop
   53698:	cmp	x21, #0x1
   5369c:	b.eq	53f68 <mpfr_ai@@Base+0x1588>  // b.none
   536a0:	b.le	54160 <mpfr_ai@@Base+0x1780>
   536a4:	add	x19, x19, #0xa
   536a8:	mov	w20, #0x45                  	// #69
   536ac:	clz	x19, x19
   536b0:	sub	w19, w20, w19
   536b4:	sxtw	x19, w19
   536b8:	ldp	x0, x1, [sp, #120]
   536bc:	mov	x23, #0xfffffffffffffeff    	// #-257
   536c0:	movk	x23, #0x7fff, lsl #48
   536c4:	add	x20, x0, x1
   536c8:	sub	x0, x23, x21
   536cc:	add	x20, x20, x19
   536d0:	cmp	x20, x0
   536d4:	b.gt	54148 <mpfr_ai@@Base+0x1768>
   536d8:	add	x26, sp, #0x1c0
   536dc:	add	x22, sp, #0x1e0
   536e0:	mov	x0, x26
   536e4:	bl	bbd0 <mpfr_init@plt>
   536e8:	add	x19, sp, #0x260
   536ec:	mov	x0, x22
   536f0:	str	x19, [sp, #168]
   536f4:	bl	bbd0 <mpfr_init@plt>
   536f8:	add	x1, sp, #0x280
   536fc:	mov	x0, x19
   53700:	mov	x19, x1
   53704:	str	x23, [sp, #160]
   53708:	str	x1, [sp, #176]
   5370c:	add	x25, sp, #0x200
   53710:	bl	bbd0 <mpfr_init@plt>
   53714:	add	x27, sp, #0x1a0
   53718:	mov	x0, x19
   5371c:	bl	bbd0 <mpfr_init@plt>
   53720:	mov	x0, #0x40                  	// #64
   53724:	str	x0, [sp, #136]
   53728:	mov	x0, x25
   5372c:	bl	bbd0 <mpfr_init@plt>
   53730:	mov	x0, x27
   53734:	bl	bbd0 <mpfr_init@plt>
   53738:	mov	x0, x22
   5373c:	add	x20, x21, x20
   53740:	mov	x22, x26
   53744:	mov	x26, x0
   53748:	mov	x1, x20
   5374c:	mov	x0, x22
   53750:	bl	bed0 <mpfr_set_prec@plt>
   53754:	mov	x1, x20
   53758:	mov	x0, x26
   5375c:	bl	bed0 <mpfr_set_prec@plt>
   53760:	mov	x1, x20
   53764:	mov	x0, x25
   53768:	bl	bed0 <mpfr_set_prec@plt>
   5376c:	mov	x1, x20
   53770:	mov	x0, x27
   53774:	bl	bed0 <mpfr_set_prec@plt>
   53778:	mov	x1, x28
   5377c:	mov	w2, #0x2                   	// #2
   53780:	mov	x0, x25
   53784:	bl	c400 <mpfr_sqr@plt>
   53788:	ldr	w3, [x28, #8]
   5378c:	mov	x2, x28
   53790:	mov	x1, x25
   53794:	mov	x0, x25
   53798:	cmp	w3, #0x0
   5379c:	cset	w3, le
   537a0:	add	w3, w3, #0x2
   537a4:	bl	bd50 <mpfr_mul@plt>
   537a8:	ldr	w0, [x28, #8]
   537ac:	tbz	w0, #31, 537bc <mpfr_ai@@Base+0xddc>
   537b0:	ldr	w0, [sp, #520]
   537b4:	neg	w0, w0
   537b8:	str	w0, [sp, #520]
   537bc:	mov	w1, #0x2                   	// #2
   537c0:	mov	x0, x25
   537c4:	bl	bca0 <mpfr_get_ui@plt>
   537c8:	str	x0, [sp, #112]
   537cc:	ldr	w1, [x28, #8]
   537d0:	tbz	w1, #31, 537e0 <mpfr_ai@@Base+0xe00>
   537d4:	ldr	w0, [sp, #520]
   537d8:	neg	w0, w0
   537dc:	str	w0, [sp, #520]
   537e0:	ldp	x23, x24, [sp, #168]
   537e4:	mov	x2, x20
   537e8:	mov	x19, #0x2                   	// #2
   537ec:	mov	x1, x24
   537f0:	mov	x0, x23
   537f4:	bl	bba0 <mpfr_gamma_one_and_two_third@plt>
   537f8:	mov	w3, #0x0                   	// #0
   537fc:	mov	x2, #0x0                   	// #0
   53800:	mov	x1, #0x9                   	// #9
   53804:	mov	x0, x22
   53808:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   5380c:	mov	x1, x22
   53810:	mov	w2, #0x0                   	// #0
   53814:	mov	x0, x22
   53818:	bl	cd20 <mpfr_cbrt@plt>
   5381c:	mov	x2, x24
   53820:	mov	x1, x22
   53824:	mov	w3, #0x0                   	// #0
   53828:	mov	x0, x22
   5382c:	bl	bd50 <mpfr_mul@plt>
   53830:	mov	x24, x25
   53834:	mov	x2, x22
   53838:	mov	w3, #0x0                   	// #0
   5383c:	mov	x1, #0x1                   	// #1
   53840:	mov	x0, x22
   53844:	bl	c2f0 <mpfr_ui_div@plt>
   53848:	mov	x25, x21
   5384c:	mov	w3, #0x0                   	// #0
   53850:	mov	x2, #0x0                   	// #0
   53854:	mov	x1, #0x3                   	// #3
   53858:	mov	x0, x26
   5385c:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   53860:	mov	x1, x26
   53864:	mov	w2, #0x0                   	// #0
   53868:	mov	x0, x26
   5386c:	bl	cd20 <mpfr_cbrt@plt>
   53870:	mov	w3, #0x0                   	// #0
   53874:	mov	x2, x23
   53878:	mov	x1, x26
   5387c:	mov	x0, x26
   53880:	bl	bd50 <mpfr_mul@plt>
   53884:	mov	x1, x26
   53888:	mov	w2, #0x0                   	// #0
   5388c:	mov	x0, x26
   53890:	bl	bd70 <mpfr_neg@plt>
   53894:	mov	x2, x26
   53898:	mov	x1, x28
   5389c:	mov	w3, #0x0                   	// #0
   538a0:	mov	x0, x26
   538a4:	bl	c620 <mpfr_div@plt>
   538a8:	mov	x2, x26
   538ac:	mov	x1, x22
   538b0:	mov	x0, x27
   538b4:	mov	w3, #0x0                   	// #0
   538b8:	bl	c1a0 <mpfr_add@plt>
   538bc:	nop
   538c0:	mov	x2, x24
   538c4:	mov	x1, x22
   538c8:	mov	w3, #0x0                   	// #0
   538cc:	mov	x0, x22
   538d0:	bl	bd50 <mpfr_mul@plt>
   538d4:	add	x21, x19, #0x1
   538d8:	mov	x2, x24
   538dc:	mov	x1, x26
   538e0:	mov	w3, #0x0                   	// #0
   538e4:	mov	x0, x26
   538e8:	bl	bd50 <mpfr_mul@plt>
   538ec:	add	x23, x19, #0x2
   538f0:	mov	x3, x21
   538f4:	mov	x2, x19
   538f8:	mov	x1, x22
   538fc:	mov	x0, x22
   53900:	mov	w4, #0x0                   	// #0
   53904:	bl	be80 <mpfr_div_ui2@plt>
   53908:	mov	w4, #0x0                   	// #0
   5390c:	mov	x2, x21
   53910:	mov	x3, x23
   53914:	mov	x1, x26
   53918:	mov	x0, x26
   5391c:	bl	be80 <mpfr_div_ui2@plt>
   53920:	mov	x2, x22
   53924:	mov	x1, x27
   53928:	mov	w3, #0x0                   	// #0
   5392c:	mov	x0, x27
   53930:	bl	c1a0 <mpfr_add@plt>
   53934:	add	x21, x19, #0x3
   53938:	mov	x1, x27
   5393c:	mov	x2, x26
   53940:	mov	x0, x27
   53944:	mov	w3, #0x0                   	// #0
   53948:	bl	c1a0 <mpfr_add@plt>
   5394c:	ldr	x0, [sp, #464]
   53950:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   53954:	cmp	x0, x1
   53958:	b.eq	53b24 <mpfr_ai@@Base+0x1144>  // b.none
   5395c:	ldr	x1, [sp, #432]
   53960:	add	x0, x0, x25
   53964:	add	x0, x0, #0x2
   53968:	cmp	x0, x1
   5396c:	ldr	x0, [sp, #496]
   53970:	b.ge	539a8 <mpfr_ai@@Base+0xfc8>  // b.tcont
   53974:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   53978:	cmp	x0, x1
   5397c:	b.eq	53994 <mpfr_ai@@Base+0xfb4>  // b.none
   53980:	ldr	x1, [sp, #432]
   53984:	add	x0, x0, x25
   53988:	add	x0, x0, #0x2
   5398c:	cmp	x0, x1
   53990:	b.ge	539a8 <mpfr_ai@@Base+0xfc8>  // b.tcont
   53994:	add	x19, x19, #0x4
   53998:	ldr	x0, [sp, #112]
   5399c:	mul	x19, x19, x21
   539a0:	cmp	x0, x19, lsr #1
   539a4:	b.ls	539b0 <mpfr_ai@@Base+0xfd0>  // b.plast
   539a8:	mov	x19, x21
   539ac:	b	538c0 <mpfr_ai@@Base+0xee0>
   539b0:	mov	x0, x24
   539b4:	mov	x24, x21
   539b8:	cmp	x24, #0x1
   539bc:	mov	x21, x25
   539c0:	mov	x25, x0
   539c4:	b.eq	53d84 <mpfr_ai@@Base+0x13a4>  // b.none
   539c8:	b.ls	53d8c <mpfr_ai@@Base+0x13ac>  // b.plast
   539cc:	clz	x1, x23
   539d0:	mov	w0, #0x44                  	// #68
   539d4:	sub	w0, w0, w1
   539d8:	sxtw	x0, w0
   539dc:	ldr	x2, [sp, #120]
   539e0:	ldr	x1, [sp, #432]
   539e4:	sub	x19, x2, x1
   539e8:	add	x19, x19, x0
   539ec:	cmp	x20, x19
   539f0:	b.le	53b40 <mpfr_ai@@Base+0x1160>
   539f4:	add	x0, x21, x19
   539f8:	sub	x2, x20, x19
   539fc:	cmp	x20, x0
   53a00:	sub	x20, x2, #0x1
   53a04:	csel	x20, x20, x21, le
   53a08:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   53a0c:	cmp	x1, x0
   53a10:	b.le	53bac <mpfr_ai@@Base+0x11cc>
   53a14:	ldr	x2, [sp, #104]
   53a18:	ldr	w0, [sp, #144]
   53a1c:	ldr	x1, [sp, #416]
   53a20:	cmp	w0, #0x0
   53a24:	ldr	x0, [sp, #440]
   53a28:	sub	x1, x1, #0x1
   53a2c:	ldr	x3, [x2]
   53a30:	asr	x1, x1, #6
   53a34:	add	x1, x1, #0x1
   53a38:	mov	x2, x20
   53a3c:	cinc	x3, x3, eq  // eq = none
   53a40:	bl	c370 <mpfr_round_p@plt>
   53a44:	cbz	w0, 53bac <mpfr_ai@@Base+0x11cc>
   53a48:	ldr	w3, [sp, #424]
   53a4c:	mov	x1, x27
   53a50:	ldr	w21, [sp, #144]
   53a54:	mov	x0, x26
   53a58:	ldr	x20, [sp, #104]
   53a5c:	mov	w2, w21
   53a60:	mov	x26, x22
   53a64:	mov	x22, x0
   53a68:	mov	x0, x20
   53a6c:	bl	c6a0 <mpfr_set4@plt>
   53a70:	mov	w19, w0
   53a74:	mov	x0, x26
   53a78:	bl	c070 <mpfr_clear@plt>
   53a7c:	mov	x0, x22
   53a80:	bl	c070 <mpfr_clear@plt>
   53a84:	ldr	x0, [sp, #168]
   53a88:	bl	c070 <mpfr_clear@plt>
   53a8c:	ldr	x0, [sp, #176]
   53a90:	bl	c070 <mpfr_clear@plt>
   53a94:	mov	x0, x25
   53a98:	bl	c070 <mpfr_clear@plt>
   53a9c:	mov	x0, x27
   53aa0:	bl	c070 <mpfr_clear@plt>
   53aa4:	ldr	x0, [sp, #240]
   53aa8:	bl	c070 <mpfr_clear@plt>
   53aac:	ldr	x0, [sp, #224]
   53ab0:	bl	c070 <mpfr_clear@plt>
   53ab4:	ldr	x3, [sp, #152]
   53ab8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   53abc:	ldr	x2, [x0, #2576]
   53ac0:	add	x0, x0, #0xa10
   53ac4:	blr	x2
   53ac8:	ldr	w2, [sp, #148]
   53acc:	ldr	x1, [x20, #16]
   53ad0:	str	w2, [x3, x0]
   53ad4:	add	x2, x3, x0
   53ad8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   53adc:	ldr	x5, [x0, #2512]
   53ae0:	add	x0, x0, #0x9d0
   53ae4:	blr	x5
   53ae8:	ldr	x5, [sp, #232]
   53aec:	str	x5, [x3, x0]
   53af0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   53af4:	ldr	x6, [x0, #2544]
   53af8:	add	x0, x0, #0x9f0
   53afc:	blr	x6
   53b00:	ldr	x6, [sp, #184]
   53b04:	str	x6, [x3, x0]
   53b08:	cmp	x5, x1
   53b0c:	ccmp	x6, x1, #0x1, le
   53b10:	b.ge	53420 <mpfr_ai@@Base+0xa40>  // b.tcont
   53b14:	mov	w2, w21
   53b18:	mov	w1, w19
   53b1c:	mov	x0, x20
   53b20:	b	533f4 <mpfr_ai@@Base+0xa14>
   53b24:	ldr	x0, [sp, #496]
   53b28:	b	53974 <mpfr_ai@@Base+0xf94>
   53b2c:	mov	x1, x19
   53b30:	mov	x0, x19
   53b34:	mov	x2, #0xffffffffffffcccd    	// #-13107
   53b38:	bl	c960 <mpfr_mul_si@plt>
   53b3c:	b	52afc <mpfr_ai@@Base+0x11c>
   53b40:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   53b44:	mov	x20, #0x0                   	// #0
   53b48:	cmp	x1, x0
   53b4c:	b.gt	53a14 <mpfr_ai@@Base+0x1034>
   53b50:	ldr	x0, [sp, #128]
   53b54:	cmp	x24, #0x1
   53b58:	lsl	x0, x0, #1
   53b5c:	str	x0, [sp, #128]
   53b60:	add	x0, x21, #0x5
   53b64:	b.eq	53b7c <mpfr_ai@@Base+0x119c>  // b.none
   53b68:	b.ls	54078 <mpfr_ai@@Base+0x1698>  // b.plast
   53b6c:	clz	x23, x23
   53b70:	mov	w1, #0x40                  	// #64
   53b74:	sub	w23, w1, w23
   53b78:	add	x0, x0, w23, sxtw
   53b7c:	ldp	x1, x2, [sp, #120]
   53b80:	add	x20, x1, x2
   53b84:	add	x20, x20, x0
   53b88:	b	53748 <mpfr_ai@@Base+0xd68>
   53b8c:	ldr	x0, [sp, #224]
   53b90:	asr	x20, x20, #2
   53b94:	add	x20, x20, #0x3
   53b98:	mov	w1, #0x2                   	// #2
   53b9c:	bl	bca0 <mpfr_get_ui@plt>
   53ba0:	add	x0, x20, x0
   53ba4:	str	x0, [sp, #216]
   53ba8:	b	52c80 <mpfr_ai@@Base+0x2a0>
   53bac:	cbz	x20, 53b50 <mpfr_ai@@Base+0x1170>
   53bb0:	cmp	x21, x20
   53bb4:	b.le	53fa4 <mpfr_ai@@Base+0x15c4>
   53bb8:	add	x0, x21, x19
   53bbc:	add	x20, x0, #0x1
   53bc0:	b	53748 <mpfr_ai@@Base+0xd68>
   53bc4:	str	x19, [sp, #120]
   53bc8:	ldr	x24, [sp, #160]
   53bcc:	ldr	x19, [sp, #336]
   53bd0:	mov	x0, x19
   53bd4:	bl	c070 <mpfr_clear@plt>
   53bd8:	cmp	x24, x19
   53bdc:	add	x19, x19, #0x20
   53be0:	b.ne	53bd0 <mpfr_ai@@Base+0x11f0>  // b.any
   53be4:	ldr	x0, [sp, #208]
   53be8:	ldr	x19, [sp, #120]
   53bec:	add	x1, x0, #0x20
   53bf0:	ldr	x0, [sp, #112]
   53bf4:	bl	cc20 <mpfr_free_func@plt>
   53bf8:	mov	x0, x19
   53bfc:	bl	bf20 <__gmpfr_isqrt@plt>
   53c00:	add	x24, x0, #0x1
   53c04:	str	x0, [sp, #120]
   53c08:	lsl	x24, x24, #5
   53c0c:	mov	x0, x24
   53c10:	bl	ccf0 <mpfr_allocate_func@plt>
   53c14:	str	x0, [sp, #112]
   53c18:	cbz	x0, 54008 <mpfr_ai@@Base+0x1628>
   53c1c:	ldr	x1, [sp, #112]
   53c20:	sub	x0, x24, #0x20
   53c24:	str	x19, [sp, #136]
   53c28:	add	x0, x0, x1
   53c2c:	mov	x19, x1
   53c30:	mov	x24, x0
   53c34:	nop
   53c38:	mov	x0, x19
   53c3c:	bl	bbd0 <mpfr_init@plt>
   53c40:	cmp	x24, x19
   53c44:	add	x19, x19, #0x20
   53c48:	b.ne	53c38 <mpfr_ai@@Base+0x1258>  // b.any
   53c4c:	ldr	x19, [sp, #136]
   53c50:	cbnz	x23, 53cd0 <mpfr_ai@@Base+0x12f0>
   53c54:	ldr	x0, [sp, #216]
   53c58:	cmp	x19, #0x1
   53c5c:	lsl	x0, x0, #1
   53c60:	str	x0, [sp, #216]
   53c64:	ldr	x0, [sp, #128]
   53c68:	add	x0, x0, #0x6
   53c6c:	b.eq	53c88 <mpfr_ai@@Base+0x12a8>  // b.none
   53c70:	b.ls	5403c <mpfr_ai@@Base+0x165c>  // b.plast
   53c74:	add	x21, x21, #0x1
   53c78:	mov	w1, #0x40                  	// #64
   53c7c:	clz	x21, x21
   53c80:	sub	w1, w1, w21
   53c84:	add	x0, x0, w1, sxtw
   53c88:	ldr	x2, [sp, #216]
   53c8c:	ldr	x1, [sp, #312]
   53c90:	add	x1, x1, x2
   53c94:	add	x24, x1, x0
   53c98:	b	52d64 <mpfr_ai@@Base+0x384>
   53c9c:	mov	x2, #0x2                   	// #2
   53ca0:	movk	x2, #0x8000, lsl #48
   53ca4:	cmp	x1, x2
   53ca8:	b.eq	53f70 <mpfr_ai@@Base+0x1590>  // b.none
   53cac:	cmp	x1, x0
   53cb0:	b.ne	52a10 <mpfr_ai@@Base+0x30>  // b.any
   53cb4:	ldr	x2, [sp, #104]
   53cb8:	mov	w1, #0x1                   	// #1
   53cbc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   53cc0:	mov	w19, #0x0                   	// #0
   53cc4:	str	w1, [x2, #8]
   53cc8:	str	x0, [x2, #16]
   53ccc:	b	53408 <mpfr_ai@@Base+0xa28>
   53cd0:	ldr	x0, [sp, #128]
   53cd4:	cmp	x0, x23
   53cd8:	b.gt	53d78 <mpfr_ai@@Base+0x1398>
   53cdc:	ldr	x1, [sp, #128]
   53ce0:	mov	x0, #0xfffffffffffffeff    	// #-257
   53ce4:	movk	x0, #0x7fff, lsl #48
   53ce8:	sub	x0, x0, x1
   53cec:	ldr	x1, [sp, #344]
   53cf0:	cmp	x0, x1
   53cf4:	b.lt	54098 <mpfr_ai@@Base+0x16b8>  // b.tstop
   53cf8:	ldr	x0, [sp, #128]
   53cfc:	cmp	x19, #0x1
   53d00:	ldr	x1, [sp, #344]
   53d04:	add	x0, x0, x1
   53d08:	str	x0, [sp, #128]
   53d0c:	add	x0, x0, x0, lsr #63
   53d10:	asr	x0, x0, #1
   53d14:	str	x0, [sp, #344]
   53d18:	b.eq	54090 <mpfr_ai@@Base+0x16b0>  // b.none
   53d1c:	b.ls	540b0 <mpfr_ai@@Base+0x16d0>  // b.plast
   53d20:	add	x1, x21, #0x1
   53d24:	mov	w0, #0x42                  	// #66
   53d28:	clz	x1, x1
   53d2c:	sub	w0, w0, w1
   53d30:	sxtw	x0, w0
   53d34:	ldr	x1, [sp, #128]
   53d38:	ldr	x2, [sp, #528]
   53d3c:	add	x0, x1, x0
   53d40:	ldr	x1, [sp, #312]
   53d44:	add	x0, x0, x1
   53d48:	mov	x1, #0x6                   	// #6
   53d4c:	sub	x1, x1, x2
   53d50:	add	x24, x1, x0
   53d54:	b	52d64 <mpfr_ai@@Base+0x384>
   53d58:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   53d5c:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   53d60:	add	x2, x2, #0x480
   53d64:	add	x0, x0, #0x460
   53d68:	mov	w1, #0x206                 	// #518
   53d6c:	bl	cb40 <mpfr_assert_fail@plt>
   53d70:	ldr	x19, [sp, #128]
   53d74:	b	52ca8 <mpfr_ai@@Base+0x2c8>
   53d78:	add	x20, x0, x20
   53d7c:	add	x24, x20, #0x1
   53d80:	b	52d64 <mpfr_ai@@Base+0x384>
   53d84:	mov	x0, #0x4                   	// #4
   53d88:	b	539dc <mpfr_ai@@Base+0xffc>
   53d8c:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   53d90:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   53d94:	add	x2, x2, #0x588
   53d98:	add	x0, x0, #0x460
   53d9c:	mov	w1, #0xf0                  	// #240
   53da0:	bl	cb40 <mpfr_assert_fail@plt>
   53da4:	cmp	x0, #0x2
   53da8:	b.le	54054 <mpfr_ai@@Base+0x1674>
   53dac:	add	x19, x19, #0x3
   53db0:	add	x23, sp, #0x260
   53db4:	mov	x1, x19
   53db8:	mov	x0, x23
   53dbc:	add	x24, sp, #0x280
   53dc0:	stp	x23, x24, [sp, #168]
   53dc4:	bl	ca80 <mpfr_init2@plt>
   53dc8:	mov	x1, x19
   53dcc:	mov	x0, x24
   53dd0:	bl	ca80 <mpfr_init2@plt>
   53dd4:	mov	x22, #0xfffffffffffffeff    	// #-257
   53dd8:	ldr	x25, [sp, #104]
   53ddc:	mov	x21, #0x40                  	// #64
   53de0:	mov	x20, #0x8000000000000003    	// #-9223372036854775805
   53de4:	movk	x22, #0x7fff, lsl #48
   53de8:	mov	x2, x19
   53dec:	mov	x1, x24
   53df0:	mov	x0, x23
   53df4:	bl	bba0 <mpfr_gamma_one_and_two_third@plt>
   53df8:	mov	w3, #0x0                   	// #0
   53dfc:	mov	x2, #0x0                   	// #0
   53e00:	mov	x1, #0x9                   	// #9
   53e04:	mov	x0, x23
   53e08:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   53e0c:	mov	x1, x23
   53e10:	mov	w2, #0x0                   	// #0
   53e14:	mov	x0, x23
   53e18:	bl	cd20 <mpfr_cbrt@plt>
   53e1c:	mov	x2, x24
   53e20:	mov	x1, x23
   53e24:	mov	w3, #0x0                   	// #0
   53e28:	mov	x0, x23
   53e2c:	bl	bd50 <mpfr_mul@plt>
   53e30:	mov	x2, x23
   53e34:	mov	x0, x23
   53e38:	mov	w3, #0x0                   	// #0
   53e3c:	mov	x1, #0x1                   	// #1
   53e40:	bl	c2f0 <mpfr_ui_div@plt>
   53e44:	ldr	x0, [sp, #624]
   53e48:	cmp	x0, x20
   53e4c:	b.le	54020 <mpfr_ai@@Base+0x1640>
   53e50:	ldr	w0, [sp, #144]
   53e54:	sub	x2, x19, #0x3
   53e58:	ldr	x1, [sp, #608]
   53e5c:	cmp	w0, #0x0
   53e60:	ldr	x0, [sp, #632]
   53e64:	sub	x1, x1, #0x1
   53e68:	ldr	x3, [x25]
   53e6c:	asr	x1, x1, #6
   53e70:	add	x1, x1, #0x1
   53e74:	cinc	x3, x3, eq  // eq = none
   53e78:	bl	c370 <mpfr_round_p@plt>
   53e7c:	cbz	w0, 54020 <mpfr_ai@@Base+0x1640>
   53e80:	ldr	x24, [sp, #168]
   53e84:	ldr	w3, [sp, #616]
   53e88:	ldr	w2, [sp, #144]
   53e8c:	mov	x1, x24
   53e90:	ldr	x23, [sp, #104]
   53e94:	mov	x0, x23
   53e98:	bl	c6a0 <mpfr_set4@plt>
   53e9c:	mov	w19, w0
   53ea0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   53ea4:	ldr	x1, [x0, #2576]
   53ea8:	add	x0, x0, #0xa10
   53eac:	blr	x1
   53eb0:	ldr	w1, [sp, #148]
   53eb4:	ldr	x2, [sp, #152]
   53eb8:	add	x22, x2, x0
   53ebc:	str	w1, [x2, x0]
   53ec0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   53ec4:	ldr	x1, [x0, #2512]
   53ec8:	add	x0, x0, #0x9d0
   53ecc:	blr	x1
   53ed0:	ldr	x1, [sp, #232]
   53ed4:	add	x21, x2, x0
   53ed8:	str	x1, [x2, x0]
   53edc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   53ee0:	ldr	x1, [x0, #2544]
   53ee4:	add	x0, x0, #0x9f0
   53ee8:	blr	x1
   53eec:	add	x20, x2, x0
   53ef0:	ldr	x1, [sp, #184]
   53ef4:	str	x1, [x2, x0]
   53ef8:	mov	x0, x24
   53efc:	bl	c070 <mpfr_clear@plt>
   53f00:	ldr	x0, [sp, #176]
   53f04:	bl	c070 <mpfr_clear@plt>
   53f08:	ldr	x1, [x21]
   53f0c:	ldr	x0, [x23, #16]
   53f10:	cmp	x0, x1
   53f14:	b.lt	533e8 <mpfr_ai@@Base+0xa08>  // b.tstop
   53f18:	ldr	x1, [x20]
   53f1c:	cmp	x0, x1
   53f20:	b.gt	533e8 <mpfr_ai@@Base+0xa08>
   53f24:	cbz	w19, 53454 <mpfr_ai@@Base+0xa74>
   53f28:	ldr	w0, [x22]
   53f2c:	ldp	x23, x24, [sp, #48]
   53f30:	orr	w0, w0, #0x8
   53f34:	ldp	x25, x26, [sp, #64]
   53f38:	str	w0, [x22]
   53f3c:	ldp	x21, x22, [sp, #32]
   53f40:	b	53408 <mpfr_ai@@Base+0xa28>
   53f44:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   53f48:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   53f4c:	add	x2, x2, #0x4e8
   53f50:	add	x0, x0, #0x460
   53f54:	mov	w1, #0x7c                  	// #124
   53f58:	bl	cb40 <mpfr_assert_fail@plt>
   53f5c:	ldr	x0, [sp, #104]
   53f60:	ldr	x19, [x0]
   53f64:	b	53578 <mpfr_ai@@Base+0xb98>
   53f68:	mov	x19, #0x5                   	// #5
   53f6c:	b	536b8 <mpfr_ai@@Base+0xcd8>
   53f70:	mrs	x2, tpidr_el0
   53f74:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   53f78:	ldr	x3, [x0, #2576]
   53f7c:	add	x0, x0, #0xa10
   53f80:	blr	x3
   53f84:	add	x0, x2, x0
   53f88:	mov	w19, #0x0                   	// #0
   53f8c:	ldr	x2, [sp, #104]
   53f90:	str	x1, [x2, #16]
   53f94:	ldr	w1, [x0]
   53f98:	orr	w1, w1, #0x4
   53f9c:	str	w1, [x0]
   53fa0:	b	53408 <mpfr_ai@@Base+0xa28>
   53fa4:	ldr	x0, [sp, #160]
   53fa8:	ldr	x1, [sp, #136]
   53fac:	sub	x0, x0, x21
   53fb0:	cmp	x0, x1
   53fb4:	b.lt	540d0 <mpfr_ai@@Base+0x16f0>  // b.tstop
   53fb8:	ldr	x0, [sp, #136]
   53fbc:	cmp	x24, #0x1
   53fc0:	add	x21, x21, x0
   53fc4:	add	x0, x21, x21, lsr #63
   53fc8:	asr	x0, x0, #1
   53fcc:	str	x0, [sp, #136]
   53fd0:	b.eq	540c8 <mpfr_ai@@Base+0x16e8>  // b.none
   53fd4:	b.ls	540e8 <mpfr_ai@@Base+0x1708>  // b.plast
   53fd8:	clz	x23, x23
   53fdc:	mov	w0, #0x42                  	// #66
   53fe0:	sub	w0, w0, w23
   53fe4:	sxtw	x0, w0
   53fe8:	ldr	x2, [sp, #120]
   53fec:	add	x0, x21, x0
   53ff0:	ldr	x1, [sp, #432]
   53ff4:	add	x0, x0, x2
   53ff8:	mov	x20, #0x5                   	// #5
   53ffc:	sub	x20, x20, x1
   54000:	add	x20, x20, x0
   54004:	b	53748 <mpfr_ai@@Base+0xd68>
   54008:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   5400c:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   54010:	add	x2, x2, #0x468
   54014:	add	x0, x0, #0x460
   54018:	mov	w1, #0x222                 	// #546
   5401c:	bl	cb40 <mpfr_assert_fail@plt>
   54020:	sub	x0, x22, x19
   54024:	cmp	x0, x21
   54028:	b.lt	54100 <mpfr_ai@@Base+0x1720>  // b.tstop
   5402c:	add	x19, x19, x21
   54030:	add	x21, x19, x19, lsr #63
   54034:	asr	x21, x21, #1
   54038:	b	53de8 <mpfr_ai@@Base+0x1408>
   5403c:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   54040:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   54044:	add	x2, x2, #0x490
   54048:	add	x0, x0, #0x460
   5404c:	mov	w1, #0x22b                 	// #555
   54050:	bl	cb40 <mpfr_assert_fail@plt>
   54054:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   54058:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   5405c:	add	x2, x2, #0x498
   54060:	add	x0, x0, #0x460
   54064:	mov	w1, #0x52                  	// #82
   54068:	bl	cb40 <mpfr_assert_fail@plt>
   5406c:	ldr	x0, [sp, #104]
   54070:	ldr	x19, [x0]
   54074:	b	53dac <mpfr_ai@@Base+0x13cc>
   54078:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   5407c:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   54080:	add	x2, x2, #0x588
   54084:	add	x0, x0, #0x460
   54088:	mov	w1, #0x109                 	// #265
   5408c:	bl	cb40 <mpfr_assert_fail@plt>
   54090:	mov	x0, #0x2                   	// #2
   54094:	b	53d34 <mpfr_ai@@Base+0x1354>
   54098:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   5409c:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   540a0:	add	x2, x2, #0x830
   540a4:	add	x0, x0, #0x460
   540a8:	mov	w1, #0x238                 	// #568
   540ac:	bl	cb40 <mpfr_assert_fail@plt>
   540b0:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   540b4:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   540b8:	add	x2, x2, #0x490
   540bc:	add	x0, x0, #0x460
   540c0:	mov	w1, #0x23c                 	// #572
   540c4:	bl	cb40 <mpfr_assert_fail@plt>
   540c8:	mov	x0, #0x2                   	// #2
   540cc:	b	53fe8 <mpfr_ai@@Base+0x1608>
   540d0:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   540d4:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   540d8:	add	x2, x2, #0x830
   540dc:	add	x0, x0, #0x460
   540e0:	mov	w1, #0x116                 	// #278
   540e4:	bl	cb40 <mpfr_assert_fail@plt>
   540e8:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   540ec:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   540f0:	add	x2, x2, #0x588
   540f4:	add	x0, x0, #0x460
   540f8:	mov	w1, #0x11a                 	// #282
   540fc:	bl	cb40 <mpfr_assert_fail@plt>
   54100:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   54104:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   54108:	add	x2, x2, #0x830
   5410c:	add	x0, x0, #0x460
   54110:	mov	w1, #0x63                  	// #99
   54114:	bl	cb40 <mpfr_assert_fail@plt>
   54118:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   5411c:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   54120:	add	x2, x2, #0x468
   54124:	add	x0, x0, #0x460
   54128:	mov	w1, #0x189                 	// #393
   5412c:	bl	cb40 <mpfr_assert_fail@plt>
   54130:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   54134:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   54138:	add	x2, x2, #0x820
   5413c:	add	x0, x0, #0x460
   54140:	mov	w1, #0x182                 	// #386
   54144:	bl	cb40 <mpfr_assert_fail@plt>
   54148:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   5414c:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   54150:	add	x2, x2, #0x540
   54154:	add	x0, x0, #0x460
   54158:	mov	w1, #0xac                  	// #172
   5415c:	bl	cb40 <mpfr_assert_fail@plt>
   54160:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   54164:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   54168:	add	x2, x2, #0x820
   5416c:	add	x0, x0, #0x460
   54170:	mov	w1, #0xab                  	// #171
   54174:	bl	cb40 <mpfr_assert_fail@plt>

0000000000054178 <mpfr_div_ui2@@Base>:
   54178:	stp	x29, x30, [sp, #-48]!
   5417c:	mov	x29, sp
   54180:	stp	x19, x20, [sp, #16]
   54184:	mov	x19, x3
   54188:	ldr	w3, [x1, #8]
   5418c:	stp	x21, x22, [sp, #32]
   54190:	mov	x21, x2
   54194:	mov	w20, w4
   54198:	mov	w2, w4
   5419c:	mov	x22, x0
   541a0:	bl	c6a0 <mpfr_set4@plt>
   541a4:	umulh	x0, x19, x21
   541a8:	cbnz	x0, 541d0 <mpfr_div_ui2@@Base+0x58>
   541ac:	mul	x19, x19, x21
   541b0:	mov	w3, w20
   541b4:	mov	x2, x19
   541b8:	mov	x1, x22
   541bc:	mov	x0, x22
   541c0:	ldp	x19, x20, [sp, #16]
   541c4:	ldp	x21, x22, [sp, #32]
   541c8:	ldp	x29, x30, [sp], #48
   541cc:	b	cc60 <mpfr_div_ui@plt>
   541d0:	mov	x2, x21
   541d4:	mov	w3, w20
   541d8:	mov	x1, x22
   541dc:	mov	x0, x22
   541e0:	bl	cc60 <mpfr_div_ui@plt>
   541e4:	b	541b0 <mpfr_div_ui2@@Base+0x38>

00000000000541e8 <mpfr_gamma_one_and_two_third@@Base>:
   541e8:	stp	x29, x30, [sp, #-304]!
   541ec:	mov	x29, sp
   541f0:	stp	x19, x20, [sp, #16]
   541f4:	add	x19, x2, #0x4
   541f8:	add	x20, sp, #0xd0
   541fc:	stp	x21, x22, [sp, #32]
   54200:	add	x22, sp, #0x90
   54204:	mov	x21, x2
   54208:	stp	x23, x24, [sp, #48]
   5420c:	mov	x23, x0
   54210:	mov	x24, x1
   54214:	mov	x1, x19
   54218:	stp	x25, x26, [sp, #64]
   5421c:	add	x26, x2, #0xd
   54220:	stp	x27, x28, [sp, #80]
   54224:	add	x28, sp, #0xf0
   54228:	mrs	x25, tpidr_el0
   5422c:	str	x0, [sp, #104]
   54230:	mov	x0, x22
   54234:	bl	ca80 <mpfr_init2@plt>
   54238:	mov	x1, x19
   5423c:	mov	x0, x24
   54240:	add	x19, sp, #0xb0
   54244:	bl	bed0 <mpfr_set_prec@plt>
   54248:	mov	x1, x26
   5424c:	mov	x0, x19
   54250:	bl	ca80 <mpfr_init2@plt>
   54254:	mov	x1, x26
   54258:	mov	x0, x20
   5425c:	bl	ca80 <mpfr_init2@plt>
   54260:	add	x1, x21, #0x8
   54264:	mov	x0, x28
   54268:	bl	ca80 <mpfr_init2@plt>
   5426c:	str	x25, [sp, #112]
   54270:	add	x1, x21, #0x6
   54274:	mov	x0, x23
   54278:	bl	bed0 <mpfr_set_prec@plt>
   5427c:	add	x23, x21, #0x17
   54280:	mov	w2, #0x0                   	// #0
   54284:	add	x21, x21, #0x20
   54288:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   5428c:	ldr	x1, [x0, #2624]
   54290:	add	x0, x0, #0xa40
   54294:	blr	x1
   54298:	add	x1, x25, x0
   5429c:	mov	x0, x19
   542a0:	bl	c380 <mpfr_cache@plt>
   542a4:	mov	x1, x19
   542a8:	mov	w2, #0x0                   	// #0
   542ac:	mov	x0, x19
   542b0:	bl	c400 <mpfr_sqr@plt>
   542b4:	mov	x1, x19
   542b8:	mov	w2, #0x0                   	// #0
   542bc:	mov	x0, x19
   542c0:	bl	c400 <mpfr_sqr@plt>
   542c4:	mov	x1, x19
   542c8:	mov	x0, x19
   542cc:	mov	w3, #0x0                   	// #0
   542d0:	mov	x2, #0xc                   	// #12
   542d4:	bl	ba50 <mpfr_mul_ui@plt>
   542d8:	cmp	x21, #0x9
   542dc:	b.ls	54310 <mpfr_gamma_one_and_two_third@@Base+0x128>  // b.plast
   542e0:	cmn	x26, #0x9
   542e4:	b.lt	54760 <mpfr_gamma_one_and_two_third@@Base+0x578>  // b.tstop
   542e8:	mov	x0, #0x6666666666666666    	// #7378697629483820646
   542ec:	mov	w1, #0x40                  	// #64
   542f0:	movk	x0, #0x6667
   542f4:	smulh	x0, x26, x0
   542f8:	asr	x0, x0, #2
   542fc:	sub	x0, x0, x26, asr #63
   54300:	add	x0, x0, #0x1
   54304:	clz	x0, x0
   54308:	sub	w0, w1, w0
   5430c:	add	x23, x23, w0, sxtw
   54310:	add	x27, sp, #0x110
   54314:	mov	x1, x23
   54318:	mov	x0, x27
   5431c:	bl	ca80 <mpfr_init2@plt>
   54320:	mov	x1, x23
   54324:	mov	x0, x20
   54328:	bl	bed0 <mpfr_set_prec@plt>
   5432c:	mov	x21, #0x2                   	// #2
   54330:	mov	w3, #0x0                   	// #0
   54334:	mov	x2, #0x0                   	// #0
   54338:	mov	x1, #0x1                   	// #1
   5433c:	mov	x0, x27
   54340:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   54344:	mov	x23, x21
   54348:	ldr	w3, [sp, #280]
   5434c:	mov	x1, x27
   54350:	mov	x0, x20
   54354:	mov	x25, #0x1                   	// #1
   54358:	mov	w2, #0x0                   	// #0
   5435c:	bl	c6a0 <mpfr_set4@plt>
   54360:	ldr	w3, [sp, #280]
   54364:	sub	x5, x23, #0x1
   54368:	add	x7, x23, #0x1
   5436c:	mov	x1, x27
   54370:	mov	x0, x27
   54374:	mov	w2, #0x0                   	// #0
   54378:	stp	x7, x5, [sp, #120]
   5437c:	bl	c6a0 <mpfr_set4@plt>
   54380:	ldp	x7, x5, [sp, #120]
   54384:	lsl	x6, x21, #1
   54388:	add	x8, x23, #0x3
   5438c:	umulh	x0, x23, x5
   54390:	cbnz	x0, 545f8 <mpfr_gamma_one_and_two_third@@Base+0x410>
   54394:	mul	x5, x23, x5
   54398:	umulh	x0, x7, x5
   5439c:	cbnz	x0, 54708 <mpfr_gamma_one_and_two_third@@Base+0x520>
   543a0:	mul	x7, x7, x5
   543a4:	umulh	x0, x6, x7
   543a8:	cbnz	x0, 546e8 <mpfr_gamma_one_and_two_third@@Base+0x500>
   543ac:	mul	x6, x6, x7
   543b0:	umulh	x0, x8, x6
   543b4:	cbnz	x0, 546c8 <mpfr_gamma_one_and_two_third@@Base+0x4e0>
   543b8:	mul	x8, x8, x6
   543bc:	mov	x2, x8
   543c0:	mov	x1, x27
   543c4:	mov	w3, #0x0                   	// #0
   543c8:	mov	x0, x27
   543cc:	bl	ba50 <mpfr_mul_ui@plt>
   543d0:	ldr	w3, [sp, #280]
   543d4:	add	x5, x21, #0x1
   543d8:	sub	x6, x21, #0x1
   543dc:	mov	x1, x27
   543e0:	mov	x0, x27
   543e4:	mov	w2, #0x0                   	// #0
   543e8:	stp	x6, x5, [sp, #120]
   543ec:	bl	c6a0 <mpfr_set4@plt>
   543f0:	umulh	x0, x25, x25
   543f4:	ldp	x6, x5, [sp, #120]
   543f8:	cbnz	x0, 546a4 <mpfr_gamma_one_and_two_third@@Base+0x4bc>
   543fc:	mul	x2, x25, x25
   54400:	umulh	x0, x6, x2
   54404:	cbnz	x0, 54688 <mpfr_gamma_one_and_two_third@@Base+0x4a0>
   54408:	mul	x6, x6, x2
   5440c:	umulh	x0, x21, x6
   54410:	cbnz	x0, 54664 <mpfr_gamma_one_and_two_third@@Base+0x47c>
   54414:	mul	x6, x6, x21
   54418:	umulh	x0, x5, x6
   5441c:	cbnz	x0, 54644 <mpfr_gamma_one_and_two_third@@Base+0x45c>
   54420:	mul	x5, x5, x6
   54424:	mov	x0, #0x50                  	// #80
   54428:	umulh	x0, x5, x0
   5442c:	cbnz	x0, 54624 <mpfr_gamma_one_and_two_third@@Base+0x43c>
   54430:	add	x2, x5, x5, lsl #2
   54434:	mov	x0, #0xa0                  	// #160
   54438:	lsl	x2, x2, #4
   5443c:	umulh	x0, x2, x0
   54440:	cbnz	x0, 54730 <mpfr_gamma_one_and_two_third@@Base+0x548>
   54444:	add	x2, x5, x5, lsl #1
   54448:	mov	x0, #0xa0                  	// #160
   5444c:	add	x2, x5, x2, lsl #3
   54450:	lsl	x2, x2, #9
   54454:	umulh	x0, x2, x0
   54458:	cbnz	x0, 54748 <mpfr_gamma_one_and_two_third@@Base+0x560>
   5445c:	lsl	x2, x5, #5
   54460:	sub	x2, x2, x5
   54464:	add	x2, x5, x2, lsl #2
   54468:	lsl	x2, x2, #14
   5446c:	mov	x1, x27
   54470:	mov	w3, #0x0                   	// #0
   54474:	mov	x0, x27
   54478:	bl	cc60 <mpfr_div_ui@plt>
   5447c:	ldr	w5, [sp, #280]
   54480:	mov	x1, x20
   54484:	mov	x2, x27
   54488:	mov	x0, x20
   5448c:	neg	w5, w5
   54490:	mov	w3, #0x0                   	// #0
   54494:	str	w5, [sp, #280]
   54498:	add	x25, x25, #0x1
   5449c:	add	x23, x23, #0x6
   544a0:	add	x21, x21, #0x3
   544a4:	bl	c1a0 <mpfr_add@plt>
   544a8:	ldr	x0, [sp, #224]
   544ac:	ldr	x1, [sp, #288]
   544b0:	add	x0, x0, #0x7
   544b4:	add	x1, x26, x1
   544b8:	cmp	x1, x0
   544bc:	b.gt	54360 <mpfr_gamma_one_and_two_third@@Base+0x178>
   544c0:	mov	x0, x27
   544c4:	bl	c070 <mpfr_clear@plt>
   544c8:	mov	x2, x20
   544cc:	mov	x1, x19
   544d0:	mov	x0, x19
   544d4:	mov	w3, #0x0                   	// #0
   544d8:	bl	bd50 <mpfr_mul@plt>
   544dc:	mov	w3, #0x0                   	// #0
   544e0:	mov	x0, x20
   544e4:	mov	x2, #0x0                   	// #0
   544e8:	mov	x1, #0xa                   	// #10
   544ec:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   544f0:	mov	x1, x20
   544f4:	mov	x0, x20
   544f8:	mov	w2, #0x0                   	// #0
   544fc:	bl	c930 <mpfr_sqrt@plt>
   54500:	mov	w3, #0x0                   	// #0
   54504:	mov	x2, x20
   54508:	mov	x1, x19
   5450c:	mov	x0, x19
   54510:	bl	c620 <mpfr_div@plt>
   54514:	mov	x1, x19
   54518:	mov	x0, x28
   5451c:	mov	w2, #0x0                   	// #0
   54520:	bl	c930 <mpfr_sqrt@plt>
   54524:	ldr	x21, [sp, #104]
   54528:	mov	x1, x28
   5452c:	mov	w2, #0x0                   	// #0
   54530:	mov	x0, x21
   54534:	bl	cd20 <mpfr_cbrt@plt>
   54538:	mov	x0, x19
   5453c:	bl	c070 <mpfr_clear@plt>
   54540:	mov	x0, x20
   54544:	bl	c070 <mpfr_clear@plt>
   54548:	mov	x0, x28
   5454c:	bl	c070 <mpfr_clear@plt>
   54550:	mov	w3, #0x0                   	// #0
   54554:	mov	x0, x22
   54558:	mov	x2, #0x0                   	// #0
   5455c:	mov	x1, #0x3                   	// #3
   54560:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   54564:	mov	x1, x22
   54568:	mov	x0, x22
   5456c:	mov	w2, #0x0                   	// #0
   54570:	bl	c930 <mpfr_sqrt@plt>
   54574:	mov	x1, x21
   54578:	mov	x2, x22
   5457c:	mov	w3, #0x0                   	// #0
   54580:	mov	x0, x22
   54584:	bl	bd50 <mpfr_mul@plt>
   54588:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   5458c:	ldr	x1, [x0, #2624]
   54590:	add	x0, x0, #0xa40
   54594:	blr	x1
   54598:	mov	w2, #0x0                   	// #0
   5459c:	ldr	x1, [sp, #112]
   545a0:	add	x1, x1, x0
   545a4:	mov	x0, x24
   545a8:	bl	c380 <mpfr_cache@plt>
   545ac:	mov	x1, x24
   545b0:	mov	x0, x24
   545b4:	mov	w3, #0x0                   	// #0
   545b8:	mov	x2, #0x1                   	// #1
   545bc:	bl	c2c0 <mpfr_mul_2ui@plt>
   545c0:	mov	x2, x22
   545c4:	mov	x1, x24
   545c8:	mov	w3, #0x0                   	// #0
   545cc:	mov	x0, x24
   545d0:	bl	c620 <mpfr_div@plt>
   545d4:	mov	x0, x22
   545d8:	bl	c070 <mpfr_clear@plt>
   545dc:	ldp	x19, x20, [sp, #16]
   545e0:	ldp	x21, x22, [sp, #32]
   545e4:	ldp	x23, x24, [sp, #48]
   545e8:	ldp	x25, x26, [sp, #64]
   545ec:	ldp	x27, x28, [sp, #80]
   545f0:	ldp	x29, x30, [sp], #304
   545f4:	ret
   545f8:	mov	x2, x5
   545fc:	mov	x1, x27
   54600:	mov	x0, x27
   54604:	mov	w3, #0x0                   	// #0
   54608:	stp	x7, x6, [sp, #120]
   5460c:	str	x8, [sp, #136]
   54610:	bl	ba50 <mpfr_mul_ui@plt>
   54614:	mov	x5, x23
   54618:	ldp	x7, x6, [sp, #120]
   5461c:	ldr	x8, [sp, #136]
   54620:	b	54398 <mpfr_gamma_one_and_two_third@@Base+0x1b0>
   54624:	mov	x2, x5
   54628:	mov	x1, x27
   5462c:	mov	x0, x27
   54630:	mov	w3, #0x0                   	// #0
   54634:	bl	cc60 <mpfr_div_ui@plt>
   54638:	mov	x2, #0x4000                	// #16384
   5463c:	movk	x2, #0x1f, lsl #16
   54640:	b	5446c <mpfr_gamma_one_and_two_third@@Base+0x284>
   54644:	mov	x2, x6
   54648:	mov	x1, x27
   5464c:	mov	x0, x27
   54650:	mov	w3, #0x0                   	// #0
   54654:	str	x5, [sp, #120]
   54658:	bl	cc60 <mpfr_div_ui@plt>
   5465c:	ldr	x5, [sp, #120]
   54660:	b	54424 <mpfr_gamma_one_and_two_third@@Base+0x23c>
   54664:	mov	x2, x6
   54668:	mov	x1, x27
   5466c:	mov	x0, x27
   54670:	mov	w3, #0x0                   	// #0
   54674:	str	x5, [sp, #120]
   54678:	bl	cc60 <mpfr_div_ui@plt>
   5467c:	mov	x6, x21
   54680:	ldr	x5, [sp, #120]
   54684:	b	54418 <mpfr_gamma_one_and_two_third@@Base+0x230>
   54688:	mov	x1, x27
   5468c:	mov	x0, x27
   54690:	mov	w3, #0x0                   	// #0
   54694:	stp	x6, x5, [sp, #120]
   54698:	bl	cc60 <mpfr_div_ui@plt>
   5469c:	ldp	x6, x5, [sp, #120]
   546a0:	b	5440c <mpfr_gamma_one_and_two_third@@Base+0x224>
   546a4:	mov	x2, x25
   546a8:	mov	x1, x27
   546ac:	mov	x0, x27
   546b0:	mov	w3, #0x0                   	// #0
   546b4:	stp	x6, x5, [sp, #120]
   546b8:	bl	cc60 <mpfr_div_ui@plt>
   546bc:	mov	x2, x25
   546c0:	ldp	x6, x5, [sp, #120]
   546c4:	b	54400 <mpfr_gamma_one_and_two_third@@Base+0x218>
   546c8:	mov	x2, x6
   546cc:	mov	x1, x27
   546d0:	mov	x0, x27
   546d4:	mov	w3, #0x0                   	// #0
   546d8:	str	x8, [sp, #120]
   546dc:	bl	ba50 <mpfr_mul_ui@plt>
   546e0:	ldr	x8, [sp, #120]
   546e4:	b	543bc <mpfr_gamma_one_and_two_third@@Base+0x1d4>
   546e8:	mov	x2, x7
   546ec:	mov	x1, x27
   546f0:	mov	x0, x27
   546f4:	mov	w3, #0x0                   	// #0
   546f8:	stp	x6, x8, [sp, #120]
   546fc:	bl	ba50 <mpfr_mul_ui@plt>
   54700:	ldp	x6, x8, [sp, #120]
   54704:	b	543b0 <mpfr_gamma_one_and_two_third@@Base+0x1c8>
   54708:	mov	x2, x5
   5470c:	mov	x1, x27
   54710:	mov	x0, x27
   54714:	mov	w3, #0x0                   	// #0
   54718:	stp	x7, x6, [sp, #120]
   5471c:	str	x8, [sp, #136]
   54720:	bl	ba50 <mpfr_mul_ui@plt>
   54724:	ldp	x7, x6, [sp, #120]
   54728:	ldr	x8, [sp, #136]
   5472c:	b	543a4 <mpfr_gamma_one_and_two_third@@Base+0x1bc>
   54730:	mov	x1, x27
   54734:	mov	x0, x27
   54738:	mov	w3, #0x0                   	// #0
   5473c:	bl	cc60 <mpfr_div_ui@plt>
   54740:	mov	x2, #0x6400                	// #25600
   54744:	b	5446c <mpfr_gamma_one_and_two_third@@Base+0x284>
   54748:	mov	x1, x27
   5474c:	mov	x0, x27
   54750:	mov	w3, #0x0                   	// #0
   54754:	bl	cc60 <mpfr_div_ui@plt>
   54758:	mov	x2, #0xa0                  	// #160
   5475c:	b	5446c <mpfr_gamma_one_and_two_third@@Base+0x284>
   54760:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   54764:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   54768:	add	x2, x2, #0x590
   5476c:	add	x0, x0, #0x5a8
   54770:	mov	w1, #0x69                  	// #105
   54774:	bl	cb40 <mpfr_assert_fail@plt>

0000000000054778 <mpfr_grandom@@Base>:
   54778:	stp	x29, x30, [sp, #-432]!
   5477c:	mov	x29, sp
   54780:	stp	x19, x20, [sp, #16]
   54784:	stp	x21, x22, [sp, #32]
   54788:	stp	x23, x24, [sp, #48]
   5478c:	stp	x25, x26, [sp, #64]
   54790:	stp	x27, x28, [sp, #80]
   54794:	mov	x27, x2
   54798:	stp	x0, x1, [sp, #144]
   5479c:	str	w3, [sp, #164]
   547a0:	ldr	x2, [x0]
   547a4:	cbz	x1, 54f84 <mpfr_grandom@@Base+0x80c>
   547a8:	ldr	x0, [sp, #152]
   547ac:	add	x28, sp, #0xd0
   547b0:	add	x19, sp, #0xb0
   547b4:	add	x21, sp, #0xc0
   547b8:	add	x20, sp, #0xe0
   547bc:	stp	x19, x21, [sp, #96]
   547c0:	add	x25, sp, #0x120
   547c4:	ldr	x1, [x0]
   547c8:	mov	x0, x28
   547cc:	add	x23, sp, #0x110
   547d0:	add	x24, sp, #0x130
   547d4:	cmp	x1, x2
   547d8:	add	x26, sp, #0x170
   547dc:	csel	x1, x1, x2, ge  // ge = tcont
   547e0:	add	x1, x1, #0xb
   547e4:	str	x1, [sp, #120]
   547e8:	add	x1, sp, #0xf0
   547ec:	str	x1, [sp, #168]
   547f0:	mov	x22, x1
   547f4:	bl	bf90 <mpfr_mpz_init@plt>
   547f8:	mov	x0, x20
   547fc:	bl	bf90 <mpfr_mpz_init@plt>
   54800:	mov	x0, x19
   54804:	bl	bf90 <mpfr_mpz_init@plt>
   54808:	mov	x0, x21
   5480c:	bl	bf90 <mpfr_mpz_init@plt>
   54810:	mov	x0, x22
   54814:	bl	bf90 <mpfr_mpz_init@plt>
   54818:	mov	x0, x25
   5481c:	add	x22, sp, #0x100
   54820:	bl	bf90 <mpfr_mpz_init@plt>
   54824:	add	x19, sp, #0x150
   54828:	mov	x0, x22
   5482c:	bl	bf90 <mpfr_mpz_init@plt>
   54830:	mov	x0, x23
   54834:	bl	bf90 <mpfr_mpz_init@plt>
   54838:	mov	x0, x24
   5483c:	mov	x1, #0x1                   	// #1
   54840:	bl	ca80 <mpfr_init2@plt>
   54844:	mov	x0, x19
   54848:	mov	x1, #0x1                   	// #1
   5484c:	bl	ca80 <mpfr_init2@plt>
   54850:	mov	x0, x26
   54854:	mov	x1, #0x1                   	// #1
   54858:	bl	ca80 <mpfr_init2@plt>
   5485c:	add	x0, sp, #0x190
   54860:	mov	x1, #0x1                   	// #1
   54864:	bl	ca80 <mpfr_init2@plt>
   54868:	ldr	x0, [sp, #120]
   5486c:	mov	x1, #0x0                   	// #0
   54870:	lsl	x0, x0, #1
   54874:	str	x0, [sp, #128]
   54878:	mov	x0, x28
   5487c:	bl	bcb0 <__gmpz_set_ui@plt>
   54880:	mov	x0, x20
   54884:	mov	x1, #0x0                   	// #0
   54888:	bl	bcb0 <__gmpz_set_ui@plt>
   5488c:	nop
   54890:	ldr	x21, [sp, #120]
   54894:	mov	x1, x27
   54898:	mov	x0, x28
   5489c:	mov	x2, x21
   548a0:	bl	cd00 <__gmpz_urandomb@plt>
   548a4:	mov	x2, x21
   548a8:	mov	x1, x27
   548ac:	mov	x0, x20
   548b0:	bl	cd00 <__gmpz_urandomb@plt>
   548b4:	mov	x2, x28
   548b8:	mov	x1, x28
   548bc:	mov	x0, x22
   548c0:	bl	bff0 <__gmpz_mul@plt>
   548c4:	mov	x2, x20
   548c8:	mov	x1, x20
   548cc:	mov	x0, x23
   548d0:	bl	bff0 <__gmpz_mul@plt>
   548d4:	mov	x2, x23
   548d8:	mov	x1, x22
   548dc:	mov	x0, x25
   548e0:	bl	c9c0 <__gmpz_add@plt>
   548e4:	mov	w1, #0x2                   	// #2
   548e8:	mov	x0, x25
   548ec:	bl	cb60 <__gmpz_sizeinbase@plt>
   548f0:	ldr	x1, [sp, #128]
   548f4:	cmp	x0, x1
   548f8:	b.hi	54890 <mpfr_grandom@@Base+0x118>  // b.pmore
   548fc:	mov	x3, x1
   54900:	ldr	x21, [sp, #120]
   54904:	b	549d4 <mpfr_grandom@@Base+0x25c>
   54908:	cmp	x2, x5
   5490c:	b.ne	54920 <mpfr_grandom@@Base+0x1a8>  // b.any
   54910:	bl	ba90 <__gmpz_scan1@plt>
   54914:	ldr	x3, [sp, #112]
   54918:	cmp	x0, x3
   5491c:	b.eq	54a50 <mpfr_grandom@@Base+0x2d8>  // b.none
   54920:	add	x3, x3, #0x40
   54924:	mov	x1, x28
   54928:	mov	x0, x28
   5492c:	mov	x2, #0x20                  	// #32
   54930:	str	x3, [sp, #112]
   54934:	add	x21, x21, #0x20
   54938:	bl	c200 <__gmpz_mul_2exp@plt>
   5493c:	mov	x1, x20
   54940:	mov	x0, x20
   54944:	mov	x2, #0x20                  	// #32
   54948:	bl	c200 <__gmpz_mul_2exp@plt>
   5494c:	ldr	x0, [sp, #96]
   54950:	mov	x1, x27
   54954:	mov	x2, #0x20                  	// #32
   54958:	bl	cd00 <__gmpz_urandomb@plt>
   5495c:	ldr	x0, [sp, #104]
   54960:	mov	x1, x27
   54964:	mov	x2, #0x20                  	// #32
   54968:	bl	cd00 <__gmpz_urandomb@plt>
   5496c:	ldr	x2, [sp, #96]
   54970:	mov	x1, x28
   54974:	mov	x0, x28
   54978:	bl	c9c0 <__gmpz_add@plt>
   5497c:	ldr	x2, [sp, #104]
   54980:	mov	x1, x20
   54984:	mov	x0, x20
   54988:	bl	c9c0 <__gmpz_add@plt>
   5498c:	mov	x2, x28
   54990:	mov	x1, x28
   54994:	mov	x0, x22
   54998:	bl	bff0 <__gmpz_mul@plt>
   5499c:	mov	x2, x20
   549a0:	mov	x1, x20
   549a4:	mov	x0, x23
   549a8:	bl	bff0 <__gmpz_mul@plt>
   549ac:	mov	x2, x23
   549b0:	mov	x1, x22
   549b4:	mov	x0, x25
   549b8:	bl	c9c0 <__gmpz_add@plt>
   549bc:	mov	x0, x25
   549c0:	mov	w1, #0x2                   	// #2
   549c4:	bl	cb60 <__gmpz_sizeinbase@plt>
   549c8:	ldr	x3, [sp, #112]
   549cc:	cmp	x0, x3
   549d0:	b.hi	54890 <mpfr_grandom@@Base+0x118>  // b.pmore
   549d4:	mov	x1, x28
   549d8:	mov	x0, x22
   549dc:	mov	x2, #0x1                   	// #1
   549e0:	str	x3, [sp, #112]
   549e4:	bl	c360 <__gmpz_add_ui@plt>
   549e8:	mov	x1, x20
   549ec:	mov	x0, x23
   549f0:	mov	x2, #0x1                   	// #1
   549f4:	bl	c360 <__gmpz_add_ui@plt>
   549f8:	mov	x2, x22
   549fc:	mov	x1, x22
   54a00:	mov	x0, x22
   54a04:	bl	bff0 <__gmpz_mul@plt>
   54a08:	mov	x2, x23
   54a0c:	mov	x1, x23
   54a10:	mov	x0, x23
   54a14:	bl	bff0 <__gmpz_mul@plt>
   54a18:	mov	x2, x23
   54a1c:	mov	x1, x22
   54a20:	mov	x0, x25
   54a24:	bl	c9c0 <__gmpz_add@plt>
   54a28:	mov	w1, #0x2                   	// #2
   54a2c:	mov	x0, x25
   54a30:	bl	cb60 <__gmpz_sizeinbase@plt>
   54a34:	mov	x2, x0
   54a38:	ldr	x3, [sp, #112]
   54a3c:	mov	x0, x25
   54a40:	mov	x1, #0x0                   	// #0
   54a44:	add	x5, x3, #0x1
   54a48:	cmp	x2, x3
   54a4c:	b.hi	54908 <mpfr_grandom@@Base+0x190>  // b.pmore
   54a50:	mov	x2, x28
   54a54:	mov	x1, x28
   54a58:	mov	x0, x22
   54a5c:	bl	bff0 <__gmpz_mul@plt>
   54a60:	mov	x2, x20
   54a64:	mov	x1, x20
   54a68:	mov	x0, x23
   54a6c:	bl	bff0 <__gmpz_mul@plt>
   54a70:	mov	x2, x23
   54a74:	mov	x1, x22
   54a78:	mov	x0, x25
   54a7c:	bl	c9c0 <__gmpz_add@plt>
   54a80:	ldr	x0, [sp, #96]
   54a84:	mov	x2, #0x2                   	// #2
   54a88:	mov	x1, x27
   54a8c:	bl	cd00 <__gmpz_urandomb@plt>
   54a90:	ldr	x0, [sp, #96]
   54a94:	mov	x1, #0x0                   	// #0
   54a98:	bl	bfe0 <__gmpz_tstbit@plt>
   54a9c:	str	w0, [sp, #120]
   54aa0:	ldr	x0, [sp, #96]
   54aa4:	mov	x1, #0x1                   	// #1
   54aa8:	bl	bfe0 <__gmpz_tstbit@plt>
   54aac:	str	w0, [sp, #160]
   54ab0:	ldr	w1, [sp, #164]
   54ab4:	cmp	w1, #0x0
   54ab8:	cset	x0, eq  // eq = none
   54abc:	str	x0, [sp, #128]
   54ac0:	add	x0, sp, #0x190
   54ac4:	str	x0, [sp, #112]
   54ac8:	b	54c24 <mpfr_grandom@@Base+0x4ac>
   54acc:	ldr	x0, [sp, #384]
   54ad0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   54ad4:	cmp	x0, x1
   54ad8:	b.le	54b90 <mpfr_grandom@@Base+0x418>
   54adc:	ldr	x3, [sp, #144]
   54ae0:	sub	x2, x21, #0x2
   54ae4:	ldr	x1, [sp, #368]
   54ae8:	str	x2, [sp, #136]
   54aec:	ldr	x4, [sp, #128]
   54af0:	sub	x1, x1, #0x1
   54af4:	ldr	x0, [sp, #392]
   54af8:	asr	x1, x1, #6
   54afc:	ldr	x3, [x3]
   54b00:	add	x1, x1, #0x1
   54b04:	add	x3, x4, x3
   54b08:	bl	c370 <mpfr_round_p@plt>
   54b0c:	cbz	w0, 54b90 <mpfr_grandom@@Base+0x418>
   54b10:	ldr	x0, [sp, #152]
   54b14:	cbz	x0, 54f0c <mpfr_grandom@@Base+0x794>
   54b18:	ldr	x0, [sp, #112]
   54b1c:	mov	x1, x21
   54b20:	bl	bed0 <mpfr_set_prec@plt>
   54b24:	ldr	x0, [sp, #112]
   54b28:	mov	x2, x20
   54b2c:	mov	x1, x19
   54b30:	mov	w3, #0x0                   	// #0
   54b34:	bl	c4d0 <mpfr_mul_z@plt>
   54b38:	ldr	x0, [sp, #112]
   54b3c:	mov	x2, x21
   54b40:	mov	w3, #0x0                   	// #0
   54b44:	mov	x1, x0
   54b48:	bl	c8f0 <mpfr_div_2ui@plt>
   54b4c:	ldr	w0, [sp, #160]
   54b50:	cbnz	w0, 54d08 <mpfr_grandom@@Base+0x590>
   54b54:	ldr	x0, [sp, #416]
   54b58:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   54b5c:	cmp	x0, x1
   54b60:	b.le	54b90 <mpfr_grandom@@Base+0x418>
   54b64:	ldr	x3, [sp, #152]
   54b68:	ldp	x4, x2, [sp, #128]
   54b6c:	ldr	x1, [sp, #400]
   54b70:	ldr	x0, [sp, #424]
   54b74:	sub	x1, x1, #0x1
   54b78:	ldr	x3, [x3]
   54b7c:	asr	x1, x1, #6
   54b80:	add	x1, x1, #0x1
   54b84:	add	x3, x4, x3
   54b88:	bl	c370 <mpfr_round_p@plt>
   54b8c:	cbnz	w0, 54d1c <mpfr_grandom@@Base+0x5a4>
   54b90:	mov	x1, x28
   54b94:	mov	x0, x28
   54b98:	mov	x2, #0x20                  	// #32
   54b9c:	bl	c200 <__gmpz_mul_2exp@plt>
   54ba0:	mov	x1, x20
   54ba4:	mov	x0, x20
   54ba8:	mov	x2, #0x20                  	// #32
   54bac:	bl	c200 <__gmpz_mul_2exp@plt>
   54bb0:	ldr	x0, [sp, #96]
   54bb4:	mov	x1, x27
   54bb8:	mov	x2, #0x20                  	// #32
   54bbc:	add	x21, x21, #0x20
   54bc0:	bl	cd00 <__gmpz_urandomb@plt>
   54bc4:	ldr	x0, [sp, #104]
   54bc8:	mov	x1, x27
   54bcc:	mov	x2, #0x20                  	// #32
   54bd0:	bl	cd00 <__gmpz_urandomb@plt>
   54bd4:	ldr	x2, [sp, #96]
   54bd8:	mov	x1, x28
   54bdc:	mov	x0, x28
   54be0:	bl	c9c0 <__gmpz_add@plt>
   54be4:	ldr	x2, [sp, #104]
   54be8:	mov	x1, x20
   54bec:	mov	x0, x20
   54bf0:	bl	c9c0 <__gmpz_add@plt>
   54bf4:	mov	x2, x28
   54bf8:	mov	x1, x28
   54bfc:	mov	x0, x22
   54c00:	bl	bff0 <__gmpz_mul@plt>
   54c04:	mov	x2, x20
   54c08:	mov	x1, x20
   54c0c:	mov	x0, x23
   54c10:	bl	bff0 <__gmpz_mul@plt>
   54c14:	mov	x2, x23
   54c18:	mov	x1, x22
   54c1c:	mov	x0, x25
   54c20:	bl	c9c0 <__gmpz_add@plt>
   54c24:	lsl	x1, x21, #1
   54c28:	mov	x0, x24
   54c2c:	bl	bed0 <mpfr_set_prec@plt>
   54c30:	mov	x1, x21
   54c34:	mov	x0, x19
   54c38:	bl	bed0 <mpfr_set_prec@plt>
   54c3c:	mov	x1, x25
   54c40:	mov	w2, #0x0                   	// #0
   54c44:	mov	x0, x24
   54c48:	bl	c240 <mpfr_set_z@plt>
   54c4c:	mov	w3, #0x0                   	// #0
   54c50:	neg	x2, x21, lsl #1
   54c54:	mov	x1, x24
   54c58:	mov	x0, x24
   54c5c:	bl	bb90 <mpfr_mul_2si@plt>
   54c60:	mov	x1, x24
   54c64:	mov	w2, #0x0                   	// #0
   54c68:	mov	x0, x19
   54c6c:	bl	c090 <mpfr_log@plt>
   54c70:	mov	x1, x19
   54c74:	mov	w2, #0x0                   	// #0
   54c78:	mov	x0, x19
   54c7c:	bl	bd70 <mpfr_neg@plt>
   54c80:	mov	x1, x19
   54c84:	mov	w3, #0x0                   	// #0
   54c88:	mov	x2, #0x1                   	// #1
   54c8c:	mov	x0, x19
   54c90:	bl	bb90 <mpfr_mul_2si@plt>
   54c94:	mov	w3, #0x0                   	// #0
   54c98:	mov	x2, x24
   54c9c:	mov	x1, x19
   54ca0:	mov	x0, x19
   54ca4:	bl	c620 <mpfr_div@plt>
   54ca8:	mov	w2, #0x0                   	// #0
   54cac:	mov	x1, x19
   54cb0:	mov	x0, x19
   54cb4:	bl	c930 <mpfr_sqrt@plt>
   54cb8:	mov	x1, x21
   54cbc:	mov	x0, x26
   54cc0:	bl	bed0 <mpfr_set_prec@plt>
   54cc4:	mov	x2, x28
   54cc8:	mov	x1, x19
   54ccc:	mov	w3, #0x0                   	// #0
   54cd0:	mov	x0, x26
   54cd4:	bl	c4d0 <mpfr_mul_z@plt>
   54cd8:	mov	x2, x21
   54cdc:	mov	x1, x26
   54ce0:	mov	x0, x26
   54ce4:	mov	w3, #0x0                   	// #0
   54ce8:	bl	c8f0 <mpfr_div_2ui@plt>
   54cec:	ldr	w0, [sp, #120]
   54cf0:	cbz	w0, 54acc <mpfr_grandom@@Base+0x354>
   54cf4:	mov	x1, x26
   54cf8:	mov	x0, x26
   54cfc:	mov	w2, #0x0                   	// #0
   54d00:	bl	bd70 <mpfr_neg@plt>
   54d04:	b	54acc <mpfr_grandom@@Base+0x354>
   54d08:	ldr	x0, [sp, #112]
   54d0c:	mov	w2, #0x0                   	// #0
   54d10:	mov	x1, x0
   54d14:	bl	bd70 <mpfr_neg@plt>
   54d18:	b	54b54 <mpfr_grandom@@Base+0x3dc>
   54d1c:	ldr	w3, [sp, #376]
   54d20:	mrs	x5, tpidr_el0
   54d24:	ldr	x0, [sp, #144]
   54d28:	mov	x1, x26
   54d2c:	ldr	w27, [sp, #164]
   54d30:	str	x5, [sp, #120]
   54d34:	mov	w2, w27
   54d38:	bl	c6a0 <mpfr_set4@plt>
   54d3c:	ldr	w3, [sp, #408]
   54d40:	mov	w21, w0
   54d44:	ldr	x1, [sp, #112]
   54d48:	mov	w2, w27
   54d4c:	ldr	x0, [sp, #152]
   54d50:	bl	c6a0 <mpfr_set4@plt>
   54d54:	mov	w27, w0
   54d58:	ldr	x5, [sp, #120]
   54d5c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   54d60:	ldr	x1, [x0, #2512]
   54d64:	add	x0, x0, #0x9d0
   54d68:	blr	x1
   54d6c:	ldr	x1, [x5, x0]
   54d70:	ldr	x0, [sp, #152]
   54d74:	ldr	x2, [x0, #16]
   54d78:	cmp	x2, x1
   54d7c:	b.ge	54e08 <mpfr_grandom@@Base+0x690>  // b.tcont
   54d80:	ldr	w2, [sp, #164]
   54d84:	mov	w1, w27
   54d88:	ldr	x0, [sp, #152]
   54d8c:	str	x5, [sp, #120]
   54d90:	bl	cb30 <mpfr_check_range@plt>
   54d94:	mov	w27, w0
   54d98:	ldr	x5, [sp, #120]
   54d9c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   54da0:	ldr	x1, [x0, #2512]
   54da4:	add	x0, x0, #0x9d0
   54da8:	blr	x1
   54dac:	ldr	x1, [x5, x0]
   54db0:	ldr	x0, [sp, #144]
   54db4:	ldr	x2, [x0, #16]
   54db8:	cmp	x1, x2
   54dbc:	b.gt	54e54 <mpfr_grandom@@Base+0x6dc>
   54dc0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   54dc4:	ldr	x1, [x0, #2544]
   54dc8:	add	x0, x0, #0x9f0
   54dcc:	blr	x1
   54dd0:	ldr	x0, [x5, x0]
   54dd4:	cmp	x0, x2
   54dd8:	b.lt	54e54 <mpfr_grandom@@Base+0x6dc>  // b.tstop
   54ddc:	cbz	w21, 54e68 <mpfr_grandom@@Base+0x6f0>
   54de0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   54de4:	ldr	x1, [x0, #2576]
   54de8:	add	x0, x0, #0xa10
   54dec:	blr	x1
   54df0:	ldr	w1, [x5, x0]
   54df4:	orr	w1, w1, #0x8
   54df8:	str	w1, [x5, x0]
   54dfc:	ldr	x0, [sp, #152]
   54e00:	cbnz	x0, 54e68 <mpfr_grandom@@Base+0x6f0>
   54e04:	b	55058 <mpfr_grandom@@Base+0x8e0>
   54e08:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   54e0c:	ldr	x3, [x0, #2544]
   54e10:	add	x0, x0, #0x9f0
   54e14:	blr	x3
   54e18:	ldr	x0, [x5, x0]
   54e1c:	cmp	x2, x0
   54e20:	b.gt	54d80 <mpfr_grandom@@Base+0x608>
   54e24:	cbz	w27, 54db0 <mpfr_grandom@@Base+0x638>
   54e28:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   54e2c:	ldr	x2, [x0, #2576]
   54e30:	add	x0, x0, #0xa10
   54e34:	blr	x2
   54e38:	ldr	w2, [x5, x0]
   54e3c:	orr	w2, w2, #0x8
   54e40:	str	w2, [x5, x0]
   54e44:	ldr	x0, [sp, #144]
   54e48:	ldr	x2, [x0, #16]
   54e4c:	cmp	x1, x2
   54e50:	b.le	54dc0 <mpfr_grandom@@Base+0x648>
   54e54:	ldr	w2, [sp, #164]
   54e58:	mov	w1, w21
   54e5c:	ldr	x0, [sp, #144]
   54e60:	bl	cb30 <mpfr_check_range@plt>
   54e64:	mov	w21, w0
   54e68:	ldr	x0, [sp, #112]
   54e6c:	bl	c070 <mpfr_clear@plt>
   54e70:	mov	x0, x26
   54e74:	bl	c070 <mpfr_clear@plt>
   54e78:	mov	x0, x19
   54e7c:	bl	c070 <mpfr_clear@plt>
   54e80:	mov	x0, x24
   54e84:	bl	c070 <mpfr_clear@plt>
   54e88:	mov	x0, x23
   54e8c:	bl	c170 <mpfr_mpz_clear@plt>
   54e90:	mov	x0, x22
   54e94:	bl	c170 <mpfr_mpz_clear@plt>
   54e98:	mov	x0, x25
   54e9c:	bl	c170 <mpfr_mpz_clear@plt>
   54ea0:	ldr	x0, [sp, #168]
   54ea4:	bl	c170 <mpfr_mpz_clear@plt>
   54ea8:	ldr	x0, [sp, #104]
   54eac:	bl	c170 <mpfr_mpz_clear@plt>
   54eb0:	ldr	x0, [sp, #96]
   54eb4:	bl	c170 <mpfr_mpz_clear@plt>
   54eb8:	mov	x0, x20
   54ebc:	bl	c170 <mpfr_mpz_clear@plt>
   54ec0:	mov	x0, x28
   54ec4:	bl	c170 <mpfr_mpz_clear@plt>
   54ec8:	cbz	w21, 54ed8 <mpfr_grandom@@Base+0x760>
   54ecc:	cmp	w21, #0x0
   54ed0:	cset	w21, le
   54ed4:	add	w21, w21, #0x1
   54ed8:	cmp	w27, #0x0
   54edc:	orr	w0, w21, #0x4
   54ee0:	orr	w1, w21, #0x8
   54ee4:	csel	w1, w1, w0, le
   54ee8:	csel	w21, w1, w21, ne  // ne = any
   54eec:	mov	w0, w21
   54ef0:	ldp	x19, x20, [sp, #16]
   54ef4:	ldp	x21, x22, [sp, #32]
   54ef8:	ldp	x23, x24, [sp, #48]
   54efc:	ldp	x25, x26, [sp, #64]
   54f00:	ldp	x27, x28, [sp, #80]
   54f04:	ldp	x29, x30, [sp], #432
   54f08:	ret
   54f0c:	ldr	w2, [sp, #164]
   54f10:	mov	x1, x26
   54f14:	ldr	w3, [sp, #376]
   54f18:	ldr	x27, [sp, #144]
   54f1c:	mov	x0, x27
   54f20:	bl	c6a0 <mpfr_set4@plt>
   54f24:	mrs	x1, tpidr_el0
   54f28:	mov	w21, w0
   54f2c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   54f30:	ldr	x2, [x0, #2512]
   54f34:	add	x0, x0, #0x9d0
   54f38:	blr	x2
   54f3c:	ldr	x2, [x27, #16]
   54f40:	ldr	x0, [x1, x0]
   54f44:	cmp	x0, x2
   54f48:	b.gt	54f68 <mpfr_grandom@@Base+0x7f0>
   54f4c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   54f50:	ldr	x3, [x0, #2544]
   54f54:	add	x0, x0, #0x9f0
   54f58:	blr	x3
   54f5c:	ldr	x0, [x1, x0]
   54f60:	cmp	x0, x2
   54f64:	b.ge	55034 <mpfr_grandom@@Base+0x8bc>  // b.tcont
   54f68:	ldr	w2, [sp, #164]
   54f6c:	mov	w1, w21
   54f70:	ldr	x0, [sp, #144]
   54f74:	mov	w27, #0x0                   	// #0
   54f78:	bl	cb30 <mpfr_check_range@plt>
   54f7c:	mov	w21, w0
   54f80:	b	54e70 <mpfr_grandom@@Base+0x6f8>
   54f84:	add	x0, x2, #0xb
   54f88:	add	x28, sp, #0xd0
   54f8c:	str	x0, [sp, #120]
   54f90:	mov	x0, x28
   54f94:	bl	bf90 <mpfr_mpz_init@plt>
   54f98:	add	x20, sp, #0xe0
   54f9c:	add	x0, sp, #0xb0
   54fa0:	add	x25, sp, #0x120
   54fa4:	mov	x19, x0
   54fa8:	mov	x0, x20
   54fac:	str	x19, [sp, #96]
   54fb0:	bl	bf90 <mpfr_mpz_init@plt>
   54fb4:	mov	x0, x19
   54fb8:	add	x19, sp, #0xc0
   54fbc:	str	x19, [sp, #104]
   54fc0:	bl	bf90 <mpfr_mpz_init@plt>
   54fc4:	add	x0, sp, #0xf0
   54fc8:	add	x22, sp, #0x100
   54fcc:	mov	x21, x0
   54fd0:	mov	x0, x19
   54fd4:	str	x21, [sp, #168]
   54fd8:	bl	bf90 <mpfr_mpz_init@plt>
   54fdc:	mov	x0, x21
   54fe0:	bl	bf90 <mpfr_mpz_init@plt>
   54fe4:	mov	x0, x25
   54fe8:	bl	bf90 <mpfr_mpz_init@plt>
   54fec:	mov	x0, x22
   54ff0:	add	x23, sp, #0x110
   54ff4:	bl	bf90 <mpfr_mpz_init@plt>
   54ff8:	add	x24, sp, #0x130
   54ffc:	mov	x0, x23
   55000:	bl	bf90 <mpfr_mpz_init@plt>
   55004:	mov	x0, x24
   55008:	add	x19, sp, #0x150
   5500c:	mov	x1, #0x1                   	// #1
   55010:	bl	ca80 <mpfr_init2@plt>
   55014:	mov	x0, x19
   55018:	add	x26, sp, #0x170
   5501c:	mov	x1, #0x1                   	// #1
   55020:	bl	ca80 <mpfr_init2@plt>
   55024:	mov	x0, x26
   55028:	mov	x1, #0x1                   	// #1
   5502c:	bl	ca80 <mpfr_init2@plt>
   55030:	b	54868 <mpfr_grandom@@Base+0xf0>
   55034:	cbz	w21, 550b4 <mpfr_grandom@@Base+0x93c>
   55038:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   5503c:	ldr	x2, [x0, #2576]
   55040:	add	x0, x0, #0xa10
   55044:	blr	x2
   55048:	ldr	w2, [x1, x0]
   5504c:	mov	w27, #0x0                   	// #0
   55050:	orr	w2, w2, #0x8
   55054:	str	w2, [x1, x0]
   55058:	mov	x0, x26
   5505c:	bl	c070 <mpfr_clear@plt>
   55060:	mov	x0, x19
   55064:	bl	c070 <mpfr_clear@plt>
   55068:	mov	x0, x24
   5506c:	bl	c070 <mpfr_clear@plt>
   55070:	mov	x0, x23
   55074:	bl	c170 <mpfr_mpz_clear@plt>
   55078:	mov	x0, x22
   5507c:	bl	c170 <mpfr_mpz_clear@plt>
   55080:	mov	x0, x25
   55084:	bl	c170 <mpfr_mpz_clear@plt>
   55088:	ldr	x0, [sp, #168]
   5508c:	bl	c170 <mpfr_mpz_clear@plt>
   55090:	ldr	x0, [sp, #104]
   55094:	bl	c170 <mpfr_mpz_clear@plt>
   55098:	ldr	x0, [sp, #96]
   5509c:	bl	c170 <mpfr_mpz_clear@plt>
   550a0:	mov	x0, x20
   550a4:	bl	c170 <mpfr_mpz_clear@plt>
   550a8:	mov	x0, x28
   550ac:	bl	c170 <mpfr_mpz_clear@plt>
   550b0:	b	54ecc <mpfr_grandom@@Base+0x754>
   550b4:	mov	x0, x26
   550b8:	bl	c070 <mpfr_clear@plt>
   550bc:	mov	x0, x19
   550c0:	bl	c070 <mpfr_clear@plt>
   550c4:	mov	x0, x24
   550c8:	bl	c070 <mpfr_clear@plt>
   550cc:	mov	x0, x23
   550d0:	bl	c170 <mpfr_mpz_clear@plt>
   550d4:	mov	x0, x22
   550d8:	bl	c170 <mpfr_mpz_clear@plt>
   550dc:	mov	x0, x25
   550e0:	bl	c170 <mpfr_mpz_clear@plt>
   550e4:	ldr	x0, [sp, #168]
   550e8:	bl	c170 <mpfr_mpz_clear@plt>
   550ec:	ldr	x0, [sp, #104]
   550f0:	bl	c170 <mpfr_mpz_clear@plt>
   550f4:	ldr	x0, [sp, #96]
   550f8:	bl	c170 <mpfr_mpz_clear@plt>
   550fc:	mov	x0, x20
   55100:	bl	c170 <mpfr_mpz_clear@plt>
   55104:	mov	x0, x28
   55108:	bl	c170 <mpfr_mpz_clear@plt>
   5510c:	mov	w0, w21
   55110:	ldp	x19, x20, [sp, #16]
   55114:	ldp	x21, x22, [sp, #32]
   55118:	ldp	x23, x24, [sp, #48]
   5511c:	ldp	x25, x26, [sp, #64]
   55120:	ldp	x27, x28, [sp, #80]
   55124:	ldp	x29, x30, [sp], #432
   55128:	ret
   5512c:	nop

0000000000055130 <__gmpfr_fpif_export@@Base>:
   55130:	cbz	x0, 5550c <__gmpfr_fpif_export@@Base+0x3dc>
   55134:	stp	x29, x30, [sp, #-96]!
   55138:	mov	x29, sp
   5513c:	stp	x19, x20, [sp, #16]
   55140:	mov	x20, x1
   55144:	ldr	x19, [x1]
   55148:	stp	x23, x24, [sp, #48]
   5514c:	mov	x24, x0
   55150:	cmp	x19, #0xf8
   55154:	stp	x21, x22, [sp, #32]
   55158:	cset	x0, gt
   5515c:	asr	x19, x19, #3
   55160:	add	x19, x19, #0xb
   55164:	add	x19, x19, x0, lsl #3
   55168:	mov	x0, x19
   5516c:	bl	ccf0 <mpfr_allocate_func@plt>
   55170:	mov	x22, x0
   55174:	cbz	x0, 55504 <__gmpfr_fpif_export@@Base+0x3d4>
   55178:	ldr	x23, [x20]
   5517c:	stp	x25, x26, [sp, #64]
   55180:	str	x23, [sp, #88]
   55184:	cmp	x23, #0xf8
   55188:	b.gt	55380 <__gmpfr_fpif_export@@Base+0x250>
   5518c:	cbnz	x19, 551a4 <__gmpfr_fpif_export@@Base+0x74>
   55190:	mov	x2, #0x1                   	// #1
   55194:	mov	x1, #0x0                   	// #0
   55198:	bl	c1c0 <mpfr_reallocate_func@plt>
   5519c:	mov	x22, x0
   551a0:	cbz	x0, 554dc <__gmpfr_fpif_export@@Base+0x3ac>
   551a4:	cmp	x19, #0x0
   551a8:	mov	x21, #0x1                   	// #1
   551ac:	csel	x19, x19, x21, ne  // ne = any
   551b0:	add	w0, w23, #0x7
   551b4:	strb	w0, [x22]
   551b8:	mov	x1, x21
   551bc:	mov	x3, x24
   551c0:	mov	x0, x22
   551c4:	mov	x2, #0x1                   	// #1
   551c8:	bl	c8c0 <fwrite@plt>
   551cc:	cmp	w0, #0x1
   551d0:	b.ne	554c4 <__gmpfr_fpif_export@@Base+0x394>  // b.any
   551d4:	ldr	x0, [x20, #16]
   551d8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   551dc:	cmp	x0, x1
   551e0:	b.gt	553ec <__gmpfr_fpif_export@@Base+0x2bc>
   551e4:	cbnz	x19, 5548c <__gmpfr_fpif_export@@Base+0x35c>
   551e8:	mov	x25, #0x0                   	// #0
   551ec:	mov	x21, #0x1                   	// #1
   551f0:	mov	x2, x21
   551f4:	mov	x1, x19
   551f8:	mov	x0, x22
   551fc:	bl	c1c0 <mpfr_reallocate_func@plt>
   55200:	mov	x23, x0
   55204:	cbz	x0, 554c4 <__gmpfr_fpif_export@@Base+0x394>
   55208:	ldr	x0, [x20, #16]
   5520c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   55210:	cmp	x0, x1
   55214:	b.gt	55454 <__gmpfr_fpif_export@@Base+0x324>
   55218:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   5521c:	cmp	x0, x1
   55220:	b.eq	554a0 <__gmpfr_fpif_export@@Base+0x370>  // b.none
   55224:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   55228:	cmp	x0, x1
   5522c:	mov	w1, #0x79                  	// #121
   55230:	mov	w0, #0x78                  	// #120
   55234:	csel	w0, w0, w1, eq  // eq = none
   55238:	strb	w0, [x23]
   5523c:	ldr	w0, [x20, #8]
   55240:	tbz	w0, #31, 55250 <__gmpfr_fpif_export@@Base+0x120>
   55244:	ldrb	w0, [x23]
   55248:	orr	w0, w0, #0xffffff80
   5524c:	strb	w0, [x23]
   55250:	cmp	x21, x19
   55254:	mov	x1, x21
   55258:	csel	x19, x21, x19, cs  // cs = hs, nlast
   5525c:	mov	x3, x24
   55260:	mov	x0, x23
   55264:	mov	x2, #0x1                   	// #1
   55268:	bl	c8c0 <fwrite@plt>
   5526c:	cmp	w0, #0x1
   55270:	b.ne	554ec <__gmpfr_fpif_export@@Base+0x3bc>  // b.any
   55274:	ldr	x1, [x20, #16]
   55278:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   5527c:	cmp	x1, x0
   55280:	b.le	55358 <__gmpfr_fpif_export@@Base+0x228>
   55284:	adrp	x0, 7f000 <__gmpfr_l2b@@Base+0x200>
   55288:	ldr	x22, [x20]
   5528c:	ldr	x0, [x0, #4032]
   55290:	add	x22, x22, #0x7
   55294:	asr	x22, x22, #3
   55298:	ldr	w25, [x0]
   5529c:	cmp	x19, x22
   552a0:	asr	w25, w25, #3
   552a4:	sxtw	x25, w25
   552a8:	sub	x26, x25, #0x1
   552ac:	add	x26, x26, x22
   552b0:	udiv	x1, x22, x25
   552b4:	udiv	x26, x26, x25
   552b8:	msub	x21, x1, x25, x22
   552bc:	b.cs	552d8 <__gmpfr_fpif_export@@Base+0x1a8>  // b.hs, b.nlast
   552c0:	mov	x0, x23
   552c4:	mov	x2, x22
   552c8:	mov	x1, x19
   552cc:	bl	c1c0 <mpfr_reallocate_func@plt>
   552d0:	mov	x23, x0
   552d4:	cbz	x0, 554e4 <__gmpfr_fpif_export@@Base+0x3b4>
   552d8:	ldr	x1, [x20, #24]
   552dc:	mov	x0, #0x0                   	// #0
   552e0:	add	x1, x1, #0x7
   552e4:	cbz	x21, 55300 <__gmpfr_fpif_export@@Base+0x1d0>
   552e8:	neg	x2, x0
   552ec:	ldrb	w2, [x1, x2]
   552f0:	strb	w2, [x23, x0]
   552f4:	add	x0, x0, #0x1
   552f8:	cmp	x21, x0
   552fc:	b.ne	552e8 <__gmpfr_fpif_export@@Base+0x1b8>  // b.any
   55300:	cmp	x21, #0x0
   55304:	cset	x0, ne  // ne = any
   55308:	cmp	x19, x22
   5530c:	csel	x19, x19, x22, cs  // cs = hs, nlast
   55310:	cmp	x26, x0
   55314:	b.ls	5533c <__gmpfr_fpif_export@@Base+0x20c>  // b.plast
   55318:	add	x1, x23, x21
   5531c:	nop
   55320:	ldr	x2, [x20, #24]
   55324:	ldr	x2, [x2, x0, lsl #3]
   55328:	str	x2, [x1]
   5532c:	add	x0, x0, #0x1
   55330:	add	x1, x1, x25
   55334:	cmp	x26, x0
   55338:	b.ne	55320 <__gmpfr_fpif_export@@Base+0x1f0>  // b.any
   5533c:	mov	x3, x24
   55340:	mov	x1, x22
   55344:	mov	x0, x23
   55348:	mov	x2, #0x1                   	// #1
   5534c:	bl	c8c0 <fwrite@plt>
   55350:	cmp	w0, #0x1
   55354:	b.ne	554ec <__gmpfr_fpif_export@@Base+0x3bc>  // b.any
   55358:	mov	x0, x23
   5535c:	mov	x1, x19
   55360:	bl	cc20 <mpfr_free_func@plt>
   55364:	ldp	x25, x26, [sp, #64]
   55368:	mov	w0, #0x0                   	// #0
   5536c:	ldp	x19, x20, [sp, #16]
   55370:	ldp	x21, x22, [sp, #32]
   55374:	ldp	x23, x24, [sp, #48]
   55378:	ldp	x29, x30, [sp], #96
   5537c:	ret
   55380:	sub	x23, x23, #0xf9
   55384:	mov	x25, #0x0                   	// #0
   55388:	mov	x0, x23
   5538c:	nop
   55390:	mov	x21, x25
   55394:	lsr	x0, x0, #8
   55398:	add	x25, x25, #0x1
   5539c:	cbnz	x0, 55390 <__gmpfr_fpif_export@@Base+0x260>
   553a0:	add	x21, x21, #0x2
   553a4:	cmp	x19, x21
   553a8:	b.cs	553c4 <__gmpfr_fpif_export@@Base+0x294>  // b.hs, b.nlast
   553ac:	mov	x0, x22
   553b0:	mov	x2, x21
   553b4:	mov	x1, x19
   553b8:	bl	c1c0 <mpfr_reallocate_func@plt>
   553bc:	mov	x22, x0
   553c0:	cbz	x0, 554dc <__gmpfr_fpif_export@@Base+0x3ac>
   553c4:	mov	x0, x22
   553c8:	sub	w3, w25, #0x1
   553cc:	mov	x2, x25
   553d0:	add	x1, sp, #0x58
   553d4:	str	x23, [sp, #88]
   553d8:	strb	w3, [x0], #1
   553dc:	bl	ba10 <memcpy@plt>
   553e0:	cmp	x19, x21
   553e4:	csel	x19, x19, x21, cs  // cs = hs, nlast
   553e8:	b	551b8 <__gmpfr_fpif_export@@Base+0x88>
   553ec:	add	x1, x0, #0x2f
   553f0:	cmp	x1, #0x5e
   553f4:	b.ls	55474 <__gmpfr_fpif_export@@Base+0x344>  // b.plast
   553f8:	mov	x1, #0xffffffffffffffd1    	// #-47
   553fc:	cmp	x0, #0x0
   55400:	add	x2, x0, x1
   55404:	sub	x1, x1, x0
   55408:	csel	x2, x2, x1, ge  // ge = tcont
   5540c:	mov	x25, #0x0                   	// #0
   55410:	str	x2, [sp, #88]
   55414:	lsl	x1, x2, #1
   55418:	mov	x21, x25
   5541c:	lsr	x1, x1, #8
   55420:	add	x25, x25, #0x1
   55424:	cbnz	x1, 55418 <__gmpfr_fpif_export@@Base+0x2e8>
   55428:	cmp	x25, #0x10
   5542c:	b.hi	55514 <__gmpfr_fpif_export@@Base+0x3e4>  // b.pmore
   55430:	lsl	w1, w25, #3
   55434:	mov	x3, #0x1                   	// #1
   55438:	sub	w1, w1, #0x1
   5543c:	lsl	x1, x3, x1
   55440:	tbnz	x0, #63, 554ac <__gmpfr_fpif_export@@Base+0x37c>
   55444:	add	x21, x21, #0x2
   55448:	mov	x23, x22
   5544c:	cmp	x21, x19
   55450:	b.hi	551f0 <__gmpfr_fpif_export@@Base+0xc0>  // b.pmore
   55454:	cbz	x25, 554b8 <__gmpfr_fpif_export@@Base+0x388>
   55458:	mov	x0, x23
   5545c:	add	w3, w25, #0x5e
   55460:	mov	x2, x25
   55464:	add	x1, sp, #0x58
   55468:	strb	w3, [x0], #1
   5546c:	bl	ba10 <memcpy@plt>
   55470:	b	5523c <__gmpfr_fpif_export@@Base+0x10c>
   55474:	str	x1, [sp, #88]
   55478:	cbz	x19, 551e8 <__gmpfr_fpif_export@@Base+0xb8>
   5547c:	mov	x21, #0x1                   	// #1
   55480:	mov	x23, x22
   55484:	strb	w1, [x22]
   55488:	b	5523c <__gmpfr_fpif_export@@Base+0x10c>
   5548c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   55490:	mov	x23, x22
   55494:	cmp	x0, x1
   55498:	mov	x21, #0x1                   	// #1
   5549c:	b.ne	55224 <__gmpfr_fpif_export@@Base+0xf4>  // b.any
   554a0:	mov	w0, #0x77                  	// #119
   554a4:	strb	w0, [x23]
   554a8:	b	5523c <__gmpfr_fpif_export@@Base+0x10c>
   554ac:	orr	x2, x2, x1
   554b0:	str	x2, [sp, #88]
   554b4:	b	55444 <__gmpfr_fpif_export@@Base+0x314>
   554b8:	mov	x22, x23
   554bc:	ldr	x1, [sp, #88]
   554c0:	b	55480 <__gmpfr_fpif_export@@Base+0x350>
   554c4:	mov	x0, x22
   554c8:	mov	x1, x19
   554cc:	bl	cc20 <mpfr_free_func@plt>
   554d0:	mov	w0, #0xffffffff            	// #-1
   554d4:	ldp	x25, x26, [sp, #64]
   554d8:	b	5536c <__gmpfr_fpif_export@@Base+0x23c>
   554dc:	mov	x21, #0x0                   	// #0
   554e0:	b	551b8 <__gmpfr_fpif_export@@Base+0x88>
   554e4:	mov	x22, #0x0                   	// #0
   554e8:	b	5533c <__gmpfr_fpif_export@@Base+0x20c>
   554ec:	mov	x0, x23
   554f0:	mov	x1, x19
   554f4:	bl	cc20 <mpfr_free_func@plt>
   554f8:	mov	w0, #0xffffffff            	// #-1
   554fc:	ldp	x25, x26, [sp, #64]
   55500:	b	5536c <__gmpfr_fpif_export@@Base+0x23c>
   55504:	mov	w0, #0xffffffff            	// #-1
   55508:	b	5536c <__gmpfr_fpif_export@@Base+0x23c>
   5550c:	mov	w0, #0xffffffff            	// #-1
   55510:	ret
   55514:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   55518:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   5551c:	add	x2, x2, #0x5b8
   55520:	add	x0, x0, #0x5d0
   55524:	mov	w1, #0x139                 	// #313
   55528:	bl	cb40 <mpfr_assert_fail@plt>
   5552c:	nop

0000000000055530 <__gmpfr_fpif_import@@Base>:
   55530:	cbz	x1, 555cc <__gmpfr_fpif_import@@Base+0x9c>
   55534:	stp	x29, x30, [sp, #-80]!
   55538:	mov	x2, #0x1                   	// #1
   5553c:	mov	x29, sp
   55540:	stp	x19, x20, [sp, #16]
   55544:	mov	x20, x1
   55548:	mov	x3, x20
   5554c:	stp	x23, x24, [sp, #48]
   55550:	add	x23, sp, #0x48
   55554:	mov	x1, x2
   55558:	stp	x21, x22, [sp, #32]
   5555c:	mov	x21, x0
   55560:	mov	x0, x23
   55564:	bl	c660 <fread@plt>
   55568:	cmp	x0, #0x1
   5556c:	b.eq	55588 <__gmpfr_fpif_import@@Base+0x58>  // b.none
   55570:	mov	w0, #0xffffffff            	// #-1
   55574:	ldp	x19, x20, [sp, #16]
   55578:	ldp	x21, x22, [sp, #32]
   5557c:	ldp	x23, x24, [sp, #48]
   55580:	ldp	x29, x30, [sp], #80
   55584:	ret
   55588:	ldrb	w19, [sp, #72]
   5558c:	cmp	x19, #0x7
   55590:	b.ls	555d4 <__gmpfr_fpif_import@@Base+0xa4>  // b.plast
   55594:	sub	x19, x19, #0x7
   55598:	mov	x1, x19
   5559c:	mov	x0, x21
   555a0:	bl	bed0 <mpfr_set_prec@plt>
   555a4:	mov	x2, #0x1                   	// #1
   555a8:	mov	x3, x20
   555ac:	mov	x0, x23
   555b0:	mov	x1, x2
   555b4:	bl	c660 <fread@plt>
   555b8:	cmp	x0, #0x1
   555bc:	b.eq	55634 <__gmpfr_fpif_import@@Base+0x104>  // b.none
   555c0:	mov	x0, x21
   555c4:	bl	bb50 <mpfr_set_nan@plt>
   555c8:	b	55570 <__gmpfr_fpif_import@@Base+0x40>
   555cc:	mov	w0, #0xffffffff            	// #-1
   555d0:	ret
   555d4:	add	x19, x19, #0x1
   555d8:	mov	x2, x0
   555dc:	mov	x1, x19
   555e0:	mov	x3, x20
   555e4:	mov	x0, x23
   555e8:	bl	c660 <fread@plt>
   555ec:	cmp	x0, #0x1
   555f0:	b.ne	55570 <__gmpfr_fpif_import@@Base+0x40>  // b.any
   555f4:	cmp	x19, #0x8
   555f8:	b.ne	55604 <__gmpfr_fpif_import@@Base+0xd4>  // b.any
   555fc:	ldrsb	w0, [sp, #79]
   55600:	tbnz	w0, #31, 55570 <__gmpfr_fpif_import@@Base+0x40>
   55604:	mov	x2, x19
   55608:	mov	x1, x23
   5560c:	add	x0, sp, #0x40
   55610:	str	xzr, [sp, #64]
   55614:	bl	ba10 <memcpy@plt>
   55618:	ldr	x19, [sp, #64]
   5561c:	adds	x19, x19, #0xf9
   55620:	b.eq	55570 <__gmpfr_fpif_import@@Base+0x40>  // b.none
   55624:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   55628:	cmp	x19, x0
   5562c:	b.lt	55598 <__gmpfr_fpif_import@@Base+0x68>  // b.tstop
   55630:	b	55570 <__gmpfr_fpif_import@@Base+0x40>
   55634:	ldrb	w2, [sp, #72]
   55638:	and	x1, x2, #0x7f
   5563c:	and	w4, w2, #0x7f
   55640:	tst	x2, #0x80
   55644:	sub	x2, x1, #0x5f
   55648:	cneg	w3, w0, ne  // ne = any
   5564c:	str	w3, [x21, #8]
   55650:	cmp	x2, #0x17
   55654:	b.hi	557c4 <__gmpfr_fpif_import@@Base+0x294>  // b.pmore
   55658:	sub	x22, x1, #0x5e
   5565c:	cmp	x22, #0x8
   55660:	b.hi	555c0 <__gmpfr_fpif_import@@Base+0x90>  // b.pmore
   55664:	mov	x2, x0
   55668:	mov	x3, x20
   5566c:	mov	x1, x22
   55670:	mov	x0, x23
   55674:	bl	c660 <fread@plt>
   55678:	mov	x24, x0
   5567c:	cmp	x0, #0x1
   55680:	b.ne	555c0 <__gmpfr_fpif_import@@Base+0x90>  // b.any
   55684:	mov	x1, x23
   55688:	mov	x2, x22
   5568c:	add	x0, sp, #0x40
   55690:	str	xzr, [sp, #64]
   55694:	bl	ba10 <memcpy@plt>
   55698:	lsl	w1, w22, #3
   5569c:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   556a0:	ldr	x2, [sp, #64]
   556a4:	sub	w1, w1, #0x1
   556a8:	lsl	x1, x24, x1
   556ac:	bic	x0, x2, x1
   556b0:	add	x0, x0, #0x2f
   556b4:	and	x1, x1, x2
   556b8:	cmp	x0, x3
   556bc:	b.hi	555c0 <__gmpfr_fpif_import@@Base+0x90>  // b.pmore
   556c0:	cmp	x1, #0x0
   556c4:	mrs	x2, tpidr_el0
   556c8:	cneg	x1, x0, ne  // ne = any
   556cc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   556d0:	ldr	x3, [x0, #2512]
   556d4:	add	x0, x0, #0x9d0
   556d8:	blr	x3
   556dc:	ldr	x0, [x2, x0]
   556e0:	cmp	x0, x1
   556e4:	b.gt	555c0 <__gmpfr_fpif_import@@Base+0x90>
   556e8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   556ec:	ldr	x3, [x0, #2544]
   556f0:	add	x0, x0, #0x9f0
   556f4:	blr	x3
   556f8:	ldr	x0, [x2, x0]
   556fc:	cmp	x1, x0
   55700:	b.gt	555c0 <__gmpfr_fpif_import@@Base+0x90>
   55704:	add	x19, x19, #0x7
   55708:	str	x1, [x21, #16]
   5570c:	asr	x19, x19, #3
   55710:	mov	x0, x19
   55714:	bl	ccf0 <mpfr_allocate_func@plt>
   55718:	mov	x22, x0
   5571c:	cbz	x0, 555c0 <__gmpfr_fpif_import@@Base+0x90>
   55720:	mov	x1, x19
   55724:	mov	x3, x20
   55728:	mov	x2, #0x1                   	// #1
   5572c:	bl	c660 <fread@plt>
   55730:	mov	x1, x19
   55734:	cmp	w0, #0x1
   55738:	b.ne	55810 <__gmpfr_fpif_import@@Base+0x2e0>  // b.any
   5573c:	ldr	x1, [x21]
   55740:	add	x1, x1, #0x7
   55744:	cmp	x19, x1, asr #3
   55748:	asr	x1, x1, #3
   5574c:	b.cc	5580c <__gmpfr_fpif_import@@Base+0x2dc>  // b.lo, b.ul, b.last
   55750:	adrp	x0, 7f000 <__gmpfr_l2b@@Base+0x200>
   55754:	ldr	x0, [x0, #4032]
   55758:	ldr	w4, [x0]
   5575c:	asr	w4, w4, #3
   55760:	sxtw	x4, w4
   55764:	udiv	x2, x1, x4
   55768:	msub	x2, x2, x4, x1
   5576c:	cbnz	x2, 5582c <__gmpfr_fpif_import@@Base+0x2fc>
   55770:	cmp	x2, #0x0
   55774:	cset	x3, ne  // ne = any
   55778:	cmp	x1, x2
   5577c:	lsl	x3, x3, #3
   55780:	b.ls	557a4 <__gmpfr_fpif_import@@Base+0x274>  // b.plast
   55784:	nop
   55788:	ldr	x5, [x21, #24]
   5578c:	ldr	x6, [x22, x2]
   55790:	add	x2, x2, x4
   55794:	str	x6, [x5, x3]
   55798:	cmp	x1, x2
   5579c:	add	x3, x3, #0x8
   557a0:	b.hi	55788 <__gmpfr_fpif_import@@Base+0x258>  // b.pmore
   557a4:	mov	x0, x22
   557a8:	bl	cc20 <mpfr_free_func@plt>
   557ac:	mov	w0, #0x0                   	// #0
   557b0:	ldp	x19, x20, [sp, #16]
   557b4:	ldp	x21, x22, [sp, #32]
   557b8:	ldp	x23, x24, [sp, #48]
   557bc:	ldp	x29, x30, [sp], #80
   557c0:	ret
   557c4:	cmp	w4, #0x77
   557c8:	b.eq	5581c <__gmpfr_fpif_import@@Base+0x2ec>  // b.none
   557cc:	cmp	x1, #0x78
   557d0:	b.eq	55870 <__gmpfr_fpif_import@@Base+0x340>  // b.none
   557d4:	cmp	x1, #0x79
   557d8:	b.eq	5585c <__gmpfr_fpif_import@@Base+0x32c>  // b.none
   557dc:	cmp	x1, #0x5e
   557e0:	b.gt	555c0 <__gmpfr_fpif_import@@Base+0x90>
   557e4:	mrs	x2, tpidr_el0
   557e8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   557ec:	ldr	x3, [x0, #2512]
   557f0:	add	x0, x0, #0x9d0
   557f4:	blr	x3
   557f8:	sub	x1, x1, #0x2f
   557fc:	ldr	x0, [x2, x0]
   55800:	cmp	x1, x0
   55804:	b.lt	555c0 <__gmpfr_fpif_import@@Base+0x90>  // b.tstop
   55808:	b	556e8 <__gmpfr_fpif_import@@Base+0x1b8>
   5580c:	mov	x1, #0x0                   	// #0
   55810:	mov	x0, x22
   55814:	bl	cc20 <mpfr_free_func@plt>
   55818:	b	555c0 <__gmpfr_fpif_import@@Base+0x90>
   5581c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   55820:	mov	w0, #0x0                   	// #0
   55824:	str	x1, [x21, #16]
   55828:	b	55574 <__gmpfr_fpif_import@@Base+0x44>
   5582c:	ldr	x0, [x21, #24]
   55830:	mov	x3, #0x0                   	// #0
   55834:	str	xzr, [x0]
   55838:	ldr	x6, [x21, #24]
   5583c:	add	x6, x6, #0x7
   55840:	neg	x0, x3
   55844:	ldrb	w5, [x22, x3]
   55848:	add	x3, x3, #0x1
   5584c:	cmp	x2, x3
   55850:	strb	w5, [x6, x0]
   55854:	b.ne	55840 <__gmpfr_fpif_import@@Base+0x310>  // b.any
   55858:	b	55770 <__gmpfr_fpif_import@@Base+0x240>
   5585c:	mov	x1, #0x2                   	// #2
   55860:	mov	w0, #0x0                   	// #0
   55864:	movk	x1, #0x8000, lsl #48
   55868:	str	x1, [x21, #16]
   5586c:	b	55574 <__gmpfr_fpif_import@@Base+0x44>
   55870:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   55874:	mov	w0, #0x0                   	// #0
   55878:	str	x1, [x21, #16]
   5587c:	b	55574 <__gmpfr_fpif_import@@Base+0x44>

0000000000055880 <mpfr_round_nearest_away_begin@@Base>:
   55880:	stp	x29, x30, [sp, #-112]!
   55884:	mov	x29, sp
   55888:	stp	x21, x22, [sp, #32]
   5588c:	mrs	x21, tpidr_el0
   55890:	stp	x19, x20, [sp, #16]
   55894:	mov	x19, x0
   55898:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   5589c:	ldr	x1, [x0, #2512]
   558a0:	add	x0, x0, #0x9d0
   558a4:	blr	x1
   558a8:	ldr	x22, [x21, x0]
   558ac:	stp	x23, x24, [sp, #48]
   558b0:	mov	x1, #0xc000000000000001    	// #-4611686018427387903
   558b4:	str	x25, [sp, #64]
   558b8:	add	x20, x21, x0
   558bc:	cmp	x22, x1
   558c0:	b.le	559bc <mpfr_round_nearest_away_begin@@Base+0x13c>
   558c4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   558c8:	ldr	x1, [x0, #2576]
   558cc:	add	x0, x0, #0xa10
   558d0:	blr	x1
   558d4:	ldr	w25, [x21, x0]
   558d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   558dc:	ldr	x1, [x0, #2544]
   558e0:	add	x0, x0, #0x9f0
   558e4:	blr	x1
   558e8:	add	x3, x21, x0
   558ec:	ldr	x1, [x19]
   558f0:	mov	x4, #0x3fffffffffffffff    	// #4611686018427387903
   558f4:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   558f8:	ldr	x24, [x21, x0]
   558fc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   55900:	ldr	x5, [x0, #2512]
   55904:	add	x0, x0, #0x9d0
   55908:	blr	x5
   5590c:	str	x4, [x3]
   55910:	add	x23, x1, #0x1
   55914:	str	x2, [x21, x0]
   55918:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   5591c:	cmp	x23, x0
   55920:	b.ge	559dc <mpfr_round_nearest_away_begin@@Base+0x15c>  // b.tcont
   55924:	cmp	x1, #0x0
   55928:	add	x20, x1, #0x3f
   5592c:	csel	x20, x20, x1, lt  // lt = tstop
   55930:	asr	x20, x20, #6
   55934:	add	x0, x20, #0x9
   55938:	add	x20, x20, #0x1
   5593c:	lsl	x0, x0, #3
   55940:	bl	ccf0 <mpfr_allocate_func@plt>
   55944:	ldp	x2, x4, [x19, #16]
   55948:	mov	x5, #0x2                   	// #2
   5594c:	ldr	w3, [x19, #8]
   55950:	mov	w6, #0x1                   	// #1
   55954:	ldr	x1, [x19]
   55958:	stp	x20, x4, [x0]
   5595c:	add	x4, x0, #0x40
   55960:	movk	x5, #0x8000, lsl #48
   55964:	str	x2, [x0, #16]
   55968:	str	w3, [x0, #24]
   5596c:	mov	w2, #0x0                   	// #0
   55970:	str	x1, [x0, #32]
   55974:	mov	x1, x19
   55978:	str	w25, [x0, #40]
   5597c:	stp	x22, x24, [x0, #48]
   55980:	add	x0, sp, #0x50
   55984:	str	x23, [sp, #80]
   55988:	str	w6, [sp, #88]
   5598c:	stp	x5, x4, [sp, #96]
   55990:	bl	c6a0 <mpfr_set4@plt>
   55994:	ldp	x0, x1, [sp, #80]
   55998:	stp	x0, x1, [x19]
   5599c:	ldp	x0, x1, [sp, #96]
   559a0:	stp	x0, x1, [x19, #16]
   559a4:	ldp	x19, x20, [sp, #16]
   559a8:	ldp	x21, x22, [sp, #32]
   559ac:	ldp	x23, x24, [sp, #48]
   559b0:	ldr	x25, [sp, #64]
   559b4:	ldp	x29, x30, [sp], #112
   559b8:	ret
   559bc:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   559c0:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   559c4:	add	x2, x2, #0x5d8
   559c8:	add	x0, x0, #0x638
   559cc:	mov	w1, #0x4d                  	// #77
   559d0:	bl	cb40 <mpfr_assert_fail@plt>
   559d4:	ldr	x22, [x20]
   559d8:	b	558c4 <mpfr_round_nearest_away_begin@@Base+0x44>
   559dc:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   559e0:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   559e4:	add	x2, x2, #0x640
   559e8:	add	x0, x0, #0x638
   559ec:	mov	w1, #0x54                  	// #84
   559f0:	bl	cb40 <mpfr_assert_fail@plt>
   559f4:	nop

00000000000559f8 <mpfr_round_nearest_away_end@@Base>:
   559f8:	stp	x29, x30, [sp, #-144]!
   559fc:	mov	x7, #0x8000000000000003    	// #-9223372036854775805
   55a00:	mov	x29, sp
   55a04:	ldp	x3, x2, [x0, #16]
   55a08:	stp	x19, x20, [sp, #16]
   55a0c:	mov	w20, w1
   55a10:	ldp	x4, x5, [x0]
   55a14:	stp	x21, x22, [sp, #32]
   55a18:	mov	x19, x0
   55a1c:	ldur	w8, [x2, #-40]
   55a20:	cmp	x7, x3
   55a24:	stp	x23, x24, [sp, #48]
   55a28:	add	x1, sp, #0x70
   55a2c:	ldur	w24, [x2, #-24]
   55a30:	stp	x25, x26, [sp, #64]
   55a34:	sub	x23, x2, #0x40
   55a38:	stp	x4, x5, [sp, #112]
   55a3c:	ldp	x22, x5, [x2, #-64]
   55a40:	ldur	x6, [x2, #-48]
   55a44:	ldur	x4, [x2, #-32]
   55a48:	ldp	x26, x25, [x2, #-16]
   55a4c:	str	x27, [sp, #80]
   55a50:	str	x4, [x0]
   55a54:	str	w8, [x0, #8]
   55a58:	stp	x6, x5, [x0, #16]
   55a5c:	stp	x3, x2, [sp, #128]
   55a60:	ldr	w3, [sp, #120]
   55a64:	b.ge	55c04 <mpfr_round_nearest_away_end@@Base+0x20c>  // b.tcont
   55a68:	ldr	x2, [x2]
   55a6c:	mvn	w4, w4
   55a70:	lsr	x4, x2, x4
   55a74:	tbz	w4, #0, 55c04 <mpfr_round_nearest_away_end@@Base+0x20c>
   55a78:	cmp	w20, #0x0
   55a7c:	cbz	w20, 55c24 <mpfr_round_nearest_away_end@@Base+0x22c>
   55a80:	cset	w2, gt
   55a84:	add	w2, w2, #0x2
   55a88:	bl	c6a0 <mpfr_set4@plt>
   55a8c:	mov	w20, w0
   55a90:	mrs	x21, tpidr_el0
   55a94:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   55a98:	ldr	x1, [x0, #2576]
   55a9c:	add	x0, x0, #0xa10
   55aa0:	blr	x1
   55aa4:	add	x2, x21, x0
   55aa8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   55aac:	ldr	x1, [x0, #2512]
   55ab0:	add	x0, x0, #0x9d0
   55ab4:	blr	x1
   55ab8:	add	x27, x21, x0
   55abc:	str	x26, [x21, x0]
   55ac0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   55ac4:	ldr	x1, [x0, #2544]
   55ac8:	add	x0, x0, #0x9f0
   55acc:	blr	x1
   55ad0:	ldr	w1, [x2]
   55ad4:	str	x25, [x21, x0]
   55ad8:	orr	w1, w1, w24
   55adc:	str	w1, [x2]
   55ae0:	cbnz	w20, 55b40 <mpfr_round_nearest_away_end@@Base+0x148>
   55ae4:	ldr	x0, [x19, #16]
   55ae8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   55aec:	cmp	x0, x1
   55af0:	b.ge	55c10 <mpfr_round_nearest_away_end@@Base+0x218>  // b.tcont
   55af4:	mov	x2, #0x2                   	// #2
   55af8:	mov	x1, #0xffffffffffffffff    	// #-1
   55afc:	movk	x2, #0x8000, lsl #48
   55b00:	cmp	x0, x2
   55b04:	b.eq	55c40 <mpfr_round_nearest_away_end@@Base+0x248>  // b.none
   55b08:	sub	x2, x26, #0x2
   55b0c:	mov	x0, x19
   55b10:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   55b14:	cbnz	w0, 55b40 <mpfr_round_nearest_away_end@@Base+0x148>
   55b18:	ldr	x0, [x19, #16]
   55b1c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   55b20:	cmp	x0, x1
   55b24:	b.ge	55c34 <mpfr_round_nearest_away_end@@Base+0x23c>  // b.tcont
   55b28:	mov	x1, #0x2                   	// #2
   55b2c:	mov	w20, #0x0                   	// #0
   55b30:	movk	x1, #0x8000, lsl #48
   55b34:	cmp	x0, x1
   55b38:	b.eq	55c54 <mpfr_round_nearest_away_end@@Base+0x25c>  // b.none
   55b3c:	nop
   55b40:	add	x1, x22, #0x8
   55b44:	mov	x0, x23
   55b48:	lsl	x1, x1, #3
   55b4c:	bl	cc20 <mpfr_free_func@plt>
   55b50:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   55b54:	ldr	x1, [x0, #2512]
   55b58:	add	x0, x0, #0x9d0
   55b5c:	blr	x1
   55b60:	ldr	x0, [x21, x0]
   55b64:	ldr	x1, [x19, #16]
   55b68:	cmp	x1, x0
   55b6c:	b.lt	55b8c <mpfr_round_nearest_away_end@@Base+0x194>  // b.tstop
   55b70:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   55b74:	ldr	x2, [x0, #2544]
   55b78:	add	x0, x0, #0x9f0
   55b7c:	blr	x2
   55b80:	ldr	x0, [x21, x0]
   55b84:	cmp	x1, x0
   55b88:	b.le	55bc0 <mpfr_round_nearest_away_end@@Base+0x1c8>
   55b8c:	mov	w1, w20
   55b90:	mov	x0, x19
   55b94:	mov	w2, #0x0                   	// #0
   55b98:	bl	cb30 <mpfr_check_range@plt>
   55b9c:	mov	w20, w0
   55ba0:	mov	w0, w20
   55ba4:	ldp	x19, x20, [sp, #16]
   55ba8:	ldp	x21, x22, [sp, #32]
   55bac:	ldp	x23, x24, [sp, #48]
   55bb0:	ldp	x25, x26, [sp, #64]
   55bb4:	ldr	x27, [sp, #80]
   55bb8:	ldp	x29, x30, [sp], #144
   55bbc:	ret
   55bc0:	cbz	w20, 55ba0 <mpfr_round_nearest_away_end@@Base+0x1a8>
   55bc4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   55bc8:	ldr	x1, [x0, #2576]
   55bcc:	add	x0, x0, #0xa10
   55bd0:	blr	x1
   55bd4:	add	x0, x21, x0
   55bd8:	ldp	x21, x22, [sp, #32]
   55bdc:	ldr	w1, [x0]
   55be0:	ldp	x23, x24, [sp, #48]
   55be4:	orr	w1, w1, #0x8
   55be8:	str	w1, [x0]
   55bec:	mov	w0, w20
   55bf0:	ldp	x19, x20, [sp, #16]
   55bf4:	ldp	x25, x26, [sp, #64]
   55bf8:	ldr	x27, [sp, #80]
   55bfc:	ldp	x29, x30, [sp], #144
   55c00:	ret
   55c04:	mov	w2, #0x0                   	// #0
   55c08:	bl	c6a0 <mpfr_set4@plt>
   55c0c:	b	55a90 <mpfr_round_nearest_away_end@@Base+0x98>
   55c10:	ldr	w0, [x19, #8]
   55c14:	mov	x1, #0xffffffffffffffff    	// #-1
   55c18:	cmp	w0, #0x0
   55c1c:	cneg	x1, x1, gt
   55c20:	b	55b08 <mpfr_round_nearest_away_end@@Base+0x110>
   55c24:	mov	w2, #0x4                   	// #4
   55c28:	bl	c6a0 <mpfr_set4@plt>
   55c2c:	mov	w20, w0
   55c30:	b	55a90 <mpfr_round_nearest_away_end@@Base+0x98>
   55c34:	ldr	w20, [x19, #8]
   55c38:	neg	w20, w20
   55c3c:	b	55b40 <mpfr_round_nearest_away_end@@Base+0x148>
   55c40:	str	x1, [sp, #104]
   55c44:	bl	bc90 <mpfr_set_erangeflag@plt>
   55c48:	ldr	x26, [x27]
   55c4c:	ldr	x1, [sp, #104]
   55c50:	b	55b08 <mpfr_round_nearest_away_end@@Base+0x110>
   55c54:	bl	bc90 <mpfr_set_erangeflag@plt>
   55c58:	b	55b40 <mpfr_round_nearest_away_end@@Base+0x148>
   55c5c:	nop
   55c60:	stp	x29, x30, [sp, #-48]!
   55c64:	mov	x29, sp
   55c68:	stp	x19, x20, [sp, #16]
   55c6c:	mov	x19, x1
   55c70:	mov	x20, x2
   55c74:	str	x21, [sp, #32]
   55c78:	mov	x21, x0
   55c7c:	mov	x0, x1
   55c80:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   55c84:	mov	x2, x21
   55c88:	mov	x0, x19
   55c8c:	mov	x1, #0x1                   	// #1
   55c90:	bl	c310 <mpfr_random_deviate_tstbit@plt>
   55c94:	cbz	w0, 55cb4 <mpfr_round_nearest_away_end@@Base+0x2bc>
   55c98:	b	55cec <mpfr_round_nearest_away_end@@Base+0x2f4>
   55c9c:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   55ca0:	mov	x2, x21
   55ca4:	mov	x1, x20
   55ca8:	mov	x0, x19
   55cac:	bl	ca30 <mpfr_random_deviate_less@plt>
   55cb0:	cbz	w0, 55cec <mpfr_round_nearest_away_end@@Base+0x2f4>
   55cb4:	mov	x0, x20
   55cb8:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   55cbc:	mov	x2, x21
   55cc0:	mov	x1, x19
   55cc4:	mov	x0, x20
   55cc8:	bl	ca30 <mpfr_random_deviate_less@plt>
   55ccc:	mov	w3, w0
   55cd0:	mov	x0, x19
   55cd4:	cbnz	w3, 55c9c <mpfr_round_nearest_away_end@@Base+0x2a4>
   55cd8:	mov	w0, w3
   55cdc:	ldp	x19, x20, [sp, #16]
   55ce0:	ldr	x21, [sp, #32]
   55ce4:	ldp	x29, x30, [sp], #48
   55ce8:	ret
   55cec:	mov	w3, #0x1                   	// #1
   55cf0:	mov	w0, w3
   55cf4:	ldp	x19, x20, [sp, #16]
   55cf8:	ldr	x21, [sp, #32]
   55cfc:	ldp	x29, x30, [sp], #48
   55d00:	ret
   55d04:	nop

0000000000055d08 <mpfr_nrandom@@Base>:
   55d08:	stp	x29, x30, [sp, #-208]!
   55d0c:	mov	x29, sp
   55d10:	stp	x27, x28, [sp, #80]
   55d14:	add	x27, sp, #0x70
   55d18:	stp	x19, x20, [sp, #16]
   55d1c:	add	x20, sp, #0xb0
   55d20:	stp	x21, x22, [sp, #32]
   55d24:	mov	x22, x1
   55d28:	add	x21, sp, #0x90
   55d2c:	stp	x23, x24, [sp, #48]
   55d30:	stp	x25, x26, [sp, #64]
   55d34:	str	x0, [sp, #96]
   55d38:	mov	x0, x27
   55d3c:	str	w2, [sp, #108]
   55d40:	bl	c150 <mpfr_random_deviate_init@plt>
   55d44:	mov	x0, x21
   55d48:	bl	c150 <mpfr_random_deviate_init@plt>
   55d4c:	mov	x0, x20
   55d50:	bl	c150 <mpfr_random_deviate_init@plt>
   55d54:	nop
   55d58:	mov	x19, #0x0                   	// #0
   55d5c:	b	55d68 <mpfr_nrandom@@Base+0x60>
   55d60:	adds	x19, x19, #0x1
   55d64:	b.eq	55f0c <mpfr_nrandom@@Base+0x204>  // b.none
   55d68:	mov	x2, x20
   55d6c:	mov	x1, x21
   55d70:	mov	x0, x22
   55d74:	bl	55c60 <mpfr_round_nearest_away_end@@Base+0x268>
   55d78:	cbnz	w0, 55d60 <mpfr_nrandom@@Base+0x58>
   55d7c:	sub	x24, x19, #0x1
   55d80:	mov	x23, x24
   55d84:	cbz	x19, 55dbc <mpfr_nrandom@@Base+0xb4>
   55d88:	mov	x25, x24
   55d8c:	b	55da4 <mpfr_nrandom@@Base+0x9c>
   55d90:	mov	x2, x20
   55d94:	mov	x1, x21
   55d98:	mov	x0, x22
   55d9c:	bl	55c60 <mpfr_round_nearest_away_end@@Base+0x268>
   55da0:	cbz	w0, 55d58 <mpfr_nrandom@@Base+0x50>
   55da4:	sub	x25, x25, #0x1
   55da8:	cmn	x25, #0x1
   55dac:	b.ne	55d90 <mpfr_nrandom@@Base+0x88>  // b.any
   55db0:	sub	x23, x23, #0x1
   55db4:	cmn	x23, #0x1
   55db8:	b.ne	55d88 <mpfr_nrandom@@Base+0x80>  // b.any
   55dbc:	add	x28, x19, #0x1
   55dc0:	mov	x26, #0x0                   	// #0
   55dc4:	mov	x0, x27
   55dc8:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   55dcc:	lsl	x28, x28, #1
   55dd0:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
   55dd4:	cmp	x19, x0
   55dd8:	b.hi	55f24 <mpfr_nrandom@@Base+0x21c>  // b.pmore
   55ddc:	mov	w24, #0x1                   	// #1
   55de0:	mov	w23, #0x0                   	// #0
   55de4:	cbnz	x19, 55e5c <mpfr_nrandom@@Base+0x154>
   55de8:	mov	x1, x28
   55dec:	mov	x0, x22
   55df0:	bl	c2d0 <__gmp_urandomm_ui@plt>
   55df4:	cbz	x0, 55e80 <mpfr_nrandom@@Base+0x178>
   55df8:	cmp	x0, #0x1
   55dfc:	mov	x0, x20
   55e00:	cset	w25, ne  // ne = any
   55e04:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   55e08:	cmp	w24, #0x0
   55e0c:	mov	x2, x22
   55e10:	csel	x1, x27, x21, ne  // ne = any
   55e14:	mov	x0, x20
   55e18:	bl	ca30 <mpfr_random_deviate_less@plt>
   55e1c:	cbz	w0, 55e80 <mpfr_nrandom@@Base+0x178>
   55e20:	cbnz	x19, 55ef0 <mpfr_nrandom@@Base+0x1e8>
   55e24:	cbnz	w25, 55e44 <mpfr_nrandom@@Base+0x13c>
   55e28:	mov	x0, x21
   55e2c:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   55e30:	mov	x2, x22
   55e34:	mov	x1, x27
   55e38:	mov	x0, x21
   55e3c:	bl	ca30 <mpfr_random_deviate_less@plt>
   55e40:	cbz	w0, 55e80 <mpfr_nrandom@@Base+0x178>
   55e44:	add	w23, w23, #0x1
   55e48:	mov	x1, x20
   55e4c:	mov	x0, x21
   55e50:	mov	w24, #0x0                   	// #0
   55e54:	bl	c590 <mpfr_random_deviate_swap@plt>
   55e58:	cbz	x19, 55de8 <mpfr_nrandom@@Base+0xe0>
   55e5c:	mov	x0, x20
   55e60:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   55e64:	cmp	w24, #0x0
   55e68:	mov	x2, x22
   55e6c:	csel	x1, x27, x21, ne  // ne = any
   55e70:	mov	x0, x20
   55e74:	mov	w25, #0x0                   	// #0
   55e78:	bl	ca30 <mpfr_random_deviate_less@plt>
   55e7c:	cbnz	w0, 55e20 <mpfr_nrandom@@Base+0x118>
   55e80:	tbnz	w23, #0, 55d58 <mpfr_nrandom@@Base+0x50>
   55e84:	add	x26, x26, #0x1
   55e88:	cmp	x26, x19
   55e8c:	b.ls	55dd0 <mpfr_nrandom@@Base+0xc8>  // b.plast
   55e90:	mov	x0, x20
   55e94:	bl	bdf0 <mpfr_random_deviate_clear@plt>
   55e98:	mov	x0, x21
   55e9c:	bl	bdf0 <mpfr_random_deviate_clear@plt>
   55ea0:	mov	x0, x22
   55ea4:	mov	x1, #0x1                   	// #1
   55ea8:	bl	cb10 <__gmp_urandomb_ui@plt>
   55eac:	ldr	w5, [sp, #108]
   55eb0:	mov	x4, x22
   55eb4:	ldr	x3, [sp, #96]
   55eb8:	mov	x2, x27
   55ebc:	mov	x1, x19
   55ec0:	bl	baa0 <mpfr_random_deviate_value@plt>
   55ec4:	mov	w19, w0
   55ec8:	mov	x0, x27
   55ecc:	bl	bdf0 <mpfr_random_deviate_clear@plt>
   55ed0:	mov	w0, w19
   55ed4:	ldp	x19, x20, [sp, #16]
   55ed8:	ldp	x21, x22, [sp, #32]
   55edc:	ldp	x23, x24, [sp, #48]
   55ee0:	ldp	x25, x26, [sp, #64]
   55ee4:	ldp	x27, x28, [sp, #80]
   55ee8:	ldp	x29, x30, [sp], #208
   55eec:	ret
   55ef0:	mov	x1, x28
   55ef4:	mov	x0, x22
   55ef8:	bl	c2d0 <__gmp_urandomm_ui@plt>
   55efc:	cbz	x0, 55e80 <mpfr_nrandom@@Base+0x178>
   55f00:	cmp	x0, #0x1
   55f04:	cset	w25, ne  // ne = any
   55f08:	b	55e24 <mpfr_nrandom@@Base+0x11c>
   55f0c:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   55f10:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   55f14:	add	x2, x2, #0x678
   55f18:	add	x0, x0, #0x688
   55f1c:	mov	w1, #0x5b                  	// #91
   55f20:	bl	cb40 <mpfr_assert_fail@plt>
   55f24:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   55f28:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   55f2c:	add	x2, x2, #0x698
   55f30:	add	x0, x0, #0x688
   55f34:	mov	w1, #0x8b                  	// #139
   55f38:	bl	cb40 <mpfr_assert_fail@plt>
   55f3c:	nop
   55f40:	stp	x29, x30, [sp, #-64]!
   55f44:	cmn	x1, #0x21
   55f48:	mov	x29, sp
   55f4c:	stp	x19, x20, [sp, #16]
   55f50:	stp	x21, x22, [sp, #32]
   55f54:	b.hi	560c8 <mpfr_nrandom@@Base+0x3c0>  // b.pmore
   55f58:	mov	x22, x2
   55f5c:	mov	x20, x1
   55f60:	ldr	x2, [x0]
   55f64:	mov	x19, x0
   55f68:	cmp	x2, x1
   55f6c:	b.cs	55fb4 <mpfr_nrandom@@Base+0x2ac>  // b.hs, b.nlast
   55f70:	mov	x21, x3
   55f74:	cbz	x2, 55fc4 <mpfr_nrandom@@Base+0x2bc>
   55f78:	cbz	x3, 56038 <mpfr_nrandom@@Base+0x330>
   55f7c:	add	x20, x20, #0x1f
   55f80:	cmp	x2, #0x20
   55f84:	and	x20, x20, #0xffffffffffffffe0
   55f88:	mov	x0, x21
   55f8c:	sub	x20, x20, x2
   55f90:	b.eq	55ff0 <mpfr_nrandom@@Base+0x2e8>  // b.none
   55f94:	mov	x2, x20
   55f98:	mov	x1, x22
   55f9c:	bl	cd00 <__gmpz_urandomb@plt>
   55fa0:	ldr	x2, [x19]
   55fa4:	cmp	x2, #0x20
   55fa8:	b.hi	5600c <mpfr_nrandom@@Base+0x304>  // b.pmore
   55fac:	add	x2, x2, x20
   55fb0:	str	x2, [x19]
   55fb4:	ldp	x19, x20, [sp, #16]
   55fb8:	ldp	x21, x22, [sp, #32]
   55fbc:	ldp	x29, x30, [sp], #64
   55fc0:	ret
   55fc4:	mov	x1, #0x20                  	// #32
   55fc8:	mov	x0, x22
   55fcc:	bl	cb10 <__gmp_urandomb_ui@plt>
   55fd0:	mov	x1, #0x20                  	// #32
   55fd4:	stp	x1, x0, [x19]
   55fd8:	cmp	x20, x1
   55fdc:	b.ls	55fb4 <mpfr_nrandom@@Base+0x2ac>  // b.plast
   55fe0:	cbz	x21, 56038 <mpfr_nrandom@@Base+0x330>
   55fe4:	add	x20, x20, #0x1f
   55fe8:	and	x2, x20, #0xffffffffffffffe0
   55fec:	sub	x20, x2, #0x20
   55ff0:	mov	x2, x20
   55ff4:	add	x0, x19, #0x10
   55ff8:	mov	x1, x22
   55ffc:	bl	cd00 <__gmpz_urandomb@plt>
   56000:	ldr	x2, [x19]
   56004:	cmp	x2, #0x20
   56008:	b.ls	55fac <mpfr_nrandom@@Base+0x2a4>  // b.plast
   5600c:	add	x22, x19, #0x10
   56010:	mov	x2, x20
   56014:	mov	x1, x22
   56018:	mov	x0, x22
   5601c:	bl	c200 <__gmpz_mul_2exp@plt>
   56020:	mov	x2, x21
   56024:	mov	x1, x22
   56028:	mov	x0, x22
   5602c:	bl	c9c0 <__gmpz_add@plt>
   56030:	ldr	x2, [x19]
   56034:	b	55fac <mpfr_nrandom@@Base+0x2a4>
   56038:	str	x23, [sp, #48]
   5603c:	add	x23, x19, #0x10
   56040:	b	56078 <mpfr_nrandom@@Base+0x370>
   56044:	mov	x1, x23
   56048:	mov	x0, x23
   5604c:	mov	x2, #0x20                  	// #32
   56050:	bl	c200 <__gmpz_mul_2exp@plt>
   56054:	mov	x0, x23
   56058:	mov	x2, x21
   5605c:	mov	x1, x23
   56060:	bl	c360 <__gmpz_add_ui@plt>
   56064:	ldr	x0, [x19]
   56068:	add	x0, x0, #0x20
   5606c:	str	x0, [x19]
   56070:	cmp	x20, x0
   56074:	b.ls	560b4 <mpfr_nrandom@@Base+0x3ac>  // b.plast
   56078:	mov	x1, #0x20                  	// #32
   5607c:	mov	x0, x22
   56080:	bl	cb10 <__gmp_urandomb_ui@plt>
   56084:	mov	x21, x0
   56088:	ldr	x1, [x19]
   5608c:	cmp	x1, #0x20
   56090:	b.ne	56044 <mpfr_nrandom@@Base+0x33c>  // b.any
   56094:	mov	x1, x0
   56098:	mov	x0, x23
   5609c:	bl	bcb0 <__gmpz_set_ui@plt>
   560a0:	ldr	x0, [x19]
   560a4:	add	x0, x0, #0x20
   560a8:	str	x0, [x19]
   560ac:	cmp	x20, x0
   560b0:	b.hi	56078 <mpfr_nrandom@@Base+0x370>  // b.pmore
   560b4:	ldp	x19, x20, [sp, #16]
   560b8:	ldp	x21, x22, [sp, #32]
   560bc:	ldr	x23, [sp, #48]
   560c0:	ldp	x29, x30, [sp], #64
   560c4:	ret
   560c8:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   560cc:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   560d0:	add	x2, x2, #0x6b8
   560d4:	add	x0, x0, #0x6e8
   560d8:	mov	w1, #0x82                  	// #130
   560dc:	str	x23, [sp, #48]
   560e0:	bl	cb40 <mpfr_assert_fail@plt>
   560e4:	nop

00000000000560e8 <mpfr_random_deviate_init@@Base>:
   560e8:	stp	x29, x30, [sp, #-32]!
   560ec:	mov	x29, sp
   560f0:	str	x19, [sp, #16]
   560f4:	mov	x19, x0
   560f8:	add	x0, x0, #0x10
   560fc:	bl	bf90 <mpfr_mpz_init@plt>
   56100:	str	xzr, [x19]
   56104:	ldr	x19, [sp, #16]
   56108:	ldp	x29, x30, [sp], #32
   5610c:	ret

0000000000056110 <mpfr_random_deviate_reset@@Base>:
   56110:	str	xzr, [x0]
   56114:	ret

0000000000056118 <mpfr_random_deviate_clear@@Base>:
   56118:	add	x0, x0, #0x10
   5611c:	b	c170 <mpfr_mpz_clear@plt>

0000000000056120 <mpfr_random_deviate_swap@@Base>:
   56120:	mov	x2, x1
   56124:	mov	x3, x0
   56128:	add	x1, x1, #0x10
   5612c:	add	x0, x0, #0x10
   56130:	ldr	x5, [x2]
   56134:	ldr	x4, [x3]
   56138:	str	x5, [x3]
   5613c:	str	x4, [x2]
   56140:	ldr	x5, [x2, #8]
   56144:	ldr	x4, [x3, #8]
   56148:	str	x5, [x3, #8]
   5614c:	str	x4, [x2, #8]
   56150:	b	c0e0 <__gmpz_swap@plt>
   56154:	nop

0000000000056158 <mpfr_random_deviate_tstbit@@Base>:
   56158:	cbnz	x1, 56164 <mpfr_random_deviate_tstbit@@Base+0xc>
   5615c:	mov	w0, #0x0                   	// #0
   56160:	ret
   56164:	stp	x29, x30, [sp, #-32]!
   56168:	mov	x3, #0x0                   	// #0
   5616c:	mov	x29, sp
   56170:	stp	x19, x20, [sp, #16]
   56174:	mov	x19, x1
   56178:	mov	x20, x0
   5617c:	bl	55f40 <mpfr_nrandom@@Base+0x238>
   56180:	cmp	x19, #0x20
   56184:	b.ls	561a0 <mpfr_random_deviate_tstbit@@Base+0x48>  // b.plast
   56188:	mov	x0, x20
   5618c:	ldr	x1, [x0], #16
   56190:	sub	x1, x1, x19
   56194:	ldp	x19, x20, [sp, #16]
   56198:	ldp	x29, x30, [sp], #32
   5619c:	b	bfe0 <__gmpz_tstbit@plt>
   561a0:	ldr	x0, [x20, #8]
   561a4:	mov	w1, #0x20                  	// #32
   561a8:	sub	w19, w1, w19
   561ac:	lsr	x0, x0, x19
   561b0:	and	w0, w0, #0x1
   561b4:	ldp	x19, x20, [sp, #16]
   561b8:	ldp	x29, x30, [sp], #32
   561bc:	ret

00000000000561c0 <mpfr_random_deviate_less@@Base>:
   561c0:	cmp	x0, x1
   561c4:	b.eq	56278 <mpfr_random_deviate_less@@Base+0xb8>  // b.none
   561c8:	stp	x29, x30, [sp, #-64]!
   561cc:	mov	x3, #0x0                   	// #0
   561d0:	mov	x29, sp
   561d4:	stp	x21, x22, [sp, #32]
   561d8:	mov	x22, x1
   561dc:	mov	x21, x2
   561e0:	str	x23, [sp, #48]
   561e4:	mov	x23, x0
   561e8:	mov	x1, #0x20                  	// #32
   561ec:	bl	55f40 <mpfr_nrandom@@Base+0x238>
   561f0:	mov	x0, x22
   561f4:	mov	x1, #0x20                  	// #32
   561f8:	mov	x2, x21
   561fc:	mov	x3, #0x0                   	// #0
   56200:	bl	55f40 <mpfr_nrandom@@Base+0x238>
   56204:	ldr	x0, [x22, #8]
   56208:	ldr	x1, [x23, #8]
   5620c:	cmp	x1, x0
   56210:	b.eq	56228 <mpfr_random_deviate_less@@Base+0x68>  // b.none
   56214:	cset	w0, cc  // cc = lo, ul, last
   56218:	ldp	x21, x22, [sp, #32]
   5621c:	ldr	x23, [sp, #48]
   56220:	ldp	x29, x30, [sp], #64
   56224:	ret
   56228:	stp	x19, x20, [sp, #16]
   5622c:	mov	x19, #0x21                  	// #33
   56230:	mov	x1, x19
   56234:	mov	x2, x21
   56238:	mov	x0, x23
   5623c:	bl	c310 <mpfr_random_deviate_tstbit@plt>
   56240:	mov	w20, w0
   56244:	mov	x1, x19
   56248:	mov	x2, x21
   5624c:	mov	x0, x22
   56250:	add	x19, x19, #0x1
   56254:	bl	c310 <mpfr_random_deviate_tstbit@plt>
   56258:	cmp	w20, w0
   5625c:	b.eq	56230 <mpfr_random_deviate_less@@Base+0x70>  // b.none
   56260:	cset	w0, lt  // lt = tstop
   56264:	ldp	x19, x20, [sp, #16]
   56268:	ldp	x21, x22, [sp, #32]
   5626c:	ldr	x23, [sp, #48]
   56270:	ldp	x29, x30, [sp], #64
   56274:	ret
   56278:	mov	w0, #0x0                   	// #0
   5627c:	ret

0000000000056280 <mpfr_random_deviate_value@@Base>:
   56280:	stp	x29, x30, [sp, #-112]!
   56284:	mov	x29, sp
   56288:	stp	x19, x20, [sp, #16]
   5628c:	mov	x19, x2
   56290:	stp	x21, x22, [sp, #32]
   56294:	mov	x22, x3
   56298:	stp	x23, x24, [sp, #48]
   5629c:	mov	x23, x4
   562a0:	stp	x25, x26, [sp, #64]
   562a4:	mov	w26, w0
   562a8:	ldr	x24, [x3]
   562ac:	str	x27, [sp, #80]
   562b0:	mov	w27, w5
   562b4:	cbz	x1, 56370 <mpfr_random_deviate_value@@Base+0xf0>
   562b8:	mov	x21, x1
   562bc:	clz	x1, x1
   562c0:	mov	w25, #0x3f                  	// #63
   562c4:	sub	w25, w25, w1
   562c8:	add	x20, sp, #0x60
   562cc:	add	x24, x24, #0x1
   562d0:	mov	x0, x20
   562d4:	sxtw	x25, w25
   562d8:	bl	bf90 <mpfr_mpz_init@plt>
   562dc:	cmp	x24, x25
   562e0:	b.ls	562f8 <mpfr_random_deviate_value@@Base+0x78>  // b.plast
   562e4:	mov	x2, x23
   562e8:	sub	x1, x24, x25
   562ec:	mov	x3, x20
   562f0:	mov	x0, x19
   562f4:	bl	55f40 <mpfr_nrandom@@Base+0x238>
   562f8:	mov	x0, x20
   562fc:	mov	x1, x21
   56300:	bl	bcb0 <__gmpz_set_ui@plt>
   56304:	ldr	x0, [x19]
   56308:	cbnz	x0, 56400 <mpfr_random_deviate_value@@Base+0x180>
   5630c:	mov	x0, x20
   56310:	mov	x1, #0x0                   	// #0
   56314:	bl	bf10 <__gmpz_setbit@plt>
   56318:	cbz	w26, 56328 <mpfr_random_deviate_value@@Base+0xa8>
   5631c:	ldr	w0, [sp, #100]
   56320:	neg	w0, w0
   56324:	str	w0, [sp, #100]
   56328:	ldr	x2, [x19]
   5632c:	tbnz	x2, #63, 5649c <mpfr_random_deviate_value@@Base+0x21c>
   56330:	mov	w3, w27
   56334:	mov	x1, x20
   56338:	neg	x2, x2
   5633c:	mov	x0, x22
   56340:	bl	c4f0 <mpfr_set_z_2exp@plt>
   56344:	mov	w19, w0
   56348:	mov	x0, x20
   5634c:	bl	c170 <mpfr_mpz_clear@plt>
   56350:	mov	w0, w19
   56354:	ldp	x19, x20, [sp, #16]
   56358:	ldp	x21, x22, [sp, #32]
   5635c:	ldp	x23, x24, [sp, #48]
   56360:	ldp	x25, x26, [sp, #64]
   56364:	ldr	x27, [sp, #80]
   56368:	ldp	x29, x30, [sp], #112
   5636c:	ret
   56370:	mov	x0, x19
   56374:	mov	x2, x4
   56378:	mov	x3, #0x0                   	// #0
   5637c:	mov	x1, #0x20                  	// #32
   56380:	bl	55f40 <mpfr_nrandom@@Base+0x238>
   56384:	ldr	x0, [x19, #8]
   56388:	cbz	x0, 56424 <mpfr_random_deviate_value@@Base+0x1a4>
   5638c:	clz	x21, x0
   56390:	add	x20, sp, #0x60
   56394:	sub	w21, w21, #0x1f
   56398:	mov	x0, x20
   5639c:	sxtw	x21, w21
   563a0:	bl	bf90 <mpfr_mpz_init@plt>
   563a4:	add	x21, x24, x21
   563a8:	cmn	x21, #0x1
   563ac:	b.eq	563c4 <mpfr_random_deviate_value@@Base+0x144>  // b.none
   563b0:	mov	x2, x23
   563b4:	add	x1, x21, #0x1
   563b8:	mov	x3, x20
   563bc:	mov	x0, x19
   563c0:	bl	55f40 <mpfr_nrandom@@Base+0x238>
   563c4:	ldr	x1, [x19, #8]
   563c8:	mov	x0, x20
   563cc:	bl	bcb0 <__gmpz_set_ui@plt>
   563d0:	ldr	x2, [x19]
   563d4:	cmp	x2, #0x20
   563d8:	b.ls	5630c <mpfr_random_deviate_value@@Base+0x8c>  // b.plast
   563dc:	mov	x1, x20
   563e0:	mov	x0, x20
   563e4:	sub	x2, x2, #0x20
   563e8:	bl	c200 <__gmpz_mul_2exp@plt>
   563ec:	add	x2, x19, #0x10
   563f0:	mov	x1, x20
   563f4:	mov	x0, x20
   563f8:	bl	c9c0 <__gmpz_add@plt>
   563fc:	b	5630c <mpfr_random_deviate_value@@Base+0x8c>
   56400:	mov	x1, x20
   56404:	mov	x0, x20
   56408:	mov	x2, #0x20                  	// #32
   5640c:	bl	c200 <__gmpz_mul_2exp@plt>
   56410:	ldr	x2, [x19, #8]
   56414:	mov	x1, x20
   56418:	mov	x0, x20
   5641c:	bl	c360 <__gmpz_add_ui@plt>
   56420:	b	563d0 <mpfr_random_deviate_value@@Base+0x150>
   56424:	mov	x0, x19
   56428:	mov	x2, x23
   5642c:	mov	x3, #0x0                   	// #0
   56430:	mov	x1, #0x40                  	// #64
   56434:	bl	55f40 <mpfr_nrandom@@Base+0x238>
   56438:	ldr	w0, [x19, #20]
   5643c:	cbnz	w0, 56460 <mpfr_random_deviate_value@@Base+0x1e0>
   56440:	ldr	x1, [x19]
   56444:	mov	x0, x19
   56448:	mov	x2, x23
   5644c:	mov	x3, #0x0                   	// #0
   56450:	add	x1, x1, #0x1
   56454:	bl	55f40 <mpfr_nrandom@@Base+0x238>
   56458:	ldr	w0, [x19, #20]
   5645c:	cbz	w0, 56440 <mpfr_random_deviate_value@@Base+0x1c0>
   56460:	mov	w1, #0x2                   	// #2
   56464:	add	x0, x19, #0x10
   56468:	bl	cb60 <__gmpz_sizeinbase@plt>
   5646c:	ldr	x21, [x19]
   56470:	mov	x1, #0x100                 	// #256
   56474:	movk	x1, #0x8000, lsl #48
   56478:	sub	x21, x21, x0
   5647c:	add	x0, x21, #0x2
   56480:	add	x21, x21, #0x1
   56484:	cmp	x0, x1
   56488:	b.hi	564bc <mpfr_random_deviate_value@@Base+0x23c>  // b.pmore
   5648c:	add	x20, sp, #0x60
   56490:	mov	x0, x20
   56494:	bl	bf90 <mpfr_mpz_init@plt>
   56498:	b	563a4 <mpfr_random_deviate_value@@Base+0x124>
   5649c:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   564a0:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   564a4:	add	x2, x2, #0x758
   564a8:	add	x0, x0, #0x6e8
   564ac:	mov	w1, #0x177                 	// #375
   564b0:	bl	cb40 <mpfr_assert_fail@plt>
   564b4:	ldr	x2, [x19]
   564b8:	b	56330 <mpfr_random_deviate_value@@Base+0xb0>
   564bc:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   564c0:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   564c4:	add	x2, x2, #0x700
   564c8:	add	x0, x0, #0x6e8
   564cc:	mov	w1, #0xf1                  	// #241
   564d0:	bl	cb40 <mpfr_assert_fail@plt>
   564d4:	nop

00000000000564d8 <mpfr_erandom@@Base>:
   564d8:	stp	x29, x30, [sp, #-176]!
   564dc:	mov	x29, sp
   564e0:	stp	x23, x24, [sp, #48]
   564e4:	add	x23, sp, #0x50
   564e8:	mov	x24, x0
   564ec:	mov	x0, x23
   564f0:	stp	x19, x20, [sp, #16]
   564f4:	mov	x20, x1
   564f8:	add	x19, sp, #0x70
   564fc:	stp	x21, x22, [sp, #32]
   56500:	add	x21, sp, #0x90
   56504:	str	x25, [sp, #64]
   56508:	mov	w25, w2
   5650c:	bl	c150 <mpfr_random_deviate_init@plt>
   56510:	mov	x22, #0x0                   	// #0
   56514:	mov	x0, x19
   56518:	bl	c150 <mpfr_random_deviate_init@plt>
   5651c:	mov	x0, x21
   56520:	bl	c150 <mpfr_random_deviate_init@plt>
   56524:	mov	x0, x19
   56528:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   5652c:	mov	x2, x20
   56530:	mov	x1, x23
   56534:	mov	x0, x19
   56538:	bl	ca30 <mpfr_random_deviate_less@plt>
   5653c:	cbnz	w0, 56560 <mpfr_erandom@@Base+0x88>
   56540:	b	565ac <mpfr_erandom@@Base+0xd4>
   56544:	mov	x0, x19
   56548:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   5654c:	mov	x2, x20
   56550:	mov	x1, x21
   56554:	mov	x0, x19
   56558:	bl	ca30 <mpfr_random_deviate_less@plt>
   5655c:	cbz	w0, 565ac <mpfr_erandom@@Base+0xd4>
   56560:	mov	x0, x21
   56564:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   56568:	mov	x2, x20
   5656c:	mov	x1, x19
   56570:	mov	x0, x21
   56574:	bl	ca30 <mpfr_random_deviate_less@plt>
   56578:	cbnz	w0, 56544 <mpfr_erandom@@Base+0x6c>
   5657c:	cmn	x22, #0x1
   56580:	b.eq	56600 <mpfr_erandom@@Base+0x128>  // b.none
   56584:	mov	x0, x23
   56588:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   5658c:	mov	x0, x19
   56590:	bl	c7e0 <mpfr_random_deviate_reset@plt>
   56594:	add	x22, x22, #0x1
   56598:	mov	x2, x20
   5659c:	mov	x1, x23
   565a0:	mov	x0, x19
   565a4:	bl	ca30 <mpfr_random_deviate_less@plt>
   565a8:	cbnz	w0, 56560 <mpfr_erandom@@Base+0x88>
   565ac:	mov	x0, x21
   565b0:	bl	bdf0 <mpfr_random_deviate_clear@plt>
   565b4:	mov	x0, x19
   565b8:	bl	bdf0 <mpfr_random_deviate_clear@plt>
   565bc:	mov	w5, w25
   565c0:	mov	x4, x20
   565c4:	mov	x3, x24
   565c8:	mov	x2, x23
   565cc:	mov	x1, x22
   565d0:	mov	w0, #0x0                   	// #0
   565d4:	bl	baa0 <mpfr_random_deviate_value@plt>
   565d8:	mov	w19, w0
   565dc:	mov	x0, x23
   565e0:	bl	bdf0 <mpfr_random_deviate_clear@plt>
   565e4:	mov	w0, w19
   565e8:	ldp	x19, x20, [sp, #16]
   565ec:	ldp	x21, x22, [sp, #32]
   565f0:	ldp	x23, x24, [sp, #48]
   565f4:	ldr	x25, [sp, #64]
   565f8:	ldp	x29, x30, [sp], #176
   565fc:	ret
   56600:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   56604:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   56608:	add	x2, x2, #0x778
   5660c:	add	x0, x0, #0x788
   56610:	mov	w1, #0x61                  	// #97
   56614:	bl	cb40 <mpfr_assert_fail@plt>
   56618:	stp	x29, x30, [sp, #-272]!
   5661c:	mov	x29, sp
   56620:	stp	x21, x22, [sp, #32]
   56624:	mov	x21, x1
   56628:	mov	x22, x2
   5662c:	ldr	x1, [x2]
   56630:	stp	x19, x20, [sp, #16]
   56634:	ldr	x20, [x21]
   56638:	sub	x1, x1, #0x1
   5663c:	ldr	x7, [x4]
   56640:	sub	x20, x20, #0x1
   56644:	ldr	x19, [x3]
   56648:	asr	x1, x1, #6
   5664c:	sub	x7, x7, #0x1
   56650:	add	x20, x1, x20, asr #6
   56654:	sub	x19, x19, #0x1
   56658:	add	x20, x20, #0x2
   5665c:	asr	x7, x7, #6
   56660:	stp	x23, x24, [sp, #48]
   56664:	add	x19, x7, x19, asr #6
   56668:	stp	x25, x26, [sp, #64]
   5666c:	mov	x24, x3
   56670:	lsl	x3, x20, #3
   56674:	stp	x27, x28, [sp, #80]
   56678:	mov	x25, x4
   5667c:	mov	w27, w5
   56680:	str	w6, [x29, #124]
   56684:	mov	x26, x0
   56688:	str	xzr, [x29, #136]
   5668c:	add	x19, x19, #0x2
   56690:	cmp	x3, #0x4, lsl #12
   56694:	ldr	x5, [x0]
   56698:	b.hi	5686c <mpfr_erandom@@Base+0x394>  // b.pmore
   5669c:	add	x0, x3, #0xf
   566a0:	lsl	x2, x20, #6
   566a4:	and	x0, x0, #0xfffffffffffffff0
   566a8:	mov	w1, #0x1                   	// #1
   566ac:	sub	sp, sp, x0
   566b0:	str	x2, [x29, #176]
   566b4:	mov	x0, sp
   566b8:	str	w1, [x29, #184]
   566bc:	str	x0, [x29, #200]
   566c0:	lsl	x7, x19, #3
   566c4:	cmp	x7, #0x4, lsl #12
   566c8:	b.hi	568a0 <mpfr_erandom@@Base+0x3c8>  // b.pmore
   566cc:	add	x7, x7, #0xf
   566d0:	and	x7, x7, #0xfffffffffffffff0
   566d4:	sub	sp, sp, x7
   566d8:	mov	x6, sp
   566dc:	mov	w7, #0x1                   	// #1
   566e0:	add	x23, x29, #0xb0
   566e4:	mov	x0, x23
   566e8:	mov	x2, x22
   566ec:	mov	x1, x21
   566f0:	lsl	x19, x19, #6
   566f4:	add	x28, x29, #0xe0
   566f8:	stp	x5, x3, [x29, #104]
   566fc:	str	x19, [x29, #224]
   56700:	str	w7, [x29, #232]
   56704:	str	x6, [x29, #248]
   56708:	bl	bf80 <mpfr_ubf_mul_exact@plt>
   5670c:	mov	x0, x28
   56710:	mov	x2, x25
   56714:	mov	x1, x24
   56718:	bl	bf80 <mpfr_ubf_mul_exact@plt>
   5671c:	ldr	w0, [x29, #124]
   56720:	ldp	x5, x3, [x29, #104]
   56724:	cbz	w0, 56734 <mpfr_erandom@@Base+0x25c>
   56728:	ldr	w0, [x29, #232]
   5672c:	neg	w0, w0
   56730:	str	w0, [x29, #232]
   56734:	ldr	x0, [x21]
   56738:	cmp	x0, x5
   5673c:	b.ne	5674c <mpfr_erandom@@Base+0x274>  // b.any
   56740:	ldr	x0, [x22]
   56744:	cmp	x0, x5
   56748:	b.eq	567dc <mpfr_erandom@@Base+0x304>  // b.none
   5674c:	mov	w3, w27
   56750:	mov	x0, x26
   56754:	mov	x2, x28
   56758:	mov	x1, x23
   5675c:	bl	c1a0 <mpfr_add@plt>
   56760:	mov	w19, w0
   56764:	ldr	x1, [x29, #192]
   56768:	mov	x0, #0x4                   	// #4
   5676c:	movk	x0, #0x8000, lsl #48
   56770:	cmp	x1, x0
   56774:	b.eq	567d0 <mpfr_erandom@@Base+0x2f8>  // b.none
   56778:	ldr	x1, [x29, #240]
   5677c:	mov	x0, #0x4                   	// #4
   56780:	movk	x0, #0x8000, lsl #48
   56784:	cmp	x1, x0
   56788:	b.eq	567b8 <mpfr_erandom@@Base+0x2e0>  // b.none
   5678c:	ldr	x0, [x29, #136]
   56790:	cbnz	x0, 567c8 <mpfr_erandom@@Base+0x2f0>
   56794:	mov	sp, x29
   56798:	mov	w0, w19
   5679c:	ldp	x19, x20, [sp, #16]
   567a0:	ldp	x21, x22, [sp, #32]
   567a4:	ldp	x23, x24, [sp, #48]
   567a8:	ldp	x25, x26, [sp, #64]
   567ac:	ldp	x27, x28, [sp, #80]
   567b0:	ldp	x29, x30, [sp], #272
   567b4:	ret
   567b8:	add	x0, x28, #0x20
   567bc:	bl	c170 <mpfr_mpz_clear@plt>
   567c0:	ldr	x0, [x29, #136]
   567c4:	cbz	x0, 56794 <mpfr_erandom@@Base+0x2bc>
   567c8:	bl	c410 <mpfr_tmp_free@plt>
   567cc:	b	56794 <mpfr_erandom@@Base+0x2bc>
   567d0:	add	x0, x23, #0x20
   567d4:	bl	c170 <mpfr_mpz_clear@plt>
   567d8:	b	56778 <mpfr_erandom@@Base+0x2a0>
   567dc:	ldr	x0, [x24]
   567e0:	cmp	x0, x5
   567e4:	b.ne	5674c <mpfr_erandom@@Base+0x274>  // b.any
   567e8:	ldr	x0, [x25]
   567ec:	cmp	x0, x5
   567f0:	b.ne	5674c <mpfr_erandom@@Base+0x274>  // b.any
   567f4:	lsl	x19, x5, #1
   567f8:	sub	x0, x19, #0x1
   567fc:	asr	x0, x0, #6
   56800:	add	x0, x0, #0x1
   56804:	cmp	x0, x20
   56808:	b.ne	5674c <mpfr_erandom@@Base+0x274>  // b.any
   5680c:	cmp	x3, #0x4, lsl #12
   56810:	b.hi	568bc <mpfr_erandom@@Base+0x3e4>  // b.pmore
   56814:	add	x0, x3, #0xf
   56818:	and	x0, x0, #0xfffffffffffffff0
   5681c:	sub	sp, sp, x0
   56820:	mov	x5, sp
   56824:	mov	w6, #0x1                   	// #1
   56828:	add	x20, x29, #0x90
   5682c:	mov	w3, w27
   56830:	mov	x2, x28
   56834:	mov	x1, x23
   56838:	mov	x0, x20
   5683c:	str	x19, [x29, #144]
   56840:	str	w6, [x29, #152]
   56844:	stp	x5, x19, [x29, #168]
   56848:	str	x19, [x29, #224]
   5684c:	bl	c1a0 <mpfr_add@plt>
   56850:	mov	w2, w27
   56854:	mov	w3, w0
   56858:	mov	x1, x20
   5685c:	mov	x0, x26
   56860:	bl	cae0 <mpfr_set_1_2@plt>
   56864:	mov	w19, w0
   56868:	b	56764 <mpfr_erandom@@Base+0x28c>
   5686c:	mov	x1, x3
   56870:	add	x0, x29, #0x88
   56874:	stp	x5, x3, [x29, #104]
   56878:	bl	bdc0 <mpfr_tmp_allocate@plt>
   5687c:	lsl	x2, x20, #6
   56880:	mov	w1, #0x1                   	// #1
   56884:	str	x2, [x29, #176]
   56888:	str	w1, [x29, #184]
   5688c:	lsl	x7, x19, #3
   56890:	str	x0, [x29, #200]
   56894:	cmp	x7, #0x4, lsl #12
   56898:	ldp	x5, x3, [x29, #104]
   5689c:	b.ls	566cc <mpfr_erandom@@Base+0x1f4>  // b.plast
   568a0:	mov	x1, x7
   568a4:	add	x0, x29, #0x88
   568a8:	stp	x5, x3, [x29, #104]
   568ac:	bl	bdc0 <mpfr_tmp_allocate@plt>
   568b0:	mov	x6, x0
   568b4:	ldp	x5, x3, [x29, #104]
   568b8:	b	566dc <mpfr_erandom@@Base+0x204>
   568bc:	mov	x1, x3
   568c0:	add	x0, x29, #0x88
   568c4:	bl	bdc0 <mpfr_tmp_allocate@plt>
   568c8:	mov	x5, x0
   568cc:	b	56824 <mpfr_erandom@@Base+0x34c>

00000000000568d0 <mpfr_fmma@@Base>:
   568d0:	mov	w6, #0x0                   	// #0
   568d4:	b	56618 <mpfr_erandom@@Base+0x140>

00000000000568d8 <mpfr_fmms@@Base>:
   568d8:	mov	w6, #0x1                   	// #1
   568dc:	b	56618 <mpfr_erandom@@Base+0x140>
   568e0:	sub	sp, sp, #0x80
   568e4:	stp	x29, x30, [sp, #16]
   568e8:	add	x29, sp, #0x10
   568ec:	stp	x19, x20, [sp, #32]
   568f0:	mov	x19, x4
   568f4:	mov	x20, x3
   568f8:	stp	x21, x22, [sp, #48]
   568fc:	mov	x22, x0
   56900:	mov	x21, x2
   56904:	stp	x23, x24, [sp, #64]
   56908:	mov	x23, x1
   5690c:	stp	x25, x26, [sp, #80]
   56910:	mov	x26, x6
   56914:	ldr	w25, [sp, #128]
   56918:	stp	x27, x28, [sp, #96]
   5691c:	mov	x28, x5
   56920:	add	x5, x4, #0x1
   56924:	cmp	x28, x5
   56928:	mov	x27, x7
   5692c:	b.eq	56a30 <mpfr_fmms@@Base+0x158>  // b.none
   56930:	lsr	x8, x4, #1
   56934:	and	x19, x4, x28
   56938:	add	x8, x8, x28, lsr #1
   5693c:	mov	w5, #0x1                   	// #1
   56940:	and	x19, x19, #0x1
   56944:	str	w5, [sp]
   56948:	add	x19, x8, x19
   5694c:	add	x24, x3, #0x10
   56950:	mov	x5, x19
   56954:	bl	568e0 <mpfr_fmms@@Base+0x8>
   56958:	mov	x4, x19
   5695c:	mov	x6, x26
   56960:	mov	x7, x27
   56964:	mov	x5, x28
   56968:	mov	x3, x24
   5696c:	str	w25, [sp]
   56970:	add	x19, x21, #0x10
   56974:	add	x26, x22, #0x10
   56978:	mov	x0, x26
   5697c:	mov	x2, x19
   56980:	add	x1, sp, #0x78
   56984:	bl	568e0 <mpfr_fmms@@Base+0x8>
   56988:	mov	x2, x22
   5698c:	mov	x1, x24
   56990:	mov	x0, x24
   56994:	bl	bff0 <__gmpz_mul@plt>
   56998:	mov	x2, x21
   5699c:	mov	x1, x24
   569a0:	mov	x0, x24
   569a4:	bl	bff0 <__gmpz_mul@plt>
   569a8:	mov	x2, x19
   569ac:	mov	x1, x20
   569b0:	mov	x0, x20
   569b4:	bl	bff0 <__gmpz_mul@plt>
   569b8:	ldr	x2, [sp, #120]
   569bc:	mov	x1, x20
   569c0:	mov	x0, x20
   569c4:	bl	c200 <__gmpz_mul_2exp@plt>
   569c8:	mov	x2, x24
   569cc:	mov	x1, x20
   569d0:	mov	x0, x20
   569d4:	bl	c9c0 <__gmpz_add@plt>
   569d8:	cbnz	w25, 56a1c <mpfr_fmms@@Base+0x144>
   569dc:	ldr	x3, [x23]
   569e0:	mov	x2, x19
   569e4:	ldr	x4, [sp, #120]
   569e8:	mov	x1, x21
   569ec:	mov	x0, x21
   569f0:	add	x3, x3, x4
   569f4:	str	x3, [x23]
   569f8:	bl	bff0 <__gmpz_mul@plt>
   569fc:	ldp	x29, x30, [sp, #16]
   56a00:	ldp	x19, x20, [sp, #32]
   56a04:	ldp	x21, x22, [sp, #48]
   56a08:	ldp	x23, x24, [sp, #64]
   56a0c:	ldp	x25, x26, [sp, #80]
   56a10:	ldp	x27, x28, [sp, #96]
   56a14:	add	sp, sp, #0x80
   56a18:	ret
   56a1c:	mov	x2, x26
   56a20:	mov	x1, x22
   56a24:	mov	x0, x22
   56a28:	bl	bff0 <__gmpz_mul@plt>
   56a2c:	b	569dc <mpfr_fmms@@Base+0x104>
   56a30:	cmp	x4, #0x1
   56a34:	cneg	x1, x6, ne  // ne = any
   56a38:	bl	cb70 <__gmpz_set_si@plt>
   56a3c:	str	x27, [x23]
   56a40:	mov	x1, x19
   56a44:	mov	x0, x21
   56a48:	bl	bcb0 <__gmpz_set_ui@plt>
   56a4c:	mov	x1, x22
   56a50:	mov	x0, x20
   56a54:	bl	bfa0 <__gmpz_set@plt>
   56a58:	ldp	x29, x30, [sp, #16]
   56a5c:	ldp	x19, x20, [sp, #32]
   56a60:	ldp	x21, x22, [sp, #48]
   56a64:	ldp	x23, x24, [sp, #64]
   56a68:	ldp	x25, x26, [sp, #80]
   56a6c:	ldp	x27, x28, [sp, #96]
   56a70:	add	sp, sp, #0x80
   56a74:	ret

0000000000056a78 <mpfr_log_ui@@Base>:
   56a78:	stp	x29, x30, [sp, #-480]!
   56a7c:	cmp	x1, #0x2
   56a80:	mov	x29, sp
   56a84:	stp	x19, x20, [sp, #16]
   56a88:	mov	x19, x1
   56a8c:	stp	x21, x22, [sp, #32]
   56a90:	stp	x23, x24, [sp, #48]
   56a94:	mov	x24, x0
   56a98:	stp	x25, x26, [sp, #64]
   56a9c:	stp	x27, x28, [sp, #80]
   56aa0:	sub	sp, sp, #0x10
   56aa4:	str	w2, [x29, #204]
   56aa8:	b.hi	56b28 <mpfr_log_ui@@Base+0xb0>  // b.pmore
   56aac:	cbz	x1, 56aec <mpfr_log_ui@@Base+0x74>
   56ab0:	cmp	x1, #0x1
   56ab4:	b.ne	56f8c <mpfr_log_ui@@Base+0x514>  // b.any
   56ab8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   56abc:	mov	w20, #0x0                   	// #0
   56ac0:	str	w1, [x24, #8]
   56ac4:	str	x0, [x24, #16]
   56ac8:	mov	sp, x29
   56acc:	mov	w0, w20
   56ad0:	ldp	x19, x20, [sp, #16]
   56ad4:	ldp	x21, x22, [sp, #32]
   56ad8:	ldp	x23, x24, [sp, #48]
   56adc:	ldp	x25, x26, [sp, #64]
   56ae0:	ldp	x27, x28, [sp, #80]
   56ae4:	ldp	x29, x30, [sp], #480
   56ae8:	ret
   56aec:	mrs	x1, tpidr_el0
   56af0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   56af4:	ldr	x2, [x0, #2576]
   56af8:	add	x0, x0, #0xa10
   56afc:	blr	x2
   56b00:	add	x0, x1, x0
   56b04:	mov	w1, #0xffffffff            	// #-1
   56b08:	str	w1, [x24, #8]
   56b0c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   56b10:	mov	w20, #0x0                   	// #0
   56b14:	str	x2, [x24, #16]
   56b18:	ldr	w1, [x0]
   56b1c:	orr	w1, w1, #0x20
   56b20:	str	w1, [x0]
   56b24:	b	56ac8 <mpfr_log_ui@@Base+0x50>
   56b28:	add	x20, x29, #0xe0
   56b2c:	mov	x0, x20
   56b30:	bl	bf90 <mpfr_mpz_init@plt>
   56b34:	mov	x1, x19
   56b38:	mov	x0, x20
   56b3c:	bl	bcb0 <__gmpz_set_ui@plt>
   56b40:	mov	x1, x20
   56b44:	mov	x0, x20
   56b48:	mov	x2, #0x3                   	// #3
   56b4c:	bl	c100 <__gmpz_mul_ui@plt>
   56b50:	mov	w1, #0x2                   	// #2
   56b54:	mov	x0, x20
   56b58:	bl	cb60 <__gmpz_sizeinbase@plt>
   56b5c:	mov	x1, x0
   56b60:	str	x1, [x29, #168]
   56b64:	sub	x1, x1, #0x2
   56b68:	mov	x0, x20
   56b6c:	mov	x20, x1
   56b70:	str	x1, [x29, #192]
   56b74:	bl	c170 <mpfr_mpz_clear@plt>
   56b78:	mov	x0, #0x1                   	// #1
   56b7c:	cmp	x20, #0x40
   56b80:	lsl	x0, x0, x20
   56b84:	sub	x0, x19, x0
   56b88:	ldr	x20, [x24]
   56b8c:	csel	x19, x0, x19, cc  // cc = lo, ul, last
   56b90:	mov	x25, x19
   56b94:	cmp	x20, #0x1
   56b98:	b.eq	570c0 <mpfr_log_ui@@Base+0x648>  // b.none
   56b9c:	b.le	570cc <mpfr_log_ui@@Base+0x654>
   56ba0:	sub	x1, x20, #0x1
   56ba4:	mov	w0, #0x40                  	// #64
   56ba8:	clz	x1, x1
   56bac:	mov	x2, #0x7fffffffffffff00    	// #9223372036854775552
   56bb0:	sub	w0, w0, w1
   56bb4:	add	x0, x20, w0, sxtw
   56bb8:	add	x1, x0, #0xa
   56bbc:	mov	x21, x1
   56bc0:	cmp	x1, x2
   56bc4:	b.ge	57130 <mpfr_log_ui@@Base+0x6b8>  // b.tcont
   56bc8:	add	x20, x0, #0x48
   56bcc:	adds	x0, x0, #0x9
   56bd0:	csel	x20, x20, x0, mi  // mi = first
   56bd4:	asr	x20, x20, #6
   56bd8:	add	x20, x20, #0x1
   56bdc:	lsl	x0, x20, #1
   56be0:	cmp	x0, #0x10
   56be4:	b.gt	56fe4 <mpfr_log_ui@@Base+0x56c>
   56be8:	add	x0, x29, #0x160
   56bec:	stp	xzr, x0, [x29, #336]
   56bf0:	mov	x1, x0
   56bf4:	mrs	x4, tpidr_el0
   56bf8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   56bfc:	ldr	x2, [x0, #2576]
   56c00:	add	x0, x0, #0xa10
   56c04:	blr	x2
   56c08:	str	x4, [x29, #176]
   56c0c:	mov	w2, #0x1                   	// #1
   56c10:	str	w2, [x29, #248]
   56c14:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   56c18:	ldr	w0, [x4, x0]
   56c1c:	add	x20, x1, x20, lsl #3
   56c20:	str	w0, [x29, #200]
   56c24:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   56c28:	str	w2, [x29, #280]
   56c2c:	str	x21, [x29, #240]
   56c30:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   56c34:	ldr	x6, [x0, #2512]
   56c38:	add	x0, x0, #0x9d0
   56c3c:	blr	x6
   56c40:	stp	x1, x21, [x29, #264]
   56c44:	mov	x6, x4
   56c48:	add	x4, x4, x0
   56c4c:	str	x20, [x29, #296]
   56c50:	ldr	x0, [x6, x0]
   56c54:	str	x0, [x29, #120]
   56c58:	str	x5, [x4]
   56c5c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   56c60:	ldr	x2, [x0, #2544]
   56c64:	add	x0, x0, #0x9f0
   56c68:	blr	x2
   56c6c:	ldr	x2, [x6, x0]
   56c70:	str	x3, [x6, x0]
   56c74:	ldr	x0, [x29, #192]
   56c78:	str	x2, [x29, #112]
   56c7c:	str	x0, [x29, #184]
   56c80:	cbnz	x19, 56fb4 <mpfr_log_ui@@Base+0x53c>
   56c84:	str	xzr, [x29, #136]
   56c88:	ldr	x0, [x29, #168]
   56c8c:	mov	w1, #0x41                  	// #65
   56c90:	add	x26, x29, #0x130
   56c94:	add	x28, x29, #0xf0
   56c98:	add	x0, x0, #0x3
   56c9c:	add	x27, x29, #0x110
   56ca0:	clz	x0, x0
   56ca4:	str	x24, [x29, #160]
   56ca8:	sub	w0, w1, w0
   56cac:	mov	x24, x21
   56cb0:	str	w0, [x29, #132]
   56cb4:	add	x0, x29, #0xd8
   56cb8:	str	x25, [x29, #144]
   56cbc:	str	x0, [x29, #152]
   56cc0:	mov	x0, #0x40                  	// #64
   56cc4:	str	x0, [x29, #104]
   56cc8:	mov	x0, x26
   56ccc:	mov	x1, #0x20                  	// #32
   56cd0:	bl	ca80 <mpfr_init2@plt>
   56cd4:	mov	x19, #0x0                   	// #0
   56cd8:	ldr	x1, [x29, #136]
   56cdc:	mov	w3, #0x2                   	// #2
   56ce0:	mov	x2, #0x0                   	// #0
   56ce4:	mov	x0, x26
   56ce8:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   56cec:	mov	x1, x26
   56cf0:	mov	w2, #0x2                   	// #2
   56cf4:	mov	x0, x26
   56cf8:	bl	c1d0 <mpfr_log2@plt>
   56cfc:	ldr	x1, [x29, #184]
   56d00:	mov	x2, x26
   56d04:	mov	w3, #0x3                   	// #3
   56d08:	mov	x0, x26
   56d0c:	bl	ca50 <mpfr_ui_sub@plt>
   56d10:	mov	x2, x26
   56d14:	mov	w3, #0x2                   	// #2
   56d18:	mov	x1, x24
   56d1c:	mov	x0, x26
   56d20:	bl	c2f0 <mpfr_ui_div@plt>
   56d24:	mov	w1, #0x2                   	// #2
   56d28:	mov	x0, x26
   56d2c:	bl	bca0 <mpfr_get_ui@plt>
   56d30:	mov	x25, x0
   56d34:	mov	x1, #0x2                   	// #2
   56d38:	cmp	x0, x1
   56d3c:	csel	x25, x25, x1, cs  // cs = hs, nlast
   56d40:	mov	w1, #0x41                  	// #65
   56d44:	sub	x20, x25, #0x1
   56d48:	mov	x0, x26
   56d4c:	clz	x20, x20
   56d50:	sub	w20, w1, w20
   56d54:	bl	c070 <mpfr_clear@plt>
   56d58:	mov	x1, sp
   56d5c:	mov	w0, #0x30                  	// #48
   56d60:	sbfiz	x23, x20, #4, #32
   56d64:	smsubl	x0, w20, w0, x1
   56d68:	mov	sp, x0
   56d6c:	add	x22, sp, #0x10
   56d70:	add	x20, x22, x23
   56d74:	add	x21, x20, x23
   56d78:	add	x0, x22, x19
   56d7c:	bl	bf90 <mpfr_mpz_init@plt>
   56d80:	add	x0, x20, x19
   56d84:	bl	bf90 <mpfr_mpz_init@plt>
   56d88:	add	x0, x21, x19
   56d8c:	add	x19, x19, #0x10
   56d90:	bl	bf90 <mpfr_mpz_init@plt>
   56d94:	cmp	x23, x19
   56d98:	b.ne	56d78 <mpfr_log_ui@@Base+0x300>  // b.any
   56d9c:	ldr	x6, [x29, #144]
   56da0:	mov	x5, x25
   56da4:	ldr	x7, [x29, #184]
   56da8:	str	wzr, [sp]
   56dac:	mov	x3, x21
   56db0:	mov	x4, #0x1                   	// #1
   56db4:	ldr	x1, [x29, #152]
   56db8:	mov	x2, x20
   56dbc:	mov	x0, x22
   56dc0:	mov	x19, #0x0                   	// #0
   56dc4:	bl	568e0 <mpfr_fmms@@Base+0x8>
   56dc8:	mov	x1, x21
   56dcc:	mov	w2, #0x0                   	// #0
   56dd0:	mov	x0, x28
   56dd4:	bl	c240 <mpfr_set_z@plt>
   56dd8:	mov	x1, x20
   56ddc:	mov	w2, #0x0                   	// #0
   56de0:	mov	x0, x27
   56de4:	bl	c240 <mpfr_set_z@plt>
   56de8:	ldr	x2, [x29, #216]
   56dec:	mov	x1, x27
   56df0:	mov	w3, #0x0                   	// #0
   56df4:	mov	x0, x27
   56df8:	bl	c2c0 <mpfr_mul_2ui@plt>
   56dfc:	mov	x1, x28
   56e00:	mov	w3, #0x0                   	// #0
   56e04:	mov	x2, x27
   56e08:	mov	x0, x28
   56e0c:	bl	c620 <mpfr_div@plt>
   56e10:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   56e14:	ldr	x1, [x0, #2560]
   56e18:	add	x0, x0, #0xa00
   56e1c:	blr	x1
   56e20:	mov	w2, #0x0                   	// #0
   56e24:	ldr	x1, [x29, #176]
   56e28:	add	x1, x1, x0
   56e2c:	mov	x0, x27
   56e30:	bl	c380 <mpfr_cache@plt>
   56e34:	ldr	x2, [x29, #192]
   56e38:	mov	x1, x27
   56e3c:	mov	w3, #0x0                   	// #0
   56e40:	mov	x0, x27
   56e44:	bl	ba50 <mpfr_mul_ui@plt>
   56e48:	mov	x2, x27
   56e4c:	mov	x1, x28
   56e50:	mov	x0, x28
   56e54:	mov	w3, #0x0                   	// #0
   56e58:	bl	c1a0 <mpfr_add@plt>
   56e5c:	nop
   56e60:	add	x0, x22, x19
   56e64:	bl	c170 <mpfr_mpz_clear@plt>
   56e68:	add	x0, x20, x19
   56e6c:	bl	c170 <mpfr_mpz_clear@plt>
   56e70:	add	x0, x21, x19
   56e74:	add	x19, x19, #0x10
   56e78:	bl	c170 <mpfr_mpz_clear@plt>
   56e7c:	cmp	x23, x19
   56e80:	b.ne	56e60 <mpfr_log_ui@@Base+0x3e8>  // b.any
   56e84:	ldr	x0, [x29, #192]
   56e88:	cmn	x0, #0x5
   56e8c:	b.eq	570a0 <mpfr_log_ui@@Base+0x628>  // b.none
   56e90:	ldr	x0, [x29, #168]
   56e94:	add	x0, x0, #0x4
   56e98:	cmp	x0, #0x1
   56e9c:	b.ls	570a8 <mpfr_log_ui@@Base+0x630>  // b.plast
   56ea0:	ldr	w2, [x29, #132]
   56ea4:	ldr	x1, [x29, #256]
   56ea8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   56eac:	cmp	x1, x0
   56eb0:	b.le	57010 <mpfr_log_ui@@Base+0x598>
   56eb4:	ldr	x3, [x29, #160]
   56eb8:	sub	x2, x24, w2, uxtw
   56ebc:	ldr	w0, [x29, #204]
   56ec0:	ldr	x1, [x29, #240]
   56ec4:	cmp	w0, #0x0
   56ec8:	ldr	x0, [x29, #264]
   56ecc:	sub	x1, x1, #0x1
   56ed0:	ldr	x3, [x3]
   56ed4:	asr	x1, x1, #6
   56ed8:	add	x1, x1, #0x1
   56edc:	cinc	x3, x3, eq  // eq = none
   56ee0:	bl	c370 <mpfr_round_p@plt>
   56ee4:	cbz	w0, 57010 <mpfr_log_ui@@Base+0x598>
   56ee8:	ldr	w2, [x29, #204]
   56eec:	mov	x1, x28
   56ef0:	ldr	w3, [x29, #248]
   56ef4:	ldr	x24, [x29, #160]
   56ef8:	mov	x0, x24
   56efc:	bl	c6a0 <mpfr_set4@plt>
   56f00:	ldr	x1, [x29, #336]
   56f04:	mov	w20, w0
   56f08:	cbz	x1, 56f14 <mpfr_log_ui@@Base+0x49c>
   56f0c:	ldr	x0, [x29, #344]
   56f10:	bl	cc20 <mpfr_free_func@plt>
   56f14:	ldr	x3, [x29, #176]
   56f18:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   56f1c:	ldr	x1, [x0, #2576]
   56f20:	add	x0, x0, #0xa10
   56f24:	blr	x1
   56f28:	ldr	w1, [x29, #200]
   56f2c:	add	x2, x3, x0
   56f30:	str	w1, [x3, x0]
   56f34:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   56f38:	ldr	x4, [x0, #2512]
   56f3c:	add	x0, x0, #0x9d0
   56f40:	blr	x4
   56f44:	ldr	x4, [x29, #120]
   56f48:	str	x4, [x3, x0]
   56f4c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   56f50:	ldr	x5, [x0, #2544]
   56f54:	add	x0, x0, #0x9f0
   56f58:	blr	x5
   56f5c:	ldr	x1, [x24, #16]
   56f60:	ldr	x5, [x29, #112]
   56f64:	str	x5, [x3, x0]
   56f68:	cmp	x4, x1
   56f6c:	ccmp	x5, x1, #0x1, le
   56f70:	b.ge	56ffc <mpfr_log_ui@@Base+0x584>  // b.tcont
   56f74:	ldr	w2, [x29, #204]
   56f78:	mov	w1, w20
   56f7c:	mov	x0, x24
   56f80:	bl	cb30 <mpfr_check_range@plt>
   56f84:	mov	w20, w0
   56f88:	b	56ac8 <mpfr_log_ui@@Base+0x50>
   56f8c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   56f90:	ldr	x1, [x0, #2560]
   56f94:	add	x0, x0, #0xa00
   56f98:	blr	x1
   56f9c:	mrs	x1, tpidr_el0
   56fa0:	add	x1, x1, x0
   56fa4:	mov	x0, x24
   56fa8:	bl	c380 <mpfr_cache@plt>
   56fac:	mov	w20, w0
   56fb0:	b	56ac8 <mpfr_log_ui@@Base+0x50>
   56fb4:	tbnz	w19, #0, 57108 <mpfr_log_ui@@Base+0x690>
   56fb8:	ldr	x1, [x29, #184]
   56fbc:	nop
   56fc0:	add	x0, x25, x25, lsr #63
   56fc4:	sub	x1, x1, #0x1
   56fc8:	asr	x25, x0, #1
   56fcc:	tbz	w0, #1, 56fc0 <mpfr_log_ui@@Base+0x548>
   56fd0:	cmp	x25, #0x0
   56fd4:	str	x1, [x29, #184]
   56fd8:	cneg	x0, x25, lt  // lt = tstop
   56fdc:	str	x0, [x29, #136]
   56fe0:	b	56c88 <mpfr_log_ui@@Base+0x210>
   56fe4:	lsl	x0, x20, #4
   56fe8:	str	x0, [x29, #336]
   56fec:	bl	ccf0 <mpfr_allocate_func@plt>
   56ff0:	mov	x1, x0
   56ff4:	str	x0, [x29, #344]
   56ff8:	b	56bf4 <mpfr_log_ui@@Base+0x17c>
   56ffc:	cbz	w20, 56ac8 <mpfr_log_ui@@Base+0x50>
   57000:	ldr	w0, [x29, #200]
   57004:	orr	w0, w0, #0x8
   57008:	str	w0, [x2]
   5700c:	b	56ac8 <mpfr_log_ui@@Base+0x50>
   57010:	ldr	x1, [x29, #104]
   57014:	mov	x0, #0xfffffffffffffeff    	// #-257
   57018:	movk	x0, #0x7fff, lsl #48
   5701c:	sub	x0, x0, x24
   57020:	cmp	x0, x1
   57024:	b.lt	57118 <mpfr_log_ui@@Base+0x6a0>  // b.tstop
   57028:	ldr	x0, [x29, #104]
   5702c:	ldr	x1, [x29, #336]
   57030:	add	x24, x24, x0
   57034:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   57038:	cmp	x24, x0
   5703c:	add	x0, x24, x24, lsr #63
   57040:	asr	x0, x0, #1
   57044:	str	x0, [x29, #104]
   57048:	b.ge	57130 <mpfr_log_ui@@Base+0x6b8>  // b.tcont
   5704c:	sub	x19, x24, #0x1
   57050:	asr	x19, x19, #6
   57054:	add	x19, x19, #0x1
   57058:	lsl	x2, x19, #4
   5705c:	str	x2, [x29, #336]
   57060:	cbz	x1, 57090 <mpfr_log_ui@@Base+0x618>
   57064:	ldr	x0, [x29, #344]
   57068:	bl	c1c0 <mpfr_reallocate_func@plt>
   5706c:	str	x0, [x29, #344]
   57070:	add	x19, x0, x19, lsl #3
   57074:	str	x24, [x29, #240]
   57078:	stp	x0, x24, [x29, #264]
   5707c:	mov	w0, #0x1                   	// #1
   57080:	str	w0, [x29, #248]
   57084:	str	w0, [x29, #280]
   57088:	str	x19, [x29, #296]
   5708c:	b	56cc8 <mpfr_log_ui@@Base+0x250>
   57090:	mov	x0, x2
   57094:	bl	ccf0 <mpfr_allocate_func@plt>
   57098:	str	x0, [x29, #344]
   5709c:	b	57070 <mpfr_log_ui@@Base+0x5f8>
   570a0:	mov	w2, #0x1                   	// #1
   570a4:	b	56ea4 <mpfr_log_ui@@Base+0x42c>
   570a8:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   570ac:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   570b0:	add	x2, x2, #0x7a8
   570b4:	add	x0, x0, #0x798
   570b8:	mov	w1, #0xda                  	// #218
   570bc:	bl	cb40 <mpfr_assert_fail@plt>
   570c0:	mov	x0, #0xb                   	// #11
   570c4:	mov	x21, x0
   570c8:	b	56be8 <mpfr_log_ui@@Base+0x170>
   570cc:	mov	w1, #0x95                  	// #149
   570d0:	adrp	x2, 5c000 <mpfr_free_pool@@Base+0x2ca8>
   570d4:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   570d8:	add	x2, x2, #0xdb8
   570dc:	add	x0, x0, #0x798
   570e0:	bl	cb40 <mpfr_assert_fail@plt>
   570e4:	ldr	x0, [x24]
   570e8:	mov	w1, #0x40                  	// #64
   570ec:	sub	x0, x0, #0x1
   570f0:	clz	x0, x0
   570f4:	sub	w0, w1, w0
   570f8:	add	x0, x20, w0, sxtw
   570fc:	add	x1, x0, #0xa
   57100:	mov	x21, x1
   57104:	b	56bc8 <mpfr_log_ui@@Base+0x150>
   57108:	cmp	x19, #0x0
   5710c:	cneg	x0, x19, lt  // lt = tstop
   57110:	str	x0, [x29, #136]
   57114:	b	56c88 <mpfr_log_ui@@Base+0x210>
   57118:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   5711c:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   57120:	add	x2, x2, #0xeb0
   57124:	add	x0, x0, #0x798
   57128:	mov	w1, #0xde                  	// #222
   5712c:	bl	cb40 <mpfr_assert_fail@plt>
   57130:	bl	c8e0 <mpfr_abort_prec_max@plt>
   57134:	nop

0000000000057138 <mpfr_gamma_inc@@Base>:
   57138:	sub	sp, sp, #0x2c0
   5713c:	stp	x29, x30, [sp]
   57140:	mov	x29, sp
   57144:	stp	x19, x20, [sp, #16]
   57148:	ldr	x19, [x1, #16]
   5714c:	stp	x21, x22, [sp, #32]
   57150:	mov	x21, x1
   57154:	stp	x23, x24, [sp, #48]
   57158:	mov	x23, x2
   5715c:	str	x0, [sp, #104]
   57160:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   57164:	str	w3, [sp, #120]
   57168:	cmp	x19, x0
   5716c:	b.le	577bc <mpfr_gamma_inc@@Base+0x684>
   57170:	ldr	x1, [x2, #16]
   57174:	cmp	x1, x0
   57178:	b.le	577d0 <mpfr_gamma_inc@@Base+0x698>
   5717c:	ldr	w0, [x23, #8]
   57180:	tbnz	w0, #31, 573f8 <mpfr_gamma_inc@@Base+0x2c0>
   57184:	mov	x0, x21
   57188:	stp	x25, x26, [sp, #64]
   5718c:	stp	x27, x28, [sp, #80]
   57190:	bl	c160 <mpfr_integer_p@plt>
   57194:	cbz	w0, 57700 <mpfr_gamma_inc@@Base+0x5c8>
   57198:	mrs	x3, tpidr_el0
   5719c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   571a0:	ldr	x1, [x0, #2576]
   571a4:	add	x0, x0, #0xa10
   571a8:	blr	x1
   571ac:	ldr	w2, [x21, #8]
   571b0:	ldr	x1, [sp, #104]
   571b4:	str	x3, [sp, #112]
   571b8:	ldr	w0, [x3, x0]
   571bc:	str	w0, [sp, #124]
   571c0:	ldr	x1, [x1]
   571c4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   571c8:	ldr	x4, [x0, #2512]
   571cc:	add	x0, x0, #0x9d0
   571d0:	blr	x4
   571d4:	add	x4, x3, x0
   571d8:	ldr	x0, [x3, x0]
   571dc:	str	x0, [sp, #136]
   571e0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   571e4:	ldr	x5, [x0, #2544]
   571e8:	add	x0, x0, #0x9f0
   571ec:	blr	x5
   571f0:	mov	x5, x3
   571f4:	add	x3, x3, x0
   571f8:	ldr	x0, [x5, x0]
   571fc:	str	x0, [sp, #128]
   57200:	tbnz	w2, #31, 57a54 <mpfr_gamma_inc@@Base+0x91c>
   57204:	ldr	x3, [sp, #112]
   57208:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   5720c:	ldr	x2, [x0, #2512]
   57210:	add	x0, x0, #0x9d0
   57214:	blr	x2
   57218:	mov	x2, #0xc000000000000001    	// #-4611686018427387903
   5721c:	add	x25, x1, #0xd
   57220:	str	x2, [x3, x0]
   57224:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   57228:	ldr	x4, [x0, #2544]
   5722c:	add	x0, x0, #0x9f0
   57230:	blr	x4
   57234:	mov	x2, #0x3fffffffffffffff    	// #4611686018427387903
   57238:	str	x2, [x3, x0]
   5723c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   57240:	cmp	x25, x0
   57244:	b.ge	57fdc <mpfr_gamma_inc@@Base+0xea4>  // b.tcont
   57248:	add	x19, x1, #0x4b
   5724c:	adds	x1, x1, #0xc
   57250:	csel	x19, x19, x1, mi  // mi = first
   57254:	asr	x19, x19, #6
   57258:	add	x19, x19, #0x1
   5725c:	lsl	x0, x19, #1
   57260:	cmp	x0, #0x10
   57264:	b.gt	5783c <mpfr_gamma_inc@@Base+0x704>
   57268:	add	x0, sp, #0x1b0
   5726c:	stp	xzr, x0, [sp, #416]
   57270:	mov	x1, x0
   57274:	mov	w2, #0x1                   	// #1
   57278:	mov	x0, #0x40                  	// #64
   5727c:	add	x20, sp, #0xe0
   57280:	add	x19, x1, x19, lsl #3
   57284:	add	x28, sp, #0xc0
   57288:	add	x22, sp, #0xa0
   5728c:	add	x27, sp, #0x100
   57290:	str	x0, [sp, #144]
   57294:	mov	x0, x20
   57298:	str	x25, [sp, #160]
   5729c:	str	w2, [sp, #168]
   572a0:	stp	x1, x25, [sp, #184]
   572a4:	mov	x1, #0x2                   	// #2
   572a8:	str	w2, [sp, #200]
   572ac:	str	x19, [sp, #216]
   572b0:	bl	ca80 <mpfr_init2@plt>
   572b4:	ldr	x2, [x21]
   572b8:	ldr	x0, [x21, #16]
   572bc:	cmp	x0, x2
   572c0:	csel	x1, x0, x2, ge  // ge = tcont
   572c4:	cmp	x0, #0x0
   572c8:	b.le	5775c <mpfr_gamma_inc@@Base+0x624>
   572cc:	add	x1, x1, #0x1
   572d0:	mov	x0, x20
   572d4:	bl	bed0 <mpfr_set_prec@plt>
   572d8:	ldr	x24, [x21, #16]
   572dc:	mov	x1, #0x1                   	// #1
   572e0:	mov	x2, x21
   572e4:	mov	w3, #0x4                   	// #4
   572e8:	cmp	x24, #0x0
   572ec:	mov	x0, x28
   572f0:	csel	x24, x24, x1, gt
   572f4:	bl	c2f0 <mpfr_ui_div@plt>
   572f8:	ldr	w3, [sp, #200]
   572fc:	mov	x1, x28
   57300:	mov	x0, x22
   57304:	mov	w2, #0x4                   	// #4
   57308:	bl	c6a0 <mpfr_set4@plt>
   5730c:	ldr	w0, [x21, #8]
   57310:	tbnz	w0, #31, 5786c <mpfr_gamma_inc@@Base+0x734>
   57314:	mov	x19, #0x1                   	// #1
   57318:	mov	x26, #0x8000000000000001    	// #-9223372036854775807
   5731c:	nop
   57320:	mov	x2, x23
   57324:	mov	x1, x28
   57328:	mov	w3, #0x2                   	// #2
   5732c:	mov	x0, x28
   57330:	bl	bd50 <mpfr_mul@plt>
   57334:	mov	x2, x19
   57338:	mov	x1, x21
   5733c:	mov	w3, #0x1                   	// #1
   57340:	mov	x0, x20
   57344:	bl	c260 <mpfr_add_ui@plt>
   57348:	mov	x2, x20
   5734c:	mov	x1, x28
   57350:	mov	w3, #0x4                   	// #4
   57354:	mov	x0, x28
   57358:	bl	c620 <mpfr_div@plt>
   5735c:	mov	x1, x22
   57360:	mov	x2, x28
   57364:	mov	x0, x22
   57368:	mov	w3, #0x1                   	// #1
   5736c:	bl	c1a0 <mpfr_add@plt>
   57370:	ldr	x5, [sp, #176]
   57374:	ldr	w0, [x21, #8]
   57378:	cmp	x5, x26
   5737c:	ldr	x1, [sp, #208]
   57380:	csel	x5, x1, x5, eq  // eq = none
   57384:	tbnz	w0, #31, 5744c <mpfr_gamma_inc@@Base+0x314>
   57388:	ldr	x0, [sp, #208]
   5738c:	ldr	x1, [sp, #240]
   57390:	add	x0, x25, x0
   57394:	cmp	x0, x5
   57398:	b.gt	573b8 <mpfr_gamma_inc@@Base+0x280>
   5739c:	ldr	w0, [sp, #232]
   573a0:	cmp	w0, #0x0
   573a4:	b.le	573b8 <mpfr_gamma_inc@@Base+0x280>
   573a8:	ldr	x0, [x23, #16]
   573ac:	add	x0, x0, #0x1
   573b0:	cmp	x0, x1
   573b4:	b.lt	57484 <mpfr_gamma_inc@@Base+0x34c>  // b.tstop
   573b8:	cmp	x24, x1
   573bc:	b.ge	573d4 <mpfr_gamma_inc@@Base+0x29c>  // b.tcont
   573c0:	mov	x24, x1
   573c4:	mov	x0, x20
   573c8:	ldr	x1, [sp, #224]
   573cc:	add	x1, x1, #0x1
   573d0:	bl	bed0 <mpfr_set_prec@plt>
   573d4:	add	x19, x19, #0x1
   573d8:	b	57320 <mpfr_gamma_inc@@Base+0x1e8>
   573dc:	ldr	w1, [x21, #8]
   573e0:	ldr	w0, [x23, #8]
   573e4:	cmp	w1, #0x0
   573e8:	b.le	57f64 <mpfr_gamma_inc@@Base+0xe2c>
   573ec:	cmp	w0, #0x0
   573f0:	b.le	57f64 <mpfr_gamma_inc@@Base+0xe2c>
   573f4:	nop
   573f8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   573fc:	ldr	x2, [x0, #2576]
   57400:	add	x0, x0, #0xa10
   57404:	blr	x2
   57408:	mrs	x1, tpidr_el0
   5740c:	ldr	x2, [sp, #104]
   57410:	add	x0, x1, x0
   57414:	mov	x1, #0x2                   	// #2
   57418:	mov	w19, #0x0                   	// #0
   5741c:	movk	x1, #0x8000, lsl #48
   57420:	str	x1, [x2, #16]
   57424:	ldr	w1, [x0]
   57428:	orr	w1, w1, #0x4
   5742c:	str	w1, [x0]
   57430:	mov	w0, w19
   57434:	ldp	x29, x30, [sp]
   57438:	ldp	x19, x20, [sp, #16]
   5743c:	ldp	x21, x22, [sp, #32]
   57440:	ldp	x23, x24, [sp, #48]
   57444:	add	sp, sp, #0x2c0
   57448:	ret
   5744c:	ldr	w0, [sp, #200]
   57450:	mov	x2, x28
   57454:	str	x5, [sp, #96]
   57458:	mov	x1, x27
   5745c:	cmp	w0, #0x0
   57460:	mov	w3, #0x2                   	// #2
   57464:	mov	x0, x27
   57468:	b.le	57478 <mpfr_gamma_inc@@Base+0x340>
   5746c:	bl	c1a0 <mpfr_add@plt>
   57470:	ldr	x5, [sp, #96]
   57474:	b	57388 <mpfr_gamma_inc@@Base+0x250>
   57478:	bl	bb70 <mpfr_sub@plt>
   5747c:	ldr	x5, [sp, #96]
   57480:	b	57388 <mpfr_gamma_inc@@Base+0x250>
   57484:	ldr	w0, [x21, #8]
   57488:	mov	x24, #0x0                   	// #0
   5748c:	tbnz	w0, #31, 57854 <mpfr_gamma_inc@@Base+0x71c>
   57490:	mov	x1, x23
   57494:	mov	w2, #0x1                   	// #1
   57498:	mov	x0, x28
   5749c:	bl	c750 <mpfr_exp@plt>
   574a0:	mov	x2, x28
   574a4:	mov	x1, x22
   574a8:	mov	w3, #0x1                   	// #1
   574ac:	mov	x0, x22
   574b0:	bl	c620 <mpfr_div@plt>
   574b4:	mov	x2, x21
   574b8:	mov	x1, x23
   574bc:	mov	w3, #0x1                   	// #1
   574c0:	mov	x0, x28
   574c4:	bl	bd90 <mpfr_pow@plt>
   574c8:	mov	x1, x22
   574cc:	mov	x2, x28
   574d0:	mov	w3, #0x1                   	// #1
   574d4:	mov	x0, x22
   574d8:	bl	bd50 <mpfr_mul@plt>
   574dc:	ldr	x3, [sp, #112]
   574e0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   574e4:	ldr	x1, [x0, #2576]
   574e8:	add	x0, x0, #0xa10
   574ec:	blr	x1
   574f0:	mov	x1, x21
   574f4:	mov	w2, #0x1                   	// #1
   574f8:	add	x26, x3, x0
   574fc:	str	wzr, [x3, x0]
   57500:	mov	x0, x28
   57504:	bl	c7b0 <mpfr_gamma@plt>
   57508:	ldr	w0, [x26]
   5750c:	tbnz	w0, #1, 57910 <mpfr_gamma_inc@@Base+0x7d8>
   57510:	ldr	x5, [sp, #176]
   57514:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   57518:	ldr	x26, [sp, #208]
   5751c:	cmp	x5, x0
   57520:	b.ne	5753c <mpfr_gamma_inc@@Base+0x404>  // b.any
   57524:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   57528:	ldr	x1, [x0, #2512]
   5752c:	add	x0, x0, #0x9d0
   57530:	blr	x1
   57534:	ldr	x1, [sp, #112]
   57538:	ldr	x5, [x1, x0]
   5753c:	mov	x1, x28
   57540:	mov	w3, #0x1                   	// #1
   57544:	mov	x2, x22
   57548:	mov	x0, x22
   5754c:	str	x5, [sp, #96]
   57550:	bl	bb70 <mpfr_sub@plt>
   57554:	lsl	x19, x19, #1
   57558:	ldr	x3, [sp, #176]
   5755c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   57560:	add	x24, x24, #0x1
   57564:	cmp	x3, x0
   57568:	csel	x1, x26, x3, eq  // eq = none
   5756c:	cmn	x19, #0x6
   57570:	ldr	x5, [sp, #96]
   57574:	b.eq	57598 <mpfr_gamma_inc@@Base+0x460>  // b.none
   57578:	add	x0, x19, #0x7
   5757c:	cmp	x0, #0x1
   57580:	b.ls	57a3c <mpfr_gamma_inc@@Base+0x904>  // b.plast
   57584:	add	x19, x19, #0x6
   57588:	mov	w2, #0x40                  	// #64
   5758c:	clz	x0, x19
   57590:	sub	w0, w2, w0
   57594:	add	x24, x24, w0, sxtw
   57598:	add	x24, x5, x24
   5759c:	cmp	x26, x24
   575a0:	b.eq	577b0 <mpfr_gamma_inc@@Base+0x678>  // b.none
   575a4:	csel	x26, x26, x24, ge  // ge = tcont
   575a8:	cmp	x1, #0x0
   575ac:	ccmp	x1, x26, #0x0, le
   575b0:	b.ge	576bc <mpfr_gamma_inc@@Base+0x584>  // b.tcont
   575b4:	sub	x26, x26, x1
   575b8:	add	x2, x26, #0x1
   575bc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   575c0:	cmp	x3, x0
   575c4:	b.le	57890 <mpfr_gamma_inc@@Base+0x758>
   575c8:	ldr	x3, [sp, #104]
   575cc:	sub	x2, x25, x2
   575d0:	ldr	w0, [sp, #120]
   575d4:	ldr	x1, [sp, #160]
   575d8:	cmp	w0, #0x0
   575dc:	ldr	x0, [sp, #184]
   575e0:	sub	x1, x1, #0x1
   575e4:	ldr	x3, [x3]
   575e8:	asr	x1, x1, #6
   575ec:	add	x1, x1, #0x1
   575f0:	cinc	x3, x3, eq  // eq = none
   575f4:	bl	c370 <mpfr_round_p@plt>
   575f8:	cbz	w0, 57890 <mpfr_gamma_inc@@Base+0x758>
   575fc:	mov	x0, x20
   57600:	bl	c070 <mpfr_clear@plt>
   57604:	ldr	w2, [sp, #120]
   57608:	mov	x1, x22
   5760c:	ldr	w3, [sp, #168]
   57610:	ldr	x0, [sp, #104]
   57614:	bl	c6a0 <mpfr_set4@plt>
   57618:	mov	w19, w0
   5761c:	ldr	x1, [sp, #416]
   57620:	cbnz	x1, 57780 <mpfr_gamma_inc@@Base+0x648>
   57624:	ldp	x6, x3, [sp, #104]
   57628:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   5762c:	ldr	x1, [x0, #2576]
   57630:	add	x0, x0, #0xa10
   57634:	blr	x1
   57638:	ldr	w1, [sp, #124]
   5763c:	add	x2, x3, x0
   57640:	str	w1, [x3, x0]
   57644:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   57648:	ldr	x4, [x0, #2512]
   5764c:	add	x0, x0, #0x9d0
   57650:	blr	x4
   57654:	ldr	x4, [sp, #136]
   57658:	str	x4, [x3, x0]
   5765c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   57660:	ldr	x5, [x0, #2544]
   57664:	add	x0, x0, #0x9f0
   57668:	blr	x5
   5766c:	ldr	x1, [x6, #16]
   57670:	ldr	x5, [sp, #128]
   57674:	str	x5, [x3, x0]
   57678:	cmp	x1, x5
   5767c:	ccmp	x1, x4, #0x1, le
   57680:	b.ge	576cc <mpfr_gamma_inc@@Base+0x594>  // b.tcont
   57684:	ldr	w2, [sp, #120]
   57688:	mov	w1, w19
   5768c:	mov	x0, x6
   57690:	bl	cb30 <mpfr_check_range@plt>
   57694:	mov	w19, w0
   57698:	mov	w0, w19
   5769c:	ldp	x29, x30, [sp]
   576a0:	ldp	x19, x20, [sp, #16]
   576a4:	ldp	x21, x22, [sp, #32]
   576a8:	ldp	x23, x24, [sp, #48]
   576ac:	ldp	x25, x26, [sp, #64]
   576b0:	ldp	x27, x28, [sp, #80]
   576b4:	add	sp, sp, #0x2c0
   576b8:	ret
   576bc:	cmp	x1, x26
   576c0:	mov	x2, #0x2                   	// #2
   576c4:	b.ge	575bc <mpfr_gamma_inc@@Base+0x484>  // b.tcont
   576c8:	b	575b4 <mpfr_gamma_inc@@Base+0x47c>
   576cc:	cbz	w19, 5778c <mpfr_gamma_inc@@Base+0x654>
   576d0:	ldr	w0, [sp, #124]
   576d4:	ldp	x25, x26, [sp, #64]
   576d8:	orr	w0, w0, #0x8
   576dc:	ldp	x27, x28, [sp, #80]
   576e0:	str	w0, [x2]
   576e4:	mov	w0, w19
   576e8:	ldp	x29, x30, [sp]
   576ec:	ldp	x19, x20, [sp, #16]
   576f0:	ldp	x21, x22, [sp, #32]
   576f4:	ldp	x23, x24, [sp, #48]
   576f8:	add	sp, sp, #0x2c0
   576fc:	ret
   57700:	mrs	x2, tpidr_el0
   57704:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   57708:	ldr	x1, [x0, #2576]
   5770c:	add	x0, x0, #0xa10
   57710:	blr	x1
   57714:	ldr	x1, [sp, #104]
   57718:	str	x2, [sp, #112]
   5771c:	ldr	w0, [x2, x0]
   57720:	str	w0, [sp, #124]
   57724:	ldr	x1, [x1]
   57728:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   5772c:	ldr	x3, [x0, #2512]
   57730:	add	x0, x0, #0x9d0
   57734:	blr	x3
   57738:	ldr	x0, [x2, x0]
   5773c:	str	x0, [sp, #136]
   57740:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   57744:	ldr	x3, [x0, #2544]
   57748:	add	x0, x0, #0x9f0
   5774c:	blr	x3
   57750:	ldr	x0, [x2, x0]
   57754:	str	x0, [sp, #128]
   57758:	b	57204 <mpfr_gamma_inc@@Base+0xcc>
   5775c:	mov	x1, #0x1                   	// #1
   57760:	sub	x0, x1, x0
   57764:	mov	x1, #0xfffffffffffffeff    	// #-257
   57768:	movk	x1, #0x7fff, lsl #48
   5776c:	sub	x1, x1, x2
   57770:	cmp	x0, x1
   57774:	b.gt	579d0 <mpfr_gamma_inc@@Base+0x898>
   57778:	add	x1, x2, x0
   5777c:	b	572cc <mpfr_gamma_inc@@Base+0x194>
   57780:	ldr	x0, [sp, #424]
   57784:	bl	cc20 <mpfr_free_func@plt>
   57788:	b	57624 <mpfr_gamma_inc@@Base+0x4ec>
   5778c:	mov	w0, w19
   57790:	ldp	x29, x30, [sp]
   57794:	ldp	x19, x20, [sp, #16]
   57798:	ldp	x21, x22, [sp, #32]
   5779c:	ldp	x23, x24, [sp, #48]
   577a0:	ldp	x25, x26, [sp, #64]
   577a4:	ldp	x27, x28, [sp, #80]
   577a8:	add	sp, sp, #0x2c0
   577ac:	ret
   577b0:	sub	x26, x26, x1
   577b4:	add	x2, x26, #0x2
   577b8:	b	575bc <mpfr_gamma_inc@@Base+0x484>
   577bc:	mov	x0, #0x2                   	// #2
   577c0:	movk	x0, #0x8000, lsl #48
   577c4:	cmp	x19, x0
   577c8:	b.eq	573f8 <mpfr_gamma_inc@@Base+0x2c0>  // b.none
   577cc:	ldr	x1, [x2, #16]
   577d0:	mov	x20, #0x2                   	// #2
   577d4:	movk	x20, #0x8000, lsl #48
   577d8:	cmp	x1, x20
   577dc:	b.eq	573f8 <mpfr_gamma_inc@@Base+0x2c0>  // b.none
   577e0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   577e4:	cmp	x1, x0
   577e8:	cset	w2, eq  // eq = none
   577ec:	cmp	x19, x0
   577f0:	cset	w3, eq  // eq = none
   577f4:	cmp	w3, #0x0
   577f8:	ccmp	w2, #0x0, #0x0, eq  // eq = none
   577fc:	b.eq	57928 <mpfr_gamma_inc@@Base+0x7f0>  // b.none
   57800:	cmp	w3, #0x0
   57804:	ccmp	w2, #0x0, #0x4, ne  // ne = any
   57808:	b.ne	573dc <mpfr_gamma_inc@@Base+0x2a4>  // b.any
   5780c:	cmp	x19, x0
   57810:	b.eq	57a00 <mpfr_gamma_inc@@Base+0x8c8>  // b.none
   57814:	ldr	w0, [x23, #8]
   57818:	cmp	w0, #0x0
   5781c:	b.le	573f8 <mpfr_gamma_inc@@Base+0x2c0>
   57820:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   57824:	ldr	x2, [sp, #104]
   57828:	mov	w1, #0x1                   	// #1
   5782c:	mov	w19, #0x0                   	// #0
   57830:	str	w1, [x2, #8]
   57834:	str	x0, [x2, #16]
   57838:	b	57430 <mpfr_gamma_inc@@Base+0x2f8>
   5783c:	lsl	x0, x19, #4
   57840:	str	x0, [sp, #416]
   57844:	bl	ccf0 <mpfr_allocate_func@plt>
   57848:	mov	x1, x0
   5784c:	str	x0, [sp, #424]
   57850:	b	57274 <mpfr_gamma_inc@@Base+0x13c>
   57854:	ldr	x1, [sp, #272]
   57858:	mov	x0, x27
   5785c:	ldr	x24, [sp, #176]
   57860:	sub	x24, x1, x24
   57864:	bl	c070 <mpfr_clear@plt>
   57868:	b	57490 <mpfr_gamma_inc@@Base+0x358>
   5786c:	mov	x0, x27
   57870:	mov	x1, #0x20                  	// #32
   57874:	bl	ca80 <mpfr_init2@plt>
   57878:	mov	x1, x22
   5787c:	mov	x0, x27
   57880:	mov	w3, #0x1                   	// #1
   57884:	mov	w2, #0x2                   	// #2
   57888:	bl	c6a0 <mpfr_set4@plt>
   5788c:	b	57314 <mpfr_gamma_inc@@Base+0x1dc>
   57890:	ldr	x1, [sp, #144]
   57894:	mov	x0, #0xfffffffffffffeff    	// #-257
   57898:	movk	x0, #0x7fff, lsl #48
   5789c:	sub	x0, x0, x25
   578a0:	cmp	x0, x1
   578a4:	b.lt	57f4c <mpfr_gamma_inc@@Base+0xe14>  // b.tstop
   578a8:	ldr	x0, [sp, #144]
   578ac:	ldr	x1, [sp, #416]
   578b0:	add	x25, x25, x0
   578b4:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   578b8:	cmp	x25, x0
   578bc:	add	x0, x25, x25, lsr #63
   578c0:	asr	x0, x0, #1
   578c4:	str	x0, [sp, #144]
   578c8:	b.ge	57fdc <mpfr_gamma_inc@@Base+0xea4>  // b.tcont
   578cc:	sub	x19, x25, #0x1
   578d0:	asr	x19, x19, #6
   578d4:	add	x19, x19, #0x1
   578d8:	lsl	x2, x19, #4
   578dc:	str	x2, [sp, #416]
   578e0:	cbz	x1, 579c0 <mpfr_gamma_inc@@Base+0x888>
   578e4:	ldr	x0, [sp, #424]
   578e8:	bl	c1c0 <mpfr_reallocate_func@plt>
   578ec:	str	x0, [sp, #424]
   578f0:	mov	w1, #0x1                   	// #1
   578f4:	add	x19, x0, x19, lsl #3
   578f8:	str	x25, [sp, #160]
   578fc:	str	w1, [sp, #168]
   57900:	stp	x0, x25, [sp, #184]
   57904:	str	w1, [sp, #200]
   57908:	str	x19, [sp, #216]
   5790c:	b	572b4 <mpfr_gamma_inc@@Base+0x17c>
   57910:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   57914:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   57918:	add	x2, x2, #0x838
   5791c:	add	x0, x0, #0x7c0
   57920:	mov	w1, #0x122                 	// #290
   57924:	bl	cb40 <mpfr_assert_fail@plt>
   57928:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5792c:	cmp	x1, x0
   57930:	ccmp	x19, x0, #0x4, ne  // ne = any
   57934:	b.ne	5717c <mpfr_gamma_inc@@Base+0x44>  // b.any
   57938:	cmp	x19, x0
   5793c:	b.ne	57ef8 <mpfr_gamma_inc@@Base+0xdc0>  // b.any
   57940:	mov	x0, x23
   57944:	bl	c710 <mpfr_sgn@plt>
   57948:	tbnz	w0, #31, 57f6c <mpfr_gamma_inc@@Base+0xe34>
   5794c:	ldr	x1, [x23, #16]
   57950:	cmp	x1, x19
   57954:	b.eq	57ef8 <mpfr_gamma_inc@@Base+0xdc0>  // b.none
   57958:	ldr	w0, [x23, #8]
   5795c:	ldr	x3, [x23]
   57960:	neg	w0, w0
   57964:	ldr	x2, [x23, #24]
   57968:	str	x3, [sp, #560]
   5796c:	ldr	w4, [sp, #120]
   57970:	str	w0, [sp, #568]
   57974:	str	x1, [sp, #576]
   57978:	cmp	w4, #0x2
   5797c:	str	x2, [sp, #584]
   57980:	b.eq	57fb8 <mpfr_gamma_inc@@Base+0xe80>  // b.none
   57984:	cmp	w4, #0x3
   57988:	mov	w0, #0x2                   	// #2
   5798c:	csel	w0, w4, w0, ne  // ne = any
   57990:	str	w0, [sp, #120]
   57994:	ldr	w2, [sp, #120]
   57998:	add	x1, sp, #0x230
   5799c:	ldr	x19, [sp, #104]
   579a0:	mov	x0, x19
   579a4:	bl	c9e0 <mpfr_eint@plt>
   579a8:	mov	x2, x19
   579ac:	neg	w19, w0
   579b0:	ldr	w1, [x2, #8]
   579b4:	neg	w1, w1
   579b8:	str	w1, [x2, #8]
   579bc:	b	57430 <mpfr_gamma_inc@@Base+0x2f8>
   579c0:	mov	x0, x2
   579c4:	bl	ccf0 <mpfr_allocate_func@plt>
   579c8:	str	x0, [sp, #424]
   579cc:	b	578f0 <mpfr_gamma_inc@@Base+0x7b8>
   579d0:	mov	w1, #0xd2                  	// #210
   579d4:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   579d8:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   579dc:	add	x2, x2, #0x7d0
   579e0:	add	x0, x0, #0x7c0
   579e4:	bl	cb40 <mpfr_assert_fail@plt>
   579e8:	ldr	x0, [x21, #16]
   579ec:	mov	x1, #0x1                   	// #1
   579f0:	ldr	x2, [x21]
   579f4:	sub	x0, x1, x0
   579f8:	add	x1, x2, x0
   579fc:	b	572cc <mpfr_gamma_inc@@Base+0x194>
   57a00:	ldr	w0, [x21, #8]
   57a04:	cmp	w0, #0x0
   57a08:	b.le	57a14 <mpfr_gamma_inc@@Base+0x8dc>
   57a0c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   57a10:	b	57824 <mpfr_gamma_inc@@Base+0x6ec>
   57a14:	mov	x0, x23
   57a18:	bl	c710 <mpfr_sgn@plt>
   57a1c:	tbnz	w0, #31, 57f6c <mpfr_gamma_inc@@Base+0xe34>
   57a20:	mov	x0, x23
   57a24:	mov	x2, #0x0                   	// #0
   57a28:	mov	x1, #0x1                   	// #1
   57a2c:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   57a30:	tbz	w0, #31, 57820 <mpfr_gamma_inc@@Base+0x6e8>
   57a34:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   57a38:	b	57824 <mpfr_gamma_inc@@Base+0x6ec>
   57a3c:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   57a40:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   57a44:	add	x2, x2, #0x868
   57a48:	add	x0, x0, #0x7c0
   57a4c:	mov	w1, #0x12e                 	// #302
   57a50:	bl	cb40 <mpfr_assert_fail@plt>
   57a54:	ldr	x8, [x21]
   57a58:	mov	w7, #0x1                   	// #1
   57a5c:	ldp	x2, x6, [x21, #16]
   57a60:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   57a64:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
   57a68:	str	x5, [x4]
   57a6c:	str	x0, [x3]
   57a70:	str	x8, [sp, #352]
   57a74:	add	x8, x1, #0xa
   57a78:	str	x8, [sp, #96]
   57a7c:	str	w7, [sp, #360]
   57a80:	mov	x7, #0x7fffffffffffff00    	// #9223372036854775552
   57a84:	stp	x2, x6, [sp, #368]
   57a88:	cmp	x8, x7
   57a8c:	b.ge	57fdc <mpfr_gamma_inc@@Base+0xea4>  // b.tcont
   57a90:	add	x19, x1, #0x48
   57a94:	adds	x1, x1, #0x9
   57a98:	csel	x1, x19, x1, mi  // mi = first
   57a9c:	asr	x19, x1, #6
   57aa0:	add	x19, x19, #0x1
   57aa4:	lsl	x0, x19, #1
   57aa8:	cmp	x0, #0x10
   57aac:	b.gt	57f24 <mpfr_gamma_inc@@Base+0xdec>
   57ab0:	add	x1, sp, #0x240
   57ab4:	str	xzr, [sp, #560]
   57ab8:	mov	x0, x1
   57abc:	str	x1, [sp, #568]
   57ac0:	mov	x3, #0x40                  	// #64
   57ac4:	add	x1, sp, #0x180
   57ac8:	add	x28, sp, #0x140
   57acc:	add	x24, sp, #0x120
   57ad0:	add	x26, sp, #0x160
   57ad4:	stp	x1, x3, [sp, #144]
   57ad8:	add	x19, x0, x19, lsl #3
   57adc:	ldr	x3, [sp, #96]
   57ae0:	mov	w1, #0x1                   	// #1
   57ae4:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
   57ae8:	str	x3, [sp, #288]
   57aec:	str	w1, [sp, #296]
   57af0:	str	x0, [sp, #312]
   57af4:	str	x3, [sp, #320]
   57af8:	str	w1, [sp, #328]
   57afc:	str	x19, [sp, #344]
   57b00:	add	x1, x2, #0x2
   57b04:	add	x0, x2, #0x3
   57b08:	ldr	x2, [sp, #96]
   57b0c:	mov	w3, #0x0                   	// #0
   57b10:	mov	x19, #0x1                   	// #1
   57b14:	cmp	x1, x2
   57b18:	mov	x1, #0x1                   	// #1
   57b1c:	csel	x0, x0, x2, ge  // ge = tcont
   57b20:	mov	x2, x23
   57b24:	str	x0, [sp, #96]
   57b28:	mov	x0, x28
   57b2c:	bl	c2f0 <mpfr_ui_div@plt>
   57b30:	ldr	w3, [sp, #328]
   57b34:	mov	x1, x28
   57b38:	mov	x0, x24
   57b3c:	mov	w2, #0x0                   	// #0
   57b40:	bl	c6a0 <mpfr_set4@plt>
   57b44:	ldr	x27, [sp, #304]
   57b48:	mov	x20, x27
   57b4c:	mov	x22, x27
   57b50:	b	57bd0 <mpfr_gamma_inc@@Base+0xa98>
   57b54:	mov	w3, #0x0                   	// #0
   57b58:	mov	x2, x19
   57b5c:	mov	x1, x28
   57b60:	mov	x0, x28
   57b64:	bl	ba50 <mpfr_mul_ui@plt>
   57b68:	mov	x1, x28
   57b6c:	mov	w2, #0x0                   	// #0
   57b70:	mov	x0, x28
   57b74:	bl	bd70 <mpfr_neg@plt>
   57b78:	mov	x2, x23
   57b7c:	mov	x1, x28
   57b80:	mov	x0, x28
   57b84:	mov	w3, #0x0                   	// #0
   57b88:	bl	c620 <mpfr_div@plt>
   57b8c:	ldr	x0, [sp, #336]
   57b90:	cmp	x0, x25
   57b94:	b.eq	57be8 <mpfr_gamma_inc@@Base+0xab0>  // b.none
   57b98:	cmp	x20, x0
   57b9c:	mov	x2, x28
   57ba0:	csel	x20, x20, x0, ge  // ge = tcont
   57ba4:	mov	x1, x24
   57ba8:	mov	x0, x24
   57bac:	mov	w3, #0x0                   	// #0
   57bb0:	bl	c1a0 <mpfr_add@plt>
   57bb4:	add	x19, x19, #0x1
   57bb8:	ldr	x27, [sp, #304]
   57bbc:	ldr	x0, [sp, #336]
   57bc0:	cmp	x27, x25
   57bc4:	csel	x27, x0, x27, eq  // eq = none
   57bc8:	cmp	x22, x27
   57bcc:	csel	x22, x22, x27, ge  // ge = tcont
   57bd0:	mov	x1, x19
   57bd4:	mov	x0, x26
   57bd8:	mov	x2, #0x0                   	// #0
   57bdc:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   57be0:	cmp	w0, #0x0
   57be4:	b.gt	57b54 <mpfr_gamma_inc@@Base+0xa1c>
   57be8:	mov	x1, x19
   57bec:	cmp	x19, #0x1
   57bf0:	mov	x0, #0xffffffffffffffff    	// #-1
   57bf4:	b.eq	57c1c <mpfr_gamma_inc@@Base+0xae4>  // b.none
   57bf8:	b.ls	57fa0 <mpfr_gamma_inc@@Base+0xe68>  // b.plast
   57bfc:	sub	x0, x19, #0x1
   57c00:	mov	w1, #0x40                  	// #64
   57c04:	clz	x0, x0
   57c08:	mov	x2, #0x1                   	// #1
   57c0c:	sub	w1, w1, w0
   57c10:	sxtw	x0, w1
   57c14:	add	x1, x2, w1, sxtw #1
   57c18:	sub	x0, x0, #0x1
   57c1c:	ldp	x6, x3, [x23, #16]
   57c20:	add	x20, x20, x1
   57c24:	ldr	x1, [x23]
   57c28:	add	x22, x0, x22
   57c2c:	str	x1, [sp, #384]
   57c30:	cmp	x22, x20
   57c34:	ldr	x1, [sp, #144]
   57c38:	add	x20, x20, #0x1
   57c3c:	ldr	w0, [x23, #8]
   57c40:	csinc	x20, x20, x22, lt  // lt = tstop
   57c44:	mov	w2, #0x0                   	// #0
   57c48:	stp	x6, x3, [sp, #400]
   57c4c:	neg	w0, w0
   57c50:	str	w0, [sp, #392]
   57c54:	mov	x0, x28
   57c58:	bl	c750 <mpfr_exp@plt>
   57c5c:	sub	x19, x20, x27
   57c60:	mov	x2, x28
   57c64:	mov	x1, x24
   57c68:	mov	x0, x24
   57c6c:	mov	w3, #0x0                   	// #0
   57c70:	bl	bd50 <mpfr_mul@plt>
   57c74:	ldr	x0, [sp, #304]
   57c78:	cmp	x0, x25
   57c7c:	b.ne	57c88 <mpfr_gamma_inc@@Base+0xb50>  // b.any
   57c80:	ldr	x0, [sp, #336]
   57c84:	add	x27, x27, x0
   57c88:	ldr	x1, [sp, #144]
   57c8c:	cmp	x19, #0x2
   57c90:	mov	x0, #0x2                   	// #2
   57c94:	csel	x19, x19, x0, ge  // ge = tcont
   57c98:	mov	w2, #0x0                   	// #0
   57c9c:	add	x19, x19, x0
   57ca0:	mov	x0, x28
   57ca4:	bl	c9e0 <mpfr_eint@plt>
   57ca8:	mov	x1, x28
   57cac:	mov	w2, #0x0                   	// #0
   57cb0:	mov	x0, x28
   57cb4:	bl	bd70 <mpfr_neg@plt>
   57cb8:	ldr	x6, [sp, #304]
   57cbc:	mov	x2, x24
   57cc0:	mov	x1, x28
   57cc4:	mov	x0, x24
   57cc8:	cmp	x6, x25
   57ccc:	mov	w3, #0x0                   	// #0
   57cd0:	csel	x27, x27, x6, eq  // eq = none
   57cd4:	ldr	x20, [sp, #336]
   57cd8:	bl	bb70 <mpfr_sub@plt>
   57cdc:	ldr	x0, [sp, #304]
   57ce0:	cmp	x0, x25
   57ce4:	b.eq	57e64 <mpfr_gamma_inc@@Base+0xd2c>  // b.none
   57ce8:	add	x5, x19, x27
   57cec:	sub	x1, x20, #0x1
   57cf0:	cmp	x5, x1
   57cf4:	mov	w2, #0x0                   	// #0
   57cf8:	csinc	x20, x20, x5, lt  // lt = tstop
   57cfc:	mov	x1, x26
   57d00:	sub	x19, x20, x0
   57d04:	mov	x0, x28
   57d08:	bl	c7b0 <mpfr_gamma@plt>
   57d0c:	mov	x2, x26
   57d10:	mov	x1, x28
   57d14:	mov	w3, #0x0                   	// #0
   57d18:	mov	x0, x28
   57d1c:	bl	bd50 <mpfr_mul@plt>
   57d20:	mov	x2, x28
   57d24:	mov	x1, x24
   57d28:	mov	w3, #0x0                   	// #0
   57d2c:	mov	x0, x24
   57d30:	bl	c620 <mpfr_div@plt>
   57d34:	cmp	x19, #0x1
   57d38:	mov	x0, #0x4                   	// #4
   57d3c:	mov	w3, #0x0                   	// #0
   57d40:	csinc	x19, x0, x19, le
   57d44:	mov	x2, #0x0                   	// #0
   57d48:	mov	x1, #0xffffffffffffffff    	// #-1
   57d4c:	mov	x0, x28
   57d50:	bl	ba80 <mpfr_set_si_2exp@plt>
   57d54:	mov	x2, x26
   57d58:	mov	x1, x28
   57d5c:	mov	x0, x28
   57d60:	mov	w3, #0x0                   	// #0
   57d64:	bl	bd90 <mpfr_pow@plt>
   57d68:	ldr	w0, [sp, #328]
   57d6c:	tbnz	w0, #31, 57f10 <mpfr_gamma_inc@@Base+0xdd8>
   57d70:	ldr	x1, [sp, #304]
   57d74:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   57d78:	cmp	x1, x0
   57d7c:	b.le	57e64 <mpfr_gamma_inc@@Base+0xd2c>
   57d80:	ldr	x2, [sp, #104]
   57d84:	ldr	w0, [sp, #120]
   57d88:	ldr	x1, [sp, #288]
   57d8c:	cmp	w0, #0x0
   57d90:	ldr	x0, [sp, #312]
   57d94:	sub	x1, x1, #0x1
   57d98:	ldr	x3, [x2]
   57d9c:	asr	x1, x1, #6
   57da0:	ldr	x2, [sp, #96]
   57da4:	add	x1, x1, #0x1
   57da8:	cinc	x3, x3, eq  // eq = none
   57dac:	sub	x2, x2, x19
   57db0:	bl	c370 <mpfr_round_p@plt>
   57db4:	cbz	w0, 57e64 <mpfr_gamma_inc@@Base+0xd2c>
   57db8:	ldr	w2, [sp, #120]
   57dbc:	mov	x1, x24
   57dc0:	ldr	w3, [sp, #296]
   57dc4:	ldr	x0, [sp, #104]
   57dc8:	bl	c6a0 <mpfr_set4@plt>
   57dcc:	mov	w19, w0
   57dd0:	ldr	x1, [sp, #560]
   57dd4:	cbz	x1, 57de0 <mpfr_gamma_inc@@Base+0xca8>
   57dd8:	ldr	x0, [sp, #568]
   57ddc:	bl	cc20 <mpfr_free_func@plt>
   57de0:	ldr	x3, [sp, #112]
   57de4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   57de8:	ldr	x1, [x0, #2576]
   57dec:	add	x0, x0, #0xa10
   57df0:	blr	x1
   57df4:	ldr	w1, [sp, #124]
   57df8:	add	x2, x3, x0
   57dfc:	str	w1, [x3, x0]
   57e00:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   57e04:	ldr	x4, [x0, #2512]
   57e08:	add	x0, x0, #0x9d0
   57e0c:	blr	x4
   57e10:	ldr	x1, [sp, #104]
   57e14:	ldr	x4, [sp, #136]
   57e18:	str	x4, [x3, x0]
   57e1c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   57e20:	ldr	x5, [x0, #2544]
   57e24:	add	x0, x0, #0x9f0
   57e28:	blr	x5
   57e2c:	ldr	x1, [x1, #16]
   57e30:	ldr	x5, [sp, #128]
   57e34:	str	x5, [x3, x0]
   57e38:	cmp	x1, x5
   57e3c:	ccmp	x4, x1, #0x0, le
   57e40:	b.le	576cc <mpfr_gamma_inc@@Base+0x594>
   57e44:	ldr	w2, [sp, #120]
   57e48:	mov	w1, w19
   57e4c:	ldr	x0, [sp, #104]
   57e50:	bl	cb30 <mpfr_check_range@plt>
   57e54:	mov	w19, w0
   57e58:	ldp	x25, x26, [sp, #64]
   57e5c:	ldp	x27, x28, [sp, #80]
   57e60:	b	57430 <mpfr_gamma_inc@@Base+0x2f8>
   57e64:	ldr	x1, [sp, #96]
   57e68:	mov	x0, #0xfffffffffffffeff    	// #-257
   57e6c:	movk	x0, #0x7fff, lsl #48
   57e70:	sub	x0, x0, x1
   57e74:	ldr	x1, [sp, #152]
   57e78:	cmp	x0, x1
   57e7c:	b.lt	57fc4 <mpfr_gamma_inc@@Base+0xe8c>  // b.tstop
   57e80:	ldr	x0, [sp, #96]
   57e84:	ldr	x1, [sp, #152]
   57e88:	add	x2, x0, x1
   57e8c:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   57e90:	cmp	x2, x0
   57e94:	str	x2, [sp, #96]
   57e98:	add	x0, x2, x2, lsr #63
   57e9c:	ldr	x1, [sp, #560]
   57ea0:	asr	x0, x0, #1
   57ea4:	str	x0, [sp, #152]
   57ea8:	b.ge	57fdc <mpfr_gamma_inc@@Base+0xea4>  // b.tcont
   57eac:	sub	x19, x2, #0x1
   57eb0:	asr	x19, x19, #6
   57eb4:	add	x19, x19, #0x1
   57eb8:	lsl	x2, x19, #4
   57ebc:	str	x2, [sp, #560]
   57ec0:	cbnz	x1, 57f3c <mpfr_gamma_inc@@Base+0xe04>
   57ec4:	mov	x0, x2
   57ec8:	bl	ccf0 <mpfr_allocate_func@plt>
   57ecc:	str	x0, [sp, #568]
   57ed0:	ldr	x2, [sp, #96]
   57ed4:	mov	w1, #0x1                   	// #1
   57ed8:	add	x19, x0, x19, lsl #3
   57edc:	str	x2, [sp, #288]
   57ee0:	str	w1, [sp, #296]
   57ee4:	stp	x0, x2, [sp, #312]
   57ee8:	str	w1, [sp, #328]
   57eec:	str	x19, [sp, #344]
   57ef0:	ldr	x2, [x21, #16]
   57ef4:	b	57b00 <mpfr_gamma_inc@@Base+0x9c8>
   57ef8:	ldr	w2, [sp, #120]
   57efc:	mov	x1, x21
   57f00:	ldr	x0, [sp, #104]
   57f04:	bl	c7b0 <mpfr_gamma@plt>
   57f08:	mov	w19, w0
   57f0c:	b	57430 <mpfr_gamma_inc@@Base+0x2f8>
   57f10:	mov	x1, x24
   57f14:	mov	x0, x24
   57f18:	mov	w2, #0x0                   	// #0
   57f1c:	bl	bd70 <mpfr_neg@plt>
   57f20:	b	57d70 <mpfr_gamma_inc@@Base+0xc38>
   57f24:	lsl	x0, x19, #4
   57f28:	str	x0, [sp, #560]
   57f2c:	bl	ccf0 <mpfr_allocate_func@plt>
   57f30:	str	x0, [sp, #568]
   57f34:	ldr	x2, [x21, #16]
   57f38:	b	57ac0 <mpfr_gamma_inc@@Base+0x988>
   57f3c:	ldr	x0, [sp, #568]
   57f40:	bl	c1c0 <mpfr_reallocate_func@plt>
   57f44:	str	x0, [sp, #568]
   57f48:	b	57ed0 <mpfr_gamma_inc@@Base+0xd98>
   57f4c:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   57f50:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   57f54:	add	x2, x2, #0xeb0
   57f58:	add	x0, x0, #0x7c0
   57f5c:	mov	w1, #0x148                 	// #328
   57f60:	bl	cb40 <mpfr_assert_fail@plt>
   57f64:	tbz	w0, #31, 57820 <mpfr_gamma_inc@@Base+0x6e8>
   57f68:	b	573f8 <mpfr_gamma_inc@@Base+0x2c0>
   57f6c:	mrs	x1, tpidr_el0
   57f70:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   57f74:	ldr	x2, [x0, #2576]
   57f78:	add	x0, x0, #0xa10
   57f7c:	blr	x2
   57f80:	add	x0, x1, x0
   57f84:	mov	w19, #0x0                   	// #0
   57f88:	ldr	x1, [sp, #104]
   57f8c:	str	x20, [x1, #16]
   57f90:	ldr	w1, [x0]
   57f94:	orr	w1, w1, #0x4
   57f98:	str	w1, [x0]
   57f9c:	b	57430 <mpfr_gamma_inc@@Base+0x2f8>
   57fa0:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   57fa4:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   57fa8:	add	x2, x2, #0x7b8
   57fac:	add	x0, x0, #0x7c0
   57fb0:	mov	w1, #0x1a2                 	// #418
   57fb4:	bl	cb40 <mpfr_assert_fail@plt>
   57fb8:	mov	w0, #0x3                   	// #3
   57fbc:	str	w0, [sp, #120]
   57fc0:	b	57994 <mpfr_gamma_inc@@Base+0x85c>
   57fc4:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   57fc8:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   57fcc:	add	x2, x2, #0xeb0
   57fd0:	add	x0, x0, #0x7c0
   57fd4:	mov	w1, #0x1ee                 	// #494
   57fd8:	bl	cb40 <mpfr_assert_fail@plt>
   57fdc:	bl	c8e0 <mpfr_abort_prec_max@plt>
   57fe0:	stp	x29, x30, [sp, #-128]!
   57fe4:	mov	x29, sp
   57fe8:	stp	x19, x20, [sp, #16]
   57fec:	mov	x19, x1
   57ff0:	mov	x20, x0
   57ff4:	bl	bf90 <mpfr_mpz_init@plt>
   57ff8:	ldr	x1, [x19, #16]
   57ffc:	mov	x0, #0x4                   	// #4
   58000:	movk	x0, #0x8000, lsl #48
   58004:	cmp	x1, x0
   58008:	b.eq	580d4 <mpfr_gamma_inc@@Base+0xf9c>  // b.none
   5800c:	mrs	x4, tpidr_el0
   58010:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58014:	ldr	x2, [x0, #2576]
   58018:	add	x0, x0, #0xa10
   5801c:	blr	x2
   58020:	stp	x25, x26, [sp, #64]
   58024:	add	x25, x4, x0
   58028:	add	x5, sp, #0x58
   5802c:	ldr	w26, [x4, x0]
   58030:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58034:	ldr	x2, [x0, #2512]
   58038:	add	x0, x0, #0x9d0
   5803c:	blr	x2
   58040:	stp	x21, x22, [sp, #32]
   58044:	add	x22, x4, x0
   58048:	mov	x7, #0xc000000000000001    	// #-4611686018427387903
   5804c:	stp	x23, x24, [sp, #48]
   58050:	mov	x6, #0x3fffffffffffffff    	// #4611686018427387903
   58054:	mov	x9, #0x40                  	// #64
   58058:	ldr	x24, [x4, x0]
   5805c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58060:	ldr	x2, [x0, #2544]
   58064:	add	x0, x0, #0x9f0
   58068:	blr	x2
   5806c:	add	x21, x4, x0
   58070:	mov	w8, #0x1                   	// #1
   58074:	add	x19, sp, #0x60
   58078:	mov	w3, #0x0                   	// #0
   5807c:	mov	x2, #0x0                   	// #0
   58080:	str	x7, [x22]
   58084:	str	x9, [sp, #96]
   58088:	str	w8, [sp, #104]
   5808c:	str	x5, [sp, #120]
   58090:	ldr	x23, [x4, x0]
   58094:	mov	x0, x19
   58098:	str	x6, [x21]
   5809c:	bl	ba80 <mpfr_set_si_2exp@plt>
   580a0:	mov	x1, x19
   580a4:	mov	x0, x20
   580a8:	mov	w2, #0x0                   	// #0
   580ac:	bl	be00 <mpfr_get_z@plt>
   580b0:	str	x23, [x21]
   580b4:	str	x24, [x22]
   580b8:	ldp	x21, x22, [sp, #32]
   580bc:	ldp	x23, x24, [sp, #48]
   580c0:	str	w26, [x25]
   580c4:	ldp	x19, x20, [sp, #16]
   580c8:	ldp	x25, x26, [sp, #64]
   580cc:	ldp	x29, x30, [sp], #128
   580d0:	ret
   580d4:	add	x1, x19, #0x20
   580d8:	mov	x0, x20
   580dc:	bl	bfa0 <__gmpz_set@plt>
   580e0:	ldp	x19, x20, [sp, #16]
   580e4:	ldp	x29, x30, [sp], #128
   580e8:	ret
   580ec:	nop

00000000000580f0 <mpfr_ubf_mul_exact@@Base>:
   580f0:	stp	x29, x30, [sp, #-96]!
   580f4:	mov	x29, sp
   580f8:	stp	x19, x20, [sp, #16]
   580fc:	mov	x19, x1
   58100:	ldr	w3, [x2, #8]
   58104:	stp	x21, x22, [sp, #32]
   58108:	mov	x21, x0
   5810c:	ldr	w0, [x19, #8]
   58110:	mov	x20, x2
   58114:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   58118:	ldr	x2, [x19, #16]
   5811c:	mul	w0, w0, w3
   58120:	str	w0, [x21, #8]
   58124:	cmp	x2, x1
   58128:	b.le	582f4 <mpfr_ubf_mul_exact@@Base+0x204>
   5812c:	ldr	x0, [x20, #16]
   58130:	cmp	x0, x1
   58134:	b.le	58320 <mpfr_ubf_mul_exact@@Base+0x230>
   58138:	ldr	x2, [x19]
   5813c:	stp	x23, x24, [sp, #48]
   58140:	ldr	x0, [x20]
   58144:	sub	x2, x2, #0x1
   58148:	ldr	x4, [x19, #24]
   5814c:	sub	x0, x0, #0x1
   58150:	asr	x2, x2, #6
   58154:	asr	x0, x0, #6
   58158:	orr	x3, x2, x0
   5815c:	ldr	x1, [x20, #24]
   58160:	ldr	x22, [x21, #24]
   58164:	cbnz	x3, 58274 <mpfr_ubf_mul_exact@@Base+0x184>
   58168:	ldr	x2, [x1]
   5816c:	ldr	x0, [x4]
   58170:	umulh	x1, x0, x2
   58174:	mul	x0, x0, x2
   58178:	stp	x0, x1, [x22]
   5817c:	tbnz	x1, #63, 582a0 <mpfr_ubf_mul_exact@@Base+0x1b0>
   58180:	mov	x23, #0x1                   	// #1
   58184:	extr	x1, x1, x0, #63
   58188:	lsl	x0, x0, #1
   5818c:	stp	x0, x1, [x22]
   58190:	mov	x0, #0x4                   	// #4
   58194:	ldr	x1, [x19, #16]
   58198:	movk	x0, #0x8000, lsl #48
   5819c:	cmp	x1, x0
   581a0:	b.eq	581f8 <mpfr_ubf_mul_exact@@Base+0x108>  // b.none
   581a4:	ldr	x2, [x20, #16]
   581a8:	cmp	x2, x0
   581ac:	b.eq	581f8 <mpfr_ubf_mul_exact@@Base+0x108>  // b.none
   581b0:	mrs	x3, tpidr_el0
   581b4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   581b8:	ldr	x4, [x0, #2512]
   581bc:	add	x0, x0, #0x9d0
   581c0:	blr	x4
   581c4:	add	x1, x1, x2
   581c8:	sub	x1, x1, x23
   581cc:	ldr	x0, [x3, x0]
   581d0:	cmp	x0, x1
   581d4:	b.gt	581f8 <mpfr_ubf_mul_exact@@Base+0x108>
   581d8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   581dc:	ldr	x2, [x0, #2544]
   581e0:	add	x0, x0, #0x9f0
   581e4:	blr	x2
   581e8:	ldr	x0, [x3, x0]
   581ec:	cmp	x0, x1
   581f0:	b.ge	582dc <mpfr_ubf_mul_exact@@Base+0x1ec>  // b.tcont
   581f4:	nop
   581f8:	add	x24, x21, #0x20
   581fc:	add	x22, sp, #0x40
   58200:	mov	x0, x24
   58204:	bl	bf90 <mpfr_mpz_init@plt>
   58208:	mov	x1, x19
   5820c:	mov	x0, x22
   58210:	add	x19, sp, #0x50
   58214:	bl	57fe0 <mpfr_gamma_inc@@Base+0xea8>
   58218:	mov	x1, x20
   5821c:	mov	x0, x19
   58220:	bl	57fe0 <mpfr_gamma_inc@@Base+0xea8>
   58224:	mov	x2, x19
   58228:	mov	x1, x22
   5822c:	mov	x0, x24
   58230:	bl	c9c0 <__gmpz_add@plt>
   58234:	mov	x0, x22
   58238:	bl	c170 <mpfr_mpz_clear@plt>
   5823c:	mov	x0, x19
   58240:	bl	c170 <mpfr_mpz_clear@plt>
   58244:	mov	x0, x24
   58248:	mov	x2, x23
   5824c:	mov	x1, x24
   58250:	bl	bc30 <__gmpz_sub_ui@plt>
   58254:	mov	x0, #0x4                   	// #4
   58258:	movk	x0, #0x8000, lsl #48
   5825c:	ldp	x23, x24, [sp, #48]
   58260:	str	x0, [x21, #16]
   58264:	ldp	x19, x20, [sp, #16]
   58268:	ldp	x21, x22, [sp, #32]
   5826c:	ldp	x29, x30, [sp], #96
   58270:	ret
   58274:	add	x24, x2, #0x1
   58278:	add	x23, x0, #0x1
   5827c:	cmp	x2, x0
   58280:	b.lt	582a8 <mpfr_ubf_mul_exact@@Base+0x1b8>  // b.tstop
   58284:	mov	x3, x1
   58288:	mov	x2, x24
   5828c:	mov	x1, x4
   58290:	mov	x0, x22
   58294:	mov	x4, x23
   58298:	bl	c7a0 <__gmpn_mul@plt>
   5829c:	tbz	x0, #63, 582c0 <mpfr_ubf_mul_exact@@Base+0x1d0>
   582a0:	mov	x23, #0x0                   	// #0
   582a4:	b	58190 <mpfr_ubf_mul_exact@@Base+0xa0>
   582a8:	mov	x3, x4
   582ac:	mov	x2, x23
   582b0:	mov	x4, x24
   582b4:	mov	x0, x22
   582b8:	bl	c7a0 <__gmpn_mul@plt>
   582bc:	tbnz	x0, #63, 582a0 <mpfr_ubf_mul_exact@@Base+0x1b0>
   582c0:	add	x2, x24, x23
   582c4:	mov	x1, x22
   582c8:	mov	x0, x22
   582cc:	mov	w3, #0x1                   	// #1
   582d0:	mov	x23, #0x1                   	// #1
   582d4:	bl	bcc0 <__gmpn_lshift@plt>
   582d8:	b	58190 <mpfr_ubf_mul_exact@@Base+0xa0>
   582dc:	ldp	x23, x24, [sp, #48]
   582e0:	str	x1, [x21, #16]
   582e4:	ldp	x19, x20, [sp, #16]
   582e8:	ldp	x21, x22, [sp, #32]
   582ec:	ldp	x29, x30, [sp], #96
   582f0:	ret
   582f4:	mov	x0, #0x2                   	// #2
   582f8:	movk	x0, #0x8000, lsl #48
   582fc:	cmp	x2, x0
   58300:	b.ne	58344 <mpfr_ubf_mul_exact@@Base+0x254>  // b.any
   58304:	mov	x0, #0x2                   	// #2
   58308:	movk	x0, #0x8000, lsl #48
   5830c:	str	x0, [x21, #16]
   58310:	ldp	x19, x20, [sp, #16]
   58314:	ldp	x21, x22, [sp, #32]
   58318:	ldp	x29, x30, [sp], #96
   5831c:	ret
   58320:	mov	x2, #0x2                   	// #2
   58324:	movk	x2, #0x8000, lsl #48
   58328:	cmp	x0, x2
   5832c:	b.eq	58304 <mpfr_ubf_mul_exact@@Base+0x214>  // b.none
   58330:	cmp	x0, x1
   58334:	b.eq	58364 <mpfr_ubf_mul_exact@@Base+0x274>  // b.none
   58338:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5833c:	str	x0, [x21, #16]
   58340:	b	58264 <mpfr_ubf_mul_exact@@Base+0x174>
   58344:	ldr	x3, [x20, #16]
   58348:	cmp	x3, x0
   5834c:	b.eq	58304 <mpfr_ubf_mul_exact@@Base+0x214>  // b.none
   58350:	cmp	x2, x1
   58354:	b.ne	58370 <mpfr_ubf_mul_exact@@Base+0x280>  // b.any
   58358:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5835c:	cmp	x3, x0
   58360:	b.eq	58304 <mpfr_ubf_mul_exact@@Base+0x214>  // b.none
   58364:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   58368:	str	x0, [x21, #16]
   5836c:	b	58264 <mpfr_ubf_mul_exact@@Base+0x174>
   58370:	cmp	x3, x1
   58374:	b.ne	58338 <mpfr_ubf_mul_exact@@Base+0x248>  // b.any
   58378:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   5837c:	cmp	x2, x0
   58380:	b.eq	58304 <mpfr_ubf_mul_exact@@Base+0x214>  // b.none
   58384:	b	58364 <mpfr_ubf_mul_exact@@Base+0x274>

0000000000058388 <mpfr_ubf_exp_less_p@@Base>:
   58388:	stp	x29, x30, [sp, #-80]!
   5838c:	mov	x29, sp
   58390:	stp	x19, x20, [sp, #16]
   58394:	add	x20, sp, #0x30
   58398:	add	x19, sp, #0x40
   5839c:	str	x21, [sp, #32]
   583a0:	mov	x21, x1
   583a4:	mov	x1, x0
   583a8:	mov	x0, x20
   583ac:	bl	57fe0 <mpfr_gamma_inc@@Base+0xea8>
   583b0:	mov	x1, x21
   583b4:	mov	x0, x19
   583b8:	bl	57fe0 <mpfr_gamma_inc@@Base+0xea8>
   583bc:	mov	x1, x19
   583c0:	mov	x0, x20
   583c4:	bl	c8d0 <__gmpz_cmp@plt>
   583c8:	mov	w1, w0
   583cc:	mov	x0, x20
   583d0:	mov	w20, w1
   583d4:	bl	c170 <mpfr_mpz_clear@plt>
   583d8:	mov	x0, x19
   583dc:	bl	c170 <mpfr_mpz_clear@plt>
   583e0:	lsr	w0, w20, #31
   583e4:	ldp	x19, x20, [sp, #16]
   583e8:	ldr	x21, [sp, #32]
   583ec:	ldp	x29, x30, [sp], #80
   583f0:	ret
   583f4:	nop

00000000000583f8 <mpfr_ubf_zexp2exp@@Base>:
   583f8:	stp	x29, x30, [sp, #-112]!
   583fc:	mov	x29, sp
   58400:	ldr	w1, [x0, #4]
   58404:	stp	x19, x20, [sp, #16]
   58408:	mov	x19, #0x0                   	// #0
   5840c:	cbz	w1, 584d4 <mpfr_ubf_zexp2exp@@Base+0xdc>
   58410:	mrs	x2, tpidr_el0
   58414:	mov	x19, x0
   58418:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   5841c:	ldr	x3, [x0, #2576]
   58420:	add	x0, x0, #0xa10
   58424:	blr	x3
   58428:	stp	x25, x26, [sp, #64]
   5842c:	add	x25, x2, x0
   58430:	ldr	w26, [x2, x0]
   58434:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58438:	ldr	x5, [x0, #2512]
   5843c:	add	x0, x0, #0x9d0
   58440:	blr	x5
   58444:	stp	x21, x22, [sp, #32]
   58448:	add	x22, x2, x0
   5844c:	mov	x4, #0xc000000000000001    	// #-4611686018427387903
   58450:	stp	x23, x24, [sp, #48]
   58454:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   58458:	add	x20, sp, #0x50
   5845c:	ldr	x24, [x2, x0]
   58460:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58464:	ldr	x5, [x0, #2544]
   58468:	add	x0, x0, #0x9f0
   5846c:	blr	x5
   58470:	cmp	w1, #0x0
   58474:	add	x21, x2, x0
   58478:	cneg	w1, w1, lt  // lt = tstop
   5847c:	str	x4, [x22]
   58480:	ldr	x23, [x2, x0]
   58484:	sbfiz	x1, x1, #6, #32
   58488:	mov	x0, x20
   5848c:	str	x3, [x21]
   58490:	bl	ca80 <mpfr_init2@plt>
   58494:	mov	x1, x19
   58498:	mov	w2, #0x0                   	// #0
   5849c:	mov	x0, x20
   584a0:	bl	c240 <mpfr_set_z@plt>
   584a4:	mov	w1, #0x1                   	// #1
   584a8:	mov	x0, x20
   584ac:	bl	c190 <mpfr_get_si@plt>
   584b0:	mov	x19, x0
   584b4:	mov	x0, x20
   584b8:	bl	c070 <mpfr_clear@plt>
   584bc:	str	x23, [x21]
   584c0:	str	x24, [x22]
   584c4:	ldp	x21, x22, [sp, #32]
   584c8:	ldp	x23, x24, [sp, #48]
   584cc:	str	w26, [x25]
   584d0:	ldp	x25, x26, [sp, #64]
   584d4:	mov	x0, x19
   584d8:	ldp	x19, x20, [sp, #16]
   584dc:	ldp	x29, x30, [sp], #112
   584e0:	ret
   584e4:	nop

00000000000584e8 <mpfr_ubf_diff_exp@@Base>:
   584e8:	stp	x29, x30, [sp, #-80]!
   584ec:	mov	x29, sp
   584f0:	stp	x19, x20, [sp, #16]
   584f4:	add	x19, sp, #0x30
   584f8:	add	x20, sp, #0x40
   584fc:	str	x21, [sp, #32]
   58500:	mov	x21, x1
   58504:	mov	x1, x0
   58508:	mov	x0, x19
   5850c:	bl	57fe0 <mpfr_gamma_inc@@Base+0xea8>
   58510:	mov	x1, x21
   58514:	mov	x0, x20
   58518:	bl	57fe0 <mpfr_gamma_inc@@Base+0xea8>
   5851c:	mov	x2, x20
   58520:	mov	x1, x19
   58524:	mov	x0, x19
   58528:	bl	bde0 <__gmpz_sub@plt>
   5852c:	mov	x0, x20
   58530:	bl	c170 <mpfr_mpz_clear@plt>
   58534:	mov	x0, x19
   58538:	bl	bc40 <mpfr_ubf_zexp2exp@plt>
   5853c:	mov	x20, x0
   58540:	mov	x0, x19
   58544:	bl	c170 <mpfr_mpz_clear@plt>
   58548:	mov	x0, x20
   5854c:	ldp	x19, x20, [sp, #16]
   58550:	ldr	x21, [sp, #32]
   58554:	ldp	x29, x30, [sp], #80
   58558:	ret
   5855c:	nop

0000000000058560 <mpfr_beta@@Base>:
   58560:	stp	x29, x30, [sp, #-400]!
   58564:	mov	x29, sp
   58568:	stp	x27, x28, [sp, #80]
   5856c:	mov	x27, x1
   58570:	mov	x1, x2
   58574:	stp	x19, x20, [sp, #16]
   58578:	mov	x20, x0
   5857c:	mov	x0, x27
   58580:	stp	x21, x22, [sp, #32]
   58584:	mov	w22, w3
   58588:	stp	x23, x24, [sp, #48]
   5858c:	mov	x23, x2
   58590:	bl	ca00 <mpfr_less_p@plt>
   58594:	cbnz	w0, 589cc <mpfr_beta@@Base+0x46c>
   58598:	ldr	x21, [x27, #16]
   5859c:	mov	w19, w0
   585a0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   585a4:	cmp	x21, x0
   585a8:	b.le	58ab4 <mpfr_beta@@Base+0x554>
   585ac:	ldr	x1, [x23, #16]
   585b0:	cmp	x1, x0
   585b4:	b.le	58ac8 <mpfr_beta@@Base+0x568>
   585b8:	mov	x0, x23
   585bc:	bl	c160 <mpfr_integer_p@plt>
   585c0:	mov	w24, w0
   585c4:	cbz	w0, 585d0 <mpfr_beta@@Base+0x70>
   585c8:	ldr	w0, [x23, #8]
   585cc:	tbnz	w0, #31, 58a00 <mpfr_beta@@Base+0x4a0>
   585d0:	mov	x0, x27
   585d4:	bl	c160 <mpfr_integer_p@plt>
   585d8:	cbnz	w0, 586cc <mpfr_beta@@Base+0x16c>
   585dc:	mrs	x21, tpidr_el0
   585e0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   585e4:	ldr	x1, [x0, #2576]
   585e8:	add	x0, x0, #0xa10
   585ec:	blr	x1
   585f0:	stp	x25, x26, [sp, #64]
   585f4:	ldr	w0, [x21, x0]
   585f8:	str	w0, [sp, #96]
   585fc:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58600:	ldr	x1, [x0, #2512]
   58604:	add	x0, x0, #0x9d0
   58608:	blr	x1
   5860c:	add	x28, x21, x0
   58610:	ldr	x2, [x23]
   58614:	mov	x8, #0xc000000000000001    	// #-4611686018427387903
   58618:	ldr	x3, [x27]
   5861c:	ldr	x1, [x23, #16]
   58620:	ldr	x6, [x27, #16]
   58624:	sub	x2, x1, x2
   58628:	ldr	x4, [x21, x0]
   5862c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58630:	ldr	x5, [x0, #2544]
   58634:	add	x0, x0, #0x9f0
   58638:	blr	x5
   5863c:	sub	x3, x6, x3
   58640:	cmp	x1, x6
   58644:	add	x26, x21, x0
   58648:	csel	x1, x1, x6, ge  // ge = tcont
   5864c:	cmp	x2, x3
   58650:	add	x1, x1, #0x1
   58654:	csel	x2, x2, x3, le
   58658:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   5865c:	sub	x1, x1, x2
   58660:	str	x8, [x28]
   58664:	ldr	x2, [x21, x0]
   58668:	str	x3, [x26]
   5866c:	stp	x4, x2, [sp, #104]
   58670:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   58674:	cmp	x1, x0
   58678:	b.cc	586fc <mpfr_beta@@Base+0x19c>  // b.lo, b.ul, b.last
   5867c:	ldr	w0, [sp, #96]
   58680:	str	x2, [x26]
   58684:	orr	w23, w0, #0x4
   58688:	ldp	x25, x26, [sp, #64]
   5868c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58690:	ldr	x1, [x0, #2576]
   58694:	add	x0, x0, #0xa10
   58698:	blr	x1
   5869c:	mov	x1, #0x2                   	// #2
   586a0:	str	w23, [x21, x0]
   586a4:	movk	x1, #0x8000, lsl #48
   586a8:	str	x4, [x28]
   586ac:	str	x1, [x20, #16]
   586b0:	mov	w0, w19
   586b4:	ldp	x19, x20, [sp, #16]
   586b8:	ldp	x21, x22, [sp, #32]
   586bc:	ldp	x23, x24, [sp, #48]
   586c0:	ldp	x27, x28, [sp, #80]
   586c4:	ldp	x29, x30, [sp], #400
   586c8:	ret
   586cc:	mrs	x21, tpidr_el0
   586d0:	ldr	w1, [x27, #8]
   586d4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   586d8:	ldr	x2, [x0, #2576]
   586dc:	add	x0, x0, #0xa10
   586e0:	blr	x2
   586e4:	add	x2, x21, x0
   586e8:	ldr	w0, [x21, x0]
   586ec:	str	w0, [sp, #96]
   586f0:	tbnz	w1, #31, 58a68 <mpfr_beta@@Base+0x508>
   586f4:	stp	x25, x26, [sp, #64]
   586f8:	b	585fc <mpfr_beta@@Base+0x9c>
   586fc:	add	x25, sp, #0xa0
   58700:	mov	x0, x25
   58704:	bl	ca80 <mpfr_init2@plt>
   58708:	mov	x1, x27
   5870c:	mov	x0, x25
   58710:	mov	x2, x23
   58714:	mov	w3, #0x0                   	// #0
   58718:	bl	c1a0 <mpfr_add@plt>
   5871c:	mov	w19, w0
   58720:	ldr	x1, [sp, #176]
   58724:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   58728:	cmp	x1, x0
   5872c:	b.eq	59130 <mpfr_beta@@Base+0xbd0>  // b.none
   58730:	cbnz	w19, 5917c <mpfr_beta@@Base+0xc1c>
   58734:	mov	x0, x25
   58738:	bl	c710 <mpfr_sgn@plt>
   5873c:	cmp	w0, #0x0
   58740:	ccmp	w24, #0x0, #0x0, le
   58744:	b.eq	58b68 <mpfr_beta@@Base+0x608>  // b.none
   58748:	ldr	x28, [x20]
   5874c:	cmp	x28, #0x1
   58750:	b.eq	58bf0 <mpfr_beta@@Base+0x690>  // b.none
   58754:	b.le	591ac <mpfr_beta@@Base+0xc4c>
   58758:	sub	x1, x28, #0x1
   5875c:	mov	w0, #0x40                  	// #64
   58760:	clz	x1, x1
   58764:	mov	x2, #0x7fffffffffffff00    	// #9223372036854775552
   58768:	sub	w0, w0, w1
   5876c:	add	x28, x28, w0, sxtw
   58770:	cmp	x28, x2
   58774:	b.ge	591c4 <mpfr_beta@@Base+0xc64>  // b.tcont
   58778:	sub	x3, x28, #0x1
   5877c:	asr	x2, x3, #6
   58780:	add	x2, x2, #0x1
   58784:	lsl	x0, x2, #1
   58788:	cmp	x0, #0x10
   5878c:	b.gt	58b48 <mpfr_beta@@Base+0x5e8>
   58790:	add	x7, sp, #0x110
   58794:	mov	x1, #0x0                   	// #0
   58798:	mov	x0, x7
   5879c:	str	x7, [sp, #264]
   587a0:	adrp	x8, 64000 <mpfr_bases@@Base+0x1e58>
   587a4:	add	x4, x8, #0x880
   587a8:	adrp	x7, 64000 <mpfr_bases@@Base+0x1e58>
   587ac:	add	x26, sp, #0xe0
   587b0:	add	x24, sp, #0xc0
   587b4:	str	x4, [sp, #144]
   587b8:	add	x4, x7, #0x878
   587bc:	add	x2, x0, x2, lsl #3
   587c0:	mov	w7, #0x1                   	// #1
   587c4:	str	x4, [sp, #152]
   587c8:	mov	x4, #0x40                  	// #64
   587cc:	str	x4, [sp, #136]
   587d0:	str	x28, [sp, #192]
   587d4:	str	w7, [sp, #200]
   587d8:	stp	x0, x28, [sp, #216]
   587dc:	str	w7, [sp, #232]
   587e0:	str	x2, [sp, #248]
   587e4:	asr	x3, x3, #6
   587e8:	add	x3, x3, #0x1
   587ec:	str	x3, [sp, #120]
   587f0:	lsl	x2, x3, #4
   587f4:	str	x2, [sp, #256]
   587f8:	cbnz	x1, 58a9c <mpfr_beta@@Base+0x53c>
   587fc:	mov	x0, x2
   58800:	bl	ccf0 <mpfr_allocate_func@plt>
   58804:	ldr	x3, [sp, #120]
   58808:	mov	x7, x0
   5880c:	str	x0, [sp, #264]
   58810:	add	x3, x7, x3, lsl #3
   58814:	mov	w8, #0x1                   	// #1
   58818:	mov	x1, x27
   5881c:	mov	w2, #0x0                   	// #0
   58820:	mov	x0, x24
   58824:	str	x28, [sp, #192]
   58828:	str	w8, [sp, #200]
   5882c:	stp	x7, x28, [sp, #216]
   58830:	str	w8, [sp, #232]
   58834:	str	x3, [sp, #248]
   58838:	bl	c7b0 <mpfr_gamma@plt>
   5883c:	mov	w8, w0
   58840:	mov	x1, x23
   58844:	mov	w2, #0x0                   	// #0
   58848:	mov	x0, x26
   5884c:	str	w8, [sp, #120]
   58850:	bl	c7b0 <mpfr_gamma@plt>
   58854:	ldr	w8, [sp, #120]
   58858:	mov	w3, #0x0                   	// #0
   5885c:	mov	x2, x26
   58860:	mov	x1, x24
   58864:	orr	w8, w0, w8
   58868:	mov	x0, x24
   5886c:	str	w8, [sp, #128]
   58870:	bl	bd50 <mpfr_mul@plt>
   58874:	mov	w7, w0
   58878:	mov	x1, x25
   5887c:	mov	w2, #0x0                   	// #0
   58880:	mov	x0, x26
   58884:	str	w7, [sp, #120]
   58888:	bl	c7b0 <mpfr_gamma@plt>
   5888c:	ldr	w7, [sp, #120]
   58890:	mov	x1, x24
   58894:	ldr	w8, [sp, #128]
   58898:	mov	x2, x26
   5889c:	orr	w7, w7, w0
   588a0:	mov	w3, #0x0                   	// #0
   588a4:	orr	w7, w7, w8
   588a8:	mov	x0, x24
   588ac:	str	w7, [sp, #120]
   588b0:	bl	c620 <mpfr_div@plt>
   588b4:	ldr	w7, [sp, #120]
   588b8:	ldr	x1, [sp, #208]
   588bc:	orr	w7, w0, w7
   588c0:	mov	x0, #0x2                   	// #2
   588c4:	movk	x0, #0x8000, lsl #48
   588c8:	cmp	x1, x0
   588cc:	b.eq	58f70 <mpfr_beta@@Base+0xa10>  // b.none
   588d0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   588d4:	cmp	x1, x0
   588d8:	b.le	58bbc <mpfr_beta@@Base+0x65c>
   588dc:	cbz	w7, 5890c <mpfr_beta@@Base+0x3ac>
   588e0:	ldr	x1, [sp, #192]
   588e4:	cmp	w22, #0x0
   588e8:	ldr	x0, [sp, #216]
   588ec:	sub	x1, x1, #0x1
   588f0:	ldr	x3, [x20]
   588f4:	asr	x1, x1, #6
   588f8:	sub	x2, x28, #0x3
   588fc:	add	x1, x1, #0x1
   58900:	cinc	x3, x3, eq  // eq = none
   58904:	bl	c370 <mpfr_round_p@plt>
   58908:	cbz	w0, 58bfc <mpfr_beta@@Base+0x69c>
   5890c:	ldr	w3, [sp, #200]
   58910:	mov	x1, x24
   58914:	mov	w2, w22
   58918:	mov	x0, x20
   5891c:	bl	c6a0 <mpfr_set4@plt>
   58920:	mov	w19, w0
   58924:	ldr	x1, [sp, #256]
   58928:	cbz	x1, 58934 <mpfr_beta@@Base+0x3d4>
   5892c:	ldr	x0, [sp, #264]
   58930:	bl	cc20 <mpfr_free_func@plt>
   58934:	mov	x0, x25
   58938:	bl	c070 <mpfr_clear@plt>
   5893c:	ldr	x1, [x20, #16]
   58940:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58944:	ldr	x2, [x0, #2576]
   58948:	add	x0, x0, #0xa10
   5894c:	blr	x2
   58950:	ldr	w2, [sp, #96]
   58954:	str	w2, [x21, x0]
   58958:	add	x2, x21, x0
   5895c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58960:	ldr	x3, [x0, #2512]
   58964:	add	x0, x0, #0x9d0
   58968:	blr	x3
   5896c:	ldr	x3, [sp, #104]
   58970:	str	x3, [x21, x0]
   58974:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58978:	ldr	x4, [x0, #2544]
   5897c:	add	x0, x0, #0x9f0
   58980:	blr	x4
   58984:	ldr	x4, [sp, #112]
   58988:	str	x4, [x21, x0]
   5898c:	cmp	x4, x1
   58990:	ccmp	x3, x1, #0x0, ge  // ge = tcont
   58994:	b.le	58a84 <mpfr_beta@@Base+0x524>
   58998:	mov	w1, w19
   5899c:	mov	w2, w22
   589a0:	mov	x0, x20
   589a4:	bl	cb30 <mpfr_check_range@plt>
   589a8:	mov	w19, w0
   589ac:	ldp	x25, x26, [sp, #64]
   589b0:	mov	w0, w19
   589b4:	ldp	x19, x20, [sp, #16]
   589b8:	ldp	x21, x22, [sp, #32]
   589bc:	ldp	x23, x24, [sp, #48]
   589c0:	ldp	x27, x28, [sp, #80]
   589c4:	ldp	x29, x30, [sp], #400
   589c8:	ret
   589cc:	mov	w3, w22
   589d0:	mov	x2, x27
   589d4:	mov	x1, x23
   589d8:	mov	x0, x20
   589dc:	bl	58560 <mpfr_beta@@Base>
   589e0:	mov	w19, w0
   589e4:	mov	w0, w19
   589e8:	ldp	x19, x20, [sp, #16]
   589ec:	ldp	x21, x22, [sp, #32]
   589f0:	ldp	x23, x24, [sp, #48]
   589f4:	ldp	x27, x28, [sp, #80]
   589f8:	ldp	x29, x30, [sp], #400
   589fc:	ret
   58a00:	ldr	w0, [x27, #8]
   58a04:	tbnz	w0, #31, 58a1c <mpfr_beta@@Base+0x4bc>
   58a08:	mov	x1, x23
   58a0c:	mov	x0, x27
   58a10:	bl	c9b0 <mpfr_cmpabs@plt>
   58a14:	cmp	w0, #0x0
   58a18:	b.le	58ccc <mpfr_beta@@Base+0x76c>
   58a1c:	mrs	x1, tpidr_el0
   58a20:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58a24:	ldr	x2, [x0, #2576]
   58a28:	add	x0, x0, #0xa10
   58a2c:	blr	x2
   58a30:	add	x0, x1, x0
   58a34:	mov	x1, #0x2                   	// #2
   58a38:	movk	x1, #0x8000, lsl #48
   58a3c:	str	x1, [x20, #16]
   58a40:	ldp	x21, x22, [sp, #32]
   58a44:	ldr	w1, [x0]
   58a48:	ldp	x23, x24, [sp, #48]
   58a4c:	orr	w1, w1, #0x4
   58a50:	str	w1, [x0]
   58a54:	mov	w0, w19
   58a58:	ldp	x19, x20, [sp, #16]
   58a5c:	ldp	x27, x28, [sp, #80]
   58a60:	ldp	x29, x30, [sp], #400
   58a64:	ret
   58a68:	mov	w0, w0
   58a6c:	orr	w23, w0, #0x4
   58a70:	mov	x0, #0x2                   	// #2
   58a74:	movk	x0, #0x8000, lsl #48
   58a78:	str	w23, [x2]
   58a7c:	str	x0, [x20, #16]
   58a80:	b	586b0 <mpfr_beta@@Base+0x150>
   58a84:	cbz	w19, 589ac <mpfr_beta@@Base+0x44c>
   58a88:	ldr	w0, [sp, #96]
   58a8c:	ldp	x25, x26, [sp, #64]
   58a90:	orr	w23, w0, #0x8
   58a94:	str	w23, [x2]
   58a98:	b	586b0 <mpfr_beta@@Base+0x150>
   58a9c:	ldr	x0, [sp, #264]
   58aa0:	bl	c1c0 <mpfr_reallocate_func@plt>
   58aa4:	mov	x7, x0
   58aa8:	str	x0, [sp, #264]
   58aac:	ldr	x3, [sp, #120]
   58ab0:	b	58810 <mpfr_beta@@Base+0x2b0>
   58ab4:	mov	x0, #0x2                   	// #2
   58ab8:	movk	x0, #0x8000, lsl #48
   58abc:	cmp	x21, x0
   58ac0:	b.eq	58a1c <mpfr_beta@@Base+0x4bc>  // b.none
   58ac4:	ldr	x1, [x23, #16]
   58ac8:	mov	x24, #0x2                   	// #2
   58acc:	movk	x24, #0x8000, lsl #48
   58ad0:	cmp	x1, x24
   58ad4:	b.eq	58a1c <mpfr_beta@@Base+0x4bc>  // b.none
   58ad8:	stp	x25, x26, [sp, #64]
   58adc:	mov	x25, #0x8000000000000003    	// #-9223372036854775805
   58ae0:	cmp	x1, x25
   58ae4:	ccmp	x21, x25, #0x4, ne  // ne = any
   58ae8:	b.ne	58d8c <mpfr_beta@@Base+0x82c>  // b.any
   58aec:	cmp	x21, x25
   58af0:	b.eq	58bd4 <mpfr_beta@@Base+0x674>  // b.none
   58af4:	mov	x0, x27
   58af8:	bl	c710 <mpfr_sgn@plt>
   58afc:	cmp	w0, #0x0
   58b00:	b.le	58b10 <mpfr_beta@@Base+0x5b0>
   58b04:	mov	x0, x27
   58b08:	bl	c160 <mpfr_integer_p@plt>
   58b0c:	cbnz	w0, 590a0 <mpfr_beta@@Base+0xb40>
   58b10:	mrs	x1, tpidr_el0
   58b14:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58b18:	ldr	x2, [x0, #2576]
   58b1c:	add	x0, x0, #0xa10
   58b20:	blr	x2
   58b24:	add	x0, x1, x0
   58b28:	mov	x1, #0x2                   	// #2
   58b2c:	movk	x1, #0x8000, lsl #48
   58b30:	ldp	x25, x26, [sp, #64]
   58b34:	str	x1, [x20, #16]
   58b38:	ldr	w1, [x0]
   58b3c:	orr	w1, w1, #0x4
   58b40:	str	w1, [x0]
   58b44:	b	586b0 <mpfr_beta@@Base+0x150>
   58b48:	lsl	x0, x2, #4
   58b4c:	stp	x2, x3, [sp, #120]
   58b50:	str	x0, [sp, #256]
   58b54:	bl	ccf0 <mpfr_allocate_func@plt>
   58b58:	str	x0, [sp, #264]
   58b5c:	ldp	x2, x3, [sp, #120]
   58b60:	ldr	x1, [sp, #256]
   58b64:	b	587a0 <mpfr_beta@@Base+0x240>
   58b68:	mov	x0, x25
   58b6c:	bl	c160 <mpfr_integer_p@plt>
   58b70:	cbz	w0, 58748 <mpfr_beta@@Base+0x1e8>
   58b74:	mov	x0, x25
   58b78:	bl	c070 <mpfr_clear@plt>
   58b7c:	ldr	x0, [sp, #104]
   58b80:	str	x0, [x28]
   58b84:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   58b88:	mov	w2, #0x1                   	// #1
   58b8c:	str	w2, [x20, #8]
   58b90:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58b94:	ldr	x3, [x0, #2576]
   58b98:	add	x0, x0, #0xa10
   58b9c:	blr	x3
   58ba0:	str	x1, [x20, #16]
   58ba4:	ldr	x3, [sp, #112]
   58ba8:	str	x3, [x26]
   58bac:	ldr	w3, [sp, #96]
   58bb0:	ldp	x25, x26, [sp, #64]
   58bb4:	str	w3, [x21, x0]
   58bb8:	b	586b0 <mpfr_beta@@Base+0x150>
   58bbc:	ldp	x2, x0, [sp, #144]
   58bc0:	mov	w1, #0x129                 	// #297
   58bc4:	str	w7, [sp, #120]
   58bc8:	bl	cb40 <mpfr_assert_fail@plt>
   58bcc:	ldr	w7, [sp, #120]
   58bd0:	b	588dc <mpfr_beta@@Base+0x37c>
   58bd4:	ldr	w0, [x27, #8]
   58bd8:	cmp	w0, #0x0
   58bdc:	b.gt	58e4c <mpfr_beta@@Base+0x8ec>
   58be0:	cmp	x1, x21
   58be4:	b.eq	58af4 <mpfr_beta@@Base+0x594>  // b.none
   58be8:	ldp	x25, x26, [sp, #64]
   58bec:	b	585b8 <mpfr_beta@@Base+0x58>
   58bf0:	mov	x2, x28
   58bf4:	mov	x3, #0x0                   	// #0
   58bf8:	b	58790 <mpfr_beta@@Base+0x230>
   58bfc:	mov	x0, x27
   58c00:	mov	x2, #0x0                   	// #0
   58c04:	mov	x1, #0x1                   	// #1
   58c08:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   58c0c:	cbnz	w0, 58c48 <mpfr_beta@@Base+0x6e8>
   58c10:	ldr	x0, [x23, #16]
   58c14:	mov	x1, #0x1                   	// #1
   58c18:	mov	x2, x0
   58c1c:	mov	x0, x23
   58c20:	str	x2, [sp, #128]
   58c24:	sub	x2, x2, #0x1
   58c28:	str	x2, [sp, #120]
   58c2c:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   58c30:	ldr	x2, [sp, #120]
   58c34:	cbz	w0, 590d8 <mpfr_beta@@Base+0xb78>
   58c38:	mov	x0, x23
   58c3c:	mov	x1, #0xffffffffffffffff    	// #-1
   58c40:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   58c44:	cbz	w0, 590f4 <mpfr_beta@@Base+0xb94>
   58c48:	mov	x0, x23
   58c4c:	mov	x2, #0x0                   	// #0
   58c50:	mov	x1, #0x1                   	// #1
   58c54:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   58c58:	cbnz	w0, 58c74 <mpfr_beta@@Base+0x714>
   58c5c:	ldr	x2, [x27, #16]
   58c60:	mov	x0, x27
   58c64:	mov	x1, #0x1                   	// #1
   58c68:	sub	x2, x2, #0x1
   58c6c:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   58c70:	cbz	w0, 59114 <mpfr_beta@@Base+0xbb4>
   58c74:	mov	x0, x27
   58c78:	mov	x2, #0x0                   	// #0
   58c7c:	mov	x1, #0x2                   	// #2
   58c80:	bl	bf50 <mpfr_cmp_ui_2exp@plt>
   58c84:	cbz	w0, 58e20 <mpfr_beta@@Base+0x8c0>
   58c88:	ldr	x1, [sp, #136]
   58c8c:	mov	x0, #0xfffffffffffffeff    	// #-257
   58c90:	movk	x0, #0x7fff, lsl #48
   58c94:	sub	x0, x0, x28
   58c98:	cmp	x1, x0
   58c9c:	b.gt	59048 <mpfr_beta@@Base+0xae8>
   58ca0:	ldr	x0, [sp, #136]
   58ca4:	ldr	x1, [sp, #256]
   58ca8:	add	x28, x28, x0
   58cac:	mov	x0, #0x7fffffffffffff00    	// #9223372036854775552
   58cb0:	cmp	x28, x0
   58cb4:	add	x0, x28, x28, lsr #63
   58cb8:	asr	x0, x0, #1
   58cbc:	str	x0, [sp, #136]
   58cc0:	b.ge	591c4 <mpfr_beta@@Base+0xc64>  // b.tcont
   58cc4:	sub	x3, x28, #0x1
   58cc8:	b	587e4 <mpfr_beta@@Base+0x284>
   58ccc:	mov	x0, x27
   58cd0:	bl	c160 <mpfr_integer_p@plt>
   58cd4:	cbz	w0, 58a1c <mpfr_beta@@Base+0x4bc>
   58cd8:	mov	x1, x23
   58cdc:	mov	x0, x27
   58ce0:	bl	c9b0 <mpfr_cmpabs@plt>
   58ce4:	cbz	w0, 58f54 <mpfr_beta@@Base+0x9f4>
   58ce8:	ldr	x2, [x23, #16]
   58cec:	stp	x25, x26, [sp, #64]
   58cf0:	add	x25, sp, #0xa0
   58cf4:	ldr	x1, [x27, #16]
   58cf8:	mov	x0, x25
   58cfc:	cmp	x2, x1
   58d00:	csel	x1, x2, x1, ge  // ge = tcont
   58d04:	bl	ca80 <mpfr_init2@plt>
   58d08:	mov	x2, x23
   58d0c:	mov	x0, x25
   58d10:	mov	x1, x27
   58d14:	mov	w3, #0x0                   	// #0
   58d18:	bl	c1a0 <mpfr_add@plt>
   58d1c:	cbnz	w0, 59194 <mpfr_beta@@Base+0xc34>
   58d20:	mov	x2, x25
   58d24:	mov	x0, x25
   58d28:	mov	w3, #0x0                   	// #0
   58d2c:	mov	x1, #0x1                   	// #1
   58d30:	bl	ca50 <mpfr_ui_sub@plt>
   58d34:	cbnz	w0, 591c8 <mpfr_beta@@Base+0xc68>
   58d38:	mov	x0, x27
   58d3c:	bl	cca0 <mpfr_odd_p@plt>
   58d40:	cbz	w0, 5902c <mpfr_beta@@Base+0xacc>
   58d44:	cmp	w22, #0x2
   58d48:	b.eq	59090 <mpfr_beta@@Base+0xb30>  // b.none
   58d4c:	cmp	w22, #0x3
   58d50:	mov	w0, #0x2                   	// #2
   58d54:	csel	w22, w22, w0, ne  // ne = any
   58d58:	mov	x1, x27
   58d5c:	mov	w3, w22
   58d60:	mov	x2, x25
   58d64:	mov	x0, x20
   58d68:	bl	58560 <mpfr_beta@@Base>
   58d6c:	neg	w19, w0
   58d70:	ldr	w1, [x20, #8]
   58d74:	neg	w1, w1
   58d78:	str	w1, [x20, #8]
   58d7c:	mov	x0, x25
   58d80:	bl	c070 <mpfr_clear@plt>
   58d84:	ldp	x25, x26, [sp, #64]
   58d88:	b	586b0 <mpfr_beta@@Base+0x150>
   58d8c:	mov	x0, x27
   58d90:	bl	c710 <mpfr_sgn@plt>
   58d94:	cbz	w0, 58dd0 <mpfr_beta@@Base+0x870>
   58d98:	mrs	x1, tpidr_el0
   58d9c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58da0:	ldr	x2, [x0, #2576]
   58da4:	add	x0, x0, #0xa10
   58da8:	blr	x2
   58dac:	add	x0, x1, x0
   58db0:	ldr	w1, [x23, #8]
   58db4:	str	w1, [x20, #8]
   58db8:	ldr	w1, [x0]
   58dbc:	str	x25, [x20, #16]
   58dc0:	orr	w1, w1, #0x20
   58dc4:	str	w1, [x0]
   58dc8:	ldp	x25, x26, [sp, #64]
   58dcc:	b	589b0 <mpfr_beta@@Base+0x450>
   58dd0:	mov	x0, x23
   58dd4:	bl	c710 <mpfr_sgn@plt>
   58dd8:	mov	w19, w0
   58ddc:	cbnz	w0, 58fe8 <mpfr_beta@@Base+0xa88>
   58de0:	mrs	x1, tpidr_el0
   58de4:	ldr	w3, [x23, #8]
   58de8:	ldr	w2, [x27, #8]
   58dec:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58df0:	ldr	x4, [x0, #2576]
   58df4:	add	x0, x0, #0xa10
   58df8:	blr	x4
   58dfc:	add	x4, x1, x0
   58e00:	cmp	w2, w3
   58e04:	ldr	w0, [x1, x0]
   58e08:	b.eq	59078 <mpfr_beta@@Base+0xb18>  // b.none
   58e0c:	orr	w0, w0, #0x4
   58e10:	ldp	x25, x26, [sp, #64]
   58e14:	str	w0, [x4]
   58e18:	str	x24, [x20, #16]
   58e1c:	b	586b0 <mpfr_beta@@Base+0x150>
   58e20:	mov	x2, #0xffffffffffffffff    	// #-1
   58e24:	mov	x0, x23
   58e28:	mov	x1, x2
   58e2c:	bl	c3d0 <mpfr_cmp_si_2exp@plt>
   58e30:	cbnz	w0, 58c88 <mpfr_beta@@Base+0x728>
   58e34:	mov	x0, x24
   58e38:	mov	w3, #0x0                   	// #0
   58e3c:	mov	x2, #0x2                   	// #2
   58e40:	mov	x1, #0xffffffffffffffff    	// #-1
   58e44:	bl	ba80 <mpfr_set_si_2exp@plt>
   58e48:	b	5890c <mpfr_beta@@Base+0x3ac>
   58e4c:	mov	x0, x23
   58e50:	bl	c710 <mpfr_sgn@plt>
   58e54:	cmp	w0, #0x0
   58e58:	b.gt	59060 <mpfr_beta@@Base+0xb00>
   58e5c:	ldr	x0, [x23, #16]
   58e60:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   58e64:	and	x0, x0, #0xfffffffffffffffd
   58e68:	cmp	x0, x1
   58e6c:	b.eq	58b10 <mpfr_beta@@Base+0x5b0>  // b.none
   58e70:	mov	x0, x23
   58e74:	bl	c160 <mpfr_integer_p@plt>
   58e78:	cbnz	w0, 58b10 <mpfr_beta@@Base+0x5b0>
   58e7c:	mrs	x2, tpidr_el0
   58e80:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58e84:	ldr	x1, [x0, #2576]
   58e88:	add	x0, x0, #0xa10
   58e8c:	blr	x1
   58e90:	add	x27, x2, x0
   58e94:	mov	x5, #0xc000000000000001    	// #-4611686018427387903
   58e98:	mov	x3, #0x3fffffffffffffff    	// #4611686018427387903
   58e9c:	add	x22, sp, #0x100
   58ea0:	ldr	w28, [x2, x0]
   58ea4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58ea8:	ldr	x1, [x0, #2512]
   58eac:	add	x0, x0, #0x9d0
   58eb0:	blr	x1
   58eb4:	add	x24, x2, x0
   58eb8:	mov	x1, #0x1                   	// #1
   58ebc:	ldr	x26, [x2, x0]
   58ec0:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58ec4:	ldr	x4, [x0, #2544]
   58ec8:	add	x0, x0, #0x9f0
   58ecc:	blr	x4
   58ed0:	add	x6, x2, x0
   58ed4:	str	x5, [x24]
   58ed8:	str	x6, [sp, #96]
   58edc:	mov	w19, #0x0                   	// #0
   58ee0:	ldr	x25, [x2, x0]
   58ee4:	mov	x0, x22
   58ee8:	str	x3, [x6]
   58eec:	bl	ca80 <mpfr_init2@plt>
   58ef0:	mov	w3, #0x0                   	// #0
   58ef4:	mov	x2, #0x0                   	// #0
   58ef8:	mov	x1, #0x1                   	// #1
   58efc:	mov	x0, x22
   58f00:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   58f04:	add	x1, sp, #0xe0
   58f08:	mov	x2, x23
   58f0c:	mov	x3, x22
   58f10:	mov	w4, #0x3                   	// #3
   58f14:	mov	x0, x22
   58f18:	bl	cc70 <mpfr_fmodquo@plt>
   58f1c:	mov	x0, x22
   58f20:	bl	c070 <mpfr_clear@plt>
   58f24:	str	x26, [x24]
   58f28:	ldr	x1, [sp, #224]
   58f2c:	mov	w0, #0x1                   	// #1
   58f30:	ldr	x6, [sp, #96]
   58f34:	str	x21, [x20, #16]
   58f38:	tst	x1, #0x1
   58f3c:	cneg	w0, w0, ne  // ne = any
   58f40:	str	w0, [x20, #8]
   58f44:	str	x25, [x6]
   58f48:	ldp	x25, x26, [sp, #64]
   58f4c:	str	w28, [x27]
   58f50:	b	586b0 <mpfr_beta@@Base+0x150>
   58f54:	mov	w3, w22
   58f58:	mov	x2, x27
   58f5c:	mov	x0, x20
   58f60:	mov	x1, #0x1                   	// #1
   58f64:	bl	c2f0 <mpfr_ui_div@plt>
   58f68:	mov	w19, w0
   58f6c:	b	586b0 <mpfr_beta@@Base+0x150>
   58f70:	mov	x0, x25
   58f74:	bl	c070 <mpfr_clear@plt>
   58f78:	ldr	x1, [sp, #256]
   58f7c:	cbz	x1, 58f88 <mpfr_beta@@Base+0xa28>
   58f80:	ldr	x0, [sp, #264]
   58f84:	bl	cc20 <mpfr_free_func@plt>
   58f88:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58f8c:	ldr	x1, [x0, #2512]
   58f90:	add	x0, x0, #0x9d0
   58f94:	blr	x1
   58f98:	ldr	x1, [sp, #104]
   58f9c:	ldp	x25, x26, [sp, #64]
   58fa0:	str	x1, [x21, x0]
   58fa4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58fa8:	ldr	x1, [x0, #2544]
   58fac:	add	x0, x0, #0x9f0
   58fb0:	blr	x1
   58fb4:	ldr	x1, [sp, #112]
   58fb8:	str	x1, [x21, x0]
   58fbc:	ldr	w0, [sp, #96]
   58fc0:	orr	w23, w0, #0x4
   58fc4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58fc8:	ldr	x1, [x0, #2576]
   58fcc:	add	x0, x0, #0xa10
   58fd0:	blr	x1
   58fd4:	str	w23, [x21, x0]
   58fd8:	mov	x1, #0x2                   	// #2
   58fdc:	movk	x1, #0x8000, lsl #48
   58fe0:	str	x1, [x20, #16]
   58fe4:	b	586b0 <mpfr_beta@@Base+0x150>
   58fe8:	mov	x0, x23
   58fec:	bl	c160 <mpfr_integer_p@plt>
   58ff0:	mrs	x1, tpidr_el0
   58ff4:	mov	w19, w0
   58ff8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   58ffc:	ldr	x2, [x0, #2576]
   59000:	add	x0, x0, #0xa10
   59004:	blr	x2
   59008:	add	x0, x1, x0
   5900c:	cbz	w19, 59098 <mpfr_beta@@Base+0xb38>
   59010:	ldr	w1, [x0]
   59014:	mov	w19, #0x0                   	// #0
   59018:	ldp	x25, x26, [sp, #64]
   5901c:	orr	w1, w1, #0x4
   59020:	str	w1, [x0]
   59024:	str	x24, [x20, #16]
   59028:	b	586b0 <mpfr_beta@@Base+0x150>
   5902c:	mov	w3, w22
   59030:	mov	x1, x27
   59034:	mov	x0, x20
   59038:	mov	x2, x25
   5903c:	bl	58560 <mpfr_beta@@Base>
   59040:	mov	w19, w0
   59044:	b	58d7c <mpfr_beta@@Base+0x81c>
   59048:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   5904c:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   59050:	add	x2, x2, #0x830
   59054:	add	x0, x0, #0x878
   59058:	mov	w1, #0x151                 	// #337
   5905c:	bl	cb40 <mpfr_assert_fail@plt>
   59060:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   59064:	mov	w1, #0x1                   	// #1
   59068:	ldp	x25, x26, [sp, #64]
   5906c:	str	w1, [x20, #8]
   59070:	str	x0, [x20, #16]
   59074:	b	586b0 <mpfr_beta@@Base+0x150>
   59078:	orr	w0, w0, #0x20
   5907c:	str	w0, [x4]
   59080:	str	w2, [x20, #8]
   59084:	str	x25, [x20, #16]
   59088:	ldp	x25, x26, [sp, #64]
   5908c:	b	586b0 <mpfr_beta@@Base+0x150>
   59090:	mov	w22, #0x3                   	// #3
   59094:	b	58d58 <mpfr_beta@@Base+0x7f8>
   59098:	ldr	w1, [x27, #8]
   5909c:	b	58db4 <mpfr_beta@@Base+0x854>
   590a0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   590a4:	str	x0, [x20, #16]
   590a8:	mov	x0, x27
   590ac:	bl	cca0 <mpfr_odd_p@plt>
   590b0:	cbz	w0, 590c4 <mpfr_beta@@Base+0xb64>
   590b4:	mov	w0, #0xffffffff            	// #-1
   590b8:	ldp	x25, x26, [sp, #64]
   590bc:	str	w0, [x20, #8]
   590c0:	b	586b0 <mpfr_beta@@Base+0x150>
   590c4:	mov	w0, #0x1                   	// #1
   590c8:	mov	w19, #0x0                   	// #0
   590cc:	ldp	x25, x26, [sp, #64]
   590d0:	str	w0, [x20, #8]
   590d4:	b	586b0 <mpfr_beta@@Base+0x150>
   590d8:	ldr	x0, [sp, #128]
   590dc:	mov	x1, #0x1                   	// #1
   590e0:	mov	w3, #0x0                   	// #0
   590e4:	sub	x2, x1, x0
   590e8:	mov	x0, x24
   590ec:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   590f0:	b	5890c <mpfr_beta@@Base+0x3ac>
   590f4:	ldr	x0, [sp, #128]
   590f8:	mov	x2, #0x1                   	// #1
   590fc:	mov	w3, #0x0                   	// #0
   59100:	mov	x1, #0xffffffffffffffff    	// #-1
   59104:	sub	x2, x2, x0
   59108:	mov	x0, x24
   5910c:	bl	ba80 <mpfr_set_si_2exp@plt>
   59110:	b	5890c <mpfr_beta@@Base+0x3ac>
   59114:	ldr	x2, [x27, #16]
   59118:	mov	x1, #0x1                   	// #1
   5911c:	mov	x0, x24
   59120:	mov	w3, #0x0                   	// #0
   59124:	sub	x2, x1, x2
   59128:	bl	c5f0 <mpfr_set_ui_2exp@plt>
   5912c:	b	5890c <mpfr_beta@@Base+0x3ac>
   59130:	mov	x0, x25
   59134:	bl	c070 <mpfr_clear@plt>
   59138:	ldr	x0, [sp, #104]
   5913c:	str	x0, [x28]
   59140:	mov	w1, w22
   59144:	mov	w2, #0x1                   	// #1
   59148:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   5914c:	ldr	x3, [x0, #2576]
   59150:	add	x0, x0, #0xa10
   59154:	blr	x3
   59158:	ldr	x3, [sp, #112]
   5915c:	str	x3, [x26]
   59160:	ldr	w3, [sp, #96]
   59164:	str	w3, [x21, x0]
   59168:	mov	x0, x20
   5916c:	bl	c3c0 <mpfr_underflow@plt>
   59170:	mov	w19, w0
   59174:	ldp	x25, x26, [sp, #64]
   59178:	b	586b0 <mpfr_beta@@Base+0x150>
   5917c:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   59180:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   59184:	add	x2, x2, #0x320
   59188:	add	x0, x0, #0x878
   5918c:	mov	w1, #0xf7                  	// #247
   59190:	bl	cb40 <mpfr_assert_fail@plt>
   59194:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   59198:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   5919c:	add	x2, x2, #0x320
   591a0:	add	x0, x0, #0x878
   591a4:	mov	w1, #0xc6                  	// #198
   591a8:	bl	cb40 <mpfr_assert_fail@plt>
   591ac:	adrp	x2, 5d000 <mpfr_free_pool@@Base+0x3ca8>
   591b0:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   591b4:	add	x2, x2, #0x820
   591b8:	add	x0, x0, #0x878
   591bc:	mov	w1, #0x108                 	// #264
   591c0:	bl	cb40 <mpfr_assert_fail@plt>
   591c4:	bl	c8e0 <mpfr_abort_prec_max@plt>
   591c8:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   591cc:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   591d0:	add	x2, x2, #0x320
   591d4:	add	x0, x0, #0x878
   591d8:	mov	w1, #0xc8                  	// #200
   591dc:	bl	cb40 <mpfr_assert_fail@plt>

00000000000591e0 <mpfr_odd_p@@Base>:
   591e0:	ldr	x3, [x0, #16]
   591e4:	cmp	x3, #0x0
   591e8:	b.le	59258 <mpfr_odd_p@@Base+0x78>
   591ec:	ldr	x1, [x0]
   591f0:	cmp	x3, x1
   591f4:	b.gt	59258 <mpfr_odd_p@@Base+0x78>
   591f8:	sub	x2, x1, #0x1
   591fc:	and	x2, x2, #0xffffffffffffffc0
   59200:	add	x2, x2, #0x40
   59204:	subs	x2, x2, x3
   59208:	add	x1, x2, #0x3f
   5920c:	csel	x1, x1, x2, mi  // mi = first
   59210:	cmn	x2, #0x3f
   59214:	asr	x1, x1, #6
   59218:	b.lt	59280 <mpfr_odd_p@@Base+0xa0>  // b.tstop
   5921c:	ldr	x2, [x0, #24]
   59220:	ands	x3, x3, #0x3f
   59224:	ldr	x0, [x2, x1, lsl #3]
   59228:	b.ne	59260 <mpfr_odd_p@@Base+0x80>  // b.any
   5922c:	mvn	x3, x0
   59230:	mov	w0, #0x0                   	// #0
   59234:	and	w3, w3, #0x1
   59238:	cbz	w3, 59248 <mpfr_odd_p@@Base+0x68>
   5923c:	b	5927c <mpfr_odd_p@@Base+0x9c>
   59240:	ldr	x0, [x2, x1, lsl #3]
   59244:	cbnz	x0, 59258 <mpfr_odd_p@@Base+0x78>
   59248:	subs	x1, x1, #0x1
   5924c:	b.pl	59240 <mpfr_odd_p@@Base+0x60>  // b.nfrst
   59250:	mov	w0, #0x1                   	// #1
   59254:	ret
   59258:	mov	w0, #0x0                   	// #0
   5925c:	ret
   59260:	sub	w3, w3, #0x1
   59264:	mov	x4, #0x8000000000000000    	// #-9223372036854775808
   59268:	lsl	x3, x0, x3
   5926c:	cmp	x3, x4
   59270:	cset	w3, ne  // ne = any
   59274:	mov	w0, #0x0                   	// #0
   59278:	cbz	w3, 59248 <mpfr_odd_p@@Base+0x68>
   5927c:	ret
   59280:	stp	x29, x30, [sp, #-16]!
   59284:	adrp	x2, 64000 <mpfr_bases@@Base+0x1e58>
   59288:	adrp	x0, 64000 <mpfr_bases@@Base+0x1e58>
   5928c:	mov	x29, sp
   59290:	add	x2, x2, #0x8c8
   59294:	add	x0, x0, #0x8d0
   59298:	mov	w1, #0x3c                  	// #60
   5929c:	bl	cb40 <mpfr_assert_fail@plt>

00000000000592a0 <mpfr_get_q@@Base>:
   592a0:	stp	x29, x30, [sp, #-32]!
   592a4:	mov	x29, sp
   592a8:	stp	x19, x20, [sp, #16]
   592ac:	mov	x20, x1
   592b0:	mov	x19, x0
   592b4:	mov	x1, #0x1                   	// #1
   592b8:	add	x0, x0, #0x10
   592bc:	bl	bcb0 <__gmpz_set_ui@plt>
   592c0:	ldr	x0, [x20, #16]
   592c4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   592c8:	cmp	x0, x1
   592cc:	b.le	59310 <mpfr_get_q@@Base+0x70>
   592d0:	mov	x1, x20
   592d4:	mov	x0, x19
   592d8:	bl	cac0 <mpfr_get_z_2exp@plt>
   592dc:	mov	x2, x0
   592e0:	tbnz	x0, #63, 592f8 <mpfr_get_q@@Base+0x58>
   592e4:	mov	x1, x19
   592e8:	mov	x0, x19
   592ec:	ldp	x19, x20, [sp, #16]
   592f0:	ldp	x29, x30, [sp], #32
   592f4:	b	c200 <__gmpz_mul_2exp@plt>
   592f8:	neg	x2, x0
   592fc:	mov	x1, x19
   59300:	mov	x0, x19
   59304:	ldp	x19, x20, [sp, #16]
   59308:	ldp	x29, x30, [sp], #32
   5930c:	b	caf0 <__gmpq_div_2exp@plt>
   59310:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   59314:	cmp	x0, x1
   59318:	b.ne	59330 <mpfr_get_q@@Base+0x90>  // b.any
   5931c:	mov	x0, x19
   59320:	mov	x1, #0x0                   	// #0
   59324:	ldp	x19, x20, [sp, #16]
   59328:	ldp	x29, x30, [sp], #32
   5932c:	b	bcb0 <__gmpz_set_ui@plt>
   59330:	mrs	x1, tpidr_el0
   59334:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   59338:	ldr	x2, [x0, #2576]
   5933c:	add	x0, x0, #0xa10
   59340:	blr	x2
   59344:	add	x0, x1, x0
   59348:	ldr	w1, [x0]
   5934c:	orr	w1, w1, #0x10
   59350:	str	w1, [x0]
   59354:	b	5931c <mpfr_get_q@@Base+0x7c>

0000000000059358 <mpfr_free_pool@@Base>:
   59358:	stp	x29, x30, [sp, #-48]!
   5935c:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   59360:	ldr	x1, [x0, #2496]
   59364:	add	x0, x0, #0x9c0
   59368:	blr	x1
   5936c:	mov	x29, sp
   59370:	str	x21, [sp, #32]
   59374:	mrs	x21, tpidr_el0
   59378:	stp	x19, x20, [sp, #16]
   5937c:	add	x19, x21, x0
   59380:	ldr	w0, [x21, x0]
   59384:	cmp	w0, #0x0
   59388:	b.le	593c4 <mpfr_free_pool@@Base+0x6c>
   5938c:	add	x19, x19, #0x8
   59390:	mov	w20, #0x0                   	// #0
   59394:	nop
   59398:	mov	x0, x19
   5939c:	bl	c640 <__gmpz_clear@plt>
   593a0:	add	w20, w20, #0x1
   593a4:	add	x19, x19, #0x10
   593a8:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   593ac:	ldr	x1, [x0, #2496]
   593b0:	add	x0, x0, #0x9c0
   593b4:	blr	x1
   593b8:	ldr	w0, [x21, x0]
   593bc:	cmp	w0, w20
   593c0:	b.gt	59398 <mpfr_free_pool@@Base+0x40>
   593c4:	adrp	x0, 80000 <mpfr_agm@@Base+0x69750>
   593c8:	ldr	x1, [x0, #2496]
   593cc:	add	x0, x0, #0x9c0
   593d0:	blr	x1
   593d4:	str	wzr, [x21, x0]
   593d8:	ldp	x19, x20, [sp, #16]
   593dc:	ldr	x21, [sp, #32]
   593e0:	ldp	x29, x30, [sp], #48
   593e4:	ret
   593e8:	stp	x29, x30, [sp, #-48]!
   593ec:	mov	x29, sp
   593f0:	str	q0, [sp, #16]
   593f4:	str	q1, [sp, #32]
   593f8:	ldp	x6, x1, [sp, #16]
   593fc:	ldp	x0, x3, [sp, #32]
   59400:	mrs	x15, fpcr
   59404:	lsr	x7, x1, #63
   59408:	mov	x10, x0
   5940c:	ubfiz	x4, x3, #3, #48
   59410:	lsr	x5, x3, #63
   59414:	mov	x12, x7
   59418:	ubfiz	x2, x1, #3, #48
   5941c:	orr	x4, x4, x0, lsr #61
   59420:	ubfx	x8, x1, #48, #15
   59424:	ubfx	x0, x3, #48, #15
   59428:	and	w7, w7, #0xff
   5942c:	mov	x16, x12
   59430:	cmp	x12, x5
   59434:	and	w11, w5, #0xff
   59438:	orr	x2, x2, x6, lsr #61
   5943c:	mov	x1, x8
   59440:	lsl	x9, x6, #3
   59444:	mov	x3, x0
   59448:	lsl	x13, x10, #3
   5944c:	b.eq	595f8 <mpfr_free_pool@@Base+0x2a0>  // b.none
   59450:	sub	w0, w8, w0
   59454:	cmp	w0, #0x0
   59458:	b.le	595a4 <mpfr_free_pool@@Base+0x24c>
   5945c:	cbz	x3, 59658 <mpfr_free_pool@@Base+0x300>
   59460:	orr	x4, x4, #0x8000000000000
   59464:	mov	x3, #0x7fff                	// #32767
   59468:	cmp	x1, x3
   5946c:	b.eq	5985c <mpfr_free_pool@@Base+0x504>  // b.none
   59470:	cmp	w0, #0x74
   59474:	b.gt	598e0 <mpfr_free_pool@@Base+0x588>
   59478:	cmp	w0, #0x3f
   5947c:	b.gt	59a40 <mpfr_free_pool@@Base+0x6e8>
   59480:	mov	w3, #0x40                  	// #64
   59484:	sub	w3, w3, w0
   59488:	lsr	x6, x13, x0
   5948c:	lsl	x13, x13, x3
   59490:	cmp	x13, #0x0
   59494:	cset	x5, ne  // ne = any
   59498:	lsl	x3, x4, x3
   5949c:	orr	x3, x3, x6
   594a0:	lsr	x0, x4, x0
   594a4:	orr	x3, x3, x5
   594a8:	sub	x2, x2, x0
   594ac:	subs	x9, x9, x3
   594b0:	sbc	x2, x2, xzr
   594b4:	and	x3, x2, #0x7ffffffffffff
   594b8:	tbz	x2, #51, 59698 <mpfr_free_pool@@Base+0x340>
   594bc:	cbz	x3, 598c4 <mpfr_free_pool@@Base+0x56c>
   594c0:	clz	x0, x3
   594c4:	sub	w0, w0, #0xc
   594c8:	neg	w2, w0
   594cc:	lsl	x4, x3, x0
   594d0:	lsl	x3, x9, x0
   594d4:	lsr	x9, x9, x2
   594d8:	orr	x2, x9, x4
   594dc:	cmp	x1, w0, sxtw
   594e0:	sxtw	x4, w0
   594e4:	b.gt	598a4 <mpfr_free_pool@@Base+0x54c>
   594e8:	sub	w1, w0, w1
   594ec:	add	w0, w1, #0x1
   594f0:	cmp	w0, #0x3f
   594f4:	b.gt	59a08 <mpfr_free_pool@@Base+0x6b0>
   594f8:	mov	w1, #0x40                  	// #64
   594fc:	sub	w1, w1, w0
   59500:	lsr	x4, x3, x0
   59504:	lsl	x3, x3, x1
   59508:	cmp	x3, #0x0
   5950c:	lsl	x9, x2, x1
   59510:	cset	x1, ne  // ne = any
   59514:	orr	x9, x9, x4
   59518:	lsr	x2, x2, x0
   5951c:	orr	x9, x9, x1
   59520:	orr	x8, x9, x2
   59524:	cbz	x8, 596ac <mpfr_free_pool@@Base+0x354>
   59528:	and	x0, x9, #0x7
   5952c:	mov	x1, #0x0                   	// #0
   59530:	mov	w5, #0x1                   	// #1
   59534:	cbz	x0, 598f0 <mpfr_free_pool@@Base+0x598>
   59538:	and	x3, x15, #0xc00000
   5953c:	cmp	x3, #0x400, lsl #12
   59540:	b.eq	59834 <mpfr_free_pool@@Base+0x4dc>  // b.none
   59544:	cmp	x3, #0x800, lsl #12
   59548:	b.eq	59814 <mpfr_free_pool@@Base+0x4bc>  // b.none
   5954c:	cbz	x3, 59840 <mpfr_free_pool@@Base+0x4e8>
   59550:	and	x3, x2, #0x8000000000000
   59554:	mov	w0, #0x10                  	// #16
   59558:	cbz	w5, 59560 <mpfr_free_pool@@Base+0x208>
   5955c:	orr	w0, w0, #0x8
   59560:	cbz	x3, 59878 <mpfr_free_pool@@Base+0x520>
   59564:	add	x1, x1, #0x1
   59568:	mov	x3, #0x7fff                	// #32767
   5956c:	cmp	x1, x3
   59570:	b.eq	5975c <mpfr_free_pool@@Base+0x404>  // b.none
   59574:	and	w1, w1, #0x7fff
   59578:	extr	x8, x2, x9, #3
   5957c:	ubfx	x2, x2, #3, #48
   59580:	mov	x5, #0x0                   	// #0
   59584:	orr	w1, w1, w7, lsl #15
   59588:	bfxil	x5, x2, #0, #48
   5958c:	fmov	d0, x8
   59590:	bfi	x5, x1, #48, #16
   59594:	fmov	v0.d[1], x5
   59598:	cbnz	w0, 597b8 <mpfr_free_pool@@Base+0x460>
   5959c:	ldp	x29, x30, [sp], #48
   595a0:	ret
   595a4:	mov	x14, x5
   595a8:	b.eq	596c4 <mpfr_free_pool@@Base+0x36c>  // b.none
   595ac:	cbnz	x8, 59948 <mpfr_free_pool@@Base+0x5f0>
   595b0:	orr	x1, x2, x9
   595b4:	cbz	x1, 59674 <mpfr_free_pool@@Base+0x31c>
   595b8:	cmn	w0, #0x1
   595bc:	b.eq	59d64 <mpfr_free_pool@@Base+0xa0c>  // b.none
   595c0:	mov	x1, #0x7fff                	// #32767
   595c4:	mvn	w0, w0
   595c8:	cmp	x3, x1
   595cc:	b.ne	5995c <mpfr_free_pool@@Base+0x604>  // b.any
   595d0:	orr	x0, x4, x13
   595d4:	cbnz	x0, 59cbc <mpfr_free_pool@@Base+0x964>
   595d8:	mov	x16, x14
   595dc:	nop
   595e0:	mov	x4, #0x0                   	// #0
   595e4:	fmov	d0, x4
   595e8:	lsl	x16, x16, #63
   595ec:	orr	x5, x16, #0x7fff000000000000
   595f0:	fmov	v0.d[1], x5
   595f4:	b	5959c <mpfr_free_pool@@Base+0x244>
   595f8:	sub	w5, w8, w0
   595fc:	cmp	w5, #0x0
   59600:	b.le	597cc <mpfr_free_pool@@Base+0x474>
   59604:	cbz	x0, 5970c <mpfr_free_pool@@Base+0x3b4>
   59608:	orr	x4, x4, #0x8000000000000
   5960c:	mov	x0, #0x7fff                	// #32767
   59610:	cmp	x1, x0
   59614:	b.eq	5985c <mpfr_free_pool@@Base+0x504>  // b.none
   59618:	cmp	w5, #0x74
   5961c:	b.gt	599f0 <mpfr_free_pool@@Base+0x698>
   59620:	cmp	w5, #0x3f
   59624:	b.gt	59af0 <mpfr_free_pool@@Base+0x798>
   59628:	mov	w0, #0x40                  	// #64
   5962c:	sub	w0, w0, w5
   59630:	lsr	x6, x13, x5
   59634:	lsl	x13, x13, x0
   59638:	cmp	x13, #0x0
   5963c:	lsl	x0, x4, x0
   59640:	cset	x3, ne  // ne = any
   59644:	orr	x0, x0, x6
   59648:	lsr	x4, x4, x5
   5964c:	orr	x0, x0, x3
   59650:	add	x2, x2, x4
   59654:	b	599fc <mpfr_free_pool@@Base+0x6a4>
   59658:	orr	x3, x4, x13
   5965c:	cbz	x3, 599cc <mpfr_free_pool@@Base+0x674>
   59660:	subs	w0, w0, #0x1
   59664:	b.ne	59464 <mpfr_free_pool@@Base+0x10c>  // b.any
   59668:	subs	x9, x9, x13
   5966c:	sbc	x2, x2, x4
   59670:	b	594b4 <mpfr_free_pool@@Base+0x15c>
   59674:	mov	x0, #0x7fff                	// #32767
   59678:	cmp	x3, x0
   5967c:	b.eq	59db0 <mpfr_free_pool@@Base+0xa58>  // b.none
   59680:	mov	w7, w11
   59684:	mov	x2, x4
   59688:	mov	x9, x13
   5968c:	mov	x1, x3
   59690:	mov	x12, x5
   59694:	nop
   59698:	orr	x8, x9, x2
   5969c:	and	x0, x9, #0x7
   596a0:	mov	w5, #0x0                   	// #0
   596a4:	cbnz	x1, 59534 <mpfr_free_pool@@Base+0x1dc>
   596a8:	cbnz	x8, 59528 <mpfr_free_pool@@Base+0x1d0>
   596ac:	mov	x2, #0x0                   	// #0
   596b0:	mov	x1, #0x0                   	// #0
   596b4:	mov	w0, #0x0                   	// #0
   596b8:	and	x2, x2, #0xffffffffffff
   596bc:	and	w1, w1, #0x7fff
   596c0:	b	59580 <mpfr_free_pool@@Base+0x228>
   596c4:	add	x5, x8, #0x1
   596c8:	tst	x5, #0x7ffe
   596cc:	b.ne	5999c <mpfr_free_pool@@Base+0x644>  // b.any
   596d0:	orr	x5, x2, x9
   596d4:	orr	x8, x4, x13
   596d8:	cbnz	x1, 59b5c <mpfr_free_pool@@Base+0x804>
   596dc:	cbz	x5, 59c04 <mpfr_free_pool@@Base+0x8ac>
   596e0:	cbz	x8, 59c18 <mpfr_free_pool@@Base+0x8c0>
   596e4:	subs	x5, x9, x13
   596e8:	cmp	x9, x13
   596ec:	sbc	x3, x2, x4
   596f0:	tbz	x3, #51, 59de4 <mpfr_free_pool@@Base+0xa8c>
   596f4:	subs	x9, x13, x9
   596f8:	mov	w7, w11
   596fc:	sbc	x2, x4, x2
   59700:	mov	x12, x14
   59704:	orr	x8, x9, x2
   59708:	b	59524 <mpfr_free_pool@@Base+0x1cc>
   5970c:	orr	x0, x4, x13
   59710:	cbz	x0, 59be4 <mpfr_free_pool@@Base+0x88c>
   59714:	subs	w5, w5, #0x1
   59718:	b.ne	5960c <mpfr_free_pool@@Base+0x2b4>  // b.any
   5971c:	adds	x9, x9, x13
   59720:	adc	x2, x4, x2
   59724:	nop
   59728:	tbz	x2, #51, 59698 <mpfr_free_pool@@Base+0x340>
   5972c:	add	x1, x1, #0x1
   59730:	mov	x0, #0x7fff                	// #32767
   59734:	cmp	x1, x0
   59738:	b.eq	59c24 <mpfr_free_pool@@Base+0x8cc>  // b.none
   5973c:	and	x0, x9, #0x1
   59740:	and	x3, x2, #0xfff7ffffffffffff
   59744:	orr	x9, x0, x9, lsr #1
   59748:	mov	w5, #0x0                   	// #0
   5974c:	orr	x9, x9, x2, lsl #63
   59750:	lsr	x2, x3, #1
   59754:	and	x0, x9, #0x7
   59758:	b	59534 <mpfr_free_pool@@Base+0x1dc>
   5975c:	and	x3, x15, #0xc00000
   59760:	cbz	x3, 59798 <mpfr_free_pool@@Base+0x440>
   59764:	cmp	x3, #0x400, lsl #12
   59768:	b.eq	59790 <mpfr_free_pool@@Base+0x438>  // b.none
   5976c:	cmp	x3, #0x800, lsl #12
   59770:	csel	w12, w12, wzr, eq  // eq = none
   59774:	cbnz	w12, 59798 <mpfr_free_pool@@Base+0x440>
   59778:	mov	w1, #0x14                  	// #20
   5977c:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   59780:	orr	w0, w0, w1
   59784:	mov	x8, #0xffffffffffffffff    	// #-1
   59788:	mov	x1, #0x7ffe                	// #32766
   5978c:	b	596b8 <mpfr_free_pool@@Base+0x360>
   59790:	cbnz	x12, 59778 <mpfr_free_pool@@Base+0x420>
   59794:	nop
   59798:	mov	w1, #0x14                  	// #20
   5979c:	and	x16, x7, #0xff
   597a0:	orr	w0, w0, w1
   597a4:	mov	x4, #0x0                   	// #0
   597a8:	fmov	d0, x4
   597ac:	lsl	x16, x16, #63
   597b0:	orr	x5, x16, #0x7fff000000000000
   597b4:	fmov	v0.d[1], x5
   597b8:	str	q0, [sp, #16]
   597bc:	bl	5b9c8 <mpfr_free_pool@@Base+0x2670>
   597c0:	ldr	q0, [sp, #16]
   597c4:	ldp	x29, x30, [sp], #48
   597c8:	ret
   597cc:	b.eq	5990c <mpfr_free_pool@@Base+0x5b4>  // b.none
   597d0:	cbnz	x8, 59a90 <mpfr_free_pool@@Base+0x738>
   597d4:	orr	x0, x2, x9
   597d8:	cbz	x0, 59cfc <mpfr_free_pool@@Base+0x9a4>
   597dc:	cmn	w5, #0x1
   597e0:	b.eq	59e5c <mpfr_free_pool@@Base+0xb04>  // b.none
   597e4:	mov	x0, #0x7fff                	// #32767
   597e8:	mvn	w5, w5
   597ec:	cmp	x3, x0
   597f0:	b.ne	59aa4 <mpfr_free_pool@@Base+0x74c>  // b.any
   597f4:	orr	x0, x4, x13
   597f8:	cbz	x0, 595e0 <mpfr_free_pool@@Base+0x288>
   597fc:	lsr	x5, x4, #50
   59800:	mov	x9, x13
   59804:	eor	x5, x5, #0x1
   59808:	mov	x2, x4
   5980c:	and	w5, w5, #0x1
   59810:	b	59870 <mpfr_free_pool@@Base+0x518>
   59814:	mov	w0, #0x10                  	// #16
   59818:	cbz	x12, 59824 <mpfr_free_pool@@Base+0x4cc>
   5981c:	adds	x9, x9, #0x8
   59820:	cinc	x2, x2, cs  // cs = hs, nlast
   59824:	and	x3, x2, #0x8000000000000
   59828:	cbz	w5, 59560 <mpfr_free_pool@@Base+0x208>
   5982c:	orr	w0, w0, #0x8
   59830:	b	59560 <mpfr_free_pool@@Base+0x208>
   59834:	mov	w0, #0x10                  	// #16
   59838:	cbnz	x12, 59824 <mpfr_free_pool@@Base+0x4cc>
   5983c:	b	5981c <mpfr_free_pool@@Base+0x4c4>
   59840:	and	x3, x9, #0xf
   59844:	mov	w0, #0x10                  	// #16
   59848:	cmp	x3, #0x4
   5984c:	b.eq	59824 <mpfr_free_pool@@Base+0x4cc>  // b.none
   59850:	adds	x9, x9, #0x4
   59854:	cinc	x2, x2, cs  // cs = hs, nlast
   59858:	b	59824 <mpfr_free_pool@@Base+0x4cc>
   5985c:	orr	x0, x2, x9
   59860:	cbz	x0, 595e0 <mpfr_free_pool@@Base+0x288>
   59864:	lsr	x5, x2, #50
   59868:	eor	x5, x5, #0x1
   5986c:	and	w5, w5, #0x1
   59870:	mov	w0, w5
   59874:	mov	x1, #0x7fff                	// #32767
   59878:	mov	x3, #0x7fff                	// #32767
   5987c:	extr	x8, x2, x9, #3
   59880:	cmp	x1, x3
   59884:	lsr	x2, x2, #3
   59888:	b.ne	596b8 <mpfr_free_pool@@Base+0x360>  // b.any
   5988c:	orr	x1, x8, x2
   59890:	cbz	x1, 59efc <mpfr_free_pool@@Base+0xba4>
   59894:	orr	x2, x2, #0x800000000000
   59898:	mov	w1, #0x7fff                	// #32767
   5989c:	and	x2, x2, #0xffffffffffff
   598a0:	b	59580 <mpfr_free_pool@@Base+0x228>
   598a4:	mov	x9, x3
   598a8:	and	x2, x2, #0xfff7ffffffffffff
   598ac:	sub	x1, x1, x4
   598b0:	orr	x8, x9, x2
   598b4:	and	x0, x9, #0x7
   598b8:	mov	w5, #0x0                   	// #0
   598bc:	cbz	x1, 596a8 <mpfr_free_pool@@Base+0x350>
   598c0:	b	59534 <mpfr_free_pool@@Base+0x1dc>
   598c4:	clz	x2, x9
   598c8:	add	w0, w2, #0x34
   598cc:	cmp	w0, #0x3f
   598d0:	b.le	594c8 <mpfr_free_pool@@Base+0x170>
   598d4:	sub	w2, w2, #0xc
   598d8:	lsl	x2, x9, x2
   598dc:	b	594dc <mpfr_free_pool@@Base+0x184>
   598e0:	orr	x4, x4, x13
   598e4:	cmp	x4, #0x0
   598e8:	cset	x3, ne  // ne = any
   598ec:	b	594ac <mpfr_free_pool@@Base+0x154>
   598f0:	and	x3, x2, #0x8000000000000
   598f4:	mov	w0, #0x0                   	// #0
   598f8:	cbz	w5, 59560 <mpfr_free_pool@@Base+0x208>
   598fc:	mov	w0, #0x0                   	// #0
   59900:	tbz	w15, #11, 59560 <mpfr_free_pool@@Base+0x208>
   59904:	orr	w0, w0, #0x8
   59908:	b	59560 <mpfr_free_pool@@Base+0x208>
   5990c:	add	x0, x8, #0x1
   59910:	tst	x0, #0x7ffe
   59914:	b.ne	59b1c <mpfr_free_pool@@Base+0x7c4>  // b.any
   59918:	orr	x0, x2, x9
   5991c:	cbnz	x8, 59cd8 <mpfr_free_pool@@Base+0x980>
   59920:	orr	x8, x4, x13
   59924:	cbz	x0, 59d2c <mpfr_free_pool@@Base+0x9d4>
   59928:	cbz	x8, 59c18 <mpfr_free_pool@@Base+0x8c0>
   5992c:	adds	x9, x9, x13
   59930:	adc	x2, x4, x2
   59934:	tbz	x2, #51, 59704 <mpfr_free_pool@@Base+0x3ac>
   59938:	and	x2, x2, #0xfff7ffffffffffff
   5993c:	and	x0, x9, #0x7
   59940:	mov	x1, #0x1                   	// #1
   59944:	b	59534 <mpfr_free_pool@@Base+0x1dc>
   59948:	mov	x1, #0x7fff                	// #32767
   5994c:	neg	w0, w0
   59950:	orr	x2, x2, #0x8000000000000
   59954:	cmp	x3, x1
   59958:	b.eq	595d0 <mpfr_free_pool@@Base+0x278>  // b.none
   5995c:	cmp	w0, #0x74
   59960:	b.gt	59a6c <mpfr_free_pool@@Base+0x714>
   59964:	cmp	w0, #0x3f
   59968:	b.gt	59c88 <mpfr_free_pool@@Base+0x930>
   5996c:	mov	w1, #0x40                  	// #64
   59970:	sub	w1, w1, w0
   59974:	lsr	x5, x9, x0
   59978:	lsl	x9, x9, x1
   5997c:	cmp	x9, #0x0
   59980:	lsl	x9, x2, x1
   59984:	cset	x1, ne  // ne = any
   59988:	orr	x9, x9, x5
   5998c:	lsr	x0, x2, x0
   59990:	orr	x9, x9, x1
   59994:	sub	x4, x4, x0
   59998:	b	59a78 <mpfr_free_pool@@Base+0x720>
   5999c:	subs	x5, x9, x13
   599a0:	cmp	x9, x13
   599a4:	sbc	x3, x2, x4
   599a8:	tbnz	x3, #51, 59b44 <mpfr_free_pool@@Base+0x7ec>
   599ac:	orr	x8, x5, x3
   599b0:	cbnz	x8, 59c70 <mpfr_free_pool@@Base+0x918>
   599b4:	and	x15, x15, #0xc00000
   599b8:	mov	x2, #0x0                   	// #0
   599bc:	cmp	x15, #0x800, lsl #12
   599c0:	mov	x1, #0x0                   	// #0
   599c4:	cset	w7, eq  // eq = none
   599c8:	b	596b8 <mpfr_free_pool@@Base+0x360>
   599cc:	mov	x0, #0x7fff                	// #32767
   599d0:	cmp	x8, x0
   599d4:	b.ne	59698 <mpfr_free_pool@@Base+0x340>  // b.any
   599d8:	orr	x0, x2, x9
   599dc:	cbnz	x0, 59864 <mpfr_free_pool@@Base+0x50c>
   599e0:	mov	x2, #0x0                   	// #0
   599e4:	mov	x8, #0x0                   	// #0
   599e8:	mov	w0, #0x0                   	// #0
   599ec:	b	5988c <mpfr_free_pool@@Base+0x534>
   599f0:	orr	x4, x4, x13
   599f4:	cmp	x4, #0x0
   599f8:	cset	x0, ne  // ne = any
   599fc:	adds	x9, x0, x9
   59a00:	cinc	x2, x2, cs  // cs = hs, nlast
   59a04:	b	59728 <mpfr_free_pool@@Base+0x3d0>
   59a08:	mov	w4, #0x80                  	// #128
   59a0c:	sub	w4, w4, w0
   59a10:	cmp	w0, #0x40
   59a14:	sub	w9, w1, #0x3f
   59a18:	lsl	x0, x2, x4
   59a1c:	orr	x0, x3, x0
   59a20:	csel	x3, x0, x3, ne  // ne = any
   59a24:	lsr	x9, x2, x9
   59a28:	cmp	x3, #0x0
   59a2c:	mov	x2, #0x0                   	// #0
   59a30:	cset	x0, ne  // ne = any
   59a34:	orr	x9, x0, x9
   59a38:	mov	x8, x9
   59a3c:	b	59524 <mpfr_free_pool@@Base+0x1cc>
   59a40:	mov	w5, #0x80                  	// #128
   59a44:	sub	w5, w5, w0
   59a48:	subs	w0, w0, #0x40
   59a4c:	lsl	x5, x4, x5
   59a50:	orr	x5, x13, x5
   59a54:	csel	x13, x5, x13, ne  // ne = any
   59a58:	lsr	x4, x4, x0
   59a5c:	cmp	x13, #0x0
   59a60:	cset	x3, ne  // ne = any
   59a64:	orr	x3, x3, x4
   59a68:	b	594ac <mpfr_free_pool@@Base+0x154>
   59a6c:	orr	x2, x2, x9
   59a70:	cmp	x2, #0x0
   59a74:	cset	x9, ne  // ne = any
   59a78:	subs	x9, x13, x9
   59a7c:	mov	w7, w11
   59a80:	sbc	x2, x4, xzr
   59a84:	mov	x1, x3
   59a88:	mov	x12, x14
   59a8c:	b	594b4 <mpfr_free_pool@@Base+0x15c>
   59a90:	mov	x0, #0x7fff                	// #32767
   59a94:	neg	w5, w5
   59a98:	orr	x2, x2, #0x8000000000000
   59a9c:	cmp	x3, x0
   59aa0:	b.eq	597f4 <mpfr_free_pool@@Base+0x49c>  // b.none
   59aa4:	cmp	w5, #0x74
   59aa8:	b.gt	59c78 <mpfr_free_pool@@Base+0x920>
   59aac:	cmp	w5, #0x3f
   59ab0:	b.gt	59d38 <mpfr_free_pool@@Base+0x9e0>
   59ab4:	mov	w1, #0x40                  	// #64
   59ab8:	sub	w1, w1, w5
   59abc:	lsr	x6, x9, x5
   59ac0:	lsl	x9, x9, x1
   59ac4:	cmp	x9, #0x0
   59ac8:	cset	x0, ne  // ne = any
   59acc:	lsl	x9, x2, x1
   59ad0:	orr	x9, x9, x6
   59ad4:	lsr	x5, x2, x5
   59ad8:	orr	x9, x9, x0
   59adc:	add	x4, x4, x5
   59ae0:	adds	x9, x9, x13
   59ae4:	mov	x1, x3
   59ae8:	cinc	x2, x4, cs  // cs = hs, nlast
   59aec:	b	59728 <mpfr_free_pool@@Base+0x3d0>
   59af0:	mov	w0, #0x80                  	// #128
   59af4:	sub	w0, w0, w5
   59af8:	subs	w5, w5, #0x40
   59afc:	lsl	x0, x4, x0
   59b00:	orr	x0, x13, x0
   59b04:	csel	x13, x0, x13, ne  // ne = any
   59b08:	lsr	x4, x4, x5
   59b0c:	cmp	x13, #0x0
   59b10:	cset	x0, ne  // ne = any
   59b14:	orr	x0, x0, x4
   59b18:	b	599fc <mpfr_free_pool@@Base+0x6a4>
   59b1c:	mov	x1, #0x7fff                	// #32767
   59b20:	cmp	x0, x1
   59b24:	b.eq	59d80 <mpfr_free_pool@@Base+0xa28>  // b.none
   59b28:	adds	x9, x9, x13
   59b2c:	mov	x1, x0
   59b30:	adc	x2, x4, x2
   59b34:	ubfx	x0, x9, #1, #3
   59b38:	extr	x9, x2, x9, #1
   59b3c:	lsr	x2, x2, #1
   59b40:	b	59534 <mpfr_free_pool@@Base+0x1dc>
   59b44:	cmp	x13, x9
   59b48:	mov	w7, w11
   59b4c:	sbc	x3, x4, x2
   59b50:	sub	x9, x13, x9
   59b54:	mov	x12, x14
   59b58:	b	594bc <mpfr_free_pool@@Base+0x164>
   59b5c:	mov	x12, #0x7fff                	// #32767
   59b60:	cmp	x1, x12
   59b64:	b.eq	59b90 <mpfr_free_pool@@Base+0x838>  // b.none
   59b68:	cmp	x3, x12
   59b6c:	b.eq	59dc0 <mpfr_free_pool@@Base+0xa68>  // b.none
   59b70:	cbnz	x5, 59ba8 <mpfr_free_pool@@Base+0x850>
   59b74:	mov	w5, w0
   59b78:	cbnz	x8, 59ea0 <mpfr_free_pool@@Base+0xb48>
   59b7c:	mov	w7, #0x0                   	// #0
   59b80:	mov	x2, #0xffffffffffff        	// #281474976710655
   59b84:	mov	w0, #0x1                   	// #1
   59b88:	mov	x8, #0xffffffffffffffff    	// #-1
   59b8c:	b	59894 <mpfr_free_pool@@Base+0x53c>
   59b90:	cbz	x5, 59ebc <mpfr_free_pool@@Base+0xb64>
   59b94:	lsr	x0, x2, #50
   59b98:	cmp	x3, x1
   59b9c:	eor	x0, x0, #0x1
   59ba0:	and	w0, w0, #0x1
   59ba4:	b.eq	59dc0 <mpfr_free_pool@@Base+0xa68>  // b.none
   59ba8:	cbz	x8, 59ddc <mpfr_free_pool@@Base+0xa84>
   59bac:	bfi	x6, x2, #61, #3
   59bb0:	lsr	x3, x2, #3
   59bb4:	tbz	x2, #50, 59bd0 <mpfr_free_pool@@Base+0x878>
   59bb8:	lsr	x1, x4, #3
   59bbc:	tbnz	x4, #50, 59bd0 <mpfr_free_pool@@Base+0x878>
   59bc0:	mov	x6, x10
   59bc4:	mov	w7, w11
   59bc8:	bfi	x6, x4, #61, #3
   59bcc:	mov	x3, x1
   59bd0:	extr	x2, x3, x6, #61
   59bd4:	bfi	x6, x2, #61, #3
   59bd8:	lsr	x2, x2, #3
   59bdc:	mov	x8, x6
   59be0:	b	5988c <mpfr_free_pool@@Base+0x534>
   59be4:	mov	x0, #0x7fff                	// #32767
   59be8:	cmp	x8, x0
   59bec:	b.ne	59698 <mpfr_free_pool@@Base+0x340>  // b.any
   59bf0:	orr	x0, x2, x9
   59bf4:	cbz	x0, 599e0 <mpfr_free_pool@@Base+0x688>
   59bf8:	lsr	x5, x2, #50
   59bfc:	eor	w5, w5, #0x1
   59c00:	b	59870 <mpfr_free_pool@@Base+0x518>
   59c04:	cbz	x8, 59d18 <mpfr_free_pool@@Base+0x9c0>
   59c08:	mov	w7, w11
   59c0c:	mov	x2, x4
   59c10:	mov	x9, x13
   59c14:	mov	x12, x14
   59c18:	mov	x1, #0x0                   	// #0
   59c1c:	mov	x3, #0x0                   	// #0
   59c20:	b	598fc <mpfr_free_pool@@Base+0x5a4>
   59c24:	ands	x3, x15, #0xc00000
   59c28:	b.eq	59cb4 <mpfr_free_pool@@Base+0x95c>  // b.none
   59c2c:	cmp	x3, #0x400, lsl #12
   59c30:	eor	w0, w7, #0x1
   59c34:	cset	w1, eq  // eq = none
   59c38:	tst	w1, w0
   59c3c:	b.ne	59ed8 <mpfr_free_pool@@Base+0xb80>  // b.any
   59c40:	cmp	x3, #0x800, lsl #12
   59c44:	b.eq	59e84 <mpfr_free_pool@@Base+0xb2c>  // b.none
   59c48:	cmp	x3, #0x400, lsl #12
   59c4c:	mov	w0, #0x14                  	// #20
   59c50:	b.ne	59760 <mpfr_free_pool@@Base+0x408>  // b.any
   59c54:	mov	x2, #0xffffffffffffffff    	// #-1
   59c58:	mov	x1, #0x7ffe                	// #32766
   59c5c:	mov	x9, x2
   59c60:	mov	w5, #0x0                   	// #0
   59c64:	mov	w0, #0x14                  	// #20
   59c68:	cbnz	x12, 59824 <mpfr_free_pool@@Base+0x4cc>
   59c6c:	b	5981c <mpfr_free_pool@@Base+0x4c4>
   59c70:	mov	x9, x5
   59c74:	b	594bc <mpfr_free_pool@@Base+0x164>
   59c78:	orr	x2, x2, x9
   59c7c:	cmp	x2, #0x0
   59c80:	cset	x9, ne  // ne = any
   59c84:	b	59ae0 <mpfr_free_pool@@Base+0x788>
   59c88:	mov	w1, #0x80                  	// #128
   59c8c:	sub	w1, w1, w0
   59c90:	subs	w0, w0, #0x40
   59c94:	lsl	x1, x2, x1
   59c98:	orr	x1, x9, x1
   59c9c:	csel	x9, x1, x9, ne  // ne = any
   59ca0:	lsr	x2, x2, x0
   59ca4:	cmp	x9, #0x0
   59ca8:	cset	x9, ne  // ne = any
   59cac:	orr	x9, x9, x2
   59cb0:	b	59a78 <mpfr_free_pool@@Base+0x720>
   59cb4:	mov	w0, #0x14                  	// #20
   59cb8:	b	597a4 <mpfr_free_pool@@Base+0x44c>
   59cbc:	lsr	x5, x4, #50
   59cc0:	mov	w7, w11
   59cc4:	eor	x5, x5, #0x1
   59cc8:	mov	x9, x13
   59ccc:	and	w5, w5, #0x1
   59cd0:	mov	x2, x4
   59cd4:	b	59870 <mpfr_free_pool@@Base+0x518>
   59cd8:	mov	x8, #0x7fff                	// #32767
   59cdc:	cmp	x1, x8
   59ce0:	b.eq	59e00 <mpfr_free_pool@@Base+0xaa8>  // b.none
   59ce4:	cmp	x3, x8
   59ce8:	b.eq	59e74 <mpfr_free_pool@@Base+0xb1c>  // b.none
   59cec:	cbnz	x0, 59e18 <mpfr_free_pool@@Base+0xac0>
   59cf0:	mov	x2, x4
   59cf4:	mov	x9, x13
   59cf8:	b	59870 <mpfr_free_pool@@Base+0x518>
   59cfc:	mov	x0, #0x7fff                	// #32767
   59d00:	cmp	x3, x0
   59d04:	b.eq	59eb0 <mpfr_free_pool@@Base+0xb58>  // b.none
   59d08:	mov	x2, x4
   59d0c:	mov	x9, x13
   59d10:	mov	x1, x3
   59d14:	b	59698 <mpfr_free_pool@@Base+0x340>
   59d18:	and	x15, x15, #0xc00000
   59d1c:	mov	x2, #0x0                   	// #0
   59d20:	cmp	x15, #0x800, lsl #12
   59d24:	cset	w7, eq  // eq = none
   59d28:	b	596b8 <mpfr_free_pool@@Base+0x360>
   59d2c:	mov	x2, x4
   59d30:	mov	x9, x13
   59d34:	b	59524 <mpfr_free_pool@@Base+0x1cc>
   59d38:	mov	w0, #0x80                  	// #128
   59d3c:	sub	w0, w0, w5
   59d40:	subs	w5, w5, #0x40
   59d44:	lsl	x0, x2, x0
   59d48:	orr	x0, x9, x0
   59d4c:	csel	x9, x0, x9, ne  // ne = any
   59d50:	lsr	x2, x2, x5
   59d54:	cmp	x9, #0x0
   59d58:	cset	x9, ne  // ne = any
   59d5c:	orr	x9, x9, x2
   59d60:	b	59ae0 <mpfr_free_pool@@Base+0x788>
   59d64:	cmp	x13, x9
   59d68:	mov	w7, w11
   59d6c:	sbc	x2, x4, x2
   59d70:	sub	x9, x13, x9
   59d74:	mov	x1, x3
   59d78:	mov	x12, x5
   59d7c:	b	594b4 <mpfr_free_pool@@Base+0x15c>
   59d80:	ands	x3, x15, #0xc00000
   59d84:	b.eq	59cb4 <mpfr_free_pool@@Base+0x95c>  // b.none
   59d88:	cmp	x3, #0x400, lsl #12
   59d8c:	eor	w0, w7, #0x1
   59d90:	csel	w0, w0, wzr, eq  // eq = none
   59d94:	cbnz	w0, 59ed8 <mpfr_free_pool@@Base+0xb80>
   59d98:	cmp	x3, #0x800, lsl #12
   59d9c:	b.ne	59c48 <mpfr_free_pool@@Base+0x8f0>  // b.any
   59da0:	cbz	x12, 59e88 <mpfr_free_pool@@Base+0xb30>
   59da4:	mov	w0, #0x14                  	// #20
   59da8:	mov	x16, #0x1                   	// #1
   59dac:	b	597a4 <mpfr_free_pool@@Base+0x44c>
   59db0:	orr	x0, x4, x13
   59db4:	cbnz	x0, 59cbc <mpfr_free_pool@@Base+0x964>
   59db8:	mov	w7, w11
   59dbc:	b	599e0 <mpfr_free_pool@@Base+0x688>
   59dc0:	cbz	x8, 59ecc <mpfr_free_pool@@Base+0xb74>
   59dc4:	tst	x4, #0x4000000000000
   59dc8:	csinc	w0, w0, wzr, ne  // ne = any
   59dcc:	cbnz	x5, 59bac <mpfr_free_pool@@Base+0x854>
   59dd0:	mov	w7, w11
   59dd4:	mov	x2, x4
   59dd8:	mov	x9, x13
   59ddc:	mov	w5, w0
   59de0:	b	59870 <mpfr_free_pool@@Base+0x518>
   59de4:	orr	x8, x5, x3
   59de8:	cbz	x8, 59d18 <mpfr_free_pool@@Base+0x9c0>
   59dec:	and	x0, x5, #0x7
   59df0:	mov	x9, x5
   59df4:	mov	x2, x3
   59df8:	mov	w5, #0x1                   	// #1
   59dfc:	b	59534 <mpfr_free_pool@@Base+0x1dc>
   59e00:	cbz	x0, 59e6c <mpfr_free_pool@@Base+0xb14>
   59e04:	lsr	x5, x2, #50
   59e08:	cmp	x3, x1
   59e0c:	eor	x5, x5, #0x1
   59e10:	and	w5, w5, #0x1
   59e14:	b.eq	59ee4 <mpfr_free_pool@@Base+0xb8c>  // b.none
   59e18:	orr	x13, x4, x13
   59e1c:	cbz	x13, 59870 <mpfr_free_pool@@Base+0x518>
   59e20:	bfi	x6, x2, #61, #3
   59e24:	lsr	x0, x2, #3
   59e28:	tbz	x2, #50, 59e44 <mpfr_free_pool@@Base+0xaec>
   59e2c:	lsr	x1, x4, #3
   59e30:	tbnz	x4, #50, 59e44 <mpfr_free_pool@@Base+0xaec>
   59e34:	and	x6, x10, #0x1fffffffffffffff
   59e38:	mov	w7, w11
   59e3c:	orr	x6, x6, x4, lsl #61
   59e40:	mov	x0, x1
   59e44:	extr	x2, x0, x6, #61
   59e48:	mov	w0, w5
   59e4c:	bfi	x6, x2, #61, #3
   59e50:	lsr	x2, x2, #3
   59e54:	mov	x8, x6
   59e58:	b	5988c <mpfr_free_pool@@Base+0x534>
   59e5c:	adds	x9, x9, x13
   59e60:	mov	x1, x3
   59e64:	adc	x2, x4, x2
   59e68:	b	59728 <mpfr_free_pool@@Base+0x3d0>
   59e6c:	cmp	x3, x1
   59e70:	b.ne	59cf0 <mpfr_free_pool@@Base+0x998>  // b.any
   59e74:	orr	x1, x4, x13
   59e78:	cbnz	x1, 59eec <mpfr_free_pool@@Base+0xb94>
   59e7c:	cbz	x0, 599e0 <mpfr_free_pool@@Base+0x688>
   59e80:	b	59870 <mpfr_free_pool@@Base+0x518>
   59e84:	cbnz	x16, 59da4 <mpfr_free_pool@@Base+0xa4c>
   59e88:	mov	x2, #0xffffffffffffffff    	// #-1
   59e8c:	mov	w7, #0x0                   	// #0
   59e90:	mov	x9, x2
   59e94:	mov	x1, #0x7ffe                	// #32766
   59e98:	mov	w0, #0x14                  	// #20
   59e9c:	b	59564 <mpfr_free_pool@@Base+0x20c>
   59ea0:	mov	w7, w11
   59ea4:	mov	x2, x4
   59ea8:	mov	x9, x13
   59eac:	b	59870 <mpfr_free_pool@@Base+0x518>
   59eb0:	orr	x0, x4, x13
   59eb4:	cbz	x0, 599e0 <mpfr_free_pool@@Base+0x688>
   59eb8:	b	597fc <mpfr_free_pool@@Base+0x4a4>
   59ebc:	cmp	x3, x1
   59ec0:	b.eq	59dc0 <mpfr_free_pool@@Base+0xa68>  // b.none
   59ec4:	mov	w5, #0x0                   	// #0
   59ec8:	b	59b78 <mpfr_free_pool@@Base+0x820>
   59ecc:	cbnz	x5, 59ddc <mpfr_free_pool@@Base+0xa84>
   59ed0:	mov	w5, w0
   59ed4:	b	59b78 <mpfr_free_pool@@Base+0x820>
   59ed8:	mov	w0, #0x14                  	// #20
   59edc:	mov	x16, #0x0                   	// #0
   59ee0:	b	597a4 <mpfr_free_pool@@Base+0x44c>
   59ee4:	orr	x1, x4, x13
   59ee8:	cbz	x1, 59870 <mpfr_free_pool@@Base+0x518>
   59eec:	tst	x4, #0x4000000000000
   59ef0:	csinc	w5, w5, wzr, ne  // ne = any
   59ef4:	cbnz	x0, 59e20 <mpfr_free_pool@@Base+0xac8>
   59ef8:	b	59cf0 <mpfr_free_pool@@Base+0x998>
   59efc:	mov	x8, #0x0                   	// #0
   59f00:	mov	w1, #0x7fff                	// #32767
   59f04:	mov	x2, #0x0                   	// #0
   59f08:	b	59580 <mpfr_free_pool@@Base+0x228>
   59f0c:	nop
   59f10:	stp	x29, x30, [sp, #-48]!
   59f14:	mov	x29, sp
   59f18:	str	q0, [sp, #16]
   59f1c:	str	q1, [sp, #32]
   59f20:	ldp	x6, x1, [sp, #16]
   59f24:	ldp	x7, x0, [sp, #32]
   59f28:	mrs	x2, fpcr
   59f2c:	ubfx	x4, x1, #48, #15
   59f30:	lsr	x2, x1, #63
   59f34:	lsr	x3, x0, #63
   59f38:	ubfx	x9, x0, #0, #48
   59f3c:	mov	x5, #0x7fff                	// #32767
   59f40:	mov	x10, x6
   59f44:	cmp	x4, x5
   59f48:	and	w2, w2, #0xff
   59f4c:	ubfx	x1, x1, #0, #48
   59f50:	and	w3, w3, #0xff
   59f54:	ubfx	x0, x0, #48, #15
   59f58:	b.eq	59f8c <mpfr_free_pool@@Base+0xc34>  // b.none
   59f5c:	cmp	x0, x5
   59f60:	b.eq	59f78 <mpfr_free_pool@@Base+0xc20>  // b.none
   59f64:	cmp	x4, x0
   59f68:	mov	w0, #0x1                   	// #1
   59f6c:	b.eq	59fa4 <mpfr_free_pool@@Base+0xc4c>  // b.none
   59f70:	ldp	x29, x30, [sp], #48
   59f74:	ret
   59f78:	orr	x8, x9, x7
   59f7c:	cbnz	x8, 5a008 <mpfr_free_pool@@Base+0xcb0>
   59f80:	mov	w0, #0x1                   	// #1
   59f84:	ldp	x29, x30, [sp], #48
   59f88:	ret
   59f8c:	orr	x5, x1, x6
   59f90:	cbnz	x5, 59fd8 <mpfr_free_pool@@Base+0xc80>
   59f94:	cmp	x0, x4
   59f98:	b.ne	59f80 <mpfr_free_pool@@Base+0xc28>  // b.any
   59f9c:	orr	x8, x9, x7
   59fa0:	cbnz	x8, 5a008 <mpfr_free_pool@@Base+0xcb0>
   59fa4:	cmp	x1, x9
   59fa8:	mov	w0, #0x1                   	// #1
   59fac:	ccmp	x6, x7, #0x0, eq  // eq = none
   59fb0:	b.ne	59f70 <mpfr_free_pool@@Base+0xc18>  // b.any
   59fb4:	cmp	w2, w3
   59fb8:	mov	w0, #0x0                   	// #0
   59fbc:	b.eq	59f70 <mpfr_free_pool@@Base+0xc18>  // b.none
   59fc0:	mov	w0, #0x1                   	// #1
   59fc4:	cbnz	x4, 59f70 <mpfr_free_pool@@Base+0xc18>
   59fc8:	orr	x1, x1, x10
   59fcc:	cmp	x1, #0x0
   59fd0:	cset	w0, ne  // ne = any
   59fd4:	b	59f70 <mpfr_free_pool@@Base+0xc18>
   59fd8:	tst	x1, #0x800000000000
   59fdc:	b.ne	59ff4 <mpfr_free_pool@@Base+0xc9c>  // b.any
   59fe0:	mov	w0, #0x1                   	// #1
   59fe4:	bl	5b9c8 <mpfr_free_pool@@Base+0x2670>
   59fe8:	mov	w0, #0x1                   	// #1
   59fec:	ldp	x29, x30, [sp], #48
   59ff0:	ret
   59ff4:	cmp	x0, x4
   59ff8:	mov	w0, #0x1                   	// #1
   59ffc:	b.ne	59f70 <mpfr_free_pool@@Base+0xc18>  // b.any
   5a000:	orr	x8, x9, x7
   5a004:	cbz	x8, 59f70 <mpfr_free_pool@@Base+0xc18>
   5a008:	tst	x9, #0x800000000000
   5a00c:	b.eq	59fe0 <mpfr_free_pool@@Base+0xc88>  // b.none
   5a010:	b	59f80 <mpfr_free_pool@@Base+0xc28>
   5a014:	nop
   5a018:	stp	x29, x30, [sp, #-48]!
   5a01c:	mov	x29, sp
   5a020:	str	q0, [sp, #16]
   5a024:	str	q1, [sp, #32]
   5a028:	ldp	x8, x1, [sp, #16]
   5a02c:	ldp	x9, x0, [sp, #32]
   5a030:	mrs	x2, fpcr
   5a034:	ubfx	x4, x1, #48, #15
   5a038:	ubfx	x10, x1, #0, #48
   5a03c:	lsr	x2, x1, #63
   5a040:	mov	x7, #0x7fff                	// #32767
   5a044:	mov	x5, x8
   5a048:	cmp	x4, x7
   5a04c:	ubfx	x11, x0, #0, #48
   5a050:	ubfx	x6, x0, #48, #15
   5a054:	lsr	x1, x0, #63
   5a058:	mov	x3, x9
   5a05c:	b.eq	5a098 <mpfr_free_pool@@Base+0xd40>  // b.none
   5a060:	cmp	x6, x7
   5a064:	b.eq	5a0a8 <mpfr_free_pool@@Base+0xd50>  // b.none
   5a068:	cbnz	x4, 5a0d0 <mpfr_free_pool@@Base+0xd78>
   5a06c:	orr	x5, x10, x8
   5a070:	cmp	x5, #0x0
   5a074:	cset	w0, eq  // eq = none
   5a078:	cbnz	x6, 5a084 <mpfr_free_pool@@Base+0xd2c>
   5a07c:	orr	x3, x11, x9
   5a080:	cbz	x3, 5a0f0 <mpfr_free_pool@@Base+0xd98>
   5a084:	cbz	w0, 5a0b4 <mpfr_free_pool@@Base+0xd5c>
   5a088:	cmp	x1, #0x0
   5a08c:	csinv	w0, w0, wzr, ne  // ne = any
   5a090:	ldp	x29, x30, [sp], #48
   5a094:	ret
   5a098:	orr	x0, x10, x8
   5a09c:	cbnz	x0, 5a0fc <mpfr_free_pool@@Base+0xda4>
   5a0a0:	cmp	x6, x4
   5a0a4:	b.ne	5a0d0 <mpfr_free_pool@@Base+0xd78>  // b.any
   5a0a8:	orr	x3, x11, x3
   5a0ac:	cbnz	x3, 5a0fc <mpfr_free_pool@@Base+0xda4>
   5a0b0:	cbz	x4, 5a0e0 <mpfr_free_pool@@Base+0xd88>
   5a0b4:	cmp	x2, x1
   5a0b8:	b.eq	5a110 <mpfr_free_pool@@Base+0xdb8>  // b.none
   5a0bc:	cmp	x2, #0x0
   5a0c0:	mov	w0, #0xffffffff            	// #-1
   5a0c4:	cneg	w0, w0, eq  // eq = none
   5a0c8:	ldp	x29, x30, [sp], #48
   5a0cc:	ret
   5a0d0:	cbnz	x6, 5a0b4 <mpfr_free_pool@@Base+0xd5c>
   5a0d4:	orr	x3, x11, x3
   5a0d8:	cbnz	x3, 5a0b4 <mpfr_free_pool@@Base+0xd5c>
   5a0dc:	b	5a0bc <mpfr_free_pool@@Base+0xd64>
   5a0e0:	orr	x5, x10, x5
   5a0e4:	cmp	x5, #0x0
   5a0e8:	cset	w0, eq  // eq = none
   5a0ec:	b	5a084 <mpfr_free_pool@@Base+0xd2c>
   5a0f0:	mov	w0, #0x0                   	// #0
   5a0f4:	cbz	x5, 5a090 <mpfr_free_pool@@Base+0xd38>
   5a0f8:	b	5a0bc <mpfr_free_pool@@Base+0xd64>
   5a0fc:	mov	w0, #0x1                   	// #1
   5a100:	bl	5b9c8 <mpfr_free_pool@@Base+0x2670>
   5a104:	mov	w0, #0xfffffffe            	// #-2
   5a108:	ldp	x29, x30, [sp], #48
   5a10c:	ret
   5a110:	cmp	x4, x6
   5a114:	b.gt	5a0bc <mpfr_free_pool@@Base+0xd64>
   5a118:	b.lt	5a150 <mpfr_free_pool@@Base+0xdf8>  // b.tstop
   5a11c:	cmp	x10, x11
   5a120:	b.hi	5a0bc <mpfr_free_pool@@Base+0xd64>  // b.pmore
   5a124:	cset	w0, eq  // eq = none
   5a128:	cmp	w0, #0x0
   5a12c:	ccmp	x8, x9, #0x0, ne  // ne = any
   5a130:	b.hi	5a0bc <mpfr_free_pool@@Base+0xd64>  // b.pmore
   5a134:	cmp	x10, x11
   5a138:	b.cc	5a150 <mpfr_free_pool@@Base+0xdf8>  // b.lo, b.ul, b.last
   5a13c:	cmp	w0, #0x0
   5a140:	mov	w0, #0x0                   	// #0
   5a144:	ccmp	x8, x9, #0x2, ne  // ne = any
   5a148:	b.cs	5a090 <mpfr_free_pool@@Base+0xd38>  // b.hs, b.nlast
   5a14c:	nop
   5a150:	cmp	x2, #0x0
   5a154:	mov	w0, #0x1                   	// #1
   5a158:	cneg	w0, w0, eq  // eq = none
   5a15c:	b	5a090 <mpfr_free_pool@@Base+0xd38>
   5a160:	stp	x29, x30, [sp, #-48]!
   5a164:	mov	x29, sp
   5a168:	str	q0, [sp, #16]
   5a16c:	str	q1, [sp, #32]
   5a170:	ldp	x8, x1, [sp, #16]
   5a174:	ldp	x9, x0, [sp, #32]
   5a178:	mrs	x2, fpcr
   5a17c:	ubfx	x4, x1, #48, #15
   5a180:	ubfx	x10, x1, #0, #48
   5a184:	lsr	x2, x1, #63
   5a188:	mov	x5, #0x7fff                	// #32767
   5a18c:	mov	x6, x8
   5a190:	cmp	x4, x5
   5a194:	ubfx	x11, x0, #0, #48
   5a198:	ubfx	x7, x0, #48, #15
   5a19c:	lsr	x1, x0, #63
   5a1a0:	mov	x3, x9
   5a1a4:	b.eq	5a1dc <mpfr_free_pool@@Base+0xe84>  // b.none
   5a1a8:	cmp	x7, x5
   5a1ac:	b.eq	5a1ec <mpfr_free_pool@@Base+0xe94>  // b.none
   5a1b0:	cbnz	x4, 5a218 <mpfr_free_pool@@Base+0xec0>
   5a1b4:	orr	x6, x10, x8
   5a1b8:	cmp	x6, #0x0
   5a1bc:	cset	w0, eq  // eq = none
   5a1c0:	cbnz	x7, 5a204 <mpfr_free_pool@@Base+0xeac>
   5a1c4:	orr	x3, x11, x9
   5a1c8:	cbnz	x3, 5a204 <mpfr_free_pool@@Base+0xeac>
   5a1cc:	mov	w0, #0x0                   	// #0
   5a1d0:	cbnz	x6, 5a22c <mpfr_free_pool@@Base+0xed4>
   5a1d4:	ldp	x29, x30, [sp], #48
   5a1d8:	ret
   5a1dc:	orr	x0, x10, x8
   5a1e0:	cbnz	x0, 5a240 <mpfr_free_pool@@Base+0xee8>
   5a1e4:	cmp	x7, x4
   5a1e8:	b.ne	5a218 <mpfr_free_pool@@Base+0xec0>  // b.any
   5a1ec:	orr	x3, x11, x3
   5a1f0:	cbnz	x3, 5a240 <mpfr_free_pool@@Base+0xee8>
   5a1f4:	cbnz	x4, 5a224 <mpfr_free_pool@@Base+0xecc>
   5a1f8:	orr	x6, x10, x6
   5a1fc:	cmp	x6, #0x0
   5a200:	cset	w0, eq  // eq = none
   5a204:	cbz	w0, 5a224 <mpfr_free_pool@@Base+0xecc>
   5a208:	cmp	x1, #0x0
   5a20c:	csinv	w0, w0, wzr, ne  // ne = any
   5a210:	ldp	x29, x30, [sp], #48
   5a214:	ret
   5a218:	cbnz	x7, 5a224 <mpfr_free_pool@@Base+0xecc>
   5a21c:	orr	x3, x11, x3
   5a220:	cbz	x3, 5a22c <mpfr_free_pool@@Base+0xed4>
   5a224:	cmp	x2, x1
   5a228:	b.eq	5a254 <mpfr_free_pool@@Base+0xefc>  // b.none
   5a22c:	cmp	x2, #0x0
   5a230:	mov	w0, #0xffffffff            	// #-1
   5a234:	cneg	w0, w0, eq  // eq = none
   5a238:	ldp	x29, x30, [sp], #48
   5a23c:	ret
   5a240:	mov	w0, #0x1                   	// #1
   5a244:	bl	5b9c8 <mpfr_free_pool@@Base+0x2670>
   5a248:	mov	w0, #0x2                   	// #2
   5a24c:	ldp	x29, x30, [sp], #48
   5a250:	ret
   5a254:	cmp	x4, x7
   5a258:	b.gt	5a22c <mpfr_free_pool@@Base+0xed4>
   5a25c:	b.lt	5a290 <mpfr_free_pool@@Base+0xf38>  // b.tstop
   5a260:	cmp	x10, x11
   5a264:	b.hi	5a22c <mpfr_free_pool@@Base+0xed4>  // b.pmore
   5a268:	cset	w0, eq  // eq = none
   5a26c:	cmp	w0, #0x0
   5a270:	ccmp	x8, x9, #0x0, ne  // ne = any
   5a274:	b.hi	5a22c <mpfr_free_pool@@Base+0xed4>  // b.pmore
   5a278:	cmp	x10, x11
   5a27c:	b.cc	5a290 <mpfr_free_pool@@Base+0xf38>  // b.lo, b.ul, b.last
   5a280:	cmp	w0, #0x0
   5a284:	mov	w0, #0x0                   	// #0
   5a288:	ccmp	x8, x9, #0x2, ne  // ne = any
   5a28c:	b.cs	5a1d4 <mpfr_free_pool@@Base+0xe7c>  // b.hs, b.nlast
   5a290:	cmp	x2, #0x0
   5a294:	mov	w0, #0x1                   	// #1
   5a298:	cneg	w0, w0, eq  // eq = none
   5a29c:	b	5a1d4 <mpfr_free_pool@@Base+0xe7c>
   5a2a0:	stp	x29, x30, [sp, #-80]!
   5a2a4:	mov	x29, sp
   5a2a8:	str	q0, [sp, #48]
   5a2ac:	str	q1, [sp, #64]
   5a2b0:	ldp	x1, x0, [sp, #48]
   5a2b4:	ldp	x6, x2, [sp, #64]
   5a2b8:	mrs	x11, fpcr
   5a2bc:	lsr	x3, x0, #63
   5a2c0:	ubfx	x7, x0, #0, #48
   5a2c4:	and	w12, w3, #0xff
   5a2c8:	mov	x14, x3
   5a2cc:	ubfx	x3, x0, #48, #15
   5a2d0:	cbz	w3, 5a678 <mpfr_free_pool@@Base+0x1320>
   5a2d4:	mov	w4, #0x7fff                	// #32767
   5a2d8:	cmp	w3, w4
   5a2dc:	b.eq	5a71c <mpfr_free_pool@@Base+0x13c4>  // b.none
   5a2e0:	and	x3, x3, #0xffff
   5a2e4:	extr	x4, x7, x1, #61
   5a2e8:	mov	x18, #0xffffffffffffc001    	// #-16383
   5a2ec:	orr	x7, x4, #0x8000000000000
   5a2f0:	add	x3, x3, x18
   5a2f4:	lsl	x5, x1, #3
   5a2f8:	mov	x16, #0x0                   	// #0
   5a2fc:	mov	x1, #0x0                   	// #0
   5a300:	mov	w0, #0x0                   	// #0
   5a304:	lsr	x8, x2, #63
   5a308:	ubfx	x4, x2, #0, #48
   5a30c:	and	w15, w8, #0xff
   5a310:	mov	x13, x8
   5a314:	ubfx	x9, x2, #48, #15
   5a318:	cbz	w9, 5a6d8 <mpfr_free_pool@@Base+0x1380>
   5a31c:	mov	w8, #0x7fff                	// #32767
   5a320:	cmp	w9, w8
   5a324:	b.eq	5a3a8 <mpfr_free_pool@@Base+0x1050>  // b.none
   5a328:	and	x9, x9, #0xffff
   5a32c:	mov	x17, #0xffffffffffffc001    	// #-16383
   5a330:	add	x9, x9, x17
   5a334:	extr	x2, x4, x6, #61
   5a338:	add	x9, x9, x3
   5a33c:	lsl	x6, x6, #3
   5a340:	orr	x4, x2, #0x8000000000000
   5a344:	mov	x2, #0x0                   	// #0
   5a348:	eor	w8, w12, w15
   5a34c:	cmp	x1, #0xa
   5a350:	and	w10, w8, #0xff
   5a354:	add	x3, x9, #0x1
   5a358:	and	x8, x8, #0xff
   5a35c:	b.le	5a3e0 <mpfr_free_pool@@Base+0x1088>
   5a360:	cmp	x1, #0xb
   5a364:	b.eq	5aa78 <mpfr_free_pool@@Base+0x1720>  // b.none
   5a368:	mov	w15, w12
   5a36c:	mov	x13, x14
   5a370:	mov	w10, w15
   5a374:	cmp	x16, #0x2
   5a378:	b.eq	5a73c <mpfr_free_pool@@Base+0x13e4>  // b.none
   5a37c:	mov	x4, x7
   5a380:	mov	x6, x5
   5a384:	mov	x2, x16
   5a388:	mov	x8, x13
   5a38c:	cmp	x2, #0x3
   5a390:	b.ne	5a3fc <mpfr_free_pool@@Base+0x10a4>  // b.any
   5a394:	orr	x4, x4, #0x800000000000
   5a398:	mov	x5, x6
   5a39c:	and	x4, x4, #0xffffffffffff
   5a3a0:	mov	w1, #0x7fff                	// #32767
   5a3a4:	b	5a410 <mpfr_free_pool@@Base+0x10b8>
   5a3a8:	mov	x8, #0x7fff                	// #32767
   5a3ac:	orr	x2, x4, x6
   5a3b0:	add	x9, x3, x8
   5a3b4:	cbnz	x2, 5a434 <mpfr_free_pool@@Base+0x10dc>
   5a3b8:	eor	w8, w12, w15
   5a3bc:	orr	x1, x1, #0x2
   5a3c0:	and	w10, w8, #0xff
   5a3c4:	cmp	x1, #0xa
   5a3c8:	add	x3, x3, #0x8, lsl #12
   5a3cc:	and	x8, x8, #0xff
   5a3d0:	mov	x6, #0x0                   	// #0
   5a3d4:	b.gt	5a9ec <mpfr_free_pool@@Base+0x1694>
   5a3d8:	mov	x4, #0x0                   	// #0
   5a3dc:	mov	x2, #0x2                   	// #2
   5a3e0:	cmp	x1, #0x2
   5a3e4:	b.gt	5a45c <mpfr_free_pool@@Base+0x1104>
   5a3e8:	sub	x1, x1, #0x1
   5a3ec:	cmp	x1, #0x1
   5a3f0:	b.hi	5a498 <mpfr_free_pool@@Base+0x1140>  // b.pmore
   5a3f4:	cmp	x2, #0x2
   5a3f8:	b.eq	5a73c <mpfr_free_pool@@Base+0x13e4>  // b.none
   5a3fc:	cmp	x2, #0x1
   5a400:	b.ne	5a5f8 <mpfr_free_pool@@Base+0x12a0>  // b.any
   5a404:	mov	w1, #0x0                   	// #0
   5a408:	mov	x4, #0x0                   	// #0
   5a40c:	mov	x5, #0x0                   	// #0
   5a410:	mov	x3, #0x0                   	// #0
   5a414:	orr	w1, w1, w10, lsl #15
   5a418:	bfxil	x3, x4, #0, #48
   5a41c:	fmov	d0, x5
   5a420:	bfi	x3, x1, #48, #16
   5a424:	fmov	v0.d[1], x3
   5a428:	cbnz	w0, 5a868 <mpfr_free_pool@@Base+0x1510>
   5a42c:	ldp	x29, x30, [sp], #80
   5a430:	ret
   5a434:	tst	x4, #0x800000000000
   5a438:	eor	w8, w12, w15
   5a43c:	orr	x1, x1, #0x3
   5a440:	csinc	w0, w0, wzr, ne  // ne = any
   5a444:	and	w10, w8, #0xff
   5a448:	add	x3, x3, #0x8, lsl #12
   5a44c:	cmp	x1, #0xa
   5a450:	and	x8, x8, #0xff
   5a454:	mov	x2, #0x3                   	// #3
   5a458:	b.gt	5aa6c <mpfr_free_pool@@Base+0x1714>
   5a45c:	mov	x12, #0x1                   	// #1
   5a460:	mov	x14, #0x530                 	// #1328
   5a464:	lsl	x1, x12, x1
   5a468:	tst	x1, x14
   5a46c:	b.ne	5a66c <mpfr_free_pool@@Base+0x1314>  // b.any
   5a470:	mov	x14, #0x240                 	// #576
   5a474:	tst	x1, x14
   5a478:	b.ne	5a654 <mpfr_free_pool@@Base+0x12fc>  // b.any
   5a47c:	mov	x12, #0x88                  	// #136
   5a480:	tst	x1, x12
   5a484:	b.eq	5a498 <mpfr_free_pool@@Base+0x1140>  // b.none
   5a488:	mov	x7, x4
   5a48c:	mov	x5, x6
   5a490:	mov	x16, x2
   5a494:	b	5a370 <mpfr_free_pool@@Base+0x1018>
   5a498:	lsr	x13, x5, #32
   5a49c:	and	x12, x6, #0xffffffff
   5a4a0:	and	x15, x5, #0xffffffff
   5a4a4:	lsr	x6, x6, #32
   5a4a8:	and	x18, x4, #0xffffffff
   5a4ac:	lsr	x2, x4, #32
   5a4b0:	mul	x4, x13, x12
   5a4b4:	stp	x21, x22, [sp, #32]
   5a4b8:	lsr	x22, x7, #32
   5a4bc:	and	x5, x7, #0xffffffff
   5a4c0:	mul	x16, x12, x15
   5a4c4:	madd	x7, x6, x15, x4
   5a4c8:	stp	x19, x20, [sp, #16]
   5a4cc:	mul	x1, x13, x18
   5a4d0:	mul	x17, x15, x18
   5a4d4:	and	x30, x16, #0xffffffff
   5a4d8:	madd	x15, x2, x15, x1
   5a4dc:	add	x16, x7, x16, lsr #32
   5a4e0:	mul	x21, x22, x12
   5a4e4:	cmp	x4, x16
   5a4e8:	mul	x20, x22, x18
   5a4ec:	mov	x14, #0x100000000           	// #4294967296
   5a4f0:	mul	x19, x13, x6
   5a4f4:	add	x15, x15, x17, lsr #32
   5a4f8:	mul	x12, x12, x5
   5a4fc:	and	x17, x17, #0xffffffff
   5a500:	mul	x18, x5, x18
   5a504:	add	x4, x19, x14
   5a508:	madd	x7, x6, x5, x21
   5a50c:	csel	x19, x4, x19, hi  // hi = pmore
   5a510:	madd	x5, x2, x5, x20
   5a514:	cmp	x1, x15
   5a518:	mul	x13, x13, x2
   5a51c:	add	x17, x17, x15, lsl #32
   5a520:	mul	x6, x6, x22
   5a524:	add	x7, x7, x12, lsr #32
   5a528:	add	x5, x5, x18, lsr #32
   5a52c:	add	x4, x13, x14
   5a530:	mul	x2, x2, x22
   5a534:	csel	x13, x4, x13, hi  // hi = pmore
   5a538:	and	x1, x18, #0xffffffff
   5a53c:	cmp	x21, x7
   5a540:	add	x4, x6, x14
   5a544:	add	x30, x30, x16, lsl #32
   5a548:	csel	x6, x4, x6, hi  // hi = pmore
   5a54c:	add	x13, x13, x15, lsr #32
   5a550:	cmp	x20, x5
   5a554:	add	x1, x1, x5, lsl #32
   5a558:	add	x16, x17, x16, lsr #32
   5a55c:	add	x14, x2, x14
   5a560:	csel	x2, x14, x2, hi  // hi = pmore
   5a564:	add	x16, x19, x16
   5a568:	adds	x1, x1, x13
   5a56c:	and	x12, x12, #0xffffffff
   5a570:	cset	x13, cs  // cs = hs, nlast
   5a574:	cmp	x16, x17
   5a578:	cset	x4, cc  // cc = lo, ul, last
   5a57c:	add	x12, x12, x7, lsl #32
   5a580:	adds	x1, x1, x4
   5a584:	lsr	x5, x5, #32
   5a588:	cset	x4, cs  // cs = hs, nlast
   5a58c:	cmp	x13, #0x0
   5a590:	ccmp	x4, #0x0, #0x0, eq  // eq = none
   5a594:	add	x7, x6, x7, lsr #32
   5a598:	cinc	x5, x5, ne  // ne = any
   5a59c:	adds	x6, x16, x12
   5a5a0:	cset	x4, cs  // cs = hs, nlast
   5a5a4:	adds	x1, x1, x7
   5a5a8:	cset	x7, cs  // cs = hs, nlast
   5a5ac:	adds	x4, x1, x4
   5a5b0:	cset	x1, cs  // cs = hs, nlast
   5a5b4:	cmp	x7, #0x0
   5a5b8:	orr	x30, x30, x6, lsl #13
   5a5bc:	ccmp	x1, #0x0, #0x0, eq  // eq = none
   5a5c0:	cinc	x1, x2, ne  // ne = any
   5a5c4:	cmp	x30, #0x0
   5a5c8:	add	x1, x1, x5
   5a5cc:	cset	x2, ne  // ne = any
   5a5d0:	orr	x6, x2, x6, lsr #51
   5a5d4:	orr	x6, x6, x4, lsl #13
   5a5d8:	extr	x4, x1, x4, #51
   5a5dc:	tbz	x1, #39, 5a8f0 <mpfr_free_pool@@Base+0x1598>
   5a5e0:	ldp	x19, x20, [sp, #16]
   5a5e4:	and	x1, x6, #0x1
   5a5e8:	ldp	x21, x22, [sp, #32]
   5a5ec:	orr	x6, x1, x6, lsr #1
   5a5f0:	orr	x6, x6, x4, lsl #63
   5a5f4:	lsr	x4, x4, #1
   5a5f8:	mov	x1, #0x3fff                	// #16383
   5a5fc:	add	x2, x3, x1
   5a600:	cmp	x2, #0x0
   5a604:	b.le	5a79c <mpfr_free_pool@@Base+0x1444>
   5a608:	tst	x6, #0x7
   5a60c:	b.eq	5a62c <mpfr_free_pool@@Base+0x12d4>  // b.none
   5a610:	and	x1, x11, #0xc00000
   5a614:	orr	w0, w0, #0x10
   5a618:	cmp	x1, #0x400, lsl #12
   5a61c:	b.eq	5a9e4 <mpfr_free_pool@@Base+0x168c>  // b.none
   5a620:	cmp	x1, #0x800, lsl #12
   5a624:	b.eq	5a98c <mpfr_free_pool@@Base+0x1634>  // b.none
   5a628:	cbz	x1, 5a974 <mpfr_free_pool@@Base+0x161c>
   5a62c:	tbz	x4, #52, 5a638 <mpfr_free_pool@@Base+0x12e0>
   5a630:	and	x4, x4, #0xffefffffffffffff
   5a634:	add	x2, x3, #0x4, lsl #12
   5a638:	mov	x1, #0x7ffe                	// #32766
   5a63c:	cmp	x2, x1
   5a640:	b.gt	5a8c4 <mpfr_free_pool@@Base+0x156c>
   5a644:	and	w1, w2, #0x7fff
   5a648:	extr	x5, x4, x6, #3
   5a64c:	ubfx	x4, x4, #3, #48
   5a650:	b	5a410 <mpfr_free_pool@@Base+0x10b8>
   5a654:	mov	w0, w12
   5a658:	mov	w10, #0x0                   	// #0
   5a65c:	mov	x4, #0xffffffffffff        	// #281474976710655
   5a660:	mov	x5, #0xffffffffffffffff    	// #-1
   5a664:	mov	w1, #0x7fff                	// #32767
   5a668:	b	5a410 <mpfr_free_pool@@Base+0x10b8>
   5a66c:	mov	w15, w10
   5a670:	mov	x13, x8
   5a674:	b	5a370 <mpfr_free_pool@@Base+0x1018>
   5a678:	orr	x5, x7, x1
   5a67c:	cbz	x5, 5a784 <mpfr_free_pool@@Base+0x142c>
   5a680:	cbz	x7, 5a8a0 <mpfr_free_pool@@Base+0x1548>
   5a684:	clz	x0, x7
   5a688:	sub	x4, x0, #0xf
   5a68c:	add	w5, w4, #0x3
   5a690:	mov	w3, #0x3d                  	// #61
   5a694:	sub	w3, w3, w4
   5a698:	lsl	x4, x7, x5
   5a69c:	lsr	x3, x1, x3
   5a6a0:	orr	x7, x3, x4
   5a6a4:	lsl	x5, x1, x5
   5a6a8:	lsr	x8, x2, #63
   5a6ac:	mov	x3, #0xffffffffffffc011    	// #-16367
   5a6b0:	ubfx	x4, x2, #0, #48
   5a6b4:	sub	x3, x3, x0
   5a6b8:	and	w15, w8, #0xff
   5a6bc:	mov	x13, x8
   5a6c0:	ubfx	x9, x2, #48, #15
   5a6c4:	mov	x1, #0x0                   	// #0
   5a6c8:	mov	x16, #0x0                   	// #0
   5a6cc:	mov	w0, #0x0                   	// #0
   5a6d0:	cbnz	w9, 5a31c <mpfr_free_pool@@Base+0xfc4>
   5a6d4:	nop
   5a6d8:	orr	x2, x4, x6
   5a6dc:	cbz	x2, 5a74c <mpfr_free_pool@@Base+0x13f4>
   5a6e0:	cbz	x4, 5a87c <mpfr_free_pool@@Base+0x1524>
   5a6e4:	clz	x9, x4
   5a6e8:	sub	x2, x9, #0xf
   5a6ec:	add	w10, w2, #0x3
   5a6f0:	mov	w8, #0x3d                  	// #61
   5a6f4:	sub	w8, w8, w2
   5a6f8:	lsl	x2, x4, x10
   5a6fc:	lsr	x8, x6, x8
   5a700:	orr	x4, x8, x2
   5a704:	lsl	x6, x6, x10
   5a708:	sub	x9, x3, x9
   5a70c:	mov	x10, #0xffffffffffffc011    	// #-16367
   5a710:	mov	x2, #0x0                   	// #0
   5a714:	add	x9, x9, x10
   5a718:	b	5a348 <mpfr_free_pool@@Base+0xff0>
   5a71c:	orr	x5, x7, x1
   5a720:	cbnz	x5, 5a764 <mpfr_free_pool@@Base+0x140c>
   5a724:	mov	x7, #0x0                   	// #0
   5a728:	mov	x1, #0x8                   	// #8
   5a72c:	mov	x3, #0x7fff                	// #32767
   5a730:	mov	x16, #0x2                   	// #2
   5a734:	mov	w0, #0x0                   	// #0
   5a738:	b	5a304 <mpfr_free_pool@@Base+0xfac>
   5a73c:	mov	w1, #0x7fff                	// #32767
   5a740:	mov	x4, #0x0                   	// #0
   5a744:	mov	x5, #0x0                   	// #0
   5a748:	b	5a410 <mpfr_free_pool@@Base+0x10b8>
   5a74c:	orr	x1, x1, #0x1
   5a750:	mov	x9, x3
   5a754:	mov	x4, #0x0                   	// #0
   5a758:	mov	x6, #0x0                   	// #0
   5a75c:	mov	x2, #0x1                   	// #1
   5a760:	b	5a348 <mpfr_free_pool@@Base+0xff0>
   5a764:	lsr	x0, x7, #47
   5a768:	mov	x5, x1
   5a76c:	eor	x0, x0, #0x1
   5a770:	mov	x1, #0xc                   	// #12
   5a774:	and	w0, w0, #0x1
   5a778:	mov	x3, #0x7fff                	// #32767
   5a77c:	mov	x16, #0x3                   	// #3
   5a780:	b	5a304 <mpfr_free_pool@@Base+0xfac>
   5a784:	mov	x7, #0x0                   	// #0
   5a788:	mov	x1, #0x4                   	// #4
   5a78c:	mov	x3, #0x0                   	// #0
   5a790:	mov	x16, #0x1                   	// #1
   5a794:	mov	w0, #0x0                   	// #0
   5a798:	b	5a304 <mpfr_free_pool@@Base+0xfac>
   5a79c:	mov	x1, #0x1                   	// #1
   5a7a0:	sub	x2, x1, x2
   5a7a4:	cmp	x2, #0x74
   5a7a8:	b.gt	5a820 <mpfr_free_pool@@Base+0x14c8>
   5a7ac:	cmp	x2, #0x3f
   5a7b0:	b.le	5a900 <mpfr_free_pool@@Base+0x15a8>
   5a7b4:	mov	w1, #0x80                  	// #128
   5a7b8:	sub	w1, w1, w2
   5a7bc:	cmp	x2, #0x40
   5a7c0:	sub	w2, w2, #0x40
   5a7c4:	lsl	x1, x4, x1
   5a7c8:	orr	x1, x6, x1
   5a7cc:	csel	x6, x1, x6, ne  // ne = any
   5a7d0:	lsr	x2, x4, x2
   5a7d4:	cmp	x6, #0x0
   5a7d8:	cset	x5, ne  // ne = any
   5a7dc:	orr	x5, x5, x2
   5a7e0:	ands	x2, x5, #0x7
   5a7e4:	b.eq	5a934 <mpfr_free_pool@@Base+0x15dc>  // b.none
   5a7e8:	mov	x2, #0x0                   	// #0
   5a7ec:	and	x11, x11, #0xc00000
   5a7f0:	orr	w0, w0, #0x10
   5a7f4:	cmp	x11, #0x400, lsl #12
   5a7f8:	b.eq	5aa44 <mpfr_free_pool@@Base+0x16ec>  // b.none
   5a7fc:	cmp	x11, #0x800, lsl #12
   5a800:	b.eq	5aa58 <mpfr_free_pool@@Base+0x1700>  // b.none
   5a804:	cbz	x11, 5a99c <mpfr_free_pool@@Base+0x1644>
   5a808:	tbnz	x2, #51, 5a9b4 <mpfr_free_pool@@Base+0x165c>
   5a80c:	ubfx	x4, x2, #3, #48
   5a810:	extr	x5, x2, x5, #3
   5a814:	orr	w0, w0, #0x8
   5a818:	mov	w1, #0x0                   	// #0
   5a81c:	b	5a850 <mpfr_free_pool@@Base+0x14f8>
   5a820:	orr	x5, x6, x4
   5a824:	cbz	x5, 5a844 <mpfr_free_pool@@Base+0x14ec>
   5a828:	and	x11, x11, #0xc00000
   5a82c:	orr	w0, w0, #0x10
   5a830:	cmp	x11, #0x400, lsl #12
   5a834:	sub	x5, x1, x8
   5a838:	b.eq	5a844 <mpfr_free_pool@@Base+0x14ec>  // b.none
   5a83c:	cmp	x11, #0x800, lsl #12
   5a840:	csel	x5, x8, xzr, eq  // eq = none
   5a844:	orr	w0, w0, #0x8
   5a848:	mov	w1, #0x0                   	// #0
   5a84c:	mov	x4, #0x0                   	// #0
   5a850:	mov	x3, #0x0                   	// #0
   5a854:	fmov	d0, x5
   5a858:	bfxil	x3, x4, #0, #48
   5a85c:	bfi	x3, x1, #48, #15
   5a860:	bfi	x3, x10, #63, #1
   5a864:	fmov	v0.d[1], x3
   5a868:	str	q0, [sp, #48]
   5a86c:	bl	5b9c8 <mpfr_free_pool@@Base+0x2670>
   5a870:	ldr	q0, [sp, #48]
   5a874:	ldp	x29, x30, [sp], #80
   5a878:	ret
   5a87c:	clz	x9, x6
   5a880:	add	x2, x9, #0x31
   5a884:	add	x9, x9, #0x40
   5a888:	cmp	x2, #0x3c
   5a88c:	b.le	5a6ec <mpfr_free_pool@@Base+0x1394>
   5a890:	sub	w2, w2, #0x3d
   5a894:	lsl	x4, x6, x2
   5a898:	mov	x6, #0x0                   	// #0
   5a89c:	b	5a708 <mpfr_free_pool@@Base+0x13b0>
   5a8a0:	clz	x3, x1
   5a8a4:	add	x4, x3, #0x31
   5a8a8:	add	x0, x3, #0x40
   5a8ac:	cmp	x4, #0x3c
   5a8b0:	b.le	5a68c <mpfr_free_pool@@Base+0x1334>
   5a8b4:	sub	w4, w4, #0x3d
   5a8b8:	mov	x5, #0x0                   	// #0
   5a8bc:	lsl	x7, x1, x4
   5a8c0:	b	5a6a8 <mpfr_free_pool@@Base+0x1350>
   5a8c4:	and	x5, x11, #0xc00000
   5a8c8:	cmp	x5, #0x400, lsl #12
   5a8cc:	b.eq	5a9c8 <mpfr_free_pool@@Base+0x1670>  // b.none
   5a8d0:	cmp	x5, #0x800, lsl #12
   5a8d4:	b.eq	5a958 <mpfr_free_pool@@Base+0x1600>  // b.none
   5a8d8:	cbz	x5, 5a94c <mpfr_free_pool@@Base+0x15f4>
   5a8dc:	mov	x4, #0xffffffffffff        	// #281474976710655
   5a8e0:	mov	x5, #0xffffffffffffffff    	// #-1
   5a8e4:	mov	w2, #0x14                  	// #20
   5a8e8:	orr	w0, w0, w2
   5a8ec:	b	5a850 <mpfr_free_pool@@Base+0x14f8>
   5a8f0:	mov	x3, x9
   5a8f4:	ldp	x19, x20, [sp, #16]
   5a8f8:	ldp	x21, x22, [sp, #32]
   5a8fc:	b	5a5f8 <mpfr_free_pool@@Base+0x12a0>
   5a900:	mov	w1, #0x40                  	// #64
   5a904:	sub	w1, w1, w2
   5a908:	lsr	x3, x6, x2
   5a90c:	lsl	x6, x6, x1
   5a910:	cmp	x6, #0x0
   5a914:	lsl	x5, x4, x1
   5a918:	cset	x1, ne  // ne = any
   5a91c:	orr	x5, x5, x3
   5a920:	lsr	x2, x4, x2
   5a924:	orr	x5, x5, x1
   5a928:	tst	x5, #0x7
   5a92c:	b.ne	5a7ec <mpfr_free_pool@@Base+0x1494>  // b.any
   5a930:	tbnz	x2, #51, 5aa64 <mpfr_free_pool@@Base+0x170c>
   5a934:	ubfx	x4, x2, #3, #48
   5a938:	extr	x5, x2, x5, #3
   5a93c:	mov	w1, #0x0                   	// #0
   5a940:	tbz	w11, #11, 5a410 <mpfr_free_pool@@Base+0x10b8>
   5a944:	orr	w0, w0, #0x8
   5a948:	b	5a850 <mpfr_free_pool@@Base+0x14f8>
   5a94c:	mov	w1, #0x7fff                	// #32767
   5a950:	mov	x4, #0x0                   	// #0
   5a954:	b	5a8e4 <mpfr_free_pool@@Base+0x158c>
   5a958:	cmp	x8, #0x0
   5a95c:	mov	w2, #0x7fff                	// #32767
   5a960:	mov	x4, #0xffffffffffff        	// #281474976710655
   5a964:	csel	w1, w1, w2, eq  // eq = none
   5a968:	csel	x4, x4, xzr, eq  // eq = none
   5a96c:	csetm	x5, eq  // eq = none
   5a970:	b	5a8e4 <mpfr_free_pool@@Base+0x158c>
   5a974:	and	x1, x6, #0xf
   5a978:	cmp	x1, #0x4
   5a97c:	b.eq	5a62c <mpfr_free_pool@@Base+0x12d4>  // b.none
   5a980:	adds	x6, x6, #0x4
   5a984:	cinc	x4, x4, cs  // cs = hs, nlast
   5a988:	b	5a62c <mpfr_free_pool@@Base+0x12d4>
   5a98c:	cbz	x8, 5a62c <mpfr_free_pool@@Base+0x12d4>
   5a990:	adds	x6, x6, #0x8
   5a994:	cinc	x4, x4, cs  // cs = hs, nlast
   5a998:	b	5a62c <mpfr_free_pool@@Base+0x12d4>
   5a99c:	and	x1, x5, #0xf
   5a9a0:	cmp	x1, #0x4
   5a9a4:	b.eq	5a9b0 <mpfr_free_pool@@Base+0x1658>  // b.none
   5a9a8:	adds	x5, x5, #0x4
   5a9ac:	cinc	x2, x2, cs  // cs = hs, nlast
   5a9b0:	tbz	x2, #51, 5a80c <mpfr_free_pool@@Base+0x14b4>
   5a9b4:	orr	w0, w0, #0x8
   5a9b8:	mov	w1, #0x1                   	// #1
   5a9bc:	mov	x4, #0x0                   	// #0
   5a9c0:	mov	x5, #0x0                   	// #0
   5a9c4:	b	5a850 <mpfr_free_pool@@Base+0x14f8>
   5a9c8:	cmp	x8, #0x0
   5a9cc:	mov	w2, #0x7fff                	// #32767
   5a9d0:	mov	x4, #0xffffffffffff        	// #281474976710655
   5a9d4:	csel	w1, w1, w2, ne  // ne = any
   5a9d8:	csel	x4, x4, xzr, ne  // ne = any
   5a9dc:	csetm	x5, ne  // ne = any
   5a9e0:	b	5a8e4 <mpfr_free_pool@@Base+0x158c>
   5a9e4:	cbnz	x8, 5a62c <mpfr_free_pool@@Base+0x12d4>
   5a9e8:	b	5a990 <mpfr_free_pool@@Base+0x1638>
   5a9ec:	mov	x4, #0x2                   	// #2
   5a9f0:	cmp	x1, #0xf
   5a9f4:	b.ne	5aa18 <mpfr_free_pool@@Base+0x16c0>  // b.any
   5a9f8:	tbz	x7, #47, 5aa30 <mpfr_free_pool@@Base+0x16d8>
   5a9fc:	tbnz	x2, #47, 5aa30 <mpfr_free_pool@@Base+0x16d8>
   5aa00:	orr	x4, x2, #0x800000000000
   5aa04:	mov	w10, w15
   5aa08:	and	x4, x4, #0xffffffffffff
   5aa0c:	mov	x5, x6
   5aa10:	mov	w1, #0x7fff                	// #32767
   5aa14:	b	5a410 <mpfr_free_pool@@Base+0x10b8>
   5aa18:	cmp	x1, #0xb
   5aa1c:	b.ne	5a368 <mpfr_free_pool@@Base+0x1010>  // b.any
   5aa20:	mov	x7, x2
   5aa24:	mov	x5, x6
   5aa28:	mov	x16, x4
   5aa2c:	b	5a370 <mpfr_free_pool@@Base+0x1018>
   5aa30:	orr	x4, x7, #0x800000000000
   5aa34:	mov	w10, w12
   5aa38:	and	x4, x4, #0xffffffffffff
   5aa3c:	mov	w1, #0x7fff                	// #32767
   5aa40:	b	5a410 <mpfr_free_pool@@Base+0x10b8>
   5aa44:	cbnz	x8, 5a9b0 <mpfr_free_pool@@Base+0x1658>
   5aa48:	adds	x5, x5, #0x8
   5aa4c:	cinc	x2, x2, cs  // cs = hs, nlast
   5aa50:	tbnz	x2, #51, 5a9b4 <mpfr_free_pool@@Base+0x165c>
   5aa54:	b	5a80c <mpfr_free_pool@@Base+0x14b4>
   5aa58:	cbnz	x8, 5aa48 <mpfr_free_pool@@Base+0x16f0>
   5aa5c:	tbnz	x2, #51, 5a9b4 <mpfr_free_pool@@Base+0x165c>
   5aa60:	b	5a80c <mpfr_free_pool@@Base+0x14b4>
   5aa64:	orr	w0, w0, #0x10
   5aa68:	b	5a9b4 <mpfr_free_pool@@Base+0x165c>
   5aa6c:	mov	x2, x4
   5aa70:	mov	x4, #0x3                   	// #3
   5aa74:	b	5a9f0 <mpfr_free_pool@@Base+0x1698>
   5aa78:	mov	w10, w15
   5aa7c:	mov	x8, x13
   5aa80:	b	5a38c <mpfr_free_pool@@Base+0x1034>
   5aa84:	nop
   5aa88:	stp	x29, x30, [sp, #-48]!
   5aa8c:	mov	x29, sp
   5aa90:	str	q0, [sp, #16]
   5aa94:	str	q1, [sp, #32]
   5aa98:	ldp	x5, x1, [sp, #16]
   5aa9c:	ldp	x0, x2, [sp, #32]
   5aaa0:	mrs	x12, fpcr
   5aaa4:	mov	x9, x0
   5aaa8:	ubfx	x0, x2, #48, #15
   5aaac:	lsr	x6, x1, #63
   5aab0:	ubfx	x7, x1, #48, #15
   5aab4:	ubfiz	x3, x1, #3, #48
   5aab8:	mov	x13, x0
   5aabc:	lsr	x4, x2, #63
   5aac0:	ubfiz	x2, x2, #3, #48
   5aac4:	mov	x11, x6
   5aac8:	and	w8, w6, #0xff
   5aacc:	mov	x14, x6
   5aad0:	sub	w0, w7, w0
   5aad4:	mov	x1, x7
   5aad8:	orr	x3, x3, x5, lsr #61
   5aadc:	mov	x7, #0x7fff                	// #32767
   5aae0:	and	w4, w4, #0xff
   5aae4:	cmp	x13, x7
   5aae8:	orr	x2, x2, x9, lsr #61
   5aaec:	lsl	x6, x5, #3
   5aaf0:	lsl	x10, x9, #3
   5aaf4:	b.eq	5ac64 <mpfr_free_pool@@Base+0x190c>  // b.none
   5aaf8:	eor	w4, w4, #0x1
   5aafc:	and	x4, x4, #0xff
   5ab00:	cmp	x11, x4
   5ab04:	b.eq	5acfc <mpfr_free_pool@@Base+0x19a4>  // b.none
   5ab08:	cmp	w0, #0x0
   5ab0c:	b.le	5ac80 <mpfr_free_pool@@Base+0x1928>
   5ab10:	cbnz	x13, 5adec <mpfr_free_pool@@Base+0x1a94>
   5ab14:	orr	x4, x2, x10
   5ab18:	cbz	x4, 5afcc <mpfr_free_pool@@Base+0x1c74>
   5ab1c:	subs	w0, w0, #0x1
   5ab20:	b.eq	5b2a0 <mpfr_free_pool@@Base+0x1f48>  // b.none
   5ab24:	mov	x4, #0x7fff                	// #32767
   5ab28:	cmp	x1, x4
   5ab2c:	b.eq	5afa0 <mpfr_free_pool@@Base+0x1c48>  // b.none
   5ab30:	cmp	w0, #0x74
   5ab34:	b.gt	5afbc <mpfr_free_pool@@Base+0x1c64>
   5ab38:	cmp	w0, #0x3f
   5ab3c:	b.gt	5b164 <mpfr_free_pool@@Base+0x1e0c>
   5ab40:	mov	w4, #0x40                  	// #64
   5ab44:	sub	w4, w4, w0
   5ab48:	lsr	x7, x10, x0
   5ab4c:	lsl	x10, x10, x4
   5ab50:	cmp	x10, #0x0
   5ab54:	lsl	x4, x2, x4
   5ab58:	cset	x5, ne  // ne = any
   5ab5c:	orr	x4, x4, x7
   5ab60:	lsr	x2, x2, x0
   5ab64:	orr	x4, x4, x5
   5ab68:	sub	x3, x3, x2
   5ab6c:	subs	x6, x6, x4
   5ab70:	sbc	x3, x3, xzr
   5ab74:	and	x5, x3, #0x7ffffffffffff
   5ab78:	tbz	x3, #51, 5ad78 <mpfr_free_pool@@Base+0x1a20>
   5ab7c:	cbz	x5, 5af84 <mpfr_free_pool@@Base+0x1c2c>
   5ab80:	clz	x0, x5
   5ab84:	sub	w0, w0, #0xc
   5ab88:	neg	w3, w0
   5ab8c:	lsl	x2, x5, x0
   5ab90:	lsl	x5, x6, x0
   5ab94:	lsr	x6, x6, x3
   5ab98:	orr	x3, x6, x2
   5ab9c:	cmp	x1, w0, sxtw
   5aba0:	sxtw	x2, w0
   5aba4:	b.gt	5af64 <mpfr_free_pool@@Base+0x1c0c>
   5aba8:	sub	w1, w0, w1
   5abac:	add	w0, w1, #0x1
   5abb0:	cmp	w0, #0x3f
   5abb4:	b.gt	5b12c <mpfr_free_pool@@Base+0x1dd4>
   5abb8:	mov	w1, #0x40                  	// #64
   5abbc:	sub	w1, w1, w0
   5abc0:	lsr	x2, x5, x0
   5abc4:	lsl	x5, x5, x1
   5abc8:	cmp	x5, #0x0
   5abcc:	lsl	x6, x3, x1
   5abd0:	cset	x1, ne  // ne = any
   5abd4:	orr	x6, x6, x2
   5abd8:	lsr	x3, x3, x0
   5abdc:	orr	x6, x6, x1
   5abe0:	orr	x7, x6, x3
   5abe4:	cbz	x7, 5ad8c <mpfr_free_pool@@Base+0x1a34>
   5abe8:	and	x0, x6, #0x7
   5abec:	mov	x1, #0x0                   	// #0
   5abf0:	mov	w4, #0x1                   	// #1
   5abf4:	cbz	x0, 5aff0 <mpfr_free_pool@@Base+0x1c98>
   5abf8:	and	x2, x12, #0xc00000
   5abfc:	cmp	x2, #0x400, lsl #12
   5ac00:	b.eq	5af3c <mpfr_free_pool@@Base+0x1be4>  // b.none
   5ac04:	cmp	x2, #0x800, lsl #12
   5ac08:	b.eq	5af1c <mpfr_free_pool@@Base+0x1bc4>  // b.none
   5ac0c:	cbz	x2, 5af48 <mpfr_free_pool@@Base+0x1bf0>
   5ac10:	and	x2, x3, #0x8000000000000
   5ac14:	mov	w0, #0x10                  	// #16
   5ac18:	cbz	w4, 5ac20 <mpfr_free_pool@@Base+0x18c8>
   5ac1c:	orr	w0, w0, #0x8
   5ac20:	cbz	x2, 5acd0 <mpfr_free_pool@@Base+0x1978>
   5ac24:	add	x1, x1, #0x1
   5ac28:	mov	x2, #0x7fff                	// #32767
   5ac2c:	cmp	x1, x2
   5ac30:	b.eq	5ae44 <mpfr_free_pool@@Base+0x1aec>  // b.none
   5ac34:	ubfx	x7, x3, #3, #48
   5ac38:	extr	x5, x3, x6, #3
   5ac3c:	and	w1, w1, #0x7fff
   5ac40:	mov	x3, #0x0                   	// #0
   5ac44:	orr	w1, w1, w8, lsl #15
   5ac48:	bfxil	x3, x7, #0, #48
   5ac4c:	fmov	d0, x5
   5ac50:	bfi	x3, x1, #48, #16
   5ac54:	fmov	v0.d[1], x3
   5ac58:	cbnz	w0, 5aea0 <mpfr_free_pool@@Base+0x1b48>
   5ac5c:	ldp	x29, x30, [sp], #48
   5ac60:	ret
   5ac64:	orr	x7, x2, x10
   5ac68:	cbz	x7, 5aaf8 <mpfr_free_pool@@Base+0x17a0>
   5ac6c:	and	x4, x4, #0xff
   5ac70:	cmp	x11, x4
   5ac74:	b.eq	5aeb4 <mpfr_free_pool@@Base+0x1b5c>  // b.none
   5ac78:	cmp	w0, #0x0
   5ac7c:	b.gt	5adec <mpfr_free_pool@@Base+0x1a94>
   5ac80:	cbz	w0, 5ada4 <mpfr_free_pool@@Base+0x1a4c>
   5ac84:	mov	w8, w4
   5ac88:	cbnz	x1, 5b0c0 <mpfr_free_pool@@Base+0x1d68>
   5ac8c:	orr	x1, x3, x6
   5ac90:	cbz	x1, 5ad58 <mpfr_free_pool@@Base+0x1a00>
   5ac94:	cmn	w0, #0x1
   5ac98:	b.eq	5b400 <mpfr_free_pool@@Base+0x20a8>  // b.none
   5ac9c:	mov	x1, #0x7fff                	// #32767
   5aca0:	mvn	w0, w0
   5aca4:	cmp	x13, x1
   5aca8:	b.ne	5b0d4 <mpfr_free_pool@@Base+0x1d7c>  // b.any
   5acac:	orr	x0, x2, x10
   5acb0:	and	x11, x8, #0xff
   5acb4:	cbz	x0, 5b038 <mpfr_free_pool@@Base+0x1ce0>
   5acb8:	lsr	x0, x2, #50
   5acbc:	mov	x6, x10
   5acc0:	eor	x0, x0, #0x1
   5acc4:	mov	x3, x2
   5acc8:	and	w0, w0, #0x1
   5accc:	mov	x1, #0x7fff                	// #32767
   5acd0:	mov	x2, #0x7fff                	// #32767
   5acd4:	extr	x5, x3, x6, #3
   5acd8:	lsr	x7, x3, #3
   5acdc:	cmp	x1, x2
   5ace0:	b.ne	5ad98 <mpfr_free_pool@@Base+0x1a40>  // b.any
   5ace4:	orr	x1, x7, x5
   5ace8:	cbz	x1, 5b554 <mpfr_free_pool@@Base+0x21fc>
   5acec:	orr	x7, x7, #0x800000000000
   5acf0:	mov	w1, #0x7fff                	// #32767
   5acf4:	and	x7, x7, #0xffffffffffff
   5acf8:	b	5ac40 <mpfr_free_pool@@Base+0x18e8>
   5acfc:	cmp	w0, #0x0
   5ad00:	b.le	5aeb4 <mpfr_free_pool@@Base+0x1b5c>
   5ad04:	cbz	x13, 5adf4 <mpfr_free_pool@@Base+0x1a9c>
   5ad08:	orr	x2, x2, #0x8000000000000
   5ad0c:	mov	x4, #0x7fff                	// #32767
   5ad10:	cmp	x1, x4
   5ad14:	b.eq	5afa0 <mpfr_free_pool@@Base+0x1c48>  // b.none
   5ad18:	cmp	w0, #0x74
   5ad1c:	b.gt	5b114 <mpfr_free_pool@@Base+0x1dbc>
   5ad20:	cmp	w0, #0x3f
   5ad24:	b.gt	5b1b0 <mpfr_free_pool@@Base+0x1e58>
   5ad28:	mov	w4, #0x40                  	// #64
   5ad2c:	sub	w4, w4, w0
   5ad30:	lsr	x7, x10, x0
   5ad34:	lsl	x10, x10, x4
   5ad38:	cmp	x10, #0x0
   5ad3c:	lsl	x4, x2, x4
   5ad40:	cset	x5, ne  // ne = any
   5ad44:	orr	x4, x4, x7
   5ad48:	lsr	x2, x2, x0
   5ad4c:	orr	x0, x4, x5
   5ad50:	add	x3, x3, x2
   5ad54:	b	5b120 <mpfr_free_pool@@Base+0x1dc8>
   5ad58:	mov	x0, #0x7fff                	// #32767
   5ad5c:	cmp	x13, x0
   5ad60:	b.eq	5b38c <mpfr_free_pool@@Base+0x2034>  // b.none
   5ad64:	mov	x3, x2
   5ad68:	mov	x6, x10
   5ad6c:	mov	x1, x13
   5ad70:	mov	x14, x4
   5ad74:	nop
   5ad78:	orr	x7, x6, x3
   5ad7c:	and	x0, x6, #0x7
   5ad80:	mov	w4, #0x0                   	// #0
   5ad84:	cbnz	x1, 5abf4 <mpfr_free_pool@@Base+0x189c>
   5ad88:	cbnz	x7, 5abe8 <mpfr_free_pool@@Base+0x1890>
   5ad8c:	mov	x5, #0x0                   	// #0
   5ad90:	mov	x1, #0x0                   	// #0
   5ad94:	mov	w0, #0x0                   	// #0
   5ad98:	and	x7, x7, #0xffffffffffff
   5ad9c:	and	w1, w1, #0x7fff
   5ada0:	b	5ac40 <mpfr_free_pool@@Base+0x18e8>
   5ada4:	add	x7, x1, #0x1
   5ada8:	tst	x7, #0x7ffe
   5adac:	b.ne	5b090 <mpfr_free_pool@@Base+0x1d38>  // b.any
   5adb0:	orr	x11, x3, x6
   5adb4:	orr	x7, x2, x10
   5adb8:	cbnz	x1, 5b220 <mpfr_free_pool@@Base+0x1ec8>
   5adbc:	cbz	x11, 5b2ac <mpfr_free_pool@@Base+0x1f54>
   5adc0:	cbz	x7, 5b2c0 <mpfr_free_pool@@Base+0x1f68>
   5adc4:	subs	x9, x6, x10
   5adc8:	cmp	x6, x10
   5adcc:	sbc	x5, x3, x2
   5add0:	tbz	x5, #51, 5b468 <mpfr_free_pool@@Base+0x2110>
   5add4:	subs	x6, x10, x6
   5add8:	mov	w8, w4
   5addc:	sbc	x3, x2, x3
   5ade0:	mov	x14, x4
   5ade4:	orr	x7, x6, x3
   5ade8:	b	5abe4 <mpfr_free_pool@@Base+0x188c>
   5adec:	orr	x2, x2, #0x8000000000000
   5adf0:	b	5ab24 <mpfr_free_pool@@Base+0x17cc>
   5adf4:	orr	x4, x2, x10
   5adf8:	cbz	x4, 5afcc <mpfr_free_pool@@Base+0x1c74>
   5adfc:	subs	w0, w0, #0x1
   5ae00:	b.ne	5ad0c <mpfr_free_pool@@Base+0x19b4>  // b.any
   5ae04:	adds	x6, x6, x10
   5ae08:	adc	x3, x2, x3
   5ae0c:	nop
   5ae10:	tbz	x3, #51, 5ad78 <mpfr_free_pool@@Base+0x1a20>
   5ae14:	add	x1, x1, #0x1
   5ae18:	mov	x0, #0x7fff                	// #32767
   5ae1c:	cmp	x1, x0
   5ae20:	b.eq	5b2cc <mpfr_free_pool@@Base+0x1f74>  // b.none
   5ae24:	and	x0, x6, #0x1
   5ae28:	and	x2, x3, #0xfff7ffffffffffff
   5ae2c:	orr	x6, x0, x6, lsr #1
   5ae30:	mov	w4, #0x0                   	// #0
   5ae34:	orr	x6, x6, x3, lsl #63
   5ae38:	lsr	x3, x2, #1
   5ae3c:	and	x0, x6, #0x7
   5ae40:	b	5abf4 <mpfr_free_pool@@Base+0x189c>
   5ae44:	and	x2, x12, #0xc00000
   5ae48:	cbz	x2, 5ae80 <mpfr_free_pool@@Base+0x1b28>
   5ae4c:	cmp	x2, #0x400, lsl #12
   5ae50:	b.eq	5ae7c <mpfr_free_pool@@Base+0x1b24>  // b.none
   5ae54:	cmp	x2, #0x800, lsl #12
   5ae58:	and	w14, w14, #0x1
   5ae5c:	csel	w14, w14, wzr, eq  // eq = none
   5ae60:	cbnz	w14, 5ae80 <mpfr_free_pool@@Base+0x1b28>
   5ae64:	mov	w1, #0x14                  	// #20
   5ae68:	mov	x5, #0xffffffffffffffff    	// #-1
   5ae6c:	orr	w0, w0, w1
   5ae70:	mov	x7, #0x1fffffffffffffff    	// #2305843009213693951
   5ae74:	mov	x1, #0x7ffe                	// #32766
   5ae78:	b	5ad98 <mpfr_free_pool@@Base+0x1a40>
   5ae7c:	cbnz	x14, 5ae64 <mpfr_free_pool@@Base+0x1b0c>
   5ae80:	mov	w1, #0x14                  	// #20
   5ae84:	and	x11, x8, #0xff
   5ae88:	orr	w0, w0, w1
   5ae8c:	mov	x2, #0x0                   	// #0
   5ae90:	fmov	d0, x2
   5ae94:	lsl	x11, x11, #63
   5ae98:	orr	x3, x11, #0x7fff000000000000
   5ae9c:	fmov	v0.d[1], x3
   5aea0:	str	q0, [sp, #16]
   5aea4:	bl	5b9c8 <mpfr_free_pool@@Base+0x2670>
   5aea8:	ldr	q0, [sp, #16]
   5aeac:	ldp	x29, x30, [sp], #48
   5aeb0:	ret
   5aeb4:	cbz	w0, 5b050 <mpfr_free_pool@@Base+0x1cf8>
   5aeb8:	cbz	x1, 5b00c <mpfr_free_pool@@Base+0x1cb4>
   5aebc:	mov	x1, #0x7fff                	// #32767
   5aec0:	neg	w0, w0
   5aec4:	orr	x3, x3, #0x8000000000000
   5aec8:	cmp	x13, x1
   5aecc:	b.eq	5b02c <mpfr_free_pool@@Base+0x1cd4>  // b.none
   5aed0:	cmp	w0, #0x74
   5aed4:	b.gt	5b320 <mpfr_free_pool@@Base+0x1fc8>
   5aed8:	cmp	w0, #0x3f
   5aedc:	b.gt	5b3d4 <mpfr_free_pool@@Base+0x207c>
   5aee0:	mov	w1, #0x40                  	// #64
   5aee4:	sub	w1, w1, w0
   5aee8:	lsr	x4, x6, x0
   5aeec:	lsl	x6, x6, x1
   5aef0:	cmp	x6, #0x0
   5aef4:	lsl	x6, x3, x1
   5aef8:	cset	x1, ne  // ne = any
   5aefc:	orr	x6, x6, x4
   5af00:	lsr	x0, x3, x0
   5af04:	orr	x6, x6, x1
   5af08:	add	x2, x2, x0
   5af0c:	adds	x6, x6, x10
   5af10:	mov	x1, x13
   5af14:	cinc	x3, x2, cs  // cs = hs, nlast
   5af18:	b	5ae10 <mpfr_free_pool@@Base+0x1ab8>
   5af1c:	mov	w0, #0x10                  	// #16
   5af20:	cbz	x14, 5af2c <mpfr_free_pool@@Base+0x1bd4>
   5af24:	adds	x6, x6, #0x8
   5af28:	cinc	x3, x3, cs  // cs = hs, nlast
   5af2c:	and	x2, x3, #0x8000000000000
   5af30:	cbz	w4, 5ac20 <mpfr_free_pool@@Base+0x18c8>
   5af34:	orr	w0, w0, #0x8
   5af38:	b	5ac20 <mpfr_free_pool@@Base+0x18c8>
   5af3c:	mov	w0, #0x10                  	// #16
   5af40:	cbnz	x14, 5af2c <mpfr_free_pool@@Base+0x1bd4>
   5af44:	b	5af24 <mpfr_free_pool@@Base+0x1bcc>
   5af48:	and	x2, x6, #0xf
   5af4c:	mov	w0, #0x10                  	// #16
   5af50:	cmp	x2, #0x4
   5af54:	b.eq	5af2c <mpfr_free_pool@@Base+0x1bd4>  // b.none
   5af58:	adds	x6, x6, #0x4
   5af5c:	cinc	x3, x3, cs  // cs = hs, nlast
   5af60:	b	5af2c <mpfr_free_pool@@Base+0x1bd4>
   5af64:	mov	x6, x5
   5af68:	and	x3, x3, #0xfff7ffffffffffff
   5af6c:	sub	x1, x1, x2
   5af70:	orr	x7, x6, x3
   5af74:	and	x0, x6, #0x7
   5af78:	mov	w4, #0x0                   	// #0
   5af7c:	cbz	x1, 5ad88 <mpfr_free_pool@@Base+0x1a30>
   5af80:	b	5abf4 <mpfr_free_pool@@Base+0x189c>
   5af84:	clz	x3, x6
   5af88:	add	w0, w3, #0x34
   5af8c:	cmp	w0, #0x3f
   5af90:	b.le	5ab88 <mpfr_free_pool@@Base+0x1830>
   5af94:	sub	w3, w3, #0xc
   5af98:	lsl	x3, x6, x3
   5af9c:	b	5ab9c <mpfr_free_pool@@Base+0x1844>
   5afa0:	orr	x0, x3, x6
   5afa4:	cbz	x0, 5b038 <mpfr_free_pool@@Base+0x1ce0>
   5afa8:	lsr	x0, x3, #50
   5afac:	mov	x1, #0x7fff                	// #32767
   5afb0:	eor	x0, x0, #0x1
   5afb4:	and	w0, w0, #0x1
   5afb8:	b	5acd0 <mpfr_free_pool@@Base+0x1978>
   5afbc:	orr	x2, x2, x10
   5afc0:	cmp	x2, #0x0
   5afc4:	cset	x4, ne  // ne = any
   5afc8:	b	5ab6c <mpfr_free_pool@@Base+0x1814>
   5afcc:	mov	x0, #0x7fff                	// #32767
   5afd0:	cmp	x1, x0
   5afd4:	b.ne	5ad78 <mpfr_free_pool@@Base+0x1a20>  // b.any
   5afd8:	orr	x0, x3, x6
   5afdc:	cbnz	x0, 5afa8 <mpfr_free_pool@@Base+0x1c50>
   5afe0:	mov	x5, #0x0                   	// #0
   5afe4:	mov	x7, #0x0                   	// #0
   5afe8:	mov	w0, #0x0                   	// #0
   5afec:	b	5ace4 <mpfr_free_pool@@Base+0x198c>
   5aff0:	and	x2, x3, #0x8000000000000
   5aff4:	mov	w0, #0x0                   	// #0
   5aff8:	cbz	w4, 5ac20 <mpfr_free_pool@@Base+0x18c8>
   5affc:	mov	w0, #0x0                   	// #0
   5b000:	tbz	w12, #11, 5ac20 <mpfr_free_pool@@Base+0x18c8>
   5b004:	orr	w0, w0, #0x8
   5b008:	b	5ac20 <mpfr_free_pool@@Base+0x18c8>
   5b00c:	orr	x1, x3, x6
   5b010:	cbz	x1, 5b398 <mpfr_free_pool@@Base+0x2040>
   5b014:	cmn	w0, #0x1
   5b018:	b.eq	5b4e8 <mpfr_free_pool@@Base+0x2190>  // b.none
   5b01c:	mov	x1, #0x7fff                	// #32767
   5b020:	mvn	w0, w0
   5b024:	cmp	x13, x1
   5b028:	b.ne	5aed0 <mpfr_free_pool@@Base+0x1b78>  // b.any
   5b02c:	orr	x0, x2, x10
   5b030:	cbnz	x0, 5acb8 <mpfr_free_pool@@Base+0x1960>
   5b034:	nop
   5b038:	mov	x2, #0x0                   	// #0
   5b03c:	fmov	d0, x2
   5b040:	lsl	x0, x11, #63
   5b044:	orr	x3, x0, #0x7fff000000000000
   5b048:	fmov	v0.d[1], x3
   5b04c:	b	5ac5c <mpfr_free_pool@@Base+0x1904>
   5b050:	add	x7, x1, #0x1
   5b054:	tst	x7, #0x7ffe
   5b058:	b.ne	5b1dc <mpfr_free_pool@@Base+0x1e84>  // b.any
   5b05c:	orr	x11, x3, x6
   5b060:	cbnz	x1, 5b364 <mpfr_free_pool@@Base+0x200c>
   5b064:	orr	x7, x2, x10
   5b068:	cbz	x11, 5b3c8 <mpfr_free_pool@@Base+0x2070>
   5b06c:	cbz	x7, 5b2c0 <mpfr_free_pool@@Base+0x1f68>
   5b070:	adds	x6, x6, x10
   5b074:	adc	x3, x2, x3
   5b078:	tbz	x3, #51, 5abe0 <mpfr_free_pool@@Base+0x1888>
   5b07c:	and	x3, x3, #0xfff7ffffffffffff
   5b080:	and	x0, x6, #0x7
   5b084:	mov	w4, #0x0                   	// #0
   5b088:	mov	x1, #0x1                   	// #1
   5b08c:	b	5abf4 <mpfr_free_pool@@Base+0x189c>
   5b090:	subs	x9, x6, x10
   5b094:	cmp	x6, x10
   5b098:	sbc	x5, x3, x2
   5b09c:	tbnz	x5, #51, 5b208 <mpfr_free_pool@@Base+0x1eb0>
   5b0a0:	orr	x7, x9, x5
   5b0a4:	cbnz	x7, 5b318 <mpfr_free_pool@@Base+0x1fc0>
   5b0a8:	and	x12, x12, #0xc00000
   5b0ac:	mov	x5, #0x0                   	// #0
   5b0b0:	cmp	x12, #0x800, lsl #12
   5b0b4:	mov	x1, #0x0                   	// #0
   5b0b8:	cset	w8, eq  // eq = none
   5b0bc:	b	5ad98 <mpfr_free_pool@@Base+0x1a40>
   5b0c0:	mov	x1, #0x7fff                	// #32767
   5b0c4:	neg	w0, w0
   5b0c8:	orr	x3, x3, #0x8000000000000
   5b0cc:	cmp	x13, x1
   5b0d0:	b.eq	5acac <mpfr_free_pool@@Base+0x1954>  // b.none
   5b0d4:	cmp	w0, #0x74
   5b0d8:	b.gt	5b190 <mpfr_free_pool@@Base+0x1e38>
   5b0dc:	cmp	w0, #0x3f
   5b0e0:	b.gt	5b330 <mpfr_free_pool@@Base+0x1fd8>
   5b0e4:	mov	w1, #0x40                  	// #64
   5b0e8:	sub	w1, w1, w0
   5b0ec:	lsr	x5, x6, x0
   5b0f0:	lsl	x6, x6, x1
   5b0f4:	cmp	x6, #0x0
   5b0f8:	lsl	x6, x3, x1
   5b0fc:	cset	x1, ne  // ne = any
   5b100:	orr	x6, x6, x5
   5b104:	lsr	x0, x3, x0
   5b108:	orr	x6, x6, x1
   5b10c:	sub	x2, x2, x0
   5b110:	b	5b19c <mpfr_free_pool@@Base+0x1e44>
   5b114:	orr	x2, x2, x10
   5b118:	cmp	x2, #0x0
   5b11c:	cset	x0, ne  // ne = any
   5b120:	adds	x6, x0, x6
   5b124:	cinc	x3, x3, cs  // cs = hs, nlast
   5b128:	b	5ae10 <mpfr_free_pool@@Base+0x1ab8>
   5b12c:	mov	w2, #0x80                  	// #128
   5b130:	sub	w2, w2, w0
   5b134:	cmp	w0, #0x40
   5b138:	sub	w6, w1, #0x3f
   5b13c:	lsl	x0, x3, x2
   5b140:	orr	x0, x5, x0
   5b144:	csel	x5, x0, x5, ne  // ne = any
   5b148:	lsr	x6, x3, x6
   5b14c:	cmp	x5, #0x0
   5b150:	mov	x3, #0x0                   	// #0
   5b154:	cset	x0, ne  // ne = any
   5b158:	orr	x6, x0, x6
   5b15c:	mov	x7, x6
   5b160:	b	5abe4 <mpfr_free_pool@@Base+0x188c>
   5b164:	mov	w5, #0x80                  	// #128
   5b168:	sub	w5, w5, w0
   5b16c:	subs	w0, w0, #0x40
   5b170:	lsl	x5, x2, x5
   5b174:	orr	x5, x10, x5
   5b178:	csel	x10, x5, x10, ne  // ne = any
   5b17c:	lsr	x2, x2, x0
   5b180:	cmp	x10, #0x0
   5b184:	cset	x4, ne  // ne = any
   5b188:	orr	x4, x4, x2
   5b18c:	b	5ab6c <mpfr_free_pool@@Base+0x1814>
   5b190:	orr	x3, x3, x6
   5b194:	cmp	x3, #0x0
   5b198:	cset	x6, ne  // ne = any
   5b19c:	subs	x6, x10, x6
   5b1a0:	mov	x1, x13
   5b1a4:	sbc	x3, x2, xzr
   5b1a8:	mov	x14, x4
   5b1ac:	b	5ab74 <mpfr_free_pool@@Base+0x181c>
   5b1b0:	mov	w4, #0x80                  	// #128
   5b1b4:	sub	w4, w4, w0
   5b1b8:	subs	w0, w0, #0x40
   5b1bc:	lsl	x4, x2, x4
   5b1c0:	orr	x4, x10, x4
   5b1c4:	csel	x10, x4, x10, ne  // ne = any
   5b1c8:	lsr	x2, x2, x0
   5b1cc:	cmp	x10, #0x0
   5b1d0:	cset	x0, ne  // ne = any
   5b1d4:	orr	x0, x0, x2
   5b1d8:	b	5b120 <mpfr_free_pool@@Base+0x1dc8>
   5b1dc:	mov	x0, #0x7fff                	// #32767
   5b1e0:	cmp	x7, x0
   5b1e4:	b.eq	5b418 <mpfr_free_pool@@Base+0x20c0>  // b.none
   5b1e8:	adds	x6, x6, x10
   5b1ec:	mov	x1, x7
   5b1f0:	adc	x3, x2, x3
   5b1f4:	mov	w4, #0x0                   	// #0
   5b1f8:	ubfx	x0, x6, #1, #3
   5b1fc:	extr	x6, x3, x6, #1
   5b200:	lsr	x3, x3, #1
   5b204:	b	5abf4 <mpfr_free_pool@@Base+0x189c>
   5b208:	cmp	x10, x6
   5b20c:	mov	w8, w4
   5b210:	sbc	x5, x2, x3
   5b214:	sub	x6, x10, x6
   5b218:	mov	x14, x4
   5b21c:	b	5ab7c <mpfr_free_pool@@Base+0x1824>
   5b220:	mov	x12, #0x7fff                	// #32767
   5b224:	cmp	x1, x12
   5b228:	b.eq	5b250 <mpfr_free_pool@@Base+0x1ef8>  // b.none
   5b22c:	cmp	x13, x12
   5b230:	b.eq	5b444 <mpfr_free_pool@@Base+0x20ec>  // b.none
   5b234:	cbnz	x11, 5b268 <mpfr_free_pool@@Base+0x1f10>
   5b238:	cbnz	x7, 5b454 <mpfr_free_pool@@Base+0x20fc>
   5b23c:	mov	x5, #0xffffffffffffffff    	// #-1
   5b240:	mov	x7, #0xffffffffffff        	// #281474976710655
   5b244:	mov	w0, #0x1                   	// #1
   5b248:	mov	w8, #0x0                   	// #0
   5b24c:	b	5acec <mpfr_free_pool@@Base+0x1994>
   5b250:	cbz	x11, 5b43c <mpfr_free_pool@@Base+0x20e4>
   5b254:	lsr	x0, x3, #50
   5b258:	cmp	x13, x1
   5b25c:	eor	x0, x0, #0x1
   5b260:	and	w0, w0, #0x1
   5b264:	b.eq	5b444 <mpfr_free_pool@@Base+0x20ec>  // b.none
   5b268:	cbz	x7, 5accc <mpfr_free_pool@@Base+0x1974>
   5b26c:	bfi	x5, x3, #61, #3
   5b270:	lsr	x7, x3, #3
   5b274:	tbz	x3, #50, 5b290 <mpfr_free_pool@@Base+0x1f38>
   5b278:	lsr	x1, x2, #3
   5b27c:	tbnz	x2, #50, 5b290 <mpfr_free_pool@@Base+0x1f38>
   5b280:	mov	x5, x9
   5b284:	mov	w8, w4
   5b288:	bfi	x5, x2, #61, #3
   5b28c:	mov	x7, x1
   5b290:	extr	x7, x7, x5, #61
   5b294:	bfi	x5, x7, #61, #3
   5b298:	lsr	x7, x7, #3
   5b29c:	b	5ace4 <mpfr_free_pool@@Base+0x198c>
   5b2a0:	subs	x6, x6, x10
   5b2a4:	sbc	x3, x3, x2
   5b2a8:	b	5ab74 <mpfr_free_pool@@Base+0x181c>
   5b2ac:	cbz	x7, 5b3b4 <mpfr_free_pool@@Base+0x205c>
   5b2b0:	mov	x3, x2
   5b2b4:	mov	x6, x10
   5b2b8:	mov	w8, w4
   5b2bc:	mov	x14, x4
   5b2c0:	mov	x1, #0x0                   	// #0
   5b2c4:	mov	x2, #0x0                   	// #0
   5b2c8:	b	5affc <mpfr_free_pool@@Base+0x1ca4>
   5b2cc:	ands	x2, x12, #0xc00000
   5b2d0:	b.eq	5b35c <mpfr_free_pool@@Base+0x2004>  // b.none
   5b2d4:	cmp	x2, #0x400, lsl #12
   5b2d8:	eor	w0, w8, #0x1
   5b2dc:	cset	w1, eq  // eq = none
   5b2e0:	tst	w1, w0
   5b2e4:	b.ne	5b430 <mpfr_free_pool@@Base+0x20d8>  // b.any
   5b2e8:	cmp	x2, #0x800, lsl #12
   5b2ec:	b.eq	5b484 <mpfr_free_pool@@Base+0x212c>  // b.none
   5b2f0:	cmp	x2, #0x400, lsl #12
   5b2f4:	mov	w0, #0x14                  	// #20
   5b2f8:	b.ne	5ae48 <mpfr_free_pool@@Base+0x1af0>  // b.any
   5b2fc:	mov	x3, #0xffffffffffffffff    	// #-1
   5b300:	mov	x1, #0x7ffe                	// #32766
   5b304:	mov	x6, x3
   5b308:	mov	w4, #0x0                   	// #0
   5b30c:	mov	w0, #0x14                  	// #20
   5b310:	cbnz	x14, 5af2c <mpfr_free_pool@@Base+0x1bd4>
   5b314:	b	5af24 <mpfr_free_pool@@Base+0x1bcc>
   5b318:	mov	x6, x9
   5b31c:	b	5ab7c <mpfr_free_pool@@Base+0x1824>
   5b320:	orr	x3, x3, x6
   5b324:	cmp	x3, #0x0
   5b328:	cset	x6, ne  // ne = any
   5b32c:	b	5af0c <mpfr_free_pool@@Base+0x1bb4>
   5b330:	mov	w1, #0x80                  	// #128
   5b334:	sub	w1, w1, w0
   5b338:	subs	w0, w0, #0x40
   5b33c:	lsl	x1, x3, x1
   5b340:	orr	x1, x6, x1
   5b344:	csel	x6, x1, x6, ne  // ne = any
   5b348:	lsr	x3, x3, x0
   5b34c:	cmp	x6, #0x0
   5b350:	cset	x6, ne  // ne = any
   5b354:	orr	x6, x6, x3
   5b358:	b	5b19c <mpfr_free_pool@@Base+0x1e44>
   5b35c:	mov	w0, #0x14                  	// #20
   5b360:	b	5ae8c <mpfr_free_pool@@Base+0x1b34>
   5b364:	mov	x7, #0x7fff                	// #32767
   5b368:	cmp	x1, x7
   5b36c:	b.eq	5b4a0 <mpfr_free_pool@@Base+0x2148>  // b.none
   5b370:	cmp	x13, x7
   5b374:	b.eq	5b504 <mpfr_free_pool@@Base+0x21ac>  // b.none
   5b378:	cbnz	x11, 5b4b8 <mpfr_free_pool@@Base+0x2160>
   5b37c:	mov	x3, x2
   5b380:	mov	x6, x10
   5b384:	mov	x1, #0x7fff                	// #32767
   5b388:	b	5acd0 <mpfr_free_pool@@Base+0x1978>
   5b38c:	orr	x0, x2, x10
   5b390:	cbz	x0, 5afe0 <mpfr_free_pool@@Base+0x1c88>
   5b394:	b	5acb8 <mpfr_free_pool@@Base+0x1960>
   5b398:	mov	x0, #0x7fff                	// #32767
   5b39c:	cmp	x13, x0
   5b3a0:	b.eq	5b38c <mpfr_free_pool@@Base+0x2034>  // b.none
   5b3a4:	mov	x3, x2
   5b3a8:	mov	x6, x10
   5b3ac:	mov	x1, x13
   5b3b0:	b	5ad78 <mpfr_free_pool@@Base+0x1a20>
   5b3b4:	and	x12, x12, #0xc00000
   5b3b8:	mov	x5, #0x0                   	// #0
   5b3bc:	cmp	x12, #0x800, lsl #12
   5b3c0:	cset	w8, eq  // eq = none
   5b3c4:	b	5ad98 <mpfr_free_pool@@Base+0x1a40>
   5b3c8:	mov	x3, x2
   5b3cc:	mov	x6, x10
   5b3d0:	b	5abe4 <mpfr_free_pool@@Base+0x188c>
   5b3d4:	mov	w1, #0x80                  	// #128
   5b3d8:	sub	w1, w1, w0
   5b3dc:	subs	w0, w0, #0x40
   5b3e0:	lsl	x1, x3, x1
   5b3e4:	orr	x1, x6, x1
   5b3e8:	csel	x6, x1, x6, ne  // ne = any
   5b3ec:	lsr	x3, x3, x0
   5b3f0:	cmp	x6, #0x0
   5b3f4:	cset	x6, ne  // ne = any
   5b3f8:	orr	x6, x6, x3
   5b3fc:	b	5af0c <mpfr_free_pool@@Base+0x1bb4>
   5b400:	cmp	x10, x6
   5b404:	mov	x1, x13
   5b408:	sbc	x3, x2, x3
   5b40c:	sub	x6, x10, x6
   5b410:	mov	x14, x4
   5b414:	b	5ab74 <mpfr_free_pool@@Base+0x181c>
   5b418:	ands	x2, x12, #0xc00000
   5b41c:	b.eq	5b35c <mpfr_free_pool@@Base+0x2004>  // b.none
   5b420:	cmp	x2, #0x400, lsl #12
   5b424:	eor	w0, w8, #0x1
   5b428:	csel	w0, w0, wzr, eq  // eq = none
   5b42c:	cbz	w0, 5b2e8 <mpfr_free_pool@@Base+0x1f90>
   5b430:	mov	w0, #0x14                  	// #20
   5b434:	mov	x11, #0x0                   	// #0
   5b438:	b	5ae8c <mpfr_free_pool@@Base+0x1b34>
   5b43c:	cmp	x13, x1
   5b440:	b.ne	5b238 <mpfr_free_pool@@Base+0x1ee0>  // b.any
   5b444:	cbz	x7, 5b4f8 <mpfr_free_pool@@Base+0x21a0>
   5b448:	tst	x2, #0x4000000000000
   5b44c:	csinc	w0, w0, wzr, ne  // ne = any
   5b450:	cbnz	x11, 5b26c <mpfr_free_pool@@Base+0x1f14>
   5b454:	mov	w8, w4
   5b458:	mov	x3, x2
   5b45c:	mov	x6, x10
   5b460:	mov	x1, #0x7fff                	// #32767
   5b464:	b	5acd0 <mpfr_free_pool@@Base+0x1978>
   5b468:	orr	x7, x9, x5
   5b46c:	cbz	x7, 5b3b4 <mpfr_free_pool@@Base+0x205c>
   5b470:	mov	x3, x5
   5b474:	and	x0, x9, #0x7
   5b478:	mov	x6, x9
   5b47c:	mov	w4, #0x1                   	// #1
   5b480:	b	5abf4 <mpfr_free_pool@@Base+0x189c>
   5b484:	cbnz	x11, 5b518 <mpfr_free_pool@@Base+0x21c0>
   5b488:	mov	x3, #0xffffffffffffffff    	// #-1
   5b48c:	mov	w8, #0x0                   	// #0
   5b490:	mov	x6, x3
   5b494:	mov	x1, #0x7ffe                	// #32766
   5b498:	mov	w0, #0x14                  	// #20
   5b49c:	b	5ac24 <mpfr_free_pool@@Base+0x18cc>
   5b4a0:	cbz	x11, 5b524 <mpfr_free_pool@@Base+0x21cc>
   5b4a4:	lsr	x0, x3, #50
   5b4a8:	cmp	x13, x1
   5b4ac:	eor	x0, x0, #0x1
   5b4b0:	and	w0, w0, #0x1
   5b4b4:	b.eq	5b544 <mpfr_free_pool@@Base+0x21ec>  // b.none
   5b4b8:	orr	x10, x2, x10
   5b4bc:	cbz	x10, 5accc <mpfr_free_pool@@Base+0x1974>
   5b4c0:	bfi	x5, x3, #61, #3
   5b4c4:	lsr	x7, x3, #3
   5b4c8:	tbz	x3, #50, 5b290 <mpfr_free_pool@@Base+0x1f38>
   5b4cc:	lsr	x1, x2, #3
   5b4d0:	tbnz	x2, #50, 5b290 <mpfr_free_pool@@Base+0x1f38>
   5b4d4:	and	x5, x9, #0x1fffffffffffffff
   5b4d8:	mov	w8, w4
   5b4dc:	orr	x5, x5, x2, lsl #61
   5b4e0:	mov	x7, x1
   5b4e4:	b	5b290 <mpfr_free_pool@@Base+0x1f38>
   5b4e8:	adds	x6, x6, x10
   5b4ec:	mov	x1, x13
   5b4f0:	adc	x3, x2, x3
   5b4f4:	b	5ae10 <mpfr_free_pool@@Base+0x1ab8>
   5b4f8:	cbz	x11, 5b23c <mpfr_free_pool@@Base+0x1ee4>
   5b4fc:	mov	x1, #0x7fff                	// #32767
   5b500:	b	5acd0 <mpfr_free_pool@@Base+0x1978>
   5b504:	orr	x1, x2, x10
   5b508:	cbnz	x1, 5b534 <mpfr_free_pool@@Base+0x21dc>
   5b50c:	cbz	x11, 5afe0 <mpfr_free_pool@@Base+0x1c88>
   5b510:	mov	x1, #0x7fff                	// #32767
   5b514:	b	5acd0 <mpfr_free_pool@@Base+0x1978>
   5b518:	mov	w0, #0x14                  	// #20
   5b51c:	mov	x11, #0x1                   	// #1
   5b520:	b	5ae8c <mpfr_free_pool@@Base+0x1b34>
   5b524:	cmp	x13, x1
   5b528:	b.ne	5b37c <mpfr_free_pool@@Base+0x2024>  // b.any
   5b52c:	orr	x1, x2, x10
   5b530:	cbz	x1, 5afe0 <mpfr_free_pool@@Base+0x1c88>
   5b534:	tst	x2, #0x4000000000000
   5b538:	csinc	w0, w0, wzr, ne  // ne = any
   5b53c:	cbnz	x11, 5b4c0 <mpfr_free_pool@@Base+0x2168>
   5b540:	b	5b37c <mpfr_free_pool@@Base+0x2024>
   5b544:	orr	x1, x2, x10
   5b548:	cbnz	x1, 5b534 <mpfr_free_pool@@Base+0x21dc>
   5b54c:	mov	x1, #0x7fff                	// #32767
   5b550:	b	5acd0 <mpfr_free_pool@@Base+0x1978>
   5b554:	mov	x5, #0x0                   	// #0
   5b558:	mov	w1, #0x7fff                	// #32767
   5b55c:	mov	x7, #0x0                   	// #0
   5b560:	b	5ac40 <mpfr_free_pool@@Base+0x18e8>
   5b564:	nop
   5b568:	mrs	x0, fpcr
   5b56c:	fmov	x0, d0
   5b570:	ubfx	x1, x0, #52, #11
   5b574:	lsr	x4, x0, #63
   5b578:	add	x2, x1, #0x1
   5b57c:	and	w4, w4, #0xff
   5b580:	tst	x2, #0x7fe
   5b584:	ubfx	x0, x0, #0, #52
   5b588:	b.eq	5b5bc <mpfr_free_pool@@Base+0x2264>  // b.none
   5b58c:	lsr	x5, x0, #4
   5b590:	mov	x3, #0x0                   	// #0
   5b594:	and	x5, x5, #0xffffffffffff
   5b598:	mov	w2, #0x3c00                	// #15360
   5b59c:	add	w1, w1, w2
   5b5a0:	lsl	x0, x0, #60
   5b5a4:	bfxil	x3, x5, #0, #48
   5b5a8:	fmov	d0, x0
   5b5ac:	bfi	x3, x1, #48, #15
   5b5b0:	bfi	x3, x4, #63, #1
   5b5b4:	fmov	v0.d[1], x3
   5b5b8:	ret
   5b5bc:	cbnz	x1, 5b610 <mpfr_free_pool@@Base+0x22b8>
   5b5c0:	cbz	x0, 5b65c <mpfr_free_pool@@Base+0x2304>
   5b5c4:	clz	x2, x0
   5b5c8:	cmp	w2, #0xe
   5b5cc:	b.gt	5b6a8 <mpfr_free_pool@@Base+0x2350>
   5b5d0:	add	w1, w2, #0x31
   5b5d4:	mov	w5, #0xf                   	// #15
   5b5d8:	sub	w5, w5, w2
   5b5dc:	lsr	x5, x0, x5
   5b5e0:	lsl	x0, x0, x1
   5b5e4:	and	x5, x5, #0xffffffffffff
   5b5e8:	mov	w1, #0x3c0c                	// #15372
   5b5ec:	mov	x3, #0x0                   	// #0
   5b5f0:	sub	w1, w1, w2
   5b5f4:	and	w1, w1, #0x7fff
   5b5f8:	bfxil	x3, x5, #0, #48
   5b5fc:	fmov	d0, x0
   5b600:	bfi	x3, x1, #48, #15
   5b604:	bfi	x3, x4, #63, #1
   5b608:	fmov	v0.d[1], x3
   5b60c:	ret
   5b610:	cbz	x0, 5b680 <mpfr_free_pool@@Base+0x2328>
   5b614:	lsr	x1, x0, #4
   5b618:	mov	x3, #0x0                   	// #0
   5b61c:	orr	x1, x1, #0x800000000000
   5b620:	lsl	x2, x0, #60
   5b624:	fmov	d0, x2
   5b628:	bfxil	x3, x1, #0, #48
   5b62c:	orr	x3, x3, #0x7fff000000000000
   5b630:	bfi	x3, x4, #63, #1
   5b634:	fmov	v0.d[1], x3
   5b638:	tbnz	x0, #51, 5b6a4 <mpfr_free_pool@@Base+0x234c>
   5b63c:	stp	x29, x30, [sp, #-32]!
   5b640:	mov	w0, #0x1                   	// #1
   5b644:	mov	x29, sp
   5b648:	str	q0, [sp, #16]
   5b64c:	bl	5b9c8 <mpfr_free_pool@@Base+0x2670>
   5b650:	ldr	q0, [sp, #16]
   5b654:	ldp	x29, x30, [sp], #32
   5b658:	ret
   5b65c:	mov	x5, #0x0                   	// #0
   5b660:	mov	x3, #0x0                   	// #0
   5b664:	bfxil	x3, x5, #0, #48
   5b668:	mov	w1, #0x0                   	// #0
   5b66c:	fmov	d0, x0
   5b670:	bfi	x3, x1, #48, #15
   5b674:	bfi	x3, x4, #63, #1
   5b678:	fmov	v0.d[1], x3
   5b67c:	ret
   5b680:	mov	x5, #0x0                   	// #0
   5b684:	mov	x3, #0x0                   	// #0
   5b688:	bfxil	x3, x5, #0, #48
   5b68c:	mov	w1, #0x7fff                	// #32767
   5b690:	fmov	d0, x0
   5b694:	bfi	x3, x1, #48, #15
   5b698:	bfi	x3, x4, #63, #1
   5b69c:	fmov	v0.d[1], x3
   5b6a0:	ret
   5b6a4:	ret
   5b6a8:	sub	w5, w2, #0xf
   5b6ac:	lsl	x5, x0, x5
   5b6b0:	mov	x0, #0x0                   	// #0
   5b6b4:	b	5b5e4 <mpfr_free_pool@@Base+0x228c>
   5b6b8:	stp	x29, x30, [sp, #-48]!
   5b6bc:	mov	x29, sp
   5b6c0:	str	x19, [sp, #16]
   5b6c4:	str	q0, [sp, #32]
   5b6c8:	ldp	x3, x0, [sp, #32]
   5b6cc:	mrs	x6, fpcr
   5b6d0:	ubfx	x2, x0, #48, #15
   5b6d4:	lsr	x4, x0, #63
   5b6d8:	add	x1, x2, #0x1
   5b6dc:	ubfiz	x0, x0, #3, #48
   5b6e0:	tst	x1, #0x7ffe
   5b6e4:	and	w4, w4, #0xff
   5b6e8:	orr	x0, x0, x3, lsr #61
   5b6ec:	lsl	x5, x3, #3
   5b6f0:	b.eq	5b770 <mpfr_free_pool@@Base+0x2418>  // b.none
   5b6f4:	mov	x1, #0xffffffffffffc400    	// #-15360
   5b6f8:	add	x2, x2, x1
   5b6fc:	cmp	x2, #0x7fe
   5b700:	b.le	5b7b4 <mpfr_free_pool@@Base+0x245c>
   5b704:	ands	x0, x6, #0xc00000
   5b708:	b.eq	5b84c <mpfr_free_pool@@Base+0x24f4>  // b.none
   5b70c:	cmp	x0, #0x400, lsl #12
   5b710:	b.eq	5b980 <mpfr_free_pool@@Base+0x2628>  // b.none
   5b714:	cmp	x0, #0x800, lsl #12
   5b718:	csel	w7, w4, wzr, eq  // eq = none
   5b71c:	cbnz	w7, 5b84c <mpfr_free_pool@@Base+0x24f4>
   5b720:	mov	x1, #0xffffffffffffffff    	// #-1
   5b724:	mov	x2, #0x7fe                 	// #2046
   5b728:	mov	w0, #0x14                  	// #20
   5b72c:	b.ne	5b7f8 <mpfr_free_pool@@Base+0x24a0>  // b.any
   5b730:	cmp	w4, #0x0
   5b734:	add	x3, x1, #0x8
   5b738:	csel	x1, x3, x1, ne  // ne = any
   5b73c:	and	x3, x1, #0x80000000000000
   5b740:	cbnz	w7, 5b800 <mpfr_free_pool@@Base+0x24a8>
   5b744:	cbnz	x3, 5b808 <mpfr_free_pool@@Base+0x24b0>
   5b748:	lsr	x1, x1, #3
   5b74c:	and	w3, w2, #0x7ff
   5b750:	and	x4, x4, #0xff
   5b754:	bfi	x1, x3, #52, #12
   5b758:	orr	x19, x1, x4, lsl #63
   5b75c:	bl	5b9c8 <mpfr_free_pool@@Base+0x2670>
   5b760:	fmov	d0, x19
   5b764:	ldr	x19, [sp, #16]
   5b768:	ldp	x29, x30, [sp], #48
   5b76c:	ret
   5b770:	orr	x1, x0, x5
   5b774:	cbnz	x2, 5b7a8 <mpfr_free_pool@@Base+0x2450>
   5b778:	cbnz	x1, 5b824 <mpfr_free_pool@@Base+0x24cc>
   5b77c:	mov	w0, #0x0                   	// #0
   5b780:	and	w2, w2, #0x7ff
   5b784:	mov	x1, #0x0                   	// #0
   5b788:	and	x4, x4, #0xff
   5b78c:	bfi	x1, x2, #52, #12
   5b790:	orr	x19, x1, x4, lsl #63
   5b794:	cbnz	w0, 5b75c <mpfr_free_pool@@Base+0x2404>
   5b798:	fmov	d0, x19
   5b79c:	ldr	x19, [sp, #16]
   5b7a0:	ldp	x29, x30, [sp], #48
   5b7a4:	ret
   5b7a8:	cbnz	x1, 5b858 <mpfr_free_pool@@Base+0x2500>
   5b7ac:	mov	x2, #0x7ff                 	// #2047
   5b7b0:	b	5b77c <mpfr_free_pool@@Base+0x2424>
   5b7b4:	cmp	x2, #0x0
   5b7b8:	b.le	5b880 <mpfr_free_pool@@Base+0x2528>
   5b7bc:	cmp	xzr, x3, lsl #7
   5b7c0:	mov	w7, #0x0                   	// #0
   5b7c4:	cset	x1, ne  // ne = any
   5b7c8:	orr	x5, x1, x5, lsr #60
   5b7cc:	orr	x1, x5, x0, lsl #4
   5b7d0:	mov	w0, #0x0                   	// #0
   5b7d4:	tst	x5, #0x7
   5b7d8:	b.eq	5b938 <mpfr_free_pool@@Base+0x25e0>  // b.none
   5b7dc:	and	x3, x6, #0xc00000
   5b7e0:	cmp	x3, #0x400, lsl #12
   5b7e4:	b.eq	5b83c <mpfr_free_pool@@Base+0x24e4>  // b.none
   5b7e8:	cmp	x3, #0x800, lsl #12
   5b7ec:	mov	w0, #0x10                  	// #16
   5b7f0:	b.eq	5b730 <mpfr_free_pool@@Base+0x23d8>  // b.none
   5b7f4:	cbz	x3, 5b944 <mpfr_free_pool@@Base+0x25ec>
   5b7f8:	and	x3, x1, #0x80000000000000
   5b7fc:	cbz	w7, 5b804 <mpfr_free_pool@@Base+0x24ac>
   5b800:	orr	w0, w0, #0x8
   5b804:	cbz	x3, 5b938 <mpfr_free_pool@@Base+0x25e0>
   5b808:	cmp	x2, #0x7fe
   5b80c:	add	x2, x2, #0x1
   5b810:	b.eq	5b8e0 <mpfr_free_pool@@Base+0x2588>  // b.none
   5b814:	mov	x3, #0x1fefffffffffffff    	// #2301339409586323455
   5b818:	and	w2, w2, #0x7ff
   5b81c:	and	x1, x3, x1, lsr #3
   5b820:	b	5b788 <mpfr_free_pool@@Base+0x2430>
   5b824:	and	x3, x6, #0xc00000
   5b828:	mov	w7, #0x1                   	// #1
   5b82c:	cmp	x3, #0x400, lsl #12
   5b830:	mov	x2, #0x0                   	// #0
   5b834:	mov	x1, #0x1                   	// #1
   5b838:	b.ne	5b7e8 <mpfr_free_pool@@Base+0x2490>  // b.any
   5b83c:	cbnz	w4, 5b844 <mpfr_free_pool@@Base+0x24ec>
   5b840:	add	x1, x1, #0x8
   5b844:	mov	w0, #0x10                  	// #16
   5b848:	b	5b73c <mpfr_free_pool@@Base+0x23e4>
   5b84c:	mov	x2, #0x7ff                 	// #2047
   5b850:	mov	w0, #0x14                  	// #20
   5b854:	b	5b780 <mpfr_free_pool@@Base+0x2428>
   5b858:	mov	x3, #0x7fff                	// #32767
   5b85c:	extr	x1, x0, x5, #60
   5b860:	lsr	x0, x0, #50
   5b864:	cmp	x2, x3
   5b868:	lsr	x1, x1, #3
   5b86c:	eor	w0, w0, #0x1
   5b870:	orr	x1, x1, #0x8000000000000
   5b874:	csel	w0, w0, wzr, eq  // eq = none
   5b878:	mov	w2, #0x7ff                 	// #2047
   5b87c:	b	5b788 <mpfr_free_pool@@Base+0x2430>
   5b880:	cmn	x2, #0x34
   5b884:	b.lt	5b824 <mpfr_free_pool@@Base+0x24cc>  // b.tstop
   5b888:	mov	x3, #0x3d                  	// #61
   5b88c:	sub	x7, x3, x2
   5b890:	orr	x0, x0, #0x8000000000000
   5b894:	cmp	x7, #0x3f
   5b898:	b.le	5b958 <mpfr_free_pool@@Base+0x2600>
   5b89c:	add	w1, w2, #0x43
   5b8a0:	cmp	x7, #0x40
   5b8a4:	mov	w3, #0xfffffffd            	// #-3
   5b8a8:	sub	w2, w3, w2
   5b8ac:	lsl	x1, x0, x1
   5b8b0:	orr	x1, x5, x1
   5b8b4:	csel	x5, x1, x5, ne  // ne = any
   5b8b8:	lsr	x0, x0, x2
   5b8bc:	cmp	x5, #0x0
   5b8c0:	cset	x1, ne  // ne = any
   5b8c4:	orr	x1, x1, x0
   5b8c8:	cmp	x1, #0x0
   5b8cc:	cset	w7, ne  // ne = any
   5b8d0:	tst	x1, #0x7
   5b8d4:	b.eq	5b91c <mpfr_free_pool@@Base+0x25c4>  // b.none
   5b8d8:	mov	x2, #0x0                   	// #0
   5b8dc:	b	5b7dc <mpfr_free_pool@@Base+0x2484>
   5b8e0:	mov	w3, w2
   5b8e4:	ands	x1, x6, #0xc00000
   5b8e8:	b.eq	5b910 <mpfr_free_pool@@Base+0x25b8>  // b.none
   5b8ec:	cmp	x1, #0x400, lsl #12
   5b8f0:	b.eq	5b998 <mpfr_free_pool@@Base+0x2640>  // b.none
   5b8f4:	cmp	x1, #0x800, lsl #12
   5b8f8:	mov	w5, #0x7fe                 	// #2046
   5b8fc:	csel	w1, w4, wzr, eq  // eq = none
   5b900:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   5b904:	cmp	w1, #0x0
   5b908:	csel	w3, w3, w5, ne  // ne = any
   5b90c:	csel	x1, xzr, x2, ne  // ne = any
   5b910:	mov	w2, #0x14                  	// #20
   5b914:	orr	w0, w0, w2
   5b918:	b	5b750 <mpfr_free_pool@@Base+0x23f8>
   5b91c:	and	x3, x1, #0x80000000000000
   5b920:	cbnz	x1, 5b9b0 <mpfr_free_pool@@Base+0x2658>
   5b924:	nop
   5b928:	mov	w0, #0x0                   	// #0
   5b92c:	mov	x2, #0x1                   	// #1
   5b930:	cbnz	x3, 5b814 <mpfr_free_pool@@Base+0x24bc>
   5b934:	mov	x2, #0x0                   	// #0
   5b938:	lsr	x1, x1, #3
   5b93c:	and	w2, w2, #0x7ff
   5b940:	b	5b788 <mpfr_free_pool@@Base+0x2430>
   5b944:	and	x3, x1, #0xf
   5b948:	cmp	x3, #0x4
   5b94c:	add	x3, x1, #0x4
   5b950:	csel	x1, x3, x1, ne  // ne = any
   5b954:	b	5b73c <mpfr_free_pool@@Base+0x23e4>
   5b958:	add	w1, w2, #0x3
   5b95c:	sub	w2, w3, w2
   5b960:	lsl	x3, x5, x1
   5b964:	cmp	x3, #0x0
   5b968:	cset	x3, ne  // ne = any
   5b96c:	lsr	x2, x5, x2
   5b970:	orr	x2, x2, x3
   5b974:	lsl	x0, x0, x1
   5b978:	orr	x1, x0, x2
   5b97c:	b	5b8c8 <mpfr_free_pool@@Base+0x2570>
   5b980:	cbz	w4, 5b84c <mpfr_free_pool@@Base+0x24f4>
   5b984:	mov	x1, #0xffffffffffffffff    	// #-1
   5b988:	mov	x2, #0x7fe                 	// #2046
   5b98c:	mov	w7, #0x0                   	// #0
   5b990:	mov	w0, #0x14                  	// #20
   5b994:	b	5b73c <mpfr_free_pool@@Base+0x23e4>
   5b998:	cmp	w4, #0x0
   5b99c:	mov	w1, #0x7fe                 	// #2046
   5b9a0:	csel	w3, w2, w1, eq  // eq = none
   5b9a4:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   5b9a8:	csel	x1, xzr, x2, eq  // eq = none
   5b9ac:	b	5b910 <mpfr_free_pool@@Base+0x25b8>
   5b9b0:	tbz	w6, #11, 5b928 <mpfr_free_pool@@Base+0x25d0>
   5b9b4:	mov	w0, #0x0                   	// #0
   5b9b8:	mov	x2, #0x0                   	// #0
   5b9bc:	orr	w0, w0, #0x8
   5b9c0:	b	5b804 <mpfr_free_pool@@Base+0x24ac>
   5b9c4:	nop
   5b9c8:	tbz	w0, #0, 5b9d8 <mpfr_free_pool@@Base+0x2680>
   5b9cc:	movi	v1.2s, #0x0
   5b9d0:	fdiv	s0, s1, s1
   5b9d4:	mrs	x1, fpsr
   5b9d8:	tbz	w0, #1, 5b9ec <mpfr_free_pool@@Base+0x2694>
   5b9dc:	fmov	s1, #1.000000000000000000e+00
   5b9e0:	movi	v2.2s, #0x0
   5b9e4:	fdiv	s0, s1, s2
   5b9e8:	mrs	x1, fpsr
   5b9ec:	tbz	w0, #2, 5ba0c <mpfr_free_pool@@Base+0x26b4>
   5b9f0:	mov	w2, #0xc5ae                	// #50606
   5b9f4:	mov	w1, #0x7f7fffff            	// #2139095039
   5b9f8:	movk	w2, #0x749d, lsl #16
   5b9fc:	fmov	s1, w1
   5ba00:	fmov	s2, w2
   5ba04:	fadd	s0, s1, s2
   5ba08:	mrs	x1, fpsr
   5ba0c:	tbz	w0, #3, 5ba1c <mpfr_free_pool@@Base+0x26c4>
   5ba10:	movi	v1.2s, #0x80, lsl #16
   5ba14:	fmul	s0, s1, s1
   5ba18:	mrs	x1, fpsr
   5ba1c:	tbz	w0, #4, 5ba34 <mpfr_free_pool@@Base+0x26dc>
   5ba20:	mov	w0, #0x7f7fffff            	// #2139095039
   5ba24:	fmov	s2, #1.000000000000000000e+00
   5ba28:	fmov	s1, w0
   5ba2c:	fsub	s0, s1, s2
   5ba30:	mrs	x0, fpsr
   5ba34:	ret

Disassembly of section .fini:

000000000005ba38 <.fini>:
   5ba38:	stp	x29, x30, [sp, #-16]!
   5ba3c:	mov	x29, sp
   5ba40:	ldp	x29, x30, [sp], #16
   5ba44:	ret
