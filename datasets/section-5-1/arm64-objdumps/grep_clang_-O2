
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//grep_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004021c8 <.init>:
  4021c8:	stp	x29, x30, [sp, #-16]!
  4021cc:	mov	x29, sp
  4021d0:	bl	4028d0 <wcrtomb@plt+0x60>
  4021d4:	ldp	x29, x30, [sp], #16
  4021d8:	ret

Disassembly of section .plt:

00000000004021e0 <mbrtowc@plt-0x20>:
  4021e0:	stp	x16, x30, [sp, #-16]!
  4021e4:	adrp	x16, 43b000 <_obstack_memory_used@@Base+0x22d70>
  4021e8:	ldr	x17, [x16, #4088]
  4021ec:	add	x16, x16, #0xff8
  4021f0:	br	x17
  4021f4:	nop
  4021f8:	nop
  4021fc:	nop

0000000000402200 <mbrtowc@plt>:
  402200:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402204:	ldr	x17, [x16]
  402208:	add	x16, x16, #0x0
  40220c:	br	x17

0000000000402210 <memcpy@plt>:
  402210:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402214:	ldr	x17, [x16, #8]
  402218:	add	x16, x16, #0x8
  40221c:	br	x17

0000000000402220 <sigaltstack@plt>:
  402220:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402224:	ldr	x17, [x16, #16]
  402228:	add	x16, x16, #0x10
  40222c:	br	x17

0000000000402230 <memmove@plt>:
  402230:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402234:	ldr	x17, [x16, #24]
  402238:	add	x16, x16, #0x18
  40223c:	br	x17

0000000000402240 <isalpha@plt>:
  402240:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402244:	ldr	x17, [x16, #32]
  402248:	add	x16, x16, #0x20
  40224c:	br	x17

0000000000402250 <_exit@plt>:
  402250:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402254:	ldr	x17, [x16, #40]
  402258:	add	x16, x16, #0x28
  40225c:	br	x17

0000000000402260 <fwrite_unlocked@plt>:
  402260:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402264:	ldr	x17, [x16, #48]
  402268:	add	x16, x16, #0x30
  40226c:	br	x17

0000000000402270 <strlen@plt>:
  402270:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402274:	ldr	x17, [x16, #56]
  402278:	add	x16, x16, #0x38
  40227c:	br	x17

0000000000402280 <fputs@plt>:
  402280:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402284:	ldr	x17, [x16, #64]
  402288:	add	x16, x16, #0x40
  40228c:	br	x17

0000000000402290 <exit@plt>:
  402290:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402294:	ldr	x17, [x16, #72]
  402298:	add	x16, x16, #0x48
  40229c:	br	x17

00000000004022a0 <error@plt>:
  4022a0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4022a4:	ldr	x17, [x16, #80]
  4022a8:	add	x16, x16, #0x50
  4022ac:	br	x17

00000000004022b0 <fchdir@plt>:
  4022b0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4022b4:	ldr	x17, [x16, #88]
  4022b8:	add	x16, x16, #0x58
  4022bc:	br	x17

00000000004022c0 <wctype@plt>:
  4022c0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4022c4:	ldr	x17, [x16, #96]
  4022c8:	add	x16, x16, #0x60
  4022cc:	br	x17

00000000004022d0 <__cxa_atexit@plt>:
  4022d0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4022d4:	ldr	x17, [x16, #104]
  4022d8:	add	x16, x16, #0x68
  4022dc:	br	x17

00000000004022e0 <iswcntrl@plt>:
  4022e0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4022e4:	ldr	x17, [x16, #112]
  4022e8:	add	x16, x16, #0x70
  4022ec:	br	x17

00000000004022f0 <qsort@plt>:
  4022f0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4022f4:	ldr	x17, [x16, #120]
  4022f8:	add	x16, x16, #0x78
  4022fc:	br	x17

0000000000402300 <isblank@plt>:
  402300:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402304:	ldr	x17, [x16, #128]
  402308:	add	x16, x16, #0x80
  40230c:	br	x17

0000000000402310 <lseek@plt>:
  402310:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402314:	ldr	x17, [x16, #136]
  402318:	add	x16, x16, #0x88
  40231c:	br	x17

0000000000402320 <__fpending@plt>:
  402320:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402324:	ldr	x17, [x16, #144]
  402328:	add	x16, x16, #0x90
  40232c:	br	x17

0000000000402330 <__ctype_tolower_loc@plt>:
  402330:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402334:	ldr	x17, [x16, #152]
  402338:	add	x16, x16, #0x98
  40233c:	br	x17

0000000000402340 <fclose@plt>:
  402340:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402344:	ldr	x17, [x16, #160]
  402348:	add	x16, x16, #0xa0
  40234c:	br	x17

0000000000402350 <wctob@plt>:
  402350:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402354:	ldr	x17, [x16, #168]
  402358:	add	x16, x16, #0xa8
  40235c:	br	x17

0000000000402360 <nl_langinfo@plt>:
  402360:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402364:	ldr	x17, [x16, #176]
  402368:	add	x16, x16, #0xb0
  40236c:	br	x17

0000000000402370 <fopen@plt>:
  402370:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402374:	ldr	x17, [x16, #184]
  402378:	add	x16, x16, #0xb8
  40237c:	br	x17

0000000000402380 <isspace@plt>:
  402380:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402384:	ldr	x17, [x16, #192]
  402388:	add	x16, x16, #0xc0
  40238c:	br	x17

0000000000402390 <iswctype@plt>:
  402390:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402394:	ldr	x17, [x16, #200]
  402398:	add	x16, x16, #0xc8
  40239c:	br	x17

00000000004023a0 <malloc@plt>:
  4023a0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4023a4:	ldr	x17, [x16, #208]
  4023a8:	add	x16, x16, #0xd0
  4023ac:	br	x17

00000000004023b0 <wcwidth@plt>:
  4023b0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4023b4:	ldr	x17, [x16, #216]
  4023b8:	add	x16, x16, #0xd8
  4023bc:	br	x17

00000000004023c0 <open@plt>:
  4023c0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4023c4:	ldr	x17, [x16, #224]
  4023c8:	add	x16, x16, #0xe0
  4023cc:	br	x17

00000000004023d0 <splice@plt>:
  4023d0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4023d4:	ldr	x17, [x16, #232]
  4023d8:	add	x16, x16, #0xe8
  4023dc:	br	x17

00000000004023e0 <islower@plt>:
  4023e0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4023e4:	ldr	x17, [x16, #240]
  4023e8:	add	x16, x16, #0xf0
  4023ec:	br	x17

00000000004023f0 <isxdigit@plt>:
  4023f0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4023f4:	ldr	x17, [x16, #248]
  4023f8:	add	x16, x16, #0xf8
  4023fc:	br	x17

0000000000402400 <__strtol_internal@plt>:
  402400:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402404:	ldr	x17, [x16, #256]
  402408:	add	x16, x16, #0x100
  40240c:	br	x17

0000000000402410 <sigemptyset@plt>:
  402410:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402414:	ldr	x17, [x16, #264]
  402418:	add	x16, x16, #0x108
  40241c:	br	x17

0000000000402420 <strncmp@plt>:
  402420:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402424:	ldr	x17, [x16, #272]
  402428:	add	x16, x16, #0x110
  40242c:	br	x17

0000000000402430 <bindtextdomain@plt>:
  402430:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402434:	ldr	x17, [x16, #280]
  402438:	add	x16, x16, #0x118
  40243c:	br	x17

0000000000402440 <isdigit@plt>:
  402440:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402444:	ldr	x17, [x16, #288]
  402448:	add	x16, x16, #0x120
  40244c:	br	x17

0000000000402450 <__libc_start_main@plt>:
  402450:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402454:	ldr	x17, [x16, #296]
  402458:	add	x16, x16, #0x128
  40245c:	br	x17

0000000000402460 <fstatfs@plt>:
  402460:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402464:	ldr	x17, [x16, #304]
  402468:	add	x16, x16, #0x130
  40246c:	br	x17

0000000000402470 <memset@plt>:
  402470:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402474:	ldr	x17, [x16, #312]
  402478:	add	x16, x16, #0x138
  40247c:	br	x17

0000000000402480 <calloc@plt>:
  402480:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402484:	ldr	x17, [x16, #320]
  402488:	add	x16, x16, #0x140
  40248c:	br	x17

0000000000402490 <bcmp@plt>:
  402490:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402494:	ldr	x17, [x16, #328]
  402498:	add	x16, x16, #0x148
  40249c:	br	x17

00000000004024a0 <isupper@plt>:
  4024a0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #336]
  4024a8:	add	x16, x16, #0x150
  4024ac:	br	x17

00000000004024b0 <readdir@plt>:
  4024b0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #344]
  4024b8:	add	x16, x16, #0x158
  4024bc:	br	x17

00000000004024c0 <realloc@plt>:
  4024c0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #352]
  4024c8:	add	x16, x16, #0x160
  4024cc:	br	x17

00000000004024d0 <__ctype_toupper_loc@plt>:
  4024d0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #360]
  4024d8:	add	x16, x16, #0x168
  4024dc:	br	x17

00000000004024e0 <closedir@plt>:
  4024e0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #368]
  4024e8:	add	x16, x16, #0x170
  4024ec:	br	x17

00000000004024f0 <close@plt>:
  4024f0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #376]
  4024f8:	add	x16, x16, #0x178
  4024fc:	br	x17

0000000000402500 <sigaction@plt>:
  402500:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #384]
  402508:	add	x16, x16, #0x180
  40250c:	br	x17

0000000000402510 <strrchr@plt>:
  402510:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #392]
  402518:	add	x16, x16, #0x188
  40251c:	br	x17

0000000000402520 <__gmon_start__@plt>:
  402520:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #400]
  402528:	add	x16, x16, #0x190
  40252c:	br	x17

0000000000402530 <fdopendir@plt>:
  402530:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #408]
  402538:	add	x16, x16, #0x198
  40253c:	br	x17

0000000000402540 <write@plt>:
  402540:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #416]
  402548:	add	x16, x16, #0x1a0
  40254c:	br	x17

0000000000402550 <btowc@plt>:
  402550:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #424]
  402558:	add	x16, x16, #0x1a8
  40255c:	br	x17

0000000000402560 <abort@plt>:
  402560:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #432]
  402568:	add	x16, x16, #0x1b0
  40256c:	br	x17

0000000000402570 <iscntrl@plt>:
  402570:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #440]
  402578:	add	x16, x16, #0x1b8
  40257c:	br	x17

0000000000402580 <mbsinit@plt>:
  402580:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #448]
  402588:	add	x16, x16, #0x1c0
  40258c:	br	x17

0000000000402590 <__overflow@plt>:
  402590:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #456]
  402598:	add	x16, x16, #0x1c8
  40259c:	br	x17

00000000004025a0 <ispunct@plt>:
  4025a0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #464]
  4025a8:	add	x16, x16, #0x1d0
  4025ac:	br	x17

00000000004025b0 <puts@plt>:
  4025b0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #472]
  4025b8:	add	x16, x16, #0x1d8
  4025bc:	br	x17

00000000004025c0 <fread_unlocked@plt>:
  4025c0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #480]
  4025c8:	add	x16, x16, #0x1e0
  4025cc:	br	x17

00000000004025d0 <memcmp@plt>:
  4025d0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #488]
  4025d8:	add	x16, x16, #0x1e8
  4025dc:	br	x17

00000000004025e0 <textdomain@plt>:
  4025e0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #496]
  4025e8:	add	x16, x16, #0x1f0
  4025ec:	br	x17

00000000004025f0 <getopt_long@plt>:
  4025f0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #504]
  4025f8:	add	x16, x16, #0x1f8
  4025fc:	br	x17

0000000000402600 <strcmp@plt>:
  402600:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #512]
  402608:	add	x16, x16, #0x200
  40260c:	br	x17

0000000000402610 <__ctype_b_loc@plt>:
  402610:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #520]
  402618:	add	x16, x16, #0x208
  40261c:	br	x17

0000000000402620 <free@plt>:
  402620:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #528]
  402628:	add	x16, x16, #0x210
  40262c:	br	x17

0000000000402630 <__ctype_get_mb_cur_max@plt>:
  402630:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #536]
  402638:	add	x16, x16, #0x218
  40263c:	br	x17

0000000000402640 <strchr@plt>:
  402640:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #544]
  402648:	add	x16, x16, #0x220
  40264c:	br	x17

0000000000402650 <memrchr@plt>:
  402650:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #552]
  402658:	add	x16, x16, #0x228
  40265c:	br	x17

0000000000402660 <fnmatch@plt>:
  402660:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #560]
  402668:	add	x16, x16, #0x230
  40266c:	br	x17

0000000000402670 <fflush_unlocked@plt>:
  402670:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #568]
  402678:	add	x16, x16, #0x238
  40267c:	br	x17

0000000000402680 <fcntl@plt>:
  402680:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #576]
  402688:	add	x16, x16, #0x240
  40268c:	br	x17

0000000000402690 <strcpy@plt>:
  402690:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #584]
  402698:	add	x16, x16, #0x248
  40269c:	br	x17

00000000004026a0 <dirfd@plt>:
  4026a0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #592]
  4026a8:	add	x16, x16, #0x250
  4026ac:	br	x17

00000000004026b0 <__lxstat@plt>:
  4026b0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #600]
  4026b8:	add	x16, x16, #0x258
  4026bc:	br	x17

00000000004026c0 <read@plt>:
  4026c0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #608]
  4026c8:	add	x16, x16, #0x260
  4026cc:	br	x17

00000000004026d0 <memchr@plt>:
  4026d0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #616]
  4026d8:	add	x16, x16, #0x268
  4026dc:	br	x17

00000000004026e0 <isatty@plt>:
  4026e0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #624]
  4026e8:	add	x16, x16, #0x270
  4026ec:	br	x17

00000000004026f0 <sysconf@plt>:
  4026f0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #632]
  4026f8:	add	x16, x16, #0x278
  4026fc:	br	x17

0000000000402700 <isgraph@plt>:
  402700:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #640]
  402708:	add	x16, x16, #0x280
  40270c:	br	x17

0000000000402710 <iswalnum@plt>:
  402710:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #648]
  402718:	add	x16, x16, #0x288
  40271c:	br	x17

0000000000402720 <__fxstat@plt>:
  402720:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #656]
  402728:	add	x16, x16, #0x290
  40272c:	br	x17

0000000000402730 <strstr@plt>:
  402730:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #664]
  402738:	add	x16, x16, #0x298
  40273c:	br	x17

0000000000402740 <dcgettext@plt>:
  402740:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #672]
  402748:	add	x16, x16, #0x2a0
  40274c:	br	x17

0000000000402750 <fputs_unlocked@plt>:
  402750:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #680]
  402758:	add	x16, x16, #0x2a8
  40275c:	br	x17

0000000000402760 <strcoll@plt>:
  402760:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #688]
  402768:	add	x16, x16, #0x2b0
  40276c:	br	x17

0000000000402770 <isalnum@plt>:
  402770:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #696]
  402778:	add	x16, x16, #0x2b8
  40277c:	br	x17

0000000000402780 <towupper@plt>:
  402780:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #704]
  402788:	add	x16, x16, #0x2c0
  40278c:	br	x17

0000000000402790 <iswprint@plt>:
  402790:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #712]
  402798:	add	x16, x16, #0x2c8
  40279c:	br	x17

00000000004027a0 <vfprintf@plt>:
  4027a0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #720]
  4027a8:	add	x16, x16, #0x2d0
  4027ac:	br	x17

00000000004027b0 <openat@plt>:
  4027b0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #728]
  4027b8:	add	x16, x16, #0x2d8
  4027bc:	br	x17

00000000004027c0 <printf@plt>:
  4027c0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #736]
  4027c8:	add	x16, x16, #0x2e0
  4027cc:	br	x17

00000000004027d0 <__assert_fail@plt>:
  4027d0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #744]
  4027d8:	add	x16, x16, #0x2e8
  4027dc:	br	x17

00000000004027e0 <__errno_location@plt>:
  4027e0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #752]
  4027e8:	add	x16, x16, #0x2f0
  4027ec:	br	x17

00000000004027f0 <getenv@plt>:
  4027f0:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #760]
  4027f8:	add	x16, x16, #0x2f8
  4027fc:	br	x17

0000000000402800 <__xstat@plt>:
  402800:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #768]
  402808:	add	x16, x16, #0x300
  40280c:	br	x17

0000000000402810 <towlower@plt>:
  402810:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #776]
  402818:	add	x16, x16, #0x308
  40281c:	br	x17

0000000000402820 <fprintf@plt>:
  402820:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #784]
  402828:	add	x16, x16, #0x310
  40282c:	br	x17

0000000000402830 <__uflow@plt>:
  402830:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #792]
  402838:	add	x16, x16, #0x318
  40283c:	br	x17

0000000000402840 <isprint@plt>:
  402840:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #800]
  402848:	add	x16, x16, #0x320
  40284c:	br	x17

0000000000402850 <setlocale@plt>:
  402850:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #808]
  402858:	add	x16, x16, #0x328
  40285c:	br	x17

0000000000402860 <__fxstatat@plt>:
  402860:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #816]
  402868:	add	x16, x16, #0x330
  40286c:	br	x17

0000000000402870 <wcrtomb@plt>:
  402870:	adrp	x16, 43c000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #824]
  402878:	add	x16, x16, #0x338
  40287c:	br	x17

Disassembly of section .text:

0000000000402880 <_obstack_begin@@Base-0x156a0>:
  402880:	mov	x29, #0x0                   	// #0
  402884:	mov	x30, #0x0                   	// #0
  402888:	mov	x5, x0
  40288c:	ldr	x1, [sp]
  402890:	add	x2, sp, #0x8
  402894:	mov	x6, sp
  402898:	movz	x0, #0x0, lsl #48
  40289c:	movk	x0, #0x0, lsl #32
  4028a0:	movk	x0, #0x40, lsl #16
  4028a4:	movk	x0, #0x3954
  4028a8:	movz	x3, #0x0, lsl #48
  4028ac:	movk	x3, #0x0, lsl #32
  4028b0:	movk	x3, #0x42, lsl #16
  4028b4:	movk	x3, #0x8078
  4028b8:	movz	x4, #0x0, lsl #48
  4028bc:	movk	x4, #0x0, lsl #32
  4028c0:	movk	x4, #0x42, lsl #16
  4028c4:	movk	x4, #0x80f8
  4028c8:	bl	402450 <__libc_start_main@plt>
  4028cc:	bl	402560 <abort@plt>
  4028d0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x22d70>
  4028d4:	ldr	x0, [x0, #4064]
  4028d8:	cbz	x0, 4028e0 <wcrtomb@plt+0x70>
  4028dc:	b	402520 <__gmon_start__@plt>
  4028e0:	ret
  4028e4:	nop
  4028e8:	adrp	x0, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4028ec:	add	x0, x0, #0x428
  4028f0:	adrp	x1, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4028f4:	add	x1, x1, #0x428
  4028f8:	cmp	x1, x0
  4028fc:	b.eq	402914 <wcrtomb@plt+0xa4>  // b.none
  402900:	adrp	x1, 428000 <_obstack_memory_used@@Base+0xfd70>
  402904:	ldr	x1, [x1, #296]
  402908:	cbz	x1, 402914 <wcrtomb@plt+0xa4>
  40290c:	mov	x16, x1
  402910:	br	x16
  402914:	ret
  402918:	adrp	x0, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40291c:	add	x0, x0, #0x428
  402920:	adrp	x1, 43c000 <_obstack_memory_used@@Base+0x23d70>
  402924:	add	x1, x1, #0x428
  402928:	sub	x1, x1, x0
  40292c:	lsr	x2, x1, #63
  402930:	add	x1, x2, x1, asr #3
  402934:	cmp	xzr, x1, asr #1
  402938:	asr	x1, x1, #1
  40293c:	b.eq	402954 <wcrtomb@plt+0xe4>  // b.none
  402940:	adrp	x2, 428000 <_obstack_memory_used@@Base+0xfd70>
  402944:	ldr	x2, [x2, #304]
  402948:	cbz	x2, 402954 <wcrtomb@plt+0xe4>
  40294c:	mov	x16, x2
  402950:	br	x16
  402954:	ret
  402958:	stp	x29, x30, [sp, #-32]!
  40295c:	mov	x29, sp
  402960:	str	x19, [sp, #16]
  402964:	adrp	x19, 43c000 <_obstack_memory_used@@Base+0x23d70>
  402968:	ldrb	w0, [x19, #1120]
  40296c:	cbnz	w0, 40297c <wcrtomb@plt+0x10c>
  402970:	bl	4028e8 <wcrtomb@plt+0x78>
  402974:	mov	w0, #0x1                   	// #1
  402978:	strb	w0, [x19, #1120]
  40297c:	ldr	x19, [sp, #16]
  402980:	ldp	x29, x30, [sp], #32
  402984:	ret
  402988:	b	402918 <wcrtomb@plt+0xa8>
  40298c:	stp	x29, x30, [sp, #-16]!
  402990:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  402994:	mov	x3, x0
  402998:	add	x2, x2, #0x1b7
  40299c:	mov	w0, #0x2                   	// #2
  4029a0:	mov	w1, wzr
  4029a4:	mov	x29, sp
  4029a8:	bl	4022a0 <error@plt>
  4029ac:	stp	x29, x30, [sp, #-32]!
  4029b0:	str	x19, [sp, #16]
  4029b4:	mov	x19, x0
  4029b8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0xfd70>
  4029bc:	add	x0, x0, #0x138
  4029c0:	mov	x29, sp
  4029c4:	bl	4027f0 <getenv@plt>
  4029c8:	cbz	x0, 4029d8 <wcrtomb@plt+0x168>
  4029cc:	ldr	x19, [sp, #16]
  4029d0:	ldp	x29, x30, [sp], #32
  4029d4:	ret
  4029d8:	mov	x0, x19
  4029dc:	bl	40298c <wcrtomb@plt+0x11c>
  4029e0:	sub	sp, sp, #0x130
  4029e4:	stp	x24, x23, [sp, #256]
  4029e8:	stp	x22, x21, [sp, #272]
  4029ec:	mov	x22, x1
  4029f0:	mov	x23, x0
  4029f4:	mov	w0, #0x1                   	// #1
  4029f8:	mov	w1, #0x48                  	// #72
  4029fc:	stp	x29, x30, [sp, #208]
  402a00:	stp	x28, x27, [sp, #224]
  402a04:	stp	x26, x25, [sp, #240]
  402a08:	stp	x20, x19, [sp, #288]
  402a0c:	add	x29, sp, #0xd0
  402a10:	mov	x21, x2
  402a14:	mov	w28, #0x1                   	// #1
  402a18:	bl	4157f0 <wcrtomb@plt+0x12f80>
  402a1c:	mov	x19, x0
  402a20:	bl	40d4e4 <wcrtomb@plt+0xac74>
  402a24:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  402a28:	ldrb	w8, [x8, #3518]
  402a2c:	orr	x9, x21, #0x400000
  402a30:	mov	x20, x0
  402a34:	str	x0, [x19, #8]
  402a38:	cmp	w8, #0x0
  402a3c:	csel	x24, x21, x9, eq  // eq = none
  402a40:	mov	x0, x24
  402a44:	bl	4195f8 <_obstack_memory_used@@Base+0x1368>
  402a48:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  402a4c:	ldrb	w8, [x8, #2228]
  402a50:	adrp	x21, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  402a54:	add	x21, x21, #0x8b8
  402a58:	mov	x0, x20
  402a5c:	cmp	w8, #0x0
  402a60:	cset	w8, eq  // eq = none
  402a64:	lsl	w3, w8, #1
  402a68:	mov	x1, x21
  402a6c:	mov	x2, x24
  402a70:	str	x20, [sp, #24]
  402a74:	str	x24, [sp]
  402a78:	bl	40d4ec <wcrtomb@plt+0xac7c>
  402a7c:	ldrb	w8, [x21]
  402a80:	ldrb	w9, [x21, #2]
  402a84:	mov	w0, #0x40                  	// #64
  402a88:	str	x22, [sp, #16]
  402a8c:	eor	w8, w8, #0x1
  402a90:	orr	w20, w8, w9
  402a94:	add	x8, x23, x22
  402a98:	str	x8, [sp, #72]
  402a9c:	bl	4155d4 <wcrtomb@plt+0x12d64>
  402aa0:	cmp	w20, #0x0
  402aa4:	mov	w8, #0x5c                  	// #92
  402aa8:	mov	w9, #0x100                 	// #256
  402aac:	mov	x26, #0x5555555555555555    	// #6148914691236517205
  402ab0:	mov	x27, xzr
  402ab4:	add	x25, x0, #0x40
  402ab8:	csel	w24, w9, w8, eq  // eq = none
  402abc:	movk	x26, #0x155, lsl #48
  402ac0:	mov	x22, x23
  402ac4:	str	xzr, [sp, #88]
  402ac8:	stp	xzr, xzr, [x29, #-96]
  402acc:	stp	xzr, xzr, [sp, #32]
  402ad0:	str	wzr, [sp, #52]
  402ad4:	stp	x25, xzr, [x19, #16]
  402ad8:	str	x25, [sp, #96]
  402adc:	str	x23, [sp, #56]
  402ae0:	str	x23, [sp, #8]
  402ae4:	str	w24, [sp, #68]
  402ae8:	b	402b08 <wcrtomb@plt+0x298>
  402aec:	ldr	x8, [sp, #80]
  402af0:	str	x20, [x19, #24]
  402af4:	str	x20, [sp, #88]
  402af8:	stur	x20, [x29, #-96]
  402afc:	str	x8, [sp, #56]
  402b00:	ldr	w24, [sp, #68]
  402b04:	cbz	x23, 402d44 <wcrtomb@plt+0x4d4>
  402b08:	ldr	x8, [sp, #72]
  402b0c:	mov	w1, #0xa                   	// #10
  402b10:	mov	x0, x22
  402b14:	str	x27, [sp, #104]
  402b18:	sub	x21, x8, x22
  402b1c:	mov	x2, x21
  402b20:	bl	4026d0 <memchr@plt>
  402b24:	sub	x8, x0, x22
  402b28:	cmp	x0, #0x0
  402b2c:	csel	x21, x21, x8, eq  // eq = none
  402b30:	mov	x23, x0
  402b34:	csinc	x8, xzr, x0, eq  // eq = none
  402b38:	subs	x27, x21, #0x1
  402b3c:	str	x8, [sp, #80]
  402b40:	b.lt	402b9c <wcrtomb@plt+0x32c>  // b.tstop
  402b44:	mov	w1, #0x5c                  	// #92
  402b48:	mov	x0, x22
  402b4c:	mov	x2, x27
  402b50:	bl	4026d0 <memchr@plt>
  402b54:	cbz	x0, 402b9c <wcrtomb@plt+0x32c>
  402b58:	add	x20, x22, x27
  402b5c:	b	402b74 <wcrtomb@plt+0x304>
  402b60:	add	x0, x0, #0x1
  402b64:	sub	x2, x20, x0
  402b68:	mov	w1, #0x5c                  	// #92
  402b6c:	bl	4026d0 <memchr@plt>
  402b70:	cbz	x0, 402b9c <wcrtomb@plt+0x32c>
  402b74:	mov	x8, x0
  402b78:	ldrb	w9, [x8, #1]!
  402b7c:	sub	w10, w9, #0x31
  402b80:	cmp	w10, #0x9
  402b84:	b.cc	402cd4 <wcrtomb@plt+0x464>  // b.lo, b.ul, b.last
  402b88:	cmp	w24, w9
  402b8c:	b.ne	402b60 <wcrtomb@plt+0x2f0>  // b.any
  402b90:	cmp	x8, x20
  402b94:	mov	x0, x8
  402b98:	b.ne	402b60 <wcrtomb@plt+0x2f0>  // b.any
  402b9c:	mov	w24, wzr
  402ba0:	ldur	x8, [x29, #-96]
  402ba4:	add	x20, x8, #0x1
  402ba8:	cmp	x28, x20
  402bac:	b.ls	402bb8 <wcrtomb@plt+0x348>  // b.plast
  402bb0:	ldr	x10, [sp, #96]
  402bb4:	b	402bf4 <wcrtomb@plt+0x384>
  402bb8:	ldr	x8, [sp, #88]
  402bbc:	add	x20, x8, #0x1
  402bc0:	cmp	x28, x26
  402bc4:	b.cs	403010 <wcrtomb@plt+0x7a0>  // b.hs, b.nlast
  402bc8:	add	x8, x28, x28, lsr #1
  402bcc:	add	x28, x8, #0x1
  402bd0:	sub	x0, x25, #0x40
  402bd4:	lsl	x1, x28, #6
  402bd8:	bl	415654 <wcrtomb@plt+0x12de4>
  402bdc:	add	x25, x0, #0x40
  402be0:	cmp	x28, x20
  402be4:	str	x25, [x19, #16]
  402be8:	b.ls	402bc0 <wcrtomb@plt+0x350>  // b.plast
  402bec:	ldr	x8, [sp, #88]
  402bf0:	mov	x10, x25
  402bf4:	stur	x8, [x29, #-96]
  402bf8:	add	x8, x10, x8, lsl #6
  402bfc:	cmp	w24, #0x0
  402c00:	sub	x9, x29, #0x48
  402c04:	csel	x27, x8, x9, ne  // ne = any
  402c08:	stp	xzr, xzr, [x27]
  402c0c:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  402c10:	ldrb	w8, [x8, #3518]
  402c14:	eor	w9, w24, #0x1
  402c18:	mov	x0, xzr
  402c1c:	csel	x25, x10, x25, ne  // ne = any
  402c20:	orr	w8, w8, w9
  402c24:	str	x10, [sp, #96]
  402c28:	cbnz	w8, 402c34 <wcrtomb@plt+0x3c4>
  402c2c:	mov	w0, #0x100                 	// #256
  402c30:	bl	4155d4 <wcrtomb@plt+0x12d64>
  402c34:	stp	x0, xzr, [x27, #32]
  402c38:	mov	x0, x22
  402c3c:	mov	x1, x21
  402c40:	mov	x2, x27
  402c44:	bl	418300 <_obstack_memory_used@@Base+0x70>
  402c48:	cbz	x0, 402c94 <wcrtomb@plt+0x424>
  402c4c:	ldr	x27, [sp, #104]
  402c50:	mov	x21, x0
  402c54:	sub	x1, x29, #0x50
  402c58:	stur	x27, [x29, #-80]
  402c5c:	add	x27, x27, #0x1
  402c60:	mov	x0, x27
  402c64:	bl	4035ac <wcrtomb@plt+0xd3c>
  402c68:	ldrb	w8, [x0]
  402c6c:	cbz	w8, 402ca8 <wcrtomb@plt+0x438>
  402c70:	ldur	x4, [x29, #-80]
  402c74:	adrp	x2, 428000 <_obstack_memory_used@@Base+0xfd70>
  402c78:	mov	x3, x0
  402c7c:	mov	w0, wzr
  402c80:	mov	w1, wzr
  402c84:	add	x2, x2, #0x148
  402c88:	mov	x5, x21
  402c8c:	bl	4022a0 <error@plt>
  402c90:	b	402cc0 <wcrtomb@plt+0x450>
  402c94:	ldr	x27, [sp, #104]
  402c98:	add	x27, x27, #0x1
  402c9c:	add	x22, x23, #0x1
  402ca0:	cbnz	w24, 402aec <wcrtomb@plt+0x27c>
  402ca4:	b	402b00 <wcrtomb@plt+0x290>
  402ca8:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  402cac:	mov	w0, wzr
  402cb0:	mov	w1, wzr
  402cb4:	add	x2, x2, #0x1b7
  402cb8:	mov	x3, x21
  402cbc:	bl	4022a0 <error@plt>
  402cc0:	mov	w8, #0x1                   	// #1
  402cc4:	str	w8, [sp, #52]
  402cc8:	add	x22, x23, #0x1
  402ccc:	cbz	w24, 402b00 <wcrtomb@plt+0x290>
  402cd0:	b	402aec <wcrtomb@plt+0x27c>
  402cd4:	ldr	x9, [sp, #56]
  402cd8:	cmp	x9, x22
  402cdc:	b.cs	402d14 <wcrtomb@plt+0x4a4>  // b.hs, b.nlast
  402ce0:	sub	x27, x22, x9
  402ce4:	ldr	x9, [sp, #40]
  402ce8:	ldur	x8, [x29, #-88]
  402cec:	add	x20, x27, x9
  402cf0:	cmp	x8, x20
  402cf4:	b.cs	402d1c <wcrtomb@plt+0x4ac>  // b.hs, b.nlast
  402cf8:	ldr	x0, [sp, #32]
  402cfc:	sub	x1, x29, #0x58
  402d00:	bl	415758 <wcrtomb@plt+0x12ee8>
  402d04:	ldur	x8, [x29, #-88]
  402d08:	cmp	x8, x20
  402d0c:	b.cc	402cfc <wcrtomb@plt+0x48c>  // b.lo, b.ul, b.last
  402d10:	b	402d20 <wcrtomb@plt+0x4b0>
  402d14:	mov	w24, #0x1                   	// #1
  402d18:	b	402ba0 <wcrtomb@plt+0x330>
  402d1c:	ldr	x0, [sp, #32]
  402d20:	ldr	x8, [sp, #40]
  402d24:	ldr	x1, [sp, #56]
  402d28:	str	x0, [sp, #32]
  402d2c:	mov	x2, x27
  402d30:	add	x0, x0, x8
  402d34:	bl	402210 <memcpy@plt>
  402d38:	mov	w24, #0x1                   	// #1
  402d3c:	str	x20, [sp, #40]
  402d40:	b	402ba0 <wcrtomb@plt+0x330>
  402d44:	ldr	w8, [sp, #52]
  402d48:	tbnz	w8, #0, 403014 <wcrtomb@plt+0x7a4>
  402d4c:	ldp	x26, x25, [sp, #16]
  402d50:	ldr	x27, [sp, #8]
  402d54:	ldr	x20, [sp, #96]
  402d58:	ldr	x0, [sp, #32]
  402d5c:	ldr	x28, [sp, #56]
  402d60:	cbz	x28, 402da8 <wcrtomb@plt+0x538>
  402d64:	cmp	x28, x27
  402d68:	mov	x21, x27
  402d6c:	mov	x22, x26
  402d70:	b.ls	402da0 <wcrtomb@plt+0x530>  // b.plast
  402d74:	ldr	x8, [sp, #72]
  402d78:	ldr	x24, [sp, #40]
  402d7c:	sub	x23, x8, x28
  402d80:	add	x22, x23, x24
  402d84:	mov	x1, x22
  402d88:	bl	415654 <wcrtomb@plt+0x12de4>
  402d8c:	mov	x21, x0
  402d90:	add	x0, x0, x24
  402d94:	mov	x1, x28
  402d98:	mov	x2, x23
  402d9c:	bl	402210 <memcpy@plt>
  402da0:	cbnz	x21, 402db4 <wcrtomb@plt+0x544>
  402da4:	b	402e08 <wcrtomb@plt+0x598>
  402da8:	ldr	x22, [sp, #40]
  402dac:	mov	x21, x0
  402db0:	cbz	x21, 402e08 <wcrtomb@plt+0x598>
  402db4:	ldr	x8, [sp, #88]
  402db8:	sub	x23, x20, #0x40
  402dbc:	mov	x0, xzr
  402dc0:	add	x8, x8, #0x1
  402dc4:	stp	x23, x8, [x19, #16]
  402dc8:	stp	xzr, xzr, [x20, #-64]
  402dcc:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  402dd0:	ldrb	w8, [x8, #3518]
  402dd4:	cbnz	w8, 402de0 <wcrtomb@plt+0x570>
  402dd8:	mov	w0, #0x100                 	// #256
  402ddc:	bl	4155d4 <wcrtomb@plt+0x12d64>
  402de0:	stp	x0, xzr, [x20, #-32]
  402de4:	mov	x0, x21
  402de8:	mov	x1, x22
  402dec:	mov	x2, x23
  402df0:	bl	418300 <_obstack_memory_used@@Base+0x70>
  402df4:	cbnz	x0, 40301c <wcrtomb@plt+0x7ac>
  402df8:	cmp	x21, x27
  402dfc:	b.eq	402e08 <wcrtomb@plt+0x598>  // b.none
  402e00:	mov	x0, x21
  402e04:	bl	402620 <free@plt>
  402e08:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  402e0c:	adrp	x20, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  402e10:	ldrb	w8, [x8, #3516]
  402e14:	ldrb	w9, [x20, #3517]
  402e18:	orr	w8, w9, w8
  402e1c:	cbz	w8, 402ed4 <wcrtomb@plt+0x664>
  402e20:	add	x0, x26, #0x2d
  402e24:	bl	4155d4 <wcrtomb@plt+0x12d64>
  402e28:	ldr	x11, [sp]
  402e2c:	adrp	x9, 428000 <_obstack_memory_used@@Base+0xfd70>
  402e30:	adrp	x10, 428000 <_obstack_memory_used@@Base+0xfd70>
  402e34:	add	x9, x9, #0x153
  402e38:	add	x10, x10, #0x17f
  402e3c:	tst	x11, #0x2000
  402e40:	ldrb	w8, [x20, #3517]
  402e44:	adrp	x11, 428000 <_obstack_memory_used@@Base+0xfd70>
  402e48:	adrp	x12, 428000 <_obstack_memory_used@@Base+0xfd70>
  402e4c:	adrp	x13, 428000 <_obstack_memory_used@@Base+0xfd70>
  402e50:	csel	x9, x10, x9, eq  // eq = none
  402e54:	adrp	x10, 428000 <_obstack_memory_used@@Base+0xfd70>
  402e58:	add	x11, x11, #0x159
  402e5c:	add	x12, x12, #0x187
  402e60:	add	x13, x13, #0x156
  402e64:	add	x10, x10, #0x183
  402e68:	csel	x11, x12, x11, eq  // eq = none
  402e6c:	csel	x23, x10, x13, eq  // eq = none
  402e70:	adrp	x10, 428000 <_obstack_memory_used@@Base+0xfd70>
  402e74:	adrp	x12, 428000 <_obstack_memory_used@@Base+0xfd70>
  402e78:	add	x10, x10, #0x16c
  402e7c:	add	x12, x12, #0x19e
  402e80:	csel	x24, x12, x10, eq  // eq = none
  402e84:	cmp	w8, #0x0
  402e88:	csel	x1, x11, x9, eq  // eq = none
  402e8c:	mov	x21, x0
  402e90:	bl	402690 <strcpy@plt>
  402e94:	bl	402270 <strlen@plt>
  402e98:	mov	x22, x0
  402e9c:	add	x0, x21, x0
  402ea0:	mov	x1, x27
  402ea4:	mov	x2, x26
  402ea8:	bl	402210 <memcpy@plt>
  402eac:	ldrb	w8, [x20, #3517]
  402eb0:	add	x20, x22, x26
  402eb4:	add	x0, x21, x20
  402eb8:	cmp	w8, #0x0
  402ebc:	csel	x1, x24, x23, eq  // eq = none
  402ec0:	bl	402690 <strcpy@plt>
  402ec4:	bl	402270 <strlen@plt>
  402ec8:	add	x26, x0, x20
  402ecc:	mov	x27, x21
  402ed0:	b	402ed8 <wcrtomb@plt+0x668>
  402ed4:	mov	x21, xzr
  402ed8:	mov	x0, x27
  402edc:	mov	x1, x26
  402ee0:	mov	x2, x25
  402ee4:	bl	40a318 <wcrtomb@plt+0x7aa8>
  402ee8:	mov	x0, x25
  402eec:	bl	40c788 <wcrtomb@plt+0x9f18>
  402ef0:	cbz	x0, 402fd0 <wcrtomb@plt+0x760>
  402ef4:	mov	x20, x0
  402ef8:	mov	w0, wzr
  402efc:	bl	409664 <wcrtomb@plt+0x6df4>
  402f00:	str	x0, [x19]
  402f04:	ldrb	w8, [x20]
  402f08:	mov	x22, x0
  402f0c:	cbz	w8, 402fa4 <wcrtomb@plt+0x734>
  402f10:	ldr	x8, [x19, #56]
  402f14:	add	x27, x20, #0x3
  402f18:	mov	x0, x27
  402f1c:	add	x8, x8, #0x1
  402f20:	str	x8, [x19, #56]
  402f24:	bl	402270 <strlen@plt>
  402f28:	ldrb	w8, [x20, #1]
  402f2c:	ldrb	w9, [x20, #2]
  402f30:	mov	x25, x0
  402f34:	add	x8, x0, x8
  402f38:	add	x23, x8, x9
  402f3c:	mov	x0, x23
  402f40:	bl	4155d4 <wcrtomb@plt+0x12d64>
  402f44:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  402f48:	ldrb	w28, [x8, #2228]
  402f4c:	ldrb	w9, [x19, #64]
  402f50:	mov	x24, x0
  402f54:	mov	x1, x27
  402f58:	strb	w28, [x0]
  402f5c:	ldrb	w8, [x20, #1]
  402f60:	mov	x2, x25
  402f64:	add	x26, x0, x8
  402f68:	orr	w8, w9, w8
  402f6c:	mov	x0, x26
  402f70:	strb	w8, [x19, #64]
  402f74:	bl	402210 <memcpy@plt>
  402f78:	ldrb	w8, [x20, #2]
  402f7c:	cbz	w8, 402f84 <wcrtomb@plt+0x714>
  402f80:	strb	w28, [x26, x25]
  402f84:	mov	x0, x22
  402f88:	mov	x1, x24
  402f8c:	mov	x2, x23
  402f90:	bl	4084ec <wcrtomb@plt+0x5c7c>
  402f94:	mov	x0, x24
  402f98:	bl	402620 <free@plt>
  402f9c:	ldr	x25, [sp, #24]
  402fa0:	b	402fc0 <wcrtomb@plt+0x750>
  402fa4:	add	x23, x20, #0x3
  402fa8:	mov	x0, x23
  402fac:	bl	402270 <strlen@plt>
  402fb0:	mov	x2, x0
  402fb4:	mov	x0, x22
  402fb8:	mov	x1, x23
  402fbc:	bl	4084ec <wcrtomb@plt+0x5c7c>
  402fc0:	mov	x0, x22
  402fc4:	bl	408e14 <wcrtomb@plt+0x65a4>
  402fc8:	mov	x0, x20
  402fcc:	bl	40d4e0 <wcrtomb@plt+0xac70>
  402fd0:	mov	w3, #0x1                   	// #1
  402fd4:	mov	x0, xzr
  402fd8:	mov	x1, xzr
  402fdc:	mov	x2, x25
  402fe0:	bl	40b0dc <wcrtomb@plt+0x886c>
  402fe4:	mov	x0, x21
  402fe8:	bl	402620 <free@plt>
  402fec:	mov	x0, x19
  402ff0:	ldp	x20, x19, [sp, #288]
  402ff4:	ldp	x22, x21, [sp, #272]
  402ff8:	ldp	x24, x23, [sp, #256]
  402ffc:	ldp	x26, x25, [sp, #240]
  403000:	ldp	x28, x27, [sp, #224]
  403004:	ldp	x29, x30, [sp, #208]
  403008:	add	sp, sp, #0x130
  40300c:	ret
  403010:	bl	415898 <wcrtomb@plt+0x13028>
  403014:	mov	w0, #0x2                   	// #2
  403018:	bl	402290 <exit@plt>
  40301c:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  403020:	mov	x3, x0
  403024:	add	x2, x2, #0x1b7
  403028:	mov	w0, wzr
  40302c:	mov	w1, wzr
  403030:	bl	4022a0 <error@plt>
  403034:	bl	402560 <abort@plt>
  403038:	sub	sp, sp, #0x100
  40303c:	stp	x29, x30, [sp, #160]
  403040:	stp	x28, x27, [sp, #176]
  403044:	stp	x26, x25, [sp, #192]
  403048:	stp	x24, x23, [sp, #208]
  40304c:	stp	x22, x21, [sp, #224]
  403050:	stp	x20, x19, [sp, #240]
  403054:	ldr	x20, [x0, #8]
  403058:	adrp	x21, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  40305c:	ldrb	w23, [x21, #2228]
  403060:	mov	x22, x0
  403064:	mov	x0, x20
  403068:	add	x29, sp, #0xa0
  40306c:	mov	x28, x4
  403070:	str	x3, [sp, #8]
  403074:	mov	x19, x2
  403078:	mov	x25, x1
  40307c:	bl	40b0cc <wcrtomb@plt+0x885c>
  403080:	str	x0, [sp, #24]
  403084:	mov	x0, x20
  403088:	bl	40b0d4 <wcrtomb@plt+0x8864>
  40308c:	cmp	x19, #0x1
  403090:	stur	x25, [x29, #-8]
  403094:	b.lt	403558 <wcrtomb@plt+0xce8>  // b.tstop
  403098:	eor	w8, w0, #0x1
  40309c:	add	x26, x25, x19
  4030a0:	str	w8, [sp, #20]
  4030a4:	add	x8, x22, #0x20
  4030a8:	mov	x27, x25
  4030ac:	str	w23, [sp, #44]
  4030b0:	stur	x8, [x29, #-56]
  4030b4:	str	x26, [sp, #48]
  4030b8:	str	x25, [sp, #32]
  4030bc:	stur	x28, [x29, #-72]
  4030c0:	b	4030e8 <wcrtomb@plt+0x878>
  4030c4:	ldr	x20, [sp, #56]
  4030c8:	ldr	x25, [sp, #32]
  4030cc:	ldur	x28, [x29, #-72]
  4030d0:	cmp	x26, x20
  4030d4:	b.cc	40359c <wcrtomb@plt+0xd2c>  // b.lo, b.ul, b.last
  4030d8:	ldr	x26, [sp, #48]
  4030dc:	mov	x27, x20
  4030e0:	cmp	x20, x26
  4030e4:	b.cs	403558 <wcrtomb@plt+0xce8>  // b.hs, b.nlast
  4030e8:	cbz	x28, 403340 <wcrtomb@plt+0xad0>
  4030ec:	mov	x20, x26
  4030f0:	mov	x23, x28
  4030f4:	ldr	x8, [x22, #24]
  4030f8:	cbz	x8, 4030d8 <wcrtomb@plt+0x868>
  4030fc:	mvn	x8, x27
  403100:	sub	x9, x20, x23
  403104:	mov	x28, xzr
  403108:	stp	xzr, x23, [sp, #72]
  40310c:	sub	x19, x23, x27
  403110:	add	x24, x20, x8
  403114:	sub	x23, x9, #0x1
  403118:	sub	x8, x20, #0x1
  40311c:	mov	x26, x20
  403120:	str	x9, [sp, #64]
  403124:	stur	x8, [x29, #-64]
  403128:	str	x20, [sp, #56]
  40312c:	b	403148 <wcrtomb@plt+0x8d8>
  403130:	mov	x26, x9
  403134:	str	x8, [sp, #72]
  403138:	ldr	x8, [x22, #24]
  40313c:	add	x28, x28, #0x1
  403140:	cmp	x28, x8
  403144:	b.cs	4030c4 <wcrtomb@plt+0x854>  // b.hs, b.nlast
  403148:	ldr	x8, [x22, #16]
  40314c:	lsl	x20, x28, #6
  403150:	ldur	x5, [x29, #-56]
  403154:	mov	x1, x27
  403158:	add	x8, x8, x20
  40315c:	ldrb	w9, [x8, #56]
  403160:	mov	x2, x24
  403164:	mov	x3, x19
  403168:	mov	x4, x23
  40316c:	and	w9, w9, #0xffffffbf
  403170:	strb	w9, [x8, #56]
  403174:	ldr	x8, [x22, #16]
  403178:	ldrb	w9, [x21, #2228]
  40317c:	add	x8, x8, x20
  403180:	ldrb	w10, [x8, #56]
  403184:	cmp	w9, #0xa
  403188:	cset	w9, eq  // eq = none
  40318c:	bfi	w10, w9, #7, #1
  403190:	strb	w10, [x8, #56]
  403194:	ldr	x8, [x22, #16]
  403198:	add	x0, x8, x20
  40319c:	bl	41ca60 <_obstack_memory_used@@Base+0x47d0>
  4031a0:	cmn	x0, #0x2
  4031a4:	b.le	4035a8 <wcrtomb@plt+0xd38>
  4031a8:	tbnz	x0, #63, 403138 <wcrtomb@plt+0x8c8>
  4031ac:	add	x25, x27, x0
  4031b0:	cmp	x25, x26
  4031b4:	b.hi	403138 <wcrtomb@plt+0x8c8>  // b.pmore
  4031b8:	ldr	x8, [x22, #48]
  4031bc:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  4031c0:	ldrb	w10, [x9, #3516]
  4031c4:	ldr	x8, [x8]
  4031c8:	sub	x21, x8, x0
  4031cc:	ldur	x8, [x29, #-72]
  4031d0:	cbz	x8, 4031e4 <wcrtomb@plt+0x974>
  4031d4:	cbnz	w10, 4031e4 <wcrtomb@plt+0x974>
  4031d8:	mov	x8, x21
  4031dc:	mov	x9, x25
  4031e0:	b	403210 <wcrtomb@plt+0x9a0>
  4031e4:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  4031e8:	ldrb	w11, [x8, #3517]
  4031ec:	ldr	x8, [sp, #64]
  4031f0:	ldr	x9, [sp, #80]
  4031f4:	orr	w12, w11, w10
  4031f8:	cbz	w12, 403210 <wcrtomb@plt+0x9a0>
  4031fc:	cmp	x21, x23
  403200:	b.ne	40323c <wcrtomb@plt+0x9cc>  // b.any
  403204:	ldr	x8, [sp, #64]
  403208:	ldr	x9, [sp, #80]
  40320c:	cbz	w11, 40323c <wcrtomb@plt+0x9cc>
  403210:	ldur	x10, [x29, #-72]
  403214:	adrp	x21, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  403218:	cbz	x10, 403560 <wcrtomb@plt+0xcf0>
  40321c:	cmp	x9, x26
  403220:	b.cc	403130 <wcrtomb@plt+0x8c0>  // b.lo, b.ul, b.last
  403224:	ldr	x10, [sp, #72]
  403228:	cmp	x8, x10
  40322c:	b.ls	403138 <wcrtomb@plt+0x8c8>  // b.plast
  403230:	cmp	x9, x26
  403234:	b.eq	403130 <wcrtomb@plt+0x8c0>  // b.none
  403238:	b	403138 <wcrtomb@plt+0x8c8>
  40323c:	cbz	w10, 403244 <wcrtomb@plt+0x9d4>
  403240:	cbz	w11, 403254 <wcrtomb@plt+0x9e4>
  403244:	adrp	x21, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  403248:	b	403138 <wcrtomb@plt+0x8c8>
  40324c:	cmp	x25, x26
  403250:	b.hi	403244 <wcrtomb@plt+0x9d4>  // b.pmore
  403254:	ldur	x1, [x29, #-64]
  403258:	add	x0, x25, x21
  40325c:	bl	4099c8 <wcrtomb@plt+0x7158>
  403260:	cbnz	x0, 403278 <wcrtomb@plt+0xa08>
  403264:	ldur	x2, [x29, #-64]
  403268:	mov	x0, x27
  40326c:	mov	x1, x25
  403270:	bl	409a6c <wcrtomb@plt+0x71fc>
  403274:	cbz	x0, 4031d8 <wcrtomb@plt+0x968>
  403278:	cbz	x21, 4032cc <wcrtomb@plt+0xa5c>
  40327c:	ldr	x8, [x22, #16]
  403280:	ldr	x10, [sp, #80]
  403284:	ldur	x4, [x29, #-56]
  403288:	sub	x3, x25, x27
  40328c:	add	x8, x8, x20
  403290:	ldrb	w9, [x8, #56]
  403294:	mvn	x10, x10
  403298:	mov	x1, x27
  40329c:	orr	w9, w9, #0x40
  4032a0:	strb	w9, [x8, #56]
  4032a4:	ldr	x8, [x22, #16]
  4032a8:	add	x9, x21, x25
  4032ac:	add	x2, x10, x9
  4032b0:	add	x0, x8, x20
  4032b4:	bl	41c710 <_obstack_memory_used@@Base+0x4480>
  4032b8:	cmn	x0, #0x2
  4032bc:	b.le	4035a8 <wcrtomb@plt+0xd38>
  4032c0:	mov	x21, x0
  4032c4:	cmp	x0, #0x0
  4032c8:	b.gt	40324c <wcrtomb@plt+0x9dc>
  4032cc:	ldur	x8, [x29, #-64]
  4032d0:	cmp	x25, x8
  4032d4:	b.eq	403244 <wcrtomb@plt+0x9d4>  // b.none
  4032d8:	ldr	x8, [x22, #16]
  4032dc:	ldur	x5, [x29, #-56]
  4032e0:	mov	x1, x27
  4032e4:	mov	x2, x24
  4032e8:	add	x8, x8, x20
  4032ec:	ldrb	w9, [x8, #56]
  4032f0:	and	w9, w9, #0xffffffbf
  4032f4:	strb	w9, [x8, #56]
  4032f8:	ldr	x8, [x22, #16]
  4032fc:	add	x9, x25, #0x1
  403300:	sub	x3, x9, x27
  403304:	mvn	x9, x9
  403308:	add	x0, x8, x20
  40330c:	ldr	x8, [sp, #56]
  403310:	add	x4, x8, x9
  403314:	bl	41ca60 <_obstack_memory_used@@Base+0x47d0>
  403318:	tbnz	x0, #63, 403330 <wcrtomb@plt+0xac0>
  40331c:	ldr	x8, [x22, #48]
  403320:	add	x25, x27, x0
  403324:	ldr	x8, [x8]
  403328:	sub	x21, x8, x0
  40332c:	b	40324c <wcrtomb@plt+0x9dc>
  403330:	cmn	x0, #0x1
  403334:	adrp	x21, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  403338:	b.eq	403138 <wcrtomb@plt+0x8c8>  // b.none
  40333c:	b	4035a8 <wcrtomb@plt+0xd38>
  403340:	stur	xzr, [x29, #-40]
  403344:	sturb	wzr, [x29, #-44]
  403348:	ldr	x0, [x22]
  40334c:	cbz	x0, 403454 <wcrtomb@plt+0xbe4>
  403350:	ldrb	w8, [x22, #64]
  403354:	sub	x21, x26, x27
  403358:	sub	x3, x29, #0x20
  40335c:	mov	w4, #0x1                   	// #1
  403360:	sub	x1, x27, x8
  403364:	add	x2, x21, x8
  403368:	bl	409598 <wcrtomb@plt+0x6d28>
  40336c:	tbnz	x0, #63, 403558 <wcrtomb@plt+0xce8>
  403370:	ldr	w1, [sp, #44]
  403374:	add	x19, x27, x0
  403378:	mov	x20, x0
  40337c:	sub	x2, x19, x25
  403380:	mov	x0, x25
  403384:	bl	402650 <memrchr@plt>
  403388:	ldur	x23, [x29, #-32]
  40338c:	ldr	x24, [x22, #56]
  403390:	ldr	w9, [sp, #20]
  403394:	cmp	x0, #0x0
  403398:	csinc	x8, x25, x0, eq  // eq = none
  40339c:	cmp	x23, x24
  4033a0:	str	x8, [sp, #80]
  4033a4:	cset	w8, lt  // lt = tstop
  4033a8:	orr	w8, w8, w9
  4033ac:	mov	x0, x19
  4033b0:	tbnz	w8, #0, 4033e4 <wcrtomb@plt+0xb74>
  4033b4:	ldr	x8, [sp, #80]
  4033b8:	mov	w9, #0x10                  	// #16
  4033bc:	mov	x0, x19
  4033c0:	sub	x8, x19, x8
  4033c4:	cmp	x8, #0x10
  4033c8:	csel	x8, x8, x9, gt
  4033cc:	cmp	x8, x20, lsr #2
  4033d0:	b.lt	4033e4 <wcrtomb@plt+0xb74>  // b.tstop
  4033d4:	cmp	x8, x21, asr #2
  4033d8:	mov	x0, x26
  4033dc:	b.ge	4033e4 <wcrtomb@plt+0xb74>  // b.tcont
  4033e0:	add	x0, x27, x8, lsl #2
  4033e4:	ldr	w1, [sp, #44]
  4033e8:	sub	x2, x26, x0
  4033ec:	bl	4026d0 <memchr@plt>
  4033f0:	cmp	x0, #0x0
  4033f4:	csinc	x20, x26, x0, eq  // eq = none
  4033f8:	cmp	x23, x24
  4033fc:	b.ge	403464 <wcrtomb@plt+0xbf4>  // b.tcont
  403400:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  403404:	add	x9, x9, #0x8b8
  403408:	ldrb	w8, [x9]
  40340c:	ldrb	w9, [x9, #2]
  403410:	ldr	x23, [sp, #80]
  403414:	adrp	x21, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  403418:	eor	w8, w8, #0x1
  40341c:	orr	w8, w8, w9
  403420:	cbnz	w8, 40356c <wcrtomb@plt+0xcfc>
  403424:	ldur	x8, [x29, #-8]
  403428:	cmp	x8, x23
  40342c:	b.cs	403434 <wcrtomb@plt+0xbc4>  // b.hs, b.nlast
  403430:	stur	x23, [x29, #-8]
  403434:	sub	x0, x29, #0x8
  403438:	mov	x1, xzr
  40343c:	mov	x2, x19
  403440:	mov	x3, x26
  403444:	bl	40974c <wcrtomb@plt+0x6edc>
  403448:	cbz	x0, 40356c <wcrtomb@plt+0xcfc>
  40344c:	ldur	x27, [x29, #-8]
  403450:	b	4034dc <wcrtomb@plt+0xc6c>
  403454:	mov	x20, x26
  403458:	ldr	x0, [sp, #24]
  40345c:	cbnz	x0, 403474 <wcrtomb@plt+0xc04>
  403460:	b	4034d8 <wcrtomb@plt+0xc68>
  403464:	ldr	x27, [sp, #80]
  403468:	adrp	x21, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  40346c:	ldr	x0, [sp, #24]
  403470:	cbz	x0, 4034d8 <wcrtomb@plt+0xc68>
  403474:	sub	x4, x29, #0x28
  403478:	mov	x1, x27
  40347c:	mov	x2, x20
  403480:	mov	w3, wzr
  403484:	mov	x5, xzr
  403488:	bl	40b0c0 <wcrtomb@plt+0x8850>
  40348c:	cbz	x0, 4030d8 <wcrtomb@plt+0x868>
  403490:	mov	x19, x0
  403494:	cmp	x0, x20
  403498:	b.eq	4030d8 <wcrtomb@plt+0x868>  // b.none
  40349c:	ldur	x8, [x29, #-40]
  4034a0:	ldr	w20, [sp, #44]
  4034a4:	cbz	x8, 4034bc <wcrtomb@plt+0xc4c>
  4034a8:	sub	x2, x19, x25
  4034ac:	mov	x0, x25
  4034b0:	mov	w1, w20
  4034b4:	bl	402650 <memrchr@plt>
  4034b8:	add	x27, x0, #0x1
  4034bc:	sub	x2, x26, x19
  4034c0:	mov	x0, x19
  4034c4:	mov	w1, w20
  4034c8:	bl	4026d0 <memchr@plt>
  4034cc:	cmp	x0, #0x0
  4034d0:	csinc	x20, x26, x0, eq  // eq = none
  4034d4:	stur	xzr, [x29, #-40]
  4034d8:	mov	x23, x27
  4034dc:	ldr	x0, [x22, #8]
  4034e0:	sub	x4, x29, #0x28
  4034e4:	sub	x5, x29, #0x2c
  4034e8:	mov	x1, x27
  4034ec:	mov	x2, x20
  4034f0:	mov	w3, wzr
  4034f4:	bl	40b0c0 <wcrtomb@plt+0x8850>
  4034f8:	cbz	x0, 4030d8 <wcrtomb@plt+0x868>
  4034fc:	mov	x19, x0
  403500:	cmp	x0, x20
  403504:	b.eq	4030d8 <wcrtomb@plt+0x868>  // b.none
  403508:	ldur	x8, [x29, #-40]
  40350c:	ldr	w20, [sp, #44]
  403510:	cbz	x8, 403528 <wcrtomb@plt+0xcb8>
  403514:	sub	x2, x19, x25
  403518:	mov	x0, x25
  40351c:	mov	w1, w20
  403520:	bl	402650 <memrchr@plt>
  403524:	add	x23, x0, #0x1
  403528:	sub	x2, x26, x19
  40352c:	mov	x0, x19
  403530:	mov	w1, w20
  403534:	bl	4026d0 <memchr@plt>
  403538:	ldurb	w8, [x29, #-44]
  40353c:	cmp	x0, #0x0
  403540:	csinc	x20, x26, x0, eq  // eq = none
  403544:	cbz	w8, 40356c <wcrtomb@plt+0xcfc>
  403548:	mov	x27, x23
  40354c:	ldr	x8, [x22, #24]
  403550:	cbnz	x8, 4030fc <wcrtomb@plt+0x88c>
  403554:	b	4030d8 <wcrtomb@plt+0x868>
  403558:	mov	x0, #0xffffffffffffffff    	// #-1
  40355c:	b	40357c <wcrtomb@plt+0xd0c>
  403560:	ldr	x25, [sp, #32]
  403564:	ldr	x20, [sp, #56]
  403568:	mov	x23, x27
  40356c:	sub	x9, x20, x23
  403570:	ldr	x8, [sp, #8]
  403574:	sub	x0, x23, x25
  403578:	str	x9, [x8]
  40357c:	ldp	x20, x19, [sp, #240]
  403580:	ldp	x22, x21, [sp, #224]
  403584:	ldp	x24, x23, [sp, #208]
  403588:	ldp	x26, x25, [sp, #192]
  40358c:	ldp	x28, x27, [sp, #176]
  403590:	ldp	x29, x30, [sp, #160]
  403594:	add	sp, sp, #0x100
  403598:	ret
  40359c:	ldr	x9, [sp, #72]
  4035a0:	mov	x23, x26
  4035a4:	b	403570 <wcrtomb@plt+0xd00>
  4035a8:	bl	415898 <wcrtomb@plt+0x13028>
  4035ac:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4035b0:	ldr	x10, [x8, #1128]
  4035b4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4035b8:	ldr	x8, [x8, #1136]
  4035bc:	cmp	x10, #0x2
  4035c0:	b.cc	4035ec <wcrtomb@plt+0xd7c>  // b.lo, b.ul, b.last
  4035c4:	add	x11, x8, #0x18
  4035c8:	mov	w9, #0x1                   	// #1
  4035cc:	ldr	x12, [x11]
  4035d0:	cmp	x12, x0
  4035d4:	b.hi	4035f0 <wcrtomb@plt+0xd80>  // b.pmore
  4035d8:	add	x9, x9, #0x1
  4035dc:	cmp	x9, x10
  4035e0:	add	x11, x11, #0x10
  4035e4:	b.cc	4035cc <wcrtomb@plt+0xd5c>  // b.lo, b.ul, b.last
  4035e8:	b	4035f0 <wcrtomb@plt+0xd80>
  4035ec:	mov	w9, #0x1                   	// #1
  4035f0:	add	x8, x8, x9, lsl #4
  4035f4:	ldur	x9, [x8, #-8]
  4035f8:	sub	x9, x0, x9
  4035fc:	add	x9, x9, #0x1
  403600:	str	x9, [x1]
  403604:	ldur	x0, [x8, #-16]
  403608:	ret
  40360c:	stp	x29, x30, [sp, #-48]!
  403610:	stp	x20, x19, [sp, #32]
  403614:	mov	w19, w0
  403618:	stp	x22, x21, [sp, #16]
  40361c:	mov	x29, sp
  403620:	cbnz	w0, 4037a0 <wcrtomb@plt+0xf30>
  403624:	adrp	x1, 428000 <_obstack_memory_used@@Base+0xfd70>
  403628:	add	x1, x1, #0xd90
  40362c:	mov	w2, #0x5                   	// #5
  403630:	mov	x0, xzr
  403634:	bl	402740 <dcgettext@plt>
  403638:	mov	x20, x0
  40363c:	bl	411e60 <wcrtomb@plt+0xf5f0>
  403640:	mov	x1, x0
  403644:	mov	x0, x20
  403648:	bl	4027c0 <printf@plt>
  40364c:	adrp	x1, 428000 <_obstack_memory_used@@Base+0xfd70>
  403650:	add	x1, x1, #0xde1
  403654:	mov	w2, #0x5                   	// #5
  403658:	mov	x0, xzr
  40365c:	bl	402740 <dcgettext@plt>
  403660:	bl	4027c0 <printf@plt>
  403664:	adrp	x1, 428000 <_obstack_memory_used@@Base+0xfd70>
  403668:	add	x1, x1, #0xe04
  40366c:	mov	w2, #0x5                   	// #5
  403670:	mov	x0, xzr
  403674:	bl	402740 <dcgettext@plt>
  403678:	mov	x20, x0
  40367c:	bl	411e60 <wcrtomb@plt+0xf5f0>
  403680:	mov	x1, x0
  403684:	mov	x0, x20
  403688:	bl	4027c0 <printf@plt>
  40368c:	adrp	x1, 428000 <_obstack_memory_used@@Base+0xfd70>
  403690:	add	x1, x1, #0xe95
  403694:	mov	w2, #0x5                   	// #5
  403698:	mov	x0, xzr
  40369c:	bl	402740 <dcgettext@plt>
  4036a0:	bl	4027c0 <printf@plt>
  4036a4:	adrp	x1, 428000 <_obstack_memory_used@@Base+0xfd70>
  4036a8:	add	x1, x1, #0xf92
  4036ac:	mov	w2, #0x5                   	// #5
  4036b0:	mov	x0, xzr
  4036b4:	bl	402740 <dcgettext@plt>
  4036b8:	bl	4027c0 <printf@plt>
  4036bc:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  4036c0:	add	x1, x1, #0x137
  4036c4:	mov	w2, #0x5                   	// #5
  4036c8:	mov	x0, xzr
  4036cc:	bl	402740 <dcgettext@plt>
  4036d0:	bl	4027c0 <printf@plt>
  4036d4:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  4036d8:	add	x1, x1, #0x22f
  4036dc:	mov	w2, #0x5                   	// #5
  4036e0:	mov	x0, xzr
  4036e4:	bl	402740 <dcgettext@plt>
  4036e8:	bl	4027c0 <printf@plt>
  4036ec:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  4036f0:	add	x1, x1, #0x405
  4036f4:	mov	w2, #0x5                   	// #5
  4036f8:	mov	x0, xzr
  4036fc:	bl	402740 <dcgettext@plt>
  403700:	bl	4027c0 <printf@plt>
  403704:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  403708:	add	x1, x1, #0x54c
  40370c:	mov	w2, #0x5                   	// #5
  403710:	mov	x0, xzr
  403714:	bl	402740 <dcgettext@plt>
  403718:	bl	4027c0 <printf@plt>
  40371c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  403720:	add	x1, x1, #0x703
  403724:	mov	w2, #0x5                   	// #5
  403728:	mov	x0, xzr
  40372c:	bl	402740 <dcgettext@plt>
  403730:	bl	4027c0 <printf@plt>
  403734:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  403738:	add	x1, x1, #0x814
  40373c:	mov	w2, #0x5                   	// #5
  403740:	mov	x0, xzr
  403744:	bl	402740 <dcgettext@plt>
  403748:	bl	4027c0 <printf@plt>
  40374c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  403750:	add	x1, x1, #0x96a
  403754:	mov	w2, #0x5                   	// #5
  403758:	mov	x0, xzr
  40375c:	bl	402740 <dcgettext@plt>
  403760:	bl	4027c0 <printf@plt>
  403764:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  403768:	add	x1, x1, #0xa3a
  40376c:	mov	w2, #0x5                   	// #5
  403770:	mov	x0, xzr
  403774:	bl	402740 <dcgettext@plt>
  403778:	bl	4027c0 <printf@plt>
  40377c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  403780:	add	x1, x1, #0xb5e
  403784:	mov	w2, #0x5                   	// #5
  403788:	mov	x0, xzr
  40378c:	bl	402740 <dcgettext@plt>
  403790:	bl	4027c0 <printf@plt>
  403794:	bl	41550c <wcrtomb@plt+0x12c9c>
  403798:	mov	w0, w19
  40379c:	bl	402290 <exit@plt>
  4037a0:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4037a4:	ldr	x20, [x22, #1072]
  4037a8:	adrp	x1, 428000 <_obstack_memory_used@@Base+0xfd70>
  4037ac:	add	x1, x1, #0xd90
  4037b0:	mov	w2, #0x5                   	// #5
  4037b4:	mov	x0, xzr
  4037b8:	bl	402740 <dcgettext@plt>
  4037bc:	mov	x21, x0
  4037c0:	bl	411e60 <wcrtomb@plt+0xf5f0>
  4037c4:	mov	x2, x0
  4037c8:	mov	x0, x20
  4037cc:	mov	x1, x21
  4037d0:	bl	402820 <fprintf@plt>
  4037d4:	ldr	x20, [x22, #1072]
  4037d8:	adrp	x1, 428000 <_obstack_memory_used@@Base+0xfd70>
  4037dc:	add	x1, x1, #0xdba
  4037e0:	mov	w2, #0x5                   	// #5
  4037e4:	mov	x0, xzr
  4037e8:	bl	402740 <dcgettext@plt>
  4037ec:	mov	x21, x0
  4037f0:	bl	411e60 <wcrtomb@plt+0xf5f0>
  4037f4:	mov	x2, x0
  4037f8:	mov	x0, x20
  4037fc:	mov	x1, x21
  403800:	bl	402820 <fprintf@plt>
  403804:	mov	w0, w19
  403808:	bl	402290 <exit@plt>
  40380c:	sub	sp, sp, #0x70
  403810:	stp	x29, x30, [sp, #16]
  403814:	stp	x28, x27, [sp, #32]
  403818:	stp	x26, x25, [sp, #48]
  40381c:	stp	x24, x23, [sp, #64]
  403820:	stp	x22, x21, [sp, #80]
  403824:	stp	x20, x19, [sp, #96]
  403828:	stp	x1, xzr, [sp]
  40382c:	ldr	x21, [x1]
  403830:	ldr	x22, [x0]
  403834:	add	x29, sp, #0x10
  403838:	add	x8, x21, #0x1
  40383c:	lsr	x9, x8, #62
  403840:	cbnz	x9, 403950 <wcrtomb@plt+0x10e0>
  403844:	mov	x20, x0
  403848:	lsl	x0, x8, #1
  40384c:	bl	4155d4 <wcrtomb@plt+0x12d64>
  403850:	mov	x23, x0
  403854:	mov	x24, x0
  403858:	cbz	x21, 403918 <wcrtomb@plt+0x10a8>
  40385c:	adrp	x26, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  403860:	mov	x28, #0x441                 	// #1089
  403864:	add	x26, x26, #0x8b8
  403868:	mov	w27, #0x1                   	// #1
  40386c:	movk	x28, #0x580, lsl #48
  403870:	mov	w19, #0x5c                  	// #92
  403874:	mov	x24, x23
  403878:	b	40389c <wcrtomb@plt+0x102c>
  40387c:	mov	x0, x24
  403880:	mov	x1, x22
  403884:	mov	x2, x25
  403888:	bl	402210 <memcpy@plt>
  40388c:	add	x24, x24, x25
  403890:	subs	x21, x21, x25
  403894:	add	x22, x22, x25
  403898:	b.eq	403918 <wcrtomb@plt+0x10a8>  // b.none
  40389c:	ldrb	w8, [x22]
  4038a0:	add	x8, x26, x8
  4038a4:	ldrsb	x25, [x8, #3]
  4038a8:	cmn	x25, #0x2
  4038ac:	b.ne	4038c4 <wcrtomb@plt+0x1054>  // b.any
  4038b0:	add	x2, sp, #0x8
  4038b4:	mov	x0, x22
  4038b8:	mov	x1, x21
  4038bc:	bl	417e8c <wcrtomb@plt+0x1561c>
  4038c0:	mov	x25, x0
  4038c4:	cmp	x25, #0x1
  4038c8:	b.eq	4038e8 <wcrtomb@plt+0x1078>  // b.none
  4038cc:	cmn	x25, #0x1
  4038d0:	b.eq	4038e4 <wcrtomb@plt+0x1074>  // b.none
  4038d4:	cmn	x25, #0x2
  4038d8:	b.ne	40387c <wcrtomb@plt+0x100c>  // b.any
  4038dc:	mov	x25, x21
  4038e0:	b	40387c <wcrtomb@plt+0x100c>
  4038e4:	str	xzr, [sp, #8]
  4038e8:	ldrb	w8, [x22]
  4038ec:	sub	w9, w8, #0x24
  4038f0:	cmp	w9, #0x3a
  4038f4:	b.hi	40390c <wcrtomb@plt+0x109c>  // b.pmore
  4038f8:	lsl	x9, x27, x9
  4038fc:	tst	x9, x28
  403900:	b.eq	40390c <wcrtomb@plt+0x109c>  // b.none
  403904:	strb	w19, [x24], #1
  403908:	ldrb	w8, [x22]
  40390c:	strb	w8, [x24], #1
  403910:	mov	w25, #0x1                   	// #1
  403914:	b	403890 <wcrtomb@plt+0x1020>
  403918:	ldr	x0, [x20]
  40391c:	bl	402620 <free@plt>
  403920:	ldr	x9, [sp]
  403924:	sub	x8, x24, x23
  403928:	str	x23, [x20]
  40392c:	str	x8, [x9]
  403930:	ldp	x20, x19, [sp, #96]
  403934:	ldp	x22, x21, [sp, #80]
  403938:	ldp	x24, x23, [sp, #64]
  40393c:	ldp	x26, x25, [sp, #48]
  403940:	ldp	x28, x27, [sp, #32]
  403944:	ldp	x29, x30, [sp, #16]
  403948:	add	sp, sp, #0x70
  40394c:	ret
  403950:	bl	415898 <wcrtomb@plt+0x13028>
  403954:	sub	sp, sp, #0x1c0
  403958:	stp	x29, x30, [sp, #352]
  40395c:	add	x29, sp, #0x160
  403960:	adrp	x13, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403964:	mov	w8, #0x2                   	// #2
  403968:	stp	x28, x27, [sp, #368]
  40396c:	stp	x26, x25, [sp, #384]
  403970:	stp	x24, x23, [sp, #400]
  403974:	stp	x22, x21, [sp, #416]
  403978:	stp	x20, x19, [sp, #432]
  40397c:	stp	xzr, xzr, [x29, #-168]
  403980:	adrp	x11, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  403984:	mov	w9, #0xa                   	// #10
  403988:	adrp	x12, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40398c:	str	w8, [x13, #960]
  403990:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  403994:	mov	x19, x1
  403998:	strb	w9, [x11, #2228]
  40399c:	mov	x9, #0xffffffffffffffff    	// #-1
  4039a0:	str	x8, [x12, #1152]
  4039a4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4039a8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  4039ac:	mov	w20, w0
  4039b0:	adrp	x14, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4039b4:	mov	w10, #0x1                   	// #1
  4039b8:	adrp	x11, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4039bc:	str	x9, [x8, #1168]
  4039c0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4039c4:	add	x1, x1, #0xb5d
  4039c8:	mov	w0, #0x6                   	// #6
  4039cc:	strb	w10, [x14, #1144]
  4039d0:	str	x9, [x11, #1160]
  4039d4:	stp	x9, xzr, [sp, #168]
  4039d8:	strb	wzr, [x8, #1176]
  4039dc:	bl	402850 <setlocale@plt>
  4039e0:	adrp	x21, 429000 <_obstack_memory_used@@Base+0x10d70>
  4039e4:	add	x21, x21, #0xd67
  4039e8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  4039ec:	add	x1, x1, #0xc68
  4039f0:	mov	x0, x21
  4039f4:	bl	402430 <bindtextdomain@plt>
  4039f8:	mov	x0, x21
  4039fc:	bl	4025e0 <textdomain@plt>
  403a00:	adrp	x0, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  403a04:	add	x0, x0, #0x8b8
  403a08:	bl	411030 <wcrtomb@plt+0xe7c0>
  403a0c:	adrp	x0, 405000 <wcrtomb@plt+0x2790>
  403a10:	add	x0, x0, #0xbc
  403a14:	bl	428100 <_obstack_memory_used@@Base+0xfe70>
  403a18:	mov	x0, xzr
  403a1c:	bl	40a044 <wcrtomb@plt+0x77d4>
  403a20:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x10d70>
  403a24:	add	x0, x0, #0xc7a
  403a28:	bl	4027f0 <getenv@plt>
  403a2c:	cbz	x0, 403af0 <wcrtomb@plt+0x1280>
  403a30:	ldrb	w8, [x0]
  403a34:	mov	x22, x0
  403a38:	cbz	w8, 403af0 <wcrtomb@plt+0x1280>
  403a3c:	mov	x0, x22
  403a40:	bl	402270 <strlen@plt>
  403a44:	add	x0, x0, #0x1
  403a48:	bl	4155d4 <wcrtomb@plt+0x12d64>
  403a4c:	mov	x9, #0x3e01                	// #15873
  403a50:	mov	x23, x0
  403a54:	mov	x21, xzr
  403a58:	mov	w8, #0x1                   	// #1
  403a5c:	movk	x9, #0x1, lsl #32
  403a60:	mov	x10, x22
  403a64:	mov	x11, x0
  403a68:	b	403a70 <wcrtomb@plt+0x1200>
  403a6c:	add	x10, x10, #0x1
  403a70:	ldrb	w12, [x10]
  403a74:	sub	w13, w12, #0x9
  403a78:	cmp	w13, #0x5
  403a7c:	b.cc	403a6c <wcrtomb@plt+0x11fc>  // b.lo, b.ul, b.last
  403a80:	cmp	w12, #0x20
  403a84:	b.eq	403a6c <wcrtomb@plt+0x11fc>  // b.none
  403a88:	cbz	w12, 403af8 <wcrtomb@plt+0x1288>
  403a8c:	add	x21, x21, #0x1
  403a90:	add	x13, x11, #0x2
  403a94:	mov	x11, x13
  403a98:	and	w13, w12, #0xff
  403a9c:	add	x14, x10, #0x1
  403aa0:	cmp	w13, #0x5c
  403aa4:	sturb	w12, [x11, #-2]
  403aa8:	b.ne	403ac0 <wcrtomb@plt+0x1250>  // b.any
  403aac:	ldrb	w12, [x14]
  403ab0:	cbz	w12, 403ae4 <wcrtomb@plt+0x1274>
  403ab4:	add	x10, x10, #0x2
  403ab8:	sturb	w12, [x11, #-2]
  403abc:	b	403ac4 <wcrtomb@plt+0x1254>
  403ac0:	mov	x10, x14
  403ac4:	ldrb	w12, [x10]
  403ac8:	add	x13, x11, #0x1
  403acc:	cmp	w12, #0x20
  403ad0:	b.hi	403a94 <wcrtomb@plt+0x1224>  // b.pmore
  403ad4:	lsl	x14, x8, x12
  403ad8:	tst	x14, x9
  403adc:	mov	x14, x10
  403ae0:	b.eq	403a94 <wcrtomb@plt+0x1224>  // b.none
  403ae4:	sturb	wzr, [x11, #-1]
  403ae8:	mov	x10, x14
  403aec:	b	403a70 <wcrtomb@plt+0x1200>
  403af0:	str	xzr, [sp]
  403af4:	b	403c14 <wcrtomb@plt+0x13a4>
  403af8:	mov	w8, #0x7fffffff            	// #2147483647
  403afc:	sub	w8, w8, w20
  403b00:	cmp	x21, w8, sxtw
  403b04:	b.hi	4050b8 <wcrtomb@plt+0x2848>  // b.pmore
  403b08:	add	x20, x21, w20, sxtw
  403b0c:	lsl	x8, x20, #3
  403b10:	add	x0, x8, #0x8
  403b14:	bl	4155d4 <wcrtomb@plt+0x12d64>
  403b18:	ldr	x11, [x19]
  403b1c:	mov	x9, x0
  403b20:	mov	x24, x0
  403b24:	mov	x8, xzr
  403b28:	str	x11, [x9], #8
  403b2c:	mov	x11, #0x3e01                	// #15873
  403b30:	mov	w10, #0x1                   	// #1
  403b34:	movk	x11, #0x1, lsl #32
  403b38:	b	403b40 <wcrtomb@plt+0x12d0>
  403b3c:	add	x22, x22, #0x1
  403b40:	ldrb	w12, [x22]
  403b44:	sub	w13, w12, #0x9
  403b48:	cmp	w13, #0x5
  403b4c:	b.cc	403b3c <wcrtomb@plt+0x12cc>  // b.lo, b.ul, b.last
  403b50:	cmp	w12, #0x20
  403b54:	b.eq	403b3c <wcrtomb@plt+0x12cc>  // b.none
  403b58:	cbz	w12, 403bc8 <wcrtomb@plt+0x1358>
  403b5c:	str	x23, [x9, x8, lsl #3]
  403b60:	ldrb	w12, [x22]
  403b64:	add	x8, x8, #0x1
  403b68:	add	x13, x23, #0x2
  403b6c:	mov	x23, x13
  403b70:	and	w13, w12, #0xff
  403b74:	add	x14, x22, #0x1
  403b78:	cmp	w13, #0x5c
  403b7c:	sturb	w12, [x23, #-2]
  403b80:	b.ne	403b98 <wcrtomb@plt+0x1328>  // b.any
  403b84:	ldrb	w12, [x14]
  403b88:	cbz	w12, 403bbc <wcrtomb@plt+0x134c>
  403b8c:	add	x22, x22, #0x2
  403b90:	sturb	w12, [x23, #-2]
  403b94:	b	403b9c <wcrtomb@plt+0x132c>
  403b98:	mov	x22, x14
  403b9c:	ldrb	w12, [x22]
  403ba0:	add	x13, x23, #0x1
  403ba4:	cmp	w12, #0x20
  403ba8:	b.hi	403b6c <wcrtomb@plt+0x12fc>  // b.pmore
  403bac:	lsl	x14, x10, x12
  403bb0:	tst	x14, x11
  403bb4:	mov	x14, x22
  403bb8:	b.eq	403b6c <wcrtomb@plt+0x12fc>  // b.none
  403bbc:	sturb	wzr, [x23, #-1]
  403bc0:	mov	x22, x14
  403bc4:	b	403b40 <wcrtomb@plt+0x12d0>
  403bc8:	add	x8, x9, x8, lsl #3
  403bcc:	add	x9, x19, #0x8
  403bd0:	ldr	x10, [x9], #8
  403bd4:	str	x10, [x8], #8
  403bd8:	cbnz	x10, 403bd0 <wcrtomb@plt+0x1360>
  403bdc:	cbz	w21, 403c0c <wcrtomb@plt+0x139c>
  403be0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  403be4:	add	x1, x1, #0xc87
  403be8:	mov	w2, #0x5                   	// #5
  403bec:	mov	x0, xzr
  403bf0:	str	x21, [sp]
  403bf4:	bl	402740 <dcgettext@plt>
  403bf8:	mov	x2, x0
  403bfc:	mov	w0, wzr
  403c00:	mov	w1, wzr
  403c04:	bl	4022a0 <error@plt>
  403c08:	b	403c10 <wcrtomb@plt+0x13a0>
  403c0c:	str	xzr, [sp]
  403c10:	mov	x19, x24
  403c14:	adrp	x23, 428000 <_obstack_memory_used@@Base+0xfd70>
  403c18:	adrp	x24, 428000 <_obstack_memory_used@@Base+0xfd70>
  403c1c:	mov	w8, #0xffffffff            	// #-1
  403c20:	adrp	x25, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403c24:	add	x23, x23, #0x5c8
  403c28:	add	x24, x24, #0x608
  403c2c:	sub	x28, x29, #0x98
  403c30:	adrp	x21, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403c34:	stp	wzr, wzr, [sp, #28]
  403c38:	str	w8, [sp, #36]
  403c3c:	b	403c54 <wcrtomb@plt+0x13e4>
  403c40:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x10d70>
  403c44:	add	x0, x0, #0xceb
  403c48:	ldr	w1, [sp, #36]
  403c4c:	bl	4050d0 <wcrtomb@plt+0x2860>
  403c50:	str	w0, [sp, #36]
  403c54:	ldr	w27, [x25, #1088]
  403c58:	mov	w0, w20
  403c5c:	mov	x1, x19
  403c60:	mov	x2, x23
  403c64:	mov	x3, x24
  403c68:	mov	x4, xzr
  403c6c:	bl	4025f0 <getopt_long@plt>
  403c70:	sub	w8, w0, #0x30
  403c74:	mov	w26, w0
  403c78:	cmp	w8, #0x9
  403c7c:	b.hi	403d34 <wcrtomb@plt+0x14c4>  // b.pmore
  403c80:	mov	x8, xzr
  403c84:	mov	w22, w27
  403c88:	str	w22, [x21, #880]
  403c8c:	ldr	w22, [x25, #1088]
  403c90:	mov	w0, w20
  403c94:	mov	x1, x19
  403c98:	mov	x2, x23
  403c9c:	mov	x3, x24
  403ca0:	mov	x4, xzr
  403ca4:	add	x25, x8, #0x1
  403ca8:	strb	w26, [x28, x8]
  403cac:	bl	4025f0 <getopt_long@plt>
  403cb0:	sub	w8, w0, #0x30
  403cb4:	mov	w26, w0
  403cb8:	cmp	w8, #0x9
  403cbc:	b.hi	403cfc <wcrtomb@plt+0x148c>  // b.pmore
  403cc0:	ldurb	w8, [x29, #-152]
  403cc4:	ldr	w9, [x21, #880]
  403cc8:	cmp	w8, #0x30
  403ccc:	cset	w8, eq  // eq = none
  403cd0:	sub	x8, x25, x8
  403cd4:	cmp	w9, w22
  403cd8:	csel	x8, x8, xzr, eq  // eq = none
  403cdc:	cmp	x8, #0x15
  403ce0:	adrp	x25, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403ce4:	b.ne	403c88 <wcrtomb@plt+0x1418>  // b.any
  403ce8:	mov	w9, #0x2e2e                	// #11822
  403cec:	movk	w9, #0x2e, lsl #16
  403cf0:	mov	w25, #0x18                  	// #24
  403cf4:	str	w9, [x28, x8]
  403cf8:	b	403d00 <wcrtomb@plt+0x1490>
  403cfc:	cbz	x25, 403d68 <wcrtomb@plt+0x14f8>
  403d00:	adrp	x4, 429000 <_obstack_memory_used@@Base+0x10d70>
  403d04:	sub	x0, x29, #0x98
  403d08:	add	x3, sp, #0xa8
  403d0c:	mov	w2, #0xa                   	// #10
  403d10:	mov	x1, xzr
  403d14:	add	x4, x4, #0xb5d
  403d18:	strb	wzr, [x28, x25]
  403d1c:	bl	4158dc <wcrtomb@plt+0x1306c>
  403d20:	cmp	w0, #0x1
  403d24:	adrp	x25, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403d28:	b.hi	404fe0 <wcrtomb@plt+0x2770>  // b.pmore
  403d2c:	ldr	x8, [sp, #168]
  403d30:	tbnz	x8, #63, 404fe0 <wcrtomb@plt+0x2770>
  403d34:	add	w8, w26, #0x1
  403d38:	cmp	w8, #0x10a
  403d3c:	b.hi	404fd8 <wcrtomb@plt+0x2768>  // b.pmore
  403d40:	adrp	x11, 428000 <_obstack_memory_used@@Base+0xfd70>
  403d44:	add	x11, x11, #0x1b8
  403d48:	adr	x9, 403c40 <wcrtomb@plt+0x13d0>
  403d4c:	ldrh	w10, [x11, x8, lsl #1]
  403d50:	add	x9, x9, x10, lsl #2
  403d54:	br	x9
  403d58:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  403d5c:	mov	w9, #0x1                   	// #1
  403d60:	strb	w9, [x8, #3518]
  403d64:	b	403c54 <wcrtomb@plt+0x13e4>
  403d68:	adrp	x25, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403d6c:	b	403d34 <wcrtomb@plt+0x14c4>
  403d70:	adrp	x25, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403d74:	ldr	x0, [x25, #1216]
  403d78:	cmp	w26, #0x106
  403d7c:	cset	w8, eq  // eq = none
  403d80:	lsl	w22, w8, #29
  403d84:	cbnz	x0, 403d90 <wcrtomb@plt+0x1520>
  403d88:	bl	41131c <wcrtomb@plt+0xeaac>
  403d8c:	str	x0, [x25, #1216]
  403d90:	adrp	x25, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403d94:	ldr	x1, [x25, #1080]
  403d98:	mov	w8, #0x50000000            	// #1342177280
  403d9c:	orr	w2, w22, w8
  403da0:	bl	4117a4 <wcrtomb@plt+0xef34>
  403da4:	adrp	x26, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403da8:	ldr	x0, [x26, #1224]
  403dac:	cbnz	x0, 403db8 <wcrtomb@plt+0x1548>
  403db0:	bl	41131c <wcrtomb@plt+0xeaac>
  403db4:	str	x0, [x26, #1224]
  403db8:	ldr	x1, [x25, #1080]
  403dbc:	orr	w2, w22, #0x10000000
  403dc0:	b	404148 <wcrtomb@plt+0x18d8>
  403dc4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403dc8:	ldr	x8, [x8, #1080]
  403dcc:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403dd0:	str	x8, [x9, #856]
  403dd4:	b	403c54 <wcrtomb@plt+0x13e4>
  403dd8:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403ddc:	ldr	x22, [x8, #1080]
  403de0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  403de4:	add	x1, x1, #0xd1e
  403de8:	mov	x0, x22
  403dec:	bl	402600 <strcmp@plt>
  403df0:	cbz	w0, 4043a8 <wcrtomb@plt+0x1b38>
  403df4:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  403df8:	add	x1, x1, #0xe3e
  403dfc:	mov	x0, x22
  403e00:	bl	402600 <strcmp@plt>
  403e04:	cbz	w0, 403e2c <wcrtomb@plt+0x15bc>
  403e08:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  403e0c:	add	x1, x1, #0xeb0
  403e10:	mov	x0, x22
  403e14:	bl	402600 <strcmp@plt>
  403e18:	cbnz	w0, 405040 <wcrtomb@plt+0x27d0>
  403e1c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403e20:	mov	w9, #0x2                   	// #2
  403e24:	str	w9, [x8, #1184]
  403e28:	b	403c54 <wcrtomb@plt+0x13e4>
  403e2c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403e30:	mov	w9, #0x1                   	// #1
  403e34:	str	w9, [x8, #1184]
  403e38:	b	403c54 <wcrtomb@plt+0x13e4>
  403e3c:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  403e40:	mov	w9, #0x1                   	// #1
  403e44:	strb	w9, [x8, #3517]
  403e48:	b	403c54 <wcrtomb@plt+0x13e4>
  403e4c:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  403e50:	strb	wzr, [x8, #2228]
  403e54:	b	403c54 <wcrtomb@plt+0x13e4>
  403e58:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403e5c:	mov	w9, #0x1                   	// #1
  403e60:	str	w9, [x8, #1192]
  403e64:	b	403c54 <wcrtomb@plt+0x13e4>
  403e68:	bl	4095f8 <wcrtomb@plt+0x6d88>
  403e6c:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  403e70:	mov	w9, #0x1                   	// #1
  403e74:	strb	w9, [x8, #3516]
  403e78:	b	403c54 <wcrtomb@plt+0x13e4>
  403e7c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403e80:	mov	w9, #0x1                   	// #1
  403e84:	strb	w9, [x8, #1248]
  403e88:	b	403c54 <wcrtomb@plt+0x13e4>
  403e8c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403e90:	mov	w9, #0x1                   	// #1
  403e94:	strb	w9, [x8, #1204]
  403e98:	b	403c54 <wcrtomb@plt+0x13e4>
  403e9c:	mov	w8, #0x1                   	// #1
  403ea0:	str	w8, [sp, #28]
  403ea4:	b	403c54 <wcrtomb@plt+0x13e4>
  403ea8:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403eac:	mov	w9, #0x1                   	// #1
  403eb0:	strb	w9, [x8, #1189]
  403eb4:	b	403c54 <wcrtomb@plt+0x13e4>
  403eb8:	mov	w8, #0xffffffff            	// #-1
  403ebc:	str	w8, [sp, #28]
  403ec0:	b	403c54 <wcrtomb@plt+0x13e4>
  403ec4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403ec8:	mov	w9, #0x2                   	// #2
  403ecc:	str	w9, [x8, #1192]
  403ed0:	b	403c54 <wcrtomb@plt+0x13e4>
  403ed4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403ed8:	ldr	x22, [x8, #1080]
  403edc:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  403ee0:	add	x1, x1, #0xcca
  403ee4:	mov	x0, x22
  403ee8:	bl	402600 <strcmp@plt>
  403eec:	cbz	w0, 4043b4 <wcrtomb@plt+0x1b44>
  403ef0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  403ef4:	add	x1, x1, #0xccf
  403ef8:	mov	x0, x22
  403efc:	bl	402600 <strcmp@plt>
  403f00:	cbnz	w0, 40504c <wcrtomb@plt+0x27dc>
  403f04:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403f08:	mov	w9, #0x2                   	// #2
  403f0c:	str	w9, [x8, #1180]
  403f10:	b	403c54 <wcrtomb@plt+0x13e4>
  403f14:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403f18:	mov	w9, #0x1                   	// #1
  403f1c:	strb	w9, [x8, #1200]
  403f20:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403f24:	mov	w9, #0x3                   	// #3
  403f28:	str	w9, [x8, #848]
  403f2c:	str	w27, [sp, #32]
  403f30:	b	403c54 <wcrtomb@plt+0x13e4>
  403f34:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403f38:	mov	w9, #0x1                   	// #1
  403f3c:	strb	w9, [x8, #1197]
  403f40:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403f44:	str	wzr, [x8, #960]
  403f48:	b	403c54 <wcrtomb@plt+0x13e4>
  403f4c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403f50:	ldr	x26, [x8, #1080]
  403f54:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403f58:	add	x22, x22, #0x490
  403f5c:	b	404038 <wcrtomb@plt+0x17c8>
  403f60:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403f64:	strb	wzr, [x8, #1144]
  403f68:	b	403c54 <wcrtomb@plt+0x13e4>
  403f6c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403f70:	ldr	x26, [x8, #1080]
  403f74:	adrp	x4, 429000 <_obstack_memory_used@@Base+0x10d70>
  403f78:	add	x4, x4, #0xb5d
  403f7c:	add	x3, sp, #0xa8
  403f80:	mov	w2, #0xa                   	// #10
  403f84:	mov	x0, x26
  403f88:	mov	x1, xzr
  403f8c:	bl	4158dc <wcrtomb@plt+0x1306c>
  403f90:	cmp	w0, #0x1
  403f94:	b.hi	405010 <wcrtomb@plt+0x27a0>  // b.pmore
  403f98:	ldr	x8, [sp, #168]
  403f9c:	tbz	x8, #63, 403c54 <wcrtomb@plt+0x13e4>
  403fa0:	b	405010 <wcrtomb@plt+0x27a0>
  403fa4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403fa8:	mov	w9, #0x1                   	// #1
  403fac:	strb	w9, [x8, #1191]
  403fb0:	b	403c54 <wcrtomb@plt+0x13e4>
  403fb4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403fb8:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403fbc:	ldr	x1, [x8, #1080]
  403fc0:	ldr	x5, [x9, #952]
  403fc4:	adrp	x22, 428000 <_obstack_memory_used@@Base+0xfd70>
  403fc8:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x10d70>
  403fcc:	adrp	x2, 428000 <_obstack_memory_used@@Base+0xfd70>
  403fd0:	add	x22, x22, #0x4b8
  403fd4:	add	x0, x0, #0xcfc
  403fd8:	add	x2, x2, #0x4c8
  403fdc:	mov	w4, #0x4                   	// #4
  403fe0:	mov	x3, x22
  403fe4:	bl	409e2c <wcrtomb@plt+0x75bc>
  403fe8:	ldr	w8, [x22, x0, lsl #2]
  403fec:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  403ff0:	cmp	x0, #0x1
  403ff4:	str	w8, [x9, #848]
  403ff8:	ldr	w8, [sp, #32]
  403ffc:	csel	w8, w27, w8, eq  // eq = none
  404000:	str	w8, [sp, #32]
  404004:	b	403c54 <wcrtomb@plt+0x13e4>
  404008:	mov	w8, #0x1                   	// #1
  40400c:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404010:	strb	w8, [x9, #1176]
  404014:	b	403c54 <wcrtomb@plt+0x13e4>
  404018:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40401c:	mov	w9, #0x1                   	// #1
  404020:	strb	w9, [x8, #1201]
  404024:	b	403c54 <wcrtomb@plt+0x13e4>
  404028:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40402c:	ldr	x26, [x8, #1080]
  404030:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404034:	add	x22, x22, #0x488
  404038:	adrp	x4, 429000 <_obstack_memory_used@@Base+0x10d70>
  40403c:	add	x4, x4, #0xb5d
  404040:	mov	w2, #0xa                   	// #10
  404044:	mov	x0, x26
  404048:	mov	x1, xzr
  40404c:	mov	x3, x22
  404050:	bl	4158dc <wcrtomb@plt+0x1306c>
  404054:	cmp	w0, #0x1
  404058:	b.hi	405010 <wcrtomb@plt+0x27a0>  // b.pmore
  40405c:	ldr	x8, [x22]
  404060:	tbz	x8, #63, 403c54 <wcrtomb@plt+0x13e4>
  404064:	b	405010 <wcrtomb@plt+0x27a0>
  404068:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x10d70>
  40406c:	add	x0, x0, #0xcf1
  404070:	b	403c48 <wcrtomb@plt+0x13d8>
  404074:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x10d70>
  404078:	add	x0, x0, #0xd67
  40407c:	b	403c48 <wcrtomb@plt+0x13d8>
  404080:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404084:	ldr	x8, [x8, #1080]
  404088:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40408c:	str	x8, [x9, #1256]
  404090:	b	403c54 <wcrtomb@plt+0x13e4>
  404094:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x10d70>
  404098:	add	x0, x0, #0xcf7
  40409c:	b	403c48 <wcrtomb@plt+0x13d8>
  4040a0:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4040a4:	ldr	x26, [x22, #1080]
  4040a8:	mov	x0, x26
  4040ac:	bl	402270 <strlen@plt>
  4040b0:	ldur	x8, [x29, #-168]
  4040b4:	ldr	x10, [sp, #176]
  4040b8:	add	x9, x0, #0x1
  4040bc:	stp	x0, x9, [sp, #8]
  4040c0:	add	x9, x9, x8
  4040c4:	cmp	x10, x9
  4040c8:	b.cs	40433c <wcrtomb@plt+0x1acc>  // b.hs, b.nlast
  4040cc:	ldur	x0, [x29, #-160]
  4040d0:	add	x1, sp, #0xb0
  4040d4:	str	x9, [sp, #176]
  4040d8:	bl	415758 <wcrtomb@plt+0x12ee8>
  4040dc:	ldur	x8, [x29, #-168]
  4040e0:	ldr	x26, [x22, #1080]
  4040e4:	mov	x27, x0
  4040e8:	stur	x0, [x29, #-160]
  4040ec:	b	404340 <wcrtomb@plt+0x1ad0>
  4040f0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4040f4:	mov	w9, #0x1                   	// #1
  4040f8:	strb	w9, [x8, #1188]
  4040fc:	b	403c54 <wcrtomb@plt+0x13e4>
  404100:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404104:	ldr	x0, [x22, #1080]
  404108:	bl	411224 <wcrtomb@plt+0xe9b4>
  40410c:	adrp	x25, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404110:	ldr	x0, [x25, #1232]
  404114:	cbnz	x0, 404120 <wcrtomb@plt+0x18b0>
  404118:	bl	41131c <wcrtomb@plt+0xeaac>
  40411c:	str	x0, [x25, #1232]
  404120:	ldr	x1, [x22, #1080]
  404124:	mov	w2, #0x50000000            	// #1342177280
  404128:	bl	4117a4 <wcrtomb@plt+0xef34>
  40412c:	adrp	x25, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404130:	ldr	x0, [x25, #1240]
  404134:	cbnz	x0, 404140 <wcrtomb@plt+0x18d0>
  404138:	bl	41131c <wcrtomb@plt+0xeaac>
  40413c:	str	x0, [x25, #1240]
  404140:	ldr	x1, [x22, #1080]
  404144:	mov	w2, #0x10000000            	// #268435456
  404148:	bl	4117a4 <wcrtomb@plt+0xef34>
  40414c:	adrp	x25, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404150:	b	403c54 <wcrtomb@plt+0x13e4>
  404154:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404158:	ldr	x1, [x22, #1216]
  40415c:	cbnz	x1, 40416c <wcrtomb@plt+0x18fc>
  404160:	bl	41131c <wcrtomb@plt+0xeaac>
  404164:	mov	x1, x0
  404168:	str	x0, [x22, #1216]
  40416c:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404170:	ldr	x2, [x22, #1080]
  404174:	adrp	x0, 411000 <wcrtomb@plt+0xe790>
  404178:	add	x0, x0, #0x7a4
  40417c:	mov	w3, #0x50000000            	// #1342177280
  404180:	mov	w4, #0xa                   	// #10
  404184:	bl	411ca0 <wcrtomb@plt+0xf430>
  404188:	cbnz	w0, 405058 <wcrtomb@plt+0x27e8>
  40418c:	adrp	x25, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404190:	ldr	x1, [x25, #1224]
  404194:	cbnz	x1, 4041a4 <wcrtomb@plt+0x1934>
  404198:	bl	41131c <wcrtomb@plt+0xeaac>
  40419c:	mov	x1, x0
  4041a0:	str	x0, [x25, #1224]
  4041a4:	ldr	x2, [x22, #1080]
  4041a8:	adrp	x0, 411000 <wcrtomb@plt+0xe790>
  4041ac:	add	x0, x0, #0x7a4
  4041b0:	mov	w3, #0x10000000            	// #268435456
  4041b4:	mov	w4, #0xa                   	// #10
  4041b8:	bl	411ca0 <wcrtomb@plt+0xf430>
  4041bc:	adrp	x25, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4041c0:	cbz	w0, 403c54 <wcrtomb@plt+0x13e4>
  4041c4:	b	405058 <wcrtomb@plt+0x27e8>
  4041c8:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4041cc:	mov	w9, #0x1                   	// #1
  4041d0:	strb	w9, [x8, #1190]
  4041d4:	b	403c54 <wcrtomb@plt+0x13e4>
  4041d8:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4041dc:	ldr	x0, [x8, #1080]
  4041e0:	b	403c48 <wcrtomb@plt+0x13d8>
  4041e4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4041e8:	ldr	x0, [x8, #1080]
  4041ec:	adrp	x3, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4041f0:	adrp	x4, 429000 <_obstack_memory_used@@Base+0x10d70>
  4041f4:	add	x3, x3, #0x480
  4041f8:	add	x4, x4, #0xb5d
  4041fc:	mov	w2, #0xa                   	// #10
  404200:	mov	x1, xzr
  404204:	bl	4158dc <wcrtomb@plt+0x1306c>
  404208:	cmp	w0, #0x2
  40420c:	b.cc	403c54 <wcrtomb@plt+0x13e4>  // b.lo, b.ul, b.last
  404210:	b	405068 <wcrtomb@plt+0x27f8>
  404214:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404218:	mov	w9, #0x1                   	// #1
  40421c:	strb	w9, [x8, #1196]
  404220:	b	403c54 <wcrtomb@plt+0x13e4>
  404224:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404228:	ldr	x22, [x8, #1080]
  40422c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  404230:	add	x1, x1, #0xd0a
  404234:	mov	x0, x22
  404238:	bl	402600 <strcmp@plt>
  40423c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404240:	cbz	w0, 4043c4 <wcrtomb@plt+0x1b54>
  404244:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  404248:	add	x1, x1, #0xf04
  40424c:	mov	x0, x22
  404250:	bl	402370 <fopen@plt>
  404254:	mov	x26, x0
  404258:	cbnz	x0, 4043c8 <wcrtomb@plt+0x1b58>
  40425c:	b	40508c <wcrtomb@plt+0x281c>
  404260:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404264:	ldr	x26, [x8, #1080]
  404268:	cbz	x26, 404398 <wcrtomb@plt+0x1b28>
  40426c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  404270:	add	x1, x1, #0xa75
  404274:	mov	x0, x26
  404278:	bl	40a1c0 <wcrtomb@plt+0x7950>
  40427c:	cbz	w0, 404388 <wcrtomb@plt+0x1b18>
  404280:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  404284:	add	x1, x1, #0xd3f
  404288:	mov	x0, x26
  40428c:	bl	40a1c0 <wcrtomb@plt+0x7950>
  404290:	cbz	w0, 404388 <wcrtomb@plt+0x1b18>
  404294:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  404298:	add	x1, x1, #0xd43
  40429c:	mov	x0, x26
  4042a0:	bl	40a1c0 <wcrtomb@plt+0x7950>
  4042a4:	cbz	w0, 404388 <wcrtomb@plt+0x1b18>
  4042a8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  4042ac:	add	x1, x1, #0xd49
  4042b0:	mov	x0, x26
  4042b4:	bl	40a1c0 <wcrtomb@plt+0x7950>
  4042b8:	cbz	w0, 4044a0 <wcrtomb@plt+0x1c30>
  4042bc:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  4042c0:	add	x1, x1, #0xd4f
  4042c4:	mov	x0, x26
  4042c8:	bl	40a1c0 <wcrtomb@plt+0x7950>
  4042cc:	cbz	w0, 4044a0 <wcrtomb@plt+0x1c30>
  4042d0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  4042d4:	add	x1, x1, #0xd52
  4042d8:	mov	x0, x26
  4042dc:	bl	40a1c0 <wcrtomb@plt+0x7950>
  4042e0:	cbz	w0, 4044a0 <wcrtomb@plt+0x1c30>
  4042e4:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  4042e8:	add	x1, x1, #0xd57
  4042ec:	mov	x0, x26
  4042f0:	bl	40a1c0 <wcrtomb@plt+0x7950>
  4042f4:	cbz	w0, 404398 <wcrtomb@plt+0x1b28>
  4042f8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  4042fc:	add	x1, x1, #0xd5f
  404300:	mov	x0, x26
  404304:	bl	40a1c0 <wcrtomb@plt+0x7950>
  404308:	cbz	w0, 404398 <wcrtomb@plt+0x1b28>
  40430c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  404310:	add	x1, x1, #0xd5c
  404314:	mov	x0, x26
  404318:	bl	40a1c0 <wcrtomb@plt+0x7950>
  40431c:	cbz	w0, 404398 <wcrtomb@plt+0x1b28>
  404320:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404324:	mov	w9, #0x1                   	// #1
  404328:	str	w9, [x8, #1212]
  40432c:	b	403c54 <wcrtomb@plt+0x13e4>
  404330:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  404334:	strb	wzr, [x8, #3518]
  404338:	b	403c54 <wcrtomb@plt+0x13e4>
  40433c:	ldur	x27, [x29, #-160]
  404340:	mov	x1, x26
  404344:	ldr	x26, [sp, #8]
  404348:	add	x22, x27, x8
  40434c:	mov	x0, x22
  404350:	mov	x2, x26
  404354:	bl	402210 <memcpy@plt>
  404358:	ldur	x8, [x29, #-168]
  40435c:	ldr	x1, [sp, #16]
  404360:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x10d70>
  404364:	mov	w9, #0xa                   	// #10
  404368:	add	x8, x8, x26
  40436c:	add	x10, x8, #0x1
  404370:	add	x2, x2, #0xb5d
  404374:	mov	x0, x22
  404378:	stur	x10, [x29, #-168]
  40437c:	strb	w9, [x27, x8]
  404380:	bl	405210 <wcrtomb@plt+0x29a0>
  404384:	b	403c54 <wcrtomb@plt+0x13e4>
  404388:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40438c:	mov	w9, #0x1                   	// #1
  404390:	str	w9, [x8, #1208]
  404394:	b	403c54 <wcrtomb@plt+0x13e4>
  404398:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40439c:	mov	w9, #0x2                   	// #2
  4043a0:	str	w9, [x8, #1208]
  4043a4:	b	403c54 <wcrtomb@plt+0x13e4>
  4043a8:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4043ac:	str	wzr, [x8, #1184]
  4043b0:	b	403c54 <wcrtomb@plt+0x13e4>
  4043b4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4043b8:	mov	w9, #0x1                   	// #1
  4043bc:	str	w9, [x8, #1180]
  4043c0:	b	403c54 <wcrtomb@plt+0x13e4>
  4043c4:	ldr	x26, [x8, #1104]
  4043c8:	ldp	x22, x27, [x29, #-168]
  4043cc:	mov	x8, x22
  4043d0:	str	x22, [sp, #16]
  4043d4:	ldr	x9, [sp, #176]
  4043d8:	add	x10, x8, #0x1
  4043dc:	cmp	x9, x10
  4043e0:	b.hi	4043fc <wcrtomb@plt+0x1b8c>  // b.pmore
  4043e4:	add	x1, sp, #0xb0
  4043e8:	mov	x0, x27
  4043ec:	bl	415758 <wcrtomb@plt+0x12ee8>
  4043f0:	ldr	x9, [sp, #176]
  4043f4:	ldur	x8, [x29, #-168]
  4043f8:	mov	x27, x0
  4043fc:	mvn	x10, x8
  404400:	add	x2, x9, x10
  404404:	add	x0, x27, x8
  404408:	mov	w1, #0x1                   	// #1
  40440c:	mov	x3, x26
  404410:	bl	4025c0 <fread_unlocked@plt>
  404414:	cbz	x0, 404428 <wcrtomb@plt+0x1bb8>
  404418:	ldur	x8, [x29, #-168]
  40441c:	add	x8, x8, x0
  404420:	stur	x8, [x29, #-168]
  404424:	b	4043d4 <wcrtomb@plt+0x1b64>
  404428:	stur	x27, [x29, #-160]
  40442c:	ldrb	w8, [x26]
  404430:	tbnz	w8, #5, 40508c <wcrtomb@plt+0x281c>
  404434:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404438:	ldr	x8, [x8, #1104]
  40443c:	adrp	x27, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404440:	cmp	x26, x8
  404444:	b.eq	404450 <wcrtomb@plt+0x1be0>  // b.none
  404448:	mov	x0, x26
  40444c:	bl	402340 <fclose@plt>
  404450:	ldp	x9, x8, [x29, #-168]
  404454:	ldr	x10, [sp, #16]
  404458:	cmp	x22, x9
  40445c:	b.eq	40448c <wcrtomb@plt+0x1c1c>  // b.none
  404460:	add	x10, x9, x8
  404464:	ldurb	w10, [x10, #-1]
  404468:	cmp	w10, #0xa
  40446c:	b.ne	404478 <wcrtomb@plt+0x1c08>  // b.any
  404470:	mov	x10, x9
  404474:	b	40448c <wcrtomb@plt+0x1c1c>
  404478:	add	x10, x9, #0x1
  40447c:	mov	w11, #0xa                   	// #10
  404480:	stur	x10, [x29, #-168]
  404484:	strb	w11, [x8, x9]
  404488:	ldur	x10, [x29, #-168]
  40448c:	ldr	x2, [x27, #1080]
  404490:	add	x0, x8, x22
  404494:	sub	x1, x10, x22
  404498:	bl	405210 <wcrtomb@plt+0x29a0>
  40449c:	b	403c54 <wcrtomb@plt+0x13e4>
  4044a0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4044a4:	str	wzr, [x8, #1208]
  4044a8:	b	403c54 <wcrtomb@plt+0x13e4>
  4044ac:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4044b0:	ldrb	w8, [x8, #1189]
  4044b4:	cmp	w8, #0x1
  4044b8:	b.ne	404508 <wcrtomb@plt+0x1c98>  // b.any
  4044bc:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4044c0:	ldr	x19, [x8, #1096]
  4044c4:	bl	411e60 <wcrtomb@plt+0xf5f0>
  4044c8:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x10d70>
  4044cc:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x10d70>
  4044d0:	mov	x1, x0
  4044d4:	add	x2, x2, #0xd63
  4044d8:	add	x3, x3, #0xd6c
  4044dc:	mov	x0, x19
  4044e0:	mov	x4, xzr
  4044e4:	bl	4154a8 <wcrtomb@plt+0x12c38>
  4044e8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  4044ec:	add	x1, x1, #0xd70
  4044f0:	mov	w2, #0x5                   	// #5
  4044f4:	mov	x0, xzr
  4044f8:	bl	402740 <dcgettext@plt>
  4044fc:	bl	4025b0 <puts@plt>
  404500:	mov	w0, wzr
  404504:	b	404fb0 <wcrtomb@plt+0x2740>
  404508:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40450c:	ldr	w8, [x8, #1212]
  404510:	cbnz	w8, 4050ac <wcrtomb@plt+0x283c>
  404514:	ldur	x8, [x29, #-160]
  404518:	cbz	x8, 404530 <wcrtomb@plt+0x1cc0>
  40451c:	ldur	x8, [x29, #-168]
  404520:	cbz	x8, 404588 <wcrtomb@plt+0x1d18>
  404524:	sub	x8, x8, #0x1
  404528:	stur	x8, [x29, #-168]
  40452c:	b	4045a8 <wcrtomb@plt+0x1d38>
  404530:	ldrsw	x22, [x25, #1088]
  404534:	cmp	w22, w20
  404538:	b.ge	404fd8 <wcrtomb@plt+0x2768>  // b.tcont
  40453c:	ldr	x21, [x19, x22, lsl #3]
  404540:	mov	x0, x21
  404544:	bl	402270 <strlen@plt>
  404548:	stur	x0, [x29, #-168]
  40454c:	add	w8, w22, #0x1
  404550:	add	x1, x0, #0x1
  404554:	mov	x0, x21
  404558:	str	w8, [x25, #1088]
  40455c:	bl	41581c <wcrtomb@plt+0x12fac>
  404560:	ldur	x1, [x29, #-168]
  404564:	adrp	x2, 429000 <_obstack_memory_used@@Base+0x10d70>
  404568:	add	x2, x2, #0xb5d
  40456c:	stur	x0, [x29, #-160]
  404570:	bl	405210 <wcrtomb@plt+0x29a0>
  404574:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404578:	ldr	x9, [x8, #1264]
  40457c:	add	x9, x9, #0x1
  404580:	str	x9, [x8, #1264]
  404584:	b	4045a8 <wcrtomb@plt+0x1d38>
  404588:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40458c:	ldrb	w9, [x8, #1204]
  404590:	adrp	x10, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  404594:	adrp	x11, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  404598:	strb	wzr, [x10, #3516]
  40459c:	eor	w9, w9, #0x1
  4045a0:	strb	w9, [x8, #1204]
  4045a4:	strb	wzr, [x11, #3517]
  4045a8:	adrp	x21, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4045ac:	ldrb	w8, [x21, #1197]
  4045b0:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4045b4:	adrp	x23, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4045b8:	adrp	x24, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4045bc:	tbz	w8, #0, 4045c8 <wcrtomb@plt+0x1d58>
  4045c0:	mov	w8, wzr
  4045c4:	b	4045ec <wcrtomb@plt+0x1d7c>
  4045c8:	add	x2, sp, #0x28
  4045cc:	mov	w1, #0x1                   	// #1
  4045d0:	mov	w0, wzr
  4045d4:	bl	402720 <__fxstat@plt>
  4045d8:	mov	w8, wzr
  4045dc:	cbz	w0, 4046fc <wcrtomb@plt+0x1e8c>
  4045e0:	ldrb	w9, [x21, #1197]
  4045e4:	cmp	w9, #0x1
  4045e8:	b.ne	4046cc <wcrtomb@plt+0x1e5c>  // b.any
  4045ec:	mov	w9, wzr
  4045f0:	adrp	x10, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4045f4:	str	wzr, [x10, #1192]
  4045f8:	adrp	x12, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4045fc:	adrp	x13, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404600:	mov	w11, #0x1                   	// #1
  404604:	mov	w10, wzr
  404608:	strb	wzr, [x12, #1191]
  40460c:	strb	w11, [x13, #1404]
  404610:	ldr	x12, [x24, #1168]
  404614:	orr	w10, w11, w10
  404618:	adrp	x11, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40461c:	strb	w10, [x11, #1408]
  404620:	tbnz	x12, #63, 404674 <wcrtomb@plt+0x1e04>
  404624:	ldr	x10, [x23, #1160]
  404628:	tbnz	x10, #63, 404684 <wcrtomb@plt+0x1e14>
  40462c:	ldr	x10, [x22, #1152]
  404630:	cbz	x10, 404694 <wcrtomb@plt+0x1e24>
  404634:	cmp	w9, #0x2
  404638:	b.eq	40469c <wcrtomb@plt+0x1e2c>  // b.none
  40463c:	ldur	x9, [x29, #-168]
  404640:	cbnz	x9, 40469c <wcrtomb@plt+0x1e2c>
  404644:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404648:	ldrb	w9, [x9, #1204]
  40464c:	cbz	w9, 40469c <wcrtomb@plt+0x1e2c>
  404650:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  404654:	adrp	x10, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  404658:	ldrb	w9, [x9, #3517]
  40465c:	ldrb	w10, [x10, #3516]
  404660:	orr	w9, w10, w9
  404664:	tst	w9, #0xff
  404668:	b.ne	40469c <wcrtomb@plt+0x1e2c>  // b.any
  40466c:	mov	w0, #0x1                   	// #1
  404670:	b	404fb0 <wcrtomb@plt+0x2740>
  404674:	ldr	x10, [sp, #168]
  404678:	str	x10, [x24, #1168]
  40467c:	ldr	x10, [x23, #1160]
  404680:	tbz	x10, #63, 40462c <wcrtomb@plt+0x1dbc>
  404684:	ldr	x10, [sp, #168]
  404688:	str	x10, [x23, #1160]
  40468c:	ldr	x10, [x22, #1152]
  404690:	cbnz	x10, 404634 <wcrtomb@plt+0x1dc4>
  404694:	cmp	w9, #0x2
  404698:	b.ne	40466c <wcrtomb@plt+0x1dfc>  // b.any
  40469c:	adrp	x21, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4046a0:	ldr	w9, [x21, #1208]
  4046a4:	cmp	w9, #0x2
  4046a8:	b.ne	4047b0 <wcrtomb@plt+0x1f40>  // b.any
  4046ac:	cbz	w8, 4047ac <wcrtomb@plt+0x1f3c>
  4046b0:	bl	415e3c <wcrtomb@plt+0x135cc>
  4046b4:	cbz	w0, 4047a8 <wcrtomb@plt+0x1f38>
  4046b8:	mov	w0, #0x1                   	// #1
  4046bc:	bl	4026e0 <isatty@plt>
  4046c0:	cmp	w0, #0x0
  4046c4:	cset	w8, ne  // ne = any
  4046c8:	b	4047ac <wcrtomb@plt+0x1f3c>
  4046cc:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4046d0:	ldrb	w10, [x9, #1400]
  4046d4:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4046d8:	ldr	w9, [x9, #1192]
  4046dc:	tbnz	w10, #0, 4045f8 <wcrtomb@plt+0x1d88>
  4046e0:	cbnz	w9, 4045f8 <wcrtomb@plt+0x1d88>
  4046e4:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4046e8:	adrp	x11, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4046ec:	ldrb	w10, [x9, #1191]
  4046f0:	ldrb	w11, [x11, #1404]
  4046f4:	mov	w9, wzr
  4046f8:	b	404610 <wcrtomb@plt+0x1da0>
  4046fc:	ldr	w8, [sp, #56]
  404700:	and	w8, w8, #0xf000
  404704:	cmp	w8, #0x2, lsl #12
  404708:	b.eq	404754 <wcrtomb@plt+0x1ee4>  // b.none
  40470c:	cmp	w8, #0x8, lsl #12
  404710:	b.ne	404798 <wcrtomb@plt+0x1f28>  // b.any
  404714:	ldur	q0, [sp, #104]
  404718:	ldur	q1, [sp, #120]
  40471c:	ldur	q2, [sp, #136]
  404720:	ldur	q3, [sp, #152]
  404724:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404728:	add	x9, x9, #0x4f8
  40472c:	stp	q0, q1, [x9, #64]
  404730:	ldur	q0, [sp, #40]
  404734:	ldur	q1, [sp, #56]
  404738:	stp	q2, q3, [x9, #96]
  40473c:	ldur	q2, [sp, #72]
  404740:	ldur	q3, [sp, #88]
  404744:	mov	w8, wzr
  404748:	stp	q0, q1, [x9]
  40474c:	stp	q2, q3, [x9, #32]
  404750:	b	4045e0 <wcrtomb@plt+0x1d70>
  404754:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  404758:	add	x1, x1, #0xdcd
  40475c:	sub	x2, x29, #0x98
  404760:	mov	w0, wzr
  404764:	bl	402800 <__xstat@plt>
  404768:	cbnz	w0, 4047a0 <wcrtomb@plt+0x1f30>
  40476c:	ldr	x8, [sp, #48]
  404770:	ldur	x9, [x29, #-144]
  404774:	cmp	x8, x9
  404778:	b.ne	4047a0 <wcrtomb@plt+0x1f30>  // b.any
  40477c:	ldr	x8, [sp, #40]
  404780:	ldur	x9, [x29, #-152]
  404784:	cmp	x8, x9
  404788:	mov	w8, #0x1                   	// #1
  40478c:	b.ne	4045e0 <wcrtomb@plt+0x1d70>  // b.any
  404790:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404794:	strb	w8, [x9, #1400]
  404798:	mov	w8, wzr
  40479c:	b	4045e0 <wcrtomb@plt+0x1d70>
  4047a0:	mov	w8, #0x1                   	// #1
  4047a4:	b	4045e0 <wcrtomb@plt+0x1d70>
  4047a8:	mov	w8, wzr
  4047ac:	str	w8, [x21, #1208]
  4047b0:	bl	415e70 <wcrtomb@plt+0x13600>
  4047b4:	ldr	w8, [x21, #1208]
  4047b8:	cbz	w8, 404a04 <wcrtomb@plt+0x2194>
  4047bc:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x10d70>
  4047c0:	add	x0, x0, #0xdd7
  4047c4:	bl	4027f0 <getenv@plt>
  4047c8:	cbz	x0, 4047e4 <wcrtomb@plt+0x1f74>
  4047cc:	ldrb	w8, [x0]
  4047d0:	cbz	w8, 4047e4 <wcrtomb@plt+0x1f74>
  4047d4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4047d8:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4047dc:	str	x0, [x8, #864]
  4047e0:	str	x0, [x9, #872]
  4047e4:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4047e8:	add	x0, x0, #0x60
  4047ec:	bl	4027f0 <getenv@plt>
  4047f0:	cbz	x0, 404a04 <wcrtomb@plt+0x2194>
  4047f4:	ldrb	w8, [x0]
  4047f8:	cbz	w8, 404a04 <wcrtomb@plt+0x2194>
  4047fc:	bl	415858 <wcrtomb@plt+0x12fe8>
  404800:	adrp	x23, 42a000 <_obstack_memory_used@@Base+0x11d70>
  404804:	adrp	x25, 428000 <_obstack_memory_used@@Base+0xfd70>
  404808:	adrp	x24, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40480c:	adrp	x21, 42a000 <_obstack_memory_used@@Base+0x11d70>
  404810:	mov	x27, x0
  404814:	add	x23, x23, #0x6c
  404818:	add	x25, x25, #0xc70
  40481c:	add	x24, x24, #0x6f
  404820:	add	x21, x21, #0x72
  404824:	mov	x28, x0
  404828:	mov	x26, xzr
  40482c:	b	404834 <wcrtomb@plt+0x1fc4>
  404830:	add	x28, x28, #0x1
  404834:	ldrb	w22, [x28]
  404838:	cbz	w22, 404888 <wcrtomb@plt+0x2018>
  40483c:	cmp	w22, #0x3d
  404840:	b.eq	404870 <wcrtomb@plt+0x2000>  // b.none
  404844:	cmp	w22, #0x3a
  404848:	b.eq	404888 <wcrtomb@plt+0x2018>  // b.none
  40484c:	cbz	x26, 404868 <wcrtomb@plt+0x1ff8>
  404850:	cmp	w22, #0x3b
  404854:	b.eq	404830 <wcrtomb@plt+0x1fc0>  // b.none
  404858:	sub	w8, w22, #0x30
  40485c:	cmp	w8, #0x9
  404860:	b.ls	404830 <wcrtomb@plt+0x1fc0>  // b.plast
  404864:	b	404a04 <wcrtomb@plt+0x2194>
  404868:	add	x28, x28, #0x1
  40486c:	b	404834 <wcrtomb@plt+0x1fc4>
  404870:	cbnz	x26, 404a04 <wcrtomb@plt+0x2194>
  404874:	cmp	x27, x28
  404878:	b.eq	404a04 <wcrtomb@plt+0x2194>  // b.none
  40487c:	strb	wzr, [x28], #1
  404880:	mov	x26, x28
  404884:	b	404834 <wcrtomb@plt+0x1fc4>
  404888:	mov	x0, x23
  40488c:	mov	x1, x27
  404890:	strb	wzr, [x28], #1
  404894:	bl	402600 <strcmp@plt>
  404898:	cbz	w0, 404970 <wcrtomb@plt+0x2100>
  40489c:	mov	x0, x24
  4048a0:	mov	x1, x27
  4048a4:	bl	402600 <strcmp@plt>
  4048a8:	cbz	w0, 404978 <wcrtomb@plt+0x2108>
  4048ac:	mov	x0, x21
  4048b0:	mov	x1, x27
  4048b4:	bl	402600 <strcmp@plt>
  4048b8:	cbz	w0, 404984 <wcrtomb@plt+0x2114>
  4048bc:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4048c0:	add	x0, x0, #0x75
  4048c4:	mov	x1, x27
  4048c8:	bl	402600 <strcmp@plt>
  4048cc:	cbz	w0, 404990 <wcrtomb@plt+0x2120>
  4048d0:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4048d4:	add	x0, x0, #0x78
  4048d8:	mov	x1, x27
  4048dc:	bl	402600 <strcmp@plt>
  4048e0:	cbz	w0, 40499c <wcrtomb@plt+0x212c>
  4048e4:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4048e8:	add	x0, x0, #0x7b
  4048ec:	mov	x1, x27
  4048f0:	bl	402600 <strcmp@plt>
  4048f4:	cbz	w0, 4049a8 <wcrtomb@plt+0x2138>
  4048f8:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x10d70>
  4048fc:	add	x0, x0, #0xed7
  404900:	mov	x1, x27
  404904:	bl	402600 <strcmp@plt>
  404908:	cbz	w0, 4049b4 <wcrtomb@plt+0x2144>
  40490c:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  404910:	add	x0, x0, #0x7e
  404914:	mov	x1, x27
  404918:	bl	402600 <strcmp@plt>
  40491c:	cbz	w0, 4049c0 <wcrtomb@plt+0x2150>
  404920:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  404924:	add	x0, x0, #0x81
  404928:	mov	x1, x27
  40492c:	bl	402600 <strcmp@plt>
  404930:	cbz	w0, 4049cc <wcrtomb@plt+0x215c>
  404934:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  404938:	add	x0, x0, #0x84
  40493c:	mov	x1, x27
  404940:	bl	402600 <strcmp@plt>
  404944:	cbz	w0, 4049d8 <wcrtomb@plt+0x2168>
  404948:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x10d70>
  40494c:	add	x0, x0, #0xd54
  404950:	mov	x1, x27
  404954:	bl	402600 <strcmp@plt>
  404958:	adrp	x9, 428000 <_obstack_memory_used@@Base+0xfd70>
  40495c:	add	x9, x9, #0xd60
  404960:	add	x8, x9, #0x18
  404964:	cmp	w0, #0x0
  404968:	csel	x8, x9, x8, eq  // eq = none
  40496c:	b	4049e0 <wcrtomb@plt+0x2170>
  404970:	mov	x8, x25
  404974:	b	4049e0 <wcrtomb@plt+0x2170>
  404978:	adrp	x8, 428000 <_obstack_memory_used@@Base+0xfd70>
  40497c:	add	x8, x8, #0xc88
  404980:	b	4049e0 <wcrtomb@plt+0x2170>
  404984:	adrp	x8, 428000 <_obstack_memory_used@@Base+0xfd70>
  404988:	add	x8, x8, #0xca0
  40498c:	b	4049e0 <wcrtomb@plt+0x2170>
  404990:	adrp	x8, 428000 <_obstack_memory_used@@Base+0xfd70>
  404994:	add	x8, x8, #0xcb8
  404998:	b	4049e0 <wcrtomb@plt+0x2170>
  40499c:	adrp	x8, 428000 <_obstack_memory_used@@Base+0xfd70>
  4049a0:	add	x8, x8, #0xcd0
  4049a4:	b	4049e0 <wcrtomb@plt+0x2170>
  4049a8:	adrp	x8, 428000 <_obstack_memory_used@@Base+0xfd70>
  4049ac:	add	x8, x8, #0xce8
  4049b0:	b	4049e0 <wcrtomb@plt+0x2170>
  4049b4:	adrp	x8, 428000 <_obstack_memory_used@@Base+0xfd70>
  4049b8:	add	x8, x8, #0xd00
  4049bc:	b	4049e0 <wcrtomb@plt+0x2170>
  4049c0:	adrp	x8, 428000 <_obstack_memory_used@@Base+0xfd70>
  4049c4:	add	x8, x8, #0xd18
  4049c8:	b	4049e0 <wcrtomb@plt+0x2170>
  4049cc:	adrp	x8, 428000 <_obstack_memory_used@@Base+0xfd70>
  4049d0:	add	x8, x8, #0xd30
  4049d4:	b	4049e0 <wcrtomb@plt+0x2170>
  4049d8:	adrp	x8, 428000 <_obstack_memory_used@@Base+0xfd70>
  4049dc:	add	x8, x8, #0xd48
  4049e0:	cbz	x26, 4049f0 <wcrtomb@plt+0x2180>
  4049e4:	ldr	x9, [x8, #8]
  4049e8:	cbz	x9, 4049f0 <wcrtomb@plt+0x2180>
  4049ec:	str	x26, [x9]
  4049f0:	ldr	x8, [x8, #16]
  4049f4:	cbz	x8, 4049fc <wcrtomb@plt+0x218c>
  4049f8:	blr	x8
  4049fc:	mov	x27, x28
  404a00:	cbnz	w22, 404828 <wcrtomb@plt+0x1fb8>
  404a04:	adrp	x25, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  404a08:	mov	w8, wzr
  404a0c:	mov	w9, #0x1                   	// #1
  404a10:	mov	w10, #0x1                   	// #1
  404a14:	add	x25, x25, #0x8b8
  404a18:	b	404a30 <wcrtomb@plt+0x21c0>
  404a1c:	mov	w11, w10
  404a20:	add	x9, x9, #0x1
  404a24:	cmp	x9, #0x100
  404a28:	mov	w10, w11
  404a2c:	b.eq	404a64 <wcrtomb@plt+0x21f4>  // b.none
  404a30:	and	w11, w8, w9
  404a34:	tst	w11, #0xff
  404a38:	b.ne	404a1c <wcrtomb@plt+0x21ac>  // b.any
  404a3c:	add	x11, x25, x9
  404a40:	ldrb	w11, [x11, #3]
  404a44:	cmp	w11, #0x1
  404a48:	b.eq	404a1c <wcrtomb@plt+0x21ac>  // b.none
  404a4c:	mov	w11, w10
  404a50:	lsl	w10, w10, #1
  404a54:	cmp	x9, w10, sxtw
  404a58:	b.ge	404a4c <wcrtomb@plt+0x21dc>  // b.tcont
  404a5c:	orr	w8, w8, w11
  404a60:	b	404a20 <wcrtomb@plt+0x21b0>
  404a64:	ldr	w11, [sp, #36]
  404a68:	and	x8, x8, #0xff
  404a6c:	mov	x9, #0x101010101010101     	// #72340172838076673
  404a70:	adrp	x10, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404a74:	bic	w22, w11, w11, asr #31
  404a78:	mul	x8, x8, x9
  404a7c:	cmp	w22, #0x2
  404a80:	str	x8, [x10, #1480]
  404a84:	b.ne	404bd4 <wcrtomb@plt+0x2364>  // b.any
  404a88:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  404a8c:	ldrb	w8, [x8, #2232]
  404a90:	cbz	w8, 404b04 <wcrtomb@plt+0x2294>
  404a94:	ldp	x23, x21, [x29, #-168]
  404a98:	stur	xzr, [x29, #-152]
  404a9c:	cbz	x23, 404ae0 <wcrtomb@plt+0x2270>
  404aa0:	mov	x24, xzr
  404aa4:	add	x8, x21, x24
  404aa8:	ldrb	w9, [x8]
  404aac:	add	x9, x25, x9
  404ab0:	ldrsb	x0, [x9, #3]
  404ab4:	cmn	x0, #0x2
  404ab8:	b.ne	404acc <wcrtomb@plt+0x225c>  // b.any
  404abc:	sub	x1, x23, x24
  404ac0:	sub	x2, x29, #0x98
  404ac4:	mov	x0, x8
  404ac8:	bl	417e8c <wcrtomb@plt+0x1561c>
  404acc:	cmn	x0, #0x2
  404ad0:	b.cs	404bb8 <wcrtomb@plt+0x2348>  // b.hs, b.nlast
  404ad4:	add	x24, x0, x24
  404ad8:	cmp	x24, x23
  404adc:	b.cc	404aa4 <wcrtomb@plt+0x2234>  // b.lo, b.ul, b.last
  404ae0:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  404ae4:	ldrb	w8, [x8, #3518]
  404ae8:	cbz	w8, 404bd4 <wcrtomb@plt+0x2364>
  404aec:	ldur	x26, [x29, #-168]
  404af0:	mov	x24, xzr
  404af4:	sub	x8, x21, #0x1
  404af8:	stur	xzr, [x29, #-24]
  404afc:	str	x8, [sp, #16]
  404b00:	b	404b44 <wcrtomb@plt+0x22d4>
  404b04:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404b08:	ldr	x8, [x8, #1264]
  404b0c:	mov	w22, #0x2                   	// #2
  404b10:	cmp	x8, #0x1
  404b14:	b.ne	404da4 <wcrtomb@plt+0x2534>  // b.any
  404b18:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  404b1c:	ldrb	w8, [x8, #3516]
  404b20:	ldr	w24, [sp, #28]
  404b24:	adrp	x23, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404b28:	cbnz	w8, 404bc0 <wcrtomb@plt+0x2350>
  404b2c:	b	404dac <wcrtomb@plt+0x253c>
  404b30:	adrp	x25, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  404b34:	add	x25, x25, #0x8b8
  404b38:	bic	w8, w23, w23, asr #31
  404b3c:	add	x24, x24, x8
  404b40:	tbnz	w23, #31, 404bb8 <wcrtomb@plt+0x2348>
  404b44:	subs	x2, x26, x24
  404b48:	b.ls	404bd4 <wcrtomb@plt+0x2364>  // b.plast
  404b4c:	add	x1, x21, x24
  404b50:	ldrb	w8, [x1]
  404b54:	add	x8, x25, x8
  404b58:	ldrsb	w23, [x8, #3]
  404b5c:	tbz	w23, #31, 404b38 <wcrtomb@plt+0x22c8>
  404b60:	sub	x0, x29, #0xc
  404b64:	sub	x3, x29, #0x18
  404b68:	bl	417eb0 <wcrtomb@plt+0x15640>
  404b6c:	cmp	x0, #0x10
  404b70:	b.hi	404bb8 <wcrtomb@plt+0x2348>  // b.pmore
  404b74:	mov	x23, x0
  404b78:	ldur	w0, [x29, #-12]
  404b7c:	sub	x1, x29, #0x98
  404b80:	bl	411134 <wcrtomb@plt+0xe8c4>
  404b84:	cbnz	w0, 404bb8 <wcrtomb@plt+0x2348>
  404b88:	ldr	x8, [sp, #16]
  404b8c:	mov	x27, x23
  404b90:	add	x25, x8, x24
  404b94:	cmp	x27, #0x2
  404b98:	b.lt	404b30 <wcrtomb@plt+0x22c0>  // b.tstop
  404b9c:	ldrb	w28, [x25, x27]
  404ba0:	sub	x27, x27, #0x1
  404ba4:	bl	4024d0 <__ctype_toupper_loc@plt>
  404ba8:	ldr	x8, [x0]
  404bac:	ldr	w8, [x8, x28, lsl #2]
  404bb0:	cmp	w8, w28
  404bb4:	b.eq	404b94 <wcrtomb@plt+0x2324>  // b.none
  404bb8:	ldr	w24, [sp, #28]
  404bbc:	adrp	x23, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404bc0:	sub	x0, x29, #0xa0
  404bc4:	sub	x1, x29, #0xa8
  404bc8:	bl	40380c <wcrtomb@plt+0xf9c>
  404bcc:	mov	w22, wzr
  404bd0:	b	404dac <wcrtomb@plt+0x253c>
  404bd4:	cmp	w22, #0x1
  404bd8:	b.hi	404da4 <wcrtomb@plt+0x2534>  // b.pmore
  404bdc:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404be0:	ldr	x8, [x8, #1264]
  404be4:	cmp	x8, #0x2
  404be8:	b.cc	404da4 <wcrtomb@plt+0x2534>  // b.lo, b.ul, b.last
  404bec:	ldp	x21, x8, [x29, #-168]
  404bf0:	add	x0, x21, #0x1
  404bf4:	str	x8, [sp, #8]
  404bf8:	bl	4155d4 <wcrtomb@plt+0x12d64>
  404bfc:	mov	x26, x0
  404c00:	stur	xzr, [x29, #-24]
  404c04:	str	x0, [sp, #16]
  404c08:	cbz	x21, 404d78 <wcrtomb@plt+0x2508>
  404c0c:	ldp	x27, x26, [sp, #8]
  404c10:	b	404c58 <wcrtomb@plt+0x23e8>
  404c14:	sub	x2, x29, #0x18
  404c18:	mov	x0, x27
  404c1c:	mov	x1, x21
  404c20:	bl	417e8c <wcrtomb@plt+0x1561c>
  404c24:	mov	x28, x0
  404c28:	cmp	x28, #0x10
  404c2c:	b.hi	404d9c <wcrtomb@plt+0x252c>  // b.pmore
  404c30:	mov	x0, x26
  404c34:	mov	x1, x27
  404c38:	mov	x2, x28
  404c3c:	bl	402210 <memcpy@plt>
  404c40:	adrp	x25, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  404c44:	add	x26, x26, x28
  404c48:	subs	x21, x21, x28
  404c4c:	add	x27, x27, x28
  404c50:	add	x25, x25, #0x8b8
  404c54:	b.eq	404d78 <wcrtomb@plt+0x2508>  // b.none
  404c58:	ldrb	w8, [x27]
  404c5c:	sub	w9, w8, #0x24
  404c60:	cmp	w9, #0x58
  404c64:	b.hi	404c8c <wcrtomb@plt+0x241c>  // b.pmore
  404c68:	adrp	x12, 428000 <_obstack_memory_used@@Base+0xfd70>
  404c6c:	add	x12, x12, #0x3ce
  404c70:	adr	x10, 404c80 <wcrtomb@plt+0x2410>
  404c74:	ldrb	w11, [x12, x9]
  404c78:	add	x10, x10, x11, lsl #2
  404c7c:	br	x10
  404c80:	ldr	w9, [sp, #36]
  404c84:	cmp	w9, #0x1
  404c88:	b.ge	404d9c <wcrtomb@plt+0x252c>  // b.tcont
  404c8c:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  404c90:	add	x8, x25, x8
  404c94:	ldrb	w9, [x9, #3518]
  404c98:	ldrsb	w28, [x8, #3]
  404c9c:	cbz	w9, 404cb0 <wcrtomb@plt+0x2440>
  404ca0:	tbnz	w28, #31, 404cc8 <wcrtomb@plt+0x2458>
  404ca4:	tbnz	w28, #31, 404d9c <wcrtomb@plt+0x252c>
  404ca8:	sxtw	x28, w28
  404cac:	b	404c30 <wcrtomb@plt+0x23c0>
  404cb0:	cmn	w28, #0x2
  404cb4:	b.eq	404c14 <wcrtomb@plt+0x23a4>  // b.none
  404cb8:	sxtw	x28, w28
  404cbc:	cmp	x28, #0x10
  404cc0:	b.ls	404c30 <wcrtomb@plt+0x23c0>  // b.plast
  404cc4:	b	404d9c <wcrtomb@plt+0x252c>
  404cc8:	sub	x0, x29, #0xc
  404ccc:	sub	x3, x29, #0x18
  404cd0:	mov	x1, x27
  404cd4:	mov	x2, x21
  404cd8:	bl	417eb0 <wcrtomb@plt+0x15640>
  404cdc:	cmp	x0, #0x10
  404ce0:	b.hi	404d9c <wcrtomb@plt+0x252c>  // b.pmore
  404ce4:	mov	x28, x0
  404ce8:	ldur	w0, [x29, #-12]
  404cec:	sub	x1, x29, #0x98
  404cf0:	bl	411134 <wcrtomb@plt+0xe8c4>
  404cf4:	cbnz	w0, 404d9c <wcrtomb@plt+0x252c>
  404cf8:	sub	x25, x27, #0x1
  404cfc:	mov	x23, x28
  404d00:	cmp	x23, #0x2
  404d04:	b.lt	404ca4 <wcrtomb@plt+0x2434>  // b.tstop
  404d08:	ldrb	w24, [x25, x23]
  404d0c:	sub	x23, x23, #0x1
  404d10:	bl	4024d0 <__ctype_toupper_loc@plt>
  404d14:	ldr	x8, [x0]
  404d18:	ldr	w8, [x8, x24, lsl #2]
  404d1c:	cmp	w8, w24
  404d20:	b.eq	404d00 <wcrtomb@plt+0x2490>  // b.none
  404d24:	b	404d9c <wcrtomb@plt+0x252c>
  404d28:	cmp	x21, #0x2
  404d2c:	b.cc	404d6c <wcrtomb@plt+0x24fc>  // b.lo, b.ul, b.last
  404d30:	ldrb	w8, [x27, #1]!
  404d34:	sub	w9, w8, #0xa
  404d38:	cmp	w9, #0x72
  404d3c:	b.hi	404d64 <wcrtomb@plt+0x24f4>  // b.pmore
  404d40:	adrp	x12, 428000 <_obstack_memory_used@@Base+0xfd70>
  404d44:	add	x12, x12, #0x427
  404d48:	adr	x10, 404d58 <wcrtomb@plt+0x24e8>
  404d4c:	ldrb	w11, [x12, x9]
  404d50:	add	x10, x10, x11, lsl #2
  404d54:	br	x10
  404d58:	ldr	w9, [sp, #36]
  404d5c:	cmp	w9, #0x1
  404d60:	b.lt	404fd0 <wcrtomb@plt+0x2760>  // b.tstop
  404d64:	sub	x21, x21, #0x1
  404d68:	b	404c8c <wcrtomb@plt+0x241c>
  404d6c:	mov	w8, #0x5c                  	// #92
  404d70:	mov	w21, #0x1                   	// #1
  404d74:	b	404c8c <wcrtomb@plt+0x241c>
  404d78:	ldr	x1, [sp, #16]
  404d7c:	ldur	x8, [x29, #-168]
  404d80:	sub	x2, x26, x1
  404d84:	cmp	x8, x2
  404d88:	b.eq	404d98 <wcrtomb@plt+0x2528>  // b.none
  404d8c:	ldr	x0, [sp, #8]
  404d90:	stur	x2, [x29, #-168]
  404d94:	bl	402210 <memcpy@plt>
  404d98:	mov	w22, #0x2                   	// #2
  404d9c:	ldr	x0, [sp, #16]
  404da0:	bl	402620 <free@plt>
  404da4:	ldr	w24, [sp, #28]
  404da8:	adrp	x23, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404dac:	adrp	x9, 428000 <_obstack_memory_used@@Base+0xfd70>
  404db0:	sxtw	x8, w22
  404db4:	add	x9, x9, #0x4e8
  404db8:	add	x8, x9, x8, lsl #5
  404dbc:	ldp	x1, x0, [x29, #-168]
  404dc0:	ldp	x10, x9, [x8, #16]
  404dc4:	ldrsw	x2, [x8, #12]
  404dc8:	adrp	x21, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404dcc:	str	x9, [x21, #1416]
  404dd0:	blr	x10
  404dd4:	adrp	x10, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  404dd8:	ldrb	w10, [x10, #2228]
  404ddc:	ldr	x11, [x21, #1416]
  404de0:	sub	x9, x29, #0x18
  404de4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404de8:	orr	x1, x9, #0x1
  404dec:	sub	x3, x29, #0x98
  404df0:	mov	w2, #0x1                   	// #1
  404df4:	mov	x4, xzr
  404df8:	sturb	wzr, [x29, #-24]
  404dfc:	str	x0, [x8, #1424]
  404e00:	sturb	w10, [x29, #-23]
  404e04:	sturb	wzr, [x29, #-22]
  404e08:	blr	x11
  404e0c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404e10:	ldrb	w8, [x8, #1204]
  404e14:	ldr	w10, [x23, #1088]
  404e18:	cmp	x0, #0x0
  404e1c:	cset	w11, eq  // eq = none
  404e20:	eor	w8, w8, w11
  404e24:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404e28:	eor	w8, w8, #0x1
  404e2c:	sub	w20, w20, w10
  404e30:	strb	w8, [x9, #1432]
  404e34:	cbnz	w24, 404e54 <wcrtomb@plt+0x25e4>
  404e38:	cmp	w20, #0x1
  404e3c:	b.gt	404e54 <wcrtomb@plt+0x25e4>
  404e40:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404e44:	ldr	w8, [x8, #848]
  404e48:	cmp	w8, #0x3
  404e4c:	csetm	w8, eq  // eq = none
  404e50:	b	404e5c <wcrtomb@plt+0x25ec>
  404e54:	mvn	w8, w24
  404e58:	lsr	w8, w8, #31
  404e5c:	ldr	x21, [sp]
  404e60:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404e64:	mov	w0, #0x1e                  	// #30
  404e68:	str	w8, [x9, #1436]
  404e6c:	bl	4026f0 <sysconf@plt>
  404e70:	cmp	x0, #0x1
  404e74:	b.lt	4050b4 <wcrtomb@plt+0x2844>  // b.tstop
  404e78:	mov	x8, #0x7ffffffffffffffc    	// #9223372036854775804
  404e7c:	cmp	x0, x8
  404e80:	b.cs	4050b4 <wcrtomb@plt+0x2844>  // b.hs, b.nlast
  404e84:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404e88:	mov	w9, #0x18000               	// #98304
  404e8c:	str	x0, [x8, #1440]
  404e90:	udiv	x8, x9, x0
  404e94:	msub	x8, x8, x0, x9
  404e98:	sub	x10, x0, x8
  404e9c:	cmp	x8, #0x0
  404ea0:	add	x8, x10, #0x18, lsl #12
  404ea4:	csel	x8, x9, x8, eq  // eq = none
  404ea8:	add	x8, x0, x8
  404eac:	add	x0, x8, #0x8
  404eb0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404eb4:	str	x0, [x8, #1448]
  404eb8:	bl	4155d4 <wcrtomb@plt+0x12d64>
  404ebc:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404ec0:	ldrb	w8, [x8, #1200]
  404ec4:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404ec8:	str	x0, [x9, #1456]
  404ecc:	cmp	w8, #0x1
  404ed0:	b.ne	404ee8 <wcrtomb@plt+0x2678>  // b.any
  404ed4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404ed8:	ldr	w9, [x8, #1180]
  404edc:	cbnz	w9, 404ee8 <wcrtomb@plt+0x2678>
  404ee0:	mov	w9, #0x1                   	// #1
  404ee4:	str	w9, [x8, #1180]
  404ee8:	cmp	w20, #0x1
  404eec:	b.lt	404efc <wcrtomb@plt+0x268c>  // b.tstop
  404ef0:	ldrsw	x8, [x23, #1088]
  404ef4:	add	x21, x19, x8, lsl #3
  404ef8:	b	404f34 <wcrtomb@plt+0x26c4>
  404efc:	ldr	w8, [sp, #32]
  404f00:	cmp	w21, w8
  404f04:	adrp	x21, 428000 <_obstack_memory_used@@Base+0xfd70>
  404f08:	add	x21, x21, #0x5b8
  404f0c:	b.ge	404f34 <wcrtomb@plt+0x26c4>  // b.tcont
  404f10:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404f14:	ldr	w8, [x8, #848]
  404f18:	cmp	w8, #0x3
  404f1c:	b.ne	404f34 <wcrtomb@plt+0x26c4>  // b.any
  404f20:	adrp	x21, 428000 <_obstack_memory_used@@Base+0xfd70>
  404f24:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404f28:	mov	w9, #0x1                   	// #1
  404f2c:	add	x21, x21, #0x5a8
  404f30:	strb	w9, [x8, #1464]
  404f34:	ldr	x20, [x21], #8
  404f38:	adrp	x19, 429000 <_obstack_memory_used@@Base+0x10d70>
  404f3c:	mov	w22, #0x1                   	// #1
  404f40:	add	x19, x19, #0xd0a
  404f44:	adrp	x23, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404f48:	adrp	x24, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404f4c:	b	404f74 <wcrtomb@plt+0x2704>
  404f50:	mov	w0, #0xffffff9c            	// #-100
  404f54:	mov	w2, #0x1                   	// #1
  404f58:	mov	w3, #0x1                   	// #1
  404f5c:	mov	x1, x20
  404f60:	str	x20, [x24, #1488]
  404f64:	bl	406778 <wcrtomb@plt+0x3f08>
  404f68:	ldr	x20, [x21], #8
  404f6c:	and	w22, w22, w0
  404f70:	cbz	x20, 404f98 <wcrtomb@plt+0x2728>
  404f74:	mov	x0, x20
  404f78:	mov	x1, x19
  404f7c:	bl	402600 <strcmp@plt>
  404f80:	cbnz	w0, 404f50 <wcrtomb@plt+0x26e0>
  404f84:	ldr	x8, [x23, #1256]
  404f88:	mov	w1, #0x1                   	// #1
  404f8c:	str	x8, [x24, #1488]
  404f90:	bl	405358 <wcrtomb@plt+0x2ae8>
  404f94:	b	404f68 <wcrtomb@plt+0x26f8>
  404f98:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  404f9c:	ldrb	w8, [x8, #1465]
  404fa0:	and	w9, w22, #0x1
  404fa4:	cmp	w8, #0x0
  404fa8:	mov	w8, #0x2                   	// #2
  404fac:	csel	w0, w8, w9, ne  // ne = any
  404fb0:	ldp	x20, x19, [sp, #432]
  404fb4:	ldp	x22, x21, [sp, #416]
  404fb8:	ldp	x24, x23, [sp, #400]
  404fbc:	ldp	x26, x25, [sp, #384]
  404fc0:	ldp	x28, x27, [sp, #368]
  404fc4:	ldp	x29, x30, [sp, #352]
  404fc8:	add	sp, sp, #0x1c0
  404fcc:	ret
  404fd0:	mov	w22, wzr
  404fd4:	b	404d9c <wcrtomb@plt+0x252c>
  404fd8:	mov	w0, #0x2                   	// #2
  404fdc:	bl	40360c <wcrtomb@plt+0xd9c>
  404fe0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  404fe4:	add	x1, x1, #0xfc3
  404fe8:	mov	w2, #0x5                   	// #5
  404fec:	mov	x0, xzr
  404ff0:	bl	402740 <dcgettext@plt>
  404ff4:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  404ff8:	mov	x4, x0
  404ffc:	add	x2, x2, #0xd6
  405000:	sub	x3, x29, #0x98
  405004:	mov	w0, #0x2                   	// #2
  405008:	mov	w1, wzr
  40500c:	bl	4022a0 <error@plt>
  405010:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  405014:	add	x1, x1, #0xfc3
  405018:	mov	w2, #0x5                   	// #5
  40501c:	mov	x0, xzr
  405020:	bl	402740 <dcgettext@plt>
  405024:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  405028:	mov	x4, x0
  40502c:	add	x2, x2, #0xd6
  405030:	mov	w0, #0x2                   	// #2
  405034:	mov	w1, wzr
  405038:	mov	x3, x26
  40503c:	bl	4022a0 <error@plt>
  405040:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  405044:	add	x1, x1, #0xd25
  405048:	b	405070 <wcrtomb@plt+0x2800>
  40504c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  405050:	add	x1, x1, #0xcd4
  405054:	b	405070 <wcrtomb@plt+0x2800>
  405058:	bl	4027e0 <__errno_location@plt>
  40505c:	ldr	w1, [x0]
  405060:	ldr	x3, [x22, #1080]
  405064:	b	40509c <wcrtomb@plt+0x282c>
  405068:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  40506c:	add	x1, x1, #0xd0c
  405070:	mov	w2, #0x5                   	// #5
  405074:	mov	x0, xzr
  405078:	bl	402740 <dcgettext@plt>
  40507c:	mov	x2, x0
  405080:	mov	w0, #0x2                   	// #2
  405084:	mov	w1, wzr
  405088:	bl	4022a0 <error@plt>
  40508c:	bl	4027e0 <__errno_location@plt>
  405090:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405094:	ldr	w1, [x0]
  405098:	ldr	x3, [x8, #1080]
  40509c:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4050a0:	add	x2, x2, #0x1b7
  4050a4:	mov	w0, #0x2                   	// #2
  4050a8:	bl	4022a0 <error@plt>
  4050ac:	mov	w0, wzr
  4050b0:	bl	40360c <wcrtomb@plt+0xd9c>
  4050b4:	bl	402560 <abort@plt>
  4050b8:	bl	415898 <wcrtomb@plt+0x13028>
  4050bc:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4050c0:	ldr	w8, [x8, #1468]
  4050c4:	cbz	w8, 4050cc <wcrtomb@plt+0x285c>
  4050c8:	ret
  4050cc:	b	40a244 <wcrtomb@plt+0x79d4>
  4050d0:	stp	x29, x30, [sp, #-32]!
  4050d4:	stp	x20, x19, [sp, #16]
  4050d8:	mov	w19, w1
  4050dc:	adrp	x1, 428000 <_obstack_memory_used@@Base+0xfd70>
  4050e0:	add	x1, x1, #0x4e8
  4050e4:	mov	x29, sp
  4050e8:	mov	x20, x0
  4050ec:	bl	402600 <strcmp@plt>
  4050f0:	cbz	w0, 405180 <wcrtomb@plt+0x2910>
  4050f4:	adrp	x1, 428000 <_obstack_memory_used@@Base+0xfd70>
  4050f8:	add	x1, x1, #0x508
  4050fc:	mov	x0, x20
  405100:	bl	402600 <strcmp@plt>
  405104:	cbz	w0, 405164 <wcrtomb@plt+0x28f4>
  405108:	adrp	x1, 428000 <_obstack_memory_used@@Base+0xfd70>
  40510c:	add	x1, x1, #0x528
  405110:	mov	x0, x20
  405114:	bl	402600 <strcmp@plt>
  405118:	cbz	w0, 405170 <wcrtomb@plt+0x2900>
  40511c:	adrp	x1, 428000 <_obstack_memory_used@@Base+0xfd70>
  405120:	add	x1, x1, #0x548
  405124:	mov	x0, x20
  405128:	bl	402600 <strcmp@plt>
  40512c:	cbz	w0, 40517c <wcrtomb@plt+0x290c>
  405130:	adrp	x1, 428000 <_obstack_memory_used@@Base+0xfd70>
  405134:	add	x1, x1, #0x568
  405138:	mov	x0, x20
  40513c:	bl	402600 <strcmp@plt>
  405140:	cbz	w0, 405198 <wcrtomb@plt+0x2928>
  405144:	adrp	x1, 428000 <_obstack_memory_used@@Base+0xfd70>
  405148:	add	x1, x1, #0x588
  40514c:	mov	x0, x20
  405150:	bl	402600 <strcmp@plt>
  405154:	cbnz	w0, 4051c8 <wcrtomb@plt+0x2958>
  405158:	mov	w0, #0x5                   	// #5
  40515c:	tbz	w19, #31, 405184 <wcrtomb@plt+0x2914>
  405160:	b	40518c <wcrtomb@plt+0x291c>
  405164:	mov	w0, #0x1                   	// #1
  405168:	tbz	w19, #31, 405184 <wcrtomb@plt+0x2914>
  40516c:	b	40518c <wcrtomb@plt+0x291c>
  405170:	mov	w0, #0x2                   	// #2
  405174:	tbz	w19, #31, 405184 <wcrtomb@plt+0x2914>
  405178:	b	40518c <wcrtomb@plt+0x291c>
  40517c:	mov	w0, #0x3                   	// #3
  405180:	tbnz	w19, #31, 40518c <wcrtomb@plt+0x291c>
  405184:	cmp	w0, w19
  405188:	b.ne	4051a4 <wcrtomb@plt+0x2934>  // b.any
  40518c:	ldp	x20, x19, [sp, #16]
  405190:	ldp	x29, x30, [sp], #32
  405194:	ret
  405198:	mov	w0, #0x4                   	// #4
  40519c:	tbz	w19, #31, 405184 <wcrtomb@plt+0x2914>
  4051a0:	b	40518c <wcrtomb@plt+0x291c>
  4051a4:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  4051a8:	add	x1, x1, #0xfe3
  4051ac:	mov	w2, #0x5                   	// #5
  4051b0:	mov	x0, xzr
  4051b4:	bl	402740 <dcgettext@plt>
  4051b8:	mov	x2, x0
  4051bc:	mov	w0, #0x2                   	// #2
  4051c0:	mov	w1, wzr
  4051c4:	bl	4022a0 <error@plt>
  4051c8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  4051cc:	add	x1, x1, #0xcf7
  4051d0:	mov	x0, x20
  4051d4:	bl	402600 <strcmp@plt>
  4051d8:	cbnz	w0, 4051e8 <wcrtomb@plt+0x2978>
  4051dc:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4051e0:	add	x1, x1, #0x2
  4051e4:	b	4051ac <wcrtomb@plt+0x293c>
  4051e8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4051ec:	add	x1, x1, #0x3f
  4051f0:	mov	w2, #0x5                   	// #5
  4051f4:	mov	x0, xzr
  4051f8:	bl	402740 <dcgettext@plt>
  4051fc:	mov	x2, x0
  405200:	mov	w0, #0x2                   	// #2
  405204:	mov	w1, wzr
  405208:	mov	x3, x20
  40520c:	bl	4022a0 <error@plt>
  405210:	stp	x29, x30, [sp, #-64]!
  405214:	stp	x22, x21, [sp, #32]
  405218:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40521c:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405220:	ldr	x9, [x8, #1472]
  405224:	ldr	x10, [x22, #1128]
  405228:	stp	x20, x19, [sp, #48]
  40522c:	mov	x21, x2
  405230:	mov	x19, x1
  405234:	cmp	x9, x10
  405238:	mov	x20, x0
  40523c:	stp	x24, x23, [sp, #16]
  405240:	mov	x29, sp
  405244:	b.ls	405254 <wcrtomb@plt+0x29e4>  // b.plast
  405248:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40524c:	ldr	x0, [x8, #1136]
  405250:	b	4052a4 <wcrtomb@plt+0x2a34>
  405254:	adrp	x23, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405258:	ldr	x0, [x23, #1136]
  40525c:	cbz	x0, 40527c <wcrtomb@plt+0x2a0c>
  405260:	mov	x10, #0x5555555555555555    	// #6148914691236517205
  405264:	movk	x10, #0x555, lsl #48
  405268:	cmp	x9, x10
  40526c:	b.cs	405288 <wcrtomb@plt+0x2a18>  // b.hs, b.nlast
  405270:	add	x9, x9, x9, lsr #1
  405274:	add	x9, x9, #0x1
  405278:	b	405290 <wcrtomb@plt+0x2a20>
  40527c:	cbz	x9, 40528c <wcrtomb@plt+0x2a1c>
  405280:	lsr	x10, x9, #59
  405284:	cbz	x10, 405290 <wcrtomb@plt+0x2a20>
  405288:	bl	415898 <wcrtomb@plt+0x13028>
  40528c:	mov	w9, #0x8                   	// #8
  405290:	lsl	x1, x9, #4
  405294:	str	x9, [x8, #1472]
  405298:	bl	415654 <wcrtomb@plt+0x12de4>
  40529c:	ldr	x10, [x22, #1128]
  4052a0:	str	x0, [x23, #1136]
  4052a4:	adrp	x23, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4052a8:	ldr	x24, [x23, #1264]
  4052ac:	add	x8, x0, x10, lsl #4
  4052b0:	add	x9, x10, #0x1
  4052b4:	mov	w1, #0xa                   	// #10
  4052b8:	add	x10, x24, #0x1
  4052bc:	mov	x0, x20
  4052c0:	mov	x2, x19
  4052c4:	stp	x21, x10, [x8]
  4052c8:	str	x9, [x22, #1128]
  4052cc:	bl	4026d0 <memchr@plt>
  4052d0:	mov	x21, xzr
  4052d4:	cbz	x0, 4052f4 <wcrtomb@plt+0x2a84>
  4052d8:	add	x19, x20, x19
  4052dc:	add	x0, x0, #0x1
  4052e0:	sub	x2, x19, x0
  4052e4:	mov	w1, #0xa                   	// #10
  4052e8:	add	x21, x21, #0x1
  4052ec:	bl	4026d0 <memchr@plt>
  4052f0:	cbnz	x0, 4052dc <wcrtomb@plt+0x2a6c>
  4052f4:	add	x8, x21, x24
  4052f8:	str	x8, [x23, #1264]
  4052fc:	ldp	x20, x19, [sp, #48]
  405300:	ldp	x22, x21, [sp, #32]
  405304:	ldp	x24, x23, [sp, #16]
  405308:	ldp	x29, x30, [sp], #64
  40530c:	ret
  405310:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405314:	ldr	x8, [x8, #872]
  405318:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40531c:	str	x8, [x9, #864]
  405320:	ret
  405324:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405328:	mov	w9, #0xffffffff            	// #-1
  40532c:	str	w9, [x8, #1208]
  405330:	ret
  405334:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x11d70>
  405338:	adrp	x11, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40533c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405340:	add	x9, x9, #0x8d
  405344:	adrp	x10, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405348:	add	x11, x11, #0x93
  40534c:	str	x9, [x8, #936]
  405350:	str	x11, [x10, #944]
  405354:	ret
  405358:	sub	sp, sp, #0x1a0
  40535c:	stp	x28, x27, [sp, #336]
  405360:	mov	w27, w0
  405364:	stp	x20, x19, [sp, #400]
  405368:	mov	w20, w1
  40536c:	add	x2, sp, #0x38
  405370:	mov	w0, wzr
  405374:	mov	w1, w27
  405378:	stp	x29, x30, [sp, #320]
  40537c:	stp	x26, x25, [sp, #352]
  405380:	stp	x24, x23, [sp, #368]
  405384:	stp	x22, x21, [sp, #384]
  405388:	add	x29, sp, #0x140
  40538c:	bl	402720 <__fxstat@plt>
  405390:	adrp	x21, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405394:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405398:	cbz	w0, 405478 <wcrtomb@plt+0x2c08>
  40539c:	bl	4027e0 <__errno_location@plt>
  4053a0:	ldrb	w8, [x21, #1201]
  4053a4:	tbnz	w8, #0, 4053e8 <wcrtomb@plt+0x2b78>
  4053a8:	adrp	x19, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4053ac:	ldr	x3, [x19, #1488]
  4053b0:	ldr	w20, [x0]
  4053b4:	cbnz	x3, 4053d4 <wcrtomb@plt+0x2b64>
  4053b8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4053bc:	add	x1, x1, #0xf6
  4053c0:	mov	w2, #0x5                   	// #5
  4053c4:	mov	x0, xzr
  4053c8:	bl	402740 <dcgettext@plt>
  4053cc:	mov	x3, x0
  4053d0:	str	x0, [x19, #1488]
  4053d4:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4053d8:	add	x2, x2, #0x1b7
  4053dc:	mov	w0, wzr
  4053e0:	mov	w1, w20
  4053e4:	bl	4022a0 <error@plt>
  4053e8:	mov	w23, #0x1                   	// #1
  4053ec:	strb	w23, [x22, #1465]
  4053f0:	cbz	w27, 405454 <wcrtomb@plt+0x2be4>
  4053f4:	mov	w0, w27
  4053f8:	bl	4024f0 <close@plt>
  4053fc:	cbz	w0, 405454 <wcrtomb@plt+0x2be4>
  405400:	bl	4027e0 <__errno_location@plt>
  405404:	ldrb	w8, [x21, #1201]
  405408:	tbnz	w8, #0, 40544c <wcrtomb@plt+0x2bdc>
  40540c:	adrp	x20, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405410:	ldr	x3, [x20, #1488]
  405414:	ldr	w19, [x0]
  405418:	cbnz	x3, 405438 <wcrtomb@plt+0x2bc8>
  40541c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  405420:	add	x1, x1, #0xf6
  405424:	mov	w2, #0x5                   	// #5
  405428:	mov	x0, xzr
  40542c:	bl	402740 <dcgettext@plt>
  405430:	mov	x3, x0
  405434:	str	x0, [x20, #1488]
  405438:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40543c:	add	x2, x2, #0x1b7
  405440:	mov	w0, wzr
  405444:	mov	w1, w19
  405448:	bl	4022a0 <error@plt>
  40544c:	mov	w8, #0x1                   	// #1
  405450:	strb	w8, [x22, #1465]
  405454:	and	w0, w23, #0x1
  405458:	ldp	x20, x19, [sp, #400]
  40545c:	ldp	x22, x21, [sp, #384]
  405460:	ldp	x24, x23, [sp, #368]
  405464:	ldp	x26, x25, [sp, #352]
  405468:	ldp	x28, x27, [sp, #336]
  40546c:	ldp	x29, x30, [sp, #320]
  405470:	add	sp, sp, #0x1a0
  405474:	ret
  405478:	cbz	w27, 40552c <wcrtomb@plt+0x2cbc>
  40547c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405480:	ldr	w8, [x8, #1180]
  405484:	cmp	w8, #0x2
  405488:	b.eq	405494 <wcrtomb@plt+0x2c24>  // b.none
  40548c:	cbnz	w8, 4054c8 <wcrtomb@plt+0x2c58>
  405490:	tbnz	w20, #0, 4054c8 <wcrtomb@plt+0x2c58>
  405494:	ldr	w8, [sp, #72]
  405498:	mov	w23, #0x1                   	// #1
  40549c:	and	w8, w8, #0xf000
  4054a0:	cmp	w8, #0x6, lsl #12
  4054a4:	b.ge	4054bc <wcrtomb@plt+0x2c4c>  // b.tcont
  4054a8:	cmp	w8, #0x1, lsl #12
  4054ac:	b.eq	4053f4 <wcrtomb@plt+0x2b84>  // b.none
  4054b0:	cmp	w8, #0x2, lsl #12
  4054b4:	b.eq	4053f4 <wcrtomb@plt+0x2b84>  // b.none
  4054b8:	b	4054c8 <wcrtomb@plt+0x2c58>
  4054bc:	b.eq	4053f4 <wcrtomb@plt+0x2b84>  // b.none
  4054c0:	cmp	w8, #0xc, lsl #12
  4054c4:	b.eq	4053f4 <wcrtomb@plt+0x2b84>  // b.none
  4054c8:	tbz	w20, #0, 40552c <wcrtomb@plt+0x2cbc>
  4054cc:	ldr	w8, [sp, #72]
  4054d0:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4054d4:	ldr	x1, [x9, #1488]
  4054d8:	and	w8, w8, #0xf000
  4054dc:	cmp	w8, #0x4, lsl #12
  4054e0:	b.ne	405514 <wcrtomb@plt+0x2ca4>  // b.any
  4054e4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4054e8:	ldr	w8, [x8, #848]
  4054ec:	cmp	w8, #0x4
  4054f0:	b.eq	40565c <wcrtomb@plt+0x2dec>  // b.none
  4054f4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4054f8:	ldrb	w8, [x8, #1464]
  4054fc:	tbnz	w8, #0, 40552c <wcrtomb@plt+0x2cbc>
  405500:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405504:	add	x8, x8, #0x4d0
  405508:	ldr	x0, [x8, #8]
  40550c:	cbnz	x0, 405524 <wcrtomb@plt+0x2cb4>
  405510:	b	40552c <wcrtomb@plt+0x2cbc>
  405514:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405518:	add	x8, x8, #0x4c0
  40551c:	ldr	x0, [x8, #8]
  405520:	cbz	x0, 40552c <wcrtomb@plt+0x2cbc>
  405524:	bl	4115a8 <wcrtomb@plt+0xed38>
  405528:	tbnz	w0, #0, 40565c <wcrtomb@plt+0x2dec>
  40552c:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405530:	ldr	w8, [x9, #1436]
  405534:	tbz	w8, #31, 40554c <wcrtomb@plt+0x2cdc>
  405538:	ldr	w8, [sp, #72]
  40553c:	and	w8, w8, #0xf000
  405540:	cmp	w8, #0x4, lsl #12
  405544:	cset	w8, eq  // eq = none
  405548:	str	w8, [x9, #1436]
  40554c:	adrp	x28, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405550:	ldr	w8, [x28, #848]
  405554:	cbz	w27, 405640 <wcrtomb@plt+0x2dd0>
  405558:	cmp	w8, #0x3
  40555c:	b.ne	405640 <wcrtomb@plt+0x2dd0>  // b.any
  405560:	ldr	w9, [sp, #72]
  405564:	and	w9, w9, #0xf000
  405568:	cmp	w9, #0x4, lsl #12
  40556c:	b.ne	405640 <wcrtomb@plt+0x2dd0>  // b.any
  405570:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405574:	ldrb	w8, [x8, #1200]
  405578:	mov	w9, #0x319                 	// #793
  40557c:	mov	w10, #0x30a                 	// #778
  405580:	mov	w0, w27
  405584:	cmp	w8, #0x0
  405588:	csel	w8, w10, w9, ne  // ne = any
  40558c:	orr	w9, w20, #0xfffffffe
  405590:	and	w21, w8, w9
  405594:	bl	4024f0 <close@plt>
  405598:	cbz	w0, 4055fc <wcrtomb@plt+0x2d8c>
  40559c:	bl	4027e0 <__errno_location@plt>
  4055a0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4055a4:	ldrb	w8, [x8, #1201]
  4055a8:	tbnz	w8, #0, 4055f4 <wcrtomb@plt+0x2d84>
  4055ac:	mov	x23, x22
  4055b0:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4055b4:	ldr	x3, [x22, #1488]
  4055b8:	ldr	w19, [x0]
  4055bc:	cbnz	x3, 4055dc <wcrtomb@plt+0x2d6c>
  4055c0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4055c4:	add	x1, x1, #0xf6
  4055c8:	mov	w2, #0x5                   	// #5
  4055cc:	mov	x0, xzr
  4055d0:	bl	402740 <dcgettext@plt>
  4055d4:	mov	x3, x0
  4055d8:	str	x0, [x22, #1488]
  4055dc:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4055e0:	add	x2, x2, #0x1b7
  4055e4:	mov	w0, wzr
  4055e8:	mov	w1, w19
  4055ec:	bl	4022a0 <error@plt>
  4055f0:	mov	x22, x23
  4055f4:	mov	w8, #0x1                   	// #1
  4055f8:	strb	w8, [x22, #1465]
  4055fc:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405600:	ldr	x8, [x22, #1488]
  405604:	add	x0, sp, #0x28
  405608:	mov	w1, w21
  40560c:	mov	x2, xzr
  405610:	stp	x8, xzr, [sp, #40]
  405614:	bl	415e84 <wcrtomb@plt+0x13614>
  405618:	cbz	x0, 406774 <wcrtomb@plt+0x3f04>
  40561c:	mov	x19, x0
  405620:	bl	416694 <wcrtomb@plt+0x13e24>
  405624:	mov	w24, #0x1                   	// #1
  405628:	cbz	x0, 405978 <wcrtomb@plt+0x3108>
  40562c:	adrp	x21, 428000 <_obstack_memory_used@@Base+0xfd70>
  405630:	mov	x25, x0
  405634:	add	x21, x21, #0x49a
  405638:	mov	w23, #0x1                   	// #1
  40563c:	b	40568c <wcrtomb@plt+0x2e1c>
  405640:	cbz	w27, 405a4c <wcrtomb@plt+0x31dc>
  405644:	cmp	w8, #0x4
  405648:	b.ne	405938 <wcrtomb@plt+0x30c8>  // b.any
  40564c:	ldr	w8, [sp, #72]
  405650:	and	w8, w8, #0xf000
  405654:	cmp	w8, #0x4, lsl #12
  405658:	b.ne	405938 <wcrtomb@plt+0x30c8>  // b.any
  40565c:	mov	w23, #0x1                   	// #1
  405660:	b	4053f4 <wcrtomb@plt+0x2b84>
  405664:	mov	w2, #0x4                   	// #4
  405668:	mov	x0, x19
  40566c:	mov	x1, x25
  405670:	bl	417af4 <wcrtomb@plt+0x15284>
  405674:	mov	w0, #0x1                   	// #1
  405678:	and	w23, w23, w0
  40567c:	mov	x0, x19
  405680:	bl	416694 <wcrtomb@plt+0x13e24>
  405684:	mov	x25, x0
  405688:	cbz	x0, 40597c <wcrtomb@plt+0x310c>
  40568c:	ldr	x9, [x25, #88]
  405690:	ldrh	w8, [x25, #108]
  405694:	cmp	x9, #0x0
  405698:	cset	w9, eq  // eq = none
  40569c:	cmp	w8, #0x6
  4056a0:	b.eq	405674 <wcrtomb@plt+0x2e04>  // b.none
  4056a4:	and	w26, w9, w20
  4056a8:	tbz	w26, #0, 4056e4 <wcrtomb@plt+0x2e74>
  4056ac:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4056b0:	ldrb	w8, [x8, #1464]
  4056b4:	ldr	x3, [x25, #56]
  4056b8:	cmp	w8, #0x1
  4056bc:	str	x3, [x22, #1488]
  4056c0:	b.ne	4056d4 <wcrtomb@plt+0x2e64>  // b.any
  4056c4:	ldrb	w8, [x3, #1]
  4056c8:	cbz	w8, 4056d4 <wcrtomb@plt+0x2e64>
  4056cc:	add	x3, x3, #0x2
  4056d0:	str	x3, [x22, #1488]
  4056d4:	ldr	w8, [x19, #72]
  4056d8:	tbnz	w8, #1, 405730 <wcrtomb@plt+0x2ec0>
  4056dc:	and	w27, w8, w26
  4056e0:	b	405734 <wcrtomb@plt+0x2ec4>
  4056e4:	cmp	w8, #0x4
  4056e8:	b.hi	405888 <wcrtomb@plt+0x3018>  // b.pmore
  4056ec:	lsl	w8, w24, w8
  4056f0:	mov	w9, #0x16                  	// #22
  4056f4:	tst	w8, w9
  4056f8:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4056fc:	add	x8, x8, #0x4c0
  405700:	b.eq	405718 <wcrtomb@plt+0x2ea8>  // b.none
  405704:	ldr	w8, [x28, #848]
  405708:	cmp	w8, #0x4
  40570c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405710:	add	x8, x8, #0x4d0
  405714:	b.eq	405664 <wcrtomb@plt+0x2df4>  // b.none
  405718:	ldr	x0, [x8]
  40571c:	cbz	x0, 4056ac <wcrtomb@plt+0x2e3c>
  405720:	add	x1, x25, #0xf8
  405724:	bl	4115a8 <wcrtomb@plt+0xed38>
  405728:	tbz	w0, #0, 4056ac <wcrtomb@plt+0x2e3c>
  40572c:	b	405664 <wcrtomb@plt+0x2df4>
  405730:	mov	w27, #0x1                   	// #1
  405734:	ldrh	w8, [x25, #108]
  405738:	sub	w8, w8, #0x1
  40573c:	cmp	w8, #0xd
  405740:	b.hi	40674c <wcrtomb@plt+0x3edc>  // b.pmore
  405744:	adr	x9, 405678 <wcrtomb@plt+0x2e08>
  405748:	ldrh	w10, [x21, x8, lsl #1]
  40574c:	add	x9, x9, x10, lsl #2
  405750:	mov	w0, #0x1                   	// #1
  405754:	br	x9
  405758:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40575c:	ldrb	w8, [x8, #1201]
  405760:	tbnz	w8, #0, 40579c <wcrtomb@plt+0x2f2c>
  405764:	ldr	w25, [x25, #64]
  405768:	cbnz	x3, 405788 <wcrtomb@plt+0x2f18>
  40576c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  405770:	mov	w2, #0x5                   	// #5
  405774:	mov	x0, xzr
  405778:	add	x1, x1, #0xf6
  40577c:	bl	402740 <dcgettext@plt>
  405780:	mov	x3, x0
  405784:	str	x0, [x22, #1488]
  405788:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40578c:	mov	w0, wzr
  405790:	mov	w1, w25
  405794:	add	x2, x2, #0x1b7
  405798:	bl	4022a0 <error@plt>
  40579c:	mov	w0, #0x1                   	// #1
  4057a0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4057a4:	strb	w0, [x8, #1465]
  4057a8:	b	405678 <wcrtomb@plt+0x2e08>
  4057ac:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4057b0:	ldr	w8, [x8, #1180]
  4057b4:	cmp	w8, #0x2
  4057b8:	b.eq	4057c8 <wcrtomb@plt+0x2f58>  // b.none
  4057bc:	cbnz	w8, 405870 <wcrtomb@plt+0x3000>
  4057c0:	eor	w8, w26, #0x1
  4057c4:	cbz	w8, 405870 <wcrtomb@plt+0x3000>
  4057c8:	ldr	w8, [x25, #136]
  4057cc:	cbz	w8, 4058b4 <wcrtomb@plt+0x3044>
  4057d0:	add	x24, x25, #0x78
  4057d4:	ldr	w8, [x24, #16]
  4057d8:	and	w8, w8, #0xf000
  4057dc:	cmp	w8, #0x6, lsl #12
  4057e0:	b.ge	40589c <wcrtomb@plt+0x302c>  // b.tcont
  4057e4:	cmp	w8, #0x1, lsl #12
  4057e8:	mov	w24, #0x1                   	// #1
  4057ec:	b.eq	405674 <wcrtomb@plt+0x2e04>  // b.none
  4057f0:	cmp	w8, #0x2, lsl #12
  4057f4:	b.eq	405674 <wcrtomb@plt+0x2e04>  // b.none
  4057f8:	b	405870 <wcrtomb@plt+0x3000>
  4057fc:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405800:	ldrb	w8, [x8, #1201]
  405804:	tbnz	w8, #0, 405674 <wcrtomb@plt+0x2e04>
  405808:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40580c:	mov	w2, #0x5                   	// #5
  405810:	mov	x0, xzr
  405814:	add	x1, x1, #0xcd
  405818:	bl	402740 <dcgettext@plt>
  40581c:	ldr	x25, [x22, #1488]
  405820:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  405824:	mov	x26, x0
  405828:	mov	w2, #0x5                   	// #5
  40582c:	mov	x0, xzr
  405830:	add	x1, x1, #0xdd
  405834:	bl	402740 <dcgettext@plt>
  405838:	mov	x4, x0
  40583c:	mov	w0, wzr
  405840:	mov	w1, wzr
  405844:	mov	x2, x26
  405848:	mov	x3, x25
  40584c:	bl	4022a0 <error@plt>
  405850:	b	405674 <wcrtomb@plt+0x2e04>
  405854:	ldr	w8, [x28, #848]
  405858:	cmp	w8, #0x3
  40585c:	b.eq	405674 <wcrtomb@plt+0x2e04>  // b.none
  405860:	mov	w2, #0x4                   	// #4
  405864:	mov	x0, x19
  405868:	mov	x1, x25
  40586c:	bl	417af4 <wcrtomb@plt+0x15284>
  405870:	ldr	w0, [x19, #44]
  405874:	ldr	x1, [x25, #48]
  405878:	mov	w2, w27
  40587c:	mov	w3, w26
  405880:	bl	406778 <wcrtomb@plt+0x3f08>
  405884:	b	405678 <wcrtomb@plt+0x2e08>
  405888:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40588c:	add	x8, x8, #0x4c0
  405890:	ldr	x0, [x8]
  405894:	cbnz	x0, 405720 <wcrtomb@plt+0x2eb0>
  405898:	b	4056ac <wcrtomb@plt+0x2e3c>
  40589c:	cmp	w8, #0xc, lsl #12
  4058a0:	mov	w24, #0x1                   	// #1
  4058a4:	b.eq	405674 <wcrtomb@plt+0x2e04>  // b.none
  4058a8:	cmp	w8, #0x6, lsl #12
  4058ac:	b.eq	405674 <wcrtomb@plt+0x2e04>  // b.none
  4058b0:	b	405870 <wcrtomb@plt+0x3000>
  4058b4:	ldr	w1, [x19, #44]
  4058b8:	ldr	x2, [x25, #48]
  4058bc:	cmp	w27, #0x0
  4058c0:	mov	w8, #0x100                 	// #256
  4058c4:	csel	w4, wzr, w8, ne  // ne = any
  4058c8:	sub	x3, x29, #0x88
  4058cc:	mov	w0, wzr
  4058d0:	sub	x24, x29, #0x88
  4058d4:	bl	402860 <__fxstatat@plt>
  4058d8:	cbz	w0, 4057d4 <wcrtomb@plt+0x2f64>
  4058dc:	bl	4027e0 <__errno_location@plt>
  4058e0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4058e4:	ldrb	w8, [x8, #1201]
  4058e8:	mov	w24, #0x1                   	// #1
  4058ec:	tbnz	w8, #0, 40592c <wcrtomb@plt+0x30bc>
  4058f0:	ldr	x3, [x22, #1488]
  4058f4:	ldr	w25, [x0]
  4058f8:	cbnz	x3, 405918 <wcrtomb@plt+0x30a8>
  4058fc:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  405900:	mov	w2, #0x5                   	// #5
  405904:	mov	x0, xzr
  405908:	add	x1, x1, #0xf6
  40590c:	bl	402740 <dcgettext@plt>
  405910:	mov	x3, x0
  405914:	str	x0, [x22, #1488]
  405918:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40591c:	mov	w0, wzr
  405920:	mov	w1, w25
  405924:	add	x2, x2, #0x1b7
  405928:	bl	4022a0 <error@plt>
  40592c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405930:	strb	w24, [x8, #1465]
  405934:	b	405674 <wcrtomb@plt+0x2e04>
  405938:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40593c:	ldr	w8, [x8, #1180]
  405940:	cmp	w8, #0x2
  405944:	b.eq	405950 <wcrtomb@plt+0x30e0>  // b.none
  405948:	cbnz	w8, 405a4c <wcrtomb@plt+0x31dc>
  40594c:	tbnz	w20, #0, 405a4c <wcrtomb@plt+0x31dc>
  405950:	ldr	w8, [sp, #72]
  405954:	mov	w23, #0x1                   	// #1
  405958:	and	w8, w8, #0xf000
  40595c:	cmp	w8, #0x6, lsl #12
  405960:	b.ge	405a40 <wcrtomb@plt+0x31d0>  // b.tcont
  405964:	cmp	w8, #0x1, lsl #12
  405968:	b.eq	4053f4 <wcrtomb@plt+0x2b84>  // b.none
  40596c:	cmp	w8, #0x2, lsl #12
  405970:	b.eq	4053f4 <wcrtomb@plt+0x2b84>  // b.none
  405974:	b	405a4c <wcrtomb@plt+0x31dc>
  405978:	mov	w23, #0x1                   	// #1
  40597c:	bl	4027e0 <__errno_location@plt>
  405980:	ldr	w21, [x0]
  405984:	mov	x20, x0
  405988:	cbz	w21, 4059dc <wcrtomb@plt+0x316c>
  40598c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405990:	ldrb	w8, [x8, #1201]
  405994:	tbnz	w8, #0, 4059d0 <wcrtomb@plt+0x3160>
  405998:	ldr	x3, [x22, #1488]
  40599c:	cbnz	x3, 4059bc <wcrtomb@plt+0x314c>
  4059a0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4059a4:	add	x1, x1, #0xf6
  4059a8:	mov	w2, #0x5                   	// #5
  4059ac:	mov	x0, xzr
  4059b0:	bl	402740 <dcgettext@plt>
  4059b4:	mov	x3, x0
  4059b8:	str	x0, [x22, #1488]
  4059bc:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4059c0:	add	x2, x2, #0x1b7
  4059c4:	mov	w0, wzr
  4059c8:	mov	w1, w21
  4059cc:	bl	4022a0 <error@plt>
  4059d0:	mov	w8, #0x1                   	// #1
  4059d4:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4059d8:	strb	w8, [x9, #1465]
  4059dc:	mov	x0, x19
  4059e0:	bl	41652c <wcrtomb@plt+0x13cbc>
  4059e4:	cbz	w0, 405454 <wcrtomb@plt+0x2be4>
  4059e8:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4059ec:	ldrb	w8, [x8, #1201]
  4059f0:	tbnz	w8, #0, 405a30 <wcrtomb@plt+0x31c0>
  4059f4:	ldr	x3, [x22, #1488]
  4059f8:	ldr	w19, [x20]
  4059fc:	cbnz	x3, 405a1c <wcrtomb@plt+0x31ac>
  405a00:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  405a04:	add	x1, x1, #0xf6
  405a08:	mov	w2, #0x5                   	// #5
  405a0c:	mov	x0, xzr
  405a10:	bl	402740 <dcgettext@plt>
  405a14:	mov	x3, x0
  405a18:	str	x0, [x22, #1488]
  405a1c:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  405a20:	add	x2, x2, #0x1b7
  405a24:	mov	w0, wzr
  405a28:	mov	w1, w19
  405a2c:	bl	4022a0 <error@plt>
  405a30:	mov	w8, #0x1                   	// #1
  405a34:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405a38:	strb	w8, [x9, #1465]
  405a3c:	b	405454 <wcrtomb@plt+0x2be4>
  405a40:	b.eq	4053f4 <wcrtomb@plt+0x2b84>  // b.none
  405a44:	cmp	w8, #0xc, lsl #12
  405a48:	b.eq	4053f4 <wcrtomb@plt+0x2b84>  // b.none
  405a4c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405a50:	ldrb	w10, [x8, #1408]
  405a54:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405a58:	adrp	x23, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405a5c:	cbnz	w10, 405b10 <wcrtomb@plt+0x32a0>
  405a60:	ldr	w8, [x8, #1192]
  405a64:	cbnz	w8, 405b10 <wcrtomb@plt+0x32a0>
  405a68:	ldr	x8, [x23, #1152]
  405a6c:	cmp	x8, #0x2
  405a70:	b.lt	405b10 <wcrtomb@plt+0x32a0>  // b.tstop
  405a74:	ldr	w8, [sp, #72]
  405a78:	and	w8, w8, #0xf000
  405a7c:	cmp	w8, #0x8, lsl #12
  405a80:	b.ne	405b10 <wcrtomb@plt+0x32a0>  // b.any
  405a84:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405a88:	ldr	x8, [sp, #64]
  405a8c:	ldr	x9, [x9, #1280]
  405a90:	cmp	x8, x9
  405a94:	b.ne	405b10 <wcrtomb@plt+0x32a0>  // b.any
  405a98:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405a9c:	ldr	x8, [sp, #56]
  405aa0:	ldr	x9, [x9, #1272]
  405aa4:	cmp	x8, x9
  405aa8:	b.ne	405b10 <wcrtomb@plt+0x32a0>  // b.any
  405aac:	ldrb	w8, [x21, #1201]
  405ab0:	tbnz	w8, #0, 4053e8 <wcrtomb@plt+0x2b78>
  405ab4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  405ab8:	add	x1, x1, #0xa7
  405abc:	mov	w2, #0x5                   	// #5
  405ac0:	mov	x0, xzr
  405ac4:	bl	402740 <dcgettext@plt>
  405ac8:	adrp	x19, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405acc:	ldr	x8, [x19, #1488]
  405ad0:	mov	x20, x0
  405ad4:	cbnz	x8, 405af4 <wcrtomb@plt+0x3284>
  405ad8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  405adc:	add	x1, x1, #0xf6
  405ae0:	mov	w2, #0x5                   	// #5
  405ae4:	mov	x0, xzr
  405ae8:	bl	402740 <dcgettext@plt>
  405aec:	mov	x8, x0
  405af0:	str	x0, [x19, #1488]
  405af4:	mov	x0, x8
  405af8:	bl	414c48 <wcrtomb@plt+0x123d8>
  405afc:	mov	x3, x0
  405b00:	mov	w0, wzr
  405b04:	mov	w1, wzr
  405b08:	mov	x2, x20
  405b0c:	b	4053e4 <wcrtomb@plt+0x2b74>
  405b10:	str	w10, [sp, #16]
  405b14:	adrp	x10, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405b18:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405b1c:	ldr	x10, [x10, #1456]
  405b20:	ldr	x8, [x8, #1440]
  405b24:	adrp	x14, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  405b28:	adrp	x13, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405b2c:	add	x11, x10, #0x1
  405b30:	udiv	x12, x11, x8
  405b34:	msub	x12, x12, x8, x11
  405b38:	sub	x8, x8, x12
  405b3c:	cmp	x12, #0x0
  405b40:	add	x8, x11, x8
  405b44:	ldrb	w21, [x14, #2228]
  405b48:	csinc	x8, x8, x10, ne  // ne = any
  405b4c:	ldrb	w10, [x13, #1404]
  405b50:	adrp	x16, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405b54:	adrp	x15, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405b58:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405b5c:	adrp	x20, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405b60:	str	x8, [x16, #1560]
  405b64:	str	x8, [x15, #1552]
  405b68:	sturb	w21, [x8, #-1]
  405b6c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405b70:	adrp	x19, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405b74:	str	w10, [sp, #12]
  405b78:	str	w27, [x9, #1576]
  405b7c:	cbz	w27, 405b90 <wcrtomb@plt+0x3320>
  405b80:	str	xzr, [x8, #1584]
  405b84:	strb	wzr, [x20, #1592]
  405b88:	strb	wzr, [x19, #1596]
  405b8c:	b	405bd0 <wcrtomb@plt+0x3360>
  405b90:	mov	w2, #0x1                   	// #1
  405b94:	mov	w0, wzr
  405b98:	mov	x1, xzr
  405b9c:	mov	x24, x8
  405ba0:	bl	402310 <lseek@plt>
  405ba4:	lsr	x8, x0, #63
  405ba8:	str	x0, [x24, #1584]
  405bac:	strb	w8, [x20, #1592]
  405bb0:	strb	w8, [x19, #1596]
  405bb4:	tbz	x0, #63, 405bd0 <wcrtomb@plt+0x3360>
  405bb8:	bl	4027e0 <__errno_location@plt>
  405bbc:	ldr	w20, [x0]
  405bc0:	cmp	w20, #0x1d
  405bc4:	b.ne	406654 <wcrtomb@plt+0x3de4>  // b.any
  405bc8:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405bcc:	str	xzr, [x8, #1584]
  405bd0:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405bd4:	ldrb	w9, [x9, #1432]
  405bd8:	ldr	x8, [x23, #1152]
  405bdc:	adrp	x10, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405be0:	str	xzr, [x10, #1528]
  405be4:	adrp	x10, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405be8:	cmp	w9, #0x0
  405bec:	str	x8, [x10, #1520]
  405bf0:	cset	w8, ne  // ne = any
  405bf4:	cmp	w21, #0x0
  405bf8:	cset	w9, eq  // eq = none
  405bfc:	and	w8, w9, w8
  405c00:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405c04:	adrp	x11, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405c08:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405c0c:	adrp	x12, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405c10:	adrp	x23, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405c14:	strb	w8, [x9, #1544]
  405c18:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405c1c:	add	x1, sp, #0x38
  405c20:	mov	x0, xzr
  405c24:	str	xzr, [x11, #1496]
  405c28:	str	xzr, [x22, #1504]
  405c2c:	str	xzr, [x12, #1512]
  405c30:	str	xzr, [x23, #1536]
  405c34:	strb	wzr, [x8, #1545]
  405c38:	bl	4069b4 <wcrtomb@plt+0x4144>
  405c3c:	tbz	w0, #0, 406108 <wcrtomb@plt+0x3898>
  405c40:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405c44:	ldrb	w9, [x8, #1188]
  405c48:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405c4c:	str	wzr, [x8, #1548]
  405c50:	cmp	w9, #0x1
  405c54:	b.ne	405ca8 <wcrtomb@plt+0x3438>  // b.any
  405c58:	ldr	w10, [sp, #72]
  405c5c:	ldr	x11, [sp, #104]
  405c60:	adrp	x12, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405c64:	ldrb	w12, [x12, #1196]
  405c68:	and	w10, w10, #0xf000
  405c6c:	cmp	w10, #0x8, lsl #12
  405c70:	csinv	x10, x11, xzr, eq  // eq = none
  405c74:	cmn	x10, #0x1
  405c78:	cset	w11, ne  // ne = any
  405c7c:	and	x11, x12, x11
  405c80:	add	x10, x10, x11
  405c84:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
  405c88:	mov	w9, wzr
  405c8c:	movk	x11, #0xcccd
  405c90:	umulh	x12, x10, x11
  405c94:	cmp	x10, #0x9
  405c98:	lsr	x10, x12, #3
  405c9c:	add	w9, w9, #0x1
  405ca0:	b.hi	405c90 <wcrtomb@plt+0x3420>  // b.pmore
  405ca4:	str	w9, [x8, #1548]
  405ca8:	mov	x24, xzr
  405cac:	mov	x28, xzr
  405cb0:	mov	w20, wzr
  405cb4:	mov	x8, #0xffffffffffffffff    	// #-1
  405cb8:	mov	w25, #0x1                   	// #1
  405cbc:	str	xzr, [sp, #24]
  405cc0:	str	w27, [sp, #20]
  405cc4:	b	405d08 <wcrtomb@plt+0x3498>
  405cc8:	mov	x19, xzr
  405ccc:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405cd0:	ldr	x8, [x9, #1512]
  405cd4:	adds	x8, x8, x19
  405cd8:	b.cs	406750 <wcrtomb@plt+0x3ee0>  // b.hs, b.nlast
  405cdc:	str	x8, [x9, #1512]
  405ce0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405ce4:	str	x28, [x8, #1568]
  405ce8:	add	x1, sp, #0x38
  405cec:	mov	x0, x24
  405cf0:	sub	x28, x27, x25
  405cf4:	bl	4069b4 <wcrtomb@plt+0x4144>
  405cf8:	ldr	w27, [sp, #20]
  405cfc:	ldr	x8, [sp, #32]
  405d00:	mov	w25, wzr
  405d04:	tbz	w0, #0, 40622c <wcrtomb@plt+0x39bc>
  405d08:	str	x8, [sp, #32]
  405d0c:	tbnz	x8, #63, 405f98 <wcrtomb@plt+0x3728>
  405d10:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405d14:	ldr	x8, [x8, #1552]
  405d18:	ldr	x9, [x22, #1504]
  405d1c:	adrp	x10, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405d20:	str	x8, [x10, #1568]
  405d24:	cbz	x9, 405d2c <wcrtomb@plt+0x34bc>
  405d28:	str	x8, [x22, #1504]
  405d2c:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405d30:	ldr	x26, [x9, #1560]
  405d34:	add	x24, x8, x24
  405d38:	cmp	x24, x26
  405d3c:	b.eq	406174 <wcrtomb@plt+0x3904>  // b.none
  405d40:	tst	w20, #0xff
  405d44:	b.eq	405d88 <wcrtomb@plt+0x3518>  // b.none
  405d48:	mov	x0, x24
  405d4c:	strb	wzr, [x26]
  405d50:	bl	402270 <strlen@plt>
  405d54:	add	x25, x24, x0
  405d58:	cmp	x25, x26
  405d5c:	strb	w20, [x26]
  405d60:	b.eq	405d88 <wcrtomb@plt+0x3518>  // b.none
  405d64:	mov	x8, x25
  405d68:	ldrb	w9, [x25, #1]!
  405d6c:	strb	w20, [x8]
  405d70:	cbz	w9, 405d64 <wcrtomb@plt+0x34f4>
  405d74:	mov	x0, x25
  405d78:	strb	wzr, [x26]
  405d7c:	bl	402270 <strlen@plt>
  405d80:	add	x25, x25, x0
  405d84:	b	405d58 <wcrtomb@plt+0x34e8>
  405d88:	mov	x26, x24
  405d8c:	ldrb	w19, [x26, #-1]!
  405d90:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405d94:	mov	w1, w21
  405d98:	strb	w21, [x26]
  405d9c:	ldr	x27, [x8, #1560]
  405da0:	mov	x0, x26
  405da4:	sub	x8, x27, x24
  405da8:	add	x2, x8, #0x1
  405dac:	bl	402650 <memrchr@plt>
  405db0:	add	x9, x0, #0x1
  405db4:	mov	x8, x0
  405db8:	sub	x0, x24, x28
  405dbc:	cmp	x9, x24
  405dc0:	csinc	x25, x0, x8, eq  // eq = none
  405dc4:	cmp	x0, x25
  405dc8:	strb	w19, [x26]
  405dcc:	b.cs	405e90 <wcrtomb@plt+0x3620>  // b.hs, b.nlast
  405dd0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405dd4:	ldr	x8, [x8, #1520]
  405dd8:	adrp	x19, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  405ddc:	cbz	x8, 405df4 <wcrtomb@plt+0x3584>
  405de0:	mov	x1, x25
  405de4:	bl	406cb8 <wcrtomb@plt+0x4448>
  405de8:	ldr	x8, [sp, #24]
  405dec:	add	x8, x0, x8
  405df0:	str	x8, [sp, #24]
  405df4:	ldr	x8, [x23, #1536]
  405df8:	cbz	x8, 405e60 <wcrtomb@plt+0x35f0>
  405dfc:	ldr	x24, [x22, #1504]
  405e00:	cbnz	x24, 405e10 <wcrtomb@plt+0x35a0>
  405e04:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405e08:	ldr	x24, [x9, #1552]
  405e0c:	str	x24, [x22, #1504]
  405e10:	cmp	x8, #0x1
  405e14:	b.lt	405e60 <wcrtomb@plt+0x35f0>  // b.tstop
  405e18:	cmp	x24, x25
  405e1c:	b.cs	405e60 <wcrtomb@plt+0x35f0>  // b.hs, b.nlast
  405e20:	ldrb	w1, [x19, #2228]
  405e24:	sub	x2, x25, x24
  405e28:	mov	x0, x24
  405e2c:	bl	4026d0 <memchr@plt>
  405e30:	add	x1, x0, #0x1
  405e34:	mov	w2, #0x2d                  	// #45
  405e38:	mov	x0, x24
  405e3c:	bl	40716c <wcrtomb@plt+0x48fc>
  405e40:	ldr	x9, [x23, #1536]
  405e44:	sub	x8, x9, #0x1
  405e48:	cmp	x9, #0x2
  405e4c:	str	x8, [x23, #1536]
  405e50:	b.lt	405e60 <wcrtomb@plt+0x35f0>  // b.tstop
  405e54:	ldr	x24, [x22, #1504]
  405e58:	cmp	x24, x25
  405e5c:	b.cc	405e20 <wcrtomb@plt+0x35b0>  // b.lo, b.ul, b.last
  405e60:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405e64:	ldr	x9, [x9, #1520]
  405e68:	orr	x8, x9, x8
  405e6c:	cbz	x8, 406298 <wcrtomb@plt+0x3a28>
  405e70:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405e74:	ldrb	w8, [x8, #1404]
  405e78:	cmp	w8, #0x1
  405e7c:	b.ne	405e90 <wcrtomb@plt+0x3620>  // b.any
  405e80:	ldp	x9, x8, [sp, #24]
  405e84:	bic	x8, x8, x8, asr #63
  405e88:	cmp	x8, x9
  405e8c:	b.lt	406298 <wcrtomb@plt+0x3a28>  // b.tstop
  405e90:	ldr	x9, [x22, #1504]
  405e94:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405e98:	ldr	x11, [x8, #1160]
  405e9c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405ea0:	ldr	x8, [x8, #1552]
  405ea4:	cmp	x25, x9
  405ea8:	cset	w10, eq  // eq = none
  405eac:	cmp	x11, #0x1
  405eb0:	b.lt	405f00 <wcrtomb@plt+0x3690>  // b.tstop
  405eb4:	cmp	x25, x8
  405eb8:	b.ls	405f00 <wcrtomb@plt+0x3690>  // b.plast
  405ebc:	cmp	x25, x9
  405ec0:	b.eq	405f00 <wcrtomb@plt+0x3690>  // b.none
  405ec4:	mov	x12, xzr
  405ec8:	mov	x28, x25
  405ecc:	ldurb	w10, [x28, #-2]
  405ed0:	sub	x28, x28, #0x1
  405ed4:	cmp	w10, w21
  405ed8:	b.ne	405ecc <wcrtomb@plt+0x365c>  // b.any
  405edc:	cmp	x9, x28
  405ee0:	cset	w10, eq  // eq = none
  405ee4:	b.eq	405f04 <wcrtomb@plt+0x3694>  // b.none
  405ee8:	add	x12, x12, #0x1
  405eec:	cmp	x12, x11
  405ef0:	b.ge	405f04 <wcrtomb@plt+0x3694>  // b.tcont
  405ef4:	cmp	x28, x8
  405ef8:	b.hi	405ecc <wcrtomb@plt+0x365c>  // b.pmore
  405efc:	b	405f04 <wcrtomb@plt+0x3694>
  405f00:	mov	x28, x25
  405f04:	tbnz	w10, #0, 405f0c <wcrtomb@plt+0x369c>
  405f08:	str	xzr, [x22, #1504]
  405f0c:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405f10:	ldrb	w9, [x9, #1190]
  405f14:	sub	x24, x27, x28
  405f18:	cmp	w9, #0x1
  405f1c:	b.ne	405f48 <wcrtomb@plt+0x36d8>  // b.any
  405f20:	adrp	x11, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405f24:	ldr	x9, [x11, #1496]
  405f28:	adrp	x10, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405f2c:	ldr	x10, [x10, #1560]
  405f30:	add	x8, x24, x8
  405f34:	sub	x8, x9, x8
  405f38:	add	x8, x8, x10
  405f3c:	cmp	x8, x9
  405f40:	b.cc	406750 <wcrtomb@plt+0x3ee0>  // b.lo, b.ul, b.last
  405f44:	str	x8, [x11, #1496]
  405f48:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405f4c:	ldrb	w8, [x8, #1196]
  405f50:	cmp	w8, #0x1
  405f54:	b.ne	405ce8 <wcrtomb@plt+0x3478>  // b.any
  405f58:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405f5c:	ldr	x0, [x8, #1568]
  405f60:	cmp	x0, x28
  405f64:	b.cs	405cc8 <wcrtomb@plt+0x3458>  // b.hs, b.nlast
  405f68:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  405f6c:	ldrb	w26, [x8, #2228]
  405f70:	mov	x19, xzr
  405f74:	sub	x2, x28, x0
  405f78:	mov	w1, w26
  405f7c:	bl	4026d0 <memchr@plt>
  405f80:	cbz	x0, 405ccc <wcrtomb@plt+0x345c>
  405f84:	add	x0, x0, #0x1
  405f88:	cmp	x0, x28
  405f8c:	add	x19, x19, #0x1
  405f90:	b.cc	405f74 <wcrtomb@plt+0x3704>  // b.lo, b.ul, b.last
  405f94:	b	405ccc <wcrtomb@plt+0x345c>
  405f98:	cbz	w21, 405d10 <wcrtomb@plt+0x34a0>
  405f9c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405fa0:	ldr	w19, [x8, #1184]
  405fa4:	cmp	w19, #0x1
  405fa8:	b.eq	405d10 <wcrtomb@plt+0x34a0>  // b.none
  405fac:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405fb0:	ldr	x0, [x8, #1552]
  405fb4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405fb8:	ldr	x8, [x8, #1560]
  405fbc:	sub	x26, x8, x0
  405fc0:	strb	wzr, [x8]
  405fc4:	bl	402270 <strlen@plt>
  405fc8:	cmp	x0, x26
  405fcc:	b.ne	4060c0 <wcrtomb@plt+0x3850>  // b.any
  405fd0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  405fd4:	ldrb	w8, [x8, #1592]
  405fd8:	cmp	w8, #0x0
  405fdc:	cset	w8, ne  // ne = any
  405fe0:	orn	w8, w8, w25
  405fe4:	tbnz	w8, #0, 405d10 <wcrtomb@plt+0x34a0>
  405fe8:	ldr	w8, [sp, #72]
  405fec:	and	w8, w8, #0xf000
  405ff0:	cmp	w8, #0x8, lsl #12
  405ff4:	b.ne	405d10 <wcrtomb@plt+0x34a0>  // b.any
  405ff8:	ldr	x8, [sp, #104]
  405ffc:	cmp	x8, x26
  406000:	b.ls	405d10 <wcrtomb@plt+0x34a0>  // b.plast
  406004:	cbnz	w27, 406020 <wcrtomb@plt+0x37b0>
  406008:	mov	w2, #0x1                   	// #1
  40600c:	mov	w0, wzr
  406010:	mov	x1, xzr
  406014:	bl	402310 <lseek@plt>
  406018:	mov	x26, x0
  40601c:	tbnz	x0, #63, 405d10 <wcrtomb@plt+0x34a0>
  406020:	mov	w2, #0x4                   	// #4
  406024:	mov	w0, w27
  406028:	mov	x1, x26
  40602c:	bl	402310 <lseek@plt>
  406030:	tbnz	x0, #63, 405d10 <wcrtomb@plt+0x34a0>
  406034:	mov	x25, x0
  406038:	mov	w0, w27
  40603c:	mov	x1, x26
  406040:	mov	w2, wzr
  406044:	bl	402310 <lseek@plt>
  406048:	tbz	x0, #63, 4060ac <wcrtomb@plt+0x383c>
  40604c:	bl	4027e0 <__errno_location@plt>
  406050:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406054:	ldrb	w8, [x8, #1201]
  406058:	tbnz	w8, #0, 4060a0 <wcrtomb@plt+0x3830>
  40605c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406060:	ldr	x3, [x8, #1488]
  406064:	ldr	w26, [x0]
  406068:	cbnz	x3, 40608c <wcrtomb@plt+0x381c>
  40606c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  406070:	mov	w2, #0x5                   	// #5
  406074:	mov	x0, xzr
  406078:	add	x1, x1, #0xf6
  40607c:	bl	402740 <dcgettext@plt>
  406080:	mov	x3, x0
  406084:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406088:	str	x0, [x8, #1488]
  40608c:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  406090:	mov	w0, wzr
  406094:	mov	w1, w26
  406098:	add	x2, x2, #0x1b7
  40609c:	bl	4022a0 <error@plt>
  4060a0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4060a4:	mov	w9, #0x1                   	// #1
  4060a8:	strb	w9, [x8, #1465]
  4060ac:	ldr	x8, [sp, #104]
  4060b0:	cmp	x25, x8
  4060b4:	b.ge	405d10 <wcrtomb@plt+0x34a0>  // b.tcont
  4060b8:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4060bc:	ldr	w19, [x8, #1184]
  4060c0:	cmp	w19, #0x2
  4060c4:	b.eq	4066a4 <wcrtomb@plt+0x3e34>  // b.none
  4060c8:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4060cc:	ldrb	w8, [x8, #1191]
  4060d0:	tbnz	w8, #0, 4060e8 <wcrtomb@plt+0x3878>
  4060d4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4060d8:	mov	w9, #0x1                   	// #1
  4060dc:	strb	w9, [x8, #1408]
  4060e0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4060e4:	strb	w9, [x8, #1404]
  4060e8:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4060ec:	ldrb	w8, [x8, #1432]
  4060f0:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4060f4:	mov	w20, w21
  4060f8:	strb	w8, [x9, #1544]
  4060fc:	ldr	x8, [sp, #24]
  406100:	str	x8, [sp, #32]
  406104:	b	405d10 <wcrtomb@plt+0x34a0>
  406108:	bl	4027e0 <__errno_location@plt>
  40610c:	adrp	x21, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406110:	ldrb	w8, [x21, #1201]
  406114:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406118:	adrp	x23, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40611c:	tbnz	w8, #0, 406160 <wcrtomb@plt+0x38f0>
  406120:	adrp	x19, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406124:	ldr	x3, [x19, #1488]
  406128:	ldr	w20, [x0]
  40612c:	cbnz	x3, 40614c <wcrtomb@plt+0x38dc>
  406130:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  406134:	add	x1, x1, #0xf6
  406138:	mov	w2, #0x5                   	// #5
  40613c:	mov	x0, xzr
  406140:	bl	402740 <dcgettext@plt>
  406144:	mov	x3, x0
  406148:	str	x0, [x19, #1488]
  40614c:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  406150:	add	x2, x2, #0x1b7
  406154:	mov	w0, wzr
  406158:	mov	w1, w20
  40615c:	bl	4022a0 <error@plt>
  406160:	mov	w8, #0x1                   	// #1
  406164:	mov	w20, wzr
  406168:	str	xzr, [sp, #24]
  40616c:	strb	w8, [x22, #1465]
  406170:	b	4062d0 <wcrtomb@plt+0x3a60>
  406174:	cbz	x28, 4062a4 <wcrtomb@plt+0x3a34>
  406178:	add	x1, x24, #0x1
  40617c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406180:	str	x1, [x8, #1560]
  406184:	strb	w21, [x24]
  406188:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40618c:	ldr	x8, [x8, #1520]
  406190:	cbz	x8, 4061a8 <wcrtomb@plt+0x3938>
  406194:	sub	x0, x24, x28
  406198:	bl	406cb8 <wcrtomb@plt+0x4448>
  40619c:	ldr	x8, [sp, #24]
  4061a0:	add	x8, x0, x8
  4061a4:	str	x8, [sp, #24]
  4061a8:	ldr	x8, [x23, #1536]
  4061ac:	adrp	x19, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  4061b0:	cbz	x8, 4062a4 <wcrtomb@plt+0x3a34>
  4061b4:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4061b8:	ldr	x21, [x22, #1504]
  4061bc:	ldr	x24, [x9, #1560]
  4061c0:	cbnz	x21, 4061d0 <wcrtomb@plt+0x3960>
  4061c4:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4061c8:	ldr	x21, [x9, #1552]
  4061cc:	str	x21, [x22, #1504]
  4061d0:	cmp	x8, #0x1
  4061d4:	mov	w20, #0x1                   	// #1
  4061d8:	b.lt	4062a8 <wcrtomb@plt+0x3a38>  // b.tstop
  4061dc:	cmp	x21, x24
  4061e0:	b.cs	4062a8 <wcrtomb@plt+0x3a38>  // b.hs, b.nlast
  4061e4:	mov	w20, #0x1                   	// #1
  4061e8:	ldrb	w1, [x19, #2228]
  4061ec:	sub	x2, x24, x21
  4061f0:	mov	x0, x21
  4061f4:	bl	4026d0 <memchr@plt>
  4061f8:	add	x1, x0, #0x1
  4061fc:	mov	w2, #0x2d                  	// #45
  406200:	mov	x0, x21
  406204:	bl	40716c <wcrtomb@plt+0x48fc>
  406208:	ldr	x8, [x23, #1536]
  40620c:	sub	x9, x8, #0x1
  406210:	cmp	x8, #0x2
  406214:	str	x9, [x23, #1536]
  406218:	b.lt	4062a8 <wcrtomb@plt+0x3a38>  // b.tstop
  40621c:	ldr	x21, [x22, #1504]
  406220:	cmp	x21, x24
  406224:	b.cc	4061e8 <wcrtomb@plt+0x3978>  // b.lo, b.ul, b.last
  406228:	b	4062a8 <wcrtomb@plt+0x3a38>
  40622c:	bl	4027e0 <__errno_location@plt>
  406230:	adrp	x21, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406234:	ldrb	w8, [x21, #1201]
  406238:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40623c:	adrp	x23, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406240:	tbnz	w8, #0, 406288 <wcrtomb@plt+0x3a18>
  406244:	adrp	x19, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406248:	ldr	x3, [x19, #1488]
  40624c:	ldr	w21, [x0]
  406250:	cbnz	x3, 406270 <wcrtomb@plt+0x3a00>
  406254:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  406258:	add	x1, x1, #0xf6
  40625c:	mov	w2, #0x5                   	// #5
  406260:	mov	x0, xzr
  406264:	bl	402740 <dcgettext@plt>
  406268:	mov	x3, x0
  40626c:	str	x0, [x19, #1488]
  406270:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  406274:	add	x2, x2, #0x1b7
  406278:	mov	w0, wzr
  40627c:	mov	w1, w21
  406280:	bl	4022a0 <error@plt>
  406284:	adrp	x21, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406288:	mov	w8, #0x1                   	// #1
  40628c:	mov	w20, wzr
  406290:	strb	w8, [x22, #1465]
  406294:	b	4062b4 <wcrtomb@plt+0x3a44>
  406298:	ldr	w27, [sp, #20]
  40629c:	mov	w20, wzr
  4062a0:	b	4062a8 <wcrtomb@plt+0x3a38>
  4062a4:	mov	w20, #0x1                   	// #1
  4062a8:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4062ac:	adrp	x21, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4062b0:	adrp	x23, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4062b4:	ldr	w9, [sp, #12]
  4062b8:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4062bc:	strb	w9, [x8, #1404]
  4062c0:	ldr	w9, [sp, #16]
  4062c4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4062c8:	strb	w9, [x8, #1408]
  4062cc:	cbz	w9, 406374 <wcrtomb@plt+0x3b04>
  4062d0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4062d4:	ldrb	w8, [x8, #1191]
  4062d8:	cmp	w8, #0x1
  4062dc:	b.ne	406478 <wcrtomb@plt+0x3c08>  // b.any
  4062e0:	ldr	w8, [x23, #1436]
  4062e4:	cbz	w8, 406434 <wcrtomb@plt+0x3bc4>
  4062e8:	bl	40685c <wcrtomb@plt+0x3fec>
  4062ec:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4062f0:	ldrb	w8, [x8, #1144]
  4062f4:	cmp	w8, #0x1
  4062f8:	b.ne	406414 <wcrtomb@plt+0x3ba4>  // b.any
  4062fc:	mov	x19, x22
  406300:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406304:	ldr	w8, [x22, #1208]
  406308:	adrp	x21, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40630c:	cbz	w8, 406328 <wcrtomb@plt+0x3ab8>
  406310:	ldr	x1, [x21, #912]
  406314:	ldrb	w8, [x1]
  406318:	cbz	w8, 406328 <wcrtomb@plt+0x3ab8>
  40631c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406320:	ldr	x0, [x8, #936]
  406324:	bl	415e74 <wcrtomb@plt+0x13604>
  406328:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40632c:	ldr	x0, [x8, #1096]
  406330:	ldp	x8, x9, [x0, #40]
  406334:	cmp	x8, x9
  406338:	b.cs	4066f0 <wcrtomb@plt+0x3e80>  // b.hs, b.nlast
  40633c:	add	x9, x8, #0x1
  406340:	mov	w10, #0x3a                  	// #58
  406344:	str	x9, [x0, #40]
  406348:	strb	w10, [x8]
  40634c:	ldr	w8, [x22, #1208]
  406350:	mov	x22, x19
  406354:	cbz	w8, 406434 <wcrtomb@plt+0x3bc4>
  406358:	ldr	x8, [x21, #912]
  40635c:	ldrb	w8, [x8]
  406360:	cbz	w8, 406434 <wcrtomb@plt+0x3bc4>
  406364:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406368:	ldr	x0, [x8, #944]
  40636c:	bl	415e78 <wcrtomb@plt+0x13608>
  406370:	b	406434 <wcrtomb@plt+0x3bc4>
  406374:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406378:	ldrb	w8, [x8, #1545]
  40637c:	tbnz	w8, #0, 406394 <wcrtomb@plt+0x3b24>
  406380:	ldr	x9, [sp, #32]
  406384:	tbnz	x9, #63, 4062d0 <wcrtomb@plt+0x3a60>
  406388:	ldr	x8, [sp, #24]
  40638c:	cmp	x9, x8
  406390:	b.ge	4062d0 <wcrtomb@plt+0x3a60>  // b.tcont
  406394:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  406398:	add	x1, x1, #0x107
  40639c:	mov	w2, #0x5                   	// #5
  4063a0:	mov	x0, xzr
  4063a4:	bl	402740 <dcgettext@plt>
  4063a8:	adrp	x19, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4063ac:	ldr	x1, [x19, #1488]
  4063b0:	mov	x21, x0
  4063b4:	cbnz	x1, 4063d4 <wcrtomb@plt+0x3b64>
  4063b8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4063bc:	add	x1, x1, #0xf6
  4063c0:	mov	w2, #0x5                   	// #5
  4063c4:	mov	x0, xzr
  4063c8:	bl	402740 <dcgettext@plt>
  4063cc:	mov	x1, x0
  4063d0:	str	x0, [x19, #1488]
  4063d4:	mov	x0, x21
  4063d8:	bl	40691c <wcrtomb@plt+0x40ac>
  4063dc:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4063e0:	ldrb	w8, [x8, #1248]
  4063e4:	cmp	w8, #0x1
  4063e8:	b.ne	406674 <wcrtomb@plt+0x3e04>  // b.any
  4063ec:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4063f0:	ldr	x0, [x8, #1096]
  4063f4:	bl	402670 <fflush_unlocked@plt>
  4063f8:	adrp	x21, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4063fc:	cbz	w0, 4062d0 <wcrtomb@plt+0x3a60>
  406400:	bl	4027e0 <__errno_location@plt>
  406404:	ldr	w8, [x0]
  406408:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40640c:	str	w8, [x9, #1468]
  406410:	b	4062d0 <wcrtomb@plt+0x3a60>
  406414:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406418:	ldr	x0, [x8, #1096]
  40641c:	ldp	x8, x9, [x0, #40]
  406420:	cmp	x8, x9
  406424:	b.cs	406710 <wcrtomb@plt+0x3ea0>  // b.hs, b.nlast
  406428:	add	x9, x8, #0x1
  40642c:	str	x9, [x0, #40]
  406430:	strb	wzr, [x8]
  406434:	ldr	x1, [sp, #24]
  406438:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40643c:	add	x0, x0, #0xc8
  406440:	bl	40691c <wcrtomb@plt+0x40ac>
  406444:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406448:	ldrb	w8, [x8, #1248]
  40644c:	adrp	x21, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406450:	cmp	w8, #0x1
  406454:	b.ne	406478 <wcrtomb@plt+0x3c08>  // b.any
  406458:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40645c:	ldr	x0, [x8, #1096]
  406460:	bl	402670 <fflush_unlocked@plt>
  406464:	cbz	w0, 406478 <wcrtomb@plt+0x3c08>
  406468:	bl	4027e0 <__errno_location@plt>
  40646c:	ldr	w8, [x0]
  406470:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406474:	str	w8, [x9, #1468]
  406478:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40647c:	ldr	x9, [sp, #24]
  406480:	ldr	w8, [x8, #1192]
  406484:	cmp	x9, #0x0
  406488:	cset	w9, eq  // eq = none
  40648c:	cmp	w8, #0x2
  406490:	cset	w10, ne  // ne = any
  406494:	eor	w9, w9, w10
  406498:	eor	w23, w9, #0x1
  40649c:	cbz	w8, 4064b0 <wcrtomb@plt+0x3c40>
  4064a0:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4064a4:	ldrb	w9, [x9, #1400]
  4064a8:	cmp	w9, #0x1
  4064ac:	b.ne	406544 <wcrtomb@plt+0x3cd4>  // b.any
  4064b0:	cbnz	w27, 4053f4 <wcrtomb@plt+0x2b84>
  4064b4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4064b8:	ldr	x8, [x8, #1520]
  4064bc:	cbz	x8, 4065c8 <wcrtomb@plt+0x3d58>
  4064c0:	cbnz	w20, 405454 <wcrtomb@plt+0x2be4>
  4064c4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4064c8:	ldrb	w8, [x8, #1592]
  4064cc:	adrp	x19, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4064d0:	cbz	w8, 40667c <wcrtomb@plt+0x3e0c>
  4064d4:	ldr	w8, [sp, #72]
  4064d8:	and	w8, w8, #0xf000
  4064dc:	cmp	w8, #0x1, lsl #12
  4064e0:	b.ne	4066cc <wcrtomb@plt+0x3e5c>  // b.any
  4064e4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4064e8:	ldrb	w8, [x8, #1400]
  4064ec:	cmp	w8, #0x1
  4064f0:	b.ne	4066cc <wcrtomb@plt+0x3e5c>  // b.any
  4064f4:	mov	w2, #0x1                   	// #1
  4064f8:	mov	w4, #0x18000               	// #98304
  4064fc:	mov	w5, #0x1                   	// #1
  406500:	mov	w0, wzr
  406504:	mov	x1, xzr
  406508:	mov	x3, xzr
  40650c:	bl	4023d0 <splice@plt>
  406510:	tbnz	x0, #63, 4066bc <wcrtomb@plt+0x3e4c>
  406514:	cbz	x0, 405454 <wcrtomb@plt+0x2be4>
  406518:	mov	w2, #0x1                   	// #1
  40651c:	mov	w4, #0x18000               	// #98304
  406520:	mov	w5, #0x1                   	// #1
  406524:	mov	w0, wzr
  406528:	mov	x1, xzr
  40652c:	mov	x3, xzr
  406530:	bl	4023d0 <splice@plt>
  406534:	cmp	x0, #0x0
  406538:	b.gt	406518 <wcrtomb@plt+0x3ca8>
  40653c:	cbnz	x0, 4065fc <wcrtomb@plt+0x3d8c>
  406540:	b	4053f0 <wcrtomb@plt+0x2b80>
  406544:	ldr	x9, [sp, #24]
  406548:	cmp	w8, #0x2
  40654c:	cset	w8, ne  // ne = any
  406550:	cmp	x9, #0x0
  406554:	cset	w9, eq  // eq = none
  406558:	cmp	w9, w8
  40655c:	b.eq	4053f0 <wcrtomb@plt+0x2b80>  // b.none
  406560:	bl	40685c <wcrtomb@plt+0x3fec>
  406564:	adrp	x20, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406568:	ldr	x0, [x20, #1096]
  40656c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406570:	ldrb	w9, [x8, #1144]
  406574:	ldp	x8, x10, [x0, #40]
  406578:	cmp	w9, #0x0
  40657c:	mov	w9, #0xa                   	// #10
  406580:	csel	w1, w9, wzr, ne  // ne = any
  406584:	cmp	x8, x10
  406588:	b.cs	406730 <wcrtomb@plt+0x3ec0>  // b.hs, b.nlast
  40658c:	add	x9, x8, #0x1
  406590:	str	x9, [x0, #40]
  406594:	strb	w1, [x8]
  406598:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40659c:	ldrb	w8, [x8, #1248]
  4065a0:	cmp	w8, #0x1
  4065a4:	b.ne	4053f0 <wcrtomb@plt+0x2b80>  // b.any
  4065a8:	ldr	x0, [x20, #1096]
  4065ac:	bl	402670 <fflush_unlocked@plt>
  4065b0:	cbz	w0, 4053f0 <wcrtomb@plt+0x2b80>
  4065b4:	bl	4027e0 <__errno_location@plt>
  4065b8:	ldr	w8, [x0]
  4065bc:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4065c0:	str	w8, [x9, #1468]
  4065c4:	b	4053f0 <wcrtomb@plt+0x2b80>
  4065c8:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4065cc:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4065d0:	ldr	x8, [x8, #1584]
  4065d4:	ldr	x1, [x9, #1528]
  4065d8:	cmp	x8, x1
  4065dc:	b.eq	405454 <wcrtomb@plt+0x2be4>  // b.none
  4065e0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4065e4:	ldrb	w8, [x8, #1592]
  4065e8:	cbnz	w8, 405454 <wcrtomb@plt+0x2be4>
  4065ec:	mov	w0, wzr
  4065f0:	mov	w2, wzr
  4065f4:	bl	402310 <lseek@plt>
  4065f8:	tbz	x0, #63, 405454 <wcrtomb@plt+0x2be4>
  4065fc:	bl	4027e0 <__errno_location@plt>
  406600:	ldrb	w8, [x21, #1201]
  406604:	tbnz	w8, #0, 406648 <wcrtomb@plt+0x3dd8>
  406608:	adrp	x19, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40660c:	ldr	x3, [x19, #1488]
  406610:	ldr	w20, [x0]
  406614:	cbnz	x3, 406634 <wcrtomb@plt+0x3dc4>
  406618:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40661c:	add	x1, x1, #0xf6
  406620:	mov	w2, #0x5                   	// #5
  406624:	mov	x0, xzr
  406628:	bl	402740 <dcgettext@plt>
  40662c:	mov	x3, x0
  406630:	str	x0, [x19, #1488]
  406634:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  406638:	add	x2, x2, #0x1b7
  40663c:	mov	w0, wzr
  406640:	mov	w1, w20
  406644:	bl	4022a0 <error@plt>
  406648:	mov	w8, #0x1                   	// #1
  40664c:	strb	w8, [x22, #1465]
  406650:	b	4053f0 <wcrtomb@plt+0x2b80>
  406654:	adrp	x21, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406658:	ldrb	w8, [x21, #1201]
  40665c:	adrp	x23, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406660:	tbnz	w8, #0, 406160 <wcrtomb@plt+0x38f0>
  406664:	adrp	x19, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406668:	ldr	x3, [x19, #1488]
  40666c:	cbnz	x3, 40614c <wcrtomb@plt+0x38dc>
  406670:	b	406130 <wcrtomb@plt+0x38c0>
  406674:	adrp	x21, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406678:	b	4062d0 <wcrtomb@plt+0x3a60>
  40667c:	mov	w2, #0x2                   	// #2
  406680:	mov	w0, wzr
  406684:	mov	x1, xzr
  406688:	bl	402310 <lseek@plt>
  40668c:	tbz	x0, #63, 405454 <wcrtomb@plt+0x2be4>
  406690:	bl	4027e0 <__errno_location@plt>
  406694:	ldr	w8, [x0]
  406698:	cmp	w8, #0x16
  40669c:	b.eq	405454 <wcrtomb@plt+0x2be4>  // b.none
  4066a0:	b	4064d4 <wcrtomb@plt+0x3c64>
  4066a4:	mov	w20, wzr
  4066a8:	str	xzr, [sp, #24]
  4066ac:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4066b0:	adrp	x21, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4066b4:	adrp	x23, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4066b8:	b	4062d0 <wcrtomb@plt+0x3a60>
  4066bc:	bl	4027e0 <__errno_location@plt>
  4066c0:	ldr	w8, [x0]
  4066c4:	cmp	w8, #0x16
  4066c8:	b.ne	4065fc <wcrtomb@plt+0x3d8c>  // b.any
  4066cc:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4066d0:	ldr	x1, [x19, #1456]
  4066d4:	ldr	x2, [x8, #1448]
  4066d8:	mov	w0, wzr
  4066dc:	bl	414d98 <wcrtomb@plt+0x12528>
  4066e0:	cmn	x0, #0x1
  4066e4:	b.eq	4065fc <wcrtomb@plt+0x3d8c>  // b.none
  4066e8:	cbnz	x0, 4066cc <wcrtomb@plt+0x3e5c>
  4066ec:	b	4053f0 <wcrtomb@plt+0x2b80>
  4066f0:	mov	w1, #0x3a                  	// #58
  4066f4:	bl	402590 <__overflow@plt>
  4066f8:	tbz	w0, #31, 40634c <wcrtomb@plt+0x3adc>
  4066fc:	bl	4027e0 <__errno_location@plt>
  406700:	ldr	w8, [x0]
  406704:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406708:	str	w8, [x9, #1468]
  40670c:	b	40634c <wcrtomb@plt+0x3adc>
  406710:	mov	w1, wzr
  406714:	bl	402590 <__overflow@plt>
  406718:	tbz	w0, #31, 406434 <wcrtomb@plt+0x3bc4>
  40671c:	bl	4027e0 <__errno_location@plt>
  406720:	ldr	w8, [x0]
  406724:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406728:	str	w8, [x9, #1468]
  40672c:	b	406434 <wcrtomb@plt+0x3bc4>
  406730:	bl	402590 <__overflow@plt>
  406734:	tbz	w0, #31, 406598 <wcrtomb@plt+0x3d28>
  406738:	bl	4027e0 <__errno_location@plt>
  40673c:	ldr	w8, [x0]
  406740:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406744:	str	w8, [x9, #1468]
  406748:	b	406598 <wcrtomb@plt+0x3d28>
  40674c:	bl	402560 <abort@plt>
  406750:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  406754:	add	x1, x1, #0x130
  406758:	mov	w2, #0x5                   	// #5
  40675c:	mov	x0, xzr
  406760:	bl	402740 <dcgettext@plt>
  406764:	mov	x2, x0
  406768:	mov	w0, #0x2                   	// #2
  40676c:	mov	w1, wzr
  406770:	bl	4022a0 <error@plt>
  406774:	bl	415898 <wcrtomb@plt+0x13028>
  406778:	stp	x29, x30, [sp, #-32]!
  40677c:	stp	x20, x19, [sp, #16]
  406780:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406784:	ldr	w10, [x8, #1180]
  406788:	tst	w2, #0x1
  40678c:	mov	w8, #0x8100                	// #33024
  406790:	mov	w9, #0x100                 	// #256
  406794:	mov	w20, w3
  406798:	mov	w19, w2
  40679c:	csel	w8, w9, w8, ne  // ne = any
  4067a0:	cmp	w10, #0x2
  4067a4:	mov	x29, sp
  4067a8:	b.eq	4067b8 <wcrtomb@plt+0x3f48>  // b.none
  4067ac:	mov	w9, wzr
  4067b0:	cbnz	w10, 4067bc <wcrtomb@plt+0x3f4c>
  4067b4:	tbnz	w20, #0, 4067bc <wcrtomb@plt+0x3f4c>
  4067b8:	mov	w9, #0x800                 	// #2048
  4067bc:	orr	w2, w9, w8
  4067c0:	bl	413484 <wcrtomb@plt+0x10c14>
  4067c4:	tbnz	w0, #31, 4067d8 <wcrtomb@plt+0x3f68>
  4067c8:	and	w1, w20, #0x1
  4067cc:	ldp	x20, x19, [sp, #16]
  4067d0:	ldp	x29, x30, [sp], #32
  4067d4:	b	405358 <wcrtomb@plt+0x2ae8>
  4067d8:	bl	4027e0 <__errno_location@plt>
  4067dc:	tbnz	w19, #0, 4067f4 <wcrtomb@plt+0x3f84>
  4067e0:	ldr	w8, [x0]
  4067e4:	cmp	w8, #0x1f
  4067e8:	b.eq	40684c <wcrtomb@plt+0x3fdc>  // b.none
  4067ec:	cmp	w8, #0x28
  4067f0:	b.eq	40684c <wcrtomb@plt+0x3fdc>  // b.none
  4067f4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4067f8:	ldrb	w8, [x8, #1201]
  4067fc:	tbnz	w8, #0, 406840 <wcrtomb@plt+0x3fd0>
  406800:	adrp	x20, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406804:	ldr	x3, [x20, #1488]
  406808:	ldr	w19, [x0]
  40680c:	cbnz	x3, 40682c <wcrtomb@plt+0x3fbc>
  406810:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  406814:	add	x1, x1, #0xf6
  406818:	mov	w2, #0x5                   	// #5
  40681c:	mov	x0, xzr
  406820:	bl	402740 <dcgettext@plt>
  406824:	mov	x3, x0
  406828:	str	x0, [x20, #1488]
  40682c:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  406830:	add	x2, x2, #0x1b7
  406834:	mov	w0, wzr
  406838:	mov	w1, w19
  40683c:	bl	4022a0 <error@plt>
  406840:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406844:	mov	w9, #0x1                   	// #1
  406848:	strb	w9, [x8, #1465]
  40684c:	ldp	x20, x19, [sp, #16]
  406850:	mov	w0, #0x1                   	// #1
  406854:	ldp	x29, x30, [sp], #32
  406858:	ret
  40685c:	stp	x29, x30, [sp, #-48]!
  406860:	stp	x20, x19, [sp, #32]
  406864:	adrp	x20, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406868:	ldr	w8, [x20, #1208]
  40686c:	adrp	x19, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406870:	str	x21, [sp, #16]
  406874:	mov	x29, sp
  406878:	cbz	w8, 406894 <wcrtomb@plt+0x4024>
  40687c:	ldr	x1, [x19, #888]
  406880:	ldrb	w8, [x1]
  406884:	cbz	w8, 406894 <wcrtomb@plt+0x4024>
  406888:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40688c:	ldr	x0, [x8, #936]
  406890:	bl	415e74 <wcrtomb@plt+0x13604>
  406894:	adrp	x21, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406898:	ldr	x0, [x21, #1488]
  40689c:	cbnz	x0, 4068b4 <wcrtomb@plt+0x4044>
  4068a0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4068a4:	add	x1, x1, #0xf6
  4068a8:	mov	w2, #0x5                   	// #5
  4068ac:	bl	402740 <dcgettext@plt>
  4068b0:	str	x0, [x21, #1488]
  4068b4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4068b8:	ldr	x1, [x8, #1096]
  4068bc:	bl	402750 <fputs_unlocked@plt>
  4068c0:	tbnz	w0, #31, 4068d0 <wcrtomb@plt+0x4060>
  4068c4:	ldr	w8, [x20, #1208]
  4068c8:	cbnz	w8, 4068e8 <wcrtomb@plt+0x4078>
  4068cc:	b	40690c <wcrtomb@plt+0x409c>
  4068d0:	bl	4027e0 <__errno_location@plt>
  4068d4:	ldr	w8, [x0]
  4068d8:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4068dc:	str	w8, [x9, #1468]
  4068e0:	ldr	w8, [x20, #1208]
  4068e4:	cbz	w8, 40690c <wcrtomb@plt+0x409c>
  4068e8:	ldr	x8, [x19, #888]
  4068ec:	ldrb	w8, [x8]
  4068f0:	cbz	w8, 40690c <wcrtomb@plt+0x409c>
  4068f4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4068f8:	ldr	x0, [x8, #944]
  4068fc:	ldp	x20, x19, [sp, #32]
  406900:	ldr	x21, [sp, #16]
  406904:	ldp	x29, x30, [sp], #48
  406908:	b	415e78 <wcrtomb@plt+0x13608>
  40690c:	ldp	x20, x19, [sp, #32]
  406910:	ldr	x21, [sp, #16]
  406914:	ldp	x29, x30, [sp], #48
  406918:	ret
  40691c:	sub	sp, sp, #0x120
  406920:	stp	x29, x30, [sp, #256]
  406924:	add	x29, sp, #0x100
  406928:	mov	x9, #0xffffffffffffffc8    	// #-56
  40692c:	mov	x10, sp
  406930:	sub	x11, x29, #0x78
  406934:	movk	x9, #0xff80, lsl #32
  406938:	add	x12, x29, #0x20
  40693c:	add	x10, x10, #0x80
  406940:	add	x11, x11, #0x38
  406944:	adrp	x13, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406948:	stp	x10, x9, [x29, #-16]
  40694c:	stp	x12, x11, [x29, #-32]
  406950:	mov	x8, x0
  406954:	stp	x1, x2, [x29, #-120]
  406958:	stp	x3, x4, [x29, #-104]
  40695c:	stp	x5, x6, [x29, #-88]
  406960:	stur	x7, [x29, #-72]
  406964:	stp	q0, q1, [sp]
  406968:	ldr	x0, [x13, #1096]
  40696c:	ldp	q0, q1, [x29, #-32]
  406970:	sub	x2, x29, #0x40
  406974:	mov	x1, x8
  406978:	str	x28, [sp, #272]
  40697c:	stp	q2, q3, [sp, #32]
  406980:	stp	q4, q5, [sp, #64]
  406984:	stp	q6, q7, [sp, #96]
  406988:	stp	q0, q1, [x29, #-64]
  40698c:	bl	4027a0 <vfprintf@plt>
  406990:	tbz	w0, #31, 4069a4 <wcrtomb@plt+0x4134>
  406994:	bl	4027e0 <__errno_location@plt>
  406998:	ldr	w8, [x0]
  40699c:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4069a0:	str	w8, [x9, #1468]
  4069a4:	ldr	x28, [sp, #272]
  4069a8:	ldp	x29, x30, [sp, #256]
  4069ac:	add	sp, sp, #0x120
  4069b0:	ret
  4069b4:	sub	sp, sp, #0x70
  4069b8:	stp	x20, x19, [sp, #96]
  4069bc:	adrp	x19, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4069c0:	adrp	x11, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4069c4:	stp	x22, x21, [sp, #80]
  4069c8:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4069cc:	ldr	x21, [x19, #1456]
  4069d0:	ldr	x9, [x11, #1448]
  4069d4:	ldr	x20, [x8, #1560]
  4069d8:	stp	x28, x27, [sp, #32]
  4069dc:	adrp	x27, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4069e0:	ldr	x28, [x27, #1440]
  4069e4:	add	x10, x21, x9
  4069e8:	sub	x10, x10, x20
  4069ec:	sub	x10, x10, #0x8
  4069f0:	stp	x26, x25, [sp, #48]
  4069f4:	sub	x8, x20, x0
  4069f8:	cmp	x28, x10
  4069fc:	adrp	x26, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406a00:	stp	x29, x30, [sp, #16]
  406a04:	stp	x24, x23, [sp, #64]
  406a08:	add	x29, sp, #0x10
  406a0c:	str	x1, [sp, #8]
  406a10:	b.ls	406b24 <wcrtomb@plt+0x42b4>  // b.plast
  406a14:	sub	x10, x9, x28
  406a18:	add	x11, x28, x0
  406a1c:	sub	x10, x10, #0x8
  406a20:	mov	x22, x0
  406a24:	cmp	x10, x11
  406a28:	b.cs	406a4c <wcrtomb@plt+0x41dc>  // b.hs, b.nlast
  406a2c:	mov	x12, #0xfffffffffffffff7    	// #-9
  406a30:	sub	x12, x12, x28
  406a34:	lsr	x12, x12, #1
  406a38:	cmp	x12, x10
  406a3c:	b.cc	406c90 <wcrtomb@plt+0x4420>  // b.lo, b.ul, b.last
  406a40:	lsl	x10, x10, #1
  406a44:	cmp	x10, x11
  406a48:	b.cc	406a38 <wcrtomb@plt+0x41c8>  // b.lo, b.ul, b.last
  406a4c:	ldr	w12, [x1, #16]
  406a50:	and	w12, w12, #0xf000
  406a54:	cmp	w12, #0x8, lsl #12
  406a58:	b.ne	406a84 <wcrtomb@plt+0x4214>  // b.any
  406a5c:	ldr	x12, [x1, #48]
  406a60:	ldr	x13, [x26, #1584]
  406a64:	mov	x14, #0xffffffffffffffff    	// #-1
  406a68:	sub	x12, x12, x13
  406a6c:	add	x13, x12, x22
  406a70:	cmp	x12, x13
  406a74:	ccmp	x12, x14, #0x4, le
  406a78:	ccmp	x11, x13, #0x2, gt
  406a7c:	ccmp	x13, x10, #0x2, ls  // ls = plast
  406a80:	csel	x10, x13, x10, cc  // cc = lo, ul, last
  406a84:	add	x10, x28, x10
  406a88:	add	x0, x10, #0x8
  406a8c:	neg	x24, x22
  406a90:	cmp	x9, x0
  406a94:	sub	x25, x8, x21
  406a98:	mov	x23, x21
  406a9c:	b.cs	406ab8 <wcrtomb@plt+0x4248>  // b.hs, b.nlast
  406aa0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406aa4:	str	x0, [x8, #1448]
  406aa8:	bl	4155d4 <wcrtomb@plt+0x12d64>
  406aac:	ldr	x28, [x27, #1440]
  406ab0:	ldr	x21, [x19, #1456]
  406ab4:	mov	x23, x0
  406ab8:	add	x8, x23, x22
  406abc:	add	x10, x8, #0x1
  406ac0:	udiv	x11, x10, x28
  406ac4:	msub	x11, x11, x28, x10
  406ac8:	sub	x12, x28, x11
  406acc:	cmp	x11, #0x0
  406ad0:	add	x10, x10, x12
  406ad4:	csinc	x20, x10, x8, ne  // ne = any
  406ad8:	add	x24, x20, x24
  406adc:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406ae0:	add	x1, x21, x25
  406ae4:	mov	x0, x24
  406ae8:	mov	x2, x22
  406aec:	str	x24, [x9, #1552]
  406af0:	bl	402230 <memmove@plt>
  406af4:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  406af8:	ldrb	w8, [x8, #2228]
  406afc:	cmp	x23, x21
  406b00:	sturb	w8, [x24, #-1]
  406b04:	b.eq	406b1c <wcrtomb@plt+0x42ac>  // b.none
  406b08:	mov	x0, x21
  406b0c:	bl	402620 <free@plt>
  406b10:	ldr	x28, [x27, #1440]
  406b14:	mov	x21, x23
  406b18:	str	x23, [x19, #1456]
  406b1c:	adrp	x11, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406b20:	b	406b2c <wcrtomb@plt+0x42bc>
  406b24:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406b28:	str	x8, [x9, #1552]
  406b2c:	ldr	x8, [x11, #1448]
  406b30:	mov	w19, #0x1                   	// #1
  406b34:	adrp	x24, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406b38:	adrp	x25, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406b3c:	add	x8, x21, x8
  406b40:	sub	x8, x8, x20
  406b44:	sub	x8, x8, #0x8
  406b48:	udiv	x8, x8, x28
  406b4c:	adrp	x27, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406b50:	adrp	x23, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406b54:	mul	x22, x8, x28
  406b58:	mov	w21, #0x1                   	// #1
  406b5c:	ldr	w0, [x24, #1576]
  406b60:	mov	x1, x20
  406b64:	mov	x2, x22
  406b68:	bl	414d98 <wcrtomb@plt+0x12528>
  406b6c:	ldr	x9, [x26, #1584]
  406b70:	ldrb	w10, [x25, #1544]
  406b74:	cmn	x0, #0x1
  406b78:	csel	x8, xzr, x0, eq  // eq = none
  406b7c:	cset	w11, ne  // ne = any
  406b80:	cmp	x8, #0x0
  406b84:	and	w21, w21, w11
  406b88:	cset	w11, eq  // eq = none
  406b8c:	add	x1, x8, x9
  406b90:	eor	w9, w10, #0x1
  406b94:	orr	w9, w9, w11
  406b98:	str	x1, [x26, #1584]
  406b9c:	cbnz	w9, 406c5c <wcrtomb@plt+0x43ec>
  406ba0:	cmp	x8, #0x1
  406ba4:	add	x9, x20, x8
  406ba8:	mov	x10, x20
  406bac:	b.lt	406bc0 <wcrtomb@plt+0x4350>  // b.tstop
  406bb0:	ldrb	w11, [x10], #1
  406bb4:	cbnz	w11, 406c5c <wcrtomb@plt+0x43ec>
  406bb8:	cmp	x10, x9
  406bbc:	b.cc	406bb0 <wcrtomb@plt+0x4340>  // b.lo, b.ul, b.last
  406bc0:	ldr	x9, [x27, #1512]
  406bc4:	adds	x8, x9, x8
  406bc8:	b.cs	406c94 <wcrtomb@plt+0x4424>  // b.hs, b.nlast
  406bcc:	ldrb	w9, [x23, #1596]
  406bd0:	str	x8, [x27, #1512]
  406bd4:	cbnz	w9, 406b5c <wcrtomb@plt+0x42ec>
  406bd8:	ldr	w0, [x24, #1576]
  406bdc:	mov	w2, #0x3                   	// #3
  406be0:	bl	402310 <lseek@plt>
  406be4:	tbnz	x0, #63, 406c08 <wcrtomb@plt+0x4398>
  406be8:	ldr	x8, [x26, #1584]
  406bec:	ldr	x9, [x27, #1512]
  406bf0:	sub	x8, x0, x8
  406bf4:	adds	x8, x8, x9
  406bf8:	b.cs	406c94 <wcrtomb@plt+0x4424>  // b.hs, b.nlast
  406bfc:	str	x8, [x27, #1512]
  406c00:	str	x0, [x26, #1584]
  406c04:	b	406b5c <wcrtomb@plt+0x42ec>
  406c08:	bl	4027e0 <__errno_location@plt>
  406c0c:	ldr	w8, [x0]
  406c10:	cmp	w8, #0x6
  406c14:	b.ne	406c54 <wcrtomb@plt+0x43e4>  // b.any
  406c18:	ldr	x8, [sp, #8]
  406c1c:	ldr	w8, [x8, #16]
  406c20:	and	w8, w8, #0xf000
  406c24:	cmp	w8, #0x8, lsl #12
  406c28:	b.ne	406c54 <wcrtomb@plt+0x43e4>  // b.any
  406c2c:	ldr	x9, [sp, #8]
  406c30:	ldr	x8, [x26, #1584]
  406c34:	ldr	x9, [x9, #48]
  406c38:	cmp	x8, x9
  406c3c:	b.ge	406c54 <wcrtomb@plt+0x43e4>  // b.tcont
  406c40:	ldr	w0, [x24, #1576]
  406c44:	mov	w2, #0x2                   	// #2
  406c48:	mov	x1, xzr
  406c4c:	bl	402310 <lseek@plt>
  406c50:	tbz	x0, #63, 406be8 <wcrtomb@plt+0x4378>
  406c54:	strb	w19, [x23, #1596]
  406c58:	b	406b5c <wcrtomb@plt+0x42ec>
  406c5c:	add	x9, x20, x8
  406c60:	adrp	x10, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406c64:	str	x9, [x10, #1560]
  406c68:	str	xzr, [x20, x8]
  406c6c:	mov	w0, w21
  406c70:	ldp	x20, x19, [sp, #96]
  406c74:	ldp	x22, x21, [sp, #80]
  406c78:	ldp	x24, x23, [sp, #64]
  406c7c:	ldp	x26, x25, [sp, #48]
  406c80:	ldp	x28, x27, [sp, #32]
  406c84:	ldp	x29, x30, [sp, #16]
  406c88:	add	sp, sp, #0x70
  406c8c:	ret
  406c90:	bl	415898 <wcrtomb@plt+0x13028>
  406c94:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  406c98:	add	x1, x1, #0x130
  406c9c:	mov	w2, #0x5                   	// #5
  406ca0:	mov	x0, xzr
  406ca4:	bl	402740 <dcgettext@plt>
  406ca8:	mov	x2, x0
  406cac:	mov	w0, #0x2                   	// #2
  406cb0:	mov	w1, wzr
  406cb4:	bl	4022a0 <error@plt>
  406cb8:	sub	sp, sp, #0x70
  406cbc:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406cc0:	ldr	x8, [x8, #1520]
  406cc4:	cmp	x0, x1
  406cc8:	stp	x29, x30, [sp, #16]
  406ccc:	stp	x28, x27, [sp, #32]
  406cd0:	stp	x26, x25, [sp, #48]
  406cd4:	stp	x24, x23, [sp, #64]
  406cd8:	stp	x22, x21, [sp, #80]
  406cdc:	stp	x20, x19, [sp, #96]
  406ce0:	add	x29, sp, #0x10
  406ce4:	str	x8, [sp]
  406ce8:	b.cs	407118 <wcrtomb@plt+0x48a8>  // b.hs, b.nlast
  406cec:	mov	x27, x1
  406cf0:	mov	x20, x0
  406cf4:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406cf8:	adrp	x23, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406cfc:	adrp	x25, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406d00:	adrp	x28, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406d04:	adrp	x26, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406d08:	b	406d18 <wcrtomb@plt+0x44a8>
  406d0c:	cmp	x19, x27
  406d10:	mov	x20, x19
  406d14:	b.cs	407118 <wcrtomb@plt+0x48a8>  // b.hs, b.nlast
  406d18:	ldr	x8, [x22, #1416]
  406d1c:	ldr	x0, [x23, #1424]
  406d20:	sub	x21, x27, x20
  406d24:	add	x3, sp, #0x8
  406d28:	mov	x1, x20
  406d2c:	mov	x2, x21
  406d30:	mov	x4, xzr
  406d34:	blr	x8
  406d38:	cmn	x0, #0x1
  406d3c:	b.eq	406d70 <wcrtomb@plt+0x4500>  // b.none
  406d40:	ldrb	w8, [x25, #1204]
  406d44:	ldr	x11, [sp, #8]
  406d48:	add	x9, x20, x0
  406d4c:	cmp	w8, #0x0
  406d50:	cset	w10, eq  // eq = none
  406d54:	cmp	x9, x27
  406d58:	add	x19, x9, x11
  406d5c:	b.ne	406d64 <wcrtomb@plt+0x44f4>  // b.any
  406d60:	cbz	w8, 407118 <wcrtomb@plt+0x48a8>
  406d64:	cmp	x0, #0x0
  406d68:	b.le	406d98 <wcrtomb@plt+0x4528>
  406d6c:	b	406d9c <wcrtomb@plt+0x452c>
  406d70:	ldrb	w8, [x25, #1204]
  406d74:	cbz	w8, 407118 <wcrtomb@plt+0x48a8>
  406d78:	mov	w10, wzr
  406d7c:	str	xzr, [sp, #8]
  406d80:	mov	w8, #0x1                   	// #1
  406d84:	mov	x19, x27
  406d88:	mov	x9, x27
  406d8c:	mov	x0, x21
  406d90:	cmp	x0, #0x0
  406d94:	b.gt	406d9c <wcrtomb@plt+0x452c>
  406d98:	cbz	w10, 406d0c <wcrtomb@plt+0x449c>
  406d9c:	adrp	x23, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  406da0:	ldrb	w10, [x28, #1408]
  406da4:	ldrb	w21, [x23, #2228]
  406da8:	cmp	w8, #0x0
  406dac:	csel	x22, x20, x9, ne  // ne = any
  406db0:	csel	x20, x9, x19, ne  // ne = any
  406db4:	cbnz	w10, 406e48 <wcrtomb@plt+0x45d8>
  406db8:	ldr	x8, [x26, #1536]
  406dbc:	cmp	x8, #0x1
  406dc0:	b.lt	406e48 <wcrtomb@plt+0x45d8>  // b.tstop
  406dc4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406dc8:	ldr	x24, [x8, #1504]
  406dcc:	cbz	x24, 406ddc <wcrtomb@plt+0x456c>
  406dd0:	cmp	x24, x22
  406dd4:	b.cc	406df4 <wcrtomb@plt+0x4584>  // b.lo, b.ul, b.last
  406dd8:	b	406e58 <wcrtomb@plt+0x45e8>
  406ddc:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406de0:	ldr	x24, [x8, #1552]
  406de4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406de8:	str	x24, [x8, #1504]
  406dec:	cmp	x24, x22
  406df0:	b.cs	406e58 <wcrtomb@plt+0x45e8>  // b.hs, b.nlast
  406df4:	mov	w8, w21
  406df8:	and	w1, w8, #0xff
  406dfc:	sub	x2, x22, x24
  406e00:	mov	x0, x24
  406e04:	bl	4026d0 <memchr@plt>
  406e08:	add	x1, x0, #0x1
  406e0c:	mov	w2, #0x2d                  	// #45
  406e10:	mov	x0, x24
  406e14:	bl	40716c <wcrtomb@plt+0x48fc>
  406e18:	ldr	x8, [x26, #1536]
  406e1c:	sub	x9, x8, #0x1
  406e20:	cmp	x8, #0x2
  406e24:	str	x9, [x26, #1536]
  406e28:	b.lt	406e44 <wcrtomb@plt+0x45d4>  // b.tstop
  406e2c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406e30:	ldr	x24, [x8, #1504]
  406e34:	cmp	x24, x22
  406e38:	b.cs	406e44 <wcrtomb@plt+0x45d4>  // b.hs, b.nlast
  406e3c:	ldrb	w8, [x23, #2228]
  406e40:	b	406df8 <wcrtomb@plt+0x4588>
  406e44:	ldrb	w10, [x28, #1408]
  406e48:	mov	x24, x22
  406e4c:	cbnz	w10, 406fc4 <wcrtomb@plt+0x4754>
  406e50:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406e54:	ldr	x24, [x8, #1504]
  406e58:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406e5c:	ldr	x9, [x8, #1552]
  406e60:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406e64:	ldr	x8, [x8, #1160]
  406e68:	cmp	x24, #0x0
  406e6c:	csel	x9, x9, x24, eq  // eq = none
  406e70:	mov	x23, x22
  406e74:	cmp	x8, #0x1
  406e78:	b.lt	406ebc <wcrtomb@plt+0x464c>  // b.tstop
  406e7c:	mov	x10, xzr
  406e80:	mov	x11, x22
  406e84:	b	406e9c <wcrtomb@plt+0x462c>
  406e88:	mov	x23, x11
  406e8c:	add	x10, x10, #0x1
  406e90:	cmp	x10, x8
  406e94:	mov	x11, x23
  406e98:	b.eq	406ebc <wcrtomb@plt+0x464c>  // b.none
  406e9c:	cmp	x11, x9
  406ea0:	b.ls	406e88 <wcrtomb@plt+0x4618>  // b.plast
  406ea4:	ldurb	w12, [x11, #-2]
  406ea8:	sub	x23, x11, #0x1
  406eac:	mov	x11, x23
  406eb0:	cmp	w12, w21
  406eb4:	b.ne	406ea4 <wcrtomb@plt+0x4634>  // b.any
  406eb8:	b	406e8c <wcrtomb@plt+0x461c>
  406ebc:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406ec0:	ldr	x9, [x9, #1168]
  406ec4:	tst	x9, x8
  406ec8:	b.lt	406f8c <wcrtomb@plt+0x471c>  // b.tstop
  406ecc:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406ed0:	ldrb	w8, [x8, #1597]
  406ed4:	cmp	w8, #0x1
  406ed8:	b.ne	406f8c <wcrtomb@plt+0x471c>  // b.any
  406edc:	cmp	x23, x24
  406ee0:	b.eq	406f8c <wcrtomb@plt+0x471c>  // b.none
  406ee4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406ee8:	ldr	x0, [x8, #856]
  406eec:	cbz	x0, 406f8c <wcrtomb@plt+0x471c>
  406ef0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406ef4:	ldr	w8, [x8, #1208]
  406ef8:	cbz	w8, 406f20 <wcrtomb@plt+0x46b0>
  406efc:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406f00:	ldr	x1, [x8, #912]
  406f04:	ldrb	w8, [x1]
  406f08:	cbz	w8, 406f20 <wcrtomb@plt+0x46b0>
  406f0c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406f10:	ldr	x0, [x8, #936]
  406f14:	bl	415e74 <wcrtomb@plt+0x13604>
  406f18:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406f1c:	ldr	x0, [x8, #856]
  406f20:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406f24:	ldr	x1, [x8, #1096]
  406f28:	bl	402750 <fputs_unlocked@plt>
  406f2c:	tbz	w0, #31, 406f40 <wcrtomb@plt+0x46d0>
  406f30:	bl	4027e0 <__errno_location@plt>
  406f34:	ldr	w8, [x0]
  406f38:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406f3c:	str	w8, [x9, #1468]
  406f40:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406f44:	ldr	w8, [x8, #1208]
  406f48:	cbz	w8, 406f68 <wcrtomb@plt+0x46f8>
  406f4c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406f50:	ldr	x8, [x8, #912]
  406f54:	ldrb	w8, [x8]
  406f58:	cbz	w8, 406f68 <wcrtomb@plt+0x46f8>
  406f5c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406f60:	ldr	x0, [x8, #944]
  406f64:	bl	415e78 <wcrtomb@plt+0x13608>
  406f68:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406f6c:	ldr	x0, [x8, #1096]
  406f70:	ldp	x8, x9, [x0, #40]
  406f74:	cmp	x8, x9
  406f78:	b.cs	4070e8 <wcrtomb@plt+0x4878>  // b.hs, b.nlast
  406f7c:	add	x9, x8, #0x1
  406f80:	str	x9, [x0, #40]
  406f84:	mov	w9, #0xa                   	// #10
  406f88:	strb	w9, [x8]
  406f8c:	cmp	x23, x22
  406f90:	b.cs	407044 <wcrtomb@plt+0x47d4>  // b.hs, b.nlast
  406f94:	sub	x2, x22, x23
  406f98:	mov	x0, x23
  406f9c:	mov	w1, w21
  406fa0:	bl	4026d0 <memchr@plt>
  406fa4:	add	x24, x0, #0x1
  406fa8:	mov	w2, #0x2d                  	// #45
  406fac:	mov	x0, x23
  406fb0:	mov	x1, x24
  406fb4:	bl	40716c <wcrtomb@plt+0x48fc>
  406fb8:	cmp	x24, x22
  406fbc:	mov	x23, x24
  406fc0:	b.cc	406f94 <wcrtomb@plt+0x4724>  // b.lo, b.ul, b.last
  406fc4:	ldrb	w8, [x25, #1204]
  406fc8:	cbz	w8, 407050 <wcrtomb@plt+0x47e0>
  406fcc:	cmp	x24, x20
  406fd0:	mov	x23, xzr
  406fd4:	b.cs	40703c <wcrtomb@plt+0x47cc>  // b.hs, b.nlast
  406fd8:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  406fdc:	ldr	x25, [x8, #1520]
  406fe0:	cmp	x25, #0x1
  406fe4:	b.lt	40703c <wcrtomb@plt+0x47cc>  // b.tstop
  406fe8:	mov	x23, xzr
  406fec:	sub	x2, x20, x24
  406ff0:	mov	x0, x24
  406ff4:	mov	w1, w21
  406ff8:	bl	4026d0 <memchr@plt>
  406ffc:	ldrb	w8, [x28, #1408]
  407000:	add	x22, x0, #0x1
  407004:	cbnz	w8, 407020 <wcrtomb@plt+0x47b0>
  407008:	mov	w2, #0x3a                  	// #58
  40700c:	mov	x0, x24
  407010:	mov	x1, x22
  407014:	bl	40716c <wcrtomb@plt+0x48fc>
  407018:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40701c:	ldr	x25, [x8, #1520]
  407020:	cmp	x22, x20
  407024:	add	x23, x23, #0x1
  407028:	b.cs	407070 <wcrtomb@plt+0x4800>  // b.hs, b.nlast
  40702c:	cmp	x23, x25
  407030:	mov	x24, x22
  407034:	b.lt	406fec <wcrtomb@plt+0x477c>  // b.tstop
  407038:	b	407070 <wcrtomb@plt+0x4800>
  40703c:	mov	x22, x24
  407040:	b	407070 <wcrtomb@plt+0x4800>
  407044:	mov	x24, x23
  407048:	ldrb	w8, [x25, #1204]
  40704c:	cbnz	w8, 406fcc <wcrtomb@plt+0x475c>
  407050:	ldrb	w8, [x28, #1408]
  407054:	cbnz	w8, 407068 <wcrtomb@plt+0x47f8>
  407058:	mov	w2, #0x3a                  	// #58
  40705c:	mov	x0, x22
  407060:	mov	x1, x20
  407064:	bl	40716c <wcrtomb@plt+0x48fc>
  407068:	mov	x22, x20
  40706c:	mov	w23, #0x1                   	// #1
  407070:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407074:	adrp	x11, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407078:	ldr	x8, [x8, #1584]
  40707c:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407080:	ldr	x11, [x11, #1168]
  407084:	adrp	x12, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407088:	mov	w13, #0x1                   	// #1
  40708c:	ldr	x9, [x9, #1560]
  407090:	ldrb	w10, [x28, #1408]
  407094:	strb	w13, [x12, #1597]
  407098:	adrp	x13, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40709c:	ldr	x12, [x13, #1520]
  4070a0:	add	x8, x8, x22
  4070a4:	cmp	x11, #0x0
  4070a8:	sub	x8, x8, x9
  4070ac:	ccmp	w10, #0x0, #0x0, gt
  4070b0:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4070b4:	str	x8, [x9, #1528]
  4070b8:	csel	x8, x11, xzr, eq  // eq = none
  4070bc:	subs	x9, x12, x23
  4070c0:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4070c4:	adrp	x23, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4070c8:	adrp	x25, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4070cc:	str	x8, [x26, #1536]
  4070d0:	str	x9, [x13, #1520]
  4070d4:	b.eq	407108 <wcrtomb@plt+0x4898>  // b.none
  4070d8:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4070dc:	ldrb	w8, [x8, #1404]
  4070e0:	cbz	w8, 406d0c <wcrtomb@plt+0x449c>
  4070e4:	b	407108 <wcrtomb@plt+0x4898>
  4070e8:	mov	w1, #0xa                   	// #10
  4070ec:	bl	402590 <__overflow@plt>
  4070f0:	tbz	w0, #31, 406f8c <wcrtomb@plt+0x471c>
  4070f4:	bl	4027e0 <__errno_location@plt>
  4070f8:	ldr	w8, [x0]
  4070fc:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407100:	str	w8, [x9, #1468]
  407104:	b	406f8c <wcrtomb@plt+0x471c>
  407108:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40710c:	ldrb	w8, [x8, #1197]
  407110:	cmp	w8, #0x1
  407114:	b.eq	407148 <wcrtomb@plt+0x48d8>  // b.none
  407118:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40711c:	ldr	x8, [x8, #1520]
  407120:	ldr	x9, [sp]
  407124:	ldp	x20, x19, [sp, #96]
  407128:	ldp	x22, x21, [sp, #80]
  40712c:	ldp	x24, x23, [sp, #64]
  407130:	ldp	x26, x25, [sp, #48]
  407134:	ldp	x28, x27, [sp, #32]
  407138:	ldp	x29, x30, [sp, #16]
  40713c:	sub	x0, x9, x8
  407140:	add	sp, sp, #0x70
  407144:	ret
  407148:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40714c:	ldrb	w8, [x8, #1465]
  407150:	cmp	w8, #0x1
  407154:	b.ne	407164 <wcrtomb@plt+0x48f4>  // b.any
  407158:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40715c:	ldr	w0, [x8, #960]
  407160:	bl	402290 <exit@plt>
  407164:	mov	w0, wzr
  407168:	bl	402290 <exit@plt>
  40716c:	sub	sp, sp, #0x70
  407170:	stp	x26, x25, [sp, #48]
  407174:	adrp	x26, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407178:	ldrb	w8, [x26, #1176]
  40717c:	stp	x22, x21, [sp, #80]
  407180:	stp	x20, x19, [sp, #96]
  407184:	mov	w21, w2
  407188:	mov	x19, x1
  40718c:	mov	x20, x0
  407190:	stp	x29, x30, [sp, #16]
  407194:	stp	x28, x27, [sp, #32]
  407198:	stp	x24, x23, [sp, #64]
  40719c:	add	x29, sp, #0x10
  4071a0:	tbnz	w8, #0, 4071c0 <wcrtomb@plt+0x4950>
  4071a4:	mvn	x8, x20
  4071a8:	add	x1, x19, x8
  4071ac:	mov	x0, x20
  4071b0:	mov	x2, x19
  4071b4:	mov	w3, w21
  4071b8:	bl	407620 <wcrtomb@plt+0x4db0>
  4071bc:	tbz	w0, #0, 4075dc <wcrtomb@plt+0x4d6c>
  4071c0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4071c4:	adrp	x28, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4071c8:	ldr	w11, [x28, #1208]
  4071cc:	ldrb	w9, [x8, #1204]
  4071d0:	and	w8, w21, #0xff
  4071d4:	cmp	w8, #0x3a
  4071d8:	cset	w10, eq  // eq = none
  4071dc:	cbz	w11, 407238 <wcrtomb@plt+0x49c8>
  4071e0:	cmp	w9, #0x0
  4071e4:	cset	w14, ne  // ne = any
  4071e8:	cmp	w11, #0x0
  4071ec:	cset	w15, lt  // lt = tstop
  4071f0:	cmp	w8, #0x3a
  4071f4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4071f8:	and	w14, w14, w15
  4071fc:	adrp	x15, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407200:	add	x8, x8, #0x368
  407204:	add	x15, x15, #0x360
  407208:	csel	x8, x8, x15, eq  // eq = none
  40720c:	cset	w15, eq  // eq = none
  407210:	adrp	x12, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407214:	adrp	x13, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407218:	eor	w14, w15, w14
  40721c:	add	x12, x12, #0x398
  407220:	add	x13, x13, #0x3a0
  407224:	cmp	w14, #0x0
  407228:	csel	x12, x12, x13, ne  // ne = any
  40722c:	ldr	x21, [x12]
  407230:	ldr	x22, [x8]
  407234:	b	407240 <wcrtomb@plt+0x49d0>
  407238:	mov	x21, xzr
  40723c:	mov	x22, xzr
  407240:	ldrb	w8, [x26, #1176]
  407244:	cmp	w9, w10
  407248:	b.eq	407250 <wcrtomb@plt+0x49e0>  // b.none
  40724c:	tbnz	w8, #0, 407264 <wcrtomb@plt+0x49f4>
  407250:	cbz	w11, 4074a4 <wcrtomb@plt+0x4c34>
  407254:	ldrb	w11, [x21]
  407258:	cbnz	w11, 407264 <wcrtomb@plt+0x49f4>
  40725c:	ldrb	w11, [x22]
  407260:	cbz	w11, 4074a4 <wcrtomb@plt+0x4c34>
  407264:	cmp	w9, w10
  407268:	b.eq	407474 <wcrtomb@plt+0x4c04>  // b.none
  40726c:	tbnz	w8, #0, 407278 <wcrtomb@plt+0x4a08>
  407270:	ldrb	w9, [x22]
  407274:	cbz	w9, 40747c <wcrtomb@plt+0x4c0c>
  407278:	cmp	x20, x19
  40727c:	b.cs	407450 <wcrtomb@plt+0x4be0>  // b.hs, b.nlast
  407280:	mov	x27, xzr
  407284:	sub	x23, x19, x20
  407288:	mov	x25, x20
  40728c:	b	4072b0 <wcrtomb@plt+0x4a40>
  407290:	mov	w8, #0x1                   	// #1
  407294:	cmp	x27, #0x0
  407298:	str	x8, [sp, #8]
  40729c:	csel	x27, x25, x27, eq  // eq = none
  4072a0:	ldr	x8, [sp, #8]
  4072a4:	add	x25, x24, x8
  4072a8:	cmp	x25, x19
  4072ac:	b.cs	407458 <wcrtomb@plt+0x4be8>  // b.hs, b.nlast
  4072b0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4072b4:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4072b8:	ldr	x8, [x8, #1416]
  4072bc:	ldr	x0, [x9, #1424]
  4072c0:	add	x3, sp, #0x8
  4072c4:	mov	x1, x20
  4072c8:	mov	x2, x23
  4072cc:	mov	x4, x25
  4072d0:	blr	x8
  4072d4:	cmn	x0, #0x1
  4072d8:	b.eq	407458 <wcrtomb@plt+0x4be8>  // b.none
  4072dc:	add	x24, x20, x0
  4072e0:	cmp	x24, x19
  4072e4:	b.eq	407458 <wcrtomb@plt+0x4be8>  // b.none
  4072e8:	ldr	x1, [sp, #8]
  4072ec:	cbz	x1, 407290 <wcrtomb@plt+0x4a20>
  4072f0:	ldrb	w8, [x26, #1176]
  4072f4:	cmp	w8, #0x1
  4072f8:	b.ne	407328 <wcrtomb@plt+0x4ab8>  // b.any
  4072fc:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407300:	ldrb	w8, [x8, #1204]
  407304:	mov	w9, #0x3a                  	// #58
  407308:	mov	x0, x24
  40730c:	mov	x2, x19
  407310:	cmp	w8, #0x0
  407314:	mov	w8, #0x2d                  	// #45
  407318:	csel	w3, w9, w8, eq  // eq = none
  40731c:	bl	407620 <wcrtomb@plt+0x4db0>
  407320:	tbnz	w0, #0, 40736c <wcrtomb@plt+0x4afc>
  407324:	b	4075dc <wcrtomb@plt+0x4d6c>
  407328:	ldrb	w8, [x21]
  40732c:	cbz	w8, 407340 <wcrtomb@plt+0x4ad0>
  407330:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407334:	ldr	x0, [x8, #936]
  407338:	mov	x1, x21
  40733c:	bl	415e74 <wcrtomb@plt+0x13604>
  407340:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407344:	ldr	x3, [x8, #1096]
  407348:	cmp	x27, #0x0
  40734c:	csel	x0, x25, x27, eq  // eq = none
  407350:	sub	x25, x24, x0
  407354:	mov	w1, #0x1                   	// #1
  407358:	mov	x2, x25
  40735c:	bl	402260 <fwrite_unlocked@plt>
  407360:	cmp	x0, x25
  407364:	b.ne	407378 <wcrtomb@plt+0x4b08>  // b.any
  407368:	mov	x27, xzr
  40736c:	ldr	w8, [x28, #1208]
  407370:	cbnz	w8, 407394 <wcrtomb@plt+0x4b24>
  407374:	b	4073ac <wcrtomb@plt+0x4b3c>
  407378:	bl	4027e0 <__errno_location@plt>
  40737c:	ldr	w8, [x0]
  407380:	mov	x27, xzr
  407384:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407388:	str	w8, [x9, #1468]
  40738c:	ldr	w8, [x28, #1208]
  407390:	cbz	w8, 4073ac <wcrtomb@plt+0x4b3c>
  407394:	ldrb	w8, [x22]
  407398:	cbz	w8, 4073ac <wcrtomb@plt+0x4b3c>
  40739c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4073a0:	ldr	x0, [x8, #936]
  4073a4:	mov	x1, x22
  4073a8:	bl	415e74 <wcrtomb@plt+0x13604>
  4073ac:	ldr	x25, [sp, #8]
  4073b0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4073b4:	ldr	x3, [x8, #1096]
  4073b8:	mov	w1, #0x1                   	// #1
  4073bc:	mov	x0, x24
  4073c0:	mov	x2, x25
  4073c4:	bl	402260 <fwrite_unlocked@plt>
  4073c8:	cmp	x0, x25
  4073cc:	b.eq	4073e0 <wcrtomb@plt+0x4b70>  // b.none
  4073d0:	bl	4027e0 <__errno_location@plt>
  4073d4:	ldr	w8, [x0]
  4073d8:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4073dc:	str	w8, [x9, #1468]
  4073e0:	ldr	w8, [x28, #1208]
  4073e4:	cbz	w8, 4073fc <wcrtomb@plt+0x4b8c>
  4073e8:	ldrb	w8, [x22]
  4073ec:	cbz	w8, 4073fc <wcrtomb@plt+0x4b8c>
  4073f0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4073f4:	ldr	x0, [x8, #944]
  4073f8:	bl	415e78 <wcrtomb@plt+0x13608>
  4073fc:	ldrb	w8, [x26, #1176]
  407400:	cmp	w8, #0x1
  407404:	b.ne	4072a0 <wcrtomb@plt+0x4a30>  // b.any
  407408:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40740c:	ldr	x0, [x8, #1096]
  407410:	adrp	x10, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  407414:	ldrb	w1, [x10, #2228]
  407418:	ldp	x8, x9, [x0, #40]
  40741c:	cmp	x8, x9
  407420:	b.cs	407434 <wcrtomb@plt+0x4bc4>  // b.hs, b.nlast
  407424:	add	x9, x8, #0x1
  407428:	str	x9, [x0, #40]
  40742c:	strb	w1, [x8]
  407430:	b	4072a0 <wcrtomb@plt+0x4a30>
  407434:	bl	402590 <__overflow@plt>
  407438:	tbz	w0, #31, 4072a0 <wcrtomb@plt+0x4a30>
  40743c:	bl	4027e0 <__errno_location@plt>
  407440:	ldr	w8, [x0]
  407444:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407448:	str	w8, [x9, #1468]
  40744c:	b	4072a0 <wcrtomb@plt+0x4a30>
  407450:	mov	x27, xzr
  407454:	b	407460 <wcrtomb@plt+0x4bf0>
  407458:	ldrb	w8, [x26, #1176]
  40745c:	mov	x20, x25
  407460:	cmp	x27, #0x0
  407464:	csel	x9, x20, x27, eq  // eq = none
  407468:	cmp	w8, #0x0
  40746c:	csel	x20, x19, x9, ne  // ne = any
  407470:	cbz	x20, 4075dc <wcrtomb@plt+0x4d6c>
  407474:	mov	x22, x20
  407478:	tbnz	w8, #0, 407550 <wcrtomb@plt+0x4ce0>
  40747c:	ldrb	w8, [x21]
  407480:	cbz	w8, 4074a4 <wcrtomb@plt+0x4c34>
  407484:	cmp	x20, x19
  407488:	b.cs	4074b4 <wcrtomb@plt+0x4c44>  // b.hs, b.nlast
  40748c:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  407490:	ldurb	w8, [x19, #-1]
  407494:	ldrb	w9, [x9, #2228]
  407498:	cmp	w8, w9
  40749c:	cset	w8, eq  // eq = none
  4074a0:	b	4074b8 <wcrtomb@plt+0x4c48>
  4074a4:	mov	x22, x20
  4074a8:	cmp	x22, x19
  4074ac:	b.cc	407558 <wcrtomb@plt+0x4ce8>  // b.lo, b.ul, b.last
  4074b0:	b	407594 <wcrtomb@plt+0x4d24>
  4074b4:	mov	x8, xzr
  4074b8:	sub	x9, x19, x8
  4074bc:	cmp	x9, x20
  4074c0:	b.ls	4074d8 <wcrtomb@plt+0x4c68>  // b.plast
  4074c4:	mvn	x9, x8
  4074c8:	ldrb	w9, [x19, x9]
  4074cc:	cmp	w9, #0xd
  4074d0:	cset	w9, eq  // eq = none
  4074d4:	b	4074dc <wcrtomb@plt+0x4c6c>
  4074d8:	mov	x9, xzr
  4074dc:	add	x8, x8, x9
  4074e0:	sub	x22, x19, x8
  4074e4:	subs	x23, x22, x20
  4074e8:	b.eq	40754c <wcrtomb@plt+0x4cdc>  // b.none
  4074ec:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4074f0:	ldr	x0, [x8, #936]
  4074f4:	mov	x1, x21
  4074f8:	bl	415e74 <wcrtomb@plt+0x13604>
  4074fc:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407500:	ldr	x3, [x8, #1096]
  407504:	mov	w1, #0x1                   	// #1
  407508:	mov	x0, x20
  40750c:	mov	x2, x23
  407510:	bl	402260 <fwrite_unlocked@plt>
  407514:	cmp	x0, x23
  407518:	b.eq	40752c <wcrtomb@plt+0x4cbc>  // b.none
  40751c:	bl	4027e0 <__errno_location@plt>
  407520:	ldr	w8, [x0]
  407524:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407528:	str	w8, [x9, #1468]
  40752c:	ldrb	w8, [x21]
  407530:	cbz	w8, 407550 <wcrtomb@plt+0x4ce0>
  407534:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407538:	ldr	x0, [x8, #944]
  40753c:	bl	415e78 <wcrtomb@plt+0x13608>
  407540:	cmp	x22, x19
  407544:	b.cc	407558 <wcrtomb@plt+0x4ce8>  // b.lo, b.ul, b.last
  407548:	b	407594 <wcrtomb@plt+0x4d24>
  40754c:	mov	x22, x20
  407550:	cmp	x22, x19
  407554:	b.cs	407594 <wcrtomb@plt+0x4d24>  // b.hs, b.nlast
  407558:	ldrb	w8, [x26, #1176]
  40755c:	cbnz	w8, 407594 <wcrtomb@plt+0x4d24>
  407560:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407564:	ldr	x3, [x8, #1096]
  407568:	sub	x20, x19, x22
  40756c:	mov	w1, #0x1                   	// #1
  407570:	mov	x0, x22
  407574:	mov	x2, x20
  407578:	bl	402260 <fwrite_unlocked@plt>
  40757c:	cmp	x0, x20
  407580:	b.eq	407594 <wcrtomb@plt+0x4d24>  // b.none
  407584:	bl	4027e0 <__errno_location@plt>
  407588:	ldr	w8, [x0]
  40758c:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407590:	str	w8, [x9, #1468]
  407594:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407598:	ldrb	w8, [x8, #1248]
  40759c:	cmp	w8, #0x1
  4075a0:	b.ne	4075c8 <wcrtomb@plt+0x4d58>  // b.any
  4075a4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4075a8:	ldr	x0, [x8, #1096]
  4075ac:	bl	402670 <fflush_unlocked@plt>
  4075b0:	cbz	w0, 4075c8 <wcrtomb@plt+0x4d58>
  4075b4:	bl	4027e0 <__errno_location@plt>
  4075b8:	ldr	w20, [x0]
  4075bc:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4075c0:	str	w20, [x8, #1468]
  4075c4:	b	4075d0 <wcrtomb@plt+0x4d60>
  4075c8:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4075cc:	ldr	w20, [x8, #1468]
  4075d0:	cbnz	w20, 4075fc <wcrtomb@plt+0x4d8c>
  4075d4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4075d8:	str	x19, [x8, #1504]
  4075dc:	ldp	x20, x19, [sp, #96]
  4075e0:	ldp	x22, x21, [sp, #80]
  4075e4:	ldp	x24, x23, [sp, #64]
  4075e8:	ldp	x26, x25, [sp, #48]
  4075ec:	ldp	x28, x27, [sp, #32]
  4075f0:	ldp	x29, x30, [sp, #16]
  4075f4:	add	sp, sp, #0x70
  4075f8:	ret
  4075fc:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  407600:	add	x1, x1, #0x11f
  407604:	mov	w2, #0x5                   	// #5
  407608:	mov	x0, xzr
  40760c:	bl	402740 <dcgettext@plt>
  407610:	mov	x2, x0
  407614:	mov	w0, #0x2                   	// #2
  407618:	mov	w1, w20
  40761c:	bl	4022a0 <error@plt>
  407620:	stp	x29, x30, [sp, #-96]!
  407624:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407628:	ldr	w8, [x8, #1184]
  40762c:	stp	x22, x21, [sp, #64]
  407630:	stp	x20, x19, [sp, #80]
  407634:	mov	w20, w3
  407638:	mov	x22, x2
  40763c:	mov	x19, x1
  407640:	cmp	w8, #0x1
  407644:	mov	x21, x0
  407648:	str	x27, [sp, #16]
  40764c:	stp	x26, x25, [sp, #32]
  407650:	stp	x24, x23, [sp, #48]
  407654:	mov	x29, sp
  407658:	b.eq	4076fc <wcrtomb@plt+0x4e8c>  // b.none
  40765c:	adrp	x24, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407660:	ldr	x8, [x24, #1480]
  407664:	cbz	x8, 4076fc <wcrtomb@plt+0x4e8c>
  407668:	add	x25, x21, x19
  40766c:	ldrb	w26, [x25]
  407670:	mov	w9, #0xff                  	// #255
  407674:	mov	x23, x21
  407678:	str	xzr, [x29, #24]
  40767c:	strb	w9, [x25]
  407680:	tst	x23, #0x7
  407684:	b.eq	4076a0 <wcrtomb@plt+0x4e30>  // b.none
  407688:	ldrb	w9, [x23]
  40768c:	tst	x8, x9
  407690:	b.ne	4076c4 <wcrtomb@plt+0x4e54>  // b.any
  407694:	add	x23, x23, #0x1
  407698:	tst	x23, #0x7
  40769c:	b.ne	407688 <wcrtomb@plt+0x4e18>  // b.any
  4076a0:	sub	x23, x23, #0x8
  4076a4:	ldr	x9, [x23, #8]!
  4076a8:	ands	x9, x9, x8
  4076ac:	b.eq	4076a4 <wcrtomb@plt+0x4e34>  // b.none
  4076b0:	tst	x9, #0xff
  4076b4:	b.ne	4076c4 <wcrtomb@plt+0x4e54>  // b.any
  4076b8:	ldrb	w9, [x23, #1]!
  4076bc:	tst	x8, x9
  4076c0:	b.eq	4076b8 <wcrtomb@plt+0x4e48>  // b.none
  4076c4:	cmp	x23, x25
  4076c8:	b.cs	4076f8 <wcrtomb@plt+0x4e88>  // b.hs, b.nlast
  4076cc:	sub	x1, x25, x23
  4076d0:	add	x2, x29, #0x18
  4076d4:	mov	x0, x23
  4076d8:	bl	417e8c <wcrtomb@plt+0x1561c>
  4076dc:	cmn	x0, #0x3
  4076e0:	b.hi	40780c <wcrtomb@plt+0x4f9c>  // b.pmore
  4076e4:	ldr	x8, [x24, #1480]
  4076e8:	add	x23, x23, x0
  4076ec:	tst	x23, #0x7
  4076f0:	b.ne	407688 <wcrtomb@plt+0x4e18>  // b.any
  4076f4:	b	4076a0 <wcrtomb@plt+0x4e30>
  4076f8:	strb	w26, [x25]
  4076fc:	adrp	x24, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407700:	ldr	w8, [x24, #1436]
  407704:	cbz	w8, 4077a8 <wcrtomb@plt+0x4f38>
  407708:	bl	40685c <wcrtomb@plt+0x3fec>
  40770c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407710:	ldrb	w8, [x8, #1144]
  407714:	cmp	w8, #0x1
  407718:	b.ne	407788 <wcrtomb@plt+0x4f18>  // b.any
  40771c:	adrp	x25, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407720:	ldr	w8, [x25, #1208]
  407724:	adrp	x23, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407728:	cbz	w8, 407744 <wcrtomb@plt+0x4ed4>
  40772c:	ldr	x1, [x23, #912]
  407730:	ldrb	w8, [x1]
  407734:	cbz	w8, 407744 <wcrtomb@plt+0x4ed4>
  407738:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40773c:	ldr	x0, [x8, #936]
  407740:	bl	415e74 <wcrtomb@plt+0x13604>
  407744:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407748:	ldr	x0, [x8, #1096]
  40774c:	ldp	x8, x9, [x0, #40]
  407750:	cmp	x8, x9
  407754:	b.cs	407ac4 <wcrtomb@plt+0x5254>  // b.hs, b.nlast
  407758:	add	x9, x8, #0x1
  40775c:	str	x9, [x0, #40]
  407760:	strb	w20, [x8]
  407764:	ldr	w8, [x25, #1208]
  407768:	cbz	w8, 4077a8 <wcrtomb@plt+0x4f38>
  40776c:	ldr	x8, [x23, #912]
  407770:	ldrb	w8, [x8]
  407774:	cbz	w8, 4077a8 <wcrtomb@plt+0x4f38>
  407778:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40777c:	ldr	x0, [x8, #944]
  407780:	bl	415e78 <wcrtomb@plt+0x13608>
  407784:	b	4077a8 <wcrtomb@plt+0x4f38>
  407788:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40778c:	ldr	x0, [x8, #1096]
  407790:	ldp	x8, x9, [x0, #40]
  407794:	cmp	x8, x9
  407798:	b.cs	407ae4 <wcrtomb@plt+0x5274>  // b.hs, b.nlast
  40779c:	add	x9, x8, #0x1
  4077a0:	str	x9, [x0, #40]
  4077a4:	strb	wzr, [x8]
  4077a8:	adrp	x25, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4077ac:	ldrb	w8, [x25, #1196]
  4077b0:	cmp	w8, #0x1
  4077b4:	b.ne	40791c <wcrtomb@plt+0x50ac>  // b.any
  4077b8:	adrp	x26, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4077bc:	ldr	x0, [x26, #1568]
  4077c0:	cmp	x0, x22
  4077c4:	b.cs	407800 <wcrtomb@plt+0x4f90>  // b.hs, b.nlast
  4077c8:	cmp	x0, x21
  4077cc:	b.cs	407824 <wcrtomb@plt+0x4fb4>  // b.hs, b.nlast
  4077d0:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  4077d4:	ldrb	w23, [x8, #2228]
  4077d8:	mov	x27, xzr
  4077dc:	sub	x2, x21, x0
  4077e0:	mov	w1, w23
  4077e4:	bl	4026d0 <memchr@plt>
  4077e8:	cbz	x0, 407828 <wcrtomb@plt+0x4fb8>
  4077ec:	add	x0, x0, #0x1
  4077f0:	cmp	x0, x21
  4077f4:	add	x27, x27, #0x1
  4077f8:	b.cc	4077dc <wcrtomb@plt+0x4f6c>  // b.lo, b.ul, b.last
  4077fc:	b	407828 <wcrtomb@plt+0x4fb8>
  407800:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407804:	ldr	x23, [x8, #1512]
  407808:	b	407854 <wcrtomb@plt+0x4fe4>
  40780c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407810:	mov	w9, #0x1                   	// #1
  407814:	mov	w0, wzr
  407818:	strb	w26, [x25]
  40781c:	strb	w9, [x8, #1545]
  407820:	b	407a68 <wcrtomb@plt+0x51f8>
  407824:	mov	x27, xzr
  407828:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40782c:	ldr	x9, [x8, #1512]
  407830:	adds	x9, x9, x27
  407834:	b.cs	407b24 <wcrtomb@plt+0x52b4>  // b.hs, b.nlast
  407838:	cmn	x9, #0x1
  40783c:	str	x9, [x8, #1512]
  407840:	str	x21, [x26, #1568]
  407844:	b.eq	407b24 <wcrtomb@plt+0x52b4>  // b.none
  407848:	add	x23, x9, #0x1
  40784c:	str	x23, [x8, #1512]
  407850:	str	x22, [x26, #1568]
  407854:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407858:	adrp	x26, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40785c:	ldr	w9, [x26, #1208]
  407860:	ldr	x22, [x8, #896]
  407864:	cbz	w9, 407880 <wcrtomb@plt+0x5010>
  407868:	ldrb	w8, [x22]
  40786c:	cbz	w8, 407880 <wcrtomb@plt+0x5010>
  407870:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407874:	ldr	x0, [x8, #936]
  407878:	mov	x1, x22
  40787c:	bl	415e74 <wcrtomb@plt+0x13604>
  407880:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407884:	ldr	w1, [x8, #1548]
  407888:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40788c:	add	x0, x0, #0x12b
  407890:	mov	x2, x23
  407894:	bl	40691c <wcrtomb@plt+0x40ac>
  407898:	ldr	w8, [x26, #1208]
  40789c:	cbz	w8, 4078d8 <wcrtomb@plt+0x5068>
  4078a0:	ldrb	w8, [x22]
  4078a4:	cbz	w8, 4078bc <wcrtomb@plt+0x504c>
  4078a8:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4078ac:	ldr	x0, [x8, #944]
  4078b0:	bl	415e78 <wcrtomb@plt+0x13608>
  4078b4:	ldr	w8, [x26, #1208]
  4078b8:	cbz	w8, 4078d8 <wcrtomb@plt+0x5068>
  4078bc:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4078c0:	ldr	x1, [x8, #912]
  4078c4:	ldrb	w8, [x1]
  4078c8:	cbz	w8, 4078d8 <wcrtomb@plt+0x5068>
  4078cc:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4078d0:	ldr	x0, [x8, #936]
  4078d4:	bl	415e74 <wcrtomb@plt+0x13604>
  4078d8:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4078dc:	ldr	x0, [x8, #1096]
  4078e0:	ldp	x8, x9, [x0, #40]
  4078e4:	cmp	x8, x9
  4078e8:	b.cs	407a84 <wcrtomb@plt+0x5214>  // b.hs, b.nlast
  4078ec:	add	x9, x8, #0x1
  4078f0:	str	x9, [x0, #40]
  4078f4:	strb	w20, [x8]
  4078f8:	ldr	w8, [x26, #1208]
  4078fc:	cbz	w8, 40791c <wcrtomb@plt+0x50ac>
  407900:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407904:	ldr	x8, [x8, #912]
  407908:	ldrb	w8, [x8]
  40790c:	cbz	w8, 40791c <wcrtomb@plt+0x50ac>
  407910:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407914:	ldr	x0, [x8, #944]
  407918:	bl	415e78 <wcrtomb@plt+0x13608>
  40791c:	adrp	x23, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407920:	ldrb	w8, [x23, #1190]
  407924:	cmp	w8, #0x1
  407928:	b.ne	407a10 <wcrtomb@plt+0x51a0>  // b.any
  40792c:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407930:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407934:	ldr	x9, [x9, #1552]
  407938:	ldr	x8, [x8, #1496]
  40793c:	sub	x9, x21, x9
  407940:	adds	x21, x9, x8
  407944:	b.cs	407b24 <wcrtomb@plt+0x52b4>  // b.hs, b.nlast
  407948:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40794c:	adrp	x26, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407950:	ldr	w9, [x26, #1208]
  407954:	ldr	x22, [x8, #904]
  407958:	cbz	w9, 407974 <wcrtomb@plt+0x5104>
  40795c:	ldrb	w8, [x22]
  407960:	cbz	w8, 407974 <wcrtomb@plt+0x5104>
  407964:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407968:	ldr	x0, [x8, #936]
  40796c:	mov	x1, x22
  407970:	bl	415e74 <wcrtomb@plt+0x13604>
  407974:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407978:	ldr	w1, [x8, #1548]
  40797c:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  407980:	add	x0, x0, #0x12b
  407984:	mov	x2, x21
  407988:	bl	40691c <wcrtomb@plt+0x40ac>
  40798c:	ldr	w8, [x26, #1208]
  407990:	cbz	w8, 4079cc <wcrtomb@plt+0x515c>
  407994:	ldrb	w8, [x22]
  407998:	cbz	w8, 4079b0 <wcrtomb@plt+0x5140>
  40799c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4079a0:	ldr	x0, [x8, #944]
  4079a4:	bl	415e78 <wcrtomb@plt+0x13608>
  4079a8:	ldr	w8, [x26, #1208]
  4079ac:	cbz	w8, 4079cc <wcrtomb@plt+0x515c>
  4079b0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4079b4:	ldr	x1, [x8, #912]
  4079b8:	ldrb	w8, [x1]
  4079bc:	cbz	w8, 4079cc <wcrtomb@plt+0x515c>
  4079c0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4079c4:	ldr	x0, [x8, #936]
  4079c8:	bl	415e74 <wcrtomb@plt+0x13604>
  4079cc:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4079d0:	ldr	x0, [x8, #1096]
  4079d4:	ldp	x8, x9, [x0, #40]
  4079d8:	cmp	x8, x9
  4079dc:	b.cs	407aa4 <wcrtomb@plt+0x5234>  // b.hs, b.nlast
  4079e0:	add	x9, x8, #0x1
  4079e4:	str	x9, [x0, #40]
  4079e8:	strb	w20, [x8]
  4079ec:	ldr	w8, [x26, #1208]
  4079f0:	cbz	w8, 407a10 <wcrtomb@plt+0x51a0>
  4079f4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4079f8:	ldr	x8, [x8, #912]
  4079fc:	ldrb	w8, [x8]
  407a00:	cbz	w8, 407a10 <wcrtomb@plt+0x51a0>
  407a04:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407a08:	ldr	x0, [x8, #944]
  407a0c:	bl	415e78 <wcrtomb@plt+0x13608>
  407a10:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407a14:	ldrb	w8, [x8, #1188]
  407a18:	cmp	w8, #0x1
  407a1c:	b.ne	407a64 <wcrtomb@plt+0x51f4>  // b.any
  407a20:	mov	w0, #0x1                   	// #1
  407a24:	cbz	x19, 407a68 <wcrtomb@plt+0x51f8>
  407a28:	ldr	w8, [x24, #1436]
  407a2c:	ldrb	w9, [x25, #1196]
  407a30:	ldrb	w10, [x23, #1190]
  407a34:	orr	w8, w8, w9
  407a38:	orr	w8, w8, w10
  407a3c:	cbz	w8, 407a68 <wcrtomb@plt+0x51f8>
  407a40:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407a44:	ldr	x0, [x8, #1096]
  407a48:	ldp	x8, x9, [x0, #40]
  407a4c:	cmp	x8, x9
  407a50:	b.cs	407b04 <wcrtomb@plt+0x5294>  // b.hs, b.nlast
  407a54:	add	x9, x8, #0x1
  407a58:	mov	w10, #0x9                   	// #9
  407a5c:	str	x9, [x0, #40]
  407a60:	strb	w10, [x8]
  407a64:	mov	w0, #0x1                   	// #1
  407a68:	ldp	x20, x19, [sp, #80]
  407a6c:	ldp	x22, x21, [sp, #64]
  407a70:	ldp	x24, x23, [sp, #48]
  407a74:	ldp	x26, x25, [sp, #32]
  407a78:	ldr	x27, [sp, #16]
  407a7c:	ldp	x29, x30, [sp], #96
  407a80:	ret
  407a84:	and	w1, w20, #0xff
  407a88:	bl	402590 <__overflow@plt>
  407a8c:	tbz	w0, #31, 4078f8 <wcrtomb@plt+0x5088>
  407a90:	bl	4027e0 <__errno_location@plt>
  407a94:	ldr	w8, [x0]
  407a98:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407a9c:	str	w8, [x9, #1468]
  407aa0:	b	4078f8 <wcrtomb@plt+0x5088>
  407aa4:	and	w1, w20, #0xff
  407aa8:	bl	402590 <__overflow@plt>
  407aac:	tbz	w0, #31, 4079ec <wcrtomb@plt+0x517c>
  407ab0:	bl	4027e0 <__errno_location@plt>
  407ab4:	ldr	w8, [x0]
  407ab8:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407abc:	str	w8, [x9, #1468]
  407ac0:	b	4079ec <wcrtomb@plt+0x517c>
  407ac4:	and	w1, w20, #0xff
  407ac8:	bl	402590 <__overflow@plt>
  407acc:	tbz	w0, #31, 407764 <wcrtomb@plt+0x4ef4>
  407ad0:	bl	4027e0 <__errno_location@plt>
  407ad4:	ldr	w8, [x0]
  407ad8:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407adc:	str	w8, [x9, #1468]
  407ae0:	b	407764 <wcrtomb@plt+0x4ef4>
  407ae4:	mov	w1, wzr
  407ae8:	bl	402590 <__overflow@plt>
  407aec:	tbz	w0, #31, 4077a8 <wcrtomb@plt+0x4f38>
  407af0:	bl	4027e0 <__errno_location@plt>
  407af4:	ldr	w8, [x0]
  407af8:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407afc:	str	w8, [x9, #1468]
  407b00:	b	4077a8 <wcrtomb@plt+0x4f38>
  407b04:	mov	w1, #0x9                   	// #9
  407b08:	bl	402590 <__overflow@plt>
  407b0c:	tbz	w0, #31, 407a64 <wcrtomb@plt+0x51f4>
  407b10:	bl	4027e0 <__errno_location@plt>
  407b14:	ldr	w8, [x0]
  407b18:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  407b1c:	str	w8, [x9, #1468]
  407b20:	b	407a64 <wcrtomb@plt+0x51f4>
  407b24:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  407b28:	add	x1, x1, #0x130
  407b2c:	mov	w2, #0x5                   	// #5
  407b30:	mov	x0, xzr
  407b34:	bl	402740 <dcgettext@plt>
  407b38:	mov	x2, x0
  407b3c:	mov	w0, #0x2                   	// #2
  407b40:	mov	w1, wzr
  407b44:	bl	4022a0 <error@plt>
  407b48:	stp	x29, x30, [sp, #-96]!
  407b4c:	stp	x28, x27, [sp, #16]
  407b50:	stp	x26, x25, [sp, #32]
  407b54:	stp	x24, x23, [sp, #48]
  407b58:	stp	x22, x21, [sp, #64]
  407b5c:	stp	x20, x19, [sp, #80]
  407b60:	mov	x29, sp
  407b64:	sub	sp, sp, #0x1c0
  407b68:	mov	x23, x0
  407b6c:	mov	w0, #0x1                   	// #1
  407b70:	mov	x19, x1
  407b74:	stur	xzr, [x29, #-16]
  407b78:	bl	409664 <wcrtomb@plt+0x6df4>
  407b7c:	mov	x21, x0
  407b80:	mov	x22, xzr
  407b84:	adrp	x28, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  407b88:	stp	x19, x23, [sp]
  407b8c:	b	407bac <wcrtomb@plt+0x533c>
  407b90:	mov	x25, x26
  407b94:	mov	x0, x21
  407b98:	mov	x1, x23
  407b9c:	mov	x2, x25
  407ba0:	bl	4084ec <wcrtomb@plt+0x5c7c>
  407ba4:	mov	x23, x20
  407ba8:	cbz	x24, 407c68 <wcrtomb@plt+0x53f8>
  407bac:	mov	w1, #0xa                   	// #10
  407bb0:	mov	x0, x23
  407bb4:	mov	x2, x19
  407bb8:	mov	x25, x19
  407bbc:	bl	4026d0 <memchr@plt>
  407bc0:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  407bc4:	ldrb	w9, [x9, #3517]
  407bc8:	sub	x8, x0, x23
  407bcc:	mvn	x10, x8
  407bd0:	cmp	x0, #0x0
  407bd4:	mov	x24, x0
  407bd8:	add	x20, x0, #0x1
  407bdc:	add	x19, x19, x10
  407be0:	csel	x26, x25, x8, eq  // eq = none
  407be4:	cbz	w9, 407b90 <wcrtomb@plt+0x5320>
  407be8:	ldrb	w27, [x28, #2228]
  407bec:	cmp	w27, #0xa
  407bf0:	b.ne	407c10 <wcrtomb@plt+0x53a0>  // b.any
  407bf4:	ldr	x8, [sp, #8]
  407bf8:	cmp	x23, x8
  407bfc:	b.ls	407c10 <wcrtomb@plt+0x53a0>  // b.plast
  407c00:	cbz	x24, 407c10 <wcrtomb@plt+0x53a0>
  407c04:	sub	x23, x23, #0x1
  407c08:	add	x25, x26, #0x2
  407c0c:	b	407b94 <wcrtomb@plt+0x5324>
  407c10:	ldur	x8, [x29, #-16]
  407c14:	add	x25, x26, #0x2
  407c18:	cmp	x8, x25
  407c1c:	b.cs	407c48 <wcrtomb@plt+0x53d8>  // b.hs, b.nlast
  407c20:	mov	x0, x22
  407c24:	bl	402620 <free@plt>
  407c28:	sub	x1, x29, #0x10
  407c2c:	mov	x0, xzr
  407c30:	stur	x25, [x29, #-16]
  407c34:	bl	415758 <wcrtomb@plt+0x12ee8>
  407c38:	ldrb	w8, [x28, #2228]
  407c3c:	mov	x22, x0
  407c40:	strb	w8, [x0]
  407c44:	ldrb	w27, [x28, #2228]
  407c48:	add	x0, x22, #0x1
  407c4c:	mov	x1, x23
  407c50:	mov	x2, x26
  407c54:	bl	402210 <memcpy@plt>
  407c58:	add	x8, x26, x22
  407c5c:	mov	x23, x22
  407c60:	strb	w27, [x8, #1]
  407c64:	b	407b94 <wcrtomb@plt+0x5324>
  407c68:	mov	x0, x22
  407c6c:	bl	402620 <free@plt>
  407c70:	mov	x0, x21
  407c74:	bl	408e0c <wcrtomb@plt+0x659c>
  407c78:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  407c7c:	ldrb	w8, [x8, #3518]
  407c80:	ldr	x28, [sp]
  407c84:	mov	x22, x0
  407c88:	cbz	w8, 407d58 <wcrtomb@plt+0x54e8>
  407c8c:	movi	v0.2d, #0x0
  407c90:	cmp	x28, #0x1
  407c94:	stur	xzr, [x29, #-24]
  407c98:	stp	q0, q0, [sp, #384]
  407c9c:	stp	q0, q0, [sp, #352]
  407ca0:	stp	q0, q0, [sp, #320]
  407ca4:	stp	q0, q0, [sp, #288]
  407ca8:	stp	q0, q0, [sp, #256]
  407cac:	stp	q0, q0, [sp, #224]
  407cb0:	stp	q0, q0, [sp, #192]
  407cb4:	stp	q0, q0, [sp, #160]
  407cb8:	b.lt	407d58 <wcrtomb@plt+0x54e8>  // b.tstop
  407cbc:	ldr	x26, [sp, #8]
  407cc0:	add	x8, sp, #0x20
  407cc4:	adrp	x25, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  407cc8:	add	x20, sp, #0xa0
  407ccc:	add	x19, x26, x28
  407cd0:	mov	w23, #0x1                   	// #1
  407cd4:	sub	x24, x8, #0x4
  407cd8:	add	x25, x25, #0x8b8
  407cdc:	b	407cec <wcrtomb@plt+0x547c>
  407ce0:	add	x26, x26, #0x1
  407ce4:	cmp	x26, x19
  407ce8:	b.cs	407d58 <wcrtomb@plt+0x54e8>  // b.hs, b.nlast
  407cec:	ldrb	w8, [x26]
  407cf0:	ldrb	w9, [x20, x8]
  407cf4:	cbnz	w9, 407ce0 <wcrtomb@plt+0x5470>
  407cf8:	add	x9, x25, x8, lsl #2
  407cfc:	ldr	w0, [x9, #260]
  407d00:	add	x1, sp, #0x20
  407d04:	strb	w23, [x20, x8]
  407d08:	bl	411134 <wcrtomb@plt+0xe8c4>
  407d0c:	cmp	w0, #0x1
  407d10:	b.lt	407ce0 <wcrtomb@plt+0x5470>  // b.tstop
  407d14:	mov	w27, w0
  407d18:	b	407d28 <wcrtomb@plt+0x54b8>
  407d1c:	add	x8, x27, #0x1
  407d20:	cmp	x8, #0x1
  407d24:	b.le	407ce0 <wcrtomb@plt+0x5470>
  407d28:	ldr	w1, [x24, x27, lsl #2]
  407d2c:	add	x0, sp, #0x10
  407d30:	sub	x2, x29, #0x18
  407d34:	sub	x27, x27, #0x1
  407d38:	bl	402870 <wcrtomb@plt>
  407d3c:	cmp	w0, #0x2
  407d40:	b.lt	407d1c <wcrtomb@plt+0x54ac>  // b.tstop
  407d44:	sxtw	x2, w0
  407d48:	add	x1, sp, #0x10
  407d4c:	mov	x0, x21
  407d50:	bl	4084ec <wcrtomb@plt+0x5c7c>
  407d54:	b	407d1c <wcrtomb@plt+0x54ac>
  407d58:	mov	x0, x21
  407d5c:	bl	408e14 <wcrtomb@plt+0x65a4>
  407d60:	mov	w0, #0x28                  	// #40
  407d64:	bl	4155d4 <wcrtomb@plt+0x12d64>
  407d68:	ldr	x8, [sp, #8]
  407d6c:	stp	x21, x22, [x0]
  407d70:	str	xzr, [x0, #32]
  407d74:	stp	x8, x28, [x0, #16]
  407d78:	add	sp, sp, #0x1c0
  407d7c:	ldp	x20, x19, [sp, #80]
  407d80:	ldp	x22, x21, [sp, #64]
  407d84:	ldp	x24, x23, [sp, #48]
  407d88:	ldp	x26, x25, [sp, #32]
  407d8c:	ldp	x28, x27, [sp, #16]
  407d90:	ldp	x29, x30, [sp], #96
  407d94:	ret
  407d98:	sub	sp, sp, #0xc0
  407d9c:	stp	x29, x30, [sp, #96]
  407da0:	stp	x28, x27, [sp, #112]
  407da4:	stp	x26, x25, [sp, #128]
  407da8:	stp	x24, x23, [sp, #144]
  407dac:	stp	x22, x21, [sp, #160]
  407db0:	stp	x20, x19, [sp, #176]
  407db4:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  407db8:	adrp	x23, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  407dbc:	ldrb	w13, [x8, #2228]
  407dc0:	ldrb	w8, [x23, #3517]
  407dc4:	ldr	x25, [x0]
  407dc8:	mov	x21, x4
  407dcc:	mov	x24, x0
  407dd0:	add	x29, sp, #0x60
  407dd4:	str	x3, [sp, #40]
  407dd8:	cbz	x8, 407de8 <wcrtomb@plt+0x5578>
  407ddc:	stur	wzr, [x29, #-44]
  407de0:	mov	w27, wzr
  407de4:	b	407e2c <wcrtomb@plt+0x55bc>
  407de8:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  407dec:	add	x9, x9, #0x8b8
  407df0:	adrp	x10, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  407df4:	ldrb	w11, [x9, #2]
  407df8:	ldrb	w10, [x10, #3516]
  407dfc:	ldrb	w9, [x9]
  407e00:	cmp	x21, #0x0
  407e04:	cset	w12, ne  // ne = any
  407e08:	eor	w11, w11, #0x1
  407e0c:	orr	w10, w10, w12
  407e10:	and	w9, w11, w9
  407e14:	orr	w10, w10, w9
  407e18:	tst	w9, #0xff
  407e1c:	cset	w9, ne  // ne = any
  407e20:	tst	w10, #0xff
  407e24:	cset	w27, ne  // ne = any
  407e28:	stur	w9, [x29, #-44]
  407e2c:	cmp	x21, #0x0
  407e30:	csel	x28, x21, x1, ne  // ne = any
  407e34:	add	x26, x1, x2
  407e38:	cmp	x28, x26
  407e3c:	str	x1, [sp, #32]
  407e40:	stur	x28, [x29, #-8]
  407e44:	b.hi	408088 <wcrtomb@plt+0x5818>  // b.pmore
  407e48:	cmp	x21, #0x0
  407e4c:	sub	x9, x26, x28
  407e50:	str	x2, [sp, #16]
  407e54:	sub	x1, x28, x8
  407e58:	cset	w10, eq  // eq = none
  407e5c:	add	x2, x9, x8
  407e60:	sub	x3, x29, #0x20
  407e64:	mov	x0, x25
  407e68:	mov	w4, w27
  407e6c:	str	w13, [sp, #28]
  407e70:	str	w10, [sp, #48]
  407e74:	bl	409598 <wcrtomb@plt+0x6d28>
  407e78:	tbnz	x0, #63, 408088 <wcrtomb@plt+0x5818>
  407e7c:	add	x8, x24, #0x10
  407e80:	mov	x19, x0
  407e84:	str	x8, [sp, #8]
  407e88:	add	x8, x24, #0x18
  407e8c:	str	x8, [sp]
  407e90:	ldr	x8, [x24, #8]
  407e94:	ldur	x9, [x29, #-32]
  407e98:	cmp	x8, x9
  407e9c:	b.le	4080f0 <wcrtomb@plt+0x5880>
  407ea0:	ldur	x22, [x29, #-16]
  407ea4:	ldrb	w20, [x23, #3517]
  407ea8:	ldur	w8, [x29, #-44]
  407eac:	stur	xzr, [x29, #-40]
  407eb0:	cbz	w8, 407ed8 <wcrtomb@plt+0x5668>
  407eb4:	add	x2, x28, x19
  407eb8:	sub	x0, x29, #0x8
  407ebc:	sub	x1, x29, #0x28
  407ec0:	mov	x3, x26
  407ec4:	bl	40974c <wcrtomb@plt+0x6edc>
  407ec8:	cbz	x0, 407ed8 <wcrtomb@plt+0x5668>
  407ecc:	ldur	x8, [x29, #-8]
  407ed0:	sub	x8, x8, #0x1
  407ed4:	b	407ff4 <wcrtomb@plt+0x5784>
  407ed8:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  407edc:	ldrb	w8, [x8, #3516]
  407ee0:	sub	x22, x22, x20, lsl #1
  407ee4:	add	x28, x28, x19
  407ee8:	cbz	x21, 407ef0 <wcrtomb@plt+0x5680>
  407eec:	cbz	w8, 408130 <wcrtomb@plt+0x58c0>
  407ef0:	ldrb	w9, [x23, #3517]
  407ef4:	cbnz	w9, 408128 <wcrtomb@plt+0x58b8>
  407ef8:	cbz	w8, 4080b0 <wcrtomb@plt+0x5840>
  407efc:	ldur	x8, [x29, #-40]
  407f00:	cbz	x8, 407f18 <wcrtomb@plt+0x56a8>
  407f04:	sub	x0, x28, x8
  407f08:	mov	x1, x26
  407f0c:	bl	4099c8 <wcrtomb@plt+0x7158>
  407f10:	cbnz	x0, 407fe0 <wcrtomb@plt+0x5770>
  407f14:	b	407f4c <wcrtomb@plt+0x56dc>
  407f18:	ldur	x19, [x29, #-8]
  407f1c:	ldr	w1, [sp, #28]
  407f20:	sub	x2, x28, x19
  407f24:	mov	x0, x19
  407f28:	bl	402650 <memrchr@plt>
  407f2c:	cbz	x0, 407f38 <wcrtomb@plt+0x56c8>
  407f30:	add	x19, x0, #0x1
  407f34:	stur	x19, [x29, #-8]
  407f38:	mov	x0, x19
  407f3c:	mov	x1, x28
  407f40:	mov	x2, x26
  407f44:	bl	409a6c <wcrtomb@plt+0x71fc>
  407f48:	cbnz	x0, 407fe0 <wcrtomb@plt+0x5770>
  407f4c:	add	x19, x28, x22
  407f50:	mov	x0, x19
  407f54:	mov	x1, x26
  407f58:	bl	4099c8 <wcrtomb@plt+0x7158>
  407f5c:	cbz	x0, 4080ac <wcrtomb@plt+0x583c>
  407f60:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  407f64:	ldrb	w8, [x8, #2232]
  407f68:	ldr	w9, [sp, #48]
  407f6c:	cmp	w8, #0x0
  407f70:	cset	w8, eq  // eq = none
  407f74:	and	w8, w8, w9
  407f78:	tbz	w8, #0, 40802c <wcrtomb@plt+0x57bc>
  407f7c:	ldr	x22, [x24, #32]
  407f80:	cbnz	x22, 407fa4 <wcrtomb@plt+0x5734>
  407f84:	ldp	x1, x0, [sp]
  407f88:	bl	40380c <wcrtomb@plt+0xf9c>
  407f8c:	ldp	x0, x1, [x24, #16]
  407f90:	mov	w2, #0xa46                 	// #2630
  407f94:	movk	w2, #0x1, lsl #16
  407f98:	bl	4029e0 <wcrtomb@plt+0x170>
  407f9c:	mov	x22, x0
  407fa0:	str	x0, [x24, #32]
  407fa4:	ldr	w1, [sp, #28]
  407fa8:	sub	x2, x26, x19
  407fac:	mov	x0, x19
  407fb0:	bl	4026d0 <memchr@plt>
  407fb4:	ldr	x3, [sp, #40]
  407fb8:	cmp	x0, #0x0
  407fbc:	csinc	x19, x26, x0, eq  // eq = none
  407fc0:	sub	x2, x19, x28
  407fc4:	mov	x0, x22
  407fc8:	mov	x1, x28
  407fcc:	mov	x4, xzr
  407fd0:	bl	403038 <wcrtomb@plt+0x7c8>
  407fd4:	cmn	x0, #0x1
  407fd8:	b.ne	408144 <wcrtomb@plt+0x58d4>  // b.any
  407fdc:	sub	x28, x19, #0x1
  407fe0:	mov	x0, x28
  407fe4:	mov	x1, x26
  407fe8:	bl	4098f4 <wcrtomb@plt+0x7084>
  407fec:	add	x8, x28, x0
  407ff0:	stur	x8, [x29, #-8]
  407ff4:	add	x28, x8, #0x1
  407ff8:	cmp	x28, x26
  407ffc:	b.hi	408088 <wcrtomb@plt+0x5818>  // b.pmore
  408000:	ldrb	w8, [x23, #3517]
  408004:	sub	x9, x26, x28
  408008:	sub	x3, x29, #0x20
  40800c:	mov	x0, x25
  408010:	sub	x1, x28, x8
  408014:	add	x2, x9, x8
  408018:	mov	w4, w27
  40801c:	bl	409598 <wcrtomb@plt+0x6d28>
  408020:	mov	x19, x0
  408024:	tbz	x0, #63, 407e90 <wcrtomb@plt+0x5620>
  408028:	b	408088 <wcrtomb@plt+0x5818>
  40802c:	cbz	x22, 407fe0 <wcrtomb@plt+0x5770>
  408030:	sub	x2, x22, #0x1
  408034:	sub	x3, x29, #0x20
  408038:	mov	w4, #0x1                   	// #1
  40803c:	mov	x0, x25
  408040:	mov	x1, x28
  408044:	bl	409598 <wcrtomb@plt+0x6d28>
  408048:	cbnz	x0, 407fe0 <wcrtomb@plt+0x5770>
  40804c:	ldur	x22, [x29, #-16]
  408050:	mov	x1, x26
  408054:	add	x19, x28, x22
  408058:	mov	x0, x19
  40805c:	bl	4099c8 <wcrtomb@plt+0x7158>
  408060:	cbz	x0, 4080ac <wcrtomb@plt+0x583c>
  408064:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  408068:	ldrb	w8, [x8, #2232]
  40806c:	ldr	w9, [sp, #48]
  408070:	cmp	w8, #0x0
  408074:	cset	w8, ne  // ne = any
  408078:	eor	w9, w9, #0x1
  40807c:	orr	w8, w8, w9
  408080:	tbnz	w8, #0, 40802c <wcrtomb@plt+0x57bc>
  408084:	b	407f7c <wcrtomb@plt+0x570c>
  408088:	mov	x0, #0xffffffffffffffff    	// #-1
  40808c:	ldp	x20, x19, [sp, #176]
  408090:	ldp	x22, x21, [sp, #160]
  408094:	ldp	x24, x23, [sp, #144]
  408098:	ldp	x26, x25, [sp, #128]
  40809c:	ldp	x28, x27, [sp, #112]
  4080a0:	ldp	x29, x30, [sp, #96]
  4080a4:	add	sp, sp, #0xc0
  4080a8:	ret
  4080ac:	cbnz	x21, 408130 <wcrtomb@plt+0x58c0>
  4080b0:	ldr	w21, [sp, #28]
  4080b4:	add	x0, x28, x22
  4080b8:	sub	x2, x26, x0
  4080bc:	mov	w1, w21
  4080c0:	bl	4026d0 <memchr@plt>
  4080c4:	ldr	x20, [sp, #32]
  4080c8:	cmp	x0, #0x0
  4080cc:	csinc	x19, x26, x0, eq  // eq = none
  4080d0:	sub	x2, x28, x20
  4080d4:	mov	x0, x20
  4080d8:	mov	w1, w21
  4080dc:	bl	402650 <memrchr@plt>
  4080e0:	cmp	x0, #0x0
  4080e4:	csinc	x28, x20, x0, eq  // eq = none
  4080e8:	sub	x22, x19, x28
  4080ec:	b	408130 <wcrtomb@plt+0x58c0>
  4080f0:	ldr	x0, [x24, #32]
  4080f4:	cbnz	x0, 408114 <wcrtomb@plt+0x58a4>
  4080f8:	ldp	x1, x0, [sp]
  4080fc:	bl	40380c <wcrtomb@plt+0xf9c>
  408100:	ldp	x0, x1, [x24, #16]
  408104:	mov	w2, #0xa46                 	// #2630
  408108:	movk	w2, #0x1, lsl #16
  40810c:	bl	4029e0 <wcrtomb@plt+0x170>
  408110:	str	x0, [x24, #32]
  408114:	ldp	x1, x3, [sp, #32]
  408118:	ldr	x2, [sp, #16]
  40811c:	mov	x4, x21
  408120:	bl	403038 <wcrtomb@plt+0x7c8>
  408124:	b	40808c <wcrtomb@plt+0x581c>
  408128:	cmp	x21, #0x0
  40812c:	cinc	x22, x22, eq  // eq = none
  408130:	ldr	x8, [sp, #32]
  408134:	sub	x0, x28, x8
  408138:	ldr	x8, [sp, #40]
  40813c:	str	x22, [x8]
  408140:	b	40808c <wcrtomb@plt+0x581c>
  408144:	ldr	x20, [sp, #32]
  408148:	ldr	w21, [sp, #28]
  40814c:	b	4080d0 <wcrtomb@plt+0x5860>
  408150:	stp	x29, x30, [sp, #-32]!
  408154:	stp	x20, x19, [sp, #16]
  408158:	mov	x19, x0
  40815c:	mov	w0, #0x9a8                 	// #2472
  408160:	mov	x29, sp
  408164:	bl	4155d4 <wcrtomb@plt+0x12d64>
  408168:	adrp	x3, 415000 <wcrtomb@plt+0x12790>
  40816c:	adrp	x4, 402000 <mbrtowc@plt-0x200>
  408170:	add	x3, x3, #0x5d4
  408174:	add	x4, x4, #0x620
  408178:	mov	x1, xzr
  40817c:	mov	x2, xzr
  408180:	mov	x20, x0
  408184:	bl	417f20 <_obstack_begin@@Base>
  408188:	ldp	x9, x8, [x20, #24]
  40818c:	str	xzr, [x20, #88]
  408190:	sub	x8, x8, x9
  408194:	cmp	x8, #0x3f
  408198:	b.hi	4081ac <wcrtomb@plt+0x593c>  // b.pmore
  40819c:	mov	w1, #0x40                  	// #64
  4081a0:	mov	x0, x20
  4081a4:	bl	418074 <_obstack_newchunk@@Base>
  4081a8:	ldr	x9, [x20, #24]
  4081ac:	ldr	x8, [x20, #16]
  4081b0:	add	x9, x9, #0x40
  4081b4:	str	x9, [x20, #24]
  4081b8:	cmp	x9, x8
  4081bc:	b.ne	4081cc <wcrtomb@plt+0x595c>  // b.any
  4081c0:	ldrb	w10, [x20, #80]
  4081c4:	orr	w10, w10, #0x2
  4081c8:	strb	w10, [x20, #80]
  4081cc:	ldr	x11, [x20, #48]
  4081d0:	ldr	x12, [x20, #8]
  4081d4:	ldr	x10, [x20, #32]
  4081d8:	add	x9, x11, x9
  4081dc:	bic	x9, x9, x11
  4081e0:	sub	x11, x9, x12
  4081e4:	sub	x12, x10, x12
  4081e8:	cmp	x11, x12
  4081ec:	str	x9, [x20, #24]
  4081f0:	b.ls	4081fc <wcrtomb@plt+0x598c>  // b.plast
  4081f4:	mov	x9, x10
  4081f8:	str	x10, [x20, #24]
  4081fc:	str	x9, [x20, #16]
  408200:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x11d70>
  408204:	ldr	q1, [x9, #336]
  408208:	movi	v0.2d, #0x0
  40820c:	adrp	x10, 408000 <wcrtomb@plt+0x5790>
  408210:	str	x8, [x20, #96]
  408214:	str	xzr, [x8, #48]
  408218:	add	x10, x10, #0x244
  40821c:	stp	q0, q0, [x8, #16]
  408220:	str	q0, [x8]
  408224:	str	xzr, [x20, #2424]
  408228:	str	x19, [x20, #2440]
  40822c:	stur	q1, [x20, #104]
  408230:	str	x10, [x20, #2464]
  408234:	mov	x0, x20
  408238:	ldp	x20, x19, [sp, #16]
  40823c:	ldp	x29, x30, [sp], #32
  408240:	ret
  408244:	stp	x29, x30, [sp, #-80]!
  408248:	stp	x24, x23, [sp, #32]
  40824c:	stp	x22, x21, [sp, #48]
  408250:	stp	x20, x19, [sp, #64]
  408254:	ldr	x8, [x0, #104]
  408258:	str	x25, [sp, #16]
  40825c:	mov	x29, sp
  408260:	cmp	x8, x2
  408264:	b.le	408270 <wcrtomb@plt+0x5a00>
  408268:	mov	x8, #0xffffffffffffffff    	// #-1
  40826c:	b	4082e4 <wcrtomb@plt+0x5a74>
  408270:	ldr	x8, [x0, #96]
  408274:	ldr	x24, [x0, #2440]
  408278:	mov	w21, w4
  40827c:	mov	x19, x3
  408280:	ldr	x11, [x8]
  408284:	mov	x22, x0
  408288:	mov	x20, x1
  40828c:	add	x25, x1, x2
  408290:	cbz	x11, 408394 <wcrtomb@plt+0x5b24>
  408294:	mov	x9, x20
  408298:	cmn	x11, #0x1
  40829c:	mov	x10, x8
  4082a0:	b.ne	4082b8 <wcrtomb@plt+0x5a48>  // b.any
  4082a4:	mov	x10, x8
  4082a8:	ldr	x10, [x10, #32]
  4082ac:	ldr	x11, [x10]
  4082b0:	cmn	x11, #0x1
  4082b4:	b.eq	4082a8 <wcrtomb@plt+0x5a38>  // b.none
  4082b8:	ldr	x11, [x10, #40]
  4082bc:	cmp	x9, x25
  4082c0:	sub	x11, x9, x11
  4082c4:	b.cs	4082cc <wcrtomb@plt+0x5a5c>  // b.hs, b.nlast
  4082c8:	tbnz	w21, #0, 40831c <wcrtomb@plt+0x5aac>
  4082cc:	ldr	x9, [x10]
  4082d0:	sub	x8, x11, x20
  4082d4:	lsr	x9, x9, #1
  4082d8:	stp	x9, x8, [x19]
  4082dc:	ldr	x9, [x10, #40]
  4082e0:	str	x9, [x19, #16]
  4082e4:	ldp	x20, x19, [sp, #64]
  4082e8:	ldp	x22, x21, [sp, #48]
  4082ec:	ldp	x24, x23, [sp, #32]
  4082f0:	ldr	x25, [sp, #16]
  4082f4:	mov	x0, x8
  4082f8:	ldp	x29, x30, [sp], #80
  4082fc:	ret
  408300:	ldr	x13, [x12, #40]
  408304:	sub	x13, x9, x13
  408308:	cmp	x13, x11
  40830c:	csel	x11, x11, x13, hi  // hi = pmore
  408310:	csel	x10, x10, x12, hi  // hi = pmore
  408314:	cmp	x9, x25
  408318:	b.eq	4082cc <wcrtomb@plt+0x5a5c>  // b.none
  40831c:	ldrb	w12, [x9], #1
  408320:	cbz	x24, 408328 <wcrtomb@plt+0x5ab8>
  408324:	ldrb	w12, [x24, x12]
  408328:	ldr	x13, [x8, #8]
  40832c:	cbz	x13, 408348 <wcrtomb@plt+0x5ad8>
  408330:	ldrb	w14, [x13, #24]
  408334:	cmp	w12, w14
  408338:	b.eq	408364 <wcrtomb@plt+0x5af4>  // b.none
  40833c:	cset	w14, cs  // cs = hs, nlast
  408340:	ldr	x13, [x13, w14, uxtw #3]
  408344:	cbnz	x13, 408330 <wcrtomb@plt+0x5ac0>
  408348:	ldr	x8, [x8, #32]
  40834c:	cbz	x8, 4082cc <wcrtomb@plt+0x5a5c>
  408350:	ldr	x13, [x10, #40]
  408354:	ldr	x14, [x8, #40]
  408358:	cmp	x13, x14
  40835c:	b.le	408328 <wcrtomb@plt+0x5ab8>
  408360:	b	4082cc <wcrtomb@plt+0x5a5c>
  408364:	ldr	x8, [x13, #16]
  408368:	ldr	x12, [x8]
  40836c:	cbz	x12, 408314 <wcrtomb@plt+0x5aa4>
  408370:	cmn	x12, #0x1
  408374:	mov	x12, x8
  408378:	b.ne	408300 <wcrtomb@plt+0x5a90>  // b.any
  40837c:	mov	x12, x8
  408380:	ldr	x12, [x12, #32]
  408384:	ldr	x13, [x12]
  408388:	cmn	x13, #0x1
  40838c:	b.eq	408380 <wcrtomb@plt+0x5b10>  // b.none
  408390:	b	408300 <wcrtomb@plt+0x5a90>
  408394:	ldr	w23, [x22, #2448]
  408398:	mov	x0, x20
  40839c:	tbnz	w23, #31, 408400 <wcrtomb@plt+0x5b90>
  4083a0:	ldr	w2, [x22, #2452]
  4083a4:	tbnz	w2, #31, 40842c <wcrtomb@plt+0x5bbc>
  4083a8:	cmp	x0, x25
  4083ac:	b.cs	408268 <wcrtomb@plt+0x59f8>  // b.hs, b.nlast
  4083b0:	ldrb	w8, [x0]
  4083b4:	add	x9, x22, x8, lsl #3
  4083b8:	ldr	x9, [x9, #376]
  4083bc:	cbnz	x9, 4083e0 <wcrtomb@plt+0x5b70>
  4083c0:	add	x0, x0, #0x1
  4083c4:	tst	x0, #0xf
  4083c8:	b.ne	4083a8 <wcrtomb@plt+0x5b38>  // b.any
  4083cc:	sub	x3, x25, x0
  4083d0:	mov	w1, w23
  4083d4:	bl	4133a0 <wcrtomb@plt+0x10b30>
  4083d8:	cbz	x0, 408268 <wcrtomb@plt+0x59f8>
  4083dc:	ldrb	w8, [x0]
  4083e0:	add	x9, x0, #0x1
  4083e4:	cbz	x24, 4083ec <wcrtomb@plt+0x5b7c>
  4083e8:	ldrb	w8, [x24, w8, uxtw]
  4083ec:	add	x8, x22, w8, uxtw #3
  4083f0:	ldr	x8, [x8, #376]
  4083f4:	ldr	x11, [x8]
  4083f8:	cbz	x11, 408468 <wcrtomb@plt+0x5bf8>
  4083fc:	b	408298 <wcrtomb@plt+0x5a28>
  408400:	mov	x9, x0
  408404:	ldrb	w8, [x9], #1
  408408:	cbz	x24, 408410 <wcrtomb@plt+0x5ba0>
  40840c:	ldrb	w8, [x24, x8]
  408410:	add	x8, x22, w8, uxtw #3
  408414:	ldr	x8, [x8, #376]
  408418:	cbnz	x8, 40845c <wcrtomb@plt+0x5bec>
  40841c:	cmp	x9, x25
  408420:	mov	x0, x9
  408424:	b.cc	408404 <wcrtomb@plt+0x5b94>  // b.lo, b.ul, b.last
  408428:	b	408268 <wcrtomb@plt+0x59f8>
  40842c:	sub	x8, x25, x0
  408430:	cmp	x8, #0x1
  408434:	b.lt	408268 <wcrtomb@plt+0x59f8>  // b.tstop
  408438:	ldrb	w8, [x0]
  40843c:	add	x8, x22, x8, lsl #3
  408440:	ldr	x8, [x8, #376]
  408444:	cbnz	x8, 4083d8 <wcrtomb@plt+0x5b68>
  408448:	add	x0, x0, #0x1
  40844c:	cmp	x0, x25
  408450:	mov	x8, #0xffffffffffffffff    	// #-1
  408454:	b.cc	408438 <wcrtomb@plt+0x5bc8>  // b.lo, b.ul, b.last
  408458:	b	4082e4 <wcrtomb@plt+0x5a74>
  40845c:	add	x9, x0, #0x1
  408460:	ldr	x11, [x8]
  408464:	cbnz	x11, 408298 <wcrtomb@plt+0x5a28>
  408468:	cmp	x9, x25
  40846c:	b.cs	408268 <wcrtomb@plt+0x59f8>  // b.hs, b.nlast
  408470:	mov	x0, x9
  408474:	ldrb	w10, [x0], #1
  408478:	cbz	x24, 408480 <wcrtomb@plt+0x5c10>
  40847c:	ldrb	w10, [x24, x10]
  408480:	ldr	x11, [x8, #8]
  408484:	ldrb	w12, [x11, #24]
  408488:	cmp	w10, w12
  40848c:	b.eq	4084b4 <wcrtomb@plt+0x5c44>  // b.none
  408490:	cmp	w10, w12, uxtb
  408494:	cset	w12, cs  // cs = hs, nlast
  408498:	ldr	x11, [x11, w12, uxtw #3]
  40849c:	cbnz	x11, 408484 <wcrtomb@plt+0x5c14>
  4084a0:	ldr	x8, [x8, #32]
  4084a4:	cbz	x8, 4084c8 <wcrtomb@plt+0x5c58>
  4084a8:	ldr	x11, [x8]
  4084ac:	cbz	x11, 408480 <wcrtomb@plt+0x5c10>
  4084b0:	b	408298 <wcrtomb@plt+0x5a28>
  4084b4:	ldr	x8, [x11, #16]
  4084b8:	ldr	x11, [x8]
  4084bc:	mov	x9, x0
  4084c0:	cbz	x11, 408468 <wcrtomb@plt+0x5bf8>
  4084c4:	b	4084e4 <wcrtomb@plt+0x5c74>
  4084c8:	add	x8, x22, w10, uxtw #3
  4084cc:	ldr	x8, [x8, #376]
  4084d0:	cbnz	x8, 4084b8 <wcrtomb@plt+0x5c48>
  4084d4:	cmp	x0, x25
  4084d8:	mov	x8, #0xffffffffffffffff    	// #-1
  4084dc:	b.cc	40839c <wcrtomb@plt+0x5b2c>  // b.lo, b.ul, b.last
  4084e0:	b	4082e4 <wcrtomb@plt+0x5a74>
  4084e4:	mov	x9, x0
  4084e8:	b	408298 <wcrtomb@plt+0x5a28>
  4084ec:	sub	sp, sp, #0x100
  4084f0:	stp	x29, x30, [sp, #160]
  4084f4:	stp	x28, x27, [sp, #176]
  4084f8:	stp	x26, x25, [sp, #192]
  4084fc:	stp	x24, x23, [sp, #208]
  408500:	stp	x22, x21, [sp, #224]
  408504:	stp	x20, x19, [sp, #240]
  408508:	ldr	x22, [x0, #96]
  40850c:	mov	x19, x0
  408510:	add	x29, sp, #0xa0
  408514:	cbz	x2, 408878 <wcrtomb@plt+0x6008>
  408518:	ldr	x9, [x19, #2464]
  40851c:	ldr	x15, [x19, #2440]
  408520:	adrp	x10, 408000 <wcrtomb@plt+0x5790>
  408524:	add	x10, x10, #0x8e0
  408528:	add	x8, x1, x2
  40852c:	cmp	x9, x10
  408530:	mov	x20, x2
  408534:	mov	w24, #0x1                   	// #1
  408538:	add	x25, sp, #0x10
  40853c:	add	x26, sp, #0x40
  408540:	csel	x28, x8, x1, eq  // eq = none
  408544:	stp	x15, x9, [sp]
  408548:	b	40855c <wcrtomb@plt+0x5cec>
  40854c:	str	x11, [x8, #8]
  408550:	ldr	x22, [x23, #16]
  408554:	sub	x20, x20, #0x1
  408558:	cbz	x20, 408878 <wcrtomb@plt+0x6008>
  40855c:	ldr	x9, [sp, #8]
  408560:	adrp	x10, 408000 <wcrtomb@plt+0x5790>
  408564:	add	x10, x10, #0x8e0
  408568:	sub	x8, x28, #0x1
  40856c:	cmp	x9, x10
  408570:	csel	x9, x8, x28, eq  // eq = none
  408574:	ldrb	w27, [x9]
  408578:	csinc	x28, x8, x28, eq  // eq = none
  40857c:	cbz	x15, 408584 <wcrtomb@plt+0x5d14>
  408580:	ldrb	w27, [x15, x27]
  408584:	mov	x8, x22
  408588:	ldr	x23, [x8, #8]!
  40858c:	str	wzr, [sp, #16]
  408590:	str	x8, [sp, #64]
  408594:	cbz	x23, 4085d8 <wcrtomb@plt+0x5d68>
  408598:	mov	w8, #0x1                   	// #1
  40859c:	b	4085b4 <wcrtomb@plt+0x5d44>
  4085a0:	add	x23, x23, #0x8
  4085a4:	str	w24, [x25, x8, lsl #2]
  4085a8:	ldr	x23, [x23]
  4085ac:	mov	x8, x21
  4085b0:	cbz	x23, 4085dc <wcrtomb@plt+0x5d6c>
  4085b4:	ldrb	w9, [x23, #24]
  4085b8:	cmp	w27, w9
  4085bc:	b.eq	408550 <wcrtomb@plt+0x5ce0>  // b.none
  4085c0:	cmp	w27, w9
  4085c4:	add	x21, x8, #0x1
  4085c8:	str	x23, [x26, x8, lsl #3]
  4085cc:	b.cs	4085a0 <wcrtomb@plt+0x5d30>  // b.hs, b.nlast
  4085d0:	str	wzr, [x25, x8, lsl #2]
  4085d4:	b	4085a8 <wcrtomb@plt+0x5d38>
  4085d8:	mov	w21, #0x1                   	// #1
  4085dc:	ldp	x8, x9, [x19, #24]
  4085e0:	sub	x9, x9, x8
  4085e4:	cmp	x9, #0x1f
  4085e8:	b.hi	408600 <wcrtomb@plt+0x5d90>  // b.pmore
  4085ec:	mov	w1, #0x20                  	// #32
  4085f0:	mov	x0, x19
  4085f4:	bl	418074 <_obstack_newchunk@@Base>
  4085f8:	ldr	x15, [sp]
  4085fc:	ldr	x8, [x19, #24]
  408600:	ldr	x23, [x19, #16]
  408604:	add	x8, x8, #0x20
  408608:	str	x8, [x19, #24]
  40860c:	cmp	x8, x23
  408610:	b.ne	408620 <wcrtomb@plt+0x5db0>  // b.any
  408614:	ldrb	w9, [x19, #80]
  408618:	orr	w9, w9, #0x2
  40861c:	strb	w9, [x19, #80]
  408620:	ldr	x9, [x19, #48]
  408624:	ldr	x10, [x19, #8]
  408628:	ldr	x11, [x19, #32]
  40862c:	add	x8, x9, x8
  408630:	bic	x8, x8, x9
  408634:	sub	x9, x11, x10
  408638:	sub	x10, x8, x10
  40863c:	cmp	x10, x9
  408640:	csel	x8, x11, x8, hi  // hi = pmore
  408644:	sub	x9, x11, x8
  408648:	cmp	x9, #0x3f
  40864c:	mov	x9, x8
  408650:	stp	x8, x8, [x19, #16]
  408654:	stp	xzr, xzr, [x23]
  408658:	b.hi	408670 <wcrtomb@plt+0x5e00>  // b.pmore
  40865c:	mov	w1, #0x40                  	// #64
  408660:	mov	x0, x19
  408664:	bl	418074 <_obstack_newchunk@@Base>
  408668:	ldr	x15, [sp]
  40866c:	ldp	x8, x9, [x19, #16]
  408670:	add	x9, x9, #0x40
  408674:	cmp	x9, x8
  408678:	str	x9, [x19, #24]
  40867c:	b.ne	40868c <wcrtomb@plt+0x5e1c>  // b.any
  408680:	ldrb	w10, [x19, #80]
  408684:	orr	w10, w10, #0x2
  408688:	strb	w10, [x19, #80]
  40868c:	ldr	x10, [x19, #48]
  408690:	ldr	x11, [x19, #8]
  408694:	ldr	x12, [x19, #32]
  408698:	add	x9, x10, x9
  40869c:	bic	x9, x9, x10
  4086a0:	sub	x10, x12, x11
  4086a4:	sub	x11, x9, x11
  4086a8:	cmp	x11, x10
  4086ac:	csel	x9, x12, x9, hi  // hi = pmore
  4086b0:	stp	x9, x9, [x19, #16]
  4086b4:	str	x8, [x23, #16]
  4086b8:	stp	xzr, xzr, [x8]
  4086bc:	stp	xzr, xzr, [x8, #24]
  4086c0:	str	x22, [x8, #16]
  4086c4:	ldr	x9, [x22, #40]
  4086c8:	add	x9, x9, #0x1
  4086cc:	stp	x9, xzr, [x8, #40]
  4086d0:	strb	w27, [x23, #24]
  4086d4:	strb	wzr, [x23, #25]
  4086d8:	sub	x9, x21, #0x1
  4086dc:	ldr	w11, [x25, x9, lsl #2]
  4086e0:	ldr	x10, [x26, x9, lsl #3]
  4086e4:	cmp	w11, #0x0
  4086e8:	cset	w8, ne  // ne = any
  4086ec:	str	x23, [x10, w8, uxtw #3]
  4086f0:	cbz	x9, 408550 <wcrtomb@plt+0x5ce0>
  4086f4:	mov	x8, x10
  4086f8:	ldrb	w12, [x8, #25]!
  4086fc:	cmp	w11, #0x0
  408700:	cset	w13, eq  // eq = none
  408704:	mov	w14, #0xffffffff            	// #-1
  408708:	cbz	w12, 408724 <wcrtomb@plt+0x5eb4>
  40870c:	cbz	w13, 408760 <wcrtomb@plt+0x5ef0>
  408710:	sub	w11, w12, #0x1
  408714:	tst	w11, #0xff
  408718:	strb	w11, [x8]
  40871c:	b.ne	408774 <wcrtomb@plt+0x5f04>  // b.any
  408720:	b	408550 <wcrtomb@plt+0x5ce0>
  408724:	sub	x9, x21, #0x2
  408728:	tst	w13, #0x1
  40872c:	cneg	w10, w14, eq  // eq = none
  408730:	strb	w10, [x8]
  408734:	cbz	x9, 408550 <wcrtomb@plt+0x5ce0>
  408738:	ldr	x10, [x26, x9, lsl #3]
  40873c:	ldr	w11, [x25, x9, lsl #2]
  408740:	sub	x9, x9, #0x1
  408744:	mov	x8, x10
  408748:	ldrb	w12, [x8, #25]!
  40874c:	cmp	w11, #0x0
  408750:	cset	w13, eq  // eq = none
  408754:	cbz	w12, 408728 <wcrtomb@plt+0x5eb8>
  408758:	add	x9, x9, #0x1
  40875c:	cbnz	w13, 408710 <wcrtomb@plt+0x5ea0>
  408760:	cmp	w11, #0x1
  408764:	b.ne	408550 <wcrtomb@plt+0x5ce0>  // b.any
  408768:	add	w11, w12, #0x1
  40876c:	strb	w11, [x8]
  408770:	tbnz	w11, #8, 408550 <wcrtomb@plt+0x5ce0>
  408774:	and	w11, w11, #0xff
  408778:	cmp	w11, #0x2
  40877c:	b.eq	4087b4 <wcrtomb@plt+0x5f44>  // b.none
  408780:	cmp	w11, #0xfe
  408784:	b.ne	4088dc <wcrtomb@plt+0x606c>  // b.any
  408788:	add	x11, x25, x9, lsl #2
  40878c:	ldr	w11, [x11, #4]
  408790:	cmp	w11, #0x1
  408794:	b.eq	4087e0 <wcrtomb@plt+0x5f70>  // b.none
  408798:	cbnz	w11, 4088dc <wcrtomb@plt+0x606c>
  40879c:	ldr	x11, [x10]
  4087a0:	ldr	x12, [x11, #8]
  4087a4:	str	x10, [x11, #8]
  4087a8:	str	x12, [x10]
  4087ac:	strb	wzr, [x8]
  4087b0:	b	40885c <wcrtomb@plt+0x5fec>
  4087b4:	add	x11, x25, x9, lsl #2
  4087b8:	ldr	w11, [x11, #4]
  4087bc:	cbz	w11, 408820 <wcrtomb@plt+0x5fb0>
  4087c0:	cmp	w11, #0x1
  4087c4:	b.ne	4088dc <wcrtomb@plt+0x606c>  // b.any
  4087c8:	ldr	x11, [x10, #8]
  4087cc:	ldr	x12, [x11]
  4087d0:	str	x10, [x11]
  4087d4:	str	x12, [x10, #8]
  4087d8:	strb	wzr, [x8]
  4087dc:	b	40885c <wcrtomb@plt+0x5fec>
  4087e0:	ldr	x12, [x10]
  4087e4:	ldr	x11, [x12, #8]
  4087e8:	ldp	x13, x14, [x11]
  4087ec:	str	x12, [x11]
  4087f0:	str	x13, [x12, #8]
  4087f4:	str	x10, [x11, #8]
  4087f8:	str	x14, [x10]
  4087fc:	ldrb	w10, [x11, #25]
  408800:	cmp	w10, #0x1
  408804:	csetm	w10, eq  // eq = none
  408808:	strb	w10, [x12, #25]
  40880c:	ldrb	w10, [x11, #25]
  408810:	cmp	w10, #0xff
  408814:	cset	w10, eq  // eq = none
  408818:	strb	w10, [x8]
  40881c:	b	40885c <wcrtomb@plt+0x5fec>
  408820:	ldr	x12, [x10, #8]
  408824:	ldr	x11, [x12]
  408828:	ldp	x13, x14, [x11]
  40882c:	str	x10, [x11]
  408830:	str	x13, [x10, #8]
  408834:	str	x12, [x11, #8]
  408838:	str	x14, [x12]
  40883c:	ldrb	w10, [x11, #25]
  408840:	cmp	w10, #0x1
  408844:	csetm	w10, eq  // eq = none
  408848:	strb	w10, [x8]
  40884c:	ldrb	w8, [x11, #25]
  408850:	cmp	w8, #0xff
  408854:	cset	w8, eq  // eq = none
  408858:	strb	w8, [x12, #25]
  40885c:	strb	wzr, [x11, #25]
  408860:	sub	x8, x9, #0x1
  408864:	ldr	w9, [x25, x8, lsl #2]
  408868:	ldr	x8, [x26, x8, lsl #3]
  40886c:	cbnz	w9, 40854c <wcrtomb@plt+0x5cdc>
  408870:	str	x11, [x8]
  408874:	b	408550 <wcrtomb@plt+0x5ce0>
  408878:	ldr	x9, [x22]
  40887c:	ldr	x8, [x19, #88]
  408880:	cbnz	x9, 408890 <wcrtomb@plt+0x6020>
  408884:	mov	w9, #0x1                   	// #1
  408888:	bfi	x9, x8, #1, #63
  40888c:	str	x9, [x22]
  408890:	add	x8, x8, #0x1
  408894:	str	x8, [x19, #88]
  408898:	ldr	x8, [x22, #40]
  40889c:	ldr	x9, [x19, #104]
  4088a0:	cmp	x8, x9
  4088a4:	b.ge	4088ac <wcrtomb@plt+0x603c>  // b.tcont
  4088a8:	str	x8, [x19, #104]
  4088ac:	ldr	x9, [x19, #112]
  4088b0:	cmp	x8, x9
  4088b4:	b.le	4088bc <wcrtomb@plt+0x604c>
  4088b8:	str	x8, [x19, #112]
  4088bc:	ldp	x20, x19, [sp, #240]
  4088c0:	ldp	x22, x21, [sp, #224]
  4088c4:	ldp	x24, x23, [sp, #208]
  4088c8:	ldp	x26, x25, [sp, #192]
  4088cc:	ldp	x28, x27, [sp, #176]
  4088d0:	ldp	x29, x30, [sp, #160]
  4088d4:	add	sp, sp, #0x100
  4088d8:	ret
  4088dc:	bl	402560 <abort@plt>
  4088e0:	sub	sp, sp, #0x80
  4088e4:	stp	x29, x30, [sp, #32]
  4088e8:	stp	x28, x27, [sp, #48]
  4088ec:	stp	x26, x25, [sp, #64]
  4088f0:	stp	x24, x23, [sp, #80]
  4088f4:	stp	x22, x21, [sp, #96]
  4088f8:	stp	x20, x19, [sp, #112]
  4088fc:	ldr	x24, [x0, #104]
  408900:	mov	x19, x3
  408904:	mov	x20, x0
  408908:	add	x29, sp, #0x20
  40890c:	cbz	x24, 408924 <wcrtomb@plt+0x60b4>
  408910:	mov	x23, x2
  408914:	cmp	x24, x2
  408918:	b.le	408954 <wcrtomb@plt+0x60e4>
  40891c:	mov	x0, #0xffffffffffffffff    	// #-1
  408920:	b	408934 <wcrtomb@plt+0x60c4>
  408924:	mov	x0, xzr
  408928:	stp	xzr, x0, [x19]
  40892c:	ldr	x8, [x20, #104]
  408930:	str	x8, [x19, #16]
  408934:	ldp	x20, x19, [sp, #112]
  408938:	ldp	x22, x21, [sp, #96]
  40893c:	ldp	x24, x23, [sp, #80]
  408940:	ldp	x26, x25, [sp, #64]
  408944:	ldp	x28, x27, [sp, #48]
  408948:	ldp	x29, x30, [sp, #32]
  40894c:	add	sp, sp, #0x80
  408950:	ret
  408954:	mov	x21, x1
  408958:	cmp	x24, #0x1
  40895c:	b.ne	4089ac <wcrtomb@plt+0x613c>  // b.any
  408960:	ldr	w2, [x20, #2452]
  408964:	add	x9, x21, x23
  408968:	tbnz	w2, #31, 4089d8 <wcrtomb@plt+0x6168>
  40896c:	mov	x0, x21
  408970:	cmp	x0, x9
  408974:	b.cs	40891c <wcrtomb@plt+0x60ac>  // b.hs, b.nlast
  408978:	ldrb	w8, [x0]
  40897c:	add	x8, x20, x8, lsl #3
  408980:	ldr	x8, [x8, #376]
  408984:	cbnz	x8, 408a70 <wcrtomb@plt+0x6200>
  408988:	add	x0, x0, #0x1
  40898c:	tst	x0, #0xf
  408990:	b.ne	408970 <wcrtomb@plt+0x6100>  // b.any
  408994:	ldr	w1, [x20, #2448]
  408998:	sub	x3, x9, x0
  40899c:	bl	4133a0 <wcrtomb@plt+0x10b30>
  4089a0:	mov	x8, x0
  4089a4:	cbnz	x8, 408b98 <wcrtomb@plt+0x6328>
  4089a8:	b	40891c <wcrtomb@plt+0x60ac>
  4089ac:	ldr	x25, [x20, #2440]
  4089b0:	ldr	x27, [x20, #2424]
  4089b4:	ldr	w22, [x20, #2448]
  4089b8:	ldrb	w26, [x20, #2456]
  4089bc:	add	x8, x21, x24
  4089c0:	tbnz	x24, #63, 408a04 <wcrtomb@plt+0x6194>
  4089c4:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4089c8:	movk	x9, #0xaaa, lsl #48
  4089cc:	cmp	x24, x9
  4089d0:	b.le	408a1c <wcrtomb@plt+0x61ac>
  4089d4:	b	408a40 <wcrtomb@plt+0x61d0>
  4089d8:	cbz	x23, 40891c <wcrtomb@plt+0x60ac>
  4089dc:	mov	x8, x21
  4089e0:	mov	x0, #0xffffffffffffffff    	// #-1
  4089e4:	ldrb	w10, [x8]
  4089e8:	add	x10, x20, x10, lsl #3
  4089ec:	ldr	x10, [x10, #376]
  4089f0:	cbnz	x10, 4089a4 <wcrtomb@plt+0x6134>
  4089f4:	add	x8, x8, #0x1
  4089f8:	cmp	x8, x9
  4089fc:	b.cc	4089e4 <wcrtomb@plt+0x6174>  // b.lo, b.ul, b.last
  408a00:	b	408934 <wcrtomb@plt+0x60c4>
  408a04:	cmn	x24, #0x1
  408a08:	b.eq	408a1c <wcrtomb@plt+0x61ac>  // b.none
  408a0c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  408a10:	sdiv	x9, x9, x24
  408a14:	cmp	x9, #0xc
  408a18:	b.lt	408a40 <wcrtomb@plt+0x61d0>  // b.tstop
  408a1c:	add	x9, x24, x24, lsl #1
  408a20:	lsl	x9, x9, #2
  408a24:	cmp	x9, x23
  408a28:	b.ge	408a40 <wcrtomb@plt+0x61d0>  // b.tcont
  408a2c:	add	x16, x21, x23
  408a30:	mov	x9, #0xfffffffffffffff5    	// #-11
  408a34:	madd	x28, x24, x9, x16
  408a38:	cmp	x28, x8
  408a3c:	b.cs	408ba4 <wcrtomb@plt+0x6334>  // b.hs, b.nlast
  408a40:	ldurb	w9, [x8, #-1]
  408a44:	add	x9, x20, x9
  408a48:	ldrb	w12, [x9, #120]
  408a4c:	add	x9, x21, x23
  408a50:	sub	x10, x9, x8
  408a54:	cmp	x10, x12
  408a58:	b.lt	40891c <wcrtomb@plt+0x60ac>  // b.tstop
  408a5c:	add	x11, x24, x27
  408a60:	sub	x10, x11, #0x3
  408a64:	sub	x11, x11, #0x1
  408a68:	mov	x0, #0xffffffffffffffff    	// #-1
  408a6c:	b	408a8c <wcrtomb@plt+0x621c>
  408a70:	sub	x0, x0, x21
  408a74:	tbz	x0, #63, 408928 <wcrtomb@plt+0x60b8>
  408a78:	b	408934 <wcrtomb@plt+0x60c4>
  408a7c:	mov	w12, wzr
  408a80:	sub	x13, x9, x8
  408a84:	cmp	x13, x12
  408a88:	b.lt	408934 <wcrtomb@plt+0x60c4>  // b.tstop
  408a8c:	add	x8, x8, x12
  408a90:	ldurb	w12, [x8, #-1]
  408a94:	add	x12, x20, x12
  408a98:	ldrb	w12, [x12, #120]
  408a9c:	cbnz	w12, 408a80 <wcrtomb@plt+0x6210>
  408aa0:	mov	x14, xzr
  408aa4:	mov	x13, x24
  408aa8:	b	408ab8 <wcrtomb@plt+0x6248>
  408aac:	cmp	w14, w22, uxtb
  408ab0:	sub	x14, x12, #0x1
  408ab4:	b.ne	408a7c <wcrtomb@plt+0x620c>  // b.any
  408ab8:	ldurb	w12, [x8, #-2]
  408abc:	cbz	x25, 408ac4 <wcrtomb@plt+0x6254>
  408ac0:	ldrb	w12, [x25, x12]
  408ac4:	cmp	w12, w26
  408ac8:	b.ne	408b18 <wcrtomb@plt+0x62a8>  // b.any
  408acc:	sub	x15, x8, #0x3
  408ad0:	mov	x16, x10
  408ad4:	mov	w12, #0x2                   	// #2
  408ad8:	b	408afc <wcrtomb@plt+0x628c>
  408adc:	ldrb	w18, [x16]
  408ae0:	ldrb	w17, [x25, x17]
  408ae4:	add	x18, x25, x18
  408ae8:	ldrb	w18, [x18]
  408aec:	sub	x16, x16, #0x1
  408af0:	sub	x15, x15, #0x1
  408af4:	cmp	w17, w18
  408af8:	b.ne	408b1c <wcrtomb@plt+0x62ac>  // b.any
  408afc:	cmp	x12, x13
  408b00:	b.ge	408b44 <wcrtomb@plt+0x62d4>  // b.tcont
  408b04:	ldrb	w17, [x15]
  408b08:	add	x12, x12, #0x1
  408b0c:	cbnz	x25, 408adc <wcrtomb@plt+0x626c>
  408b10:	mov	x18, x16
  408b14:	b	408ae8 <wcrtomb@plt+0x6278>
  408b18:	mov	w12, #0x2                   	// #2
  408b1c:	ldr	x13, [x20, #2432]
  408b20:	add	x13, x13, x12, lsl #3
  408b24:	ldur	x13, [x13, #-16]
  408b28:	add	x8, x8, x13
  408b2c:	cmp	x8, x9
  408b30:	b.hi	408a7c <wcrtomb@plt+0x620c>  // b.pmore
  408b34:	ldurb	w14, [x8, #-1]
  408b38:	cbz	x25, 408aac <wcrtomb@plt+0x623c>
  408b3c:	ldrb	w14, [x25, x14]
  408b40:	b	408aac <wcrtomb@plt+0x623c>
  408b44:	add	x12, x14, x13
  408b48:	mvn	x14, x12
  408b4c:	sub	x13, x11, x12
  408b50:	add	x14, x14, x8
  408b54:	b	408b78 <wcrtomb@plt+0x6308>
  408b58:	ldrb	w16, [x13]
  408b5c:	ldrb	w15, [x25, x15]
  408b60:	add	x16, x25, x16
  408b64:	ldrb	w16, [x16]
  408b68:	sub	x13, x13, #0x1
  408b6c:	sub	x14, x14, #0x1
  408b70:	cmp	w15, w16
  408b74:	b.ne	408b1c <wcrtomb@plt+0x62ac>  // b.any
  408b78:	cmp	x12, x24
  408b7c:	b.ge	408b94 <wcrtomb@plt+0x6324>  // b.tcont
  408b80:	ldrb	w15, [x14]
  408b84:	add	x12, x12, #0x1
  408b88:	cbnz	x25, 408b58 <wcrtomb@plt+0x62e8>
  408b8c:	mov	x16, x13
  408b90:	b	408b64 <wcrtomb@plt+0x62f4>
  408b94:	sub	x8, x8, x24
  408b98:	sub	x0, x8, x21
  408b9c:	tbz	x0, #63, 408928 <wcrtomb@plt+0x60b8>
  408ba0:	b	408934 <wcrtomb@plt+0x60c4>
  408ba4:	add	x9, x24, x27
  408ba8:	sub	x17, x9, #0x3
  408bac:	sub	x18, x9, #0x1
  408bb0:	ldurb	w9, [x8, #-1]
  408bb4:	add	x10, x20, #0x78
  408bb8:	ldrb	w9, [x10, x9]
  408bbc:	add	x9, x8, x9
  408bc0:	ldurb	w11, [x9, #-1]
  408bc4:	ldrb	w11, [x10, x11]
  408bc8:	add	x9, x9, x11
  408bcc:	cbz	x11, 408cb0 <wcrtomb@plt+0x6440>
  408bd0:	ldurb	w11, [x9, #-1]
  408bd4:	ldrb	w11, [x10, x11]
  408bd8:	add	x9, x9, x11
  408bdc:	ldurb	w11, [x9, #-1]
  408be0:	ldrb	w11, [x10, x11]
  408be4:	add	x9, x9, x11
  408be8:	ldurb	w11, [x9, #-1]
  408bec:	ldrb	w10, [x10, x11]
  408bf0:	add	x9, x9, x10
  408bf4:	cbz	x10, 408cb0 <wcrtomb@plt+0x6440>
  408bf8:	ldurb	w11, [x9, #-1]
  408bfc:	add	x10, x20, #0x78
  408c00:	ldrb	w11, [x10, x11]
  408c04:	add	x9, x9, x11
  408c08:	ldurb	w11, [x9, #-1]
  408c0c:	ldrb	w11, [x10, x11]
  408c10:	add	x9, x9, x11
  408c14:	ldurb	w11, [x9, #-1]
  408c18:	ldrb	w11, [x10, x11]
  408c1c:	add	x9, x9, x11
  408c20:	cbz	x11, 408cb0 <wcrtomb@plt+0x6440>
  408c24:	ldurb	w11, [x9, #-1]
  408c28:	ldrb	w11, [x10, x11]
  408c2c:	add	x9, x9, x11
  408c30:	ldurb	w11, [x9, #-1]
  408c34:	ldrb	w10, [x10, x11]
  408c38:	add	x9, x9, x10
  408c3c:	sub	x8, x9, x8
  408c40:	cmp	x8, #0x7f
  408c44:	mov	x8, x9
  408c48:	b.gt	408db8 <wcrtomb@plt+0x6548>
  408c4c:	ldr	w2, [x20, #2452]
  408c50:	sub	x8, x9, #0x1
  408c54:	tbnz	w2, #31, 408dc4 <wcrtomb@plt+0x6554>
  408c58:	cmp	x8, x16
  408c5c:	b.cs	40891c <wcrtomb@plt+0x60ac>  // b.hs, b.nlast
  408c60:	ldrb	w9, [x8]
  408c64:	add	x9, x20, x9, lsl #3
  408c68:	ldr	x9, [x9, #376]
  408c6c:	cbnz	x9, 408ca4 <wcrtomb@plt+0x6434>
  408c70:	add	x8, x8, #0x1
  408c74:	tst	x8, #0xf
  408c78:	b.ne	408c58 <wcrtomb@plt+0x63e8>  // b.any
  408c7c:	sub	x3, x16, x8
  408c80:	mov	x0, x8
  408c84:	mov	w1, w22
  408c88:	stur	x16, [x29, #-8]
  408c8c:	stp	x18, x17, [sp, #8]
  408c90:	bl	4133a0 <wcrtomb@plt+0x10b30>
  408c94:	ldp	x18, x17, [sp, #8]
  408c98:	ldur	x16, [x29, #-8]
  408c9c:	mov	x8, x0
  408ca0:	cbz	x0, 40891c <wcrtomb@plt+0x60ac>
  408ca4:	add	x9, x8, #0x1
  408ca8:	cmp	x28, x9
  408cac:	b.ls	408e04 <wcrtomb@plt+0x6594>  // b.plast
  408cb0:	mov	x11, xzr
  408cb4:	mov	x10, x24
  408cb8:	b	408ccc <wcrtomb@plt+0x645c>
  408cbc:	ldrb	w11, [x25, x12]
  408cc0:	cmp	w11, w22, uxtb
  408cc4:	sub	x11, x8, #0x1
  408cc8:	b.ne	408da8 <wcrtomb@plt+0x6538>  // b.any
  408ccc:	ldurb	w8, [x9, #-2]
  408cd0:	cbz	x25, 408cd8 <wcrtomb@plt+0x6468>
  408cd4:	ldrb	w8, [x25, x8]
  408cd8:	cmp	w8, w26
  408cdc:	b.ne	408d2c <wcrtomb@plt+0x64bc>  // b.any
  408ce0:	sub	x12, x9, #0x3
  408ce4:	mov	x13, x17
  408ce8:	mov	w8, #0x2                   	// #2
  408cec:	b	408d10 <wcrtomb@plt+0x64a0>
  408cf0:	ldrb	w15, [x13]
  408cf4:	ldrb	w14, [x25, x14]
  408cf8:	add	x15, x25, x15
  408cfc:	ldrb	w15, [x15]
  408d00:	sub	x13, x13, #0x1
  408d04:	sub	x12, x12, #0x1
  408d08:	cmp	w14, w15
  408d0c:	b.ne	408d30 <wcrtomb@plt+0x64c0>  // b.any
  408d10:	cmp	x8, x10
  408d14:	b.ge	408d58 <wcrtomb@plt+0x64e8>  // b.tcont
  408d18:	ldrb	w14, [x12]
  408d1c:	add	x8, x8, #0x1
  408d20:	cbnz	x25, 408cf0 <wcrtomb@plt+0x6480>
  408d24:	mov	x15, x13
  408d28:	b	408cfc <wcrtomb@plt+0x648c>
  408d2c:	mov	w8, #0x2                   	// #2
  408d30:	ldr	x10, [x20, #2432]
  408d34:	add	x10, x10, x8, lsl #3
  408d38:	ldur	x10, [x10, #-16]
  408d3c:	add	x9, x9, x10
  408d40:	cmp	x9, x28
  408d44:	b.hi	408db4 <wcrtomb@plt+0x6544>  // b.pmore
  408d48:	ldurb	w12, [x9, #-1]
  408d4c:	cbnz	x25, 408cbc <wcrtomb@plt+0x644c>
  408d50:	mov	w11, w12
  408d54:	b	408cc0 <wcrtomb@plt+0x6450>
  408d58:	add	x8, x11, x10
  408d5c:	mvn	x11, x8
  408d60:	sub	x10, x18, x8
  408d64:	add	x11, x11, x9
  408d68:	b	408d8c <wcrtomb@plt+0x651c>
  408d6c:	ldrb	w13, [x10]
  408d70:	ldrb	w12, [x25, x12]
  408d74:	add	x13, x25, x13
  408d78:	ldrb	w13, [x13]
  408d7c:	sub	x10, x10, #0x1
  408d80:	sub	x11, x11, #0x1
  408d84:	cmp	w12, w13
  408d88:	b.ne	408d30 <wcrtomb@plt+0x64c0>  // b.any
  408d8c:	cmp	x8, x24
  408d90:	b.ge	408df4 <wcrtomb@plt+0x6584>  // b.tcont
  408d94:	ldrb	w12, [x11]
  408d98:	add	x8, x8, #0x1
  408d9c:	cbnz	x25, 408d6c <wcrtomb@plt+0x64fc>
  408da0:	mov	x13, x10
  408da4:	b	408d78 <wcrtomb@plt+0x6508>
  408da8:	add	x8, x20, x12
  408dac:	ldrb	w8, [x8, #120]
  408db0:	add	x9, x9, x8
  408db4:	mov	x8, x9
  408db8:	cmp	x28, x8
  408dbc:	b.cs	408bb0 <wcrtomb@plt+0x6340>  // b.hs, b.nlast
  408dc0:	b	408a40 <wcrtomb@plt+0x61d0>
  408dc4:	sub	x9, x16, x8
  408dc8:	cmp	x9, #0x1
  408dcc:	b.lt	40891c <wcrtomb@plt+0x60ac>  // b.tstop
  408dd0:	ldrb	w9, [x8]
  408dd4:	add	x9, x20, x9, lsl #3
  408dd8:	ldr	x9, [x9, #376]
  408ddc:	cbnz	x9, 408ca4 <wcrtomb@plt+0x6434>
  408de0:	add	x8, x8, #0x1
  408de4:	cmp	x8, x16
  408de8:	mov	x0, #0xffffffffffffffff    	// #-1
  408dec:	b.cc	408dd0 <wcrtomb@plt+0x6560>  // b.lo, b.ul, b.last
  408df0:	b	408934 <wcrtomb@plt+0x60c4>
  408df4:	sub	x8, x9, x24
  408df8:	sub	x0, x8, x21
  408dfc:	tbz	x0, #63, 408928 <wcrtomb@plt+0x60b8>
  408e00:	b	408934 <wcrtomb@plt+0x60c4>
  408e04:	mov	x8, x9
  408e08:	b	408a40 <wcrtomb@plt+0x61d0>
  408e0c:	ldr	x0, [x0, #88]
  408e10:	ret
  408e14:	stp	x29, x30, [sp, #-96]!
  408e18:	str	x28, [sp, #16]
  408e1c:	stp	x26, x25, [sp, #32]
  408e20:	stp	x24, x23, [sp, #48]
  408e24:	stp	x22, x21, [sp, #64]
  408e28:	stp	x20, x19, [sp, #80]
  408e2c:	mov	x29, sp
  408e30:	sub	sp, sp, #0x900
  408e34:	ldr	x22, [x0, #2440]
  408e38:	ldr	x23, [x0, #88]
  408e3c:	add	x8, x0, #0x78
  408e40:	sub	x9, x29, #0x100
  408e44:	cmp	x22, #0x0
  408e48:	mov	x20, x0
  408e4c:	csel	x19, x9, x8, ne  // ne = any
  408e50:	cmp	x23, #0x1
  408e54:	b.ne	408f8c <wcrtomb@plt+0x671c>  // b.any
  408e58:	ldr	x21, [x20, #96]
  408e5c:	str	x21, [x29, #24]
  408e60:	cbz	x21, 408e78 <wcrtomb@plt+0x6608>
  408e64:	ldr	x0, [x21, #8]
  408e68:	add	x1, x29, #0x18
  408e6c:	bl	409374 <wcrtomb@plt+0x6b04>
  408e70:	ldr	x21, [x21, #24]
  408e74:	cbnz	x21, 408e64 <wcrtomb@plt+0x65f4>
  408e78:	ldp	x9, x8, [x20, #24]
  408e7c:	ldr	x21, [x20, #104]
  408e80:	sub	x8, x8, x9
  408e84:	cmp	x8, x21
  408e88:	b.cs	408e9c <wcrtomb@plt+0x662c>  // b.hs, b.nlast
  408e8c:	mov	x0, x20
  408e90:	mov	x1, x21
  408e94:	bl	418074 <_obstack_newchunk@@Base>
  408e98:	ldr	x9, [x20, #24]
  408e9c:	ldr	x8, [x20, #16]
  408ea0:	add	x9, x9, x21
  408ea4:	str	x9, [x20, #24]
  408ea8:	cmp	x9, x8
  408eac:	b.ne	408ebc <wcrtomb@plt+0x664c>  // b.any
  408eb0:	ldrb	w10, [x20, #80]
  408eb4:	orr	w10, w10, #0x2
  408eb8:	strb	w10, [x20, #80]
  408ebc:	ldr	x11, [x20, #48]
  408ec0:	ldr	x12, [x20, #8]
  408ec4:	ldr	x10, [x20, #32]
  408ec8:	add	x9, x11, x9
  408ecc:	bic	x9, x9, x11
  408ed0:	sub	x11, x9, x12
  408ed4:	sub	x12, x10, x12
  408ed8:	cmp	x11, x12
  408edc:	str	x9, [x20, #24]
  408ee0:	b.ls	408eec <wcrtomb@plt+0x667c>  // b.plast
  408ee4:	mov	x9, x10
  408ee8:	str	x10, [x20, #24]
  408eec:	ldr	x10, [x20, #104]
  408ef0:	str	x9, [x20, #16]
  408ef4:	str	x8, [x20, #2424]
  408ef8:	cmp	x10, #0x1
  408efc:	b.lt	408f44 <wcrtomb@plt+0x66d4>  // b.tstop
  408f00:	ldr	x9, [x20, #96]
  408f04:	ldr	x10, [x9, #8]
  408f08:	ldrb	w10, [x10, #24]
  408f0c:	strb	w10, [x8]
  408f10:	ldr	x8, [x20, #104]
  408f14:	cmp	x8, #0x2
  408f18:	b.lt	408f44 <wcrtomb@plt+0x66d4>  // b.tstop
  408f1c:	mov	w8, #0x1                   	// #1
  408f20:	ldr	x9, [x9, #24]
  408f24:	ldr	x11, [x20, #2424]
  408f28:	ldr	x10, [x9, #8]
  408f2c:	ldrb	w10, [x10, #24]
  408f30:	strb	w10, [x11, x8]
  408f34:	ldr	x10, [x20, #104]
  408f38:	add	x8, x8, #0x1
  408f3c:	cmp	x8, x10
  408f40:	b.lt	408f20 <wcrtomb@plt+0x66b0>  // b.tstop
  408f44:	ldr	x0, [x20, #2440]
  408f48:	bl	408150 <wcrtomb@plt+0x58e0>
  408f4c:	adrp	x8, 408000 <wcrtomb@plt+0x5790>
  408f50:	add	x8, x8, #0x8e0
  408f54:	str	x8, [x0, #2464]
  408f58:	ldr	x1, [x20, #2424]
  408f5c:	ldr	x2, [x20, #104]
  408f60:	mov	x21, x0
  408f64:	bl	4084ec <wcrtomb@plt+0x5c7c>
  408f68:	mov	x0, x20
  408f6c:	mov	x1, xzr
  408f70:	bl	4181f4 <_obstack_free@@Base>
  408f74:	mov	w2, #0x9a8                 	// #2472
  408f78:	mov	x0, x20
  408f7c:	mov	x1, x21
  408f80:	bl	402210 <memcpy@plt>
  408f84:	mov	x0, x21
  408f88:	bl	402620 <free@plt>
  408f8c:	ldr	x8, [x20, #104]
  408f90:	mov	w9, #0xff                  	// #255
  408f94:	cmp	x8, #0xff
  408f98:	csel	x8, x8, x9, lt  // lt = tstop
  408f9c:	mov	x9, #0x101010101010101     	// #72340172838076673
  408fa0:	and	x8, x8, #0xff
  408fa4:	mul	x8, x8, x9
  408fa8:	dup	v0.2d, x8
  408fac:	stp	q0, q0, [x19, #224]
  408fb0:	stp	q0, q0, [x19, #192]
  408fb4:	stp	q0, q0, [x19, #160]
  408fb8:	stp	q0, q0, [x19, #128]
  408fbc:	stp	q0, q0, [x19, #96]
  408fc0:	stp	q0, q0, [x19, #64]
  408fc4:	stp	q0, q0, [x19, #32]
  408fc8:	stp	q0, q0, [x19]
  408fcc:	ldr	x24, [x20, #96]
  408fd0:	str	x24, [x29, #24]
  408fd4:	cbnz	x24, 409030 <wcrtomb@plt+0x67c0>
  408fd8:	ldr	x25, [x20, #96]
  408fdc:	cmp	x23, #0x1
  408fe0:	b.ne	408fec <wcrtomb@plt+0x677c>  // b.any
  408fe4:	ldr	x8, [x25, #24]
  408fe8:	cbnz	x8, 4090e4 <wcrtomb@plt+0x6874>
  408fec:	add	x24, x20, #0x178
  408ff0:	cmp	x22, #0x0
  408ff4:	mov	x8, sp
  408ff8:	csel	x21, x8, x24, ne  // ne = any
  408ffc:	mov	w2, #0x800                 	// #2048
  409000:	mov	x0, x21
  409004:	mov	w1, wzr
  409008:	bl	402470 <memset@plt>
  40900c:	ldr	x0, [x25, #8]
  409010:	mov	x1, x21
  409014:	bl	409554 <wcrtomb@plt+0x6ce4>
  409018:	mov	x8, xzr
  40901c:	mov	w9, #0xffffffff            	// #-1
  409020:	mov	w10, #0xfffffffe            	// #-2
  409024:	b	40912c <wcrtomb@plt+0x68bc>
  409028:	ldr	x24, [x24, #24]
  40902c:	cbz	x24, 408fd8 <wcrtomb@plt+0x6768>
  409030:	ldr	x0, [x24, #8]
  409034:	cmp	x23, #0x1
  409038:	add	x1, x29, #0x18
  40903c:	cset	w21, eq  // eq = none
  409040:	bl	409374 <wcrtomb@plt+0x6b04>
  409044:	ldr	x0, [x24, #8]
  409048:	ldr	x1, [x24, #40]
  40904c:	mov	x2, x19
  409050:	bl	4093bc <wcrtomb@plt+0x6b4c>
  409054:	ldr	x0, [x24, #8]
  409058:	ldr	x1, [x24, #32]
  40905c:	ldr	x2, [x20, #96]
  409060:	mov	w3, w21
  409064:	bl	409418 <wcrtomb@plt+0x6ba8>
  409068:	cmp	x23, #0x1
  40906c:	b.ne	409028 <wcrtomb@plt+0x67b8>  // b.any
  409070:	ldr	x8, [x20, #104]
  409074:	ldr	x25, [x24, #32]
  409078:	stp	x8, x8, [x24, #48]
  40907c:	cbz	x25, 409028 <wcrtomb@plt+0x67b8>
  409080:	ldp	x26, x21, [x24]
  409084:	b	409090 <wcrtomb@plt+0x6820>
  409088:	ldr	x25, [x25, #32]
  40908c:	cbz	x25, 409028 <wcrtomb@plt+0x67b8>
  409090:	ldr	x0, [x25, #8]
  409094:	mov	x1, x21
  409098:	bl	4094e0 <wcrtomb@plt+0x6c70>
  40909c:	tbnz	w0, #0, 4090b8 <wcrtomb@plt+0x6848>
  4090a0:	ldr	x8, [x24, #40]
  4090a4:	ldp	x9, x10, [x25, #40]
  4090a8:	sub	x8, x8, x9
  4090ac:	cmp	x8, x10
  4090b0:	b.ge	4090b8 <wcrtomb@plt+0x6848>  // b.tcont
  4090b4:	str	x8, [x25, #48]
  4090b8:	cbz	x26, 409088 <wcrtomb@plt+0x6818>
  4090bc:	ldr	x8, [x24, #40]
  4090c0:	ldr	x9, [x25, #40]
  4090c4:	ldr	x10, [x25, #56]
  4090c8:	sub	x8, x8, x9
  4090cc:	cmp	x10, x8
  4090d0:	b.le	409088 <wcrtomb@plt+0x6818>
  4090d4:	str	x8, [x25, #56]
  4090d8:	b	409088 <wcrtomb@plt+0x6818>
  4090dc:	ldr	x8, [x8, #24]
  4090e0:	cbz	x8, 408fec <wcrtomb@plt+0x677c>
  4090e4:	ldr	x10, [x8, #16]
  4090e8:	ldr	x9, [x8, #56]
  4090ec:	ldr	x10, [x10, #56]
  4090f0:	cmp	x9, x10
  4090f4:	b.le	409100 <wcrtomb@plt+0x6890>
  4090f8:	mov	x9, x10
  4090fc:	str	x10, [x8, #56]
  409100:	ldr	x10, [x8, #48]
  409104:	cmp	x10, x9
  409108:	b.le	4090dc <wcrtomb@plt+0x686c>
  40910c:	str	x9, [x8, #48]
  409110:	b	4090dc <wcrtomb@plt+0x686c>
  409114:	mov	w9, w8
  409118:	mov	w10, w11
  40911c:	add	x8, x8, #0x1
  409120:	cmp	x8, #0x100
  409124:	add	x24, x24, #0x8
  409128:	b.eq	40918c <wcrtomb@plt+0x691c>  // b.none
  40912c:	cbz	x22, 409144 <wcrtomb@plt+0x68d4>
  409130:	ldrb	w11, [x22, x8]
  409134:	ldr	x12, [x21, x11, lsl #3]
  409138:	str	x12, [x24]
  40913c:	cbnz	x12, 409150 <wcrtomb@plt+0x68e0>
  409140:	b	40911c <wcrtomb@plt+0x68ac>
  409144:	ldr	x12, [x24]
  409148:	mov	w11, w8
  40914c:	cbz	x12, 40911c <wcrtomb@plt+0x68ac>
  409150:	cmn	w10, #0x2
  409154:	b.le	409114 <wcrtomb@plt+0x68a4>
  409158:	cmp	w10, w11
  40915c:	b.ne	40916c <wcrtomb@plt+0x68fc>  // b.any
  409160:	cmp	w9, w10
  409164:	csinv	w9, w8, wzr, eq  // eq = none
  409168:	b	40911c <wcrtomb@plt+0x68ac>
  40916c:	cmp	x8, w11, uxtw
  409170:	cset	w11, eq  // eq = none
  409174:	cmp	w10, w9
  409178:	cset	w12, eq  // eq = none
  40917c:	tst	w12, w11
  409180:	csel	w9, w8, w9, ne  // ne = any
  409184:	csinv	w10, w10, wzr, ne  // ne = any
  409188:	b	40911c <wcrtomb@plt+0x68ac>
  40918c:	cmp	x23, #0x1
  409190:	str	w10, [x20, #2448]
  409194:	str	w9, [x20, #2452]
  409198:	b.ne	409330 <wcrtomb@plt+0x6ac0>  // b.any
  40919c:	ldp	x9, x8, [x20, #24]
  4091a0:	ldr	x21, [x20, #104]
  4091a4:	sub	x8, x8, x9
  4091a8:	cmp	x8, x21
  4091ac:	b.cs	4091c0 <wcrtomb@plt+0x6950>  // b.hs, b.nlast
  4091b0:	mov	x0, x20
  4091b4:	mov	x1, x21
  4091b8:	bl	418074 <_obstack_newchunk@@Base>
  4091bc:	ldr	x9, [x20, #24]
  4091c0:	ldr	x8, [x20, #16]
  4091c4:	add	x9, x9, x21
  4091c8:	str	x9, [x20, #24]
  4091cc:	cmp	x9, x8
  4091d0:	b.ne	4091e0 <wcrtomb@plt+0x6970>  // b.any
  4091d4:	ldrb	w10, [x20, #80]
  4091d8:	orr	w10, w10, #0x2
  4091dc:	strb	w10, [x20, #80]
  4091e0:	ldr	x10, [x20, #48]
  4091e4:	ldr	x12, [x20, #8]
  4091e8:	ldr	x11, [x20, #32]
  4091ec:	add	x9, x10, x9
  4091f0:	bic	x10, x9, x10
  4091f4:	sub	x9, x10, x12
  4091f8:	sub	x12, x11, x12
  4091fc:	cmp	x9, x12
  409200:	str	x10, [x20, #24]
  409204:	b.ls	409210 <wcrtomb@plt+0x69a0>  // b.plast
  409208:	mov	x10, x11
  40920c:	str	x11, [x20, #24]
  409210:	ldr	x9, [x20, #104]
  409214:	str	x10, [x20, #16]
  409218:	str	x8, [x20, #2424]
  40921c:	cmp	x9, #0x1
  409220:	b.lt	409330 <wcrtomb@plt+0x6ac0>  // b.tstop
  409224:	ldr	x10, [x20, #96]
  409228:	add	x8, x9, x8
  40922c:	cmp	x9, #0x1
  409230:	ldr	x11, [x10, #8]
  409234:	ldrb	w11, [x11, #24]
  409238:	sturb	w11, [x8, #-1]
  40923c:	b.eq	409264 <wcrtomb@plt+0x69f4>  // b.none
  409240:	ldr	x10, [x10, #24]
  409244:	ldr	x11, [x20, #2424]
  409248:	ldr	x8, [x10, #8]
  40924c:	add	x11, x11, x9
  409250:	sub	x9, x9, #0x1
  409254:	cmp	x9, #0x1
  409258:	ldrb	w8, [x8, #24]
  40925c:	sturb	w8, [x11, #-2]
  409260:	b.gt	409240 <wcrtomb@plt+0x69d0>
  409264:	ldr	x8, [x20, #104]
  409268:	cmp	x8, #0x2
  40926c:	b.lt	409330 <wcrtomb@plt+0x6ac0>  // b.tstop
  409270:	ldp	x9, x10, [x20, #24]
  409274:	lsl	x8, x8, #3
  409278:	sub	x21, x8, #0x8
  40927c:	sub	x8, x10, x9
  409280:	cmp	x8, x21
  409284:	b.cs	409298 <wcrtomb@plt+0x6a28>  // b.hs, b.nlast
  409288:	mov	x0, x20
  40928c:	mov	x1, x21
  409290:	bl	418074 <_obstack_newchunk@@Base>
  409294:	ldr	x9, [x20, #24]
  409298:	ldr	x8, [x20, #16]
  40929c:	add	x9, x9, x21
  4092a0:	str	x9, [x20, #24]
  4092a4:	cmp	x9, x8
  4092a8:	b.ne	4092b8 <wcrtomb@plt+0x6a48>  // b.any
  4092ac:	ldrb	w10, [x20, #80]
  4092b0:	orr	w10, w10, #0x2
  4092b4:	strb	w10, [x20, #80]
  4092b8:	ldr	x11, [x20, #48]
  4092bc:	ldr	x12, [x20, #8]
  4092c0:	ldr	x13, [x20, #32]
  4092c4:	ldr	x10, [x20, #104]
  4092c8:	add	x9, x11, x9
  4092cc:	bic	x9, x9, x11
  4092d0:	sub	x14, x13, x12
  4092d4:	sub	x11, x9, x12
  4092d8:	cmp	x11, x14
  4092dc:	csel	x9, x13, x9, hi  // hi = pmore
  4092e0:	cmp	x10, #0x2
  4092e4:	stp	x9, x9, [x20, #16]
  4092e8:	str	x8, [x20, #2432]
  4092ec:	b.lt	409318 <wcrtomb@plt+0x6aa8>  // b.tstop
  4092f0:	ldr	x9, [x20, #96]
  4092f4:	mov	x11, xzr
  4092f8:	ldr	x9, [x9, #24]
  4092fc:	ldr	x10, [x9, #48]
  409300:	str	x10, [x8, x11, lsl #3]
  409304:	ldr	x10, [x20, #104]
  409308:	add	x11, x11, #0x1
  40930c:	sub	x12, x10, #0x1
  409310:	cmp	x11, x12
  409314:	b.lt	4092f8 <wcrtomb@plt+0x6a88>  // b.tstop
  409318:	ldr	x8, [x20, #2424]
  40931c:	add	x8, x10, x8
  409320:	ldurb	w8, [x8, #-2]
  409324:	cbz	x22, 40932c <wcrtomb@plt+0x6abc>
  409328:	ldrb	w8, [x22, x8]
  40932c:	strb	w8, [x20, #2456]
  409330:	cbz	x22, 409354 <wcrtomb@plt+0x6ae4>
  409334:	mov	x8, xzr
  409338:	add	x9, x20, #0x78
  40933c:	ldrb	w10, [x22, x8]
  409340:	ldrb	w10, [x19, x10]
  409344:	strb	w10, [x9, x8]
  409348:	add	x8, x8, #0x1
  40934c:	cmp	x8, #0x100
  409350:	b.ne	40933c <wcrtomb@plt+0x6acc>  // b.any
  409354:	add	sp, sp, #0x900
  409358:	ldp	x20, x19, [sp, #80]
  40935c:	ldp	x22, x21, [sp, #64]
  409360:	ldp	x24, x23, [sp, #48]
  409364:	ldp	x26, x25, [sp, #32]
  409368:	ldr	x28, [sp, #16]
  40936c:	ldp	x29, x30, [sp], #96
  409370:	ret
  409374:	cbz	x0, 4093b8 <wcrtomb@plt+0x6b48>
  409378:	stp	x29, x30, [sp, #-32]!
  40937c:	stp	x20, x19, [sp, #16]
  409380:	mov	x20, x0
  409384:	ldr	x0, [x0]
  409388:	mov	x29, sp
  40938c:	mov	x19, x1
  409390:	bl	409374 <wcrtomb@plt+0x6b04>
  409394:	ldr	x0, [x20, #8]
  409398:	mov	x1, x19
  40939c:	bl	409374 <wcrtomb@plt+0x6b04>
  4093a0:	ldr	x8, [x20, #16]
  4093a4:	ldr	x9, [x19]
  4093a8:	str	x8, [x9, #24]
  4093ac:	str	x8, [x19]
  4093b0:	ldp	x20, x19, [sp, #16]
  4093b4:	ldp	x29, x30, [sp], #32
  4093b8:	ret
  4093bc:	stp	x29, x30, [sp, #-48]!
  4093c0:	str	x21, [sp, #16]
  4093c4:	stp	x20, x19, [sp, #32]
  4093c8:	mov	x29, sp
  4093cc:	cbz	x0, 409408 <wcrtomb@plt+0x6b98>
  4093d0:	mov	x21, x0
  4093d4:	ldr	x0, [x0]
  4093d8:	mov	x19, x2
  4093dc:	mov	x20, x1
  4093e0:	bl	4093bc <wcrtomb@plt+0x6b4c>
  4093e4:	ldr	x0, [x21, #8]
  4093e8:	mov	x1, x20
  4093ec:	mov	x2, x19
  4093f0:	bl	4093bc <wcrtomb@plt+0x6b4c>
  4093f4:	ldrb	w8, [x21, #24]
  4093f8:	ldrb	w9, [x19, x8]
  4093fc:	cmp	x9, x20
  409400:	b.le	409408 <wcrtomb@plt+0x6b98>
  409404:	strb	w20, [x19, x8]
  409408:	ldp	x20, x19, [sp, #32]
  40940c:	ldr	x21, [sp, #16]
  409410:	ldp	x29, x30, [sp], #48
  409414:	ret
  409418:	stp	x29, x30, [sp, #-64]!
  40941c:	str	x23, [sp, #16]
  409420:	stp	x22, x21, [sp, #32]
  409424:	stp	x20, x19, [sp, #48]
  409428:	mov	x29, sp
  40942c:	cbz	x0, 4094cc <wcrtomb@plt+0x6c5c>
  409430:	mov	x21, x0
  409434:	ldr	x0, [x0]
  409438:	and	w23, w3, #0x1
  40943c:	mov	w19, w3
  409440:	mov	w3, w23
  409444:	mov	x20, x2
  409448:	mov	x22, x1
  40944c:	bl	409418 <wcrtomb@plt+0x6ba8>
  409450:	ldr	x0, [x21, #8]
  409454:	mov	x1, x22
  409458:	mov	x2, x20
  40945c:	mov	w3, w23
  409460:	bl	409418 <wcrtomb@plt+0x6ba8>
  409464:	cbnz	x22, 40947c <wcrtomb@plt+0x6c0c>
  409468:	ldr	x8, [x21, #16]
  40946c:	str	x20, [x8, #32]
  409470:	b	4094cc <wcrtomb@plt+0x6c5c>
  409474:	ldr	x22, [x22, #32]
  409478:	cbz	x22, 409468 <wcrtomb@plt+0x6bf8>
  40947c:	ldr	x8, [x22, #8]
  409480:	cbz	x8, 409474 <wcrtomb@plt+0x6c04>
  409484:	ldrb	w9, [x21, #24]
  409488:	ldrb	w10, [x8, #24]
  40948c:	cmp	w9, w10
  409490:	b.eq	4094a4 <wcrtomb@plt+0x6c34>  // b.none
  409494:	cset	w10, cs  // cs = hs, nlast
  409498:	ldr	x8, [x8, w10, uxtw #3]
  40949c:	cbnz	x8, 409488 <wcrtomb@plt+0x6c18>
  4094a0:	b	409474 <wcrtomb@plt+0x6c04>
  4094a4:	ldr	x9, [x8, #16]
  4094a8:	ldr	x8, [x21, #16]
  4094ac:	str	x9, [x8, #32]
  4094b0:	tbnz	w19, #0, 4094cc <wcrtomb@plt+0x6c5c>
  4094b4:	ldr	x9, [x9]
  4094b8:	cbz	x9, 4094cc <wcrtomb@plt+0x6c5c>
  4094bc:	ldr	x9, [x8]
  4094c0:	cbnz	x9, 4094cc <wcrtomb@plt+0x6c5c>
  4094c4:	mov	x9, #0xffffffffffffffff    	// #-1
  4094c8:	str	x9, [x8]
  4094cc:	ldp	x20, x19, [sp, #48]
  4094d0:	ldp	x22, x21, [sp, #32]
  4094d4:	ldr	x23, [sp, #16]
  4094d8:	ldp	x29, x30, [sp], #64
  4094dc:	ret
  4094e0:	stp	x29, x30, [sp, #-32]!
  4094e4:	stp	x20, x19, [sp, #16]
  4094e8:	mov	x29, sp
  4094ec:	cbz	x1, 409544 <wcrtomb@plt+0x6cd4>
  4094f0:	mov	x20, x1
  4094f4:	ldr	x1, [x1]
  4094f8:	mov	x19, x0
  4094fc:	bl	4094e0 <wcrtomb@plt+0x6c70>
  409500:	tbz	w0, #0, 40953c <wcrtomb@plt+0x6ccc>
  409504:	ldr	x1, [x20, #8]
  409508:	mov	x0, x19
  40950c:	bl	4094e0 <wcrtomb@plt+0x6c70>
  409510:	mov	w8, w0
  409514:	mov	w0, wzr
  409518:	cbz	x19, 409548 <wcrtomb@plt+0x6cd8>
  40951c:	tbz	w8, #0, 409548 <wcrtomb@plt+0x6cd8>
  409520:	ldrb	w8, [x20, #24]
  409524:	ldrb	w9, [x19, #24]
  409528:	cmp	w8, w9
  40952c:	b.eq	409544 <wcrtomb@plt+0x6cd4>  // b.none
  409530:	cset	w9, cs  // cs = hs, nlast
  409534:	ldr	x19, [x19, w9, uxtw #3]
  409538:	cbnz	x19, 409524 <wcrtomb@plt+0x6cb4>
  40953c:	mov	w0, wzr
  409540:	b	409548 <wcrtomb@plt+0x6cd8>
  409544:	mov	w0, #0x1                   	// #1
  409548:	ldp	x20, x19, [sp, #16]
  40954c:	ldp	x29, x30, [sp], #32
  409550:	ret
  409554:	cbz	x0, 409594 <wcrtomb@plt+0x6d24>
  409558:	stp	x29, x30, [sp, #-32]!
  40955c:	stp	x20, x19, [sp, #16]
  409560:	mov	x20, x0
  409564:	ldr	x0, [x0]
  409568:	mov	x29, sp
  40956c:	mov	x19, x1
  409570:	bl	409554 <wcrtomb@plt+0x6ce4>
  409574:	ldr	x0, [x20, #8]
  409578:	mov	x1, x19
  40957c:	bl	409554 <wcrtomb@plt+0x6ce4>
  409580:	ldr	x8, [x20, #16]
  409584:	ldrb	w9, [x20, #24]
  409588:	str	x8, [x19, x9, lsl #3]
  40958c:	ldp	x20, x19, [sp, #16]
  409590:	ldp	x29, x30, [sp], #32
  409594:	ret
  409598:	ldr	x5, [x0, #2464]
  40959c:	and	w4, w4, #0x1
  4095a0:	br	x5
  4095a4:	stp	x29, x30, [sp, #-32]!
  4095a8:	mov	x1, xzr
  4095ac:	str	x19, [sp, #16]
  4095b0:	mov	x29, sp
  4095b4:	mov	x19, x0
  4095b8:	bl	4181f4 <_obstack_free@@Base>
  4095bc:	mov	x0, x19
  4095c0:	ldr	x19, [sp, #16]
  4095c4:	ldp	x29, x30, [sp], #32
  4095c8:	b	402620 <free@plt>
  4095cc:	ret
  4095d0:	ldrb	w8, [x0]
  4095d4:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  4095d8:	add	x9, x9, #0x8b8
  4095dc:	add	x8, x9, x8
  4095e0:	ldrsb	x8, [x8, #3]
  4095e4:	cmn	x8, #0x2
  4095e8:	b.ne	4095f0 <wcrtomb@plt+0x6d80>  // b.any
  4095ec:	b	417e8c <wcrtomb@plt+0x1561c>
  4095f0:	mov	x0, x8
  4095f4:	ret
  4095f8:	stp	x29, x30, [sp, #-48]!
  4095fc:	str	x21, [sp, #16]
  409600:	stp	x20, x19, [sp, #32]
  409604:	adrp	x20, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  409608:	adrp	x21, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40960c:	mov	x19, xzr
  409610:	add	x20, x20, #0x8b8
  409614:	add	x21, x21, #0x63e
  409618:	mov	x29, sp
  40961c:	b	40963c <wcrtomb@plt+0x6dcc>
  409620:	bl	402710 <iswalnum@plt>
  409624:	cmp	w0, #0x0
  409628:	cset	w8, ne  // ne = any
  40962c:	strb	w8, [x21, x19]
  409630:	add	x19, x19, #0x1
  409634:	cmp	x19, #0x100
  409638:	b.eq	409654 <wcrtomb@plt+0x6de4>  // b.none
  40963c:	add	x8, x20, x19, lsl #2
  409640:	ldr	w0, [x8, #260]
  409644:	cmp	w0, #0x5f
  409648:	b.ne	409620 <wcrtomb@plt+0x6db0>  // b.any
  40964c:	mov	w8, #0x1                   	// #1
  409650:	b	40962c <wcrtomb@plt+0x6dbc>
  409654:	ldp	x20, x19, [sp, #32]
  409658:	ldr	x21, [sp, #16]
  40965c:	ldp	x29, x30, [sp], #48
  409660:	ret
  409664:	sub	sp, sp, #0x40
  409668:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  40966c:	ldrb	w8, [x8, #3518]
  409670:	stp	x29, x30, [sp, #16]
  409674:	stp	x22, x21, [sp, #32]
  409678:	stp	x20, x19, [sp, #48]
  40967c:	add	x29, sp, #0x10
  409680:	cbz	w8, 409698 <wcrtomb@plt+0x6e28>
  409684:	mov	w19, w0
  409688:	bl	402630 <__ctype_get_mb_cur_max@plt>
  40968c:	cmp	x0, #0x1
  409690:	b.eq	4096b8 <wcrtomb@plt+0x6e48>  // b.none
  409694:	tbnz	w19, #0, 4096b8 <wcrtomb@plt+0x6e48>
  409698:	mov	x19, xzr
  40969c:	mov	x0, x19
  4096a0:	bl	408150 <wcrtomb@plt+0x58e0>
  4096a4:	ldp	x20, x19, [sp, #48]
  4096a8:	ldp	x22, x21, [sp, #32]
  4096ac:	ldp	x29, x30, [sp, #16]
  4096b0:	add	sp, sp, #0x40
  4096b4:	ret
  4096b8:	mov	w0, #0x100                 	// #256
  4096bc:	bl	4155d4 <wcrtomb@plt+0x12d64>
  4096c0:	mov	x19, x0
  4096c4:	bl	402630 <__ctype_get_mb_cur_max@plt>
  4096c8:	cmp	x0, #0x1
  4096cc:	b.ne	4096f4 <wcrtomb@plt+0x6e84>  // b.any
  4096d0:	bl	4024d0 <__ctype_toupper_loc@plt>
  4096d4:	mov	x8, xzr
  4096d8:	ldr	x9, [x0]
  4096dc:	ldr	w9, [x9, x8, lsl #2]
  4096e0:	strb	w9, [x19, x8]
  4096e4:	add	x8, x8, #0x1
  4096e8:	cmp	x8, #0x100
  4096ec:	b.ne	4096d8 <wcrtomb@plt+0x6e68>  // b.any
  4096f0:	b	40969c <wcrtomb@plt+0x6e2c>
  4096f4:	adrp	x22, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  4096f8:	mov	x21, xzr
  4096fc:	add	x22, x22, #0x8b8
  409700:	b	409714 <wcrtomb@plt+0x6ea4>
  409704:	strb	w21, [x19, x21]
  409708:	add	x21, x21, #0x1
  40970c:	cmp	x21, #0x100
  409710:	b.eq	40969c <wcrtomb@plt+0x6e2c>  // b.none
  409714:	add	x8, x22, x21, lsl #2
  409718:	ldr	w20, [x8, #260]
  40971c:	mov	w0, w20
  409720:	bl	402780 <towupper@plt>
  409724:	cmp	w0, w20
  409728:	b.eq	409704 <wcrtomb@plt+0x6e94>  // b.none
  40972c:	mov	w1, w0
  409730:	add	x0, x19, x21
  409734:	add	x2, sp, #0x8
  409738:	str	xzr, [sp, #8]
  40973c:	bl	402870 <wcrtomb@plt>
  409740:	cmp	x0, #0x1
  409744:	b.eq	409708 <wcrtomb@plt+0x6e98>  // b.none
  409748:	bl	402560 <abort@plt>
  40974c:	stp	x29, x30, [sp, #-80]!
  409750:	stp	x24, x23, [sp, #32]
  409754:	stp	x22, x21, [sp, #48]
  409758:	stp	x20, x19, [sp, #64]
  40975c:	ldr	x24, [x0]
  409760:	mov	x19, x2
  409764:	str	x25, [sp, #16]
  409768:	mov	x29, sp
  40976c:	cmp	x24, x2
  409770:	b.cs	4097e8 <wcrtomb@plt+0x6f78>  // b.hs, b.nlast
  409774:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  409778:	ldrb	w8, [x8, #2234]
  40977c:	mov	x22, x3
  409780:	mov	x21, x0
  409784:	mov	x20, x1
  409788:	cbz	w8, 4097f0 <wcrtomb@plt+0x6f80>
  40978c:	cmp	x19, x22
  409790:	b.cs	4097d4 <wcrtomb@plt+0x6f64>  // b.hs, b.nlast
  409794:	ldrb	w8, [x19]
  409798:	and	w8, w8, #0xc0
  40979c:	cmp	w8, #0x80
  4097a0:	b.ne	4097d4 <wcrtomb@plt+0x6f64>  // b.any
  4097a4:	ldurb	w8, [x19, #-1]
  4097a8:	and	w8, w8, #0xc0
  4097ac:	cmp	w8, #0x80
  4097b0:	b.ne	409880 <wcrtomb@plt+0x7010>  // b.any
  4097b4:	ldurb	w8, [x19, #-2]
  4097b8:	and	w8, w8, #0xc0
  4097bc:	cmp	w8, #0x80
  4097c0:	b.ne	409888 <wcrtomb@plt+0x7018>  // b.any
  4097c4:	ldurb	w8, [x19, #-3]
  4097c8:	and	w8, w8, #0xc0
  4097cc:	cmp	w8, #0x80
  4097d0:	b.ne	409890 <wcrtomb@plt+0x7020>  // b.any
  4097d4:	mov	w0, #0x1                   	// #1
  4097d8:	mov	x8, x19
  4097dc:	str	x8, [x21]
  4097e0:	cbnz	x20, 409858 <wcrtomb@plt+0x6fe8>
  4097e4:	b	40985c <wcrtomb@plt+0x6fec>
  4097e8:	sub	x0, x19, x24
  4097ec:	b	409868 <wcrtomb@plt+0x6ff8>
  4097f0:	adrp	x25, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  4097f4:	add	x25, x25, #0x8b8
  4097f8:	str	xzr, [x29, #24]
  4097fc:	b	40980c <wcrtomb@plt+0x6f9c>
  409800:	add	x24, x23, x0
  409804:	cmp	x24, x19
  409808:	b.cs	409848 <wcrtomb@plt+0x6fd8>  // b.hs, b.nlast
  40980c:	ldrb	w8, [x24]
  409810:	mov	x23, x24
  409814:	add	x8, x25, x8
  409818:	ldrsb	x0, [x8, #3]
  40981c:	cmn	x0, #0x2
  409820:	b.ne	409834 <wcrtomb@plt+0x6fc4>  // b.any
  409824:	sub	x1, x22, x23
  409828:	add	x2, x29, #0x18
  40982c:	mov	x0, x23
  409830:	bl	417e8c <wcrtomb@plt+0x1561c>
  409834:	cmn	x0, #0x2
  409838:	b.cc	409800 <wcrtomb@plt+0x6f90>  // b.lo, b.ul, b.last
  40983c:	mov	w0, #0x1                   	// #1
  409840:	str	xzr, [x29, #24]
  409844:	b	409800 <wcrtomb@plt+0x6f90>
  409848:	mov	x8, x24
  40984c:	mov	x24, x23
  409850:	str	x8, [x21]
  409854:	cbz	x20, 40985c <wcrtomb@plt+0x6fec>
  409858:	str	x0, [x20]
  40985c:	sub	x9, x19, x24
  409860:	cmp	x8, x19
  409864:	csel	x0, xzr, x9, eq  // eq = none
  409868:	ldp	x20, x19, [sp, #64]
  40986c:	ldp	x22, x21, [sp, #48]
  409870:	ldp	x24, x23, [sp, #32]
  409874:	ldr	x25, [sp, #16]
  409878:	ldp	x29, x30, [sp], #80
  40987c:	ret
  409880:	mov	w25, #0x1                   	// #1
  409884:	b	409894 <wcrtomb@plt+0x7024>
  409888:	mov	w25, #0x2                   	// #2
  40988c:	b	409894 <wcrtomb@plt+0x7024>
  409890:	mov	w25, #0x3                   	// #3
  409894:	str	xzr, [x29, #24]
  409898:	sub	x23, x19, x25
  40989c:	ldrb	w8, [x23]
  4098a0:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  4098a4:	add	x9, x9, #0x8b8
  4098a8:	add	x8, x9, x8
  4098ac:	ldrsb	x0, [x8, #3]
  4098b0:	cmn	x0, #0x2
  4098b4:	b.ne	4098c8 <wcrtomb@plt+0x7058>  // b.any
  4098b8:	sub	x1, x22, x23
  4098bc:	add	x2, x29, #0x18
  4098c0:	mov	x0, x23
  4098c4:	bl	417e8c <wcrtomb@plt+0x1561c>
  4098c8:	cmp	x0, x25
  4098cc:	cset	w9, hi  // hi = pmore
  4098d0:	cmn	x0, #0x2
  4098d4:	cset	w10, cc  // cc = lo, ul, last
  4098d8:	add	x8, x23, x0
  4098dc:	tst	w9, w10
  4098e0:	csel	x8, x8, x19, ne  // ne = any
  4098e4:	csel	x24, x23, x24, ne  // ne = any
  4098e8:	str	x8, [x21]
  4098ec:	cbnz	x20, 409858 <wcrtomb@plt+0x6fe8>
  4098f0:	b	40985c <wcrtomb@plt+0x6fec>
  4098f4:	sub	sp, sp, #0x50
  4098f8:	stp	x22, x21, [sp, #48]
  4098fc:	subs	x22, x1, x0
  409900:	stp	x29, x30, [sp, #16]
  409904:	stp	x24, x23, [sp, #32]
  409908:	stp	x20, x19, [sp, #64]
  40990c:	add	x29, sp, #0x10
  409910:	str	xzr, [sp, #8]
  409914:	b.eq	4099a8 <wcrtomb@plt+0x7138>  // b.none
  409918:	adrp	x23, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40991c:	adrp	x24, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  409920:	mov	x20, x0
  409924:	mov	x19, xzr
  409928:	add	x23, x23, #0x63e
  40992c:	add	x24, x24, #0x8b8
  409930:	b	409940 <wcrtomb@plt+0x70d0>
  409934:	add	x19, x19, #0x1
  409938:	cmp	x22, x19
  40993c:	b.ls	4099ac <wcrtomb@plt+0x713c>  // b.plast
  409940:	add	x1, x20, x19
  409944:	ldrb	w8, [x1]
  409948:	ldrb	w9, [x23, x8]
  40994c:	cbnz	w9, 409934 <wcrtomb@plt+0x70c4>
  409950:	add	x8, x24, x8
  409954:	ldrb	w8, [x8, #3]
  409958:	cmp	w8, #0xfe
  40995c:	b.ne	4099ac <wcrtomb@plt+0x713c>  // b.any
  409960:	sub	x2, x22, x19
  409964:	add	x0, sp, #0x4
  409968:	add	x3, sp, #0x8
  40996c:	str	wzr, [sp, #4]
  409970:	bl	417eb0 <wcrtomb@plt+0x15640>
  409974:	ldr	w8, [sp, #4]
  409978:	mov	x21, x0
  40997c:	cmp	w8, #0x5f
  409980:	b.eq	409990 <wcrtomb@plt+0x7120>  // b.none
  409984:	mov	w0, w8
  409988:	bl	402710 <iswalnum@plt>
  40998c:	cbz	w0, 4099ac <wcrtomb@plt+0x713c>
  409990:	cmp	x21, #0x0
  409994:	add	x8, x21, x19
  409998:	cinc	x19, x8, eq  // eq = none
  40999c:	cmp	x22, x19
  4099a0:	b.hi	409940 <wcrtomb@plt+0x70d0>  // b.pmore
  4099a4:	b	4099ac <wcrtomb@plt+0x713c>
  4099a8:	mov	x19, xzr
  4099ac:	mov	x0, x19
  4099b0:	ldp	x20, x19, [sp, #64]
  4099b4:	ldp	x22, x21, [sp, #48]
  4099b8:	ldp	x24, x23, [sp, #32]
  4099bc:	ldp	x29, x30, [sp, #16]
  4099c0:	add	sp, sp, #0x50
  4099c4:	ret
  4099c8:	sub	sp, sp, #0x30
  4099cc:	stp	x29, x30, [sp, #16]
  4099d0:	add	x29, sp, #0x10
  4099d4:	subs	x2, x1, x0
  4099d8:	str	x19, [sp, #32]
  4099dc:	str	xzr, [x29, #24]
  4099e0:	b.eq	409a58 <wcrtomb@plt+0x71e8>  // b.none
  4099e4:	ldrb	w9, [x0]
  4099e8:	adrp	x10, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4099ec:	add	x10, x10, #0x63e
  4099f0:	mov	x8, x0
  4099f4:	ldrb	w10, [x10, x9]
  4099f8:	cbz	w10, 409a04 <wcrtomb@plt+0x7194>
  4099fc:	mov	w0, #0x1                   	// #1
  409a00:	b	409a5c <wcrtomb@plt+0x71ec>
  409a04:	adrp	x10, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  409a08:	add	x10, x10, #0x8b8
  409a0c:	add	x9, x10, x9
  409a10:	ldrb	w9, [x9, #3]
  409a14:	cmp	w9, #0xfe
  409a18:	b.ne	409a58 <wcrtomb@plt+0x71e8>  // b.any
  409a1c:	sub	x0, x29, #0x4
  409a20:	add	x3, x29, #0x18
  409a24:	mov	x1, x8
  409a28:	stur	wzr, [x29, #-4]
  409a2c:	bl	417eb0 <wcrtomb@plt+0x15640>
  409a30:	ldur	w8, [x29, #-4]
  409a34:	mov	x19, x0
  409a38:	cmp	w8, #0x5f
  409a3c:	b.eq	409a4c <wcrtomb@plt+0x71dc>  // b.none
  409a40:	mov	w0, w8
  409a44:	bl	402710 <iswalnum@plt>
  409a48:	cbz	w0, 409a58 <wcrtomb@plt+0x71e8>
  409a4c:	cmp	x19, #0x0
  409a50:	cinc	x0, x19, eq  // eq = none
  409a54:	b	409a5c <wcrtomb@plt+0x71ec>
  409a58:	mov	x0, xzr
  409a5c:	ldr	x19, [sp, #32]
  409a60:	ldp	x29, x30, [sp, #16]
  409a64:	add	sp, sp, #0x30
  409a68:	ret
  409a6c:	sub	sp, sp, #0x40
  409a70:	cmp	x0, x1
  409a74:	stp	x29, x30, [sp, #32]
  409a78:	stp	x20, x19, [sp, #48]
  409a7c:	add	x29, sp, #0x20
  409a80:	b.eq	409b64 <wcrtomb@plt+0x72f4>  // b.none
  409a84:	mov	x19, x1
  409a88:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  409a8c:	ldrb	w8, [x19, #-1]!
  409a90:	ldrb	w9, [x9, #2232]
  409a94:	cbz	w9, 409b04 <wcrtomb@plt+0x7294>
  409a98:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  409a9c:	ldrb	w9, [x9, #2234]
  409aa0:	mov	x20, x2
  409aa4:	cbz	w9, 409ac0 <wcrtomb@plt+0x7250>
  409aa8:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  409aac:	add	x9, x9, #0x8b8
  409ab0:	add	x9, x9, x8
  409ab4:	ldrb	w9, [x9, #3]
  409ab8:	cmp	w9, #0xfe
  409abc:	b.ne	409b04 <wcrtomb@plt+0x7294>  // b.any
  409ac0:	str	x0, [sp, #8]
  409ac4:	add	x0, sp, #0x8
  409ac8:	mov	x1, xzr
  409acc:	mov	x2, x19
  409ad0:	mov	x3, x20
  409ad4:	bl	40974c <wcrtomb@plt+0x6edc>
  409ad8:	sub	x1, x19, x0
  409adc:	subs	x2, x20, x1
  409ae0:	stur	xzr, [x29, #-8]
  409ae4:	b.eq	409b64 <wcrtomb@plt+0x72f4>  // b.none
  409ae8:	ldrb	w8, [x1]
  409aec:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  409af0:	add	x9, x9, #0x63e
  409af4:	ldrb	w9, [x9, x8]
  409af8:	cbz	w9, 409b14 <wcrtomb@plt+0x72a4>
  409afc:	mov	w0, #0x1                   	// #1
  409b00:	b	409b68 <wcrtomb@plt+0x72f8>
  409b04:	adrp	x9, 43c000 <_obstack_memory_used@@Base+0x23d70>
  409b08:	add	x9, x9, #0x63e
  409b0c:	ldrb	w0, [x9, x8]
  409b10:	b	409b68 <wcrtomb@plt+0x72f8>
  409b14:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  409b18:	add	x9, x9, #0x8b8
  409b1c:	add	x8, x9, x8
  409b20:	ldrb	w8, [x8, #3]
  409b24:	cmp	w8, #0xfe
  409b28:	b.ne	409b64 <wcrtomb@plt+0x72f4>  // b.any
  409b2c:	sub	x0, x29, #0xc
  409b30:	sub	x3, x29, #0x8
  409b34:	stur	wzr, [x29, #-12]
  409b38:	bl	417eb0 <wcrtomb@plt+0x15640>
  409b3c:	ldur	w8, [x29, #-12]
  409b40:	mov	x19, x0
  409b44:	cmp	w8, #0x5f
  409b48:	b.eq	409b58 <wcrtomb@plt+0x72e8>  // b.none
  409b4c:	mov	w0, w8
  409b50:	bl	402710 <iswalnum@plt>
  409b54:	cbz	w0, 409b64 <wcrtomb@plt+0x72f4>
  409b58:	cmp	x19, #0x0
  409b5c:	cinc	x0, x19, eq  // eq = none
  409b60:	b	409b68 <wcrtomb@plt+0x72f8>
  409b64:	mov	x0, xzr
  409b68:	ldp	x20, x19, [sp, #48]
  409b6c:	ldp	x29, x30, [sp, #32]
  409b70:	add	sp, sp, #0x40
  409b74:	ret
  409b78:	mov	w0, #0x1                   	// #1
  409b7c:	b	40360c <wcrtomb@plt+0xd9c>
  409b80:	stp	x29, x30, [sp, #-96]!
  409b84:	stp	x28, x27, [sp, #16]
  409b88:	stp	x26, x25, [sp, #32]
  409b8c:	stp	x24, x23, [sp, #48]
  409b90:	stp	x22, x21, [sp, #64]
  409b94:	stp	x20, x19, [sp, #80]
  409b98:	mov	x29, sp
  409b9c:	mov	x19, x3
  409ba0:	mov	x20, x2
  409ba4:	mov	x24, x1
  409ba8:	mov	x21, x0
  409bac:	bl	402270 <strlen@plt>
  409bb0:	ldr	x25, [x24]
  409bb4:	cbz	x25, 409c44 <wcrtomb@plt+0x73d4>
  409bb8:	mov	x22, x0
  409bbc:	mov	w26, wzr
  409bc0:	mov	x23, xzr
  409bc4:	add	x27, x24, #0x8
  409bc8:	mov	x28, #0xffffffffffffffff    	// #-1
  409bcc:	mov	x24, x20
  409bd0:	b	409be8 <wcrtomb@plt+0x7378>
  409bd4:	mov	x28, x23
  409bd8:	ldr	x25, [x27, x23, lsl #3]
  409bdc:	add	x23, x23, #0x1
  409be0:	add	x24, x24, x19
  409be4:	cbz	x25, 409c34 <wcrtomb@plt+0x73c4>
  409be8:	mov	x0, x25
  409bec:	mov	x1, x21
  409bf0:	mov	x2, x22
  409bf4:	bl	402420 <strncmp@plt>
  409bf8:	cbnz	w0, 409bd8 <wcrtomb@plt+0x7368>
  409bfc:	mov	x0, x25
  409c00:	bl	402270 <strlen@plt>
  409c04:	cmp	x0, x22
  409c08:	b.eq	409c48 <wcrtomb@plt+0x73d8>  // b.none
  409c0c:	cmn	x28, #0x1
  409c10:	b.eq	409bd4 <wcrtomb@plt+0x7364>  // b.none
  409c14:	cbz	x20, 409c2c <wcrtomb@plt+0x73bc>
  409c18:	madd	x0, x28, x19, x20
  409c1c:	mov	x1, x24
  409c20:	mov	x2, x19
  409c24:	bl	402490 <bcmp@plt>
  409c28:	cbz	w0, 409bd8 <wcrtomb@plt+0x7368>
  409c2c:	mov	w26, #0x1                   	// #1
  409c30:	b	409bd8 <wcrtomb@plt+0x7368>
  409c34:	tst	w26, #0x1
  409c38:	mov	x8, #0xfffffffffffffffe    	// #-2
  409c3c:	csel	x0, x8, x28, ne  // ne = any
  409c40:	b	409c4c <wcrtomb@plt+0x73dc>
  409c44:	mov	x23, #0xffffffffffffffff    	// #-1
  409c48:	mov	x0, x23
  409c4c:	ldp	x20, x19, [sp, #80]
  409c50:	ldp	x22, x21, [sp, #64]
  409c54:	ldp	x24, x23, [sp, #48]
  409c58:	ldp	x26, x25, [sp, #32]
  409c5c:	ldp	x28, x27, [sp, #16]
  409c60:	ldp	x29, x30, [sp], #96
  409c64:	ret
  409c68:	stp	x29, x30, [sp, #-48]!
  409c6c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x11d70>
  409c70:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x11d70>
  409c74:	add	x8, x8, #0x17b
  409c78:	add	x9, x9, #0x160
  409c7c:	cmn	x2, #0x1
  409c80:	stp	x20, x19, [sp, #32]
  409c84:	mov	x19, x1
  409c88:	mov	x20, x0
  409c8c:	csel	x1, x9, x8, eq  // eq = none
  409c90:	mov	w2, #0x5                   	// #5
  409c94:	mov	x0, xzr
  409c98:	str	x21, [sp, #16]
  409c9c:	mov	x29, sp
  409ca0:	bl	402740 <dcgettext@plt>
  409ca4:	mov	x21, x0
  409ca8:	mov	w1, #0x8                   	// #8
  409cac:	mov	w0, wzr
  409cb0:	mov	x2, x19
  409cb4:	bl	414744 <wcrtomb@plt+0x11ed4>
  409cb8:	mov	x19, x0
  409cbc:	mov	w0, #0x1                   	// #1
  409cc0:	mov	x1, x20
  409cc4:	bl	414c38 <wcrtomb@plt+0x123c8>
  409cc8:	mov	x2, x21
  409ccc:	mov	x3, x19
  409cd0:	ldp	x20, x19, [sp, #32]
  409cd4:	ldr	x21, [sp, #16]
  409cd8:	mov	x4, x0
  409cdc:	mov	w0, wzr
  409ce0:	mov	w1, wzr
  409ce4:	ldp	x29, x30, [sp], #48
  409ce8:	b	4022a0 <error@plt>
  409cec:	stp	x29, x30, [sp, #-96]!
  409cf0:	stp	x20, x19, [sp, #80]
  409cf4:	mov	x20, x1
  409cf8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  409cfc:	stp	x22, x21, [sp, #64]
  409d00:	mov	x19, x2
  409d04:	mov	x21, x0
  409d08:	add	x1, x1, #0x198
  409d0c:	mov	w2, #0x5                   	// #5
  409d10:	mov	x0, xzr
  409d14:	stp	x28, x27, [sp, #16]
  409d18:	stp	x26, x25, [sp, #32]
  409d1c:	stp	x24, x23, [sp, #48]
  409d20:	mov	x29, sp
  409d24:	bl	402740 <dcgettext@plt>
  409d28:	adrp	x26, 43c000 <_obstack_memory_used@@Base+0x23d70>
  409d2c:	ldr	x1, [x26, #1072]
  409d30:	bl	402750 <fputs_unlocked@plt>
  409d34:	ldr	x24, [x21]
  409d38:	cbnz	x24, 409d78 <wcrtomb@plt+0x7508>
  409d3c:	ldr	x0, [x26, #1072]
  409d40:	ldp	x8, x9, [x0, #40]
  409d44:	cmp	x8, x9
  409d48:	b.cs	409e0c <wcrtomb@plt+0x759c>  // b.hs, b.nlast
  409d4c:	add	x9, x8, #0x1
  409d50:	mov	w10, #0xa                   	// #10
  409d54:	str	x9, [x0, #40]
  409d58:	strb	w10, [x8]
  409d5c:	ldp	x20, x19, [sp, #80]
  409d60:	ldp	x22, x21, [sp, #64]
  409d64:	ldp	x24, x23, [sp, #48]
  409d68:	ldp	x26, x25, [sp, #32]
  409d6c:	ldp	x28, x27, [sp, #16]
  409d70:	ldp	x29, x30, [sp], #96
  409d74:	ret
  409d78:	add	x28, x21, #0x8
  409d7c:	adrp	x21, 42a000 <_obstack_memory_used@@Base+0x11d70>
  409d80:	mov	x27, xzr
  409d84:	mov	x23, xzr
  409d88:	mov	x22, xzr
  409d8c:	add	x21, x21, #0x1ad
  409d90:	cbnz	x22, 409d9c <wcrtomb@plt+0x752c>
  409d94:	mov	x25, xzr
  409d98:	b	409dd8 <wcrtomb@plt+0x7568>
  409d9c:	add	x1, x20, x27
  409da0:	mov	x0, x23
  409da4:	mov	x2, x19
  409da8:	bl	402490 <bcmp@plt>
  409dac:	mov	x25, x27
  409db0:	cbnz	w0, 409dd8 <wcrtomb@plt+0x7568>
  409db4:	ldr	x25, [x26, #1072]
  409db8:	mov	x0, x24
  409dbc:	bl	414c48 <wcrtomb@plt+0x123d8>
  409dc0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  409dc4:	mov	x2, x0
  409dc8:	mov	x0, x25
  409dcc:	add	x1, x1, #0x1b5
  409dd0:	bl	402820 <fprintf@plt>
  409dd4:	b	409df8 <wcrtomb@plt+0x7588>
  409dd8:	ldr	x23, [x26, #1072]
  409ddc:	mov	x0, x24
  409de0:	bl	414c48 <wcrtomb@plt+0x123d8>
  409de4:	mov	x2, x0
  409de8:	mov	x0, x23
  409dec:	mov	x1, x21
  409df0:	bl	402820 <fprintf@plt>
  409df4:	add	x23, x20, x25
  409df8:	ldr	x24, [x28, x22, lsl #3]
  409dfc:	add	x22, x22, #0x1
  409e00:	add	x27, x27, x19
  409e04:	cbz	x24, 409d3c <wcrtomb@plt+0x74cc>
  409e08:	b	409d90 <wcrtomb@plt+0x7520>
  409e0c:	ldp	x20, x19, [sp, #80]
  409e10:	ldp	x22, x21, [sp, #64]
  409e14:	ldp	x24, x23, [sp, #48]
  409e18:	ldp	x26, x25, [sp, #32]
  409e1c:	ldp	x28, x27, [sp, #16]
  409e20:	mov	w1, #0xa                   	// #10
  409e24:	ldp	x29, x30, [sp], #96
  409e28:	b	402590 <__overflow@plt>
  409e2c:	sub	sp, sp, #0x80
  409e30:	stp	x24, x23, [sp, #80]
  409e34:	mov	x23, x0
  409e38:	mov	x0, x1
  409e3c:	stp	x29, x30, [sp, #32]
  409e40:	stp	x28, x27, [sp, #48]
  409e44:	stp	x26, x25, [sp, #64]
  409e48:	stp	x22, x21, [sp, #96]
  409e4c:	stp	x20, x19, [sp, #112]
  409e50:	add	x29, sp, #0x20
  409e54:	mov	x19, x5
  409e58:	mov	x20, x4
  409e5c:	mov	x21, x3
  409e60:	mov	x22, x2
  409e64:	mov	x24, x1
  409e68:	bl	402270 <strlen@plt>
  409e6c:	ldr	x28, [x22]
  409e70:	cbz	x28, 409f08 <wcrtomb@plt+0x7698>
  409e74:	mov	x26, x0
  409e78:	stur	x23, [x29, #-8]
  409e7c:	stp	x22, x19, [sp, #8]
  409e80:	mov	w19, wzr
  409e84:	mov	x25, xzr
  409e88:	add	x23, x22, #0x8
  409e8c:	mov	x22, #0xffffffffffffffff    	// #-1
  409e90:	mov	x27, x21
  409e94:	b	409eac <wcrtomb@plt+0x763c>
  409e98:	mov	x22, x25
  409e9c:	ldr	x28, [x23, x25, lsl #3]
  409ea0:	add	x25, x25, #0x1
  409ea4:	add	x27, x27, x20
  409ea8:	cbz	x28, 409ef8 <wcrtomb@plt+0x7688>
  409eac:	mov	x0, x28
  409eb0:	mov	x1, x24
  409eb4:	mov	x2, x26
  409eb8:	bl	402420 <strncmp@plt>
  409ebc:	cbnz	w0, 409e9c <wcrtomb@plt+0x762c>
  409ec0:	mov	x0, x28
  409ec4:	bl	402270 <strlen@plt>
  409ec8:	cmp	x0, x26
  409ecc:	b.eq	409f14 <wcrtomb@plt+0x76a4>  // b.none
  409ed0:	cmn	x22, #0x1
  409ed4:	b.eq	409e98 <wcrtomb@plt+0x7628>  // b.none
  409ed8:	cbz	x21, 409ef0 <wcrtomb@plt+0x7680>
  409edc:	madd	x0, x22, x20, x21
  409ee0:	mov	x1, x27
  409ee4:	mov	x2, x20
  409ee8:	bl	402490 <bcmp@plt>
  409eec:	cbz	w0, 409e9c <wcrtomb@plt+0x762c>
  409ef0:	mov	w19, #0x1                   	// #1
  409ef4:	b	409e9c <wcrtomb@plt+0x762c>
  409ef8:	ldur	x23, [x29, #-8]
  409efc:	tbnz	w19, #0, 409f28 <wcrtomb@plt+0x76b8>
  409f00:	tbz	x22, #63, 409f94 <wcrtomb@plt+0x7724>
  409f04:	b	409f20 <wcrtomb@plt+0x76b0>
  409f08:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  409f0c:	add	x1, x1, #0x160
  409f10:	b	409f34 <wcrtomb@plt+0x76c4>
  409f14:	ldur	x23, [x29, #-8]
  409f18:	mov	x22, x25
  409f1c:	tbz	x22, #63, 409f94 <wcrtomb@plt+0x7724>
  409f20:	cmn	x22, #0x1
  409f24:	b.eq	409fb8 <wcrtomb@plt+0x7748>  // b.none
  409f28:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  409f2c:	add	x1, x1, #0x17b
  409f30:	ldp	x22, x19, [sp, #8]
  409f34:	mov	w2, #0x5                   	// #5
  409f38:	mov	x0, xzr
  409f3c:	bl	402740 <dcgettext@plt>
  409f40:	mov	x25, x0
  409f44:	mov	w1, #0x8                   	// #8
  409f48:	mov	w0, wzr
  409f4c:	mov	x2, x24
  409f50:	bl	414744 <wcrtomb@plt+0x11ed4>
  409f54:	mov	x24, x0
  409f58:	mov	w0, #0x1                   	// #1
  409f5c:	mov	x1, x23
  409f60:	bl	414c38 <wcrtomb@plt+0x123c8>
  409f64:	mov	x4, x0
  409f68:	mov	w0, wzr
  409f6c:	mov	w1, wzr
  409f70:	mov	x2, x25
  409f74:	mov	x3, x24
  409f78:	bl	4022a0 <error@plt>
  409f7c:	mov	x0, x22
  409f80:	mov	x1, x21
  409f84:	mov	x2, x20
  409f88:	bl	409cec <wcrtomb@plt+0x747c>
  409f8c:	blr	x19
  409f90:	mov	x22, #0xffffffffffffffff    	// #-1
  409f94:	mov	x0, x22
  409f98:	ldp	x20, x19, [sp, #112]
  409f9c:	ldp	x22, x21, [sp, #96]
  409fa0:	ldp	x24, x23, [sp, #80]
  409fa4:	ldp	x26, x25, [sp, #64]
  409fa8:	ldp	x28, x27, [sp, #48]
  409fac:	ldp	x29, x30, [sp, #32]
  409fb0:	add	sp, sp, #0x80
  409fb4:	ret
  409fb8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  409fbc:	add	x1, x1, #0x160
  409fc0:	b	409f30 <wcrtomb@plt+0x76c0>
  409fc4:	stp	x29, x30, [sp, #-64]!
  409fc8:	stp	x22, x21, [sp, #32]
  409fcc:	stp	x20, x19, [sp, #48]
  409fd0:	ldr	x20, [x1]
  409fd4:	str	x23, [sp, #16]
  409fd8:	mov	x29, sp
  409fdc:	cbz	x20, 40a02c <wcrtomb@plt+0x77bc>
  409fe0:	mov	x22, x2
  409fe4:	mov	x23, x1
  409fe8:	mov	x1, x2
  409fec:	mov	x2, x3
  409ff0:	mov	x19, x3
  409ff4:	mov	x21, x0
  409ff8:	bl	402490 <bcmp@plt>
  409ffc:	cbz	w0, 40a02c <wcrtomb@plt+0x77bc>
  40a000:	add	x22, x22, x19
  40a004:	add	x23, x23, #0x8
  40a008:	ldr	x20, [x23]
  40a00c:	cbz	x20, 40a02c <wcrtomb@plt+0x77bc>
  40a010:	mov	x0, x21
  40a014:	mov	x1, x22
  40a018:	mov	x2, x19
  40a01c:	bl	402490 <bcmp@plt>
  40a020:	add	x22, x22, x19
  40a024:	add	x23, x23, #0x8
  40a028:	cbnz	w0, 40a008 <wcrtomb@plt+0x7798>
  40a02c:	mov	x0, x20
  40a030:	ldp	x20, x19, [sp, #48]
  40a034:	ldp	x22, x21, [sp, #32]
  40a038:	ldr	x23, [sp, #16]
  40a03c:	ldp	x29, x30, [sp], #64
  40a040:	ret
  40a044:	sub	sp, sp, #0xd0
  40a048:	stp	x29, x30, [sp, #176]
  40a04c:	add	x29, sp, #0xb0
  40a050:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40a054:	str	x19, [sp, #192]
  40a058:	mov	x19, x0
  40a05c:	add	x8, x8, #0x740
  40a060:	mov	w9, #0x4000                	// #16384
  40a064:	sub	x0, x29, #0x18
  40a068:	mov	x1, xzr
  40a06c:	stur	wzr, [x29, #-16]
  40a070:	stur	x8, [x29, #-24]
  40a074:	stur	x9, [x29, #-8]
  40a078:	bl	402220 <sigaltstack@plt>
  40a07c:	cbnz	w0, 40a110 <wcrtomb@plt+0x78a0>
  40a080:	adrp	x8, 40a000 <wcrtomb@plt+0x7790>
  40a084:	add	x8, x8, #0x120
  40a088:	cmp	x19, #0x0
  40a08c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40a090:	csel	x8, x8, x19, eq  // eq = none
  40a094:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  40a098:	add	x1, x1, #0x1ba
  40a09c:	mov	w2, #0x5                   	// #5
  40a0a0:	mov	x0, xzr
  40a0a4:	str	x8, [x9, #1856]
  40a0a8:	bl	402740 <dcgettext@plt>
  40a0ac:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  40a0b0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40a0b4:	str	x0, [x8, #1864]
  40a0b8:	add	x1, x1, #0x1c8
  40a0bc:	mov	w2, #0x5                   	// #5
  40a0c0:	mov	x0, xzr
  40a0c4:	bl	402740 <dcgettext@plt>
  40a0c8:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  40a0cc:	str	x0, [x8, #1872]
  40a0d0:	bl	411e60 <wcrtomb@plt+0xf5f0>
  40a0d4:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  40a0d8:	mov	x9, sp
  40a0dc:	str	x0, [x8, #1880]
  40a0e0:	add	x0, x9, #0x8
  40a0e4:	bl	402410 <sigemptyset@plt>
  40a0e8:	mov	w8, #0x4                   	// #4
  40a0ec:	adrp	x9, 40a000 <wcrtomb@plt+0x7790>
  40a0f0:	movk	w8, #0xc800, lsl #16
  40a0f4:	add	x9, x9, #0x124
  40a0f8:	mov	x1, sp
  40a0fc:	mov	w0, #0xb                   	// #11
  40a100:	mov	x2, xzr
  40a104:	str	w8, [sp, #136]
  40a108:	str	x9, [sp]
  40a10c:	bl	402500 <sigaction@plt>
  40a110:	ldr	x19, [sp, #192]
  40a114:	ldp	x29, x30, [sp, #176]
  40a118:	add	sp, sp, #0xd0
  40a11c:	ret
  40a120:	ret
  40a124:	stp	x29, x30, [sp, #-16]!
  40a128:	mov	x29, sp
  40a12c:	bl	40a130 <wcrtomb@plt+0x78c0>
  40a130:	stp	x29, x30, [sp, #-32]!
  40a134:	stp	x20, x19, [sp, #16]
  40a138:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  40a13c:	ldr	x8, [x8, #1856]
  40a140:	mov	w0, wzr
  40a144:	mov	x29, sp
  40a148:	blr	x8
  40a14c:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  40a150:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  40a154:	ldr	x19, [x8, #1872]
  40a158:	ldr	x20, [x9, #1880]
  40a15c:	ldr	x0, [x9, #1880]
  40a160:	bl	402270 <strlen@plt>
  40a164:	mov	x2, x0
  40a168:	mov	w0, #0x2                   	// #2
  40a16c:	mov	x1, x20
  40a170:	bl	402540 <write@plt>
  40a174:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40a178:	add	x1, x1, #0x1d7
  40a17c:	mov	w0, #0x2                   	// #2
  40a180:	mov	w2, #0x2                   	// #2
  40a184:	bl	402540 <write@plt>
  40a188:	mov	x0, x19
  40a18c:	bl	402270 <strlen@plt>
  40a190:	mov	x2, x0
  40a194:	mov	w0, #0x2                   	// #2
  40a198:	mov	x1, x19
  40a19c:	bl	402540 <write@plt>
  40a1a0:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  40a1a4:	add	x1, x1, #0xb5c
  40a1a8:	mov	w0, #0x2                   	// #2
  40a1ac:	mov	w2, #0x1                   	// #1
  40a1b0:	bl	402540 <write@plt>
  40a1b4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40a1b8:	ldr	w0, [x8, #960]
  40a1bc:	bl	402250 <_exit@plt>
  40a1c0:	cmp	x0, x1
  40a1c4:	b.eq	40a214 <wcrtomb@plt+0x79a4>  // b.none
  40a1c8:	ldrb	w8, [x0]
  40a1cc:	ldrb	w9, [x1]
  40a1d0:	sub	w10, w8, #0x41
  40a1d4:	add	w11, w8, #0x20
  40a1d8:	sub	w12, w9, #0x41
  40a1dc:	cmp	w10, #0x1a
  40a1e0:	add	w13, w9, #0x20
  40a1e4:	csel	w8, w11, w8, cc  // cc = lo, ul, last
  40a1e8:	cmp	w12, #0x1a
  40a1ec:	csel	w9, w13, w9, cc  // cc = lo, ul, last
  40a1f0:	ands	w8, w8, #0xff
  40a1f4:	b.eq	40a21c <wcrtomb@plt+0x79ac>  // b.none
  40a1f8:	and	w9, w9, #0xff
  40a1fc:	add	x0, x0, #0x1
  40a200:	cmp	w8, w9
  40a204:	add	x1, x1, #0x1
  40a208:	b.eq	40a1c8 <wcrtomb@plt+0x7958>  // b.none
  40a20c:	sub	w0, w8, w9
  40a210:	ret
  40a214:	mov	w0, wzr
  40a218:	ret
  40a21c:	and	w9, w9, #0xff
  40a220:	sub	w0, w8, w9
  40a224:	ret
  40a228:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  40a22c:	str	x0, [x8, #1888]
  40a230:	ret
  40a234:	and	w8, w0, #0x1
  40a238:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  40a23c:	strb	w8, [x9, #1896]
  40a240:	ret
  40a244:	stp	x29, x30, [sp, #-48]!
  40a248:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40a24c:	ldr	x0, [x8, #1096]
  40a250:	str	x21, [sp, #16]
  40a254:	stp	x20, x19, [sp, #32]
  40a258:	mov	x29, sp
  40a25c:	bl	427834 <_obstack_memory_used@@Base+0xf5a4>
  40a260:	cbz	w0, 40a280 <wcrtomb@plt+0x7a10>
  40a264:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  40a268:	ldrb	w8, [x8, #1896]
  40a26c:	cbz	w8, 40a2a0 <wcrtomb@plt+0x7a30>
  40a270:	bl	4027e0 <__errno_location@plt>
  40a274:	ldr	w8, [x0]
  40a278:	cmp	w8, #0x20
  40a27c:	b.ne	40a2a0 <wcrtomb@plt+0x7a30>  // b.any
  40a280:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40a284:	ldr	x0, [x8, #1072]
  40a288:	bl	427834 <_obstack_memory_used@@Base+0xf5a4>
  40a28c:	cbnz	w0, 40a30c <wcrtomb@plt+0x7a9c>
  40a290:	ldp	x20, x19, [sp, #32]
  40a294:	ldr	x21, [sp, #16]
  40a298:	ldp	x29, x30, [sp], #48
  40a29c:	ret
  40a2a0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40a2a4:	add	x1, x1, #0x11f
  40a2a8:	mov	w2, #0x5                   	// #5
  40a2ac:	mov	x0, xzr
  40a2b0:	bl	402740 <dcgettext@plt>
  40a2b4:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  40a2b8:	ldr	x21, [x8, #1888]
  40a2bc:	mov	x19, x0
  40a2c0:	bl	4027e0 <__errno_location@plt>
  40a2c4:	ldr	w20, [x0]
  40a2c8:	cbnz	x21, 40a2e8 <wcrtomb@plt+0x7a78>
  40a2cc:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40a2d0:	add	x2, x2, #0x1b7
  40a2d4:	mov	w0, wzr
  40a2d8:	mov	w1, w20
  40a2dc:	mov	x3, x19
  40a2e0:	bl	4022a0 <error@plt>
  40a2e4:	b	40a30c <wcrtomb@plt+0x7a9c>
  40a2e8:	mov	x0, x21
  40a2ec:	bl	414958 <wcrtomb@plt+0x120e8>
  40a2f0:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40a2f4:	mov	x3, x0
  40a2f8:	add	x2, x2, #0xd6
  40a2fc:	mov	w0, wzr
  40a300:	mov	w1, w20
  40a304:	mov	x4, x19
  40a308:	bl	4022a0 <error@plt>
  40a30c:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  40a310:	ldr	w0, [x8, #960]
  40a314:	bl	402250 <_exit@plt>
  40a318:	stp	x29, x30, [sp, #-32]!
  40a31c:	ldrb	w8, [x2, #456]
  40a320:	mov	x9, #0xffffffffffffffff    	// #-1
  40a324:	str	x9, [x2, #48]
  40a328:	mov	w9, #0x1                   	// #1
  40a32c:	str	x19, [sp, #16]
  40a330:	mov	x29, sp
  40a334:	stp	x0, x1, [x2, #32]
  40a338:	strb	w9, [x2, #120]
  40a33c:	cbz	w8, 40a478 <wcrtomb@plt+0x7c08>
  40a340:	ldr	x8, [x2, #184]
  40a344:	mov	x19, x2
  40a348:	cbnz	x8, 40a35c <wcrtomb@plt+0x7aec>
  40a34c:	mov	w1, #0x10b                 	// #267
  40a350:	mov	w2, #0x3                   	// #3
  40a354:	mov	x0, x19
  40a358:	bl	40d820 <wcrtomb@plt+0xafb0>
  40a35c:	mov	x0, x19
  40a360:	bl	40a624 <wcrtomb@plt+0x7db4>
  40a364:	ldr	x8, [x19, #168]
  40a368:	stp	x0, x8, [x19, #128]
  40a36c:	mov	x0, x19
  40a370:	bl	40e9c0 <wcrtomb@plt+0xc150>
  40a374:	ldr	x8, [x19, #128]
  40a378:	cmp	x8, #0x106
  40a37c:	b.eq	40a3c4 <wcrtomb@plt+0x7b54>  // b.none
  40a380:	cmp	x8, #0x108
  40a384:	b.eq	40a46c <wcrtomb@plt+0x7bfc>  // b.none
  40a388:	tbnz	x8, #63, 40a40c <wcrtomb@plt+0x7b9c>
  40a38c:	mov	x0, x19
  40a390:	bl	40e9c0 <wcrtomb@plt+0xc150>
  40a394:	mov	w1, #0x105                 	// #261
  40a398:	mov	w2, #0x3                   	// #3
  40a39c:	mov	x0, x19
  40a3a0:	bl	40d820 <wcrtomb@plt+0xafb0>
  40a3a4:	b	40a374 <wcrtomb@plt+0x7b04>
  40a3a8:	mov	w1, #0x106                 	// #262
  40a3ac:	mov	w2, #0x3                   	// #3
  40a3b0:	mov	x0, x19
  40a3b4:	bl	40d820 <wcrtomb@plt+0xafb0>
  40a3b8:	ldr	x8, [x19, #128]
  40a3bc:	cmp	x8, #0x106
  40a3c0:	b.ne	40a40c <wcrtomb@plt+0x7b9c>  // b.any
  40a3c4:	mov	x0, x19
  40a3c8:	bl	40a624 <wcrtomb@plt+0x7db4>
  40a3cc:	str	x0, [x19, #128]
  40a3d0:	mov	x0, x19
  40a3d4:	bl	40e9c0 <wcrtomb@plt+0xc150>
  40a3d8:	ldr	x8, [x19, #128]
  40a3dc:	cmp	x8, #0x106
  40a3e0:	b.eq	40a3a8 <wcrtomb@plt+0x7b38>  // b.none
  40a3e4:	cmp	x8, #0x108
  40a3e8:	b.eq	40a3a8 <wcrtomb@plt+0x7b38>  // b.none
  40a3ec:	tbnz	x8, #63, 40a3a8 <wcrtomb@plt+0x7b38>
  40a3f0:	mov	x0, x19
  40a3f4:	bl	40e9c0 <wcrtomb@plt+0xc150>
  40a3f8:	mov	w1, #0x105                 	// #261
  40a3fc:	mov	w2, #0x3                   	// #3
  40a400:	mov	x0, x19
  40a404:	bl	40d820 <wcrtomb@plt+0xafb0>
  40a408:	b	40a3d8 <wcrtomb@plt+0x7b68>
  40a40c:	cmn	x8, #0x1
  40a410:	b.ne	40a46c <wcrtomb@plt+0x7bfc>  // b.any
  40a414:	ldr	x8, [x19, #184]
  40a418:	mov	x0, x19
  40a41c:	mvn	x1, x8
  40a420:	bl	40a490 <wcrtomb@plt+0x7c20>
  40a424:	mov	w1, #0x105                 	// #261
  40a428:	mov	w2, #0x3                   	// #3
  40a42c:	mov	x0, x19
  40a430:	bl	40d820 <wcrtomb@plt+0xafb0>
  40a434:	ldr	x8, [x19, #184]
  40a438:	cbz	x8, 40a458 <wcrtomb@plt+0x7be8>
  40a43c:	mov	w1, #0x106                 	// #262
  40a440:	mov	w2, #0x3                   	// #3
  40a444:	mov	x0, x19
  40a448:	bl	40d820 <wcrtomb@plt+0xafb0>
  40a44c:	ldr	x8, [x19, #184]
  40a450:	add	x8, x8, #0x1
  40a454:	b	40a45c <wcrtomb@plt+0x7bec>
  40a458:	mov	w8, #0x1                   	// #1
  40a45c:	str	x8, [x19, #184]
  40a460:	ldr	x19, [sp, #16]
  40a464:	ldp	x29, x30, [sp], #32
  40a468:	ret
  40a46c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40a470:	add	x1, x1, #0x5b4
  40a474:	b	40a480 <wcrtomb@plt+0x7c10>
  40a478:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40a47c:	add	x1, x1, #0x5a0
  40a480:	mov	w2, #0x5                   	// #5
  40a484:	mov	x0, xzr
  40a488:	bl	402740 <dcgettext@plt>
  40a48c:	bl	40298c <wcrtomb@plt+0x11c>
  40a490:	sub	sp, sp, #0x60
  40a494:	stp	x20, x19, [sp, #80]
  40a498:	cmp	x1, #0x113
  40a49c:	mov	x19, x0
  40a4a0:	stp	x29, x30, [sp, #16]
  40a4a4:	str	x25, [sp, #32]
  40a4a8:	stp	x24, x23, [sp, #48]
  40a4ac:	stp	x22, x21, [sp, #64]
  40a4b0:	add	x29, sp, #0x10
  40a4b4:	b.ne	40a5b0 <wcrtomb@plt+0x7d40>  // b.any
  40a4b8:	ldrb	w8, [x19, #1048]
  40a4bc:	cbz	w8, 40a5b0 <wcrtomb@plt+0x7d40>
  40a4c0:	ldr	x8, [x19, #104]
  40a4c4:	cmp	x8, #0x1
  40a4c8:	b.lt	40a5d4 <wcrtomb@plt+0x7d64>  // b.tstop
  40a4cc:	mov	x8, sp
  40a4d0:	mov	x22, xzr
  40a4d4:	mov	w21, wzr
  40a4d8:	orr	x23, x8, #0x1
  40a4dc:	b	40a4f4 <wcrtomb@plt+0x7c84>
  40a4e0:	ldr	x8, [x19, #104]
  40a4e4:	add	x22, x22, #0x1
  40a4e8:	mov	w21, #0x1                   	// #1
  40a4ec:	cmp	x22, x8
  40a4f0:	b.ge	40a5d8 <wcrtomb@plt+0x7d68>  // b.tcont
  40a4f4:	ldr	x8, [x19, #96]
  40a4f8:	mov	x0, sp
  40a4fc:	add	x2, x29, #0x18
  40a500:	ldr	w1, [x8, x22, lsl #2]
  40a504:	str	xzr, [x29, #24]
  40a508:	bl	402870 <wcrtomb@plt>
  40a50c:	cmn	x0, #0x1
  40a510:	b.eq	40a584 <wcrtomb@plt+0x7d14>  // b.none
  40a514:	ldrb	w1, [sp]
  40a518:	mov	x20, x0
  40a51c:	cmp	w20, #0x1
  40a520:	b.eq	40a58c <wcrtomb@plt+0x7d1c>  // b.none
  40a524:	mov	w2, #0x1                   	// #1
  40a528:	mov	x0, x19
  40a52c:	bl	40d820 <wcrtomb@plt+0xafb0>
  40a530:	cmp	w20, #0x2
  40a534:	b.lt	40a598 <wcrtomb@plt+0x7d28>  // b.tstop
  40a538:	sub	w8, w20, #0x1
  40a53c:	and	x9, x20, #0xffffffff
  40a540:	sub	x20, x8, #0x1
  40a544:	sub	x24, x9, #0x1
  40a548:	mov	x25, x23
  40a54c:	ldrb	w1, [x25], #1
  40a550:	cmp	x20, #0x0
  40a554:	cset	w8, eq  // eq = none
  40a558:	lsl	w2, w8, #1
  40a55c:	mov	x0, x19
  40a560:	bl	40d820 <wcrtomb@plt+0xafb0>
  40a564:	mov	w1, #0x105                 	// #261
  40a568:	mov	w2, #0x3                   	// #3
  40a56c:	mov	x0, x19
  40a570:	bl	40d820 <wcrtomb@plt+0xafb0>
  40a574:	subs	x24, x24, #0x1
  40a578:	sub	x20, x20, #0x1
  40a57c:	b.ne	40a54c <wcrtomb@plt+0x7cdc>  // b.any
  40a580:	b	40a598 <wcrtomb@plt+0x7d28>
  40a584:	mov	x1, xzr
  40a588:	strb	wzr, [sp]
  40a58c:	mov	w2, #0x3                   	// #3
  40a590:	mov	x0, x19
  40a594:	bl	40d820 <wcrtomb@plt+0xafb0>
  40a598:	tbz	w21, #0, 40a4e0 <wcrtomb@plt+0x7c70>
  40a59c:	mov	w1, #0x106                 	// #262
  40a5a0:	mov	w2, #0x3                   	// #3
  40a5a4:	mov	x0, x19
  40a5a8:	bl	40d820 <wcrtomb@plt+0xafb0>
  40a5ac:	b	40a4e0 <wcrtomb@plt+0x7c70>
  40a5b0:	mov	x0, x19
  40a5b4:	ldp	x20, x19, [sp, #80]
  40a5b8:	ldp	x22, x21, [sp, #64]
  40a5bc:	ldp	x24, x23, [sp, #48]
  40a5c0:	ldr	x25, [sp, #32]
  40a5c4:	ldp	x29, x30, [sp, #16]
  40a5c8:	mov	w2, #0x3                   	// #3
  40a5cc:	add	sp, sp, #0x60
  40a5d0:	b	40d820 <wcrtomb@plt+0xafb0>
  40a5d4:	mov	w21, wzr
  40a5d8:	ldr	x8, [x19, #80]
  40a5dc:	str	xzr, [x19, #104]
  40a5e0:	cmn	x8, #0x1
  40a5e4:	b.eq	40a608 <wcrtomb@plt+0x7d98>  // b.none
  40a5e8:	add	x1, x8, #0x114
  40a5ec:	mov	x0, x19
  40a5f0:	bl	40a490 <wcrtomb@plt+0x7c20>
  40a5f4:	cbz	w21, 40a608 <wcrtomb@plt+0x7d98>
  40a5f8:	mov	w1, #0x106                 	// #262
  40a5fc:	mov	w2, #0x3                   	// #3
  40a600:	mov	x0, x19
  40a604:	bl	40d820 <wcrtomb@plt+0xafb0>
  40a608:	ldp	x20, x19, [sp, #80]
  40a60c:	ldp	x22, x21, [sp, #64]
  40a610:	ldp	x24, x23, [sp, #48]
  40a614:	ldr	x25, [sp, #32]
  40a618:	ldp	x29, x30, [sp, #16]
  40a61c:	add	sp, sp, #0x60
  40a620:	ret
  40a624:	sub	sp, sp, #0x60
  40a628:	stp	x29, x30, [sp, #32]
  40a62c:	stp	x24, x23, [sp, #48]
  40a630:	stp	x22, x21, [sp, #64]
  40a634:	stp	x20, x19, [sp, #80]
  40a638:	ldr	x20, [x0, #40]
  40a63c:	mov	x19, x0
  40a640:	add	x29, sp, #0x20
  40a644:	cbz	x20, 40a6d4 <wcrtomb@plt+0x7e64>
  40a648:	mov	w23, wzr
  40a64c:	add	x21, x19, #0x110
  40a650:	mov	w24, #0x1                   	// #1
  40a654:	ldr	x1, [x19, #32]
  40a658:	ldrb	w8, [x1]
  40a65c:	add	x8, x19, x8, lsl #2
  40a660:	ldr	w22, [x8, #1308]
  40a664:	cmn	w22, #0x1
  40a668:	b.ne	40a6a0 <wcrtomb@plt+0x7e30>  // b.any
  40a66c:	mov	x0, sp
  40a670:	mov	x2, x20
  40a674:	mov	x3, x21
  40a678:	bl	417eb0 <wcrtomb@plt+0x15640>
  40a67c:	sub	x8, x0, #0x1
  40a680:	cmn	x8, #0x3
  40a684:	b.cs	40a69c <wcrtomb@plt+0x7e2c>  // b.hs, b.nlast
  40a688:	ldr	w8, [sp]
  40a68c:	cmp	w0, #0x1
  40a690:	str	w8, [x19, #72]
  40a694:	b.eq	40a6a4 <wcrtomb@plt+0x7e34>  // b.none
  40a698:	b	40a84c <wcrtomb@plt+0x7fdc>
  40a69c:	str	xzr, [x21]
  40a6a0:	str	w22, [x19, #72]
  40a6a4:	ldp	x12, x11, [x19, #32]
  40a6a8:	mov	x8, x12
  40a6ac:	ldrb	w22, [x8], #1
  40a6b0:	sub	x20, x11, #0x1
  40a6b4:	cmp	w22, #0x5c
  40a6b8:	stp	x8, x20, [x19, #32]
  40a6bc:	b.ne	40a6dc <wcrtomb@plt+0x7e6c>  // b.any
  40a6c0:	cbz	w24, 40a718 <wcrtomb@plt+0x7ea8>
  40a6c4:	cbz	x20, 40b090 <wcrtomb@plt+0x8820>
  40a6c8:	sub	w24, w24, #0x1
  40a6cc:	mov	w23, #0x1                   	// #1
  40a6d0:	b	40a654 <wcrtomb@plt+0x7de4>
  40a6d4:	mov	x21, #0xffffffffffffffff    	// #-1
  40a6d8:	b	40a72c <wcrtomb@plt+0x7ebc>
  40a6dc:	sub	w8, w22, #0xa
  40a6e0:	cmp	w8, #0x72
  40a6e4:	b.hi	40a71c <wcrtomb@plt+0x7eac>  // b.pmore
  40a6e8:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40a6ec:	add	x9, x9, #0x1e0
  40a6f0:	adr	x10, 40a700 <wcrtomb@plt+0x7e90>
  40a6f4:	ldrh	w13, [x9, x8, lsl #1]
  40a6f8:	add	x10, x10, x13, lsl #2
  40a6fc:	br	x10
  40a700:	tbz	w23, #0, 40a71c <wcrtomb@plt+0x7eac>
  40a704:	ldrb	w8, [x19, #449]
  40a708:	tbnz	w8, #6, 40a71c <wcrtomb@plt+0x7eac>
  40a70c:	strb	wzr, [x19, #120]
  40a710:	mov	w21, #0x112                 	// #274
  40a714:	b	40a72c <wcrtomb@plt+0x7ebc>
  40a718:	mov	w22, #0x5c                  	// #92
  40a71c:	ldrb	w8, [x19, #1048]
  40a720:	strb	wzr, [x19, #120]
  40a724:	cbz	w8, 40a74c <wcrtomb@plt+0x7edc>
  40a728:	mov	w21, #0x109                 	// #265
  40a72c:	str	x21, [x19, #48]
  40a730:	mov	x0, x21
  40a734:	ldp	x20, x19, [sp, #80]
  40a738:	ldp	x22, x21, [sp, #64]
  40a73c:	ldp	x24, x23, [sp, #48]
  40a740:	ldp	x29, x30, [sp, #32]
  40a744:	add	sp, sp, #0x60
  40a748:	ret
  40a74c:	ldrb	w8, [x19, #457]
  40a750:	cbz	w8, 40a7e4 <wcrtomb@plt+0x7f74>
  40a754:	bl	402610 <__ctype_b_loc@plt>
  40a758:	ldr	x8, [x0]
  40a75c:	sxtw	x21, w22
  40a760:	ldrh	w8, [x8, w22, sxtw #1]
  40a764:	tbz	w8, #10, 40a72c <wcrtomb@plt+0x7ebc>
  40a768:	movi	v0.2d, #0x0
  40a76c:	stp	q0, q0, [sp]
  40a770:	bl	4024d0 <__ctype_toupper_loc@plt>
  40a774:	ldr	x8, [x0]
  40a778:	mov	x20, xzr
  40a77c:	mov	w22, #0x1                   	// #1
  40a780:	mov	x23, sp
  40a784:	ldr	w21, [x8, x21, lsl #2]
  40a788:	b	40a7b0 <wcrtomb@plt+0x7f40>
  40a78c:	ubfx	x8, x20, #6, #26
  40a790:	lsl	x8, x8, #3
  40a794:	ldr	x9, [x23, x8]
  40a798:	lsl	x10, x22, x20
  40a79c:	orr	x9, x9, x10
  40a7a0:	str	x9, [x23, x8]
  40a7a4:	add	x20, x20, #0x1
  40a7a8:	cmp	x20, #0x100
  40a7ac:	b.eq	40a7ec <wcrtomb@plt+0x7f7c>  // b.none
  40a7b0:	add	w8, w20, #0x80
  40a7b4:	cmp	w8, #0x180
  40a7b8:	b.cs	40a7d4 <wcrtomb@plt+0x7f64>  // b.hs, b.nlast
  40a7bc:	bl	4024d0 <__ctype_toupper_loc@plt>
  40a7c0:	ldr	x8, [x0]
  40a7c4:	ldr	w8, [x8, x20, lsl #2]
  40a7c8:	cmp	w8, w21
  40a7cc:	b.ne	40a7a4 <wcrtomb@plt+0x7f34>  // b.any
  40a7d0:	b	40a78c <wcrtomb@plt+0x7f1c>
  40a7d4:	mov	w8, w20
  40a7d8:	cmp	w8, w21
  40a7dc:	b.ne	40a7a4 <wcrtomb@plt+0x7f34>  // b.any
  40a7e0:	b	40a78c <wcrtomb@plt+0x7f1c>
  40a7e4:	sxtw	x21, w22
  40a7e8:	b	40a72c <wcrtomb@plt+0x7ebc>
  40a7ec:	ldr	x8, [x19, #8]
  40a7f0:	cmp	x8, #0x0
  40a7f4:	b.le	40ae08 <wcrtomb@plt+0x8598>
  40a7f8:	ldr	x0, [x19]
  40a7fc:	ldp	x9, x10, [sp]
  40a800:	ldp	x11, x12, [sp, #16]
  40a804:	mov	x20, xzr
  40a808:	add	x13, x0, #0x10
  40a80c:	ldp	x14, x15, [x13, #-16]
  40a810:	ldp	x16, x17, [x13]
  40a814:	eor	x14, x14, x9
  40a818:	eor	x15, x15, x10
  40a81c:	eor	x16, x16, x11
  40a820:	orr	x14, x15, x14
  40a824:	orr	x14, x14, x16
  40a828:	eor	x15, x17, x12
  40a82c:	orr	x14, x14, x15
  40a830:	cbz	x14, 40ae4c <wcrtomb@plt+0x85dc>
  40a834:	add	x20, x20, #0x1
  40a838:	cmp	x8, x20
  40a83c:	add	x13, x13, #0x20
  40a840:	b.ne	40a80c <wcrtomb@plt+0x7f9c>  // b.any
  40a844:	mov	x20, x8
  40a848:	b	40ae10 <wcrtomb@plt+0x85a0>
  40a84c:	ldp	x8, x9, [x19, #32]
  40a850:	sxtw	x10, w0
  40a854:	mov	w22, #0xffffffff            	// #-1
  40a858:	add	x8, x8, x10
  40a85c:	sub	x9, x9, x10
  40a860:	stp	x8, x9, [x19, #32]
  40a864:	b	40a71c <wcrtomb@plt+0x7eac>
  40a868:	tbz	w23, #0, 40a71c <wcrtomb@plt+0x7eac>
  40a86c:	ldrb	w8, [x19, #450]
  40a870:	tbnz	w8, #3, 40a71c <wcrtomb@plt+0x7eac>
  40a874:	ldrb	w8, [x19, #1048]
  40a878:	cbz	w8, 40ac78 <wcrtomb@plt+0x8408>
  40a87c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40a880:	add	x23, x12, #0x1
  40a884:	add	x8, x8, #0x67d
  40a888:	cmp	w22, #0x77
  40a88c:	mov	w9, #0xb                   	// #11
  40a890:	b	40a8bc <wcrtomb@plt+0x804c>
  40a894:	tbz	w23, #0, 40a71c <wcrtomb@plt+0x7eac>
  40a898:	ldrb	w8, [x19, #450]
  40a89c:	tbnz	w8, #3, 40a71c <wcrtomb@plt+0x7eac>
  40a8a0:	ldrb	w8, [x19, #1048]
  40a8a4:	cbz	w8, 40ad40 <wcrtomb@plt+0x84d0>
  40a8a8:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40a8ac:	add	x23, x12, #0x1
  40a8b0:	add	x8, x8, #0x671
  40a8b4:	cmp	w22, #0x73
  40a8b8:	mov	w9, #0xa                   	// #10
  40a8bc:	cinc	x8, x8, eq  // eq = none
  40a8c0:	cinc	x9, x9, ne  // ne = any
  40a8c4:	mov	x0, x19
  40a8c8:	stp	x8, x9, [x19, #32]
  40a8cc:	bl	40da94 <wcrtomb@plt+0xb224>
  40a8d0:	mov	x21, x0
  40a8d4:	stp	x20, x0, [x19, #40]
  40a8d8:	str	x23, [x19, #32]
  40a8dc:	strb	wzr, [x19, #120]
  40a8e0:	b	40a730 <wcrtomb@plt+0x7ec0>
  40a8e4:	tbz	w23, #0, 40ab2c <wcrtomb@plt+0x82bc>
  40a8e8:	ldrb	w8, [x19, #450]
  40a8ec:	tbnz	w8, #3, 40ab2c <wcrtomb@plt+0x82bc>
  40a8f0:	mov	w21, #0x110                 	// #272
  40a8f4:	b	40a72c <wcrtomb@plt+0x7ebc>
  40a8f8:	ldr	x8, [x19, #448]
  40a8fc:	tbz	w8, #9, 40b06c <wcrtomb@plt+0x87fc>
  40a900:	mov	w10, #0x1                   	// #1
  40a904:	and	w9, w23, #0x1
  40a908:	bic	w10, w10, w8, lsr #12
  40a90c:	cmp	w10, w9
  40a910:	b.ne	40b06c <wcrtomb@plt+0x87fc>  // b.any
  40a914:	tbnz	w8, #4, 40a920 <wcrtomb@plt+0x80b0>
  40a918:	ldrb	w9, [x19, #120]
  40a91c:	cbnz	w9, 40b06c <wcrtomb@plt+0x87fc>
  40a920:	add	x9, x12, x11
  40a924:	movi	v0.2d, #0xffffffffffffffff
  40a928:	str	d0, [x19, #64]
  40a92c:	cbz	x20, 40af84 <wcrtomb@plt+0x8714>
  40a930:	mov	x13, xzr
  40a934:	mov	w10, #0xffffffff            	// #-1
  40a938:	mov	w14, #0xa                   	// #10
  40a93c:	mov	w15, #0x8030                	// #32816
  40a940:	mov	w16, #0x8000                	// #32768
  40a944:	b	40a968 <wcrtomb@plt+0x80f8>
  40a948:	madd	w10, w10, w14, w18
  40a94c:	sub	w17, w10, #0x30
  40a950:	cmp	w10, w15
  40a954:	csel	w10, w16, w17, gt
  40a958:	add	x13, x13, #0x1
  40a95c:	cmp	x20, x13
  40a960:	str	w10, [x19, #64]
  40a964:	b.eq	40b014 <wcrtomb@plt+0x87a4>  // b.none
  40a968:	add	x17, x12, x13
  40a96c:	ldrb	w18, [x17, #1]
  40a970:	sub	w0, w18, #0x30
  40a974:	cmp	w0, #0x9
  40a978:	b.hi	40af94 <wcrtomb@plt+0x8724>  // b.pmore
  40a97c:	tbz	w10, #31, 40a948 <wcrtomb@plt+0x80d8>
  40a980:	mov	w10, w0
  40a984:	b	40a958 <wcrtomb@plt+0x80e8>
  40a988:	tbz	w23, #0, 40ab54 <wcrtomb@plt+0x82e4>
  40a98c:	mov	w22, #0x5b                  	// #91
  40a990:	b	40a71c <wcrtomb@plt+0x7eac>
  40a994:	ldr	x8, [x19, #448]
  40a998:	tbnz	w8, #10, 40ab34 <wcrtomb@plt+0x82c4>
  40a99c:	mov	w9, #0x1                   	// #1
  40a9a0:	and	w10, w23, #0x1
  40a9a4:	bic	w8, w9, w8, lsr #15
  40a9a8:	cmp	w8, w10
  40a9ac:	b.ne	40ab34 <wcrtomb@plt+0x82c4>  // b.any
  40a9b0:	strb	w9, [x19, #120]
  40a9b4:	mov	w21, #0x106                 	// #262
  40a9b8:	b	40a72c <wcrtomb@plt+0x7ebc>
  40a9bc:	tbz	w23, #0, 40ab3c <wcrtomb@plt+0x82cc>
  40a9c0:	ldrb	w8, [x19, #450]
  40a9c4:	tbnz	w8, #3, 40ab3c <wcrtomb@plt+0x82cc>
  40a9c8:	mov	w21, #0x10f                 	// #271
  40a9cc:	b	40a72c <wcrtomb@plt+0x7ebc>
  40a9d0:	ldr	x8, [x19, #448]
  40a9d4:	tbnz	w8, #10, 40a9f0 <wcrtomb@plt+0x8180>
  40a9d8:	ubfx	x9, x8, #1, #1
  40a9dc:	eor	w9, w23, w9
  40a9e0:	tbnz	w9, #0, 40a9f0 <wcrtomb@plt+0x8180>
  40a9e4:	tbnz	w8, #4, 40ae54 <wcrtomb@plt+0x85e4>
  40a9e8:	ldrb	w8, [x19, #120]
  40a9ec:	cbz	w8, 40ae54 <wcrtomb@plt+0x85e4>
  40a9f0:	mov	w22, #0x2b                  	// #43
  40a9f4:	b	40a71c <wcrtomb@plt+0x7eac>
  40a9f8:	tbz	w23, #0, 40ab6c <wcrtomb@plt+0x82fc>
  40a9fc:	mov	w22, #0x2e                  	// #46
  40aa00:	b	40a71c <wcrtomb@plt+0x7eac>
  40aa04:	ldr	x8, [x19, #448]
  40aa08:	mov	w10, #0x1                   	// #1
  40aa0c:	and	w9, w23, #0x1
  40aa10:	bic	w10, w10, w8, lsr #13
  40aa14:	cmp	w10, w9
  40aa18:	b.ne	40aa28 <wcrtomb@plt+0x81b8>  // b.any
  40aa1c:	ldr	x9, [x19, #56]
  40aa20:	tbz	w8, #17, 40ac64 <wcrtomb@plt+0x83f4>
  40aa24:	cbnz	x9, 40ac64 <wcrtomb@plt+0x83f4>
  40aa28:	mov	w22, #0x29                  	// #41
  40aa2c:	b	40a71c <wcrtomb@plt+0x7eac>
  40aa30:	ldr	w9, [x19, #448]
  40aa34:	mov	w8, #0x1                   	// #1
  40aa38:	and	w10, w23, #0x1
  40aa3c:	bic	w9, w8, w9, lsr #13
  40aa40:	cmp	w9, w10
  40aa44:	b.ne	40ab94 <wcrtomb@plt+0x8324>  // b.any
  40aa48:	ldr	x9, [x19, #56]
  40aa4c:	strb	w8, [x19, #120]
  40aa50:	mov	w21, #0x107                 	// #263
  40aa54:	add	x8, x9, #0x1
  40aa58:	str	x8, [x19, #56]
  40aa5c:	b	40a72c <wcrtomb@plt+0x7ebc>
  40aa60:	tbnz	w23, #0, 40aa74 <wcrtomb@plt+0x8204>
  40aa64:	ldrb	w8, [x19, #448]
  40aa68:	tbnz	w8, #4, 40ac5c <wcrtomb@plt+0x83ec>
  40aa6c:	ldrb	w8, [x19, #120]
  40aa70:	cbz	w8, 40ac5c <wcrtomb@plt+0x83ec>
  40aa74:	mov	w22, #0x2a                  	// #42
  40aa78:	b	40a71c <wcrtomb@plt+0x7eac>
  40aa7c:	tbz	w23, #0, 40aa88 <wcrtomb@plt+0x8218>
  40aa80:	ldrb	w8, [x19, #450]
  40aa84:	tbz	w8, #3, 40ac1c <wcrtomb@plt+0x83ac>
  40aa88:	mov	w22, #0x27                  	// #39
  40aa8c:	b	40a71c <wcrtomb@plt+0x7eac>
  40aa90:	tbz	w23, #0, 40ab44 <wcrtomb@plt+0x82d4>
  40aa94:	ldrb	w8, [x19, #450]
  40aa98:	tbnz	w8, #3, 40ab44 <wcrtomb@plt+0x82d4>
  40aa9c:	mov	w21, #0x111                 	// #273
  40aaa0:	b	40a72c <wcrtomb@plt+0x7ebc>
  40aaa4:	tbz	w23, #0, 40ab9c <wcrtomb@plt+0x832c>
  40aaa8:	mov	w22, #0x24                  	// #36
  40aaac:	b	40a71c <wcrtomb@plt+0x7eac>
  40aab0:	ldr	x8, [x19, #448]
  40aab4:	and	x8, x8, #0xc00
  40aab8:	cmp	x8, #0x800
  40aabc:	cset	w8, ne  // ne = any
  40aac0:	orr	w8, w23, w8
  40aac4:	tbz	w8, #0, 40ac24 <wcrtomb@plt+0x83b4>
  40aac8:	mov	w22, #0xa                   	// #10
  40aacc:	b	40a71c <wcrtomb@plt+0x7eac>
  40aad0:	ldr	x8, [x19, #448]
  40aad4:	tbnz	w8, #10, 40aaf0 <wcrtomb@plt+0x8280>
  40aad8:	ubfx	x9, x8, #1, #1
  40aadc:	eor	w9, w23, w9
  40aae0:	tbnz	w9, #0, 40aaf0 <wcrtomb@plt+0x8280>
  40aae4:	tbnz	w8, #4, 40ae5c <wcrtomb@plt+0x85ec>
  40aae8:	ldrb	w8, [x19, #120]
  40aaec:	cbz	w8, 40ae5c <wcrtomb@plt+0x85ec>
  40aaf0:	mov	w22, #0x3f                  	// #63
  40aaf4:	b	40a71c <wcrtomb@plt+0x7eac>
  40aaf8:	tbz	w23, #0, 40ab4c <wcrtomb@plt+0x82dc>
  40aafc:	ldrb	w8, [x19, #450]
  40ab00:	tbnz	w8, #3, 40ab4c <wcrtomb@plt+0x82dc>
  40ab04:	mov	w21, #0x10e                 	// #270
  40ab08:	b	40a72c <wcrtomb@plt+0x7ebc>
  40ab0c:	tbz	w23, #0, 40ac34 <wcrtomb@plt+0x83c4>
  40ab10:	mov	w22, #0x5e                  	// #94
  40ab14:	b	40a71c <wcrtomb@plt+0x7eac>
  40ab18:	tbz	w23, #0, 40ab24 <wcrtomb@plt+0x82b4>
  40ab1c:	ldrb	w8, [x19, #450]
  40ab20:	tbz	w8, #3, 40ac54 <wcrtomb@plt+0x83e4>
  40ab24:	mov	w22, #0x60                  	// #96
  40ab28:	b	40a71c <wcrtomb@plt+0x7eac>
  40ab2c:	mov	w22, #0x62                  	// #98
  40ab30:	b	40a71c <wcrtomb@plt+0x7eac>
  40ab34:	mov	w22, #0x7c                  	// #124
  40ab38:	b	40a71c <wcrtomb@plt+0x7eac>
  40ab3c:	mov	w22, #0x3e                  	// #62
  40ab40:	b	40a71c <wcrtomb@plt+0x7eac>
  40ab44:	mov	w22, #0x42                  	// #66
  40ab48:	b	40a71c <wcrtomb@plt+0x7eac>
  40ab4c:	mov	w22, #0x3c                  	// #60
  40ab50:	b	40a71c <wcrtomb@plt+0x7eac>
  40ab54:	mov	x0, x19
  40ab58:	strb	wzr, [x19, #120]
  40ab5c:	bl	40da94 <wcrtomb@plt+0xb224>
  40ab60:	mov	x21, x0
  40ab64:	str	x0, [x19, #48]
  40ab68:	b	40a730 <wcrtomb@plt+0x7ec0>
  40ab6c:	ldr	x20, [x19, #24]
  40ab70:	tbz	x20, #63, 40af68 <wcrtomb@plt+0x86f8>
  40ab74:	movi	v0.2d, #0xffffffffffffffff
  40ab78:	stp	q0, q0, [sp]
  40ab7c:	ldr	x8, [x19, #448]
  40ab80:	tbnz	w8, #6, 40ae64 <wcrtomb@plt+0x85f4>
  40ab84:	mov	x9, #0xfffffffffffffbff    	// #-1025
  40ab88:	str	x9, [sp]
  40ab8c:	mov	x9, #0xfffffffffffffbfe    	// #-1026
  40ab90:	b	40ae68 <wcrtomb@plt+0x85f8>
  40ab94:	mov	w22, #0x28                  	// #40
  40ab98:	b	40a71c <wcrtomb@plt+0x7eac>
  40ab9c:	cbz	x20, 40ac1c <wcrtomb@plt+0x83ac>
  40aba0:	ldr	x8, [x19, #448]
  40aba4:	tbnz	w8, #3, 40ac1c <wcrtomb@plt+0x83ac>
  40aba8:	mov	w10, #0x1                   	// #1
  40abac:	bic	w13, w10, w8, lsr #13
  40abb0:	cmp	x20, x13
  40abb4:	add	x9, x12, #0x1
  40abb8:	b.le	40abd8 <wcrtomb@plt+0x8368>
  40abbc:	ldrb	w12, [x9]
  40abc0:	cmp	w12, #0x5c
  40abc4:	cset	w12, eq  // eq = none
  40abc8:	and	x12, x13, x12
  40abcc:	ldrb	w12, [x9, x12]
  40abd0:	cmp	w12, #0x29
  40abd4:	b.eq	40ac1c <wcrtomb@plt+0x83ac>  // b.none
  40abd8:	bic	w10, w10, w8, lsr #15
  40abdc:	cmp	x20, x10
  40abe0:	b.le	40ac00 <wcrtomb@plt+0x8390>
  40abe4:	ldrb	w12, [x9]
  40abe8:	cmp	w12, #0x5c
  40abec:	cset	w12, eq  // eq = none
  40abf0:	and	x10, x10, x12
  40abf4:	ldrb	w10, [x9, x10]
  40abf8:	cmp	w10, #0x7c
  40abfc:	b.eq	40ac1c <wcrtomb@plt+0x83ac>  // b.none
  40ac00:	cmp	x11, #0x2
  40ac04:	mov	w22, #0x24                  	// #36
  40ac08:	b.lt	40a71c <wcrtomb@plt+0x7eac>  // b.tstop
  40ac0c:	tbz	w8, #11, 40a71c <wcrtomb@plt+0x7eac>
  40ac10:	ldrb	w8, [x9]
  40ac14:	cmp	w8, #0xa
  40ac18:	b.ne	40aaa8 <wcrtomb@plt+0x8238>  // b.any
  40ac1c:	mov	w21, #0x10d                 	// #269
  40ac20:	b	40a72c <wcrtomb@plt+0x7ebc>
  40ac24:	mov	w8, #0x1                   	// #1
  40ac28:	mov	w21, #0x106                 	// #262
  40ac2c:	strb	w8, [x19, #120]
  40ac30:	b	40a72c <wcrtomb@plt+0x7ebc>
  40ac34:	ldrb	w8, [x19, #448]
  40ac38:	tbnz	w8, #3, 40ac54 <wcrtomb@plt+0x83e4>
  40ac3c:	ldr	x8, [x19, #48]
  40ac40:	sub	x9, x8, #0x106
  40ac44:	cmp	x9, #0x2
  40ac48:	b.cc	40ac54 <wcrtomb@plt+0x83e4>  // b.lo, b.ul, b.last
  40ac4c:	cmn	x8, #0x1
  40ac50:	b.ne	40ab10 <wcrtomb@plt+0x82a0>  // b.any
  40ac54:	mov	w21, #0x10c                 	// #268
  40ac58:	b	40a72c <wcrtomb@plt+0x7ebc>
  40ac5c:	mov	w21, #0x102                 	// #258
  40ac60:	b	40a72c <wcrtomb@plt+0x7ebc>
  40ac64:	sub	x8, x9, #0x1
  40ac68:	strb	wzr, [x19, #120]
  40ac6c:	mov	w21, #0x108                 	// #264
  40ac70:	str	x8, [x19, #56]
  40ac74:	b	40a72c <wcrtomb@plt+0x7ebc>
  40ac78:	mov	x8, xzr
  40ac7c:	movi	v0.2d, #0x0
  40ac80:	add	x9, x19, #0x1cc
  40ac84:	mov	w10, #0x1                   	// #1
  40ac88:	mov	x11, sp
  40ac8c:	stp	q0, q0, [sp]
  40ac90:	b	40aca0 <wcrtomb@plt+0x8430>
  40ac94:	add	x8, x8, #0x1
  40ac98:	cmp	x8, #0x100
  40ac9c:	b.eq	40acc8 <wcrtomb@plt+0x8458>  // b.none
  40aca0:	ldrb	w12, [x9, x8]
  40aca4:	cmp	w12, #0x2
  40aca8:	b.ne	40ac94 <wcrtomb@plt+0x8424>  // b.any
  40acac:	ubfx	x12, x8, #6, #26
  40acb0:	lsl	x12, x12, #3
  40acb4:	ldr	x13, [x11, x12]
  40acb8:	lsl	x14, x10, x8
  40acbc:	orr	x13, x13, x14
  40acc0:	str	x13, [x11, x12]
  40acc4:	b	40ac94 <wcrtomb@plt+0x8424>
  40acc8:	cmp	w22, #0x57
  40accc:	b.ne	40ace0 <wcrtomb@plt+0x8470>  // b.any
  40acd0:	ldp	q0, q1, [sp]
  40acd4:	mvn	v0.16b, v0.16b
  40acd8:	mvn	v1.16b, v1.16b
  40acdc:	stp	q0, q1, [sp]
  40ace0:	ldr	x8, [x19, #8]
  40ace4:	strb	wzr, [x19, #120]
  40ace8:	cmp	x8, #0x0
  40acec:	b.le	40ae08 <wcrtomb@plt+0x8598>
  40acf0:	ldr	x0, [x19]
  40acf4:	ldp	x9, x10, [sp]
  40acf8:	ldp	x11, x12, [sp, #16]
  40acfc:	mov	x20, xzr
  40ad00:	add	x13, x0, #0x10
  40ad04:	ldp	x14, x15, [x13, #-16]
  40ad08:	ldp	x16, x17, [x13]
  40ad0c:	eor	x14, x14, x9
  40ad10:	eor	x15, x15, x10
  40ad14:	eor	x16, x16, x11
  40ad18:	orr	x14, x15, x14
  40ad1c:	orr	x14, x14, x16
  40ad20:	eor	x15, x17, x12
  40ad24:	orr	x14, x14, x15
  40ad28:	cbz	x14, 40ae4c <wcrtomb@plt+0x85dc>
  40ad2c:	add	x20, x20, #0x1
  40ad30:	cmp	x8, x20
  40ad34:	add	x13, x13, #0x20
  40ad38:	b.ne	40ad04 <wcrtomb@plt+0x8494>  // b.any
  40ad3c:	b	40a844 <wcrtomb@plt+0x7fd4>
  40ad40:	movi	v0.2d, #0x0
  40ad44:	stp	q0, q0, [sp]
  40ad48:	bl	402610 <__ctype_b_loc@plt>
  40ad4c:	ldr	x9, [x0]
  40ad50:	mov	x8, xzr
  40ad54:	mov	w10, #0x1                   	// #1
  40ad58:	mov	x11, sp
  40ad5c:	b	40ad6c <wcrtomb@plt+0x84fc>
  40ad60:	add	x8, x8, #0x1
  40ad64:	cmp	x8, #0x100
  40ad68:	b.eq	40ad90 <wcrtomb@plt+0x8520>  // b.none
  40ad6c:	ldrh	w12, [x9, x8, lsl #1]
  40ad70:	tbz	w12, #13, 40ad60 <wcrtomb@plt+0x84f0>
  40ad74:	ubfx	x12, x8, #6, #26
  40ad78:	lsl	x12, x12, #3
  40ad7c:	ldr	x13, [x11, x12]
  40ad80:	lsl	x14, x10, x8
  40ad84:	orr	x13, x13, x14
  40ad88:	str	x13, [x11, x12]
  40ad8c:	b	40ad60 <wcrtomb@plt+0x84f0>
  40ad90:	cmp	w22, #0x53
  40ad94:	b.ne	40ada8 <wcrtomb@plt+0x8538>  // b.any
  40ad98:	ldp	q0, q1, [sp]
  40ad9c:	mvn	v0.16b, v0.16b
  40ada0:	mvn	v1.16b, v1.16b
  40ada4:	stp	q0, q1, [sp]
  40ada8:	ldr	x8, [x19, #8]
  40adac:	strb	wzr, [x19, #120]
  40adb0:	cmp	x8, #0x0
  40adb4:	b.le	40ae08 <wcrtomb@plt+0x8598>
  40adb8:	ldr	x0, [x19]
  40adbc:	ldp	x9, x10, [sp]
  40adc0:	ldp	x11, x12, [sp, #16]
  40adc4:	mov	x20, xzr
  40adc8:	add	x13, x0, #0x10
  40adcc:	ldp	x14, x15, [x13, #-16]
  40add0:	ldp	x16, x17, [x13]
  40add4:	eor	x14, x14, x9
  40add8:	eor	x15, x15, x10
  40addc:	eor	x16, x16, x11
  40ade0:	orr	x14, x15, x14
  40ade4:	orr	x14, x14, x16
  40ade8:	eor	x15, x17, x12
  40adec:	orr	x14, x14, x15
  40adf0:	cbz	x14, 40ae4c <wcrtomb@plt+0x85dc>
  40adf4:	add	x20, x20, #0x1
  40adf8:	cmp	x8, x20
  40adfc:	add	x13, x13, #0x20
  40ae00:	b.ne	40adcc <wcrtomb@plt+0x855c>  // b.any
  40ae04:	b	40a844 <wcrtomb@plt+0x7fd4>
  40ae08:	ldr	x0, [x19]
  40ae0c:	mov	x20, xzr
  40ae10:	mov	x1, x19
  40ae14:	ldr	x9, [x1, #16]!
  40ae18:	cmp	x9, x8
  40ae1c:	b.gt	40ae38 <wcrtomb@plt+0x85c8>
  40ae20:	mov	x3, #0xfffffffffffffeeb    	// #-277
  40ae24:	mov	w2, #0x1                   	// #1
  40ae28:	movk	x3, #0x7fff, lsl #48
  40ae2c:	mov	w4, #0x20                  	// #32
  40ae30:	bl	40d920 <wcrtomb@plt+0xb0b0>
  40ae34:	ldr	x8, [x19, #8]
  40ae38:	add	x8, x8, #0x1
  40ae3c:	stp	x0, x8, [x19]
  40ae40:	ldp	q1, q0, [sp]
  40ae44:	add	x8, x0, x20, lsl #5
  40ae48:	stp	q1, q0, [x8]
  40ae4c:	add	x21, x20, #0x114
  40ae50:	b	40a72c <wcrtomb@plt+0x7ebc>
  40ae54:	mov	w21, #0x103                 	// #259
  40ae58:	b	40a72c <wcrtomb@plt+0x7ebc>
  40ae5c:	mov	w21, #0x101                 	// #257
  40ae60:	b	40a72c <wcrtomb@plt+0x7ebc>
  40ae64:	mov	x9, #0xfffffffffffffffe    	// #-2
  40ae68:	tbz	w8, #7, 40ae70 <wcrtomb@plt+0x8600>
  40ae6c:	str	x9, [sp]
  40ae70:	ldrb	w8, [x19, #1048]
  40ae74:	cbz	w8, 40aec0 <wcrtomb@plt+0x8650>
  40ae78:	mov	x8, xzr
  40ae7c:	add	x9, x19, #0x51c
  40ae80:	mov	w10, #0x1                   	// #1
  40ae84:	mov	x11, sp
  40ae88:	b	40ae98 <wcrtomb@plt+0x8628>
  40ae8c:	add	x8, x8, #0x1
  40ae90:	cmp	x8, #0x100
  40ae94:	b.eq	40aec0 <wcrtomb@plt+0x8650>  // b.none
  40ae98:	ldr	w12, [x9, x8, lsl #2]
  40ae9c:	cmn	w12, #0x1
  40aea0:	b.ne	40ae8c <wcrtomb@plt+0x861c>  // b.any
  40aea4:	ubfx	x12, x8, #6, #26
  40aea8:	lsl	x12, x12, #3
  40aeac:	ldr	x13, [x11, x12]
  40aeb0:	lsl	x14, x10, x8
  40aeb4:	bic	x13, x13, x14
  40aeb8:	str	x13, [x11, x12]
  40aebc:	b	40ae8c <wcrtomb@plt+0x861c>
  40aec0:	ldr	x8, [x19, #8]
  40aec4:	cmp	x8, #0x0
  40aec8:	b.le	40af20 <wcrtomb@plt+0x86b0>
  40aecc:	ldr	x0, [x19]
  40aed0:	ldp	x9, x10, [sp]
  40aed4:	ldp	x11, x12, [sp, #16]
  40aed8:	mov	x20, xzr
  40aedc:	add	x13, x0, #0x10
  40aee0:	ldp	x14, x15, [x13, #-16]
  40aee4:	ldp	x16, x17, [x13]
  40aee8:	eor	x14, x14, x9
  40aeec:	eor	x15, x15, x10
  40aef0:	eor	x16, x16, x11
  40aef4:	orr	x14, x15, x14
  40aef8:	orr	x14, x14, x16
  40aefc:	eor	x15, x17, x12
  40af00:	orr	x14, x14, x15
  40af04:	cbz	x14, 40af64 <wcrtomb@plt+0x86f4>
  40af08:	add	x20, x20, #0x1
  40af0c:	cmp	x8, x20
  40af10:	add	x13, x13, #0x20
  40af14:	b.ne	40aee0 <wcrtomb@plt+0x8670>  // b.any
  40af18:	mov	x20, x8
  40af1c:	b	40af28 <wcrtomb@plt+0x86b8>
  40af20:	ldr	x0, [x19]
  40af24:	mov	x20, xzr
  40af28:	mov	x1, x19
  40af2c:	ldr	x9, [x1, #16]!
  40af30:	cmp	x9, x8
  40af34:	b.gt	40af50 <wcrtomb@plt+0x86e0>
  40af38:	mov	x3, #0xfffffffffffffeeb    	// #-277
  40af3c:	mov	w2, #0x1                   	// #1
  40af40:	movk	x3, #0x7fff, lsl #48
  40af44:	mov	w4, #0x20                  	// #32
  40af48:	bl	40d920 <wcrtomb@plt+0xb0b0>
  40af4c:	ldr	x8, [x19, #8]
  40af50:	add	x8, x8, #0x1
  40af54:	stp	x0, x8, [x19]
  40af58:	ldp	q1, q0, [sp]
  40af5c:	add	x8, x0, x20, lsl #5
  40af60:	stp	q1, q0, [x8]
  40af64:	str	x20, [x19, #24]
  40af68:	ldrb	w8, [x19, #1048]
  40af6c:	add	x9, x20, #0x114
  40af70:	strb	wzr, [x19, #120]
  40af74:	cmp	w8, #0x0
  40af78:	mov	w8, #0x10a                 	// #266
  40af7c:	csel	x21, x9, x8, eq  // eq = none
  40af80:	b	40a72c <wcrtomb@plt+0x7ebc>
  40af84:	add	x11, x12, #0x1
  40af88:	mov	w12, #0xffffffff            	// #-1
  40af8c:	mov	w10, #0xffffffff            	// #-1
  40af90:	b	40b02c <wcrtomb@plt+0x87bc>
  40af94:	cmp	w18, #0x2c
  40af98:	b.ne	40b020 <wcrtomb@plt+0x87b0>  // b.any
  40af9c:	tbz	w10, #31, 40afa8 <wcrtomb@plt+0x8738>
  40afa0:	mov	w10, wzr
  40afa4:	str	wzr, [x19, #64]
  40afa8:	sub	x14, x11, #0x2
  40afac:	cmp	x14, x13
  40afb0:	b.eq	40b014 <wcrtomb@plt+0x87a4>  // b.none
  40afb4:	sub	x11, x11, x13
  40afb8:	add	x16, x12, x13
  40afbc:	mov	w12, #0xffffffff            	// #-1
  40afc0:	mov	w13, #0xa                   	// #10
  40afc4:	mov	w14, #0x8030                	// #32816
  40afc8:	sub	x15, x11, #0x2
  40afcc:	add	x11, x16, #0x2
  40afd0:	mov	w16, #0x8000                	// #32768
  40afd4:	b	40aff8 <wcrtomb@plt+0x8788>
  40afd8:	madd	w12, w12, w13, w17
  40afdc:	sub	w17, w12, #0x30
  40afe0:	cmp	w12, w14
  40afe4:	csel	w12, w16, w17, gt
  40afe8:	subs	x15, x15, #0x1
  40afec:	add	x11, x11, #0x1
  40aff0:	str	w12, [x19, #68]
  40aff4:	b.eq	40b018 <wcrtomb@plt+0x87a8>  // b.none
  40aff8:	ldrb	w17, [x11]
  40affc:	sub	w18, w17, #0x30
  40b000:	cmp	w18, #0x9
  40b004:	b.hi	40b02c <wcrtomb@plt+0x87bc>  // b.pmore
  40b008:	tbz	w12, #31, 40afd8 <wcrtomb@plt+0x8768>
  40b00c:	mov	w12, w18
  40b010:	b	40afe8 <wcrtomb@plt+0x8778>
  40b014:	mov	w12, #0xffffffff            	// #-1
  40b018:	mov	x11, x9
  40b01c:	b	40b02c <wcrtomb@plt+0x87bc>
  40b020:	add	x11, x17, #0x1
  40b024:	str	w10, [x19, #68]
  40b028:	mov	w12, w10
  40b02c:	tbz	w23, #0, 40b044 <wcrtomb@plt+0x87d4>
  40b030:	cmp	x11, x9
  40b034:	b.eq	40b068 <wcrtomb@plt+0x87f8>  // b.none
  40b038:	ldrb	w13, [x11], #1
  40b03c:	cmp	w13, #0x5c
  40b040:	b.ne	40b068 <wcrtomb@plt+0x87f8>  // b.any
  40b044:	cmp	x11, x9
  40b048:	b.eq	40b068 <wcrtomb@plt+0x87f8>  // b.none
  40b04c:	ldrb	w13, [x11], #1
  40b050:	cmp	w13, #0x7d
  40b054:	b.ne	40b068 <wcrtomb@plt+0x87f8>  // b.any
  40b058:	tbnz	w10, #31, 40b068 <wcrtomb@plt+0x87f8>
  40b05c:	tbnz	w12, #31, 40b074 <wcrtomb@plt+0x8804>
  40b060:	cmp	w10, w12
  40b064:	b.le	40b074 <wcrtomb@plt+0x8804>
  40b068:	tbz	w8, #21, 40b0a8 <wcrtomb@plt+0x8838>
  40b06c:	mov	w22, #0x7b                  	// #123
  40b070:	b	40a71c <wcrtomb@plt+0x7eac>
  40b074:	cmp	w12, #0x8, lsl #12
  40b078:	b.ge	40b0b4 <wcrtomb@plt+0x8844>  // b.tcont
  40b07c:	sub	x8, x9, x11
  40b080:	strb	wzr, [x19, #120]
  40b084:	mov	w21, #0x104                 	// #260
  40b088:	stp	x11, x8, [x19, #32]
  40b08c:	b	40a72c <wcrtomb@plt+0x7ebc>
  40b090:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40b094:	add	x1, x1, #0x62a
  40b098:	mov	w2, #0x5                   	// #5
  40b09c:	mov	x0, xzr
  40b0a0:	bl	402740 <dcgettext@plt>
  40b0a4:	bl	40298c <wcrtomb@plt+0x11c>
  40b0a8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40b0ac:	add	x1, x1, #0x63e
  40b0b0:	b	40b098 <wcrtomb@plt+0x8828>
  40b0b4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40b0b8:	add	x1, x1, #0x656
  40b0bc:	b	40b098 <wcrtomb@plt+0x8828>
  40b0c0:	ldr	x6, [x0, #1040]
  40b0c4:	and	w3, w3, #0x1
  40b0c8:	br	x6
  40b0cc:	ldr	x0, [x0, #288]
  40b0d0:	ret
  40b0d4:	ldrb	w0, [x0, #192]
  40b0d8:	ret
  40b0dc:	sub	sp, sp, #0x70
  40b0e0:	stp	x24, x23, [sp, #64]
  40b0e4:	stp	x20, x19, [sp, #96]
  40b0e8:	mov	w23, w3
  40b0ec:	mov	x20, x2
  40b0f0:	stp	x29, x30, [sp, #16]
  40b0f4:	stp	x28, x27, [sp, #32]
  40b0f8:	stp	x26, x25, [sp, #48]
  40b0fc:	stp	x22, x21, [sp, #80]
  40b100:	add	x29, sp, #0x10
  40b104:	cbz	x0, 40b110 <wcrtomb@plt+0x88a0>
  40b108:	mov	x2, x20
  40b10c:	bl	40a318 <wcrtomb@plt+0x7aa8>
  40b110:	mov	w0, #0x920                 	// #2336
  40b114:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40b118:	mov	w2, #0x920                 	// #2336
  40b11c:	mov	x1, x20
  40b120:	mov	x21, x0
  40b124:	bl	402210 <memcpy@plt>
  40b128:	adrp	x8, 40d000 <wcrtomb@plt+0xa790>
  40b12c:	add	x8, x8, #0x6bc
  40b130:	strb	wzr, [x21, #1048]
  40b134:	str	xzr, [x21, #320]
  40b138:	mov	x22, x21
  40b13c:	str	x8, [x21, #1040]
  40b140:	ldr	x8, [x22, #16]!
  40b144:	add	x9, x21, #0x118
  40b148:	movi	v0.2d, #0x0
  40b14c:	stp	q0, q0, [x9]
  40b150:	lsr	x9, x8, #58
  40b154:	stp	xzr, xzr, [x21, #344]
  40b158:	str	xzr, [x21, #336]
  40b15c:	stp	q0, q0, [x21, #368]
  40b160:	cbnz	x9, 40b4e8 <wcrtomb@plt+0x8c78>
  40b164:	lsl	x0, x8, #5
  40b168:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40b16c:	str	x0, [x21]
  40b170:	ldr	x8, [x20, #8]
  40b174:	cbz	x8, 40b184 <wcrtomb@plt+0x8914>
  40b178:	ldr	x1, [x20]
  40b17c:	lsl	x2, x8, #5
  40b180:	bl	402210 <memcpy@plt>
  40b184:	ldr	x8, [x20, #152]
  40b188:	lsr	x9, x8, #59
  40b18c:	cbnz	x9, 40b4e8 <wcrtomb@plt+0x8c78>
  40b190:	lsl	x0, x8, #4
  40b194:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40b198:	str	x0, [x21, #144]
  40b19c:	ldr	x8, [x20, #152]
  40b1a0:	lsl	x9, x8, #1
  40b1a4:	cmp	x8, #0x0
  40b1a8:	str	x9, [x21, #160]
  40b1ac:	b.le	40b34c <wcrtomb@plt+0x8adc>
  40b1b0:	ldr	x9, [x20, #144]
  40b1b4:	stur	w23, [x29, #-4]
  40b1b8:	mov	x25, xzr
  40b1bc:	mov	x19, xzr
  40b1c0:	mov	w24, wzr
  40b1c4:	mov	w8, wzr
  40b1c8:	mov	w26, #0x1                   	// #1
  40b1cc:	mov	w16, #0x100                 	// #256
  40b1d0:	mov	w28, #0x301                 	// #769
  40b1d4:	mov	w23, #0x102                 	// #258
  40b1d8:	movi	v0.2d, #0xffffffffffffffff
  40b1dc:	b	40b214 <wcrtomb@plt+0x89a4>
  40b1e0:	str	x10, [x0, x19, lsl #3]
  40b1e4:	ldr	x10, [x9, x25, lsl #3]
  40b1e8:	add	x19, x19, #0x1
  40b1ec:	cmp	x10, #0x100
  40b1f0:	cset	w11, cc  // cc = lo, ul, last
  40b1f4:	cmp	x10, #0x113
  40b1f8:	cset	w10, gt
  40b1fc:	orr	w10, w11, w10
  40b200:	orr	w24, w24, w10
  40b204:	ldr	x10, [x20, #152]
  40b208:	add	x25, x25, #0x1
  40b20c:	cmp	x25, x10
  40b210:	b.ge	40b324 <wcrtomb@plt+0x8ab4>  // b.tcont
  40b214:	ldr	x10, [x9, x25, lsl #3]
  40b218:	sub	x11, x10, #0x10a
  40b21c:	cmp	x11, #0x9
  40b220:	b.hi	40b1e0 <wcrtomb@plt+0x8970>  // b.pmore
  40b224:	lsl	x12, x26, x11
  40b228:	tst	x12, #0xf0
  40b22c:	b.eq	40b248 <wcrtomb@plt+0x89d8>  // b.none
  40b230:	ldrb	w11, [x20, #1048]
  40b234:	cbz	w11, 40b1e0 <wcrtomb@plt+0x8970>
  40b238:	add	x10, x19, #0x1
  40b23c:	str	x16, [x0, x19, lsl #3]
  40b240:	mov	x19, x10
  40b244:	b	40b204 <wcrtomb@plt+0x8994>
  40b248:	lsl	x11, x26, x11
  40b24c:	tst	x11, x28
  40b250:	b.eq	40b1e0 <wcrtomb@plt+0x8970>  // b.none
  40b254:	ldr	x10, [x21, #8]
  40b258:	cmp	x10, #0x0
  40b25c:	b.le	40b2a0 <wcrtomb@plt+0x8a30>
  40b260:	ldr	x8, [x21]
  40b264:	mov	x27, xzr
  40b268:	add	x11, x8, #0x10
  40b26c:	ldp	x12, x13, [x11, #-16]
  40b270:	ldp	x14, x15, [x11]
  40b274:	and	x12, x13, x12
  40b278:	and	x12, x12, x14
  40b27c:	and	x12, x12, x15
  40b280:	cmn	x12, #0x1
  40b284:	b.eq	40b2f8 <wcrtomb@plt+0x8a88>  // b.none
  40b288:	add	x27, x27, #0x1
  40b28c:	cmp	x10, x27
  40b290:	add	x11, x11, #0x20
  40b294:	b.ne	40b26c <wcrtomb@plt+0x89fc>  // b.any
  40b298:	mov	x27, x10
  40b29c:	b	40b2a8 <wcrtomb@plt+0x8a38>
  40b2a0:	ldr	x8, [x21]
  40b2a4:	mov	x27, xzr
  40b2a8:	ldr	x9, [x22]
  40b2ac:	cmp	x9, x10
  40b2b0:	b.gt	40b2e0 <wcrtomb@plt+0x8a70>
  40b2b4:	mov	x3, #0xfffffffffffffeeb    	// #-277
  40b2b8:	mov	w2, #0x1                   	// #1
  40b2bc:	movk	x3, #0x7fff, lsl #48
  40b2c0:	mov	w4, #0x20                  	// #32
  40b2c4:	mov	x0, x8
  40b2c8:	mov	x1, x22
  40b2cc:	bl	40d920 <wcrtomb@plt+0xb0b0>
  40b2d0:	ldr	x10, [x21, #8]
  40b2d4:	movi	v0.2d, #0xffffffffffffffff
  40b2d8:	mov	w16, #0x100                 	// #256
  40b2dc:	mov	x8, x0
  40b2e0:	add	x9, x10, #0x1
  40b2e4:	add	x10, x8, x27, lsl #5
  40b2e8:	stp	x8, x9, [x21]
  40b2ec:	stp	q0, q0, [x10]
  40b2f0:	ldr	x0, [x21, #144]
  40b2f4:	ldr	x9, [x20, #144]
  40b2f8:	add	x8, x27, #0x114
  40b2fc:	add	x10, x0, x19, lsl #3
  40b300:	add	x11, x25, #0x1
  40b304:	stp	x8, x23, [x10]
  40b308:	ldr	x8, [x9, x11, lsl #3]
  40b30c:	add	x19, x19, #0x2
  40b310:	sub	x8, x8, #0x101
  40b314:	cmp	x8, #0x3
  40b318:	cinc	x25, x25, cc  // cc = lo, ul, last
  40b31c:	mov	w8, #0x1                   	// #1
  40b320:	b	40b204 <wcrtomb@plt+0x8994>
  40b324:	ldur	w23, [x29, #-4]
  40b328:	str	x19, [x21, #152]
  40b32c:	tbz	w24, #0, 40b350 <wcrtomb@plt+0x8ae0>
  40b330:	tbnz	w8, #0, 40b33c <wcrtomb@plt+0x8acc>
  40b334:	ldrb	w8, [x20, #1048]
  40b338:	cbz	w8, 40b350 <wcrtomb@plt+0x8ae0>
  40b33c:	str	x21, [x20, #288]
  40b340:	cmp	x10, #0x1
  40b344:	b.ge	40b36c <wcrtomb@plt+0x8afc>  // b.tcont
  40b348:	b	40b3dc <wcrtomb@plt+0x8b6c>
  40b34c:	str	xzr, [x21, #152]
  40b350:	mov	x0, x21
  40b354:	bl	40c5c0 <wcrtomb@plt+0x9d50>
  40b358:	mov	x0, x21
  40b35c:	bl	402620 <free@plt>
  40b360:	ldr	x10, [x20, #152]
  40b364:	cmp	x10, #0x1
  40b368:	b.lt	40b3dc <wcrtomb@plt+0x8b6c>  // b.tstop
  40b36c:	ldr	x8, [x20, #144]
  40b370:	mov	x9, x10
  40b374:	b	40b38c <wcrtomb@plt+0x8b1c>
  40b378:	ldrb	w11, [x20, #1048]
  40b37c:	cbnz	w11, 40b3a8 <wcrtomb@plt+0x8b38>
  40b380:	subs	x9, x9, #0x1
  40b384:	add	x8, x8, #0x8
  40b388:	b.eq	40b3dc <wcrtomb@plt+0x8b6c>  // b.none
  40b38c:	ldr	x11, [x8]
  40b390:	sub	x12, x11, #0x10e
  40b394:	cmp	x12, #0x4
  40b398:	b.cc	40b378 <wcrtomb@plt+0x8b08>  // b.lo, b.ul, b.last
  40b39c:	sub	x11, x11, #0x112
  40b3a0:	cmp	x11, #0x2
  40b3a4:	b.cs	40b380 <wcrtomb@plt+0x8b10>  // b.hs, b.nlast
  40b3a8:	adrp	x8, 40c000 <wcrtomb@plt+0x9790>
  40b3ac:	add	x8, x8, #0x5b0
  40b3b0:	str	x8, [x20, #1040]
  40b3b4:	ldr	x0, [x20, #288]
  40b3b8:	cbnz	x0, 40b4bc <wcrtomb@plt+0x8c4c>
  40b3bc:	ldp	x20, x19, [sp, #96]
  40b3c0:	ldp	x22, x21, [sp, #80]
  40b3c4:	ldp	x24, x23, [sp, #64]
  40b3c8:	ldp	x26, x25, [sp, #48]
  40b3cc:	ldp	x28, x27, [sp, #32]
  40b3d0:	ldp	x29, x30, [sp, #16]
  40b3d4:	add	sp, sp, #0x70
  40b3d8:	ret
  40b3dc:	ldrb	w8, [x20, #1050]
  40b3e0:	cbz	w8, 40b4a8 <wcrtomb@plt+0x8c38>
  40b3e4:	cmp	x10, #0x1
  40b3e8:	b.lt	40b428 <wcrtomb@plt+0x8bb8>  // b.tstop
  40b3ec:	ldr	x8, [x20, #144]
  40b3f0:	mov	w9, wzr
  40b3f4:	ldr	x11, [x8]
  40b3f8:	cmp	x11, #0x112
  40b3fc:	b.eq	40b414 <wcrtomb@plt+0x8ba4>  // b.none
  40b400:	cmp	x11, #0x113
  40b404:	b.eq	40b4a8 <wcrtomb@plt+0x8c38>  // b.none
  40b408:	cmp	x11, #0x10a
  40b40c:	b.ne	40b418 <wcrtomb@plt+0x8ba8>  // b.any
  40b410:	b	40b4ec <wcrtomb@plt+0x8c7c>
  40b414:	mov	w9, #0x1                   	// #1
  40b418:	subs	x10, x10, #0x1
  40b41c:	add	x8, x8, #0x8
  40b420:	b.ne	40b3f4 <wcrtomb@plt+0x8b84>  // b.any
  40b424:	tbnz	w9, #0, 40b440 <wcrtomb@plt+0x8bd0>
  40b428:	ldr	x0, [x20, #288]
  40b42c:	cbz	x0, 40b440 <wcrtomb@plt+0x8bd0>
  40b430:	bl	40c5c0 <wcrtomb@plt+0x9d50>
  40b434:	ldr	x0, [x20, #288]
  40b438:	bl	402620 <free@plt>
  40b43c:	str	xzr, [x20, #288]
  40b440:	ldr	x0, [x20, #280]
  40b444:	bl	402620 <free@plt>
  40b448:	ldr	x0, [x20, #96]
  40b44c:	bl	402620 <free@plt>
  40b450:	ldr	x0, [x20, #408]
  40b454:	bl	402620 <free@plt>
  40b458:	ldr	x8, [x20, #432]
  40b45c:	cbz	x8, 40b490 <wcrtomb@plt+0x8c20>
  40b460:	ldr	x9, [x20, #352]
  40b464:	tbnz	x9, #63, 40b488 <wcrtomb@plt+0x8c18>
  40b468:	mov	x19, #0xffffffffffffffff    	// #-1
  40b46c:	ldr	x0, [x8, x19, lsl #3]
  40b470:	bl	402620 <free@plt>
  40b474:	ldr	x9, [x20, #352]
  40b478:	ldr	x8, [x20, #432]
  40b47c:	add	x19, x19, #0x1
  40b480:	cmp	x19, x9
  40b484:	b.lt	40b46c <wcrtomb@plt+0x8bfc>  // b.tstop
  40b488:	sub	x0, x8, #0x10
  40b48c:	bl	402620 <free@plt>
  40b490:	adrp	x8, 40d000 <wcrtomb@plt+0xa790>
  40b494:	add	x8, x8, #0x6bc
  40b498:	str	x8, [x20, #1040]
  40b49c:	mov	w8, #0x1                   	// #1
  40b4a0:	strb	wzr, [x20, #1048]
  40b4a4:	strb	w8, [x20, #192]
  40b4a8:	and	w1, w23, #0x1
  40b4ac:	mov	x0, x20
  40b4b0:	bl	40b4f0 <wcrtomb@plt+0x8c80>
  40b4b4:	ldr	x0, [x20, #288]
  40b4b8:	cbz	x0, 40b3bc <wcrtomb@plt+0x8b4c>
  40b4bc:	mov	w8, #0x1                   	// #1
  40b4c0:	strb	w8, [x20, #192]
  40b4c4:	and	w1, w23, #0x1
  40b4c8:	ldp	x20, x19, [sp, #96]
  40b4cc:	ldp	x22, x21, [sp, #80]
  40b4d0:	ldp	x24, x23, [sp, #64]
  40b4d4:	ldp	x26, x25, [sp, #48]
  40b4d8:	ldp	x28, x27, [sp, #32]
  40b4dc:	ldp	x29, x30, [sp, #16]
  40b4e0:	add	sp, sp, #0x70
  40b4e4:	b	40b4f0 <wcrtomb@plt+0x8c80>
  40b4e8:	bl	415898 <wcrtomb@plt+0x13028>
  40b4ec:	bl	402560 <abort@plt>
  40b4f0:	sub	sp, sp, #0x130
  40b4f4:	stp	x29, x30, [sp, #208]
  40b4f8:	stp	x28, x27, [sp, #224]
  40b4fc:	stp	x26, x25, [sp, #240]
  40b500:	stp	x24, x23, [sp, #256]
  40b504:	stp	x22, x21, [sp, #272]
  40b508:	stp	x20, x19, [sp, #288]
  40b50c:	ldr	x8, [x0, #176]
  40b510:	add	x29, sp, #0xd0
  40b514:	lsr	x9, x8, #58
  40b518:	cbnz	x9, 40c5ac <wcrtomb@plt+0x9d3c>
  40b51c:	mov	x22, x0
  40b520:	mov	x19, #0x5555555555555555    	// #6148914691236517205
  40b524:	lsl	x0, x8, #5
  40b528:	mov	w21, w1
  40b52c:	movk	x19, #0x555, lsl #48
  40b530:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40b534:	ldr	x8, [x22, #168]
  40b538:	str	x0, [sp, #16]
  40b53c:	cmp	x8, x19
  40b540:	b.hi	40c5ac <wcrtomb@plt+0x9d3c>  // b.pmore
  40b544:	ldr	x19, [x22, #176]
  40b548:	add	x8, x8, x8, lsl #1
  40b54c:	lsl	x0, x8, #3
  40b550:	and	w21, w21, #0x1
  40b554:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40b558:	str	x0, [sp, #8]
  40b55c:	mov	w1, #0x105                 	// #261
  40b560:	mov	w2, #0x3                   	// #3
  40b564:	mov	x0, x22
  40b568:	bl	40d820 <wcrtomb@plt+0xafb0>
  40b56c:	ldr	x20, [x22, #176]
  40b570:	strb	w21, [x22, #328]
  40b574:	lsr	x8, x20, #59
  40b578:	cbnz	x8, 40c5ac <wcrtomb@plt+0x9d3c>
  40b57c:	lsl	x0, x20, #4
  40b580:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40b584:	stp	xzr, x20, [x29, #-72]
  40b588:	stur	x0, [x29, #-80]
  40b58c:	ldr	x0, [x22, #152]
  40b590:	mov	w1, #0x18                  	// #24
  40b594:	bl	4157f0 <wcrtomb@plt+0x12f80>
  40b598:	ldr	x8, [x22, #152]
  40b59c:	str	x0, [x22, #320]
  40b5a0:	stur	x22, [x29, #-88]
  40b5a4:	cmp	x8, #0x1
  40b5a8:	b.lt	40b910 <wcrtomb@plt+0x90a0>  // b.tstop
  40b5ac:	ldp	x28, x8, [sp, #8]
  40b5b0:	mov	w9, #0x1                   	// #1
  40b5b4:	adrp	x14, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40b5b8:	mov	x20, xzr
  40b5bc:	add	x13, x8, x19, lsl #4
  40b5c0:	add	x14, x14, #0x2c6
  40b5c4:	dup	v0.2d, x9
  40b5c8:	mov	w26, #0x18                  	// #24
  40b5cc:	mov	x15, x8
  40b5d0:	str	q0, [sp, #80]
  40b5d4:	b	40b5f0 <wcrtomb@plt+0x8d80>
  40b5d8:	mov	w8, #0x1                   	// #1
  40b5dc:	sturb	w8, [x28, #-24]
  40b5e0:	ldr	x8, [x22, #152]
  40b5e4:	add	x20, x20, #0x1
  40b5e8:	cmp	x20, x8
  40b5ec:	b.ge	40b910 <wcrtomb@plt+0x90a0>  // b.tcont
  40b5f0:	ldr	x8, [x22, #144]
  40b5f4:	ldr	x8, [x8, x20, lsl #3]
  40b5f8:	sub	x9, x8, #0x100
  40b5fc:	cmp	x9, #0x6
  40b600:	b.hi	40b738 <wcrtomb@plt+0x8ec8>  // b.pmore
  40b604:	adr	x10, 40b5d8 <wcrtomb@plt+0x8d68>
  40b608:	ldrb	w11, [x14, x9]
  40b60c:	add	x10, x10, x11, lsl #2
  40b610:	br	x10
  40b614:	ldp	x10, x9, [x28, #-16]
  40b618:	sub	x11, x15, x10, lsl #4
  40b61c:	cmp	x9, #0x1
  40b620:	stp	x11, x10, [x29, #-56]
  40b624:	b.lt	40b6f0 <wcrtomb@plt+0x8e80>  // b.tstop
  40b628:	mov	x19, xzr
  40b62c:	sub	x24, x13, x9, lsl #4
  40b630:	str	x15, [sp, #104]
  40b634:	stur	x13, [x29, #-96]
  40b638:	b	40b650 <wcrtomb@plt+0x8de0>
  40b63c:	ldur	x8, [x28, #-8]
  40b640:	add	x19, x19, #0x1
  40b644:	add	x24, x24, #0x10
  40b648:	cmp	x19, x8
  40b64c:	b.ge	40b6d8 <wcrtomb@plt+0x8e68>  // b.tcont
  40b650:	ldur	x21, [x29, #-88]
  40b654:	ldr	x9, [x24]
  40b658:	sub	x0, x29, #0x38
  40b65c:	sub	x3, x29, #0x50
  40b660:	ldr	x8, [x21, #320]
  40b664:	mov	w2, #0xffffffff            	// #-1
  40b668:	madd	x1, x9, x26, x8
  40b66c:	bl	40f4bc <wcrtomb@plt+0xcc4c>
  40b670:	ldr	x21, [x21, #320]
  40b674:	ldr	x27, [x24]
  40b678:	madd	x23, x27, x26, x21
  40b67c:	mov	x22, x23
  40b680:	ldr	x8, [x22, #16]!
  40b684:	ldur	x25, [x29, #-72]
  40b688:	cmp	x8, x25
  40b68c:	b.ge	40b6b8 <wcrtomb@plt+0x8e48>  // b.tcont
  40b690:	ldr	x0, [x23]
  40b694:	bl	402620 <free@plt>
  40b698:	ldr	x8, [x22]
  40b69c:	mov	x3, #0xffffffffffffffff    	// #-1
  40b6a0:	mov	w4, #0x10                  	// #16
  40b6a4:	mov	x0, xzr
  40b6a8:	sub	x2, x25, x8
  40b6ac:	mov	x1, x22
  40b6b0:	bl	40d920 <wcrtomb@plt+0xb0b0>
  40b6b4:	str	x0, [x23]
  40b6b8:	madd	x8, x27, x26, x21
  40b6bc:	str	x25, [x8, #8]
  40b6c0:	cbz	x25, 40b63c <wcrtomb@plt+0x8dcc>
  40b6c4:	ldr	x0, [x23]
  40b6c8:	ldur	x1, [x29, #-80]
  40b6cc:	lsl	x2, x25, #4
  40b6d0:	bl	402210 <memcpy@plt>
  40b6d4:	b	40b63c <wcrtomb@plt+0x8dcc>
  40b6d8:	ldp	x13, x22, [x29, #-96]
  40b6dc:	ldr	x15, [sp, #104]
  40b6e0:	adrp	x14, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40b6e4:	add	x14, x14, #0x2c6
  40b6e8:	ldr	x8, [x22, #144]
  40b6ec:	ldr	x8, [x8, x20, lsl #3]
  40b6f0:	cmp	x8, #0x103
  40b6f4:	b.ne	40b5d8 <wcrtomb@plt+0x8d68>  // b.any
  40b6f8:	b	40b5e0 <wcrtomb@plt+0x8d70>
  40b6fc:	ldrb	w8, [x28, #-24]!
  40b700:	ldur	q0, [x28, #8]
  40b704:	ldur	q1, [x28, #-16]
  40b708:	ldurb	w9, [x28, #-24]
  40b70c:	add	v0.2d, v1.2d, v0.2d
  40b710:	orr	w8, w9, w8
  40b714:	stur	q0, [x28, #-16]
  40b718:	sturb	w8, [x28, #-24]
  40b71c:	b	40b5e0 <wcrtomb@plt+0x8d70>
  40b720:	mov	w8, #0x1                   	// #1
  40b724:	strb	w8, [x28]
  40b728:	add	x8, x28, #0x18
  40b72c:	stp	xzr, xzr, [x28, #8]
  40b730:	mov	x28, x8
  40b734:	b	40b5e0 <wcrtomb@plt+0x8d70>
  40b738:	ldr	q0, [sp, #80]
  40b73c:	cmp	x8, #0x112
  40b740:	mov	w8, #0x1ff                 	// #511
  40b744:	str	x20, [x13]
  40b748:	str	x20, [x15]
  40b74c:	str	w8, [x13, #8]
  40b750:	str	w8, [x15, #8]
  40b754:	cset	w8, eq  // eq = none
  40b758:	stur	q0, [x28, #8]
  40b75c:	add	x15, x15, #0x10
  40b760:	strb	w8, [x28], #24
  40b764:	add	x13, x13, #0x10
  40b768:	b	40b5e0 <wcrtomb@plt+0x8d70>
  40b76c:	ldur	x10, [x28, #-16]
  40b770:	ldur	x9, [x28, #-32]
  40b774:	sub	x8, x15, x10, lsl #4
  40b778:	cmp	x9, #0x1
  40b77c:	stp	x8, x10, [x29, #-56]
  40b780:	b.lt	40b850 <wcrtomb@plt+0x8fe0>  // b.tstop
  40b784:	ldur	x8, [x28, #-8]
  40b788:	mov	x19, xzr
  40b78c:	str	x15, [sp, #104]
  40b790:	stur	x13, [x29, #-96]
  40b794:	sub	x8, x13, x8, lsl #4
  40b798:	sub	x24, x8, x9, lsl #4
  40b79c:	b	40b7b4 <wcrtomb@plt+0x8f44>
  40b7a0:	ldur	x9, [x28, #-32]
  40b7a4:	add	x19, x19, #0x1
  40b7a8:	add	x24, x24, #0x10
  40b7ac:	cmp	x19, x9
  40b7b0:	b.ge	40b83c <wcrtomb@plt+0x8fcc>  // b.tcont
  40b7b4:	ldur	x21, [x29, #-88]
  40b7b8:	ldr	x9, [x24]
  40b7bc:	sub	x0, x29, #0x38
  40b7c0:	sub	x3, x29, #0x50
  40b7c4:	ldr	x8, [x21, #320]
  40b7c8:	mov	w2, #0xffffffff            	// #-1
  40b7cc:	madd	x1, x9, x26, x8
  40b7d0:	bl	40f4bc <wcrtomb@plt+0xcc4c>
  40b7d4:	ldr	x21, [x21, #320]
  40b7d8:	ldr	x27, [x24]
  40b7dc:	madd	x23, x27, x26, x21
  40b7e0:	mov	x22, x23
  40b7e4:	ldr	x8, [x22, #16]!
  40b7e8:	ldur	x25, [x29, #-72]
  40b7ec:	cmp	x8, x25
  40b7f0:	b.ge	40b81c <wcrtomb@plt+0x8fac>  // b.tcont
  40b7f4:	ldr	x0, [x23]
  40b7f8:	bl	402620 <free@plt>
  40b7fc:	ldr	x8, [x22]
  40b800:	mov	x3, #0xffffffffffffffff    	// #-1
  40b804:	mov	w4, #0x10                  	// #16
  40b808:	mov	x0, xzr
  40b80c:	sub	x2, x25, x8
  40b810:	mov	x1, x22
  40b814:	bl	40d920 <wcrtomb@plt+0xb0b0>
  40b818:	str	x0, [x23]
  40b81c:	madd	x8, x27, x26, x21
  40b820:	str	x25, [x8, #8]
  40b824:	cbz	x25, 40b7a0 <wcrtomb@plt+0x8f30>
  40b828:	ldr	x0, [x23]
  40b82c:	ldur	x1, [x29, #-80]
  40b830:	lsl	x2, x25, #4
  40b834:	bl	402210 <memcpy@plt>
  40b838:	b	40b7a0 <wcrtomb@plt+0x8f30>
  40b83c:	ldur	x10, [x28, #-16]
  40b840:	ldp	x13, x22, [x29, #-96]
  40b844:	ldr	x15, [sp, #104]
  40b848:	adrp	x14, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40b84c:	add	x14, x14, #0x2c6
  40b850:	ldurb	w8, [x28, #-48]
  40b854:	cbz	w8, 40b868 <wcrtomb@plt+0x8ff8>
  40b858:	ldur	x11, [x28, #-40]
  40b85c:	add	x10, x11, x10
  40b860:	stur	x10, [x28, #-40]
  40b864:	b	40b86c <wcrtomb@plt+0x8ffc>
  40b868:	sub	x15, x15, x10, lsl #4
  40b86c:	ldurb	w10, [x28, #-24]
  40b870:	ldur	x12, [x28, #-8]
  40b874:	cbz	w10, 40b884 <wcrtomb@plt+0x9014>
  40b878:	add	x10, x12, x9
  40b87c:	mov	w9, #0x1                   	// #1
  40b880:	b	40b8fc <wcrtomb@plt+0x908c>
  40b884:	cmp	x12, #0x1
  40b888:	neg	x11, x9
  40b88c:	b.lt	40b8f0 <wcrtomb@plt+0x9080>  // b.tstop
  40b890:	sub	x8, x13, x12, lsl #4
  40b894:	sub	x8, x8, x9, lsl #4
  40b898:	ldur	x10, [x28, #-8]
  40b89c:	ldr	q0, [x8, x9, lsl #4]
  40b8a0:	cmp	x10, #0x2
  40b8a4:	str	q0, [x8]
  40b8a8:	b.lt	40b8dc <wcrtomb@plt+0x906c>  // b.tstop
  40b8ac:	sub	x9, x11, x12
  40b8b0:	add	x9, x13, x9, lsl #4
  40b8b4:	add	x9, x9, #0x10
  40b8b8:	mov	w11, #0x1                   	// #1
  40b8bc:	ldur	x12, [x28, #-32]
  40b8c0:	ldur	x10, [x28, #-8]
  40b8c4:	add	x12, x11, x12
  40b8c8:	ldr	q0, [x8, x12, lsl #4]
  40b8cc:	add	x11, x11, #0x1
  40b8d0:	cmp	x11, x10
  40b8d4:	str	q0, [x9], #16
  40b8d8:	b.lt	40b8bc <wcrtomb@plt+0x904c>  // b.tstop
  40b8dc:	ldur	x11, [x28, #-32]
  40b8e0:	ldurb	w9, [x28, #-24]
  40b8e4:	ldurb	w8, [x28, #-48]
  40b8e8:	neg	x11, x11
  40b8ec:	b	40b8f8 <wcrtomb@plt+0x9088>
  40b8f0:	mov	w9, wzr
  40b8f4:	mov	x10, x12
  40b8f8:	add	x13, x13, x11, lsl #4
  40b8fc:	and	w8, w8, w9
  40b900:	stur	x10, [x28, #-32]
  40b904:	sturb	w8, [x28, #-48]
  40b908:	sub	x28, x28, #0x18
  40b90c:	b	40b5e0 <wcrtomb@plt+0x8d70>
  40b910:	ldr	x20, [x22, #176]
  40b914:	lsr	x8, x20, #59
  40b918:	cbnz	x8, 40c5ac <wcrtomb@plt+0x9d3c>
  40b91c:	lsl	x0, x20, #4
  40b920:	mov	x19, x22
  40b924:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40b928:	stp	xzr, x20, [x29, #-24]
  40b92c:	stur	x0, [x29, #-32]
  40b930:	ldr	x8, [x19, #152]
  40b934:	mov	x22, x0
  40b938:	cmp	x8, #0x1
  40b93c:	b.lt	40bc80 <wcrtomb@plt+0x9410>  // b.tstop
  40b940:	mov	x27, xzr
  40b944:	mov	w28, #0x18                  	// #24
  40b948:	b	40b958 <wcrtomb@plt+0x90e8>
  40b94c:	add	x27, x27, #0x1
  40b950:	cmp	x27, x8
  40b954:	b.ge	40bc80 <wcrtomb@plt+0x9410>  // b.tcont
  40b958:	ldr	x11, [x19, #320]
  40b95c:	madd	x9, x27, x28, x11
  40b960:	ldr	x10, [x9, #8]!
  40b964:	cmp	x10, #0x1
  40b968:	b.lt	40b94c <wcrtomb@plt+0x90dc>  // b.tstop
  40b96c:	ldr	x12, [x19, #144]
  40b970:	ldr	x12, [x12, x27, lsl #3]
  40b974:	cmp	x12, #0x100
  40b978:	cset	w13, lt  // lt = tstop
  40b97c:	cmp	x12, #0x112
  40b980:	cset	w14, eq  // eq = none
  40b984:	cmp	x12, #0x10a
  40b988:	orr	w13, w13, w14
  40b98c:	cset	w14, eq  // eq = none
  40b990:	cmp	x12, #0x113
  40b994:	orr	w13, w14, w13
  40b998:	cset	w14, eq  // eq = none
  40b99c:	cmp	x12, #0x114
  40b9a0:	orr	w13, w14, w13
  40b9a4:	cset	w14, lt  // lt = tstop
  40b9a8:	eor	w13, w14, w13
  40b9ac:	cmp	w13, #0x1
  40b9b0:	b.ne	40b94c <wcrtomb@plt+0x90dc>  // b.any
  40b9b4:	sub	x12, x12, #0x10c
  40b9b8:	cmp	x12, #0x5
  40b9bc:	b.hi	40b9d0 <wcrtomb@plt+0x9160>  // b.pmore
  40b9c0:	adrp	x13, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40b9c4:	add	x13, x13, #0x568
  40b9c8:	ldr	w12, [x13, x12, lsl #2]
  40b9cc:	b	40b9d4 <wcrtomb@plt+0x9164>
  40b9d0:	mov	w12, #0x1ff                 	// #511
  40b9d4:	madd	x11, x27, x28, x11
  40b9d8:	ldr	x13, [x11]
  40b9dc:	mov	x15, xzr
  40b9e0:	mov	x16, x10
  40b9e4:	stur	w12, [x29, #-96]
  40b9e8:	b	40b9f8 <wcrtomb@plt+0x9188>
  40b9ec:	add	x15, x12, #0x1
  40b9f0:	cmp	x15, x16
  40b9f4:	b.ge	40ba20 <wcrtomb@plt+0x91b0>  // b.tcont
  40b9f8:	add	x12, x16, x15
  40b9fc:	asr	x12, x12, #1
  40ba00:	lsl	x14, x12, #4
  40ba04:	ldr	x17, [x13, x14]
  40ba08:	cmp	x17, x27
  40ba0c:	b.lt	40b9ec <wcrtomb@plt+0x917c>  // b.tstop
  40ba10:	b.eq	40ba2c <wcrtomb@plt+0x91bc>  // b.none
  40ba14:	mov	x16, x12
  40ba18:	cmp	x15, x16
  40ba1c:	b.lt	40b9f8 <wcrtomb@plt+0x9188>  // b.tstop
  40ba20:	cmp	x8, #0x1
  40ba24:	b.ge	40ba8c <wcrtomb@plt+0x921c>  // b.tcont
  40ba28:	b	40b94c <wcrtomb@plt+0x90dc>
  40ba2c:	add	x8, x12, #0x1
  40ba30:	cmp	x8, x10
  40ba34:	b.ge	40ba78 <wcrtomb@plt+0x9208>  // b.tcont
  40ba38:	ldr	q0, [x13, x8, lsl #4]
  40ba3c:	add	x15, x12, #0x2
  40ba40:	cmp	x15, x10
  40ba44:	str	q0, [x13, x12, lsl #4]
  40ba48:	b.eq	40ba7c <wcrtomb@plt+0x920c>  // b.none
  40ba4c:	sub	x8, x10, #0x2
  40ba50:	ldr	x10, [x11]
  40ba54:	add	x12, x12, #0x1
  40ba58:	cmp	x8, x12
  40ba5c:	add	x10, x10, x14
  40ba60:	ldr	q0, [x10, #32]
  40ba64:	add	x14, x14, #0x10
  40ba68:	str	q0, [x10, #16]
  40ba6c:	b.ne	40ba50 <wcrtomb@plt+0x91e0>  // b.any
  40ba70:	add	x8, x12, #0x1
  40ba74:	b	40ba7c <wcrtomb@plt+0x920c>
  40ba78:	mov	x8, x12
  40ba7c:	str	x8, [x9]
  40ba80:	ldr	x8, [x19, #152]
  40ba84:	cmp	x8, #0x1
  40ba88:	b.lt	40b94c <wcrtomb@plt+0x90dc>  // b.tstop
  40ba8c:	mov	x21, xzr
  40ba90:	b	40bab8 <wcrtomb@plt+0x9248>
  40ba94:	sub	x0, x29, #0x20
  40ba98:	mov	x1, x24
  40ba9c:	mov	w2, w25
  40baa0:	mov	x3, x23
  40baa4:	bl	40f4bc <wcrtomb@plt+0xcc4c>
  40baa8:	ldr	x8, [x19, #152]
  40baac:	add	x21, x21, #0x1
  40bab0:	cmp	x21, x8
  40bab4:	b.ge	40b94c <wcrtomb@plt+0x90dc>  // b.tcont
  40bab8:	cmp	x27, x21
  40babc:	b.eq	40baa8 <wcrtomb@plt+0x9238>  // b.none
  40bac0:	ldr	x10, [x19, #320]
  40bac4:	madd	x26, x21, x28, x10
  40bac8:	ldr	x8, [x26, #8]!
  40bacc:	cmp	x8, #0x1
  40bad0:	b.lt	40baa8 <wcrtomb@plt+0x9238>  // b.tstop
  40bad4:	madd	x23, x21, x28, x10
  40bad8:	ldr	x11, [x23]
  40badc:	mov	x9, xzr
  40bae0:	madd	x24, x27, x28, x10
  40bae4:	mov	x13, x8
  40bae8:	b	40baf8 <wcrtomb@plt+0x9288>
  40baec:	add	x9, x10, #0x1
  40baf0:	cmp	x9, x13
  40baf4:	b.ge	40bb20 <wcrtomb@plt+0x92b0>  // b.tcont
  40baf8:	add	x10, x13, x9
  40bafc:	asr	x10, x10, #1
  40bb00:	lsl	x12, x10, #4
  40bb04:	ldr	x14, [x11, x12]
  40bb08:	cmp	x14, x27
  40bb0c:	b.lt	40baec <wcrtomb@plt+0x927c>  // b.tstop
  40bb10:	b.eq	40bb28 <wcrtomb@plt+0x92b8>  // b.none
  40bb14:	mov	x13, x10
  40bb18:	cmp	x9, x13
  40bb1c:	b.lt	40baf8 <wcrtomb@plt+0x9288>  // b.tstop
  40bb20:	mov	w9, wzr
  40bb24:	b	40bb88 <wcrtomb@plt+0x9318>
  40bb28:	add	x9, x11, x10, lsl #4
  40bb2c:	ldr	w9, [x9, #8]
  40bb30:	add	x13, x10, #0x1
  40bb34:	cmp	x13, x8
  40bb38:	b.ge	40bb7c <wcrtomb@plt+0x930c>  // b.tcont
  40bb3c:	ldr	q0, [x11, x13, lsl #4]
  40bb40:	add	x14, x10, #0x2
  40bb44:	cmp	x14, x8
  40bb48:	str	q0, [x11, x10, lsl #4]
  40bb4c:	b.eq	40bb80 <wcrtomb@plt+0x9310>  // b.none
  40bb50:	sub	x8, x8, #0x2
  40bb54:	ldr	x11, [x23]
  40bb58:	add	x10, x10, #0x1
  40bb5c:	cmp	x8, x10
  40bb60:	add	x11, x11, x12
  40bb64:	ldr	q0, [x11, #32]
  40bb68:	add	x12, x12, #0x10
  40bb6c:	str	q0, [x11, #16]
  40bb70:	b.ne	40bb54 <wcrtomb@plt+0x92e4>  // b.any
  40bb74:	add	x13, x10, #0x1
  40bb78:	b	40bb80 <wcrtomb@plt+0x9310>
  40bb7c:	mov	x13, x10
  40bb80:	mov	x8, x13
  40bb84:	str	x13, [x26]
  40bb88:	ldur	w10, [x29, #-96]
  40bb8c:	ands	w25, w9, w10
  40bb90:	b.eq	40baa8 <wcrtomb@plt+0x9238>  // b.none
  40bb94:	cmp	x20, x8
  40bb98:	b.ge	40bc64 <wcrtomb@plt+0x93f4>  // b.tcont
  40bb9c:	mov	x0, x22
  40bba0:	bl	402620 <free@plt>
  40bba4:	ldr	x8, [x26]
  40bba8:	adds	x9, x20, x20, asr #1
  40bbac:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40bbb0:	csel	x19, x10, x9, vs
  40bbb4:	tbnz	x19, #63, 40bbcc <wcrtomb@plt+0x935c>
  40bbb8:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
  40bbbc:	cmp	x19, x9
  40bbc0:	b.le	40bbe4 <wcrtomb@plt+0x9374>
  40bbc4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40bbc8:	b	40bbf4 <wcrtomb@plt+0x9384>
  40bbcc:	cmn	x19, #0x1
  40bbd0:	b.eq	40bbf0 <wcrtomb@plt+0x9380>  // b.none
  40bbd4:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40bbd8:	sdiv	x9, x9, x19
  40bbdc:	cmp	x9, #0x10
  40bbe0:	b.lt	40bbc4 <wcrtomb@plt+0x9354>  // b.tstop
  40bbe4:	lsl	x1, x19, #4
  40bbe8:	cmp	x1, #0x7f
  40bbec:	b.gt	40bbfc <wcrtomb@plt+0x938c>
  40bbf0:	mov	w9, #0x80                  	// #128
  40bbf4:	lsr	x19, x9, #4
  40bbf8:	and	x1, x9, #0x7ffffffffffffff0
  40bbfc:	cmp	x19, x8
  40bc00:	stur	xzr, [x29, #-16]
  40bc04:	b.ge	40bc44 <wcrtomb@plt+0x93d4>  // b.tcont
  40bc08:	sub	x8, x8, x20
  40bc0c:	adds	x19, x20, x8
  40bc10:	b.vs	40c5ac <wcrtomb@plt+0x9d3c>
  40bc14:	tbnz	x19, #63, 40bc28 <wcrtomb@plt+0x93b8>
  40bc18:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  40bc1c:	cmp	x19, x8
  40bc20:	b.le	40bc40 <wcrtomb@plt+0x93d0>
  40bc24:	b	40c5ac <wcrtomb@plt+0x9d3c>
  40bc28:	cmn	x19, #0x1
  40bc2c:	b.eq	40bc40 <wcrtomb@plt+0x93d0>  // b.none
  40bc30:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40bc34:	sdiv	x8, x8, x19
  40bc38:	cmp	x8, #0x10
  40bc3c:	b.lt	40c5ac <wcrtomb@plt+0x9d3c>  // b.tstop
  40bc40:	lsl	x1, x19, #4
  40bc44:	mov	x0, xzr
  40bc48:	bl	415654 <wcrtomb@plt+0x12de4>
  40bc4c:	stur	x19, [x29, #-16]
  40bc50:	stur	x0, [x29, #-32]
  40bc54:	ldr	x8, [x26]
  40bc58:	mov	x20, x19
  40bc5c:	ldur	x19, [x29, #-88]
  40bc60:	mov	x22, x0
  40bc64:	stur	x8, [x29, #-24]
  40bc68:	cbz	x8, 40ba94 <wcrtomb@plt+0x9224>
  40bc6c:	ldr	x1, [x23]
  40bc70:	lsl	x2, x8, #4
  40bc74:	mov	x0, x22
  40bc78:	bl	402210 <memcpy@plt>
  40bc7c:	b	40ba94 <wcrtomb@plt+0x9224>
  40bc80:	mov	x0, x22
  40bc84:	bl	402620 <free@plt>
  40bc88:	ldr	x0, [x19, #152]
  40bc8c:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40bc90:	ldr	x8, [x19, #152]
  40bc94:	mov	x22, x0
  40bc98:	cmp	x8, #0x1
  40bc9c:	b.lt	40bd34 <wcrtomb@plt+0x94c4>  // b.tstop
  40bca0:	ldr	x10, [x19, #320]
  40bca4:	mov	x9, xzr
  40bca8:	mov	w11, #0x18                  	// #24
  40bcac:	mov	w12, #0x8                   	// #8
  40bcb0:	b	40bcc0 <wcrtomb@plt+0x9450>
  40bcb4:	add	x9, x9, #0x1
  40bcb8:	cmp	x9, x8
  40bcbc:	b.eq	40bd34 <wcrtomb@plt+0x94c4>  // b.none
  40bcc0:	madd	x13, x9, x11, x10
  40bcc4:	ldr	x13, [x13, #8]
  40bcc8:	cmp	x13, #0x1
  40bccc:	b.lt	40bcb4 <wcrtomb@plt+0x9444>  // b.tstop
  40bcd0:	mul	x14, x9, x11
  40bcd4:	ldr	x14, [x10, x14]
  40bcd8:	b	40bcf4 <wcrtomb@plt+0x9484>
  40bcdc:	ldrb	w15, [x22, x9]
  40bce0:	orr	w15, w15, #0x1
  40bce4:	strb	w15, [x22, x9]
  40bce8:	subs	x13, x13, #0x1
  40bcec:	add	x14, x14, #0x10
  40bcf0:	b.eq	40bcb4 <wcrtomb@plt+0x9444>  // b.none
  40bcf4:	ldr	x15, [x14]
  40bcf8:	cmp	x15, x9
  40bcfc:	b.eq	40bcdc <wcrtomb@plt+0x946c>  // b.none
  40bd00:	ldrb	w16, [x22, x15]
  40bd04:	b.ge	40bd14 <wcrtomb@plt+0x94a4>  // b.tcont
  40bd08:	orr	w16, w16, #0x2
  40bd0c:	strb	w16, [x22, x15]
  40bd10:	b	40bce8 <wcrtomb@plt+0x9478>
  40bd14:	and	w17, w16, #0x8
  40bd18:	strb	w17, [x22, x15]
  40bd1c:	tbnz	w16, #3, 40bd28 <wcrtomb@plt+0x94b8>
  40bd20:	strb	w12, [x22, x15]
  40bd24:	b	40bce8 <wcrtomb@plt+0x9478>
  40bd28:	orr	w16, w17, #0x4
  40bd2c:	strb	w16, [x22, x15]
  40bd30:	b	40bce8 <wcrtomb@plt+0x9478>
  40bd34:	ldrb	w8, [x22]
  40bd38:	mov	x21, x19
  40bd3c:	orr	w19, w8, #0x10
  40bd40:	strb	w19, [x22]
  40bd44:	ldr	x20, [x21, #176]
  40bd48:	lsr	x8, x20, #59
  40bd4c:	cbnz	x8, 40c5ac <wcrtomb@plt+0x9d3c>
  40bd50:	lsl	x0, x20, #4
  40bd54:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40bd58:	stp	xzr, x20, [x29, #-24]
  40bd5c:	stur	x0, [x29, #-32]
  40bd60:	ldr	x8, [x21, #152]
  40bd64:	lsr	x9, x8, #61
  40bd68:	cbnz	x9, 40c5ac <wcrtomb@plt+0x9d3c>
  40bd6c:	lsl	x0, x8, #2
  40bd70:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40bd74:	ldr	x8, [x21, #152]
  40bd78:	str	x0, [x21, #336]
  40bd7c:	cmp	x8, #0x1
  40bd80:	b.lt	40c17c <wcrtomb@plt+0x990c>  // b.tstop
  40bd84:	mov	x16, xzr
  40bd88:	mov	w20, #0x18                  	// #24
  40bd8c:	tbnz	w19, #4, 40bd9c <wcrtomb@plt+0x952c>
  40bd90:	b	40c160 <wcrtomb@plt+0x98f0>
  40bd94:	ldrb	w19, [x22, x16]
  40bd98:	tbz	w19, #4, 40c160 <wcrtomb@plt+0x98f0>
  40bd9c:	ldur	x19, [x29, #-88]
  40bda0:	ldr	x9, [x19, #336]
  40bda4:	ldr	x18, [x19, #320]
  40bda8:	str	wzr, [x9, x16, lsl #2]
  40bdac:	madd	x17, x16, x20, x18
  40bdb0:	ldr	x9, [x17, #8]!
  40bdb4:	cmp	x9, #0x1
  40bdb8:	b.lt	40bdcc <wcrtomb@plt+0x955c>  // b.tstop
  40bdbc:	mov	x26, xzr
  40bdc0:	mov	x28, xzr
  40bdc4:	madd	x0, x16, x20, x18
  40bdc8:	b	40be14 <wcrtomb@plt+0x95a4>
  40bdcc:	mov	x26, xzr
  40bdd0:	b	40c158 <wcrtomb@plt+0x98e8>
  40bdd4:	ldp	x0, x17, [sp, #40]
  40bdd8:	ldur	x19, [x29, #-88]
  40bddc:	ldp	x16, x18, [sp, #56]
  40bde0:	ldr	w1, [sp, #28]
  40bde4:	ldr	x8, [x0]
  40bde8:	ldr	x2, [sp, #32]
  40bdec:	mov	w20, #0x18                  	// #24
  40bdf0:	ldr	q0, [x8, x28, lsl #4]
  40bdf4:	str	q0, [x8, x26, lsl #4]
  40bdf8:	add	x26, x26, #0x1
  40bdfc:	orr	w8, w1, #0x10
  40be00:	strb	w8, [x22, x2]
  40be04:	ldr	x8, [x17]
  40be08:	add	x28, x28, #0x1
  40be0c:	cmp	x28, x8
  40be10:	b.ge	40c154 <wcrtomb@plt+0x98e4>  // b.tcont
  40be14:	ldr	x8, [x0]
  40be18:	add	x10, x8, x28, lsl #4
  40be1c:	ldr	w9, [x10, #8]
  40be20:	cbz	w9, 40be04 <wcrtomb@plt+0x9594>
  40be24:	ldr	x2, [x10]
  40be28:	ldr	x10, [x19, #144]
  40be2c:	ldr	x11, [x10, x2, lsl #3]
  40be30:	tbnz	x11, #63, 40befc <wcrtomb@plt+0x968c>
  40be34:	ldrb	w1, [x22, x2]
  40be38:	cmp	x26, #0x1
  40be3c:	b.lt	40bdf0 <wcrtomb@plt+0x9580>  // b.tstop
  40be40:	and	w12, w1, #0x6
  40be44:	cbnz	w12, 40bdf0 <wcrtomb@plt+0x9580>
  40be48:	mov	x12, xzr
  40be4c:	add	x13, x8, #0x8
  40be50:	mov	w27, #0x1                   	// #1
  40be54:	b	40be70 <wcrtomb@plt+0x9600>
  40be58:	add	x12, x12, #0x1
  40be5c:	cmp	x12, x26
  40be60:	cset	w27, lt  // lt = tstop
  40be64:	cmp	x26, x12
  40be68:	add	x13, x13, #0x10
  40be6c:	b.eq	40bdf0 <wcrtomb@plt+0x9580>  // b.none
  40be70:	ldr	w14, [x13]
  40be74:	cmp	w14, w9
  40be78:	b.ne	40be58 <wcrtomb@plt+0x95e8>  // b.any
  40be7c:	ldur	x21, [x13, #-8]
  40be80:	ldrb	w14, [x22, x21]
  40be84:	tst	w14, #0x6
  40be88:	b.ne	40be58 <wcrtomb@plt+0x95e8>  // b.any
  40be8c:	ldr	x15, [x10, x21, lsl #3]
  40be90:	cmp	x11, x15
  40be94:	b.ne	40be58 <wcrtomb@plt+0x95e8>  // b.any
  40be98:	eor	w14, w14, w1
  40be9c:	tbnz	w14, #0, 40be58 <wcrtomb@plt+0x95e8>
  40bea0:	stp	x0, x17, [sp, #40]
  40bea4:	str	x16, [sp, #56]
  40bea8:	madd	x16, x2, x20, x18
  40beac:	ldr	x8, [x16, #8]!
  40beb0:	str	w1, [sp, #28]
  40beb4:	str	x18, [sp, #64]
  40beb8:	str	x2, [sp, #32]
  40bebc:	tbnz	w1, #0, 40c008 <wcrtomb@plt+0x9798>
  40bec0:	madd	x23, x21, x20, x18
  40bec4:	cmp	x8, #0x3
  40bec8:	madd	x12, x2, x20, x18
  40becc:	b.gt	40c068 <wcrtomb@plt+0x97f8>
  40bed0:	mov	w9, #0x18                  	// #24
  40bed4:	cmp	x8, #0x1
  40bed8:	b.lt	40c0dc <wcrtomb@plt+0x986c>  // b.tstop
  40bedc:	ldr	x10, [sp, #64]
  40bee0:	mov	x20, xzr
  40bee4:	madd	x13, x21, x9, x10
  40bee8:	ldr	x21, [x13, #8]!
  40beec:	str	x16, [sp, #104]
  40bef0:	add	x24, x13, #0x8
  40bef4:	stp	x13, x12, [sp, #72]
  40bef8:	b	40bf38 <wcrtomb@plt+0x96c8>
  40befc:	ldr	x8, [x19, #336]
  40bf00:	lsl	x10, x16, #2
  40bf04:	ldr	w11, [x8, x10]
  40bf08:	orr	w9, w11, w9
  40bf0c:	str	w9, [x8, x10]
  40bf10:	b	40be04 <wcrtomb@plt+0x9594>
  40bf14:	add	x8, x0, x25, lsl #4
  40bf18:	stp	x19, x14, [x8]
  40bf1c:	ldr	x8, [x13]
  40bf20:	add	x21, x8, #0x1
  40bf24:	str	x21, [x13]
  40bf28:	ldr	x8, [x16]
  40bf2c:	add	x20, x20, #0x1
  40bf30:	cmp	x20, x8
  40bf34:	b.ge	40c0dc <wcrtomb@plt+0x986c>  // b.tcont
  40bf38:	ldr	x9, [x12]
  40bf3c:	cmp	x21, #0x0
  40bf40:	add	x9, x9, x20, lsl #4
  40bf44:	ldp	x19, x14, [x9]
  40bf48:	b.le	40bf9c <wcrtomb@plt+0x972c>
  40bf4c:	ldr	x0, [x23]
  40bf50:	mov	x25, xzr
  40bf54:	mov	x9, x21
  40bf58:	b	40bf68 <wcrtomb@plt+0x96f8>
  40bf5c:	add	x25, x10, #0x1
  40bf60:	cmp	x25, x9
  40bf64:	b.ge	40bfa4 <wcrtomb@plt+0x9734>  // b.tcont
  40bf68:	add	x10, x9, x25
  40bf6c:	asr	x10, x10, #1
  40bf70:	lsl	x11, x10, #4
  40bf74:	ldr	x11, [x0, x11]
  40bf78:	cmp	x11, x19
  40bf7c:	b.lt	40bf5c <wcrtomb@plt+0x96ec>  // b.tstop
  40bf80:	mov	x9, x10
  40bf84:	b.ne	40bf60 <wcrtomb@plt+0x96f0>  // b.any
  40bf88:	add	x9, x0, x10, lsl #4
  40bf8c:	ldr	w10, [x9, #8]
  40bf90:	orr	w10, w10, w14
  40bf94:	str	w10, [x9, #8]
  40bf98:	b	40bf2c <wcrtomb@plt+0x96bc>
  40bf9c:	ldr	x0, [x23]
  40bfa0:	mov	x25, xzr
  40bfa4:	ldr	x8, [x24]
  40bfa8:	cmp	x8, x21
  40bfac:	b.gt	40bfd4 <wcrtomb@plt+0x9764>
  40bfb0:	mov	w2, #0x1                   	// #1
  40bfb4:	mov	x3, #0xffffffffffffffff    	// #-1
  40bfb8:	mov	w4, #0x10                  	// #16
  40bfbc:	mov	x1, x24
  40bfc0:	stur	x14, [x29, #-96]
  40bfc4:	bl	40d920 <wcrtomb@plt+0xb0b0>
  40bfc8:	ldur	x14, [x29, #-96]
  40bfcc:	ldp	x13, x12, [sp, #72]
  40bfd0:	ldr	x16, [sp, #104]
  40bfd4:	cmp	x21, x25
  40bfd8:	str	x0, [x23]
  40bfdc:	b.le	40bf14 <wcrtomb@plt+0x96a4>
  40bfe0:	lsl	x8, x21, #4
  40bfe4:	add	x9, x0, x8
  40bfe8:	ldur	q0, [x9, #-16]
  40bfec:	sub	x21, x21, #0x1
  40bff0:	cmp	x21, x25
  40bff4:	sub	x8, x8, #0x10
  40bff8:	str	q0, [x9]
  40bffc:	ldr	x0, [x23]
  40c000:	b.gt	40bfe4 <wcrtomb@plt+0x9774>
  40c004:	b	40bf14 <wcrtomb@plt+0x96a4>
  40c008:	cmp	x8, #0x1
  40c00c:	b.lt	40c0dc <wcrtomb@plt+0x986c>  // b.tstop
  40c010:	ldr	x18, [sp, #64]
  40c014:	ldr	x2, [sp, #32]
  40c018:	mov	w20, #0x18                  	// #24
  40c01c:	mov	x13, xzr
  40c020:	mov	x14, x8
  40c024:	madd	x9, x2, x20, x18
  40c028:	ldr	x11, [x9]
  40c02c:	b	40c03c <wcrtomb@plt+0x97cc>
  40c030:	add	x13, x10, #0x1
  40c034:	cmp	x13, x14
  40c038:	b.ge	40bec0 <wcrtomb@plt+0x9650>  // b.tcont
  40c03c:	add	x10, x14, x13
  40c040:	asr	x10, x10, #1
  40c044:	lsl	x12, x10, #4
  40c048:	ldr	x15, [x11, x12]
  40c04c:	cmp	x15, x2
  40c050:	b.lt	40c030 <wcrtomb@plt+0x97c0>  // b.tstop
  40c054:	b.eq	40c0f8 <wcrtomb@plt+0x9888>  // b.none
  40c058:	mov	x14, x10
  40c05c:	cmp	x13, x14
  40c060:	b.lt	40c03c <wcrtomb@plt+0x97cc>  // b.tstop
  40c064:	b	40bec0 <wcrtomb@plt+0x9650>
  40c068:	sub	x3, x29, #0x20
  40c06c:	mov	w2, #0xffffffff            	// #-1
  40c070:	mov	x0, x12
  40c074:	mov	x1, x23
  40c078:	mov	x19, x18
  40c07c:	bl	40f4bc <wcrtomb@plt+0xcc4c>
  40c080:	madd	x24, x21, x20, x19
  40c084:	ldr	x8, [x24, #16]!
  40c088:	ldur	x19, [x29, #-24]
  40c08c:	cmp	x8, x19
  40c090:	b.ge	40c0bc <wcrtomb@plt+0x984c>  // b.tcont
  40c094:	ldr	x0, [x23]
  40c098:	bl	402620 <free@plt>
  40c09c:	ldr	x8, [x24]
  40c0a0:	mov	x3, #0xffffffffffffffff    	// #-1
  40c0a4:	mov	w4, #0x10                  	// #16
  40c0a8:	mov	x0, xzr
  40c0ac:	sub	x2, x19, x8
  40c0b0:	mov	x1, x24
  40c0b4:	bl	40d920 <wcrtomb@plt+0xb0b0>
  40c0b8:	str	x0, [x23]
  40c0bc:	ldr	x8, [sp, #64]
  40c0c0:	madd	x8, x21, x20, x8
  40c0c4:	str	x19, [x8, #8]
  40c0c8:	cbz	x19, 40c0dc <wcrtomb@plt+0x986c>
  40c0cc:	ldr	x0, [x23]
  40c0d0:	ldur	x1, [x29, #-32]
  40c0d4:	lsl	x2, x19, #4
  40c0d8:	bl	402210 <memcpy@plt>
  40c0dc:	tbz	w27, #0, 40bdd4 <wcrtomb@plt+0x9564>
  40c0e0:	ldur	x19, [x29, #-88]
  40c0e4:	ldp	x17, x16, [sp, #48]
  40c0e8:	ldr	x18, [sp, #64]
  40c0ec:	ldr	x0, [sp, #40]
  40c0f0:	mov	w20, #0x18                  	// #24
  40c0f4:	b	40be04 <wcrtomb@plt+0x9594>
  40c0f8:	add	x13, x10, #0x1
  40c0fc:	cmp	x13, x8
  40c100:	b.ge	40c144 <wcrtomb@plt+0x98d4>  // b.tcont
  40c104:	ldr	q0, [x11, x13, lsl #4]
  40c108:	add	x14, x10, #0x2
  40c10c:	cmp	x14, x8
  40c110:	str	q0, [x11, x10, lsl #4]
  40c114:	b.eq	40c148 <wcrtomb@plt+0x98d8>  // b.none
  40c118:	sub	x8, x8, #0x2
  40c11c:	ldr	x11, [x9]
  40c120:	add	x10, x10, #0x1
  40c124:	cmp	x8, x10
  40c128:	add	x11, x11, x12
  40c12c:	ldr	q0, [x11, #32]
  40c130:	add	x12, x12, #0x10
  40c134:	str	q0, [x11, #16]
  40c138:	b.ne	40c11c <wcrtomb@plt+0x98ac>  // b.any
  40c13c:	add	x13, x10, #0x1
  40c140:	b	40c148 <wcrtomb@plt+0x98d8>
  40c144:	mov	x13, x10
  40c148:	mov	x8, x13
  40c14c:	str	x13, [x16]
  40c150:	b	40bec0 <wcrtomb@plt+0x9650>
  40c154:	ldr	x8, [x19, #152]
  40c158:	str	x26, [x17]
  40c15c:	b	40c164 <wcrtomb@plt+0x98f4>
  40c160:	ldur	x19, [x29, #-88]
  40c164:	add	x16, x16, #0x1
  40c168:	cmp	x16, x8
  40c16c:	b.lt	40bd94 <wcrtomb@plt+0x9524>  // b.tstop
  40c170:	lsr	x9, x8, #60
  40c174:	cbz	x9, 40c188 <wcrtomb@plt+0x9918>
  40c178:	b	40c5ac <wcrtomb@plt+0x9d3c>
  40c17c:	ldur	x19, [x29, #-88]
  40c180:	lsr	x9, x8, #60
  40c184:	cbnz	x9, 40c5ac <wcrtomb@plt+0x9d3c>
  40c188:	lsl	x0, x8, #3
  40c18c:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40c190:	str	xzr, [x0]
  40c194:	ldr	x8, [x19, #152]
  40c198:	mov	x23, x0
  40c19c:	cmp	x8, #0x2
  40c1a0:	b.lt	40c1b8 <wcrtomb@plt+0x9948>  // b.tstop
  40c1a4:	lsl	x8, x8, #3
  40c1a8:	add	x0, x23, #0x8
  40c1ac:	sub	x2, x8, #0x8
  40c1b0:	mov	w1, #0xff                  	// #255
  40c1b4:	bl	402470 <memset@plt>
  40c1b8:	ldr	x8, [x19, #176]
  40c1bc:	lsr	x9, x8, #60
  40c1c0:	cbnz	x9, 40c5ac <wcrtomb@plt+0x9d3c>
  40c1c4:	lsl	x0, x8, #3
  40c1c8:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40c1cc:	ldr	x8, [x19, #176]
  40c1d0:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  40c1d4:	movk	x9, #0x555, lsl #48
  40c1d8:	cmp	x8, x9
  40c1dc:	b.hi	40c5ac <wcrtomb@plt+0x9d3c>  // b.pmore
  40c1e0:	add	x8, x8, x8, lsl #1
  40c1e4:	mov	x24, x0
  40c1e8:	lsl	x0, x8, #3
  40c1ec:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40c1f0:	ldr	x8, [x19, #176]
  40c1f4:	lsr	x9, x8, #61
  40c1f8:	cbnz	x9, 40c5ac <wcrtomb@plt+0x9d3c>
  40c1fc:	mov	x25, x0
  40c200:	lsl	x0, x8, #2
  40c204:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40c208:	ldrb	w8, [x19, #1048]
  40c20c:	mov	x26, x0
  40c210:	cbz	w8, 40c228 <wcrtomb@plt+0x99b8>
  40c214:	ldr	x0, [x19, #176]
  40c218:	tbnz	x0, #63, 40c5ac <wcrtomb@plt+0x9d3c>
  40c21c:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40c220:	mov	x27, x0
  40c224:	b	40c22c <wcrtomb@plt+0x99bc>
  40c228:	mov	x27, xzr
  40c22c:	ldr	x8, [x19, #152]
  40c230:	cmp	x8, #0x1
  40c234:	b.lt	40c53c <wcrtomb@plt+0x9ccc>  // b.tstop
  40c238:	mov	x8, xzr
  40c23c:	mov	x21, xzr
  40c240:	mov	w20, #0x1                   	// #1
  40c244:	mov	w28, #0x18                  	// #24
  40c248:	cmn	x8, #0x1
  40c24c:	b.eq	40c314 <wcrtomb@plt+0x9aa4>  // b.none
  40c250:	ldr	x9, [x19, #144]
  40c254:	madd	x12, x8, x28, x25
  40c258:	ldr	x9, [x9, x21, lsl #3]
  40c25c:	str	x9, [x24, x8, lsl #3]
  40c260:	ldr	x10, [x19, #320]
  40c264:	madd	x9, x21, x28, x10
  40c268:	ldr	x11, [x9, #16]
  40c26c:	ldr	q0, [x9]
  40c270:	str	x11, [x12, #16]
  40c274:	str	q0, [x12]
  40c278:	ldr	x11, [x19, #336]
  40c27c:	ldr	w11, [x11, x21, lsl #2]
  40c280:	str	w11, [x26, x8, lsl #2]
  40c284:	cbz	x27, 40c294 <wcrtomb@plt+0x9a24>
  40c288:	ldr	x11, [x19, #280]
  40c28c:	ldrb	w11, [x11, x21]
  40c290:	strb	w11, [x27, x8]
  40c294:	madd	x8, x21, x28, x10
  40c298:	ldr	x1, [x8, #8]
  40c29c:	cmp	x1, #0x0
  40c2a0:	b.le	40c2e4 <wcrtomb@plt+0x9a74>
  40c2a4:	ldr	x0, [x9]
  40c2a8:	mov	x9, x1
  40c2ac:	mov	x8, x0
  40c2b0:	b	40c2c0 <wcrtomb@plt+0x9a50>
  40c2b4:	subs	x9, x9, #0x1
  40c2b8:	str	x10, [x8], #16
  40c2bc:	b.eq	40c2e8 <wcrtomb@plt+0x9a78>  // b.none
  40c2c0:	ldr	x11, [x8]
  40c2c4:	ldr	x10, [x23, x11, lsl #3]
  40c2c8:	cmn	x10, #0x1
  40c2cc:	b.ne	40c2b4 <wcrtomb@plt+0x9a44>  // b.any
  40c2d0:	add	x12, x20, #0x1
  40c2d4:	str	x20, [x23, x11, lsl #3]
  40c2d8:	mov	x10, x20
  40c2dc:	mov	x20, x12
  40c2e0:	b	40c2b4 <wcrtomb@plt+0x9a44>
  40c2e4:	ldr	x0, [x9]
  40c2e8:	adrp	x3, 40f000 <wcrtomb@plt+0xc790>
  40c2ec:	mov	w2, #0x10                  	// #16
  40c2f0:	add	x3, x3, #0x638
  40c2f4:	bl	4022f0 <qsort@plt>
  40c2f8:	ldr	x8, [x19, #152]
  40c2fc:	add	x21, x21, #0x1
  40c300:	cmp	x21, x8
  40c304:	b.ge	40c340 <wcrtomb@plt+0x9ad0>  // b.tcont
  40c308:	ldr	x8, [x23, x21, lsl #3]
  40c30c:	cmn	x8, #0x1
  40c310:	b.ne	40c250 <wcrtomb@plt+0x99e0>  // b.any
  40c314:	ldr	x8, [x19, #320]
  40c318:	add	x9, x21, x21, lsl #1
  40c31c:	lsl	x19, x9, #3
  40c320:	ldr	x0, [x8, x19]
  40c324:	bl	402620 <free@plt>
  40c328:	ldur	x8, [x29, #-88]
  40c32c:	ldr	x8, [x8, #320]
  40c330:	add	x8, x8, x19
  40c334:	ldur	x19, [x29, #-88]
  40c338:	stp	xzr, xzr, [x8]
  40c33c:	b	40c2f8 <wcrtomb@plt+0x9a88>
  40c340:	cmp	x20, #0x1
  40c344:	b.ge	40c540 <wcrtomb@plt+0x9cd0>  // b.tcont
  40c348:	mov	x0, x24
  40c34c:	str	x20, [x19, #176]
  40c350:	str	x20, [x19, #152]
  40c354:	bl	402620 <free@plt>
  40c358:	mov	x0, x25
  40c35c:	bl	402620 <free@plt>
  40c360:	mov	x0, x26
  40c364:	bl	402620 <free@plt>
  40c368:	mov	x0, x27
  40c36c:	bl	402620 <free@plt>
  40c370:	mov	x0, x23
  40c374:	bl	402620 <free@plt>
  40c378:	ldur	x0, [x29, #-32]
  40c37c:	bl	402620 <free@plt>
  40c380:	mov	x0, x22
  40c384:	bl	402620 <free@plt>
  40c388:	mov	w0, #0x10                  	// #16
  40c38c:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40c390:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40c394:	ldr	q0, [x8, #1408]
  40c398:	mov	w8, #0x1                   	// #1
  40c39c:	dup	v1.2d, x8
  40c3a0:	stur	x0, [x29, #-56]
  40c3a4:	stur	q1, [x29, #-48]
  40c3a8:	str	q0, [x0]
  40c3ac:	ldr	x8, [x19, #152]
  40c3b0:	lsr	x9, x8, #61
  40c3b4:	cbnz	x9, 40c5ac <wcrtomb@plt+0x9d3c>
  40c3b8:	mov	x22, x0
  40c3bc:	lsl	x0, x8, #2
  40c3c0:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40c3c4:	ldr	x8, [x19, #152]
  40c3c8:	str	x0, [x19, #344]
  40c3cc:	cmp	x8, #0x1
  40c3d0:	b.lt	40c4a0 <wcrtomb@plt+0x9c30>  // b.tstop
  40c3d4:	mov	x8, xzr
  40c3d8:	mov	w9, #0x49                  	// #73
  40c3dc:	mov	w10, #0x18                  	// #24
  40c3e0:	b	40c3f8 <wcrtomb@plt+0x9b88>
  40c3e4:	ldr	x11, [x19, #152]
  40c3e8:	ldr	x0, [x19, #344]
  40c3ec:	add	x8, x8, #0x1
  40c3f0:	cmp	x8, x11
  40c3f4:	b.ge	40c4a0 <wcrtomb@plt+0x9c30>  // b.tcont
  40c3f8:	lsl	x12, x8, #2
  40c3fc:	str	wzr, [x0, x12]
  40c400:	ldr	x13, [x19, #336]
  40c404:	ldr	w11, [x13, x12]
  40c408:	eor	w11, w11, w11, lsr #2
  40c40c:	tst	w11, w9
  40c410:	cset	w11, ne  // ne = any
  40c414:	lsl	w11, w11, #2
  40c418:	str	w11, [x0, x12]
  40c41c:	ldr	w12, [x13, x12]
  40c420:	eor	w12, w12, w12, lsr #1
  40c424:	tst	w12, w9
  40c428:	b.eq	40c434 <wcrtomb@plt+0x9bc4>  // b.none
  40c42c:	orr	w11, w11, #0x2
  40c430:	str	w11, [x0, x8, lsl #2]
  40c434:	ldr	x14, [x19, #320]
  40c438:	madd	x12, x8, x10, x14
  40c43c:	ldr	x12, [x12, #8]
  40c440:	cmp	x12, #0x1
  40c444:	b.lt	40c3e4 <wcrtomb@plt+0x9b74>  // b.tstop
  40c448:	mul	x15, x8, x10
  40c44c:	ldr	x14, [x14, x15]
  40c450:	mov	x13, xzr
  40c454:	add	x14, x14, #0x8
  40c458:	b	40c46c <wcrtomb@plt+0x9bfc>
  40c45c:	add	x13, x13, #0x1
  40c460:	cmp	x13, x12
  40c464:	add	x14, x14, #0x10
  40c468:	b.ge	40c3e4 <wcrtomb@plt+0x9b74>  // b.tcont
  40c46c:	ldr	w15, [x14]
  40c470:	eor	w16, w15, w15, lsr #2
  40c474:	tst	w16, w9
  40c478:	b.eq	40c488 <wcrtomb@plt+0x9c18>  // b.none
  40c47c:	orr	w11, w11, #0x4
  40c480:	str	w11, [x0, x8, lsl #2]
  40c484:	ldr	w15, [x14]
  40c488:	eor	w15, w15, w15, lsr #1
  40c48c:	tst	w15, w9
  40c490:	b.eq	40c45c <wcrtomb@plt+0x9bec>  // b.none
  40c494:	orr	w11, w11, #0x2
  40c498:	str	w11, [x0, x8, lsl #2]
  40c49c:	b	40c45c <wcrtomb@plt+0x9bec>
  40c4a0:	ldr	x8, [x22]
  40c4a4:	ldr	w19, [x0, x8, lsl #2]
  40c4a8:	tbz	w19, #2, 40c4bc <wcrtomb@plt+0x9c4c>
  40c4ac:	ldur	x0, [x29, #-88]
  40c4b0:	sub	x1, x29, #0x38
  40c4b4:	mov	w2, #0x4                   	// #4
  40c4b8:	bl	40f17c <wcrtomb@plt+0xc90c>
  40c4bc:	ldur	x20, [x29, #-88]
  40c4c0:	eor	w2, w19, #0x7
  40c4c4:	sub	x1, x29, #0x38
  40c4c8:	mov	x0, x20
  40c4cc:	bl	40f17c <wcrtomb@plt+0xc90c>
  40c4d0:	sxtw	x8, w0
  40c4d4:	str	w0, [x20, #364]
  40c4d8:	str	x8, [x20, #400]
  40c4dc:	tbz	w19, #1, 40c4f4 <wcrtomb@plt+0x9c84>
  40c4e0:	sub	x1, x29, #0x38
  40c4e4:	mov	w2, #0x2                   	// #2
  40c4e8:	mov	x0, x20
  40c4ec:	bl	40f17c <wcrtomb@plt+0xc90c>
  40c4f0:	str	w0, [x20, #364]
  40c4f4:	add	w8, w0, #0x1
  40c4f8:	ldr	x0, [sp, #16]
  40c4fc:	str	w8, [x20, #364]
  40c500:	str	wzr, [x20, #360]
  40c504:	bl	402620 <free@plt>
  40c508:	ldr	x0, [sp, #8]
  40c50c:	bl	402620 <free@plt>
  40c510:	ldur	x0, [x29, #-80]
  40c514:	bl	402620 <free@plt>
  40c518:	mov	x0, x22
  40c51c:	ldp	x20, x19, [sp, #288]
  40c520:	ldp	x22, x21, [sp, #272]
  40c524:	ldp	x24, x23, [sp, #256]
  40c528:	ldp	x26, x25, [sp, #240]
  40c52c:	ldp	x28, x27, [sp, #224]
  40c530:	ldp	x29, x30, [sp, #208]
  40c534:	add	sp, sp, #0x130
  40c538:	b	402620 <free@plt>
  40c53c:	mov	w20, #0x1                   	// #1
  40c540:	mov	x8, xzr
  40c544:	mov	x9, xzr
  40c548:	b	40c55c <wcrtomb@plt+0x9cec>
  40c54c:	add	x9, x9, #0x1
  40c550:	cmp	x20, x9
  40c554:	add	x8, x8, #0x18
  40c558:	b.eq	40c348 <wcrtomb@plt+0x9ad8>  // b.none
  40c55c:	lsl	x10, x9, #3
  40c560:	ldr	x11, [x19, #144]
  40c564:	ldr	x12, [x24, x10]
  40c568:	add	x13, x25, x8
  40c56c:	str	x12, [x11, x10]
  40c570:	ldr	x10, [x19, #320]
  40c574:	ldr	x11, [x13, #16]
  40c578:	ldr	q0, [x13]
  40c57c:	lsl	x12, x9, #2
  40c580:	add	x10, x10, x8
  40c584:	str	x11, [x10, #16]
  40c588:	str	q0, [x10]
  40c58c:	ldr	w10, [x26, x12]
  40c590:	ldr	x11, [x19, #336]
  40c594:	str	w10, [x11, x12]
  40c598:	cbz	x27, 40c54c <wcrtomb@plt+0x9cdc>
  40c59c:	ldrb	w10, [x27, x9]
  40c5a0:	ldr	x11, [x19, #280]
  40c5a4:	strb	w10, [x11, x9]
  40c5a8:	b	40c54c <wcrtomb@plt+0x9cdc>
  40c5ac:	bl	415898 <wcrtomb@plt+0x13028>
  40c5b0:	mov	x0, x1
  40c5b4:	mov	w8, #0x1                   	// #1
  40c5b8:	strb	w8, [x5]
  40c5bc:	ret
  40c5c0:	stp	x29, x30, [sp, #-48]!
  40c5c4:	stp	x20, x19, [sp, #32]
  40c5c8:	mov	x19, x0
  40c5cc:	ldr	x0, [x0]
  40c5d0:	str	x21, [sp, #16]
  40c5d4:	mov	x29, sp
  40c5d8:	bl	402620 <free@plt>
  40c5dc:	ldr	x0, [x19, #144]
  40c5e0:	bl	402620 <free@plt>
  40c5e4:	ldrb	w8, [x19, #1048]
  40c5e8:	cbz	w8, 40c63c <wcrtomb@plt+0x9dcc>
  40c5ec:	ldr	x0, [x19, #280]
  40c5f0:	bl	402620 <free@plt>
  40c5f4:	ldr	x0, [x19, #96]
  40c5f8:	bl	402620 <free@plt>
  40c5fc:	ldr	x0, [x19, #408]
  40c600:	bl	402620 <free@plt>
  40c604:	ldr	x8, [x19, #432]
  40c608:	cbz	x8, 40c63c <wcrtomb@plt+0x9dcc>
  40c60c:	ldr	x9, [x19, #352]
  40c610:	tbnz	x9, #63, 40c634 <wcrtomb@plt+0x9dc4>
  40c614:	mov	x20, #0xffffffffffffffff    	// #-1
  40c618:	ldr	x0, [x8, x20, lsl #3]
  40c61c:	bl	402620 <free@plt>
  40c620:	ldr	x9, [x19, #352]
  40c624:	ldr	x8, [x19, #432]
  40c628:	add	x20, x20, #0x1
  40c62c:	cmp	x20, x9
  40c630:	b.lt	40c618 <wcrtomb@plt+0x9da8>  // b.tstop
  40c634:	sub	x0, x8, #0x10
  40c638:	bl	402620 <free@plt>
  40c63c:	ldr	x0, [x19, #336]
  40c640:	bl	402620 <free@plt>
  40c644:	ldr	x0, [x19, #344]
  40c648:	bl	402620 <free@plt>
  40c64c:	ldr	x8, [x19, #304]
  40c650:	cmp	x8, #0x1
  40c654:	b.lt	40c694 <wcrtomb@plt+0x9e24>  // b.tstop
  40c658:	mov	x20, xzr
  40c65c:	mov	x21, xzr
  40c660:	ldr	x8, [x19, #296]
  40c664:	add	x8, x8, x20
  40c668:	ldr	x0, [x8, #8]
  40c66c:	bl	402620 <free@plt>
  40c670:	ldr	x8, [x19, #296]
  40c674:	add	x8, x8, x20
  40c678:	ldr	x0, [x8, #48]
  40c67c:	bl	402620 <free@plt>
  40c680:	ldr	x8, [x19, #304]
  40c684:	add	x21, x21, #0x1
  40c688:	add	x20, x20, #0x50
  40c68c:	cmp	x21, x8
  40c690:	b.lt	40c660 <wcrtomb@plt+0x9df0>  // b.tstop
  40c694:	ldr	x0, [x19, #296]
  40c698:	bl	402620 <free@plt>
  40c69c:	ldr	x0, [x19, #320]
  40c6a0:	cbz	x0, 40c6f4 <wcrtomb@plt+0x9e84>
  40c6a4:	ldr	x8, [x19, #152]
  40c6a8:	cmp	x8, #0x1
  40c6ac:	b.lt	40c6f0 <wcrtomb@plt+0x9e80>  // b.tstop
  40c6b0:	ldr	x0, [x0]
  40c6b4:	bl	402620 <free@plt>
  40c6b8:	ldr	x8, [x19, #152]
  40c6bc:	cmp	x8, #0x2
  40c6c0:	b.lt	40c6ec <wcrtomb@plt+0x9e7c>  // b.tstop
  40c6c4:	mov	w20, #0x1                   	// #1
  40c6c8:	mov	w21, #0x18                  	// #24
  40c6cc:	ldr	x8, [x19, #320]
  40c6d0:	ldr	x0, [x8, x21]
  40c6d4:	bl	402620 <free@plt>
  40c6d8:	ldr	x8, [x19, #152]
  40c6dc:	add	x20, x20, #0x1
  40c6e0:	add	x21, x21, #0x18
  40c6e4:	cmp	x20, x8
  40c6e8:	b.lt	40c6cc <wcrtomb@plt+0x9e5c>  // b.tstop
  40c6ec:	ldr	x0, [x19, #320]
  40c6f0:	bl	402620 <free@plt>
  40c6f4:	ldr	x8, [x19, #368]
  40c6f8:	cbz	x8, 40c758 <wcrtomb@plt+0x9ee8>
  40c6fc:	ldr	x9, [x19, #352]
  40c700:	cmp	x9, #0x1
  40c704:	b.lt	40c738 <wcrtomb@plt+0x9ec8>  // b.tstop
  40c708:	mov	x20, xzr
  40c70c:	lsl	x21, x20, #3
  40c710:	ldr	x0, [x8, x21]
  40c714:	bl	402620 <free@plt>
  40c718:	ldr	x8, [x19, #376]
  40c71c:	ldr	x0, [x8, x21]
  40c720:	bl	402620 <free@plt>
  40c724:	ldr	x9, [x19, #352]
  40c728:	ldr	x8, [x19, #368]
  40c72c:	add	x20, x20, #0x1
  40c730:	cmp	x20, x9
  40c734:	b.lt	40c70c <wcrtomb@plt+0x9e9c>  // b.tstop
  40c738:	sub	x0, x8, #0x10
  40c73c:	bl	402620 <free@plt>
  40c740:	ldr	x0, [x19, #376]
  40c744:	bl	402620 <free@plt>
  40c748:	ldr	x0, [x19, #392]
  40c74c:	bl	402620 <free@plt>
  40c750:	ldr	x0, [x19, #384]
  40c754:	bl	402620 <free@plt>
  40c758:	ldr	x0, [x19, #288]
  40c75c:	cbz	x0, 40c778 <wcrtomb@plt+0x9f08>
  40c760:	bl	40c5c0 <wcrtomb@plt+0x9d50>
  40c764:	ldr	x0, [x19, #288]
  40c768:	ldp	x20, x19, [sp, #32]
  40c76c:	ldr	x21, [sp, #16]
  40c770:	ldp	x29, x30, [sp], #48
  40c774:	b	402620 <free@plt>
  40c778:	ldp	x20, x19, [sp, #32]
  40c77c:	ldr	x21, [sp, #16]
  40c780:	ldp	x29, x30, [sp], #48
  40c784:	ret
  40c788:	sub	sp, sp, #0xa0
  40c78c:	stp	x29, x30, [sp, #64]
  40c790:	stp	x28, x27, [sp, #80]
  40c794:	stp	x26, x25, [sp, #96]
  40c798:	stp	x24, x23, [sp, #112]
  40c79c:	stp	x22, x21, [sp, #128]
  40c7a0:	stp	x20, x19, [sp, #144]
  40c7a4:	ldr	x20, [x0, #152]
  40c7a8:	add	x29, sp, #0x40
  40c7ac:	cmp	x20, #0x3
  40c7b0:	b.lt	40d1c8 <wcrtomb@plt+0xa958>  // b.tstop
  40c7b4:	str	xzr, [sp, #24]
  40c7b8:	ldrb	w9, [x0, #1048]
  40c7bc:	ldrb	w8, [x0, #457]
  40c7c0:	adrp	x28, 429000 <_obstack_memory_used@@Base+0x10d70>
  40c7c4:	mov	x24, x0
  40c7c8:	eor	w9, w9, #0x1
  40c7cc:	mov	x25, xzr
  40c7d0:	mov	w12, #0x1                   	// #1
  40c7d4:	mov	w22, #0x2                   	// #2
  40c7d8:	add	x28, x28, #0xb5d
  40c7dc:	and	w8, w9, w8
  40c7e0:	stur	w8, [x29, #-20]
  40c7e4:	str	x0, [sp, #32]
  40c7e8:	b	40c850 <wcrtomb@plt+0x9fe0>
  40c7ec:	mov	w0, #0x30                  	// #48
  40c7f0:	mov	x19, x12
  40c7f4:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40c7f8:	mov	x22, x0
  40c7fc:	mov	w0, #0x8                   	// #8
  40c800:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40c804:	str	x0, [x22]
  40c808:	mov	w0, #0x2                   	// #2
  40c80c:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40c810:	str	x0, [x22, #8]
  40c814:	mov	w0, #0x2                   	// #2
  40c818:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40c81c:	str	x0, [x22, #16]
  40c820:	mov	w0, #0x2                   	// #2
  40c824:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40c828:	mov	x12, x19
  40c82c:	str	x0, [x22, #24]
  40c830:	strh	wzr, [x22, #32]
  40c834:	str	x25, [x22, #40]
  40c838:	mov	x25, x22
  40c83c:	ldr	x20, [x24, #152]
  40c840:	add	x22, x12, #0x2
  40c844:	add	x12, x12, #0x1
  40c848:	cmp	x22, x20
  40c84c:	b.ge	40d2c4 <wcrtomb@plt+0xaa54>  // b.tcont
  40c850:	ldr	x23, [x24, #144]
  40c854:	add	x21, x23, x12, lsl #3
  40c858:	ldr	x19, [x21]
  40c85c:	sub	x8, x19, #0x100
  40c860:	cmp	x8, #0x13
  40c864:	b.hi	40c8cc <wcrtomb@plt+0xa05c>  // b.pmore
  40c868:	adrp	x11, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40c86c:	add	x11, x11, #0x2ce
  40c870:	adr	x9, 40c7ec <wcrtomb@plt+0x9f7c>
  40c874:	ldrh	w10, [x11, x8, lsl #1]
  40c878:	add	x9, x9, x10, lsl #2
  40c87c:	br	x9
  40c880:	ldr	x8, [x25]
  40c884:	ldr	x0, [x8]
  40c888:	cbz	x0, 40c8a8 <wcrtomb@plt+0xa038>
  40c88c:	mov	x20, x12
  40c890:	add	x19, x8, #0x8
  40c894:	bl	402620 <free@plt>
  40c898:	ldr	x0, [x19], #8
  40c89c:	cbnz	x0, 40c894 <wcrtomb@plt+0xa024>
  40c8a0:	ldr	x8, [x25]
  40c8a4:	mov	x12, x20
  40c8a8:	str	xzr, [x8]
  40c8ac:	ldr	x8, [x25, #24]
  40c8b0:	strb	wzr, [x8]
  40c8b4:	ldr	x8, [x25, #16]
  40c8b8:	strb	wzr, [x8]
  40c8bc:	ldr	x8, [x25, #8]
  40c8c0:	strb	wzr, [x8]
  40c8c4:	strh	wzr, [x25, #32]
  40c8c8:	b	40c83c <wcrtomb@plt+0x9fcc>
  40c8cc:	cmn	x19, #0x1
  40c8d0:	b.eq	40d250 <wcrtomb@plt+0xa9e0>  // b.none
  40c8d4:	cbz	x19, 40d298 <wcrtomb@plt+0xaa28>
  40c8d8:	subs	x24, x19, #0x114
  40c8dc:	b.lt	40cf3c <wcrtomb@plt+0xa6cc>  // b.tstop
  40c8e0:	ldr	x8, [sp, #32]
  40c8e4:	str	x25, [sp, #16]
  40c8e8:	mov	x19, xzr
  40c8ec:	mov	w26, #0x1                   	// #1
  40c8f0:	ldr	x25, [x8]
  40c8f4:	ubfx	x8, x19, #6, #26
  40c8f8:	add	x9, x25, x24, lsl #5
  40c8fc:	ldr	x8, [x9, w8, uxtw #3]
  40c900:	lsr	x8, x8, x19
  40c904:	tbnz	w8, #0, 40cf30 <wcrtomb@plt+0xa6c0>
  40c908:	add	x19, x19, #0x1
  40c90c:	cmp	w19, #0x100
  40c910:	add	x26, x26, #0x1
  40c914:	b.ne	40c8f4 <wcrtomb@plt+0xa084>  // b.any
  40c918:	mov	w0, #0x30                  	// #48
  40c91c:	mov	x19, x12
  40c920:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40c924:	mov	x25, x0
  40c928:	mov	w0, #0x8                   	// #8
  40c92c:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40c930:	str	x0, [x25]
  40c934:	mov	w0, #0x2                   	// #2
  40c938:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40c93c:	str	x0, [x25, #8]
  40c940:	mov	w0, #0x2                   	// #2
  40c944:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40c948:	str	x0, [x25, #16]
  40c94c:	mov	w0, #0x2                   	// #2
  40c950:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40c954:	ldr	x8, [sp, #16]
  40c958:	ldr	x24, [sp, #32]
  40c95c:	mov	x12, x19
  40c960:	str	x0, [x25, #24]
  40c964:	strh	wzr, [x25, #32]
  40c968:	str	x8, [x25, #40]
  40c96c:	b	40c83c <wcrtomb@plt+0x9fcc>
  40c970:	ldr	x8, [x25]
  40c974:	ldr	x21, [x25, #40]
  40c978:	mov	x20, x12
  40c97c:	ldr	x23, [x8]
  40c980:	ldr	x22, [x21]
  40c984:	cbz	x23, 40c9b0 <wcrtomb@plt+0xa140>
  40c988:	add	x19, x8, #0x8
  40c98c:	mov	x0, x23
  40c990:	bl	402270 <strlen@plt>
  40c994:	mov	x2, x0
  40c998:	mov	x0, x22
  40c99c:	mov	x1, x23
  40c9a0:	bl	40d3c4 <wcrtomb@plt+0xab54>
  40c9a4:	ldr	x23, [x19], #8
  40c9a8:	mov	x22, x0
  40c9ac:	cbnz	x23, 40c98c <wcrtomb@plt+0xa11c>
  40c9b0:	ldr	x0, [x21, #16]
  40c9b4:	str	x22, [x21]
  40c9b8:	ldrb	w8, [x0]
  40c9bc:	cbz	w8, 40ca30 <wcrtomb@plt+0xa1c0>
  40c9c0:	ldr	x22, [x25, #8]
  40c9c4:	ldrb	w8, [x22]
  40c9c8:	cbz	w8, 40ca30 <wcrtomb@plt+0xa1c0>
  40c9cc:	bl	402270 <strlen@plt>
  40c9d0:	mov	x23, x0
  40c9d4:	mov	x0, x22
  40c9d8:	bl	402270 <strlen@plt>
  40c9dc:	add	x24, x0, x23
  40c9e0:	mov	x22, x0
  40c9e4:	mov	x0, x24
  40c9e8:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40c9ec:	ldr	x1, [x21, #16]
  40c9f0:	mov	x2, x23
  40c9f4:	mov	x19, x25
  40c9f8:	mov	x25, x0
  40c9fc:	bl	402210 <memcpy@plt>
  40ca00:	ldr	x1, [x19, #8]
  40ca04:	add	x0, x25, x23
  40ca08:	mov	x2, x22
  40ca0c:	bl	402210 <memcpy@plt>
  40ca10:	ldr	x0, [x21]
  40ca14:	mov	x1, x25
  40ca18:	mov	x2, x24
  40ca1c:	bl	40d3c4 <wcrtomb@plt+0xab54>
  40ca20:	str	x0, [x21]
  40ca24:	mov	x0, x25
  40ca28:	mov	x25, x19
  40ca2c:	bl	402620 <free@plt>
  40ca30:	ldr	x8, [x21, #24]
  40ca34:	ldrb	w8, [x8]
  40ca38:	cbz	w8, 40ca90 <wcrtomb@plt+0xa220>
  40ca3c:	ldr	x23, [x25, #8]
  40ca40:	ldr	x22, [x21, #8]
  40ca44:	mov	x0, x23
  40ca48:	bl	402270 <strlen@plt>
  40ca4c:	cbz	x0, 40ca8c <wcrtomb@plt+0xa21c>
  40ca50:	mov	x24, x0
  40ca54:	mov	x0, x22
  40ca58:	bl	402270 <strlen@plt>
  40ca5c:	add	x24, x24, #0x1
  40ca60:	mov	x19, x25
  40ca64:	mov	x25, x0
  40ca68:	add	x1, x0, x24
  40ca6c:	mov	x0, x22
  40ca70:	bl	415654 <wcrtomb@plt+0x12de4>
  40ca74:	mov	x22, x0
  40ca78:	add	x0, x0, x25
  40ca7c:	mov	x1, x23
  40ca80:	mov	x2, x24
  40ca84:	mov	x25, x19
  40ca88:	bl	402210 <memcpy@plt>
  40ca8c:	str	x22, [x21, #8]
  40ca90:	ldr	x8, [x25, #24]
  40ca94:	ldrb	w8, [x8]
  40ca98:	cbnz	w8, 40caa4 <wcrtomb@plt+0xa234>
  40ca9c:	ldr	x8, [x21, #16]
  40caa0:	strb	wzr, [x8]
  40caa4:	ldr	x22, [x25, #16]
  40caa8:	ldr	x23, [x21, #16]
  40caac:	mov	x0, x22
  40cab0:	bl	402270 <strlen@plt>
  40cab4:	cbz	x0, 40caf4 <wcrtomb@plt+0xa284>
  40cab8:	mov	x24, x0
  40cabc:	mov	x0, x23
  40cac0:	bl	402270 <strlen@plt>
  40cac4:	add	x24, x24, #0x1
  40cac8:	mov	x19, x25
  40cacc:	mov	x25, x0
  40cad0:	add	x1, x0, x24
  40cad4:	mov	x0, x23
  40cad8:	bl	415654 <wcrtomb@plt+0x12de4>
  40cadc:	mov	x23, x0
  40cae0:	add	x0, x0, x25
  40cae4:	mov	x1, x22
  40cae8:	mov	x2, x24
  40caec:	mov	x25, x19
  40caf0:	bl	402210 <memcpy@plt>
  40caf4:	ldr	x22, [x21, #24]
  40caf8:	str	x23, [x21, #16]
  40cafc:	ldr	x24, [sp, #32]
  40cb00:	ldrb	w8, [x22]
  40cb04:	cbnz	w8, 40cb10 <wcrtomb@plt+0xa2a0>
  40cb08:	ldrb	w8, [x21, #32]
  40cb0c:	cbz	w8, 40d19c <wcrtomb@plt+0xa92c>
  40cb10:	ldr	x23, [x25, #24]
  40cb14:	ldrb	w8, [x23]
  40cb18:	cbnz	w8, 40cb24 <wcrtomb@plt+0xa2b4>
  40cb1c:	ldrb	w8, [x25, #33]
  40cb20:	cbz	w8, 40d19c <wcrtomb@plt+0xa92c>
  40cb24:	mov	x0, x23
  40cb28:	bl	402270 <strlen@plt>
  40cb2c:	cbz	x0, 40cb6c <wcrtomb@plt+0xa2fc>
  40cb30:	mov	x24, x0
  40cb34:	mov	x0, x22
  40cb38:	bl	402270 <strlen@plt>
  40cb3c:	add	x24, x24, #0x1
  40cb40:	mov	x19, x25
  40cb44:	mov	x25, x0
  40cb48:	add	x1, x0, x24
  40cb4c:	mov	x0, x22
  40cb50:	bl	415654 <wcrtomb@plt+0x12de4>
  40cb54:	mov	x22, x0
  40cb58:	add	x0, x0, x25
  40cb5c:	mov	x1, x23
  40cb60:	mov	x2, x24
  40cb64:	mov	x25, x19
  40cb68:	bl	402210 <memcpy@plt>
  40cb6c:	str	x22, [x21, #24]
  40cb70:	ldr	x24, [sp, #32]
  40cb74:	ldrb	w8, [x25, #33]
  40cb78:	b	40d1a8 <wcrtomb@plt+0xa938>
  40cb7c:	ldr	x8, [x25, #24]
  40cb80:	strb	wzr, [x8]
  40cb84:	b	40c83c <wcrtomb@plt+0x9fcc>
  40cb88:	mov	w0, #0x30                  	// #48
  40cb8c:	mov	x19, x12
  40cb90:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40cb94:	mov	x22, x0
  40cb98:	mov	w0, #0x8                   	// #8
  40cb9c:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40cba0:	str	x0, [x22]
  40cba4:	mov	w0, #0x2                   	// #2
  40cba8:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40cbac:	str	x0, [x22, #8]
  40cbb0:	mov	w0, #0x2                   	// #2
  40cbb4:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40cbb8:	str	x0, [x22, #16]
  40cbbc:	mov	w0, #0x2                   	// #2
  40cbc0:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40cbc4:	mov	w8, #0x100                 	// #256
  40cbc8:	strh	w8, [x22, #32]
  40cbcc:	mov	w8, #0x1                   	// #1
  40cbd0:	mov	x12, x19
  40cbd4:	str	x0, [x22, #24]
  40cbd8:	str	x25, [x22, #40]
  40cbdc:	str	w8, [sp, #24]
  40cbe0:	b	40c838 <wcrtomb@plt+0x9fc8>
  40cbe4:	ldr	x19, [x25, #40]
  40cbe8:	ldr	x1, [x25, #24]
  40cbec:	str	x12, [sp, #8]
  40cbf0:	ldr	x22, [x19, #24]
  40cbf4:	mov	x0, x22
  40cbf8:	bl	402600 <strcmp@plt>
  40cbfc:	cbz	w0, 40cc68 <wcrtomb@plt+0xa3f8>
  40cc00:	strb	wzr, [x22]
  40cc04:	strh	wzr, [x19, #32]
  40cc08:	b	40cc88 <wcrtomb@plt+0xa418>
  40cc0c:	mov	w0, #0x30                  	// #48
  40cc10:	mov	x19, x12
  40cc14:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40cc18:	mov	x22, x0
  40cc1c:	mov	w0, #0x8                   	// #8
  40cc20:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40cc24:	str	x0, [x22]
  40cc28:	mov	w0, #0x2                   	// #2
  40cc2c:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40cc30:	str	x0, [x22, #8]
  40cc34:	mov	w0, #0x2                   	// #2
  40cc38:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40cc3c:	str	x0, [x22, #16]
  40cc40:	mov	w0, #0x2                   	// #2
  40cc44:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40cc48:	mov	w9, #0x1                   	// #1
  40cc4c:	mov	w8, #0x1                   	// #1
  40cc50:	mov	x12, x19
  40cc54:	str	x0, [x22, #24]
  40cc58:	str	x25, [x22, #40]
  40cc5c:	str	w8, [sp, #28]
  40cc60:	strh	w9, [x22, #32]
  40cc64:	b	40c838 <wcrtomb@plt+0x9fc8>
  40cc68:	ldrb	w8, [x25, #32]
  40cc6c:	ldrb	w9, [x19, #32]
  40cc70:	and	w8, w9, w8
  40cc74:	strb	w8, [x19, #32]
  40cc78:	ldrb	w8, [x25, #33]
  40cc7c:	ldrb	w9, [x19, #33]
  40cc80:	and	w8, w9, w8
  40cc84:	strb	w8, [x19, #33]
  40cc88:	ldr	x8, [x19, #8]
  40cc8c:	ldrb	w10, [x8]
  40cc90:	cbz	w10, 40ccc8 <wcrtomb@plt+0xa458>
  40cc94:	ldr	x9, [x25, #8]
  40cc98:	ldrb	w11, [x9]
  40cc9c:	cmp	w10, w11
  40cca0:	b.ne	40ccc8 <wcrtomb@plt+0xa458>  // b.any
  40cca4:	add	x10, x8, #0x1
  40cca8:	add	x9, x9, #0x1
  40ccac:	mov	x8, x10
  40ccb0:	ldrb	w10, [x10]
  40ccb4:	cbz	w10, 40ccc8 <wcrtomb@plt+0xa458>
  40ccb8:	ldrb	w11, [x9], #1
  40ccbc:	cmp	w10, w11
  40ccc0:	add	x10, x8, #0x1
  40ccc4:	b.eq	40ccac <wcrtomb@plt+0xa43c>  // b.none
  40ccc8:	strb	wzr, [x8]
  40cccc:	ldr	x22, [x19, #16]
  40ccd0:	mov	x0, x22
  40ccd4:	bl	402270 <strlen@plt>
  40ccd8:	ldr	x24, [x25, #16]
  40ccdc:	mov	x23, x0
  40cce0:	mov	x0, x24
  40cce4:	bl	402270 <strlen@plt>
  40cce8:	cmp	x23, x0
  40ccec:	csel	x9, x0, x23, gt
  40ccf0:	cmp	x9, #0x1
  40ccf4:	b.lt	40cd5c <wcrtomb@plt+0xa4ec>  // b.tstop
  40ccf8:	add	x10, x24, x0
  40ccfc:	mov	x8, xzr
  40cd00:	sub	x10, x10, #0x1
  40cd04:	sub	x11, x23, #0x1
  40cd08:	ldrb	w12, [x22, x11]
  40cd0c:	ldrb	w13, [x10]
  40cd10:	cmp	w12, w13
  40cd14:	b.ne	40cd30 <wcrtomb@plt+0xa4c0>  // b.any
  40cd18:	add	x8, x8, #0x1
  40cd1c:	sub	x10, x10, #0x1
  40cd20:	cmp	x8, x9
  40cd24:	sub	x11, x11, #0x1
  40cd28:	b.lt	40cd08 <wcrtomb@plt+0xa498>  // b.tstop
  40cd2c:	mov	x8, x9
  40cd30:	cbz	x8, 40cd60 <wcrtomb@plt+0xa4f0>
  40cd34:	mov	x9, xzr
  40cd38:	sub	x10, x23, x8
  40cd3c:	add	x11, x22, x10
  40cd40:	ldrb	w11, [x11, x9]
  40cd44:	strb	w11, [x22, x9]
  40cd48:	ldr	x22, [x19, #16]
  40cd4c:	add	x9, x9, #0x1
  40cd50:	cmp	x8, x9
  40cd54:	b.ne	40cd3c <wcrtomb@plt+0xa4cc>  // b.any
  40cd58:	b	40cd60 <wcrtomb@plt+0xa4f0>
  40cd5c:	mov	x8, xzr
  40cd60:	strb	wzr, [x22, x8]
  40cd64:	str	x19, [sp]
  40cd68:	ldr	x19, [x19]
  40cd6c:	ldr	x21, [x25]
  40cd70:	mov	w0, #0x8                   	// #8
  40cd74:	str	x25, [sp, #16]
  40cd78:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40cd7c:	ldr	x24, [x19]
  40cd80:	mov	x22, x0
  40cd84:	cbz	x24, 40cecc <wcrtomb@plt+0xa65c>
  40cd88:	mov	x8, xzr
  40cd8c:	mov	x28, x19
  40cd90:	stur	x19, [x29, #-16]
  40cd94:	b	40cdac <wcrtomb@plt+0xa53c>
  40cd98:	ldp	x19, x8, [x29, #-16]
  40cd9c:	add	x8, x8, #0x1
  40cda0:	add	x28, x19, x8, lsl #3
  40cda4:	ldr	x24, [x28]
  40cda8:	cbz	x24, 40cecc <wcrtomb@plt+0xa65c>
  40cdac:	ldr	x25, [x21]
  40cdb0:	cbz	x25, 40cd9c <wcrtomb@plt+0xa52c>
  40cdb4:	mov	x20, xzr
  40cdb8:	stur	x8, [x29, #-8]
  40cdbc:	mov	w0, #0x8                   	// #8
  40cdc0:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40cdc4:	ldrb	w8, [x24]
  40cdc8:	mov	x23, x0
  40cdcc:	cbnz	w8, 40ce40 <wcrtomb@plt+0xa5d0>
  40cdd0:	ldr	x24, [x23]
  40cdd4:	cbz	x24, 40ce1c <wcrtomb@plt+0xa5ac>
  40cdd8:	mov	w19, #0x8                   	// #8
  40cddc:	mov	x0, x24
  40cde0:	bl	402270 <strlen@plt>
  40cde4:	mov	x2, x0
  40cde8:	mov	x0, x22
  40cdec:	mov	x1, x24
  40cdf0:	bl	40d3c4 <wcrtomb@plt+0xab54>
  40cdf4:	ldr	x24, [x23, x19]
  40cdf8:	mov	x22, x0
  40cdfc:	add	x19, x19, #0x8
  40ce00:	cbnz	x24, 40cddc <wcrtomb@plt+0xa56c>
  40ce04:	ldr	x0, [x23]
  40ce08:	cbz	x0, 40ce1c <wcrtomb@plt+0xa5ac>
  40ce0c:	add	x19, x23, #0x8
  40ce10:	bl	402620 <free@plt>
  40ce14:	ldr	x0, [x19], #8
  40ce18:	cbnz	x0, 40ce10 <wcrtomb@plt+0xa5a0>
  40ce1c:	mov	x0, x23
  40ce20:	bl	402620 <free@plt>
  40ce24:	add	x20, x20, #0x1
  40ce28:	ldr	x25, [x21, x20, lsl #3]
  40ce2c:	cbz	x25, 40cd98 <wcrtomb@plt+0xa528>
  40ce30:	ldr	x24, [x28]
  40ce34:	b	40cdbc <wcrtomb@plt+0xa54c>
  40ce38:	ldrb	w8, [x24, #1]!
  40ce3c:	cbz	w8, 40cdd0 <wcrtomb@plt+0xa560>
  40ce40:	and	w26, w8, #0xff
  40ce44:	mov	x0, x25
  40ce48:	mov	w1, w26
  40ce4c:	bl	402640 <strchr@plt>
  40ce50:	cbz	x0, 40ce38 <wcrtomb@plt+0xa5c8>
  40ce54:	ldrb	w19, [x24, #1]
  40ce58:	mov	x27, xzr
  40ce5c:	b	40ce7c <wcrtomb@plt+0xa60c>
  40ce60:	mov	w8, #0x1                   	// #1
  40ce64:	cmp	x8, x27
  40ce68:	add	x0, x0, #0x1
  40ce6c:	mov	w1, w26
  40ce70:	csel	x27, x8, x27, gt
  40ce74:	bl	402640 <strchr@plt>
  40ce78:	cbz	x0, 40ceb0 <wcrtomb@plt+0xa640>
  40ce7c:	cbz	w19, 40ce60 <wcrtomb@plt+0xa5f0>
  40ce80:	mov	x8, xzr
  40ce84:	add	x9, x0, #0x1
  40ce88:	mov	w10, w19
  40ce8c:	ldrb	w11, [x9, x8]
  40ce90:	cmp	w11, w10, uxtb
  40ce94:	b.ne	40cea8 <wcrtomb@plt+0xa638>  // b.any
  40ce98:	add	x10, x24, x8
  40ce9c:	ldrb	w10, [x10, #2]
  40cea0:	add	x8, x8, #0x1
  40cea4:	cbnz	w10, 40ce8c <wcrtomb@plt+0xa61c>
  40cea8:	add	x8, x8, #0x1
  40ceac:	b	40ce64 <wcrtomb@plt+0xa5f4>
  40ceb0:	cbz	x27, 40ce38 <wcrtomb@plt+0xa5c8>
  40ceb4:	mov	x0, x23
  40ceb8:	mov	x1, x24
  40cebc:	mov	x2, x27
  40cec0:	bl	40d3c4 <wcrtomb@plt+0xab54>
  40cec4:	mov	x23, x0
  40cec8:	b	40ce38 <wcrtomb@plt+0xa5c8>
  40cecc:	ldr	x25, [sp]
  40ced0:	ldr	x8, [x25]
  40ced4:	ldr	x0, [x8]
  40ced8:	cbz	x0, 40cf04 <wcrtomb@plt+0xa694>
  40cedc:	ldr	x20, [sp, #16]
  40cee0:	ldr	x24, [sp, #32]
  40cee4:	adrp	x28, 429000 <_obstack_memory_used@@Base+0x10d70>
  40cee8:	add	x19, x8, #0x8
  40ceec:	add	x28, x28, #0xb5d
  40cef0:	bl	402620 <free@plt>
  40cef4:	ldr	x0, [x19], #8
  40cef8:	cbnz	x0, 40cef0 <wcrtomb@plt+0xa680>
  40cefc:	ldr	x8, [x25]
  40cf00:	b	40cf14 <wcrtomb@plt+0xa6a4>
  40cf04:	ldr	x20, [sp, #16]
  40cf08:	ldr	x24, [sp, #32]
  40cf0c:	adrp	x28, 429000 <_obstack_memory_used@@Base+0x10d70>
  40cf10:	add	x28, x28, #0xb5d
  40cf14:	mov	x0, x8
  40cf18:	bl	402620 <free@plt>
  40cf1c:	mov	x0, x20
  40cf20:	str	x22, [x25]
  40cf24:	bl	40d364 <wcrtomb@plt+0xaaf4>
  40cf28:	ldr	x12, [sp, #8]
  40cf2c:	b	40c83c <wcrtomb@plt+0x9fcc>
  40cf30:	cmp	w19, #0xfe
  40cf34:	b.ls	40cfc4 <wcrtomb@plt+0xa754>  // b.plast
  40cf38:	ldr	x25, [sp, #16]
  40cf3c:	ldr	x8, [x23, x22, lsl #3]
  40cf40:	add	x24, x12, #0x2
  40cf44:	cmp	x8, #0x105
  40cf48:	b.ne	40d018 <wcrtomb@plt+0xa7a8>  // b.any
  40cf4c:	sub	x8, x20, #0x1
  40cf50:	cmp	x24, x8
  40cf54:	b.ge	40d018 <wcrtomb@plt+0xa7a8>  // b.tcont
  40cf58:	mov	x9, xzr
  40cf5c:	add	x10, x12, #0x2
  40cf60:	mov	x20, x24
  40cf64:	cmn	x9, #0x2
  40cf68:	b.eq	40cf80 <wcrtomb@plt+0xa710>  // b.none
  40cf6c:	add	x11, x21, x9, lsl #3
  40cf70:	ldr	x11, [x11, #16]
  40cf74:	sub	x11, x11, #0x1
  40cf78:	cmp	x11, #0xfe
  40cf7c:	b.hi	40d1c0 <wcrtomb@plt+0xa950>  // b.pmore
  40cf80:	add	x11, x21, x9, lsl #3
  40cf84:	ldr	x11, [x11, #24]
  40cf88:	cmp	x11, #0x105
  40cf8c:	b.ne	40cfa4 <wcrtomb@plt+0xa734>  // b.any
  40cf90:	add	x9, x9, #0x2
  40cf94:	add	x11, x10, x9
  40cf98:	cmp	x11, x8
  40cf9c:	add	x20, x20, #0x2
  40cfa0:	b.lt	40cf64 <wcrtomb@plt+0xa6f4>  // b.tstop
  40cfa4:	add	x8, x12, x9
  40cfa8:	mov	x26, x25
  40cfac:	add	x20, x8, #0x2
  40cfb0:	b	40d020 <wcrtomb@plt+0xa7b0>
  40cfb4:	sub	x8, x26, #0x1
  40cfb8:	add	x26, x26, #0x1
  40cfbc:	cmp	x8, #0xfe
  40cfc0:	b.cs	40cf38 <wcrtomb@plt+0xa6c8>  // b.hs, b.nlast
  40cfc4:	ubfx	x8, x26, #6, #26
  40cfc8:	add	x9, x25, x24, lsl #5
  40cfcc:	ldr	x8, [x9, x8, lsl #3]
  40cfd0:	lsr	x8, x8, x26
  40cfd4:	tbz	w8, #0, 40cfb4 <wcrtomb@plt+0xa744>
  40cfd8:	ldur	w8, [x29, #-20]
  40cfdc:	tst	w8, #0xff
  40cfe0:	b.eq	40c918 <wcrtomb@plt+0xa0a8>  // b.none
  40cfe4:	mov	x27, x12
  40cfe8:	bl	4024d0 <__ctype_toupper_loc@plt>
  40cfec:	ldr	x8, [x0]
  40cff0:	ldr	w8, [x8, x26, lsl #2]
  40cff4:	stur	w8, [x29, #-8]
  40cff8:	bl	4024d0 <__ctype_toupper_loc@plt>
  40cffc:	ldr	x8, [x0]
  40d000:	ldur	w9, [x29, #-8]
  40d004:	mov	x12, x27
  40d008:	ldr	w8, [x8, x19, lsl #2]
  40d00c:	cmp	w9, w8
  40d010:	b.eq	40cfb4 <wcrtomb@plt+0xa744>  // b.none
  40d014:	b	40c918 <wcrtomb@plt+0xa0a8>
  40d018:	mov	x26, x25
  40d01c:	mov	x20, x24
  40d020:	ldur	w8, [x29, #-20]
  40d024:	sub	x21, x20, x12
  40d028:	mov	w0, #0x30                  	// #48
  40d02c:	mov	x27, x12
  40d030:	and	w25, w8, #0xff
  40d034:	asr	x8, x21, #1
  40d038:	add	x23, x8, #0x1
  40d03c:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40d040:	mov	x22, x0
  40d044:	mov	w0, #0x8                   	// #8
  40d048:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40d04c:	str	x0, [x22]
  40d050:	mov	x0, x23
  40d054:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40d058:	str	x0, [x22, #8]
  40d05c:	mov	x0, x23
  40d060:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40d064:	str	x0, [x22, #16]
  40d068:	mov	x0, x23
  40d06c:	bl	4157cc <wcrtomb@plt+0x12f5c>
  40d070:	str	x0, [x22, #24]
  40d074:	strh	wzr, [x22, #32]
  40d078:	str	x26, [x22, #40]
  40d07c:	cbz	w25, 40d0a0 <wcrtomb@plt+0xa830>
  40d080:	add	w8, w19, #0x80
  40d084:	cmp	w8, #0x17f
  40d088:	b.hi	40d09c <wcrtomb@plt+0xa82c>  // b.pmore
  40d08c:	bl	4024d0 <__ctype_toupper_loc@plt>
  40d090:	ldr	x8, [x0]
  40d094:	sbfiz	x9, x19, #2, #32
  40d098:	ldr	w19, [x8, x9]
  40d09c:	sxtw	x19, w19
  40d0a0:	ldr	x8, [x22, #16]
  40d0a4:	ldur	w11, [x29, #-20]
  40d0a8:	mov	x10, x27
  40d0ac:	cmp	x24, x20
  40d0b0:	strb	w19, [x8]
  40d0b4:	ldr	x8, [x22, #8]
  40d0b8:	strb	w19, [x8]
  40d0bc:	ldr	x8, [x22, #24]
  40d0c0:	strb	w19, [x8]
  40d0c4:	b.ge	40d154 <wcrtomb@plt+0xa8e4>  // b.tcont
  40d0c8:	ldr	x24, [sp, #32]
  40d0cc:	sub	x8, x21, #0x3
  40d0d0:	lsr	x8, x8, #1
  40d0d4:	add	x20, x8, #0x2
  40d0d8:	neg	x19, x8
  40d0dc:	mov	w21, #0x1                   	// #1
  40d0e0:	b	40d114 <wcrtomb@plt+0xa8a4>
  40d0e4:	sxtw	x23, w23
  40d0e8:	ldr	x8, [x22, #16]
  40d0ec:	add	x10, x10, #0x2
  40d0f0:	strb	w23, [x8, x21]
  40d0f4:	ldr	x8, [x22, #8]
  40d0f8:	strb	w23, [x8, x21]
  40d0fc:	ldr	x8, [x22, #24]
  40d100:	strb	w23, [x8, x21]
  40d104:	add	x21, x21, #0x1
  40d108:	add	x8, x19, x21
  40d10c:	cmp	x8, #0x2
  40d110:	b.eq	40d160 <wcrtomb@plt+0xa8f0>  // b.none
  40d114:	ldr	x8, [x24, #144]
  40d118:	tst	w11, #0xff
  40d11c:	add	x8, x8, x10, lsl #3
  40d120:	ldr	x23, [x8, #16]
  40d124:	b.eq	40d0e8 <wcrtomb@plt+0xa878>  // b.none
  40d128:	add	w8, w23, #0x80
  40d12c:	cmp	w8, #0x17f
  40d130:	b.hi	40d0e4 <wcrtomb@plt+0xa874>  // b.pmore
  40d134:	mov	x25, x10
  40d138:	bl	4024d0 <__ctype_toupper_loc@plt>
  40d13c:	ldr	x8, [x0]
  40d140:	sbfiz	x9, x23, #2, #32
  40d144:	ldur	w11, [x29, #-20]
  40d148:	mov	x10, x25
  40d14c:	ldr	w23, [x8, x9]
  40d150:	b	40d0e4 <wcrtomb@plt+0xa874>
  40d154:	ldr	x24, [sp, #32]
  40d158:	mov	w20, #0x1                   	// #1
  40d15c:	b	40d164 <wcrtomb@plt+0xa8f4>
  40d160:	mov	x27, x10
  40d164:	ldr	x8, [x22, #16]
  40d168:	mov	x2, x20
  40d16c:	strb	wzr, [x8, x20]
  40d170:	ldr	x8, [x22, #8]
  40d174:	strb	wzr, [x8, x20]
  40d178:	ldr	x8, [x22, #24]
  40d17c:	strb	wzr, [x8, x20]
  40d180:	ldr	x0, [x22]
  40d184:	ldr	x1, [x22, #24]
  40d188:	bl	40d3c4 <wcrtomb@plt+0xab54>
  40d18c:	mov	x25, x22
  40d190:	mov	x12, x27
  40d194:	str	x0, [x22]
  40d198:	b	40c83c <wcrtomb@plt+0x9fcc>
  40d19c:	mov	w8, wzr
  40d1a0:	strb	wzr, [x22]
  40d1a4:	strb	wzr, [x21, #32]
  40d1a8:	mov	x0, x25
  40d1ac:	strb	w8, [x21, #33]
  40d1b0:	bl	40d364 <wcrtomb@plt+0xaaf4>
  40d1b4:	mov	x25, x21
  40d1b8:	mov	x12, x20
  40d1bc:	b	40c83c <wcrtomb@plt+0x9fcc>
  40d1c0:	mov	x26, x25
  40d1c4:	b	40d020 <wcrtomb@plt+0xa7b0>
  40d1c8:	adrp	x28, 429000 <_obstack_memory_used@@Base+0x10d70>
  40d1cc:	mov	x25, xzr
  40d1d0:	mov	w20, wzr
  40d1d4:	mov	w22, wzr
  40d1d8:	mov	w19, wzr
  40d1dc:	add	x28, x28, #0xb5d
  40d1e0:	ldrb	w8, [x28]
  40d1e4:	cbz	w8, 40d2d8 <wcrtomb@plt+0xaa68>
  40d1e8:	mov	x0, x28
  40d1ec:	bl	402270 <strlen@plt>
  40d1f0:	add	x0, x0, #0x4
  40d1f4:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40d1f8:	mov	x21, x0
  40d1fc:	strb	w19, [x0]
  40d200:	strb	w22, [x0, #1]
  40d204:	strb	w20, [x0, #2]
  40d208:	add	x0, x0, #0x3
  40d20c:	mov	x1, x28
  40d210:	bl	402690 <strcpy@plt>
  40d214:	cbz	x25, 40d22c <wcrtomb@plt+0xa9bc>
  40d218:	ldr	x19, [x25, #40]
  40d21c:	mov	x0, x25
  40d220:	bl	40d364 <wcrtomb@plt+0xaaf4>
  40d224:	mov	x25, x19
  40d228:	cbnz	x19, 40d218 <wcrtomb@plt+0xa9a8>
  40d22c:	mov	x0, x21
  40d230:	ldp	x20, x19, [sp, #144]
  40d234:	ldp	x22, x21, [sp, #128]
  40d238:	ldp	x24, x23, [sp, #112]
  40d23c:	ldp	x26, x25, [sp, #96]
  40d240:	ldp	x28, x27, [sp, #80]
  40d244:	ldp	x29, x30, [sp, #64]
  40d248:	add	sp, sp, #0xa0
  40d24c:	ret
  40d250:	ldr	x8, [x25, #40]
  40d254:	cbnz	x8, 40d344 <wcrtomb@plt+0xaad4>
  40d258:	ldr	x8, [x25]
  40d25c:	ldr	x21, [x8]
  40d260:	cbz	x21, 40d2ac <wcrtomb@plt+0xaa3c>
  40d264:	adrp	x28, 429000 <_obstack_memory_used@@Base+0x10d70>
  40d268:	add	x19, x8, #0x8
  40d26c:	add	x28, x28, #0xb5d
  40d270:	mov	x0, x21
  40d274:	bl	402270 <strlen@plt>
  40d278:	mov	x22, x0
  40d27c:	mov	x0, x28
  40d280:	bl	402270 <strlen@plt>
  40d284:	cmp	x22, x0
  40d288:	csel	x28, x21, x28, hi  // hi = pmore
  40d28c:	ldr	x21, [x19], #8
  40d290:	cbnz	x21, 40d270 <wcrtomb@plt+0xaa00>
  40d294:	b	40d2b4 <wcrtomb@plt+0xaa44>
  40d298:	mov	w20, wzr
  40d29c:	mov	w22, wzr
  40d2a0:	ldrb	w8, [x28]
  40d2a4:	cbnz	w8, 40d1e8 <wcrtomb@plt+0xa978>
  40d2a8:	b	40d2d8 <wcrtomb@plt+0xaa68>
  40d2ac:	adrp	x28, 429000 <_obstack_memory_used@@Base+0x10d70>
  40d2b0:	add	x28, x28, #0xb5d
  40d2b4:	ldr	x1, [x25, #24]
  40d2b8:	mov	x0, x28
  40d2bc:	bl	402600 <strcmp@plt>
  40d2c0:	cbz	w0, 40d2e4 <wcrtomb@plt+0xaa74>
  40d2c4:	mov	w20, wzr
  40d2c8:	mov	w22, wzr
  40d2cc:	mov	w19, wzr
  40d2d0:	ldrb	w8, [x28]
  40d2d4:	cbnz	w8, 40d1e8 <wcrtomb@plt+0xa978>
  40d2d8:	mov	x21, xzr
  40d2dc:	cbnz	x25, 40d218 <wcrtomb@plt+0xa9a8>
  40d2e0:	b	40d22c <wcrtomb@plt+0xa9bc>
  40d2e4:	ldr	w8, [sp, #28]
  40d2e8:	tbz	w8, #0, 40d2f4 <wcrtomb@plt+0xaa84>
  40d2ec:	ldrb	w8, [x25, #32]
  40d2f0:	cbz	w8, 40d30c <wcrtomb@plt+0xaa9c>
  40d2f4:	ldr	w8, [sp, #24]
  40d2f8:	tbz	w8, #0, 40d304 <wcrtomb@plt+0xaa94>
  40d2fc:	ldrb	w8, [x25, #33]
  40d300:	cbz	w8, 40d30c <wcrtomb@plt+0xaa9c>
  40d304:	mov	w19, #0x1                   	// #1
  40d308:	b	40d310 <wcrtomb@plt+0xaaa0>
  40d30c:	mov	w19, wzr
  40d310:	ldrb	w22, [x25, #32]
  40d314:	ldrb	w20, [x25, #33]
  40d318:	ldrb	w8, [x28]
  40d31c:	cbnz	w8, 40d1e8 <wcrtomb@plt+0xa978>
  40d320:	b	40d2d8 <wcrtomb@plt+0xaa68>
  40d324:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40d328:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40d32c:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40d330:	add	x0, x0, #0x5c1
  40d334:	add	x1, x1, #0x5ee
  40d338:	add	x3, x3, #0x5f4
  40d33c:	mov	w2, #0xff6                 	// #4086
  40d340:	bl	4027d0 <__assert_fail@plt>
  40d344:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40d348:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40d34c:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40d350:	add	x0, x0, #0x620
  40d354:	add	x1, x1, #0x5ee
  40d358:	add	x3, x3, #0x5f4
  40d35c:	mov	w2, #0x1039                	// #4153
  40d360:	bl	4027d0 <__assert_fail@plt>
  40d364:	stp	x29, x30, [sp, #-32]!
  40d368:	stp	x20, x19, [sp, #16]
  40d36c:	ldr	x8, [x0]
  40d370:	mov	x19, x0
  40d374:	mov	x29, sp
  40d378:	ldr	x0, [x8]
  40d37c:	cbz	x0, 40d394 <wcrtomb@plt+0xab24>
  40d380:	add	x20, x8, #0x8
  40d384:	bl	402620 <free@plt>
  40d388:	ldr	x0, [x20], #8
  40d38c:	cbnz	x0, 40d384 <wcrtomb@plt+0xab14>
  40d390:	ldr	x8, [x19]
  40d394:	mov	x0, x8
  40d398:	bl	402620 <free@plt>
  40d39c:	ldr	x0, [x19, #8]
  40d3a0:	bl	402620 <free@plt>
  40d3a4:	ldr	x0, [x19, #16]
  40d3a8:	bl	402620 <free@plt>
  40d3ac:	ldr	x0, [x19, #24]
  40d3b0:	bl	402620 <free@plt>
  40d3b4:	mov	x0, x19
  40d3b8:	ldp	x20, x19, [sp, #16]
  40d3bc:	ldp	x29, x30, [sp], #32
  40d3c0:	b	402620 <free@plt>
  40d3c4:	stp	x29, x30, [sp, #-64]!
  40d3c8:	stp	x20, x19, [sp, #48]
  40d3cc:	mov	x19, x0
  40d3d0:	add	x0, x2, #0x1
  40d3d4:	stp	x24, x23, [sp, #16]
  40d3d8:	stp	x22, x21, [sp, #32]
  40d3dc:	mov	x29, sp
  40d3e0:	mov	x21, x2
  40d3e4:	mov	x22, x1
  40d3e8:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40d3ec:	mov	x1, x22
  40d3f0:	mov	x2, x21
  40d3f4:	mov	x20, x0
  40d3f8:	bl	402210 <memcpy@plt>
  40d3fc:	strb	wzr, [x20, x21]
  40d400:	ldr	x21, [x19]
  40d404:	cbz	x21, 40d488 <wcrtomb@plt+0xac18>
  40d408:	mov	x23, xzr
  40d40c:	mov	x0, x21
  40d410:	mov	x1, x20
  40d414:	bl	402730 <strstr@plt>
  40d418:	cbnz	x0, 40d494 <wcrtomb@plt+0xac24>
  40d41c:	add	x8, x19, x23, lsl #3
  40d420:	ldr	x0, [x8, #8]
  40d424:	add	x22, x23, #0x1
  40d428:	mov	x23, x22
  40d42c:	cbnz	x0, 40d410 <wcrtomb@plt+0xaba0>
  40d430:	cbz	x21, 40d4a8 <wcrtomb@plt+0xac38>
  40d434:	mov	x23, xzr
  40d438:	mov	x24, x19
  40d43c:	b	40d450 <wcrtomb@plt+0xabe0>
  40d440:	add	x23, x23, #0x1
  40d444:	add	x24, x19, x23, lsl #3
  40d448:	ldr	x21, [x24]
  40d44c:	cbz	x21, 40d4a8 <wcrtomb@plt+0xac38>
  40d450:	mov	x0, x20
  40d454:	mov	x1, x21
  40d458:	bl	402730 <strstr@plt>
  40d45c:	cbz	x0, 40d440 <wcrtomb@plt+0xabd0>
  40d460:	mov	x0, x21
  40d464:	bl	402620 <free@plt>
  40d468:	sub	x22, x22, #0x1
  40d46c:	cmp	x22, x23
  40d470:	b.eq	40d4a4 <wcrtomb@plt+0xac34>  // b.none
  40d474:	lsl	x8, x22, #3
  40d478:	ldr	x9, [x19, x8]
  40d47c:	str	x9, [x24]
  40d480:	str	xzr, [x19, x8]
  40d484:	b	40d444 <wcrtomb@plt+0xabd4>
  40d488:	mov	x22, xzr
  40d48c:	mov	w8, #0x2                   	// #2
  40d490:	b	40d4b4 <wcrtomb@plt+0xac44>
  40d494:	mov	x0, x20
  40d498:	bl	402620 <free@plt>
  40d49c:	mov	x0, x19
  40d4a0:	b	40d4c8 <wcrtomb@plt+0xac58>
  40d4a4:	mov	x22, x23
  40d4a8:	add	x8, x22, #0x2
  40d4ac:	lsr	x9, x8, #60
  40d4b0:	cbnz	x9, 40d4dc <wcrtomb@plt+0xac6c>
  40d4b4:	lsl	x1, x8, #3
  40d4b8:	mov	x0, x19
  40d4bc:	bl	415654 <wcrtomb@plt+0x12de4>
  40d4c0:	add	x8, x0, x22, lsl #3
  40d4c4:	stp	x20, xzr, [x8]
  40d4c8:	ldp	x20, x19, [sp, #48]
  40d4cc:	ldp	x22, x21, [sp, #32]
  40d4d0:	ldp	x24, x23, [sp, #16]
  40d4d4:	ldp	x29, x30, [sp], #64
  40d4d8:	ret
  40d4dc:	bl	415898 <wcrtomb@plt+0x13028>
  40d4e0:	b	402620 <free@plt>
  40d4e4:	mov	w0, #0x920                 	// #2336
  40d4e8:	b	4155d4 <wcrtomb@plt+0x12d64>
  40d4ec:	stp	x29, x30, [sp, #-96]!
  40d4f0:	stp	x22, x21, [sp, #64]
  40d4f4:	mov	x21, x2
  40d4f8:	mov	x22, x1
  40d4fc:	mov	w2, #0x410                 	// #1040
  40d500:	mov	w1, wzr
  40d504:	stp	x28, x27, [sp, #16]
  40d508:	stp	x26, x25, [sp, #32]
  40d50c:	stp	x24, x23, [sp, #48]
  40d510:	stp	x20, x19, [sp, #80]
  40d514:	mov	x29, sp
  40d518:	mov	w20, w3
  40d51c:	mov	x19, x0
  40d520:	bl	402470 <memset@plt>
  40d524:	ldrb	w8, [x22]
  40d528:	adrp	x9, 40d000 <wcrtomb@plt+0xa790>
  40d52c:	adrp	x10, 40d000 <wcrtomb@plt+0xa790>
  40d530:	add	x9, x9, #0x6b0
  40d534:	add	x10, x10, #0x6bc
  40d538:	cmp	w8, #0x0
  40d53c:	csel	x8, x10, x9, eq  // eq = none
  40d540:	add	x0, x19, #0x418
  40d544:	mov	w2, #0x504                 	// #1284
  40d548:	mov	x1, x22
  40d54c:	str	x8, [x19, #1040]
  40d550:	bl	402210 <memcpy@plt>
  40d554:	ldrb	w8, [x19, #1048]
  40d558:	tst	w20, #0x2
  40d55c:	mov	w12, #0xa                   	// #10
  40d560:	mov	x9, #0xffffffffffffffff    	// #-1
  40d564:	eor	w8, w8, #0x1
  40d568:	add	x10, x19, #0x1c0
  40d56c:	mov	w23, #0x1                   	// #1
  40d570:	ubfx	w11, w21, #22, #1
  40d574:	and	w24, w20, #0x1
  40d578:	strb	w8, [x19, #192]
  40d57c:	csel	w8, w12, wzr, eq  // eq = none
  40d580:	csel	x26, x12, xzr, eq  // eq = none
  40d584:	str	x9, [x19, #24]
  40d588:	strb	w23, [x19, #456]
  40d58c:	strb	w11, [x10, #9]
  40d590:	strb	w8, [x10, #11]
  40d594:	add	x8, x10, x26
  40d598:	strb	w24, [x10, #10]
  40d59c:	str	x21, [x19, #448]
  40d5a0:	mov	x21, #0x2401                	// #9217
  40d5a4:	mov	x22, xzr
  40d5a8:	add	x20, x19, #0x51c
  40d5ac:	mov	w25, #0x4                   	// #4
  40d5b0:	lsl	x27, x23, x26
  40d5b4:	add	x28, x8, #0xc
  40d5b8:	movk	x21, #0xc000, lsl #32
  40d5bc:	b	40d5ec <wcrtomb@plt+0xad7c>
  40d5c0:	cmp	x22, #0x40
  40d5c4:	lsl	x8, x23, x22
  40d5c8:	cset	w9, cc  // cc = lo, ul, last
  40d5cc:	tst	x8, x21
  40d5d0:	cset	w8, ne  // ne = any
  40d5d4:	and	w8, w9, w8
  40d5d8:	add	x9, x19, x22
  40d5dc:	add	x22, x22, #0x1
  40d5e0:	cmp	x22, #0x100
  40d5e4:	strb	w8, [x9, #716]
  40d5e8:	b.eq	40d694 <wcrtomb@plt+0xae24>  // b.none
  40d5ec:	cbnz	w24, 40d614 <wcrtomb@plt+0xada4>
  40d5f0:	cmp	x26, x22
  40d5f4:	b.ne	40d614 <wcrtomb@plt+0xada4>  // b.any
  40d5f8:	strb	w25, [x28]
  40d5fc:	ldr	x8, [x19, #1008]
  40d600:	orr	x8, x8, x27
  40d604:	str	x8, [x19, #1008]
  40d608:	ldrb	w8, [x19, #1050]
  40d60c:	cbnz	w8, 40d670 <wcrtomb@plt+0xae00>
  40d610:	b	40d5c0 <wcrtomb@plt+0xad50>
  40d614:	ldr	w8, [x20, x22, lsl #2]
  40d618:	cmn	w8, #0x1
  40d61c:	b.eq	40d680 <wcrtomb@plt+0xae10>  // b.none
  40d620:	bl	402610 <__ctype_b_loc@plt>
  40d624:	ldr	x8, [x0]
  40d628:	cmp	x22, #0x5f
  40d62c:	cset	w9, eq  // eq = none
  40d630:	add	x10, x19, x22
  40d634:	ldrh	w8, [x8, x22, lsl #1]
  40d638:	and	w8, w8, #0x8
  40d63c:	orr	w8, w9, w8, lsr #3
  40d640:	cmp	w8, #0x0
  40d644:	cinc	w9, w23, ne  // ne = any
  40d648:	strb	w9, [x10, #460]
  40d64c:	cbz	w8, 40d668 <wcrtomb@plt+0xadf8>
  40d650:	ubfx	x8, x22, #6, #26
  40d654:	add	x8, x19, x8, lsl #3
  40d658:	ldr	x9, [x8, #976]
  40d65c:	lsl	x10, x23, x22
  40d660:	orr	x9, x9, x10
  40d664:	str	x9, [x8, #976]
  40d668:	ldrb	w8, [x19, #1050]
  40d66c:	cbz	w8, 40d5c0 <wcrtomb@plt+0xad50>
  40d670:	and	x8, x22, #0xc0
  40d674:	cmp	x8, #0x80
  40d678:	cset	w8, ne  // ne = any
  40d67c:	b	40d5d8 <wcrtomb@plt+0xad68>
  40d680:	add	x8, x19, x22
  40d684:	strb	w23, [x8, #460]
  40d688:	ldrb	w8, [x19, #1050]
  40d68c:	cbnz	w8, 40d670 <wcrtomb@plt+0xae00>
  40d690:	b	40d5c0 <wcrtomb@plt+0xad50>
  40d694:	ldp	x20, x19, [sp, #80]
  40d698:	ldp	x22, x21, [sp, #64]
  40d69c:	ldp	x24, x23, [sp, #48]
  40d6a0:	ldp	x26, x25, [sp, #32]
  40d6a4:	ldp	x28, x27, [sp, #16]
  40d6a8:	ldp	x29, x30, [sp], #96
  40d6ac:	ret
  40d6b0:	and	w3, w3, #0x1
  40d6b4:	mov	w5, #0x1                   	// #1
  40d6b8:	b	40f650 <wcrtomb@plt+0xcde0>
  40d6bc:	and	w3, w3, #0x1
  40d6c0:	mov	w5, wzr
  40d6c4:	b	40f650 <wcrtomb@plt+0xcde0>
  40d6c8:	stp	x29, x30, [sp, #-32]!
  40d6cc:	movi	v0.2d, #0x0
  40d6d0:	mov	x8, #0xffffffffffffffff    	// #-1
  40d6d4:	stp	x20, x19, [sp, #16]
  40d6d8:	stp	q0, q0, [x0, #416]
  40d6dc:	stp	q0, q0, [x0, #384]
  40d6e0:	stp	q0, q0, [x0, #352]
  40d6e4:	stp	q0, q0, [x0, #320]
  40d6e8:	stp	q0, q0, [x0, #288]
  40d6ec:	stp	q0, q0, [x0, #256]
  40d6f0:	stp	q0, q0, [x0, #224]
  40d6f4:	stp	q0, q0, [x0, #192]
  40d6f8:	stp	q0, q0, [x0, #160]
  40d6fc:	stp	q0, q0, [x0, #128]
  40d700:	stp	q0, q0, [x0, #96]
  40d704:	stp	q0, q0, [x0, #64]
  40d708:	stp	q0, q0, [x0, #32]
  40d70c:	stp	q0, q0, [x0]
  40d710:	str	x8, [x0, #24]
  40d714:	ldrb	w8, [x1, #192]
  40d718:	mov	x19, x1
  40d71c:	mov	x20, x0
  40d720:	add	x0, x0, #0x1c0
  40d724:	add	x1, x1, #0x1c0
  40d728:	mov	w2, #0x250                 	// #592
  40d72c:	mov	x29, sp
  40d730:	strb	w8, [x20, #192]
  40d734:	bl	402210 <memcpy@plt>
  40d738:	ldr	x8, [x19, #1040]
  40d73c:	add	x0, x20, #0x418
  40d740:	add	x1, x19, #0x418
  40d744:	mov	w2, #0x504                 	// #1284
  40d748:	str	x8, [x20, #1040]
  40d74c:	ldp	x20, x19, [sp, #16]
  40d750:	ldp	x29, x30, [sp], #32
  40d754:	b	402210 <memcpy@plt>
  40d758:	sub	sp, sp, #0x50
  40d75c:	stp	x20, x19, [sp, #64]
  40d760:	mov	x19, x0
  40d764:	add	x0, sp, #0x10
  40d768:	add	x2, sp, #0x8
  40d76c:	stp	x29, x30, [sp, #32]
  40d770:	stp	x22, x21, [sp, #48]
  40d774:	add	x29, sp, #0x20
  40d778:	str	xzr, [sp, #8]
  40d77c:	bl	402870 <wcrtomb@plt>
  40d780:	cmn	x0, #0x1
  40d784:	b.eq	40d7f8 <wcrtomb@plt+0xaf88>  // b.none
  40d788:	ldrb	w1, [sp, #16]
  40d78c:	mov	x20, x0
  40d790:	cmp	w20, #0x1
  40d794:	b.eq	40d800 <wcrtomb@plt+0xaf90>  // b.none
  40d798:	mov	w2, #0x1                   	// #1
  40d79c:	mov	x0, x19
  40d7a0:	bl	40d820 <wcrtomb@plt+0xafb0>
  40d7a4:	cmp	w20, #0x2
  40d7a8:	b.lt	40d80c <wcrtomb@plt+0xaf9c>  // b.tstop
  40d7ac:	sub	w8, w20, #0x1
  40d7b0:	and	x9, x20, #0xffffffff
  40d7b4:	add	x10, sp, #0x10
  40d7b8:	sub	x20, x8, #0x1
  40d7bc:	orr	x21, x10, #0x1
  40d7c0:	sub	x22, x9, #0x1
  40d7c4:	ldrb	w1, [x21], #1
  40d7c8:	cmp	x20, #0x0
  40d7cc:	cset	w8, eq  // eq = none
  40d7d0:	lsl	w2, w8, #1
  40d7d4:	mov	x0, x19
  40d7d8:	bl	40d820 <wcrtomb@plt+0xafb0>
  40d7dc:	mov	w1, #0x105                 	// #261
  40d7e0:	mov	x0, x19
  40d7e4:	bl	40a490 <wcrtomb@plt+0x7c20>
  40d7e8:	subs	x22, x22, #0x1
  40d7ec:	sub	x20, x20, #0x1
  40d7f0:	b.ne	40d7c4 <wcrtomb@plt+0xaf54>  // b.any
  40d7f4:	b	40d80c <wcrtomb@plt+0xaf9c>
  40d7f8:	mov	x1, xzr
  40d7fc:	strb	wzr, [sp, #16]
  40d800:	mov	w2, #0x3                   	// #3
  40d804:	mov	x0, x19
  40d808:	bl	40d820 <wcrtomb@plt+0xafb0>
  40d80c:	ldp	x20, x19, [sp, #64]
  40d810:	ldp	x22, x21, [sp, #48]
  40d814:	ldp	x29, x30, [sp, #32]
  40d818:	add	sp, sp, #0x50
  40d81c:	ret
  40d820:	stp	x29, x30, [sp, #-48]!
  40d824:	str	x21, [sp, #16]
  40d828:	stp	x20, x19, [sp, #32]
  40d82c:	mov	x8, x0
  40d830:	ldr	x9, [x8, #160]!
  40d834:	mov	w21, w2
  40d838:	mov	x19, x0
  40d83c:	mov	x20, x1
  40d840:	ldur	x10, [x8, #-8]
  40d844:	mov	x29, sp
  40d848:	cmp	x9, x10
  40d84c:	b.ne	40d888 <wcrtomb@plt+0xb018>  // b.any
  40d850:	ldr	x0, [x19, #144]
  40d854:	mov	w2, #0x1                   	// #1
  40d858:	mov	x3, #0xffffffffffffffff    	// #-1
  40d85c:	mov	w4, #0x8                   	// #8
  40d860:	mov	x1, x8
  40d864:	bl	40d920 <wcrtomb@plt+0xb0b0>
  40d868:	ldrb	w8, [x19, #1048]
  40d86c:	str	x0, [x19, #144]
  40d870:	cbz	w8, 40d888 <wcrtomb@plt+0xb018>
  40d874:	ldr	x1, [x19, #160]
  40d878:	tbnz	x1, #63, 40d91c <wcrtomb@plt+0xb0ac>
  40d87c:	ldr	x0, [x19, #280]
  40d880:	bl	415654 <wcrtomb@plt+0x12de4>
  40d884:	str	x0, [x19, #280]
  40d888:	ldrb	w8, [x19, #1048]
  40d88c:	cbz	w8, 40d89c <wcrtomb@plt+0xb02c>
  40d890:	ldr	x8, [x19, #280]
  40d894:	ldr	x9, [x19, #152]
  40d898:	strb	w21, [x8, x9]
  40d89c:	ldp	x10, x9, [x19, #144]
  40d8a0:	sub	x8, x20, #0x100
  40d8a4:	cmp	x8, #0x12
  40d8a8:	add	x11, x9, #0x1
  40d8ac:	str	x11, [x19, #152]
  40d8b0:	str	x20, [x10, x9, lsl #3]
  40d8b4:	b.hi	40d8e0 <wcrtomb@plt+0xb070>  // b.pmore
  40d8b8:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40d8bc:	add	x9, x9, #0x2f6
  40d8c0:	adr	x10, 40d8d0 <wcrtomb@plt+0xb060>
  40d8c4:	ldrb	w11, [x9, x8]
  40d8c8:	add	x10, x10, x11, lsl #2
  40d8cc:	br	x10
  40d8d0:	ldr	x8, [x19, #136]
  40d8d4:	sub	x8, x8, #0x1
  40d8d8:	b	40d8f4 <wcrtomb@plt+0xb084>
  40d8dc:	strb	wzr, [x19, #192]
  40d8e0:	ldr	x8, [x19, #176]
  40d8e4:	add	x8, x8, #0x1
  40d8e8:	str	x8, [x19, #176]
  40d8ec:	ldr	x8, [x19, #136]
  40d8f0:	add	x8, x8, #0x1
  40d8f4:	str	x8, [x19, #136]
  40d8f8:	ldr	x8, [x19, #136]
  40d8fc:	ldr	x9, [x19, #168]
  40d900:	cmp	x8, x9
  40d904:	b.le	40d90c <wcrtomb@plt+0xb09c>
  40d908:	str	x8, [x19, #168]
  40d90c:	ldp	x20, x19, [sp, #32]
  40d910:	ldr	x21, [sp, #16]
  40d914:	ldp	x29, x30, [sp], #48
  40d918:	ret
  40d91c:	bl	415898 <wcrtomb@plt+0x13028>
  40d920:	stp	x29, x30, [sp, #-32]!
  40d924:	stp	x20, x19, [sp, #16]
  40d928:	ldr	x8, [x1]
  40d92c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40d930:	mov	x19, x1
  40d934:	mov	x29, sp
  40d938:	adds	x10, x8, x8, asr #1
  40d93c:	csel	x9, x9, x10, vs
  40d940:	cmp	x9, x3
  40d944:	mov	x10, #0xffffffffffffffff    	// #-1
  40d948:	ccmp	x3, x10, #0x4, gt
  40d94c:	csel	x20, x3, x9, gt
  40d950:	tbnz	x4, #63, 40d970 <wcrtomb@plt+0xb100>
  40d954:	cbz	x4, 40d9c0 <wcrtomb@plt+0xb150>
  40d958:	tbnz	x20, #63, 40d990 <wcrtomb@plt+0xb120>
  40d95c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40d960:	udiv	x10, x9, x4
  40d964:	cmp	x10, x20
  40d968:	b.ge	40d9c0 <wcrtomb@plt+0xb150>  // b.tcont
  40d96c:	b	40d9d0 <wcrtomb@plt+0xb160>
  40d970:	tbnz	x20, #63, 40d9b0 <wcrtomb@plt+0xb140>
  40d974:	cmn	x4, #0x1
  40d978:	b.eq	40d9c0 <wcrtomb@plt+0xb150>  // b.none
  40d97c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40d980:	sdiv	x9, x9, x4
  40d984:	cmp	x9, x20
  40d988:	b.ge	40d9c0 <wcrtomb@plt+0xb150>  // b.tcont
  40d98c:	b	40d9a8 <wcrtomb@plt+0xb138>
  40d990:	cmn	x20, #0x1
  40d994:	b.eq	40d9c0 <wcrtomb@plt+0xb150>  // b.none
  40d998:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40d99c:	sdiv	x9, x9, x20
  40d9a0:	cmp	x9, x4
  40d9a4:	b.ge	40d9c0 <wcrtomb@plt+0xb150>  // b.tcont
  40d9a8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40d9ac:	b	40d9d0 <wcrtomb@plt+0xb160>
  40d9b0:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40d9b4:	sdiv	x10, x9, x4
  40d9b8:	cmp	x20, x10
  40d9bc:	b.lt	40d9d0 <wcrtomb@plt+0xb160>  // b.tstop
  40d9c0:	mul	x1, x20, x4
  40d9c4:	cmp	x1, #0x7f
  40d9c8:	b.gt	40d9d8 <wcrtomb@plt+0xb168>
  40d9cc:	mov	w9, #0x80                  	// #128
  40d9d0:	sdiv	x20, x9, x4
  40d9d4:	mul	x1, x20, x4
  40d9d8:	cbnz	x0, 40d9e0 <wcrtomb@plt+0xb170>
  40d9dc:	str	xzr, [x19]
  40d9e0:	sub	x9, x20, x8
  40d9e4:	cmp	x9, x2
  40d9e8:	b.ge	40da80 <wcrtomb@plt+0xb210>  // b.tcont
  40d9ec:	cmp	x3, #0x0
  40d9f0:	cset	w9, ge  // ge = tcont
  40d9f4:	adds	x20, x8, x2
  40d9f8:	cset	w10, vs
  40d9fc:	cmp	x20, x3
  40da00:	cset	w8, gt
  40da04:	tbnz	w10, #0, 40da68 <wcrtomb@plt+0xb1f8>
  40da08:	and	w8, w9, w8
  40da0c:	tbnz	w8, #0, 40da68 <wcrtomb@plt+0xb1f8>
  40da10:	tbnz	x4, #63, 40da30 <wcrtomb@plt+0xb1c0>
  40da14:	cbz	x4, 40da7c <wcrtomb@plt+0xb20c>
  40da18:	tbnz	x20, #63, 40da50 <wcrtomb@plt+0xb1e0>
  40da1c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40da20:	udiv	x8, x8, x4
  40da24:	cmp	x8, x20
  40da28:	b.ge	40da7c <wcrtomb@plt+0xb20c>  // b.tcont
  40da2c:	b	40da68 <wcrtomb@plt+0xb1f8>
  40da30:	tbnz	x20, #63, 40da6c <wcrtomb@plt+0xb1fc>
  40da34:	cmn	x4, #0x1
  40da38:	b.eq	40da7c <wcrtomb@plt+0xb20c>  // b.none
  40da3c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40da40:	sdiv	x8, x8, x4
  40da44:	cmp	x8, x20
  40da48:	b.ge	40da7c <wcrtomb@plt+0xb20c>  // b.tcont
  40da4c:	b	40da68 <wcrtomb@plt+0xb1f8>
  40da50:	cmn	x20, #0x1
  40da54:	b.eq	40da7c <wcrtomb@plt+0xb20c>  // b.none
  40da58:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40da5c:	sdiv	x8, x8, x20
  40da60:	cmp	x8, x4
  40da64:	b.ge	40da7c <wcrtomb@plt+0xb20c>  // b.tcont
  40da68:	bl	415898 <wcrtomb@plt+0x13028>
  40da6c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40da70:	sdiv	x8, x8, x4
  40da74:	cmp	x20, x8
  40da78:	b.lt	40da68 <wcrtomb@plt+0xb1f8>  // b.tstop
  40da7c:	mul	x1, x20, x4
  40da80:	bl	415654 <wcrtomb@plt+0x12de4>
  40da84:	str	x20, [x19]
  40da88:	ldp	x20, x19, [sp, #16]
  40da8c:	ldp	x29, x30, [sp], #32
  40da90:	ret
  40da94:	sub	sp, sp, #0x160
  40da98:	stp	x29, x30, [sp, #256]
  40da9c:	add	x29, sp, #0x100
  40daa0:	sub	x8, x29, #0x40
  40daa4:	movi	v0.2d, #0x0
  40daa8:	stp	x28, x27, [sp, #272]
  40daac:	stp	x26, x25, [sp, #288]
  40dab0:	stp	x24, x23, [sp, #304]
  40dab4:	stp	x22, x21, [sp, #320]
  40dab8:	stp	x20, x19, [sp, #336]
  40dabc:	str	xzr, [x0, #104]
  40dac0:	stp	q0, q0, [x8]
  40dac4:	mov	x19, x0
  40dac8:	ldr	x2, [x19, #40]!
  40dacc:	cbz	x2, 40e99c <wcrtomb@plt+0xc12c>
  40dad0:	mov	x24, x0
  40dad4:	ldr	x1, [x24, #32]!
  40dad8:	mov	x23, x0
  40dadc:	add	x25, x0, #0x48
  40dae0:	ldrb	w8, [x1]
  40dae4:	add	x8, x0, x8, lsl #2
  40dae8:	ldr	w27, [x8, #1308]
  40daec:	cmn	w27, #0x1
  40daf0:	b.ne	40db34 <wcrtomb@plt+0xb2c4>  // b.any
  40daf4:	add	x20, x23, #0x110
  40daf8:	add	x0, sp, #0x3c
  40dafc:	mov	x3, x20
  40db00:	bl	417eb0 <wcrtomb@plt+0x15640>
  40db04:	sub	x8, x0, #0x1
  40db08:	cmn	x8, #0x3
  40db0c:	b.cs	40db30 <wcrtomb@plt+0xb2c0>  // b.hs, b.nlast
  40db10:	ldr	w27, [sp, #60]
  40db14:	cmp	w0, #0x1
  40db18:	str	w27, [x25]
  40db1c:	b.eq	40db38 <wcrtomb@plt+0xb2c8>  // b.none
  40db20:	ldr	x9, [x24]
  40db24:	sxtw	x8, w0
  40db28:	mov	w21, #0xffffffff            	// #-1
  40db2c:	b	40db44 <wcrtomb@plt+0xb2d4>
  40db30:	str	xzr, [x20]
  40db34:	str	w27, [x25]
  40db38:	ldr	x9, [x24]
  40db3c:	mov	w8, #0x1                   	// #1
  40db40:	ldrb	w21, [x9]
  40db44:	add	x1, x9, x8
  40db48:	str	x1, [x24]
  40db4c:	ldr	x9, [x19]
  40db50:	cmp	w21, #0x5e
  40db54:	sub	x2, x9, x8
  40db58:	cset	w8, eq  // eq = none
  40db5c:	str	x2, [x19]
  40db60:	stp	w8, w21, [sp, #8]
  40db64:	b.ne	40dbbc <wcrtomb@plt+0xb34c>  // b.any
  40db68:	cbz	x2, 40e99c <wcrtomb@plt+0xc12c>
  40db6c:	ldrb	w8, [x1]
  40db70:	add	x8, x23, x8, lsl #2
  40db74:	ldr	w27, [x8, #1308]
  40db78:	cmn	w27, #0x1
  40db7c:	b.ne	40dbcc <wcrtomb@plt+0xb35c>  // b.any
  40db80:	add	x20, x23, #0x110
  40db84:	add	x0, sp, #0x3c
  40db88:	mov	x3, x20
  40db8c:	bl	417eb0 <wcrtomb@plt+0x15640>
  40db90:	sub	x8, x0, #0x1
  40db94:	cmn	x8, #0x3
  40db98:	b.cs	40dbc8 <wcrtomb@plt+0xb358>  // b.hs, b.nlast
  40db9c:	ldr	w27, [sp, #60]
  40dba0:	cmp	w0, #0x1
  40dba4:	str	w27, [x25]
  40dba8:	b.eq	40dbd0 <wcrtomb@plt+0xb360>  // b.none
  40dbac:	ldr	x8, [x24]
  40dbb0:	sxtw	x9, w0
  40dbb4:	mov	w21, #0xffffffff            	// #-1
  40dbb8:	b	40dbdc <wcrtomb@plt+0xb36c>
  40dbbc:	mov	w8, #0x1                   	// #1
  40dbc0:	str	w8, [sp, #24]
  40dbc4:	b	40dc00 <wcrtomb@plt+0xb390>
  40dbc8:	str	xzr, [x20]
  40dbcc:	str	w27, [x25]
  40dbd0:	ldr	x8, [x24]
  40dbd4:	mov	w9, #0x1                   	// #1
  40dbd8:	ldrb	w21, [x8]
  40dbdc:	ldr	x10, [x23, #40]
  40dbe0:	ldrb	w11, [x23, #1049]
  40dbe4:	add	x8, x8, x9
  40dbe8:	str	x8, [x23, #32]
  40dbec:	sub	x8, x10, x9
  40dbf0:	cmp	w11, #0x0
  40dbf4:	str	x8, [x23, #40]
  40dbf8:	cset	w8, ne  // ne = any
  40dbfc:	str	w8, [sp, #24]
  40dc00:	add	x8, x23, #0x110
  40dc04:	cmp	w21, #0x3a
  40dc08:	str	x8, [sp, #32]
  40dc0c:	add	x8, sp, #0x3c
  40dc10:	add	x9, x23, #0x70
  40dc14:	sub	x28, x29, #0x40
  40dc18:	cset	w20, eq  // eq = none
  40dc1c:	add	x8, x8, #0x4
  40dc20:	stp	x9, x25, [sp, #40]
  40dc24:	str	x8, [sp, #16]
  40dc28:	b	40dc58 <wcrtomb@plt+0xb3e8>
  40dc2c:	lsr	w8, w21, #6
  40dc30:	lsl	x8, x8, #3
  40dc34:	ldr	x9, [x28, x8]
  40dc38:	mov	w10, #0x1                   	// #1
  40dc3c:	lsl	x10, x10, x21
  40dc40:	orr	x9, x9, x10
  40dc44:	str	x9, [x28, x8]
  40dc48:	cmp	w26, #0x5d
  40dc4c:	mov	w21, w26
  40dc50:	mov	w27, w22
  40dc54:	b.eq	40e774 <wcrtomb@plt+0xbf04>  // b.none
  40dc58:	cmp	w21, #0x5c
  40dc5c:	and	w20, w20, #0xfffffffd
  40dc60:	b.eq	40dce8 <wcrtomb@plt+0xb478>  // b.none
  40dc64:	cmp	w21, #0x5b
  40dc68:	b.ne	40dcf0 <wcrtomb@plt+0xb480>  // b.any
  40dc6c:	ldr	x2, [x19]
  40dc70:	str	w20, [sp, #56]
  40dc74:	cbz	x2, 40e99c <wcrtomb@plt+0xc12c>
  40dc78:	ldr	x1, [x23, #32]
  40dc7c:	ldrb	w8, [x1]
  40dc80:	add	x8, x23, x8, lsl #2
  40dc84:	ldr	w22, [x8, #1308]
  40dc88:	cmn	w22, #0x1
  40dc8c:	b.ne	40dd58 <wcrtomb@plt+0xb4e8>  // b.any
  40dc90:	ldr	x20, [sp, #32]
  40dc94:	add	x0, sp, #0x3c
  40dc98:	mov	x3, x20
  40dc9c:	bl	417eb0 <wcrtomb@plt+0x15640>
  40dca0:	sub	x8, x0, #0x1
  40dca4:	cmn	x8, #0x3
  40dca8:	b.cs	40dd54 <wcrtomb@plt+0xb4e4>  // b.hs, b.nlast
  40dcac:	ldr	w22, [sp, #60]
  40dcb0:	cmp	w0, #0x1
  40dcb4:	str	w22, [x25]
  40dcb8:	b.eq	40dd5c <wcrtomb@plt+0xb4ec>  // b.none
  40dcbc:	ldr	x8, [x24]
  40dcc0:	sxtw	x9, w0
  40dcc4:	mov	w21, #0x5b                  	// #91
  40dcc8:	mov	w26, #0xffffffff            	// #-1
  40dccc:	add	x8, x8, x9
  40dcd0:	str	x8, [x24]
  40dcd4:	ldr	x10, [x19]
  40dcd8:	mov	w8, #0x4                   	// #4
  40dcdc:	sub	x9, x10, x9
  40dce0:	str	x9, [x19]
  40dce4:	b	40dda0 <wcrtomb@plt+0xb530>
  40dce8:	ldrb	w8, [x23, #448]
  40dcec:	tbnz	w8, #0, 40dcfc <wcrtomb@plt+0xb48c>
  40dcf0:	ldr	x2, [x19]
  40dcf4:	cbnz	x2, 40e084 <wcrtomb@plt+0xb814>
  40dcf8:	b	40e99c <wcrtomb@plt+0xc12c>
  40dcfc:	ldr	x2, [x19]
  40dd00:	cbz	x2, 40e99c <wcrtomb@plt+0xc12c>
  40dd04:	ldr	x1, [x23, #32]
  40dd08:	ldrb	w8, [x1]
  40dd0c:	add	x8, x23, x8, lsl #2
  40dd10:	ldr	w27, [x8, #1308]
  40dd14:	cmn	w27, #0x1
  40dd18:	b.ne	40e05c <wcrtomb@plt+0xb7ec>  // b.any
  40dd1c:	mov	w22, w20
  40dd20:	ldr	x20, [sp, #32]
  40dd24:	add	x0, sp, #0x3c
  40dd28:	mov	x3, x20
  40dd2c:	bl	417eb0 <wcrtomb@plt+0x15640>
  40dd30:	sub	x8, x0, #0x1
  40dd34:	cmn	x8, #0x3
  40dd38:	b.cs	40e054 <wcrtomb@plt+0xb7e4>  // b.hs, b.nlast
  40dd3c:	ldr	w27, [sp, #60]
  40dd40:	cmp	w0, #0x1
  40dd44:	str	w27, [x25]
  40dd48:	b.ne	40e25c <wcrtomb@plt+0xb9ec>  // b.any
  40dd4c:	mov	w20, w22
  40dd50:	b	40e060 <wcrtomb@plt+0xb7f0>
  40dd54:	str	xzr, [x20]
  40dd58:	str	w22, [x25]
  40dd5c:	ldr	x1, [x24]
  40dd60:	mov	w20, wzr
  40dd64:	ldrb	w26, [x1], #1
  40dd68:	str	x1, [x24]
  40dd6c:	ldr	x8, [x19]
  40dd70:	cmp	w26, #0x2e
  40dd74:	sub	x2, x8, #0x1
  40dd78:	str	x2, [x19]
  40dd7c:	b.eq	40ddc0 <wcrtomb@plt+0xb550>  // b.none
  40dd80:	cmp	w26, #0x3d
  40dd84:	b.eq	40ddc0 <wcrtomb@plt+0xb550>  // b.none
  40dd88:	cmp	w26, #0x3a
  40dd8c:	b.ne	40dda8 <wcrtomb@plt+0xb538>  // b.any
  40dd90:	ldrb	w8, [x23, #448]
  40dd94:	tbnz	w8, #2, 40ddbc <wcrtomb@plt+0xb54c>
  40dd98:	mov	w8, #0x4                   	// #4
  40dd9c:	mov	w21, #0x5b                  	// #91
  40dda0:	ldr	w20, [sp, #56]
  40dda4:	b	40e36c <wcrtomb@plt+0xbafc>
  40dda8:	ldr	w20, [sp, #56]
  40ddac:	mov	w21, #0x5b                  	// #91
  40ddb0:	cmp	w26, #0x2d
  40ddb4:	b.eq	40e118 <wcrtomb@plt+0xb8a8>  // b.none
  40ddb8:	b	40e35c <wcrtomb@plt+0xbaec>
  40ddbc:	mov	w20, #0x1                   	// #1
  40ddc0:	ldr	x27, [sp, #32]
  40ddc4:	cbz	x2, 40e99c <wcrtomb@plt+0xc12c>
  40ddc8:	mov	w21, wzr
  40ddcc:	b	40dddc <wcrtomb@plt+0xb56c>
  40ddd0:	cmp	w21, #0x1f
  40ddd4:	b.ls	40de6c <wcrtomb@plt+0xb5fc>  // b.plast
  40ddd8:	strb	wzr, [sp, #60]
  40dddc:	ldrb	w8, [x1]
  40dde0:	add	x8, x23, x8, lsl #2
  40dde4:	ldr	w22, [x8, #1308]
  40dde8:	cmn	w22, #0x1
  40ddec:	b.ne	40de2c <wcrtomb@plt+0xb5bc>  // b.any
  40ddf0:	sub	x0, x29, #0x14
  40ddf4:	mov	x3, x27
  40ddf8:	bl	417eb0 <wcrtomb@plt+0x15640>
  40ddfc:	sub	x8, x0, #0x1
  40de00:	cmn	x8, #0x3
  40de04:	b.cs	40de28 <wcrtomb@plt+0xb5b8>  // b.hs, b.nlast
  40de08:	ldur	w8, [x29, #-20]
  40de0c:	cmp	w0, #0x1
  40de10:	str	w8, [x25]
  40de14:	b.eq	40de30 <wcrtomb@plt+0xb5c0>  // b.none
  40de18:	ldr	x9, [x24]
  40de1c:	sxtw	x10, w0
  40de20:	mov	w8, #0xffffffff            	// #-1
  40de24:	b	40de3c <wcrtomb@plt+0xb5cc>
  40de28:	str	xzr, [x27]
  40de2c:	str	w22, [x25]
  40de30:	ldr	x9, [x24]
  40de34:	mov	w10, #0x1                   	// #1
  40de38:	ldrb	w8, [x9]
  40de3c:	add	x1, x9, x10
  40de40:	str	x1, [x24]
  40de44:	ldr	x9, [x19]
  40de48:	subs	x2, x9, x10
  40de4c:	str	x2, [x19]
  40de50:	b.eq	40e99c <wcrtomb@plt+0xc12c>  // b.none
  40de54:	cmp	w8, w26
  40de58:	b.ne	40ddd0 <wcrtomb@plt+0xb560>  // b.any
  40de5c:	ldrb	w9, [x1]
  40de60:	cmp	w9, #0x5d
  40de64:	b.ne	40ddd0 <wcrtomb@plt+0xb560>  // b.any
  40de68:	b	40de80 <wcrtomb@plt+0xb610>
  40de6c:	add	w9, w21, #0x1
  40de70:	add	x10, sp, #0x3c
  40de74:	strb	w8, [x10, w21, uxtw]
  40de78:	mov	w21, w9
  40de7c:	b	40dddc <wcrtomb@plt+0xb56c>
  40de80:	add	x8, sp, #0x3c
  40de84:	strb	wzr, [x8, w21, uxtw]
  40de88:	ldr	w21, [x23, #1680]
  40de8c:	cmn	w21, #0x1
  40de90:	b.ne	40dec8 <wcrtomb@plt+0xb658>  // b.any
  40de94:	sub	x0, x29, #0x14
  40de98:	mov	x3, x27
  40de9c:	bl	417eb0 <wcrtomb@plt+0x15640>
  40dea0:	sub	x8, x0, #0x1
  40dea4:	cmn	x8, #0x3
  40dea8:	b.cs	40dec4 <wcrtomb@plt+0xb654>  // b.hs, b.nlast
  40deac:	ldur	w8, [x29, #-20]
  40deb0:	cmp	w0, #0x1
  40deb4:	str	w8, [x25]
  40deb8:	b.eq	40decc <wcrtomb@plt+0xb65c>  // b.none
  40debc:	sxtw	x8, w0
  40dec0:	b	40ded0 <wcrtomb@plt+0xb660>
  40dec4:	str	xzr, [x27]
  40dec8:	str	w21, [x25]
  40decc:	mov	w8, #0x1                   	// #1
  40ded0:	ldr	x9, [x24]
  40ded4:	add	x9, x9, x8
  40ded8:	str	x9, [x24]
  40dedc:	ldr	x9, [x19]
  40dee0:	sub	x27, x9, x8
  40dee4:	str	x27, [x19]
  40dee8:	cbz	w20, 40e6bc <wcrtomb@plt+0xbe4c>
  40deec:	ldrb	w8, [x23, #457]
  40def0:	mov	w11, #0x72                  	// #114
  40def4:	cbz	w8, 40df38 <wcrtomb@plt+0xb6c8>
  40def8:	ldr	w8, [sp, #60]
  40defc:	ldrh	w9, [sp, #64]
  40df00:	mov	w10, #0x7075                	// #28789
  40df04:	movk	w10, #0x6570, lsl #16
  40df08:	eor	w8, w8, w10
  40df0c:	eor	w9, w9, w11
  40df10:	orr	w8, w8, w9
  40df14:	cbz	w8, 40df48 <wcrtomb@plt+0xb6d8>
  40df18:	ldr	w8, [sp, #60]
  40df1c:	ldrh	w9, [sp, #64]
  40df20:	mov	w10, #0x6f6c                	// #28524
  40df24:	movk	w10, #0x6577, lsl #16
  40df28:	eor	w8, w8, w10
  40df2c:	eor	w9, w9, w11
  40df30:	orr	w8, w8, w9
  40df34:	cbz	w8, 40df48 <wcrtomb@plt+0xb6d8>
  40df38:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40df3c:	add	x22, sp, #0x3c
  40df40:	add	x1, x1, #0x696
  40df44:	b	40df54 <wcrtomb@plt+0xb6e4>
  40df48:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40df4c:	add	x1, x1, #0x696
  40df50:	mov	x22, x1
  40df54:	mov	x0, x22
  40df58:	bl	402600 <strcmp@plt>
  40df5c:	cbz	w0, 40e048 <wcrtomb@plt+0xb7d8>
  40df60:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40df64:	mov	x0, x22
  40df68:	add	x1, x1, #0x68a
  40df6c:	bl	402600 <strcmp@plt>
  40df70:	cbz	w0, 40e250 <wcrtomb@plt+0xb9e0>
  40df74:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40df78:	mov	x0, x22
  40df7c:	add	x1, x1, #0x690
  40df80:	bl	402600 <strcmp@plt>
  40df84:	cbz	w0, 40e270 <wcrtomb@plt+0xba00>
  40df88:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40df8c:	mov	x0, x22
  40df90:	add	x1, x1, #0x6f7
  40df94:	bl	402600 <strcmp@plt>
  40df98:	cbz	w0, 40e27c <wcrtomb@plt+0xba0c>
  40df9c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40dfa0:	mov	x0, x22
  40dfa4:	add	x1, x1, #0x6f6
  40dfa8:	bl	402600 <strcmp@plt>
  40dfac:	cbz	w0, 40e618 <wcrtomb@plt+0xbda8>
  40dfb0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40dfb4:	mov	x0, x22
  40dfb8:	add	x1, x1, #0x6fd
  40dfbc:	bl	402600 <strcmp@plt>
  40dfc0:	cbz	w0, 40e624 <wcrtomb@plt+0xbdb4>
  40dfc4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40dfc8:	mov	x0, x22
  40dfcc:	add	x1, x1, #0x703
  40dfd0:	bl	402600 <strcmp@plt>
  40dfd4:	cbz	w0, 40e630 <wcrtomb@plt+0xbdc0>
  40dfd8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40dfdc:	mov	x0, x22
  40dfe0:	add	x1, x1, #0x709
  40dfe4:	bl	402600 <strcmp@plt>
  40dfe8:	cbz	w0, 40e63c <wcrtomb@plt+0xbdcc>
  40dfec:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40dff0:	mov	x0, x22
  40dff4:	add	x1, x1, #0x70f
  40dff8:	bl	402600 <strcmp@plt>
  40dffc:	cbz	w0, 40e648 <wcrtomb@plt+0xbdd8>
  40e000:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40e004:	mov	x0, x22
  40e008:	add	x1, x1, #0x715
  40e00c:	bl	402600 <strcmp@plt>
  40e010:	cbz	w0, 40e654 <wcrtomb@plt+0xbde4>
  40e014:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40e018:	mov	x0, x22
  40e01c:	add	x1, x1, #0x71b
  40e020:	bl	402600 <strcmp@plt>
  40e024:	cbz	w0, 40e660 <wcrtomb@plt+0xbdf0>
  40e028:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40e02c:	mov	x0, x22
  40e030:	add	x1, x1, #0x721
  40e034:	bl	402600 <strcmp@plt>
  40e038:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40e03c:	add	x20, x20, #0x418
  40e040:	cbz	w0, 40e668 <wcrtomb@plt+0xbdf8>
  40e044:	b	40e9b4 <wcrtomb@plt+0xc144>
  40e048:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40e04c:	add	x20, x20, #0x310
  40e050:	b	40e668 <wcrtomb@plt+0xbdf8>
  40e054:	str	xzr, [x20]
  40e058:	mov	w20, w22
  40e05c:	str	w27, [x25]
  40e060:	ldr	x8, [x24]
  40e064:	mov	w9, #0x1                   	// #1
  40e068:	ldrb	w21, [x8]
  40e06c:	add	x8, x8, x9
  40e070:	str	x8, [x24]
  40e074:	ldr	x8, [x19]
  40e078:	sub	x2, x8, x9
  40e07c:	str	x2, [x19]
  40e080:	cbz	x2, 40e99c <wcrtomb@plt+0xc12c>
  40e084:	ldr	x1, [x23, #32]
  40e088:	ldrb	w8, [x1]
  40e08c:	add	x8, x23, x8, lsl #2
  40e090:	ldr	w22, [x8, #1308]
  40e094:	cmn	w22, #0x1
  40e098:	b.ne	40e0ec <wcrtomb@plt+0xb87c>  // b.any
  40e09c:	mov	w26, w22
  40e0a0:	mov	w22, w20
  40e0a4:	ldr	x20, [sp, #32]
  40e0a8:	add	x0, sp, #0x3c
  40e0ac:	mov	x3, x20
  40e0b0:	bl	417eb0 <wcrtomb@plt+0x15640>
  40e0b4:	sub	x8, x0, #0x1
  40e0b8:	cmn	x8, #0x3
  40e0bc:	b.cs	40e0e0 <wcrtomb@plt+0xb870>  // b.hs, b.nlast
  40e0c0:	ldr	w8, [sp, #60]
  40e0c4:	cmp	w0, #0x1
  40e0c8:	mov	w10, w8
  40e0cc:	str	w8, [x25]
  40e0d0:	b.ne	40e1e4 <wcrtomb@plt+0xb974>  // b.any
  40e0d4:	mov	w20, w22
  40e0d8:	mov	w22, w10
  40e0dc:	b	40e0f0 <wcrtomb@plt+0xb880>
  40e0e0:	str	xzr, [x20]
  40e0e4:	mov	w20, w22
  40e0e8:	mov	w22, w26
  40e0ec:	str	w22, [x25]
  40e0f0:	ldr	x8, [x24]
  40e0f4:	mov	w9, #0x1                   	// #1
  40e0f8:	ldrb	w26, [x8]
  40e0fc:	add	x1, x8, x9
  40e100:	str	x1, [x24]
  40e104:	ldr	x8, [x19]
  40e108:	sub	x2, x8, x9
  40e10c:	str	x2, [x19]
  40e110:	cmp	w26, #0x2d
  40e114:	b.ne	40e35c <wcrtomb@plt+0xbaec>  // b.any
  40e118:	str	w20, [sp, #56]
  40e11c:	cbz	x2, 40e99c <wcrtomb@plt+0xc12c>
  40e120:	ldrb	w8, [x1]
  40e124:	add	x8, x23, x8, lsl #2
  40e128:	ldr	w11, [x8, #1308]
  40e12c:	cmn	w11, #0x1
  40e130:	b.ne	40e17c <wcrtomb@plt+0xb90c>  // b.any
  40e134:	ldr	x20, [sp, #32]
  40e138:	add	x0, sp, #0x3c
  40e13c:	mov	w26, w11
  40e140:	mov	x3, x20
  40e144:	bl	417eb0 <wcrtomb@plt+0x15640>
  40e148:	sub	x8, x0, #0x1
  40e14c:	cmn	x8, #0x3
  40e150:	b.cs	40e174 <wcrtomb@plt+0xb904>  // b.hs, b.nlast
  40e154:	ldr	w11, [sp, #60]
  40e158:	cmp	w0, #0x1
  40e15c:	str	w11, [x25]
  40e160:	b.eq	40e180 <wcrtomb@plt+0xb910>  // b.none
  40e164:	ldr	x8, [x24]
  40e168:	sxtw	x9, w0
  40e16c:	mov	w20, #0xffffffff            	// #-1
  40e170:	b	40e2a0 <wcrtomb@plt+0xba30>
  40e174:	mov	w11, w26
  40e178:	str	xzr, [x20]
  40e17c:	str	w11, [x25]
  40e180:	ldr	x8, [x24]
  40e184:	mov	x1, x8
  40e188:	ldrb	w20, [x1], #1
  40e18c:	str	x1, [x24]
  40e190:	ldr	x9, [x19]
  40e194:	cmp	w20, #0x5d
  40e198:	sub	x2, x9, #0x1
  40e19c:	str	x2, [x19]
  40e1a0:	b.eq	40e1c4 <wcrtomb@plt+0xb954>  // b.none
  40e1a4:	cmp	w20, #0x5c
  40e1a8:	b.eq	40e1d4 <wcrtomb@plt+0xb964>  // b.none
  40e1ac:	cmp	w20, #0x5b
  40e1b0:	b.ne	40e2b4 <wcrtomb@plt+0xba44>  // b.any
  40e1b4:	ldrb	w10, [x1]
  40e1b8:	cmp	w10, #0x2e
  40e1bc:	b.ne	40e248 <wcrtomb@plt+0xb9d8>  // b.any
  40e1c0:	str	wzr, [sp, #24]
  40e1c4:	ldr	w20, [sp, #56]
  40e1c8:	stp	x8, x9, [x23, #32]
  40e1cc:	mov	w26, #0x2d                  	// #45
  40e1d0:	b	40e35c <wcrtomb@plt+0xbaec>
  40e1d4:	ldrb	w8, [x23, #448]
  40e1d8:	tbnz	w8, #0, 40e1fc <wcrtomb@plt+0xb98c>
  40e1dc:	mov	w20, #0x5c                  	// #92
  40e1e0:	b	40e2b4 <wcrtomb@plt+0xba44>
  40e1e4:	ldr	x8, [x24]
  40e1e8:	sxtw	x9, w0
  40e1ec:	mov	w26, #0xffffffff            	// #-1
  40e1f0:	mov	w20, w22
  40e1f4:	mov	w22, w10
  40e1f8:	b	40e0fc <wcrtomb@plt+0xb88c>
  40e1fc:	cbz	x2, 40e99c <wcrtomb@plt+0xc12c>
  40e200:	ldrb	w8, [x1]
  40e204:	add	x8, x23, x8, lsl #2
  40e208:	ldr	w11, [x8, #1308]
  40e20c:	cmn	w11, #0x1
  40e210:	b.ne	40e290 <wcrtomb@plt+0xba20>  // b.any
  40e214:	ldr	x20, [sp, #32]
  40e218:	add	x0, sp, #0x3c
  40e21c:	mov	w22, w11
  40e220:	mov	x3, x20
  40e224:	bl	417eb0 <wcrtomb@plt+0x15640>
  40e228:	sub	x8, x0, #0x1
  40e22c:	cmn	x8, #0x3
  40e230:	b.cs	40e288 <wcrtomb@plt+0xba18>  // b.hs, b.nlast
  40e234:	ldr	w11, [sp, #60]
  40e238:	cmp	w0, #0x1
  40e23c:	str	w11, [x25]
  40e240:	b.ne	40e164 <wcrtomb@plt+0xb8f4>  // b.any
  40e244:	b	40e294 <wcrtomb@plt+0xba24>
  40e248:	mov	w20, #0x5b                  	// #91
  40e24c:	b	40e2b4 <wcrtomb@plt+0xba44>
  40e250:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40e254:	add	x20, x20, #0x328
  40e258:	b	40e668 <wcrtomb@plt+0xbdf8>
  40e25c:	ldr	x8, [x24]
  40e260:	sxtw	x9, w0
  40e264:	mov	w21, #0xffffffff            	// #-1
  40e268:	mov	w20, w22
  40e26c:	b	40e06c <wcrtomb@plt+0xb7fc>
  40e270:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40e274:	add	x20, x20, #0x340
  40e278:	b	40e668 <wcrtomb@plt+0xbdf8>
  40e27c:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40e280:	add	x20, x20, #0x358
  40e284:	b	40e668 <wcrtomb@plt+0xbdf8>
  40e288:	mov	w11, w22
  40e28c:	str	xzr, [x20]
  40e290:	str	w11, [x25]
  40e294:	ldr	x8, [x24]
  40e298:	mov	w9, #0x1                   	// #1
  40e29c:	ldrb	w20, [x8]
  40e2a0:	add	x1, x8, x9
  40e2a4:	str	x1, [x24]
  40e2a8:	ldr	x8, [x19]
  40e2ac:	sub	x2, x8, x9
  40e2b0:	str	x2, [x19]
  40e2b4:	cbz	x2, 40e99c <wcrtomb@plt+0xc12c>
  40e2b8:	ldrb	w8, [x1]
  40e2bc:	add	x8, x23, x8, lsl #2
  40e2c0:	ldr	w22, [x8, #1308]
  40e2c4:	ldr	w8, [sp, #56]
  40e2c8:	cmn	w22, #0x1
  40e2cc:	orr	w8, w8, #0x8
  40e2d0:	str	w8, [sp, #56]
  40e2d4:	b.ne	40e324 <wcrtomb@plt+0xbab4>  // b.any
  40e2d8:	ldr	x26, [sp, #32]
  40e2dc:	add	x0, sp, #0x3c
  40e2e0:	str	w11, [sp, #28]
  40e2e4:	mov	x3, x26
  40e2e8:	bl	417eb0 <wcrtomb@plt+0x15640>
  40e2ec:	sub	x8, x0, #0x1
  40e2f0:	cmn	x8, #0x3
  40e2f4:	b.cs	40e31c <wcrtomb@plt+0xbaac>  // b.hs, b.nlast
  40e2f8:	ldr	w22, [sp, #60]
  40e2fc:	ldr	w11, [sp, #28]
  40e300:	cmp	w0, #0x1
  40e304:	str	w22, [x25]
  40e308:	b.eq	40e328 <wcrtomb@plt+0xbab8>  // b.none
  40e30c:	ldr	x8, [x24]
  40e310:	sxtw	x9, w0
  40e314:	mov	w26, #0xffffffff            	// #-1
  40e318:	b	40e334 <wcrtomb@plt+0xbac4>
  40e31c:	ldr	w11, [sp, #28]
  40e320:	str	xzr, [x26]
  40e324:	str	w22, [x25]
  40e328:	ldr	x8, [x24]
  40e32c:	mov	w9, #0x1                   	// #1
  40e330:	ldrb	w26, [x8]
  40e334:	add	x8, x8, x9
  40e338:	str	x8, [x24]
  40e33c:	ldr	x8, [x19]
  40e340:	cmn	w27, #0x1
  40e344:	sub	x8, x8, x9
  40e348:	str	x8, [x19]
  40e34c:	b.eq	40e454 <wcrtomb@plt+0xbbe4>  // b.none
  40e350:	cmp	w27, w11
  40e354:	b.ne	40e454 <wcrtomb@plt+0xbbe4>  // b.any
  40e358:	ldr	w20, [sp, #56]
  40e35c:	cmp	w21, #0x3a
  40e360:	mov	w8, #0x4                   	// #4
  40e364:	mov	w9, #0x2                   	// #2
  40e368:	csel	w8, w9, w8, eq  // eq = none
  40e36c:	ldrb	w9, [x23, #1048]
  40e370:	orr	w20, w20, w8
  40e374:	cbz	w9, 40e3ac <wcrtomb@plt+0xbb3c>
  40e378:	cmn	w27, #0x1
  40e37c:	b.eq	40e44c <wcrtomb@plt+0xbbdc>  // b.none
  40e380:	ldrb	w8, [x23, #457]
  40e384:	str	w22, [sp, #28]
  40e388:	mov	w22, w20
  40e38c:	cbz	w8, 40e48c <wcrtomb@plt+0xbc1c>
  40e390:	ldr	x1, [sp, #16]
  40e394:	mov	w0, w27
  40e398:	bl	411134 <wcrtomb@plt+0xe8c4>
  40e39c:	str	w27, [sp, #60]
  40e3a0:	tbnz	w0, #31, 40e518 <wcrtomb@plt+0xbca8>
  40e3a4:	add	w8, w0, #0x1
  40e3a8:	b	40e494 <wcrtomb@plt+0xbc24>
  40e3ac:	ldrb	w8, [x23, #457]
  40e3b0:	cbz	w8, 40dc2c <wcrtomb@plt+0xb3bc>
  40e3b4:	bl	402610 <__ctype_b_loc@plt>
  40e3b8:	ldr	x8, [x0]
  40e3bc:	ldrh	w8, [x8, w21, sxtw #1]
  40e3c0:	tbz	w8, #10, 40dc2c <wcrtomb@plt+0xb3bc>
  40e3c4:	add	w8, w21, #0x80
  40e3c8:	mov	w27, w22
  40e3cc:	mov	w22, w20
  40e3d0:	cmp	w8, #0x17f
  40e3d4:	b.hi	40e3e8 <wcrtomb@plt+0xbb78>  // b.pmore
  40e3d8:	sxtw	x20, w21
  40e3dc:	bl	4024d0 <__ctype_toupper_loc@plt>
  40e3e0:	ldr	x8, [x0]
  40e3e4:	ldr	w21, [x8, x20, lsl #2]
  40e3e8:	mov	x20, xzr
  40e3ec:	b	40e418 <wcrtomb@plt+0xbba8>
  40e3f0:	ubfx	x8, x20, #6, #26
  40e3f4:	lsl	x8, x8, #3
  40e3f8:	ldr	x9, [x28, x8]
  40e3fc:	mov	w10, #0x1                   	// #1
  40e400:	lsl	x10, x10, x20
  40e404:	orr	x9, x9, x10
  40e408:	str	x9, [x28, x8]
  40e40c:	add	x20, x20, #0x1
  40e410:	cmp	x20, #0x100
  40e414:	b.eq	40e524 <wcrtomb@plt+0xbcb4>  // b.none
  40e418:	add	w8, w20, #0x80
  40e41c:	cmp	w8, #0x180
  40e420:	b.cs	40e43c <wcrtomb@plt+0xbbcc>  // b.hs, b.nlast
  40e424:	bl	4024d0 <__ctype_toupper_loc@plt>
  40e428:	ldr	x8, [x0]
  40e42c:	ldr	w8, [x8, x20, lsl #2]
  40e430:	cmp	w8, w21
  40e434:	b.ne	40e40c <wcrtomb@plt+0xbb9c>  // b.any
  40e438:	b	40e3f0 <wcrtomb@plt+0xbb80>
  40e43c:	mov	w8, w20
  40e440:	cmp	w8, w21
  40e444:	b.ne	40e40c <wcrtomb@plt+0xbb9c>  // b.any
  40e448:	b	40e3f0 <wcrtomb@plt+0xbb80>
  40e44c:	str	wzr, [sp, #24]
  40e450:	b	40dc48 <wcrtomb@plt+0xb3d8>
  40e454:	ldrb	w8, [x23, #1049]
  40e458:	cbnz	w8, 40e47c <wcrtomb@plt+0xbc0c>
  40e45c:	sub	w8, w21, #0x30
  40e460:	and	w8, w8, #0xff
  40e464:	cmp	w8, #0x9
  40e468:	b.hi	40e60c <wcrtomb@plt+0xbd9c>  // b.pmore
  40e46c:	sub	w8, w20, #0x30
  40e470:	and	w8, w8, #0xff
  40e474:	cmp	w8, #0x9
  40e478:	b.hi	40e60c <wcrtomb@plt+0xbd9c>  // b.pmore
  40e47c:	cmp	w21, w20
  40e480:	b.le	40e530 <wcrtomb@plt+0xbcc0>
  40e484:	ldr	w20, [sp, #56]
  40e488:	b	40dc48 <wcrtomb@plt+0xb3d8>
  40e48c:	str	w27, [sp, #60]
  40e490:	mov	w8, #0x1                   	// #1
  40e494:	ldr	x21, [sp, #16]
  40e498:	mov	w8, w8
  40e49c:	sub	x20, x8, #0x1
  40e4a0:	b	40e4cc <wcrtomb@plt+0xbc5c>
  40e4a4:	lsr	w8, w0, #6
  40e4a8:	lsl	x8, x8, #3
  40e4ac:	ldr	x9, [x28, x8]
  40e4b0:	mov	w10, #0x1                   	// #1
  40e4b4:	lsl	x10, x10, x0
  40e4b8:	orr	x9, x9, x10
  40e4bc:	str	x9, [x28, x8]
  40e4c0:	cbz	x20, 40e518 <wcrtomb@plt+0xbca8>
  40e4c4:	ldr	w27, [x21], #4
  40e4c8:	sub	x20, x20, #0x1
  40e4cc:	mov	w0, w27
  40e4d0:	bl	402350 <wctob@plt>
  40e4d4:	tbz	w0, #31, 40e4a4 <wcrtomb@plt+0xbc34>
  40e4d8:	ldp	x8, x9, [x23, #104]
  40e4dc:	ldr	x0, [x23, #96]
  40e4e0:	cmp	x9, x8
  40e4e4:	b.gt	40e500 <wcrtomb@plt+0xbc90>
  40e4e8:	ldr	x1, [sp, #40]
  40e4ec:	mov	w2, #0x1                   	// #1
  40e4f0:	mov	x3, #0xffffffffffffffff    	// #-1
  40e4f4:	mov	w4, #0x4                   	// #4
  40e4f8:	bl	40d920 <wcrtomb@plt+0xb0b0>
  40e4fc:	ldr	x8, [x23, #104]
  40e500:	str	x0, [x23, #96]
  40e504:	ldur	w9, [x21, #-4]
  40e508:	add	x10, x8, #0x1
  40e50c:	str	x10, [x23, #104]
  40e510:	str	w9, [x0, x8, lsl #2]
  40e514:	cbnz	x20, 40e4c4 <wcrtomb@plt+0xbc54>
  40e518:	mov	w20, w22
  40e51c:	ldr	w22, [sp, #28]
  40e520:	b	40dc48 <wcrtomb@plt+0xb3d8>
  40e524:	mov	w20, w22
  40e528:	mov	w22, w27
  40e52c:	b	40dc48 <wcrtomb@plt+0xb3d8>
  40e530:	ldrb	w27, [x23, #457]
  40e534:	sxtw	x21, w21
  40e538:	sxtw	x20, w20
  40e53c:	str	w22, [sp, #28]
  40e540:	b	40e570 <wcrtomb@plt+0xbd00>
  40e544:	ubfx	x8, x21, #6, #26
  40e548:	lsl	x8, x8, #3
  40e54c:	ldr	x9, [x28, x8]
  40e550:	mov	w10, #0x1                   	// #1
  40e554:	lsl	x10, x10, x21
  40e558:	orr	x9, x9, x10
  40e55c:	str	x9, [x28, x8]
  40e560:	ldr	x25, [sp, #48]
  40e564:	cmp	x21, x20
  40e568:	add	x21, x21, #0x1
  40e56c:	b.ge	40e604 <wcrtomb@plt+0xbd94>  // b.tcont
  40e570:	cbz	w27, 40e544 <wcrtomb@plt+0xbcd4>
  40e574:	bl	402610 <__ctype_b_loc@plt>
  40e578:	ldr	x8, [x0]
  40e57c:	ldrh	w8, [x8, x21, lsl #1]
  40e580:	tbz	w8, #10, 40e544 <wcrtomb@plt+0xbcd4>
  40e584:	add	x8, x21, #0x80
  40e588:	cmp	x8, #0x17f
  40e58c:	mov	w22, w21
  40e590:	b.hi	40e5a0 <wcrtomb@plt+0xbd30>  // b.pmore
  40e594:	bl	4024d0 <__ctype_toupper_loc@plt>
  40e598:	ldr	x8, [x0]
  40e59c:	ldr	w22, [x8, x21, lsl #2]
  40e5a0:	mov	x25, xzr
  40e5a4:	b	40e5d0 <wcrtomb@plt+0xbd60>
  40e5a8:	ubfx	x8, x25, #6, #26
  40e5ac:	lsl	x8, x8, #3
  40e5b0:	ldr	x9, [x28, x8]
  40e5b4:	mov	w10, #0x1                   	// #1
  40e5b8:	lsl	x10, x10, x25
  40e5bc:	orr	x9, x9, x10
  40e5c0:	str	x9, [x28, x8]
  40e5c4:	add	x25, x25, #0x1
  40e5c8:	cmp	x25, #0x100
  40e5cc:	b.eq	40e560 <wcrtomb@plt+0xbcf0>  // b.none
  40e5d0:	add	w8, w25, #0x80
  40e5d4:	cmp	w8, #0x180
  40e5d8:	b.cs	40e5f4 <wcrtomb@plt+0xbd84>  // b.hs, b.nlast
  40e5dc:	bl	4024d0 <__ctype_toupper_loc@plt>
  40e5e0:	ldr	x8, [x0]
  40e5e4:	ldr	w8, [x8, x25, lsl #2]
  40e5e8:	cmp	w8, w22
  40e5ec:	b.ne	40e5c4 <wcrtomb@plt+0xbd54>  // b.any
  40e5f0:	b	40e5a8 <wcrtomb@plt+0xbd38>
  40e5f4:	mov	w8, w25
  40e5f8:	cmp	w8, w22
  40e5fc:	b.ne	40e5c4 <wcrtomb@plt+0xbd54>  // b.any
  40e600:	b	40e5a8 <wcrtomb@plt+0xbd38>
  40e604:	ldr	w20, [sp, #56]
  40e608:	b	40e51c <wcrtomb@plt+0xbcac>
  40e60c:	ldr	w20, [sp, #56]
  40e610:	str	wzr, [sp, #24]
  40e614:	b	40dc48 <wcrtomb@plt+0xb3d8>
  40e618:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40e61c:	add	x20, x20, #0x370
  40e620:	b	40e668 <wcrtomb@plt+0xbdf8>
  40e624:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40e628:	add	x20, x20, #0x388
  40e62c:	b	40e668 <wcrtomb@plt+0xbdf8>
  40e630:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40e634:	add	x20, x20, #0x3a0
  40e638:	b	40e668 <wcrtomb@plt+0xbdf8>
  40e63c:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40e640:	add	x20, x20, #0x3b8
  40e644:	b	40e668 <wcrtomb@plt+0xbdf8>
  40e648:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40e64c:	add	x20, x20, #0x3d0
  40e650:	b	40e668 <wcrtomb@plt+0xbdf8>
  40e654:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40e658:	add	x20, x20, #0x3e8
  40e65c:	b	40e668 <wcrtomb@plt+0xbdf8>
  40e660:	adrp	x20, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40e664:	add	x20, x20, #0x400
  40e668:	ldrb	w8, [x23, #1048]
  40e66c:	cbz	w8, 40e678 <wcrtomb@plt+0xbe08>
  40e670:	ldrb	w8, [x20, #16]
  40e674:	cbz	w8, 40e6bc <wcrtomb@plt+0xbe4c>
  40e678:	mov	w22, wzr
  40e67c:	b	40e68c <wcrtomb@plt+0xbe1c>
  40e680:	add	w22, w22, #0x1
  40e684:	cmp	w22, #0x100
  40e688:	b.eq	40e6cc <wcrtomb@plt+0xbe5c>  // b.none
  40e68c:	ldr	x8, [x20, #8]
  40e690:	mov	w0, w22
  40e694:	blr	x8
  40e698:	cbz	w0, 40e680 <wcrtomb@plt+0xbe10>
  40e69c:	lsr	w8, w22, #6
  40e6a0:	lsl	x8, x8, #3
  40e6a4:	ldr	x9, [x28, x8]
  40e6a8:	mov	w10, #0x1                   	// #1
  40e6ac:	lsl	x10, x10, x22
  40e6b0:	orr	x9, x9, x10
  40e6b4:	str	x9, [x28, x8]
  40e6b8:	b	40e680 <wcrtomb@plt+0xbe10>
  40e6bc:	str	wzr, [sp, #24]
  40e6c0:	ldr	w20, [sp, #56]
  40e6c4:	cbnz	x27, 40e6d8 <wcrtomb@plt+0xbe68>
  40e6c8:	b	40e99c <wcrtomb@plt+0xc12c>
  40e6cc:	ldr	x27, [x19]
  40e6d0:	ldr	w20, [sp, #56]
  40e6d4:	cbz	x27, 40e99c <wcrtomb@plt+0xc12c>
  40e6d8:	ldr	x1, [x23, #32]
  40e6dc:	orr	w20, w20, #0x8
  40e6e0:	ldrb	w8, [x1]
  40e6e4:	add	x8, x23, x8, lsl #2
  40e6e8:	ldr	w22, [x8, #1308]
  40e6ec:	cmn	w22, #0x1
  40e6f0:	b.ne	40e738 <wcrtomb@plt+0xbec8>  // b.any
  40e6f4:	mov	w21, w20
  40e6f8:	ldr	x20, [sp, #32]
  40e6fc:	sub	x0, x29, #0x14
  40e700:	mov	x2, x27
  40e704:	mov	x3, x20
  40e708:	bl	417eb0 <wcrtomb@plt+0x15640>
  40e70c:	sub	x8, x0, #0x1
  40e710:	cmn	x8, #0x3
  40e714:	b.cs	40e730 <wcrtomb@plt+0xbec0>  // b.hs, b.nlast
  40e718:	ldur	w22, [x29, #-20]
  40e71c:	cmp	w0, #0x1
  40e720:	str	w22, [x25]
  40e724:	b.ne	40e760 <wcrtomb@plt+0xbef0>  // b.any
  40e728:	mov	w20, w21
  40e72c:	b	40e73c <wcrtomb@plt+0xbecc>
  40e730:	str	xzr, [x20]
  40e734:	mov	w20, w21
  40e738:	str	w22, [x25]
  40e73c:	ldr	x8, [x24]
  40e740:	mov	w9, #0x1                   	// #1
  40e744:	ldrb	w26, [x8]
  40e748:	add	x8, x8, x9
  40e74c:	str	x8, [x24]
  40e750:	ldr	x8, [x19]
  40e754:	sub	x8, x8, x9
  40e758:	str	x8, [x19]
  40e75c:	b	40dc48 <wcrtomb@plt+0xb3d8>
  40e760:	ldr	x8, [x24]
  40e764:	sxtw	x9, w0
  40e768:	mov	w26, #0xffffffff            	// #-1
  40e76c:	mov	w20, w21
  40e770:	b	40e748 <wcrtomb@plt+0xbed8>
  40e774:	cmp	w20, #0x7
  40e778:	b.ne	40e794 <wcrtomb@plt+0xbf24>  // b.any
  40e77c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40e780:	add	x1, x1, #0x6b4
  40e784:	mov	w2, #0x5                   	// #5
  40e788:	mov	x0, xzr
  40e78c:	bl	402740 <dcgettext@plt>
  40e790:	bl	4029ac <wcrtomb@plt+0x13c>
  40e794:	ldr	w9, [sp, #12]
  40e798:	ldr	w8, [sp, #24]
  40e79c:	tbz	w8, #0, 40e834 <wcrtomb@plt+0xbfc4>
  40e7a0:	ldrb	w8, [x23, #1048]
  40e7a4:	cbz	w8, 40e83c <wcrtomb@plt+0xbfcc>
  40e7a8:	cmp	w9, #0x5e
  40e7ac:	b.eq	40e7b8 <wcrtomb@plt+0xbf48>  // b.none
  40e7b0:	ldr	x8, [x23, #104]
  40e7b4:	cbz	x8, 40e870 <wcrtomb@plt+0xc000>
  40e7b8:	ldr	w8, [sp, #8]
  40e7bc:	strb	w8, [x23, #88]
  40e7c0:	sub	x8, x29, #0x40
  40e7c4:	ldp	x9, x10, [x8]
  40e7c8:	ldp	x11, x12, [x8, #16]
  40e7cc:	orr	x8, x10, x9
  40e7d0:	orr	x8, x8, x11
  40e7d4:	orr	x8, x8, x12
  40e7d8:	cbz	x8, 40e8d4 <wcrtomb@plt+0xc064>
  40e7dc:	ldr	x8, [x23, #8]
  40e7e0:	cmp	x8, #0x0
  40e7e4:	b.le	40e92c <wcrtomb@plt+0xc0bc>
  40e7e8:	ldr	x0, [x23]
  40e7ec:	mov	x19, xzr
  40e7f0:	add	x13, x0, #0x10
  40e7f4:	ldp	x14, x15, [x13, #-16]
  40e7f8:	ldp	x16, x17, [x13]
  40e7fc:	eor	x14, x14, x9
  40e800:	eor	x15, x15, x10
  40e804:	eor	x16, x16, x11
  40e808:	orr	x14, x15, x14
  40e80c:	orr	x14, x14, x16
  40e810:	eor	x15, x17, x12
  40e814:	orr	x14, x14, x15
  40e818:	cbz	x14, 40e974 <wcrtomb@plt+0xc104>
  40e81c:	add	x19, x19, #0x1
  40e820:	cmp	x8, x19
  40e824:	add	x13, x13, #0x20
  40e828:	b.ne	40e7f4 <wcrtomb@plt+0xbf84>  // b.any
  40e82c:	mov	x19, x8
  40e830:	b	40e934 <wcrtomb@plt+0xc0c4>
  40e834:	mov	w0, #0x112                 	// #274
  40e838:	b	40e97c <wcrtomb@plt+0xc10c>
  40e83c:	cmp	w9, #0x5e
  40e840:	b.ne	40e870 <wcrtomb@plt+0xc000>  // b.any
  40e844:	sub	x8, x29, #0x40
  40e848:	ldp	q0, q1, [x8]
  40e84c:	sub	x9, x29, #0x40
  40e850:	mvn	v0.16b, v0.16b
  40e854:	mvn	v1.16b, v1.16b
  40e858:	stp	q0, q1, [x8]
  40e85c:	ldrb	w8, [x23, #449]
  40e860:	tbz	w8, #0, 40e870 <wcrtomb@plt+0xc000>
  40e864:	fmov	x8, d0
  40e868:	and	x8, x8, #0xfffffffffffffbff
  40e86c:	str	x8, [x9]
  40e870:	ldr	x8, [x23, #8]
  40e874:	cmp	x8, #0x0
  40e878:	b.le	40e8dc <wcrtomb@plt+0xc06c>
  40e87c:	ldr	x0, [x23]
  40e880:	sub	x12, x29, #0x40
  40e884:	ldp	x9, x10, [x12]
  40e888:	ldp	x11, x12, [x12, #16]
  40e88c:	mov	x19, xzr
  40e890:	add	x13, x0, #0x10
  40e894:	ldp	x14, x15, [x13, #-16]
  40e898:	ldp	x16, x17, [x13]
  40e89c:	eor	x14, x14, x9
  40e8a0:	eor	x15, x15, x10
  40e8a4:	eor	x16, x16, x11
  40e8a8:	orr	x14, x15, x14
  40e8ac:	orr	x14, x14, x16
  40e8b0:	eor	x15, x17, x12
  40e8b4:	orr	x14, x14, x15
  40e8b8:	cbz	x14, 40e924 <wcrtomb@plt+0xc0b4>
  40e8bc:	add	x19, x19, #0x1
  40e8c0:	cmp	x8, x19
  40e8c4:	add	x13, x13, #0x20
  40e8c8:	b.ne	40e894 <wcrtomb@plt+0xc024>  // b.any
  40e8cc:	mov	x19, x8
  40e8d0:	b	40e8e4 <wcrtomb@plt+0xc074>
  40e8d4:	mov	x19, #0xffffffffffffffff    	// #-1
  40e8d8:	b	40e974 <wcrtomb@plt+0xc104>
  40e8dc:	ldr	x0, [x23]
  40e8e0:	mov	x19, xzr
  40e8e4:	mov	x1, x23
  40e8e8:	ldr	x9, [x1, #16]!
  40e8ec:	cmp	x9, x8
  40e8f0:	b.gt	40e90c <wcrtomb@plt+0xc09c>
  40e8f4:	mov	x3, #0xfffffffffffffeeb    	// #-277
  40e8f8:	mov	w2, #0x1                   	// #1
  40e8fc:	movk	x3, #0x7fff, lsl #48
  40e900:	mov	w4, #0x20                  	// #32
  40e904:	bl	40d920 <wcrtomb@plt+0xb0b0>
  40e908:	ldr	x8, [x23, #8]
  40e90c:	add	x8, x8, #0x1
  40e910:	stp	x0, x8, [x23]
  40e914:	sub	x8, x29, #0x40
  40e918:	ldp	q1, q0, [x8]
  40e91c:	add	x8, x0, x19, lsl #5
  40e920:	stp	q1, q0, [x8]
  40e924:	add	x0, x19, #0x114
  40e928:	b	40e97c <wcrtomb@plt+0xc10c>
  40e92c:	ldr	x0, [x23]
  40e930:	mov	x19, xzr
  40e934:	mov	x1, x23
  40e938:	ldr	x9, [x1, #16]!
  40e93c:	cmp	x9, x8
  40e940:	b.gt	40e95c <wcrtomb@plt+0xc0ec>
  40e944:	mov	x3, #0xfffffffffffffeeb    	// #-277
  40e948:	mov	w2, #0x1                   	// #1
  40e94c:	movk	x3, #0x7fff, lsl #48
  40e950:	mov	w4, #0x20                  	// #32
  40e954:	bl	40d920 <wcrtomb@plt+0xb0b0>
  40e958:	ldr	x8, [x23, #8]
  40e95c:	add	x8, x8, #0x1
  40e960:	stp	x0, x8, [x23]
  40e964:	sub	x8, x29, #0x40
  40e968:	ldp	q1, q0, [x8]
  40e96c:	add	x8, x0, x19, lsl #5
  40e970:	stp	q1, q0, [x8]
  40e974:	str	x19, [x23, #80]
  40e978:	mov	w0, #0x113                 	// #275
  40e97c:	ldp	x20, x19, [sp, #336]
  40e980:	ldp	x22, x21, [sp, #320]
  40e984:	ldp	x24, x23, [sp, #304]
  40e988:	ldp	x26, x25, [sp, #288]
  40e98c:	ldp	x28, x27, [sp, #272]
  40e990:	ldp	x29, x30, [sp, #256]
  40e994:	add	sp, sp, #0x160
  40e998:	ret
  40e99c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40e9a0:	add	x1, x1, #0x6e9
  40e9a4:	mov	w2, #0x5                   	// #5
  40e9a8:	mov	x0, xzr
  40e9ac:	bl	402740 <dcgettext@plt>
  40e9b0:	bl	40298c <wcrtomb@plt+0x11c>
  40e9b4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40e9b8:	add	x1, x1, #0x69c
  40e9bc:	b	40e9a4 <wcrtomb@plt+0xc134>
  40e9c0:	sub	sp, sp, #0xd0
  40e9c4:	stp	x29, x30, [sp, #128]
  40e9c8:	stp	x26, x25, [sp, #144]
  40e9cc:	stp	x24, x23, [sp, #160]
  40e9d0:	stp	x22, x21, [sp, #176]
  40e9d4:	stp	x20, x19, [sp, #192]
  40e9d8:	ldr	x1, [x0, #128]
  40e9dc:	mov	x19, x0
  40e9e0:	add	x29, sp, #0x80
  40e9e4:	cmp	x1, #0x100
  40e9e8:	b.cc	40ea00 <wcrtomb@plt+0xc190>  // b.lo, b.ul, b.last
  40e9ec:	cmp	x1, #0x113
  40e9f0:	b.gt	40ea00 <wcrtomb@plt+0xc190>
  40e9f4:	sub	x8, x1, #0x10b
  40e9f8:	cmp	x8, #0x9
  40e9fc:	b.cs	40ec48 <wcrtomb@plt+0xc3d8>  // b.hs, b.nlast
  40ea00:	mov	x0, x19
  40ea04:	bl	40a490 <wcrtomb@plt+0x7c20>
  40ea08:	mov	x0, x19
  40ea0c:	bl	40a624 <wcrtomb@plt+0x7db4>
  40ea10:	mov	x1, x0
  40ea14:	str	x0, [x19, #128]
  40ea18:	sub	x8, x1, #0x101
  40ea1c:	cmp	x8, #0x3
  40ea20:	b.ls	40ea64 <wcrtomb@plt+0xc1f4>  // b.plast
  40ea24:	ldp	x20, x19, [sp, #192]
  40ea28:	ldp	x22, x21, [sp, #176]
  40ea2c:	ldp	x24, x23, [sp, #160]
  40ea30:	ldp	x26, x25, [sp, #144]
  40ea34:	ldp	x29, x30, [sp, #128]
  40ea38:	add	sp, sp, #0xd0
  40ea3c:	ret
  40ea40:	mov	x0, x19
  40ea44:	bl	40a490 <wcrtomb@plt+0x7c20>
  40ea48:	mov	x0, x19
  40ea4c:	bl	40a624 <wcrtomb@plt+0x7db4>
  40ea50:	mov	x1, x0
  40ea54:	str	x0, [x19, #128]
  40ea58:	sub	x8, x1, #0x101
  40ea5c:	cmp	x8, #0x4
  40ea60:	b.cs	40ea24 <wcrtomb@plt+0xc1b4>  // b.hs, b.nlast
  40ea64:	cmp	x1, #0x104
  40ea68:	b.ne	40ea40 <wcrtomb@plt+0xc1d0>  // b.any
  40ea6c:	ldr	x21, [x19, #152]
  40ea70:	ldp	w23, w24, [x19, #64]
  40ea74:	mov	x0, x19
  40ea78:	mov	x1, x21
  40ea7c:	orr	w25, w23, w24
  40ea80:	bl	40f0f4 <wcrtomb@plt+0xc884>
  40ea84:	sub	x22, x21, x0
  40ea88:	cbz	w25, 40eb40 <wcrtomb@plt+0xc2d0>
  40ea8c:	mov	x20, x0
  40ea90:	tbnz	w24, #31, 40ec18 <wcrtomb@plt+0xc3a8>
  40ea94:	cbz	w23, 40ec30 <wcrtomb@plt+0xc3c0>
  40ea98:	cmp	w23, #0x2
  40ea9c:	lsl	x21, x21, #3
  40eaa0:	b.lt	40eb60 <wcrtomb@plt+0xc2f0>  // b.tstop
  40eaa4:	neg	x24, x20
  40eaa8:	mov	w23, #0x1                   	// #1
  40eaac:	b	40ead0 <wcrtomb@plt+0xc260>
  40eab0:	mov	w1, #0x105                 	// #261
  40eab4:	mov	w2, #0x3                   	// #3
  40eab8:	mov	x0, x19
  40eabc:	bl	40d820 <wcrtomb@plt+0xafb0>
  40eac0:	ldr	w8, [x19, #64]
  40eac4:	add	w23, w23, #0x1
  40eac8:	cmp	w23, w8
  40eacc:	b.ge	40eb64 <wcrtomb@plt+0xc2f4>  // b.tcont
  40ead0:	ldrb	w8, [x19, #1048]
  40ead4:	cbz	w8, 40eb10 <wcrtomb@plt+0xc2a0>
  40ead8:	cmp	x20, #0x1
  40eadc:	mov	x25, x20
  40eae0:	mov	x26, x22
  40eae4:	b.lt	40eab0 <wcrtomb@plt+0xc240>  // b.tstop
  40eae8:	ldr	x8, [x19, #144]
  40eaec:	ldr	x9, [x19, #280]
  40eaf0:	mov	x0, x19
  40eaf4:	ldr	x1, [x8, x26, lsl #3]
  40eaf8:	ldrb	w2, [x9, x26]
  40eafc:	bl	40d820 <wcrtomb@plt+0xafb0>
  40eb00:	subs	x25, x25, #0x1
  40eb04:	add	x26, x26, #0x1
  40eb08:	b.ne	40eae8 <wcrtomb@plt+0xc278>  // b.any
  40eb0c:	b	40eab0 <wcrtomb@plt+0xc240>
  40eb10:	cmp	x20, #0x1
  40eb14:	mov	x25, x24
  40eb18:	b.lt	40eab0 <wcrtomb@plt+0xc240>  // b.tstop
  40eb1c:	ldr	x8, [x19, #144]
  40eb20:	mov	w2, #0x3                   	// #3
  40eb24:	mov	x0, x19
  40eb28:	add	x8, x8, x21
  40eb2c:	ldr	x1, [x8, x25, lsl #3]
  40eb30:	bl	40d820 <wcrtomb@plt+0xafb0>
  40eb34:	adds	x25, x25, #0x1
  40eb38:	b.cc	40eb1c <wcrtomb@plt+0xc2ac>  // b.lo, b.ul, b.last
  40eb3c:	b	40eab0 <wcrtomb@plt+0xc240>
  40eb40:	mov	x0, x19
  40eb44:	str	x22, [x19, #152]
  40eb48:	bl	40a624 <wcrtomb@plt+0x7db4>
  40eb4c:	str	x0, [x19, #128]
  40eb50:	mov	x0, x19
  40eb54:	bl	40e9c0 <wcrtomb@plt+0xc150>
  40eb58:	ldr	x1, [x19, #128]
  40eb5c:	b	40ea58 <wcrtomb@plt+0xc1e8>
  40eb60:	mov	w23, #0x1                   	// #1
  40eb64:	ldr	w8, [x19, #68]
  40eb68:	cmp	w23, w8
  40eb6c:	b.ge	40ea48 <wcrtomb@plt+0xc1d8>  // b.tcont
  40eb70:	neg	x24, x20
  40eb74:	b	40eba8 <wcrtomb@plt+0xc338>
  40eb78:	mov	w1, #0x101                 	// #257
  40eb7c:	mov	w2, #0x3                   	// #3
  40eb80:	mov	x0, x19
  40eb84:	bl	40d820 <wcrtomb@plt+0xafb0>
  40eb88:	mov	w1, #0x105                 	// #261
  40eb8c:	mov	w2, #0x3                   	// #3
  40eb90:	mov	x0, x19
  40eb94:	bl	40d820 <wcrtomb@plt+0xafb0>
  40eb98:	ldr	w8, [x19, #68]
  40eb9c:	add	w23, w23, #0x1
  40eba0:	cmp	w23, w8
  40eba4:	b.ge	40ea48 <wcrtomb@plt+0xc1d8>  // b.tcont
  40eba8:	ldrb	w8, [x19, #1048]
  40ebac:	cbz	w8, 40ebe8 <wcrtomb@plt+0xc378>
  40ebb0:	cmp	x20, #0x1
  40ebb4:	mov	x25, x20
  40ebb8:	mov	x26, x22
  40ebbc:	b.lt	40eb78 <wcrtomb@plt+0xc308>  // b.tstop
  40ebc0:	ldr	x8, [x19, #144]
  40ebc4:	ldr	x9, [x19, #280]
  40ebc8:	mov	x0, x19
  40ebcc:	ldr	x1, [x8, x26, lsl #3]
  40ebd0:	ldrb	w2, [x9, x26]
  40ebd4:	bl	40d820 <wcrtomb@plt+0xafb0>
  40ebd8:	subs	x25, x25, #0x1
  40ebdc:	add	x26, x26, #0x1
  40ebe0:	b.ne	40ebc0 <wcrtomb@plt+0xc350>  // b.any
  40ebe4:	b	40eb78 <wcrtomb@plt+0xc308>
  40ebe8:	cmp	x20, #0x1
  40ebec:	mov	x25, x24
  40ebf0:	b.lt	40eb78 <wcrtomb@plt+0xc308>  // b.tstop
  40ebf4:	ldr	x8, [x19, #144]
  40ebf8:	mov	w2, #0x3                   	// #3
  40ebfc:	mov	x0, x19
  40ec00:	add	x8, x8, x21
  40ec04:	ldr	x1, [x8, x25, lsl #3]
  40ec08:	bl	40d820 <wcrtomb@plt+0xafb0>
  40ec0c:	adds	x25, x25, #0x1
  40ec10:	b.cc	40ebf4 <wcrtomb@plt+0xc384>  // b.lo, b.ul, b.last
  40ec14:	b	40eb78 <wcrtomb@plt+0xc308>
  40ec18:	mov	w1, #0x103                 	// #259
  40ec1c:	mov	w2, #0x3                   	// #3
  40ec20:	mov	x0, x19
  40ec24:	bl	40d820 <wcrtomb@plt+0xafb0>
  40ec28:	ldr	w23, [x19, #64]
  40ec2c:	cbnz	w23, 40ea98 <wcrtomb@plt+0xc228>
  40ec30:	mov	w1, #0x101                 	// #257
  40ec34:	mov	w2, #0x3                   	// #3
  40ec38:	mov	x0, x19
  40ec3c:	bl	40d820 <wcrtomb@plt+0xafb0>
  40ec40:	ldr	w23, [x19, #64]
  40ec44:	b	40ea98 <wcrtomb@plt+0xc228>
  40ec48:	cmp	x1, #0x107
  40ec4c:	b.eq	40ecd8 <wcrtomb@plt+0xc468>  // b.none
  40ec50:	cmp	x1, #0x109
  40ec54:	b.eq	40ed8c <wcrtomb@plt+0xc51c>  // b.none
  40ec58:	cmp	x1, #0x10a
  40ec5c:	b.ne	40edec <wcrtomb@plt+0xc57c>  // b.any
  40ec60:	ldrb	w8, [x19, #1050]
  40ec64:	cbz	w8, 40ea00 <wcrtomb@plt+0xc190>
  40ec68:	ldr	x1, [x19, #200]
  40ec6c:	cbnz	x1, 40ef38 <wcrtomb@plt+0xc6c8>
  40ec70:	ldr	x9, [x19, #448]
  40ec74:	ldr	x8, [x19, #8]
  40ec78:	mov	x10, #0xfffffffffffffbff    	// #-1025
  40ec7c:	tst	x9, #0x40
  40ec80:	csinv	x10, x10, xzr, eq  // eq = none
  40ec84:	tst	x9, #0x80
  40ec88:	and	x9, x10, #0xfffffffffffffffe
  40ec8c:	csel	x20, x10, x9, eq  // eq = none
  40ec90:	cmp	x8, #0x0
  40ec94:	b.le	40ee0c <wcrtomb@plt+0xc59c>
  40ec98:	ldr	x0, [x19]
  40ec9c:	mov	x21, xzr
  40eca0:	add	x9, x0, #0x10
  40eca4:	ldp	x10, x11, [x9, #-16]
  40eca8:	ldp	x12, x13, [x9]
  40ecac:	eor	x10, x10, x20
  40ecb0:	orn	x10, x10, x11
  40ecb4:	orr	x10, x10, x12
  40ecb8:	orr	x10, x10, x13
  40ecbc:	cbz	x10, 40ee54 <wcrtomb@plt+0xc5e4>
  40ecc0:	add	x21, x21, #0x1
  40ecc4:	cmp	x8, x21
  40ecc8:	add	x9, x9, #0x20
  40eccc:	b.ne	40eca4 <wcrtomb@plt+0xc434>  // b.any
  40ecd0:	mov	x21, x8
  40ecd4:	b	40ee14 <wcrtomb@plt+0xc5a4>
  40ecd8:	mov	x0, x19
  40ecdc:	bl	40a624 <wcrtomb@plt+0x7db4>
  40ece0:	str	x0, [x19, #128]
  40ece4:	mov	x0, x19
  40ece8:	bl	40e9c0 <wcrtomb@plt+0xc150>
  40ecec:	ldr	x8, [x19, #128]
  40ecf0:	cmp	x8, #0x106
  40ecf4:	b.eq	40ed34 <wcrtomb@plt+0xc4c4>  // b.none
  40ecf8:	cmp	x8, #0x108
  40ecfc:	b.eq	40ed34 <wcrtomb@plt+0xc4c4>  // b.none
  40ed00:	tbnz	x8, #63, 40ed34 <wcrtomb@plt+0xc4c4>
  40ed04:	mov	x0, x19
  40ed08:	bl	40e9c0 <wcrtomb@plt+0xc150>
  40ed0c:	mov	w1, #0x105                 	// #261
  40ed10:	mov	w2, #0x3                   	// #3
  40ed14:	mov	x0, x19
  40ed18:	bl	40d820 <wcrtomb@plt+0xafb0>
  40ed1c:	b	40ecec <wcrtomb@plt+0xc47c>
  40ed20:	mov	w1, #0x106                 	// #262
  40ed24:	mov	w2, #0x3                   	// #3
  40ed28:	mov	x0, x19
  40ed2c:	bl	40d820 <wcrtomb@plt+0xafb0>
  40ed30:	ldr	x8, [x19, #128]
  40ed34:	cmp	x8, #0x108
  40ed38:	b.eq	40ea08 <wcrtomb@plt+0xc198>  // b.none
  40ed3c:	cmp	x8, #0x106
  40ed40:	b.ne	40f0dc <wcrtomb@plt+0xc86c>  // b.any
  40ed44:	mov	x0, x19
  40ed48:	bl	40a624 <wcrtomb@plt+0x7db4>
  40ed4c:	str	x0, [x19, #128]
  40ed50:	mov	x0, x19
  40ed54:	bl	40e9c0 <wcrtomb@plt+0xc150>
  40ed58:	ldr	x8, [x19, #128]
  40ed5c:	cmp	x8, #0x106
  40ed60:	b.eq	40ed20 <wcrtomb@plt+0xc4b0>  // b.none
  40ed64:	cmp	x8, #0x108
  40ed68:	b.eq	40ed20 <wcrtomb@plt+0xc4b0>  // b.none
  40ed6c:	tbnz	x8, #63, 40ed20 <wcrtomb@plt+0xc4b0>
  40ed70:	mov	x0, x19
  40ed74:	bl	40e9c0 <wcrtomb@plt+0xc150>
  40ed78:	mov	w1, #0x105                 	// #261
  40ed7c:	mov	w2, #0x3                   	// #3
  40ed80:	mov	x0, x19
  40ed84:	bl	40d820 <wcrtomb@plt+0xafb0>
  40ed88:	b	40ed58 <wcrtomb@plt+0xc4e8>
  40ed8c:	ldr	w1, [x19, #72]
  40ed90:	cmn	w1, #0x1
  40ed94:	b.eq	40ee04 <wcrtomb@plt+0xc594>  // b.none
  40ed98:	mov	x0, x19
  40ed9c:	bl	40d758 <wcrtomb@plt+0xaee8>
  40eda0:	ldrb	w8, [x19, #457]
  40eda4:	cbz	w8, 40ea08 <wcrtomb@plt+0xc198>
  40eda8:	ldr	w0, [x19, #72]
  40edac:	mov	x1, sp
  40edb0:	bl	411134 <wcrtomb@plt+0xe8c4>
  40edb4:	cmp	w0, #0x1
  40edb8:	b.lt	40ea08 <wcrtomb@plt+0xc198>  // b.tstop
  40edbc:	mov	w20, w0
  40edc0:	mov	x21, sp
  40edc4:	ldr	w1, [x21], #4
  40edc8:	mov	x0, x19
  40edcc:	bl	40d758 <wcrtomb@plt+0xaee8>
  40edd0:	mov	w1, #0x106                 	// #262
  40edd4:	mov	w2, #0x3                   	// #3
  40edd8:	mov	x0, x19
  40eddc:	bl	40d820 <wcrtomb@plt+0xafb0>
  40ede0:	subs	x20, x20, #0x1
  40ede4:	b.ne	40edc4 <wcrtomb@plt+0xc554>  // b.any
  40ede8:	b	40ea08 <wcrtomb@plt+0xc198>
  40edec:	mov	w1, #0x100                 	// #256
  40edf0:	mov	w2, #0x3                   	// #3
  40edf4:	mov	x0, x19
  40edf8:	bl	40d820 <wcrtomb@plt+0xafb0>
  40edfc:	ldr	x1, [x19, #128]
  40ee00:	b	40ea18 <wcrtomb@plt+0xc1a8>
  40ee04:	mov	w1, #0x112                 	// #274
  40ee08:	b	40f0cc <wcrtomb@plt+0xc85c>
  40ee0c:	ldr	x0, [x19]
  40ee10:	mov	x21, xzr
  40ee14:	mov	x1, x19
  40ee18:	ldr	x9, [x1, #16]!
  40ee1c:	cmp	x9, x8
  40ee20:	b.gt	40ee3c <wcrtomb@plt+0xc5cc>
  40ee24:	mov	x3, #0xfffffffffffffeeb    	// #-277
  40ee28:	mov	w2, #0x1                   	// #1
  40ee2c:	movk	x3, #0x7fff, lsl #48
  40ee30:	mov	w4, #0x20                  	// #32
  40ee34:	bl	40d920 <wcrtomb@plt+0xb0b0>
  40ee38:	ldr	x8, [x19, #8]
  40ee3c:	add	x8, x8, #0x1
  40ee40:	add	x9, x0, x21, lsl #5
  40ee44:	mov	x10, #0xffffffffffffffff    	// #-1
  40ee48:	stp	x0, x8, [x19]
  40ee4c:	stp	x20, x10, [x9]
  40ee50:	stp	xzr, xzr, [x9, #16]
  40ee54:	adrp	x22, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40ee58:	add	x8, x21, #0x114
  40ee5c:	add	x20, x19, #0x10
  40ee60:	mov	w21, #0x1                   	// #1
  40ee64:	add	x22, x22, #0x448
  40ee68:	str	x8, [x19, #200]
  40ee6c:	b	40ee9c <wcrtomb@plt+0xc62c>
  40ee70:	ldp	q0, q1, [x23]
  40ee74:	add	x8, x8, #0x1
  40ee78:	add	x9, x0, x24, lsl #5
  40ee7c:	stp	x0, x8, [x19]
  40ee80:	stp	q0, q1, [x9]
  40ee84:	add	x9, x19, x21, lsl #3
  40ee88:	add	x21, x21, #0x1
  40ee8c:	add	x8, x24, #0x114
  40ee90:	cmp	x21, #0x9
  40ee94:	str	x8, [x9, #200]
  40ee98:	b.eq	40ef34 <wcrtomb@plt+0xc6c4>  // b.none
  40ee9c:	ldr	x8, [x19, #8]
  40eea0:	add	x23, x22, x21, lsl #5
  40eea4:	cmp	x8, #0x0
  40eea8:	b.le	40ef00 <wcrtomb@plt+0xc690>
  40eeac:	ldr	x0, [x19]
  40eeb0:	ldp	x9, x10, [x23]
  40eeb4:	ldp	x11, x12, [x23, #16]
  40eeb8:	mov	x24, xzr
  40eebc:	add	x13, x0, #0x10
  40eec0:	ldp	x14, x15, [x13, #-16]
  40eec4:	ldp	x16, x17, [x13]
  40eec8:	eor	x14, x14, x9
  40eecc:	eor	x15, x15, x10
  40eed0:	eor	x16, x16, x11
  40eed4:	orr	x14, x15, x14
  40eed8:	orr	x14, x14, x16
  40eedc:	eor	x15, x17, x12
  40eee0:	orr	x14, x14, x15
  40eee4:	cbz	x14, 40ee84 <wcrtomb@plt+0xc614>
  40eee8:	add	x24, x24, #0x1
  40eeec:	cmp	x8, x24
  40eef0:	add	x13, x13, #0x20
  40eef4:	b.ne	40eec0 <wcrtomb@plt+0xc650>  // b.any
  40eef8:	mov	x24, x8
  40eefc:	b	40ef08 <wcrtomb@plt+0xc698>
  40ef00:	ldr	x0, [x19]
  40ef04:	mov	x24, xzr
  40ef08:	ldr	x9, [x20]
  40ef0c:	cmp	x9, x8
  40ef10:	b.gt	40ee70 <wcrtomb@plt+0xc600>
  40ef14:	mov	x3, #0xfffffffffffffeeb    	// #-277
  40ef18:	mov	w2, #0x1                   	// #1
  40ef1c:	movk	x3, #0x7fff, lsl #48
  40ef20:	mov	w4, #0x20                  	// #32
  40ef24:	mov	x1, x20
  40ef28:	bl	40d920 <wcrtomb@plt+0xb0b0>
  40ef2c:	ldr	x8, [x19, #8]
  40ef30:	b	40ee70 <wcrtomb@plt+0xc600>
  40ef34:	ldr	x1, [x19, #200]
  40ef38:	mov	x0, x19
  40ef3c:	bl	40a490 <wcrtomb@plt+0x7c20>
  40ef40:	ldr	x1, [x19, #208]
  40ef44:	mov	x0, x19
  40ef48:	bl	40a490 <wcrtomb@plt+0x7c20>
  40ef4c:	mov	w1, #0xe0                  	// #224
  40ef50:	mov	w2, #0x3                   	// #3
  40ef54:	mov	x0, x19
  40ef58:	bl	40d820 <wcrtomb@plt+0xafb0>
  40ef5c:	ldr	x1, [x19, #224]
  40ef60:	mov	x0, x19
  40ef64:	bl	40a490 <wcrtomb@plt+0x7c20>
  40ef68:	mov	w1, #0x105                 	// #261
  40ef6c:	mov	w2, #0x3                   	// #3
  40ef70:	mov	x0, x19
  40ef74:	bl	40d820 <wcrtomb@plt+0xafb0>
  40ef78:	mov	w1, #0x106                 	// #262
  40ef7c:	mov	w2, #0x3                   	// #3
  40ef80:	mov	x0, x19
  40ef84:	bl	40d820 <wcrtomb@plt+0xafb0>
  40ef88:	mov	w1, #0xed                  	// #237
  40ef8c:	mov	w2, #0x3                   	// #3
  40ef90:	mov	x0, x19
  40ef94:	bl	40d820 <wcrtomb@plt+0xafb0>
  40ef98:	ldr	x1, [x19, #240]
  40ef9c:	mov	x0, x19
  40efa0:	bl	40a490 <wcrtomb@plt+0x7c20>
  40efa4:	mov	w1, #0x105                 	// #261
  40efa8:	mov	w2, #0x3                   	// #3
  40efac:	mov	x0, x19
  40efb0:	bl	40d820 <wcrtomb@plt+0xafb0>
  40efb4:	mov	w1, #0x106                 	// #262
  40efb8:	mov	w2, #0x3                   	// #3
  40efbc:	mov	x0, x19
  40efc0:	bl	40d820 <wcrtomb@plt+0xafb0>
  40efc4:	ldr	x1, [x19, #232]
  40efc8:	mov	x0, x19
  40efcc:	bl	40a490 <wcrtomb@plt+0x7c20>
  40efd0:	mov	w1, #0xf0                  	// #240
  40efd4:	mov	w2, #0x3                   	// #3
  40efd8:	mov	x0, x19
  40efdc:	bl	40d820 <wcrtomb@plt+0xafb0>
  40efe0:	ldr	x1, [x19, #248]
  40efe4:	mov	x0, x19
  40efe8:	bl	40a490 <wcrtomb@plt+0x7c20>
  40efec:	mov	w1, #0x105                 	// #261
  40eff0:	mov	w2, #0x3                   	// #3
  40eff4:	mov	x0, x19
  40eff8:	bl	40d820 <wcrtomb@plt+0xafb0>
  40effc:	mov	w1, #0x106                 	// #262
  40f000:	mov	w2, #0x3                   	// #3
  40f004:	mov	x0, x19
  40f008:	bl	40d820 <wcrtomb@plt+0xafb0>
  40f00c:	mov	w1, #0xf4                  	// #244
  40f010:	mov	w2, #0x3                   	// #3
  40f014:	mov	x0, x19
  40f018:	bl	40d820 <wcrtomb@plt+0xafb0>
  40f01c:	ldr	x1, [x19, #264]
  40f020:	mov	x0, x19
  40f024:	bl	40a490 <wcrtomb@plt+0x7c20>
  40f028:	mov	w1, #0x105                 	// #261
  40f02c:	mov	w2, #0x3                   	// #3
  40f030:	mov	x0, x19
  40f034:	bl	40d820 <wcrtomb@plt+0xafb0>
  40f038:	mov	w1, #0x106                 	// #262
  40f03c:	mov	w2, #0x3                   	// #3
  40f040:	mov	x0, x19
  40f044:	bl	40d820 <wcrtomb@plt+0xafb0>
  40f048:	ldr	x1, [x19, #256]
  40f04c:	mov	x0, x19
  40f050:	bl	40a490 <wcrtomb@plt+0x7c20>
  40f054:	ldr	x1, [x19, #216]
  40f058:	mov	x0, x19
  40f05c:	bl	40a490 <wcrtomb@plt+0x7c20>
  40f060:	mov	w1, #0x105                 	// #261
  40f064:	mov	w2, #0x3                   	// #3
  40f068:	mov	x0, x19
  40f06c:	bl	40d820 <wcrtomb@plt+0xafb0>
  40f070:	mov	w1, #0x106                 	// #262
  40f074:	mov	w2, #0x3                   	// #3
  40f078:	mov	x0, x19
  40f07c:	bl	40d820 <wcrtomb@plt+0xafb0>
  40f080:	ldr	x1, [x19, #216]
  40f084:	mov	x0, x19
  40f088:	bl	40a490 <wcrtomb@plt+0x7c20>
  40f08c:	mov	w1, #0x105                 	// #261
  40f090:	mov	w2, #0x3                   	// #3
  40f094:	mov	x0, x19
  40f098:	bl	40d820 <wcrtomb@plt+0xafb0>
  40f09c:	mov	w1, #0x106                 	// #262
  40f0a0:	mov	w2, #0x3                   	// #3
  40f0a4:	mov	x0, x19
  40f0a8:	bl	40d820 <wcrtomb@plt+0xafb0>
  40f0ac:	ldr	x1, [x19, #216]
  40f0b0:	mov	x0, x19
  40f0b4:	bl	40a490 <wcrtomb@plt+0x7c20>
  40f0b8:	mov	w1, #0x105                 	// #261
  40f0bc:	mov	w2, #0x3                   	// #3
  40f0c0:	mov	x0, x19
  40f0c4:	bl	40d820 <wcrtomb@plt+0xafb0>
  40f0c8:	mov	w1, #0x106                 	// #262
  40f0cc:	mov	w2, #0x3                   	// #3
  40f0d0:	mov	x0, x19
  40f0d4:	bl	40d820 <wcrtomb@plt+0xafb0>
  40f0d8:	b	40ea08 <wcrtomb@plt+0xc198>
  40f0dc:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  40f0e0:	add	x1, x1, #0x727
  40f0e4:	mov	w2, #0x5                   	// #5
  40f0e8:	mov	x0, xzr
  40f0ec:	bl	402740 <dcgettext@plt>
  40f0f0:	bl	40298c <wcrtomb@plt+0x11c>
  40f0f4:	stp	x29, x30, [sp, #-48]!
  40f0f8:	stp	x20, x19, [sp, #32]
  40f0fc:	ldr	x8, [x0, #144]
  40f100:	sub	x20, x1, #0x1
  40f104:	mov	x19, x0
  40f108:	str	x21, [sp, #16]
  40f10c:	ldr	x8, [x8, x20, lsl #3]
  40f110:	mov	x29, sp
  40f114:	sub	x9, x8, #0x101
  40f118:	cmp	x9, #0x3
  40f11c:	b.cs	40f134 <wcrtomb@plt+0xc8c4>  // b.hs, b.nlast
  40f120:	mov	x0, x19
  40f124:	mov	x1, x20
  40f128:	bl	40f0f4 <wcrtomb@plt+0xc884>
  40f12c:	add	x0, x0, #0x1
  40f130:	b	40f16c <wcrtomb@plt+0xc8fc>
  40f134:	sub	x8, x8, #0x105
  40f138:	cmp	x8, #0x2
  40f13c:	b.cs	40f168 <wcrtomb@plt+0xc8f8>  // b.hs, b.nlast
  40f140:	mov	x0, x19
  40f144:	mov	x1, x20
  40f148:	bl	40f0f4 <wcrtomb@plt+0xc884>
  40f14c:	mov	x21, x0
  40f150:	sub	x1, x20, x0
  40f154:	mov	x0, x19
  40f158:	bl	40f0f4 <wcrtomb@plt+0xc884>
  40f15c:	add	x8, x21, x0
  40f160:	add	x0, x8, #0x1
  40f164:	b	40f16c <wcrtomb@plt+0xc8fc>
  40f168:	mov	w0, #0x1                   	// #1
  40f16c:	ldp	x20, x19, [sp, #32]
  40f170:	ldr	x21, [sp, #16]
  40f174:	ldp	x29, x30, [sp], #48
  40f178:	ret
  40f17c:	stp	x29, x30, [sp, #-96]!
  40f180:	stp	x26, x25, [sp, #32]
  40f184:	stp	x24, x23, [sp, #48]
  40f188:	stp	x22, x21, [sp, #64]
  40f18c:	stp	x20, x19, [sp, #80]
  40f190:	ldr	x23, [x1, #8]
  40f194:	mov	w19, w2
  40f198:	mov	x21, x1
  40f19c:	mov	x20, x0
  40f1a0:	cmp	x23, #0x1
  40f1a4:	str	x27, [sp, #16]
  40f1a8:	mov	x29, sp
  40f1ac:	b.lt	40f1c8 <wcrtomb@plt+0xc958>  // b.tstop
  40f1b0:	ldr	x9, [x21]
  40f1b4:	cmp	x23, #0x4
  40f1b8:	b.hi	40f1d0 <wcrtomb@plt+0xc960>  // b.pmore
  40f1bc:	mov	x24, xzr
  40f1c0:	mov	x8, xzr
  40f1c4:	b	40f23c <wcrtomb@plt+0xc9cc>
  40f1c8:	mov	x24, xzr
  40f1cc:	b	40f260 <wcrtomb@plt+0xc9f0>
  40f1d0:	and	x8, x23, #0x3
  40f1d4:	tst	x23, #0x3
  40f1d8:	mov	w11, #0x4                   	// #4
  40f1dc:	csel	x8, x11, x8, eq  // eq = none
  40f1e0:	sub	x8, x23, x8
  40f1e4:	add	x10, x9, #0x20
  40f1e8:	movi	v0.2d, #0x0
  40f1ec:	mov	x11, x8
  40f1f0:	movi	v1.2d, #0x0
  40f1f4:	sub	x12, x10, #0x20
  40f1f8:	sub	x13, x10, #0x18
  40f1fc:	add	x14, x10, #0x8
  40f200:	ld2	{v2.2d, v3.2d}, [x10]
  40f204:	ld2	{v4.2d, v5.2d}, [x12]
  40f208:	ld4	{v16.2s-v19.2s}, [x13]
  40f20c:	ld4	{v20.2s-v23.2s}, [x14]
  40f210:	subs	x11, x11, #0x4
  40f214:	add	x10, x10, #0x40
  40f218:	uaddw	v4.2d, v4.2d, v16.2s
  40f21c:	uaddw	v2.2d, v2.2d, v20.2s
  40f220:	eor	v0.16b, v4.16b, v0.16b
  40f224:	eor	v1.16b, v2.16b, v1.16b
  40f228:	b.ne	40f1f4 <wcrtomb@plt+0xc984>  // b.any
  40f22c:	eor	v0.16b, v1.16b, v0.16b
  40f230:	dup	v1.2d, v0.d[1]
  40f234:	eor	v0.16b, v0.16b, v1.16b
  40f238:	fmov	x24, d0
  40f23c:	add	x9, x9, x8, lsl #4
  40f240:	add	x9, x9, #0x8
  40f244:	ldur	x10, [x9, #-8]
  40f248:	ldr	w11, [x9], #16
  40f24c:	add	x8, x8, #0x1
  40f250:	cmp	x8, x23
  40f254:	add	x10, x10, x11
  40f258:	eor	x24, x10, x24
  40f25c:	b.lt	40f244 <wcrtomb@plt+0xc9d4>  // b.tstop
  40f260:	ldr	x8, [x20, #304]
  40f264:	cmp	x8, #0x1
  40f268:	b.lt	40f31c <wcrtomb@plt+0xcaac>  // b.tstop
  40f26c:	ldr	x9, [x20, #296]
  40f270:	mov	x22, xzr
  40f274:	mov	w10, #0x50                  	// #80
  40f278:	b	40f294 <wcrtomb@plt+0xca24>
  40f27c:	mov	x11, xzr
  40f280:	cmp	x11, x23
  40f284:	b.eq	40f498 <wcrtomb@plt+0xcc28>  // b.none
  40f288:	add	x22, x22, #0x1
  40f28c:	cmp	x22, x8
  40f290:	b.ge	40f320 <wcrtomb@plt+0xcab0>  // b.tcont
  40f294:	mul	x11, x22, x10
  40f298:	ldr	x11, [x9, x11]
  40f29c:	cmp	x24, x11
  40f2a0:	b.ne	40f288 <wcrtomb@plt+0xca18>  // b.any
  40f2a4:	madd	x11, x22, x10, x9
  40f2a8:	ldr	x11, [x11, #16]
  40f2ac:	cmp	x23, x11
  40f2b0:	b.ne	40f288 <wcrtomb@plt+0xca18>  // b.any
  40f2b4:	madd	x11, x22, x10, x9
  40f2b8:	ldrb	w11, [x11, #32]
  40f2bc:	cmp	w11, w19
  40f2c0:	b.ne	40f288 <wcrtomb@plt+0xca18>  // b.any
  40f2c4:	cmp	x23, #0x1
  40f2c8:	b.lt	40f27c <wcrtomb@plt+0xca0c>  // b.tstop
  40f2cc:	madd	x13, x22, x10, x9
  40f2d0:	ldr	x12, [x21]
  40f2d4:	ldr	x13, [x13, #8]
  40f2d8:	mov	x11, xzr
  40f2dc:	add	x12, x12, #0x8
  40f2e0:	add	x13, x13, #0x8
  40f2e4:	ldr	w14, [x12]
  40f2e8:	ldr	w15, [x13]
  40f2ec:	cmp	w14, w15
  40f2f0:	b.ne	40f280 <wcrtomb@plt+0xca10>  // b.any
  40f2f4:	ldur	x14, [x12, #-8]
  40f2f8:	ldur	x15, [x13, #-8]
  40f2fc:	cmp	x14, x15
  40f300:	b.ne	40f280 <wcrtomb@plt+0xca10>  // b.any
  40f304:	add	x11, x11, #0x1
  40f308:	add	x12, x12, #0x10
  40f30c:	cmp	x23, x11
  40f310:	add	x13, x13, #0x10
  40f314:	b.ne	40f2e4 <wcrtomb@plt+0xca74>  // b.any
  40f318:	b	40f498 <wcrtomb@plt+0xcc28>
  40f31c:	mov	x22, xzr
  40f320:	cmp	x23, #0x1
  40f324:	b.lt	40f394 <wcrtomb@plt+0xcb24>  // b.tstop
  40f328:	ldr	x9, [x20, #336]
  40f32c:	ldr	x10, [x21]
  40f330:	mov	x26, xzr
  40f334:	mov	w25, wzr
  40f338:	and	w11, w19, #0x7
  40f33c:	mov	w12, #0x1ff                 	// #511
  40f340:	mov	x13, x23
  40f344:	b	40f364 <wcrtomb@plt+0xcaf4>
  40f348:	ldr	x15, [x20, #144]
  40f34c:	ldr	x14, [x15, x14, lsl #3]
  40f350:	cmp	x14, #0x112
  40f354:	csel	w25, w12, w25, eq  // eq = none
  40f358:	subs	x13, x13, #0x1
  40f35c:	add	x10, x10, #0x10
  40f360:	b.eq	40f39c <wcrtomb@plt+0xcb2c>  // b.none
  40f364:	ldr	x14, [x10]
  40f368:	ldr	w15, [x9, x14, lsl #2]
  40f36c:	cbz	w15, 40f348 <wcrtomb@plt+0xcad8>
  40f370:	orr	w16, w15, w15, lsr #3
  40f374:	orr	w16, w16, w15, lsr #6
  40f378:	tst	w11, w16
  40f37c:	csel	w15, wzr, w15, eq  // eq = none
  40f380:	orr	w25, w15, w25
  40f384:	cbnz	x26, 40f358 <wcrtomb@plt+0xcae8>
  40f388:	ldr	x15, [x20, #144]
  40f38c:	ldr	x26, [x15, x14, lsl #3]
  40f390:	b	40f358 <wcrtomb@plt+0xcae8>
  40f394:	mov	w25, wzr
  40f398:	mov	x26, xzr
  40f39c:	ldr	x9, [x20, #312]
  40f3a0:	ldr	x0, [x20, #296]
  40f3a4:	cmp	x9, x8
  40f3a8:	b.gt	40f3c4 <wcrtomb@plt+0xcb54>
  40f3ac:	add	x1, x20, #0x138
  40f3b0:	mov	w2, #0x1                   	// #1
  40f3b4:	mov	x3, #0xffffffffffffffff    	// #-1
  40f3b8:	mov	w4, #0x50                  	// #80
  40f3bc:	bl	40d920 <wcrtomb@plt+0xb0b0>
  40f3c0:	ldr	x23, [x21, #8]
  40f3c4:	mov	w8, #0x50                  	// #80
  40f3c8:	mul	x8, x22, x8
  40f3cc:	lsr	x9, x23, #59
  40f3d0:	str	x0, [x20, #296]
  40f3d4:	str	x24, [x0, x8]
  40f3d8:	cbnz	x9, 40f4b8 <wcrtomb@plt+0xcc48>
  40f3dc:	add	x8, x22, x22, lsl #2
  40f3e0:	lsl	x27, x8, #4
  40f3e4:	add	x24, x0, x27
  40f3e8:	lsl	x0, x23, #4
  40f3ec:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40f3f0:	stp	xzr, x23, [x24, #16]
  40f3f4:	str	x0, [x24, #8]
  40f3f8:	ldr	x24, [x20, #296]
  40f3fc:	add	x23, x24, x27
  40f400:	ldr	x9, [x23, #24]!
  40f404:	ldr	x8, [x21, #8]
  40f408:	sub	x27, x23, #0x10
  40f40c:	cmp	x9, x8
  40f410:	b.ge	40f444 <wcrtomb@plt+0xcbd4>  // b.tcont
  40f414:	ldr	x0, [x27]
  40f418:	bl	402620 <free@plt>
  40f41c:	ldr	x8, [x21, #8]
  40f420:	ldr	x9, [x23]
  40f424:	mov	x3, #0xffffffffffffffff    	// #-1
  40f428:	mov	w4, #0x10                  	// #16
  40f42c:	mov	x0, xzr
  40f430:	sub	x2, x8, x9
  40f434:	mov	x1, x23
  40f438:	bl	40d920 <wcrtomb@plt+0xb0b0>
  40f43c:	str	x0, [x27]
  40f440:	ldr	x8, [x21, #8]
  40f444:	mov	w9, #0x50                  	// #80
  40f448:	madd	x9, x22, x9, x24
  40f44c:	str	x8, [x9, #16]
  40f450:	ldr	x8, [x21, #8]
  40f454:	cbz	x8, 40f468 <wcrtomb@plt+0xcbf8>
  40f458:	ldr	x0, [x27]
  40f45c:	ldr	x1, [x21]
  40f460:	lsl	x2, x8, #4
  40f464:	bl	402210 <memcpy@plt>
  40f468:	ldr	x8, [x20, #296]
  40f46c:	mov	w9, #0x50                  	// #80
  40f470:	mov	x10, #0xffffffffffffffff    	// #-1
  40f474:	madd	x8, x22, x9, x8
  40f478:	strb	w19, [x8, #32]
  40f47c:	strh	w25, [x8, #34]
  40f480:	stp	xzr, xzr, [x8, #48]
  40f484:	str	x26, [x8, #40]
  40f488:	str	x10, [x8, #72]
  40f48c:	ldr	x8, [x20, #304]
  40f490:	add	x8, x8, #0x1
  40f494:	str	x8, [x20, #304]
  40f498:	mov	x0, x22
  40f49c:	ldp	x20, x19, [sp, #80]
  40f4a0:	ldp	x22, x21, [sp, #64]
  40f4a4:	ldp	x24, x23, [sp, #48]
  40f4a8:	ldp	x26, x25, [sp, #32]
  40f4ac:	ldr	x27, [sp, #16]
  40f4b0:	ldp	x29, x30, [sp], #96
  40f4b4:	ret
  40f4b8:	bl	415898 <wcrtomb@plt+0x13028>
  40f4bc:	stp	x29, x30, [sp, #-64]!
  40f4c0:	str	x23, [sp, #16]
  40f4c4:	stp	x22, x21, [sp, #32]
  40f4c8:	stp	x20, x19, [sp, #48]
  40f4cc:	mov	x23, x3
  40f4d0:	ldr	x8, [x23, #16]!
  40f4d4:	ldr	x9, [x0, #8]
  40f4d8:	ldr	x10, [x1, #8]
  40f4dc:	mov	x19, x3
  40f4e0:	mov	x20, x1
  40f4e4:	sub	x8, x8, x9
  40f4e8:	mov	x21, x0
  40f4ec:	cmp	x8, x10
  40f4f0:	mov	w22, w2
  40f4f4:	mov	x29, sp
  40f4f8:	b.ge	40f528 <wcrtomb@plt+0xccb8>  // b.tcont
  40f4fc:	ldr	x0, [x19]
  40f500:	bl	402620 <free@plt>
  40f504:	ldr	x8, [x21, #8]
  40f508:	mov	x3, #0xffffffffffffffff    	// #-1
  40f50c:	mov	w4, #0x10                  	// #16
  40f510:	mov	x0, xzr
  40f514:	str	x8, [x19, #16]
  40f518:	ldr	x2, [x20, #8]
  40f51c:	mov	x1, x23
  40f520:	bl	40d920 <wcrtomb@plt+0xb0b0>
  40f524:	str	x0, [x19]
  40f528:	str	xzr, [x19, #8]
  40f52c:	ldr	x8, [x21, #8]
  40f530:	ldr	x12, [x20, #8]
  40f534:	cmp	x8, #0x0
  40f538:	cset	w11, gt
  40f53c:	b.gt	40f548 <wcrtomb@plt+0xccd8>
  40f540:	cmp	x12, #0x1
  40f544:	b.lt	40f624 <wcrtomb@plt+0xcdb4>  // b.tstop
  40f548:	mov	x8, xzr
  40f54c:	mov	x10, xzr
  40f550:	mov	x9, xzr
  40f554:	cmp	x10, x12
  40f558:	b.ge	40f598 <wcrtomb@plt+0xcd28>  // b.tcont
  40f55c:	tbz	w11, #0, 40f5d0 <wcrtomb@plt+0xcd60>
  40f560:	ldr	x12, [x21]
  40f564:	ldr	x11, [x20]
  40f568:	lsl	x13, x8, #4
  40f56c:	lsl	x14, x10, #4
  40f570:	ldr	x12, [x12, x13]
  40f574:	ldr	x13, [x11, x14]
  40f578:	cmp	x12, x13
  40f57c:	b.gt	40f5d4 <wcrtomb@plt+0xcd64>
  40f580:	b.ne	40f598 <wcrtomb@plt+0xcd28>  // b.any
  40f584:	add	x11, x11, x10, lsl #4
  40f588:	ldr	w11, [x11, #8]
  40f58c:	add	x10, x10, #0x1
  40f590:	and	w11, w11, w22
  40f594:	b	40f59c <wcrtomb@plt+0xcd2c>
  40f598:	mov	w11, wzr
  40f59c:	ldr	x12, [x21]
  40f5a0:	ldr	x13, [x19]
  40f5a4:	add	x12, x12, x8, lsl #4
  40f5a8:	ldr	x14, [x12]
  40f5ac:	add	x13, x13, x9, lsl #4
  40f5b0:	add	x8, x8, #0x1
  40f5b4:	add	x9, x9, #0x1
  40f5b8:	str	x14, [x13]
  40f5bc:	ldr	w12, [x12, #8]
  40f5c0:	str	x9, [x19, #8]
  40f5c4:	orr	w11, w12, w11
  40f5c8:	str	w11, [x13, #8]
  40f5cc:	b	40f608 <wcrtomb@plt+0xcd98>
  40f5d0:	ldr	x11, [x20]
  40f5d4:	add	x12, x11, x10, lsl #4
  40f5d8:	ldr	w12, [x12, #8]
  40f5dc:	ands	w12, w12, w22
  40f5e0:	b.eq	40f604 <wcrtomb@plt+0xcd94>  // b.none
  40f5e4:	ldr	x13, [x19]
  40f5e8:	lsl	x14, x10, #4
  40f5ec:	ldr	x11, [x11, x14]
  40f5f0:	add	x13, x13, x9, lsl #4
  40f5f4:	add	x9, x9, #0x1
  40f5f8:	str	x11, [x13]
  40f5fc:	str	x9, [x19, #8]
  40f600:	str	w12, [x13, #8]
  40f604:	add	x10, x10, #0x1
  40f608:	ldr	x11, [x21, #8]
  40f60c:	ldr	x12, [x20, #8]
  40f610:	cmp	x8, x11
  40f614:	cset	w11, lt  // lt = tstop
  40f618:	b.lt	40f554 <wcrtomb@plt+0xcce4>  // b.tstop
  40f61c:	cmp	x10, x12
  40f620:	b.lt	40f554 <wcrtomb@plt+0xcce4>  // b.tstop
  40f624:	ldp	x20, x19, [sp, #48]
  40f628:	ldp	x22, x21, [sp, #32]
  40f62c:	ldr	x23, [sp, #16]
  40f630:	ldp	x29, x30, [sp], #64
  40f634:	ret
  40f638:	ldr	x8, [x0]
  40f63c:	ldr	x9, [x1]
  40f640:	cmp	x8, x9
  40f644:	cset	w8, gt
  40f648:	csinv	w0, w8, wzr, ge  // ge = tcont
  40f64c:	ret
  40f650:	sub	sp, sp, #0xa0
  40f654:	stp	x29, x30, [sp, #64]
  40f658:	stp	x28, x27, [sp, #80]
  40f65c:	stp	x26, x25, [sp, #96]
  40f660:	stp	x24, x23, [sp, #112]
  40f664:	stp	x22, x21, [sp, #128]
  40f668:	stp	x20, x19, [sp, #144]
  40f66c:	ldr	x8, [x0, #304]
  40f670:	mov	w21, w5
  40f674:	mov	x24, x4
  40f678:	mov	x19, x2
  40f67c:	mov	x23, x0
  40f680:	cmp	x8, #0x400
  40f684:	mov	x26, x1
  40f688:	add	x29, sp, #0x40
  40f68c:	str	w3, [sp, #28]
  40f690:	b.lt	40f844 <wcrtomb@plt+0xcfd4>  // b.tstop
  40f694:	ldrsw	x20, [x23, #364]
  40f698:	cmp	x8, x20
  40f69c:	b.le	40f6e4 <wcrtomb@plt+0xce74>
  40f6a0:	add	x8, x20, x20, lsl #2
  40f6a4:	lsl	x22, x8, #4
  40f6a8:	ldr	x8, [x23, #296]
  40f6ac:	add	x8, x8, x22
  40f6b0:	ldr	x0, [x8, #8]
  40f6b4:	bl	402620 <free@plt>
  40f6b8:	ldr	x8, [x23, #296]
  40f6bc:	add	x8, x8, x22
  40f6c0:	ldr	x0, [x8, #48]
  40f6c4:	bl	402620 <free@plt>
  40f6c8:	ldr	x8, [x23, #304]
  40f6cc:	add	x20, x20, #0x1
  40f6d0:	add	x22, x22, #0x50
  40f6d4:	cmp	x20, x8
  40f6d8:	b.lt	40f6a8 <wcrtomb@plt+0xce38>  // b.tstop
  40f6dc:	ldrsw	x20, [x23, #364]
  40f6e0:	mov	x1, x26
  40f6e4:	ldr	x8, [x23, #368]
  40f6e8:	str	x20, [x23, #304]
  40f6ec:	cbz	x8, 40f774 <wcrtomb@plt+0xcf04>
  40f6f0:	ldr	x9, [x23, #352]
  40f6f4:	cmp	x9, #0x1
  40f6f8:	b.lt	40f76c <wcrtomb@plt+0xcefc>  // b.tstop
  40f6fc:	ldr	x0, [x8]
  40f700:	bl	402620 <free@plt>
  40f704:	ldr	x8, [x23, #376]
  40f708:	ldr	x0, [x8]
  40f70c:	bl	402620 <free@plt>
  40f710:	ldr	x8, [x23, #376]
  40f714:	str	xzr, [x8]
  40f718:	ldr	x8, [x23, #368]
  40f71c:	str	xzr, [x8]
  40f720:	ldr	x8, [x23, #352]
  40f724:	cmp	x8, #0x2
  40f728:	b.lt	40f76c <wcrtomb@plt+0xcefc>  // b.tstop
  40f72c:	mov	w20, #0x1                   	// #1
  40f730:	ldr	x8, [x23, #368]
  40f734:	lsl	x22, x20, #3
  40f738:	ldr	x0, [x8, x22]
  40f73c:	bl	402620 <free@plt>
  40f740:	ldr	x8, [x23, #376]
  40f744:	ldr	x0, [x8, x22]
  40f748:	bl	402620 <free@plt>
  40f74c:	ldr	x8, [x23, #376]
  40f750:	add	x20, x20, #0x1
  40f754:	str	xzr, [x8, x22]
  40f758:	ldr	x8, [x23, #368]
  40f75c:	str	xzr, [x8, x22]
  40f760:	ldr	x8, [x23, #352]
  40f764:	cmp	x20, x8
  40f768:	b.lt	40f730 <wcrtomb@plt+0xcec0>  // b.tstop
  40f76c:	mov	x1, x26
  40f770:	str	wzr, [x23, #360]
  40f774:	ldrb	w8, [x23, #1048]
  40f778:	cbz	w8, 40f844 <wcrtomb@plt+0xcfd4>
  40f77c:	ldr	x8, [x23, #432]
  40f780:	cbz	x8, 40f844 <wcrtomb@plt+0xcfd4>
  40f784:	ldr	x9, [x23, #352]
  40f788:	tbnz	x9, #63, 40f7d4 <wcrtomb@plt+0xcf64>
  40f78c:	ldur	x0, [x8, #-8]
  40f790:	bl	402620 <free@plt>
  40f794:	ldr	x8, [x23, #432]
  40f798:	stur	xzr, [x8, #-8]
  40f79c:	ldr	x8, [x23, #352]
  40f7a0:	cmp	x8, #0x1
  40f7a4:	b.lt	40f7d4 <wcrtomb@plt+0xcf64>  // b.tstop
  40f7a8:	mov	x20, xzr
  40f7ac:	ldr	x8, [x23, #432]
  40f7b0:	lsl	x22, x20, #3
  40f7b4:	ldr	x0, [x8, x22]
  40f7b8:	bl	402620 <free@plt>
  40f7bc:	ldr	x8, [x23, #432]
  40f7c0:	add	x20, x20, #0x1
  40f7c4:	str	xzr, [x8, x22]
  40f7c8:	ldr	x8, [x23, #352]
  40f7cc:	cmp	x20, x8
  40f7d0:	b.lt	40f7ac <wcrtomb@plt+0xcf3c>  // b.tstop
  40f7d4:	ldr	w8, [x23, #364]
  40f7d8:	mov	x1, x26
  40f7dc:	cmp	w8, #0x1
  40f7e0:	b.lt	40f840 <wcrtomb@plt+0xcfd0>  // b.tstop
  40f7e4:	ldr	x10, [x23, #296]
  40f7e8:	cmp	w8, #0x1
  40f7ec:	b.ne	40f7f8 <wcrtomb@plt+0xcf88>  // b.any
  40f7f0:	mov	x9, xzr
  40f7f4:	b	40f820 <wcrtomb@plt+0xcfb0>
  40f7f8:	and	x9, x8, #0xfffffffe
  40f7fc:	add	x11, x10, #0x98
  40f800:	mov	x12, #0xffffffffffffffff    	// #-1
  40f804:	mov	x13, x9
  40f808:	stur	x12, [x11, #-80]
  40f80c:	str	x12, [x11], #160
  40f810:	subs	x13, x13, #0x2
  40f814:	b.ne	40f808 <wcrtomb@plt+0xcf98>  // b.any
  40f818:	cmp	x9, x8
  40f81c:	b.eq	40f840 <wcrtomb@plt+0xcfd0>  // b.none
  40f820:	mov	w11, #0x50                  	// #80
  40f824:	madd	x10, x9, x11, x10
  40f828:	add	x10, x10, #0x48
  40f82c:	mov	x11, #0xffffffffffffffff    	// #-1
  40f830:	add	x9, x9, #0x1
  40f834:	cmp	x9, x8
  40f838:	str	x11, [x10], #80
  40f83c:	b.cc	40f830 <wcrtomb@plt+0xcfc0>  // b.lo, b.ul, b.last
  40f840:	str	xzr, [x23, #440]
  40f844:	ldr	x8, [x23, #352]
  40f848:	cbnz	x8, 40f858 <wcrtomb@plt+0xcfe8>
  40f84c:	mov	x0, x23
  40f850:	bl	40fd00 <wcrtomb@plt+0xd490>
  40f854:	mov	x1, x26
  40f858:	stur	x1, [x29, #-16]
  40f85c:	ldr	x22, [x23, #368]
  40f860:	ldrb	w8, [x23, #459]
  40f864:	ldrb	w25, [x19]
  40f868:	str	x8, [sp, #32]
  40f86c:	strb	w8, [x19]
  40f870:	tbz	w21, #0, 40f8a0 <wcrtomb@plt+0xd030>
  40f874:	ldr	x8, [x23, #424]
  40f878:	str	xzr, [x23, #272]
  40f87c:	cbnz	x8, 40f8a0 <wcrtomb@plt+0xd030>
  40f880:	ldr	x20, [x23, #176]
  40f884:	lsr	x8, x20, #59
  40f888:	cbnz	x8, 40fcfc <wcrtomb@plt+0xd48c>
  40f88c:	lsl	x0, x20, #4
  40f890:	bl	4155d4 <wcrtomb@plt+0x12d64>
  40f894:	mov	x1, x26
  40f898:	stp	xzr, x20, [x23, #416]
  40f89c:	str	x0, [x23, #408]
  40f8a0:	ldr	x8, [sp, #32]
  40f8a4:	str	x24, [sp, #8]
  40f8a8:	mov	x27, xzr
  40f8ac:	mov	x28, xzr
  40f8b0:	add	x8, x23, x8
  40f8b4:	add	x24, x23, #0x110
  40f8b8:	add	x8, x8, #0x1cc
  40f8bc:	str	w25, [sp, #4]
  40f8c0:	stur	xzr, [x29, #-24]
  40f8c4:	str	x8, [sp, #16]
  40f8c8:	b	40f8ec <wcrtomb@plt+0xd07c>
  40f8cc:	ldr	x8, [x23, #376]
  40f8d0:	add	x9, x26, #0x1
  40f8d4:	mov	x28, x20
  40f8d8:	mov	x1, x25
  40f8dc:	ldr	x8, [x8, x20, lsl #3]
  40f8e0:	stur	x9, [x29, #-16]
  40f8e4:	ldrb	w9, [x26]
  40f8e8:	ldr	x27, [x8, x9, lsl #3]
  40f8ec:	ldr	x26, [x22, x27, lsl #3]
  40f8f0:	cbz	x26, 40faac <wcrtomb@plt+0xd23c>
  40f8f4:	mov	x25, x1
  40f8f8:	b	40f920 <wcrtomb@plt+0xd0b0>
  40f8fc:	add	x11, x10, #0x1
  40f900:	stur	x11, [x29, #-16]
  40f904:	ldrb	w10, [x10]
  40f908:	mov	x27, x8
  40f90c:	ldr	x20, [x9, x10, lsl #3]
  40f910:	ldr	x26, [x22, x20, lsl #3]
  40f914:	mov	x28, x27
  40f918:	mov	x27, x20
  40f91c:	cbz	x26, 40fab4 <wcrtomb@plt+0xd244>
  40f920:	ldrsw	x8, [x23, #364]
  40f924:	cmp	x27, x8
  40f928:	b.ge	40f998 <wcrtomb@plt+0xd128>  // b.tcont
  40f92c:	tbz	w21, #0, 40f950 <wcrtomb@plt+0xd0e0>
  40f930:	ldr	x8, [x23, #296]
  40f934:	mov	w9, #0x50                  	// #80
  40f938:	madd	x8, x27, x9, x8
  40f93c:	ldr	x8, [x8, #56]
  40f940:	cbz	x8, 40f950 <wcrtomb@plt+0xd0e0>
  40f944:	ldur	x20, [x29, #-16]
  40f948:	ldrb	w8, [x20]
  40f94c:	b	40f984 <wcrtomb@plt+0xd114>
  40f950:	ldur	x20, [x29, #-16]
  40f954:	ldrb	w8, [x20]
  40f958:	ldr	x9, [x26, x8, lsl #3]
  40f95c:	cmp	x9, x27
  40f960:	b.ne	40f980 <wcrtomb@plt+0xd110>  // b.any
  40f964:	add	x9, x20, #0x1
  40f968:	stur	x9, [x29, #-16]
  40f96c:	ldrb	w8, [x9], #1
  40f970:	ldr	x10, [x26, x8, lsl #3]
  40f974:	cmp	x10, x27
  40f978:	b.eq	40f968 <wcrtomb@plt+0xd0f8>  // b.none
  40f97c:	sub	x20, x9, #0x1
  40f980:	tbz	w21, #0, 40fa44 <wcrtomb@plt+0xd1d4>
  40f984:	add	x8, x23, x8
  40f988:	ldrb	w8, [x8, #716]
  40f98c:	cbz	w8, 40f9fc <wcrtomb@plt+0xd18c>
  40f990:	mov	x25, x20
  40f994:	stur	x25, [x29, #-16]
  40f998:	tbz	w21, #0, 40fa40 <wcrtomb@plt+0xd1d0>
  40f99c:	ldr	x8, [x23, #296]
  40f9a0:	mov	w9, #0x50                  	// #80
  40f9a4:	madd	x8, x27, x9, x8
  40f9a8:	ldr	x9, [x8, #56]
  40f9ac:	ldur	x8, [x29, #-16]
  40f9b0:	cbz	x9, 40fa98 <wcrtomb@plt+0xd228>
  40f9b4:	cmp	x8, x19
  40f9b8:	b.cs	40fa98 <wcrtomb@plt+0xd228>  // b.hs, b.nlast
  40f9bc:	ldrb	w9, [x8]
  40f9c0:	add	x9, x23, x9, lsl #2
  40f9c4:	ldr	w9, [x9, #1308]
  40f9c8:	cmn	w9, #0x1
  40f9cc:	b.ne	40fa98 <wcrtomb@plt+0xd228>  // b.any
  40f9d0:	sub	x2, x29, #0x10
  40f9d4:	mov	x0, x23
  40f9d8:	mov	x1, x27
  40f9dc:	mov	x3, x19
  40f9e0:	bl	40febc <wcrtomb@plt+0xd64c>
  40f9e4:	ldur	x25, [x29, #-16]
  40f9e8:	ldr	x22, [x23, #368]
  40f9ec:	mov	x20, x0
  40f9f0:	b	40f910 <wcrtomb@plt+0xd0a0>
  40f9f4:	mov	w0, #0x1                   	// #1
  40f9f8:	add	x25, x25, w0, sxtw
  40f9fc:	cmp	x25, x20
  40fa00:	b.cs	40f994 <wcrtomb@plt+0xd124>  // b.hs, b.nlast
  40fa04:	ldrb	w8, [x25]
  40fa08:	add	x8, x23, x8, lsl #2
  40fa0c:	ldr	w8, [x8, #1308]
  40fa10:	cmn	w8, #0x1
  40fa14:	b.ne	40f9f4 <wcrtomb@plt+0xd184>  // b.any
  40fa18:	sub	x2, x19, x25
  40fa1c:	sub	x0, x29, #0x4
  40fa20:	mov	x1, x25
  40fa24:	mov	x3, x24
  40fa28:	bl	417eb0 <wcrtomb@plt+0x15640>
  40fa2c:	sub	x8, x0, #0x1
  40fa30:	cmn	x8, #0x3
  40fa34:	b.cc	40f9f8 <wcrtomb@plt+0xd188>  // b.lo, b.ul, b.last
  40fa38:	str	xzr, [x24]
  40fa3c:	b	40f9f4 <wcrtomb@plt+0xd184>
  40fa40:	ldur	x20, [x29, #-16]
  40fa44:	add	x10, x20, #0x1
  40fa48:	stur	x10, [x29, #-16]
  40fa4c:	ldrb	w8, [x20]
  40fa50:	ldr	x8, [x26, x8, lsl #3]
  40fa54:	ldr	x9, [x22, x8, lsl #3]
  40fa58:	cbz	x9, 40fc04 <wcrtomb@plt+0xd394>
  40fa5c:	ldrsw	x11, [x23, #364]
  40fa60:	cmp	x27, x11
  40fa64:	b.ge	40f8fc <wcrtomb@plt+0xd08c>  // b.tcont
  40fa68:	ldrb	w11, [x10]
  40fa6c:	ldr	x11, [x9, x11, lsl #3]
  40fa70:	cmp	x11, x8
  40fa74:	b.ne	40f8fc <wcrtomb@plt+0xd08c>  // b.any
  40fa78:	add	x10, x20, #0x2
  40fa7c:	stur	x10, [x29, #-16]
  40fa80:	ldrb	w11, [x10], #1
  40fa84:	ldr	x11, [x9, x11, lsl #3]
  40fa88:	cmp	x11, x8
  40fa8c:	b.eq	40fa7c <wcrtomb@plt+0xd20c>  // b.none
  40fa90:	sub	x10, x10, #0x1
  40fa94:	b	40f8fc <wcrtomb@plt+0xd08c>
  40fa98:	add	x9, x8, #0x1
  40fa9c:	stur	x9, [x29, #-16]
  40faa0:	ldrb	w8, [x8]
  40faa4:	ldr	x20, [x26, x8, lsl #3]
  40faa8:	b	40f910 <wcrtomb@plt+0xd0a0>
  40faac:	mov	x20, x27
  40fab0:	mov	x25, x1
  40fab4:	tbnz	x20, #63, 40fc10 <wcrtomb@plt+0xd3a0>
  40fab8:	ldr	x8, [x23, #376]
  40fabc:	ldr	x8, [x8, x20, lsl #3]
  40fac0:	cbz	x8, 40fbe0 <wcrtomb@plt+0xd370>
  40fac4:	ldur	x26, [x29, #-16]
  40fac8:	ldr	x9, [x23, #384]
  40facc:	ldrb	w8, [x26]
  40fad0:	ldrb	w9, [x9, x20]
  40fad4:	add	x10, x23, x8
  40fad8:	ldrb	w10, [x10, #460]
  40fadc:	tst	w10, w9
  40fae0:	b.ne	40fcb8 <wcrtomb@plt+0xd448>  // b.any
  40fae4:	cmp	x26, x19
  40fae8:	b.ne	40fb0c <wcrtomb@plt+0xd29c>  // b.any
  40faec:	ldr	x9, [x23, #296]
  40faf0:	mov	w10, #0x50                  	// #80
  40faf4:	madd	x9, x20, x10, x9
  40faf8:	ldrb	w10, [x9, #32]
  40fafc:	ldrh	w9, [x9, #34]
  40fb00:	and	w9, w10, w9, lsr #6
  40fb04:	tst	w9, #0x7
  40fb08:	b.ne	40fcb8 <wcrtomb@plt+0xd448>  // b.any
  40fb0c:	tbz	w21, #0, 40f8cc <wcrtomb@plt+0xd05c>
  40fb10:	ldrsw	x9, [x23, #364]
  40fb14:	cmp	x20, x9
  40fb18:	b.ge	40fb3c <wcrtomb@plt+0xd2cc>  // b.tcont
  40fb1c:	add	x8, x23, x8
  40fb20:	ldrb	w8, [x8, #716]
  40fb24:	cbnz	w8, 40fb34 <wcrtomb@plt+0xd2c4>
  40fb28:	cmp	x25, x26
  40fb2c:	b.cc	40fba4 <wcrtomb@plt+0xd334>  // b.lo, b.ul, b.last
  40fb30:	mov	x26, x25
  40fb34:	stur	x26, [x29, #-16]
  40fb38:	mov	x25, x26
  40fb3c:	ldr	x8, [x23, #296]
  40fb40:	mov	w9, #0x50                  	// #80
  40fb44:	madd	x8, x20, x9, x8
  40fb48:	ldr	x8, [x8, #56]
  40fb4c:	cbz	x8, 40f8cc <wcrtomb@plt+0xd05c>
  40fb50:	cmp	x26, x19
  40fb54:	b.cs	40f8cc <wcrtomb@plt+0xd05c>  // b.hs, b.nlast
  40fb58:	ldrb	w8, [x26]
  40fb5c:	add	x8, x23, x8, lsl #2
  40fb60:	ldr	w8, [x8, #1308]
  40fb64:	cmn	w8, #0x1
  40fb68:	b.ne	40f8cc <wcrtomb@plt+0xd05c>  // b.any
  40fb6c:	sub	x2, x29, #0x10
  40fb70:	mov	x0, x23
  40fb74:	mov	x1, x20
  40fb78:	mov	x3, x19
  40fb7c:	bl	40febc <wcrtomb@plt+0xd64c>
  40fb80:	ldur	x1, [x29, #-16]
  40fb84:	ldr	x22, [x23, #368]
  40fb88:	mov	x27, x0
  40fb8c:	mov	x28, x20
  40fb90:	b	40f8ec <wcrtomb@plt+0xd07c>
  40fb94:	mov	w0, #0x1                   	// #1
  40fb98:	add	x25, x25, w0, sxtw
  40fb9c:	cmp	x25, x26
  40fba0:	b.cs	40fca4 <wcrtomb@plt+0xd434>  // b.hs, b.nlast
  40fba4:	ldrb	w8, [x25]
  40fba8:	add	x8, x23, x8, lsl #2
  40fbac:	ldr	w8, [x8, #1308]
  40fbb0:	cmn	w8, #0x1
  40fbb4:	b.ne	40fb94 <wcrtomb@plt+0xd324>  // b.any
  40fbb8:	sub	x2, x19, x25
  40fbbc:	sub	x0, x29, #0x4
  40fbc0:	mov	x1, x25
  40fbc4:	mov	x3, x24
  40fbc8:	bl	417eb0 <wcrtomb@plt+0x15640>
  40fbcc:	sub	x8, x0, #0x1
  40fbd0:	cmn	x8, #0x3
  40fbd4:	b.cc	40fb98 <wcrtomb@plt+0xd328>  // b.lo, b.ul, b.last
  40fbd8:	str	xzr, [x24]
  40fbdc:	b	40fb94 <wcrtomb@plt+0xd324>
  40fbe0:	ldur	x8, [x29, #-16]
  40fbe4:	mov	x0, x20
  40fbe8:	mov	x1, x23
  40fbec:	ldrb	w2, [x8]
  40fbf0:	bl	4102e0 <wcrtomb@plt+0xda70>
  40fbf4:	ldr	x22, [x23, #368]
  40fbf8:	mov	x27, x20
  40fbfc:	mov	x1, x25
  40fc00:	b	40f8ec <wcrtomb@plt+0xd07c>
  40fc04:	mov	x20, x8
  40fc08:	mov	x28, x27
  40fc0c:	tbz	x20, #63, 40fab8 <wcrtomb@plt+0xd248>
  40fc10:	ldur	x1, [x29, #-16]
  40fc14:	cmn	x20, #0x2
  40fc18:	b.ne	40fc3c <wcrtomb@plt+0xd3cc>  // b.any
  40fc1c:	ldurb	w2, [x1, #-1]
  40fc20:	mov	x0, x28
  40fc24:	mov	x1, x23
  40fc28:	bl	4102e0 <wcrtomb@plt+0xda70>
  40fc2c:	ldr	x22, [x23, #368]
  40fc30:	mov	x27, x0
  40fc34:	mov	x1, x25
  40fc38:	b	40f8ec <wcrtomb@plt+0xd07c>
  40fc3c:	cmp	x1, x19
  40fc40:	b.hi	40fcb0 <wcrtomb@plt+0xd440>  // b.pmore
  40fc44:	ldurb	w8, [x1, #-1]
  40fc48:	ldr	x9, [sp, #32]
  40fc4c:	cmp	w8, w9
  40fc50:	b.ne	40fcb0 <wcrtomb@plt+0xd440>  // b.any
  40fc54:	ldr	x8, [x23, #392]
  40fc58:	ldr	x27, [x8, x28, lsl #3]
  40fc5c:	tbnz	x27, #63, 40fcb0 <wcrtomb@plt+0xd440>
  40fc60:	ldur	x8, [x29, #-24]
  40fc64:	add	x8, x8, #0x1
  40fc68:	stur	x8, [x29, #-24]
  40fc6c:	ldr	w8, [sp, #28]
  40fc70:	tbnz	w8, #0, 40f8ec <wcrtomb@plt+0xd07c>
  40fc74:	ldr	x8, [sp, #16]
  40fc78:	mov	x27, xzr
  40fc7c:	ldrb	w8, [x8]
  40fc80:	cmp	w8, #0x4
  40fc84:	b.eq	40f8ec <wcrtomb@plt+0xd07c>  // b.none
  40fc88:	cmp	w8, #0x2
  40fc8c:	b.ne	40fc9c <wcrtomb@plt+0xd42c>  // b.any
  40fc90:	ldrsw	x8, [x23, #364]
  40fc94:	sub	x27, x8, #0x1
  40fc98:	b	40f8ec <wcrtomb@plt+0xd07c>
  40fc9c:	ldr	x27, [x23, #400]
  40fca0:	b	40f8ec <wcrtomb@plt+0xd07c>
  40fca4:	mov	x26, x25
  40fca8:	stur	x25, [x29, #-16]
  40fcac:	b	40fb3c <wcrtomb@plt+0xd2cc>
  40fcb0:	mov	x26, xzr
  40fcb4:	stur	xzr, [x29, #-16]
  40fcb8:	ldr	x9, [sp, #8]
  40fcbc:	ldr	w10, [sp, #4]
  40fcc0:	cbz	x9, 40fcd4 <wcrtomb@plt+0xd464>
  40fcc4:	ldr	x8, [x9]
  40fcc8:	ldur	x11, [x29, #-24]
  40fccc:	add	x8, x8, x11
  40fcd0:	str	x8, [x9]
  40fcd4:	strb	w10, [x19]
  40fcd8:	mov	x0, x26
  40fcdc:	ldp	x20, x19, [sp, #144]
  40fce0:	ldp	x22, x21, [sp, #128]
  40fce4:	ldp	x24, x23, [sp, #112]
  40fce8:	ldp	x26, x25, [sp, #96]
  40fcec:	ldp	x28, x27, [sp, #80]
  40fcf0:	ldp	x29, x30, [sp, #64]
  40fcf4:	add	sp, sp, #0xa0
  40fcf8:	ret
  40fcfc:	bl	415898 <wcrtomb@plt+0x13028>
  40fd00:	stp	x29, x30, [sp, #-64]!
  40fd04:	stp	x22, x21, [sp, #32]
  40fd08:	stp	x20, x19, [sp, #48]
  40fd0c:	ldr	x22, [x0, #352]
  40fd10:	ldr	x8, [x0, #304]
  40fd14:	str	x23, [sp, #16]
  40fd18:	mov	x29, sp
  40fd1c:	subs	x8, x8, x22
  40fd20:	b.le	40fea4 <wcrtomb@plt+0xd634>
  40fd24:	ldr	x9, [x0, #368]
  40fd28:	add	x10, x22, #0x2
  40fd2c:	mov	x19, x0
  40fd30:	cmp	x9, #0x0
  40fd34:	sub	x11, x9, #0x10
  40fd38:	csel	x9, xzr, x10, eq  // eq = none
  40fd3c:	csel	x0, xzr, x11, eq  // eq = none
  40fd40:	adds	x10, x9, x9, asr #1
  40fd44:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  40fd48:	csel	x23, x11, x10, vs
  40fd4c:	tbnz	x23, #63, 40fd64 <wcrtomb@plt+0xd4f4>
  40fd50:	mov	x10, #0xfffffffffffffff     	// #1152921504606846975
  40fd54:	cmp	x23, x10
  40fd58:	b.le	40fd7c <wcrtomb@plt+0xd50c>
  40fd5c:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40fd60:	b	40fd8c <wcrtomb@plt+0xd51c>
  40fd64:	cmn	x23, #0x1
  40fd68:	b.eq	40fd88 <wcrtomb@plt+0xd518>  // b.none
  40fd6c:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  40fd70:	sdiv	x10, x10, x23
  40fd74:	cmp	x10, #0x8
  40fd78:	b.lt	40fd5c <wcrtomb@plt+0xd4ec>  // b.tstop
  40fd7c:	lsl	x1, x23, #3
  40fd80:	cmp	x1, #0x7f
  40fd84:	b.gt	40fd94 <wcrtomb@plt+0xd524>
  40fd88:	mov	w10, #0x80                  	// #128
  40fd8c:	lsr	x23, x10, #3
  40fd90:	and	x1, x10, #0x7ffffffffffffff8
  40fd94:	sub	x10, x23, x9
  40fd98:	cmp	x10, x8
  40fd9c:	b.ge	40fdd8 <wcrtomb@plt+0xd568>  // b.tcont
  40fda0:	adds	x23, x9, x8
  40fda4:	b.vs	40feb8 <wcrtomb@plt+0xd648>
  40fda8:	tbnz	x23, #63, 40fdbc <wcrtomb@plt+0xd54c>
  40fdac:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  40fdb0:	cmp	x23, x8
  40fdb4:	b.le	40fdd4 <wcrtomb@plt+0xd564>
  40fdb8:	b	40feb8 <wcrtomb@plt+0xd648>
  40fdbc:	cmn	x23, #0x1
  40fdc0:	b.eq	40fdd4 <wcrtomb@plt+0xd564>  // b.none
  40fdc4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40fdc8:	sdiv	x8, x8, x23
  40fdcc:	cmp	x8, #0x8
  40fdd0:	b.lt	40feb8 <wcrtomb@plt+0xd648>  // b.tstop
  40fdd4:	lsl	x1, x23, #3
  40fdd8:	bl	415654 <wcrtomb@plt+0x12de4>
  40fddc:	add	x8, x0, #0x10
  40fde0:	sub	x20, x23, #0x2
  40fde4:	stp	xzr, xzr, [x0]
  40fde8:	str	x8, [x19, #368]
  40fdec:	lsr	x8, x20, #60
  40fdf0:	str	x20, [x19, #352]
  40fdf4:	cbnz	x8, 40feb8 <wcrtomb@plt+0xd648>
  40fdf8:	ldr	x0, [x19, #376]
  40fdfc:	lsl	x21, x20, #3
  40fe00:	mov	x1, x21
  40fe04:	bl	415654 <wcrtomb@plt+0x12de4>
  40fe08:	ldr	x8, [x19, #384]
  40fe0c:	str	x0, [x19, #376]
  40fe10:	mov	x1, x20
  40fe14:	mov	x0, x8
  40fe18:	bl	415654 <wcrtomb@plt+0x12de4>
  40fe1c:	ldr	x8, [x19, #392]
  40fe20:	str	x0, [x19, #384]
  40fe24:	mov	x1, x21
  40fe28:	mov	x0, x8
  40fe2c:	bl	415654 <wcrtomb@plt+0x12de4>
  40fe30:	ldrb	w8, [x19, #1048]
  40fe34:	str	x0, [x19, #392]
  40fe38:	cbz	w8, 40fe64 <wcrtomb@plt+0xd5f4>
  40fe3c:	ldr	x8, [x19, #432]
  40fe40:	lsl	x1, x23, #3
  40fe44:	sub	x9, x8, #0x10
  40fe48:	cmp	x8, #0x0
  40fe4c:	csel	x0, xzr, x9, eq  // eq = none
  40fe50:	bl	415654 <wcrtomb@plt+0x12de4>
  40fe54:	cbnz	x22, 40fe5c <wcrtomb@plt+0xd5ec>
  40fe58:	stp	xzr, xzr, [x0]
  40fe5c:	add	x8, x0, #0x10
  40fe60:	str	x8, [x19, #432]
  40fe64:	cmp	x22, x20
  40fe68:	b.ge	40fea4 <wcrtomb@plt+0xd634>  // b.tcont
  40fe6c:	ldrb	w8, [x19, #1048]
  40fe70:	b	40fe80 <wcrtomb@plt+0xd610>
  40fe74:	add	x22, x22, #0x1
  40fe78:	cmp	x22, x20
  40fe7c:	b.ge	40fea4 <wcrtomb@plt+0xd634>  // b.tcont
  40fe80:	ldr	x9, [x19, #368]
  40fe84:	lsl	x10, x22, #3
  40fe88:	str	xzr, [x9, x10]
  40fe8c:	ldr	x9, [x19, #376]
  40fe90:	str	xzr, [x9, x10]
  40fe94:	cbz	w8, 40fe74 <wcrtomb@plt+0xd604>
  40fe98:	ldr	x9, [x19, #432]
  40fe9c:	str	xzr, [x9, x22, lsl #3]
  40fea0:	b	40fe74 <wcrtomb@plt+0xd604>
  40fea4:	ldp	x20, x19, [sp, #48]
  40fea8:	ldp	x22, x21, [sp, #32]
  40feac:	ldr	x23, [sp, #16]
  40feb0:	ldp	x29, x30, [sp], #64
  40feb4:	ret
  40feb8:	bl	415898 <wcrtomb@plt+0x13028>
  40febc:	sub	sp, sp, #0x70
  40fec0:	stp	x29, x30, [sp, #16]
  40fec4:	stp	x28, x27, [sp, #32]
  40fec8:	stp	x26, x25, [sp, #48]
  40fecc:	stp	x24, x23, [sp, #64]
  40fed0:	stp	x22, x21, [sp, #80]
  40fed4:	stp	x20, x19, [sp, #96]
  40fed8:	ldr	x8, [x2]
  40fedc:	mov	x23, x2
  40fee0:	mov	x19, x0
  40fee4:	mov	x20, x1
  40fee8:	ldrb	w9, [x8]
  40feec:	add	x29, sp, #0x10
  40fef0:	add	x9, x0, x9, lsl #2
  40fef4:	ldr	w26, [x9, #1308]
  40fef8:	cmn	w26, #0x1
  40fefc:	b.ne	40ff50 <wcrtomb@plt+0xd6e0>  // b.any
  40ff00:	add	x21, x19, #0x110
  40ff04:	sub	x2, x3, x8
  40ff08:	sub	x0, x29, #0x4
  40ff0c:	mov	x1, x8
  40ff10:	mov	x3, x21
  40ff14:	bl	417eb0 <wcrtomb@plt+0x15640>
  40ff18:	sub	x8, x0, #0x1
  40ff1c:	cmn	x8, #0x3
  40ff20:	b.cs	40ff4c <wcrtomb@plt+0xd6dc>  // b.hs, b.nlast
  40ff24:	ldur	w26, [x29, #-4]
  40ff28:	mov	x24, x0
  40ff2c:	add	x21, x19, #0x198
  40ff30:	add	x25, x19, #0x1a0
  40ff34:	cmp	w24, #0x1
  40ff38:	str	xzr, [x19, #416]
  40ff3c:	b.ge	40ff60 <wcrtomb@plt+0xd6f0>  // b.tcont
  40ff40:	mov	w27, wzr
  40ff44:	mov	x22, x20
  40ff48:	b	410008 <wcrtomb@plt+0xd798>
  40ff4c:	str	xzr, [x21]
  40ff50:	add	x21, x19, #0x198
  40ff54:	add	x25, x19, #0x1a0
  40ff58:	mov	w24, #0x1                   	// #1
  40ff5c:	str	xzr, [x19, #416]
  40ff60:	mov	w27, wzr
  40ff64:	mov	x22, x20
  40ff68:	b	40ff88 <wcrtomb@plt+0xd718>
  40ff6c:	add	x9, x8, #0x1
  40ff70:	str	x9, [x23]
  40ff74:	ldrb	w8, [x8]
  40ff78:	add	w27, w27, #0x1
  40ff7c:	cmp	w24, w27
  40ff80:	ldr	x22, [x28, x8, lsl #3]
  40ff84:	b.eq	410004 <wcrtomb@plt+0xd794>  // b.none
  40ff88:	cbz	w27, 40ff98 <wcrtomb@plt+0xd728>
  40ff8c:	ldrsw	x8, [x19, #364]
  40ff90:	cmp	x22, x8
  40ff94:	b.lt	410008 <wcrtomb@plt+0xd798>  // b.tstop
  40ff98:	ldr	x8, [x19, #368]
  40ff9c:	ldr	x28, [x8, x22, lsl #3]
  40ffa0:	cbnz	x28, 40ffdc <wcrtomb@plt+0xd76c>
  40ffa4:	ldr	x8, [x19, #376]
  40ffa8:	ldr	x28, [x8, x22, lsl #3]
  40ffac:	cbnz	x28, 40ffdc <wcrtomb@plt+0xd76c>
  40ffb0:	ldr	x8, [x23]
  40ffb4:	mov	x0, x22
  40ffb8:	mov	x1, x19
  40ffbc:	ldrb	w2, [x8]
  40ffc0:	bl	4102e0 <wcrtomb@plt+0xda70>
  40ffc4:	ldr	x8, [x19, #368]
  40ffc8:	ldr	x28, [x8, x22, lsl #3]
  40ffcc:	cbnz	x28, 40ffdc <wcrtomb@plt+0xd76c>
  40ffd0:	ldr	x8, [x19, #376]
  40ffd4:	ldr	x28, [x8, x22, lsl #3]
  40ffd8:	cbz	x28, 4102c0 <wcrtomb@plt+0xda50>
  40ffdc:	ldr	x8, [x23]
  40ffe0:	ldrb	w2, [x8]
  40ffe4:	ldr	x9, [x28, x2, lsl #3]
  40ffe8:	cmn	x9, #0x2
  40ffec:	b.ne	40ff6c <wcrtomb@plt+0xd6fc>  // b.any
  40fff0:	mov	x0, x22
  40fff4:	mov	x1, x19
  40fff8:	bl	4102e0 <wcrtomb@plt+0xda70>
  40fffc:	ldr	x8, [x23]
  410000:	b	40ff6c <wcrtomb@plt+0xd6fc>
  410004:	mov	w27, w24
  410008:	ldr	x8, [x23]
  41000c:	sub	w9, w24, w27
  410010:	cmn	w26, #0x1
  410014:	add	x8, x8, w9, sxtw
  410018:	str	x8, [x23]
  41001c:	b.eq	41008c <wcrtomb@plt+0xd81c>  // b.none
  410020:	ldr	x8, [x19, #296]
  410024:	mov	w9, #0x50                  	// #80
  410028:	madd	x9, x20, x9, x8
  41002c:	ldr	x9, [x9, #72]
  410030:	tbz	x9, #63, 4100f8 <wcrtomb@plt+0xd888>
  410034:	ldr	x9, [x19, #440]
  410038:	cmp	x9, #0x400
  41003c:	b.lt	4100e4 <wcrtomb@plt+0xd874>  // b.tstop
  410040:	ldr	x8, [x19, #352]
  410044:	tbnz	x8, #63, 410074 <wcrtomb@plt+0xd804>
  410048:	mov	x23, #0xffffffffffffffff    	// #-1
  41004c:	ldr	x8, [x19, #432]
  410050:	lsl	x24, x23, #3
  410054:	ldr	x0, [x8, x24]
  410058:	bl	402620 <free@plt>
  41005c:	ldr	x8, [x19, #432]
  410060:	add	x23, x23, #0x1
  410064:	str	xzr, [x8, x24]
  410068:	ldr	x8, [x19, #352]
  41006c:	cmp	x23, x8
  410070:	b.lt	41004c <wcrtomb@plt+0xd7dc>  // b.tstop
  410074:	ldp	x8, x9, [x19, #296]
  410078:	cmp	x9, #0x1
  41007c:	b.lt	4100dc <wcrtomb@plt+0xd86c>  // b.tstop
  410080:	b.ne	410094 <wcrtomb@plt+0xd824>  // b.any
  410084:	mov	x10, xzr
  410088:	b	4100bc <wcrtomb@plt+0xd84c>
  41008c:	mov	x23, x22
  410090:	b	41029c <wcrtomb@plt+0xda2c>
  410094:	and	x10, x9, #0xfffffffffffffffe
  410098:	add	x11, x8, #0x98
  41009c:	mov	x12, #0xffffffffffffffff    	// #-1
  4100a0:	mov	x13, x10
  4100a4:	stur	x12, [x11, #-80]
  4100a8:	str	x12, [x11], #160
  4100ac:	subs	x13, x13, #0x2
  4100b0:	b.ne	4100a4 <wcrtomb@plt+0xd834>  // b.any
  4100b4:	cmp	x9, x10
  4100b8:	b.eq	4100dc <wcrtomb@plt+0xd86c>  // b.none
  4100bc:	mov	w11, #0x50                  	// #80
  4100c0:	madd	x11, x10, x11, x8
  4100c4:	add	x11, x11, #0x48
  4100c8:	mov	x12, #0xffffffffffffffff    	// #-1
  4100cc:	add	x10, x10, #0x1
  4100d0:	cmp	x10, x9
  4100d4:	str	x12, [x11], #80
  4100d8:	b.lt	4100cc <wcrtomb@plt+0xd85c>  // b.tstop
  4100dc:	mov	x9, xzr
  4100e0:	str	xzr, [x19, #440]
  4100e4:	add	x10, x9, #0x1
  4100e8:	mov	w11, #0x50                  	// #80
  4100ec:	str	x10, [x19, #440]
  4100f0:	madd	x10, x20, x11, x8
  4100f4:	str	x9, [x10, #72]
  4100f8:	ldr	x10, [x19, #432]
  4100fc:	ldr	x10, [x10, x22, lsl #3]
  410100:	cbz	x10, 410110 <wcrtomb@plt+0xd8a0>
  410104:	ldr	x23, [x10, x9, lsl #3]
  410108:	tbz	x23, #63, 41029c <wcrtomb@plt+0xda2c>
  41010c:	b	41013c <wcrtomb@plt+0xd8cc>
  410110:	mov	w0, #0x2000                	// #8192
  410114:	bl	4155d4 <wcrtomb@plt+0x12d64>
  410118:	ldr	x8, [x19, #432]
  41011c:	lsl	x9, x22, #3
  410120:	mov	w1, #0xff                  	// #255
  410124:	mov	w2, #0x2000                	// #8192
  410128:	str	x0, [x8, x9]
  41012c:	ldr	x8, [x19, #432]
  410130:	ldr	x0, [x8, x9]
  410134:	bl	402470 <memset@plt>
  410138:	ldr	x8, [x19, #296]
  41013c:	mov	w9, #0x50                  	// #80
  410140:	madd	x9, x20, x9, x8
  410144:	cmn	x22, #0x1
  410148:	add	x23, x9, #0x30
  41014c:	b.eq	410170 <wcrtomb@plt+0xd900>  // b.none
  410150:	mov	w9, #0x50                  	// #80
  410154:	madd	x8, x22, x9, x8
  410158:	add	x1, x8, #0x8
  41015c:	mov	w2, #0xffffffff            	// #-1
  410160:	mov	x0, x23
  410164:	mov	x3, x21
  410168:	bl	40f4bc <wcrtomb@plt+0xcc4c>
  41016c:	b	4101d8 <wcrtomb@plt+0xd968>
  410170:	mov	w9, #0x50                  	// #80
  410174:	madd	x26, x20, x9, x8
  410178:	ldr	x10, [x19, #424]
  41017c:	ldr	x9, [x26, #56]!
  410180:	cmp	x10, x9
  410184:	b.ge	4101bc <wcrtomb@plt+0xd94c>  // b.tcont
  410188:	ldr	x0, [x21]
  41018c:	add	x24, x19, #0x1a8
  410190:	bl	402620 <free@plt>
  410194:	ldr	x8, [x26]
  410198:	ldr	x9, [x24]
  41019c:	mov	x3, #0xffffffffffffffff    	// #-1
  4101a0:	mov	w4, #0x10                  	// #16
  4101a4:	mov	x0, xzr
  4101a8:	sub	x2, x8, x9
  4101ac:	mov	x1, x24
  4101b0:	bl	40d920 <wcrtomb@plt+0xb0b0>
  4101b4:	str	x0, [x21]
  4101b8:	ldr	x9, [x26]
  4101bc:	str	x9, [x25]
  4101c0:	ldr	x8, [x26]
  4101c4:	cbz	x8, 4101dc <wcrtomb@plt+0xd96c>
  4101c8:	ldr	x0, [x21]
  4101cc:	ldr	x1, [x23]
  4101d0:	lsl	x2, x8, #4
  4101d4:	bl	402210 <memcpy@plt>
  4101d8:	ldr	x9, [x25]
  4101dc:	cmp	x9, #0x1
  4101e0:	b.lt	410200 <wcrtomb@plt+0xd990>  // b.tstop
  4101e4:	ldr	x8, [x19, #344]
  4101e8:	ldr	x10, [x21]
  4101ec:	cmp	x9, #0x3
  4101f0:	b.cs	410208 <wcrtomb@plt+0xd998>  // b.hs, b.nlast
  4101f4:	mov	x11, xzr
  4101f8:	mov	w12, wzr
  4101fc:	b	410248 <wcrtomb@plt+0xd9d8>
  410200:	mov	w2, #0x7                   	// #7
  410204:	b	410268 <wcrtomb@plt+0xd9f8>
  410208:	and	x11, x9, #0xfffffffffffffffe
  41020c:	mov	w12, wzr
  410210:	mov	w13, wzr
  410214:	add	x14, x10, #0x10
  410218:	mov	x15, x11
  41021c:	ldur	x16, [x14, #-16]
  410220:	ldr	x17, [x14], #32
  410224:	subs	x15, x15, #0x2
  410228:	ldr	w16, [x8, x16, lsl #2]
  41022c:	ldr	w17, [x8, x17, lsl #2]
  410230:	orr	w12, w16, w12
  410234:	orr	w13, w17, w13
  410238:	b.ne	41021c <wcrtomb@plt+0xd9ac>  // b.any
  41023c:	cmp	x9, x11
  410240:	orr	w12, w13, w12
  410244:	b.eq	410264 <wcrtomb@plt+0xd9f4>  // b.none
  410248:	sub	x9, x9, x11
  41024c:	add	x10, x10, x11, lsl #4
  410250:	ldr	x11, [x10], #16
  410254:	subs	x9, x9, #0x1
  410258:	ldr	w11, [x8, x11, lsl #2]
  41025c:	orr	w12, w11, w12
  410260:	b.ne	410250 <wcrtomb@plt+0xd9e0>  // b.any
  410264:	eor	w2, w12, #0x7
  410268:	mov	x0, x19
  41026c:	mov	x1, x21
  410270:	bl	40f17c <wcrtomb@plt+0xc90c>
  410274:	mov	x23, x0
  410278:	mov	x0, x19
  41027c:	bl	40fd00 <wcrtomb@plt+0xd490>
  410280:	ldr	x9, [x19, #296]
  410284:	ldr	x8, [x19, #432]
  410288:	mov	w10, #0x50                  	// #80
  41028c:	madd	x9, x20, x10, x9
  410290:	ldr	x8, [x8, x22, lsl #3]
  410294:	ldr	x9, [x9, #72]
  410298:	str	x23, [x8, x9, lsl #3]
  41029c:	mov	x0, x23
  4102a0:	ldp	x20, x19, [sp, #96]
  4102a4:	ldp	x22, x21, [sp, #80]
  4102a8:	ldp	x24, x23, [sp, #64]
  4102ac:	ldp	x26, x25, [sp, #48]
  4102b0:	ldp	x28, x27, [sp, #32]
  4102b4:	ldp	x29, x30, [sp, #16]
  4102b8:	add	sp, sp, #0x70
  4102bc:	ret
  4102c0:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4102c4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4102c8:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4102cc:	add	x0, x0, #0x707
  4102d0:	add	x1, x1, #0x5ee
  4102d4:	add	x3, x3, #0x734
  4102d8:	mov	w2, #0xc93                 	// #3219
  4102dc:	bl	4027d0 <__assert_fail@plt>
  4102e0:	sub	sp, sp, #0x150
  4102e4:	stp	x29, x30, [sp, #240]
  4102e8:	stp	x28, x27, [sp, #256]
  4102ec:	stp	x26, x25, [sp, #272]
  4102f0:	stp	x24, x23, [sp, #288]
  4102f4:	stp	x22, x21, [sp, #304]
  4102f8:	stp	x20, x19, [sp, #320]
  4102fc:	ldr	x8, [x1, #296]
  410300:	mov	w9, #0x50                  	// #80
  410304:	add	x29, sp, #0xf0
  410308:	str	x2, [sp, #64]
  41030c:	madd	x8, x0, x9, x8
  410310:	ldrh	w8, [x8, #34]
  410314:	mov	w9, #0x178                 	// #376
  410318:	cmp	w8, #0x0
  41031c:	mov	w8, #0x170                 	// #368
  410320:	csel	x8, x8, x9, eq  // eq = none
  410324:	ldr	x19, [x1, x8]
  410328:	ldr	x11, [x19, x0, lsl #3]
  41032c:	stp	x0, x1, [sp, #112]
  410330:	cbnz	x11, 4103dc <wcrtomb@plt+0xdb6c>
  410334:	ldr	w8, [x1, #360]
  410338:	cmp	w8, #0x400
  41033c:	b.lt	41039c <wcrtomb@plt+0xdb2c>  // b.tstop
  410340:	ldrsw	x20, [x1, #364]
  410344:	ldr	x8, [x1, #352]
  410348:	cmp	x8, x20
  41034c:	b.le	410394 <wcrtomb@plt+0xdb24>
  410350:	ldr	x8, [x1, #368]
  410354:	lsl	x21, x20, #3
  410358:	ldr	x0, [x8, x21]
  41035c:	bl	402620 <free@plt>
  410360:	ldr	x8, [sp, #120]
  410364:	ldr	x8, [x8, #376]
  410368:	ldr	x0, [x8, x21]
  41036c:	bl	402620 <free@plt>
  410370:	ldr	x1, [sp, #120]
  410374:	add	x20, x20, #0x1
  410378:	ldr	x8, [x1, #376]
  41037c:	str	xzr, [x8, x21]
  410380:	ldr	x8, [x1, #368]
  410384:	str	xzr, [x8, x21]
  410388:	ldr	x8, [x1, #352]
  41038c:	cmp	x20, x8
  410390:	b.lt	410350 <wcrtomb@plt+0xdae0>  // b.tstop
  410394:	mov	w8, wzr
  410398:	str	wzr, [x1, #360]
  41039c:	add	w8, w8, #0x1
  4103a0:	mov	w0, #0x800                 	// #2048
  4103a4:	str	w8, [x1, #360]
  4103a8:	bl	4155d4 <wcrtomb@plt+0x12d64>
  4103ac:	mov	x11, x0
  4103b0:	ldr	x0, [sp, #112]
  4103b4:	mov	x9, #0xfffffffffffffffe    	// #-2
  4103b8:	mov	x8, xzr
  4103bc:	dup	v0.2d, x9
  4103c0:	str	x11, [x19, x0, lsl #3]
  4103c4:	add	x9, x11, x8
  4103c8:	add	x8, x8, #0x20
  4103cc:	cmp	x8, #0x800
  4103d0:	stp	q0, q0, [x9]
  4103d4:	b.ne	4103c4 <wcrtomb@plt+0xdb54>  // b.any
  4103d8:	ldr	x1, [sp, #120]
  4103dc:	ldr	x8, [x1, #384]
  4103e0:	mov	w9, #0x50                  	// #80
  4103e4:	strb	wzr, [x8, x0]
  4103e8:	ldr	x8, [x1, #296]
  4103ec:	madd	x9, x0, x9, x8
  4103f0:	ldrb	w8, [x9, #32]
  4103f4:	ldrh	w9, [x9, #34]
  4103f8:	and	w10, w8, w9, lsr #6
  4103fc:	tst	w10, #0x7
  410400:	b.eq	410428 <wcrtomb@plt+0xdbb8>  // b.none
  410404:	ldr	x8, [x1, #384]
  410408:	ldrb	w9, [x8, x0]
  41040c:	orr	w9, w9, #0x4
  410410:	strb	w9, [x8, x0]
  410414:	ldr	x8, [x1, #296]
  410418:	mov	w9, #0x50                  	// #80
  41041c:	madd	x9, x0, x9, x8
  410420:	ldrb	w8, [x9, #32]
  410424:	ldrh	w9, [x9, #34]
  410428:	and	w10, w8, w9, lsr #3
  41042c:	tst	w10, #0x7
  410430:	b.eq	410458 <wcrtomb@plt+0xdbe8>  // b.none
  410434:	ldr	x8, [x1, #384]
  410438:	ldrb	w9, [x8, x0]
  41043c:	orr	w9, w9, #0x2
  410440:	strb	w9, [x8, x0]
  410444:	ldr	x8, [x1, #296]
  410448:	mov	w9, #0x50                  	// #80
  41044c:	madd	x9, x0, x9, x8
  410450:	ldrb	w8, [x9, #32]
  410454:	ldrh	w9, [x9, #34]
  410458:	and	w8, w9, w8
  41045c:	tst	w8, #0x7
  410460:	b.eq	410474 <wcrtomb@plt+0xdc04>  // b.none
  410464:	ldr	x8, [x1, #384]
  410468:	ldrb	w9, [x8, x0]
  41046c:	orr	w9, w9, #0x1
  410470:	strb	w9, [x8, x0]
  410474:	ldr	x22, [x1, #176]
  410478:	lsr	x8, x22, #59
  41047c:	cbnz	x8, 41102c <wcrtomb@plt+0xe7bc>
  410480:	lsl	x0, x22, #4
  410484:	mov	x19, x1
  410488:	str	x11, [sp, #40]
  41048c:	bl	4155d4 <wcrtomb@plt+0x12d64>
  410490:	stur	x0, [x29, #-16]
  410494:	ldr	x8, [x19, #296]
  410498:	ldr	x13, [sp, #112]
  41049c:	mov	w9, #0x50                  	// #80
  4104a0:	mov	x24, x0
  4104a4:	mov	x14, x19
  4104a8:	madd	x9, x13, x9, x8
  4104ac:	ldr	x9, [x9, #16]
  4104b0:	cmp	x9, #0x1
  4104b4:	b.lt	410698 <wcrtomb@plt+0xde28>  // b.tstop
  4104b8:	ldr	x9, [x14, #320]
  4104bc:	mov	x11, xzr
  4104c0:	mov	x25, xzr
  4104c4:	mov	w15, #0x50                  	// #80
  4104c8:	mov	w23, #0x18                  	// #24
  4104cc:	b	4104e8 <wcrtomb@plt+0xdc78>
  4104d0:	madd	x10, x13, x15, x8
  4104d4:	ldr	x11, [sp, #104]
  4104d8:	ldr	x10, [x10, #16]
  4104dc:	add	x11, x11, #0x1
  4104e0:	cmp	x11, x10
  4104e4:	b.ge	41069c <wcrtomb@plt+0xde2c>  // b.tcont
  4104e8:	madd	x10, x13, x15, x8
  4104ec:	ldr	x10, [x10, #8]
  4104f0:	lsl	x28, x11, #4
  4104f4:	str	x11, [sp, #104]
  4104f8:	ldr	x10, [x10, x28]
  4104fc:	madd	x11, x10, x23, x9
  410500:	ldr	x11, [x11, #8]
  410504:	cmp	x11, #0x1
  410508:	b.lt	4104d0 <wcrtomb@plt+0xdc60>  // b.tstop
  41050c:	mov	x26, xzr
  410510:	b	410548 <wcrtomb@plt+0xdcd8>
  410514:	add	x8, x24, x20, lsl #4
  410518:	stp	x21, x19, [x8]
  41051c:	ldr	x9, [x14, #320]
  410520:	ldr	x8, [x14, #296]
  410524:	add	x25, x25, #0x1
  410528:	madd	x10, x13, x15, x8
  41052c:	ldr	x10, [x10, #8]
  410530:	add	x26, x26, #0x1
  410534:	ldr	x10, [x10, x28]
  410538:	madd	x11, x10, x23, x9
  41053c:	ldr	x11, [x11, #8]
  410540:	cmp	x26, x11
  410544:	b.ge	4104d0 <wcrtomb@plt+0xdc60>  // b.tcont
  410548:	mul	x10, x10, x23
  41054c:	ldr	x10, [x9, x10]
  410550:	cmp	x25, #0x1
  410554:	add	x10, x10, x26, lsl #4
  410558:	ldp	x21, x19, [x10]
  41055c:	b.lt	4105ac <wcrtomb@plt+0xdd3c>  // b.tstop
  410560:	mov	x20, xzr
  410564:	mov	x10, x25
  410568:	b	410578 <wcrtomb@plt+0xdd08>
  41056c:	add	x20, x11, #0x1
  410570:	cmp	x20, x10
  410574:	b.ge	4105b0 <wcrtomb@plt+0xdd40>  // b.tcont
  410578:	add	x11, x10, x20
  41057c:	asr	x11, x11, #1
  410580:	lsl	x12, x11, #4
  410584:	ldr	x12, [x24, x12]
  410588:	cmp	x12, x21
  41058c:	b.lt	41056c <wcrtomb@plt+0xdcfc>  // b.tstop
  410590:	mov	x10, x11
  410594:	b.ne	410570 <wcrtomb@plt+0xdd00>  // b.any
  410598:	add	x10, x24, x11, lsl #4
  41059c:	ldr	w11, [x10, #8]
  4105a0:	orr	w11, w11, w19
  4105a4:	str	w11, [x10, #8]
  4105a8:	b	410528 <wcrtomb@plt+0xdcb8>
  4105ac:	mov	x20, xzr
  4105b0:	cmp	x22, x25
  4105b4:	b.gt	410664 <wcrtomb@plt+0xddf4>
  4105b8:	adds	x8, x22, x22, asr #1
  4105bc:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4105c0:	csel	x27, x9, x8, vs
  4105c4:	tbnz	x27, #63, 4105dc <wcrtomb@plt+0xdd6c>
  4105c8:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  4105cc:	cmp	x27, x8
  4105d0:	b.le	4105f4 <wcrtomb@plt+0xdd84>
  4105d4:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4105d8:	b	410604 <wcrtomb@plt+0xdd94>
  4105dc:	cmn	x27, #0x1
  4105e0:	b.eq	410600 <wcrtomb@plt+0xdd90>  // b.none
  4105e4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  4105e8:	sdiv	x8, x8, x27
  4105ec:	cmp	x8, #0x10
  4105f0:	b.lt	4105d4 <wcrtomb@plt+0xdd64>  // b.tstop
  4105f4:	lsl	x1, x27, #4
  4105f8:	cmp	x1, #0x7f
  4105fc:	b.gt	41060c <wcrtomb@plt+0xdd9c>
  410600:	mov	w8, #0x80                  	// #128
  410604:	lsr	x27, x8, #4
  410608:	and	x1, x8, #0x7ffffffffffffff0
  41060c:	cmp	x27, x22
  410610:	b.gt	41064c <wcrtomb@plt+0xdddc>
  410614:	adds	x27, x22, #0x1
  410618:	b.vs	41102c <wcrtomb@plt+0xe7bc>
  41061c:	tbnz	x27, #63, 410630 <wcrtomb@plt+0xddc0>
  410620:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  410624:	cmp	x27, x8
  410628:	b.le	410648 <wcrtomb@plt+0xddd8>
  41062c:	b	41102c <wcrtomb@plt+0xe7bc>
  410630:	cmn	x27, #0x1
  410634:	b.eq	410648 <wcrtomb@plt+0xddd8>  // b.none
  410638:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  41063c:	sdiv	x8, x8, x27
  410640:	cmp	x8, #0x10
  410644:	b.lt	41102c <wcrtomb@plt+0xe7bc>  // b.tstop
  410648:	lsl	x1, x27, #4
  41064c:	mov	x0, x24
  410650:	bl	415654 <wcrtomb@plt+0x12de4>
  410654:	ldp	x13, x14, [sp, #112]
  410658:	mov	x24, x0
  41065c:	mov	x22, x27
  410660:	mov	w15, #0x50                  	// #80
  410664:	cmp	x25, x20
  410668:	stur	x24, [x29, #-16]
  41066c:	b.le	410514 <wcrtomb@plt+0xdca4>
  410670:	add	x8, x24, x25, lsl #4
  410674:	mov	x9, x25
  410678:	ldur	q0, [x8, #-16]
  41067c:	sub	x9, x9, #0x1
  410680:	sub	x10, x8, #0x10
  410684:	cmp	x9, x20
  410688:	str	q0, [x8]
  41068c:	mov	x8, x10
  410690:	b.gt	410678 <wcrtomb@plt+0xde08>
  410694:	b	410514 <wcrtomb@plt+0xdca4>
  410698:	mov	x25, xzr
  41069c:	ldr	x9, [x14, #176]
  4106a0:	lsr	x8, x9, #59
  4106a4:	cbnz	x8, 41102c <wcrtomb@plt+0xe7bc>
  4106a8:	lsl	x0, x9, #4
  4106ac:	mov	x19, x9
  4106b0:	bl	4155d4 <wcrtomb@plt+0x12d64>
  4106b4:	mov	x18, x19
  4106b8:	mov	x15, x0
  4106bc:	stur	x0, [x29, #-40]
  4106c0:	movi	v0.2d, #0xffffffffffffffff
  4106c4:	cmp	x25, #0x1
  4106c8:	mov	x0, xzr
  4106cc:	stp	xzr, x19, [x29, #-32]
  4106d0:	stp	q0, q0, [x29, #-80]
  4106d4:	b.lt	410ba4 <wcrtomb@plt+0xe334>  // b.tstop
  4106d8:	ldr	x9, [sp, #64]
  4106dc:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4106e0:	ldr	q0, [x8, #1424]
  4106e4:	ldp	x13, x14, [sp, #112]
  4106e8:	mov	w3, #0x1                   	// #1
  4106ec:	mov	x23, xzr
  4106f0:	ubfx	x2, x9, #6, #2
  4106f4:	and	x4, x9, #0xff
  4106f8:	mov	x21, #0xffffffffffffffff    	// #-1
  4106fc:	movi	v4.2d, #0x0
  410700:	sub	x5, x29, #0x70
  410704:	mov	w6, #0x50                  	// #80
  410708:	lsl	x7, x3, x9
  41070c:	mov	x16, #0xffffffffffffffff    	// #-1
  410710:	mov	x17, #0xffffffffffffffff    	// #-1
  410714:	mov	x22, #0xffffffffffffffff    	// #-1
  410718:	str	q0, [sp]
  41071c:	stp	x4, x2, [sp, #88]
  410720:	str	x7, [sp, #80]
  410724:	b	410798 <wcrtomb@plt+0xdf28>
  410728:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  41072c:	cmp	x19, x8
  410730:	b.gt	41102c <wcrtomb@plt+0xe7bc>
  410734:	lsl	x1, x19, #4
  410738:	mov	x0, x15
  41073c:	bl	415654 <wcrtomb@plt+0x12de4>
  410740:	mov	x15, x0
  410744:	ldp	x13, x14, [sp, #112]
  410748:	ldp	x4, x2, [sp, #88]
  41074c:	ldr	x7, [sp, #80]
  410750:	ldr	x0, [sp, #104]
  410754:	mov	x18, x19
  410758:	mov	x16, x28
  41075c:	mov	x17, x22
  410760:	mov	x22, x20
  410764:	mov	w3, #0x1                   	// #1
  410768:	movi	v4.2d, #0x0
  41076c:	sub	x5, x29, #0x70
  410770:	mov	w6, #0x50                  	// #80
  410774:	stur	x19, [x29, #-24]
  410778:	add	x9, x0, #0x1
  41077c:	add	x8, x15, x0, lsl #4
  410780:	mov	x0, x9
  410784:	stp	x15, x9, [x29, #-40]
  410788:	stp	x27, x26, [x8]
  41078c:	add	x23, x23, #0x1
  410790:	cmp	x23, x25
  410794:	b.eq	410bb8 <wcrtomb@plt+0xe348>  // b.none
  410798:	add	x8, x24, x23, lsl #4
  41079c:	ldr	x9, [x14, #144]
  4107a0:	ldp	x27, x26, [x8]
  4107a4:	ldr	x8, [x9, x27, lsl #3]
  4107a8:	cmp	x8, #0xff
  4107ac:	b.hi	4107d8 <wcrtomb@plt+0xdf68>  // b.pmore
  4107b0:	lsr	x9, x8, #3
  4107b4:	stp	q4, q4, [x29, #-112]
  4107b8:	and	x9, x9, #0x1ffffffffffffff8
  4107bc:	ldr	x10, [x5, x9]
  4107c0:	lsl	x11, x3, x8
  4107c4:	cmp	x8, x4
  4107c8:	cset	w28, eq  // eq = none
  4107cc:	orr	x8, x10, x11
  4107d0:	str	x8, [x5, x9]
  4107d4:	b	4109d8 <wcrtomb@plt+0xe168>
  4107d8:	cmp	x8, #0x114
  4107dc:	b.lt	410808 <wcrtomb@plt+0xdf98>  // b.tstop
  4107e0:	ldr	x9, [x14]
  4107e4:	add	x8, x9, x8, lsl #5
  4107e8:	mov	x9, #0xffffffffffffdd80    	// #-8832
  4107ec:	add	x8, x8, x9
  4107f0:	ldp	q1, q0, [x8]
  4107f4:	stp	q1, q0, [x29, #-112]
  4107f8:	ldr	x8, [x5, x2, lsl #3]
  4107fc:	tst	x8, x7
  410800:	cset	w28, ne  // ne = any
  410804:	b	4109d8 <wcrtomb@plt+0xe168>
  410808:	cmp	x8, #0x10a
  41080c:	b.ne	41078c <wcrtomb@plt+0xdf1c>  // b.any
  410810:	ldr	x8, [x14]
  410814:	ldr	x9, [x14, #24]
  410818:	add	x8, x8, x9, lsl #5
  41081c:	ldp	q1, q0, [x8]
  410820:	stp	q1, q0, [x29, #-112]
  410824:	ldr	x8, [x14, #296]
  410828:	ldr	x9, [x5, x2, lsl #3]
  41082c:	madd	x10, x13, x6, x8
  410830:	ldrb	w10, [x10, #32]
  410834:	tst	x9, x7
  410838:	cset	w28, ne  // ne = any
  41083c:	and	w9, w26, w10
  410840:	tst	w9, #0x7
  410844:	b.eq	4109d8 <wcrtomb@plt+0xe168>  // b.none
  410848:	str	x0, [sp, #104]
  41084c:	madd	x20, x13, x6, x8
  410850:	ldr	x19, [x20, #56]!
  410854:	str	x21, [sp, #72]
  410858:	cbnz	x19, 4108c4 <wcrtomb@plt+0xe054>
  41085c:	add	x9, x13, x13, lsl #2
  410860:	lsl	x19, x9, #4
  410864:	add	x8, x8, x19
  410868:	mov	w0, #0x10                  	// #16
  41086c:	stp	x8, x17, [sp, #24]
  410870:	stp	x22, x15, [sp, #48]
  410874:	mov	x21, x16
  410878:	mov	x22, x18
  41087c:	bl	4155d4 <wcrtomb@plt+0x12d64>
  410880:	ldp	x8, x17, [sp, #24]
  410884:	ldr	q0, [sp]
  410888:	ldp	x13, x14, [sp, #112]
  41088c:	ldp	x7, x4, [sp, #80]
  410890:	mov	x18, x22
  410894:	ldp	x22, x15, [sp, #48]
  410898:	str	x0, [x8, #48]
  41089c:	str	q0, [x20]
  4108a0:	ldr	x8, [x14, #296]
  4108a4:	ldr	x2, [sp, #96]
  4108a8:	mov	w6, #0x50                  	// #80
  4108ac:	sub	x5, x29, #0x70
  4108b0:	add	x9, x8, x19
  4108b4:	ldr	x19, [x9, #56]
  4108b8:	movi	v4.2d, #0x0
  4108bc:	mov	w3, #0x1                   	// #1
  4108c0:	mov	x16, x21
  4108c4:	madd	x12, x13, x6, x8
  4108c8:	cmp	x19, #0x0
  4108cc:	add	x20, x12, #0x30
  4108d0:	b.le	410924 <wcrtomb@plt+0xe0b4>
  4108d4:	ldr	x0, [x20]
  4108d8:	mov	x21, xzr
  4108dc:	mov	x9, x19
  4108e0:	b	4108f0 <wcrtomb@plt+0xe080>
  4108e4:	add	x21, x10, #0x1
  4108e8:	cmp	x21, x9
  4108ec:	b.ge	41092c <wcrtomb@plt+0xe0bc>  // b.tcont
  4108f0:	add	x10, x9, x21
  4108f4:	asr	x10, x10, #1
  4108f8:	lsl	x11, x10, #4
  4108fc:	ldr	x11, [x0, x11]
  410900:	cmp	x11, x27
  410904:	b.lt	4108e4 <wcrtomb@plt+0xe074>  // b.tstop
  410908:	mov	x9, x10
  41090c:	b.ne	4108e8 <wcrtomb@plt+0xe078>  // b.any
  410910:	add	x8, x0, x10, lsl #4
  410914:	ldr	w9, [x8, #8]
  410918:	orr	w9, w9, w26
  41091c:	str	w9, [x8, #8]
  410920:	b	4109d0 <wcrtomb@plt+0xe160>
  410924:	ldr	x0, [x20]
  410928:	mov	x21, xzr
  41092c:	madd	x1, x13, x6, x8
  410930:	ldr	x8, [x1, #64]!
  410934:	cmp	x8, x19
  410938:	b.gt	410988 <wcrtomb@plt+0xe118>
  41093c:	mov	w2, #0x1                   	// #1
  410940:	mov	x3, #0xffffffffffffffff    	// #-1
  410944:	mov	w4, #0x10                  	// #16
  410948:	stp	x22, x15, [sp, #48]
  41094c:	stp	x18, x16, [sp, #24]
  410950:	mov	x22, x17
  410954:	str	x12, [sp, #16]
  410958:	bl	40d920 <wcrtomb@plt+0xb0b0>
  41095c:	ldp	x12, x18, [sp, #16]
  410960:	ldp	x7, x4, [sp, #80]
  410964:	ldr	x2, [sp, #96]
  410968:	mov	x17, x22
  41096c:	ldp	x22, x15, [sp, #48]
  410970:	ldr	x16, [sp, #32]
  410974:	ldp	x13, x14, [sp, #112]
  410978:	mov	w6, #0x50                  	// #80
  41097c:	sub	x5, x29, #0x70
  410980:	movi	v4.2d, #0x0
  410984:	mov	w3, #0x1                   	// #1
  410988:	add	x8, x12, #0x38
  41098c:	cmp	x19, x21
  410990:	str	x0, [x20]
  410994:	b.le	4109bc <wcrtomb@plt+0xe14c>
  410998:	lsl	x9, x19, #4
  41099c:	add	x10, x0, x9
  4109a0:	ldur	q0, [x10, #-16]
  4109a4:	sub	x19, x19, #0x1
  4109a8:	cmp	x19, x21
  4109ac:	sub	x9, x9, #0x10
  4109b0:	str	q0, [x10]
  4109b4:	ldr	x0, [x20]
  4109b8:	b.gt	41099c <wcrtomb@plt+0xe12c>
  4109bc:	add	x9, x0, x21, lsl #4
  4109c0:	stp	x27, x26, [x9]
  4109c4:	ldr	x9, [x8]
  4109c8:	add	x9, x9, #0x1
  4109cc:	str	x9, [x8]
  4109d0:	ldr	x0, [sp, #104]
  4109d4:	ldr	x21, [sp, #72]
  4109d8:	cmp	w26, #0x1ff
  4109dc:	b.ne	410a34 <wcrtomb@plt+0xe1c4>  // b.any
  4109e0:	ldp	x10, x8, [x29, #-112]
  4109e4:	ldp	x11, x9, [x29, #-96]
  4109e8:	cbz	w28, 410b14 <wcrtomb@plt+0xe2a4>
  4109ec:	and	x22, x22, x10
  4109f0:	and	x17, x17, x8
  4109f4:	and	x16, x16, x11
  4109f8:	and	x21, x21, x9
  4109fc:	cmp	x18, x0
  410a00:	stp	x22, x17, [x29, #-80]
  410a04:	stp	x16, x21, [x29, #-64]
  410a08:	b.gt	410778 <wcrtomb@plt+0xdf08>
  410a0c:	adds	x8, x18, x18, asr #1
  410a10:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  410a14:	csel	x19, x9, x8, vs
  410a18:	str	x0, [sp, #104]
  410a1c:	tbnz	x19, #63, 410b30 <wcrtomb@plt+0xe2c0>
  410a20:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  410a24:	cmp	x19, x8
  410a28:	b.le	410b48 <wcrtomb@plt+0xe2d8>
  410a2c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  410a30:	b	410b58 <wcrtomb@plt+0xe2e8>
  410a34:	ldr	x8, [x14, #296]
  410a38:	lsr	w9, w26, #3
  410a3c:	madd	x8, x13, x6, x8
  410a40:	ldrb	w8, [x8, #32]
  410a44:	and	w8, w8, #0x7
  410a48:	tst	w8, w26, lsr #6
  410a4c:	b.eq	410a6c <wcrtomb@plt+0xe1fc>  // b.none
  410a50:	tst	w9, w8
  410a54:	b.eq	410a90 <wcrtomb@plt+0xe220>  // b.none
  410a58:	tst	w8, w26
  410a5c:	b.eq	410ab4 <wcrtomb@plt+0xe244>  // b.none
  410a60:	ldp	x10, x8, [x29, #-112]
  410a64:	ldp	x11, x9, [x29, #-96]
  410a68:	b	410af0 <wcrtomb@plt+0xe280>
  410a6c:	ldr	q0, [x14, #1008]
  410a70:	ldp	q1, q2, [x29, #-112]
  410a74:	bic	v0.16b, v1.16b, v0.16b
  410a78:	stur	q0, [x29, #-112]
  410a7c:	ldr	q0, [x14, #1024]
  410a80:	bic	v0.16b, v2.16b, v0.16b
  410a84:	stur	q0, [x29, #-96]
  410a88:	tst	w9, w8
  410a8c:	b.ne	410a58 <wcrtomb@plt+0xe1e8>  // b.any
  410a90:	ldr	q0, [x14, #976]
  410a94:	ldp	q1, q2, [x29, #-112]
  410a98:	bic	v0.16b, v1.16b, v0.16b
  410a9c:	stur	q0, [x29, #-112]
  410aa0:	ldr	q0, [x14, #992]
  410aa4:	bic	v0.16b, v2.16b, v0.16b
  410aa8:	stur	q0, [x29, #-96]
  410aac:	tst	w8, w26
  410ab0:	b.ne	410a60 <wcrtomb@plt+0xe1f0>  // b.any
  410ab4:	ldr	q0, [x14, #976]
  410ab8:	ldr	q1, [x14, #1008]
  410abc:	ldp	q2, q3, [x29, #-112]
  410ac0:	orr	v0.16b, v1.16b, v0.16b
  410ac4:	and	v0.16b, v2.16b, v0.16b
  410ac8:	stur	q0, [x29, #-112]
  410acc:	ldr	q1, [x14, #992]
  410ad0:	ldr	q2, [x14, #1024]
  410ad4:	mov	x8, v0.d[1]
  410ad8:	fmov	x10, d0
  410adc:	orr	v0.16b, v2.16b, v1.16b
  410ae0:	and	v0.16b, v3.16b, v0.16b
  410ae4:	mov	x9, v0.d[1]
  410ae8:	fmov	x11, d0
  410aec:	stur	q0, [x29, #-96]
  410af0:	orr	x12, x8, x10
  410af4:	orr	x12, x12, x11
  410af8:	orr	x12, x12, x9
  410afc:	cbz	x12, 41078c <wcrtomb@plt+0xdf1c>
  410b00:	ldr	x12, [x5, x2, lsl #3]
  410b04:	tst	x12, x7
  410b08:	cset	w12, ne  // ne = any
  410b0c:	and	w12, w28, w12
  410b10:	tbnz	w12, #0, 4109ec <wcrtomb@plt+0xe17c>
  410b14:	bic	x22, x22, x10
  410b18:	bic	x17, x17, x8
  410b1c:	bic	x16, x16, x11
  410b20:	bic	x21, x21, x9
  410b24:	stp	x22, x17, [x29, #-80]
  410b28:	stp	x16, x21, [x29, #-64]
  410b2c:	b	41078c <wcrtomb@plt+0xdf1c>
  410b30:	cmn	x19, #0x1
  410b34:	b.eq	410b54 <wcrtomb@plt+0xe2e4>  // b.none
  410b38:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  410b3c:	sdiv	x8, x8, x19
  410b40:	cmp	x8, #0x10
  410b44:	b.lt	410a2c <wcrtomb@plt+0xe1bc>  // b.tstop
  410b48:	lsl	x1, x19, #4
  410b4c:	cmp	x1, #0x7f
  410b50:	b.gt	410b60 <wcrtomb@plt+0xe2f0>
  410b54:	mov	w8, #0x80                  	// #128
  410b58:	lsr	x19, x8, #4
  410b5c:	and	x1, x8, #0x7ffffffffffffff0
  410b60:	mov	x20, x22
  410b64:	cbnz	x15, 410b6c <wcrtomb@plt+0xe2fc>
  410b68:	stur	xzr, [x29, #-24]
  410b6c:	mov	x22, x17
  410b70:	mov	x28, x16
  410b74:	cmp	x19, x18
  410b78:	b.gt	410738 <wcrtomb@plt+0xdec8>
  410b7c:	adds	x19, x18, #0x1
  410b80:	b.vs	41102c <wcrtomb@plt+0xe7bc>
  410b84:	tbz	x19, #63, 410728 <wcrtomb@plt+0xdeb8>
  410b88:	cmn	x19, #0x1
  410b8c:	b.eq	410734 <wcrtomb@plt+0xdec4>  // b.none
  410b90:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  410b94:	sdiv	x8, x8, x19
  410b98:	cmp	x8, #0x10
  410b9c:	b.ge	410734 <wcrtomb@plt+0xdec4>  // b.tcont
  410ba0:	b	41102c <wcrtomb@plt+0xe7bc>
  410ba4:	ldr	x14, [sp, #120]
  410ba8:	mov	x21, #0xffffffffffffffff    	// #-1
  410bac:	mov	x16, #0xffffffffffffffff    	// #-1
  410bb0:	mov	x17, #0xffffffffffffffff    	// #-1
  410bb4:	mov	x22, #0xffffffffffffffff    	// #-1
  410bb8:	ldr	x19, [x14, #176]
  410bbc:	lsr	x8, x19, #59
  410bc0:	cbnz	x8, 41102c <wcrtomb@plt+0xe7bc>
  410bc4:	mov	x24, x0
  410bc8:	lsl	x0, x19, #4
  410bcc:	mov	x28, x18
  410bd0:	mov	x27, x17
  410bd4:	mov	x26, x16
  410bd8:	mov	x25, x21
  410bdc:	mov	x23, x15
  410be0:	mov	x20, x14
  410be4:	bl	4155d4 <wcrtomb@plt+0x12d64>
  410be8:	stp	xzr, x19, [x29, #-104]
  410bec:	stur	x0, [x29, #-112]
  410bf0:	ldrb	w8, [x20, #328]
  410bf4:	ldr	x21, [sp, #40]
  410bf8:	cmp	x24, #0x0
  410bfc:	mov	x0, x20
  410c00:	b.le	410ca8 <wcrtomb@plt+0xe438>
  410c04:	mov	x16, x23
  410c08:	mov	x14, x27
  410c0c:	cbz	w8, 410cc0 <wcrtomb@plt+0xe450>
  410c10:	ldrb	w8, [x0, #1048]
  410c14:	mov	x20, x24
  410c18:	cmp	w8, #0x1
  410c1c:	cset	w9, ne  // ne = any
  410c20:	cbz	w8, 410c4c <wcrtomb@plt+0xe3dc>
  410c24:	ldr	x8, [x0, #280]
  410c28:	mov	w10, #0x1                   	// #1
  410c2c:	mov	x11, x16
  410c30:	ldr	x9, [x11], #16
  410c34:	ldrb	w12, [x8, x9]
  410c38:	and	w9, w12, #0x1
  410c3c:	tbz	w12, #0, 410c4c <wcrtomb@plt+0xe3dc>
  410c40:	cmp	x10, x20
  410c44:	add	x10, x10, #0x1
  410c48:	b.lt	410c30 <wcrtomb@plt+0xe3c0>  // b.tstop
  410c4c:	cbz	w9, 410d94 <wcrtomb@plt+0xe524>
  410c50:	ldr	x8, [x0, #296]
  410c54:	sub	x1, x29, #0x28
  410c58:	sub	x3, x29, #0x70
  410c5c:	mov	w2, #0xffffffff            	// #-1
  410c60:	add	x0, x8, #0x8
  410c64:	bl	40f4bc <wcrtomb@plt+0xcc4c>
  410c68:	ldur	x8, [x29, #-104]
  410c6c:	mov	x9, x28
  410c70:	mov	x24, x8
  410c74:	subs	x20, x8, x28
  410c78:	b.le	410cd8 <wcrtomb@plt+0xe468>
  410c7c:	mov	x0, x23
  410c80:	bl	402620 <free@plt>
  410c84:	adds	x8, x28, x28, asr #1
  410c88:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  410c8c:	csel	x19, x9, x8, vs
  410c90:	tbnz	x19, #63, 410ce0 <wcrtomb@plt+0xe470>
  410c94:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  410c98:	cmp	x19, x8
  410c9c:	b.le	410cf8 <wcrtomb@plt+0xe488>
  410ca0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  410ca4:	b	410d08 <wcrtomb@plt+0xe498>
  410ca8:	cbz	w8, 410cc8 <wcrtomb@plt+0xe458>
  410cac:	ldrsw	x8, [x0, #364]
  410cb0:	ldr	x24, [x0, #400]
  410cb4:	mov	x25, xzr
  410cb8:	sub	x26, x8, #0x1
  410cbc:	b	410f58 <wcrtomb@plt+0xe6e8>
  410cc0:	mov	x20, x24
  410cc4:	b	410d94 <wcrtomb@plt+0xe524>
  410cc8:	mov	x26, #0xffffffffffffffff    	// #-1
  410ccc:	mov	x25, #0xffffffffffffffff    	// #-1
  410cd0:	mov	x24, #0xffffffffffffffff    	// #-1
  410cd4:	b	410f58 <wcrtomb@plt+0xe6e8>
  410cd8:	mov	x16, x23
  410cdc:	b	410d68 <wcrtomb@plt+0xe4f8>
  410ce0:	cmn	x19, #0x1
  410ce4:	b.eq	410d04 <wcrtomb@plt+0xe494>  // b.none
  410ce8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  410cec:	sdiv	x8, x8, x19
  410cf0:	cmp	x8, #0x10
  410cf4:	b.lt	410ca0 <wcrtomb@plt+0xe430>  // b.tstop
  410cf8:	lsl	x1, x19, #4
  410cfc:	cmp	x1, #0x7f
  410d00:	b.gt	410d10 <wcrtomb@plt+0xe4a0>
  410d04:	mov	w8, #0x80                  	// #128
  410d08:	lsr	x19, x8, #4
  410d0c:	and	x1, x8, #0x7ffffffffffffff0
  410d10:	cmp	x19, x24
  410d14:	stur	xzr, [x29, #-24]
  410d18:	b.ge	410d54 <wcrtomb@plt+0xe4e4>  // b.tcont
  410d1c:	adds	x19, x28, x20
  410d20:	b.vs	41102c <wcrtomb@plt+0xe7bc>
  410d24:	tbnz	x19, #63, 410d38 <wcrtomb@plt+0xe4c8>
  410d28:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  410d2c:	cmp	x19, x8
  410d30:	b.le	410d50 <wcrtomb@plt+0xe4e0>
  410d34:	b	41102c <wcrtomb@plt+0xe7bc>
  410d38:	cmn	x19, #0x1
  410d3c:	b.eq	410d50 <wcrtomb@plt+0xe4e0>  // b.none
  410d40:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  410d44:	sdiv	x8, x8, x19
  410d48:	cmp	x8, #0x10
  410d4c:	b.lt	41102c <wcrtomb@plt+0xe7bc>  // b.tstop
  410d50:	lsl	x1, x19, #4
  410d54:	mov	x0, xzr
  410d58:	bl	415654 <wcrtomb@plt+0x12de4>
  410d5c:	mov	x16, x0
  410d60:	stur	x19, [x29, #-24]
  410d64:	stur	x0, [x29, #-40]
  410d68:	mov	x20, x24
  410d6c:	stur	x24, [x29, #-32]
  410d70:	cbz	x24, 410d8c <wcrtomb@plt+0xe51c>
  410d74:	ldur	x1, [x29, #-112]
  410d78:	lsl	x2, x20, #4
  410d7c:	mov	x0, x16
  410d80:	mov	x19, x16
  410d84:	bl	402210 <memcpy@plt>
  410d88:	mov	x16, x19
  410d8c:	ldr	x0, [sp, #120]
  410d90:	mov	x14, x27
  410d94:	ldr	x8, [x0, #1008]
  410d98:	ldr	x9, [x0, #976]
  410d9c:	mov	w10, #0x2                   	// #2
  410da0:	ldr	x11, [x0, #1016]
  410da4:	tst	x8, x22
  410da8:	cset	w12, ne  // ne = any
  410dac:	orr	x8, x9, x8
  410db0:	tst	x9, x22
  410db4:	bfi	w10, w12, #2, #1
  410db8:	lsl	w12, w12, #2
  410dbc:	csel	w10, w12, w10, eq  // eq = none
  410dc0:	bics	xzr, x22, x8
  410dc4:	ldr	x9, [x0, #984]
  410dc8:	cset	w13, ne  // ne = any
  410dcc:	orr	w10, w10, w13
  410dd0:	tst	x11, x14
  410dd4:	orr	w13, w10, #0x4
  410dd8:	csel	w10, w10, w13, eq  // eq = none
  410ddc:	ldr	x12, [x0, #1024]
  410de0:	orr	x11, x9, x11
  410de4:	tst	x9, x14
  410de8:	orr	w9, w10, #0x2
  410dec:	csel	w9, w10, w9, eq  // eq = none
  410df0:	bics	xzr, x14, x11
  410df4:	ldr	x8, [x0, #992]
  410df8:	cset	w14, ne  // ne = any
  410dfc:	orr	w9, w9, w14
  410e00:	tst	x12, x26
  410e04:	orr	w14, w9, #0x4
  410e08:	csel	w9, w9, w14, eq  // eq = none
  410e0c:	ldr	x13, [x0, #1032]
  410e10:	orr	x11, x8, x12
  410e14:	tst	x8, x26
  410e18:	orr	w8, w9, #0x2
  410e1c:	csel	w8, w9, w8, eq  // eq = none
  410e20:	bics	xzr, x26, x11
  410e24:	ldr	x10, [x0, #1000]
  410e28:	cset	w9, ne  // ne = any
  410e2c:	orr	w8, w8, w9
  410e30:	tst	x13, x25
  410e34:	orr	w9, w8, #0x4
  410e38:	csel	w8, w8, w9, eq  // eq = none
  410e3c:	orr	x12, x10, x13
  410e40:	tst	x10, x25
  410e44:	orr	w9, w8, #0x2
  410e48:	csel	w8, w8, w9, eq  // eq = none
  410e4c:	bics	xzr, x25, x12
  410e50:	cset	w9, ne  // ne = any
  410e54:	cmp	x20, #0x1
  410e58:	orr	w19, w8, w9
  410e5c:	b.lt	410e7c <wcrtomb@plt+0xe60c>  // b.tstop
  410e60:	ldr	x8, [x0, #344]
  410e64:	cmp	x20, #0x3
  410e68:	b.cs	410e84 <wcrtomb@plt+0xe614>  // b.hs, b.nlast
  410e6c:	mov	x9, xzr
  410e70:	mov	x12, x20
  410e74:	mov	w20, wzr
  410e78:	b	410ec8 <wcrtomb@plt+0xe658>
  410e7c:	mov	w20, wzr
  410e80:	b	410ee4 <wcrtomb@plt+0xe674>
  410e84:	and	x9, x20, #0xfffffffffffffffe
  410e88:	mov	w10, wzr
  410e8c:	mov	w11, wzr
  410e90:	add	x12, x16, #0x10
  410e94:	mov	x13, x9
  410e98:	ldur	x14, [x12, #-16]
  410e9c:	ldr	x15, [x12], #32
  410ea0:	subs	x13, x13, #0x2
  410ea4:	ldr	w14, [x8, x14, lsl #2]
  410ea8:	ldr	w15, [x8, x15, lsl #2]
  410eac:	orr	w10, w14, w10
  410eb0:	orr	w11, w15, w11
  410eb4:	b.ne	410e98 <wcrtomb@plt+0xe628>  // b.any
  410eb8:	cmp	x20, x9
  410ebc:	mov	x12, x20
  410ec0:	orr	w20, w11, w10
  410ec4:	b.eq	410ee4 <wcrtomb@plt+0xe674>  // b.none
  410ec8:	sub	x10, x12, x9
  410ecc:	add	x9, x16, x9, lsl #4
  410ed0:	ldr	x11, [x9], #16
  410ed4:	subs	x10, x10, #0x1
  410ed8:	ldr	w11, [x8, x11, lsl #2]
  410edc:	orr	w20, w11, w20
  410ee0:	b.ne	410ed0 <wcrtomb@plt+0xe660>  // b.any
  410ee4:	mov	x23, x16
  410ee8:	bics	wzr, w19, w20
  410eec:	b.eq	410f04 <wcrtomb@plt+0xe694>  // b.none
  410ef0:	eor	w2, w20, #0x7
  410ef4:	sub	x1, x29, #0x28
  410ef8:	bl	40f17c <wcrtomb@plt+0xc90c>
  410efc:	mov	x24, x0
  410f00:	b	410f08 <wcrtomb@plt+0xe698>
  410f04:	mov	x24, #0xffffffffffffffff    	// #-1
  410f08:	and	w19, w20, w19
  410f0c:	mov	x25, x24
  410f10:	tbz	w19, #2, 410f28 <wcrtomb@plt+0xe6b8>
  410f14:	ldr	x0, [sp, #120]
  410f18:	sub	x1, x29, #0x28
  410f1c:	mov	w2, #0x4                   	// #4
  410f20:	bl	40f17c <wcrtomb@plt+0xc90c>
  410f24:	mov	x25, x0
  410f28:	ldr	x8, [sp, #120]
  410f2c:	mov	x26, x24
  410f30:	tbz	w19, #1, 410f4c <wcrtomb@plt+0xe6dc>
  410f34:	sub	x1, x29, #0x28
  410f38:	mov	w2, #0x2                   	// #2
  410f3c:	mov	x0, x8
  410f40:	bl	40f17c <wcrtomb@plt+0xc90c>
  410f44:	ldr	x8, [sp, #120]
  410f48:	mov	x26, x0
  410f4c:	mov	x0, x8
  410f50:	bl	40fd00 <wcrtomb@plt+0xd490>
  410f54:	ldr	x0, [sp, #120]
  410f58:	mov	x8, xzr
  410f5c:	add	x9, x0, #0x1cc
  410f60:	sub	x10, x29, #0x50
  410f64:	b	410f78 <wcrtomb@plt+0xe708>
  410f68:	str	x11, [x21, x8, lsl #3]
  410f6c:	add	x8, x8, #0x1
  410f70:	cmp	x8, #0x100
  410f74:	b.eq	410fac <wcrtomb@plt+0xe73c>  // b.none
  410f78:	ubfx	x11, x8, #6, #26
  410f7c:	ldr	x11, [x10, x11, lsl #3]
  410f80:	lsr	x11, x11, x8
  410f84:	tbz	w11, #0, 410f6c <wcrtomb@plt+0xe6fc>
  410f88:	ldrb	w12, [x9, x8]
  410f8c:	mov	x11, x25
  410f90:	cmp	w12, #0x4
  410f94:	b.eq	410f68 <wcrtomb@plt+0xe6f8>  // b.none
  410f98:	cmp	w12, #0x2
  410f9c:	mov	x11, x26
  410fa0:	b.eq	410f68 <wcrtomb@plt+0xe6f8>  // b.none
  410fa4:	mov	x11, x24
  410fa8:	b	410f68 <wcrtomb@plt+0xe6f8>
  410fac:	mov	x0, x23
  410fb0:	bl	402620 <free@plt>
  410fb4:	ldur	x0, [x29, #-16]
  410fb8:	bl	402620 <free@plt>
  410fbc:	ldur	x0, [x29, #-112]
  410fc0:	bl	402620 <free@plt>
  410fc4:	ldr	x11, [sp, #120]
  410fc8:	sub	x10, x29, #0x50
  410fcc:	ldrb	w8, [x11, #459]
  410fd0:	lsr	x9, x8, #3
  410fd4:	and	x9, x9, #0x18
  410fd8:	ldr	x9, [x10, x9]
  410fdc:	lsr	x9, x9, x8
  410fe0:	tbz	w9, #0, 411000 <wcrtomb@plt+0xe790>
  410fe4:	lsl	x8, x8, #3
  410fe8:	ldr	x9, [x11, #392]
  410fec:	ldr	x10, [x21, x8]
  410ff0:	ldr	x12, [sp, #112]
  410ff4:	mov	x11, #0xffffffffffffffff    	// #-1
  410ff8:	str	x10, [x9, x12, lsl #3]
  410ffc:	str	x11, [x21, x8]
  411000:	ldr	x8, [sp, #64]
  411004:	ldp	x20, x19, [sp, #320]
  411008:	ldp	x24, x23, [sp, #288]
  41100c:	ldp	x26, x25, [sp, #272]
  411010:	and	x8, x8, #0xff
  411014:	ldr	x0, [x21, x8, lsl #3]
  411018:	ldp	x22, x21, [sp, #304]
  41101c:	ldp	x28, x27, [sp, #256]
  411020:	ldp	x29, x30, [sp, #240]
  411024:	add	sp, sp, #0x150
  411028:	ret
  41102c:	bl	415898 <wcrtomb@plt+0x13028>
  411030:	sub	sp, sp, #0x40
  411034:	stp	x29, x30, [sp, #32]
  411038:	stp	x20, x19, [sp, #48]
  41103c:	add	x29, sp, #0x20
  411040:	mov	x19, x0
  411044:	bl	402630 <__ctype_get_mb_cur_max@plt>
  411048:	cmp	x0, #0x1
  41104c:	cset	w8, hi  // hi = pmore
  411050:	strb	w8, [x19]
  411054:	b.hi	41108c <wcrtomb@plt+0xe81c>  // b.pmore
  411058:	mov	w20, #0x1                   	// #1
  41105c:	cmp	w20, #0x100
  411060:	b.eq	411094 <wcrtomb@plt+0xe824>  // b.none
  411064:	sub	w8, w20, #0x1
  411068:	add	x0, sp, #0x10
  41106c:	sub	x1, x29, #0x4
  411070:	strb	wzr, [sp, #17]
  411074:	sturb	w20, [x29, #-4]
  411078:	strb	w8, [sp, #16]
  41107c:	sturb	wzr, [x29, #-3]
  411080:	bl	402760 <strcoll@plt>
  411084:	add	w20, w20, #0x1
  411088:	tbnz	w0, #31, 41105c <wcrtomb@plt+0xe7ec>
  41108c:	mov	w8, wzr
  411090:	b	411098 <wcrtomb@plt+0xe828>
  411094:	mov	w8, #0x1                   	// #1
  411098:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  41109c:	add	x1, x1, #0x7ae
  4110a0:	sub	x0, x29, #0x4
  4110a4:	add	x3, sp, #0x10
  4110a8:	mov	w2, #0x2                   	// #2
  4110ac:	strb	w8, [x19, #1]
  4110b0:	str	xzr, [sp, #16]
  4110b4:	bl	417eb0 <wcrtomb@plt+0x15640>
  4110b8:	ldur	w8, [x29, #-4]
  4110bc:	cmp	x0, #0x2
  4110c0:	cset	w9, eq  // eq = none
  4110c4:	mov	x20, xzr
  4110c8:	cmp	w8, #0x100
  4110cc:	cset	w8, eq  // eq = none
  4110d0:	and	w8, w9, w8
  4110d4:	strb	w8, [x19, #2]
  4110d8:	add	x19, x19, #0x104
  4110dc:	sub	x0, x29, #0x4
  4110e0:	add	x1, sp, #0xc
  4110e4:	add	x3, sp, #0x10
  4110e8:	mov	w2, #0x1                   	// #1
  4110ec:	strb	w20, [sp, #12]
  4110f0:	str	xzr, [sp, #16]
  4110f4:	bl	417eb0 <wcrtomb@plt+0x15640>
  4110f8:	add	x8, x19, x20
  4110fc:	cmp	x0, #0x2
  411100:	sub	x8, x8, #0x101
  411104:	csinc	w9, w0, wzr, cs  // cs = hs, nlast
  411108:	strb	w9, [x8]
  41110c:	ldur	w8, [x29, #-4]
  411110:	csinv	w8, w8, wzr, cc  // cc = lo, ul, last
  411114:	str	w8, [x19, x20, lsl #2]
  411118:	add	x20, x20, #0x1
  41111c:	cmp	x20, #0x100
  411120:	b.ne	4110dc <wcrtomb@plt+0xe86c>  // b.any
  411124:	ldp	x20, x19, [sp, #48]
  411128:	ldp	x29, x30, [sp, #32]
  41112c:	add	sp, sp, #0x40
  411130:	ret
  411134:	stp	x29, x30, [sp, #-80]!
  411138:	stp	x26, x25, [sp, #16]
  41113c:	stp	x24, x23, [sp, #32]
  411140:	stp	x22, x21, [sp, #48]
  411144:	stp	x20, x19, [sp, #64]
  411148:	mov	x29, sp
  41114c:	mov	x19, x1
  411150:	mov	w20, w0
  411154:	bl	402780 <towupper@plt>
  411158:	mov	w21, w0
  41115c:	bl	402810 <towlower@plt>
  411160:	cmp	w21, w20
  411164:	mov	w22, w0
  411168:	b.ne	41117c <wcrtomb@plt+0xe90c>  // b.any
  41116c:	mov	w23, wzr
  411170:	cmp	w22, w21
  411174:	b.ne	41118c <wcrtomb@plt+0xe91c>  // b.any
  411178:	b	4111b0 <wcrtomb@plt+0xe940>
  41117c:	mov	w23, #0x1                   	// #1
  411180:	str	w21, [x19]
  411184:	cmp	w22, w21
  411188:	b.eq	4111b0 <wcrtomb@plt+0xe940>  // b.none
  41118c:	cmp	w22, w20
  411190:	b.eq	4111b0 <wcrtomb@plt+0xe940>  // b.none
  411194:	mov	w0, w22
  411198:	bl	402780 <towupper@plt>
  41119c:	cmp	w0, w21
  4111a0:	b.ne	4111b0 <wcrtomb@plt+0xe940>  // b.any
  4111a4:	add	w8, w23, #0x1
  4111a8:	str	w22, [x19, w23, uxtw #2]
  4111ac:	mov	w23, w8
  4111b0:	adrp	x26, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4111b4:	mov	x25, xzr
  4111b8:	add	x26, x26, #0x788
  4111bc:	b	4111cc <wcrtomb@plt+0xe95c>
  4111c0:	add	x25, x25, #0x2
  4111c4:	cmp	x25, #0x26
  4111c8:	b.eq	411208 <wcrtomb@plt+0xe998>  // b.none
  4111cc:	ldrsh	w24, [x26, x25]
  4111d0:	cmp	w24, w20
  4111d4:	b.eq	4111c0 <wcrtomb@plt+0xe950>  // b.none
  4111d8:	cmp	w22, w24
  4111dc:	b.eq	4111c0 <wcrtomb@plt+0xe950>  // b.none
  4111e0:	cmp	w21, w24
  4111e4:	b.eq	4111c0 <wcrtomb@plt+0xe950>  // b.none
  4111e8:	mov	w0, w24
  4111ec:	bl	402780 <towupper@plt>
  4111f0:	cmp	w0, w21
  4111f4:	b.ne	4111c0 <wcrtomb@plt+0xe950>  // b.any
  4111f8:	add	w8, w23, #0x1
  4111fc:	str	w24, [x19, w23, sxtw #2]
  411200:	mov	w23, w8
  411204:	b	4111c0 <wcrtomb@plt+0xe950>
  411208:	mov	w0, w23
  41120c:	ldp	x20, x19, [sp, #64]
  411210:	ldp	x22, x21, [sp, #48]
  411214:	ldp	x24, x23, [sp, #32]
  411218:	ldp	x26, x25, [sp, #16]
  41121c:	ldp	x29, x30, [sp], #80
  411220:	ret
  411224:	stp	x29, x30, [sp, #-32]!
  411228:	str	x19, [sp, #16]
  41122c:	mov	x29, sp
  411230:	mov	x19, x0
  411234:	bl	427960 <_obstack_memory_used@@Base+0xf6d0>
  411238:	ldrb	w8, [x0]
  41123c:	cmp	w8, #0x0
  411240:	csel	x19, x19, x0, eq  // eq = none
  411244:	mov	x0, x19
  411248:	bl	4279ac <_obstack_memory_used@@Base+0xf71c>
  41124c:	ldrb	w8, [x19, x0]
  411250:	strb	wzr, [x19, x0]
  411254:	ldr	x19, [sp, #16]
  411258:	cmp	w8, #0x0
  41125c:	cset	w0, ne  // ne = any
  411260:	ldp	x29, x30, [sp], #32
  411264:	ret
  411268:	stp	x29, x30, [sp, #-32]!
  41126c:	stp	x20, x19, [sp, #16]
  411270:	mov	x20, x0
  411274:	mov	w0, #0x10                  	// #16
  411278:	mov	x29, sp
  41127c:	mov	x19, x1
  411280:	bl	4155d4 <wcrtomb@plt+0x12d64>
  411284:	ldr	x8, [x20, #8]
  411288:	stp	x8, x19, [x0]
  41128c:	str	x0, [x20, #8]
  411290:	ldp	x20, x19, [sp, #16]
  411294:	ldp	x29, x30, [sp], #32
  411298:	ret
  41129c:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4112a0:	add	x9, x9, #0x7b1
  4112a4:	b	4112ac <wcrtomb@plt+0xea3c>
  4112a8:	tbnz	w1, #27, 411308 <wcrtomb@plt+0xea98>
  4112ac:	ldrb	w10, [x0], #1
  4112b0:	mov	w8, #0x1                   	// #1
  4112b4:	cmp	w10, #0x7d
  4112b8:	b.hi	4112ac <wcrtomb@plt+0xea3c>  // b.pmore
  4112bc:	adr	x11, 4112a8 <wcrtomb@plt+0xea38>
  4112c0:	ldrb	w12, [x9, x10]
  4112c4:	add	x11, x11, x12, lsl #2
  4112c8:	br	x11
  4112cc:	tbz	w1, #5, 4112ac <wcrtomb@plt+0xea3c>
  4112d0:	ldrb	w8, [x0]
  4112d4:	cmp	w8, #0x28
  4112d8:	b.ne	4112ac <wcrtomb@plt+0xea3c>  // b.any
  4112dc:	b	411308 <wcrtomb@plt+0xea98>
  4112e0:	tbnz	w1, #27, 4112ac <wcrtomb@plt+0xea3c>
  4112e4:	tbnz	w1, #1, 4112fc <wcrtomb@plt+0xea8c>
  4112e8:	ldrb	w8, [x0]
  4112ec:	cmp	w8, #0x0
  4112f0:	cset	w8, ne  // ne = any
  4112f4:	add	x0, x0, x8
  4112f8:	b	4112ac <wcrtomb@plt+0xea3c>
  4112fc:	mov	w8, wzr
  411300:	add	x0, x0, x8
  411304:	b	4112ac <wcrtomb@plt+0xea3c>
  411308:	mov	w0, #0x1                   	// #1
  41130c:	ret
  411310:	mov	w8, wzr
  411314:	mov	w0, w8
  411318:	ret
  41131c:	mov	w0, #0x10                  	// #16
  411320:	b	4157cc <wcrtomb@plt+0x12f5c>
  411324:	stp	x29, x30, [sp, #-64]!
  411328:	stp	x22, x21, [sp, #32]
  41132c:	stp	x20, x19, [sp, #48]
  411330:	ldr	x21, [x0]
  411334:	mov	x19, x0
  411338:	str	x23, [sp, #16]
  41133c:	mov	x29, sp
  411340:	cbnz	x21, 411390 <wcrtomb@plt+0xeb20>
  411344:	ldr	x20, [x19, #8]
  411348:	cbz	x20, 411364 <wcrtomb@plt+0xeaf4>
  41134c:	ldp	x21, x0, [x20]
  411350:	bl	402620 <free@plt>
  411354:	mov	x0, x20
  411358:	bl	402620 <free@plt>
  41135c:	mov	x20, x21
  411360:	cbnz	x21, 41134c <wcrtomb@plt+0xeadc>
  411364:	mov	x0, x19
  411368:	ldp	x20, x19, [sp, #48]
  41136c:	ldp	x22, x21, [sp, #32]
  411370:	ldr	x23, [sp, #16]
  411374:	ldp	x29, x30, [sp], #64
  411378:	b	402620 <free@plt>
  41137c:	ldr	x0, [x20, #16]
  411380:	bl	41259c <wcrtomb@plt+0xfd2c>
  411384:	mov	x0, x20
  411388:	bl	402620 <free@plt>
  41138c:	cbz	x21, 411344 <wcrtomb@plt+0xead4>
  411390:	mov	x20, x21
  411394:	ldr	w8, [x21, #8]
  411398:	ldr	x21, [x21]
  41139c:	cbz	w8, 41137c <wcrtomb@plt+0xeb0c>
  4113a0:	cmp	w8, #0x1
  4113a4:	b.ne	411384 <wcrtomb@plt+0xeb14>  // b.any
  4113a8:	ldr	x8, [x20, #32]
  4113ac:	ldr	x0, [x20, #16]
  4113b0:	cbz	x8, 4113f0 <wcrtomb@plt+0xeb80>
  4113b4:	mov	x22, xzr
  4113b8:	mov	x23, xzr
  4113bc:	b	4113d0 <wcrtomb@plt+0xeb60>
  4113c0:	add	x23, x23, #0x1
  4113c4:	cmp	x23, x8
  4113c8:	add	x22, x22, #0x48
  4113cc:	b.cs	4113f0 <wcrtomb@plt+0xeb80>  // b.hs, b.nlast
  4113d0:	add	x9, x0, x22
  4113d4:	ldrb	w10, [x9, #3]
  4113d8:	tbz	w10, #3, 4113c0 <wcrtomb@plt+0xeb50>
  4113dc:	add	x0, x9, #0x8
  4113e0:	bl	419d18 <_obstack_memory_used@@Base+0x1a88>
  4113e4:	ldr	x8, [x20, #32]
  4113e8:	ldr	x0, [x20, #16]
  4113ec:	b	4113c0 <wcrtomb@plt+0xeb50>
  4113f0:	bl	402620 <free@plt>
  4113f4:	b	411384 <wcrtomb@plt+0xeb14>
  4113f8:	stp	x29, x30, [sp, #-48]!
  4113fc:	adrp	x8, 402000 <mbrtowc@plt-0x200>
  411400:	adrp	x9, 411000 <wcrtomb@plt+0xe790>
  411404:	add	x8, x8, #0x660
  411408:	add	x9, x9, #0x49c
  41140c:	tst	w2, #0x10000000
  411410:	stp	x22, x21, [sp, #16]
  411414:	csel	x22, x9, x8, eq  // eq = none
  411418:	stp	x20, x19, [sp, #32]
  41141c:	mov	x29, sp
  411420:	mov	w19, w2
  411424:	mov	x21, x1
  411428:	mov	x20, x0
  41142c:	blr	x22
  411430:	cmp	w0, #0x0
  411434:	cset	w8, eq  // eq = none
  411438:	tbnz	w19, #30, 411488 <wcrtomb@plt+0xec18>
  41143c:	ldrb	w9, [x21]
  411440:	cbz	w9, 411488 <wcrtomb@plt+0xec18>
  411444:	cbz	w0, 411488 <wcrtomb@plt+0xec18>
  411448:	add	x21, x21, #0x1
  41144c:	and	w9, w9, #0xff
  411450:	cmp	w9, #0x2f
  411454:	b.ne	41147c <wcrtomb@plt+0xec0c>  // b.any
  411458:	ldrb	w9, [x21]
  41145c:	cmp	w9, #0x2f
  411460:	b.eq	41147c <wcrtomb@plt+0xec0c>  // b.none
  411464:	mov	x0, x20
  411468:	mov	x1, x21
  41146c:	mov	w2, w19
  411470:	blr	x22
  411474:	cmp	w0, #0x0
  411478:	cset	w8, eq  // eq = none
  41147c:	ldrb	w9, [x21], #1
  411480:	cbz	w9, 411488 <wcrtomb@plt+0xec18>
  411484:	tbz	w8, #0, 41144c <wcrtomb@plt+0xebdc>
  411488:	ldp	x20, x19, [sp, #32]
  41148c:	ldp	x22, x21, [sp, #16]
  411490:	and	w0, w8, #0x1
  411494:	ldp	x29, x30, [sp], #48
  411498:	ret
  41149c:	stp	x29, x30, [sp, #-64]!
  4114a0:	stp	x20, x19, [sp, #48]
  4114a4:	mov	x20, x1
  4114a8:	mov	x19, x0
  4114ac:	str	x23, [sp, #16]
  4114b0:	stp	x22, x21, [sp, #32]
  4114b4:	mov	x29, sp
  4114b8:	tbnz	w2, #3, 4114dc <wcrtomb@plt+0xec6c>
  4114bc:	mov	x0, x19
  4114c0:	mov	x1, x20
  4114c4:	tbz	w2, #4, 41154c <wcrtomb@plt+0xecdc>
  4114c8:	ldp	x20, x19, [sp, #48]
  4114cc:	ldp	x22, x21, [sp, #32]
  4114d0:	ldr	x23, [sp, #16]
  4114d4:	ldp	x29, x30, [sp], #64
  4114d8:	b	412f74 <wcrtomb@plt+0x10704>
  4114dc:	tbz	w2, #4, 411560 <wcrtomb@plt+0xecf0>
  4114e0:	mov	x0, x20
  4114e4:	bl	415858 <wcrtomb@plt+0x12fe8>
  4114e8:	mov	w1, #0x2f                  	// #47
  4114ec:	mov	x20, x0
  4114f0:	mov	w23, #0x2f                  	// #47
  4114f4:	bl	402640 <strchr@plt>
  4114f8:	cbz	x0, 411530 <wcrtomb@plt+0xecc0>
  4114fc:	mov	x22, x0
  411500:	mov	x0, x19
  411504:	mov	x1, x20
  411508:	strb	wzr, [x22]
  41150c:	bl	412f74 <wcrtomb@plt+0x10704>
  411510:	cmp	w0, #0x1
  411514:	b.lt	41153c <wcrtomb@plt+0xeccc>  // b.tstop
  411518:	strb	w23, [x22], #1
  41151c:	mov	w1, #0x2f                  	// #47
  411520:	mov	x0, x22
  411524:	bl	402640 <strchr@plt>
  411528:	mov	x22, x0
  41152c:	cbnz	x0, 411500 <wcrtomb@plt+0xec90>
  411530:	mov	x0, x19
  411534:	mov	x1, x20
  411538:	bl	412f74 <wcrtomb@plt+0x10704>
  41153c:	mov	w21, w0
  411540:	mov	x0, x20
  411544:	bl	402620 <free@plt>
  411548:	b	411590 <wcrtomb@plt+0xed20>
  41154c:	ldp	x20, x19, [sp, #48]
  411550:	ldp	x22, x21, [sp, #32]
  411554:	ldr	x23, [sp, #16]
  411558:	ldp	x29, x30, [sp], #64
  41155c:	b	402600 <strcmp@plt>
  411560:	mov	x0, x19
  411564:	bl	402270 <strlen@plt>
  411568:	mov	x22, x0
  41156c:	mov	x0, x19
  411570:	mov	x1, x20
  411574:	mov	x2, x22
  411578:	bl	402420 <strncmp@plt>
  41157c:	mov	w21, w0
  411580:	cbnz	w0, 411590 <wcrtomb@plt+0xed20>
  411584:	ldrb	w8, [x20, x22]
  411588:	cmp	w8, #0x2f
  41158c:	csel	w21, wzr, w8, eq  // eq = none
  411590:	mov	w0, w21
  411594:	ldp	x20, x19, [sp, #48]
  411598:	ldp	x22, x21, [sp, #32]
  41159c:	ldr	x23, [sp, #16]
  4115a0:	ldp	x29, x30, [sp], #64
  4115a4:	ret
  4115a8:	sub	sp, sp, #0x70
  4115ac:	stp	x29, x30, [sp, #16]
  4115b0:	stp	x28, x27, [sp, #32]
  4115b4:	stp	x26, x25, [sp, #48]
  4115b8:	stp	x24, x23, [sp, #64]
  4115bc:	stp	x22, x21, [sp, #80]
  4115c0:	stp	x20, x19, [sp, #96]
  4115c4:	ldr	x8, [x0]
  4115c8:	add	x29, sp, #0x10
  4115cc:	cbz	x8, 411780 <wcrtomb@plt+0xef10>
  4115d0:	mov	x20, x1
  4115d4:	mov	x19, xzr
  4115d8:	add	x9, x1, #0x1
  4115dc:	mov	w26, #0x48                  	// #72
  4115e0:	str	x9, [sp, #8]
  4115e4:	mov	x24, x8
  4115e8:	ldr	w8, [x8, #8]
  4115ec:	cbz	w8, 4116c4 <wcrtomb@plt+0xee54>
  4115f0:	ldr	x25, [x24, #32]
  4115f4:	cbz	x25, 41174c <wcrtomb@plt+0xeedc>
  4115f8:	ldr	x27, [x24, #16]
  4115fc:	mov	x28, xzr
  411600:	b	411628 <wcrtomb@plt+0xedb8>
  411604:	mov	x1, x20
  411608:	mov	x2, xzr
  41160c:	mov	x3, xzr
  411610:	mov	w4, wzr
  411614:	bl	419f28 <_obstack_memory_used@@Base+0x1c98>
  411618:	cbz	w0, 41175c <wcrtomb@plt+0xeeec>
  41161c:	add	x28, x28, #0x1
  411620:	cmp	x28, x25
  411624:	b.eq	41174c <wcrtomb@plt+0xeedc>  // b.none
  411628:	madd	x0, x28, x26, x27
  41162c:	ldr	w21, [x0], #8
  411630:	tbnz	w21, #27, 411604 <wcrtomb@plt+0xed94>
  411634:	ldr	x22, [x0]
  411638:	adrp	x8, 402000 <mbrtowc@plt-0x200>
  41163c:	adrp	x9, 411000 <wcrtomb@plt+0xe790>
  411640:	tst	w21, #0x10000000
  411644:	add	x8, x8, #0x660
  411648:	add	x9, x9, #0x49c
  41164c:	csel	x26, x9, x8, eq  // eq = none
  411650:	mov	x0, x22
  411654:	mov	x1, x20
  411658:	mov	w2, w21
  41165c:	blr	x26
  411660:	cmp	w0, #0x0
  411664:	cset	w8, eq  // eq = none
  411668:	tbnz	w21, #30, 4116b8 <wcrtomb@plt+0xee48>
  41166c:	ldrb	w9, [x20]
  411670:	cbz	w9, 4116b8 <wcrtomb@plt+0xee48>
  411674:	cbz	w0, 4116b8 <wcrtomb@plt+0xee48>
  411678:	ldr	x23, [sp, #8]
  41167c:	and	w9, w9, #0xff
  411680:	cmp	w9, #0x2f
  411684:	b.ne	4116ac <wcrtomb@plt+0xee3c>  // b.any
  411688:	ldrb	w9, [x23]
  41168c:	cmp	w9, #0x2f
  411690:	b.eq	4116ac <wcrtomb@plt+0xee3c>  // b.none
  411694:	mov	x0, x22
  411698:	mov	x1, x23
  41169c:	mov	w2, w21
  4116a0:	blr	x26
  4116a4:	cmp	w0, #0x0
  4116a8:	cset	w8, eq  // eq = none
  4116ac:	ldrb	w9, [x23], #1
  4116b0:	cbz	w9, 4116b8 <wcrtomb@plt+0xee48>
  4116b4:	tbz	w8, #0, 41167c <wcrtomb@plt+0xee0c>
  4116b8:	mov	w26, #0x48                  	// #72
  4116bc:	tbz	w8, #0, 41161c <wcrtomb@plt+0xedac>
  4116c0:	b	41175c <wcrtomb@plt+0xeeec>
  4116c4:	cbnz	x19, 4116dc <wcrtomb@plt+0xee6c>
  4116c8:	mov	x0, x20
  4116cc:	bl	402270 <strlen@plt>
  4116d0:	add	x0, x0, #0x1
  4116d4:	bl	4155d4 <wcrtomb@plt+0x12d64>
  4116d8:	mov	x19, x0
  4116dc:	ldr	w23, [x24, #12]
  4116e0:	ldr	x21, [x24, #16]
  4116e4:	mov	x22, x20
  4116e8:	mov	x0, x19
  4116ec:	mov	x1, x22
  4116f0:	bl	402690 <strcpy@plt>
  4116f4:	mov	x0, x21
  4116f8:	mov	x1, x19
  4116fc:	bl	412018 <wcrtomb@plt+0xf7a8>
  411700:	cbnz	x0, 41175c <wcrtomb@plt+0xeeec>
  411704:	tbnz	w23, #3, 411724 <wcrtomb@plt+0xeeb4>
  411708:	tbnz	w23, #30, 41174c <wcrtomb@plt+0xeedc>
  41170c:	mov	w1, #0x2f                  	// #47
  411710:	mov	x0, x22
  411714:	bl	402640 <strchr@plt>
  411718:	add	x22, x0, #0x1
  41171c:	cbnz	x0, 4116e8 <wcrtomb@plt+0xee78>
  411720:	b	41174c <wcrtomb@plt+0xeedc>
  411724:	mov	w1, #0x2f                  	// #47
  411728:	mov	x0, x19
  41172c:	bl	402510 <strrchr@plt>
  411730:	cbz	x0, 411708 <wcrtomb@plt+0xee98>
  411734:	strb	wzr, [x0]
  411738:	mov	x0, x21
  41173c:	mov	x1, x19
  411740:	bl	412018 <wcrtomb@plt+0xf7a8>
  411744:	cbz	x0, 411724 <wcrtomb@plt+0xeeb4>
  411748:	b	41175c <wcrtomb@plt+0xeeec>
  41174c:	ldr	x8, [x24]
  411750:	cbnz	x8, 4115e4 <wcrtomb@plt+0xed74>
  411754:	mov	w20, #0x1                   	// #1
  411758:	b	411760 <wcrtomb@plt+0xeef0>
  41175c:	mov	w20, wzr
  411760:	mov	x0, x19
  411764:	bl	402620 <free@plt>
  411768:	ldr	w8, [x24, #12]
  41176c:	mov	w9, #0x1                   	// #1
  411770:	bic	w8, w9, w8, lsr #29
  411774:	cmp	w20, w8
  411778:	cset	w0, ne  // ne = any
  41177c:	b	411784 <wcrtomb@plt+0xef14>
  411780:	mov	w0, wzr
  411784:	ldp	x20, x19, [sp, #96]
  411788:	ldp	x22, x21, [sp, #80]
  41178c:	ldp	x24, x23, [sp, #64]
  411790:	ldp	x26, x25, [sp, #48]
  411794:	ldp	x28, x27, [sp, #32]
  411798:	ldp	x29, x30, [sp, #16]
  41179c:	add	sp, sp, #0x70
  4117a0:	ret
  4117a4:	stp	x29, x30, [sp, #-80]!
  4117a8:	stp	x22, x21, [sp, #48]
  4117ac:	stp	x20, x19, [sp, #64]
  4117b0:	mov	w21, w2
  4117b4:	mov	x19, x1
  4117b8:	tst	w2, #0x18000000
  4117bc:	mov	x22, x0
  4117c0:	stp	x26, x25, [sp, #16]
  4117c4:	stp	x24, x23, [sp, #32]
  4117c8:	mov	x29, sp
  4117cc:	b.eq	411858 <wcrtomb@plt+0xefe8>  // b.none
  4117d0:	mov	x0, x19
  4117d4:	mov	w1, w21
  4117d8:	bl	41129c <wcrtomb@plt+0xea2c>
  4117dc:	tbz	w0, #0, 411858 <wcrtomb@plt+0xefe8>
  4117e0:	ldr	x20, [x22]
  4117e4:	cbz	x20, 411800 <wcrtomb@plt+0xef90>
  4117e8:	ldr	w8, [x20, #8]
  4117ec:	cmp	w8, #0x1
  4117f0:	b.ne	411800 <wcrtomb@plt+0xef90>  // b.any
  4117f4:	ldr	w8, [x20, #12]
  4117f8:	eor	w8, w8, w21
  4117fc:	tbz	w8, #29, 411820 <wcrtomb@plt+0xefb0>
  411800:	mov	w0, #0x28                  	// #40
  411804:	bl	4157cc <wcrtomb@plt+0x12f5c>
  411808:	mov	w8, #0x1                   	// #1
  41180c:	stp	w8, w21, [x0, #8]
  411810:	ldr	x8, [x22]
  411814:	mov	x20, x0
  411818:	str	x8, [x0]
  41181c:	str	x0, [x22]
  411820:	ldp	x8, x24, [x20, #24]
  411824:	cmp	x24, x8
  411828:	b.ne	41197c <wcrtomb@plt+0xf10c>  // b.any
  41182c:	ldr	x0, [x20, #16]
  411830:	cbz	x0, 411984 <wcrtomb@plt+0xf114>
  411834:	mov	x8, #0xf684                	// #63108
  411838:	movk	x8, #0xda12, lsl #16
  41183c:	movk	x8, #0x684b, lsl #32
  411840:	movk	x8, #0x12f, lsl #48
  411844:	cmp	x24, x8
  411848:	b.cs	4119a0 <wcrtomb@plt+0xf130>  // b.hs, b.nlast
  41184c:	add	x8, x24, x24, lsr #1
  411850:	add	x24, x8, #0x1
  411854:	b	4119a8 <wcrtomb@plt+0xf138>
  411858:	ldr	x20, [x22]
  41185c:	cbz	x20, 411880 <wcrtomb@plt+0xf010>
  411860:	ldr	w8, [x20, #8]
  411864:	cbnz	w8, 411880 <wcrtomb@plt+0xf010>
  411868:	ldr	w8, [x20, #12]
  41186c:	mov	w9, #0x18                  	// #24
  411870:	movk	w9, #0x6000, lsl #16
  411874:	eor	w8, w8, w21
  411878:	tst	w8, w9
  41187c:	b.eq	4118e0 <wcrtomb@plt+0xf070>  // b.none
  411880:	mov	w0, #0x28                  	// #40
  411884:	bl	4157cc <wcrtomb@plt+0x12f5c>
  411888:	adrp	x8, 411000 <wcrtomb@plt+0xe790>
  41188c:	adrp	x9, 411000 <wcrtomb@plt+0xe790>
  411890:	adrp	x10, 411000 <wcrtomb@plt+0xe790>
  411894:	adrp	x11, 411000 <wcrtomb@plt+0xe790>
  411898:	add	x8, x8, #0xe20
  41189c:	add	x9, x9, #0xd70
  4118a0:	tst	w21, #0x10
  4118a4:	add	x10, x10, #0xe40
  4118a8:	add	x11, x11, #0xe24
  4118ac:	adrp	x4, 411000 <wcrtomb@plt+0xe790>
  4118b0:	mov	x20, x0
  4118b4:	stp	wzr, w21, [x0, #8]
  4118b8:	csel	x2, x9, x8, ne  // ne = any
  4118bc:	csel	x3, x11, x10, ne  // ne = any
  4118c0:	add	x4, x4, #0xe5c
  4118c4:	mov	x0, xzr
  4118c8:	mov	x1, xzr
  4118cc:	bl	4122f0 <wcrtomb@plt+0xfa80>
  4118d0:	str	x0, [x20, #16]
  4118d4:	ldr	x8, [x22]
  4118d8:	str	x8, [x20]
  4118dc:	str	x20, [x22]
  4118e0:	mov	x0, x19
  4118e4:	bl	415858 <wcrtomb@plt+0x12fe8>
  4118e8:	mov	w8, #0x2                   	// #2
  4118ec:	movk	w8, #0x1000, lsl #16
  4118f0:	and	w8, w21, w8
  4118f4:	mov	w9, #0x10000000            	// #268435456
  4118f8:	cmp	w8, w9
  4118fc:	mov	x19, x0
  411900:	b.ne	41194c <wcrtomb@plt+0xf0dc>  // b.any
  411904:	mov	x8, x19
  411908:	mov	x9, x19
  41190c:	b	411938 <wcrtomb@plt+0xf0c8>
  411910:	mov	x10, x9
  411914:	ldrb	w11, [x10, #1]!
  411918:	cmp	w11, #0x0
  41191c:	csel	x10, x9, x10, eq  // eq = none
  411920:	ldrb	w10, [x10]
  411924:	cset	w11, ne  // ne = any
  411928:	add	x9, x9, x11
  41192c:	add	x9, x9, #0x1
  411930:	strb	w10, [x8], #1
  411934:	cbz	w10, 41194c <wcrtomb@plt+0xf0dc>
  411938:	ldrb	w10, [x9]
  41193c:	cmp	w10, #0x5c
  411940:	b.eq	411910 <wcrtomb@plt+0xf0a0>  // b.none
  411944:	mov	w11, wzr
  411948:	b	411928 <wcrtomb@plt+0xf0b8>
  41194c:	ldr	x0, [x20, #16]
  411950:	mov	x1, x19
  411954:	bl	412d04 <wcrtomb@plt+0x10494>
  411958:	cmp	x0, x19
  41195c:	b.eq	411ad4 <wcrtomb@plt+0xf264>  // b.none
  411960:	mov	x0, x19
  411964:	ldp	x20, x19, [sp, #64]
  411968:	ldp	x22, x21, [sp, #48]
  41196c:	ldp	x24, x23, [sp, #32]
  411970:	ldp	x26, x25, [sp, #16]
  411974:	ldp	x29, x30, [sp], #80
  411978:	b	402620 <free@plt>
  41197c:	ldr	x23, [x20, #16]
  411980:	b	4119c4 <wcrtomb@plt+0xf154>
  411984:	cbz	x24, 4119a4 <wcrtomb@plt+0xf134>
  411988:	mov	x8, #0x71c8                	// #29128
  41198c:	movk	x8, #0xc71c, lsl #16
  411990:	movk	x8, #0x1c71, lsl #32
  411994:	movk	x8, #0x1c7, lsl #48
  411998:	cmp	x24, x8
  41199c:	b.cc	4119a8 <wcrtomb@plt+0xf138>  // b.lo, b.ul, b.last
  4119a0:	bl	415898 <wcrtomb@plt+0x13028>
  4119a4:	mov	w24, #0x1                   	// #1
  4119a8:	add	x8, x24, x24, lsl #3
  4119ac:	lsl	x1, x8, #3
  4119b0:	str	x24, [x20, #24]
  4119b4:	bl	415654 <wcrtomb@plt+0x12de4>
  4119b8:	ldr	x24, [x20, #32]
  4119bc:	mov	x23, x0
  4119c0:	str	x0, [x20, #16]
  4119c4:	mov	w8, #0x48                  	// #72
  4119c8:	add	x25, x24, #0x1
  4119cc:	mul	x8, x24, x8
  4119d0:	str	x25, [x20, #32]
  4119d4:	str	w21, [x23, x8]
  4119d8:	tbnz	w21, #27, 411a10 <wcrtomb@plt+0xf1a0>
  4119dc:	tbz	w21, #26, 411a00 <wcrtomb@plt+0xf190>
  4119e0:	mov	x0, x19
  4119e4:	bl	415858 <wcrtomb@plt+0x12fe8>
  4119e8:	mov	x19, x0
  4119ec:	mov	w0, #0x10                  	// #16
  4119f0:	bl	4155d4 <wcrtomb@plt+0x12d64>
  4119f4:	ldr	x8, [x22, #8]
  4119f8:	stp	x8, x19, [x0]
  4119fc:	str	x0, [x22, #8]
  411a00:	mov	w8, #0x48                  	// #72
  411a04:	madd	x8, x24, x8, x23
  411a08:	str	x19, [x8, #8]
  411a0c:	b	411ad4 <wcrtomb@plt+0xf264>
  411a10:	lsr	w8, w21, #3
  411a14:	and	w8, w8, #0x2
  411a18:	mov	w9, #0x9                   	// #9
  411a1c:	orr	w22, w8, w9
  411a20:	tbnz	w21, #3, 411a48 <wcrtomb@plt+0xf1d8>
  411a24:	mov	w8, #0x48                  	// #72
  411a28:	madd	x8, x24, x8, x23
  411a2c:	add	x0, x8, #0x8
  411a30:	mov	x1, x19
  411a34:	mov	w2, w22
  411a38:	bl	419b8c <_obstack_memory_used@@Base+0x18fc>
  411a3c:	mov	w19, w0
  411a40:	cbnz	w19, 411ac8 <wcrtomb@plt+0xf258>
  411a44:	b	411ad4 <wcrtomb@plt+0xf264>
  411a48:	mov	x0, x19
  411a4c:	bl	402270 <strlen@plt>
  411a50:	sub	x8, x19, #0x1
  411a54:	cbz	x0, 411acc <wcrtomb@plt+0xf25c>
  411a58:	ldrb	w9, [x8, x0]
  411a5c:	sub	x26, x0, #0x1
  411a60:	mov	x0, x26
  411a64:	cmp	w9, #0x2f
  411a68:	b.eq	411a54 <wcrtomb@plt+0xf1e4>  // b.none
  411a6c:	add	x0, x26, #0x8
  411a70:	bl	4155d4 <wcrtomb@plt+0x12d64>
  411a74:	add	x2, x26, #0x1
  411a78:	mov	x1, x19
  411a7c:	mov	x21, x0
  411a80:	bl	402210 <memcpy@plt>
  411a84:	mov	w9, #0x2f28                	// #12072
  411a88:	mov	w10, #0x292a                	// #10538
  411a8c:	add	x8, x21, x26
  411a90:	movk	w9, #0x2a2e, lsl #16
  411a94:	movk	w10, #0x3f, lsl #16
  411a98:	mov	w11, #0x48                  	// #72
  411a9c:	stur	w9, [x8, #1]
  411aa0:	str	w10, [x8, #4]
  411aa4:	madd	x8, x24, x11, x23
  411aa8:	add	x0, x8, #0x8
  411aac:	mov	x1, x21
  411ab0:	mov	w2, w22
  411ab4:	bl	419b8c <_obstack_memory_used@@Base+0x18fc>
  411ab8:	mov	w19, w0
  411abc:	mov	x0, x21
  411ac0:	bl	402620 <free@plt>
  411ac4:	cbz	w19, 411ad4 <wcrtomb@plt+0xf264>
  411ac8:	ldr	x25, [x20, #32]
  411acc:	sub	x8, x25, #0x1
  411ad0:	str	x8, [x20, #32]
  411ad4:	ldp	x20, x19, [sp, #64]
  411ad8:	ldp	x22, x21, [sp, #48]
  411adc:	ldp	x24, x23, [sp, #32]
  411ae0:	ldp	x26, x25, [sp, #16]
  411ae4:	ldp	x29, x30, [sp], #80
  411ae8:	ret
  411aec:	sub	sp, sp, #0x70
  411af0:	stp	x28, x27, [sp, #32]
  411af4:	stp	x26, x25, [sp, #48]
  411af8:	stp	x24, x23, [sp, #64]
  411afc:	stp	x22, x21, [sp, #80]
  411b00:	stp	x20, x19, [sp, #96]
  411b04:	mov	x19, x5
  411b08:	mov	w20, w4
  411b0c:	mov	w21, w3
  411b10:	mov	x25, x2
  411b14:	mov	x22, x1
  411b18:	mov	x23, x0
  411b1c:	mov	x27, xzr
  411b20:	mov	x24, xzr
  411b24:	stp	x29, x30, [sp, #16]
  411b28:	add	x29, sp, #0x10
  411b2c:	str	xzr, [sp, #8]
  411b30:	b	411b40 <wcrtomb@plt+0xf2d0>
  411b34:	add	x8, x27, #0x1
  411b38:	strb	w26, [x24, x27]
  411b3c:	mov	x27, x8
  411b40:	ldp	x8, x9, [x25, #8]
  411b44:	cmp	x8, x9
  411b48:	b.cs	411b78 <wcrtomb@plt+0xf308>  // b.hs, b.nlast
  411b4c:	add	x9, x8, #0x1
  411b50:	str	x9, [x25, #8]
  411b54:	ldrb	w26, [x8]
  411b58:	ldr	x8, [sp, #8]
  411b5c:	cmp	x27, x8
  411b60:	b.ne	411b34 <wcrtomb@plt+0xf2c4>  // b.any
  411b64:	add	x1, sp, #0x8
  411b68:	mov	x0, x24
  411b6c:	bl	415758 <wcrtomb@plt+0x12ee8>
  411b70:	mov	x24, x0
  411b74:	b	411b34 <wcrtomb@plt+0xf2c4>
  411b78:	mov	x0, x25
  411b7c:	bl	402830 <__uflow@plt>
  411b80:	mov	w26, w0
  411b84:	cmn	w0, #0x1
  411b88:	b.ne	411b58 <wcrtomb@plt+0xf2e8>  // b.any
  411b8c:	ldrb	w8, [x25]
  411b90:	tbnz	w8, #5, 411b9c <wcrtomb@plt+0xf32c>
  411b94:	mov	w26, wzr
  411b98:	b	411ba4 <wcrtomb@plt+0xf334>
  411b9c:	bl	4027e0 <__errno_location@plt>
  411ba0:	ldr	w26, [x0]
  411ba4:	add	x1, x27, #0x1
  411ba8:	mov	x0, x24
  411bac:	bl	415654 <wcrtomb@plt+0x12de4>
  411bb0:	mov	x24, x0
  411bb4:	strb	w20, [x0, x27]
  411bb8:	cbz	x27, 411bd0 <wcrtomb@plt+0xf360>
  411bbc:	add	x8, x24, x27
  411bc0:	ldurb	w8, [x8, #-1]
  411bc4:	cmp	w8, w20, uxtb
  411bc8:	cset	w8, ne  // ne = any
  411bcc:	b	411bd4 <wcrtomb@plt+0xf364>
  411bd0:	mov	x8, xzr
  411bd4:	add	x8, x24, x8
  411bd8:	mov	w0, #0x10                  	// #16
  411bdc:	add	x27, x8, x27
  411be0:	bl	4155d4 <wcrtomb@plt+0x12d64>
  411be4:	ldr	x8, [x22, #8]
  411be8:	cmp	x24, x27
  411bec:	stp	x8, x24, [x0]
  411bf0:	str	x0, [x22, #8]
  411bf4:	b.cs	411c6c <wcrtomb@plt+0xf3fc>  // b.hs, b.nlast
  411bf8:	and	x28, x20, #0xff
  411bfc:	mov	x25, x24
  411c00:	b	411c2c <wcrtomb@plt+0xf3bc>
  411c04:	mov	x0, x22
  411c08:	mov	x1, x25
  411c0c:	mov	w2, w21
  411c10:	mov	x3, x19
  411c14:	strb	wzr, [x9]
  411c18:	blr	x23
  411c1c:	add	x25, x24, #0x1
  411c20:	add	x24, x24, #0x1
  411c24:	cmp	x27, x24
  411c28:	b.eq	411c6c <wcrtomb@plt+0xf3fc>  // b.none
  411c2c:	ldrb	w8, [x24]
  411c30:	cmp	w8, w20, uxtb
  411c34:	b.ne	411c20 <wcrtomb@plt+0xf3b0>  // b.any
  411c38:	bl	402610 <__ctype_b_loc@plt>
  411c3c:	ldr	x8, [x0]
  411c40:	mov	x9, x24
  411c44:	ldrh	w10, [x8, x28, lsl #1]
  411c48:	tbz	w10, #13, 411c04 <wcrtomb@plt+0xf394>
  411c4c:	mov	x9, x24
  411c50:	cmp	x25, x9
  411c54:	b.eq	411c1c <wcrtomb@plt+0xf3ac>  // b.none
  411c58:	ldrb	w10, [x9, #-1]!
  411c5c:	ldrh	w10, [x8, x10, lsl #1]
  411c60:	tbnz	w10, #13, 411c50 <wcrtomb@plt+0xf3e0>
  411c64:	add	x9, x9, #0x1
  411c68:	b	411c04 <wcrtomb@plt+0xf394>
  411c6c:	bl	4027e0 <__errno_location@plt>
  411c70:	str	w26, [x0]
  411c74:	cmp	w26, #0x0
  411c78:	ldp	x20, x19, [sp, #96]
  411c7c:	ldp	x22, x21, [sp, #80]
  411c80:	ldp	x24, x23, [sp, #64]
  411c84:	ldp	x26, x25, [sp, #48]
  411c88:	ldp	x28, x27, [sp, #32]
  411c8c:	ldp	x29, x30, [sp, #16]
  411c90:	csetm	w8, ne  // ne = any
  411c94:	mov	w0, w8
  411c98:	add	sp, sp, #0x70
  411c9c:	ret
  411ca0:	sub	sp, sp, #0x40
  411ca4:	stp	x29, x30, [sp, #16]
  411ca8:	stp	x22, x21, [sp, #32]
  411cac:	stp	x20, x19, [sp, #48]
  411cb0:	str	x0, [sp, #8]
  411cb4:	ldrb	w8, [x2]
  411cb8:	mov	w19, w4
  411cbc:	mov	w20, w3
  411cc0:	mov	x21, x1
  411cc4:	cmp	w8, #0x2d
  411cc8:	add	x29, sp, #0x10
  411ccc:	b.ne	411cd8 <wcrtomb@plt+0xf468>  // b.any
  411cd0:	ldrb	w8, [x2, #1]
  411cd4:	cbz	w8, 411d30 <wcrtomb@plt+0xf4c0>
  411cd8:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  411cdc:	add	x1, x1, #0xf04
  411ce0:	mov	x0, x2
  411ce4:	bl	402370 <fopen@plt>
  411ce8:	cbz	x0, 411d28 <wcrtomb@plt+0xf4b8>
  411cec:	mov	x22, x0
  411cf0:	adrp	x0, 411000 <wcrtomb@plt+0xe790>
  411cf4:	add	x0, x0, #0xd68
  411cf8:	add	x5, sp, #0x8
  411cfc:	mov	x1, x21
  411d00:	mov	x2, x22
  411d04:	mov	w3, w20
  411d08:	mov	w4, w19
  411d0c:	bl	411aec <wcrtomb@plt+0xf27c>
  411d10:	mov	w19, w0
  411d14:	mov	x0, x22
  411d18:	bl	402340 <fclose@plt>
  411d1c:	cmp	w0, #0x0
  411d20:	csinv	w0, w19, wzr, eq  // eq = none
  411d24:	b	411d54 <wcrtomb@plt+0xf4e4>
  411d28:	mov	w0, #0xffffffff            	// #-1
  411d2c:	b	411d54 <wcrtomb@plt+0xf4e4>
  411d30:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  411d34:	ldr	x2, [x8, #1104]
  411d38:	adrp	x0, 411000 <wcrtomb@plt+0xe790>
  411d3c:	add	x0, x0, #0xd68
  411d40:	add	x5, sp, #0x8
  411d44:	mov	x1, x21
  411d48:	mov	w3, w20
  411d4c:	mov	w4, w19
  411d50:	bl	411aec <wcrtomb@plt+0xf27c>
  411d54:	ldp	x20, x19, [sp, #48]
  411d58:	ldp	x22, x21, [sp, #32]
  411d5c:	ldp	x29, x30, [sp, #16]
  411d60:	add	sp, sp, #0x40
  411d64:	ret
  411d68:	ldr	x3, [x3]
  411d6c:	br	x3
  411d70:	sub	sp, sp, #0x60
  411d74:	str	x0, [sp, #16]
  411d78:	mov	x0, sp
  411d7c:	stp	x29, x30, [sp, #64]
  411d80:	stp	x20, x19, [sp, #80]
  411d84:	add	x29, sp, #0x40
  411d88:	mov	x19, x1
  411d8c:	strb	wzr, [sp]
  411d90:	stur	xzr, [sp, #4]
  411d94:	strb	wzr, [sp, #12]
  411d98:	bl	413178 <wcrtomb@plt+0x10908>
  411d9c:	ldrb	w8, [sp, #32]
  411da0:	ldr	w0, [sp, #36]
  411da4:	cbz	w8, 411db0 <wcrtomb@plt+0xf540>
  411da8:	mov	x20, xzr
  411dac:	cbz	w0, 411e0c <wcrtomb@plt+0xf59c>
  411db0:	mov	x20, xzr
  411db4:	tst	w8, #0xff
  411db8:	b.eq	411dc8 <wcrtomb@plt+0xf558>  // b.none
  411dbc:	bl	402810 <towlower@plt>
  411dc0:	ldr	x8, [sp, #16]
  411dc4:	b	411dd0 <wcrtomb@plt+0xf560>
  411dc8:	ldr	x8, [sp, #16]
  411dcc:	ldrb	w0, [x8]
  411dd0:	ldr	x10, [sp, #24]
  411dd4:	lsl	x9, x20, #5
  411dd8:	sub	x9, x9, x20
  411ddc:	add	x9, x9, w0, uxtw
  411de0:	udiv	x11, x9, x19
  411de4:	add	x8, x8, x10
  411de8:	mov	x0, sp
  411dec:	msub	x20, x11, x19, x9
  411df0:	str	x8, [sp, #16]
  411df4:	strb	wzr, [sp, #12]
  411df8:	bl	413178 <wcrtomb@plt+0x10908>
  411dfc:	ldrb	w8, [sp, #32]
  411e00:	ldr	w0, [sp, #36]
  411e04:	cbz	w8, 411db4 <wcrtomb@plt+0xf544>
  411e08:	cbnz	w0, 411db4 <wcrtomb@plt+0xf544>
  411e0c:	mov	x0, x20
  411e10:	ldp	x20, x19, [sp, #80]
  411e14:	ldp	x29, x30, [sp, #64]
  411e18:	add	sp, sp, #0x60
  411e1c:	ret
  411e20:	b	412298 <wcrtomb@plt+0xfa28>
  411e24:	stp	x29, x30, [sp, #-16]!
  411e28:	mov	x29, sp
  411e2c:	bl	412f74 <wcrtomb@plt+0x10704>
  411e30:	cmp	w0, #0x0
  411e34:	cset	w0, eq  // eq = none
  411e38:	ldp	x29, x30, [sp], #16
  411e3c:	ret
  411e40:	stp	x29, x30, [sp, #-16]!
  411e44:	mov	x29, sp
  411e48:	bl	402600 <strcmp@plt>
  411e4c:	cmp	w0, #0x0
  411e50:	cset	w0, eq  // eq = none
  411e54:	ldp	x29, x30, [sp], #16
  411e58:	ret
  411e5c:	b	402620 <free@plt>
  411e60:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  411e64:	ldr	x0, [x8, #1112]
  411e68:	ret
  411e6c:	ldr	x0, [x0, #16]
  411e70:	ret
  411e74:	ldr	x0, [x0, #24]
  411e78:	ret
  411e7c:	ldr	x0, [x0, #32]
  411e80:	ret
  411e84:	ldp	x8, x9, [x0]
  411e88:	cmp	x8, x9
  411e8c:	b.cs	411ecc <wcrtomb@plt+0xf65c>  // b.hs, b.nlast
  411e90:	mov	x0, xzr
  411e94:	b	411ea4 <wcrtomb@plt+0xf634>
  411e98:	add	x8, x8, #0x10
  411e9c:	cmp	x8, x9
  411ea0:	b.cs	411ed0 <wcrtomb@plt+0xf660>  // b.hs, b.nlast
  411ea4:	ldr	x10, [x8]
  411ea8:	cbz	x10, 411e98 <wcrtomb@plt+0xf628>
  411eac:	mov	x10, xzr
  411eb0:	mov	x11, x8
  411eb4:	ldr	x11, [x11, #8]
  411eb8:	add	x10, x10, #0x1
  411ebc:	cbnz	x11, 411eb4 <wcrtomb@plt+0xf644>
  411ec0:	cmp	x10, x0
  411ec4:	csel	x0, x10, x0, hi  // hi = pmore
  411ec8:	b	411e98 <wcrtomb@plt+0xf628>
  411ecc:	mov	x0, xzr
  411ed0:	ret
  411ed4:	ldp	x9, x10, [x0]
  411ed8:	cmp	x9, x10
  411edc:	b.cs	411f18 <wcrtomb@plt+0xf6a8>  // b.hs, b.nlast
  411ee0:	mov	x8, xzr
  411ee4:	mov	x11, xzr
  411ee8:	b	411ef8 <wcrtomb@plt+0xf688>
  411eec:	add	x9, x9, #0x10
  411ef0:	cmp	x9, x10
  411ef4:	b.cs	411f20 <wcrtomb@plt+0xf6b0>  // b.hs, b.nlast
  411ef8:	ldr	x12, [x9]
  411efc:	cbz	x12, 411eec <wcrtomb@plt+0xf67c>
  411f00:	mov	x12, x9
  411f04:	ldr	x12, [x12, #8]
  411f08:	add	x8, x8, #0x1
  411f0c:	cbnz	x12, 411f04 <wcrtomb@plt+0xf694>
  411f10:	add	x11, x11, #0x1
  411f14:	b	411eec <wcrtomb@plt+0xf67c>
  411f18:	mov	x11, xzr
  411f1c:	mov	x8, xzr
  411f20:	ldr	x9, [x0, #24]
  411f24:	cmp	x11, x9
  411f28:	b.ne	411f40 <wcrtomb@plt+0xf6d0>  // b.any
  411f2c:	ldr	x9, [x0, #32]
  411f30:	cmp	x8, x9
  411f34:	b.ne	411f40 <wcrtomb@plt+0xf6d0>  // b.any
  411f38:	mov	w0, #0x1                   	// #1
  411f3c:	ret
  411f40:	mov	w0, wzr
  411f44:	ret
  411f48:	stp	x29, x30, [sp, #-48]!
  411f4c:	stp	x22, x21, [sp, #16]
  411f50:	stp	x20, x19, [sp, #32]
  411f54:	ldp	x8, x9, [x0]
  411f58:	ldp	x20, x2, [x0, #24]
  411f5c:	ldr	x22, [x0, #16]
  411f60:	mov	x19, x1
  411f64:	cmp	x8, x9
  411f68:	mov	x21, xzr
  411f6c:	mov	x29, sp
  411f70:	b.cc	411ff0 <wcrtomb@plt+0xf780>  // b.lo, b.ul, b.last
  411f74:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  411f78:	add	x1, x1, #0x836
  411f7c:	mov	x0, x19
  411f80:	bl	402820 <fprintf@plt>
  411f84:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  411f88:	add	x1, x1, #0x84e
  411f8c:	mov	x0, x19
  411f90:	mov	x2, x22
  411f94:	bl	402820 <fprintf@plt>
  411f98:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  411f9c:	ucvtf	d0, x20
  411fa0:	fmov	d1, x8
  411fa4:	fmul	d0, d0, d1
  411fa8:	ucvtf	d1, x22
  411fac:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  411fb0:	fdiv	d0, d0, d1
  411fb4:	add	x1, x1, #0x866
  411fb8:	mov	x0, x19
  411fbc:	mov	x2, x20
  411fc0:	bl	402820 <fprintf@plt>
  411fc4:	mov	x0, x19
  411fc8:	mov	x2, x21
  411fcc:	ldp	x20, x19, [sp, #32]
  411fd0:	ldp	x22, x21, [sp, #16]
  411fd4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  411fd8:	add	x1, x1, #0x887
  411fdc:	ldp	x29, x30, [sp], #48
  411fe0:	b	402820 <fprintf@plt>
  411fe4:	add	x8, x8, #0x10
  411fe8:	cmp	x8, x9
  411fec:	b.cs	411f74 <wcrtomb@plt+0xf704>  // b.hs, b.nlast
  411ff0:	ldr	x10, [x8]
  411ff4:	cbz	x10, 411fe4 <wcrtomb@plt+0xf774>
  411ff8:	mov	x10, xzr
  411ffc:	mov	x11, x8
  412000:	ldr	x11, [x11, #8]
  412004:	add	x10, x10, #0x1
  412008:	cbnz	x11, 412000 <wcrtomb@plt+0xf790>
  41200c:	cmp	x10, x21
  412010:	csel	x21, x10, x21, hi  // hi = pmore
  412014:	b	411fe4 <wcrtomb@plt+0xf774>
  412018:	stp	x29, x30, [sp, #-48]!
  41201c:	stp	x20, x19, [sp, #32]
  412020:	ldr	x8, [x0, #16]
  412024:	ldr	x9, [x0, #48]
  412028:	mov	x19, x0
  41202c:	mov	x20, x1
  412030:	mov	x0, x1
  412034:	mov	x1, x8
  412038:	str	x21, [sp, #16]
  41203c:	mov	x29, sp
  412040:	blr	x9
  412044:	ldr	x8, [x19, #16]
  412048:	cmp	x0, x8
  41204c:	b.cs	4120b8 <wcrtomb@plt+0xf848>  // b.hs, b.nlast
  412050:	ldr	x8, [x19]
  412054:	add	x21, x8, x0, lsl #4
  412058:	ldr	x1, [x21]
  41205c:	mov	x0, xzr
  412060:	cbz	x1, 4120a8 <wcrtomb@plt+0xf838>
  412064:	cbz	x8, 4120a8 <wcrtomb@plt+0xf838>
  412068:	cmp	x1, x20
  41206c:	b.eq	412094 <wcrtomb@plt+0xf824>  // b.none
  412070:	ldr	x8, [x19, #56]
  412074:	mov	x0, x20
  412078:	blr	x8
  41207c:	tbnz	w0, #0, 41209c <wcrtomb@plt+0xf82c>
  412080:	ldr	x21, [x21, #8]
  412084:	cbz	x21, 4120a4 <wcrtomb@plt+0xf834>
  412088:	ldr	x1, [x21]
  41208c:	cmp	x1, x20
  412090:	b.ne	412070 <wcrtomb@plt+0xf800>  // b.any
  412094:	mov	x0, x20
  412098:	b	4120a8 <wcrtomb@plt+0xf838>
  41209c:	ldr	x0, [x21]
  4120a0:	b	4120a8 <wcrtomb@plt+0xf838>
  4120a4:	mov	x0, xzr
  4120a8:	ldp	x20, x19, [sp, #32]
  4120ac:	ldr	x21, [sp, #16]
  4120b0:	ldp	x29, x30, [sp], #48
  4120b4:	ret
  4120b8:	bl	402560 <abort@plt>
  4120bc:	stp	x29, x30, [sp, #-16]!
  4120c0:	ldr	x8, [x0, #32]
  4120c4:	mov	x29, sp
  4120c8:	cbz	x8, 4120e8 <wcrtomb@plt+0xf878>
  4120cc:	ldp	x8, x9, [x0]
  4120d0:	cmp	x8, x9
  4120d4:	b.cs	4120f4 <wcrtomb@plt+0xf884>  // b.hs, b.nlast
  4120d8:	ldr	x0, [x8], #16
  4120dc:	cbz	x0, 4120d0 <wcrtomb@plt+0xf860>
  4120e0:	ldp	x29, x30, [sp], #16
  4120e4:	ret
  4120e8:	mov	x0, xzr
  4120ec:	ldp	x29, x30, [sp], #16
  4120f0:	ret
  4120f4:	bl	402560 <abort@plt>
  4120f8:	stp	x29, x30, [sp, #-32]!
  4120fc:	stp	x20, x19, [sp, #16]
  412100:	ldr	x8, [x0, #16]
  412104:	ldr	x9, [x0, #48]
  412108:	mov	x19, x0
  41210c:	mov	x20, x1
  412110:	mov	x0, x1
  412114:	mov	x1, x8
  412118:	mov	x29, sp
  41211c:	blr	x9
  412120:	ldr	x8, [x19, #16]
  412124:	cmp	x0, x8
  412128:	b.cs	412184 <wcrtomb@plt+0xf914>  // b.hs, b.nlast
  41212c:	ldr	x8, [x19]
  412130:	add	x9, x8, x0, lsl #4
  412134:	ldp	x10, x9, [x9]
  412138:	cmp	x10, x20
  41213c:	b.eq	412148 <wcrtomb@plt+0xf8d8>  // b.none
  412140:	cbnz	x9, 412134 <wcrtomb@plt+0xf8c4>
  412144:	b	412154 <wcrtomb@plt+0xf8e4>
  412148:	cbz	x9, 412154 <wcrtomb@plt+0xf8e4>
  41214c:	ldr	x0, [x9]
  412150:	b	412178 <wcrtomb@plt+0xf908>
  412154:	ldr	x9, [x19, #8]
  412158:	add	x8, x8, x0, lsl #4
  41215c:	add	x8, x8, #0x10
  412160:	cmp	x8, x9
  412164:	b.cs	412174 <wcrtomb@plt+0xf904>  // b.hs, b.nlast
  412168:	ldr	x0, [x8], #16
  41216c:	cbz	x0, 412160 <wcrtomb@plt+0xf8f0>
  412170:	b	412178 <wcrtomb@plt+0xf908>
  412174:	mov	x0, xzr
  412178:	ldp	x20, x19, [sp, #16]
  41217c:	ldp	x29, x30, [sp], #32
  412180:	ret
  412184:	bl	402560 <abort@plt>
  412188:	ldp	x9, x10, [x0]
  41218c:	cmp	x9, x10
  412190:	b.cs	4121ec <wcrtomb@plt+0xf97c>  // b.hs, b.nlast
  412194:	mov	x11, xzr
  412198:	ldr	x8, [x9]
  41219c:	cbz	x8, 4121d0 <wcrtomb@plt+0xf960>
  4121a0:	cbz	x9, 4121d0 <wcrtomb@plt+0xf960>
  4121a4:	mov	x10, x9
  4121a8:	cmp	x11, x2
  4121ac:	b.cs	4121f4 <wcrtomb@plt+0xf984>  // b.hs, b.nlast
  4121b0:	ldr	x8, [x10]
  4121b4:	str	x8, [x1, x11, lsl #3]
  4121b8:	ldr	x10, [x10, #8]
  4121bc:	add	x8, x11, #0x1
  4121c0:	mov	x11, x8
  4121c4:	cbnz	x10, 4121a8 <wcrtomb@plt+0xf938>
  4121c8:	ldr	x10, [x0, #8]
  4121cc:	b	4121d4 <wcrtomb@plt+0xf964>
  4121d0:	mov	x8, x11
  4121d4:	add	x9, x9, #0x10
  4121d8:	cmp	x9, x10
  4121dc:	mov	x11, x8
  4121e0:	b.cc	412198 <wcrtomb@plt+0xf928>  // b.lo, b.ul, b.last
  4121e4:	mov	x0, x8
  4121e8:	ret
  4121ec:	mov	x0, xzr
  4121f0:	ret
  4121f4:	mov	x0, x11
  4121f8:	ret
  4121fc:	stp	x29, x30, [sp, #-64]!
  412200:	stp	x24, x23, [sp, #16]
  412204:	stp	x22, x21, [sp, #32]
  412208:	stp	x20, x19, [sp, #48]
  41220c:	ldp	x23, x8, [x0]
  412210:	mov	x29, sp
  412214:	cmp	x23, x8
  412218:	b.cs	412230 <wcrtomb@plt+0xf9c0>  // b.hs, b.nlast
  41221c:	mov	x19, x2
  412220:	mov	x20, x0
  412224:	mov	x21, x1
  412228:	mov	x22, xzr
  41222c:	b	412248 <wcrtomb@plt+0xf9d8>
  412230:	mov	x22, xzr
  412234:	b	412280 <wcrtomb@plt+0xfa10>
  412238:	ldr	x8, [x20, #8]
  41223c:	add	x23, x23, #0x10
  412240:	cmp	x23, x8
  412244:	b.cs	412280 <wcrtomb@plt+0xfa10>  // b.hs, b.nlast
  412248:	ldr	x0, [x23]
  41224c:	cbz	x0, 41223c <wcrtomb@plt+0xf9cc>
  412250:	cbz	x23, 41223c <wcrtomb@plt+0xf9cc>
  412254:	mov	x1, x19
  412258:	blr	x21
  41225c:	tbz	w0, #0, 412280 <wcrtomb@plt+0xfa10>
  412260:	mov	x24, x23
  412264:	ldr	x24, [x24, #8]
  412268:	add	x22, x22, #0x1
  41226c:	cbz	x24, 412238 <wcrtomb@plt+0xf9c8>
  412270:	ldr	x0, [x24]
  412274:	mov	x1, x19
  412278:	blr	x21
  41227c:	tbnz	w0, #0, 412264 <wcrtomb@plt+0xf9f4>
  412280:	mov	x0, x22
  412284:	ldp	x20, x19, [sp, #48]
  412288:	ldp	x22, x21, [sp, #32]
  41228c:	ldp	x24, x23, [sp, #16]
  412290:	ldp	x29, x30, [sp], #64
  412294:	ret
  412298:	ldrb	w9, [x0]
  41229c:	cbz	w9, 4122cc <wcrtomb@plt+0xfa5c>
  4122a0:	mov	x8, x0
  4122a4:	mov	x0, xzr
  4122a8:	add	x8, x8, #0x1
  4122ac:	lsl	x10, x0, #5
  4122b0:	sub	x10, x10, x0
  4122b4:	add	x10, x10, w9, uxtb
  4122b8:	ldrb	w9, [x8], #1
  4122bc:	udiv	x11, x10, x1
  4122c0:	msub	x0, x11, x1, x10
  4122c4:	cbnz	w9, 4122ac <wcrtomb@plt+0xfa3c>
  4122c8:	ret
  4122cc:	mov	x0, xzr
  4122d0:	ret
  4122d4:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4122d8:	add	x8, x8, #0x8a0
  4122dc:	ldr	w9, [x8, #16]
  4122e0:	ldr	q0, [x8]
  4122e4:	str	w9, [x0, #16]
  4122e8:	str	q0, [x0]
  4122ec:	ret
  4122f0:	stp	x29, x30, [sp, #-64]!
  4122f4:	adrp	x8, 412000 <wcrtomb@plt+0xf790>
  4122f8:	add	x8, x8, #0x4d8
  4122fc:	cmp	x2, #0x0
  412300:	adrp	x9, 412000 <wcrtomb@plt+0xf790>
  412304:	stp	x24, x23, [sp, #16]
  412308:	stp	x22, x21, [sp, #32]
  41230c:	mov	x21, x0
  412310:	add	x9, x9, #0x4e8
  412314:	csel	x23, x8, x2, eq  // eq = none
  412318:	cmp	x3, #0x0
  41231c:	mov	w0, #0x50                  	// #80
  412320:	stp	x20, x19, [sp, #48]
  412324:	mov	x29, sp
  412328:	mov	x19, x4
  41232c:	mov	x22, x1
  412330:	csel	x24, x9, x3, eq  // eq = none
  412334:	bl	4023a0 <malloc@plt>
  412338:	mov	x20, x0
  41233c:	cbz	x0, 4124c0 <wcrtomb@plt+0xfc50>
  412340:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x11d70>
  412344:	add	x9, x9, #0x8a0
  412348:	cmp	x22, #0x0
  41234c:	csel	x8, x9, x22, eq  // eq = none
  412350:	cmp	x8, x9
  412354:	str	x8, [x20, #40]
  412358:	b.eq	4123dc <wcrtomb@plt+0xfb6c>  // b.none
  41235c:	ldr	s0, [x8, #8]
  412360:	mov	w9, #0xcccd                	// #52429
  412364:	movk	w9, #0x3dcc, lsl #16
  412368:	fmov	s1, w9
  41236c:	fcmp	s0, s1
  412370:	b.le	4124b4 <wcrtomb@plt+0xfc44>
  412374:	mov	w9, #0x6666                	// #26214
  412378:	movk	w9, #0x3f66, lsl #16
  41237c:	fmov	s1, w9
  412380:	fcmp	s0, s1
  412384:	b.pl	4124b4 <wcrtomb@plt+0xfc44>  // b.nfrst
  412388:	ldr	s1, [x8, #12]
  41238c:	mov	w9, #0xcccd                	// #52429
  412390:	movk	w9, #0x3f8c, lsl #16
  412394:	fmov	s2, w9
  412398:	fcmp	s1, s2
  41239c:	b.le	4124b4 <wcrtomb@plt+0xfc44>
  4123a0:	ldr	s1, [x8]
  4123a4:	fcmp	s1, #0.0
  4123a8:	b.lt	4124b4 <wcrtomb@plt+0xfc44>  // b.tstop
  4123ac:	mov	w9, #0xcccd                	// #52429
  4123b0:	movk	w9, #0x3dcc, lsl #16
  4123b4:	fmov	s2, w9
  4123b8:	fadd	s1, s1, s2
  4123bc:	fcmp	s1, s0
  4123c0:	b.pl	4124b4 <wcrtomb@plt+0xfc44>  // b.nfrst
  4123c4:	ldr	s0, [x8, #4]
  4123c8:	fmov	s2, #1.000000000000000000e+00
  4123cc:	fcmp	s0, s2
  4123d0:	b.hi	4124b4 <wcrtomb@plt+0xfc44>  // b.pmore
  4123d4:	fcmp	s1, s0
  4123d8:	b.pl	4124b4 <wcrtomb@plt+0xfc44>  // b.nfrst
  4123dc:	ldrb	w9, [x8, #16]
  4123e0:	cbnz	w9, 412404 <wcrtomb@plt+0xfb94>
  4123e4:	ldr	s0, [x8, #8]
  4123e8:	ucvtf	s1, x21
  4123ec:	mov	w8, #0x5f800000            	// #1602224128
  4123f0:	fdiv	s0, s1, s0
  4123f4:	fmov	s1, w8
  4123f8:	fcmp	s0, s1
  4123fc:	b.ge	4124b4 <wcrtomb@plt+0xfc44>  // b.tcont
  412400:	fcvtzu	x21, s0
  412404:	cmp	x21, #0xa
  412408:	mov	w8, #0xa                   	// #10
  41240c:	csel	x8, x21, x8, hi  // hi = pmore
  412410:	orr	x21, x8, #0x1
  412414:	cmn	x21, #0x1
  412418:	b.eq	4124b4 <wcrtomb@plt+0xfc44>  // b.none
  41241c:	cmp	x21, #0xa
  412420:	b.cc	412458 <wcrtomb@plt+0xfbe8>  // b.lo, b.ul, b.last
  412424:	mov	w9, #0xc                   	// #12
  412428:	mov	w10, #0x9                   	// #9
  41242c:	mov	w8, #0x3                   	// #3
  412430:	udiv	x11, x21, x8
  412434:	msub	x11, x11, x8, x21
  412438:	cbz	x11, 41245c <wcrtomb@plt+0xfbec>
  41243c:	add	x10, x10, x9
  412440:	add	x10, x10, #0x4
  412444:	add	x8, x8, #0x2
  412448:	cmp	x10, x21
  41244c:	add	x9, x9, #0x8
  412450:	b.cc	412430 <wcrtomb@plt+0xfbc0>  // b.lo, b.ul, b.last
  412454:	b	41245c <wcrtomb@plt+0xfbec>
  412458:	mov	w8, #0x3                   	// #3
  41245c:	udiv	x9, x21, x8
  412460:	msub	x8, x9, x8, x21
  412464:	cbnz	x8, 412478 <wcrtomb@plt+0xfc08>
  412468:	add	x21, x21, #0x2
  41246c:	cmn	x21, #0x1
  412470:	b.ne	41241c <wcrtomb@plt+0xfbac>  // b.any
  412474:	b	4124b4 <wcrtomb@plt+0xfc44>
  412478:	lsr	x8, x21, #60
  41247c:	cbnz	x8, 4124b4 <wcrtomb@plt+0xfc44>
  412480:	str	x21, [x20, #16]
  412484:	cbz	x21, 4124b4 <wcrtomb@plt+0xfc44>
  412488:	mov	w1, #0x10                  	// #16
  41248c:	mov	x0, x21
  412490:	bl	402480 <calloc@plt>
  412494:	str	x0, [x20]
  412498:	cbz	x0, 4124b4 <wcrtomb@plt+0xfc44>
  41249c:	add	x8, x0, x21, lsl #4
  4124a0:	stp	xzr, xzr, [x20, #24]
  4124a4:	stp	x23, x24, [x20, #48]
  4124a8:	str	x8, [x20, #8]
  4124ac:	stp	x19, xzr, [x20, #64]
  4124b0:	b	4124c0 <wcrtomb@plt+0xfc50>
  4124b4:	mov	x0, x20
  4124b8:	bl	402620 <free@plt>
  4124bc:	mov	x20, xzr
  4124c0:	mov	x0, x20
  4124c4:	ldp	x20, x19, [sp, #48]
  4124c8:	ldp	x22, x21, [sp, #32]
  4124cc:	ldp	x24, x23, [sp, #16]
  4124d0:	ldp	x29, x30, [sp], #64
  4124d4:	ret
  4124d8:	ror	x8, x0, #3
  4124dc:	udiv	x9, x8, x1
  4124e0:	msub	x0, x9, x1, x8
  4124e4:	ret
  4124e8:	cmp	x0, x1
  4124ec:	cset	w0, eq  // eq = none
  4124f0:	ret
  4124f4:	stp	x29, x30, [sp, #-48]!
  4124f8:	str	x21, [sp, #16]
  4124fc:	stp	x20, x19, [sp, #32]
  412500:	ldp	x20, x8, [x0]
  412504:	mov	x19, x0
  412508:	mov	x29, sp
  41250c:	b	41251c <wcrtomb@plt+0xfcac>
  412510:	stp	xzr, xzr, [x20]
  412514:	ldr	x8, [x19, #8]
  412518:	add	x20, x20, #0x10
  41251c:	cmp	x20, x8
  412520:	b.cs	412588 <wcrtomb@plt+0xfd18>  // b.hs, b.nlast
  412524:	ldr	x9, [x20]
  412528:	cbz	x9, 412518 <wcrtomb@plt+0xfca8>
  41252c:	ldr	x8, [x19, #64]
  412530:	ldr	x21, [x20, #8]
  412534:	cmp	x8, #0x0
  412538:	cset	w9, ne  // ne = any
  41253c:	cbnz	x21, 412574 <wcrtomb@plt+0xfd04>
  412540:	cbz	w9, 412510 <wcrtomb@plt+0xfca0>
  412544:	ldr	x0, [x20]
  412548:	blr	x8
  41254c:	b	412510 <wcrtomb@plt+0xfca0>
  412550:	str	xzr, [x21]
  412554:	ldr	x9, [x19, #72]
  412558:	ldr	x10, [x21, #8]
  41255c:	cmp	x8, #0x0
  412560:	str	x9, [x21, #8]
  412564:	str	x21, [x19, #72]
  412568:	cset	w9, ne  // ne = any
  41256c:	mov	x21, x10
  412570:	cbz	x10, 412540 <wcrtomb@plt+0xfcd0>
  412574:	tbz	w9, #0, 412550 <wcrtomb@plt+0xfce0>
  412578:	ldr	x0, [x21]
  41257c:	blr	x8
  412580:	ldr	x8, [x19, #64]
  412584:	b	412550 <wcrtomb@plt+0xfce0>
  412588:	stp	xzr, xzr, [x19, #24]
  41258c:	ldp	x20, x19, [sp, #32]
  412590:	ldr	x21, [sp, #16]
  412594:	ldp	x29, x30, [sp], #48
  412598:	ret
  41259c:	stp	x29, x30, [sp, #-48]!
  4125a0:	stp	x20, x19, [sp, #32]
  4125a4:	ldr	x8, [x0, #64]
  4125a8:	mov	x19, x0
  4125ac:	str	x21, [sp, #16]
  4125b0:	mov	x29, sp
  4125b4:	cbz	x8, 41260c <wcrtomb@plt+0xfd9c>
  4125b8:	ldr	x8, [x19, #32]
  4125bc:	cbz	x8, 41260c <wcrtomb@plt+0xfd9c>
  4125c0:	ldp	x20, x8, [x19]
  4125c4:	b	4125d0 <wcrtomb@plt+0xfd60>
  4125c8:	ldr	x8, [x19, #8]
  4125cc:	add	x20, x20, #0x10
  4125d0:	cmp	x20, x8
  4125d4:	b.cs	41260c <wcrtomb@plt+0xfd9c>  // b.hs, b.nlast
  4125d8:	ldr	x0, [x20]
  4125dc:	cbz	x0, 4125cc <wcrtomb@plt+0xfd5c>
  4125e0:	cbz	x20, 4125cc <wcrtomb@plt+0xfd5c>
  4125e4:	ldr	x8, [x19, #64]
  4125e8:	blr	x8
  4125ec:	ldr	x21, [x20, #8]
  4125f0:	cbz	x21, 4125c8 <wcrtomb@plt+0xfd58>
  4125f4:	ldr	x0, [x21]
  4125f8:	ldr	x8, [x19, #64]
  4125fc:	blr	x8
  412600:	ldr	x21, [x21, #8]
  412604:	cbnz	x21, 4125f4 <wcrtomb@plt+0xfd84>
  412608:	b	4125c8 <wcrtomb@plt+0xfd58>
  41260c:	ldp	x20, x8, [x19]
  412610:	b	412618 <wcrtomb@plt+0xfda8>
  412614:	add	x20, x20, #0x10
  412618:	cmp	x20, x8
  41261c:	b.cs	412640 <wcrtomb@plt+0xfdd0>  // b.hs, b.nlast
  412620:	ldr	x0, [x20, #8]
  412624:	cbz	x0, 412614 <wcrtomb@plt+0xfda4>
  412628:	ldr	x21, [x0, #8]
  41262c:	bl	402620 <free@plt>
  412630:	mov	x0, x21
  412634:	cbnz	x21, 412628 <wcrtomb@plt+0xfdb8>
  412638:	ldr	x8, [x19, #8]
  41263c:	b	412614 <wcrtomb@plt+0xfda4>
  412640:	ldr	x0, [x19, #72]
  412644:	cbz	x0, 412658 <wcrtomb@plt+0xfde8>
  412648:	ldr	x20, [x0, #8]
  41264c:	bl	402620 <free@plt>
  412650:	mov	x0, x20
  412654:	cbnz	x20, 412648 <wcrtomb@plt+0xfdd8>
  412658:	ldr	x0, [x19]
  41265c:	bl	402620 <free@plt>
  412660:	mov	x0, x19
  412664:	ldp	x20, x19, [sp, #32]
  412668:	ldr	x21, [sp, #16]
  41266c:	ldp	x29, x30, [sp], #48
  412670:	b	402620 <free@plt>
  412674:	sub	sp, sp, #0x90
  412678:	stp	x29, x30, [sp, #80]
  41267c:	stp	x24, x23, [sp, #96]
  412680:	stp	x22, x21, [sp, #112]
  412684:	stp	x20, x19, [sp, #128]
  412688:	ldr	x21, [x0, #40]
  41268c:	mov	x19, x0
  412690:	add	x29, sp, #0x50
  412694:	ldrb	w8, [x21, #16]
  412698:	cbnz	w8, 4126bc <wcrtomb@plt+0xfe4c>
  41269c:	ldr	s0, [x21, #8]
  4126a0:	ucvtf	s1, x1
  4126a4:	mov	w8, #0x5f800000            	// #1602224128
  4126a8:	fdiv	s0, s1, s0
  4126ac:	fmov	s1, w8
  4126b0:	fcmp	s0, s1
  4126b4:	b.ge	412740 <wcrtomb@plt+0xfed0>  // b.tcont
  4126b8:	fcvtzu	x1, s0
  4126bc:	cmp	x1, #0xa
  4126c0:	mov	w8, #0xa                   	// #10
  4126c4:	csel	x8, x1, x8, hi  // hi = pmore
  4126c8:	orr	x20, x8, #0x1
  4126cc:	cmn	x20, #0x1
  4126d0:	b.eq	412740 <wcrtomb@plt+0xfed0>  // b.none
  4126d4:	cmp	x20, #0xa
  4126d8:	b.cc	412710 <wcrtomb@plt+0xfea0>  // b.lo, b.ul, b.last
  4126dc:	mov	w9, #0xc                   	// #12
  4126e0:	mov	w10, #0x9                   	// #9
  4126e4:	mov	w8, #0x3                   	// #3
  4126e8:	udiv	x11, x20, x8
  4126ec:	msub	x11, x11, x8, x20
  4126f0:	cbz	x11, 412714 <wcrtomb@plt+0xfea4>
  4126f4:	add	x10, x10, x9
  4126f8:	add	x10, x10, #0x4
  4126fc:	add	x8, x8, #0x2
  412700:	cmp	x10, x20
  412704:	add	x9, x9, #0x8
  412708:	b.cc	4126e8 <wcrtomb@plt+0xfe78>  // b.lo, b.ul, b.last
  41270c:	b	412714 <wcrtomb@plt+0xfea4>
  412710:	mov	w8, #0x3                   	// #3
  412714:	udiv	x9, x20, x8
  412718:	msub	x8, x9, x8, x20
  41271c:	cbnz	x8, 412730 <wcrtomb@plt+0xfec0>
  412720:	add	x20, x20, #0x2
  412724:	cmn	x20, #0x1
  412728:	b.ne	4126d4 <wcrtomb@plt+0xfe64>  // b.any
  41272c:	b	412740 <wcrtomb@plt+0xfed0>
  412730:	sub	x8, x20, #0x1
  412734:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
  412738:	cmp	x8, x9
  41273c:	b.ls	41275c <wcrtomb@plt+0xfeec>  // b.plast
  412740:	mov	w0, wzr
  412744:	ldp	x20, x19, [sp, #128]
  412748:	ldp	x22, x21, [sp, #112]
  41274c:	ldp	x24, x23, [sp, #96]
  412750:	ldp	x29, x30, [sp, #80]
  412754:	add	sp, sp, #0x90
  412758:	ret
  41275c:	ldr	x8, [x19, #16]
  412760:	cmp	x20, x8
  412764:	b.ne	412770 <wcrtomb@plt+0xff00>  // b.any
  412768:	mov	w0, #0x1                   	// #1
  41276c:	b	412744 <wcrtomb@plt+0xfed4>
  412770:	mov	w1, #0x10                  	// #16
  412774:	mov	x0, x20
  412778:	bl	402480 <calloc@plt>
  41277c:	str	x0, [sp]
  412780:	cbz	x0, 412744 <wcrtomb@plt+0xfed4>
  412784:	add	x8, x0, x20, lsl #4
  412788:	stp	xzr, xzr, [sp, #24]
  41278c:	stp	x8, x20, [sp, #8]
  412790:	str	x21, [sp, #40]
  412794:	ldr	q0, [x19, #48]
  412798:	mov	x0, sp
  41279c:	mov	x1, x19
  4127a0:	mov	w2, wzr
  4127a4:	str	q0, [sp, #48]
  4127a8:	ldr	q0, [x19, #64]
  4127ac:	str	q0, [sp, #64]
  4127b0:	bl	4128a4 <wcrtomb@plt+0x10034>
  4127b4:	tbz	w0, #0, 4127e0 <wcrtomb@plt+0xff70>
  4127b8:	ldr	x0, [x19]
  4127bc:	bl	402620 <free@plt>
  4127c0:	ldr	q0, [sp]
  4127c4:	mov	w0, #0x1                   	// #1
  4127c8:	str	q0, [x19]
  4127cc:	ldr	q0, [sp, #16]
  4127d0:	str	q0, [x19, #16]
  4127d4:	ldr	x8, [sp, #72]
  4127d8:	str	x8, [x19, #72]
  4127dc:	b	412744 <wcrtomb@plt+0xfed4>
  4127e0:	ldr	x8, [sp, #72]
  4127e4:	add	x21, x19, #0x48
  4127e8:	str	x8, [x21]
  4127ec:	ldp	x22, x23, [sp]
  4127f0:	b	4127fc <wcrtomb@plt+0xff8c>
  4127f4:	str	xzr, [x22, #8]
  4127f8:	add	x22, x22, #0x10
  4127fc:	cmp	x22, x23
  412800:	b.cs	412880 <wcrtomb@plt+0x10010>  // b.hs, b.nlast
  412804:	ldr	x8, [x22]
  412808:	cbz	x8, 4127f8 <wcrtomb@plt+0xff88>
  41280c:	ldr	x24, [x22, #8]
  412810:	cbz	x24, 4127f4 <wcrtomb@plt+0xff84>
  412814:	ldr	x1, [x19, #16]
  412818:	b	412848 <wcrtomb@plt+0xffd8>
  41281c:	str	x20, [x9]
  412820:	ldr	x9, [x19, #24]
  412824:	add	x9, x9, #0x1
  412828:	str	x9, [x19, #24]
  41282c:	mov	x9, x21
  412830:	str	xzr, [x24]
  412834:	ldr	x10, [x9]
  412838:	str	x10, [x24, #8]
  41283c:	str	x24, [x9]
  412840:	mov	x24, x8
  412844:	cbz	x8, 4127f4 <wcrtomb@plt+0xff84>
  412848:	ldr	x20, [x24]
  41284c:	ldr	x8, [x19, #48]
  412850:	mov	x0, x20
  412854:	blr	x8
  412858:	ldr	x1, [x19, #16]
  41285c:	cmp	x0, x1
  412860:	b.cs	4128a0 <wcrtomb@plt+0x10030>  // b.hs, b.nlast
  412864:	ldr	x8, [x19]
  412868:	add	x9, x8, x0, lsl #4
  41286c:	ldr	x10, [x9]
  412870:	ldr	x8, [x24, #8]
  412874:	cbz	x10, 41281c <wcrtomb@plt+0xffac>
  412878:	add	x9, x9, #0x8
  41287c:	b	412834 <wcrtomb@plt+0xffc4>
  412880:	mov	x1, sp
  412884:	mov	x0, x19
  412888:	mov	w2, wzr
  41288c:	bl	4128a4 <wcrtomb@plt+0x10034>
  412890:	tbz	w0, #0, 4128a0 <wcrtomb@plt+0x10030>
  412894:	ldr	x0, [sp]
  412898:	bl	402620 <free@plt>
  41289c:	b	412740 <wcrtomb@plt+0xfed0>
  4128a0:	bl	402560 <abort@plt>
  4128a4:	stp	x29, x30, [sp, #-80]!
  4128a8:	stp	x26, x25, [sp, #16]
  4128ac:	stp	x24, x23, [sp, #32]
  4128b0:	stp	x22, x21, [sp, #48]
  4128b4:	stp	x20, x19, [sp, #64]
  4128b8:	ldp	x24, x8, [x1]
  4128bc:	mov	x29, sp
  4128c0:	cmp	x24, x8
  4128c4:	b.cs	4129fc <wcrtomb@plt+0x1018c>  // b.hs, b.nlast
  4128c8:	mov	w19, w2
  4128cc:	mov	x20, x1
  4128d0:	mov	x21, x0
  4128d4:	add	x25, x0, #0x48
  4128d8:	b	41290c <wcrtomb@plt+0x1009c>
  4128dc:	str	x22, [x8]
  4128e0:	ldr	x8, [x21, #24]
  4128e4:	add	x8, x8, #0x1
  4128e8:	str	x8, [x21, #24]
  4128ec:	str	xzr, [x24]
  4128f0:	ldr	x8, [x20, #24]
  4128f4:	sub	x8, x8, #0x1
  4128f8:	str	x8, [x20, #24]
  4128fc:	ldr	x8, [x20, #8]
  412900:	add	x24, x24, #0x10
  412904:	cmp	x24, x8
  412908:	b.cs	4129fc <wcrtomb@plt+0x1018c>  // b.hs, b.nlast
  41290c:	ldr	x22, [x24]
  412910:	cbz	x22, 4128fc <wcrtomb@plt+0x1008c>
  412914:	ldr	x23, [x24, #8]
  412918:	cbz	x23, 41298c <wcrtomb@plt+0x1011c>
  41291c:	ldr	x1, [x21, #16]
  412920:	b	412950 <wcrtomb@plt+0x100e0>
  412924:	str	x22, [x9]
  412928:	ldr	x9, [x21, #24]
  41292c:	add	x9, x9, #0x1
  412930:	str	x9, [x21, #24]
  412934:	mov	x9, x25
  412938:	str	xzr, [x23]
  41293c:	ldr	x10, [x9]
  412940:	str	x10, [x23, #8]
  412944:	str	x23, [x9]
  412948:	mov	x23, x8
  41294c:	cbz	x8, 412988 <wcrtomb@plt+0x10118>
  412950:	ldr	x22, [x23]
  412954:	ldr	x8, [x21, #48]
  412958:	mov	x0, x22
  41295c:	blr	x8
  412960:	ldr	x1, [x21, #16]
  412964:	cmp	x0, x1
  412968:	b.cs	412a18 <wcrtomb@plt+0x101a8>  // b.hs, b.nlast
  41296c:	ldr	x8, [x21]
  412970:	add	x9, x8, x0, lsl #4
  412974:	ldr	x10, [x9]
  412978:	ldr	x8, [x23, #8]
  41297c:	cbz	x10, 412924 <wcrtomb@plt+0x100b4>
  412980:	add	x9, x9, #0x8
  412984:	b	41293c <wcrtomb@plt+0x100cc>
  412988:	ldr	x22, [x24]
  41298c:	str	xzr, [x24, #8]
  412990:	tbnz	w19, #0, 4128fc <wcrtomb@plt+0x1008c>
  412994:	ldr	x8, [x21, #48]
  412998:	ldr	x1, [x21, #16]
  41299c:	mov	x0, x22
  4129a0:	blr	x8
  4129a4:	ldr	x8, [x21, #16]
  4129a8:	cmp	x0, x8
  4129ac:	b.cs	412a18 <wcrtomb@plt+0x101a8>  // b.hs, b.nlast
  4129b0:	ldr	x26, [x21]
  4129b4:	mov	x23, x0
  4129b8:	add	x8, x26, x0, lsl #4
  4129bc:	ldr	x9, [x8]
  4129c0:	cbz	x9, 4128dc <wcrtomb@plt+0x1006c>
  4129c4:	ldr	x0, [x25]
  4129c8:	cbz	x0, 4129d8 <wcrtomb@plt+0x10168>
  4129cc:	ldr	x8, [x0, #8]
  4129d0:	str	x8, [x25]
  4129d4:	b	4129e4 <wcrtomb@plt+0x10174>
  4129d8:	mov	w0, #0x10                  	// #16
  4129dc:	bl	4023a0 <malloc@plt>
  4129e0:	cbz	x0, 412a00 <wcrtomb@plt+0x10190>
  4129e4:	str	x22, [x0]
  4129e8:	add	x8, x26, x23, lsl #4
  4129ec:	ldr	x9, [x8, #8]
  4129f0:	str	x9, [x0, #8]
  4129f4:	str	x0, [x8, #8]
  4129f8:	b	4128ec <wcrtomb@plt+0x1007c>
  4129fc:	mov	w0, #0x1                   	// #1
  412a00:	ldp	x20, x19, [sp, #64]
  412a04:	ldp	x22, x21, [sp, #48]
  412a08:	ldp	x24, x23, [sp, #32]
  412a0c:	ldp	x26, x25, [sp, #16]
  412a10:	ldp	x29, x30, [sp], #80
  412a14:	ret
  412a18:	bl	402560 <abort@plt>
  412a1c:	stp	x29, x30, [sp, #-80]!
  412a20:	str	x25, [sp, #16]
  412a24:	stp	x24, x23, [sp, #32]
  412a28:	stp	x22, x21, [sp, #48]
  412a2c:	stp	x20, x19, [sp, #64]
  412a30:	mov	x29, sp
  412a34:	cbz	x1, 412d00 <wcrtomb@plt+0x10490>
  412a38:	mov	x20, x1
  412a3c:	ldr	x8, [x0, #48]
  412a40:	ldr	x1, [x0, #16]
  412a44:	mov	x19, x0
  412a48:	mov	x0, x20
  412a4c:	mov	x21, x2
  412a50:	blr	x8
  412a54:	ldr	x8, [x19, #16]
  412a58:	cmp	x0, x8
  412a5c:	b.cs	412d00 <wcrtomb@plt+0x10490>  // b.hs, b.nlast
  412a60:	ldr	x25, [x19]
  412a64:	mov	x22, x0
  412a68:	add	x23, x25, x0, lsl #4
  412a6c:	ldr	x1, [x23]
  412a70:	cbz	x1, 412a98 <wcrtomb@plt+0x10228>
  412a74:	cmp	x1, x20
  412a78:	b.eq	412c0c <wcrtomb@plt+0x1039c>  // b.none
  412a7c:	ldr	x8, [x19, #56]
  412a80:	mov	x0, x20
  412a84:	blr	x8
  412a88:	mov	x24, x23
  412a8c:	tbz	w0, #0, 412c20 <wcrtomb@plt+0x103b0>
  412a90:	ldr	x8, [x24]
  412a94:	cbnz	x8, 412c10 <wcrtomb@plt+0x103a0>
  412a98:	ldr	x8, [x19, #40]
  412a9c:	ldp	x10, x9, [x19, #16]
  412aa0:	ldr	s1, [x8, #8]
  412aa4:	ucvtf	s0, x10
  412aa8:	ucvtf	s2, x9
  412aac:	fmul	s3, s1, s0
  412ab0:	fcmp	s3, s2
  412ab4:	b.pl	412bf0 <wcrtomb@plt+0x10380>  // b.nfrst
  412ab8:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x11d70>
  412abc:	add	x9, x9, #0x8a0
  412ac0:	cmp	x8, x9
  412ac4:	b.eq	412b54 <wcrtomb@plt+0x102e4>  // b.none
  412ac8:	mov	w10, #0xcccd                	// #52429
  412acc:	movk	w10, #0x3dcc, lsl #16
  412ad0:	fmov	s3, w10
  412ad4:	fcmp	s1, s3
  412ad8:	b.le	412b44 <wcrtomb@plt+0x102d4>
  412adc:	mov	w10, #0x6666                	// #26214
  412ae0:	movk	w10, #0x3f66, lsl #16
  412ae4:	fmov	s3, w10
  412ae8:	fcmp	s1, s3
  412aec:	b.pl	412b44 <wcrtomb@plt+0x102d4>  // b.nfrst
  412af0:	ldr	s3, [x8, #12]
  412af4:	mov	w10, #0xcccd                	// #52429
  412af8:	movk	w10, #0x3f8c, lsl #16
  412afc:	fmov	s4, w10
  412b00:	fcmp	s3, s4
  412b04:	b.le	412b44 <wcrtomb@plt+0x102d4>
  412b08:	ldr	s3, [x8]
  412b0c:	fcmp	s3, #0.0
  412b10:	b.lt	412b44 <wcrtomb@plt+0x102d4>  // b.tstop
  412b14:	mov	w10, #0xcccd                	// #52429
  412b18:	movk	w10, #0x3dcc, lsl #16
  412b1c:	fmov	s4, w10
  412b20:	fadd	s3, s3, s4
  412b24:	fcmp	s3, s1
  412b28:	b.pl	412b44 <wcrtomb@plt+0x102d4>  // b.nfrst
  412b2c:	ldr	s4, [x8, #4]
  412b30:	fmov	s5, #1.000000000000000000e+00
  412b34:	fcmp	s4, s5
  412b38:	b.hi	412b44 <wcrtomb@plt+0x102d4>  // b.pmore
  412b3c:	fcmp	s3, s4
  412b40:	b.mi	412b58 <wcrtomb@plt+0x102e8>  // b.first
  412b44:	mov	w8, #0xcccd                	// #52429
  412b48:	movk	w8, #0x3f4c, lsl #16
  412b4c:	fmov	s1, w8
  412b50:	str	x9, [x19, #40]
  412b54:	mov	x8, x9
  412b58:	fmul	s3, s1, s0
  412b5c:	fcmp	s3, s2
  412b60:	b.pl	412bf0 <wcrtomb@plt+0x10380>  // b.nfrst
  412b64:	ldr	s2, [x8, #12]
  412b68:	ldrb	w8, [x8, #16]
  412b6c:	fmul	s0, s2, s0
  412b70:	cmp	w8, #0x0
  412b74:	fmul	s1, s1, s0
  412b78:	mov	w8, #0x5f800000            	// #1602224128
  412b7c:	fcsel	s0, s1, s0, eq  // eq = none
  412b80:	fmov	s1, w8
  412b84:	fcmp	s0, s1
  412b88:	b.ge	412c9c <wcrtomb@plt+0x1042c>  // b.tcont
  412b8c:	fcvtzu	x1, s0
  412b90:	mov	x0, x19
  412b94:	bl	412674 <wcrtomb@plt+0xfe04>
  412b98:	tbz	w0, #0, 412c9c <wcrtomb@plt+0x1042c>
  412b9c:	ldr	x8, [x19, #48]
  412ba0:	ldr	x1, [x19, #16]
  412ba4:	mov	x0, x20
  412ba8:	blr	x8
  412bac:	ldr	x8, [x19, #16]
  412bb0:	cmp	x0, x8
  412bb4:	b.cs	412d00 <wcrtomb@plt+0x10490>  // b.hs, b.nlast
  412bb8:	ldr	x22, [x19]
  412bbc:	mov	x21, x0
  412bc0:	add	x23, x22, x0, lsl #4
  412bc4:	ldr	x1, [x23]
  412bc8:	cbz	x1, 412bf0 <wcrtomb@plt+0x10380>
  412bcc:	cmp	x1, x20
  412bd0:	mov	x8, x20
  412bd4:	b.eq	412bec <wcrtomb@plt+0x1037c>  // b.none
  412bd8:	ldr	x8, [x19, #56]
  412bdc:	mov	x0, x20
  412be0:	blr	x8
  412be4:	tbz	w0, #0, 412cc4 <wcrtomb@plt+0x10454>
  412be8:	ldr	x8, [x23]
  412bec:	cbnz	x8, 412d00 <wcrtomb@plt+0x10490>
  412bf0:	ldr	x8, [x23]
  412bf4:	cbz	x8, 412c50 <wcrtomb@plt+0x103e0>
  412bf8:	ldr	x0, [x19, #72]
  412bfc:	cbz	x0, 412c6c <wcrtomb@plt+0x103fc>
  412c00:	ldr	x8, [x0, #8]
  412c04:	str	x8, [x19, #72]
  412c08:	b	412c78 <wcrtomb@plt+0x10408>
  412c0c:	mov	x8, x20
  412c10:	mov	w0, wzr
  412c14:	cbz	x21, 412ca0 <wcrtomb@plt+0x10430>
  412c18:	str	x8, [x21]
  412c1c:	b	412ca0 <wcrtomb@plt+0x10430>
  412c20:	add	x24, x25, x22, lsl #4
  412c24:	ldr	x8, [x24, #8]!
  412c28:	cbz	x8, 412a98 <wcrtomb@plt+0x10228>
  412c2c:	ldr	x1, [x8]
  412c30:	cmp	x1, x20
  412c34:	b.eq	412cb8 <wcrtomb@plt+0x10448>  // b.none
  412c38:	ldr	x8, [x19, #56]
  412c3c:	mov	x0, x20
  412c40:	blr	x8
  412c44:	ldr	x24, [x24]
  412c48:	tbz	w0, #0, 412c24 <wcrtomb@plt+0x103b4>
  412c4c:	b	412a90 <wcrtomb@plt+0x10220>
  412c50:	str	x20, [x23]
  412c54:	ldur	q0, [x19, #24]
  412c58:	mov	w0, #0x1                   	// #1
  412c5c:	dup	v1.2d, x0
  412c60:	add	v0.2d, v0.2d, v1.2d
  412c64:	stur	q0, [x19, #24]
  412c68:	b	412ca0 <wcrtomb@plt+0x10430>
  412c6c:	mov	w0, #0x10                  	// #16
  412c70:	bl	4023a0 <malloc@plt>
  412c74:	cbz	x0, 412c9c <wcrtomb@plt+0x1042c>
  412c78:	str	x20, [x0]
  412c7c:	ldr	x8, [x23, #8]
  412c80:	str	x8, [x0, #8]
  412c84:	str	x0, [x23, #8]
  412c88:	ldr	x8, [x19, #32]
  412c8c:	mov	w0, #0x1                   	// #1
  412c90:	add	x8, x8, #0x1
  412c94:	str	x8, [x19, #32]
  412c98:	b	412ca0 <wcrtomb@plt+0x10430>
  412c9c:	mov	w0, #0xffffffff            	// #-1
  412ca0:	ldp	x20, x19, [sp, #64]
  412ca4:	ldp	x22, x21, [sp, #48]
  412ca8:	ldp	x24, x23, [sp, #32]
  412cac:	ldr	x25, [sp, #16]
  412cb0:	ldp	x29, x30, [sp], #80
  412cb4:	ret
  412cb8:	mov	x8, x20
  412cbc:	cbnz	x8, 412c10 <wcrtomb@plt+0x103a0>
  412cc0:	b	412a98 <wcrtomb@plt+0x10228>
  412cc4:	add	x21, x22, x21, lsl #4
  412cc8:	ldr	x8, [x21, #8]!
  412ccc:	cbz	x8, 412bf0 <wcrtomb@plt+0x10380>
  412cd0:	ldr	x1, [x8]
  412cd4:	cmp	x1, x20
  412cd8:	b.eq	412cf8 <wcrtomb@plt+0x10488>  // b.none
  412cdc:	ldr	x8, [x19, #56]
  412ce0:	mov	x0, x20
  412ce4:	blr	x8
  412ce8:	ldr	x21, [x21]
  412cec:	tbz	w0, #0, 412cc8 <wcrtomb@plt+0x10458>
  412cf0:	ldr	x8, [x21]
  412cf4:	b	412bec <wcrtomb@plt+0x1037c>
  412cf8:	mov	x8, x20
  412cfc:	b	412bec <wcrtomb@plt+0x1037c>
  412d00:	bl	402560 <abort@plt>
  412d04:	stp	x29, x30, [sp, #-32]!
  412d08:	mov	x29, sp
  412d0c:	add	x2, x29, #0x18
  412d10:	str	x19, [sp, #16]
  412d14:	mov	x19, x1
  412d18:	bl	412a1c <wcrtomb@plt+0x101ac>
  412d1c:	ldr	x8, [x29, #24]
  412d20:	cmp	w0, #0x0
  412d24:	csel	x8, x8, x19, eq  // eq = none
  412d28:	ldr	x19, [sp, #16]
  412d2c:	cmn	w0, #0x1
  412d30:	csel	x0, xzr, x8, eq  // eq = none
  412d34:	ldp	x29, x30, [sp], #32
  412d38:	ret
  412d3c:	stp	x29, x30, [sp, #-64]!
  412d40:	stp	x22, x21, [sp, #32]
  412d44:	stp	x20, x19, [sp, #48]
  412d48:	ldr	x8, [x0, #16]
  412d4c:	ldr	x9, [x0, #48]
  412d50:	mov	x20, x0
  412d54:	mov	x19, x1
  412d58:	mov	x0, x1
  412d5c:	mov	x1, x8
  412d60:	str	x23, [sp, #16]
  412d64:	mov	x29, sp
  412d68:	blr	x9
  412d6c:	ldr	x8, [x20, #16]
  412d70:	cmp	x0, x8
  412d74:	b.cs	412f70 <wcrtomb@plt+0x10700>  // b.hs, b.nlast
  412d78:	ldr	x23, [x20]
  412d7c:	mov	x21, x0
  412d80:	add	x22, x23, x0, lsl #4
  412d84:	ldr	x1, [x22]
  412d88:	cbz	x1, 412df8 <wcrtomb@plt+0x10588>
  412d8c:	cmp	x1, x19
  412d90:	b.eq	412da8 <wcrtomb@plt+0x10538>  // b.none
  412d94:	ldr	x8, [x20, #56]
  412d98:	mov	x0, x19
  412d9c:	blr	x8
  412da0:	tbz	w0, #0, 412dc0 <wcrtomb@plt+0x10550>
  412da4:	ldr	x19, [x22]
  412da8:	add	x8, x23, x21, lsl #4
  412dac:	ldr	x8, [x8, #8]
  412db0:	cbz	x8, 412e00 <wcrtomb@plt+0x10590>
  412db4:	ldr	q0, [x8]
  412db8:	str	q0, [x22]
  412dbc:	b	412e20 <wcrtomb@plt+0x105b0>
  412dc0:	add	x21, x23, x21, lsl #4
  412dc4:	ldr	x9, [x21, #8]!
  412dc8:	cbz	x9, 412df8 <wcrtomb@plt+0x10588>
  412dcc:	ldr	x1, [x9]
  412dd0:	cmp	x1, x19
  412dd4:	b.eq	412e0c <wcrtomb@plt+0x1059c>  // b.none
  412dd8:	ldr	x8, [x20, #56]
  412ddc:	mov	x0, x19
  412de0:	blr	x8
  412de4:	ldr	x8, [x21]
  412de8:	tbnz	w0, #0, 412e14 <wcrtomb@plt+0x105a4>
  412dec:	ldr	x9, [x8, #8]!
  412df0:	mov	x21, x8
  412df4:	cbnz	x9, 412dcc <wcrtomb@plt+0x1055c>
  412df8:	mov	x19, xzr
  412dfc:	b	412f58 <wcrtomb@plt+0x106e8>
  412e00:	str	xzr, [x22]
  412e04:	cbnz	x19, 412e34 <wcrtomb@plt+0x105c4>
  412e08:	b	412f58 <wcrtomb@plt+0x106e8>
  412e0c:	mov	x8, x9
  412e10:	b	412e18 <wcrtomb@plt+0x105a8>
  412e14:	ldr	x19, [x8]
  412e18:	ldr	x9, [x8, #8]
  412e1c:	str	x9, [x21]
  412e20:	str	xzr, [x8]
  412e24:	ldr	x9, [x20, #72]
  412e28:	str	x9, [x8, #8]
  412e2c:	str	x8, [x20, #72]
  412e30:	cbz	x19, 412f58 <wcrtomb@plt+0x106e8>
  412e34:	ldr	x8, [x20, #32]
  412e38:	sub	x8, x8, #0x1
  412e3c:	str	x8, [x20, #32]
  412e40:	ldr	x8, [x22]
  412e44:	cbnz	x8, 412f58 <wcrtomb@plt+0x106e8>
  412e48:	ldp	x10, x9, [x20, #16]
  412e4c:	ldr	x8, [x20, #40]
  412e50:	sub	x9, x9, #0x1
  412e54:	str	x9, [x20, #24]
  412e58:	ldr	s2, [x8]
  412e5c:	ucvtf	s0, x10
  412e60:	ucvtf	s1, x9
  412e64:	fmul	s3, s2, s0
  412e68:	fcmp	s3, s1
  412e6c:	b.le	412f58 <wcrtomb@plt+0x106e8>
  412e70:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x11d70>
  412e74:	add	x9, x9, #0x8a0
  412e78:	cmp	x8, x9
  412e7c:	b.eq	412f04 <wcrtomb@plt+0x10694>  // b.none
  412e80:	ldr	s3, [x8, #8]
  412e84:	mov	w10, #0xcccd                	// #52429
  412e88:	movk	w10, #0x3dcc, lsl #16
  412e8c:	fmov	s4, w10
  412e90:	fcmp	s3, s4
  412e94:	b.le	412efc <wcrtomb@plt+0x1068c>
  412e98:	mov	w10, #0x6666                	// #26214
  412e9c:	movk	w10, #0x3f66, lsl #16
  412ea0:	fmov	s4, w10
  412ea4:	fcmp	s3, s4
  412ea8:	b.pl	412efc <wcrtomb@plt+0x1068c>  // b.nfrst
  412eac:	fcmp	s2, #0.0
  412eb0:	b.lt	412efc <wcrtomb@plt+0x1068c>  // b.tstop
  412eb4:	ldr	s4, [x8, #12]
  412eb8:	mov	w10, #0xcccd                	// #52429
  412ebc:	movk	w10, #0x3f8c, lsl #16
  412ec0:	fmov	s5, w10
  412ec4:	fcmp	s4, s5
  412ec8:	b.le	412efc <wcrtomb@plt+0x1068c>
  412ecc:	mov	w10, #0xcccd                	// #52429
  412ed0:	movk	w10, #0x3dcc, lsl #16
  412ed4:	fmov	s4, w10
  412ed8:	fadd	s4, s2, s4
  412edc:	fcmp	s4, s3
  412ee0:	b.pl	412efc <wcrtomb@plt+0x1068c>  // b.nfrst
  412ee4:	ldr	s3, [x8, #4]
  412ee8:	fmov	s5, #1.000000000000000000e+00
  412eec:	fcmp	s3, s5
  412ef0:	b.hi	412efc <wcrtomb@plt+0x1068c>  // b.pmore
  412ef4:	fcmp	s4, s3
  412ef8:	b.mi	412f08 <wcrtomb@plt+0x10698>  // b.first
  412efc:	fmov	s2, wzr
  412f00:	str	x9, [x20, #40]
  412f04:	mov	x8, x9
  412f08:	fmul	s2, s2, s0
  412f0c:	fcmp	s2, s1
  412f10:	b.le	412f58 <wcrtomb@plt+0x106e8>
  412f14:	ldr	s1, [x8, #4]
  412f18:	ldrb	w9, [x8, #16]
  412f1c:	fmul	s0, s1, s0
  412f20:	cbnz	w9, 412f2c <wcrtomb@plt+0x106bc>
  412f24:	ldr	s1, [x8, #8]
  412f28:	fmul	s0, s0, s1
  412f2c:	fcvtzu	x1, s0
  412f30:	mov	x0, x20
  412f34:	bl	412674 <wcrtomb@plt+0xfe04>
  412f38:	tbnz	w0, #0, 412f58 <wcrtomb@plt+0x106e8>
  412f3c:	ldr	x0, [x20, #72]
  412f40:	cbz	x0, 412f54 <wcrtomb@plt+0x106e4>
  412f44:	ldr	x21, [x0, #8]
  412f48:	bl	402620 <free@plt>
  412f4c:	mov	x0, x21
  412f50:	cbnz	x21, 412f44 <wcrtomb@plt+0x106d4>
  412f54:	str	xzr, [x20, #72]
  412f58:	mov	x0, x19
  412f5c:	ldp	x20, x19, [sp, #48]
  412f60:	ldp	x22, x21, [sp, #32]
  412f64:	ldr	x23, [sp, #16]
  412f68:	ldp	x29, x30, [sp], #64
  412f6c:	ret
  412f70:	bl	402560 <abort@plt>
  412f74:	sub	sp, sp, #0xc0
  412f78:	cmp	x0, x1
  412f7c:	stp	x29, x30, [sp, #128]
  412f80:	str	x23, [sp, #144]
  412f84:	stp	x22, x21, [sp, #160]
  412f88:	stp	x20, x19, [sp, #176]
  412f8c:	add	x29, sp, #0x80
  412f90:	b.eq	41306c <wcrtomb@plt+0x107fc>  // b.none
  412f94:	mov	x19, x1
  412f98:	mov	x20, x0
  412f9c:	bl	402630 <__ctype_get_mb_cur_max@plt>
  412fa0:	cmp	x0, #0x1
  412fa4:	b.ls	413074 <wcrtomb@plt+0x10804>  // b.plast
  412fa8:	str	x20, [sp, #80]
  412fac:	strb	wzr, [sp, #64]
  412fb0:	stur	xzr, [sp, #68]
  412fb4:	strb	wzr, [sp, #76]
  412fb8:	str	x19, [sp, #16]
  412fbc:	strb	wzr, [sp]
  412fc0:	stur	xzr, [sp, #4]
  412fc4:	add	x0, sp, #0x40
  412fc8:	strb	wzr, [sp, #12]
  412fcc:	bl	413178 <wcrtomb@plt+0x10908>
  412fd0:	ldrb	w8, [sp, #96]
  412fd4:	cbz	w8, 412fe0 <wcrtomb@plt+0x10770>
  412fd8:	ldr	w8, [sp, #100]
  412fdc:	cbz	w8, 4130d0 <wcrtomb@plt+0x10860>
  412fe0:	mov	x0, sp
  412fe4:	bl	413178 <wcrtomb@plt+0x10908>
  412fe8:	ldrb	w8, [sp, #32]
  412fec:	cbz	w8, 412ff8 <wcrtomb@plt+0x10788>
  412ff0:	ldr	w9, [sp, #36]
  412ff4:	cbz	w9, 4130d0 <wcrtomb@plt+0x10860>
  412ff8:	ldrb	w9, [sp, #96]
  412ffc:	cbz	w9, 413028 <wcrtomb@plt+0x107b8>
  413000:	cbz	w8, 41312c <wcrtomb@plt+0x108bc>
  413004:	ldr	w0, [sp, #100]
  413008:	bl	402810 <towlower@plt>
  41300c:	ldr	w8, [sp, #36]
  413010:	mov	w19, w0
  413014:	mov	w0, w8
  413018:	bl	402810 <towlower@plt>
  41301c:	sub	w0, w19, w0
  413020:	cbz	w0, 41304c <wcrtomb@plt+0x107dc>
  413024:	b	413114 <wcrtomb@plt+0x108a4>
  413028:	cbnz	w8, 413134 <wcrtomb@plt+0x108c4>
  41302c:	ldr	x2, [sp, #88]
  413030:	ldr	x8, [sp, #24]
  413034:	cmp	x2, x8
  413038:	b.ne	41313c <wcrtomb@plt+0x108cc>  // b.any
  41303c:	ldr	x0, [sp, #80]
  413040:	ldr	x1, [sp, #16]
  413044:	bl	4025d0 <memcmp@plt>
  413048:	cbnz	w0, 413114 <wcrtomb@plt+0x108a4>
  41304c:	ldp	x9, x8, [sp, #80]
  413050:	ldp	x11, x10, [sp, #16]
  413054:	strb	wzr, [sp, #76]
  413058:	add	x8, x9, x8
  41305c:	add	x9, x11, x10
  413060:	str	x8, [sp, #80]
  413064:	str	x9, [sp, #16]
  413068:	b	412fc4 <wcrtomb@plt+0x10754>
  41306c:	mov	w0, wzr
  413070:	b	413114 <wcrtomb@plt+0x108a4>
  413074:	bl	402610 <__ctype_b_loc@plt>
  413078:	ldr	x22, [x0]
  41307c:	ldrb	w21, [x20]
  413080:	ldrh	w8, [x22, x21, lsl #1]
  413084:	tbz	w8, #8, 413098 <wcrtomb@plt+0x10828>
  413088:	bl	402330 <__ctype_tolower_loc@plt>
  41308c:	ldr	x8, [x0]
  413090:	lsl	x9, x21, #2
  413094:	ldrb	w21, [x8, x9]
  413098:	ldrb	w23, [x19]
  41309c:	ldrh	w8, [x22, x23, lsl #1]
  4130a0:	tbz	w8, #8, 4130b4 <wcrtomb@plt+0x10844>
  4130a4:	bl	402330 <__ctype_tolower_loc@plt>
  4130a8:	ldr	x8, [x0]
  4130ac:	lsl	x9, x23, #2
  4130b0:	ldrb	w23, [x8, x9]
  4130b4:	cbz	w21, 4130c8 <wcrtomb@plt+0x10858>
  4130b8:	add	x20, x20, #0x1
  4130bc:	cmp	w21, w23
  4130c0:	add	x19, x19, #0x1
  4130c4:	b.eq	41307c <wcrtomb@plt+0x1080c>  // b.none
  4130c8:	sub	w0, w21, w23
  4130cc:	b	413114 <wcrtomb@plt+0x108a4>
  4130d0:	add	x0, sp, #0x40
  4130d4:	bl	413178 <wcrtomb@plt+0x10908>
  4130d8:	ldrb	w8, [sp, #96]
  4130dc:	mov	w0, #0x1                   	// #1
  4130e0:	cbz	w8, 413114 <wcrtomb@plt+0x108a4>
  4130e4:	ldr	w8, [sp, #100]
  4130e8:	cbnz	w8, 413114 <wcrtomb@plt+0x108a4>
  4130ec:	mov	x0, sp
  4130f0:	bl	413178 <wcrtomb@plt+0x10908>
  4130f4:	ldrb	w8, [sp, #32]
  4130f8:	ldr	w9, [sp, #36]
  4130fc:	cmp	w8, #0x0
  413100:	cset	w8, eq  // eq = none
  413104:	cmp	w9, #0x0
  413108:	cset	w9, ne  // ne = any
  41310c:	orr	w8, w8, w9
  413110:	sbfx	w0, w8, #0, #1
  413114:	ldp	x20, x19, [sp, #176]
  413118:	ldp	x22, x21, [sp, #160]
  41311c:	ldr	x23, [sp, #144]
  413120:	ldp	x29, x30, [sp, #128]
  413124:	add	sp, sp, #0xc0
  413128:	ret
  41312c:	mov	w0, #0xffffffff            	// #-1
  413130:	b	413114 <wcrtomb@plt+0x108a4>
  413134:	mov	w0, #0x1                   	// #1
  413138:	b	413114 <wcrtomb@plt+0x108a4>
  41313c:	ldr	x0, [sp, #80]
  413140:	ldr	x1, [sp, #16]
  413144:	cmp	x2, x8
  413148:	b.cs	413160 <wcrtomb@plt+0x108f0>  // b.hs, b.nlast
  41314c:	bl	4025d0 <memcmp@plt>
  413150:	cmp	w0, #0x1
  413154:	mov	w8, #0xffffffff            	// #-1
  413158:	cneg	w0, w8, ge  // ge = tcont
  41315c:	b	413114 <wcrtomb@plt+0x108a4>
  413160:	mov	x2, x8
  413164:	bl	4025d0 <memcmp@plt>
  413168:	cmp	w0, #0x0
  41316c:	mov	w8, #0x1                   	// #1
  413170:	cneg	w0, w8, lt  // lt = tstop
  413174:	b	413114 <wcrtomb@plt+0x108a4>
  413178:	stp	x29, x30, [sp, #-48]!
  41317c:	stp	x22, x21, [sp, #16]
  413180:	stp	x20, x19, [sp, #32]
  413184:	ldrb	w8, [x0, #12]
  413188:	mov	x29, sp
  41318c:	cbnz	w8, 413278 <wcrtomb@plt+0x10a08>
  413190:	ldrb	w8, [x0]
  413194:	ldr	x20, [x0, #16]
  413198:	mov	x19, x0
  41319c:	cbz	w8, 4131f0 <wcrtomb@plt+0x10980>
  4131a0:	add	x22, x19, #0x24
  4131a4:	bl	402630 <__ctype_get_mb_cur_max@plt>
  4131a8:	mov	x1, x0
  4131ac:	mov	x0, x20
  4131b0:	bl	414e14 <wcrtomb@plt+0x125a4>
  4131b4:	add	x21, x19, #0x4
  4131b8:	mov	x2, x0
  4131bc:	mov	x0, x22
  4131c0:	mov	x1, x20
  4131c4:	mov	x3, x21
  4131c8:	bl	417eb0 <wcrtomb@plt+0x15640>
  4131cc:	cmn	x0, #0x2
  4131d0:	str	x0, [x19, #24]
  4131d4:	b.eq	413260 <wcrtomb@plt+0x109f0>  // b.none
  4131d8:	cbz	x0, 413228 <wcrtomb@plt+0x109b8>
  4131dc:	cmn	x0, #0x1
  4131e0:	b.ne	413244 <wcrtomb@plt+0x109d4>  // b.any
  4131e4:	mov	w8, #0x1                   	// #1
  4131e8:	str	x8, [x19, #24]
  4131ec:	b	41326c <wcrtomb@plt+0x109fc>
  4131f0:	ldrb	w8, [x20]
  4131f4:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x12d70>
  4131f8:	add	x10, x10, #0x30c
  4131fc:	lsr	w9, w8, #3
  413200:	and	x9, x9, #0x1c
  413204:	ldr	w9, [x10, x9]
  413208:	lsr	w8, w9, w8
  41320c:	tbz	w8, #0, 413288 <wcrtomb@plt+0x10a18>
  413210:	mov	w8, #0x1                   	// #1
  413214:	str	x8, [x19, #24]
  413218:	ldrb	w9, [x20]
  41321c:	strb	w8, [x19, #32]
  413220:	str	w9, [x19, #36]
  413224:	b	413270 <wcrtomb@plt+0x10a00>
  413228:	ldr	x8, [x19, #16]
  41322c:	mov	w9, #0x1                   	// #1
  413230:	str	x9, [x19, #24]
  413234:	ldrb	w8, [x8]
  413238:	cbnz	w8, 4132a0 <wcrtomb@plt+0x10a30>
  41323c:	ldr	w8, [x22]
  413240:	cbnz	w8, 4132c0 <wcrtomb@plt+0x10a50>
  413244:	mov	w8, #0x1                   	// #1
  413248:	mov	x0, x21
  41324c:	strb	w8, [x19, #32]
  413250:	bl	402580 <mbsinit@plt>
  413254:	cbz	w0, 413270 <wcrtomb@plt+0x10a00>
  413258:	strb	wzr, [x19]
  41325c:	b	413270 <wcrtomb@plt+0x10a00>
  413260:	ldr	x0, [x19, #16]
  413264:	bl	402270 <strlen@plt>
  413268:	str	x0, [x19, #24]
  41326c:	strb	wzr, [x19, #32]
  413270:	mov	w8, #0x1                   	// #1
  413274:	strb	w8, [x19, #12]
  413278:	ldp	x20, x19, [sp, #32]
  41327c:	ldp	x22, x21, [sp, #16]
  413280:	ldp	x29, x30, [sp], #48
  413284:	ret
  413288:	add	x0, x19, #0x4
  41328c:	bl	402580 <mbsinit@plt>
  413290:	cbz	w0, 4132e0 <wcrtomb@plt+0x10a70>
  413294:	mov	w8, #0x1                   	// #1
  413298:	strb	w8, [x19]
  41329c:	b	4131a0 <wcrtomb@plt+0x10930>
  4132a0:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4132a4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4132a8:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4132ac:	add	x0, x0, #0x907
  4132b0:	add	x1, x1, #0x8cb
  4132b4:	add	x3, x3, #0x8d7
  4132b8:	mov	w2, #0xb2                  	// #178
  4132bc:	bl	4027d0 <__assert_fail@plt>
  4132c0:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4132c4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4132c8:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4132cc:	add	x0, x0, #0x91e
  4132d0:	add	x1, x1, #0x8cb
  4132d4:	add	x3, x3, #0x8d7
  4132d8:	mov	w2, #0xb3                  	// #179
  4132dc:	bl	4027d0 <__assert_fail@plt>
  4132e0:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4132e4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4132e8:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4132ec:	add	x0, x0, #0x8b4
  4132f0:	add	x1, x1, #0x8cb
  4132f4:	add	x3, x3, #0x8d7
  4132f8:	mov	w2, #0x96                  	// #150
  4132fc:	bl	4027d0 <__assert_fail@plt>
  413300:	ldr	x8, [x0, #16]
  413304:	add	x8, x8, x1
  413308:	str	x8, [x0, #16]
  41330c:	ret
  413310:	stp	x29, x30, [sp, #-48]!
  413314:	stp	x20, x19, [sp, #32]
  413318:	ldrb	w8, [x1]
  41331c:	mov	x19, x1
  413320:	mov	x20, x0
  413324:	str	x21, [sp, #16]
  413328:	mov	x29, sp
  41332c:	strb	w8, [x0]
  413330:	cbz	w8, 413340 <wcrtomb@plt+0x10ad0>
  413334:	ldur	x8, [x19, #4]
  413338:	stur	x8, [x20, #4]
  41333c:	b	413344 <wcrtomb@plt+0x10ad4>
  413340:	stur	xzr, [x20, #4]
  413344:	ldrb	w8, [x19, #12]
  413348:	strb	w8, [x20, #12]
  41334c:	ldr	x1, [x19, #16]
  413350:	add	x8, x19, #0x28
  413354:	cmp	x1, x8
  413358:	b.ne	413370 <wcrtomb@plt+0x10b00>  // b.any
  41335c:	ldr	x2, [x19, #24]
  413360:	add	x21, x20, #0x28
  413364:	mov	x0, x21
  413368:	bl	402210 <memcpy@plt>
  41336c:	mov	x1, x21
  413370:	str	x1, [x20, #16]
  413374:	ldr	x8, [x19, #24]
  413378:	str	x8, [x20, #24]
  41337c:	ldrb	w8, [x19, #32]
  413380:	strb	w8, [x20, #32]
  413384:	cbz	w8, 413390 <wcrtomb@plt+0x10b20>
  413388:	ldr	w8, [x19, #36]
  41338c:	str	w8, [x20, #36]
  413390:	ldp	x20, x19, [sp, #32]
  413394:	ldr	x21, [sp, #16]
  413398:	ldp	x29, x30, [sp], #48
  41339c:	ret
  4133a0:	and	w1, w1, #0xff
  4133a4:	and	w8, w2, #0xff
  4133a8:	cmp	w1, w8
  4133ac:	b.ne	4133b8 <wcrtomb@plt+0x10b48>  // b.any
  4133b0:	mov	x2, x3
  4133b4:	b	4026d0 <memchr@plt>
  4133b8:	cbz	x3, 4133e4 <wcrtomb@plt+0x10b74>
  4133bc:	and	x9, x0, #0x7
  4133c0:	cbz	x9, 4133e4 <wcrtomb@plt+0x10b74>
  4133c4:	ldrb	w9, [x0]
  4133c8:	cmp	w1, w9
  4133cc:	b.eq	413480 <wcrtomb@plt+0x10c10>  // b.none
  4133d0:	cmp	w8, w9
  4133d4:	b.eq	413480 <wcrtomb@plt+0x10c10>  // b.none
  4133d8:	subs	x3, x3, #0x1
  4133dc:	add	x0, x0, #0x1
  4133e0:	b.ne	4133bc <wcrtomb@plt+0x10b4c>  // b.any
  4133e4:	mov	w12, w1
  4133e8:	mov	w13, w8
  4133ec:	bfi	w12, w12, #8, #8
  4133f0:	bfi	w13, w13, #8, #8
  4133f4:	mov	x11, #0xfefefefefefefefe    	// #-72340172838076674
  4133f8:	bfi	x12, x12, #16, #16
  4133fc:	bfi	x13, x13, #16, #16
  413400:	movk	x11, #0xfeff
  413404:	bfi	x12, x12, #32, #32
  413408:	bfi	x13, x13, #32, #32
  41340c:	mov	x9, x3
  413410:	subs	x3, x3, #0x8
  413414:	mov	x10, x0
  413418:	b.cc	41344c <wcrtomb@plt+0x10bdc>  // b.lo, b.ul, b.last
  41341c:	mov	x0, x10
  413420:	ldr	x14, [x0], #8
  413424:	eor	x15, x14, x12
  413428:	eor	x14, x14, x13
  41342c:	add	x16, x15, x11
  413430:	add	x17, x14, x11
  413434:	bic	x15, x16, x15
  413438:	bic	x14, x17, x14
  41343c:	orr	x14, x15, x14
  413440:	and	x14, x14, #0x8080808080808080
  413444:	cbz	x14, 41340c <wcrtomb@plt+0x10b9c>
  413448:	b	413450 <wcrtomb@plt+0x10be0>
  41344c:	cbz	x9, 413474 <wcrtomb@plt+0x10c04>
  413450:	mov	x11, xzr
  413454:	ldrb	w12, [x10, x11]
  413458:	cmp	w1, w12
  41345c:	b.eq	41347c <wcrtomb@plt+0x10c0c>  // b.none
  413460:	cmp	w8, w12
  413464:	b.eq	41347c <wcrtomb@plt+0x10c0c>  // b.none
  413468:	add	x11, x11, #0x1
  41346c:	cmp	x9, x11
  413470:	b.ne	413454 <wcrtomb@plt+0x10be4>  // b.any
  413474:	mov	x0, xzr
  413478:	ret
  41347c:	add	x0, x10, x11
  413480:	ret
  413484:	sub	sp, sp, #0xe0
  413488:	stp	x29, x30, [sp, #208]
  41348c:	add	x29, sp, #0xd0
  413490:	stp	x3, x4, [x29, #-72]
  413494:	stp	x5, x6, [x29, #-56]
  413498:	stur	x7, [x29, #-40]
  41349c:	stp	q1, q2, [sp, #16]
  4134a0:	stp	q3, q4, [sp, #48]
  4134a4:	str	q0, [sp]
  4134a8:	stp	q5, q6, [sp, #80]
  4134ac:	str	q7, [sp, #112]
  4134b0:	tbnz	w2, #6, 4134bc <wcrtomb@plt+0x10c4c>
  4134b4:	mov	w3, wzr
  4134b8:	b	413514 <wcrtomb@plt+0x10ca4>
  4134bc:	mov	x9, #0xffffffffffffffd8    	// #-40
  4134c0:	mov	x11, sp
  4134c4:	sub	x12, x29, #0x48
  4134c8:	movk	x9, #0xff80, lsl #32
  4134cc:	add	x10, x29, #0x10
  4134d0:	mov	x8, #0xffffffffffffffd8    	// #-40
  4134d4:	add	x11, x11, #0x80
  4134d8:	add	x12, x12, #0x28
  4134dc:	stp	x11, x9, [x29, #-16]
  4134e0:	stp	x10, x12, [x29, #-32]
  4134e4:	tbz	w8, #31, 413504 <wcrtomb@plt+0x10c94>
  4134e8:	add	w9, w8, #0x8
  4134ec:	cmn	w8, #0x8
  4134f0:	stur	w9, [x29, #-8]
  4134f4:	b.gt	413504 <wcrtomb@plt+0x10c94>
  4134f8:	ldur	x9, [x29, #-24]
  4134fc:	add	x8, x9, x8
  413500:	b	413510 <wcrtomb@plt+0x10ca0>
  413504:	ldur	x8, [x29, #-32]
  413508:	add	x9, x8, #0x8
  41350c:	stur	x9, [x29, #-32]
  413510:	ldr	w3, [x8]
  413514:	bl	4027b0 <openat@plt>
  413518:	bl	414e4c <wcrtomb@plt+0x125dc>
  41351c:	ldp	x29, x30, [sp, #208]
  413520:	add	sp, sp, #0xe0
  413524:	ret
  413528:	stp	x29, x30, [sp, #-48]!
  41352c:	str	x21, [sp, #16]
  413530:	stp	x20, x19, [sp, #32]
  413534:	mov	x29, sp
  413538:	mov	x19, x0
  41353c:	bl	4027e0 <__errno_location@plt>
  413540:	ldr	w21, [x0]
  413544:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  413548:	add	x8, x8, #0x770
  41354c:	cmp	x19, #0x0
  413550:	mov	x20, x0
  413554:	csel	x0, x8, x19, eq  // eq = none
  413558:	mov	w1, #0x38                  	// #56
  41355c:	bl	41581c <wcrtomb@plt+0x12fac>
  413560:	str	w21, [x20]
  413564:	ldp	x20, x19, [sp, #32]
  413568:	ldr	x21, [sp, #16]
  41356c:	ldp	x29, x30, [sp], #48
  413570:	ret
  413574:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  413578:	add	x8, x8, #0x770
  41357c:	cmp	x0, #0x0
  413580:	csel	x8, x8, x0, eq  // eq = none
  413584:	ldr	w0, [x8]
  413588:	ret
  41358c:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  413590:	add	x8, x8, #0x770
  413594:	cmp	x0, #0x0
  413598:	csel	x8, x8, x0, eq  // eq = none
  41359c:	str	w1, [x8]
  4135a0:	ret
  4135a4:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  4135a8:	add	x8, x8, #0x770
  4135ac:	cmp	x0, #0x0
  4135b0:	ubfx	w9, w1, #5, #3
  4135b4:	csel	x8, x8, x0, eq  // eq = none
  4135b8:	add	x8, x8, w9, uxtw #2
  4135bc:	ldr	w9, [x8, #8]
  4135c0:	lsr	w10, w9, w1
  4135c4:	and	w0, w10, #0x1
  4135c8:	and	w10, w2, #0x1
  4135cc:	eor	w10, w0, w10
  4135d0:	lsl	w10, w10, w1
  4135d4:	eor	w9, w10, w9
  4135d8:	str	w9, [x8, #8]
  4135dc:	ret
  4135e0:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  4135e4:	add	x8, x8, #0x770
  4135e8:	cmp	x0, #0x0
  4135ec:	csel	x8, x8, x0, eq  // eq = none
  4135f0:	ldr	w0, [x8, #4]
  4135f4:	str	w1, [x8, #4]
  4135f8:	ret
  4135fc:	stp	x29, x30, [sp, #-16]!
  413600:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  413604:	add	x8, x8, #0x770
  413608:	cmp	x0, #0x0
  41360c:	csel	x8, x8, x0, eq  // eq = none
  413610:	mov	w9, #0xa                   	// #10
  413614:	mov	x29, sp
  413618:	str	w9, [x8]
  41361c:	cbz	x1, 413630 <wcrtomb@plt+0x10dc0>
  413620:	cbz	x2, 413630 <wcrtomb@plt+0x10dc0>
  413624:	stp	x1, x2, [x8, #40]
  413628:	ldp	x29, x30, [sp], #16
  41362c:	ret
  413630:	bl	402560 <abort@plt>
  413634:	sub	sp, sp, #0x60
  413638:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  41363c:	add	x8, x8, #0x770
  413640:	cmp	x4, #0x0
  413644:	stp	x29, x30, [sp, #16]
  413648:	str	x25, [sp, #32]
  41364c:	stp	x24, x23, [sp, #48]
  413650:	stp	x22, x21, [sp, #64]
  413654:	stp	x20, x19, [sp, #80]
  413658:	add	x29, sp, #0x10
  41365c:	mov	x19, x3
  413660:	mov	x20, x2
  413664:	mov	x21, x1
  413668:	mov	x22, x0
  41366c:	csel	x24, x8, x4, eq  // eq = none
  413670:	bl	4027e0 <__errno_location@plt>
  413674:	ldp	w4, w5, [x24]
  413678:	ldp	x7, x8, [x24, #40]
  41367c:	ldr	w25, [x0]
  413680:	mov	x23, x0
  413684:	add	x6, x24, #0x8
  413688:	mov	x0, x22
  41368c:	mov	x1, x21
  413690:	mov	x2, x20
  413694:	mov	x3, x19
  413698:	str	x8, [sp]
  41369c:	bl	4136c0 <wcrtomb@plt+0x10e50>
  4136a0:	str	w25, [x23]
  4136a4:	ldp	x20, x19, [sp, #80]
  4136a8:	ldp	x22, x21, [sp, #64]
  4136ac:	ldp	x24, x23, [sp, #48]
  4136b0:	ldr	x25, [sp, #32]
  4136b4:	ldp	x29, x30, [sp, #16]
  4136b8:	add	sp, sp, #0x60
  4136bc:	ret
  4136c0:	sub	sp, sp, #0x120
  4136c4:	stp	x29, x30, [sp, #192]
  4136c8:	add	x29, sp, #0xc0
  4136cc:	ldr	x8, [x29, #96]
  4136d0:	stp	x28, x27, [sp, #208]
  4136d4:	stp	x26, x25, [sp, #224]
  4136d8:	stp	x24, x23, [sp, #240]
  4136dc:	stp	x22, x21, [sp, #256]
  4136e0:	stp	x20, x19, [sp, #272]
  4136e4:	str	x7, [sp, #88]
  4136e8:	stur	x6, [x29, #-40]
  4136ec:	mov	w19, w5
  4136f0:	mov	w22, w4
  4136f4:	mov	x28, x3
  4136f8:	mov	x20, x2
  4136fc:	mov	x24, x1
  413700:	stur	x8, [x29, #-88]
  413704:	mov	x21, x0
  413708:	bl	402630 <__ctype_get_mb_cur_max@plt>
  41370c:	mov	w4, w22
  413710:	mov	w8, wzr
  413714:	mov	w14, wzr
  413718:	str	w19, [sp, #80]
  41371c:	ubfx	w19, w19, #1, #1
  413720:	add	x9, x20, #0x1
  413724:	mov	w25, #0x1                   	// #1
  413728:	str	x0, [sp, #48]
  41372c:	str	xzr, [sp, #64]
  413730:	stur	xzr, [x29, #-64]
  413734:	stur	xzr, [x29, #-32]
  413738:	str	wzr, [sp, #72]
  41373c:	stur	x20, [x29, #-80]
  413740:	str	x9, [sp, #96]
  413744:	cmp	w4, #0xa
  413748:	b.hi	414314 <wcrtomb@plt+0x11aa4>  // b.pmore
  41374c:	adrp	x12, 42a000 <_obstack_memory_used@@Base+0x11d70>
  413750:	mov	w9, w4
  413754:	add	x12, x12, #0x930
  413758:	mov	x22, x24
  41375c:	adr	x10, 41377c <wcrtomb@plt+0x10f0c>
  413760:	ldrb	w11, [x12, x9]
  413764:	add	x10, x10, x11, lsl #2
  413768:	ldur	x24, [x29, #-80]
  41376c:	mov	x20, xzr
  413770:	mov	w16, wzr
  413774:	mov	w9, #0x1                   	// #1
  413778:	br	x10
  41377c:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  413780:	add	x0, x0, #0xa8c
  413784:	mov	w1, w4
  413788:	mov	w20, w4
  41378c:	mov	w23, w14
  413790:	bl	414c60 <wcrtomb@plt+0x123f0>
  413794:	str	x0, [sp, #88]
  413798:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  41379c:	add	x0, x0, #0x91c
  4137a0:	mov	w1, w20
  4137a4:	bl	414c60 <wcrtomb@plt+0x123f0>
  4137a8:	mov	w14, w23
  4137ac:	mov	w4, w20
  4137b0:	stur	x0, [x29, #-88]
  4137b4:	tbnz	w19, #0, 4137f8 <wcrtomb@plt+0x10f88>
  4137b8:	ldr	x8, [sp, #88]
  4137bc:	ldrb	w9, [x8]
  4137c0:	cbz	w9, 4137f8 <wcrtomb@plt+0x10f88>
  4137c4:	mov	w27, w14
  4137c8:	mov	w26, w4
  4137cc:	mov	x10, xzr
  4137d0:	add	x8, x8, #0x1
  4137d4:	b	4137e8 <wcrtomb@plt+0x10f78>
  4137d8:	ldrb	w9, [x8, x10]
  4137dc:	add	x20, x10, #0x1
  4137e0:	mov	x10, x20
  4137e4:	cbz	w9, 413804 <wcrtomb@plt+0x10f94>
  4137e8:	cmp	x10, x22
  4137ec:	b.cs	4137d8 <wcrtomb@plt+0x10f68>  // b.hs, b.nlast
  4137f0:	strb	w9, [x21, x10]
  4137f4:	b	4137d8 <wcrtomb@plt+0x10f68>
  4137f8:	mov	w27, w14
  4137fc:	mov	w26, w4
  413800:	mov	x20, xzr
  413804:	ldur	x23, [x29, #-88]
  413808:	mov	x0, x23
  41380c:	bl	402270 <strlen@plt>
  413810:	stur	x0, [x29, #-32]
  413814:	stur	x23, [x29, #-64]
  413818:	mov	w9, #0x1                   	// #1
  41381c:	mov	w16, w19
  413820:	mov	w4, w26
  413824:	mov	w14, w27
  413828:	b	4138d0 <wcrtomb@plt+0x11060>
  41382c:	mov	w8, #0x1                   	// #1
  413830:	b	4138ac <wcrtomb@plt+0x1103c>
  413834:	mov	w4, wzr
  413838:	mov	x20, xzr
  41383c:	mov	w16, wzr
  413840:	mov	w9, w8
  413844:	b	4138d0 <wcrtomb@plt+0x11060>
  413848:	tbnz	w19, #0, 4138ac <wcrtomb@plt+0x1103c>
  41384c:	mov	w9, w8
  413850:	mov	w16, wzr
  413854:	cbz	x22, 413860 <wcrtomb@plt+0x10ff0>
  413858:	mov	w8, #0x27                  	// #39
  41385c:	strb	w8, [x21]
  413860:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x11d70>
  413864:	add	x8, x8, #0x91c
  413868:	stur	x8, [x29, #-64]
  41386c:	mov	w8, #0x1                   	// #1
  413870:	mov	w4, #0x2                   	// #2
  413874:	mov	w20, #0x1                   	// #1
  413878:	stur	x8, [x29, #-32]
  41387c:	b	4138d0 <wcrtomb@plt+0x11060>
  413880:	tbz	w19, #0, 4141ac <wcrtomb@plt+0x1193c>
  413884:	mov	w8, #0x1                   	// #1
  413888:	stur	x8, [x29, #-32]
  41388c:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x11d70>
  413890:	add	x8, x8, #0x5ec
  413894:	mov	x20, xzr
  413898:	mov	w4, #0x5                   	// #5
  41389c:	stur	x8, [x29, #-64]
  4138a0:	mov	w9, #0x1                   	// #1
  4138a4:	b	4138cc <wcrtomb@plt+0x1105c>
  4138a8:	tbz	w19, #0, 4141e0 <wcrtomb@plt+0x11970>
  4138ac:	mov	w9, #0x1                   	// #1
  4138b0:	stur	x9, [x29, #-32]
  4138b4:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4138b8:	add	x9, x9, #0x91c
  4138bc:	mov	x20, xzr
  4138c0:	mov	w4, #0x2                   	// #2
  4138c4:	stur	x9, [x29, #-64]
  4138c8:	mov	w9, w8
  4138cc:	mov	w16, #0x1                   	// #1
  4138d0:	mov	w15, w9
  4138d4:	ldp	x8, x9, [x29, #-40]
  4138d8:	eor	w17, w16, #0x1
  4138dc:	stur	w17, [x29, #-68]
  4138e0:	mov	x23, xzr
  4138e4:	cmp	x8, #0x0
  4138e8:	cset	w8, eq  // eq = none
  4138ec:	cmp	x9, #0x0
  4138f0:	cset	w9, ne  // ne = any
  4138f4:	cmp	w4, #0x2
  4138f8:	cset	w10, ne  // ne = any
  4138fc:	and	w13, w10, w15
  413900:	and	w12, w9, w16
  413904:	orr	w10, w10, w17
  413908:	and	w17, w9, w13
  41390c:	orr	w9, w13, w16
  413910:	eor	w9, w9, #0x1
  413914:	cset	w11, eq  // eq = none
  413918:	orr	w8, w8, w9
  41391c:	and	w12, w15, w12
  413920:	str	w10, [sp, #84]
  413924:	and	w10, w11, w16
  413928:	stur	w8, [x29, #-24]
  41392c:	eor	w8, w15, #0x1
  413930:	str	w12, [sp, #56]
  413934:	str	w10, [sp, #76]
  413938:	stur	w15, [x29, #-72]
  41393c:	str	w8, [sp, #60]
  413940:	stp	w16, w4, [x29, #-48]
  413944:	stur	w17, [x29, #-52]
  413948:	cmn	x28, #0x1
  41394c:	b.eq	41395c <wcrtomb@plt+0x110ec>  // b.none
  413950:	cmp	x23, x28
  413954:	b.ne	413964 <wcrtomb@plt+0x110f4>  // b.any
  413958:	b	41413c <wcrtomb@plt+0x118cc>
  41395c:	ldrb	w8, [x24, x23]
  413960:	cbz	w8, 414144 <wcrtomb@plt+0x118d4>
  413964:	cbz	w17, 4139a4 <wcrtomb@plt+0x11134>
  413968:	ldur	x8, [x29, #-32]
  41396c:	cmp	x8, #0x2
  413970:	add	x19, x23, x8
  413974:	b.cc	41399c <wcrtomb@plt+0x1112c>  // b.lo, b.ul, b.last
  413978:	cmn	x28, #0x1
  41397c:	b.ne	41399c <wcrtomb@plt+0x1112c>  // b.any
  413980:	mov	x0, x24
  413984:	mov	w26, w14
  413988:	bl	402270 <strlen@plt>
  41398c:	ldp	w17, w16, [x29, #-52]
  413990:	ldur	w4, [x29, #-44]
  413994:	mov	w14, w26
  413998:	mov	x28, x0
  41399c:	cmp	x19, x28
  4139a0:	b.ls	4139ac <wcrtomb@plt+0x1113c>  // b.plast
  4139a4:	mov	w27, wzr
  4139a8:	b	4139e4 <wcrtomb@plt+0x11174>
  4139ac:	ldur	x1, [x29, #-64]
  4139b0:	ldur	x2, [x29, #-32]
  4139b4:	add	x0, x24, x23
  4139b8:	mov	w19, w14
  4139bc:	bl	402490 <bcmp@plt>
  4139c0:	ldur	w9, [x29, #-68]
  4139c4:	cmp	w0, #0x0
  4139c8:	cset	w8, ne  // ne = any
  4139cc:	cset	w27, eq  // eq = none
  4139d0:	orr	w8, w8, w9
  4139d4:	tbz	w8, #0, 414218 <wcrtomb@plt+0x119a8>
  4139d8:	ldp	w16, w4, [x29, #-48]
  4139dc:	ldur	w17, [x29, #-52]
  4139e0:	mov	w14, w19
  4139e4:	ldrb	w19, [x24, x23]
  4139e8:	cmp	w19, #0x7e
  4139ec:	b.hi	413c2c <wcrtomb@plt+0x113bc>  // b.pmore
  4139f0:	adrp	x13, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4139f4:	add	x13, x13, #0x93b
  4139f8:	adr	x12, 413a1c <wcrtomb@plt+0x111ac>
  4139fc:	ldrb	w9, [x13, x19]
  413a00:	add	x12, x12, x9, lsl #2
  413a04:	mov	w10, wzr
  413a08:	mov	w8, wzr
  413a0c:	mov	w26, #0x1                   	// #1
  413a10:	mov	w11, #0x6e                  	// #110
  413a14:	mov	w9, #0x61                  	// #97
  413a18:	br	x12
  413a1c:	ldur	w9, [x29, #-24]
  413a20:	tbnz	w9, #0, 413a40 <wcrtomb@plt+0x111d0>
  413a24:	ldur	x10, [x29, #-40]
  413a28:	lsr	w9, w19, #5
  413a2c:	ldr	w9, [x10, w9, uxtw #2]
  413a30:	lsr	w9, w9, w19
  413a34:	tbz	w9, #0, 413a40 <wcrtomb@plt+0x111d0>
  413a38:	mov	w9, w19
  413a3c:	b	413a48 <wcrtomb@plt+0x111d8>
  413a40:	mov	w9, w19
  413a44:	cbz	w27, 413c90 <wcrtomb@plt+0x11420>
  413a48:	tbnz	w16, #0, 4141f0 <wcrtomb@plt+0x11980>
  413a4c:	cmp	w4, #0x2
  413a50:	cset	w8, ne  // ne = any
  413a54:	orr	w8, w8, w14
  413a58:	tbnz	w8, #0, 413a9c <wcrtomb@plt+0x1122c>
  413a5c:	cmp	x20, x22
  413a60:	b.cs	413a6c <wcrtomb@plt+0x111fc>  // b.hs, b.nlast
  413a64:	mov	w8, #0x27                  	// #39
  413a68:	strb	w8, [x21, x20]
  413a6c:	add	x8, x20, #0x1
  413a70:	cmp	x8, x22
  413a74:	b.cs	413a80 <wcrtomb@plt+0x11210>  // b.hs, b.nlast
  413a78:	mov	w10, #0x24                  	// #36
  413a7c:	strb	w10, [x21, x8]
  413a80:	add	x8, x20, #0x2
  413a84:	cmp	x8, x22
  413a88:	b.cs	413a94 <wcrtomb@plt+0x11224>  // b.hs, b.nlast
  413a8c:	mov	w10, #0x27                  	// #39
  413a90:	strb	w10, [x21, x8]
  413a94:	add	x20, x20, #0x3
  413a98:	mov	w14, #0x1                   	// #1
  413a9c:	cmp	x20, x22
  413aa0:	b.cs	413aac <wcrtomb@plt+0x1123c>  // b.hs, b.nlast
  413aa4:	mov	w8, #0x5c                  	// #92
  413aa8:	strb	w8, [x21, x20]
  413aac:	add	x20, x20, #0x1
  413ab0:	cmp	x20, x22
  413ab4:	b.cs	413abc <wcrtomb@plt+0x1124c>  // b.hs, b.nlast
  413ab8:	strb	w9, [x21, x20]
  413abc:	add	x20, x20, #0x1
  413ac0:	and	w25, w25, w26
  413ac4:	add	x23, x23, #0x1
  413ac8:	cmn	x28, #0x1
  413acc:	b.ne	413950 <wcrtomb@plt+0x110e0>  // b.any
  413ad0:	b	41395c <wcrtomb@plt+0x110ec>
  413ad4:	cmp	x28, #0x1
  413ad8:	b.eq	413afc <wcrtomb@plt+0x1128c>  // b.none
  413adc:	cmn	x28, #0x1
  413ae0:	b.ne	413b00 <wcrtomb@plt+0x11290>  // b.any
  413ae4:	ldrb	w8, [x24, #1]
  413ae8:	cbz	w8, 413afc <wcrtomb@plt+0x1128c>
  413aec:	mov	w8, wzr
  413af0:	mov	w26, wzr
  413af4:	mov	x28, #0xffffffffffffffff    	// #-1
  413af8:	b	413a1c <wcrtomb@plt+0x111ac>
  413afc:	cbz	x23, 413b0c <wcrtomb@plt+0x1129c>
  413b00:	mov	w8, wzr
  413b04:	mov	w26, wzr
  413b08:	b	413a1c <wcrtomb@plt+0x111ac>
  413b0c:	mov	w10, #0x1                   	// #1
  413b10:	cmp	w4, #0x2
  413b14:	b.ne	413b1c <wcrtomb@plt+0x112ac>  // b.any
  413b18:	tbnz	w16, #0, 4141f0 <wcrtomb@plt+0x11980>
  413b1c:	mov	w8, wzr
  413b20:	mov	w26, w10
  413b24:	b	413a1c <wcrtomb@plt+0x111ac>
  413b28:	cmp	w4, #0x2
  413b2c:	b.ne	413c78 <wcrtomb@plt+0x11408>  // b.any
  413b30:	tbz	w16, #0, 413c84 <wcrtomb@plt+0x11414>
  413b34:	b	4141f0 <wcrtomb@plt+0x11980>
  413b38:	mov	w9, #0x66                  	// #102
  413b3c:	b	413cd4 <wcrtomb@plt+0x11464>
  413b40:	mov	w11, #0x74                  	// #116
  413b44:	b	413b54 <wcrtomb@plt+0x112e4>
  413b48:	mov	w9, #0x62                  	// #98
  413b4c:	b	413cd4 <wcrtomb@plt+0x11464>
  413b50:	mov	w11, #0x72                  	// #114
  413b54:	ldr	w8, [sp, #84]
  413b58:	mov	w9, w11
  413b5c:	tbnz	w8, #0, 413cd4 <wcrtomb@plt+0x11464>
  413b60:	b	4141f0 <wcrtomb@plt+0x11980>
  413b64:	ldur	w8, [x29, #-72]
  413b68:	tbz	w8, #0, 413ce8 <wcrtomb@plt+0x11478>
  413b6c:	cmp	w4, #0x2
  413b70:	tbnz	w16, #0, 414308 <wcrtomb@plt+0x11a98>
  413b74:	cset	w8, ne  // ne = any
  413b78:	orr	w8, w8, w14
  413b7c:	tbz	w8, #0, 414018 <wcrtomb@plt+0x117a8>
  413b80:	mov	x8, x20
  413b84:	cmp	x8, x22
  413b88:	b.cc	414060 <wcrtomb@plt+0x117f0>  // b.lo, b.ul, b.last
  413b8c:	b	414068 <wcrtomb@plt+0x117f8>
  413b90:	cmp	w4, #0x5
  413b94:	b.eq	413e14 <wcrtomb@plt+0x115a4>  // b.none
  413b98:	cmp	w4, #0x2
  413b9c:	b.ne	413ec4 <wcrtomb@plt+0x11654>  // b.any
  413ba0:	tbz	w16, #0, 413ec4 <wcrtomb@plt+0x11654>
  413ba4:	b	4141f0 <wcrtomb@plt+0x11980>
  413ba8:	mov	w9, #0x76                  	// #118
  413bac:	b	413cd4 <wcrtomb@plt+0x11464>
  413bb0:	cmp	w4, #0x2
  413bb4:	b.ne	413cf8 <wcrtomb@plt+0x11488>  // b.any
  413bb8:	tbnz	w16, #0, 4141f0 <wcrtomb@plt+0x11980>
  413bbc:	ldr	x10, [sp, #64]
  413bc0:	cmp	x22, #0x0
  413bc4:	cset	w8, eq  // eq = none
  413bc8:	cmp	x10, #0x0
  413bcc:	cset	w9, ne  // ne = any
  413bd0:	orr	w8, w9, w8
  413bd4:	cmp	w8, #0x0
  413bd8:	csel	x10, x10, x22, ne  // ne = any
  413bdc:	csel	x22, x22, xzr, ne  // ne = any
  413be0:	cmp	x20, x22
  413be4:	str	x10, [sp, #64]
  413be8:	b.cs	413bf4 <wcrtomb@plt+0x11384>  // b.hs, b.nlast
  413bec:	mov	w8, #0x27                  	// #39
  413bf0:	strb	w8, [x21, x20]
  413bf4:	add	x8, x20, #0x1
  413bf8:	cmp	x8, x22
  413bfc:	b.cs	413c08 <wcrtomb@plt+0x11398>  // b.hs, b.nlast
  413c00:	mov	w9, #0x5c                  	// #92
  413c04:	strb	w9, [x21, x8]
  413c08:	add	x8, x20, #0x2
  413c0c:	cmp	x8, x22
  413c10:	b.cs	413c1c <wcrtomb@plt+0x113ac>  // b.hs, b.nlast
  413c14:	mov	w9, #0x27                  	// #39
  413c18:	strb	w9, [x21, x8]
  413c1c:	mov	w14, wzr
  413c20:	mov	w8, wzr
  413c24:	add	x20, x20, #0x3
  413c28:	b	413cfc <wcrtomb@plt+0x1148c>
  413c2c:	ldr	x8, [sp, #48]
  413c30:	str	w14, [sp, #28]
  413c34:	cmp	x8, #0x1
  413c38:	b.ne	413d10 <wcrtomb@plt+0x114a0>  // b.any
  413c3c:	bl	402610 <__ctype_b_loc@plt>
  413c40:	ldr	x8, [x0]
  413c44:	mov	w11, #0x1                   	// #1
  413c48:	ldrh	w8, [x8, x19, lsl #1]
  413c4c:	ubfx	w26, w8, #14, #1
  413c50:	ldr	w8, [sp, #60]
  413c54:	ldp	w16, w4, [x29, #-48]
  413c58:	ldr	w14, [sp, #28]
  413c5c:	ldur	w17, [x29, #-52]
  413c60:	cmp	x11, #0x1
  413c64:	orr	w8, w26, w8
  413c68:	b.hi	413ed4 <wcrtomb@plt+0x11664>  // b.pmore
  413c6c:	tbz	w8, #0, 413ed4 <wcrtomb@plt+0x11664>
  413c70:	mov	w8, wzr
  413c74:	b	413a1c <wcrtomb@plt+0x111ac>
  413c78:	ldr	w8, [sp, #56]
  413c7c:	mov	w9, #0x5c                  	// #92
  413c80:	tbz	w8, #0, 413cd4 <wcrtomb@plt+0x11464>
  413c84:	mov	w8, wzr
  413c88:	mov	w26, wzr
  413c8c:	mov	w19, #0x5c                  	// #92
  413c90:	tbnz	w8, #0, 413cc4 <wcrtomb@plt+0x11454>
  413c94:	tbz	w14, #0, 413cc4 <wcrtomb@plt+0x11454>
  413c98:	cmp	x20, x22
  413c9c:	b.cs	413ca8 <wcrtomb@plt+0x11438>  // b.hs, b.nlast
  413ca0:	mov	w8, #0x27                  	// #39
  413ca4:	strb	w8, [x21, x20]
  413ca8:	add	x8, x20, #0x1
  413cac:	cmp	x8, x22
  413cb0:	b.cs	413cbc <wcrtomb@plt+0x1144c>  // b.hs, b.nlast
  413cb4:	mov	w9, #0x27                  	// #39
  413cb8:	strb	w9, [x21, x8]
  413cbc:	mov	w14, wzr
  413cc0:	add	x20, x20, #0x2
  413cc4:	mov	w9, w19
  413cc8:	cmp	x20, x22
  413ccc:	b.cc	413ab8 <wcrtomb@plt+0x11248>  // b.lo, b.ul, b.last
  413cd0:	b	413abc <wcrtomb@plt+0x1124c>
  413cd4:	ldur	w10, [x29, #-72]
  413cd8:	mov	w8, wzr
  413cdc:	mov	w26, wzr
  413ce0:	tbz	w10, #0, 413a1c <wcrtomb@plt+0x111ac>
  413ce4:	b	413a48 <wcrtomb@plt+0x111d8>
  413ce8:	ldr	w8, [sp, #80]
  413cec:	tbnz	w8, #0, 413ac4 <wcrtomb@plt+0x11254>
  413cf0:	mov	w19, wzr
  413cf4:	b	413b00 <wcrtomb@plt+0x11290>
  413cf8:	mov	w8, wzr
  413cfc:	mov	w9, #0x1                   	// #1
  413d00:	mov	w19, #0x27                  	// #39
  413d04:	str	w9, [sp, #72]
  413d08:	mov	w26, #0x1                   	// #1
  413d0c:	b	413a1c <wcrtomb@plt+0x111ac>
  413d10:	cmn	x28, #0x1
  413d14:	stur	xzr, [x29, #-16]
  413d18:	b.ne	413d28 <wcrtomb@plt+0x114b8>  // b.any
  413d1c:	mov	x0, x24
  413d20:	bl	402270 <strlen@plt>
  413d24:	mov	x28, x0
  413d28:	ldr	x8, [sp, #96]
  413d2c:	mov	x11, xzr
  413d30:	mov	w26, #0x1                   	// #1
  413d34:	str	x21, [sp, #32]
  413d38:	add	x8, x8, x23
  413d3c:	str	x8, [sp, #16]
  413d40:	b	413d78 <wcrtomb@plt+0x11508>
  413d44:	ldur	w0, [x29, #-20]
  413d48:	bl	402790 <iswprint@plt>
  413d4c:	ldr	x21, [sp, #40]
  413d50:	cmp	w0, #0x0
  413d54:	cset	w8, ne  // ne = any
  413d58:	sub	x0, x29, #0x10
  413d5c:	and	w26, w26, w8
  413d60:	add	x21, x24, x21
  413d64:	bl	402580 <mbsinit@plt>
  413d68:	mov	x11, x21
  413d6c:	ldr	x21, [sp, #32]
  413d70:	ldur	x24, [x29, #-80]
  413d74:	cbnz	w0, 413c50 <wcrtomb@plt+0x113e0>
  413d78:	add	x21, x11, x23
  413d7c:	add	x1, x24, x21
  413d80:	sub	x2, x28, x21
  413d84:	sub	x0, x29, #0x14
  413d88:	sub	x3, x29, #0x10
  413d8c:	str	x11, [sp, #40]
  413d90:	bl	417eb0 <wcrtomb@plt+0x15640>
  413d94:	cbz	x0, 41411c <wcrtomb@plt+0x118ac>
  413d98:	mov	x24, x0
  413d9c:	cmn	x0, #0x1
  413da0:	b.eq	414118 <wcrtomb@plt+0x118a8>  // b.none
  413da4:	cmn	x24, #0x2
  413da8:	b.eq	4140dc <wcrtomb@plt+0x1186c>  // b.none
  413dac:	ldr	w9, [sp, #76]
  413db0:	ldr	x21, [sp, #32]
  413db4:	cmp	x24, #0x2
  413db8:	cset	w8, cc  // cc = lo, ul, last
  413dbc:	eor	w9, w9, #0x1
  413dc0:	mov	x12, #0x2b                  	// #43
  413dc4:	orr	w8, w9, w8
  413dc8:	mov	w11, #0x1                   	// #1
  413dcc:	movk	x12, #0x2, lsl #32
  413dd0:	tbnz	w8, #0, 413d44 <wcrtomb@plt+0x114d4>
  413dd4:	ldr	x9, [sp, #40]
  413dd8:	ldr	x10, [sp, #16]
  413ddc:	sub	x8, x24, #0x1
  413de0:	add	x9, x10, x9
  413de4:	b	413df4 <wcrtomb@plt+0x11584>
  413de8:	subs	x8, x8, #0x1
  413dec:	add	x9, x9, #0x1
  413df0:	b.eq	413d44 <wcrtomb@plt+0x114d4>  // b.none
  413df4:	ldrb	w10, [x9]
  413df8:	sub	w10, w10, #0x5b
  413dfc:	cmp	w10, #0x21
  413e00:	b.hi	413de8 <wcrtomb@plt+0x11578>  // b.pmore
  413e04:	lsl	x10, x11, x10
  413e08:	tst	x10, x12
  413e0c:	b.eq	413de8 <wcrtomb@plt+0x11578>  // b.none
  413e10:	b	414224 <wcrtomb@plt+0x119b4>
  413e14:	ldr	w8, [sp, #80]
  413e18:	tbz	w8, #2, 413ec4 <wcrtomb@plt+0x11654>
  413e1c:	add	x9, x23, #0x2
  413e20:	cmp	x9, x28
  413e24:	b.cs	413ec4 <wcrtomb@plt+0x11654>  // b.hs, b.nlast
  413e28:	add	x8, x23, x24
  413e2c:	ldrb	w8, [x8, #1]
  413e30:	cmp	w8, #0x3f
  413e34:	b.ne	413ec4 <wcrtomb@plt+0x11654>  // b.any
  413e38:	ldrb	w19, [x24, x9]
  413e3c:	mov	w8, wzr
  413e40:	cmp	w19, #0x3e
  413e44:	b.hi	414130 <wcrtomb@plt+0x118c0>  // b.pmore
  413e48:	mov	w10, #0x1                   	// #1
  413e4c:	mov	x11, #0xa38200000000        	// #179778741075968
  413e50:	lsl	x10, x10, x19
  413e54:	movk	x11, #0x7000, lsl #48
  413e58:	tst	x10, x11
  413e5c:	b.eq	414130 <wcrtomb@plt+0x118c0>  // b.none
  413e60:	tbnz	w16, #0, 4141f0 <wcrtomb@plt+0x11980>
  413e64:	cmp	x20, x22
  413e68:	b.cs	413e74 <wcrtomb@plt+0x11604>  // b.hs, b.nlast
  413e6c:	mov	w8, #0x3f                  	// #63
  413e70:	strb	w8, [x21, x20]
  413e74:	add	x8, x20, #0x1
  413e78:	cmp	x8, x22
  413e7c:	b.cs	413e88 <wcrtomb@plt+0x11618>  // b.hs, b.nlast
  413e80:	mov	w10, #0x22                  	// #34
  413e84:	strb	w10, [x21, x8]
  413e88:	add	x8, x20, #0x2
  413e8c:	cmp	x8, x22
  413e90:	b.cs	413e9c <wcrtomb@plt+0x1162c>  // b.hs, b.nlast
  413e94:	mov	w10, #0x22                  	// #34
  413e98:	strb	w10, [x21, x8]
  413e9c:	add	x8, x20, #0x3
  413ea0:	cmp	x8, x22
  413ea4:	b.cs	413eb0 <wcrtomb@plt+0x11640>  // b.hs, b.nlast
  413ea8:	mov	w10, #0x3f                  	// #63
  413eac:	strb	w10, [x21, x8]
  413eb0:	mov	w8, wzr
  413eb4:	mov	w26, wzr
  413eb8:	add	x20, x20, #0x4
  413ebc:	mov	x23, x9
  413ec0:	b	413a1c <wcrtomb@plt+0x111ac>
  413ec4:	mov	w8, wzr
  413ec8:	mov	w26, wzr
  413ecc:	mov	w19, #0x3f                  	// #63
  413ed0:	b	413a1c <wcrtomb@plt+0x111ac>
  413ed4:	mov	w10, wzr
  413ed8:	add	x9, x11, x23
  413edc:	b	413ef0 <wcrtomb@plt+0x11680>
  413ee0:	ldr	x12, [sp, #96]
  413ee4:	add	x20, x20, #0x1
  413ee8:	ldrb	w19, [x12, x23]
  413eec:	mov	x23, x11
  413ef0:	tbz	w8, #0, 413f14 <wcrtomb@plt+0x116a4>
  413ef4:	tbz	w27, #0, 413fc0 <wcrtomb@plt+0x11750>
  413ef8:	cmp	x20, x22
  413efc:	b.cs	413f08 <wcrtomb@plt+0x11698>  // b.hs, b.nlast
  413f00:	mov	w11, #0x5c                  	// #92
  413f04:	strb	w11, [x21, x20]
  413f08:	mov	w27, wzr
  413f0c:	add	x20, x20, #0x1
  413f10:	b	413fc4 <wcrtomb@plt+0x11754>
  413f14:	tbnz	w16, #0, 4141f0 <wcrtomb@plt+0x11980>
  413f18:	cmp	w4, #0x2
  413f1c:	cset	w10, ne  // ne = any
  413f20:	orr	w10, w10, w14
  413f24:	tbnz	w10, #0, 413f68 <wcrtomb@plt+0x116f8>
  413f28:	cmp	x20, x22
  413f2c:	b.cs	413f38 <wcrtomb@plt+0x116c8>  // b.hs, b.nlast
  413f30:	mov	w10, #0x27                  	// #39
  413f34:	strb	w10, [x21, x20]
  413f38:	add	x10, x20, #0x1
  413f3c:	cmp	x10, x22
  413f40:	b.cs	413f4c <wcrtomb@plt+0x116dc>  // b.hs, b.nlast
  413f44:	mov	w11, #0x24                  	// #36
  413f48:	strb	w11, [x21, x10]
  413f4c:	add	x10, x20, #0x2
  413f50:	cmp	x10, x22
  413f54:	b.cs	413f60 <wcrtomb@plt+0x116f0>  // b.hs, b.nlast
  413f58:	mov	w11, #0x27                  	// #39
  413f5c:	strb	w11, [x21, x10]
  413f60:	add	x20, x20, #0x3
  413f64:	mov	w14, #0x1                   	// #1
  413f68:	cmp	x20, x22
  413f6c:	b.cs	413f78 <wcrtomb@plt+0x11708>  // b.hs, b.nlast
  413f70:	mov	w10, #0x5c                  	// #92
  413f74:	strb	w10, [x21, x20]
  413f78:	add	x10, x20, #0x1
  413f7c:	cmp	x10, x22
  413f80:	b.cs	413f90 <wcrtomb@plt+0x11720>  // b.hs, b.nlast
  413f84:	mov	w11, #0x30                  	// #48
  413f88:	bfxil	w11, w19, #6, #2
  413f8c:	strb	w11, [x21, x10]
  413f90:	add	x10, x20, #0x2
  413f94:	cmp	x10, x22
  413f98:	b.cs	413fa8 <wcrtomb@plt+0x11738>  // b.hs, b.nlast
  413f9c:	mov	w11, #0x30                  	// #48
  413fa0:	bfxil	w11, w19, #3, #3
  413fa4:	strb	w11, [x21, x10]
  413fa8:	mov	w11, #0x30                  	// #48
  413fac:	bfxil	w11, w19, #0, #3
  413fb0:	add	x20, x20, #0x3
  413fb4:	mov	w10, #0x1                   	// #1
  413fb8:	mov	w19, w11
  413fbc:	b	413fc4 <wcrtomb@plt+0x11754>
  413fc0:	mov	w27, wzr
  413fc4:	add	x11, x23, #0x1
  413fc8:	cmp	x9, x11
  413fcc:	b.ls	4140d0 <wcrtomb@plt+0x11860>  // b.plast
  413fd0:	and	w12, w10, #0x1
  413fd4:	orn	w12, w12, w14
  413fd8:	tbnz	w12, #0, 414008 <wcrtomb@plt+0x11798>
  413fdc:	cmp	x20, x22
  413fe0:	b.cs	413fec <wcrtomb@plt+0x1177c>  // b.hs, b.nlast
  413fe4:	mov	w12, #0x27                  	// #39
  413fe8:	strb	w12, [x21, x20]
  413fec:	add	x12, x20, #0x1
  413ff0:	cmp	x12, x22
  413ff4:	b.cs	414000 <wcrtomb@plt+0x11790>  // b.hs, b.nlast
  413ff8:	mov	w13, #0x27                  	// #39
  413ffc:	strb	w13, [x21, x12]
  414000:	mov	w14, wzr
  414004:	add	x20, x20, #0x2
  414008:	cmp	x20, x22
  41400c:	b.cs	413ee0 <wcrtomb@plt+0x11670>  // b.hs, b.nlast
  414010:	strb	w19, [x21, x20]
  414014:	b	413ee0 <wcrtomb@plt+0x11670>
  414018:	cmp	x20, x22
  41401c:	b.cs	414028 <wcrtomb@plt+0x117b8>  // b.hs, b.nlast
  414020:	mov	w8, #0x27                  	// #39
  414024:	strb	w8, [x21, x20]
  414028:	add	x8, x20, #0x1
  41402c:	cmp	x8, x22
  414030:	b.cs	41403c <wcrtomb@plt+0x117cc>  // b.hs, b.nlast
  414034:	mov	w9, #0x24                  	// #36
  414038:	strb	w9, [x21, x8]
  41403c:	add	x8, x20, #0x2
  414040:	cmp	x8, x22
  414044:	b.cs	414050 <wcrtomb@plt+0x117e0>  // b.hs, b.nlast
  414048:	mov	w9, #0x27                  	// #39
  41404c:	strb	w9, [x21, x8]
  414050:	add	x8, x20, #0x3
  414054:	mov	w14, #0x1                   	// #1
  414058:	cmp	x8, x22
  41405c:	b.cs	414068 <wcrtomb@plt+0x117f8>  // b.hs, b.nlast
  414060:	mov	w9, #0x5c                  	// #92
  414064:	strb	w9, [x21, x8]
  414068:	cmp	w4, #0x2
  41406c:	add	x20, x8, #0x1
  414070:	b.eq	4140c0 <wcrtomb@plt+0x11850>  // b.none
  414074:	add	x9, x23, #0x1
  414078:	cmp	x9, x28
  41407c:	b.cs	4140c0 <wcrtomb@plt+0x11850>  // b.hs, b.nlast
  414080:	ldrb	w9, [x24, x9]
  414084:	sub	w9, w9, #0x30
  414088:	cmp	w9, #0x9
  41408c:	b.hi	4140c0 <wcrtomb@plt+0x11850>  // b.pmore
  414090:	cmp	x20, x22
  414094:	b.cs	4140a0 <wcrtomb@plt+0x11830>  // b.hs, b.nlast
  414098:	mov	w9, #0x30                  	// #48
  41409c:	strb	w9, [x21, x20]
  4140a0:	add	x9, x8, #0x2
  4140a4:	cmp	x9, x22
  4140a8:	b.cs	4140b4 <wcrtomb@plt+0x11844>  // b.hs, b.nlast
  4140ac:	mov	w10, #0x30                  	// #48
  4140b0:	strb	w10, [x21, x9]
  4140b4:	mov	w26, wzr
  4140b8:	add	x20, x8, #0x3
  4140bc:	b	4140c4 <wcrtomb@plt+0x11854>
  4140c0:	mov	w26, wzr
  4140c4:	mov	w8, #0x1                   	// #1
  4140c8:	mov	w19, #0x30                  	// #48
  4140cc:	b	413a1c <wcrtomb@plt+0x111ac>
  4140d0:	and	w8, w10, #0x1
  4140d4:	tbz	w8, #0, 413c94 <wcrtomb@plt+0x11424>
  4140d8:	b	413cc4 <wcrtomb@plt+0x11454>
  4140dc:	cmp	x28, x21
  4140e0:	b.ls	414118 <wcrtomb@plt+0x118a8>  // b.plast
  4140e4:	ldur	x24, [x29, #-80]
  4140e8:	ldp	x21, x11, [sp, #32]
  4140ec:	sub	x8, x28, x23
  4140f0:	add	x9, x24, x23
  4140f4:	ldrb	w10, [x9, x11]
  4140f8:	cbz	w10, 414128 <wcrtomb@plt+0x118b8>
  4140fc:	add	x11, x11, #0x1
  414100:	add	x10, x23, x11
  414104:	cmp	x10, x28
  414108:	b.cc	4140f4 <wcrtomb@plt+0x11884>  // b.lo, b.ul, b.last
  41410c:	mov	w26, wzr
  414110:	mov	x11, x8
  414114:	b	413c50 <wcrtomb@plt+0x113e0>
  414118:	mov	w26, wzr
  41411c:	ldp	x21, x11, [sp, #32]
  414120:	ldur	x24, [x29, #-80]
  414124:	b	413c50 <wcrtomb@plt+0x113e0>
  414128:	mov	w26, wzr
  41412c:	b	413c50 <wcrtomb@plt+0x113e0>
  414130:	mov	w19, #0x3f                  	// #63
  414134:	mov	w26, w8
  414138:	b	413a1c <wcrtomb@plt+0x111ac>
  41413c:	mov	x28, x23
  414140:	b	414148 <wcrtomb@plt+0x118d8>
  414144:	mov	x28, #0xffffffffffffffff    	// #-1
  414148:	cmp	w4, #0x2
  41414c:	ldur	w10, [x29, #-72]
  414150:	cset	w8, eq  // eq = none
  414154:	cmp	x20, #0x0
  414158:	cset	w9, eq  // eq = none
  41415c:	and	w8, w8, w9
  414160:	and	w8, w16, w8
  414164:	tbnz	w8, #0, 4141f4 <wcrtomb@plt+0x11984>
  414168:	cmp	w4, #0x2
  41416c:	cset	w8, ne  // ne = any
  414170:	orr	w8, w16, w8
  414174:	tbnz	w8, #0, 4142c0 <wcrtomb@plt+0x11a50>
  414178:	ldr	w8, [sp, #72]
  41417c:	eor	w8, w8, #0x1
  414180:	tbnz	w8, #0, 4142c0 <wcrtomb@plt+0x11a50>
  414184:	tbnz	w25, #0, 414290 <wcrtomb@plt+0x11a20>
  414188:	ldr	x24, [sp, #64]
  41418c:	mov	w19, wzr
  414190:	cbz	x24, 4142bc <wcrtomb@plt+0x11a4c>
  414194:	mov	w4, #0x2                   	// #2
  414198:	mov	w8, w10
  41419c:	mov	w25, w19
  4141a0:	mov	w16, w19
  4141a4:	cbz	x22, 413744 <wcrtomb@plt+0x10ed4>
  4141a8:	b	4142c0 <wcrtomb@plt+0x11a50>
  4141ac:	mov	w16, wzr
  4141b0:	cbz	x22, 4141bc <wcrtomb@plt+0x1194c>
  4141b4:	mov	w8, #0x22                  	// #34
  4141b8:	strb	w8, [x21]
  4141bc:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4141c0:	add	x8, x8, #0x5ec
  4141c4:	stur	x8, [x29, #-64]
  4141c8:	mov	w8, #0x1                   	// #1
  4141cc:	mov	w20, #0x1                   	// #1
  4141d0:	mov	w4, #0x5                   	// #5
  4141d4:	stur	x8, [x29, #-32]
  4141d8:	mov	w9, #0x1                   	// #1
  4141dc:	b	4138d0 <wcrtomb@plt+0x11060>
  4141e0:	mov	w9, #0x1                   	// #1
  4141e4:	mov	w16, wzr
  4141e8:	cbnz	x22, 413858 <wcrtomb@plt+0x10fe8>
  4141ec:	b	413860 <wcrtomb@plt+0x10ff0>
  4141f0:	ldur	w10, [x29, #-72]
  4141f4:	tst	w10, #0x1
  4141f8:	mov	w8, #0x2                   	// #2
  4141fc:	mov	w9, #0x4                   	// #4
  414200:	csel	w8, w9, w8, ne  // ne = any
  414204:	cmp	w4, #0x2
  414208:	b.ne	414210 <wcrtomb@plt+0x119a0>  // b.any
  41420c:	mov	w4, w8
  414210:	ldr	x7, [sp, #88]
  414214:	b	414240 <wcrtomb@plt+0x119d0>
  414218:	ldr	x7, [sp, #88]
  41421c:	ldur	w4, [x29, #-44]
  414220:	b	414240 <wcrtomb@plt+0x119d0>
  414224:	ldur	w8, [x29, #-72]
  414228:	ldr	x7, [sp, #88]
  41422c:	ldur	x24, [x29, #-80]
  414230:	mov	w9, #0x4                   	// #4
  414234:	tst	w8, #0x1
  414238:	mov	w8, #0x2                   	// #2
  41423c:	csel	w4, w9, w8, ne  // ne = any
  414240:	ldr	w8, [sp, #80]
  414244:	mov	x0, x21
  414248:	mov	x1, x22
  41424c:	mov	x2, x24
  414250:	and	w5, w8, #0xfffffffd
  414254:	ldur	x8, [x29, #-88]
  414258:	mov	x3, x28
  41425c:	mov	x6, xzr
  414260:	str	x8, [sp]
  414264:	bl	4136c0 <wcrtomb@plt+0x10e50>
  414268:	mov	x20, x0
  41426c:	mov	x0, x20
  414270:	ldp	x20, x19, [sp, #272]
  414274:	ldp	x22, x21, [sp, #256]
  414278:	ldp	x24, x23, [sp, #240]
  41427c:	ldp	x26, x25, [sp, #224]
  414280:	ldp	x28, x27, [sp, #208]
  414284:	ldp	x29, x30, [sp, #192]
  414288:	add	sp, sp, #0x120
  41428c:	ret
  414290:	ldur	x8, [x29, #-88]
  414294:	ldr	x1, [sp, #64]
  414298:	ldur	x2, [x29, #-80]
  41429c:	ldr	w5, [sp, #80]
  4142a0:	ldur	x6, [x29, #-40]
  4142a4:	ldr	x7, [sp, #88]
  4142a8:	mov	w4, #0x5                   	// #5
  4142ac:	str	x8, [sp]
  4142b0:	mov	x0, x21
  4142b4:	mov	x3, x28
  4142b8:	b	414264 <wcrtomb@plt+0x119f4>
  4142bc:	mov	w16, w19
  4142c0:	ldur	x8, [x29, #-64]
  4142c4:	cbz	x8, 4142f8 <wcrtomb@plt+0x11a88>
  4142c8:	tbnz	w16, #0, 4142f8 <wcrtomb@plt+0x11a88>
  4142cc:	ldrb	w9, [x8]
  4142d0:	cbz	w9, 4142f8 <wcrtomb@plt+0x11a88>
  4142d4:	add	x8, x8, #0x1
  4142d8:	b	4142e8 <wcrtomb@plt+0x11a78>
  4142dc:	ldrb	w9, [x8], #1
  4142e0:	add	x20, x20, #0x1
  4142e4:	cbz	w9, 4142f8 <wcrtomb@plt+0x11a88>
  4142e8:	cmp	x20, x22
  4142ec:	b.cs	4142dc <wcrtomb@plt+0x11a6c>  // b.hs, b.nlast
  4142f0:	strb	w9, [x21, x20]
  4142f4:	b	4142dc <wcrtomb@plt+0x11a6c>
  4142f8:	cmp	x20, x22
  4142fc:	b.cs	41426c <wcrtomb@plt+0x119fc>  // b.hs, b.nlast
  414300:	strb	wzr, [x21, x20]
  414304:	b	41426c <wcrtomb@plt+0x119fc>
  414308:	b.ne	414210 <wcrtomb@plt+0x119a0>  // b.any
  41430c:	mov	w4, #0x4                   	// #4
  414310:	b	414210 <wcrtomb@plt+0x119a0>
  414314:	bl	402560 <abort@plt>
  414318:	sub	sp, sp, #0x60
  41431c:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  414320:	add	x8, x8, #0x770
  414324:	cmp	x2, #0x0
  414328:	stp	x29, x30, [sp, #16]
  41432c:	stp	x26, x25, [sp, #32]
  414330:	stp	x24, x23, [sp, #48]
  414334:	stp	x22, x21, [sp, #64]
  414338:	stp	x20, x19, [sp, #80]
  41433c:	add	x29, sp, #0x10
  414340:	mov	x19, x1
  414344:	mov	x20, x0
  414348:	csel	x25, x8, x2, eq  // eq = none
  41434c:	bl	4027e0 <__errno_location@plt>
  414350:	ldp	w4, w8, [x25]
  414354:	ldp	x7, x9, [x25, #40]
  414358:	ldr	w26, [x0]
  41435c:	add	x23, x25, #0x8
  414360:	orr	w22, w8, #0x1
  414364:	mov	x21, x0
  414368:	mov	x0, xzr
  41436c:	mov	x1, xzr
  414370:	mov	x2, x20
  414374:	mov	x3, x19
  414378:	mov	w5, w22
  41437c:	mov	x6, x23
  414380:	str	x9, [sp]
  414384:	bl	4136c0 <wcrtomb@plt+0x10e50>
  414388:	add	x24, x0, #0x1
  41438c:	mov	x0, x24
  414390:	bl	4155d4 <wcrtomb@plt+0x12d64>
  414394:	ldr	w4, [x25]
  414398:	ldp	x7, x8, [x25, #40]
  41439c:	mov	x1, x24
  4143a0:	mov	x2, x20
  4143a4:	mov	x3, x19
  4143a8:	mov	w5, w22
  4143ac:	mov	x6, x23
  4143b0:	mov	x25, x0
  4143b4:	str	x8, [sp]
  4143b8:	bl	4136c0 <wcrtomb@plt+0x10e50>
  4143bc:	str	w26, [x21]
  4143c0:	mov	x0, x25
  4143c4:	ldp	x20, x19, [sp, #80]
  4143c8:	ldp	x22, x21, [sp, #64]
  4143cc:	ldp	x24, x23, [sp, #48]
  4143d0:	ldp	x26, x25, [sp, #32]
  4143d4:	ldp	x29, x30, [sp, #16]
  4143d8:	add	sp, sp, #0x60
  4143dc:	ret
  4143e0:	sub	sp, sp, #0x70
  4143e4:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  4143e8:	add	x8, x8, #0x770
  4143ec:	cmp	x3, #0x0
  4143f0:	stp	x29, x30, [sp, #16]
  4143f4:	stp	x28, x27, [sp, #32]
  4143f8:	stp	x26, x25, [sp, #48]
  4143fc:	stp	x24, x23, [sp, #64]
  414400:	stp	x22, x21, [sp, #80]
  414404:	stp	x20, x19, [sp, #96]
  414408:	add	x29, sp, #0x10
  41440c:	mov	x19, x2
  414410:	mov	x22, x1
  414414:	mov	x23, x0
  414418:	csel	x21, x8, x3, eq  // eq = none
  41441c:	bl	4027e0 <__errno_location@plt>
  414420:	ldp	w4, w8, [x21]
  414424:	cmp	x19, #0x0
  414428:	ldp	x7, x9, [x21, #40]
  41442c:	ldr	w28, [x0]
  414430:	cset	w10, eq  // eq = none
  414434:	orr	w25, w8, w10
  414438:	add	x26, x21, #0x8
  41443c:	mov	x24, x0
  414440:	mov	x0, xzr
  414444:	mov	x1, xzr
  414448:	mov	x2, x23
  41444c:	mov	x3, x22
  414450:	mov	w5, w25
  414454:	mov	x6, x26
  414458:	str	x9, [sp]
  41445c:	bl	4136c0 <wcrtomb@plt+0x10e50>
  414460:	add	x27, x0, #0x1
  414464:	mov	x20, x0
  414468:	mov	x0, x27
  41446c:	bl	4155d4 <wcrtomb@plt+0x12d64>
  414470:	ldr	w4, [x21]
  414474:	ldp	x7, x8, [x21, #40]
  414478:	mov	x1, x27
  41447c:	mov	x2, x23
  414480:	mov	x3, x22
  414484:	mov	w5, w25
  414488:	mov	x6, x26
  41448c:	mov	x21, x0
  414490:	str	x8, [sp]
  414494:	bl	4136c0 <wcrtomb@plt+0x10e50>
  414498:	str	w28, [x24]
  41449c:	cbz	x19, 4144a4 <wcrtomb@plt+0x11c34>
  4144a0:	str	x20, [x19]
  4144a4:	mov	x0, x21
  4144a8:	ldp	x20, x19, [sp, #96]
  4144ac:	ldp	x22, x21, [sp, #80]
  4144b0:	ldp	x24, x23, [sp, #64]
  4144b4:	ldp	x26, x25, [sp, #48]
  4144b8:	ldp	x28, x27, [sp, #32]
  4144bc:	ldp	x29, x30, [sp, #16]
  4144c0:	add	sp, sp, #0x70
  4144c4:	ret
  4144c8:	stp	x29, x30, [sp, #-64]!
  4144cc:	stp	x20, x19, [sp, #48]
  4144d0:	adrp	x20, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4144d4:	stp	x22, x21, [sp, #32]
  4144d8:	ldr	w8, [x20, #976]
  4144dc:	adrp	x21, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4144e0:	ldr	x19, [x21, #968]
  4144e4:	str	x23, [sp, #16]
  4144e8:	cmp	w8, #0x2
  4144ec:	mov	x29, sp
  4144f0:	b.lt	414514 <wcrtomb@plt+0x11ca4>  // b.tstop
  4144f4:	add	x22, x19, #0x18
  4144f8:	mov	w23, #0x1                   	// #1
  4144fc:	ldr	x0, [x22], #16
  414500:	bl	402620 <free@plt>
  414504:	ldrsw	x8, [x20, #976]
  414508:	add	x23, x23, #0x1
  41450c:	cmp	x23, x8
  414510:	b.lt	4144fc <wcrtomb@plt+0x11c8c>  // b.tstop
  414514:	ldr	x0, [x19, #8]
  414518:	adrp	x23, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  41451c:	add	x23, x23, #0x7a8
  414520:	adrp	x22, 43c000 <_obstack_memory_used@@Base+0x23d70>
  414524:	cmp	x0, x23
  414528:	add	x22, x22, #0x3d8
  41452c:	b.eq	41453c <wcrtomb@plt+0x11ccc>  // b.none
  414530:	bl	402620 <free@plt>
  414534:	mov	w8, #0x100                 	// #256
  414538:	stp	x8, x23, [x22]
  41453c:	cmp	x19, x22
  414540:	b.eq	414550 <wcrtomb@plt+0x11ce0>  // b.none
  414544:	mov	x0, x19
  414548:	bl	402620 <free@plt>
  41454c:	str	x22, [x21, #968]
  414550:	mov	w8, #0x1                   	// #1
  414554:	str	w8, [x20, #976]
  414558:	ldp	x20, x19, [sp, #48]
  41455c:	ldp	x22, x21, [sp, #32]
  414560:	ldr	x23, [sp, #16]
  414564:	ldp	x29, x30, [sp], #64
  414568:	ret
  41456c:	adrp	x3, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  414570:	add	x3, x3, #0x770
  414574:	mov	x2, #0xffffffffffffffff    	// #-1
  414578:	b	41457c <wcrtomb@plt+0x11d0c>
  41457c:	sub	sp, sp, #0x80
  414580:	stp	x29, x30, [sp, #32]
  414584:	add	x29, sp, #0x20
  414588:	stp	x28, x27, [sp, #48]
  41458c:	stp	x26, x25, [sp, #64]
  414590:	stp	x24, x23, [sp, #80]
  414594:	stp	x22, x21, [sp, #96]
  414598:	stp	x20, x19, [sp, #112]
  41459c:	mov	x22, x3
  4145a0:	stur	x2, [x29, #-8]
  4145a4:	mov	x21, x1
  4145a8:	mov	w23, w0
  4145ac:	bl	4027e0 <__errno_location@plt>
  4145b0:	tbnz	w23, #31, 414700 <wcrtomb@plt+0x11e90>
  4145b4:	adrp	x25, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4145b8:	ldr	w8, [x25, #976]
  4145bc:	adrp	x28, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4145c0:	ldr	w20, [x0]
  4145c4:	ldr	x27, [x28, #968]
  4145c8:	mov	x19, x0
  4145cc:	cmp	w8, w23
  4145d0:	b.gt	41463c <wcrtomb@plt+0x11dcc>
  4145d4:	mov	w8, #0x7fffffff            	// #2147483647
  4145d8:	cmp	w23, w8
  4145dc:	stur	w20, [x29, #-12]
  4145e0:	b.eq	414704 <wcrtomb@plt+0x11e94>  // b.none
  4145e4:	adrp	x20, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4145e8:	add	x20, x20, #0x3d8
  4145ec:	add	w26, w23, #0x1
  4145f0:	cmp	x27, x20
  4145f4:	csel	x0, xzr, x27, eq  // eq = none
  4145f8:	sbfiz	x1, x26, #4, #32
  4145fc:	bl	415654 <wcrtomb@plt+0x12de4>
  414600:	mov	x24, x0
  414604:	cmp	x27, x20
  414608:	str	x0, [x28, #968]
  41460c:	b.ne	414618 <wcrtomb@plt+0x11da8>  // b.any
  414610:	ldr	q0, [x20]
  414614:	str	q0, [x24]
  414618:	ldrsw	x8, [x25, #976]
  41461c:	mov	w1, wzr
  414620:	add	x0, x24, x8, lsl #4
  414624:	sub	w8, w26, w8
  414628:	sbfiz	x2, x8, #4, #32
  41462c:	bl	402470 <memset@plt>
  414630:	ldur	w20, [x29, #-12]
  414634:	mov	x27, x24
  414638:	str	w26, [x25, #976]
  41463c:	add	x28, x27, w23, uxtw #4
  414640:	mov	x27, x28
  414644:	ldr	x26, [x28]
  414648:	ldr	x23, [x27, #8]!
  41464c:	ldp	w4, w8, [x22]
  414650:	ldp	x7, x9, [x22, #40]
  414654:	ldur	x3, [x29, #-8]
  414658:	add	x24, x22, #0x8
  41465c:	orr	w25, w8, #0x1
  414660:	mov	x0, x23
  414664:	mov	x1, x26
  414668:	mov	x2, x21
  41466c:	mov	w5, w25
  414670:	mov	x6, x24
  414674:	str	x9, [sp]
  414678:	bl	4136c0 <wcrtomb@plt+0x10e50>
  41467c:	cmp	x26, x0
  414680:	b.hi	4146d8 <wcrtomb@plt+0x11e68>  // b.pmore
  414684:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  414688:	add	x8, x8, #0x7a8
  41468c:	add	x26, x0, #0x1
  414690:	cmp	x23, x8
  414694:	str	x26, [x28]
  414698:	b.eq	4146a4 <wcrtomb@plt+0x11e34>  // b.none
  41469c:	mov	x0, x23
  4146a0:	bl	402620 <free@plt>
  4146a4:	mov	x0, x26
  4146a8:	bl	4155d4 <wcrtomb@plt+0x12d64>
  4146ac:	str	x0, [x27]
  4146b0:	ldr	w4, [x22]
  4146b4:	ldp	x7, x8, [x22, #40]
  4146b8:	ldur	x3, [x29, #-8]
  4146bc:	mov	x1, x26
  4146c0:	mov	x2, x21
  4146c4:	mov	w5, w25
  4146c8:	mov	x6, x24
  4146cc:	mov	x23, x0
  4146d0:	str	x8, [sp]
  4146d4:	bl	4136c0 <wcrtomb@plt+0x10e50>
  4146d8:	str	w20, [x19]
  4146dc:	mov	x0, x23
  4146e0:	ldp	x20, x19, [sp, #112]
  4146e4:	ldp	x22, x21, [sp, #96]
  4146e8:	ldp	x24, x23, [sp, #80]
  4146ec:	ldp	x26, x25, [sp, #64]
  4146f0:	ldp	x28, x27, [sp, #48]
  4146f4:	ldp	x29, x30, [sp, #32]
  4146f8:	add	sp, sp, #0x80
  4146fc:	ret
  414700:	bl	402560 <abort@plt>
  414704:	bl	415898 <wcrtomb@plt+0x13028>
  414708:	adrp	x3, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  41470c:	add	x3, x3, #0x770
  414710:	b	41457c <wcrtomb@plt+0x11d0c>
  414714:	adrp	x3, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  414718:	add	x3, x3, #0x770
  41471c:	mov	x2, #0xffffffffffffffff    	// #-1
  414720:	mov	x1, x0
  414724:	mov	w0, wzr
  414728:	b	41457c <wcrtomb@plt+0x11d0c>
  41472c:	adrp	x3, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  414730:	mov	x2, x1
  414734:	add	x3, x3, #0x770
  414738:	mov	x1, x0
  41473c:	mov	w0, wzr
  414740:	b	41457c <wcrtomb@plt+0x11d0c>
  414744:	sub	sp, sp, #0x50
  414748:	movi	v0.2d, #0x0
  41474c:	cmp	w1, #0xa
  414750:	stp	x29, x30, [sp, #64]
  414754:	add	x29, sp, #0x40
  414758:	str	xzr, [sp, #48]
  41475c:	stp	q0, q0, [sp, #16]
  414760:	str	q0, [sp]
  414764:	b.eq	41478c <wcrtomb@plt+0x11f1c>  // b.none
  414768:	mov	x8, x2
  41476c:	str	w1, [sp]
  414770:	mov	x3, sp
  414774:	mov	x2, #0xffffffffffffffff    	// #-1
  414778:	mov	x1, x8
  41477c:	bl	41457c <wcrtomb@plt+0x11d0c>
  414780:	ldp	x29, x30, [sp, #64]
  414784:	add	sp, sp, #0x50
  414788:	ret
  41478c:	bl	402560 <abort@plt>
  414790:	sub	sp, sp, #0x50
  414794:	movi	v0.2d, #0x0
  414798:	cmp	w1, #0xa
  41479c:	stp	x29, x30, [sp, #64]
  4147a0:	add	x29, sp, #0x40
  4147a4:	str	xzr, [sp, #48]
  4147a8:	stp	q0, q0, [sp, #16]
  4147ac:	str	q0, [sp]
  4147b0:	b.eq	4147d8 <wcrtomb@plt+0x11f68>  // b.none
  4147b4:	mov	x8, x3
  4147b8:	str	w1, [sp]
  4147bc:	mov	x3, sp
  4147c0:	mov	x1, x2
  4147c4:	mov	x2, x8
  4147c8:	bl	41457c <wcrtomb@plt+0x11d0c>
  4147cc:	ldp	x29, x30, [sp, #64]
  4147d0:	add	sp, sp, #0x50
  4147d4:	ret
  4147d8:	bl	402560 <abort@plt>
  4147dc:	sub	sp, sp, #0x50
  4147e0:	movi	v0.2d, #0x0
  4147e4:	cmp	w0, #0xa
  4147e8:	stp	x29, x30, [sp, #64]
  4147ec:	add	x29, sp, #0x40
  4147f0:	str	xzr, [sp, #48]
  4147f4:	stp	q0, q0, [sp, #16]
  4147f8:	str	q0, [sp]
  4147fc:	b.eq	414820 <wcrtomb@plt+0x11fb0>  // b.none
  414800:	str	w0, [sp]
  414804:	mov	x3, sp
  414808:	mov	x2, #0xffffffffffffffff    	// #-1
  41480c:	mov	w0, wzr
  414810:	bl	41457c <wcrtomb@plt+0x11d0c>
  414814:	ldp	x29, x30, [sp, #64]
  414818:	add	sp, sp, #0x50
  41481c:	ret
  414820:	bl	402560 <abort@plt>
  414824:	sub	sp, sp, #0x50
  414828:	movi	v0.2d, #0x0
  41482c:	cmp	w0, #0xa
  414830:	stp	x29, x30, [sp, #64]
  414834:	add	x29, sp, #0x40
  414838:	str	xzr, [sp, #48]
  41483c:	stp	q0, q0, [sp, #16]
  414840:	str	q0, [sp]
  414844:	b.eq	414864 <wcrtomb@plt+0x11ff4>  // b.none
  414848:	str	w0, [sp]
  41484c:	mov	x3, sp
  414850:	mov	w0, wzr
  414854:	bl	41457c <wcrtomb@plt+0x11d0c>
  414858:	ldp	x29, x30, [sp, #64]
  41485c:	add	sp, sp, #0x50
  414860:	ret
  414864:	bl	402560 <abort@plt>
  414868:	sub	sp, sp, #0x50
  41486c:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  414870:	add	x9, x9, #0x770
  414874:	ldp	q0, q1, [x9]
  414878:	ubfx	w10, w2, #5, #3
  41487c:	mov	x11, sp
  414880:	mov	x8, x1
  414884:	stp	q0, q1, [sp]
  414888:	ldr	q0, [x9, #32]
  41488c:	ldr	x9, [x9, #48]
  414890:	mov	x1, x0
  414894:	mov	x3, sp
  414898:	str	q0, [sp, #32]
  41489c:	str	x9, [sp, #48]
  4148a0:	add	x9, x11, w10, uxtw #2
  4148a4:	ldr	w10, [x9, #8]
  4148a8:	mov	w0, wzr
  4148ac:	stp	x29, x30, [sp, #64]
  4148b0:	add	x29, sp, #0x40
  4148b4:	lsr	w11, w10, w2
  4148b8:	mvn	w11, w11
  4148bc:	and	w11, w11, #0x1
  4148c0:	lsl	w11, w11, w2
  4148c4:	eor	w10, w11, w10
  4148c8:	mov	x2, x8
  4148cc:	str	w10, [x9, #8]
  4148d0:	bl	41457c <wcrtomb@plt+0x11d0c>
  4148d4:	ldp	x29, x30, [sp, #64]
  4148d8:	add	sp, sp, #0x50
  4148dc:	ret
  4148e0:	sub	sp, sp, #0x50
  4148e4:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  4148e8:	add	x9, x9, #0x770
  4148ec:	ldp	q0, q1, [x9]
  4148f0:	ubfx	w10, w1, #5, #3
  4148f4:	mov	x11, sp
  4148f8:	mov	x8, x0
  4148fc:	stp	q0, q1, [sp]
  414900:	ldr	q0, [x9, #32]
  414904:	ldr	x9, [x9, #48]
  414908:	mov	x3, sp
  41490c:	mov	x2, #0xffffffffffffffff    	// #-1
  414910:	str	q0, [sp, #32]
  414914:	str	x9, [sp, #48]
  414918:	add	x9, x11, w10, uxtw #2
  41491c:	ldr	w10, [x9, #8]
  414920:	mov	w0, wzr
  414924:	stp	x29, x30, [sp, #64]
  414928:	add	x29, sp, #0x40
  41492c:	lsr	w11, w10, w1
  414930:	mvn	w11, w11
  414934:	and	w11, w11, #0x1
  414938:	lsl	w11, w11, w1
  41493c:	eor	w10, w11, w10
  414940:	mov	x1, x8
  414944:	str	w10, [x9, #8]
  414948:	bl	41457c <wcrtomb@plt+0x11d0c>
  41494c:	ldp	x29, x30, [sp, #64]
  414950:	add	sp, sp, #0x50
  414954:	ret
  414958:	sub	sp, sp, #0x50
  41495c:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  414960:	add	x8, x8, #0x770
  414964:	ldp	q0, q1, [x8]
  414968:	ldr	q2, [x8, #32]
  41496c:	ldr	x8, [x8, #48]
  414970:	mov	x1, x0
  414974:	stp	q0, q1, [sp]
  414978:	ldr	w9, [sp, #12]
  41497c:	str	x8, [sp, #48]
  414980:	mov	x3, sp
  414984:	mov	x2, #0xffffffffffffffff    	// #-1
  414988:	orr	w8, w9, #0x4000000
  41498c:	mov	w0, wzr
  414990:	stp	x29, x30, [sp, #64]
  414994:	add	x29, sp, #0x40
  414998:	str	q2, [sp, #32]
  41499c:	str	w8, [sp, #12]
  4149a0:	bl	41457c <wcrtomb@plt+0x11d0c>
  4149a4:	ldp	x29, x30, [sp, #64]
  4149a8:	add	sp, sp, #0x50
  4149ac:	ret
  4149b0:	sub	sp, sp, #0x50
  4149b4:	adrp	x8, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  4149b8:	add	x8, x8, #0x770
  4149bc:	ldp	q0, q1, [x8]
  4149c0:	ldr	q2, [x8, #32]
  4149c4:	ldr	x8, [x8, #48]
  4149c8:	mov	x2, x1
  4149cc:	stp	q0, q1, [sp]
  4149d0:	ldr	w9, [sp, #12]
  4149d4:	mov	x1, x0
  4149d8:	str	x8, [sp, #48]
  4149dc:	mov	x3, sp
  4149e0:	orr	w8, w9, #0x4000000
  4149e4:	mov	w0, wzr
  4149e8:	stp	x29, x30, [sp, #64]
  4149ec:	add	x29, sp, #0x40
  4149f0:	str	q2, [sp, #32]
  4149f4:	str	w8, [sp, #12]
  4149f8:	bl	41457c <wcrtomb@plt+0x11d0c>
  4149fc:	ldp	x29, x30, [sp, #64]
  414a00:	add	sp, sp, #0x50
  414a04:	ret
  414a08:	sub	sp, sp, #0x80
  414a0c:	movi	v0.2d, #0x0
  414a10:	cmp	w1, #0xa
  414a14:	stp	x29, x30, [sp, #112]
  414a18:	add	x29, sp, #0x70
  414a1c:	str	wzr, [sp, #48]
  414a20:	stp	q0, q0, [sp, #16]
  414a24:	str	q0, [sp]
  414a28:	b.eq	414a78 <wcrtomb@plt+0x12208>  // b.none
  414a2c:	ldp	q0, q1, [sp]
  414a30:	ldr	w9, [sp, #48]
  414a34:	ldr	q2, [sp, #32]
  414a38:	mov	x8, x2
  414a3c:	stur	q0, [sp, #60]
  414a40:	ldr	w10, [sp, #68]
  414a44:	str	w1, [sp, #56]
  414a48:	str	w9, [sp, #108]
  414a4c:	add	x3, sp, #0x38
  414a50:	orr	w9, w10, #0x4000000
  414a54:	mov	x2, #0xffffffffffffffff    	// #-1
  414a58:	mov	x1, x8
  414a5c:	stur	q1, [sp, #76]
  414a60:	stur	q2, [sp, #92]
  414a64:	str	w9, [sp, #68]
  414a68:	bl	41457c <wcrtomb@plt+0x11d0c>
  414a6c:	ldp	x29, x30, [sp, #112]
  414a70:	add	sp, sp, #0x80
  414a74:	ret
  414a78:	bl	402560 <abort@plt>
  414a7c:	sub	sp, sp, #0x50
  414a80:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  414a84:	add	x9, x9, #0x770
  414a88:	ldp	q0, q1, [x9]
  414a8c:	ldr	q2, [x9, #32]
  414a90:	ldr	x9, [x9, #48]
  414a94:	mov	w10, #0xa                   	// #10
  414a98:	stp	x29, x30, [sp, #64]
  414a9c:	add	x29, sp, #0x40
  414aa0:	stp	q0, q1, [sp]
  414aa4:	str	q2, [sp, #32]
  414aa8:	str	x9, [sp, #48]
  414aac:	str	w10, [sp]
  414ab0:	cbz	x1, 414adc <wcrtomb@plt+0x1226c>
  414ab4:	cbz	x2, 414adc <wcrtomb@plt+0x1226c>
  414ab8:	mov	x8, x3
  414abc:	stp	x1, x2, [sp, #40]
  414ac0:	mov	x3, sp
  414ac4:	mov	x2, #0xffffffffffffffff    	// #-1
  414ac8:	mov	x1, x8
  414acc:	bl	41457c <wcrtomb@plt+0x11d0c>
  414ad0:	ldp	x29, x30, [sp, #64]
  414ad4:	add	sp, sp, #0x50
  414ad8:	ret
  414adc:	bl	402560 <abort@plt>
  414ae0:	sub	sp, sp, #0x50
  414ae4:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  414ae8:	add	x9, x9, #0x770
  414aec:	ldp	q0, q1, [x9]
  414af0:	ldr	x10, [x9, #48]
  414af4:	stp	x29, x30, [sp, #64]
  414af8:	add	x29, sp, #0x40
  414afc:	stp	q0, q1, [sp]
  414b00:	ldr	q0, [x9, #32]
  414b04:	mov	w9, #0xa                   	// #10
  414b08:	str	x10, [sp, #48]
  414b0c:	str	w9, [sp]
  414b10:	str	q0, [sp, #32]
  414b14:	cbz	x1, 414b40 <wcrtomb@plt+0x122d0>
  414b18:	cbz	x2, 414b40 <wcrtomb@plt+0x122d0>
  414b1c:	mov	x8, x3
  414b20:	stp	x1, x2, [sp, #40]
  414b24:	mov	x3, sp
  414b28:	mov	x1, x8
  414b2c:	mov	x2, x4
  414b30:	bl	41457c <wcrtomb@plt+0x11d0c>
  414b34:	ldp	x29, x30, [sp, #64]
  414b38:	add	sp, sp, #0x50
  414b3c:	ret
  414b40:	bl	402560 <abort@plt>
  414b44:	sub	sp, sp, #0x50
  414b48:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  414b4c:	add	x9, x9, #0x770
  414b50:	ldp	q0, q1, [x9]
  414b54:	ldr	q2, [x9, #32]
  414b58:	ldr	x9, [x9, #48]
  414b5c:	mov	w10, #0xa                   	// #10
  414b60:	stp	x29, x30, [sp, #64]
  414b64:	add	x29, sp, #0x40
  414b68:	stp	q0, q1, [sp]
  414b6c:	str	q2, [sp, #32]
  414b70:	str	x9, [sp, #48]
  414b74:	str	w10, [sp]
  414b78:	cbz	x0, 414ba8 <wcrtomb@plt+0x12338>
  414b7c:	cbz	x1, 414ba8 <wcrtomb@plt+0x12338>
  414b80:	mov	x8, x2
  414b84:	stp	x0, x1, [sp, #40]
  414b88:	mov	x3, sp
  414b8c:	mov	x2, #0xffffffffffffffff    	// #-1
  414b90:	mov	w0, wzr
  414b94:	mov	x1, x8
  414b98:	bl	41457c <wcrtomb@plt+0x11d0c>
  414b9c:	ldp	x29, x30, [sp, #64]
  414ba0:	add	sp, sp, #0x50
  414ba4:	ret
  414ba8:	bl	402560 <abort@plt>
  414bac:	sub	sp, sp, #0x50
  414bb0:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  414bb4:	add	x9, x9, #0x770
  414bb8:	ldp	q0, q1, [x9]
  414bbc:	ldr	q2, [x9, #32]
  414bc0:	ldr	x9, [x9, #48]
  414bc4:	mov	w10, #0xa                   	// #10
  414bc8:	stp	x29, x30, [sp, #64]
  414bcc:	add	x29, sp, #0x40
  414bd0:	stp	q0, q1, [sp]
  414bd4:	str	q2, [sp, #32]
  414bd8:	str	x9, [sp, #48]
  414bdc:	str	w10, [sp]
  414be0:	cbz	x0, 414c10 <wcrtomb@plt+0x123a0>
  414be4:	cbz	x1, 414c10 <wcrtomb@plt+0x123a0>
  414be8:	mov	x8, x3
  414bec:	stp	x0, x1, [sp, #40]
  414bf0:	mov	x3, sp
  414bf4:	mov	w0, wzr
  414bf8:	mov	x1, x2
  414bfc:	mov	x2, x8
  414c00:	bl	41457c <wcrtomb@plt+0x11d0c>
  414c04:	ldp	x29, x30, [sp, #64]
  414c08:	add	sp, sp, #0x50
  414c0c:	ret
  414c10:	bl	402560 <abort@plt>
  414c14:	adrp	x3, 43c000 <_obstack_memory_used@@Base+0x23d70>
  414c18:	add	x3, x3, #0x3e8
  414c1c:	b	41457c <wcrtomb@plt+0x11d0c>
  414c20:	adrp	x3, 43c000 <_obstack_memory_used@@Base+0x23d70>
  414c24:	mov	x2, x1
  414c28:	add	x3, x3, #0x3e8
  414c2c:	mov	x1, x0
  414c30:	mov	w0, wzr
  414c34:	b	41457c <wcrtomb@plt+0x11d0c>
  414c38:	adrp	x3, 43c000 <_obstack_memory_used@@Base+0x23d70>
  414c3c:	add	x3, x3, #0x3e8
  414c40:	mov	x2, #0xffffffffffffffff    	// #-1
  414c44:	b	41457c <wcrtomb@plt+0x11d0c>
  414c48:	adrp	x3, 43c000 <_obstack_memory_used@@Base+0x23d70>
  414c4c:	add	x3, x3, #0x3e8
  414c50:	mov	x2, #0xffffffffffffffff    	// #-1
  414c54:	mov	x1, x0
  414c58:	mov	w0, wzr
  414c5c:	b	41457c <wcrtomb@plt+0x11d0c>
  414c60:	stp	x29, x30, [sp, #-32]!
  414c64:	stp	x20, x19, [sp, #16]
  414c68:	mov	x20, x0
  414c6c:	mov	w19, w1
  414c70:	mov	w2, #0x5                   	// #5
  414c74:	mov	x0, xzr
  414c78:	mov	x1, x20
  414c7c:	mov	x29, sp
  414c80:	bl	402740 <dcgettext@plt>
  414c84:	cmp	x0, x20
  414c88:	b.ne	414d6c <wcrtomb@plt+0x124fc>  // b.any
  414c8c:	bl	427bc0 <_obstack_memory_used@@Base+0xf930>
  414c90:	ldrb	w8, [x0]
  414c94:	and	w8, w8, #0xffffffdf
  414c98:	cmp	w8, #0x47
  414c9c:	b.eq	414d00 <wcrtomb@plt+0x12490>  // b.none
  414ca0:	cmp	w8, #0x55
  414ca4:	b.ne	414d54 <wcrtomb@plt+0x124e4>  // b.any
  414ca8:	ldrb	w8, [x0, #1]
  414cac:	and	w8, w8, #0xffffffdf
  414cb0:	cmp	w8, #0x54
  414cb4:	b.ne	414d54 <wcrtomb@plt+0x124e4>  // b.any
  414cb8:	ldrb	w8, [x0, #2]
  414cbc:	and	w8, w8, #0xffffffdf
  414cc0:	cmp	w8, #0x46
  414cc4:	b.ne	414d54 <wcrtomb@plt+0x124e4>  // b.any
  414cc8:	ldrb	w8, [x0, #3]
  414ccc:	cmp	w8, #0x2d
  414cd0:	b.ne	414d54 <wcrtomb@plt+0x124e4>  // b.any
  414cd4:	ldrb	w8, [x0, #4]
  414cd8:	cmp	w8, #0x38
  414cdc:	b.ne	414d54 <wcrtomb@plt+0x124e4>  // b.any
  414ce0:	ldrb	w8, [x0, #5]
  414ce4:	cbnz	w8, 414d54 <wcrtomb@plt+0x124e4>
  414ce8:	ldrb	w8, [x20]
  414cec:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x11d70>
  414cf0:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x11d70>
  414cf4:	add	x9, x9, #0xa92
  414cf8:	add	x10, x10, #0xa8e
  414cfc:	b	414d8c <wcrtomb@plt+0x1251c>
  414d00:	ldrb	w8, [x0, #1]
  414d04:	and	w8, w8, #0xffffffdf
  414d08:	cmp	w8, #0x42
  414d0c:	b.ne	414d54 <wcrtomb@plt+0x124e4>  // b.any
  414d10:	ldrb	w8, [x0, #2]
  414d14:	cmp	w8, #0x31
  414d18:	b.ne	414d54 <wcrtomb@plt+0x124e4>  // b.any
  414d1c:	ldrb	w8, [x0, #3]
  414d20:	cmp	w8, #0x38
  414d24:	b.ne	414d54 <wcrtomb@plt+0x124e4>  // b.any
  414d28:	ldrb	w8, [x0, #4]
  414d2c:	cmp	w8, #0x30
  414d30:	b.ne	414d54 <wcrtomb@plt+0x124e4>  // b.any
  414d34:	ldrb	w8, [x0, #5]
  414d38:	cmp	w8, #0x33
  414d3c:	b.ne	414d54 <wcrtomb@plt+0x124e4>  // b.any
  414d40:	ldrb	w8, [x0, #6]
  414d44:	cmp	w8, #0x30
  414d48:	b.ne	414d54 <wcrtomb@plt+0x124e4>  // b.any
  414d4c:	ldrb	w8, [x0, #7]
  414d50:	cbz	w8, 414d78 <wcrtomb@plt+0x12508>
  414d54:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x11d70>
  414d58:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x11d70>
  414d5c:	add	x8, x8, #0x91c
  414d60:	add	x9, x9, #0x5ec
  414d64:	cmp	w19, #0x9
  414d68:	csel	x0, x9, x8, eq  // eq = none
  414d6c:	ldp	x20, x19, [sp, #16]
  414d70:	ldp	x29, x30, [sp], #32
  414d74:	ret
  414d78:	ldrb	w8, [x20]
  414d7c:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x11d70>
  414d80:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x11d70>
  414d84:	add	x9, x9, #0xa9a
  414d88:	add	x10, x10, #0xa96
  414d8c:	cmp	w8, #0x60
  414d90:	csel	x0, x10, x9, eq  // eq = none
  414d94:	b	414d6c <wcrtomb@plt+0x124fc>
  414d98:	stp	x29, x30, [sp, #-64]!
  414d9c:	str	x23, [sp, #16]
  414da0:	mov	w23, #0x1                   	// #1
  414da4:	stp	x22, x21, [sp, #32]
  414da8:	stp	x20, x19, [sp, #48]
  414dac:	mov	x21, x2
  414db0:	mov	x19, x1
  414db4:	mov	w20, w0
  414db8:	movk	w23, #0x7ff0, lsl #16
  414dbc:	mov	x29, sp
  414dc0:	mov	w0, w20
  414dc4:	mov	x1, x19
  414dc8:	mov	x2, x21
  414dcc:	bl	4026c0 <read@plt>
  414dd0:	mov	x22, x0
  414dd4:	tbz	x0, #63, 414dfc <wcrtomb@plt+0x1258c>
  414dd8:	bl	4027e0 <__errno_location@plt>
  414ddc:	ldr	w8, [x0]
  414de0:	cmp	w8, #0x4
  414de4:	b.eq	414dc0 <wcrtomb@plt+0x12550>  // b.none
  414de8:	cmp	x21, x23
  414dec:	b.cc	414dfc <wcrtomb@plt+0x1258c>  // b.lo, b.ul, b.last
  414df0:	cmp	w8, #0x16
  414df4:	mov	w21, #0x7ff00000            	// #2146435072
  414df8:	b.eq	414dc0 <wcrtomb@plt+0x12550>  // b.none
  414dfc:	mov	x0, x22
  414e00:	ldp	x20, x19, [sp, #48]
  414e04:	ldp	x22, x21, [sp, #32]
  414e08:	ldr	x23, [sp, #16]
  414e0c:	ldp	x29, x30, [sp], #64
  414e10:	ret
  414e14:	stp	x29, x30, [sp, #-32]!
  414e18:	stp	x20, x19, [sp, #16]
  414e1c:	mov	x19, x1
  414e20:	mov	w1, wzr
  414e24:	mov	x2, x19
  414e28:	mov	x29, sp
  414e2c:	mov	x20, x0
  414e30:	bl	4026d0 <memchr@plt>
  414e34:	sub	x8, x0, x20
  414e38:	cmp	x0, #0x0
  414e3c:	csinc	x0, x19, x8, eq  // eq = none
  414e40:	ldp	x20, x19, [sp, #16]
  414e44:	ldp	x29, x30, [sp], #32
  414e48:	ret
  414e4c:	stp	x29, x30, [sp, #-48]!
  414e50:	stp	x20, x19, [sp, #32]
  414e54:	mov	w19, w0
  414e58:	cmp	w0, #0x2
  414e5c:	stp	x22, x21, [sp, #16]
  414e60:	mov	x29, sp
  414e64:	b.hi	414e94 <wcrtomb@plt+0x12624>  // b.pmore
  414e68:	mov	w0, w19
  414e6c:	bl	427dc0 <_obstack_memory_used@@Base+0xfb30>
  414e70:	mov	w20, w0
  414e74:	bl	4027e0 <__errno_location@plt>
  414e78:	ldr	w22, [x0]
  414e7c:	mov	x21, x0
  414e80:	mov	w0, w19
  414e84:	bl	4024f0 <close@plt>
  414e88:	str	w22, [x21]
  414e8c:	mov	w0, w20
  414e90:	b	414e98 <wcrtomb@plt+0x12628>
  414e94:	mov	w0, w19
  414e98:	ldp	x20, x19, [sp, #32]
  414e9c:	ldp	x22, x21, [sp, #16]
  414ea0:	ldp	x29, x30, [sp], #48
  414ea4:	ret
  414ea8:	sub	sp, sp, #0x50
  414eac:	stp	x22, x21, [sp, #48]
  414eb0:	stp	x20, x19, [sp, #64]
  414eb4:	mov	x21, x5
  414eb8:	mov	x20, x4
  414ebc:	mov	x4, x3
  414ec0:	mov	x3, x2
  414ec4:	mov	x19, x0
  414ec8:	stp	x29, x30, [sp, #32]
  414ecc:	add	x29, sp, #0x20
  414ed0:	cbz	x1, 414eec <wcrtomb@plt+0x1267c>
  414ed4:	mov	x2, x1
  414ed8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  414edc:	add	x1, x1, #0xaa7
  414ee0:	mov	x0, x19
  414ee4:	bl	402820 <fprintf@plt>
  414ee8:	b	414f04 <wcrtomb@plt+0x12694>
  414eec:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  414ef0:	add	x1, x1, #0xab3
  414ef4:	mov	x0, x19
  414ef8:	mov	x2, x3
  414efc:	mov	x3, x4
  414f00:	bl	402820 <fprintf@plt>
  414f04:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  414f08:	add	x1, x1, #0xaba
  414f0c:	mov	w2, #0x5                   	// #5
  414f10:	mov	x0, xzr
  414f14:	bl	402740 <dcgettext@plt>
  414f18:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  414f1c:	mov	x2, x0
  414f20:	add	x1, x1, #0xda6
  414f24:	mov	w3, #0x7e4                 	// #2020
  414f28:	mov	x0, x19
  414f2c:	bl	402820 <fprintf@plt>
  414f30:	adrp	x22, 429000 <_obstack_memory_used@@Base+0x10d70>
  414f34:	add	x22, x22, #0xb5c
  414f38:	mov	x0, x22
  414f3c:	mov	x1, x19
  414f40:	bl	402750 <fputs_unlocked@plt>
  414f44:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  414f48:	add	x1, x1, #0xabe
  414f4c:	mov	w2, #0x5                   	// #5
  414f50:	mov	x0, xzr
  414f54:	bl	402740 <dcgettext@plt>
  414f58:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  414f5c:	mov	x1, x0
  414f60:	add	x2, x2, #0xb69
  414f64:	mov	x0, x19
  414f68:	bl	402820 <fprintf@plt>
  414f6c:	mov	x0, x22
  414f70:	mov	x1, x19
  414f74:	bl	402750 <fputs_unlocked@plt>
  414f78:	cmp	x21, #0x9
  414f7c:	b.hi	414fcc <wcrtomb@plt+0x1275c>  // b.pmore
  414f80:	adrp	x8, 42a000 <_obstack_memory_used@@Base+0x11d70>
  414f84:	add	x8, x8, #0xa9d
  414f88:	adr	x9, 414f98 <wcrtomb@plt+0x12728>
  414f8c:	ldrb	w10, [x8, x21]
  414f90:	add	x9, x9, x10, lsl #2
  414f94:	br	x9
  414f98:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  414f9c:	add	x1, x1, #0xb8b
  414fa0:	mov	w2, #0x5                   	// #5
  414fa4:	mov	x0, xzr
  414fa8:	bl	402740 <dcgettext@plt>
  414fac:	ldr	x2, [x20]
  414fb0:	mov	x1, x0
  414fb4:	mov	x0, x19
  414fb8:	ldp	x20, x19, [sp, #64]
  414fbc:	ldp	x22, x21, [sp, #48]
  414fc0:	ldp	x29, x30, [sp, #32]
  414fc4:	add	sp, sp, #0x50
  414fc8:	b	402820 <fprintf@plt>
  414fcc:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  414fd0:	add	x1, x1, #0xcca
  414fd4:	b	415128 <wcrtomb@plt+0x128b8>
  414fd8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  414fdc:	add	x1, x1, #0xb9b
  414fe0:	mov	w2, #0x5                   	// #5
  414fe4:	mov	x0, xzr
  414fe8:	bl	402740 <dcgettext@plt>
  414fec:	ldp	x2, x3, [x20]
  414ff0:	mov	x1, x0
  414ff4:	mov	x0, x19
  414ff8:	ldp	x20, x19, [sp, #64]
  414ffc:	ldp	x22, x21, [sp, #48]
  415000:	ldp	x29, x30, [sp, #32]
  415004:	add	sp, sp, #0x50
  415008:	b	402820 <fprintf@plt>
  41500c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  415010:	add	x1, x1, #0xbb2
  415014:	mov	w2, #0x5                   	// #5
  415018:	mov	x0, xzr
  41501c:	bl	402740 <dcgettext@plt>
  415020:	ldp	x2, x3, [x20]
  415024:	ldr	x4, [x20, #16]
  415028:	mov	x1, x0
  41502c:	mov	x0, x19
  415030:	ldp	x20, x19, [sp, #64]
  415034:	ldp	x22, x21, [sp, #48]
  415038:	ldp	x29, x30, [sp, #32]
  41503c:	add	sp, sp, #0x50
  415040:	b	402820 <fprintf@plt>
  415044:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  415048:	add	x1, x1, #0xbce
  41504c:	mov	w2, #0x5                   	// #5
  415050:	mov	x0, xzr
  415054:	bl	402740 <dcgettext@plt>
  415058:	ldp	x2, x3, [x20]
  41505c:	ldp	x4, x5, [x20, #16]
  415060:	mov	x1, x0
  415064:	mov	x0, x19
  415068:	ldp	x20, x19, [sp, #64]
  41506c:	ldp	x22, x21, [sp, #48]
  415070:	ldp	x29, x30, [sp, #32]
  415074:	add	sp, sp, #0x50
  415078:	b	402820 <fprintf@plt>
  41507c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  415080:	add	x1, x1, #0xbee
  415084:	mov	w2, #0x5                   	// #5
  415088:	mov	x0, xzr
  41508c:	bl	402740 <dcgettext@plt>
  415090:	ldp	x2, x3, [x20]
  415094:	ldp	x4, x5, [x20, #16]
  415098:	ldr	x6, [x20, #32]
  41509c:	mov	x1, x0
  4150a0:	mov	x0, x19
  4150a4:	ldp	x20, x19, [sp, #64]
  4150a8:	ldp	x22, x21, [sp, #48]
  4150ac:	ldp	x29, x30, [sp, #32]
  4150b0:	add	sp, sp, #0x50
  4150b4:	b	402820 <fprintf@plt>
  4150b8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4150bc:	add	x1, x1, #0xc12
  4150c0:	mov	w2, #0x5                   	// #5
  4150c4:	mov	x0, xzr
  4150c8:	bl	402740 <dcgettext@plt>
  4150cc:	ldp	x2, x3, [x20]
  4150d0:	ldp	x4, x5, [x20, #16]
  4150d4:	ldp	x6, x7, [x20, #32]
  4150d8:	mov	x1, x0
  4150dc:	mov	x0, x19
  4150e0:	ldp	x20, x19, [sp, #64]
  4150e4:	ldp	x22, x21, [sp, #48]
  4150e8:	ldp	x29, x30, [sp, #32]
  4150ec:	add	sp, sp, #0x50
  4150f0:	b	402820 <fprintf@plt>
  4150f4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4150f8:	add	x1, x1, #0xc3a
  4150fc:	mov	w2, #0x5                   	// #5
  415100:	mov	x0, xzr
  415104:	bl	402740 <dcgettext@plt>
  415108:	ldp	x2, x3, [x20]
  41510c:	ldp	x4, x5, [x20, #16]
  415110:	ldp	x6, x7, [x20, #32]
  415114:	ldr	x8, [x20, #48]
  415118:	mov	x1, x0
  41511c:	b	415184 <wcrtomb@plt+0x12914>
  415120:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  415124:	add	x1, x1, #0xc96
  415128:	mov	w2, #0x5                   	// #5
  41512c:	mov	x0, xzr
  415130:	bl	402740 <dcgettext@plt>
  415134:	ldr	q0, [x20, #48]
  415138:	ldr	x8, [x20, #64]
  41513c:	ldp	x2, x3, [x20]
  415140:	ldp	x4, x5, [x20, #16]
  415144:	ldp	x6, x7, [x20, #32]
  415148:	mov	x1, x0
  41514c:	str	x8, [sp, #16]
  415150:	str	q0, [sp]
  415154:	b	415188 <wcrtomb@plt+0x12918>
  415158:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  41515c:	add	x1, x1, #0xc66
  415160:	mov	w2, #0x5                   	// #5
  415164:	mov	x0, xzr
  415168:	bl	402740 <dcgettext@plt>
  41516c:	ldp	x8, x9, [x20, #48]
  415170:	ldp	x2, x3, [x20]
  415174:	ldp	x4, x5, [x20, #16]
  415178:	ldp	x6, x7, [x20, #32]
  41517c:	mov	x1, x0
  415180:	str	x9, [sp, #8]
  415184:	str	x8, [sp]
  415188:	mov	x0, x19
  41518c:	bl	402820 <fprintf@plt>
  415190:	ldp	x20, x19, [sp, #64]
  415194:	ldp	x22, x21, [sp, #48]
  415198:	ldp	x29, x30, [sp, #32]
  41519c:	add	sp, sp, #0x50
  4151a0:	ret
  4151a4:	mov	x8, xzr
  4151a8:	ldr	x9, [x4, x8, lsl #3]
  4151ac:	add	x8, x8, #0x1
  4151b0:	cbnz	x9, 4151a8 <wcrtomb@plt+0x12938>
  4151b4:	sub	x5, x8, #0x1
  4151b8:	b	414ea8 <wcrtomb@plt+0x12638>
  4151bc:	sub	sp, sp, #0x60
  4151c0:	stp	x29, x30, [sp, #80]
  4151c4:	ldr	w9, [x4, #24]
  4151c8:	add	x29, sp, #0x50
  4151cc:	mov	w8, w9
  4151d0:	tbz	w9, #31, 4151f4 <wcrtomb@plt+0x12984>
  4151d4:	add	w8, w9, #0x8
  4151d8:	cmn	w9, #0x8
  4151dc:	str	w8, [x4, #24]
  4151e0:	b.gt	4151f4 <wcrtomb@plt+0x12984>
  4151e4:	ldr	x10, [x4, #8]
  4151e8:	sxtw	x9, w9
  4151ec:	add	x9, x10, x9
  4151f0:	b	415200 <wcrtomb@plt+0x12990>
  4151f4:	ldr	x9, [x4]
  4151f8:	add	x10, x9, #0x8
  4151fc:	str	x10, [x4]
  415200:	ldr	x9, [x9]
  415204:	str	x9, [sp]
  415208:	cbz	x9, 415218 <wcrtomb@plt+0x129a8>
  41520c:	tbnz	w8, #31, 415220 <wcrtomb@plt+0x129b0>
  415210:	mov	w9, w8
  415214:	b	41523c <wcrtomb@plt+0x129cc>
  415218:	mov	x5, xzr
  41521c:	b	415494 <wcrtomb@plt+0x12c24>
  415220:	add	w9, w8, #0x8
  415224:	cmn	w8, #0x8
  415228:	str	w9, [x4, #24]
  41522c:	b.gt	41523c <wcrtomb@plt+0x129cc>
  415230:	ldr	x10, [x4, #8]
  415234:	add	x8, x10, w8, sxtw
  415238:	b	415248 <wcrtomb@plt+0x129d8>
  41523c:	ldr	x8, [x4]
  415240:	add	x10, x8, #0x8
  415244:	str	x10, [x4]
  415248:	ldr	x8, [x8]
  41524c:	str	x8, [sp, #8]
  415250:	cbz	x8, 415260 <wcrtomb@plt+0x129f0>
  415254:	tbnz	w9, #31, 415268 <wcrtomb@plt+0x129f8>
  415258:	mov	w8, w9
  41525c:	b	415284 <wcrtomb@plt+0x12a14>
  415260:	mov	w5, #0x1                   	// #1
  415264:	b	415494 <wcrtomb@plt+0x12c24>
  415268:	add	w8, w9, #0x8
  41526c:	cmn	w9, #0x8
  415270:	str	w8, [x4, #24]
  415274:	b.gt	415284 <wcrtomb@plt+0x12a14>
  415278:	ldr	x10, [x4, #8]
  41527c:	add	x9, x10, w9, sxtw
  415280:	b	415290 <wcrtomb@plt+0x12a20>
  415284:	ldr	x9, [x4]
  415288:	add	x10, x9, #0x8
  41528c:	str	x10, [x4]
  415290:	ldr	x9, [x9]
  415294:	str	x9, [sp, #16]
  415298:	cbz	x9, 4152a8 <wcrtomb@plt+0x12a38>
  41529c:	tbnz	w8, #31, 4152b0 <wcrtomb@plt+0x12a40>
  4152a0:	mov	w9, w8
  4152a4:	b	4152cc <wcrtomb@plt+0x12a5c>
  4152a8:	mov	w5, #0x2                   	// #2
  4152ac:	b	415494 <wcrtomb@plt+0x12c24>
  4152b0:	add	w9, w8, #0x8
  4152b4:	cmn	w8, #0x8
  4152b8:	str	w9, [x4, #24]
  4152bc:	b.gt	4152cc <wcrtomb@plt+0x12a5c>
  4152c0:	ldr	x10, [x4, #8]
  4152c4:	add	x8, x10, w8, sxtw
  4152c8:	b	4152d8 <wcrtomb@plt+0x12a68>
  4152cc:	ldr	x8, [x4]
  4152d0:	add	x10, x8, #0x8
  4152d4:	str	x10, [x4]
  4152d8:	ldr	x8, [x8]
  4152dc:	str	x8, [sp, #24]
  4152e0:	cbz	x8, 4152f0 <wcrtomb@plt+0x12a80>
  4152e4:	tbnz	w9, #31, 4152f8 <wcrtomb@plt+0x12a88>
  4152e8:	mov	w8, w9
  4152ec:	b	415314 <wcrtomb@plt+0x12aa4>
  4152f0:	mov	w5, #0x3                   	// #3
  4152f4:	b	415494 <wcrtomb@plt+0x12c24>
  4152f8:	add	w8, w9, #0x8
  4152fc:	cmn	w9, #0x8
  415300:	str	w8, [x4, #24]
  415304:	b.gt	415314 <wcrtomb@plt+0x12aa4>
  415308:	ldr	x10, [x4, #8]
  41530c:	add	x9, x10, w9, sxtw
  415310:	b	415320 <wcrtomb@plt+0x12ab0>
  415314:	ldr	x9, [x4]
  415318:	add	x10, x9, #0x8
  41531c:	str	x10, [x4]
  415320:	ldr	x9, [x9]
  415324:	str	x9, [sp, #32]
  415328:	cbz	x9, 415338 <wcrtomb@plt+0x12ac8>
  41532c:	tbnz	w8, #31, 415340 <wcrtomb@plt+0x12ad0>
  415330:	mov	w9, w8
  415334:	b	41535c <wcrtomb@plt+0x12aec>
  415338:	mov	w5, #0x4                   	// #4
  41533c:	b	415494 <wcrtomb@plt+0x12c24>
  415340:	add	w9, w8, #0x8
  415344:	cmn	w8, #0x8
  415348:	str	w9, [x4, #24]
  41534c:	b.gt	41535c <wcrtomb@plt+0x12aec>
  415350:	ldr	x10, [x4, #8]
  415354:	add	x8, x10, w8, sxtw
  415358:	b	415368 <wcrtomb@plt+0x12af8>
  41535c:	ldr	x8, [x4]
  415360:	add	x10, x8, #0x8
  415364:	str	x10, [x4]
  415368:	ldr	x8, [x8]
  41536c:	str	x8, [sp, #40]
  415370:	cbz	x8, 415380 <wcrtomb@plt+0x12b10>
  415374:	tbnz	w9, #31, 415388 <wcrtomb@plt+0x12b18>
  415378:	mov	w8, w9
  41537c:	b	4153a4 <wcrtomb@plt+0x12b34>
  415380:	mov	w5, #0x5                   	// #5
  415384:	b	415494 <wcrtomb@plt+0x12c24>
  415388:	add	w8, w9, #0x8
  41538c:	cmn	w9, #0x8
  415390:	str	w8, [x4, #24]
  415394:	b.gt	4153a4 <wcrtomb@plt+0x12b34>
  415398:	ldr	x10, [x4, #8]
  41539c:	add	x9, x10, w9, sxtw
  4153a0:	b	4153b0 <wcrtomb@plt+0x12b40>
  4153a4:	ldr	x9, [x4]
  4153a8:	add	x10, x9, #0x8
  4153ac:	str	x10, [x4]
  4153b0:	ldr	x9, [x9]
  4153b4:	str	x9, [sp, #48]
  4153b8:	cbz	x9, 4153c8 <wcrtomb@plt+0x12b58>
  4153bc:	tbnz	w8, #31, 4153d0 <wcrtomb@plt+0x12b60>
  4153c0:	mov	w9, w8
  4153c4:	b	4153ec <wcrtomb@plt+0x12b7c>
  4153c8:	mov	w5, #0x6                   	// #6
  4153cc:	b	415494 <wcrtomb@plt+0x12c24>
  4153d0:	add	w9, w8, #0x8
  4153d4:	cmn	w8, #0x8
  4153d8:	str	w9, [x4, #24]
  4153dc:	b.gt	4153ec <wcrtomb@plt+0x12b7c>
  4153e0:	ldr	x10, [x4, #8]
  4153e4:	add	x8, x10, w8, sxtw
  4153e8:	b	4153f8 <wcrtomb@plt+0x12b88>
  4153ec:	ldr	x8, [x4]
  4153f0:	add	x10, x8, #0x8
  4153f4:	str	x10, [x4]
  4153f8:	ldr	x8, [x8]
  4153fc:	str	x8, [sp, #56]
  415400:	cbz	x8, 415410 <wcrtomb@plt+0x12ba0>
  415404:	tbnz	w9, #31, 415418 <wcrtomb@plt+0x12ba8>
  415408:	mov	w8, w9
  41540c:	b	415434 <wcrtomb@plt+0x12bc4>
  415410:	mov	w5, #0x7                   	// #7
  415414:	b	415494 <wcrtomb@plt+0x12c24>
  415418:	add	w8, w9, #0x8
  41541c:	cmn	w9, #0x8
  415420:	str	w8, [x4, #24]
  415424:	b.gt	415434 <wcrtomb@plt+0x12bc4>
  415428:	ldr	x10, [x4, #8]
  41542c:	add	x9, x10, w9, sxtw
  415430:	b	415440 <wcrtomb@plt+0x12bd0>
  415434:	ldr	x9, [x4]
  415438:	add	x10, x9, #0x8
  41543c:	str	x10, [x4]
  415440:	ldr	x9, [x9]
  415444:	str	x9, [sp, #64]
  415448:	cbz	x9, 415490 <wcrtomb@plt+0x12c20>
  41544c:	tbz	w8, #31, 41546c <wcrtomb@plt+0x12bfc>
  415450:	add	w9, w8, #0x8
  415454:	cmn	w8, #0x8
  415458:	str	w9, [x4, #24]
  41545c:	b.gt	41546c <wcrtomb@plt+0x12bfc>
  415460:	ldr	x9, [x4, #8]
  415464:	add	x8, x9, w8, sxtw
  415468:	b	415478 <wcrtomb@plt+0x12c08>
  41546c:	ldr	x8, [x4]
  415470:	add	x9, x8, #0x8
  415474:	str	x9, [x4]
  415478:	ldr	x8, [x8]
  41547c:	str	x8, [sp, #72]
  415480:	cmp	x8, #0x0
  415484:	mov	w8, #0x9                   	// #9
  415488:	cinc	x5, x8, ne  // ne = any
  41548c:	b	415494 <wcrtomb@plt+0x12c24>
  415490:	mov	w5, #0x8                   	// #8
  415494:	mov	x4, sp
  415498:	bl	414ea8 <wcrtomb@plt+0x12638>
  41549c:	ldp	x29, x30, [sp, #80]
  4154a0:	add	sp, sp, #0x60
  4154a4:	ret
  4154a8:	sub	sp, sp, #0xf0
  4154ac:	stp	x29, x30, [sp, #224]
  4154b0:	add	x29, sp, #0xe0
  4154b4:	mov	x8, #0xffffffffffffffe0    	// #-32
  4154b8:	mov	x9, sp
  4154bc:	sub	x10, x29, #0x60
  4154c0:	movk	x8, #0xff80, lsl #32
  4154c4:	add	x11, x29, #0x10
  4154c8:	add	x9, x9, #0x80
  4154cc:	add	x10, x10, #0x20
  4154d0:	stp	x9, x8, [x29, #-16]
  4154d4:	stp	x11, x10, [x29, #-32]
  4154d8:	stp	x4, x5, [x29, #-96]
  4154dc:	stp	x6, x7, [x29, #-80]
  4154e0:	stp	q0, q1, [sp]
  4154e4:	ldp	q0, q1, [x29, #-32]
  4154e8:	sub	x4, x29, #0x40
  4154ec:	stp	q2, q3, [sp, #32]
  4154f0:	stp	q4, q5, [sp, #64]
  4154f4:	stp	q6, q7, [sp, #96]
  4154f8:	stp	q0, q1, [x29, #-64]
  4154fc:	bl	4151bc <wcrtomb@plt+0x1294c>
  415500:	ldp	x29, x30, [sp, #224]
  415504:	add	sp, sp, #0xf0
  415508:	ret
  41550c:	stp	x29, x30, [sp, #-16]!
  415510:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  415514:	ldr	x1, [x8, #1096]
  415518:	adrp	x0, 429000 <_obstack_memory_used@@Base+0x10d70>
  41551c:	add	x0, x0, #0xb5c
  415520:	mov	x29, sp
  415524:	bl	402750 <fputs_unlocked@plt>
  415528:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  41552c:	add	x1, x1, #0xd06
  415530:	mov	w2, #0x5                   	// #5
  415534:	mov	x0, xzr
  415538:	bl	402740 <dcgettext@plt>
  41553c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  415540:	add	x1, x1, #0xd1a
  415544:	bl	4027c0 <printf@plt>
  415548:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  41554c:	add	x1, x1, #0xd2b
  415550:	mov	w2, #0x5                   	// #5
  415554:	mov	x0, xzr
  415558:	bl	402740 <dcgettext@plt>
  41555c:	adrp	x1, 429000 <_obstack_memory_used@@Base+0x10d70>
  415560:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  415564:	add	x1, x1, #0xd63
  415568:	add	x2, x2, #0xd3f
  41556c:	bl	4027c0 <printf@plt>
  415570:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  415574:	add	x1, x1, #0xd62
  415578:	mov	w2, #0x5                   	// #5
  41557c:	mov	x0, xzr
  415580:	bl	402740 <dcgettext@plt>
  415584:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  415588:	add	x1, x1, #0xd89
  41558c:	ldp	x29, x30, [sp], #16
  415590:	b	4027c0 <printf@plt>
  415594:	stp	x29, x30, [sp, #-32]!
  415598:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  41559c:	udiv	x8, x8, x1
  4155a0:	cmp	x8, x0
  4155a4:	str	x19, [sp, #16]
  4155a8:	mov	x29, sp
  4155ac:	b.cc	4155d0 <wcrtomb@plt+0x12d60>  // b.lo, b.ul, b.last
  4155b0:	mul	x19, x1, x0
  4155b4:	mov	x0, x19
  4155b8:	bl	4023a0 <malloc@plt>
  4155bc:	cbz	x19, 4155c4 <wcrtomb@plt+0x12d54>
  4155c0:	cbz	x0, 4155d0 <wcrtomb@plt+0x12d60>
  4155c4:	ldr	x19, [sp, #16]
  4155c8:	ldp	x29, x30, [sp], #32
  4155cc:	ret
  4155d0:	bl	415898 <wcrtomb@plt+0x13028>
  4155d4:	stp	x29, x30, [sp, #-32]!
  4155d8:	str	x19, [sp, #16]
  4155dc:	mov	x29, sp
  4155e0:	mov	x19, x0
  4155e4:	bl	4023a0 <malloc@plt>
  4155e8:	cbz	x19, 4155f0 <wcrtomb@plt+0x12d80>
  4155ec:	cbz	x0, 4155fc <wcrtomb@plt+0x12d8c>
  4155f0:	ldr	x19, [sp, #16]
  4155f4:	ldp	x29, x30, [sp], #32
  4155f8:	ret
  4155fc:	bl	415898 <wcrtomb@plt+0x13028>
  415600:	stp	x29, x30, [sp, #-32]!
  415604:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  415608:	udiv	x8, x8, x2
  41560c:	cmp	x8, x1
  415610:	str	x19, [sp, #16]
  415614:	mov	x29, sp
  415618:	b.cc	415650 <wcrtomb@plt+0x12de0>  // b.lo, b.ul, b.last
  41561c:	mul	x19, x2, x1
  415620:	cbz	x0, 415634 <wcrtomb@plt+0x12dc4>
  415624:	cbnz	x19, 415634 <wcrtomb@plt+0x12dc4>
  415628:	bl	402620 <free@plt>
  41562c:	mov	x0, xzr
  415630:	b	415644 <wcrtomb@plt+0x12dd4>
  415634:	mov	x1, x19
  415638:	bl	4024c0 <realloc@plt>
  41563c:	cbz	x19, 415644 <wcrtomb@plt+0x12dd4>
  415640:	cbz	x0, 415650 <wcrtomb@plt+0x12de0>
  415644:	ldr	x19, [sp, #16]
  415648:	ldp	x29, x30, [sp], #32
  41564c:	ret
  415650:	bl	415898 <wcrtomb@plt+0x13028>
  415654:	stp	x29, x30, [sp, #-32]!
  415658:	str	x19, [sp, #16]
  41565c:	mov	x19, x1
  415660:	mov	x29, sp
  415664:	cbz	x0, 415678 <wcrtomb@plt+0x12e08>
  415668:	cbnz	x19, 415678 <wcrtomb@plt+0x12e08>
  41566c:	bl	402620 <free@plt>
  415670:	mov	x0, xzr
  415674:	b	415688 <wcrtomb@plt+0x12e18>
  415678:	mov	x1, x19
  41567c:	bl	4024c0 <realloc@plt>
  415680:	cbz	x19, 415688 <wcrtomb@plt+0x12e18>
  415684:	cbz	x0, 415694 <wcrtomb@plt+0x12e24>
  415688:	ldr	x19, [sp, #16]
  41568c:	ldp	x29, x30, [sp], #32
  415690:	ret
  415694:	bl	415898 <wcrtomb@plt+0x13028>
  415698:	stp	x29, x30, [sp, #-32]!
  41569c:	ldr	x8, [x1]
  4156a0:	str	x19, [sp, #16]
  4156a4:	mov	x29, sp
  4156a8:	cbz	x0, 4156e0 <wcrtomb@plt+0x12e70>
  4156ac:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  4156b0:	movk	x9, #0x5554
  4156b4:	udiv	x9, x9, x2
  4156b8:	cmp	x9, x8
  4156bc:	b.ls	415728 <wcrtomb@plt+0x12eb8>  // b.plast
  4156c0:	add	x8, x8, x8, lsr #1
  4156c4:	add	x8, x8, #0x1
  4156c8:	mul	x19, x8, x2
  4156cc:	str	x8, [x1]
  4156d0:	cbnz	x19, 41570c <wcrtomb@plt+0x12e9c>
  4156d4:	bl	402620 <free@plt>
  4156d8:	mov	x0, xzr
  4156dc:	b	41571c <wcrtomb@plt+0x12eac>
  4156e0:	cbnz	x8, 4156f4 <wcrtomb@plt+0x12e84>
  4156e4:	mov	w8, #0x80                  	// #128
  4156e8:	udiv	x8, x8, x2
  4156ec:	cmp	x2, #0x80
  4156f0:	cinc	x8, x8, hi  // hi = pmore
  4156f4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4156f8:	udiv	x9, x9, x2
  4156fc:	cmp	x9, x8
  415700:	b.cc	415728 <wcrtomb@plt+0x12eb8>  // b.lo, b.ul, b.last
  415704:	mul	x19, x8, x2
  415708:	str	x8, [x1]
  41570c:	mov	x1, x19
  415710:	bl	4024c0 <realloc@plt>
  415714:	cbz	x19, 41571c <wcrtomb@plt+0x12eac>
  415718:	cbz	x0, 415728 <wcrtomb@plt+0x12eb8>
  41571c:	ldr	x19, [sp, #16]
  415720:	ldp	x29, x30, [sp], #32
  415724:	ret
  415728:	bl	415898 <wcrtomb@plt+0x13028>
  41572c:	stp	x29, x30, [sp, #-32]!
  415730:	str	x19, [sp, #16]
  415734:	mov	x29, sp
  415738:	mov	x19, x0
  41573c:	bl	4023a0 <malloc@plt>
  415740:	cbz	x19, 415748 <wcrtomb@plt+0x12ed8>
  415744:	cbz	x0, 415754 <wcrtomb@plt+0x12ee4>
  415748:	ldr	x19, [sp, #16]
  41574c:	ldp	x29, x30, [sp], #32
  415750:	ret
  415754:	bl	415898 <wcrtomb@plt+0x13028>
  415758:	stp	x29, x30, [sp, #-32]!
  41575c:	str	x19, [sp, #16]
  415760:	ldr	x19, [x1]
  415764:	mov	x29, sp
  415768:	cbz	x0, 415798 <wcrtomb@plt+0x12f28>
  41576c:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  415770:	movk	x8, #0x5554
  415774:	cmp	x19, x8
  415778:	b.cs	4157c8 <wcrtomb@plt+0x12f58>  // b.hs, b.nlast
  41577c:	add	x8, x19, x19, lsr #1
  415780:	adds	x19, x8, #0x1
  415784:	str	x19, [x1]
  415788:	b.ne	4157ac <wcrtomb@plt+0x12f3c>  // b.any
  41578c:	bl	402620 <free@plt>
  415790:	mov	x0, xzr
  415794:	b	4157bc <wcrtomb@plt+0x12f4c>
  415798:	cbz	x19, 4157a4 <wcrtomb@plt+0x12f34>
  41579c:	tbz	x19, #63, 4157a8 <wcrtomb@plt+0x12f38>
  4157a0:	b	4157c8 <wcrtomb@plt+0x12f58>
  4157a4:	mov	w19, #0x80                  	// #128
  4157a8:	str	x19, [x1]
  4157ac:	mov	x1, x19
  4157b0:	bl	4024c0 <realloc@plt>
  4157b4:	cbz	x19, 4157bc <wcrtomb@plt+0x12f4c>
  4157b8:	cbz	x0, 4157c8 <wcrtomb@plt+0x12f58>
  4157bc:	ldr	x19, [sp, #16]
  4157c0:	ldp	x29, x30, [sp], #32
  4157c4:	ret
  4157c8:	bl	415898 <wcrtomb@plt+0x13028>
  4157cc:	stp	x29, x30, [sp, #-16]!
  4157d0:	mov	x29, sp
  4157d4:	tbnz	x0, #63, 4157ec <wcrtomb@plt+0x12f7c>
  4157d8:	mov	w1, #0x1                   	// #1
  4157dc:	bl	402480 <calloc@plt>
  4157e0:	cbz	x0, 4157ec <wcrtomb@plt+0x12f7c>
  4157e4:	ldp	x29, x30, [sp], #16
  4157e8:	ret
  4157ec:	bl	415898 <wcrtomb@plt+0x13028>
  4157f0:	stp	x29, x30, [sp, #-16]!
  4157f4:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4157f8:	udiv	x8, x8, x1
  4157fc:	cmp	x8, x0
  415800:	mov	x29, sp
  415804:	b.cc	415818 <wcrtomb@plt+0x12fa8>  // b.lo, b.ul, b.last
  415808:	bl	402480 <calloc@plt>
  41580c:	cbz	x0, 415818 <wcrtomb@plt+0x12fa8>
  415810:	ldp	x29, x30, [sp], #16
  415814:	ret
  415818:	bl	415898 <wcrtomb@plt+0x13028>
  41581c:	stp	x29, x30, [sp, #-32]!
  415820:	stp	x20, x19, [sp, #16]
  415824:	mov	x20, x0
  415828:	mov	x0, x1
  41582c:	mov	x29, sp
  415830:	mov	x19, x1
  415834:	bl	4023a0 <malloc@plt>
  415838:	cbz	x19, 415840 <wcrtomb@plt+0x12fd0>
  41583c:	cbz	x0, 415854 <wcrtomb@plt+0x12fe4>
  415840:	mov	x1, x20
  415844:	mov	x2, x19
  415848:	ldp	x20, x19, [sp, #16]
  41584c:	ldp	x29, x30, [sp], #32
  415850:	b	402210 <memcpy@plt>
  415854:	bl	415898 <wcrtomb@plt+0x13028>
  415858:	stp	x29, x30, [sp, #-32]!
  41585c:	stp	x20, x19, [sp, #16]
  415860:	mov	x29, sp
  415864:	mov	x19, x0
  415868:	bl	402270 <strlen@plt>
  41586c:	add	x20, x0, #0x1
  415870:	mov	x0, x20
  415874:	bl	4023a0 <malloc@plt>
  415878:	cbz	x20, 415880 <wcrtomb@plt+0x13010>
  41587c:	cbz	x0, 415894 <wcrtomb@plt+0x13024>
  415880:	mov	x1, x19
  415884:	mov	x2, x20
  415888:	ldp	x20, x19, [sp, #16]
  41588c:	ldp	x29, x30, [sp], #32
  415890:	b	402210 <memcpy@plt>
  415894:	bl	415898 <wcrtomb@plt+0x13028>
  415898:	stp	x29, x30, [sp, #-32]!
  41589c:	str	x19, [sp, #16]
  4158a0:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4158a4:	ldr	w19, [x8, #960]
  4158a8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4158ac:	add	x1, x1, #0xdd5
  4158b0:	mov	w2, #0x5                   	// #5
  4158b4:	mov	x0, xzr
  4158b8:	mov	x29, sp
  4158bc:	bl	402740 <dcgettext@plt>
  4158c0:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4158c4:	mov	x3, x0
  4158c8:	add	x2, x2, #0x1b7
  4158cc:	mov	w0, w19
  4158d0:	mov	w1, wzr
  4158d4:	bl	4022a0 <error@plt>
  4158d8:	bl	402560 <abort@plt>
  4158dc:	stp	x29, x30, [sp, #-80]!
  4158e0:	cmp	w2, #0x25
  4158e4:	str	x25, [sp, #16]
  4158e8:	stp	x24, x23, [sp, #32]
  4158ec:	stp	x22, x21, [sp, #48]
  4158f0:	stp	x20, x19, [sp, #64]
  4158f4:	mov	x29, sp
  4158f8:	b.cs	415e1c <wcrtomb@plt+0x135ac>  // b.hs, b.nlast
  4158fc:	cmp	x1, #0x0
  415900:	add	x8, x29, #0x18
  415904:	mov	x23, x4
  415908:	mov	x19, x3
  41590c:	mov	w22, w2
  415910:	mov	x20, x0
  415914:	csel	x21, x8, x1, eq  // eq = none
  415918:	bl	4027e0 <__errno_location@plt>
  41591c:	mov	x24, x0
  415920:	str	wzr, [x0]
  415924:	mov	x0, x20
  415928:	mov	x1, x21
  41592c:	mov	w2, w22
  415930:	mov	w3, wzr
  415934:	bl	402400 <__strtol_internal@plt>
  415938:	ldr	x25, [x21]
  41593c:	cmp	x25, x20
  415940:	b.eq	41596c <wcrtomb@plt+0x130fc>  // b.none
  415944:	ldr	w20, [x24]
  415948:	mov	x22, x0
  41594c:	cbz	w20, 41595c <wcrtomb@plt+0x130ec>
  415950:	cmp	w20, #0x22
  415954:	b.ne	415a18 <wcrtomb@plt+0x131a8>  // b.any
  415958:	mov	w20, #0x1                   	// #1
  41595c:	cbz	x23, 415dfc <wcrtomb@plt+0x1358c>
  415960:	ldrb	w24, [x25]
  415964:	cbnz	w24, 415994 <wcrtomb@plt+0x13124>
  415968:	b	415dfc <wcrtomb@plt+0x1358c>
  41596c:	cbz	x23, 415a18 <wcrtomb@plt+0x131a8>
  415970:	ldrb	w1, [x20]
  415974:	cbz	w1, 415a18 <wcrtomb@plt+0x131a8>
  415978:	mov	x0, x23
  41597c:	bl	402640 <strchr@plt>
  415980:	cbz	x0, 415a18 <wcrtomb@plt+0x131a8>
  415984:	mov	w20, wzr
  415988:	mov	w22, #0x1                   	// #1
  41598c:	ldrb	w24, [x25]
  415990:	cbz	w24, 415dfc <wcrtomb@plt+0x1358c>
  415994:	mov	x0, x23
  415998:	mov	w1, w24
  41599c:	bl	402640 <strchr@plt>
  4159a0:	cbz	x0, 415a74 <wcrtomb@plt+0x13204>
  4159a4:	sub	w10, w24, #0x45
  4159a8:	mov	w8, #0x1                   	// #1
  4159ac:	cmp	w10, #0x2f
  4159b0:	mov	w9, #0x400                 	// #1024
  4159b4:	b.hi	415a34 <wcrtomb@plt+0x131c4>  // b.pmore
  4159b8:	mov	w11, #0x1                   	// #1
  4159bc:	lsl	x10, x11, x10
  4159c0:	mov	x11, #0x8945                	// #35141
  4159c4:	movk	x11, #0x30, lsl #16
  4159c8:	movk	x11, #0x8144, lsl #32
  4159cc:	tst	x10, x11
  4159d0:	b.eq	415a34 <wcrtomb@plt+0x131c4>  // b.none
  4159d4:	mov	w1, #0x30                  	// #48
  4159d8:	mov	x0, x23
  4159dc:	bl	402640 <strchr@plt>
  4159e0:	cbz	x0, 415a20 <wcrtomb@plt+0x131b0>
  4159e4:	ldrb	w8, [x25, #1]
  4159e8:	cmp	w8, #0x42
  4159ec:	b.eq	415a2c <wcrtomb@plt+0x131bc>  // b.none
  4159f0:	cmp	w8, #0x44
  4159f4:	b.eq	415a2c <wcrtomb@plt+0x131bc>  // b.none
  4159f8:	cmp	w8, #0x69
  4159fc:	b.ne	415a20 <wcrtomb@plt+0x131b0>  // b.any
  415a00:	ldrb	w8, [x25, #2]
  415a04:	mov	w9, #0x3                   	// #3
  415a08:	cmp	w8, #0x42
  415a0c:	csinc	x8, x9, xzr, eq  // eq = none
  415a10:	mov	w9, #0x400                 	// #1024
  415a14:	b	415a34 <wcrtomb@plt+0x131c4>
  415a18:	mov	w20, #0x4                   	// #4
  415a1c:	b	415e00 <wcrtomb@plt+0x13590>
  415a20:	mov	w8, #0x1                   	// #1
  415a24:	mov	w9, #0x400                 	// #1024
  415a28:	b	415a34 <wcrtomb@plt+0x131c4>
  415a2c:	mov	w8, #0x2                   	// #2
  415a30:	mov	w9, #0x3e8                 	// #1000
  415a34:	sub	w10, w24, #0x42
  415a38:	cmp	w10, #0x35
  415a3c:	b.hi	415a74 <wcrtomb@plt+0x13204>  // b.pmore
  415a40:	adrp	x11, 42a000 <_obstack_memory_used@@Base+0x11d70>
  415a44:	add	x11, x11, #0xde6
  415a48:	adr	x12, 415a5c <wcrtomb@plt+0x131ec>
  415a4c:	ldrb	w13, [x11, x10]
  415a50:	add	x12, x12, x13, lsl #2
  415a54:	mov	w10, wzr
  415a58:	br	x12
  415a5c:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  415a60:	sdiv	x10, x12, x9
  415a64:	cmp	x22, x10
  415a68:	b.ge	415b80 <wcrtomb@plt+0x13310>  // b.tcont
  415a6c:	mov	w11, #0x1                   	// #1
  415a70:	b	415b98 <wcrtomb@plt+0x13328>
  415a74:	orr	w20, w20, #0x2
  415a78:	b	415dfc <wcrtomb@plt+0x1358c>
  415a7c:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  415a80:	sdiv	x10, x10, x9
  415a84:	cmp	x22, x10
  415a88:	b.lt	415b74 <wcrtomb@plt+0x13304>  // b.tstop
  415a8c:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  415a90:	mul	x12, x22, x9
  415a94:	udiv	x9, x11, x9
  415a98:	cmp	x9, x22
  415a9c:	cset	w10, lt  // lt = tstop
  415aa0:	csel	x22, x11, x12, lt  // lt = tstop
  415aa4:	b	415de0 <wcrtomb@plt+0x13570>
  415aa8:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  415aac:	sdiv	x12, x11, x9
  415ab0:	cmp	x22, x12
  415ab4:	b.ge	415bbc <wcrtomb@plt+0x1334c>  // b.tcont
  415ab8:	mov	w10, #0x1                   	// #1
  415abc:	b	415bd4 <wcrtomb@plt+0x13364>
  415ac0:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  415ac4:	sdiv	x10, x12, x9
  415ac8:	cmp	x22, x10
  415acc:	b.ge	415bf8 <wcrtomb@plt+0x13388>  // b.tcont
  415ad0:	mov	w11, #0x1                   	// #1
  415ad4:	b	415c10 <wcrtomb@plt+0x133a0>
  415ad8:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  415adc:	sdiv	x10, x12, x9
  415ae0:	cmp	x22, x10
  415ae4:	b.ge	415c34 <wcrtomb@plt+0x133c4>  // b.tcont
  415ae8:	mov	w11, #0x1                   	// #1
  415aec:	b	415c4c <wcrtomb@plt+0x133dc>
  415af0:	mov	x9, #0xffe0000000000000    	// #-9007199254740992
  415af4:	cmp	x22, x9
  415af8:	b.lt	415b74 <wcrtomb@plt+0x13304>  // b.tstop
  415afc:	mov	x9, #0x1fffffffffffff      	// #9007199254740991
  415b00:	lsl	x11, x22, #10
  415b04:	b	415d0c <wcrtomb@plt+0x1349c>
  415b08:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  415b0c:	sdiv	x10, x12, x9
  415b10:	cmp	x22, x10
  415b14:	b.ge	415c60 <wcrtomb@plt+0x133f0>  // b.tcont
  415b18:	mov	w11, #0x1                   	// #1
  415b1c:	b	415c78 <wcrtomb@plt+0x13408>
  415b20:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  415b24:	sdiv	x10, x12, x9
  415b28:	cmp	x22, x10
  415b2c:	b.ge	415c9c <wcrtomb@plt+0x1342c>  // b.tcont
  415b30:	mov	w11, #0x1                   	// #1
  415b34:	b	415cb4 <wcrtomb@plt+0x13444>
  415b38:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  415b3c:	sdiv	x10, x12, x9
  415b40:	cmp	x22, x10
  415b44:	b.ge	415cd8 <wcrtomb@plt+0x13468>  // b.tcont
  415b48:	mov	w11, #0x1                   	// #1
  415b4c:	b	415cf0 <wcrtomb@plt+0x13480>
  415b50:	mov	x9, #0xffc0000000000000    	// #-18014398509481984
  415b54:	cmp	x22, x9
  415b58:	b.lt	415b74 <wcrtomb@plt+0x13304>  // b.tstop
  415b5c:	mov	x9, #0x3fffffffffffff      	// #18014398509481983
  415b60:	lsl	x11, x22, #9
  415b64:	b	415d0c <wcrtomb@plt+0x1349c>
  415b68:	mov	x9, #0xc000000000000000    	// #-4611686018427387904
  415b6c:	cmp	x22, x9
  415b70:	b.ge	415d04 <wcrtomb@plt+0x13494>  // b.tcont
  415b74:	mov	w10, #0x1                   	// #1
  415b78:	mov	x22, #0x8000000000000000    	// #-9223372036854775808
  415b7c:	b	415de0 <wcrtomb@plt+0x13570>
  415b80:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  415b84:	udiv	x11, x12, x9
  415b88:	mul	x13, x22, x9
  415b8c:	cmp	x11, x22
  415b90:	cset	w11, lt  // lt = tstop
  415b94:	csel	x12, x12, x13, lt  // lt = tstop
  415b98:	cmp	x12, x10
  415b9c:	b.lt	415da4 <wcrtomb@plt+0x13534>  // b.tstop
  415ba0:	mov	x14, #0x7fffffffffffffff    	// #9223372036854775807
  415ba4:	udiv	x13, x14, x9
  415ba8:	mul	x15, x12, x9
  415bac:	cmp	x13, x12
  415bb0:	cset	w13, lt  // lt = tstop
  415bb4:	csel	x12, x14, x15, lt  // lt = tstop
  415bb8:	b	415dac <wcrtomb@plt+0x1353c>
  415bbc:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  415bc0:	udiv	x10, x11, x9
  415bc4:	mul	x13, x22, x9
  415bc8:	cmp	x10, x22
  415bcc:	cset	w10, lt  // lt = tstop
  415bd0:	csel	x11, x11, x13, lt  // lt = tstop
  415bd4:	cmp	x11, x12
  415bd8:	b.lt	415db8 <wcrtomb@plt+0x13548>  // b.tstop
  415bdc:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  415be0:	mul	x13, x11, x9
  415be4:	udiv	x9, x12, x9
  415be8:	cmp	x9, x11
  415bec:	cset	w9, lt  // lt = tstop
  415bf0:	csel	x22, x12, x13, lt  // lt = tstop
  415bf4:	b	415ddc <wcrtomb@plt+0x1356c>
  415bf8:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  415bfc:	udiv	x11, x12, x9
  415c00:	mul	x13, x22, x9
  415c04:	cmp	x11, x22
  415c08:	cset	w11, lt  // lt = tstop
  415c0c:	csel	x12, x12, x13, lt  // lt = tstop
  415c10:	cmp	x12, x10
  415c14:	b.lt	415d90 <wcrtomb@plt+0x13520>  // b.tstop
  415c18:	mov	x14, #0x7fffffffffffffff    	// #9223372036854775807
  415c1c:	udiv	x13, x14, x9
  415c20:	mul	x15, x12, x9
  415c24:	cmp	x13, x12
  415c28:	cset	w13, lt  // lt = tstop
  415c2c:	csel	x12, x14, x15, lt  // lt = tstop
  415c30:	b	415d98 <wcrtomb@plt+0x13528>
  415c34:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  415c38:	udiv	x11, x12, x9
  415c3c:	mul	x13, x22, x9
  415c40:	cmp	x11, x22
  415c44:	cset	w11, lt  // lt = tstop
  415c48:	csel	x12, x12, x13, lt  // lt = tstop
  415c4c:	cmp	x12, x10
  415c50:	b.ge	415d44 <wcrtomb@plt+0x134d4>  // b.tcont
  415c54:	mov	w13, #0x1                   	// #1
  415c58:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  415c5c:	b	415d5c <wcrtomb@plt+0x134ec>
  415c60:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  415c64:	udiv	x11, x12, x9
  415c68:	mul	x13, x22, x9
  415c6c:	cmp	x11, x22
  415c70:	cset	w11, lt  // lt = tstop
  415c74:	csel	x12, x12, x13, lt  // lt = tstop
  415c78:	cmp	x12, x10
  415c7c:	b.lt	415d68 <wcrtomb@plt+0x134f8>  // b.tstop
  415c80:	mov	x14, #0x7fffffffffffffff    	// #9223372036854775807
  415c84:	udiv	x13, x14, x9
  415c88:	mul	x15, x12, x9
  415c8c:	cmp	x13, x12
  415c90:	cset	w13, lt  // lt = tstop
  415c94:	csel	x12, x14, x15, lt  // lt = tstop
  415c98:	b	415d70 <wcrtomb@plt+0x13500>
  415c9c:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  415ca0:	udiv	x11, x12, x9
  415ca4:	mul	x13, x22, x9
  415ca8:	cmp	x11, x22
  415cac:	cset	w11, lt  // lt = tstop
  415cb0:	csel	x12, x12, x13, lt  // lt = tstop
  415cb4:	cmp	x12, x10
  415cb8:	b.lt	415d7c <wcrtomb@plt+0x1350c>  // b.tstop
  415cbc:	mov	x14, #0x7fffffffffffffff    	// #9223372036854775807
  415cc0:	udiv	x13, x14, x9
  415cc4:	mul	x15, x12, x9
  415cc8:	cmp	x13, x12
  415ccc:	cset	w13, lt  // lt = tstop
  415cd0:	csel	x12, x14, x15, lt  // lt = tstop
  415cd4:	b	415d84 <wcrtomb@plt+0x13514>
  415cd8:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  415cdc:	udiv	x11, x12, x9
  415ce0:	mul	x13, x22, x9
  415ce4:	cmp	x11, x22
  415ce8:	cset	w11, lt  // lt = tstop
  415cec:	csel	x12, x12, x13, lt  // lt = tstop
  415cf0:	cmp	x12, x10
  415cf4:	b.ge	415d20 <wcrtomb@plt+0x134b0>  // b.tcont
  415cf8:	mov	w13, #0x1                   	// #1
  415cfc:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  415d00:	b	415d38 <wcrtomb@plt+0x134c8>
  415d04:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
  415d08:	lsl	x11, x22, #1
  415d0c:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  415d10:	cmp	x22, x9
  415d14:	cset	w10, gt
  415d18:	csel	x22, x12, x11, gt
  415d1c:	b	415de0 <wcrtomb@plt+0x13570>
  415d20:	mov	x14, #0x7fffffffffffffff    	// #9223372036854775807
  415d24:	udiv	x13, x14, x9
  415d28:	mul	x15, x12, x9
  415d2c:	cmp	x13, x12
  415d30:	cset	w13, lt  // lt = tstop
  415d34:	csel	x12, x14, x15, lt  // lt = tstop
  415d38:	cmp	x12, x10
  415d3c:	orr	w11, w13, w11
  415d40:	b.lt	415c54 <wcrtomb@plt+0x133e4>  // b.tstop
  415d44:	mov	x14, #0x7fffffffffffffff    	// #9223372036854775807
  415d48:	udiv	x13, x14, x9
  415d4c:	mul	x15, x12, x9
  415d50:	cmp	x13, x12
  415d54:	cset	w13, lt  // lt = tstop
  415d58:	csel	x12, x14, x15, lt  // lt = tstop
  415d5c:	cmp	x12, x10
  415d60:	orr	w11, w13, w11
  415d64:	b.ge	415c80 <wcrtomb@plt+0x13410>  // b.tcont
  415d68:	mov	w13, #0x1                   	// #1
  415d6c:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  415d70:	cmp	x12, x10
  415d74:	orr	w11, w13, w11
  415d78:	b.ge	415cbc <wcrtomb@plt+0x1344c>  // b.tcont
  415d7c:	mov	w13, #0x1                   	// #1
  415d80:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  415d84:	cmp	x12, x10
  415d88:	orr	w11, w13, w11
  415d8c:	b.ge	415c18 <wcrtomb@plt+0x133a8>  // b.tcont
  415d90:	mov	w13, #0x1                   	// #1
  415d94:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  415d98:	cmp	x12, x10
  415d9c:	orr	w11, w13, w11
  415da0:	b.ge	415ba0 <wcrtomb@plt+0x13330>  // b.tcont
  415da4:	mov	w13, #0x1                   	// #1
  415da8:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  415dac:	cmp	x12, x10
  415db0:	orr	w10, w13, w11
  415db4:	b.ge	415dc4 <wcrtomb@plt+0x13554>  // b.tcont
  415db8:	mov	w9, #0x1                   	// #1
  415dbc:	mov	x22, #0x8000000000000000    	// #-9223372036854775808
  415dc0:	b	415ddc <wcrtomb@plt+0x1356c>
  415dc4:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  415dc8:	mul	x13, x12, x9
  415dcc:	udiv	x9, x11, x9
  415dd0:	cmp	x9, x12
  415dd4:	cset	w9, lt  // lt = tstop
  415dd8:	csel	x22, x11, x13, lt  // lt = tstop
  415ddc:	orr	w10, w9, w10
  415de0:	add	x9, x25, x8
  415de4:	str	x9, [x21]
  415de8:	ldrb	w8, [x25, x8]
  415dec:	orr	w9, w10, w20
  415df0:	orr	w10, w9, #0x2
  415df4:	cmp	w8, #0x0
  415df8:	csel	w20, w9, w10, eq  // eq = none
  415dfc:	str	x22, [x19]
  415e00:	mov	w0, w20
  415e04:	ldp	x20, x19, [sp, #64]
  415e08:	ldp	x22, x21, [sp, #48]
  415e0c:	ldp	x24, x23, [sp, #32]
  415e10:	ldr	x25, [sp, #16]
  415e14:	ldp	x29, x30, [sp], #80
  415e18:	ret
  415e1c:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  415e20:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  415e24:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x11d70>
  415e28:	add	x0, x0, #0xe1c
  415e2c:	add	x1, x1, #0xe42
  415e30:	add	x3, x3, #0xe4e
  415e34:	mov	w2, #0x54                  	// #84
  415e38:	bl	4027d0 <__assert_fail@plt>
  415e3c:	stp	x29, x30, [sp, #-16]!
  415e40:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  415e44:	add	x0, x0, #0xe9c
  415e48:	mov	x29, sp
  415e4c:	bl	4027f0 <getenv@plt>
  415e50:	cbz	x0, 415e68 <wcrtomb@plt+0x135f8>
  415e54:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  415e58:	add	x1, x1, #0xea1
  415e5c:	bl	402600 <strcmp@plt>
  415e60:	cmp	w0, #0x0
  415e64:	cset	w0, ne  // ne = any
  415e68:	ldp	x29, x30, [sp], #16
  415e6c:	ret
  415e70:	ret
  415e74:	b	4027c0 <printf@plt>
  415e78:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  415e7c:	ldr	x1, [x8, #1096]
  415e80:	b	402280 <fputs@plt>
  415e84:	sub	sp, sp, #0x80
  415e88:	cmp	w1, #0x1, lsl #12
  415e8c:	stp	x29, x30, [sp, #32]
  415e90:	stp	x28, x27, [sp, #48]
  415e94:	stp	x26, x25, [sp, #64]
  415e98:	stp	x24, x23, [sp, #80]
  415e9c:	stp	x22, x21, [sp, #96]
  415ea0:	stp	x20, x19, [sp, #112]
  415ea4:	add	x29, sp, #0x20
  415ea8:	b.cs	415f44 <wcrtomb@plt+0x136d4>  // b.hs, b.nlast
  415eac:	mov	w8, #0x204                 	// #516
  415eb0:	mov	w22, w1
  415eb4:	bics	wzr, w8, w1
  415eb8:	b.eq	415f44 <wcrtomb@plt+0x136d4>  // b.none
  415ebc:	mov	w8, #0x12                  	// #18
  415ec0:	tst	w22, w8
  415ec4:	b.eq	415f44 <wcrtomb@plt+0x136d4>  // b.none
  415ec8:	mov	x23, x0
  415ecc:	mov	w0, #0x1                   	// #1
  415ed0:	mov	w1, #0x80                  	// #128
  415ed4:	mov	x21, x2
  415ed8:	bl	402480 <calloc@plt>
  415edc:	mov	x19, x0
  415ee0:	cbz	x0, 415f54 <wcrtomb@plt+0x136e4>
  415ee4:	and	w8, w22, #0xfffffdff
  415ee8:	tst	w22, #0x2
  415eec:	orr	w8, w8, #0x4
  415ef0:	mov	w9, #0xffffff9c            	// #-100
  415ef4:	csel	w8, w22, w8, eq  // eq = none
  415ef8:	str	x21, [x19, #64]
  415efc:	str	w8, [x19, #72]
  415f00:	str	w9, [x19, #44]
  415f04:	ldr	x8, [x23]
  415f08:	cbz	x8, 415f78 <wcrtomb@plt+0x13708>
  415f0c:	mov	x20, xzr
  415f10:	add	x24, x23, #0x8
  415f14:	mov	x0, x8
  415f18:	bl	402270 <strlen@plt>
  415f1c:	ldr	x8, [x24], #8
  415f20:	cmp	x0, x20
  415f24:	csel	x20, x0, x20, hi  // hi = pmore
  415f28:	cbnz	x8, 415f14 <wcrtomb@plt+0x136a4>
  415f2c:	add	x8, x20, #0x1
  415f30:	cmp	x8, #0x1, lsl #12
  415f34:	mov	w8, #0x1000                	// #4096
  415f38:	csinc	x8, x8, x20, ls  // ls = plast
  415f3c:	add	x0, x8, #0x100
  415f40:	b	415f7c <wcrtomb@plt+0x1370c>
  415f44:	bl	4027e0 <__errno_location@plt>
  415f48:	mov	w8, #0x16                  	// #22
  415f4c:	mov	x19, xzr
  415f50:	str	w8, [x0]
  415f54:	mov	x0, x19
  415f58:	ldp	x20, x19, [sp, #112]
  415f5c:	ldp	x22, x21, [sp, #96]
  415f60:	ldp	x24, x23, [sp, #80]
  415f64:	ldp	x26, x25, [sp, #64]
  415f68:	ldp	x28, x27, [sp, #48]
  415f6c:	ldp	x29, x30, [sp, #32]
  415f70:	add	sp, sp, #0x80
  415f74:	ret
  415f78:	mov	w0, #0x1100                	// #4352
  415f7c:	str	x0, [x19, #48]
  415f80:	bl	4023a0 <malloc@plt>
  415f84:	cbz	x0, 4161fc <wcrtomb@plt+0x1398c>
  415f88:	str	x0, [x19, #32]
  415f8c:	ldr	x26, [x23]
  415f90:	mov	x24, x0
  415f94:	cbz	x26, 415fdc <wcrtomb@plt+0x1376c>
  415f98:	mov	w0, #0x100                 	// #256
  415f9c:	bl	4023a0 <malloc@plt>
  415fa0:	cbz	x0, 416200 <wcrtomb@plt+0x13990>
  415fa4:	mov	x28, x0
  415fa8:	mov	w8, #0x30000               	// #196608
  415fac:	mov	x9, #0xffffffffffffffff    	// #-1
  415fb0:	mov	w10, #0xffffffff            	// #-1
  415fb4:	strb	wzr, [x0, #248]
  415fb8:	str	x24, [x0, #56]
  415fbc:	str	wzr, [x0, #64]
  415fc0:	stp	xzr, xzr, [x0, #32]
  415fc4:	str	xzr, [x0, #24]
  415fc8:	stur	w8, [x0, #110]
  415fcc:	str	x19, [x0, #80]
  415fd0:	stp	x9, xzr, [x0, #88]
  415fd4:	str	w10, [x0, #104]
  415fd8:	b	415fe0 <wcrtomb@plt+0x13770>
  415fdc:	mov	x28, xzr
  415fe0:	cbz	x21, 415ff8 <wcrtomb@plt+0x13788>
  415fe4:	ldrb	w8, [x19, #73]
  415fe8:	ubfx	w8, w8, #2, #1
  415fec:	mov	x24, xzr
  415ff0:	cbnz	x26, 416004 <wcrtomb@plt+0x13794>
  415ff4:	b	416168 <wcrtomb@plt+0x138f8>
  415ff8:	mov	w8, #0x1                   	// #1
  415ffc:	mov	x24, xzr
  416000:	cbz	x26, 416168 <wcrtomb@plt+0x138f8>
  416004:	mov	x25, xzr
  416008:	eor	w8, w8, #0x1
  41600c:	str	xzr, [sp, #8]
  416010:	stur	w8, [x29, #-4]
  416014:	str	x21, [sp, #16]
  416018:	b	41603c <wcrtomb@plt+0x137cc>
  41601c:	str	xzr, [x27, #16]
  416020:	cbz	x24, 416138 <wcrtomb@plt+0x138c8>
  416024:	ldr	x8, [sp, #8]
  416028:	str	x27, [sp, #8]
  41602c:	str	x27, [x8, #16]
  416030:	ldr	x26, [x23, #8]!
  416034:	add	x25, x25, #0x1
  416038:	cbz	x26, 416148 <wcrtomb@plt+0x138d8>
  41603c:	mov	x0, x26
  416040:	mov	x21, x28
  416044:	bl	402270 <strlen@plt>
  416048:	mov	x28, x0
  41604c:	tbnz	w22, #11, 416088 <wcrtomb@plt+0x13818>
  416050:	cmp	x28, #0x3
  416054:	b.cc	416088 <wcrtomb@plt+0x13818>  // b.lo, b.ul, b.last
  416058:	add	x8, x28, x26
  41605c:	ldurb	w8, [x8, #-1]
  416060:	cmp	w8, #0x2f
  416064:	b.ne	416088 <wcrtomb@plt+0x13818>  // b.any
  416068:	sub	x8, x26, #0x2
  41606c:	ldrb	w9, [x8, x28]
  416070:	cmp	w9, #0x2f
  416074:	b.ne	416088 <wcrtomb@plt+0x13818>  // b.any
  416078:	sub	x28, x28, #0x1
  41607c:	cmp	x28, #0x1
  416080:	b.hi	41606c <wcrtomb@plt+0x137fc>  // b.pmore
  416084:	mov	w28, #0x1                   	// #1
  416088:	add	x8, x28, #0x100
  41608c:	and	x0, x8, #0xfffffffffffffff8
  416090:	bl	4023a0 <malloc@plt>
  416094:	cbz	x0, 416140 <wcrtomb@plt+0x138d0>
  416098:	add	x20, x0, #0xf8
  41609c:	mov	x27, x0
  4160a0:	mov	x0, x20
  4160a4:	mov	x1, x26
  4160a8:	mov	x2, x28
  4160ac:	bl	402210 <memcpy@plt>
  4160b0:	ldr	x8, [x19, #32]
  4160b4:	mov	w9, #0x30000               	// #196608
  4160b8:	strb	wzr, [x20, x28]
  4160bc:	stur	w9, [x27, #110]
  4160c0:	ldur	w9, [x29, #-4]
  4160c4:	cmp	x24, #0x0
  4160c8:	stp	x20, x8, [x27, #48]
  4160cc:	cset	w8, eq  // eq = none
  4160d0:	stp	xzr, x28, [x27, #88]
  4160d4:	mov	x28, x21
  4160d8:	orr	w8, w9, w8
  4160dc:	str	wzr, [x27, #64]
  4160e0:	stp	xzr, xzr, [x27, #24]
  4160e4:	str	x19, [x27, #80]
  4160e8:	str	x21, [x27, #8]
  4160ec:	str	xzr, [x27, #40]
  4160f0:	tbnz	w8, #0, 416110 <wcrtomb@plt+0x138a0>
  4160f4:	mov	w8, #0xb                   	// #11
  4160f8:	strh	w8, [x27, #108]
  4160fc:	mov	w8, #0x2                   	// #2
  416100:	str	x8, [x27, #168]
  416104:	ldr	x21, [sp, #16]
  416108:	cbnz	x21, 41612c <wcrtomb@plt+0x138bc>
  41610c:	b	41601c <wcrtomb@plt+0x137ac>
  416110:	mov	x0, x19
  416114:	mov	x1, x27
  416118:	mov	w2, wzr
  41611c:	bl	4162b8 <wcrtomb@plt+0x13a48>
  416120:	strh	w0, [x27, #108]
  416124:	ldr	x21, [sp, #16]
  416128:	cbz	x21, 41601c <wcrtomb@plt+0x137ac>
  41612c:	str	x24, [x27, #16]
  416130:	mov	x24, x27
  416134:	b	416030 <wcrtomb@plt+0x137c0>
  416138:	str	x27, [sp, #8]
  41613c:	b	416130 <wcrtomb@plt+0x138c0>
  416140:	mov	x28, x21
  416144:	b	4161f0 <wcrtomb@plt+0x13980>
  416148:	cbz	x21, 416168 <wcrtomb@plt+0x138f8>
  41614c:	cmp	x25, #0x2
  416150:	b.cc	416168 <wcrtomb@plt+0x138f8>  // b.lo, b.ul, b.last
  416154:	mov	x0, x19
  416158:	mov	x1, x24
  41615c:	mov	x2, x25
  416160:	bl	416448 <wcrtomb@plt+0x13bd8>
  416164:	mov	x24, x0
  416168:	mov	w0, #0x100                 	// #256
  41616c:	bl	4023a0 <malloc@plt>
  416170:	cbz	x0, 4161ec <wcrtomb@plt+0x1397c>
  416174:	ldrh	w8, [x19, #72]
  416178:	mov	w9, #0x102                 	// #258
  41617c:	strb	wzr, [x0, #248]
  416180:	str	wzr, [x0, #64]
  416184:	tst	w8, w9
  416188:	mov	w8, #0x30000               	// #196608
  41618c:	stur	w8, [x0, #110]
  416190:	mov	w8, #0x9                   	// #9
  416194:	strh	w8, [x0, #108]
  416198:	ldr	x8, [x19, #32]
  41619c:	stp	xzr, xzr, [x0, #32]
  4161a0:	str	x0, [x19]
  4161a4:	stp	x24, xzr, [x0, #16]
  4161a8:	str	x8, [x0, #56]
  4161ac:	mov	w8, #0x1                   	// #1
  4161b0:	str	x19, [x0, #80]
  4161b4:	stp	x8, xzr, [x0, #88]
  4161b8:	b.eq	416238 <wcrtomb@plt+0x139c8>  // b.none
  4161bc:	adrp	x2, 417000 <wcrtomb@plt+0x14790>
  4161c0:	adrp	x3, 417000 <wcrtomb@plt+0x14790>
  4161c4:	adrp	x4, 402000 <mbrtowc@plt-0x200>
  4161c8:	add	x2, x2, #0xd00
  4161cc:	add	x3, x3, #0xd10
  4161d0:	add	x4, x4, #0x620
  4161d4:	mov	w0, #0x1f                  	// #31
  4161d8:	mov	x1, xzr
  4161dc:	bl	4122f0 <wcrtomb@plt+0xfa80>
  4161e0:	str	x0, [x19, #88]
  4161e4:	cbnz	x0, 41624c <wcrtomb@plt+0x139dc>
  4161e8:	b	4161f0 <wcrtomb@plt+0x13980>
  4161ec:	str	xzr, [x19]
  4161f0:	cbnz	x24, 416228 <wcrtomb@plt+0x139b8>
  4161f4:	mov	x0, x28
  4161f8:	bl	402620 <free@plt>
  4161fc:	ldr	x24, [x19, #32]
  416200:	mov	x0, x24
  416204:	bl	402620 <free@plt>
  416208:	mov	x0, x19
  41620c:	bl	402620 <free@plt>
  416210:	mov	x19, xzr
  416214:	b	415f54 <wcrtomb@plt+0x136e4>
  416218:	mov	x0, x24
  41621c:	bl	402620 <free@plt>
  416220:	mov	x24, x20
  416224:	cbz	x20, 4161f4 <wcrtomb@plt+0x13984>
  416228:	ldp	x20, x0, [x24, #16]
  41622c:	cbz	x0, 416218 <wcrtomb@plt+0x139a8>
  416230:	bl	4024e0 <closedir@plt>
  416234:	b	416218 <wcrtomb@plt+0x139a8>
  416238:	mov	w0, #0x20                  	// #32
  41623c:	bl	4023a0 <malloc@plt>
  416240:	str	x0, [x19, #88]
  416244:	cbz	x0, 4161f0 <wcrtomb@plt+0x13980>
  416248:	bl	4278a8 <_obstack_memory_used@@Base+0xf618>
  41624c:	ldr	w8, [x19, #72]
  416250:	mov	w9, #0x204                 	// #516
  416254:	tst	w8, w9
  416258:	b.ne	4162a8 <wcrtomb@plt+0x13a38>  // b.any
  41625c:	mov	w2, #0x4900                	// #18688
  416260:	lsr	w9, w8, #4
  416264:	movk	w2, #0x8, lsl #16
  416268:	bfi	w2, w9, #15, #1
  41626c:	tbnz	w8, #9, 416284 <wcrtomb@plt+0x13a14>
  416270:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  416274:	add	x0, x0, #0xea7
  416278:	mov	w1, w2
  41627c:	bl	4279f0 <_obstack_memory_used@@Base+0xf760>
  416280:	b	416294 <wcrtomb@plt+0x13a24>
  416284:	ldr	w0, [x19, #44]
  416288:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  41628c:	add	x1, x1, #0xea7
  416290:	bl	413484 <wcrtomb@plt+0x10c14>
  416294:	str	w0, [x19, #40]
  416298:	tbz	w0, #31, 4162a8 <wcrtomb@plt+0x13a38>
  41629c:	ldr	w8, [x19, #72]
  4162a0:	orr	w8, w8, #0x4
  4162a4:	str	w8, [x19, #72]
  4162a8:	add	x0, x19, #0x60
  4162ac:	mov	w1, #0xffffffff            	// #-1
  4162b0:	bl	427b00 <_obstack_memory_used@@Base+0xf870>
  4162b4:	b	415f54 <wcrtomb@plt+0x136e4>
  4162b8:	stp	x29, x30, [sp, #-48]!
  4162bc:	stp	x20, x19, [sp, #32]
  4162c0:	ldr	x9, [x1, #88]
  4162c4:	ldr	w8, [x0, #72]
  4162c8:	str	x21, [sp, #16]
  4162cc:	mov	x19, x1
  4162d0:	mov	x21, x0
  4162d4:	mov	x29, sp
  4162d8:	cbz	x9, 4162e8 <wcrtomb@plt+0x13a78>
  4162dc:	add	x20, x19, #0x78
  4162e0:	tbz	w2, #0, 4162f8 <wcrtomb@plt+0x13a88>
  4162e4:	b	416324 <wcrtomb@plt+0x13ab4>
  4162e8:	and	w9, w8, #0x1
  4162ec:	orr	w2, w9, w2
  4162f0:	add	x20, x19, #0x78
  4162f4:	tbnz	w2, #0, 416324 <wcrtomb@plt+0x13ab4>
  4162f8:	tbnz	w8, #1, 416324 <wcrtomb@plt+0x13ab4>
  4162fc:	ldr	w1, [x21, #44]
  416300:	ldr	x2, [x19, #48]
  416304:	mov	w4, #0x100                 	// #256
  416308:	mov	w0, wzr
  41630c:	mov	x3, x20
  416310:	bl	402860 <__fxstatat@plt>
  416314:	cbz	w0, 416390 <wcrtomb@plt+0x13b20>
  416318:	bl	4027e0 <__errno_location@plt>
  41631c:	mov	x21, x0
  416320:	b	416360 <wcrtomb@plt+0x13af0>
  416324:	ldr	x1, [x19, #48]
  416328:	mov	w0, wzr
  41632c:	mov	x2, x20
  416330:	bl	402800 <__xstat@plt>
  416334:	cbz	w0, 416390 <wcrtomb@plt+0x13b20>
  416338:	bl	4027e0 <__errno_location@plt>
  41633c:	ldr	w8, [x0]
  416340:	cmp	w8, #0x2
  416344:	b.ne	416364 <wcrtomb@plt+0x13af4>  // b.any
  416348:	ldr	x1, [x19, #48]
  41634c:	mov	x21, x0
  416350:	mov	w0, wzr
  416354:	mov	x2, x20
  416358:	bl	4026b0 <__lxstat@plt>
  41635c:	cbz	w0, 416428 <wcrtomb@plt+0x13bb8>
  416360:	ldr	w8, [x21]
  416364:	movi	v0.2d, #0x0
  416368:	str	w8, [x19, #64]
  41636c:	stp	q0, q0, [x20, #96]
  416370:	stp	q0, q0, [x20, #64]
  416374:	stp	q0, q0, [x20, #32]
  416378:	stp	q0, q0, [x20]
  41637c:	mov	w0, #0xa                   	// #10
  416380:	ldp	x20, x19, [sp, #32]
  416384:	ldr	x21, [sp, #16]
  416388:	ldp	x29, x30, [sp], #48
  41638c:	ret
  416390:	ldr	w8, [x19, #136]
  416394:	and	w8, w8, #0xf000
  416398:	cmp	w8, #0xa, lsl #12
  41639c:	b.eq	4163dc <wcrtomb@plt+0x13b6c>  // b.none
  4163a0:	cmp	w8, #0x8, lsl #12
  4163a4:	b.eq	4163e4 <wcrtomb@plt+0x13b74>  // b.none
  4163a8:	cmp	w8, #0x4, lsl #12
  4163ac:	b.ne	4163ec <wcrtomb@plt+0x13b7c>  // b.any
  4163b0:	ldr	w8, [x19, #140]
  4163b4:	cmp	w8, #0x2
  4163b8:	b.cc	4163f4 <wcrtomb@plt+0x13b84>  // b.lo, b.ul, b.last
  4163bc:	ldr	x9, [x19, #88]
  4163c0:	cmp	x9, #0x1
  4163c4:	b.lt	4163f4 <wcrtomb@plt+0x13b84>  // b.tstop
  4163c8:	ldr	w9, [x21, #72]
  4163cc:	mov	w10, #0x2                   	// #2
  4163d0:	bic	w9, w10, w9, lsr #4
  4163d4:	sub	w8, w8, w9
  4163d8:	b	4163f8 <wcrtomb@plt+0x13b88>
  4163dc:	mov	w0, #0xc                   	// #12
  4163e0:	b	416380 <wcrtomb@plt+0x13b10>
  4163e4:	mov	w0, #0x8                   	// #8
  4163e8:	b	416380 <wcrtomb@plt+0x13b10>
  4163ec:	mov	w0, #0x3                   	// #3
  4163f0:	b	416380 <wcrtomb@plt+0x13b10>
  4163f4:	mov	w8, #0xffffffff            	// #-1
  4163f8:	ldrb	w9, [x19, #248]
  4163fc:	str	w8, [x19, #104]
  416400:	cmp	w9, #0x2e
  416404:	b.ne	416420 <wcrtomb@plt+0x13bb0>  // b.any
  416408:	ldrb	w8, [x19, #249]
  41640c:	cbz	w8, 416434 <wcrtomb@plt+0x13bc4>
  416410:	cmp	w8, #0x2e
  416414:	b.ne	416420 <wcrtomb@plt+0x13bb0>  // b.any
  416418:	ldrb	w8, [x19, #250]
  41641c:	cbz	w8, 416434 <wcrtomb@plt+0x13bc4>
  416420:	mov	w0, #0x1                   	// #1
  416424:	b	416380 <wcrtomb@plt+0x13b10>
  416428:	str	wzr, [x21]
  41642c:	mov	w0, #0xd                   	// #13
  416430:	b	416380 <wcrtomb@plt+0x13b10>
  416434:	ldr	x8, [x19, #88]
  416438:	cmp	x8, #0x0
  41643c:	mov	w8, #0x5                   	// #5
  416440:	csinc	w0, w8, wzr, ne  // ne = any
  416444:	b	416380 <wcrtomb@plt+0x13b10>
  416448:	stp	x29, x30, [sp, #-48]!
  41644c:	stp	x22, x21, [sp, #16]
  416450:	stp	x20, x19, [sp, #32]
  416454:	ldp	x8, x22, [x0, #56]
  416458:	mov	x21, x0
  41645c:	mov	x20, x2
  416460:	mov	x19, x1
  416464:	cmp	x8, x2
  416468:	mov	x29, sp
  41646c:	b.cs	41649c <wcrtomb@plt+0x13c2c>  // b.hs, b.nlast
  416470:	add	x8, x20, #0x28
  416474:	lsr	x9, x8, #61
  416478:	str	x8, [x21, #56]
  41647c:	cbnz	x9, 416508 <wcrtomb@plt+0x13c98>
  416480:	ldr	x0, [x21, #16]
  416484:	lsl	x1, x8, #3
  416488:	bl	4024c0 <realloc@plt>
  41648c:	cbz	x0, 416508 <wcrtomb@plt+0x13c98>
  416490:	str	x0, [x21, #16]
  416494:	cbnz	x19, 4164a4 <wcrtomb@plt+0x13c34>
  416498:	b	4164b4 <wcrtomb@plt+0x13c44>
  41649c:	ldr	x0, [x21, #16]
  4164a0:	cbz	x19, 4164b4 <wcrtomb@plt+0x13c44>
  4164a4:	str	x19, [x0], #8
  4164a8:	ldr	x19, [x19, #16]
  4164ac:	cbnz	x19, 4164a4 <wcrtomb@plt+0x13c34>
  4164b0:	ldr	x0, [x21, #16]
  4164b4:	mov	w2, #0x8                   	// #8
  4164b8:	mov	x1, x20
  4164bc:	mov	x3, x22
  4164c0:	bl	4022f0 <qsort@plt>
  4164c4:	ldr	x8, [x21, #16]
  4164c8:	cmp	x20, #0x1
  4164cc:	ldr	x19, [x8]
  4164d0:	mov	x9, x19
  4164d4:	b.eq	416500 <wcrtomb@plt+0x13c90>  // b.none
  4164d8:	ldr	x10, [x8, #8]!
  4164dc:	subs	x9, x20, #0x2
  4164e0:	str	x10, [x19, #16]
  4164e4:	b.eq	4164fc <wcrtomb@plt+0x13c8c>  // b.none
  4164e8:	ldr	x10, [x8]
  4164ec:	ldr	x11, [x8, #8]!
  4164f0:	subs	x9, x9, #0x1
  4164f4:	str	x11, [x10, #16]
  4164f8:	b.ne	4164e8 <wcrtomb@plt+0x13c78>  // b.any
  4164fc:	ldr	x9, [x8]
  416500:	str	xzr, [x9, #16]
  416504:	b	416518 <wcrtomb@plt+0x13ca8>
  416508:	ldr	x0, [x21, #16]
  41650c:	bl	402620 <free@plt>
  416510:	str	xzr, [x21, #16]
  416514:	str	xzr, [x21, #56]
  416518:	mov	x0, x19
  41651c:	ldp	x20, x19, [sp, #32]
  416520:	ldp	x22, x21, [sp, #16]
  416524:	ldp	x29, x30, [sp], #48
  416528:	ret
  41652c:	stp	x29, x30, [sp, #-48]!
  416530:	stp	x20, x19, [sp, #32]
  416534:	mov	x19, x0
  416538:	ldr	x0, [x0]
  41653c:	str	x21, [sp, #16]
  416540:	mov	x29, sp
  416544:	cbz	x0, 41655c <wcrtomb@plt+0x13cec>
  416548:	ldr	x8, [x0, #88]
  41654c:	tbz	x8, #63, 4165c8 <wcrtomb@plt+0x13d58>
  416550:	mov	x20, x0
  416554:	mov	x0, x20
  416558:	bl	402620 <free@plt>
  41655c:	ldr	x20, [x19, #8]
  416560:	cbnz	x20, 4165a8 <wcrtomb@plt+0x13d38>
  416564:	ldr	x0, [x19, #16]
  416568:	bl	402620 <free@plt>
  41656c:	ldr	x0, [x19, #32]
  416570:	bl	402620 <free@plt>
  416574:	ldr	w8, [x19, #72]
  416578:	tbnz	w8, #9, 4165d8 <wcrtomb@plt+0x13d68>
  41657c:	tbnz	w8, #2, 4165e8 <wcrtomb@plt+0x13d78>
  416580:	ldr	w0, [x19, #40]
  416584:	bl	4022b0 <fchdir@plt>
  416588:	cbz	w0, 4165f0 <wcrtomb@plt+0x13d80>
  41658c:	bl	4027e0 <__errno_location@plt>
  416590:	ldr	w21, [x0]
  416594:	b	4165f4 <wcrtomb@plt+0x13d84>
  416598:	mov	x0, x20
  41659c:	bl	402620 <free@plt>
  4165a0:	mov	x20, x21
  4165a4:	cbz	x21, 416564 <wcrtomb@plt+0x13cf4>
  4165a8:	ldp	x21, x0, [x20, #16]
  4165ac:	cbz	x0, 416598 <wcrtomb@plt+0x13d28>
  4165b0:	bl	4024e0 <closedir@plt>
  4165b4:	b	416598 <wcrtomb@plt+0x13d28>
  4165b8:	bl	402620 <free@plt>
  4165bc:	ldr	x8, [x20, #88]
  4165c0:	mov	x0, x20
  4165c4:	tbnz	x8, #63, 416554 <wcrtomb@plt+0x13ce4>
  4165c8:	ldr	x20, [x0, #16]
  4165cc:	cbnz	x20, 4165b8 <wcrtomb@plt+0x13d48>
  4165d0:	ldr	x20, [x0, #8]
  4165d4:	b	4165b8 <wcrtomb@plt+0x13d48>
  4165d8:	ldr	w0, [x19, #44]
  4165dc:	tbnz	w0, #31, 4165e8 <wcrtomb@plt+0x13d78>
  4165e0:	bl	4024f0 <close@plt>
  4165e4:	cbnz	w0, 416604 <wcrtomb@plt+0x13d94>
  4165e8:	mov	w21, wzr
  4165ec:	b	41660c <wcrtomb@plt+0x13d9c>
  4165f0:	mov	w21, wzr
  4165f4:	ldr	w0, [x19, #40]
  4165f8:	bl	4024f0 <close@plt>
  4165fc:	cbnz	w21, 41660c <wcrtomb@plt+0x13d9c>
  416600:	cbz	w0, 41660c <wcrtomb@plt+0x13d9c>
  416604:	bl	4027e0 <__errno_location@plt>
  416608:	ldr	w21, [x0]
  41660c:	add	x20, x19, #0x60
  416610:	mov	x0, x20
  416614:	bl	427b1c <_obstack_memory_used@@Base+0xf88c>
  416618:	tbnz	w0, #0, 416630 <wcrtomb@plt+0x13dc0>
  41661c:	mov	x0, x20
  416620:	bl	427b6c <_obstack_memory_used@@Base+0xf8dc>
  416624:	tbnz	w0, #31, 416610 <wcrtomb@plt+0x13da0>
  416628:	bl	4024f0 <close@plt>
  41662c:	b	416610 <wcrtomb@plt+0x13da0>
  416630:	ldr	x0, [x19, #80]
  416634:	cbz	x0, 41663c <wcrtomb@plt+0x13dcc>
  416638:	bl	41259c <wcrtomb@plt+0xfd2c>
  41663c:	ldrh	w8, [x19, #72]
  416640:	mov	w9, #0x102                 	// #258
  416644:	tst	w8, w9
  416648:	b.eq	41665c <wcrtomb@plt+0x13dec>  // b.none
  41664c:	ldr	x0, [x19, #88]
  416650:	cbz	x0, 416664 <wcrtomb@plt+0x13df4>
  416654:	bl	41259c <wcrtomb@plt+0xfd2c>
  416658:	b	416664 <wcrtomb@plt+0x13df4>
  41665c:	ldr	x0, [x19, #88]
  416660:	bl	402620 <free@plt>
  416664:	mov	x0, x19
  416668:	bl	402620 <free@plt>
  41666c:	cbz	w21, 416680 <wcrtomb@plt+0x13e10>
  416670:	bl	4027e0 <__errno_location@plt>
  416674:	str	w21, [x0]
  416678:	mov	w0, #0xffffffff            	// #-1
  41667c:	b	416684 <wcrtomb@plt+0x13e14>
  416680:	mov	w0, wzr
  416684:	ldp	x20, x19, [sp, #32]
  416688:	ldr	x21, [sp, #16]
  41668c:	ldp	x29, x30, [sp], #48
  416690:	ret
  416694:	stp	x29, x30, [sp, #-64]!
  416698:	stp	x22, x21, [sp, #32]
  41669c:	stp	x20, x19, [sp, #48]
  4166a0:	ldr	x20, [x0]
  4166a4:	str	x23, [sp, #16]
  4166a8:	mov	x29, sp
  4166ac:	cbz	x20, 416a38 <wcrtomb@plt+0x141c8>
  4166b0:	ldr	w8, [x0, #72]
  4166b4:	mov	x19, x0
  4166b8:	tbnz	w8, #13, 416a34 <wcrtomb@plt+0x141c4>
  4166bc:	ldrh	w9, [x20, #112]
  4166c0:	mov	w10, #0x3                   	// #3
  4166c4:	strh	w10, [x20, #112]
  4166c8:	cmp	w9, #0x1
  4166cc:	b.eq	416738 <wcrtomb@plt+0x13ec8>  // b.none
  4166d0:	cmp	w9, #0x2
  4166d4:	b.ne	416750 <wcrtomb@plt+0x13ee0>  // b.any
  4166d8:	ldrh	w10, [x20, #108]
  4166dc:	and	w11, w10, #0xfffe
  4166e0:	cmp	w11, #0xc
  4166e4:	b.ne	416754 <wcrtomb@plt+0x13ee4>  // b.any
  4166e8:	mov	w2, #0x1                   	// #1
  4166ec:	mov	x0, x19
  4166f0:	mov	x1, x20
  4166f4:	bl	4162b8 <wcrtomb@plt+0x13a48>
  4166f8:	and	w8, w0, #0xffff
  4166fc:	cmp	w8, #0x1
  416700:	strh	w0, [x20, #108]
  416704:	b.ne	416c2c <wcrtomb@plt+0x143bc>  // b.any
  416708:	ldr	w8, [x19, #72]
  41670c:	tbnz	w8, #2, 416c2c <wcrtomb@plt+0x143bc>
  416710:	mov	w2, #0x4900                	// #18688
  416714:	lsr	w9, w8, #4
  416718:	movk	w2, #0x8, lsl #16
  41671c:	bfi	w2, w9, #15, #1
  416720:	tbnz	w8, #9, 41699c <wcrtomb@plt+0x1412c>
  416724:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  416728:	add	x0, x0, #0xea7
  41672c:	mov	w1, w2
  416730:	bl	4279f0 <_obstack_memory_used@@Base+0xf760>
  416734:	b	4169ac <wcrtomb@plt+0x1413c>
  416738:	mov	x0, x19
  41673c:	mov	x1, x20
  416740:	mov	w2, wzr
  416744:	bl	4162b8 <wcrtomb@plt+0x13a48>
  416748:	strh	w0, [x20, #108]
  41674c:	b	416a38 <wcrtomb@plt+0x141c8>
  416750:	ldrh	w10, [x20, #108]
  416754:	cmp	w10, #0x1
  416758:	b.ne	4167a0 <wcrtomb@plt+0x13f30>  // b.any
  41675c:	cmp	w9, #0x4
  416760:	b.ne	416824 <wcrtomb@plt+0x13fb4>  // b.any
  416764:	ldrb	w8, [x20, #110]
  416768:	tbz	w8, #1, 416774 <wcrtomb@plt+0x13f04>
  41676c:	ldr	w0, [x20, #68]
  416770:	bl	4024f0 <close@plt>
  416774:	ldr	x21, [x19, #8]
  416778:	cbnz	x21, 416790 <wcrtomb@plt+0x13f20>
  41677c:	b	416898 <wcrtomb@plt+0x14028>
  416780:	mov	x0, x21
  416784:	bl	402620 <free@plt>
  416788:	mov	x21, x22
  41678c:	cbz	x22, 416894 <wcrtomb@plt+0x14024>
  416790:	ldp	x22, x0, [x21, #16]
  416794:	cbz	x0, 416780 <wcrtomb@plt+0x13f10>
  416798:	bl	4024e0 <closedir@plt>
  41679c:	b	416780 <wcrtomb@plt+0x13f10>
  4167a0:	ldr	x21, [x20, #16]
  4167a4:	cbz	x21, 4168b0 <wcrtomb@plt+0x14040>
  4167a8:	mov	x0, x20
  4167ac:	str	x21, [x19]
  4167b0:	bl	402620 <free@plt>
  4167b4:	ldr	x8, [x21, #88]
  4167b8:	cbz	x8, 4168ec <wcrtomb@plt+0x1407c>
  4167bc:	ldrh	w8, [x21, #112]
  4167c0:	mov	x20, x21
  4167c4:	cmp	w8, #0x4
  4167c8:	b.eq	4167a0 <wcrtomb@plt+0x13f30>  // b.none
  4167cc:	cmp	w8, #0x2
  4167d0:	b.ne	416bec <wcrtomb@plt+0x1437c>  // b.any
  4167d4:	mov	w2, #0x1                   	// #1
  4167d8:	mov	x0, x19
  4167dc:	mov	x1, x21
  4167e0:	bl	4162b8 <wcrtomb@plt+0x13a48>
  4167e4:	and	w8, w0, #0xffff
  4167e8:	cmp	w8, #0x1
  4167ec:	strh	w0, [x21, #108]
  4167f0:	b.ne	416be4 <wcrtomb@plt+0x14374>  // b.any
  4167f4:	ldr	w8, [x19, #72]
  4167f8:	tbnz	w8, #2, 416be4 <wcrtomb@plt+0x14374>
  4167fc:	mov	w2, #0x4900                	// #18688
  416800:	lsr	w9, w8, #4
  416804:	movk	w2, #0x8, lsl #16
  416808:	bfi	w2, w9, #15, #1
  41680c:	tbnz	w8, #9, 416ba8 <wcrtomb@plt+0x14338>
  416810:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  416814:	add	x0, x0, #0xea7
  416818:	mov	w1, w2
  41681c:	bl	4279f0 <_obstack_memory_used@@Base+0xf760>
  416820:	b	416bb8 <wcrtomb@plt+0x14348>
  416824:	tbz	w8, #6, 416838 <wcrtomb@plt+0x13fc8>
  416828:	ldr	x9, [x20, #120]
  41682c:	ldr	x10, [x19, #24]
  416830:	cmp	x9, x10
  416834:	b.ne	416764 <wcrtomb@plt+0x13ef4>  // b.any
  416838:	ldr	x21, [x19, #8]
  41683c:	cbz	x21, 416958 <wcrtomb@plt+0x140e8>
  416840:	tbnz	w8, #12, 416928 <wcrtomb@plt+0x140b8>
  416844:	ldr	x3, [x20, #48]
  416848:	mov	w2, #0xffffffff            	// #-1
  41684c:	mov	x0, x19
  416850:	mov	x1, x20
  416854:	bl	416e30 <wcrtomb@plt+0x145c0>
  416858:	cbz	w0, 41696c <wcrtomb@plt+0x140fc>
  41685c:	bl	4027e0 <__errno_location@plt>
  416860:	ldr	w8, [x0]
  416864:	ldrh	w9, [x20, #110]
  416868:	str	w8, [x20, #64]
  41686c:	orr	w8, w9, #0x1
  416870:	strh	w8, [x20, #110]
  416874:	ldr	x8, [x19, #8]
  416878:	cbz	x8, 41696c <wcrtomb@plt+0x140fc>
  41687c:	ldr	x9, [x8, #8]
  416880:	ldr	x9, [x9, #48]
  416884:	str	x9, [x8, #48]
  416888:	ldr	x8, [x8, #16]
  41688c:	cbnz	x8, 41687c <wcrtomb@plt+0x1400c>
  416890:	b	41696c <wcrtomb@plt+0x140fc>
  416894:	str	xzr, [x19, #8]
  416898:	mov	w8, #0x6                   	// #6
  41689c:	strh	w8, [x20, #108]
  4168a0:	mov	x0, x19
  4168a4:	mov	x1, x20
  4168a8:	bl	416d94 <wcrtomb@plt+0x14524>
  4168ac:	b	416a38 <wcrtomb@plt+0x141c8>
  4168b0:	ldr	x21, [x20, #8]
  4168b4:	ldr	x8, [x21, #24]
  4168b8:	cbz	x8, 4169d0 <wcrtomb@plt+0x14160>
  4168bc:	str	x21, [x19]
  4168c0:	ldr	x8, [x19, #32]
  4168c4:	ldr	x9, [x21, #72]
  4168c8:	mov	w1, #0x3                   	// #3
  4168cc:	mov	x0, x19
  4168d0:	strb	wzr, [x8, x9]
  4168d4:	bl	417064 <wcrtomb@plt+0x147f4>
  4168d8:	cbz	x0, 4169c4 <wcrtomb@plt+0x14154>
  4168dc:	mov	x21, x0
  4168e0:	mov	x0, x20
  4168e4:	bl	402620 <free@plt>
  4168e8:	b	416bec <wcrtomb@plt+0x1437c>
  4168ec:	mov	x0, x19
  4168f0:	bl	4179b4 <wcrtomb@plt+0x15144>
  4168f4:	ldr	w8, [x19, #72]
  4168f8:	cbz	w0, 41690c <wcrtomb@plt+0x1409c>
  4168fc:	orr	w8, w8, #0x2000
  416900:	mov	x20, xzr
  416904:	str	w8, [x19, #72]
  416908:	b	416a38 <wcrtomb@plt+0x141c8>
  41690c:	mov	w9, #0x102                 	// #258
  416910:	tst	w8, w9
  416914:	b.eq	416a84 <wcrtomb@plt+0x14214>  // b.none
  416918:	ldr	x0, [x19, #88]
  41691c:	cbz	x0, 416a8c <wcrtomb@plt+0x1421c>
  416920:	bl	41259c <wcrtomb@plt+0xfd2c>
  416924:	b	416a8c <wcrtomb@plt+0x1421c>
  416928:	and	w8, w8, #0xffffefff
  41692c:	str	w8, [x19, #72]
  416930:	b	416944 <wcrtomb@plt+0x140d4>
  416934:	mov	x0, x21
  416938:	bl	402620 <free@plt>
  41693c:	mov	x21, x22
  416940:	cbz	x22, 416954 <wcrtomb@plt+0x140e4>
  416944:	ldp	x22, x0, [x21, #16]
  416948:	cbz	x0, 416934 <wcrtomb@plt+0x140c4>
  41694c:	bl	4024e0 <closedir@plt>
  416950:	b	416934 <wcrtomb@plt+0x140c4>
  416954:	str	xzr, [x19, #8]
  416958:	mov	w1, #0x3                   	// #3
  41695c:	mov	x0, x19
  416960:	bl	417064 <wcrtomb@plt+0x147f4>
  416964:	str	x0, [x19, #8]
  416968:	cbz	x0, 416978 <wcrtomb@plt+0x14108>
  41696c:	ldr	x21, [x19, #8]
  416970:	str	xzr, [x19, #8]
  416974:	b	416bec <wcrtomb@plt+0x1437c>
  416978:	ldrb	w8, [x19, #73]
  41697c:	tbnz	w8, #5, 416a34 <wcrtomb@plt+0x141c4>
  416980:	ldr	w8, [x20, #64]
  416984:	cbz	w8, 4168a0 <wcrtomb@plt+0x14030>
  416988:	ldrh	w8, [x20, #108]
  41698c:	cmp	w8, #0x4
  416990:	b.eq	4168a0 <wcrtomb@plt+0x14030>  // b.none
  416994:	mov	w8, #0x7                   	// #7
  416998:	b	41689c <wcrtomb@plt+0x1402c>
  41699c:	ldr	w0, [x19, #44]
  4169a0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4169a4:	add	x1, x1, #0xea7
  4169a8:	bl	413484 <wcrtomb@plt+0x10c14>
  4169ac:	str	w0, [x20, #68]
  4169b0:	tbnz	w0, #31, 416a6c <wcrtomb@plt+0x141fc>
  4169b4:	ldrh	w8, [x20, #110]
  4169b8:	orr	w8, w8, #0x2
  4169bc:	strh	w8, [x20, #110]
  4169c0:	b	416c2c <wcrtomb@plt+0x143bc>
  4169c4:	ldrb	w8, [x19, #73]
  4169c8:	tbnz	w8, #5, 416a34 <wcrtomb@plt+0x141c4>
  4169cc:	ldr	x21, [x20, #8]
  4169d0:	mov	x0, x20
  4169d4:	str	x21, [x19]
  4169d8:	bl	402620 <free@plt>
  4169dc:	ldr	x8, [x21, #88]
  4169e0:	cmn	x8, #0x1
  4169e4:	b.eq	416a50 <wcrtomb@plt+0x141e0>  // b.none
  4169e8:	ldrh	w8, [x21, #108]
  4169ec:	cmp	w8, #0xb
  4169f0:	b.eq	416d90 <wcrtomb@plt+0x14520>  // b.none
  4169f4:	ldr	x8, [x19, #32]
  4169f8:	ldr	x9, [x21, #72]
  4169fc:	strb	wzr, [x8, x9]
  416a00:	ldr	x8, [x21, #88]
  416a04:	cbz	x8, 416b48 <wcrtomb@plt+0x142d8>
  416a08:	ldrh	w8, [x21, #110]
  416a0c:	tbnz	w8, #1, 416b70 <wcrtomb@plt+0x14300>
  416a10:	tbnz	w8, #0, 416d50 <wcrtomb@plt+0x144e0>
  416a14:	ldr	x1, [x21, #8]
  416a18:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x11d70>
  416a1c:	add	x3, x3, #0xea6
  416a20:	mov	w2, #0xffffffff            	// #-1
  416a24:	mov	x0, x19
  416a28:	bl	416e30 <wcrtomb@plt+0x145c0>
  416a2c:	cbnz	w0, 416b54 <wcrtomb@plt+0x142e4>
  416a30:	b	416d50 <wcrtomb@plt+0x144e0>
  416a34:	mov	x20, xzr
  416a38:	mov	x0, x20
  416a3c:	ldp	x20, x19, [sp, #48]
  416a40:	ldp	x22, x21, [sp, #32]
  416a44:	ldr	x23, [sp, #16]
  416a48:	ldp	x29, x30, [sp], #64
  416a4c:	ret
  416a50:	mov	x0, x21
  416a54:	bl	402620 <free@plt>
  416a58:	bl	4027e0 <__errno_location@plt>
  416a5c:	mov	x20, xzr
  416a60:	str	wzr, [x0]
  416a64:	str	xzr, [x19]
  416a68:	b	416a38 <wcrtomb@plt+0x141c8>
  416a6c:	bl	4027e0 <__errno_location@plt>
  416a70:	ldr	w8, [x0]
  416a74:	mov	w9, #0x7                   	// #7
  416a78:	strh	w9, [x20, #108]
  416a7c:	str	w8, [x20, #64]
  416a80:	b	416c2c <wcrtomb@plt+0x143bc>
  416a84:	ldr	x0, [x19, #88]
  416a88:	bl	402620 <free@plt>
  416a8c:	ldr	x8, [x21, #96]
  416a90:	add	x20, x21, #0xf8
  416a94:	mov	x1, x20
  416a98:	str	x8, [x21, #72]
  416a9c:	ldr	x0, [x19, #32]
  416aa0:	add	x2, x8, #0x1
  416aa4:	bl	402230 <memmove@plt>
  416aa8:	mov	w1, #0x2f                  	// #47
  416aac:	mov	x0, x20
  416ab0:	bl	402510 <strrchr@plt>
  416ab4:	cbz	x0, 416aec <wcrtomb@plt+0x1427c>
  416ab8:	cmp	x0, x20
  416abc:	b.ne	416ac8 <wcrtomb@plt+0x14258>  // b.any
  416ac0:	ldrb	w8, [x21, #249]
  416ac4:	cbz	w8, 416aec <wcrtomb@plt+0x1427c>
  416ac8:	add	x22, x0, #0x1
  416acc:	mov	x0, x22
  416ad0:	bl	402270 <strlen@plt>
  416ad4:	mov	x23, x0
  416ad8:	add	x2, x0, #0x1
  416adc:	mov	x0, x20
  416ae0:	mov	x1, x22
  416ae4:	bl	402230 <memmove@plt>
  416ae8:	str	x23, [x21, #96]
  416aec:	ldr	x8, [x19, #32]
  416af0:	mov	w9, #0x102                 	// #258
  416af4:	stp	x8, x8, [x21, #48]
  416af8:	ldrh	w8, [x19, #72]
  416afc:	tst	w8, w9
  416b00:	b.eq	416b30 <wcrtomb@plt+0x142c0>  // b.none
  416b04:	adrp	x2, 417000 <wcrtomb@plt+0x14790>
  416b08:	adrp	x3, 417000 <wcrtomb@plt+0x14790>
  416b0c:	adrp	x4, 402000 <mbrtowc@plt-0x200>
  416b10:	add	x2, x2, #0xd00
  416b14:	add	x3, x3, #0xd10
  416b18:	add	x4, x4, #0x620
  416b1c:	mov	w0, #0x1f                  	// #31
  416b20:	mov	x1, xzr
  416b24:	bl	4122f0 <wcrtomb@plt+0xfa80>
  416b28:	str	x0, [x19, #88]
  416b2c:	b	416c28 <wcrtomb@plt+0x143b8>
  416b30:	mov	w0, #0x20                  	// #32
  416b34:	bl	4023a0 <malloc@plt>
  416b38:	str	x0, [x19, #88]
  416b3c:	cbz	x0, 416c28 <wcrtomb@plt+0x143b8>
  416b40:	bl	4278a8 <_obstack_memory_used@@Base+0xf618>
  416b44:	b	416c28 <wcrtomb@plt+0x143b8>
  416b48:	mov	x0, x19
  416b4c:	bl	4179b4 <wcrtomb@plt+0x15144>
  416b50:	cbz	w0, 416d50 <wcrtomb@plt+0x144e0>
  416b54:	bl	4027e0 <__errno_location@plt>
  416b58:	ldr	w8, [x0]
  416b5c:	str	w8, [x21, #64]
  416b60:	ldr	w8, [x19, #72]
  416b64:	orr	w8, w8, #0x2000
  416b68:	str	w8, [x19, #72]
  416b6c:	b	416d50 <wcrtomb@plt+0x144e0>
  416b70:	ldr	w8, [x19, #72]
  416b74:	tbnz	w8, #2, 416d48 <wcrtomb@plt+0x144d8>
  416b78:	ldr	w20, [x21, #68]
  416b7c:	tbnz	w8, #9, 416d20 <wcrtomb@plt+0x144b0>
  416b80:	mov	w0, w20
  416b84:	bl	4022b0 <fchdir@plt>
  416b88:	cbz	w0, 416d48 <wcrtomb@plt+0x144d8>
  416b8c:	bl	4027e0 <__errno_location@plt>
  416b90:	ldr	w8, [x0]
  416b94:	str	w8, [x21, #64]
  416b98:	ldr	w8, [x19, #72]
  416b9c:	orr	w8, w8, #0x2000
  416ba0:	str	w8, [x19, #72]
  416ba4:	b	416d48 <wcrtomb@plt+0x144d8>
  416ba8:	ldr	w0, [x19, #44]
  416bac:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  416bb0:	add	x1, x1, #0xea7
  416bb4:	bl	413484 <wcrtomb@plt+0x10c14>
  416bb8:	str	w0, [x21, #68]
  416bbc:	tbnz	w0, #31, 416bd0 <wcrtomb@plt+0x14360>
  416bc0:	ldrh	w8, [x21, #110]
  416bc4:	orr	w8, w8, #0x2
  416bc8:	strh	w8, [x21, #110]
  416bcc:	b	416be4 <wcrtomb@plt+0x14374>
  416bd0:	bl	4027e0 <__errno_location@plt>
  416bd4:	ldr	w8, [x0]
  416bd8:	mov	w9, #0x7                   	// #7
  416bdc:	strh	w9, [x21, #108]
  416be0:	str	w8, [x21, #64]
  416be4:	mov	w8, #0x3                   	// #3
  416be8:	strh	w8, [x21, #112]
  416bec:	ldr	x8, [x21, #8]
  416bf0:	ldr	x11, [x19, #32]
  416bf4:	add	x1, x21, #0xf8
  416bf8:	ldr	x9, [x8, #72]
  416bfc:	ldr	x8, [x8, #56]
  416c00:	sub	x10, x9, #0x1
  416c04:	ldrb	w8, [x8, x10]
  416c08:	cmp	w8, #0x2f
  416c0c:	csel	x8, x10, x9, eq  // eq = none
  416c10:	add	x0, x11, x8
  416c14:	mov	w8, #0x2f                  	// #47
  416c18:	strb	w8, [x0], #1
  416c1c:	ldr	x8, [x21, #96]
  416c20:	add	x2, x8, #0x1
  416c24:	bl	402230 <memmove@plt>
  416c28:	mov	x20, x21
  416c2c:	str	x20, [x19]
  416c30:	ldrh	w0, [x20, #108]
  416c34:	cmp	w0, #0xb
  416c38:	b.ne	416ce0 <wcrtomb@plt+0x14470>  // b.any
  416c3c:	ldr	x8, [x20, #168]
  416c40:	cmp	x8, #0x1
  416c44:	b.eq	416a38 <wcrtomb@plt+0x141c8>  // b.none
  416c48:	cmp	x8, #0x2
  416c4c:	b.ne	416d90 <wcrtomb@plt+0x14520>  // b.any
  416c50:	ldr	x21, [x20, #8]
  416c54:	ldr	w8, [x21, #104]
  416c58:	cbnz	w8, 416c98 <wcrtomb@plt+0x14428>
  416c5c:	ldr	w8, [x19, #72]
  416c60:	mvn	w8, w8
  416c64:	tst	w8, #0x18
  416c68:	b.ne	416c98 <wcrtomb@plt+0x14428>  // b.any
  416c6c:	ldr	w1, [x19, #44]
  416c70:	mov	x0, x21
  416c74:	bl	417d3c <wcrtomb@plt+0x154cc>
  416c78:	mov	w8, #0x4973                	// #18803
  416c7c:	movk	w8, #0x5265, lsl #16
  416c80:	cmp	x0, x8
  416c84:	b.eq	416cdc <wcrtomb@plt+0x1446c>  // b.none
  416c88:	mov	w8, #0x5342                	// #21314
  416c8c:	movk	w8, #0x5846, lsl #16
  416c90:	cmp	x0, x8
  416c94:	b.eq	416cdc <wcrtomb@plt+0x1446c>  // b.none
  416c98:	mov	x0, x19
  416c9c:	mov	x1, x20
  416ca0:	mov	w2, wzr
  416ca4:	bl	4162b8 <wcrtomb@plt+0x13a48>
  416ca8:	ldr	w8, [x20, #136]
  416cac:	strh	w0, [x20, #108]
  416cb0:	and	w8, w8, #0xf000
  416cb4:	cmp	w8, #0x4, lsl #12
  416cb8:	b.ne	416ce0 <wcrtomb@plt+0x14470>  // b.any
  416cbc:	ldr	x8, [x20, #88]
  416cc0:	cbz	x8, 416cdc <wcrtomb@plt+0x1446c>
  416cc4:	ldr	w8, [x21, #104]
  416cc8:	add	w9, w8, #0x1
  416ccc:	cmp	w9, #0x2
  416cd0:	b.cc	416cdc <wcrtomb@plt+0x1446c>  // b.lo, b.ul, b.last
  416cd4:	sub	w8, w8, #0x1
  416cd8:	str	w8, [x21, #104]
  416cdc:	ldrh	w0, [x20, #108]
  416ce0:	and	w8, w0, #0xffff
  416ce4:	cmp	w8, #0x1
  416ce8:	b.ne	416a38 <wcrtomb@plt+0x141c8>  // b.any
  416cec:	ldr	x8, [x20, #88]
  416cf0:	cbnz	x8, 416cfc <wcrtomb@plt+0x1448c>
  416cf4:	ldr	x8, [x20, #120]
  416cf8:	str	x8, [x19, #24]
  416cfc:	mov	x0, x19
  416d00:	mov	x1, x20
  416d04:	bl	417a40 <wcrtomb@plt+0x151d0>
  416d08:	tbnz	w0, #0, 416a38 <wcrtomb@plt+0x141c8>
  416d0c:	bl	4027e0 <__errno_location@plt>
  416d10:	mov	w8, #0xc                   	// #12
  416d14:	mov	x20, xzr
  416d18:	str	w8, [x0]
  416d1c:	b	416a38 <wcrtomb@plt+0x141c8>
  416d20:	ldr	w1, [x19, #44]
  416d24:	cmp	w1, w20
  416d28:	b.ne	416d34 <wcrtomb@plt+0x144c4>  // b.any
  416d2c:	cmn	w1, #0x64
  416d30:	b.ne	416d90 <wcrtomb@plt+0x14520>  // b.any
  416d34:	add	x0, x19, #0x60
  416d38:	bl	427b24 <_obstack_memory_used@@Base+0xf894>
  416d3c:	tbnz	w0, #31, 416d44 <wcrtomb@plt+0x144d4>
  416d40:	bl	4024f0 <close@plt>
  416d44:	str	w20, [x19, #44]
  416d48:	ldr	w0, [x21, #68]
  416d4c:	bl	4024f0 <close@plt>
  416d50:	ldrh	w8, [x21, #108]
  416d54:	cmp	w8, #0x2
  416d58:	b.eq	416d80 <wcrtomb@plt+0x14510>  // b.none
  416d5c:	ldr	w8, [x21, #64]
  416d60:	mov	w9, #0x6                   	// #6
  416d64:	cmp	w8, #0x0
  416d68:	cinc	w9, w9, ne  // ne = any
  416d6c:	strh	w9, [x21, #108]
  416d70:	cbnz	w8, 416d80 <wcrtomb@plt+0x14510>
  416d74:	mov	x0, x19
  416d78:	mov	x1, x21
  416d7c:	bl	416d94 <wcrtomb@plt+0x14524>
  416d80:	ldrb	w8, [x19, #73]
  416d84:	tst	w8, #0x20
  416d88:	csel	x20, x21, xzr, eq  // eq = none
  416d8c:	b	416a38 <wcrtomb@plt+0x141c8>
  416d90:	bl	402560 <abort@plt>
  416d94:	sub	sp, sp, #0x30
  416d98:	stp	x29, x30, [sp, #32]
  416d9c:	ldrh	w8, [x0, #72]
  416da0:	mov	w9, #0x102                 	// #258
  416da4:	add	x29, sp, #0x20
  416da8:	tst	w8, w9
  416dac:	b.eq	416dd8 <wcrtomb@plt+0x14568>  // b.none
  416db0:	ldur	q0, [x1, #120]
  416db4:	mov	x1, sp
  416db8:	str	q0, [sp]
  416dbc:	ldr	x0, [x0, #88]
  416dc0:	bl	412d3c <wcrtomb@plt+0x104cc>
  416dc4:	cbz	x0, 416e2c <wcrtomb@plt+0x145bc>
  416dc8:	bl	402620 <free@plt>
  416dcc:	ldp	x29, x30, [sp, #32]
  416dd0:	add	sp, sp, #0x30
  416dd4:	ret
  416dd8:	ldr	x8, [x1, #8]
  416ddc:	cbz	x8, 416dcc <wcrtomb@plt+0x1455c>
  416de0:	ldr	x9, [x8, #88]
  416de4:	tbnz	x9, #63, 416dcc <wcrtomb@plt+0x1455c>
  416de8:	ldr	x9, [x0, #88]
  416dec:	ldr	x10, [x9, #16]
  416df0:	cbz	x10, 416e2c <wcrtomb@plt+0x145bc>
  416df4:	ldr	x10, [x9]
  416df8:	ldr	x11, [x1, #128]
  416dfc:	cmp	x10, x11
  416e00:	b.ne	416dcc <wcrtomb@plt+0x1455c>  // b.any
  416e04:	ldr	x10, [x9, #8]
  416e08:	ldr	x11, [x1, #120]
  416e0c:	cmp	x10, x11
  416e10:	b.ne	416dcc <wcrtomb@plt+0x1455c>  // b.any
  416e14:	ldr	x10, [x8, #120]
  416e18:	str	x10, [x9, #8]
  416e1c:	ldr	x8, [x8, #128]
  416e20:	ldr	x9, [x0, #88]
  416e24:	str	x8, [x9]
  416e28:	b	416dcc <wcrtomb@plt+0x1455c>
  416e2c:	bl	402560 <abort@plt>
  416e30:	sub	sp, sp, #0xd0
  416e34:	stp	x22, x21, [sp, #176]
  416e38:	stp	x20, x19, [sp, #192]
  416e3c:	mov	x22, x3
  416e40:	mov	w19, w2
  416e44:	mov	x21, x1
  416e48:	mov	x20, x0
  416e4c:	stp	x29, x30, [sp, #128]
  416e50:	str	x25, [sp, #144]
  416e54:	stp	x24, x23, [sp, #160]
  416e58:	add	x29, sp, #0x80
  416e5c:	cbz	x3, 416ec8 <wcrtomb@plt+0x14658>
  416e60:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  416e64:	add	x1, x1, #0xea6
  416e68:	mov	x0, x22
  416e6c:	bl	402600 <strcmp@plt>
  416e70:	cmp	w0, #0x0
  416e74:	cset	w23, ne  // ne = any
  416e78:	ldr	w8, [x20, #72]
  416e7c:	tbnz	w8, #2, 416ed4 <wcrtomb@plt+0x14664>
  416e80:	cmp	w19, #0x0
  416e84:	cset	w9, ge  // ge = tcont
  416e88:	orr	w9, w9, w23
  416e8c:	tbnz	w9, #0, 416ef0 <wcrtomb@plt+0x14680>
  416e90:	tbz	w8, #9, 416ef0 <wcrtomb@plt+0x14680>
  416e94:	add	x19, x20, #0x60
  416e98:	mov	x0, x19
  416e9c:	bl	427b1c <_obstack_memory_used@@Base+0xf88c>
  416ea0:	tbnz	w0, #0, 416f04 <wcrtomb@plt+0x14694>
  416ea4:	mov	x0, x19
  416ea8:	bl	427b6c <_obstack_memory_used@@Base+0xf8dc>
  416eac:	tbnz	w0, #31, 416f04 <wcrtomb@plt+0x14694>
  416eb0:	mov	w19, w0
  416eb4:	mov	w24, wzr
  416eb8:	mov	x22, xzr
  416ebc:	ldr	w25, [x20, #72]
  416ec0:	tbz	w25, #1, 416f3c <wcrtomb@plt+0x146cc>
  416ec4:	b	416f6c <wcrtomb@plt+0x146fc>
  416ec8:	mov	w23, #0x1                   	// #1
  416ecc:	ldr	w8, [x20, #72]
  416ed0:	tbz	w8, #2, 416e80 <wcrtomb@plt+0x14610>
  416ed4:	mov	w21, wzr
  416ed8:	tbnz	w19, #31, 417040 <wcrtomb@plt+0x147d0>
  416edc:	tbz	w8, #9, 417040 <wcrtomb@plt+0x147d0>
  416ee0:	mov	w0, w19
  416ee4:	bl	4024f0 <close@plt>
  416ee8:	mov	w21, wzr
  416eec:	b	417040 <wcrtomb@plt+0x147d0>
  416ef0:	tbnz	w19, #31, 416f04 <wcrtomb@plt+0x14694>
  416ef4:	mov	w24, wzr
  416ef8:	ldr	w25, [x20, #72]
  416efc:	tbz	w25, #1, 416f3c <wcrtomb@plt+0x146cc>
  416f00:	b	416f6c <wcrtomb@plt+0x146fc>
  416f04:	ldr	w8, [x20, #72]
  416f08:	mov	w2, #0x4900                	// #18688
  416f0c:	movk	w2, #0x8, lsl #16
  416f10:	lsr	w9, w8, #4
  416f14:	bfi	w2, w9, #15, #1
  416f18:	tbnz	w8, #9, 416f8c <wcrtomb@plt+0x1471c>
  416f1c:	mov	x0, x22
  416f20:	mov	w1, w2
  416f24:	bl	4279f0 <_obstack_memory_used@@Base+0xf760>
  416f28:	mov	w19, w0
  416f2c:	tbnz	w0, #31, 416fa0 <wcrtomb@plt+0x14730>
  416f30:	mov	w24, #0x1                   	// #1
  416f34:	ldr	w25, [x20, #72]
  416f38:	tbnz	w25, #1, 416f6c <wcrtomb@plt+0x146fc>
  416f3c:	cbz	x22, 416f54 <wcrtomb@plt+0x146e4>
  416f40:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  416f44:	add	x1, x1, #0xea6
  416f48:	mov	x0, x22
  416f4c:	bl	402600 <strcmp@plt>
  416f50:	cbz	w0, 416f6c <wcrtomb@plt+0x146fc>
  416f54:	tbnz	w25, #9, 416fd0 <wcrtomb@plt+0x14760>
  416f58:	mov	w0, w19
  416f5c:	bl	4022b0 <fchdir@plt>
  416f60:	mov	w21, w0
  416f64:	cbnz	w24, 41700c <wcrtomb@plt+0x1479c>
  416f68:	b	417040 <wcrtomb@plt+0x147d0>
  416f6c:	mov	x2, sp
  416f70:	mov	w0, wzr
  416f74:	mov	w1, w19
  416f78:	bl	402720 <__fxstat@plt>
  416f7c:	cbz	w0, 416fa8 <wcrtomb@plt+0x14738>
  416f80:	mov	w21, #0xffffffff            	// #-1
  416f84:	cbnz	w24, 41700c <wcrtomb@plt+0x1479c>
  416f88:	b	417040 <wcrtomb@plt+0x147d0>
  416f8c:	ldr	w0, [x20, #44]
  416f90:	mov	x1, x22
  416f94:	bl	413484 <wcrtomb@plt+0x10c14>
  416f98:	mov	w19, w0
  416f9c:	tbz	w0, #31, 416f30 <wcrtomb@plt+0x146c0>
  416fa0:	mov	w21, #0xffffffff            	// #-1
  416fa4:	b	417040 <wcrtomb@plt+0x147d0>
  416fa8:	ldr	x8, [x21, #120]
  416fac:	ldr	x9, [sp]
  416fb0:	cmp	x8, x9
  416fb4:	b.ne	416ff8 <wcrtomb@plt+0x14788>  // b.any
  416fb8:	ldr	x8, [x21, #128]
  416fbc:	ldr	x9, [sp, #8]
  416fc0:	cmp	x8, x9
  416fc4:	b.ne	416ff8 <wcrtomb@plt+0x14788>  // b.any
  416fc8:	ldr	w25, [x20, #72]
  416fcc:	tbz	w25, #9, 416f58 <wcrtomb@plt+0x146e8>
  416fd0:	ldr	w1, [x20, #44]
  416fd4:	cmp	w1, w19
  416fd8:	b.ne	416fe4 <wcrtomb@plt+0x14774>  // b.any
  416fdc:	cmn	w1, #0x64
  416fe0:	b.ne	417060 <wcrtomb@plt+0x147f0>  // b.any
  416fe4:	cbz	w23, 417028 <wcrtomb@plt+0x147b8>
  416fe8:	add	x0, x20, #0x60
  416fec:	bl	427b24 <_obstack_memory_used@@Base+0xf894>
  416ff0:	tbz	w0, #31, 417034 <wcrtomb@plt+0x147c4>
  416ff4:	b	417038 <wcrtomb@plt+0x147c8>
  416ff8:	bl	4027e0 <__errno_location@plt>
  416ffc:	mov	w8, #0x2                   	// #2
  417000:	str	w8, [x0]
  417004:	mov	w21, #0xffffffff            	// #-1
  417008:	cbz	w24, 417040 <wcrtomb@plt+0x147d0>
  41700c:	bl	4027e0 <__errno_location@plt>
  417010:	ldr	w22, [x0]
  417014:	mov	x20, x0
  417018:	mov	w0, w19
  41701c:	bl	4024f0 <close@plt>
  417020:	str	w22, [x20]
  417024:	b	417040 <wcrtomb@plt+0x147d0>
  417028:	tbnz	w25, #2, 417038 <wcrtomb@plt+0x147c8>
  41702c:	tbnz	w1, #31, 417038 <wcrtomb@plt+0x147c8>
  417030:	mov	w0, w1
  417034:	bl	4024f0 <close@plt>
  417038:	mov	w21, wzr
  41703c:	str	w19, [x20, #44]
  417040:	mov	w0, w21
  417044:	ldp	x20, x19, [sp, #192]
  417048:	ldp	x22, x21, [sp, #176]
  41704c:	ldp	x24, x23, [sp, #160]
  417050:	ldr	x25, [sp, #144]
  417054:	ldp	x29, x30, [sp, #128]
  417058:	add	sp, sp, #0xd0
  41705c:	ret
  417060:	bl	402560 <abort@plt>
  417064:	sub	sp, sp, #0xc0
  417068:	stp	x29, x30, [sp, #96]
  41706c:	stp	x28, x27, [sp, #112]
  417070:	stp	x26, x25, [sp, #128]
  417074:	stp	x24, x23, [sp, #144]
  417078:	stp	x22, x21, [sp, #160]
  41707c:	stp	x20, x19, [sp, #176]
  417080:	ldr	x22, [x0]
  417084:	mov	x20, x0
  417088:	mov	w24, w1
  41708c:	add	x29, sp, #0x60
  417090:	ldr	x23, [x22, #24]
  417094:	cbz	x23, 4170d0 <wcrtomb@plt+0x14860>
  417098:	mov	x0, x23
  41709c:	bl	4026a0 <dirfd@plt>
  4170a0:	stur	w0, [x29, #-4]
  4170a4:	tbnz	w0, #31, 4170f4 <wcrtomb@plt+0x14884>
  4170a8:	str	wzr, [sp]
  4170ac:	mov	x9, x20
  4170b0:	ldr	x8, [x9, #64]!
  4170b4:	cmp	x8, #0x0
  4170b8:	mov	w8, #0x86a0                	// #34464
  4170bc:	movk	w8, #0x1, lsl #16
  4170c0:	csinv	x8, x8, xzr, eq  // eq = none
  4170c4:	str	x9, [sp, #24]
  4170c8:	str	x8, [sp, #48]
  4170cc:	b	417324 <wcrtomb@plt+0x14ab4>
  4170d0:	ldr	w8, [x20, #72]
  4170d4:	mov	w9, #0x204                 	// #516
  4170d8:	and	w9, w8, w9
  4170dc:	cmp	w9, #0x200
  4170e0:	b.ne	417114 <wcrtomb@plt+0x148a4>  // b.any
  4170e4:	ldr	w0, [x20, #44]
  4170e8:	ldr	x1, [x22, #48]
  4170ec:	tbz	w8, #4, 417134 <wcrtomb@plt+0x148c4>
  4170f0:	b	417120 <wcrtomb@plt+0x148b0>
  4170f4:	ldr	x0, [x22, #24]
  4170f8:	bl	4024e0 <closedir@plt>
  4170fc:	mov	x8, xzr
  417100:	cmp	w24, #0x3
  417104:	mov	x24, x8
  417108:	str	xzr, [x22, #24]
  41710c:	b.eq	417174 <wcrtomb@plt+0x14904>  // b.none
  417110:	b	417970 <wcrtomb@plt+0x15100>
  417114:	mov	w0, #0xffffff9c            	// #-100
  417118:	ldr	x1, [x22, #48]
  41711c:	tbz	w8, #4, 417134 <wcrtomb@plt+0x148c4>
  417120:	tbz	w8, #0, 41712c <wcrtomb@plt+0x148bc>
  417124:	ldr	x8, [x22, #88]
  417128:	cbz	x8, 417134 <wcrtomb@plt+0x148c4>
  41712c:	mov	w2, #0x8000                	// #32768
  417130:	b	417138 <wcrtomb@plt+0x148c8>
  417134:	mov	w2, wzr
  417138:	sub	x3, x29, #0x4
  41713c:	bl	427cbc <_obstack_memory_used@@Base+0xfa2c>
  417140:	str	x0, [x22, #24]
  417144:	cbz	x0, 41716c <wcrtomb@plt+0x148fc>
  417148:	ldrh	w8, [x22, #108]
  41714c:	cmp	w8, #0xb
  417150:	b.ne	417190 <wcrtomb@plt+0x14920>  // b.any
  417154:	mov	x0, x20
  417158:	mov	x1, x22
  41715c:	mov	w2, wzr
  417160:	bl	4162b8 <wcrtomb@plt+0x13a48>
  417164:	strh	w0, [x22, #108]
  417168:	b	4171c4 <wcrtomb@plt+0x14954>
  41716c:	cmp	w24, #0x3
  417170:	b.ne	41725c <wcrtomb@plt+0x149ec>  // b.any
  417174:	mov	w8, #0x4                   	// #4
  417178:	strh	w8, [x22, #108]
  41717c:	bl	4027e0 <__errno_location@plt>
  417180:	ldr	w8, [x0]
  417184:	mov	x24, xzr
  417188:	str	w8, [x22, #64]
  41718c:	b	417970 <wcrtomb@plt+0x15100>
  417190:	ldrb	w8, [x20, #73]
  417194:	tbz	w8, #0, 4171c4 <wcrtomb@plt+0x14954>
  417198:	mov	x0, x20
  41719c:	mov	x1, x22
  4171a0:	bl	416d94 <wcrtomb@plt+0x14524>
  4171a4:	mov	x0, x20
  4171a8:	mov	x1, x22
  4171ac:	mov	w2, wzr
  4171b0:	bl	4162b8 <wcrtomb@plt+0x13a48>
  4171b4:	mov	x0, x20
  4171b8:	mov	x1, x22
  4171bc:	bl	417a40 <wcrtomb@plt+0x151d0>
  4171c0:	tbz	w0, #0, 417264 <wcrtomb@plt+0x149f4>
  4171c4:	mov	x9, x20
  4171c8:	ldr	x8, [x9, #64]!
  4171cc:	str	x9, [sp, #24]
  4171d0:	mov	w9, #0x86a0                	// #34464
  4171d4:	movk	w9, #0x1, lsl #16
  4171d8:	cmp	x8, #0x0
  4171dc:	csinv	x8, x9, xzr, eq  // eq = none
  4171e0:	cmp	w24, #0x2
  4171e4:	str	x8, [sp, #48]
  4171e8:	b.ne	417200 <wcrtomb@plt+0x14990>  // b.any
  4171ec:	cmp	w24, #0x3
  4171f0:	cset	w19, eq  // eq = none
  4171f4:	b.ne	41731c <wcrtomb@plt+0x14aac>  // b.any
  4171f8:	mov	w21, wzr
  4171fc:	b	417294 <wcrtomb@plt+0x14a24>
  417200:	ldr	w8, [x20, #72]
  417204:	and	w8, w8, #0x38
  417208:	cmp	w8, #0x18
  41720c:	b.ne	417288 <wcrtomb@plt+0x14a18>  // b.any
  417210:	ldr	w8, [x22, #140]
  417214:	cmp	w8, #0x2
  417218:	b.ne	417288 <wcrtomb@plt+0x14a18>  // b.any
  41721c:	ldur	w1, [x29, #-4]
  417220:	mov	x0, x22
  417224:	bl	417d3c <wcrtomb@plt+0x154cc>
  417228:	mov	w8, #0x9f9f                	// #40863
  41722c:	cmp	x0, x8
  417230:	b.le	417278 <wcrtomb@plt+0x14a08>
  417234:	mov	w8, #0x9fa0                	// #40864
  417238:	cmp	x0, x8
  41723c:	b.eq	417288 <wcrtomb@plt+0x14a18>  // b.none
  417240:	mov	w8, #0x4d42                	// #19778
  417244:	movk	w8, #0xff53, lsl #16
  417248:	cmp	x0, x8
  41724c:	b.eq	417288 <wcrtomb@plt+0x14a18>  // b.none
  417250:	mov	w8, #0x414f                	// #16719
  417254:	movk	w8, #0x5346, lsl #16
  417258:	b	417280 <wcrtomb@plt+0x14a10>
  41725c:	mov	x24, xzr
  417260:	b	417970 <wcrtomb@plt+0x15100>
  417264:	bl	4027e0 <__errno_location@plt>
  417268:	mov	w8, #0xc                   	// #12
  41726c:	mov	x24, xzr
  417270:	str	w8, [x0]
  417274:	b	417970 <wcrtomb@plt+0x15100>
  417278:	cbz	x0, 417288 <wcrtomb@plt+0x14a18>
  41727c:	mov	w8, #0x6969                	// #26985
  417280:	cmp	x0, x8
  417284:	b.ne	4171ec <wcrtomb@plt+0x1497c>  // b.any
  417288:	cmp	w24, #0x3
  41728c:	cset	w19, eq  // eq = none
  417290:	mov	w21, #0x1                   	// #1
  417294:	ldrb	w9, [x20, #73]
  417298:	ldur	w8, [x29, #-4]
  41729c:	tbz	w9, #1, 4172b8 <wcrtomb@plt+0x14a48>
  4172a0:	mov	w1, #0x406                 	// #1030
  4172a4:	mov	w2, #0x3                   	// #3
  4172a8:	mov	w0, w8
  4172ac:	bl	427dcc <_obstack_memory_used@@Base+0xfb3c>
  4172b0:	mov	w8, w0
  4172b4:	stur	w0, [x29, #-4]
  4172b8:	tbnz	w8, #31, 4172d4 <wcrtomb@plt+0x14a64>
  4172bc:	mov	x0, x20
  4172c0:	mov	x1, x22
  4172c4:	mov	w2, w8
  4172c8:	mov	x3, xzr
  4172cc:	bl	416e30 <wcrtomb@plt+0x145c0>
  4172d0:	cbz	w0, 4178f4 <wcrtomb@plt+0x15084>
  4172d4:	and	w8, w19, w21
  4172d8:	cmp	w8, #0x1
  4172dc:	b.ne	4172ec <wcrtomb@plt+0x14a7c>  // b.any
  4172e0:	bl	4027e0 <__errno_location@plt>
  4172e4:	ldr	w8, [x0]
  4172e8:	str	w8, [x22, #64]
  4172ec:	ldrh	w8, [x22, #110]
  4172f0:	ldr	x0, [x22, #24]
  4172f4:	orr	w8, w8, #0x1
  4172f8:	strh	w8, [x22, #110]
  4172fc:	bl	4024e0 <closedir@plt>
  417300:	str	xzr, [x22, #24]
  417304:	ldrb	w8, [x20, #73]
  417308:	tbz	w8, #1, 417318 <wcrtomb@plt+0x14aa8>
  41730c:	ldur	w0, [x29, #-4]
  417310:	tbnz	w0, #31, 417318 <wcrtomb@plt+0x14aa8>
  417314:	bl	4024f0 <close@plt>
  417318:	str	xzr, [x22, #24]
  41731c:	mov	w8, #0x1                   	// #1
  417320:	str	w8, [sp]
  417324:	ldr	x8, [x22, #72]
  417328:	ldr	x9, [x22, #56]
  41732c:	ldrb	w11, [x20, #72]
  417330:	str	w24, [sp, #4]
  417334:	sub	x10, x8, #0x1
  417338:	ldrb	w9, [x9, x10]
  41733c:	cmp	w9, #0x2f
  417340:	csel	x8, x10, x8, eq  // eq = none
  417344:	tbnz	w11, #2, 417350 <wcrtomb@plt+0x14ae0>
  417348:	stur	xzr, [x29, #-40]
  41734c:	b	417364 <wcrtomb@plt+0x14af4>
  417350:	ldr	x9, [x20, #32]
  417354:	add	x10, x9, x8
  417358:	mov	w9, #0x2f                  	// #47
  41735c:	strb	w9, [x10], #1
  417360:	stur	x10, [x29, #-40]
  417364:	ldr	x21, [x22, #24]
  417368:	add	x25, x8, #0x1
  41736c:	str	x23, [sp, #8]
  417370:	cbz	x21, 41764c <wcrtomb@plt+0x14ddc>
  417374:	ldr	x8, [x22, #88]
  417378:	ldr	x9, [x20, #48]
  41737c:	add	x8, x8, #0x1
  417380:	str	x8, [sp, #32]
  417384:	sub	x26, x9, x25
  417388:	bl	4027e0 <__errno_location@plt>
  41738c:	mov	x24, xzr
  417390:	mov	x23, xzr
  417394:	mov	x27, xzr
  417398:	stur	x0, [x29, #-32]
  41739c:	str	xzr, [sp, #16]
  4173a0:	str	x22, [sp, #40]
  4173a4:	ldur	x8, [x29, #-32]
  4173a8:	mov	x0, x21
  4173ac:	str	wzr, [x8]
  4173b0:	bl	4024b0 <readdir@plt>
  4173b4:	cbz	x0, 41765c <wcrtomb@plt+0x14dec>
  4173b8:	ldrb	w8, [x20, #72]
  4173bc:	mov	x28, x0
  4173c0:	tbnz	w8, #5, 4173e8 <wcrtomb@plt+0x14b78>
  4173c4:	ldrb	w8, [x28, #19]
  4173c8:	cmp	w8, #0x2e
  4173cc:	b.ne	4173e8 <wcrtomb@plt+0x14b78>  // b.any
  4173d0:	ldrb	w8, [x28, #20]
  4173d4:	cbz	w8, 4175f8 <wcrtomb@plt+0x14d88>
  4173d8:	cmp	w8, #0x2e
  4173dc:	b.ne	4173e8 <wcrtomb@plt+0x14b78>  // b.any
  4173e0:	ldrb	w8, [x28, #21]
  4173e4:	cbz	w8, 4175f8 <wcrtomb@plt+0x14d88>
  4173e8:	mov	x21, x20
  4173ec:	mov	x20, x25
  4173f0:	add	x25, x28, #0x13
  4173f4:	mov	x0, x25
  4173f8:	stur	x27, [x29, #-24]
  4173fc:	bl	402270 <strlen@plt>
  417400:	add	x8, x0, #0x100
  417404:	mov	x22, x0
  417408:	and	x0, x8, #0xfffffffffffffff8
  41740c:	bl	4023a0 <malloc@plt>
  417410:	mov	x27, x0
  417414:	cbz	x0, 417928 <wcrtomb@plt+0x150b8>
  417418:	add	x19, x27, #0xf8
  41741c:	mov	x0, x19
  417420:	mov	x1, x25
  417424:	mov	x2, x22
  417428:	stur	x24, [x29, #-16]
  41742c:	bl	402210 <memcpy@plt>
  417430:	strb	wzr, [x19, x22]
  417434:	str	x22, [x27, #96]
  417438:	str	x21, [x27, #80]
  41743c:	ldr	x25, [x21, #32]
  417440:	mov	x24, x21
  417444:	cmp	x22, x26
  417448:	mov	w8, #0x30000               	// #196608
  41744c:	add	x22, x22, x20
  417450:	str	wzr, [x27, #64]
  417454:	stur	w8, [x27, #110]
  417458:	stp	xzr, xzr, [x27, #24]
  41745c:	str	xzr, [x27, #40]
  417460:	str	x25, [x27, #56]
  417464:	b.cs	417470 <wcrtomb@plt+0x14c00>  // b.hs, b.nlast
  417468:	mov	x25, x20
  41746c:	b	4174d0 <wcrtomb@plt+0x14c60>
  417470:	ldr	x8, [x24, #48]
  417474:	add	x9, x22, #0x101
  417478:	adds	x1, x9, x8
  41747c:	b.cs	4178fc <wcrtomb@plt+0x1508c>  // b.hs, b.nlast
  417480:	mov	x0, x25
  417484:	str	x1, [x24, #48]
  417488:	bl	4024c0 <realloc@plt>
  41748c:	cbz	x0, 417918 <wcrtomb@plt+0x150a8>
  417490:	cmp	x0, x25
  417494:	str	x0, [x24, #32]
  417498:	b.eq	4174c4 <wcrtomb@plt+0x14c54>  // b.none
  41749c:	ldrb	w8, [x24, #72]
  4174a0:	add	x9, x0, x20
  4174a4:	mov	x25, x20
  4174a8:	tst	w8, #0x4
  4174ac:	ldur	x8, [x29, #-40]
  4174b0:	csel	x8, x8, x9, eq  // eq = none
  4174b4:	stur	x8, [x29, #-40]
  4174b8:	mov	w8, #0x1                   	// #1
  4174bc:	str	w8, [sp, #16]
  4174c0:	b	4174c8 <wcrtomb@plt+0x14c58>
  4174c4:	mov	x25, x20
  4174c8:	ldr	x8, [x24, #48]
  4174cc:	sub	x26, x8, x25
  4174d0:	mov	x20, x24
  4174d4:	ldur	x24, [x29, #-16]
  4174d8:	cmp	x22, x25
  4174dc:	b.cc	417848 <wcrtomb@plt+0x14fd8>  // b.lo, b.ul, b.last
  4174e0:	ldr	x8, [sp, #32]
  4174e4:	str	x8, [x27, #88]
  4174e8:	ldr	x8, [x20]
  4174ec:	str	x22, [x27, #72]
  4174f0:	str	x8, [x27, #8]
  4174f4:	ldr	x8, [x28]
  4174f8:	str	x8, [x27, #128]
  4174fc:	ldrb	w8, [x20, #72]
  417500:	tbnz	w8, #2, 41750c <wcrtomb@plt+0x14c9c>
  417504:	str	x19, [x27, #48]
  417508:	b	417528 <wcrtomb@plt+0x14cb8>
  41750c:	ldr	x9, [x27, #96]
  417510:	ldr	x8, [x27, #56]
  417514:	ldur	x0, [x29, #-40]
  417518:	mov	x1, x19
  41751c:	add	x2, x9, #0x1
  417520:	str	x8, [x27, #48]
  417524:	bl	402230 <memmove@plt>
  417528:	ldr	x9, [x20, #64]
  41752c:	ldr	w8, [x20, #72]
  417530:	ldr	x22, [sp, #40]
  417534:	cbz	x9, 417564 <wcrtomb@plt+0x14cf4>
  417538:	tbnz	w8, #10, 417564 <wcrtomb@plt+0x14cf4>
  41753c:	mov	x0, x20
  417540:	mov	x1, x27
  417544:	mov	w2, wzr
  417548:	bl	4162b8 <wcrtomb@plt+0x13a48>
  41754c:	strh	w0, [x27, #108]
  417550:	str	xzr, [x27, #16]
  417554:	cbz	x24, 4175cc <wcrtomb@plt+0x14d5c>
  417558:	ldur	x8, [x29, #-24]
  41755c:	str	x27, [x8, #16]
  417560:	b	4175d0 <wcrtomb@plt+0x14d60>
  417564:	ldrb	w9, [x28, #18]
  417568:	mov	w10, #0x18                  	// #24
  41756c:	bics	wzr, w10, w8
  417570:	mov	w10, #0xfb                  	// #251
  417574:	cset	w8, eq  // eq = none
  417578:	tst	w9, w10
  41757c:	sub	w9, w9, #0x1
  417580:	cset	w10, ne  // ne = any
  417584:	cmp	w9, #0xb
  417588:	and	w8, w8, w10
  41758c:	mov	w10, #0xb                   	// #11
  417590:	strh	w10, [x27, #108]
  417594:	b.hi	4175ac <wcrtomb@plt+0x14d3c>  // b.pmore
  417598:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x11d70>
  41759c:	sxtb	x9, w9
  4175a0:	add	x10, x10, #0xeac
  4175a4:	ldr	w9, [x10, x9, lsl #2]
  4175a8:	b	4175b0 <wcrtomb@plt+0x14d40>
  4175ac:	mov	w9, wzr
  4175b0:	cmp	w8, #0x0
  4175b4:	mov	w8, #0x1                   	// #1
  4175b8:	cinc	x8, x8, eq  // eq = none
  4175bc:	str	w9, [x27, #136]
  4175c0:	str	x8, [x27, #168]
  4175c4:	str	xzr, [x27, #16]
  4175c8:	cbnz	x24, 417558 <wcrtomb@plt+0x14ce8>
  4175cc:	mov	x24, x27
  4175d0:	mov	w8, #0x2710                	// #10000
  4175d4:	cmp	x23, x8
  4175d8:	b.ne	4175e8 <wcrtomb@plt+0x14d78>  // b.any
  4175dc:	ldr	x8, [sp, #24]
  4175e0:	ldr	x8, [x8]
  4175e4:	cbz	x8, 417604 <wcrtomb@plt+0x14d94>
  4175e8:	ldr	x8, [sp, #48]
  4175ec:	add	x23, x23, #0x1
  4175f0:	cmp	x8, x23
  4175f4:	b.ls	417698 <wcrtomb@plt+0x14e28>  // b.plast
  4175f8:	ldr	x21, [x22, #24]
  4175fc:	cbnz	x21, 4173a4 <wcrtomb@plt+0x14b34>
  417600:	b	417698 <wcrtomb@plt+0x14e28>
  417604:	ldur	w1, [x29, #-4]
  417608:	mov	x0, x22
  41760c:	bl	417d3c <wcrtomb@plt+0x154cc>
  417610:	mov	w8, #0x6969                	// #26985
  417614:	cmp	x0, x8
  417618:	str	wzr, [sp, #20]
  41761c:	b.eq	4175e8 <wcrtomb@plt+0x14d78>  // b.none
  417620:	mov	w8, #0x1994                	// #6548
  417624:	movk	w8, #0x102, lsl #16
  417628:	cmp	x0, x8
  41762c:	b.eq	4175e8 <wcrtomb@plt+0x14d78>  // b.none
  417630:	mov	w8, #0x4d42                	// #19778
  417634:	movk	w8, #0xff53, lsl #16
  417638:	cmp	x0, x8
  41763c:	b.eq	4175e8 <wcrtomb@plt+0x14d78>  // b.none
  417640:	mov	w8, #0x1                   	// #1
  417644:	str	w8, [sp, #20]
  417648:	b	4175e8 <wcrtomb@plt+0x14d78>
  41764c:	mov	x24, xzr
  417650:	mov	x23, xzr
  417654:	str	wzr, [sp, #20]
  417658:	b	41772c <wcrtomb@plt+0x14ebc>
  41765c:	ldur	x8, [x29, #-32]
  417660:	ldr	w8, [x8]
  417664:	cbz	w8, 417688 <wcrtomb@plt+0x14e18>
  417668:	ldr	x9, [sp, #8]
  41766c:	str	w8, [x22, #64]
  417670:	mov	w8, #0x4                   	// #4
  417674:	orr	x9, x9, x23
  417678:	cmp	x9, #0x0
  41767c:	mov	w9, #0x7                   	// #7
  417680:	csel	w8, w9, w8, ne  // ne = any
  417684:	strh	w8, [x22, #108]
  417688:	ldr	x0, [x22, #24]
  41768c:	cbz	x0, 417698 <wcrtomb@plt+0x14e28>
  417690:	bl	4024e0 <closedir@plt>
  417694:	str	xzr, [x22, #24]
  417698:	ldr	w8, [sp, #16]
  41769c:	tbz	w8, #0, 41772c <wcrtomb@plt+0x14ebc>
  4176a0:	ldr	x9, [x20, #8]
  4176a4:	ldr	x8, [x20, #32]
  4176a8:	cbnz	x9, 4176c8 <wcrtomb@plt+0x14e58>
  4176ac:	ldr	x9, [x24, #88]
  4176b0:	tbnz	x9, #63, 41772c <wcrtomb@plt+0x14ebc>
  4176b4:	mov	x9, x24
  4176b8:	b	4176f8 <wcrtomb@plt+0x14e88>
  4176bc:	str	x8, [x9, #56]
  4176c0:	ldr	x9, [x9, #16]
  4176c4:	cbz	x9, 4176ac <wcrtomb@plt+0x14e3c>
  4176c8:	ldr	x10, [x9, #48]
  4176cc:	add	x11, x9, #0xf8
  4176d0:	cmp	x10, x11
  4176d4:	b.eq	4176bc <wcrtomb@plt+0x14e4c>  // b.none
  4176d8:	ldr	x11, [x9, #56]
  4176dc:	sub	x10, x10, x11
  4176e0:	add	x10, x8, x10
  4176e4:	str	x10, [x9, #48]
  4176e8:	b	4176bc <wcrtomb@plt+0x14e4c>
  4176ec:	ldr	x11, [x10, #88]
  4176f0:	mov	x9, x10
  4176f4:	tbnz	x11, #63, 41772c <wcrtomb@plt+0x14ebc>
  4176f8:	ldr	x10, [x9, #48]
  4176fc:	add	x11, x9, #0xf8
  417700:	cmp	x10, x11
  417704:	b.eq	417718 <wcrtomb@plt+0x14ea8>  // b.none
  417708:	ldr	x11, [x9, #56]
  41770c:	sub	x10, x10, x11
  417710:	add	x10, x8, x10
  417714:	str	x10, [x9, #48]
  417718:	ldr	x10, [x9, #16]
  41771c:	str	x8, [x9, #56]
  417720:	cbnz	x10, 4176ec <wcrtomb@plt+0x14e7c>
  417724:	ldr	x10, [x9, #8]
  417728:	b	4176ec <wcrtomb@plt+0x14e7c>
  41772c:	ldrb	w8, [x20, #72]
  417730:	tbz	w8, #2, 417750 <wcrtomb@plt+0x14ee0>
  417734:	ldr	x8, [x20, #48]
  417738:	ldur	x10, [x29, #-40]
  41773c:	cmp	x25, x8
  417740:	sub	x9, x10, #0x1
  417744:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  417748:	csel	x8, x9, x10, eq  // eq = none
  41774c:	strb	wzr, [x8]
  417750:	ldr	x8, [sp, #8]
  417754:	ldp	w9, w19, [sp]
  417758:	cmp	x8, #0x0
  41775c:	cset	w8, ne  // ne = any
  417760:	orr	w8, w8, w9
  417764:	tbz	w8, #0, 4177b8 <wcrtomb@plt+0x14f48>
  417768:	cbnz	x23, 4177c4 <wcrtomb@plt+0x14f54>
  41776c:	cmp	w19, #0x3
  417770:	b.ne	417790 <wcrtomb@plt+0x14f20>  // b.any
  417774:	ldrh	w8, [x22, #108]
  417778:	cmp	w8, #0x4
  41777c:	b.eq	417790 <wcrtomb@plt+0x14f20>  // b.none
  417780:	cmp	w8, #0x7
  417784:	b.eq	417790 <wcrtomb@plt+0x14f20>  // b.none
  417788:	mov	w8, #0x6                   	// #6
  41778c:	strh	w8, [x22, #108]
  417790:	cbnz	x24, 4177a8 <wcrtomb@plt+0x14f38>
  417794:	b	417970 <wcrtomb@plt+0x15100>
  417798:	mov	x0, x24
  41779c:	bl	402620 <free@plt>
  4177a0:	mov	x24, x19
  4177a4:	cbz	x19, 417970 <wcrtomb@plt+0x15100>
  4177a8:	ldp	x19, x0, [x24, #16]
  4177ac:	cbz	x0, 417798 <wcrtomb@plt+0x14f28>
  4177b0:	bl	4024e0 <closedir@plt>
  4177b4:	b	417798 <wcrtomb@plt+0x14f28>
  4177b8:	cmp	w19, #0x1
  4177bc:	b.eq	417820 <wcrtomb@plt+0x14fb0>  // b.none
  4177c0:	cbz	x23, 417820 <wcrtomb@plt+0x14fb0>
  4177c4:	ldr	w8, [sp, #20]
  4177c8:	tbz	w8, #0, 4177f4 <wcrtomb@plt+0x14f84>
  4177cc:	adrp	x8, 417000 <wcrtomb@plt+0x14790>
  4177d0:	add	x8, x8, #0xe68
  4177d4:	mov	x0, x20
  4177d8:	mov	x1, x24
  4177dc:	mov	x2, x23
  4177e0:	str	x8, [x20, #64]
  4177e4:	bl	416448 <wcrtomb@plt+0x13bd8>
  4177e8:	mov	x24, x0
  4177ec:	str	xzr, [x20, #64]
  4177f0:	b	417970 <wcrtomb@plt+0x15100>
  4177f4:	cmp	x23, #0x2
  4177f8:	b.cc	417970 <wcrtomb@plt+0x15100>  // b.lo, b.ul, b.last
  4177fc:	ldr	x8, [sp, #24]
  417800:	ldr	x8, [x8]
  417804:	cbz	x8, 417970 <wcrtomb@plt+0x15100>
  417808:	mov	x0, x20
  41780c:	mov	x1, x24
  417810:	mov	x2, x23
  417814:	bl	416448 <wcrtomb@plt+0x13bd8>
  417818:	mov	x24, x0
  41781c:	b	417970 <wcrtomb@plt+0x15100>
  417820:	ldr	x8, [x22, #88]
  417824:	cbz	x8, 4178ac <wcrtomb@plt+0x1503c>
  417828:	ldr	x1, [x22, #8]
  41782c:	adrp	x3, 42a000 <_obstack_memory_used@@Base+0x11d70>
  417830:	add	x3, x3, #0xea6
  417834:	mov	w2, #0xffffffff            	// #-1
  417838:	mov	x0, x20
  41783c:	bl	416e30 <wcrtomb@plt+0x145c0>
  417840:	cbnz	w0, 4178b8 <wcrtomb@plt+0x15048>
  417844:	b	417768 <wcrtomb@plt+0x14ef8>
  417848:	mov	x0, x27
  41784c:	bl	402620 <free@plt>
  417850:	ldr	x21, [sp, #40]
  417854:	cbnz	x24, 41789c <wcrtomb@plt+0x1502c>
  417858:	ldr	x0, [x21, #24]
  41785c:	bl	4024e0 <closedir@plt>
  417860:	mov	w8, #0x7                   	// #7
  417864:	str	xzr, [x21, #24]
  417868:	strh	w8, [x21, #108]
  41786c:	ldr	w8, [x20, #72]
  417870:	mov	w9, #0x24                  	// #36
  417874:	mov	x24, xzr
  417878:	orr	w8, w8, #0x2000
  41787c:	str	w8, [x20, #72]
  417880:	ldur	x8, [x29, #-32]
  417884:	str	w9, [x8]
  417888:	b	417970 <wcrtomb@plt+0x15100>
  41788c:	mov	x0, x24
  417890:	bl	402620 <free@plt>
  417894:	mov	x24, x19
  417898:	cbz	x19, 417858 <wcrtomb@plt+0x14fe8>
  41789c:	ldp	x19, x0, [x24, #16]
  4178a0:	cbz	x0, 41788c <wcrtomb@plt+0x1501c>
  4178a4:	bl	4024e0 <closedir@plt>
  4178a8:	b	41788c <wcrtomb@plt+0x1501c>
  4178ac:	mov	x0, x20
  4178b0:	bl	4179b4 <wcrtomb@plt+0x15144>
  4178b4:	cbz	w0, 417768 <wcrtomb@plt+0x14ef8>
  4178b8:	mov	w8, #0x7                   	// #7
  4178bc:	strh	w8, [x22, #108]
  4178c0:	ldr	w8, [x20, #72]
  4178c4:	orr	w8, w8, #0x2000
  4178c8:	str	w8, [x20, #72]
  4178cc:	cbnz	x24, 4178e4 <wcrtomb@plt+0x15074>
  4178d0:	b	417970 <wcrtomb@plt+0x15100>
  4178d4:	mov	x0, x24
  4178d8:	bl	402620 <free@plt>
  4178dc:	mov	x24, x19
  4178e0:	cbz	x19, 417970 <wcrtomb@plt+0x15100>
  4178e4:	ldp	x19, x0, [x24, #16]
  4178e8:	cbz	x0, 4178d4 <wcrtomb@plt+0x15064>
  4178ec:	bl	4024e0 <closedir@plt>
  4178f0:	b	4178d4 <wcrtomb@plt+0x15064>
  4178f4:	str	wzr, [sp]
  4178f8:	b	417324 <wcrtomb@plt+0x14ab4>
  4178fc:	mov	x0, x25
  417900:	bl	402620 <free@plt>
  417904:	ldur	x9, [x29, #-32]
  417908:	mov	w8, #0x24                  	// #36
  41790c:	str	xzr, [x24, #32]
  417910:	str	w8, [x9]
  417914:	b	417924 <wcrtomb@plt+0x150b4>
  417918:	ldr	x0, [x24, #32]
  41791c:	bl	402620 <free@plt>
  417920:	str	xzr, [x24, #32]
  417924:	ldur	x24, [x29, #-16]
  417928:	ldur	x8, [x29, #-32]
  41792c:	mov	x0, x27
  417930:	ldr	w22, [x8]
  417934:	bl	402620 <free@plt>
  417938:	ldr	x19, [sp, #40]
  41793c:	mov	x23, x21
  417940:	cbnz	x24, 4179a4 <wcrtomb@plt+0x15134>
  417944:	ldr	x0, [x19, #24]
  417948:	bl	4024e0 <closedir@plt>
  41794c:	mov	w8, #0x7                   	// #7
  417950:	str	xzr, [x19, #24]
  417954:	strh	w8, [x19, #108]
  417958:	ldr	w8, [x23, #72]
  41795c:	mov	x24, xzr
  417960:	orr	w8, w8, #0x2000
  417964:	str	w8, [x23, #72]
  417968:	ldur	x8, [x29, #-32]
  41796c:	str	w22, [x8]
  417970:	mov	x0, x24
  417974:	ldp	x20, x19, [sp, #176]
  417978:	ldp	x22, x21, [sp, #160]
  41797c:	ldp	x24, x23, [sp, #144]
  417980:	ldp	x26, x25, [sp, #128]
  417984:	ldp	x28, x27, [sp, #112]
  417988:	ldp	x29, x30, [sp, #96]
  41798c:	add	sp, sp, #0xc0
  417990:	ret
  417994:	mov	x0, x24
  417998:	bl	402620 <free@plt>
  41799c:	mov	x24, x21
  4179a0:	cbz	x21, 417944 <wcrtomb@plt+0x150d4>
  4179a4:	ldp	x21, x0, [x24, #16]
  4179a8:	cbz	x0, 417994 <wcrtomb@plt+0x15124>
  4179ac:	bl	4024e0 <closedir@plt>
  4179b0:	b	417994 <wcrtomb@plt+0x15124>
  4179b4:	stp	x29, x30, [sp, #-32]!
  4179b8:	stp	x20, x19, [sp, #16]
  4179bc:	ldr	w8, [x0, #72]
  4179c0:	mov	x19, x0
  4179c4:	mov	x29, sp
  4179c8:	tbnz	w8, #2, 4179e4 <wcrtomb@plt+0x15174>
  4179cc:	tbnz	w8, #9, 4179ec <wcrtomb@plt+0x1517c>
  4179d0:	ldr	w0, [x19, #40]
  4179d4:	bl	4022b0 <fchdir@plt>
  4179d8:	cmp	w0, #0x0
  4179dc:	cset	w20, ne  // ne = any
  4179e0:	b	417a0c <wcrtomb@plt+0x1519c>
  4179e4:	mov	w20, wzr
  4179e8:	b	417a0c <wcrtomb@plt+0x1519c>
  4179ec:	ldr	w1, [x19, #44]
  4179f0:	add	x0, x19, #0x60
  4179f4:	bl	427b24 <_obstack_memory_used@@Base+0xf894>
  4179f8:	tbnz	w0, #31, 417a00 <wcrtomb@plt+0x15190>
  4179fc:	bl	4024f0 <close@plt>
  417a00:	mov	w8, #0xffffff9c            	// #-100
  417a04:	mov	w20, wzr
  417a08:	str	w8, [x19, #44]
  417a0c:	add	x19, x19, #0x60
  417a10:	mov	x0, x19
  417a14:	bl	427b1c <_obstack_memory_used@@Base+0xf88c>
  417a18:	tbnz	w0, #0, 417a30 <wcrtomb@plt+0x151c0>
  417a1c:	mov	x0, x19
  417a20:	bl	427b6c <_obstack_memory_used@@Base+0xf8dc>
  417a24:	tbnz	w0, #31, 417a10 <wcrtomb@plt+0x151a0>
  417a28:	bl	4024f0 <close@plt>
  417a2c:	b	417a10 <wcrtomb@plt+0x151a0>
  417a30:	mov	w0, w20
  417a34:	ldp	x20, x19, [sp, #16]
  417a38:	ldp	x29, x30, [sp], #32
  417a3c:	ret
  417a40:	stp	x29, x30, [sp, #-48]!
  417a44:	stp	x20, x19, [sp, #32]
  417a48:	ldrh	w8, [x0, #72]
  417a4c:	mov	w9, #0x102                 	// #258
  417a50:	mov	x20, x0
  417a54:	mov	x19, x1
  417a58:	tst	w8, w9
  417a5c:	str	x21, [sp, #16]
  417a60:	mov	x29, sp
  417a64:	b.eq	417abc <wcrtomb@plt+0x1524c>  // b.none
  417a68:	mov	w0, #0x18                  	// #24
  417a6c:	bl	4023a0 <malloc@plt>
  417a70:	cbz	x0, 417adc <wcrtomb@plt+0x1526c>
  417a74:	ldur	q0, [x19, #120]
  417a78:	str	x19, [x0, #16]
  417a7c:	mov	x21, x0
  417a80:	mov	x1, x21
  417a84:	str	q0, [x0]
  417a88:	ldr	x0, [x20, #88]
  417a8c:	bl	412d04 <wcrtomb@plt+0x10494>
  417a90:	cmp	x0, x21
  417a94:	b.eq	417ad8 <wcrtomb@plt+0x15268>  // b.none
  417a98:	mov	x20, x0
  417a9c:	mov	x0, x21
  417aa0:	bl	402620 <free@plt>
  417aa4:	cbz	x20, 417aec <wcrtomb@plt+0x1527c>
  417aa8:	ldr	x8, [x20, #16]
  417aac:	mov	w9, #0x2                   	// #2
  417ab0:	strh	w9, [x19, #108]
  417ab4:	str	x8, [x19]
  417ab8:	b	417ad8 <wcrtomb@plt+0x15268>
  417abc:	ldr	x0, [x20, #88]
  417ac0:	add	x1, x19, #0x78
  417ac4:	bl	4278bc <_obstack_memory_used@@Base+0xf62c>
  417ac8:	tbz	w0, #0, 417ad8 <wcrtomb@plt+0x15268>
  417acc:	mov	w8, #0x2                   	// #2
  417ad0:	str	x19, [x19]
  417ad4:	strh	w8, [x19, #108]
  417ad8:	mov	w0, #0x1                   	// #1
  417adc:	ldp	x20, x19, [sp, #32]
  417ae0:	ldr	x21, [sp, #16]
  417ae4:	ldp	x29, x30, [sp], #48
  417ae8:	ret
  417aec:	mov	w0, wzr
  417af0:	b	417adc <wcrtomb@plt+0x1526c>
  417af4:	stp	x29, x30, [sp, #-16]!
  417af8:	cmp	w2, #0x5
  417afc:	mov	x29, sp
  417b00:	b.cc	417b1c <wcrtomb@plt+0x152ac>  // b.lo, b.ul, b.last
  417b04:	bl	4027e0 <__errno_location@plt>
  417b08:	mov	w8, #0x16                  	// #22
  417b0c:	str	w8, [x0]
  417b10:	mov	w0, #0x1                   	// #1
  417b14:	ldp	x29, x30, [sp], #16
  417b18:	ret
  417b1c:	mov	w0, wzr
  417b20:	strh	w2, [x1, #112]
  417b24:	ldp	x29, x30, [sp], #16
  417b28:	ret
  417b2c:	stp	x29, x30, [sp, #-64]!
  417b30:	tst	w1, #0xffffefff
  417b34:	stp	x24, x23, [sp, #16]
  417b38:	stp	x22, x21, [sp, #32]
  417b3c:	stp	x20, x19, [sp, #48]
  417b40:	mov	x29, sp
  417b44:	b.eq	417b60 <wcrtomb@plt+0x152f0>  // b.none
  417b48:	bl	4027e0 <__errno_location@plt>
  417b4c:	mov	x8, x0
  417b50:	mov	w9, #0x16                  	// #22
  417b54:	mov	x0, xzr
  417b58:	str	w9, [x8]
  417b5c:	b	417b9c <wcrtomb@plt+0x1532c>
  417b60:	ldr	x23, [x0]
  417b64:	mov	w21, w1
  417b68:	mov	x19, x0
  417b6c:	bl	4027e0 <__errno_location@plt>
  417b70:	str	wzr, [x0]
  417b74:	ldrb	w8, [x19, #73]
  417b78:	tbnz	w8, #5, 417b98 <wcrtomb@plt+0x15328>
  417b7c:	ldrh	w8, [x23, #108]
  417b80:	cmp	w8, #0x1
  417b84:	b.eq	417bb0 <wcrtomb@plt+0x15340>  // b.none
  417b88:	cmp	w8, #0x9
  417b8c:	b.ne	417b98 <wcrtomb@plt+0x15328>  // b.any
  417b90:	ldr	x0, [x23, #16]
  417b94:	b	417b9c <wcrtomb@plt+0x1532c>
  417b98:	mov	x0, xzr
  417b9c:	ldp	x20, x19, [sp, #48]
  417ba0:	ldp	x22, x21, [sp, #32]
  417ba4:	ldp	x24, x23, [sp, #16]
  417ba8:	ldp	x29, x30, [sp], #64
  417bac:	ret
  417bb0:	ldr	x22, [x19, #8]
  417bb4:	mov	x20, x0
  417bb8:	cbnz	x22, 417bf0 <wcrtomb@plt+0x15380>
  417bbc:	cmp	w21, #0x1, lsl #12
  417bc0:	b.ne	417c00 <wcrtomb@plt+0x15390>  // b.any
  417bc4:	ldr	w8, [x19, #72]
  417bc8:	mov	w21, #0x2                   	// #2
  417bcc:	orr	w8, w8, #0x1000
  417bd0:	str	w8, [x19, #72]
  417bd4:	ldr	x8, [x23, #88]
  417bd8:	cbnz	x8, 417c4c <wcrtomb@plt+0x153dc>
  417bdc:	b	417c0c <wcrtomb@plt+0x1539c>
  417be0:	mov	x0, x22
  417be4:	bl	402620 <free@plt>
  417be8:	mov	x22, x24
  417bec:	cbz	x24, 417bbc <wcrtomb@plt+0x1534c>
  417bf0:	ldp	x24, x0, [x22, #16]
  417bf4:	cbz	x0, 417be0 <wcrtomb@plt+0x15370>
  417bf8:	bl	4024e0 <closedir@plt>
  417bfc:	b	417be0 <wcrtomb@plt+0x15370>
  417c00:	mov	w21, #0x1                   	// #1
  417c04:	ldr	x8, [x23, #88]
  417c08:	cbnz	x8, 417c4c <wcrtomb@plt+0x153dc>
  417c0c:	ldr	x8, [x23, #48]
  417c10:	ldrb	w8, [x8]
  417c14:	cmp	w8, #0x2f
  417c18:	b.eq	417c4c <wcrtomb@plt+0x153dc>  // b.none
  417c1c:	ldr	w8, [x19, #72]
  417c20:	tbnz	w8, #2, 417c4c <wcrtomb@plt+0x153dc>
  417c24:	mov	w2, #0x4900                	// #18688
  417c28:	lsr	w9, w8, #4
  417c2c:	movk	w2, #0x8, lsl #16
  417c30:	bfi	w2, w9, #15, #1
  417c34:	tbnz	w8, #9, 417c60 <wcrtomb@plt+0x153f0>
  417c38:	adrp	x0, 42a000 <_obstack_memory_used@@Base+0x11d70>
  417c3c:	add	x0, x0, #0xea7
  417c40:	mov	w1, w2
  417c44:	bl	4279f0 <_obstack_memory_used@@Base+0xf760>
  417c48:	b	417c70 <wcrtomb@plt+0x15400>
  417c4c:	mov	x0, x19
  417c50:	mov	w1, w21
  417c54:	bl	417064 <wcrtomb@plt+0x147f4>
  417c58:	str	x0, [x19, #8]
  417c5c:	b	417b9c <wcrtomb@plt+0x1532c>
  417c60:	ldr	w0, [x19, #44]
  417c64:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  417c68:	add	x1, x1, #0xea7
  417c6c:	bl	413484 <wcrtomb@plt+0x10c14>
  417c70:	mov	w22, w0
  417c74:	tbnz	w0, #31, 417cb4 <wcrtomb@plt+0x15444>
  417c78:	mov	x0, x19
  417c7c:	mov	w1, w21
  417c80:	bl	417064 <wcrtomb@plt+0x147f4>
  417c84:	ldrb	w8, [x19, #73]
  417c88:	str	x0, [x19, #8]
  417c8c:	tbnz	w8, #1, 417cc0 <wcrtomb@plt+0x15450>
  417c90:	mov	w0, w22
  417c94:	bl	4022b0 <fchdir@plt>
  417c98:	cbz	w0, 417cec <wcrtomb@plt+0x1547c>
  417c9c:	ldr	w19, [x20]
  417ca0:	mov	w0, w22
  417ca4:	bl	4024f0 <close@plt>
  417ca8:	mov	x0, xzr
  417cac:	str	w19, [x20]
  417cb0:	b	417b9c <wcrtomb@plt+0x1532c>
  417cb4:	mov	x0, xzr
  417cb8:	str	xzr, [x19, #8]
  417cbc:	b	417b9c <wcrtomb@plt+0x1532c>
  417cc0:	ldr	w1, [x19, #44]
  417cc4:	cmp	w1, w22
  417cc8:	b.ne	417cd4 <wcrtomb@plt+0x15464>  // b.any
  417ccc:	cmn	w1, #0x64
  417cd0:	b.ne	417cfc <wcrtomb@plt+0x1548c>  // b.any
  417cd4:	add	x0, x19, #0x60
  417cd8:	bl	427b24 <_obstack_memory_used@@Base+0xf894>
  417cdc:	tbnz	w0, #31, 417ce4 <wcrtomb@plt+0x15474>
  417ce0:	bl	4024f0 <close@plt>
  417ce4:	str	w22, [x19, #44]
  417ce8:	b	417cf4 <wcrtomb@plt+0x15484>
  417cec:	mov	w0, w22
  417cf0:	bl	4024f0 <close@plt>
  417cf4:	ldr	x0, [x19, #8]
  417cf8:	b	417b9c <wcrtomb@plt+0x1532c>
  417cfc:	bl	402560 <abort@plt>
  417d00:	ldr	x8, [x0, #8]
  417d04:	udiv	x9, x8, x1
  417d08:	msub	x0, x9, x1, x8
  417d0c:	ret
  417d10:	ldr	x8, [x0, #8]
  417d14:	ldr	x9, [x1, #8]
  417d18:	cmp	x8, x9
  417d1c:	b.ne	417d34 <wcrtomb@plt+0x154c4>  // b.any
  417d20:	ldr	x8, [x0]
  417d24:	ldr	x9, [x1]
  417d28:	cmp	x8, x9
  417d2c:	cset	w0, eq  // eq = none
  417d30:	ret
  417d34:	mov	w0, wzr
  417d38:	ret
  417d3c:	sub	sp, sp, #0xb0
  417d40:	stp	x29, x30, [sp, #128]
  417d44:	stp	x22, x21, [sp, #144]
  417d48:	stp	x20, x19, [sp, #160]
  417d4c:	ldr	x22, [x0, #80]
  417d50:	add	x29, sp, #0x80
  417d54:	ldrb	w8, [x22, #73]
  417d58:	tbnz	w8, #1, 417d64 <wcrtomb@plt+0x154f4>
  417d5c:	mov	x0, xzr
  417d60:	b	417dc0 <wcrtomb@plt+0x15550>
  417d64:	ldr	x20, [x22, #80]
  417d68:	mov	x19, x0
  417d6c:	mov	w21, w1
  417d70:	cbnz	x20, 417da4 <wcrtomb@plt+0x15534>
  417d74:	adrp	x2, 417000 <wcrtomb@plt+0x14790>
  417d78:	adrp	x3, 417000 <wcrtomb@plt+0x14790>
  417d7c:	adrp	x4, 402000 <mbrtowc@plt-0x200>
  417d80:	add	x2, x2, #0xe44
  417d84:	add	x3, x3, #0xe54
  417d88:	add	x4, x4, #0x620
  417d8c:	mov	w0, #0xd                   	// #13
  417d90:	mov	x1, xzr
  417d94:	bl	4122f0 <wcrtomb@plt+0xfa80>
  417d98:	mov	x20, x0
  417d9c:	str	x0, [x22, #80]
  417da0:	cbz	x0, 417de0 <wcrtomb@plt+0x15570>
  417da4:	ldr	x8, [x19, #120]
  417da8:	add	x1, sp, #0x8
  417dac:	mov	x0, x20
  417db0:	str	x8, [sp, #8]
  417db4:	bl	412018 <wcrtomb@plt+0xf7a8>
  417db8:	cbz	x0, 417dd4 <wcrtomb@plt+0x15564>
  417dbc:	ldr	x0, [x0, #8]
  417dc0:	ldp	x20, x19, [sp, #160]
  417dc4:	ldp	x22, x21, [sp, #144]
  417dc8:	ldp	x29, x30, [sp, #128]
  417dcc:	add	sp, sp, #0xb0
  417dd0:	ret
  417dd4:	mov	w22, #0x1                   	// #1
  417dd8:	tbz	w21, #31, 417de8 <wcrtomb@plt+0x15578>
  417ddc:	b	417d5c <wcrtomb@plt+0x154ec>
  417de0:	mov	w22, wzr
  417de4:	tbnz	w21, #31, 417d5c <wcrtomb@plt+0x154ec>
  417de8:	add	x1, sp, #0x8
  417dec:	mov	w0, w21
  417df0:	bl	402460 <fstatfs@plt>
  417df4:	cbnz	w0, 417d5c <wcrtomb@plt+0x154ec>
  417df8:	cbz	w22, 417e3c <wcrtomb@plt+0x155cc>
  417dfc:	mov	w0, #0x10                  	// #16
  417e00:	bl	4023a0 <malloc@plt>
  417e04:	cbz	x0, 417e3c <wcrtomb@plt+0x155cc>
  417e08:	ldr	x8, [x19, #120]
  417e0c:	ldr	x9, [sp, #8]
  417e10:	mov	x21, x0
  417e14:	mov	x1, x21
  417e18:	stp	x8, x9, [x0]
  417e1c:	mov	x0, x20
  417e20:	bl	412d04 <wcrtomb@plt+0x10494>
  417e24:	cbz	x0, 417e34 <wcrtomb@plt+0x155c4>
  417e28:	cmp	x0, x21
  417e2c:	b.eq	417e3c <wcrtomb@plt+0x155cc>  // b.none
  417e30:	bl	402560 <abort@plt>
  417e34:	mov	x0, x21
  417e38:	bl	402620 <free@plt>
  417e3c:	ldr	x0, [sp, #8]
  417e40:	b	417dc0 <wcrtomb@plt+0x15550>
  417e44:	ldr	x8, [x0]
  417e48:	udiv	x9, x8, x1
  417e4c:	msub	x0, x9, x1, x8
  417e50:	ret
  417e54:	ldr	x8, [x0]
  417e58:	ldr	x9, [x1]
  417e5c:	cmp	x8, x9
  417e60:	cset	w0, eq  // eq = none
  417e64:	ret
  417e68:	ldr	x8, [x0]
  417e6c:	ldr	x9, [x1]
  417e70:	ldr	x8, [x8, #128]
  417e74:	ldr	x9, [x9, #128]
  417e78:	cmp	x9, x8
  417e7c:	cset	w10, cc  // cc = lo, ul, last
  417e80:	cmp	x8, x9
  417e84:	csinv	w0, w10, wzr, cs  // cs = hs, nlast
  417e88:	ret
  417e8c:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  417e90:	mov	x8, x1
  417e94:	add	x9, x9, #0x8a8
  417e98:	cmp	x2, #0x0
  417e9c:	csel	x3, x9, x2, eq  // eq = none
  417ea0:	mov	x1, x0
  417ea4:	mov	x0, xzr
  417ea8:	mov	x2, x8
  417eac:	b	417eb0 <wcrtomb@plt+0x15640>
  417eb0:	sub	sp, sp, #0x40
  417eb4:	stp	x29, x30, [sp, #16]
  417eb8:	add	x29, sp, #0x10
  417ebc:	cmp	x0, #0x0
  417ec0:	sub	x8, x29, #0x4
  417ec4:	stp	x20, x19, [sp, #48]
  417ec8:	csel	x20, x8, x0, eq  // eq = none
  417ecc:	mov	x0, x20
  417ed0:	stp	x22, x21, [sp, #32]
  417ed4:	mov	x22, x2
  417ed8:	mov	x19, x1
  417edc:	bl	402200 <mbrtowc@plt>
  417ee0:	mov	x21, x0
  417ee4:	cbz	x22, 417f08 <wcrtomb@plt+0x15698>
  417ee8:	cmn	x21, #0x2
  417eec:	b.cc	417f08 <wcrtomb@plt+0x15698>  // b.lo, b.ul, b.last
  417ef0:	mov	w0, wzr
  417ef4:	bl	427a94 <_obstack_memory_used@@Base+0xf804>
  417ef8:	tbnz	w0, #0, 417f08 <wcrtomb@plt+0x15698>
  417efc:	ldrb	w8, [x19]
  417f00:	mov	w21, #0x1                   	// #1
  417f04:	str	w8, [x20]
  417f08:	mov	x0, x21
  417f0c:	ldp	x20, x19, [sp, #48]
  417f10:	ldp	x22, x21, [sp, #32]
  417f14:	ldp	x29, x30, [sp, #16]
  417f18:	add	sp, sp, #0x40
  417f1c:	ret

0000000000417f20 <_obstack_begin@@Base>:
  417f20:	stp	x29, x30, [sp, #-48]!
  417f24:	stp	x20, x19, [sp, #32]
  417f28:	ldrb	w8, [x0, #80]
  417f2c:	cmp	x2, #0x0
  417f30:	mov	w9, #0x10                  	// #16
  417f34:	csel	x20, x9, x2, eq  // eq = none
  417f38:	mov	w9, #0xfe0                 	// #4064
  417f3c:	cmp	x1, #0x0
  417f40:	str	x21, [sp, #16]
  417f44:	mov	x19, x0
  417f48:	str	x4, [x0, #64]
  417f4c:	csel	x0, x9, x1, eq  // eq = none
  417f50:	and	w8, w8, #0xfe
  417f54:	sub	x21, x20, #0x1
  417f58:	mov	x29, sp
  417f5c:	strb	w8, [x19, #80]
  417f60:	str	x0, [x19]
  417f64:	stp	x21, x3, [x19, #48]
  417f68:	blr	x3
  417f6c:	str	x0, [x19, #8]
  417f70:	cbz	x0, 417fbc <_obstack_begin@@Base+0x9c>
  417f74:	ldr	x10, [x19]
  417f78:	add	x8, x0, x21
  417f7c:	neg	x9, x20
  417f80:	add	x8, x8, #0x10
  417f84:	and	x8, x8, x9
  417f88:	stp	x8, x8, [x19, #16]
  417f8c:	add	x8, x0, x10
  417f90:	str	x8, [x0]
  417f94:	str	x8, [x19, #32]
  417f98:	str	xzr, [x0, #8]
  417f9c:	ldrb	w8, [x19, #80]
  417fa0:	ldr	x21, [sp, #16]
  417fa4:	mov	w0, #0x1                   	// #1
  417fa8:	and	w8, w8, #0xfffffff9
  417fac:	strb	w8, [x19, #80]
  417fb0:	ldp	x20, x19, [sp, #32]
  417fb4:	ldp	x29, x30, [sp], #48
  417fb8:	ret
  417fbc:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  417fc0:	ldr	x8, [x8, #1056]
  417fc4:	blr	x8

0000000000417fc8 <_obstack_begin_1@@Base>:
  417fc8:	stp	x29, x30, [sp, #-48]!
  417fcc:	stp	x20, x19, [sp, #32]
  417fd0:	ldrb	w8, [x0, #80]
  417fd4:	cmp	x2, #0x0
  417fd8:	mov	w9, #0x10                  	// #16
  417fdc:	csel	x20, x9, x2, eq  // eq = none
  417fe0:	mov	w9, #0xfe0                 	// #4064
  417fe4:	cmp	x1, #0x0
  417fe8:	str	x21, [sp, #16]
  417fec:	csel	x1, x9, x1, eq  // eq = none
  417ff0:	orr	w8, w8, #0x1
  417ff4:	sub	x21, x20, #0x1
  417ff8:	mov	x19, x0
  417ffc:	stp	x4, x5, [x0, #64]
  418000:	strb	w8, [x0, #80]
  418004:	str	x1, [x0]
  418008:	stp	x21, x3, [x0, #48]
  41800c:	mov	x0, x5
  418010:	mov	x29, sp
  418014:	blr	x3
  418018:	str	x0, [x19, #8]
  41801c:	cbz	x0, 418068 <_obstack_begin_1@@Base+0xa0>
  418020:	ldr	x10, [x19]
  418024:	add	x8, x0, x21
  418028:	neg	x9, x20
  41802c:	add	x8, x8, #0x10
  418030:	and	x8, x8, x9
  418034:	stp	x8, x8, [x19, #16]
  418038:	add	x8, x0, x10
  41803c:	str	x8, [x0]
  418040:	str	x8, [x19, #32]
  418044:	str	xzr, [x0, #8]
  418048:	ldrb	w8, [x19, #80]
  41804c:	ldr	x21, [sp, #16]
  418050:	mov	w0, #0x1                   	// #1
  418054:	and	w8, w8, #0xfffffff9
  418058:	strb	w8, [x19, #80]
  41805c:	ldp	x20, x19, [sp, #32]
  418060:	ldp	x29, x30, [sp], #48
  418064:	ret
  418068:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  41806c:	ldr	x8, [x8, #1056]
  418070:	blr	x8

0000000000418074 <_obstack_newchunk@@Base>:
  418074:	stp	x29, x30, [sp, #-80]!
  418078:	str	x25, [sp, #16]
  41807c:	stp	x24, x23, [sp, #32]
  418080:	stp	x22, x21, [sp, #48]
  418084:	stp	x20, x19, [sp, #64]
  418088:	ldp	x9, x8, [x0, #16]
  41808c:	ldr	x10, [x0, #48]
  418090:	ldr	x11, [x0]
  418094:	mov	x29, sp
  418098:	sub	x20, x8, x9
  41809c:	adds	x8, x20, x1
  4180a0:	lsr	x9, x20, #3
  4180a4:	cset	w12, cs  // cs = hs, nlast
  4180a8:	adds	x10, x8, x10
  4180ac:	add	x9, x9, #0x64
  4180b0:	cset	w8, cs  // cs = hs, nlast
  4180b4:	adds	x9, x9, x10
  4180b8:	csel	x9, x10, x9, cs  // cs = hs, nlast
  4180bc:	cmp	x9, x11
  4180c0:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  4180c4:	tbnz	w12, #0, 4181b4 <_obstack_newchunk@@Base+0x140>
  4180c8:	tbnz	w8, #0, 4181b4 <_obstack_newchunk@@Base+0x140>
  4180cc:	ldrb	w8, [x0, #80]
  4180d0:	ldr	x21, [x0, #8]
  4180d4:	mov	x19, x0
  4180d8:	tbnz	w8, #0, 4180ec <_obstack_newchunk@@Base+0x78>
  4180dc:	ldr	x8, [x19, #56]
  4180e0:	mov	x0, x23
  4180e4:	blr	x8
  4180e8:	b	4180fc <_obstack_newchunk@@Base+0x88>
  4180ec:	ldr	x8, [x19, #56]
  4180f0:	ldr	x0, [x19, #72]
  4180f4:	mov	x1, x23
  4180f8:	blr	x8
  4180fc:	mov	x22, x0
  418100:	cbz	x0, 4181b4 <_obstack_newchunk@@Base+0x140>
  418104:	add	x8, x22, x23
  418108:	str	x22, [x19, #8]
  41810c:	str	x21, [x22, #8]
  418110:	str	x8, [x19, #32]
  418114:	str	x8, [x22]
  418118:	ldr	x25, [x19, #48]
  41811c:	ldr	x24, [x19, #16]
  418120:	mov	x2, x20
  418124:	add	x8, x22, x25
  418128:	add	x8, x8, #0x10
  41812c:	bic	x23, x8, x25
  418130:	mov	x0, x23
  418134:	mov	x1, x24
  418138:	bl	402210 <memcpy@plt>
  41813c:	ldrb	w8, [x19, #80]
  418140:	tbnz	w8, #1, 418188 <_obstack_newchunk@@Base+0x114>
  418144:	add	x9, x21, x25
  418148:	mvn	x8, x25
  41814c:	add	x9, x9, #0x10
  418150:	and	x8, x9, x8
  418154:	cmp	x24, x8
  418158:	b.ne	418188 <_obstack_newchunk@@Base+0x114>  // b.any
  41815c:	ldr	x8, [x21, #8]
  418160:	str	x8, [x22, #8]
  418164:	ldrb	w8, [x19, #80]
  418168:	tbnz	w8, #0, 41817c <_obstack_newchunk@@Base+0x108>
  41816c:	ldr	x8, [x19, #64]
  418170:	mov	x0, x21
  418174:	blr	x8
  418178:	b	418188 <_obstack_newchunk@@Base+0x114>
  41817c:	ldp	x8, x0, [x19, #64]
  418180:	mov	x1, x21
  418184:	blr	x8
  418188:	ldrb	w8, [x19, #80]
  41818c:	add	x9, x23, x20
  418190:	stp	x23, x9, [x19, #16]
  418194:	ldr	x25, [sp, #16]
  418198:	and	w8, w8, #0xfffffffd
  41819c:	strb	w8, [x19, #80]
  4181a0:	ldp	x20, x19, [sp, #64]
  4181a4:	ldp	x22, x21, [sp, #48]
  4181a8:	ldp	x24, x23, [sp, #32]
  4181ac:	ldp	x29, x30, [sp], #80
  4181b0:	ret
  4181b4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4181b8:	ldr	x8, [x8, #1056]
  4181bc:	blr	x8

00000000004181c0 <_obstack_allocated_p@@Base>:
  4181c0:	ldr	x8, [x0, #8]
  4181c4:	cbnz	x8, 4181d8 <_obstack_allocated_p@@Base+0x18>
  4181c8:	mov	w0, wzr
  4181cc:	ret
  4181d0:	ldr	x8, [x8, #8]
  4181d4:	cbz	x8, 4181c8 <_obstack_allocated_p@@Base+0x8>
  4181d8:	cmp	x8, x1
  4181dc:	b.cs	4181d0 <_obstack_allocated_p@@Base+0x10>  // b.hs, b.nlast
  4181e0:	ldr	x9, [x8]
  4181e4:	cmp	x9, x1
  4181e8:	b.cc	4181d0 <_obstack_allocated_p@@Base+0x10>  // b.lo, b.ul, b.last
  4181ec:	mov	w0, #0x1                   	// #1
  4181f0:	ret

00000000004181f4 <_obstack_free@@Base>:
  4181f4:	stp	x29, x30, [sp, #-48]!
  4181f8:	stp	x20, x19, [sp, #32]
  4181fc:	ldr	x8, [x0, #8]
  418200:	mov	x20, x1
  418204:	str	x21, [sp, #16]
  418208:	mov	x29, sp
  41820c:	cbz	x8, 418268 <_obstack_free@@Base+0x74>
  418210:	mov	x19, x0
  418214:	b	418238 <_obstack_free@@Base+0x44>
  418218:	ldr	x9, [x19, #64]
  41821c:	mov	x0, x8
  418220:	blr	x9
  418224:	ldrb	w8, [x19, #80]
  418228:	orr	w8, w8, #0x2
  41822c:	strb	w8, [x19, #80]
  418230:	mov	x8, x21
  418234:	cbz	x21, 418268 <_obstack_free@@Base+0x74>
  418238:	cmp	x8, x20
  41823c:	b.cs	41824c <_obstack_free@@Base+0x58>  // b.hs, b.nlast
  418240:	ldr	x9, [x8]
  418244:	cmp	x9, x20
  418248:	b.cs	418270 <_obstack_free@@Base+0x7c>  // b.hs, b.nlast
  41824c:	ldrb	w9, [x19, #80]
  418250:	ldr	x21, [x8, #8]
  418254:	tbz	w9, #0, 418218 <_obstack_free@@Base+0x24>
  418258:	ldp	x9, x0, [x19, #64]
  41825c:	mov	x1, x8
  418260:	blr	x9
  418264:	b	418224 <_obstack_free@@Base+0x30>
  418268:	cbz	x20, 418280 <_obstack_free@@Base+0x8c>
  41826c:	bl	402560 <abort@plt>
  418270:	stp	x20, x20, [x19, #16]
  418274:	ldr	x9, [x8]
  418278:	str	x8, [x19, #8]
  41827c:	str	x9, [x19, #32]
  418280:	ldp	x20, x19, [sp, #32]
  418284:	ldr	x21, [sp, #16]
  418288:	ldp	x29, x30, [sp], #48
  41828c:	ret

0000000000418290 <_obstack_memory_used@@Base>:
  418290:	ldr	x8, [x0, #8]
  418294:	cbz	x8, 4182b0 <_obstack_memory_used@@Base+0x20>
  418298:	mov	x0, xzr
  41829c:	sub	x10, x0, x8
  4182a0:	ldp	x9, x8, [x8]
  4182a4:	add	x0, x10, x9
  4182a8:	cbnz	x8, 41829c <_obstack_memory_used@@Base+0xc>
  4182ac:	ret
  4182b0:	mov	x0, xzr
  4182b4:	ret
  4182b8:	stp	x29, x30, [sp, #-32]!
  4182bc:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4182c0:	str	x19, [sp, #16]
  4182c4:	ldr	x19, [x8, #1072]
  4182c8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4182cc:	add	x1, x1, #0xdd5
  4182d0:	mov	w2, #0x5                   	// #5
  4182d4:	mov	x0, xzr
  4182d8:	mov	x29, sp
  4182dc:	bl	402740 <dcgettext@plt>
  4182e0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4182e4:	mov	x2, x0
  4182e8:	add	x1, x1, #0xaaf
  4182ec:	mov	x0, x19
  4182f0:	bl	402820 <fprintf@plt>
  4182f4:	adrp	x8, 43c000 <_obstack_memory_used@@Base+0x23d70>
  4182f8:	ldr	w0, [x8, #960]
  4182fc:	bl	402290 <exit@plt>
  418300:	stp	x29, x30, [sp, #-16]!
  418304:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  418308:	ldr	x3, [x9, #3520]
  41830c:	ldrb	w9, [x2, #56]
  418310:	mov	x8, x1
  418314:	mov	x1, x0
  418318:	ubfx	x10, x3, #21, #11
  41831c:	and	w10, w10, #0x10
  418320:	and	w9, w9, #0xffffffef
  418324:	orr	w9, w9, w10
  418328:	orr	w9, w9, #0x80
  41832c:	strb	w9, [x2, #56]
  418330:	mov	x0, x2
  418334:	mov	x2, x8
  418338:	mov	x29, sp
  41833c:	bl	418378 <_obstack_memory_used@@Base+0xe8>
  418340:	cbz	w0, 41836c <_obstack_memory_used@@Base+0xdc>
  418344:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x12d70>
  418348:	add	x8, x8, #0x1d0
  41834c:	ldr	x8, [x8, w0, sxtw #3]
  418350:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x12d70>
  418354:	add	x9, x9, #0x4f
  418358:	mov	w2, #0x5                   	// #5
  41835c:	add	x1, x9, x8
  418360:	mov	x0, xzr
  418364:	ldp	x29, x30, [sp], #16
  418368:	b	402740 <dcgettext@plt>
  41836c:	mov	x0, xzr
  418370:	ldp	x29, x30, [sp], #16
  418374:	ret
  418378:	sub	sp, sp, #0x130
  41837c:	stp	x29, x30, [sp, #208]
  418380:	add	x29, sp, #0xd0
  418384:	stp	x28, x27, [sp, #224]
  418388:	stp	x26, x25, [sp, #240]
  41838c:	stp	x24, x23, [sp, #256]
  418390:	stp	x22, x21, [sp, #272]
  418394:	stp	x20, x19, [sp, #288]
  418398:	stur	wzr, [x29, #-44]
  41839c:	ldrb	w8, [x0, #56]
  4183a0:	ldp	x20, x9, [x0]
  4183a4:	mov	w10, #0x90                  	// #144
  4183a8:	mov	x21, x3
  4183ac:	mov	x22, x2
  4183b0:	mov	x23, x1
  4183b4:	mov	x19, x0
  4183b8:	and	w8, w8, w10
  4183bc:	cmp	x9, #0xe7
  4183c0:	stp	xzr, x3, [x0, #16]
  4183c4:	str	xzr, [x0, #48]
  4183c8:	strb	w8, [x0, #56]
  4183cc:	b.ls	418adc <_obstack_memory_used@@Base+0x84c>  // b.plast
  4183d0:	mov	w8, #0xe8                  	// #232
  4183d4:	str	x8, [x19, #16]
  4183d8:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  4183dc:	movk	x8, #0x5554
  4183e0:	movk	x8, #0x555, lsl #48
  4183e4:	movi	v0.2d, #0x0
  4183e8:	cmp	x22, x8
  4183ec:	mov	w8, #0xf                   	// #15
  4183f0:	str	xzr, [x20, #224]
  4183f4:	stp	q0, q0, [x20, #192]
  4183f8:	stp	q0, q0, [x20, #160]
  4183fc:	stp	q0, q0, [x20, #128]
  418400:	stp	q0, q0, [x20, #96]
  418404:	stp	q0, q0, [x20, #64]
  418408:	stp	q0, q0, [x20, #32]
  41840c:	stp	q0, q0, [x20]
  418410:	str	w8, [x20, #128]
  418414:	b.hi	418610 <_obstack_memory_used@@Base+0x380>  // b.pmore
  418418:	add	x24, x22, #0x1
  41841c:	lsl	x0, x24, #4
  418420:	str	x24, [x20, #8]
  418424:	bl	4023a0 <malloc@plt>
  418428:	mov	w8, #0x1                   	// #1
  41842c:	str	x0, [x20]
  418430:	mov	x25, x8
  418434:	cmp	x8, x22
  418438:	lsl	x8, x8, #1
  41843c:	b.ls	418430 <_obstack_memory_used@@Base+0x1a0>  // b.plast
  418440:	mov	w0, #0x18                  	// #24
  418444:	mov	x1, x25
  418448:	bl	402480 <calloc@plt>
  41844c:	sub	x8, x25, #0x1
  418450:	str	x0, [x20, #64]
  418454:	str	x8, [x20, #136]
  418458:	bl	402630 <__ctype_get_mb_cur_max@plt>
  41845c:	str	w0, [x20, #180]
  418460:	mov	w0, #0xe                   	// #14
  418464:	bl	402360 <nl_langinfo@plt>
  418468:	ldrb	w8, [x0]
  41846c:	orr	w8, w8, #0x20
  418470:	cmp	w8, #0x75
  418474:	b.ne	4184c0 <_obstack_memory_used@@Base+0x230>  // b.any
  418478:	ldrb	w8, [x0, #1]
  41847c:	orr	w8, w8, #0x20
  418480:	cmp	w8, #0x74
  418484:	b.ne	4184c0 <_obstack_memory_used@@Base+0x230>  // b.any
  418488:	ldrb	w8, [x0, #2]
  41848c:	orr	w8, w8, #0x20
  418490:	cmp	w8, #0x66
  418494:	b.ne	4184c0 <_obstack_memory_used@@Base+0x230>  // b.any
  418498:	ldrb	w8, [x0, #3]!
  41849c:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x12d70>
  4184a0:	add	x1, x1, #0x290
  4184a4:	cmp	w8, #0x2d
  4184a8:	cinc	x0, x0, eq  // eq = none
  4184ac:	bl	402600 <strcmp@plt>
  4184b0:	cbnz	w0, 4184c0 <_obstack_memory_used@@Base+0x230>
  4184b4:	ldrb	w8, [x20, #176]
  4184b8:	orr	w8, w8, #0x4
  4184bc:	strb	w8, [x20, #176]
  4184c0:	ldrb	w8, [x20, #176]
  4184c4:	ldr	w9, [x20, #180]
  4184c8:	and	w10, w8, #0xfffffff7
  4184cc:	cmp	w9, #0x2
  4184d0:	strb	w10, [x20, #176]
  4184d4:	b.lt	418550 <_obstack_memory_used@@Base+0x2c0>  // b.tstop
  4184d8:	tbnz	w8, #2, 418544 <_obstack_memory_used@@Base+0x2b4>
  4184dc:	mov	w0, #0x20                  	// #32
  4184e0:	mov	w1, #0x1                   	// #1
  4184e4:	bl	402480 <calloc@plt>
  4184e8:	str	x0, [x20, #120]
  4184ec:	cbz	x0, 418610 <_obstack_memory_used@@Base+0x380>
  4184f0:	mov	x25, xzr
  4184f4:	mov	w26, #0x1                   	// #1
  4184f8:	b	418508 <_obstack_memory_used@@Base+0x278>
  4184fc:	add	x25, x25, #0x1
  418500:	cmp	x25, #0x40
  418504:	b.eq	418628 <_obstack_memory_used@@Base+0x398>  // b.none
  418508:	mov	w0, w25
  41850c:	bl	402550 <btowc@plt>
  418510:	cmn	w0, #0x1
  418514:	b.eq	41852c <_obstack_memory_used@@Base+0x29c>  // b.none
  418518:	ldr	x8, [x20, #120]
  41851c:	lsl	x10, x26, x25
  418520:	ldr	x9, [x8]
  418524:	orr	x9, x9, x10
  418528:	str	x9, [x8]
  41852c:	cmp	w25, w0
  418530:	b.eq	4184fc <_obstack_memory_used@@Base+0x26c>  // b.none
  418534:	ldrb	w8, [x20, #176]
  418538:	orr	w8, w8, #0x8
  41853c:	strb	w8, [x20, #176]
  418540:	b	4184fc <_obstack_memory_used@@Base+0x26c>
  418544:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x12d70>
  418548:	add	x8, x8, #0x258
  41854c:	str	x8, [x20, #120]
  418550:	ldr	x8, [x20]
  418554:	cbz	x8, 418610 <_obstack_memory_used@@Base+0x380>
  418558:	ldr	x8, [x20, #64]
  41855c:	cbz	x8, 418610 <_obstack_memory_used@@Base+0x380>
  418560:	stur	wzr, [x29, #-44]
  418564:	ldr	x26, [x19, #40]
  418568:	and	x25, x21, #0x400000
  41856c:	movi	v0.2d, #0x0
  418570:	ubfx	x8, x21, #22, #1
  418574:	stp	q0, q0, [sp, #128]
  418578:	strb	w8, [sp, #144]
  41857c:	orr	x8, x25, x26
  418580:	cmp	x8, #0x0
  418584:	cset	w27, ne  // ne = any
  418588:	stp	q0, q0, [sp, #80]
  41858c:	stur	q0, [sp, #112]
  418590:	stp	q0, q0, [sp, #48]
  418594:	stp	q0, q0, [sp, #16]
  418598:	str	x23, [sp, #8]
  41859c:	stp	x22, x22, [sp, #88]
  4185a0:	str	x26, [sp, #128]
  4185a4:	strb	w27, [sp, #147]
  4185a8:	ldr	w8, [x20, #180]
  4185ac:	cmp	x22, #0x1
  4185b0:	str	w8, [sp, #152]
  4185b4:	ldrb	w9, [x20, #176]
  4185b8:	stp	x22, x22, [sp, #104]
  4185bc:	ubfx	w10, w9, #2, #1
  4185c0:	ubfx	w9, w9, #3, #1
  4185c4:	strb	w10, [sp, #145]
  4185c8:	strb	w9, [sp, #146]
  4185cc:	b.lt	418740 <_obstack_memory_used@@Base+0x4b0>  // b.tstop
  4185d0:	cmp	w8, #0x2
  4185d4:	b.lt	4185f4 <_obstack_memory_used@@Base+0x364>  // b.tstop
  4185d8:	mov	x8, #0x1ffffffffffffffe    	// #2305843009213693950
  4185dc:	cmp	x22, x8
  4185e0:	b.hi	418b6c <_obstack_memory_used@@Base+0x8dc>  // b.pmore
  4185e4:	lsl	x0, x24, #2
  4185e8:	bl	4023a0 <malloc@plt>
  4185ec:	cbz	x0, 418b6c <_obstack_memory_used@@Base+0x8dc>
  4185f0:	str	x0, [sp, #24]
  4185f4:	cbz	w27, 41874c <_obstack_memory_used@@Base+0x4bc>
  4185f8:	mov	x0, x24
  4185fc:	bl	4023a0 <malloc@plt>
  418600:	cbz	x0, 418b6c <_obstack_memory_used@@Base+0x8dc>
  418604:	mov	w27, #0x1                   	// #1
  418608:	str	x0, [sp, #16]
  41860c:	b	418750 <_obstack_memory_used@@Base+0x4c0>
  418610:	mov	w21, #0xc                   	// #12
  418614:	mov	x0, x20
  418618:	stur	w21, [x29, #-44]
  41861c:	bl	419d5c <_obstack_memory_used@@Base+0x1acc>
  418620:	stp	xzr, xzr, [x19]
  418624:	b	41954c <_obstack_memory_used@@Base+0x12bc>
  418628:	mov	x26, xzr
  41862c:	mov	w27, #0x1                   	// #1
  418630:	b	418640 <_obstack_memory_used@@Base+0x3b0>
  418634:	add	x26, x26, #0x1
  418638:	cmp	x26, #0x40
  41863c:	b.eq	418680 <_obstack_memory_used@@Base+0x3f0>  // b.none
  418640:	add	x25, x26, #0x40
  418644:	mov	w0, w25
  418648:	bl	402550 <btowc@plt>
  41864c:	cmn	w0, #0x1
  418650:	b.eq	418668 <_obstack_memory_used@@Base+0x3d8>  // b.none
  418654:	ldr	x8, [x20, #120]
  418658:	lsl	x10, x27, x26
  41865c:	ldr	x9, [x8, #8]
  418660:	orr	x9, x9, x10
  418664:	str	x9, [x8, #8]
  418668:	cmp	w25, w0
  41866c:	b.eq	418634 <_obstack_memory_used@@Base+0x3a4>  // b.none
  418670:	ldrb	w8, [x20, #176]
  418674:	orr	w8, w8, #0x8
  418678:	strb	w8, [x20, #176]
  41867c:	b	418634 <_obstack_memory_used@@Base+0x3a4>
  418680:	mov	x26, xzr
  418684:	mov	w27, #0x1                   	// #1
  418688:	b	418698 <_obstack_memory_used@@Base+0x408>
  41868c:	add	x26, x26, #0x1
  418690:	cmp	x26, #0x40
  418694:	b.eq	4186e0 <_obstack_memory_used@@Base+0x450>  // b.none
  418698:	add	x25, x26, #0x80
  41869c:	mov	w0, w25
  4186a0:	bl	402550 <btowc@plt>
  4186a4:	cmn	w0, #0x1
  4186a8:	b.eq	4186c0 <_obstack_memory_used@@Base+0x430>  // b.none
  4186ac:	ldr	x8, [x20, #120]
  4186b0:	lsl	x10, x27, x26
  4186b4:	ldr	x9, [x8, #16]
  4186b8:	orr	x9, x9, x10
  4186bc:	str	x9, [x8, #16]
  4186c0:	cmp	w25, #0x7f
  4186c4:	b.hi	41868c <_obstack_memory_used@@Base+0x3fc>  // b.pmore
  4186c8:	cmp	w25, w0
  4186cc:	b.eq	41868c <_obstack_memory_used@@Base+0x3fc>  // b.none
  4186d0:	ldrb	w8, [x20, #176]
  4186d4:	orr	w8, w8, #0x8
  4186d8:	strb	w8, [x20, #176]
  4186dc:	b	41868c <_obstack_memory_used@@Base+0x3fc>
  4186e0:	mov	x26, xzr
  4186e4:	mov	w27, #0x1                   	// #1
  4186e8:	b	4186f8 <_obstack_memory_used@@Base+0x468>
  4186ec:	add	x26, x26, #0x1
  4186f0:	cmp	x26, #0x40
  4186f4:	b.eq	418550 <_obstack_memory_used@@Base+0x2c0>  // b.none
  4186f8:	add	x25, x26, #0xc0
  4186fc:	mov	w0, w25
  418700:	bl	402550 <btowc@plt>
  418704:	cmn	w0, #0x1
  418708:	b.eq	418720 <_obstack_memory_used@@Base+0x490>  // b.none
  41870c:	ldr	x8, [x20, #120]
  418710:	lsl	x10, x27, x26
  418714:	ldr	x9, [x8, #24]
  418718:	orr	x9, x9, x10
  41871c:	str	x9, [x8, #24]
  418720:	cmp	w25, #0x7f
  418724:	b.hi	4186ec <_obstack_memory_used@@Base+0x45c>  // b.pmore
  418728:	cmp	w25, w0
  41872c:	b.eq	4186ec <_obstack_memory_used@@Base+0x45c>  // b.none
  418730:	ldrb	w8, [x20, #176]
  418734:	orr	w8, w8, #0x8
  418738:	strb	w8, [x20, #176]
  41873c:	b	4186ec <_obstack_memory_used@@Base+0x45c>
  418740:	mov	x0, xzr
  418744:	mov	x24, xzr
  418748:	b	418758 <_obstack_memory_used@@Base+0x4c8>
  41874c:	mov	x0, xzr
  418750:	str	x24, [sp, #72]
  418754:	ldr	w8, [x20, #180]
  418758:	cmp	w27, #0x0
  41875c:	csel	x9, x23, x0, eq  // eq = none
  418760:	cmp	w8, #0x2
  418764:	str	x9, [sp, #16]
  418768:	cbz	x25, 418868 <_obstack_memory_used@@Base+0x5d8>
  41876c:	b.ge	4187d4 <_obstack_memory_used@@Base+0x544>  // b.tcont
  418770:	cmp	x24, x22
  418774:	csel	x22, x22, x24, gt
  418778:	cmp	x22, #0x1
  41877c:	b.lt	4188a8 <_obstack_memory_used@@Base+0x618>  // b.tstop
  418780:	bl	4024d0 <__ctype_toupper_loc@plt>
  418784:	mov	x9, xzr
  418788:	mov	x8, xzr
  41878c:	add	x9, x23, x9
  418790:	ldrb	w9, [x9, x8]
  418794:	cbnz	x26, 4187c4 <_obstack_memory_used@@Base+0x534>
  418798:	ldr	x10, [x0]
  41879c:	ldr	x11, [sp, #16]
  4187a0:	ldr	w9, [x10, w9, uxtw #2]
  4187a4:	strb	w9, [x11, x8]
  4187a8:	add	x8, x8, #0x1
  4187ac:	cmp	x8, x22
  4187b0:	b.ge	4188ac <_obstack_memory_used@@Base+0x61c>  // b.tcont
  4187b4:	ldr	x23, [sp, #8]
  4187b8:	ldr	x9, [sp, #48]
  4187bc:	ldr	x26, [sp, #128]
  4187c0:	b	41878c <_obstack_memory_used@@Base+0x4fc>
  4187c4:	ldrb	w9, [x26, x9]
  4187c8:	b	418798 <_obstack_memory_used@@Base+0x508>
  4187cc:	str	x0, [sp, #16]
  4187d0:	str	x23, [sp, #72]
  4187d4:	add	x0, sp, #0x8
  4187d8:	bl	41cd0c <_obstack_memory_used@@Base+0x4a7c>
  4187dc:	cbnz	w0, 418b70 <_obstack_memory_used@@Base+0x8e0>
  4187e0:	ldr	x8, [sp, #64]
  4187e4:	cmp	x8, x22
  4187e8:	b.ge	41890c <_obstack_memory_used@@Base+0x67c>  // b.tcont
  4187ec:	ldr	x8, [sp, #56]
  4187f0:	ldrsw	x9, [x20, #180]
  4187f4:	ldr	x24, [sp, #72]
  4187f8:	add	x8, x8, x9
  4187fc:	cmp	x24, x8
  418800:	b.gt	41890c <_obstack_memory_used@@Base+0x67c>
  418804:	ldr	w8, [sp, #152]
  418808:	lsl	x23, x24, #1
  41880c:	cmp	w8, #0x2
  418810:	b.lt	41884c <_obstack_memory_used@@Base+0x5bc>  // b.tstop
  418814:	lsr	x8, x23, #61
  418818:	cbnz	x8, 418b6c <_obstack_memory_used@@Base+0x8dc>
  41881c:	ldr	x0, [sp, #24]
  418820:	lsl	x1, x24, #3
  418824:	bl	4024c0 <realloc@plt>
  418828:	cbz	x0, 418b6c <_obstack_memory_used@@Base+0x8dc>
  41882c:	mov	x8, x0
  418830:	ldr	x0, [sp, #32]
  418834:	str	x8, [sp, #24]
  418838:	cbz	x0, 41884c <_obstack_memory_used@@Base+0x5bc>
  41883c:	lsl	x1, x24, #4
  418840:	bl	4024c0 <realloc@plt>
  418844:	cbz	x0, 418b6c <_obstack_memory_used@@Base+0x8dc>
  418848:	str	x0, [sp, #32]
  41884c:	ldrb	w8, [sp, #147]
  418850:	cbz	w8, 4187d0 <_obstack_memory_used@@Base+0x540>
  418854:	ldr	x0, [sp, #16]
  418858:	mov	x1, x23
  41885c:	bl	4024c0 <realloc@plt>
  418860:	cbnz	x0, 4187cc <_obstack_memory_used@@Base+0x53c>
  418864:	b	418b6c <_obstack_memory_used@@Base+0x8dc>
  418868:	b.lt	418878 <_obstack_memory_used@@Base+0x5e8>  // b.tstop
  41886c:	add	x0, sp, #0x8
  418870:	bl	41d3b0 <_obstack_memory_used@@Base+0x5120>
  418874:	b	41890c <_obstack_memory_used@@Base+0x67c>
  418878:	cbz	x26, 4188b4 <_obstack_memory_used@@Base+0x624>
  41887c:	cmp	x24, x22
  418880:	csel	x8, x22, x24, gt
  418884:	cmp	x8, #0x1
  418888:	b.lt	4188bc <_obstack_memory_used@@Base+0x62c>  // b.tstop
  41888c:	ldrb	w10, [x23]
  418890:	cmp	x8, #0x1
  418894:	ldrb	w10, [x26, x10]
  418898:	strb	w10, [x9]
  41889c:	b.ne	4188c4 <_obstack_memory_used@@Base+0x634>  // b.any
  4188a0:	mov	w9, #0x1                   	// #1
  4188a4:	b	418908 <_obstack_memory_used@@Base+0x678>
  4188a8:	mov	x8, xzr
  4188ac:	stp	x8, x8, [sp, #56]
  4188b0:	b	41890c <_obstack_memory_used@@Base+0x67c>
  4188b4:	stp	x24, x24, [sp, #56]
  4188b8:	b	41890c <_obstack_memory_used@@Base+0x67c>
  4188bc:	mov	x9, xzr
  4188c0:	b	418908 <_obstack_memory_used@@Base+0x678>
  4188c4:	ldrb	w10, [x23, #1]
  4188c8:	cmp	x8, #0x3
  4188cc:	ldrb	w10, [x26, x10]
  4188d0:	strb	w10, [x9, #1]
  4188d4:	mov	w9, #0x2                   	// #2
  4188d8:	b.lt	418908 <_obstack_memory_used@@Base+0x678>  // b.tstop
  4188dc:	ldr	x10, [sp, #8]
  4188e0:	ldr	x11, [sp, #48]
  4188e4:	ldr	x12, [sp, #128]
  4188e8:	add	x10, x10, x11
  4188ec:	ldrb	w10, [x10, x9]
  4188f0:	ldr	x11, [sp, #16]
  4188f4:	ldrb	w10, [x12, x10]
  4188f8:	strb	w10, [x11, x9]
  4188fc:	add	x9, x9, #0x1
  418900:	cmp	x9, x8
  418904:	b.lt	4188dc <_obstack_memory_used@@Base+0x64c>  // b.tstop
  418908:	stp	x9, x9, [sp, #56]
  41890c:	stur	wzr, [x29, #-44]
  418910:	ldr	x22, [x19]
  418914:	orr	x2, x21, #0x800000
  418918:	sub	x0, x29, #0x28
  41891c:	add	x1, sp, #0x8
  418920:	str	xzr, [x19, #48]
  418924:	str	x21, [x22, #216]
  418928:	bl	41d804 <_obstack_memory_used@@Base+0x5574>
  41892c:	ldr	x8, [sp, #80]
  418930:	sub	x2, x29, #0x28
  418934:	sub	x5, x29, #0x2c
  418938:	mov	x1, x19
  41893c:	add	x8, x8, w0, sxtw
  418940:	add	x0, sp, #0x8
  418944:	mov	x3, x21
  418948:	mov	x4, xzr
  41894c:	str	x8, [sp, #80]
  418950:	bl	41d5b8 <_obstack_memory_used@@Base+0x5328>
  418954:	mov	x21, x0
  418958:	cbnz	x0, 418964 <_obstack_memory_used@@Base+0x6d4>
  41895c:	ldur	w8, [x29, #-44]
  418960:	cbnz	w8, 418b4c <_obstack_memory_used@@Base+0x8bc>
  418964:	ldr	w8, [x22, #128]
  418968:	cmp	w8, #0xf
  41896c:	b.eq	418afc <_obstack_memory_used@@Base+0x86c>  // b.none
  418970:	ldr	x0, [x22, #112]
  418974:	add	w9, w8, #0x1
  418978:	sxtw	x8, w8
  41897c:	add	x23, x0, x8, lsl #6
  418980:	mov	w10, #0x2                   	// #2
  418984:	mov	x11, #0xffffffffffffffff    	// #-1
  418988:	str	w9, [x22, #128]
  41898c:	str	xzr, [x23, #8]!
  418990:	stp	xzr, xzr, [x23, #16]
  418994:	str	xzr, [x23, #8]
  418998:	str	w10, [x23, #48]
  41899c:	stp	xzr, xzr, [x23, #32]
  4189a0:	str	x11, [x23, #56]
  4189a4:	mov	x8, x23
  4189a8:	cbz	x21, 4189f8 <_obstack_memory_used@@Base+0x768>
  4189ac:	ldr	w8, [x22, #128]
  4189b0:	cmp	w8, #0xf
  4189b4:	b.eq	418b20 <_obstack_memory_used@@Base+0x890>  // b.none
  4189b8:	ldr	x0, [x22, #112]
  4189bc:	add	w9, w8, #0x1
  4189c0:	sxtw	x8, w8
  4189c4:	add	x8, x0, x8, lsl #6
  4189c8:	mov	w10, #0x10                  	// #16
  4189cc:	mov	x11, #0xffffffffffffffff    	// #-1
  4189d0:	str	w9, [x22, #128]
  4189d4:	str	xzr, [x8, #8]!
  4189d8:	stp	x21, x23, [x8, #8]
  4189dc:	stp	xzr, xzr, [x8, #32]
  4189e0:	str	w10, [x8, #48]
  4189e4:	str	xzr, [x8, #24]
  4189e8:	str	x11, [x8, #56]
  4189ec:	str	x8, [x21]
  4189f0:	cbz	x23, 418b44 <_obstack_memory_used@@Base+0x8b4>
  4189f4:	str	x8, [x23]
  4189f8:	cbz	x23, 418b44 <_obstack_memory_used@@Base+0x8b4>
  4189fc:	cbz	x8, 418b44 <_obstack_memory_used@@Base+0x8b4>
  418a00:	str	x8, [x20, #104]
  418a04:	ldr	x21, [x19]
  418a08:	ldr	x8, [x21, #8]
  418a0c:	lsl	x0, x8, #3
  418a10:	bl	4023a0 <malloc@plt>
  418a14:	ldr	x8, [x21, #8]
  418a18:	str	x0, [x21, #24]
  418a1c:	lsl	x0, x8, #3
  418a20:	bl	4023a0 <malloc@plt>
  418a24:	ldr	x8, [x21, #8]
  418a28:	str	x0, [x21, #32]
  418a2c:	add	x8, x8, x8, lsl #1
  418a30:	lsl	x0, x8, #3
  418a34:	bl	4023a0 <malloc@plt>
  418a38:	ldr	x8, [x21, #8]
  418a3c:	str	x0, [x21, #40]
  418a40:	add	x8, x8, x8, lsl #1
  418a44:	lsl	x0, x8, #3
  418a48:	bl	4023a0 <malloc@plt>
  418a4c:	ldr	x9, [x21, #24]
  418a50:	str	x0, [x21, #48]
  418a54:	cbz	x9, 418b6c <_obstack_memory_used@@Base+0x8dc>
  418a58:	ldr	x9, [x21, #32]
  418a5c:	cbz	x9, 418b6c <_obstack_memory_used@@Base+0x8dc>
  418a60:	mov	x8, x0
  418a64:	mov	w0, #0xc                   	// #12
  418a68:	cbz	x8, 418b70 <_obstack_memory_used@@Base+0x8e0>
  418a6c:	ldr	x8, [x21, #40]
  418a70:	cbz	x8, 418b70 <_obstack_memory_used@@Base+0x8e0>
  418a74:	ldr	x22, [x19, #48]
  418a78:	lsl	x0, x22, #3
  418a7c:	bl	4023a0 <malloc@plt>
  418a80:	str	x0, [x21, #224]
  418a84:	cbz	x0, 418da4 <_obstack_memory_used@@Base+0xb14>
  418a88:	cbz	x22, 418bec <_obstack_memory_used@@Base+0x95c>
  418a8c:	cmp	x22, #0x4
  418a90:	b.cs	418a9c <_obstack_memory_used@@Base+0x80c>  // b.hs, b.nlast
  418a94:	mov	x8, xzr
  418a98:	b	418bdc <_obstack_memory_used@@Base+0x94c>
  418a9c:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x11d70>
  418aa0:	ldr	q0, [x10, #1424]
  418aa4:	mov	w10, #0x2                   	// #2
  418aa8:	and	x8, x22, #0xfffffffffffffffc
  418aac:	dup	v1.2d, x10
  418ab0:	mov	w10, #0x4                   	// #4
  418ab4:	add	x9, x0, #0x10
  418ab8:	dup	v2.2d, x10
  418abc:	mov	x10, x8
  418ac0:	add	v3.2d, v0.2d, v1.2d
  418ac4:	stp	q0, q3, [x9, #-16]
  418ac8:	add	v0.2d, v0.2d, v2.2d
  418acc:	subs	x10, x10, #0x4
  418ad0:	add	x9, x9, #0x20
  418ad4:	b.ne	418ac0 <_obstack_memory_used@@Base+0x830>  // b.any
  418ad8:	b	418be4 <_obstack_memory_used@@Base+0x954>
  418adc:	mov	w1, #0xe8                  	// #232
  418ae0:	mov	x0, x20
  418ae4:	bl	4024c0 <realloc@plt>
  418ae8:	cbz	x0, 418b54 <_obstack_memory_used@@Base+0x8c4>
  418aec:	mov	x20, x0
  418af0:	mov	w8, #0xe8                  	// #232
  418af4:	stp	x0, x8, [x19]
  418af8:	b	4183d0 <_obstack_memory_used@@Base+0x140>
  418afc:	mov	w0, #0x3c8                 	// #968
  418b00:	bl	4023a0 <malloc@plt>
  418b04:	cbz	x0, 418b5c <_obstack_memory_used@@Base+0x8cc>
  418b08:	ldr	x9, [x22, #112]
  418b0c:	mov	w8, wzr
  418b10:	str	x9, [x0]
  418b14:	str	x0, [x22, #112]
  418b18:	str	wzr, [x22, #128]
  418b1c:	b	418974 <_obstack_memory_used@@Base+0x6e4>
  418b20:	mov	w0, #0x3c8                 	// #968
  418b24:	bl	4023a0 <malloc@plt>
  418b28:	cbz	x0, 418b44 <_obstack_memory_used@@Base+0x8b4>
  418b2c:	ldr	x9, [x22, #112]
  418b30:	mov	w8, wzr
  418b34:	str	x9, [x0]
  418b38:	str	x0, [x22, #112]
  418b3c:	str	wzr, [x22, #128]
  418b40:	b	4189bc <_obstack_memory_used@@Base+0x72c>
  418b44:	mov	w8, #0xc                   	// #12
  418b48:	stur	w8, [x29, #-44]
  418b4c:	str	xzr, [x20, #104]
  418b50:	b	418b74 <_obstack_memory_used@@Base+0x8e4>
  418b54:	mov	w21, #0xc                   	// #12
  418b58:	b	41954c <_obstack_memory_used@@Base+0x12bc>
  418b5c:	mov	x23, xzr
  418b60:	mov	x8, x23
  418b64:	cbnz	x21, 4189ac <_obstack_memory_used@@Base+0x71c>
  418b68:	b	4189f8 <_obstack_memory_used@@Base+0x768>
  418b6c:	mov	w0, #0xc                   	// #12
  418b70:	stur	w0, [x29, #-44]
  418b74:	ldr	x21, [x19]
  418b78:	ldr	x0, [x21, #112]
  418b7c:	cbz	x0, 418b90 <_obstack_memory_used@@Base+0x900>
  418b80:	ldr	x22, [x0]
  418b84:	bl	402620 <free@plt>
  418b88:	mov	x0, x22
  418b8c:	cbnz	x22, 418b80 <_obstack_memory_used@@Base+0x8f0>
  418b90:	ldr	x0, [x21, #32]
  418b94:	mov	w8, #0xf                   	// #15
  418b98:	str	w8, [x21, #128]
  418b9c:	stp	xzr, xzr, [x21, #104]
  418ba0:	bl	402620 <free@plt>
  418ba4:	str	xzr, [x21, #32]
  418ba8:	ldr	x0, [sp, #24]
  418bac:	bl	402620 <free@plt>
  418bb0:	ldr	x0, [sp, #32]
  418bb4:	bl	402620 <free@plt>
  418bb8:	ldrb	w8, [sp, #147]
  418bbc:	cbz	w8, 418bc8 <_obstack_memory_used@@Base+0x938>
  418bc0:	ldr	x0, [sp, #16]
  418bc4:	bl	402620 <free@plt>
  418bc8:	mov	x0, x20
  418bcc:	bl	419d5c <_obstack_memory_used@@Base+0x1acc>
  418bd0:	stp	xzr, xzr, [x19]
  418bd4:	ldur	w21, [x29, #-44]
  418bd8:	b	41954c <_obstack_memory_used@@Base+0x12bc>
  418bdc:	str	x8, [x0, x8, lsl #3]
  418be0:	add	x8, x8, #0x1
  418be4:	cmp	x22, x8
  418be8:	b.ne	418bdc <_obstack_memory_used@@Base+0x94c>  // b.any
  418bec:	ldr	x9, [x21, #104]
  418bf0:	ldrb	w8, [x9, #48]
  418bf4:	cmp	w8, #0x11
  418bf8:	b.eq	418c30 <_obstack_memory_used@@Base+0x9a0>  // b.none
  418bfc:	cmp	w8, #0x4
  418c00:	b.ne	418c80 <_obstack_memory_used@@Base+0x9f0>  // b.any
  418c04:	ldr	x8, [x9, #40]
  418c08:	mov	w11, #0x1                   	// #1
  418c0c:	sbfiz	x8, x8, #3, #32
  418c10:	ldr	x8, [x0, x8]
  418c14:	str	x8, [x9, #40]
  418c18:	ldr	x10, [x21, #160]
  418c1c:	lsl	w8, w11, w8
  418c20:	sxtw	x8, w8
  418c24:	orr	x8, x10, x8
  418c28:	str	x8, [x21, #160]
  418c2c:	b	418c80 <_obstack_memory_used@@Base+0x9f0>
  418c30:	ldr	x8, [x9, #8]
  418c34:	cbz	x8, 418c80 <_obstack_memory_used@@Base+0x9f0>
  418c38:	ldrb	w10, [x8, #48]
  418c3c:	cmp	w10, #0x11
  418c40:	b.ne	418c80 <_obstack_memory_used@@Base+0x9f0>  // b.any
  418c44:	ldr	x10, [x8, #8]
  418c48:	ldr	x8, [x8, #40]
  418c4c:	str	x10, [x9, #8]
  418c50:	cbz	x10, 418c58 <_obstack_memory_used@@Base+0x9c8>
  418c54:	str	x9, [x10]
  418c58:	ldr	x10, [x9, #40]
  418c5c:	cmp	x8, #0x3f
  418c60:	ldr	x10, [x0, x10, lsl #3]
  418c64:	str	x10, [x0, x8, lsl #3]
  418c68:	b.gt	418c80 <_obstack_memory_used@@Base+0x9f0>
  418c6c:	ldr	x10, [x21, #160]
  418c70:	mov	w11, #0x1                   	// #1
  418c74:	lsl	x8, x11, x8
  418c78:	bic	x8, x10, x8
  418c7c:	b	418c28 <_obstack_memory_used@@Base+0x998>
  418c80:	mov	w8, #0x1                   	// #1
  418c84:	ldr	x10, [x9, #8]
  418c88:	cbnz	x10, 418cb4 <_obstack_memory_used@@Base+0xa24>
  418c8c:	mov	x11, xzr
  418c90:	b	418c9c <_obstack_memory_used@@Base+0xa0c>
  418c94:	ldr	x9, [x11]
  418c98:	cbz	x9, 418d60 <_obstack_memory_used@@Base+0xad0>
  418c9c:	ldr	x10, [x9, #16]
  418ca0:	mov	x12, x11
  418ca4:	mov	x11, x9
  418ca8:	cmp	x10, x12
  418cac:	b.eq	418c94 <_obstack_memory_used@@Base+0xa04>  // b.none
  418cb0:	cbz	x10, 418c94 <_obstack_memory_used@@Base+0xa04>
  418cb4:	ldrb	w9, [x10, #48]
  418cb8:	cmp	w9, #0x11
  418cbc:	b.eq	418d04 <_obstack_memory_used@@Base+0xa74>  // b.none
  418cc0:	cmp	w9, #0x4
  418cc4:	mov	x9, x10
  418cc8:	b.ne	418c84 <_obstack_memory_used@@Base+0x9f4>  // b.any
  418ccc:	ldr	x11, [x21, #224]
  418cd0:	mov	x9, x10
  418cd4:	cbz	x11, 418c84 <_obstack_memory_used@@Base+0x9f4>
  418cd8:	ldr	x9, [x10, #40]
  418cdc:	sbfiz	x9, x9, #3, #32
  418ce0:	ldr	x9, [x11, x9]
  418ce4:	str	x9, [x10, #40]
  418ce8:	ldr	x11, [x21, #160]
  418cec:	lsl	w9, w8, w9
  418cf0:	sxtw	x9, w9
  418cf4:	orr	x9, x11, x9
  418cf8:	str	x9, [x21, #160]
  418cfc:	mov	x9, x10
  418d00:	b	418c84 <_obstack_memory_used@@Base+0x9f4>
  418d04:	ldr	x11, [x10, #8]
  418d08:	mov	x9, x10
  418d0c:	cbz	x11, 418c84 <_obstack_memory_used@@Base+0x9f4>
  418d10:	ldrb	w9, [x11, #48]
  418d14:	cmp	w9, #0x11
  418d18:	mov	x9, x10
  418d1c:	b.ne	418c84 <_obstack_memory_used@@Base+0x9f4>  // b.any
  418d20:	ldr	x9, [x11, #8]
  418d24:	ldr	x11, [x11, #40]
  418d28:	str	x9, [x10, #8]
  418d2c:	cbz	x9, 418d34 <_obstack_memory_used@@Base+0xaa4>
  418d30:	str	x10, [x9]
  418d34:	ldr	x9, [x21, #224]
  418d38:	ldr	x12, [x10, #40]
  418d3c:	cmp	x11, #0x3f
  418d40:	ldr	x12, [x9, x12, lsl #3]
  418d44:	str	x12, [x9, x11, lsl #3]
  418d48:	mov	x9, x10
  418d4c:	b.gt	418c84 <_obstack_memory_used@@Base+0x9f4>
  418d50:	ldr	x9, [x21, #160]
  418d54:	lsl	x11, x8, x11
  418d58:	bic	x9, x9, x11
  418d5c:	b	418cf8 <_obstack_memory_used@@Base+0xa68>
  418d60:	ldr	x8, [x19, #48]
  418d64:	cbz	x8, 418d8c <_obstack_memory_used@@Base+0xafc>
  418d68:	ldr	x0, [x21, #224]
  418d6c:	mov	x9, xzr
  418d70:	ldr	x10, [x0, x9, lsl #3]
  418d74:	cmp	x9, x10
  418d78:	b.ne	418d94 <_obstack_memory_used@@Base+0xb04>  // b.any
  418d7c:	add	x9, x9, #0x1
  418d80:	cmp	x8, x9
  418d84:	b.ne	418d70 <_obstack_memory_used@@Base+0xae0>  // b.any
  418d88:	b	418d9c <_obstack_memory_used@@Base+0xb0c>
  418d8c:	ldr	x0, [x21, #224]
  418d90:	b	418d9c <_obstack_memory_used@@Base+0xb0c>
  418d94:	cmp	x8, x9
  418d98:	b.ne	418da4 <_obstack_memory_used@@Base+0xb14>  // b.any
  418d9c:	bl	402620 <free@plt>
  418da0:	str	xzr, [x21, #224]
  418da4:	ldr	x8, [x21, #104]
  418da8:	mov	x22, x8
  418dac:	ldr	x8, [x8, #8]
  418db0:	cbnz	x8, 418da8 <_obstack_memory_used@@Base+0xb18>
  418db4:	ldr	x8, [x22, #16]
  418db8:	cbnz	x8, 418da8 <_obstack_memory_used@@Base+0xb18>
  418dbc:	mov	x2, xzr
  418dc0:	b	418dcc <_obstack_memory_used@@Base+0xb3c>
  418dc4:	ldr	x2, [x9, #8]
  418dc8:	mov	x22, x9
  418dcc:	stur	wzr, [x29, #-40]
  418dd0:	cbz	x2, 418df8 <_obstack_memory_used@@Base+0xb68>
  418dd4:	ldrb	w8, [x2, #48]
  418dd8:	cmp	w8, #0x11
  418ddc:	b.ne	418df8 <_obstack_memory_used@@Base+0xb68>  // b.any
  418de0:	sub	x0, x29, #0x28
  418de4:	mov	x1, x19
  418de8:	bl	4211dc <_obstack_memory_used@@Base+0x8f4c>
  418dec:	str	x0, [x22, #8]
  418df0:	cbz	x0, 418df8 <_obstack_memory_used@@Base+0xb68>
  418df4:	str	x22, [x0]
  418df8:	ldr	x2, [x22, #16]
  418dfc:	cbz	x2, 418e24 <_obstack_memory_used@@Base+0xb94>
  418e00:	ldrb	w8, [x2, #48]
  418e04:	cmp	w8, #0x11
  418e08:	b.ne	418e24 <_obstack_memory_used@@Base+0xb94>  // b.any
  418e0c:	sub	x0, x29, #0x28
  418e10:	mov	x1, x19
  418e14:	bl	4211dc <_obstack_memory_used@@Base+0x8f4c>
  418e18:	str	x0, [x22, #16]
  418e1c:	cbz	x0, 418e24 <_obstack_memory_used@@Base+0xb94>
  418e20:	str	x22, [x0]
  418e24:	ldur	w0, [x29, #-40]
  418e28:	cbnz	w0, 418b70 <_obstack_memory_used@@Base+0x8e0>
  418e2c:	ldr	x9, [x22]
  418e30:	cbz	x9, 418e48 <_obstack_memory_used@@Base+0xbb8>
  418e34:	ldr	x8, [x9, #16]
  418e38:	cmp	x8, x22
  418e3c:	b.eq	418dc4 <_obstack_memory_used@@Base+0xb34>  // b.none
  418e40:	cbz	x8, 418dc4 <_obstack_memory_used@@Base+0xb34>
  418e44:	b	418da8 <_obstack_memory_used@@Base+0xb18>
  418e48:	ldr	x8, [x21, #104]
  418e4c:	mov	x22, x8
  418e50:	ldr	x8, [x8, #8]
  418e54:	cbnz	x8, 418e4c <_obstack_memory_used@@Base+0xbbc>
  418e58:	ldr	x8, [x22, #16]
  418e5c:	cbnz	x8, 418e4c <_obstack_memory_used@@Base+0xbbc>
  418e60:	ldrb	w8, [x22, #48]
  418e64:	cmp	w8, #0x10
  418e68:	b.ne	418e84 <_obstack_memory_used@@Base+0xbf4>  // b.any
  418e6c:	ldr	x8, [x22, #8]
  418e70:	ldr	x9, [x8, #24]
  418e74:	str	x9, [x22, #24]
  418e78:	ldr	x8, [x8, #56]
  418e7c:	str	x8, [x22, #56]
  418e80:	b	418ec4 <_obstack_memory_used@@Base+0xc34>
  418e84:	ldp	x1, x2, [x22, #40]
  418e88:	mov	x0, x21
  418e8c:	str	x22, [x22, #24]
  418e90:	bl	421474 <_obstack_memory_used@@Base+0x91e4>
  418e94:	cmn	x0, #0x1
  418e98:	str	x0, [x22, #56]
  418e9c:	b.eq	418b6c <_obstack_memory_used@@Base+0x8dc>  // b.none
  418ea0:	ldrb	w8, [x22, #48]
  418ea4:	cmp	w8, #0xc
  418ea8:	b.ne	418ec4 <_obstack_memory_used@@Base+0xc34>  // b.any
  418eac:	ldr	x8, [x21]
  418eb0:	ldr	w9, [x22, #40]
  418eb4:	add	x8, x8, x0, lsl #4
  418eb8:	ldr	w10, [x8, #8]
  418ebc:	bfi	w10, w9, #8, #10
  418ec0:	str	w10, [x8, #8]
  418ec4:	ldr	x9, [x22]
  418ec8:	cbz	x9, 418ee8 <_obstack_memory_used@@Base+0xc58>
  418ecc:	ldr	x8, [x9, #16]
  418ed0:	cmp	x8, x22
  418ed4:	mov	x22, x9
  418ed8:	b.eq	418e60 <_obstack_memory_used@@Base+0xbd0>  // b.none
  418edc:	mov	x22, x9
  418ee0:	cbz	x8, 418e60 <_obstack_memory_used@@Base+0xbd0>
  418ee4:	b	418e4c <_obstack_memory_used@@Base+0xbbc>
  418ee8:	ldr	x22, [x21, #104]
  418eec:	ldrb	w8, [x22, #48]
  418ef0:	cmp	w8, #0x10
  418ef4:	b.eq	418f0c <_obstack_memory_used@@Base+0xc7c>  // b.none
  418ef8:	cmp	w8, #0xb
  418efc:	b.ne	418f1c <_obstack_memory_used@@Base+0xc8c>  // b.any
  418f00:	ldr	x8, [x22, #8]
  418f04:	str	x22, [x8, #32]
  418f08:	b	418f3c <_obstack_memory_used@@Base+0xcac>
  418f0c:	ldp	x8, x9, [x22, #8]
  418f10:	ldr	x10, [x9, #24]
  418f14:	str	x10, [x8, #32]
  418f18:	b	418f34 <_obstack_memory_used@@Base+0xca4>
  418f1c:	ldr	x8, [x22, #8]
  418f20:	cbz	x8, 418f2c <_obstack_memory_used@@Base+0xc9c>
  418f24:	ldr	x9, [x22, #32]
  418f28:	str	x9, [x8, #32]
  418f2c:	ldr	x9, [x22, #16]
  418f30:	cbz	x9, 418f3c <_obstack_memory_used@@Base+0xcac>
  418f34:	ldr	x10, [x22, #32]
  418f38:	str	x10, [x9, #32]
  418f3c:	mov	x10, x22
  418f40:	b	418f5c <_obstack_memory_used@@Base+0xccc>
  418f44:	ldp	x8, x10, [x9, #8]
  418f48:	ldr	x11, [x10, #24]
  418f4c:	str	x11, [x8, #32]
  418f50:	ldr	x11, [x9, #32]
  418f54:	str	x11, [x10, #32]
  418f58:	mov	x10, x9
  418f5c:	mov	x9, x8
  418f60:	cbnz	x8, 418f88 <_obstack_memory_used@@Base+0xcf8>
  418f64:	b	418f70 <_obstack_memory_used@@Base+0xce0>
  418f68:	ldr	x10, [x8]
  418f6c:	cbz	x10, 418fd8 <_obstack_memory_used@@Base+0xd48>
  418f70:	ldr	x9, [x10, #16]
  418f74:	mov	x11, x8
  418f78:	mov	x8, x10
  418f7c:	cmp	x9, x11
  418f80:	b.eq	418f68 <_obstack_memory_used@@Base+0xcd8>  // b.none
  418f84:	cbz	x9, 418f68 <_obstack_memory_used@@Base+0xcd8>
  418f88:	ldrb	w8, [x9, #48]
  418f8c:	cmp	w8, #0x10
  418f90:	b.eq	418f44 <_obstack_memory_used@@Base+0xcb4>  // b.none
  418f94:	cmp	w8, #0xb
  418f98:	b.ne	418fac <_obstack_memory_used@@Base+0xd1c>  // b.any
  418f9c:	ldr	x8, [x9, #8]
  418fa0:	mov	x10, x9
  418fa4:	str	x9, [x8, #32]
  418fa8:	b	418f5c <_obstack_memory_used@@Base+0xccc>
  418fac:	ldr	x8, [x9, #8]
  418fb0:	cbz	x8, 418fbc <_obstack_memory_used@@Base+0xd2c>
  418fb4:	ldr	x10, [x9, #32]
  418fb8:	str	x10, [x8, #32]
  418fbc:	ldr	x11, [x9, #16]
  418fc0:	mov	x10, x9
  418fc4:	cbz	x11, 418f5c <_obstack_memory_used@@Base+0xccc>
  418fc8:	ldr	x10, [x9, #32]
  418fcc:	str	x10, [x11, #32]
  418fd0:	mov	x10, x9
  418fd4:	b	418f5c <_obstack_memory_used@@Base+0xccc>
  418fd8:	mov	x0, x21
  418fdc:	mov	x1, x22
  418fe0:	bl	421030 <_obstack_memory_used@@Base+0x8da0>
  418fe4:	cbz	w0, 419000 <_obstack_memory_used@@Base+0xd70>
  418fe8:	b	418b70 <_obstack_memory_used@@Base+0x8e0>
  418fec:	mov	x0, x21
  418ff0:	mov	x1, x23
  418ff4:	bl	421030 <_obstack_memory_used@@Base+0x8da0>
  418ff8:	mov	x22, x23
  418ffc:	cbnz	w0, 418b70 <_obstack_memory_used@@Base+0x8e0>
  419000:	ldr	x23, [x22, #8]
  419004:	cbnz	x23, 418fec <_obstack_memory_used@@Base+0xd5c>
  419008:	mov	x8, xzr
  41900c:	b	419018 <_obstack_memory_used@@Base+0xd88>
  419010:	ldr	x22, [x8]
  419014:	cbz	x22, 419034 <_obstack_memory_used@@Base+0xda4>
  419018:	ldr	x23, [x22, #16]
  41901c:	mov	x9, x8
  419020:	mov	x8, x22
  419024:	cmp	x23, x9
  419028:	b.eq	419010 <_obstack_memory_used@@Base+0xd80>  // b.none
  41902c:	cbz	x23, 419010 <_obstack_memory_used@@Base+0xd80>
  419030:	b	418fec <_obstack_memory_used@@Base+0xd5c>
  419034:	mov	w24, wzr
  419038:	mov	w23, #0x18                  	// #24
  41903c:	ldr	x8, [x21, #48]
  419040:	madd	x8, x22, x23, x8
  419044:	ldr	x8, [x8, #8]
  419048:	cbnz	x8, 419080 <_obstack_memory_used@@Base+0xdf0>
  41904c:	sub	x0, x29, #0x28
  419050:	mov	w3, #0x1                   	// #1
  419054:	mov	x1, x21
  419058:	mov	x2, x22
  41905c:	bl	421640 <_obstack_memory_used@@Base+0x93b0>
  419060:	cbnz	w0, 418b70 <_obstack_memory_used@@Base+0x8e0>
  419064:	ldr	x8, [x21, #48]
  419068:	madd	x8, x22, x23, x8
  41906c:	ldr	x8, [x8, #8]
  419070:	cbnz	x8, 419080 <_obstack_memory_used@@Base+0xdf0>
  419074:	ldur	x0, [x29, #-24]
  419078:	bl	402620 <free@plt>
  41907c:	mov	w24, #0x1                   	// #1
  419080:	ldr	x9, [x21, #16]
  419084:	add	x8, x22, #0x1
  419088:	mov	w10, w24
  41908c:	cmp	x8, x9
  419090:	cset	w11, ne  // ne = any
  419094:	csinc	x22, xzr, x22, eq  // eq = none
  419098:	and	w24, w24, w11
  41909c:	tbnz	w10, #0, 41903c <_obstack_memory_used@@Base+0xdac>
  4190a0:	cmp	x8, x9
  4190a4:	b.ne	41903c <_obstack_memory_used@@Base+0xdac>  // b.any
  4190a8:	ldrb	w9, [x19, #56]
  4190ac:	tbnz	w9, #4, 4190c0 <_obstack_memory_used@@Base+0xe30>
  4190b0:	ldr	x9, [x19, #48]
  4190b4:	cbz	x9, 4190c0 <_obstack_memory_used@@Base+0xe30>
  4190b8:	ldrb	w9, [x21, #176]
  4190bc:	tbnz	w9, #0, 4190c8 <_obstack_memory_used@@Base+0xe38>
  4190c0:	ldr	x9, [x21, #152]
  4190c4:	cbz	x9, 4191dc <_obstack_memory_used@@Base+0xf4c>
  4190c8:	add	x8, x8, x8, lsl #1
  4190cc:	lsl	x0, x8, #3
  4190d0:	bl	4023a0 <malloc@plt>
  4190d4:	str	x0, [x21, #56]
  4190d8:	cbz	x0, 418b6c <_obstack_memory_used@@Base+0x8dc>
  4190dc:	ldr	x8, [x21, #16]
  4190e0:	cbz	x8, 4191dc <_obstack_memory_used@@Base+0xf4c>
  4190e4:	stp	xzr, xzr, [x0]
  4190e8:	str	xzr, [x0, #16]
  4190ec:	ldr	x9, [x21, #16]
  4190f0:	cmp	x9, #0x2
  4190f4:	b.cc	419124 <_obstack_memory_used@@Base+0xe94>  // b.lo, b.ul, b.last
  4190f8:	mov	w8, #0x1                   	// #1
  4190fc:	mov	w10, #0x18                  	// #24
  419100:	ldr	x9, [x21, #56]
  419104:	add	x8, x8, #0x1
  419108:	add	x9, x9, x10
  41910c:	stp	xzr, xzr, [x9]
  419110:	str	xzr, [x9, #16]
  419114:	ldr	x9, [x21, #16]
  419118:	add	x10, x10, #0x18
  41911c:	cmp	x8, x9
  419120:	b.cc	419100 <_obstack_memory_used@@Base+0xe70>  // b.lo, b.ul, b.last
  419124:	cbz	x9, 4191dc <_obstack_memory_used@@Base+0xf4c>
  419128:	ldr	x8, [x21, #48]
  41912c:	mov	x22, xzr
  419130:	mov	w23, #0x18                  	// #24
  419134:	b	419148 <_obstack_memory_used@@Base+0xeb8>
  419138:	ldr	x9, [x21, #16]
  41913c:	add	x22, x22, #0x1
  419140:	cmp	x22, x9
  419144:	b.cs	4191dc <_obstack_memory_used@@Base+0xf4c>  // b.hs, b.nlast
  419148:	madd	x10, x22, x23, x8
  41914c:	ldr	x11, [x10, #8]
  419150:	cmp	x11, #0x1
  419154:	b.lt	41913c <_obstack_memory_used@@Base+0xeac>  // b.tstop
  419158:	ldr	x24, [x10, #16]
  41915c:	mov	x26, xzr
  419160:	b	41918c <_obstack_memory_used@@Base+0xefc>
  419164:	madd	x10, x11, x23, x10
  419168:	ldr	x0, [x10, #16]
  41916c:	add	x10, x9, #0x1
  419170:	str	x10, [x27]
  419174:	str	x22, [x0, x9, lsl #3]
  419178:	madd	x9, x22, x23, x8
  41917c:	ldr	x9, [x9, #8]
  419180:	add	x26, x26, #0x1
  419184:	cmp	x26, x9
  419188:	b.ge	419138 <_obstack_memory_used@@Base+0xea8>  // b.tcont
  41918c:	ldr	x10, [x21, #56]
  419190:	ldr	x11, [x24, x26, lsl #3]
  419194:	madd	x12, x11, x23, x10
  419198:	mov	x27, x12
  41919c:	ldr	x13, [x12]
  4191a0:	ldr	x9, [x27, #8]!
  4191a4:	cmp	x13, x9
  4191a8:	b.ne	419164 <_obstack_memory_used@@Base+0xed4>  // b.any
  4191ac:	lsl	x8, x13, #1
  4191b0:	add	x8, x8, #0x2
  4191b4:	str	x8, [x12]
  4191b8:	madd	x28, x11, x23, x10
  4191bc:	ldr	x0, [x28, #16]!
  4191c0:	lsl	x1, x8, #3
  4191c4:	bl	4024c0 <realloc@plt>
  4191c8:	cbz	x0, 418b6c <_obstack_memory_used@@Base+0x8dc>
  4191cc:	str	x0, [x28]
  4191d0:	ldr	x9, [x27]
  4191d4:	ldr	x8, [x21, #48]
  4191d8:	b	41916c <_obstack_memory_used@@Base+0xedc>
  4191dc:	stur	wzr, [x29, #-44]
  4191e0:	cbnz	x25, 4192d4 <_obstack_memory_used@@Base+0x1044>
  4191e4:	ldrb	w9, [x20, #176]
  4191e8:	tbz	w9, #2, 4192d4 <_obstack_memory_used@@Base+0x1044>
  4191ec:	ldr	x8, [x19, #40]
  4191f0:	cbnz	x8, 4192d4 <_obstack_memory_used@@Base+0x1044>
  4191f4:	ldr	x11, [x20, #16]
  4191f8:	cbz	x11, 4192a0 <_obstack_memory_used@@Base+0x1010>
  4191fc:	ldr	x10, [x20]
  419200:	adrp	x13, 42a000 <_obstack_memory_used@@Base+0x11d70>
  419204:	mov	w8, wzr
  419208:	mov	w12, wzr
  41920c:	add	x13, x13, #0xf00
  419210:	mov	w14, #0x1                   	// #1
  419214:	mov	w15, #0x8b                  	// #139
  419218:	mov	x16, x10
  41921c:	b	41923c <_obstack_memory_used@@Base+0xfac>
  419220:	ldrsb	w17, [x16]
  419224:	cmp	w17, #0x0
  419228:	cset	w17, lt  // lt = tstop
  41922c:	orr	w12, w12, w17
  419230:	subs	x11, x11, #0x1
  419234:	add	x16, x16, #0x10
  419238:	b.eq	419570 <_obstack_memory_used@@Base+0x12e0>  // b.none
  41923c:	ldrb	w17, [x16, #8]
  419240:	sub	w17, w17, #0x1
  419244:	cmp	w17, #0xb
  419248:	b.hi	4195f4 <_obstack_memory_used@@Base+0x1364>  // b.pmore
  41924c:	adr	x18, 419220 <_obstack_memory_used@@Base+0xf90>
  419250:	ldrb	w0, [x13, x17]
  419254:	add	x18, x18, x0, lsl #2
  419258:	br	x18
  41925c:	ldr	x17, [x16]
  419260:	ldr	x18, [x17, #16]
  419264:	cbnz	x18, 4192d4 <_obstack_memory_used@@Base+0x1044>
  419268:	ldr	x17, [x17, #24]
  41926c:	cbz	x17, 419230 <_obstack_memory_used@@Base+0xfa0>
  419270:	b	4192d4 <_obstack_memory_used@@Base+0x1044>
  419274:	ldr	w17, [x16]
  419278:	sub	w17, w17, #0x10
  41927c:	ror	w17, w17, #4
  419280:	cmp	w17, #0x7
  419284:	b.hi	4192d4 <_obstack_memory_used@@Base+0x1044>  // b.pmore
  419288:	lsl	w17, w14, w17
  41928c:	tst	w17, w15
  419290:	b.ne	419230 <_obstack_memory_used@@Base+0xfa0>  // b.any
  419294:	b	4192d4 <_obstack_memory_used@@Base+0x1044>
  419298:	mov	w8, #0x1                   	// #1
  41929c:	b	419230 <_obstack_memory_used@@Base+0xfa0>
  4192a0:	mov	w8, wzr
  4192a4:	ldr	x10, [x20, #152]
  4192a8:	mov	w12, #0x2                   	// #2
  4192ac:	and	w9, w9, #0xfffffff9
  4192b0:	mov	w11, #0x1                   	// #1
  4192b4:	cmp	x10, #0x0
  4192b8:	cset	w10, gt
  4192bc:	orr	w8, w8, w10
  4192c0:	tst	w8, #0x1
  4192c4:	csel	w8, w12, wzr, ne  // ne = any
  4192c8:	orr	w8, w8, w9
  4192cc:	str	w11, [x20, #180]
  4192d0:	strb	w8, [x20, #176]
  4192d4:	ldr	x8, [x20, #104]
  4192d8:	ldr	x24, [x20, #48]
  4192dc:	ldr	x8, [x8, #24]
  4192e0:	ldr	x23, [x8, #56]
  4192e4:	mov	w8, #0x18                  	// #24
  4192e8:	str	x23, [x20, #144]
  4192ec:	madd	x8, x23, x8, x24
  4192f0:	ldr	x22, [x8, #8]
  4192f4:	stur	x22, [x29, #-32]
  4192f8:	ldr	x25, [x8, #8]
  4192fc:	cmp	x25, #0x1
  419300:	b.lt	419444 <_obstack_memory_used@@Base+0x11b4>  // b.tstop
  419304:	lsl	x0, x22, #3
  419308:	stur	x22, [x29, #-40]
  41930c:	bl	4023a0 <malloc@plt>
  419310:	stur	x0, [x29, #-24]
  419314:	cbz	x0, 4195e4 <_obstack_memory_used@@Base+0x1354>
  419318:	mov	w8, #0x18                  	// #24
  41931c:	madd	x8, x23, x8, x24
  419320:	ldr	x1, [x8, #16]
  419324:	lsl	x2, x25, #3
  419328:	mov	x21, x0
  41932c:	bl	402210 <memcpy@plt>
  419330:	cmp	x22, #0x1
  419334:	stur	wzr, [x29, #-12]
  419338:	b.lt	419450 <_obstack_memory_used@@Base+0x11c0>  // b.tstop
  41933c:	ldr	x8, [x20, #152]
  419340:	cmp	x8, #0x1
  419344:	b.lt	419450 <_obstack_memory_used@@Base+0x11c0>  // b.tstop
  419348:	mov	x8, xzr
  41934c:	mov	w23, #0x18                  	// #24
  419350:	ldr	x9, [x21, x8, lsl #3]
  419354:	ldr	x10, [x20]
  419358:	add	x11, x10, x9, lsl #4
  41935c:	ldrb	w11, [x11, #8]
  419360:	cmp	w11, #0x4
  419364:	b.ne	419430 <_obstack_memory_used@@Base+0x11a0>  // b.any
  419368:	cmp	x22, #0x1
  41936c:	b.lt	4193bc <_obstack_memory_used@@Base+0x112c>  // b.tstop
  419370:	mov	x11, xzr
  419374:	add	x12, x10, x9, lsl #4
  419378:	b	419388 <_obstack_memory_used@@Base+0x10f8>
  41937c:	add	x11, x11, #0x1
  419380:	cmp	x22, x11
  419384:	b.eq	419430 <_obstack_memory_used@@Base+0x11a0>  // b.none
  419388:	ldr	x13, [x21, x11, lsl #3]
  41938c:	add	x14, x10, x13, lsl #4
  419390:	ldrb	w14, [x14, #8]
  419394:	cmp	w14, #0x9
  419398:	b.ne	41937c <_obstack_memory_used@@Base+0x10ec>  // b.any
  41939c:	lsl	x13, x13, #4
  4193a0:	ldr	x13, [x10, x13]
  4193a4:	ldr	x14, [x12]
  4193a8:	cmp	x13, x14
  4193ac:	b.ne	41937c <_obstack_memory_used@@Base+0x10ec>  // b.any
  4193b0:	cmp	x11, x22
  4193b4:	b.ne	4193c8 <_obstack_memory_used@@Base+0x1138>  // b.any
  4193b8:	b	419430 <_obstack_memory_used@@Base+0x11a0>
  4193bc:	mov	x11, xzr
  4193c0:	cmp	x11, x22
  4193c4:	b.eq	419430 <_obstack_memory_used@@Base+0x11a0>  // b.none
  4193c8:	ldr	x10, [x20, #40]
  4193cc:	madd	x9, x9, x23, x10
  4193d0:	ldr	x9, [x9, #16]
  4193d4:	subs	x10, x22, #0x1
  4193d8:	ldr	x9, [x9]
  4193dc:	b.lt	419414 <_obstack_memory_used@@Base+0x1184>  // b.tstop
  4193e0:	mov	x11, xzr
  4193e4:	b.eq	419408 <_obstack_memory_used@@Base+0x1178>  // b.none
  4193e8:	add	x12, x11, x10
  4193ec:	lsr	x12, x12, #1
  4193f0:	ldr	x13, [x21, x12, lsl #3]
  4193f4:	cmp	x13, x9
  4193f8:	csinc	x11, x11, x12, ge  // ge = tcont
  4193fc:	csel	x10, x10, x12, lt  // lt = tstop
  419400:	cmp	x11, x10
  419404:	b.cc	4193e8 <_obstack_memory_used@@Base+0x1158>  // b.lo, b.ul, b.last
  419408:	ldr	x10, [x21, x11, lsl #3]
  41940c:	cmp	x10, x9
  419410:	b.eq	419430 <_obstack_memory_used@@Base+0x11a0>  // b.none
  419414:	ldr	x8, [x20, #48]
  419418:	sub	x0, x29, #0x28
  41941c:	madd	x1, x9, x23, x8
  419420:	bl	421d10 <_obstack_memory_used@@Base+0x9a80>
  419424:	cbnz	w0, 4194e8 <_obstack_memory_used@@Base+0x1258>
  419428:	ldur	x22, [x29, #-32]
  41942c:	mov	x8, xzr
  419430:	add	x8, x8, #0x1
  419434:	cmp	x8, x22
  419438:	b.ge	419450 <_obstack_memory_used@@Base+0x11c0>  // b.tcont
  41943c:	ldur	x21, [x29, #-24]
  419440:	b	419350 <_obstack_memory_used@@Base+0x10c0>
  419444:	stp	xzr, xzr, [x29, #-40]
  419448:	stur	xzr, [x29, #-24]
  41944c:	stur	wzr, [x29, #-12]
  419450:	sub	x0, x29, #0xc
  419454:	sub	x2, x29, #0x28
  419458:	mov	x1, x20
  41945c:	mov	w3, wzr
  419460:	bl	421fa4 <_obstack_memory_used@@Base+0x9d14>
  419464:	str	x0, [x20, #72]
  419468:	cbz	x0, 4195dc <_obstack_memory_used@@Base+0x134c>
  41946c:	ldrsb	w8, [x0, #104]
  419470:	tbnz	w8, #31, 419480 <_obstack_memory_used@@Base+0x11f0>
  419474:	stp	x0, x0, [x20, #88]
  419478:	str	x0, [x20, #80]
  41947c:	b	4194dc <_obstack_memory_used@@Base+0x124c>
  419480:	sub	x0, x29, #0xc
  419484:	sub	x2, x29, #0x28
  419488:	mov	w3, #0x1                   	// #1
  41948c:	mov	x1, x20
  419490:	bl	421fa4 <_obstack_memory_used@@Base+0x9d14>
  419494:	str	x0, [x20, #80]
  419498:	sub	x0, x29, #0xc
  41949c:	sub	x2, x29, #0x28
  4194a0:	mov	w3, #0x2                   	// #2
  4194a4:	mov	x1, x20
  4194a8:	bl	421fa4 <_obstack_memory_used@@Base+0x9d14>
  4194ac:	str	x0, [x20, #88]
  4194b0:	sub	x0, x29, #0xc
  4194b4:	sub	x2, x29, #0x28
  4194b8:	mov	w3, #0x6                   	// #6
  4194bc:	mov	x1, x20
  4194c0:	bl	421fa4 <_obstack_memory_used@@Base+0x9d14>
  4194c4:	ldr	x8, [x20, #80]
  4194c8:	str	x0, [x20, #96]
  4194cc:	cbz	x8, 4195dc <_obstack_memory_used@@Base+0x134c>
  4194d0:	cbz	x0, 4195dc <_obstack_memory_used@@Base+0x134c>
  4194d4:	ldr	x8, [x20, #88]
  4194d8:	cbz	x8, 4195dc <_obstack_memory_used@@Base+0x134c>
  4194dc:	ldur	x0, [x29, #-24]
  4194e0:	bl	402620 <free@plt>
  4194e4:	mov	w0, wzr
  4194e8:	stur	w0, [x29, #-44]
  4194ec:	ldr	x21, [x19]
  4194f0:	ldr	x0, [x21, #112]
  4194f4:	cbz	x0, 419508 <_obstack_memory_used@@Base+0x1278>
  4194f8:	ldr	x22, [x0]
  4194fc:	bl	402620 <free@plt>
  419500:	mov	x0, x22
  419504:	cbnz	x22, 4194f8 <_obstack_memory_used@@Base+0x1268>
  419508:	ldr	x0, [x21, #32]
  41950c:	mov	w8, #0xf                   	// #15
  419510:	str	w8, [x21, #128]
  419514:	stp	xzr, xzr, [x21, #104]
  419518:	bl	402620 <free@plt>
  41951c:	str	xzr, [x21, #32]
  419520:	ldr	x0, [sp, #24]
  419524:	bl	402620 <free@plt>
  419528:	ldr	x0, [sp, #32]
  41952c:	bl	402620 <free@plt>
  419530:	ldrb	w8, [sp, #147]
  419534:	cbz	w8, 419540 <_obstack_memory_used@@Base+0x12b0>
  419538:	ldr	x0, [sp, #16]
  41953c:	bl	402620 <free@plt>
  419540:	ldur	w8, [x29, #-44]
  419544:	cbnz	w8, 418bc8 <_obstack_memory_used@@Base+0x938>
  419548:	mov	w21, wzr
  41954c:	mov	w0, w21
  419550:	ldp	x20, x19, [sp, #288]
  419554:	ldp	x22, x21, [sp, #272]
  419558:	ldp	x24, x23, [sp, #256]
  41955c:	ldp	x26, x25, [sp, #240]
  419560:	ldp	x28, x27, [sp, #224]
  419564:	ldp	x29, x30, [sp, #208]
  419568:	add	sp, sp, #0x130
  41956c:	ret
  419570:	orr	w11, w12, w8
  419574:	tbz	w11, #0, 4192a4 <_obstack_memory_used@@Base+0x1014>
  419578:	mov	x9, xzr
  41957c:	mov	w11, #0x1                   	// #1
  419580:	add	x12, x10, x9
  419584:	ldr	w13, [x12, #8]
  419588:	and	w14, w13, #0xff
  41958c:	cmp	w14, #0x5
  419590:	b.eq	4195ac <_obstack_memory_used@@Base+0x131c>  // b.none
  419594:	cmp	w14, #0x1
  419598:	b.ne	4195b8 <_obstack_memory_used@@Base+0x1328>  // b.any
  41959c:	ldrsb	w10, [x10, x9]
  4195a0:	tbz	w10, #31, 4195b8 <_obstack_memory_used@@Base+0x1328>
  4195a4:	and	w10, w13, #0xffdfffff
  4195a8:	b	4195b4 <_obstack_memory_used@@Base+0x1324>
  4195ac:	and	w10, w13, #0xffffff00
  4195b0:	orr	w10, w10, #0x7
  4195b4:	str	w10, [x12, #8]
  4195b8:	ldr	x10, [x20, #16]
  4195bc:	cmp	x11, x10
  4195c0:	b.cs	4195d4 <_obstack_memory_used@@Base+0x1344>  // b.hs, b.nlast
  4195c4:	ldr	x10, [x20]
  4195c8:	add	x9, x9, #0x10
  4195cc:	add	x11, x11, #0x1
  4195d0:	b	419580 <_obstack_memory_used@@Base+0x12f0>
  4195d4:	ldrb	w9, [x20, #176]
  4195d8:	b	4192a4 <_obstack_memory_used@@Base+0x1014>
  4195dc:	ldur	w0, [x29, #-12]
  4195e0:	b	4194e8 <_obstack_memory_used@@Base+0x1258>
  4195e4:	mov	w0, #0xc                   	// #12
  4195e8:	stp	xzr, xzr, [x29, #-40]
  4195ec:	stur	w0, [x29, #-12]
  4195f0:	b	4194e8 <_obstack_memory_used@@Base+0x1258>
  4195f4:	bl	402560 <abort@plt>
  4195f8:	adrp	x9, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  4195fc:	ldr	x8, [x9, #3520]
  419600:	str	x0, [x9, #3520]
  419604:	mov	x0, x8
  419608:	ret
  41960c:	stp	x29, x30, [sp, #-48]!
  419610:	stp	x20, x19, [sp, #32]
  419614:	ldr	x20, [x0, #32]
  419618:	str	x21, [sp, #16]
  41961c:	ldr	x21, [x0]
  419620:	movi	v0.2d, #0x0
  419624:	stp	q0, q0, [x20, #224]
  419628:	stp	q0, q0, [x20, #192]
  41962c:	stp	q0, q0, [x20, #160]
  419630:	stp	q0, q0, [x20, #128]
  419634:	stp	q0, q0, [x20, #96]
  419638:	stp	q0, q0, [x20, #64]
  41963c:	stp	q0, q0, [x20, #32]
  419640:	stp	q0, q0, [x20]
  419644:	ldr	x1, [x21, #72]
  419648:	mov	x2, x20
  41964c:	mov	x29, sp
  419650:	mov	x19, x0
  419654:	bl	4196c8 <_obstack_memory_used@@Base+0x1438>
  419658:	ldp	x8, x1, [x21, #72]
  41965c:	cmp	x8, x1
  419660:	b.eq	419674 <_obstack_memory_used@@Base+0x13e4>  // b.none
  419664:	mov	x0, x19
  419668:	mov	x2, x20
  41966c:	bl	4196c8 <_obstack_memory_used@@Base+0x1438>
  419670:	ldr	x8, [x21, #72]
  419674:	ldr	x1, [x21, #88]
  419678:	cmp	x8, x1
  41967c:	b.eq	419690 <_obstack_memory_used@@Base+0x1400>  // b.none
  419680:	mov	x0, x19
  419684:	mov	x2, x20
  419688:	bl	4196c8 <_obstack_memory_used@@Base+0x1438>
  41968c:	ldr	x8, [x21, #72]
  419690:	ldr	x1, [x21, #96]
  419694:	cmp	x8, x1
  419698:	b.eq	4196a8 <_obstack_memory_used@@Base+0x1418>  // b.none
  41969c:	mov	x0, x19
  4196a0:	mov	x2, x20
  4196a4:	bl	4196c8 <_obstack_memory_used@@Base+0x1438>
  4196a8:	ldrb	w8, [x19, #56]
  4196ac:	ldr	x21, [sp, #16]
  4196b0:	mov	w0, wzr
  4196b4:	orr	w8, w8, #0x8
  4196b8:	strb	w8, [x19, #56]
  4196bc:	ldp	x20, x19, [sp, #32]
  4196c0:	ldp	x29, x30, [sp], #48
  4196c4:	ret
  4196c8:	sub	sp, sp, #0x1b0
  4196cc:	stp	x29, x30, [sp, #336]
  4196d0:	stp	x28, x27, [sp, #352]
  4196d4:	stp	x26, x25, [sp, #368]
  4196d8:	stp	x24, x23, [sp, #384]
  4196dc:	stp	x22, x21, [sp, #400]
  4196e0:	stp	x20, x19, [sp, #416]
  4196e4:	ldr	x28, [x0]
  4196e8:	mov	x20, x2
  4196ec:	mov	x25, x0
  4196f0:	add	x29, sp, #0x150
  4196f4:	ldr	w8, [x28, #180]
  4196f8:	cmp	w8, #0x1
  4196fc:	b.ne	41970c <_obstack_memory_used@@Base+0x147c>  // b.any
  419700:	ldrb	w8, [x25, #26]
  419704:	ubfx	w24, w8, #6, #1
  419708:	b	419710 <_obstack_memory_used@@Base+0x1480>
  41970c:	mov	w24, wzr
  419710:	ldr	x8, [x1, #16]
  419714:	cmp	x8, #0x1
  419718:	b.lt	419b6c <_obstack_memory_used@@Base+0x18dc>  // b.tstop
  41971c:	add	x8, sp, #0x38
  419720:	mov	x9, xzr
  419724:	add	x10, x20, #0x3
  419728:	mov	w26, #0x1                   	// #1
  41972c:	orr	x8, x8, #0x1
  419730:	stp	x8, x10, [sp]
  419734:	stp	x25, x28, [sp, #16]
  419738:	str	x1, [sp, #40]
  41973c:	b	419754 <_obstack_memory_used@@Base+0x14c4>
  419740:	ldp	x1, x9, [sp, #40]
  419744:	ldr	x8, [x1, #16]
  419748:	add	x9, x9, #0x1
  41974c:	cmp	x9, x8
  419750:	b.ge	419b6c <_obstack_memory_used@@Base+0x18dc>  // b.tcont
  419754:	ldr	x8, [x1, #24]
  419758:	ldr	x10, [x28]
  41975c:	str	x9, [sp, #48]
  419760:	ldr	x19, [x8, x9, lsl #3]
  419764:	add	x9, x10, x19, lsl #4
  419768:	ldrb	w8, [x9, #8]
  41976c:	sub	w11, w8, #0x1
  419770:	cmp	w11, #0x6
  419774:	b.hi	419740 <_obstack_memory_used@@Base+0x14b0>  // b.pmore
  419778:	adrp	x14, 42a000 <_obstack_memory_used@@Base+0x11d70>
  41977c:	add	x14, x14, #0xf0c
  419780:	adr	x12, 419740 <_obstack_memory_used@@Base+0x14b0>
  419784:	ldrb	w13, [x14, x11]
  419788:	add	x12, x12, x13, lsl #2
  41978c:	br	x12
  419790:	ldrb	w21, [x9]
  419794:	strb	w26, [x20, x21]
  419798:	cbz	w24, 4197ac <_obstack_memory_used@@Base+0x151c>
  41979c:	bl	402330 <__ctype_tolower_loc@plt>
  4197a0:	ldr	x8, [x0]
  4197a4:	ldrsw	x8, [x8, x21, lsl #2]
  4197a8:	strb	w26, [x20, x8]
  4197ac:	ldrb	w8, [x25, #26]
  4197b0:	tbz	w8, #6, 419740 <_obstack_memory_used@@Base+0x14b0>
  4197b4:	ldr	w8, [x28, #180]
  4197b8:	cmp	w8, #0x2
  4197bc:	b.lt	419740 <_obstack_memory_used@@Base+0x14b0>  // b.tstop
  4197c0:	ldr	x9, [x28]
  4197c4:	lsl	x8, x19, #4
  4197c8:	add	x10, x19, #0x1
  4197cc:	mov	w14, #0x1                   	// #1
  4197d0:	ldrb	w9, [x9, x8]
  4197d4:	movk	w14, #0x20, lsl #16
  4197d8:	strb	w9, [sp, #56]
  4197dc:	ldr	x9, [x28, #16]
  4197e0:	cmp	x10, x9
  4197e4:	ldr	x9, [sp]
  4197e8:	b.cs	419828 <_obstack_memory_used@@Base+0x1598>  // b.hs, b.nlast
  4197ec:	ldr	x9, [sp]
  4197f0:	ldr	x11, [x28]
  4197f4:	add	w13, w14, #0xfe
  4197f8:	add	x11, x11, x8
  4197fc:	ldr	w12, [x11, #24]
  419800:	and	w12, w12, w13
  419804:	cmp	w12, w14
  419808:	b.ne	419828 <_obstack_memory_used@@Base+0x1598>  // b.any
  41980c:	ldrb	w11, [x11, #16]
  419810:	add	x10, x10, #0x1
  419814:	add	x8, x8, #0x10
  419818:	strb	w11, [x9], #1
  41981c:	ldr	x11, [x28, #16]
  419820:	cmp	x10, x11
  419824:	b.cc	4197f0 <_obstack_memory_used@@Base+0x1560>  // b.lo, b.ul, b.last
  419828:	add	x8, sp, #0x38
  41982c:	sub	x22, x9, x8
  419830:	sub	x0, x29, #0xc
  419834:	add	x1, sp, #0x38
  419838:	sub	x3, x29, #0x18
  41983c:	mov	x2, x22
  419840:	stur	xzr, [x29, #-24]
  419844:	bl	417eb0 <wcrtomb@plt+0x15640>
  419848:	cmp	x0, x22
  41984c:	b.ne	419740 <_obstack_memory_used@@Base+0x14b0>  // b.any
  419850:	ldur	w0, [x29, #-12]
  419854:	bl	402810 <towlower@plt>
  419858:	mov	w1, w0
  41985c:	add	x0, sp, #0x38
  419860:	sub	x2, x29, #0x18
  419864:	bl	402870 <wcrtomb@plt>
  419868:	cmn	x0, #0x1
  41986c:	b.eq	419740 <_obstack_memory_used@@Base+0x14b0>  // b.none
  419870:	ldrb	w8, [sp, #56]
  419874:	strb	w26, [x20, x8]
  419878:	b	419740 <_obstack_memory_used@@Base+0x14b0>
  41987c:	lsl	x8, x19, #4
  419880:	str	x8, [sp, #32]
  419884:	ldr	x8, [x10, x8]
  419888:	ldr	x9, [sp, #8]
  41988c:	mov	x22, xzr
  419890:	ldr	x19, [x8]
  419894:	mov	w8, #0x83                  	// #131
  419898:	b	4198c0 <_obstack_memory_used@@Base+0x1630>
  41989c:	bl	402330 <__ctype_tolower_loc@plt>
  4198a0:	ldr	x8, [x0]
  4198a4:	ldr	w8, [x8, x22, lsl #2]
  4198a8:	strb	w26, [x20, w8, sxtw]
  4198ac:	add	x22, x22, #0x1
  4198b0:	add	w8, w21, #0x1
  4198b4:	cmp	x22, #0x40
  4198b8:	add	x9, x27, #0x1
  4198bc:	b.eq	419954 <_obstack_memory_used@@Base+0x16c4>  // b.none
  4198c0:	lsr	x10, x19, x22
  4198c4:	mov	w21, w8
  4198c8:	mov	x27, x9
  4198cc:	tbz	w10, #0, 4198ac <_obstack_memory_used@@Base+0x161c>
  4198d0:	strb	w26, [x20, x22]
  4198d4:	cbz	w24, 4198ac <_obstack_memory_used@@Base+0x161c>
  4198d8:	add	w8, w22, #0x80
  4198dc:	cmp	w8, #0x180
  4198e0:	b.cc	41989c <_obstack_memory_used@@Base+0x160c>  // b.lo, b.ul, b.last
  4198e4:	mov	w8, w22
  4198e8:	b	4198a8 <_obstack_memory_used@@Base+0x1618>
  4198ec:	ldr	w8, [x28, #180]
  4198f0:	ldr	x21, [x9]
  4198f4:	cmp	w8, #0x2
  4198f8:	b.lt	419a90 <_obstack_memory_used@@Base+0x1800>  // b.tstop
  4198fc:	ldr	x8, [x21, #72]
  419900:	cbnz	x8, 419914 <_obstack_memory_used@@Base+0x1684>
  419904:	ldrb	w8, [x21, #32]
  419908:	tbnz	w8, #0, 419914 <_obstack_memory_used@@Base+0x1684>
  41990c:	ldr	x8, [x21, #64]
  419910:	cbz	x8, 419a90 <_obstack_memory_used@@Base+0x1800>
  419914:	sturb	wzr, [x29, #-24]
  419918:	b	419928 <_obstack_memory_used@@Base+0x1698>
  41991c:	add	w8, w8, #0x1
  419920:	sturb	w8, [x29, #-24]
  419924:	tbnz	w8, #8, 419740 <_obstack_memory_used@@Base+0x14b0>
  419928:	sub	x1, x29, #0x18
  41992c:	add	x3, sp, #0x38
  419930:	mov	w2, #0x1                   	// #1
  419934:	mov	x0, xzr
  419938:	str	xzr, [sp, #56]
  41993c:	bl	417eb0 <wcrtomb@plt+0x15640>
  419940:	ldurb	w8, [x29, #-24]
  419944:	cmn	x0, #0x2
  419948:	b.ne	41991c <_obstack_memory_used@@Base+0x168c>  // b.any
  41994c:	strb	w26, [x20, x8]
  419950:	b	41991c <_obstack_memory_used@@Base+0x168c>
  419954:	ldr	x8, [x28]
  419958:	ldr	x9, [sp, #32]
  41995c:	mov	x25, xzr
  419960:	ldr	x8, [x8, x9]
  419964:	ldr	x23, [x8, #8]
  419968:	b	419994 <_obstack_memory_used@@Base+0x1704>
  41996c:	bl	402330 <__ctype_tolower_loc@plt>
  419970:	ldr	x8, [x0]
  419974:	ldr	w8, [x8, x22, lsl #2]
  419978:	strb	w26, [x20, w8, sxtw]
  41997c:	add	x25, x25, #0x1
  419980:	add	x22, x22, #0x1
  419984:	add	w21, w19, #0x1
  419988:	cmp	x25, #0x40
  41998c:	add	x27, x28, #0x1
  419990:	b.eq	4199c0 <_obstack_memory_used@@Base+0x1730>  // b.none
  419994:	lsr	x8, x23, x25
  419998:	mov	w19, w21
  41999c:	mov	x28, x27
  4199a0:	tbz	w8, #0, 41997c <_obstack_memory_used@@Base+0x16ec>
  4199a4:	strb	w26, [x20, x22]
  4199a8:	cbz	w24, 41997c <_obstack_memory_used@@Base+0x16ec>
  4199ac:	add	w8, w22, #0x80
  4199b0:	cmp	w8, #0x180
  4199b4:	b.cc	41996c <_obstack_memory_used@@Base+0x16dc>  // b.lo, b.ul, b.last
  4199b8:	mov	w8, w22
  4199bc:	b	419978 <_obstack_memory_used@@Base+0x16e8>
  4199c0:	ldp	x8, x9, [sp, #24]
  4199c4:	mov	x25, xzr
  4199c8:	ldr	x8, [x8]
  4199cc:	ldr	x8, [x8, x9]
  4199d0:	ldr	x23, [x8, #16]
  4199d4:	b	419a00 <_obstack_memory_used@@Base+0x1770>
  4199d8:	bl	402330 <__ctype_tolower_loc@plt>
  4199dc:	ldr	x8, [x0]
  4199e0:	ldr	w8, [x8, x22, lsl #2]
  4199e4:	strb	w26, [x20, w8, sxtw]
  4199e8:	add	x25, x25, #0x1
  4199ec:	add	x22, x22, #0x1
  4199f0:	add	w19, w27, #0x1
  4199f4:	cmp	x25, #0x40
  4199f8:	add	x28, x21, #0x1
  4199fc:	b.eq	419a2c <_obstack_memory_used@@Base+0x179c>  // b.none
  419a00:	lsr	x8, x23, x25
  419a04:	mov	w27, w19
  419a08:	mov	x21, x28
  419a0c:	tbz	w8, #0, 4199e8 <_obstack_memory_used@@Base+0x1758>
  419a10:	strb	w26, [x20, x22]
  419a14:	cbz	w24, 4199e8 <_obstack_memory_used@@Base+0x1758>
  419a18:	add	w8, w22, #0x80
  419a1c:	cmp	w8, #0x180
  419a20:	b.cc	4199d8 <_obstack_memory_used@@Base+0x1748>  // b.lo, b.ul, b.last
  419a24:	mov	w8, w22
  419a28:	b	4199e4 <_obstack_memory_used@@Base+0x1754>
  419a2c:	ldp	x28, x9, [sp, #24]
  419a30:	ldr	x25, [sp, #16]
  419a34:	mov	x23, xzr
  419a38:	ldr	x8, [x28]
  419a3c:	ldr	x8, [x8, x9]
  419a40:	ldr	x19, [x8, #24]
  419a44:	b	419a70 <_obstack_memory_used@@Base+0x17e0>
  419a48:	bl	402330 <__ctype_tolower_loc@plt>
  419a4c:	ldr	x8, [x0]
  419a50:	ldr	w8, [x8, x22, lsl #2]
  419a54:	strb	w26, [x20, w8, sxtw]
  419a58:	add	x23, x23, #0x1
  419a5c:	add	x22, x22, #0x1
  419a60:	add	w27, w27, #0x1
  419a64:	cmp	x23, #0x40
  419a68:	add	x21, x21, #0x1
  419a6c:	b.eq	419740 <_obstack_memory_used@@Base+0x14b0>  // b.none
  419a70:	lsr	x8, x19, x23
  419a74:	tbz	w8, #0, 419a58 <_obstack_memory_used@@Base+0x17c8>
  419a78:	strb	w26, [x21]
  419a7c:	cbz	w24, 419a58 <_obstack_memory_used@@Base+0x17c8>
  419a80:	cmp	w27, #0x180
  419a84:	b.cc	419a48 <_obstack_memory_used@@Base+0x17b8>  // b.lo, b.ul, b.last
  419a88:	mov	w8, w22
  419a8c:	b	419a54 <_obstack_memory_used@@Base+0x17c4>
  419a90:	ldr	x8, [x21, #40]
  419a94:	cmp	x8, #0x1
  419a98:	b.lt	419740 <_obstack_memory_used@@Base+0x14b0>  // b.tstop
  419a9c:	mov	x19, xzr
  419aa0:	b	419ab4 <_obstack_memory_used@@Base+0x1824>
  419aa4:	ldr	x8, [x21, #40]
  419aa8:	add	x19, x19, #0x1
  419aac:	cmp	x19, x8
  419ab0:	b.ge	419740 <_obstack_memory_used@@Base+0x14b0>  // b.tcont
  419ab4:	stur	xzr, [x29, #-24]
  419ab8:	ldr	x8, [x21]
  419abc:	add	x0, sp, #0x38
  419ac0:	sub	x2, x29, #0x18
  419ac4:	ldr	w1, [x8, x19, lsl #2]
  419ac8:	bl	402870 <wcrtomb@plt>
  419acc:	cmn	x0, #0x1
  419ad0:	b.eq	419af0 <_obstack_memory_used@@Base+0x1860>  // b.none
  419ad4:	ldrb	w22, [sp, #56]
  419ad8:	strb	w26, [x20, x22]
  419adc:	cbz	w24, 419af0 <_obstack_memory_used@@Base+0x1860>
  419ae0:	bl	402330 <__ctype_tolower_loc@plt>
  419ae4:	ldr	x8, [x0]
  419ae8:	ldrsw	x8, [x8, x22, lsl #2]
  419aec:	strb	w26, [x20, x8]
  419af0:	ldrb	w8, [x25, #26]
  419af4:	tbz	w8, #6, 419aa4 <_obstack_memory_used@@Base+0x1814>
  419af8:	ldr	w8, [x28, #180]
  419afc:	cmp	w8, #0x2
  419b00:	b.lt	419aa4 <_obstack_memory_used@@Base+0x1814>  // b.tstop
  419b04:	ldr	x8, [x21]
  419b08:	ldr	w0, [x8, x19, lsl #2]
  419b0c:	bl	402810 <towlower@plt>
  419b10:	mov	w1, w0
  419b14:	add	x0, sp, #0x38
  419b18:	sub	x2, x29, #0x18
  419b1c:	bl	402870 <wcrtomb@plt>
  419b20:	cmn	x0, #0x1
  419b24:	b.eq	419aa4 <_obstack_memory_used@@Base+0x1814>  // b.none
  419b28:	ldrb	w8, [sp, #56]
  419b2c:	strb	w26, [x20, x8]
  419b30:	b	419aa4 <_obstack_memory_used@@Base+0x1814>
  419b34:	movi	v0.16b, #0x1
  419b38:	cmp	w8, #0x2
  419b3c:	stp	q0, q0, [x20, #224]
  419b40:	stp	q0, q0, [x20, #192]
  419b44:	stp	q0, q0, [x20, #160]
  419b48:	stp	q0, q0, [x20, #128]
  419b4c:	stp	q0, q0, [x20, #96]
  419b50:	stp	q0, q0, [x20, #64]
  419b54:	stp	q0, q0, [x20, #32]
  419b58:	stp	q0, q0, [x20]
  419b5c:	b.ne	419b6c <_obstack_memory_used@@Base+0x18dc>  // b.any
  419b60:	ldrb	w8, [x25, #56]
  419b64:	orr	w8, w8, #0x1
  419b68:	strb	w8, [x25, #56]
  419b6c:	ldp	x20, x19, [sp, #416]
  419b70:	ldp	x22, x21, [sp, #400]
  419b74:	ldp	x24, x23, [sp, #384]
  419b78:	ldp	x26, x25, [sp, #368]
  419b7c:	ldp	x28, x27, [sp, #352]
  419b80:	ldp	x29, x30, [sp, #336]
  419b84:	add	sp, sp, #0x1b0
  419b88:	ret
  419b8c:	stp	x29, x30, [sp, #-48]!
  419b90:	stp	x20, x19, [sp, #32]
  419b94:	mov	x19, x0
  419b98:	stp	xzr, xzr, [x0]
  419b9c:	str	xzr, [x0, #16]
  419ba0:	mov	w0, #0x100                 	// #256
  419ba4:	stp	x22, x21, [sp, #16]
  419ba8:	mov	x29, sp
  419bac:	mov	w21, w2
  419bb0:	mov	x20, x1
  419bb4:	bl	4023a0 <malloc@plt>
  419bb8:	str	x0, [x19, #32]
  419bbc:	cbz	x0, 419c70 <_obstack_memory_used@@Base+0x19e0>
  419bc0:	mov	w8, #0xb2fc                	// #45820
  419bc4:	mov	w9, #0x2c6                 	// #710
  419bc8:	tst	w21, #0x1
  419bcc:	movk	w8, #0x3, lsl #16
  419bd0:	movk	w9, #0x101, lsl #16
  419bd4:	lsl	w10, w21, #21
  419bd8:	csel	x8, x9, x8, eq  // eq = none
  419bdc:	and	w9, w10, #0x400000
  419be0:	orr	x22, x8, x9
  419be4:	tbnz	w21, #2, 419bf4 <_obstack_memory_used@@Base+0x1964>
  419be8:	ldrb	w8, [x19, #56]
  419bec:	and	w8, w8, #0x7f
  419bf0:	b	419c0c <_obstack_memory_used@@Base+0x197c>
  419bf4:	ldrb	w8, [x19, #56]
  419bf8:	mov	w9, #0xb2be                	// #45758
  419bfc:	movk	w9, #0x143, lsl #16
  419c00:	and	x9, x22, x9
  419c04:	orr	x22, x9, #0x100
  419c08:	orr	w8, w8, #0xffffff80
  419c0c:	lsl	w9, w21, #1
  419c10:	strb	w8, [x19, #56]
  419c14:	and	w8, w8, #0xffffffef
  419c18:	and	w9, w9, #0x10
  419c1c:	orr	w8, w8, w9
  419c20:	mov	x0, x20
  419c24:	strb	w8, [x19, #56]
  419c28:	str	xzr, [x19, #40]
  419c2c:	bl	402270 <strlen@plt>
  419c30:	mov	x2, x0
  419c34:	mov	x0, x19
  419c38:	mov	x1, x20
  419c3c:	mov	x3, x22
  419c40:	bl	418378 <_obstack_memory_used@@Base+0xe8>
  419c44:	cmp	w0, #0x10
  419c48:	mov	w8, #0x8                   	// #8
  419c4c:	csel	w20, w8, w0, eq  // eq = none
  419c50:	cbnz	w20, 419c78 <_obstack_memory_used@@Base+0x19e8>
  419c54:	mov	x0, x19
  419c58:	bl	41960c <_obstack_memory_used@@Base+0x137c>
  419c5c:	mov	w0, w20
  419c60:	ldp	x20, x19, [sp, #32]
  419c64:	ldp	x22, x21, [sp, #16]
  419c68:	ldp	x29, x30, [sp], #48
  419c6c:	ret
  419c70:	mov	w20, #0xc                   	// #12
  419c74:	b	419c5c <_obstack_memory_used@@Base+0x19cc>
  419c78:	ldr	x0, [x19, #32]
  419c7c:	bl	402620 <free@plt>
  419c80:	str	xzr, [x19, #32]
  419c84:	b	419c5c <_obstack_memory_used@@Base+0x19cc>
  419c88:	stp	x29, x30, [sp, #-48]!
  419c8c:	cmp	w0, #0x11
  419c90:	stp	x22, x21, [sp, #16]
  419c94:	stp	x20, x19, [sp, #32]
  419c98:	mov	x29, sp
  419c9c:	b.cs	419d14 <_obstack_memory_used@@Base+0x1a84>  // b.hs, b.nlast
  419ca0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x12d70>
  419ca4:	add	x8, x8, #0x1d0
  419ca8:	ldr	x8, [x8, w0, uxtw #3]
  419cac:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x12d70>
  419cb0:	add	x9, x9, #0x4f
  419cb4:	mov	x19, x2
  419cb8:	add	x1, x9, x8
  419cbc:	mov	w2, #0x5                   	// #5
  419cc0:	mov	x0, xzr
  419cc4:	mov	x20, x3
  419cc8:	bl	402740 <dcgettext@plt>
  419ccc:	mov	x21, x0
  419cd0:	bl	402270 <strlen@plt>
  419cd4:	add	x22, x0, #0x1
  419cd8:	cbz	x20, 419cf4 <_obstack_memory_used@@Base+0x1a64>
  419cdc:	cmp	x22, x20
  419ce0:	mov	x2, x22
  419ce4:	b.hi	419d08 <_obstack_memory_used@@Base+0x1a78>  // b.pmore
  419ce8:	mov	x0, x19
  419cec:	mov	x1, x21
  419cf0:	bl	402210 <memcpy@plt>
  419cf4:	mov	x0, x22
  419cf8:	ldp	x20, x19, [sp, #32]
  419cfc:	ldp	x22, x21, [sp, #16]
  419d00:	ldp	x29, x30, [sp], #48
  419d04:	ret
  419d08:	sub	x2, x20, #0x1
  419d0c:	strb	wzr, [x19, x2]
  419d10:	b	419ce8 <_obstack_memory_used@@Base+0x1a58>
  419d14:	bl	402560 <abort@plt>
  419d18:	stp	x29, x30, [sp, #-32]!
  419d1c:	str	x19, [sp, #16]
  419d20:	mov	x19, x0
  419d24:	ldr	x0, [x0]
  419d28:	mov	x29, sp
  419d2c:	cbz	x0, 419d34 <_obstack_memory_used@@Base+0x1aa4>
  419d30:	bl	419d5c <_obstack_memory_used@@Base+0x1acc>
  419d34:	ldr	x0, [x19, #32]
  419d38:	stp	xzr, xzr, [x19]
  419d3c:	bl	402620 <free@plt>
  419d40:	ldr	x0, [x19, #40]
  419d44:	str	xzr, [x19, #32]
  419d48:	bl	402620 <free@plt>
  419d4c:	str	xzr, [x19, #40]
  419d50:	ldr	x19, [sp, #16]
  419d54:	ldp	x29, x30, [sp], #32
  419d58:	ret
  419d5c:	stp	x29, x30, [sp, #-64]!
  419d60:	stp	x24, x23, [sp, #16]
  419d64:	stp	x22, x21, [sp, #32]
  419d68:	stp	x20, x19, [sp, #48]
  419d6c:	ldr	x8, [x0]
  419d70:	mov	x19, x0
  419d74:	mov	x29, sp
  419d78:	cbz	x8, 419e00 <_obstack_memory_used@@Base+0x1b70>
  419d7c:	ldr	x9, [x19, #16]
  419d80:	cbz	x9, 419e00 <_obstack_memory_used@@Base+0x1b70>
  419d84:	mov	w23, #0xff                  	// #255
  419d88:	mov	x21, xzr
  419d8c:	mov	w22, #0x1                   	// #1
  419d90:	movk	w23, #0x4, lsl #16
  419d94:	add	x9, x8, x21
  419d98:	ldr	w9, [x9, #8]
  419d9c:	and	w9, w9, w23
  419da0:	cmp	w9, #0x3
  419da4:	b.eq	419dd8 <_obstack_memory_used@@Base+0x1b48>  // b.none
  419da8:	cmp	w9, #0x6
  419dac:	b.ne	419de4 <_obstack_memory_used@@Base+0x1b54>  // b.any
  419db0:	ldr	x20, [x8, x21]
  419db4:	ldr	x0, [x20]
  419db8:	bl	402620 <free@plt>
  419dbc:	ldr	x0, [x20, #8]
  419dc0:	bl	402620 <free@plt>
  419dc4:	ldr	x0, [x20, #16]
  419dc8:	bl	402620 <free@plt>
  419dcc:	ldr	x0, [x20, #24]
  419dd0:	bl	402620 <free@plt>
  419dd4:	b	419ddc <_obstack_memory_used@@Base+0x1b4c>
  419dd8:	ldr	x20, [x8, x21]
  419ddc:	mov	x0, x20
  419de0:	bl	402620 <free@plt>
  419de4:	ldr	x8, [x19, #16]
  419de8:	cmp	x22, x8
  419dec:	b.cs	419e00 <_obstack_memory_used@@Base+0x1b70>  // b.hs, b.nlast
  419df0:	ldr	x8, [x19]
  419df4:	add	x22, x22, #0x1
  419df8:	add	x21, x21, #0x10
  419dfc:	b	419d94 <_obstack_memory_used@@Base+0x1b04>
  419e00:	ldr	x0, [x19, #24]
  419e04:	bl	402620 <free@plt>
  419e08:	ldr	x8, [x19, #16]
  419e0c:	cbz	x8, 419e64 <_obstack_memory_used@@Base+0x1bd4>
  419e10:	mov	x20, xzr
  419e14:	mov	w21, #0x10                  	// #16
  419e18:	b	419e30 <_obstack_memory_used@@Base+0x1ba0>
  419e1c:	ldr	x8, [x19, #16]
  419e20:	add	x20, x20, #0x1
  419e24:	add	x21, x21, #0x18
  419e28:	cmp	x20, x8
  419e2c:	b.cs	419e64 <_obstack_memory_used@@Base+0x1bd4>  // b.hs, b.nlast
  419e30:	ldr	x8, [x19, #48]
  419e34:	cbz	x8, 419e40 <_obstack_memory_used@@Base+0x1bb0>
  419e38:	ldr	x0, [x8, x21]
  419e3c:	bl	402620 <free@plt>
  419e40:	ldr	x8, [x19, #56]
  419e44:	cbz	x8, 419e50 <_obstack_memory_used@@Base+0x1bc0>
  419e48:	ldr	x0, [x8, x21]
  419e4c:	bl	402620 <free@plt>
  419e50:	ldr	x8, [x19, #40]
  419e54:	cbz	x8, 419e1c <_obstack_memory_used@@Base+0x1b8c>
  419e58:	ldr	x0, [x8, x21]
  419e5c:	bl	402620 <free@plt>
  419e60:	b	419e1c <_obstack_memory_used@@Base+0x1b8c>
  419e64:	ldr	x0, [x19, #40]
  419e68:	bl	402620 <free@plt>
  419e6c:	ldr	x0, [x19, #48]
  419e70:	bl	402620 <free@plt>
  419e74:	ldr	x0, [x19, #56]
  419e78:	bl	402620 <free@plt>
  419e7c:	ldr	x0, [x19]
  419e80:	bl	402620 <free@plt>
  419e84:	ldr	x0, [x19, #64]
  419e88:	cbz	x0, 419eec <_obstack_memory_used@@Base+0x1c5c>
  419e8c:	mov	x20, xzr
  419e90:	mov	w21, #0x18                  	// #24
  419e94:	madd	x23, x20, x21, x0
  419e98:	mov	x22, x23
  419e9c:	ldr	x8, [x22], #16
  419ea0:	cmp	x8, #0x1
  419ea4:	b.lt	419ec8 <_obstack_memory_used@@Base+0x1c38>  // b.tstop
  419ea8:	mov	x24, xzr
  419eac:	ldr	x8, [x22]
  419eb0:	ldr	x0, [x8, x24, lsl #3]
  419eb4:	bl	41cca4 <_obstack_memory_used@@Base+0x4a14>
  419eb8:	ldr	x8, [x23]
  419ebc:	add	x24, x24, #0x1
  419ec0:	cmp	x24, x8
  419ec4:	b.lt	419eac <_obstack_memory_used@@Base+0x1c1c>  // b.tstop
  419ec8:	ldr	x0, [x22]
  419ecc:	bl	402620 <free@plt>
  419ed0:	ldr	x8, [x19, #136]
  419ed4:	cmp	x20, x8
  419ed8:	b.cs	419ee8 <_obstack_memory_used@@Base+0x1c58>  // b.hs, b.nlast
  419edc:	ldr	x0, [x19, #64]
  419ee0:	add	x20, x20, #0x1
  419ee4:	b	419e94 <_obstack_memory_used@@Base+0x1c04>
  419ee8:	ldr	x0, [x19, #64]
  419eec:	bl	402620 <free@plt>
  419ef0:	ldr	x0, [x19, #120]
  419ef4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x12d70>
  419ef8:	add	x8, x8, #0x258
  419efc:	cmp	x0, x8
  419f00:	b.eq	419f08 <_obstack_memory_used@@Base+0x1c78>  // b.none
  419f04:	bl	402620 <free@plt>
  419f08:	ldr	x0, [x19, #224]
  419f0c:	bl	402620 <free@plt>
  419f10:	mov	x0, x19
  419f14:	ldp	x20, x19, [sp, #48]
  419f18:	ldp	x22, x21, [sp, #32]
  419f1c:	ldp	x24, x23, [sp, #16]
  419f20:	ldp	x29, x30, [sp], #64
  419f24:	b	402620 <free@plt>
  419f28:	cmp	w4, #0x7
  419f2c:	b.ls	419f38 <_obstack_memory_used@@Base+0x1ca8>  // b.plast
  419f30:	mov	w0, #0x2                   	// #2
  419f34:	ret
  419f38:	sub	sp, sp, #0x50
  419f3c:	str	x23, [sp, #32]
  419f40:	stp	x22, x21, [sp, #48]
  419f44:	stp	x20, x19, [sp, #64]
  419f48:	mov	w22, w4
  419f4c:	mov	x19, x3
  419f50:	mov	x21, x2
  419f54:	mov	x20, x1
  419f58:	mov	x23, x0
  419f5c:	stp	x29, x30, [sp, #16]
  419f60:	add	x29, sp, #0x10
  419f64:	tbnz	w4, #2, 419fa0 <_obstack_memory_used@@Base+0x1d10>
  419f68:	mov	x0, x20
  419f6c:	bl	402270 <strlen@plt>
  419f70:	mov	x2, x0
  419f74:	mov	x3, xzr
  419f78:	ldrb	w8, [x23, #56]
  419f7c:	tbz	w8, #4, 419fac <_obstack_memory_used@@Base+0x1d1c>
  419f80:	str	w22, [sp]
  419f84:	mov	x0, x23
  419f88:	mov	x1, x20
  419f8c:	mov	x4, x2
  419f90:	mov	x5, x2
  419f94:	mov	x6, xzr
  419f98:	mov	x7, xzr
  419f9c:	b	419fc8 <_obstack_memory_used@@Base+0x1d38>
  419fa0:	ldp	x3, x2, [x19]
  419fa4:	ldrb	w8, [x23, #56]
  419fa8:	tbnz	w8, #4, 419f80 <_obstack_memory_used@@Base+0x1cf0>
  419fac:	mov	x0, x23
  419fb0:	mov	x1, x20
  419fb4:	mov	x4, x2
  419fb8:	mov	x5, x2
  419fbc:	mov	x6, x21
  419fc0:	mov	x7, x19
  419fc4:	str	w22, [sp]
  419fc8:	bl	419fec <_obstack_memory_used@@Base+0x1d5c>
  419fcc:	ldp	x20, x19, [sp, #64]
  419fd0:	ldp	x22, x21, [sp, #48]
  419fd4:	ldr	x23, [sp, #32]
  419fd8:	ldp	x29, x30, [sp, #16]
  419fdc:	cmp	w0, #0x0
  419fe0:	cset	w0, ne  // ne = any
  419fe4:	add	sp, sp, #0x50
  419fe8:	ret
  419fec:	stp	x29, x30, [sp, #-96]!
  419ff0:	stp	x28, x27, [sp, #16]
  419ff4:	stp	x26, x25, [sp, #32]
  419ff8:	stp	x24, x23, [sp, #48]
  419ffc:	stp	x22, x21, [sp, #64]
  41a000:	stp	x20, x19, [sp, #80]
  41a004:	mov	x29, sp
  41a008:	sub	sp, sp, #0x2a0
  41a00c:	ldr	x24, [x0]
  41a010:	movi	v0.2d, #0x0
  41a014:	stp	q0, q0, [sp, #528]
  41a018:	stp	q0, q0, [sp, #496]
  41a01c:	stp	q0, q0, [sp, #464]
  41a020:	stp	q0, q0, [sp, #432]
  41a024:	stp	q0, q0, [sp, #400]
  41a028:	stp	q0, q0, [sp, #368]
  41a02c:	stp	q0, q0, [sp, #336]
  41a030:	stp	q0, q0, [sp, #304]
  41a034:	str	x24, [sp, #456]
  41a038:	ldr	x8, [x0, #32]
  41a03c:	mov	x25, x7
  41a040:	mov	x20, x5
  41a044:	mov	x26, x3
  41a048:	str	x2, [sp, #288]
  41a04c:	str	x1, [sp, #272]
  41a050:	cbz	x8, 41a070 <_obstack_memory_used@@Base+0x1de0>
  41a054:	ldrb	w9, [x0, #56]
  41a058:	mov	w10, #0x9                   	// #9
  41a05c:	and	w9, w9, w10
  41a060:	cmp	w9, #0x8
  41a064:	ccmp	x26, x4, #0x4, eq  // eq = none
  41a068:	csel	x21, x8, xzr, ne  // ne = any
  41a06c:	b	41a074 <_obstack_memory_used@@Base+0x1de4>
  41a070:	mov	x21, xzr
  41a074:	ldr	x8, [x0, #48]
  41a078:	ldr	x9, [x0, #16]
  41a07c:	mvn	x10, x8
  41a080:	add	x10, x10, x6
  41a084:	cmp	x8, x6
  41a088:	csel	x28, x10, xzr, cc  // cc = lo, ul, last
  41a08c:	cbz	x9, 41c548 <_obstack_memory_used@@Base+0x42b8>
  41a090:	ldr	x10, [x24, #72]
  41a094:	cbz	x10, 41c548 <_obstack_memory_used@@Base+0x42b8>
  41a098:	ldr	x9, [x24, #80]
  41a09c:	cbz	x9, 41c548 <_obstack_memory_used@@Base+0x42b8>
  41a0a0:	ldr	x8, [x24, #88]
  41a0a4:	cbz	x8, 41c548 <_obstack_memory_used@@Base+0x42b8>
  41a0a8:	ldr	x11, [x24, #96]
  41a0ac:	cbz	x11, 41c548 <_obstack_memory_used@@Base+0x42b8>
  41a0b0:	ldr	x10, [x10, #16]
  41a0b4:	ldr	x22, [x0, #40]
  41a0b8:	cbnz	x10, 41a0c4 <_obstack_memory_used@@Base+0x1e34>
  41a0bc:	ldr	x9, [x9, #16]
  41a0c0:	cbz	x9, 41c528 <_obstack_memory_used@@Base+0x4298>
  41a0c4:	mov	x23, x4
  41a0c8:	sub	x8, x6, x28
  41a0cc:	str	x8, [sp, #232]
  41a0d0:	str	x6, [sp, #152]
  41a0d4:	cbz	x8, 41a0e0 <_obstack_memory_used@@Base+0x1e50>
  41a0d8:	mov	w8, #0x1                   	// #1
  41a0dc:	b	41a0ec <_obstack_memory_used@@Base+0x1e5c>
  41a0e0:	ldr	x8, [x24, #152]
  41a0e4:	cmp	x8, #0x0
  41a0e8:	cset	w8, ne  // ne = any
  41a0ec:	str	w8, [sp, #188]
  41a0f0:	ldr	x8, [x24, #16]
  41a0f4:	ldrsw	x10, [x24, #180]
  41a0f8:	ldr	x9, [x0, #24]
  41a0fc:	ldr	x13, [sp, #288]
  41a100:	add	x12, x8, #0x1
  41a104:	cmp	x12, x10
  41a108:	ldr	x14, [sp, #272]
  41a10c:	add	x11, x13, #0x1
  41a110:	and	x12, x9, #0x400000
  41a114:	ubfx	x9, x9, #22, #1
  41a118:	csinc	x8, x10, x8, lt  // lt = tstop
  41a11c:	strb	w9, [sp, #440]
  41a120:	orr	x9, x22, x12
  41a124:	cmp	x11, x8
  41a128:	csinc	x27, x8, x13, ge  // ge = tcont
  41a12c:	cmp	x9, #0x0
  41a130:	cset	w19, ne  // ne = any
  41a134:	str	x14, [sp, #304]
  41a138:	stp	x13, x13, [sp, #384]
  41a13c:	str	x22, [sp, #424]
  41a140:	str	w10, [sp, #448]
  41a144:	strb	w19, [sp, #443]
  41a148:	ldrb	w8, [x24, #176]
  41a14c:	cmp	w10, #0x2
  41a150:	str	x0, [sp, #264]
  41a154:	stp	x13, x13, [sp, #400]
  41a158:	ubfx	w9, w8, #2, #1
  41a15c:	ubfx	w8, w8, #3, #1
  41a160:	strb	w9, [sp, #441]
  41a164:	strb	w8, [sp, #442]
  41a168:	b.lt	41a188 <_obstack_memory_used@@Base+0x1ef8>  // b.tstop
  41a16c:	lsr	x8, x27, #61
  41a170:	cbnz	x8, 41c59c <_obstack_memory_used@@Base+0x430c>
  41a174:	lsl	x0, x27, #2
  41a178:	bl	4023a0 <malloc@plt>
  41a17c:	cbz	x0, 41c59c <_obstack_memory_used@@Base+0x430c>
  41a180:	ldr	x14, [sp, #272]
  41a184:	str	x0, [sp, #320]
  41a188:	cbz	w19, 41a1a8 <_obstack_memory_used@@Base+0x1f18>
  41a18c:	mov	x0, x27
  41a190:	bl	4023a0 <malloc@plt>
  41a194:	cbz	x0, 41c59c <_obstack_memory_used@@Base+0x430c>
  41a198:	ldr	x14, [sp, #272]
  41a19c:	mov	w8, wzr
  41a1a0:	str	x0, [sp, #312]
  41a1a4:	b	41a1ac <_obstack_memory_used@@Base+0x1f1c>
  41a1a8:	mov	w8, #0x1                   	// #1
  41a1ac:	add	x9, x24, #0xb8
  41a1b0:	stp	x28, x25, [sp, #160]
  41a1b4:	str	x27, [sp, #368]
  41a1b8:	str	x9, [sp, #432]
  41a1bc:	ldrb	w9, [x24, #176]
  41a1c0:	ldr	w10, [x29, #96]
  41a1c4:	ubfx	w9, w9, #4, #1
  41a1c8:	str	w10, [sp, #284]
  41a1cc:	strb	w9, [sp, #446]
  41a1d0:	cbz	w8, 41a1ec <_obstack_memory_used@@Base+0x1f5c>
  41a1d4:	str	x14, [sp, #312]
  41a1d8:	ldr	w8, [x24, #180]
  41a1dc:	ldr	x25, [sp, #288]
  41a1e0:	cmp	w8, #0x1
  41a1e4:	csel	x8, xzr, x25, gt
  41a1e8:	b	41a1f4 <_obstack_memory_used@@Base+0x1f64>
  41a1ec:	ldr	x25, [sp, #288]
  41a1f0:	mov	x8, xzr
  41a1f4:	stp	x8, x8, [sp, #352]
  41a1f8:	ldr	x8, [sp, #264]
  41a1fc:	stp	x20, x20, [sp, #400]
  41a200:	ldr	w9, [sp, #284]
  41a204:	ldrb	w8, [x8, #56]
  41a208:	lsr	w8, w8, #7
  41a20c:	strb	w8, [sp, #445]
  41a210:	ldr	x20, [x24, #152]
  41a214:	mov	x8, #0xffffffffffffffff    	// #-1
  41a218:	str	w9, [sp, #464]
  41a21c:	str	x8, [sp, #472]
  41a220:	lsl	x19, x20, #1
  41a224:	cmp	x20, #0x1
  41a228:	b.lt	41a26c <_obstack_memory_used@@Base+0x1fdc>  // b.tstop
  41a22c:	mov	x8, #0x6666666666666666    	// #7378697629483820646
  41a230:	movk	x8, #0x666, lsl #48
  41a234:	cmp	x19, x8
  41a238:	b.hi	41c59c <_obstack_memory_used@@Base+0x430c>  // b.pmore
  41a23c:	add	x8, x20, x20, lsl #2
  41a240:	lsl	x0, x8, #4
  41a244:	bl	4023a0 <malloc@plt>
  41a248:	mov	x25, x0
  41a24c:	str	x0, [sp, #520]
  41a250:	lsl	x0, x20, #4
  41a254:	bl	4023a0 <malloc@plt>
  41a258:	mov	w20, #0xc                   	// #12
  41a25c:	str	x0, [sp, #552]
  41a260:	cbz	x25, 41c68c <_obstack_memory_used@@Base+0x43fc>
  41a264:	ldr	x25, [sp, #288]
  41a268:	cbz	x0, 41c68c <_obstack_memory_used@@Base+0x43fc>
  41a26c:	ldr	x9, [sp, #232]
  41a270:	mov	w8, #0x1                   	// #1
  41a274:	str	x19, [sp, #512]
  41a278:	str	w8, [sp, #528]
  41a27c:	cmp	x9, #0x1
  41a280:	str	x19, [sp, #544]
  41a284:	b.hi	41a290 <_obstack_memory_used@@Base+0x2000>  // b.pmore
  41a288:	ldrb	w8, [x24, #176]
  41a28c:	tbz	w8, #1, 41a2b0 <_obstack_memory_used@@Base+0x2020>
  41a290:	mov	x8, #0x1ffffffffffffffe    	// #2305843009213693950
  41a294:	cmp	x27, x8
  41a298:	b.hi	41c59c <_obstack_memory_used@@Base+0x430c>  // b.pmore
  41a29c:	lsl	x8, x27, #3
  41a2a0:	add	x0, x8, #0x8
  41a2a4:	bl	4023a0 <malloc@plt>
  41a2a8:	str	x0, [sp, #488]
  41a2ac:	cbz	x0, 41c59c <_obstack_memory_used@@Base+0x430c>
  41a2b0:	ldr	w9, [sp, #284]
  41a2b4:	mov	w10, #0x6                   	// #6
  41a2b8:	stur	x26, [x29, #-112]
  41a2bc:	add	x8, sp, #0x130
  41a2c0:	tst	w9, #0x1
  41a2c4:	mov	w9, #0x4                   	// #4
  41a2c8:	csel	w9, w10, w9, eq  // eq = none
  41a2cc:	str	w9, [sp, #416]
  41a2d0:	ldr	w10, [x24, #180]
  41a2d4:	cmp	x23, x26
  41a2d8:	csel	x27, x23, x26, lt  // lt = tstop
  41a2dc:	csel	x19, x26, x23, lt  // lt = tstop
  41a2e0:	str	w10, [sp, #228]
  41a2e4:	cbz	x21, 41a2f8 <_obstack_memory_used@@Base+0x2068>
  41a2e8:	cmp	w10, #0x1
  41a2ec:	b.ne	41a300 <_obstack_memory_used@@Base+0x2070>  // b.any
  41a2f0:	mov	w9, #0x4                   	// #4
  41a2f4:	b	41a31c <_obstack_memory_used@@Base+0x208c>
  41a2f8:	mov	w9, #0x8                   	// #8
  41a2fc:	b	41a334 <_obstack_memory_used@@Base+0x20a4>
  41a300:	ldr	x9, [sp, #264]
  41a304:	ldr	x9, [x9, #24]
  41a308:	and	x9, x9, #0x400000
  41a30c:	orr	x9, x22, x9
  41a310:	cmp	x9, #0x0
  41a314:	cset	w9, eq  // eq = none
  41a318:	lsl	w9, w9, #2
  41a31c:	cmp	x23, x26
  41a320:	cset	w10, ge  // ge = tcont
  41a324:	cmp	x22, #0x0
  41a328:	cset	w11, ne  // ne = any
  41a32c:	bfi	w11, w10, #1, #1
  41a330:	orr	w9, w11, w9
  41a334:	add	x8, x8, #0x38
  41a338:	str	x8, [sp, #144]
  41a33c:	add	x8, sp, #0x130
  41a340:	cmp	x23, x26
  41a344:	sub	x10, x29, #0x70
  41a348:	add	x8, x8, #0xc0
  41a34c:	mov	x11, #0xffffffffffffffff    	// #-1
  41a350:	str	x8, [sp, #208]
  41a354:	csel	x8, xzr, x10, lt  // lt = tstop
  41a358:	sub	x12, x29, #0x60
  41a35c:	sub	w23, w9, #0x4
  41a360:	cneg	x9, x11, ge  // ge = tcont
  41a364:	cmp	x8, #0x0
  41a368:	str	x9, [sp, #296]
  41a36c:	add	x9, x12, #0x20
  41a370:	str	x8, [sp, #192]
  41a374:	cset	w8, ne  // ne = any
  41a378:	str	x9, [sp, #176]
  41a37c:	str	w8, [sp, #204]
  41a380:	stp	x27, x23, [sp, #240]
  41a384:	cmp	w23, #0x4
  41a388:	b.hi	41a4fc <_obstack_memory_used@@Base+0x226c>  // b.pmore
  41a38c:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x11d70>
  41a390:	add	x10, x10, #0xf13
  41a394:	adr	x8, 41a3a4 <_obstack_memory_used@@Base+0x2114>
  41a398:	ldrb	w9, [x10, x23]
  41a39c:	add	x8, x8, x9, lsl #2
  41a3a0:	br	x8
  41a3a4:	cmp	x26, x27
  41a3a8:	b.lt	41c4b4 <_obstack_memory_used@@Base+0x4224>  // b.tstop
  41a3ac:	ldr	x9, [sp, #272]
  41a3b0:	cmp	x26, x25
  41a3b4:	b.ge	41a3c4 <_obstack_memory_used@@Base+0x2134>  // b.tcont
  41a3b8:	ldrb	w8, [x9, x26]
  41a3bc:	cbnz	x22, 41a3cc <_obstack_memory_used@@Base+0x213c>
  41a3c0:	b	41a3d0 <_obstack_memory_used@@Base+0x2140>
  41a3c4:	mov	w8, wzr
  41a3c8:	cbz	x22, 41a3d0 <_obstack_memory_used@@Base+0x2140>
  41a3cc:	ldrb	w8, [x22, w8, uxtw]
  41a3d0:	ldrb	w8, [x21, w8, uxtw]
  41a3d4:	cbnz	w8, 41a44c <_obstack_memory_used@@Base+0x21bc>
  41a3d8:	cmp	x26, x27
  41a3dc:	sub	x26, x26, #0x1
  41a3e0:	stur	x26, [x29, #-112]
  41a3e4:	b.gt	41a3b0 <_obstack_memory_used@@Base+0x2120>
  41a3e8:	b	41c4b4 <_obstack_memory_used@@Base+0x4224>
  41a3ec:	cmp	x26, x19
  41a3f0:	b.ge	41a444 <_obstack_memory_used@@Base+0x21b4>  // b.tcont
  41a3f4:	ldr	x9, [sp, #272]
  41a3f8:	ldrb	w8, [x9, x26]
  41a3fc:	ldrb	w8, [x22, x8]
  41a400:	ldrb	w8, [x21, x8]
  41a404:	cbnz	w8, 41a444 <_obstack_memory_used@@Base+0x21b4>
  41a408:	add	x26, x26, #0x1
  41a40c:	cmp	x26, x19
  41a410:	stur	x26, [x29, #-112]
  41a414:	b.lt	41a3f8 <_obstack_memory_used@@Base+0x2168>  // b.tstop
  41a418:	b	41a444 <_obstack_memory_used@@Base+0x21b4>
  41a41c:	ldr	x9, [sp, #272]
  41a420:	cmp	x26, x19
  41a424:	b.ge	41a444 <_obstack_memory_used@@Base+0x21b4>  // b.tcont
  41a428:	ldrb	w8, [x9, x26]
  41a42c:	ldrb	w8, [x21, x8]
  41a430:	cbnz	w8, 41a444 <_obstack_memory_used@@Base+0x21b4>
  41a434:	add	x26, x26, #0x1
  41a438:	cmp	x26, x19
  41a43c:	stur	x26, [x29, #-112]
  41a440:	b.lt	41a428 <_obstack_memory_used@@Base+0x2198>  // b.tstop
  41a444:	cmp	x26, x19
  41a448:	b.eq	41a61c <_obstack_memory_used@@Base+0x238c>  // b.none
  41a44c:	ldr	w2, [sp, #284]
  41a450:	add	x0, sp, #0x130
  41a454:	mov	x1, x26
  41a458:	bl	42250c <_obstack_memory_used@@Base+0xa27c>
  41a45c:	cbnz	w0, 41c6f8 <_obstack_memory_used@@Base+0x4468>
  41a460:	ldr	w8, [sp, #228]
  41a464:	cmp	w8, #0x1
  41a468:	b.eq	41a484 <_obstack_memory_used@@Base+0x21f4>  // b.none
  41a46c:	ldr	x8, [sp, #352]
  41a470:	cbz	x8, 41a484 <_obstack_memory_used@@Base+0x21f4>
  41a474:	ldr	x8, [sp, #320]
  41a478:	ldr	w8, [x8]
  41a47c:	cmn	w8, #0x1
  41a480:	b.eq	41bef8 <_obstack_memory_used@@Base+0x3c68>  // b.none
  41a484:	ldr	x8, [sp, #208]
  41a488:	str	wzr, [sp, #528]
  41a48c:	stur	wzr, [x29, #-100]
  41a490:	stp	xzr, xzr, [x8]
  41a494:	ldr	x20, [sp, #456]
  41a498:	ldr	x15, [sp, #376]
  41a49c:	ldr	x26, [x20, #72]
  41a4a0:	ldrsb	w8, [x26, #104]
  41a4a4:	tbnz	w8, #31, 41a4b0 <_obstack_memory_used@@Base+0x2220>
  41a4a8:	ldr	w28, [sp, #204]
  41a4ac:	b	41a68c <_obstack_memory_used@@Base+0x23fc>
  41a4b0:	cmp	x15, #0x0
  41a4b4:	b.le	41a630 <_obstack_memory_used@@Base+0x23a0>
  41a4b8:	ldr	x9, [sp, #392]
  41a4bc:	ldr	w28, [sp, #204]
  41a4c0:	sub	x8, x15, #0x1
  41a4c4:	cmp	x9, x8
  41a4c8:	b.eq	41a63c <_obstack_memory_used@@Base+0x23ac>  // b.none
  41a4cc:	ldr	w9, [sp, #448]
  41a4d0:	cmp	w9, #0x2
  41a4d4:	b.lt	41a584 <_obstack_memory_used@@Base+0x22f4>  // b.tstop
  41a4d8:	ldr	x9, [sp, #320]
  41a4dc:	ldr	w25, [x9, x8, lsl #2]
  41a4e0:	cmn	w25, #0x1
  41a4e4:	b.ne	41a5b0 <_obstack_memory_used@@Base+0x2320>  // b.any
  41a4e8:	sub	x8, x8, #0x1
  41a4ec:	cmn	x8, #0x1
  41a4f0:	b.ne	41a4dc <_obstack_memory_used@@Base+0x224c>  // b.any
  41a4f4:	ldr	w3, [sp, #416]
  41a4f8:	b	41a5d0 <_obstack_memory_used@@Base+0x2340>
  41a4fc:	ldr	x8, [sp, #344]
  41a500:	ldr	x10, [sp, #360]
  41a504:	sub	x9, x26, x8
  41a508:	cmp	x9, x10
  41a50c:	b.cs	41a52c <_obstack_memory_used@@Base+0x229c>  // b.hs, b.nlast
  41a510:	cmp	x26, x25
  41a514:	b.ge	41a554 <_obstack_memory_used@@Base+0x22c4>  // b.tcont
  41a518:	ldr	x10, [sp, #312]
  41a51c:	ldrb	w9, [x10, x9]
  41a520:	ldrb	w9, [x21, x9]
  41a524:	cbz	w9, 41a560 <_obstack_memory_used@@Base+0x22d0>
  41a528:	b	41a44c <_obstack_memory_used@@Base+0x21bc>
  41a52c:	ldr	w2, [sp, #284]
  41a530:	add	x0, sp, #0x130
  41a534:	mov	x1, x26
  41a538:	bl	42250c <_obstack_memory_used@@Base+0xa27c>
  41a53c:	cbnz	w0, 41c6f8 <_obstack_memory_used@@Base+0x4468>
  41a540:	ldur	x26, [x29, #-112]
  41a544:	ldr	x8, [sp, #344]
  41a548:	sub	x9, x26, x8
  41a54c:	cmp	x26, x25
  41a550:	b.lt	41a518 <_obstack_memory_used@@Base+0x2288>  // b.tstop
  41a554:	mov	x9, xzr
  41a558:	ldrb	w9, [x21, x9]
  41a55c:	cbnz	w9, 41a44c <_obstack_memory_used@@Base+0x21bc>
  41a560:	ldr	x9, [sp, #296]
  41a564:	mov	w20, #0x1                   	// #1
  41a568:	add	x26, x26, x9
  41a56c:	cmp	x26, x27
  41a570:	stur	x26, [x29, #-112]
  41a574:	b.lt	41c68c <_obstack_memory_used@@Base+0x43fc>  // b.tstop
  41a578:	cmp	x26, x19
  41a57c:	b.le	41a500 <_obstack_memory_used@@Base+0x2270>
  41a580:	b	41c68c <_obstack_memory_used@@Base+0x43fc>
  41a584:	ldr	x9, [sp, #312]
  41a588:	ldr	x10, [sp, #432]
  41a58c:	ldrb	w8, [x9, x8]
  41a590:	lsr	x9, x8, #3
  41a594:	and	x9, x9, #0x18
  41a598:	ldr	x9, [x10, x9]
  41a59c:	lsr	x9, x9, x8
  41a5a0:	tbnz	w9, #0, 41a688 <_obstack_memory_used@@Base+0x23f8>
  41a5a4:	cmp	w8, #0xa
  41a5a8:	b.eq	41a5c0 <_obstack_memory_used@@Base+0x2330>  // b.none
  41a5ac:	b	41a68c <_obstack_memory_used@@Base+0x23fc>
  41a5b0:	ldrb	w8, [sp, #446]
  41a5b4:	cbnz	w8, 41a66c <_obstack_memory_used@@Base+0x23dc>
  41a5b8:	cmp	w25, #0xa
  41a5bc:	b.ne	41a68c <_obstack_memory_used@@Base+0x23fc>  // b.any
  41a5c0:	ldrb	w8, [sp, #445]
  41a5c4:	cmp	w8, #0x0
  41a5c8:	cset	w8, ne  // ne = any
  41a5cc:	lsl	w3, w8, #1
  41a5d0:	tbnz	w3, #0, 41a688 <_obstack_memory_used@@Base+0x23f8>
  41a5d4:	cbz	w3, 41a68c <_obstack_memory_used@@Base+0x23fc>
  41a5d8:	tbz	w3, #1, 41a5e8 <_obstack_memory_used@@Base+0x2358>
  41a5dc:	tbz	w3, #2, 41a5e8 <_obstack_memory_used@@Base+0x2358>
  41a5e0:	ldr	x26, [x20, #96]
  41a5e4:	b	41a68c <_obstack_memory_used@@Base+0x23fc>
  41a5e8:	tbnz	w3, #1, 41a614 <_obstack_memory_used@@Base+0x2384>
  41a5ec:	ldr	x26, [x20, #72]
  41a5f0:	tbz	w3, #2, 41a68c <_obstack_memory_used@@Base+0x23fc>
  41a5f4:	ldr	x2, [x26, #80]
  41a5f8:	sub	x0, x29, #0x64
  41a5fc:	mov	x1, x20
  41a600:	mov	x25, x15
  41a604:	bl	421fa4 <_obstack_memory_used@@Base+0x9d14>
  41a608:	mov	x15, x25
  41a60c:	mov	x26, x0
  41a610:	b	41a68c <_obstack_memory_used@@Base+0x23fc>
  41a614:	ldr	x26, [x20, #88]
  41a618:	b	41a68c <_obstack_memory_used@@Base+0x23fc>
  41a61c:	cmp	x19, x25
  41a620:	b.ge	41a650 <_obstack_memory_used@@Base+0x23c0>  // b.tcont
  41a624:	ldr	x8, [sp, #272]
  41a628:	ldrb	w8, [x8, x19]
  41a62c:	b	41a654 <_obstack_memory_used@@Base+0x23c4>
  41a630:	ldr	w3, [sp, #416]
  41a634:	ldr	w28, [sp, #204]
  41a638:	b	41a5d0 <_obstack_memory_used@@Base+0x2340>
  41a63c:	ldr	w8, [sp, #464]
  41a640:	mov	w9, #0xa                   	// #10
  41a644:	and	w8, w8, #0x2
  41a648:	eor	w3, w8, w9
  41a64c:	b	41a5d0 <_obstack_memory_used@@Base+0x2340>
  41a650:	mov	w8, wzr
  41a654:	cbz	x22, 41a65c <_obstack_memory_used@@Base+0x23cc>
  41a658:	ldrb	w8, [x22, w8, uxtw]
  41a65c:	ldrb	w8, [x21, w8, uxtw]
  41a660:	mov	x26, x19
  41a664:	cbnz	w8, 41a44c <_obstack_memory_used@@Base+0x21bc>
  41a668:	b	41c4b4 <_obstack_memory_used@@Base+0x4224>
  41a66c:	mov	w0, w25
  41a670:	str	x15, [sp, #112]
  41a674:	bl	402710 <iswalnum@plt>
  41a678:	ldr	x15, [sp, #112]
  41a67c:	cmp	w25, #0x5f
  41a680:	b.eq	41a688 <_obstack_memory_used@@Base+0x23f8>  // b.none
  41a684:	cbz	w0, 41a5b8 <_obstack_memory_used@@Base+0x2328>
  41a688:	ldr	x26, [x20, #80]
  41a68c:	cbz	x26, 41c59c <_obstack_memory_used@@Base+0x430c>
  41a690:	ldr	x8, [sp, #488]
  41a694:	mov	w25, w28
  41a698:	cbz	x8, 41a6ac <_obstack_memory_used@@Base+0x241c>
  41a69c:	str	x26, [x8, x15, lsl #3]
  41a6a0:	ldr	x8, [x20, #152]
  41a6a4:	mov	w25, w28
  41a6a8:	cbnz	x8, 41bf60 <_obstack_memory_used@@Base+0x3cd0>
  41a6ac:	ldrsb	w8, [x26, #104]
  41a6b0:	tbnz	w8, #4, 41bf44 <_obstack_memory_used@@Base+0x3cb4>
  41a6b4:	str	xzr, [sp, #216]
  41a6b8:	mov	x28, #0xffffffffffffffff    	// #-1
  41a6bc:	ldr	x9, [sp, #408]
  41a6c0:	ldr	x8, [sp, #376]
  41a6c4:	cmp	x9, x8
  41a6c8:	b.le	41bbf8 <_obstack_memory_used@@Base+0x3968>
  41a6cc:	ldr	x9, [sp, #192]
  41a6d0:	str	x9, [sp, #256]
  41a6d4:	b	41a6f0 <_obstack_memory_used@@Base+0x2460>
  41a6d8:	ldr	x9, [sp, #408]
  41a6dc:	ldr	x8, [sp, #376]
  41a6e0:	and	w25, w25, w23
  41a6e4:	ldr	x23, [sp, #248]
  41a6e8:	cmp	x9, x8
  41a6ec:	b.le	41bc10 <_obstack_memory_used@@Base+0x3980>
  41a6f0:	ldr	x10, [sp, #368]
  41a6f4:	ldr	x9, [sp, #392]
  41a6f8:	add	x11, x8, #0x1
  41a6fc:	mov	x12, x26
  41a700:	cmp	x11, x10
  41a704:	b.lt	41a710 <_obstack_memory_used@@Base+0x2480>  // b.tstop
  41a708:	cmp	x10, x9
  41a70c:	b.lt	41b960 <_obstack_memory_used@@Base+0x36d0>  // b.tstop
  41a710:	ldr	x10, [sp, #352]
  41a714:	cmp	x11, x10
  41a718:	b.lt	41a724 <_obstack_memory_used@@Base+0x2494>  // b.tstop
  41a71c:	cmp	x10, x9
  41a720:	b.lt	41b960 <_obstack_memory_used@@Base+0x36d0>  // b.tstop
  41a724:	ldrb	w8, [x12, #104]
  41a728:	tbnz	w8, #5, 41a974 <_obstack_memory_used@@Base+0x26e4>
  41a72c:	ldr	x8, [sp, #376]
  41a730:	ldr	x9, [sp, #312]
  41a734:	mov	x27, x12
  41a738:	add	x10, x8, #0x1
  41a73c:	str	x10, [sp, #376]
  41a740:	ldrb	w26, [x9, x8]
  41a744:	ldr	x0, [x27, #88]!
  41a748:	cbz	x0, 41ad30 <_obstack_memory_used@@Base+0x2aa0>
  41a74c:	ldr	x26, [x0, x26, lsl #3]
  41a750:	ldr	x27, [sp, #240]
  41a754:	ldr	x8, [sp, #488]
  41a758:	cbz	x8, 41a788 <_obstack_memory_used@@Base+0x24f8>
  41a75c:	sub	x0, x29, #0x64
  41a760:	add	x1, sp, #0x130
  41a764:	mov	x2, x26
  41a768:	mov	x23, x11
  41a76c:	mov	x20, x15
  41a770:	mov	x26, x12
  41a774:	bl	4244b4 <_obstack_memory_used@@Base+0xc224>
  41a778:	mov	x12, x26
  41a77c:	mov	x11, x23
  41a780:	mov	x15, x20
  41a784:	mov	x26, x0
  41a788:	cbz	x26, 41a7c4 <_obstack_memory_used@@Base+0x2534>
  41a78c:	ldrsb	w8, [x26, #104]
  41a790:	cmp	x12, x26
  41a794:	cset	w23, eq  // eq = none
  41a798:	tst	w25, w23
  41a79c:	csel	x15, x11, x15, ne  // ne = any
  41a7a0:	tbz	w8, #4, 41a6d8 <_obstack_memory_used@@Base+0x2448>
  41a7a4:	tbnz	w8, #31, 41a850 <_obstack_memory_used@@Base+0x25c0>
  41a7a8:	ldr	x28, [sp, #376]
  41a7ac:	ldr	w8, [sp, #188]
  41a7b0:	cbz	w8, 41bf20 <_obstack_memory_used@@Base+0x3c90>
  41a7b4:	mov	w8, #0x1                   	// #1
  41a7b8:	str	xzr, [sp, #256]
  41a7bc:	str	x8, [sp, #216]
  41a7c0:	b	41a6d8 <_obstack_memory_used@@Base+0x2448>
  41a7c4:	ldur	w8, [x29, #-100]
  41a7c8:	cbnz	w8, 41c59c <_obstack_memory_used@@Base+0x430c>
  41a7cc:	ldr	x8, [sp, #216]
  41a7d0:	ldr	w9, [sp, #188]
  41a7d4:	cmp	x8, #0x0
  41a7d8:	cset	w8, ne  // ne = any
  41a7dc:	bic	w8, w8, w9
  41a7e0:	tbnz	w8, #0, 41bf2c <_obstack_memory_used@@Base+0x3c9c>
  41a7e4:	ldr	x10, [sp, #488]
  41a7e8:	ldr	x23, [sp, #248]
  41a7ec:	cbz	x10, 41bc10 <_obstack_memory_used@@Base+0x3980>
  41a7f0:	str	w25, [sp, #120]
  41a7f4:	mov	x25, x11
  41a7f8:	mov	x20, x15
  41a7fc:	str	x12, [sp, #128]
  41a800:	ldr	x8, [sp, #496]
  41a804:	ldr	x9, [sp, #376]
  41a808:	add	x10, x10, #0x8
  41a80c:	cmp	x9, x8
  41a810:	b.ge	41bc0c <_obstack_memory_used@@Base+0x397c>  // b.tcont
  41a814:	add	x11, x9, #0x1
  41a818:	str	x11, [sp, #376]
  41a81c:	ldr	x12, [x10, x9, lsl #3]
  41a820:	mov	x9, x11
  41a824:	cbz	x12, 41a80c <_obstack_memory_used@@Base+0x257c>
  41a828:	sub	x0, x29, #0x64
  41a82c:	add	x1, sp, #0x130
  41a830:	mov	x2, xzr
  41a834:	bl	4244b4 <_obstack_memory_used@@Base+0xc224>
  41a838:	mov	x26, x0
  41a83c:	cbnz	x0, 41a95c <_obstack_memory_used@@Base+0x26cc>
  41a840:	ldur	w8, [x29, #-100]
  41a844:	cbnz	w8, 41a95c <_obstack_memory_used@@Base+0x26cc>
  41a848:	ldr	x10, [sp, #488]
  41a84c:	b	41a800 <_obstack_memory_used@@Base+0x2570>
  41a850:	ldr	x8, [sp, #376]
  41a854:	tbnz	x8, #63, 41a88c <_obstack_memory_used@@Base+0x25fc>
  41a858:	ldr	x9, [sp, #392]
  41a85c:	cmp	x9, x8
  41a860:	b.eq	41ba54 <_obstack_memory_used@@Base+0x37c4>  // b.none
  41a864:	ldr	w9, [sp, #448]
  41a868:	cmp	w9, #0x2
  41a86c:	b.lt	41a894 <_obstack_memory_used@@Base+0x2604>  // b.tstop
  41a870:	ldr	x9, [sp, #320]
  41a874:	ldr	w20, [x9, x8, lsl #2]
  41a878:	cmn	w20, #0x1
  41a87c:	b.ne	41a8bc <_obstack_memory_used@@Base+0x262c>  // b.any
  41a880:	sub	x8, x8, #0x1
  41a884:	cmn	x8, #0x1
  41a888:	b.ne	41a874 <_obstack_memory_used@@Base+0x25e4>  // b.any
  41a88c:	ldr	w8, [sp, #416]
  41a890:	b	41a8ec <_obstack_memory_used@@Base+0x265c>
  41a894:	ldr	x9, [sp, #312]
  41a898:	ldr	x10, [sp, #432]
  41a89c:	ldrb	w8, [x9, x8]
  41a8a0:	lsr	x9, x8, #3
  41a8a4:	and	x9, x9, #0x18
  41a8a8:	ldr	x9, [x10, x9]
  41a8ac:	lsr	x9, x9, x8
  41a8b0:	tbz	w9, #0, 41a8e0 <_obstack_memory_used@@Base+0x2650>
  41a8b4:	mov	w8, #0x1                   	// #1
  41a8b8:	b	41a8ec <_obstack_memory_used@@Base+0x265c>
  41a8bc:	ldrb	w8, [sp, #446]
  41a8c0:	cbnz	w8, 41ba88 <_obstack_memory_used@@Base+0x37f8>
  41a8c4:	cmp	w20, #0xa
  41a8c8:	b.ne	41a8e8 <_obstack_memory_used@@Base+0x2658>  // b.any
  41a8cc:	ldrb	w8, [sp, #445]
  41a8d0:	cmp	w8, #0x0
  41a8d4:	cset	w8, ne  // ne = any
  41a8d8:	lsl	w8, w8, #1
  41a8dc:	b	41a8ec <_obstack_memory_used@@Base+0x265c>
  41a8e0:	cmp	w8, #0xa
  41a8e4:	b.eq	41a8cc <_obstack_memory_used@@Base+0x263c>  // b.none
  41a8e8:	mov	w8, wzr
  41a8ec:	ldr	x9, [x26, #16]
  41a8f0:	cmp	x9, #0x1
  41a8f4:	b.lt	41a6d8 <_obstack_memory_used@@Base+0x2448>  // b.tstop
  41a8f8:	ldr	x11, [sp, #456]
  41a8fc:	ldr	x10, [x26, #24]
  41a900:	ldr	x11, [x11]
  41a904:	b	41a914 <_obstack_memory_used@@Base+0x2684>
  41a908:	subs	x9, x9, #0x1
  41a90c:	add	x10, x10, #0x8
  41a910:	b.eq	41a6d8 <_obstack_memory_used@@Base+0x2448>  // b.none
  41a914:	ldr	x12, [x10]
  41a918:	add	x13, x11, x12, lsl #4
  41a91c:	ldr	w13, [x13, #8]
  41a920:	and	w14, w13, #0xff
  41a924:	cmp	w14, #0x2
  41a928:	b.ne	41a908 <_obstack_memory_used@@Base+0x2678>  // b.any
  41a92c:	tst	w13, #0x3ff00
  41a930:	b.eq	41a954 <_obstack_memory_used@@Base+0x26c4>  // b.none
  41a934:	tbnz	w8, #0, 41a93c <_obstack_memory_used@@Base+0x26ac>
  41a938:	tbnz	w13, #10, 41a908 <_obstack_memory_used@@Base+0x2678>
  41a93c:	tbz	w8, #0, 41a944 <_obstack_memory_used@@Base+0x26b4>
  41a940:	tbnz	w13, #11, 41a908 <_obstack_memory_used@@Base+0x2678>
  41a944:	tbnz	w8, #1, 41a94c <_obstack_memory_used@@Base+0x26bc>
  41a948:	tbnz	w13, #13, 41a908 <_obstack_memory_used@@Base+0x2678>
  41a94c:	tbnz	w8, #3, 41a954 <_obstack_memory_used@@Base+0x26c4>
  41a950:	tbnz	w13, #15, 41a908 <_obstack_memory_used@@Base+0x2678>
  41a954:	cbnz	x12, 41a7a8 <_obstack_memory_used@@Base+0x2518>
  41a958:	b	41a6d8 <_obstack_memory_used@@Base+0x2448>
  41a95c:	mov	x11, x25
  41a960:	ldr	w25, [sp, #120]
  41a964:	ldr	x12, [sp, #128]
  41a968:	mov	x15, x20
  41a96c:	cbnz	x26, 41a78c <_obstack_memory_used@@Base+0x24fc>
  41a970:	b	41bf2c <_obstack_memory_used@@Base+0x3c9c>
  41a974:	ldr	x8, [x12, #16]
  41a978:	str	x24, [sp, #136]
  41a97c:	cmp	x8, #0x1
  41a980:	b.lt	41b9e0 <_obstack_memory_used@@Base+0x3750>  // b.tstop
  41a984:	ldr	x13, [sp, #456]
  41a988:	mov	x23, xzr
  41a98c:	str	x11, [sp, #104]
  41a990:	stp	x15, x13, [sp, #112]
  41a994:	b	41a9a8 <_obstack_memory_used@@Base+0x2718>
  41a998:	ldr	x8, [x12, #16]
  41a99c:	add	x23, x23, #0x1
  41a9a0:	cmp	x23, x8
  41a9a4:	b.ge	41b9e0 <_obstack_memory_used@@Base+0x3750>  // b.tcont
  41a9a8:	ldr	x8, [x12, #24]
  41a9ac:	ldr	x27, [x8, x23, lsl #3]
  41a9b0:	ldr	x8, [x13]
  41a9b4:	add	x8, x8, x27, lsl #4
  41a9b8:	ldr	w24, [x8, #8]
  41a9bc:	tbz	w24, #20, 41a998 <_obstack_memory_used@@Base+0x2708>
  41a9c0:	tst	w24, #0x3ff00
  41a9c4:	b.eq	41aa9c <_obstack_memory_used@@Base+0x280c>  // b.none
  41a9c8:	ldr	x8, [sp, #376]
  41a9cc:	tbnz	x8, #63, 41aa04 <_obstack_memory_used@@Base+0x2774>
  41a9d0:	ldr	x9, [sp, #392]
  41a9d4:	cmp	x9, x8
  41a9d8:	b.eq	41ac80 <_obstack_memory_used@@Base+0x29f0>  // b.none
  41a9dc:	ldr	w9, [sp, #448]
  41a9e0:	cmp	w9, #0x2
  41a9e4:	b.lt	41aa0c <_obstack_memory_used@@Base+0x277c>  // b.tstop
  41a9e8:	ldr	x9, [sp, #320]
  41a9ec:	ldr	w26, [x9, x8, lsl #2]
  41a9f0:	cmn	w26, #0x1
  41a9f4:	b.ne	41aa38 <_obstack_memory_used@@Base+0x27a8>  // b.any
  41a9f8:	sub	x8, x8, #0x1
  41a9fc:	cmn	x8, #0x1
  41aa00:	b.ne	41a9ec <_obstack_memory_used@@Base+0x275c>  // b.any
  41aa04:	ldr	w8, [sp, #416]
  41aa08:	b	41aa68 <_obstack_memory_used@@Base+0x27d8>
  41aa0c:	ldr	x9, [sp, #312]
  41aa10:	ldr	x10, [sp, #432]
  41aa14:	ldrb	w8, [x9, x8]
  41aa18:	lsr	x9, x8, #3
  41aa1c:	and	x9, x9, #0x18
  41aa20:	ldr	x9, [x10, x9]
  41aa24:	lsr	x9, x9, x8
  41aa28:	tbz	w9, #0, 41aa5c <_obstack_memory_used@@Base+0x27cc>
  41aa2c:	mov	w9, wzr
  41aa30:	mov	w8, #0x1                   	// #1
  41aa34:	b	41aa78 <_obstack_memory_used@@Base+0x27e8>
  41aa38:	ldrb	w8, [sp, #446]
  41aa3c:	cbnz	w8, 41acb4 <_obstack_memory_used@@Base+0x2a24>
  41aa40:	cmp	w26, #0xa
  41aa44:	b.ne	41aa64 <_obstack_memory_used@@Base+0x27d4>  // b.any
  41aa48:	ldrb	w8, [sp, #445]
  41aa4c:	cmp	w8, #0x0
  41aa50:	cset	w8, ne  // ne = any
  41aa54:	lsl	w8, w8, #1
  41aa58:	b	41aa68 <_obstack_memory_used@@Base+0x27d8>
  41aa5c:	cmp	w8, #0xa
  41aa60:	b.eq	41aa48 <_obstack_memory_used@@Base+0x27b8>  // b.none
  41aa64:	mov	w8, wzr
  41aa68:	tst	w8, #0x1
  41aa6c:	cset	w9, eq  // eq = none
  41aa70:	tbz	w24, #10, 41aa78 <_obstack_memory_used@@Base+0x27e8>
  41aa74:	tbz	w8, #0, 41a998 <_obstack_memory_used@@Base+0x2708>
  41aa78:	ldr	x10, [x13]
  41aa7c:	add	x10, x10, x27, lsl #4
  41aa80:	ldr	w10, [x10, #8]
  41aa84:	tbnz	w9, #0, 41aa8c <_obstack_memory_used@@Base+0x27fc>
  41aa88:	tbnz	w10, #11, 41a998 <_obstack_memory_used@@Base+0x2708>
  41aa8c:	tbnz	w8, #1, 41aa94 <_obstack_memory_used@@Base+0x2804>
  41aa90:	tbnz	w10, #13, 41a998 <_obstack_memory_used@@Base+0x2708>
  41aa94:	tbnz	w8, #3, 41aa9c <_obstack_memory_used@@Base+0x280c>
  41aa98:	tbnz	w10, #15, 41a998 <_obstack_memory_used@@Base+0x2708>
  41aa9c:	ldr	x3, [sp, #376]
  41aaa0:	add	x2, sp, #0x130
  41aaa4:	mov	x0, x13
  41aaa8:	mov	x1, x27
  41aaac:	mov	x20, x12
  41aab0:	bl	425c9c <_obstack_memory_used@@Base+0xda0c>
  41aab4:	ldp	x15, x13, [sp, #112]
  41aab8:	ldr	x11, [sp, #104]
  41aabc:	mov	x12, x20
  41aac0:	cbz	w0, 41a998 <_obstack_memory_used@@Base+0x2708>
  41aac4:	ldr	w10, [sp, #528]
  41aac8:	ldp	x9, x11, [sp, #368]
  41aacc:	ldr	x24, [sp, #496]
  41aad0:	ldr	x8, [sp, #392]
  41aad4:	mov	x26, x27
  41aad8:	add	x27, x11, w0, sxtw
  41aadc:	cmp	w10, w0
  41aae0:	csel	w10, w0, w10, lt  // lt = tstop
  41aae4:	cmp	x9, x27
  41aae8:	str	w10, [sp, #528]
  41aaec:	b.gt	41aaf8 <_obstack_memory_used@@Base+0x2868>
  41aaf0:	cmp	x9, x8
  41aaf4:	b.lt	41ab0c <_obstack_memory_used@@Base+0x287c>  // b.tstop
  41aaf8:	ldr	x9, [sp, #352]
  41aafc:	cmp	x9, x27
  41ab00:	b.gt	41ab20 <_obstack_memory_used@@Base+0x2890>
  41ab04:	cmp	x9, x8
  41ab08:	b.ge	41ab20 <_obstack_memory_used@@Base+0x2890>  // b.tcont
  41ab0c:	add	w1, w27, #0x1
  41ab10:	add	x0, sp, #0x130
  41ab14:	bl	4242d4 <_obstack_memory_used@@Base+0xc044>
  41ab18:	ldr	x13, [sp, #120]
  41ab1c:	cbnz	w0, 41ba68 <_obstack_memory_used@@Base+0x37d8>
  41ab20:	subs	x8, x27, x24
  41ab24:	b.le	41ab48 <_obstack_memory_used@@Base+0x28b8>
  41ab28:	ldr	x9, [sp, #488]
  41ab2c:	lsl	x2, x8, #3
  41ab30:	mov	w1, wzr
  41ab34:	add	x9, x9, x24, lsl #3
  41ab38:	add	x0, x9, #0x8
  41ab3c:	bl	402470 <memset@plt>
  41ab40:	ldr	x13, [sp, #120]
  41ab44:	str	x27, [sp, #496]
  41ab48:	stur	wzr, [x29, #-40]
  41ab4c:	ldr	x8, [x13, #24]
  41ab50:	ldr	x9, [sp, #488]
  41ab54:	ldr	x10, [x13, #48]
  41ab58:	ldr	x8, [x8, x26, lsl #3]
  41ab5c:	ldr	x24, [x9, x27, lsl #3]
  41ab60:	mov	w9, #0x18                  	// #24
  41ab64:	madd	x2, x8, x9, x10
  41ab68:	cbz	x24, 41ab84 <_obstack_memory_used@@Base+0x28f4>
  41ab6c:	ldr	x1, [x24, #80]
  41ab70:	sub	x0, x29, #0x60
  41ab74:	bl	4246b8 <_obstack_memory_used@@Base+0xc428>
  41ab78:	stur	w0, [x29, #-40]
  41ab7c:	cbz	w0, 41ab94 <_obstack_memory_used@@Base+0x2904>
  41ab80:	b	41ba6c <_obstack_memory_used@@Base+0x37dc>
  41ab84:	ldr	x8, [x2, #16]
  41ab88:	ldr	q0, [x2]
  41ab8c:	stur	x8, [x29, #-80]
  41ab90:	stur	q0, [x29, #-96]
  41ab94:	cmp	x27, #0x0
  41ab98:	b.le	41ac94 <_obstack_memory_used@@Base+0x2a04>
  41ab9c:	ldr	x9, [sp, #392]
  41aba0:	ldr	x1, [sp, #120]
  41aba4:	sub	x8, x27, #0x1
  41aba8:	cmp	x9, x8
  41abac:	b.eq	41aca0 <_obstack_memory_used@@Base+0x2a10>  // b.none
  41abb0:	ldr	w9, [sp, #448]
  41abb4:	cmp	w9, #0x2
  41abb8:	b.lt	41abe0 <_obstack_memory_used@@Base+0x2950>  // b.tstop
  41abbc:	ldr	x9, [sp, #320]
  41abc0:	ldr	w26, [x9, x8, lsl #2]
  41abc4:	cmn	w26, #0x1
  41abc8:	b.ne	41ac08 <_obstack_memory_used@@Base+0x2978>  // b.any
  41abcc:	sub	x8, x8, #0x1
  41abd0:	cmn	x8, #0x1
  41abd4:	b.ne	41abc0 <_obstack_memory_used@@Base+0x2930>  // b.any
  41abd8:	ldr	w3, [sp, #416]
  41abdc:	b	41ac38 <_obstack_memory_used@@Base+0x29a8>
  41abe0:	ldr	x9, [sp, #312]
  41abe4:	ldr	x10, [sp, #432]
  41abe8:	ldrb	w8, [x9, x8]
  41abec:	lsr	x9, x8, #3
  41abf0:	and	x9, x9, #0x18
  41abf4:	ldr	x9, [x10, x9]
  41abf8:	lsr	x9, x9, x8
  41abfc:	tbz	w9, #0, 41ac2c <_obstack_memory_used@@Base+0x299c>
  41ac00:	mov	w3, #0x1                   	// #1
  41ac04:	b	41ac38 <_obstack_memory_used@@Base+0x29a8>
  41ac08:	ldrb	w8, [sp, #446]
  41ac0c:	cbnz	w8, 41acfc <_obstack_memory_used@@Base+0x2a6c>
  41ac10:	cmp	w26, #0xa
  41ac14:	b.ne	41ac34 <_obstack_memory_used@@Base+0x29a4>  // b.any
  41ac18:	ldrb	w8, [sp, #445]
  41ac1c:	cmp	w8, #0x0
  41ac20:	cset	w8, ne  // ne = any
  41ac24:	lsl	w3, w8, #1
  41ac28:	b	41ac38 <_obstack_memory_used@@Base+0x29a8>
  41ac2c:	cmp	w8, #0xa
  41ac30:	b.eq	41ac18 <_obstack_memory_used@@Base+0x2988>  // b.none
  41ac34:	mov	w3, wzr
  41ac38:	sub	x0, x29, #0x28
  41ac3c:	sub	x2, x29, #0x60
  41ac40:	bl	421fa4 <_obstack_memory_used@@Base+0x9d14>
  41ac44:	ldr	x8, [sp, #488]
  41ac48:	str	x0, [x8, x27, lsl #3]
  41ac4c:	cbz	x24, 41ac58 <_obstack_memory_used@@Base+0x29c8>
  41ac50:	ldur	x0, [x29, #-80]
  41ac54:	bl	402620 <free@plt>
  41ac58:	ldr	x8, [sp, #488]
  41ac5c:	ldp	x11, x15, [sp, #104]
  41ac60:	ldr	x13, [sp, #120]
  41ac64:	mov	x12, x20
  41ac68:	ldr	x8, [x8, x27, lsl #3]
  41ac6c:	ldr	x27, [sp, #240]
  41ac70:	cbnz	x8, 41a998 <_obstack_memory_used@@Base+0x2708>
  41ac74:	ldur	w0, [x29, #-40]
  41ac78:	cbz	w0, 41a998 <_obstack_memory_used@@Base+0x2708>
  41ac7c:	b	41ba78 <_obstack_memory_used@@Base+0x37e8>
  41ac80:	ldr	w8, [sp, #464]
  41ac84:	mov	w9, #0xa                   	// #10
  41ac88:	and	w8, w8, #0x2
  41ac8c:	eor	w8, w8, w9
  41ac90:	b	41aa68 <_obstack_memory_used@@Base+0x27d8>
  41ac94:	ldr	w3, [sp, #416]
  41ac98:	ldr	x1, [sp, #120]
  41ac9c:	b	41ac38 <_obstack_memory_used@@Base+0x29a8>
  41aca0:	ldr	w8, [sp, #464]
  41aca4:	mov	w9, #0xa                   	// #10
  41aca8:	and	w8, w8, #0x2
  41acac:	eor	w3, w8, w9
  41acb0:	b	41ac38 <_obstack_memory_used@@Base+0x29a8>
  41acb4:	mov	w0, w26
  41acb8:	str	x27, [sp, #96]
  41acbc:	str	x12, [sp, #128]
  41acc0:	mov	w27, w25
  41acc4:	mov	x25, x11
  41acc8:	mov	x20, x15
  41accc:	bl	402710 <iswalnum@plt>
  41acd0:	mov	w9, wzr
  41acd4:	cmp	w26, #0x5f
  41acd8:	mov	w8, #0x1                   	// #1
  41acdc:	mov	x15, x20
  41ace0:	mov	x11, x25
  41ace4:	mov	w25, w27
  41ace8:	b.eq	41ad1c <_obstack_memory_used@@Base+0x2a8c>  // b.none
  41acec:	ldp	x13, x12, [sp, #120]
  41acf0:	ldr	x27, [sp, #96]
  41acf4:	cbz	w0, 41aa40 <_obstack_memory_used@@Base+0x27b0>
  41acf8:	b	41aa78 <_obstack_memory_used@@Base+0x27e8>
  41acfc:	mov	w0, w26
  41ad00:	bl	402710 <iswalnum@plt>
  41ad04:	cmp	w26, #0x5f
  41ad08:	mov	w3, #0x1                   	// #1
  41ad0c:	b.eq	41ad28 <_obstack_memory_used@@Base+0x2a98>  // b.none
  41ad10:	ldr	x1, [sp, #120]
  41ad14:	cbz	w0, 41ac10 <_obstack_memory_used@@Base+0x2980>
  41ad18:	b	41ac38 <_obstack_memory_used@@Base+0x29a8>
  41ad1c:	ldp	x13, x12, [sp, #120]
  41ad20:	ldr	x27, [sp, #96]
  41ad24:	b	41aa78 <_obstack_memory_used@@Base+0x27e8>
  41ad28:	ldr	x1, [sp, #120]
  41ad2c:	b	41ac38 <_obstack_memory_used@@Base+0x29a8>
  41ad30:	ldr	x23, [x12, #96]
  41ad34:	cbnz	x23, 41b990 <_obstack_memory_used@@Base+0x3700>
  41ad38:	ldr	x8, [sp, #456]
  41ad3c:	mov	w0, #0x3800                	// #14336
  41ad40:	stp	x12, x24, [sp, #128]
  41ad44:	stp	x19, x22, [sp, #8]
  41ad48:	str	w25, [sp, #120]
  41ad4c:	stp	x11, x15, [sp, #104]
  41ad50:	str	x8, [sp, #72]
  41ad54:	bl	4023a0 <malloc@plt>
  41ad58:	str	x0, [sp, #40]
  41ad5c:	cbz	x0, 41bbb8 <_obstack_memory_used@@Base+0x3928>
  41ad60:	stp	xzr, xzr, [x27]
  41ad64:	ldr	x8, [sp, #128]
  41ad68:	movi	v0.2d, #0x0
  41ad6c:	stp	q0, q0, [x29, #-96]
  41ad70:	ldr	x8, [x8, #16]
  41ad74:	cmp	x8, #0x0
  41ad78:	b.le	41b6a8 <_obstack_memory_used@@Base+0x3418>
  41ad7c:	ldr	x9, [sp, #40]
  41ad80:	mov	w8, #0x1800                	// #6144
  41ad84:	str	xzr, [sp, #48]
  41ad88:	str	xzr, [sp, #96]
  41ad8c:	add	x8, x9, x8
  41ad90:	str	x8, [sp, #24]
  41ad94:	b	41adbc <_obstack_memory_used@@Base+0x2b2c>
  41ad98:	movi	v0.2d, #0x0
  41ad9c:	stp	q0, q0, [x29, #-96]
  41ada0:	ldr	x8, [sp, #128]
  41ada4:	ldr	x9, [sp, #48]
  41ada8:	ldr	x8, [x8, #16]
  41adac:	add	x9, x9, #0x1
  41adb0:	str	x9, [sp, #48]
  41adb4:	cmp	x9, x8
  41adb8:	b.ge	41b2ac <_obstack_memory_used@@Base+0x301c>  // b.tcont
  41adbc:	ldr	x8, [sp, #128]
  41adc0:	ldr	x10, [sp, #48]
  41adc4:	ldr	x9, [x8, #24]
  41adc8:	ldr	x8, [sp, #72]
  41adcc:	ldr	x9, [x9, x10, lsl #3]
  41add0:	ldr	x8, [x8]
  41add4:	add	x8, x8, x9, lsl #4
  41add8:	str	x8, [sp, #32]
  41addc:	ldr	w9, [x8, #8]!
  41ade0:	and	w10, w9, #0xff
  41ade4:	cmp	w10, #0x1
  41ade8:	str	w10, [sp, #56]
  41adec:	b.ne	41aea4 <_obstack_memory_used@@Base+0x2c14>  // b.any
  41adf0:	ldr	x10, [sp, #32]
  41adf4:	sub	x13, x29, #0x60
  41adf8:	mov	w14, #0x1                   	// #1
  41adfc:	ldrb	w10, [x10]
  41ae00:	lsr	x11, x10, #3
  41ae04:	and	x11, x11, #0x18
  41ae08:	ldr	x12, [x13, x11]
  41ae0c:	lsl	x10, x14, x10
  41ae10:	orr	x10, x10, x12
  41ae14:	str	x10, [x13, x11]
  41ae18:	and	w10, w9, #0x3ff00
  41ae1c:	cbz	w10, 41b080 <_obstack_memory_used@@Base+0x2df0>
  41ae20:	tbz	w9, #13, 41ae3c <_obstack_memory_used@@Base+0x2bac>
  41ae24:	ldur	x10, [x29, #-96]
  41ae28:	movi	v0.2d, #0x0
  41ae2c:	stp	q0, q0, [x29, #-96]
  41ae30:	tbz	w10, #10, 41ada0 <_obstack_memory_used@@Base+0x2b10>
  41ae34:	mov	w10, #0x400                 	// #1024
  41ae38:	stur	x10, [x29, #-96]
  41ae3c:	tbnz	w9, #15, 41ad98 <_obstack_memory_used@@Base+0x2b08>
  41ae40:	tbz	w9, #10, 41afdc <_obstack_memory_used@@Base+0x2d4c>
  41ae44:	ldr	w10, [sp, #56]
  41ae48:	cmp	w10, #0x1
  41ae4c:	b.ne	41ae58 <_obstack_memory_used@@Base+0x2bc8>  // b.any
  41ae50:	ldrb	w10, [x8, #2]
  41ae54:	tbz	w10, #6, 41ad98 <_obstack_memory_used@@Base+0x2b08>
  41ae58:	ldr	x10, [sp, #72]
  41ae5c:	ldr	w10, [x10, #180]
  41ae60:	cmp	w10, #0x1
  41ae64:	b.le	41af9c <_obstack_memory_used@@Base+0x2d0c>
  41ae68:	ldr	x10, [sp, #72]
  41ae6c:	ldp	q2, q3, [x29, #-96]
  41ae70:	ldr	x11, [x10, #120]
  41ae74:	ldur	q0, [x10, #184]
  41ae78:	ldr	q1, [x11]
  41ae7c:	orn	v0.16b, v0.16b, v1.16b
  41ae80:	and	v0.16b, v2.16b, v0.16b
  41ae84:	stur	q0, [x29, #-96]
  41ae88:	ldur	q1, [x10, #200]
  41ae8c:	ldr	q2, [x11, #16]
  41ae90:	mov	x10, v0.d[1]
  41ae94:	fmov	x11, d0
  41ae98:	orn	v0.16b, v1.16b, v2.16b
  41ae9c:	and	v0.16b, v3.16b, v0.16b
  41aea0:	b	41afc0 <_obstack_memory_used@@Base+0x2d30>
  41aea4:	ldr	w10, [sp, #56]
  41aea8:	cmp	w10, #0x7
  41aeac:	b.eq	41aef0 <_obstack_memory_used@@Base+0x2c60>  // b.none
  41aeb0:	ldr	w10, [sp, #56]
  41aeb4:	cmp	w10, #0x5
  41aeb8:	b.eq	41af28 <_obstack_memory_used@@Base+0x2c98>  // b.none
  41aebc:	ldr	w10, [sp, #56]
  41aec0:	cmp	w10, #0x3
  41aec4:	b.ne	41ada0 <_obstack_memory_used@@Base+0x2b10>  // b.any
  41aec8:	ldr	x10, [sp, #32]
  41aecc:	ldp	q1, q2, [x29, #-96]
  41aed0:	ldr	x10, [x10]
  41aed4:	ldr	q0, [x10]
  41aed8:	orr	v0.16b, v1.16b, v0.16b
  41aedc:	stur	q0, [x29, #-96]
  41aee0:	ldr	q0, [x10, #16]
  41aee4:	orr	v0.16b, v2.16b, v0.16b
  41aee8:	stur	q0, [x29, #-80]
  41aeec:	b	41ae18 <_obstack_memory_used@@Base+0x2b88>
  41aef0:	mov	x10, #0xffffffffffffffff    	// #-1
  41aef4:	stp	x10, x10, [x29, #-96]
  41aef8:	ldr	x10, [sp, #72]
  41aefc:	ldr	x10, [x10, #216]
  41af00:	tbz	w10, #6, 41af08 <_obstack_memory_used@@Base+0x2c78>
  41af04:	tbz	w10, #7, 41ae18 <_obstack_memory_used@@Base+0x2b88>
  41af08:	tst	x10, #0x40
  41af0c:	mov	x11, #0xfffffffffffffffe    	// #-2
  41af10:	mov	x12, #0xfffffffffffffbfe    	// #-1026
  41af14:	csel	x11, x12, x11, eq  // eq = none
  41af18:	tst	x10, #0x80
  41af1c:	mov	x10, #0xfffffffffffffbff    	// #-1025
  41af20:	csel	x10, x10, x11, eq  // eq = none
  41af24:	b	41af94 <_obstack_memory_used@@Base+0x2d04>
  41af28:	ldr	x10, [sp, #72]
  41af2c:	ldr	w10, [x10, #180]
  41af30:	cmp	w10, #0x2
  41af34:	b.lt	41af60 <_obstack_memory_used@@Base+0x2cd0>  // b.tstop
  41af38:	ldr	x10, [sp, #72]
  41af3c:	ldp	q1, q2, [x29, #-96]
  41af40:	ldr	x10, [x10, #120]
  41af44:	ldr	q0, [x10]
  41af48:	orr	v0.16b, v1.16b, v0.16b
  41af4c:	ldr	q1, [x10, #16]
  41af50:	fmov	x11, d0
  41af54:	orr	v1.16b, v2.16b, v1.16b
  41af58:	stp	q0, q1, [x29, #-96]
  41af5c:	b	41af6c <_obstack_memory_used@@Base+0x2cdc>
  41af60:	movi	v0.2d, #0xffffffffffffffff
  41af64:	mov	x11, #0xffffffffffffffff    	// #-1
  41af68:	stp	q0, q0, [x29, #-96]
  41af6c:	ldr	x10, [sp, #72]
  41af70:	and	x12, x11, #0xfffffffffffffbff
  41af74:	ldr	x10, [x10, #216]
  41af78:	tst	x10, #0x40
  41af7c:	csel	x11, x12, x11, eq  // eq = none
  41af80:	tbz	w10, #6, 41af88 <_obstack_memory_used@@Base+0x2cf8>
  41af84:	tbz	w10, #7, 41ae18 <_obstack_memory_used@@Base+0x2b88>
  41af88:	and	x12, x11, #0xfffffffffffffffe
  41af8c:	tst	x10, #0x80
  41af90:	csel	x10, x11, x12, eq  // eq = none
  41af94:	stur	x10, [x29, #-96]
  41af98:	b	41ae18 <_obstack_memory_used@@Base+0x2b88>
  41af9c:	ldr	x10, [sp, #72]
  41afa0:	ldp	q1, q2, [x29, #-96]
  41afa4:	ldur	q0, [x10, #184]
  41afa8:	and	v0.16b, v1.16b, v0.16b
  41afac:	stur	q0, [x29, #-96]
  41afb0:	ldur	q1, [x10, #200]
  41afb4:	mov	x10, v0.d[1]
  41afb8:	fmov	x11, d0
  41afbc:	and	v0.16b, v2.16b, v1.16b
  41afc0:	orr	x10, x10, x11
  41afc4:	fmov	x11, d0
  41afc8:	orr	x10, x10, x11
  41afcc:	mov	x11, v0.d[1]
  41afd0:	orr	x10, x10, x11
  41afd4:	stur	q0, [x29, #-80]
  41afd8:	cbz	x10, 41ada0 <_obstack_memory_used@@Base+0x2b10>
  41afdc:	tbz	w9, #11, 41b080 <_obstack_memory_used@@Base+0x2df0>
  41afe0:	ldr	w9, [sp, #56]
  41afe4:	cmp	w9, #0x1
  41afe8:	b.ne	41aff4 <_obstack_memory_used@@Base+0x2d64>  // b.any
  41afec:	ldrb	w8, [x8, #2]
  41aff0:	tbnz	w8, #6, 41ad98 <_obstack_memory_used@@Base+0x2b08>
  41aff4:	ldr	x8, [sp, #72]
  41aff8:	ldr	w8, [x8, #180]
  41affc:	cmp	w8, #0x1
  41b000:	b.le	41b040 <_obstack_memory_used@@Base+0x2db0>
  41b004:	ldr	x8, [sp, #72]
  41b008:	ldp	q2, q3, [x29, #-96]
  41b00c:	ldr	x9, [x8, #120]
  41b010:	ldur	q0, [x8, #184]
  41b014:	ldr	q1, [x9]
  41b018:	and	v0.16b, v1.16b, v0.16b
  41b01c:	bic	v0.16b, v2.16b, v0.16b
  41b020:	stur	q0, [x29, #-96]
  41b024:	ldur	q1, [x8, #200]
  41b028:	ldr	q2, [x9, #16]
  41b02c:	mov	x8, v0.d[1]
  41b030:	fmov	x9, d0
  41b034:	and	v0.16b, v2.16b, v1.16b
  41b038:	bic	v0.16b, v3.16b, v0.16b
  41b03c:	b	41b064 <_obstack_memory_used@@Base+0x2dd4>
  41b040:	ldr	x8, [sp, #72]
  41b044:	ldp	q1, q2, [x29, #-96]
  41b048:	ldur	q0, [x8, #184]
  41b04c:	bic	v0.16b, v1.16b, v0.16b
  41b050:	stur	q0, [x29, #-96]
  41b054:	ldur	q1, [x8, #200]
  41b058:	mov	x8, v0.d[1]
  41b05c:	fmov	x9, d0
  41b060:	bic	v0.16b, v2.16b, v1.16b
  41b064:	orr	x8, x8, x9
  41b068:	fmov	x9, d0
  41b06c:	orr	x8, x8, x9
  41b070:	mov	x9, v0.d[1]
  41b074:	orr	x8, x8, x9
  41b078:	stur	q0, [x29, #-80]
  41b07c:	cbz	x8, 41ada0 <_obstack_memory_used@@Base+0x2b10>
  41b080:	ldr	x8, [sp, #96]
  41b084:	cmp	x8, #0x1
  41b088:	b.lt	41b238 <_obstack_memory_used@@Base+0x2fa8>  // b.tstop
  41b08c:	ldp	x8, x22, [x29, #-96]
  41b090:	ldr	x19, [sp, #40]
  41b094:	ldr	x23, [sp, #24]
  41b098:	str	xzr, [sp, #64]
  41b09c:	str	x8, [sp, #80]
  41b0a0:	ldp	x8, x25, [x29, #-80]
  41b0a4:	str	x8, [sp, #88]
  41b0a8:	b	41b0cc <_obstack_memory_used@@Base+0x2e3c>
  41b0ac:	ldr	x8, [sp, #64]
  41b0b0:	ldr	x9, [sp, #96]
  41b0b4:	add	x23, x23, #0x20
  41b0b8:	add	x19, x19, #0x18
  41b0bc:	add	x8, x8, #0x1
  41b0c0:	cmp	x8, x9
  41b0c4:	str	x8, [sp, #64]
  41b0c8:	b.ge	41b220 <_obstack_memory_used@@Base+0x2f90>  // b.tcont
  41b0cc:	ldr	w8, [sp, #56]
  41b0d0:	cmp	w8, #0x1
  41b0d4:	b.ne	41b0f4 <_obstack_memory_used@@Base+0x2e64>  // b.any
  41b0d8:	ldr	x8, [sp, #32]
  41b0dc:	ldrb	w8, [x8]
  41b0e0:	lsr	x9, x8, #3
  41b0e4:	and	x9, x9, #0x18
  41b0e8:	ldr	x9, [x23, x9]
  41b0ec:	lsr	x8, x9, x8
  41b0f0:	tbz	w8, #0, 41b0ac <_obstack_memory_used@@Base+0x2e1c>
  41b0f4:	ldp	x13, x14, [x23]
  41b0f8:	ldr	x8, [sp, #80]
  41b0fc:	ldp	x16, x15, [x23, #16]
  41b100:	and	x9, x14, x22
  41b104:	and	x11, x13, x8
  41b108:	ldr	x8, [sp, #88]
  41b10c:	orr	x10, x9, x11
  41b110:	and	x8, x16, x8
  41b114:	orr	x12, x10, x8
  41b118:	and	x10, x15, x25
  41b11c:	orr	x12, x12, x10
  41b120:	cbz	x12, 41b0ac <_obstack_memory_used@@Base+0x2e1c>
  41b124:	ldr	x17, [sp, #80]
  41b128:	bic	x12, x13, x17
  41b12c:	bic	x17, x17, x13
  41b130:	str	x17, [sp, #80]
  41b134:	ldr	x17, [sp, #88]
  41b138:	bic	x13, x14, x22
  41b13c:	bic	x22, x22, x14
  41b140:	bic	x14, x16, x17
  41b144:	bic	x17, x17, x16
  41b148:	orr	x16, x13, x12
  41b14c:	str	x17, [sp, #88]
  41b150:	orr	x17, x16, x14
  41b154:	bic	x16, x15, x25
  41b158:	orr	x17, x17, x16
  41b15c:	bic	x25, x25, x15
  41b160:	cbz	x17, 41b1f0 <_obstack_memory_used@@Base+0x2f60>
  41b164:	ldr	x17, [sp, #96]
  41b168:	ldr	x15, [sp, #24]
  41b16c:	add	x15, x15, x17, lsl #5
  41b170:	stp	x12, x13, [x15]
  41b174:	stp	x14, x16, [x15, #16]
  41b178:	stp	x11, x9, [x23]
  41b17c:	stp	x8, x10, [x23, #16]
  41b180:	ldr	x10, [sp, #40]
  41b184:	ldr	x8, [x19, #8]
  41b188:	mov	w9, #0x18                  	// #24
  41b18c:	mov	x11, x19
  41b190:	madd	x24, x17, x9, x10
  41b194:	str	x8, [x24, #8]
  41b198:	ldr	x9, [x19, #8]
  41b19c:	cmp	x9, #0x1
  41b1a0:	b.lt	41b1dc <_obstack_memory_used@@Base+0x2f4c>  // b.tstop
  41b1a4:	lsl	x0, x8, #3
  41b1a8:	mov	x20, x9
  41b1ac:	str	x8, [x24]
  41b1b0:	bl	4023a0 <malloc@plt>
  41b1b4:	ldr	x9, [sp, #40]
  41b1b8:	ldr	x10, [sp, #96]
  41b1bc:	mov	w8, #0x18                  	// #24
  41b1c0:	madd	x8, x10, x8, x9
  41b1c4:	str	x0, [x8, #16]
  41b1c8:	cbz	x0, 41bb70 <_obstack_memory_used@@Base+0x38e0>
  41b1cc:	ldr	x1, [x19, #16]
  41b1d0:	lsl	x2, x20, #3
  41b1d4:	bl	402210 <memcpy@plt>
  41b1d8:	b	41b1e4 <_obstack_memory_used@@Base+0x2f54>
  41b1dc:	stp	xzr, xzr, [x24]
  41b1e0:	str	xzr, [x24, #16]
  41b1e4:	ldr	x8, [sp, #96]
  41b1e8:	add	x8, x8, #0x1
  41b1ec:	str	x8, [sp, #96]
  41b1f0:	ldr	x8, [sp, #128]
  41b1f4:	ldr	x9, [sp, #48]
  41b1f8:	mov	x0, x19
  41b1fc:	ldr	x8, [x8, #24]
  41b200:	ldr	x1, [x8, x9, lsl #3]
  41b204:	bl	421e9c <_obstack_memory_used@@Base+0x9c0c>
  41b208:	tbz	w0, #0, 41bb68 <_obstack_memory_used@@Base+0x38d8>
  41b20c:	ldp	x8, x9, [sp, #80]
  41b210:	orr	x8, x22, x8
  41b214:	orr	x8, x8, x9
  41b218:	orr	x8, x8, x25
  41b21c:	cbnz	x8, 41b0ac <_obstack_memory_used@@Base+0x2e1c>
  41b220:	ldr	x8, [sp, #88]
  41b224:	stur	x22, [x29, #-88]
  41b228:	stp	x8, x25, [x29, #-80]
  41b22c:	ldr	x8, [sp, #80]
  41b230:	stur	x8, [x29, #-96]
  41b234:	b	41b23c <_obstack_memory_used@@Base+0x2fac>
  41b238:	str	xzr, [sp, #64]
  41b23c:	ldr	x8, [sp, #96]
  41b240:	ldr	x9, [sp, #64]
  41b244:	cmp	x9, x8
  41b248:	b.ne	41ada0 <_obstack_memory_used@@Base+0x2b10>  // b.any
  41b24c:	ldr	x8, [sp, #24]
  41b250:	ldr	x10, [sp, #64]
  41b254:	ldp	q1, q0, [x29, #-96]
  41b258:	ldr	x9, [sp, #48]
  41b25c:	mov	w0, #0x8                   	// #8
  41b260:	add	x8, x8, x10, lsl #5
  41b264:	stp	q1, q0, [x8]
  41b268:	ldr	x8, [sp, #128]
  41b26c:	ldr	x8, [x8, #24]
  41b270:	ldr	x24, [x8, x9, lsl #3]
  41b274:	ldr	x9, [sp, #40]
  41b278:	mov	w8, #0x18                  	// #24
  41b27c:	madd	x23, x10, x8, x9
  41b280:	mov	w8, #0x1                   	// #1
  41b284:	dup	v0.2d, x8
  41b288:	str	q0, [x23]
  41b28c:	bl	4023a0 <malloc@plt>
  41b290:	str	x0, [x23, #16]
  41b294:	cbz	x0, 41bbdc <_obstack_memory_used@@Base+0x394c>
  41b298:	ldr	x8, [sp, #64]
  41b29c:	str	x24, [x0]
  41b2a0:	add	x8, x8, #0x1
  41b2a4:	str	x8, [sp, #96]
  41b2a8:	b	41ad98 <_obstack_memory_used@@Base+0x2b08>
  41b2ac:	ldr	x8, [sp, #96]
  41b2b0:	cmp	x8, #0x0
  41b2b4:	b.le	41b6c8 <_obstack_memory_used@@Base+0x3438>
  41b2b8:	ldr	x8, [sp, #96]
  41b2bc:	add	x8, x8, #0x1
  41b2c0:	lsl	x0, x8, #3
  41b2c4:	stp	x8, xzr, [x29, #-40]
  41b2c8:	bl	4023a0 <malloc@plt>
  41b2cc:	cmp	x0, #0x0
  41b2d0:	mov	w8, #0xc                   	// #12
  41b2d4:	mov	x19, x0
  41b2d8:	csel	w8, w8, wzr, eq  // eq = none
  41b2dc:	stur	x0, [x29, #-24]
  41b2e0:	stur	w8, [x29, #-12]
  41b2e4:	cbz	x0, 41bbec <_obstack_memory_used@@Base+0x395c>
  41b2e8:	ldr	x8, [sp, #96]
  41b2ec:	add	x8, x8, x8, lsl #1
  41b2f0:	lsl	x0, x8, #3
  41b2f4:	bl	4023a0 <malloc@plt>
  41b2f8:	str	x0, [sp, #80]
  41b2fc:	cbz	x0, 41bbec <_obstack_memory_used@@Base+0x395c>
  41b300:	ldr	x9, [sp, #96]
  41b304:	ldr	x10, [sp, #80]
  41b308:	mov	w8, wzr
  41b30c:	mov	x19, xzr
  41b310:	lsl	x9, x9, #3
  41b314:	add	x10, x10, x9
  41b318:	mov	x22, xzr
  41b31c:	mov	x20, xzr
  41b320:	add	x9, x10, x9
  41b324:	str	xzr, [sp, #88]
  41b328:	str	wzr, [sp, #32]
  41b32c:	stp	x10, xzr, [sp, #56]
  41b330:	str	x9, [sp, #48]
  41b334:	b	41b398 <_obstack_memory_used@@Base+0x3108>
  41b338:	ldrsb	w9, [x0, #104]
  41b33c:	tbnz	w9, #31, 41b448 <_obstack_memory_used@@Base+0x31b8>
  41b340:	ldp	x11, x10, [sp, #48]
  41b344:	lsl	x9, x20, #3
  41b348:	str	x0, [x10, x9]
  41b34c:	ldr	x10, [sp, #80]
  41b350:	ldr	x10, [x10, x9]
  41b354:	str	x10, [x11, x9]
  41b358:	ldr	x9, [sp, #24]
  41b35c:	ldr	x13, [sp, #96]
  41b360:	add	x9, x9, x20, lsl #5
  41b364:	add	x20, x20, #0x1
  41b368:	ldp	x10, x11, [x9]
  41b36c:	cmp	x20, x13
  41b370:	ldr	x13, [sp, #64]
  41b374:	ldp	x12, x9, [x9, #16]
  41b378:	orr	x22, x11, x22
  41b37c:	orr	x13, x10, x13
  41b380:	ldr	x10, [sp, #88]
  41b384:	orr	x19, x12, x19
  41b388:	str	x13, [sp, #64]
  41b38c:	orr	x10, x9, x10
  41b390:	str	x10, [sp, #88]
  41b394:	b.eq	41b4c8 <_obstack_memory_used@@Base+0x3238>  // b.none
  41b398:	ldr	x10, [sp, #40]
  41b39c:	mov	w9, #0x18                  	// #24
  41b3a0:	stur	xzr, [x29, #-32]
  41b3a4:	madd	x25, x20, x9, x10
  41b3a8:	ldr	x9, [x25, #8]!
  41b3ac:	cmp	x9, #0x1
  41b3b0:	b.lt	41b41c <_obstack_memory_used@@Base+0x318c>  // b.tstop
  41b3b4:	ldr	x11, [sp, #40]
  41b3b8:	mov	w10, #0x18                  	// #24
  41b3bc:	mov	x24, xzr
  41b3c0:	madd	x10, x20, x10, x11
  41b3c4:	ldr	x23, [x10, #16]
  41b3c8:	ldr	x10, [sp, #72]
  41b3cc:	b	41b3e8 <_obstack_memory_used@@Base+0x3158>
  41b3d0:	ldr	x9, [x25]
  41b3d4:	ldr	x10, [sp, #72]
  41b3d8:	mov	w8, wzr
  41b3dc:	add	x24, x24, #0x1
  41b3e0:	cmp	x24, x9
  41b3e4:	b.ge	41b418 <_obstack_memory_used@@Base+0x3188>  // b.tcont
  41b3e8:	ldr	x11, [x10, #24]
  41b3ec:	ldr	x12, [x23, x24, lsl #3]
  41b3f0:	ldr	x11, [x11, x12, lsl #3]
  41b3f4:	cmn	x11, #0x1
  41b3f8:	b.eq	41b3dc <_obstack_memory_used@@Base+0x314c>  // b.none
  41b3fc:	ldr	x8, [x10, #48]
  41b400:	mov	w9, #0x18                  	// #24
  41b404:	sub	x0, x29, #0x28
  41b408:	madd	x1, x11, x9, x8
  41b40c:	bl	421d10 <_obstack_memory_used@@Base+0x9a80>
  41b410:	cbz	w0, 41b3d0 <_obstack_memory_used@@Base+0x3140>
  41b414:	b	41bb10 <_obstack_memory_used@@Base+0x3880>
  41b418:	stur	w8, [x29, #-12]
  41b41c:	ldr	x1, [sp, #72]
  41b420:	sub	x0, x29, #0xc
  41b424:	sub	x2, x29, #0x28
  41b428:	mov	w3, wzr
  41b42c:	bl	421fa4 <_obstack_memory_used@@Base+0x9d14>
  41b430:	ldur	w8, [x29, #-12]
  41b434:	ldr	x9, [sp, #80]
  41b438:	str	x0, [x9, x20, lsl #3]
  41b43c:	cbnz	x0, 41b338 <_obstack_memory_used@@Base+0x30a8>
  41b440:	cbz	w8, 41b338 <_obstack_memory_used@@Base+0x30a8>
  41b444:	b	41bb14 <_obstack_memory_used@@Base+0x3884>
  41b448:	ldr	x1, [sp, #72]
  41b44c:	sub	x0, x29, #0xc
  41b450:	sub	x2, x29, #0x28
  41b454:	mov	w3, #0x1                   	// #1
  41b458:	bl	421fa4 <_obstack_memory_used@@Base+0x9d14>
  41b45c:	ldr	x8, [sp, #56]
  41b460:	str	x0, [x8, x20, lsl #3]
  41b464:	cbnz	x0, 41b470 <_obstack_memory_used@@Base+0x31e0>
  41b468:	ldur	w8, [x29, #-12]
  41b46c:	cbnz	w8, 41bb14 <_obstack_memory_used@@Base+0x3884>
  41b470:	ldr	x8, [sp, #80]
  41b474:	ldr	x8, [x8, x20, lsl #3]
  41b478:	cmp	x8, x0
  41b47c:	b.eq	41b49c <_obstack_memory_used@@Base+0x320c>  // b.none
  41b480:	ldr	x8, [sp, #72]
  41b484:	ldr	w9, [sp, #32]
  41b488:	ldr	w8, [x8, #180]
  41b48c:	cmp	w8, #0x1
  41b490:	cset	w8, gt
  41b494:	orr	w9, w9, w8
  41b498:	str	w9, [sp, #32]
  41b49c:	ldr	x1, [sp, #72]
  41b4a0:	sub	x0, x29, #0xc
  41b4a4:	sub	x2, x29, #0x28
  41b4a8:	mov	w3, #0x2                   	// #2
  41b4ac:	bl	421fa4 <_obstack_memory_used@@Base+0x9d14>
  41b4b0:	ldur	w8, [x29, #-12]
  41b4b4:	ldr	x9, [sp, #48]
  41b4b8:	str	x0, [x9, x20, lsl #3]
  41b4bc:	cbnz	x0, 41b358 <_obstack_memory_used@@Base+0x30c8>
  41b4c0:	cbz	w8, 41b358 <_obstack_memory_used@@Base+0x30c8>
  41b4c4:	b	41bb14 <_obstack_memory_used@@Base+0x3884>
  41b4c8:	ldr	w8, [sp, #32]
  41b4cc:	tbnz	w8, #0, 41b6dc <_obstack_memory_used@@Base+0x344c>
  41b4d0:	mov	w0, #0x8                   	// #8
  41b4d4:	mov	w1, #0x100                 	// #256
  41b4d8:	bl	402480 <calloc@plt>
  41b4dc:	str	x0, [x27]
  41b4e0:	cbz	x0, 41bb14 <_obstack_memory_used@@Base+0x3884>
  41b4e4:	ldr	x8, [sp, #64]
  41b4e8:	cbz	x8, 41b54c <_obstack_memory_used@@Base+0x32bc>
  41b4ec:	ldr	x9, [sp, #64]
  41b4f0:	mov	x8, xzr
  41b4f4:	mov	w10, #0x1                   	// #1
  41b4f8:	tbnz	w9, #0, 41b510 <_obstack_memory_used@@Base+0x3280>
  41b4fc:	lsl	x10, x10, #1
  41b500:	lsr	x9, x9, #1
  41b504:	add	x8, x8, #0x1
  41b508:	cbnz	x9, 41b4f8 <_obstack_memory_used@@Base+0x3268>
  41b50c:	b	41b54c <_obstack_memory_used@@Base+0x32bc>
  41b510:	ldr	x12, [sp, #24]
  41b514:	mov	x11, #0xfffffffffffffff8    	// #-8
  41b518:	ldr	x13, [x12], #32
  41b51c:	add	x11, x11, #0x8
  41b520:	tst	x13, x10
  41b524:	b.eq	41b518 <_obstack_memory_used@@Base+0x3288>  // b.none
  41b528:	ldr	x12, [sp, #72]
  41b52c:	ldr	x13, [sp, #56]
  41b530:	ldr	x12, [x12, #184]
  41b534:	tst	x12, x10
  41b538:	ldr	x12, [sp, #80]
  41b53c:	csel	x12, x12, x13, eq  // eq = none
  41b540:	ldr	x11, [x12, x11]
  41b544:	str	x11, [x0, x8, lsl #3]
  41b548:	b	41b4fc <_obstack_memory_used@@Base+0x326c>
  41b54c:	cbz	x22, 41b5b8 <_obstack_memory_used@@Base+0x3328>
  41b550:	ldr	x9, [sp, #40]
  41b554:	mov	w8, #0x1808                	// #6152
  41b558:	mov	w10, #0x1                   	// #1
  41b55c:	add	x8, x9, x8
  41b560:	mov	w9, #0x40                  	// #64
  41b564:	tbnz	w22, #0, 41b57c <_obstack_memory_used@@Base+0x32ec>
  41b568:	lsl	x10, x10, #1
  41b56c:	lsr	x22, x22, #1
  41b570:	add	x9, x9, #0x1
  41b574:	cbnz	x22, 41b564 <_obstack_memory_used@@Base+0x32d4>
  41b578:	b	41b5b8 <_obstack_memory_used@@Base+0x3328>
  41b57c:	mov	x11, #0xfffffffffffffff8    	// #-8
  41b580:	mov	x12, x8
  41b584:	ldr	x13, [x12], #32
  41b588:	add	x11, x11, #0x8
  41b58c:	tst	x13, x10
  41b590:	b.eq	41b584 <_obstack_memory_used@@Base+0x32f4>  // b.none
  41b594:	ldr	x12, [sp, #72]
  41b598:	ldr	x13, [sp, #56]
  41b59c:	ldr	x12, [x12, #192]
  41b5a0:	tst	x12, x10
  41b5a4:	ldr	x12, [sp, #80]
  41b5a8:	csel	x12, x12, x13, eq  // eq = none
  41b5ac:	ldr	x11, [x12, x11]
  41b5b0:	str	x11, [x0, x9, lsl #3]
  41b5b4:	b	41b568 <_obstack_memory_used@@Base+0x32d8>
  41b5b8:	cbz	x19, 41b62c <_obstack_memory_used@@Base+0x339c>
  41b5bc:	ldr	x9, [sp, #40]
  41b5c0:	mov	w8, #0x1810                	// #6160
  41b5c4:	mov	w10, #0x1                   	// #1
  41b5c8:	add	x8, x9, x8
  41b5cc:	mov	w9, #0x80                  	// #128
  41b5d0:	tbnz	w19, #0, 41b5f0 <_obstack_memory_used@@Base+0x3360>
  41b5d4:	mov	x11, x19
  41b5d8:	lsr	x11, x19, #1
  41b5dc:	lsl	x10, x10, #1
  41b5e0:	add	x9, x9, #0x1
  41b5e4:	mov	x19, x11
  41b5e8:	cbnz	x11, 41b5d0 <_obstack_memory_used@@Base+0x3340>
  41b5ec:	b	41b62c <_obstack_memory_used@@Base+0x339c>
  41b5f0:	mov	x11, #0xfffffffffffffff8    	// #-8
  41b5f4:	mov	x12, x8
  41b5f8:	ldr	x13, [x12], #32
  41b5fc:	add	x11, x11, #0x8
  41b600:	tst	x13, x10
  41b604:	b.eq	41b5f8 <_obstack_memory_used@@Base+0x3368>  // b.none
  41b608:	ldr	x12, [sp, #72]
  41b60c:	ldr	x13, [sp, #56]
  41b610:	ldr	x12, [x12, #200]
  41b614:	tst	x12, x10
  41b618:	ldr	x12, [sp, #80]
  41b61c:	csel	x12, x12, x13, eq  // eq = none
  41b620:	ldr	x11, [x12, x11]
  41b624:	str	x11, [x0, x9, lsl #3]
  41b628:	b	41b5d4 <_obstack_memory_used@@Base+0x3344>
  41b62c:	ldr	x8, [sp, #88]
  41b630:	cbz	x8, 41b8b8 <_obstack_memory_used@@Base+0x3628>
  41b634:	ldr	x9, [sp, #40]
  41b638:	mov	w8, #0x1818                	// #6168
  41b63c:	mov	w10, #0x1                   	// #1
  41b640:	add	x8, x9, x8
  41b644:	mov	w9, #0xc0                  	// #192
  41b648:	ldr	x11, [sp, #88]
  41b64c:	tbnz	w11, #0, 41b66c <_obstack_memory_used@@Base+0x33dc>
  41b650:	ldr	x11, [sp, #88]
  41b654:	lsl	x10, x10, #1
  41b658:	add	x9, x9, #0x1
  41b65c:	lsr	x11, x11, #1
  41b660:	str	x11, [sp, #88]
  41b664:	cbnz	x11, 41b648 <_obstack_memory_used@@Base+0x33b8>
  41b668:	b	41b8b8 <_obstack_memory_used@@Base+0x3628>
  41b66c:	mov	x11, #0xfffffffffffffff8    	// #-8
  41b670:	mov	x12, x8
  41b674:	ldr	x13, [x12], #32
  41b678:	add	x11, x11, #0x8
  41b67c:	tst	x13, x10
  41b680:	b.eq	41b674 <_obstack_memory_used@@Base+0x33e4>  // b.none
  41b684:	ldr	x12, [sp, #72]
  41b688:	ldr	x13, [sp, #56]
  41b68c:	ldr	x12, [x12, #208]
  41b690:	tst	x12, x10
  41b694:	ldr	x12, [sp, #80]
  41b698:	csel	x12, x12, x13, eq  // eq = none
  41b69c:	ldr	x11, [x12, x11]
  41b6a0:	str	x11, [x0, x9, lsl #3]
  41b6a4:	b	41b650 <_obstack_memory_used@@Base+0x33c0>
  41b6a8:	ldr	x0, [sp, #40]
  41b6ac:	bl	402620 <free@plt>
  41b6b0:	mov	w0, #0x8                   	// #8
  41b6b4:	mov	w1, #0x100                 	// #256
  41b6b8:	bl	402480 <calloc@plt>
  41b6bc:	str	x0, [x27]
  41b6c0:	cbnz	x0, 41b948 <_obstack_memory_used@@Base+0x36b8>
  41b6c4:	b	41bbb8 <_obstack_memory_used@@Base+0x3928>
  41b6c8:	ldr	x0, [sp, #40]
  41b6cc:	bl	402620 <free@plt>
  41b6d0:	ldr	x8, [sp, #96]
  41b6d4:	cbz	x8, 41b6b0 <_obstack_memory_used@@Base+0x3420>
  41b6d8:	b	41bbb8 <_obstack_memory_used@@Base+0x3928>
  41b6dc:	mov	w0, #0x8                   	// #8
  41b6e0:	mov	w1, #0x200                 	// #512
  41b6e4:	bl	402480 <calloc@plt>
  41b6e8:	ldr	x8, [sp, #128]
  41b6ec:	str	x0, [x8, #96]
  41b6f0:	cbz	x0, 41bb14 <_obstack_memory_used@@Base+0x3884>
  41b6f4:	ldr	x8, [sp, #64]
  41b6f8:	cbz	x8, 41b75c <_obstack_memory_used@@Base+0x34cc>
  41b6fc:	ldr	x9, [sp, #80]
  41b700:	ldr	x10, [sp, #64]
  41b704:	mov	x8, xzr
  41b708:	mov	w11, #0x1                   	// #1
  41b70c:	sub	x9, x9, #0x8
  41b710:	tbnz	w10, #0, 41b728 <_obstack_memory_used@@Base+0x3498>
  41b714:	lsl	x11, x11, #1
  41b718:	lsr	x10, x10, #1
  41b71c:	add	x8, x8, #0x1
  41b720:	cbnz	x10, 41b710 <_obstack_memory_used@@Base+0x3480>
  41b724:	b	41b75c <_obstack_memory_used@@Base+0x34cc>
  41b728:	ldr	x13, [sp, #24]
  41b72c:	mov	x12, x9
  41b730:	ldr	x14, [x13], #32
  41b734:	add	x12, x12, #0x8
  41b738:	tst	x14, x11
  41b73c:	b.eq	41b730 <_obstack_memory_used@@Base+0x34a0>  // b.none
  41b740:	ldr	x14, [sp, #96]
  41b744:	ldr	x13, [x12]
  41b748:	ldr	x12, [x12, x14, lsl #3]
  41b74c:	add	x14, x0, x8, lsl #3
  41b750:	str	x13, [x14]
  41b754:	str	x12, [x14, #2048]
  41b758:	b	41b714 <_obstack_memory_used@@Base+0x3484>
  41b75c:	cbz	x22, 41b7c8 <_obstack_memory_used@@Base+0x3538>
  41b760:	ldr	x8, [sp, #80]
  41b764:	ldr	x10, [sp, #40]
  41b768:	mov	w9, #0x1808                	// #6152
  41b76c:	mov	w11, #0x1                   	// #1
  41b770:	sub	x8, x8, #0x8
  41b774:	add	x9, x10, x9
  41b778:	mov	w10, #0x40                  	// #64
  41b77c:	tbnz	w22, #0, 41b794 <_obstack_memory_used@@Base+0x3504>
  41b780:	lsl	x11, x11, #1
  41b784:	lsr	x22, x22, #1
  41b788:	add	x10, x10, #0x1
  41b78c:	cbnz	x22, 41b77c <_obstack_memory_used@@Base+0x34ec>
  41b790:	b	41b7c8 <_obstack_memory_used@@Base+0x3538>
  41b794:	mov	x13, x9
  41b798:	mov	x12, x8
  41b79c:	ldr	x14, [x13], #32
  41b7a0:	add	x12, x12, #0x8
  41b7a4:	tst	x14, x11
  41b7a8:	b.eq	41b79c <_obstack_memory_used@@Base+0x350c>  // b.none
  41b7ac:	ldr	x14, [sp, #96]
  41b7b0:	ldr	x13, [x12]
  41b7b4:	ldr	x12, [x12, x14, lsl #3]
  41b7b8:	add	x14, x0, x10, lsl #3
  41b7bc:	str	x13, [x14]
  41b7c0:	str	x12, [x14, #2048]
  41b7c4:	b	41b780 <_obstack_memory_used@@Base+0x34f0>
  41b7c8:	cbz	x19, 41b83c <_obstack_memory_used@@Base+0x35ac>
  41b7cc:	ldr	x8, [sp, #80]
  41b7d0:	ldr	x10, [sp, #40]
  41b7d4:	mov	w9, #0x1810                	// #6160
  41b7d8:	mov	w11, #0x1                   	// #1
  41b7dc:	sub	x8, x8, #0x8
  41b7e0:	add	x9, x10, x9
  41b7e4:	mov	w10, #0x80                  	// #128
  41b7e8:	tbnz	w19, #0, 41b808 <_obstack_memory_used@@Base+0x3578>
  41b7ec:	mov	x12, x19
  41b7f0:	lsr	x12, x19, #1
  41b7f4:	lsl	x11, x11, #1
  41b7f8:	add	x10, x10, #0x1
  41b7fc:	mov	x19, x12
  41b800:	cbnz	x12, 41b7e8 <_obstack_memory_used@@Base+0x3558>
  41b804:	b	41b83c <_obstack_memory_used@@Base+0x35ac>
  41b808:	mov	x13, x9
  41b80c:	mov	x12, x8
  41b810:	ldr	x14, [x13], #32
  41b814:	add	x12, x12, #0x8
  41b818:	tst	x14, x11
  41b81c:	b.eq	41b810 <_obstack_memory_used@@Base+0x3580>  // b.none
  41b820:	ldr	x14, [sp, #96]
  41b824:	ldr	x13, [x12]
  41b828:	ldr	x12, [x12, x14, lsl #3]
  41b82c:	add	x14, x0, x10, lsl #3
  41b830:	str	x13, [x14]
  41b834:	str	x12, [x14, #2048]
  41b838:	b	41b7ec <_obstack_memory_used@@Base+0x355c>
  41b83c:	ldr	x8, [sp, #88]
  41b840:	cbz	x8, 41b8b8 <_obstack_memory_used@@Base+0x3628>
  41b844:	ldr	x8, [sp, #80]
  41b848:	ldr	x10, [sp, #40]
  41b84c:	mov	w9, #0x1818                	// #6168
  41b850:	mov	w11, #0x1                   	// #1
  41b854:	sub	x8, x8, #0x8
  41b858:	add	x9, x10, x9
  41b85c:	mov	w10, #0xc0                  	// #192
  41b860:	ldr	x12, [sp, #88]
  41b864:	tbnz	w12, #0, 41b884 <_obstack_memory_used@@Base+0x35f4>
  41b868:	ldr	x12, [sp, #88]
  41b86c:	lsl	x11, x11, #1
  41b870:	add	x10, x10, #0x1
  41b874:	lsr	x12, x12, #1
  41b878:	str	x12, [sp, #88]
  41b87c:	cbnz	x12, 41b860 <_obstack_memory_used@@Base+0x35d0>
  41b880:	b	41b8b8 <_obstack_memory_used@@Base+0x3628>
  41b884:	mov	x13, x9
  41b888:	mov	x12, x8
  41b88c:	ldr	x14, [x13], #32
  41b890:	add	x12, x12, #0x8
  41b894:	tst	x14, x11
  41b898:	b.eq	41b88c <_obstack_memory_used@@Base+0x35fc>  // b.none
  41b89c:	ldr	x14, [sp, #96]
  41b8a0:	ldr	x13, [x12]
  41b8a4:	ldr	x12, [x12, x14, lsl #3]
  41b8a8:	add	x14, x0, x10, lsl #3
  41b8ac:	str	x13, [x14]
  41b8b0:	str	x12, [x14, #2048]
  41b8b4:	b	41b868 <_obstack_memory_used@@Base+0x35d8>
  41b8b8:	ldr	x8, [sp, #64]
  41b8bc:	tbz	w8, #10, 41b908 <_obstack_memory_used@@Base+0x3678>
  41b8c0:	ldr	x9, [sp, #96]
  41b8c4:	ldr	x8, [sp, #80]
  41b8c8:	add	x8, x8, x9, lsl #4
  41b8cc:	ldr	x10, [sp, #24]
  41b8d0:	ldrb	w10, [x10, #1]
  41b8d4:	tbnz	w10, #2, 41b8f4 <_obstack_memory_used@@Base+0x3664>
  41b8d8:	ldr	x10, [sp, #24]
  41b8dc:	add	x8, x8, #0x8
  41b8e0:	subs	x9, x9, #0x1
  41b8e4:	add	x10, x10, #0x20
  41b8e8:	str	x10, [sp, #24]
  41b8ec:	b.ne	41b8cc <_obstack_memory_used@@Base+0x363c>  // b.any
  41b8f0:	b	41b908 <_obstack_memory_used@@Base+0x3678>
  41b8f4:	ldr	x8, [x8]
  41b8f8:	ldr	w9, [sp, #32]
  41b8fc:	str	x8, [x0, #80]
  41b900:	tbz	w9, #0, 41b908 <_obstack_memory_used@@Base+0x3678>
  41b904:	str	x8, [x0, #2128]
  41b908:	ldr	x0, [sp, #80]
  41b90c:	bl	402620 <free@plt>
  41b910:	ldur	x0, [x29, #-24]
  41b914:	bl	402620 <free@plt>
  41b918:	mov	w23, #0x10                  	// #16
  41b91c:	ldr	x8, [sp, #40]
  41b920:	ldr	x0, [x8, x23]
  41b924:	bl	402620 <free@plt>
  41b928:	ldr	x8, [sp, #96]
  41b92c:	add	x23, x23, #0x18
  41b930:	subs	x8, x8, #0x1
  41b934:	str	x8, [sp, #96]
  41b938:	b.ne	41b91c <_obstack_memory_used@@Base+0x368c>  // b.any
  41b93c:	ldr	x0, [sp, #40]
  41b940:	bl	402620 <free@plt>
  41b944:	ldr	x0, [x27]
  41b948:	ldp	x12, x24, [sp, #128]
  41b94c:	ldp	x11, x15, [sp, #104]
  41b950:	ldr	w25, [sp, #120]
  41b954:	ldp	x19, x22, [sp, #8]
  41b958:	cbnz	x0, 41a74c <_obstack_memory_used@@Base+0x24bc>
  41b95c:	b	41ad30 <_obstack_memory_used@@Base+0x2aa0>
  41b960:	add	w1, w8, #0x2
  41b964:	add	x0, sp, #0x130
  41b968:	mov	x23, x11
  41b96c:	mov	x20, x15
  41b970:	mov	x26, x12
  41b974:	bl	4242d4 <_obstack_memory_used@@Base+0xc044>
  41b978:	mov	x12, x26
  41b97c:	mov	x11, x23
  41b980:	mov	x15, x20
  41b984:	stur	w0, [x29, #-100]
  41b988:	cbz	w0, 41a724 <_obstack_memory_used@@Base+0x2494>
  41b98c:	b	41c59c <_obstack_memory_used@@Base+0x430c>
  41b990:	ldr	x8, [sp, #376]
  41b994:	cmp	x8, #0x0
  41b998:	b.le	41babc <_obstack_memory_used@@Base+0x382c>
  41b99c:	ldr	x9, [sp, #392]
  41b9a0:	ldr	x27, [sp, #240]
  41b9a4:	sub	x8, x8, #0x1
  41b9a8:	cmp	x9, x8
  41b9ac:	b.eq	41bac8 <_obstack_memory_used@@Base+0x3838>  // b.none
  41b9b0:	ldr	w9, [sp, #448]
  41b9b4:	cmp	w9, #0x2
  41b9b8:	b.lt	41b9ec <_obstack_memory_used@@Base+0x375c>  // b.tstop
  41b9bc:	ldr	x9, [sp, #320]
  41b9c0:	ldr	w10, [x9, x8, lsl #2]
  41b9c4:	cmn	w10, #0x1
  41b9c8:	b.ne	41ba14 <_obstack_memory_used@@Base+0x3784>  // b.any
  41b9cc:	sub	x8, x8, #0x1
  41b9d0:	cmn	x8, #0x1
  41b9d4:	b.ne	41b9c0 <_obstack_memory_used@@Base+0x3730>  // b.any
  41b9d8:	ldr	w8, [sp, #416]
  41b9dc:	b	41ba44 <_obstack_memory_used@@Base+0x37b4>
  41b9e0:	ldr	x24, [sp, #136]
  41b9e4:	stur	wzr, [x29, #-100]
  41b9e8:	b	41a72c <_obstack_memory_used@@Base+0x249c>
  41b9ec:	ldr	x9, [sp, #312]
  41b9f0:	ldr	x10, [sp, #432]
  41b9f4:	ldrb	w8, [x9, x8]
  41b9f8:	lsr	x9, x8, #3
  41b9fc:	and	x9, x9, #0x18
  41ba00:	ldr	x9, [x10, x9]
  41ba04:	lsr	x9, x9, x8
  41ba08:	tbz	w9, #0, 41ba38 <_obstack_memory_used@@Base+0x37a8>
  41ba0c:	mov	w8, #0x1                   	// #1
  41ba10:	b	41ba44 <_obstack_memory_used@@Base+0x37b4>
  41ba14:	ldrb	w8, [sp, #446]
  41ba18:	cbnz	w8, 41bad0 <_obstack_memory_used@@Base+0x3840>
  41ba1c:	cmp	w10, #0xa
  41ba20:	b.ne	41ba40 <_obstack_memory_used@@Base+0x37b0>  // b.any
  41ba24:	ldrb	w8, [sp, #445]
  41ba28:	cmp	w8, #0x0
  41ba2c:	cset	w8, ne  // ne = any
  41ba30:	lsl	w8, w8, #1
  41ba34:	b	41ba44 <_obstack_memory_used@@Base+0x37b4>
  41ba38:	cmp	w8, #0xa
  41ba3c:	b.eq	41ba24 <_obstack_memory_used@@Base+0x3794>  // b.none
  41ba40:	mov	w8, wzr
  41ba44:	ubfiz	w8, w8, #8, #1
  41ba48:	orr	x8, x8, x26
  41ba4c:	ldr	x26, [x23, x8, lsl #3]
  41ba50:	b	41a754 <_obstack_memory_used@@Base+0x24c4>
  41ba54:	ldr	w8, [sp, #464]
  41ba58:	mov	w9, #0xa                   	// #10
  41ba5c:	and	w8, w8, #0x2
  41ba60:	eor	w8, w8, w9
  41ba64:	b	41a8ec <_obstack_memory_used@@Base+0x265c>
  41ba68:	stur	w0, [x29, #-40]
  41ba6c:	ldr	x27, [sp, #240]
  41ba70:	ldp	x11, x15, [sp, #104]
  41ba74:	mov	x12, x20
  41ba78:	ldr	x24, [sp, #136]
  41ba7c:	mov	x26, xzr
  41ba80:	stur	w0, [x29, #-100]
  41ba84:	b	41a754 <_obstack_memory_used@@Base+0x24c4>
  41ba88:	mov	w0, w20
  41ba8c:	str	x15, [sp, #112]
  41ba90:	bl	402710 <iswalnum@plt>
  41ba94:	cmp	w20, #0x5f
  41ba98:	mov	w8, #0x1                   	// #1
  41ba9c:	b.eq	41bab0 <_obstack_memory_used@@Base+0x3820>  // b.none
  41baa0:	ldr	x27, [sp, #240]
  41baa4:	ldr	x15, [sp, #112]
  41baa8:	cbz	w0, 41a8c4 <_obstack_memory_used@@Base+0x2634>
  41baac:	b	41a8ec <_obstack_memory_used@@Base+0x265c>
  41bab0:	ldr	x27, [sp, #240]
  41bab4:	ldr	x15, [sp, #112]
  41bab8:	b	41a8ec <_obstack_memory_used@@Base+0x265c>
  41babc:	ldr	w8, [sp, #416]
  41bac0:	ldr	x27, [sp, #240]
  41bac4:	b	41ba44 <_obstack_memory_used@@Base+0x37b4>
  41bac8:	mov	w8, #0xa                   	// #10
  41bacc:	b	41ba44 <_obstack_memory_used@@Base+0x37b4>
  41bad0:	mov	w0, w10
  41bad4:	str	x12, [sp, #128]
  41bad8:	str	x11, [sp, #104]
  41badc:	mov	x20, x15
  41bae0:	mov	w27, w10
  41bae4:	bl	402710 <iswalnum@plt>
  41bae8:	cmp	w27, #0x5f
  41baec:	mov	w8, #0x1                   	// #1
  41baf0:	b.eq	41bb54 <_obstack_memory_used@@Base+0x38c4>  // b.none
  41baf4:	mov	w10, w27
  41baf8:	ldr	x27, [sp, #240]
  41bafc:	ldr	x11, [sp, #104]
  41bb00:	ldr	x12, [sp, #128]
  41bb04:	mov	x15, x20
  41bb08:	cbz	w0, 41ba1c <_obstack_memory_used@@Base+0x378c>
  41bb0c:	b	41ba44 <_obstack_memory_used@@Base+0x37b4>
  41bb10:	stur	w0, [x29, #-12]
  41bb14:	ldr	x0, [sp, #80]
  41bb18:	bl	402620 <free@plt>
  41bb1c:	ldur	x0, [x29, #-24]
  41bb20:	bl	402620 <free@plt>
  41bb24:	ldr	x8, [sp, #96]
  41bb28:	cmp	x8, #0x1
  41bb2c:	b.lt	41bbb0 <_obstack_memory_used@@Base+0x3920>  // b.tstop
  41bb30:	ldr	x8, [sp, #40]
  41bb34:	add	x23, x8, #0x10
  41bb38:	ldr	x0, [x23], #24
  41bb3c:	bl	402620 <free@plt>
  41bb40:	ldr	x8, [sp, #96]
  41bb44:	subs	x8, x8, #0x1
  41bb48:	str	x8, [sp, #96]
  41bb4c:	b.ne	41bb38 <_obstack_memory_used@@Base+0x38a8>  // b.any
  41bb50:	b	41bbb0 <_obstack_memory_used@@Base+0x3920>
  41bb54:	ldr	x27, [sp, #240]
  41bb58:	ldr	x11, [sp, #104]
  41bb5c:	ldr	x12, [sp, #128]
  41bb60:	mov	x15, x20
  41bb64:	b	41ba44 <_obstack_memory_used@@Base+0x37b4>
  41bb68:	ldr	x8, [sp, #88]
  41bb6c:	b	41bb78 <_obstack_memory_used@@Base+0x38e8>
  41bb70:	ldr	x8, [sp, #88]
  41bb74:	stp	xzr, xzr, [x24]
  41bb78:	stp	x8, x25, [x29, #-80]
  41bb7c:	ldr	x8, [sp, #80]
  41bb80:	stp	x8, x22, [x29, #-96]
  41bb84:	ldr	x8, [sp, #96]
  41bb88:	cmp	x8, #0x1
  41bb8c:	b.lt	41bbb0 <_obstack_memory_used@@Base+0x3920>  // b.tstop
  41bb90:	ldr	x8, [sp, #40]
  41bb94:	add	x23, x8, #0x10
  41bb98:	ldr	x0, [x23], #24
  41bb9c:	bl	402620 <free@plt>
  41bba0:	ldr	x8, [sp, #96]
  41bba4:	subs	x8, x8, #0x1
  41bba8:	str	x8, [sp, #96]
  41bbac:	b.ne	41bb98 <_obstack_memory_used@@Base+0x3908>  // b.any
  41bbb0:	ldr	x0, [sp, #40]
  41bbb4:	bl	402620 <free@plt>
  41bbb8:	ldp	x12, x24, [sp, #128]
  41bbbc:	ldr	x27, [sp, #240]
  41bbc0:	ldp	x11, x15, [sp, #104]
  41bbc4:	ldr	w25, [sp, #120]
  41bbc8:	ldp	x19, x22, [sp, #8]
  41bbcc:	mov	w8, #0xc                   	// #12
  41bbd0:	mov	x26, xzr
  41bbd4:	stur	w8, [x29, #-100]
  41bbd8:	b	41a754 <_obstack_memory_used@@Base+0x24c4>
  41bbdc:	ldr	x8, [sp, #64]
  41bbe0:	stp	xzr, xzr, [x23]
  41bbe4:	str	x8, [sp, #96]
  41bbe8:	b	41bb84 <_obstack_memory_used@@Base+0x38f4>
  41bbec:	mov	x0, x19
  41bbf0:	bl	402620 <free@plt>
  41bbf4:	b	41bb30 <_obstack_memory_used@@Base+0x38a0>
  41bbf8:	ldr	x8, [sp, #192]
  41bbfc:	str	x8, [sp, #256]
  41bc00:	ldr	x9, [sp, #256]
  41bc04:	cbnz	x9, 41bc18 <_obstack_memory_used@@Base+0x3988>
  41bc08:	b	41bc24 <_obstack_memory_used@@Base+0x3994>
  41bc0c:	mov	x15, x20
  41bc10:	ldr	x9, [sp, #256]
  41bc14:	cbz	x9, 41bc24 <_obstack_memory_used@@Base+0x3994>
  41bc18:	ldr	x8, [x9]
  41bc1c:	add	x8, x8, x15
  41bc20:	str	x8, [x9]
  41bc24:	ldr	x25, [sp, #288]
  41bc28:	cmn	x28, #0x1
  41bc2c:	b.eq	41bef0 <_obstack_memory_used@@Base+0x3c60>  // b.none
  41bc30:	cmn	x28, #0x2
  41bc34:	b.eq	41c59c <_obstack_memory_used@@Base+0x430c>  // b.none
  41bc38:	ldr	x25, [sp, #264]
  41bc3c:	str	x28, [sp, #472]
  41bc40:	ldr	x26, [sp, #232]
  41bc44:	ldrb	w8, [x25, #56]
  41bc48:	cmp	x26, #0x2
  41bc4c:	b.cc	41bc54 <_obstack_memory_used@@Base+0x39c4>  // b.lo, b.ul, b.last
  41bc50:	tbz	w8, #4, 41bc5c <_obstack_memory_used@@Base+0x39cc>
  41bc54:	ldr	x9, [x24, #152]
  41bc58:	cbz	x9, 41bd74 <_obstack_memory_used@@Base+0x3ae4>
  41bc5c:	ldr	x8, [sp, #488]
  41bc60:	ldr	x23, [x8, x28, lsl #3]
  41bc64:	tbnz	x28, #63, 41bc9c <_obstack_memory_used@@Base+0x3a0c>
  41bc68:	ldr	x8, [sp, #392]
  41bc6c:	cmp	x8, x28
  41bc70:	b.eq	41c07c <_obstack_memory_used@@Base+0x3dec>  // b.none
  41bc74:	ldr	w8, [sp, #448]
  41bc78:	cmp	w8, #0x2
  41bc7c:	b.lt	41bca4 <_obstack_memory_used@@Base+0x3a14>  // b.tstop
  41bc80:	ldr	x8, [sp, #320]
  41bc84:	ldr	w20, [x8, x28, lsl #2]
  41bc88:	cmn	w20, #0x1
  41bc8c:	b.ne	41bccc <_obstack_memory_used@@Base+0x3a3c>  // b.any
  41bc90:	sub	x28, x28, #0x1
  41bc94:	cmn	x28, #0x1
  41bc98:	b.ne	41bc84 <_obstack_memory_used@@Base+0x39f4>  // b.any
  41bc9c:	ldr	w8, [sp, #416]
  41bca0:	b	41bcfc <_obstack_memory_used@@Base+0x3a6c>
  41bca4:	ldr	x8, [sp, #312]
  41bca8:	ldr	x9, [sp, #432]
  41bcac:	ldrb	w8, [x8, x28]
  41bcb0:	lsr	x10, x8, #3
  41bcb4:	and	x10, x10, #0x18
  41bcb8:	ldr	x9, [x9, x10]
  41bcbc:	lsr	x9, x9, x8
  41bcc0:	tbz	w9, #0, 41bcf0 <_obstack_memory_used@@Base+0x3a60>
  41bcc4:	mov	w8, #0x1                   	// #1
  41bcc8:	b	41bcfc <_obstack_memory_used@@Base+0x3a6c>
  41bccc:	ldrb	w8, [sp, #446]
  41bcd0:	cbnz	w8, 41c110 <_obstack_memory_used@@Base+0x3e80>
  41bcd4:	cmp	w20, #0xa
  41bcd8:	b.ne	41bcf8 <_obstack_memory_used@@Base+0x3a68>  // b.any
  41bcdc:	ldrb	w8, [sp, #445]
  41bce0:	cmp	w8, #0x0
  41bce4:	cset	w8, ne  // ne = any
  41bce8:	lsl	w8, w8, #1
  41bcec:	b	41bcfc <_obstack_memory_used@@Base+0x3a6c>
  41bcf0:	cmp	w8, #0xa
  41bcf4:	b.eq	41bcdc <_obstack_memory_used@@Base+0x3a4c>  // b.none
  41bcf8:	mov	w8, wzr
  41bcfc:	ldr	x9, [x23, #16]
  41bd00:	cmp	x9, #0x1
  41bd04:	b.lt	41bd68 <_obstack_memory_used@@Base+0x3ad8>  // b.tstop
  41bd08:	ldr	x11, [sp, #456]
  41bd0c:	ldr	x10, [x23, #24]
  41bd10:	ldr	x11, [x11]
  41bd14:	b	41bd24 <_obstack_memory_used@@Base+0x3a94>
  41bd18:	subs	x9, x9, #0x1
  41bd1c:	add	x10, x10, #0x8
  41bd20:	b.eq	41bd68 <_obstack_memory_used@@Base+0x3ad8>  // b.none
  41bd24:	ldr	x12, [x10]
  41bd28:	add	x13, x11, x12, lsl #4
  41bd2c:	ldr	w13, [x13, #8]
  41bd30:	and	w14, w13, #0xff
  41bd34:	cmp	w14, #0x2
  41bd38:	b.ne	41bd18 <_obstack_memory_used@@Base+0x3a88>  // b.any
  41bd3c:	tst	w13, #0x3ff00
  41bd40:	b.eq	41bd6c <_obstack_memory_used@@Base+0x3adc>  // b.none
  41bd44:	tbnz	w8, #0, 41bd4c <_obstack_memory_used@@Base+0x3abc>
  41bd48:	tbnz	w13, #10, 41bd18 <_obstack_memory_used@@Base+0x3a88>
  41bd4c:	tbz	w8, #0, 41bd54 <_obstack_memory_used@@Base+0x3ac4>
  41bd50:	tbnz	w13, #11, 41bd18 <_obstack_memory_used@@Base+0x3a88>
  41bd54:	tbnz	w8, #1, 41bd5c <_obstack_memory_used@@Base+0x3acc>
  41bd58:	tbnz	w13, #13, 41bd18 <_obstack_memory_used@@Base+0x3a88>
  41bd5c:	tbnz	w8, #3, 41bd6c <_obstack_memory_used@@Base+0x3adc>
  41bd60:	tbnz	w13, #15, 41bd18 <_obstack_memory_used@@Base+0x3a88>
  41bd64:	b	41bd6c <_obstack_memory_used@@Base+0x3adc>
  41bd68:	mov	x12, xzr
  41bd6c:	str	x12, [sp, #480]
  41bd70:	ldrb	w8, [x25, #56]
  41bd74:	cmp	x26, #0x2
  41bd78:	b.cc	41bd88 <_obstack_memory_used@@Base+0x3af8>  // b.lo, b.ul, b.last
  41bd7c:	tbnz	w8, #4, 41bd88 <_obstack_memory_used@@Base+0x3af8>
  41bd80:	ldrb	w8, [x24, #176]
  41bd84:	tbnz	w8, #0, 41bd90 <_obstack_memory_used@@Base+0x3b00>
  41bd88:	ldr	x8, [x24, #152]
  41bd8c:	cbz	x8, 41c4d4 <_obstack_memory_used@@Base+0x4244>
  41bd90:	ldr	x23, [sp, #472]
  41bd94:	mov	x8, #0x1fffffffffffffff    	// #2305843009213693951
  41bd98:	cmp	x23, x8
  41bd9c:	b.cs	41c59c <_obstack_memory_used@@Base+0x430c>  // b.hs, b.nlast
  41bda0:	ldr	x28, [sp, #456]
  41bda4:	ldr	x25, [sp, #480]
  41bda8:	lsl	x8, x23, #3
  41bdac:	add	x20, x8, #0x8
  41bdb0:	mov	x0, x20
  41bdb4:	bl	4023a0 <malloc@plt>
  41bdb8:	mov	x26, x0
  41bdbc:	cbz	x0, 41c700 <_obstack_memory_used@@Base+0x4470>
  41bdc0:	ldr	x8, [x28, #152]
  41bdc4:	cbz	x8, 41bea8 <_obstack_memory_used@@Base+0x3c18>
  41bdc8:	mov	x0, x20
  41bdcc:	bl	4023a0 <malloc@plt>
  41bdd0:	cbz	x0, 41c700 <_obstack_memory_used@@Base+0x4470>
  41bdd4:	mov	w1, wzr
  41bdd8:	mov	x2, x20
  41bddc:	mov	x27, x0
  41bde0:	bl	402470 <memset@plt>
  41bde4:	ldr	x8, [sp, #176]
  41bde8:	add	x0, sp, #0x130
  41bdec:	sub	x1, x29, #0x60
  41bdf0:	stp	x26, x27, [x29, #-96]
  41bdf4:	stp	x25, x23, [x29, #-80]
  41bdf8:	stp	xzr, xzr, [x8, #8]
  41bdfc:	str	xzr, [x8]
  41be00:	bl	4261ac <_obstack_memory_used@@Base+0xdf1c>
  41be04:	cbnz	w0, 41c424 <_obstack_memory_used@@Base+0x4194>
  41be08:	ldr	x8, [x26]
  41be0c:	str	x24, [sp, #136]
  41be10:	cbz	x8, 41c25c <_obstack_memory_used@@Base+0x3fcc>
  41be14:	mov	x24, xzr
  41be18:	ldr	x9, [x27, x24, lsl #3]
  41be1c:	cbnz	x8, 41be40 <_obstack_memory_used@@Base+0x3bb0>
  41be20:	str	x9, [x26, x24, lsl #3]
  41be24:	cmp	x23, x24
  41be28:	b.eq	41be8c <_obstack_memory_used@@Base+0x3bfc>  // b.none
  41be2c:	add	x8, x26, x24, lsl #3
  41be30:	ldr	x8, [x8, #8]
  41be34:	add	x24, x24, #0x1
  41be38:	ldr	x9, [x27, x24, lsl #3]
  41be3c:	cbz	x8, 41be20 <_obstack_memory_used@@Base+0x3b90>
  41be40:	cbz	x9, 41be84 <_obstack_memory_used@@Base+0x3bf4>
  41be44:	add	x1, x8, #0x8
  41be48:	add	x2, x9, #0x8
  41be4c:	sub	x0, x29, #0x28
  41be50:	bl	4246b8 <_obstack_memory_used@@Base+0xc428>
  41be54:	stur	w0, [x29, #-12]
  41be58:	cbnz	w0, 41bf3c <_obstack_memory_used@@Base+0x3cac>
  41be5c:	sub	x0, x29, #0xc
  41be60:	sub	x2, x29, #0x28
  41be64:	mov	x1, x28
  41be68:	bl	425a20 <_obstack_memory_used@@Base+0xd790>
  41be6c:	ldur	x8, [x29, #-24]
  41be70:	str	x0, [x26, x24, lsl #3]
  41be74:	mov	x0, x8
  41be78:	bl	402620 <free@plt>
  41be7c:	ldur	w20, [x29, #-12]
  41be80:	cbnz	w20, 41be90 <_obstack_memory_used@@Base+0x3c00>
  41be84:	cmp	x23, x24
  41be88:	b.ne	41be2c <_obstack_memory_used@@Base+0x3b9c>  // b.any
  41be8c:	mov	w20, wzr
  41be90:	ldr	x24, [sp, #136]
  41be94:	mov	x0, x27
  41be98:	bl	402620 <free@plt>
  41be9c:	cbz	w20, 41c4bc <_obstack_memory_used@@Base+0x422c>
  41bea0:	mov	x27, xzr
  41bea4:	b	41c428 <_obstack_memory_used@@Base+0x4198>
  41bea8:	ldr	x8, [sp, #176]
  41beac:	add	x0, sp, #0x130
  41beb0:	sub	x1, x29, #0x60
  41beb4:	stp	x26, xzr, [x29, #-96]
  41beb8:	stp	x25, x23, [x29, #-80]
  41bebc:	stp	xzr, xzr, [x8]
  41bec0:	str	xzr, [x8, #16]
  41bec4:	bl	4261ac <_obstack_memory_used@@Base+0xdf1c>
  41bec8:	cbnz	w0, 41c104 <_obstack_memory_used@@Base+0x3e74>
  41becc:	ldr	x8, [x26]
  41bed0:	cbnz	x8, 41c4bc <_obstack_memory_used@@Base+0x422c>
  41bed4:	mov	x27, xzr
  41bed8:	ldr	x25, [sp, #288]
  41bedc:	mov	x0, x26
  41bee0:	bl	402620 <free@plt>
  41bee4:	mov	x0, x27
  41bee8:	bl	402620 <free@plt>
  41beec:	ldp	x27, x23, [sp, #240]
  41bef0:	add	x0, sp, #0x130
  41bef4:	bl	422e34 <_obstack_memory_used@@Base+0xaba4>
  41bef8:	ldur	x8, [x29, #-112]
  41befc:	ldr	x9, [sp, #296]
  41bf00:	mov	w20, #0x1                   	// #1
  41bf04:	add	x26, x8, x9
  41bf08:	cmp	x26, x27
  41bf0c:	stur	x26, [x29, #-112]
  41bf10:	b.lt	41c68c <_obstack_memory_used@@Base+0x43fc>  // b.tstop
  41bf14:	cmp	x19, x26
  41bf18:	b.ge	41a384 <_obstack_memory_used@@Base+0x20f4>  // b.tcont
  41bf1c:	b	41c68c <_obstack_memory_used@@Base+0x43fc>
  41bf20:	ldr	x25, [sp, #288]
  41bf24:	ldr	x23, [sp, #248]
  41bf28:	b	41bc28 <_obstack_memory_used@@Base+0x3998>
  41bf2c:	ldr	x23, [sp, #248]
  41bf30:	ldr	x9, [sp, #256]
  41bf34:	cbnz	x9, 41bc18 <_obstack_memory_used@@Base+0x3988>
  41bf38:	b	41bc24 <_obstack_memory_used@@Base+0x3994>
  41bf3c:	mov	w20, w0
  41bf40:	b	41be90 <_obstack_memory_used@@Base+0x3c00>
  41bf44:	tbnz	w8, #31, 41c090 <_obstack_memory_used@@Base+0x3e00>
  41bf48:	ldr	w8, [sp, #188]
  41bf4c:	cbz	w8, 41c0d4 <_obstack_memory_used@@Base+0x3e44>
  41bf50:	mov	x28, x15
  41bf54:	mov	w8, #0x1                   	// #1
  41bf58:	str	x8, [sp, #216]
  41bf5c:	b	41a6bc <_obstack_memory_used@@Base+0x242c>
  41bf60:	ldr	x8, [x26, #16]
  41bf64:	str	x24, [sp, #136]
  41bf68:	cmp	x8, #0x1
  41bf6c:	b.lt	41c040 <_obstack_memory_used@@Base+0x3db0>  // b.tstop
  41bf70:	ldr	x23, [sp, #456]
  41bf74:	mov	x24, xzr
  41bf78:	str	x15, [sp, #112]
  41bf7c:	b	41bfa8 <_obstack_memory_used@@Base+0x3d18>
  41bf80:	add	x9, x27, #0x1
  41bf84:	str	x25, [x8, #8]
  41bf88:	str	x9, [sp, #536]
  41bf8c:	str	xzr, [x8]
  41bf90:	ldr	x8, [x26, #16]
  41bf94:	ldr	x27, [sp, #240]
  41bf98:	ldr	x15, [sp, #112]
  41bf9c:	add	x24, x24, #0x1
  41bfa0:	cmp	x24, x8
  41bfa4:	b.ge	41c040 <_obstack_memory_used@@Base+0x3db0>  // b.tcont
  41bfa8:	ldr	x9, [x26, #24]
  41bfac:	ldr	x25, [x9, x24, lsl #3]
  41bfb0:	ldr	x9, [x23]
  41bfb4:	add	x10, x9, x25, lsl #4
  41bfb8:	ldrb	w10, [x10, #8]
  41bfbc:	cmp	w10, #0x8
  41bfc0:	b.ne	41bf9c <_obstack_memory_used@@Base+0x3d0c>  // b.any
  41bfc4:	lsl	x10, x25, #4
  41bfc8:	ldr	x9, [x9, x10]
  41bfcc:	cmp	x9, #0x3f
  41bfd0:	b.gt	41bf9c <_obstack_memory_used@@Base+0x3d0c>
  41bfd4:	ldr	x10, [x23, #160]
  41bfd8:	lsr	x9, x10, x9
  41bfdc:	tbz	w9, #0, 41bf9c <_obstack_memory_used@@Base+0x3d0c>
  41bfe0:	ldr	x28, [sp, #544]
  41bfe4:	ldr	x27, [sp, #536]
  41bfe8:	ldr	x20, [sp, #552]
  41bfec:	cmp	x27, x28
  41bff0:	b.eq	41c018 <_obstack_memory_used@@Base+0x3d88>  // b.none
  41bff4:	mov	w0, #0x1                   	// #1
  41bff8:	mov	w1, #0x30                  	// #48
  41bffc:	bl	402480 <calloc@plt>
  41c000:	lsl	x8, x27, #3
  41c004:	str	x0, [x20, x8]
  41c008:	ldr	x9, [sp, #552]
  41c00c:	ldr	x8, [x9, x8]
  41c010:	cbnz	x8, 41bf80 <_obstack_memory_used@@Base+0x3cf0>
  41c014:	b	41c458 <_obstack_memory_used@@Base+0x41c8>
  41c018:	lsl	x1, x28, #4
  41c01c:	mov	x0, x20
  41c020:	bl	4024c0 <realloc@plt>
  41c024:	cbz	x0, 41c458 <_obstack_memory_used@@Base+0x41c8>
  41c028:	ldr	x27, [sp, #536]
  41c02c:	mov	x20, x0
  41c030:	lsl	x8, x28, #1
  41c034:	str	x0, [sp, #552]
  41c038:	str	x8, [sp, #544]
  41c03c:	b	41bff4 <_obstack_memory_used@@Base+0x3d64>
  41c040:	stur	wzr, [x29, #-100]
  41c044:	ldrb	w8, [x26, #104]
  41c048:	ldr	x24, [sp, #136]
  41c04c:	ldr	x23, [sp, #248]
  41c050:	mov	w25, wzr
  41c054:	tbz	w8, #6, 41a6ac <_obstack_memory_used@@Base+0x241c>
  41c058:	add	x1, x26, #0x8
  41c05c:	add	x0, sp, #0x130
  41c060:	mov	x20, x15
  41c064:	bl	423a28 <_obstack_memory_used@@Base+0xb798>
  41c068:	stur	w0, [x29, #-100]
  41c06c:	cbnz	w0, 41c478 <_obstack_memory_used@@Base+0x41e8>
  41c070:	mov	w25, wzr
  41c074:	mov	x15, x20
  41c078:	b	41a6ac <_obstack_memory_used@@Base+0x241c>
  41c07c:	ldr	w8, [sp, #464]
  41c080:	mov	w9, #0xa                   	// #10
  41c084:	and	w8, w8, #0x2
  41c088:	eor	w8, w8, w9
  41c08c:	b	41bcfc <_obstack_memory_used@@Base+0x3a6c>
  41c090:	tbnz	x15, #63, 41c0cc <_obstack_memory_used@@Base+0x3e3c>
  41c094:	ldr	x8, [sp, #392]
  41c098:	cmp	x8, x15
  41c09c:	b.eq	41c464 <_obstack_memory_used@@Base+0x41d4>  // b.none
  41c0a0:	ldr	w8, [sp, #448]
  41c0a4:	cmp	w8, #0x2
  41c0a8:	b.lt	41c0dc <_obstack_memory_used@@Base+0x3e4c>  // b.tstop
  41c0ac:	ldr	x8, [sp, #320]
  41c0b0:	mov	x9, x15
  41c0b4:	ldr	w20, [x8, x9, lsl #2]
  41c0b8:	cmn	w20, #0x1
  41c0bc:	b.ne	41c12c <_obstack_memory_used@@Base+0x3e9c>  // b.any
  41c0c0:	sub	x9, x9, #0x1
  41c0c4:	cmn	x9, #0x1
  41c0c8:	b.ne	41c0b4 <_obstack_memory_used@@Base+0x3e24>  // b.any
  41c0cc:	ldr	w8, [sp, #416]
  41c0d0:	b	41c17c <_obstack_memory_used@@Base+0x3eec>
  41c0d4:	mov	x28, x15
  41c0d8:	b	41bc24 <_obstack_memory_used@@Base+0x3994>
  41c0dc:	ldr	x8, [sp, #312]
  41c0e0:	ldr	x9, [sp, #432]
  41c0e4:	ldrb	w8, [x8, x15]
  41c0e8:	lsr	x10, x8, #3
  41c0ec:	and	x10, x10, #0x18
  41c0f0:	ldr	x9, [x9, x10]
  41c0f4:	lsr	x9, x9, x8
  41c0f8:	tbz	w9, #0, 41c150 <_obstack_memory_used@@Base+0x3ec0>
  41c0fc:	mov	w8, #0x1                   	// #1
  41c100:	b	41c17c <_obstack_memory_used@@Base+0x3eec>
  41c104:	mov	w20, w0
  41c108:	mov	x27, xzr
  41c10c:	b	41c428 <_obstack_memory_used@@Base+0x4198>
  41c110:	mov	w0, w20
  41c114:	bl	402710 <iswalnum@plt>
  41c118:	cmp	w20, #0x5f
  41c11c:	mov	w8, #0x1                   	// #1
  41c120:	b.eq	41bcfc <_obstack_memory_used@@Base+0x3a6c>  // b.none
  41c124:	cbz	w0, 41bcd4 <_obstack_memory_used@@Base+0x3a44>
  41c128:	b	41bcfc <_obstack_memory_used@@Base+0x3a6c>
  41c12c:	ldrb	w8, [sp, #446]
  41c130:	cbnz	w8, 41c480 <_obstack_memory_used@@Base+0x41f0>
  41c134:	cmp	w20, #0xa
  41c138:	b.ne	41c16c <_obstack_memory_used@@Base+0x3edc>  // b.any
  41c13c:	ldrb	w8, [sp, #445]
  41c140:	cmp	w8, #0x0
  41c144:	cset	w8, ne  // ne = any
  41c148:	lsl	w8, w8, #1
  41c14c:	b	41c17c <_obstack_memory_used@@Base+0x3eec>
  41c150:	cmp	w8, #0xa
  41c154:	b.ne	41c174 <_obstack_memory_used@@Base+0x3ee4>  // b.any
  41c158:	ldrb	w8, [sp, #445]
  41c15c:	cmp	w8, #0x0
  41c160:	cset	w8, ne  // ne = any
  41c164:	lsl	w8, w8, #1
  41c168:	b	41c178 <_obstack_memory_used@@Base+0x3ee8>
  41c16c:	mov	w8, wzr
  41c170:	b	41c17c <_obstack_memory_used@@Base+0x3eec>
  41c174:	mov	w8, wzr
  41c178:	ldp	x27, x23, [sp, #240]
  41c17c:	ldr	x9, [x26, #16]
  41c180:	cmp	x9, #0x1
  41c184:	b.lt	41a6b4 <_obstack_memory_used@@Base+0x2424>  // b.tstop
  41c188:	ldr	x11, [sp, #456]
  41c18c:	ldr	x10, [x26, #24]
  41c190:	ldr	x11, [x11]
  41c194:	b	41c1ac <_obstack_memory_used@@Base+0x3f1c>
  41c198:	subs	x9, x9, #0x1
  41c19c:	add	x10, x10, #0x8
  41c1a0:	mov	x28, #0xffffffffffffffff    	// #-1
  41c1a4:	str	xzr, [sp, #216]
  41c1a8:	b.eq	41a6bc <_obstack_memory_used@@Base+0x242c>  // b.none
  41c1ac:	ldr	x12, [x10]
  41c1b0:	add	x13, x11, x12, lsl #4
  41c1b4:	ldr	w13, [x13, #8]
  41c1b8:	and	w14, w13, #0xff
  41c1bc:	cmp	w14, #0x2
  41c1c0:	b.ne	41c198 <_obstack_memory_used@@Base+0x3f08>  // b.any
  41c1c4:	tst	w13, #0x3ff00
  41c1c8:	b.eq	41c1ec <_obstack_memory_used@@Base+0x3f5c>  // b.none
  41c1cc:	tbnz	w8, #0, 41c1d4 <_obstack_memory_used@@Base+0x3f44>
  41c1d0:	tbnz	w13, #10, 41c198 <_obstack_memory_used@@Base+0x3f08>
  41c1d4:	tbz	w8, #0, 41c1dc <_obstack_memory_used@@Base+0x3f4c>
  41c1d8:	tbnz	w13, #11, 41c198 <_obstack_memory_used@@Base+0x3f08>
  41c1dc:	tbnz	w8, #1, 41c1e4 <_obstack_memory_used@@Base+0x3f54>
  41c1e0:	tbnz	w13, #13, 41c198 <_obstack_memory_used@@Base+0x3f08>
  41c1e4:	tbnz	w8, #3, 41c1ec <_obstack_memory_used@@Base+0x3f5c>
  41c1e8:	tbnz	w13, #15, 41c198 <_obstack_memory_used@@Base+0x3f08>
  41c1ec:	ldr	w9, [sp, #188]
  41c1f0:	cmp	x12, #0x0
  41c1f4:	cset	w8, ne  // ne = any
  41c1f8:	str	x8, [sp, #216]
  41c1fc:	cset	w8, eq  // eq = none
  41c200:	orr	w8, w9, w8
  41c204:	mov	x9, x15
  41c208:	csinv	x28, x15, xzr, ne  // ne = any
  41c20c:	tbz	w8, #0, 41c21c <_obstack_memory_used@@Base+0x3f8c>
  41c210:	ldp	x27, x23, [sp, #240]
  41c214:	mov	x15, x9
  41c218:	b	41a6bc <_obstack_memory_used@@Base+0x242c>
  41c21c:	ldr	x25, [sp, #288]
  41c220:	ldp	x27, x23, [sp, #240]
  41c224:	mov	x28, x9
  41c228:	b	41bc28 <_obstack_memory_used@@Base+0x3998>
  41c22c:	ldr	w8, [sp, #464]
  41c230:	mov	w9, #0xa                   	// #10
  41c234:	and	w8, w8, #0x2
  41c238:	eor	w8, w8, w9
  41c23c:	b	41c354 <_obstack_memory_used@@Base+0x40c4>
  41c240:	mov	w0, w25
  41c244:	bl	402710 <iswalnum@plt>
  41c248:	cmp	w25, #0x5f
  41c24c:	mov	w8, #0x1                   	// #1
  41c250:	b.eq	41c354 <_obstack_memory_used@@Base+0x40c4>  // b.none
  41c254:	cbz	w0, 41c32c <_obstack_memory_used@@Base+0x409c>
  41c258:	b	41c354 <_obstack_memory_used@@Base+0x40c4>
  41c25c:	ldr	x8, [x27]
  41c260:	cbnz	x8, 41c40c <_obstack_memory_used@@Base+0x417c>
  41c264:	cmp	x23, #0x1
  41c268:	b.lt	41bed8 <_obstack_memory_used@@Base+0x3c48>  // b.tstop
  41c26c:	ldr	x8, [sp, #488]
  41c270:	ldr	x25, [sp, #288]
  41c274:	lsl	x20, x23, #3
  41c278:	sub	x9, x8, #0x8
  41c27c:	mov	x8, x23
  41c280:	b	41c298 <_obstack_memory_used@@Base+0x4008>
  41c284:	add	x8, x23, #0x1
  41c288:	cmp	x8, #0x2
  41c28c:	sub	x20, x20, #0x8
  41c290:	mov	x8, x23
  41c294:	b.lt	41c41c <_obstack_memory_used@@Base+0x418c>  // b.tstop
  41c298:	ldr	x24, [x9, x8, lsl #3]
  41c29c:	sub	x23, x8, #0x1
  41c2a0:	cbz	x24, 41c284 <_obstack_memory_used@@Base+0x3ff4>
  41c2a4:	ldrb	w10, [x24, #104]
  41c2a8:	tbz	w10, #4, 41c284 <_obstack_memory_used@@Base+0x3ff4>
  41c2ac:	cmp	x8, #0x0
  41c2b0:	b.le	41c2f0 <_obstack_memory_used@@Base+0x4060>
  41c2b4:	ldr	x9, [sp, #392]
  41c2b8:	add	x9, x9, #0x1
  41c2bc:	cmp	x9, x8
  41c2c0:	b.eq	41c22c <_obstack_memory_used@@Base+0x3f9c>  // b.none
  41c2c4:	ldr	w9, [sp, #448]
  41c2c8:	cmp	w9, #0x2
  41c2cc:	b.lt	41c2f8 <_obstack_memory_used@@Base+0x4068>  // b.tstop
  41c2d0:	ldr	x8, [sp, #320]
  41c2d4:	mov	x9, x23
  41c2d8:	ldr	w25, [x8, x9, lsl #2]
  41c2dc:	cmn	w25, #0x1
  41c2e0:	b.ne	41c324 <_obstack_memory_used@@Base+0x4094>  // b.any
  41c2e4:	sub	x9, x9, #0x1
  41c2e8:	cmn	x9, #0x1
  41c2ec:	b.ne	41c2d8 <_obstack_memory_used@@Base+0x4048>  // b.any
  41c2f0:	ldr	w8, [sp, #416]
  41c2f4:	b	41c354 <_obstack_memory_used@@Base+0x40c4>
  41c2f8:	ldr	x9, [sp, #312]
  41c2fc:	ldr	x10, [sp, #432]
  41c300:	add	x8, x9, x8
  41c304:	ldurb	w8, [x8, #-1]
  41c308:	lsr	x9, x8, #3
  41c30c:	and	x9, x9, #0x18
  41c310:	ldr	x9, [x10, x9]
  41c314:	lsr	x9, x9, x8
  41c318:	tbz	w9, #0, 41c348 <_obstack_memory_used@@Base+0x40b8>
  41c31c:	mov	w8, #0x1                   	// #1
  41c320:	b	41c354 <_obstack_memory_used@@Base+0x40c4>
  41c324:	ldrb	w8, [sp, #446]
  41c328:	cbnz	w8, 41c240 <_obstack_memory_used@@Base+0x3fb0>
  41c32c:	cmp	w25, #0xa
  41c330:	b.ne	41c350 <_obstack_memory_used@@Base+0x40c0>  // b.any
  41c334:	ldrb	w8, [sp, #445]
  41c338:	cmp	w8, #0x0
  41c33c:	cset	w8, ne  // ne = any
  41c340:	lsl	w8, w8, #1
  41c344:	b	41c354 <_obstack_memory_used@@Base+0x40c4>
  41c348:	cmp	w8, #0xa
  41c34c:	b.eq	41c334 <_obstack_memory_used@@Base+0x40a4>  // b.none
  41c350:	mov	w8, wzr
  41c354:	ldr	x9, [x24, #16]
  41c358:	cmp	x9, #0x1
  41c35c:	b.lt	41c3c4 <_obstack_memory_used@@Base+0x4134>  // b.tstop
  41c360:	ldr	x11, [sp, #456]
  41c364:	ldr	x10, [x24, #24]
  41c368:	ldr	x24, [sp, #136]
  41c36c:	ldr	x11, [x11]
  41c370:	b	41c380 <_obstack_memory_used@@Base+0x40f0>
  41c374:	subs	x9, x9, #0x1
  41c378:	add	x10, x10, #0x8
  41c37c:	b.eq	41c3c8 <_obstack_memory_used@@Base+0x4138>  // b.none
  41c380:	ldr	x25, [x10]
  41c384:	add	x12, x11, x25, lsl #4
  41c388:	ldr	w12, [x12, #8]
  41c38c:	and	w13, w12, #0xff
  41c390:	cmp	w13, #0x2
  41c394:	b.ne	41c374 <_obstack_memory_used@@Base+0x40e4>  // b.any
  41c398:	tst	w12, #0x3ff00
  41c39c:	b.eq	41c3cc <_obstack_memory_used@@Base+0x413c>  // b.none
  41c3a0:	tbnz	w8, #0, 41c3a8 <_obstack_memory_used@@Base+0x4118>
  41c3a4:	tbnz	w12, #10, 41c374 <_obstack_memory_used@@Base+0x40e4>
  41c3a8:	tbz	w8, #0, 41c3b0 <_obstack_memory_used@@Base+0x4120>
  41c3ac:	tbnz	w12, #11, 41c374 <_obstack_memory_used@@Base+0x40e4>
  41c3b0:	tbnz	w8, #1, 41c3b8 <_obstack_memory_used@@Base+0x4128>
  41c3b4:	tbnz	w12, #13, 41c374 <_obstack_memory_used@@Base+0x40e4>
  41c3b8:	tbnz	w8, #3, 41c3cc <_obstack_memory_used@@Base+0x413c>
  41c3bc:	tbnz	w12, #15, 41c374 <_obstack_memory_used@@Base+0x40e4>
  41c3c0:	b	41c3cc <_obstack_memory_used@@Base+0x413c>
  41c3c4:	ldr	x24, [sp, #136]
  41c3c8:	mov	x25, xzr
  41c3cc:	mov	x0, x27
  41c3d0:	mov	w1, wzr
  41c3d4:	mov	x2, x20
  41c3d8:	bl	402470 <memset@plt>
  41c3dc:	ldr	x8, [sp, #176]
  41c3e0:	add	x0, sp, #0x130
  41c3e4:	sub	x1, x29, #0x60
  41c3e8:	stp	x26, x27, [x29, #-96]
  41c3ec:	stp	x25, x23, [x29, #-80]
  41c3f0:	stp	xzr, xzr, [x8, #8]
  41c3f4:	str	xzr, [x8]
  41c3f8:	bl	4261ac <_obstack_memory_used@@Base+0xdf1c>
  41c3fc:	cbnz	w0, 41c424 <_obstack_memory_used@@Base+0x4194>
  41c400:	ldr	x8, [x26]
  41c404:	cbz	x8, 41c25c <_obstack_memory_used@@Base+0x3fcc>
  41c408:	b	41c410 <_obstack_memory_used@@Base+0x4180>
  41c40c:	mov	x8, xzr
  41c410:	tbz	x23, #63, 41be14 <_obstack_memory_used@@Base+0x3b84>
  41c414:	mov	w20, wzr
  41c418:	b	41be94 <_obstack_memory_used@@Base+0x3c04>
  41c41c:	ldr	x24, [sp, #136]
  41c420:	b	41bedc <_obstack_memory_used@@Base+0x3c4c>
  41c424:	mov	w20, w0
  41c428:	mov	x0, x26
  41c42c:	bl	402620 <free@plt>
  41c430:	mov	x0, x27
  41c434:	bl	402620 <free@plt>
  41c438:	ldr	x25, [sp, #264]
  41c43c:	ldp	x26, x27, [sp, #232]
  41c440:	cbz	w20, 41c4d4 <_obstack_memory_used@@Base+0x4244>
  41c444:	ldr	x25, [sp, #288]
  41c448:	ldr	x23, [sp, #248]
  41c44c:	cmp	w20, #0x1
  41c450:	b.eq	41bef0 <_obstack_memory_used@@Base+0x3c60>  // b.none
  41c454:	b	41c68c <_obstack_memory_used@@Base+0x43fc>
  41c458:	ldr	x24, [sp, #136]
  41c45c:	mov	w28, #0xc                   	// #12
  41c460:	b	41bc38 <_obstack_memory_used@@Base+0x39a8>
  41c464:	ldr	w8, [sp, #464]
  41c468:	mov	w9, #0xa                   	// #10
  41c46c:	and	w8, w8, #0x2
  41c470:	eor	w8, w8, w9
  41c474:	b	41c17c <_obstack_memory_used@@Base+0x3eec>
  41c478:	sxtw	x28, w0
  41c47c:	b	41bc24 <_obstack_memory_used@@Base+0x3994>
  41c480:	mov	w0, w20
  41c484:	mov	x28, x15
  41c488:	bl	402710 <iswalnum@plt>
  41c48c:	cmp	w20, #0x5f
  41c490:	mov	w8, #0x1                   	// #1
  41c494:	b.eq	41c4a8 <_obstack_memory_used@@Base+0x4218>  // b.none
  41c498:	ldp	x27, x23, [sp, #240]
  41c49c:	mov	x15, x28
  41c4a0:	cbz	w0, 41c134 <_obstack_memory_used@@Base+0x3ea4>
  41c4a4:	b	41c17c <_obstack_memory_used@@Base+0x3eec>
  41c4a8:	ldp	x27, x23, [sp, #240]
  41c4ac:	mov	x15, x28
  41c4b0:	b	41c17c <_obstack_memory_used@@Base+0x3eec>
  41c4b4:	mov	w20, #0x1                   	// #1
  41c4b8:	b	41c68c <_obstack_memory_used@@Base+0x43fc>
  41c4bc:	ldr	x0, [sp, #488]
  41c4c0:	bl	402620 <free@plt>
  41c4c4:	stp	x25, x26, [sp, #480]
  41c4c8:	ldr	x25, [sp, #264]
  41c4cc:	ldr	x26, [sp, #232]
  41c4d0:	str	x23, [sp, #472]
  41c4d4:	cbz	x26, 41c688 <_obstack_memory_used@@Base+0x43f8>
  41c4d8:	ldp	x21, x19, [sp, #160]
  41c4dc:	cmp	x26, #0x1
  41c4e0:	b.eq	41c500 <_obstack_memory_used@@Base+0x4270>  // b.none
  41c4e4:	ldr	x9, [sp, #152]
  41c4e8:	mvn	x8, x21
  41c4ec:	add	x0, x19, #0x10
  41c4f0:	mov	w1, #0xff                  	// #255
  41c4f4:	add	x8, x8, x9
  41c4f8:	lsl	x2, x8, #4
  41c4fc:	bl	402470 <memset@plt>
  41c500:	ldr	x8, [sp, #472]
  41c504:	cmp	x26, #0x2
  41c508:	stp	xzr, x8, [x19]
  41c50c:	b.cc	41c574 <_obstack_memory_used@@Base+0x42e4>  // b.lo, b.ul, b.last
  41c510:	ldrb	w8, [x25, #56]
  41c514:	tbnz	w8, #4, 41c574 <_obstack_memory_used@@Base+0x42e4>
  41c518:	ldrb	w8, [x24, #176]
  41c51c:	tbnz	w8, #0, 41c550 <_obstack_memory_used@@Base+0x42c0>
  41c520:	mov	w4, wzr
  41c524:	b	41c55c <_obstack_memory_used@@Base+0x42cc>
  41c528:	ldr	x8, [x8, #16]
  41c52c:	cbz	x8, 41c538 <_obstack_memory_used@@Base+0x42a8>
  41c530:	ldrsb	w8, [x0, #56]
  41c534:	tbnz	w8, #31, 41a0c4 <_obstack_memory_used@@Base+0x1e34>
  41c538:	mov	x23, xzr
  41c53c:	cbz	x26, 41c594 <_obstack_memory_used@@Base+0x4304>
  41c540:	mov	x26, x23
  41c544:	cbz	x4, 41a0c8 <_obstack_memory_used@@Base+0x1e38>
  41c548:	mov	w20, #0x1                   	// #1
  41c54c:	b	41c6d4 <_obstack_memory_used@@Base+0x4444>
  41c550:	ldr	x8, [x24, #152]
  41c554:	cmp	x8, #0x0
  41c558:	cset	w4, gt
  41c55c:	add	x1, sp, #0x130
  41c560:	mov	x0, x25
  41c564:	mov	x2, x26
  41c568:	mov	x3, x19
  41c56c:	bl	422ef8 <_obstack_memory_used@@Base+0xac68>
  41c570:	cbnz	w0, 41c6f8 <_obstack_memory_used@@Base+0x4468>
  41c574:	ldrb	w9, [sp, #444]
  41c578:	ldr	x10, [sp, #352]
  41c57c:	ldr	x11, [sp, #328]
  41c580:	ldur	x12, [x29, #-112]
  41c584:	ldr	x17, [sp, #144]
  41c588:	mov	x8, xzr
  41c58c:	add	x13, x19, #0x8
  41c590:	b	41c5ec <_obstack_memory_used@@Base+0x435c>
  41c594:	mov	x26, x23
  41c598:	b	41a0c8 <_obstack_memory_used@@Base+0x1e38>
  41c59c:	mov	w20, #0xc                   	// #12
  41c5a0:	b	41c68c <_obstack_memory_used@@Base+0x43fc>
  41c5a4:	add	x15, x11, x14, lsl #3
  41c5a8:	cmp	x14, x10
  41c5ac:	ldr	x16, [x13]
  41c5b0:	csel	x14, x17, x15, eq  // eq = none
  41c5b4:	ldr	x14, [x14]
  41c5b8:	add	x15, x11, x16, lsl #3
  41c5bc:	cmp	x16, x10
  41c5c0:	stur	x14, [x13, #-8]
  41c5c4:	csel	x15, x17, x15, eq  // eq = none
  41c5c8:	ldr	x15, [x15]
  41c5cc:	str	x15, [x13]
  41c5d0:	add	x14, x14, x12
  41c5d4:	add	x15, x15, x12
  41c5d8:	stp	x14, x15, [x13, #-8]
  41c5dc:	add	x8, x8, #0x1
  41c5e0:	cmp	x8, x26
  41c5e4:	add	x13, x13, #0x10
  41c5e8:	b.cs	41c604 <_obstack_memory_used@@Base+0x4374>  // b.hs, b.nlast
  41c5ec:	ldur	x14, [x13, #-8]
  41c5f0:	cmn	x14, #0x1
  41c5f4:	b.eq	41c5dc <_obstack_memory_used@@Base+0x434c>  // b.none
  41c5f8:	cbnz	w9, 41c5a4 <_obstack_memory_used@@Base+0x4314>
  41c5fc:	ldr	x15, [x13]
  41c600:	b	41c5d0 <_obstack_memory_used@@Base+0x4340>
  41c604:	cmp	x21, #0x1
  41c608:	b.lt	41c61c <_obstack_memory_used@@Base+0x438c>  // b.tstop
  41c60c:	add	x0, x19, x26, lsl #4
  41c610:	lsl	x2, x21, #4
  41c614:	mov	w1, #0xff                  	// #255
  41c618:	bl	402470 <memset@plt>
  41c61c:	ldr	x8, [x24, #224]
  41c620:	mov	w20, wzr
  41c624:	cbz	x8, 41c68c <_obstack_memory_used@@Base+0x43fc>
  41c628:	cmp	x26, #0x2
  41c62c:	b.cc	41c68c <_obstack_memory_used@@Base+0x43fc>  // b.lo, b.ul, b.last
  41c630:	ldp	x11, x10, [sp, #152]
  41c634:	ldr	x13, [sp, #168]
  41c638:	mov	x9, xzr
  41c63c:	mvn	x10, x10
  41c640:	add	x10, x10, x11
  41c644:	add	x11, x13, #0x18
  41c648:	b	41c65c <_obstack_memory_used@@Base+0x43cc>
  41c64c:	add	x9, x9, #0x1
  41c650:	cmp	x10, x9
  41c654:	add	x11, x11, #0x10
  41c658:	b.eq	41c688 <_obstack_memory_used@@Base+0x43f8>  // b.none
  41c65c:	ldr	x12, [x8, x9, lsl #3]
  41c660:	cmp	x9, x12
  41c664:	b.eq	41c64c <_obstack_memory_used@@Base+0x43bc>  // b.none
  41c668:	add	x12, x13, x12, lsl #4
  41c66c:	ldr	x12, [x12, #16]
  41c670:	stur	x12, [x11, #-8]
  41c674:	ldr	x12, [x8, x9, lsl #3]
  41c678:	add	x12, x13, x12, lsl #4
  41c67c:	ldr	x12, [x12, #24]
  41c680:	str	x12, [x11]
  41c684:	b	41c64c <_obstack_memory_used@@Base+0x43bc>
  41c688:	mov	w20, wzr
  41c68c:	ldr	x0, [sp, #488]
  41c690:	bl	402620 <free@plt>
  41c694:	ldr	x8, [x24, #152]
  41c698:	cbz	x8, 41c6b4 <_obstack_memory_used@@Base+0x4424>
  41c69c:	add	x0, sp, #0x130
  41c6a0:	bl	422e34 <_obstack_memory_used@@Base+0xaba4>
  41c6a4:	ldr	x0, [sp, #552]
  41c6a8:	bl	402620 <free@plt>
  41c6ac:	ldr	x0, [sp, #520]
  41c6b0:	bl	402620 <free@plt>
  41c6b4:	ldr	x0, [sp, #320]
  41c6b8:	bl	402620 <free@plt>
  41c6bc:	ldr	x0, [sp, #328]
  41c6c0:	bl	402620 <free@plt>
  41c6c4:	ldrb	w8, [sp, #443]
  41c6c8:	cbz	w8, 41c6d4 <_obstack_memory_used@@Base+0x4444>
  41c6cc:	ldr	x0, [sp, #312]
  41c6d0:	bl	402620 <free@plt>
  41c6d4:	mov	w0, w20
  41c6d8:	add	sp, sp, #0x2a0
  41c6dc:	ldp	x20, x19, [sp, #80]
  41c6e0:	ldp	x22, x21, [sp, #64]
  41c6e4:	ldp	x24, x23, [sp, #48]
  41c6e8:	ldp	x26, x25, [sp, #32]
  41c6ec:	ldp	x28, x27, [sp, #16]
  41c6f0:	ldp	x29, x30, [sp], #96
  41c6f4:	ret
  41c6f8:	mov	w20, w0
  41c6fc:	b	41c68c <_obstack_memory_used@@Base+0x43fc>
  41c700:	mov	x0, x26
  41c704:	bl	402620 <free@plt>
  41c708:	mov	w20, #0xc                   	// #12
  41c70c:	b	41c68c <_obstack_memory_used@@Base+0x43fc>
  41c710:	mov	x6, x4
  41c714:	mov	w7, #0x1                   	// #1
  41c718:	mov	x4, xzr
  41c71c:	mov	x5, x2
  41c720:	b	41c724 <_obstack_memory_used@@Base+0x4494>
  41c724:	sub	sp, sp, #0x70
  41c728:	cmp	x3, x2
  41c72c:	cset	w8, gt
  41c730:	orr	x8, x8, x3, lsr #63
  41c734:	stp	x29, x30, [sp, #16]
  41c738:	stp	x28, x27, [sp, #32]
  41c73c:	stp	x26, x25, [sp, #48]
  41c740:	stp	x24, x23, [sp, #64]
  41c744:	stp	x22, x21, [sp, #80]
  41c748:	stp	x20, x19, [sp, #96]
  41c74c:	add	x29, sp, #0x10
  41c750:	cbnz	x8, 41ca10 <_obstack_memory_used@@Base+0x4780>
  41c754:	add	x8, x4, x3
  41c758:	ldrb	w19, [x0, #56]
  41c75c:	bic	x9, x8, x8, asr #63
  41c760:	cmp	x8, x2
  41c764:	csel	x27, x2, x9, gt
  41c768:	mov	x22, x6
  41c76c:	mov	x24, x5
  41c770:	mov	x20, x3
  41c774:	mov	x25, x2
  41c778:	mov	x26, x1
  41c77c:	mov	x21, x0
  41c780:	cmp	x27, x3
  41c784:	stur	w7, [x29, #-4]
  41c788:	b.le	41c7ac <_obstack_memory_used@@Base+0x451c>
  41c78c:	tbnz	w19, #3, 41c7ac <_obstack_memory_used@@Base+0x451c>
  41c790:	ldr	x9, [x21, #32]
  41c794:	mov	w8, w19
  41c798:	cbz	x9, 41c7b0 <_obstack_memory_used@@Base+0x4520>
  41c79c:	mov	x0, x21
  41c7a0:	bl	41960c <_obstack_memory_used@@Base+0x137c>
  41c7a4:	ldrb	w8, [x21, #56]
  41c7a8:	b	41c7b0 <_obstack_memory_used@@Base+0x4520>
  41c7ac:	mov	w8, w19
  41c7b0:	mov	x28, xzr
  41c7b4:	mov	w23, #0x1                   	// #1
  41c7b8:	cbz	x22, 41c7f8 <_obstack_memory_used@@Base+0x4568>
  41c7bc:	tbnz	w8, #4, 41c7f8 <_obstack_memory_used@@Base+0x4568>
  41c7c0:	and	w8, w8, #0x6
  41c7c4:	cmp	w8, #0x4
  41c7c8:	b.ne	41c7ec <_obstack_memory_used@@Base+0x455c>  // b.any
  41c7cc:	ldr	x8, [x22]
  41c7d0:	ldr	x9, [x21, #48]
  41c7d4:	cmp	x8, x9
  41c7d8:	b.hi	41c7f0 <_obstack_memory_used@@Base+0x4560>  // b.pmore
  41c7dc:	cmp	x8, #0x1
  41c7e0:	csel	x28, xzr, x22, lt  // lt = tstop
  41c7e4:	csinc	x23, x8, xzr, ge  // ge = tcont
  41c7e8:	b	41c7f8 <_obstack_memory_used@@Base+0x4568>
  41c7ec:	ldr	x9, [x21, #48]
  41c7f0:	add	x23, x9, #0x1
  41c7f4:	mov	x28, x22
  41c7f8:	lsl	x0, x23, #4
  41c7fc:	bl	4023a0 <malloc@plt>
  41c800:	cbz	x0, 41ca18 <_obstack_memory_used@@Base+0x4788>
  41c804:	mov	x22, x0
  41c808:	ubfx	w8, w19, #5, #2
  41c80c:	mov	x0, x21
  41c810:	mov	x1, x26
  41c814:	mov	x2, x25
  41c818:	mov	x3, x20
  41c81c:	mov	x4, x27
  41c820:	mov	x5, x24
  41c824:	mov	x6, x23
  41c828:	mov	x7, x22
  41c82c:	str	w8, [sp]
  41c830:	bl	419fec <_obstack_memory_used@@Base+0x1d5c>
  41c834:	cbz	w0, 41c870 <_obstack_memory_used@@Base+0x45e0>
  41c838:	cmp	w0, #0x1
  41c83c:	mov	x8, #0xfffffffffffffffe    	// #-2
  41c840:	cinc	x19, x8, eq  // eq = none
  41c844:	mov	x0, x22
  41c848:	bl	402620 <free@plt>
  41c84c:	mov	x0, x19
  41c850:	ldp	x20, x19, [sp, #96]
  41c854:	ldp	x22, x21, [sp, #80]
  41c858:	ldp	x24, x23, [sp, #64]
  41c85c:	ldp	x26, x25, [sp, #48]
  41c860:	ldp	x28, x27, [sp, #32]
  41c864:	ldp	x29, x30, [sp, #16]
  41c868:	add	sp, sp, #0x70
  41c86c:	ret
  41c870:	cbz	x28, 41c9a4 <_obstack_memory_used@@Base+0x4714>
  41c874:	ldrb	w8, [x21, #56]
  41c878:	add	x26, x23, #0x1
  41c87c:	ubfx	w8, w8, #1, #2
  41c880:	cmp	w8, #0x1
  41c884:	b.eq	41c8c8 <_obstack_memory_used@@Base+0x4638>  // b.none
  41c888:	cbnz	w8, 41c8f4 <_obstack_memory_used@@Base+0x4664>
  41c88c:	lsl	x25, x26, #3
  41c890:	mov	x0, x25
  41c894:	bl	4023a0 <malloc@plt>
  41c898:	str	x0, [x28, #8]
  41c89c:	cbz	x0, 41ca58 <_obstack_memory_used@@Base+0x47c8>
  41c8a0:	mov	x24, x0
  41c8a4:	mov	x0, x25
  41c8a8:	bl	4023a0 <malloc@plt>
  41c8ac:	str	x0, [x28, #16]
  41c8b0:	cbz	x0, 41ca50 <_obstack_memory_used@@Base+0x47c0>
  41c8b4:	str	x26, [x28]
  41c8b8:	mov	w8, #0x1                   	// #1
  41c8bc:	cmp	x23, #0x1
  41c8c0:	b.ge	41c904 <_obstack_memory_used@@Base+0x4674>  // b.tcont
  41c8c4:	b	41c8e4 <_obstack_memory_used@@Base+0x4654>
  41c8c8:	ldr	x9, [x28]
  41c8cc:	cmp	x26, x9
  41c8d0:	b.hi	41ca20 <_obstack_memory_used@@Base+0x4790>  // b.pmore
  41c8d4:	mov	w8, #0x1                   	// #1
  41c8d8:	mov	x26, x9
  41c8dc:	cmp	x23, #0x1
  41c8e0:	b.ge	41c904 <_obstack_memory_used@@Base+0x4674>  // b.tcont
  41c8e4:	mov	x23, xzr
  41c8e8:	cmp	x23, x26
  41c8ec:	b.cc	41c96c <_obstack_memory_used@@Base+0x46dc>  // b.lo, b.ul, b.last
  41c8f0:	b	41c990 <_obstack_memory_used@@Base+0x4700>
  41c8f4:	ldr	x26, [x28]
  41c8f8:	mov	w8, #0x2                   	// #2
  41c8fc:	cmp	x23, #0x1
  41c900:	b.lt	41c8e4 <_obstack_memory_used@@Base+0x4654>  // b.tstop
  41c904:	ldp	x9, x10, [x28, #8]
  41c908:	cmp	x23, #0x3
  41c90c:	b.ls	41c92c <_obstack_memory_used@@Base+0x469c>  // b.plast
  41c910:	lsl	x11, x23, #3
  41c914:	add	x12, x10, x11
  41c918:	cmp	x9, x12
  41c91c:	b.cs	41c9c8 <_obstack_memory_used@@Base+0x4738>  // b.hs, b.nlast
  41c920:	add	x11, x9, x11
  41c924:	cmp	x10, x11
  41c928:	b.cs	41c9c8 <_obstack_memory_used@@Base+0x4738>  // b.hs, b.nlast
  41c92c:	mov	x11, xzr
  41c930:	sub	x12, x23, x11
  41c934:	lsl	x13, x11, #3
  41c938:	add	x11, x22, x11, lsl #4
  41c93c:	add	x10, x10, x13
  41c940:	add	x11, x11, #0x8
  41c944:	add	x9, x9, x13
  41c948:	ldur	x13, [x11, #-8]
  41c94c:	subs	x12, x12, #0x1
  41c950:	str	x13, [x9], #8
  41c954:	ldr	x13, [x11], #16
  41c958:	str	x13, [x10], #8
  41c95c:	b.ne	41c948 <_obstack_memory_used@@Base+0x46b8>  // b.any
  41c960:	ldr	x26, [x28]
  41c964:	cmp	x23, x26
  41c968:	b.cs	41c990 <_obstack_memory_used@@Base+0x4700>  // b.hs, b.nlast
  41c96c:	ldp	x10, x9, [x28, #8]
  41c970:	mov	x11, #0xffffffffffffffff    	// #-1
  41c974:	lsl	x12, x23, #3
  41c978:	str	x11, [x9, x12]
  41c97c:	str	x11, [x10, x12]
  41c980:	ldr	x12, [x28]
  41c984:	add	x23, x23, #0x1
  41c988:	cmp	x23, x12
  41c98c:	b.cc	41c974 <_obstack_memory_used@@Base+0x46e4>  // b.lo, b.ul, b.last
  41c990:	ldrb	w9, [x21, #56]
  41c994:	and	w9, w9, #0xfffffff9
  41c998:	orr	w9, w9, w8, lsl #1
  41c99c:	strb	w9, [x21, #56]
  41c9a0:	cbz	w8, 41c9c0 <_obstack_memory_used@@Base+0x4730>
  41c9a4:	ldur	w8, [x29, #-4]
  41c9a8:	tbz	w8, #0, 41c9b8 <_obstack_memory_used@@Base+0x4728>
  41c9ac:	ldr	x8, [x22, #8]
  41c9b0:	sub	x19, x8, x20
  41c9b4:	b	41c844 <_obstack_memory_used@@Base+0x45b4>
  41c9b8:	ldr	x19, [x22]
  41c9bc:	b	41c844 <_obstack_memory_used@@Base+0x45b4>
  41c9c0:	mov	x19, #0xfffffffffffffffe    	// #-2
  41c9c4:	b	41c844 <_obstack_memory_used@@Base+0x45b4>
  41c9c8:	and	x11, x23, #0xfffffffffffffffc
  41c9cc:	add	x12, x22, #0x20
  41c9d0:	add	x13, x9, #0x10
  41c9d4:	add	x14, x10, #0x10
  41c9d8:	mov	x15, x11
  41c9dc:	sub	x16, x12, #0x20
  41c9e0:	ld2	{v0.2d, v1.2d}, [x12]
  41c9e4:	ld2	{v2.2d, v3.2d}, [x16]
  41c9e8:	add	x12, x12, #0x40
  41c9ec:	subs	x15, x15, #0x4
  41c9f0:	stp	q2, q0, [x13, #-16]
  41c9f4:	stp	q3, q1, [x14, #-16]
  41c9f8:	add	x13, x13, #0x20
  41c9fc:	add	x14, x14, #0x20
  41ca00:	b.ne	41c9dc <_obstack_memory_used@@Base+0x474c>  // b.any
  41ca04:	cmp	x23, x11
  41ca08:	b.ne	41c930 <_obstack_memory_used@@Base+0x46a0>  // b.any
  41ca0c:	b	41c960 <_obstack_memory_used@@Base+0x46d0>
  41ca10:	mov	x19, #0xffffffffffffffff    	// #-1
  41ca14:	b	41c84c <_obstack_memory_used@@Base+0x45bc>
  41ca18:	mov	x19, #0xfffffffffffffffe    	// #-2
  41ca1c:	b	41c84c <_obstack_memory_used@@Base+0x45bc>
  41ca20:	ldr	x0, [x28, #8]
  41ca24:	lsl	x25, x26, #3
  41ca28:	mov	x1, x25
  41ca2c:	bl	4024c0 <realloc@plt>
  41ca30:	cbz	x0, 41ca58 <_obstack_memory_used@@Base+0x47c8>
  41ca34:	mov	x24, x0
  41ca38:	ldr	x0, [x28, #16]
  41ca3c:	mov	x1, x25
  41ca40:	bl	4024c0 <realloc@plt>
  41ca44:	cbz	x0, 41ca50 <_obstack_memory_used@@Base+0x47c0>
  41ca48:	stp	x24, x0, [x28, #8]
  41ca4c:	b	41c8b4 <_obstack_memory_used@@Base+0x4624>
  41ca50:	mov	x0, x24
  41ca54:	bl	402620 <free@plt>
  41ca58:	mov	w8, wzr
  41ca5c:	b	41c990 <_obstack_memory_used@@Base+0x4700>
  41ca60:	mov	x6, x5
  41ca64:	mov	x5, x2
  41ca68:	mov	w7, wzr
  41ca6c:	b	41c724 <_obstack_memory_used@@Base+0x4494>
  41ca70:	stp	x29, x30, [sp, #-96]!
  41ca74:	stp	x22, x21, [sp, #64]
  41ca78:	adds	x22, x2, x4
  41ca7c:	stp	x28, x27, [sp, #16]
  41ca80:	stp	x26, x25, [sp, #32]
  41ca84:	stp	x24, x23, [sp, #48]
  41ca88:	stp	x20, x19, [sp, #80]
  41ca8c:	mov	x29, sp
  41ca90:	b.vs	41cb64 <_obstack_memory_used@@Base+0x48d4>
  41ca94:	orr	x8, x4, x2
  41ca98:	mov	x19, x7
  41ca9c:	mov	x27, x4
  41caa0:	mov	x28, x2
  41caa4:	orr	x8, x8, x7
  41caa8:	tbnz	x8, #63, 41cb64 <_obstack_memory_used@@Base+0x48d4>
  41caac:	mov	x20, x6
  41cab0:	mov	x21, x5
  41cab4:	mov	x24, x1
  41cab8:	mov	x23, x0
  41cabc:	cmp	x27, #0x1
  41cac0:	b.lt	41cb04 <_obstack_memory_used@@Base+0x4874>  // b.tstop
  41cac4:	mov	x26, x3
  41cac8:	cmp	x28, #0x1
  41cacc:	b.lt	41cb0c <_obstack_memory_used@@Base+0x487c>  // b.tstop
  41cad0:	mov	x0, x22
  41cad4:	bl	4023a0 <malloc@plt>
  41cad8:	cbz	x0, 41cb64 <_obstack_memory_used@@Base+0x48d4>
  41cadc:	mov	x1, x24
  41cae0:	mov	x2, x28
  41cae4:	mov	x25, x0
  41cae8:	bl	402210 <memcpy@plt>
  41caec:	add	x0, x25, x28
  41caf0:	mov	x1, x26
  41caf4:	mov	x2, x27
  41caf8:	bl	402210 <memcpy@plt>
  41cafc:	mov	x24, x25
  41cb00:	b	41cb14 <_obstack_memory_used@@Base+0x4884>
  41cb04:	mov	x25, xzr
  41cb08:	b	41cb14 <_obstack_memory_used@@Base+0x4884>
  41cb0c:	mov	x25, xzr
  41cb10:	mov	x24, x26
  41cb14:	mov	w7, #0x1                   	// #1
  41cb18:	mov	x0, x23
  41cb1c:	mov	x1, x24
  41cb20:	mov	x2, x22
  41cb24:	mov	x3, x21
  41cb28:	mov	x4, xzr
  41cb2c:	mov	x5, x19
  41cb30:	mov	x6, x20
  41cb34:	bl	41c724 <_obstack_memory_used@@Base+0x4494>
  41cb38:	mov	x19, x0
  41cb3c:	mov	x0, x25
  41cb40:	bl	402620 <free@plt>
  41cb44:	mov	x0, x19
  41cb48:	ldp	x20, x19, [sp, #80]
  41cb4c:	ldp	x22, x21, [sp, #64]
  41cb50:	ldp	x24, x23, [sp, #48]
  41cb54:	ldp	x26, x25, [sp, #32]
  41cb58:	ldp	x28, x27, [sp, #16]
  41cb5c:	ldp	x29, x30, [sp], #96
  41cb60:	ret
  41cb64:	mov	x0, #0xfffffffffffffffe    	// #-2
  41cb68:	b	41cb48 <_obstack_memory_used@@Base+0x48b8>
  41cb6c:	sub	sp, sp, #0x70
  41cb70:	stp	x22, x21, [sp, #80]
  41cb74:	adds	x22, x2, x4
  41cb78:	stp	x29, x30, [sp, #16]
  41cb7c:	stp	x28, x27, [sp, #32]
  41cb80:	stp	x26, x25, [sp, #48]
  41cb84:	stp	x24, x23, [sp, #64]
  41cb88:	stp	x20, x19, [sp, #96]
  41cb8c:	add	x29, sp, #0x10
  41cb90:	b.vs	41cc70 <_obstack_memory_used@@Base+0x49e0>
  41cb94:	ldr	x23, [x29, #96]
  41cb98:	orr	x8, x4, x2
  41cb9c:	mov	x28, x4
  41cba0:	mov	x19, x2
  41cba4:	orr	x8, x8, x23
  41cba8:	tbnz	x8, #63, 41cc70 <_obstack_memory_used@@Base+0x49e0>
  41cbac:	mov	x20, x6
  41cbb0:	mov	x21, x5
  41cbb4:	mov	x25, x1
  41cbb8:	mov	x24, x0
  41cbbc:	cmp	x28, #0x1
  41cbc0:	b.lt	41cc0c <_obstack_memory_used@@Base+0x497c>  // b.tstop
  41cbc4:	mov	x27, x3
  41cbc8:	cmp	x19, #0x1
  41cbcc:	b.lt	41cc14 <_obstack_memory_used@@Base+0x4984>  // b.tstop
  41cbd0:	mov	x0, x22
  41cbd4:	str	x7, [sp, #8]
  41cbd8:	bl	4023a0 <malloc@plt>
  41cbdc:	cbz	x0, 41cc70 <_obstack_memory_used@@Base+0x49e0>
  41cbe0:	mov	x1, x25
  41cbe4:	mov	x2, x19
  41cbe8:	mov	x26, x0
  41cbec:	bl	402210 <memcpy@plt>
  41cbf0:	add	x0, x26, x19
  41cbf4:	mov	x1, x27
  41cbf8:	mov	x2, x28
  41cbfc:	bl	402210 <memcpy@plt>
  41cc00:	ldr	x7, [sp, #8]
  41cc04:	mov	x25, x26
  41cc08:	b	41cc1c <_obstack_memory_used@@Base+0x498c>
  41cc0c:	mov	x26, xzr
  41cc10:	b	41cc1c <_obstack_memory_used@@Base+0x498c>
  41cc14:	mov	x26, xzr
  41cc18:	mov	x25, x27
  41cc1c:	mov	x0, x24
  41cc20:	mov	x1, x25
  41cc24:	mov	x2, x22
  41cc28:	mov	x3, x21
  41cc2c:	mov	x4, x20
  41cc30:	mov	x5, x23
  41cc34:	mov	x6, x7
  41cc38:	mov	w7, wzr
  41cc3c:	bl	41c724 <_obstack_memory_used@@Base+0x4494>
  41cc40:	mov	x19, x0
  41cc44:	mov	x0, x26
  41cc48:	bl	402620 <free@plt>
  41cc4c:	mov	x0, x19
  41cc50:	ldp	x20, x19, [sp, #96]
  41cc54:	ldp	x22, x21, [sp, #80]
  41cc58:	ldp	x24, x23, [sp, #64]
  41cc5c:	ldp	x26, x25, [sp, #48]
  41cc60:	ldp	x28, x27, [sp, #32]
  41cc64:	ldp	x29, x30, [sp, #16]
  41cc68:	add	sp, sp, #0x70
  41cc6c:	ret
  41cc70:	mov	x0, #0xfffffffffffffffe    	// #-2
  41cc74:	b	41cc50 <_obstack_memory_used@@Base+0x49c0>
  41cc78:	ldrb	w8, [x0, #56]
  41cc7c:	cmp	x2, #0x0
  41cc80:	csel	x9, xzr, x4, eq  // eq = none
  41cc84:	csel	x10, xzr, x3, eq  // eq = none
  41cc88:	and	w8, w8, #0xfffffff9
  41cc8c:	orr	w11, w8, #0x2
  41cc90:	csel	w8, w8, w11, eq  // eq = none
  41cc94:	strb	w8, [x0, #56]
  41cc98:	stp	x10, x9, [x1, #8]
  41cc9c:	str	x2, [x1]
  41cca0:	ret
  41cca4:	stp	x29, x30, [sp, #-32]!
  41cca8:	str	x19, [sp, #16]
  41ccac:	mov	x19, x0
  41ccb0:	ldr	x0, [x0, #48]
  41ccb4:	mov	x29, sp
  41ccb8:	bl	402620 <free@plt>
  41ccbc:	ldr	x0, [x19, #72]
  41ccc0:	bl	402620 <free@plt>
  41ccc4:	ldr	x8, [x19, #80]
  41ccc8:	add	x9, x19, #0x8
  41cccc:	cmp	x8, x9
  41ccd0:	b.eq	41cce4 <_obstack_memory_used@@Base+0x4a54>  // b.none
  41ccd4:	ldr	x0, [x8, #16]
  41ccd8:	bl	402620 <free@plt>
  41ccdc:	ldr	x0, [x19, #80]
  41cce0:	bl	402620 <free@plt>
  41cce4:	ldr	x0, [x19, #24]
  41cce8:	bl	402620 <free@plt>
  41ccec:	ldr	x0, [x19, #96]
  41ccf0:	bl	402620 <free@plt>
  41ccf4:	ldr	x0, [x19, #88]
  41ccf8:	bl	402620 <free@plt>
  41ccfc:	mov	x0, x19
  41cd00:	ldr	x19, [sp, #16]
  41cd04:	ldp	x29, x30, [sp], #32
  41cd08:	b	402620 <free@plt>
  41cd0c:	sub	sp, sp, #0xb0
  41cd10:	stp	x29, x30, [sp, #80]
  41cd14:	stp	x28, x27, [sp, #96]
  41cd18:	stp	x26, x25, [sp, #112]
  41cd1c:	stp	x24, x23, [sp, #128]
  41cd20:	stp	x22, x21, [sp, #144]
  41cd24:	stp	x20, x19, [sp, #160]
  41cd28:	ldr	x8, [x0, #64]
  41cd2c:	ldr	x9, [x0, #88]
  41cd30:	ldrb	w10, [x0, #138]
  41cd34:	ldr	x25, [x0, #48]
  41cd38:	mov	x19, x0
  41cd3c:	cmp	x8, x9
  41cd40:	csel	x26, x9, x8, gt
  41cd44:	add	x29, sp, #0x50
  41cd48:	cbnz	w10, 41cd5c <_obstack_memory_used@@Base+0x4acc>
  41cd4c:	ldr	x8, [x19, #120]
  41cd50:	cbnz	x8, 41cd5c <_obstack_memory_used@@Base+0x4acc>
  41cd54:	ldrb	w8, [x19, #140]
  41cd58:	cbz	w8, 41cd64 <_obstack_memory_used@@Base+0x4ad4>
  41cd5c:	ldr	x22, [x19, #56]
  41cd60:	b	41cf30 <_obstack_memory_used@@Base+0x4ca0>
  41cd64:	cmp	x26, x25
  41cd68:	b.le	41cf10 <_obstack_memory_used@@Base+0x4c80>
  41cd6c:	add	x20, x19, #0x20
  41cd70:	b	41cda8 <_obstack_memory_used@@Base+0x4b18>
  41cd74:	and	x21, x23, #0xff
  41cd78:	bl	4024d0 <__ctype_toupper_loc@plt>
  41cd7c:	ldr	x8, [x0]
  41cd80:	ldr	x9, [x19, #8]
  41cd84:	add	x27, x25, #0x1
  41cd88:	ldr	w8, [x8, x21, lsl #2]
  41cd8c:	strb	w8, [x9, x25]
  41cd90:	ldp	x8, x9, [x19, #8]
  41cd94:	ldrb	w8, [x8, x25]
  41cd98:	str	w8, [x9, x25, lsl #2]
  41cd9c:	cmp	x26, x27
  41cda0:	mov	x25, x27
  41cda4:	b.le	41d22c <_obstack_memory_used@@Base+0x4f9c>
  41cda8:	ldr	x21, [x19, #40]
  41cdac:	ldr	x22, [x19]
  41cdb0:	add	x8, x21, x25
  41cdb4:	ldrsb	w23, [x22, x8]
  41cdb8:	tbnz	w23, #31, 41cdc8 <_obstack_memory_used@@Base+0x4b38>
  41cdbc:	mov	x0, x20
  41cdc0:	bl	402580 <mbsinit@plt>
  41cdc4:	cbnz	w0, 41cd74 <_obstack_memory_used@@Base+0x4ae4>
  41cdc8:	ldr	x8, [x20]
  41cdcc:	add	x9, x22, x21
  41cdd0:	sub	x2, x26, x25
  41cdd4:	add	x1, x9, x25
  41cdd8:	add	x0, sp, #0x4
  41cddc:	mov	x3, x20
  41cde0:	stur	x8, [x29, #-8]
  41cde4:	bl	417eb0 <wcrtomb@plt+0x15640>
  41cde8:	sub	x23, x0, #0x1
  41cdec:	mov	x21, x0
  41cdf0:	cmn	x23, #0x4
  41cdf4:	b.hi	41cec0 <_obstack_memory_used@@Base+0x4c30>  // b.pmore
  41cdf8:	ldr	w0, [sp, #4]
  41cdfc:	bl	402780 <towupper@plt>
  41ce00:	ldr	w8, [sp, #4]
  41ce04:	mov	w22, w0
  41ce08:	cmp	w0, w8
  41ce0c:	b.ne	41ce28 <_obstack_memory_used@@Base+0x4b98>  // b.any
  41ce10:	ldp	x9, x8, [x19]
  41ce14:	ldr	x10, [x19, #40]
  41ce18:	add	x0, x8, x25
  41ce1c:	add	x8, x9, x10
  41ce20:	add	x1, x8, x25
  41ce24:	b	41ce4c <_obstack_memory_used@@Base+0x4bbc>
  41ce28:	add	x0, sp, #0x8
  41ce2c:	sub	x2, x29, #0x8
  41ce30:	mov	w1, w22
  41ce34:	bl	402870 <wcrtomb@plt>
  41ce38:	cmp	x21, x0
  41ce3c:	b.ne	41cf18 <_obstack_memory_used@@Base+0x4c88>  // b.any
  41ce40:	ldr	x8, [x19, #8]
  41ce44:	add	x1, sp, #0x8
  41ce48:	add	x0, x8, x25
  41ce4c:	mov	x2, x21
  41ce50:	bl	402210 <memcpy@plt>
  41ce54:	ldr	x8, [x19, #16]
  41ce58:	add	x24, x21, x25
  41ce5c:	add	x27, x25, #0x1
  41ce60:	cmp	x27, x24
  41ce64:	str	w22, [x8, x25, lsl #2]
  41ce68:	b.ge	41cd9c <_obstack_memory_used@@Base+0x4b0c>  // b.tcont
  41ce6c:	add	x8, x8, x25, lsl #2
  41ce70:	lsl	x9, x21, #2
  41ce74:	add	x0, x8, #0x4
  41ce78:	sub	x2, x9, #0x4
  41ce7c:	mov	w1, #0xff                  	// #255
  41ce80:	bl	402470 <memset@plt>
  41ce84:	cmp	x23, #0x2
  41ce88:	b.cc	41cea8 <_obstack_memory_used@@Base+0x4c18>  // b.lo, b.ul, b.last
  41ce8c:	and	x8, x23, #0xfffffffffffffffe
  41ce90:	add	x27, x27, x8
  41ce94:	mov	x9, x8
  41ce98:	subs	x9, x9, #0x2
  41ce9c:	b.ne	41ce98 <_obstack_memory_used@@Base+0x4c08>  // b.any
  41cea0:	cmp	x23, x8
  41cea4:	b.eq	41ceb8 <_obstack_memory_used@@Base+0x4c28>  // b.none
  41cea8:	add	x8, x21, x25
  41ceac:	sub	x8, x8, x27
  41ceb0:	subs	x8, x8, #0x1
  41ceb4:	b.ne	41ceb0 <_obstack_memory_used@@Base+0x4c20>  // b.any
  41ceb8:	mov	x27, x24
  41cebc:	b	41cd9c <_obstack_memory_used@@Base+0x4b0c>
  41cec0:	add	x8, x21, #0x1
  41cec4:	cmp	x8, #0x2
  41cec8:	b.cc	41cedc <_obstack_memory_used@@Base+0x4c4c>  // b.lo, b.ul, b.last
  41cecc:	ldr	x8, [x19, #64]
  41ced0:	ldr	x9, [x19, #88]
  41ced4:	cmp	x8, x9
  41ced8:	b.lt	41cf20 <_obstack_memory_used@@Base+0x4c90>  // b.tstop
  41cedc:	ldr	x8, [x19, #40]
  41cee0:	ldp	x9, x10, [x19]
  41cee4:	add	x27, x25, #0x1
  41cee8:	cmn	x21, #0x1
  41ceec:	add	x8, x8, x25
  41cef0:	ldrb	w8, [x9, x8]
  41cef4:	strb	w8, [x10, x25]
  41cef8:	ldr	x9, [x19, #16]
  41cefc:	str	w8, [x9, x25, lsl #2]
  41cf00:	b.ne	41cd9c <_obstack_memory_used@@Base+0x4b0c>  // b.any
  41cf04:	ldur	x8, [x29, #-8]
  41cf08:	str	x8, [x20]
  41cf0c:	b	41cd9c <_obstack_memory_used@@Base+0x4b0c>
  41cf10:	mov	x27, x25
  41cf14:	b	41d22c <_obstack_memory_used@@Base+0x4f9c>
  41cf18:	mov	x27, x25
  41cf1c:	b	41cf40 <_obstack_memory_used@@Base+0x4cb0>
  41cf20:	ldur	x8, [x29, #-8]
  41cf24:	mov	x27, x25
  41cf28:	str	x8, [x20]
  41cf2c:	b	41d22c <_obstack_memory_used@@Base+0x4f9c>
  41cf30:	cmp	x25, x26
  41cf34:	mov	x27, x25
  41cf38:	mov	x25, x22
  41cf3c:	b.ge	41d22c <_obstack_memory_used@@Base+0x4f9c>  // b.tcont
  41cf40:	mov	x23, x19
  41cf44:	ldr	x8, [x23, #32]!
  41cf48:	sub	x2, x26, x27
  41cf4c:	stur	x8, [x29, #-8]
  41cf50:	ldr	x8, [x23, #88]
  41cf54:	cbnz	x8, 41d04c <_obstack_memory_used@@Base+0x4dbc>
  41cf58:	ldr	x8, [x19]
  41cf5c:	ldr	x9, [x19, #40]
  41cf60:	add	x8, x8, x9
  41cf64:	add	x24, x8, x25
  41cf68:	mov	x0, sp
  41cf6c:	mov	x1, x24
  41cf70:	mov	x3, x23
  41cf74:	bl	417eb0 <wcrtomb@plt+0x15640>
  41cf78:	sub	x28, x0, #0x1
  41cf7c:	mov	x20, x0
  41cf80:	cmn	x28, #0x4
  41cf84:	b.hi	41d0a0 <_obstack_memory_used@@Base+0x4e10>  // b.pmore
  41cf88:	ldr	w0, [sp]
  41cf8c:	bl	402780 <towupper@plt>
  41cf90:	ldr	w8, [sp]
  41cf94:	mov	w21, w0
  41cf98:	cmp	w0, w8
  41cf9c:	b.ne	41cfac <_obstack_memory_used@@Base+0x4d1c>  // b.any
  41cfa0:	ldr	x8, [x19, #8]
  41cfa4:	mov	x1, x24
  41cfa8:	b	41cfcc <_obstack_memory_used@@Base+0x4d3c>
  41cfac:	add	x0, sp, #0x8
  41cfb0:	sub	x2, x29, #0x8
  41cfb4:	mov	w1, w21
  41cfb8:	bl	402870 <wcrtomb@plt>
  41cfbc:	subs	x9, x0, x20
  41cfc0:	b.ne	41d108 <_obstack_memory_used@@Base+0x4e78>  // b.any
  41cfc4:	ldr	x8, [x19, #8]
  41cfc8:	add	x1, sp, #0x8
  41cfcc:	add	x0, x8, x27
  41cfd0:	mov	x2, x20
  41cfd4:	bl	402210 <memcpy@plt>
  41cfd8:	ldrb	w8, [x19, #140]
  41cfdc:	cbnz	w8, 41d15c <_obstack_memory_used@@Base+0x4ecc>
  41cfe0:	ldr	x8, [x19, #16]
  41cfe4:	add	x22, x20, x25
  41cfe8:	add	x23, x20, x27
  41cfec:	add	x25, x27, #0x1
  41cff0:	cmp	x25, x23
  41cff4:	str	w21, [x8, x27, lsl #2]
  41cff8:	b.ge	41cf30 <_obstack_memory_used@@Base+0x4ca0>  // b.tcont
  41cffc:	add	x0, x8, x25, lsl #2
  41d000:	lsl	x8, x20, #2
  41d004:	sub	x2, x8, #0x4
  41d008:	mov	w1, #0xff                  	// #255
  41d00c:	bl	402470 <memset@plt>
  41d010:	cmp	x28, #0x2
  41d014:	b.cc	41d034 <_obstack_memory_used@@Base+0x4da4>  // b.lo, b.ul, b.last
  41d018:	and	x8, x28, #0xfffffffffffffffe
  41d01c:	add	x25, x25, x8
  41d020:	mov	x9, x8
  41d024:	subs	x9, x9, #0x2
  41d028:	b.ne	41d024 <_obstack_memory_used@@Base+0x4d94>  // b.any
  41d02c:	cmp	x28, x8
  41d030:	b.eq	41d044 <_obstack_memory_used@@Base+0x4db4>  // b.none
  41d034:	add	x8, x20, x27
  41d038:	sub	x8, x8, x25
  41d03c:	subs	x8, x8, #0x1
  41d040:	b.ne	41d03c <_obstack_memory_used@@Base+0x4dac>  // b.any
  41d044:	mov	x25, x23
  41d048:	b	41cf30 <_obstack_memory_used@@Base+0x4ca0>
  41d04c:	ldr	w9, [x19, #144]
  41d050:	add	x24, sp, #0x8
  41d054:	cmp	w9, #0x1
  41d058:	b.lt	41cf68 <_obstack_memory_used@@Base+0x4cd8>  // b.tstop
  41d05c:	cmp	x2, #0x1
  41d060:	b.lt	41cf68 <_obstack_memory_used@@Base+0x4cd8>  // b.tstop
  41d064:	ldr	x11, [x19, #40]
  41d068:	ldr	x12, [x19]
  41d06c:	mov	x10, xzr
  41d070:	add	x11, x25, x11
  41d074:	add	x11, x12, x11
  41d078:	ldrb	w12, [x11, x10]
  41d07c:	add	x24, sp, #0x8
  41d080:	ldrb	w12, [x8, x12]
  41d084:	strb	w12, [x24, x10]
  41d088:	add	x10, x10, #0x1
  41d08c:	cmp	x10, x9
  41d090:	b.cs	41cf68 <_obstack_memory_used@@Base+0x4cd8>  // b.hs, b.nlast
  41d094:	cmp	x2, x10
  41d098:	b.gt	41d078 <_obstack_memory_used@@Base+0x4de8>
  41d09c:	b	41cf68 <_obstack_memory_used@@Base+0x4cd8>
  41d0a0:	add	x8, x20, #0x1
  41d0a4:	cmp	x8, #0x2
  41d0a8:	b.cc	41d0bc <_obstack_memory_used@@Base+0x4e2c>  // b.lo, b.ul, b.last
  41d0ac:	ldr	x8, [x19, #64]
  41d0b0:	ldr	x9, [x19, #88]
  41d0b4:	cmp	x8, x9
  41d0b8:	b.lt	41d224 <_obstack_memory_used@@Base+0x4f94>  // b.tstop
  41d0bc:	ldr	x8, [x19, #40]
  41d0c0:	ldr	x10, [x19]
  41d0c4:	ldr	x9, [x19, #120]
  41d0c8:	add	x8, x8, x25
  41d0cc:	ldrb	w8, [x10, x8]
  41d0d0:	cbnz	x9, 41d25c <_obstack_memory_used@@Base+0x4fcc>
  41d0d4:	ldr	x9, [x19, #8]
  41d0d8:	strb	w8, [x9, x27]
  41d0dc:	ldrb	w9, [x19, #140]
  41d0e0:	cbnz	w9, 41d264 <_obstack_memory_used@@Base+0x4fd4>
  41d0e4:	ldr	x9, [x19, #16]
  41d0e8:	add	x22, x25, #0x1
  41d0ec:	add	x25, x27, #0x1
  41d0f0:	cmn	x20, #0x1
  41d0f4:	str	w8, [x9, x27, lsl #2]
  41d0f8:	b.ne	41cf30 <_obstack_memory_used@@Base+0x4ca0>  // b.any
  41d0fc:	ldur	x8, [x29, #-8]
  41d100:	str	x8, [x23]
  41d104:	b	41cf30 <_obstack_memory_used@@Base+0x4ca0>
  41d108:	mov	x22, x0
  41d10c:	cmn	x0, #0x1
  41d110:	b.eq	41cfa0 <_obstack_memory_used@@Base+0x4d10>  // b.none
  41d114:	ldr	x8, [x19, #64]
  41d118:	add	x24, x22, x27
  41d11c:	cmp	x24, x8
  41d120:	b.hi	41d224 <_obstack_memory_used@@Base+0x4f94>  // b.pmore
  41d124:	ldr	x0, [x19, #24]
  41d128:	mov	x23, x9
  41d12c:	cbnz	x0, 41d140 <_obstack_memory_used@@Base+0x4eb0>
  41d130:	lsl	x0, x8, #3
  41d134:	bl	4023a0 <malloc@plt>
  41d138:	str	x0, [x19, #24]
  41d13c:	cbz	x0, 41d254 <_obstack_memory_used@@Base+0x4fc4>
  41d140:	ldrb	w8, [x19, #140]
  41d144:	cbnz	w8, 41d288 <_obstack_memory_used@@Base+0x4ff8>
  41d148:	cbz	x27, 41d280 <_obstack_memory_used@@Base+0x4ff0>
  41d14c:	cmp	x27, #0x4
  41d150:	b.cs	41d1e4 <_obstack_memory_used@@Base+0x4f54>  // b.hs, b.nlast
  41d154:	mov	x8, xzr
  41d158:	b	41d270 <_obstack_memory_used@@Base+0x4fe0>
  41d15c:	ldr	x8, [x19, #24]
  41d160:	cmp	x20, #0x4
  41d164:	b.cs	41d170 <_obstack_memory_used@@Base+0x4ee0>  // b.hs, b.nlast
  41d168:	mov	x9, xzr
  41d16c:	b	41d1c0 <_obstack_memory_used@@Base+0x4f30>
  41d170:	adrp	x11, 42a000 <_obstack_memory_used@@Base+0x11d70>
  41d174:	ldr	q1, [x11, #1424]
  41d178:	mov	w11, #0x2                   	// #2
  41d17c:	and	x9, x20, #0xfffffffffffffffc
  41d180:	add	x10, x8, x27, lsl #3
  41d184:	dup	v2.2d, x11
  41d188:	mov	w11, #0x4                   	// #4
  41d18c:	dup	v0.2d, x25
  41d190:	add	x10, x10, #0x10
  41d194:	dup	v3.2d, x11
  41d198:	mov	x11, x9
  41d19c:	add	v4.2d, v1.2d, v0.2d
  41d1a0:	add	v5.2d, v4.2d, v2.2d
  41d1a4:	add	v1.2d, v1.2d, v3.2d
  41d1a8:	subs	x11, x11, #0x4
  41d1ac:	stp	q4, q5, [x10, #-16]
  41d1b0:	add	x10, x10, #0x20
  41d1b4:	b.ne	41d19c <_obstack_memory_used@@Base+0x4f0c>  // b.any
  41d1b8:	cmp	x20, x9
  41d1bc:	b.eq	41cfe0 <_obstack_memory_used@@Base+0x4d50>  // b.none
  41d1c0:	sub	x10, x20, x9
  41d1c4:	add	x11, x25, x9
  41d1c8:	add	x9, x27, x9
  41d1cc:	add	x8, x8, x9, lsl #3
  41d1d0:	str	x11, [x8], #8
  41d1d4:	subs	x10, x10, #0x1
  41d1d8:	add	x11, x11, #0x1
  41d1dc:	b.ne	41d1d0 <_obstack_memory_used@@Base+0x4f40>  // b.any
  41d1e0:	b	41cfe0 <_obstack_memory_used@@Base+0x4d50>
  41d1e4:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x11d70>
  41d1e8:	ldr	q0, [x10, #1424]
  41d1ec:	mov	w10, #0x2                   	// #2
  41d1f0:	and	x8, x27, #0xfffffffffffffffc
  41d1f4:	dup	v1.2d, x10
  41d1f8:	mov	w10, #0x4                   	// #4
  41d1fc:	add	x9, x0, #0x10
  41d200:	dup	v2.2d, x10
  41d204:	mov	x10, x8
  41d208:	add	v3.2d, v0.2d, v1.2d
  41d20c:	stp	q0, q3, [x9, #-16]
  41d210:	add	v0.2d, v0.2d, v2.2d
  41d214:	subs	x10, x10, #0x4
  41d218:	add	x9, x9, #0x20
  41d21c:	b.ne	41d208 <_obstack_memory_used@@Base+0x4f78>  // b.any
  41d220:	b	41d278 <_obstack_memory_used@@Base+0x4fe8>
  41d224:	ldur	x8, [x29, #-8]
  41d228:	str	x8, [x23]
  41d22c:	mov	w0, wzr
  41d230:	stp	x27, x25, [x19, #48]
  41d234:	ldp	x20, x19, [sp, #160]
  41d238:	ldp	x22, x21, [sp, #144]
  41d23c:	ldp	x24, x23, [sp, #128]
  41d240:	ldp	x26, x25, [sp, #112]
  41d244:	ldp	x28, x27, [sp, #96]
  41d248:	ldp	x29, x30, [sp, #80]
  41d24c:	add	sp, sp, #0xb0
  41d250:	ret
  41d254:	mov	w0, #0xc                   	// #12
  41d258:	b	41d234 <_obstack_memory_used@@Base+0x4fa4>
  41d25c:	ldrb	w8, [x9, x8]
  41d260:	b	41d0d4 <_obstack_memory_used@@Base+0x4e44>
  41d264:	ldr	x9, [x19, #24]
  41d268:	str	x25, [x9, x27, lsl #3]
  41d26c:	b	41d0e4 <_obstack_memory_used@@Base+0x4e54>
  41d270:	str	x8, [x0, x8, lsl #3]
  41d274:	add	x8, x8, #0x1
  41d278:	cmp	x27, x8
  41d27c:	b.ne	41d270 <_obstack_memory_used@@Base+0x4fe0>  // b.any
  41d280:	mov	w8, #0x1                   	// #1
  41d284:	strb	w8, [x19, #140]
  41d288:	ldr	x8, [x19, #8]
  41d28c:	add	x1, sp, #0x8
  41d290:	mov	x2, x22
  41d294:	add	x0, x8, x27
  41d298:	bl	402210 <memcpy@plt>
  41d29c:	ldr	x8, [x19, #16]
  41d2a0:	cmp	x22, #0x2
  41d2a4:	mov	x16, x23
  41d2a8:	str	w21, [x8, x27, lsl #2]
  41d2ac:	ldr	x9, [x19, #24]
  41d2b0:	str	x25, [x9, x27, lsl #3]
  41d2b4:	b.cc	41d378 <_obstack_memory_used@@Base+0x50e8>  // b.lo, b.ul, b.last
  41d2b8:	sub	x11, x22, #0x1
  41d2bc:	cmp	x11, #0x4
  41d2c0:	b.cs	41d2cc <_obstack_memory_used@@Base+0x503c>  // b.hs, b.nlast
  41d2c4:	mov	w10, #0x1                   	// #1
  41d2c8:	b	41d34c <_obstack_memory_used@@Base+0x50bc>
  41d2cc:	adrp	x13, 42a000 <_obstack_memory_used@@Base+0x11d70>
  41d2d0:	ldr	q3, [x13, #3808]
  41d2d4:	mov	w15, #0x2                   	// #2
  41d2d8:	and	x12, x11, #0xfffffffffffffffc
  41d2dc:	add	x14, x27, #0x3
  41d2e0:	dup	v4.2d, x15
  41d2e4:	mov	w15, #0x4                   	// #4
  41d2e8:	dup	v0.2d, x20
  41d2ec:	dup	v1.2d, x28
  41d2f0:	dup	v2.2d, x25
  41d2f4:	orr	x10, x12, #0x1
  41d2f8:	add	x13, x8, x14, lsl #2
  41d2fc:	add	x14, x9, x14, lsl #3
  41d300:	movi	v5.2d, #0xffffffffffffffff
  41d304:	dup	v6.2d, x15
  41d308:	mov	x15, x12
  41d30c:	add	v7.2d, v3.2d, v4.2d
  41d310:	cmhi	v16.2d, v0.2d, v3.2d
  41d314:	cmhi	v17.2d, v0.2d, v7.2d
  41d318:	bsl	v16.16b, v3.16b, v1.16b
  41d31c:	bsl	v17.16b, v7.16b, v1.16b
  41d320:	add	v7.2d, v16.2d, v2.2d
  41d324:	add	v16.2d, v17.2d, v2.2d
  41d328:	subs	x15, x15, #0x4
  41d32c:	add	v3.2d, v3.2d, v6.2d
  41d330:	stp	q7, q16, [x14, #-16]
  41d334:	stp	d5, d5, [x13, #-8]
  41d338:	add	x13, x13, #0x10
  41d33c:	add	x14, x14, #0x20
  41d340:	b.ne	41d30c <_obstack_memory_used@@Base+0x507c>  // b.any
  41d344:	cmp	x11, x12
  41d348:	b.eq	41d378 <_obstack_memory_used@@Base+0x50e8>  // b.none
  41d34c:	add	x8, x8, x27, lsl #2
  41d350:	add	x9, x9, x27, lsl #3
  41d354:	mov	w11, #0xffffffff            	// #-1
  41d358:	cmp	x10, x20
  41d35c:	csel	x12, x10, x28, cc  // cc = lo, ul, last
  41d360:	add	x12, x12, x25
  41d364:	str	x12, [x9, x10, lsl #3]
  41d368:	str	w11, [x8, x10, lsl #2]
  41d36c:	add	x10, x10, #0x1
  41d370:	cmp	x22, x10
  41d374:	b.ne	41d358 <_obstack_memory_used@@Base+0x50c8>  // b.any
  41d378:	ldp	x8, x9, [x19, #88]
  41d37c:	add	x8, x8, x16
  41d380:	cmp	x9, x25
  41d384:	str	x8, [x19, #88]
  41d388:	b.le	41d398 <_obstack_memory_used@@Base+0x5108>
  41d38c:	ldr	x9, [x19, #104]
  41d390:	add	x9, x9, x16
  41d394:	str	x9, [x19, #104]
  41d398:	ldr	x9, [x19, #64]
  41d39c:	add	x22, x20, x25
  41d3a0:	mov	x25, x24
  41d3a4:	cmp	x9, x8
  41d3a8:	csel	x26, x8, x9, gt
  41d3ac:	b	41cf30 <_obstack_memory_used@@Base+0x4ca0>
  41d3b0:	sub	sp, sp, #0x90
  41d3b4:	stp	x29, x30, [sp, #64]
  41d3b8:	stp	x24, x23, [sp, #96]
  41d3bc:	stp	x22, x21, [sp, #112]
  41d3c0:	stp	x20, x19, [sp, #128]
  41d3c4:	ldr	x8, [x0, #64]
  41d3c8:	ldr	x9, [x0, #88]
  41d3cc:	ldr	x23, [x0, #48]
  41d3d0:	mov	x19, x0
  41d3d4:	str	x25, [sp, #80]
  41d3d8:	cmp	x8, x9
  41d3dc:	csel	x22, x9, x8, gt
  41d3e0:	cmp	x22, x23
  41d3e4:	add	x29, sp, #0x40
  41d3e8:	b.le	41d594 <_obstack_memory_used@@Base+0x5304>
  41d3ec:	add	x20, x19, #0x20
  41d3f0:	ldr	x8, [x19, #120]
  41d3f4:	ldr	x24, [x19, #32]
  41d3f8:	sub	x2, x22, x23
  41d3fc:	cbnz	x8, 41d4ec <_obstack_memory_used@@Base+0x525c>
  41d400:	ldr	x8, [x19]
  41d404:	ldr	x9, [x19, #40]
  41d408:	add	x8, x8, x9
  41d40c:	add	x1, x8, x23
  41d410:	add	x0, x29, #0x1c
  41d414:	mov	x3, x20
  41d418:	bl	417eb0 <wcrtomb@plt+0x15640>
  41d41c:	add	x8, x0, #0x1
  41d420:	cmp	x8, #0x2
  41d424:	b.cc	41d444 <_obstack_memory_used@@Base+0x51b4>  // b.lo, b.ul, b.last
  41d428:	mov	x21, x0
  41d42c:	cmn	x0, #0x2
  41d430:	b.ne	41d46c <_obstack_memory_used@@Base+0x51dc>  // b.any
  41d434:	ldr	x8, [x19, #64]
  41d438:	ldr	x9, [x19, #88]
  41d43c:	cmp	x8, x9
  41d440:	b.lt	41d590 <_obstack_memory_used@@Base+0x5300>  // b.tstop
  41d444:	ldr	x8, [x19, #40]
  41d448:	ldr	x9, [x19]
  41d44c:	add	x8, x8, x23
  41d450:	ldrb	w8, [x9, x8]
  41d454:	str	w8, [x29, #28]
  41d458:	ldr	x9, [x19, #120]
  41d45c:	cbnz	x9, 41d584 <_obstack_memory_used@@Base+0x52f4>
  41d460:	mov	w21, #0x1                   	// #1
  41d464:	str	x24, [x20]
  41d468:	b	41d470 <_obstack_memory_used@@Base+0x51e0>
  41d46c:	ldr	w8, [x29, #28]
  41d470:	ldr	x9, [x19, #16]
  41d474:	add	x25, x21, x23
  41d478:	add	x24, x23, #0x1
  41d47c:	cmp	x24, x25
  41d480:	str	w8, [x9, x23, lsl #2]
  41d484:	b.ge	41d4dc <_obstack_memory_used@@Base+0x524c>  // b.tcont
  41d488:	add	x8, x9, x23, lsl #2
  41d48c:	lsl	x9, x21, #2
  41d490:	add	x0, x8, #0x4
  41d494:	sub	x2, x9, #0x4
  41d498:	mov	w1, #0xff                  	// #255
  41d49c:	bl	402470 <memset@plt>
  41d4a0:	sub	x8, x21, #0x1
  41d4a4:	cmp	x8, #0x2
  41d4a8:	b.cc	41d4c8 <_obstack_memory_used@@Base+0x5238>  // b.lo, b.ul, b.last
  41d4ac:	and	x9, x8, #0xfffffffffffffffe
  41d4b0:	add	x24, x24, x9
  41d4b4:	mov	x10, x9
  41d4b8:	subs	x10, x10, #0x2
  41d4bc:	b.ne	41d4b8 <_obstack_memory_used@@Base+0x5228>  // b.any
  41d4c0:	cmp	x8, x9
  41d4c4:	b.eq	41d4d8 <_obstack_memory_used@@Base+0x5248>  // b.none
  41d4c8:	add	x8, x23, x21
  41d4cc:	sub	x8, x8, x24
  41d4d0:	subs	x8, x8, #0x1
  41d4d4:	b.ne	41d4d0 <_obstack_memory_used@@Base+0x5240>  // b.any
  41d4d8:	mov	x24, x25
  41d4dc:	cmp	x22, x24
  41d4e0:	mov	x23, x24
  41d4e4:	b.gt	41d3f0 <_obstack_memory_used@@Base+0x5160>
  41d4e8:	b	41d598 <_obstack_memory_used@@Base+0x5308>
  41d4ec:	ldr	w9, [x19, #144]
  41d4f0:	mov	x1, sp
  41d4f4:	cmp	w9, #0x1
  41d4f8:	b.lt	41d410 <_obstack_memory_used@@Base+0x5180>  // b.tstop
  41d4fc:	cmp	x2, #0x1
  41d500:	b.lt	41d410 <_obstack_memory_used@@Base+0x5180>  // b.tstop
  41d504:	ldr	x9, [x19, #40]
  41d508:	ldp	x10, x11, [x19]
  41d50c:	mov	x1, sp
  41d510:	add	x9, x23, x9
  41d514:	ldrb	w9, [x10, x9]
  41d518:	ldrb	w8, [x8, x9]
  41d51c:	strb	w8, [x11, x23]
  41d520:	strb	w8, [sp]
  41d524:	ldr	w8, [x19, #144]
  41d528:	cmp	w8, #0x2
  41d52c:	b.lt	41d410 <_obstack_memory_used@@Base+0x5180>  // b.tstop
  41d530:	cmp	x2, #0x2
  41d534:	b.lt	41d410 <_obstack_memory_used@@Base+0x5180>  // b.tstop
  41d538:	mov	w8, #0x1                   	// #1
  41d53c:	ldr	x9, [x19, #40]
  41d540:	ldp	x10, x12, [x19]
  41d544:	ldr	x11, [x19, #120]
  41d548:	mov	x1, sp
  41d54c:	add	x9, x10, x9
  41d550:	add	x9, x9, x23
  41d554:	ldrb	w9, [x9, x8]
  41d558:	add	x10, x12, x23
  41d55c:	ldrb	w9, [x11, x9]
  41d560:	strb	w9, [x10, x8]
  41d564:	strb	w9, [x1, x8]
  41d568:	ldr	w9, [x19, #144]
  41d56c:	add	x8, x8, #0x1
  41d570:	cmp	w9, w8
  41d574:	b.le	41d410 <_obstack_memory_used@@Base+0x5180>
  41d578:	cmp	x2, x8
  41d57c:	b.gt	41d53c <_obstack_memory_used@@Base+0x52ac>
  41d580:	b	41d410 <_obstack_memory_used@@Base+0x5180>
  41d584:	ldrb	w8, [x9, w8, uxtw]
  41d588:	str	w8, [x29, #28]
  41d58c:	b	41d460 <_obstack_memory_used@@Base+0x51d0>
  41d590:	str	x24, [x20]
  41d594:	mov	x24, x23
  41d598:	stp	x24, x24, [x19, #48]
  41d59c:	ldp	x20, x19, [sp, #128]
  41d5a0:	ldp	x22, x21, [sp, #112]
  41d5a4:	ldp	x24, x23, [sp, #96]
  41d5a8:	ldr	x25, [sp, #80]
  41d5ac:	ldp	x29, x30, [sp, #64]
  41d5b0:	add	sp, sp, #0x90
  41d5b4:	ret
  41d5b8:	sub	sp, sp, #0x80
  41d5bc:	stp	x29, x30, [sp, #32]
  41d5c0:	stp	x28, x27, [sp, #48]
  41d5c4:	stp	x26, x25, [sp, #64]
  41d5c8:	stp	x24, x23, [sp, #80]
  41d5cc:	stp	x22, x21, [sp, #96]
  41d5d0:	stp	x20, x19, [sp, #112]
  41d5d4:	ldr	x28, [x1]
  41d5d8:	add	x29, sp, #0x20
  41d5dc:	mov	x19, x5
  41d5e0:	mov	x21, x4
  41d5e4:	ldr	x8, [x28, #168]
  41d5e8:	mov	x23, x2
  41d5ec:	mov	x25, x0
  41d5f0:	stur	x3, [x29, #-8]
  41d5f4:	stp	x8, x1, [sp, #8]
  41d5f8:	bl	41dd88 <_obstack_memory_used@@Base+0x5af8>
  41d5fc:	mov	x20, x0
  41d600:	cbnz	x0, 41d60c <_obstack_memory_used@@Base+0x537c>
  41d604:	ldr	w8, [x19]
  41d608:	cbnz	w8, 41d7ec <_obstack_memory_used@@Base+0x555c>
  41d60c:	ldrb	w8, [x23, #8]
  41d610:	cmp	w8, #0xa
  41d614:	b.ne	41d738 <_obstack_memory_used@@Base+0x54a8>  // b.any
  41d618:	str	x19, [sp]
  41d61c:	ldur	x8, [x29, #-8]
  41d620:	ldr	x22, [sp]
  41d624:	mov	w19, #0xa                   	// #10
  41d628:	mov	x24, #0xffffffffffffffff    	// #-1
  41d62c:	orr	x26, x8, #0x800000
  41d630:	b	41d644 <_obstack_memory_used@@Base+0x53b4>
  41d634:	ldrb	w8, [x23, #8]
  41d638:	mov	x20, x0
  41d63c:	cmp	w8, #0xa
  41d640:	b.ne	41d73c <_obstack_memory_used@@Base+0x54ac>  // b.any
  41d644:	mov	x0, x23
  41d648:	mov	x1, x25
  41d64c:	mov	x2, x26
  41d650:	bl	41d804 <_obstack_memory_used@@Base+0x5574>
  41d654:	ldr	x8, [x25, #72]
  41d658:	add	x8, x8, w0, sxtw
  41d65c:	str	x8, [x25, #72]
  41d660:	ldrb	w8, [x23, #8]
  41d664:	orr	w9, w8, #0x8
  41d668:	cmp	w9, #0xa
  41d66c:	b.ne	41d6c0 <_obstack_memory_used@@Base+0x5430>  // b.any
  41d670:	mov	x27, xzr
  41d674:	ldr	w8, [x28, #128]
  41d678:	cmp	w8, #0xf
  41d67c:	b.eq	41d714 <_obstack_memory_used@@Base+0x5484>  // b.none
  41d680:	ldr	x0, [x28, #112]
  41d684:	add	w9, w8, #0x1
  41d688:	sxtw	x8, w8
  41d68c:	add	x0, x0, x8, lsl #6
  41d690:	str	w9, [x28, #128]
  41d694:	str	xzr, [x0, #8]!
  41d698:	stp	x20, x27, [x0, #8]
  41d69c:	stp	xzr, xzr, [x0, #32]
  41d6a0:	str	w19, [x0, #48]
  41d6a4:	str	xzr, [x0, #24]
  41d6a8:	str	x24, [x0, #56]
  41d6ac:	cbz	x20, 41d6b4 <_obstack_memory_used@@Base+0x5424>
  41d6b0:	str	x0, [x20]
  41d6b4:	cbz	x27, 41d634 <_obstack_memory_used@@Base+0x53a4>
  41d6b8:	str	x0, [x27]
  41d6bc:	b	41d634 <_obstack_memory_used@@Base+0x53a4>
  41d6c0:	cbz	x21, 41d6cc <_obstack_memory_used@@Base+0x543c>
  41d6c4:	cmp	w8, #0x9
  41d6c8:	b.eq	41d670 <_obstack_memory_used@@Base+0x53e0>  // b.none
  41d6cc:	ldp	x8, x1, [sp, #8]
  41d6d0:	ldur	x3, [x29, #-8]
  41d6d4:	ldr	x19, [x28, #168]
  41d6d8:	mov	x0, x25
  41d6dc:	mov	x2, x23
  41d6e0:	mov	x4, x21
  41d6e4:	mov	x5, x22
  41d6e8:	str	x8, [x28, #168]
  41d6ec:	bl	41dd88 <_obstack_memory_used@@Base+0x5af8>
  41d6f0:	mov	x27, x0
  41d6f4:	cbnz	x0, 41d700 <_obstack_memory_used@@Base+0x5470>
  41d6f8:	ldr	w8, [x22]
  41d6fc:	cbnz	w8, 41d75c <_obstack_memory_used@@Base+0x54cc>
  41d700:	ldr	x8, [x28, #168]
  41d704:	orr	x8, x8, x19
  41d708:	mov	w19, #0xa                   	// #10
  41d70c:	str	x8, [x28, #168]
  41d710:	b	41d674 <_obstack_memory_used@@Base+0x53e4>
  41d714:	mov	w0, #0x3c8                 	// #968
  41d718:	bl	4023a0 <malloc@plt>
  41d71c:	cbz	x0, 41d7f4 <_obstack_memory_used@@Base+0x5564>
  41d720:	ldr	x9, [x28, #112]
  41d724:	mov	w8, wzr
  41d728:	str	x9, [x0]
  41d72c:	str	x0, [x28, #112]
  41d730:	str	wzr, [x28, #128]
  41d734:	b	41d684 <_obstack_memory_used@@Base+0x53f4>
  41d738:	mov	x0, x20
  41d73c:	ldp	x20, x19, [sp, #112]
  41d740:	ldp	x22, x21, [sp, #96]
  41d744:	ldp	x24, x23, [sp, #80]
  41d748:	ldp	x26, x25, [sp, #64]
  41d74c:	ldp	x28, x27, [sp, #48]
  41d750:	ldp	x29, x30, [sp, #32]
  41d754:	add	sp, sp, #0x80
  41d758:	ret
  41d75c:	cbz	x20, 41d7ec <_obstack_memory_used@@Base+0x555c>
  41d760:	mov	w21, #0xff                  	// #255
  41d764:	movk	w21, #0x4, lsl #16
  41d768:	mov	x22, x20
  41d76c:	ldr	x20, [x20, #8]
  41d770:	cbnz	x20, 41d768 <_obstack_memory_used@@Base+0x54d8>
  41d774:	ldr	x20, [x22, #16]
  41d778:	cbnz	x20, 41d768 <_obstack_memory_used@@Base+0x54d8>
  41d77c:	ldr	w8, [x22, #48]
  41d780:	and	w8, w8, w21
  41d784:	cmp	w8, #0x3
  41d788:	b.eq	41d7bc <_obstack_memory_used@@Base+0x552c>  // b.none
  41d78c:	cmp	w8, #0x6
  41d790:	b.ne	41d7c8 <_obstack_memory_used@@Base+0x5538>  // b.any
  41d794:	ldr	x19, [x22, #40]
  41d798:	ldr	x0, [x19]
  41d79c:	bl	402620 <free@plt>
  41d7a0:	ldr	x0, [x19, #8]
  41d7a4:	bl	402620 <free@plt>
  41d7a8:	ldr	x0, [x19, #16]
  41d7ac:	bl	402620 <free@plt>
  41d7b0:	ldr	x0, [x19, #24]
  41d7b4:	bl	402620 <free@plt>
  41d7b8:	b	41d7c0 <_obstack_memory_used@@Base+0x5530>
  41d7bc:	ldr	x19, [x22, #40]
  41d7c0:	mov	x0, x19
  41d7c4:	bl	402620 <free@plt>
  41d7c8:	ldr	x8, [x22]
  41d7cc:	cbz	x8, 41d7ec <_obstack_memory_used@@Base+0x555c>
  41d7d0:	ldr	x20, [x8, #16]
  41d7d4:	cmp	x20, x22
  41d7d8:	mov	x22, x8
  41d7dc:	b.eq	41d77c <_obstack_memory_used@@Base+0x54ec>  // b.none
  41d7e0:	mov	x22, x8
  41d7e4:	cbz	x20, 41d77c <_obstack_memory_used@@Base+0x54ec>
  41d7e8:	b	41d768 <_obstack_memory_used@@Base+0x54d8>
  41d7ec:	mov	x0, xzr
  41d7f0:	b	41d73c <_obstack_memory_used@@Base+0x54ac>
  41d7f4:	ldr	x9, [sp]
  41d7f8:	mov	w8, #0xc                   	// #12
  41d7fc:	str	w8, [x9]
  41d800:	b	41d73c <_obstack_memory_used@@Base+0x54ac>
  41d804:	sub	sp, sp, #0x50
  41d808:	stp	x29, x30, [sp, #16]
  41d80c:	stp	x24, x23, [sp, #32]
  41d810:	stp	x22, x21, [sp, #48]
  41d814:	stp	x20, x19, [sp, #64]
  41d818:	ldr	x9, [x1, #104]
  41d81c:	ldr	x8, [x1, #72]
  41d820:	mov	x19, x0
  41d824:	add	x29, sp, #0x10
  41d828:	cmp	x9, x8
  41d82c:	b.le	41d910 <_obstack_memory_used@@Base+0x5680>
  41d830:	ldr	x9, [x1, #8]
  41d834:	mov	x23, x19
  41d838:	mov	x20, x2
  41d83c:	mov	x21, x1
  41d840:	ldrb	w24, [x9, x8]
  41d844:	strb	w24, [x23], #8
  41d848:	ldr	w8, [x23]
  41d84c:	and	w9, w8, #0xff9fffff
  41d850:	str	w9, [x23]
  41d854:	ldr	w11, [x1, #144]
  41d858:	cmp	w11, #0x2
  41d85c:	b.lt	41d880 <_obstack_memory_used@@Base+0x55f0>  // b.tstop
  41d860:	ldr	x9, [x21, #72]
  41d864:	ldr	x10, [x21, #48]
  41d868:	cmp	x9, x10
  41d86c:	b.eq	41d880 <_obstack_memory_used@@Base+0x55f0>  // b.none
  41d870:	ldr	x10, [x21, #16]
  41d874:	ldr	w9, [x10, x9, lsl #2]
  41d878:	cmn	w9, #0x1
  41d87c:	b.eq	41da50 <_obstack_memory_used@@Base+0x57c0>  // b.none
  41d880:	mov	w9, #0xff00                	// #65280
  41d884:	cmp	w24, #0x5c
  41d888:	movk	w9, #0xff9f, lsl #16
  41d88c:	b.ne	41d920 <_obstack_memory_used@@Base+0x5690>  // b.any
  41d890:	ldr	x12, [x21, #72]
  41d894:	ldr	x13, [x21, #88]
  41d898:	add	x10, x12, #0x1
  41d89c:	cmp	x10, x13
  41d8a0:	b.ge	41d970 <_obstack_memory_used@@Base+0x56e0>  // b.tcont
  41d8a4:	ldrb	w13, [x21, #139]
  41d8a8:	cbnz	w13, 41dd24 <_obstack_memory_used@@Base+0x5a94>
  41d8ac:	ldr	x11, [x21, #8]
  41d8b0:	ldrb	w22, [x11, x10]
  41d8b4:	and	w8, w8, w9
  41d8b8:	orr	w24, w8, #0x1
  41d8bc:	strb	w22, [x19]
  41d8c0:	str	w24, [x19, #8]
  41d8c4:	ldr	w8, [x21, #144]
  41d8c8:	cmp	w8, #0x2
  41d8cc:	b.lt	41d9e0 <_obstack_memory_used@@Base+0x5750>  // b.tstop
  41d8d0:	ldr	x8, [x21, #72]
  41d8d4:	ldr	x9, [x21, #16]
  41d8d8:	add	x8, x9, x8, lsl #2
  41d8dc:	ldr	w21, [x8, #4]
  41d8e0:	mov	w0, w21
  41d8e4:	bl	402710 <iswalnum@plt>
  41d8e8:	ldr	w9, [x23]
  41d8ec:	cmp	w0, #0x0
  41d8f0:	mov	w8, #0x5f                  	// #95
  41d8f4:	mov	w10, #0x400000              	// #4194304
  41d8f8:	ccmp	w21, w8, #0x4, eq  // eq = none
  41d8fc:	csel	w8, w10, wzr, eq  // eq = none
  41d900:	and	w9, w9, #0xffbfffff
  41d904:	orr	w8, w8, w9
  41d908:	and	x9, x22, #0xff
  41d90c:	b	41da08 <_obstack_memory_used@@Base+0x5778>
  41d910:	mov	w8, #0x2                   	// #2
  41d914:	mov	w0, wzr
  41d918:	strb	w8, [x19, #8]
  41d91c:	b	41db80 <_obstack_memory_used@@Base+0x58f0>
  41d920:	and	w8, w8, w9
  41d924:	orr	w22, w8, #0x1
  41d928:	str	w22, [x23]
  41d92c:	ldr	w8, [x21, #144]
  41d930:	cmp	w8, #0x2
  41d934:	b.lt	41d980 <_obstack_memory_used@@Base+0x56f0>  // b.tstop
  41d938:	ldr	x8, [x21, #72]
  41d93c:	ldr	x9, [x21, #16]
  41d940:	ldr	w22, [x9, x8, lsl #2]
  41d944:	mov	w0, w22
  41d948:	bl	402710 <iswalnum@plt>
  41d94c:	ldr	w9, [x23]
  41d950:	cmp	w0, #0x0
  41d954:	mov	w8, #0x5f                  	// #95
  41d958:	ccmp	w22, w8, #0x4, eq  // eq = none
  41d95c:	mov	w8, #0x400000              	// #4194304
  41d960:	csel	w8, w8, wzr, eq  // eq = none
  41d964:	and	w9, w9, #0xffbfffff
  41d968:	orr	w8, w8, w9
  41d96c:	b	41d9ac <_obstack_memory_used@@Base+0x571c>
  41d970:	and	w8, w8, w9
  41d974:	mov	w9, #0x24                  	// #36
  41d978:	orr	w8, w8, w9
  41d97c:	b	41db78 <_obstack_memory_used@@Base+0x58e8>
  41d980:	bl	402610 <__ctype_b_loc@plt>
  41d984:	ldr	x8, [x0]
  41d988:	cmp	w24, #0x5f
  41d98c:	cset	w9, eq  // eq = none
  41d990:	ldrh	w8, [x8, x24, lsl #1]
  41d994:	and	w8, w8, #0x8
  41d998:	orr	w8, w9, w8, lsr #3
  41d99c:	cmp	w8, #0x0
  41d9a0:	mov	w8, #0x400000              	// #4194304
  41d9a4:	csel	w8, w8, wzr, ne  // ne = any
  41d9a8:	orr	w8, w8, w22
  41d9ac:	sub	w9, w24, #0xa
  41d9b0:	cmp	w9, #0x73
  41d9b4:	mov	w0, #0x1                   	// #1
  41d9b8:	str	w8, [x23]
  41d9bc:	b.hi	41db80 <_obstack_memory_used@@Base+0x58f0>  // b.pmore
  41d9c0:	adrp	x10, 42a000 <_obstack_memory_used@@Base+0x11d70>
  41d9c4:	add	x10, x10, #0xf18
  41d9c8:	adr	x11, 41d9d8 <_obstack_memory_used@@Base+0x5748>
  41d9cc:	ldrb	w12, [x10, x9]
  41d9d0:	add	x11, x11, x12, lsl #2
  41d9d4:	br	x11
  41d9d8:	tbnz	w20, #11, 41db70 <_obstack_memory_used@@Base+0x58e0>
  41d9dc:	b	41db7c <_obstack_memory_used@@Base+0x58ec>
  41d9e0:	bl	402610 <__ctype_b_loc@plt>
  41d9e4:	ldr	x8, [x0]
  41d9e8:	and	x9, x22, #0xff
  41d9ec:	and	w10, w22, #0xff
  41d9f0:	cmp	w10, #0x5f
  41d9f4:	ldrh	w8, [x8, x9, lsl #1]
  41d9f8:	cset	w10, eq  // eq = none
  41d9fc:	ubfx	w8, w8, #3, #1
  41da00:	orr	w8, w8, w10
  41da04:	orr	w8, w24, w8, lsl #22
  41da08:	and	w10, w22, #0xff
  41da0c:	sub	w10, w10, #0x27
  41da10:	cmp	w10, #0x56
  41da14:	mov	w0, #0x2                   	// #2
  41da18:	str	w8, [x23]
  41da1c:	b.hi	41db80 <_obstack_memory_used@@Base+0x58f0>  // b.pmore
  41da20:	adrp	x11, 42a000 <_obstack_memory_used@@Base+0x11d70>
  41da24:	add	x11, x11, #0xf8c
  41da28:	adr	x12, 41da38 <_obstack_memory_used@@Base+0x57a8>
  41da2c:	ldrb	w13, [x11, x10]
  41da30:	add	x12, x12, x13, lsl #2
  41da34:	br	x12
  41da38:	tbnz	w20, #14, 41dd1c <_obstack_memory_used@@Base+0x5a8c>
  41da3c:	and	w8, w8, #0xffffff00
  41da40:	sub	x9, x9, #0x31
  41da44:	orr	w8, w8, #0x4
  41da48:	str	x9, [x19]
  41da4c:	b	41dca0 <_obstack_memory_used@@Base+0x5a10>
  41da50:	mov	w9, #0xff00                	// #65280
  41da54:	movk	w9, #0xff9f, lsl #16
  41da58:	mov	w10, #0x1                   	// #1
  41da5c:	movk	w10, #0x20, lsl #16
  41da60:	and	w8, w8, w9
  41da64:	orr	w8, w8, w10
  41da68:	b	41db78 <_obstack_memory_used@@Base+0x58e8>
  41da6c:	tbnz	w20, #3, 41dab8 <_obstack_memory_used@@Base+0x5828>
  41da70:	ldr	x9, [x21, #72]
  41da74:	ldr	x10, [x21, #88]
  41da78:	add	x9, x9, #0x1
  41da7c:	cmp	x9, x10
  41da80:	b.eq	41dab8 <_obstack_memory_used@@Base+0x5828>  // b.none
  41da84:	mov	x0, sp
  41da88:	mov	x1, x21
  41da8c:	mov	x2, x20
  41da90:	str	x9, [x21, #72]
  41da94:	bl	41d804 <_obstack_memory_used@@Base+0x5574>
  41da98:	ldr	x8, [x21, #72]
  41da9c:	sub	x8, x8, #0x1
  41daa0:	str	x8, [x21, #72]
  41daa4:	ldrb	w8, [sp, #8]
  41daa8:	sub	w8, w8, #0x9
  41daac:	cmp	w8, #0x1
  41dab0:	b.hi	41db7c <_obstack_memory_used@@Base+0x58ec>  // b.pmore
  41dab4:	ldr	w8, [x23]
  41dab8:	and	w8, w8, #0xffffff00
  41dabc:	mov	w9, #0x20                  	// #32
  41dac0:	b	41db38 <_obstack_memory_used@@Base+0x58a8>
  41dac4:	tbz	w20, #13, 41db7c <_obstack_memory_used@@Base+0x58ec>
  41dac8:	and	w8, w8, #0xffffff00
  41dacc:	orr	w8, w8, #0x8
  41dad0:	b	41db78 <_obstack_memory_used@@Base+0x58e8>
  41dad4:	tbz	w20, #13, 41db7c <_obstack_memory_used@@Base+0x58ec>
  41dad8:	mov	w9, #0x9                   	// #9
  41dadc:	b	41db74 <_obstack_memory_used@@Base+0x58e4>
  41dae0:	mov	w9, #0xb                   	// #11
  41dae4:	b	41db74 <_obstack_memory_used@@Base+0x58e4>
  41dae8:	mov	w9, #0x402                 	// #1026
  41daec:	tst	x20, x9
  41daf0:	b.ne	41db7c <_obstack_memory_used@@Base+0x58ec>  // b.any
  41daf4:	mov	w9, #0x12                  	// #18
  41daf8:	b	41db74 <_obstack_memory_used@@Base+0x58e4>
  41dafc:	mov	w9, #0x5                   	// #5
  41db00:	b	41db74 <_obstack_memory_used@@Base+0x58e4>
  41db04:	mov	w9, #0x402                 	// #1026
  41db08:	tst	x20, x9
  41db0c:	b.ne	41db7c <_obstack_memory_used@@Base+0x58ec>  // b.any
  41db10:	mov	w9, #0x13                  	// #19
  41db14:	b	41db74 <_obstack_memory_used@@Base+0x58e4>
  41db18:	mov	w9, #0x14                  	// #20
  41db1c:	b	41db74 <_obstack_memory_used@@Base+0x58e4>
  41db20:	mov	w9, #0x8                   	// #8
  41db24:	movk	w9, #0x80, lsl #16
  41db28:	tst	x20, x9
  41db2c:	b.eq	41dbb4 <_obstack_memory_used@@Base+0x5924>  // b.none
  41db30:	and	w8, w8, #0xffffff00
  41db34:	mov	w9, #0x10                  	// #16
  41db38:	orr	w8, w8, #0xc
  41db3c:	str	w9, [x19]
  41db40:	str	w8, [x19, #8]
  41db44:	b	41db7c <_obstack_memory_used@@Base+0x58ec>
  41db48:	mvn	w9, w20
  41db4c:	mov	w10, #0x1200                	// #4608
  41db50:	tst	x9, x10
  41db54:	b.ne	41db7c <_obstack_memory_used@@Base+0x58ec>  // b.any
  41db58:	mov	w9, #0x17                  	// #23
  41db5c:	b	41db74 <_obstack_memory_used@@Base+0x58e4>
  41db60:	mov	w9, #0x8400                	// #33792
  41db64:	and	x9, x20, x9
  41db68:	cmp	x9, #0x8, lsl #12
  41db6c:	b.ne	41db7c <_obstack_memory_used@@Base+0x58ec>  // b.any
  41db70:	mov	w9, #0xa                   	// #10
  41db74:	bfxil	w8, w9, #0, #8
  41db78:	str	w8, [x23]
  41db7c:	mov	w0, #0x1                   	// #1
  41db80:	ldp	x20, x19, [sp, #64]
  41db84:	ldp	x22, x21, [sp, #48]
  41db88:	ldp	x24, x23, [sp, #32]
  41db8c:	ldp	x29, x30, [sp, #16]
  41db90:	add	sp, sp, #0x50
  41db94:	ret
  41db98:	mvn	w9, w20
  41db9c:	mov	w10, #0x1200                	// #4608
  41dba0:	tst	x9, x10
  41dba4:	b.ne	41db7c <_obstack_memory_used@@Base+0x58ec>  // b.any
  41dba8:	and	w8, w8, #0xffffff00
  41dbac:	orr	w8, w8, #0x18
  41dbb0:	b	41db78 <_obstack_memory_used@@Base+0x58e8>
  41dbb4:	ldr	x9, [x21, #72]
  41dbb8:	cbz	x9, 41db30 <_obstack_memory_used@@Base+0x58a0>
  41dbbc:	tbz	w20, #11, 41db7c <_obstack_memory_used@@Base+0x58ec>
  41dbc0:	ldr	x10, [x21, #8]
  41dbc4:	add	x9, x9, x10
  41dbc8:	ldurb	w9, [x9, #-1]
  41dbcc:	cmp	w9, #0xa
  41dbd0:	b.eq	41db30 <_obstack_memory_used@@Base+0x58a0>  // b.none
  41dbd4:	b	41db7c <_obstack_memory_used@@Base+0x58ec>
  41dbd8:	tbnz	w20, #19, 41dd1c <_obstack_memory_used@@Base+0x5a8c>
  41dbdc:	and	w8, w8, #0xffffff00
  41dbe0:	mov	w9, #0x80                  	// #128
  41dbe4:	b	41dc98 <_obstack_memory_used@@Base+0x5a08>
  41dbe8:	tbnz	w20, #13, 41dd1c <_obstack_memory_used@@Base+0x5a8c>
  41dbec:	and	w8, w8, #0xffffff00
  41dbf0:	orr	w8, w8, #0x8
  41dbf4:	b	41dcf4 <_obstack_memory_used@@Base+0x5a64>
  41dbf8:	tbnz	w20, #13, 41dd1c <_obstack_memory_used@@Base+0x5a8c>
  41dbfc:	mov	w9, #0x9                   	// #9
  41dc00:	b	41dcf0 <_obstack_memory_used@@Base+0x5a60>
  41dc04:	mov	w9, #0x402                 	// #1026
  41dc08:	and	x9, x20, x9
  41dc0c:	cmp	x9, #0x2
  41dc10:	b.ne	41dd1c <_obstack_memory_used@@Base+0x5a8c>  // b.any
  41dc14:	mov	w9, #0x12                  	// #18
  41dc18:	b	41dcf0 <_obstack_memory_used@@Base+0x5a60>
  41dc1c:	tbnz	w20, #19, 41dd1c <_obstack_memory_used@@Base+0x5a8c>
  41dc20:	and	w8, w8, #0xffffff00
  41dc24:	mov	w9, #0x6                   	// #6
  41dc28:	b	41dc98 <_obstack_memory_used@@Base+0x5a08>
  41dc2c:	tbnz	w20, #19, 41dd1c <_obstack_memory_used@@Base+0x5a8c>
  41dc30:	and	w8, w8, #0xffffff00
  41dc34:	mov	w9, #0x9                   	// #9
  41dc38:	b	41dc98 <_obstack_memory_used@@Base+0x5a08>
  41dc3c:	mov	w9, #0x402                 	// #1026
  41dc40:	and	x9, x20, x9
  41dc44:	cmp	x9, #0x2
  41dc48:	b.ne	41dd1c <_obstack_memory_used@@Base+0x5a8c>  // b.any
  41dc4c:	mov	w9, #0x13                  	// #19
  41dc50:	b	41dcf0 <_obstack_memory_used@@Base+0x5a60>
  41dc54:	tbnz	w20, #19, 41dd1c <_obstack_memory_used@@Base+0x5a8c>
  41dc58:	and	w8, w8, #0xffffff00
  41dc5c:	mov	w9, #0x200                 	// #512
  41dc60:	b	41dc98 <_obstack_memory_used@@Base+0x5a08>
  41dc64:	tbnz	w20, #19, 41dd1c <_obstack_memory_used@@Base+0x5a8c>
  41dc68:	mov	w9, #0x23                  	// #35
  41dc6c:	b	41dcf0 <_obstack_memory_used@@Base+0x5a60>
  41dc70:	tbnz	w20, #19, 41dd1c <_obstack_memory_used@@Base+0x5a8c>
  41dc74:	mov	w9, #0x21                  	// #33
  41dc78:	b	41dcf0 <_obstack_memory_used@@Base+0x5a60>
  41dc7c:	tbnz	w20, #19, 41dd1c <_obstack_memory_used@@Base+0x5a8c>
  41dc80:	and	w8, w8, #0xffffff00
  41dc84:	mov	w9, #0x40                  	// #64
  41dc88:	b	41dc98 <_obstack_memory_used@@Base+0x5a08>
  41dc8c:	tbnz	w20, #19, 41dd1c <_obstack_memory_used@@Base+0x5a8c>
  41dc90:	and	w8, w8, #0xffffff00
  41dc94:	mov	w9, #0x100                 	// #256
  41dc98:	orr	w8, w8, #0xc
  41dc9c:	str	w9, [x19]
  41dca0:	str	w8, [x19, #8]
  41dca4:	mov	w0, #0x2                   	// #2
  41dca8:	b	41db80 <_obstack_memory_used@@Base+0x58f0>
  41dcac:	tbnz	w20, #19, 41dd1c <_obstack_memory_used@@Base+0x5a8c>
  41dcb0:	mov	w9, #0x22                  	// #34
  41dcb4:	b	41dcf0 <_obstack_memory_used@@Base+0x5a60>
  41dcb8:	tbnz	w20, #19, 41dd1c <_obstack_memory_used@@Base+0x5a8c>
  41dcbc:	and	w8, w8, #0xffffff00
  41dcc0:	orr	w8, w8, #0x20
  41dcc4:	b	41dcf4 <_obstack_memory_used@@Base+0x5a64>
  41dcc8:	mov	w9, #0x1200                	// #4608
  41dccc:	and	x9, x20, x9
  41dcd0:	cmp	x9, #0x200
  41dcd4:	b.ne	41dd1c <_obstack_memory_used@@Base+0x5a8c>  // b.any
  41dcd8:	mov	w9, #0x17                  	// #23
  41dcdc:	b	41dcf0 <_obstack_memory_used@@Base+0x5a60>
  41dce0:	mov	w9, #0x8400                	// #33792
  41dce4:	tst	x20, x9
  41dce8:	b.ne	41dd1c <_obstack_memory_used@@Base+0x5a8c>  // b.any
  41dcec:	mov	w9, #0xa                   	// #10
  41dcf0:	bfxil	w8, w9, #0, #8
  41dcf4:	str	w8, [x23]
  41dcf8:	mov	w0, #0x2                   	// #2
  41dcfc:	b	41db80 <_obstack_memory_used@@Base+0x58f0>
  41dd00:	mov	w9, #0x1200                	// #4608
  41dd04:	and	x9, x20, x9
  41dd08:	cmp	x9, #0x200
  41dd0c:	b.ne	41dd1c <_obstack_memory_used@@Base+0x5a8c>  // b.any
  41dd10:	and	w8, w8, #0xffffff00
  41dd14:	orr	w8, w8, #0x18
  41dd18:	b	41dcf4 <_obstack_memory_used@@Base+0x5a64>
  41dd1c:	mov	w0, #0x2                   	// #2
  41dd20:	b	41db80 <_obstack_memory_used@@Base+0x58f0>
  41dd24:	cmp	w11, #0x2
  41dd28:	b.lt	41dd58 <_obstack_memory_used@@Base+0x5ac8>  // b.tstop
  41dd2c:	ldr	x11, [x21, #16]
  41dd30:	ldr	w13, [x11, x10, lsl #2]
  41dd34:	cmn	w13, #0x1
  41dd38:	b.eq	41d8ac <_obstack_memory_used@@Base+0x561c>  // b.none
  41dd3c:	ldr	x13, [x21, #48]
  41dd40:	add	x12, x12, #0x2
  41dd44:	cmp	x13, x12
  41dd48:	b.eq	41dd58 <_obstack_memory_used@@Base+0x5ac8>  // b.none
  41dd4c:	ldr	w11, [x11, x12, lsl #2]
  41dd50:	cmn	w11, #0x1
  41dd54:	b.eq	41d8ac <_obstack_memory_used@@Base+0x561c>  // b.none
  41dd58:	ldrb	w11, [x21, #140]
  41dd5c:	mov	x12, x10
  41dd60:	cbz	w11, 41dd6c <_obstack_memory_used@@Base+0x5adc>
  41dd64:	ldr	x12, [x21, #24]
  41dd68:	ldr	x12, [x12, x10, lsl #3]
  41dd6c:	ldr	x13, [x21, #40]
  41dd70:	ldr	x14, [x21]
  41dd74:	add	x12, x13, x12
  41dd78:	ldrsb	w22, [x14, x12]
  41dd7c:	cbz	w11, 41d8b4 <_obstack_memory_used@@Base+0x5624>
  41dd80:	tbnz	w22, #31, 41d8ac <_obstack_memory_used@@Base+0x561c>
  41dd84:	b	41d8b4 <_obstack_memory_used@@Base+0x5624>
  41dd88:	stp	x29, x30, [sp, #-96]!
  41dd8c:	stp	x28, x27, [sp, #16]
  41dd90:	stp	x26, x25, [sp, #32]
  41dd94:	stp	x24, x23, [sp, #48]
  41dd98:	stp	x22, x21, [sp, #64]
  41dd9c:	stp	x20, x19, [sp, #80]
  41dda0:	ldr	x27, [x1]
  41dda4:	mov	x29, sp
  41dda8:	mov	x19, x5
  41ddac:	mov	x21, x4
  41ddb0:	mov	x22, x3
  41ddb4:	mov	x23, x2
  41ddb8:	mov	x24, x1
  41ddbc:	mov	x25, x0
  41ddc0:	bl	41e078 <_obstack_memory_used@@Base+0x5de8>
  41ddc4:	mov	x20, x0
  41ddc8:	cbnz	x0, 41ddd4 <_obstack_memory_used@@Base+0x5b44>
  41ddcc:	ldr	w8, [x19]
  41ddd0:	cbnz	w8, 41df34 <_obstack_memory_used@@Base+0x5ca4>
  41ddd4:	mov	x28, #0xffffffffffffffff    	// #-1
  41ddd8:	b	41dde4 <_obstack_memory_used@@Base+0x5b54>
  41dddc:	cmp	x20, #0x0
  41dde0:	csel	x20, x26, x20, eq  // eq = none
  41dde4:	ldrb	w8, [x23, #8]
  41dde8:	orr	w9, w8, #0x8
  41ddec:	cmp	w9, #0xa
  41ddf0:	b.eq	41df38 <_obstack_memory_used@@Base+0x5ca8>  // b.none
  41ddf4:	cbz	x21, 41de00 <_obstack_memory_used@@Base+0x5b70>
  41ddf8:	cmp	w8, #0x9
  41ddfc:	b.eq	41df38 <_obstack_memory_used@@Base+0x5ca8>  // b.none
  41de00:	mov	x0, x25
  41de04:	mov	x1, x24
  41de08:	mov	x2, x23
  41de0c:	mov	x3, x22
  41de10:	mov	x4, x21
  41de14:	mov	x5, x19
  41de18:	bl	41e078 <_obstack_memory_used@@Base+0x5de8>
  41de1c:	mov	x26, x0
  41de20:	cbnz	x0, 41de2c <_obstack_memory_used@@Base+0x5b9c>
  41de24:	ldr	w8, [x19]
  41de28:	cbnz	w8, 41dea4 <_obstack_memory_used@@Base+0x5c14>
  41de2c:	cbz	x20, 41dddc <_obstack_memory_used@@Base+0x5b4c>
  41de30:	cbz	x26, 41dddc <_obstack_memory_used@@Base+0x5b4c>
  41de34:	ldr	w8, [x27, #128]
  41de38:	cmp	w8, #0xf
  41de3c:	b.eq	41de80 <_obstack_memory_used@@Base+0x5bf0>  // b.none
  41de40:	ldr	x0, [x27, #112]
  41de44:	add	w9, w8, #0x1
  41de48:	sxtw	x8, w8
  41de4c:	add	x8, x0, x8, lsl #6
  41de50:	str	w9, [x27, #128]
  41de54:	str	xzr, [x8, #8]!
  41de58:	mov	w9, #0x10                  	// #16
  41de5c:	stp	x20, x26, [x8, #8]
  41de60:	stp	xzr, xzr, [x8, #32]
  41de64:	str	w9, [x8, #48]
  41de68:	str	xzr, [x8, #24]
  41de6c:	str	x28, [x8, #56]
  41de70:	str	x8, [x20]
  41de74:	str	x8, [x26]
  41de78:	mov	x20, x8
  41de7c:	b	41dde4 <_obstack_memory_used@@Base+0x5b54>
  41de80:	mov	w0, #0x3c8                 	// #968
  41de84:	bl	4023a0 <malloc@plt>
  41de88:	cbz	x0, 41df58 <_obstack_memory_used@@Base+0x5cc8>
  41de8c:	ldr	x9, [x27, #112]
  41de90:	mov	w8, wzr
  41de94:	str	x9, [x0]
  41de98:	str	x0, [x27, #112]
  41de9c:	str	wzr, [x27, #128]
  41dea0:	b	41de44 <_obstack_memory_used@@Base+0x5bb4>
  41dea4:	cbz	x20, 41df38 <_obstack_memory_used@@Base+0x5ca8>
  41dea8:	mov	w21, #0xff                  	// #255
  41deac:	movk	w21, #0x4, lsl #16
  41deb0:	mov	x22, x20
  41deb4:	ldr	x20, [x20, #8]
  41deb8:	cbnz	x20, 41deb0 <_obstack_memory_used@@Base+0x5c20>
  41debc:	ldr	x20, [x22, #16]
  41dec0:	cbnz	x20, 41deb0 <_obstack_memory_used@@Base+0x5c20>
  41dec4:	ldr	w8, [x22, #48]
  41dec8:	and	w8, w8, w21
  41decc:	cmp	w8, #0x3
  41ded0:	b.eq	41df04 <_obstack_memory_used@@Base+0x5c74>  // b.none
  41ded4:	cmp	w8, #0x6
  41ded8:	b.ne	41df10 <_obstack_memory_used@@Base+0x5c80>  // b.any
  41dedc:	ldr	x19, [x22, #40]
  41dee0:	ldr	x0, [x19]
  41dee4:	bl	402620 <free@plt>
  41dee8:	ldr	x0, [x19, #8]
  41deec:	bl	402620 <free@plt>
  41def0:	ldr	x0, [x19, #16]
  41def4:	bl	402620 <free@plt>
  41def8:	ldr	x0, [x19, #24]
  41defc:	bl	402620 <free@plt>
  41df00:	b	41df08 <_obstack_memory_used@@Base+0x5c78>
  41df04:	ldr	x19, [x22, #40]
  41df08:	mov	x0, x19
  41df0c:	bl	402620 <free@plt>
  41df10:	ldr	x8, [x22]
  41df14:	cbz	x8, 41df34 <_obstack_memory_used@@Base+0x5ca4>
  41df18:	ldr	x20, [x8, #16]
  41df1c:	cmp	x20, x22
  41df20:	mov	x22, x8
  41df24:	b.eq	41dec4 <_obstack_memory_used@@Base+0x5c34>  // b.none
  41df28:	mov	x22, x8
  41df2c:	cbz	x20, 41dec4 <_obstack_memory_used@@Base+0x5c34>
  41df30:	b	41deb0 <_obstack_memory_used@@Base+0x5c20>
  41df34:	mov	x20, xzr
  41df38:	mov	x0, x20
  41df3c:	ldp	x20, x19, [sp, #80]
  41df40:	ldp	x22, x21, [sp, #64]
  41df44:	ldp	x24, x23, [sp, #48]
  41df48:	ldp	x26, x25, [sp, #32]
  41df4c:	ldp	x28, x27, [sp, #16]
  41df50:	ldp	x29, x30, [sp], #96
  41df54:	ret
  41df58:	mov	w22, #0xff                  	// #255
  41df5c:	movk	w22, #0x4, lsl #16
  41df60:	mov	x23, x26
  41df64:	ldr	x26, [x26, #8]
  41df68:	cbnz	x26, 41df60 <_obstack_memory_used@@Base+0x5cd0>
  41df6c:	ldr	x26, [x23, #16]
  41df70:	cbnz	x26, 41df60 <_obstack_memory_used@@Base+0x5cd0>
  41df74:	ldr	w8, [x23, #48]
  41df78:	and	w8, w8, w22
  41df7c:	cmp	w8, #0x3
  41df80:	b.eq	41dfb4 <_obstack_memory_used@@Base+0x5d24>  // b.none
  41df84:	cmp	w8, #0x6
  41df88:	b.ne	41dfc0 <_obstack_memory_used@@Base+0x5d30>  // b.any
  41df8c:	ldr	x21, [x23, #40]
  41df90:	ldr	x0, [x21]
  41df94:	bl	402620 <free@plt>
  41df98:	ldr	x0, [x21, #8]
  41df9c:	bl	402620 <free@plt>
  41dfa0:	ldr	x0, [x21, #16]
  41dfa4:	bl	402620 <free@plt>
  41dfa8:	ldr	x0, [x21, #24]
  41dfac:	bl	402620 <free@plt>
  41dfb0:	b	41dfb8 <_obstack_memory_used@@Base+0x5d28>
  41dfb4:	ldr	x21, [x23, #40]
  41dfb8:	mov	x0, x21
  41dfbc:	bl	402620 <free@plt>
  41dfc0:	ldr	x8, [x23]
  41dfc4:	cbz	x8, 41dfe4 <_obstack_memory_used@@Base+0x5d54>
  41dfc8:	ldr	x26, [x8, #16]
  41dfcc:	cmp	x26, x23
  41dfd0:	mov	x23, x8
  41dfd4:	b.eq	41df74 <_obstack_memory_used@@Base+0x5ce4>  // b.none
  41dfd8:	mov	x23, x8
  41dfdc:	cbz	x26, 41df74 <_obstack_memory_used@@Base+0x5ce4>
  41dfe0:	b	41df60 <_obstack_memory_used@@Base+0x5cd0>
  41dfe4:	mov	x21, x20
  41dfe8:	ldr	x20, [x20, #8]
  41dfec:	cbnz	x20, 41dfe4 <_obstack_memory_used@@Base+0x5d54>
  41dff0:	ldr	x20, [x21, #16]
  41dff4:	cbnz	x20, 41dfe4 <_obstack_memory_used@@Base+0x5d54>
  41dff8:	ldr	w8, [x21, #48]
  41dffc:	and	w8, w8, w22
  41e000:	cmp	w8, #0x3
  41e004:	b.eq	41e038 <_obstack_memory_used@@Base+0x5da8>  // b.none
  41e008:	cmp	w8, #0x6
  41e00c:	b.ne	41e044 <_obstack_memory_used@@Base+0x5db4>  // b.any
  41e010:	ldr	x20, [x21, #40]
  41e014:	ldr	x0, [x20]
  41e018:	bl	402620 <free@plt>
  41e01c:	ldr	x0, [x20, #8]
  41e020:	bl	402620 <free@plt>
  41e024:	ldr	x0, [x20, #16]
  41e028:	bl	402620 <free@plt>
  41e02c:	ldr	x0, [x20, #24]
  41e030:	bl	402620 <free@plt>
  41e034:	b	41e03c <_obstack_memory_used@@Base+0x5dac>
  41e038:	ldr	x20, [x21, #40]
  41e03c:	mov	x0, x20
  41e040:	bl	402620 <free@plt>
  41e044:	ldr	x8, [x21]
  41e048:	cbz	x8, 41e068 <_obstack_memory_used@@Base+0x5dd8>
  41e04c:	ldr	x20, [x8, #16]
  41e050:	cmp	x20, x21
  41e054:	mov	x21, x8
  41e058:	b.eq	41dff8 <_obstack_memory_used@@Base+0x5d68>  // b.none
  41e05c:	mov	x21, x8
  41e060:	cbz	x20, 41dff8 <_obstack_memory_used@@Base+0x5d68>
  41e064:	b	41dfe4 <_obstack_memory_used@@Base+0x5d54>
  41e068:	mov	x20, xzr
  41e06c:	mov	w8, #0xc                   	// #12
  41e070:	str	w8, [x19]
  41e074:	b	41df38 <_obstack_memory_used@@Base+0x5ca8>
  41e078:	sub	sp, sp, #0x120
  41e07c:	stp	x29, x30, [sp, #192]
  41e080:	stp	x28, x27, [sp, #208]
  41e084:	stp	x26, x25, [sp, #224]
  41e088:	stp	x24, x23, [sp, #240]
  41e08c:	stp	x22, x21, [sp, #256]
  41e090:	stp	x20, x19, [sp, #272]
  41e094:	stp	x0, x3, [sp, #32]
  41e098:	ldr	w8, [x2, #8]
  41e09c:	ldr	x23, [x1]
  41e0a0:	adrp	x11, 42a000 <_obstack_memory_used@@Base+0x11d70>
  41e0a4:	add	x11, x11, #0xfe4
  41e0a8:	and	w9, w8, #0xff
  41e0ac:	sub	w10, w9, #0x1
  41e0b0:	adr	x12, 41e0dc <_obstack_memory_used@@Base+0x5e4c>
  41e0b4:	ldrh	w13, [x11, x10, lsl #1]
  41e0b8:	add	x12, x12, x13, lsl #2
  41e0bc:	add	x29, sp, #0xc0
  41e0c0:	mov	x28, x5
  41e0c4:	mov	x25, x4
  41e0c8:	mov	x14, x2
  41e0cc:	mov	x26, x1
  41e0d0:	mov	x24, xzr
  41e0d4:	str	x2, [sp, #56]
  41e0d8:	br	x12
  41e0dc:	ldr	x10, [sp, #40]
  41e0e0:	tbnz	w10, #5, 41e638 <_obstack_memory_used@@Base+0x63a8>
  41e0e4:	tbnz	w10, #4, 41e650 <_obstack_memory_used@@Base+0x63c0>
  41e0e8:	ldr	x10, [sp, #40]
  41e0ec:	tbnz	w10, #17, 41e170 <_obstack_memory_used@@Base+0x5ee0>
  41e0f0:	cmp	w9, #0x9
  41e0f4:	b.ne	41e170 <_obstack_memory_used@@Base+0x5ee0>  // b.any
  41e0f8:	mov	w8, #0x10                  	// #16
  41e0fc:	b	41ff48 <_obstack_memory_used@@Base+0x7cb8>
  41e100:	ldr	x8, [sp, #32]
  41e104:	cmp	w9, #0x21
  41e108:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  41e10c:	adrp	x3, 42b000 <_obstack_memory_used@@Base+0x12d70>
  41e110:	ldr	x1, [x8, #120]
  41e114:	cset	w4, eq  // eq = none
  41e118:	add	x2, x2, #0x709
  41e11c:	add	x3, x3, #0x292
  41e120:	b	41e144 <_obstack_memory_used@@Base+0x5eb4>
  41e124:	ldr	x8, [sp, #32]
  41e128:	cmp	w9, #0x23
  41e12c:	adrp	x2, 42a000 <_obstack_memory_used@@Base+0x11d70>
  41e130:	adrp	x3, 429000 <_obstack_memory_used@@Base+0x10d70>
  41e134:	ldr	x1, [x8, #120]
  41e138:	cset	w4, eq  // eq = none
  41e13c:	add	x2, x2, #0x6fd
  41e140:	add	x3, x3, #0xb5d
  41e144:	mov	x0, x23
  41e148:	mov	x5, x28
  41e14c:	bl	420110 <_obstack_memory_used@@Base+0x7e80>
  41e150:	mov	x24, x0
  41e154:	cbnz	x0, 41e168 <_obstack_memory_used@@Base+0x5ed8>
  41e158:	ldr	w8, [x28]
  41e15c:	ldr	x14, [sp, #56]
  41e160:	cbz	w8, 41ed38 <_obstack_memory_used@@Base+0x6aa8>
  41e164:	b	41e6d4 <_obstack_memory_used@@Base+0x6444>
  41e168:	ldr	x14, [sp, #56]
  41e16c:	b	41ed38 <_obstack_memory_used@@Base+0x6aa8>
  41e170:	and	w8, w8, #0xffffff00
  41e174:	orr	w8, w8, #0x1
  41e178:	str	w8, [x14, #8]
  41e17c:	ldr	w8, [x23, #128]
  41e180:	cmp	w8, #0xf
  41e184:	b.eq	41fcb0 <_obstack_memory_used@@Base+0x7a20>  // b.none
  41e188:	ldr	x0, [x23, #112]
  41e18c:	add	w9, w8, #0x1
  41e190:	sxtw	x8, w8
  41e194:	add	x24, x0, x8, lsl #6
  41e198:	str	w9, [x23, #128]
  41e19c:	str	xzr, [x24, #8]!
  41e1a0:	stp	xzr, xzr, [x24, #8]
  41e1a4:	ldr	q0, [x14]
  41e1a8:	mov	x9, #0xffffffffffffffff    	// #-1
  41e1ac:	stp	xzr, xzr, [x24, #24]
  41e1b0:	str	x9, [x24, #56]
  41e1b4:	stur	q0, [x24, #40]
  41e1b8:	ldr	w8, [x24, #48]
  41e1bc:	and	w8, w8, #0xfff3ffff
  41e1c0:	str	w8, [x24, #48]
  41e1c4:	b	41ed38 <_obstack_memory_used@@Base+0x6aa8>
  41e1c8:	ldr	w8, [x14]
  41e1cc:	mov	w9, #0x30f                 	// #783
  41e1d0:	tst	w8, w9
  41e1d4:	b.eq	41e204 <_obstack_memory_used@@Base+0x5f74>  // b.none
  41e1d8:	ldrb	w8, [x23, #176]
  41e1dc:	tbnz	w8, #4, 41e200 <_obstack_memory_used@@Base+0x5f70>
  41e1e0:	orr	w9, w8, #0x10
  41e1e4:	strb	w9, [x23, #176]
  41e1e8:	tbnz	w8, #3, 41ff74 <_obstack_memory_used@@Base+0x7ce4>
  41e1ec:	adrp	x9, 42a000 <_obstack_memory_used@@Base+0x11d70>
  41e1f0:	ldr	q0, [x9, #3824]
  41e1f4:	stur	q0, [x23, #184]
  41e1f8:	tbz	w8, #2, 41ff80 <_obstack_memory_used@@Base+0x7cf0>
  41e1fc:	stp	xzr, xzr, [x23, #200]
  41e200:	ldr	w8, [x14]
  41e204:	cmp	w8, #0x200
  41e208:	b.eq	41f9e4 <_obstack_memory_used@@Base+0x7754>  // b.none
  41e20c:	ldr	x21, [sp, #40]
  41e210:	cmp	w8, #0x100
  41e214:	b.ne	41fae0 <_obstack_memory_used@@Base+0x7850>  // b.any
  41e218:	mov	w8, #0x6                   	// #6
  41e21c:	str	w8, [x14]
  41e220:	ldr	w8, [x23, #128]
  41e224:	cmp	w8, #0xf
  41e228:	b.eq	41fec0 <_obstack_memory_used@@Base+0x7c30>  // b.none
  41e22c:	ldr	x0, [x23, #112]
  41e230:	add	w9, w8, #0x1
  41e234:	sxtw	x8, w8
  41e238:	add	x19, x0, x8, lsl #6
  41e23c:	str	w9, [x23, #128]
  41e240:	str	xzr, [x19, #8]!
  41e244:	stp	xzr, xzr, [x19, #8]
  41e248:	ldr	q0, [x14]
  41e24c:	mov	x8, #0xffffffffffffffff    	// #-1
  41e250:	str	x8, [x19, #56]
  41e254:	stp	xzr, xzr, [x19, #24]
  41e258:	stur	q0, [x19, #40]
  41e25c:	ldr	w9, [x19, #48]
  41e260:	and	w8, w9, #0xfff3ffff
  41e264:	str	w8, [x19, #48]
  41e268:	mov	w8, #0x9                   	// #9
  41e26c:	b	41fa3c <_obstack_memory_used@@Base+0x77ac>
  41e270:	mov	w0, #0x20                  	// #32
  41e274:	mov	w1, #0x1                   	// #1
  41e278:	stur	xzr, [x29, #-16]
  41e27c:	bl	402480 <calloc@plt>
  41e280:	mov	x25, x0
  41e284:	mov	w0, #0x50                  	// #80
  41e288:	mov	w1, #0x1                   	// #1
  41e28c:	bl	402480 <calloc@plt>
  41e290:	mov	x24, x0
  41e294:	cbz	x25, 41fce0 <_obstack_memory_used@@Base+0x7a50>
  41e298:	cbz	x24, 41fce0 <_obstack_memory_used@@Base+0x7a50>
  41e29c:	ldr	x21, [sp, #56]
  41e2a0:	ldp	x19, x20, [sp, #32]
  41e2a4:	mov	x0, x21
  41e2a8:	mov	x1, x19
  41e2ac:	mov	x2, x20
  41e2b0:	bl	420450 <_obstack_memory_used@@Base+0x81c0>
  41e2b4:	ldr	w8, [x21, #8]
  41e2b8:	mov	x2, x21
  41e2bc:	mov	w3, w0
  41e2c0:	and	w9, w8, #0xff
  41e2c4:	cmp	w9, #0x19
  41e2c8:	b.eq	41e6dc <_obstack_memory_used@@Base+0x644c>  // b.none
  41e2cc:	cmp	w9, #0x2
  41e2d0:	b.eq	41fcd8 <_obstack_memory_used@@Base+0x7a48>  // b.none
  41e2d4:	str	wzr, [sp, #48]
  41e2d8:	b	41e734 <_obstack_memory_used@@Base+0x64a4>
  41e2dc:	ldr	w8, [x23, #128]
  41e2e0:	cmp	w8, #0xf
  41e2e4:	b.eq	41fcf4 <_obstack_memory_used@@Base+0x7a64>  // b.none
  41e2e8:	ldr	x0, [x23, #112]
  41e2ec:	ldr	x10, [sp, #32]
  41e2f0:	add	w9, w8, #0x1
  41e2f4:	sxtw	x8, w8
  41e2f8:	add	x19, x0, x8, lsl #6
  41e2fc:	str	w9, [x23, #128]
  41e300:	str	xzr, [x19, #8]!
  41e304:	stp	xzr, xzr, [x19, #8]
  41e308:	ldr	q0, [x14]
  41e30c:	mov	x9, #0xffffffffffffffff    	// #-1
  41e310:	stp	xzr, xzr, [x19, #24]
  41e314:	str	x9, [x19, #56]
  41e318:	stur	q0, [x19, #40]
  41e31c:	ldr	w8, [x19, #48]
  41e320:	and	w8, w8, #0xfff3ffff
  41e324:	str	w8, [x19, #48]
  41e328:	ldr	w8, [x23, #180]
  41e32c:	cmp	w8, #0x2
  41e330:	b.lt	41e648 <_obstack_memory_used@@Base+0x63b8>  // b.tstop
  41e334:	ldr	x9, [x10, #104]
  41e338:	ldr	x8, [x10, #72]
  41e33c:	cmp	x9, x8
  41e340:	b.le	41e648 <_obstack_memory_used@@Base+0x63b8>
  41e344:	mov	w20, #0x10                  	// #16
  41e348:	mov	x21, #0xffffffffffffffff    	// #-1
  41e34c:	ldr	x22, [sp, #32]
  41e350:	ldr	x9, [x22, #48]
  41e354:	cmp	x8, x9
  41e358:	b.eq	41e648 <_obstack_memory_used@@Base+0x63b8>  // b.none
  41e35c:	ldr	x9, [x22, #16]
  41e360:	ldr	w8, [x9, x8, lsl #2]
  41e364:	cmn	w8, #0x1
  41e368:	b.ne	41e648 <_obstack_memory_used@@Base+0x63b8>  // b.any
  41e36c:	ldr	x2, [sp, #40]
  41e370:	mov	x0, x14
  41e374:	mov	x1, x22
  41e378:	bl	41d804 <_obstack_memory_used@@Base+0x5574>
  41e37c:	ldr	x8, [x22, #72]
  41e380:	add	x8, x8, w0, sxtw
  41e384:	str	x8, [x22, #72]
  41e388:	ldr	w8, [x23, #128]
  41e38c:	cmp	w8, #0xf
  41e390:	b.eq	41e430 <_obstack_memory_used@@Base+0x61a0>  // b.none
  41e394:	ldr	x0, [x23, #112]
  41e398:	add	w9, w8, #0x1
  41e39c:	sxtw	x8, w8
  41e3a0:	add	x22, x0, x8, lsl #6
  41e3a4:	str	w9, [x23, #128]
  41e3a8:	str	xzr, [x22, #8]!
  41e3ac:	stp	xzr, xzr, [x22, #8]
  41e3b0:	ldr	x14, [sp, #56]
  41e3b4:	ldr	q0, [x14]
  41e3b8:	stp	xzr, xzr, [x22, #24]
  41e3bc:	str	x21, [x22, #56]
  41e3c0:	stur	q0, [x22, #40]
  41e3c4:	ldr	w8, [x22, #48]
  41e3c8:	and	w8, w8, #0xfff3ffff
  41e3cc:	str	w8, [x22, #48]
  41e3d0:	ldr	w8, [x23, #128]
  41e3d4:	cmp	w8, #0xf
  41e3d8:	b.eq	41e454 <_obstack_memory_used@@Base+0x61c4>  // b.none
  41e3dc:	ldr	x0, [x23, #112]
  41e3e0:	add	w9, w8, #0x1
  41e3e4:	sxtw	x8, w8
  41e3e8:	add	x24, x0, x8, lsl #6
  41e3ec:	str	w9, [x23, #128]
  41e3f0:	str	xzr, [x24, #8]!
  41e3f4:	stp	x19, x22, [x24, #8]
  41e3f8:	stp	xzr, xzr, [x24, #32]
  41e3fc:	str	w20, [x24, #48]
  41e400:	str	xzr, [x24, #24]
  41e404:	str	x21, [x24, #56]
  41e408:	str	x24, [x19]
  41e40c:	cbz	x22, 41ff44 <_obstack_memory_used@@Base+0x7cb4>
  41e410:	ldr	x8, [sp, #32]
  41e414:	str	x24, [x22]
  41e418:	mov	x19, x24
  41e41c:	ldr	x9, [x8, #104]
  41e420:	ldr	x8, [x8, #72]
  41e424:	cmp	x9, x8
  41e428:	b.gt	41e34c <_obstack_memory_used@@Base+0x60bc>
  41e42c:	b	41ed38 <_obstack_memory_used@@Base+0x6aa8>
  41e430:	mov	w0, #0x3c8                 	// #968
  41e434:	bl	4023a0 <malloc@plt>
  41e438:	cbz	x0, 41e47c <_obstack_memory_used@@Base+0x61ec>
  41e43c:	ldr	x9, [x23, #112]
  41e440:	mov	w8, wzr
  41e444:	str	x9, [x0]
  41e448:	str	x0, [x23, #112]
  41e44c:	str	wzr, [x23, #128]
  41e450:	b	41e398 <_obstack_memory_used@@Base+0x6108>
  41e454:	mov	w0, #0x3c8                 	// #968
  41e458:	bl	4023a0 <malloc@plt>
  41e45c:	ldr	x14, [sp, #56]
  41e460:	cbz	x0, 41ff44 <_obstack_memory_used@@Base+0x7cb4>
  41e464:	ldr	x9, [x23, #112]
  41e468:	mov	w8, wzr
  41e46c:	str	x9, [x0]
  41e470:	str	x0, [x23, #112]
  41e474:	str	wzr, [x23, #128]
  41e478:	b	41e3e0 <_obstack_memory_used@@Base+0x6150>
  41e47c:	ldr	x14, [sp, #56]
  41e480:	mov	x22, xzr
  41e484:	b	41e3d0 <_obstack_memory_used@@Base+0x6140>
  41e488:	ldr	w8, [x14]
  41e48c:	ldr	x10, [x23, #168]
  41e490:	mov	w9, #0x1                   	// #1
  41e494:	lsl	w8, w9, w8
  41e498:	sxtw	x9, w8
  41e49c:	tst	x10, x9
  41e4a0:	b.eq	41fd20 <_obstack_memory_used@@Base+0x7a90>  // b.none
  41e4a4:	ldr	x10, [x23, #160]
  41e4a8:	ldr	w8, [x23, #128]
  41e4ac:	orr	x9, x10, x9
  41e4b0:	cmp	w8, #0xf
  41e4b4:	str	x9, [x23, #160]
  41e4b8:	b.eq	41fd50 <_obstack_memory_used@@Base+0x7ac0>  // b.none
  41e4bc:	ldr	x0, [x23, #112]
  41e4c0:	add	w9, w8, #0x1
  41e4c4:	sxtw	x8, w8
  41e4c8:	add	x24, x0, x8, lsl #6
  41e4cc:	str	w9, [x23, #128]
  41e4d0:	str	xzr, [x24, #8]!
  41e4d4:	stp	xzr, xzr, [x24, #8]
  41e4d8:	ldr	q0, [x14]
  41e4dc:	mov	x8, #0xffffffffffffffff    	// #-1
  41e4e0:	str	x8, [x24, #56]
  41e4e4:	stp	xzr, xzr, [x24, #24]
  41e4e8:	stur	q0, [x24, #40]
  41e4ec:	ldr	w9, [x24, #48]
  41e4f0:	and	w8, w9, #0xfff3ffff
  41e4f4:	str	w8, [x24, #48]
  41e4f8:	ldr	x8, [x23, #152]
  41e4fc:	ldrb	w9, [x23, #176]
  41e500:	add	x8, x8, #0x1
  41e504:	orr	w9, w9, #0x2
  41e508:	str	x8, [x23, #152]
  41e50c:	strb	w9, [x23, #176]
  41e510:	b	41ed38 <_obstack_memory_used@@Base+0x6aa8>
  41e514:	ldr	w8, [x23, #128]
  41e518:	cmp	w8, #0xf
  41e51c:	b.eq	41fd28 <_obstack_memory_used@@Base+0x7a98>  // b.none
  41e520:	ldr	x0, [x23, #112]
  41e524:	add	w9, w8, #0x1
  41e528:	sxtw	x8, w8
  41e52c:	add	x10, x0, x8, lsl #6
  41e530:	str	w9, [x23, #128]
  41e534:	str	xzr, [x10, #8]!
  41e538:	stp	xzr, xzr, [x10, #8]
  41e53c:	ldr	q0, [x14]
  41e540:	mov	x9, #0xffffffffffffffff    	// #-1
  41e544:	stp	xzr, xzr, [x10, #24]
  41e548:	str	x9, [x10, #56]
  41e54c:	stur	q0, [x10, #40]
  41e550:	ldr	w8, [x10, #48]
  41e554:	mov	x24, x10
  41e558:	and	w8, w8, #0xfff3ffff
  41e55c:	str	w8, [x10, #48]
  41e560:	ldr	w8, [x23, #180]
  41e564:	cmp	w8, #0x2
  41e568:	b.lt	41ed38 <_obstack_memory_used@@Base+0x6aa8>  // b.tstop
  41e56c:	ldrb	w8, [x23, #176]
  41e570:	orr	w8, w8, #0x2
  41e574:	strb	w8, [x23, #176]
  41e578:	b	41ed38 <_obstack_memory_used@@Base+0x6aa8>
  41e57c:	ldr	x19, [x26, #48]
  41e580:	mov	x0, x14
  41e584:	add	x8, x19, #0x1
  41e588:	str	x8, [x26, #48]
  41e58c:	ldp	x20, x21, [sp, #32]
  41e590:	orr	x2, x21, #0x800000
  41e594:	mov	x1, x20
  41e598:	bl	41d804 <_obstack_memory_used@@Base+0x5574>
  41e59c:	ldr	x8, [x20, #72]
  41e5a0:	ldr	x14, [sp, #56]
  41e5a4:	add	x8, x8, w0, sxtw
  41e5a8:	str	x8, [x20, #72]
  41e5ac:	ldrb	w8, [x14, #8]
  41e5b0:	cmp	w8, #0x9
  41e5b4:	b.ne	41e6ac <_obstack_memory_used@@Base+0x641c>  // b.any
  41e5b8:	mov	x25, xzr
  41e5bc:	cmp	x19, #0x8
  41e5c0:	b.hi	41e5dc <_obstack_memory_used@@Base+0x634c>  // b.pmore
  41e5c4:	ldr	x8, [x23, #168]
  41e5c8:	mov	w9, #0x1                   	// #1
  41e5cc:	lsl	w9, w9, w19
  41e5d0:	sxtw	x9, w9
  41e5d4:	orr	x8, x8, x9
  41e5d8:	str	x8, [x23, #168]
  41e5dc:	ldr	w8, [x23, #128]
  41e5e0:	cmp	w8, #0xf
  41e5e4:	b.eq	41fe44 <_obstack_memory_used@@Base+0x7bb4>  // b.none
  41e5e8:	ldr	x0, [x23, #112]
  41e5ec:	add	w9, w8, #0x1
  41e5f0:	sxtw	x8, w8
  41e5f4:	add	x8, x0, x8, lsl #6
  41e5f8:	mov	x24, x8
  41e5fc:	mov	w10, #0x11                  	// #17
  41e600:	mov	x11, #0xffffffffffffffff    	// #-1
  41e604:	str	w9, [x23, #128]
  41e608:	str	xzr, [x24, #8]!
  41e60c:	stp	x25, xzr, [x24, #8]
  41e610:	stp	xzr, xzr, [x24, #32]
  41e614:	str	w10, [x24, #48]
  41e618:	str	xzr, [x24, #24]
  41e61c:	str	x11, [x24, #56]
  41e620:	cbz	x25, 41e628 <_obstack_memory_used@@Base+0x6398>
  41e624:	str	x24, [x25]
  41e628:	str	x19, [x8, #48]
  41e62c:	b	41ed38 <_obstack_memory_used@@Base+0x6aa8>
  41e630:	ldr	x10, [sp, #40]
  41e634:	tbz	w10, #24, 41e0dc <_obstack_memory_used@@Base+0x5e4c>
  41e638:	mov	w8, #0xd                   	// #13
  41e63c:	b	41ff48 <_obstack_memory_used@@Base+0x7cb8>
  41e640:	mov	w8, #0x5                   	// #5
  41e644:	b	41ff48 <_obstack_memory_used@@Base+0x7cb8>
  41e648:	mov	x24, x19
  41e64c:	b	41ed38 <_obstack_memory_used@@Base+0x6aa8>
  41e650:	ldp	x19, x20, [sp, #32]
  41e654:	mov	x0, x14
  41e658:	mov	x21, x14
  41e65c:	mov	x1, x19
  41e660:	mov	x2, x20
  41e664:	bl	41d804 <_obstack_memory_used@@Base+0x5574>
  41e668:	ldr	x8, [x19, #72]
  41e66c:	mov	x1, x26
  41e670:	mov	x2, x21
  41e674:	mov	x3, x20
  41e678:	add	x8, x8, w0, sxtw
  41e67c:	str	x8, [x19, #72]
  41e680:	mov	x0, x19
  41e684:	mov	x4, x25
  41e688:	mov	x5, x28
  41e68c:	ldp	x20, x19, [sp, #272]
  41e690:	ldp	x22, x21, [sp, #256]
  41e694:	ldp	x24, x23, [sp, #240]
  41e698:	ldp	x26, x25, [sp, #224]
  41e69c:	ldp	x28, x27, [sp, #208]
  41e6a0:	ldp	x29, x30, [sp, #192]
  41e6a4:	add	sp, sp, #0x120
  41e6a8:	b	41e078 <_obstack_memory_used@@Base+0x5de8>
  41e6ac:	add	x4, x25, #0x1
  41e6b0:	mov	x0, x20
  41e6b4:	mov	x1, x26
  41e6b8:	mov	x2, x14
  41e6bc:	mov	x3, x21
  41e6c0:	mov	x5, x28
  41e6c4:	mov	x20, x14
  41e6c8:	bl	41d5b8 <_obstack_memory_used@@Base+0x5328>
  41e6cc:	ldr	w8, [x28]
  41e6d0:	cbz	w8, 41fb4c <_obstack_memory_used@@Base+0x78bc>
  41e6d4:	mov	x24, xzr
  41e6d8:	b	41ff50 <_obstack_memory_used@@Base+0x7cc0>
  41e6dc:	ldrb	w8, [x24, #32]
  41e6e0:	orr	w8, w8, #0x1
  41e6e4:	strb	w8, [x24, #32]
  41e6e8:	tbz	w20, #8, 41e6f8 <_obstack_memory_used@@Base+0x6468>
  41e6ec:	ldr	x8, [x25]
  41e6f0:	orr	x8, x8, #0x400
  41e6f4:	str	x8, [x25]
  41e6f8:	ldr	x8, [x19, #72]
  41e6fc:	mov	x0, x2
  41e700:	mov	x1, x19
  41e704:	mov	x2, x20
  41e708:	add	x8, x8, w3, sxtw
  41e70c:	str	x8, [x19, #72]
  41e710:	bl	420450 <_obstack_memory_used@@Base+0x81c0>
  41e714:	ldr	x2, [sp, #56]
  41e718:	ldr	w8, [x2, #8]
  41e71c:	and	w9, w8, #0xff
  41e720:	cmp	w9, #0x2
  41e724:	b.eq	41fcd8 <_obstack_memory_used@@Base+0x7a48>  // b.none
  41e728:	mov	w3, w0
  41e72c:	mov	w9, #0x1                   	// #1
  41e730:	str	w9, [sp, #48]
  41e734:	and	w9, w8, #0xff
  41e738:	cmp	w9, #0x15
  41e73c:	b.ne	41e74c <_obstack_memory_used@@Base+0x64bc>  // b.any
  41e740:	and	w8, w8, #0xffffff00
  41e744:	orr	w8, w8, #0x1
  41e748:	str	w8, [x2, #8]
  41e74c:	ldr	x4, [sp, #40]
  41e750:	sub	x8, x29, #0x50
  41e754:	mov	w27, #0x3                   	// #3
  41e758:	sub	x0, x29, #0x20
  41e75c:	mov	w5, #0x1                   	// #1
  41e760:	mov	x1, x19
  41e764:	stur	x8, [x29, #-24]
  41e768:	stur	w27, [x29, #-32]
  41e76c:	mov	w21, #0x1                   	// #1
  41e770:	bl	4205b0 <_obstack_memory_used@@Base+0x8320>
  41e774:	cbnz	w0, 41fca8 <_obstack_memory_used@@Base+0x7a18>
  41e778:	ldr	x20, [sp, #40]
  41e77c:	ldr	x22, [sp, #56]
  41e780:	stp	xzr, xzr, [sp, #8]
  41e784:	mov	x0, x22
  41e788:	mov	x1, x19
  41e78c:	mov	x2, x20
  41e790:	bl	420450 <_obstack_memory_used@@Base+0x81c0>
  41e794:	ldur	w22, [x29, #-32]
  41e798:	mov	w26, w0
  41e79c:	cmp	w22, #0x2
  41e7a0:	b.eq	41e92c <_obstack_memory_used@@Base+0x669c>  // b.none
  41e7a4:	cmp	w22, #0x4
  41e7a8:	b.ne	41e7d8 <_obstack_memory_used@@Base+0x6548>  // b.any
  41e7ac:	ldr	x0, [x19, #120]
  41e7b0:	ldur	x4, [x29, #-24]
  41e7b4:	ldr	x5, [sp, #40]
  41e7b8:	sub	x3, x29, #0x10
  41e7bc:	mov	x1, x25
  41e7c0:	mov	x2, x24
  41e7c4:	bl	420854 <_obstack_memory_used@@Base+0x85c4>
  41e7c8:	ldr	x14, [sp, #56]
  41e7cc:	str	w0, [x28]
  41e7d0:	cbz	w0, 41e968 <_obstack_memory_used@@Base+0x66d8>
  41e7d4:	b	41fe00 <_obstack_memory_used@@Base+0x7b70>
  41e7d8:	ldr	x8, [sp, #56]
  41e7dc:	ldrb	w8, [x8, #8]
  41e7e0:	cmp	w8, #0x16
  41e7e4:	b.eq	41e80c <_obstack_memory_used@@Base+0x657c>  // b.none
  41e7e8:	cmp	w8, #0x2
  41e7ec:	b.eq	41fc9c <_obstack_memory_used@@Base+0x7a0c>  // b.none
  41e7f0:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x12d70>
  41e7f4:	mov	w8, w22
  41e7f8:	add	x11, x11, #0x2c
  41e7fc:	adr	x9, 41e92c <_obstack_memory_used@@Base+0x669c>
  41e800:	ldrb	w10, [x11, x8]
  41e804:	add	x9, x9, x10, lsl #2
  41e808:	br	x9
  41e80c:	ldr	x8, [x19, #72]
  41e810:	ldr	x2, [sp, #40]
  41e814:	add	x0, sp, #0x40
  41e818:	mov	x1, x19
  41e81c:	add	x8, x8, w26, sxtw
  41e820:	str	x8, [x19, #72]
  41e824:	bl	420450 <_obstack_memory_used@@Base+0x81c0>
  41e828:	ldrb	w8, [sp, #72]
  41e82c:	cmp	w8, #0x15
  41e830:	b.eq	41e8f8 <_obstack_memory_used@@Base+0x6668>  // b.none
  41e834:	cmp	w8, #0x2
  41e838:	str	x28, [sp, #24]
  41e83c:	b.eq	41fca0 <_obstack_memory_used@@Base+0x7a10>  // b.none
  41e840:	ldr	x20, [sp, #40]
  41e844:	mov	w3, w0
  41e848:	add	x8, sp, #0x50
  41e84c:	sub	x0, x29, #0x30
  41e850:	add	x2, sp, #0x40
  41e854:	mov	w5, #0x1                   	// #1
  41e858:	mov	x1, x19
  41e85c:	mov	x4, x20
  41e860:	stur	x8, [x29, #-40]
  41e864:	stur	w27, [x29, #-48]
  41e868:	bl	4205b0 <_obstack_memory_used@@Base+0x8320>
  41e86c:	cbnz	w0, 41fdf8 <_obstack_memory_used@@Base+0x7b68>
  41e870:	ldr	x0, [sp, #56]
  41e874:	mov	x1, x19
  41e878:	mov	x2, x20
  41e87c:	bl	420450 <_obstack_memory_used@@Base+0x81c0>
  41e880:	ldr	w8, [x23, #180]
  41e884:	ldur	w19, [x29, #-48]
  41e888:	mov	w26, w0
  41e88c:	mov	w0, #0xb                   	// #11
  41e890:	cmp	w8, #0x1
  41e894:	csel	x20, x24, xzr, gt
  41e898:	cmp	w19, #0x2
  41e89c:	b.eq	41fdf8 <_obstack_memory_used@@Base+0x7b68>  // b.none
  41e8a0:	ldr	x14, [sp, #56]
  41e8a4:	cmp	w19, #0x4
  41e8a8:	b.eq	41fdf8 <_obstack_memory_used@@Base+0x7b68>  // b.none
  41e8ac:	cmp	w22, #0x3
  41e8b0:	b.ne	41e8c8 <_obstack_memory_used@@Base+0x6638>  // b.any
  41e8b4:	ldur	x0, [x29, #-24]
  41e8b8:	bl	402270 <strlen@plt>
  41e8bc:	ldr	x14, [sp, #56]
  41e8c0:	cmp	x0, #0x1
  41e8c4:	b.hi	41fdf4 <_obstack_memory_used@@Base+0x7b64>  // b.pmore
  41e8c8:	cmp	w19, #0x3
  41e8cc:	b.ne	41e8e4 <_obstack_memory_used@@Base+0x6654>  // b.any
  41e8d0:	ldur	x0, [x29, #-40]
  41e8d4:	bl	402270 <strlen@plt>
  41e8d8:	ldr	x14, [sp, #56]
  41e8dc:	cmp	x0, #0x1
  41e8e0:	b.hi	41fdf4 <_obstack_memory_used@@Base+0x7b64>  // b.pmore
  41e8e4:	cmp	w22, #0x3
  41e8e8:	b.eq	41ea04 <_obstack_memory_used@@Base+0x6774>  // b.none
  41e8ec:	cbnz	w22, 41ea10 <_obstack_memory_used@@Base+0x6780>
  41e8f0:	ldurb	w27, [x29, #-24]
  41e8f4:	b	41ea14 <_obstack_memory_used@@Base+0x6784>
  41e8f8:	ldr	x8, [x19, #72]
  41e8fc:	neg	w9, w26
  41e900:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x12d70>
  41e904:	mov	w10, w22
  41e908:	add	x8, x8, w9, sxtw
  41e90c:	str	x8, [x19, #72]
  41e910:	ldr	x8, [sp, #56]
  41e914:	add	x11, x11, #0x2c
  41e918:	strb	w21, [x8, #8]
  41e91c:	adr	x8, 41e92c <_obstack_memory_used@@Base+0x669c>
  41e920:	ldrb	w9, [x11, x10]
  41e924:	add	x8, x8, x9, lsl #2
  41e928:	br	x8
  41e92c:	ldur	x27, [x29, #-24]
  41e930:	mov	x0, x27
  41e934:	bl	402270 <strlen@plt>
  41e938:	cmp	x0, #0x1
  41e93c:	b.ne	41fdf0 <_obstack_memory_used@@Base+0x7b60>  // b.any
  41e940:	ldrb	w8, [x27]
  41e944:	mov	w27, #0x3                   	// #3
  41e948:	lsr	x9, x8, #3
  41e94c:	and	x9, x9, #0x18
  41e950:	ldr	x10, [x25, x9]
  41e954:	lsl	x8, x21, x8
  41e958:	orr	x8, x8, x10
  41e95c:	str	x8, [x25, x9]
  41e960:	ldr	x14, [sp, #56]
  41e964:	str	wzr, [x28]
  41e968:	ldrb	w8, [x14, #8]
  41e96c:	cmp	w8, #0x15
  41e970:	b.eq	41ebb8 <_obstack_memory_used@@Base+0x6928>  // b.none
  41e974:	cmp	w8, #0x2
  41e978:	b.eq	41fc9c <_obstack_memory_used@@Base+0x7a0c>  // b.none
  41e97c:	ldr	x20, [sp, #40]
  41e980:	sub	x8, x29, #0x50
  41e984:	sub	x0, x29, #0x20
  41e988:	mov	x1, x19
  41e98c:	mov	x2, x14
  41e990:	mov	w3, w26
  41e994:	mov	x4, x20
  41e998:	mov	w5, wzr
  41e99c:	stur	x8, [x29, #-24]
  41e9a0:	stur	w27, [x29, #-32]
  41e9a4:	mov	x22, x14
  41e9a8:	bl	4205b0 <_obstack_memory_used@@Base+0x8320>
  41e9ac:	cbz	w0, 41e784 <_obstack_memory_used@@Base+0x64f4>
  41e9b0:	b	41fca8 <_obstack_memory_used@@Base+0x7a18>
  41e9b4:	ldurb	w8, [x29, #-24]
  41e9b8:	ldr	x14, [sp, #56]
  41e9bc:	lsr	x9, x8, #3
  41e9c0:	and	x9, x9, #0x18
  41e9c4:	ldr	x10, [x25, x9]
  41e9c8:	lsl	x8, x21, x8
  41e9cc:	orr	x8, x8, x10
  41e9d0:	str	x8, [x25, x9]
  41e9d4:	b	41e968 <_obstack_memory_used@@Base+0x66d8>
  41e9d8:	ldr	x8, [x24, #40]
  41e9dc:	ldr	x9, [sp, #16]
  41e9e0:	cmp	x9, x8
  41e9e4:	b.eq	41eb28 <_obstack_memory_used@@Base+0x6898>  // b.none
  41e9e8:	ldr	x0, [x24]
  41e9ec:	ldr	x14, [sp, #56]
  41e9f0:	ldur	w9, [x29, #-24]
  41e9f4:	add	x10, x8, #0x1
  41e9f8:	str	x10, [x24, #40]
  41e9fc:	str	w9, [x0, x8, lsl #2]
  41ea00:	b	41e968 <_obstack_memory_used@@Base+0x66d8>
  41ea04:	ldur	x8, [x29, #-24]
  41ea08:	ldrb	w27, [x8]
  41ea0c:	b	41ea14 <_obstack_memory_used@@Base+0x6784>
  41ea10:	mov	w27, wzr
  41ea14:	cmp	w19, #0x3
  41ea18:	b.eq	41ea28 <_obstack_memory_used@@Base+0x6798>  // b.none
  41ea1c:	cbnz	w19, 41ea34 <_obstack_memory_used@@Base+0x67a4>
  41ea20:	ldurb	w28, [x29, #-40]
  41ea24:	b	41ea38 <_obstack_memory_used@@Base+0x67a8>
  41ea28:	ldur	x8, [x29, #-40]
  41ea2c:	ldrb	w28, [x8]
  41ea30:	b	41ea38 <_obstack_memory_used@@Base+0x67a8>
  41ea34:	mov	w28, wzr
  41ea38:	cmp	w22, #0x3
  41ea3c:	b.eq	41ea44 <_obstack_memory_used@@Base+0x67b4>  // b.none
  41ea40:	cbnz	w22, 41ea5c <_obstack_memory_used@@Base+0x67cc>
  41ea44:	cbz	x20, 41ea60 <_obstack_memory_used@@Base+0x67d0>
  41ea48:	mov	w0, w27
  41ea4c:	bl	402550 <btowc@plt>
  41ea50:	ldr	x14, [sp, #56]
  41ea54:	mov	w27, w0
  41ea58:	b	41ea60 <_obstack_memory_used@@Base+0x67d0>
  41ea5c:	ldur	w27, [x29, #-24]
  41ea60:	cmp	w19, #0x3
  41ea64:	b.eq	41ea6c <_obstack_memory_used@@Base+0x67dc>  // b.none
  41ea68:	cbnz	w19, 41ea84 <_obstack_memory_used@@Base+0x67f4>
  41ea6c:	cbz	x20, 41ea88 <_obstack_memory_used@@Base+0x67f8>
  41ea70:	mov	w0, w28
  41ea74:	bl	402550 <btowc@plt>
  41ea78:	ldr	x14, [sp, #56]
  41ea7c:	mov	w28, w0
  41ea80:	b	41ea88 <_obstack_memory_used@@Base+0x67f8>
  41ea84:	ldur	w28, [x29, #-40]
  41ea88:	cmn	w27, #0x1
  41ea8c:	mov	w0, #0x3                   	// #3
  41ea90:	b.eq	41fdf8 <_obstack_memory_used@@Base+0x7b68>  // b.none
  41ea94:	cmn	w28, #0x1
  41ea98:	b.eq	41fdf8 <_obstack_memory_used@@Base+0x7b68>  // b.none
  41ea9c:	ldr	x8, [sp, #40]
  41eaa0:	tbz	w8, #16, 41eaac <_obstack_memory_used@@Base+0x681c>
  41eaa4:	cmp	w27, w28
  41eaa8:	b.hi	4200a0 <_obstack_memory_used@@Base+0x7e10>  // b.pmore
  41eaac:	cbz	x20, 41ead8 <_obstack_memory_used@@Base+0x6848>
  41eab0:	ldr	x8, [x20, #64]
  41eab4:	ldr	x9, [sp, #8]
  41eab8:	cmp	x9, x8
  41eabc:	b.eq	41eb60 <_obstack_memory_used@@Base+0x68d0>  // b.none
  41eac0:	ldp	x22, x10, [x20, #8]
  41eac4:	lsl	x9, x8, #2
  41eac8:	add	x8, x8, #0x1
  41eacc:	str	w27, [x22, x9]
  41ead0:	str	x8, [x20, #64]
  41ead4:	str	w28, [x10, x9]
  41ead8:	mov	w9, w28
  41eadc:	ldp	x28, x19, [sp, #24]
  41eae0:	mov	x8, xzr
  41eae4:	mov	w10, w27
  41eae8:	mov	w27, #0x3                   	// #3
  41eaec:	b	41eafc <_obstack_memory_used@@Base+0x686c>
  41eaf0:	add	x8, x8, #0x1
  41eaf4:	cmp	x8, #0x100
  41eaf8:	b.eq	41e964 <_obstack_memory_used@@Base+0x66d4>  // b.none
  41eafc:	cmp	x8, x10
  41eb00:	b.cc	41eaf0 <_obstack_memory_used@@Base+0x6860>  // b.lo, b.ul, b.last
  41eb04:	cmp	x8, x9
  41eb08:	b.hi	41eaf0 <_obstack_memory_used@@Base+0x6860>  // b.pmore
  41eb0c:	lsr	x11, x8, #3
  41eb10:	and	x11, x11, #0x1ffffffffffffff8
  41eb14:	ldr	x12, [x25, x11]
  41eb18:	lsl	x13, x21, x8
  41eb1c:	orr	x12, x12, x13
  41eb20:	str	x12, [x25, x11]
  41eb24:	b	41eaf0 <_obstack_memory_used@@Base+0x6860>
  41eb28:	ldr	x8, [sp, #16]
  41eb2c:	ldr	x0, [x24]
  41eb30:	mov	w19, #0x1                   	// #1
  41eb34:	bfi	x19, x8, #1, #63
  41eb38:	lsl	x1, x19, #2
  41eb3c:	bl	4024c0 <realloc@plt>
  41eb40:	cbz	x0, 4200ec <_obstack_memory_used@@Base+0x7e5c>
  41eb44:	ldr	x8, [x24, #40]
  41eb48:	str	x19, [sp, #16]
  41eb4c:	ldr	x19, [sp, #32]
  41eb50:	ldr	x14, [sp, #56]
  41eb54:	mov	w27, #0x3                   	// #3
  41eb58:	str	x0, [x24]
  41eb5c:	b	41e9f0 <_obstack_memory_used@@Base+0x6760>
  41eb60:	ldr	x8, [sp, #8]
  41eb64:	ldr	x0, [x20, #8]
  41eb68:	mov	w19, #0x1                   	// #1
  41eb6c:	bfi	x19, x8, #1, #63
  41eb70:	lsl	x1, x19, #2
  41eb74:	str	x1, [sp, #8]
  41eb78:	bl	4024c0 <realloc@plt>
  41eb7c:	ldr	x8, [x20, #16]
  41eb80:	ldr	x1, [sp, #8]
  41eb84:	mov	x22, x0
  41eb88:	mov	x0, x8
  41eb8c:	bl	4024c0 <realloc@plt>
  41eb90:	str	x0, [sp]
  41eb94:	cbz	x22, 4200f8 <_obstack_memory_used@@Base+0x7e68>
  41eb98:	ldr	x8, [sp]
  41eb9c:	cbz	x8, 4200f8 <_obstack_memory_used@@Base+0x7e68>
  41eba0:	ldr	x10, [sp]
  41eba4:	ldr	x8, [x20, #64]
  41eba8:	stp	x22, x10, [x20, #8]
  41ebac:	ldr	x14, [sp, #56]
  41ebb0:	str	x19, [sp, #8]
  41ebb4:	b	41eac4 <_obstack_memory_used@@Base+0x6834>
  41ebb8:	ldr	x8, [x19, #72]
  41ebbc:	add	x8, x8, w26, sxtw
  41ebc0:	str	x8, [x19, #72]
  41ebc4:	ldr	w8, [sp, #48]
  41ebc8:	cbz	w8, 41ebdc <_obstack_memory_used@@Base+0x694c>
  41ebcc:	ldp	q0, q1, [x25]
  41ebd0:	mvn	v0.16b, v0.16b
  41ebd4:	mvn	v1.16b, v1.16b
  41ebd8:	stp	q0, q1, [x25]
  41ebdc:	ldr	w8, [x23, #180]
  41ebe0:	cmp	w8, #0x2
  41ebe4:	b.lt	41ec24 <_obstack_memory_used@@Base+0x6994>  // b.tstop
  41ebe8:	ldr	x9, [x23, #120]
  41ebec:	ldp	x11, x12, [x25]
  41ebf0:	ldr	x10, [x9]
  41ebf4:	and	x10, x11, x10
  41ebf8:	str	x10, [x25]
  41ebfc:	ldr	x10, [x9, #8]
  41ec00:	and	x10, x12, x10
  41ec04:	str	x10, [x25, #8]
  41ec08:	ldr	x10, [x9, #16]
  41ec0c:	ldp	x11, x12, [x25, #16]
  41ec10:	and	x10, x11, x10
  41ec14:	str	x10, [x25, #16]
  41ec18:	ldr	x9, [x9, #24]
  41ec1c:	and	x9, x12, x9
  41ec20:	str	x9, [x25, #24]
  41ec24:	ldr	x9, [x24, #40]
  41ec28:	cbnz	x9, 41ec44 <_obstack_memory_used@@Base+0x69b4>
  41ec2c:	ldr	x9, [x24, #48]
  41ec30:	cbnz	x9, 41ec44 <_obstack_memory_used@@Base+0x69b4>
  41ec34:	ldr	x9, [x24, #56]
  41ec38:	cbnz	x9, 41ec44 <_obstack_memory_used@@Base+0x69b4>
  41ec3c:	ldr	x9, [x24, #64]
  41ec40:	cbz	x9, 41fc00 <_obstack_memory_used@@Base+0x7970>
  41ec44:	ldrb	w9, [x23, #176]
  41ec48:	ldr	w8, [x23, #128]
  41ec4c:	orr	w9, w9, #0x2
  41ec50:	cmp	w8, #0xf
  41ec54:	strb	w9, [x23, #176]
  41ec58:	b.eq	41fd78 <_obstack_memory_used@@Base+0x7ae8>  // b.none
  41ec5c:	ldr	x0, [x23, #112]
  41ec60:	add	w9, w8, #0x1
  41ec64:	sxtw	x8, w8
  41ec68:	add	x19, x0, x8, lsl #6
  41ec6c:	mov	w10, #0x6                   	// #6
  41ec70:	mov	x11, #0xffffffffffffffff    	// #-1
  41ec74:	str	w9, [x23, #128]
  41ec78:	str	xzr, [x19, #8]!
  41ec7c:	stp	xzr, xzr, [x19, #16]
  41ec80:	str	xzr, [x19, #8]
  41ec84:	str	w10, [x19, #48]
  41ec88:	stp	xzr, x24, [x19, #32]
  41ec8c:	str	x11, [x19, #56]
  41ec90:	ldr	x8, [x25]
  41ec94:	cbnz	x8, 41ecb0 <_obstack_memory_used@@Base+0x6a20>
  41ec98:	ldr	x8, [x25, #8]
  41ec9c:	cbnz	x8, 41ecb0 <_obstack_memory_used@@Base+0x6a20>
  41eca0:	ldr	x8, [x25, #16]
  41eca4:	cbnz	x8, 41ecb0 <_obstack_memory_used@@Base+0x6a20>
  41eca8:	ldr	x8, [x25, #24]
  41ecac:	cbz	x8, 41fc88 <_obstack_memory_used@@Base+0x79f8>
  41ecb0:	ldr	w8, [x23, #128]
  41ecb4:	cmp	w8, #0xf
  41ecb8:	b.eq	41fda0 <_obstack_memory_used@@Base+0x7b10>  // b.none
  41ecbc:	ldr	x0, [x23, #112]
  41ecc0:	add	w9, w8, #0x1
  41ecc4:	sxtw	x8, w8
  41ecc8:	add	x20, x0, x8, lsl #6
  41eccc:	str	w9, [x23, #128]
  41ecd0:	mov	w9, #0x3                   	// #3
  41ecd4:	mov	x8, #0xffffffffffffffff    	// #-1
  41ecd8:	str	xzr, [x20, #8]!
  41ecdc:	stp	xzr, xzr, [x20, #16]
  41ece0:	str	xzr, [x20, #8]
  41ece4:	str	w9, [x20, #48]
  41ece8:	stp	xzr, x25, [x20, #32]
  41ecec:	str	x8, [x20, #56]
  41ecf0:	ldr	w8, [x23, #128]
  41ecf4:	cmp	w8, #0xf
  41ecf8:	b.eq	41fdc8 <_obstack_memory_used@@Base+0x7b38>  // b.none
  41ecfc:	ldr	x0, [x23, #112]
  41ed00:	add	w9, w8, #0x1
  41ed04:	sxtw	x8, w8
  41ed08:	add	x24, x0, x8, lsl #6
  41ed0c:	str	w9, [x23, #128]
  41ed10:	mov	w9, #0xa                   	// #10
  41ed14:	mov	x8, #0xffffffffffffffff    	// #-1
  41ed18:	str	xzr, [x24, #8]!
  41ed1c:	stp	x20, x19, [x24, #8]
  41ed20:	stp	xzr, xzr, [x24, #32]
  41ed24:	str	w9, [x24, #48]
  41ed28:	str	xzr, [x24, #24]
  41ed2c:	str	x8, [x24, #56]
  41ed30:	str	x24, [x20]
  41ed34:	str	x24, [x19]
  41ed38:	ldp	x20, x21, [sp, #32]
  41ed3c:	mov	x0, x14
  41ed40:	str	x28, [sp, #24]
  41ed44:	mov	x1, x20
  41ed48:	mov	x2, x21
  41ed4c:	bl	41d804 <_obstack_memory_used@@Base+0x5574>
  41ed50:	ldr	x8, [x20, #72]
  41ed54:	ldr	x12, [sp, #56]
  41ed58:	add	x25, x23, #0x80
  41ed5c:	add	x26, x23, #0x70
  41ed60:	mov	w23, #0x1                   	// #1
  41ed64:	mov	x28, #0xffffffffffffffff    	// #-1
  41ed68:	add	x8, x8, w0, sxtw
  41ed6c:	str	x8, [x20, #72]
  41ed70:	ldrb	w8, [x12, #8]
  41ed74:	str	x24, [sp, #48]
  41ed78:	cmp	w8, #0x17
  41ed7c:	b.hi	41f950 <_obstack_memory_used@@Base+0x76c0>  // b.pmore
  41ed80:	mov	w10, #0x800                 	// #2048
  41ed84:	lsl	w9, w23, w8
  41ed88:	movk	w10, #0x8c, lsl #16
  41ed8c:	tst	w9, w10
  41ed90:	b.eq	41f950 <_obstack_memory_used@@Base+0x76c0>  // b.none
  41ed94:	ldr	q0, [x12]
  41ed98:	ldr	x19, [x20, #72]
  41ed9c:	mov	w24, #0xa                   	// #10
  41eda0:	cmp	w8, #0x17
  41eda4:	stur	q0, [x29, #-80]
  41eda8:	b.ne	41ee48 <_obstack_memory_used@@Base+0x6bb8>  // b.any
  41edac:	mov	x10, #0xffffffffffffffff    	// #-1
  41edb0:	mov	x0, x12
  41edb4:	mov	x1, x20
  41edb8:	mov	x2, x21
  41edbc:	mov	x22, x10
  41edc0:	bl	41d804 <_obstack_memory_used@@Base+0x5574>
  41edc4:	ldr	x8, [x20, #72]
  41edc8:	ldr	x12, [sp, #56]
  41edcc:	add	x8, x8, w0, sxtw
  41edd0:	str	x8, [x20, #72]
  41edd4:	ldrb	w8, [x12, #8]
  41edd8:	ldrb	w9, [x12]
  41eddc:	cmp	w8, #0x18
  41ede0:	b.eq	41ee60 <_obstack_memory_used@@Base+0x6bd0>  // b.none
  41ede4:	cmp	w8, #0x2
  41ede8:	b.eq	41f49c <_obstack_memory_used@@Base+0x720c>  // b.none
  41edec:	cmp	w9, #0x2c
  41edf0:	b.eq	41ee60 <_obstack_memory_used@@Base+0x6bd0>  // b.none
  41edf4:	cmp	w9, #0x30
  41edf8:	mov	x10, #0xfffffffffffffffe    	// #-2
  41edfc:	b.cc	41edb0 <_obstack_memory_used@@Base+0x6b20>  // b.lo, b.ul, b.last
  41ee00:	cmp	w8, #0x1
  41ee04:	b.ne	41edb0 <_obstack_memory_used@@Base+0x6b20>  // b.any
  41ee08:	cmn	x22, #0x2
  41ee0c:	mov	x10, #0xfffffffffffffffe    	// #-2
  41ee10:	b.eq	41edb0 <_obstack_memory_used@@Base+0x6b20>  // b.none
  41ee14:	cmp	w9, #0x39
  41ee18:	b.hi	41edb0 <_obstack_memory_used@@Base+0x6b20>  // b.pmore
  41ee1c:	cmn	x22, #0x1
  41ee20:	b.eq	41ee40 <_obstack_memory_used@@Base+0x6bb0>  // b.none
  41ee24:	madd	x8, x22, x24, x9
  41ee28:	mov	w10, #0x8030                	// #32816
  41ee2c:	sub	x9, x8, #0x30
  41ee30:	cmp	x8, x10
  41ee34:	mov	w8, #0x8000                	// #32768
  41ee38:	csel	x10, x8, x9, gt
  41ee3c:	b	41edb0 <_obstack_memory_used@@Base+0x6b20>
  41ee40:	sub	x10, x9, #0x30
  41ee44:	b	41edb0 <_obstack_memory_used@@Base+0x6b20>
  41ee48:	cmp	w8, #0x12
  41ee4c:	cset	w22, eq  // eq = none
  41ee50:	cmp	w8, #0x13
  41ee54:	mov	w8, #0x1                   	// #1
  41ee58:	cneg	x23, x8, ne  // ne = any
  41ee5c:	b	41ef94 <_obstack_memory_used@@Base+0x6d04>
  41ee60:	cmn	x22, #0x1
  41ee64:	b.ne	41ee80 <_obstack_memory_used@@Base+0x6bf0>  // b.any
  41ee68:	cmp	w9, #0x2c
  41ee6c:	b.ne	41ef40 <_obstack_memory_used@@Base+0x6cb0>  // b.any
  41ee70:	cmp	w8, #0x1
  41ee74:	b.ne	41ef40 <_obstack_memory_used@@Base+0x6cb0>  // b.any
  41ee78:	mov	x22, xzr
  41ee7c:	b	41eea0 <_obstack_memory_used@@Base+0x6c10>
  41ee80:	cmn	x22, #0x2
  41ee84:	b.eq	41f49c <_obstack_memory_used@@Base+0x720c>  // b.none
  41ee88:	cmp	w8, #0x18
  41ee8c:	b.eq	41ef54 <_obstack_memory_used@@Base+0x6cc4>  // b.none
  41ee90:	cmp	w8, #0x1
  41ee94:	b.ne	41f49c <_obstack_memory_used@@Base+0x720c>  // b.any
  41ee98:	cmp	w9, #0x2c
  41ee9c:	b.ne	41f49c <_obstack_memory_used@@Base+0x720c>  // b.any
  41eea0:	mov	x10, #0xffffffffffffffff    	// #-1
  41eea4:	mov	x0, x12
  41eea8:	mov	x1, x20
  41eeac:	mov	x2, x21
  41eeb0:	mov	x23, x10
  41eeb4:	bl	41d804 <_obstack_memory_used@@Base+0x5574>
  41eeb8:	ldr	x8, [x20, #72]
  41eebc:	ldr	x12, [sp, #56]
  41eec0:	add	x8, x8, w0, sxtw
  41eec4:	str	x8, [x20, #72]
  41eec8:	ldrb	w8, [x12, #8]
  41eecc:	cmp	w8, #0x18
  41eed0:	b.eq	41ef58 <_obstack_memory_used@@Base+0x6cc8>  // b.none
  41eed4:	cmp	w8, #0x2
  41eed8:	b.eq	41f498 <_obstack_memory_used@@Base+0x7208>  // b.none
  41eedc:	ldrb	w9, [x12]
  41eee0:	mov	w11, #0xa                   	// #10
  41eee4:	cmp	w9, #0x2c
  41eee8:	b.eq	41ef5c <_obstack_memory_used@@Base+0x6ccc>  // b.none
  41eeec:	cmp	w9, #0x30
  41eef0:	mov	x10, #0xfffffffffffffffe    	// #-2
  41eef4:	b.cc	41eea4 <_obstack_memory_used@@Base+0x6c14>  // b.lo, b.ul, b.last
  41eef8:	cmp	w8, #0x1
  41eefc:	b.ne	41eea4 <_obstack_memory_used@@Base+0x6c14>  // b.any
  41ef00:	cmn	x23, #0x2
  41ef04:	mov	x10, #0xfffffffffffffffe    	// #-2
  41ef08:	b.eq	41eea4 <_obstack_memory_used@@Base+0x6c14>  // b.none
  41ef0c:	cmp	w9, #0x39
  41ef10:	b.hi	41eea4 <_obstack_memory_used@@Base+0x6c14>  // b.pmore
  41ef14:	cmn	x23, #0x1
  41ef18:	b.eq	41ef38 <_obstack_memory_used@@Base+0x6ca8>  // b.none
  41ef1c:	madd	x8, x23, x11, x9
  41ef20:	mov	w10, #0x8030                	// #32816
  41ef24:	sub	x9, x8, #0x30
  41ef28:	cmp	x8, x10
  41ef2c:	mov	w8, #0x8000                	// #32768
  41ef30:	csel	x10, x8, x9, gt
  41ef34:	b	41eea4 <_obstack_memory_used@@Base+0x6c14>
  41ef38:	sub	x10, x9, #0x30
  41ef3c:	b	41eea4 <_obstack_memory_used@@Base+0x6c14>
  41ef40:	ldr	x8, [sp, #24]
  41ef44:	mov	x14, xzr
  41ef48:	mov	w9, #0xa                   	// #10
  41ef4c:	str	w9, [x8]
  41ef50:	b	41f900 <_obstack_memory_used@@Base+0x7670>
  41ef54:	mov	x23, x22
  41ef58:	mov	w11, #0xa                   	// #10
  41ef5c:	cmn	x23, #0x2
  41ef60:	b.eq	41f498 <_obstack_memory_used@@Base+0x7208>  // b.none
  41ef64:	cmn	x23, #0x1
  41ef68:	cset	w9, eq  // eq = none
  41ef6c:	cmp	x22, x23
  41ef70:	cset	w10, le
  41ef74:	cmp	w8, #0x18
  41ef78:	b.ne	41f6dc <_obstack_memory_used@@Base+0x744c>  // b.any
  41ef7c:	orr	w8, w10, w9
  41ef80:	tbz	w8, #0, 41f6dc <_obstack_memory_used@@Base+0x744c>
  41ef84:	cmn	x23, #0x1
  41ef88:	csel	x8, x22, x23, eq  // eq = none
  41ef8c:	cmp	x8, #0x8, lsl #12
  41ef90:	b.ge	41f85c <_obstack_memory_used@@Base+0x75cc>  // b.tcont
  41ef94:	mov	x0, x12
  41ef98:	mov	x1, x20
  41ef9c:	mov	x2, x21
  41efa0:	bl	41d804 <_obstack_memory_used@@Base+0x5574>
  41efa4:	ldr	x8, [x20, #72]
  41efa8:	ldr	x19, [sp, #48]
  41efac:	add	x8, x8, w0, sxtw
  41efb0:	str	x8, [x20, #72]
  41efb4:	cbz	x19, 41f388 <_obstack_memory_used@@Base+0x70f8>
  41efb8:	ldr	x12, [sp, #56]
  41efbc:	orr	x8, x23, x22
  41efc0:	mov	w13, #0xa                   	// #10
  41efc4:	cbz	x8, 41f394 <_obstack_memory_used@@Base+0x7104>
  41efc8:	cmp	x22, #0x1
  41efcc:	b.ge	41f438 <_obstack_memory_used@@Base+0x71a8>  // b.tcont
  41efd0:	mov	x14, xzr
  41efd4:	mov	x21, x19
  41efd8:	ldrb	w8, [x21, #48]
  41efdc:	cmp	w8, #0x11
  41efe0:	b.ne	41f048 <_obstack_memory_used@@Base+0x6db8>  // b.any
  41efe4:	ldr	x8, [x21, #40]
  41efe8:	mov	x10, x21
  41efec:	mov	x9, x10
  41eff0:	ldr	x10, [x10, #8]
  41eff4:	cbnz	x10, 41efec <_obstack_memory_used@@Base+0x6d5c>
  41eff8:	ldr	x10, [x9, #16]
  41effc:	cbnz	x10, 41efec <_obstack_memory_used@@Base+0x6d5c>
  41f000:	ldr	w10, [x9, #48]
  41f004:	and	w11, w10, #0xff
  41f008:	cmp	w11, #0x11
  41f00c:	b.ne	41f024 <_obstack_memory_used@@Base+0x6d94>  // b.any
  41f010:	ldr	x11, [x9, #40]
  41f014:	cmp	x11, x8
  41f018:	b.ne	41f024 <_obstack_memory_used@@Base+0x6d94>  // b.any
  41f01c:	orr	w10, w10, #0x80000
  41f020:	str	w10, [x9, #48]
  41f024:	ldr	x11, [x9]
  41f028:	cbz	x11, 41f048 <_obstack_memory_used@@Base+0x6db8>
  41f02c:	ldr	x10, [x11, #16]
  41f030:	cmp	x10, x9
  41f034:	mov	x9, x11
  41f038:	b.eq	41f000 <_obstack_memory_used@@Base+0x6d70>  // b.none
  41f03c:	mov	x9, x11
  41f040:	cbz	x10, 41f000 <_obstack_memory_used@@Base+0x6d70>
  41f044:	b	41efec <_obstack_memory_used@@Base+0x6d5c>
  41f048:	ldr	w8, [x25]
  41f04c:	cmn	x23, #0x1
  41f050:	cinc	w19, w13, eq  // eq = none
  41f054:	cmp	w8, #0xf
  41f058:	b.eq	41f460 <_obstack_memory_used@@Base+0x71d0>  // b.none
  41f05c:	ldr	x0, [x26]
  41f060:	mov	w11, #0x10                  	// #16
  41f064:	add	w9, w8, #0x1
  41f068:	sxtw	x8, w8
  41f06c:	add	x22, x22, #0x2
  41f070:	add	x27, x0, x8, lsl #6
  41f074:	str	w9, [x25]
  41f078:	cmp	x22, x23
  41f07c:	str	xzr, [x27, #8]!
  41f080:	stp	x21, xzr, [x27, #8]
  41f084:	stp	xzr, xzr, [x27, #32]
  41f088:	str	w19, [x27, #48]
  41f08c:	str	xzr, [x27, #24]
  41f090:	str	x28, [x27, #56]
  41f094:	str	x27, [x21]
  41f098:	b.gt	41f328 <_obstack_memory_used@@Base+0x7098>
  41f09c:	mov	x20, x27
  41f0a0:	ldr	w8, [x25]
  41f0a4:	cmp	w8, #0xf
  41f0a8:	b.eq	41f268 <_obstack_memory_used@@Base+0x6fd8>  // b.none
  41f0ac:	ldr	x0, [x26]
  41f0b0:	add	w10, w8, #0x1
  41f0b4:	sxtw	x8, w8
  41f0b8:	add	x19, x0, x8, lsl #6
  41f0bc:	str	w10, [x25]
  41f0c0:	str	xzr, [x19, #8]!
  41f0c4:	add	x9, x21, #0x28
  41f0c8:	stp	xzr, xzr, [x19, #8]
  41f0cc:	ldr	q0, [x9]
  41f0d0:	add	x24, sp, #0x50
  41f0d4:	stp	xzr, xzr, [x19, #24]
  41f0d8:	str	x28, [x19, #56]
  41f0dc:	stur	q0, [x19, #40]
  41f0e0:	ldr	w8, [x19, #48]
  41f0e4:	and	w8, w8, #0xfff3ffff
  41f0e8:	str	w8, [x19, #48]
  41f0ec:	mov	x8, x19
  41f0f0:	str	x19, [sp, #80]
  41f0f4:	str	x27, [x8]
  41f0f8:	ldr	x8, [x24]
  41f0fc:	ldr	w9, [x8, #48]
  41f100:	orr	w9, w9, #0x40000
  41f104:	str	w9, [x8, #48]
  41f108:	ldr	x8, [x21, #8]
  41f10c:	ldr	x27, [x24]
  41f110:	cbz	x8, 41f12c <_obstack_memory_used@@Base+0x6e9c>
  41f114:	add	x24, x27, #0x8
  41f118:	mov	x21, x8
  41f11c:	b	41f148 <_obstack_memory_used@@Base+0x6eb8>
  41f120:	ldr	x21, [x8]
  41f124:	ldr	x27, [x27]
  41f128:	cbz	x21, 41f1d0 <_obstack_memory_used@@Base+0x6f40>
  41f12c:	mov	x9, x8
  41f130:	mov	x8, x21
  41f134:	ldr	x21, [x21, #16]
  41f138:	cmp	x21, x9
  41f13c:	b.eq	41f120 <_obstack_memory_used@@Base+0x6e90>  // b.none
  41f140:	cbz	x21, 41f120 <_obstack_memory_used@@Base+0x6e90>
  41f144:	add	x24, x27, #0x10
  41f148:	ldr	w8, [x25]
  41f14c:	cmp	w8, #0xf
  41f150:	b.eq	41f198 <_obstack_memory_used@@Base+0x6f08>  // b.none
  41f154:	ldr	x0, [x26]
  41f158:	add	w10, w8, #0x1
  41f15c:	sxtw	x8, w8
  41f160:	add	x8, x0, x8, lsl #6
  41f164:	str	w10, [x25]
  41f168:	str	xzr, [x8, #8]!
  41f16c:	add	x9, x21, #0x28
  41f170:	stp	xzr, xzr, [x8, #8]
  41f174:	ldr	q0, [x9]
  41f178:	stp	xzr, xzr, [x8, #24]
  41f17c:	str	x28, [x8, #56]
  41f180:	stur	q0, [x8, #40]
  41f184:	ldr	w9, [x8, #48]
  41f188:	and	w9, w9, #0xfff3ffff
  41f18c:	str	w9, [x8, #48]
  41f190:	str	x8, [x24]
  41f194:	b	41f0f4 <_obstack_memory_used@@Base+0x6e64>
  41f198:	mov	w0, #0x3c8                 	// #968
  41f19c:	str	x14, [sp, #16]
  41f1a0:	bl	4023a0 <malloc@plt>
  41f1a4:	cbz	x0, 41f2e8 <_obstack_memory_used@@Base+0x7058>
  41f1a8:	ldr	x9, [x26]
  41f1ac:	ldr	x12, [sp, #56]
  41f1b0:	ldr	x14, [sp, #16]
  41f1b4:	mov	w8, wzr
  41f1b8:	mov	w13, #0xa                   	// #10
  41f1bc:	mov	w11, #0x10                  	// #16
  41f1c0:	str	x9, [x0]
  41f1c4:	str	x0, [x26]
  41f1c8:	str	wzr, [x25]
  41f1cc:	b	41f158 <_obstack_memory_used@@Base+0x6ec8>
  41f1d0:	ldr	w8, [x25]
  41f1d4:	cmp	w8, #0xf
  41f1d8:	b.eq	41f2a0 <_obstack_memory_used@@Base+0x7010>  // b.none
  41f1dc:	ldr	x0, [x26]
  41f1e0:	add	w9, w8, #0x1
  41f1e4:	sxtw	x8, w8
  41f1e8:	add	x21, x0, x8, lsl #6
  41f1ec:	str	w9, [x25]
  41f1f0:	str	xzr, [x21, #8]!
  41f1f4:	stp	x20, x19, [x21, #8]
  41f1f8:	stp	xzr, xzr, [x21, #32]
  41f1fc:	str	w11, [x21, #48]
  41f200:	str	xzr, [x21, #24]
  41f204:	str	x28, [x21, #56]
  41f208:	str	x21, [x20]
  41f20c:	cbz	x19, 41f8e8 <_obstack_memory_used@@Base+0x7658>
  41f210:	str	x21, [x19]
  41f214:	ldr	w8, [x25]
  41f218:	cmp	w8, #0xf
  41f21c:	b.eq	41f2a8 <_obstack_memory_used@@Base+0x7018>  // b.none
  41f220:	ldr	x0, [x26]
  41f224:	add	w9, w8, #0x1
  41f228:	sxtw	x8, w8
  41f22c:	add	x20, x0, x8, lsl #6
  41f230:	cmp	x22, x23
  41f234:	str	w9, [x25]
  41f238:	str	xzr, [x20, #8]!
  41f23c:	stp	x21, xzr, [x20, #8]
  41f240:	stp	xzr, xzr, [x20, #32]
  41f244:	str	w13, [x20, #48]
  41f248:	str	xzr, [x20, #24]
  41f24c:	str	x28, [x20, #56]
  41f250:	str	x20, [x21]
  41f254:	b.ge	41f324 <_obstack_memory_used@@Base+0x7094>  // b.tcont
  41f258:	ldr	x27, [x19]
  41f25c:	add	x22, x22, #0x1
  41f260:	mov	x21, x19
  41f264:	b	41f0a0 <_obstack_memory_used@@Base+0x6e10>
  41f268:	mov	w0, #0x3c8                 	// #968
  41f26c:	str	x14, [sp, #16]
  41f270:	bl	4023a0 <malloc@plt>
  41f274:	cbz	x0, 41f2e0 <_obstack_memory_used@@Base+0x7050>
  41f278:	ldr	x9, [x26]
  41f27c:	ldr	x12, [sp, #56]
  41f280:	ldr	x14, [sp, #16]
  41f284:	mov	w8, wzr
  41f288:	mov	w13, #0xa                   	// #10
  41f28c:	mov	w11, #0x10                  	// #16
  41f290:	str	x9, [x0]
  41f294:	str	x0, [x26]
  41f298:	str	wzr, [x25]
  41f29c:	b	41f0b0 <_obstack_memory_used@@Base+0x6e20>
  41f2a0:	str	x14, [sp, #16]
  41f2a4:	b	41f2f0 <_obstack_memory_used@@Base+0x7060>
  41f2a8:	mov	w0, #0x3c8                 	// #968
  41f2ac:	mov	x20, x14
  41f2b0:	bl	4023a0 <malloc@plt>
  41f2b4:	ldr	x12, [sp, #56]
  41f2b8:	mov	w11, #0x10                  	// #16
  41f2bc:	mov	w13, #0xa                   	// #10
  41f2c0:	cbz	x0, 41f8e8 <_obstack_memory_used@@Base+0x7658>
  41f2c4:	ldr	x9, [x26]
  41f2c8:	mov	x14, x20
  41f2cc:	mov	w8, wzr
  41f2d0:	str	x9, [x0]
  41f2d4:	str	x0, [x26]
  41f2d8:	str	wzr, [x25]
  41f2dc:	b	41f224 <_obstack_memory_used@@Base+0x6f94>
  41f2e0:	str	xzr, [sp, #80]
  41f2e4:	b	41f2ec <_obstack_memory_used@@Base+0x705c>
  41f2e8:	str	xzr, [x24]
  41f2ec:	mov	x19, xzr
  41f2f0:	mov	w0, #0x3c8                 	// #968
  41f2f4:	bl	4023a0 <malloc@plt>
  41f2f8:	ldr	x12, [sp, #56]
  41f2fc:	ldr	x14, [sp, #16]
  41f300:	mov	w13, #0xa                   	// #10
  41f304:	mov	w11, #0x10                  	// #16
  41f308:	cbz	x0, 41f8e8 <_obstack_memory_used@@Base+0x7658>
  41f30c:	ldr	x9, [x26]
  41f310:	mov	w8, wzr
  41f314:	str	x9, [x0]
  41f318:	str	x0, [x26]
  41f31c:	str	wzr, [x25]
  41f320:	b	41f1e0 <_obstack_memory_used@@Base+0x6f50>
  41f324:	mov	x27, x20
  41f328:	ldp	x20, x21, [sp, #32]
  41f32c:	mov	w23, #0x1                   	// #1
  41f330:	cbz	x14, 41f37c <_obstack_memory_used@@Base+0x70ec>
  41f334:	ldr	w8, [x25]
  41f338:	cmp	w8, #0xf
  41f33c:	b.eq	41f6f0 <_obstack_memory_used@@Base+0x7460>  // b.none
  41f340:	ldr	x0, [x26]
  41f344:	add	w9, w8, #0x1
  41f348:	sxtw	x8, w8
  41f34c:	add	x8, x0, x8, lsl #6
  41f350:	str	w9, [x25]
  41f354:	str	xzr, [x8, #8]!
  41f358:	stp	x14, x27, [x8, #8]
  41f35c:	stp	xzr, xzr, [x8, #32]
  41f360:	str	w11, [x8, #48]
  41f364:	str	xzr, [x8, #24]
  41f368:	str	x28, [x8, #56]
  41f36c:	str	x8, [x14]
  41f370:	mov	x14, x8
  41f374:	str	x8, [x27]
  41f378:	b	41f380 <_obstack_memory_used@@Base+0x70f0>
  41f37c:	mov	x14, x27
  41f380:	mov	w8, wzr
  41f384:	b	41f918 <_obstack_memory_used@@Base+0x7688>
  41f388:	ldr	x12, [sp, #56]
  41f38c:	mov	x14, xzr
  41f390:	b	41f8fc <_obstack_memory_used@@Base+0x766c>
  41f394:	mov	x8, x19
  41f398:	mov	w23, #0x1                   	// #1
  41f39c:	mov	x19, x8
  41f3a0:	ldr	x8, [x8, #8]
  41f3a4:	cbnz	x8, 41f39c <_obstack_memory_used@@Base+0x710c>
  41f3a8:	ldr	x8, [x19, #16]
  41f3ac:	cbnz	x8, 41f39c <_obstack_memory_used@@Base+0x710c>
  41f3b0:	ldr	w8, [x19, #48]
  41f3b4:	mov	w9, #0xff                  	// #255
  41f3b8:	movk	w9, #0x4, lsl #16
  41f3bc:	and	w8, w8, w9
  41f3c0:	cmp	w8, #0x3
  41f3c4:	b.eq	41f3f8 <_obstack_memory_used@@Base+0x7168>  // b.none
  41f3c8:	cmp	w8, #0x6
  41f3cc:	b.ne	41f40c <_obstack_memory_used@@Base+0x717c>  // b.any
  41f3d0:	ldr	x23, [x19, #40]
  41f3d4:	ldr	x0, [x23]
  41f3d8:	bl	402620 <free@plt>
  41f3dc:	ldr	x0, [x23, #8]
  41f3e0:	bl	402620 <free@plt>
  41f3e4:	ldr	x0, [x23, #16]
  41f3e8:	bl	402620 <free@plt>
  41f3ec:	ldr	x0, [x23, #24]
  41f3f0:	bl	402620 <free@plt>
  41f3f4:	b	41f3fc <_obstack_memory_used@@Base+0x716c>
  41f3f8:	ldr	x23, [x19, #40]
  41f3fc:	mov	x0, x23
  41f400:	bl	402620 <free@plt>
  41f404:	ldr	x12, [sp, #56]
  41f408:	mov	w23, #0x1                   	// #1
  41f40c:	ldr	x9, [x19]
  41f410:	cbz	x9, 41f430 <_obstack_memory_used@@Base+0x71a0>
  41f414:	ldr	x8, [x9, #16]
  41f418:	cmp	x8, x19
  41f41c:	mov	x19, x9
  41f420:	b.eq	41f3b0 <_obstack_memory_used@@Base+0x7120>  // b.none
  41f424:	mov	x19, x9
  41f428:	cbz	x8, 41f3b0 <_obstack_memory_used@@Base+0x7120>
  41f42c:	b	41f39c <_obstack_memory_used@@Base+0x710c>
  41f430:	mov	x14, xzr
  41f434:	b	41f900 <_obstack_memory_used@@Base+0x7670>
  41f438:	mov	x14, x19
  41f43c:	mov	x15, x19
  41f440:	mov	w11, #0x10                  	// #16
  41f444:	b.ne	41f4b8 <_obstack_memory_used@@Base+0x7228>  // b.any
  41f448:	ldr	x21, [sp, #40]
  41f44c:	cmp	x22, x23
  41f450:	b.ne	41f724 <_obstack_memory_used@@Base+0x7494>  // b.any
  41f454:	ldr	x20, [sp, #32]
  41f458:	mov	w23, #0x1                   	// #1
  41f45c:	b	41f380 <_obstack_memory_used@@Base+0x70f0>
  41f460:	mov	w0, #0x3c8                 	// #968
  41f464:	mov	x20, x14
  41f468:	bl	4023a0 <malloc@plt>
  41f46c:	ldr	x12, [sp, #56]
  41f470:	mov	w13, #0xa                   	// #10
  41f474:	mov	w11, #0x10                  	// #16
  41f478:	cbz	x0, 41f8e8 <_obstack_memory_used@@Base+0x7658>
  41f47c:	ldr	x9, [x26]
  41f480:	mov	x14, x20
  41f484:	mov	w8, wzr
  41f488:	str	x9, [x0]
  41f48c:	str	x0, [x26]
  41f490:	str	wzr, [x25]
  41f494:	b	41f064 <_obstack_memory_used@@Base+0x6dd4>
  41f498:	mov	w23, #0x1                   	// #1
  41f49c:	tbz	w21, #21, 41f880 <_obstack_memory_used@@Base+0x75f0>
  41f4a0:	str	x19, [x20, #72]
  41f4a4:	ldur	q0, [x29, #-80]
  41f4a8:	ldr	x14, [sp, #48]
  41f4ac:	str	q0, [x12]
  41f4b0:	strb	w23, [x12, #8]
  41f4b4:	b	41f900 <_obstack_memory_used@@Base+0x7670>
  41f4b8:	ldr	x14, [x19]
  41f4bc:	mov	x15, x19
  41f4c0:	mov	w21, #0x2                   	// #2
  41f4c4:	ldr	w8, [x25]
  41f4c8:	cmp	w8, #0xf
  41f4cc:	b.eq	41f658 <_obstack_memory_used@@Base+0x73c8>  // b.none
  41f4d0:	ldr	x0, [x26]
  41f4d4:	add	w10, w8, #0x1
  41f4d8:	sxtw	x8, w8
  41f4dc:	add	x20, x0, x8, lsl #6
  41f4e0:	str	w10, [x25]
  41f4e4:	str	xzr, [x20, #8]!
  41f4e8:	add	x9, x15, #0x28
  41f4ec:	stp	xzr, xzr, [x20, #8]
  41f4f0:	ldr	q0, [x9]
  41f4f4:	add	x27, sp, #0x50
  41f4f8:	stp	xzr, xzr, [x20, #24]
  41f4fc:	str	x28, [x20, #56]
  41f500:	stur	q0, [x20, #40]
  41f504:	ldr	w8, [x20, #48]
  41f508:	and	w8, w8, #0xfff3ffff
  41f50c:	str	w8, [x20, #48]
  41f510:	mov	x8, x20
  41f514:	str	x20, [sp, #80]
  41f518:	str	x14, [x8]
  41f51c:	ldr	x8, [x27]
  41f520:	ldr	w9, [x8, #48]
  41f524:	orr	w9, w9, #0x40000
  41f528:	str	w9, [x8, #48]
  41f52c:	ldr	x8, [x15, #8]
  41f530:	ldr	x14, [x27]
  41f534:	cbz	x8, 41f550 <_obstack_memory_used@@Base+0x72c0>
  41f538:	add	x27, x14, #0x8
  41f53c:	mov	x15, x8
  41f540:	b	41f56c <_obstack_memory_used@@Base+0x72dc>
  41f544:	ldr	x15, [x8]
  41f548:	ldr	x14, [x14]
  41f54c:	cbz	x15, 41f5fc <_obstack_memory_used@@Base+0x736c>
  41f550:	mov	x9, x8
  41f554:	mov	x8, x15
  41f558:	ldr	x15, [x15, #16]
  41f55c:	cmp	x15, x9
  41f560:	b.eq	41f544 <_obstack_memory_used@@Base+0x72b4>  // b.none
  41f564:	cbz	x15, 41f544 <_obstack_memory_used@@Base+0x72b4>
  41f568:	add	x27, x14, #0x10
  41f56c:	ldr	w8, [x25]
  41f570:	cmp	w8, #0xf
  41f574:	b.eq	41f5bc <_obstack_memory_used@@Base+0x732c>  // b.none
  41f578:	ldr	x0, [x26]
  41f57c:	add	w10, w8, #0x1
  41f580:	sxtw	x8, w8
  41f584:	add	x8, x0, x8, lsl #6
  41f588:	str	w10, [x25]
  41f58c:	str	xzr, [x8, #8]!
  41f590:	add	x9, x15, #0x28
  41f594:	stp	xzr, xzr, [x8, #8]
  41f598:	ldr	q0, [x9]
  41f59c:	stp	xzr, xzr, [x8, #24]
  41f5a0:	str	x28, [x8, #56]
  41f5a4:	stur	q0, [x8, #40]
  41f5a8:	ldr	w9, [x8, #48]
  41f5ac:	and	w9, w9, #0xfff3ffff
  41f5b0:	str	w9, [x8, #48]
  41f5b4:	str	x8, [x27]
  41f5b8:	b	41f518 <_obstack_memory_used@@Base+0x7288>
  41f5bc:	mov	w0, #0x3c8                 	// #968
  41f5c0:	str	x15, [sp, #16]
  41f5c4:	mov	x24, x14
  41f5c8:	bl	4023a0 <malloc@plt>
  41f5cc:	cbz	x0, 41f6a0 <_obstack_memory_used@@Base+0x7410>
  41f5d0:	ldr	x9, [x26]
  41f5d4:	ldr	x12, [sp, #56]
  41f5d8:	ldr	x15, [sp, #16]
  41f5dc:	mov	w8, wzr
  41f5e0:	mov	w13, #0xa                   	// #10
  41f5e4:	mov	w11, #0x10                  	// #16
  41f5e8:	mov	x14, x24
  41f5ec:	str	x9, [x0]
  41f5f0:	str	x0, [x26]
  41f5f4:	str	wzr, [x25]
  41f5f8:	b	41f57c <_obstack_memory_used@@Base+0x72ec>
  41f5fc:	ldr	w8, [x25]
  41f600:	cmp	w8, #0xf
  41f604:	b.eq	41f6a8 <_obstack_memory_used@@Base+0x7418>  // b.none
  41f608:	ldr	x0, [x26]
  41f60c:	mov	x15, x20
  41f610:	add	w9, w8, #0x1
  41f614:	sxtw	x8, w8
  41f618:	add	x14, x0, x8, lsl #6
  41f61c:	str	w9, [x25]
  41f620:	str	xzr, [x14, #8]!
  41f624:	stp	x19, x15, [x14, #8]
  41f628:	stp	xzr, xzr, [x14, #32]
  41f62c:	str	w11, [x14, #48]
  41f630:	str	xzr, [x14, #24]
  41f634:	str	x28, [x14, #56]
  41f638:	str	x14, [x19]
  41f63c:	cbz	x15, 41f8e8 <_obstack_memory_used@@Base+0x7658>
  41f640:	cmp	x21, x22
  41f644:	add	x21, x21, #0x1
  41f648:	mov	x19, x14
  41f64c:	str	x14, [x15]
  41f650:	b.ne	41f4c4 <_obstack_memory_used@@Base+0x7234>  // b.any
  41f654:	b	41f448 <_obstack_memory_used@@Base+0x71b8>
  41f658:	mov	w0, #0x3c8                 	// #968
  41f65c:	mov	x24, x15
  41f660:	mov	x20, x14
  41f664:	bl	4023a0 <malloc@plt>
  41f668:	cbz	x0, 41f698 <_obstack_memory_used@@Base+0x7408>
  41f66c:	ldr	x9, [x26]
  41f670:	ldr	x12, [sp, #56]
  41f674:	mov	w8, wzr
  41f678:	mov	w13, #0xa                   	// #10
  41f67c:	mov	w11, #0x10                  	// #16
  41f680:	mov	x14, x20
  41f684:	mov	x15, x24
  41f688:	str	x9, [x0]
  41f68c:	str	x0, [x26]
  41f690:	str	wzr, [x25]
  41f694:	b	41f4d4 <_obstack_memory_used@@Base+0x7244>
  41f698:	str	xzr, [sp, #80]
  41f69c:	b	41f6a4 <_obstack_memory_used@@Base+0x7414>
  41f6a0:	str	xzr, [x27]
  41f6a4:	mov	x20, xzr
  41f6a8:	mov	w0, #0x3c8                 	// #968
  41f6ac:	bl	4023a0 <malloc@plt>
  41f6b0:	ldr	x12, [sp, #56]
  41f6b4:	mov	w13, #0xa                   	// #10
  41f6b8:	mov	w11, #0x10                  	// #16
  41f6bc:	cbz	x0, 41f8e8 <_obstack_memory_used@@Base+0x7658>
  41f6c0:	ldr	x9, [x26]
  41f6c4:	mov	x15, x20
  41f6c8:	mov	w8, wzr
  41f6cc:	str	x9, [x0]
  41f6d0:	str	x0, [x26]
  41f6d4:	str	wzr, [x25]
  41f6d8:	b	41f610 <_obstack_memory_used@@Base+0x7380>
  41f6dc:	ldr	x8, [sp, #24]
  41f6e0:	mov	x14, xzr
  41f6e4:	mov	w23, #0x1                   	// #1
  41f6e8:	str	w11, [x8]
  41f6ec:	b	41f900 <_obstack_memory_used@@Base+0x7670>
  41f6f0:	mov	w0, #0x3c8                 	// #968
  41f6f4:	mov	x19, x14
  41f6f8:	bl	4023a0 <malloc@plt>
  41f6fc:	cbz	x0, 41f874 <_obstack_memory_used@@Base+0x75e4>
  41f700:	ldr	x9, [x26]
  41f704:	ldr	x12, [sp, #56]
  41f708:	mov	w8, wzr
  41f70c:	mov	w11, #0x10                  	// #16
  41f710:	mov	x14, x19
  41f714:	str	x9, [x0]
  41f718:	str	x0, [x26]
  41f71c:	str	wzr, [x25]
  41f720:	b	41f344 <_obstack_memory_used@@Base+0x70b4>
  41f724:	mov	x20, x15
  41f728:	ldr	x19, [x20], #40
  41f72c:	ldr	w8, [x25]
  41f730:	cmp	w8, #0xf
  41f734:	b.eq	41f89c <_obstack_memory_used@@Base+0x760c>  // b.none
  41f738:	ldr	x0, [x26]
  41f73c:	add	w9, w8, #0x1
  41f740:	sxtw	x8, w8
  41f744:	add	x21, x0, x8, lsl #6
  41f748:	str	w9, [x25]
  41f74c:	str	xzr, [x21, #8]!
  41f750:	stp	xzr, xzr, [x21, #8]
  41f754:	ldr	q0, [x20]
  41f758:	add	x20, sp, #0x50
  41f75c:	stp	xzr, xzr, [x21, #24]
  41f760:	str	x28, [x21, #56]
  41f764:	stur	q0, [x21, #40]
  41f768:	ldr	w8, [x21, #48]
  41f76c:	and	w8, w8, #0xfff3ffff
  41f770:	str	w8, [x21, #48]
  41f774:	mov	x8, x21
  41f778:	str	x21, [sp, #80]
  41f77c:	str	x19, [x8]
  41f780:	ldr	x8, [x20]
  41f784:	ldr	w9, [x8, #48]
  41f788:	orr	w9, w9, #0x40000
  41f78c:	str	w9, [x8, #48]
  41f790:	ldr	x8, [x15, #8]
  41f794:	ldr	x19, [x20]
  41f798:	cbz	x8, 41f7b4 <_obstack_memory_used@@Base+0x7524>
  41f79c:	add	x20, x19, #0x8
  41f7a0:	mov	x15, x8
  41f7a4:	b	41f7d0 <_obstack_memory_used@@Base+0x7540>
  41f7a8:	ldr	x15, [x8]
  41f7ac:	ldr	x19, [x19]
  41f7b0:	cbz	x15, 41efd8 <_obstack_memory_used@@Base+0x6d48>
  41f7b4:	mov	x9, x8
  41f7b8:	mov	x8, x15
  41f7bc:	ldr	x15, [x15, #16]
  41f7c0:	cmp	x15, x9
  41f7c4:	b.eq	41f7a8 <_obstack_memory_used@@Base+0x7518>  // b.none
  41f7c8:	cbz	x15, 41f7a8 <_obstack_memory_used@@Base+0x7518>
  41f7cc:	add	x20, x19, #0x10
  41f7d0:	ldr	w8, [x25]
  41f7d4:	cmp	w8, #0xf
  41f7d8:	b.eq	41f820 <_obstack_memory_used@@Base+0x7590>  // b.none
  41f7dc:	ldr	x0, [x26]
  41f7e0:	add	w10, w8, #0x1
  41f7e4:	sxtw	x8, w8
  41f7e8:	add	x8, x0, x8, lsl #6
  41f7ec:	str	w10, [x25]
  41f7f0:	str	xzr, [x8, #8]!
  41f7f4:	add	x9, x15, #0x28
  41f7f8:	stp	xzr, xzr, [x8, #8]
  41f7fc:	ldr	q0, [x9]
  41f800:	stp	xzr, xzr, [x8, #24]
  41f804:	str	x28, [x8, #56]
  41f808:	stur	q0, [x8, #40]
  41f80c:	ldr	w9, [x8, #48]
  41f810:	and	w9, w9, #0xfff3ffff
  41f814:	str	w9, [x8, #48]
  41f818:	str	x8, [x20]
  41f81c:	b	41f77c <_obstack_memory_used@@Base+0x74ec>
  41f820:	mov	w0, #0x3c8                 	// #968
  41f824:	mov	x27, x15
  41f828:	mov	x24, x14
  41f82c:	bl	4023a0 <malloc@plt>
  41f830:	cbz	x0, 41f8e0 <_obstack_memory_used@@Base+0x7650>
  41f834:	ldr	x9, [x26]
  41f838:	ldr	x12, [sp, #56]
  41f83c:	mov	w8, wzr
  41f840:	mov	w13, #0xa                   	// #10
  41f844:	mov	x14, x24
  41f848:	mov	x15, x27
  41f84c:	str	x9, [x0]
  41f850:	str	x0, [x26]
  41f854:	str	wzr, [x25]
  41f858:	b	41f7e0 <_obstack_memory_used@@Base+0x7550>
  41f85c:	ldr	x8, [sp, #24]
  41f860:	mov	w9, #0xf                   	// #15
  41f864:	mov	x14, xzr
  41f868:	mov	w23, #0x1                   	// #1
  41f86c:	str	w9, [x8]
  41f870:	b	41f900 <_obstack_memory_used@@Base+0x7670>
  41f874:	ldr	x12, [sp, #56]
  41f878:	mov	x14, xzr
  41f87c:	b	41f900 <_obstack_memory_used@@Base+0x7670>
  41f880:	ldr	x9, [sp, #24]
  41f884:	cmp	w8, #0x2
  41f888:	mov	w8, #0x9                   	// #9
  41f88c:	cinc	w8, w8, ne  // ne = any
  41f890:	mov	x14, xzr
  41f894:	str	w8, [x9]
  41f898:	b	41f900 <_obstack_memory_used@@Base+0x7670>
  41f89c:	mov	w0, #0x3c8                 	// #968
  41f8a0:	mov	x24, x15
  41f8a4:	mov	x21, x14
  41f8a8:	bl	4023a0 <malloc@plt>
  41f8ac:	cbz	x0, 41f8d8 <_obstack_memory_used@@Base+0x7648>
  41f8b0:	ldr	x9, [x26]
  41f8b4:	ldr	x12, [sp, #56]
  41f8b8:	mov	w8, wzr
  41f8bc:	mov	w13, #0xa                   	// #10
  41f8c0:	mov	x14, x21
  41f8c4:	mov	x15, x24
  41f8c8:	str	x9, [x0]
  41f8cc:	str	x0, [x26]
  41f8d0:	str	wzr, [x25]
  41f8d4:	b	41f73c <_obstack_memory_used@@Base+0x74ac>
  41f8d8:	str	xzr, [sp, #80]
  41f8dc:	b	41f8e4 <_obstack_memory_used@@Base+0x7654>
  41f8e0:	str	xzr, [x20]
  41f8e4:	ldr	x12, [sp, #56]
  41f8e8:	ldp	x8, x20, [sp, #24]
  41f8ec:	ldr	x21, [sp, #40]
  41f8f0:	mov	w9, #0xc                   	// #12
  41f8f4:	mov	x14, xzr
  41f8f8:	str	w9, [x8]
  41f8fc:	mov	w23, #0x1                   	// #1
  41f900:	cmp	x14, #0x0
  41f904:	cset	w8, eq  // eq = none
  41f908:	cbnz	x14, 41f918 <_obstack_memory_used@@Base+0x7688>
  41f90c:	ldr	x9, [sp, #24]
  41f910:	ldr	w9, [x9]
  41f914:	cbnz	w9, 41fb6c <_obstack_memory_used@@Base+0x78dc>
  41f918:	mov	x24, x14
  41f91c:	tbz	w21, #24, 41ed70 <_obstack_memory_used@@Base+0x6ae0>
  41f920:	ldrb	w9, [x12, #8]
  41f924:	cmp	w9, #0x17
  41f928:	b.eq	41f938 <_obstack_memory_used@@Base+0x76a8>  // b.none
  41f92c:	cmp	w9, #0xb
  41f930:	mov	x24, x14
  41f934:	b.ne	41ed70 <_obstack_memory_used@@Base+0x6ae0>  // b.any
  41f938:	ldr	x22, [sp, #24]
  41f93c:	tbz	w8, #0, 41f958 <_obstack_memory_used@@Base+0x76c8>
  41f940:	mov	x24, xzr
  41f944:	mov	w8, #0xd                   	// #13
  41f948:	str	w8, [x22]
  41f94c:	b	41ff50 <_obstack_memory_used@@Base+0x7cc0>
  41f950:	ldr	x24, [sp, #48]
  41f954:	b	41ff50 <_obstack_memory_used@@Base+0x7cc0>
  41f958:	mov	w19, #0xff                  	// #255
  41f95c:	movk	w19, #0x4, lsl #16
  41f960:	mov	x21, x14
  41f964:	ldr	x14, [x14, #8]
  41f968:	cbnz	x14, 41f960 <_obstack_memory_used@@Base+0x76d0>
  41f96c:	ldr	x14, [x21, #16]
  41f970:	cbnz	x14, 41f960 <_obstack_memory_used@@Base+0x76d0>
  41f974:	ldr	w8, [x21, #48]
  41f978:	and	w8, w8, w19
  41f97c:	cmp	w8, #0x3
  41f980:	b.eq	41f9b4 <_obstack_memory_used@@Base+0x7724>  // b.none
  41f984:	cmp	w8, #0x6
  41f988:	b.ne	41f9c0 <_obstack_memory_used@@Base+0x7730>  // b.any
  41f98c:	ldr	x20, [x21, #40]
  41f990:	ldr	x0, [x20]
  41f994:	bl	402620 <free@plt>
  41f998:	ldr	x0, [x20, #8]
  41f99c:	bl	402620 <free@plt>
  41f9a0:	ldr	x0, [x20, #16]
  41f9a4:	bl	402620 <free@plt>
  41f9a8:	ldr	x0, [x20, #24]
  41f9ac:	bl	402620 <free@plt>
  41f9b0:	b	41f9b8 <_obstack_memory_used@@Base+0x7728>
  41f9b4:	ldr	x20, [x21, #40]
  41f9b8:	mov	x0, x20
  41f9bc:	bl	402620 <free@plt>
  41f9c0:	ldr	x8, [x21]
  41f9c4:	cbz	x8, 41f940 <_obstack_memory_used@@Base+0x76b0>
  41f9c8:	ldr	x14, [x8, #16]
  41f9cc:	cmp	x14, x21
  41f9d0:	mov	x21, x8
  41f9d4:	b.eq	41f974 <_obstack_memory_used@@Base+0x76e4>  // b.none
  41f9d8:	mov	x21, x8
  41f9dc:	cbz	x14, 41f974 <_obstack_memory_used@@Base+0x76e4>
  41f9e0:	b	41f960 <_obstack_memory_used@@Base+0x76d0>
  41f9e4:	mov	w8, #0x5                   	// #5
  41f9e8:	str	w8, [x14]
  41f9ec:	ldr	w8, [x23, #128]
  41f9f0:	ldr	x21, [sp, #40]
  41f9f4:	cmp	w8, #0xf
  41f9f8:	b.eq	41feec <_obstack_memory_used@@Base+0x7c5c>  // b.none
  41f9fc:	ldr	x0, [x23, #112]
  41fa00:	add	w9, w8, #0x1
  41fa04:	sxtw	x8, w8
  41fa08:	add	x19, x0, x8, lsl #6
  41fa0c:	str	w9, [x23, #128]
  41fa10:	str	xzr, [x19, #8]!
  41fa14:	stp	xzr, xzr, [x19, #8]
  41fa18:	ldr	q0, [x14]
  41fa1c:	mov	x8, #0xffffffffffffffff    	// #-1
  41fa20:	str	x8, [x19, #56]
  41fa24:	stp	xzr, xzr, [x19, #24]
  41fa28:	stur	q0, [x19, #40]
  41fa2c:	ldr	w9, [x19, #48]
  41fa30:	and	w8, w9, #0xfff3ffff
  41fa34:	str	w8, [x19, #48]
  41fa38:	mov	w8, #0xa                   	// #10
  41fa3c:	str	w8, [x14]
  41fa40:	ldr	w8, [x23, #128]
  41fa44:	cmp	w8, #0xf
  41fa48:	b.eq	41fe6c <_obstack_memory_used@@Base+0x7bdc>  // b.none
  41fa4c:	ldr	x0, [x23, #112]
  41fa50:	add	w9, w8, #0x1
  41fa54:	sxtw	x8, w8
  41fa58:	add	x20, x0, x8, lsl #6
  41fa5c:	str	w9, [x23, #128]
  41fa60:	str	xzr, [x20, #8]!
  41fa64:	stp	xzr, xzr, [x20, #8]
  41fa68:	ldr	q0, [x14]
  41fa6c:	mov	x9, #0xffffffffffffffff    	// #-1
  41fa70:	stp	xzr, xzr, [x20, #24]
  41fa74:	str	x9, [x20, #56]
  41fa78:	stur	q0, [x20, #40]
  41fa7c:	ldr	w8, [x20, #48]
  41fa80:	and	w8, w8, #0xfff3ffff
  41fa84:	str	w8, [x20, #48]
  41fa88:	ldr	w8, [x23, #128]
  41fa8c:	cmp	w8, #0xf
  41fa90:	b.eq	41fe98 <_obstack_memory_used@@Base+0x7c08>  // b.none
  41fa94:	ldr	x0, [x23, #112]
  41fa98:	add	w9, w8, #0x1
  41fa9c:	sxtw	x8, w8
  41faa0:	add	x24, x0, x8, lsl #6
  41faa4:	mov	w10, #0xa                   	// #10
  41faa8:	mov	x11, #0xffffffffffffffff    	// #-1
  41faac:	str	w9, [x23, #128]
  41fab0:	str	xzr, [x24, #8]!
  41fab4:	stp	x19, x20, [x24, #8]
  41fab8:	stp	xzr, xzr, [x24, #32]
  41fabc:	str	w10, [x24, #48]
  41fac0:	str	xzr, [x24, #24]
  41fac4:	str	x11, [x24, #56]
  41fac8:	cbz	x19, 41fad0 <_obstack_memory_used@@Base+0x7840>
  41facc:	str	x24, [x19]
  41fad0:	cbz	x20, 41ff44 <_obstack_memory_used@@Base+0x7cb4>
  41fad4:	str	x24, [x20]
  41fad8:	cbnz	x19, 41fb28 <_obstack_memory_used@@Base+0x7898>
  41fadc:	b	41ff44 <_obstack_memory_used@@Base+0x7cb4>
  41fae0:	ldr	w8, [x23, #128]
  41fae4:	cmp	w8, #0xf
  41fae8:	b.eq	41ff18 <_obstack_memory_used@@Base+0x7c88>  // b.none
  41faec:	ldr	x0, [x23, #112]
  41faf0:	add	w9, w8, #0x1
  41faf4:	sxtw	x8, w8
  41faf8:	add	x24, x0, x8, lsl #6
  41fafc:	str	w9, [x23, #128]
  41fb00:	str	xzr, [x24, #8]!
  41fb04:	stp	xzr, xzr, [x24, #8]
  41fb08:	ldr	q0, [x14]
  41fb0c:	mov	x9, #0xffffffffffffffff    	// #-1
  41fb10:	stp	xzr, xzr, [x24, #24]
  41fb14:	str	x9, [x24, #56]
  41fb18:	stur	q0, [x24, #40]
  41fb1c:	ldr	w8, [x24, #48]
  41fb20:	and	w8, w8, #0xfff3ffff
  41fb24:	str	w8, [x24, #48]
  41fb28:	ldr	x19, [sp, #32]
  41fb2c:	mov	x0, x14
  41fb30:	mov	x2, x21
  41fb34:	mov	x1, x19
  41fb38:	bl	41d804 <_obstack_memory_used@@Base+0x5574>
  41fb3c:	ldr	x8, [x19, #72]
  41fb40:	add	x8, x8, w0, sxtw
  41fb44:	str	x8, [x19, #72]
  41fb48:	b	41ff50 <_obstack_memory_used@@Base+0x7cc0>
  41fb4c:	ldrb	w8, [x20, #8]
  41fb50:	mov	x25, x0
  41fb54:	cmp	w8, #0x9
  41fb58:	b.ne	420008 <_obstack_memory_used@@Base+0x7d78>  // b.any
  41fb5c:	mov	x14, x20
  41fb60:	cmp	x19, #0x8
  41fb64:	b.ls	41e5c4 <_obstack_memory_used@@Base+0x6334>  // b.plast
  41fb68:	b	41e5dc <_obstack_memory_used@@Base+0x634c>
  41fb6c:	ldr	x9, [sp, #48]
  41fb70:	cbz	x9, 41e6d4 <_obstack_memory_used@@Base+0x6444>
  41fb74:	mov	w20, #0xff                  	// #255
  41fb78:	movk	w20, #0x4, lsl #16
  41fb7c:	mov	x21, x9
  41fb80:	ldr	x9, [x9, #8]
  41fb84:	cbnz	x9, 41fb7c <_obstack_memory_used@@Base+0x78ec>
  41fb88:	ldr	x9, [x21, #16]
  41fb8c:	cbnz	x9, 41fb7c <_obstack_memory_used@@Base+0x78ec>
  41fb90:	ldr	w8, [x21, #48]
  41fb94:	and	w8, w8, w20
  41fb98:	cmp	w8, #0x3
  41fb9c:	b.eq	41fbd0 <_obstack_memory_used@@Base+0x7940>  // b.none
  41fba0:	cmp	w8, #0x6
  41fba4:	b.ne	41fbdc <_obstack_memory_used@@Base+0x794c>  // b.any
  41fba8:	ldr	x19, [x21, #40]
  41fbac:	ldr	x0, [x19]
  41fbb0:	bl	402620 <free@plt>
  41fbb4:	ldr	x0, [x19, #8]
  41fbb8:	bl	402620 <free@plt>
  41fbbc:	ldr	x0, [x19, #16]
  41fbc0:	bl	402620 <free@plt>
  41fbc4:	ldr	x0, [x19, #24]
  41fbc8:	bl	402620 <free@plt>
  41fbcc:	b	41fbd4 <_obstack_memory_used@@Base+0x7944>
  41fbd0:	ldr	x19, [x21, #40]
  41fbd4:	mov	x0, x19
  41fbd8:	bl	402620 <free@plt>
  41fbdc:	ldr	x8, [x21]
  41fbe0:	cbz	x8, 41e6d4 <_obstack_memory_used@@Base+0x6444>
  41fbe4:	ldr	x9, [x8, #16]
  41fbe8:	cmp	x9, x21
  41fbec:	mov	x21, x8
  41fbf0:	b.eq	41fb90 <_obstack_memory_used@@Base+0x7900>  // b.none
  41fbf4:	mov	x21, x8
  41fbf8:	cbz	x9, 41fb90 <_obstack_memory_used@@Base+0x7900>
  41fbfc:	b	41fb7c <_obstack_memory_used@@Base+0x78ec>
  41fc00:	cmp	w8, #0x2
  41fc04:	b.lt	41fc18 <_obstack_memory_used@@Base+0x7988>  // b.tstop
  41fc08:	ldr	x8, [x24, #72]
  41fc0c:	cbnz	x8, 41ec44 <_obstack_memory_used@@Base+0x69b4>
  41fc10:	ldrb	w8, [x24, #32]
  41fc14:	tbnz	w8, #0, 41ec44 <_obstack_memory_used@@Base+0x69b4>
  41fc18:	ldr	x0, [x24]
  41fc1c:	bl	402620 <free@plt>
  41fc20:	ldr	x0, [x24, #8]
  41fc24:	bl	402620 <free@plt>
  41fc28:	ldr	x0, [x24, #16]
  41fc2c:	bl	402620 <free@plt>
  41fc30:	ldr	x0, [x24, #24]
  41fc34:	bl	402620 <free@plt>
  41fc38:	mov	x0, x24
  41fc3c:	bl	402620 <free@plt>
  41fc40:	ldr	w8, [x23, #128]
  41fc44:	cmp	w8, #0xf
  41fc48:	b.eq	4200c8 <_obstack_memory_used@@Base+0x7e38>  // b.none
  41fc4c:	ldr	x0, [x23, #112]
  41fc50:	ldr	x14, [sp, #56]
  41fc54:	add	w9, w8, #0x1
  41fc58:	sxtw	x8, w8
  41fc5c:	add	x24, x0, x8, lsl #6
  41fc60:	mov	w10, #0x3                   	// #3
  41fc64:	mov	x11, #0xffffffffffffffff    	// #-1
  41fc68:	str	w9, [x23, #128]
  41fc6c:	str	xzr, [x24, #8]!
  41fc70:	stp	xzr, xzr, [x24, #16]
  41fc74:	str	xzr, [x24, #8]
  41fc78:	str	w10, [x24, #48]
  41fc7c:	stp	xzr, x25, [x24, #32]
  41fc80:	str	x11, [x24, #56]
  41fc84:	b	41ed38 <_obstack_memory_used@@Base+0x6aa8>
  41fc88:	mov	x0, x25
  41fc8c:	bl	402620 <free@plt>
  41fc90:	ldr	x14, [sp, #56]
  41fc94:	mov	x24, x19
  41fc98:	b	41ed38 <_obstack_memory_used@@Base+0x6aa8>
  41fc9c:	str	x28, [sp, #24]
  41fca0:	mov	w0, #0x7                   	// #7
  41fca4:	b	41fdf8 <_obstack_memory_used@@Base+0x7b68>
  41fca8:	str	x28, [sp, #24]
  41fcac:	b	41fdf8 <_obstack_memory_used@@Base+0x7b68>
  41fcb0:	mov	w0, #0x3c8                 	// #968
  41fcb4:	bl	4023a0 <malloc@plt>
  41fcb8:	cbz	x0, 41ff44 <_obstack_memory_used@@Base+0x7cb4>
  41fcbc:	ldr	x9, [x23, #112]
  41fcc0:	ldr	x14, [sp, #56]
  41fcc4:	mov	w8, wzr
  41fcc8:	str	x9, [x0]
  41fccc:	str	x0, [x23, #112]
  41fcd0:	str	wzr, [x23, #128]
  41fcd4:	b	41e18c <_obstack_memory_used@@Base+0x5efc>
  41fcd8:	mov	w8, #0x2                   	// #2
  41fcdc:	b	4200f0 <_obstack_memory_used@@Base+0x7e60>
  41fce0:	mov	x0, x25
  41fce4:	bl	402620 <free@plt>
  41fce8:	mov	x0, x24
  41fcec:	bl	402620 <free@plt>
  41fcf0:	b	41ff44 <_obstack_memory_used@@Base+0x7cb4>
  41fcf4:	mov	w0, #0x3c8                 	// #968
  41fcf8:	bl	4023a0 <malloc@plt>
  41fcfc:	cbz	x0, 41ff44 <_obstack_memory_used@@Base+0x7cb4>
  41fd00:	ldr	x9, [x23, #112]
  41fd04:	ldr	x10, [sp, #32]
  41fd08:	ldr	x14, [sp, #56]
  41fd0c:	mov	w8, wzr
  41fd10:	str	x9, [x0]
  41fd14:	str	x0, [x23, #112]
  41fd18:	str	wzr, [x23, #128]
  41fd1c:	b	41e2f0 <_obstack_memory_used@@Base+0x6060>
  41fd20:	mov	w8, #0x6                   	// #6
  41fd24:	b	41ff48 <_obstack_memory_used@@Base+0x7cb8>
  41fd28:	mov	w0, #0x3c8                 	// #968
  41fd2c:	bl	4023a0 <malloc@plt>
  41fd30:	cbz	x0, 41ff44 <_obstack_memory_used@@Base+0x7cb4>
  41fd34:	ldr	x9, [x23, #112]
  41fd38:	ldr	x14, [sp, #56]
  41fd3c:	mov	w8, wzr
  41fd40:	str	x9, [x0]
  41fd44:	str	x0, [x23, #112]
  41fd48:	str	wzr, [x23, #128]
  41fd4c:	b	41e524 <_obstack_memory_used@@Base+0x6294>
  41fd50:	mov	w0, #0x3c8                 	// #968
  41fd54:	bl	4023a0 <malloc@plt>
  41fd58:	cbz	x0, 41ff44 <_obstack_memory_used@@Base+0x7cb4>
  41fd5c:	ldr	x9, [x23, #112]
  41fd60:	ldr	x14, [sp, #56]
  41fd64:	mov	w8, wzr
  41fd68:	str	x9, [x0]
  41fd6c:	str	x0, [x23, #112]
  41fd70:	str	wzr, [x23, #128]
  41fd74:	b	41e4c0 <_obstack_memory_used@@Base+0x6230>
  41fd78:	mov	w0, #0x3c8                 	// #968
  41fd7c:	bl	4023a0 <malloc@plt>
  41fd80:	cbz	x0, 4200ec <_obstack_memory_used@@Base+0x7e5c>
  41fd84:	ldr	x9, [x23, #112]
  41fd88:	ldr	x14, [sp, #56]
  41fd8c:	mov	w8, wzr
  41fd90:	str	x9, [x0]
  41fd94:	str	x0, [x23, #112]
  41fd98:	str	wzr, [x23, #128]
  41fd9c:	b	41ec60 <_obstack_memory_used@@Base+0x69d0>
  41fda0:	mov	w0, #0x3c8                 	// #968
  41fda4:	bl	4023a0 <malloc@plt>
  41fda8:	cbz	x0, 4200ec <_obstack_memory_used@@Base+0x7e5c>
  41fdac:	ldr	x9, [x23, #112]
  41fdb0:	ldr	x14, [sp, #56]
  41fdb4:	mov	w8, wzr
  41fdb8:	str	x9, [x0]
  41fdbc:	str	x0, [x23, #112]
  41fdc0:	str	wzr, [x23, #128]
  41fdc4:	b	41ecc0 <_obstack_memory_used@@Base+0x6a30>
  41fdc8:	mov	w0, #0x3c8                 	// #968
  41fdcc:	bl	4023a0 <malloc@plt>
  41fdd0:	cbz	x0, 4200ec <_obstack_memory_used@@Base+0x7e5c>
  41fdd4:	ldr	x9, [x23, #112]
  41fdd8:	ldr	x14, [sp, #56]
  41fddc:	mov	w8, wzr
  41fde0:	str	x9, [x0]
  41fde4:	str	x0, [x23, #112]
  41fde8:	str	wzr, [x23, #128]
  41fdec:	b	41ed00 <_obstack_memory_used@@Base+0x6a70>
  41fdf0:	str	x28, [sp, #24]
  41fdf4:	mov	w0, #0x3                   	// #3
  41fdf8:	ldr	x28, [sp, #24]
  41fdfc:	str	w0, [x28]
  41fe00:	mov	x0, x25
  41fe04:	bl	402620 <free@plt>
  41fe08:	ldr	x0, [x24]
  41fe0c:	bl	402620 <free@plt>
  41fe10:	ldr	x0, [x24, #8]
  41fe14:	bl	402620 <free@plt>
  41fe18:	ldr	x0, [x24, #16]
  41fe1c:	bl	402620 <free@plt>
  41fe20:	ldr	x0, [x24, #24]
  41fe24:	bl	402620 <free@plt>
  41fe28:	mov	x0, x24
  41fe2c:	bl	402620 <free@plt>
  41fe30:	ldr	w8, [x28]
  41fe34:	ldr	x14, [sp, #56]
  41fe38:	mov	x24, xzr
  41fe3c:	cbz	w8, 41ed38 <_obstack_memory_used@@Base+0x6aa8>
  41fe40:	b	41ff50 <_obstack_memory_used@@Base+0x7cc0>
  41fe44:	mov	w0, #0x3c8                 	// #968
  41fe48:	bl	4023a0 <malloc@plt>
  41fe4c:	cbz	x0, 41ff44 <_obstack_memory_used@@Base+0x7cb4>
  41fe50:	ldr	x9, [x23, #112]
  41fe54:	ldr	x14, [sp, #56]
  41fe58:	mov	w8, wzr
  41fe5c:	str	x9, [x0]
  41fe60:	str	x0, [x23, #112]
  41fe64:	str	wzr, [x23, #128]
  41fe68:	b	41e5ec <_obstack_memory_used@@Base+0x635c>
  41fe6c:	mov	w0, #0x3c8                 	// #968
  41fe70:	bl	4023a0 <malloc@plt>
  41fe74:	cbz	x0, 41fff8 <_obstack_memory_used@@Base+0x7d68>
  41fe78:	ldr	x9, [x23, #112]
  41fe7c:	ldr	x21, [sp, #40]
  41fe80:	ldr	x14, [sp, #56]
  41fe84:	mov	w8, wzr
  41fe88:	str	x9, [x0]
  41fe8c:	str	x0, [x23, #112]
  41fe90:	str	wzr, [x23, #128]
  41fe94:	b	41fa50 <_obstack_memory_used@@Base+0x77c0>
  41fe98:	mov	w0, #0x3c8                 	// #968
  41fe9c:	bl	4023a0 <malloc@plt>
  41fea0:	ldr	x14, [sp, #56]
  41fea4:	cbz	x0, 41ff44 <_obstack_memory_used@@Base+0x7cb4>
  41fea8:	ldr	x9, [x23, #112]
  41feac:	mov	w8, wzr
  41feb0:	str	x9, [x0]
  41feb4:	str	x0, [x23, #112]
  41feb8:	str	wzr, [x23, #128]
  41febc:	b	41fa98 <_obstack_memory_used@@Base+0x7808>
  41fec0:	mov	w0, #0x3c8                 	// #968
  41fec4:	bl	4023a0 <malloc@plt>
  41fec8:	cbz	x0, 4200a8 <_obstack_memory_used@@Base+0x7e18>
  41fecc:	ldr	x9, [x23, #112]
  41fed0:	ldr	x21, [sp, #40]
  41fed4:	ldr	x14, [sp, #56]
  41fed8:	mov	w8, wzr
  41fedc:	str	x9, [x0]
  41fee0:	str	x0, [x23, #112]
  41fee4:	str	wzr, [x23, #128]
  41fee8:	b	41e230 <_obstack_memory_used@@Base+0x5fa0>
  41feec:	mov	w0, #0x3c8                 	// #968
  41fef0:	bl	4023a0 <malloc@plt>
  41fef4:	cbz	x0, 4200b4 <_obstack_memory_used@@Base+0x7e24>
  41fef8:	ldr	x9, [x23, #112]
  41fefc:	ldr	x21, [sp, #40]
  41ff00:	ldr	x14, [sp, #56]
  41ff04:	mov	w8, wzr
  41ff08:	str	x9, [x0]
  41ff0c:	str	x0, [x23, #112]
  41ff10:	str	wzr, [x23, #128]
  41ff14:	b	41fa00 <_obstack_memory_used@@Base+0x7770>
  41ff18:	mov	w0, #0x3c8                 	// #968
  41ff1c:	bl	4023a0 <malloc@plt>
  41ff20:	cbz	x0, 41ff44 <_obstack_memory_used@@Base+0x7cb4>
  41ff24:	ldr	x9, [x23, #112]
  41ff28:	ldr	x21, [sp, #40]
  41ff2c:	ldr	x14, [sp, #56]
  41ff30:	mov	w8, wzr
  41ff34:	str	x9, [x0]
  41ff38:	str	x0, [x23, #112]
  41ff3c:	str	wzr, [x23, #128]
  41ff40:	b	41faf0 <_obstack_memory_used@@Base+0x7860>
  41ff44:	mov	w8, #0xc                   	// #12
  41ff48:	mov	x24, xzr
  41ff4c:	str	w8, [x28]
  41ff50:	mov	x0, x24
  41ff54:	ldp	x20, x19, [sp, #272]
  41ff58:	ldp	x22, x21, [sp, #256]
  41ff5c:	ldp	x24, x23, [sp, #240]
  41ff60:	ldp	x26, x25, [sp, #224]
  41ff64:	ldp	x28, x27, [sp, #208]
  41ff68:	ldp	x29, x30, [sp, #192]
  41ff6c:	add	sp, sp, #0x120
  41ff70:	ret
  41ff74:	mov	x20, xzr
  41ff78:	mov	x19, xzr
  41ff7c:	b	41ff88 <_obstack_memory_used@@Base+0x7cf8>
  41ff80:	mov	w19, #0x2                   	// #2
  41ff84:	mov	w20, #0x80                  	// #128
  41ff88:	bl	402610 <__ctype_b_loc@plt>
  41ff8c:	ldr	x8, [x0]
  41ff90:	ldr	x14, [sp, #56]
  41ff94:	mov	w9, #0x1                   	// #1
  41ff98:	add	x8, x8, x20, lsl #1
  41ff9c:	b	41ffb4 <_obstack_memory_used@@Base+0x7d24>
  41ffa0:	add	x19, x19, #0x1
  41ffa4:	add	x20, x20, #0x40
  41ffa8:	cmp	x19, #0x4
  41ffac:	add	x8, x8, #0x80
  41ffb0:	b.eq	41e200 <_obstack_memory_used@@Base+0x5f70>  // b.none
  41ffb4:	add	x11, x23, x19, lsl #3
  41ffb8:	mov	x10, xzr
  41ffbc:	add	x11, x11, #0xb8
  41ffc0:	b	41ffe0 <_obstack_memory_used@@Base+0x7d50>
  41ffc4:	ldr	x12, [x11]
  41ffc8:	lsl	x13, x9, x10
  41ffcc:	orr	x12, x12, x13
  41ffd0:	str	x12, [x11]
  41ffd4:	add	x10, x10, #0x1
  41ffd8:	cmp	x10, #0x40
  41ffdc:	b.eq	41ffa0 <_obstack_memory_used@@Base+0x7d10>  // b.none
  41ffe0:	add	x12, x20, x10
  41ffe4:	cmp	x12, #0x5f
  41ffe8:	b.eq	41ffc4 <_obstack_memory_used@@Base+0x7d34>  // b.none
  41ffec:	ldrh	w12, [x8, x10, lsl #1]
  41fff0:	tbz	w12, #3, 41ffd4 <_obstack_memory_used@@Base+0x7d44>
  41fff4:	b	41ffc4 <_obstack_memory_used@@Base+0x7d34>
  41fff8:	ldr	x21, [sp, #40]
  41fffc:	ldr	x14, [sp, #56]
  420000:	mov	x20, xzr
  420004:	b	41fa88 <_obstack_memory_used@@Base+0x77f8>
  420008:	cbz	x25, 420098 <_obstack_memory_used@@Base+0x7e08>
  42000c:	mov	w19, #0xff                  	// #255
  420010:	movk	w19, #0x4, lsl #16
  420014:	mov	x21, x25
  420018:	ldr	x25, [x25, #8]
  42001c:	cbnz	x25, 420014 <_obstack_memory_used@@Base+0x7d84>
  420020:	ldr	x25, [x21, #16]
  420024:	cbnz	x25, 420014 <_obstack_memory_used@@Base+0x7d84>
  420028:	ldr	w8, [x21, #48]
  42002c:	and	w8, w8, w19
  420030:	cmp	w8, #0x3
  420034:	b.eq	420068 <_obstack_memory_used@@Base+0x7dd8>  // b.none
  420038:	cmp	w8, #0x6
  42003c:	b.ne	420074 <_obstack_memory_used@@Base+0x7de4>  // b.any
  420040:	ldr	x20, [x21, #40]
  420044:	ldr	x0, [x20]
  420048:	bl	402620 <free@plt>
  42004c:	ldr	x0, [x20, #8]
  420050:	bl	402620 <free@plt>
  420054:	ldr	x0, [x20, #16]
  420058:	bl	402620 <free@plt>
  42005c:	ldr	x0, [x20, #24]
  420060:	bl	402620 <free@plt>
  420064:	b	42006c <_obstack_memory_used@@Base+0x7ddc>
  420068:	ldr	x20, [x21, #40]
  42006c:	mov	x0, x20
  420070:	bl	402620 <free@plt>
  420074:	ldr	x8, [x21]
  420078:	cbz	x8, 420098 <_obstack_memory_used@@Base+0x7e08>
  42007c:	ldr	x25, [x8, #16]
  420080:	cmp	x25, x21
  420084:	mov	x21, x8
  420088:	b.eq	420028 <_obstack_memory_used@@Base+0x7d98>  // b.none
  42008c:	mov	x21, x8
  420090:	cbz	x25, 420028 <_obstack_memory_used@@Base+0x7d98>
  420094:	b	420014 <_obstack_memory_used@@Base+0x7d84>
  420098:	mov	w8, #0x8                   	// #8
  42009c:	b	41ff48 <_obstack_memory_used@@Base+0x7cb8>
  4200a0:	mov	w0, #0xb                   	// #11
  4200a4:	b	41fdf8 <_obstack_memory_used@@Base+0x7b68>
  4200a8:	mov	x19, xzr
  4200ac:	mov	w8, #0x9                   	// #9
  4200b0:	b	4200bc <_obstack_memory_used@@Base+0x7e2c>
  4200b4:	mov	x19, xzr
  4200b8:	mov	w8, #0xa                   	// #10
  4200bc:	ldr	x21, [sp, #40]
  4200c0:	ldr	x14, [sp, #56]
  4200c4:	b	41fa3c <_obstack_memory_used@@Base+0x77ac>
  4200c8:	mov	w0, #0x3c8                 	// #968
  4200cc:	bl	4023a0 <malloc@plt>
  4200d0:	cbz	x0, 4200ec <_obstack_memory_used@@Base+0x7e5c>
  4200d4:	ldr	x9, [x23, #112]
  4200d8:	mov	w8, wzr
  4200dc:	str	x9, [x0]
  4200e0:	str	x0, [x23, #112]
  4200e4:	str	wzr, [x23, #128]
  4200e8:	b	41fc50 <_obstack_memory_used@@Base+0x79c0>
  4200ec:	mov	w8, #0xc                   	// #12
  4200f0:	str	w8, [x28]
  4200f4:	b	41fe00 <_obstack_memory_used@@Base+0x7b70>
  4200f8:	mov	x0, x22
  4200fc:	bl	402620 <free@plt>
  420100:	ldr	x0, [sp]
  420104:	bl	402620 <free@plt>
  420108:	mov	w0, #0xc                   	// #12
  42010c:	b	41fdf8 <_obstack_memory_used@@Base+0x7b68>
  420110:	sub	sp, sp, #0x60
  420114:	stp	x26, x25, [sp, #32]
  420118:	stp	x20, x19, [sp, #80]
  42011c:	mov	x26, x1
  420120:	mov	x20, x0
  420124:	mov	w0, #0x20                  	// #32
  420128:	mov	w1, #0x1                   	// #1
  42012c:	stp	x29, x30, [sp, #16]
  420130:	stp	x24, x23, [sp, #48]
  420134:	stp	x22, x21, [sp, #64]
  420138:	add	x29, sp, #0x10
  42013c:	mov	x21, x5
  420140:	mov	w23, w4
  420144:	mov	x24, x3
  420148:	mov	x25, x2
  42014c:	str	xzr, [sp, #8]
  420150:	bl	402480 <calloc@plt>
  420154:	cbz	x0, 420414 <_obstack_memory_used@@Base+0x8184>
  420158:	mov	x22, x0
  42015c:	mov	w0, #0x50                  	// #80
  420160:	mov	w1, #0x1                   	// #1
  420164:	bl	402480 <calloc@plt>
  420168:	cbz	x0, 420354 <_obstack_memory_used@@Base+0x80c4>
  42016c:	mov	x19, x0
  420170:	and	w8, w23, #0x1
  420174:	strb	w8, [x0, #32]
  420178:	add	x3, sp, #0x8
  42017c:	mov	x0, x26
  420180:	mov	x1, x22
  420184:	mov	x2, x19
  420188:	mov	x4, x25
  42018c:	mov	x5, xzr
  420190:	bl	420854 <_obstack_memory_used@@Base+0x85c4>
  420194:	cbnz	w0, 42035c <_obstack_memory_used@@Base+0x80cc>
  420198:	ldrb	w8, [x24]
  42019c:	cbz	w8, 4201c8 <_obstack_memory_used@@Base+0x7f38>
  4201a0:	add	x9, x24, #0x1
  4201a4:	mov	w10, #0x1                   	// #1
  4201a8:	lsr	w11, w8, #3
  4201ac:	and	x11, x11, #0x18
  4201b0:	ldr	x12, [x22, x11]
  4201b4:	lsl	x8, x10, x8
  4201b8:	orr	x8, x12, x8
  4201bc:	str	x8, [x22, x11]
  4201c0:	ldrb	w8, [x9], #1
  4201c4:	cbnz	w8, 4201a8 <_obstack_memory_used@@Base+0x7f18>
  4201c8:	tbz	w23, #0, 4201dc <_obstack_memory_used@@Base+0x7f4c>
  4201cc:	ldp	q0, q1, [x22]
  4201d0:	mvn	v0.16b, v0.16b
  4201d4:	mvn	v1.16b, v1.16b
  4201d8:	stp	q0, q1, [x22]
  4201dc:	ldr	w8, [x20, #180]
  4201e0:	cmp	w8, #0x2
  4201e4:	b.lt	420224 <_obstack_memory_used@@Base+0x7f94>  // b.tstop
  4201e8:	ldr	x8, [x20, #120]
  4201ec:	ldp	x10, x11, [x22]
  4201f0:	ldr	x9, [x8]
  4201f4:	and	x9, x10, x9
  4201f8:	str	x9, [x22]
  4201fc:	ldr	x9, [x8, #8]
  420200:	and	x9, x11, x9
  420204:	str	x9, [x22, #8]
  420208:	ldr	x9, [x8, #16]
  42020c:	ldp	x10, x11, [x22, #16]
  420210:	and	x9, x10, x9
  420214:	str	x9, [x22, #16]
  420218:	ldr	x8, [x8, #24]
  42021c:	and	x8, x11, x8
  420220:	str	x8, [x22, #24]
  420224:	ldr	w8, [x20, #128]
  420228:	cmp	w8, #0xf
  42022c:	b.eq	42039c <_obstack_memory_used@@Base+0x810c>  // b.none
  420230:	ldr	x0, [x20, #112]
  420234:	add	w9, w8, #0x1
  420238:	sxtw	x8, w8
  42023c:	add	x23, x0, x8, lsl #6
  420240:	str	w9, [x20, #128]
  420244:	mov	w9, #0x3                   	// #3
  420248:	mov	x8, #0xffffffffffffffff    	// #-1
  42024c:	str	xzr, [x23, #8]!
  420250:	stp	xzr, xzr, [x23, #16]
  420254:	str	xzr, [x23, #8]
  420258:	str	w9, [x23, #48]
  42025c:	stp	xzr, x22, [x23, #32]
  420260:	str	x8, [x23, #56]
  420264:	ldr	w8, [x20, #180]
  420268:	cmp	w8, #0x2
  42026c:	b.lt	42030c <_obstack_memory_used@@Base+0x807c>  // b.tstop
  420270:	ldrb	w9, [x20, #176]
  420274:	ldr	w8, [x20, #128]
  420278:	orr	w9, w9, #0x2
  42027c:	cmp	w8, #0xf
  420280:	strb	w9, [x20, #176]
  420284:	b.eq	4203c0 <_obstack_memory_used@@Base+0x8130>  // b.none
  420288:	ldr	x0, [x20, #112]
  42028c:	add	w9, w8, #0x1
  420290:	sxtw	x8, w8
  420294:	add	x21, x0, x8, lsl #6
  420298:	str	w9, [x20, #128]
  42029c:	mov	w9, #0x6                   	// #6
  4202a0:	mov	x8, #0xffffffffffffffff    	// #-1
  4202a4:	str	xzr, [x21, #8]!
  4202a8:	stp	xzr, xzr, [x21, #16]
  4202ac:	str	xzr, [x21, #8]
  4202b0:	str	w9, [x21, #48]
  4202b4:	stp	xzr, x19, [x21, #32]
  4202b8:	str	x8, [x21, #56]
  4202bc:	ldr	w8, [x20, #128]
  4202c0:	cmp	w8, #0xf
  4202c4:	b.eq	420424 <_obstack_memory_used@@Base+0x8194>  // b.none
  4202c8:	ldr	x0, [x20, #112]
  4202cc:	add	w9, w8, #0x1
  4202d0:	sxtw	x8, w8
  4202d4:	add	x8, x0, x8, lsl #6
  4202d8:	str	w9, [x20, #128]
  4202dc:	mov	w9, #0xa                   	// #10
  4202e0:	mov	x10, #0xffffffffffffffff    	// #-1
  4202e4:	str	xzr, [x8, #8]!
  4202e8:	stp	x23, x21, [x8, #8]
  4202ec:	stp	xzr, xzr, [x8, #32]
  4202f0:	str	w9, [x8, #48]
  4202f4:	str	xzr, [x8, #24]
  4202f8:	str	x10, [x8, #56]
  4202fc:	str	x8, [x23]
  420300:	str	x8, [x21]
  420304:	mov	x23, x8
  420308:	b	420334 <_obstack_memory_used@@Base+0x80a4>
  42030c:	ldr	x0, [x19]
  420310:	bl	402620 <free@plt>
  420314:	ldr	x0, [x19, #8]
  420318:	bl	402620 <free@plt>
  42031c:	ldr	x0, [x19, #16]
  420320:	bl	402620 <free@plt>
  420324:	ldr	x0, [x19, #24]
  420328:	bl	402620 <free@plt>
  42032c:	mov	x0, x19
  420330:	bl	402620 <free@plt>
  420334:	mov	x0, x23
  420338:	ldp	x20, x19, [sp, #80]
  42033c:	ldp	x22, x21, [sp, #64]
  420340:	ldp	x24, x23, [sp, #48]
  420344:	ldp	x26, x25, [sp, #32]
  420348:	ldp	x29, x30, [sp, #16]
  42034c:	add	sp, sp, #0x60
  420350:	ret
  420354:	mov	x0, x22
  420358:	b	420410 <_obstack_memory_used@@Base+0x8180>
  42035c:	mov	w25, w0
  420360:	mov	x0, x22
  420364:	bl	402620 <free@plt>
  420368:	ldr	x0, [x19]
  42036c:	bl	402620 <free@plt>
  420370:	ldr	x0, [x19, #8]
  420374:	bl	402620 <free@plt>
  420378:	ldr	x0, [x19, #16]
  42037c:	bl	402620 <free@plt>
  420380:	ldr	x0, [x19, #24]
  420384:	bl	402620 <free@plt>
  420388:	mov	x0, x19
  42038c:	bl	402620 <free@plt>
  420390:	mov	x23, xzr
  420394:	str	w25, [x21]
  420398:	b	420334 <_obstack_memory_used@@Base+0x80a4>
  42039c:	mov	w0, #0x3c8                 	// #968
  4203a0:	bl	4023a0 <malloc@plt>
  4203a4:	cbz	x0, 4203e4 <_obstack_memory_used@@Base+0x8154>
  4203a8:	ldr	x9, [x20, #112]
  4203ac:	mov	w8, wzr
  4203b0:	str	x9, [x0]
  4203b4:	str	x0, [x20, #112]
  4203b8:	str	wzr, [x20, #128]
  4203bc:	b	420234 <_obstack_memory_used@@Base+0x7fa4>
  4203c0:	mov	w0, #0x3c8                 	// #968
  4203c4:	bl	4023a0 <malloc@plt>
  4203c8:	cbz	x0, 4203e4 <_obstack_memory_used@@Base+0x8154>
  4203cc:	ldr	x9, [x20, #112]
  4203d0:	mov	w8, wzr
  4203d4:	str	x9, [x0]
  4203d8:	str	x0, [x20, #112]
  4203dc:	str	wzr, [x20, #128]
  4203e0:	b	42028c <_obstack_memory_used@@Base+0x7ffc>
  4203e4:	mov	x0, x22
  4203e8:	bl	402620 <free@plt>
  4203ec:	ldr	x0, [x19]
  4203f0:	bl	402620 <free@plt>
  4203f4:	ldr	x0, [x19, #8]
  4203f8:	bl	402620 <free@plt>
  4203fc:	ldr	x0, [x19, #16]
  420400:	bl	402620 <free@plt>
  420404:	ldr	x0, [x19, #24]
  420408:	bl	402620 <free@plt>
  42040c:	mov	x0, x19
  420410:	bl	402620 <free@plt>
  420414:	mov	x23, xzr
  420418:	mov	w8, #0xc                   	// #12
  42041c:	str	w8, [x21]
  420420:	b	420334 <_obstack_memory_used@@Base+0x80a4>
  420424:	mov	w0, #0x3c8                 	// #968
  420428:	bl	4023a0 <malloc@plt>
  42042c:	cbz	x0, 420448 <_obstack_memory_used@@Base+0x81b8>
  420430:	ldr	x9, [x20, #112]
  420434:	mov	w8, wzr
  420438:	str	x9, [x0]
  42043c:	str	x0, [x20, #112]
  420440:	str	wzr, [x20, #128]
  420444:	b	4202cc <_obstack_memory_used@@Base+0x803c>
  420448:	mov	x23, xzr
  42044c:	b	420334 <_obstack_memory_used@@Base+0x80a4>
  420450:	ldr	x9, [x1, #104]
  420454:	ldr	x8, [x1, #72]
  420458:	cmp	x9, x8
  42045c:	b.le	4204d0 <_obstack_memory_used@@Base+0x8240>
  420460:	ldr	x9, [x1, #8]
  420464:	ldrb	w8, [x9, x8]
  420468:	strb	w8, [x0]
  42046c:	ldr	w9, [x1, #144]
  420470:	cmp	w9, #0x2
  420474:	b.lt	420498 <_obstack_memory_used@@Base+0x8208>  // b.tstop
  420478:	ldr	x9, [x1, #72]
  42047c:	ldr	x10, [x1, #48]
  420480:	cmp	x9, x10
  420484:	b.eq	420498 <_obstack_memory_used@@Base+0x8208>  // b.none
  420488:	ldr	x10, [x1, #16]
  42048c:	ldr	w9, [x10, x9, lsl #2]
  420490:	cmn	w9, #0x1
  420494:	b.eq	420550 <_obstack_memory_used@@Base+0x82c0>  // b.none
  420498:	tbz	w2, #0, 4204e0 <_obstack_memory_used@@Base+0x8250>
  42049c:	cmp	w8, #0x5c
  4204a0:	b.ne	4204e0 <_obstack_memory_used@@Base+0x8250>  // b.any
  4204a4:	ldr	x8, [x1, #72]
  4204a8:	ldr	x9, [x1, #88]
  4204ac:	add	x8, x8, #0x1
  4204b0:	cmp	x8, x9
  4204b4:	b.ge	420550 <_obstack_memory_used@@Base+0x82c0>  // b.tcont
  4204b8:	ldr	x9, [x1, #8]
  4204bc:	str	x8, [x1, #72]
  4204c0:	ldrb	w9, [x9, x8]
  4204c4:	mov	w8, #0x1                   	// #1
  4204c8:	strb	w9, [x0]
  4204cc:	b	420554 <_obstack_memory_used@@Base+0x82c4>
  4204d0:	mov	w9, #0x2                   	// #2
  4204d4:	strb	w9, [x0, #8]
  4204d8:	mov	w0, wzr
  4204dc:	ret
  4204e0:	cmp	w8, #0x5c
  4204e4:	b.gt	420538 <_obstack_memory_used@@Base+0x82a8>
  4204e8:	cmp	w8, #0x2d
  4204ec:	b.eq	420560 <_obstack_memory_used@@Base+0x82d0>  // b.none
  4204f0:	cmp	w8, #0x5b
  4204f4:	b.ne	420550 <_obstack_memory_used@@Base+0x82c0>  // b.any
  4204f8:	ldr	x8, [x1, #72]
  4204fc:	ldr	x9, [x1, #88]
  420500:	add	x8, x8, #0x1
  420504:	cmp	x8, x9
  420508:	b.ge	420578 <_obstack_memory_used@@Base+0x82e8>  // b.tcont
  42050c:	ldr	x9, [x1, #8]
  420510:	ldrb	w8, [x9, x8]
  420514:	cmp	w8, #0x3d
  420518:	strb	w8, [x0]
  42051c:	b.eq	420594 <_obstack_memory_used@@Base+0x8304>  // b.none
  420520:	cmp	w8, #0x3a
  420524:	b.eq	42059c <_obstack_memory_used@@Base+0x830c>  // b.none
  420528:	cmp	w8, #0x2e
  42052c:	b.ne	42057c <_obstack_memory_used@@Base+0x82ec>  // b.any
  420530:	mov	w8, #0x1a                  	// #26
  420534:	b	4205a4 <_obstack_memory_used@@Base+0x8314>
  420538:	cmp	w8, #0x5d
  42053c:	b.eq	420568 <_obstack_memory_used@@Base+0x82d8>  // b.none
  420540:	cmp	w8, #0x5e
  420544:	b.ne	420550 <_obstack_memory_used@@Base+0x82c0>  // b.any
  420548:	mov	w8, #0x19                  	// #25
  42054c:	b	42056c <_obstack_memory_used@@Base+0x82dc>
  420550:	mov	w8, #0x1                   	// #1
  420554:	strb	w8, [x0, #8]
  420558:	mov	w0, w8
  42055c:	ret
  420560:	mov	w8, #0x16                  	// #22
  420564:	b	42056c <_obstack_memory_used@@Base+0x82dc>
  420568:	mov	w8, #0x15                  	// #21
  42056c:	strb	w8, [x0, #8]
  420570:	mov	w0, #0x1                   	// #1
  420574:	ret
  420578:	strb	wzr, [x0]
  42057c:	mov	w8, #0x1                   	// #1
  420580:	mov	w9, #0x5b                  	// #91
  420584:	strb	w8, [x0, #8]
  420588:	strb	w9, [x0]
  42058c:	mov	w0, w8
  420590:	ret
  420594:	mov	w8, #0x1c                  	// #28
  420598:	b	4205a4 <_obstack_memory_used@@Base+0x8314>
  42059c:	tbz	w2, #2, 42057c <_obstack_memory_used@@Base+0x82ec>
  4205a0:	mov	w8, #0x1e                  	// #30
  4205a4:	strb	w8, [x0, #8]
  4205a8:	mov	w0, #0x2                   	// #2
  4205ac:	ret
  4205b0:	sub	sp, sp, #0x30
  4205b4:	stp	x29, x30, [sp, #32]
  4205b8:	ldr	w8, [x1, #144]
  4205bc:	ldr	x9, [x1, #72]
  4205c0:	add	x29, sp, #0x20
  4205c4:	cmp	w8, #0x1
  4205c8:	b.eq	420638 <_obstack_memory_used@@Base+0x83a8>  // b.none
  4205cc:	ldr	x8, [x1, #48]
  4205d0:	add	x10, x9, #0x1
  4205d4:	cmp	x10, x8
  4205d8:	b.ge	420638 <_obstack_memory_used@@Base+0x83a8>  // b.tcont
  4205dc:	ldr	x10, [x1, #16]
  4205e0:	sub	x8, x8, x9
  4205e4:	mov	w11, #0x1                   	// #1
  4205e8:	add	x12, x10, x9, lsl #2
  4205ec:	ldr	w13, [x12, x11, lsl #2]
  4205f0:	cmn	w13, #0x1
  4205f4:	b.ne	42060c <_obstack_memory_used@@Base+0x837c>  // b.any
  4205f8:	add	x11, x11, #0x1
  4205fc:	cmp	x8, x11
  420600:	b.ne	4205ec <_obstack_memory_used@@Base+0x835c>  // b.any
  420604:	mov	x11, x8
  420608:	b	420614 <_obstack_memory_used@@Base+0x8384>
  42060c:	cmp	w11, #0x2
  420610:	b.lt	420638 <_obstack_memory_used@@Base+0x83a8>  // b.tstop
  420614:	mov	w12, #0x1                   	// #1
  420618:	str	w12, [x0]
  42061c:	ldr	w9, [x10, x9, lsl #2]
  420620:	mov	w8, wzr
  420624:	str	w9, [x0, #8]
  420628:	ldr	x9, [x1, #72]
  42062c:	add	x9, x9, w11, sxtw
  420630:	str	x9, [x1, #72]
  420634:	b	42083c <_obstack_memory_used@@Base+0x85ac>
  420638:	add	x8, x9, w3, sxtw
  42063c:	str	x8, [x1, #72]
  420640:	ldrb	w10, [x2, #8]
  420644:	sub	w9, w10, #0x16
  420648:	cmp	w9, #0x8
  42064c:	b.hi	42082c <_obstack_memory_used@@Base+0x859c>  // b.pmore
  420650:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x12d70>
  420654:	add	x11, x11, #0x30
  420658:	adr	x12, 420668 <_obstack_memory_used@@Base+0x83d8>
  42065c:	ldrb	w13, [x11, x9]
  420660:	add	x12, x12, x13, lsl #2
  420664:	br	x12
  420668:	ldr	x9, [x1, #104]
  42066c:	cmp	x9, x8
  420670:	b.le	4207b0 <_obstack_memory_used@@Base+0x8520>
  420674:	ldrb	w9, [x2]
  420678:	mov	x8, xzr
  42067c:	and	w10, w10, #0xff
  420680:	cmp	w10, #0x1e
  420684:	b.ne	420690 <_obstack_memory_used@@Base+0x8400>  // b.any
  420688:	ldrb	w10, [x1, #139]
  42068c:	cbnz	w10, 4206e4 <_obstack_memory_used@@Base+0x8454>
  420690:	ldr	x10, [x1, #72]
  420694:	ldr	x11, [x1, #8]
  420698:	add	x12, x10, #0x1
  42069c:	str	x12, [x1, #72]
  4206a0:	ldrb	w10, [x11, x10]
  4206a4:	ldr	x11, [x1, #104]
  4206a8:	cmp	x11, x12
  4206ac:	b.le	4207b0 <_obstack_memory_used@@Base+0x8520>
  4206b0:	cmp	w9, w10, uxtb
  4206b4:	b.ne	4206c8 <_obstack_memory_used@@Base+0x8438>  // b.any
  4206b8:	ldr	x11, [x1, #8]
  4206bc:	ldrb	w11, [x11, x12]
  4206c0:	cmp	w11, #0x5d
  4206c4:	b.eq	4207b8 <_obstack_memory_used@@Base+0x8528>  // b.none
  4206c8:	ldr	x11, [x0, #8]
  4206cc:	strb	w10, [x11, x8]
  4206d0:	add	x8, x8, #0x1
  4206d4:	cmp	x8, #0x20
  4206d8:	b.eq	4207b0 <_obstack_memory_used@@Base+0x8520>  // b.none
  4206dc:	ldrb	w10, [x2, #8]
  4206e0:	b	42067c <_obstack_memory_used@@Base+0x83ec>
  4206e4:	ldrb	w10, [x1, #140]
  4206e8:	cbz	w10, 42076c <_obstack_memory_used@@Base+0x84dc>
  4206ec:	ldr	x11, [x1, #72]
  4206f0:	ldr	x13, [x1, #48]
  4206f4:	subs	x12, x13, x11
  4206f8:	b.eq	42070c <_obstack_memory_used@@Base+0x847c>  // b.none
  4206fc:	ldr	x10, [x1, #16]
  420700:	ldr	w10, [x10, x11, lsl #2]
  420704:	cmn	w10, #0x1
  420708:	b.eq	42078c <_obstack_memory_used@@Base+0x84fc>  // b.none
  42070c:	ldr	x10, [x1, #24]
  420710:	ldr	x14, [x1, #40]
  420714:	ldr	x15, [x1]
  420718:	ldr	x10, [x10, x11, lsl #3]
  42071c:	add	x10, x14, x10
  420720:	ldrsb	w10, [x15, x10]
  420724:	tbnz	w10, #31, 42078c <_obstack_memory_used@@Base+0x84fc>
  420728:	ldr	w14, [x1, #144]
  42072c:	cmp	w14, #0x1
  420730:	b.eq	4207a0 <_obstack_memory_used@@Base+0x8510>  // b.none
  420734:	add	x14, x11, #0x1
  420738:	cmp	x14, x13
  42073c:	b.ge	4207a0 <_obstack_memory_used@@Base+0x8510>  // b.tcont
  420740:	ldr	x13, [x1, #16]
  420744:	add	x14, x13, x11, lsl #2
  420748:	mov	w13, #0x1                   	// #1
  42074c:	ldr	w15, [x14, x13, lsl #2]
  420750:	cmn	w15, #0x1
  420754:	b.ne	4207a4 <_obstack_memory_used@@Base+0x8514>  // b.any
  420758:	add	x13, x13, #0x1
  42075c:	cmp	x12, x13
  420760:	b.ne	42074c <_obstack_memory_used@@Base+0x84bc>  // b.any
  420764:	mov	x13, x12
  420768:	b	4207a4 <_obstack_memory_used@@Base+0x8514>
  42076c:	ldr	x10, [x1, #72]
  420770:	ldr	x11, [x1, #40]
  420774:	ldr	x13, [x1]
  420778:	add	x12, x10, #0x1
  42077c:	str	x12, [x1, #72]
  420780:	add	x10, x10, x11
  420784:	ldrb	w10, [x13, x10]
  420788:	b	4206a4 <_obstack_memory_used@@Base+0x8414>
  42078c:	ldr	x10, [x1, #8]
  420790:	add	x12, x11, #0x1
  420794:	str	x12, [x1, #72]
  420798:	ldrb	w10, [x10, x11]
  42079c:	b	4206a4 <_obstack_memory_used@@Base+0x8414>
  4207a0:	mov	w13, #0x1                   	// #1
  4207a4:	add	x12, x11, w13, sxtw
  4207a8:	str	x12, [x1, #72]
  4207ac:	b	4206a4 <_obstack_memory_used@@Base+0x8414>
  4207b0:	mov	w8, #0x7                   	// #7
  4207b4:	b	42083c <_obstack_memory_used@@Base+0x85ac>
  4207b8:	add	x9, x12, #0x1
  4207bc:	str	x9, [x1, #72]
  4207c0:	ldr	x9, [x0, #8]
  4207c4:	strb	wzr, [x9, w8, uxtw]
  4207c8:	ldrb	w8, [x2, #8]
  4207cc:	cmp	w8, #0x1e
  4207d0:	b.eq	4207f0 <_obstack_memory_used@@Base+0x8560>  // b.none
  4207d4:	cmp	w8, #0x1c
  4207d8:	b.eq	4207f8 <_obstack_memory_used@@Base+0x8568>  // b.none
  4207dc:	cmp	w8, #0x1a
  4207e0:	mov	w8, wzr
  4207e4:	b.ne	42083c <_obstack_memory_used@@Base+0x85ac>  // b.any
  4207e8:	mov	w9, #0x3                   	// #3
  4207ec:	b	4207fc <_obstack_memory_used@@Base+0x856c>
  4207f0:	mov	w9, #0x4                   	// #4
  4207f4:	b	4207fc <_obstack_memory_used@@Base+0x856c>
  4207f8:	mov	w9, #0x2                   	// #2
  4207fc:	mov	w8, wzr
  420800:	str	w9, [x0]
  420804:	b	42083c <_obstack_memory_used@@Base+0x85ac>
  420808:	tbnz	w5, #0, 42082c <_obstack_memory_used@@Base+0x859c>
  42080c:	stp	x2, x0, [sp]
  420810:	add	x0, sp, #0x10
  420814:	mov	x2, x4
  420818:	bl	420450 <_obstack_memory_used@@Base+0x81c0>
  42081c:	ldrb	w8, [sp, #24]
  420820:	ldp	x2, x0, [sp]
  420824:	cmp	w8, #0x15
  420828:	b.ne	42084c <_obstack_memory_used@@Base+0x85bc>  // b.any
  42082c:	str	wzr, [x0]
  420830:	ldrb	w9, [x2]
  420834:	mov	w8, wzr
  420838:	strb	w9, [x0, #8]
  42083c:	ldp	x29, x30, [sp, #32]
  420840:	mov	w0, w8
  420844:	add	sp, sp, #0x30
  420848:	ret
  42084c:	mov	w8, #0xb                   	// #11
  420850:	b	42083c <_obstack_memory_used@@Base+0x85ac>
  420854:	stp	x29, x30, [sp, #-64]!
  420858:	stp	x24, x23, [sp, #16]
  42085c:	stp	x22, x21, [sp, #32]
  420860:	stp	x20, x19, [sp, #48]
  420864:	mov	x21, x4
  420868:	mov	x23, x3
  42086c:	mov	x22, x2
  420870:	mov	x19, x1
  420874:	mov	x20, x0
  420878:	mov	x29, sp
  42087c:	tbz	w5, #22, 4208b0 <_obstack_memory_used@@Base+0x8620>
  420880:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  420884:	add	x1, x1, #0x68a
  420888:	mov	x0, x21
  42088c:	bl	402600 <strcmp@plt>
  420890:	cbz	w0, 4208a8 <_obstack_memory_used@@Base+0x8618>
  420894:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  420898:	add	x1, x1, #0x690
  42089c:	mov	x0, x21
  4208a0:	bl	402600 <strcmp@plt>
  4208a4:	cbnz	w0, 4208b0 <_obstack_memory_used@@Base+0x8620>
  4208a8:	adrp	x21, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4208ac:	add	x21, x21, #0x696
  4208b0:	ldr	x8, [x23]
  4208b4:	ldr	x9, [x22, #72]
  4208b8:	cmp	x8, x9
  4208bc:	b.eq	420eb4 <_obstack_memory_used@@Base+0x8c24>  // b.none
  4208c0:	mov	x0, x21
  4208c4:	bl	4022c0 <wctype@plt>
  4208c8:	ldr	x8, [x22, #72]
  4208cc:	ldr	x9, [x22, #24]
  4208d0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4208d4:	add	x1, x1, #0x709
  4208d8:	add	x10, x8, #0x1
  4208dc:	str	x10, [x22, #72]
  4208e0:	str	x0, [x9, x8, lsl #3]
  4208e4:	mov	x0, x21
  4208e8:	bl	402600 <strcmp@plt>
  4208ec:	cbz	w0, 4209d4 <_obstack_memory_used@@Base+0x8744>
  4208f0:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4208f4:	add	x1, x1, #0x71b
  4208f8:	mov	x0, x21
  4208fc:	bl	402600 <strcmp@plt>
  420900:	cbz	w0, 420a1c <_obstack_memory_used@@Base+0x878c>
  420904:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  420908:	add	x1, x1, #0x690
  42090c:	mov	x0, x21
  420910:	bl	402600 <strcmp@plt>
  420914:	cbz	w0, 420a64 <_obstack_memory_used@@Base+0x87d4>
  420918:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  42091c:	add	x1, x1, #0x6fd
  420920:	mov	x0, x21
  420924:	bl	402600 <strcmp@plt>
  420928:	cbz	w0, 420aac <_obstack_memory_used@@Base+0x881c>
  42092c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  420930:	add	x1, x1, #0x696
  420934:	mov	x0, x21
  420938:	bl	402600 <strcmp@plt>
  42093c:	cbz	w0, 420af4 <_obstack_memory_used@@Base+0x8864>
  420940:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  420944:	add	x1, x1, #0x6f7
  420948:	mov	x0, x21
  42094c:	bl	402600 <strcmp@plt>
  420950:	cbz	w0, 420b3c <_obstack_memory_used@@Base+0x88ac>
  420954:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  420958:	add	x1, x1, #0x70f
  42095c:	mov	x0, x21
  420960:	bl	402600 <strcmp@plt>
  420964:	cbz	w0, 420b9c <_obstack_memory_used@@Base+0x890c>
  420968:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  42096c:	add	x1, x1, #0x68a
  420970:	mov	x0, x21
  420974:	bl	402600 <strcmp@plt>
  420978:	cbz	w0, 420be8 <_obstack_memory_used@@Base+0x8958>
  42097c:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  420980:	add	x1, x1, #0x721
  420984:	mov	x0, x21
  420988:	bl	402600 <strcmp@plt>
  42098c:	cbz	w0, 420c34 <_obstack_memory_used@@Base+0x89a4>
  420990:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  420994:	add	x1, x1, #0x715
  420998:	mov	x0, x21
  42099c:	bl	402600 <strcmp@plt>
  4209a0:	cbz	w0, 420cb8 <_obstack_memory_used@@Base+0x8a28>
  4209a4:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4209a8:	add	x1, x1, #0x703
  4209ac:	mov	x0, x21
  4209b0:	bl	402600 <strcmp@plt>
  4209b4:	cbz	w0, 420d3c <_obstack_memory_used@@Base+0x8aac>
  4209b8:	adrp	x1, 42a000 <_obstack_memory_used@@Base+0x11d70>
  4209bc:	add	x1, x1, #0x6f6
  4209c0:	mov	x0, x21
  4209c4:	bl	402600 <strcmp@plt>
  4209c8:	cbz	w0, 420dc0 <_obstack_memory_used@@Base+0x8b30>
  4209cc:	mov	w0, #0x4                   	// #4
  4209d0:	b	420b88 <_obstack_memory_used@@Base+0x88f8>
  4209d4:	bl	402610 <__ctype_b_loc@plt>
  4209d8:	ldr	x8, [x0]
  4209dc:	mov	x9, xzr
  4209e0:	mov	w10, #0x1                   	// #1
  4209e4:	cbz	x20, 4209f8 <_obstack_memory_used@@Base+0x8768>
  4209e8:	b	420c90 <_obstack_memory_used@@Base+0x8a00>
  4209ec:	add	x9, x9, #0x1
  4209f0:	cmp	x9, #0x100
  4209f4:	b.eq	420b84 <_obstack_memory_used@@Base+0x88f4>  // b.none
  4209f8:	ldrh	w11, [x8, x9, lsl #1]
  4209fc:	tbz	w11, #3, 4209ec <_obstack_memory_used@@Base+0x875c>
  420a00:	ubfx	x11, x9, #6, #2
  420a04:	lsl	x11, x11, #3
  420a08:	ldr	x12, [x19, x11]
  420a0c:	lsl	x13, x10, x9
  420a10:	orr	x12, x12, x13
  420a14:	str	x12, [x19, x11]
  420a18:	b	4209ec <_obstack_memory_used@@Base+0x875c>
  420a1c:	bl	402610 <__ctype_b_loc@plt>
  420a20:	ldr	x8, [x0]
  420a24:	mov	x9, xzr
  420a28:	mov	w10, #0x1                   	// #1
  420a2c:	cbz	x20, 420a40 <_obstack_memory_used@@Base+0x87b0>
  420a30:	b	420d14 <_obstack_memory_used@@Base+0x8a84>
  420a34:	add	x9, x9, #0x1
  420a38:	cmp	x9, #0x100
  420a3c:	b.eq	420b84 <_obstack_memory_used@@Base+0x88f4>  // b.none
  420a40:	ldrh	w11, [x8, x9, lsl #1]
  420a44:	tbz	w11, #1, 420a34 <_obstack_memory_used@@Base+0x87a4>
  420a48:	ubfx	x11, x9, #6, #2
  420a4c:	lsl	x11, x11, #3
  420a50:	ldr	x12, [x19, x11]
  420a54:	lsl	x13, x10, x9
  420a58:	orr	x12, x12, x13
  420a5c:	str	x12, [x19, x11]
  420a60:	b	420a34 <_obstack_memory_used@@Base+0x87a4>
  420a64:	bl	402610 <__ctype_b_loc@plt>
  420a68:	ldr	x8, [x0]
  420a6c:	mov	x9, xzr
  420a70:	mov	w10, #0x1                   	// #1
  420a74:	cbz	x20, 420a88 <_obstack_memory_used@@Base+0x87f8>
  420a78:	b	420d98 <_obstack_memory_used@@Base+0x8b08>
  420a7c:	add	x9, x9, #0x1
  420a80:	cmp	x9, #0x100
  420a84:	b.eq	420b84 <_obstack_memory_used@@Base+0x88f4>  // b.none
  420a88:	ldrh	w11, [x8, x9, lsl #1]
  420a8c:	tbz	w11, #9, 420a7c <_obstack_memory_used@@Base+0x87ec>
  420a90:	ubfx	x11, x9, #6, #2
  420a94:	lsl	x11, x11, #3
  420a98:	ldr	x12, [x19, x11]
  420a9c:	lsl	x13, x10, x9
  420aa0:	orr	x12, x12, x13
  420aa4:	str	x12, [x19, x11]
  420aa8:	b	420a7c <_obstack_memory_used@@Base+0x87ec>
  420aac:	bl	402610 <__ctype_b_loc@plt>
  420ab0:	ldr	x8, [x0]
  420ab4:	mov	x9, xzr
  420ab8:	mov	w10, #0x1                   	// #1
  420abc:	cbz	x20, 420ad0 <_obstack_memory_used@@Base+0x8840>
  420ac0:	b	420e1c <_obstack_memory_used@@Base+0x8b8c>
  420ac4:	add	x9, x9, #0x1
  420ac8:	cmp	x9, #0x100
  420acc:	b.eq	420b84 <_obstack_memory_used@@Base+0x88f4>  // b.none
  420ad0:	ldrh	w11, [x8, x9, lsl #1]
  420ad4:	tbz	w11, #13, 420ac4 <_obstack_memory_used@@Base+0x8834>
  420ad8:	ubfx	x11, x9, #6, #2
  420adc:	lsl	x11, x11, #3
  420ae0:	ldr	x12, [x19, x11]
  420ae4:	lsl	x13, x10, x9
  420ae8:	orr	x12, x12, x13
  420aec:	str	x12, [x19, x11]
  420af0:	b	420ac4 <_obstack_memory_used@@Base+0x8834>
  420af4:	bl	402610 <__ctype_b_loc@plt>
  420af8:	ldr	x8, [x0]
  420afc:	mov	x9, xzr
  420b00:	mov	w10, #0x1                   	// #1
  420b04:	cbz	x20, 420b18 <_obstack_memory_used@@Base+0x8888>
  420b08:	b	420e54 <_obstack_memory_used@@Base+0x8bc4>
  420b0c:	add	x9, x9, #0x1
  420b10:	cmp	x9, #0x100
  420b14:	b.eq	420b84 <_obstack_memory_used@@Base+0x88f4>  // b.none
  420b18:	ldrh	w11, [x8, x9, lsl #1]
  420b1c:	tbz	w11, #10, 420b0c <_obstack_memory_used@@Base+0x887c>
  420b20:	ubfx	x11, x9, #6, #2
  420b24:	lsl	x11, x11, #3
  420b28:	ldr	x12, [x19, x11]
  420b2c:	lsl	x13, x10, x9
  420b30:	orr	x12, x12, x13
  420b34:	str	x12, [x19, x11]
  420b38:	b	420b0c <_obstack_memory_used@@Base+0x887c>
  420b3c:	bl	402610 <__ctype_b_loc@plt>
  420b40:	ldr	x8, [x0]
  420b44:	mov	x9, xzr
  420b48:	mov	w10, #0x1                   	// #1
  420b4c:	cbz	x20, 420b60 <_obstack_memory_used@@Base+0x88d0>
  420b50:	b	420e8c <_obstack_memory_used@@Base+0x8bfc>
  420b54:	add	x9, x9, #0x1
  420b58:	cmp	x9, #0x100
  420b5c:	b.eq	420b84 <_obstack_memory_used@@Base+0x88f4>  // b.none
  420b60:	ldrh	w11, [x8, x9, lsl #1]
  420b64:	tbz	w11, #11, 420b54 <_obstack_memory_used@@Base+0x88c4>
  420b68:	ubfx	x11, x9, #6, #2
  420b6c:	lsl	x11, x11, #3
  420b70:	ldr	x12, [x19, x11]
  420b74:	lsl	x13, x10, x9
  420b78:	orr	x12, x12, x13
  420b7c:	str	x12, [x19, x11]
  420b80:	b	420b54 <_obstack_memory_used@@Base+0x88c4>
  420b84:	mov	w0, wzr
  420b88:	ldp	x20, x19, [sp, #48]
  420b8c:	ldp	x22, x21, [sp, #32]
  420b90:	ldp	x24, x23, [sp, #16]
  420b94:	ldp	x29, x30, [sp], #64
  420b98:	ret
  420b9c:	bl	402610 <__ctype_b_loc@plt>
  420ba0:	ldr	x8, [x0]
  420ba4:	mov	x9, xzr
  420ba8:	mov	w10, #0x1                   	// #1
  420bac:	cbz	x20, 420bc4 <_obstack_memory_used@@Base+0x8934>
  420bb0:	b	420ee8 <_obstack_memory_used@@Base+0x8c58>
  420bb4:	add	x9, x9, #0x1
  420bb8:	cmp	x9, #0x100
  420bbc:	mov	w0, wzr
  420bc0:	b.eq	420b88 <_obstack_memory_used@@Base+0x88f8>  // b.none
  420bc4:	ldrh	w11, [x8, x9, lsl #1]
  420bc8:	tbz	w11, #14, 420bb4 <_obstack_memory_used@@Base+0x8924>
  420bcc:	ubfx	x11, x9, #6, #2
  420bd0:	lsl	x11, x11, #3
  420bd4:	ldr	x12, [x19, x11]
  420bd8:	lsl	x13, x10, x9
  420bdc:	orr	x12, x12, x13
  420be0:	str	x12, [x19, x11]
  420be4:	b	420bb4 <_obstack_memory_used@@Base+0x8924>
  420be8:	bl	402610 <__ctype_b_loc@plt>
  420bec:	ldr	x8, [x0]
  420bf0:	mov	x9, xzr
  420bf4:	mov	w10, #0x1                   	// #1
  420bf8:	cbz	x20, 420c10 <_obstack_memory_used@@Base+0x8980>
  420bfc:	b	420f20 <_obstack_memory_used@@Base+0x8c90>
  420c00:	add	x9, x9, #0x1
  420c04:	cmp	x9, #0x100
  420c08:	mov	w0, wzr
  420c0c:	b.eq	420b88 <_obstack_memory_used@@Base+0x88f8>  // b.none
  420c10:	ldrh	w11, [x8, x9, lsl #1]
  420c14:	tbz	w11, #8, 420c00 <_obstack_memory_used@@Base+0x8970>
  420c18:	ubfx	x11, x9, #6, #2
  420c1c:	lsl	x11, x11, #3
  420c20:	ldr	x12, [x19, x11]
  420c24:	lsl	x13, x10, x9
  420c28:	orr	x12, x12, x13
  420c2c:	str	x12, [x19, x11]
  420c30:	b	420c00 <_obstack_memory_used@@Base+0x8970>
  420c34:	bl	402610 <__ctype_b_loc@plt>
  420c38:	ldr	x8, [x0]
  420c3c:	mov	x9, xzr
  420c40:	mov	w10, #0x1                   	// #1
  420c44:	cbz	x20, 420c5c <_obstack_memory_used@@Base+0x89cc>
  420c48:	b	420f58 <_obstack_memory_used@@Base+0x8cc8>
  420c4c:	add	x9, x9, #0x1
  420c50:	cmp	x9, #0x100
  420c54:	mov	w0, wzr
  420c58:	b.eq	420b88 <_obstack_memory_used@@Base+0x88f8>  // b.none
  420c5c:	ldrh	w11, [x8, x9, lsl #1]
  420c60:	tbz	w11, #0, 420c4c <_obstack_memory_used@@Base+0x89bc>
  420c64:	ubfx	x11, x9, #6, #2
  420c68:	lsl	x11, x11, #3
  420c6c:	ldr	x12, [x19, x11]
  420c70:	lsl	x13, x10, x9
  420c74:	orr	x12, x12, x13
  420c78:	str	x12, [x19, x11]
  420c7c:	b	420c4c <_obstack_memory_used@@Base+0x89bc>
  420c80:	add	x9, x9, #0x1
  420c84:	cmp	x9, #0x100
  420c88:	mov	w0, wzr
  420c8c:	b.eq	420b88 <_obstack_memory_used@@Base+0x88f8>  // b.none
  420c90:	ldrh	w11, [x8, x9, lsl #1]
  420c94:	tbz	w11, #3, 420c80 <_obstack_memory_used@@Base+0x89f0>
  420c98:	ldrb	w11, [x20, x9]
  420c9c:	lsr	x12, x11, #3
  420ca0:	and	x12, x12, #0x18
  420ca4:	ldr	x13, [x19, x12]
  420ca8:	lsl	x11, x10, x11
  420cac:	orr	x11, x11, x13
  420cb0:	str	x11, [x19, x12]
  420cb4:	b	420c80 <_obstack_memory_used@@Base+0x89f0>
  420cb8:	bl	402610 <__ctype_b_loc@plt>
  420cbc:	ldr	x8, [x0]
  420cc0:	mov	x9, xzr
  420cc4:	mov	w10, #0x1                   	// #1
  420cc8:	cbz	x20, 420ce0 <_obstack_memory_used@@Base+0x8a50>
  420ccc:	b	420f90 <_obstack_memory_used@@Base+0x8d00>
  420cd0:	add	x9, x9, #0x1
  420cd4:	cmp	x9, #0x100
  420cd8:	mov	w0, wzr
  420cdc:	b.eq	420b88 <_obstack_memory_used@@Base+0x88f8>  // b.none
  420ce0:	ldrsh	w11, [x8, x9, lsl #1]
  420ce4:	tbz	w11, #31, 420cd0 <_obstack_memory_used@@Base+0x8a40>
  420ce8:	ubfx	x11, x9, #6, #2
  420cec:	lsl	x11, x11, #3
  420cf0:	ldr	x12, [x19, x11]
  420cf4:	lsl	x13, x10, x9
  420cf8:	orr	x12, x12, x13
  420cfc:	str	x12, [x19, x11]
  420d00:	b	420cd0 <_obstack_memory_used@@Base+0x8a40>
  420d04:	add	x9, x9, #0x1
  420d08:	cmp	x9, #0x100
  420d0c:	mov	w0, wzr
  420d10:	b.eq	420b88 <_obstack_memory_used@@Base+0x88f8>  // b.none
  420d14:	ldrh	w11, [x8, x9, lsl #1]
  420d18:	tbz	w11, #1, 420d04 <_obstack_memory_used@@Base+0x8a74>
  420d1c:	ldrb	w11, [x20, x9]
  420d20:	lsr	x12, x11, #3
  420d24:	and	x12, x12, #0x18
  420d28:	ldr	x13, [x19, x12]
  420d2c:	lsl	x11, x10, x11
  420d30:	orr	x11, x11, x13
  420d34:	str	x11, [x19, x12]
  420d38:	b	420d04 <_obstack_memory_used@@Base+0x8a74>
  420d3c:	bl	402610 <__ctype_b_loc@plt>
  420d40:	ldr	x8, [x0]
  420d44:	mov	x9, xzr
  420d48:	mov	w10, #0x1                   	// #1
  420d4c:	cbz	x20, 420d64 <_obstack_memory_used@@Base+0x8ad4>
  420d50:	b	420fc8 <_obstack_memory_used@@Base+0x8d38>
  420d54:	add	x9, x9, #0x1
  420d58:	cmp	x9, #0x100
  420d5c:	mov	w0, wzr
  420d60:	b.eq	420b88 <_obstack_memory_used@@Base+0x88f8>  // b.none
  420d64:	ldrh	w11, [x8, x9, lsl #1]
  420d68:	tbz	w11, #2, 420d54 <_obstack_memory_used@@Base+0x8ac4>
  420d6c:	ubfx	x11, x9, #6, #2
  420d70:	lsl	x11, x11, #3
  420d74:	ldr	x12, [x19, x11]
  420d78:	lsl	x13, x10, x9
  420d7c:	orr	x12, x12, x13
  420d80:	str	x12, [x19, x11]
  420d84:	b	420d54 <_obstack_memory_used@@Base+0x8ac4>
  420d88:	add	x9, x9, #0x1
  420d8c:	cmp	x9, #0x100
  420d90:	mov	w0, wzr
  420d94:	b.eq	420b88 <_obstack_memory_used@@Base+0x88f8>  // b.none
  420d98:	ldrh	w11, [x8, x9, lsl #1]
  420d9c:	tbz	w11, #9, 420d88 <_obstack_memory_used@@Base+0x8af8>
  420da0:	ldrb	w11, [x20, x9]
  420da4:	lsr	x12, x11, #3
  420da8:	and	x12, x12, #0x18
  420dac:	ldr	x13, [x19, x12]
  420db0:	lsl	x11, x10, x11
  420db4:	orr	x11, x11, x13
  420db8:	str	x11, [x19, x12]
  420dbc:	b	420d88 <_obstack_memory_used@@Base+0x8af8>
  420dc0:	bl	402610 <__ctype_b_loc@plt>
  420dc4:	ldr	x8, [x0]
  420dc8:	mov	x9, xzr
  420dcc:	mov	w10, #0x1                   	// #1
  420dd0:	cbz	x20, 420de8 <_obstack_memory_used@@Base+0x8b58>
  420dd4:	b	421000 <_obstack_memory_used@@Base+0x8d70>
  420dd8:	add	x9, x9, #0x1
  420ddc:	cmp	x9, #0x100
  420de0:	mov	w0, wzr
  420de4:	b.eq	420b88 <_obstack_memory_used@@Base+0x88f8>  // b.none
  420de8:	ldrh	w11, [x8, x9, lsl #1]
  420dec:	tbz	w11, #12, 420dd8 <_obstack_memory_used@@Base+0x8b48>
  420df0:	ubfx	x11, x9, #6, #2
  420df4:	lsl	x11, x11, #3
  420df8:	ldr	x12, [x19, x11]
  420dfc:	lsl	x13, x10, x9
  420e00:	orr	x12, x12, x13
  420e04:	str	x12, [x19, x11]
  420e08:	b	420dd8 <_obstack_memory_used@@Base+0x8b48>
  420e0c:	add	x9, x9, #0x1
  420e10:	cmp	x9, #0x100
  420e14:	mov	w0, wzr
  420e18:	b.eq	420b88 <_obstack_memory_used@@Base+0x88f8>  // b.none
  420e1c:	ldrh	w11, [x8, x9, lsl #1]
  420e20:	tbz	w11, #13, 420e0c <_obstack_memory_used@@Base+0x8b7c>
  420e24:	ldrb	w11, [x20, x9]
  420e28:	lsr	x12, x11, #3
  420e2c:	and	x12, x12, #0x18
  420e30:	ldr	x13, [x19, x12]
  420e34:	lsl	x11, x10, x11
  420e38:	orr	x11, x11, x13
  420e3c:	str	x11, [x19, x12]
  420e40:	b	420e0c <_obstack_memory_used@@Base+0x8b7c>
  420e44:	add	x9, x9, #0x1
  420e48:	cmp	x9, #0x100
  420e4c:	mov	w0, wzr
  420e50:	b.eq	420b88 <_obstack_memory_used@@Base+0x88f8>  // b.none
  420e54:	ldrh	w11, [x8, x9, lsl #1]
  420e58:	tbz	w11, #10, 420e44 <_obstack_memory_used@@Base+0x8bb4>
  420e5c:	ldrb	w11, [x20, x9]
  420e60:	lsr	x12, x11, #3
  420e64:	and	x12, x12, #0x18
  420e68:	ldr	x13, [x19, x12]
  420e6c:	lsl	x11, x10, x11
  420e70:	orr	x11, x11, x13
  420e74:	str	x11, [x19, x12]
  420e78:	b	420e44 <_obstack_memory_used@@Base+0x8bb4>
  420e7c:	add	x9, x9, #0x1
  420e80:	cmp	x9, #0x100
  420e84:	mov	w0, wzr
  420e88:	b.eq	420b88 <_obstack_memory_used@@Base+0x88f8>  // b.none
  420e8c:	ldrh	w11, [x8, x9, lsl #1]
  420e90:	tbz	w11, #11, 420e7c <_obstack_memory_used@@Base+0x8bec>
  420e94:	ldrb	w11, [x20, x9]
  420e98:	lsr	x12, x11, #3
  420e9c:	and	x12, x12, #0x18
  420ea0:	ldr	x13, [x19, x12]
  420ea4:	lsl	x11, x10, x11
  420ea8:	orr	x11, x11, x13
  420eac:	str	x11, [x19, x12]
  420eb0:	b	420e7c <_obstack_memory_used@@Base+0x8bec>
  420eb4:	ldr	x0, [x22, #24]
  420eb8:	mov	w24, #0x1                   	// #1
  420ebc:	bfi	x24, x8, #1, #63
  420ec0:	lsl	x1, x24, #3
  420ec4:	bl	4024c0 <realloc@plt>
  420ec8:	cbz	x0, 421028 <_obstack_memory_used@@Base+0x8d98>
  420ecc:	str	x0, [x22, #24]
  420ed0:	str	x24, [x23]
  420ed4:	b	4208c0 <_obstack_memory_used@@Base+0x8630>
  420ed8:	add	x9, x9, #0x1
  420edc:	cmp	x9, #0x100
  420ee0:	mov	w0, wzr
  420ee4:	b.eq	420b88 <_obstack_memory_used@@Base+0x88f8>  // b.none
  420ee8:	ldrh	w11, [x8, x9, lsl #1]
  420eec:	tbz	w11, #14, 420ed8 <_obstack_memory_used@@Base+0x8c48>
  420ef0:	ldrb	w11, [x20, x9]
  420ef4:	lsr	x12, x11, #3
  420ef8:	and	x12, x12, #0x18
  420efc:	ldr	x13, [x19, x12]
  420f00:	lsl	x11, x10, x11
  420f04:	orr	x11, x11, x13
  420f08:	str	x11, [x19, x12]
  420f0c:	b	420ed8 <_obstack_memory_used@@Base+0x8c48>
  420f10:	add	x9, x9, #0x1
  420f14:	cmp	x9, #0x100
  420f18:	mov	w0, wzr
  420f1c:	b.eq	420b88 <_obstack_memory_used@@Base+0x88f8>  // b.none
  420f20:	ldrh	w11, [x8, x9, lsl #1]
  420f24:	tbz	w11, #8, 420f10 <_obstack_memory_used@@Base+0x8c80>
  420f28:	ldrb	w11, [x20, x9]
  420f2c:	lsr	x12, x11, #3
  420f30:	and	x12, x12, #0x18
  420f34:	ldr	x13, [x19, x12]
  420f38:	lsl	x11, x10, x11
  420f3c:	orr	x11, x11, x13
  420f40:	str	x11, [x19, x12]
  420f44:	b	420f10 <_obstack_memory_used@@Base+0x8c80>
  420f48:	add	x9, x9, #0x1
  420f4c:	cmp	x9, #0x100
  420f50:	mov	w0, wzr
  420f54:	b.eq	420b88 <_obstack_memory_used@@Base+0x88f8>  // b.none
  420f58:	ldrh	w11, [x8, x9, lsl #1]
  420f5c:	tbz	w11, #0, 420f48 <_obstack_memory_used@@Base+0x8cb8>
  420f60:	ldrb	w11, [x20, x9]
  420f64:	lsr	x12, x11, #3
  420f68:	and	x12, x12, #0x18
  420f6c:	ldr	x13, [x19, x12]
  420f70:	lsl	x11, x10, x11
  420f74:	orr	x11, x11, x13
  420f78:	str	x11, [x19, x12]
  420f7c:	b	420f48 <_obstack_memory_used@@Base+0x8cb8>
  420f80:	add	x9, x9, #0x1
  420f84:	cmp	x9, #0x100
  420f88:	mov	w0, wzr
  420f8c:	b.eq	420b88 <_obstack_memory_used@@Base+0x88f8>  // b.none
  420f90:	ldrsh	w11, [x8, x9, lsl #1]
  420f94:	tbz	w11, #31, 420f80 <_obstack_memory_used@@Base+0x8cf0>
  420f98:	ldrb	w11, [x20, x9]
  420f9c:	lsr	x12, x11, #3
  420fa0:	and	x12, x12, #0x18
  420fa4:	ldr	x13, [x19, x12]
  420fa8:	lsl	x11, x10, x11
  420fac:	orr	x11, x11, x13
  420fb0:	str	x11, [x19, x12]
  420fb4:	b	420f80 <_obstack_memory_used@@Base+0x8cf0>
  420fb8:	add	x9, x9, #0x1
  420fbc:	cmp	x9, #0x100
  420fc0:	mov	w0, wzr
  420fc4:	b.eq	420b88 <_obstack_memory_used@@Base+0x88f8>  // b.none
  420fc8:	ldrh	w11, [x8, x9, lsl #1]
  420fcc:	tbz	w11, #2, 420fb8 <_obstack_memory_used@@Base+0x8d28>
  420fd0:	ldrb	w11, [x20, x9]
  420fd4:	lsr	x12, x11, #3
  420fd8:	and	x12, x12, #0x18
  420fdc:	ldr	x13, [x19, x12]
  420fe0:	lsl	x11, x10, x11
  420fe4:	orr	x11, x11, x13
  420fe8:	str	x11, [x19, x12]
  420fec:	b	420fb8 <_obstack_memory_used@@Base+0x8d28>
  420ff0:	add	x9, x9, #0x1
  420ff4:	cmp	x9, #0x100
  420ff8:	mov	w0, wzr
  420ffc:	b.eq	420b88 <_obstack_memory_used@@Base+0x88f8>  // b.none
  421000:	ldrh	w11, [x8, x9, lsl #1]
  421004:	tbz	w11, #12, 420ff0 <_obstack_memory_used@@Base+0x8d60>
  421008:	ldrb	w11, [x20, x9]
  42100c:	lsr	x12, x11, #3
  421010:	and	x12, x12, #0x18
  421014:	ldr	x13, [x19, x12]
  421018:	lsl	x11, x10, x11
  42101c:	orr	x11, x11, x13
  421020:	str	x11, [x19, x12]
  421024:	b	420ff0 <_obstack_memory_used@@Base+0x8d60>
  421028:	mov	w0, #0xc                   	// #12
  42102c:	b	420b88 <_obstack_memory_used@@Base+0x88f8>
  421030:	stp	x29, x30, [sp, #-64]!
  421034:	stp	x22, x21, [sp, #32]
  421038:	stp	x20, x19, [sp, #48]
  42103c:	ldr	w8, [x1, #48]
  421040:	ldr	x19, [x1, #56]
  421044:	str	x23, [sp, #16]
  421048:	mov	x29, sp
  42104c:	and	w8, w8, #0xff
  421050:	sub	w9, w8, #0x2
  421054:	cmp	w9, #0xe
  421058:	mov	x8, x0
  42105c:	b.hi	421148 <_obstack_memory_used@@Base+0x8eb8>  // b.pmore
  421060:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x12d70>
  421064:	add	x10, x10, #0x39
  421068:	adr	x11, 42107c <_obstack_memory_used@@Base+0x8dec>
  42106c:	ldrb	w12, [x10, x9]
  421070:	add	x11, x11, x12, lsl #2
  421074:	mov	w0, wzr
  421078:	br	x11
  42107c:	ldr	x9, [x1, #32]
  421080:	ldr	x8, [x8, #40]
  421084:	mov	w10, #0x18                  	// #24
  421088:	ldr	x20, [x9, #56]
  42108c:	madd	x19, x19, x10, x8
  421090:	mov	w8, #0x1                   	// #1
  421094:	dup	v0.2d, x8
  421098:	mov	w0, #0x8                   	// #8
  42109c:	str	q0, [x19]
  4210a0:	bl	4023a0 <malloc@plt>
  4210a4:	str	x0, [x19, #16]
  4210a8:	cbz	x0, 4211d0 <_obstack_memory_used@@Base+0x8f40>
  4210ac:	mov	x8, x0
  4210b0:	mov	w0, wzr
  4210b4:	str	x20, [x8]
  4210b8:	b	4211bc <_obstack_memory_used@@Base+0x8f2c>
  4210bc:	ldrb	w9, [x8, #176]
  4210c0:	add	x11, x1, #0x20
  4210c4:	ldr	x22, [x8, #40]
  4210c8:	mov	w0, #0x10                  	// #16
  4210cc:	orr	w9, w9, #0x1
  4210d0:	strb	w9, [x8, #176]
  4210d4:	ldp	x9, x10, [x1, #8]
  4210d8:	mov	w8, #0x18                  	// #24
  4210dc:	madd	x23, x19, x8, x22
  4210e0:	mov	w8, #0x2                   	// #2
  4210e4:	add	x12, x9, #0x18
  4210e8:	cmp	x9, #0x0
  4210ec:	add	x9, x10, #0x18
  4210f0:	csel	x12, x11, x12, eq  // eq = none
  4210f4:	cmp	x10, #0x0
  4210f8:	csel	x9, x11, x9, eq  // eq = none
  4210fc:	ldr	x10, [x12]
  421100:	ldr	x9, [x9]
  421104:	ldr	x20, [x10, #56]
  421108:	ldr	x21, [x9, #56]
  42110c:	str	x8, [x23]
  421110:	bl	4023a0 <malloc@plt>
  421114:	str	x0, [x23, #16]
  421118:	cbz	x0, 4211d4 <_obstack_memory_used@@Base+0x8f44>
  42111c:	mov	w9, #0x18                  	// #24
  421120:	madd	x9, x19, x9, x22
  421124:	mov	x8, x0
  421128:	cmp	x20, x21
  42112c:	add	x9, x9, #0x8
  421130:	b.ne	42119c <_obstack_memory_used@@Base+0x8f0c>  // b.any
  421134:	mov	w10, #0x1                   	// #1
  421138:	mov	w0, wzr
  42113c:	str	x10, [x9]
  421140:	str	x20, [x8]
  421144:	b	4211bc <_obstack_memory_used@@Base+0x8f2c>
  421148:	ldr	x9, [x1, #32]
  42114c:	ldr	x8, [x8, #24]
  421150:	mov	w0, wzr
  421154:	ldr	x9, [x9, #56]
  421158:	str	x9, [x8, x19, lsl #3]
  42115c:	b	4211bc <_obstack_memory_used@@Base+0x8f2c>
  421160:	ldr	x9, [x1, #32]
  421164:	ldr	x20, [x9, #56]
  421168:	ldr	x9, [x8, #24]
  42116c:	str	x20, [x9, x19, lsl #3]
  421170:	ldrb	w9, [x1, #48]
  421174:	cmp	w9, #0x4
  421178:	b.ne	421194 <_obstack_memory_used@@Base+0x8f04>  // b.any
  42117c:	ldr	x8, [x8, #40]
  421180:	mov	w9, #0x18                  	// #24
  421184:	mov	w10, #0x1                   	// #1
  421188:	dup	v0.2d, x10
  42118c:	madd	x19, x19, x9, x8
  421190:	b	421098 <_obstack_memory_used@@Base+0x8e08>
  421194:	mov	w0, wzr
  421198:	b	4211bc <_obstack_memory_used@@Base+0x8f2c>
  42119c:	mov	w10, #0x2                   	// #2
  4211a0:	cmp	x20, x21
  4211a4:	mov	w0, wzr
  4211a8:	str	x10, [x9]
  4211ac:	b.cs	4211b8 <_obstack_memory_used@@Base+0x8f28>  // b.hs, b.nlast
  4211b0:	stp	x20, x21, [x8]
  4211b4:	b	4211bc <_obstack_memory_used@@Base+0x8f2c>
  4211b8:	stp	x21, x20, [x8]
  4211bc:	ldp	x20, x19, [sp, #48]
  4211c0:	ldp	x22, x21, [sp, #32]
  4211c4:	ldr	x23, [sp, #16]
  4211c8:	ldp	x29, x30, [sp], #64
  4211cc:	ret
  4211d0:	stp	xzr, xzr, [x19]
  4211d4:	mov	w0, #0xc                   	// #12
  4211d8:	b	4211bc <_obstack_memory_used@@Base+0x8f2c>
  4211dc:	stp	x29, x30, [sp, #-80]!
  4211e0:	stp	x24, x23, [sp, #32]
  4211e4:	stp	x22, x21, [sp, #48]
  4211e8:	stp	x20, x19, [sp, #64]
  4211ec:	ldr	x21, [x2, #8]
  4211f0:	ldr	x22, [x1]
  4211f4:	mov	x19, x2
  4211f8:	mov	x20, x0
  4211fc:	str	x25, [sp, #16]
  421200:	mov	x29, sp
  421204:	cbz	x21, 421228 <_obstack_memory_used@@Base+0x8f98>
  421208:	ldrb	w8, [x1, #56]
  42120c:	tbz	w8, #4, 421228 <_obstack_memory_used@@Base+0x8f98>
  421210:	ldr	x8, [x19, #40]
  421214:	cmp	x8, #0x3f
  421218:	b.gt	421390 <_obstack_memory_used@@Base+0x9100>
  42121c:	ldr	x9, [x22, #160]
  421220:	lsr	x8, x9, x8
  421224:	tbz	w8, #0, 421390 <_obstack_memory_used@@Base+0x9100>
  421228:	ldr	w8, [x22, #128]
  42122c:	cmp	w8, #0xf
  421230:	b.eq	4213ac <_obstack_memory_used@@Base+0x911c>  // b.none
  421234:	ldr	x0, [x22, #112]
  421238:	add	w9, w8, #0x1
  42123c:	sxtw	x8, w8
  421240:	add	x23, x0, x8, lsl #6
  421244:	mov	w10, #0x8                   	// #8
  421248:	mov	x11, #0xffffffffffffffff    	// #-1
  42124c:	str	w9, [x22, #128]
  421250:	str	xzr, [x23, #8]!
  421254:	stp	xzr, xzr, [x23, #16]
  421258:	str	xzr, [x23, #8]
  42125c:	str	w10, [x23, #48]
  421260:	stp	xzr, xzr, [x23, #32]
  421264:	str	x11, [x23, #56]
  421268:	ldr	w8, [x22, #128]
  42126c:	cmp	w8, #0xf
  421270:	b.eq	4213d0 <_obstack_memory_used@@Base+0x9140>  // b.none
  421274:	ldr	x0, [x22, #112]
  421278:	add	w9, w8, #0x1
  42127c:	sxtw	x8, w8
  421280:	add	x24, x0, x8, lsl #6
  421284:	mov	w10, #0x9                   	// #9
  421288:	mov	x11, #0xffffffffffffffff    	// #-1
  42128c:	str	w9, [x22, #128]
  421290:	str	xzr, [x24, #8]!
  421294:	stp	xzr, xzr, [x24, #16]
  421298:	str	xzr, [x24, #8]
  42129c:	str	w10, [x24, #48]
  4212a0:	stp	xzr, xzr, [x24, #32]
  4212a4:	str	x11, [x24, #56]
  4212a8:	mov	x25, x24
  4212ac:	cbz	x21, 4212fc <_obstack_memory_used@@Base+0x906c>
  4212b0:	ldr	w8, [x22, #128]
  4212b4:	cmp	w8, #0xf
  4212b8:	b.eq	421418 <_obstack_memory_used@@Base+0x9188>  // b.none
  4212bc:	ldr	x0, [x22, #112]
  4212c0:	add	w9, w8, #0x1
  4212c4:	sxtw	x8, w8
  4212c8:	add	x25, x0, x8, lsl #6
  4212cc:	mov	w10, #0x10                  	// #16
  4212d0:	mov	x11, #0xffffffffffffffff    	// #-1
  4212d4:	str	w9, [x22, #128]
  4212d8:	str	xzr, [x25, #8]!
  4212dc:	stp	x21, x24, [x25, #8]
  4212e0:	stp	xzr, xzr, [x25, #32]
  4212e4:	str	w10, [x25, #48]
  4212e8:	str	xzr, [x25, #24]
  4212ec:	str	x11, [x25, #56]
  4212f0:	str	x25, [x21]
  4212f4:	cbz	x24, 4212fc <_obstack_memory_used@@Base+0x906c>
  4212f8:	str	x25, [x24]
  4212fc:	ldr	w8, [x22, #128]
  421300:	cmp	w8, #0xf
  421304:	b.eq	4213f4 <_obstack_memory_used@@Base+0x9164>  // b.none
  421308:	ldr	x0, [x22, #112]
  42130c:	add	w9, w8, #0x1
  421310:	sxtw	x8, w8
  421314:	add	x21, x0, x8, lsl #6
  421318:	mov	w10, #0x10                  	// #16
  42131c:	mov	x11, #0xffffffffffffffff    	// #-1
  421320:	str	w9, [x22, #128]
  421324:	str	xzr, [x21, #8]!
  421328:	stp	x23, x25, [x21, #8]
  42132c:	stp	xzr, xzr, [x21, #32]
  421330:	str	w10, [x21, #48]
  421334:	str	xzr, [x21, #24]
  421338:	str	x11, [x21, #56]
  42133c:	cbz	x23, 421344 <_obstack_memory_used@@Base+0x90b4>
  421340:	str	x21, [x23]
  421344:	cbz	x25, 42134c <_obstack_memory_used@@Base+0x90bc>
  421348:	str	x21, [x25]
  42134c:	cbz	x24, 42145c <_obstack_memory_used@@Base+0x91cc>
  421350:	cbz	x23, 42145c <_obstack_memory_used@@Base+0x91cc>
  421354:	cbz	x25, 42145c <_obstack_memory_used@@Base+0x91cc>
  421358:	cbz	x21, 42145c <_obstack_memory_used@@Base+0x91cc>
  42135c:	ldr	x8, [x19, #40]
  421360:	str	x8, [x24, #40]
  421364:	str	x8, [x23, #40]
  421368:	ldr	w8, [x19, #48]
  42136c:	ldr	w9, [x24, #48]
  421370:	and	w8, w8, #0x80000
  421374:	and	w9, w9, #0xfff7ffff
  421378:	orr	w9, w9, w8
  42137c:	str	w9, [x24, #48]
  421380:	ldr	w9, [x23, #48]
  421384:	and	w9, w9, #0xfff7ffff
  421388:	orr	w8, w9, w8
  42138c:	str	w8, [x23, #48]
  421390:	mov	x0, x21
  421394:	ldp	x20, x19, [sp, #64]
  421398:	ldp	x22, x21, [sp, #48]
  42139c:	ldp	x24, x23, [sp, #32]
  4213a0:	ldr	x25, [sp, #16]
  4213a4:	ldp	x29, x30, [sp], #80
  4213a8:	ret
  4213ac:	mov	w0, #0x3c8                 	// #968
  4213b0:	bl	4023a0 <malloc@plt>
  4213b4:	cbz	x0, 42143c <_obstack_memory_used@@Base+0x91ac>
  4213b8:	ldr	x9, [x22, #112]
  4213bc:	mov	w8, wzr
  4213c0:	str	x9, [x0]
  4213c4:	str	x0, [x22, #112]
  4213c8:	str	wzr, [x22, #128]
  4213cc:	b	421238 <_obstack_memory_used@@Base+0x8fa8>
  4213d0:	mov	w0, #0x3c8                 	// #968
  4213d4:	bl	4023a0 <malloc@plt>
  4213d8:	cbz	x0, 421444 <_obstack_memory_used@@Base+0x91b4>
  4213dc:	ldr	x9, [x22, #112]
  4213e0:	mov	w8, wzr
  4213e4:	str	x9, [x0]
  4213e8:	str	x0, [x22, #112]
  4213ec:	str	wzr, [x22, #128]
  4213f0:	b	421278 <_obstack_memory_used@@Base+0x8fe8>
  4213f4:	mov	w0, #0x3c8                 	// #968
  4213f8:	bl	4023a0 <malloc@plt>
  4213fc:	cbz	x0, 421454 <_obstack_memory_used@@Base+0x91c4>
  421400:	ldr	x9, [x22, #112]
  421404:	mov	w8, wzr
  421408:	str	x9, [x0]
  42140c:	str	x0, [x22, #112]
  421410:	str	wzr, [x22, #128]
  421414:	b	42130c <_obstack_memory_used@@Base+0x907c>
  421418:	mov	w0, #0x3c8                 	// #968
  42141c:	bl	4023a0 <malloc@plt>
  421420:	cbz	x0, 42146c <_obstack_memory_used@@Base+0x91dc>
  421424:	ldr	x9, [x22, #112]
  421428:	mov	w8, wzr
  42142c:	str	x9, [x0]
  421430:	str	x0, [x22, #112]
  421434:	str	wzr, [x22, #128]
  421438:	b	4212c0 <_obstack_memory_used@@Base+0x9030>
  42143c:	mov	x23, xzr
  421440:	b	421268 <_obstack_memory_used@@Base+0x8fd8>
  421444:	mov	x24, xzr
  421448:	mov	x25, x24
  42144c:	cbnz	x21, 4212b0 <_obstack_memory_used@@Base+0x9020>
  421450:	b	4212fc <_obstack_memory_used@@Base+0x906c>
  421454:	mov	x21, xzr
  421458:	cbnz	x24, 421350 <_obstack_memory_used@@Base+0x90c0>
  42145c:	mov	w8, #0xc                   	// #12
  421460:	mov	x21, xzr
  421464:	str	w8, [x20]
  421468:	b	421390 <_obstack_memory_used@@Base+0x9100>
  42146c:	mov	x25, xzr
  421470:	b	4212fc <_obstack_memory_used@@Base+0x906c>
  421474:	stp	x29, x30, [sp, #-80]!
  421478:	stp	x26, x25, [sp, #16]
  42147c:	stp	x24, x23, [sp, #32]
  421480:	stp	x22, x21, [sp, #48]
  421484:	stp	x20, x19, [sp, #64]
  421488:	ldp	x24, x8, [x0, #8]
  42148c:	mov	x20, x2
  421490:	mov	x19, x0
  421494:	mov	x21, x1
  421498:	cmp	x8, x24
  42149c:	mov	x29, sp
  4214a0:	b.cs	42156c <_obstack_memory_used@@Base+0x92dc>  // b.hs, b.nlast
  4214a4:	ldr	x9, [x19]
  4214a8:	add	x8, x9, x8, lsl #4
  4214ac:	stp	x21, x20, [x8]
  4214b0:	ldr	x8, [x19]
  4214b4:	ldr	x9, [x19, #16]
  4214b8:	add	x9, x8, x9, lsl #4
  4214bc:	ldr	w10, [x9, #8]
  4214c0:	and	w8, w20, #0xff
  4214c4:	cmp	w8, #0x5
  4214c8:	and	w10, w10, #0xfffc00ff
  4214cc:	str	w10, [x9, #8]
  4214d0:	b.ne	4214e8 <_obstack_memory_used@@Base+0x9258>  // b.any
  4214d4:	ldr	w9, [x19, #180]
  4214d8:	cmp	w9, #0x1
  4214dc:	b.le	4214e8 <_obstack_memory_used@@Base+0x9258>
  4214e0:	mov	w8, #0x100000              	// #1048576
  4214e4:	b	4214f4 <_obstack_memory_used@@Base+0x9264>
  4214e8:	cmp	w8, #0x6
  4214ec:	cset	w8, eq  // eq = none
  4214f0:	lsl	w8, w8, #20
  4214f4:	ldr	x9, [x19]
  4214f8:	ldr	x10, [x19, #16]
  4214fc:	add	x9, x9, x10, lsl #4
  421500:	ldr	w10, [x9, #8]
  421504:	and	w10, w10, #0xffefffff
  421508:	orr	w8, w10, w8
  42150c:	str	w8, [x9, #8]
  421510:	ldp	x9, x8, [x19, #16]
  421514:	mov	x10, #0xffffffffffffffff    	// #-1
  421518:	str	x10, [x8, x9, lsl #3]
  42151c:	ldr	x8, [x19, #40]
  421520:	ldr	x9, [x19, #16]
  421524:	mov	w10, #0x18                  	// #24
  421528:	madd	x8, x9, x10, x8
  42152c:	stp	xzr, xzr, [x8]
  421530:	str	xzr, [x8, #16]
  421534:	ldr	x8, [x19, #48]
  421538:	ldr	x9, [x19, #16]
  42153c:	madd	x8, x9, x10, x8
  421540:	stp	xzr, xzr, [x8]
  421544:	str	xzr, [x8, #16]
  421548:	ldr	x0, [x19, #16]
  42154c:	add	x8, x0, #0x1
  421550:	str	x8, [x19, #16]
  421554:	ldp	x20, x19, [sp, #64]
  421558:	ldp	x22, x21, [sp, #48]
  42155c:	ldp	x24, x23, [sp, #32]
  421560:	ldp	x26, x25, [sp, #16]
  421564:	ldp	x29, x30, [sp], #80
  421568:	ret
  42156c:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  421570:	lsl	x26, x24, #1
  421574:	movk	x8, #0xaaa, lsl #48
  421578:	cmp	x26, x8
  42157c:	b.hi	42160c <_obstack_memory_used@@Base+0x937c>  // b.pmore
  421580:	ldr	x0, [x19]
  421584:	lsl	x1, x24, #5
  421588:	bl	4024c0 <realloc@plt>
  42158c:	cbz	x0, 42160c <_obstack_memory_used@@Base+0x937c>
  421590:	ldr	x8, [x19, #24]
  421594:	lsl	x23, x24, #4
  421598:	str	x0, [x19]
  42159c:	mov	x1, x23
  4215a0:	mov	x0, x8
  4215a4:	bl	4024c0 <realloc@plt>
  4215a8:	ldr	x8, [x19, #32]
  4215ac:	mov	x22, x0
  4215b0:	mov	x1, x23
  4215b4:	mov	x0, x8
  4215b8:	bl	4024c0 <realloc@plt>
  4215bc:	mov	x23, x0
  4215c0:	ldr	x0, [x19, #40]
  4215c4:	add	x8, x24, x24, lsl #1
  4215c8:	lsl	x25, x8, #4
  4215cc:	mov	x1, x25
  4215d0:	bl	4024c0 <realloc@plt>
  4215d4:	ldr	x8, [x19, #48]
  4215d8:	mov	x24, x0
  4215dc:	mov	x1, x25
  4215e0:	mov	x0, x8
  4215e4:	bl	4024c0 <realloc@plt>
  4215e8:	cbz	x22, 421614 <_obstack_memory_used@@Base+0x9384>
  4215ec:	cbz	x23, 421614 <_obstack_memory_used@@Base+0x9384>
  4215f0:	cbz	x24, 421614 <_obstack_memory_used@@Base+0x9384>
  4215f4:	cbz	x0, 421614 <_obstack_memory_used@@Base+0x9384>
  4215f8:	ldr	x8, [x19, #16]
  4215fc:	stp	x22, x23, [x19, #24]
  421600:	stp	x24, x0, [x19, #40]
  421604:	str	x26, [x19, #8]
  421608:	b	4214a4 <_obstack_memory_used@@Base+0x9214>
  42160c:	mov	x0, #0xffffffffffffffff    	// #-1
  421610:	b	421554 <_obstack_memory_used@@Base+0x92c4>
  421614:	mov	x19, x0
  421618:	mov	x0, x22
  42161c:	bl	402620 <free@plt>
  421620:	mov	x0, x23
  421624:	bl	402620 <free@plt>
  421628:	mov	x0, x24
  42162c:	bl	402620 <free@plt>
  421630:	mov	x0, x19
  421634:	bl	402620 <free@plt>
  421638:	mov	x0, #0xffffffffffffffff    	// #-1
  42163c:	b	421554 <_obstack_memory_used@@Base+0x92c4>
  421640:	sub	sp, sp, #0x90
  421644:	stp	x29, x30, [sp, #64]
  421648:	stp	x26, x25, [sp, #80]
  42164c:	stp	x24, x23, [sp, #96]
  421650:	stp	x22, x21, [sp, #112]
  421654:	stp	x20, x19, [sp, #128]
  421658:	ldr	x23, [x1, #40]
  42165c:	mov	w8, #0x18                  	// #24
  421660:	mov	x19, x0
  421664:	add	x29, sp, #0x40
  421668:	madd	x25, x2, x8, x23
  42166c:	ldr	x8, [x25, #8]!
  421670:	mov	w21, w3
  421674:	mov	x20, x2
  421678:	mov	x22, x1
  42167c:	add	x24, x8, #0x1
  421680:	lsl	x0, x24, #3
  421684:	stp	x24, xzr, [sp, #32]
  421688:	bl	4023a0 <malloc@plt>
  42168c:	str	x0, [sp, #48]
  421690:	cbz	x0, 4218ac <_obstack_memory_used@@Base+0x961c>
  421694:	ldr	x8, [x22, #48]
  421698:	mov	w9, #0x18                  	// #24
  42169c:	madd	x8, x20, x9, x8
  4216a0:	mov	x9, #0xffffffffffffffff    	// #-1
  4216a4:	str	x9, [x8, #8]
  4216a8:	ldr	x9, [x22]
  4216ac:	add	x8, x9, x20, lsl #4
  4216b0:	ldr	w8, [x8, #8]
  4216b4:	ubfx	w4, w8, #8, #10
  4216b8:	cbz	w4, 421704 <_obstack_memory_used@@Base+0x9474>
  4216bc:	ldr	x10, [x25]
  4216c0:	cbz	x10, 421704 <_obstack_memory_used@@Base+0x9474>
  4216c4:	mov	w10, #0x18                  	// #24
  4216c8:	madd	x10, x20, x10, x23
  4216cc:	ldr	x10, [x10, #16]
  4216d0:	ldr	x10, [x10]
  4216d4:	add	x9, x9, x10, lsl #4
  4216d8:	ldrb	w9, [x9, #10]
  4216dc:	tbnz	w9, #2, 421704 <_obstack_memory_used@@Base+0x9474>
  4216e0:	mov	x0, x22
  4216e4:	mov	x1, x20
  4216e8:	mov	x2, x20
  4216ec:	mov	x3, x20
  4216f0:	bl	42193c <_obstack_memory_used@@Base+0x96ac>
  4216f4:	cbnz	w0, 421868 <_obstack_memory_used@@Base+0x95d8>
  4216f8:	ldr	x8, [x22]
  4216fc:	add	x8, x8, x20, lsl #4
  421700:	ldr	w8, [x8, #8]
  421704:	tbz	w8, #3, 4217cc <_obstack_memory_used@@Base+0x953c>
  421708:	ldr	x8, [x22, #40]
  42170c:	mov	w9, #0x18                  	// #24
  421710:	madd	x9, x20, x9, x8
  421714:	ldr	x9, [x9, #8]
  421718:	cmp	x9, #0x1
  42171c:	b.lt	4217cc <_obstack_memory_used@@Base+0x953c>  // b.tstop
  421720:	mov	w25, wzr
  421724:	mov	x24, xzr
  421728:	mov	w26, #0x18                  	// #24
  42172c:	b	42174c <_obstack_memory_used@@Base+0x94bc>
  421730:	mov	w25, #0x1                   	// #1
  421734:	ldr	x8, [x22, #40]
  421738:	add	x24, x24, #0x1
  42173c:	madd	x9, x20, x26, x8
  421740:	ldr	x9, [x9, #8]
  421744:	cmp	x24, x9
  421748:	b.ge	4217f0 <_obstack_memory_used@@Base+0x9560>  // b.tcont
  42174c:	madd	x8, x20, x26, x8
  421750:	ldr	x8, [x8, #16]
  421754:	ldr	x23, [x8, x24, lsl #3]
  421758:	ldr	x8, [x22, #48]
  42175c:	madd	x9, x23, x26, x8
  421760:	ldr	x9, [x9, #8]
  421764:	cmn	x9, #0x1
  421768:	b.eq	421730 <_obstack_memory_used@@Base+0x94a0>  // b.none
  42176c:	cbnz	x9, 42178c <_obstack_memory_used@@Base+0x94fc>
  421770:	mov	x0, sp
  421774:	mov	x1, x22
  421778:	mov	x2, x23
  42177c:	mov	w3, wzr
  421780:	bl	421640 <_obstack_memory_used@@Base+0x93b0>
  421784:	cbz	w0, 4217a0 <_obstack_memory_used@@Base+0x9510>
  421788:	b	421868 <_obstack_memory_used@@Base+0x95d8>
  42178c:	madd	x8, x23, x26, x8
  421790:	ldr	x9, [x8, #16]
  421794:	ldr	q0, [x8]
  421798:	str	x9, [sp, #16]
  42179c:	str	q0, [sp]
  4217a0:	add	x0, sp, #0x20
  4217a4:	mov	x1, sp
  4217a8:	bl	421d10 <_obstack_memory_used@@Base+0x9a80>
  4217ac:	cbnz	w0, 421868 <_obstack_memory_used@@Base+0x95d8>
  4217b0:	ldr	x8, [x22, #48]
  4217b4:	madd	x8, x23, x26, x8
  4217b8:	ldr	x8, [x8, #8]
  4217bc:	cbnz	x8, 421734 <_obstack_memory_used@@Base+0x94a4>
  4217c0:	ldr	x0, [sp, #16]
  4217c4:	bl	402620 <free@plt>
  4217c8:	b	421730 <_obstack_memory_used@@Base+0x94a0>
  4217cc:	mov	w23, #0x1                   	// #1
  4217d0:	cbz	x24, 421800 <_obstack_memory_used@@Base+0x9570>
  4217d4:	ldr	x25, [sp, #40]
  4217d8:	cbnz	x25, 421884 <_obstack_memory_used@@Base+0x95f4>
  4217dc:	ldr	x8, [sp, #48]
  4217e0:	mov	w9, #0x1                   	// #1
  4217e4:	str	x20, [x8]
  4217e8:	str	x9, [sp, #40]
  4217ec:	b	421820 <_obstack_memory_used@@Base+0x9590>
  4217f0:	ldr	x24, [sp, #32]
  4217f4:	tst	w25, #0x1
  4217f8:	cset	w23, eq  // eq = none
  4217fc:	cbnz	x24, 4217d4 <_obstack_memory_used@@Base+0x9544>
  421800:	mov	w8, #0x1                   	// #1
  421804:	dup	v0.2d, x8
  421808:	mov	w0, #0x8                   	// #8
  42180c:	str	q0, [sp, #32]
  421810:	bl	4023a0 <malloc@plt>
  421814:	str	x0, [sp, #48]
  421818:	cbz	x0, 4218b4 <_obstack_memory_used@@Base+0x9624>
  42181c:	str	x20, [x0]
  421820:	ldr	x8, [x22, #48]
  421824:	orr	w9, w23, w21
  421828:	tbz	w9, #0, 421848 <_obstack_memory_used@@Base+0x95b8>
  42182c:	ldr	x9, [sp, #48]
  421830:	ldr	q0, [sp, #32]
  421834:	mov	w10, #0x18                  	// #24
  421838:	madd	x8, x20, x10, x8
  42183c:	str	x9, [x8, #16]
  421840:	str	q0, [x8]
  421844:	b	421854 <_obstack_memory_used@@Base+0x95c4>
  421848:	mov	w9, #0x18                  	// #24
  42184c:	madd	x8, x20, x9, x8
  421850:	str	xzr, [x8, #8]
  421854:	ldr	x8, [sp, #48]
  421858:	ldr	q0, [sp, #32]
  42185c:	mov	w0, wzr
  421860:	str	x8, [x19, #16]
  421864:	str	q0, [x19]
  421868:	ldp	x20, x19, [sp, #128]
  42186c:	ldp	x22, x21, [sp, #112]
  421870:	ldp	x24, x23, [sp, #96]
  421874:	ldp	x26, x25, [sp, #80]
  421878:	ldp	x29, x30, [sp, #64]
  42187c:	add	sp, sp, #0x90
  421880:	ret
  421884:	cmp	x24, x25
  421888:	b.ne	4218c0 <_obstack_memory_used@@Base+0x9630>  // b.any
  42188c:	ldr	x0, [sp, #48]
  421890:	lsl	x8, x24, #1
  421894:	lsl	x1, x24, #4
  421898:	str	x8, [sp, #32]
  42189c:	bl	4024c0 <realloc@plt>
  4218a0:	cbz	x0, 4218ac <_obstack_memory_used@@Base+0x961c>
  4218a4:	str	x0, [sp, #48]
  4218a8:	b	4218c4 <_obstack_memory_used@@Base+0x9634>
  4218ac:	mov	w0, #0xc                   	// #12
  4218b0:	b	421868 <_obstack_memory_used@@Base+0x95d8>
  4218b4:	stp	xzr, xzr, [sp, #32]
  4218b8:	mov	w0, #0xc                   	// #12
  4218bc:	b	421868 <_obstack_memory_used@@Base+0x95d8>
  4218c0:	ldr	x0, [sp, #48]
  4218c4:	ldr	x8, [x0]
  4218c8:	cmp	x8, x20
  4218cc:	b.le	4218f8 <_obstack_memory_used@@Base+0x9668>
  4218d0:	cmp	x25, #0x1
  4218d4:	b.lt	421928 <_obstack_memory_used@@Base+0x9698>  // b.tstop
  4218d8:	mov	x9, x25
  4218dc:	add	x10, x0, x9, lsl #3
  4218e0:	ldur	x11, [x10, #-8]
  4218e4:	subs	x8, x9, #0x1
  4218e8:	mov	x9, x8
  4218ec:	str	x11, [x10]
  4218f0:	b.gt	4218dc <_obstack_memory_used@@Base+0x964c>
  4218f4:	b	42192c <_obstack_memory_used@@Base+0x969c>
  4218f8:	add	x8, x0, x25, lsl #3
  4218fc:	ldur	x9, [x8, #-8]
  421900:	mov	x8, x25
  421904:	cmp	x9, x20
  421908:	b.le	42192c <_obstack_memory_used@@Base+0x969c>
  42190c:	add	x10, x0, x8, lsl #3
  421910:	str	x9, [x10]
  421914:	ldur	x9, [x10, #-16]
  421918:	sub	x8, x8, #0x1
  42191c:	cmp	x9, x20
  421920:	b.gt	42190c <_obstack_memory_used@@Base+0x967c>
  421924:	b	42192c <_obstack_memory_used@@Base+0x969c>
  421928:	mov	x8, x25
  42192c:	str	x20, [x0, x8, lsl #3]
  421930:	add	x8, x25, #0x1
  421934:	str	x8, [sp, #40]
  421938:	b	421820 <_obstack_memory_used@@Base+0x9590>
  42193c:	stp	x29, x30, [sp, #-96]!
  421940:	stp	x26, x25, [sp, #32]
  421944:	stp	x24, x23, [sp, #48]
  421948:	stp	x22, x21, [sp, #64]
  42194c:	stp	x20, x19, [sp, #80]
  421950:	mov	w19, w4
  421954:	mov	x20, x3
  421958:	mov	x22, x2
  42195c:	mov	x23, x1
  421960:	mov	x21, x0
  421964:	mov	w25, #0x18                  	// #24
  421968:	str	x27, [sp, #16]
  42196c:	mov	x29, sp
  421970:	ubfiz	w26, w19, #8, #10
  421974:	mov	x27, x23
  421978:	b	421a2c <_obstack_memory_used@@Base+0x979c>
  42197c:	ldr	x9, [x21, #24]
  421980:	ldr	x10, [x21, #40]
  421984:	mov	x0, x21
  421988:	ldr	x24, [x9, x27, lsl #3]
  42198c:	madd	x9, x22, x25, x10
  421990:	str	xzr, [x9, #8]
  421994:	add	x8, x8, x24, lsl #4
  421998:	ldp	x1, x2, [x8]
  42199c:	bl	421474 <_obstack_memory_used@@Base+0x91e4>
  4219a0:	cmn	x0, #0x1
  4219a4:	b.eq	421d08 <_obstack_memory_used@@Base+0x9a78>  // b.none
  4219a8:	ldr	x8, [x21]
  4219ac:	lsl	x9, x0, #4
  4219b0:	mov	x23, x0
  4219b4:	mov	x1, x23
  4219b8:	add	x8, x8, x9
  4219bc:	ldr	w10, [x8, #8]
  4219c0:	and	w10, w10, #0xfffc00ff
  4219c4:	orr	w10, w10, w26
  4219c8:	str	w10, [x8, #8]
  4219cc:	ldr	x8, [x21]
  4219d0:	add	x10, x8, x24, lsl #4
  4219d4:	ldr	w10, [x10, #8]
  4219d8:	add	x8, x8, x9
  4219dc:	ldr	w11, [x8, #8]
  4219e0:	and	w10, w10, #0x3ff00
  4219e4:	orr	w10, w10, w11
  4219e8:	str	w10, [x8, #8]
  4219ec:	ldr	x8, [x21]
  4219f0:	add	x8, x8, x9
  4219f4:	ldr	w9, [x8, #8]
  4219f8:	orr	w9, w9, #0x40000
  4219fc:	str	w9, [x8, #8]
  421a00:	ldr	x8, [x21, #32]
  421a04:	str	x24, [x8, x0, lsl #3]
  421a08:	ldr	x8, [x21, #24]
  421a0c:	ldr	x9, [x8, x27, lsl #3]
  421a10:	str	x9, [x8, x22, lsl #3]
  421a14:	ldr	x8, [x21, #40]
  421a18:	madd	x0, x22, x25, x8
  421a1c:	bl	421e9c <_obstack_memory_used@@Base+0x9c0c>
  421a20:	mov	x27, x24
  421a24:	mov	x22, x23
  421a28:	tbz	w0, #0, 421d08 <_obstack_memory_used@@Base+0x9a78>
  421a2c:	ldr	x8, [x21]
  421a30:	add	x10, x8, x27, lsl #4
  421a34:	ldrb	w9, [x10, #8]!
  421a38:	cmp	w9, #0x4
  421a3c:	b.eq	42197c <_obstack_memory_used@@Base+0x96ec>  // b.none
  421a40:	ldr	x9, [x21, #40]
  421a44:	madd	x11, x27, x25, x9
  421a48:	ldr	x11, [x11, #8]
  421a4c:	cbz	x11, 421cc0 <_obstack_memory_used@@Base+0x9a30>
  421a50:	madd	x12, x27, x25, x9
  421a54:	ldr	x12, [x12, #16]
  421a58:	cmp	x11, #0x1
  421a5c:	ldr	x23, [x12]
  421a60:	madd	x12, x22, x25, x9
  421a64:	str	xzr, [x12, #8]
  421a68:	b.eq	421c18 <_obstack_memory_used@@Base+0x9988>  // b.none
  421a6c:	ldr	x12, [x21, #16]
  421a70:	sub	x1, x12, #0x1
  421a74:	cmp	x1, #0x1
  421a78:	b.lt	421ac0 <_obstack_memory_used@@Base+0x9830>  // b.tstop
  421a7c:	add	x10, x8, x1, lsl #4
  421a80:	ldr	w11, [x10, #8]
  421a84:	tbz	w11, #18, 421ac0 <_obstack_memory_used@@Base+0x9830>
  421a88:	ldr	x10, [x21, #32]
  421a8c:	add	x12, x8, x12, lsl #4
  421a90:	sub	x12, x12, #0x18
  421a94:	ldr	x13, [x10, x1, lsl #3]
  421a98:	cmp	x13, x23
  421a9c:	b.ne	421aac <_obstack_memory_used@@Base+0x981c>  // b.any
  421aa0:	ubfx	w11, w11, #8, #10
  421aa4:	cmp	w11, w19
  421aa8:	b.eq	421c08 <_obstack_memory_used@@Base+0x9978>  // b.none
  421aac:	ldr	w11, [x12], #-16
  421ab0:	sub	x1, x1, #0x1
  421ab4:	cmp	x1, #0x1
  421ab8:	b.lt	421ac0 <_obstack_memory_used@@Base+0x9830>  // b.tstop
  421abc:	tbnz	w11, #18, 421a94 <_obstack_memory_used@@Base+0x9804>
  421ac0:	add	x8, x8, x23, lsl #4
  421ac4:	ldp	x1, x2, [x8]
  421ac8:	mov	x0, x21
  421acc:	bl	421474 <_obstack_memory_used@@Base+0x91e4>
  421ad0:	cmn	x0, #0x1
  421ad4:	b.eq	421d08 <_obstack_memory_used@@Base+0x9a78>  // b.none
  421ad8:	ldr	x8, [x21]
  421adc:	lsl	x9, x0, #4
  421ae0:	mov	x24, x0
  421ae4:	mov	x1, x24
  421ae8:	add	x8, x8, x9
  421aec:	ldr	w10, [x8, #8]
  421af0:	and	w10, w10, #0xfffc00ff
  421af4:	orr	w10, w10, w26
  421af8:	str	w10, [x8, #8]
  421afc:	ldr	x8, [x21]
  421b00:	add	x10, x8, x23, lsl #4
  421b04:	ldr	w10, [x10, #8]
  421b08:	add	x8, x8, x9
  421b0c:	ldr	w11, [x8, #8]
  421b10:	and	w10, w10, #0x3ff00
  421b14:	orr	w10, w10, w11
  421b18:	str	w10, [x8, #8]
  421b1c:	ldr	x8, [x21]
  421b20:	add	x8, x8, x9
  421b24:	ldr	w9, [x8, #8]
  421b28:	orr	w9, w9, #0x40000
  421b2c:	str	w9, [x8, #8]
  421b30:	ldr	x8, [x21, #32]
  421b34:	str	x23, [x8, x0, lsl #3]
  421b38:	ldr	x8, [x21, #40]
  421b3c:	madd	x0, x22, x25, x8
  421b40:	bl	421e9c <_obstack_memory_used@@Base+0x9c0c>
  421b44:	tbz	w0, #0, 421d08 <_obstack_memory_used@@Base+0x9a78>
  421b48:	mov	x0, x21
  421b4c:	mov	x1, x23
  421b50:	mov	x2, x24
  421b54:	mov	x3, x20
  421b58:	mov	w4, w19
  421b5c:	bl	42193c <_obstack_memory_used@@Base+0x96ac>
  421b60:	cbnz	w0, 421cd0 <_obstack_memory_used@@Base+0x9a40>
  421b64:	ldr	x8, [x21, #40]
  421b68:	ldr	x9, [x21]
  421b6c:	mov	x0, x21
  421b70:	madd	x8, x27, x25, x8
  421b74:	ldr	x8, [x8, #16]
  421b78:	ldr	x27, [x8, #8]
  421b7c:	add	x8, x9, x27, lsl #4
  421b80:	ldp	x1, x2, [x8]
  421b84:	bl	421474 <_obstack_memory_used@@Base+0x91e4>
  421b88:	cmn	x0, #0x1
  421b8c:	b.eq	421d08 <_obstack_memory_used@@Base+0x9a78>  // b.none
  421b90:	ldr	x8, [x21]
  421b94:	lsl	x9, x0, #4
  421b98:	mov	x23, x0
  421b9c:	mov	x1, x23
  421ba0:	add	x8, x8, x9
  421ba4:	ldr	w10, [x8, #8]
  421ba8:	and	w10, w10, #0xfffc00ff
  421bac:	orr	w10, w10, w26
  421bb0:	str	w10, [x8, #8]
  421bb4:	ldr	x8, [x21]
  421bb8:	add	x10, x8, x27, lsl #4
  421bbc:	ldr	w10, [x10, #8]
  421bc0:	add	x8, x8, x9
  421bc4:	ldr	w11, [x8, #8]
  421bc8:	and	w10, w10, #0x3ff00
  421bcc:	orr	w10, w10, w11
  421bd0:	str	w10, [x8, #8]
  421bd4:	ldr	x8, [x21]
  421bd8:	add	x8, x8, x9
  421bdc:	ldr	w9, [x8, #8]
  421be0:	orr	w9, w9, #0x40000
  421be4:	str	w9, [x8, #8]
  421be8:	ldr	x8, [x21, #32]
  421bec:	str	x27, [x8, x0, lsl #3]
  421bf0:	ldr	x8, [x21, #40]
  421bf4:	madd	x0, x22, x25, x8
  421bf8:	bl	421e9c <_obstack_memory_used@@Base+0x9c0c>
  421bfc:	mov	x22, x23
  421c00:	tbnz	w0, #0, 421a2c <_obstack_memory_used@@Base+0x979c>
  421c04:	b	421d08 <_obstack_memory_used@@Base+0x9a78>
  421c08:	madd	x0, x22, x25, x9
  421c0c:	bl	421e9c <_obstack_memory_used@@Base+0x9c0c>
  421c10:	tbnz	w0, #0, 421b64 <_obstack_memory_used@@Base+0x98d4>
  421c14:	b	421d08 <_obstack_memory_used@@Base+0x9a78>
  421c18:	cmp	x27, x20
  421c1c:	b.ne	421c28 <_obstack_memory_used@@Base+0x9998>  // b.any
  421c20:	cmp	x22, x27
  421c24:	b.ne	421cec <_obstack_memory_used@@Base+0x9a5c>  // b.any
  421c28:	add	x8, x8, x23, lsl #4
  421c2c:	ldp	x1, x2, [x8]
  421c30:	ldr	w26, [x10]
  421c34:	mov	x0, x21
  421c38:	bl	421474 <_obstack_memory_used@@Base+0x91e4>
  421c3c:	cmn	x0, #0x1
  421c40:	b.eq	421d08 <_obstack_memory_used@@Base+0x9a78>  // b.none
  421c44:	ldr	x8, [x21]
  421c48:	lsl	x9, x0, #4
  421c4c:	ubfx	w11, w26, #8, #10
  421c50:	orr	w19, w11, w19
  421c54:	add	x8, x8, x9
  421c58:	ldr	w10, [x8, #8]
  421c5c:	mov	x24, x0
  421c60:	mov	x1, x24
  421c64:	bfi	w10, w19, #8, #10
  421c68:	str	w10, [x8, #8]
  421c6c:	ldr	x8, [x21]
  421c70:	add	x10, x8, x23, lsl #4
  421c74:	ldr	w10, [x10, #8]
  421c78:	add	x8, x8, x9
  421c7c:	ldr	w11, [x8, #8]
  421c80:	and	w10, w10, #0x3ff00
  421c84:	orr	w10, w10, w11
  421c88:	str	w10, [x8, #8]
  421c8c:	ldr	x8, [x21]
  421c90:	add	x8, x8, x9
  421c94:	ldr	w9, [x8, #8]
  421c98:	orr	w9, w9, #0x40000
  421c9c:	str	w9, [x8, #8]
  421ca0:	ldr	x8, [x21, #32]
  421ca4:	str	x23, [x8, x0, lsl #3]
  421ca8:	ldr	x8, [x21, #40]
  421cac:	madd	x0, x22, x25, x8
  421cb0:	bl	421e9c <_obstack_memory_used@@Base+0x9c0c>
  421cb4:	mov	x22, x24
  421cb8:	tbnz	w0, #0, 421970 <_obstack_memory_used@@Base+0x96e0>
  421cbc:	b	421d08 <_obstack_memory_used@@Base+0x9a78>
  421cc0:	ldr	x8, [x21, #24]
  421cc4:	mov	w0, wzr
  421cc8:	ldr	x9, [x8, x27, lsl #3]
  421ccc:	str	x9, [x8, x22, lsl #3]
  421cd0:	ldp	x20, x19, [sp, #80]
  421cd4:	ldp	x22, x21, [sp, #64]
  421cd8:	ldp	x24, x23, [sp, #48]
  421cdc:	ldp	x26, x25, [sp, #32]
  421ce0:	ldr	x27, [sp, #16]
  421ce4:	ldp	x29, x30, [sp], #96
  421ce8:	ret
  421cec:	mov	w8, #0x18                  	// #24
  421cf0:	madd	x0, x22, x8, x9
  421cf4:	mov	x1, x23
  421cf8:	bl	421e9c <_obstack_memory_used@@Base+0x9c0c>
  421cfc:	tbz	w0, #0, 421d08 <_obstack_memory_used@@Base+0x9a78>
  421d00:	mov	w0, wzr
  421d04:	b	421cd0 <_obstack_memory_used@@Base+0x9a40>
  421d08:	mov	w0, #0xc                   	// #12
  421d0c:	b	421cd0 <_obstack_memory_used@@Base+0x9a40>
  421d10:	stp	x29, x30, [sp, #-48]!
  421d14:	str	x21, [sp, #16]
  421d18:	stp	x20, x19, [sp, #32]
  421d1c:	mov	x29, sp
  421d20:	cbz	x1, 421e08 <_obstack_memory_used@@Base+0x9b78>
  421d24:	ldr	x10, [x1, #8]
  421d28:	mov	x20, x1
  421d2c:	cbz	x10, 421e08 <_obstack_memory_used@@Base+0x9b78>
  421d30:	ldp	x8, x11, [x0]
  421d34:	mov	x19, x0
  421d38:	add	x9, x11, x10, lsl #1
  421d3c:	cmp	x8, x9
  421d40:	b.ge	421d6c <_obstack_memory_used@@Base+0x9adc>  // b.tcont
  421d44:	ldr	x0, [x19, #16]
  421d48:	add	x21, x8, x10
  421d4c:	lsl	x1, x21, #4
  421d50:	bl	4024c0 <realloc@plt>
  421d54:	cbz	x0, 421e94 <_obstack_memory_used@@Base+0x9c04>
  421d58:	lsl	x8, x21, #1
  421d5c:	str	x0, [x19, #16]
  421d60:	str	x8, [x19]
  421d64:	ldr	x11, [x19, #8]
  421d68:	ldr	x10, [x20, #8]
  421d6c:	cbz	x11, 421e80 <_obstack_memory_used@@Base+0x9bf0>
  421d70:	sub	x8, x10, #0x1
  421d74:	sub	x9, x11, #0x1
  421d78:	orr	x12, x8, x9
  421d7c:	add	x21, x11, x10, lsl #1
  421d80:	tbnz	x12, #63, 421dcc <_obstack_memory_used@@Base+0x9b3c>
  421d84:	ldr	x10, [x19, #16]
  421d88:	ldr	x11, [x20, #16]
  421d8c:	b	421da4 <_obstack_memory_used@@Base+0x9b14>
  421d90:	sub	x8, x8, #0x1
  421d94:	sub	x21, x21, #0x1
  421d98:	str	x12, [x10, x21, lsl #3]
  421d9c:	orr	x12, x8, x9
  421da0:	tbnz	x12, #63, 421dcc <_obstack_memory_used@@Base+0x9b3c>
  421da4:	ldr	x13, [x10, x9, lsl #3]
  421da8:	ldr	x12, [x11, x8, lsl #3]
  421dac:	cmp	x13, x12
  421db0:	b.ne	421dbc <_obstack_memory_used@@Base+0x9b2c>  // b.any
  421db4:	sub	x8, x8, #0x1
  421db8:	b	421dc0 <_obstack_memory_used@@Base+0x9b30>
  421dbc:	b.lt	421d90 <_obstack_memory_used@@Base+0x9b00>  // b.tstop
  421dc0:	sub	x9, x9, #0x1
  421dc4:	orr	x12, x8, x9
  421dc8:	tbz	x12, #63, 421da4 <_obstack_memory_used@@Base+0x9b14>
  421dcc:	tbnz	x8, #63, 421dec <_obstack_memory_used@@Base+0x9b5c>
  421dd0:	ldr	x9, [x19, #16]
  421dd4:	ldr	x1, [x20, #16]
  421dd8:	add	x8, x8, #0x1
  421ddc:	sub	x21, x21, x8
  421de0:	add	x0, x9, x21, lsl #3
  421de4:	lsl	x2, x8, #3
  421de8:	bl	402210 <memcpy@plt>
  421dec:	ldr	x10, [x19, #8]
  421df0:	ldr	x8, [x20, #8]
  421df4:	sub	x9, x10, #0x1
  421df8:	add	x8, x9, x8, lsl #1
  421dfc:	sub	x11, x8, x21
  421e00:	adds	x11, x11, #0x1
  421e04:	b.cc	421e1c <_obstack_memory_used@@Base+0x9b8c>  // b.lo, b.ul, b.last
  421e08:	mov	w0, wzr
  421e0c:	ldp	x20, x19, [sp, #32]
  421e10:	ldr	x21, [sp, #16]
  421e14:	ldp	x29, x30, [sp], #48
  421e18:	ret
  421e1c:	ldr	x0, [x19, #16]
  421e20:	add	x10, x11, x10
  421e24:	str	x10, [x19, #8]
  421e28:	add	x10, x0, x9, lsl #3
  421e2c:	lsl	x2, x11, #3
  421e30:	neg	x11, x11
  421e34:	ldr	x12, [x0, x8, lsl #3]
  421e38:	ldr	x13, [x0, x9, lsl #3]
  421e3c:	cmp	x12, x13
  421e40:	b.le	421e5c <_obstack_memory_used@@Base+0x9bcc>
  421e44:	sub	x8, x8, #0x1
  421e48:	str	x12, [x10, x2]
  421e4c:	adds	x11, x11, #0x1
  421e50:	sub	x2, x2, #0x8
  421e54:	b.cc	421e34 <_obstack_memory_used@@Base+0x9ba4>  // b.lo, b.ul, b.last
  421e58:	b	421e08 <_obstack_memory_used@@Base+0x9b78>
  421e5c:	str	x13, [x10, x2]
  421e60:	cmp	x9, #0x0
  421e64:	sub	x9, x9, #0x1
  421e68:	neg	x11, x11
  421e6c:	sub	x10, x10, #0x8
  421e70:	b.gt	421e2c <_obstack_memory_used@@Base+0x9b9c>
  421e74:	add	x1, x0, x21, lsl #3
  421e78:	bl	402210 <memcpy@plt>
  421e7c:	b	421e08 <_obstack_memory_used@@Base+0x9b78>
  421e80:	str	x10, [x19, #8]
  421e84:	ldp	x8, x1, [x20, #8]
  421e88:	ldr	x0, [x19, #16]
  421e8c:	lsl	x2, x8, #3
  421e90:	b	421e78 <_obstack_memory_used@@Base+0x9be8>
  421e94:	mov	w0, #0xc                   	// #12
  421e98:	b	421e0c <_obstack_memory_used@@Base+0x9b7c>
  421e9c:	stp	x29, x30, [sp, #-32]!
  421ea0:	stp	x20, x19, [sp, #16]
  421ea4:	ldr	x9, [x0]
  421ea8:	mov	x19, x0
  421eac:	mov	x20, x1
  421eb0:	mov	x29, sp
  421eb4:	cbz	x9, 421ed8 <_obstack_memory_used@@Base+0x9c48>
  421eb8:	ldr	x8, [x19, #8]
  421ebc:	cbnz	x8, 421f08 <_obstack_memory_used@@Base+0x9c78>
  421ec0:	ldr	x8, [x19, #16]
  421ec4:	str	x20, [x8]
  421ec8:	ldr	x8, [x19, #8]
  421ecc:	add	x8, x8, #0x1
  421ed0:	str	x8, [x19, #8]
  421ed4:	b	421ef8 <_obstack_memory_used@@Base+0x9c68>
  421ed8:	mov	w8, #0x1                   	// #1
  421edc:	dup	v0.2d, x8
  421ee0:	mov	w0, #0x8                   	// #8
  421ee4:	str	q0, [x19]
  421ee8:	bl	4023a0 <malloc@plt>
  421eec:	str	x0, [x19, #16]
  421ef0:	cbz	x0, 421f34 <_obstack_memory_used@@Base+0x9ca4>
  421ef4:	str	x20, [x0]
  421ef8:	mov	w0, #0x1                   	// #1
  421efc:	ldp	x20, x19, [sp, #16]
  421f00:	ldp	x29, x30, [sp], #32
  421f04:	ret
  421f08:	cmp	x9, x8
  421f0c:	b.ne	421f3c <_obstack_memory_used@@Base+0x9cac>  // b.any
  421f10:	ldr	x0, [x19, #16]
  421f14:	lsl	x8, x9, #1
  421f18:	lsl	x1, x9, #4
  421f1c:	str	x8, [x19]
  421f20:	bl	4024c0 <realloc@plt>
  421f24:	cbz	x0, 421efc <_obstack_memory_used@@Base+0x9c6c>
  421f28:	ldr	x8, [x19, #8]
  421f2c:	str	x0, [x19, #16]
  421f30:	b	421f40 <_obstack_memory_used@@Base+0x9cb0>
  421f34:	stp	xzr, xzr, [x19]
  421f38:	b	421efc <_obstack_memory_used@@Base+0x9c6c>
  421f3c:	ldr	x0, [x19, #16]
  421f40:	ldr	x9, [x0]
  421f44:	cmp	x9, x20
  421f48:	b.le	421f74 <_obstack_memory_used@@Base+0x9ce4>
  421f4c:	cmp	x8, #0x1
  421f50:	b.lt	421f9c <_obstack_memory_used@@Base+0x9d0c>  // b.tstop
  421f54:	mov	x9, x8
  421f58:	add	x10, x0, x9, lsl #3
  421f5c:	ldur	x11, [x10, #-8]
  421f60:	subs	x8, x9, #0x1
  421f64:	mov	x9, x8
  421f68:	str	x11, [x10]
  421f6c:	b.gt	421f58 <_obstack_memory_used@@Base+0x9cc8>
  421f70:	b	421f9c <_obstack_memory_used@@Base+0x9d0c>
  421f74:	add	x9, x0, x8, lsl #3
  421f78:	ldur	x9, [x9, #-8]
  421f7c:	cmp	x9, x20
  421f80:	b.le	421f9c <_obstack_memory_used@@Base+0x9d0c>
  421f84:	add	x10, x0, x8, lsl #3
  421f88:	str	x9, [x10]
  421f8c:	ldur	x9, [x10, #-16]
  421f90:	sub	x8, x8, #0x1
  421f94:	cmp	x9, x20
  421f98:	b.gt	421f84 <_obstack_memory_used@@Base+0x9cf4>
  421f9c:	str	x20, [x0, x8, lsl #3]
  421fa0:	b	421ec8 <_obstack_memory_used@@Base+0x9c38>
  421fa4:	sub	sp, sp, #0xb0
  421fa8:	stp	x29, x30, [sp, #80]
  421fac:	stp	x28, x27, [sp, #96]
  421fb0:	stp	x26, x25, [sp, #112]
  421fb4:	stp	x24, x23, [sp, #128]
  421fb8:	stp	x22, x21, [sp, #144]
  421fbc:	stp	x20, x19, [sp, #160]
  421fc0:	ldr	x28, [x2, #8]
  421fc4:	add	x29, sp, #0x50
  421fc8:	cbz	x28, 421ff4 <_obstack_memory_used@@Base+0x9d64>
  421fcc:	mov	x26, x2
  421fd0:	mov	x19, x1
  421fd4:	subs	x8, x28, #0x1
  421fd8:	add	x22, x28, w3, uxtw
  421fdc:	b.lt	42205c <_obstack_memory_used@@Base+0x9dcc>  // b.tstop
  421fe0:	ldr	x9, [x26, #16]
  421fe4:	cmp	x28, #0x4
  421fe8:	b.cs	422000 <_obstack_memory_used@@Base+0x9d70>  // b.hs, b.nlast
  421fec:	mov	x10, xzr
  421ff0:	b	422044 <_obstack_memory_used@@Base+0x9db4>
  421ff4:	mov	x27, xzr
  421ff8:	str	wzr, [x0]
  421ffc:	b	422378 <_obstack_memory_used@@Base+0xa0e8>
  422000:	and	x10, x28, #0xfffffffffffffffc
  422004:	movi	v1.2d, #0x0
  422008:	movi	v0.2d, #0x0
  42200c:	mov	v1.d[0], x22
  422010:	add	x11, x9, #0x10
  422014:	mov	x12, x10
  422018:	ldp	q2, q3, [x11, #-16]
  42201c:	subs	x12, x12, #0x4
  422020:	add	x11, x11, #0x20
  422024:	add	v1.2d, v2.2d, v1.2d
  422028:	add	v0.2d, v3.2d, v0.2d
  42202c:	b.ne	422018 <_obstack_memory_used@@Base+0x9d88>  // b.any
  422030:	add	v0.2d, v0.2d, v1.2d
  422034:	addp	d0, v0.2d
  422038:	cmp	x28, x10
  42203c:	fmov	x22, d0
  422040:	b.eq	42205c <_obstack_memory_used@@Base+0x9dcc>  // b.none
  422044:	sub	x11, x28, x10
  422048:	add	x9, x9, x10, lsl #3
  42204c:	ldr	x10, [x9], #8
  422050:	subs	x11, x11, #0x1
  422054:	add	x22, x10, x22
  422058:	b.ne	42204c <_obstack_memory_used@@Base+0x9dbc>  // b.any
  42205c:	ldr	x9, [x19, #136]
  422060:	ldr	x10, [x19, #64]
  422064:	and	x11, x9, x22
  422068:	mov	w9, #0x18                  	// #24
  42206c:	mul	x9, x11, x9
  422070:	ldr	x9, [x10, x9]
  422074:	cmp	x9, #0x1
  422078:	b.lt	422108 <_obstack_memory_used@@Base+0x9e78>  // b.tstop
  42207c:	mov	w12, #0x18                  	// #24
  422080:	madd	x10, x11, x12, x10
  422084:	ldr	x10, [x10, #16]
  422088:	mov	x11, xzr
  42208c:	b	42209c <_obstack_memory_used@@Base+0x9e0c>
  422090:	add	x11, x11, #0x1
  422094:	cmp	x11, x9
  422098:	b.ge	422108 <_obstack_memory_used@@Base+0x9e78>  // b.tcont
  42209c:	ldr	x27, [x10, x11, lsl #3]
  4220a0:	ldr	x12, [x27]
  4220a4:	cmp	x12, x22
  4220a8:	b.ne	422090 <_obstack_memory_used@@Base+0x9e00>  // b.any
  4220ac:	ldrb	w12, [x27, #104]
  4220b0:	and	w12, w12, #0xf
  4220b4:	cmp	w12, w3
  4220b8:	b.ne	422090 <_obstack_memory_used@@Base+0x9e00>  // b.any
  4220bc:	cbz	x26, 422090 <_obstack_memory_used@@Base+0x9e00>
  4220c0:	ldr	x12, [x27, #80]
  4220c4:	cbz	x12, 422090 <_obstack_memory_used@@Base+0x9e00>
  4220c8:	ldr	x13, [x12, #8]
  4220cc:	cmp	x13, x28
  4220d0:	b.ne	422090 <_obstack_memory_used@@Base+0x9e00>  // b.any
  4220d4:	mov	x13, x8
  4220d8:	add	x14, x13, #0x1
  4220dc:	cmp	x14, #0x1
  4220e0:	b.lt	422378 <_obstack_memory_used@@Base+0xa0e8>  // b.tstop
  4220e4:	ldr	x14, [x12, #16]
  4220e8:	ldr	x15, [x26, #16]
  4220ec:	lsl	x16, x13, #3
  4220f0:	sub	x13, x13, #0x1
  4220f4:	ldr	x14, [x14, x16]
  4220f8:	ldr	x15, [x15, x16]
  4220fc:	cmp	x14, x15
  422100:	b.eq	4220d8 <_obstack_memory_used@@Base+0x9e48>  // b.none
  422104:	b	422090 <_obstack_memory_used@@Base+0x9e00>
  422108:	str	x0, [sp]
  42210c:	mov	w0, #0x70                  	// #112
  422110:	mov	w1, #0x1                   	// #1
  422114:	stur	w3, [x29, #-20]
  422118:	bl	402480 <calloc@plt>
  42211c:	cbz	x0, 4223a8 <_obstack_memory_used@@Base+0xa118>
  422120:	mov	x27, x0
  422124:	add	x9, x0, #0x8
  422128:	cmp	x28, #0x1
  42212c:	str	x28, [x0, #16]
  422130:	str	x19, [sp, #16]
  422134:	b.lt	42234c <_obstack_memory_used@@Base+0xa0bc>  // b.tstop
  422138:	lsl	x20, x28, #3
  42213c:	mov	x0, x20
  422140:	stur	x9, [x29, #-32]
  422144:	str	x28, [x27, #8]
  422148:	bl	4023a0 <malloc@plt>
  42214c:	str	x0, [x27, #24]
  422150:	cbz	x0, 4223bc <_obstack_memory_used@@Base+0xa12c>
  422154:	ldr	x26, [x26, #16]
  422158:	mov	x2, x20
  42215c:	mov	x25, x0
  422160:	str	x20, [sp, #40]
  422164:	mov	x1, x26
  422168:	bl	402210 <memcpy@plt>
  42216c:	ldur	w15, [x29, #-20]
  422170:	ldur	x16, [x29, #-32]
  422174:	mov	x20, xzr
  422178:	mov	x8, xzr
  42217c:	and	w18, w15, #0xf
  422180:	strb	w18, [x27, #104]
  422184:	str	x16, [x27, #80]
  422188:	ldr	x23, [x19]
  42218c:	add	x9, x25, #0x8
  422190:	mov	x21, #0xffffffffffffffff    	// #-1
  422194:	mov	x24, x28
  422198:	mov	x17, x16
  42219c:	str	x9, [sp, #8]
  4221a0:	stp	x28, x23, [sp, #24]
  4221a4:	b	4221c4 <_obstack_memory_used@@Base+0x9f34>
  4221a8:	mov	x24, x9
  4221ac:	add	x8, x8, #0x1
  4221b0:	add	x20, x20, #0x1
  4221b4:	sub	x21, x21, #0x1
  4221b8:	cmp	x20, x28
  4221bc:	add	x25, x25, #0x8
  4221c0:	b.eq	422364 <_obstack_memory_used@@Base+0xa0d4>  // b.none
  4221c4:	ldr	x9, [x26, x20, lsl #3]
  4221c8:	add	x9, x23, x9, lsl #4
  4221cc:	ldr	w19, [x9, #8]
  4221d0:	and	w9, w19, #0x3ffff
  4221d4:	cmp	w9, #0x1
  4221d8:	b.eq	4221b0 <_obstack_memory_used@@Base+0x9f20>  // b.none
  4221dc:	lsr	w11, w19, #15
  4221e0:	and	w10, w19, #0xff
  4221e4:	and	w11, w11, #0x20
  4221e8:	and	w9, w19, #0x3ff00
  4221ec:	orr	w18, w18, w11
  4221f0:	cmp	w10, #0x2
  4221f4:	strb	w18, [x27, #104]
  4221f8:	b.eq	42220c <_obstack_memory_used@@Base+0x9f7c>  // b.none
  4221fc:	cmp	w10, #0x4
  422200:	b.ne	422218 <_obstack_memory_used@@Base+0x9f88>  // b.any
  422204:	mov	w10, #0x40                  	// #64
  422208:	b	422210 <_obstack_memory_used@@Base+0x9f80>
  42220c:	mov	w10, #0x10                  	// #16
  422210:	orr	w18, w18, w10
  422214:	strb	w18, [x27, #104]
  422218:	cbz	w9, 4221b0 <_obstack_memory_used@@Base+0x9f20>
  42221c:	cmp	x17, x16
  422220:	b.eq	42222c <_obstack_memory_used@@Base+0x9f9c>  // b.none
  422224:	tbz	w15, #0, 4222a4 <_obstack_memory_used@@Base+0xa014>
  422228:	b	4222a8 <_obstack_memory_used@@Base+0xa018>
  42222c:	mov	w0, #0x18                  	// #24
  422230:	stur	w18, [x29, #-4]
  422234:	bl	4023a0 <malloc@plt>
  422238:	cbz	x0, 4223a0 <_obstack_memory_used@@Base+0xa110>
  42223c:	mov	x8, x28
  422240:	mov	x28, x26
  422244:	ldr	x26, [sp, #40]
  422248:	str	x0, [x27, #80]
  42224c:	stp	x8, x8, [x0]
  422250:	mov	x23, x0
  422254:	mov	x0, x26
  422258:	stur	x24, [x29, #-16]
  42225c:	bl	4023a0 <malloc@plt>
  422260:	mov	x24, x23
  422264:	str	x0, [x23, #16]
  422268:	cbz	x0, 42239c <_obstack_memory_used@@Base+0xa10c>
  42226c:	mov	x1, x28
  422270:	mov	x2, x26
  422274:	mov	x26, x28
  422278:	bl	402210 <memcpy@plt>
  42227c:	ldur	w18, [x29, #-4]
  422280:	ldur	w15, [x29, #-20]
  422284:	ldur	x16, [x29, #-32]
  422288:	ldp	x28, x23, [sp, #24]
  42228c:	mov	x17, x24
  422290:	ldur	x24, [x29, #-16]
  422294:	mov	x8, xzr
  422298:	orr	w18, w18, #0xffffff80
  42229c:	strb	w18, [x27, #104]
  4222a0:	tbnz	w15, #0, 4222a8 <_obstack_memory_used@@Base+0xa018>
  4222a4:	tbnz	w19, #8, 4222c0 <_obstack_memory_used@@Base+0xa030>
  4222a8:	tbz	w15, #0, 4222b0 <_obstack_memory_used@@Base+0xa020>
  4222ac:	tbnz	w19, #9, 4222c0 <_obstack_memory_used@@Base+0xa030>
  4222b0:	tbnz	w15, #1, 4222b8 <_obstack_memory_used@@Base+0xa028>
  4222b4:	tbnz	w19, #12, 4222c0 <_obstack_memory_used@@Base+0xa030>
  4222b8:	tbnz	w15, #2, 4221b0 <_obstack_memory_used@@Base+0x9f20>
  4222bc:	tbz	w19, #14, 4221b0 <_obstack_memory_used@@Base+0x9f20>
  4222c0:	subs	x10, x20, x8
  4222c4:	b.mi	4221ac <_obstack_memory_used@@Base+0x9f1c>  // b.first
  4222c8:	cmp	x24, x10
  4222cc:	b.le	4221ac <_obstack_memory_used@@Base+0x9f1c>
  4222d0:	sub	x9, x24, #0x1
  4222d4:	cmp	x9, x10
  4222d8:	str	x9, [x27, #16]
  4222dc:	b.le	4221a8 <_obstack_memory_used@@Base+0x9f18>
  4222e0:	mvn	x11, x20
  4222e4:	add	x13, x24, x8
  4222e8:	add	x11, x13, x11
  4222ec:	cmp	x11, #0x4
  4222f0:	b.cc	422324 <_obstack_memory_used@@Base+0xa094>  // b.lo, b.ul, b.last
  4222f4:	and	x12, x11, #0xfffffffffffffffc
  4222f8:	add	x13, x13, x21
  4222fc:	add	x10, x10, x12
  422300:	and	x13, x13, #0xfffffffffffffffc
  422304:	sub	x14, x25, x8, lsl #3
  422308:	ldur	q0, [x14, #8]
  42230c:	ldur	q1, [x14, #24]
  422310:	subs	x13, x13, #0x4
  422314:	stp	q0, q1, [x14], #32
  422318:	b.ne	422308 <_obstack_memory_used@@Base+0xa078>  // b.any
  42231c:	cmp	x11, x12
  422320:	b.eq	4221a8 <_obstack_memory_used@@Base+0x9f18>  // b.none
  422324:	ldr	x11, [sp, #8]
  422328:	add	x11, x11, x10, lsl #3
  42232c:	mvn	x10, x10
  422330:	add	x10, x10, x24
  422334:	ldr	x12, [x11]
  422338:	subs	x10, x10, #0x1
  42233c:	stur	x12, [x11, #-8]
  422340:	add	x11, x11, #0x8
  422344:	b.ne	422334 <_obstack_memory_used@@Base+0xa0a4>  // b.any
  422348:	b	4221a8 <_obstack_memory_used@@Base+0x9f18>
  42234c:	ldur	w8, [x29, #-20]
  422350:	stp	xzr, xzr, [x9]
  422354:	str	xzr, [x9, #16]
  422358:	str	x9, [x27, #80]
  42235c:	and	w8, w8, #0xf
  422360:	strb	w8, [x27, #104]
  422364:	ldr	x0, [sp, #16]
  422368:	mov	x1, x27
  42236c:	mov	x2, x22
  422370:	bl	4223c8 <_obstack_memory_used@@Base+0xa138>
  422374:	cbnz	w0, 4223a0 <_obstack_memory_used@@Base+0xa110>
  422378:	mov	x0, x27
  42237c:	ldp	x20, x19, [sp, #160]
  422380:	ldp	x22, x21, [sp, #144]
  422384:	ldp	x24, x23, [sp, #128]
  422388:	ldp	x26, x25, [sp, #112]
  42238c:	ldp	x28, x27, [sp, #96]
  422390:	ldp	x29, x30, [sp, #80]
  422394:	add	sp, sp, #0xb0
  422398:	ret
  42239c:	stp	xzr, xzr, [x24]
  4223a0:	mov	x0, x27
  4223a4:	bl	41cca4 <_obstack_memory_used@@Base+0x4a14>
  4223a8:	ldr	x9, [sp]
  4223ac:	mov	x27, xzr
  4223b0:	mov	w8, #0xc                   	// #12
  4223b4:	str	w8, [x9]
  4223b8:	b	422378 <_obstack_memory_used@@Base+0xa0e8>
  4223bc:	mov	x0, x27
  4223c0:	bl	402620 <free@plt>
  4223c4:	b	4223a8 <_obstack_memory_used@@Base+0xa118>
  4223c8:	stp	x29, x30, [sp, #-64]!
  4223cc:	stp	x24, x23, [sp, #16]
  4223d0:	stp	x22, x21, [sp, #32]
  4223d4:	stp	x20, x19, [sp, #48]
  4223d8:	ldr	x22, [x1, #16]
  4223dc:	mov	x21, x0
  4223e0:	mov	x29, sp
  4223e4:	mov	x20, x2
  4223e8:	lsl	x0, x22, #3
  4223ec:	mov	x19, x1
  4223f0:	str	x2, [x1]
  4223f4:	stp	x22, xzr, [x1, #32]
  4223f8:	bl	4023a0 <malloc@plt>
  4223fc:	str	x0, [x19, #48]
  422400:	cbz	x0, 422504 <_obstack_memory_used@@Base+0xa274>
  422404:	cmp	x22, #0x1
  422408:	b.lt	422478 <_obstack_memory_used@@Base+0xa1e8>  // b.tstop
  42240c:	mov	x23, xzr
  422410:	b	42242c <_obstack_memory_used@@Base+0xa19c>
  422414:	add	x9, x8, #0x1
  422418:	str	x9, [x19, #40]
  42241c:	str	x24, [x0, x8, lsl #3]
  422420:	add	x23, x23, #0x1
  422424:	cmp	x23, x22
  422428:	b.ge	422478 <_obstack_memory_used@@Base+0xa1e8>  // b.tcont
  42242c:	ldr	x8, [x19, #24]
  422430:	ldr	x24, [x8, x23, lsl #3]
  422434:	ldr	x8, [x21]
  422438:	add	x8, x8, x24, lsl #4
  42243c:	ldrb	w8, [x8, #8]
  422440:	tbnz	w8, #3, 422420 <_obstack_memory_used@@Base+0xa190>
  422444:	ldp	x9, x8, [x19, #32]
  422448:	cmp	x9, x8
  42244c:	b.ne	422414 <_obstack_memory_used@@Base+0xa184>  // b.any
  422450:	lsl	x8, x9, #1
  422454:	add	x8, x8, #0x2
  422458:	lsl	x1, x8, #3
  42245c:	str	x8, [x19, #32]
  422460:	bl	4024c0 <realloc@plt>
  422464:	cbz	x0, 422504 <_obstack_memory_used@@Base+0xa274>
  422468:	ldr	x8, [x19, #40]
  42246c:	ldr	x22, [x19, #16]
  422470:	str	x0, [x19, #48]
  422474:	b	422414 <_obstack_memory_used@@Base+0xa184>
  422478:	ldr	x9, [x21, #136]
  42247c:	ldr	x8, [x21, #64]
  422480:	mov	w11, #0x18                  	// #24
  422484:	and	x10, x9, x20
  422488:	madd	x20, x10, x11, x8
  42248c:	mov	x21, x20
  422490:	ldr	x11, [x21, #8]!
  422494:	ldr	x9, [x20]
  422498:	cmp	x11, x9
  42249c:	b.le	4224d0 <_obstack_memory_used@@Base+0xa240>
  4224a0:	mov	w11, #0x18                  	// #24
  4224a4:	madd	x8, x10, x11, x8
  4224a8:	ldr	x8, [x8, #16]
  4224ac:	mov	w0, wzr
  4224b0:	add	x10, x9, #0x1
  4224b4:	str	x10, [x20]
  4224b8:	str	x19, [x8, x9, lsl #3]
  4224bc:	ldp	x20, x19, [sp, #48]
  4224c0:	ldp	x22, x21, [sp, #32]
  4224c4:	ldp	x24, x23, [sp, #16]
  4224c8:	ldp	x29, x30, [sp], #64
  4224cc:	ret
  4224d0:	mov	w11, #0x18                  	// #24
  4224d4:	madd	x22, x10, x11, x8
  4224d8:	ldr	x0, [x22, #16]!
  4224dc:	lsl	x8, x9, #1
  4224e0:	add	x23, x8, #0x2
  4224e4:	lsl	x1, x23, #3
  4224e8:	bl	4024c0 <realloc@plt>
  4224ec:	cbz	x0, 422504 <_obstack_memory_used@@Base+0xa274>
  4224f0:	str	x0, [x22]
  4224f4:	str	x23, [x21]
  4224f8:	ldr	x9, [x20]
  4224fc:	mov	x8, x0
  422500:	b	4224ac <_obstack_memory_used@@Base+0xa21c>
  422504:	mov	w0, #0xc                   	// #12
  422508:	b	4224bc <_obstack_memory_used@@Base+0xa22c>
  42250c:	sub	sp, sp, #0x80
  422510:	stp	x29, x30, [sp, #32]
  422514:	stp	x28, x27, [sp, #48]
  422518:	stp	x26, x25, [sp, #64]
  42251c:	stp	x24, x23, [sp, #80]
  422520:	stp	x22, x21, [sp, #96]
  422524:	stp	x20, x19, [sp, #112]
  422528:	mov	x24, x0
  42252c:	ldr	x8, [x24, #40]!
  422530:	mov	x19, x0
  422534:	mov	x20, x1
  422538:	mov	w21, w2
  42253c:	cmp	x8, x1
  422540:	add	x29, sp, #0x20
  422544:	b.le	422734 <_obstack_memory_used@@Base+0xa4a4>
  422548:	ldr	w8, [x19, #144]
  42254c:	cmp	w8, #0x2
  422550:	b.lt	422558 <_obstack_memory_used@@Base+0xa2c8>  // b.tstop
  422554:	str	xzr, [x19, #32]
  422558:	ldr	x9, [x19, #80]
  42255c:	ldr	x10, [x19, #96]
  422560:	strb	wzr, [x19, #140]
  422564:	tst	w21, #0x1
  422568:	str	x9, [x19, #88]
  42256c:	str	x10, [x19, #104]
  422570:	stp	xzr, xzr, [x24]
  422574:	str	xzr, [x24, #16]
  422578:	ldrb	w9, [x19, #139]
  42257c:	mov	w10, #0x4                   	// #4
  422580:	mov	w11, #0x6                   	// #6
  422584:	mov	x8, xzr
  422588:	csel	w10, w11, w10, eq  // eq = none
  42258c:	mov	x25, x20
  422590:	str	w10, [x19, #112]
  422594:	cbnz	w9, 4225a8 <_obstack_memory_used@@Base+0xa318>
  422598:	ldr	x9, [x19]
  42259c:	mov	x8, xzr
  4225a0:	mov	x25, x20
  4225a4:	str	x9, [x19, #8]
  4225a8:	cbz	x25, 4226b4 <_obstack_memory_used@@Base+0xa424>
  4225ac:	ldr	x9, [x19, #56]
  4225b0:	cmp	x25, x9
  4225b4:	b.ge	422740 <_obstack_memory_used@@Base+0xa4b0>  // b.tcont
  4225b8:	ldrb	w8, [x19, #140]
  4225bc:	cbnz	w8, 42287c <_obstack_memory_used@@Base+0xa5ec>
  4225c0:	cmp	x25, #0x0
  4225c4:	b.le	422600 <_obstack_memory_used@@Base+0xa370>
  4225c8:	ldr	x9, [x19, #88]
  4225cc:	sub	x8, x25, #0x1
  4225d0:	cmp	x9, x8
  4225d4:	b.eq	422930 <_obstack_memory_used@@Base+0xa6a0>  // b.none
  4225d8:	ldr	w9, [x19, #144]
  4225dc:	cmp	w9, #0x2
  4225e0:	b.lt	422608 <_obstack_memory_used@@Base+0xa378>  // b.tstop
  4225e4:	ldr	x9, [x19, #16]
  4225e8:	ldr	w21, [x9, x8, lsl #2]
  4225ec:	cmn	w21, #0x1
  4225f0:	b.ne	422630 <_obstack_memory_used@@Base+0xa3a0>  // b.any
  4225f4:	sub	x8, x8, #0x1
  4225f8:	cmn	x8, #0x1
  4225fc:	b.ne	4225e8 <_obstack_memory_used@@Base+0xa358>  // b.any
  422600:	ldr	w8, [x19, #112]
  422604:	b	422660 <_obstack_memory_used@@Base+0xa3d0>
  422608:	ldr	x9, [x19, #8]
  42260c:	ldrb	w8, [x9, x8]
  422610:	ldr	x9, [x19, #128]
  422614:	lsr	x10, x8, #3
  422618:	and	x10, x10, #0x18
  42261c:	ldr	x9, [x9, x10]
  422620:	lsr	x9, x9, x8
  422624:	tbz	w9, #0, 422654 <_obstack_memory_used@@Base+0xa3c4>
  422628:	mov	w8, #0x1                   	// #1
  42262c:	b	422660 <_obstack_memory_used@@Base+0xa3d0>
  422630:	ldrb	w8, [x19, #142]
  422634:	cbnz	w8, 422a38 <_obstack_memory_used@@Base+0xa7a8>
  422638:	cmp	w21, #0xa
  42263c:	b.ne	42265c <_obstack_memory_used@@Base+0xa3cc>  // b.any
  422640:	ldrb	w8, [x19, #141]
  422644:	cmp	w8, #0x0
  422648:	cset	w8, ne  // ne = any
  42264c:	lsl	w8, w8, #1
  422650:	b	422660 <_obstack_memory_used@@Base+0xa3d0>
  422654:	cmp	w8, #0xa
  422658:	b.eq	422640 <_obstack_memory_used@@Base+0xa3b0>  // b.none
  42265c:	mov	w8, wzr
  422660:	ldr	w9, [x19, #144]
  422664:	str	w8, [x19, #112]
  422668:	cmp	w9, #0x2
  42266c:	b.lt	422688 <_obstack_memory_used@@Base+0xa3f8>  // b.tstop
  422670:	ldr	x8, [x19, #48]
  422674:	ldr	x0, [x19, #16]
  422678:	sub	x8, x8, x25
  42267c:	add	x1, x0, x25, lsl #2
  422680:	lsl	x2, x8, #2
  422684:	bl	402230 <memmove@plt>
  422688:	ldrb	w8, [x19, #139]
  42268c:	cbnz	w8, 422918 <_obstack_memory_used@@Base+0xa688>
  422690:	ldr	q0, [x19, #48]
  422694:	dup	v1.2d, x25
  422698:	sub	v0.2d, v0.2d, v1.2d
  42269c:	str	q0, [x19, #48]
  4226a0:	ldrb	w8, [x19, #139]
  4226a4:	cbnz	w8, 4226b4 <_obstack_memory_used@@Base+0xa424>
  4226a8:	ldr	x8, [x19, #8]
  4226ac:	add	x8, x8, x25
  4226b0:	str	x8, [x19, #8]
  4226b4:	ldr	x8, [x19, #88]
  4226b8:	ldr	x10, [x19, #104]
  4226bc:	ldr	w11, [x19, #144]
  4226c0:	str	x20, [x19, #40]
  4226c4:	sub	x9, x8, x25
  4226c8:	sub	x8, x10, x25
  4226cc:	cmp	w11, #0x2
  4226d0:	str	x9, [x19, #88]
  4226d4:	str	x8, [x19, #104]
  4226d8:	b.lt	4226f4 <_obstack_memory_used@@Base+0xa464>  // b.tstop
  4226dc:	ldrb	w8, [x19, #136]
  4226e0:	cbz	w8, 422704 <_obstack_memory_used@@Base+0xa474>
  4226e4:	mov	x0, x19
  4226e8:	bl	41cd0c <_obstack_memory_used@@Base+0x4a7c>
  4226ec:	cbnz	w0, 422714 <_obstack_memory_used@@Base+0xa484>
  4226f0:	b	42270c <_obstack_memory_used@@Base+0xa47c>
  4226f4:	ldrb	w8, [x19, #139]
  4226f8:	cbnz	w8, 422940 <_obstack_memory_used@@Base+0xa6b0>
  4226fc:	str	x9, [x19, #48]
  422700:	b	42270c <_obstack_memory_used@@Base+0xa47c>
  422704:	mov	x0, x19
  422708:	bl	41d3b0 <_obstack_memory_used@@Base+0x5120>
  42270c:	mov	w0, wzr
  422710:	str	xzr, [x19, #72]
  422714:	ldp	x20, x19, [sp, #112]
  422718:	ldp	x22, x21, [sp, #96]
  42271c:	ldp	x24, x23, [sp, #80]
  422720:	ldp	x26, x25, [sp, #64]
  422724:	ldp	x28, x27, [sp, #48]
  422728:	ldp	x29, x30, [sp, #32]
  42272c:	add	sp, sp, #0x80
  422730:	ret
  422734:	sub	x25, x20, x8
  422738:	cbnz	x25, 4225ac <_obstack_memory_used@@Base+0xa31c>
  42273c:	b	4226b4 <_obstack_memory_used@@Base+0xa424>
  422740:	ldrb	w10, [x19, #140]
  422744:	ldr	x26, [x19, #48]
  422748:	cbnz	w10, 422d2c <_obstack_memory_used@@Base+0xaa9c>
  42274c:	ldr	w10, [x19, #144]
  422750:	str	xzr, [x19, #48]
  422754:	cmp	w10, #0x2
  422758:	b.lt	4229a4 <_obstack_memory_used@@Base+0xa714>  // b.tstop
  42275c:	ldrb	w11, [x19, #137]
  422760:	cbz	w11, 422808 <_obstack_memory_used@@Base+0xa578>
  422764:	ldr	x13, [x19]
  422768:	sub	x10, x25, x10
  42276c:	add	x11, x13, x8
  422770:	add	x10, x11, x10
  422774:	cmp	x10, x13
  422778:	add	x22, x11, x25
  42277c:	csel	x12, x13, x10, cc  // cc = lo, ul, last
  422780:	add	x10, x13, x25
  422784:	add	x13, x10, x8
  422788:	sub	x13, x13, #0x1
  42278c:	cmp	x13, x12
  422790:	b.cc	422808 <_obstack_memory_used@@Base+0xa578>  // b.lo, b.ul, b.last
  422794:	ldrb	w13, [x13]
  422798:	sub	x10, x10, #0x1
  42279c:	and	w13, w13, #0xc0
  4227a0:	cmp	w13, #0x80
  4227a4:	b.eq	422784 <_obstack_memory_used@@Base+0xa4f4>  // b.none
  4227a8:	ldr	x12, [x19, #88]
  4227ac:	ldr	x9, [x19, #120]
  4227b0:	add	x23, x10, x8
  4227b4:	mov	x1, x23
  4227b8:	add	x11, x11, x12
  4227bc:	sub	x2, x11, x23
  4227c0:	cbnz	x9, 422dd4 <_obstack_memory_used@@Base+0xab44>
  4227c4:	sub	x0, x29, #0xc
  4227c8:	sub	x3, x29, #0x8
  4227cc:	stur	xzr, [x29, #-8]
  4227d0:	bl	417eb0 <wcrtomb@plt+0x15640>
  4227d4:	sub	x8, x22, x23
  4227d8:	subs	x8, x0, x8
  4227dc:	mov	w9, #0xffffffff            	// #-1
  4227e0:	b.cc	4227f8 <_obstack_memory_used@@Base+0xa568>  // b.lo, b.ul, b.last
  4227e4:	cmn	x0, #0x3
  4227e8:	b.hi	4227f8 <_obstack_memory_used@@Base+0xa568>  // b.pmore
  4227ec:	str	xzr, [x19, #32]
  4227f0:	str	x8, [x19, #48]
  4227f4:	ldur	w9, [x29, #-12]
  4227f8:	cmn	w9, #0x1
  4227fc:	b.ne	422a68 <_obstack_memory_used@@Base+0xa7d8>  // b.any
  422800:	ldr	x8, [x19, #40]
  422804:	ldr	x9, [x19, #56]
  422808:	add	x27, x9, x8
  42280c:	subs	x8, x27, x20
  422810:	b.ge	422a54 <_obstack_memory_used@@Base+0xa7c4>  // b.tcont
  422814:	add	x22, x19, #0x20
  422818:	ldr	x8, [x19, #80]
  42281c:	ldr	x9, [x19]
  422820:	ldr	x28, [x19, #32]
  422824:	sub	x0, x29, #0x8
  422828:	sub	x23, x8, x27
  42282c:	add	x1, x9, x27
  422830:	mov	x2, x23
  422834:	mov	x3, x22
  422838:	bl	417eb0 <wcrtomb@plt+0x15640>
  42283c:	sub	x8, x0, #0x1
  422840:	cmn	x8, #0x3
  422844:	b.cs	42285c <_obstack_memory_used@@Base+0xa5cc>  // b.hs, b.nlast
  422848:	ldur	w9, [x29, #-8]
  42284c:	add	x27, x0, x27
  422850:	subs	x8, x27, x20
  422854:	b.lt	422818 <_obstack_memory_used@@Base+0xa588>  // b.tstop
  422858:	b	422a5c <_obstack_memory_used@@Base+0xa7cc>
  42285c:	mov	w9, wzr
  422860:	cbz	x23, 422870 <_obstack_memory_used@@Base+0xa5e0>
  422864:	cbz	x0, 422870 <_obstack_memory_used@@Base+0xa5e0>
  422868:	ldr	x8, [x19]
  42286c:	ldrb	w9, [x8, x27]
  422870:	str	x28, [x22]
  422874:	mov	w0, #0x1                   	// #1
  422878:	b	42284c <_obstack_memory_used@@Base+0xa5bc>
  42287c:	ldr	x9, [x19, #48]
  422880:	ldr	x8, [x19, #24]
  422884:	mov	x10, xzr
  422888:	b	422898 <_obstack_memory_used@@Base+0xa608>
  42288c:	cmp	x10, x13
  422890:	mov	x9, x13
  422894:	b.ge	4228c8 <_obstack_memory_used@@Base+0xa638>  // b.tcont
  422898:	add	x11, x10, x9
  42289c:	cmp	x11, #0x0
  4228a0:	cinc	x11, x11, lt  // lt = tstop
  4228a4:	asr	x11, x11, #1
  4228a8:	ldr	x12, [x8, x11, lsl #3]
  4228ac:	mov	x13, x11
  4228b0:	cmp	x12, x25
  4228b4:	b.gt	42288c <_obstack_memory_used@@Base+0xa5fc>
  4228b8:	b.ge	4228c8 <_obstack_memory_used@@Base+0xa638>  // b.tcont
  4228bc:	add	x10, x11, #0x1
  4228c0:	mov	x13, x9
  4228c4:	b	42288c <_obstack_memory_used@@Base+0xa5fc>
  4228c8:	cmp	x12, x25
  4228cc:	cinc	x22, x11, lt  // lt = tstop
  4228d0:	cmp	x22, #0x0
  4228d4:	b.le	422910 <_obstack_memory_used@@Base+0xa680>
  4228d8:	ldr	x9, [x19, #88]
  4228dc:	sub	x8, x22, #0x1
  4228e0:	cmp	x9, x8
  4228e4:	b.eq	422d50 <_obstack_memory_used@@Base+0xaac0>  // b.none
  4228e8:	ldr	w9, [x19, #144]
  4228ec:	cmp	w9, #0x2
  4228f0:	b.lt	4229e4 <_obstack_memory_used@@Base+0xa754>  // b.tstop
  4228f4:	ldr	x9, [x19, #16]
  4228f8:	ldr	w21, [x9, x8, lsl #2]
  4228fc:	cmn	w21, #0x1
  422900:	b.ne	422a14 <_obstack_memory_used@@Base+0xa784>  // b.any
  422904:	sub	x8, x8, #0x1
  422908:	cmn	x8, #0x1
  42290c:	b.ne	4228f8 <_obstack_memory_used@@Base+0xa668>  // b.any
  422910:	ldr	w9, [x19, #112]
  422914:	b	422b58 <_obstack_memory_used@@Base+0xa8c8>
  422918:	ldr	x0, [x19, #8]
  42291c:	ldr	x8, [x19, #48]
  422920:	add	x1, x0, x25
  422924:	sub	x2, x8, x25
  422928:	bl	402230 <memmove@plt>
  42292c:	b	422690 <_obstack_memory_used@@Base+0xa400>
  422930:	and	w8, w21, #0x2
  422934:	mov	w9, #0xa                   	// #10
  422938:	eor	w8, w8, w9
  42293c:	b	422660 <_obstack_memory_used@@Base+0xa3d0>
  422940:	ldrb	w8, [x19, #136]
  422944:	cbz	w8, 422ad4 <_obstack_memory_used@@Base+0xa844>
  422948:	ldr	x8, [x19, #64]
  42294c:	ldr	x21, [x19, #48]
  422950:	cmp	x8, x9
  422954:	csel	x22, x9, x8, gt
  422958:	cmp	x21, x22
  42295c:	b.ge	422a0c <_obstack_memory_used@@Base+0xa77c>  // b.tcont
  422960:	bl	4024d0 <__ctype_toupper_loc@plt>
  422964:	ldr	x8, [x19]
  422968:	ldr	x9, [x19, #120]
  42296c:	add	x8, x8, x20
  422970:	ldrb	w8, [x8, x21]
  422974:	cbnz	x9, 42299c <_obstack_memory_used@@Base+0xa70c>
  422978:	ldr	x9, [x0]
  42297c:	ldr	x10, [x19, #8]
  422980:	ldr	w8, [x9, w8, uxtw #2]
  422984:	strb	w8, [x10, x21]
  422988:	add	x21, x21, #0x1
  42298c:	cmp	x21, x22
  422990:	b.ge	422a0c <_obstack_memory_used@@Base+0xa77c>  // b.tcont
  422994:	ldr	x20, [x24]
  422998:	b	422964 <_obstack_memory_used@@Base+0xa6d4>
  42299c:	ldrb	w8, [x9, x8]
  4229a0:	b	422978 <_obstack_memory_used@@Base+0xa6e8>
  4229a4:	ldr	x9, [x19]
  4229a8:	add	x8, x25, x8
  4229ac:	add	x8, x8, x9
  4229b0:	ldr	x9, [x19, #120]
  4229b4:	ldurb	w8, [x8, #-1]
  4229b8:	str	xzr, [x19, #56]
  4229bc:	cbz	x9, 4229c4 <_obstack_memory_used@@Base+0xa734>
  4229c0:	ldrb	w8, [x9, x8]
  4229c4:	ldr	x9, [x19, #128]
  4229c8:	lsr	x10, x8, #3
  4229cc:	and	x10, x10, #0x18
  4229d0:	ldr	x9, [x9, x10]
  4229d4:	lsr	x9, x9, x8
  4229d8:	tbz	w9, #0, 422b30 <_obstack_memory_used@@Base+0xa8a0>
  4229dc:	mov	w8, #0x1                   	// #1
  4229e0:	b	422cec <_obstack_memory_used@@Base+0xaa5c>
  4229e4:	ldr	x9, [x19, #8]
  4229e8:	ldrb	w8, [x9, x8]
  4229ec:	ldr	x9, [x19, #128]
  4229f0:	lsr	x10, x8, #3
  4229f4:	and	x10, x10, #0x18
  4229f8:	ldr	x9, [x9, x10]
  4229fc:	lsr	x9, x9, x8
  422a00:	tbz	w9, #0, 422b4c <_obstack_memory_used@@Base+0xa8bc>
  422a04:	mov	w9, #0x1                   	// #1
  422a08:	b	422b58 <_obstack_memory_used@@Base+0xa8c8>
  422a0c:	stp	x21, x21, [x19, #48]
  422a10:	b	42270c <_obstack_memory_used@@Base+0xa47c>
  422a14:	ldrb	w8, [x19, #142]
  422a18:	cbnz	w8, 422d94 <_obstack_memory_used@@Base+0xab04>
  422a1c:	cmp	w21, #0xa
  422a20:	b.ne	422b54 <_obstack_memory_used@@Base+0xa8c4>  // b.any
  422a24:	ldrb	w8, [x19, #141]
  422a28:	cmp	w8, #0x0
  422a2c:	cset	w8, ne  // ne = any
  422a30:	lsl	w9, w8, #1
  422a34:	b	422b58 <_obstack_memory_used@@Base+0xa8c8>
  422a38:	mov	w0, w21
  422a3c:	bl	402710 <iswalnum@plt>
  422a40:	cmp	w21, #0x5f
  422a44:	mov	w8, #0x1                   	// #1
  422a48:	b.eq	422660 <_obstack_memory_used@@Base+0xa3d0>  // b.none
  422a4c:	cbz	w0, 422638 <_obstack_memory_used@@Base+0xa3a8>
  422a50:	b	422660 <_obstack_memory_used@@Base+0xa3d0>
  422a54:	str	x8, [x19, #48]
  422a58:	b	422a8c <_obstack_memory_used@@Base+0xa7fc>
  422a5c:	cmn	w9, #0x1
  422a60:	str	x8, [x19, #48]
  422a64:	b.eq	422a8c <_obstack_memory_used@@Base+0xa7fc>  // b.none
  422a68:	ldrb	w8, [x19, #142]
  422a6c:	cbnz	w8, 422db0 <_obstack_memory_used@@Base+0xab20>
  422a70:	cmp	w9, #0xa
  422a74:	b.ne	422d04 <_obstack_memory_used@@Base+0xaa74>  // b.any
  422a78:	ldrb	w8, [x19, #141]
  422a7c:	cmp	w8, #0x0
  422a80:	cset	w8, ne  // ne = any
  422a84:	lsl	w8, w8, #1
  422a88:	b	422d08 <_obstack_memory_used@@Base+0xaa78>
  422a8c:	cmp	x26, #0x0
  422a90:	b.le	422acc <_obstack_memory_used@@Base+0xa83c>
  422a94:	ldr	x9, [x19, #88]
  422a98:	sub	x8, x26, #0x1
  422a9c:	cmp	x9, x8
  422aa0:	b.eq	422d84 <_obstack_memory_used@@Base+0xaaf4>  // b.none
  422aa4:	ldr	w9, [x19, #144]
  422aa8:	cmp	w9, #0x2
  422aac:	b.lt	422cac <_obstack_memory_used@@Base+0xaa1c>  // b.tstop
  422ab0:	ldr	x9, [x19, #16]
  422ab4:	ldr	w21, [x9, x8, lsl #2]
  422ab8:	cmn	w21, #0x1
  422abc:	b.ne	422cf4 <_obstack_memory_used@@Base+0xaa64>  // b.any
  422ac0:	sub	x8, x8, #0x1
  422ac4:	cmn	x8, #0x1
  422ac8:	b.ne	422ab4 <_obstack_memory_used@@Base+0xa824>  // b.any
  422acc:	ldr	w8, [x19, #112]
  422ad0:	b	422d08 <_obstack_memory_used@@Base+0xaa78>
  422ad4:	ldr	x10, [x19, #120]
  422ad8:	cbz	x10, 42270c <_obstack_memory_used@@Base+0xa47c>
  422adc:	ldr	x11, [x19, #64]
  422ae0:	ldr	x8, [x19, #48]
  422ae4:	cmp	x11, x9
  422ae8:	csel	x9, x9, x11, gt
  422aec:	cmp	x8, x9
  422af0:	b.ge	422cd4 <_obstack_memory_used@@Base+0xaa44>  // b.tcont
  422af4:	ldp	x11, x13, [x19]
  422af8:	add	x12, x8, x20
  422afc:	ldrb	w11, [x11, x12]
  422b00:	ldrb	w10, [x10, x11]
  422b04:	strb	w10, [x13, x8]
  422b08:	add	x8, x8, #0x1
  422b0c:	cmp	x8, x9
  422b10:	b.ge	422cd4 <_obstack_memory_used@@Base+0xaa44>  // b.tcont
  422b14:	ldr	x10, [x19, #40]
  422b18:	ldp	x11, x13, [x19]
  422b1c:	ldr	x12, [x19, #120]
  422b20:	add	x10, x11, x10
  422b24:	ldrb	w10, [x10, x8]
  422b28:	ldrb	w10, [x12, x10]
  422b2c:	b	422b04 <_obstack_memory_used@@Base+0xa874>
  422b30:	cmp	w8, #0xa
  422b34:	b.ne	422ce8 <_obstack_memory_used@@Base+0xaa58>  // b.any
  422b38:	ldrb	w8, [x19, #141]
  422b3c:	cmp	w8, #0x0
  422b40:	cset	w8, ne  // ne = any
  422b44:	lsl	w8, w8, #1
  422b48:	b	422cec <_obstack_memory_used@@Base+0xaa5c>
  422b4c:	cmp	w8, #0xa
  422b50:	b.eq	422a24 <_obstack_memory_used@@Base+0xa794>  // b.none
  422b54:	mov	w9, wzr
  422b58:	ldr	x8, [x19, #48]
  422b5c:	cmp	x22, x25
  422b60:	str	w9, [x19, #112]
  422b64:	b.ne	422bf0 <_obstack_memory_used@@Base+0xa960>  // b.any
  422b68:	subs	x9, x8, x25
  422b6c:	b.le	422bf0 <_obstack_memory_used@@Base+0xa960>
  422b70:	ldr	x10, [x19, #24]
  422b74:	ldr	x10, [x10, x25, lsl #3]
  422b78:	cmp	x10, x25
  422b7c:	b.ne	422bf0 <_obstack_memory_used@@Base+0xa960>  // b.any
  422b80:	ldr	x0, [x19, #16]
  422b84:	lsl	x2, x9, #2
  422b88:	add	x1, x0, x25, lsl #2
  422b8c:	bl	402230 <memmove@plt>
  422b90:	ldr	x0, [x19, #8]
  422b94:	ldr	x8, [x19, #48]
  422b98:	add	x1, x0, x25
  422b9c:	sub	x2, x8, x25
  422ba0:	bl	402230 <memmove@plt>
  422ba4:	ldr	q0, [x19, #48]
  422ba8:	dup	v1.2d, x25
  422bac:	sub	v0.2d, v0.2d, v1.2d
  422bb0:	fmov	x8, d0
  422bb4:	cmp	x8, #0x1
  422bb8:	str	q0, [x19, #48]
  422bbc:	b.lt	4226a0 <_obstack_memory_used@@Base+0xa410>  // b.tstop
  422bc0:	ldr	x9, [x19, #24]
  422bc4:	mov	x8, xzr
  422bc8:	add	x10, x9, x25, lsl #3
  422bcc:	lsl	x11, x8, #3
  422bd0:	ldr	x12, [x10, x11]
  422bd4:	add	x8, x8, #0x1
  422bd8:	sub	x12, x12, x25
  422bdc:	str	x12, [x9, x11]
  422be0:	ldr	x11, [x19, #48]
  422be4:	cmp	x8, x11
  422be8:	b.lt	422bcc <_obstack_memory_used@@Base+0xa93c>  // b.tstop
  422bec:	b	4226a0 <_obstack_memory_used@@Base+0xa410>
  422bf0:	ldr	x9, [x19, #80]
  422bf4:	ldr	x10, [x19, #96]
  422bf8:	sub	x11, x25, x20
  422bfc:	strb	wzr, [x19, #140]
  422c00:	add	x9, x11, x9
  422c04:	add	x10, x11, x10
  422c08:	str	x9, [x19, #88]
  422c0c:	str	x10, [x19, #104]
  422c10:	mov	x9, x22
  422c14:	subs	x22, x22, #0x1
  422c18:	b.lt	422c30 <_obstack_memory_used@@Base+0xa9a0>  // b.tstop
  422c1c:	ldr	x10, [x19, #24]
  422c20:	add	x10, x10, x9, lsl #3
  422c24:	ldur	x10, [x10, #-8]
  422c28:	cmp	x10, x25
  422c2c:	b.eq	422c10 <_obstack_memory_used@@Base+0xa980>  // b.none
  422c30:	cmp	x9, x8
  422c34:	b.ge	422c58 <_obstack_memory_used@@Base+0xa9c8>  // b.tcont
  422c38:	ldr	x10, [x19, #16]
  422c3c:	ldr	w11, [x10, x9, lsl #2]
  422c40:	cmn	w11, #0x1
  422c44:	b.ne	422c58 <_obstack_memory_used@@Base+0xa9c8>  // b.any
  422c48:	add	x9, x9, #0x1
  422c4c:	cmp	x8, x9
  422c50:	b.ne	422c3c <_obstack_memory_used@@Base+0xa9ac>  // b.any
  422c54:	b	422c60 <_obstack_memory_used@@Base+0xa9d0>
  422c58:	cmp	x9, x8
  422c5c:	b.ne	422c6c <_obstack_memory_used@@Base+0xa9dc>  // b.any
  422c60:	mov	x8, xzr
  422c64:	stp	xzr, xzr, [x19, #48]
  422c68:	b	4226a0 <_obstack_memory_used@@Base+0xa410>
  422c6c:	ldr	x8, [x19, #24]
  422c70:	ldr	x8, [x8, x9, lsl #3]
  422c74:	subs	x21, x8, x25
  422c78:	str	x21, [x19, #48]
  422c7c:	b.eq	422cdc <_obstack_memory_used@@Base+0xaa4c>  // b.none
  422c80:	cmp	x21, #0x1
  422c84:	b.lt	422c98 <_obstack_memory_used@@Base+0xaa08>  // b.tstop
  422c88:	ldr	x0, [x19, #16]
  422c8c:	lsl	x2, x21, #2
  422c90:	mov	w1, #0xff                  	// #255
  422c94:	bl	402470 <memset@plt>
  422c98:	ldr	x0, [x19, #8]
  422c9c:	mov	w1, #0xff                  	// #255
  422ca0:	mov	x2, x21
  422ca4:	bl	402470 <memset@plt>
  422ca8:	b	422d14 <_obstack_memory_used@@Base+0xaa84>
  422cac:	ldr	x9, [x19, #8]
  422cb0:	ldrb	w8, [x9, x8]
  422cb4:	ldr	x9, [x19, #128]
  422cb8:	lsr	x10, x8, #3
  422cbc:	and	x10, x10, #0x18
  422cc0:	ldr	x9, [x9, x10]
  422cc4:	lsr	x9, x9, x8
  422cc8:	tbz	w9, #0, 422d20 <_obstack_memory_used@@Base+0xaa90>
  422ccc:	mov	w8, #0x1                   	// #1
  422cd0:	b	422d08 <_obstack_memory_used@@Base+0xaa78>
  422cd4:	stp	x8, x8, [x19, #48]
  422cd8:	b	42270c <_obstack_memory_used@@Base+0xa47c>
  422cdc:	mov	x8, xzr
  422ce0:	str	xzr, [x19, #56]
  422ce4:	b	4226a0 <_obstack_memory_used@@Base+0xa410>
  422ce8:	mov	w8, wzr
  422cec:	str	w8, [x19, #112]
  422cf0:	b	4226a0 <_obstack_memory_used@@Base+0xa410>
  422cf4:	ldrb	w8, [x19, #142]
  422cf8:	cbnz	w8, 422e18 <_obstack_memory_used@@Base+0xab88>
  422cfc:	cmp	w21, #0xa
  422d00:	b.eq	422a78 <_obstack_memory_used@@Base+0xa7e8>  // b.none
  422d04:	mov	w8, wzr
  422d08:	ldr	x21, [x19, #48]
  422d0c:	str	w8, [x19, #112]
  422d10:	cbnz	x21, 422d60 <_obstack_memory_used@@Base+0xaad0>
  422d14:	ldr	x8, [x19, #48]
  422d18:	str	x8, [x19, #56]
  422d1c:	b	4226a0 <_obstack_memory_used@@Base+0xa410>
  422d20:	cmp	w8, #0xa
  422d24:	b.ne	422d04 <_obstack_memory_used@@Base+0xaa74>  // b.any
  422d28:	b	422a78 <_obstack_memory_used@@Base+0xa7e8>
  422d2c:	ldr	x10, [x19, #80]
  422d30:	ldr	x11, [x19, #96]
  422d34:	sub	x12, x25, x20
  422d38:	strb	wzr, [x19, #140]
  422d3c:	add	x10, x12, x10
  422d40:	add	x11, x12, x11
  422d44:	str	x10, [x19, #88]
  422d48:	str	x11, [x19, #104]
  422d4c:	b	42274c <_obstack_memory_used@@Base+0xa4bc>
  422d50:	and	w8, w21, #0x2
  422d54:	mov	w9, #0xa                   	// #10
  422d58:	eor	w9, w8, w9
  422d5c:	b	422b58 <_obstack_memory_used@@Base+0xa8c8>
  422d60:	cmp	x21, #0x1
  422d64:	b.lt	422d78 <_obstack_memory_used@@Base+0xaae8>  // b.tstop
  422d68:	ldr	x0, [x19, #16]
  422d6c:	lsl	x2, x21, #2
  422d70:	mov	w1, #0xff                  	// #255
  422d74:	bl	402470 <memset@plt>
  422d78:	ldrb	w8, [x19, #139]
  422d7c:	cbnz	w8, 422c98 <_obstack_memory_used@@Base+0xaa08>
  422d80:	b	422d14 <_obstack_memory_used@@Base+0xaa84>
  422d84:	and	w8, w21, #0x2
  422d88:	mov	w9, #0xa                   	// #10
  422d8c:	eor	w8, w8, w9
  422d90:	b	422d08 <_obstack_memory_used@@Base+0xaa78>
  422d94:	mov	w0, w21
  422d98:	bl	402710 <iswalnum@plt>
  422d9c:	cmp	w21, #0x5f
  422da0:	mov	w9, #0x1                   	// #1
  422da4:	b.eq	422b58 <_obstack_memory_used@@Base+0xa8c8>  // b.none
  422da8:	cbz	w0, 422a1c <_obstack_memory_used@@Base+0xa78c>
  422dac:	b	422b58 <_obstack_memory_used@@Base+0xa8c8>
  422db0:	mov	w0, w9
  422db4:	mov	w21, w9
  422db8:	bl	402710 <iswalnum@plt>
  422dbc:	cmp	w21, #0x5f
  422dc0:	mov	w8, #0x1                   	// #1
  422dc4:	b.eq	422d08 <_obstack_memory_used@@Base+0xaa78>  // b.none
  422dc8:	mov	w9, w21
  422dcc:	cbz	w0, 422a70 <_obstack_memory_used@@Base+0xa7e0>
  422dd0:	b	422d08 <_obstack_memory_used@@Base+0xaa78>
  422dd4:	cmp	x2, #0x6
  422dd8:	mov	w11, #0x6                   	// #6
  422ddc:	csel	x11, x2, x11, lt  // lt = tstop
  422de0:	cmp	w11, #0x1
  422de4:	add	x1, sp, #0xc
  422de8:	b.lt	4227c4 <_obstack_memory_used@@Base+0xa534>  // b.tstop
  422dec:	sxtw	x11, w11
  422df0:	sub	x12, x1, #0x1
  422df4:	add	x13, x8, x11
  422df8:	add	x13, x10, x13
  422dfc:	ldurb	w13, [x13, #-1]
  422e00:	add	x1, sp, #0xc
  422e04:	ldrb	w13, [x9, x13]
  422e08:	strb	w13, [x12, x11]
  422e0c:	subs	x11, x11, #0x1
  422e10:	b.gt	422df4 <_obstack_memory_used@@Base+0xab64>
  422e14:	b	4227c4 <_obstack_memory_used@@Base+0xa534>
  422e18:	mov	w0, w21
  422e1c:	bl	402710 <iswalnum@plt>
  422e20:	cmp	w21, #0x5f
  422e24:	mov	w8, #0x1                   	// #1
  422e28:	b.eq	422d08 <_obstack_memory_used@@Base+0xaa78>  // b.none
  422e2c:	cbz	w0, 422cfc <_obstack_memory_used@@Base+0xaa6c>
  422e30:	b	422d08 <_obstack_memory_used@@Base+0xaa78>
  422e34:	stp	x29, x30, [sp, #-64]!
  422e38:	stp	x22, x21, [sp, #32]
  422e3c:	stp	x20, x19, [sp, #48]
  422e40:	ldr	x8, [x0, #232]
  422e44:	mov	x19, x0
  422e48:	str	x23, [sp, #16]
  422e4c:	mov	x29, sp
  422e50:	cmp	x8, #0x1
  422e54:	b.lt	422edc <_obstack_memory_used@@Base+0xac4c>  // b.tstop
  422e58:	mov	x22, xzr
  422e5c:	b	422e78 <_obstack_memory_used@@Base+0xabe8>
  422e60:	mov	x0, x20
  422e64:	bl	402620 <free@plt>
  422e68:	ldr	x8, [x19, #232]
  422e6c:	add	x22, x22, #0x1
  422e70:	cmp	x22, x8
  422e74:	b.ge	422edc <_obstack_memory_used@@Base+0xac4c>  // b.tcont
  422e78:	ldr	x8, [x19, #248]
  422e7c:	ldr	x20, [x8, x22, lsl #3]
  422e80:	ldr	x8, [x20, #32]
  422e84:	cmp	x8, #0x1
  422e88:	b.lt	422eb8 <_obstack_memory_used@@Base+0xac28>  // b.tstop
  422e8c:	mov	x23, xzr
  422e90:	ldr	x8, [x20, #40]
  422e94:	ldr	x21, [x8, x23, lsl #3]
  422e98:	ldr	x0, [x21, #32]
  422e9c:	bl	402620 <free@plt>
  422ea0:	mov	x0, x21
  422ea4:	bl	402620 <free@plt>
  422ea8:	ldr	x8, [x20, #32]
  422eac:	add	x23, x23, #0x1
  422eb0:	cmp	x23, x8
  422eb4:	b.lt	422e90 <_obstack_memory_used@@Base+0xac00>  // b.tstop
  422eb8:	ldr	x0, [x20, #40]
  422ebc:	bl	402620 <free@plt>
  422ec0:	ldr	x8, [x20, #16]
  422ec4:	cbz	x8, 422e60 <_obstack_memory_used@@Base+0xabd0>
  422ec8:	ldr	x0, [x8, #16]
  422ecc:	bl	402620 <free@plt>
  422ed0:	ldr	x0, [x20, #16]
  422ed4:	bl	402620 <free@plt>
  422ed8:	b	422e60 <_obstack_memory_used@@Base+0xabd0>
  422edc:	str	xzr, [x19, #232]
  422ee0:	str	xzr, [x19, #200]
  422ee4:	ldp	x20, x19, [sp, #48]
  422ee8:	ldp	x22, x21, [sp, #32]
  422eec:	ldr	x23, [sp, #16]
  422ef0:	ldp	x29, x30, [sp], #64
  422ef4:	ret
  422ef8:	stp	x29, x30, [sp, #-96]!
  422efc:	stp	x28, x27, [sp, #16]
  422f00:	stp	x26, x25, [sp, #32]
  422f04:	stp	x24, x23, [sp, #48]
  422f08:	stp	x22, x21, [sp, #64]
  422f0c:	stp	x20, x19, [sp, #80]
  422f10:	mov	x29, sp
  422f14:	sub	sp, sp, #0x60
  422f18:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x12d70>
  422f1c:	add	x8, x8, #0x278
  422f20:	ldr	q0, [x8]
  422f24:	ldr	x8, [x8, #16]
  422f28:	ldr	x28, [x0]
  422f2c:	mov	x20, x3
  422f30:	mov	x26, x2
  422f34:	mov	x22, x1
  422f38:	stur	q0, [x29, #-32]
  422f3c:	stur	x8, [x29, #-16]
  422f40:	tbz	w4, #0, 422f5c <_obstack_memory_used@@Base+0xaccc>
  422f44:	mov	w0, #0x60                  	// #96
  422f48:	bl	4023a0 <malloc@plt>
  422f4c:	stur	x0, [x29, #-16]
  422f50:	cbz	x0, 42384c <_obstack_memory_used@@Base+0xb5bc>
  422f54:	sub	x19, x29, #0x20
  422f58:	b	422f60 <_obstack_memory_used@@Base+0xacd0>
  422f5c:	mov	x19, xzr
  422f60:	ldr	x23, [x28, #144]
  422f64:	lsl	x21, x26, #4
  422f68:	cmp	x21, #0xfbf
  422f6c:	b.hi	422f8c <_obstack_memory_used@@Base+0xacfc>  // b.pmore
  422f70:	add	x9, x21, #0xf
  422f74:	mov	x8, sp
  422f78:	and	x9, x9, #0xfffffffffffffff0
  422f7c:	sub	x0, x8, x9
  422f80:	mov	sp, x0
  422f84:	stur	wzr, [x29, #-60]
  422f88:	b	422fa0 <_obstack_memory_used@@Base+0xad10>
  422f8c:	mov	x0, x21
  422f90:	bl	4023a0 <malloc@plt>
  422f94:	cbz	x0, 4237f8 <_obstack_memory_used@@Base+0xb568>
  422f98:	mov	w8, #0x1                   	// #1
  422f9c:	stur	w8, [x29, #-60]
  422fa0:	mov	x1, x20
  422fa4:	mov	x2, x21
  422fa8:	stur	x0, [x29, #-72]
  422fac:	bl	402210 <memcpy@plt>
  422fb0:	ldp	x25, x8, [x20]
  422fb4:	cmp	x25, x8
  422fb8:	b.le	42302c <_obstack_memory_used@@Base+0xad9c>
  422fbc:	mov	x24, xzr
  422fc0:	mov	x0, x24
  422fc4:	bl	402620 <free@plt>
  422fc8:	ldur	w8, [x29, #-60]
  422fcc:	cbz	w8, 422fd8 <_obstack_memory_used@@Base+0xad48>
  422fd0:	ldur	x0, [x29, #-72]
  422fd4:	bl	402620 <free@plt>
  422fd8:	cbz	x19, 4237f0 <_obstack_memory_used@@Base+0xb560>
  422fdc:	ldr	x8, [x19]
  422fe0:	ldr	x0, [x19, #16]
  422fe4:	cmp	x8, #0x1
  422fe8:	b.lt	4237ec <_obstack_memory_used@@Base+0xb55c>  // b.tstop
  422fec:	mov	x20, xzr
  422ff0:	mov	x21, xzr
  422ff4:	add	x8, x0, x20
  422ff8:	ldr	x0, [x8, #40]
  422ffc:	bl	402620 <free@plt>
  423000:	ldr	x8, [x19, #16]
  423004:	add	x8, x8, x20
  423008:	ldr	x0, [x8, #16]
  42300c:	bl	402620 <free@plt>
  423010:	ldr	x8, [x19]
  423014:	ldr	x0, [x19, #16]
  423018:	add	x21, x21, #0x1
  42301c:	add	x20, x20, #0x30
  423020:	cmp	x21, x8
  423024:	b.lt	422ff4 <_obstack_memory_used@@Base+0xad64>  // b.tstop
  423028:	b	4237ec <_obstack_memory_used@@Base+0xb55c>
  42302c:	stp	x21, x26, [x29, #-56]
  423030:	mov	x24, xzr
  423034:	mov	x21, xzr
  423038:	mov	x18, xzr
  42303c:	add	x8, x20, #0x8
  423040:	stur	x8, [x29, #-80]
  423044:	stur	x28, [x29, #-40]
  423048:	b	4230c4 <_obstack_memory_used@@Base+0xae34>
  42304c:	cbz	x19, 423870 <_obstack_memory_used@@Base+0xb5e0>
  423050:	ldur	x28, [x29, #-40]
  423054:	ldr	x8, [x19]
  423058:	ldr	x9, [x19, #16]
  42305c:	ldur	x2, [x29, #-56]
  423060:	mov	x0, x20
  423064:	sub	x8, x8, #0x1
  423068:	str	x8, [x19]
  42306c:	add	x8, x8, x8, lsl #1
  423070:	lsl	x21, x8, #4
  423074:	add	x8, x9, x21
  423078:	ldr	x1, [x8, #16]
  42307c:	ldr	x25, [x8]
  423080:	bl	402210 <memcpy@plt>
  423084:	mov	x0, x24
  423088:	bl	402620 <free@plt>
  42308c:	ldr	x8, [x19, #16]
  423090:	add	x8, x8, x21
  423094:	ldr	x0, [x8, #16]
  423098:	bl	402620 <free@plt>
  42309c:	ldr	x8, [x19, #16]
  4230a0:	add	x8, x8, x21
  4230a4:	ldp	x18, x21, [x8, #24]
  4230a8:	ldr	x24, [x8, #40]
  4230ac:	ldr	x26, [x8, #8]
  4230b0:	ldr	x8, [x20, #8]
  4230b4:	mov	x23, x26
  4230b8:	ldur	x26, [x29, #-48]
  4230bc:	cmp	x25, x8
  4230c0:	b.gt	422fc0 <_obstack_memory_used@@Base+0xad30>
  4230c4:	ldr	x8, [x28]
  4230c8:	add	x8, x8, x23, lsl #4
  4230cc:	ldr	w9, [x8, #8]
  4230d0:	and	w10, w9, #0xff
  4230d4:	cmp	w10, #0x9
  4230d8:	b.eq	423104 <_obstack_memory_used@@Base+0xae74>  // b.none
  4230dc:	cmp	w10, #0x8
  4230e0:	b.ne	423170 <_obstack_memory_used@@Base+0xaee0>  // b.any
  4230e4:	ldr	x8, [x8]
  4230e8:	add	x8, x8, #0x1
  4230ec:	cmp	x8, x26
  4230f0:	b.ge	423170 <_obstack_memory_used@@Base+0xaee0>  // b.tcont
  4230f4:	add	x8, x20, x8, lsl #4
  4230f8:	mov	x9, #0xffffffffffffffff    	// #-1
  4230fc:	stp	x25, x9, [x8]
  423100:	b	423170 <_obstack_memory_used@@Base+0xaee0>
  423104:	ldr	x8, [x8]
  423108:	add	x8, x8, #0x1
  42310c:	cmp	x8, x26
  423110:	b.ge	423170 <_obstack_memory_used@@Base+0xaee0>  // b.tcont
  423114:	lsl	x10, x8, #4
  423118:	ldr	x11, [x20, x10]
  42311c:	cmp	x11, x25
  423120:	b.ge	423138 <_obstack_memory_used@@Base+0xaea8>  // b.tcont
  423124:	ldur	x0, [x29, #-72]
  423128:	add	x8, x20, x8, lsl #4
  42312c:	str	x25, [x8, #8]
  423130:	mov	x1, x20
  423134:	b	423154 <_obstack_memory_used@@Base+0xaec4>
  423138:	tbz	w9, #19, 423168 <_obstack_memory_used@@Base+0xaed8>
  42313c:	ldur	x9, [x29, #-72]
  423140:	ldr	x9, [x9, x10]
  423144:	cmn	x9, #0x1
  423148:	b.eq	423168 <_obstack_memory_used@@Base+0xaed8>  // b.none
  42314c:	ldur	x1, [x29, #-72]
  423150:	mov	x0, x20
  423154:	ldur	x2, [x29, #-56]
  423158:	mov	x27, x18
  42315c:	bl	402210 <memcpy@plt>
  423160:	mov	x18, x27
  423164:	b	423170 <_obstack_memory_used@@Base+0xaee0>
  423168:	add	x8, x20, x8, lsl #4
  42316c:	str	x25, [x8, #8]
  423170:	ldr	x8, [x20, #8]
  423174:	cmp	x25, x8
  423178:	b.ne	423218 <_obstack_memory_used@@Base+0xaf88>  // b.any
  42317c:	ldr	x8, [x22, #176]
  423180:	cmp	x23, x8
  423184:	b.ne	423218 <_obstack_memory_used@@Base+0xaf88>  // b.any
  423188:	cbz	x19, 423890 <_obstack_memory_used@@Base+0xb600>
  42318c:	ldur	x9, [x29, #-80]
  423190:	mov	x8, x26
  423194:	b	4231a4 <_obstack_memory_used@@Base+0xaf14>
  423198:	subs	x8, x8, #0x1
  42319c:	add	x9, x9, #0x10
  4231a0:	b.eq	423788 <_obstack_memory_used@@Base+0xb4f8>  // b.none
  4231a4:	ldur	x10, [x9, #-8]
  4231a8:	tbnz	x10, #63, 423198 <_obstack_memory_used@@Base+0xaf08>
  4231ac:	ldr	x10, [x9]
  4231b0:	cmn	x10, #0x1
  4231b4:	b.ne	423198 <_obstack_memory_used@@Base+0xaf08>  // b.any
  4231b8:	cbz	x8, 423788 <_obstack_memory_used@@Base+0xb4f8>
  4231bc:	ldr	x8, [x19]
  4231c0:	ldr	x9, [x19, #16]
  4231c4:	ldur	x2, [x29, #-56]
  4231c8:	mov	x0, x20
  4231cc:	sub	x8, x8, #0x1
  4231d0:	str	x8, [x19]
  4231d4:	add	x8, x8, x8, lsl #1
  4231d8:	lsl	x21, x8, #4
  4231dc:	add	x8, x9, x21
  4231e0:	ldr	x1, [x8, #16]
  4231e4:	ldr	x25, [x8]
  4231e8:	bl	402210 <memcpy@plt>
  4231ec:	mov	x0, x24
  4231f0:	bl	402620 <free@plt>
  4231f4:	ldr	x8, [x19, #16]
  4231f8:	add	x8, x8, x21
  4231fc:	ldr	x0, [x8, #16]
  423200:	bl	402620 <free@plt>
  423204:	ldr	x8, [x19, #16]
  423208:	add	x8, x8, x21
  42320c:	ldp	x18, x21, [x8, #24]
  423210:	ldr	x24, [x8, #40]
  423214:	ldr	x23, [x8, #8]
  423218:	ldr	x27, [x22, #152]
  42321c:	ldr	x8, [x27]
  423220:	add	x9, x8, x23, lsl #4
  423224:	ldr	w9, [x9, #8]
  423228:	tbnz	w9, #3, 4232d0 <_obstack_memory_used@@Base+0xb040>
  42322c:	tbnz	w9, #20, 4232ec <_obstack_memory_used@@Base+0xb05c>
  423230:	and	w9, w9, #0xff
  423234:	cmp	w9, #0x4
  423238:	b.ne	423310 <_obstack_memory_used@@Base+0xb080>  // b.any
  42323c:	lsl	x9, x23, #4
  423240:	ldr	x8, [x8, x9]
  423244:	add	x8, x8, #0x1
  423248:	cmp	x8, x26
  42324c:	b.ge	4234ac <_obstack_memory_used@@Base+0xb21c>  // b.tcont
  423250:	add	x9, x20, x8, lsl #4
  423254:	ldp	x9, x10, [x9]
  423258:	sub	x28, x10, x9
  42325c:	cbz	x19, 4234b4 <_obstack_memory_used@@Base+0xb224>
  423260:	cmp	x8, x26
  423264:	b.ge	423050 <_obstack_memory_used@@Base+0xadc0>  // b.tcont
  423268:	lsl	x9, x8, #4
  42326c:	ldr	x9, [x20, x9]
  423270:	cmn	x9, #0x1
  423274:	b.eq	423050 <_obstack_memory_used@@Base+0xadc0>  // b.none
  423278:	add	x8, x20, x8, lsl #4
  42327c:	ldr	x8, [x8, #8]
  423280:	cmn	x8, #0x1
  423284:	b.eq	423050 <_obstack_memory_used@@Base+0xadc0>  // b.none
  423288:	cbz	x28, 42351c <_obstack_memory_used@@Base+0xb28c>
  42328c:	ldr	x8, [x22, #48]
  423290:	sub	x8, x8, x25
  423294:	cmp	x8, x28
  423298:	b.lt	423050 <_obstack_memory_used@@Base+0xadc0>  // b.tstop
  42329c:	ldr	x8, [x22, #8]
  4232a0:	mov	x2, x28
  4232a4:	mov	x21, x18
  4232a8:	add	x0, x8, x9
  4232ac:	add	x1, x8, x25
  4232b0:	bl	402490 <bcmp@plt>
  4232b4:	cbnz	w0, 423050 <_obstack_memory_used@@Base+0xadc0>
  4232b8:	ldr	x8, [x27, #24]
  4232bc:	add	x25, x28, x25
  4232c0:	ldur	x28, [x29, #-40]
  4232c4:	mov	x18, x21
  4232c8:	ldr	x26, [x8, x23, lsl #3]
  4232cc:	b	423348 <_obstack_memory_used@@Base+0xb0b8>
  4232d0:	ldr	x8, [x22, #184]
  4232d4:	ldr	x26, [x27, #40]
  4232d8:	ldr	x28, [x8, x25, lsl #3]
  4232dc:	cbz	x18, 4233ac <_obstack_memory_used@@Base+0xb11c>
  4232e0:	cbnz	x21, 42364c <_obstack_memory_used@@Base+0xb3bc>
  4232e4:	str	x23, [x24]
  4232e8:	b	4233c4 <_obstack_memory_used@@Base+0xb134>
  4232ec:	mov	x0, x27
  4232f0:	mov	x1, x23
  4232f4:	mov	x2, x22
  4232f8:	mov	x3, x25
  4232fc:	mov	x21, x18
  423300:	bl	425c9c <_obstack_memory_used@@Base+0xda0c>
  423304:	mov	x18, x21
  423308:	sxtw	x28, w0
  42330c:	cbnz	x28, 423334 <_obstack_memory_used@@Base+0xb0a4>
  423310:	ldr	x8, [x27]
  423314:	mov	x0, x22
  423318:	mov	x2, x25
  42331c:	mov	x21, x18
  423320:	add	x1, x8, x23, lsl #4
  423324:	bl	425fb4 <_obstack_memory_used@@Base+0xdd24>
  423328:	tbz	w0, #0, 42304c <_obstack_memory_used@@Base+0xadbc>
  42332c:	mov	w28, #0x1                   	// #1
  423330:	mov	x18, x21
  423334:	ldr	x8, [x27, #24]
  423338:	add	x25, x28, x25
  42333c:	ldr	x26, [x8, x23, lsl #3]
  423340:	cbz	x19, 42345c <_obstack_memory_used@@Base+0xb1cc>
  423344:	ldur	x28, [x29, #-40]
  423348:	ldr	x8, [x22, #168]
  42334c:	cmp	x25, x8
  423350:	b.gt	423054 <_obstack_memory_used@@Base+0xadc4>
  423354:	ldr	x8, [x22, #184]
  423358:	ldr	x8, [x8, x25, lsl #3]
  42335c:	cbz	x8, 423054 <_obstack_memory_used@@Base+0xadc4>
  423360:	ldr	x9, [x8, #16]
  423364:	subs	x9, x9, #0x1
  423368:	b.lt	423054 <_obstack_memory_used@@Base+0xadc4>  // b.tstop
  42336c:	ldr	x8, [x8, #24]
  423370:	mov	x10, xzr
  423374:	b.eq	423398 <_obstack_memory_used@@Base+0xb108>  // b.none
  423378:	add	x11, x10, x9
  42337c:	lsr	x11, x11, #1
  423380:	ldr	x12, [x8, x11, lsl #3]
  423384:	cmp	x12, x26
  423388:	csinc	x10, x10, x11, ge  // ge = tcont
  42338c:	csel	x9, x9, x11, lt  // lt = tstop
  423390:	cmp	x10, x9
  423394:	b.cc	423378 <_obstack_memory_used@@Base+0xb0e8>  // b.lo, b.ul, b.last
  423398:	ldr	x8, [x8, x10, lsl #3]
  42339c:	cmp	x8, x26
  4233a0:	b.ne	42304c <_obstack_memory_used@@Base+0xadbc>  // b.any
  4233a4:	mov	x21, xzr
  4233a8:	b	4234cc <_obstack_memory_used@@Base+0xb23c>
  4233ac:	mov	w0, #0x8                   	// #8
  4233b0:	bl	4023a0 <malloc@plt>
  4233b4:	mov	x24, x0
  4233b8:	cbz	x0, 4238ac <_obstack_memory_used@@Base+0xb61c>
  4233bc:	str	x23, [x24]
  4233c0:	mov	w18, #0x1                   	// #1
  4233c4:	mov	w21, #0x1                   	// #1
  4233c8:	mov	w11, #0x18                  	// #24
  4233cc:	madd	x8, x23, x11, x26
  4233d0:	ldr	x8, [x8, #8]
  4233d4:	cmp	x8, #0x1
  4233d8:	b.lt	42304c <_obstack_memory_used@@Base+0xadbc>  // b.tstop
  4233dc:	ldr	x10, [x28, #16]
  4233e0:	madd	x11, x23, x11, x26
  4233e4:	ldr	x11, [x11, #16]
  4233e8:	mov	x9, xzr
  4233ec:	sub	x12, x10, #0x1
  4233f0:	mov	x26, #0xffffffffffffffff    	// #-1
  4233f4:	b	423404 <_obstack_memory_used@@Base+0xb174>
  4233f8:	add	x9, x9, #0x1
  4233fc:	cmp	x9, x8
  423400:	b.eq	4234c8 <_obstack_memory_used@@Base+0xb238>  // b.none
  423404:	cmp	x10, #0x1
  423408:	b.lt	4233f8 <_obstack_memory_used@@Base+0xb168>  // b.tstop
  42340c:	ldr	x27, [x11, x9, lsl #3]
  423410:	ldr	x13, [x28, #24]
  423414:	mov	x14, xzr
  423418:	cbz	x12, 423440 <_obstack_memory_used@@Base+0xb1b0>
  42341c:	mov	x15, x12
  423420:	add	x16, x14, x15
  423424:	lsr	x16, x16, #1
  423428:	ldr	x17, [x13, x16, lsl #3]
  42342c:	cmp	x17, x27
  423430:	csinc	x14, x14, x16, ge  // ge = tcont
  423434:	csel	x15, x15, x16, lt  // lt = tstop
  423438:	cmp	x14, x15
  42343c:	b.cc	423420 <_obstack_memory_used@@Base+0xb190>  // b.lo, b.ul, b.last
  423440:	ldr	x13, [x13, x14, lsl #3]
  423444:	cmp	x13, x27
  423448:	b.ne	4233f8 <_obstack_memory_used@@Base+0xb168>  // b.any
  42344c:	cmn	x26, #0x1
  423450:	b.ne	423464 <_obstack_memory_used@@Base+0xb1d4>  // b.any
  423454:	mov	x26, x27
  423458:	b	4233f8 <_obstack_memory_used@@Base+0xb168>
  42345c:	mov	x21, xzr
  423460:	b	4234c8 <_obstack_memory_used@@Base+0xb238>
  423464:	ldur	x28, [x29, #-40]
  423468:	subs	x8, x21, #0x1
  42346c:	b.lt	4234dc <_obstack_memory_used@@Base+0xb24c>  // b.tstop
  423470:	mov	x9, xzr
  423474:	b.eq	423498 <_obstack_memory_used@@Base+0xb208>  // b.none
  423478:	add	x10, x9, x8
  42347c:	lsr	x10, x10, #1
  423480:	ldr	x11, [x24, x10, lsl #3]
  423484:	cmp	x11, x26
  423488:	csinc	x9, x9, x10, ge  // ge = tcont
  42348c:	csel	x8, x8, x10, lt  // lt = tstop
  423490:	cmp	x9, x8
  423494:	b.cc	423478 <_obstack_memory_used@@Base+0xb1e8>  // b.lo, b.ul, b.last
  423498:	ldr	x8, [x24, x9, lsl #3]
  42349c:	cmp	x8, x26
  4234a0:	b.ne	4234dc <_obstack_memory_used@@Base+0xb24c>  // b.any
  4234a4:	mov	x26, x27
  4234a8:	b	4234cc <_obstack_memory_used@@Base+0xb23c>
  4234ac:	mov	x28, xzr
  4234b0:	cbnz	x19, 423260 <_obstack_memory_used@@Base+0xafd0>
  4234b4:	cbz	x28, 42351c <_obstack_memory_used@@Base+0xb28c>
  4234b8:	ldr	x8, [x27, #24]
  4234bc:	mov	x21, xzr
  4234c0:	add	x25, x28, x25
  4234c4:	ldr	x26, [x8, x23, lsl #3]
  4234c8:	ldur	x28, [x29, #-40]
  4234cc:	tbz	x26, #63, 4230b0 <_obstack_memory_used@@Base+0xae20>
  4234d0:	cmn	x26, #0x2
  4234d4:	b.ne	42304c <_obstack_memory_used@@Base+0xadbc>  // b.any
  4234d8:	b	4238ac <_obstack_memory_used@@Base+0xb61c>
  4234dc:	cbz	x19, 4234cc <_obstack_memory_used@@Base+0xb23c>
  4234e0:	stp	x18, x21, [x29, #-96]
  4234e4:	ldp	x23, x9, [x19]
  4234e8:	add	x8, x23, #0x1
  4234ec:	cmp	x8, x9
  4234f0:	str	x8, [x19]
  4234f4:	b.ne	42352c <_obstack_memory_used@@Base+0xb29c>  // b.any
  4234f8:	ldr	x0, [x19, #16]
  4234fc:	add	x8, x8, x8, lsl #1
  423500:	lsl	x1, x8, #5
  423504:	bl	4024c0 <realloc@plt>
  423508:	cbz	x0, 4238ac <_obstack_memory_used@@Base+0xb61c>
  42350c:	ldr	x8, [x19, #8]
  423510:	lsl	x8, x8, #1
  423514:	stp	x8, x0, [x19, #8]
  423518:	b	423530 <_obstack_memory_used@@Base+0xb2a0>
  42351c:	cbz	x18, 4235cc <_obstack_memory_used@@Base+0xb33c>
  423520:	cbnz	x21, 4236e0 <_obstack_memory_used@@Base+0xb450>
  423524:	str	x23, [x24]
  423528:	b	4235e4 <_obstack_memory_used@@Base+0xb354>
  42352c:	ldr	x0, [x19, #16]
  423530:	mov	w8, #0x30                  	// #48
  423534:	madd	x28, x23, x8, x0
  423538:	stp	x25, x27, [x28]
  42353c:	ldur	x27, [x29, #-56]
  423540:	mov	x21, x0
  423544:	mov	x0, x27
  423548:	bl	4023a0 <malloc@plt>
  42354c:	str	x0, [x28, #16]
  423550:	cbz	x0, 4238ac <_obstack_memory_used@@Base+0xb61c>
  423554:	mov	x1, x20
  423558:	mov	x2, x27
  42355c:	bl	402210 <memcpy@plt>
  423560:	ldur	x9, [x29, #-88]
  423564:	mov	w8, #0x30                  	// #48
  423568:	madd	x8, x23, x8, x21
  42356c:	add	x28, x8, #0x18
  423570:	cmp	x9, #0x1
  423574:	str	x9, [x8, #32]
  423578:	b.lt	4235b4 <_obstack_memory_used@@Base+0xb324>  // b.tstop
  42357c:	lsl	x27, x9, #3
  423580:	mov	x0, x27
  423584:	str	x9, [x28]
  423588:	bl	4023a0 <malloc@plt>
  42358c:	mov	w8, #0x30                  	// #48
  423590:	madd	x8, x23, x8, x21
  423594:	str	x0, [x8, #40]
  423598:	cbz	x0, 4238a8 <_obstack_memory_used@@Base+0xb618>
  42359c:	mov	x1, x24
  4235a0:	mov	x2, x27
  4235a4:	bl	402210 <memcpy@plt>
  4235a8:	ldur	x28, [x29, #-40]
  4235ac:	ldp	x18, x21, [x29, #-96]
  4235b0:	b	4234cc <_obstack_memory_used@@Base+0xb23c>
  4235b4:	stp	xzr, xzr, [x28]
  4235b8:	str	xzr, [x28, #16]
  4235bc:	ldur	x28, [x29, #-40]
  4235c0:	ldur	x18, [x29, #-96]
  4235c4:	mov	x21, x9
  4235c8:	b	4234cc <_obstack_memory_used@@Base+0xb23c>
  4235cc:	mov	w0, #0x8                   	// #8
  4235d0:	bl	4023a0 <malloc@plt>
  4235d4:	mov	x24, x0
  4235d8:	cbz	x0, 4238ac <_obstack_memory_used@@Base+0xb61c>
  4235dc:	str	x23, [x24]
  4235e0:	mov	w18, #0x1                   	// #1
  4235e4:	mov	w21, #0x1                   	// #1
  4235e8:	ldr	x8, [x22, #184]
  4235ec:	ldr	x8, [x8, x25, lsl #3]
  4235f0:	ldr	x9, [x8, #16]
  4235f4:	subs	x9, x9, #0x1
  4235f8:	b.lt	423310 <_obstack_memory_used@@Base+0xb080>  // b.tstop
  4235fc:	ldr	x10, [x27, #40]
  423600:	mov	w11, #0x18                  	// #24
  423604:	ldr	x8, [x8, #24]
  423608:	madd	x10, x23, x11, x10
  42360c:	ldr	x10, [x10, #16]
  423610:	ldr	x26, [x10]
  423614:	mov	x10, xzr
  423618:	b.eq	42363c <_obstack_memory_used@@Base+0xb3ac>  // b.none
  42361c:	add	x11, x10, x9
  423620:	lsr	x11, x11, #1
  423624:	ldr	x12, [x8, x11, lsl #3]
  423628:	cmp	x12, x26
  42362c:	csinc	x10, x10, x11, ge  // ge = tcont
  423630:	csel	x9, x9, x11, lt  // lt = tstop
  423634:	cmp	x10, x9
  423638:	b.cc	42361c <_obstack_memory_used@@Base+0xb38c>  // b.lo, b.ul, b.last
  42363c:	ldr	x8, [x8, x10, lsl #3]
  423640:	cmp	x8, x26
  423644:	b.ne	42330c <_obstack_memory_used@@Base+0xb07c>  // b.any
  423648:	b	4234c8 <_obstack_memory_used@@Base+0xb238>
  42364c:	cmp	x18, x21
  423650:	b.ne	423670 <_obstack_memory_used@@Base+0xb3e0>  // b.any
  423654:	lsl	x1, x18, #4
  423658:	mov	x0, x24
  42365c:	mov	x27, x18
  423660:	bl	4024c0 <realloc@plt>
  423664:	cbz	x0, 4238ac <_obstack_memory_used@@Base+0xb61c>
  423668:	lsl	x18, x27, #1
  42366c:	mov	x24, x0
  423670:	ldr	x8, [x24]
  423674:	cmp	x8, x23
  423678:	b.le	4236a8 <_obstack_memory_used@@Base+0xb418>
  42367c:	cmp	x21, #0x1
  423680:	mov	x8, x21
  423684:	b.lt	4236d4 <_obstack_memory_used@@Base+0xb444>  // b.tstop
  423688:	mov	x9, x21
  42368c:	add	x10, x24, x9, lsl #3
  423690:	ldur	x11, [x10, #-8]
  423694:	subs	x8, x9, #0x1
  423698:	mov	x9, x8
  42369c:	str	x11, [x10]
  4236a0:	b.gt	42368c <_obstack_memory_used@@Base+0xb3fc>
  4236a4:	b	4236d4 <_obstack_memory_used@@Base+0xb444>
  4236a8:	add	x8, x24, x21, lsl #3
  4236ac:	ldur	x9, [x8, #-8]
  4236b0:	mov	x8, x21
  4236b4:	cmp	x9, x23
  4236b8:	b.le	4236d4 <_obstack_memory_used@@Base+0xb444>
  4236bc:	add	x10, x24, x8, lsl #3
  4236c0:	str	x9, [x10]
  4236c4:	ldur	x9, [x10, #-16]
  4236c8:	sub	x8, x8, #0x1
  4236cc:	cmp	x9, x23
  4236d0:	b.gt	4236bc <_obstack_memory_used@@Base+0xb42c>
  4236d4:	add	x21, x21, #0x1
  4236d8:	str	x23, [x24, x8, lsl #3]
  4236dc:	b	4233c8 <_obstack_memory_used@@Base+0xb138>
  4236e0:	mov	x12, x18
  4236e4:	cmp	x18, x21
  4236e8:	stur	x21, [x29, #-88]
  4236ec:	b.ne	42370c <_obstack_memory_used@@Base+0xb47c>  // b.any
  4236f0:	lsl	x1, x12, #4
  4236f4:	mov	x0, x24
  4236f8:	mov	x26, x12
  4236fc:	bl	4024c0 <realloc@plt>
  423700:	cbz	x0, 4238ac <_obstack_memory_used@@Base+0xb61c>
  423704:	lsl	x12, x26, #1
  423708:	mov	x24, x0
  42370c:	ldr	x8, [x24]
  423710:	cmp	x8, x23
  423714:	b.le	423744 <_obstack_memory_used@@Base+0xb4b4>
  423718:	ldur	x8, [x29, #-88]
  42371c:	cmp	x8, #0x1
  423720:	b.lt	423774 <_obstack_memory_used@@Base+0xb4e4>  // b.tstop
  423724:	ldur	x9, [x29, #-88]
  423728:	add	x10, x24, x9, lsl #3
  42372c:	ldur	x11, [x10, #-8]
  423730:	subs	x8, x9, #0x1
  423734:	mov	x9, x8
  423738:	str	x11, [x10]
  42373c:	b.gt	423728 <_obstack_memory_used@@Base+0xb498>
  423740:	b	423774 <_obstack_memory_used@@Base+0xb4e4>
  423744:	ldur	x10, [x29, #-88]
  423748:	add	x8, x24, x10, lsl #3
  42374c:	ldur	x9, [x8, #-8]
  423750:	mov	x8, x10
  423754:	cmp	x9, x23
  423758:	b.le	423774 <_obstack_memory_used@@Base+0xb4e4>
  42375c:	add	x10, x24, x8, lsl #3
  423760:	str	x9, [x10]
  423764:	ldur	x9, [x10, #-16]
  423768:	sub	x8, x8, #0x1
  42376c:	cmp	x9, x23
  423770:	b.gt	42375c <_obstack_memory_used@@Base+0xb4cc>
  423774:	ldur	x21, [x29, #-88]
  423778:	mov	x18, x12
  42377c:	str	x23, [x24, x8, lsl #3]
  423780:	add	x21, x21, #0x1
  423784:	b	4235e8 <_obstack_memory_used@@Base+0xb358>
  423788:	mov	x0, x24
  42378c:	bl	402620 <free@plt>
  423790:	ldur	w8, [x29, #-60]
  423794:	cbz	w8, 4237a0 <_obstack_memory_used@@Base+0xb510>
  423798:	ldur	x0, [x29, #-72]
  42379c:	bl	402620 <free@plt>
  4237a0:	ldr	x8, [x19]
  4237a4:	ldr	x0, [x19, #16]
  4237a8:	cmp	x8, #0x1
  4237ac:	b.lt	4237ec <_obstack_memory_used@@Base+0xb55c>  // b.tstop
  4237b0:	mov	x20, xzr
  4237b4:	mov	x21, xzr
  4237b8:	add	x8, x0, x20
  4237bc:	ldr	x0, [x8, #40]
  4237c0:	bl	402620 <free@plt>
  4237c4:	ldr	x8, [x19, #16]
  4237c8:	add	x8, x8, x20
  4237cc:	ldr	x0, [x8, #16]
  4237d0:	bl	402620 <free@plt>
  4237d4:	ldr	x8, [x19]
  4237d8:	ldr	x0, [x19, #16]
  4237dc:	add	x21, x21, #0x1
  4237e0:	add	x20, x20, #0x30
  4237e4:	cmp	x21, x8
  4237e8:	b.lt	4237b8 <_obstack_memory_used@@Base+0xb528>  // b.tstop
  4237ec:	bl	402620 <free@plt>
  4237f0:	mov	w0, wzr
  4237f4:	b	423850 <_obstack_memory_used@@Base+0xb5c0>
  4237f8:	cbz	x19, 42384c <_obstack_memory_used@@Base+0xb5bc>
  4237fc:	ldr	x8, [x19]
  423800:	ldr	x0, [x19, #16]
  423804:	cmp	x8, #0x1
  423808:	b.lt	423848 <_obstack_memory_used@@Base+0xb5b8>  // b.tstop
  42380c:	mov	x20, xzr
  423810:	mov	x21, xzr
  423814:	add	x8, x0, x20
  423818:	ldr	x0, [x8, #40]
  42381c:	bl	402620 <free@plt>
  423820:	ldr	x8, [x19, #16]
  423824:	add	x8, x8, x20
  423828:	ldr	x0, [x8, #16]
  42382c:	bl	402620 <free@plt>
  423830:	ldr	x8, [x19]
  423834:	ldr	x0, [x19, #16]
  423838:	add	x21, x21, #0x1
  42383c:	add	x20, x20, #0x30
  423840:	cmp	x21, x8
  423844:	b.lt	423814 <_obstack_memory_used@@Base+0xb584>  // b.tstop
  423848:	bl	402620 <free@plt>
  42384c:	mov	w0, #0xc                   	// #12
  423850:	mov	sp, x29
  423854:	ldp	x20, x19, [sp, #80]
  423858:	ldp	x22, x21, [sp, #64]
  42385c:	ldp	x24, x23, [sp, #48]
  423860:	ldp	x26, x25, [sp, #32]
  423864:	ldp	x28, x27, [sp, #16]
  423868:	ldp	x29, x30, [sp], #96
  42386c:	ret
  423870:	mov	x0, x24
  423874:	bl	402620 <free@plt>
  423878:	ldur	w8, [x29, #-60]
  42387c:	cbz	w8, 423888 <_obstack_memory_used@@Base+0xb5f8>
  423880:	ldur	x0, [x29, #-72]
  423884:	bl	402620 <free@plt>
  423888:	mov	w0, #0x1                   	// #1
  42388c:	b	423850 <_obstack_memory_used@@Base+0xb5c0>
  423890:	mov	x0, x24
  423894:	bl	402620 <free@plt>
  423898:	ldur	w8, [x29, #-60]
  42389c:	cbz	w8, 4237f0 <_obstack_memory_used@@Base+0xb560>
  4238a0:	ldur	x0, [x29, #-72]
  4238a4:	b	4237ec <_obstack_memory_used@@Base+0xb55c>
  4238a8:	stp	xzr, xzr, [x28]
  4238ac:	mov	x0, x24
  4238b0:	bl	402620 <free@plt>
  4238b4:	ldur	w8, [x29, #-60]
  4238b8:	cbz	w8, 4238c4 <_obstack_memory_used@@Base+0xb634>
  4238bc:	ldur	x0, [x29, #-72]
  4238c0:	bl	402620 <free@plt>
  4238c4:	cbz	x19, 42384c <_obstack_memory_used@@Base+0xb5bc>
  4238c8:	ldr	x8, [x19]
  4238cc:	ldr	x0, [x19, #16]
  4238d0:	cmp	x8, #0x1
  4238d4:	b.lt	423848 <_obstack_memory_used@@Base+0xb5b8>  // b.tstop
  4238d8:	mov	x20, xzr
  4238dc:	mov	x21, xzr
  4238e0:	add	x8, x0, x20
  4238e4:	ldr	x0, [x8, #40]
  4238e8:	bl	402620 <free@plt>
  4238ec:	ldr	x8, [x19, #16]
  4238f0:	add	x8, x8, x20
  4238f4:	ldr	x0, [x8, #16]
  4238f8:	bl	402620 <free@plt>
  4238fc:	ldr	x8, [x19]
  423900:	ldr	x0, [x19, #16]
  423904:	add	x21, x21, #0x1
  423908:	add	x20, x20, #0x30
  42390c:	cmp	x21, x8
  423910:	b.lt	4238e0 <_obstack_memory_used@@Base+0xb650>  // b.tstop
  423914:	b	423848 <_obstack_memory_used@@Base+0xb5b8>
  423918:	stp	x29, x30, [sp, #-80]!
  42391c:	stp	x26, x25, [sp, #16]
  423920:	stp	x24, x23, [sp, #32]
  423924:	stp	x22, x21, [sp, #48]
  423928:	stp	x20, x19, [sp, #64]
  42392c:	ldr	x8, [x1, #8]
  423930:	mov	x29, sp
  423934:	cmp	x8, #0x1
  423938:	b.lt	423a04 <_obstack_memory_used@@Base+0xb774>  // b.tstop
  42393c:	ldr	x23, [x0, #152]
  423940:	mov	x19, x2
  423944:	mov	x20, x1
  423948:	mov	x21, x0
  42394c:	mov	x24, xzr
  423950:	b	423974 <_obstack_memory_used@@Base+0xb6e4>
  423954:	add	x8, x8, #0x1
  423958:	str	x25, [x9, #8]
  42395c:	str	x8, [x21, #232]
  423960:	str	x19, [x9]
  423964:	ldr	x8, [x20, #8]
  423968:	add	x24, x24, #0x1
  42396c:	cmp	x24, x8
  423970:	b.ge	423a04 <_obstack_memory_used@@Base+0xb774>  // b.tcont
  423974:	ldr	x9, [x20, #16]
  423978:	ldr	x25, [x9, x24, lsl #3]
  42397c:	ldr	x9, [x23]
  423980:	add	x10, x9, x25, lsl #4
  423984:	ldrb	w10, [x10, #8]
  423988:	cmp	w10, #0x8
  42398c:	b.ne	423968 <_obstack_memory_used@@Base+0xb6d8>  // b.any
  423990:	lsl	x10, x25, #4
  423994:	ldr	x9, [x9, x10]
  423998:	cmp	x9, #0x3f
  42399c:	b.gt	423968 <_obstack_memory_used@@Base+0xb6d8>
  4239a0:	ldr	x10, [x23, #160]
  4239a4:	lsr	x9, x10, x9
  4239a8:	tbz	w9, #0, 423968 <_obstack_memory_used@@Base+0xb6d8>
  4239ac:	ldp	x8, x26, [x21, #232]
  4239b0:	ldr	x22, [x21, #248]
  4239b4:	cmp	x8, x26
  4239b8:	b.eq	4239e4 <_obstack_memory_used@@Base+0xb754>  // b.none
  4239bc:	mov	w0, #0x1                   	// #1
  4239c0:	mov	w1, #0x30                  	// #48
  4239c4:	bl	402480 <calloc@plt>
  4239c8:	ldr	x8, [x21, #232]
  4239cc:	lsl	x9, x8, #3
  4239d0:	str	x0, [x22, x9]
  4239d4:	ldr	x10, [x21, #248]
  4239d8:	ldr	x9, [x10, x9]
  4239dc:	cbnz	x9, 423954 <_obstack_memory_used@@Base+0xb6c4>
  4239e0:	b	423a20 <_obstack_memory_used@@Base+0xb790>
  4239e4:	lsl	x1, x26, #4
  4239e8:	mov	x0, x22
  4239ec:	bl	4024c0 <realloc@plt>
  4239f0:	cbz	x0, 423a20 <_obstack_memory_used@@Base+0xb790>
  4239f4:	mov	x22, x0
  4239f8:	lsl	x8, x26, #1
  4239fc:	stp	x8, x0, [x21, #240]
  423a00:	b	4239bc <_obstack_memory_used@@Base+0xb72c>
  423a04:	mov	w0, wzr
  423a08:	ldp	x20, x19, [sp, #64]
  423a0c:	ldp	x22, x21, [sp, #48]
  423a10:	ldp	x24, x23, [sp, #32]
  423a14:	ldp	x26, x25, [sp, #16]
  423a18:	ldp	x29, x30, [sp], #80
  423a1c:	ret
  423a20:	mov	w0, #0xc                   	// #12
  423a24:	b	423a08 <_obstack_memory_used@@Base+0xb778>
  423a28:	sub	sp, sp, #0xd0
  423a2c:	stp	x29, x30, [sp, #112]
  423a30:	stp	x28, x27, [sp, #128]
  423a34:	stp	x26, x25, [sp, #144]
  423a38:	stp	x24, x23, [sp, #160]
  423a3c:	stp	x22, x21, [sp, #176]
  423a40:	stp	x20, x19, [sp, #192]
  423a44:	ldr	x8, [x1, #8]
  423a48:	add	x29, sp, #0x70
  423a4c:	cmp	x8, #0x1
  423a50:	b.lt	424278 <_obstack_memory_used@@Base+0xbfe8>  // b.tstop
  423a54:	ldr	x10, [x0, #152]
  423a58:	ldr	x8, [x0, #72]
  423a5c:	mov	x23, x1
  423a60:	mov	x28, x0
  423a64:	mov	x9, xzr
  423a68:	stur	x8, [x29, #-48]
  423a6c:	str	x1, [sp]
  423a70:	str	x10, [sp, #32]
  423a74:	b	423a8c <_obstack_memory_used@@Base+0xb7fc>
  423a78:	ldp	x9, x10, [sp, #24]
  423a7c:	ldr	x8, [x23, #8]
  423a80:	add	x9, x9, #0x1
  423a84:	cmp	x9, x8
  423a88:	b.ge	424278 <_obstack_memory_used@@Base+0xbfe8>  // b.tcont
  423a8c:	ldr	x8, [x23, #16]
  423a90:	str	x9, [sp, #24]
  423a94:	ldr	x9, [x8, x9, lsl #3]
  423a98:	ldr	x8, [x10]
  423a9c:	stur	x9, [x29, #-40]
  423aa0:	add	x19, x8, x9, lsl #4
  423aa4:	ldr	w21, [x19, #8]!
  423aa8:	and	w8, w21, #0xff
  423aac:	cmp	w8, #0x4
  423ab0:	b.ne	423a78 <_obstack_memory_used@@Base+0xb7e8>  // b.any
  423ab4:	tst	w21, #0x3ff00
  423ab8:	b.eq	423b88 <_obstack_memory_used@@Base+0xb8f8>  // b.none
  423abc:	ldur	x9, [x29, #-48]
  423ac0:	tbnz	x9, #63, 423af8 <_obstack_memory_used@@Base+0xb868>
  423ac4:	ldr	x8, [x28, #88]
  423ac8:	cmp	x8, x9
  423acc:	b.eq	424244 <_obstack_memory_used@@Base+0xbfb4>  // b.none
  423ad0:	ldr	w8, [x28, #144]
  423ad4:	cmp	w8, #0x2
  423ad8:	b.lt	423b00 <_obstack_memory_used@@Base+0xb870>  // b.tstop
  423adc:	ldr	x8, [x28, #16]
  423ae0:	ldr	w24, [x8, x9, lsl #2]
  423ae4:	cmn	w24, #0x1
  423ae8:	b.ne	423b2c <_obstack_memory_used@@Base+0xb89c>  // b.any
  423aec:	sub	x9, x9, #0x1
  423af0:	cmn	x9, #0x1
  423af4:	b.ne	423ae0 <_obstack_memory_used@@Base+0xb850>  // b.any
  423af8:	ldr	w8, [x28, #112]
  423afc:	b	423b5c <_obstack_memory_used@@Base+0xb8cc>
  423b00:	ldr	x8, [x28, #8]
  423b04:	ldrb	w8, [x8, x9]
  423b08:	ldr	x9, [x28, #128]
  423b0c:	lsr	x10, x8, #3
  423b10:	and	x10, x10, #0x18
  423b14:	ldr	x9, [x9, x10]
  423b18:	lsr	x9, x9, x8
  423b1c:	tbz	w9, #0, 423b50 <_obstack_memory_used@@Base+0xb8c0>
  423b20:	mov	w9, wzr
  423b24:	mov	w8, #0x1                   	// #1
  423b28:	b	423b6c <_obstack_memory_used@@Base+0xb8dc>
  423b2c:	ldrb	w8, [x28, #142]
  423b30:	cbnz	w8, 424258 <_obstack_memory_used@@Base+0xbfc8>
  423b34:	cmp	w24, #0xa
  423b38:	b.ne	423b58 <_obstack_memory_used@@Base+0xb8c8>  // b.any
  423b3c:	ldrb	w8, [x28, #141]
  423b40:	cmp	w8, #0x0
  423b44:	cset	w8, ne  // ne = any
  423b48:	lsl	w8, w8, #1
  423b4c:	b	423b5c <_obstack_memory_used@@Base+0xb8cc>
  423b50:	cmp	w8, #0xa
  423b54:	b.eq	423b3c <_obstack_memory_used@@Base+0xb8ac>  // b.none
  423b58:	mov	w8, wzr
  423b5c:	tst	w8, #0x1
  423b60:	cset	w9, eq  // eq = none
  423b64:	tbz	w21, #10, 423b6c <_obstack_memory_used@@Base+0xb8dc>
  423b68:	tbz	w8, #0, 423a78 <_obstack_memory_used@@Base+0xb7e8>
  423b6c:	ldr	w10, [x19]
  423b70:	tbnz	w9, #0, 423b78 <_obstack_memory_used@@Base+0xb8e8>
  423b74:	tbnz	w10, #11, 423a78 <_obstack_memory_used@@Base+0xb7e8>
  423b78:	tbnz	w8, #1, 423b80 <_obstack_memory_used@@Base+0xb8f0>
  423b7c:	tbnz	w10, #13, 423a78 <_obstack_memory_used@@Base+0xb7e8>
  423b80:	tbnz	w8, #3, 423b88 <_obstack_memory_used@@Base+0xb8f8>
  423b84:	tbnz	w10, #15, 423a78 <_obstack_memory_used@@Base+0xb7e8>
  423b88:	ldr	x19, [x28, #200]
  423b8c:	ldr	x20, [x28, #152]
  423b90:	ldr	x23, [x28, #8]
  423b94:	cmp	x19, #0x1
  423b98:	b.lt	423be8 <_obstack_memory_used@@Base+0xb958>  // b.tstop
  423b9c:	ldr	x9, [x28, #216]
  423ba0:	ldur	x24, [x29, #-48]
  423ba4:	mov	x8, xzr
  423ba8:	mov	x10, x19
  423bac:	mov	w13, #0x28                  	// #40
  423bb0:	add	x11, x10, x8
  423bb4:	cmp	x11, #0x0
  423bb8:	cinc	x11, x11, lt  // lt = tstop
  423bbc:	asr	x11, x11, #1
  423bc0:	madd	x12, x11, x13, x9
  423bc4:	ldr	x12, [x12, #8]
  423bc8:	cmp	x12, x24
  423bcc:	csel	x10, x10, x11, lt  // lt = tstop
  423bd0:	csinc	x8, x8, x11, ge  // ge = tcont
  423bd4:	cmp	x8, x10
  423bd8:	b.lt	423bb0 <_obstack_memory_used@@Base+0xb920>  // b.tstop
  423bdc:	cmp	x8, x19
  423be0:	b.lt	423bfc <_obstack_memory_used@@Base+0xb96c>  // b.tstop
  423be4:	b	423c38 <_obstack_memory_used@@Base+0xb9a8>
  423be8:	ldur	x24, [x29, #-48]
  423bec:	mov	x8, xzr
  423bf0:	mov	w13, #0x28                  	// #40
  423bf4:	cmp	x8, x19
  423bf8:	b.ge	423c38 <_obstack_memory_used@@Base+0xb9a8>  // b.tcont
  423bfc:	cmn	x8, #0x1
  423c00:	b.eq	423c38 <_obstack_memory_used@@Base+0xb9a8>  // b.none
  423c04:	ldr	x9, [x28, #216]
  423c08:	madd	x10, x8, x13, x9
  423c0c:	ldr	x10, [x10, #8]
  423c10:	cmp	x10, x24
  423c14:	b.ne	423c38 <_obstack_memory_used@@Base+0xb9a8>  // b.any
  423c18:	madd	x8, x8, x13, x9
  423c1c:	ldr	x9, [x8]
  423c20:	ldur	x10, [x29, #-40]
  423c24:	cmp	x9, x10
  423c28:	b.eq	423fb8 <_obstack_memory_used@@Base+0xbd28>  // b.none
  423c2c:	ldrb	w9, [x8, #32]
  423c30:	add	x8, x8, #0x28
  423c34:	cbnz	w9, 423c1c <_obstack_memory_used@@Base+0xb98c>
  423c38:	ldr	x8, [x28, #232]
  423c3c:	cmp	x8, #0x1
  423c40:	mov	x8, x19
  423c44:	b.lt	423fbc <_obstack_memory_used@@Base+0xbd2c>  // b.tstop
  423c48:	ldur	x9, [x29, #-40]
  423c4c:	ldr	x8, [x20]
  423c50:	mov	x12, xzr
  423c54:	str	x19, [sp, #40]
  423c58:	lsl	x9, x9, #4
  423c5c:	ldr	x21, [x8, x9]
  423c60:	stp	x21, x20, [sp, #8]
  423c64:	ldr	x9, [x28, #248]
  423c68:	ldr	x27, [x9, x12, lsl #3]
  423c6c:	ldr	x9, [x27, #8]
  423c70:	lsl	x9, x9, #4
  423c74:	ldr	x8, [x8, x9]
  423c78:	cmp	x8, x21
  423c7c:	b.ne	423de0 <_obstack_memory_used@@Base+0xbb50>  // b.any
  423c80:	stp	x12, x27, [sp, #48]
  423c84:	ldr	x8, [x27, #32]
  423c88:	ldr	x20, [x27]
  423c8c:	mov	x21, xzr
  423c90:	mov	x22, x24
  423c94:	cmp	x8, #0x1
  423c98:	b.lt	423db0 <_obstack_memory_used@@Base+0xbb20>  // b.tstop
  423c9c:	mov	x19, x20
  423ca0:	ldr	x9, [x27, #40]
  423ca4:	ldr	x26, [x9, x21, lsl #3]
  423ca8:	ldr	x20, [x26, #8]
  423cac:	sub	x25, x20, x19
  423cb0:	cmp	x25, #0x1
  423cb4:	b.lt	423ce8 <_obstack_memory_used@@Base+0xba58>  // b.tstop
  423cb8:	ldr	x9, [x28, #48]
  423cbc:	mov	x24, x28
  423cc0:	add	x28, x25, x22
  423cc4:	cmp	x28, x9
  423cc8:	b.gt	423d2c <_obstack_memory_used@@Base+0xba9c>
  423ccc:	mov	x28, x24
  423cd0:	add	x0, x23, x22
  423cd4:	add	x1, x23, x19
  423cd8:	mov	x2, x25
  423cdc:	bl	402490 <bcmp@plt>
  423ce0:	ldur	x24, [x29, #-48]
  423ce4:	cbnz	w0, 423da8 <_obstack_memory_used@@Base+0xbb18>
  423ce8:	ldur	x3, [x29, #-40]
  423cec:	mov	x0, x28
  423cf0:	mov	x1, x27
  423cf4:	mov	x2, x26
  423cf8:	mov	x4, x24
  423cfc:	bl	4248a8 <_obstack_memory_used@@Base+0xc618>
  423d00:	cmp	w0, #0x1
  423d04:	b.hi	4242b0 <_obstack_memory_used@@Base+0xc020>  // b.pmore
  423d08:	ldr	x8, [x27, #32]
  423d0c:	ldr	x23, [x28, #8]
  423d10:	add	x21, x21, #0x1
  423d14:	add	x22, x25, x22
  423d18:	cmp	x21, x8
  423d1c:	mov	x19, x20
  423d20:	mov	x9, x27
  423d24:	b.lt	423ca0 <_obstack_memory_used@@Base+0xba10>  // b.tstop
  423d28:	b	423db0 <_obstack_memory_used@@Base+0xbb20>
  423d2c:	ldr	x10, [x24, #88]
  423d30:	mov	x11, x24
  423d34:	cmp	x28, x10
  423d38:	b.gt	423fa0 <_obstack_memory_used@@Base+0xbd10>
  423d3c:	ldr	x8, [x11, #64]
  423d40:	ldr	x23, [x11, #192]
  423d44:	cmp	x8, x28
  423d48:	b.gt	423d54 <_obstack_memory_used@@Base+0xbac4>
  423d4c:	cmp	x8, x10
  423d50:	b.lt	423d64 <_obstack_memory_used@@Base+0xbad4>  // b.tstop
  423d54:	cmp	x9, x28
  423d58:	b.gt	423d74 <_obstack_memory_used@@Base+0xbae4>
  423d5c:	cmp	x9, x10
  423d60:	b.ge	423d74 <_obstack_memory_used@@Base+0xbae4>  // b.tcont
  423d64:	add	w1, w28, #0x1
  423d68:	mov	x0, x24
  423d6c:	bl	4242d4 <_obstack_memory_used@@Base+0xc044>
  423d70:	cbnz	w0, 4242b0 <_obstack_memory_used@@Base+0xc020>
  423d74:	subs	x8, x28, x23
  423d78:	b.le	423d9c <_obstack_memory_used@@Base+0xbb0c>
  423d7c:	ldr	x9, [x24, #184]
  423d80:	lsl	x2, x8, #3
  423d84:	mov	w1, wzr
  423d88:	mov	x27, x24
  423d8c:	add	x9, x9, x23, lsl #3
  423d90:	add	x0, x9, #0x8
  423d94:	bl	402470 <memset@plt>
  423d98:	str	x28, [x24, #192]
  423d9c:	ldr	x23, [x24, #8]
  423da0:	ldr	x27, [sp, #56]
  423da4:	b	423ccc <_obstack_memory_used@@Base+0xba3c>
  423da8:	ldr	x8, [x27, #32]
  423dac:	mov	x20, x19
  423db0:	ldr	x19, [sp, #40]
  423db4:	cmp	x21, x8
  423db8:	b.ge	423dc8 <_obstack_memory_used@@Base+0xbb38>  // b.tcont
  423dbc:	ldp	x21, x20, [sp, #8]
  423dc0:	ldr	x12, [sp, #48]
  423dc4:	b	423de0 <_obstack_memory_used@@Base+0xbb50>
  423dc8:	ldr	x12, [sp, #48]
  423dcc:	cmp	x21, #0x0
  423dd0:	cinc	x25, x20, ne  // ne = any
  423dd4:	cmp	x25, x24
  423dd8:	b.le	423df8 <_obstack_memory_used@@Base+0xbb68>
  423ddc:	ldp	x21, x20, [sp, #8]
  423de0:	ldr	x8, [x28, #232]
  423de4:	add	x12, x12, #0x1
  423de8:	cmp	x12, x8
  423dec:	b.ge	423fb0 <_obstack_memory_used@@Base+0xbd20>  // b.tcont
  423df0:	ldr	x8, [x20]
  423df4:	b	423c64 <_obstack_memory_used@@Base+0xb9d4>
  423df8:	ldp	x21, x20, [sp, #8]
  423dfc:	b	423e18 <_obstack_memory_used@@Base+0xbb88>
  423e00:	ldr	x23, [x28, #8]
  423e04:	ldr	x12, [sp, #48]
  423e08:	ldr	x27, [sp, #56]
  423e0c:	cmp	x25, x24
  423e10:	add	x25, x25, #0x1
  423e14:	b.ge	423de0 <_obstack_memory_used@@Base+0xbb50>  // b.tcont
  423e18:	ldr	x8, [x27]
  423e1c:	cmp	x25, x8
  423e20:	b.le	423e48 <_obstack_memory_used@@Base+0xbbb8>
  423e24:	ldr	x8, [x28, #48]
  423e28:	cmp	x22, x8
  423e2c:	b.ge	423f50 <_obstack_memory_used@@Base+0xbcc0>  // b.tcont
  423e30:	add	x9, x25, x23
  423e34:	ldrb	w8, [x23, x22]
  423e38:	ldurb	w9, [x9, #-1]
  423e3c:	cmp	w8, w9
  423e40:	b.ne	423de0 <_obstack_memory_used@@Base+0xbb50>  // b.any
  423e44:	add	x22, x22, #0x1
  423e48:	ldr	x8, [x28, #184]
  423e4c:	ldr	x9, [x8, x25, lsl #3]
  423e50:	cbz	x9, 423e08 <_obstack_memory_used@@Base+0xbb78>
  423e54:	ldr	x8, [x9, #16]
  423e58:	cmp	x8, #0x1
  423e5c:	b.lt	423e08 <_obstack_memory_used@@Base+0xbb78>  // b.tstop
  423e60:	ldr	x9, [x9, #24]
  423e64:	ldr	x10, [x20]
  423e68:	b	423e78 <_obstack_memory_used@@Base+0xbbe8>
  423e6c:	subs	x8, x8, #0x1
  423e70:	add	x9, x9, #0x8
  423e74:	b.eq	423e08 <_obstack_memory_used@@Base+0xbb78>  // b.none
  423e78:	ldr	x26, [x9]
  423e7c:	add	x11, x10, x26, lsl #4
  423e80:	ldrb	w11, [x11, #8]
  423e84:	cmp	w11, #0x9
  423e88:	b.ne	423e6c <_obstack_memory_used@@Base+0xbbdc>  // b.any
  423e8c:	lsl	x11, x26, #4
  423e90:	ldr	x11, [x10, x11]
  423e94:	cmp	x11, x21
  423e98:	b.ne	423e6c <_obstack_memory_used@@Base+0xbbdc>  // b.any
  423e9c:	cmn	x26, #0x1
  423ea0:	b.eq	423e08 <_obstack_memory_used@@Base+0xbb78>  // b.none
  423ea4:	ldr	x1, [x27, #16]
  423ea8:	cbnz	x1, 423ecc <_obstack_memory_used@@Base+0xbc3c>
  423eac:	ldr	x8, [x27]
  423eb0:	mov	w0, #0x18                  	// #24
  423eb4:	sub	x8, x25, x8
  423eb8:	add	x1, x8, #0x1
  423ebc:	bl	402480 <calloc@plt>
  423ec0:	mov	x1, x0
  423ec4:	str	x0, [x27, #16]
  423ec8:	cbz	x0, 4242a4 <_obstack_memory_used@@Base+0xc014>
  423ecc:	ldp	x3, x2, [x27]
  423ed0:	mov	w6, #0x9                   	// #9
  423ed4:	mov	x0, x28
  423ed8:	mov	x4, x26
  423edc:	mov	x5, x25
  423ee0:	bl	424a74 <_obstack_memory_used@@Base+0xc7e4>
  423ee4:	ldr	x12, [sp, #48]
  423ee8:	cmp	w0, #0x1
  423eec:	b.eq	423e08 <_obstack_memory_used@@Base+0xbb78>  // b.none
  423ef0:	mov	w27, w0
  423ef4:	cbnz	w0, 4242b4 <_obstack_memory_used@@Base+0xc024>
  423ef8:	ldr	x23, [sp, #56]
  423efc:	ldp	x9, x8, [x23, #24]
  423f00:	cmp	x8, x9
  423f04:	b.eq	423f78 <_obstack_memory_used@@Base+0xbce8>  // b.none
  423f08:	mov	w0, #0x1                   	// #1
  423f0c:	mov	w1, #0x28                  	// #40
  423f10:	bl	402480 <calloc@plt>
  423f14:	cbz	x0, 4242a4 <_obstack_memory_used@@Base+0xc014>
  423f18:	ldp	x9, x8, [x23, #32]
  423f1c:	ldur	x3, [x29, #-40]
  423f20:	mov	x2, x0
  423f24:	mov	x1, x23
  423f28:	str	x0, [x8, x9, lsl #3]
  423f2c:	stp	x26, x25, [x0]
  423f30:	add	x8, x9, #0x1
  423f34:	mov	x0, x28
  423f38:	mov	x4, x24
  423f3c:	str	x8, [x23, #32]
  423f40:	bl	4248a8 <_obstack_memory_used@@Base+0xc618>
  423f44:	cmp	w0, #0x1
  423f48:	b.ls	423e00 <_obstack_memory_used@@Base+0xbb70>  // b.plast
  423f4c:	b	4242b0 <_obstack_memory_used@@Base+0xc020>
  423f50:	ldr	x8, [x28, #88]
  423f54:	cmp	x22, x8
  423f58:	b.ge	423de0 <_obstack_memory_used@@Base+0xbb50>  // b.tcont
  423f5c:	add	w1, w22, #0x1
  423f60:	mov	x0, x28
  423f64:	bl	4242d4 <_obstack_memory_used@@Base+0xc044>
  423f68:	cbnz	w0, 4242b0 <_obstack_memory_used@@Base+0xc020>
  423f6c:	ldr	x23, [x28, #8]
  423f70:	ldp	x12, x27, [sp, #48]
  423f74:	b	423e30 <_obstack_memory_used@@Base+0xbba0>
  423f78:	ldr	x0, [x23, #40]
  423f7c:	mov	w19, #0x1                   	// #1
  423f80:	bfi	x19, x8, #1, #63
  423f84:	lsl	x1, x19, #3
  423f88:	bl	4024c0 <realloc@plt>
  423f8c:	cbz	x0, 4242a4 <_obstack_memory_used@@Base+0xc014>
  423f90:	str	x19, [x23, #24]
  423f94:	ldr	x19, [sp, #40]
  423f98:	str	x0, [x23, #40]
  423f9c:	b	423f08 <_obstack_memory_used@@Base+0xbc78>
  423fa0:	ldur	x24, [x29, #-48]
  423fa4:	mov	x20, x19
  423fa8:	mov	x28, x11
  423fac:	b	423db0 <_obstack_memory_used@@Base+0xbb20>
  423fb0:	ldr	x8, [x28, #200]
  423fb4:	b	423fbc <_obstack_memory_used@@Base+0xbd2c>
  423fb8:	mov	x8, x19
  423fbc:	ldr	x23, [sp]
  423fc0:	cmp	x19, x8
  423fc4:	stur	wzr, [x29, #-4]
  423fc8:	b.lt	423fe0 <_obstack_memory_used@@Base+0xbd50>  // b.tstop
  423fcc:	b	423a78 <_obstack_memory_used@@Base+0xb7e8>
  423fd0:	ldr	x8, [x28, #200]
  423fd4:	add	x19, x19, #0x1
  423fd8:	cmp	x19, x8
  423fdc:	b.ge	423a78 <_obstack_memory_used@@Base+0xb7e8>  // b.tcont
  423fe0:	ldr	x8, [x28, #216]
  423fe4:	mov	w11, #0x28                  	// #40
  423fe8:	mul	x9, x19, x11
  423fec:	ldur	x10, [x29, #-40]
  423ff0:	ldr	x9, [x8, x9]
  423ff4:	cmp	x9, x10
  423ff8:	b.ne	423fd0 <_obstack_memory_used@@Base+0xbd40>  // b.any
  423ffc:	madd	x9, x19, x11, x8
  424000:	ldr	x9, [x9, #8]
  424004:	ldur	x10, [x29, #-48]
  424008:	cmp	x9, x10
  42400c:	b.ne	423fd0 <_obstack_memory_used@@Base+0xbd40>  // b.any
  424010:	ldr	x27, [sp, #32]
  424014:	str	x19, [sp, #40]
  424018:	madd	x8, x19, x11, x8
  42401c:	ldp	x22, x19, [x8, #16]
  424020:	ldr	x21, [x27, #48]
  424024:	cmp	x19, x22
  424028:	b.ne	424044 <_obstack_memory_used@@Base+0xbdb4>  // b.any
  42402c:	ldr	x8, [x27, #40]
  424030:	ldur	x10, [x29, #-40]
  424034:	mov	w9, #0x18                  	// #24
  424038:	madd	x8, x10, x9, x8
  42403c:	ldr	x8, [x8, #16]
  424040:	b	424050 <_obstack_memory_used@@Base+0xbdc0>
  424044:	ldr	x8, [x27, #24]
  424048:	ldur	x9, [x29, #-40]
  42404c:	add	x8, x8, x9, lsl #3
  424050:	ldur	x9, [x29, #-48]
  424054:	ldr	x26, [x8]
  424058:	add	x8, x19, x9
  42405c:	sub	x23, x8, x22
  424060:	cmp	x23, #0x0
  424064:	b.le	4240a0 <_obstack_memory_used@@Base+0xbe10>
  424068:	ldr	x9, [x28, #88]
  42406c:	sub	x8, x23, #0x1
  424070:	cmp	x9, x8
  424074:	b.eq	424214 <_obstack_memory_used@@Base+0xbf84>  // b.none
  424078:	ldr	w9, [x28, #144]
  42407c:	cmp	w9, #0x2
  424080:	b.lt	4240a8 <_obstack_memory_used@@Base+0xbe18>  // b.tstop
  424084:	ldr	x9, [x28, #16]
  424088:	ldr	w24, [x9, x8, lsl #2]
  42408c:	cmn	w24, #0x1
  424090:	b.ne	4240d0 <_obstack_memory_used@@Base+0xbe40>  // b.any
  424094:	sub	x8, x8, #0x1
  424098:	cmn	x8, #0x1
  42409c:	b.ne	424088 <_obstack_memory_used@@Base+0xbdf8>  // b.any
  4240a0:	ldr	w25, [x28, #112]
  4240a4:	b	424100 <_obstack_memory_used@@Base+0xbe70>
  4240a8:	ldr	x9, [x28, #8]
  4240ac:	ldrb	w8, [x9, x8]
  4240b0:	ldr	x9, [x28, #128]
  4240b4:	lsr	x10, x8, #3
  4240b8:	and	x10, x10, #0x18
  4240bc:	ldr	x9, [x9, x10]
  4240c0:	lsr	x9, x9, x8
  4240c4:	tbz	w9, #0, 4240f4 <_obstack_memory_used@@Base+0xbe64>
  4240c8:	mov	w25, #0x1                   	// #1
  4240cc:	b	424100 <_obstack_memory_used@@Base+0xbe70>
  4240d0:	ldrb	w8, [x28, #142]
  4240d4:	cbnz	w8, 424228 <_obstack_memory_used@@Base+0xbf98>
  4240d8:	cmp	w24, #0xa
  4240dc:	b.ne	4240fc <_obstack_memory_used@@Base+0xbe6c>  // b.any
  4240e0:	ldrb	w8, [x28, #141]
  4240e4:	cmp	w8, #0x0
  4240e8:	cset	w8, ne  // ne = any
  4240ec:	lsl	w25, w8, #1
  4240f0:	b	424100 <_obstack_memory_used@@Base+0xbe70>
  4240f4:	cmp	w8, #0xa
  4240f8:	b.eq	4240e0 <_obstack_memory_used@@Base+0xbe50>  // b.none
  4240fc:	mov	w25, wzr
  424100:	ldr	x8, [x28, #184]
  424104:	ldur	x9, [x29, #-48]
  424108:	mov	w10, #0x18                  	// #24
  42410c:	madd	x24, x26, x10, x21
  424110:	ldr	x9, [x8, x9, lsl #3]
  424114:	ldr	x8, [x8, x23, lsl #3]
  424118:	cbz	x9, 42417c <_obstack_memory_used@@Base+0xbeec>
  42411c:	ldr	x20, [x9, #16]
  424120:	cbz	x8, 424184 <_obstack_memory_used@@Base+0xbef4>
  424124:	ldr	x1, [x8, #80]
  424128:	sub	x0, x29, #0x20
  42412c:	mov	x2, x24
  424130:	bl	4246b8 <_obstack_memory_used@@Base+0xc428>
  424134:	stur	w0, [x29, #-4]
  424138:	cbnz	w0, 4242bc <_obstack_memory_used@@Base+0xc02c>
  42413c:	ldr	x1, [sp, #32]
  424140:	sub	x0, x29, #0x4
  424144:	sub	x2, x29, #0x20
  424148:	mov	w3, w25
  42414c:	bl	421fa4 <_obstack_memory_used@@Base+0x9d14>
  424150:	ldr	x8, [x28, #184]
  424154:	lsl	x21, x23, #3
  424158:	str	x0, [x8, x21]
  42415c:	ldur	x0, [x29, #-16]
  424160:	bl	402620 <free@plt>
  424164:	ldr	x8, [x28, #184]
  424168:	ldr	x9, [x8, x21]
  42416c:	cbnz	x9, 4241c0 <_obstack_memory_used@@Base+0xbf30>
  424170:	ldur	w27, [x29, #-4]
  424174:	cbz	w27, 4241c0 <_obstack_memory_used@@Base+0xbf30>
  424178:	b	424280 <_obstack_memory_used@@Base+0xbff0>
  42417c:	mov	x20, xzr
  424180:	cbnz	x8, 424124 <_obstack_memory_used@@Base+0xbe94>
  424184:	sub	x0, x29, #0x4
  424188:	mov	x1, x27
  42418c:	mov	x2, x24
  424190:	mov	w3, w25
  424194:	bl	421fa4 <_obstack_memory_used@@Base+0x9d14>
  424198:	ldr	x8, [x28, #184]
  42419c:	lsl	x9, x23, #3
  4241a0:	str	x0, [x8, x9]
  4241a4:	ldr	x8, [x28, #184]
  4241a8:	ldr	x9, [x8, x9]
  4241ac:	cbnz	x9, 4241c0 <_obstack_memory_used@@Base+0xbf30>
  4241b0:	ldur	w27, [x29, #-4]
  4241b4:	ldr	x23, [sp]
  4241b8:	cbz	w27, 4241c4 <_obstack_memory_used@@Base+0xbf34>
  4241bc:	b	424280 <_obstack_memory_used@@Base+0xbff0>
  4241c0:	ldr	x23, [sp]
  4241c4:	cmp	x19, x22
  4241c8:	ldr	x19, [sp, #40]
  4241cc:	b.ne	423fd0 <_obstack_memory_used@@Base+0xbd40>  // b.any
  4241d0:	ldur	x9, [x29, #-48]
  4241d4:	ldr	x8, [x8, x9, lsl #3]
  4241d8:	ldr	x8, [x8, #16]
  4241dc:	cmp	x8, x20
  4241e0:	b.le	423fd0 <_obstack_memory_used@@Base+0xbd40>
  4241e4:	ldur	x2, [x29, #-48]
  4241e8:	mov	x0, x28
  4241ec:	mov	x1, x24
  4241f0:	bl	423918 <_obstack_memory_used@@Base+0xb688>
  4241f4:	stur	w0, [x29, #-4]
  4241f8:	cbnz	w0, 4242cc <_obstack_memory_used@@Base+0xc03c>
  4241fc:	mov	x0, x28
  424200:	mov	x1, x24
  424204:	bl	423a28 <_obstack_memory_used@@Base+0xb798>
  424208:	stur	w0, [x29, #-4]
  42420c:	cbz	w0, 423fd0 <_obstack_memory_used@@Base+0xbd40>
  424210:	b	4242cc <_obstack_memory_used@@Base+0xc03c>
  424214:	ldr	w8, [x28, #160]
  424218:	mov	w9, #0xa                   	// #10
  42421c:	and	w8, w8, #0x2
  424220:	eor	w25, w8, w9
  424224:	b	424100 <_obstack_memory_used@@Base+0xbe70>
  424228:	mov	w0, w24
  42422c:	bl	402710 <iswalnum@plt>
  424230:	cmp	w24, #0x5f
  424234:	mov	w25, #0x1                   	// #1
  424238:	b.eq	424100 <_obstack_memory_used@@Base+0xbe70>  // b.none
  42423c:	cbz	w0, 4240d8 <_obstack_memory_used@@Base+0xbe48>
  424240:	b	424100 <_obstack_memory_used@@Base+0xbe70>
  424244:	ldr	w8, [x28, #160]
  424248:	mov	w9, #0xa                   	// #10
  42424c:	and	w8, w8, #0x2
  424250:	eor	w8, w8, w9
  424254:	b	423b5c <_obstack_memory_used@@Base+0xb8cc>
  424258:	mov	w0, w24
  42425c:	bl	402710 <iswalnum@plt>
  424260:	mov	w9, wzr
  424264:	cmp	w24, #0x5f
  424268:	mov	w8, #0x1                   	// #1
  42426c:	b.eq	423b6c <_obstack_memory_used@@Base+0xb8dc>  // b.none
  424270:	cbz	w0, 423b34 <_obstack_memory_used@@Base+0xb8a4>
  424274:	b	423b6c <_obstack_memory_used@@Base+0xb8dc>
  424278:	mov	w27, wzr
  42427c:	stur	wzr, [x29, #-4]
  424280:	mov	w0, w27
  424284:	ldp	x20, x19, [sp, #192]
  424288:	ldp	x22, x21, [sp, #176]
  42428c:	ldp	x24, x23, [sp, #160]
  424290:	ldp	x26, x25, [sp, #144]
  424294:	ldp	x28, x27, [sp, #128]
  424298:	ldp	x29, x30, [sp, #112]
  42429c:	add	sp, sp, #0xd0
  4242a0:	ret
  4242a4:	mov	w27, #0xc                   	// #12
  4242a8:	stur	w27, [x29, #-4]
  4242ac:	b	424280 <_obstack_memory_used@@Base+0xbff0>
  4242b0:	mov	w27, w0
  4242b4:	stur	w27, [x29, #-4]
  4242b8:	b	424280 <_obstack_memory_used@@Base+0xbff0>
  4242bc:	mov	w27, w0
  4242c0:	ldur	x0, [x29, #-16]
  4242c4:	bl	402620 <free@plt>
  4242c8:	b	424280 <_obstack_memory_used@@Base+0xbff0>
  4242cc:	mov	w27, w0
  4242d0:	b	424280 <_obstack_memory_used@@Base+0xbff0>
  4242d4:	stp	x29, x30, [sp, #-48]!
  4242d8:	stp	x20, x19, [sp, #32]
  4242dc:	ldr	x8, [x0, #64]
  4242e0:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
  4242e4:	str	x21, [sp, #16]
  4242e8:	mov	x29, sp
  4242ec:	cmp	x8, x9
  4242f0:	b.hi	4244ac <_obstack_memory_used@@Base+0xc21c>  // b.pmore
  4242f4:	ldr	x9, [x0, #88]
  4242f8:	lsl	x8, x8, #1
  4242fc:	ldr	w11, [x0, #144]
  424300:	sxtw	x10, w1
  424304:	cmp	x9, x8
  424308:	csel	x8, x9, x8, lt  // lt = tstop
  42430c:	cmp	x8, x10
  424310:	mov	x19, x0
  424314:	csel	x20, x8, x10, gt
  424318:	cmp	w11, #0x2
  42431c:	b.lt	424358 <_obstack_memory_used@@Base+0xc0c8>  // b.tstop
  424320:	lsr	x8, x20, #61
  424324:	cbnz	x8, 4244ac <_obstack_memory_used@@Base+0xc21c>
  424328:	ldr	x0, [x19, #16]
  42432c:	lsl	x1, x20, #2
  424330:	bl	4024c0 <realloc@plt>
  424334:	cbz	x0, 4244ac <_obstack_memory_used@@Base+0xc21c>
  424338:	mov	x8, x0
  42433c:	ldr	x0, [x19, #24]
  424340:	str	x8, [x19, #16]
  424344:	cbz	x0, 424358 <_obstack_memory_used@@Base+0xc0c8>
  424348:	lsl	x1, x20, #3
  42434c:	bl	4024c0 <realloc@plt>
  424350:	cbz	x0, 4244ac <_obstack_memory_used@@Base+0xc21c>
  424354:	str	x0, [x19, #24]
  424358:	ldrb	w8, [x19, #139]
  42435c:	cbz	w8, 424374 <_obstack_memory_used@@Base+0xc0e4>
  424360:	ldr	x0, [x19, #8]
  424364:	mov	x1, x20
  424368:	bl	4024c0 <realloc@plt>
  42436c:	cbz	x0, 4244ac <_obstack_memory_used@@Base+0xc21c>
  424370:	str	x0, [x19, #8]
  424374:	ldr	x0, [x19, #184]
  424378:	str	x20, [x19, #64]
  42437c:	cbz	x0, 424394 <_obstack_memory_used@@Base+0xc104>
  424380:	lsl	x8, x20, #3
  424384:	add	x1, x8, #0x8
  424388:	bl	4024c0 <realloc@plt>
  42438c:	cbz	x0, 4244ac <_obstack_memory_used@@Base+0xc21c>
  424390:	str	x0, [x19, #184]
  424394:	ldr	w8, [x19, #144]
  424398:	ldrb	w9, [x19, #136]
  42439c:	cmp	w8, #0x2
  4243a0:	cbz	w9, 4243b8 <_obstack_memory_used@@Base+0xc128>
  4243a4:	b.lt	4243c8 <_obstack_memory_used@@Base+0xc138>  // b.tstop
  4243a8:	mov	x0, x19
  4243ac:	bl	41cd0c <_obstack_memory_used@@Base+0x4a7c>
  4243b0:	cbz	w0, 424498 <_obstack_memory_used@@Base+0xc208>
  4243b4:	b	42449c <_obstack_memory_used@@Base+0xc20c>
  4243b8:	b.lt	424430 <_obstack_memory_used@@Base+0xc1a0>  // b.tstop
  4243bc:	mov	x0, x19
  4243c0:	bl	41d3b0 <_obstack_memory_used@@Base+0x5120>
  4243c4:	b	424498 <_obstack_memory_used@@Base+0xc208>
  4243c8:	ldr	x8, [x19, #64]
  4243cc:	ldr	x9, [x19, #88]
  4243d0:	ldr	x20, [x19, #48]
  4243d4:	cmp	x8, x9
  4243d8:	csel	x21, x9, x8, gt
  4243dc:	cmp	x20, x21
  4243e0:	b.ge	424428 <_obstack_memory_used@@Base+0xc198>  // b.tcont
  4243e4:	bl	4024d0 <__ctype_toupper_loc@plt>
  4243e8:	ldr	x8, [x19]
  4243ec:	ldr	x9, [x19, #40]
  4243f0:	add	x8, x8, x9
  4243f4:	ldr	x9, [x19, #120]
  4243f8:	ldrb	w8, [x8, x20]
  4243fc:	cbnz	x9, 424420 <_obstack_memory_used@@Base+0xc190>
  424400:	ldr	x9, [x0]
  424404:	ldr	x10, [x19, #8]
  424408:	ldr	w8, [x9, w8, uxtw #2]
  42440c:	strb	w8, [x10, x20]
  424410:	add	x20, x20, #0x1
  424414:	cmp	x20, x21
  424418:	b.lt	4243e8 <_obstack_memory_used@@Base+0xc158>  // b.tstop
  42441c:	b	424428 <_obstack_memory_used@@Base+0xc198>
  424420:	ldrb	w8, [x9, x8]
  424424:	b	424400 <_obstack_memory_used@@Base+0xc170>
  424428:	stp	x20, x20, [x19, #48]
  42442c:	b	424498 <_obstack_memory_used@@Base+0xc208>
  424430:	ldr	x10, [x19, #120]
  424434:	cbz	x10, 424498 <_obstack_memory_used@@Base+0xc208>
  424438:	ldr	x9, [x19, #64]
  42443c:	ldr	x11, [x19, #88]
  424440:	ldr	x8, [x19, #48]
  424444:	cmp	x9, x11
  424448:	csel	x9, x11, x9, gt
  42444c:	cmp	x8, x9
  424450:	b.ge	424494 <_obstack_memory_used@@Base+0xc204>  // b.tcont
  424454:	ldr	x11, [x19, #40]
  424458:	ldp	x12, x13, [x19]
  42445c:	add	x11, x11, x8
  424460:	ldrb	w11, [x12, x11]
  424464:	ldrb	w10, [x10, x11]
  424468:	strb	w10, [x13, x8]
  42446c:	add	x8, x8, #0x1
  424470:	cmp	x8, x9
  424474:	b.ge	424494 <_obstack_memory_used@@Base+0xc204>  // b.tcont
  424478:	ldr	x10, [x19, #40]
  42447c:	ldp	x11, x13, [x19]
  424480:	ldr	x12, [x19, #120]
  424484:	add	x10, x11, x10
  424488:	ldrb	w10, [x10, x8]
  42448c:	ldrb	w10, [x12, x10]
  424490:	b	424468 <_obstack_memory_used@@Base+0xc1d8>
  424494:	stp	x8, x8, [x19, #48]
  424498:	mov	w0, wzr
  42449c:	ldp	x20, x19, [sp, #32]
  4244a0:	ldr	x21, [sp, #16]
  4244a4:	ldp	x29, x30, [sp], #48
  4244a8:	ret
  4244ac:	mov	w0, #0xc                   	// #12
  4244b0:	b	42449c <_obstack_memory_used@@Base+0xc20c>
  4244b4:	sub	sp, sp, #0x60
  4244b8:	stp	x29, x30, [sp, #32]
  4244bc:	stp	x24, x23, [sp, #48]
  4244c0:	stp	x22, x21, [sp, #64]
  4244c4:	stp	x20, x19, [sp, #80]
  4244c8:	ldr	x20, [x1, #72]
  4244cc:	ldp	x8, x9, [x1, #184]
  4244d0:	ldr	x22, [x1, #152]
  4244d4:	mov	x24, x2
  4244d8:	mov	x19, x1
  4244dc:	cmp	x20, x9
  4244e0:	mov	x21, x0
  4244e4:	add	x29, sp, #0x20
  4244e8:	b.le	4244f8 <_obstack_memory_used@@Base+0xc268>
  4244ec:	str	x24, [x8, x20, lsl #3]
  4244f0:	str	x20, [x19, #192]
  4244f4:	b	424618 <_obstack_memory_used@@Base+0xc388>
  4244f8:	ldr	x9, [x8, x20, lsl #3]
  4244fc:	cbz	x9, 424530 <_obstack_memory_used@@Base+0xc2a0>
  424500:	ldr	x2, [x9, #80]
  424504:	cbz	x24, 424538 <_obstack_memory_used@@Base+0xc2a8>
  424508:	ldr	x23, [x24, #80]
  42450c:	mov	x0, sp
  424510:	mov	x1, x23
  424514:	bl	4246b8 <_obstack_memory_used@@Base+0xc428>
  424518:	str	w0, [x21]
  42451c:	cbnz	w0, 424680 <_obstack_memory_used@@Base+0xc3f0>
  424520:	ldr	x8, [x19, #72]
  424524:	cmp	x8, #0x0
  424528:	b.gt	424558 <_obstack_memory_used@@Base+0xc2c8>
  42452c:	b	424590 <_obstack_memory_used@@Base+0xc300>
  424530:	str	x24, [x8, x20, lsl #3]
  424534:	b	424618 <_obstack_memory_used@@Base+0xc388>
  424538:	ldr	x8, [x2, #16]
  42453c:	ldr	q0, [x2]
  424540:	mov	x23, xzr
  424544:	str	x8, [sp, #16]
  424548:	mov	x8, x20
  42454c:	str	q0, [sp]
  424550:	cmp	x8, #0x0
  424554:	b.le	424590 <_obstack_memory_used@@Base+0xc300>
  424558:	ldr	x9, [x19, #88]
  42455c:	sub	x8, x8, #0x1
  424560:	cmp	x9, x8
  424564:	b.eq	424688 <_obstack_memory_used@@Base+0xc3f8>  // b.none
  424568:	ldr	w9, [x19, #144]
  42456c:	cmp	w9, #0x2
  424570:	b.lt	424598 <_obstack_memory_used@@Base+0xc308>  // b.tstop
  424574:	ldr	x9, [x19, #16]
  424578:	ldr	w24, [x9, x8, lsl #2]
  42457c:	cmn	w24, #0x1
  424580:	b.ne	4245c0 <_obstack_memory_used@@Base+0xc330>  // b.any
  424584:	sub	x8, x8, #0x1
  424588:	cmn	x8, #0x1
  42458c:	b.ne	424578 <_obstack_memory_used@@Base+0xc2e8>  // b.any
  424590:	ldr	w3, [x19, #112]
  424594:	b	4245f0 <_obstack_memory_used@@Base+0xc360>
  424598:	ldr	x9, [x19, #8]
  42459c:	ldrb	w8, [x9, x8]
  4245a0:	ldr	x9, [x19, #128]
  4245a4:	lsr	x10, x8, #3
  4245a8:	and	x10, x10, #0x18
  4245ac:	ldr	x9, [x9, x10]
  4245b0:	lsr	x9, x9, x8
  4245b4:	tbz	w9, #0, 4245e4 <_obstack_memory_used@@Base+0xc354>
  4245b8:	mov	w3, #0x1                   	// #1
  4245bc:	b	4245f0 <_obstack_memory_used@@Base+0xc360>
  4245c0:	ldrb	w8, [x19, #142]
  4245c4:	cbnz	w8, 42469c <_obstack_memory_used@@Base+0xc40c>
  4245c8:	cmp	w24, #0xa
  4245cc:	b.ne	4245ec <_obstack_memory_used@@Base+0xc35c>  // b.any
  4245d0:	ldrb	w8, [x19, #141]
  4245d4:	cmp	w8, #0x0
  4245d8:	cset	w8, ne  // ne = any
  4245dc:	lsl	w3, w8, #1
  4245e0:	b	4245f0 <_obstack_memory_used@@Base+0xc360>
  4245e4:	cmp	w8, #0xa
  4245e8:	b.eq	4245d0 <_obstack_memory_used@@Base+0xc340>  // b.none
  4245ec:	mov	w3, wzr
  4245f0:	mov	x2, sp
  4245f4:	mov	x0, x21
  4245f8:	mov	x1, x22
  4245fc:	bl	421fa4 <_obstack_memory_used@@Base+0x9d14>
  424600:	ldr	x8, [x19, #184]
  424604:	mov	x24, x0
  424608:	str	x0, [x8, x20, lsl #3]
  42460c:	cbz	x23, 424618 <_obstack_memory_used@@Base+0xc388>
  424610:	ldr	x0, [sp, #16]
  424614:	bl	402620 <free@plt>
  424618:	cbz	x24, 424664 <_obstack_memory_used@@Base+0xc3d4>
  42461c:	ldr	x8, [x22, #152]
  424620:	cbz	x8, 424664 <_obstack_memory_used@@Base+0xc3d4>
  424624:	add	x22, x24, #0x8
  424628:	mov	x0, x19
  42462c:	mov	x1, x22
  424630:	mov	x2, x20
  424634:	bl	423918 <_obstack_memory_used@@Base+0xb688>
  424638:	str	w0, [x21]
  42463c:	cbnz	w0, 424680 <_obstack_memory_used@@Base+0xc3f0>
  424640:	ldrb	w8, [x24, #104]
  424644:	tbz	w8, #6, 424664 <_obstack_memory_used@@Base+0xc3d4>
  424648:	mov	x0, x19
  42464c:	mov	x1, x22
  424650:	bl	423a28 <_obstack_memory_used@@Base+0xb798>
  424654:	str	w0, [x21]
  424658:	cbnz	w0, 424680 <_obstack_memory_used@@Base+0xc3f0>
  42465c:	ldr	x8, [x19, #184]
  424660:	ldr	x24, [x8, x20, lsl #3]
  424664:	mov	x0, x24
  424668:	ldp	x20, x19, [sp, #80]
  42466c:	ldp	x22, x21, [sp, #64]
  424670:	ldp	x24, x23, [sp, #48]
  424674:	ldp	x29, x30, [sp, #32]
  424678:	add	sp, sp, #0x60
  42467c:	ret
  424680:	mov	x24, xzr
  424684:	b	424664 <_obstack_memory_used@@Base+0xc3d4>
  424688:	ldr	w8, [x19, #160]
  42468c:	mov	w9, #0xa                   	// #10
  424690:	and	w8, w8, #0x2
  424694:	eor	w3, w8, w9
  424698:	b	4245f0 <_obstack_memory_used@@Base+0xc360>
  42469c:	mov	w0, w24
  4246a0:	bl	402710 <iswalnum@plt>
  4246a4:	cmp	w24, #0x5f
  4246a8:	mov	w3, #0x1                   	// #1
  4246ac:	b.eq	4245f0 <_obstack_memory_used@@Base+0xc360>  // b.none
  4246b0:	cbz	w0, 4245c8 <_obstack_memory_used@@Base+0xc338>
  4246b4:	b	4245f0 <_obstack_memory_used@@Base+0xc360>
  4246b8:	stp	x29, x30, [sp, #-80]!
  4246bc:	stp	x20, x19, [sp, #64]
  4246c0:	mov	x20, x2
  4246c4:	mov	x19, x0
  4246c8:	stp	x26, x25, [sp, #16]
  4246cc:	stp	x24, x23, [sp, #32]
  4246d0:	stp	x22, x21, [sp, #48]
  4246d4:	mov	x29, sp
  4246d8:	cbz	x1, 424800 <_obstack_memory_used@@Base+0xc570>
  4246dc:	ldr	x24, [x1, #8]
  4246e0:	mov	x21, x1
  4246e4:	cbz	x20, 4247c8 <_obstack_memory_used@@Base+0xc538>
  4246e8:	cmp	x24, #0x1
  4246ec:	b.lt	4247c8 <_obstack_memory_used@@Base+0xc538>  // b.tstop
  4246f0:	ldr	x23, [x20, #8]
  4246f4:	cmp	x23, #0x1
  4246f8:	b.lt	4247c8 <_obstack_memory_used@@Base+0xc538>  // b.tstop
  4246fc:	add	x8, x23, x24
  424700:	lsl	x0, x8, #3
  424704:	str	x8, [x19]
  424708:	bl	4023a0 <malloc@plt>
  42470c:	str	x0, [x19, #16]
  424710:	cbz	x0, 4248a0 <_obstack_memory_used@@Base+0xc610>
  424714:	mov	x25, xzr
  424718:	mov	x22, xzr
  42471c:	mov	x11, xzr
  424720:	mov	x9, xzr
  424724:	mov	w10, #0x1                   	// #1
  424728:	add	x8, x0, x22, lsl #3
  42472c:	mov	x26, x11
  424730:	tbz	w10, #0, 424858 <_obstack_memory_used@@Base+0xc5c8>
  424734:	ldr	x10, [x21, #16]
  424738:	ldr	x11, [x20, #16]
  42473c:	ldr	x13, [x10, x9, lsl #3]
  424740:	ldr	x12, [x11, x26, lsl #3]
  424744:	cmp	x13, x12
  424748:	b.le	42476c <_obstack_memory_used@@Base+0xc4dc>
  42474c:	add	x26, x26, #0x1
  424750:	cmp	x23, x26
  424754:	add	x22, x22, #0x1
  424758:	cset	w10, gt
  42475c:	cmp	x24, x9
  424760:	str	x12, [x8], #8
  424764:	b.gt	424730 <_obstack_memory_used@@Base+0xc4a0>
  424768:	b	4247a0 <_obstack_memory_used@@Base+0xc510>
  42476c:	str	x13, [x8]
  424770:	ldr	x23, [x20, #8]
  424774:	ldr	x24, [x21, #8]
  424778:	cinc	x11, x26, eq  // eq = none
  42477c:	add	x9, x9, #0x1
  424780:	cmp	x23, x11
  424784:	add	x22, x22, #0x1
  424788:	cset	w10, gt
  42478c:	cmp	x24, x9
  424790:	sub	x25, x25, #0x1
  424794:	b.gt	424728 <_obstack_memory_used@@Base+0xc498>
  424798:	cmp	x13, x12
  42479c:	cinc	x26, x26, eq  // eq = none
  4247a0:	cbz	w10, 42487c <_obstack_memory_used@@Base+0xc5ec>
  4247a4:	ldr	x8, [x20, #16]
  4247a8:	sub	x9, x23, x26
  4247ac:	add	x0, x0, x22, lsl #3
  4247b0:	lsl	x2, x9, #3
  4247b4:	add	x1, x8, x26, lsl #3
  4247b8:	bl	402210 <memcpy@plt>
  4247bc:	sub	x8, x22, x26
  4247c0:	add	x22, x8, x23
  4247c4:	b	42487c <_obstack_memory_used@@Base+0xc5ec>
  4247c8:	cmp	x24, #0x1
  4247cc:	b.lt	424800 <_obstack_memory_used@@Base+0xc570>  // b.tstop
  4247d0:	str	x24, [x19, #8]
  4247d4:	ldr	x20, [x21, #8]
  4247d8:	cmp	x20, #0x1
  4247dc:	b.lt	424848 <_obstack_memory_used@@Base+0xc5b8>  // b.tstop
  4247e0:	lsl	x0, x24, #3
  4247e4:	str	x24, [x19]
  4247e8:	bl	4023a0 <malloc@plt>
  4247ec:	str	x0, [x19, #16]
  4247f0:	cbz	x0, 42489c <_obstack_memory_used@@Base+0xc60c>
  4247f4:	ldr	x1, [x21, #16]
  4247f8:	lsl	x2, x20, #3
  4247fc:	b	42483c <_obstack_memory_used@@Base+0xc5ac>
  424800:	cbz	x20, 424848 <_obstack_memory_used@@Base+0xc5b8>
  424804:	ldr	x8, [x20, #8]
  424808:	cmp	x8, #0x1
  42480c:	b.lt	424848 <_obstack_memory_used@@Base+0xc5b8>  // b.tstop
  424810:	str	x8, [x19, #8]
  424814:	ldr	x21, [x20, #8]
  424818:	cmp	x21, #0x1
  42481c:	b.lt	424848 <_obstack_memory_used@@Base+0xc5b8>  // b.tstop
  424820:	lsl	x0, x8, #3
  424824:	str	x8, [x19]
  424828:	bl	4023a0 <malloc@plt>
  42482c:	str	x0, [x19, #16]
  424830:	cbz	x0, 42489c <_obstack_memory_used@@Base+0xc60c>
  424834:	ldr	x1, [x20, #16]
  424838:	lsl	x2, x21, #3
  42483c:	bl	402210 <memcpy@plt>
  424840:	mov	w0, wzr
  424844:	b	424884 <_obstack_memory_used@@Base+0xc5f4>
  424848:	mov	w0, wzr
  42484c:	stp	xzr, xzr, [x19]
  424850:	str	xzr, [x19, #16]
  424854:	b	424884 <_obstack_memory_used@@Base+0xc5f4>
  424858:	ldr	x10, [x21, #16]
  42485c:	sub	x11, x24, x9
  424860:	lsl	x2, x11, #3
  424864:	mov	x0, x8
  424868:	add	x1, x10, x9, lsl #3
  42486c:	bl	402210 <memcpy@plt>
  424870:	ldr	x8, [x21, #8]
  424874:	add	x8, x8, x25
  424878:	add	x22, x8, x22
  42487c:	mov	w0, wzr
  424880:	str	x22, [x19, #8]
  424884:	ldp	x20, x19, [sp, #64]
  424888:	ldp	x22, x21, [sp, #48]
  42488c:	ldp	x24, x23, [sp, #32]
  424890:	ldp	x26, x25, [sp, #16]
  424894:	ldp	x29, x30, [sp], #80
  424898:	ret
  42489c:	stp	xzr, xzr, [x19]
  4248a0:	mov	w0, #0xc                   	// #12
  4248a4:	b	424884 <_obstack_memory_used@@Base+0xc5f4>
  4248a8:	stp	x29, x30, [sp, #-96]!
  4248ac:	stp	x28, x27, [sp, #16]
  4248b0:	stp	x26, x25, [sp, #32]
  4248b4:	stp	x24, x23, [sp, #48]
  4248b8:	stp	x22, x21, [sp, #64]
  4248bc:	stp	x20, x19, [sp, #80]
  4248c0:	mov	x22, x2
  4248c4:	mov	x23, x3
  4248c8:	ldr	x2, [x2]
  4248cc:	ldr	x3, [x22, #8]
  4248d0:	mov	x20, x4
  4248d4:	mov	x21, x1
  4248d8:	add	x1, x22, #0x10
  4248dc:	mov	w6, #0x8                   	// #8
  4248e0:	mov	x4, x23
  4248e4:	mov	x5, x20
  4248e8:	mov	x29, sp
  4248ec:	mov	x19, x0
  4248f0:	bl	424a74 <_obstack_memory_used@@Base+0xc7e4>
  4248f4:	cbz	w0, 424914 <_obstack_memory_used@@Base+0xc684>
  4248f8:	ldp	x20, x19, [sp, #80]
  4248fc:	ldp	x22, x21, [sp, #64]
  424900:	ldp	x24, x23, [sp, #48]
  424904:	ldp	x26, x25, [sp, #32]
  424908:	ldp	x28, x27, [sp, #16]
  42490c:	ldp	x29, x30, [sp], #96
  424910:	ret
  424914:	ldp	x27, x8, [x19, #200]
  424918:	ldr	x26, [x21]
  42491c:	ldr	x25, [x22, #8]
  424920:	cmp	x27, x8
  424924:	b.ge	424938 <_obstack_memory_used@@Base+0xc6a8>  // b.tcont
  424928:	ldr	x24, [x19, #216]
  42492c:	subs	x8, x27, #0x1
  424930:	b.ge	424980 <_obstack_memory_used@@Base+0xc6f0>  // b.tcont
  424934:	b	4249a4 <_obstack_memory_used@@Base+0xc714>
  424938:	ldr	x0, [x19, #216]
  42493c:	add	x8, x8, x8, lsl #2
  424940:	lsl	x1, x8, #4
  424944:	bl	4024c0 <realloc@plt>
  424948:	cbz	x0, 424a64 <_obstack_memory_used@@Base+0xc7d4>
  42494c:	ldp	x27, x28, [x19, #200]
  424950:	mov	w8, #0x28                  	// #40
  424954:	mov	x24, x0
  424958:	str	x0, [x19, #216]
  42495c:	madd	x0, x27, x8, x0
  424960:	add	x8, x28, x28, lsl #2
  424964:	lsl	x2, x8, #3
  424968:	mov	w1, wzr
  42496c:	bl	402470 <memset@plt>
  424970:	lsl	x8, x28, #1
  424974:	str	x8, [x19, #208]
  424978:	subs	x8, x27, #0x1
  42497c:	b.lt	4249a4 <_obstack_memory_used@@Base+0xc714>  // b.tstop
  424980:	mov	w9, #0x28                  	// #40
  424984:	madd	x9, x8, x9, x24
  424988:	ldr	x9, [x9, #8]
  42498c:	cmp	x9, x20
  424990:	b.ne	4249a4 <_obstack_memory_used@@Base+0xc714>  // b.any
  424994:	mov	w9, #0x28                  	// #40
  424998:	madd	x8, x8, x9, x24
  42499c:	mov	w9, #0x1                   	// #1
  4249a0:	strb	w9, [x8, #32]
  4249a4:	mov	w9, #0x28                  	// #40
  4249a8:	subs	x8, x25, x26
  4249ac:	add	x10, x27, #0x1
  4249b0:	madd	x9, x27, x9, x24
  4249b4:	csetm	w11, eq  // eq = none
  4249b8:	stp	x23, x20, [x9]
  4249bc:	stp	x26, x25, [x9, #16]
  4249c0:	strh	w11, [x9, #34]
  4249c4:	str	x10, [x19, #200]
  4249c8:	strb	wzr, [x9, #32]
  4249cc:	ldrsw	x9, [x19, #224]
  4249d0:	cmp	x8, x9
  4249d4:	b.le	4249dc <_obstack_memory_used@@Base+0xc74c>
  4249d8:	str	w8, [x19, #224]
  4249dc:	ldr	x9, [x22, #8]
  4249e0:	ldr	x10, [x21]
  4249e4:	ldr	x8, [x19, #64]
  4249e8:	ldr	x21, [x19, #192]
  4249ec:	add	x9, x9, x20
  4249f0:	sub	x20, x9, x10
  4249f4:	cmp	x8, x20
  4249f8:	b.gt	424a08 <_obstack_memory_used@@Base+0xc778>
  4249fc:	ldr	x9, [x19, #88]
  424a00:	cmp	x8, x9
  424a04:	b.lt	424a20 <_obstack_memory_used@@Base+0xc790>  // b.tstop
  424a08:	ldr	x8, [x19, #48]
  424a0c:	cmp	x8, x20
  424a10:	b.gt	424a30 <_obstack_memory_used@@Base+0xc7a0>
  424a14:	ldr	x9, [x19, #88]
  424a18:	cmp	x8, x9
  424a1c:	b.ge	424a30 <_obstack_memory_used@@Base+0xc7a0>  // b.tcont
  424a20:	add	w1, w20, #0x1
  424a24:	mov	x0, x19
  424a28:	bl	4242d4 <_obstack_memory_used@@Base+0xc044>
  424a2c:	cbnz	w0, 4248f8 <_obstack_memory_used@@Base+0xc668>
  424a30:	subs	x8, x20, x21
  424a34:	b.le	424a5c <_obstack_memory_used@@Base+0xc7cc>
  424a38:	ldr	x9, [x19, #184]
  424a3c:	lsl	x2, x8, #3
  424a40:	mov	w1, wzr
  424a44:	add	x9, x9, x21, lsl #3
  424a48:	add	x0, x9, #0x8
  424a4c:	bl	402470 <memset@plt>
  424a50:	mov	w0, wzr
  424a54:	str	x20, [x19, #192]
  424a58:	b	4248f8 <_obstack_memory_used@@Base+0xc668>
  424a5c:	mov	w0, wzr
  424a60:	b	4248f8 <_obstack_memory_used@@Base+0xc668>
  424a64:	ldr	x0, [x19, #216]
  424a68:	bl	402620 <free@plt>
  424a6c:	mov	w0, #0xc                   	// #12
  424a70:	b	4248f8 <_obstack_memory_used@@Base+0xc668>
  424a74:	sub	sp, sp, #0x100
  424a78:	stp	x29, x30, [sp, #160]
  424a7c:	stp	x28, x27, [sp, #176]
  424a80:	stp	x26, x25, [sp, #192]
  424a84:	stp	x24, x23, [sp, #208]
  424a88:	stp	x22, x21, [sp, #224]
  424a8c:	stp	x20, x19, [sp, #240]
  424a90:	ldr	x8, [x0, #152]
  424a94:	add	x29, sp, #0xa0
  424a98:	stur	wzr, [x29, #-36]
  424a9c:	lsl	x10, x2, #4
  424aa0:	str	x8, [sp, #48]
  424aa4:	ldr	x8, [x8]
  424aa8:	ldrsw	x9, [x0, #224]
  424aac:	ldr	x21, [x1, #8]
  424ab0:	mov	x22, x2
  424ab4:	ldr	x8, [x8, x10]
  424ab8:	mov	x27, x1
  424abc:	mov	x20, x0
  424ac0:	mov	x19, x3
  424ac4:	str	x8, [sp, #56]
  424ac8:	add	x8, x9, x5
  424acc:	cmp	x21, x8
  424ad0:	str	w6, [sp, #44]
  424ad4:	mov	x26, x4
  424ad8:	str	x5, [sp, #32]
  424adc:	str	x4, [sp, #8]
  424ae0:	b.le	425250 <_obstack_memory_used@@Base+0xcfc0>
  424ae4:	ldr	x23, [x27, #16]
  424ae8:	mov	x24, x5
  424aec:	ldr	x8, [x27]
  424af0:	ldr	x28, [x20, #184]
  424af4:	ldr	x21, [x20, #72]
  424af8:	str	x23, [x20, #184]
  424afc:	cmp	x8, #0x0
  424b00:	csel	x26, x19, x8, eq  // eq = none
  424b04:	cmp	x26, #0x0
  424b08:	str	x26, [x20, #72]
  424b0c:	b.le	424b48 <_obstack_memory_used@@Base+0xc8b8>
  424b10:	ldr	x9, [x20, #88]
  424b14:	sub	x8, x26, #0x1
  424b18:	cmp	x9, x8
  424b1c:	b.eq	4252a0 <_obstack_memory_used@@Base+0xd010>  // b.none
  424b20:	ldr	w9, [x20, #144]
  424b24:	cmp	w9, #0x2
  424b28:	b.lt	424b50 <_obstack_memory_used@@Base+0xc8c0>  // b.tstop
  424b2c:	ldr	x9, [x20, #16]
  424b30:	ldr	w25, [x9, x8, lsl #2]
  424b34:	cmn	w25, #0x1
  424b38:	b.ne	424b78 <_obstack_memory_used@@Base+0xc8e8>  // b.any
  424b3c:	sub	x8, x8, #0x1
  424b40:	cmn	x8, #0x1
  424b44:	b.ne	424b30 <_obstack_memory_used@@Base+0xc8a0>  // b.any
  424b48:	ldr	w23, [x20, #112]
  424b4c:	b	424ba8 <_obstack_memory_used@@Base+0xc918>
  424b50:	ldr	x9, [x20, #8]
  424b54:	ldrb	w8, [x9, x8]
  424b58:	ldr	x9, [x20, #128]
  424b5c:	lsr	x10, x8, #3
  424b60:	and	x10, x10, #0x18
  424b64:	ldr	x9, [x9, x10]
  424b68:	lsr	x9, x9, x8
  424b6c:	tbz	w9, #0, 424b9c <_obstack_memory_used@@Base+0xc90c>
  424b70:	mov	w23, #0x1                   	// #1
  424b74:	b	424ba8 <_obstack_memory_used@@Base+0xc918>
  424b78:	ldrb	w8, [x20, #142]
  424b7c:	cbnz	w8, 4252d4 <_obstack_memory_used@@Base+0xd044>
  424b80:	cmp	w25, #0xa
  424b84:	b.ne	424ba4 <_obstack_memory_used@@Base+0xc914>  // b.any
  424b88:	ldrb	w8, [x20, #141]
  424b8c:	cmp	w8, #0x0
  424b90:	cset	w8, ne  // ne = any
  424b94:	lsl	w23, w8, #1
  424b98:	b	424ba8 <_obstack_memory_used@@Base+0xc918>
  424b9c:	cmp	w8, #0xa
  424ba0:	b.eq	424b88 <_obstack_memory_used@@Base+0xc8f8>  // b.none
  424ba4:	mov	w23, wzr
  424ba8:	cmp	x26, x19
  424bac:	stp	x28, x27, [sp, #16]
  424bb0:	b.ne	424c54 <_obstack_memory_used@@Base+0xc9c4>  // b.any
  424bb4:	mov	w8, #0x1                   	// #1
  424bb8:	dup	v0.2d, x8
  424bbc:	mov	w0, #0x8                   	// #8
  424bc0:	stur	q0, [x29, #-64]
  424bc4:	bl	4023a0 <malloc@plt>
  424bc8:	stur	x0, [x29, #-48]
  424bcc:	cbz	x0, 4252c4 <_obstack_memory_used@@Base+0xd034>
  424bd0:	str	x22, [x0]
  424bd4:	ldp	x0, x22, [sp, #48]
  424bd8:	ldr	w3, [sp, #44]
  424bdc:	sub	x1, x29, #0x40
  424be0:	stur	wzr, [x29, #-36]
  424be4:	mov	x2, x22
  424be8:	bl	4252f8 <_obstack_memory_used@@Base+0xd068>
  424bec:	stur	w0, [x29, #-36]
  424bf0:	cbnz	w0, 4252b4 <_obstack_memory_used@@Base+0xd024>
  424bf4:	ldur	x8, [x29, #-56]
  424bf8:	cbz	x8, 424c1c <_obstack_memory_used@@Base+0xc98c>
  424bfc:	ldr	w4, [sp, #44]
  424c00:	sub	x1, x29, #0x40
  424c04:	mov	x0, x20
  424c08:	mov	x2, x26
  424c0c:	mov	x3, x22
  424c10:	bl	42543c <_obstack_memory_used@@Base+0xd1ac>
  424c14:	stur	w0, [x29, #-36]
  424c18:	cbnz	w0, 4252b4 <_obstack_memory_used@@Base+0xd024>
  424c1c:	ldr	x1, [sp, #48]
  424c20:	sub	x0, x29, #0x24
  424c24:	sub	x2, x29, #0x40
  424c28:	mov	w3, w23
  424c2c:	bl	421fa4 <_obstack_memory_used@@Base+0x9d14>
  424c30:	mov	x28, x0
  424c34:	cbnz	x0, 424c40 <_obstack_memory_used@@Base+0xc9b0>
  424c38:	ldur	w8, [x29, #-36]
  424c3c:	cbnz	w8, 42521c <_obstack_memory_used@@Base+0xcf8c>
  424c40:	ldr	x8, [x20, #184]
  424c44:	str	x28, [x8, x26, lsl #3]
  424c48:	cmp	x26, x24
  424c4c:	b.ge	425148 <_obstack_memory_used@@Base+0xceb8>  // b.tcont
  424c50:	b	424ccc <_obstack_memory_used@@Base+0xca3c>
  424c54:	ldr	x8, [x20, #184]
  424c58:	ldr	x28, [x8, x26, lsl #3]
  424c5c:	cbz	x28, 424cb8 <_obstack_memory_used@@Base+0xca28>
  424c60:	ldrb	w8, [x28, #104]
  424c64:	ldr	x22, [sp, #56]
  424c68:	tbz	w8, #6, 424cbc <_obstack_memory_used@@Base+0xca2c>
  424c6c:	ldr	x8, [x28, #16]
  424c70:	cmp	x8, #0x1
  424c74:	stur	x8, [x29, #-56]
  424c78:	b.lt	4251fc <_obstack_memory_used@@Base+0xcf6c>  // b.tstop
  424c7c:	lsl	x19, x8, #3
  424c80:	mov	x0, x19
  424c84:	stur	x8, [x29, #-64]
  424c88:	bl	4023a0 <malloc@plt>
  424c8c:	stur	x0, [x29, #-48]
  424c90:	cbz	x0, 4252c4 <_obstack_memory_used@@Base+0xd034>
  424c94:	ldr	x1, [x28, #24]
  424c98:	mov	x2, x19
  424c9c:	bl	402210 <memcpy@plt>
  424ca0:	ldrb	w8, [x28, #104]
  424ca4:	stur	wzr, [x29, #-36]
  424ca8:	tbnz	w8, #6, 424bfc <_obstack_memory_used@@Base+0xc96c>
  424cac:	cmp	x26, x24
  424cb0:	b.ge	425148 <_obstack_memory_used@@Base+0xceb8>  // b.tcont
  424cb4:	b	424ccc <_obstack_memory_used@@Base+0xca3c>
  424cb8:	ldr	x22, [sp, #56]
  424cbc:	stp	xzr, xzr, [x29, #-64]
  424cc0:	stur	xzr, [x29, #-48]
  424cc4:	cmp	x26, x24
  424cc8:	b.ge	425148 <_obstack_memory_used@@Base+0xceb8>  // b.tcont
  424ccc:	str	x21, [sp]
  424cd0:	ldr	w21, [sp, #44]
  424cd4:	ldr	x23, [sp, #48]
  424cd8:	mov	w8, #0x1                   	// #1
  424cdc:	mov	x9, xzr
  424ce0:	dup	v0.2d, x8
  424ce4:	str	q0, [sp, #80]
  424ce8:	b	424d08 <_obstack_memory_used@@Base+0xca78>
  424cec:	ldp	x9, x26, [sp, #64]
  424cf0:	ldr	x8, [x20, #184]
  424cf4:	cmp	x28, #0x0
  424cf8:	csinc	x9, xzr, x9, ne  // ne = any
  424cfc:	cmp	x26, x24
  424d00:	str	x28, [x8, x26, lsl #3]
  424d04:	b.eq	425140 <_obstack_memory_used@@Base+0xceb0>  // b.none
  424d08:	ldrsw	x8, [x20, #224]
  424d0c:	cmp	x9, x8
  424d10:	b.gt	425144 <_obstack_memory_used@@Base+0xceb4>
  424d14:	stur	xzr, [x29, #-56]
  424d18:	ldr	x8, [x20, #184]
  424d1c:	str	x9, [sp, #64]
  424d20:	add	x9, x26, #0x1
  424d24:	str	x9, [sp, #72]
  424d28:	ldr	x8, [x8, x9, lsl #3]
  424d2c:	cbz	x8, 424d44 <_obstack_memory_used@@Base+0xcab4>
  424d30:	add	x1, x8, #0x8
  424d34:	sub	x0, x29, #0x40
  424d38:	bl	421d10 <_obstack_memory_used@@Base+0x9a80>
  424d3c:	stur	w0, [x29, #-36]
  424d40:	cbnz	w0, 42521c <_obstack_memory_used@@Base+0xcf8c>
  424d44:	cbz	x28, 425010 <_obstack_memory_used@@Base+0xcd80>
  424d48:	ldr	x22, [x20, #152]
  424d4c:	stur	wzr, [x29, #-4]
  424d50:	stp	xzr, xzr, [x29, #-32]
  424d54:	stur	xzr, [x29, #-16]
  424d58:	ldr	x8, [x28, #40]
  424d5c:	cmp	x8, #0x1
  424d60:	b.lt	425000 <_obstack_memory_used@@Base+0xcd70>  // b.tstop
  424d64:	mov	x24, xzr
  424d68:	b	424d98 <_obstack_memory_used@@Base+0xcb08>
  424d6c:	ldur	x8, [x29, #-56]
  424d70:	cbnz	x8, 424ec4 <_obstack_memory_used@@Base+0xcc34>
  424d74:	ldur	x8, [x29, #-48]
  424d78:	str	x19, [x8]
  424d7c:	ldur	x8, [x29, #-56]
  424d80:	add	x8, x8, #0x1
  424d84:	stur	x8, [x29, #-56]
  424d88:	ldr	x8, [x28, #40]
  424d8c:	add	x24, x24, #0x1
  424d90:	cmp	x24, x8
  424d94:	b.ge	424fec <_obstack_memory_used@@Base+0xcd5c>  // b.tcont
  424d98:	ldr	x8, [x28, #48]
  424d9c:	ldr	x19, [x8, x24, lsl #3]
  424da0:	ldr	x8, [x22]
  424da4:	add	x9, x8, x19, lsl #4
  424da8:	ldrb	w9, [x9, #10]
  424dac:	tbz	w9, #4, 424e80 <_obstack_memory_used@@Base+0xcbf0>
  424db0:	mov	x0, x22
  424db4:	mov	x1, x19
  424db8:	mov	x2, x20
  424dbc:	mov	x3, x26
  424dc0:	bl	425c9c <_obstack_memory_used@@Base+0xda0c>
  424dc4:	mov	w23, w0
  424dc8:	cmp	w0, #0x2
  424dcc:	b.lt	424e78 <_obstack_memory_used@@Base+0xcbe8>  // b.tstop
  424dd0:	ldr	x8, [x20, #184]
  424dd4:	ldr	x9, [x22, #24]
  424dd8:	add	x27, x26, w23, uxtw
  424ddc:	ldr	x8, [x8, x27, lsl #3]
  424de0:	ldr	x21, [x9, x19, lsl #3]
  424de4:	stur	xzr, [x29, #-24]
  424de8:	cbz	x8, 424e00 <_obstack_memory_used@@Base+0xcb70>
  424dec:	add	x1, x8, #0x8
  424df0:	sub	x0, x29, #0x20
  424df4:	bl	421d10 <_obstack_memory_used@@Base+0x9a80>
  424df8:	stur	w0, [x29, #-4]
  424dfc:	cbnz	w0, 425224 <_obstack_memory_used@@Base+0xcf94>
  424e00:	ldur	x9, [x29, #-32]
  424e04:	cbz	x9, 424e28 <_obstack_memory_used@@Base+0xcb98>
  424e08:	ldur	x8, [x29, #-24]
  424e0c:	cbnz	x8, 424f58 <_obstack_memory_used@@Base+0xccc8>
  424e10:	ldur	x8, [x29, #-16]
  424e14:	str	x21, [x8]
  424e18:	ldur	x8, [x29, #-24]
  424e1c:	add	x8, x8, #0x1
  424e20:	stur	x8, [x29, #-24]
  424e24:	b	424e48 <_obstack_memory_used@@Base+0xcbb8>
  424e28:	mov	w8, #0x1                   	// #1
  424e2c:	dup	v0.2d, x8
  424e30:	mov	w0, #0x8                   	// #8
  424e34:	stur	q0, [x29, #-32]
  424e38:	bl	4023a0 <malloc@plt>
  424e3c:	stur	x0, [x29, #-16]
  424e40:	cbz	x0, 425244 <_obstack_memory_used@@Base+0xcfb4>
  424e44:	str	x21, [x0]
  424e48:	sub	x0, x29, #0x4
  424e4c:	sub	x2, x29, #0x20
  424e50:	mov	x1, x22
  424e54:	bl	425a20 <_obstack_memory_used@@Base+0xd790>
  424e58:	ldr	x8, [x20, #184]
  424e5c:	lsl	x9, x27, #3
  424e60:	str	x0, [x8, x9]
  424e64:	ldr	x8, [x20, #184]
  424e68:	ldr	x8, [x8, x9]
  424e6c:	cbnz	x8, 424e78 <_obstack_memory_used@@Base+0xcbe8>
  424e70:	ldur	w25, [x29, #-4]
  424e74:	cbnz	w25, 425228 <_obstack_memory_used@@Base+0xcf98>
  424e78:	cbnz	w23, 424e94 <_obstack_memory_used@@Base+0xcc04>
  424e7c:	ldr	x8, [x22]
  424e80:	add	x1, x8, x19, lsl #4
  424e84:	mov	x0, x20
  424e88:	mov	x2, x26
  424e8c:	bl	425fb4 <_obstack_memory_used@@Base+0xdd24>
  424e90:	tbz	w0, #0, 424d88 <_obstack_memory_used@@Base+0xcaf8>
  424e94:	ldr	x8, [x22, #24]
  424e98:	ldur	x9, [x29, #-64]
  424e9c:	ldr	x19, [x8, x19, lsl #3]
  424ea0:	cbnz	x9, 424d6c <_obstack_memory_used@@Base+0xcadc>
  424ea4:	ldr	q0, [sp, #80]
  424ea8:	mov	w0, #0x8                   	// #8
  424eac:	stur	q0, [x29, #-64]
  424eb0:	bl	4023a0 <malloc@plt>
  424eb4:	stur	x0, [x29, #-48]
  424eb8:	cbz	x0, 42520c <_obstack_memory_used@@Base+0xcf7c>
  424ebc:	str	x19, [x0]
  424ec0:	b	424d88 <_obstack_memory_used@@Base+0xcaf8>
  424ec4:	cmp	x9, x8
  424ec8:	b.ne	424ef0 <_obstack_memory_used@@Base+0xcc60>  // b.any
  424ecc:	ldur	x0, [x29, #-48]
  424ed0:	lsl	x8, x9, #1
  424ed4:	lsl	x1, x9, #4
  424ed8:	stur	x8, [x29, #-64]
  424edc:	bl	4024c0 <realloc@plt>
  424ee0:	cbz	x0, 425210 <_obstack_memory_used@@Base+0xcf80>
  424ee4:	ldur	x8, [x29, #-56]
  424ee8:	stur	x0, [x29, #-48]
  424eec:	b	424ef4 <_obstack_memory_used@@Base+0xcc64>
  424ef0:	ldur	x0, [x29, #-48]
  424ef4:	ldr	x9, [x0]
  424ef8:	cmp	x9, x19
  424efc:	b.le	424f28 <_obstack_memory_used@@Base+0xcc98>
  424f00:	cmp	x8, #0x1
  424f04:	b.lt	424f50 <_obstack_memory_used@@Base+0xccc0>  // b.tstop
  424f08:	mov	x9, x8
  424f0c:	add	x10, x0, x9, lsl #3
  424f10:	ldur	x11, [x10, #-8]
  424f14:	subs	x8, x9, #0x1
  424f18:	mov	x9, x8
  424f1c:	str	x11, [x10]
  424f20:	b.gt	424f0c <_obstack_memory_used@@Base+0xcc7c>
  424f24:	b	424f50 <_obstack_memory_used@@Base+0xccc0>
  424f28:	add	x9, x0, x8, lsl #3
  424f2c:	ldur	x9, [x9, #-8]
  424f30:	cmp	x9, x19
  424f34:	b.le	424f50 <_obstack_memory_used@@Base+0xccc0>
  424f38:	add	x10, x0, x8, lsl #3
  424f3c:	str	x9, [x10]
  424f40:	ldur	x9, [x10, #-16]
  424f44:	sub	x8, x8, #0x1
  424f48:	cmp	x9, x19
  424f4c:	b.gt	424f38 <_obstack_memory_used@@Base+0xcca8>
  424f50:	str	x19, [x0, x8, lsl #3]
  424f54:	b	424d7c <_obstack_memory_used@@Base+0xcaec>
  424f58:	cmp	x9, x8
  424f5c:	b.ne	424f84 <_obstack_memory_used@@Base+0xccf4>  // b.any
  424f60:	ldur	x0, [x29, #-16]
  424f64:	lsl	x8, x9, #1
  424f68:	lsl	x1, x9, #4
  424f6c:	stur	x8, [x29, #-32]
  424f70:	bl	4024c0 <realloc@plt>
  424f74:	cbz	x0, 425210 <_obstack_memory_used@@Base+0xcf80>
  424f78:	ldur	x8, [x29, #-24]
  424f7c:	stur	x0, [x29, #-16]
  424f80:	b	424f88 <_obstack_memory_used@@Base+0xccf8>
  424f84:	ldur	x0, [x29, #-16]
  424f88:	ldr	x9, [x0]
  424f8c:	cmp	x9, x21
  424f90:	b.le	424fbc <_obstack_memory_used@@Base+0xcd2c>
  424f94:	cmp	x8, #0x1
  424f98:	b.lt	424fe4 <_obstack_memory_used@@Base+0xcd54>  // b.tstop
  424f9c:	mov	x9, x8
  424fa0:	add	x10, x0, x9, lsl #3
  424fa4:	ldur	x11, [x10, #-8]
  424fa8:	subs	x8, x9, #0x1
  424fac:	mov	x9, x8
  424fb0:	str	x11, [x10]
  424fb4:	b.gt	424fa0 <_obstack_memory_used@@Base+0xcd10>
  424fb8:	b	424fe4 <_obstack_memory_used@@Base+0xcd54>
  424fbc:	add	x9, x0, x8, lsl #3
  424fc0:	ldur	x9, [x9, #-8]
  424fc4:	cmp	x9, x21
  424fc8:	b.le	424fe4 <_obstack_memory_used@@Base+0xcd54>
  424fcc:	add	x10, x0, x8, lsl #3
  424fd0:	str	x9, [x10]
  424fd4:	ldur	x9, [x10, #-16]
  424fd8:	sub	x8, x8, #0x1
  424fdc:	cmp	x9, x21
  424fe0:	b.gt	424fcc <_obstack_memory_used@@Base+0xcd3c>
  424fe4:	str	x21, [x0, x8, lsl #3]
  424fe8:	b	424e18 <_obstack_memory_used@@Base+0xcb88>
  424fec:	ldur	x0, [x29, #-16]
  424ff0:	ldr	x24, [sp, #32]
  424ff4:	ldr	w21, [sp, #44]
  424ff8:	ldr	x23, [sp, #48]
  424ffc:	b	425004 <_obstack_memory_used@@Base+0xcd74>
  425000:	mov	x0, xzr
  425004:	bl	402620 <free@plt>
  425008:	ldr	x22, [sp, #56]
  42500c:	stur	wzr, [x29, #-36]
  425010:	ldur	x8, [x29, #-56]
  425014:	cbz	x8, 425054 <_obstack_memory_used@@Base+0xcdc4>
  425018:	sub	x1, x29, #0x40
  42501c:	mov	x0, x23
  425020:	mov	x2, x22
  425024:	mov	w3, w21
  425028:	bl	4252f8 <_obstack_memory_used@@Base+0xd068>
  42502c:	stur	w0, [x29, #-36]
  425030:	cbnz	w0, 42521c <_obstack_memory_used@@Base+0xcf8c>
  425034:	ldr	x2, [sp, #72]
  425038:	sub	x1, x29, #0x40
  42503c:	mov	x0, x20
  425040:	mov	x3, x22
  425044:	mov	w4, w21
  425048:	bl	42543c <_obstack_memory_used@@Base+0xd1ac>
  42504c:	stur	w0, [x29, #-36]
  425050:	cbnz	w0, 42521c <_obstack_memory_used@@Base+0xcf8c>
  425054:	tbnz	x26, #63, 42508c <_obstack_memory_used@@Base+0xcdfc>
  425058:	ldr	x8, [x20, #88]
  42505c:	cmp	x8, x26
  425060:	b.eq	425110 <_obstack_memory_used@@Base+0xce80>  // b.none
  425064:	ldr	w8, [x20, #144]
  425068:	cmp	w8, #0x2
  42506c:	b.lt	425094 <_obstack_memory_used@@Base+0xce04>  // b.tstop
  425070:	ldr	x8, [x20, #16]
  425074:	ldr	w19, [x8, x26, lsl #2]
  425078:	cmn	w19, #0x1
  42507c:	b.ne	4250bc <_obstack_memory_used@@Base+0xce2c>  // b.any
  425080:	sub	x26, x26, #0x1
  425084:	cmn	x26, #0x1
  425088:	b.ne	425074 <_obstack_memory_used@@Base+0xcde4>  // b.any
  42508c:	ldr	w3, [x20, #112]
  425090:	b	4250ec <_obstack_memory_used@@Base+0xce5c>
  425094:	ldr	x8, [x20, #8]
  425098:	ldr	x9, [x20, #128]
  42509c:	ldrb	w8, [x8, x26]
  4250a0:	lsr	x10, x8, #3
  4250a4:	and	x10, x10, #0x18
  4250a8:	ldr	x9, [x9, x10]
  4250ac:	lsr	x9, x9, x8
  4250b0:	tbz	w9, #0, 4250e0 <_obstack_memory_used@@Base+0xce50>
  4250b4:	mov	w3, #0x1                   	// #1
  4250b8:	b	4250ec <_obstack_memory_used@@Base+0xce5c>
  4250bc:	ldrb	w8, [x20, #142]
  4250c0:	cbnz	w8, 425124 <_obstack_memory_used@@Base+0xce94>
  4250c4:	cmp	w19, #0xa
  4250c8:	b.ne	4250e8 <_obstack_memory_used@@Base+0xce58>  // b.any
  4250cc:	ldrb	w8, [x20, #141]
  4250d0:	cmp	w8, #0x0
  4250d4:	cset	w8, ne  // ne = any
  4250d8:	lsl	w3, w8, #1
  4250dc:	b	4250ec <_obstack_memory_used@@Base+0xce5c>
  4250e0:	cmp	w8, #0xa
  4250e4:	b.eq	4250cc <_obstack_memory_used@@Base+0xce3c>  // b.none
  4250e8:	mov	w3, wzr
  4250ec:	sub	x0, x29, #0x24
  4250f0:	sub	x2, x29, #0x40
  4250f4:	mov	x1, x23
  4250f8:	bl	421fa4 <_obstack_memory_used@@Base+0x9d14>
  4250fc:	mov	x28, x0
  425100:	cbnz	x0, 424cec <_obstack_memory_used@@Base+0xca5c>
  425104:	ldur	w8, [x29, #-36]
  425108:	cbz	w8, 424cec <_obstack_memory_used@@Base+0xca5c>
  42510c:	b	42521c <_obstack_memory_used@@Base+0xcf8c>
  425110:	ldr	w8, [x20, #160]
  425114:	mov	w9, #0xa                   	// #10
  425118:	and	w8, w8, #0x2
  42511c:	eor	w3, w8, w9
  425120:	b	4250ec <_obstack_memory_used@@Base+0xce5c>
  425124:	mov	w0, w19
  425128:	bl	402710 <iswalnum@plt>
  42512c:	cmp	w19, #0x5f
  425130:	mov	w3, #0x1                   	// #1
  425134:	b.eq	4250ec <_obstack_memory_used@@Base+0xce5c>  // b.none
  425138:	cbz	w0, 4250c4 <_obstack_memory_used@@Base+0xce34>
  42513c:	b	4250ec <_obstack_memory_used@@Base+0xce5c>
  425140:	mov	x26, x24
  425144:	ldr	x21, [sp]
  425148:	ldur	x0, [x29, #-48]
  42514c:	bl	402620 <free@plt>
  425150:	ldr	x8, [x20, #184]
  425154:	ldr	x9, [x8, x24, lsl #3]
  425158:	ldr	x8, [sp, #24]
  42515c:	cmp	x9, #0x0
  425160:	str	x26, [x8]
  425164:	ldr	x8, [sp, #16]
  425168:	str	x21, [x20, #72]
  42516c:	str	x8, [x20, #184]
  425170:	add	x8, x9, #0x8
  425174:	csel	x8, xzr, x8, eq  // eq = none
  425178:	cbz	x9, 4251d4 <_obstack_memory_used@@Base+0xcf44>
  42517c:	ldr	x9, [x8, #8]
  425180:	subs	x9, x9, #0x1
  425184:	b.lt	4251d4 <_obstack_memory_used@@Base+0xcf44>  // b.tstop
  425188:	ldr	x8, [x8, #16]
  42518c:	mov	x10, xzr
  425190:	b.eq	4251bc <_obstack_memory_used@@Base+0xcf2c>  // b.none
  425194:	ldr	x13, [sp, #8]
  425198:	add	x11, x10, x9
  42519c:	lsr	x11, x11, #1
  4251a0:	ldr	x12, [x8, x11, lsl #3]
  4251a4:	cmp	x12, x13
  4251a8:	csinc	x10, x10, x11, ge  // ge = tcont
  4251ac:	csel	x9, x9, x11, lt  // lt = tstop
  4251b0:	cmp	x10, x9
  4251b4:	b.cc	425198 <_obstack_memory_used@@Base+0xcf08>  // b.lo, b.ul, b.last
  4251b8:	b	4251c0 <_obstack_memory_used@@Base+0xcf30>
  4251bc:	ldr	x13, [sp, #8]
  4251c0:	ldr	x8, [x8, x10, lsl #3]
  4251c4:	cmp	x8, x13
  4251c8:	b.ne	4251d4 <_obstack_memory_used@@Base+0xcf44>  // b.any
  4251cc:	mov	w19, wzr
  4251d0:	b	4251d8 <_obstack_memory_used@@Base+0xcf48>
  4251d4:	mov	w19, #0x1                   	// #1
  4251d8:	mov	w0, w19
  4251dc:	ldp	x20, x19, [sp, #240]
  4251e0:	ldp	x22, x21, [sp, #224]
  4251e4:	ldp	x24, x23, [sp, #208]
  4251e8:	ldp	x26, x25, [sp, #192]
  4251ec:	ldp	x28, x27, [sp, #176]
  4251f0:	ldp	x29, x30, [sp, #160]
  4251f4:	add	sp, sp, #0x100
  4251f8:	ret
  4251fc:	stp	xzr, xzr, [x29, #-64]
  425200:	stur	xzr, [x29, #-48]
  425204:	stur	wzr, [x29, #-36]
  425208:	b	424c1c <_obstack_memory_used@@Base+0xc98c>
  42520c:	stp	xzr, xzr, [x29, #-64]
  425210:	ldur	x0, [x29, #-16]
  425214:	mov	w25, #0xc                   	// #12
  425218:	b	42522c <_obstack_memory_used@@Base+0xcf9c>
  42521c:	ldur	x0, [x29, #-48]
  425220:	b	425238 <_obstack_memory_used@@Base+0xcfa8>
  425224:	mov	w25, w0
  425228:	ldur	x0, [x29, #-16]
  42522c:	bl	402620 <free@plt>
  425230:	ldur	x0, [x29, #-48]
  425234:	stur	w25, [x29, #-36]
  425238:	bl	402620 <free@plt>
  42523c:	ldur	w19, [x29, #-36]
  425240:	b	4251d8 <_obstack_memory_used@@Base+0xcf48>
  425244:	stp	xzr, xzr, [x29, #-32]
  425248:	mov	w25, #0xc                   	// #12
  42524c:	b	42522c <_obstack_memory_used@@Base+0xcf9c>
  425250:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  425254:	sub	x9, x9, x21
  425258:	cmp	x9, x8
  42525c:	b.le	4252f0 <_obstack_memory_used@@Base+0xd060>
  425260:	add	x24, x8, #0x1
  425264:	add	x25, x24, x21
  425268:	lsr	x8, x25, #61
  42526c:	cbnz	x8, 4252f0 <_obstack_memory_used@@Base+0xd060>
  425270:	ldr	x0, [x27, #16]
  425274:	lsl	x1, x25, #3
  425278:	bl	4024c0 <realloc@plt>
  42527c:	cbz	x0, 4252f0 <_obstack_memory_used@@Base+0xd060>
  425280:	mov	x23, x0
  425284:	stp	x25, x0, [x27, #8]
  425288:	add	x0, x0, x21, lsl #3
  42528c:	lsl	x2, x24, #3
  425290:	mov	w1, wzr
  425294:	bl	402470 <memset@plt>
  425298:	ldr	x24, [sp, #32]
  42529c:	b	424aec <_obstack_memory_used@@Base+0xc85c>
  4252a0:	ldr	w8, [x20, #160]
  4252a4:	mov	w9, #0xa                   	// #10
  4252a8:	and	w8, w8, #0x2
  4252ac:	eor	w23, w8, w9
  4252b0:	b	424ba8 <_obstack_memory_used@@Base+0xc918>
  4252b4:	mov	w19, w0
  4252b8:	ldur	x0, [x29, #-48]
  4252bc:	bl	402620 <free@plt>
  4252c0:	b	4251d8 <_obstack_memory_used@@Base+0xcf48>
  4252c4:	mov	w19, #0xc                   	// #12
  4252c8:	stp	xzr, xzr, [x29, #-64]
  4252cc:	stur	w19, [x29, #-36]
  4252d0:	b	4251d8 <_obstack_memory_used@@Base+0xcf48>
  4252d4:	mov	w0, w25
  4252d8:	bl	402710 <iswalnum@plt>
  4252dc:	cmp	w25, #0x5f
  4252e0:	mov	w23, #0x1                   	// #1
  4252e4:	b.eq	424ba8 <_obstack_memory_used@@Base+0xc918>  // b.none
  4252e8:	cbz	w0, 424b80 <_obstack_memory_used@@Base+0xc8f0>
  4252ec:	b	424ba8 <_obstack_memory_used@@Base+0xc918>
  4252f0:	mov	w19, #0xc                   	// #12
  4252f4:	b	4251d8 <_obstack_memory_used@@Base+0xcf48>
  4252f8:	sub	sp, sp, #0x70
  4252fc:	stp	x29, x30, [sp, #32]
  425300:	stp	x24, x23, [sp, #64]
  425304:	stp	x22, x21, [sp, #80]
  425308:	stp	x20, x19, [sp, #96]
  42530c:	ldr	x23, [x1, #8]
  425310:	mov	x22, x0
  425314:	str	x25, [sp, #48]
  425318:	add	x29, sp, #0x20
  42531c:	lsl	x0, x23, #3
  425320:	mov	w20, w3
  425324:	mov	x21, x2
  425328:	mov	x19, x1
  42532c:	stp	x23, xzr, [sp, #8]
  425330:	bl	4023a0 <malloc@plt>
  425334:	str	x0, [sp, #24]
  425338:	cbz	x0, 425434 <_obstack_memory_used@@Base+0xd1a4>
  42533c:	cmp	x23, #0x1
  425340:	b.lt	4253f8 <_obstack_memory_used@@Base+0xd168>  // b.tstop
  425344:	mov	x24, xzr
  425348:	mov	w25, #0x18                  	// #24
  42534c:	b	42536c <_obstack_memory_used@@Base+0xd0dc>
  425350:	add	x0, sp, #0x8
  425354:	bl	421d10 <_obstack_memory_used@@Base+0x9a80>
  425358:	cbnz	w0, 4253e8 <_obstack_memory_used@@Base+0xd158>
  42535c:	ldr	x8, [x19, #8]
  425360:	add	x24, x24, #0x1
  425364:	cmp	x24, x8
  425368:	b.ge	4253f8 <_obstack_memory_used@@Base+0xd168>  // b.tcont
  42536c:	ldr	x8, [x19, #16]
  425370:	ldr	x9, [x22, #48]
  425374:	ldr	x2, [x8, x24, lsl #3]
  425378:	madd	x1, x2, x25, x9
  42537c:	ldr	x8, [x1, #8]
  425380:	cmp	x8, #0x1
  425384:	b.lt	425350 <_obstack_memory_used@@Base+0xd0c0>  // b.tstop
  425388:	madd	x9, x2, x25, x9
  42538c:	ldr	x9, [x9, #16]
  425390:	ldr	x10, [x22]
  425394:	b	4253a4 <_obstack_memory_used@@Base+0xd114>
  425398:	subs	x8, x8, #0x1
  42539c:	add	x9, x9, #0x8
  4253a0:	b.eq	425350 <_obstack_memory_used@@Base+0xd0c0>  // b.none
  4253a4:	ldr	x11, [x9]
  4253a8:	add	x12, x10, x11, lsl #4
  4253ac:	ldrb	w12, [x12, #8]
  4253b0:	cmp	w12, w20
  4253b4:	b.ne	425398 <_obstack_memory_used@@Base+0xd108>  // b.any
  4253b8:	lsl	x12, x11, #4
  4253bc:	ldr	x12, [x10, x12]
  4253c0:	cmp	x12, x21
  4253c4:	b.ne	425398 <_obstack_memory_used@@Base+0xd108>  // b.any
  4253c8:	cmn	x11, #0x1
  4253cc:	b.eq	425350 <_obstack_memory_used@@Base+0xd0c0>  // b.none
  4253d0:	add	x1, sp, #0x8
  4253d4:	mov	x0, x22
  4253d8:	mov	x3, x21
  4253dc:	mov	w4, w20
  4253e0:	bl	4258f0 <_obstack_memory_used@@Base+0xd660>
  4253e4:	cbz	w0, 42535c <_obstack_memory_used@@Base+0xd0cc>
  4253e8:	mov	w23, w0
  4253ec:	ldr	x0, [sp, #24]
  4253f0:	bl	402620 <free@plt>
  4253f4:	b	425414 <_obstack_memory_used@@Base+0xd184>
  4253f8:	ldr	x0, [x19, #16]
  4253fc:	bl	402620 <free@plt>
  425400:	ldr	x8, [sp, #24]
  425404:	ldur	q0, [sp, #8]
  425408:	mov	w23, wzr
  42540c:	str	x8, [x19, #16]
  425410:	str	q0, [x19]
  425414:	mov	w0, w23
  425418:	ldp	x20, x19, [sp, #96]
  42541c:	ldp	x22, x21, [sp, #80]
  425420:	ldp	x24, x23, [sp, #64]
  425424:	ldr	x25, [sp, #48]
  425428:	ldp	x29, x30, [sp, #32]
  42542c:	add	sp, sp, #0x70
  425430:	ret
  425434:	mov	w23, #0xc                   	// #12
  425438:	b	425414 <_obstack_memory_used@@Base+0xd184>
  42543c:	sub	sp, sp, #0xb0
  425440:	stp	x29, x30, [sp, #80]
  425444:	stp	x28, x27, [sp, #96]
  425448:	stp	x26, x25, [sp, #112]
  42544c:	stp	x24, x23, [sp, #128]
  425450:	stp	x22, x21, [sp, #144]
  425454:	stp	x20, x19, [sp, #160]
  425458:	ldr	x8, [x0, #200]
  42545c:	ldr	x26, [x0, #152]
  425460:	mov	x21, x2
  425464:	mov	x22, x0
  425468:	cmp	x8, #0x1
  42546c:	mov	x24, x1
  425470:	mov	x28, xzr
  425474:	add	x29, sp, #0x50
  425478:	b.lt	4254b4 <_obstack_memory_used@@Base+0xd224>  // b.tstop
  42547c:	ldr	x9, [x22, #216]
  425480:	mov	w10, #0x28                  	// #40
  425484:	mov	x11, x8
  425488:	add	x12, x11, x28
  42548c:	cmp	x12, #0x0
  425490:	cinc	x12, x12, lt  // lt = tstop
  425494:	asr	x12, x12, #1
  425498:	madd	x13, x12, x10, x9
  42549c:	ldr	x13, [x13, #8]
  4254a0:	cmp	x13, x21
  4254a4:	csel	x11, x11, x12, lt  // lt = tstop
  4254a8:	csinc	x28, x28, x12, ge  // ge = tcont
  4254ac:	cmp	x28, x11
  4254b0:	b.lt	425488 <_obstack_memory_used@@Base+0xd1f8>  // b.tstop
  4254b4:	cmp	x28, x8
  4254b8:	b.ge	4258c4 <_obstack_memory_used@@Base+0xd634>  // b.tcont
  4254bc:	cmn	x28, #0x1
  4254c0:	mov	w0, wzr
  4254c4:	b.eq	4258c8 <_obstack_memory_used@@Base+0xd638>  // b.none
  4254c8:	ldr	x8, [x22, #216]
  4254cc:	mov	w9, #0x28                  	// #40
  4254d0:	madd	x9, x28, x9, x8
  4254d4:	ldr	x9, [x9, #8]
  4254d8:	cmp	x9, x21
  4254dc:	b.ne	4258c8 <_obstack_memory_used@@Base+0xd638>  // b.any
  4254e0:	mov	w9, #0x1                   	// #1
  4254e4:	dup	v0.2d, x9
  4254e8:	str	x3, [sp, #32]
  4254ec:	str	w4, [sp, #40]
  4254f0:	str	q0, [sp, #16]
  4254f4:	mov	w9, #0x28                  	// #40
  4254f8:	madd	x19, x28, x9, x8
  4254fc:	b	42550c <_obstack_memory_used@@Base+0xd27c>
  425500:	ldrb	w8, [x19, #32]
  425504:	add	x19, x19, #0x28
  425508:	cbz	w8, 4258c4 <_obstack_memory_used@@Base+0xd634>
  42550c:	ldr	x8, [x24, #8]
  425510:	subs	x9, x8, #0x1
  425514:	b.lt	425500 <_obstack_memory_used@@Base+0xd270>  // b.tstop
  425518:	ldr	x10, [x19]
  42551c:	ldr	x8, [x24, #16]
  425520:	mov	x11, xzr
  425524:	b.eq	42554c <_obstack_memory_used@@Base+0xd2bc>  // b.none
  425528:	mov	x12, x9
  42552c:	add	x13, x11, x12
  425530:	lsr	x13, x13, #1
  425534:	ldr	x14, [x8, x13, lsl #3]
  425538:	cmp	x14, x10
  42553c:	csinc	x11, x11, x13, ge  // ge = tcont
  425540:	csel	x12, x12, x13, lt  // lt = tstop
  425544:	cmp	x11, x12
  425548:	b.cc	42552c <_obstack_memory_used@@Base+0xd29c>  // b.lo, b.ul, b.last
  42554c:	ldr	x11, [x8, x11, lsl #3]
  425550:	cmp	x11, x10
  425554:	b.ne	425500 <_obstack_memory_used@@Base+0xd270>  // b.any
  425558:	ldp	x12, x11, [x19, #16]
  42555c:	add	x11, x11, x21
  425560:	sub	x20, x11, x12
  425564:	cmp	x20, x21
  425568:	b.ne	425628 <_obstack_memory_used@@Base+0xd398>  // b.any
  42556c:	ldr	x11, [x26, #40]
  425570:	mov	w12, #0x18                  	// #24
  425574:	madd	x10, x10, x12, x11
  425578:	ldr	x10, [x10, #16]
  42557c:	ldr	x20, [x10]
  425580:	mov	x10, xzr
  425584:	cbz	x9, 4255a8 <_obstack_memory_used@@Base+0xd318>
  425588:	add	x11, x10, x9
  42558c:	lsr	x11, x11, #1
  425590:	ldr	x12, [x8, x11, lsl #3]
  425594:	cmp	x12, x20
  425598:	csinc	x10, x10, x11, ge  // ge = tcont
  42559c:	csel	x9, x9, x11, lt  // lt = tstop
  4255a0:	cmp	x10, x9
  4255a4:	b.cc	425588 <_obstack_memory_used@@Base+0xd2f8>  // b.lo, b.ul, b.last
  4255a8:	ldr	x8, [x8, x10, lsl #3]
  4255ac:	cmp	x8, x20
  4255b0:	b.eq	425684 <_obstack_memory_used@@Base+0xd3f4>  // b.none
  4255b4:	ldr	q0, [sp, #16]
  4255b8:	mov	w0, #0x8                   	// #8
  4255bc:	stur	q0, [x29, #-32]
  4255c0:	bl	4023a0 <malloc@plt>
  4255c4:	stur	x0, [x29, #-16]
  4255c8:	cbz	x0, 42582c <_obstack_memory_used@@Base+0xd59c>
  4255cc:	mov	w23, wzr
  4255d0:	str	x20, [x0]
  4255d4:	ldr	x2, [sp, #32]
  4255d8:	ldr	w3, [sp, #40]
  4255dc:	sub	x1, x29, #0x20
  4255e0:	mov	x0, x26
  4255e4:	stur	w23, [x29, #-4]
  4255e8:	mov	x20, x26
  4255ec:	bl	4252f8 <_obstack_memory_used@@Base+0xd068>
  4255f0:	mov	w26, w0
  4255f4:	sub	x1, x29, #0x20
  4255f8:	mov	x0, x24
  4255fc:	bl	421d10 <_obstack_memory_used@@Base+0x9a80>
  425600:	ldur	x8, [x29, #-16]
  425604:	mov	w27, w0
  425608:	mov	x0, x8
  42560c:	bl	402620 <free@plt>
  425610:	orr	w8, w26, w23
  425614:	orr	w8, w8, w27
  425618:	cbnz	w8, 425838 <_obstack_memory_used@@Base+0xd5a8>
  42561c:	mov	w8, #0x2                   	// #2
  425620:	mov	x26, x20
  425624:	b	42581c <_obstack_memory_used@@Base+0xd58c>
  425628:	ldr	x8, [x22, #184]
  42562c:	ldr	x9, [x26, #24]
  425630:	ldr	x27, [x8, x20, lsl #3]
  425634:	ldr	x23, [x9, x10, lsl #3]
  425638:	cbz	x27, 42568c <_obstack_memory_used@@Base+0xd3fc>
  42563c:	ldr	x25, [x27, #16]
  425640:	cmp	x25, #0x0
  425644:	b.le	4256b4 <_obstack_memory_used@@Base+0xd424>
  425648:	ldr	x8, [x27, #24]
  42564c:	mov	x10, xzr
  425650:	subs	x9, x25, #0x1
  425654:	b.eq	425678 <_obstack_memory_used@@Base+0xd3e8>  // b.none
  425658:	add	x11, x10, x9
  42565c:	lsr	x11, x11, #1
  425660:	ldr	x12, [x8, x11, lsl #3]
  425664:	cmp	x12, x23
  425668:	csinc	x10, x10, x11, ge  // ge = tcont
  42566c:	csel	x9, x9, x11, lt  // lt = tstop
  425670:	cmp	x10, x9
  425674:	b.cc	425658 <_obstack_memory_used@@Base+0xd3c8>  // b.lo, b.ul, b.last
  425678:	ldr	x8, [x8, x10, lsl #3]
  42567c:	cmp	x8, x23
  425680:	b.ne	4256bc <_obstack_memory_used@@Base+0xd42c>  // b.any
  425684:	mov	w8, #0x4                   	// #4
  425688:	b	42581c <_obstack_memory_used@@Base+0xd58c>
  42568c:	mov	w8, #0x1                   	// #1
  425690:	dup	v0.2d, x8
  425694:	mov	w0, #0x8                   	// #8
  425698:	stur	q0, [x29, #-32]
  42569c:	bl	4023a0 <malloc@plt>
  4256a0:	stur	x0, [x29, #-16]
  4256a4:	cbz	x0, 42585c <_obstack_memory_used@@Base+0xd5cc>
  4256a8:	str	x23, [x0]
  4256ac:	stur	wzr, [x29, #-4]
  4256b0:	b	4257c8 <_obstack_memory_used@@Base+0xd538>
  4256b4:	stur	x25, [x29, #-24]
  4256b8:	b	42574c <_obstack_memory_used@@Base+0xd4bc>
  4256bc:	cmp	x25, #0x1
  4256c0:	stur	x25, [x29, #-24]
  4256c4:	b.lt	42574c <_obstack_memory_used@@Base+0xd4bc>  // b.tstop
  4256c8:	lsl	x0, x25, #3
  4256cc:	stur	x25, [x29, #-32]
  4256d0:	stp	x0, x26, [sp]
  4256d4:	bl	4023a0 <malloc@plt>
  4256d8:	stur	x0, [x29, #-16]
  4256dc:	cbz	x0, 425884 <_obstack_memory_used@@Base+0xd5f4>
  4256e0:	ldr	x1, [x27, #24]
  4256e4:	ldr	x2, [sp]
  4256e8:	mov	x26, x0
  4256ec:	bl	402210 <memcpy@plt>
  4256f0:	lsl	x8, x25, #1
  4256f4:	lsl	x1, x25, #4
  4256f8:	mov	x0, x26
  4256fc:	stur	wzr, [x29, #-4]
  425700:	stur	x8, [x29, #-32]
  425704:	bl	4024c0 <realloc@plt>
  425708:	cbz	x0, 425894 <_obstack_memory_used@@Base+0xd604>
  42570c:	ldr	x9, [x0]
  425710:	ldur	x8, [x29, #-24]
  425714:	ldr	x26, [sp, #8]
  425718:	stur	x0, [x29, #-16]
  42571c:	cmp	x9, x23
  425720:	b.le	425788 <_obstack_memory_used@@Base+0xd4f8>
  425724:	cmp	x8, #0x1
  425728:	b.lt	4257b8 <_obstack_memory_used@@Base+0xd528>  // b.tstop
  42572c:	mov	x10, x8
  425730:	add	x11, x0, x10, lsl #3
  425734:	ldur	x12, [x11, #-8]
  425738:	subs	x9, x10, #0x1
  42573c:	mov	x10, x9
  425740:	str	x12, [x11]
  425744:	b.gt	425730 <_obstack_memory_used@@Base+0xd4a0>
  425748:	b	4257bc <_obstack_memory_used@@Base+0xd52c>
  42574c:	mov	w25, wzr
  425750:	stp	xzr, xzr, [x29, #-32]
  425754:	stur	xzr, [x29, #-16]
  425758:	mov	w8, #0x1                   	// #1
  42575c:	dup	v0.2d, x8
  425760:	mov	w0, #0x8                   	// #8
  425764:	stur	w25, [x29, #-4]
  425768:	stur	q0, [x29, #-32]
  42576c:	bl	4023a0 <malloc@plt>
  425770:	stur	x0, [x29, #-16]
  425774:	cbz	x0, 425878 <_obstack_memory_used@@Base+0xd5e8>
  425778:	str	x23, [x0]
  42577c:	cbz	w25, 4257c8 <_obstack_memory_used@@Base+0xd538>
  425780:	bl	402620 <free@plt>
  425784:	b	4258a4 <_obstack_memory_used@@Base+0xd614>
  425788:	add	x9, x0, x8, lsl #3
  42578c:	ldur	x10, [x9, #-8]
  425790:	mov	x9, x8
  425794:	cmp	x10, x23
  425798:	b.le	4257bc <_obstack_memory_used@@Base+0xd52c>
  42579c:	add	x11, x0, x9, lsl #3
  4257a0:	str	x10, [x11]
  4257a4:	ldur	x10, [x11, #-16]
  4257a8:	sub	x9, x9, #0x1
  4257ac:	cmp	x10, x23
  4257b0:	b.gt	42579c <_obstack_memory_used@@Base+0xd50c>
  4257b4:	b	4257bc <_obstack_memory_used@@Base+0xd52c>
  4257b8:	mov	x9, x8
  4257bc:	add	x8, x8, #0x1
  4257c0:	str	x23, [x0, x9, lsl #3]
  4257c4:	stur	x8, [x29, #-24]
  4257c8:	sub	x0, x29, #0x4
  4257cc:	sub	x2, x29, #0x20
  4257d0:	mov	x1, x26
  4257d4:	bl	425a20 <_obstack_memory_used@@Base+0xd790>
  4257d8:	ldr	x8, [x22, #184]
  4257dc:	lsl	x20, x20, #3
  4257e0:	str	x0, [x8, x20]
  4257e4:	ldur	x0, [x29, #-16]
  4257e8:	bl	402620 <free@plt>
  4257ec:	ldr	x8, [x22, #184]
  4257f0:	ldur	w9, [x29, #-4]
  4257f4:	ldr	x8, [x8, x20]
  4257f8:	cmp	x8, #0x0
  4257fc:	cset	w10, eq  // eq = none
  425800:	cmp	w9, #0x0
  425804:	cset	w11, ne  // ne = any
  425808:	and	w8, w10, w11
  42580c:	tst	w10, w11
  425810:	ldur	w10, [x29, #-36]
  425814:	csel	w10, w9, w10, ne  // ne = any
  425818:	stur	w10, [x29, #-36]
  42581c:	cbz	w8, 425500 <_obstack_memory_used@@Base+0xd270>
  425820:	cmp	w8, #0x4
  425824:	b.eq	425500 <_obstack_memory_used@@Base+0xd270>  // b.none
  425828:	b	4258b4 <_obstack_memory_used@@Base+0xd624>
  42582c:	stp	xzr, xzr, [x29, #-32]
  425830:	mov	w23, #0xc                   	// #12
  425834:	b	4255d4 <_obstack_memory_used@@Base+0xd344>
  425838:	cmp	w26, #0x0
  42583c:	csel	w8, w27, w26, eq  // eq = none
  425840:	cmp	w23, #0x0
  425844:	csel	w8, w8, w23, eq  // eq = none
  425848:	stur	w8, [x29, #-36]
  42584c:	stur	w8, [x29, #-4]
  425850:	mov	w8, #0x1                   	// #1
  425854:	mov	x26, x20
  425858:	b	42581c <_obstack_memory_used@@Base+0xd58c>
  42585c:	mov	w9, #0xc                   	// #12
  425860:	mov	w8, #0xc                   	// #12
  425864:	stp	xzr, xzr, [x29, #-32]
  425868:	stur	w8, [x29, #-36]
  42586c:	stur	w9, [x29, #-4]
  425870:	mov	w8, #0x1                   	// #1
  425874:	b	42581c <_obstack_memory_used@@Base+0xd58c>
  425878:	stp	xzr, xzr, [x29, #-32]
  42587c:	cbnz	w25, 4258a4 <_obstack_memory_used@@Base+0xd614>
  425880:	b	4258a0 <_obstack_memory_used@@Base+0xd610>
  425884:	ldr	x26, [sp, #8]
  425888:	mov	w25, #0xc                   	// #12
  42588c:	stp	xzr, xzr, [x29, #-32]
  425890:	b	425758 <_obstack_memory_used@@Base+0xd4c8>
  425894:	ldur	x0, [x29, #-16]
  425898:	bl	402620 <free@plt>
  42589c:	ldr	x26, [sp, #8]
  4258a0:	mov	w25, #0xc                   	// #12
  4258a4:	stur	w25, [x29, #-4]
  4258a8:	mov	w8, #0x1                   	// #1
  4258ac:	stur	w25, [x29, #-36]
  4258b0:	b	42581c <_obstack_memory_used@@Base+0xd58c>
  4258b4:	cmp	w8, #0x2
  4258b8:	b.ne	4258e8 <_obstack_memory_used@@Base+0xd658>  // b.any
  4258bc:	ldr	x8, [x22, #216]
  4258c0:	b	4254f4 <_obstack_memory_used@@Base+0xd264>
  4258c4:	mov	w0, wzr
  4258c8:	ldp	x20, x19, [sp, #160]
  4258cc:	ldp	x22, x21, [sp, #144]
  4258d0:	ldp	x24, x23, [sp, #128]
  4258d4:	ldp	x26, x25, [sp, #112]
  4258d8:	ldp	x28, x27, [sp, #96]
  4258dc:	ldp	x29, x30, [sp, #80]
  4258e0:	add	sp, sp, #0xb0
  4258e4:	ret
  4258e8:	ldur	w0, [x29, #-36]
  4258ec:	b	4258c8 <_obstack_memory_used@@Base+0xd638>
  4258f0:	stp	x29, x30, [sp, #-64]!
  4258f4:	stp	x24, x23, [sp, #16]
  4258f8:	stp	x22, x21, [sp, #32]
  4258fc:	stp	x20, x19, [sp, #48]
  425900:	mov	w21, w4
  425904:	mov	x22, x3
  425908:	mov	x19, x2
  42590c:	mov	x20, x1
  425910:	mov	x23, x0
  425914:	mov	w24, #0x18                  	// #24
  425918:	mov	x29, sp
  42591c:	b	425930 <_obstack_memory_used@@Base+0xd6a0>
  425920:	cbz	x9, 425a00 <_obstack_memory_used@@Base+0xd770>
  425924:	madd	x8, x19, x24, x8
  425928:	ldr	x8, [x8, #16]
  42592c:	ldr	x19, [x8]
  425930:	ldr	x8, [x20, #8]
  425934:	subs	x9, x8, #0x1
  425938:	b.lt	425974 <_obstack_memory_used@@Base+0xd6e4>  // b.tstop
  42593c:	ldr	x8, [x20, #16]
  425940:	mov	x10, xzr
  425944:	b.eq	425968 <_obstack_memory_used@@Base+0xd6d8>  // b.none
  425948:	add	x11, x10, x9
  42594c:	lsr	x11, x11, #1
  425950:	ldr	x12, [x8, x11, lsl #3]
  425954:	cmp	x12, x19
  425958:	csinc	x10, x10, x11, ge  // ge = tcont
  42595c:	csel	x9, x9, x11, lt  // lt = tstop
  425960:	cmp	x10, x9
  425964:	b.cc	425948 <_obstack_memory_used@@Base+0xd6b8>  // b.lo, b.ul, b.last
  425968:	ldr	x8, [x8, x10, lsl #3]
  42596c:	cmp	x8, x19
  425970:	b.eq	425a00 <_obstack_memory_used@@Base+0xd770>  // b.none
  425974:	ldr	x8, [x23]
  425978:	add	x9, x8, x19, lsl #4
  42597c:	ldrb	w9, [x9, #8]
  425980:	cmp	w9, w21
  425984:	b.ne	425998 <_obstack_memory_used@@Base+0xd708>  // b.any
  425988:	lsl	x9, x19, #4
  42598c:	ldr	x8, [x8, x9]
  425990:	cmp	x8, x22
  425994:	b.eq	4259e8 <_obstack_memory_used@@Base+0xd758>  // b.none
  425998:	mov	x0, x20
  42599c:	mov	x1, x19
  4259a0:	bl	421e9c <_obstack_memory_used@@Base+0x9c0c>
  4259a4:	tbz	w0, #0, 425a18 <_obstack_memory_used@@Base+0xd788>
  4259a8:	ldr	x8, [x23, #40]
  4259ac:	madd	x9, x19, x24, x8
  4259b0:	ldr	x9, [x9, #8]
  4259b4:	cmp	x9, #0x2
  4259b8:	b.ne	425920 <_obstack_memory_used@@Base+0xd690>  // b.any
  4259bc:	madd	x8, x19, x24, x8
  4259c0:	ldr	x8, [x8, #16]
  4259c4:	mov	x0, x23
  4259c8:	mov	x1, x20
  4259cc:	mov	x3, x22
  4259d0:	ldr	x2, [x8, #8]
  4259d4:	mov	w4, w21
  4259d8:	bl	4258f0 <_obstack_memory_used@@Base+0xd660>
  4259dc:	cbnz	w0, 425a04 <_obstack_memory_used@@Base+0xd774>
  4259e0:	ldr	x8, [x23, #40]
  4259e4:	b	425924 <_obstack_memory_used@@Base+0xd694>
  4259e8:	cmp	w21, #0x9
  4259ec:	b.ne	425a00 <_obstack_memory_used@@Base+0xd770>  // b.any
  4259f0:	mov	x0, x20
  4259f4:	mov	x1, x19
  4259f8:	bl	421e9c <_obstack_memory_used@@Base+0x9c0c>
  4259fc:	tbz	w0, #0, 425a18 <_obstack_memory_used@@Base+0xd788>
  425a00:	mov	w0, wzr
  425a04:	ldp	x20, x19, [sp, #48]
  425a08:	ldp	x22, x21, [sp, #32]
  425a0c:	ldp	x24, x23, [sp, #16]
  425a10:	ldp	x29, x30, [sp], #64
  425a14:	ret
  425a18:	mov	w0, #0xc                   	// #12
  425a1c:	b	425a04 <_obstack_memory_used@@Base+0xd774>
  425a20:	stp	x29, x30, [sp, #-80]!
  425a24:	stp	x26, x25, [sp, #16]
  425a28:	stp	x24, x23, [sp, #32]
  425a2c:	stp	x22, x21, [sp, #48]
  425a30:	stp	x20, x19, [sp, #64]
  425a34:	ldr	x25, [x2, #8]
  425a38:	mov	x19, x0
  425a3c:	mov	x29, sp
  425a40:	cbz	x25, 425c6c <_obstack_memory_used@@Base+0xd9dc>
  425a44:	mov	x22, x2
  425a48:	mov	x20, x1
  425a4c:	subs	x8, x25, #0x1
  425a50:	mov	x21, x25
  425a54:	b.lt	425acc <_obstack_memory_used@@Base+0xd83c>  // b.tstop
  425a58:	ldr	x9, [x22, #16]
  425a5c:	cmp	x25, #0x4
  425a60:	b.cs	425a70 <_obstack_memory_used@@Base+0xd7e0>  // b.hs, b.nlast
  425a64:	mov	x10, xzr
  425a68:	mov	x21, x25
  425a6c:	b	425ab4 <_obstack_memory_used@@Base+0xd824>
  425a70:	and	x10, x25, #0xfffffffffffffffc
  425a74:	movi	v1.2d, #0x0
  425a78:	movi	v0.2d, #0x0
  425a7c:	mov	v1.d[0], x25
  425a80:	add	x11, x9, #0x10
  425a84:	mov	x12, x10
  425a88:	ldp	q2, q3, [x11, #-16]
  425a8c:	subs	x12, x12, #0x4
  425a90:	add	x11, x11, #0x20
  425a94:	add	v1.2d, v2.2d, v1.2d
  425a98:	add	v0.2d, v3.2d, v0.2d
  425a9c:	b.ne	425a88 <_obstack_memory_used@@Base+0xd7f8>  // b.any
  425aa0:	add	v0.2d, v0.2d, v1.2d
  425aa4:	addp	d0, v0.2d
  425aa8:	cmp	x25, x10
  425aac:	fmov	x21, d0
  425ab0:	b.eq	425acc <_obstack_memory_used@@Base+0xd83c>  // b.none
  425ab4:	sub	x11, x25, x10
  425ab8:	add	x9, x9, x10, lsl #3
  425abc:	ldr	x10, [x9], #8
  425ac0:	subs	x11, x11, #0x1
  425ac4:	add	x21, x10, x21
  425ac8:	b.ne	425abc <_obstack_memory_used@@Base+0xd82c>  // b.any
  425acc:	ldr	x9, [x20, #136]
  425ad0:	ldr	x10, [x20, #64]
  425ad4:	and	x11, x9, x21
  425ad8:	mov	w9, #0x18                  	// #24
  425adc:	mul	x9, x11, x9
  425ae0:	ldr	x9, [x10, x9]
  425ae4:	cmp	x9, #0x1
  425ae8:	b.lt	425b60 <_obstack_memory_used@@Base+0xd8d0>  // b.tstop
  425aec:	mov	w12, #0x18                  	// #24
  425af0:	madd	x10, x11, x12, x10
  425af4:	ldr	x10, [x10, #16]
  425af8:	mov	x11, xzr
  425afc:	b	425b0c <_obstack_memory_used@@Base+0xd87c>
  425b00:	add	x11, x11, #0x1
  425b04:	cmp	x11, x9
  425b08:	b.ge	425b60 <_obstack_memory_used@@Base+0xd8d0>  // b.tcont
  425b0c:	cbz	x22, 425b00 <_obstack_memory_used@@Base+0xd870>
  425b10:	ldr	x23, [x10, x11, lsl #3]
  425b14:	ldr	x12, [x23]
  425b18:	cmp	x21, x12
  425b1c:	b.ne	425b00 <_obstack_memory_used@@Base+0xd870>  // b.any
  425b20:	ldr	x12, [x23, #16]
  425b24:	cmp	x12, x25
  425b28:	b.ne	425b00 <_obstack_memory_used@@Base+0xd870>  // b.any
  425b2c:	mov	x12, x8
  425b30:	add	x13, x12, #0x1
  425b34:	cmp	x13, #0x1
  425b38:	b.lt	425c50 <_obstack_memory_used@@Base+0xd9c0>  // b.tstop
  425b3c:	ldr	x13, [x23, #24]
  425b40:	ldr	x14, [x22, #16]
  425b44:	lsl	x15, x12, #3
  425b48:	sub	x12, x12, #0x1
  425b4c:	ldr	x13, [x13, x15]
  425b50:	ldr	x14, [x14, x15]
  425b54:	cmp	x13, x14
  425b58:	b.eq	425b30 <_obstack_memory_used@@Base+0xd8a0>  // b.none
  425b5c:	b	425b00 <_obstack_memory_used@@Base+0xd870>
  425b60:	mov	w0, #0x70                  	// #112
  425b64:	mov	w1, #0x1                   	// #1
  425b68:	bl	402480 <calloc@plt>
  425b6c:	cbz	x0, 425c8c <_obstack_memory_used@@Base+0xd9fc>
  425b70:	mov	x23, x0
  425b74:	add	x26, x0, #0x8
  425b78:	cmp	x25, #0x1
  425b7c:	str	x25, [x0, #16]
  425b80:	b.lt	425c30 <_obstack_memory_used@@Base+0xd9a0>  // b.tstop
  425b84:	lsl	x24, x25, #3
  425b88:	mov	x0, x24
  425b8c:	str	x25, [x23, #8]
  425b90:	bl	4023a0 <malloc@plt>
  425b94:	str	x0, [x23, #24]
  425b98:	cbz	x0, 425c84 <_obstack_memory_used@@Base+0xd9f4>
  425b9c:	ldr	x22, [x22, #16]
  425ba0:	mov	x2, x24
  425ba4:	mov	x1, x22
  425ba8:	bl	402210 <memcpy@plt>
  425bac:	str	x26, [x23, #80]
  425bb0:	ldr	x8, [x20]
  425bb4:	mov	w9, wzr
  425bb8:	b	425bdc <_obstack_memory_used@@Base+0xd94c>
  425bbc:	ldr	w10, [x10]
  425bc0:	tst	w10, #0x3ff00
  425bc4:	b.eq	425bd0 <_obstack_memory_used@@Base+0xd940>  // b.none
  425bc8:	orr	w9, w9, #0xffffff80
  425bcc:	strb	w9, [x23, #104]
  425bd0:	subs	x25, x25, #0x1
  425bd4:	add	x22, x22, #0x8
  425bd8:	b.eq	425c3c <_obstack_memory_used@@Base+0xd9ac>  // b.none
  425bdc:	ldr	x10, [x22]
  425be0:	add	x10, x8, x10, lsl #4
  425be4:	ldr	w11, [x10, #8]!
  425be8:	and	w12, w11, #0x3ffff
  425bec:	cmp	w12, #0x1
  425bf0:	b.eq	425bd0 <_obstack_memory_used@@Base+0xd940>  // b.none
  425bf4:	lsr	w12, w11, #15
  425bf8:	and	w11, w11, #0xff
  425bfc:	and	w12, w12, #0x20
  425c00:	orr	w9, w12, w9
  425c04:	cmp	w11, #0xc
  425c08:	strb	w9, [x23, #104]
  425c0c:	b.eq	425bc8 <_obstack_memory_used@@Base+0xd938>  // b.none
  425c10:	cmp	w11, #0x4
  425c14:	b.eq	425c28 <_obstack_memory_used@@Base+0xd998>  // b.none
  425c18:	cmp	w11, #0x2
  425c1c:	b.ne	425bbc <_obstack_memory_used@@Base+0xd92c>  // b.any
  425c20:	orr	w9, w9, #0x10
  425c24:	b	425bcc <_obstack_memory_used@@Base+0xd93c>
  425c28:	orr	w9, w9, #0x40
  425c2c:	b	425bcc <_obstack_memory_used@@Base+0xd93c>
  425c30:	stp	xzr, xzr, [x26]
  425c34:	str	xzr, [x26, #16]
  425c38:	str	x26, [x23, #80]
  425c3c:	mov	x0, x20
  425c40:	mov	x1, x23
  425c44:	mov	x2, x21
  425c48:	bl	4223c8 <_obstack_memory_used@@Base+0xa138>
  425c4c:	cbnz	w0, 425c78 <_obstack_memory_used@@Base+0xd9e8>
  425c50:	mov	x0, x23
  425c54:	ldp	x20, x19, [sp, #64]
  425c58:	ldp	x22, x21, [sp, #48]
  425c5c:	ldp	x24, x23, [sp, #32]
  425c60:	ldp	x26, x25, [sp, #16]
  425c64:	ldp	x29, x30, [sp], #80
  425c68:	ret
  425c6c:	mov	x23, xzr
  425c70:	str	wzr, [x19]
  425c74:	b	425c50 <_obstack_memory_used@@Base+0xd9c0>
  425c78:	mov	x0, x23
  425c7c:	bl	41cca4 <_obstack_memory_used@@Base+0x4a14>
  425c80:	b	425c8c <_obstack_memory_used@@Base+0xd9fc>
  425c84:	mov	x0, x23
  425c88:	bl	402620 <free@plt>
  425c8c:	mov	x23, xzr
  425c90:	mov	w8, #0xc                   	// #12
  425c94:	str	w8, [x19]
  425c98:	b	425c50 <_obstack_memory_used@@Base+0xd9c0>
  425c9c:	stp	x29, x30, [sp, #-48]!
  425ca0:	stp	x22, x21, [sp, #16]
  425ca4:	stp	x20, x19, [sp, #32]
  425ca8:	ldr	x8, [x0]
  425cac:	mov	x29, sp
  425cb0:	add	x9, x8, x1, lsl #4
  425cb4:	ldrb	w10, [x9, #8]
  425cb8:	cmp	w10, #0x7
  425cbc:	b.eq	425ea8 <_obstack_memory_used@@Base+0xdc18>  // b.none
  425cc0:	ldr	w9, [x2, #144]
  425cc4:	cmp	w9, #0x1
  425cc8:	b.ne	425d20 <_obstack_memory_used@@Base+0xda90>  // b.any
  425ccc:	mov	w20, #0x1                   	// #1
  425cd0:	cmp	w10, #0x5
  425cd4:	b.eq	425d6c <_obstack_memory_used@@Base+0xdadc>  // b.none
  425cd8:	cmp	w10, #0x6
  425cdc:	mov	w0, wzr
  425ce0:	b.ne	425e84 <_obstack_memory_used@@Base+0xdbf4>  // b.any
  425ce4:	cmp	w20, #0x2
  425ce8:	b.lt	425e84 <_obstack_memory_used@@Base+0xdbf4>  // b.tstop
  425cec:	lsl	x10, x1, #4
  425cf0:	ldr	x21, [x8, x10]
  425cf4:	ldr	x8, [x21, #64]
  425cf8:	cbnz	x8, 425d0c <_obstack_memory_used@@Base+0xda7c>
  425cfc:	ldr	x10, [x21, #72]
  425d00:	cbnz	x10, 425d0c <_obstack_memory_used@@Base+0xda7c>
  425d04:	ldr	x10, [x21, #40]
  425d08:	cbz	x10, 425ea0 <_obstack_memory_used@@Base+0xdc10>
  425d0c:	cmp	w9, #0x1
  425d10:	b.ne	425db4 <_obstack_memory_used@@Base+0xdb24>  // b.any
  425d14:	ldr	x9, [x2, #8]
  425d18:	ldrb	w19, [x9, x3]
  425d1c:	b	425dbc <_obstack_memory_used@@Base+0xdb2c>
  425d20:	ldr	x11, [x2, #48]
  425d24:	add	x12, x3, #0x1
  425d28:	cmp	x12, x11
  425d2c:	b.ge	425d60 <_obstack_memory_used@@Base+0xdad0>  // b.tcont
  425d30:	ldr	x13, [x2, #16]
  425d34:	sub	w20, w11, w3
  425d38:	sub	x12, x11, x3
  425d3c:	mov	w11, #0x1                   	// #1
  425d40:	add	x13, x13, x3, lsl #2
  425d44:	ldr	w14, [x13, x11, lsl #2]
  425d48:	cmn	w14, #0x1
  425d4c:	b.ne	425da4 <_obstack_memory_used@@Base+0xdb14>  // b.any
  425d50:	add	x11, x11, #0x1
  425d54:	cmp	x12, x11
  425d58:	b.ne	425d44 <_obstack_memory_used@@Base+0xdab4>  // b.any
  425d5c:	b	425d64 <_obstack_memory_used@@Base+0xdad4>
  425d60:	mov	w20, #0x1                   	// #1
  425d64:	cmp	w10, #0x5
  425d68:	b.ne	425cd8 <_obstack_memory_used@@Base+0xda48>  // b.any
  425d6c:	cmp	w20, #0x2
  425d70:	b.lt	425e80 <_obstack_memory_used@@Base+0xdbf0>  // b.tstop
  425d74:	ldr	x8, [x0, #216]
  425d78:	tbnz	w8, #6, 425d8c <_obstack_memory_used@@Base+0xdafc>
  425d7c:	ldr	x9, [x2, #8]
  425d80:	ldrb	w9, [x9, x3]
  425d84:	cmp	w9, #0xa
  425d88:	b.eq	425e80 <_obstack_memory_used@@Base+0xdbf0>  // b.none
  425d8c:	tbz	w8, #7, 425d9c <_obstack_memory_used@@Base+0xdb0c>
  425d90:	ldr	x8, [x2, #8]
  425d94:	ldrb	w8, [x8, x3]
  425d98:	cbz	w8, 425e80 <_obstack_memory_used@@Base+0xdbf0>
  425d9c:	mov	w0, w20
  425da0:	b	425e84 <_obstack_memory_used@@Base+0xdbf4>
  425da4:	mov	w20, w11
  425da8:	cmp	w10, #0x5
  425dac:	b.eq	425d6c <_obstack_memory_used@@Base+0xdadc>  // b.none
  425db0:	b	425cd8 <_obstack_memory_used@@Base+0xda48>
  425db4:	ldr	x9, [x2, #16]
  425db8:	ldr	w19, [x9, x3, lsl #2]
  425dbc:	ldr	x9, [x21, #40]
  425dc0:	cmp	x9, #0x1
  425dc4:	b.lt	425de8 <_obstack_memory_used@@Base+0xdb58>  // b.tstop
  425dc8:	ldr	x10, [x21]
  425dcc:	mov	x11, xzr
  425dd0:	ldr	w12, [x10, x11, lsl #2]
  425dd4:	cmp	w19, w12
  425dd8:	b.eq	425e5c <_obstack_memory_used@@Base+0xdbcc>  // b.none
  425ddc:	add	x11, x11, #0x1
  425de0:	cmp	x11, x9
  425de4:	b.lt	425dd0 <_obstack_memory_used@@Base+0xdb40>  // b.tstop
  425de8:	ldr	x9, [x21, #72]
  425dec:	cmp	x9, #0x1
  425df0:	b.lt	425e20 <_obstack_memory_used@@Base+0xdb90>  // b.tstop
  425df4:	mov	x22, xzr
  425df8:	ldr	x8, [x21, #24]
  425dfc:	mov	w0, w19
  425e00:	ldr	x1, [x8, x22, lsl #3]
  425e04:	bl	402390 <iswctype@plt>
  425e08:	cbnz	w0, 425e5c <_obstack_memory_used@@Base+0xdbcc>
  425e0c:	ldr	x8, [x21, #72]
  425e10:	add	x22, x22, #0x1
  425e14:	cmp	x22, x8
  425e18:	b.lt	425df8 <_obstack_memory_used@@Base+0xdb68>  // b.tstop
  425e1c:	ldr	x8, [x21, #64]
  425e20:	cmp	x8, #0x1
  425e24:	b.lt	425e6c <_obstack_memory_used@@Base+0xdbdc>  // b.tstop
  425e28:	ldr	x9, [x21, #8]
  425e2c:	mov	x10, xzr
  425e30:	b	425e40 <_obstack_memory_used@@Base+0xdbb0>
  425e34:	add	x10, x10, #0x1
  425e38:	cmp	x10, x8
  425e3c:	b.ge	425e6c <_obstack_memory_used@@Base+0xdbdc>  // b.tcont
  425e40:	ldr	w11, [x9, x10, lsl #2]
  425e44:	cmp	w11, w19
  425e48:	b.hi	425e34 <_obstack_memory_used@@Base+0xdba4>  // b.pmore
  425e4c:	ldr	x11, [x21, #16]
  425e50:	ldr	w11, [x11, x10, lsl #2]
  425e54:	cmp	w19, w11
  425e58:	b.hi	425e34 <_obstack_memory_used@@Base+0xdba4>  // b.pmore
  425e5c:	mov	w0, w20
  425e60:	ldrb	w8, [x21, #32]
  425e64:	tbnz	w8, #0, 425e78 <_obstack_memory_used@@Base+0xdbe8>
  425e68:	b	425e84 <_obstack_memory_used@@Base+0xdbf4>
  425e6c:	mov	w0, wzr
  425e70:	ldrb	w8, [x21, #32]
  425e74:	tbz	w8, #0, 425e84 <_obstack_memory_used@@Base+0xdbf4>
  425e78:	cmp	w0, #0x0
  425e7c:	b.le	425e94 <_obstack_memory_used@@Base+0xdc04>
  425e80:	mov	w0, wzr
  425e84:	ldp	x20, x19, [sp, #32]
  425e88:	ldp	x22, x21, [sp, #16]
  425e8c:	ldp	x29, x30, [sp], #48
  425e90:	ret
  425e94:	cmp	w20, #0x1
  425e98:	csinc	w0, w20, wzr, gt
  425e9c:	b	425e84 <_obstack_memory_used@@Base+0xdbf4>
  425ea0:	mov	w19, wzr
  425ea4:	b	425dbc <_obstack_memory_used@@Base+0xdb2c>
  425ea8:	ldr	x8, [x2, #8]
  425eac:	ldrb	w10, [x8, x3]
  425eb0:	cmp	w10, #0xc2
  425eb4:	b.cc	425e80 <_obstack_memory_used@@Base+0xdbf0>  // b.lo, b.ul, b.last
  425eb8:	ldr	x9, [x2, #88]
  425ebc:	add	x11, x3, #0x2
  425ec0:	cmp	x11, x9
  425ec4:	b.gt	425e80 <_obstack_memory_used@@Base+0xdbf0>
  425ec8:	add	x11, x3, x8
  425ecc:	ldrb	w11, [x11, #1]
  425ed0:	cmp	w10, #0xdf
  425ed4:	b.hi	425ef4 <_obstack_memory_used@@Base+0xdc64>  // b.pmore
  425ed8:	sxtb	w8, w11
  425edc:	cmp	w11, #0xbf
  425ee0:	mov	w9, #0xffffffff            	// #-1
  425ee4:	ccmp	w8, w9, #0x0, ls  // ls = plast
  425ee8:	mov	w8, #0x2                   	// #2
  425eec:	csel	w0, wzr, w8, gt
  425ef0:	b	425e84 <_obstack_memory_used@@Base+0xdbf4>
  425ef4:	cmp	w10, #0xef
  425ef8:	b.hi	425f14 <_obstack_memory_used@@Base+0xdc84>  // b.pmore
  425efc:	cmp	w10, #0xe0
  425f00:	mov	w10, #0x3                   	// #3
  425f04:	b.ne	425f70 <_obstack_memory_used@@Base+0xdce0>  // b.any
  425f08:	cmp	w11, #0xa0
  425f0c:	b.cc	425e80 <_obstack_memory_used@@Base+0xdbf0>  // b.lo, b.ul, b.last
  425f10:	b	425f70 <_obstack_memory_used@@Base+0xdce0>
  425f14:	cmp	w10, #0xf7
  425f18:	b.hi	425f34 <_obstack_memory_used@@Base+0xdca4>  // b.pmore
  425f1c:	cmp	w10, #0xf0
  425f20:	mov	w10, #0x4                   	// #4
  425f24:	b.ne	425f70 <_obstack_memory_used@@Base+0xdce0>  // b.any
  425f28:	cmp	w11, #0x90
  425f2c:	b.cc	425e80 <_obstack_memory_used@@Base+0xdbf0>  // b.lo, b.ul, b.last
  425f30:	b	425f70 <_obstack_memory_used@@Base+0xdce0>
  425f34:	cmp	w10, #0xfb
  425f38:	b.hi	425f54 <_obstack_memory_used@@Base+0xdcc4>  // b.pmore
  425f3c:	cmp	w10, #0xf8
  425f40:	mov	w10, #0x5                   	// #5
  425f44:	b.ne	425f70 <_obstack_memory_used@@Base+0xdce0>  // b.any
  425f48:	cmp	w11, #0x88
  425f4c:	b.cc	425e80 <_obstack_memory_used@@Base+0xdbf0>  // b.lo, b.ul, b.last
  425f50:	b	425f70 <_obstack_memory_used@@Base+0xdce0>
  425f54:	cmp	w10, #0xfd
  425f58:	b.hi	425e80 <_obstack_memory_used@@Base+0xdbf0>  // b.pmore
  425f5c:	cmp	w10, #0xfc
  425f60:	mov	w10, #0x6                   	// #6
  425f64:	b.ne	425f70 <_obstack_memory_used@@Base+0xdce0>  // b.any
  425f68:	cmp	w11, #0x84
  425f6c:	b.cc	425e80 <_obstack_memory_used@@Base+0xdbf0>  // b.lo, b.ul, b.last
  425f70:	add	x11, x10, x3
  425f74:	cmp	x11, x9
  425f78:	b.gt	425e80 <_obstack_memory_used@@Base+0xdbf0>
  425f7c:	add	x8, x3, x8
  425f80:	sub	x9, x10, #0x1
  425f84:	add	x8, x8, #0x1
  425f88:	ldrb	w11, [x8]
  425f8c:	mov	w0, wzr
  425f90:	sxtb	w12, w11
  425f94:	tbz	w12, #31, 425e84 <_obstack_memory_used@@Base+0xdbf4>
  425f98:	cmp	w11, #0xbf
  425f9c:	b.hi	425e84 <_obstack_memory_used@@Base+0xdbf4>  // b.pmore
  425fa0:	subs	x9, x9, #0x1
  425fa4:	add	x8, x8, #0x1
  425fa8:	b.ne	425f88 <_obstack_memory_used@@Base+0xdcf8>  // b.any
  425fac:	mov	w0, w10
  425fb0:	b	425e84 <_obstack_memory_used@@Base+0xdbf4>
  425fb4:	sub	sp, sp, #0x30
  425fb8:	stp	x29, x30, [sp, #16]
  425fbc:	ldr	w10, [x1, #8]
  425fc0:	str	x19, [sp, #32]
  425fc4:	add	x29, sp, #0x10
  425fc8:	and	w8, w10, #0xff
  425fcc:	sub	w11, w8, #0x1
  425fd0:	cmp	w11, #0x6
  425fd4:	mov	w8, wzr
  425fd8:	b.hi	426124 <_obstack_memory_used@@Base+0xde94>  // b.pmore
  425fdc:	ldr	x9, [x0, #8]
  425fe0:	adrp	x12, 42b000 <_obstack_memory_used@@Base+0x12d70>
  425fe4:	add	x12, x12, #0x48
  425fe8:	ldrb	w9, [x9, x2]
  425fec:	adr	x13, 425ffc <_obstack_memory_used@@Base+0xdd6c>
  425ff0:	ldrb	w14, [x12, x11]
  425ff4:	add	x13, x13, x14, lsl #2
  425ff8:	br	x13
  425ffc:	ldrb	w8, [x1]
  426000:	cmp	w8, w9
  426004:	b.eq	426058 <_obstack_memory_used@@Base+0xddc8>  // b.none
  426008:	b	426120 <_obstack_memory_used@@Base+0xde90>
  42600c:	ldr	x8, [x1]
  426010:	lsr	x11, x9, #3
  426014:	and	x11, x11, #0x18
  426018:	ldr	x8, [x8, x11]
  42601c:	lsr	x8, x8, x9
  426020:	tbnz	w8, #0, 426058 <_obstack_memory_used@@Base+0xddc8>
  426024:	b	426120 <_obstack_memory_used@@Base+0xde90>
  426028:	sxtb	w8, w9
  42602c:	tbnz	w8, #31, 426120 <_obstack_memory_used@@Base+0xde90>
  426030:	cbz	w9, 42604c <_obstack_memory_used@@Base+0xddbc>
  426034:	cmp	w9, #0xa
  426038:	b.ne	426058 <_obstack_memory_used@@Base+0xddc8>  // b.any
  42603c:	ldr	x8, [x0, #152]
  426040:	ldrb	w8, [x8, #216]
  426044:	tbnz	w8, #6, 426058 <_obstack_memory_used@@Base+0xddc8>
  426048:	b	426120 <_obstack_memory_used@@Base+0xde90>
  42604c:	ldr	x8, [x0, #152]
  426050:	ldrb	w8, [x8, #216]
  426054:	tbnz	w8, #7, 426120 <_obstack_memory_used@@Base+0xde90>
  426058:	tst	w10, #0x3ff00
  42605c:	b.eq	4260a0 <_obstack_memory_used@@Base+0xde10>  // b.none
  426060:	tbnz	x2, #63, 426098 <_obstack_memory_used@@Base+0xde08>
  426064:	ldr	x8, [x0, #88]
  426068:	cmp	x8, x2
  42606c:	b.eq	42614c <_obstack_memory_used@@Base+0xdebc>  // b.none
  426070:	ldr	w8, [x0, #144]
  426074:	cmp	w8, #0x2
  426078:	b.lt	4260a8 <_obstack_memory_used@@Base+0xde18>  // b.tstop
  42607c:	ldr	x9, [x0, #16]
  426080:	ldr	w8, [x9, x2, lsl #2]
  426084:	cmn	w8, #0x1
  426088:	b.ne	4260cc <_obstack_memory_used@@Base+0xde3c>  // b.any
  42608c:	sub	x2, x2, #0x1
  426090:	cmn	x2, #0x1
  426094:	b.ne	426080 <_obstack_memory_used@@Base+0xddf0>  // b.any
  426098:	ldr	w11, [x0, #112]
  42609c:	b	4260fc <_obstack_memory_used@@Base+0xde6c>
  4260a0:	mov	w8, #0x1                   	// #1
  4260a4:	b	426124 <_obstack_memory_used@@Base+0xde94>
  4260a8:	ldr	x8, [x0, #128]
  4260ac:	lsr	x11, x9, #3
  4260b0:	and	x11, x11, #0x18
  4260b4:	ldr	x8, [x8, x11]
  4260b8:	lsr	x8, x8, x9
  4260bc:	tbz	w8, #0, 4260f0 <_obstack_memory_used@@Base+0xde60>
  4260c0:	mov	w12, wzr
  4260c4:	mov	w11, #0x1                   	// #1
  4260c8:	b	42610c <_obstack_memory_used@@Base+0xde7c>
  4260cc:	ldrb	w9, [x0, #142]
  4260d0:	cbnz	w9, 426160 <_obstack_memory_used@@Base+0xded0>
  4260d4:	cmp	w8, #0xa
  4260d8:	b.ne	4260f8 <_obstack_memory_used@@Base+0xde68>  // b.any
  4260dc:	ldrb	w8, [x0, #141]
  4260e0:	cmp	w8, #0x0
  4260e4:	cset	w8, ne  // ne = any
  4260e8:	lsl	w11, w8, #1
  4260ec:	b	4260fc <_obstack_memory_used@@Base+0xde6c>
  4260f0:	cmp	w9, #0xa
  4260f4:	b.eq	4260dc <_obstack_memory_used@@Base+0xde4c>  // b.none
  4260f8:	mov	w11, wzr
  4260fc:	tst	w11, #0x1
  426100:	cset	w12, eq  // eq = none
  426104:	tbz	w10, #10, 42610c <_obstack_memory_used@@Base+0xde7c>
  426108:	tbz	w11, #0, 426120 <_obstack_memory_used@@Base+0xde90>
  42610c:	ldr	w8, [x1, #8]
  426110:	tbnz	w12, #0, 426118 <_obstack_memory_used@@Base+0xde88>
  426114:	tbnz	w8, #11, 426120 <_obstack_memory_used@@Base+0xde90>
  426118:	tbnz	w11, #1, 426138 <_obstack_memory_used@@Base+0xdea8>
  42611c:	tbz	w8, #13, 426138 <_obstack_memory_used@@Base+0xdea8>
  426120:	mov	w8, wzr
  426124:	mov	w0, w8
  426128:	ldr	x19, [sp, #32]
  42612c:	ldp	x29, x30, [sp, #16]
  426130:	add	sp, sp, #0x30
  426134:	ret
  426138:	tst	w8, #0x8000
  42613c:	cset	w8, eq  // eq = none
  426140:	and	w9, w11, #0x8
  426144:	orr	w0, w8, w9, lsr #3
  426148:	b	426128 <_obstack_memory_used@@Base+0xde98>
  42614c:	ldr	w8, [x0, #160]
  426150:	mov	w9, #0xa                   	// #10
  426154:	and	w8, w8, #0x2
  426158:	eor	w11, w8, w9
  42615c:	b	4260fc <_obstack_memory_used@@Base+0xde6c>
  426160:	str	x0, [sp]
  426164:	mov	w0, w8
  426168:	stur	w10, [x29, #-4]
  42616c:	str	x1, [x29, #24]
  426170:	mov	w19, w8
  426174:	bl	402710 <iswalnum@plt>
  426178:	mov	w12, wzr
  42617c:	cmp	w19, #0x5f
  426180:	mov	w11, #0x1                   	// #1
  426184:	b.eq	4261a4 <_obstack_memory_used@@Base+0xdf14>  // b.none
  426188:	mov	w9, w0
  42618c:	ldr	x1, [x29, #24]
  426190:	ldr	x0, [sp]
  426194:	ldur	w10, [x29, #-4]
  426198:	mov	w8, w19
  42619c:	cbz	w9, 4260d4 <_obstack_memory_used@@Base+0xde44>
  4261a0:	b	42610c <_obstack_memory_used@@Base+0xde7c>
  4261a4:	ldr	x1, [x29, #24]
  4261a8:	b	42610c <_obstack_memory_used@@Base+0xde7c>
  4261ac:	sub	sp, sp, #0xa0
  4261b0:	stp	x29, x30, [sp, #64]
  4261b4:	stp	x28, x27, [sp, #80]
  4261b8:	stp	x26, x25, [sp, #96]
  4261bc:	stp	x24, x23, [sp, #112]
  4261c0:	stp	x22, x21, [sp, #128]
  4261c4:	stp	x20, x19, [sp, #144]
  4261c8:	ldp	x22, x21, [x1, #16]
  4261cc:	mov	w8, #0x1                   	// #1
  4261d0:	mov	x20, x0
  4261d4:	dup	v0.2d, x8
  4261d8:	mov	w0, #0x8                   	// #8
  4261dc:	add	x29, sp, #0x40
  4261e0:	mov	x19, x1
  4261e4:	str	q0, [sp, #32]
  4261e8:	bl	4023a0 <malloc@plt>
  4261ec:	str	x0, [sp, #48]
  4261f0:	cbz	x0, 426538 <_obstack_memory_used@@Base+0xe2a8>
  4261f4:	str	x22, [x0]
  4261f8:	add	x3, sp, #0x20
  4261fc:	mov	x0, x20
  426200:	mov	x1, x19
  426204:	mov	x2, x21
  426208:	bl	42654c <_obstack_memory_used@@Base+0xe2bc>
  42620c:	cbnz	w0, 426530 <_obstack_memory_used@@Base+0xe2a0>
  426210:	add	x8, x19, #0x20
  426214:	str	x8, [sp, #24]
  426218:	mov	w8, #0x1                   	// #1
  42621c:	mov	w10, wzr
  426220:	dup	v0.2d, x8
  426224:	str	q0, [sp]
  426228:	b	426248 <_obstack_memory_used@@Base+0xdfb8>
  42622c:	add	x3, sp, #0x20
  426230:	mov	x0, x20
  426234:	mov	x1, x19
  426238:	mov	x2, x21
  42623c:	bl	42654c <_obstack_memory_used@@Base+0xe2bc>
  426240:	ldr	w10, [sp, #20]
  426244:	cbnz	w0, 426530 <_obstack_memory_used@@Base+0xe2a0>
  426248:	mov	x26, x21
  42624c:	subs	x21, x21, #0x1
  426250:	b.lt	4264d8 <_obstack_memory_used@@Base+0xe248>  // b.tstop
  426254:	ldr	x0, [x19]
  426258:	ldr	w9, [x20, #224]
  42625c:	ldr	x8, [x0, x26, lsl #3]
  426260:	cmp	x8, #0x0
  426264:	csinc	w10, wzr, w10, ne  // ne = any
  426268:	cmp	w10, w9
  42626c:	b.gt	4264e8 <_obstack_memory_used@@Base+0xe258>
  426270:	str	xzr, [sp, #40]
  426274:	ldr	x8, [x20, #184]
  426278:	str	w10, [sp, #20]
  42627c:	ldr	x27, [x8, x21, lsl #3]
  426280:	cbz	x27, 42622c <_obstack_memory_used@@Base+0xdf9c>
  426284:	ldr	x8, [x27, #40]
  426288:	cmp	x8, #0x1
  42628c:	b.lt	42622c <_obstack_memory_used@@Base+0xdf9c>  // b.tstop
  426290:	ldr	x28, [x20, #152]
  426294:	mov	x22, xzr
  426298:	b	4262d0 <_obstack_memory_used@@Base+0xe040>
  42629c:	ldr	x9, [sp, #32]
  4262a0:	cbz	x9, 426424 <_obstack_memory_used@@Base+0xe194>
  4262a4:	ldr	x8, [sp, #40]
  4262a8:	cbnz	x8, 426444 <_obstack_memory_used@@Base+0xe1b4>
  4262ac:	ldr	x8, [sp, #48]
  4262b0:	str	x23, [x8]
  4262b4:	ldr	x8, [sp, #40]
  4262b8:	add	x8, x8, #0x1
  4262bc:	str	x8, [sp, #40]
  4262c0:	ldr	x8, [x27, #40]
  4262c4:	add	x22, x22, #0x1
  4262c8:	cmp	x22, x8
  4262cc:	b.ge	42622c <_obstack_memory_used@@Base+0xdf9c>  // b.tcont
  4262d0:	ldr	x8, [x27, #48]
  4262d4:	ldr	x23, [x8, x22, lsl #3]
  4262d8:	ldr	x8, [x28]
  4262dc:	add	x8, x8, x23, lsl #4
  4262e0:	ldrb	w8, [x8, #10]
  4262e4:	tbnz	w8, #4, 426360 <_obstack_memory_used@@Base+0xe0d0>
  4262e8:	ldr	x8, [x28]
  4262ec:	mov	x0, x20
  4262f0:	mov	x2, x21
  4262f4:	add	x1, x8, x23, lsl #4
  4262f8:	bl	425fb4 <_obstack_memory_used@@Base+0xdd24>
  4262fc:	tbz	w0, #0, 4262c0 <_obstack_memory_used@@Base+0xe030>
  426300:	ldr	x8, [x19]
  426304:	ldr	x9, [x8, x26, lsl #3]
  426308:	cbz	x9, 4262c0 <_obstack_memory_used@@Base+0xe030>
  42630c:	ldr	x8, [x9, #16]
  426310:	subs	x10, x8, #0x1
  426314:	b.lt	4262c0 <_obstack_memory_used@@Base+0xe030>  // b.tstop
  426318:	ldr	x8, [x28, #24]
  42631c:	ldr	x9, [x9, #24]
  426320:	mov	x11, xzr
  426324:	ldr	x8, [x8, x23, lsl #3]
  426328:	b.eq	42634c <_obstack_memory_used@@Base+0xe0bc>  // b.none
  42632c:	add	x12, x11, x10
  426330:	lsr	x12, x12, #1
  426334:	ldr	x13, [x9, x12, lsl #3]
  426338:	cmp	x13, x8
  42633c:	csinc	x11, x11, x12, ge  // ge = tcont
  426340:	csel	x10, x10, x12, lt  // lt = tstop
  426344:	cmp	x11, x10
  426348:	b.cc	42632c <_obstack_memory_used@@Base+0xe09c>  // b.lo, b.ul, b.last
  42634c:	ldr	x9, [x9, x11, lsl #3]
  426350:	cmp	x9, x8
  426354:	b.ne	4262c0 <_obstack_memory_used@@Base+0xe030>  // b.any
  426358:	mov	w0, #0x1                   	// #1
  42635c:	b	4263f4 <_obstack_memory_used@@Base+0xe164>
  426360:	ldr	x24, [x20, #152]
  426364:	ldr	x25, [x19, #24]
  426368:	mov	x1, x23
  42636c:	mov	x2, x20
  426370:	mov	x0, x24
  426374:	mov	x3, x21
  426378:	bl	425c9c <_obstack_memory_used@@Base+0xda0c>
  42637c:	cmp	w0, #0x1
  426380:	b.lt	4263f0 <_obstack_memory_used@@Base+0xe160>  // b.tstop
  426384:	add	x8, x21, w0, uxtw
  426388:	cmp	x8, x25
  42638c:	b.gt	4263f4 <_obstack_memory_used@@Base+0xe164>
  426390:	ldr	x9, [x19]
  426394:	ldr	x9, [x9, x8, lsl #3]
  426398:	cbz	x9, 4262e8 <_obstack_memory_used@@Base+0xe058>
  42639c:	ldr	x8, [x9, #16]
  4263a0:	subs	x10, x8, #0x1
  4263a4:	b.lt	4262e8 <_obstack_memory_used@@Base+0xe058>  // b.tstop
  4263a8:	ldr	x8, [x24, #24]
  4263ac:	ldr	x9, [x9, #24]
  4263b0:	mov	x11, xzr
  4263b4:	ldr	x8, [x8, x23, lsl #3]
  4263b8:	b.eq	4263dc <_obstack_memory_used@@Base+0xe14c>  // b.none
  4263bc:	add	x12, x11, x10
  4263c0:	lsr	x12, x12, #1
  4263c4:	ldr	x13, [x9, x12, lsl #3]
  4263c8:	cmp	x13, x8
  4263cc:	csinc	x11, x11, x12, ge  // ge = tcont
  4263d0:	csel	x10, x10, x12, lt  // lt = tstop
  4263d4:	cmp	x11, x10
  4263d8:	b.cc	4263bc <_obstack_memory_used@@Base+0xe12c>  // b.lo, b.ul, b.last
  4263dc:	cbz	w0, 4262e8 <_obstack_memory_used@@Base+0xe058>
  4263e0:	ldr	x9, [x9, x11, lsl #3]
  4263e4:	cmp	x9, x8
  4263e8:	b.eq	4263f4 <_obstack_memory_used@@Base+0xe164>  // b.none
  4263ec:	b	4262e8 <_obstack_memory_used@@Base+0xe058>
  4263f0:	cbz	w0, 4262e8 <_obstack_memory_used@@Base+0xe058>
  4263f4:	ldr	x8, [x19, #40]
  4263f8:	cbz	x8, 42629c <_obstack_memory_used@@Base+0xe00c>
  4263fc:	ldr	x8, [x28, #24]
  426400:	ldr	x1, [sp, #24]
  426404:	add	x3, x21, w0, sxtw
  426408:	mov	x0, x20
  42640c:	ldr	x2, [x8, x23, lsl #3]
  426410:	mov	x4, x23
  426414:	mov	x5, x21
  426418:	bl	4273ac <_obstack_memory_used@@Base+0xf11c>
  42641c:	tbz	w0, #0, 42629c <_obstack_memory_used@@Base+0xe00c>
  426420:	b	4262c0 <_obstack_memory_used@@Base+0xe030>
  426424:	ldr	q0, [sp]
  426428:	mov	w0, #0x8                   	// #8
  42642c:	str	q0, [sp, #32]
  426430:	bl	4023a0 <malloc@plt>
  426434:	str	x0, [sp, #48]
  426438:	cbz	x0, 426524 <_obstack_memory_used@@Base+0xe294>
  42643c:	str	x23, [x0]
  426440:	b	4262c0 <_obstack_memory_used@@Base+0xe030>
  426444:	cmp	x9, x8
  426448:	b.ne	426470 <_obstack_memory_used@@Base+0xe1e0>  // b.any
  42644c:	ldr	x0, [sp, #48]
  426450:	lsl	x8, x9, #1
  426454:	lsl	x1, x9, #4
  426458:	str	x8, [sp, #32]
  42645c:	bl	4024c0 <realloc@plt>
  426460:	cbz	x0, 426544 <_obstack_memory_used@@Base+0xe2b4>
  426464:	ldr	x8, [sp, #40]
  426468:	str	x0, [sp, #48]
  42646c:	b	426474 <_obstack_memory_used@@Base+0xe1e4>
  426470:	ldr	x0, [sp, #48]
  426474:	ldr	x9, [x0]
  426478:	cmp	x9, x23
  42647c:	b.le	4264a8 <_obstack_memory_used@@Base+0xe218>
  426480:	cmp	x8, #0x1
  426484:	b.lt	4264d0 <_obstack_memory_used@@Base+0xe240>  // b.tstop
  426488:	mov	x9, x8
  42648c:	add	x10, x0, x9, lsl #3
  426490:	ldur	x11, [x10, #-8]
  426494:	subs	x8, x9, #0x1
  426498:	mov	x9, x8
  42649c:	str	x11, [x10]
  4264a0:	b.gt	42648c <_obstack_memory_used@@Base+0xe1fc>
  4264a4:	b	4264d0 <_obstack_memory_used@@Base+0xe240>
  4264a8:	add	x9, x0, x8, lsl #3
  4264ac:	ldur	x9, [x9, #-8]
  4264b0:	cmp	x9, x23
  4264b4:	b.le	4264d0 <_obstack_memory_used@@Base+0xe240>
  4264b8:	add	x10, x0, x8, lsl #3
  4264bc:	str	x9, [x10]
  4264c0:	ldur	x9, [x10, #-16]
  4264c4:	sub	x8, x8, #0x1
  4264c8:	cmp	x9, x23
  4264cc:	b.gt	4264b8 <_obstack_memory_used@@Base+0xe228>
  4264d0:	str	x23, [x0, x8, lsl #3]
  4264d4:	b	4262b4 <_obstack_memory_used@@Base+0xe024>
  4264d8:	mov	w23, wzr
  4264dc:	ldr	x0, [sp, #48]
  4264e0:	bl	402620 <free@plt>
  4264e4:	b	426500 <_obstack_memory_used@@Base+0xe270>
  4264e8:	lsl	x2, x26, #3
  4264ec:	mov	w1, wzr
  4264f0:	bl	402470 <memset@plt>
  4264f4:	ldr	x0, [sp, #48]
  4264f8:	bl	402620 <free@plt>
  4264fc:	mov	w23, wzr
  426500:	mov	w0, w23
  426504:	ldp	x20, x19, [sp, #144]
  426508:	ldp	x22, x21, [sp, #128]
  42650c:	ldp	x24, x23, [sp, #112]
  426510:	ldp	x26, x25, [sp, #96]
  426514:	ldp	x28, x27, [sp, #80]
  426518:	ldp	x29, x30, [sp, #64]
  42651c:	add	sp, sp, #0xa0
  426520:	ret
  426524:	stp	xzr, xzr, [sp, #32]
  426528:	mov	w23, #0xc                   	// #12
  42652c:	b	4264dc <_obstack_memory_used@@Base+0xe24c>
  426530:	mov	w23, w0
  426534:	b	4264dc <_obstack_memory_used@@Base+0xe24c>
  426538:	stp	xzr, xzr, [sp, #32]
  42653c:	mov	w23, #0xc                   	// #12
  426540:	b	426500 <_obstack_memory_used@@Base+0xe270>
  426544:	mov	w23, #0xc                   	// #12
  426548:	b	4264dc <_obstack_memory_used@@Base+0xe24c>
  42654c:	sub	sp, sp, #0x140
  426550:	stp	x29, x30, [sp, #224]
  426554:	stp	x28, x27, [sp, #240]
  426558:	stp	x26, x25, [sp, #256]
  42655c:	stp	x24, x23, [sp, #272]
  426560:	stp	x22, x21, [sp, #288]
  426564:	stp	x20, x19, [sp, #304]
  426568:	add	x29, sp, #0xe0
  42656c:	ldr	x24, [x0, #152]
  426570:	stur	wzr, [x29, #-100]
  426574:	ldr	x8, [x0, #184]
  426578:	mov	x19, x2
  42657c:	mov	x20, x1
  426580:	mov	x25, x0
  426584:	ldr	x21, [x8, x2, lsl #3]
  426588:	ldr	x8, [x3, #8]
  42658c:	add	x9, x21, #0x8
  426590:	cmp	x21, #0x0
  426594:	csel	x28, xzr, x9, eq  // eq = none
  426598:	cbz	x8, 4268d4 <_obstack_memory_used@@Base+0xe644>
  42659c:	mov	x23, x3
  4265a0:	cbz	x21, 4268ec <_obstack_memory_used@@Base+0xe65c>
  4265a4:	sub	x0, x29, #0x60
  4265a8:	mov	x1, x24
  4265ac:	mov	x2, x23
  4265b0:	stur	wzr, [x29, #-96]
  4265b4:	bl	425a20 <_obstack_memory_used@@Base+0xd790>
  4265b8:	ldur	w27, [x29, #-96]
  4265bc:	cbnz	w27, 426e9c <_obstack_memory_used@@Base+0xec0c>
  4265c0:	str	x25, [sp, #112]
  4265c4:	mov	x25, x0
  4265c8:	ldr	x8, [x25, #56]!
  4265cc:	mov	x26, x0
  4265d0:	cbnz	x8, 426648 <_obstack_memory_used@@Base+0xe3b8>
  4265d4:	ldr	x8, [x23, #8]
  4265d8:	lsl	x0, x8, #3
  4265dc:	stp	x8, xzr, [x26, #56]
  4265e0:	bl	4023a0 <malloc@plt>
  4265e4:	cmp	x0, #0x0
  4265e8:	mov	w27, #0xc                   	// #12
  4265ec:	csel	w8, w27, wzr, eq  // eq = none
  4265f0:	str	x0, [x26, #72]
  4265f4:	stur	w8, [x29, #-96]
  4265f8:	cbz	x0, 426e9c <_obstack_memory_used@@Base+0xec0c>
  4265fc:	ldr	x8, [x23, #8]
  426600:	cmp	x8, #0x1
  426604:	b.lt	426648 <_obstack_memory_used@@Base+0xe3b8>  // b.tstop
  426608:	mov	x26, x21
  42660c:	mov	x21, xzr
  426610:	mov	w22, #0x18                  	// #24
  426614:	ldr	x8, [x23, #16]
  426618:	ldr	x9, [x24, #56]
  42661c:	mov	x0, x25
  426620:	ldr	x8, [x8, x21, lsl #3]
  426624:	madd	x1, x8, x22, x9
  426628:	bl	421d10 <_obstack_memory_used@@Base+0x9a80>
  42662c:	cbnz	w0, 426e94 <_obstack_memory_used@@Base+0xec04>
  426630:	ldr	x8, [x23, #8]
  426634:	add	x21, x21, #0x1
  426638:	cmp	x21, x8
  42663c:	b.lt	426614 <_obstack_memory_used@@Base+0xe384>  // b.tstop
  426640:	mov	x21, x26
  426644:	stur	wzr, [x29, #-96]
  426648:	mov	x0, x23
  42664c:	mov	x1, x28
  426650:	mov	x2, x25
  426654:	bl	426ecc <_obstack_memory_used@@Base+0xec3c>
  426658:	stur	w0, [x29, #-100]
  42665c:	cbnz	w0, 426eac <_obstack_memory_used@@Base+0xec1c>
  426660:	ldr	x8, [x20, #40]
  426664:	ldr	x25, [sp, #112]
  426668:	cbz	x8, 4268ec <_obstack_memory_used@@Base+0xe65c>
  42666c:	mov	x22, x28
  426670:	cmp	x8, #0x1
  426674:	str	x21, [sp, #104]
  426678:	b.lt	4268e0 <_obstack_memory_used@@Base+0xe650>  // b.tstop
  42667c:	ldr	x8, [sp, #112]
  426680:	mov	x25, xzr
  426684:	mov	w14, #0x18                  	// #24
  426688:	ldr	x26, [x8, #216]
  42668c:	b	4266a0 <_obstack_memory_used@@Base+0xe410>
  426690:	ldr	x8, [x20, #40]
  426694:	add	x25, x25, #0x1
  426698:	cmp	x25, x8
  42669c:	b.ge	4268e0 <_obstack_memory_used@@Base+0xe650>  // b.tcont
  4266a0:	ldr	x8, [x20, #48]
  4266a4:	mov	w9, #0x28                  	// #40
  4266a8:	ldr	x8, [x8, x25, lsl #3]
  4266ac:	madd	x9, x8, x9, x26
  4266b0:	ldr	x9, [x9, #16]
  4266b4:	cmp	x9, x19
  4266b8:	b.ge	426690 <_obstack_memory_used@@Base+0xe400>  // b.tcont
  4266bc:	mov	w9, #0x28                  	// #40
  4266c0:	madd	x9, x8, x9, x26
  4266c4:	ldr	x9, [x9, #8]
  4266c8:	cmp	x9, x19
  4266cc:	b.lt	426690 <_obstack_memory_used@@Base+0xe400>  // b.tstop
  4266d0:	mov	w9, #0x28                  	// #40
  4266d4:	madd	x8, x8, x9, x26
  4266d8:	ldr	x10, [x8]
  4266dc:	ldr	x9, [x24]
  4266e0:	ldr	x11, [x8, #24]
  4266e4:	lsl	x8, x10, #4
  4266e8:	ldr	x21, [x9, x8]
  4266ec:	ldr	x8, [x23, #8]
  4266f0:	cmp	x11, x19
  4266f4:	b.ne	42675c <_obstack_memory_used@@Base+0xe4cc>  // b.any
  4266f8:	cmp	x8, #0x1
  4266fc:	b.lt	426690 <_obstack_memory_used@@Base+0xe400>  // b.tstop
  426700:	ldr	x10, [x23, #16]
  426704:	mov	x28, #0xffffffffffffffff    	// #-1
  426708:	mov	x1, #0xffffffffffffffff    	// #-1
  42670c:	b	42672c <_obstack_memory_used@@Base+0xe49c>
  426710:	lsl	x12, x11, #4
  426714:	ldr	x12, [x9, x12]
  426718:	cmp	x21, x12
  42671c:	csel	x28, x11, x28, eq  // eq = none
  426720:	subs	x8, x8, #0x1
  426724:	add	x10, x10, #0x8
  426728:	b.eq	4267c8 <_obstack_memory_used@@Base+0xe538>  // b.none
  42672c:	ldr	x11, [x10]
  426730:	add	x12, x9, x11, lsl #4
  426734:	ldrb	w12, [x12, #8]
  426738:	cmp	w12, #0x9
  42673c:	b.eq	426710 <_obstack_memory_used@@Base+0xe480>  // b.none
  426740:	cmp	w12, #0x8
  426744:	b.ne	426720 <_obstack_memory_used@@Base+0xe490>  // b.any
  426748:	lsl	x12, x11, #4
  42674c:	ldr	x12, [x9, x12]
  426750:	cmp	x21, x12
  426754:	csel	x1, x11, x1, eq  // eq = none
  426758:	b	426720 <_obstack_memory_used@@Base+0xe490>
  42675c:	cmp	x8, #0x1
  426760:	b.lt	426690 <_obstack_memory_used@@Base+0xe400>  // b.tstop
  426764:	mov	x28, xzr
  426768:	ldr	x10, [x23, #16]
  42676c:	ldr	x1, [x10, x28, lsl #3]
  426770:	add	x10, x9, x1, lsl #4
  426774:	ldr	w10, [x10, #8]
  426778:	and	w10, w10, #0xfe
  42677c:	orr	w10, w10, #0x1
  426780:	cmp	w10, #0x9
  426784:	b.ne	4267b4 <_obstack_memory_used@@Base+0xe524>  // b.any
  426788:	lsl	x10, x1, #4
  42678c:	ldr	x9, [x9, x10]
  426790:	cmp	x21, x9
  426794:	b.ne	4267b4 <_obstack_memory_used@@Base+0xe524>  // b.any
  426798:	mov	x0, x24
  42679c:	mov	x2, x23
  4267a0:	mov	x3, x22
  4267a4:	bl	427094 <_obstack_memory_used@@Base+0xee04>
  4267a8:	cbnz	w0, 426e68 <_obstack_memory_used@@Base+0xebd8>
  4267ac:	ldr	x8, [x23, #8]
  4267b0:	mov	w14, #0x18                  	// #24
  4267b4:	add	x28, x28, #0x1
  4267b8:	cmp	x28, x8
  4267bc:	b.ge	426690 <_obstack_memory_used@@Base+0xe400>  // b.tcont
  4267c0:	ldr	x9, [x24]
  4267c4:	b	426768 <_obstack_memory_used@@Base+0xe4d8>
  4267c8:	tbnz	x1, #63, 4267e4 <_obstack_memory_used@@Base+0xe554>
  4267cc:	mov	x0, x24
  4267d0:	mov	x2, x23
  4267d4:	mov	x3, x22
  4267d8:	bl	427094 <_obstack_memory_used@@Base+0xee04>
  4267dc:	mov	w14, #0x18                  	// #24
  4267e0:	cbnz	w0, 426e68 <_obstack_memory_used@@Base+0xebd8>
  4267e4:	tbnz	x28, #63, 426690 <_obstack_memory_used@@Base+0xe400>
  4267e8:	ldr	x8, [x23, #8]
  4267ec:	cmp	x8, #0x1
  4267f0:	b.lt	426690 <_obstack_memory_used@@Base+0xe400>  // b.tstop
  4267f4:	mov	x21, xzr
  4267f8:	b	426828 <_obstack_memory_used@@Base+0xe598>
  4267fc:	mov	x0, x24
  426800:	mov	x2, x23
  426804:	mov	x3, x22
  426808:	bl	427094 <_obstack_memory_used@@Base+0xee04>
  42680c:	cbnz	w0, 426e68 <_obstack_memory_used@@Base+0xebd8>
  426810:	ldr	x8, [x23, #8]
  426814:	sub	x21, x21, #0x1
  426818:	mov	w14, #0x18                  	// #24
  42681c:	add	x21, x21, #0x1
  426820:	cmp	x21, x8
  426824:	b.ge	426690 <_obstack_memory_used@@Base+0xe400>  // b.tcont
  426828:	ldr	x9, [x23, #16]
  42682c:	ldr	x1, [x9, x21, lsl #3]
  426830:	ldr	x9, [x24, #56]
  426834:	madd	x10, x1, x14, x9
  426838:	ldr	x10, [x10, #8]
  42683c:	subs	x10, x10, #0x1
  426840:	b.lt	426880 <_obstack_memory_used@@Base+0xe5f0>  // b.tstop
  426844:	madd	x9, x1, x14, x9
  426848:	ldr	x9, [x9, #16]
  42684c:	mov	x11, xzr
  426850:	b.eq	426874 <_obstack_memory_used@@Base+0xe5e4>  // b.none
  426854:	add	x12, x11, x10
  426858:	lsr	x12, x12, #1
  42685c:	ldr	x13, [x9, x12, lsl #3]
  426860:	cmp	x13, x28
  426864:	csinc	x11, x11, x12, ge  // ge = tcont
  426868:	csel	x10, x10, x12, lt  // lt = tstop
  42686c:	cmp	x11, x10
  426870:	b.cc	426854 <_obstack_memory_used@@Base+0xe5c4>  // b.lo, b.ul, b.last
  426874:	ldr	x9, [x9, x11, lsl #3]
  426878:	cmp	x9, x28
  42687c:	b.eq	42681c <_obstack_memory_used@@Base+0xe58c>  // b.none
  426880:	ldr	x9, [x24, #48]
  426884:	madd	x10, x1, x14, x9
  426888:	ldr	x10, [x10, #8]
  42688c:	subs	x10, x10, #0x1
  426890:	b.lt	4267fc <_obstack_memory_used@@Base+0xe56c>  // b.tstop
  426894:	madd	x9, x1, x14, x9
  426898:	ldr	x9, [x9, #16]
  42689c:	mov	x11, xzr
  4268a0:	b.eq	4268c4 <_obstack_memory_used@@Base+0xe634>  // b.none
  4268a4:	add	x12, x11, x10
  4268a8:	lsr	x12, x12, #1
  4268ac:	ldr	x13, [x9, x12, lsl #3]
  4268b0:	cmp	x13, x28
  4268b4:	csinc	x11, x11, x12, ge  // ge = tcont
  4268b8:	csel	x10, x10, x12, lt  // lt = tstop
  4268bc:	cmp	x11, x10
  4268c0:	b.cc	4268a4 <_obstack_memory_used@@Base+0xe614>  // b.lo, b.ul, b.last
  4268c4:	ldr	x9, [x9, x11, lsl #3]
  4268c8:	cmp	x9, x28
  4268cc:	b.ne	4267fc <_obstack_memory_used@@Base+0xe56c>  // b.any
  4268d0:	b	42681c <_obstack_memory_used@@Base+0xe58c>
  4268d4:	ldr	x8, [x20]
  4268d8:	str	xzr, [x8, x19, lsl #3]
  4268dc:	b	42690c <_obstack_memory_used@@Base+0xe67c>
  4268e0:	ldp	x21, x25, [sp, #104]
  4268e4:	mov	x28, x22
  4268e8:	stur	wzr, [x29, #-100]
  4268ec:	sub	x0, x29, #0x64
  4268f0:	mov	x1, x24
  4268f4:	mov	x2, x23
  4268f8:	bl	425a20 <_obstack_memory_used@@Base+0xd790>
  4268fc:	ldr	x8, [x20]
  426900:	str	x0, [x8, x19, lsl #3]
  426904:	ldur	w27, [x29, #-100]
  426908:	cbnz	w27, 426e44 <_obstack_memory_used@@Base+0xebb4>
  42690c:	cbz	x21, 426e40 <_obstack_memory_used@@Base+0xebb0>
  426910:	ldr	x8, [x25, #184]
  426914:	ldr	x8, [x8, x19, lsl #3]
  426918:	ldrb	w8, [x8, #104]
  42691c:	tbz	w8, #6, 426e40 <_obstack_memory_used@@Base+0xebb0>
  426920:	ldr	x8, [x25, #200]
  426924:	ldr	x14, [x25, #152]
  426928:	cmp	x8, #0x1
  42692c:	b.lt	426978 <_obstack_memory_used@@Base+0xe6e8>  // b.tstop
  426930:	ldr	x9, [x25, #216]
  426934:	mov	x21, xzr
  426938:	mov	w10, #0x28                  	// #40
  42693c:	mov	x11, x8
  426940:	add	x12, x11, x21
  426944:	cmp	x12, #0x0
  426948:	cinc	x12, x12, lt  // lt = tstop
  42694c:	asr	x12, x12, #1
  426950:	madd	x13, x12, x10, x9
  426954:	ldr	x13, [x13, #8]
  426958:	cmp	x13, x19
  42695c:	csel	x11, x11, x12, lt  // lt = tstop
  426960:	csinc	x21, x21, x12, ge  // ge = tcont
  426964:	cmp	x21, x11
  426968:	b.lt	426940 <_obstack_memory_used@@Base+0xe6b0>  // b.tstop
  42696c:	cmp	x21, x8
  426970:	b.lt	426984 <_obstack_memory_used@@Base+0xe6f4>  // b.tstop
  426974:	b	426e3c <_obstack_memory_used@@Base+0xebac>
  426978:	mov	x21, xzr
  42697c:	cmp	x21, x8
  426980:	b.ge	426e3c <_obstack_memory_used@@Base+0xebac>  // b.tcont
  426984:	cmn	x21, #0x1
  426988:	b.eq	426e3c <_obstack_memory_used@@Base+0xebac>  // b.none
  42698c:	ldr	x8, [x25, #216]
  426990:	mov	w9, #0x28                  	// #40
  426994:	madd	x8, x21, x9, x8
  426998:	ldr	x8, [x8, #8]
  42699c:	cmp	x8, x19
  4269a0:	b.ne	426e3c <_obstack_memory_used@@Base+0xebac>  // b.any
  4269a4:	stur	xzr, [x29, #-96]
  4269a8:	ldr	x8, [x28, #8]
  4269ac:	cmp	x8, #0x0
  4269b0:	b.le	426e3c <_obstack_memory_used@@Base+0xebac>
  4269b4:	add	x1, x20, #0x20
  4269b8:	sub	x8, x29, #0x60
  4269bc:	add	x9, x19, #0x1
  4269c0:	stp	x9, x1, [sp, #32]
  4269c4:	mov	w9, #0x1                   	// #1
  4269c8:	add	x8, x8, #0x20
  4269cc:	mov	x24, xzr
  4269d0:	str	x8, [sp, #8]
  4269d4:	dup	v0.2d, x9
  4269d8:	stp	xzr, x25, [sp, #104]
  4269dc:	str	q0, [sp, #16]
  4269e0:	stp	x14, x28, [sp, #88]
  4269e4:	b	4269fc <_obstack_memory_used@@Base+0xe76c>
  4269e8:	ldr	x28, [sp, #96]
  4269ec:	add	x24, x24, #0x1
  4269f0:	ldr	x8, [x28, #8]
  4269f4:	cmp	x24, x8
  4269f8:	b.ge	426e74 <_obstack_memory_used@@Base+0xebe4>  // b.tcont
  4269fc:	ldr	x8, [x28, #16]
  426a00:	ldr	x9, [x20, #16]
  426a04:	ldr	x26, [x8, x24, lsl #3]
  426a08:	ldr	x8, [x14]
  426a0c:	cmp	x26, x9
  426a10:	add	x8, x8, x26, lsl #4
  426a14:	ldrb	w8, [x8, #8]
  426a18:	b.ne	426a34 <_obstack_memory_used@@Base+0xe7a4>  // b.any
  426a1c:	cmp	w8, #0x4
  426a20:	b.ne	4269e8 <_obstack_memory_used@@Base+0xe758>  // b.any
  426a24:	ldr	x8, [x20, #24]
  426a28:	cmp	x8, x19
  426a2c:	b.ne	426a3c <_obstack_memory_used@@Base+0xe7ac>  // b.any
  426a30:	b	4269e8 <_obstack_memory_used@@Base+0xe758>
  426a34:	cmp	w8, #0x4
  426a38:	b.ne	4269e8 <_obstack_memory_used@@Base+0xe758>  // b.any
  426a3c:	ldr	x8, [x25, #216]
  426a40:	mov	w9, #0x28                  	// #40
  426a44:	mov	x28, x21
  426a48:	madd	x22, x21, x9, x8
  426a4c:	b	426a68 <_obstack_memory_used@@Base+0xe7d8>
  426a50:	ldr	x14, [sp, #88]
  426a54:	mov	x1, x23
  426a58:	ldrb	w8, [x22, #32]
  426a5c:	add	x22, x22, #0x28
  426a60:	add	x28, x28, #0x1
  426a64:	cbz	w8, 4269e8 <_obstack_memory_used@@Base+0xe758>
  426a68:	ldr	x8, [x22]
  426a6c:	cmp	x8, x26
  426a70:	b.ne	426a58 <_obstack_memory_used@@Base+0xe7c8>  // b.any
  426a74:	ldp	x9, x8, [x22, #16]
  426a78:	subs	x8, x8, x9
  426a7c:	add	x5, x8, x19
  426a80:	b.eq	426a90 <_obstack_memory_used@@Base+0xe800>  // b.none
  426a84:	ldr	x8, [x14, #24]
  426a88:	add	x8, x8, x26, lsl #3
  426a8c:	b	426aa0 <_obstack_memory_used@@Base+0xe810>
  426a90:	ldr	x8, [x14, #40]
  426a94:	mov	w9, #0x18                  	// #24
  426a98:	madd	x8, x26, x9, x8
  426a9c:	ldr	x8, [x8, #16]
  426aa0:	ldr	x9, [x20, #24]
  426aa4:	cmp	x5, x9
  426aa8:	b.gt	426a58 <_obstack_memory_used@@Base+0xe7c8>
  426aac:	ldr	x9, [x20]
  426ab0:	ldr	x10, [x9, x5, lsl #3]
  426ab4:	cbz	x10, 426a58 <_obstack_memory_used@@Base+0xe7c8>
  426ab8:	ldr	x9, [x10, #16]
  426abc:	subs	x9, x9, #0x1
  426ac0:	b.lt	426a58 <_obstack_memory_used@@Base+0xe7c8>  // b.tstop
  426ac4:	ldr	x4, [x8]
  426ac8:	ldr	x8, [x10, #24]
  426acc:	mov	x10, xzr
  426ad0:	b.eq	426af4 <_obstack_memory_used@@Base+0xe864>  // b.none
  426ad4:	add	x11, x10, x9
  426ad8:	lsr	x11, x11, #1
  426adc:	ldr	x12, [x8, x11, lsl #3]
  426ae0:	cmp	x12, x4
  426ae4:	csinc	x10, x10, x11, ge  // ge = tcont
  426ae8:	csel	x9, x9, x11, lt  // lt = tstop
  426aec:	cmp	x10, x9
  426af0:	b.cc	426ad4 <_obstack_memory_used@@Base+0xe844>  // b.lo, b.ul, b.last
  426af4:	ldr	x8, [x8, x10, lsl #3]
  426af8:	cmp	x8, x4
  426afc:	b.ne	426a58 <_obstack_memory_used@@Base+0xe7c8>  // b.any
  426b00:	mov	x0, x25
  426b04:	mov	x2, x26
  426b08:	mov	x3, x19
  426b0c:	mov	x23, x1
  426b10:	bl	4273ac <_obstack_memory_used@@Base+0xf11c>
  426b14:	tbnz	w0, #0, 426a50 <_obstack_memory_used@@Base+0xe7c0>
  426b18:	ldr	x8, [sp, #104]
  426b1c:	cbz	x8, 426b48 <_obstack_memory_used@@Base+0xe8b8>
  426b20:	ldr	x8, [sp, #56]
  426b24:	stp	x26, x19, [x29, #-80]
  426b28:	cbz	x8, 426c18 <_obstack_memory_used@@Base+0xe988>
  426b2c:	cbnz	x27, 426e24 <_obstack_memory_used@@Base+0xeb94>
  426b30:	ldr	x22, [sp, #80]
  426b34:	mov	w8, #0x1                   	// #1
  426b38:	mov	w23, #0x1                   	// #1
  426b3c:	str	x28, [x22]
  426b40:	stur	x8, [x29, #-56]
  426b44:	b	426c80 <_obstack_memory_used@@Base+0xe9f0>
  426b48:	ldr	x8, [x20, #48]
  426b4c:	ldp	q1, q0, [x20, #16]
  426b50:	ldr	q2, [x20]
  426b54:	stur	x8, [x29, #-48]
  426b58:	stp	q1, q0, [x29, #-80]
  426b5c:	stur	q2, [x29, #-96]
  426b60:	ldr	x8, [x20, #40]
  426b64:	cmp	x8, #0x1
  426b68:	stur	x8, [x29, #-56]
  426b6c:	b.lt	426c08 <_obstack_memory_used@@Base+0xe978>  // b.tstop
  426b70:	lsl	x27, x8, #3
  426b74:	mov	x0, x27
  426b78:	stur	x8, [x29, #-64]
  426b7c:	str	x8, [sp, #104]
  426b80:	bl	4023a0 <malloc@plt>
  426b84:	stur	x0, [x29, #-48]
  426b88:	cbz	x0, 426eb4 <_obstack_memory_used@@Base+0xec24>
  426b8c:	ldr	x1, [x20, #48]
  426b90:	mov	x2, x27
  426b94:	mov	x22, x0
  426b98:	bl	402210 <memcpy@plt>
  426b9c:	ldr	x12, [sp, #104]
  426ba0:	stp	x26, x19, [x29, #-80]
  426ba4:	lsl	x8, x12, #1
  426ba8:	lsl	x1, x12, #4
  426bac:	mov	x0, x22
  426bb0:	str	x8, [sp, #56]
  426bb4:	stur	x8, [x29, #-64]
  426bb8:	mov	x27, x12
  426bbc:	bl	4024c0 <realloc@plt>
  426bc0:	cbz	x0, 426ec4 <_obstack_memory_used@@Base+0xec34>
  426bc4:	mov	x22, x0
  426bc8:	mov	x12, x27
  426bcc:	stur	x0, [x29, #-48]
  426bd0:	ldr	x8, [x22]
  426bd4:	cmp	x8, x28
  426bd8:	b.le	426c48 <_obstack_memory_used@@Base+0xe9b8>
  426bdc:	cmp	x12, #0x1
  426be0:	mov	x8, x12
  426be4:	b.lt	426c74 <_obstack_memory_used@@Base+0xe9e4>  // b.tstop
  426be8:	mov	x9, x12
  426bec:	add	x10, x22, x9, lsl #3
  426bf0:	ldur	x11, [x10, #-8]
  426bf4:	subs	x8, x9, #0x1
  426bf8:	mov	x9, x8
  426bfc:	str	x11, [x10]
  426c00:	b.gt	426bec <_obstack_memory_used@@Base+0xe95c>
  426c04:	b	426c74 <_obstack_memory_used@@Base+0xe9e4>
  426c08:	ldr	x8, [sp, #8]
  426c0c:	stp	xzr, xzr, [x8]
  426c10:	str	xzr, [x8, #16]
  426c14:	stp	x26, x19, [x29, #-80]
  426c18:	ldr	q0, [sp, #16]
  426c1c:	mov	w0, #0x8                   	// #8
  426c20:	stur	q0, [x29, #-64]
  426c24:	bl	4023a0 <malloc@plt>
  426c28:	stur	x0, [x29, #-48]
  426c2c:	cbz	x0, 426eb4 <_obstack_memory_used@@Base+0xec24>
  426c30:	mov	w8, #0x1                   	// #1
  426c34:	mov	x22, x0
  426c38:	str	x28, [x0]
  426c3c:	mov	w23, #0x1                   	// #1
  426c40:	str	x8, [sp, #56]
  426c44:	b	426c80 <_obstack_memory_used@@Base+0xe9f0>
  426c48:	add	x8, x22, x12, lsl #3
  426c4c:	ldur	x9, [x8, #-8]
  426c50:	mov	x8, x12
  426c54:	cmp	x9, x28
  426c58:	b.le	426c74 <_obstack_memory_used@@Base+0xe9e4>
  426c5c:	add	x10, x22, x8, lsl #3
  426c60:	str	x9, [x10]
  426c64:	ldur	x9, [x10, #-16]
  426c68:	sub	x8, x8, #0x1
  426c6c:	cmp	x9, x28
  426c70:	b.gt	426c5c <_obstack_memory_used@@Base+0xe9cc>
  426c74:	add	x23, x12, #0x1
  426c78:	str	x28, [x22, x8, lsl #3]
  426c7c:	stur	x23, [x29, #-56]
  426c80:	ldur	x8, [x29, #-96]
  426c84:	sub	x1, x29, #0x60
  426c88:	mov	x0, x25
  426c8c:	str	x8, [sp, #104]
  426c90:	ldr	x8, [x8, x19, lsl #3]
  426c94:	stp	x24, x8, [sp, #64]
  426c98:	bl	4261ac <_obstack_memory_used@@Base+0xdf1c>
  426c9c:	cbnz	w0, 426ea4 <_obstack_memory_used@@Base+0xec14>
  426ca0:	ldr	x24, [x20, #8]
  426ca4:	ldr	x14, [sp, #88]
  426ca8:	str	x22, [sp, #80]
  426cac:	cbz	x24, 426d3c <_obstack_memory_used@@Base+0xeaac>
  426cb0:	mov	x22, x14
  426cb4:	str	x23, [sp, #48]
  426cb8:	tbnz	x19, #63, 426d2c <_obstack_memory_used@@Base+0xea9c>
  426cbc:	ldr	x23, [sp, #104]
  426cc0:	ldr	x25, [sp, #32]
  426cc4:	b	426cdc <_obstack_memory_used@@Base+0xea4c>
  426cc8:	str	x8, [x24]
  426ccc:	subs	x25, x25, #0x1
  426cd0:	add	x23, x23, #0x8
  426cd4:	add	x24, x24, #0x8
  426cd8:	b.eq	426d2c <_obstack_memory_used@@Base+0xea9c>  // b.none
  426cdc:	ldr	x9, [x24]
  426ce0:	ldr	x8, [x23]
  426ce4:	cbz	x9, 426cc8 <_obstack_memory_used@@Base+0xea38>
  426ce8:	cbz	x8, 426ccc <_obstack_memory_used@@Base+0xea3c>
  426cec:	add	x1, x9, #0x8
  426cf0:	add	x2, x8, #0x8
  426cf4:	sub	x0, x29, #0x28
  426cf8:	bl	4246b8 <_obstack_memory_used@@Base+0xc428>
  426cfc:	stur	w0, [x29, #-12]
  426d00:	cbnz	w0, 426ea4 <_obstack_memory_used@@Base+0xec14>
  426d04:	sub	x0, x29, #0xc
  426d08:	sub	x2, x29, #0x28
  426d0c:	mov	x1, x22
  426d10:	bl	425a20 <_obstack_memory_used@@Base+0xd790>
  426d14:	str	x0, [x24]
  426d18:	ldur	x0, [x29, #-24]
  426d1c:	bl	402620 <free@plt>
  426d20:	ldur	w27, [x29, #-12]
  426d24:	cbz	w27, 426ccc <_obstack_memory_used@@Base+0xea3c>
  426d28:	b	426e78 <_obstack_memory_used@@Base+0xebe8>
  426d2c:	ldr	x25, [sp, #112]
  426d30:	mov	x14, x22
  426d34:	ldr	x22, [sp, #80]
  426d38:	ldr	x23, [sp, #48]
  426d3c:	ldr	x8, [sp, #104]
  426d40:	ldr	x9, [sp, #72]
  426d44:	subs	x27, x23, #0x1
  426d48:	str	x9, [x8, x19, lsl #3]
  426d4c:	b.lt	426e08 <_obstack_memory_used@@Base+0xeb78>  // b.tstop
  426d50:	ldr	x24, [sp, #64]
  426d54:	ldr	x1, [sp, #40]
  426d58:	mov	x8, xzr
  426d5c:	b.eq	426d84 <_obstack_memory_used@@Base+0xeaf4>  // b.none
  426d60:	mov	x9, x27
  426d64:	add	x10, x8, x9
  426d68:	lsr	x10, x10, #1
  426d6c:	ldr	x11, [x22, x10, lsl #3]
  426d70:	cmp	x11, x28
  426d74:	csinc	x8, x8, x10, ge  // ge = tcont
  426d78:	csel	x9, x9, x10, lt  // lt = tstop
  426d7c:	cmp	x8, x9
  426d80:	b.cc	426d64 <_obstack_memory_used@@Base+0xead4>  // b.lo, b.ul, b.last
  426d84:	ldr	x9, [x22, x8, lsl #3]
  426d88:	cmp	x9, x28
  426d8c:	csinv	x9, x8, xzr, eq  // eq = none
  426d90:	tbnz	x9, #63, 426e10 <_obstack_memory_used@@Base+0xeb80>
  426d94:	cmp	x23, x9
  426d98:	b.le	426e10 <_obstack_memory_used@@Base+0xeb80>
  426d9c:	cmp	x27, x9
  426da0:	stur	x27, [x29, #-56]
  426da4:	b.le	426e14 <_obstack_memory_used@@Base+0xeb84>
  426da8:	mvn	x9, x8
  426dac:	add	x9, x23, x9
  426db0:	cmp	x9, #0x4
  426db4:	b.cc	426dec <_obstack_memory_used@@Base+0xeb5c>  // b.lo, b.ul, b.last
  426db8:	and	x10, x9, #0xfffffffffffffffc
  426dbc:	add	x11, x22, x8, lsl #3
  426dc0:	add	x8, x8, x10
  426dc4:	add	x11, x11, #0x10
  426dc8:	mov	x12, x10
  426dcc:	ldur	q0, [x11, #-8]
  426dd0:	ldur	q1, [x11, #8]
  426dd4:	subs	x12, x12, #0x4
  426dd8:	stp	q0, q1, [x11, #-16]
  426ddc:	add	x11, x11, #0x20
  426de0:	b.ne	426dcc <_obstack_memory_used@@Base+0xeb3c>  // b.any
  426de4:	cmp	x9, x10
  426de8:	b.eq	426e14 <_obstack_memory_used@@Base+0xeb84>  // b.none
  426dec:	add	x9, x22, x8, lsl #3
  426df0:	ldr	x10, [x9, #8]
  426df4:	add	x8, x8, #0x1
  426df8:	cmp	x27, x8
  426dfc:	str	x10, [x9]
  426e00:	b.ne	426dec <_obstack_memory_used@@Base+0xeb5c>  // b.any
  426e04:	b	426e14 <_obstack_memory_used@@Base+0xeb84>
  426e08:	ldr	x24, [sp, #64]
  426e0c:	ldr	x1, [sp, #40]
  426e10:	mov	x27, x23
  426e14:	ldr	x8, [x25, #216]
  426e18:	mov	w9, #0x28                  	// #40
  426e1c:	madd	x22, x28, x9, x8
  426e20:	b	426a58 <_obstack_memory_used@@Base+0xe7c8>
  426e24:	ldr	x8, [sp, #56]
  426e28:	ldr	x22, [sp, #80]
  426e2c:	mov	x12, x27
  426e30:	cmp	x8, x27
  426e34:	b.eq	426ba4 <_obstack_memory_used@@Base+0xe914>  // b.none
  426e38:	b	426bd0 <_obstack_memory_used@@Base+0xe940>
  426e3c:	stur	wzr, [x29, #-100]
  426e40:	mov	w27, wzr
  426e44:	mov	w0, w27
  426e48:	ldp	x20, x19, [sp, #304]
  426e4c:	ldp	x22, x21, [sp, #288]
  426e50:	ldp	x24, x23, [sp, #272]
  426e54:	ldp	x26, x25, [sp, #256]
  426e58:	ldp	x28, x27, [sp, #240]
  426e5c:	ldp	x29, x30, [sp, #224]
  426e60:	add	sp, sp, #0x140
  426e64:	ret
  426e68:	mov	w27, w0
  426e6c:	stur	w0, [x29, #-100]
  426e70:	b	426e44 <_obstack_memory_used@@Base+0xebb4>
  426e74:	mov	w27, wzr
  426e78:	ldur	x8, [x29, #-96]
  426e7c:	cbz	x8, 426e88 <_obstack_memory_used@@Base+0xebf8>
  426e80:	ldur	x0, [x29, #-48]
  426e84:	bl	402620 <free@plt>
  426e88:	stur	w27, [x29, #-100]
  426e8c:	cbz	w27, 426e40 <_obstack_memory_used@@Base+0xebb0>
  426e90:	b	426e44 <_obstack_memory_used@@Base+0xebb4>
  426e94:	mov	w27, #0xc                   	// #12
  426e98:	stur	w0, [x29, #-96]
  426e9c:	stur	w27, [x29, #-100]
  426ea0:	b	426e44 <_obstack_memory_used@@Base+0xebb4>
  426ea4:	mov	w27, w0
  426ea8:	b	426e78 <_obstack_memory_used@@Base+0xebe8>
  426eac:	mov	w27, w0
  426eb0:	b	426e44 <_obstack_memory_used@@Base+0xebb4>
  426eb4:	ldr	x8, [sp, #8]
  426eb8:	mov	w27, #0xc                   	// #12
  426ebc:	stp	xzr, xzr, [x8]
  426ec0:	b	426e78 <_obstack_memory_used@@Base+0xebe8>
  426ec4:	mov	w27, #0xc                   	// #12
  426ec8:	b	426e78 <_obstack_memory_used@@Base+0xebe8>
  426ecc:	stp	x29, x30, [sp, #-48]!
  426ed0:	stp	x22, x21, [sp, #16]
  426ed4:	stp	x20, x19, [sp, #32]
  426ed8:	ldr	x9, [x1, #8]
  426edc:	mov	x29, sp
  426ee0:	cbz	x9, 427078 <_obstack_memory_used@@Base+0xede8>
  426ee4:	ldr	x10, [x2, #8]
  426ee8:	mov	x20, x2
  426eec:	cbz	x10, 427078 <_obstack_memory_used@@Base+0xede8>
  426ef0:	ldp	x8, x13, [x0]
  426ef4:	add	x11, x10, x9
  426ef8:	mov	x21, x1
  426efc:	mov	x19, x0
  426f00:	add	x12, x13, x11
  426f04:	cmp	x12, x8
  426f08:	b.le	426f34 <_obstack_memory_used@@Base+0xeca4>
  426f0c:	ldr	x0, [x19, #16]
  426f10:	add	x22, x8, x11
  426f14:	lsl	x1, x22, #3
  426f18:	bl	4024c0 <realloc@plt>
  426f1c:	cbz	x0, 42708c <_obstack_memory_used@@Base+0xedfc>
  426f20:	str	x0, [x19, #16]
  426f24:	str	x22, [x19]
  426f28:	ldr	x13, [x19, #8]
  426f2c:	ldr	x9, [x21, #8]
  426f30:	ldr	x10, [x20, #8]
  426f34:	ldr	x11, [x21, #16]
  426f38:	ldr	x12, [x20, #16]
  426f3c:	add	x8, x9, x13
  426f40:	add	x8, x8, x10
  426f44:	sub	x13, x13, #0x1
  426f48:	sub	x9, x9, #0x1
  426f4c:	mov	x14, x10
  426f50:	sub	x10, x14, #0x1
  426f54:	ldr	x16, [x12, x10, lsl #3]
  426f58:	ldr	x15, [x11, x9, lsl #3]
  426f5c:	cmp	x15, x16
  426f60:	b.eq	426f88 <_obstack_memory_used@@Base+0xecf8>  // b.none
  426f64:	b.lt	426f78 <_obstack_memory_used@@Base+0xece8>  // b.tstop
  426f68:	cmp	x9, #0x0
  426f6c:	sub	x9, x9, #0x1
  426f70:	b.gt	426f58 <_obstack_memory_used@@Base+0xecc8>
  426f74:	b	426fe0 <_obstack_memory_used@@Base+0xed50>
  426f78:	cmp	x14, #0x2
  426f7c:	mov	x14, x10
  426f80:	b.ge	426f50 <_obstack_memory_used@@Base+0xecc0>  // b.tcont
  426f84:	b	426fe0 <_obstack_memory_used@@Base+0xed50>
  426f88:	tbnz	x13, #63, 426fb0 <_obstack_memory_used@@Base+0xed20>
  426f8c:	ldr	x17, [x19, #16]
  426f90:	ldr	x16, [x17, x13, lsl #3]
  426f94:	cmp	x16, x15
  426f98:	b.le	426fb8 <_obstack_memory_used@@Base+0xed28>
  426f9c:	sub	x16, x13, #0x1
  426fa0:	cmp	x13, #0x0
  426fa4:	mov	x13, x16
  426fa8:	b.gt	426f90 <_obstack_memory_used@@Base+0xed00>
  426fac:	b	426fc0 <_obstack_memory_used@@Base+0xed30>
  426fb0:	mov	x16, x13
  426fb4:	b	426fc0 <_obstack_memory_used@@Base+0xed30>
  426fb8:	mov	x16, x13
  426fbc:	b.eq	426fd0 <_obstack_memory_used@@Base+0xed40>  // b.none
  426fc0:	ldr	x13, [x19, #16]
  426fc4:	sub	x8, x8, #0x1
  426fc8:	str	x15, [x13, x8, lsl #3]
  426fcc:	mov	x13, x16
  426fd0:	cmp	x9, #0x1
  426fd4:	b.lt	426fe0 <_obstack_memory_used@@Base+0xed50>  // b.tstop
  426fd8:	cmp	x14, #0x2
  426fdc:	b.ge	426f48 <_obstack_memory_used@@Base+0xecb8>  // b.tcont
  426fe0:	ldp	x12, x0, [x19, #8]
  426fe4:	ldr	x13, [x21, #8]
  426fe8:	ldr	x14, [x20, #8]
  426fec:	subs	x9, x12, #0x1
  426ff0:	add	x9, x9, x13
  426ff4:	add	x10, x9, x14
  426ff8:	sub	x15, x10, x8
  426ffc:	add	x9, x15, #0x1
  427000:	subs	x11, x12, #0x1
  427004:	add	x16, x9, x12
  427008:	str	x16, [x19, #8]
  42700c:	b.lt	427068 <_obstack_memory_used@@Base+0xedd8>  // b.tstop
  427010:	tbnz	x15, #63, 427068 <_obstack_memory_used@@Base+0xedd8>
  427014:	add	x12, x12, x14
  427018:	add	x12, x12, x13
  42701c:	sub	x12, x12, x8
  427020:	add	x12, x0, x12, lsl #3
  427024:	ldr	x14, [x0, x10, lsl #3]
  427028:	ldr	x13, [x0, x11, lsl #3]
  42702c:	cmp	x14, x13
  427030:	b.gt	42704c <_obstack_memory_used@@Base+0xedbc>
  427034:	sub	x14, x11, #0x1
  427038:	cmp	x11, #0x0
  42703c:	str	x13, [x12, x11, lsl #3]
  427040:	mov	x11, x14
  427044:	b.gt	427024 <_obstack_memory_used@@Base+0xed94>
  427048:	b	427068 <_obstack_memory_used@@Base+0xedd8>
  42704c:	mov	x13, xzr
  427050:	sub	x10, x10, #0x1
  427054:	sub	x9, x9, #0x1
  427058:	str	x14, [x12, x11, lsl #3]
  42705c:	sub	x12, x12, #0x8
  427060:	cbnz	x9, 427024 <_obstack_memory_used@@Base+0xed94>
  427064:	b	42706c <_obstack_memory_used@@Base+0xeddc>
  427068:	mov	x13, x9
  42706c:	add	x1, x0, x8, lsl #3
  427070:	lsl	x2, x13, #3
  427074:	bl	402210 <memcpy@plt>
  427078:	mov	w0, wzr
  42707c:	ldp	x20, x19, [sp, #32]
  427080:	ldp	x22, x21, [sp, #16]
  427084:	ldp	x29, x30, [sp], #48
  427088:	ret
  42708c:	mov	w0, #0xc                   	// #12
  427090:	b	42707c <_obstack_memory_used@@Base+0xedec>
  427094:	sub	sp, sp, #0x80
  427098:	stp	x29, x30, [sp, #32]
  42709c:	stp	x28, x27, [sp, #48]
  4270a0:	stp	x26, x25, [sp, #64]
  4270a4:	stp	x24, x23, [sp, #80]
  4270a8:	stp	x22, x21, [sp, #96]
  4270ac:	stp	x20, x19, [sp, #112]
  4270b0:	ldr	x25, [x0, #56]
  4270b4:	mov	w8, #0x18                  	// #24
  4270b8:	stp	xzr, xzr, [sp, #8]
  4270bc:	str	xzr, [sp, #24]
  4270c0:	madd	x24, x1, x8, x25
  4270c4:	ldr	x8, [x24, #8]!
  4270c8:	add	x29, sp, #0x20
  4270cc:	cmp	x8, #0x1
  4270d0:	b.lt	427370 <_obstack_memory_used@@Base+0xf0e0>  // b.tstop
  4270d4:	mov	w27, #0x18                  	// #24
  4270d8:	madd	x9, x1, x27, x25
  4270dc:	mov	x21, x3
  4270e0:	mov	x20, x1
  4270e4:	mov	x22, x0
  4270e8:	mov	x19, x2
  4270ec:	mov	x26, xzr
  4270f0:	add	x28, x9, #0x10
  4270f4:	b	427104 <_obstack_memory_used@@Base+0xee74>
  4270f8:	add	x26, x26, #0x1
  4270fc:	cmp	x26, x8
  427100:	b.ge	427278 <_obstack_memory_used@@Base+0xefe8>  // b.tcont
  427104:	ldr	x11, [x28]
  427108:	ldr	x9, [x11, x26, lsl #3]
  42710c:	cmp	x9, x20
  427110:	b.eq	4270f8 <_obstack_memory_used@@Base+0xee68>  // b.none
  427114:	ldr	x10, [x22]
  427118:	add	x10, x10, x9, lsl #4
  42711c:	ldrb	w10, [x10, #8]
  427120:	tbz	w10, #3, 4270f8 <_obstack_memory_used@@Base+0xee68>
  427124:	ldr	x10, [x22, #40]
  427128:	madd	x12, x9, x27, x10
  42712c:	ldp	x13, x10, [x12, #8]
  427130:	ldr	x12, [x10]
  427134:	cmp	x13, #0x1
  427138:	b.le	42714c <_obstack_memory_used@@Base+0xeebc>
  42713c:	ldr	x10, [x10, #8]
  427140:	subs	x13, x8, #0x1
  427144:	b.ge	427158 <_obstack_memory_used@@Base+0xeec8>  // b.tcont
  427148:	b	42718c <_obstack_memory_used@@Base+0xeefc>
  42714c:	mov	x10, #0xffffffffffffffff    	// #-1
  427150:	subs	x13, x8, #0x1
  427154:	b.lt	42718c <_obstack_memory_used@@Base+0xeefc>  // b.tstop
  427158:	mov	x14, xzr
  42715c:	b.eq	427180 <_obstack_memory_used@@Base+0xeef0>  // b.none
  427160:	add	x15, x14, x13
  427164:	lsr	x15, x15, #1
  427168:	ldr	x16, [x11, x15, lsl #3]
  42716c:	cmp	x16, x12
  427170:	csinc	x14, x14, x15, ge  // ge = tcont
  427174:	csel	x13, x13, x15, lt  // lt = tstop
  427178:	cmp	x14, x13
  42717c:	b.cc	427160 <_obstack_memory_used@@Base+0xeed0>  // b.lo, b.ul, b.last
  427180:	ldr	x13, [x11, x14, lsl #3]
  427184:	cmp	x13, x12
  427188:	b.eq	4271d0 <_obstack_memory_used@@Base+0xef40>  // b.none
  42718c:	ldr	x13, [x19, #8]
  427190:	subs	x14, x13, #0x1
  427194:	b.lt	4271d0 <_obstack_memory_used@@Base+0xef40>  // b.tstop
  427198:	ldr	x13, [x19, #16]
  42719c:	mov	x15, xzr
  4271a0:	b.eq	4271c4 <_obstack_memory_used@@Base+0xef34>  // b.none
  4271a4:	add	x16, x15, x14
  4271a8:	lsr	x16, x16, #1
  4271ac:	ldr	x17, [x13, x16, lsl #3]
  4271b0:	cmp	x17, x12
  4271b4:	csinc	x15, x15, x16, ge  // ge = tcont
  4271b8:	csel	x14, x14, x16, lt  // lt = tstop
  4271bc:	cmp	x15, x14
  4271c0:	b.cc	4271a4 <_obstack_memory_used@@Base+0xef14>  // b.lo, b.ul, b.last
  4271c4:	ldr	x13, [x13, x15, lsl #3]
  4271c8:	cmp	x13, x12
  4271cc:	b.eq	427258 <_obstack_memory_used@@Base+0xefc8>  // b.none
  4271d0:	cmp	x10, #0x1
  4271d4:	b.lt	4270f8 <_obstack_memory_used@@Base+0xee68>  // b.tstop
  4271d8:	subs	x12, x8, #0x1
  4271dc:	b.lt	427214 <_obstack_memory_used@@Base+0xef84>  // b.tstop
  4271e0:	mov	x13, xzr
  4271e4:	b.eq	427208 <_obstack_memory_used@@Base+0xef78>  // b.none
  4271e8:	add	x14, x13, x12
  4271ec:	lsr	x14, x14, #1
  4271f0:	ldr	x15, [x11, x14, lsl #3]
  4271f4:	cmp	x15, x10
  4271f8:	csinc	x13, x13, x14, ge  // ge = tcont
  4271fc:	csel	x12, x12, x14, lt  // lt = tstop
  427200:	cmp	x13, x12
  427204:	b.cc	4271e8 <_obstack_memory_used@@Base+0xef58>  // b.lo, b.ul, b.last
  427208:	ldr	x11, [x11, x13, lsl #3]
  42720c:	cmp	x11, x10
  427210:	b.eq	4270f8 <_obstack_memory_used@@Base+0xee68>  // b.none
  427214:	ldr	x11, [x19, #8]
  427218:	subs	x12, x11, #0x1
  42721c:	b.lt	4270f8 <_obstack_memory_used@@Base+0xee68>  // b.tstop
  427220:	ldr	x11, [x19, #16]
  427224:	mov	x13, xzr
  427228:	b.eq	42724c <_obstack_memory_used@@Base+0xefbc>  // b.none
  42722c:	add	x14, x13, x12
  427230:	lsr	x14, x14, #1
  427234:	ldr	x15, [x11, x14, lsl #3]
  427238:	cmp	x15, x10
  42723c:	csinc	x13, x13, x14, ge  // ge = tcont
  427240:	csel	x12, x12, x14, lt  // lt = tstop
  427244:	cmp	x13, x12
  427248:	b.cc	42722c <_obstack_memory_used@@Base+0xef9c>  // b.lo, b.ul, b.last
  42724c:	ldr	x11, [x11, x13, lsl #3]
  427250:	cmp	x11, x10
  427254:	b.ne	4270f8 <_obstack_memory_used@@Base+0xee68>  // b.any
  427258:	ldr	x8, [x22, #56]
  42725c:	add	x0, sp, #0x8
  427260:	mov	x1, x21
  427264:	madd	x2, x9, x27, x8
  427268:	bl	426ecc <_obstack_memory_used@@Base+0xec3c>
  42726c:	cbnz	w0, 4273a0 <_obstack_memory_used@@Base+0xf110>
  427270:	ldr	x8, [x24]
  427274:	b	4270f8 <_obstack_memory_used@@Base+0xee68>
  427278:	cmp	x8, #0x0
  42727c:	b.le	427370 <_obstack_memory_used@@Base+0xf0e0>
  427280:	mov	w9, #0x18                  	// #24
  427284:	madd	x9, x20, x9, x25
  427288:	ldp	x10, x0, [sp, #16]
  42728c:	ldr	x9, [x9, #16]
  427290:	mov	x8, xzr
  427294:	sub	x11, x10, #0x1
  427298:	b	4272ac <_obstack_memory_used@@Base+0xf01c>
  42729c:	ldr	x12, [x24]
  4272a0:	add	x8, x8, #0x1
  4272a4:	cmp	x8, x12
  4272a8:	b.ge	427374 <_obstack_memory_used@@Base+0xf0e4>  // b.tcont
  4272ac:	ldr	x12, [x9, x8, lsl #3]
  4272b0:	cmp	x10, #0x1
  4272b4:	b.lt	4272f0 <_obstack_memory_used@@Base+0xf060>  // b.tstop
  4272b8:	mov	x13, xzr
  4272bc:	cbz	x11, 4272e4 <_obstack_memory_used@@Base+0xf054>
  4272c0:	mov	x14, x11
  4272c4:	add	x15, x13, x14
  4272c8:	lsr	x15, x15, #1
  4272cc:	ldr	x16, [x0, x15, lsl #3]
  4272d0:	cmp	x16, x12
  4272d4:	csinc	x13, x13, x15, ge  // ge = tcont
  4272d8:	csel	x14, x14, x15, lt  // lt = tstop
  4272dc:	cmp	x13, x14
  4272e0:	b.cc	4272c4 <_obstack_memory_used@@Base+0xf034>  // b.lo, b.ul, b.last
  4272e4:	ldr	x13, [x0, x13, lsl #3]
  4272e8:	cmp	x13, x12
  4272ec:	b.eq	42729c <_obstack_memory_used@@Base+0xf00c>  // b.none
  4272f0:	ldr	x16, [x19, #8]
  4272f4:	subs	x15, x16, #0x1
  4272f8:	b.lt	42729c <_obstack_memory_used@@Base+0xf00c>  // b.tstop
  4272fc:	ldr	x13, [x19, #16]
  427300:	mov	x14, xzr
  427304:	b.eq	42732c <_obstack_memory_used@@Base+0xf09c>  // b.none
  427308:	mov	x17, x15
  42730c:	add	x18, x14, x17
  427310:	lsr	x18, x18, #1
  427314:	ldr	x1, [x13, x18, lsl #3]
  427318:	cmp	x1, x12
  42731c:	csinc	x14, x14, x18, ge  // ge = tcont
  427320:	csel	x17, x17, x18, lt  // lt = tstop
  427324:	cmp	x14, x17
  427328:	b.cc	42730c <_obstack_memory_used@@Base+0xf07c>  // b.lo, b.ul, b.last
  42732c:	ldr	x17, [x13, x14, lsl #3]
  427330:	cmp	x17, x12
  427334:	csinv	x12, x14, xzr, eq  // eq = none
  427338:	tbnz	x12, #63, 42729c <_obstack_memory_used@@Base+0xf00c>
  42733c:	cmp	x16, x12
  427340:	b.le	42729c <_obstack_memory_used@@Base+0xf00c>
  427344:	cmp	x15, x12
  427348:	str	x15, [x19, #8]
  42734c:	b.le	42729c <_obstack_memory_used@@Base+0xf00c>
  427350:	add	x12, x13, x14, lsl #3
  427354:	ldr	x15, [x12, #8]
  427358:	add	x14, x14, #0x1
  42735c:	str	x15, [x12]
  427360:	ldr	x12, [x19, #8]
  427364:	cmp	x14, x12
  427368:	b.lt	427350 <_obstack_memory_used@@Base+0xf0c0>  // b.tstop
  42736c:	b	42729c <_obstack_memory_used@@Base+0xf00c>
  427370:	ldr	x0, [sp, #24]
  427374:	mov	w23, wzr
  427378:	bl	402620 <free@plt>
  42737c:	mov	w0, w23
  427380:	ldp	x20, x19, [sp, #112]
  427384:	ldp	x22, x21, [sp, #96]
  427388:	ldp	x24, x23, [sp, #80]
  42738c:	ldp	x26, x25, [sp, #64]
  427390:	ldp	x28, x27, [sp, #48]
  427394:	ldp	x29, x30, [sp, #32]
  427398:	add	sp, sp, #0x80
  42739c:	ret
  4273a0:	mov	w23, w0
  4273a4:	ldr	x0, [sp, #24]
  4273a8:	b	427378 <_obstack_memory_used@@Base+0xf0e8>
  4273ac:	sub	sp, sp, #0x80
  4273b0:	stp	x29, x30, [sp, #32]
  4273b4:	stp	x28, x27, [sp, #48]
  4273b8:	stp	x26, x25, [sp, #64]
  4273bc:	stp	x24, x23, [sp, #80]
  4273c0:	stp	x22, x21, [sp, #96]
  4273c4:	stp	x20, x19, [sp, #112]
  4273c8:	stp	x2, x4, [sp, #8]
  4273cc:	ldr	x8, [x0, #200]
  4273d0:	ldr	x9, [x0, #152]
  4273d4:	add	x29, sp, #0x20
  4273d8:	mov	x19, x5
  4273dc:	mov	x21, x3
  4273e0:	mov	x23, x0
  4273e4:	cmp	x8, #0x1
  4273e8:	mov	x24, x1
  4273ec:	mov	x25, xzr
  4273f0:	stur	x9, [x29, #-8]
  4273f4:	b.lt	427430 <_obstack_memory_used@@Base+0xf1a0>  // b.tstop
  4273f8:	ldr	x9, [x23, #216]
  4273fc:	mov	w10, #0x28                  	// #40
  427400:	mov	x11, x8
  427404:	add	x12, x11, x25
  427408:	cmp	x12, #0x0
  42740c:	cinc	x12, x12, lt  // lt = tstop
  427410:	asr	x12, x12, #1
  427414:	madd	x13, x12, x10, x9
  427418:	ldr	x13, [x13, #8]
  42741c:	cmp	x13, x21
  427420:	csel	x11, x11, x12, lt  // lt = tstop
  427424:	csinc	x25, x25, x12, ge  // ge = tcont
  427428:	cmp	x25, x11
  42742c:	b.lt	427404 <_obstack_memory_used@@Base+0xf174>  // b.tstop
  427430:	cmp	x25, x8
  427434:	b.ge	427450 <_obstack_memory_used@@Base+0xf1c0>  // b.tcont
  427438:	ldr	x9, [x23, #216]
  42743c:	mov	w10, #0x28                  	// #40
  427440:	madd	x9, x25, x10, x9
  427444:	ldr	x9, [x9, #8]
  427448:	cmp	x9, x21
  42744c:	b.eq	427454 <_obstack_memory_used@@Base+0xf1c4>  // b.none
  427450:	mov	x25, #0xffffffffffffffff    	// #-1
  427454:	cmp	x8, #0x1
  427458:	b.lt	4274a4 <_obstack_memory_used@@Base+0xf214>  // b.tstop
  42745c:	ldr	x9, [x23, #216]
  427460:	mov	x26, xzr
  427464:	mov	w10, #0x28                  	// #40
  427468:	mov	x11, x8
  42746c:	add	x12, x11, x26
  427470:	cmp	x12, #0x0
  427474:	cinc	x12, x12, lt  // lt = tstop
  427478:	asr	x12, x12, #1
  42747c:	madd	x13, x12, x10, x9
  427480:	ldr	x13, [x13, #8]
  427484:	cmp	x13, x19
  427488:	csel	x11, x11, x12, lt  // lt = tstop
  42748c:	csinc	x26, x26, x12, ge  // ge = tcont
  427490:	cmp	x26, x11
  427494:	b.lt	42746c <_obstack_memory_used@@Base+0xf1dc>  // b.tstop
  427498:	cmp	x26, x8
  42749c:	b.lt	4274b0 <_obstack_memory_used@@Base+0xf220>  // b.tstop
  4274a0:	b	4274c8 <_obstack_memory_used@@Base+0xf238>
  4274a4:	mov	x26, xzr
  4274a8:	cmp	x26, x8
  4274ac:	b.ge	4274c8 <_obstack_memory_used@@Base+0xf238>  // b.tcont
  4274b0:	ldr	x8, [x23, #216]
  4274b4:	mov	w9, #0x28                  	// #40
  4274b8:	madd	x8, x26, x9, x8
  4274bc:	ldr	x8, [x8, #8]
  4274c0:	cmp	x8, x19
  4274c4:	b.eq	4274cc <_obstack_memory_used@@Base+0xf23c>  // b.none
  4274c8:	mov	x26, #0xffffffffffffffff    	// #-1
  4274cc:	ldr	x8, [x24, #8]
  4274d0:	cmp	x8, #0x1
  4274d4:	b.lt	427628 <_obstack_memory_used@@Base+0xf398>  // b.tstop
  4274d8:	mov	x22, xzr
  4274dc:	mov	w20, #0x28                  	// #40
  4274e0:	b	427500 <_obstack_memory_used@@Base+0xf270>
  4274e4:	mov	w0, #0xffffffff            	// #-1
  4274e8:	cmp	w0, w28
  4274ec:	b.ne	427620 <_obstack_memory_used@@Base+0xf390>  // b.any
  4274f0:	ldr	x8, [x24, #8]
  4274f4:	add	x22, x22, #0x1
  4274f8:	cmp	x22, x8
  4274fc:	b.ge	427628 <_obstack_memory_used@@Base+0xf398>  // b.tcont
  427500:	ldr	x8, [x24, #16]
  427504:	ldr	x9, [x23, #216]
  427508:	ldur	x12, [x29, #-8]
  42750c:	ldr	x8, [x8, x22, lsl #3]
  427510:	ldr	x12, [x12]
  427514:	madd	x10, x8, x20, x9
  427518:	ldr	x11, [x10]
  42751c:	ldr	x10, [x10, #16]
  427520:	lsl	x11, x11, #4
  427524:	ldr	x27, [x12, x11]
  427528:	cmp	x10, x21
  42752c:	b.le	427540 <_obstack_memory_used@@Base+0xf2b0>
  427530:	mov	w28, #0xffffffff            	// #-1
  427534:	cmp	x10, x19
  427538:	b.gt	4274e4 <_obstack_memory_used@@Base+0xf254>
  42753c:	b	4275bc <_obstack_memory_used@@Base+0xf32c>
  427540:	madd	x11, x8, x20, x9
  427544:	ldr	x11, [x11, #24]
  427548:	cmp	x11, x21
  42754c:	b.ge	427560 <_obstack_memory_used@@Base+0xf2d0>  // b.tcont
  427550:	mov	w28, #0x1                   	// #1
  427554:	cmp	x10, x19
  427558:	b.gt	4274e4 <_obstack_memory_used@@Base+0xf254>
  42755c:	b	4275bc <_obstack_memory_used@@Base+0xf32c>
  427560:	cmp	x10, x21
  427564:	cset	w1, eq  // eq = none
  427568:	cmp	x11, x21
  42756c:	cset	w11, eq  // eq = none
  427570:	bfi	w1, w11, #1, #1
  427574:	cbz	w1, 4275b0 <_obstack_memory_used@@Base+0xf320>
  427578:	ldr	x3, [sp, #8]
  42757c:	mov	x0, x23
  427580:	mov	x2, x27
  427584:	mov	x4, x25
  427588:	bl	42764c <_obstack_memory_used@@Base+0xf3bc>
  42758c:	ldr	x8, [x24, #16]
  427590:	ldr	x9, [x23, #216]
  427594:	mov	w28, w0
  427598:	ldr	x8, [x8, x22, lsl #3]
  42759c:	madd	x10, x8, x20, x9
  4275a0:	ldr	x10, [x10, #16]
  4275a4:	cmp	x10, x19
  4275a8:	b.le	4275bc <_obstack_memory_used@@Base+0xf32c>
  4275ac:	b	4274e4 <_obstack_memory_used@@Base+0xf254>
  4275b0:	mov	w28, wzr
  4275b4:	cmp	x10, x19
  4275b8:	b.gt	4274e4 <_obstack_memory_used@@Base+0xf254>
  4275bc:	madd	x8, x8, x20, x9
  4275c0:	ldr	x8, [x8, #24]
  4275c4:	cmp	x8, x19
  4275c8:	b.ge	4275dc <_obstack_memory_used@@Base+0xf34c>  // b.tcont
  4275cc:	mov	w0, #0x1                   	// #1
  4275d0:	cmp	w0, w28
  4275d4:	b.eq	4274f0 <_obstack_memory_used@@Base+0xf260>  // b.none
  4275d8:	b	427620 <_obstack_memory_used@@Base+0xf390>
  4275dc:	cmp	x10, x19
  4275e0:	cset	w1, eq  // eq = none
  4275e4:	cmp	x8, x19
  4275e8:	cset	w8, eq  // eq = none
  4275ec:	bfi	w1, w8, #1, #1
  4275f0:	cbz	w1, 427614 <_obstack_memory_used@@Base+0xf384>
  4275f4:	ldr	x3, [sp, #16]
  4275f8:	mov	x0, x23
  4275fc:	mov	x2, x27
  427600:	mov	x4, x26
  427604:	bl	42764c <_obstack_memory_used@@Base+0xf3bc>
  427608:	cmp	w0, w28
  42760c:	b.eq	4274f0 <_obstack_memory_used@@Base+0xf260>  // b.none
  427610:	b	427620 <_obstack_memory_used@@Base+0xf390>
  427614:	mov	w0, wzr
  427618:	cmp	w0, w28
  42761c:	b.eq	4274f0 <_obstack_memory_used@@Base+0xf260>  // b.none
  427620:	mov	w0, #0x1                   	// #1
  427624:	b	42762c <_obstack_memory_used@@Base+0xf39c>
  427628:	mov	w0, wzr
  42762c:	ldp	x20, x19, [sp, #112]
  427630:	ldp	x22, x21, [sp, #96]
  427634:	ldp	x24, x23, [sp, #80]
  427638:	ldp	x26, x25, [sp, #64]
  42763c:	ldp	x28, x27, [sp, #48]
  427640:	ldp	x29, x30, [sp, #32]
  427644:	add	sp, sp, #0x80
  427648:	ret
  42764c:	sub	sp, sp, #0x80
  427650:	stp	x29, x30, [sp, #32]
  427654:	stp	x28, x27, [sp, #48]
  427658:	stp	x26, x25, [sp, #64]
  42765c:	stp	x24, x23, [sp, #80]
  427660:	stp	x22, x21, [sp, #96]
  427664:	stp	x20, x19, [sp, #112]
  427668:	ldr	x24, [x0, #152]
  42766c:	mov	w8, #0x18                  	// #24
  427670:	mov	w23, w1
  427674:	add	x29, sp, #0x20
  427678:	ldr	x9, [x24, #48]
  42767c:	madd	x13, x3, x8, x9
  427680:	ldr	x8, [x13, #8]!
  427684:	cmp	x8, #0x1
  427688:	b.lt	427800 <_obstack_memory_used@@Base+0xf570>  // b.tstop
  42768c:	mov	w12, #0x18                  	// #24
  427690:	cmp	x2, #0x3f
  427694:	and	w10, w23, #0x2
  427698:	mov	w11, #0x1                   	// #1
  42769c:	madd	x9, x3, x12, x9
  4276a0:	cset	w12, gt
  4276a4:	lsl	x11, x11, x2
  4276a8:	add	x25, x9, #0x10
  4276ac:	orr	w9, w12, w10, lsr #1
  4276b0:	mov	x19, x4
  4276b4:	mov	x20, x3
  4276b8:	mov	x21, x2
  4276bc:	mov	x22, x0
  4276c0:	mov	x26, xzr
  4276c4:	stur	w9, [x29, #-12]
  4276c8:	stur	x11, [x29, #-8]
  4276cc:	mvn	w9, w11
  4276d0:	mov	w11, #0x28                  	// #40
  4276d4:	str	w9, [sp, #16]
  4276d8:	str	x13, [sp, #8]
  4276dc:	b	4276f8 <_obstack_memory_used@@Base+0xf468>
  4276e0:	ldr	x13, [sp, #8]
  4276e4:	mov	w11, #0x28                  	// #40
  4276e8:	ldr	x8, [x13]
  4276ec:	add	x26, x26, #0x1
  4276f0:	cmp	x26, x8
  4276f4:	b.ge	427800 <_obstack_memory_used@@Base+0xf570>  // b.tcont
  4276f8:	ldr	x9, [x25]
  4276fc:	ldr	x27, [x9, x26, lsl #3]
  427700:	ldr	x9, [x24]
  427704:	add	x9, x9, x27, lsl #4
  427708:	ldrb	w10, [x9, #8]
  42770c:	cmp	w10, #0x9
  427710:	b.eq	4277d4 <_obstack_memory_used@@Base+0xf544>  // b.none
  427714:	cmp	w10, #0x8
  427718:	b.eq	4277e8 <_obstack_memory_used@@Base+0xf558>  // b.none
  42771c:	cmp	w10, #0x4
  427720:	b.ne	4276ec <_obstack_memory_used@@Base+0xf45c>  // b.any
  427724:	cmn	x19, #0x1
  427728:	b.eq	4276ec <_obstack_memory_used@@Base+0xf45c>  // b.none
  42772c:	ldr	x8, [x22, #216]
  427730:	madd	x8, x19, x11, x8
  427734:	add	x28, x8, #0x22
  427738:	b	427758 <_obstack_memory_used@@Base+0xf4c8>
  42773c:	ldrh	w8, [x28]
  427740:	ldr	w9, [sp, #16]
  427744:	and	w8, w8, w9
  427748:	strh	w8, [x28]
  42774c:	ldurb	w8, [x28, #-2]
  427750:	add	x28, x28, #0x28
  427754:	cbz	w8, 4276e0 <_obstack_memory_used@@Base+0xf450>
  427758:	ldur	x8, [x28, #-34]
  42775c:	cmp	x8, x27
  427760:	b.ne	42774c <_obstack_memory_used@@Base+0xf4bc>  // b.any
  427764:	cmp	x21, #0x3f
  427768:	b.gt	42777c <_obstack_memory_used@@Base+0xf4ec>
  42776c:	ldrh	w8, [x28]
  427770:	ldur	x9, [x29, #-8]
  427774:	tst	x9, x8
  427778:	b.eq	42774c <_obstack_memory_used@@Base+0xf4bc>  // b.none
  42777c:	ldr	x8, [x24, #40]
  427780:	mov	w9, #0x18                  	// #24
  427784:	madd	x8, x27, x9, x8
  427788:	ldr	x8, [x8, #16]
  42778c:	ldr	x3, [x8]
  427790:	cmp	x3, x20
  427794:	b.eq	427808 <_obstack_memory_used@@Base+0xf578>  // b.none
  427798:	mov	x0, x22
  42779c:	mov	w1, w23
  4277a0:	mov	x2, x21
  4277a4:	mov	x4, x19
  4277a8:	bl	42764c <_obstack_memory_used@@Base+0xf3bc>
  4277ac:	cbz	w0, 4277c4 <_obstack_memory_used@@Base+0xf534>
  4277b0:	cmn	w0, #0x1
  4277b4:	b.eq	427814 <_obstack_memory_used@@Base+0xf584>  // b.none
  4277b8:	cmp	x21, #0x3f
  4277bc:	b.le	42773c <_obstack_memory_used@@Base+0xf4ac>
  4277c0:	b	42774c <_obstack_memory_used@@Base+0xf4bc>
  4277c4:	ldur	w8, [x29, #-12]
  4277c8:	tbz	w8, #0, 42773c <_obstack_memory_used@@Base+0xf4ac>
  4277cc:	tbz	w23, #1, 42774c <_obstack_memory_used@@Base+0xf4bc>
  4277d0:	b	427810 <_obstack_memory_used@@Base+0xf580>
  4277d4:	tbz	w23, #1, 4276ec <_obstack_memory_used@@Base+0xf45c>
  4277d8:	ldr	x9, [x9]
  4277dc:	cmp	x9, x21
  4277e0:	b.ne	4276ec <_obstack_memory_used@@Base+0xf45c>  // b.any
  4277e4:	b	427810 <_obstack_memory_used@@Base+0xf580>
  4277e8:	tbz	w23, #0, 4276ec <_obstack_memory_used@@Base+0xf45c>
  4277ec:	ldr	x9, [x9]
  4277f0:	cmp	x9, x21
  4277f4:	b.ne	4276ec <_obstack_memory_used@@Base+0xf45c>  // b.any
  4277f8:	mov	w0, #0xffffffff            	// #-1
  4277fc:	b	427814 <_obstack_memory_used@@Base+0xf584>
  427800:	ubfx	w0, w23, #1, #1
  427804:	b	427814 <_obstack_memory_used@@Base+0xf584>
  427808:	sbfx	w0, w23, #0, #1
  42780c:	b	427814 <_obstack_memory_used@@Base+0xf584>
  427810:	mov	w0, wzr
  427814:	ldp	x20, x19, [sp, #112]
  427818:	ldp	x22, x21, [sp, #96]
  42781c:	ldp	x24, x23, [sp, #80]
  427820:	ldp	x26, x25, [sp, #64]
  427824:	ldp	x28, x27, [sp, #48]
  427828:	ldp	x29, x30, [sp, #32]
  42782c:	add	sp, sp, #0x80
  427830:	ret
  427834:	stp	x29, x30, [sp, #-48]!
  427838:	str	x21, [sp, #16]
  42783c:	stp	x20, x19, [sp, #32]
  427840:	mov	x29, sp
  427844:	mov	x20, x0
  427848:	bl	402320 <__fpending@plt>
  42784c:	ldr	w21, [x20]
  427850:	mov	x19, x0
  427854:	mov	x0, x20
  427858:	bl	402340 <fclose@plt>
  42785c:	mov	w8, w0
  427860:	tbnz	w21, #5, 427888 <_obstack_memory_used@@Base+0xf5f8>
  427864:	cmp	w8, #0x0
  427868:	csetm	w0, ne  // ne = any
  42786c:	cbnz	x19, 427898 <_obstack_memory_used@@Base+0xf608>
  427870:	cbz	w8, 427898 <_obstack_memory_used@@Base+0xf608>
  427874:	bl	4027e0 <__errno_location@plt>
  427878:	ldr	w8, [x0]
  42787c:	cmp	w8, #0x9
  427880:	csetm	w0, ne  // ne = any
  427884:	b	427898 <_obstack_memory_used@@Base+0xf608>
  427888:	cbnz	w8, 427894 <_obstack_memory_used@@Base+0xf604>
  42788c:	bl	4027e0 <__errno_location@plt>
  427890:	str	wzr, [x0]
  427894:	mov	w0, #0xffffffff            	// #-1
  427898:	ldp	x20, x19, [sp, #32]
  42789c:	ldr	x21, [sp, #16]
  4278a0:	ldp	x29, x30, [sp], #48
  4278a4:	ret
  4278a8:	mov	w8, #0xf616                	// #62998
  4278ac:	movk	w8, #0x95, lsl #16
  4278b0:	str	xzr, [x0, #16]
  4278b4:	str	w8, [x0, #24]
  4278b8:	ret
  4278bc:	stp	x29, x30, [sp, #-16]!
  4278c0:	ldr	w8, [x0, #24]
  4278c4:	mov	w9, #0xf616                	// #62998
  4278c8:	movk	w9, #0x95, lsl #16
  4278cc:	mov	x29, sp
  4278d0:	cmp	w8, w9
  4278d4:	b.ne	427940 <_obstack_memory_used@@Base+0xf6b0>  // b.any
  4278d8:	ldr	x8, [x0, #16]
  4278dc:	cbz	x8, 427900 <_obstack_memory_used@@Base+0xf670>
  4278e0:	ldr	x9, [x1, #8]
  4278e4:	ldr	x10, [x0]
  4278e8:	cmp	x9, x10
  4278ec:	b.ne	427900 <_obstack_memory_used@@Base+0xf670>  // b.any
  4278f0:	ldr	x9, [x1]
  4278f4:	ldr	x10, [x0, #8]
  4278f8:	cmp	x9, x10
  4278fc:	b.eq	427930 <_obstack_memory_used@@Base+0xf6a0>  // b.none
  427900:	add	x9, x8, #0x1
  427904:	tst	x9, x8
  427908:	str	x9, [x0, #16]
  42790c:	b.ne	427928 <_obstack_memory_used@@Base+0xf698>  // b.any
  427910:	cbz	x9, 427930 <_obstack_memory_used@@Base+0xf6a0>
  427914:	ldr	q0, [x1]
  427918:	mov	w8, wzr
  42791c:	ext	v0.16b, v0.16b, v0.16b, #8
  427920:	str	q0, [x0]
  427924:	b	427934 <_obstack_memory_used@@Base+0xf6a4>
  427928:	mov	w8, wzr
  42792c:	b	427934 <_obstack_memory_used@@Base+0xf6a4>
  427930:	mov	w8, #0x1                   	// #1
  427934:	mov	w0, w8
  427938:	ldp	x29, x30, [sp], #16
  42793c:	ret
  427940:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x12d70>
  427944:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x12d70>
  427948:	adrp	x3, 42b000 <_obstack_memory_used@@Base+0x12d70>
  42794c:	add	x0, x0, #0x294
  427950:	add	x1, x1, #0x2ac
  427954:	add	x3, x3, #0x2ba
  427958:	mov	w2, #0x3c                  	// #60
  42795c:	bl	4027d0 <__assert_fail@plt>
  427960:	sub	x0, x0, #0x1
  427964:	ldrb	w10, [x0, #1]!
  427968:	cmp	w10, #0x2f
  42796c:	b.eq	427964 <_obstack_memory_used@@Base+0xf6d4>  // b.none
  427970:	mov	w8, wzr
  427974:	mov	x9, x0
  427978:	b	427984 <_obstack_memory_used@@Base+0xf6f4>
  42797c:	ldrb	w10, [x9, #1]!
  427980:	mov	w8, #0x1                   	// #1
  427984:	and	w10, w10, #0xff
  427988:	cmp	w10, #0x2f
  42798c:	b.eq	42797c <_obstack_memory_used@@Base+0xf6ec>  // b.none
  427990:	cbz	w10, 4279a8 <_obstack_memory_used@@Base+0xf718>
  427994:	tst	w8, #0x1
  427998:	csel	x0, x9, x0, ne  // ne = any
  42799c:	ldrb	w10, [x9, #1]!
  4279a0:	mov	w8, wzr
  4279a4:	b	427984 <_obstack_memory_used@@Base+0xf6f4>
  4279a8:	ret
  4279ac:	stp	x29, x30, [sp, #-32]!
  4279b0:	str	x19, [sp, #16]
  4279b4:	mov	x29, sp
  4279b8:	mov	x19, x0
  4279bc:	bl	402270 <strlen@plt>
  4279c0:	mov	x8, x0
  4279c4:	sub	x9, x19, #0x1
  4279c8:	mov	x0, x8
  4279cc:	cmp	x8, #0x2
  4279d0:	b.cc	4279e4 <_obstack_memory_used@@Base+0xf754>  // b.lo, b.ul, b.last
  4279d4:	ldrb	w8, [x9, x0]
  4279d8:	cmp	w8, #0x2f
  4279dc:	sub	x8, x0, #0x1
  4279e0:	b.eq	4279c8 <_obstack_memory_used@@Base+0xf738>  // b.none
  4279e4:	ldr	x19, [sp, #16]
  4279e8:	ldp	x29, x30, [sp], #32
  4279ec:	ret
  4279f0:	sub	sp, sp, #0xe0
  4279f4:	stp	x29, x30, [sp, #208]
  4279f8:	add	x29, sp, #0xd0
  4279fc:	stp	x2, x3, [x29, #-80]
  427a00:	stp	x4, x5, [x29, #-64]
  427a04:	stp	x6, x7, [x29, #-48]
  427a08:	stp	q1, q2, [sp, #16]
  427a0c:	stp	q3, q4, [sp, #48]
  427a10:	str	q0, [sp]
  427a14:	stp	q5, q6, [sp, #80]
  427a18:	str	q7, [sp, #112]
  427a1c:	tbnz	w1, #6, 427a28 <_obstack_memory_used@@Base+0xf798>
  427a20:	mov	w2, wzr
  427a24:	b	427a80 <_obstack_memory_used@@Base+0xf7f0>
  427a28:	mov	x9, #0xffffffffffffffd0    	// #-48
  427a2c:	mov	x11, sp
  427a30:	sub	x12, x29, #0x50
  427a34:	movk	x9, #0xff80, lsl #32
  427a38:	add	x10, x29, #0x10
  427a3c:	mov	x8, #0xffffffffffffffd0    	// #-48
  427a40:	add	x11, x11, #0x80
  427a44:	add	x12, x12, #0x30
  427a48:	stp	x11, x9, [x29, #-16]
  427a4c:	stp	x10, x12, [x29, #-32]
  427a50:	tbz	w8, #31, 427a70 <_obstack_memory_used@@Base+0xf7e0>
  427a54:	add	w9, w8, #0x8
  427a58:	cmn	w8, #0x8
  427a5c:	stur	w9, [x29, #-8]
  427a60:	b.gt	427a70 <_obstack_memory_used@@Base+0xf7e0>
  427a64:	ldur	x9, [x29, #-24]
  427a68:	add	x8, x9, x8
  427a6c:	b	427a7c <_obstack_memory_used@@Base+0xf7ec>
  427a70:	ldur	x8, [x29, #-32]
  427a74:	add	x9, x8, #0x8
  427a78:	stur	x9, [x29, #-32]
  427a7c:	ldr	w2, [x8]
  427a80:	bl	4023c0 <open@plt>
  427a84:	bl	414e4c <wcrtomb@plt+0x125dc>
  427a88:	ldp	x29, x30, [sp, #208]
  427a8c:	add	sp, sp, #0xe0
  427a90:	ret
  427a94:	sub	sp, sp, #0x130
  427a98:	add	x1, sp, #0xc
  427a9c:	mov	w2, #0x101                 	// #257
  427aa0:	stp	x29, x30, [sp, #272]
  427aa4:	str	x28, [sp, #288]
  427aa8:	add	x29, sp, #0x110
  427aac:	bl	427d2c <_obstack_memory_used@@Base+0xfa9c>
  427ab0:	cbz	w0, 427abc <_obstack_memory_used@@Base+0xf82c>
  427ab4:	mov	w0, wzr
  427ab8:	b	427af0 <_obstack_memory_used@@Base+0xf860>
  427abc:	ldrh	w8, [sp, #12]
  427ac0:	cmp	w8, #0x43
  427ac4:	b.eq	427ab4 <_obstack_memory_used@@Base+0xf824>  // b.none
  427ac8:	ldr	w8, [sp, #12]
  427acc:	ldrh	w9, [sp, #16]
  427ad0:	mov	w10, #0x4f50                	// #20304
  427ad4:	movk	w10, #0x4953, lsl #16
  427ad8:	mov	w11, #0x58                  	// #88
  427adc:	eor	w8, w8, w10
  427ae0:	eor	w9, w9, w11
  427ae4:	orr	w8, w8, w9
  427ae8:	cmp	w8, #0x0
  427aec:	cset	w0, ne  // ne = any
  427af0:	ldr	x28, [sp, #288]
  427af4:	ldp	x29, x30, [sp, #272]
  427af8:	add	sp, sp, #0x130
  427afc:	ret
  427b00:	mov	w8, #0x1                   	// #1
  427b04:	dup	v0.4s, w1
  427b08:	stp	wzr, wzr, [x0, #20]
  427b0c:	strb	w8, [x0, #28]
  427b10:	str	q0, [x0]
  427b14:	str	w1, [x0, #16]
  427b18:	ret
  427b1c:	ldrb	w0, [x0, #28]
  427b20:	ret
  427b24:	ldrb	w8, [x0, #28]
  427b28:	ldr	w10, [x0, #20]
  427b2c:	eor	w9, w8, #0x1
  427b30:	add	w10, w10, w9
  427b34:	and	w11, w10, #0x3
  427b38:	lsl	x12, x11, #2
  427b3c:	ldr	w8, [x0, x12]
  427b40:	str	w1, [x0, x12]
  427b44:	ldr	w12, [x0, #24]
  427b48:	str	w11, [x0, #20]
  427b4c:	cmp	w11, w12
  427b50:	b.ne	427b60 <_obstack_memory_used@@Base+0xf8d0>  // b.any
  427b54:	add	w9, w10, w9
  427b58:	and	w9, w9, #0x3
  427b5c:	str	w9, [x0, #24]
  427b60:	strb	wzr, [x0, #28]
  427b64:	mov	w0, w8
  427b68:	ret
  427b6c:	stp	x29, x30, [sp, #-16]!
  427b70:	ldrb	w8, [x0, #28]
  427b74:	mov	x29, sp
  427b78:	cbnz	w8, 427bbc <_obstack_memory_used@@Base+0xf92c>
  427b7c:	ldp	w9, w8, [x0, #16]
  427b80:	lsl	x10, x8, #2
  427b84:	ldr	w8, [x0, x10]
  427b88:	str	w9, [x0, x10]
  427b8c:	ldp	w9, w10, [x0, #20]
  427b90:	cmp	w9, w10
  427b94:	b.ne	427ba4 <_obstack_memory_used@@Base+0xf914>  // b.any
  427b98:	mov	w9, #0x1                   	// #1
  427b9c:	strb	w9, [x0, #28]
  427ba0:	b	427bb0 <_obstack_memory_used@@Base+0xf920>
  427ba4:	sub	w9, w9, #0x1
  427ba8:	and	w9, w9, #0x3
  427bac:	str	w9, [x0, #20]
  427bb0:	mov	w0, w8
  427bb4:	ldp	x29, x30, [sp], #16
  427bb8:	ret
  427bbc:	bl	402560 <abort@plt>
  427bc0:	stp	x29, x30, [sp, #-16]!
  427bc4:	mov	w0, #0xe                   	// #14
  427bc8:	mov	x29, sp
  427bcc:	bl	402360 <nl_langinfo@plt>
  427bd0:	adrp	x8, 429000 <_obstack_memory_used@@Base+0x10d70>
  427bd4:	add	x8, x8, #0xb5d
  427bd8:	cmp	x0, #0x0
  427bdc:	csel	x8, x8, x0, eq  // eq = none
  427be0:	ldrb	w9, [x8]
  427be4:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x12d70>
  427be8:	add	x10, x10, #0x305
  427bec:	cmp	w9, #0x0
  427bf0:	csel	x0, x10, x8, eq  // eq = none
  427bf4:	ldp	x29, x30, [sp], #16
  427bf8:	ret
  427bfc:	stp	x29, x30, [sp, #-32]!
  427c00:	str	x19, [sp, #16]
  427c04:	mov	x29, sp
  427c08:	mov	w19, w0
  427c0c:	bl	4023b0 <wcwidth@plt>
  427c10:	tbz	w0, #31, 427c24 <_obstack_memory_used@@Base+0xf994>
  427c14:	mov	w0, w19
  427c18:	bl	4022e0 <iswcntrl@plt>
  427c1c:	cmp	w0, #0x0
  427c20:	cset	w0, eq  // eq = none
  427c24:	ldr	x19, [sp, #16]
  427c28:	ldp	x29, x30, [sp], #32
  427c2c:	ret
  427c30:	stp	x29, x30, [sp, #-48]!
  427c34:	str	x21, [sp, #16]
  427c38:	stp	x20, x19, [sp, #32]
  427c3c:	mov	x8, x1
  427c40:	mov	x19, x1
  427c44:	ldr	x1, [x8], #24
  427c48:	mov	x20, x0
  427c4c:	mov	x29, sp
  427c50:	cmp	x1, x8
  427c54:	b.ne	427c6c <_obstack_memory_used@@Base+0xf9dc>  // b.any
  427c58:	ldr	x2, [x19, #8]
  427c5c:	add	x21, x20, #0x18
  427c60:	mov	x0, x21
  427c64:	bl	402210 <memcpy@plt>
  427c68:	mov	x1, x21
  427c6c:	str	x1, [x20]
  427c70:	ldr	x8, [x19, #8]
  427c74:	str	x8, [x20, #8]
  427c78:	ldrb	w8, [x19, #16]
  427c7c:	strb	w8, [x20, #16]
  427c80:	cbz	w8, 427c8c <_obstack_memory_used@@Base+0xf9fc>
  427c84:	ldr	w8, [x19, #20]
  427c88:	str	w8, [x20, #20]
  427c8c:	ldp	x20, x19, [sp, #32]
  427c90:	ldr	x21, [sp, #16]
  427c94:	ldp	x29, x30, [sp], #48
  427c98:	ret
  427c9c:	lsr	w8, w0, #3
  427ca0:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x12d70>
  427ca4:	and	x8, x8, #0x1c
  427ca8:	add	x9, x9, #0x30c
  427cac:	ldr	w8, [x9, x8]
  427cb0:	lsr	w8, w8, w0
  427cb4:	and	w0, w8, #0x1
  427cb8:	ret
  427cbc:	stp	x29, x30, [sp, #-48]!
  427cc0:	mov	w8, #0x4900                	// #18688
  427cc4:	movk	w8, #0x8, lsl #16
  427cc8:	orr	w2, w2, w8
  427ccc:	str	x21, [sp, #16]
  427cd0:	stp	x20, x19, [sp, #32]
  427cd4:	mov	x29, sp
  427cd8:	mov	x19, x3
  427cdc:	bl	413484 <wcrtomb@plt+0x10c14>
  427ce0:	tbnz	w0, #31, 427cf8 <_obstack_memory_used@@Base+0xfa68>
  427ce4:	mov	w20, w0
  427ce8:	bl	402530 <fdopendir@plt>
  427cec:	cbz	x0, 427d00 <_obstack_memory_used@@Base+0xfa70>
  427cf0:	str	w20, [x19]
  427cf4:	b	427d1c <_obstack_memory_used@@Base+0xfa8c>
  427cf8:	mov	x0, xzr
  427cfc:	b	427d1c <_obstack_memory_used@@Base+0xfa8c>
  427d00:	bl	4027e0 <__errno_location@plt>
  427d04:	ldr	w21, [x0]
  427d08:	mov	x19, x0
  427d0c:	mov	w0, w20
  427d10:	bl	4024f0 <close@plt>
  427d14:	mov	x0, xzr
  427d18:	str	w21, [x19]
  427d1c:	ldp	x20, x19, [sp, #32]
  427d20:	ldr	x21, [sp, #16]
  427d24:	ldp	x29, x30, [sp], #48
  427d28:	ret
  427d2c:	stp	x29, x30, [sp, #-48]!
  427d30:	stp	x20, x19, [sp, #32]
  427d34:	mov	x19, x1
  427d38:	mov	x1, xzr
  427d3c:	str	x21, [sp, #16]
  427d40:	mov	x29, sp
  427d44:	mov	x20, x2
  427d48:	bl	402850 <setlocale@plt>
  427d4c:	cbz	x0, 427d78 <_obstack_memory_used@@Base+0xfae8>
  427d50:	mov	x21, x0
  427d54:	bl	402270 <strlen@plt>
  427d58:	cmp	x0, x20
  427d5c:	b.cs	427d88 <_obstack_memory_used@@Base+0xfaf8>  // b.hs, b.nlast
  427d60:	add	x2, x0, #0x1
  427d64:	mov	x0, x19
  427d68:	mov	x1, x21
  427d6c:	bl	402210 <memcpy@plt>
  427d70:	mov	w0, wzr
  427d74:	b	427da8 <_obstack_memory_used@@Base+0xfb18>
  427d78:	cbz	x20, 427d80 <_obstack_memory_used@@Base+0xfaf0>
  427d7c:	strb	wzr, [x19]
  427d80:	mov	w0, #0x16                  	// #22
  427d84:	b	427da8 <_obstack_memory_used@@Base+0xfb18>
  427d88:	cbz	x20, 427da4 <_obstack_memory_used@@Base+0xfb14>
  427d8c:	sub	x20, x20, #0x1
  427d90:	mov	x0, x19
  427d94:	mov	x1, x21
  427d98:	mov	x2, x20
  427d9c:	bl	402210 <memcpy@plt>
  427da0:	strb	wzr, [x19, x20]
  427da4:	mov	w0, #0x22                  	// #34
  427da8:	ldp	x20, x19, [sp, #32]
  427dac:	ldr	x21, [sp, #16]
  427db0:	ldp	x29, x30, [sp], #48
  427db4:	ret
  427db8:	mov	x1, xzr
  427dbc:	b	402850 <setlocale@plt>
  427dc0:	mov	w2, #0x3                   	// #3
  427dc4:	mov	w1, wzr
  427dc8:	b	427dcc <_obstack_memory_used@@Base+0xfb3c>
  427dcc:	sub	sp, sp, #0x100
  427dd0:	stp	x29, x30, [sp, #208]
  427dd4:	add	x29, sp, #0xd0
  427dd8:	mov	x8, #0xffffffffffffffd0    	// #-48
  427ddc:	mov	x9, sp
  427de0:	sub	x10, x29, #0x50
  427de4:	stp	x20, x19, [sp, #240]
  427de8:	mov	w19, w0
  427dec:	movk	x8, #0xff80, lsl #32
  427df0:	add	x11, x29, #0x30
  427df4:	cmp	w1, #0xb
  427df8:	add	x9, x9, #0x80
  427dfc:	add	x10, x10, #0x30
  427e00:	stp	x22, x21, [sp, #224]
  427e04:	stp	x2, x3, [x29, #-80]
  427e08:	stp	x4, x5, [x29, #-64]
  427e0c:	stp	x6, x7, [x29, #-48]
  427e10:	stp	q1, q2, [sp, #16]
  427e14:	stp	q3, q4, [sp, #48]
  427e18:	str	q0, [sp]
  427e1c:	stp	q5, q6, [sp, #80]
  427e20:	str	q7, [sp, #112]
  427e24:	stp	x9, x8, [x29, #-16]
  427e28:	stp	x11, x10, [x29, #-32]
  427e2c:	b.hi	427e78 <_obstack_memory_used@@Base+0xfbe8>  // b.pmore
  427e30:	mov	w8, #0x1                   	// #1
  427e34:	lsl	w8, w8, w1
  427e38:	mov	w9, #0x514                 	// #1300
  427e3c:	tst	w8, w9
  427e40:	b.ne	427eb0 <_obstack_memory_used@@Base+0xfc20>  // b.any
  427e44:	mov	w9, #0xa0a                 	// #2570
  427e48:	tst	w8, w9
  427e4c:	b.ne	427ea4 <_obstack_memory_used@@Base+0xfc14>  // b.any
  427e50:	cbnz	w1, 427e78 <_obstack_memory_used@@Base+0xfbe8>
  427e54:	ldursw	x8, [x29, #-8]
  427e58:	tbz	w8, #31, 427f58 <_obstack_memory_used@@Base+0xfcc8>
  427e5c:	add	w9, w8, #0x8
  427e60:	cmn	w8, #0x8
  427e64:	stur	w9, [x29, #-8]
  427e68:	b.gt	427f58 <_obstack_memory_used@@Base+0xfcc8>
  427e6c:	ldur	x9, [x29, #-24]
  427e70:	add	x8, x9, x8
  427e74:	b	427f64 <_obstack_memory_used@@Base+0xfcd4>
  427e78:	sub	w8, w1, #0x400
  427e7c:	cmp	w8, #0xa
  427e80:	b.hi	427f34 <_obstack_memory_used@@Base+0xfca4>  // b.pmore
  427e84:	mov	w9, #0x1                   	// #1
  427e88:	lsl	w9, w9, w8
  427e8c:	mov	w10, #0x285                 	// #645
  427e90:	tst	w9, w10
  427e94:	b.ne	427eb0 <_obstack_memory_used@@Base+0xfc20>  // b.any
  427e98:	mov	w10, #0x502                 	// #1282
  427e9c:	tst	w9, w10
  427ea0:	b.eq	427f08 <_obstack_memory_used@@Base+0xfc78>  // b.none
  427ea4:	mov	w0, w19
  427ea8:	bl	402680 <fcntl@plt>
  427eac:	b	427eec <_obstack_memory_used@@Base+0xfc5c>
  427eb0:	ldursw	x8, [x29, #-8]
  427eb4:	tbz	w8, #31, 427ed4 <_obstack_memory_used@@Base+0xfc44>
  427eb8:	add	w9, w8, #0x8
  427ebc:	cmn	w8, #0x8
  427ec0:	stur	w9, [x29, #-8]
  427ec4:	b.gt	427ed4 <_obstack_memory_used@@Base+0xfc44>
  427ec8:	ldur	x9, [x29, #-24]
  427ecc:	add	x8, x9, x8
  427ed0:	b	427ee0 <_obstack_memory_used@@Base+0xfc50>
  427ed4:	ldur	x8, [x29, #-32]
  427ed8:	add	x9, x8, #0x8
  427edc:	stur	x9, [x29, #-32]
  427ee0:	ldr	w2, [x8]
  427ee4:	mov	w0, w19
  427ee8:	bl	402680 <fcntl@plt>
  427eec:	mov	w20, w0
  427ef0:	mov	w0, w20
  427ef4:	ldp	x20, x19, [sp, #240]
  427ef8:	ldp	x22, x21, [sp, #224]
  427efc:	ldp	x29, x30, [sp, #208]
  427f00:	add	sp, sp, #0x100
  427f04:	ret
  427f08:	cmp	w8, #0x6
  427f0c:	b.ne	427f34 <_obstack_memory_used@@Base+0xfca4>  // b.any
  427f10:	ldursw	x8, [x29, #-8]
  427f14:	tbz	w8, #31, 427f74 <_obstack_memory_used@@Base+0xfce4>
  427f18:	add	w9, w8, #0x8
  427f1c:	cmn	w8, #0x8
  427f20:	stur	w9, [x29, #-8]
  427f24:	b.gt	427f74 <_obstack_memory_used@@Base+0xfce4>
  427f28:	ldur	x9, [x29, #-24]
  427f2c:	add	x8, x9, x8
  427f30:	b	427f80 <_obstack_memory_used@@Base+0xfcf0>
  427f34:	ldursw	x8, [x29, #-8]
  427f38:	tbz	w8, #31, 427fe0 <_obstack_memory_used@@Base+0xfd50>
  427f3c:	add	w9, w8, #0x8
  427f40:	cmn	w8, #0x8
  427f44:	stur	w9, [x29, #-8]
  427f48:	b.gt	427fe0 <_obstack_memory_used@@Base+0xfd50>
  427f4c:	ldur	x9, [x29, #-24]
  427f50:	add	x8, x9, x8
  427f54:	b	427fec <_obstack_memory_used@@Base+0xfd5c>
  427f58:	ldur	x8, [x29, #-32]
  427f5c:	add	x9, x8, #0x8
  427f60:	stur	x9, [x29, #-32]
  427f64:	ldr	w2, [x8]
  427f68:	mov	w0, w19
  427f6c:	mov	w1, wzr
  427f70:	b	427ee8 <_obstack_memory_used@@Base+0xfc58>
  427f74:	ldur	x8, [x29, #-32]
  427f78:	add	x9, x8, #0x8
  427f7c:	stur	x9, [x29, #-32]
  427f80:	adrp	x22, 440000 <__progname@@GLIBC_2.17+0x3ba8>
  427f84:	ldr	w9, [x22, #2224]
  427f88:	ldr	w21, [x8]
  427f8c:	tbnz	w9, #31, 428008 <_obstack_memory_used@@Base+0xfd78>
  427f90:	mov	w1, #0x406                 	// #1030
  427f94:	mov	w0, w19
  427f98:	mov	w2, w21
  427f9c:	bl	402680 <fcntl@plt>
  427fa0:	mov	w20, w0
  427fa4:	tbz	w0, #31, 427ffc <_obstack_memory_used@@Base+0xfd6c>
  427fa8:	bl	4027e0 <__errno_location@plt>
  427fac:	ldr	w8, [x0]
  427fb0:	cmp	w8, #0x16
  427fb4:	b.ne	427ffc <_obstack_memory_used@@Base+0xfd6c>  // b.any
  427fb8:	mov	w0, w19
  427fbc:	mov	w1, wzr
  427fc0:	mov	w2, w21
  427fc4:	bl	402680 <fcntl@plt>
  427fc8:	mov	w20, w0
  427fcc:	tbnz	w0, #31, 427ef0 <_obstack_memory_used@@Base+0xfc60>
  427fd0:	mov	w8, #0xffffffff            	// #-1
  427fd4:	str	w8, [x22, #2224]
  427fd8:	mov	w8, #0x1                   	// #1
  427fdc:	b	428028 <_obstack_memory_used@@Base+0xfd98>
  427fe0:	ldur	x8, [x29, #-32]
  427fe4:	add	x9, x8, #0x8
  427fe8:	stur	x9, [x29, #-32]
  427fec:	ldr	x2, [x8]
  427ff0:	mov	w0, w19
  427ff4:	bl	402680 <fcntl@plt>
  427ff8:	b	427eec <_obstack_memory_used@@Base+0xfc5c>
  427ffc:	mov	w8, #0x1                   	// #1
  428000:	str	w8, [x22, #2224]
  428004:	b	427ef0 <_obstack_memory_used@@Base+0xfc60>
  428008:	mov	w0, w19
  42800c:	mov	w1, wzr
  428010:	mov	w2, w21
  428014:	bl	402680 <fcntl@plt>
  428018:	ldr	w8, [x22, #2224]
  42801c:	mov	w20, w0
  428020:	cmn	w8, #0x1
  428024:	cset	w8, eq  // eq = none
  428028:	cbz	w8, 427ef0 <_obstack_memory_used@@Base+0xfc60>
  42802c:	tbnz	w20, #31, 427ef0 <_obstack_memory_used@@Base+0xfc60>
  428030:	mov	w1, #0x1                   	// #1
  428034:	mov	w0, w20
  428038:	bl	402680 <fcntl@plt>
  42803c:	tbnz	w0, #31, 428058 <_obstack_memory_used@@Base+0xfdc8>
  428040:	orr	w2, w0, #0x1
  428044:	mov	w1, #0x2                   	// #2
  428048:	mov	w0, w20
  42804c:	bl	402680 <fcntl@plt>
  428050:	cmn	w0, #0x1
  428054:	b.ne	427ef0 <_obstack_memory_used@@Base+0xfc60>  // b.any
  428058:	bl	4027e0 <__errno_location@plt>
  42805c:	ldr	w21, [x0]
  428060:	mov	x19, x0
  428064:	mov	w0, w20
  428068:	bl	4024f0 <close@plt>
  42806c:	str	w21, [x19]
  428070:	mov	w20, #0xffffffff            	// #-1
  428074:	b	427ef0 <_obstack_memory_used@@Base+0xfc60>
  428078:	stp	x29, x30, [sp, #-64]!
  42807c:	mov	x29, sp
  428080:	stp	x19, x20, [sp, #16]
  428084:	adrp	x20, 43b000 <_obstack_memory_used@@Base+0x22d70>
  428088:	add	x20, x20, #0xdf0
  42808c:	stp	x21, x22, [sp, #32]
  428090:	adrp	x21, 43b000 <_obstack_memory_used@@Base+0x22d70>
  428094:	add	x21, x21, #0xde8
  428098:	sub	x20, x20, x21
  42809c:	mov	w22, w0
  4280a0:	stp	x23, x24, [sp, #48]
  4280a4:	mov	x23, x1
  4280a8:	mov	x24, x2
  4280ac:	bl	4021c8 <mbrtowc@plt-0x38>
  4280b0:	cmp	xzr, x20, asr #3
  4280b4:	b.eq	4280e0 <_obstack_memory_used@@Base+0xfe50>  // b.none
  4280b8:	asr	x20, x20, #3
  4280bc:	mov	x19, #0x0                   	// #0
  4280c0:	ldr	x3, [x21, x19, lsl #3]
  4280c4:	mov	x2, x24
  4280c8:	add	x19, x19, #0x1
  4280cc:	mov	x1, x23
  4280d0:	mov	w0, w22
  4280d4:	blr	x3
  4280d8:	cmp	x20, x19
  4280dc:	b.ne	4280c0 <_obstack_memory_used@@Base+0xfe30>  // b.any
  4280e0:	ldp	x19, x20, [sp, #16]
  4280e4:	ldp	x21, x22, [sp, #32]
  4280e8:	ldp	x23, x24, [sp, #48]
  4280ec:	ldp	x29, x30, [sp], #64
  4280f0:	ret
  4280f4:	nop
  4280f8:	ret
  4280fc:	nop
  428100:	adrp	x2, 43c000 <_obstack_memory_used@@Base+0x23d70>
  428104:	mov	x1, #0x0                   	// #0
  428108:	ldr	x2, [x2, #840]
  42810c:	b	4022d0 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000428110 <.fini>:
  428110:	stp	x29, x30, [sp, #-16]!
  428114:	mov	x29, sp
  428118:	ldp	x29, x30, [sp], #16
  42811c:	ret
