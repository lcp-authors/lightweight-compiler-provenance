
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gfxmenu.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_gfxmenu_viewer_fini>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	nop
       c:	add	sp, sp, #0x10
      10:	ret

0000000000000014 <grub_gfxmenu_try>:
      14:	stp	x29, x30, [sp, #-160]!
      18:	mov	x29, sp
      1c:	str	w0, [sp, #28]
      20:	str	x1, [sp, #16]
      24:	str	w2, [sp, #24]
      28:	str	xzr, [sp, #144]
      2c:	str	xzr, [sp, #152]
      30:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
      34:	add	x0, x0, #0x0
      38:	ldr	x0, [x0]
      3c:	bl	0 <grub_env_get>
      40:	str	x0, [sp, #136]
      44:	ldr	x0, [sp, #136]
      48:	cmp	x0, #0x0
      4c:	b.ne	74 <grub_gfxmenu_try+0x60>  // b.any
      50:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
      54:	add	x0, x0, #0x0
      58:	ldr	x2, [x0]
      5c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
      60:	add	x0, x0, #0x0
      64:	ldr	x1, [x0]
      68:	mov	w0, #0x5                   	// #5
      6c:	bl	0 <grub_error>
      70:	b	360 <grub_gfxmenu_try+0x34c>
      74:	add	x0, sp, #0x20
      78:	bl	0 <grub_video_get_info>
      7c:	str	w0, [sp, #132]
      80:	ldr	w0, [sp, #132]
      84:	cmp	w0, #0x0
      88:	b.eq	94 <grub_gfxmenu_try+0x80>  // b.none
      8c:	ldr	w0, [sp, #132]
      90:	b	360 <grub_gfxmenu_try+0x34c>
      94:	mov	x0, #0x30                  	// #48
      98:	bl	0 <grub_zalloc>
      9c:	str	x0, [sp, #120]
      a0:	ldr	x0, [sp, #120]
      a4:	cmp	x0, #0x0
      a8:	b.ne	c0 <grub_gfxmenu_try+0xac>  // b.any
      ac:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
      b0:	add	x0, x0, #0x0
      b4:	ldr	x0, [x0]
      b8:	ldr	w0, [x0]
      bc:	b	360 <grub_gfxmenu_try+0x34c>
      c0:	ldr	x0, [sp, #136]
      c4:	ldrb	w0, [x0]
      c8:	cmp	w0, #0x2f
      cc:	b.eq	110 <grub_gfxmenu_try+0xfc>  // b.none
      d0:	ldr	x0, [sp, #136]
      d4:	ldrb	w0, [x0]
      d8:	cmp	w0, #0x28
      dc:	b.eq	110 <grub_gfxmenu_try+0xfc>  // b.none
      e0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
      e4:	add	x0, x0, #0x0
      e8:	ldr	x0, [x0]
      ec:	bl	0 <grub_env_get>
      f0:	str	x0, [sp, #112]
      f4:	ldr	x2, [sp, #136]
      f8:	ldr	x1, [sp, #112]
      fc:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     100:	add	x0, x0, #0x0
     104:	ldr	x0, [x0]
     108:	bl	0 <grub_xasprintf>
     10c:	str	x0, [sp, #152]
     110:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     114:	add	x0, x0, #0x0
     118:	ldr	x0, [x0]
     11c:	ldr	x0, [x0]
     120:	cmp	x0, #0x0
     124:	b.eq	1a0 <grub_gfxmenu_try+0x18c>  // b.none
     128:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     12c:	add	x0, x0, #0x0
     130:	ldr	x0, [x0]
     134:	ldr	x0, [x0]
     138:	ldr	x2, [x0, #136]
     13c:	ldr	x0, [sp, #152]
     140:	cmp	x0, #0x0
     144:	b.ne	14c <grub_gfxmenu_try+0x138>  // b.any
     148:	ldr	x0, [sp, #136]
     14c:	mov	x1, x0
     150:	mov	x0, x2
     154:	bl	0 <grub_strcmp>
     158:	cmp	w0, #0x0
     15c:	b.ne	1a0 <grub_gfxmenu_try+0x18c>  // b.any
     160:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     164:	add	x0, x0, #0x0
     168:	ldr	x0, [x0]
     16c:	ldr	x0, [x0]
     170:	ldr	w1, [x0, #8]
     174:	ldr	w0, [sp, #32]
     178:	cmp	w1, w0
     17c:	b.ne	1a0 <grub_gfxmenu_try+0x18c>  // b.any
     180:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     184:	add	x0, x0, #0x0
     188:	ldr	x0, [x0]
     18c:	ldr	x0, [x0]
     190:	ldr	w1, [x0, #12]
     194:	ldr	w0, [sp, #36]
     198:	cmp	w1, w0
     19c:	b.eq	1f0 <grub_gfxmenu_try+0x1dc>  // b.none
     1a0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     1a4:	add	x0, x0, #0x0
     1a8:	ldr	x0, [x0]
     1ac:	ldr	x0, [x0]
     1b0:	bl	a08 <grub_gfxmenu_view_destroy>
     1b4:	ldr	x0, [sp, #152]
     1b8:	cmp	x0, #0x0
     1bc:	b.ne	1c4 <grub_gfxmenu_try+0x1b0>  // b.any
     1c0:	ldr	x0, [sp, #136]
     1c4:	ldr	w1, [sp, #32]
     1c8:	mov	w3, w1
     1cc:	ldr	w1, [sp, #36]
     1d0:	mov	w2, w1
     1d4:	mov	w1, w3
     1d8:	bl	664 <grub_gfxmenu_view_new>
     1dc:	mov	x1, x0
     1e0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     1e4:	add	x0, x0, #0x0
     1e8:	ldr	x0, [x0]
     1ec:	str	x1, [x0]
     1f0:	ldr	x0, [sp, #152]
     1f4:	bl	0 <grub_free>
     1f8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     1fc:	add	x0, x0, #0x0
     200:	ldr	x0, [x0]
     204:	ldr	x0, [x0]
     208:	cmp	x0, #0x0
     20c:	b.ne	22c <grub_gfxmenu_try+0x218>  // b.any
     210:	ldr	x0, [sp, #120]
     214:	bl	0 <grub_free>
     218:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     21c:	add	x0, x0, #0x0
     220:	ldr	x0, [x0]
     224:	ldr	w0, [x0]
     228:	b	360 <grub_gfxmenu_try+0x34c>
     22c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     230:	add	x0, x0, #0x0
     234:	ldr	x0, [x0]
     238:	ldr	x0, [x0]
     23c:	str	x0, [sp, #144]
     240:	ldr	w0, [sp, #40]
     244:	and	w0, w0, #0x10
     248:	cmp	w0, #0x0
     24c:	b.eq	268 <grub_gfxmenu_try+0x254>  // b.none
     250:	ldr	w0, [sp, #40]
     254:	and	w0, w0, #0x80
     258:	cmp	w0, #0x0
     25c:	b.ne	268 <grub_gfxmenu_try+0x254>  // b.any
     260:	mov	w0, #0x1                   	// #1
     264:	b	26c <grub_gfxmenu_try+0x258>
     268:	mov	w0, #0x0                   	// #0
     26c:	ldr	x1, [sp, #144]
     270:	str	w0, [x1, #152]
     274:	ldr	x0, [sp, #144]
     278:	ldr	w1, [sp, #28]
     27c:	str	w1, [x0, #156]
     280:	ldr	x0, [sp, #144]
     284:	ldr	x1, [sp, #16]
     288:	str	x1, [x0, #176]
     28c:	ldr	x0, [sp, #144]
     290:	ldr	w1, [sp, #24]
     294:	str	w1, [x0, #184]
     298:	ldr	x0, [sp, #144]
     29c:	mov	w1, #0xffffffff            	// #-1
     2a0:	str	w1, [x0, #188]
     2a4:	ldr	w0, [sp, #32]
     2a8:	ldr	w1, [sp, #36]
     2ac:	mov	w3, w1
     2b0:	mov	w2, w0
     2b4:	mov	w1, #0x0                   	// #0
     2b8:	mov	w0, #0x0                   	// #0
     2bc:	bl	0 <grub_video_set_viewport>
     2c0:	ldr	x0, [sp, #144]
     2c4:	ldr	w0, [x0, #152]
     2c8:	cmp	w0, #0x0
     2cc:	b.eq	2f0 <grub_gfxmenu_try+0x2dc>  // b.none
     2d0:	bl	0 <grub_video_swap_buffers>
     2d4:	ldr	w0, [sp, #32]
     2d8:	ldr	w1, [sp, #36]
     2dc:	mov	w3, w1
     2e0:	mov	w2, w0
     2e4:	mov	w1, #0x0                   	// #0
     2e8:	mov	w0, #0x0                   	// #0
     2ec:	bl	0 <grub_video_set_viewport>
     2f0:	ldr	x0, [sp, #144]
     2f4:	bl	1298 <grub_gfxmenu_view_draw>
     2f8:	ldr	x0, [sp, #120]
     2fc:	ldr	x1, [sp, #144]
     300:	str	x1, [x0, #8]
     304:	ldr	x0, [sp, #120]
     308:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
     30c:	add	x1, x1, #0x0
     310:	ldr	x1, [x1]
     314:	str	x1, [x0, #16]
     318:	ldr	x0, [sp, #120]
     31c:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
     320:	add	x1, x1, #0x0
     324:	ldr	x1, [x1]
     328:	str	x1, [x0, #40]
     32c:	ldr	x0, [sp, #120]
     330:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
     334:	add	x1, x1, #0x0
     338:	ldr	x1, [x1]
     33c:	str	x1, [x0, #24]
     340:	ldr	x0, [sp, #120]
     344:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
     348:	add	x1, x1, #0x0
     34c:	ldr	x1, [x1]
     350:	str	x1, [x0, #32]
     354:	ldr	x0, [sp, #120]
     358:	bl	0 <grub_menu_register_viewer>
     35c:	mov	w0, #0x0                   	// #0
     360:	ldp	x29, x30, [sp], #160
     364:	ret
	...

00000000000003b8 <grub_mod_init>:
     3b8:	stp	x29, x30, [sp, #-48]!
     3bc:	mov	x29, sp
     3c0:	str	x0, [sp, #24]
     3c4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     3c8:	add	x0, x0, #0x0
     3cc:	ldr	x0, [x0]
     3d0:	ldr	x0, [x0]
     3d4:	str	x0, [sp, #40]
     3d8:	b	420 <grub_mod_init+0x68>
     3dc:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     3e0:	add	x0, x0, #0x0
     3e4:	ldr	x0, [x0]
     3e8:	ldr	x0, [x0]
     3ec:	cmp	x0, #0x0
     3f0:	b.eq	414 <grub_mod_init+0x5c>  // b.none
     3f4:	ldr	x0, [sp, #40]
     3f8:	ldr	x0, [x0, #112]
     3fc:	cmp	x0, #0x0
     400:	b.eq	414 <grub_mod_init+0x5c>  // b.none
     404:	ldr	x0, [sp, #40]
     408:	ldr	x0, [x0, #112]
     40c:	blr	x0
     410:	b	42c <grub_mod_init+0x74>
     414:	ldr	x0, [sp, #40]
     418:	ldr	x0, [x0]
     41c:	str	x0, [sp, #40]
     420:	ldr	x0, [sp, #40]
     424:	cmp	x0, #0x0
     428:	b.ne	3dc <grub_mod_init+0x24>  // b.any
     42c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     430:	add	x0, x0, #0x0
     434:	ldr	x0, [x0]
     438:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
     43c:	add	x1, x1, #0x0
     440:	ldr	x1, [x1]
     444:	str	x1, [x0]
     448:	nop
     44c:	ldp	x29, x30, [sp], #48
     450:	ret
     454:	nop
	...

0000000000000470 <grub_mod_fini>:
     470:	stp	x29, x30, [sp, #-16]!
     474:	mov	x29, sp
     478:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     47c:	add	x0, x0, #0x0
     480:	ldr	x0, [x0]
     484:	ldr	x0, [x0]
     488:	bl	a08 <grub_gfxmenu_view_destroy>
     48c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     490:	add	x0, x0, #0x0
     494:	ldr	x0, [x0]
     498:	str	xzr, [x0]
     49c:	nop
     4a0:	ldp	x29, x30, [sp], #16
     4a4:	ret
	...

00000000000004b8 <grub_video_rgba_color_rgb>:
     4b8:	sub	sp, sp, #0x20
     4bc:	strb	w0, [sp, #15]
     4c0:	strb	w1, [sp, #14]
     4c4:	strb	w2, [sp, #13]
     4c8:	ldrb	w0, [sp, #15]
     4cc:	strb	w0, [sp, #24]
     4d0:	ldrb	w0, [sp, #14]
     4d4:	strb	w0, [sp, #25]
     4d8:	ldrb	w0, [sp, #13]
     4dc:	strb	w0, [sp, #26]
     4e0:	mov	w0, #0xffffffff            	// #-1
     4e4:	strb	w0, [sp, #27]
     4e8:	ldr	w0, [sp, #24]
     4ec:	add	sp, sp, #0x20
     4f0:	ret

00000000000004f4 <grub_video_map_rgba_color>:
     4f4:	stp	x29, x30, [sp, #-32]!
     4f8:	mov	x29, sp
     4fc:	str	w0, [sp, #24]
     500:	ldrb	w0, [sp, #24]
     504:	ldrb	w1, [sp, #25]
     508:	ldrb	w2, [sp, #26]
     50c:	ldrb	w3, [sp, #27]
     510:	bl	0 <grub_video_map_rgba>
     514:	ldp	x29, x30, [sp], #32
     518:	ret

000000000000051c <grub_font_get_max_char_height>:
     51c:	sub	sp, sp, #0x10
     520:	str	x0, [sp, #8]
     524:	ldr	x0, [sp, #8]
     528:	ldrsh	w0, [x0, #30]
     52c:	add	sp, sp, #0x10
     530:	ret

0000000000000534 <grub_font_get_ascent>:
     534:	sub	sp, sp, #0x10
     538:	str	x0, [sp, #8]
     53c:	ldr	x0, [sp, #8]
     540:	ldrsh	w0, [x0, #32]
     544:	add	sp, sp, #0x10
     548:	ret

000000000000054c <grub_video_have_common_points>:
     54c:	sub	sp, sp, #0x10
     550:	str	x0, [sp, #8]
     554:	str	x1, [sp]
     558:	ldr	x0, [sp, #8]
     55c:	ldr	w1, [x0]
     560:	ldr	x0, [sp]
     564:	ldr	w0, [x0]
     568:	cmp	w1, w0
     56c:	b.hi	594 <grub_video_have_common_points+0x48>  // b.pmore
     570:	ldr	x0, [sp]
     574:	ldr	w1, [x0]
     578:	ldr	x0, [sp, #8]
     57c:	ldr	w2, [x0]
     580:	ldr	x0, [sp, #8]
     584:	ldr	w0, [x0, #8]
     588:	add	w0, w2, w0
     58c:	cmp	w1, w0
     590:	b.ls	5d8 <grub_video_have_common_points+0x8c>  // b.plast
     594:	ldr	x0, [sp]
     598:	ldr	w1, [x0]
     59c:	ldr	x0, [sp, #8]
     5a0:	ldr	w0, [x0]
     5a4:	cmp	w1, w0
     5a8:	b.hi	5d0 <grub_video_have_common_points+0x84>  // b.pmore
     5ac:	ldr	x0, [sp, #8]
     5b0:	ldr	w1, [x0]
     5b4:	ldr	x0, [sp]
     5b8:	ldr	w2, [x0]
     5bc:	ldr	x0, [sp]
     5c0:	ldr	w0, [x0, #8]
     5c4:	add	w0, w2, w0
     5c8:	cmp	w1, w0
     5cc:	b.ls	5d8 <grub_video_have_common_points+0x8c>  // b.plast
     5d0:	mov	w0, #0x0                   	// #0
     5d4:	b	65c <grub_video_have_common_points+0x110>
     5d8:	ldr	x0, [sp, #8]
     5dc:	ldr	w1, [x0, #4]
     5e0:	ldr	x0, [sp]
     5e4:	ldr	w0, [x0, #4]
     5e8:	cmp	w1, w0
     5ec:	b.hi	614 <grub_video_have_common_points+0xc8>  // b.pmore
     5f0:	ldr	x0, [sp]
     5f4:	ldr	w1, [x0, #4]
     5f8:	ldr	x0, [sp, #8]
     5fc:	ldr	w2, [x0, #4]
     600:	ldr	x0, [sp, #8]
     604:	ldr	w0, [x0, #12]
     608:	add	w0, w2, w0
     60c:	cmp	w1, w0
     610:	b.ls	658 <grub_video_have_common_points+0x10c>  // b.plast
     614:	ldr	x0, [sp]
     618:	ldr	w1, [x0, #4]
     61c:	ldr	x0, [sp, #8]
     620:	ldr	w0, [x0, #4]
     624:	cmp	w1, w0
     628:	b.hi	650 <grub_video_have_common_points+0x104>  // b.pmore
     62c:	ldr	x0, [sp, #8]
     630:	ldr	w1, [x0, #4]
     634:	ldr	x0, [sp]
     638:	ldr	w2, [x0, #4]
     63c:	ldr	x0, [sp]
     640:	ldr	w0, [x0, #12]
     644:	add	w0, w2, w0
     648:	cmp	w1, w0
     64c:	b.ls	658 <grub_video_have_common_points+0x10c>  // b.plast
     650:	mov	w0, #0x0                   	// #0
     654:	b	65c <grub_video_have_common_points+0x110>
     658:	mov	w0, #0x1                   	// #1
     65c:	add	sp, sp, #0x10
     660:	ret

0000000000000664 <grub_gfxmenu_view_new>:
     664:	stp	x29, x30, [sp, #-80]!
     668:	mov	x29, sp
     66c:	str	x0, [sp, #24]
     670:	str	w1, [sp, #20]
     674:	str	w2, [sp, #16]
     678:	mov	x0, #0xc0                  	// #192
     67c:	bl	0 <grub_malloc>
     680:	str	x0, [sp, #72]
     684:	ldr	x0, [sp, #72]
     688:	cmp	x0, #0x0
     68c:	b.ne	6d8 <grub_gfxmenu_view_new+0x74>  // b.any
     690:	mov	x0, #0x0                   	// #0
     694:	b	9d4 <grub_gfxmenu_view_new+0x370>
     698:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     69c:	add	x0, x0, #0x0
     6a0:	ldr	x0, [x0]
     6a4:	ldr	x0, [x0]
     6a8:	str	x0, [sp, #56]
     6ac:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     6b0:	add	x0, x0, #0x0
     6b4:	ldr	x0, [x0]
     6b8:	ldr	x0, [x0]
     6bc:	ldr	x1, [x0]
     6c0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     6c4:	add	x0, x0, #0x0
     6c8:	ldr	x0, [x0]
     6cc:	str	x1, [x0]
     6d0:	ldr	x0, [sp, #56]
     6d4:	bl	0 <grub_free>
     6d8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     6dc:	add	x0, x0, #0x0
     6e0:	ldr	x0, [x0]
     6e4:	ldr	x0, [x0]
     6e8:	cmp	x0, #0x0
     6ec:	b.ne	698 <grub_gfxmenu_view_new+0x34>  // b.any
     6f0:	ldr	x0, [sp, #72]
     6f4:	str	wzr, [x0]
     6f8:	ldr	x0, [sp, #72]
     6fc:	str	wzr, [x0, #4]
     700:	ldr	w1, [sp, #20]
     704:	ldr	x0, [sp, #72]
     708:	str	w1, [x0, #8]
     70c:	ldr	w1, [sp, #16]
     710:	ldr	x0, [sp, #72]
     714:	str	w1, [x0, #12]
     718:	ldr	x0, [sp, #72]
     71c:	mov	w1, #0x1                   	// #1
     720:	str	w1, [x0, #16]
     724:	ldr	x0, [sp, #72]
     728:	mov	w1, #0x3                   	// #3
     72c:	str	w1, [x0, #36]
     730:	ldr	x0, [sp, #72]
     734:	ldr	w1, [x0, #8]
     738:	mov	w0, w1
     73c:	lsl	w0, w0, #3
     740:	sub	w1, w0, w1
     744:	mov	w0, #0xcccd                	// #52429
     748:	movk	w0, #0xcccc, lsl #16
     74c:	umull	x0, w1, w0
     750:	lsr	x0, x0, #32
     754:	lsr	w1, w0, #3
     758:	ldr	x0, [sp, #72]
     75c:	str	w1, [x0, #28]
     760:	ldr	x0, [sp, #72]
     764:	ldr	w1, [x0, #12]
     768:	mov	w0, w1
     76c:	lsl	w0, w0, #3
     770:	sub	w1, w0, w1
     774:	mov	w0, #0xcccd                	// #52429
     778:	movk	w0, #0xcccc, lsl #16
     77c:	umull	x0, w1, w0
     780:	lsr	x0, x0, #32
     784:	lsr	w1, w0, #3
     788:	ldr	x0, [sp, #72]
     78c:	str	w1, [x0, #32]
     790:	ldr	x0, [sp, #72]
     794:	ldr	w1, [x0]
     798:	ldr	x0, [sp, #72]
     79c:	ldr	w2, [x0, #8]
     7a0:	ldr	x0, [sp, #72]
     7a4:	ldr	w0, [x0, #28]
     7a8:	sub	w0, w2, w0
     7ac:	lsr	w0, w0, #1
     7b0:	add	w1, w1, w0
     7b4:	ldr	x0, [sp, #72]
     7b8:	str	w1, [x0, #20]
     7bc:	ldr	x0, [sp, #72]
     7c0:	ldr	w1, [x0, #4]
     7c4:	ldr	x0, [sp, #72]
     7c8:	ldr	w2, [x0, #12]
     7cc:	ldr	x0, [sp, #72]
     7d0:	ldr	w0, [x0, #32]
     7d4:	sub	w0, w2, w0
     7d8:	lsr	w0, w0, #1
     7dc:	add	w1, w1, w0
     7e0:	ldr	x0, [sp, #72]
     7e4:	str	w1, [x0, #24]
     7e8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     7ec:	add	x0, x0, #0x0
     7f0:	ldr	x0, [x0]
     7f4:	bl	0 <grub_font_get>
     7f8:	str	x0, [sp, #64]
     7fc:	mov	w2, #0x0                   	// #0
     800:	mov	w1, #0x0                   	// #0
     804:	mov	w0, #0x0                   	// #0
     808:	bl	4b8 <grub_video_rgba_color_rgb>
     80c:	str	w0, [sp, #40]
     810:	mov	w2, #0xffffffff            	// #-1
     814:	mov	w1, #0xffffffff            	// #-1
     818:	mov	w0, #0xffffffff            	// #-1
     81c:	bl	4b8 <grub_video_rgba_color_rgb>
     820:	str	w0, [sp, #32]
     824:	ldr	x0, [sp, #72]
     828:	str	xzr, [x0, #144]
     82c:	ldr	x0, [sp, #72]
     830:	ldr	x1, [sp, #64]
     834:	str	x1, [x0, #40]
     838:	ldr	x0, [sp, #72]
     83c:	ldr	x1, [sp, #64]
     840:	str	x1, [x0, #48]
     844:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     848:	add	x0, x0, #0x0
     84c:	ldr	x0, [x0]
     850:	bl	0 <grub_strdup>
     854:	mov	x1, x0
     858:	ldr	x0, [sp, #72]
     85c:	str	x1, [x0, #56]
     860:	ldr	x0, [sp, #72]
     864:	ldr	w1, [sp, #40]
     868:	str	w1, [x0, #64]
     86c:	ldr	x0, [sp, #72]
     870:	ldr	w1, [sp, #32]
     874:	str	w1, [x0, #68]
     878:	ldr	x0, [sp, #72]
     87c:	ldr	w1, [sp, #40]
     880:	str	w1, [x0, #72]
     884:	ldr	x0, [sp, #72]
     888:	str	xzr, [x0, #80]
     88c:	ldr	x0, [sp, #72]
     890:	str	xzr, [x0, #88]
     894:	ldr	x0, [sp, #72]
     898:	str	wzr, [x0, #96]
     89c:	ldr	x0, [sp, #72]
     8a0:	mov	w1, #0x1                   	// #1
     8a4:	str	w1, [x0, #100]
     8a8:	ldr	x0, [sp, #72]
     8ac:	mov	w1, #0x1                   	// #1
     8b0:	str	w1, [x0, #104]
     8b4:	ldr	x0, [sp, #72]
     8b8:	ldr	w1, [sp, #32]
     8bc:	str	w1, [x0, #108]
     8c0:	mov	x1, #0x0                   	// #0
     8c4:	mov	x0, #0x0                   	// #0
     8c8:	bl	4df0 <grub_gfxmenu_create_box>
     8cc:	mov	x1, x0
     8d0:	ldr	x0, [sp, #72]
     8d4:	str	x1, [x0, #112]
     8d8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     8dc:	add	x0, x0, #0x0
     8e0:	ldr	x0, [x0]
     8e4:	str	x0, [sp, #48]
     8e8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     8ec:	add	x0, x0, #0x0
     8f0:	ldr	x0, [x0]
     8f4:	ldr	x1, [x0]
     8f8:	ldr	x0, [sp, #48]
     8fc:	blr	x1
     900:	bl	0 <grub_strdup>
     904:	mov	x1, x0
     908:	ldr	x0, [sp, #72]
     90c:	str	x1, [x0, #120]
     910:	ldr	x0, [sp, #72]
     914:	str	xzr, [x0, #128]
     918:	ldr	x0, [sp, #72]
     91c:	str	xzr, [x0, #136]
     920:	ldr	x0, [sp, #72]
     924:	ldr	w0, [x0, #8]
     928:	lsl	w1, w0, #2
     92c:	mov	w0, #0xcccd                	// #52429
     930:	movk	w0, #0xcccc, lsl #16
     934:	umull	x0, w1, w0
     938:	lsr	x0, x0, #32
     93c:	lsr	w1, w0, #2
     940:	ldr	x0, [sp, #72]
     944:	str	w1, [x0, #168]
     948:	ldr	x0, [sp, #72]
     94c:	mov	w1, #0x32                  	// #50
     950:	str	w1, [x0, #172]
     954:	ldr	x0, [sp, #72]
     958:	ldr	w1, [x0]
     95c:	ldr	x0, [sp, #72]
     960:	ldr	w2, [x0, #8]
     964:	ldr	x0, [sp, #72]
     968:	ldr	w0, [x0, #168]
     96c:	sub	w0, w2, w0
     970:	lsr	w0, w0, #1
     974:	add	w1, w1, w0
     978:	ldr	x0, [sp, #72]
     97c:	str	w1, [x0, #160]
     980:	ldr	x0, [sp, #72]
     984:	ldr	w1, [x0, #4]
     988:	ldr	x0, [sp, #72]
     98c:	ldr	w0, [x0, #12]
     990:	add	w1, w1, w0
     994:	ldr	x0, [sp, #72]
     998:	ldr	w0, [x0, #172]
     99c:	sub	w0, w1, w0
     9a0:	sub	w1, w0, #0x6e
     9a4:	ldr	x0, [sp, #72]
     9a8:	str	w1, [x0, #164]
     9ac:	ldr	x1, [sp, #24]
     9b0:	ldr	x0, [sp, #72]
     9b4:	bl	40b8 <grub_gfxmenu_view_load_theme>
     9b8:	cmp	w0, #0x0
     9bc:	b.eq	9d0 <grub_gfxmenu_view_new+0x36c>  // b.none
     9c0:	ldr	x0, [sp, #72]
     9c4:	bl	a08 <grub_gfxmenu_view_destroy>
     9c8:	mov	x0, #0x0                   	// #0
     9cc:	b	9d4 <grub_gfxmenu_view_new+0x370>
     9d0:	ldr	x0, [sp, #72]
     9d4:	ldp	x29, x30, [sp], #80
     9d8:	ret
     9dc:	nop
	...

0000000000000a08 <grub_gfxmenu_view_destroy>:
     a08:	stp	x29, x30, [sp, #-48]!
     a0c:	mov	x29, sp
     a10:	str	x0, [sp, #24]
     a14:	ldr	x0, [sp, #24]
     a18:	cmp	x0, #0x0
     a1c:	b.eq	b24 <grub_gfxmenu_view_destroy+0x11c>  // b.none
     a20:	b	a64 <grub_gfxmenu_view_destroy+0x5c>
     a24:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     a28:	add	x0, x0, #0x0
     a2c:	ldr	x0, [x0]
     a30:	ldr	x0, [x0]
     a34:	str	x0, [sp, #40]
     a38:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     a3c:	add	x0, x0, #0x0
     a40:	ldr	x0, [x0]
     a44:	ldr	x0, [x0]
     a48:	ldr	x1, [x0]
     a4c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     a50:	add	x0, x0, #0x0
     a54:	ldr	x0, [x0]
     a58:	str	x1, [x0]
     a5c:	ldr	x0, [sp, #40]
     a60:	bl	0 <grub_free>
     a64:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     a68:	add	x0, x0, #0x0
     a6c:	ldr	x0, [x0]
     a70:	ldr	x0, [x0]
     a74:	cmp	x0, #0x0
     a78:	b.ne	a24 <grub_gfxmenu_view_destroy+0x1c>  // b.any
     a7c:	ldr	x0, [sp, #24]
     a80:	ldr	x0, [x0, #80]
     a84:	bl	0 <grub_video_bitmap_destroy>
     a88:	ldr	x0, [sp, #24]
     a8c:	ldr	x0, [x0, #88]
     a90:	bl	0 <grub_video_bitmap_destroy>
     a94:	ldr	x0, [sp, #24]
     a98:	ldr	x0, [x0, #112]
     a9c:	cmp	x0, #0x0
     aa0:	b.eq	abc <grub_gfxmenu_view_destroy+0xb4>  // b.none
     aa4:	ldr	x0, [sp, #24]
     aa8:	ldr	x0, [x0, #112]
     aac:	ldr	x1, [x0, #80]
     ab0:	ldr	x0, [sp, #24]
     ab4:	ldr	x0, [x0, #112]
     ab8:	blr	x1
     abc:	ldr	x0, [sp, #24]
     ac0:	ldr	x0, [x0, #56]
     ac4:	bl	0 <grub_free>
     ac8:	ldr	x0, [sp, #24]
     acc:	ldr	x0, [x0, #120]
     ad0:	bl	0 <grub_free>
     ad4:	ldr	x0, [sp, #24]
     ad8:	ldr	x0, [x0, #128]
     adc:	bl	0 <grub_free>
     ae0:	ldr	x0, [sp, #24]
     ae4:	ldr	x0, [x0, #136]
     ae8:	bl	0 <grub_free>
     aec:	ldr	x0, [sp, #24]
     af0:	ldr	x0, [x0, #144]
     af4:	cmp	x0, #0x0
     af8:	b.eq	b18 <grub_gfxmenu_view_destroy+0x110>  // b.none
     afc:	ldr	x0, [sp, #24]
     b00:	ldr	x0, [x0, #144]
     b04:	ldr	x0, [x0]
     b08:	ldr	x1, [x0]
     b0c:	ldr	x0, [sp, #24]
     b10:	ldr	x0, [x0, #144]
     b14:	blr	x1
     b18:	ldr	x0, [sp, #24]
     b1c:	bl	0 <grub_free>
     b20:	b	b28 <grub_gfxmenu_view_destroy+0x120>
     b24:	nop
     b28:	ldp	x29, x30, [sp], #48
     b2c:	ret
	...

0000000000000b38 <redraw_background>:
     b38:	stp	x29, x30, [sp, #-48]!
     b3c:	mov	x29, sp
     b40:	str	x0, [sp, #24]
     b44:	str	x1, [sp, #16]
     b48:	ldr	x0, [sp, #24]
     b4c:	ldr	x0, [x0, #88]
     b50:	cmp	x0, #0x0
     b54:	b.eq	bd4 <redraw_background+0x9c>  // b.none
     b58:	ldr	x0, [sp, #24]
     b5c:	ldr	x0, [x0, #88]
     b60:	str	x0, [sp, #40]
     b64:	ldr	x0, [sp, #16]
     b68:	ldr	w0, [x0]
     b6c:	mov	w2, w0
     b70:	ldr	x0, [sp, #16]
     b74:	ldr	w0, [x0, #4]
     b78:	mov	w3, w0
     b7c:	ldr	x0, [sp, #16]
     b80:	ldr	w1, [x0]
     b84:	ldr	x0, [sp, #24]
     b88:	ldr	w0, [x0]
     b8c:	sub	w0, w1, w0
     b90:	mov	w4, w0
     b94:	ldr	x0, [sp, #16]
     b98:	ldr	w1, [x0, #4]
     b9c:	ldr	x0, [sp, #24]
     ba0:	ldr	w0, [x0, #4]
     ba4:	sub	w0, w1, w0
     ba8:	mov	w5, w0
     bac:	ldr	x0, [sp, #16]
     bb0:	ldr	w1, [x0, #8]
     bb4:	ldr	x0, [sp, #16]
     bb8:	ldr	w0, [x0, #12]
     bbc:	mov	w7, w0
     bc0:	mov	w6, w1
     bc4:	mov	w1, #0x0                   	// #0
     bc8:	ldr	x0, [sp, #40]
     bcc:	bl	0 <grub_video_blit_bitmap>
     bd0:	b	c20 <redraw_background+0xe8>
     bd4:	ldr	x0, [sp, #24]
     bd8:	ldr	w0, [x0, #108]
     bdc:	bl	4f4 <grub_video_map_rgba_color>
     be0:	mov	w5, w0
     be4:	ldr	x0, [sp, #16]
     be8:	ldr	w0, [x0]
     bec:	mov	w6, w0
     bf0:	ldr	x0, [sp, #16]
     bf4:	ldr	w0, [x0, #4]
     bf8:	mov	w2, w0
     bfc:	ldr	x0, [sp, #16]
     c00:	ldr	w1, [x0, #8]
     c04:	ldr	x0, [sp, #16]
     c08:	ldr	w0, [x0, #12]
     c0c:	mov	w4, w0
     c10:	mov	w3, w1
     c14:	mov	w1, w6
     c18:	mov	w0, w5
     c1c:	bl	0 <grub_video_fill_rect>
     c20:	nop
     c24:	ldp	x29, x30, [sp], #48
     c28:	ret

0000000000000c2c <draw_title>:
     c2c:	stp	x29, x30, [sp, #-64]!
     c30:	mov	x29, sp
     c34:	stp	x19, x20, [sp, #16]
     c38:	str	x0, [sp, #40]
     c3c:	ldr	x0, [sp, #40]
     c40:	ldr	x0, [x0, #120]
     c44:	cmp	x0, #0x0
     c48:	b.eq	cd0 <draw_title+0xa4>  // b.none
     c4c:	ldr	x0, [sp, #40]
     c50:	ldr	x2, [x0, #40]
     c54:	ldr	x0, [sp, #40]
     c58:	ldr	x0, [x0, #120]
     c5c:	mov	x1, x0
     c60:	mov	x0, x2
     c64:	bl	1dd8 <grub_font_get_string_width>
     c68:	str	w0, [sp, #60]
     c6c:	ldr	x0, [sp, #40]
     c70:	ldr	w1, [x0, #8]
     c74:	ldr	w0, [sp, #60]
     c78:	sub	w0, w1, w0
     c7c:	lsr	w0, w0, #1
     c80:	str	w0, [sp, #56]
     c84:	ldr	x0, [sp, #40]
     c88:	ldr	x0, [x0, #40]
     c8c:	bl	534 <grub_font_get_ascent>
     c90:	add	w0, w0, #0x28
     c94:	str	w0, [sp, #52]
     c98:	ldr	x0, [sp, #40]
     c9c:	ldr	x19, [x0, #120]
     ca0:	ldr	x0, [sp, #40]
     ca4:	ldr	x20, [x0, #40]
     ca8:	ldr	x0, [sp, #40]
     cac:	ldr	w0, [x0, #64]
     cb0:	bl	4f4 <grub_video_map_rgba_color>
     cb4:	ldr	w4, [sp, #52]
     cb8:	ldr	w3, [sp, #56]
     cbc:	mov	w2, w0
     cc0:	mov	x1, x20
     cc4:	mov	x0, x19
     cc8:	bl	1c14 <grub_font_draw_string>
     ccc:	b	cd4 <draw_title+0xa8>
     cd0:	nop
     cd4:	ldp	x19, x20, [sp, #16]
     cd8:	ldp	x29, x30, [sp], #64
     cdc:	ret

0000000000000ce0 <update_timeouts>:
     ce0:	stp	x29, x30, [sp, #-48]!
     ce4:	mov	x29, sp
     ce8:	str	w0, [sp, #28]
     cec:	str	w1, [sp, #24]
     cf0:	str	w2, [sp, #20]
     cf4:	str	w3, [sp, #16]
     cf8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     cfc:	add	x0, x0, #0x0
     d00:	ldr	x0, [x0]
     d04:	ldr	x0, [x0]
     d08:	str	x0, [sp, #40]
     d0c:	b	d40 <update_timeouts+0x60>
     d10:	ldr	x0, [sp, #40]
     d14:	ldr	x5, [x0, #8]
     d18:	ldr	x0, [sp, #40]
     d1c:	ldr	x0, [x0, #16]
     d20:	ldr	w4, [sp, #16]
     d24:	ldr	w3, [sp, #20]
     d28:	ldr	w2, [sp, #24]
     d2c:	ldr	w1, [sp, #28]
     d30:	blr	x5
     d34:	ldr	x0, [sp, #40]
     d38:	ldr	x0, [x0]
     d3c:	str	x0, [sp, #40]
     d40:	ldr	x0, [sp, #40]
     d44:	cmp	x0, #0x0
     d48:	b.ne	d10 <update_timeouts+0x30>  // b.any
     d4c:	nop
     d50:	nop
     d54:	ldp	x29, x30, [sp], #48
     d58:	ret
     d5c:	nop
	...

0000000000000d68 <redraw_timeouts>:
     d68:	stp	x29, x30, [sp, #-64]!
     d6c:	mov	x29, sp
     d70:	str	x0, [sp, #24]
     d74:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     d78:	add	x0, x0, #0x0
     d7c:	ldr	x0, [x0]
     d80:	ldr	x0, [x0]
     d84:	str	x0, [sp, #56]
     d88:	b	dd0 <redraw_timeouts+0x68>
     d8c:	ldr	x0, [sp, #56]
     d90:	ldr	x0, [x0, #16]
     d94:	ldr	x0, [x0]
     d98:	ldr	x2, [x0, #56]
     d9c:	ldr	x0, [sp, #56]
     da0:	ldr	x0, [x0, #16]
     da4:	add	x1, sp, #0x28
     da8:	blr	x2
     dac:	mov	w0, #0x1                   	// #1
     db0:	bl	0 <grub_video_set_area_status>
     db4:	add	x0, sp, #0x28
     db8:	mov	x1, x0
     dbc:	ldr	x0, [sp, #24]
     dc0:	bl	11a0 <grub_gfxmenu_view_redraw>
     dc4:	ldr	x0, [sp, #56]
     dc8:	ldr	x0, [x0]
     dcc:	str	x0, [sp, #56]
     dd0:	ldr	x0, [sp, #56]
     dd4:	cmp	x0, #0x0
     dd8:	b.ne	d8c <redraw_timeouts+0x24>  // b.any
     ddc:	nop
     de0:	nop
     de4:	ldp	x29, x30, [sp], #64
     de8:	ret
     dec:	nop
	...

0000000000000df8 <grub_gfxmenu_print_timeout>:
     df8:	stp	x29, x30, [sp, #-48]!
     dfc:	mov	x29, sp
     e00:	str	w0, [sp, #28]
     e04:	str	x1, [sp, #16]
     e08:	ldr	x0, [sp, #16]
     e0c:	str	x0, [sp, #40]
     e10:	ldr	x0, [sp, #40]
     e14:	ldr	w0, [x0, #188]
     e18:	cmn	w0, #0x1
     e1c:	b.ne	e2c <grub_gfxmenu_print_timeout+0x34>  // b.any
     e20:	ldr	x0, [sp, #40]
     e24:	ldr	w1, [sp, #28]
     e28:	str	w1, [x0, #188]
     e2c:	ldr	x0, [sp, #40]
     e30:	ldr	w0, [x0, #188]
     e34:	neg	w1, w0
     e38:	ldr	w0, [sp, #28]
     e3c:	neg	w0, w0
     e40:	mov	w3, #0x0                   	// #0
     e44:	mov	w2, w0
     e48:	mov	w0, #0x1                   	// #1
     e4c:	bl	ce0 <update_timeouts>
     e50:	ldr	x0, [sp, #40]
     e54:	bl	d68 <redraw_timeouts>
     e58:	bl	0 <grub_video_swap_buffers>
     e5c:	ldr	x0, [sp, #40]
     e60:	ldr	w0, [x0, #152]
     e64:	cmp	w0, #0x0
     e68:	b.eq	e74 <grub_gfxmenu_print_timeout+0x7c>  // b.none
     e6c:	ldr	x0, [sp, #40]
     e70:	bl	d68 <redraw_timeouts>
     e74:	nop
     e78:	ldp	x29, x30, [sp], #48
     e7c:	ret

0000000000000e80 <grub_gfxmenu_clear_timeout>:
     e80:	stp	x29, x30, [sp, #-48]!
     e84:	mov	x29, sp
     e88:	str	x0, [sp, #24]
     e8c:	ldr	x0, [sp, #24]
     e90:	str	x0, [sp, #40]
     e94:	mov	w3, #0x0                   	// #0
     e98:	mov	w2, #0x0                   	// #0
     e9c:	mov	w1, #0x1                   	// #1
     ea0:	mov	w0, #0x0                   	// #0
     ea4:	bl	ce0 <update_timeouts>
     ea8:	ldr	x0, [sp, #40]
     eac:	bl	d68 <redraw_timeouts>
     eb0:	bl	0 <grub_video_swap_buffers>
     eb4:	ldr	x0, [sp, #40]
     eb8:	ldr	w0, [x0, #152]
     ebc:	cmp	w0, #0x0
     ec0:	b.eq	ecc <grub_gfxmenu_clear_timeout+0x4c>  // b.none
     ec4:	ldr	x0, [sp, #40]
     ec8:	bl	d68 <redraw_timeouts>
     ecc:	nop
     ed0:	ldp	x29, x30, [sp], #48
     ed4:	ret

0000000000000ed8 <update_menu_visit>:
     ed8:	stp	x29, x30, [sp, #-48]!
     edc:	mov	x29, sp
     ee0:	str	x0, [sp, #24]
     ee4:	str	x1, [sp, #16]
     ee8:	ldr	x0, [sp, #16]
     eec:	str	x0, [sp, #40]
     ef0:	ldr	x0, [sp, #24]
     ef4:	ldr	x0, [x0]
     ef8:	ldr	x2, [x0, #16]
     efc:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     f00:	add	x0, x0, #0x0
     f04:	ldr	x1, [x0]
     f08:	ldr	x0, [sp, #24]
     f0c:	blr	x2
     f10:	cmp	w0, #0x0
     f14:	b.eq	f38 <update_menu_visit+0x60>  // b.none
     f18:	ldr	x0, [sp, #24]
     f1c:	str	x0, [sp, #32]
     f20:	ldr	x0, [sp, #32]
     f24:	ldr	x0, [x0, #40]
     f28:	ldr	x2, [x0]
     f2c:	ldr	x1, [sp, #40]
     f30:	ldr	x0, [sp, #32]
     f34:	blr	x2
     f38:	nop
     f3c:	ldp	x29, x30, [sp], #48
     f40:	ret
     f44:	nop
	...

0000000000000f50 <update_menu_components>:
     f50:	stp	x29, x30, [sp, #-32]!
     f54:	mov	x29, sp
     f58:	str	x0, [sp, #24]
     f5c:	ldr	x0, [sp, #24]
     f60:	ldr	x3, [x0, #144]
     f64:	ldr	x2, [sp, #24]
     f68:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     f6c:	add	x0, x0, #0x0
     f70:	ldr	x1, [x0]
     f74:	mov	x0, x3
     f78:	bl	d458 <grub_gui_iterate_recursively>
     f7c:	nop
     f80:	ldp	x29, x30, [sp], #32
     f84:	ret
	...

0000000000000f90 <refresh_menu_visit>:
     f90:	stp	x29, x30, [sp, #-48]!
     f94:	mov	x29, sp
     f98:	str	x0, [sp, #24]
     f9c:	str	x1, [sp, #16]
     fa0:	ldr	x0, [sp, #16]
     fa4:	str	x0, [sp, #40]
     fa8:	ldr	x0, [sp, #24]
     fac:	ldr	x0, [x0]
     fb0:	ldr	x2, [x0, #16]
     fb4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
     fb8:	add	x0, x0, #0x0
     fbc:	ldr	x1, [x0]
     fc0:	ldr	x0, [sp, #24]
     fc4:	blr	x2
     fc8:	cmp	w0, #0x0
     fcc:	b.eq	ff0 <refresh_menu_visit+0x60>  // b.none
     fd0:	ldr	x0, [sp, #24]
     fd4:	str	x0, [sp, #32]
     fd8:	ldr	x0, [sp, #32]
     fdc:	ldr	x0, [x0, #40]
     fe0:	ldr	x2, [x0, #8]
     fe4:	ldr	x1, [sp, #40]
     fe8:	ldr	x0, [sp, #32]
     fec:	blr	x2
     ff0:	nop
     ff4:	ldp	x29, x30, [sp], #48
     ff8:	ret
     ffc:	nop
	...

0000000000001008 <refresh_menu_components>:
    1008:	stp	x29, x30, [sp, #-32]!
    100c:	mov	x29, sp
    1010:	str	x0, [sp, #24]
    1014:	ldr	x0, [sp, #24]
    1018:	ldr	x3, [x0, #144]
    101c:	ldr	x2, [sp, #24]
    1020:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    1024:	add	x0, x0, #0x0
    1028:	ldr	x1, [x0]
    102c:	mov	x0, x3
    1030:	bl	d458 <grub_gui_iterate_recursively>
    1034:	nop
    1038:	ldp	x29, x30, [sp], #32
    103c:	ret
	...

0000000000001048 <draw_message>:
    1048:	stp	x29, x30, [sp, #-96]!
    104c:	mov	x29, sp
    1050:	stp	x19, x20, [sp, #16]
    1054:	str	x0, [sp, #40]
    1058:	ldr	x0, [sp, #40]
    105c:	ldr	x0, [x0, #128]
    1060:	str	x0, [sp, #88]
    1064:	ldr	x0, [sp, #40]
    1068:	ldp	x0, x1, [x0, #160]
    106c:	stp	x0, x1, [sp, #48]
    1070:	ldr	x0, [sp, #88]
    1074:	cmp	x0, #0x0
    1078:	b.eq	1190 <draw_message+0x148>  // b.none
    107c:	ldr	x0, [sp, #40]
    1080:	ldr	x0, [x0, #48]
    1084:	str	x0, [sp, #80]
    1088:	ldr	x0, [sp, #40]
    108c:	ldr	w0, [x0, #68]
    1090:	bl	4f4 <grub_video_map_rgba_color>
    1094:	str	w0, [sp, #76]
    1098:	ldr	w0, [sp, #48]
    109c:	sub	w0, w0, #0x1
    10a0:	mov	w5, w0
    10a4:	ldr	w0, [sp, #52]
    10a8:	sub	w0, w0, #0x1
    10ac:	mov	w2, w0
    10b0:	ldr	w0, [sp, #56]
    10b4:	add	w1, w0, #0x2
    10b8:	ldr	w0, [sp, #60]
    10bc:	add	w0, w0, #0x2
    10c0:	mov	w4, w0
    10c4:	mov	w3, w1
    10c8:	mov	w1, w5
    10cc:	ldr	w0, [sp, #76]
    10d0:	bl	0 <grub_video_fill_rect>
    10d4:	ldr	x0, [sp, #40]
    10d8:	ldr	w0, [x0, #72]
    10dc:	bl	4f4 <grub_video_map_rgba_color>
    10e0:	mov	w5, w0
    10e4:	ldr	w0, [sp, #48]
    10e8:	mov	w6, w0
    10ec:	ldr	w0, [sp, #52]
    10f0:	mov	w2, w0
    10f4:	ldr	w0, [sp, #56]
    10f8:	ldr	w1, [sp, #60]
    10fc:	mov	w4, w1
    1100:	mov	w3, w0
    1104:	mov	w1, w6
    1108:	mov	w0, w5
    110c:	bl	0 <grub_video_fill_rect>
    1110:	ldr	x1, [sp, #88]
    1114:	ldr	x0, [sp, #80]
    1118:	bl	1dd8 <grub_font_get_string_width>
    111c:	str	w0, [sp, #72]
    1120:	ldr	w1, [sp, #48]
    1124:	ldr	w2, [sp, #56]
    1128:	ldr	w0, [sp, #72]
    112c:	sub	w0, w2, w0
    1130:	lsr	w0, w0, #1
    1134:	add	w0, w1, w0
    1138:	str	w0, [sp, #68]
    113c:	ldr	w19, [sp, #52]
    1140:	ldr	w20, [sp, #60]
    1144:	ldr	x0, [sp, #80]
    1148:	bl	0 <grub_font_get_descent>
    114c:	sub	w0, w20, w0
    1150:	lsr	w0, w0, #1
    1154:	add	w19, w19, w0
    1158:	ldr	x0, [sp, #80]
    115c:	bl	534 <grub_font_get_ascent>
    1160:	lsr	w1, w0, #31
    1164:	add	w0, w1, w0
    1168:	asr	w0, w0, #1
    116c:	add	w0, w19, w0
    1170:	str	w0, [sp, #64]
    1174:	ldr	w4, [sp, #64]
    1178:	ldr	w3, [sp, #68]
    117c:	ldr	w2, [sp, #76]
    1180:	ldr	x1, [sp, #80]
    1184:	ldr	x0, [sp, #88]
    1188:	bl	1c14 <grub_font_draw_string>
    118c:	b	1194 <draw_message+0x14c>
    1190:	nop
    1194:	ldp	x19, x20, [sp, #16]
    1198:	ldp	x29, x30, [sp], #96
    119c:	ret

00000000000011a0 <grub_gfxmenu_view_redraw>:
    11a0:	stp	x29, x30, [sp, #-48]!
    11a4:	mov	x29, sp
    11a8:	str	x0, [sp, #24]
    11ac:	str	x1, [sp, #16]
    11b0:	ldr	x0, [sp, #24]
    11b4:	add	x0, x0, #0x14
    11b8:	ldr	x1, [sp, #16]
    11bc:	bl	54c <grub_video_have_common_points>
    11c0:	cmp	w0, #0x0
    11c4:	b.eq	11cc <grub_gfxmenu_view_redraw+0x2c>  // b.none
    11c8:	bl	0 <grub_gfxterm_schedule_repaint>
    11cc:	mov	x0, #0x0                   	// #0
    11d0:	bl	0 <grub_video_set_active_render_target>
    11d4:	add	x0, sp, #0x2c
    11d8:	bl	0 <grub_video_get_area_status>
    11dc:	ldr	w0, [sp, #44]
    11e0:	cmp	w0, #0x1
    11e4:	b.ne	1214 <grub_gfxmenu_view_redraw+0x74>  // b.any
    11e8:	ldr	x0, [sp, #16]
    11ec:	ldr	w4, [x0]
    11f0:	ldr	x0, [sp, #16]
    11f4:	ldr	w1, [x0, #4]
    11f8:	ldr	x0, [sp, #16]
    11fc:	ldr	w2, [x0, #8]
    1200:	ldr	x0, [sp, #16]
    1204:	ldr	w0, [x0, #12]
    1208:	mov	w3, w0
    120c:	mov	w0, w4
    1210:	bl	0 <grub_video_set_region>
    1214:	ldr	x1, [sp, #16]
    1218:	ldr	x0, [sp, #24]
    121c:	bl	b38 <redraw_background>
    1220:	ldr	x0, [sp, #24]
    1224:	ldr	x0, [x0, #144]
    1228:	cmp	x0, #0x0
    122c:	b.eq	1250 <grub_gfxmenu_view_redraw+0xb0>  // b.none
    1230:	ldr	x0, [sp, #24]
    1234:	ldr	x0, [x0, #144]
    1238:	ldr	x0, [x0]
    123c:	ldr	x2, [x0, #24]
    1240:	ldr	x0, [sp, #24]
    1244:	ldr	x0, [x0, #144]
    1248:	ldr	x1, [sp, #16]
    124c:	blr	x2
    1250:	ldr	x0, [sp, #24]
    1254:	bl	c2c <draw_title>
    1258:	ldr	x0, [sp, #24]
    125c:	add	x0, x0, #0xa0
    1260:	ldr	x1, [sp, #16]
    1264:	bl	54c <grub_video_have_common_points>
    1268:	cmp	w0, #0x0
    126c:	b.eq	1278 <grub_gfxmenu_view_redraw+0xd8>  // b.none
    1270:	ldr	x0, [sp, #24]
    1274:	bl	1048 <draw_message>
    1278:	ldr	w0, [sp, #44]
    127c:	cmp	w0, #0x1
    1280:	b.ne	128c <grub_gfxmenu_view_redraw+0xec>  // b.any
    1284:	mov	w0, #0x1                   	// #1
    1288:	bl	0 <grub_video_set_area_status>
    128c:	nop
    1290:	ldp	x29, x30, [sp], #48
    1294:	ret

0000000000001298 <grub_gfxmenu_view_draw>:
    1298:	stp	x29, x30, [sp, #-32]!
    129c:	mov	x29, sp
    12a0:	str	x0, [sp, #24]
    12a4:	ldr	x0, [sp, #24]
    12a8:	bl	19e0 <init_terminal>
    12ac:	ldr	x0, [sp, #24]
    12b0:	bl	1ad8 <init_background>
    12b4:	mov	w2, #0x0                   	// #0
    12b8:	mov	w1, #0x0                   	// #0
    12bc:	mov	w0, #0x0                   	// #0
    12c0:	bl	0 <grub_video_map_rgb>
    12c4:	mov	w5, w0
    12c8:	ldr	x0, [sp, #24]
    12cc:	ldr	w0, [x0]
    12d0:	mov	w6, w0
    12d4:	ldr	x0, [sp, #24]
    12d8:	ldr	w0, [x0, #4]
    12dc:	mov	w2, w0
    12e0:	ldr	x0, [sp, #24]
    12e4:	ldr	w1, [x0, #8]
    12e8:	ldr	x0, [sp, #24]
    12ec:	ldr	w0, [x0, #12]
    12f0:	mov	w4, w0
    12f4:	mov	w3, w1
    12f8:	mov	w1, w6
    12fc:	mov	w0, w5
    1300:	bl	0 <grub_video_fill_rect>
    1304:	bl	0 <grub_video_swap_buffers>
    1308:	ldr	x0, [sp, #24]
    130c:	ldr	w0, [x0, #152]
    1310:	cmp	w0, #0x0
    1314:	b.eq	1368 <grub_gfxmenu_view_draw+0xd0>  // b.none
    1318:	mov	w2, #0x0                   	// #0
    131c:	mov	w1, #0x0                   	// #0
    1320:	mov	w0, #0x0                   	// #0
    1324:	bl	0 <grub_video_map_rgb>
    1328:	mov	w5, w0
    132c:	ldr	x0, [sp, #24]
    1330:	ldr	w0, [x0]
    1334:	mov	w6, w0
    1338:	ldr	x0, [sp, #24]
    133c:	ldr	w0, [x0, #4]
    1340:	mov	w2, w0
    1344:	ldr	x0, [sp, #24]
    1348:	ldr	w1, [x0, #8]
    134c:	ldr	x0, [sp, #24]
    1350:	ldr	w0, [x0, #12]
    1354:	mov	w4, w0
    1358:	mov	w3, w1
    135c:	mov	w1, w6
    1360:	mov	w0, w5
    1364:	bl	0 <grub_video_fill_rect>
    1368:	ldr	x0, [sp, #24]
    136c:	bl	1008 <refresh_menu_components>
    1370:	ldr	x0, [sp, #24]
    1374:	bl	f50 <update_menu_components>
    1378:	mov	w0, #0x0                   	// #0
    137c:	bl	0 <grub_video_set_area_status>
    1380:	ldr	x0, [sp, #24]
    1384:	mov	x1, x0
    1388:	ldr	x0, [sp, #24]
    138c:	bl	11a0 <grub_gfxmenu_view_redraw>
    1390:	bl	0 <grub_video_swap_buffers>
    1394:	ldr	x0, [sp, #24]
    1398:	ldr	w0, [x0, #152]
    139c:	cmp	w0, #0x0
    13a0:	b.eq	13bc <grub_gfxmenu_view_draw+0x124>  // b.none
    13a4:	mov	w0, #0x0                   	// #0
    13a8:	bl	0 <grub_video_set_area_status>
    13ac:	ldr	x0, [sp, #24]
    13b0:	mov	x1, x0
    13b4:	ldr	x0, [sp, #24]
    13b8:	bl	11a0 <grub_gfxmenu_view_redraw>
    13bc:	nop
    13c0:	ldp	x29, x30, [sp], #32
    13c4:	ret

00000000000013c8 <redraw_menu_visit>:
    13c8:	stp	x29, x30, [sp, #-64]!
    13cc:	mov	x29, sp
    13d0:	str	x0, [sp, #24]
    13d4:	str	x1, [sp, #16]
    13d8:	ldr	x0, [sp, #16]
    13dc:	str	x0, [sp, #56]
    13e0:	ldr	x0, [sp, #24]
    13e4:	ldr	x0, [x0]
    13e8:	ldr	x2, [x0, #16]
    13ec:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    13f0:	add	x0, x0, #0x0
    13f4:	ldr	x1, [x0]
    13f8:	ldr	x0, [sp, #24]
    13fc:	blr	x2
    1400:	cmp	w0, #0x0
    1404:	b.eq	143c <redraw_menu_visit+0x74>  // b.none
    1408:	ldr	x0, [sp, #24]
    140c:	ldr	x0, [x0]
    1410:	ldr	x2, [x0, #56]
    1414:	add	x0, sp, #0x28
    1418:	mov	x1, x0
    141c:	ldr	x0, [sp, #24]
    1420:	blr	x2
    1424:	mov	w0, #0x1                   	// #1
    1428:	bl	0 <grub_video_set_area_status>
    142c:	add	x0, sp, #0x28
    1430:	mov	x1, x0
    1434:	ldr	x0, [sp, #56]
    1438:	bl	11a0 <grub_gfxmenu_view_redraw>
    143c:	nop
    1440:	ldp	x29, x30, [sp], #64
    1444:	ret
	...

0000000000001450 <grub_gfxmenu_redraw_menu>:
    1450:	stp	x29, x30, [sp, #-32]!
    1454:	mov	x29, sp
    1458:	str	x0, [sp, #24]
    145c:	ldr	x0, [sp, #24]
    1460:	bl	f50 <update_menu_components>
    1464:	ldr	x0, [sp, #24]
    1468:	ldr	x3, [x0, #144]
    146c:	ldr	x2, [sp, #24]
    1470:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    1474:	add	x0, x0, #0x0
    1478:	ldr	x1, [x0]
    147c:	mov	x0, x3
    1480:	bl	d458 <grub_gui_iterate_recursively>
    1484:	bl	0 <grub_video_swap_buffers>
    1488:	ldr	x0, [sp, #24]
    148c:	ldr	w0, [x0, #152]
    1490:	cmp	w0, #0x0
    1494:	b.eq	14b8 <grub_gfxmenu_redraw_menu+0x68>  // b.none
    1498:	ldr	x0, [sp, #24]
    149c:	ldr	x3, [x0, #144]
    14a0:	ldr	x2, [sp, #24]
    14a4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    14a8:	add	x0, x0, #0x0
    14ac:	ldr	x1, [x0]
    14b0:	mov	x0, x3
    14b4:	bl	d458 <grub_gui_iterate_recursively>
    14b8:	nop
    14bc:	ldp	x29, x30, [sp], #32
    14c0:	ret
    14c4:	nop
	...

00000000000014d0 <grub_gfxmenu_set_chosen_entry>:
    14d0:	stp	x29, x30, [sp, #-48]!
    14d4:	mov	x29, sp
    14d8:	str	w0, [sp, #28]
    14dc:	str	x1, [sp, #16]
    14e0:	ldr	x0, [sp, #16]
    14e4:	str	x0, [sp, #40]
    14e8:	ldr	x0, [sp, #40]
    14ec:	ldr	w1, [sp, #28]
    14f0:	str	w1, [x0, #156]
    14f4:	ldr	x0, [sp, #40]
    14f8:	bl	1450 <grub_gfxmenu_redraw_menu>
    14fc:	nop
    1500:	ldp	x29, x30, [sp], #48
    1504:	ret

0000000000001508 <grub_gfxmenu_draw_terminal_box>:
    1508:	stp	x29, x30, [sp, #-64]!
    150c:	mov	x29, sp
    1510:	stp	x19, x20, [sp, #16]
    1514:	str	x21, [sp, #32]
    1518:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    151c:	add	x0, x0, #0x0
    1520:	ldr	x0, [x0]
    1524:	ldr	x0, [x0]
    1528:	ldr	x0, [x0, #112]
    152c:	str	x0, [sp, #56]
    1530:	ldr	x0, [sp, #56]
    1534:	cmp	x0, #0x0
    1538:	b.eq	15f4 <grub_gfxmenu_draw_terminal_box+0xec>  // b.none
    153c:	mov	w0, #0x0                   	// #0
    1540:	bl	0 <grub_video_set_area_status>
    1544:	ldr	x0, [sp, #56]
    1548:	ldr	x3, [x0, #32]
    154c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    1550:	add	x0, x0, #0x0
    1554:	ldr	x0, [x0]
    1558:	ldr	x0, [x0]
    155c:	ldr	w0, [x0, #28]
    1560:	mov	w1, w0
    1564:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    1568:	add	x0, x0, #0x0
    156c:	ldr	x0, [x0]
    1570:	ldr	x0, [x0]
    1574:	ldr	w0, [x0, #32]
    1578:	mov	w2, w0
    157c:	ldr	x0, [sp, #56]
    1580:	blr	x3
    1584:	ldr	x0, [sp, #56]
    1588:	ldr	x19, [x0, #24]
    158c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    1590:	add	x0, x0, #0x0
    1594:	ldr	x0, [x0]
    1598:	ldr	x0, [x0]
    159c:	ldr	w20, [x0, #20]
    15a0:	ldr	x0, [sp, #56]
    15a4:	ldr	x1, [x0, #48]
    15a8:	ldr	x0, [sp, #56]
    15ac:	blr	x1
    15b0:	sub	w0, w20, w0
    15b4:	mov	w21, w0
    15b8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    15bc:	add	x0, x0, #0x0
    15c0:	ldr	x0, [x0]
    15c4:	ldr	x0, [x0]
    15c8:	ldr	w20, [x0, #24]
    15cc:	ldr	x0, [sp, #56]
    15d0:	ldr	x1, [x0, #56]
    15d4:	ldr	x0, [sp, #56]
    15d8:	blr	x1
    15dc:	sub	w0, w20, w0
    15e0:	mov	w2, w0
    15e4:	mov	w1, w21
    15e8:	ldr	x0, [sp, #56]
    15ec:	blr	x19
    15f0:	b	15f8 <grub_gfxmenu_draw_terminal_box+0xf0>
    15f4:	nop
    15f8:	ldp	x19, x20, [sp, #16]
    15fc:	ldr	x21, [sp, #32]
    1600:	ldp	x29, x30, [sp], #64
    1604:	ret
	...

0000000000001610 <get_min_terminal>:
    1610:	stp	x29, x30, [sp, #-64]!
    1614:	mov	x29, sp
    1618:	str	x0, [sp, #40]
    161c:	str	w1, [sp, #36]
    1620:	str	x2, [sp, #24]
    1624:	str	x3, [sp, #16]
    1628:	mov	w1, #0x4d                  	// #77
    162c:	ldr	x0, [sp, #40]
    1630:	bl	0 <grub_font_get_glyph>
    1634:	str	x0, [sp, #56]
    1638:	ldr	x0, [sp, #56]
    163c:	cmp	x0, #0x0
    1640:	b.eq	1664 <get_min_terminal+0x54>  // b.none
    1644:	ldr	x0, [sp, #56]
    1648:	ldrh	w0, [x0, #16]
    164c:	mov	w1, w0
    1650:	mov	w0, w1
    1654:	lsl	w0, w0, #2
    1658:	add	w0, w0, w1
    165c:	lsl	w0, w0, #4
    1660:	b	1668 <get_min_terminal+0x58>
    1664:	mov	w0, #0x280                 	// #640
    1668:	ldr	w1, [sp, #36]
    166c:	lsl	w1, w1, #1
    1670:	add	w1, w0, w1
    1674:	ldr	x0, [sp, #24]
    1678:	str	w1, [x0]
    167c:	ldr	x0, [sp, #40]
    1680:	bl	51c <grub_font_get_max_char_height>
    1684:	mov	w1, w0
    1688:	mov	w0, w1
    168c:	lsl	w0, w0, #1
    1690:	add	w0, w0, w1
    1694:	lsl	w0, w0, #3
    1698:	mov	w1, w0
    169c:	ldr	w0, [sp, #36]
    16a0:	lsl	w0, w0, #1
    16a4:	add	w1, w1, w0
    16a8:	ldr	x0, [sp, #16]
    16ac:	str	w1, [x0]
    16b0:	nop
    16b4:	ldp	x29, x30, [sp], #64
    16b8:	ret

00000000000016bc <terminal_sanity_check>:
    16bc:	stp	x29, x30, [sp, #-96]!
    16c0:	mov	x29, sp
    16c4:	str	x0, [sp, #24]
    16c8:	ldr	x0, [sp, #24]
    16cc:	ldr	w0, [x0, #16]
    16d0:	cmp	w0, #0x0
    16d4:	b.eq	19d4 <terminal_sanity_check+0x318>  // b.none
    16d8:	ldr	x0, [sp, #24]
    16dc:	ldr	x0, [x0, #56]
    16e0:	bl	0 <grub_font_get>
    16e4:	str	x0, [sp, #64]
    16e8:	ldr	x0, [sp, #24]
    16ec:	ldr	w0, [x0]
    16f0:	str	w0, [sp, #60]
    16f4:	ldr	x0, [sp, #24]
    16f8:	ldr	w0, [x0, #4]
    16fc:	str	w0, [sp, #56]
    1700:	ldr	x0, [sp, #24]
    1704:	ldr	w0, [x0, #8]
    1708:	str	w0, [sp, #52]
    170c:	ldr	x0, [sp, #24]
    1710:	ldr	w0, [x0, #12]
    1714:	str	w0, [sp, #48]
    1718:	ldr	x0, [sp, #24]
    171c:	ldr	w0, [x0, #20]
    1720:	str	w0, [sp, #92]
    1724:	ldr	x0, [sp, #24]
    1728:	ldr	w0, [x0, #24]
    172c:	str	w0, [sp, #88]
    1730:	ldr	x0, [sp, #24]
    1734:	ldr	w0, [x0, #28]
    1738:	str	w0, [sp, #84]
    173c:	ldr	x0, [sp, #24]
    1740:	ldr	w0, [x0, #32]
    1744:	str	w0, [sp, #80]
    1748:	ldr	x0, [sp, #24]
    174c:	ldr	w0, [x0, #36]
    1750:	str	w0, [sp, #76]
    1754:	add	x1, sp, #0x28
    1758:	add	x0, sp, #0x2c
    175c:	mov	x3, x1
    1760:	mov	x2, x0
    1764:	ldr	w1, [sp, #76]
    1768:	ldr	x0, [sp, #64]
    176c:	bl	1610 <get_min_terminal>
    1770:	ldr	w0, [sp, #76]
    1774:	cmp	w0, #0x3
    1778:	b.ls	17c8 <terminal_sanity_check+0x10c>  // b.plast
    177c:	ldr	w0, [sp, #44]
    1780:	mov	w1, w0
    1784:	ldr	w0, [sp, #52]
    1788:	cmp	w0, w1
    178c:	b.le	17a4 <terminal_sanity_check+0xe8>
    1790:	ldr	w0, [sp, #40]
    1794:	mov	w1, w0
    1798:	ldr	w0, [sp, #48]
    179c:	cmp	w0, w1
    17a0:	b.gt	17c8 <terminal_sanity_check+0x10c>
    17a4:	mov	w0, #0x3                   	// #3
    17a8:	str	w0, [sp, #76]
    17ac:	add	x1, sp, #0x28
    17b0:	add	x0, sp, #0x2c
    17b4:	mov	x3, x1
    17b8:	mov	x2, x0
    17bc:	ldr	w1, [sp, #76]
    17c0:	ldr	x0, [sp, #64]
    17c4:	bl	1610 <get_min_terminal>
    17c8:	ldr	w1, [sp, #84]
    17cc:	ldr	w0, [sp, #52]
    17d0:	cmp	w1, w0
    17d4:	b.le	17e0 <terminal_sanity_check+0x124>
    17d8:	ldr	w0, [sp, #52]
    17dc:	str	w0, [sp, #84]
    17e0:	ldr	w1, [sp, #80]
    17e4:	ldr	w0, [sp, #48]
    17e8:	cmp	w1, w0
    17ec:	b.le	17f8 <terminal_sanity_check+0x13c>
    17f0:	ldr	w0, [sp, #48]
    17f4:	str	w0, [sp, #80]
    17f8:	ldr	w0, [sp, #44]
    17fc:	mov	w1, w0
    1800:	ldr	w0, [sp, #52]
    1804:	cmp	w0, w1
    1808:	b.le	1820 <terminal_sanity_check+0x164>
    180c:	ldr	w0, [sp, #40]
    1810:	mov	w1, w0
    1814:	ldr	w0, [sp, #48]
    1818:	cmp	w0, w1
    181c:	b.gt	18b4 <terminal_sanity_check+0x1f8>
    1820:	ldr	w2, [sp, #52]
    1824:	ldr	w1, [sp, #76]
    1828:	mov	w0, w1
    182c:	lsl	w0, w0, #1
    1830:	add	w0, w0, w1
    1834:	lsl	w0, w0, #1
    1838:	sub	w0, w2, w0
    183c:	str	w0, [sp, #84]
    1840:	ldr	w2, [sp, #48]
    1844:	ldr	w1, [sp, #76]
    1848:	mov	w0, w1
    184c:	lsl	w0, w0, #1
    1850:	add	w0, w0, w1
    1854:	lsl	w0, w0, #1
    1858:	sub	w0, w2, w0
    185c:	str	w0, [sp, #80]
    1860:	ldr	w1, [sp, #52]
    1864:	ldr	w0, [sp, #84]
    1868:	sub	w0, w1, w0
    186c:	lsr	w1, w0, #31
    1870:	add	w0, w1, w0
    1874:	asr	w0, w0, #1
    1878:	mov	w1, w0
    187c:	ldr	w0, [sp, #60]
    1880:	add	w0, w0, w1
    1884:	str	w0, [sp, #92]
    1888:	ldr	w1, [sp, #48]
    188c:	ldr	w0, [sp, #80]
    1890:	sub	w0, w1, w0
    1894:	lsr	w1, w0, #31
    1898:	add	w0, w1, w0
    189c:	asr	w0, w0, #1
    18a0:	mov	w1, w0
    18a4:	ldr	w0, [sp, #56]
    18a8:	add	w0, w0, w1
    18ac:	str	w0, [sp, #88]
    18b0:	b	193c <terminal_sanity_check+0x280>
    18b4:	ldr	w0, [sp, #44]
    18b8:	mov	w1, w0
    18bc:	ldr	w0, [sp, #84]
    18c0:	cmp	w0, w1
    18c4:	b.lt	18dc <terminal_sanity_check+0x220>  // b.tstop
    18c8:	ldr	w0, [sp, #40]
    18cc:	mov	w1, w0
    18d0:	ldr	w0, [sp, #80]
    18d4:	cmp	w0, w1
    18d8:	b.ge	193c <terminal_sanity_check+0x280>  // b.tcont
    18dc:	ldr	w0, [sp, #44]
    18e0:	str	w0, [sp, #84]
    18e4:	ldr	w0, [sp, #40]
    18e8:	str	w0, [sp, #80]
    18ec:	ldr	w1, [sp, #52]
    18f0:	ldr	w0, [sp, #84]
    18f4:	sub	w0, w1, w0
    18f8:	lsr	w1, w0, #31
    18fc:	add	w0, w1, w0
    1900:	asr	w0, w0, #1
    1904:	mov	w1, w0
    1908:	ldr	w0, [sp, #60]
    190c:	add	w0, w0, w1
    1910:	str	w0, [sp, #92]
    1914:	ldr	w1, [sp, #48]
    1918:	ldr	w0, [sp, #80]
    191c:	sub	w0, w1, w0
    1920:	lsr	w1, w0, #31
    1924:	add	w0, w1, w0
    1928:	asr	w0, w0, #1
    192c:	mov	w1, w0
    1930:	ldr	w0, [sp, #56]
    1934:	add	w0, w0, w1
    1938:	str	w0, [sp, #88]
    193c:	ldr	w1, [sp, #92]
    1940:	ldr	w0, [sp, #84]
    1944:	add	w0, w1, w0
    1948:	ldr	w1, [sp, #52]
    194c:	cmp	w1, w0
    1950:	b.ge	1964 <terminal_sanity_check+0x2a8>  // b.tcont
    1954:	ldr	w1, [sp, #52]
    1958:	ldr	w0, [sp, #84]
    195c:	sub	w0, w1, w0
    1960:	str	w0, [sp, #92]
    1964:	ldr	w1, [sp, #88]
    1968:	ldr	w0, [sp, #80]
    196c:	add	w0, w1, w0
    1970:	ldr	w1, [sp, #48]
    1974:	cmp	w1, w0
    1978:	b.ge	198c <terminal_sanity_check+0x2d0>  // b.tcont
    197c:	ldr	w1, [sp, #48]
    1980:	ldr	w0, [sp, #80]
    1984:	sub	w0, w1, w0
    1988:	str	w0, [sp, #88]
    198c:	ldr	w1, [sp, #92]
    1990:	ldr	x0, [sp, #24]
    1994:	str	w1, [x0, #20]
    1998:	ldr	w1, [sp, #88]
    199c:	ldr	x0, [sp, #24]
    19a0:	str	w1, [x0, #24]
    19a4:	ldr	w1, [sp, #84]
    19a8:	ldr	x0, [sp, #24]
    19ac:	str	w1, [x0, #28]
    19b0:	ldr	w1, [sp, #80]
    19b4:	ldr	x0, [sp, #24]
    19b8:	str	w1, [x0, #32]
    19bc:	ldr	w1, [sp, #76]
    19c0:	ldr	x0, [sp, #24]
    19c4:	str	w1, [x0, #36]
    19c8:	ldr	x0, [sp, #24]
    19cc:	str	wzr, [x0, #16]
    19d0:	b	19d8 <terminal_sanity_check+0x31c>
    19d4:	nop
    19d8:	ldp	x29, x30, [sp], #96
    19dc:	ret

00000000000019e0 <init_terminal>:
    19e0:	stp	x29, x30, [sp, #-48]!
    19e4:	mov	x29, sp
    19e8:	str	x0, [sp, #24]
    19ec:	ldr	x0, [sp, #24]
    19f0:	ldr	x0, [x0, #56]
    19f4:	bl	0 <grub_font_get>
    19f8:	str	x0, [sp, #40]
    19fc:	ldr	x0, [sp, #40]
    1a00:	cmp	x0, #0x0
    1a04:	b.ne	1a20 <init_terminal+0x40>  // b.any
    1a08:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    1a0c:	add	x0, x0, #0x0
    1a10:	ldr	x1, [x0]
    1a14:	mov	w0, #0x17                  	// #23
    1a18:	bl	0 <grub_error>
    1a1c:	b	1ab0 <init_terminal+0xd0>
    1a20:	ldr	x0, [sp, #24]
    1a24:	bl	16bc <terminal_sanity_check>
    1a28:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    1a2c:	add	x0, x0, #0x0
    1a30:	ldr	x0, [x0]
    1a34:	ldr	x1, [sp, #24]
    1a38:	str	x1, [x0]
    1a3c:	ldr	x0, [sp, #24]
    1a40:	ldr	w0, [x0, #20]
    1a44:	mov	w8, w0
    1a48:	ldr	x0, [sp, #24]
    1a4c:	ldr	w0, [x0, #24]
    1a50:	mov	w2, w0
    1a54:	ldr	x0, [sp, #24]
    1a58:	ldr	w0, [x0, #28]
    1a5c:	mov	w3, w0
    1a60:	ldr	x0, [sp, #24]
    1a64:	ldr	w0, [x0, #32]
    1a68:	mov	w4, w0
    1a6c:	ldr	x0, [sp, #24]
    1a70:	ldr	w1, [x0, #152]
    1a74:	ldr	x0, [sp, #24]
    1a78:	ldr	w0, [x0, #36]
    1a7c:	mov	w7, w0
    1a80:	ldr	x6, [sp, #40]
    1a84:	mov	w5, w1
    1a88:	mov	w1, w8
    1a8c:	mov	x0, #0x0                   	// #0
    1a90:	bl	0 <grub_gfxterm_set_window>
    1a94:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    1a98:	add	x0, x0, #0x0
    1a9c:	ldr	x0, [x0]
    1aa0:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    1aa4:	add	x1, x1, #0x0
    1aa8:	ldr	x1, [x1]
    1aac:	str	x1, [x0]
    1ab0:	ldp	x29, x30, [sp], #48
    1ab4:	ret
	...

0000000000001ad8 <init_background>:
    1ad8:	stp	x29, x30, [sp, #-48]!
    1adc:	mov	x29, sp
    1ae0:	str	x0, [sp, #24]
    1ae4:	ldr	x0, [sp, #24]
    1ae8:	ldr	x0, [x0, #88]
    1aec:	cmp	x0, #0x0
    1af0:	b.ne	1bb4 <init_background+0xdc>  // b.any
    1af4:	ldr	x0, [sp, #24]
    1af8:	ldr	w0, [x0, #96]
    1afc:	cmp	w0, #0x0
    1b00:	b.ne	1b3c <init_background+0x64>  // b.any
    1b04:	ldr	x0, [sp, #24]
    1b08:	ldr	w0, [x0, #8]
    1b0c:	mov	w5, w0
    1b10:	ldr	x0, [sp, #24]
    1b14:	ldr	w0, [x0, #12]
    1b18:	mov	w2, w0
    1b1c:	ldr	x0, [sp, #24]
    1b20:	ldr	x1, [x0, #80]
    1b24:	add	x0, sp, #0x28
    1b28:	mov	w4, #0x1                   	// #1
    1b2c:	mov	x3, x1
    1b30:	mov	w1, w5
    1b34:	bl	0 <grub_video_bitmap_create_scaled>
    1b38:	b	1b98 <init_background+0xc0>
    1b3c:	ldr	x0, [sp, #24]
    1b40:	ldr	w0, [x0, #8]
    1b44:	mov	w8, w0
    1b48:	ldr	x0, [sp, #24]
    1b4c:	ldr	w0, [x0, #12]
    1b50:	mov	w9, w0
    1b54:	ldr	x0, [sp, #24]
    1b58:	ldr	x1, [x0, #80]
    1b5c:	ldr	x0, [sp, #24]
    1b60:	ldr	w2, [x0, #96]
    1b64:	ldr	x0, [sp, #24]
    1b68:	ldr	w3, [x0, #104]
    1b6c:	ldr	x0, [sp, #24]
    1b70:	ldr	w4, [x0, #100]
    1b74:	add	x0, sp, #0x28
    1b78:	mov	w7, w4
    1b7c:	mov	w6, w3
    1b80:	mov	w5, w2
    1b84:	mov	w4, #0x1                   	// #1
    1b88:	mov	x3, x1
    1b8c:	mov	w2, w9
    1b90:	mov	w1, w8
    1b94:	bl	0 <grub_video_bitmap_scale_proportional>
    1b98:	ldr	x0, [sp, #40]
    1b9c:	cmp	x0, #0x0
    1ba0:	b.eq	1bbc <init_background+0xe4>  // b.none
    1ba4:	ldr	x1, [sp, #40]
    1ba8:	ldr	x0, [sp, #24]
    1bac:	str	x1, [x0, #88]
    1bb0:	b	1bc0 <init_background+0xe8>
    1bb4:	nop
    1bb8:	b	1bc0 <init_background+0xe8>
    1bbc:	nop
    1bc0:	ldp	x29, x30, [sp], #48
    1bc4:	ret

0000000000001bc8 <grub_unicode_destroy_glyph>:
    1bc8:	stp	x29, x30, [sp, #-32]!
    1bcc:	mov	x29, sp
    1bd0:	str	x0, [sp, #24]
    1bd4:	ldr	x0, [sp, #24]
    1bd8:	ldrh	w0, [x0, #6]
    1bdc:	ubfx	x0, x0, #3, #8
    1be0:	and	w0, w0, #0xff
    1be4:	cmp	w0, #0x2
    1be8:	b.ls	1bf8 <grub_unicode_destroy_glyph+0x30>  // b.plast
    1bec:	ldr	x0, [sp, #24]
    1bf0:	ldr	x0, [x0, #24]
    1bf4:	bl	0 <grub_free>
    1bf8:	ldr	x0, [sp, #24]
    1bfc:	ldrh	w1, [x0, #6]
    1c00:	and	w1, w1, #0xfffff807
    1c04:	strh	w1, [x0, #6]
    1c08:	nop
    1c0c:	ldp	x29, x30, [sp], #32
    1c10:	ret

0000000000001c14 <grub_font_draw_string>:
    1c14:	sub	sp, sp, #0x80
    1c18:	stp	x29, x30, [sp, #16]
    1c1c:	add	x29, sp, #0x10
    1c20:	str	x0, [sp, #56]
    1c24:	str	x1, [sp, #48]
    1c28:	str	w2, [sp, #44]
    1c2c:	str	w3, [sp, #40]
    1c30:	str	w4, [sp, #36]
    1c34:	add	x0, sp, #0x48
    1c38:	mov	x2, #0x0                   	// #0
    1c3c:	mov	x1, x0
    1c40:	ldr	x0, [sp, #56]
    1c44:	bl	0 <grub_utf8_to_ucs4_alloc>
    1c48:	str	x0, [sp, #96]
    1c4c:	ldr	x0, [sp, #96]
    1c50:	cmp	x0, #0x0
    1c54:	b.ge	1c6c <grub_font_draw_string+0x58>  // b.tcont
    1c58:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    1c5c:	add	x0, x0, #0x0
    1c60:	ldr	x0, [x0]
    1c64:	ldr	w0, [x0]
    1c68:	b	1dc4 <grub_font_draw_string+0x1b0>
    1c6c:	ldr	x0, [sp, #72]
    1c70:	ldr	x1, [sp, #96]
    1c74:	add	x2, sp, #0x40
    1c78:	str	wzr, [sp, #8]
    1c7c:	str	xzr, [sp]
    1c80:	mov	w7, #0x0                   	// #0
    1c84:	mov	x6, #0x0                   	// #0
    1c88:	mov	x5, #0x0                   	// #0
    1c8c:	mov	x4, #0x0                   	// #0
    1c90:	mov	x3, #0x0                   	// #0
    1c94:	bl	0 <grub_bidi_logical_to_visual>
    1c98:	str	x0, [sp, #88]
    1c9c:	ldr	x0, [sp, #72]
    1ca0:	bl	0 <grub_free>
    1ca4:	ldr	x0, [sp, #88]
    1ca8:	cmp	x0, #0x0
    1cac:	b.ge	1cc4 <grub_font_draw_string+0xb0>  // b.tcont
    1cb0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    1cb4:	add	x0, x0, #0x0
    1cb8:	ldr	x0, [x0]
    1cbc:	ldr	w0, [x0]
    1cc0:	b	1dc4 <grub_font_draw_string+0x1b0>
    1cc4:	str	wzr, [sp, #108]
    1cc8:	ldr	x0, [sp, #64]
    1ccc:	str	x0, [sp, #112]
    1cd0:	ldr	w0, [sp, #40]
    1cd4:	str	w0, [sp, #124]
    1cd8:	b	1d58 <grub_font_draw_string+0x144>
    1cdc:	ldr	x1, [sp, #112]
    1ce0:	ldr	x0, [sp, #48]
    1ce4:	bl	0 <grub_font_construct_glyph>
    1ce8:	str	x0, [sp, #80]
    1cec:	ldr	x0, [sp, #80]
    1cf0:	cmp	x0, #0x0
    1cf4:	b.ne	1d10 <grub_font_draw_string+0xfc>  // b.any
    1cf8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    1cfc:	add	x0, x0, #0x0
    1d00:	ldr	x0, [x0]
    1d04:	ldr	w0, [x0]
    1d08:	str	w0, [sp, #108]
    1d0c:	b	1d7c <grub_font_draw_string+0x168>
    1d10:	ldr	w3, [sp, #36]
    1d14:	ldr	w2, [sp, #124]
    1d18:	ldr	w1, [sp, #44]
    1d1c:	ldr	x0, [sp, #80]
    1d20:	bl	0 <grub_font_draw_glyph>
    1d24:	str	w0, [sp, #108]
    1d28:	ldr	w0, [sp, #108]
    1d2c:	cmp	w0, #0x0
    1d30:	b.ne	1d78 <grub_font_draw_string+0x164>  // b.any
    1d34:	ldr	x0, [sp, #80]
    1d38:	ldrh	w0, [x0, #16]
    1d3c:	mov	w1, w0
    1d40:	ldr	w0, [sp, #124]
    1d44:	add	w0, w0, w1
    1d48:	str	w0, [sp, #124]
    1d4c:	ldr	x0, [sp, #112]
    1d50:	add	x0, x0, #0x20
    1d54:	str	x0, [sp, #112]
    1d58:	ldr	x1, [sp, #64]
    1d5c:	ldr	x0, [sp, #88]
    1d60:	lsl	x0, x0, #5
    1d64:	add	x0, x1, x0
    1d68:	ldr	x1, [sp, #112]
    1d6c:	cmp	x1, x0
    1d70:	b.cc	1cdc <grub_font_draw_string+0xc8>  // b.lo, b.ul, b.last
    1d74:	b	1d7c <grub_font_draw_string+0x168>
    1d78:	nop
    1d7c:	ldr	x0, [sp, #64]
    1d80:	str	x0, [sp, #112]
    1d84:	b	1d9c <grub_font_draw_string+0x188>
    1d88:	ldr	x0, [sp, #112]
    1d8c:	bl	1bc8 <grub_unicode_destroy_glyph>
    1d90:	ldr	x0, [sp, #112]
    1d94:	add	x0, x0, #0x20
    1d98:	str	x0, [sp, #112]
    1d9c:	ldr	x1, [sp, #64]
    1da0:	ldr	x0, [sp, #88]
    1da4:	lsl	x0, x0, #5
    1da8:	add	x0, x1, x0
    1dac:	ldr	x1, [sp, #112]
    1db0:	cmp	x1, x0
    1db4:	b.cc	1d88 <grub_font_draw_string+0x174>  // b.lo, b.ul, b.last
    1db8:	ldr	x0, [sp, #64]
    1dbc:	bl	0 <grub_free>
    1dc0:	ldr	w0, [sp, #108]
    1dc4:	ldp	x29, x30, [sp, #16]
    1dc8:	add	sp, sp, #0x80
    1dcc:	ret
	...

0000000000001dd8 <grub_font_get_string_width>:
    1dd8:	stp	x29, x30, [sp, #-96]!
    1ddc:	mov	x29, sp
    1de0:	str	x0, [sp, #24]
    1de4:	str	x1, [sp, #16]
    1de8:	str	wzr, [sp, #92]
    1dec:	add	x0, sp, #0x40
    1df0:	mov	x2, #0x0                   	// #0
    1df4:	mov	x1, x0
    1df8:	ldr	x0, [sp, #16]
    1dfc:	bl	0 <grub_utf8_to_ucs4_alloc>
    1e00:	str	x0, [sp, #72]
    1e04:	ldr	x0, [sp, #72]
    1e08:	cmp	x0, #0x0
    1e0c:	b.ge	1e28 <grub_font_get_string_width+0x50>  // b.tcont
    1e10:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    1e14:	add	x0, x0, #0x0
    1e18:	ldr	x0, [x0]
    1e1c:	str	wzr, [x0]
    1e20:	mov	w0, #0x0                   	// #0
    1e24:	b	1ec8 <grub_font_get_string_width+0xf0>
    1e28:	ldr	x0, [sp, #64]
    1e2c:	str	x0, [sp, #80]
    1e30:	b	1ea0 <grub_font_get_string_width+0xc8>
    1e34:	ldr	x0, [sp, #64]
    1e38:	ldr	x1, [sp, #80]
    1e3c:	sub	x0, x1, x0
    1e40:	asr	x0, x0, #2
    1e44:	neg	x0, x0
    1e48:	mov	x1, x0
    1e4c:	ldr	x0, [sp, #72]
    1e50:	add	x0, x1, x0
    1e54:	mov	x1, x0
    1e58:	add	x0, sp, #0x20
    1e5c:	mov	x2, x0
    1e60:	ldr	x0, [sp, #80]
    1e64:	bl	0 <grub_unicode_aglomerate_comb>
    1e68:	lsl	x0, x0, #2
    1e6c:	ldr	x1, [sp, #80]
    1e70:	add	x0, x1, x0
    1e74:	str	x0, [sp, #80]
    1e78:	add	x0, sp, #0x20
    1e7c:	mov	x1, x0
    1e80:	ldr	x0, [sp, #24]
    1e84:	bl	0 <grub_font_get_constructed_device_width>
    1e88:	mov	w1, w0
    1e8c:	ldr	w0, [sp, #92]
    1e90:	add	w0, w0, w1
    1e94:	str	w0, [sp, #92]
    1e98:	add	x0, sp, #0x20
    1e9c:	bl	1bc8 <grub_unicode_destroy_glyph>
    1ea0:	ldr	x1, [sp, #64]
    1ea4:	ldr	x0, [sp, #72]
    1ea8:	lsl	x0, x0, #2
    1eac:	add	x0, x1, x0
    1eb0:	ldr	x1, [sp, #80]
    1eb4:	cmp	x1, x0
    1eb8:	b.cc	1e34 <grub_font_get_string_width+0x5c>  // b.lo, b.ul, b.last
    1ebc:	ldr	x0, [sp, #64]
    1ec0:	bl	0 <grub_free>
    1ec4:	ldr	w0, [sp, #92]
    1ec8:	ldp	x29, x30, [sp], #96
    1ecc:	ret
	...

0000000000001ed8 <grub_stpcpy>:
    1ed8:	sub	sp, sp, #0x20
    1edc:	str	x0, [sp, #8]
    1ee0:	str	x1, [sp]
    1ee4:	ldr	x0, [sp, #8]
    1ee8:	str	x0, [sp, #24]
    1eec:	ldr	x0, [sp]
    1ef0:	str	x0, [sp, #16]
    1ef4:	ldr	x0, [sp, #24]
    1ef8:	add	x1, x0, #0x1
    1efc:	str	x1, [sp, #24]
    1f00:	ldr	x1, [sp, #16]
    1f04:	ldrb	w1, [x1]
    1f08:	strb	w1, [x0]
    1f0c:	ldr	x0, [sp, #16]
    1f10:	add	x1, x0, #0x1
    1f14:	str	x1, [sp, #16]
    1f18:	ldrb	w0, [x0]
    1f1c:	cmp	w0, #0x0
    1f20:	b.ne	1ef4 <grub_stpcpy+0x1c>  // b.any
    1f24:	ldr	x0, [sp, #24]
    1f28:	sub	x0, x0, #0x1
    1f2c:	add	sp, sp, #0x20
    1f30:	ret

0000000000001f34 <grub_gfxmenu_icon_manager_new>:
    1f34:	stp	x29, x30, [sp, #-32]!
    1f38:	mov	x29, sp
    1f3c:	mov	x0, #0x28                  	// #40
    1f40:	bl	0 <grub_malloc>
    1f44:	str	x0, [sp, #24]
    1f48:	ldr	x0, [sp, #24]
    1f4c:	cmp	x0, #0x0
    1f50:	b.ne	1f5c <grub_gfxmenu_icon_manager_new+0x28>  // b.any
    1f54:	mov	x0, #0x0                   	// #0
    1f58:	b	1f90 <grub_gfxmenu_icon_manager_new+0x5c>
    1f5c:	ldr	x0, [sp, #24]
    1f60:	str	xzr, [x0]
    1f64:	ldr	x0, [sp, #24]
    1f68:	str	wzr, [x0, #8]
    1f6c:	ldr	x0, [sp, #24]
    1f70:	str	wzr, [x0, #12]
    1f74:	ldr	x0, [sp, #24]
    1f78:	str	xzr, [x0, #16]
    1f7c:	ldr	x0, [sp, #24]
    1f80:	str	xzr, [x0, #24]
    1f84:	ldr	x0, [sp, #24]
    1f88:	str	xzr, [x0, #32]
    1f8c:	ldr	x0, [sp, #24]
    1f90:	ldp	x29, x30, [sp], #32
    1f94:	ret

0000000000001f98 <grub_gfxmenu_icon_manager_destroy>:
    1f98:	stp	x29, x30, [sp, #-32]!
    1f9c:	mov	x29, sp
    1fa0:	str	x0, [sp, #24]
    1fa4:	ldr	x0, [sp, #24]
    1fa8:	bl	1fcc <grub_gfxmenu_icon_manager_clear_cache>
    1fac:	ldr	x0, [sp, #24]
    1fb0:	ldr	x0, [x0]
    1fb4:	bl	0 <grub_free>
    1fb8:	ldr	x0, [sp, #24]
    1fbc:	bl	0 <grub_free>
    1fc0:	nop
    1fc4:	ldp	x29, x30, [sp], #32
    1fc8:	ret

0000000000001fcc <grub_gfxmenu_icon_manager_clear_cache>:
    1fcc:	stp	x29, x30, [sp, #-48]!
    1fd0:	mov	x29, sp
    1fd4:	str	x0, [sp, #24]
    1fd8:	ldr	x0, [sp, #24]
    1fdc:	ldr	x0, [x0, #32]
    1fe0:	str	x0, [sp, #40]
    1fe4:	b	201c <grub_gfxmenu_icon_manager_clear_cache+0x50>
    1fe8:	ldr	x0, [sp, #40]
    1fec:	ldr	x0, [x0, #16]
    1ff0:	str	x0, [sp, #32]
    1ff4:	ldr	x0, [sp, #40]
    1ff8:	ldr	x0, [x0]
    1ffc:	bl	0 <grub_free>
    2000:	ldr	x0, [sp, #40]
    2004:	ldr	x0, [x0, #8]
    2008:	bl	0 <grub_video_bitmap_destroy>
    200c:	ldr	x0, [sp, #40]
    2010:	bl	0 <grub_free>
    2014:	ldr	x0, [sp, #32]
    2018:	str	x0, [sp, #40]
    201c:	ldr	x0, [sp, #40]
    2020:	cmp	x0, #0x0
    2024:	b.ne	1fe8 <grub_gfxmenu_icon_manager_clear_cache+0x1c>  // b.any
    2028:	ldr	x0, [sp, #24]
    202c:	str	xzr, [x0, #32]
    2030:	nop
    2034:	ldp	x29, x30, [sp], #48
    2038:	ret

000000000000203c <grub_gfxmenu_icon_manager_set_theme_path>:
    203c:	stp	x29, x30, [sp, #-32]!
    2040:	mov	x29, sp
    2044:	str	x0, [sp, #24]
    2048:	str	x1, [sp, #16]
    204c:	ldr	x0, [sp, #24]
    2050:	ldr	x0, [x0]
    2054:	cmp	x0, #0x0
    2058:	b.ne	2068 <grub_gfxmenu_icon_manager_set_theme_path+0x2c>  // b.any
    205c:	ldr	x0, [sp, #16]
    2060:	cmp	x0, #0x0
    2064:	b.eq	20dc <grub_gfxmenu_icon_manager_set_theme_path+0xa0>  // b.none
    2068:	ldr	x0, [sp, #24]
    206c:	ldr	x0, [x0]
    2070:	cmp	x0, #0x0
    2074:	b.eq	209c <grub_gfxmenu_icon_manager_set_theme_path+0x60>  // b.none
    2078:	ldr	x0, [sp, #16]
    207c:	cmp	x0, #0x0
    2080:	b.eq	209c <grub_gfxmenu_icon_manager_set_theme_path+0x60>  // b.none
    2084:	ldr	x0, [sp, #24]
    2088:	ldr	x0, [x0]
    208c:	ldr	x1, [sp, #16]
    2090:	bl	0 <grub_strcmp>
    2094:	cmp	w0, #0x0
    2098:	b.eq	20a4 <grub_gfxmenu_icon_manager_set_theme_path+0x68>  // b.none
    209c:	ldr	x0, [sp, #24]
    20a0:	bl	1fcc <grub_gfxmenu_icon_manager_clear_cache>
    20a4:	ldr	x0, [sp, #24]
    20a8:	ldr	x0, [x0]
    20ac:	bl	0 <grub_free>
    20b0:	ldr	x0, [sp, #16]
    20b4:	cmp	x0, #0x0
    20b8:	b.eq	20cc <grub_gfxmenu_icon_manager_set_theme_path+0x90>  // b.none
    20bc:	ldr	x0, [sp, #16]
    20c0:	bl	0 <grub_strdup>
    20c4:	mov	x1, x0
    20c8:	b	20d0 <grub_gfxmenu_icon_manager_set_theme_path+0x94>
    20cc:	mov	x1, #0x0                   	// #0
    20d0:	ldr	x0, [sp, #24]
    20d4:	str	x1, [x0]
    20d8:	b	20e0 <grub_gfxmenu_icon_manager_set_theme_path+0xa4>
    20dc:	nop
    20e0:	ldp	x29, x30, [sp], #32
    20e4:	ret

00000000000020e8 <grub_gfxmenu_icon_manager_set_icon_size>:
    20e8:	stp	x29, x30, [sp, #-32]!
    20ec:	mov	x29, sp
    20f0:	str	x0, [sp, #24]
    20f4:	str	w1, [sp, #20]
    20f8:	str	w2, [sp, #16]
    20fc:	ldr	x0, [sp, #24]
    2100:	ldr	w0, [x0, #8]
    2104:	ldr	w1, [sp, #20]
    2108:	cmp	w1, w0
    210c:	b.ne	2124 <grub_gfxmenu_icon_manager_set_icon_size+0x3c>  // b.any
    2110:	ldr	x0, [sp, #24]
    2114:	ldr	w0, [x0, #12]
    2118:	ldr	w1, [sp, #16]
    211c:	cmp	w1, w0
    2120:	b.eq	212c <grub_gfxmenu_icon_manager_set_icon_size+0x44>  // b.none
    2124:	ldr	x0, [sp, #24]
    2128:	bl	1fcc <grub_gfxmenu_icon_manager_clear_cache>
    212c:	ldr	x0, [sp, #24]
    2130:	ldr	w1, [sp, #20]
    2134:	str	w1, [x0, #8]
    2138:	ldr	x0, [sp, #24]
    213c:	ldr	w1, [sp, #16]
    2140:	str	w1, [x0, #12]
    2144:	nop
    2148:	ldp	x29, x30, [sp], #32
    214c:	ret

0000000000002150 <try_loading_icon>:
    2150:	stp	x29, x30, [sp, #-96]!
    2154:	mov	x29, sp
    2158:	str	x19, [sp, #16]
    215c:	str	x0, [sp, #56]
    2160:	str	x1, [sp, #48]
    2164:	str	x2, [sp, #40]
    2168:	ldr	x0, [sp, #48]
    216c:	bl	0 <grub_strlen>
    2170:	mov	x19, x0
    2174:	ldr	x0, [sp, #40]
    2178:	bl	0 <grub_strlen>
    217c:	add	x19, x19, x0
    2180:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2184:	add	x0, x0, #0x0
    2188:	ldr	x0, [x0]
    218c:	bl	0 <grub_strlen>
    2190:	add	x0, x19, x0
    2194:	add	x0, x0, #0x3
    2198:	bl	0 <grub_malloc>
    219c:	str	x0, [sp, #80]
    21a0:	ldr	x0, [sp, #80]
    21a4:	cmp	x0, #0x0
    21a8:	b.ne	21b4 <try_loading_icon+0x64>  // b.any
    21ac:	mov	x0, #0x0                   	// #0
    21b0:	b	22a4 <try_loading_icon+0x154>
    21b4:	ldr	x1, [sp, #48]
    21b8:	ldr	x0, [sp, #80]
    21bc:	bl	1ed8 <grub_stpcpy>
    21c0:	str	x0, [sp, #88]
    21c4:	ldr	x1, [sp, #80]
    21c8:	ldr	x0, [sp, #88]
    21cc:	cmp	x1, x0
    21d0:	b.eq	21e8 <try_loading_icon+0x98>  // b.none
    21d4:	ldr	x0, [sp, #88]
    21d8:	sub	x0, x0, #0x1
    21dc:	ldrb	w0, [x0]
    21e0:	cmp	w0, #0x2f
    21e4:	b.eq	21fc <try_loading_icon+0xac>  // b.none
    21e8:	ldr	x0, [sp, #88]
    21ec:	add	x1, x0, #0x1
    21f0:	str	x1, [sp, #88]
    21f4:	mov	w1, #0x2f                  	// #47
    21f8:	strb	w1, [x0]
    21fc:	ldr	x1, [sp, #40]
    2200:	ldr	x0, [sp, #88]
    2204:	bl	1ed8 <grub_stpcpy>
    2208:	str	x0, [sp, #88]
    220c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2210:	add	x0, x0, #0x0
    2214:	ldr	x1, [x0]
    2218:	ldr	x0, [sp, #88]
    221c:	bl	1ed8 <grub_stpcpy>
    2220:	str	x0, [sp, #88]
    2224:	ldr	x0, [sp, #88]
    2228:	strb	wzr, [x0]
    222c:	add	x0, sp, #0x48
    2230:	ldr	x1, [sp, #80]
    2234:	bl	0 <grub_video_bitmap_load>
    2238:	ldr	x0, [sp, #80]
    223c:	bl	0 <grub_free>
    2240:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2244:	add	x0, x0, #0x0
    2248:	ldr	x0, [x0]
    224c:	str	wzr, [x0]
    2250:	ldr	x0, [sp, #72]
    2254:	cmp	x0, #0x0
    2258:	b.ne	2264 <try_loading_icon+0x114>  // b.any
    225c:	mov	x0, #0x0                   	// #0
    2260:	b	22a4 <try_loading_icon+0x154>
    2264:	ldr	x0, [sp, #56]
    2268:	ldr	w1, [x0, #8]
    226c:	ldr	x0, [sp, #56]
    2270:	ldr	w2, [x0, #12]
    2274:	ldr	x3, [sp, #72]
    2278:	add	x0, sp, #0x40
    227c:	mov	w4, #0x1                   	// #1
    2280:	bl	0 <grub_video_bitmap_create_scaled>
    2284:	ldr	x0, [sp, #72]
    2288:	bl	0 <grub_video_bitmap_destroy>
    228c:	ldr	x0, [sp, #64]
    2290:	cmp	x0, #0x0
    2294:	b.ne	22a0 <try_loading_icon+0x150>  // b.any
    2298:	mov	x0, #0x0                   	// #0
    229c:	b	22a4 <try_loading_icon+0x154>
    22a0:	ldr	x0, [sp, #64]
    22a4:	ldr	x19, [sp, #16]
    22a8:	ldp	x29, x30, [sp], #96
    22ac:	ret
	...

00000000000022c0 <get_icon_by_class>:
    22c0:	stp	x29, x30, [sp, #-80]!
    22c4:	mov	x29, sp
    22c8:	str	x0, [sp, #24]
    22cc:	str	x1, [sp, #16]
    22d0:	ldr	x0, [sp, #24]
    22d4:	ldr	x0, [x0, #32]
    22d8:	str	x0, [sp, #72]
    22dc:	b	2310 <get_icon_by_class+0x50>
    22e0:	ldr	x0, [sp, #72]
    22e4:	ldr	x0, [x0]
    22e8:	ldr	x1, [sp, #16]
    22ec:	bl	0 <grub_strcmp>
    22f0:	cmp	w0, #0x0
    22f4:	b.ne	2304 <get_icon_by_class+0x44>  // b.any
    22f8:	ldr	x0, [sp, #72]
    22fc:	ldr	x0, [x0, #8]
    2300:	b	2450 <get_icon_by_class+0x190>
    2304:	ldr	x0, [sp, #72]
    2308:	ldr	x0, [x0, #16]
    230c:	str	x0, [sp, #72]
    2310:	ldr	x0, [sp, #72]
    2314:	cmp	x0, #0x0
    2318:	b.ne	22e0 <get_icon_by_class+0x20>  // b.any
    231c:	ldr	x0, [sp, #24]
    2320:	ldr	x0, [x0]
    2324:	cmp	x0, #0x0
    2328:	b.ne	2334 <get_icon_by_class+0x74>  // b.any
    232c:	mov	x0, #0x0                   	// #0
    2330:	b	2450 <get_icon_by_class+0x190>
    2334:	ldr	x0, [sp, #24]
    2338:	ldr	x0, [x0]
    233c:	bl	db00 <grub_get_dirname>
    2340:	str	x0, [sp, #56]
    2344:	str	xzr, [sp, #64]
    2348:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    234c:	add	x0, x0, #0x0
    2350:	ldr	x1, [x0]
    2354:	ldr	x0, [sp, #56]
    2358:	bl	d9e0 <grub_resolve_relative_path>
    235c:	str	x0, [sp, #48]
    2360:	ldr	x0, [sp, #48]
    2364:	cmp	x0, #0x0
    2368:	b.eq	2388 <get_icon_by_class+0xc8>  // b.none
    236c:	ldr	x2, [sp, #16]
    2370:	ldr	x1, [sp, #48]
    2374:	ldr	x0, [sp, #24]
    2378:	bl	2150 <try_loading_icon>
    237c:	str	x0, [sp, #64]
    2380:	ldr	x0, [sp, #48]
    2384:	bl	0 <grub_free>
    2388:	ldr	x0, [sp, #56]
    238c:	bl	0 <grub_free>
    2390:	ldr	x0, [sp, #64]
    2394:	cmp	x0, #0x0
    2398:	b.ne	23d0 <get_icon_by_class+0x110>  // b.any
    239c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    23a0:	add	x0, x0, #0x0
    23a4:	ldr	x0, [x0]
    23a8:	bl	0 <grub_env_get>
    23ac:	str	x0, [sp, #40]
    23b0:	ldr	x0, [sp, #40]
    23b4:	cmp	x0, #0x0
    23b8:	b.eq	23d0 <get_icon_by_class+0x110>  // b.none
    23bc:	ldr	x2, [sp, #16]
    23c0:	ldr	x1, [sp, #40]
    23c4:	ldr	x0, [sp, #24]
    23c8:	bl	2150 <try_loading_icon>
    23cc:	str	x0, [sp, #64]
    23d0:	ldr	x0, [sp, #64]
    23d4:	cmp	x0, #0x0
    23d8:	b.ne	23e4 <get_icon_by_class+0x124>  // b.any
    23dc:	mov	x0, #0x0                   	// #0
    23e0:	b	2450 <get_icon_by_class+0x190>
    23e4:	mov	x0, #0x18                  	// #24
    23e8:	bl	0 <grub_malloc>
    23ec:	str	x0, [sp, #72]
    23f0:	ldr	x0, [sp, #72]
    23f4:	cmp	x0, #0x0
    23f8:	b.ne	240c <get_icon_by_class+0x14c>  // b.any
    23fc:	ldr	x0, [sp, #64]
    2400:	bl	0 <grub_video_bitmap_destroy>
    2404:	mov	x0, #0x0                   	// #0
    2408:	b	2450 <get_icon_by_class+0x190>
    240c:	ldr	x0, [sp, #16]
    2410:	bl	0 <grub_strdup>
    2414:	mov	x1, x0
    2418:	ldr	x0, [sp, #72]
    241c:	str	x1, [x0]
    2420:	ldr	x0, [sp, #72]
    2424:	ldr	x1, [sp, #64]
    2428:	str	x1, [x0, #8]
    242c:	ldr	x0, [sp, #24]
    2430:	ldr	x1, [x0, #32]
    2434:	ldr	x0, [sp, #72]
    2438:	str	x1, [x0, #16]
    243c:	ldr	x0, [sp, #24]
    2440:	ldr	x1, [sp, #72]
    2444:	str	x1, [x0, #32]
    2448:	ldr	x0, [sp, #72]
    244c:	ldr	x0, [x0, #8]
    2450:	ldp	x29, x30, [sp], #80
    2454:	ret
	...

0000000000002468 <grub_gfxmenu_icon_manager_get_icon>:
    2468:	stp	x29, x30, [sp, #-48]!
    246c:	mov	x29, sp
    2470:	str	x0, [sp, #24]
    2474:	str	x1, [sp, #16]
    2478:	str	xzr, [sp, #32]
    247c:	ldr	x0, [sp, #16]
    2480:	ldr	x0, [x0, #32]
    2484:	str	x0, [sp, #40]
    2488:	b	24b0 <grub_gfxmenu_icon_manager_get_icon+0x48>
    248c:	ldr	x0, [sp, #40]
    2490:	ldr	x0, [x0]
    2494:	mov	x1, x0
    2498:	ldr	x0, [sp, #24]
    249c:	bl	22c0 <get_icon_by_class>
    24a0:	str	x0, [sp, #32]
    24a4:	ldr	x0, [sp, #40]
    24a8:	ldr	x0, [x0, #8]
    24ac:	str	x0, [sp, #40]
    24b0:	ldr	x0, [sp, #40]
    24b4:	cmp	x0, #0x0
    24b8:	b.eq	24c8 <grub_gfxmenu_icon_manager_get_icon+0x60>  // b.none
    24bc:	ldr	x0, [sp, #32]
    24c0:	cmp	x0, #0x0
    24c4:	b.eq	248c <grub_gfxmenu_icon_manager_get_icon+0x24>  // b.none
    24c8:	ldr	x0, [sp, #32]
    24cc:	ldp	x29, x30, [sp], #48
    24d0:	ret
    24d4:	nop

00000000000024d8 <grub_file_size>:
    24d8:	sub	sp, sp, #0x10
    24dc:	str	x0, [sp, #8]
    24e0:	ldr	x0, [sp, #8]
    24e4:	ldr	x0, [x0, #64]
    24e8:	add	sp, sp, #0x10
    24ec:	ret

00000000000024f0 <grub_memcpy>:
    24f0:	stp	x29, x30, [sp, #-48]!
    24f4:	mov	x29, sp
    24f8:	str	x0, [sp, #40]
    24fc:	str	x1, [sp, #32]
    2500:	str	x2, [sp, #24]
    2504:	ldr	x2, [sp, #24]
    2508:	ldr	x1, [sp, #32]
    250c:	ldr	x0, [sp, #40]
    2510:	bl	0 <grub_memmove>
    2514:	ldp	x29, x30, [sp], #48
    2518:	ret

000000000000251c <grub_isalpha>:
    251c:	sub	sp, sp, #0x10
    2520:	str	w0, [sp, #12]
    2524:	ldr	w0, [sp, #12]
    2528:	cmp	w0, #0x60
    252c:	b.le	253c <grub_isalpha+0x20>
    2530:	ldr	w0, [sp, #12]
    2534:	cmp	w0, #0x7a
    2538:	b.le	2554 <grub_isalpha+0x38>
    253c:	ldr	w0, [sp, #12]
    2540:	cmp	w0, #0x40
    2544:	b.le	255c <grub_isalpha+0x40>
    2548:	ldr	w0, [sp, #12]
    254c:	cmp	w0, #0x5a
    2550:	b.gt	255c <grub_isalpha+0x40>
    2554:	mov	w0, #0x1                   	// #1
    2558:	b	2560 <grub_isalpha+0x44>
    255c:	mov	w0, #0x0                   	// #0
    2560:	add	sp, sp, #0x10
    2564:	ret

0000000000002568 <grub_isdigit>:
    2568:	sub	sp, sp, #0x10
    256c:	str	w0, [sp, #12]
    2570:	ldr	w0, [sp, #12]
    2574:	cmp	w0, #0x2f
    2578:	b.le	2590 <grub_isdigit+0x28>
    257c:	ldr	w0, [sp, #12]
    2580:	cmp	w0, #0x39
    2584:	b.gt	2590 <grub_isdigit+0x28>
    2588:	mov	w0, #0x1                   	// #1
    258c:	b	2594 <grub_isdigit+0x2c>
    2590:	mov	w0, #0x0                   	// #0
    2594:	add	sp, sp, #0x10
    2598:	ret

000000000000259c <grub_divide_round>:
    259c:	sub	sp, sp, #0x20
    25a0:	str	w0, [sp, #12]
    25a4:	str	w1, [sp, #8]
    25a8:	str	wzr, [sp, #28]
    25ac:	ldr	w0, [sp, #8]
    25b0:	cmp	w0, #0x0
    25b4:	b.ge	25d8 <grub_divide_round+0x3c>  // b.tcont
    25b8:	ldr	w0, [sp, #8]
    25bc:	neg	w0, w0
    25c0:	str	w0, [sp, #8]
    25c4:	ldr	w0, [sp, #28]
    25c8:	cmp	w0, #0x0
    25cc:	cset	w0, eq  // eq = none
    25d0:	and	w0, w0, #0xff
    25d4:	str	w0, [sp, #28]
    25d8:	ldr	w0, [sp, #12]
    25dc:	cmp	w0, #0x0
    25e0:	b.ge	2604 <grub_divide_round+0x68>  // b.tcont
    25e4:	ldr	w0, [sp, #12]
    25e8:	neg	w0, w0
    25ec:	str	w0, [sp, #12]
    25f0:	ldr	w0, [sp, #28]
    25f4:	cmp	w0, #0x0
    25f8:	cset	w0, eq  // eq = none
    25fc:	and	w0, w0, #0xff
    2600:	str	w0, [sp, #28]
    2604:	ldr	w0, [sp, #8]
    2608:	lsr	w1, w0, #31
    260c:	add	w0, w1, w0
    2610:	asr	w0, w0, #1
    2614:	mov	w1, w0
    2618:	ldr	w0, [sp, #12]
    261c:	add	w0, w1, w0
    2620:	mov	w1, w0
    2624:	ldr	w0, [sp, #8]
    2628:	udiv	w0, w1, w0
    262c:	str	w0, [sp, #24]
    2630:	ldr	w0, [sp, #28]
    2634:	cmp	w0, #0x0
    2638:	b.eq	2648 <grub_divide_round+0xac>  // b.none
    263c:	ldr	w0, [sp, #24]
    2640:	neg	w0, w0
    2644:	b	264c <grub_divide_round+0xb0>
    2648:	ldr	w0, [sp, #24]
    264c:	add	sp, sp, #0x20
    2650:	ret

0000000000002654 <grub_fixed_fsf_divide>:
    2654:	stp	x29, x30, [sp, #-32]!
    2658:	mov	x29, sp
    265c:	str	w0, [sp, #28]
    2660:	str	w1, [sp, #24]
    2664:	ldr	w1, [sp, #24]
    2668:	ldr	w0, [sp, #28]
    266c:	bl	259c <grub_divide_round>
    2670:	ldp	x29, x30, [sp], #32
    2674:	ret

0000000000002678 <grub_fixed_sfs_multiply>:
    2678:	sub	sp, sp, #0x10
    267c:	str	w0, [sp, #12]
    2680:	str	w1, [sp, #8]
    2684:	ldr	w1, [sp, #12]
    2688:	ldr	w0, [sp, #8]
    268c:	mul	w0, w1, w0
    2690:	mov	w1, #0xffff                	// #65535
    2694:	add	w1, w0, w1
    2698:	cmp	w0, #0x0
    269c:	csel	w0, w1, w0, lt  // lt = tstop
    26a0:	asr	w0, w0, #16
    26a4:	add	sp, sp, #0x10
    26a8:	ret

00000000000026ac <grub_signed_to_fixed>:
    26ac:	sub	sp, sp, #0x10
    26b0:	str	w0, [sp, #12]
    26b4:	ldr	w0, [sp, #12]
    26b8:	lsl	w0, w0, #16
    26bc:	add	sp, sp, #0x10
    26c0:	ret

00000000000026c4 <recreate_box_absolute>:
    26c4:	stp	x29, x30, [sp, #-64]!
    26c8:	mov	x29, sp
    26cc:	str	x0, [sp, #24]
    26d0:	str	x1, [sp, #16]
    26d4:	mov	w1, #0x2a                  	// #42
    26d8:	ldr	x0, [sp, #16]
    26dc:	bl	0 <grub_strchr>
    26e0:	str	x0, [sp, #56]
    26e4:	ldr	x0, [sp, #56]
    26e8:	cmp	x0, #0x0
    26ec:	b.ne	270c <recreate_box_absolute+0x48>  // b.any
    26f0:	ldr	x2, [sp, #16]
    26f4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    26f8:	add	x0, x0, #0x0
    26fc:	ldr	x1, [x0]
    2700:	mov	w0, #0x12                  	// #18
    2704:	bl	0 <grub_error>
    2708:	b	2804 <recreate_box_absolute+0x140>
    270c:	ldr	x1, [sp, #56]
    2710:	ldr	x0, [sp, #16]
    2714:	sub	x0, x1, x0
    2718:	add	x0, x0, #0x1
    271c:	bl	0 <grub_malloc>
    2720:	str	x0, [sp, #48]
    2724:	ldr	x0, [sp, #48]
    2728:	cmp	x0, #0x0
    272c:	b.ne	2744 <recreate_box_absolute+0x80>  // b.any
    2730:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2734:	add	x0, x0, #0x0
    2738:	ldr	x0, [x0]
    273c:	ldr	w0, [x0]
    2740:	b	2804 <recreate_box_absolute+0x140>
    2744:	ldr	x1, [sp, #56]
    2748:	ldr	x0, [sp, #16]
    274c:	sub	x0, x1, x0
    2750:	mov	x2, x0
    2754:	ldr	x1, [sp, #16]
    2758:	ldr	x0, [sp, #48]
    275c:	bl	24f0 <grub_memcpy>
    2760:	ldr	x1, [sp, #56]
    2764:	ldr	x0, [sp, #16]
    2768:	sub	x0, x1, x0
    276c:	mov	x1, x0
    2770:	ldr	x0, [sp, #48]
    2774:	add	x0, x0, x1
    2778:	strb	wzr, [x0]
    277c:	ldr	x0, [sp, #56]
    2780:	add	x0, x0, #0x1
    2784:	str	x0, [sp, #40]
    2788:	ldr	x1, [sp, #40]
    278c:	ldr	x0, [sp, #48]
    2790:	bl	4df0 <grub_gfxmenu_create_box>
    2794:	str	x0, [sp, #32]
    2798:	ldr	x0, [sp, #48]
    279c:	bl	0 <grub_free>
    27a0:	ldr	x0, [sp, #32]
    27a4:	cmp	x0, #0x0
    27a8:	b.ne	27c0 <recreate_box_absolute+0xfc>  // b.any
    27ac:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    27b0:	add	x0, x0, #0x0
    27b4:	ldr	x0, [x0]
    27b8:	ldr	w0, [x0]
    27bc:	b	2804 <recreate_box_absolute+0x140>
    27c0:	ldr	x0, [sp, #24]
    27c4:	ldr	x0, [x0]
    27c8:	cmp	x0, #0x0
    27cc:	b.eq	27e8 <recreate_box_absolute+0x124>  // b.none
    27d0:	ldr	x0, [sp, #24]
    27d4:	ldr	x0, [x0]
    27d8:	ldr	x1, [x0, #80]
    27dc:	ldr	x0, [sp, #24]
    27e0:	ldr	x0, [x0]
    27e4:	blr	x1
    27e8:	ldr	x0, [sp, #24]
    27ec:	ldr	x1, [sp, #32]
    27f0:	str	x1, [x0]
    27f4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    27f8:	add	x0, x0, #0x0
    27fc:	ldr	x0, [x0]
    2800:	ldr	w0, [x0]
    2804:	ldp	x29, x30, [sp], #64
    2808:	ret
    280c:	nop
	...

0000000000002820 <grub_gui_recreate_box>:
    2820:	stp	x29, x30, [sp, #-64]!
    2824:	mov	x29, sp
    2828:	str	x0, [sp, #40]
    282c:	str	x1, [sp, #32]
    2830:	str	x2, [sp, #24]
    2834:	ldr	x0, [sp, #32]
    2838:	cmp	x0, #0x0
    283c:	b.ne	2894 <grub_gui_recreate_box+0x74>  // b.any
    2840:	ldr	x0, [sp, #40]
    2844:	ldr	x0, [x0]
    2848:	cmp	x0, #0x0
    284c:	b.eq	2868 <grub_gui_recreate_box+0x48>  // b.none
    2850:	ldr	x0, [sp, #40]
    2854:	ldr	x0, [x0]
    2858:	ldr	x1, [x0, #80]
    285c:	ldr	x0, [sp, #40]
    2860:	ldr	x0, [x0]
    2864:	blr	x1
    2868:	mov	x1, #0x0                   	// #0
    286c:	mov	x0, #0x0                   	// #0
    2870:	bl	4df0 <grub_gfxmenu_create_box>
    2874:	mov	x1, x0
    2878:	ldr	x0, [sp, #40]
    287c:	str	x1, [x0]
    2880:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2884:	add	x0, x0, #0x0
    2888:	ldr	x0, [x0]
    288c:	ldr	w0, [x0]
    2890:	b	290c <grub_gui_recreate_box+0xec>
    2894:	ldr	x0, [sp, #24]
    2898:	cmp	x0, #0x0
    289c:	b.ne	28b8 <grub_gui_recreate_box+0x98>  // b.any
    28a0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    28a4:	add	x0, x0, #0x0
    28a8:	ldr	x1, [x0]
    28ac:	mov	w0, #0x12                  	// #18
    28b0:	bl	0 <grub_error>
    28b4:	b	290c <grub_gui_recreate_box+0xec>
    28b8:	ldr	x1, [sp, #32]
    28bc:	ldr	x0, [sp, #24]
    28c0:	bl	d9e0 <grub_resolve_relative_path>
    28c4:	str	x0, [sp, #56]
    28c8:	ldr	x0, [sp, #56]
    28cc:	cmp	x0, #0x0
    28d0:	b.ne	28e8 <grub_gui_recreate_box+0xc8>  // b.any
    28d4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    28d8:	add	x0, x0, #0x0
    28dc:	ldr	x0, [x0]
    28e0:	ldr	w0, [x0]
    28e4:	b	290c <grub_gui_recreate_box+0xec>
    28e8:	ldr	x1, [sp, #56]
    28ec:	ldr	x0, [sp, #40]
    28f0:	bl	26c4 <recreate_box_absolute>
    28f4:	ldr	x0, [sp, #56]
    28f8:	bl	0 <grub_free>
    28fc:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2900:	add	x0, x0, #0x0
    2904:	ldr	x0, [x0]
    2908:	ldr	w0, [x0]
    290c:	ldp	x29, x30, [sp], #64
    2910:	ret
    2914:	nop
	...

0000000000002928 <theme_get_unsigned_int_from_proportional>:
    2928:	stp	x29, x30, [sp, #-64]!
    292c:	mov	x29, sp
    2930:	str	x0, [sp, #40]
    2934:	str	w1, [sp, #36]
    2938:	str	x2, [sp, #24]
    293c:	add	x1, sp, #0x34
    2940:	add	x0, sp, #0x30
    2944:	mov	x2, x1
    2948:	mov	x1, x0
    294c:	ldr	x0, [sp, #40]
    2950:	bl	36e0 <parse_proportional_spec>
    2954:	str	w0, [sp, #56]
    2958:	ldr	w0, [sp, #56]
    295c:	cmp	w0, #0x0
    2960:	b.eq	296c <theme_get_unsigned_int_from_proportional+0x44>  // b.none
    2964:	ldr	w0, [sp, #56]
    2968:	b	29a8 <theme_get_unsigned_int_from_proportional+0x80>
    296c:	ldr	w0, [sp, #36]
    2970:	ldr	w1, [sp, #52]
    2974:	bl	2678 <grub_fixed_sfs_multiply>
    2978:	mov	w1, w0
    297c:	ldr	w0, [sp, #48]
    2980:	add	w0, w1, w0
    2984:	str	w0, [sp, #60]
    2988:	ldr	w0, [sp, #60]
    298c:	cmp	w0, #0x0
    2990:	b.ge	2998 <theme_get_unsigned_int_from_proportional+0x70>  // b.tcont
    2994:	str	wzr, [sp, #60]
    2998:	ldr	w1, [sp, #60]
    299c:	ldr	x0, [sp, #24]
    29a0:	str	w1, [x0]
    29a4:	mov	w0, #0x0                   	// #0
    29a8:	ldp	x29, x30, [sp], #64
    29ac:	ret

00000000000029b0 <theme_set_string>:
    29b0:	stp	x29, x30, [sp, #-128]!
    29b4:	mov	x29, sp
    29b8:	str	x0, [sp, #56]
    29bc:	str	x1, [sp, #48]
    29c0:	str	x2, [sp, #40]
    29c4:	str	x3, [sp, #32]
    29c8:	str	x4, [sp, #24]
    29cc:	str	w5, [sp, #20]
    29d0:	str	w6, [sp, #16]
    29d4:	ldr	x1, [sp, #48]
    29d8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    29dc:	add	x0, x0, #0x0
    29e0:	ldr	x0, [x0]
    29e4:	bl	0 <grub_strcmp>
    29e8:	cmp	w0, #0x0
    29ec:	b.ne	2a08 <theme_set_string+0x58>  // b.any
    29f0:	ldr	x0, [sp, #40]
    29f4:	bl	0 <grub_font_get>
    29f8:	mov	x1, x0
    29fc:	ldr	x0, [sp, #56]
    2a00:	str	x1, [x0, #40]
    2a04:	b	314c <theme_set_string+0x79c>
    2a08:	ldr	x1, [sp, #48]
    2a0c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2a10:	add	x0, x0, #0x0
    2a14:	ldr	x0, [x0]
    2a18:	bl	0 <grub_strcmp>
    2a1c:	cmp	w0, #0x0
    2a20:	b.ne	2a3c <theme_set_string+0x8c>  // b.any
    2a24:	ldr	x0, [sp, #40]
    2a28:	bl	0 <grub_font_get>
    2a2c:	mov	x1, x0
    2a30:	ldr	x0, [sp, #56]
    2a34:	str	x1, [x0, #48]
    2a38:	b	314c <theme_set_string+0x79c>
    2a3c:	ldr	x1, [sp, #48]
    2a40:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2a44:	add	x0, x0, #0x0
    2a48:	ldr	x0, [x0]
    2a4c:	bl	0 <grub_strcmp>
    2a50:	cmp	w0, #0x0
    2a54:	b.ne	2a9c <theme_set_string+0xec>  // b.any
    2a58:	ldr	x0, [sp, #56]
    2a5c:	ldr	x0, [x0, #56]
    2a60:	bl	0 <grub_free>
    2a64:	ldr	x0, [sp, #40]
    2a68:	bl	0 <grub_strdup>
    2a6c:	mov	x1, x0
    2a70:	ldr	x0, [sp, #56]
    2a74:	str	x1, [x0, #56]
    2a78:	ldr	x0, [sp, #56]
    2a7c:	ldr	x0, [x0, #56]
    2a80:	cmp	x0, #0x0
    2a84:	b.ne	314c <theme_set_string+0x79c>  // b.any
    2a88:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2a8c:	add	x0, x0, #0x0
    2a90:	ldr	x0, [x0]
    2a94:	ldr	w0, [x0]
    2a98:	b	315c <theme_set_string+0x7ac>
    2a9c:	ldr	x1, [sp, #48]
    2aa0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2aa4:	add	x0, x0, #0x0
    2aa8:	ldr	x0, [x0]
    2aac:	bl	0 <grub_strcmp>
    2ab0:	cmp	w0, #0x0
    2ab4:	b.ne	2ad0 <theme_set_string+0x120>  // b.any
    2ab8:	ldr	x0, [sp, #56]
    2abc:	add	x0, x0, #0x40
    2ac0:	mov	x1, x0
    2ac4:	ldr	x0, [sp, #40]
    2ac8:	bl	0 <grub_video_parse_color>
    2acc:	b	314c <theme_set_string+0x79c>
    2ad0:	ldr	x1, [sp, #48]
    2ad4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2ad8:	add	x0, x0, #0x0
    2adc:	ldr	x0, [x0]
    2ae0:	bl	0 <grub_strcmp>
    2ae4:	cmp	w0, #0x0
    2ae8:	b.ne	2b04 <theme_set_string+0x154>  // b.any
    2aec:	ldr	x0, [sp, #56]
    2af0:	add	x0, x0, #0x44
    2af4:	mov	x1, x0
    2af8:	ldr	x0, [sp, #40]
    2afc:	bl	0 <grub_video_parse_color>
    2b00:	b	314c <theme_set_string+0x79c>
    2b04:	ldr	x1, [sp, #48]
    2b08:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2b0c:	add	x0, x0, #0x0
    2b10:	ldr	x0, [x0]
    2b14:	bl	0 <grub_strcmp>
    2b18:	cmp	w0, #0x0
    2b1c:	b.ne	2b38 <theme_set_string+0x188>  // b.any
    2b20:	ldr	x0, [sp, #56]
    2b24:	add	x0, x0, #0x48
    2b28:	mov	x1, x0
    2b2c:	ldr	x0, [sp, #40]
    2b30:	bl	0 <grub_video_parse_color>
    2b34:	b	314c <theme_set_string+0x79c>
    2b38:	ldr	x1, [sp, #48]
    2b3c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2b40:	add	x0, x0, #0x0
    2b44:	ldr	x0, [x0]
    2b48:	bl	0 <grub_strcmp>
    2b4c:	cmp	w0, #0x0
    2b50:	b.ne	2bd8 <theme_set_string+0x228>  // b.any
    2b54:	ldr	x1, [sp, #40]
    2b58:	ldr	x0, [sp, #32]
    2b5c:	bl	d9e0 <grub_resolve_relative_path>
    2b60:	str	x0, [sp, #96]
    2b64:	ldr	x0, [sp, #96]
    2b68:	cmp	x0, #0x0
    2b6c:	b.ne	2b84 <theme_set_string+0x1d4>  // b.any
    2b70:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2b74:	add	x0, x0, #0x0
    2b78:	ldr	x0, [x0]
    2b7c:	ldr	w0, [x0]
    2b80:	b	315c <theme_set_string+0x7ac>
    2b84:	add	x0, sp, #0x58
    2b88:	ldr	x1, [sp, #96]
    2b8c:	bl	0 <grub_video_bitmap_load>
    2b90:	cmp	w0, #0x0
    2b94:	b.eq	2bb4 <theme_set_string+0x204>  // b.none
    2b98:	ldr	x0, [sp, #96]
    2b9c:	bl	0 <grub_free>
    2ba0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2ba4:	add	x0, x0, #0x0
    2ba8:	ldr	x0, [x0]
    2bac:	ldr	w0, [x0]
    2bb0:	b	315c <theme_set_string+0x7ac>
    2bb4:	ldr	x0, [sp, #96]
    2bb8:	bl	0 <grub_free>
    2bbc:	ldr	x0, [sp, #56]
    2bc0:	ldr	x0, [x0, #80]
    2bc4:	bl	0 <grub_video_bitmap_destroy>
    2bc8:	ldr	x1, [sp, #88]
    2bcc:	ldr	x0, [sp, #56]
    2bd0:	str	x1, [x0, #80]
    2bd4:	b	314c <theme_set_string+0x79c>
    2bd8:	ldr	x1, [sp, #48]
    2bdc:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2be0:	add	x0, x0, #0x0
    2be4:	ldr	x0, [x0]
    2be8:	bl	0 <grub_strcmp>
    2bec:	cmp	w0, #0x0
    2bf0:	b.ne	2cf4 <theme_set_string+0x344>  // b.any
    2bf4:	ldr	x0, [sp, #40]
    2bf8:	cmp	x0, #0x0
    2bfc:	b.eq	2c1c <theme_set_string+0x26c>  // b.none
    2c00:	ldr	x1, [sp, #40]
    2c04:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2c08:	add	x0, x0, #0x0
    2c0c:	ldr	x0, [x0]
    2c10:	bl	0 <grub_strcmp>
    2c14:	cmp	w0, #0x0
    2c18:	b.ne	2c28 <theme_set_string+0x278>  // b.any
    2c1c:	ldr	x0, [sp, #56]
    2c20:	str	wzr, [x0, #96]
    2c24:	b	314c <theme_set_string+0x79c>
    2c28:	ldr	x1, [sp, #40]
    2c2c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2c30:	add	x0, x0, #0x0
    2c34:	ldr	x0, [x0]
    2c38:	bl	0 <grub_strcmp>
    2c3c:	cmp	w0, #0x0
    2c40:	b.ne	2c54 <theme_set_string+0x2a4>  // b.any
    2c44:	ldr	x0, [sp, #56]
    2c48:	mov	w1, #0x1                   	// #1
    2c4c:	str	w1, [x0, #96]
    2c50:	b	314c <theme_set_string+0x79c>
    2c54:	ldr	x1, [sp, #40]
    2c58:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2c5c:	add	x0, x0, #0x0
    2c60:	ldr	x0, [x0]
    2c64:	bl	0 <grub_strcmp>
    2c68:	cmp	w0, #0x0
    2c6c:	b.ne	2c80 <theme_set_string+0x2d0>  // b.any
    2c70:	ldr	x0, [sp, #56]
    2c74:	mov	w1, #0x2                   	// #2
    2c78:	str	w1, [x0, #96]
    2c7c:	b	314c <theme_set_string+0x79c>
    2c80:	ldr	x1, [sp, #40]
    2c84:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2c88:	add	x0, x0, #0x0
    2c8c:	ldr	x0, [x0]
    2c90:	bl	0 <grub_strcmp>
    2c94:	cmp	w0, #0x0
    2c98:	b.ne	2cac <theme_set_string+0x2fc>  // b.any
    2c9c:	ldr	x0, [sp, #56]
    2ca0:	mov	w1, #0x3                   	// #3
    2ca4:	str	w1, [x0, #96]
    2ca8:	b	314c <theme_set_string+0x79c>
    2cac:	ldr	x1, [sp, #40]
    2cb0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2cb4:	add	x0, x0, #0x0
    2cb8:	ldr	x0, [x0]
    2cbc:	bl	0 <grub_strcmp>
    2cc0:	cmp	w0, #0x0
    2cc4:	b.ne	2cd8 <theme_set_string+0x328>  // b.any
    2cc8:	ldr	x0, [sp, #56]
    2ccc:	mov	w1, #0x4                   	// #4
    2cd0:	str	w1, [x0, #96]
    2cd4:	b	314c <theme_set_string+0x79c>
    2cd8:	ldr	x2, [sp, #40]
    2cdc:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2ce0:	add	x0, x0, #0x0
    2ce4:	ldr	x1, [x0]
    2ce8:	mov	w0, #0x12                  	// #18
    2cec:	bl	0 <grub_error>
    2cf0:	b	315c <theme_set_string+0x7ac>
    2cf4:	ldr	x1, [sp, #48]
    2cf8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2cfc:	add	x0, x0, #0x0
    2d00:	ldr	x0, [x0]
    2d04:	bl	0 <grub_strcmp>
    2d08:	cmp	w0, #0x0
    2d0c:	b.ne	2dac <theme_set_string+0x3fc>  // b.any
    2d10:	ldr	x1, [sp, #40]
    2d14:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2d18:	add	x0, x0, #0x0
    2d1c:	ldr	x0, [x0]
    2d20:	bl	0 <grub_strcmp>
    2d24:	cmp	w0, #0x0
    2d28:	b.ne	2d38 <theme_set_string+0x388>  // b.any
    2d2c:	ldr	x0, [sp, #56]
    2d30:	str	wzr, [x0, #100]
    2d34:	b	314c <theme_set_string+0x79c>
    2d38:	ldr	x1, [sp, #40]
    2d3c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2d40:	add	x0, x0, #0x0
    2d44:	ldr	x0, [x0]
    2d48:	bl	0 <grub_strcmp>
    2d4c:	cmp	w0, #0x0
    2d50:	b.ne	2d64 <theme_set_string+0x3b4>  // b.any
    2d54:	ldr	x0, [sp, #56]
    2d58:	mov	w1, #0x1                   	// #1
    2d5c:	str	w1, [x0, #100]
    2d60:	b	314c <theme_set_string+0x79c>
    2d64:	ldr	x1, [sp, #40]
    2d68:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2d6c:	add	x0, x0, #0x0
    2d70:	ldr	x0, [x0]
    2d74:	bl	0 <grub_strcmp>
    2d78:	cmp	w0, #0x0
    2d7c:	b.ne	2d90 <theme_set_string+0x3e0>  // b.any
    2d80:	ldr	x0, [sp, #56]
    2d84:	mov	w1, #0x2                   	// #2
    2d88:	str	w1, [x0, #100]
    2d8c:	b	314c <theme_set_string+0x79c>
    2d90:	ldr	x2, [sp, #40]
    2d94:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2d98:	add	x0, x0, #0x0
    2d9c:	ldr	x1, [x0]
    2da0:	mov	w0, #0x12                  	// #18
    2da4:	bl	0 <grub_error>
    2da8:	b	315c <theme_set_string+0x7ac>
    2dac:	ldr	x1, [sp, #48]
    2db0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2db4:	add	x0, x0, #0x0
    2db8:	ldr	x0, [x0]
    2dbc:	bl	0 <grub_strcmp>
    2dc0:	cmp	w0, #0x0
    2dc4:	b.ne	2e64 <theme_set_string+0x4b4>  // b.any
    2dc8:	ldr	x1, [sp, #40]
    2dcc:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2dd0:	add	x0, x0, #0x0
    2dd4:	ldr	x0, [x0]
    2dd8:	bl	0 <grub_strcmp>
    2ddc:	cmp	w0, #0x0
    2de0:	b.ne	2df0 <theme_set_string+0x440>  // b.any
    2de4:	ldr	x0, [sp, #56]
    2de8:	str	wzr, [x0, #104]
    2dec:	b	314c <theme_set_string+0x79c>
    2df0:	ldr	x1, [sp, #40]
    2df4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2df8:	add	x0, x0, #0x0
    2dfc:	ldr	x0, [x0]
    2e00:	bl	0 <grub_strcmp>
    2e04:	cmp	w0, #0x0
    2e08:	b.ne	2e1c <theme_set_string+0x46c>  // b.any
    2e0c:	ldr	x0, [sp, #56]
    2e10:	mov	w1, #0x1                   	// #1
    2e14:	str	w1, [x0, #104]
    2e18:	b	314c <theme_set_string+0x79c>
    2e1c:	ldr	x1, [sp, #40]
    2e20:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2e24:	add	x0, x0, #0x0
    2e28:	ldr	x0, [x0]
    2e2c:	bl	0 <grub_strcmp>
    2e30:	cmp	w0, #0x0
    2e34:	b.ne	2e48 <theme_set_string+0x498>  // b.any
    2e38:	ldr	x0, [sp, #56]
    2e3c:	mov	w1, #0x2                   	// #2
    2e40:	str	w1, [x0, #104]
    2e44:	b	314c <theme_set_string+0x79c>
    2e48:	ldr	x2, [sp, #40]
    2e4c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2e50:	add	x0, x0, #0x0
    2e54:	ldr	x1, [x0]
    2e58:	mov	w0, #0x12                  	// #18
    2e5c:	bl	0 <grub_error>
    2e60:	b	315c <theme_set_string+0x7ac>
    2e64:	ldr	x1, [sp, #48]
    2e68:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2e6c:	add	x0, x0, #0x0
    2e70:	ldr	x0, [x0]
    2e74:	bl	0 <grub_strcmp>
    2e78:	cmp	w0, #0x0
    2e7c:	b.ne	2e98 <theme_set_string+0x4e8>  // b.any
    2e80:	ldr	x0, [sp, #56]
    2e84:	add	x0, x0, #0x6c
    2e88:	mov	x1, x0
    2e8c:	ldr	x0, [sp, #40]
    2e90:	bl	0 <grub_video_parse_color>
    2e94:	b	314c <theme_set_string+0x79c>
    2e98:	ldr	x1, [sp, #48]
    2e9c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2ea0:	add	x0, x0, #0x0
    2ea4:	ldr	x0, [x0]
    2ea8:	bl	0 <grub_strcmp>
    2eac:	cmp	w0, #0x0
    2eb0:	b.ne	2ee0 <theme_set_string+0x530>  // b.any
    2eb4:	ldr	x0, [sp, #56]
    2eb8:	add	x0, x0, #0x70
    2ebc:	ldr	x2, [sp, #32]
    2ec0:	ldr	x1, [sp, #40]
    2ec4:	bl	2820 <grub_gui_recreate_box>
    2ec8:	str	w0, [sp, #108]
    2ecc:	ldr	w0, [sp, #108]
    2ed0:	cmp	w0, #0x0
    2ed4:	b.eq	314c <theme_set_string+0x79c>  // b.none
    2ed8:	ldr	w0, [sp, #108]
    2edc:	b	315c <theme_set_string+0x7ac>
    2ee0:	ldr	x1, [sp, #48]
    2ee4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2ee8:	add	x0, x0, #0x0
    2eec:	ldr	x0, [x0]
    2ef0:	bl	0 <grub_strcmp>
    2ef4:	cmp	w0, #0x0
    2ef8:	b.ne	2f44 <theme_set_string+0x594>  // b.any
    2efc:	mov	w2, #0xa                   	// #10
    2f00:	mov	x1, #0x0                   	// #0
    2f04:	ldr	x0, [sp, #40]
    2f08:	bl	0 <grub_strtoul>
    2f0c:	mov	w1, w0
    2f10:	ldr	x0, [sp, #56]
    2f14:	str	w1, [x0, #36]
    2f18:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2f1c:	add	x0, x0, #0x0
    2f20:	ldr	x0, [x0]
    2f24:	ldr	w0, [x0]
    2f28:	cmp	w0, #0x0
    2f2c:	b.eq	314c <theme_set_string+0x79c>  // b.none
    2f30:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2f34:	add	x0, x0, #0x0
    2f38:	ldr	x0, [x0]
    2f3c:	ldr	w0, [x0]
    2f40:	b	315c <theme_set_string+0x7ac>
    2f44:	ldr	x1, [sp, #48]
    2f48:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2f4c:	add	x0, x0, #0x0
    2f50:	ldr	x0, [x0]
    2f54:	bl	0 <grub_strcmp>
    2f58:	cmp	w0, #0x0
    2f5c:	b.ne	2fa4 <theme_set_string+0x5f4>  // b.any
    2f60:	ldr	x0, [sp, #56]
    2f64:	ldr	w0, [x0, #8]
    2f68:	add	x1, sp, #0x54
    2f6c:	mov	x2, x1
    2f70:	mov	w1, w0
    2f74:	ldr	x0, [sp, #40]
    2f78:	bl	2928 <theme_get_unsigned_int_from_proportional>
    2f7c:	str	w0, [sp, #112]
    2f80:	ldr	w0, [sp, #112]
    2f84:	cmp	w0, #0x0
    2f88:	b.eq	2f94 <theme_set_string+0x5e4>  // b.none
    2f8c:	ldr	w0, [sp, #112]
    2f90:	b	315c <theme_set_string+0x7ac>
    2f94:	ldr	w1, [sp, #84]
    2f98:	ldr	x0, [sp, #56]
    2f9c:	str	w1, [x0, #20]
    2fa0:	b	314c <theme_set_string+0x79c>
    2fa4:	ldr	x1, [sp, #48]
    2fa8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    2fac:	add	x0, x0, #0x0
    2fb0:	ldr	x0, [x0]
    2fb4:	bl	0 <grub_strcmp>
    2fb8:	cmp	w0, #0x0
    2fbc:	b.ne	3004 <theme_set_string+0x654>  // b.any
    2fc0:	ldr	x0, [sp, #56]
    2fc4:	ldr	w0, [x0, #12]
    2fc8:	add	x1, sp, #0x50
    2fcc:	mov	x2, x1
    2fd0:	mov	w1, w0
    2fd4:	ldr	x0, [sp, #40]
    2fd8:	bl	2928 <theme_get_unsigned_int_from_proportional>
    2fdc:	str	w0, [sp, #116]
    2fe0:	ldr	w0, [sp, #116]
    2fe4:	cmp	w0, #0x0
    2fe8:	b.eq	2ff4 <theme_set_string+0x644>  // b.none
    2fec:	ldr	w0, [sp, #116]
    2ff0:	b	315c <theme_set_string+0x7ac>
    2ff4:	ldr	w1, [sp, #80]
    2ff8:	ldr	x0, [sp, #56]
    2ffc:	str	w1, [x0, #24]
    3000:	b	314c <theme_set_string+0x79c>
    3004:	ldr	x1, [sp, #48]
    3008:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    300c:	add	x0, x0, #0x0
    3010:	ldr	x0, [x0]
    3014:	bl	0 <grub_strcmp>
    3018:	cmp	w0, #0x0
    301c:	b.ne	3064 <theme_set_string+0x6b4>  // b.any
    3020:	ldr	x0, [sp, #56]
    3024:	ldr	w0, [x0, #8]
    3028:	add	x1, sp, #0x4c
    302c:	mov	x2, x1
    3030:	mov	w1, w0
    3034:	ldr	x0, [sp, #40]
    3038:	bl	2928 <theme_get_unsigned_int_from_proportional>
    303c:	str	w0, [sp, #120]
    3040:	ldr	w0, [sp, #120]
    3044:	cmp	w0, #0x0
    3048:	b.eq	3054 <theme_set_string+0x6a4>  // b.none
    304c:	ldr	w0, [sp, #120]
    3050:	b	315c <theme_set_string+0x7ac>
    3054:	ldr	w1, [sp, #76]
    3058:	ldr	x0, [sp, #56]
    305c:	str	w1, [x0, #28]
    3060:	b	314c <theme_set_string+0x79c>
    3064:	ldr	x1, [sp, #48]
    3068:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    306c:	add	x0, x0, #0x0
    3070:	ldr	x0, [x0]
    3074:	bl	0 <grub_strcmp>
    3078:	cmp	w0, #0x0
    307c:	b.ne	30c4 <theme_set_string+0x714>  // b.any
    3080:	ldr	x0, [sp, #56]
    3084:	ldr	w0, [x0, #12]
    3088:	add	x1, sp, #0x48
    308c:	mov	x2, x1
    3090:	mov	w1, w0
    3094:	ldr	x0, [sp, #40]
    3098:	bl	2928 <theme_get_unsigned_int_from_proportional>
    309c:	str	w0, [sp, #124]
    30a0:	ldr	w0, [sp, #124]
    30a4:	cmp	w0, #0x0
    30a8:	b.eq	30b4 <theme_set_string+0x704>  // b.none
    30ac:	ldr	w0, [sp, #124]
    30b0:	b	315c <theme_set_string+0x7ac>
    30b4:	ldr	w1, [sp, #72]
    30b8:	ldr	x0, [sp, #56]
    30bc:	str	w1, [x0, #32]
    30c0:	b	314c <theme_set_string+0x79c>
    30c4:	ldr	x1, [sp, #48]
    30c8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    30cc:	add	x0, x0, #0x0
    30d0:	ldr	x0, [x0]
    30d4:	bl	0 <grub_strcmp>
    30d8:	cmp	w0, #0x0
    30dc:	b.ne	3124 <theme_set_string+0x774>  // b.any
    30e0:	ldr	x0, [sp, #56]
    30e4:	ldr	x0, [x0, #120]
    30e8:	bl	0 <grub_free>
    30ec:	ldr	x0, [sp, #40]
    30f0:	bl	0 <grub_strdup>
    30f4:	mov	x1, x0
    30f8:	ldr	x0, [sp, #56]
    30fc:	str	x1, [x0, #120]
    3100:	ldr	x0, [sp, #56]
    3104:	ldr	x0, [x0, #120]
    3108:	cmp	x0, #0x0
    310c:	b.ne	314c <theme_set_string+0x79c>  // b.any
    3110:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3114:	add	x0, x0, #0x0
    3118:	ldr	x0, [x0]
    311c:	ldr	w0, [x0]
    3120:	b	315c <theme_set_string+0x7ac>
    3124:	ldr	x5, [sp, #48]
    3128:	ldr	w4, [sp, #16]
    312c:	ldr	w3, [sp, #20]
    3130:	ldr	x2, [sp, #24]
    3134:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3138:	add	x0, x0, #0x0
    313c:	ldr	x1, [x0]
    3140:	mov	w0, #0x12                  	// #18
    3144:	bl	0 <grub_error>
    3148:	b	315c <theme_set_string+0x7ac>
    314c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3150:	add	x0, x0, #0x0
    3154:	ldr	x0, [x0]
    3158:	ldr	w0, [x0]
    315c:	ldp	x29, x30, [sp], #128
    3160:	ret
    3164:	nop
	...

0000000000003270 <has_more>:
    3270:	sub	sp, sp, #0x10
    3274:	str	x0, [sp, #8]
    3278:	ldr	x0, [sp, #8]
    327c:	ldr	w1, [x0, #8]
    3280:	ldr	x0, [sp, #8]
    3284:	ldr	w0, [x0, #12]
    3288:	cmp	w1, w0
    328c:	cset	w0, lt  // lt = tstop
    3290:	and	w0, w0, #0xff
    3294:	add	sp, sp, #0x10
    3298:	ret

000000000000329c <read_char>:
    329c:	stp	x29, x30, [sp, #-48]!
    32a0:	mov	x29, sp
    32a4:	str	x0, [sp, #24]
    32a8:	ldr	x0, [sp, #24]
    32ac:	bl	3270 <has_more>
    32b0:	cmp	w0, #0x0
    32b4:	b.eq	3330 <read_char+0x94>  // b.none
    32b8:	ldr	x0, [sp, #24]
    32bc:	ldr	x1, [x0]
    32c0:	ldr	x0, [sp, #24]
    32c4:	ldr	w0, [x0, #8]
    32c8:	add	w3, w0, #0x1
    32cc:	ldr	x2, [sp, #24]
    32d0:	str	w3, [x2, #8]
    32d4:	sxtw	x0, w0
    32d8:	add	x0, x1, x0
    32dc:	ldrb	w0, [x0]
    32e0:	strb	w0, [sp, #47]
    32e4:	ldrb	w0, [sp, #47]
    32e8:	cmp	w0, #0xa
    32ec:	b.ne	3314 <read_char+0x78>  // b.any
    32f0:	ldr	x0, [sp, #24]
    32f4:	ldr	w0, [x0, #16]
    32f8:	add	w1, w0, #0x1
    32fc:	ldr	x0, [sp, #24]
    3300:	str	w1, [x0, #16]
    3304:	ldr	x0, [sp, #24]
    3308:	mov	w1, #0x1                   	// #1
    330c:	str	w1, [x0, #20]
    3310:	b	3328 <read_char+0x8c>
    3314:	ldr	x0, [sp, #24]
    3318:	ldr	w0, [x0, #20]
    331c:	add	w1, w0, #0x1
    3320:	ldr	x0, [sp, #24]
    3324:	str	w1, [x0, #20]
    3328:	ldrb	w0, [sp, #47]
    332c:	b	3334 <read_char+0x98>
    3330:	mov	w0, #0xffffffff            	// #-1
    3334:	ldp	x29, x30, [sp], #48
    3338:	ret

000000000000333c <peek_char>:
    333c:	stp	x29, x30, [sp, #-32]!
    3340:	mov	x29, sp
    3344:	str	x0, [sp, #24]
    3348:	ldr	x0, [sp, #24]
    334c:	bl	3270 <has_more>
    3350:	cmp	w0, #0x0
    3354:	b.eq	3378 <peek_char+0x3c>  // b.none
    3358:	ldr	x0, [sp, #24]
    335c:	ldr	x1, [x0]
    3360:	ldr	x0, [sp, #24]
    3364:	ldr	w0, [x0, #8]
    3368:	sxtw	x0, w0
    336c:	add	x0, x1, x0
    3370:	ldrb	w0, [x0]
    3374:	b	337c <peek_char+0x40>
    3378:	mov	w0, #0xffffffff            	// #-1
    337c:	ldp	x29, x30, [sp], #32
    3380:	ret

0000000000003384 <is_whitespace>:
    3384:	sub	sp, sp, #0x10
    3388:	strb	w0, [sp, #15]
    338c:	ldrb	w0, [sp, #15]
    3390:	cmp	w0, #0x20
    3394:	b.eq	33c8 <is_whitespace+0x44>  // b.none
    3398:	ldrb	w0, [sp, #15]
    339c:	cmp	w0, #0x9
    33a0:	b.eq	33c8 <is_whitespace+0x44>  // b.none
    33a4:	ldrb	w0, [sp, #15]
    33a8:	cmp	w0, #0xd
    33ac:	b.eq	33c8 <is_whitespace+0x44>  // b.none
    33b0:	ldrb	w0, [sp, #15]
    33b4:	cmp	w0, #0xa
    33b8:	b.eq	33c8 <is_whitespace+0x44>  // b.none
    33bc:	ldrb	w0, [sp, #15]
    33c0:	cmp	w0, #0xc
    33c4:	b.ne	33d0 <is_whitespace+0x4c>  // b.any
    33c8:	mov	w0, #0x1                   	// #1
    33cc:	b	33d4 <is_whitespace+0x50>
    33d0:	mov	w0, #0x0                   	// #0
    33d4:	add	sp, sp, #0x10
    33d8:	ret

00000000000033dc <skip_whitespace>:
    33dc:	stp	x29, x30, [sp, #-32]!
    33e0:	mov	x29, sp
    33e4:	str	x0, [sp, #24]
    33e8:	b	33f4 <skip_whitespace+0x18>
    33ec:	ldr	x0, [sp, #24]
    33f0:	bl	329c <read_char>
    33f4:	ldr	x0, [sp, #24]
    33f8:	bl	3270 <has_more>
    33fc:	cmp	w0, #0x0
    3400:	b.eq	341c <skip_whitespace+0x40>  // b.none
    3404:	ldr	x0, [sp, #24]
    3408:	bl	333c <peek_char>
    340c:	and	w0, w0, #0xff
    3410:	bl	3384 <is_whitespace>
    3414:	cmp	w0, #0x0
    3418:	b.ne	33ec <skip_whitespace+0x10>  // b.any
    341c:	nop
    3420:	ldp	x29, x30, [sp], #32
    3424:	ret

0000000000003428 <advance_to_next_line>:
    3428:	stp	x29, x30, [sp, #-48]!
    342c:	mov	x29, sp
    3430:	str	x0, [sp, #24]
    3434:	ldr	x0, [sp, #24]
    3438:	bl	329c <read_char>
    343c:	str	w0, [sp, #44]
    3440:	ldr	w0, [sp, #44]
    3444:	cmn	w0, #0x1
    3448:	b.eq	3458 <advance_to_next_line+0x30>  // b.none
    344c:	ldr	w0, [sp, #44]
    3450:	cmp	w0, #0xa
    3454:	b.ne	3434 <advance_to_next_line+0xc>  // b.any
    3458:	nop
    345c:	ldp	x29, x30, [sp], #48
    3460:	ret

0000000000003464 <is_identifier_char>:
    3464:	stp	x29, x30, [sp, #-32]!
    3468:	mov	x29, sp
    346c:	str	w0, [sp, #28]
    3470:	ldr	w0, [sp, #28]
    3474:	cmn	w0, #0x1
    3478:	b.eq	34bc <is_identifier_char+0x58>  // b.none
    347c:	ldr	w0, [sp, #28]
    3480:	bl	251c <grub_isalpha>
    3484:	cmp	w0, #0x0
    3488:	b.ne	34b4 <is_identifier_char+0x50>  // b.any
    348c:	ldr	w0, [sp, #28]
    3490:	bl	2568 <grub_isdigit>
    3494:	cmp	w0, #0x0
    3498:	b.ne	34b4 <is_identifier_char+0x50>  // b.any
    349c:	ldr	w0, [sp, #28]
    34a0:	cmp	w0, #0x5f
    34a4:	b.eq	34b4 <is_identifier_char+0x50>  // b.none
    34a8:	ldr	w0, [sp, #28]
    34ac:	cmp	w0, #0x2d
    34b0:	b.ne	34bc <is_identifier_char+0x58>  // b.any
    34b4:	mov	w0, #0x1                   	// #1
    34b8:	b	34c0 <is_identifier_char+0x5c>
    34bc:	mov	w0, #0x0                   	// #0
    34c0:	ldp	x29, x30, [sp], #32
    34c4:	ret

00000000000034c8 <read_identifier>:
    34c8:	stp	x29, x30, [sp, #-48]!
    34cc:	mov	x29, sp
    34d0:	str	x0, [sp, #24]
    34d4:	ldr	x0, [sp, #24]
    34d8:	bl	33dc <skip_whitespace>
    34dc:	ldr	x0, [sp, #24]
    34e0:	ldr	w0, [x0, #8]
    34e4:	str	w0, [sp, #44]
    34e8:	b	34f4 <read_identifier+0x2c>
    34ec:	ldr	x0, [sp, #24]
    34f0:	bl	329c <read_char>
    34f4:	ldr	x0, [sp, #24]
    34f8:	bl	333c <peek_char>
    34fc:	bl	3464 <is_identifier_char>
    3500:	cmp	w0, #0x0
    3504:	b.ne	34ec <read_identifier+0x24>  // b.any
    3508:	ldr	x0, [sp, #24]
    350c:	ldr	w0, [x0, #8]
    3510:	str	w0, [sp, #40]
    3514:	ldr	w1, [sp, #40]
    3518:	ldr	w0, [sp, #44]
    351c:	sub	w0, w1, w0
    3520:	cmp	w0, #0x0
    3524:	b.gt	3530 <read_identifier+0x68>
    3528:	mov	x0, #0x0                   	// #0
    352c:	b	3544 <read_identifier+0x7c>
    3530:	ldr	x0, [sp, #24]
    3534:	ldr	x0, [x0]
    3538:	ldrsw	x1, [sp, #44]
    353c:	ldrsw	x2, [sp, #40]
    3540:	bl	d520 <grub_new_substring>
    3544:	ldp	x29, x30, [sp], #48
    3548:	ret

000000000000354c <read_expression>:
    354c:	stp	x29, x30, [sp, #-48]!
    3550:	mov	x29, sp
    3554:	str	x0, [sp, #24]
    3558:	ldr	x0, [sp, #24]
    355c:	bl	33dc <skip_whitespace>
    3560:	ldr	x0, [sp, #24]
    3564:	bl	333c <peek_char>
    3568:	cmp	w0, #0x22
    356c:	b.ne	35c8 <read_expression+0x7c>  // b.any
    3570:	ldr	x0, [sp, #24]
    3574:	bl	329c <read_char>
    3578:	ldr	x0, [sp, #24]
    357c:	ldr	w0, [x0, #8]
    3580:	str	w0, [sp, #44]
    3584:	b	3590 <read_expression+0x44>
    3588:	ldr	x0, [sp, #24]
    358c:	bl	329c <read_char>
    3590:	ldr	x0, [sp, #24]
    3594:	bl	3270 <has_more>
    3598:	cmp	w0, #0x0
    359c:	b.eq	35b0 <read_expression+0x64>  // b.none
    35a0:	ldr	x0, [sp, #24]
    35a4:	bl	333c <peek_char>
    35a8:	cmp	w0, #0x22
    35ac:	b.ne	3588 <read_expression+0x3c>  // b.any
    35b0:	ldr	x0, [sp, #24]
    35b4:	ldr	w0, [x0, #8]
    35b8:	str	w0, [sp, #40]
    35bc:	ldr	x0, [sp, #24]
    35c0:	bl	329c <read_char>
    35c4:	b	36b8 <read_expression+0x16c>
    35c8:	ldr	x0, [sp, #24]
    35cc:	bl	333c <peek_char>
    35d0:	cmp	w0, #0x28
    35d4:	b.ne	3618 <read_expression+0xcc>  // b.any
    35d8:	ldr	x0, [sp, #24]
    35dc:	ldr	w0, [x0, #8]
    35e0:	str	w0, [sp, #44]
    35e4:	ldr	x0, [sp, #24]
    35e8:	bl	329c <read_char>
    35ec:	str	w0, [sp, #36]
    35f0:	ldr	w0, [sp, #36]
    35f4:	cmn	w0, #0x1
    35f8:	b.eq	3608 <read_expression+0xbc>  // b.none
    35fc:	ldr	w0, [sp, #36]
    3600:	cmp	w0, #0x29
    3604:	b.ne	35e4 <read_expression+0x98>  // b.any
    3608:	ldr	x0, [sp, #24]
    360c:	ldr	w0, [x0, #8]
    3610:	str	w0, [sp, #40]
    3614:	b	36b8 <read_expression+0x16c>
    3618:	ldr	x0, [sp, #24]
    361c:	bl	3270 <has_more>
    3620:	cmp	w0, #0x0
    3624:	b.eq	3678 <read_expression+0x12c>  // b.none
    3628:	ldr	x0, [sp, #24]
    362c:	ldr	w0, [x0, #8]
    3630:	str	w0, [sp, #44]
    3634:	b	3640 <read_expression+0xf4>
    3638:	ldr	x0, [sp, #24]
    363c:	bl	329c <read_char>
    3640:	ldr	x0, [sp, #24]
    3644:	bl	3270 <has_more>
    3648:	cmp	w0, #0x0
    364c:	b.eq	3668 <read_expression+0x11c>  // b.none
    3650:	ldr	x0, [sp, #24]
    3654:	bl	333c <peek_char>
    3658:	and	w0, w0, #0xff
    365c:	bl	3384 <is_whitespace>
    3660:	cmp	w0, #0x0
    3664:	b.eq	3638 <read_expression+0xec>  // b.none
    3668:	ldr	x0, [sp, #24]
    366c:	ldr	w0, [x0, #8]
    3670:	str	w0, [sp, #40]
    3674:	b	36b8 <read_expression+0x16c>
    3678:	ldr	x0, [sp, #24]
    367c:	ldr	x1, [x0, #24]
    3680:	ldr	x0, [sp, #24]
    3684:	ldr	w2, [x0, #16]
    3688:	ldr	x0, [sp, #24]
    368c:	ldr	w0, [x0, #20]
    3690:	mov	w4, w0
    3694:	mov	w3, w2
    3698:	mov	x2, x1
    369c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    36a0:	add	x0, x0, #0x0
    36a4:	ldr	x1, [x0]
    36a8:	mov	w0, #0x1d                  	// #29
    36ac:	bl	0 <grub_error>
    36b0:	mov	x0, #0x0                   	// #0
    36b4:	b	36cc <read_expression+0x180>
    36b8:	ldr	x0, [sp, #24]
    36bc:	ldr	x0, [x0]
    36c0:	ldrsw	x1, [sp, #44]
    36c4:	ldrsw	x2, [sp, #40]
    36c8:	bl	d520 <grub_new_substring>
    36cc:	ldp	x29, x30, [sp], #48
    36d0:	ret
    36d4:	nop
	...

00000000000036e0 <parse_proportional_spec>:
    36e0:	stp	x29, x30, [sp, #-64]!
    36e4:	mov	x29, sp
    36e8:	str	x0, [sp, #40]
    36ec:	str	x1, [sp, #32]
    36f0:	str	x2, [sp, #24]
    36f4:	str	wzr, [sp, #56]
    36f8:	ldr	x0, [sp, #32]
    36fc:	str	wzr, [x0]
    3700:	ldr	x0, [sp, #24]
    3704:	str	wzr, [x0]
    3708:	ldr	x0, [sp, #40]
    370c:	str	x0, [sp, #48]
    3710:	b	3824 <parse_proportional_spec+0x144>
    3714:	str	wzr, [sp, #56]
    3718:	b	374c <parse_proportional_spec+0x6c>
    371c:	ldr	x0, [sp, #48]
    3720:	ldrb	w0, [x0]
    3724:	cmp	w0, #0x2d
    3728:	b.ne	3740 <parse_proportional_spec+0x60>  // b.any
    372c:	ldr	w0, [sp, #56]
    3730:	cmp	w0, #0x0
    3734:	cset	w0, eq  // eq = none
    3738:	and	w0, w0, #0xff
    373c:	str	w0, [sp, #56]
    3740:	ldr	x0, [sp, #48]
    3744:	add	x0, x0, #0x1
    3748:	str	x0, [sp, #48]
    374c:	ldr	x0, [sp, #48]
    3750:	ldrb	w0, [x0]
    3754:	cmp	w0, #0x2d
    3758:	b.eq	371c <parse_proportional_spec+0x3c>  // b.none
    375c:	ldr	x0, [sp, #48]
    3760:	ldrb	w0, [x0]
    3764:	cmp	w0, #0x2b
    3768:	b.eq	371c <parse_proportional_spec+0x3c>  // b.none
    376c:	ldr	x0, [sp, #48]
    3770:	add	x1, sp, #0x30
    3774:	mov	w2, #0x0                   	// #0
    3778:	bl	0 <grub_strtoul>
    377c:	str	w0, [sp, #60]
    3780:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3784:	add	x0, x0, #0x0
    3788:	ldr	x0, [x0]
    378c:	ldr	w0, [x0]
    3790:	cmp	w0, #0x0
    3794:	b.eq	37ac <parse_proportional_spec+0xcc>  // b.none
    3798:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    379c:	add	x0, x0, #0x0
    37a0:	ldr	x0, [x0]
    37a4:	ldr	w0, [x0]
    37a8:	b	3838 <parse_proportional_spec+0x158>
    37ac:	ldr	w0, [sp, #56]
    37b0:	cmp	w0, #0x0
    37b4:	b.eq	37c4 <parse_proportional_spec+0xe4>  // b.none
    37b8:	ldr	w0, [sp, #60]
    37bc:	neg	w0, w0
    37c0:	str	w0, [sp, #60]
    37c4:	ldr	x0, [sp, #48]
    37c8:	ldrb	w0, [x0]
    37cc:	cmp	w0, #0x25
    37d0:	b.ne	380c <parse_proportional_spec+0x12c>  // b.any
    37d4:	ldr	w0, [sp, #60]
    37d8:	bl	26ac <grub_signed_to_fixed>
    37dc:	mov	w1, #0x64                  	// #100
    37e0:	bl	2654 <grub_fixed_fsf_divide>
    37e4:	mov	w1, w0
    37e8:	ldr	x0, [sp, #24]
    37ec:	ldr	w0, [x0]
    37f0:	add	w1, w1, w0
    37f4:	ldr	x0, [sp, #24]
    37f8:	str	w1, [x0]
    37fc:	ldr	x0, [sp, #48]
    3800:	add	x0, x0, #0x1
    3804:	str	x0, [sp, #48]
    3808:	b	3824 <parse_proportional_spec+0x144>
    380c:	ldr	x0, [sp, #32]
    3810:	ldr	w1, [x0]
    3814:	ldr	w0, [sp, #60]
    3818:	add	w1, w1, w0
    381c:	ldr	x0, [sp, #32]
    3820:	str	w1, [x0]
    3824:	ldr	x0, [sp, #48]
    3828:	ldrb	w0, [x0]
    382c:	cmp	w0, #0x0
    3830:	b.ne	3714 <parse_proportional_spec+0x34>  // b.any
    3834:	mov	w0, #0x0                   	// #0
    3838:	ldp	x29, x30, [sp], #64
    383c:	ret
	...

0000000000003848 <read_object>:
    3848:	stp	x29, x30, [sp, #-80]!
    384c:	mov	x29, sp
    3850:	str	x0, [sp, #24]
    3854:	str	x1, [sp, #16]
    3858:	ldr	x0, [sp, #24]
    385c:	bl	34c8 <read_identifier>
    3860:	str	x0, [sp, #64]
    3864:	ldr	x0, [sp, #64]
    3868:	cmp	x0, #0x0
    386c:	b.eq	3df8 <read_object+0x5b0>  // b.none
    3870:	str	xzr, [sp, #72]
    3874:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3878:	add	x0, x0, #0x0
    387c:	ldr	x1, [x0]
    3880:	ldr	x0, [sp, #64]
    3884:	bl	0 <grub_strcmp>
    3888:	cmp	w0, #0x0
    388c:	b.ne	389c <read_object+0x54>  // b.any
    3890:	bl	8900 <grub_gui_label_new>
    3894:	str	x0, [sp, #72]
    3898:	b	39f4 <read_object+0x1ac>
    389c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    38a0:	add	x0, x0, #0x0
    38a4:	ldr	x1, [x0]
    38a8:	ldr	x0, [sp, #64]
    38ac:	bl	0 <grub_strcmp>
    38b0:	cmp	w0, #0x0
    38b4:	b.ne	38c4 <read_object+0x7c>  // b.any
    38b8:	bl	bd70 <grub_gui_image_new>
    38bc:	str	x0, [sp, #72]
    38c0:	b	39f4 <read_object+0x1ac>
    38c4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    38c8:	add	x0, x0, #0x0
    38cc:	ldr	x1, [x0]
    38d0:	ldr	x0, [sp, #64]
    38d4:	bl	0 <grub_strcmp>
    38d8:	cmp	w0, #0x0
    38dc:	b.ne	38ec <read_object+0xa4>  // b.any
    38e0:	bl	7d40 <grub_gui_vbox_new>
    38e4:	str	x0, [sp, #72]
    38e8:	b	39f4 <read_object+0x1ac>
    38ec:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    38f0:	add	x0, x0, #0x0
    38f4:	ldr	x1, [x0]
    38f8:	ldr	x0, [sp, #64]
    38fc:	bl	0 <grub_strcmp>
    3900:	cmp	w0, #0x0
    3904:	b.ne	3914 <read_object+0xcc>  // b.any
    3908:	bl	7d18 <grub_gui_hbox_new>
    390c:	str	x0, [sp, #72]
    3910:	b	39f4 <read_object+0x1ac>
    3914:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3918:	add	x0, x0, #0x0
    391c:	ldr	x1, [x0]
    3920:	ldr	x0, [sp, #64]
    3924:	bl	0 <grub_strcmp>
    3928:	cmp	w0, #0x0
    392c:	b.ne	393c <read_object+0xf4>  // b.any
    3930:	bl	5b14 <grub_gui_canvas_new>
    3934:	str	x0, [sp, #72]
    3938:	b	39f4 <read_object+0x1ac>
    393c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3940:	add	x0, x0, #0x0
    3944:	ldr	x1, [x0]
    3948:	ldr	x0, [sp, #64]
    394c:	bl	0 <grub_strcmp>
    3950:	cmp	w0, #0x0
    3954:	b.ne	3964 <read_object+0x11c>  // b.any
    3958:	bl	d158 <grub_gui_progress_bar_new>
    395c:	str	x0, [sp, #72]
    3960:	b	39f4 <read_object+0x1ac>
    3964:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3968:	add	x0, x0, #0x0
    396c:	ldr	x1, [x0]
    3970:	ldr	x0, [sp, #64]
    3974:	bl	0 <grub_strcmp>
    3978:	cmp	w0, #0x0
    397c:	b.ne	398c <read_object+0x144>  // b.any
    3980:	bl	6be0 <grub_gui_circular_progress_new>
    3984:	str	x0, [sp, #72]
    3988:	b	39f4 <read_object+0x1ac>
    398c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3990:	add	x0, x0, #0x0
    3994:	ldr	x1, [x0]
    3998:	ldr	x0, [sp, #64]
    399c:	bl	0 <grub_strcmp>
    39a0:	cmp	w0, #0x0
    39a4:	b.ne	39b4 <read_object+0x16c>  // b.any
    39a8:	bl	b194 <grub_gui_list_new>
    39ac:	str	x0, [sp, #72]
    39b0:	b	39f4 <read_object+0x1ac>
    39b4:	ldr	x0, [sp, #24]
    39b8:	ldr	x1, [x0, #24]
    39bc:	ldr	x0, [sp, #24]
    39c0:	ldr	w2, [x0, #16]
    39c4:	ldr	x0, [sp, #24]
    39c8:	ldr	w0, [x0, #20]
    39cc:	ldr	x5, [sp, #64]
    39d0:	mov	w4, w0
    39d4:	mov	w3, w2
    39d8:	mov	x2, x1
    39dc:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    39e0:	add	x0, x0, #0x0
    39e4:	ldr	x1, [x0]
    39e8:	mov	w0, #0x1d                  	// #29
    39ec:	bl	0 <grub_error>
    39f0:	b	3e14 <read_object+0x5cc>
    39f4:	ldr	x0, [sp, #72]
    39f8:	cmp	x0, #0x0
    39fc:	b.eq	3e00 <read_object+0x5b8>  // b.none
    3a00:	ldr	x0, [sp, #72]
    3a04:	ldr	x0, [x0]
    3a08:	ldr	x3, [x0, #72]
    3a0c:	ldr	x0, [sp, #24]
    3a10:	ldr	x0, [x0, #32]
    3a14:	mov	x2, x0
    3a18:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3a1c:	add	x0, x0, #0x0
    3a20:	ldr	x1, [x0]
    3a24:	ldr	x0, [sp, #72]
    3a28:	blr	x3
    3a2c:	ldr	x0, [sp, #72]
    3a30:	ldr	x0, [x0]
    3a34:	ldr	x3, [x0, #72]
    3a38:	ldr	x0, [sp, #24]
    3a3c:	ldr	x0, [x0, #24]
    3a40:	mov	x2, x0
    3a44:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3a48:	add	x0, x0, #0x0
    3a4c:	ldr	x1, [x0]
    3a50:	ldr	x0, [sp, #72]
    3a54:	blr	x3
    3a58:	str	wzr, [sp, #32]
    3a5c:	str	wzr, [sp, #36]
    3a60:	mov	w0, #0xffffffff            	// #-1
    3a64:	str	w0, [sp, #40]
    3a68:	mov	w0, #0xffffffff            	// #-1
    3a6c:	str	w0, [sp, #44]
    3a70:	ldr	x0, [sp, #72]
    3a74:	ldr	x0, [x0]
    3a78:	ldr	x2, [x0, #48]
    3a7c:	add	x0, sp, #0x20
    3a80:	mov	x1, x0
    3a84:	ldr	x0, [sp, #72]
    3a88:	blr	x2
    3a8c:	ldr	x0, [sp, #16]
    3a90:	ldr	x0, [x0, #40]
    3a94:	ldr	x2, [x0]
    3a98:	ldr	x1, [sp, #72]
    3a9c:	ldr	x0, [sp, #16]
    3aa0:	blr	x2
    3aa4:	ldr	x0, [sp, #24]
    3aa8:	bl	33dc <skip_whitespace>
    3aac:	ldr	x0, [sp, #24]
    3ab0:	bl	329c <read_char>
    3ab4:	cmp	w0, #0x7b
    3ab8:	b.eq	3de4 <read_object+0x59c>  // b.none
    3abc:	ldr	x0, [sp, #24]
    3ac0:	ldr	x1, [x0, #24]
    3ac4:	ldr	x0, [sp, #24]
    3ac8:	ldr	w2, [x0, #16]
    3acc:	ldr	x0, [sp, #24]
    3ad0:	ldr	w0, [x0, #20]
    3ad4:	ldr	x5, [sp, #64]
    3ad8:	mov	w4, w0
    3adc:	mov	w3, w2
    3ae0:	mov	x2, x1
    3ae4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3ae8:	add	x0, x0, #0x0
    3aec:	ldr	x1, [x0]
    3af0:	mov	w0, #0x1d                  	// #29
    3af4:	bl	0 <grub_error>
    3af8:	b	3e14 <read_object+0x5cc>
    3afc:	ldr	x0, [sp, #24]
    3b00:	bl	33dc <skip_whitespace>
    3b04:	ldr	x0, [sp, #24]
    3b08:	bl	333c <peek_char>
    3b0c:	cmp	w0, #0x7d
    3b10:	b.ne	3b20 <read_object+0x2d8>  // b.any
    3b14:	ldr	x0, [sp, #24]
    3b18:	bl	329c <read_char>
    3b1c:	b	3e14 <read_object+0x5cc>
    3b20:	ldr	x0, [sp, #24]
    3b24:	bl	333c <peek_char>
    3b28:	cmp	w0, #0x23
    3b2c:	b.ne	3b3c <read_object+0x2f4>  // b.any
    3b30:	ldr	x0, [sp, #24]
    3b34:	bl	3428 <advance_to_next_line>
    3b38:	b	3de4 <read_object+0x59c>
    3b3c:	ldr	x0, [sp, #24]
    3b40:	bl	333c <peek_char>
    3b44:	cmp	w0, #0x2b
    3b48:	b.ne	3bd0 <read_object+0x388>  // b.any
    3b4c:	ldr	x0, [sp, #24]
    3b50:	bl	329c <read_char>
    3b54:	ldr	x0, [sp, #72]
    3b58:	ldr	x0, [x0]
    3b5c:	ldr	x2, [x0, #16]
    3b60:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3b64:	add	x0, x0, #0x0
    3b68:	ldr	x1, [x0]
    3b6c:	ldr	x0, [sp, #72]
    3b70:	blr	x2
    3b74:	cmp	w0, #0x0
    3b78:	b.eq	3b94 <read_object+0x34c>  // b.none
    3b7c:	ldr	x1, [sp, #72]
    3b80:	ldr	x0, [sp, #24]
    3b84:	bl	3848 <read_object>
    3b88:	cmp	w0, #0x0
    3b8c:	b.ne	3e08 <read_object+0x5c0>  // b.any
    3b90:	b	3de4 <read_object+0x59c>
    3b94:	ldr	x0, [sp, #24]
    3b98:	ldr	x1, [x0, #24]
    3b9c:	ldr	x0, [sp, #24]
    3ba0:	ldr	w2, [x0, #16]
    3ba4:	ldr	x0, [sp, #24]
    3ba8:	ldr	w0, [x0, #20]
    3bac:	mov	w4, w0
    3bb0:	mov	w3, w2
    3bb4:	mov	x2, x1
    3bb8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3bbc:	add	x0, x0, #0x0
    3bc0:	ldr	x1, [x0]
    3bc4:	mov	w0, #0x1d                  	// #29
    3bc8:	bl	0 <grub_error>
    3bcc:	b	3e14 <read_object+0x5cc>
    3bd0:	ldr	x0, [sp, #24]
    3bd4:	bl	34c8 <read_identifier>
    3bd8:	str	x0, [sp, #56]
    3bdc:	ldr	x0, [sp, #56]
    3be0:	cmp	x0, #0x0
    3be4:	b.ne	3c24 <read_object+0x3dc>  // b.any
    3be8:	ldr	x0, [sp, #24]
    3bec:	ldr	x1, [x0, #24]
    3bf0:	ldr	x0, [sp, #24]
    3bf4:	ldr	w2, [x0, #16]
    3bf8:	ldr	x0, [sp, #24]
    3bfc:	ldr	w0, [x0, #20]
    3c00:	mov	w4, w0
    3c04:	mov	w3, w2
    3c08:	mov	x2, x1
    3c0c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3c10:	add	x0, x0, #0x0
    3c14:	ldr	x1, [x0]
    3c18:	mov	w0, #0x1d                  	// #29
    3c1c:	bl	0 <grub_error>
    3c20:	b	3e14 <read_object+0x5cc>
    3c24:	ldr	x0, [sp, #24]
    3c28:	bl	33dc <skip_whitespace>
    3c2c:	ldr	x0, [sp, #24]
    3c30:	bl	329c <read_char>
    3c34:	cmp	w0, #0x3d
    3c38:	b.eq	3c84 <read_object+0x43c>  // b.none
    3c3c:	ldr	x0, [sp, #24]
    3c40:	ldr	x1, [x0, #24]
    3c44:	ldr	x0, [sp, #24]
    3c48:	ldr	w2, [x0, #16]
    3c4c:	ldr	x0, [sp, #24]
    3c50:	ldr	w0, [x0, #20]
    3c54:	ldr	x5, [sp, #56]
    3c58:	mov	w4, w0
    3c5c:	mov	w3, w2
    3c60:	mov	x2, x1
    3c64:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3c68:	add	x0, x0, #0x0
    3c6c:	ldr	x1, [x0]
    3c70:	mov	w0, #0x1d                  	// #29
    3c74:	bl	0 <grub_error>
    3c78:	ldr	x0, [sp, #56]
    3c7c:	bl	0 <grub_free>
    3c80:	b	3e14 <read_object+0x5cc>
    3c84:	ldr	x0, [sp, #24]
    3c88:	bl	33dc <skip_whitespace>
    3c8c:	ldr	x0, [sp, #24]
    3c90:	bl	354c <read_expression>
    3c94:	str	x0, [sp, #48]
    3c98:	ldr	x0, [sp, #48]
    3c9c:	cmp	x0, #0x0
    3ca0:	b.ne	3cb0 <read_object+0x468>  // b.any
    3ca4:	ldr	x0, [sp, #56]
    3ca8:	bl	0 <grub_free>
    3cac:	b	3e14 <read_object+0x5cc>
    3cb0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3cb4:	add	x0, x0, #0x0
    3cb8:	ldr	x1, [x0]
    3cbc:	ldr	x0, [sp, #56]
    3cc0:	bl	0 <grub_strcmp>
    3cc4:	cmp	w0, #0x0
    3cc8:	b.ne	3cec <read_object+0x4a4>  // b.any
    3ccc:	ldr	x0, [sp, #72]
    3cd0:	add	x1, x0, #0x8
    3cd4:	ldr	x0, [sp, #72]
    3cd8:	add	x0, x0, #0xc
    3cdc:	mov	x2, x0
    3ce0:	ldr	x0, [sp, #48]
    3ce4:	bl	36e0 <parse_proportional_spec>
    3ce8:	b	3dbc <read_object+0x574>
    3cec:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3cf0:	add	x0, x0, #0x0
    3cf4:	ldr	x1, [x0]
    3cf8:	ldr	x0, [sp, #56]
    3cfc:	bl	0 <grub_strcmp>
    3d00:	cmp	w0, #0x0
    3d04:	b.ne	3d28 <read_object+0x4e0>  // b.any
    3d08:	ldr	x0, [sp, #72]
    3d0c:	add	x1, x0, #0x10
    3d10:	ldr	x0, [sp, #72]
    3d14:	add	x0, x0, #0x14
    3d18:	mov	x2, x0
    3d1c:	ldr	x0, [sp, #48]
    3d20:	bl	36e0 <parse_proportional_spec>
    3d24:	b	3dbc <read_object+0x574>
    3d28:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3d2c:	add	x0, x0, #0x0
    3d30:	ldr	x1, [x0]
    3d34:	ldr	x0, [sp, #56]
    3d38:	bl	0 <grub_strcmp>
    3d3c:	cmp	w0, #0x0
    3d40:	b.ne	3d64 <read_object+0x51c>  // b.any
    3d44:	ldr	x0, [sp, #72]
    3d48:	add	x1, x0, #0x18
    3d4c:	ldr	x0, [sp, #72]
    3d50:	add	x0, x0, #0x1c
    3d54:	mov	x2, x0
    3d58:	ldr	x0, [sp, #48]
    3d5c:	bl	36e0 <parse_proportional_spec>
    3d60:	b	3dbc <read_object+0x574>
    3d64:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3d68:	add	x0, x0, #0x0
    3d6c:	ldr	x1, [x0]
    3d70:	ldr	x0, [sp, #56]
    3d74:	bl	0 <grub_strcmp>
    3d78:	cmp	w0, #0x0
    3d7c:	b.ne	3da0 <read_object+0x558>  // b.any
    3d80:	ldr	x0, [sp, #72]
    3d84:	add	x1, x0, #0x20
    3d88:	ldr	x0, [sp, #72]
    3d8c:	add	x0, x0, #0x24
    3d90:	mov	x2, x0
    3d94:	ldr	x0, [sp, #48]
    3d98:	bl	36e0 <parse_proportional_spec>
    3d9c:	b	3dbc <read_object+0x574>
    3da0:	ldr	x0, [sp, #72]
    3da4:	ldr	x0, [x0]
    3da8:	ldr	x3, [x0, #72]
    3dac:	ldr	x2, [sp, #48]
    3db0:	ldr	x1, [sp, #56]
    3db4:	ldr	x0, [sp, #72]
    3db8:	blr	x3
    3dbc:	ldr	x0, [sp, #48]
    3dc0:	bl	0 <grub_free>
    3dc4:	ldr	x0, [sp, #56]
    3dc8:	bl	0 <grub_free>
    3dcc:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3dd0:	add	x0, x0, #0x0
    3dd4:	ldr	x0, [x0]
    3dd8:	ldr	w0, [x0]
    3ddc:	cmp	w0, #0x0
    3de0:	b.ne	3e10 <read_object+0x5c8>  // b.any
    3de4:	ldr	x0, [sp, #24]
    3de8:	bl	3270 <has_more>
    3dec:	cmp	w0, #0x0
    3df0:	b.ne	3afc <read_object+0x2b4>  // b.any
    3df4:	b	3e14 <read_object+0x5cc>
    3df8:	nop
    3dfc:	b	3e14 <read_object+0x5cc>
    3e00:	nop
    3e04:	b	3e14 <read_object+0x5cc>
    3e08:	nop
    3e0c:	b	3e14 <read_object+0x5cc>
    3e10:	nop
    3e14:	ldr	x0, [sp, #64]
    3e18:	bl	0 <grub_free>
    3e1c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3e20:	add	x0, x0, #0x0
    3e24:	ldr	x0, [x0]
    3e28:	ldr	w0, [x0]
    3e2c:	ldp	x29, x30, [sp], #80
    3e30:	ret
    3e34:	nop
	...

0000000000003ee0 <read_property>:
    3ee0:	stp	x29, x30, [sp, #-48]!
    3ee4:	mov	x29, sp
    3ee8:	str	x0, [sp, #24]
    3eec:	ldr	x0, [sp, #24]
    3ef0:	bl	34c8 <read_identifier>
    3ef4:	str	x0, [sp, #40]
    3ef8:	ldr	x0, [sp, #40]
    3efc:	cmp	x0, #0x0
    3f00:	b.ne	3f20 <read_property+0x40>  // b.any
    3f04:	ldr	x0, [sp, #24]
    3f08:	bl	3428 <advance_to_next_line>
    3f0c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3f10:	add	x0, x0, #0x0
    3f14:	ldr	x0, [x0]
    3f18:	ldr	w0, [x0]
    3f1c:	b	408c <read_property+0x1ac>
    3f20:	ldr	x0, [sp, #24]
    3f24:	bl	33dc <skip_whitespace>
    3f28:	ldr	x0, [sp, #24]
    3f2c:	bl	329c <read_char>
    3f30:	cmp	w0, #0x3a
    3f34:	b.eq	3f78 <read_property+0x98>  // b.none
    3f38:	ldr	x0, [sp, #24]
    3f3c:	ldr	x1, [x0, #24]
    3f40:	ldr	x0, [sp, #24]
    3f44:	ldr	w2, [x0, #16]
    3f48:	ldr	x0, [sp, #24]
    3f4c:	ldr	w0, [x0, #20]
    3f50:	ldr	x5, [sp, #40]
    3f54:	mov	w4, w0
    3f58:	mov	w3, w2
    3f5c:	mov	x2, x1
    3f60:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3f64:	add	x0, x0, #0x0
    3f68:	ldr	x1, [x0]
    3f6c:	mov	w0, #0x1d                  	// #29
    3f70:	bl	0 <grub_error>
    3f74:	b	4074 <read_property+0x194>
    3f78:	ldr	x0, [sp, #24]
    3f7c:	bl	33dc <skip_whitespace>
    3f80:	ldr	x0, [sp, #24]
    3f84:	bl	333c <peek_char>
    3f88:	cmp	w0, #0x22
    3f8c:	b.ne	4038 <read_property+0x158>  // b.any
    3f90:	ldr	x0, [sp, #24]
    3f94:	bl	354c <read_expression>
    3f98:	str	x0, [sp, #32]
    3f9c:	ldr	x0, [sp, #32]
    3fa0:	cmp	x0, #0x0
    3fa4:	b.ne	3fe4 <read_property+0x104>  // b.any
    3fa8:	ldr	x0, [sp, #24]
    3fac:	ldr	x1, [x0, #24]
    3fb0:	ldr	x0, [sp, #24]
    3fb4:	ldr	w2, [x0, #16]
    3fb8:	ldr	x0, [sp, #24]
    3fbc:	ldr	w0, [x0, #20]
    3fc0:	mov	w4, w0
    3fc4:	mov	w3, w2
    3fc8:	mov	x2, x1
    3fcc:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    3fd0:	add	x0, x0, #0x0
    3fd4:	ldr	x1, [x0]
    3fd8:	mov	w0, #0x1d                  	// #29
    3fdc:	bl	0 <grub_error>
    3fe0:	b	4074 <read_property+0x194>
    3fe4:	ldr	x0, [sp, #24]
    3fe8:	ldr	x7, [x0, #40]
    3fec:	ldr	x0, [sp, #24]
    3ff0:	ldr	x1, [x0, #32]
    3ff4:	ldr	x0, [sp, #24]
    3ff8:	ldr	x2, [x0, #24]
    3ffc:	ldr	x0, [sp, #24]
    4000:	ldr	w3, [x0, #16]
    4004:	ldr	x0, [sp, #24]
    4008:	ldr	w0, [x0, #20]
    400c:	mov	w6, w0
    4010:	mov	w5, w3
    4014:	mov	x4, x2
    4018:	mov	x3, x1
    401c:	ldr	x2, [sp, #32]
    4020:	ldr	x1, [sp, #40]
    4024:	mov	x0, x7
    4028:	bl	29b0 <theme_set_string>
    402c:	ldr	x0, [sp, #32]
    4030:	bl	0 <grub_free>
    4034:	b	4074 <read_property+0x194>
    4038:	ldr	x0, [sp, #24]
    403c:	ldr	x1, [x0, #24]
    4040:	ldr	x0, [sp, #24]
    4044:	ldr	w2, [x0, #16]
    4048:	ldr	x0, [sp, #24]
    404c:	ldr	w0, [x0, #20]
    4050:	mov	w4, w0
    4054:	mov	w3, w2
    4058:	mov	x2, x1
    405c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    4060:	add	x0, x0, #0x0
    4064:	ldr	x1, [x0]
    4068:	mov	w0, #0x1d                  	// #29
    406c:	bl	0 <grub_error>
    4070:	nop
    4074:	ldr	x0, [sp, #40]
    4078:	bl	0 <grub_free>
    407c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    4080:	add	x0, x0, #0x0
    4084:	ldr	x0, [x0]
    4088:	ldr	w0, [x0]
    408c:	ldp	x29, x30, [sp], #48
    4090:	ret
    4094:	nop
	...

00000000000040b8 <grub_gfxmenu_view_load_theme>:
    40b8:	stp	x29, x30, [sp, #-96]!
    40bc:	mov	x29, sp
    40c0:	str	x0, [sp, #24]
    40c4:	str	x1, [sp, #16]
    40c8:	ldr	x0, [sp, #24]
    40cc:	str	x0, [sp, #80]
    40d0:	ldr	x0, [sp, #16]
    40d4:	bl	db00 <grub_get_dirname>
    40d8:	str	x0, [sp, #72]
    40dc:	mov	w1, #0x34                  	// #52
    40e0:	ldr	x0, [sp, #16]
    40e4:	bl	0 <grub_file_open>
    40e8:	str	x0, [sp, #88]
    40ec:	ldr	x0, [sp, #88]
    40f0:	cmp	x0, #0x0
    40f4:	b.ne	4114 <grub_gfxmenu_view_load_theme+0x5c>  // b.any
    40f8:	ldr	x0, [sp, #72]
    40fc:	bl	0 <grub_free>
    4100:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    4104:	add	x0, x0, #0x0
    4108:	ldr	x0, [x0]
    410c:	ldr	w0, [x0]
    4110:	b	435c <grub_gfxmenu_view_load_theme+0x2a4>
    4114:	ldr	x0, [sp, #88]
    4118:	bl	24d8 <grub_file_size>
    411c:	str	w0, [sp, #52]
    4120:	ldr	w0, [sp, #52]
    4124:	sxtw	x0, w0
    4128:	bl	0 <grub_malloc>
    412c:	str	x0, [sp, #40]
    4130:	str	wzr, [sp, #48]
    4134:	mov	w0, #0x1                   	// #1
    4138:	str	w0, [sp, #56]
    413c:	mov	w0, #0x1                   	// #1
    4140:	str	w0, [sp, #60]
    4144:	ldr	x0, [sp, #16]
    4148:	str	x0, [sp, #64]
    414c:	ldr	x0, [sp, #40]
    4150:	cmp	x0, #0x0
    4154:	b.ne	417c <grub_gfxmenu_view_load_theme+0xc4>  // b.any
    4158:	ldr	x0, [sp, #88]
    415c:	bl	0 <grub_file_close>
    4160:	ldr	x0, [sp, #72]
    4164:	bl	0 <grub_free>
    4168:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    416c:	add	x0, x0, #0x0
    4170:	ldr	x0, [x0]
    4174:	ldr	w0, [x0]
    4178:	b	435c <grub_gfxmenu_view_load_theme+0x2a4>
    417c:	ldr	x0, [sp, #40]
    4180:	ldr	w1, [sp, #52]
    4184:	sxtw	x1, w1
    4188:	mov	x2, x1
    418c:	mov	x1, x0
    4190:	ldr	x0, [sp, #88]
    4194:	bl	0 <grub_file_read>
    4198:	mov	x1, x0
    419c:	ldr	w0, [sp, #52]
    41a0:	sxtw	x0, w0
    41a4:	cmp	x1, x0
    41a8:	b.eq	41d8 <grub_gfxmenu_view_load_theme+0x120>  // b.none
    41ac:	ldr	x0, [sp, #40]
    41b0:	bl	0 <grub_free>
    41b4:	ldr	x0, [sp, #88]
    41b8:	bl	0 <grub_file_close>
    41bc:	ldr	x0, [sp, #72]
    41c0:	bl	0 <grub_free>
    41c4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    41c8:	add	x0, x0, #0x0
    41cc:	ldr	x0, [x0]
    41d0:	ldr	w0, [x0]
    41d4:	b	435c <grub_gfxmenu_view_load_theme+0x2a4>
    41d8:	ldr	x0, [sp, #24]
    41dc:	ldr	x0, [x0, #144]
    41e0:	cmp	x0, #0x0
    41e4:	b.eq	4204 <grub_gfxmenu_view_load_theme+0x14c>  // b.none
    41e8:	ldr	x0, [sp, #24]
    41ec:	ldr	x0, [x0, #144]
    41f0:	ldr	x0, [x0]
    41f4:	ldr	x1, [x0]
    41f8:	ldr	x0, [sp, #24]
    41fc:	ldr	x0, [x0, #144]
    4200:	blr	x1
    4204:	bl	5b14 <grub_gui_canvas_new>
    4208:	mov	x1, x0
    420c:	ldr	x0, [sp, #24]
    4210:	str	x1, [x0, #144]
    4214:	ldr	x0, [sp, #24]
    4218:	ldr	x0, [x0, #144]
    421c:	cmp	x0, #0x0
    4220:	b.eq	42ec <grub_gfxmenu_view_load_theme+0x234>  // b.none
    4224:	ldr	x0, [sp, #24]
    4228:	ldr	x0, [x0, #144]
    422c:	ldr	x0, [x0]
    4230:	ldr	x2, [x0, #48]
    4234:	ldr	x0, [sp, #24]
    4238:	ldr	x0, [x0, #144]
    423c:	ldr	x1, [sp, #24]
    4240:	blr	x2
    4244:	b	42b8 <grub_gfxmenu_view_load_theme+0x200>
    4248:	add	x0, sp, #0x28
    424c:	bl	333c <peek_char>
    4250:	cmp	w0, #0x23
    4254:	b.ne	4264 <grub_gfxmenu_view_load_theme+0x1ac>  // b.any
    4258:	add	x0, sp, #0x28
    425c:	bl	3428 <advance_to_next_line>
    4260:	b	42b8 <grub_gfxmenu_view_load_theme+0x200>
    4264:	add	x0, sp, #0x28
    4268:	bl	33dc <skip_whitespace>
    426c:	add	x0, sp, #0x28
    4270:	bl	333c <peek_char>
    4274:	cmp	w0, #0x2b
    4278:	b.ne	4298 <grub_gfxmenu_view_load_theme+0x1e0>  // b.any
    427c:	add	x0, sp, #0x28
    4280:	bl	329c <read_char>
    4284:	ldr	x0, [sp, #24]
    4288:	ldr	x1, [x0, #144]
    428c:	add	x0, sp, #0x28
    4290:	bl	3848 <read_object>
    4294:	b	42a0 <grub_gfxmenu_view_load_theme+0x1e8>
    4298:	add	x0, sp, #0x28
    429c:	bl	3ee0 <read_property>
    42a0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    42a4:	add	x0, x0, #0x0
    42a8:	ldr	x0, [x0]
    42ac:	ldr	w0, [x0]
    42b0:	cmp	w0, #0x0
    42b4:	b.ne	42f4 <grub_gfxmenu_view_load_theme+0x23c>  // b.any
    42b8:	add	x0, sp, #0x28
    42bc:	bl	3270 <has_more>
    42c0:	cmp	w0, #0x0
    42c4:	b.ne	4248 <grub_gfxmenu_view_load_theme+0x190>  // b.any
    42c8:	ldr	x0, [sp, #24]
    42cc:	ldr	x0, [x0, #136]
    42d0:	bl	0 <grub_free>
    42d4:	ldr	x0, [sp, #16]
    42d8:	bl	0 <grub_strdup>
    42dc:	mov	x1, x0
    42e0:	ldr	x0, [sp, #24]
    42e4:	str	x1, [x0, #136]
    42e8:	b	4334 <grub_gfxmenu_view_load_theme+0x27c>
    42ec:	nop
    42f0:	b	42f8 <grub_gfxmenu_view_load_theme+0x240>
    42f4:	nop
    42f8:	ldr	x0, [sp, #24]
    42fc:	ldr	x0, [x0, #144]
    4300:	cmp	x0, #0x0
    4304:	b.eq	4330 <grub_gfxmenu_view_load_theme+0x278>  // b.none
    4308:	ldr	x0, [sp, #24]
    430c:	ldr	x0, [x0, #144]
    4310:	ldr	x0, [x0]
    4314:	ldr	x1, [x0]
    4318:	ldr	x0, [sp, #24]
    431c:	ldr	x0, [x0, #144]
    4320:	blr	x1
    4324:	ldr	x0, [sp, #24]
    4328:	str	xzr, [x0, #144]
    432c:	b	4334 <grub_gfxmenu_view_load_theme+0x27c>
    4330:	nop
    4334:	ldr	x0, [sp, #40]
    4338:	bl	0 <grub_free>
    433c:	ldr	x0, [sp, #88]
    4340:	bl	0 <grub_file_close>
    4344:	ldr	x0, [sp, #72]
    4348:	bl	0 <grub_free>
    434c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    4350:	add	x0, x0, #0x0
    4354:	ldr	x0, [x0]
    4358:	ldr	w0, [x0]
    435c:	ldp	x29, x30, [sp], #96
    4360:	ret
    4364:	nop
	...

0000000000004370 <grub_stpcpy>:
    4370:	sub	sp, sp, #0x20
    4374:	str	x0, [sp, #8]
    4378:	str	x1, [sp]
    437c:	ldr	x0, [sp, #8]
    4380:	str	x0, [sp, #24]
    4384:	ldr	x0, [sp]
    4388:	str	x0, [sp, #16]
    438c:	ldr	x0, [sp, #24]
    4390:	add	x1, x0, #0x1
    4394:	str	x1, [sp, #24]
    4398:	ldr	x1, [sp, #16]
    439c:	ldrb	w1, [x1]
    43a0:	strb	w1, [x0]
    43a4:	ldr	x0, [sp, #16]
    43a8:	add	x1, x0, #0x1
    43ac:	str	x1, [sp, #16]
    43b0:	ldrb	w0, [x0]
    43b4:	cmp	w0, #0x0
    43b8:	b.ne	438c <grub_stpcpy+0x1c>  // b.any
    43bc:	ldr	x0, [sp, #24]
    43c0:	sub	x0, x0, #0x1
    43c4:	add	sp, sp, #0x20
    43c8:	ret

00000000000043cc <grub_video_bitmap_get_width>:
    43cc:	sub	sp, sp, #0x10
    43d0:	str	x0, [sp, #8]
    43d4:	ldr	x0, [sp, #8]
    43d8:	cmp	x0, #0x0
    43dc:	b.ne	43e8 <grub_video_bitmap_get_width+0x1c>  // b.any
    43e0:	mov	w0, #0x0                   	// #0
    43e4:	b	43f0 <grub_video_bitmap_get_width+0x24>
    43e8:	ldr	x0, [sp, #8]
    43ec:	ldr	w0, [x0]
    43f0:	add	sp, sp, #0x10
    43f4:	ret

00000000000043f8 <grub_video_bitmap_get_height>:
    43f8:	sub	sp, sp, #0x10
    43fc:	str	x0, [sp, #8]
    4400:	ldr	x0, [sp, #8]
    4404:	cmp	x0, #0x0
    4408:	b.ne	4414 <grub_video_bitmap_get_height+0x1c>  // b.any
    440c:	mov	w0, #0x0                   	// #0
    4410:	b	441c <grub_video_bitmap_get_height+0x24>
    4414:	ldr	x0, [sp, #8]
    4418:	ldr	w0, [x0, #4]
    441c:	add	sp, sp, #0x10
    4420:	ret

0000000000004424 <get_height>:
    4424:	stp	x29, x30, [sp, #-32]!
    4428:	mov	x29, sp
    442c:	str	x0, [sp, #24]
    4430:	ldr	x0, [sp, #24]
    4434:	cmp	x0, #0x0
    4438:	b.eq	4448 <get_height+0x24>  // b.none
    443c:	ldr	x0, [sp, #24]
    4440:	bl	43f8 <grub_video_bitmap_get_height>
    4444:	b	444c <get_height+0x28>
    4448:	mov	w0, #0x0                   	// #0
    444c:	ldp	x29, x30, [sp], #32
    4450:	ret

0000000000004454 <get_width>:
    4454:	stp	x29, x30, [sp, #-32]!
    4458:	mov	x29, sp
    445c:	str	x0, [sp, #24]
    4460:	ldr	x0, [sp, #24]
    4464:	cmp	x0, #0x0
    4468:	b.eq	4478 <get_width+0x24>  // b.none
    446c:	ldr	x0, [sp, #24]
    4470:	bl	43cc <grub_video_bitmap_get_width>
    4474:	b	447c <get_width+0x28>
    4478:	mov	w0, #0x0                   	// #0
    447c:	ldp	x29, x30, [sp], #32
    4480:	ret

0000000000004484 <blit>:
    4484:	stp	x29, x30, [sp, #-80]!
    4488:	mov	x29, sp
    448c:	str	x19, [sp, #16]
    4490:	str	x0, [sp, #56]
    4494:	str	w1, [sp, #52]
    4498:	str	w2, [sp, #48]
    449c:	str	w3, [sp, #44]
    44a0:	ldr	x0, [sp, #56]
    44a4:	ldr	x1, [x0, #16]
    44a8:	ldrsw	x0, [sp, #52]
    44ac:	lsl	x0, x0, #3
    44b0:	add	x0, x1, x0
    44b4:	ldr	x0, [x0]
    44b8:	str	x0, [sp, #72]
    44bc:	ldr	x0, [sp, #72]
    44c0:	cmp	x0, #0x0
    44c4:	b.eq	4504 <blit+0x80>  // b.none
    44c8:	ldr	x0, [sp, #72]
    44cc:	bl	43cc <grub_video_bitmap_get_width>
    44d0:	mov	w19, w0
    44d4:	ldr	x0, [sp, #72]
    44d8:	bl	43f8 <grub_video_bitmap_get_height>
    44dc:	mov	w7, w0
    44e0:	mov	w6, w19
    44e4:	mov	w5, #0x0                   	// #0
    44e8:	mov	w4, #0x0                   	// #0
    44ec:	ldr	w3, [sp, #44]
    44f0:	ldr	w2, [sp, #48]
    44f4:	mov	w1, #0x1                   	// #1
    44f8:	ldr	x0, [sp, #72]
    44fc:	bl	0 <grub_video_blit_bitmap>
    4500:	b	4508 <blit+0x84>
    4504:	nop
    4508:	ldr	x19, [sp, #16]
    450c:	ldp	x29, x30, [sp], #80
    4510:	ret

0000000000004514 <draw>:
    4514:	stp	x29, x30, [sp, #-48]!
    4518:	mov	x29, sp
    451c:	str	x0, [sp, #24]
    4520:	str	w1, [sp, #20]
    4524:	str	w2, [sp, #16]
    4528:	ldr	x0, [sp, #24]
    452c:	ldr	x0, [x0, #16]
    4530:	ldr	x0, [x0]
    4534:	bl	4424 <get_height>
    4538:	str	w0, [sp, #44]
    453c:	ldr	x0, [sp, #24]
    4540:	ldr	x0, [x0, #16]
    4544:	add	x0, x0, #0x20
    4548:	ldr	x0, [x0]
    454c:	bl	4424 <get_height>
    4550:	str	w0, [sp, #36]
    4554:	ldr	w1, [sp, #36]
    4558:	ldr	w0, [sp, #44]
    455c:	cmp	w1, w0
    4560:	b.le	456c <draw+0x58>
    4564:	ldr	w0, [sp, #36]
    4568:	str	w0, [sp, #44]
    456c:	ldr	x0, [sp, #24]
    4570:	ldr	x0, [x0, #16]
    4574:	add	x0, x0, #0x8
    4578:	ldr	x0, [x0]
    457c:	bl	4424 <get_height>
    4580:	str	w0, [sp, #36]
    4584:	ldr	w1, [sp, #36]
    4588:	ldr	w0, [sp, #44]
    458c:	cmp	w1, w0
    4590:	b.le	459c <draw+0x88>
    4594:	ldr	w0, [sp, #36]
    4598:	str	w0, [sp, #44]
    459c:	ldr	x0, [sp, #24]
    45a0:	ldr	x0, [x0, #16]
    45a4:	ldr	x0, [x0]
    45a8:	bl	4454 <get_width>
    45ac:	str	w0, [sp, #40]
    45b0:	ldr	x0, [sp, #24]
    45b4:	ldr	x0, [x0, #16]
    45b8:	add	x0, x0, #0x38
    45bc:	ldr	x0, [x0]
    45c0:	bl	4454 <get_width>
    45c4:	str	w0, [sp, #36]
    45c8:	ldr	w1, [sp, #36]
    45cc:	ldr	w0, [sp, #40]
    45d0:	cmp	w1, w0
    45d4:	b.le	45e0 <draw+0xcc>
    45d8:	ldr	w0, [sp, #36]
    45dc:	str	w0, [sp, #40]
    45e0:	ldr	x0, [sp, #24]
    45e4:	ldr	x0, [x0, #16]
    45e8:	add	x0, x0, #0x18
    45ec:	ldr	x0, [x0]
    45f0:	bl	4454 <get_width>
    45f4:	str	w0, [sp, #36]
    45f8:	ldr	w1, [sp, #36]
    45fc:	ldr	w0, [sp, #40]
    4600:	cmp	w1, w0
    4604:	b.le	4610 <draw+0xfc>
    4608:	ldr	w0, [sp, #36]
    460c:	str	w0, [sp, #40]
    4610:	ldr	w1, [sp, #20]
    4614:	ldr	w0, [sp, #40]
    4618:	add	w0, w1, w0
    461c:	ldr	w3, [sp, #16]
    4620:	mov	w2, w0
    4624:	mov	w1, #0x4                   	// #4
    4628:	ldr	x0, [sp, #24]
    462c:	bl	4484 <blit>
    4630:	ldr	w1, [sp, #20]
    4634:	ldr	w0, [sp, #40]
    4638:	add	w2, w1, w0
    463c:	ldr	w1, [sp, #16]
    4640:	ldr	w0, [sp, #44]
    4644:	add	w1, w1, w0
    4648:	ldr	x0, [sp, #24]
    464c:	ldr	w0, [x0, #4]
    4650:	add	w0, w1, w0
    4654:	mov	w3, w0
    4658:	mov	w1, #0x6                   	// #6
    465c:	ldr	x0, [sp, #24]
    4660:	bl	4484 <blit>
    4664:	ldr	w1, [sp, #20]
    4668:	ldr	w0, [sp, #40]
    466c:	add	w1, w1, w0
    4670:	ldr	x0, [sp, #24]
    4674:	ldr	w0, [x0]
    4678:	add	w2, w1, w0
    467c:	ldr	w1, [sp, #16]
    4680:	ldr	w0, [sp, #44]
    4684:	add	w0, w1, w0
    4688:	mov	w3, w0
    468c:	mov	w1, #0x5                   	// #5
    4690:	ldr	x0, [sp, #24]
    4694:	bl	4484 <blit>
    4698:	ldr	w1, [sp, #16]
    469c:	ldr	w0, [sp, #44]
    46a0:	add	w0, w1, w0
    46a4:	mov	w3, w0
    46a8:	ldr	w2, [sp, #20]
    46ac:	mov	w1, #0x7                   	// #7
    46b0:	ldr	x0, [sp, #24]
    46b4:	bl	4484 <blit>
    46b8:	ldr	w3, [sp, #16]
    46bc:	ldr	w2, [sp, #20]
    46c0:	mov	w1, #0x0                   	// #0
    46c4:	ldr	x0, [sp, #24]
    46c8:	bl	4484 <blit>
    46cc:	ldr	w1, [sp, #20]
    46d0:	ldr	w0, [sp, #40]
    46d4:	add	w1, w1, w0
    46d8:	ldr	x0, [sp, #24]
    46dc:	ldr	w0, [x0]
    46e0:	add	w0, w1, w0
    46e4:	ldr	w3, [sp, #16]
    46e8:	mov	w2, w0
    46ec:	mov	w1, #0x1                   	// #1
    46f0:	ldr	x0, [sp, #24]
    46f4:	bl	4484 <blit>
    46f8:	ldr	w1, [sp, #20]
    46fc:	ldr	w0, [sp, #40]
    4700:	add	w1, w1, w0
    4704:	ldr	x0, [sp, #24]
    4708:	ldr	w0, [x0]
    470c:	add	w2, w1, w0
    4710:	ldr	w1, [sp, #16]
    4714:	ldr	w0, [sp, #44]
    4718:	add	w1, w1, w0
    471c:	ldr	x0, [sp, #24]
    4720:	ldr	w0, [x0, #4]
    4724:	add	w0, w1, w0
    4728:	mov	w3, w0
    472c:	mov	w1, #0x2                   	// #2
    4730:	ldr	x0, [sp, #24]
    4734:	bl	4484 <blit>
    4738:	ldr	w1, [sp, #16]
    473c:	ldr	w0, [sp, #44]
    4740:	add	w1, w1, w0
    4744:	ldr	x0, [sp, #24]
    4748:	ldr	w0, [x0, #4]
    474c:	add	w0, w1, w0
    4750:	mov	w3, w0
    4754:	ldr	w2, [sp, #20]
    4758:	mov	w1, #0x3                   	// #3
    475c:	ldr	x0, [sp, #24]
    4760:	bl	4484 <blit>
    4764:	ldr	w1, [sp, #20]
    4768:	ldr	w0, [sp, #40]
    476c:	add	w2, w1, w0
    4770:	ldr	w1, [sp, #16]
    4774:	ldr	w0, [sp, #44]
    4778:	add	w0, w1, w0
    477c:	mov	w3, w0
    4780:	mov	w1, #0x8                   	// #8
    4784:	ldr	x0, [sp, #24]
    4788:	bl	4484 <blit>
    478c:	nop
    4790:	ldp	x29, x30, [sp], #48
    4794:	ret

0000000000004798 <scale_pixmap>:
    4798:	stp	x29, x30, [sp, #-64]!
    479c:	mov	x29, sp
    47a0:	str	x0, [sp, #40]
    47a4:	str	w1, [sp, #36]
    47a8:	str	w2, [sp, #32]
    47ac:	str	w3, [sp, #28]
    47b0:	ldr	x0, [sp, #40]
    47b4:	ldr	x1, [x0, #16]
    47b8:	ldrsw	x0, [sp, #36]
    47bc:	lsl	x0, x0, #3
    47c0:	add	x0, x1, x0
    47c4:	str	x0, [sp, #56]
    47c8:	ldr	x0, [sp, #40]
    47cc:	ldr	x1, [x0, #8]
    47d0:	ldrsw	x0, [sp, #36]
    47d4:	lsl	x0, x0, #3
    47d8:	add	x0, x1, x0
    47dc:	ldr	x0, [x0]
    47e0:	str	x0, [sp, #48]
    47e4:	ldr	x0, [sp, #48]
    47e8:	cmp	x0, #0x0
    47ec:	b.ne	4804 <scale_pixmap+0x6c>  // b.any
    47f0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    47f4:	add	x0, x0, #0x0
    47f8:	ldr	x0, [x0]
    47fc:	ldr	w0, [x0]
    4800:	b	48e0 <scale_pixmap+0x148>
    4804:	ldr	w0, [sp, #32]
    4808:	cmn	w0, #0x1
    480c:	b.ne	481c <scale_pixmap+0x84>  // b.any
    4810:	ldr	x0, [sp, #48]
    4814:	bl	43cc <grub_video_bitmap_get_width>
    4818:	str	w0, [sp, #32]
    481c:	ldr	w0, [sp, #28]
    4820:	cmn	w0, #0x1
    4824:	b.ne	4834 <scale_pixmap+0x9c>  // b.any
    4828:	ldr	x0, [sp, #48]
    482c:	bl	43f8 <grub_video_bitmap_get_height>
    4830:	str	w0, [sp, #28]
    4834:	ldr	x0, [sp, #56]
    4838:	ldr	x0, [x0]
    483c:	cmp	x0, #0x0
    4840:	b.eq	487c <scale_pixmap+0xe4>  // b.none
    4844:	ldr	x0, [sp, #56]
    4848:	ldr	x0, [x0]
    484c:	bl	43cc <grub_video_bitmap_get_width>
    4850:	mov	w1, w0
    4854:	ldr	w0, [sp, #32]
    4858:	cmp	w0, w1
    485c:	b.ne	487c <scale_pixmap+0xe4>  // b.any
    4860:	ldr	x0, [sp, #56]
    4864:	ldr	x0, [x0]
    4868:	bl	43f8 <grub_video_bitmap_get_height>
    486c:	mov	w1, w0
    4870:	ldr	w0, [sp, #28]
    4874:	cmp	w0, w1
    4878:	b.eq	48d0 <scale_pixmap+0x138>  // b.none
    487c:	ldr	x0, [sp, #56]
    4880:	ldr	x0, [x0]
    4884:	cmp	x0, #0x0
    4888:	b.eq	48a0 <scale_pixmap+0x108>  // b.none
    488c:	ldr	x0, [sp, #56]
    4890:	ldr	x0, [x0]
    4894:	bl	0 <grub_video_bitmap_destroy>
    4898:	ldr	x0, [sp, #56]
    489c:	str	xzr, [x0]
    48a0:	ldr	w0, [sp, #32]
    48a4:	cmp	w0, #0x0
    48a8:	b.eq	48d0 <scale_pixmap+0x138>  // b.none
    48ac:	ldr	w0, [sp, #28]
    48b0:	cmp	w0, #0x0
    48b4:	b.eq	48d0 <scale_pixmap+0x138>  // b.none
    48b8:	mov	w4, #0x1                   	// #1
    48bc:	ldr	x3, [sp, #48]
    48c0:	ldr	w2, [sp, #28]
    48c4:	ldr	w1, [sp, #32]
    48c8:	ldr	x0, [sp, #56]
    48cc:	bl	0 <grub_video_bitmap_create_scaled>
    48d0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    48d4:	add	x0, x0, #0x0
    48d8:	ldr	x0, [x0]
    48dc:	ldr	w0, [x0]
    48e0:	ldp	x29, x30, [sp], #64
    48e4:	ret
	...

00000000000048f0 <set_content_size>:
    48f0:	stp	x29, x30, [sp, #-32]!
    48f4:	mov	x29, sp
    48f8:	str	x0, [sp, #24]
    48fc:	str	w1, [sp, #20]
    4900:	str	w2, [sp, #16]
    4904:	ldr	x0, [sp, #24]
    4908:	ldr	w1, [sp, #20]
    490c:	str	w1, [x0]
    4910:	ldr	x0, [sp, #24]
    4914:	ldr	w1, [sp, #16]
    4918:	str	w1, [x0, #4]
    491c:	mov	w3, #0xffffffff            	// #-1
    4920:	ldr	w2, [sp, #20]
    4924:	mov	w1, #0x4                   	// #4
    4928:	ldr	x0, [sp, #24]
    492c:	bl	4798 <scale_pixmap>
    4930:	cmp	w0, #0x0
    4934:	b.ne	4a18 <set_content_size+0x128>  // b.any
    4938:	mov	w3, #0xffffffff            	// #-1
    493c:	ldr	w2, [sp, #20]
    4940:	mov	w1, #0x6                   	// #6
    4944:	ldr	x0, [sp, #24]
    4948:	bl	4798 <scale_pixmap>
    494c:	cmp	w0, #0x0
    4950:	b.ne	4a20 <set_content_size+0x130>  // b.any
    4954:	ldr	w3, [sp, #16]
    4958:	mov	w2, #0xffffffff            	// #-1
    495c:	mov	w1, #0x5                   	// #5
    4960:	ldr	x0, [sp, #24]
    4964:	bl	4798 <scale_pixmap>
    4968:	cmp	w0, #0x0
    496c:	b.ne	4a28 <set_content_size+0x138>  // b.any
    4970:	ldr	w3, [sp, #16]
    4974:	mov	w2, #0xffffffff            	// #-1
    4978:	mov	w1, #0x7                   	// #7
    497c:	ldr	x0, [sp, #24]
    4980:	bl	4798 <scale_pixmap>
    4984:	cmp	w0, #0x0
    4988:	b.ne	4a30 <set_content_size+0x140>  // b.any
    498c:	mov	w3, #0xffffffff            	// #-1
    4990:	mov	w2, #0xffffffff            	// #-1
    4994:	mov	w1, #0x0                   	// #0
    4998:	ldr	x0, [sp, #24]
    499c:	bl	4798 <scale_pixmap>
    49a0:	cmp	w0, #0x0
    49a4:	b.ne	4a38 <set_content_size+0x148>  // b.any
    49a8:	mov	w3, #0xffffffff            	// #-1
    49ac:	mov	w2, #0xffffffff            	// #-1
    49b0:	mov	w1, #0x3                   	// #3
    49b4:	ldr	x0, [sp, #24]
    49b8:	bl	4798 <scale_pixmap>
    49bc:	cmp	w0, #0x0
    49c0:	b.ne	4a40 <set_content_size+0x150>  // b.any
    49c4:	mov	w3, #0xffffffff            	// #-1
    49c8:	mov	w2, #0xffffffff            	// #-1
    49cc:	mov	w1, #0x1                   	// #1
    49d0:	ldr	x0, [sp, #24]
    49d4:	bl	4798 <scale_pixmap>
    49d8:	cmp	w0, #0x0
    49dc:	b.ne	4a48 <set_content_size+0x158>  // b.any
    49e0:	mov	w3, #0xffffffff            	// #-1
    49e4:	mov	w2, #0xffffffff            	// #-1
    49e8:	mov	w1, #0x2                   	// #2
    49ec:	ldr	x0, [sp, #24]
    49f0:	bl	4798 <scale_pixmap>
    49f4:	cmp	w0, #0x0
    49f8:	b.ne	4a50 <set_content_size+0x160>  // b.any
    49fc:	ldr	w3, [sp, #16]
    4a00:	ldr	w2, [sp, #20]
    4a04:	mov	w1, #0x8                   	// #8
    4a08:	ldr	x0, [sp, #24]
    4a0c:	bl	4798 <scale_pixmap>
    4a10:	cmp	w0, #0x0
    4a14:	b	4a54 <set_content_size+0x164>
    4a18:	nop
    4a1c:	b	4a54 <set_content_size+0x164>
    4a20:	nop
    4a24:	b	4a54 <set_content_size+0x164>
    4a28:	nop
    4a2c:	b	4a54 <set_content_size+0x164>
    4a30:	nop
    4a34:	b	4a54 <set_content_size+0x164>
    4a38:	nop
    4a3c:	b	4a54 <set_content_size+0x164>
    4a40:	nop
    4a44:	b	4a54 <set_content_size+0x164>
    4a48:	nop
    4a4c:	b	4a54 <set_content_size+0x164>
    4a50:	nop
    4a54:	ldp	x29, x30, [sp], #32
    4a58:	ret

0000000000004a5c <get_border_width>:
    4a5c:	stp	x29, x30, [sp, #-48]!
    4a60:	mov	x29, sp
    4a64:	str	x19, [sp, #16]
    4a68:	str	x0, [sp, #40]
    4a6c:	ldr	x0, [sp, #40]
    4a70:	ldr	x0, [x0, #8]
    4a74:	add	x0, x0, #0x28
    4a78:	ldr	x0, [x0]
    4a7c:	bl	4454 <get_width>
    4a80:	mov	w19, w0
    4a84:	ldr	x0, [sp, #40]
    4a88:	ldr	x0, [x0, #8]
    4a8c:	add	x0, x0, #0x38
    4a90:	ldr	x0, [x0]
    4a94:	bl	4454 <get_width>
    4a98:	add	w0, w19, w0
    4a9c:	ldr	x19, [sp, #16]
    4aa0:	ldp	x29, x30, [sp], #48
    4aa4:	ret

0000000000004aa8 <get_left_pad>:
    4aa8:	stp	x29, x30, [sp, #-48]!
    4aac:	mov	x29, sp
    4ab0:	str	x0, [sp, #24]
    4ab4:	ldr	x0, [sp, #24]
    4ab8:	ldr	x0, [x0, #8]
    4abc:	add	x0, x0, #0x38
    4ac0:	ldr	x0, [x0]
    4ac4:	bl	4454 <get_width>
    4ac8:	str	w0, [sp, #44]
    4acc:	ldr	x0, [sp, #24]
    4ad0:	ldr	x0, [x0, #8]
    4ad4:	ldr	x0, [x0]
    4ad8:	bl	4454 <get_width>
    4adc:	str	w0, [sp, #40]
    4ae0:	ldr	w1, [sp, #40]
    4ae4:	ldr	w0, [sp, #44]
    4ae8:	cmp	w1, w0
    4aec:	b.le	4af8 <get_left_pad+0x50>
    4af0:	ldr	w0, [sp, #40]
    4af4:	str	w0, [sp, #44]
    4af8:	ldr	x0, [sp, #24]
    4afc:	ldr	x0, [x0, #8]
    4b00:	add	x0, x0, #0x18
    4b04:	ldr	x0, [x0]
    4b08:	bl	4454 <get_width>
    4b0c:	str	w0, [sp, #40]
    4b10:	ldr	w1, [sp, #40]
    4b14:	ldr	w0, [sp, #44]
    4b18:	cmp	w1, w0
    4b1c:	b.le	4b28 <get_left_pad+0x80>
    4b20:	ldr	w0, [sp, #40]
    4b24:	str	w0, [sp, #44]
    4b28:	ldr	w0, [sp, #44]
    4b2c:	ldp	x29, x30, [sp], #48
    4b30:	ret

0000000000004b34 <get_top_pad>:
    4b34:	stp	x29, x30, [sp, #-48]!
    4b38:	mov	x29, sp
    4b3c:	str	x0, [sp, #24]
    4b40:	ldr	x0, [sp, #24]
    4b44:	ldr	x0, [x0, #8]
    4b48:	add	x0, x0, #0x20
    4b4c:	ldr	x0, [x0]
    4b50:	bl	4424 <get_height>
    4b54:	str	w0, [sp, #44]
    4b58:	ldr	x0, [sp, #24]
    4b5c:	ldr	x0, [x0, #8]
    4b60:	ldr	x0, [x0]
    4b64:	bl	4424 <get_height>
    4b68:	str	w0, [sp, #40]
    4b6c:	ldr	w1, [sp, #40]
    4b70:	ldr	w0, [sp, #44]
    4b74:	cmp	w1, w0
    4b78:	b.le	4b84 <get_top_pad+0x50>
    4b7c:	ldr	w0, [sp, #40]
    4b80:	str	w0, [sp, #44]
    4b84:	ldr	x0, [sp, #24]
    4b88:	ldr	x0, [x0, #8]
    4b8c:	add	x0, x0, #0x8
    4b90:	ldr	x0, [x0]
    4b94:	bl	4424 <get_height>
    4b98:	str	w0, [sp, #40]
    4b9c:	ldr	w1, [sp, #40]
    4ba0:	ldr	w0, [sp, #44]
    4ba4:	cmp	w1, w0
    4ba8:	b.le	4bb4 <get_top_pad+0x80>
    4bac:	ldr	w0, [sp, #40]
    4bb0:	str	w0, [sp, #44]
    4bb4:	ldr	w0, [sp, #44]
    4bb8:	ldp	x29, x30, [sp], #48
    4bbc:	ret

0000000000004bc0 <get_right_pad>:
    4bc0:	stp	x29, x30, [sp, #-48]!
    4bc4:	mov	x29, sp
    4bc8:	str	x0, [sp, #24]
    4bcc:	ldr	x0, [sp, #24]
    4bd0:	ldr	x0, [x0, #8]
    4bd4:	add	x0, x0, #0x28
    4bd8:	ldr	x0, [x0]
    4bdc:	bl	4454 <get_width>
    4be0:	str	w0, [sp, #44]
    4be4:	ldr	x0, [sp, #24]
    4be8:	ldr	x0, [x0, #8]
    4bec:	add	x0, x0, #0x8
    4bf0:	ldr	x0, [x0]
    4bf4:	bl	4454 <get_width>
    4bf8:	str	w0, [sp, #40]
    4bfc:	ldr	w1, [sp, #40]
    4c00:	ldr	w0, [sp, #44]
    4c04:	cmp	w1, w0
    4c08:	b.le	4c14 <get_right_pad+0x54>
    4c0c:	ldr	w0, [sp, #40]
    4c10:	str	w0, [sp, #44]
    4c14:	ldr	x0, [sp, #24]
    4c18:	ldr	x0, [x0, #8]
    4c1c:	add	x0, x0, #0x10
    4c20:	ldr	x0, [x0]
    4c24:	bl	4454 <get_width>
    4c28:	str	w0, [sp, #40]
    4c2c:	ldr	w1, [sp, #40]
    4c30:	ldr	w0, [sp, #44]
    4c34:	cmp	w1, w0
    4c38:	b.le	4c44 <get_right_pad+0x84>
    4c3c:	ldr	w0, [sp, #40]
    4c40:	str	w0, [sp, #44]
    4c44:	ldr	w0, [sp, #44]
    4c48:	ldp	x29, x30, [sp], #48
    4c4c:	ret

0000000000004c50 <get_bottom_pad>:
    4c50:	stp	x29, x30, [sp, #-48]!
    4c54:	mov	x29, sp
    4c58:	str	x0, [sp, #24]
    4c5c:	ldr	x0, [sp, #24]
    4c60:	ldr	x0, [x0, #8]
    4c64:	add	x0, x0, #0x30
    4c68:	ldr	x0, [x0]
    4c6c:	bl	4424 <get_height>
    4c70:	str	w0, [sp, #44]
    4c74:	ldr	x0, [sp, #24]
    4c78:	ldr	x0, [x0, #8]
    4c7c:	add	x0, x0, #0x18
    4c80:	ldr	x0, [x0]
    4c84:	bl	4424 <get_height>
    4c88:	str	w0, [sp, #40]
    4c8c:	ldr	w1, [sp, #40]
    4c90:	ldr	w0, [sp, #44]
    4c94:	cmp	w1, w0
    4c98:	b.le	4ca4 <get_bottom_pad+0x54>
    4c9c:	ldr	w0, [sp, #40]
    4ca0:	str	w0, [sp, #44]
    4ca4:	ldr	x0, [sp, #24]
    4ca8:	ldr	x0, [x0, #8]
    4cac:	add	x0, x0, #0x10
    4cb0:	ldr	x0, [x0]
    4cb4:	bl	4424 <get_height>
    4cb8:	str	w0, [sp, #40]
    4cbc:	ldr	w1, [sp, #40]
    4cc0:	ldr	w0, [sp, #44]
    4cc4:	cmp	w1, w0
    4cc8:	b.le	4cd4 <get_bottom_pad+0x84>
    4ccc:	ldr	w0, [sp, #40]
    4cd0:	str	w0, [sp, #44]
    4cd4:	ldr	w0, [sp, #44]
    4cd8:	ldp	x29, x30, [sp], #48
    4cdc:	ret

0000000000004ce0 <destroy>:
    4ce0:	stp	x29, x30, [sp, #-48]!
    4ce4:	mov	x29, sp
    4ce8:	str	x0, [sp, #24]
    4cec:	str	wzr, [sp, #44]
    4cf0:	b	4da8 <destroy+0xc8>
    4cf4:	ldr	x0, [sp, #24]
    4cf8:	ldr	x1, [x0, #8]
    4cfc:	ldr	w0, [sp, #44]
    4d00:	lsl	x0, x0, #3
    4d04:	add	x0, x1, x0
    4d08:	ldr	x0, [x0]
    4d0c:	cmp	x0, #0x0
    4d10:	b.eq	4d30 <destroy+0x50>  // b.none
    4d14:	ldr	x0, [sp, #24]
    4d18:	ldr	x1, [x0, #8]
    4d1c:	ldr	w0, [sp, #44]
    4d20:	lsl	x0, x0, #3
    4d24:	add	x0, x1, x0
    4d28:	ldr	x0, [x0]
    4d2c:	bl	0 <grub_video_bitmap_destroy>
    4d30:	ldr	x0, [sp, #24]
    4d34:	ldr	x1, [x0, #8]
    4d38:	ldr	w0, [sp, #44]
    4d3c:	lsl	x0, x0, #3
    4d40:	add	x0, x1, x0
    4d44:	str	xzr, [x0]
    4d48:	ldr	x0, [sp, #24]
    4d4c:	ldr	x1, [x0, #16]
    4d50:	ldr	w0, [sp, #44]
    4d54:	lsl	x0, x0, #3
    4d58:	add	x0, x1, x0
    4d5c:	ldr	x0, [x0]
    4d60:	cmp	x0, #0x0
    4d64:	b.eq	4d84 <destroy+0xa4>  // b.none
    4d68:	ldr	x0, [sp, #24]
    4d6c:	ldr	x1, [x0, #16]
    4d70:	ldr	w0, [sp, #44]
    4d74:	lsl	x0, x0, #3
    4d78:	add	x0, x1, x0
    4d7c:	ldr	x0, [x0]
    4d80:	bl	0 <grub_video_bitmap_destroy>
    4d84:	ldr	x0, [sp, #24]
    4d88:	ldr	x1, [x0, #16]
    4d8c:	ldr	w0, [sp, #44]
    4d90:	lsl	x0, x0, #3
    4d94:	add	x0, x1, x0
    4d98:	str	xzr, [x0]
    4d9c:	ldr	w0, [sp, #44]
    4da0:	add	w0, w0, #0x1
    4da4:	str	w0, [sp, #44]
    4da8:	ldr	w0, [sp, #44]
    4dac:	cmp	w0, #0x8
    4db0:	b.ls	4cf4 <destroy+0x14>  // b.plast
    4db4:	ldr	x0, [sp, #24]
    4db8:	ldr	x0, [x0, #8]
    4dbc:	bl	0 <grub_free>
    4dc0:	ldr	x0, [sp, #24]
    4dc4:	str	xzr, [x0, #8]
    4dc8:	ldr	x0, [sp, #24]
    4dcc:	ldr	x0, [x0, #16]
    4dd0:	bl	0 <grub_free>
    4dd4:	ldr	x0, [sp, #24]
    4dd8:	str	xzr, [x0, #16]
    4ddc:	ldr	x0, [sp, #24]
    4de0:	bl	0 <grub_free>
    4de4:	nop
    4de8:	ldp	x29, x30, [sp], #48
    4dec:	ret

0000000000004df0 <grub_gfxmenu_create_box>:
    4df0:	stp	x29, x30, [sp, #-80]!
    4df4:	mov	x29, sp
    4df8:	str	x19, [sp, #16]
    4dfc:	str	x0, [sp, #40]
    4e00:	str	x1, [sp, #32]
    4e04:	mov	x0, #0x58                  	// #88
    4e08:	bl	0 <grub_malloc>
    4e0c:	str	x0, [sp, #64]
    4e10:	ldr	x0, [sp, #64]
    4e14:	cmp	x0, #0x0
    4e18:	b.ne	4e24 <grub_gfxmenu_create_box+0x34>  // b.any
    4e1c:	mov	x0, #0x0                   	// #0
    4e20:	b	5080 <grub_gfxmenu_create_box+0x290>
    4e24:	ldr	x0, [sp, #64]
    4e28:	str	wzr, [x0]
    4e2c:	ldr	x0, [sp, #64]
    4e30:	str	wzr, [x0, #4]
    4e34:	mov	x0, #0x48                  	// #72
    4e38:	bl	0 <grub_malloc>
    4e3c:	mov	x1, x0
    4e40:	ldr	x0, [sp, #64]
    4e44:	str	x1, [x0, #8]
    4e48:	mov	x0, #0x48                  	// #72
    4e4c:	bl	0 <grub_malloc>
    4e50:	mov	x1, x0
    4e54:	ldr	x0, [sp, #64]
    4e58:	str	x1, [x0, #16]
    4e5c:	str	wzr, [sp, #76]
    4e60:	b	4e88 <grub_gfxmenu_create_box+0x98>
    4e64:	ldr	x0, [sp, #64]
    4e68:	ldr	x1, [x0, #8]
    4e6c:	ldr	w0, [sp, #76]
    4e70:	lsl	x0, x0, #3
    4e74:	add	x0, x1, x0
    4e78:	str	xzr, [x0]
    4e7c:	ldr	w0, [sp, #76]
    4e80:	add	w0, w0, #0x1
    4e84:	str	w0, [sp, #76]
    4e88:	ldr	w0, [sp, #76]
    4e8c:	cmp	w0, #0x8
    4e90:	b.ls	4e64 <grub_gfxmenu_create_box+0x74>  // b.plast
    4e94:	str	wzr, [sp, #76]
    4e98:	b	4ec0 <grub_gfxmenu_create_box+0xd0>
    4e9c:	ldr	x0, [sp, #64]
    4ea0:	ldr	x1, [x0, #16]
    4ea4:	ldr	w0, [sp, #76]
    4ea8:	lsl	x0, x0, #3
    4eac:	add	x0, x1, x0
    4eb0:	str	xzr, [x0]
    4eb4:	ldr	w0, [sp, #76]
    4eb8:	add	w0, w0, #0x1
    4ebc:	str	w0, [sp, #76]
    4ec0:	ldr	w0, [sp, #76]
    4ec4:	cmp	w0, #0x8
    4ec8:	b.ls	4e9c <grub_gfxmenu_create_box+0xac>  // b.plast
    4ecc:	str	wzr, [sp, #76]
    4ed0:	b	4fbc <grub_gfxmenu_create_box+0x1cc>
    4ed4:	ldr	x0, [sp, #40]
    4ed8:	cmp	x0, #0x0
    4edc:	b.eq	4fb0 <grub_gfxmenu_create_box+0x1c0>  // b.none
    4ee0:	ldr	x0, [sp, #32]
    4ee4:	cmp	x0, #0x0
    4ee8:	b.eq	4fb0 <grub_gfxmenu_create_box+0x1c0>  // b.none
    4eec:	ldr	x0, [sp, #40]
    4ef0:	bl	0 <grub_strlen>
    4ef4:	mov	x19, x0
    4ef8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    4efc:	add	x0, x0, #0x0
    4f00:	ldr	x0, [x0]
    4f04:	ldr	w1, [sp, #76]
    4f08:	ldr	x0, [x0, x1, lsl #3]
    4f0c:	bl	0 <grub_strlen>
    4f10:	add	x19, x19, x0
    4f14:	ldr	x0, [sp, #32]
    4f18:	bl	0 <grub_strlen>
    4f1c:	add	x0, x19, x0
    4f20:	add	x0, x0, #0x1
    4f24:	bl	0 <grub_malloc>
    4f28:	str	x0, [sp, #56]
    4f2c:	ldr	x0, [sp, #56]
    4f30:	cmp	x0, #0x0
    4f34:	b.eq	5070 <grub_gfxmenu_create_box+0x280>  // b.none
    4f38:	ldr	x1, [sp, #40]
    4f3c:	ldr	x0, [sp, #56]
    4f40:	bl	4370 <grub_stpcpy>
    4f44:	str	x0, [sp, #48]
    4f48:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    4f4c:	add	x0, x0, #0x0
    4f50:	ldr	x0, [x0]
    4f54:	ldr	w1, [sp, #76]
    4f58:	ldr	x0, [x0, x1, lsl #3]
    4f5c:	mov	x1, x0
    4f60:	ldr	x0, [sp, #48]
    4f64:	bl	4370 <grub_stpcpy>
    4f68:	str	x0, [sp, #48]
    4f6c:	ldr	x1, [sp, #32]
    4f70:	ldr	x0, [sp, #48]
    4f74:	bl	4370 <grub_stpcpy>
    4f78:	str	x0, [sp, #48]
    4f7c:	ldr	x0, [sp, #64]
    4f80:	ldr	x1, [x0, #8]
    4f84:	ldr	w0, [sp, #76]
    4f88:	lsl	x0, x0, #3
    4f8c:	add	x0, x1, x0
    4f90:	ldr	x1, [sp, #56]
    4f94:	bl	0 <grub_video_bitmap_load>
    4f98:	ldr	x0, [sp, #56]
    4f9c:	bl	0 <grub_free>
    4fa0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    4fa4:	add	x0, x0, #0x0
    4fa8:	ldr	x0, [x0]
    4fac:	str	wzr, [x0]
    4fb0:	ldr	w0, [sp, #76]
    4fb4:	add	w0, w0, #0x1
    4fb8:	str	w0, [sp, #76]
    4fbc:	ldr	w0, [sp, #76]
    4fc0:	cmp	w0, #0x8
    4fc4:	b.ls	4ed4 <grub_gfxmenu_create_box+0xe4>  // b.plast
    4fc8:	ldr	x0, [sp, #64]
    4fcc:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    4fd0:	add	x1, x1, #0x0
    4fd4:	ldr	x1, [x1]
    4fd8:	str	x1, [x0, #24]
    4fdc:	ldr	x0, [sp, #64]
    4fe0:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    4fe4:	add	x1, x1, #0x0
    4fe8:	ldr	x1, [x1]
    4fec:	str	x1, [x0, #32]
    4ff0:	ldr	x0, [sp, #64]
    4ff4:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    4ff8:	add	x1, x1, #0x0
    4ffc:	ldr	x1, [x1]
    5000:	str	x1, [x0, #40]
    5004:	ldr	x0, [sp, #64]
    5008:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    500c:	add	x1, x1, #0x0
    5010:	ldr	x1, [x1]
    5014:	str	x1, [x0, #48]
    5018:	ldr	x0, [sp, #64]
    501c:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    5020:	add	x1, x1, #0x0
    5024:	ldr	x1, [x1]
    5028:	str	x1, [x0, #56]
    502c:	ldr	x0, [sp, #64]
    5030:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    5034:	add	x1, x1, #0x0
    5038:	ldr	x1, [x1]
    503c:	str	x1, [x0, #64]
    5040:	ldr	x0, [sp, #64]
    5044:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    5048:	add	x1, x1, #0x0
    504c:	ldr	x1, [x1]
    5050:	str	x1, [x0, #72]
    5054:	ldr	x0, [sp, #64]
    5058:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    505c:	add	x1, x1, #0x0
    5060:	ldr	x1, [x1]
    5064:	str	x1, [x0, #80]
    5068:	ldr	x0, [sp, #64]
    506c:	b	5080 <grub_gfxmenu_create_box+0x290>
    5070:	nop
    5074:	ldr	x0, [sp, #64]
    5078:	bl	4ce0 <destroy>
    507c:	mov	x0, #0x0                   	// #0
    5080:	ldr	x19, [sp, #16]
    5084:	ldp	x29, x30, [sp], #80
    5088:	ret
    508c:	nop
	...

00000000000050e0 <grub_fixed_sfs_multiply>:
    50e0:	sub	sp, sp, #0x10
    50e4:	str	w0, [sp, #12]
    50e8:	str	w1, [sp, #8]
    50ec:	ldr	w1, [sp, #12]
    50f0:	ldr	w0, [sp, #8]
    50f4:	mul	w0, w1, w0
    50f8:	mov	w1, #0xffff                	// #65535
    50fc:	add	w1, w0, w1
    5100:	cmp	w0, #0x0
    5104:	csel	w0, w1, w0, lt  // lt = tstop
    5108:	asr	w0, w0, #16
    510c:	add	sp, sp, #0x10
    5110:	ret

0000000000005114 <grub_gui_save_viewport>:
    5114:	stp	x29, x30, [sp, #-32]!
    5118:	mov	x29, sp
    511c:	str	x0, [sp, #24]
    5120:	ldr	x4, [sp, #24]
    5124:	ldr	x0, [sp, #24]
    5128:	add	x1, x0, #0x4
    512c:	ldr	x0, [sp, #24]
    5130:	add	x2, x0, #0x8
    5134:	ldr	x0, [sp, #24]
    5138:	add	x0, x0, #0xc
    513c:	mov	x3, x0
    5140:	mov	x0, x4
    5144:	bl	0 <grub_video_get_viewport>
    5148:	nop
    514c:	ldp	x29, x30, [sp], #32
    5150:	ret

0000000000005154 <grub_gui_restore_viewport>:
    5154:	stp	x29, x30, [sp, #-32]!
    5158:	mov	x29, sp
    515c:	str	x0, [sp, #24]
    5160:	ldr	x0, [sp, #24]
    5164:	ldr	w4, [x0]
    5168:	ldr	x0, [sp, #24]
    516c:	ldr	w1, [x0, #4]
    5170:	ldr	x0, [sp, #24]
    5174:	ldr	w2, [x0, #8]
    5178:	ldr	x0, [sp, #24]
    517c:	ldr	w0, [x0, #12]
    5180:	mov	w3, w0
    5184:	mov	w0, w4
    5188:	bl	0 <grub_video_set_viewport>
    518c:	nop
    5190:	ldp	x29, x30, [sp], #32
    5194:	ret

0000000000005198 <grub_gui_set_viewport>:
    5198:	stp	x29, x30, [sp, #-32]!
    519c:	mov	x29, sp
    51a0:	str	x0, [sp, #24]
    51a4:	str	x1, [sp, #16]
    51a8:	ldr	x0, [sp, #16]
    51ac:	bl	5114 <grub_gui_save_viewport>
    51b0:	ldr	x0, [sp, #16]
    51b4:	ldr	w1, [x0]
    51b8:	ldr	x0, [sp, #24]
    51bc:	ldr	w0, [x0]
    51c0:	add	w4, w1, w0
    51c4:	ldr	x0, [sp, #16]
    51c8:	ldr	w1, [x0, #4]
    51cc:	ldr	x0, [sp, #24]
    51d0:	ldr	w0, [x0, #4]
    51d4:	add	w1, w1, w0
    51d8:	ldr	x0, [sp, #24]
    51dc:	ldr	w2, [x0, #8]
    51e0:	ldr	x0, [sp, #24]
    51e4:	ldr	w0, [x0, #12]
    51e8:	mov	w3, w0
    51ec:	mov	w0, w4
    51f0:	bl	0 <grub_video_set_viewport>
    51f4:	nop
    51f8:	ldp	x29, x30, [sp], #32
    51fc:	ret

0000000000005200 <grub_video_have_common_points>:
    5200:	sub	sp, sp, #0x10
    5204:	str	x0, [sp, #8]
    5208:	str	x1, [sp]
    520c:	ldr	x0, [sp, #8]
    5210:	ldr	w1, [x0]
    5214:	ldr	x0, [sp]
    5218:	ldr	w0, [x0]
    521c:	cmp	w1, w0
    5220:	b.hi	5248 <grub_video_have_common_points+0x48>  // b.pmore
    5224:	ldr	x0, [sp]
    5228:	ldr	w1, [x0]
    522c:	ldr	x0, [sp, #8]
    5230:	ldr	w2, [x0]
    5234:	ldr	x0, [sp, #8]
    5238:	ldr	w0, [x0, #8]
    523c:	add	w0, w2, w0
    5240:	cmp	w1, w0
    5244:	b.ls	528c <grub_video_have_common_points+0x8c>  // b.plast
    5248:	ldr	x0, [sp]
    524c:	ldr	w1, [x0]
    5250:	ldr	x0, [sp, #8]
    5254:	ldr	w0, [x0]
    5258:	cmp	w1, w0
    525c:	b.hi	5284 <grub_video_have_common_points+0x84>  // b.pmore
    5260:	ldr	x0, [sp, #8]
    5264:	ldr	w1, [x0]
    5268:	ldr	x0, [sp]
    526c:	ldr	w2, [x0]
    5270:	ldr	x0, [sp]
    5274:	ldr	w0, [x0, #8]
    5278:	add	w0, w2, w0
    527c:	cmp	w1, w0
    5280:	b.ls	528c <grub_video_have_common_points+0x8c>  // b.plast
    5284:	mov	w0, #0x0                   	// #0
    5288:	b	5310 <grub_video_have_common_points+0x110>
    528c:	ldr	x0, [sp, #8]
    5290:	ldr	w1, [x0, #4]
    5294:	ldr	x0, [sp]
    5298:	ldr	w0, [x0, #4]
    529c:	cmp	w1, w0
    52a0:	b.hi	52c8 <grub_video_have_common_points+0xc8>  // b.pmore
    52a4:	ldr	x0, [sp]
    52a8:	ldr	w1, [x0, #4]
    52ac:	ldr	x0, [sp, #8]
    52b0:	ldr	w2, [x0, #4]
    52b4:	ldr	x0, [sp, #8]
    52b8:	ldr	w0, [x0, #12]
    52bc:	add	w0, w2, w0
    52c0:	cmp	w1, w0
    52c4:	b.ls	530c <grub_video_have_common_points+0x10c>  // b.plast
    52c8:	ldr	x0, [sp]
    52cc:	ldr	w1, [x0, #4]
    52d0:	ldr	x0, [sp, #8]
    52d4:	ldr	w0, [x0, #4]
    52d8:	cmp	w1, w0
    52dc:	b.hi	5304 <grub_video_have_common_points+0x104>  // b.pmore
    52e0:	ldr	x0, [sp, #8]
    52e4:	ldr	w1, [x0, #4]
    52e8:	ldr	x0, [sp]
    52ec:	ldr	w2, [x0, #4]
    52f0:	ldr	x0, [sp]
    52f4:	ldr	w0, [x0, #12]
    52f8:	add	w0, w2, w0
    52fc:	cmp	w1, w0
    5300:	b.ls	530c <grub_video_have_common_points+0x10c>  // b.plast
    5304:	mov	w0, #0x0                   	// #0
    5308:	b	5310 <grub_video_have_common_points+0x110>
    530c:	mov	w0, #0x1                   	// #1
    5310:	add	sp, sp, #0x10
    5314:	ret

0000000000005318 <grub_video_bounds_inside_region>:
    5318:	sub	sp, sp, #0x10
    531c:	str	x0, [sp, #8]
    5320:	str	x1, [sp]
    5324:	ldr	x0, [sp]
    5328:	ldr	w1, [x0]
    532c:	ldr	x0, [sp, #8]
    5330:	ldr	w0, [x0]
    5334:	cmp	w1, w0
    5338:	b.hi	536c <grub_video_bounds_inside_region+0x54>  // b.pmore
    533c:	ldr	x0, [sp]
    5340:	ldr	w1, [x0]
    5344:	ldr	x0, [sp]
    5348:	ldr	w0, [x0, #8]
    534c:	add	w1, w1, w0
    5350:	ldr	x0, [sp, #8]
    5354:	ldr	w2, [x0]
    5358:	ldr	x0, [sp, #8]
    535c:	ldr	w0, [x0, #8]
    5360:	add	w0, w2, w0
    5364:	cmp	w1, w0
    5368:	b.cs	5374 <grub_video_bounds_inside_region+0x5c>  // b.hs, b.nlast
    536c:	mov	w0, #0x0                   	// #0
    5370:	b	53c8 <grub_video_bounds_inside_region+0xb0>
    5374:	ldr	x0, [sp]
    5378:	ldr	w1, [x0, #4]
    537c:	ldr	x0, [sp, #8]
    5380:	ldr	w0, [x0, #4]
    5384:	cmp	w1, w0
    5388:	b.hi	53bc <grub_video_bounds_inside_region+0xa4>  // b.pmore
    538c:	ldr	x0, [sp]
    5390:	ldr	w1, [x0, #4]
    5394:	ldr	x0, [sp]
    5398:	ldr	w0, [x0, #12]
    539c:	add	w1, w1, w0
    53a0:	ldr	x0, [sp, #8]
    53a4:	ldr	w2, [x0, #4]
    53a8:	ldr	x0, [sp, #8]
    53ac:	ldr	w0, [x0, #12]
    53b0:	add	w0, w2, w0
    53b4:	cmp	w1, w0
    53b8:	b.cs	53c4 <grub_video_bounds_inside_region+0xac>  // b.hs, b.nlast
    53bc:	mov	w0, #0x0                   	// #0
    53c0:	b	53c8 <grub_video_bounds_inside_region+0xb0>
    53c4:	mov	w0, #0x1                   	// #1
    53c8:	add	sp, sp, #0x10
    53cc:	ret

00000000000053d0 <canvas_destroy>:
    53d0:	stp	x29, x30, [sp, #-64]!
    53d4:	mov	x29, sp
    53d8:	str	x0, [sp, #24]
    53dc:	ldr	x0, [sp, #24]
    53e0:	str	x0, [sp, #48]
    53e4:	ldr	x0, [sp, #48]
    53e8:	ldr	x0, [x0, #88]
    53ec:	str	x0, [sp, #56]
    53f0:	b	542c <canvas_destroy+0x5c>
    53f4:	ldr	x0, [sp, #56]
    53f8:	ldr	x0, [x0, #8]
    53fc:	str	x0, [sp, #40]
    5400:	ldr	x0, [sp, #56]
    5404:	ldr	x0, [x0]
    5408:	ldr	x0, [x0]
    540c:	ldr	x1, [x0]
    5410:	ldr	x0, [sp, #56]
    5414:	ldr	x0, [x0]
    5418:	blr	x1
    541c:	ldr	x0, [sp, #56]
    5420:	bl	0 <grub_free>
    5424:	ldr	x0, [sp, #40]
    5428:	str	x0, [sp, #56]
    542c:	ldr	x0, [sp, #56]
    5430:	cmp	x0, #0x0
    5434:	b.ne	53f4 <canvas_destroy+0x24>  // b.any
    5438:	ldr	x0, [sp, #48]
    543c:	bl	0 <grub_free>
    5440:	nop
    5444:	ldp	x29, x30, [sp], #64
    5448:	ret

000000000000544c <canvas_get_id>:
    544c:	sub	sp, sp, #0x20
    5450:	str	x0, [sp, #8]
    5454:	ldr	x0, [sp, #8]
    5458:	str	x0, [sp, #24]
    545c:	ldr	x0, [sp, #24]
    5460:	ldr	x0, [x0, #72]
    5464:	add	sp, sp, #0x20
    5468:	ret

000000000000546c <canvas_is_instance>:
    546c:	stp	x29, x30, [sp, #-32]!
    5470:	mov	x29, sp
    5474:	str	x0, [sp, #24]
    5478:	str	x1, [sp, #16]
    547c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    5480:	add	x0, x0, #0x0
    5484:	ldr	x1, [x0]
    5488:	ldr	x0, [sp, #16]
    548c:	bl	0 <grub_strcmp>
    5490:	cmp	w0, #0x0
    5494:	b.eq	54b4 <canvas_is_instance+0x48>  // b.none
    5498:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    549c:	add	x0, x0, #0x0
    54a0:	ldr	x1, [x0]
    54a4:	ldr	x0, [sp, #16]
    54a8:	bl	0 <grub_strcmp>
    54ac:	cmp	w0, #0x0
    54b0:	b.ne	54bc <canvas_is_instance+0x50>  // b.any
    54b4:	mov	w0, #0x1                   	// #1
    54b8:	b	54c0 <canvas_is_instance+0x54>
    54bc:	mov	w0, #0x0                   	// #0
    54c0:	ldp	x29, x30, [sp], #32
    54c4:	ret
	...

00000000000054d8 <canvas_paint>:
    54d8:	stp	x29, x30, [sp, #-128]!
    54dc:	mov	x29, sp
    54e0:	str	x0, [sp, #24]
    54e4:	str	x1, [sp, #16]
    54e8:	ldr	x0, [sp, #24]
    54ec:	str	x0, [sp, #96]
    54f0:	add	x0, sp, #0x44
    54f4:	bl	0 <grub_video_get_area_status>
    54f8:	ldr	x0, [sp, #96]
    54fc:	add	x0, x0, #0x38
    5500:	add	x1, sp, #0x48
    5504:	bl	5198 <grub_gui_set_viewport>
    5508:	ldr	x0, [sp, #96]
    550c:	ldr	x0, [x0, #88]
    5510:	str	x0, [sp, #120]
    5514:	b	5818 <canvas_paint+0x340>
    5518:	ldr	x0, [sp, #120]
    551c:	ldr	x0, [x0]
    5520:	str	x0, [sp, #88]
    5524:	ldr	x0, [sp, #96]
    5528:	ldr	w0, [x0, #64]
    552c:	mov	w2, w0
    5530:	ldr	x0, [sp, #88]
    5534:	ldr	w0, [x0, #28]
    5538:	mov	w1, w0
    553c:	mov	w0, w2
    5540:	bl	50e0 <grub_fixed_sfs_multiply>
    5544:	mov	w1, w0
    5548:	ldr	x0, [sp, #88]
    554c:	ldr	w0, [x0, #24]
    5550:	add	w0, w1, w0
    5554:	str	w0, [sp, #108]
    5558:	ldr	x0, [sp, #96]
    555c:	ldr	w0, [x0, #68]
    5560:	mov	w2, w0
    5564:	ldr	x0, [sp, #88]
    5568:	ldr	w0, [x0, #36]
    556c:	mov	w1, w0
    5570:	mov	w0, w2
    5574:	bl	50e0 <grub_fixed_sfs_multiply>
    5578:	mov	w1, w0
    557c:	ldr	x0, [sp, #88]
    5580:	ldr	w0, [x0, #32]
    5584:	add	w0, w1, w0
    5588:	str	w0, [sp, #104]
    558c:	ldr	x0, [sp, #96]
    5590:	ldr	w0, [x0, #64]
    5594:	mov	w2, w0
    5598:	ldr	x0, [sp, #88]
    559c:	ldr	w0, [x0, #12]
    55a0:	mov	w1, w0
    55a4:	mov	w0, w2
    55a8:	bl	50e0 <grub_fixed_sfs_multiply>
    55ac:	mov	w1, w0
    55b0:	ldr	x0, [sp, #88]
    55b4:	ldr	w0, [x0, #8]
    55b8:	add	w0, w1, w0
    55bc:	str	w0, [sp, #116]
    55c0:	ldr	x0, [sp, #96]
    55c4:	ldr	w0, [x0, #68]
    55c8:	mov	w2, w0
    55cc:	ldr	x0, [sp, #88]
    55d0:	ldr	w0, [x0, #20]
    55d4:	mov	w1, w0
    55d8:	mov	w0, w2
    55dc:	bl	50e0 <grub_fixed_sfs_multiply>
    55e0:	mov	w1, w0
    55e4:	ldr	x0, [sp, #88]
    55e8:	ldr	w0, [x0, #16]
    55ec:	add	w0, w1, w0
    55f0:	str	w0, [sp, #112]
    55f4:	ldr	x0, [sp, #88]
    55f8:	ldr	x0, [x0]
    55fc:	ldr	x0, [x0, #64]
    5600:	cmp	x0, #0x0
    5604:	b.eq	5664 <canvas_paint+0x18c>  // b.none
    5608:	ldr	x0, [sp, #88]
    560c:	ldr	x0, [x0]
    5610:	ldr	x3, [x0, #64]
    5614:	add	x1, sp, #0x28
    5618:	add	x0, sp, #0x2c
    561c:	mov	x2, x1
    5620:	mov	x1, x0
    5624:	ldr	x0, [sp, #88]
    5628:	blr	x3
    562c:	ldr	w0, [sp, #44]
    5630:	mov	w1, w0
    5634:	ldr	w0, [sp, #108]
    5638:	cmp	w0, w1
    563c:	b.ge	5648 <canvas_paint+0x170>  // b.tcont
    5640:	ldr	w0, [sp, #44]
    5644:	str	w0, [sp, #108]
    5648:	ldr	w0, [sp, #40]
    564c:	mov	w1, w0
    5650:	ldr	w0, [sp, #104]
    5654:	cmp	w0, w1
    5658:	b.ge	5664 <canvas_paint+0x18c>  // b.tcont
    565c:	ldr	w0, [sp, #40]
    5660:	str	w0, [sp, #104]
    5664:	ldr	w0, [sp, #108]
    5668:	cmp	w0, #0x0
    566c:	b.gt	5678 <canvas_paint+0x1a0>
    5670:	mov	w0, #0x20                  	// #32
    5674:	str	w0, [sp, #108]
    5678:	ldr	w0, [sp, #104]
    567c:	cmp	w0, #0x0
    5680:	b.gt	568c <canvas_paint+0x1b4>
    5684:	mov	w0, #0x20                  	// #32
    5688:	str	w0, [sp, #104]
    568c:	ldr	x0, [sp, #96]
    5690:	ldr	w0, [x0, #64]
    5694:	mov	w1, w0
    5698:	ldr	w0, [sp, #116]
    569c:	cmp	w0, w1
    56a0:	b.lt	56b4 <canvas_paint+0x1dc>  // b.tstop
    56a4:	ldr	x0, [sp, #96]
    56a8:	ldr	w0, [x0, #64]
    56ac:	sub	w0, w0, #0x20
    56b0:	str	w0, [sp, #116]
    56b4:	ldr	x0, [sp, #96]
    56b8:	ldr	w0, [x0, #68]
    56bc:	mov	w1, w0
    56c0:	ldr	w0, [sp, #112]
    56c4:	cmp	w0, w1
    56c8:	b.lt	56dc <canvas_paint+0x204>  // b.tstop
    56cc:	ldr	x0, [sp, #96]
    56d0:	ldr	w0, [x0, #68]
    56d4:	sub	w0, w0, #0x20
    56d8:	str	w0, [sp, #112]
    56dc:	ldr	w0, [sp, #116]
    56e0:	cmp	w0, #0x0
    56e4:	b.ge	56ec <canvas_paint+0x214>  // b.tcont
    56e8:	str	wzr, [sp, #116]
    56ec:	ldr	w0, [sp, #112]
    56f0:	cmp	w0, #0x0
    56f4:	b.ge	56fc <canvas_paint+0x224>  // b.tcont
    56f8:	str	wzr, [sp, #112]
    56fc:	ldr	w1, [sp, #116]
    5700:	ldr	w0, [sp, #108]
    5704:	add	w0, w1, w0
    5708:	ldr	x1, [sp, #96]
    570c:	ldr	w1, [x1, #64]
    5710:	cmp	w0, w1
    5714:	b.lt	572c <canvas_paint+0x254>  // b.tstop
    5718:	ldr	x0, [sp, #96]
    571c:	ldr	w1, [x0, #64]
    5720:	ldr	w0, [sp, #116]
    5724:	sub	w0, w1, w0
    5728:	str	w0, [sp, #108]
    572c:	ldr	w1, [sp, #112]
    5730:	ldr	w0, [sp, #104]
    5734:	add	w0, w1, w0
    5738:	ldr	x1, [sp, #96]
    573c:	ldr	w1, [x1, #68]
    5740:	cmp	w0, w1
    5744:	b.lt	575c <canvas_paint+0x284>  // b.tstop
    5748:	ldr	x0, [sp, #96]
    574c:	ldr	w1, [x0, #68]
    5750:	ldr	w0, [sp, #112]
    5754:	sub	w0, w1, w0
    5758:	str	w0, [sp, #104]
    575c:	ldr	w0, [sp, #116]
    5760:	str	w0, [sp, #48]
    5764:	ldr	w0, [sp, #112]
    5768:	str	w0, [sp, #52]
    576c:	ldr	w0, [sp, #108]
    5770:	str	w0, [sp, #56]
    5774:	ldr	w0, [sp, #104]
    5778:	str	w0, [sp, #60]
    577c:	ldr	x0, [sp, #88]
    5780:	ldr	x0, [x0]
    5784:	ldr	x2, [x0, #48]
    5788:	add	x0, sp, #0x30
    578c:	mov	x1, x0
    5790:	ldr	x0, [sp, #88]
    5794:	blr	x2
    5798:	add	x0, sp, #0x30
    579c:	mov	x1, x0
    57a0:	ldr	x0, [sp, #16]
    57a4:	bl	5200 <grub_video_have_common_points>
    57a8:	cmp	w0, #0x0
    57ac:	b.eq	5808 <canvas_paint+0x330>  // b.none
    57b0:	ldr	w0, [sp, #68]
    57b4:	cmp	w0, #0x1
    57b8:	b.ne	57d8 <canvas_paint+0x300>  // b.any
    57bc:	add	x0, sp, #0x30
    57c0:	ldr	x1, [sp, #16]
    57c4:	bl	5318 <grub_video_bounds_inside_region>
    57c8:	cmp	w0, #0x0
    57cc:	b.eq	57d8 <canvas_paint+0x300>  // b.none
    57d0:	mov	w0, #0x0                   	// #0
    57d4:	bl	0 <grub_video_set_area_status>
    57d8:	ldr	x0, [sp, #88]
    57dc:	ldr	x0, [x0]
    57e0:	ldr	x2, [x0, #24]
    57e4:	ldr	x1, [sp, #16]
    57e8:	ldr	x0, [sp, #88]
    57ec:	blr	x2
    57f0:	ldr	w0, [sp, #68]
    57f4:	cmp	w0, #0x1
    57f8:	b.ne	580c <canvas_paint+0x334>  // b.any
    57fc:	mov	w0, #0x1                   	// #1
    5800:	bl	0 <grub_video_set_area_status>
    5804:	b	580c <canvas_paint+0x334>
    5808:	nop
    580c:	ldr	x0, [sp, #120]
    5810:	ldr	x0, [x0, #8]
    5814:	str	x0, [sp, #120]
    5818:	ldr	x0, [sp, #120]
    581c:	cmp	x0, #0x0
    5820:	b.ne	5518 <canvas_paint+0x40>  // b.any
    5824:	add	x0, sp, #0x48
    5828:	bl	5154 <grub_gui_restore_viewport>
    582c:	nop
    5830:	ldp	x29, x30, [sp], #128
    5834:	ret

0000000000005838 <canvas_set_parent>:
    5838:	sub	sp, sp, #0x20
    583c:	str	x0, [sp, #8]
    5840:	str	x1, [sp]
    5844:	ldr	x0, [sp, #8]
    5848:	str	x0, [sp, #24]
    584c:	ldr	x0, [sp, #24]
    5850:	ldr	x1, [sp]
    5854:	str	x1, [x0, #48]
    5858:	nop
    585c:	add	sp, sp, #0x20
    5860:	ret

0000000000005864 <canvas_get_parent>:
    5864:	sub	sp, sp, #0x20
    5868:	str	x0, [sp, #8]
    586c:	ldr	x0, [sp, #8]
    5870:	str	x0, [sp, #24]
    5874:	ldr	x0, [sp, #24]
    5878:	ldr	x0, [x0, #48]
    587c:	add	sp, sp, #0x20
    5880:	ret

0000000000005884 <canvas_set_bounds>:
    5884:	sub	sp, sp, #0x20
    5888:	str	x0, [sp, #8]
    588c:	str	x1, [sp]
    5890:	ldr	x0, [sp, #8]
    5894:	str	x0, [sp, #24]
    5898:	ldr	x2, [sp, #24]
    589c:	ldr	x0, [sp]
    58a0:	ldp	x0, x1, [x0]
    58a4:	stp	x0, x1, [x2, #56]
    58a8:	nop
    58ac:	add	sp, sp, #0x20
    58b0:	ret

00000000000058b4 <canvas_get_bounds>:
    58b4:	sub	sp, sp, #0x20
    58b8:	str	x0, [sp, #8]
    58bc:	str	x1, [sp]
    58c0:	ldr	x0, [sp, #8]
    58c4:	str	x0, [sp, #24]
    58c8:	ldr	x2, [sp]
    58cc:	ldr	x0, [sp, #24]
    58d0:	ldp	x0, x1, [x0, #56]
    58d4:	stp	x0, x1, [x2]
    58d8:	nop
    58dc:	add	sp, sp, #0x20
    58e0:	ret

00000000000058e4 <canvas_set_property>:
    58e4:	stp	x29, x30, [sp, #-64]!
    58e8:	mov	x29, sp
    58ec:	str	x0, [sp, #40]
    58f0:	str	x1, [sp, #32]
    58f4:	str	x2, [sp, #24]
    58f8:	ldr	x0, [sp, #40]
    58fc:	str	x0, [sp, #56]
    5900:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    5904:	add	x0, x0, #0x0
    5908:	ldr	x1, [x0]
    590c:	ldr	x0, [sp, #32]
    5910:	bl	0 <grub_strcmp>
    5914:	cmp	w0, #0x0
    5918:	b.ne	5974 <canvas_set_property+0x90>  // b.any
    591c:	ldr	x0, [sp, #56]
    5920:	ldr	x0, [x0, #72]
    5924:	bl	0 <grub_free>
    5928:	ldr	x0, [sp, #24]
    592c:	cmp	x0, #0x0
    5930:	b.eq	596c <canvas_set_property+0x88>  // b.none
    5934:	ldr	x0, [sp, #24]
    5938:	bl	0 <grub_strdup>
    593c:	mov	x1, x0
    5940:	ldr	x0, [sp, #56]
    5944:	str	x1, [x0, #72]
    5948:	ldr	x0, [sp, #56]
    594c:	ldr	x0, [x0, #72]
    5950:	cmp	x0, #0x0
    5954:	b.ne	5974 <canvas_set_property+0x90>  // b.any
    5958:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    595c:	add	x0, x0, #0x0
    5960:	ldr	x0, [x0]
    5964:	ldr	w0, [x0]
    5968:	b	5984 <canvas_set_property+0xa0>
    596c:	ldr	x0, [sp, #56]
    5970:	str	xzr, [x0, #72]
    5974:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    5978:	add	x0, x0, #0x0
    597c:	ldr	x0, [x0]
    5980:	ldr	w0, [x0]
    5984:	ldp	x29, x30, [sp], #64
    5988:	ret
    598c:	nop
	...

00000000000059a0 <canvas_add>:
    59a0:	stp	x29, x30, [sp, #-48]!
    59a4:	mov	x29, sp
    59a8:	str	x0, [sp, #24]
    59ac:	str	x1, [sp, #16]
    59b0:	ldr	x0, [sp, #24]
    59b4:	str	x0, [sp, #40]
    59b8:	mov	x0, #0x10                  	// #16
    59bc:	bl	0 <grub_malloc>
    59c0:	str	x0, [sp, #32]
    59c4:	ldr	x0, [sp, #32]
    59c8:	cmp	x0, #0x0
    59cc:	b.eq	5a14 <canvas_add+0x74>  // b.none
    59d0:	ldr	x0, [sp, #32]
    59d4:	ldr	x1, [sp, #16]
    59d8:	str	x1, [x0]
    59dc:	ldr	x0, [sp, #40]
    59e0:	ldr	x1, [x0, #88]
    59e4:	ldr	x0, [sp, #32]
    59e8:	str	x1, [x0, #8]
    59ec:	ldr	x0, [sp, #40]
    59f0:	ldr	x1, [sp, #32]
    59f4:	str	x1, [x0, #88]
    59f8:	ldr	x0, [sp, #16]
    59fc:	ldr	x0, [x0]
    5a00:	ldr	x2, [x0, #32]
    5a04:	ldr	x1, [sp, #40]
    5a08:	ldr	x0, [sp, #16]
    5a0c:	blr	x2
    5a10:	b	5a18 <canvas_add+0x78>
    5a14:	nop
    5a18:	ldp	x29, x30, [sp], #48
    5a1c:	ret

0000000000005a20 <canvas_remove>:
    5a20:	stp	x29, x30, [sp, #-64]!
    5a24:	mov	x29, sp
    5a28:	str	x0, [sp, #24]
    5a2c:	str	x1, [sp, #16]
    5a30:	ldr	x0, [sp, #24]
    5a34:	str	x0, [sp, #40]
    5a38:	ldr	x0, [sp, #40]
    5a3c:	add	x0, x0, #0x50
    5a40:	str	x0, [sp, #48]
    5a44:	ldr	x0, [sp, #40]
    5a48:	ldr	x0, [x0, #88]
    5a4c:	str	x0, [sp, #56]
    5a50:	b	5a98 <canvas_remove+0x78>
    5a54:	ldr	x0, [sp, #56]
    5a58:	ldr	x0, [x0]
    5a5c:	ldr	x1, [sp, #16]
    5a60:	cmp	x1, x0
    5a64:	b.ne	5a84 <canvas_remove+0x64>  // b.any
    5a68:	ldr	x0, [sp, #56]
    5a6c:	ldr	x1, [x0, #8]
    5a70:	ldr	x0, [sp, #48]
    5a74:	str	x1, [x0, #8]
    5a78:	ldr	x0, [sp, #56]
    5a7c:	bl	0 <grub_free>
    5a80:	b	5aa4 <canvas_remove+0x84>
    5a84:	ldr	x0, [sp, #56]
    5a88:	str	x0, [sp, #48]
    5a8c:	ldr	x0, [sp, #56]
    5a90:	ldr	x0, [x0, #8]
    5a94:	str	x0, [sp, #56]
    5a98:	ldr	x0, [sp, #56]
    5a9c:	cmp	x0, #0x0
    5aa0:	b.ne	5a54 <canvas_remove+0x34>  // b.any
    5aa4:	ldp	x29, x30, [sp], #64
    5aa8:	ret

0000000000005aac <canvas_iterate_children>:
    5aac:	stp	x29, x30, [sp, #-64]!
    5ab0:	mov	x29, sp
    5ab4:	str	x0, [sp, #40]
    5ab8:	str	x1, [sp, #32]
    5abc:	str	x2, [sp, #24]
    5ac0:	ldr	x0, [sp, #40]
    5ac4:	str	x0, [sp, #48]
    5ac8:	ldr	x0, [sp, #48]
    5acc:	ldr	x0, [x0, #88]
    5ad0:	str	x0, [sp, #56]
    5ad4:	b	5af8 <canvas_iterate_children+0x4c>
    5ad8:	ldr	x0, [sp, #56]
    5adc:	ldr	x0, [x0]
    5ae0:	ldr	x2, [sp, #32]
    5ae4:	ldr	x1, [sp, #24]
    5ae8:	blr	x2
    5aec:	ldr	x0, [sp, #56]
    5af0:	ldr	x0, [x0, #8]
    5af4:	str	x0, [sp, #56]
    5af8:	ldr	x0, [sp, #56]
    5afc:	cmp	x0, #0x0
    5b00:	b.ne	5ad8 <canvas_iterate_children+0x2c>  // b.any
    5b04:	nop
    5b08:	nop
    5b0c:	ldp	x29, x30, [sp], #64
    5b10:	ret

0000000000005b14 <grub_gui_canvas_new>:
    5b14:	stp	x29, x30, [sp, #-32]!
    5b18:	mov	x29, sp
    5b1c:	mov	x0, #0x60                  	// #96
    5b20:	bl	0 <grub_zalloc>
    5b24:	str	x0, [sp, #24]
    5b28:	ldr	x0, [sp, #24]
    5b2c:	cmp	x0, #0x0
    5b30:	b.ne	5b3c <grub_gui_canvas_new+0x28>  // b.any
    5b34:	mov	x0, #0x0                   	// #0
    5b38:	b	5b68 <grub_gui_canvas_new+0x54>
    5b3c:	ldr	x0, [sp, #24]
    5b40:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    5b44:	add	x1, x1, #0x0
    5b48:	ldr	x1, [x1]
    5b4c:	str	x1, [x0, #40]
    5b50:	ldr	x0, [sp, #24]
    5b54:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    5b58:	add	x1, x1, #0x0
    5b5c:	ldr	x1, [x1]
    5b60:	str	x1, [x0]
    5b64:	ldr	x0, [sp, #24]
    5b68:	ldp	x29, x30, [sp], #32
    5b6c:	ret
	...

0000000000005b80 <grub_strtol>:
    5b80:	stp	x29, x30, [sp, #-64]!
    5b84:	mov	x29, sp
    5b88:	str	x0, [sp, #40]
    5b8c:	str	x1, [sp, #32]
    5b90:	str	w2, [sp, #28]
    5b94:	str	wzr, [sp, #60]
    5b98:	b	5ba8 <grub_strtol+0x28>
    5b9c:	ldr	x0, [sp, #40]
    5ba0:	add	x0, x0, #0x1
    5ba4:	str	x0, [sp, #40]
    5ba8:	ldr	x0, [sp, #40]
    5bac:	ldrb	w0, [x0]
    5bb0:	cmp	w0, #0x0
    5bb4:	b.eq	5bcc <grub_strtol+0x4c>  // b.none
    5bb8:	ldr	x0, [sp, #40]
    5bbc:	ldrb	w0, [x0]
    5bc0:	bl	0 <grub_isspace>
    5bc4:	cmp	w0, #0x0
    5bc8:	b.ne	5b9c <grub_strtol+0x1c>  // b.any
    5bcc:	ldr	x0, [sp, #40]
    5bd0:	ldrb	w0, [x0]
    5bd4:	cmp	w0, #0x2d
    5bd8:	b.ne	5bf0 <grub_strtol+0x70>  // b.any
    5bdc:	mov	w0, #0x1                   	// #1
    5be0:	str	w0, [sp, #60]
    5be4:	ldr	x0, [sp, #40]
    5be8:	add	x0, x0, #0x1
    5bec:	str	x0, [sp, #40]
    5bf0:	ldr	w2, [sp, #28]
    5bf4:	ldr	x1, [sp, #32]
    5bf8:	ldr	x0, [sp, #40]
    5bfc:	bl	0 <grub_strtoull>
    5c00:	str	x0, [sp, #48]
    5c04:	ldr	w0, [sp, #60]
    5c08:	cmp	w0, #0x0
    5c0c:	b.eq	5c48 <grub_strtol+0xc8>  // b.none
    5c10:	ldr	x1, [sp, #48]
    5c14:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    5c18:	cmp	x1, x0
    5c1c:	b.ls	5c3c <grub_strtol+0xbc>  // b.plast
    5c20:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    5c24:	add	x0, x0, #0x0
    5c28:	ldr	x1, [x0]
    5c2c:	mov	w0, #0xb                   	// #11
    5c30:	bl	0 <grub_error>
    5c34:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    5c38:	b	5c74 <grub_strtol+0xf4>
    5c3c:	ldr	x0, [sp, #48]
    5c40:	neg	x0, x0
    5c44:	b	5c74 <grub_strtol+0xf4>
    5c48:	ldr	x0, [sp, #48]
    5c4c:	cmp	x0, #0x0
    5c50:	b.ge	5c70 <grub_strtol+0xf0>  // b.tcont
    5c54:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    5c58:	add	x0, x0, #0x0
    5c5c:	ldr	x1, [x0]
    5c60:	mov	w0, #0xb                   	// #11
    5c64:	bl	0 <grub_error>
    5c68:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    5c6c:	b	5c74 <grub_strtol+0xf4>
    5c70:	ldr	x0, [sp, #48]
    5c74:	ldp	x29, x30, [sp], #64
    5c78:	ret
    5c7c:	nop
	...

0000000000005c88 <grub_video_bitmap_get_width>:
    5c88:	sub	sp, sp, #0x10
    5c8c:	str	x0, [sp, #8]
    5c90:	ldr	x0, [sp, #8]
    5c94:	cmp	x0, #0x0
    5c98:	b.ne	5ca4 <grub_video_bitmap_get_width+0x1c>  // b.any
    5c9c:	mov	w0, #0x0                   	// #0
    5ca0:	b	5cac <grub_video_bitmap_get_width+0x24>
    5ca4:	ldr	x0, [sp, #8]
    5ca8:	ldr	w0, [x0]
    5cac:	add	sp, sp, #0x10
    5cb0:	ret

0000000000005cb4 <grub_video_bitmap_get_height>:
    5cb4:	sub	sp, sp, #0x10
    5cb8:	str	x0, [sp, #8]
    5cbc:	ldr	x0, [sp, #8]
    5cc0:	cmp	x0, #0x0
    5cc4:	b.ne	5cd0 <grub_video_bitmap_get_height+0x1c>  // b.any
    5cc8:	mov	w0, #0x0                   	// #0
    5ccc:	b	5cd8 <grub_video_bitmap_get_height+0x24>
    5cd0:	ldr	x0, [sp, #8]
    5cd4:	ldr	w0, [x0, #4]
    5cd8:	add	sp, sp, #0x10
    5cdc:	ret

0000000000005ce0 <grub_gfxmenu_timeout_register>:
    5ce0:	stp	x29, x30, [sp, #-48]!
    5ce4:	mov	x29, sp
    5ce8:	str	x0, [sp, #24]
    5cec:	str	x1, [sp, #16]
    5cf0:	mov	x0, #0x18                  	// #24
    5cf4:	bl	0 <grub_malloc>
    5cf8:	str	x0, [sp, #40]
    5cfc:	ldr	x0, [sp, #40]
    5d00:	cmp	x0, #0x0
    5d04:	b.ne	5d1c <grub_gfxmenu_timeout_register+0x3c>  // b.any
    5d08:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    5d0c:	add	x0, x0, #0x0
    5d10:	ldr	x0, [x0]
    5d14:	ldr	w0, [x0]
    5d18:	b	5d64 <grub_gfxmenu_timeout_register+0x84>
    5d1c:	ldr	x0, [sp, #40]
    5d20:	ldr	x1, [sp, #16]
    5d24:	str	x1, [x0, #8]
    5d28:	ldr	x0, [sp, #40]
    5d2c:	ldr	x1, [sp, #24]
    5d30:	str	x1, [x0, #16]
    5d34:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    5d38:	add	x0, x0, #0x0
    5d3c:	ldr	x0, [x0]
    5d40:	ldr	x1, [x0]
    5d44:	ldr	x0, [sp, #40]
    5d48:	str	x1, [x0]
    5d4c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    5d50:	add	x0, x0, #0x0
    5d54:	ldr	x0, [x0]
    5d58:	ldr	x1, [sp, #40]
    5d5c:	str	x1, [x0]
    5d60:	mov	w0, #0x0                   	// #0
    5d64:	ldp	x29, x30, [sp], #48
    5d68:	ret
    5d6c:	nop
	...

0000000000005d80 <grub_gfxmenu_timeout_unregister>:
    5d80:	stp	x29, x30, [sp, #-48]!
    5d84:	mov	x29, sp
    5d88:	str	x0, [sp, #24]
    5d8c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    5d90:	add	x0, x0, #0x0
    5d94:	ldr	x0, [x0]
    5d98:	str	x0, [sp, #40]
    5d9c:	ldr	x0, [sp, #40]
    5da0:	ldr	x0, [x0]
    5da4:	str	x0, [sp, #32]
    5da8:	b	5df0 <grub_gfxmenu_timeout_unregister+0x70>
    5dac:	ldr	x0, [sp, #32]
    5db0:	ldr	x0, [x0, #16]
    5db4:	ldr	x1, [sp, #24]
    5db8:	cmp	x1, x0
    5dbc:	b.ne	5ddc <grub_gfxmenu_timeout_unregister+0x5c>  // b.any
    5dc0:	ldr	x0, [sp, #32]
    5dc4:	ldr	x1, [x0]
    5dc8:	ldr	x0, [sp, #40]
    5dcc:	str	x1, [x0]
    5dd0:	ldr	x0, [sp, #32]
    5dd4:	bl	0 <grub_free>
    5dd8:	b	5e00 <grub_gfxmenu_timeout_unregister+0x80>
    5ddc:	ldr	x0, [sp, #32]
    5de0:	str	x0, [sp, #40]
    5de4:	ldr	x0, [sp, #32]
    5de8:	ldr	x0, [x0]
    5dec:	str	x0, [sp, #32]
    5df0:	ldr	x0, [sp, #32]
    5df4:	cmp	x0, #0x0
    5df8:	b.ne	5dac <grub_gfxmenu_timeout_unregister+0x2c>  // b.any
    5dfc:	nop
    5e00:	nop
    5e04:	ldp	x29, x30, [sp], #48
    5e08:	ret
    5e0c:	nop
	...

0000000000005e18 <grub_divide_round>:
    5e18:	sub	sp, sp, #0x20
    5e1c:	str	w0, [sp, #12]
    5e20:	str	w1, [sp, #8]
    5e24:	str	wzr, [sp, #28]
    5e28:	ldr	w0, [sp, #8]
    5e2c:	cmp	w0, #0x0
    5e30:	b.ge	5e54 <grub_divide_round+0x3c>  // b.tcont
    5e34:	ldr	w0, [sp, #8]
    5e38:	neg	w0, w0
    5e3c:	str	w0, [sp, #8]
    5e40:	ldr	w0, [sp, #28]
    5e44:	cmp	w0, #0x0
    5e48:	cset	w0, eq  // eq = none
    5e4c:	and	w0, w0, #0xff
    5e50:	str	w0, [sp, #28]
    5e54:	ldr	w0, [sp, #12]
    5e58:	cmp	w0, #0x0
    5e5c:	b.ge	5e80 <grub_divide_round+0x68>  // b.tcont
    5e60:	ldr	w0, [sp, #12]
    5e64:	neg	w0, w0
    5e68:	str	w0, [sp, #12]
    5e6c:	ldr	w0, [sp, #28]
    5e70:	cmp	w0, #0x0
    5e74:	cset	w0, eq  // eq = none
    5e78:	and	w0, w0, #0xff
    5e7c:	str	w0, [sp, #28]
    5e80:	ldr	w0, [sp, #8]
    5e84:	lsr	w1, w0, #31
    5e88:	add	w0, w1, w0
    5e8c:	asr	w0, w0, #1
    5e90:	mov	w1, w0
    5e94:	ldr	w0, [sp, #12]
    5e98:	add	w0, w1, w0
    5e9c:	mov	w1, w0
    5ea0:	ldr	w0, [sp, #8]
    5ea4:	udiv	w0, w1, w0
    5ea8:	str	w0, [sp, #24]
    5eac:	ldr	w0, [sp, #28]
    5eb0:	cmp	w0, #0x0
    5eb4:	b.eq	5ec4 <grub_divide_round+0xac>  // b.none
    5eb8:	ldr	w0, [sp, #24]
    5ebc:	neg	w0, w0
    5ec0:	b	5ec8 <grub_divide_round+0xb0>
    5ec4:	ldr	w0, [sp, #24]
    5ec8:	add	sp, sp, #0x20
    5ecc:	ret

0000000000005ed0 <grub_gui_save_viewport>:
    5ed0:	stp	x29, x30, [sp, #-32]!
    5ed4:	mov	x29, sp
    5ed8:	str	x0, [sp, #24]
    5edc:	ldr	x4, [sp, #24]
    5ee0:	ldr	x0, [sp, #24]
    5ee4:	add	x1, x0, #0x4
    5ee8:	ldr	x0, [sp, #24]
    5eec:	add	x2, x0, #0x8
    5ef0:	ldr	x0, [sp, #24]
    5ef4:	add	x0, x0, #0xc
    5ef8:	mov	x3, x0
    5efc:	mov	x0, x4
    5f00:	bl	0 <grub_video_get_viewport>
    5f04:	nop
    5f08:	ldp	x29, x30, [sp], #32
    5f0c:	ret

0000000000005f10 <grub_gui_restore_viewport>:
    5f10:	stp	x29, x30, [sp, #-32]!
    5f14:	mov	x29, sp
    5f18:	str	x0, [sp, #24]
    5f1c:	ldr	x0, [sp, #24]
    5f20:	ldr	w4, [x0]
    5f24:	ldr	x0, [sp, #24]
    5f28:	ldr	w1, [x0, #4]
    5f2c:	ldr	x0, [sp, #24]
    5f30:	ldr	w2, [x0, #8]
    5f34:	ldr	x0, [sp, #24]
    5f38:	ldr	w0, [x0, #12]
    5f3c:	mov	w3, w0
    5f40:	mov	w0, w4
    5f44:	bl	0 <grub_video_set_viewport>
    5f48:	nop
    5f4c:	ldp	x29, x30, [sp], #32
    5f50:	ret

0000000000005f54 <grub_gui_set_viewport>:
    5f54:	stp	x29, x30, [sp, #-32]!
    5f58:	mov	x29, sp
    5f5c:	str	x0, [sp, #24]
    5f60:	str	x1, [sp, #16]
    5f64:	ldr	x0, [sp, #16]
    5f68:	bl	5ed0 <grub_gui_save_viewport>
    5f6c:	ldr	x0, [sp, #16]
    5f70:	ldr	w1, [x0]
    5f74:	ldr	x0, [sp, #24]
    5f78:	ldr	w0, [x0]
    5f7c:	add	w4, w1, w0
    5f80:	ldr	x0, [sp, #16]
    5f84:	ldr	w1, [x0, #4]
    5f88:	ldr	x0, [sp, #24]
    5f8c:	ldr	w0, [x0, #4]
    5f90:	add	w1, w1, w0
    5f94:	ldr	x0, [sp, #24]
    5f98:	ldr	w2, [x0, #8]
    5f9c:	ldr	x0, [sp, #24]
    5fa0:	ldr	w0, [x0, #12]
    5fa4:	mov	w3, w0
    5fa8:	mov	w0, w4
    5fac:	bl	0 <grub_video_set_viewport>
    5fb0:	nop
    5fb4:	ldp	x29, x30, [sp], #32
    5fb8:	ret

0000000000005fbc <grub_video_have_common_points>:
    5fbc:	sub	sp, sp, #0x10
    5fc0:	str	x0, [sp, #8]
    5fc4:	str	x1, [sp]
    5fc8:	ldr	x0, [sp, #8]
    5fcc:	ldr	w1, [x0]
    5fd0:	ldr	x0, [sp]
    5fd4:	ldr	w0, [x0]
    5fd8:	cmp	w1, w0
    5fdc:	b.hi	6004 <grub_video_have_common_points+0x48>  // b.pmore
    5fe0:	ldr	x0, [sp]
    5fe4:	ldr	w1, [x0]
    5fe8:	ldr	x0, [sp, #8]
    5fec:	ldr	w2, [x0]
    5ff0:	ldr	x0, [sp, #8]
    5ff4:	ldr	w0, [x0, #8]
    5ff8:	add	w0, w2, w0
    5ffc:	cmp	w1, w0
    6000:	b.ls	6048 <grub_video_have_common_points+0x8c>  // b.plast
    6004:	ldr	x0, [sp]
    6008:	ldr	w1, [x0]
    600c:	ldr	x0, [sp, #8]
    6010:	ldr	w0, [x0]
    6014:	cmp	w1, w0
    6018:	b.hi	6040 <grub_video_have_common_points+0x84>  // b.pmore
    601c:	ldr	x0, [sp, #8]
    6020:	ldr	w1, [x0]
    6024:	ldr	x0, [sp]
    6028:	ldr	w2, [x0]
    602c:	ldr	x0, [sp]
    6030:	ldr	w0, [x0, #8]
    6034:	add	w0, w2, w0
    6038:	cmp	w1, w0
    603c:	b.ls	6048 <grub_video_have_common_points+0x8c>  // b.plast
    6040:	mov	w0, #0x0                   	// #0
    6044:	b	60cc <grub_video_have_common_points+0x110>
    6048:	ldr	x0, [sp, #8]
    604c:	ldr	w1, [x0, #4]
    6050:	ldr	x0, [sp]
    6054:	ldr	w0, [x0, #4]
    6058:	cmp	w1, w0
    605c:	b.hi	6084 <grub_video_have_common_points+0xc8>  // b.pmore
    6060:	ldr	x0, [sp]
    6064:	ldr	w1, [x0, #4]
    6068:	ldr	x0, [sp, #8]
    606c:	ldr	w2, [x0, #4]
    6070:	ldr	x0, [sp, #8]
    6074:	ldr	w0, [x0, #12]
    6078:	add	w0, w2, w0
    607c:	cmp	w1, w0
    6080:	b.ls	60c8 <grub_video_have_common_points+0x10c>  // b.plast
    6084:	ldr	x0, [sp]
    6088:	ldr	w1, [x0, #4]
    608c:	ldr	x0, [sp, #8]
    6090:	ldr	w0, [x0, #4]
    6094:	cmp	w1, w0
    6098:	b.hi	60c0 <grub_video_have_common_points+0x104>  // b.pmore
    609c:	ldr	x0, [sp, #8]
    60a0:	ldr	w1, [x0, #4]
    60a4:	ldr	x0, [sp]
    60a8:	ldr	w2, [x0, #4]
    60ac:	ldr	x0, [sp]
    60b0:	ldr	w0, [x0, #12]
    60b4:	add	w0, w2, w0
    60b8:	cmp	w1, w0
    60bc:	b.ls	60c8 <grub_video_have_common_points+0x10c>  // b.plast
    60c0:	mov	w0, #0x0                   	// #0
    60c4:	b	60cc <grub_video_have_common_points+0x110>
    60c8:	mov	w0, #0x1                   	// #1
    60cc:	add	sp, sp, #0x10
    60d0:	ret

00000000000060d4 <grub_sin>:
    60d4:	sub	sp, sp, #0x10
    60d8:	str	w0, [sp, #12]
    60dc:	ldr	w0, [sp, #12]
    60e0:	and	w0, w0, #0xff
    60e4:	str	w0, [sp, #12]
    60e8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    60ec:	add	x0, x0, #0x0
    60f0:	ldr	x0, [x0]
    60f4:	ldrsw	x1, [sp, #12]
    60f8:	ldrsh	w0, [x0, x1, lsl #1]
    60fc:	add	sp, sp, #0x10
    6100:	ret
    6104:	nop
	...

0000000000006110 <grub_cos>:
    6110:	sub	sp, sp, #0x10
    6114:	str	w0, [sp, #12]
    6118:	ldr	w0, [sp, #12]
    611c:	and	w0, w0, #0xff
    6120:	str	w0, [sp, #12]
    6124:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    6128:	add	x0, x0, #0x0
    612c:	ldr	x0, [x0]
    6130:	ldrsw	x1, [sp, #12]
    6134:	ldrsh	w0, [x0, x1, lsl #1]
    6138:	add	sp, sp, #0x10
    613c:	ret
	...

0000000000006148 <circprog_destroy>:
    6148:	stp	x29, x30, [sp, #-48]!
    614c:	mov	x29, sp
    6150:	str	x0, [sp, #24]
    6154:	ldr	x0, [sp, #24]
    6158:	str	x0, [sp, #40]
    615c:	ldr	x0, [sp, #40]
    6160:	bl	5d80 <grub_gfxmenu_timeout_unregister>
    6164:	ldr	x0, [sp, #40]
    6168:	bl	0 <grub_free>
    616c:	nop
    6170:	ldp	x29, x30, [sp], #48
    6174:	ret

0000000000006178 <circprog_get_id>:
    6178:	sub	sp, sp, #0x20
    617c:	str	x0, [sp, #8]
    6180:	ldr	x0, [sp, #8]
    6184:	str	x0, [sp, #24]
    6188:	ldr	x0, [sp, #24]
    618c:	ldr	x0, [x0, #72]
    6190:	add	sp, sp, #0x20
    6194:	ret

0000000000006198 <circprog_is_instance>:
    6198:	stp	x29, x30, [sp, #-32]!
    619c:	mov	x29, sp
    61a0:	str	x0, [sp, #24]
    61a4:	str	x1, [sp, #16]
    61a8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    61ac:	add	x0, x0, #0x0
    61b0:	ldr	x1, [x0]
    61b4:	ldr	x0, [sp, #16]
    61b8:	bl	0 <grub_strcmp>
    61bc:	cmp	w0, #0x0
    61c0:	cset	w0, eq  // eq = none
    61c4:	and	w0, w0, #0xff
    61c8:	ldp	x29, x30, [sp], #32
    61cc:	ret
	...

00000000000061d8 <load_bitmap>:
    61d8:	stp	x29, x30, [sp, #-48]!
    61dc:	mov	x29, sp
    61e0:	str	x0, [sp, #24]
    61e4:	str	x1, [sp, #16]
    61e8:	ldr	x0, [sp, #24]
    61ec:	cmp	x0, #0x0
    61f0:	b.eq	6200 <load_bitmap+0x28>  // b.none
    61f4:	ldr	x0, [sp, #16]
    61f8:	cmp	x0, #0x0
    61fc:	b.ne	6208 <load_bitmap+0x30>  // b.any
    6200:	mov	x0, #0x0                   	// #0
    6204:	b	6264 <load_bitmap+0x8c>
    6208:	ldr	x1, [sp, #16]
    620c:	ldr	x0, [sp, #24]
    6210:	bl	d9e0 <grub_resolve_relative_path>
    6214:	str	x0, [sp, #40]
    6218:	ldr	x0, [sp, #40]
    621c:	cmp	x0, #0x0
    6220:	b.ne	622c <load_bitmap+0x54>  // b.any
    6224:	mov	x0, #0x0                   	// #0
    6228:	b	6264 <load_bitmap+0x8c>
    622c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    6230:	add	x0, x0, #0x0
    6234:	ldr	x0, [x0]
    6238:	str	wzr, [x0]
    623c:	add	x0, sp, #0x20
    6240:	ldr	x1, [sp, #40]
    6244:	bl	0 <grub_video_bitmap_load>
    6248:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    624c:	add	x0, x0, #0x0
    6250:	ldr	x0, [x0]
    6254:	str	wzr, [x0]
    6258:	ldr	x0, [sp, #40]
    625c:	bl	0 <grub_free>
    6260:	ldr	x0, [sp, #32]
    6264:	ldp	x29, x30, [sp], #48
    6268:	ret
    626c:	nop
	...

0000000000006278 <check_pixmaps>:
    6278:	stp	x29, x30, [sp, #-32]!
    627c:	mov	x29, sp
    6280:	str	x0, [sp, #24]
    6284:	ldr	x0, [sp, #24]
    6288:	ldr	w0, [x0, #120]
    628c:	cmp	w0, #0x0
    6290:	b.eq	6308 <check_pixmaps+0x90>  // b.none
    6294:	ldr	x0, [sp, #24]
    6298:	ldr	x0, [x0, #144]
    629c:	cmp	x0, #0x0
    62a0:	b.eq	62b0 <check_pixmaps+0x38>  // b.none
    62a4:	ldr	x0, [sp, #24]
    62a8:	ldr	x0, [x0, #144]
    62ac:	bl	0 <grub_video_bitmap_destroy>
    62b0:	ldr	x0, [sp, #24]
    62b4:	ldr	x2, [x0, #112]
    62b8:	ldr	x0, [sp, #24]
    62bc:	ldr	x0, [x0, #128]
    62c0:	mov	x1, x0
    62c4:	mov	x0, x2
    62c8:	bl	61d8 <load_bitmap>
    62cc:	mov	x1, x0
    62d0:	ldr	x0, [sp, #24]
    62d4:	str	x1, [x0, #144]
    62d8:	ldr	x0, [sp, #24]
    62dc:	ldr	x2, [x0, #112]
    62e0:	ldr	x0, [sp, #24]
    62e4:	ldr	x0, [x0, #136]
    62e8:	mov	x1, x0
    62ec:	mov	x0, x2
    62f0:	bl	61d8 <load_bitmap>
    62f4:	mov	x1, x0
    62f8:	ldr	x0, [sp, #24]
    62fc:	str	x1, [x0, #152]
    6300:	ldr	x0, [sp, #24]
    6304:	str	wzr, [x0, #120]
    6308:	ldr	x0, [sp, #24]
    630c:	ldr	x0, [x0, #144]
    6310:	cmp	x0, #0x0
    6314:	b.eq	6330 <check_pixmaps+0xb8>  // b.none
    6318:	ldr	x0, [sp, #24]
    631c:	ldr	x0, [x0, #152]
    6320:	cmp	x0, #0x0
    6324:	b.eq	6330 <check_pixmaps+0xb8>  // b.none
    6328:	mov	w0, #0x1                   	// #1
    632c:	b	6334 <check_pixmaps+0xbc>
    6330:	mov	w0, #0x0                   	// #0
    6334:	ldp	x29, x30, [sp], #32
    6338:	ret

000000000000633c <circprog_paint>:
    633c:	stp	x29, x30, [sp, #-128]!
    6340:	mov	x29, sp
    6344:	str	x19, [sp, #16]
    6348:	str	x0, [sp, #40]
    634c:	str	x1, [sp, #32]
    6350:	ldr	x0, [sp, #40]
    6354:	str	x0, [sp, #104]
    6358:	ldr	x0, [sp, #104]
    635c:	ldr	w0, [x0, #80]
    6360:	cmp	w0, #0x0
    6364:	b.eq	66c8 <circprog_paint+0x38c>  // b.none
    6368:	ldr	x0, [sp, #104]
    636c:	add	x0, x0, #0x38
    6370:	mov	x1, x0
    6374:	ldr	x0, [sp, #32]
    6378:	bl	5fbc <grub_video_have_common_points>
    637c:	cmp	w0, #0x0
    6380:	b.eq	66d0 <circprog_paint+0x394>  // b.none
    6384:	ldr	x0, [sp, #104]
    6388:	bl	6278 <check_pixmaps>
    638c:	cmp	w0, #0x0
    6390:	b.eq	66d8 <circprog_paint+0x39c>  // b.none
    6394:	ldr	x0, [sp, #104]
    6398:	add	x0, x0, #0x38
    639c:	add	x1, sp, #0x30
    63a0:	bl	5f54 <grub_gui_set_viewport>
    63a4:	ldr	x0, [sp, #104]
    63a8:	ldr	w0, [x0, #64]
    63ac:	str	w0, [sp, #100]
    63b0:	ldr	x0, [sp, #104]
    63b4:	ldr	w0, [x0, #68]
    63b8:	str	w0, [sp, #96]
    63bc:	ldr	x0, [sp, #104]
    63c0:	ldr	x0, [x0, #144]
    63c4:	bl	5c88 <grub_video_bitmap_get_width>
    63c8:	str	w0, [sp, #92]
    63cc:	ldr	x0, [sp, #104]
    63d0:	ldr	x0, [x0, #144]
    63d4:	bl	5cb4 <grub_video_bitmap_get_height>
    63d8:	str	w0, [sp, #88]
    63dc:	ldr	x0, [sp, #104]
    63e0:	ldr	x0, [x0, #152]
    63e4:	bl	5c88 <grub_video_bitmap_get_width>
    63e8:	str	w0, [sp, #84]
    63ec:	ldr	x0, [sp, #104]
    63f0:	ldr	x0, [x0, #152]
    63f4:	bl	5cb4 <grub_video_bitmap_get_height>
    63f8:	str	w0, [sp, #80]
    63fc:	ldr	x0, [sp, #104]
    6400:	ldr	x8, [x0, #144]
    6404:	ldr	w1, [sp, #100]
    6408:	ldr	w0, [sp, #92]
    640c:	sub	w0, w1, w0
    6410:	lsr	w1, w0, #31
    6414:	add	w0, w1, w0
    6418:	asr	w0, w0, #1
    641c:	mov	w2, w0
    6420:	ldr	w1, [sp, #96]
    6424:	ldr	w0, [sp, #88]
    6428:	sub	w0, w1, w0
    642c:	lsr	w1, w0, #31
    6430:	add	w0, w1, w0
    6434:	asr	w0, w0, #1
    6438:	mov	w3, w0
    643c:	ldr	w0, [sp, #92]
    6440:	ldr	w1, [sp, #88]
    6444:	mov	w7, w1
    6448:	mov	w6, w0
    644c:	mov	w5, #0x0                   	// #0
    6450:	mov	w4, #0x0                   	// #0
    6454:	mov	w1, #0x1                   	// #1
    6458:	mov	x0, x8
    645c:	bl	0 <grub_video_blit_bitmap>
    6460:	ldr	x0, [sp, #104]
    6464:	ldr	w0, [x0, #96]
    6468:	cmp	w0, #0x0
    646c:	b.eq	66bc <circprog_paint+0x380>  // b.none
    6470:	ldr	w0, [sp, #96]
    6474:	ldr	w2, [sp, #100]
    6478:	ldr	w1, [sp, #100]
    647c:	cmp	w2, w0
    6480:	csel	w0, w1, w0, le
    6484:	lsr	w1, w0, #31
    6488:	add	w0, w1, w0
    648c:	asr	w0, w0, #1
    6490:	mov	w3, w0
    6494:	ldr	w0, [sp, #80]
    6498:	ldr	w2, [sp, #84]
    649c:	ldr	w1, [sp, #84]
    64a0:	cmp	w2, w0
    64a4:	csel	w0, w1, w0, ge  // ge = tcont
    64a8:	lsr	w1, w0, #31
    64ac:	add	w0, w1, w0
    64b0:	asr	w0, w0, #1
    64b4:	neg	w0, w0
    64b8:	add	w0, w3, w0
    64bc:	sub	w0, w0, #0x1
    64c0:	str	w0, [sp, #76]
    64c4:	ldr	x0, [sp, #104]
    64c8:	ldr	w1, [x0, #88]
    64cc:	ldr	x0, [sp, #104]
    64d0:	ldr	w0, [x0, #84]
    64d4:	cmp	w1, w0
    64d8:	b.le	64f4 <circprog_paint+0x1b8>
    64dc:	ldr	x0, [sp, #104]
    64e0:	ldr	w1, [x0, #92]
    64e4:	ldr	x0, [sp, #104]
    64e8:	ldr	w0, [x0, #84]
    64ec:	cmp	w1, w0
    64f0:	b.gt	64fc <circprog_paint+0x1c0>
    64f4:	str	wzr, [sp, #124]
    64f8:	b	6538 <circprog_paint+0x1fc>
    64fc:	ldr	x0, [sp, #104]
    6500:	ldr	w0, [x0, #96]
    6504:	ldr	x1, [sp, #104]
    6508:	ldr	w2, [x1, #92]
    650c:	ldr	x1, [sp, #104]
    6510:	ldr	w1, [x1, #84]
    6514:	sub	w1, w2, w1
    6518:	mul	w0, w0, w1
    651c:	ldr	x1, [sp, #104]
    6520:	ldr	w2, [x1, #88]
    6524:	ldr	x1, [sp, #104]
    6528:	ldr	w1, [x1, #84]
    652c:	sub	w1, w2, w1
    6530:	udiv	w0, w0, w1
    6534:	str	w0, [sp, #124]
    6538:	ldr	x0, [sp, #104]
    653c:	ldr	w0, [x0, #104]
    6540:	cmp	w0, #0x0
    6544:	b.eq	6560 <circprog_paint+0x224>  // b.none
    6548:	ldr	w0, [sp, #124]
    654c:	str	w0, [sp, #120]
    6550:	ldr	x0, [sp, #104]
    6554:	ldr	w0, [x0, #96]
    6558:	str	w0, [sp, #116]
    655c:	b	656c <circprog_paint+0x230>
    6560:	str	wzr, [sp, #120]
    6564:	ldr	w0, [sp, #124]
    6568:	str	w0, [sp, #116]
    656c:	ldr	w0, [sp, #120]
    6570:	str	w0, [sp, #112]
    6574:	b	66ac <circprog_paint+0x370>
    6578:	ldr	x0, [sp, #104]
    657c:	ldr	w0, [x0, #100]
    6580:	mov	w2, w0
    6584:	ldr	w0, [sp, #112]
    6588:	lsl	w1, w0, #8
    658c:	ldr	x0, [sp, #104]
    6590:	ldr	w0, [x0, #96]
    6594:	udiv	w0, w1, w0
    6598:	add	w0, w2, w0
    659c:	str	w0, [sp, #72]
    65a0:	ldr	w0, [sp, #100]
    65a4:	lsr	w1, w0, #31
    65a8:	add	w0, w1, w0
    65ac:	asr	w0, w0, #1
    65b0:	mov	w19, w0
    65b4:	ldr	w0, [sp, #72]
    65b8:	bl	6110 <grub_cos>
    65bc:	mov	w1, w0
    65c0:	ldr	w0, [sp, #76]
    65c4:	mul	w0, w1, w0
    65c8:	mov	w1, #0x3fff                	// #16383
    65cc:	add	w1, w0, w1
    65d0:	cmp	w0, #0x0
    65d4:	csel	w0, w1, w0, lt  // lt = tstop
    65d8:	asr	w0, w0, #14
    65dc:	add	w0, w19, w0
    65e0:	str	w0, [sp, #68]
    65e4:	ldr	w0, [sp, #96]
    65e8:	lsr	w1, w0, #31
    65ec:	add	w0, w1, w0
    65f0:	asr	w0, w0, #1
    65f4:	mov	w19, w0
    65f8:	ldr	w0, [sp, #72]
    65fc:	bl	60d4 <grub_sin>
    6600:	mov	w1, w0
    6604:	ldr	w0, [sp, #76]
    6608:	mul	w0, w1, w0
    660c:	mov	w1, #0x3fff                	// #16383
    6610:	add	w1, w0, w1
    6614:	cmp	w0, #0x0
    6618:	csel	w0, w1, w0, lt  // lt = tstop
    661c:	asr	w0, w0, #14
    6620:	add	w0, w19, w0
    6624:	str	w0, [sp, #64]
    6628:	ldr	w0, [sp, #84]
    662c:	lsr	w1, w0, #31
    6630:	add	w0, w1, w0
    6634:	asr	w0, w0, #1
    6638:	neg	w0, w0
    663c:	mov	w1, w0
    6640:	ldr	w0, [sp, #68]
    6644:	add	w0, w0, w1
    6648:	str	w0, [sp, #68]
    664c:	ldr	w0, [sp, #80]
    6650:	lsr	w1, w0, #31
    6654:	add	w0, w1, w0
    6658:	asr	w0, w0, #1
    665c:	neg	w0, w0
    6660:	mov	w1, w0
    6664:	ldr	w0, [sp, #64]
    6668:	add	w0, w0, w1
    666c:	str	w0, [sp, #64]
    6670:	ldr	x0, [sp, #104]
    6674:	ldr	x0, [x0, #152]
    6678:	ldr	w1, [sp, #84]
    667c:	ldr	w2, [sp, #80]
    6680:	mov	w7, w2
    6684:	mov	w6, w1
    6688:	mov	w5, #0x0                   	// #0
    668c:	mov	w4, #0x0                   	// #0
    6690:	ldr	w3, [sp, #64]
    6694:	ldr	w2, [sp, #68]
    6698:	mov	w1, #0x1                   	// #1
    669c:	bl	0 <grub_video_blit_bitmap>
    66a0:	ldr	w0, [sp, #112]
    66a4:	add	w0, w0, #0x1
    66a8:	str	w0, [sp, #112]
    66ac:	ldr	w1, [sp, #112]
    66b0:	ldr	w0, [sp, #116]
    66b4:	cmp	w1, w0
    66b8:	b.cc	6578 <circprog_paint+0x23c>  // b.lo, b.ul, b.last
    66bc:	add	x0, sp, #0x30
    66c0:	bl	5f10 <grub_gui_restore_viewport>
    66c4:	b	66dc <circprog_paint+0x3a0>
    66c8:	nop
    66cc:	b	66dc <circprog_paint+0x3a0>
    66d0:	nop
    66d4:	b	66dc <circprog_paint+0x3a0>
    66d8:	nop
    66dc:	ldr	x19, [sp, #16]
    66e0:	ldp	x29, x30, [sp], #128
    66e4:	ret

00000000000066e8 <circprog_set_parent>:
    66e8:	sub	sp, sp, #0x20
    66ec:	str	x0, [sp, #8]
    66f0:	str	x1, [sp]
    66f4:	ldr	x0, [sp, #8]
    66f8:	str	x0, [sp, #24]
    66fc:	ldr	x0, [sp, #24]
    6700:	ldr	x1, [sp]
    6704:	str	x1, [x0, #48]
    6708:	nop
    670c:	add	sp, sp, #0x20
    6710:	ret

0000000000006714 <circprog_get_parent>:
    6714:	sub	sp, sp, #0x20
    6718:	str	x0, [sp, #8]
    671c:	ldr	x0, [sp, #8]
    6720:	str	x0, [sp, #24]
    6724:	ldr	x0, [sp, #24]
    6728:	ldr	x0, [x0, #48]
    672c:	add	sp, sp, #0x20
    6730:	ret

0000000000006734 <circprog_set_bounds>:
    6734:	sub	sp, sp, #0x20
    6738:	str	x0, [sp, #8]
    673c:	str	x1, [sp]
    6740:	ldr	x0, [sp, #8]
    6744:	str	x0, [sp, #24]
    6748:	ldr	x2, [sp, #24]
    674c:	ldr	x0, [sp]
    6750:	ldp	x0, x1, [x0]
    6754:	stp	x0, x1, [x2, #56]
    6758:	nop
    675c:	add	sp, sp, #0x20
    6760:	ret

0000000000006764 <circprog_get_bounds>:
    6764:	sub	sp, sp, #0x20
    6768:	str	x0, [sp, #8]
    676c:	str	x1, [sp]
    6770:	ldr	x0, [sp, #8]
    6774:	str	x0, [sp, #24]
    6778:	ldr	x2, [sp]
    677c:	ldr	x0, [sp, #24]
    6780:	ldp	x0, x1, [x0, #56]
    6784:	stp	x0, x1, [x2]
    6788:	nop
    678c:	add	sp, sp, #0x20
    6790:	ret

0000000000006794 <circprog_set_state>:
    6794:	sub	sp, sp, #0x30
    6798:	str	x0, [sp, #24]
    679c:	str	w1, [sp, #20]
    67a0:	str	w2, [sp, #16]
    67a4:	str	w3, [sp, #12]
    67a8:	str	w4, [sp, #8]
    67ac:	ldr	x0, [sp, #24]
    67b0:	str	x0, [sp, #40]
    67b4:	ldr	x0, [sp, #40]
    67b8:	ldr	w1, [sp, #20]
    67bc:	str	w1, [x0, #80]
    67c0:	ldr	x0, [sp, #40]
    67c4:	ldr	w1, [sp, #16]
    67c8:	str	w1, [x0, #84]
    67cc:	ldr	x0, [sp, #40]
    67d0:	ldr	w1, [sp, #12]
    67d4:	str	w1, [x0, #92]
    67d8:	ldr	x0, [sp, #40]
    67dc:	ldr	w1, [sp, #8]
    67e0:	str	w1, [x0, #88]
    67e4:	nop
    67e8:	add	sp, sp, #0x30
    67ec:	ret

00000000000067f0 <parse_angle>:
    67f0:	stp	x29, x30, [sp, #-48]!
    67f4:	mov	x29, sp
    67f8:	str	x0, [sp, #24]
    67fc:	add	x0, sp, #0x20
    6800:	mov	w2, #0xa                   	// #10
    6804:	mov	x1, x0
    6808:	ldr	x0, [sp, #24]
    680c:	bl	5b80 <grub_strtol>
    6810:	str	w0, [sp, #44]
    6814:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    6818:	add	x0, x0, #0x0
    681c:	ldr	x0, [x0]
    6820:	ldr	w0, [x0]
    6824:	cmp	w0, #0x0
    6828:	b.eq	6840 <parse_angle+0x50>  // b.none
    682c:	mov	w0, #0x0                   	// #0
    6830:	b	68ac <parse_angle+0xbc>
    6834:	ldr	x0, [sp, #32]
    6838:	add	x0, x0, #0x1
    683c:	str	x0, [sp, #32]
    6840:	ldr	x0, [sp, #32]
    6844:	ldrb	w0, [x0]
    6848:	bl	0 <grub_isspace>
    684c:	cmp	w0, #0x0
    6850:	b.ne	6834 <parse_angle+0x44>  // b.any
    6854:	ldr	x2, [sp, #32]
    6858:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    685c:	add	x0, x0, #0x0
    6860:	ldr	x1, [x0]
    6864:	mov	x0, x2
    6868:	bl	0 <grub_strcmp>
    686c:	cmp	w0, #0x0
    6870:	b.eq	6894 <parse_angle+0xa4>  // b.none
    6874:	ldr	x2, [sp, #32]
    6878:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    687c:	add	x0, x0, #0x0
    6880:	ldr	x1, [x0]
    6884:	mov	x0, x2
    6888:	bl	0 <grub_strcmp>
    688c:	cmp	w0, #0x0
    6890:	b.ne	68a8 <parse_angle+0xb8>  // b.any
    6894:	ldr	w0, [sp, #44]
    6898:	lsl	w0, w0, #6
    689c:	mov	w1, #0x5a                  	// #90
    68a0:	bl	5e18 <grub_divide_round>
    68a4:	str	w0, [sp, #44]
    68a8:	ldr	w0, [sp, #44]
    68ac:	ldp	x29, x30, [sp], #48
    68b0:	ret
    68b4:	nop
	...

00000000000068d0 <circprog_set_property>:
    68d0:	stp	x29, x30, [sp, #-64]!
    68d4:	mov	x29, sp
    68d8:	str	x0, [sp, #40]
    68dc:	str	x1, [sp, #32]
    68e0:	str	x2, [sp, #24]
    68e4:	ldr	x0, [sp, #40]
    68e8:	str	x0, [sp, #56]
    68ec:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    68f0:	add	x0, x0, #0x0
    68f4:	ldr	x1, [x0]
    68f8:	ldr	x0, [sp, #32]
    68fc:	bl	0 <grub_strcmp>
    6900:	cmp	w0, #0x0
    6904:	b.ne	6928 <circprog_set_property+0x58>  // b.any
    6908:	mov	w2, #0xa                   	// #10
    690c:	mov	x1, #0x0                   	// #0
    6910:	ldr	x0, [sp, #24]
    6914:	bl	0 <grub_strtoul>
    6918:	mov	w1, w0
    691c:	ldr	x0, [sp, #56]
    6920:	str	w1, [x0, #96]
    6924:	b	6b6c <circprog_set_property+0x29c>
    6928:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    692c:	add	x0, x0, #0x0
    6930:	ldr	x1, [x0]
    6934:	ldr	x0, [sp, #32]
    6938:	bl	0 <grub_strcmp>
    693c:	cmp	w0, #0x0
    6940:	b.ne	695c <circprog_set_property+0x8c>  // b.any
    6944:	ldr	x0, [sp, #24]
    6948:	bl	67f0 <parse_angle>
    694c:	mov	w1, w0
    6950:	ldr	x0, [sp, #56]
    6954:	str	w1, [x0, #100]
    6958:	b	6b6c <circprog_set_property+0x29c>
    695c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    6960:	add	x0, x0, #0x0
    6964:	ldr	x1, [x0]
    6968:	ldr	x0, [sp, #32]
    696c:	bl	0 <grub_strcmp>
    6970:	cmp	w0, #0x0
    6974:	b.ne	69a8 <circprog_set_property+0xd8>  // b.any
    6978:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    697c:	add	x0, x0, #0x0
    6980:	ldr	x1, [x0]
    6984:	ldr	x0, [sp, #24]
    6988:	bl	0 <grub_strcmp>
    698c:	cmp	w0, #0x0
    6990:	cset	w0, ne  // ne = any
    6994:	and	w0, w0, #0xff
    6998:	mov	w1, w0
    699c:	ldr	x0, [sp, #56]
    69a0:	str	w1, [x0, #104]
    69a4:	b	6b6c <circprog_set_property+0x29c>
    69a8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    69ac:	add	x0, x0, #0x0
    69b0:	ldr	x1, [x0]
    69b4:	ldr	x0, [sp, #32]
    69b8:	bl	0 <grub_strcmp>
    69bc:	cmp	w0, #0x0
    69c0:	b.ne	6a08 <circprog_set_property+0x138>  // b.any
    69c4:	ldr	x0, [sp, #56]
    69c8:	mov	w1, #0x1                   	// #1
    69cc:	str	w1, [x0, #120]
    69d0:	ldr	x0, [sp, #56]
    69d4:	ldr	x0, [x0, #128]
    69d8:	bl	0 <grub_free>
    69dc:	ldr	x0, [sp, #24]
    69e0:	cmp	x0, #0x0
    69e4:	b.eq	69f8 <circprog_set_property+0x128>  // b.none
    69e8:	ldr	x0, [sp, #24]
    69ec:	bl	0 <grub_strdup>
    69f0:	mov	x1, x0
    69f4:	b	69fc <circprog_set_property+0x12c>
    69f8:	mov	x1, #0x0                   	// #0
    69fc:	ldr	x0, [sp, #56]
    6a00:	str	x1, [x0, #128]
    6a04:	b	6b6c <circprog_set_property+0x29c>
    6a08:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    6a0c:	add	x0, x0, #0x0
    6a10:	ldr	x1, [x0]
    6a14:	ldr	x0, [sp, #32]
    6a18:	bl	0 <grub_strcmp>
    6a1c:	cmp	w0, #0x0
    6a20:	b.ne	6a68 <circprog_set_property+0x198>  // b.any
    6a24:	ldr	x0, [sp, #56]
    6a28:	mov	w1, #0x1                   	// #1
    6a2c:	str	w1, [x0, #120]
    6a30:	ldr	x0, [sp, #56]
    6a34:	ldr	x0, [x0, #136]
    6a38:	bl	0 <grub_free>
    6a3c:	ldr	x0, [sp, #24]
    6a40:	cmp	x0, #0x0
    6a44:	b.eq	6a58 <circprog_set_property+0x188>  // b.none
    6a48:	ldr	x0, [sp, #24]
    6a4c:	bl	0 <grub_strdup>
    6a50:	mov	x1, x0
    6a54:	b	6a5c <circprog_set_property+0x18c>
    6a58:	mov	x1, #0x0                   	// #0
    6a5c:	ldr	x0, [sp, #56]
    6a60:	str	x1, [x0, #136]
    6a64:	b	6b6c <circprog_set_property+0x29c>
    6a68:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    6a6c:	add	x0, x0, #0x0
    6a70:	ldr	x1, [x0]
    6a74:	ldr	x0, [sp, #32]
    6a78:	bl	0 <grub_strcmp>
    6a7c:	cmp	w0, #0x0
    6a80:	b.ne	6ac8 <circprog_set_property+0x1f8>  // b.any
    6a84:	ldr	x0, [sp, #56]
    6a88:	mov	w1, #0x1                   	// #1
    6a8c:	str	w1, [x0, #120]
    6a90:	ldr	x0, [sp, #56]
    6a94:	ldr	x0, [x0, #112]
    6a98:	bl	0 <grub_free>
    6a9c:	ldr	x0, [sp, #24]
    6aa0:	cmp	x0, #0x0
    6aa4:	b.eq	6ab8 <circprog_set_property+0x1e8>  // b.none
    6aa8:	ldr	x0, [sp, #24]
    6aac:	bl	0 <grub_strdup>
    6ab0:	mov	x1, x0
    6ab4:	b	6abc <circprog_set_property+0x1ec>
    6ab8:	mov	x1, #0x0                   	// #0
    6abc:	ldr	x0, [sp, #56]
    6ac0:	str	x1, [x0, #112]
    6ac4:	b	6b6c <circprog_set_property+0x29c>
    6ac8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    6acc:	add	x0, x0, #0x0
    6ad0:	ldr	x1, [x0]
    6ad4:	ldr	x0, [sp, #32]
    6ad8:	bl	0 <grub_strcmp>
    6adc:	cmp	w0, #0x0
    6ae0:	b.ne	6b6c <circprog_set_property+0x29c>  // b.any
    6ae4:	ldr	x0, [sp, #56]
    6ae8:	bl	5d80 <grub_gfxmenu_timeout_unregister>
    6aec:	ldr	x0, [sp, #56]
    6af0:	ldr	x0, [x0, #72]
    6af4:	bl	0 <grub_free>
    6af8:	ldr	x0, [sp, #24]
    6afc:	cmp	x0, #0x0
    6b00:	b.eq	6b1c <circprog_set_property+0x24c>  // b.none
    6b04:	ldr	x0, [sp, #24]
    6b08:	bl	0 <grub_strdup>
    6b0c:	mov	x1, x0
    6b10:	ldr	x0, [sp, #56]
    6b14:	str	x1, [x0, #72]
    6b18:	b	6b24 <circprog_set_property+0x254>
    6b1c:	ldr	x0, [sp, #56]
    6b20:	str	xzr, [x0, #72]
    6b24:	ldr	x0, [sp, #56]
    6b28:	ldr	x0, [x0, #72]
    6b2c:	cmp	x0, #0x0
    6b30:	b.eq	6b6c <circprog_set_property+0x29c>  // b.none
    6b34:	ldr	x0, [sp, #56]
    6b38:	ldr	x2, [x0, #72]
    6b3c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    6b40:	add	x0, x0, #0x0
    6b44:	ldr	x1, [x0]
    6b48:	mov	x0, x2
    6b4c:	bl	0 <grub_strcmp>
    6b50:	cmp	w0, #0x0
    6b54:	b.ne	6b6c <circprog_set_property+0x29c>  // b.any
    6b58:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    6b5c:	add	x0, x0, #0x0
    6b60:	ldr	x1, [x0]
    6b64:	ldr	x0, [sp, #56]
    6b68:	bl	5ce0 <grub_gfxmenu_timeout_register>
    6b6c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    6b70:	add	x0, x0, #0x0
    6b74:	ldr	x0, [x0]
    6b78:	ldr	w0, [x0]
    6b7c:	ldp	x29, x30, [sp], #64
    6b80:	ret
    6b84:	nop
	...

0000000000006be0 <grub_gui_circular_progress_new>:
    6be0:	stp	x29, x30, [sp, #-32]!
    6be4:	mov	x29, sp
    6be8:	mov	x0, #0xa0                  	// #160
    6bec:	bl	0 <grub_zalloc>
    6bf0:	str	x0, [sp, #24]
    6bf4:	ldr	x0, [sp, #24]
    6bf8:	cmp	x0, #0x0
    6bfc:	b.ne	6c08 <grub_gui_circular_progress_new+0x28>  // b.any
    6c00:	mov	x0, #0x0                   	// #0
    6c04:	b	6c58 <grub_gui_circular_progress_new+0x78>
    6c08:	ldr	x0, [sp, #24]
    6c0c:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    6c10:	add	x1, x1, #0x0
    6c14:	ldr	x1, [x1]
    6c18:	str	x1, [x0, #40]
    6c1c:	ldr	x0, [sp, #24]
    6c20:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    6c24:	add	x1, x1, #0x0
    6c28:	ldr	x1, [x1]
    6c2c:	str	x1, [x0]
    6c30:	ldr	x0, [sp, #24]
    6c34:	mov	w1, #0x1                   	// #1
    6c38:	str	w1, [x0, #80]
    6c3c:	ldr	x0, [sp, #24]
    6c40:	mov	w1, #0x40                  	// #64
    6c44:	str	w1, [x0, #96]
    6c48:	ldr	x0, [sp, #24]
    6c4c:	mov	w1, #0xffffffc0            	// #-64
    6c50:	str	w1, [x0, #100]
    6c54:	ldr	x0, [sp, #24]
    6c58:	ldp	x29, x30, [sp], #32
    6c5c:	ret
	...

0000000000006c70 <grub_divide_round>:
    6c70:	sub	sp, sp, #0x20
    6c74:	str	w0, [sp, #12]
    6c78:	str	w1, [sp, #8]
    6c7c:	str	wzr, [sp, #28]
    6c80:	ldr	w0, [sp, #8]
    6c84:	cmp	w0, #0x0
    6c88:	b.ge	6cac <grub_divide_round+0x3c>  // b.tcont
    6c8c:	ldr	w0, [sp, #8]
    6c90:	neg	w0, w0
    6c94:	str	w0, [sp, #8]
    6c98:	ldr	w0, [sp, #28]
    6c9c:	cmp	w0, #0x0
    6ca0:	cset	w0, eq  // eq = none
    6ca4:	and	w0, w0, #0xff
    6ca8:	str	w0, [sp, #28]
    6cac:	ldr	w0, [sp, #12]
    6cb0:	cmp	w0, #0x0
    6cb4:	b.ge	6cd8 <grub_divide_round+0x68>  // b.tcont
    6cb8:	ldr	w0, [sp, #12]
    6cbc:	neg	w0, w0
    6cc0:	str	w0, [sp, #12]
    6cc4:	ldr	w0, [sp, #28]
    6cc8:	cmp	w0, #0x0
    6ccc:	cset	w0, eq  // eq = none
    6cd0:	and	w0, w0, #0xff
    6cd4:	str	w0, [sp, #28]
    6cd8:	ldr	w0, [sp, #8]
    6cdc:	lsr	w1, w0, #31
    6ce0:	add	w0, w1, w0
    6ce4:	asr	w0, w0, #1
    6ce8:	mov	w1, w0
    6cec:	ldr	w0, [sp, #12]
    6cf0:	add	w0, w1, w0
    6cf4:	mov	w1, w0
    6cf8:	ldr	w0, [sp, #8]
    6cfc:	udiv	w0, w1, w0
    6d00:	str	w0, [sp, #24]
    6d04:	ldr	w0, [sp, #28]
    6d08:	cmp	w0, #0x0
    6d0c:	b.eq	6d1c <grub_divide_round+0xac>  // b.none
    6d10:	ldr	w0, [sp, #24]
    6d14:	neg	w0, w0
    6d18:	b	6d20 <grub_divide_round+0xb0>
    6d1c:	ldr	w0, [sp, #24]
    6d20:	add	sp, sp, #0x20
    6d24:	ret

0000000000006d28 <grub_fixed_sfs_divide>:
    6d28:	stp	x29, x30, [sp, #-32]!
    6d2c:	mov	x29, sp
    6d30:	str	w0, [sp, #28]
    6d34:	str	w1, [sp, #24]
    6d38:	ldr	w0, [sp, #28]
    6d3c:	lsl	w0, w0, #16
    6d40:	ldr	w1, [sp, #24]
    6d44:	bl	6c70 <grub_divide_round>
    6d48:	ldp	x29, x30, [sp], #32
    6d4c:	ret

0000000000006d50 <grub_fixed_sfs_multiply>:
    6d50:	sub	sp, sp, #0x10
    6d54:	str	w0, [sp, #12]
    6d58:	str	w1, [sp, #8]
    6d5c:	ldr	w1, [sp, #12]
    6d60:	ldr	w0, [sp, #8]
    6d64:	mul	w0, w1, w0
    6d68:	mov	w1, #0xffff                	// #65535
    6d6c:	add	w1, w0, w1
    6d70:	cmp	w0, #0x0
    6d74:	csel	w0, w1, w0, lt  // lt = tstop
    6d78:	asr	w0, w0, #16
    6d7c:	add	sp, sp, #0x10
    6d80:	ret

0000000000006d84 <grub_gui_save_viewport>:
    6d84:	stp	x29, x30, [sp, #-32]!
    6d88:	mov	x29, sp
    6d8c:	str	x0, [sp, #24]
    6d90:	ldr	x4, [sp, #24]
    6d94:	ldr	x0, [sp, #24]
    6d98:	add	x1, x0, #0x4
    6d9c:	ldr	x0, [sp, #24]
    6da0:	add	x2, x0, #0x8
    6da4:	ldr	x0, [sp, #24]
    6da8:	add	x0, x0, #0xc
    6dac:	mov	x3, x0
    6db0:	mov	x0, x4
    6db4:	bl	0 <grub_video_get_viewport>
    6db8:	nop
    6dbc:	ldp	x29, x30, [sp], #32
    6dc0:	ret

0000000000006dc4 <grub_gui_restore_viewport>:
    6dc4:	stp	x29, x30, [sp, #-32]!
    6dc8:	mov	x29, sp
    6dcc:	str	x0, [sp, #24]
    6dd0:	ldr	x0, [sp, #24]
    6dd4:	ldr	w4, [x0]
    6dd8:	ldr	x0, [sp, #24]
    6ddc:	ldr	w1, [x0, #4]
    6de0:	ldr	x0, [sp, #24]
    6de4:	ldr	w2, [x0, #8]
    6de8:	ldr	x0, [sp, #24]
    6dec:	ldr	w0, [x0, #12]
    6df0:	mov	w3, w0
    6df4:	mov	w0, w4
    6df8:	bl	0 <grub_video_set_viewport>
    6dfc:	nop
    6e00:	ldp	x29, x30, [sp], #32
    6e04:	ret

0000000000006e08 <grub_gui_set_viewport>:
    6e08:	stp	x29, x30, [sp, #-32]!
    6e0c:	mov	x29, sp
    6e10:	str	x0, [sp, #24]
    6e14:	str	x1, [sp, #16]
    6e18:	ldr	x0, [sp, #16]
    6e1c:	bl	6d84 <grub_gui_save_viewport>
    6e20:	ldr	x0, [sp, #16]
    6e24:	ldr	w1, [x0]
    6e28:	ldr	x0, [sp, #24]
    6e2c:	ldr	w0, [x0]
    6e30:	add	w4, w1, w0
    6e34:	ldr	x0, [sp, #16]
    6e38:	ldr	w1, [x0, #4]
    6e3c:	ldr	x0, [sp, #24]
    6e40:	ldr	w0, [x0, #4]
    6e44:	add	w1, w1, w0
    6e48:	ldr	x0, [sp, #24]
    6e4c:	ldr	w2, [x0, #8]
    6e50:	ldr	x0, [sp, #24]
    6e54:	ldr	w0, [x0, #12]
    6e58:	mov	w3, w0
    6e5c:	mov	w0, w4
    6e60:	bl	0 <grub_video_set_viewport>
    6e64:	nop
    6e68:	ldp	x29, x30, [sp], #32
    6e6c:	ret

0000000000006e70 <grub_video_have_common_points>:
    6e70:	sub	sp, sp, #0x10
    6e74:	str	x0, [sp, #8]
    6e78:	str	x1, [sp]
    6e7c:	ldr	x0, [sp, #8]
    6e80:	ldr	w1, [x0]
    6e84:	ldr	x0, [sp]
    6e88:	ldr	w0, [x0]
    6e8c:	cmp	w1, w0
    6e90:	b.hi	6eb8 <grub_video_have_common_points+0x48>  // b.pmore
    6e94:	ldr	x0, [sp]
    6e98:	ldr	w1, [x0]
    6e9c:	ldr	x0, [sp, #8]
    6ea0:	ldr	w2, [x0]
    6ea4:	ldr	x0, [sp, #8]
    6ea8:	ldr	w0, [x0, #8]
    6eac:	add	w0, w2, w0
    6eb0:	cmp	w1, w0
    6eb4:	b.ls	6efc <grub_video_have_common_points+0x8c>  // b.plast
    6eb8:	ldr	x0, [sp]
    6ebc:	ldr	w1, [x0]
    6ec0:	ldr	x0, [sp, #8]
    6ec4:	ldr	w0, [x0]
    6ec8:	cmp	w1, w0
    6ecc:	b.hi	6ef4 <grub_video_have_common_points+0x84>  // b.pmore
    6ed0:	ldr	x0, [sp, #8]
    6ed4:	ldr	w1, [x0]
    6ed8:	ldr	x0, [sp]
    6edc:	ldr	w2, [x0]
    6ee0:	ldr	x0, [sp]
    6ee4:	ldr	w0, [x0, #8]
    6ee8:	add	w0, w2, w0
    6eec:	cmp	w1, w0
    6ef0:	b.ls	6efc <grub_video_have_common_points+0x8c>  // b.plast
    6ef4:	mov	w0, #0x0                   	// #0
    6ef8:	b	6f80 <grub_video_have_common_points+0x110>
    6efc:	ldr	x0, [sp, #8]
    6f00:	ldr	w1, [x0, #4]
    6f04:	ldr	x0, [sp]
    6f08:	ldr	w0, [x0, #4]
    6f0c:	cmp	w1, w0
    6f10:	b.hi	6f38 <grub_video_have_common_points+0xc8>  // b.pmore
    6f14:	ldr	x0, [sp]
    6f18:	ldr	w1, [x0, #4]
    6f1c:	ldr	x0, [sp, #8]
    6f20:	ldr	w2, [x0, #4]
    6f24:	ldr	x0, [sp, #8]
    6f28:	ldr	w0, [x0, #12]
    6f2c:	add	w0, w2, w0
    6f30:	cmp	w1, w0
    6f34:	b.ls	6f7c <grub_video_have_common_points+0x10c>  // b.plast
    6f38:	ldr	x0, [sp]
    6f3c:	ldr	w1, [x0, #4]
    6f40:	ldr	x0, [sp, #8]
    6f44:	ldr	w0, [x0, #4]
    6f48:	cmp	w1, w0
    6f4c:	b.hi	6f74 <grub_video_have_common_points+0x104>  // b.pmore
    6f50:	ldr	x0, [sp, #8]
    6f54:	ldr	w1, [x0, #4]
    6f58:	ldr	x0, [sp]
    6f5c:	ldr	w2, [x0, #4]
    6f60:	ldr	x0, [sp]
    6f64:	ldr	w0, [x0, #12]
    6f68:	add	w0, w2, w0
    6f6c:	cmp	w1, w0
    6f70:	b.ls	6f7c <grub_video_have_common_points+0x10c>  // b.plast
    6f74:	mov	w0, #0x0                   	// #0
    6f78:	b	6f80 <grub_video_have_common_points+0x110>
    6f7c:	mov	w0, #0x1                   	// #1
    6f80:	add	sp, sp, #0x10
    6f84:	ret

0000000000006f88 <grub_video_bounds_inside_region>:
    6f88:	sub	sp, sp, #0x10
    6f8c:	str	x0, [sp, #8]
    6f90:	str	x1, [sp]
    6f94:	ldr	x0, [sp]
    6f98:	ldr	w1, [x0]
    6f9c:	ldr	x0, [sp, #8]
    6fa0:	ldr	w0, [x0]
    6fa4:	cmp	w1, w0
    6fa8:	b.hi	6fdc <grub_video_bounds_inside_region+0x54>  // b.pmore
    6fac:	ldr	x0, [sp]
    6fb0:	ldr	w1, [x0]
    6fb4:	ldr	x0, [sp]
    6fb8:	ldr	w0, [x0, #8]
    6fbc:	add	w1, w1, w0
    6fc0:	ldr	x0, [sp, #8]
    6fc4:	ldr	w2, [x0]
    6fc8:	ldr	x0, [sp, #8]
    6fcc:	ldr	w0, [x0, #8]
    6fd0:	add	w0, w2, w0
    6fd4:	cmp	w1, w0
    6fd8:	b.cs	6fe4 <grub_video_bounds_inside_region+0x5c>  // b.hs, b.nlast
    6fdc:	mov	w0, #0x0                   	// #0
    6fe0:	b	7038 <grub_video_bounds_inside_region+0xb0>
    6fe4:	ldr	x0, [sp]
    6fe8:	ldr	w1, [x0, #4]
    6fec:	ldr	x0, [sp, #8]
    6ff0:	ldr	w0, [x0, #4]
    6ff4:	cmp	w1, w0
    6ff8:	b.hi	702c <grub_video_bounds_inside_region+0xa4>  // b.pmore
    6ffc:	ldr	x0, [sp]
    7000:	ldr	w1, [x0, #4]
    7004:	ldr	x0, [sp]
    7008:	ldr	w0, [x0, #12]
    700c:	add	w1, w1, w0
    7010:	ldr	x0, [sp, #8]
    7014:	ldr	w2, [x0, #4]
    7018:	ldr	x0, [sp, #8]
    701c:	ldr	w0, [x0, #12]
    7020:	add	w0, w2, w0
    7024:	cmp	w1, w0
    7028:	b.cs	7034 <grub_video_bounds_inside_region+0xac>  // b.hs, b.nlast
    702c:	mov	w0, #0x0                   	// #0
    7030:	b	7038 <grub_video_bounds_inside_region+0xb0>
    7034:	mov	w0, #0x1                   	// #1
    7038:	add	sp, sp, #0x10
    703c:	ret

0000000000007040 <box_destroy>:
    7040:	stp	x29, x30, [sp, #-64]!
    7044:	mov	x29, sp
    7048:	str	x0, [sp, #24]
    704c:	ldr	x0, [sp, #24]
    7050:	str	x0, [sp, #48]
    7054:	ldr	x0, [sp, #48]
    7058:	ldr	x0, [x0, #88]
    705c:	str	x0, [sp, #56]
    7060:	b	709c <box_destroy+0x5c>
    7064:	ldr	x0, [sp, #56]
    7068:	ldr	x0, [x0, #8]
    706c:	str	x0, [sp, #40]
    7070:	ldr	x0, [sp, #56]
    7074:	ldr	x0, [x0]
    7078:	ldr	x0, [x0]
    707c:	ldr	x1, [x0]
    7080:	ldr	x0, [sp, #56]
    7084:	ldr	x0, [x0]
    7088:	blr	x1
    708c:	ldr	x0, [sp, #56]
    7090:	bl	0 <grub_free>
    7094:	ldr	x0, [sp, #40]
    7098:	str	x0, [sp, #56]
    709c:	ldr	x0, [sp, #48]
    70a0:	add	x0, x0, #0x68
    70a4:	ldr	x1, [sp, #56]
    70a8:	cmp	x1, x0
    70ac:	b.ne	7064 <box_destroy+0x24>  // b.any
    70b0:	ldr	x0, [sp, #48]
    70b4:	bl	0 <grub_free>
    70b8:	nop
    70bc:	ldp	x29, x30, [sp], #64
    70c0:	ret

00000000000070c4 <box_get_id>:
    70c4:	sub	sp, sp, #0x20
    70c8:	str	x0, [sp, #8]
    70cc:	ldr	x0, [sp, #8]
    70d0:	str	x0, [sp, #24]
    70d4:	ldr	x0, [sp, #24]
    70d8:	ldr	x0, [x0, #72]
    70dc:	add	sp, sp, #0x20
    70e0:	ret

00000000000070e4 <box_is_instance>:
    70e4:	stp	x29, x30, [sp, #-32]!
    70e8:	mov	x29, sp
    70ec:	str	x0, [sp, #24]
    70f0:	str	x1, [sp, #16]
    70f4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    70f8:	add	x0, x0, #0x0
    70fc:	ldr	x1, [x0]
    7100:	ldr	x0, [sp, #16]
    7104:	bl	0 <grub_strcmp>
    7108:	cmp	w0, #0x0
    710c:	b.eq	712c <box_is_instance+0x48>  // b.none
    7110:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    7114:	add	x0, x0, #0x0
    7118:	ldr	x1, [x0]
    711c:	ldr	x0, [sp, #16]
    7120:	bl	0 <grub_strcmp>
    7124:	cmp	w0, #0x0
    7128:	b.ne	7134 <box_is_instance+0x50>  // b.any
    712c:	mov	w0, #0x1                   	// #1
    7130:	b	7138 <box_is_instance+0x54>
    7134:	mov	w0, #0x0                   	// #0
    7138:	ldp	x29, x30, [sp], #32
    713c:	ret
	...

0000000000007150 <layout_horizontally>:
    7150:	stp	x29, x30, [sp, #-128]!
    7154:	mov	x29, sp
    7158:	str	x0, [sp, #40]
    715c:	str	w1, [sp, #36]
    7160:	str	x2, [sp, #24]
    7164:	str	x3, [sp, #16]
    7168:	str	wzr, [sp, #116]
    716c:	str	wzr, [sp, #112]
    7170:	str	wzr, [sp, #108]
    7174:	str	wzr, [sp, #104]
    7178:	str	wzr, [sp, #100]
    717c:	str	wzr, [sp, #96]
    7180:	ldr	x0, [sp, #40]
    7184:	ldr	x0, [x0, #88]
    7188:	str	x0, [sp, #120]
    718c:	b	7280 <layout_horizontally+0x130>
    7190:	ldr	x0, [sp, #120]
    7194:	ldr	x0, [x0]
    7198:	str	x0, [sp, #80]
    719c:	str	wzr, [sp, #76]
    71a0:	str	wzr, [sp, #72]
    71a4:	ldr	x0, [sp, #80]
    71a8:	ldr	x0, [x0]
    71ac:	ldr	x0, [x0, #64]
    71b0:	cmp	x0, #0x0
    71b4:	b.eq	71dc <layout_horizontally+0x8c>  // b.none
    71b8:	ldr	x0, [sp, #80]
    71bc:	ldr	x0, [x0]
    71c0:	ldr	x3, [x0, #64]
    71c4:	add	x1, sp, #0x48
    71c8:	add	x0, sp, #0x4c
    71cc:	mov	x2, x1
    71d0:	mov	x1, x0
    71d4:	ldr	x0, [sp, #80]
    71d8:	blr	x3
    71dc:	ldr	x0, [sp, #80]
    71e0:	ldr	w1, [x0, #32]
    71e4:	ldr	w0, [sp, #108]
    71e8:	cmp	w1, w0
    71ec:	b.le	71fc <layout_horizontally+0xac>
    71f0:	ldr	x0, [sp, #80]
    71f4:	ldr	w0, [x0, #32]
    71f8:	str	w0, [sp, #108]
    71fc:	ldr	w0, [sp, #72]
    7200:	ldr	w1, [sp, #108]
    7204:	cmp	w1, w0
    7208:	b.cs	7214 <layout_horizontally+0xc4>  // b.hs, b.nlast
    720c:	ldr	w0, [sp, #72]
    7210:	str	w0, [sp, #108]
    7214:	ldr	x0, [sp, #80]
    7218:	ldr	w0, [x0, #28]
    721c:	ldr	w1, [sp, #100]
    7220:	add	w0, w1, w0
    7224:	str	w0, [sp, #100]
    7228:	ldr	x0, [sp, #80]
    722c:	ldr	w0, [x0, #24]
    7230:	mov	w1, w0
    7234:	ldr	w0, [sp, #116]
    7238:	add	w0, w0, w1
    723c:	str	w0, [sp, #116]
    7240:	ldr	x0, [sp, #80]
    7244:	ldr	w0, [x0, #24]
    7248:	mov	w1, w0
    724c:	ldr	w0, [sp, #76]
    7250:	cmp	w1, w0
    7254:	b.eq	7274 <layout_horizontally+0x124>  // b.none
    7258:	ldr	w0, [sp, #76]
    725c:	ldr	x1, [sp, #80]
    7260:	ldr	w1, [x1, #24]
    7264:	sub	w0, w0, w1
    7268:	ldr	w1, [sp, #112]
    726c:	add	w0, w1, w0
    7270:	str	w0, [sp, #112]
    7274:	ldr	x0, [sp, #120]
    7278:	ldr	x0, [x0, #8]
    727c:	str	x0, [sp, #120]
    7280:	ldr	x0, [sp, #40]
    7284:	add	x0, x0, #0x68
    7288:	ldr	x1, [sp, #120]
    728c:	cmp	x1, x0
    7290:	b.ne	7190 <layout_horizontally+0x40>  // b.any
    7294:	ldr	w0, [sp, #100]
    7298:	cmp	w0, #0x10, lsl #12
    729c:	b.gt	72b8 <layout_horizontally+0x168>
    72a0:	ldr	w0, [sp, #116]
    72a4:	cmp	w0, #0x0
    72a8:	b.eq	72c0 <layout_horizontally+0x170>  // b.none
    72ac:	ldr	w0, [sp, #100]
    72b0:	cmp	w0, #0x10, lsl #12
    72b4:	b.ne	72c0 <layout_horizontally+0x170>  // b.any
    72b8:	mov	w0, #0x1                   	// #1
    72bc:	str	w0, [sp, #96]
    72c0:	ldr	x0, [sp, #24]
    72c4:	cmp	x0, #0x0
    72c8:	b.eq	7344 <layout_horizontally+0x1f4>  // b.none
    72cc:	ldr	w1, [sp, #100]
    72d0:	mov	w0, #0xffff                	// #65535
    72d4:	cmp	w1, w0
    72d8:	b.gt	7308 <layout_horizontally+0x1b8>
    72dc:	ldr	w2, [sp, #116]
    72e0:	mov	w1, #0x10000               	// #65536
    72e4:	ldr	w0, [sp, #100]
    72e8:	sub	w0, w1, w0
    72ec:	mov	w1, w0
    72f0:	mov	w0, w2
    72f4:	bl	6d28 <grub_fixed_sfs_divide>
    72f8:	mov	w1, w0
    72fc:	ldr	x0, [sp, #24]
    7300:	str	w1, [x0]
    7304:	b	7314 <layout_horizontally+0x1c4>
    7308:	ldr	x0, [sp, #24]
    730c:	ldr	w1, [sp, #116]
    7310:	str	w1, [x0]
    7314:	ldr	x0, [sp, #24]
    7318:	ldr	w1, [x0]
    731c:	ldr	w2, [sp, #116]
    7320:	ldr	w0, [sp, #112]
    7324:	add	w0, w2, w0
    7328:	cmp	w1, w0
    732c:	b.cs	7344 <layout_horizontally+0x1f4>  // b.hs, b.nlast
    7330:	ldr	w1, [sp, #116]
    7334:	ldr	w0, [sp, #112]
    7338:	add	w1, w1, w0
    733c:	ldr	x0, [sp, #24]
    7340:	str	w1, [x0]
    7344:	ldr	x0, [sp, #16]
    7348:	cmp	x0, #0x0
    734c:	b.eq	735c <layout_horizontally+0x20c>  // b.none
    7350:	ldr	x0, [sp, #16]
    7354:	ldr	w1, [sp, #108]
    7358:	str	w1, [x0]
    735c:	ldr	w0, [sp, #36]
    7360:	cmp	w0, #0x0
    7364:	b.eq	7488 <layout_horizontally+0x338>  // b.none
    7368:	ldr	x0, [sp, #40]
    736c:	ldr	x0, [x0, #88]
    7370:	str	x0, [sp, #120]
    7374:	b	7470 <layout_horizontally+0x320>
    7378:	ldr	x0, [sp, #120]
    737c:	ldr	x0, [x0]
    7380:	str	x0, [sp, #88]
    7384:	str	wzr, [sp, #52]
    7388:	str	wzr, [sp, #48]
    738c:	ldr	w0, [sp, #104]
    7390:	str	w0, [sp, #56]
    7394:	str	wzr, [sp, #60]
    7398:	ldr	w0, [sp, #108]
    739c:	str	w0, [sp, #68]
    73a0:	ldr	x0, [sp, #88]
    73a4:	ldr	x0, [x0]
    73a8:	ldr	x0, [x0, #64]
    73ac:	cmp	x0, #0x0
    73b0:	b.eq	73d8 <layout_horizontally+0x288>  // b.none
    73b4:	ldr	x0, [sp, #88]
    73b8:	ldr	x0, [x0]
    73bc:	ldr	x3, [x0, #64]
    73c0:	add	x1, sp, #0x30
    73c4:	add	x0, sp, #0x34
    73c8:	mov	x2, x1
    73cc:	mov	x1, x0
    73d0:	ldr	x0, [sp, #88]
    73d4:	blr	x3
    73d8:	ldr	x0, [sp, #88]
    73dc:	ldr	w0, [x0, #24]
    73e0:	str	w0, [sp, #64]
    73e4:	ldr	w0, [sp, #96]
    73e8:	cmp	w0, #0x0
    73ec:	b.ne	7420 <layout_horizontally+0x2d0>  // b.any
    73f0:	ldr	x0, [sp, #40]
    73f4:	ldr	w0, [x0, #64]
    73f8:	mov	w2, w0
    73fc:	ldr	x0, [sp, #88]
    7400:	ldr	w0, [x0, #28]
    7404:	mov	w1, w0
    7408:	mov	w0, w2
    740c:	bl	6d50 <grub_fixed_sfs_multiply>
    7410:	mov	w1, w0
    7414:	ldr	w0, [sp, #64]
    7418:	add	w0, w0, w1
    741c:	str	w0, [sp, #64]
    7420:	ldr	w1, [sp, #64]
    7424:	ldr	w0, [sp, #52]
    7428:	cmp	w1, w0
    742c:	b.cs	7438 <layout_horizontally+0x2e8>  // b.hs, b.nlast
    7430:	ldr	w0, [sp, #52]
    7434:	str	w0, [sp, #64]
    7438:	ldr	x0, [sp, #88]
    743c:	ldr	x0, [x0]
    7440:	ldr	x2, [x0, #48]
    7444:	add	x0, sp, #0x38
    7448:	mov	x1, x0
    744c:	ldr	x0, [sp, #88]
    7450:	blr	x2
    7454:	ldr	w0, [sp, #64]
    7458:	ldr	w1, [sp, #104]
    745c:	add	w0, w1, w0
    7460:	str	w0, [sp, #104]
    7464:	ldr	x0, [sp, #120]
    7468:	ldr	x0, [x0, #8]
    746c:	str	x0, [sp, #120]
    7470:	ldr	x0, [sp, #40]
    7474:	add	x0, x0, #0x68
    7478:	ldr	x1, [sp, #120]
    747c:	cmp	x1, x0
    7480:	b.ne	7378 <layout_horizontally+0x228>  // b.any
    7484:	b	748c <layout_horizontally+0x33c>
    7488:	nop
    748c:	ldp	x29, x30, [sp], #128
    7490:	ret

0000000000007494 <layout_vertically>:
    7494:	stp	x29, x30, [sp, #-128]!
    7498:	mov	x29, sp
    749c:	str	x0, [sp, #40]
    74a0:	str	w1, [sp, #36]
    74a4:	str	x2, [sp, #24]
    74a8:	str	x3, [sp, #16]
    74ac:	str	wzr, [sp, #116]
    74b0:	str	wzr, [sp, #112]
    74b4:	str	wzr, [sp, #108]
    74b8:	str	wzr, [sp, #104]
    74bc:	str	wzr, [sp, #100]
    74c0:	str	wzr, [sp, #96]
    74c4:	ldr	x0, [sp, #40]
    74c8:	ldr	x0, [x0, #88]
    74cc:	str	x0, [sp, #120]
    74d0:	b	75c4 <layout_vertically+0x130>
    74d4:	ldr	x0, [sp, #120]
    74d8:	ldr	x0, [x0]
    74dc:	str	x0, [sp, #80]
    74e0:	str	wzr, [sp, #76]
    74e4:	str	wzr, [sp, #72]
    74e8:	ldr	x0, [sp, #80]
    74ec:	ldr	x0, [x0]
    74f0:	ldr	x0, [x0, #64]
    74f4:	cmp	x0, #0x0
    74f8:	b.eq	7520 <layout_vertically+0x8c>  // b.none
    74fc:	ldr	x0, [sp, #80]
    7500:	ldr	x0, [x0]
    7504:	ldr	x3, [x0, #64]
    7508:	add	x1, sp, #0x48
    750c:	add	x0, sp, #0x4c
    7510:	mov	x2, x1
    7514:	mov	x1, x0
    7518:	ldr	x0, [sp, #80]
    751c:	blr	x3
    7520:	ldr	x0, [sp, #80]
    7524:	ldr	w1, [x0, #24]
    7528:	ldr	w0, [sp, #108]
    752c:	cmp	w1, w0
    7530:	b.le	7540 <layout_vertically+0xac>
    7534:	ldr	x0, [sp, #80]
    7538:	ldr	w0, [x0, #24]
    753c:	str	w0, [sp, #108]
    7540:	ldr	w0, [sp, #76]
    7544:	ldr	w1, [sp, #108]
    7548:	cmp	w1, w0
    754c:	b.cs	7558 <layout_vertically+0xc4>  // b.hs, b.nlast
    7550:	ldr	w0, [sp, #76]
    7554:	str	w0, [sp, #108]
    7558:	ldr	x0, [sp, #80]
    755c:	ldr	w0, [x0, #36]
    7560:	ldr	w1, [sp, #100]
    7564:	add	w0, w1, w0
    7568:	str	w0, [sp, #100]
    756c:	ldr	x0, [sp, #80]
    7570:	ldr	w0, [x0, #32]
    7574:	mov	w1, w0
    7578:	ldr	w0, [sp, #116]
    757c:	add	w0, w0, w1
    7580:	str	w0, [sp, #116]
    7584:	ldr	x0, [sp, #80]
    7588:	ldr	w0, [x0, #32]
    758c:	mov	w1, w0
    7590:	ldr	w0, [sp, #72]
    7594:	cmp	w1, w0
    7598:	b.eq	75b8 <layout_vertically+0x124>  // b.none
    759c:	ldr	w0, [sp, #72]
    75a0:	ldr	x1, [sp, #80]
    75a4:	ldr	w1, [x1, #32]
    75a8:	sub	w0, w0, w1
    75ac:	ldr	w1, [sp, #112]
    75b0:	add	w0, w1, w0
    75b4:	str	w0, [sp, #112]
    75b8:	ldr	x0, [sp, #120]
    75bc:	ldr	x0, [x0, #8]
    75c0:	str	x0, [sp, #120]
    75c4:	ldr	x0, [sp, #40]
    75c8:	add	x0, x0, #0x68
    75cc:	ldr	x1, [sp, #120]
    75d0:	cmp	x1, x0
    75d4:	b.ne	74d4 <layout_vertically+0x40>  // b.any
    75d8:	ldr	w0, [sp, #100]
    75dc:	cmp	w0, #0x10, lsl #12
    75e0:	b.gt	75fc <layout_vertically+0x168>
    75e4:	ldr	w0, [sp, #116]
    75e8:	cmp	w0, #0x0
    75ec:	b.eq	7604 <layout_vertically+0x170>  // b.none
    75f0:	ldr	w0, [sp, #100]
    75f4:	cmp	w0, #0x10, lsl #12
    75f8:	b.ne	7604 <layout_vertically+0x170>  // b.any
    75fc:	mov	w0, #0x1                   	// #1
    7600:	str	w0, [sp, #96]
    7604:	ldr	x0, [sp, #16]
    7608:	cmp	x0, #0x0
    760c:	b.eq	7688 <layout_vertically+0x1f4>  // b.none
    7610:	ldr	w1, [sp, #100]
    7614:	mov	w0, #0xffff                	// #65535
    7618:	cmp	w1, w0
    761c:	b.gt	764c <layout_vertically+0x1b8>
    7620:	ldr	w2, [sp, #116]
    7624:	mov	w1, #0x10000               	// #65536
    7628:	ldr	w0, [sp, #100]
    762c:	sub	w0, w1, w0
    7630:	mov	w1, w0
    7634:	mov	w0, w2
    7638:	bl	6d28 <grub_fixed_sfs_divide>
    763c:	mov	w1, w0
    7640:	ldr	x0, [sp, #16]
    7644:	str	w1, [x0]
    7648:	b	7658 <layout_vertically+0x1c4>
    764c:	ldr	x0, [sp, #16]
    7650:	ldr	w1, [sp, #116]
    7654:	str	w1, [x0]
    7658:	ldr	x0, [sp, #16]
    765c:	ldr	w1, [x0]
    7660:	ldr	w2, [sp, #116]
    7664:	ldr	w0, [sp, #112]
    7668:	add	w0, w2, w0
    766c:	cmp	w1, w0
    7670:	b.cs	7688 <layout_vertically+0x1f4>  // b.hs, b.nlast
    7674:	ldr	w1, [sp, #116]
    7678:	ldr	w0, [sp, #112]
    767c:	add	w1, w1, w0
    7680:	ldr	x0, [sp, #16]
    7684:	str	w1, [x0]
    7688:	ldr	x0, [sp, #24]
    768c:	cmp	x0, #0x0
    7690:	b.eq	76a0 <layout_vertically+0x20c>  // b.none
    7694:	ldr	x0, [sp, #24]
    7698:	ldr	w1, [sp, #108]
    769c:	str	w1, [x0]
    76a0:	ldr	w0, [sp, #36]
    76a4:	cmp	w0, #0x0
    76a8:	b.eq	77cc <layout_vertically+0x338>  // b.none
    76ac:	ldr	x0, [sp, #40]
    76b0:	ldr	x0, [x0, #88]
    76b4:	str	x0, [sp, #120]
    76b8:	b	77b4 <layout_vertically+0x320>
    76bc:	ldr	x0, [sp, #120]
    76c0:	ldr	x0, [x0]
    76c4:	str	x0, [sp, #88]
    76c8:	str	wzr, [sp, #52]
    76cc:	str	wzr, [sp, #48]
    76d0:	str	wzr, [sp, #56]
    76d4:	ldr	w0, [sp, #104]
    76d8:	str	w0, [sp, #60]
    76dc:	ldr	w0, [sp, #108]
    76e0:	str	w0, [sp, #64]
    76e4:	ldr	x0, [sp, #88]
    76e8:	ldr	x0, [x0]
    76ec:	ldr	x0, [x0, #64]
    76f0:	cmp	x0, #0x0
    76f4:	b.eq	771c <layout_vertically+0x288>  // b.none
    76f8:	ldr	x0, [sp, #88]
    76fc:	ldr	x0, [x0]
    7700:	ldr	x3, [x0, #64]
    7704:	add	x1, sp, #0x30
    7708:	add	x0, sp, #0x34
    770c:	mov	x2, x1
    7710:	mov	x1, x0
    7714:	ldr	x0, [sp, #88]
    7718:	blr	x3
    771c:	ldr	x0, [sp, #88]
    7720:	ldr	w0, [x0, #32]
    7724:	str	w0, [sp, #68]
    7728:	ldr	w0, [sp, #96]
    772c:	cmp	w0, #0x0
    7730:	b.ne	7764 <layout_vertically+0x2d0>  // b.any
    7734:	ldr	x0, [sp, #40]
    7738:	ldr	w0, [x0, #68]
    773c:	mov	w2, w0
    7740:	ldr	x0, [sp, #88]
    7744:	ldr	w0, [x0, #36]
    7748:	mov	w1, w0
    774c:	mov	w0, w2
    7750:	bl	6d50 <grub_fixed_sfs_multiply>
    7754:	mov	w1, w0
    7758:	ldr	w0, [sp, #68]
    775c:	add	w0, w0, w1
    7760:	str	w0, [sp, #68]
    7764:	ldr	w1, [sp, #68]
    7768:	ldr	w0, [sp, #48]
    776c:	cmp	w1, w0
    7770:	b.cs	777c <layout_vertically+0x2e8>  // b.hs, b.nlast
    7774:	ldr	w0, [sp, #48]
    7778:	str	w0, [sp, #68]
    777c:	ldr	x0, [sp, #88]
    7780:	ldr	x0, [x0]
    7784:	ldr	x2, [x0, #48]
    7788:	add	x0, sp, #0x38
    778c:	mov	x1, x0
    7790:	ldr	x0, [sp, #88]
    7794:	blr	x2
    7798:	ldr	w0, [sp, #68]
    779c:	ldr	w1, [sp, #104]
    77a0:	add	w0, w1, w0
    77a4:	str	w0, [sp, #104]
    77a8:	ldr	x0, [sp, #120]
    77ac:	ldr	x0, [x0, #8]
    77b0:	str	x0, [sp, #120]
    77b4:	ldr	x0, [sp, #40]
    77b8:	add	x0, x0, #0x68
    77bc:	ldr	x1, [sp, #120]
    77c0:	cmp	x1, x0
    77c4:	b.ne	76bc <layout_vertically+0x228>  // b.any
    77c8:	b	77d0 <layout_vertically+0x33c>
    77cc:	nop
    77d0:	ldp	x29, x30, [sp], #128
    77d4:	ret

00000000000077d8 <box_paint>:
    77d8:	stp	x29, x30, [sp, #-96]!
    77dc:	mov	x29, sp
    77e0:	str	x0, [sp, #24]
    77e4:	str	x1, [sp, #16]
    77e8:	ldr	x0, [sp, #24]
    77ec:	str	x0, [sp, #80]
    77f0:	add	x0, sp, #0x34
    77f4:	bl	0 <grub_video_get_area_status>
    77f8:	ldr	x0, [sp, #80]
    77fc:	add	x0, x0, #0x38
    7800:	add	x1, sp, #0x38
    7804:	bl	6e08 <grub_gui_set_viewport>
    7808:	ldr	x0, [sp, #80]
    780c:	ldr	x0, [x0, #88]
    7810:	str	x0, [sp, #88]
    7814:	b	78c0 <box_paint+0xe8>
    7818:	ldr	x0, [sp, #88]
    781c:	ldr	x0, [x0]
    7820:	str	x0, [sp, #72]
    7824:	ldr	x0, [sp, #72]
    7828:	ldr	x0, [x0]
    782c:	ldr	x2, [x0, #56]
    7830:	add	x0, sp, #0x20
    7834:	mov	x1, x0
    7838:	ldr	x0, [sp, #72]
    783c:	blr	x2
    7840:	add	x0, sp, #0x20
    7844:	mov	x1, x0
    7848:	ldr	x0, [sp, #16]
    784c:	bl	6e70 <grub_video_have_common_points>
    7850:	cmp	w0, #0x0
    7854:	b.eq	78b0 <box_paint+0xd8>  // b.none
    7858:	ldr	w0, [sp, #52]
    785c:	cmp	w0, #0x1
    7860:	b.ne	7880 <box_paint+0xa8>  // b.any
    7864:	add	x0, sp, #0x20
    7868:	ldr	x1, [sp, #16]
    786c:	bl	6f88 <grub_video_bounds_inside_region>
    7870:	cmp	w0, #0x0
    7874:	b.eq	7880 <box_paint+0xa8>  // b.none
    7878:	mov	w0, #0x0                   	// #0
    787c:	bl	0 <grub_video_set_area_status>
    7880:	ldr	x0, [sp, #72]
    7884:	ldr	x0, [x0]
    7888:	ldr	x2, [x0, #24]
    788c:	ldr	x1, [sp, #16]
    7890:	ldr	x0, [sp, #72]
    7894:	blr	x2
    7898:	ldr	w0, [sp, #52]
    789c:	cmp	w0, #0x1
    78a0:	b.ne	78b4 <box_paint+0xdc>  // b.any
    78a4:	mov	w0, #0x1                   	// #1
    78a8:	bl	0 <grub_video_set_area_status>
    78ac:	b	78b4 <box_paint+0xdc>
    78b0:	nop
    78b4:	ldr	x0, [sp, #88]
    78b8:	ldr	x0, [x0, #8]
    78bc:	str	x0, [sp, #88]
    78c0:	ldr	x0, [sp, #80]
    78c4:	add	x0, x0, #0x68
    78c8:	ldr	x1, [sp, #88]
    78cc:	cmp	x1, x0
    78d0:	b.ne	7818 <box_paint+0x40>  // b.any
    78d4:	add	x0, sp, #0x38
    78d8:	bl	6dc4 <grub_gui_restore_viewport>
    78dc:	nop
    78e0:	ldp	x29, x30, [sp], #96
    78e4:	ret

00000000000078e8 <box_set_parent>:
    78e8:	sub	sp, sp, #0x20
    78ec:	str	x0, [sp, #8]
    78f0:	str	x1, [sp]
    78f4:	ldr	x0, [sp, #8]
    78f8:	str	x0, [sp, #24]
    78fc:	ldr	x0, [sp, #24]
    7900:	ldr	x1, [sp]
    7904:	str	x1, [x0, #48]
    7908:	nop
    790c:	add	sp, sp, #0x20
    7910:	ret

0000000000007914 <box_get_parent>:
    7914:	sub	sp, sp, #0x20
    7918:	str	x0, [sp, #8]
    791c:	ldr	x0, [sp, #8]
    7920:	str	x0, [sp, #24]
    7924:	ldr	x0, [sp, #24]
    7928:	ldr	x0, [x0, #48]
    792c:	add	sp, sp, #0x20
    7930:	ret

0000000000007934 <box_set_bounds>:
    7934:	stp	x29, x30, [sp, #-48]!
    7938:	mov	x29, sp
    793c:	str	x0, [sp, #24]
    7940:	str	x1, [sp, #16]
    7944:	ldr	x0, [sp, #24]
    7948:	str	x0, [sp, #40]
    794c:	ldr	x2, [sp, #40]
    7950:	ldr	x0, [sp, #16]
    7954:	ldp	x0, x1, [x0]
    7958:	stp	x0, x1, [x2, #56]
    795c:	ldr	x0, [sp, #40]
    7960:	ldr	x4, [x0, #128]
    7964:	mov	x3, #0x0                   	// #0
    7968:	mov	x2, #0x0                   	// #0
    796c:	mov	w1, #0x1                   	// #1
    7970:	ldr	x0, [sp, #40]
    7974:	blr	x4
    7978:	nop
    797c:	ldp	x29, x30, [sp], #48
    7980:	ret

0000000000007984 <box_get_bounds>:
    7984:	sub	sp, sp, #0x20
    7988:	str	x0, [sp, #8]
    798c:	str	x1, [sp]
    7990:	ldr	x0, [sp, #8]
    7994:	str	x0, [sp, #24]
    7998:	ldr	x2, [sp]
    799c:	ldr	x0, [sp, #24]
    79a0:	ldp	x0, x1, [x0, #56]
    79a4:	stp	x0, x1, [x2]
    79a8:	nop
    79ac:	add	sp, sp, #0x20
    79b0:	ret

00000000000079b4 <box_get_minimal_size>:
    79b4:	stp	x29, x30, [sp, #-64]!
    79b8:	mov	x29, sp
    79bc:	str	x0, [sp, #40]
    79c0:	str	x1, [sp, #32]
    79c4:	str	x2, [sp, #24]
    79c8:	ldr	x0, [sp, #40]
    79cc:	str	x0, [sp, #56]
    79d0:	ldr	x0, [sp, #56]
    79d4:	ldr	x4, [x0, #128]
    79d8:	ldr	x3, [sp, #24]
    79dc:	ldr	x2, [sp, #32]
    79e0:	mov	w1, #0x0                   	// #0
    79e4:	ldr	x0, [sp, #56]
    79e8:	blr	x4
    79ec:	nop
    79f0:	ldp	x29, x30, [sp], #64
    79f4:	ret

00000000000079f8 <box_set_property>:
    79f8:	stp	x29, x30, [sp, #-64]!
    79fc:	mov	x29, sp
    7a00:	str	x0, [sp, #40]
    7a04:	str	x1, [sp, #32]
    7a08:	str	x2, [sp, #24]
    7a0c:	ldr	x0, [sp, #40]
    7a10:	str	x0, [sp, #56]
    7a14:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    7a18:	add	x0, x0, #0x0
    7a1c:	ldr	x1, [x0]
    7a20:	ldr	x0, [sp, #32]
    7a24:	bl	0 <grub_strcmp>
    7a28:	cmp	w0, #0x0
    7a2c:	b.ne	7a88 <box_set_property+0x90>  // b.any
    7a30:	ldr	x0, [sp, #56]
    7a34:	ldr	x0, [x0, #72]
    7a38:	bl	0 <grub_free>
    7a3c:	ldr	x0, [sp, #24]
    7a40:	cmp	x0, #0x0
    7a44:	b.eq	7a80 <box_set_property+0x88>  // b.none
    7a48:	ldr	x0, [sp, #24]
    7a4c:	bl	0 <grub_strdup>
    7a50:	mov	x1, x0
    7a54:	ldr	x0, [sp, #56]
    7a58:	str	x1, [x0, #72]
    7a5c:	ldr	x0, [sp, #56]
    7a60:	ldr	x0, [x0, #72]
    7a64:	cmp	x0, #0x0
    7a68:	b.ne	7a88 <box_set_property+0x90>  // b.any
    7a6c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    7a70:	add	x0, x0, #0x0
    7a74:	ldr	x0, [x0]
    7a78:	ldr	w0, [x0]
    7a7c:	b	7a98 <box_set_property+0xa0>
    7a80:	ldr	x0, [sp, #56]
    7a84:	str	xzr, [x0, #72]
    7a88:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    7a8c:	add	x0, x0, #0x0
    7a90:	ldr	x0, [x0]
    7a94:	ldr	w0, [x0]
    7a98:	ldp	x29, x30, [sp], #64
    7a9c:	ret
	...

0000000000007ab0 <box_add>:
    7ab0:	stp	x29, x30, [sp, #-48]!
    7ab4:	mov	x29, sp
    7ab8:	str	x0, [sp, #24]
    7abc:	str	x1, [sp, #16]
    7ac0:	ldr	x0, [sp, #24]
    7ac4:	str	x0, [sp, #40]
    7ac8:	mov	x0, #0x18                  	// #24
    7acc:	bl	0 <grub_malloc>
    7ad0:	str	x0, [sp, #32]
    7ad4:	ldr	x0, [sp, #32]
    7ad8:	cmp	x0, #0x0
    7adc:	b.eq	7b64 <box_add+0xb4>  // b.none
    7ae0:	ldr	x0, [sp, #32]
    7ae4:	ldr	x1, [sp, #16]
    7ae8:	str	x1, [x0]
    7aec:	ldr	x0, [sp, #40]
    7af0:	ldr	x1, [x0, #120]
    7af4:	ldr	x0, [sp, #32]
    7af8:	str	x1, [x0, #16]
    7afc:	ldr	x0, [sp, #32]
    7b00:	ldr	x0, [x0, #16]
    7b04:	ldr	x1, [sp, #32]
    7b08:	str	x1, [x0, #8]
    7b0c:	ldr	x0, [sp, #40]
    7b10:	add	x1, x0, #0x68
    7b14:	ldr	x0, [sp, #32]
    7b18:	str	x1, [x0, #8]
    7b1c:	ldr	x0, [sp, #32]
    7b20:	ldr	x0, [x0, #8]
    7b24:	ldr	x1, [sp, #32]
    7b28:	str	x1, [x0, #16]
    7b2c:	ldr	x0, [sp, #16]
    7b30:	ldr	x0, [x0]
    7b34:	ldr	x2, [x0, #32]
    7b38:	ldr	x1, [sp, #40]
    7b3c:	ldr	x0, [sp, #16]
    7b40:	blr	x2
    7b44:	ldr	x0, [sp, #40]
    7b48:	ldr	x4, [x0, #128]
    7b4c:	mov	x3, #0x0                   	// #0
    7b50:	mov	x2, #0x0                   	// #0
    7b54:	mov	w1, #0x1                   	// #1
    7b58:	ldr	x0, [sp, #40]
    7b5c:	blr	x4
    7b60:	b	7b68 <box_add+0xb8>
    7b64:	nop
    7b68:	ldp	x29, x30, [sp], #48
    7b6c:	ret

0000000000007b70 <box_remove>:
    7b70:	stp	x29, x30, [sp, #-48]!
    7b74:	mov	x29, sp
    7b78:	str	x0, [sp, #24]
    7b7c:	str	x1, [sp, #16]
    7b80:	ldr	x0, [sp, #24]
    7b84:	str	x0, [sp, #32]
    7b88:	ldr	x0, [sp, #32]
    7b8c:	ldr	x0, [x0, #88]
    7b90:	str	x0, [sp, #40]
    7b94:	b	7bec <box_remove+0x7c>
    7b98:	ldr	x0, [sp, #40]
    7b9c:	ldr	x0, [x0]
    7ba0:	ldr	x1, [sp, #16]
    7ba4:	cmp	x1, x0
    7ba8:	b.ne	7be0 <box_remove+0x70>  // b.any
    7bac:	ldr	x0, [sp, #40]
    7bb0:	ldr	x0, [x0, #16]
    7bb4:	ldr	x1, [sp, #40]
    7bb8:	ldr	x1, [x1, #8]
    7bbc:	str	x1, [x0, #8]
    7bc0:	ldr	x0, [sp, #40]
    7bc4:	ldr	x0, [x0, #8]
    7bc8:	ldr	x1, [sp, #40]
    7bcc:	ldr	x1, [x1, #16]
    7bd0:	str	x1, [x0, #16]
    7bd4:	ldr	x0, [sp, #40]
    7bd8:	bl	0 <grub_free>
    7bdc:	b	7c00 <box_remove+0x90>
    7be0:	ldr	x0, [sp, #40]
    7be4:	ldr	x0, [x0, #8]
    7be8:	str	x0, [sp, #40]
    7bec:	ldr	x0, [sp, #32]
    7bf0:	add	x0, x0, #0x68
    7bf4:	ldr	x1, [sp, #40]
    7bf8:	cmp	x1, x0
    7bfc:	b.ne	7b98 <box_remove+0x28>  // b.any
    7c00:	ldp	x29, x30, [sp], #48
    7c04:	ret

0000000000007c08 <box_iterate_children>:
    7c08:	stp	x29, x30, [sp, #-64]!
    7c0c:	mov	x29, sp
    7c10:	str	x0, [sp, #40]
    7c14:	str	x1, [sp, #32]
    7c18:	str	x2, [sp, #24]
    7c1c:	ldr	x0, [sp, #40]
    7c20:	str	x0, [sp, #48]
    7c24:	ldr	x0, [sp, #48]
    7c28:	ldr	x0, [x0, #88]
    7c2c:	str	x0, [sp, #56]
    7c30:	b	7c54 <box_iterate_children+0x4c>
    7c34:	ldr	x0, [sp, #56]
    7c38:	ldr	x0, [x0]
    7c3c:	ldr	x2, [sp, #32]
    7c40:	ldr	x1, [sp, #24]
    7c44:	blr	x2
    7c48:	ldr	x0, [sp, #56]
    7c4c:	ldr	x0, [x0, #8]
    7c50:	str	x0, [sp, #56]
    7c54:	ldr	x0, [sp, #48]
    7c58:	add	x0, x0, #0x68
    7c5c:	ldr	x1, [sp, #56]
    7c60:	cmp	x1, x0
    7c64:	b.ne	7c34 <box_iterate_children+0x2c>  // b.any
    7c68:	nop
    7c6c:	nop
    7c70:	ldp	x29, x30, [sp], #64
    7c74:	ret

0000000000007c78 <box_new>:
    7c78:	stp	x29, x30, [sp, #-48]!
    7c7c:	mov	x29, sp
    7c80:	str	x0, [sp, #24]
    7c84:	mov	x0, #0x88                  	// #136
    7c88:	bl	0 <grub_zalloc>
    7c8c:	str	x0, [sp, #40]
    7c90:	ldr	x0, [sp, #40]
    7c94:	cmp	x0, #0x0
    7c98:	b.ne	7ca4 <box_new+0x2c>  // b.any
    7c9c:	mov	x0, #0x0                   	// #0
    7ca0:	b	7cfc <box_new+0x84>
    7ca4:	ldr	x0, [sp, #40]
    7ca8:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    7cac:	add	x1, x1, #0x0
    7cb0:	ldr	x1, [x1]
    7cb4:	str	x1, [x0, #40]
    7cb8:	ldr	x0, [sp, #40]
    7cbc:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    7cc0:	add	x1, x1, #0x0
    7cc4:	ldr	x1, [x1]
    7cc8:	str	x1, [x0]
    7ccc:	ldr	x0, [sp, #40]
    7cd0:	add	x1, x0, #0x68
    7cd4:	ldr	x0, [sp, #40]
    7cd8:	str	x1, [x0, #88]
    7cdc:	ldr	x0, [sp, #40]
    7ce0:	add	x1, x0, #0x50
    7ce4:	ldr	x0, [sp, #40]
    7ce8:	str	x1, [x0, #120]
    7cec:	ldr	x0, [sp, #40]
    7cf0:	ldr	x1, [sp, #24]
    7cf4:	str	x1, [x0, #128]
    7cf8:	ldr	x0, [sp, #40]
    7cfc:	ldp	x29, x30, [sp], #48
    7d00:	ret
    7d04:	nop
	...

0000000000007d18 <grub_gui_hbox_new>:
    7d18:	stp	x29, x30, [sp, #-16]!
    7d1c:	mov	x29, sp
    7d20:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    7d24:	add	x0, x0, #0x0
    7d28:	ldr	x0, [x0]
    7d2c:	bl	7c78 <box_new>
    7d30:	ldp	x29, x30, [sp], #16
    7d34:	ret
	...

0000000000007d40 <grub_gui_vbox_new>:
    7d40:	stp	x29, x30, [sp, #-16]!
    7d44:	mov	x29, sp
    7d48:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    7d4c:	add	x0, x0, #0x0
    7d50:	ldr	x0, [x0]
    7d54:	bl	7c78 <box_new>
    7d58:	ldp	x29, x30, [sp], #16
    7d5c:	ret
	...

0000000000007d68 <grub_video_map_rgba_color>:
    7d68:	stp	x29, x30, [sp, #-32]!
    7d6c:	mov	x29, sp
    7d70:	str	w0, [sp, #24]
    7d74:	ldrb	w0, [sp, #24]
    7d78:	ldrb	w1, [sp, #25]
    7d7c:	ldrb	w2, [sp, #26]
    7d80:	ldrb	w3, [sp, #27]
    7d84:	bl	0 <grub_video_map_rgba>
    7d88:	ldp	x29, x30, [sp], #32
    7d8c:	ret

0000000000007d90 <grub_font_get_ascent>:
    7d90:	sub	sp, sp, #0x10
    7d94:	str	x0, [sp, #8]
    7d98:	ldr	x0, [sp, #8]
    7d9c:	ldrsh	w0, [x0, #32]
    7da0:	add	sp, sp, #0x10
    7da4:	ret

0000000000007da8 <grub_gfxmenu_timeout_register>:
    7da8:	stp	x29, x30, [sp, #-48]!
    7dac:	mov	x29, sp
    7db0:	str	x0, [sp, #24]
    7db4:	str	x1, [sp, #16]
    7db8:	mov	x0, #0x18                  	// #24
    7dbc:	bl	0 <grub_malloc>
    7dc0:	str	x0, [sp, #40]
    7dc4:	ldr	x0, [sp, #40]
    7dc8:	cmp	x0, #0x0
    7dcc:	b.ne	7de4 <grub_gfxmenu_timeout_register+0x3c>  // b.any
    7dd0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    7dd4:	add	x0, x0, #0x0
    7dd8:	ldr	x0, [x0]
    7ddc:	ldr	w0, [x0]
    7de0:	b	7e2c <grub_gfxmenu_timeout_register+0x84>
    7de4:	ldr	x0, [sp, #40]
    7de8:	ldr	x1, [sp, #16]
    7dec:	str	x1, [x0, #8]
    7df0:	ldr	x0, [sp, #40]
    7df4:	ldr	x1, [sp, #24]
    7df8:	str	x1, [x0, #16]
    7dfc:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    7e00:	add	x0, x0, #0x0
    7e04:	ldr	x0, [x0]
    7e08:	ldr	x1, [x0]
    7e0c:	ldr	x0, [sp, #40]
    7e10:	str	x1, [x0]
    7e14:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    7e18:	add	x0, x0, #0x0
    7e1c:	ldr	x0, [x0]
    7e20:	ldr	x1, [sp, #40]
    7e24:	str	x1, [x0]
    7e28:	mov	w0, #0x0                   	// #0
    7e2c:	ldp	x29, x30, [sp], #48
    7e30:	ret
    7e34:	nop
	...

0000000000007e48 <grub_gfxmenu_timeout_unregister>:
    7e48:	stp	x29, x30, [sp, #-48]!
    7e4c:	mov	x29, sp
    7e50:	str	x0, [sp, #24]
    7e54:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    7e58:	add	x0, x0, #0x0
    7e5c:	ldr	x0, [x0]
    7e60:	str	x0, [sp, #40]
    7e64:	ldr	x0, [sp, #40]
    7e68:	ldr	x0, [x0]
    7e6c:	str	x0, [sp, #32]
    7e70:	b	7eb8 <grub_gfxmenu_timeout_unregister+0x70>
    7e74:	ldr	x0, [sp, #32]
    7e78:	ldr	x0, [x0, #16]
    7e7c:	ldr	x1, [sp, #24]
    7e80:	cmp	x1, x0
    7e84:	b.ne	7ea4 <grub_gfxmenu_timeout_unregister+0x5c>  // b.any
    7e88:	ldr	x0, [sp, #32]
    7e8c:	ldr	x1, [x0]
    7e90:	ldr	x0, [sp, #40]
    7e94:	str	x1, [x0]
    7e98:	ldr	x0, [sp, #32]
    7e9c:	bl	0 <grub_free>
    7ea0:	b	7ec8 <grub_gfxmenu_timeout_unregister+0x80>
    7ea4:	ldr	x0, [sp, #32]
    7ea8:	str	x0, [sp, #40]
    7eac:	ldr	x0, [sp, #32]
    7eb0:	ldr	x0, [x0]
    7eb4:	str	x0, [sp, #32]
    7eb8:	ldr	x0, [sp, #32]
    7ebc:	cmp	x0, #0x0
    7ec0:	b.ne	7e74 <grub_gfxmenu_timeout_unregister+0x2c>  // b.any
    7ec4:	nop
    7ec8:	nop
    7ecc:	ldp	x29, x30, [sp], #48
    7ed0:	ret
    7ed4:	nop
	...

0000000000007ee0 <grub_gui_save_viewport>:
    7ee0:	stp	x29, x30, [sp, #-32]!
    7ee4:	mov	x29, sp
    7ee8:	str	x0, [sp, #24]
    7eec:	ldr	x4, [sp, #24]
    7ef0:	ldr	x0, [sp, #24]
    7ef4:	add	x1, x0, #0x4
    7ef8:	ldr	x0, [sp, #24]
    7efc:	add	x2, x0, #0x8
    7f00:	ldr	x0, [sp, #24]
    7f04:	add	x0, x0, #0xc
    7f08:	mov	x3, x0
    7f0c:	mov	x0, x4
    7f10:	bl	0 <grub_video_get_viewport>
    7f14:	nop
    7f18:	ldp	x29, x30, [sp], #32
    7f1c:	ret

0000000000007f20 <grub_gui_restore_viewport>:
    7f20:	stp	x29, x30, [sp, #-32]!
    7f24:	mov	x29, sp
    7f28:	str	x0, [sp, #24]
    7f2c:	ldr	x0, [sp, #24]
    7f30:	ldr	w4, [x0]
    7f34:	ldr	x0, [sp, #24]
    7f38:	ldr	w1, [x0, #4]
    7f3c:	ldr	x0, [sp, #24]
    7f40:	ldr	w2, [x0, #8]
    7f44:	ldr	x0, [sp, #24]
    7f48:	ldr	w0, [x0, #12]
    7f4c:	mov	w3, w0
    7f50:	mov	w0, w4
    7f54:	bl	0 <grub_video_set_viewport>
    7f58:	nop
    7f5c:	ldp	x29, x30, [sp], #32
    7f60:	ret

0000000000007f64 <grub_gui_set_viewport>:
    7f64:	stp	x29, x30, [sp, #-32]!
    7f68:	mov	x29, sp
    7f6c:	str	x0, [sp, #24]
    7f70:	str	x1, [sp, #16]
    7f74:	ldr	x0, [sp, #16]
    7f78:	bl	7ee0 <grub_gui_save_viewport>
    7f7c:	ldr	x0, [sp, #16]
    7f80:	ldr	w1, [x0]
    7f84:	ldr	x0, [sp, #24]
    7f88:	ldr	w0, [x0]
    7f8c:	add	w4, w1, w0
    7f90:	ldr	x0, [sp, #16]
    7f94:	ldr	w1, [x0, #4]
    7f98:	ldr	x0, [sp, #24]
    7f9c:	ldr	w0, [x0, #4]
    7fa0:	add	w1, w1, w0
    7fa4:	ldr	x0, [sp, #24]
    7fa8:	ldr	w2, [x0, #8]
    7fac:	ldr	x0, [sp, #24]
    7fb0:	ldr	w0, [x0, #12]
    7fb4:	mov	w3, w0
    7fb8:	mov	w0, w4
    7fbc:	bl	0 <grub_video_set_viewport>
    7fc0:	nop
    7fc4:	ldp	x29, x30, [sp], #32
    7fc8:	ret

0000000000007fcc <grub_video_have_common_points>:
    7fcc:	sub	sp, sp, #0x10
    7fd0:	str	x0, [sp, #8]
    7fd4:	str	x1, [sp]
    7fd8:	ldr	x0, [sp, #8]
    7fdc:	ldr	w1, [x0]
    7fe0:	ldr	x0, [sp]
    7fe4:	ldr	w0, [x0]
    7fe8:	cmp	w1, w0
    7fec:	b.hi	8014 <grub_video_have_common_points+0x48>  // b.pmore
    7ff0:	ldr	x0, [sp]
    7ff4:	ldr	w1, [x0]
    7ff8:	ldr	x0, [sp, #8]
    7ffc:	ldr	w2, [x0]
    8000:	ldr	x0, [sp, #8]
    8004:	ldr	w0, [x0, #8]
    8008:	add	w0, w2, w0
    800c:	cmp	w1, w0
    8010:	b.ls	8058 <grub_video_have_common_points+0x8c>  // b.plast
    8014:	ldr	x0, [sp]
    8018:	ldr	w1, [x0]
    801c:	ldr	x0, [sp, #8]
    8020:	ldr	w0, [x0]
    8024:	cmp	w1, w0
    8028:	b.hi	8050 <grub_video_have_common_points+0x84>  // b.pmore
    802c:	ldr	x0, [sp, #8]
    8030:	ldr	w1, [x0]
    8034:	ldr	x0, [sp]
    8038:	ldr	w2, [x0]
    803c:	ldr	x0, [sp]
    8040:	ldr	w0, [x0, #8]
    8044:	add	w0, w2, w0
    8048:	cmp	w1, w0
    804c:	b.ls	8058 <grub_video_have_common_points+0x8c>  // b.plast
    8050:	mov	w0, #0x0                   	// #0
    8054:	b	80dc <grub_video_have_common_points+0x110>
    8058:	ldr	x0, [sp, #8]
    805c:	ldr	w1, [x0, #4]
    8060:	ldr	x0, [sp]
    8064:	ldr	w0, [x0, #4]
    8068:	cmp	w1, w0
    806c:	b.hi	8094 <grub_video_have_common_points+0xc8>  // b.pmore
    8070:	ldr	x0, [sp]
    8074:	ldr	w1, [x0, #4]
    8078:	ldr	x0, [sp, #8]
    807c:	ldr	w2, [x0, #4]
    8080:	ldr	x0, [sp, #8]
    8084:	ldr	w0, [x0, #12]
    8088:	add	w0, w2, w0
    808c:	cmp	w1, w0
    8090:	b.ls	80d8 <grub_video_have_common_points+0x10c>  // b.plast
    8094:	ldr	x0, [sp]
    8098:	ldr	w1, [x0, #4]
    809c:	ldr	x0, [sp, #8]
    80a0:	ldr	w0, [x0, #4]
    80a4:	cmp	w1, w0
    80a8:	b.hi	80d0 <grub_video_have_common_points+0x104>  // b.pmore
    80ac:	ldr	x0, [sp, #8]
    80b0:	ldr	w1, [x0, #4]
    80b4:	ldr	x0, [sp]
    80b8:	ldr	w2, [x0, #4]
    80bc:	ldr	x0, [sp]
    80c0:	ldr	w0, [x0, #12]
    80c4:	add	w0, w2, w0
    80c8:	cmp	w1, w0
    80cc:	b.ls	80d8 <grub_video_have_common_points+0x10c>  // b.plast
    80d0:	mov	w0, #0x0                   	// #0
    80d4:	b	80dc <grub_video_have_common_points+0x110>
    80d8:	mov	w0, #0x1                   	// #1
    80dc:	add	sp, sp, #0x10
    80e0:	ret

00000000000080e4 <label_destroy>:
    80e4:	stp	x29, x30, [sp, #-48]!
    80e8:	mov	x29, sp
    80ec:	str	x0, [sp, #24]
    80f0:	ldr	x0, [sp, #24]
    80f4:	str	x0, [sp, #40]
    80f8:	ldr	x0, [sp, #40]
    80fc:	bl	7e48 <grub_gfxmenu_timeout_unregister>
    8100:	ldr	x0, [sp, #40]
    8104:	ldr	x0, [x0, #80]
    8108:	bl	0 <grub_free>
    810c:	ldr	x0, [sp, #40]
    8110:	ldr	x0, [x0, #88]
    8114:	bl	0 <grub_free>
    8118:	ldr	x0, [sp, #40]
    811c:	bl	0 <grub_free>
    8120:	nop
    8124:	ldp	x29, x30, [sp], #48
    8128:	ret

000000000000812c <label_get_id>:
    812c:	sub	sp, sp, #0x20
    8130:	str	x0, [sp, #8]
    8134:	ldr	x0, [sp, #8]
    8138:	str	x0, [sp, #24]
    813c:	ldr	x0, [sp, #24]
    8140:	ldr	x0, [x0, #64]
    8144:	add	sp, sp, #0x20
    8148:	ret

000000000000814c <label_is_instance>:
    814c:	stp	x29, x30, [sp, #-32]!
    8150:	mov	x29, sp
    8154:	str	x0, [sp, #24]
    8158:	str	x1, [sp, #16]
    815c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    8160:	add	x0, x0, #0x0
    8164:	ldr	x1, [x0]
    8168:	ldr	x0, [sp, #16]
    816c:	bl	0 <grub_strcmp>
    8170:	cmp	w0, #0x0
    8174:	cset	w0, eq  // eq = none
    8178:	and	w0, w0, #0xff
    817c:	ldp	x29, x30, [sp], #32
    8180:	ret
    8184:	nop
	...

0000000000008190 <label_paint>:
    8190:	stp	x29, x30, [sp, #-96]!
    8194:	mov	x29, sp
    8198:	stp	x19, x20, [sp, #16]
    819c:	str	x21, [sp, #32]
    81a0:	str	x0, [sp, #56]
    81a4:	str	x1, [sp, #48]
    81a8:	ldr	x0, [sp, #56]
    81ac:	str	x0, [sp, #80]
    81b0:	ldr	x0, [sp, #80]
    81b4:	ldr	w0, [x0, #72]
    81b8:	cmp	w0, #0x0
    81bc:	b.eq	82fc <label_paint+0x16c>  // b.none
    81c0:	ldr	x0, [sp, #80]
    81c4:	add	x0, x0, #0x30
    81c8:	mov	x1, x0
    81cc:	ldr	x0, [sp, #48]
    81d0:	bl	7fcc <grub_video_have_common_points>
    81d4:	cmp	w0, #0x0
    81d8:	b.eq	8304 <label_paint+0x174>  // b.none
    81dc:	ldr	x0, [sp, #80]
    81e0:	ldr	w0, [x0, #112]
    81e4:	cmp	w0, #0x0
    81e8:	b.ne	81f4 <label_paint+0x64>  // b.any
    81ec:	str	wzr, [sp, #92]
    81f0:	b	8274 <label_paint+0xe4>
    81f4:	ldr	x0, [sp, #80]
    81f8:	ldr	w0, [x0, #112]
    81fc:	cmp	w0, #0x1
    8200:	b.ne	8238 <label_paint+0xa8>  // b.any
    8204:	ldr	x0, [sp, #80]
    8208:	ldr	w19, [x0, #56]
    820c:	ldr	x0, [sp, #80]
    8210:	ldr	x2, [x0, #96]
    8214:	ldr	x0, [sp, #80]
    8218:	ldr	x0, [x0, #80]
    821c:	mov	x1, x0
    8220:	mov	x0, x2
    8224:	bl	1dd8 <grub_font_get_string_width>
    8228:	sub	w0, w19, w0
    822c:	lsr	w0, w0, #1
    8230:	str	w0, [sp, #92]
    8234:	b	8274 <label_paint+0xe4>
    8238:	ldr	x0, [sp, #80]
    823c:	ldr	w0, [x0, #112]
    8240:	cmp	w0, #0x2
    8244:	b.ne	830c <label_paint+0x17c>  // b.any
    8248:	ldr	x0, [sp, #80]
    824c:	ldr	w19, [x0, #56]
    8250:	ldr	x0, [sp, #80]
    8254:	ldr	x2, [x0, #96]
    8258:	ldr	x0, [sp, #80]
    825c:	ldr	x0, [x0, #80]
    8260:	mov	x1, x0
    8264:	mov	x0, x2
    8268:	bl	1dd8 <grub_font_get_string_width>
    826c:	sub	w0, w19, w0
    8270:	str	w0, [sp, #92]
    8274:	ldr	w0, [sp, #92]
    8278:	cmp	w0, #0x0
    827c:	b.lt	8298 <label_paint+0x108>  // b.tstop
    8280:	ldr	x0, [sp, #80]
    8284:	ldr	w0, [x0, #56]
    8288:	mov	w1, w0
    828c:	ldr	w0, [sp, #92]
    8290:	cmp	w0, w1
    8294:	b.le	829c <label_paint+0x10c>
    8298:	str	wzr, [sp, #92]
    829c:	ldr	x0, [sp, #80]
    82a0:	add	x0, x0, #0x30
    82a4:	add	x1, sp, #0x40
    82a8:	bl	7f64 <grub_gui_set_viewport>
    82ac:	ldr	x0, [sp, #80]
    82b0:	ldr	x19, [x0, #80]
    82b4:	ldr	x0, [sp, #80]
    82b8:	ldr	x20, [x0, #96]
    82bc:	ldr	x0, [sp, #80]
    82c0:	ldr	w0, [x0, #104]
    82c4:	bl	7d68 <grub_video_map_rgba_color>
    82c8:	mov	w21, w0
    82cc:	ldr	x0, [sp, #80]
    82d0:	ldr	x0, [x0, #96]
    82d4:	bl	7d90 <grub_font_get_ascent>
    82d8:	mov	w4, w0
    82dc:	ldr	w3, [sp, #92]
    82e0:	mov	w2, w21
    82e4:	mov	x1, x20
    82e8:	mov	x0, x19
    82ec:	bl	1c14 <grub_font_draw_string>
    82f0:	add	x0, sp, #0x40
    82f4:	bl	7f20 <grub_gui_restore_viewport>
    82f8:	b	8310 <label_paint+0x180>
    82fc:	nop
    8300:	b	8310 <label_paint+0x180>
    8304:	nop
    8308:	b	8310 <label_paint+0x180>
    830c:	nop
    8310:	ldp	x19, x20, [sp, #16]
    8314:	ldr	x21, [sp, #32]
    8318:	ldp	x29, x30, [sp], #96
    831c:	ret

0000000000008320 <label_set_parent>:
    8320:	sub	sp, sp, #0x20
    8324:	str	x0, [sp, #8]
    8328:	str	x1, [sp]
    832c:	ldr	x0, [sp, #8]
    8330:	str	x0, [sp, #24]
    8334:	ldr	x0, [sp, #24]
    8338:	ldr	x1, [sp]
    833c:	str	x1, [x0, #40]
    8340:	nop
    8344:	add	sp, sp, #0x20
    8348:	ret

000000000000834c <label_get_parent>:
    834c:	sub	sp, sp, #0x20
    8350:	str	x0, [sp, #8]
    8354:	ldr	x0, [sp, #8]
    8358:	str	x0, [sp, #24]
    835c:	ldr	x0, [sp, #24]
    8360:	ldr	x0, [x0, #40]
    8364:	add	sp, sp, #0x20
    8368:	ret

000000000000836c <label_set_bounds>:
    836c:	sub	sp, sp, #0x20
    8370:	str	x0, [sp, #8]
    8374:	str	x1, [sp]
    8378:	ldr	x0, [sp, #8]
    837c:	str	x0, [sp, #24]
    8380:	ldr	x2, [sp, #24]
    8384:	ldr	x0, [sp]
    8388:	ldp	x0, x1, [x0]
    838c:	stp	x0, x1, [x2, #48]
    8390:	nop
    8394:	add	sp, sp, #0x20
    8398:	ret

000000000000839c <label_get_bounds>:
    839c:	sub	sp, sp, #0x20
    83a0:	str	x0, [sp, #8]
    83a4:	str	x1, [sp]
    83a8:	ldr	x0, [sp, #8]
    83ac:	str	x0, [sp, #24]
    83b0:	ldr	x2, [sp]
    83b4:	ldr	x0, [sp, #24]
    83b8:	ldp	x0, x1, [x0, #48]
    83bc:	stp	x0, x1, [x2]
    83c0:	nop
    83c4:	add	sp, sp, #0x20
    83c8:	ret

00000000000083cc <label_get_minimal_size>:
    83cc:	stp	x29, x30, [sp, #-80]!
    83d0:	mov	x29, sp
    83d4:	str	x19, [sp, #16]
    83d8:	str	x0, [sp, #56]
    83dc:	str	x1, [sp, #48]
    83e0:	str	x2, [sp, #40]
    83e4:	ldr	x0, [sp, #56]
    83e8:	str	x0, [sp, #72]
    83ec:	ldr	x0, [sp, #72]
    83f0:	ldr	x2, [x0, #96]
    83f4:	ldr	x0, [sp, #72]
    83f8:	ldr	x0, [x0, #80]
    83fc:	mov	x1, x0
    8400:	mov	x0, x2
    8404:	bl	1dd8 <grub_font_get_string_width>
    8408:	mov	w1, w0
    840c:	ldr	x0, [sp, #48]
    8410:	str	w1, [x0]
    8414:	ldr	x0, [sp, #72]
    8418:	ldr	x0, [x0, #96]
    841c:	bl	7d90 <grub_font_get_ascent>
    8420:	mov	w19, w0
    8424:	ldr	x0, [sp, #72]
    8428:	ldr	x0, [x0, #96]
    842c:	bl	0 <grub_font_get_descent>
    8430:	add	w0, w19, w0
    8434:	mov	w1, w0
    8438:	ldr	x0, [sp, #40]
    843c:	str	w1, [x0]
    8440:	nop
    8444:	ldr	x19, [sp, #16]
    8448:	ldp	x29, x30, [sp], #80
    844c:	ret

0000000000008450 <label_set_state>:
    8450:	stp	x29, x30, [sp, #-64]!
    8454:	mov	x29, sp
    8458:	str	x0, [sp, #40]
    845c:	str	w1, [sp, #36]
    8460:	str	w2, [sp, #32]
    8464:	str	w3, [sp, #28]
    8468:	str	w4, [sp, #24]
    846c:	ldr	x0, [sp, #40]
    8470:	str	x0, [sp, #56]
    8474:	ldr	w0, [sp, #28]
    8478:	neg	w1, w0
    847c:	ldr	x0, [sp, #56]
    8480:	str	w1, [x0, #108]
    8484:	ldr	x0, [sp, #56]
    8488:	ldr	w1, [sp, #36]
    848c:	str	w1, [x0, #72]
    8490:	ldr	x0, [sp, #56]
    8494:	ldr	x0, [x0, #80]
    8498:	bl	0 <grub_free>
    849c:	ldr	x0, [sp, #56]
    84a0:	ldr	x0, [x0, #88]
    84a4:	cmp	x0, #0x0
    84a8:	b.ne	84b8 <label_set_state+0x68>  // b.any
    84ac:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    84b0:	add	x0, x0, #0x0
    84b4:	ldr	x0, [x0]
    84b8:	ldr	x1, [sp, #56]
    84bc:	ldr	w1, [x1, #108]
    84c0:	bl	0 <grub_xasprintf>
    84c4:	mov	x1, x0
    84c8:	ldr	x0, [sp, #56]
    84cc:	str	x1, [x0, #80]
    84d0:	nop
    84d4:	ldp	x29, x30, [sp], #64
    84d8:	ret
    84dc:	nop
	...

00000000000084e8 <label_set_property>:
    84e8:	stp	x29, x30, [sp, #-96]!
    84ec:	mov	x29, sp
    84f0:	str	x0, [sp, #40]
    84f4:	str	x1, [sp, #32]
    84f8:	str	x2, [sp, #24]
    84fc:	ldr	x0, [sp, #40]
    8500:	str	x0, [sp, #80]
    8504:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    8508:	add	x0, x0, #0x0
    850c:	ldr	x1, [x0]
    8510:	ldr	x0, [sp, #32]
    8514:	bl	0 <grub_strcmp>
    8518:	cmp	w0, #0x0
    851c:	b.ne	8684 <label_set_property+0x19c>  // b.any
    8520:	ldr	x0, [sp, #80]
    8524:	ldr	x0, [x0, #80]
    8528:	bl	0 <grub_free>
    852c:	ldr	x0, [sp, #80]
    8530:	ldr	x0, [x0, #88]
    8534:	bl	0 <grub_free>
    8538:	ldr	x0, [sp, #24]
    853c:	cmp	x0, #0x0
    8540:	b.ne	856c <label_set_property+0x84>  // b.any
    8544:	ldr	x0, [sp, #80]
    8548:	str	xzr, [x0, #88]
    854c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    8550:	add	x0, x0, #0x0
    8554:	ldr	x0, [x0]
    8558:	bl	0 <grub_strdup>
    855c:	mov	x1, x0
    8560:	ldr	x0, [sp, #80]
    8564:	str	x1, [x0, #80]
    8568:	b	8860 <label_set_property+0x378>
    856c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    8570:	add	x0, x0, #0x0
    8574:	ldr	x1, [x0]
    8578:	ldr	x0, [sp, #24]
    857c:	bl	0 <grub_strcmp>
    8580:	cmp	w0, #0x0
    8584:	b.ne	85b8 <label_set_property+0xd0>  // b.any
    8588:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    858c:	add	x0, x0, #0x0
    8590:	ldr	x0, [x0]
    8594:	str	x0, [sp, #72]
    8598:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    859c:	add	x0, x0, #0x0
    85a0:	ldr	x0, [x0]
    85a4:	ldr	x1, [x0]
    85a8:	ldr	x0, [sp, #72]
    85ac:	blr	x1
    85b0:	str	x0, [sp, #24]
    85b4:	b	864c <label_set_property+0x164>
    85b8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    85bc:	add	x0, x0, #0x0
    85c0:	ldr	x1, [x0]
    85c4:	ldr	x0, [sp, #24]
    85c8:	bl	0 <grub_strcmp>
    85cc:	cmp	w0, #0x0
    85d0:	b.ne	8604 <label_set_property+0x11c>  // b.any
    85d4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    85d8:	add	x0, x0, #0x0
    85dc:	ldr	x0, [x0]
    85e0:	str	x0, [sp, #64]
    85e4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    85e8:	add	x0, x0, #0x0
    85ec:	ldr	x0, [x0]
    85f0:	ldr	x1, [x0]
    85f4:	ldr	x0, [sp, #64]
    85f8:	blr	x1
    85fc:	str	x0, [sp, #24]
    8600:	b	864c <label_set_property+0x164>
    8604:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    8608:	add	x0, x0, #0x0
    860c:	ldr	x1, [x0]
    8610:	ldr	x0, [sp, #24]
    8614:	bl	0 <grub_strcmp>
    8618:	cmp	w0, #0x0
    861c:	b.ne	864c <label_set_property+0x164>  // b.any
    8620:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    8624:	add	x0, x0, #0x0
    8628:	ldr	x0, [x0]
    862c:	str	x0, [sp, #56]
    8630:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    8634:	add	x0, x0, #0x0
    8638:	ldr	x0, [x0]
    863c:	ldr	x1, [x0]
    8640:	ldr	x0, [sp, #56]
    8644:	blr	x1
    8648:	str	x0, [sp, #24]
    864c:	ldr	x0, [sp, #24]
    8650:	bl	0 <grub_strdup>
    8654:	mov	x1, x0
    8658:	ldr	x0, [sp, #80]
    865c:	str	x1, [x0, #88]
    8660:	ldr	x0, [sp, #80]
    8664:	ldr	w0, [x0, #108]
    8668:	mov	w1, w0
    866c:	ldr	x0, [sp, #24]
    8670:	bl	0 <grub_xasprintf>
    8674:	mov	x1, x0
    8678:	ldr	x0, [sp, #80]
    867c:	str	x1, [x0, #80]
    8680:	b	8860 <label_set_property+0x378>
    8684:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    8688:	add	x0, x0, #0x0
    868c:	ldr	x1, [x0]
    8690:	ldr	x0, [sp, #32]
    8694:	bl	0 <grub_strcmp>
    8698:	cmp	w0, #0x0
    869c:	b.ne	86b8 <label_set_property+0x1d0>  // b.any
    86a0:	ldr	x0, [sp, #24]
    86a4:	bl	0 <grub_font_get>
    86a8:	mov	x1, x0
    86ac:	ldr	x0, [sp, #80]
    86b0:	str	x1, [x0, #96]
    86b4:	b	8860 <label_set_property+0x378>
    86b8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    86bc:	add	x0, x0, #0x0
    86c0:	ldr	x1, [x0]
    86c4:	ldr	x0, [sp, #32]
    86c8:	bl	0 <grub_strcmp>
    86cc:	cmp	w0, #0x0
    86d0:	b.ne	86ec <label_set_property+0x204>  // b.any
    86d4:	ldr	x0, [sp, #80]
    86d8:	add	x0, x0, #0x68
    86dc:	mov	x1, x0
    86e0:	ldr	x0, [sp, #24]
    86e4:	bl	0 <grub_video_parse_color>
    86e8:	b	8860 <label_set_property+0x378>
    86ec:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    86f0:	add	x0, x0, #0x0
    86f4:	ldr	x1, [x0]
    86f8:	ldr	x0, [sp, #32]
    86fc:	bl	0 <grub_strcmp>
    8700:	cmp	w0, #0x0
    8704:	b.ne	8770 <label_set_property+0x288>  // b.any
    8708:	str	wzr, [sp, #92]
    870c:	b	8750 <label_set_property+0x268>
    8710:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    8714:	add	x0, x0, #0x0
    8718:	ldr	x0, [x0]
    871c:	ldrsw	x1, [sp, #92]
    8720:	ldr	x0, [x0, x1, lsl #3]
    8724:	ldr	x1, [sp, #24]
    8728:	bl	0 <grub_strcmp>
    872c:	cmp	w0, #0x0
    8730:	b.ne	8744 <label_set_property+0x25c>  // b.any
    8734:	ldr	w1, [sp, #92]
    8738:	ldr	x0, [sp, #80]
    873c:	str	w1, [x0, #112]
    8740:	b	8860 <label_set_property+0x378>
    8744:	ldr	w0, [sp, #92]
    8748:	add	w0, w0, #0x1
    874c:	str	w0, [sp, #92]
    8750:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    8754:	add	x0, x0, #0x0
    8758:	ldr	x0, [x0]
    875c:	ldrsw	x1, [sp, #92]
    8760:	ldr	x0, [x0, x1, lsl #3]
    8764:	cmp	x0, #0x0
    8768:	b.ne	8710 <label_set_property+0x228>  // b.any
    876c:	b	8860 <label_set_property+0x378>
    8770:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    8774:	add	x0, x0, #0x0
    8778:	ldr	x1, [x0]
    877c:	ldr	x0, [sp, #32]
    8780:	bl	0 <grub_strcmp>
    8784:	cmp	w0, #0x0
    8788:	b.ne	87bc <label_set_property+0x2d4>  // b.any
    878c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    8790:	add	x0, x0, #0x0
    8794:	ldr	x1, [x0]
    8798:	ldr	x0, [sp, #24]
    879c:	bl	0 <grub_strcmp>
    87a0:	cmp	w0, #0x0
    87a4:	cset	w0, ne  // ne = any
    87a8:	and	w0, w0, #0xff
    87ac:	mov	w1, w0
    87b0:	ldr	x0, [sp, #80]
    87b4:	str	w1, [x0, #72]
    87b8:	b	8860 <label_set_property+0x378>
    87bc:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    87c0:	add	x0, x0, #0x0
    87c4:	ldr	x1, [x0]
    87c8:	ldr	x0, [sp, #32]
    87cc:	bl	0 <grub_strcmp>
    87d0:	cmp	w0, #0x0
    87d4:	b.ne	8860 <label_set_property+0x378>  // b.any
    87d8:	ldr	x0, [sp, #80]
    87dc:	bl	7e48 <grub_gfxmenu_timeout_unregister>
    87e0:	ldr	x0, [sp, #80]
    87e4:	ldr	x0, [x0, #64]
    87e8:	bl	0 <grub_free>
    87ec:	ldr	x0, [sp, #24]
    87f0:	cmp	x0, #0x0
    87f4:	b.eq	8810 <label_set_property+0x328>  // b.none
    87f8:	ldr	x0, [sp, #24]
    87fc:	bl	0 <grub_strdup>
    8800:	mov	x1, x0
    8804:	ldr	x0, [sp, #80]
    8808:	str	x1, [x0, #64]
    880c:	b	8818 <label_set_property+0x330>
    8810:	ldr	x0, [sp, #80]
    8814:	str	xzr, [x0, #64]
    8818:	ldr	x0, [sp, #80]
    881c:	ldr	x0, [x0, #64]
    8820:	cmp	x0, #0x0
    8824:	b.eq	8860 <label_set_property+0x378>  // b.none
    8828:	ldr	x0, [sp, #80]
    882c:	ldr	x2, [x0, #64]
    8830:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    8834:	add	x0, x0, #0x0
    8838:	ldr	x1, [x0]
    883c:	mov	x0, x2
    8840:	bl	0 <grub_strcmp>
    8844:	cmp	w0, #0x0
    8848:	b.ne	8860 <label_set_property+0x378>  // b.any
    884c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    8850:	add	x0, x0, #0x0
    8854:	ldr	x1, [x0]
    8858:	ldr	x0, [sp, #80]
    885c:	bl	7da8 <grub_gfxmenu_timeout_register>
    8860:	mov	w0, #0x0                   	// #0
    8864:	ldp	x29, x30, [sp], #96
    8868:	ret
    886c:	nop
	...

0000000000008900 <grub_gui_label_new>:
    8900:	stp	x29, x30, [sp, #-32]!
    8904:	mov	x29, sp
    8908:	mov	x0, #0x78                  	// #120
    890c:	bl	0 <grub_zalloc>
    8910:	str	x0, [sp, #24]
    8914:	ldr	x0, [sp, #24]
    8918:	cmp	x0, #0x0
    891c:	b.ne	8928 <grub_gui_label_new+0x28>  // b.any
    8920:	mov	x0, #0x0                   	// #0
    8924:	b	89b0 <grub_gui_label_new+0xb0>
    8928:	ldr	x0, [sp, #24]
    892c:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    8930:	add	x1, x1, #0x0
    8934:	ldr	x1, [x1]
    8938:	str	x1, [x0]
    893c:	ldr	x0, [sp, #24]
    8940:	mov	w1, #0x1                   	// #1
    8944:	str	w1, [x0, #72]
    8948:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    894c:	add	x0, x0, #0x0
    8950:	ldr	x0, [x0]
    8954:	bl	0 <grub_strdup>
    8958:	mov	x1, x0
    895c:	ldr	x0, [sp, #24]
    8960:	str	x1, [x0, #80]
    8964:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    8968:	add	x0, x0, #0x0
    896c:	ldr	x0, [x0]
    8970:	bl	0 <grub_font_get>
    8974:	mov	x1, x0
    8978:	ldr	x0, [sp, #24]
    897c:	str	x1, [x0, #96]
    8980:	ldr	x0, [sp, #24]
    8984:	strb	wzr, [x0, #104]
    8988:	ldr	x0, [sp, #24]
    898c:	strb	wzr, [x0, #105]
    8990:	ldr	x0, [sp, #24]
    8994:	strb	wzr, [x0, #106]
    8998:	ldr	x0, [sp, #24]
    899c:	mov	w1, #0xffffffff            	// #-1
    89a0:	strb	w1, [x0, #107]
    89a4:	ldr	x0, [sp, #24]
    89a8:	str	wzr, [x0, #112]
    89ac:	ldr	x0, [sp, #24]
    89b0:	ldp	x29, x30, [sp], #32
    89b4:	ret
	...

00000000000089d0 <grub_strtol>:
    89d0:	stp	x29, x30, [sp, #-64]!
    89d4:	mov	x29, sp
    89d8:	str	x0, [sp, #40]
    89dc:	str	x1, [sp, #32]
    89e0:	str	w2, [sp, #28]
    89e4:	str	wzr, [sp, #60]
    89e8:	b	89f8 <grub_strtol+0x28>
    89ec:	ldr	x0, [sp, #40]
    89f0:	add	x0, x0, #0x1
    89f4:	str	x0, [sp, #40]
    89f8:	ldr	x0, [sp, #40]
    89fc:	ldrb	w0, [x0]
    8a00:	cmp	w0, #0x0
    8a04:	b.eq	8a1c <grub_strtol+0x4c>  // b.none
    8a08:	ldr	x0, [sp, #40]
    8a0c:	ldrb	w0, [x0]
    8a10:	bl	0 <grub_isspace>
    8a14:	cmp	w0, #0x0
    8a18:	b.ne	89ec <grub_strtol+0x1c>  // b.any
    8a1c:	ldr	x0, [sp, #40]
    8a20:	ldrb	w0, [x0]
    8a24:	cmp	w0, #0x2d
    8a28:	b.ne	8a40 <grub_strtol+0x70>  // b.any
    8a2c:	mov	w0, #0x1                   	// #1
    8a30:	str	w0, [sp, #60]
    8a34:	ldr	x0, [sp, #40]
    8a38:	add	x0, x0, #0x1
    8a3c:	str	x0, [sp, #40]
    8a40:	ldr	w2, [sp, #28]
    8a44:	ldr	x1, [sp, #32]
    8a48:	ldr	x0, [sp, #40]
    8a4c:	bl	0 <grub_strtoull>
    8a50:	str	x0, [sp, #48]
    8a54:	ldr	w0, [sp, #60]
    8a58:	cmp	w0, #0x0
    8a5c:	b.eq	8a98 <grub_strtol+0xc8>  // b.none
    8a60:	ldr	x1, [sp, #48]
    8a64:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    8a68:	cmp	x1, x0
    8a6c:	b.ls	8a8c <grub_strtol+0xbc>  // b.plast
    8a70:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    8a74:	add	x0, x0, #0x0
    8a78:	ldr	x1, [x0]
    8a7c:	mov	w0, #0xb                   	// #11
    8a80:	bl	0 <grub_error>
    8a84:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    8a88:	b	8ac4 <grub_strtol+0xf4>
    8a8c:	ldr	x0, [sp, #48]
    8a90:	neg	x0, x0
    8a94:	b	8ac4 <grub_strtol+0xf4>
    8a98:	ldr	x0, [sp, #48]
    8a9c:	cmp	x0, #0x0
    8aa0:	b.ge	8ac0 <grub_strtol+0xf0>  // b.tcont
    8aa4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    8aa8:	add	x0, x0, #0x0
    8aac:	ldr	x1, [x0]
    8ab0:	mov	w0, #0xb                   	// #11
    8ab4:	bl	0 <grub_error>
    8ab8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    8abc:	b	8ac4 <grub_strtol+0xf4>
    8ac0:	ldr	x0, [sp, #48]
    8ac4:	ldp	x29, x30, [sp], #64
    8ac8:	ret
    8acc:	nop
	...

0000000000008ad8 <grub_video_rgba_color_rgb>:
    8ad8:	sub	sp, sp, #0x20
    8adc:	strb	w0, [sp, #15]
    8ae0:	strb	w1, [sp, #14]
    8ae4:	strb	w2, [sp, #13]
    8ae8:	ldrb	w0, [sp, #15]
    8aec:	strb	w0, [sp, #24]
    8af0:	ldrb	w0, [sp, #14]
    8af4:	strb	w0, [sp, #25]
    8af8:	ldrb	w0, [sp, #13]
    8afc:	strb	w0, [sp, #26]
    8b00:	mov	w0, #0xffffffff            	// #-1
    8b04:	strb	w0, [sp, #27]
    8b08:	ldr	w0, [sp, #24]
    8b0c:	add	sp, sp, #0x20
    8b10:	ret

0000000000008b14 <grub_video_map_rgba_color>:
    8b14:	stp	x29, x30, [sp, #-32]!
    8b18:	mov	x29, sp
    8b1c:	str	w0, [sp, #24]
    8b20:	ldrb	w0, [sp, #24]
    8b24:	ldrb	w1, [sp, #25]
    8b28:	ldrb	w2, [sp, #26]
    8b2c:	ldrb	w3, [sp, #27]
    8b30:	bl	0 <grub_video_map_rgba>
    8b34:	ldp	x29, x30, [sp], #32
    8b38:	ret

0000000000008b3c <grub_font_get_ascent>:
    8b3c:	sub	sp, sp, #0x10
    8b40:	str	x0, [sp, #8]
    8b44:	ldr	x0, [sp, #8]
    8b48:	ldrsh	w0, [x0, #32]
    8b4c:	add	sp, sp, #0x10
    8b50:	ret

0000000000008b54 <grub_gui_save_viewport>:
    8b54:	stp	x29, x30, [sp, #-32]!
    8b58:	mov	x29, sp
    8b5c:	str	x0, [sp, #24]
    8b60:	ldr	x4, [sp, #24]
    8b64:	ldr	x0, [sp, #24]
    8b68:	add	x1, x0, #0x4
    8b6c:	ldr	x0, [sp, #24]
    8b70:	add	x2, x0, #0x8
    8b74:	ldr	x0, [sp, #24]
    8b78:	add	x0, x0, #0xc
    8b7c:	mov	x3, x0
    8b80:	mov	x0, x4
    8b84:	bl	0 <grub_video_get_viewport>
    8b88:	nop
    8b8c:	ldp	x29, x30, [sp], #32
    8b90:	ret

0000000000008b94 <grub_gui_restore_viewport>:
    8b94:	stp	x29, x30, [sp, #-32]!
    8b98:	mov	x29, sp
    8b9c:	str	x0, [sp, #24]
    8ba0:	ldr	x0, [sp, #24]
    8ba4:	ldr	w4, [x0]
    8ba8:	ldr	x0, [sp, #24]
    8bac:	ldr	w1, [x0, #4]
    8bb0:	ldr	x0, [sp, #24]
    8bb4:	ldr	w2, [x0, #8]
    8bb8:	ldr	x0, [sp, #24]
    8bbc:	ldr	w0, [x0, #12]
    8bc0:	mov	w3, w0
    8bc4:	mov	w0, w4
    8bc8:	bl	0 <grub_video_set_viewport>
    8bcc:	nop
    8bd0:	ldp	x29, x30, [sp], #32
    8bd4:	ret

0000000000008bd8 <grub_gui_set_viewport>:
    8bd8:	stp	x29, x30, [sp, #-32]!
    8bdc:	mov	x29, sp
    8be0:	str	x0, [sp, #24]
    8be4:	str	x1, [sp, #16]
    8be8:	ldr	x0, [sp, #16]
    8bec:	bl	8b54 <grub_gui_save_viewport>
    8bf0:	ldr	x0, [sp, #16]
    8bf4:	ldr	w1, [x0]
    8bf8:	ldr	x0, [sp, #24]
    8bfc:	ldr	w0, [x0]
    8c00:	add	w4, w1, w0
    8c04:	ldr	x0, [sp, #16]
    8c08:	ldr	w1, [x0, #4]
    8c0c:	ldr	x0, [sp, #24]
    8c10:	ldr	w0, [x0, #4]
    8c14:	add	w1, w1, w0
    8c18:	ldr	x0, [sp, #24]
    8c1c:	ldr	w2, [x0, #8]
    8c20:	ldr	x0, [sp, #24]
    8c24:	ldr	w0, [x0, #12]
    8c28:	mov	w3, w0
    8c2c:	mov	w0, w4
    8c30:	bl	0 <grub_video_set_viewport>
    8c34:	nop
    8c38:	ldp	x29, x30, [sp], #32
    8c3c:	ret

0000000000008c40 <grub_video_have_common_points>:
    8c40:	sub	sp, sp, #0x10
    8c44:	str	x0, [sp, #8]
    8c48:	str	x1, [sp]
    8c4c:	ldr	x0, [sp, #8]
    8c50:	ldr	w1, [x0]
    8c54:	ldr	x0, [sp]
    8c58:	ldr	w0, [x0]
    8c5c:	cmp	w1, w0
    8c60:	b.hi	8c88 <grub_video_have_common_points+0x48>  // b.pmore
    8c64:	ldr	x0, [sp]
    8c68:	ldr	w1, [x0]
    8c6c:	ldr	x0, [sp, #8]
    8c70:	ldr	w2, [x0]
    8c74:	ldr	x0, [sp, #8]
    8c78:	ldr	w0, [x0, #8]
    8c7c:	add	w0, w2, w0
    8c80:	cmp	w1, w0
    8c84:	b.ls	8ccc <grub_video_have_common_points+0x8c>  // b.plast
    8c88:	ldr	x0, [sp]
    8c8c:	ldr	w1, [x0]
    8c90:	ldr	x0, [sp, #8]
    8c94:	ldr	w0, [x0]
    8c98:	cmp	w1, w0
    8c9c:	b.hi	8cc4 <grub_video_have_common_points+0x84>  // b.pmore
    8ca0:	ldr	x0, [sp, #8]
    8ca4:	ldr	w1, [x0]
    8ca8:	ldr	x0, [sp]
    8cac:	ldr	w2, [x0]
    8cb0:	ldr	x0, [sp]
    8cb4:	ldr	w0, [x0, #8]
    8cb8:	add	w0, w2, w0
    8cbc:	cmp	w1, w0
    8cc0:	b.ls	8ccc <grub_video_have_common_points+0x8c>  // b.plast
    8cc4:	mov	w0, #0x0                   	// #0
    8cc8:	b	8d50 <grub_video_have_common_points+0x110>
    8ccc:	ldr	x0, [sp, #8]
    8cd0:	ldr	w1, [x0, #4]
    8cd4:	ldr	x0, [sp]
    8cd8:	ldr	w0, [x0, #4]
    8cdc:	cmp	w1, w0
    8ce0:	b.hi	8d08 <grub_video_have_common_points+0xc8>  // b.pmore
    8ce4:	ldr	x0, [sp]
    8ce8:	ldr	w1, [x0, #4]
    8cec:	ldr	x0, [sp, #8]
    8cf0:	ldr	w2, [x0, #4]
    8cf4:	ldr	x0, [sp, #8]
    8cf8:	ldr	w0, [x0, #12]
    8cfc:	add	w0, w2, w0
    8d00:	cmp	w1, w0
    8d04:	b.ls	8d4c <grub_video_have_common_points+0x10c>  // b.plast
    8d08:	ldr	x0, [sp]
    8d0c:	ldr	w1, [x0, #4]
    8d10:	ldr	x0, [sp, #8]
    8d14:	ldr	w0, [x0, #4]
    8d18:	cmp	w1, w0
    8d1c:	b.hi	8d44 <grub_video_have_common_points+0x104>  // b.pmore
    8d20:	ldr	x0, [sp, #8]
    8d24:	ldr	w1, [x0, #4]
    8d28:	ldr	x0, [sp]
    8d2c:	ldr	w2, [x0, #4]
    8d30:	ldr	x0, [sp]
    8d34:	ldr	w0, [x0, #12]
    8d38:	add	w0, w2, w0
    8d3c:	cmp	w1, w0
    8d40:	b.ls	8d4c <grub_video_have_common_points+0x10c>  // b.plast
    8d44:	mov	w0, #0x0                   	// #0
    8d48:	b	8d50 <grub_video_have_common_points+0x110>
    8d4c:	mov	w0, #0x1                   	// #1
    8d50:	add	sp, sp, #0x10
    8d54:	ret

0000000000008d58 <list_destroy>:
    8d58:	stp	x29, x30, [sp, #-48]!
    8d5c:	mov	x29, sp
    8d60:	str	x0, [sp, #24]
    8d64:	ldr	x0, [sp, #24]
    8d68:	str	x0, [sp, #40]
    8d6c:	ldr	x0, [sp, #40]
    8d70:	ldr	x0, [x0, #232]
    8d74:	bl	0 <grub_free>
    8d78:	ldr	x0, [sp, #40]
    8d7c:	ldr	x0, [x0, #240]
    8d80:	bl	0 <grub_free>
    8d84:	ldr	x0, [sp, #40]
    8d88:	ldr	x0, [x0, #248]
    8d8c:	bl	0 <grub_free>
    8d90:	ldr	x0, [sp, #40]
    8d94:	ldr	x0, [x0, #264]
    8d98:	bl	0 <grub_free>
    8d9c:	ldr	x0, [sp, #40]
    8da0:	ldr	x0, [x0, #272]
    8da4:	cmp	x0, #0x0
    8da8:	b.eq	8dc4 <list_destroy+0x6c>  // b.none
    8dac:	ldr	x0, [sp, #40]
    8db0:	ldr	x0, [x0, #272]
    8db4:	ldr	x1, [x0, #80]
    8db8:	ldr	x0, [sp, #40]
    8dbc:	ldr	x0, [x0, #272]
    8dc0:	blr	x1
    8dc4:	ldr	x0, [sp, #40]
    8dc8:	ldr	x0, [x0, #288]
    8dcc:	cmp	x0, #0x0
    8dd0:	b.eq	8dec <list_destroy+0x94>  // b.none
    8dd4:	ldr	x0, [sp, #40]
    8dd8:	ldr	x0, [x0, #288]
    8ddc:	ldr	x1, [x0, #80]
    8de0:	ldr	x0, [sp, #40]
    8de4:	ldr	x0, [x0, #288]
    8de8:	blr	x1
    8dec:	ldr	x0, [sp, #40]
    8df0:	ldr	x0, [x0, #280]
    8df4:	cmp	x0, #0x0
    8df8:	b.eq	8e14 <list_destroy+0xbc>  // b.none
    8dfc:	ldr	x0, [sp, #40]
    8e00:	ldr	x0, [x0, #280]
    8e04:	ldr	x1, [x0, #80]
    8e08:	ldr	x0, [sp, #40]
    8e0c:	ldr	x0, [x0, #280]
    8e10:	blr	x1
    8e14:	ldr	x0, [sp, #40]
    8e18:	ldr	x0, [x0, #296]
    8e1c:	cmp	x0, #0x0
    8e20:	b.eq	8e30 <list_destroy+0xd8>  // b.none
    8e24:	ldr	x0, [sp, #40]
    8e28:	ldr	x0, [x0, #296]
    8e2c:	bl	1f98 <grub_gfxmenu_icon_manager_destroy>
    8e30:	ldr	x0, [sp, #40]
    8e34:	ldr	x0, [x0, #184]
    8e38:	cmp	x0, #0x0
    8e3c:	b.eq	8e58 <list_destroy+0x100>  // b.none
    8e40:	ldr	x0, [sp, #40]
    8e44:	ldr	x0, [x0, #184]
    8e48:	ldr	x1, [x0, #80]
    8e4c:	ldr	x0, [sp, #40]
    8e50:	ldr	x0, [x0, #184]
    8e54:	blr	x1
    8e58:	ldr	x0, [sp, #40]
    8e5c:	ldr	x0, [x0, #176]
    8e60:	cmp	x0, #0x0
    8e64:	b.eq	8e80 <list_destroy+0x128>  // b.none
    8e68:	ldr	x0, [sp, #40]
    8e6c:	ldr	x0, [x0, #176]
    8e70:	ldr	x1, [x0, #80]
    8e74:	ldr	x0, [sp, #40]
    8e78:	ldr	x0, [x0, #176]
    8e7c:	blr	x1
    8e80:	ldr	x0, [sp, #40]
    8e84:	ldr	x0, [x0, #168]
    8e88:	bl	0 <grub_free>
    8e8c:	ldr	x0, [sp, #40]
    8e90:	ldr	x0, [x0, #160]
    8e94:	bl	0 <grub_free>
    8e98:	ldr	x0, [sp, #40]
    8e9c:	bl	0 <grub_free>
    8ea0:	nop
    8ea4:	ldp	x29, x30, [sp], #48
    8ea8:	ret

0000000000008eac <get_num_shown_items>:
    8eac:	stp	x29, x30, [sp, #-112]!
    8eb0:	mov	x29, sp
    8eb4:	str	x0, [sp, #24]
    8eb8:	ldr	x0, [sp, #24]
    8ebc:	ldr	w0, [x0, #96]
    8ec0:	str	w0, [sp, #108]
    8ec4:	ldr	x0, [sp, #24]
    8ec8:	ldr	w0, [x0, #104]
    8ecc:	str	w0, [sp, #104]
    8ed0:	ldr	x0, [sp, #24]
    8ed4:	ldr	w0, [x0, #92]
    8ed8:	str	w0, [sp, #100]
    8edc:	ldr	x0, [sp, #24]
    8ee0:	ldr	x0, [x0, #272]
    8ee4:	str	x0, [sp, #88]
    8ee8:	ldr	x0, [sp, #88]
    8eec:	ldr	x1, [x0, #56]
    8ef0:	ldr	x0, [sp, #88]
    8ef4:	blr	x1
    8ef8:	str	w0, [sp, #84]
    8efc:	ldr	x0, [sp, #88]
    8f00:	ldr	x1, [x0, #72]
    8f04:	ldr	x0, [sp, #88]
    8f08:	blr	x1
    8f0c:	str	w0, [sp, #80]
    8f10:	ldr	x0, [sp, #24]
    8f14:	ldr	x0, [x0, #288]
    8f18:	str	x0, [sp, #72]
    8f1c:	ldr	x0, [sp, #24]
    8f20:	ldr	x0, [x0, #280]
    8f24:	str	x0, [sp, #64]
    8f28:	ldr	x0, [sp, #72]
    8f2c:	ldr	x1, [x0, #56]
    8f30:	ldr	x0, [sp, #72]
    8f34:	blr	x1
    8f38:	str	w0, [sp, #60]
    8f3c:	ldr	x0, [sp, #72]
    8f40:	ldr	x1, [x0, #72]
    8f44:	ldr	x0, [sp, #72]
    8f48:	blr	x1
    8f4c:	str	w0, [sp, #56]
    8f50:	ldr	x0, [sp, #64]
    8f54:	ldr	x1, [x0, #56]
    8f58:	ldr	x0, [sp, #64]
    8f5c:	blr	x1
    8f60:	str	w0, [sp, #52]
    8f64:	ldr	x0, [sp, #64]
    8f68:	ldr	x1, [x0, #72]
    8f6c:	ldr	x0, [sp, #64]
    8f70:	blr	x1
    8f74:	str	w0, [sp, #48]
    8f78:	ldr	w0, [sp, #60]
    8f7c:	ldr	w2, [sp, #52]
    8f80:	ldr	w1, [sp, #52]
    8f84:	cmp	w2, w0
    8f88:	csel	w0, w1, w0, ge  // ge = tcont
    8f8c:	str	w0, [sp, #44]
    8f90:	ldr	w0, [sp, #56]
    8f94:	ldr	w2, [sp, #48]
    8f98:	ldr	w1, [sp, #48]
    8f9c:	cmp	w2, w0
    8fa0:	csel	w0, w1, w0, ge  // ge = tcont
    8fa4:	str	w0, [sp, #40]
    8fa8:	ldr	w1, [sp, #100]
    8fac:	ldr	w0, [sp, #104]
    8fb0:	add	w0, w1, w0
    8fb4:	cmp	w0, #0x0
    8fb8:	b.gt	8fc4 <get_num_shown_items+0x118>
    8fbc:	mov	w0, #0x1                   	// #1
    8fc0:	b	9010 <get_num_shown_items+0x164>
    8fc4:	ldr	x0, [sp, #24]
    8fc8:	ldr	w1, [x0, #68]
    8fcc:	ldr	w0, [sp, #104]
    8fd0:	add	w0, w1, w0
    8fd4:	ldr	w1, [sp, #108]
    8fd8:	lsl	w1, w1, #1
    8fdc:	sub	w1, w0, w1
    8fe0:	ldr	w0, [sp, #44]
    8fe4:	sub	w1, w1, w0
    8fe8:	ldr	w0, [sp, #40]
    8fec:	sub	w1, w1, w0
    8ff0:	ldr	w0, [sp, #84]
    8ff4:	sub	w1, w1, w0
    8ff8:	ldr	w0, [sp, #80]
    8ffc:	sub	w0, w1, w0
    9000:	ldr	w2, [sp, #100]
    9004:	ldr	w1, [sp, #104]
    9008:	add	w1, w2, w1
    900c:	udiv	w0, w0, w1
    9010:	ldp	x29, x30, [sp], #112
    9014:	ret

0000000000009018 <check_boxes>:
    9018:	stp	x29, x30, [sp, #-32]!
    901c:	mov	x29, sp
    9020:	str	x0, [sp, #24]
    9024:	ldr	x0, [sp, #24]
    9028:	ldr	w0, [x0, #224]
    902c:	cmp	w0, #0x0
    9030:	b.eq	90a8 <check_boxes+0x90>  // b.none
    9034:	ldr	x0, [sp, #24]
    9038:	add	x3, x0, #0x110
    903c:	ldr	x0, [sp, #24]
    9040:	ldr	x1, [x0, #240]
    9044:	ldr	x0, [sp, #24]
    9048:	ldr	x0, [x0, #232]
    904c:	mov	x2, x0
    9050:	mov	x0, x3
    9054:	bl	2820 <grub_gui_recreate_box>
    9058:	ldr	x0, [sp, #24]
    905c:	add	x3, x0, #0x120
    9060:	ldr	x0, [sp, #24]
    9064:	ldr	x1, [x0, #248]
    9068:	ldr	x0, [sp, #24]
    906c:	ldr	x0, [x0, #232]
    9070:	mov	x2, x0
    9074:	mov	x0, x3
    9078:	bl	2820 <grub_gui_recreate_box>
    907c:	ldr	x0, [sp, #24]
    9080:	add	x3, x0, #0x118
    9084:	ldr	x0, [sp, #24]
    9088:	ldr	x1, [x0, #264]
    908c:	ldr	x0, [sp, #24]
    9090:	ldr	x0, [x0, #232]
    9094:	mov	x2, x0
    9098:	mov	x0, x3
    909c:	bl	2820 <grub_gui_recreate_box>
    90a0:	ldr	x0, [sp, #24]
    90a4:	str	wzr, [x0, #224]
    90a8:	ldr	x0, [sp, #24]
    90ac:	ldr	x0, [x0, #272]
    90b0:	cmp	x0, #0x0
    90b4:	b.eq	90e0 <check_boxes+0xc8>  // b.none
    90b8:	ldr	x0, [sp, #24]
    90bc:	ldr	x0, [x0, #280]
    90c0:	cmp	x0, #0x0
    90c4:	b.eq	90e0 <check_boxes+0xc8>  // b.none
    90c8:	ldr	x0, [sp, #24]
    90cc:	ldr	x0, [x0, #288]
    90d0:	cmp	x0, #0x0
    90d4:	b.eq	90e0 <check_boxes+0xc8>  // b.none
    90d8:	mov	w0, #0x1                   	// #1
    90dc:	b	90e4 <check_boxes+0xcc>
    90e0:	mov	w0, #0x0                   	// #0
    90e4:	ldp	x29, x30, [sp], #32
    90e8:	ret

00000000000090ec <check_scrollbar>:
    90ec:	stp	x29, x30, [sp, #-80]!
    90f0:	mov	x29, sp
    90f4:	str	x19, [sp, #16]
    90f8:	str	x0, [sp, #40]
    90fc:	ldr	x0, [sp, #40]
    9100:	ldr	w0, [x0, #152]
    9104:	cmp	w0, #0x0
    9108:	b.eq	915c <check_scrollbar+0x70>  // b.none
    910c:	ldr	x0, [sp, #40]
    9110:	add	x3, x0, #0xb0
    9114:	ldr	x0, [sp, #40]
    9118:	ldr	x1, [x0, #160]
    911c:	ldr	x0, [sp, #40]
    9120:	ldr	x0, [x0, #232]
    9124:	mov	x2, x0
    9128:	mov	x0, x3
    912c:	bl	2820 <grub_gui_recreate_box>
    9130:	ldr	x0, [sp, #40]
    9134:	add	x3, x0, #0xb8
    9138:	ldr	x0, [sp, #40]
    913c:	ldr	x1, [x0, #168]
    9140:	ldr	x0, [sp, #40]
    9144:	ldr	x0, [x0, #232]
    9148:	mov	x2, x0
    914c:	mov	x0, x3
    9150:	bl	2820 <grub_gui_recreate_box>
    9154:	ldr	x0, [sp, #40]
    9158:	str	wzr, [x0, #152]
    915c:	ldr	x0, [sp, #40]
    9160:	ldr	x0, [x0, #176]
    9164:	cmp	x0, #0x0
    9168:	b.eq	917c <check_scrollbar+0x90>  // b.none
    916c:	ldr	x0, [sp, #40]
    9170:	ldr	x0, [x0, #184]
    9174:	cmp	x0, #0x0
    9178:	b.ne	9184 <check_scrollbar+0x98>  // b.any
    917c:	mov	w0, #0x0                   	// #0
    9180:	b	92f8 <check_scrollbar+0x20c>
    9184:	ldr	x0, [sp, #40]
    9188:	ldr	x0, [x0, #176]
    918c:	str	x0, [sp, #64]
    9190:	ldr	x0, [sp, #40]
    9194:	ldr	x0, [x0, #184]
    9198:	str	x0, [sp, #56]
    919c:	ldr	x0, [sp, #40]
    91a0:	ldr	x0, [x0, #272]
    91a4:	str	x0, [sp, #48]
    91a8:	ldr	x0, [sp, #64]
    91ac:	ldr	x1, [x0, #48]
    91b0:	ldr	x0, [sp, #64]
    91b4:	blr	x1
    91b8:	mov	w19, w0
    91bc:	ldr	x0, [sp, #64]
    91c0:	ldr	x1, [x0, #64]
    91c4:	ldr	x0, [sp, #64]
    91c8:	blr	x1
    91cc:	add	w0, w19, w0
    91d0:	str	w0, [sp, #76]
    91d4:	ldr	x0, [sp, #64]
    91d8:	ldr	x1, [x0, #56]
    91dc:	ldr	x0, [sp, #64]
    91e0:	blr	x1
    91e4:	mov	w19, w0
    91e8:	ldr	x0, [sp, #64]
    91ec:	ldr	x1, [x0, #72]
    91f0:	ldr	x0, [sp, #64]
    91f4:	blr	x1
    91f8:	add	w1, w19, w0
    91fc:	ldr	x0, [sp, #40]
    9200:	ldr	w0, [x0, #212]
    9204:	add	w1, w1, w0
    9208:	ldr	x0, [sp, #40]
    920c:	ldr	w0, [x0, #216]
    9210:	add	w19, w1, w0
    9214:	ldr	x0, [sp, #48]
    9218:	ldr	x1, [x0, #56]
    921c:	ldr	x0, [sp, #48]
    9220:	blr	x1
    9224:	add	w19, w19, w0
    9228:	ldr	x0, [sp, #48]
    922c:	ldr	x1, [x0, #72]
    9230:	ldr	x0, [sp, #48]
    9234:	blr	x1
    9238:	add	w0, w19, w0
    923c:	str	w0, [sp, #72]
    9240:	ldr	x0, [sp, #40]
    9244:	ldr	w0, [x0, #192]
    9248:	cmp	w0, #0x0
    924c:	b.ne	92b8 <check_scrollbar+0x1cc>  // b.any
    9250:	ldr	x0, [sp, #56]
    9254:	ldr	x1, [x0, #48]
    9258:	ldr	x0, [sp, #56]
    925c:	blr	x1
    9260:	mov	w19, w0
    9264:	ldr	x0, [sp, #56]
    9268:	ldr	x1, [x0, #64]
    926c:	ldr	x0, [sp, #56]
    9270:	blr	x1
    9274:	add	w0, w19, w0
    9278:	ldr	w1, [sp, #76]
    927c:	add	w0, w1, w0
    9280:	str	w0, [sp, #76]
    9284:	ldr	x0, [sp, #56]
    9288:	ldr	x1, [x0, #56]
    928c:	ldr	x0, [sp, #56]
    9290:	blr	x1
    9294:	mov	w19, w0
    9298:	ldr	x0, [sp, #56]
    929c:	ldr	x1, [x0, #72]
    92a0:	ldr	x0, [sp, #56]
    92a4:	blr	x1
    92a8:	add	w0, w19, w0
    92ac:	ldr	w1, [sp, #72]
    92b0:	add	w0, w1, w0
    92b4:	str	w0, [sp, #72]
    92b8:	ldr	x0, [sp, #40]
    92bc:	ldr	w0, [x0, #196]
    92c0:	ldr	w1, [sp, #76]
    92c4:	cmp	w1, w0
    92c8:	b.gt	92ec <check_scrollbar+0x200>
    92cc:	ldr	x0, [sp, #40]
    92d0:	ldr	w0, [x0, #68]
    92d4:	mov	w1, w0
    92d8:	ldr	w0, [sp, #72]
    92dc:	cmp	w0, w1
    92e0:	b.gt	92ec <check_scrollbar+0x200>
    92e4:	mov	w0, #0x1                   	// #1
    92e8:	b	92f8 <check_scrollbar+0x20c>
    92ec:	ldr	x0, [sp, #40]
    92f0:	str	wzr, [x0, #148]
    92f4:	mov	w0, #0x0                   	// #0
    92f8:	ldr	x19, [sp, #16]
    92fc:	ldp	x29, x30, [sp], #80
    9300:	ret

0000000000009304 <list_get_id>:
    9304:	sub	sp, sp, #0x20
    9308:	str	x0, [sp, #8]
    930c:	ldr	x0, [sp, #8]
    9310:	str	x0, [sp, #24]
    9314:	ldr	x0, [sp, #24]
    9318:	ldr	x0, [x0, #72]
    931c:	add	sp, sp, #0x20
    9320:	ret

0000000000009324 <list_is_instance>:
    9324:	stp	x29, x30, [sp, #-32]!
    9328:	mov	x29, sp
    932c:	str	x0, [sp, #24]
    9330:	str	x1, [sp, #16]
    9334:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    9338:	add	x0, x0, #0x0
    933c:	ldr	x1, [x0]
    9340:	ldr	x0, [sp, #16]
    9344:	bl	0 <grub_strcmp>
    9348:	cmp	w0, #0x0
    934c:	b.eq	936c <list_is_instance+0x48>  // b.none
    9350:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    9354:	add	x0, x0, #0x0
    9358:	ldr	x1, [x0]
    935c:	ldr	x0, [sp, #16]
    9360:	bl	0 <grub_strcmp>
    9364:	cmp	w0, #0x0
    9368:	b.ne	9374 <list_is_instance+0x50>  // b.any
    936c:	mov	w0, #0x1                   	// #1
    9370:	b	9378 <list_is_instance+0x54>
    9374:	mov	w0, #0x0                   	// #0
    9378:	ldp	x29, x30, [sp], #32
    937c:	ret
	...

0000000000009390 <get_item_icon>:
    9390:	stp	x29, x30, [sp, #-48]!
    9394:	mov	x29, sp
    9398:	str	x0, [sp, #24]
    939c:	str	w1, [sp, #20]
    93a0:	ldr	x0, [sp, #24]
    93a4:	ldr	x0, [x0, #304]
    93a8:	ldr	x0, [x0, #176]
    93ac:	ldr	w1, [sp, #20]
    93b0:	bl	0 <grub_menu_get_entry>
    93b4:	str	x0, [sp, #40]
    93b8:	ldr	x0, [sp, #40]
    93bc:	cmp	x0, #0x0
    93c0:	b.ne	93cc <get_item_icon+0x3c>  // b.any
    93c4:	mov	x0, #0x0                   	// #0
    93c8:	b	93dc <get_item_icon+0x4c>
    93cc:	ldr	x0, [sp, #24]
    93d0:	ldr	x0, [x0, #296]
    93d4:	ldr	x1, [sp, #40]
    93d8:	bl	2468 <grub_gfxmenu_icon_manager_get_icon>
    93dc:	ldp	x29, x30, [sp], #48
    93e0:	ret

00000000000093e4 <make_selected_item_visible>:
    93e4:	stp	x29, x30, [sp, #-48]!
    93e8:	mov	x29, sp
    93ec:	str	x0, [sp, #24]
    93f0:	ldr	x0, [sp, #24]
    93f4:	ldr	x0, [x0, #304]
    93f8:	ldr	w0, [x0, #156]
    93fc:	str	w0, [sp, #44]
    9400:	ldr	w0, [sp, #44]
    9404:	cmp	w0, #0x0
    9408:	b.lt	9480 <make_selected_item_visible+0x9c>  // b.tstop
    940c:	ldr	x0, [sp, #24]
    9410:	bl	8eac <get_num_shown_items>
    9414:	str	w0, [sp, #40]
    9418:	ldr	x0, [sp, #24]
    941c:	ldr	w1, [x0, #220]
    9420:	ldr	w0, [sp, #40]
    9424:	sub	w0, w0, #0x1
    9428:	add	w0, w1, w0
    942c:	str	w0, [sp, #36]
    9430:	ldr	x0, [sp, #24]
    9434:	ldr	w0, [x0, #220]
    9438:	ldr	w1, [sp, #44]
    943c:	cmp	w1, w0
    9440:	b.ge	9454 <make_selected_item_visible+0x70>  // b.tcont
    9444:	ldr	x0, [sp, #24]
    9448:	ldr	w1, [sp, #44]
    944c:	str	w1, [x0, #220]
    9450:	b	9484 <make_selected_item_visible+0xa0>
    9454:	ldr	w1, [sp, #44]
    9458:	ldr	w0, [sp, #36]
    945c:	cmp	w1, w0
    9460:	b.le	9484 <make_selected_item_visible+0xa0>
    9464:	ldr	w0, [sp, #40]
    9468:	sub	w0, w0, #0x1
    946c:	ldr	w1, [sp, #44]
    9470:	sub	w1, w1, w0
    9474:	ldr	x0, [sp, #24]
    9478:	str	w1, [x0, #220]
    947c:	b	9484 <make_selected_item_visible+0xa0>
    9480:	nop
    9484:	ldp	x29, x30, [sp], #48
    9488:	ret

000000000000948c <draw_scrollbar>:
    948c:	stp	x29, x30, [sp, #-128]!
    9490:	mov	x29, sp
    9494:	str	x19, [sp, #16]
    9498:	str	x0, [sp, #56]
    949c:	str	w1, [sp, #52]
    94a0:	str	w2, [sp, #48]
    94a4:	str	w3, [sp, #44]
    94a8:	str	w4, [sp, #40]
    94ac:	str	w5, [sp, #36]
    94b0:	str	w6, [sp, #32]
    94b4:	ldr	x0, [sp, #56]
    94b8:	ldr	x0, [x0, #176]
    94bc:	str	x0, [sp, #96]
    94c0:	ldr	x0, [sp, #56]
    94c4:	ldr	x0, [x0, #184]
    94c8:	str	x0, [sp, #88]
    94cc:	ldr	x0, [sp, #96]
    94d0:	ldr	x1, [x0, #56]
    94d4:	ldr	x0, [sp, #96]
    94d8:	blr	x1
    94dc:	mov	w19, w0
    94e0:	ldr	x0, [sp, #96]
    94e4:	ldr	x1, [x0, #72]
    94e8:	ldr	x0, [sp, #96]
    94ec:	blr	x1
    94f0:	add	w0, w19, w0
    94f4:	str	w0, [sp, #84]
    94f8:	ldr	x0, [sp, #96]
    94fc:	ldr	x1, [x0, #48]
    9500:	ldr	x0, [sp, #96]
    9504:	blr	x1
    9508:	mov	w19, w0
    950c:	ldr	x0, [sp, #96]
    9510:	ldr	x1, [x0, #64]
    9514:	ldr	x0, [sp, #96]
    9518:	blr	x1
    951c:	add	w0, w19, w0
    9520:	str	w0, [sp, #80]
    9524:	ldr	x0, [sp, #88]
    9528:	ldr	x1, [x0, #56]
    952c:	ldr	x0, [sp, #88]
    9530:	blr	x1
    9534:	mov	w19, w0
    9538:	ldr	x0, [sp, #88]
    953c:	ldr	x1, [x0, #72]
    9540:	ldr	x0, [sp, #88]
    9544:	blr	x1
    9548:	add	w0, w19, w0
    954c:	str	w0, [sp, #76]
    9550:	ldr	x0, [sp, #88]
    9554:	ldr	x1, [x0, #48]
    9558:	ldr	x0, [sp, #88]
    955c:	blr	x1
    9560:	mov	w19, w0
    9564:	ldr	x0, [sp, #88]
    9568:	ldr	x1, [x0, #64]
    956c:	ldr	x0, [sp, #88]
    9570:	blr	x1
    9574:	add	w0, w19, w0
    9578:	str	w0, [sp, #72]
    957c:	ldr	x0, [sp, #96]
    9580:	ldr	x1, [x0, #56]
    9584:	ldr	x0, [sp, #96]
    9588:	blr	x1
    958c:	str	w0, [sp, #116]
    9590:	ldr	w1, [sp, #32]
    9594:	ldr	w0, [sp, #84]
    9598:	cmp	w1, w0
    959c:	b.gt	95a8 <draw_scrollbar+0x11c>
    95a0:	str	wzr, [sp, #112]
    95a4:	b	95b8 <draw_scrollbar+0x12c>
    95a8:	ldr	w1, [sp, #32]
    95ac:	ldr	w0, [sp, #84]
    95b0:	sub	w0, w1, w0
    95b4:	str	w0, [sp, #112]
    95b8:	ldr	x0, [sp, #96]
    95bc:	ldr	x3, [x0, #32]
    95c0:	ldr	w1, [sp, #36]
    95c4:	ldr	w0, [sp, #80]
    95c8:	sub	w0, w1, w0
    95cc:	ldr	w1, [sp, #112]
    95d0:	mov	w2, w1
    95d4:	mov	w1, w0
    95d8:	ldr	x0, [sp, #96]
    95dc:	blr	x3
    95e0:	ldr	x0, [sp, #56]
    95e4:	ldr	w0, [x0, #192]
    95e8:	cmp	w0, #0x0
    95ec:	b.eq	9620 <draw_scrollbar+0x194>  // b.none
    95f0:	ldr	w1, [sp, #112]
    95f4:	ldr	w0, [sp, #76]
    95f8:	add	w0, w1, w0
    95fc:	str	w0, [sp, #112]
    9600:	ldr	x0, [sp, #88]
    9604:	ldr	x1, [x0, #56]
    9608:	ldr	x0, [sp, #88]
    960c:	blr	x1
    9610:	mov	w1, w0
    9614:	ldr	w0, [sp, #116]
    9618:	sub	w0, w0, w1
    961c:	str	w0, [sp, #116]
    9620:	ldr	w1, [sp, #52]
    9624:	ldr	w0, [sp, #44]
    9628:	cmp	w1, w0
    962c:	b.le	9640 <draw_scrollbar+0x1b4>
    9630:	ldr	w1, [sp, #40]
    9634:	ldr	w0, [sp, #44]
    9638:	cmp	w1, w0
    963c:	b.gt	9648 <draw_scrollbar+0x1bc>
    9640:	str	wzr, [sp, #124]
    9644:	b	9674 <draw_scrollbar+0x1e8>
    9648:	ldr	w1, [sp, #52]
    964c:	ldr	w0, [sp, #44]
    9650:	sub	w0, w1, w0
    9654:	mov	w1, w0
    9658:	ldr	w0, [sp, #112]
    965c:	mul	w0, w1, w0
    9660:	ldr	w2, [sp, #40]
    9664:	ldr	w1, [sp, #44]
    9668:	sub	w1, w2, w1
    966c:	udiv	w0, w0, w1
    9670:	str	w0, [sp, #124]
    9674:	ldr	w1, [sp, #40]
    9678:	ldr	w0, [sp, #44]
    967c:	cmp	w1, w0
    9680:	b.gt	9690 <draw_scrollbar+0x204>
    9684:	mov	w0, #0x1                   	// #1
    9688:	str	w0, [sp, #120]
    968c:	b	96b4 <draw_scrollbar+0x228>
    9690:	ldr	w1, [sp, #48]
    9694:	ldr	w0, [sp, #112]
    9698:	mul	w0, w1, w0
    969c:	ldr	w2, [sp, #40]
    96a0:	ldr	w1, [sp, #44]
    96a4:	sub	w1, w2, w1
    96a8:	udiv	w0, w0, w1
    96ac:	add	w0, w0, #0x1
    96b0:	str	w0, [sp, #120]
    96b4:	ldr	w1, [sp, #120]
    96b8:	ldr	w0, [sp, #76]
    96bc:	cmp	w1, w0
    96c0:	b.cs	9734 <draw_scrollbar+0x2a8>  // b.hs, b.nlast
    96c4:	ldr	w0, [sp, #76]
    96c8:	str	w0, [sp, #120]
    96cc:	ldr	w1, [sp, #52]
    96d0:	ldr	w0, [sp, #44]
    96d4:	cmp	w1, w0
    96d8:	b.le	96fc <draw_scrollbar+0x270>
    96dc:	ldr	w1, [sp, #40]
    96e0:	ldr	w0, [sp, #48]
    96e4:	cmp	w1, w0
    96e8:	b.le	96fc <draw_scrollbar+0x270>
    96ec:	ldr	w1, [sp, #112]
    96f0:	ldr	w0, [sp, #76]
    96f4:	cmp	w1, w0
    96f8:	b.hi	9704 <draw_scrollbar+0x278>  // b.pmore
    96fc:	str	wzr, [sp, #124]
    9700:	b	9734 <draw_scrollbar+0x2a8>
    9704:	ldr	w1, [sp, #112]
    9708:	ldr	w0, [sp, #76]
    970c:	sub	w0, w1, w0
    9710:	ldr	w2, [sp, #52]
    9714:	ldr	w1, [sp, #44]
    9718:	sub	w1, w2, w1
    971c:	mul	w0, w0, w1
    9720:	ldr	w2, [sp, #40]
    9724:	ldr	w1, [sp, #48]
    9728:	sub	w1, w2, w1
    972c:	udiv	w0, w0, w1
    9730:	str	w0, [sp, #124]
    9734:	ldr	w0, [sp, #116]
    9738:	ldr	w1, [sp, #124]
    973c:	add	w0, w1, w0
    9740:	str	w0, [sp, #124]
    9744:	ldr	x0, [sp, #96]
    9748:	ldr	x1, [x0, #48]
    974c:	ldr	x0, [sp, #96]
    9750:	blr	x1
    9754:	str	w0, [sp, #108]
    9758:	ldr	w1, [sp, #36]
    975c:	ldr	w0, [sp, #80]
    9760:	sub	w0, w1, w0
    9764:	str	w0, [sp, #104]
    9768:	ldr	x0, [sp, #56]
    976c:	ldr	w0, [x0, #192]
    9770:	cmp	w0, #0x0
    9774:	b.ne	978c <draw_scrollbar+0x300>  // b.any
    9778:	ldr	w1, [sp, #104]
    977c:	ldr	w0, [sp, #72]
    9780:	sub	w0, w1, w0
    9784:	str	w0, [sp, #104]
    9788:	b	97ac <draw_scrollbar+0x320>
    978c:	ldr	x0, [sp, #88]
    9790:	ldr	x1, [x0, #48]
    9794:	ldr	x0, [sp, #88]
    9798:	blr	x1
    979c:	mov	w1, w0
    97a0:	ldr	w0, [sp, #108]
    97a4:	sub	w0, w0, w1
    97a8:	str	w0, [sp, #108]
    97ac:	ldr	x0, [sp, #88]
    97b0:	ldr	x3, [x0, #32]
    97b4:	ldr	w1, [sp, #120]
    97b8:	ldr	w0, [sp, #76]
    97bc:	sub	w0, w1, w0
    97c0:	mov	w2, w0
    97c4:	ldr	w1, [sp, #104]
    97c8:	ldr	x0, [sp, #88]
    97cc:	blr	x3
    97d0:	ldr	x0, [sp, #96]
    97d4:	ldr	x3, [x0, #24]
    97d8:	mov	w2, #0x0                   	// #0
    97dc:	mov	w1, #0x0                   	// #0
    97e0:	ldr	x0, [sp, #96]
    97e4:	blr	x3
    97e8:	ldr	x0, [sp, #88]
    97ec:	ldr	x3, [x0, #24]
    97f0:	ldr	w0, [sp, #124]
    97f4:	mov	w2, w0
    97f8:	ldr	w1, [sp, #108]
    97fc:	ldr	x0, [sp, #88]
    9800:	blr	x3
    9804:	nop
    9808:	ldr	x19, [sp, #16]
    980c:	ldp	x29, x30, [sp], #128
    9810:	ret

0000000000009814 <draw_menu>:
    9814:	stp	x29, x30, [sp, #-304]!
    9818:	mov	x29, sp
    981c:	str	x0, [sp, #24]
    9820:	str	w1, [sp, #20]
    9824:	ldr	x0, [sp, #24]
    9828:	ldr	x0, [x0, #272]
    982c:	cmp	x0, #0x0
    9830:	b.eq	9dd8 <draw_menu+0x5c4>  // b.none
    9834:	ldr	x0, [sp, #24]
    9838:	ldr	x0, [x0, #280]
    983c:	cmp	x0, #0x0
    9840:	b.eq	9dd8 <draw_menu+0x5c4>  // b.none
    9844:	ldr	x0, [sp, #24]
    9848:	ldr	x0, [x0, #288]
    984c:	cmp	x0, #0x0
    9850:	b.eq	9dd8 <draw_menu+0x5c4>  // b.none
    9854:	ldr	x0, [sp, #24]
    9858:	ldr	w0, [x0, #96]
    985c:	str	w0, [sp, #256]
    9860:	ldr	x0, [sp, #24]
    9864:	ldr	w0, [x0, #100]
    9868:	str	w0, [sp, #252]
    986c:	ldr	x0, [sp, #24]
    9870:	ldr	w0, [x0, #104]
    9874:	str	w0, [sp, #248]
    9878:	ldr	x0, [sp, #24]
    987c:	ldr	x0, [x0, #112]
    9880:	bl	8b3c <grub_font_get_ascent>
    9884:	str	w0, [sp, #244]
    9888:	ldr	x0, [sp, #24]
    988c:	ldr	x0, [x0, #112]
    9890:	bl	0 <grub_font_get_descent>
    9894:	str	w0, [sp, #240]
    9898:	ldr	x0, [sp, #24]
    989c:	ldr	x0, [x0, #128]
    98a0:	bl	8b3c <grub_font_get_ascent>
    98a4:	str	w0, [sp, #236]
    98a8:	ldr	x0, [sp, #24]
    98ac:	ldr	x0, [x0, #128]
    98b0:	bl	0 <grub_font_get_descent>
    98b4:	str	w0, [sp, #232]
    98b8:	ldr	x0, [sp, #24]
    98bc:	ldr	w0, [x0, #92]
    98c0:	str	w0, [sp, #228]
    98c4:	ldr	x0, [sp, #24]
    98c8:	bl	93e4 <make_selected_item_visible>
    98cc:	ldr	x0, [sp, #24]
    98d0:	ldr	x0, [x0, #288]
    98d4:	str	x0, [sp, #216]
    98d8:	ldr	x0, [sp, #24]
    98dc:	ldr	x0, [x0, #280]
    98e0:	str	x0, [sp, #208]
    98e4:	ldr	x0, [sp, #216]
    98e8:	ldr	x1, [x0, #48]
    98ec:	ldr	x0, [sp, #216]
    98f0:	blr	x1
    98f4:	str	w0, [sp, #204]
    98f8:	ldr	x0, [sp, #216]
    98fc:	ldr	x1, [x0, #64]
    9900:	ldr	x0, [sp, #216]
    9904:	blr	x1
    9908:	str	w0, [sp, #200]
    990c:	ldr	w1, [sp, #204]
    9910:	ldr	w0, [sp, #200]
    9914:	add	w0, w1, w0
    9918:	str	w0, [sp, #196]
    991c:	ldr	x0, [sp, #216]
    9920:	ldr	x1, [x0, #56]
    9924:	ldr	x0, [sp, #216]
    9928:	blr	x1
    992c:	str	w0, [sp, #192]
    9930:	ldr	x0, [sp, #208]
    9934:	ldr	x1, [x0, #48]
    9938:	ldr	x0, [sp, #208]
    993c:	blr	x1
    9940:	str	w0, [sp, #188]
    9944:	ldr	x0, [sp, #208]
    9948:	ldr	x1, [x0, #64]
    994c:	ldr	x0, [sp, #208]
    9950:	blr	x1
    9954:	str	w0, [sp, #184]
    9958:	ldr	w1, [sp, #188]
    995c:	ldr	w0, [sp, #184]
    9960:	add	w0, w1, w0
    9964:	str	w0, [sp, #180]
    9968:	ldr	x0, [sp, #208]
    996c:	ldr	x1, [x0, #56]
    9970:	ldr	x0, [sp, #208]
    9974:	blr	x1
    9978:	str	w0, [sp, #176]
    997c:	ldr	w0, [sp, #204]
    9980:	ldr	w2, [sp, #188]
    9984:	ldr	w1, [sp, #188]
    9988:	cmp	w2, w0
    998c:	csel	w0, w1, w0, ge  // ge = tcont
    9990:	str	w0, [sp, #172]
    9994:	ldr	w0, [sp, #192]
    9998:	ldr	w2, [sp, #176]
    999c:	ldr	w1, [sp, #176]
    99a0:	cmp	w2, w0
    99a4:	csel	w0, w1, w0, ge  // ge = tcont
    99a8:	str	w0, [sp, #168]
    99ac:	str	wzr, [sp, #300]
    99b0:	add	x0, sp, #0x48
    99b4:	add	x3, x0, #0xc
    99b8:	add	x0, sp, #0x48
    99bc:	add	x2, x0, #0x8
    99c0:	add	x0, sp, #0x48
    99c4:	add	x1, x0, #0x4
    99c8:	add	x0, sp, #0x48
    99cc:	bl	0 <grub_video_get_viewport>
    99d0:	ldr	w1, [sp, #72]
    99d4:	ldr	w0, [sp, #256]
    99d8:	add	w4, w1, w0
    99dc:	ldr	w1, [sp, #76]
    99e0:	ldr	w0, [sp, #256]
    99e4:	add	w5, w1, w0
    99e8:	ldr	w0, [sp, #80]
    99ec:	ldr	w1, [sp, #256]
    99f0:	lsl	w1, w1, #1
    99f4:	sub	w2, w0, w1
    99f8:	ldr	w0, [sp, #84]
    99fc:	ldr	w1, [sp, #256]
    9a00:	lsl	w1, w1, #1
    9a04:	sub	w0, w0, w1
    9a08:	mov	w3, w0
    9a0c:	mov	w1, w5
    9a10:	mov	w0, w4
    9a14:	bl	0 <grub_video_set_viewport>
    9a18:	ldr	w0, [sp, #80]
    9a1c:	ldr	w1, [sp, #256]
    9a20:	lsl	w1, w1, #1
    9a24:	sub	w0, w0, w1
    9a28:	str	w0, [sp, #164]
    9a2c:	ldr	x0, [sp, #216]
    9a30:	ldr	x3, [x0, #32]
    9a34:	ldr	w1, [sp, #164]
    9a38:	ldr	w0, [sp, #196]
    9a3c:	sub	w0, w1, w0
    9a40:	ldr	w2, [sp, #228]
    9a44:	mov	w1, w0
    9a48:	ldr	x0, [sp, #216]
    9a4c:	blr	x3
    9a50:	ldr	x0, [sp, #208]
    9a54:	ldr	x3, [x0, #32]
    9a58:	ldr	w1, [sp, #164]
    9a5c:	ldr	w0, [sp, #180]
    9a60:	sub	w0, w1, w0
    9a64:	ldr	w2, [sp, #228]
    9a68:	mov	w1, w0
    9a6c:	ldr	x0, [sp, #208]
    9a70:	blr	x3
    9a74:	ldr	x0, [sp, #24]
    9a78:	ldr	w0, [x0, #84]
    9a7c:	ldr	w1, [sp, #252]
    9a80:	add	w0, w1, w0
    9a84:	str	w0, [sp, #160]
    9a88:	ldr	w1, [sp, #244]
    9a8c:	ldr	w0, [sp, #240]
    9a90:	add	w0, w1, w0
    9a94:	ldr	w1, [sp, #228]
    9a98:	sub	w0, w1, w0
    9a9c:	lsr	w1, w0, #31
    9aa0:	add	w0, w1, w0
    9aa4:	asr	w0, w0, #1
    9aa8:	mov	w1, w0
    9aac:	ldr	w0, [sp, #244]
    9ab0:	add	w0, w0, w1
    9ab4:	str	w0, [sp, #156]
    9ab8:	ldr	w1, [sp, #236]
    9abc:	ldr	w0, [sp, #232]
    9ac0:	add	w0, w1, w0
    9ac4:	ldr	w1, [sp, #228]
    9ac8:	sub	w0, w1, w0
    9acc:	lsr	w1, w0, #31
    9ad0:	add	w0, w1, w0
    9ad4:	asr	w0, w0, #1
    9ad8:	mov	w1, w0
    9adc:	ldr	w0, [sp, #236]
    9ae0:	add	w0, w0, w1
    9ae4:	str	w0, [sp, #152]
    9ae8:	ldr	w1, [sp, #172]
    9aec:	ldr	w0, [sp, #160]
    9af0:	add	w0, w1, w0
    9af4:	str	w0, [sp, #40]
    9af8:	ldr	w1, [sp, #164]
    9afc:	ldr	w0, [sp, #40]
    9b00:	sub	w0, w1, w0
    9b04:	str	w0, [sp, #148]
    9b08:	ldr	w0, [sp, #228]
    9b0c:	str	w0, [sp, #52]
    9b10:	ldr	x0, [sp, #24]
    9b14:	ldr	w0, [x0, #136]
    9b18:	bl	8b14 <grub_video_map_rgba_color>
    9b1c:	str	w0, [sp, #144]
    9b20:	ldr	x0, [sp, #24]
    9b24:	ldr	w0, [x0, #144]
    9b28:	bl	8b14 <grub_video_map_rgba_color>
    9b2c:	str	w0, [sp, #140]
    9b30:	ldr	w1, [sp, #168]
    9b34:	ldr	w0, [sp, #192]
    9b38:	sub	w0, w1, w0
    9b3c:	str	w0, [sp, #136]
    9b40:	ldr	w1, [sp, #168]
    9b44:	ldr	w0, [sp, #176]
    9b48:	sub	w0, w1, w0
    9b4c:	str	w0, [sp, #132]
    9b50:	ldr	w1, [sp, #148]
    9b54:	ldr	w0, [sp, #200]
    9b58:	sub	w0, w1, w0
    9b5c:	str	w0, [sp, #128]
    9b60:	ldr	w1, [sp, #148]
    9b64:	ldr	w0, [sp, #184]
    9b68:	sub	w0, w1, w0
    9b6c:	str	w0, [sp, #124]
    9b70:	ldr	x0, [sp, #24]
    9b74:	ldr	w0, [x0, #88]
    9b78:	ldr	w1, [sp, #228]
    9b7c:	sub	w0, w1, w0
    9b80:	lsr	w1, w0, #31
    9b84:	add	w0, w1, w0
    9b88:	asr	w0, w0, #1
    9b8c:	str	w0, [sp, #120]
    9b90:	ldr	w1, [sp, #192]
    9b94:	ldr	w0, [sp, #120]
    9b98:	add	w0, w1, w0
    9b9c:	str	w0, [sp, #116]
    9ba0:	ldr	w1, [sp, #176]
    9ba4:	ldr	w0, [sp, #120]
    9ba8:	add	w0, w1, w0
    9bac:	str	w0, [sp, #112]
    9bb0:	str	wzr, [sp, #292]
    9bb4:	ldr	x0, [sp, #24]
    9bb8:	ldr	w0, [x0, #220]
    9bbc:	str	w0, [sp, #296]
    9bc0:	b	9d94 <draw_menu+0x580>
    9bc4:	ldr	x0, [sp, #24]
    9bc8:	ldr	x0, [x0, #304]
    9bcc:	ldr	w0, [x0, #156]
    9bd0:	ldr	w1, [sp, #296]
    9bd4:	cmp	w1, w0
    9bd8:	cset	w0, eq  // eq = none
    9bdc:	and	w0, w0, #0xff
    9be0:	str	w0, [sp, #108]
    9be4:	ldr	w0, [sp, #108]
    9be8:	cmp	w0, #0x0
    9bec:	b.eq	9c4c <draw_menu+0x438>  // b.none
    9bf0:	ldr	x0, [sp, #208]
    9bf4:	ldr	x3, [x0, #24]
    9bf8:	ldr	w1, [sp, #300]
    9bfc:	ldr	w0, [sp, #132]
    9c00:	add	w0, w1, w0
    9c04:	mov	w2, w0
    9c08:	mov	w1, #0x0                   	// #0
    9c0c:	ldr	x0, [sp, #208]
    9c10:	blr	x3
    9c14:	ldr	x0, [sp, #24]
    9c18:	ldr	x0, [x0, #128]
    9c1c:	str	x0, [sp, #280]
    9c20:	ldr	w0, [sp, #140]
    9c24:	str	w0, [sp, #276]
    9c28:	ldr	w0, [sp, #152]
    9c2c:	str	w0, [sp, #272]
    9c30:	ldr	w0, [sp, #176]
    9c34:	str	w0, [sp, #268]
    9c38:	ldr	w0, [sp, #112]
    9c3c:	str	w0, [sp, #264]
    9c40:	ldr	w0, [sp, #124]
    9c44:	str	w0, [sp, #260]
    9c48:	b	9ca4 <draw_menu+0x490>
    9c4c:	ldr	x0, [sp, #216]
    9c50:	ldr	x3, [x0, #24]
    9c54:	ldr	w1, [sp, #300]
    9c58:	ldr	w0, [sp, #136]
    9c5c:	add	w0, w1, w0
    9c60:	mov	w2, w0
    9c64:	mov	w1, #0x0                   	// #0
    9c68:	ldr	x0, [sp, #216]
    9c6c:	blr	x3
    9c70:	ldr	x0, [sp, #24]
    9c74:	ldr	x0, [x0, #112]
    9c78:	str	x0, [sp, #280]
    9c7c:	ldr	w0, [sp, #144]
    9c80:	str	w0, [sp, #276]
    9c84:	ldr	w0, [sp, #156]
    9c88:	str	w0, [sp, #272]
    9c8c:	ldr	w0, [sp, #192]
    9c90:	str	w0, [sp, #268]
    9c94:	ldr	w0, [sp, #116]
    9c98:	str	w0, [sp, #264]
    9c9c:	ldr	w0, [sp, #128]
    9ca0:	str	w0, [sp, #260]
    9ca4:	ldr	w1, [sp, #296]
    9ca8:	ldr	x0, [sp, #24]
    9cac:	bl	9390 <get_item_icon>
    9cb0:	str	x0, [sp, #96]
    9cb4:	ldr	x0, [sp, #96]
    9cb8:	cmp	x0, #0x0
    9cbc:	b.eq	9d04 <draw_menu+0x4f0>  // b.none
    9cc0:	ldr	w1, [sp, #300]
    9cc4:	ldr	w0, [sp, #264]
    9cc8:	add	w1, w1, w0
    9ccc:	ldr	x0, [sp, #24]
    9cd0:	ldr	w0, [x0, #84]
    9cd4:	mov	w2, w0
    9cd8:	ldr	x0, [sp, #24]
    9cdc:	ldr	w0, [x0, #88]
    9ce0:	mov	w7, w0
    9ce4:	mov	w6, w2
    9ce8:	mov	w5, #0x0                   	// #0
    9cec:	mov	w4, #0x0                   	// #0
    9cf0:	mov	w3, w1
    9cf4:	ldr	w2, [sp, #172]
    9cf8:	mov	w1, #0x1                   	// #1
    9cfc:	ldr	x0, [sp, #96]
    9d00:	bl	0 <grub_video_blit_bitmap>
    9d04:	ldr	x0, [sp, #24]
    9d08:	ldr	x0, [x0, #304]
    9d0c:	ldr	x0, [x0, #176]
    9d10:	ldr	w1, [sp, #296]
    9d14:	bl	0 <grub_menu_get_entry>
    9d18:	ldr	x0, [x0]
    9d1c:	str	x0, [sp, #88]
    9d20:	ldr	w1, [sp, #300]
    9d24:	ldr	w0, [sp, #268]
    9d28:	add	w0, w1, w0
    9d2c:	str	w0, [sp, #44]
    9d30:	ldr	w0, [sp, #260]
    9d34:	str	w0, [sp, #48]
    9d38:	add	x1, sp, #0x38
    9d3c:	add	x0, sp, #0x28
    9d40:	bl	8bd8 <grub_gui_set_viewport>
    9d44:	ldr	w4, [sp, #272]
    9d48:	mov	w3, #0x0                   	// #0
    9d4c:	ldr	w2, [sp, #276]
    9d50:	ldr	x1, [sp, #280]
    9d54:	ldr	x0, [sp, #88]
    9d58:	bl	1c14 <grub_font_draw_string>
    9d5c:	add	x0, sp, #0x38
    9d60:	bl	8b94 <grub_gui_restore_viewport>
    9d64:	ldr	w1, [sp, #228]
    9d68:	ldr	w0, [sp, #248]
    9d6c:	add	w0, w1, w0
    9d70:	ldr	w1, [sp, #300]
    9d74:	add	w0, w1, w0
    9d78:	str	w0, [sp, #300]
    9d7c:	ldr	w0, [sp, #292]
    9d80:	add	w0, w0, #0x1
    9d84:	str	w0, [sp, #292]
    9d88:	ldr	w0, [sp, #296]
    9d8c:	add	w0, w0, #0x1
    9d90:	str	w0, [sp, #296]
    9d94:	ldr	w1, [sp, #292]
    9d98:	ldr	w0, [sp, #20]
    9d9c:	cmp	w1, w0
    9da0:	b.ge	9dc0 <draw_menu+0x5ac>  // b.tcont
    9da4:	ldr	x0, [sp, #24]
    9da8:	ldr	x0, [x0, #304]
    9dac:	ldr	x0, [x0, #176]
    9db0:	ldr	w0, [x0]
    9db4:	ldr	w1, [sp, #296]
    9db8:	cmp	w1, w0
    9dbc:	b.lt	9bc4 <draw_menu+0x3b0>  // b.tstop
    9dc0:	ldr	w0, [sp, #72]
    9dc4:	ldr	w1, [sp, #76]
    9dc8:	ldr	w2, [sp, #80]
    9dcc:	ldr	w3, [sp, #84]
    9dd0:	bl	0 <grub_video_set_viewport>
    9dd4:	b	9ddc <draw_menu+0x5c8>
    9dd8:	nop
    9ddc:	ldp	x29, x30, [sp], #304
    9de0:	ret

0000000000009de4 <list_paint>:
    9de4:	stp	x29, x30, [sp, #-128]!
    9de8:	mov	x29, sp
    9dec:	str	x0, [sp, #24]
    9df0:	str	x1, [sp, #16]
    9df4:	ldr	x0, [sp, #24]
    9df8:	str	x0, [sp, #120]
    9dfc:	ldr	x0, [sp, #120]
    9e00:	ldr	w0, [x0, #80]
    9e04:	cmp	w0, #0x0
    9e08:	b.eq	a1d8 <list_paint+0x3f4>  // b.none
    9e0c:	ldr	x0, [sp, #120]
    9e10:	add	x0, x0, #0x38
    9e14:	mov	x1, x0
    9e18:	ldr	x0, [sp, #16]
    9e1c:	bl	8c40 <grub_video_have_common_points>
    9e20:	cmp	w0, #0x0
    9e24:	b.eq	a1e0 <list_paint+0x3fc>  // b.none
    9e28:	ldr	x0, [sp, #120]
    9e2c:	bl	9018 <check_boxes>
    9e30:	ldr	x0, [sp, #120]
    9e34:	ldr	x0, [x0, #272]
    9e38:	cmp	x0, #0x0
    9e3c:	b.eq	a1e8 <list_paint+0x404>  // b.none
    9e40:	ldr	x0, [sp, #120]
    9e44:	ldr	x0, [x0, #280]
    9e48:	cmp	x0, #0x0
    9e4c:	b.eq	a1e8 <list_paint+0x404>  // b.none
    9e50:	ldr	x0, [sp, #120]
    9e54:	ldr	x0, [x0, #288]
    9e58:	cmp	x0, #0x0
    9e5c:	b.eq	a1e8 <list_paint+0x404>  // b.none
    9e60:	ldr	x0, [sp, #120]
    9e64:	add	x0, x0, #0x38
    9e68:	add	x1, sp, #0x40
    9e6c:	bl	8bd8 <grub_gui_set_viewport>
    9e70:	ldr	x0, [sp, #120]
    9e74:	ldr	x0, [x0, #272]
    9e78:	str	x0, [sp, #112]
    9e7c:	ldr	x0, [sp, #112]
    9e80:	ldr	x1, [x0, #48]
    9e84:	ldr	x0, [sp, #112]
    9e88:	blr	x1
    9e8c:	str	w0, [sp, #108]
    9e90:	ldr	x0, [sp, #112]
    9e94:	ldr	x1, [x0, #56]
    9e98:	ldr	x0, [sp, #112]
    9e9c:	blr	x1
    9ea0:	str	w0, [sp, #104]
    9ea4:	ldr	x0, [sp, #112]
    9ea8:	ldr	x1, [x0, #64]
    9eac:	ldr	x0, [sp, #112]
    9eb0:	blr	x1
    9eb4:	str	w0, [sp, #100]
    9eb8:	ldr	x0, [sp, #112]
    9ebc:	ldr	x1, [x0, #72]
    9ec0:	ldr	x0, [sp, #112]
    9ec4:	blr	x1
    9ec8:	str	w0, [sp, #96]
    9ecc:	ldr	x0, [sp, #120]
    9ed0:	bl	8eac <get_num_shown_items>
    9ed4:	str	w0, [sp, #92]
    9ed8:	ldr	x0, [sp, #120]
    9edc:	ldr	w0, [x0, #148]
    9ee0:	cmp	w0, #0x0
    9ee4:	b.eq	9f1c <list_paint+0x138>  // b.none
    9ee8:	ldr	x0, [sp, #120]
    9eec:	ldr	x0, [x0, #304]
    9ef0:	ldr	x0, [x0, #176]
    9ef4:	ldr	w0, [x0]
    9ef8:	ldr	w1, [sp, #92]
    9efc:	cmp	w1, w0
    9f00:	b.ge	9f1c <list_paint+0x138>  // b.tcont
    9f04:	ldr	x0, [sp, #120]
    9f08:	bl	90ec <check_scrollbar>
    9f0c:	cmp	w0, #0x0
    9f10:	b.eq	9f1c <list_paint+0x138>  // b.none
    9f14:	mov	w0, #0x1                   	// #1
    9f18:	b	9f20 <list_paint+0x13c>
    9f1c:	mov	w0, #0x0                   	// #0
    9f20:	str	w0, [sp, #88]
    9f24:	ldr	x0, [sp, #120]
    9f28:	ldr	w0, [x0, #196]
    9f2c:	str	w0, [sp, #84]
    9f30:	ldr	w0, [sp, #108]
    9f34:	str	w0, [sp, #32]
    9f38:	ldr	w0, [sp, #104]
    9f3c:	str	w0, [sp, #36]
    9f40:	ldr	x0, [sp, #120]
    9f44:	ldr	w1, [x0, #64]
    9f48:	ldr	w0, [sp, #108]
    9f4c:	sub	w1, w1, w0
    9f50:	ldr	w0, [sp, #100]
    9f54:	sub	w0, w1, w0
    9f58:	str	w0, [sp, #40]
    9f5c:	ldr	x0, [sp, #120]
    9f60:	ldr	w1, [x0, #68]
    9f64:	ldr	w0, [sp, #104]
    9f68:	sub	w1, w1, w0
    9f6c:	ldr	w0, [sp, #96]
    9f70:	sub	w0, w1, w0
    9f74:	str	w0, [sp, #44]
    9f78:	ldr	x0, [sp, #112]
    9f7c:	ldr	x3, [x0, #32]
    9f80:	ldr	w0, [sp, #40]
    9f84:	mov	w1, w0
    9f88:	ldr	w0, [sp, #44]
    9f8c:	mov	w2, w0
    9f90:	ldr	x0, [sp, #112]
    9f94:	blr	x3
    9f98:	ldr	x0, [sp, #112]
    9f9c:	ldr	x3, [x0, #24]
    9fa0:	mov	w2, #0x0                   	// #0
    9fa4:	mov	w1, #0x0                   	// #0
    9fa8:	ldr	x0, [sp, #112]
    9fac:	blr	x3
    9fb0:	ldr	x0, [sp, #120]
    9fb4:	ldr	w0, [x0, #200]
    9fb8:	cmp	w0, #0x2
    9fbc:	b.eq	a040 <list_paint+0x25c>  // b.none
    9fc0:	cmp	w0, #0x2
    9fc4:	b.hi	a05c <list_paint+0x278>  // b.pmore
    9fc8:	cmp	w0, #0x0
    9fcc:	b.eq	9fdc <list_paint+0x1f8>  // b.none
    9fd0:	cmp	w0, #0x1
    9fd4:	b.eq	a008 <list_paint+0x224>  // b.none
    9fd8:	b	a05c <list_paint+0x278>
    9fdc:	ldr	w0, [sp, #32]
    9fe0:	ldr	x1, [sp, #120]
    9fe4:	ldr	w1, [x1, #208]
    9fe8:	add	w0, w0, w1
    9fec:	str	w0, [sp, #32]
    9ff0:	ldr	w0, [sp, #40]
    9ff4:	ldr	x1, [sp, #120]
    9ff8:	ldr	w1, [x1, #208]
    9ffc:	sub	w0, w0, w1
    a000:	str	w0, [sp, #40]
    a004:	b	a05c <list_paint+0x278>
    a008:	ldr	w0, [sp, #88]
    a00c:	cmp	w0, #0x0
    a010:	b.eq	a058 <list_paint+0x274>  // b.none
    a014:	ldr	w0, [sp, #40]
    a018:	ldr	x1, [sp, #120]
    a01c:	ldr	w2, [x1, #204]
    a020:	ldr	w1, [sp, #84]
    a024:	add	w2, w2, w1
    a028:	ldr	x1, [sp, #120]
    a02c:	ldr	w1, [x1, #208]
    a030:	add	w1, w2, w1
    a034:	sub	w0, w0, w1
    a038:	str	w0, [sp, #40]
    a03c:	b	a058 <list_paint+0x274>
    a040:	ldr	w0, [sp, #40]
    a044:	ldr	x1, [sp, #120]
    a048:	ldr	w1, [x1, #204]
    a04c:	sub	w0, w0, w1
    a050:	str	w0, [sp, #40]
    a054:	b	a05c <list_paint+0x278>
    a058:	nop
    a05c:	add	x1, sp, #0x30
    a060:	add	x0, sp, #0x20
    a064:	bl	8bd8 <grub_gui_set_viewport>
    a068:	ldr	w1, [sp, #92]
    a06c:	ldr	x0, [sp, #120]
    a070:	bl	9814 <draw_menu>
    a074:	add	x0, sp, #0x30
    a078:	bl	8b94 <grub_gui_restore_viewport>
    a07c:	ldr	w0, [sp, #88]
    a080:	cmp	w0, #0x0
    a084:	b.eq	a1cc <list_paint+0x3e8>  // b.none
    a088:	ldr	w0, [sp, #36]
    a08c:	ldr	x1, [sp, #120]
    a090:	ldr	w1, [x1, #212]
    a094:	add	w0, w0, w1
    a098:	str	w0, [sp, #36]
    a09c:	ldr	w0, [sp, #44]
    a0a0:	ldr	x1, [sp, #120]
    a0a4:	ldr	w2, [x1, #212]
    a0a8:	ldr	x1, [sp, #120]
    a0ac:	ldr	w1, [x1, #216]
    a0b0:	add	w1, w2, w1
    a0b4:	sub	w0, w0, w1
    a0b8:	str	w0, [sp, #44]
    a0bc:	ldr	w0, [sp, #84]
    a0c0:	str	w0, [sp, #40]
    a0c4:	ldr	x0, [sp, #120]
    a0c8:	ldr	w0, [x0, #200]
    a0cc:	cmp	w0, #0x2
    a0d0:	b.eq	a160 <list_paint+0x37c>  // b.none
    a0d4:	cmp	w0, #0x2
    a0d8:	b.hi	a180 <list_paint+0x39c>  // b.pmore
    a0dc:	cmp	w0, #0x0
    a0e0:	b.eq	a0f0 <list_paint+0x30c>  // b.none
    a0e4:	cmp	w0, #0x1
    a0e8:	b.eq	a12c <list_paint+0x348>  // b.none
    a0ec:	b	a180 <list_paint+0x39c>
    a0f0:	ldr	w1, [sp, #108]
    a0f4:	ldr	w0, [sp, #84]
    a0f8:	cmp	w1, w0
    a0fc:	b.le	a11c <list_paint+0x338>
    a100:	ldr	w1, [sp, #108]
    a104:	ldr	w0, [sp, #84]
    a108:	sub	w0, w1, w0
    a10c:	str	w0, [sp, #32]
    a110:	ldr	w0, [sp, #84]
    a114:	str	w0, [sp, #40]
    a118:	b	a180 <list_paint+0x39c>
    a11c:	str	wzr, [sp, #32]
    a120:	ldr	w0, [sp, #108]
    a124:	str	w0, [sp, #40]
    a128:	b	a180 <list_paint+0x39c>
    a12c:	ldr	x0, [sp, #120]
    a130:	ldr	w1, [x0, #64]
    a134:	ldr	w0, [sp, #100]
    a138:	sub	w1, w1, w0
    a13c:	ldr	w0, [sp, #84]
    a140:	sub	w0, w1, w0
    a144:	ldr	x1, [sp, #120]
    a148:	ldr	w1, [x1, #208]
    a14c:	sub	w0, w0, w1
    a150:	str	w0, [sp, #32]
    a154:	ldr	w0, [sp, #84]
    a158:	str	w0, [sp, #40]
    a15c:	b	a180 <list_paint+0x39c>
    a160:	ldr	x0, [sp, #120]
    a164:	ldr	w1, [x0, #64]
    a168:	ldr	w0, [sp, #100]
    a16c:	sub	w0, w1, w0
    a170:	str	w0, [sp, #32]
    a174:	ldr	w0, [sp, #100]
    a178:	str	w0, [sp, #40]
    a17c:	nop
    a180:	add	x1, sp, #0x30
    a184:	add	x0, sp, #0x20
    a188:	bl	8bd8 <grub_gui_set_viewport>
    a18c:	ldr	x0, [sp, #120]
    a190:	ldr	w1, [x0, #220]
    a194:	ldr	x0, [sp, #120]
    a198:	ldr	x0, [x0, #304]
    a19c:	ldr	x0, [x0, #176]
    a1a0:	ldr	w0, [x0]
    a1a4:	ldr	w2, [sp, #44]
    a1a8:	mov	w6, w2
    a1ac:	ldr	w5, [sp, #84]
    a1b0:	mov	w4, w0
    a1b4:	mov	w3, #0x0                   	// #0
    a1b8:	ldr	w2, [sp, #92]
    a1bc:	ldr	x0, [sp, #120]
    a1c0:	bl	948c <draw_scrollbar>
    a1c4:	add	x0, sp, #0x30
    a1c8:	bl	8b94 <grub_gui_restore_viewport>
    a1cc:	add	x0, sp, #0x40
    a1d0:	bl	8b94 <grub_gui_restore_viewport>
    a1d4:	b	a1ec <list_paint+0x408>
    a1d8:	nop
    a1dc:	b	a1ec <list_paint+0x408>
    a1e0:	nop
    a1e4:	b	a1ec <list_paint+0x408>
    a1e8:	nop
    a1ec:	ldp	x29, x30, [sp], #128
    a1f0:	ret

000000000000a1f4 <list_set_parent>:
    a1f4:	sub	sp, sp, #0x20
    a1f8:	str	x0, [sp, #8]
    a1fc:	str	x1, [sp]
    a200:	ldr	x0, [sp, #8]
    a204:	str	x0, [sp, #24]
    a208:	ldr	x0, [sp, #24]
    a20c:	ldr	x1, [sp]
    a210:	str	x1, [x0, #48]
    a214:	nop
    a218:	add	sp, sp, #0x20
    a21c:	ret

000000000000a220 <list_get_parent>:
    a220:	sub	sp, sp, #0x20
    a224:	str	x0, [sp, #8]
    a228:	ldr	x0, [sp, #8]
    a22c:	str	x0, [sp, #24]
    a230:	ldr	x0, [sp, #24]
    a234:	ldr	x0, [x0, #48]
    a238:	add	sp, sp, #0x20
    a23c:	ret

000000000000a240 <list_set_bounds>:
    a240:	sub	sp, sp, #0x20
    a244:	str	x0, [sp, #8]
    a248:	str	x1, [sp]
    a24c:	ldr	x0, [sp, #8]
    a250:	str	x0, [sp, #24]
    a254:	ldr	x2, [sp, #24]
    a258:	ldr	x0, [sp]
    a25c:	ldp	x0, x1, [x0]
    a260:	stp	x0, x1, [x2, #56]
    a264:	nop
    a268:	add	sp, sp, #0x20
    a26c:	ret

000000000000a270 <list_get_bounds>:
    a270:	sub	sp, sp, #0x20
    a274:	str	x0, [sp, #8]
    a278:	str	x1, [sp]
    a27c:	ldr	x0, [sp, #8]
    a280:	str	x0, [sp, #24]
    a284:	ldr	x2, [sp]
    a288:	ldr	x0, [sp, #24]
    a28c:	ldp	x0, x1, [x0, #56]
    a290:	stp	x0, x1, [x2]
    a294:	nop
    a298:	add	sp, sp, #0x20
    a29c:	ret

000000000000a2a0 <list_get_minimal_size>:
    a2a0:	stp	x29, x30, [sp, #-176]!
    a2a4:	mov	x29, sp
    a2a8:	str	x0, [sp, #40]
    a2ac:	str	x1, [sp, #32]
    a2b0:	str	x2, [sp, #24]
    a2b4:	ldr	x0, [sp, #40]
    a2b8:	str	x0, [sp, #168]
    a2bc:	ldr	x0, [sp, #168]
    a2c0:	bl	9018 <check_boxes>
    a2c4:	cmp	w0, #0x0
    a2c8:	b.eq	a628 <list_get_minimal_size+0x388>  // b.none
    a2cc:	ldr	x0, [sp, #168]
    a2d0:	ldr	w0, [x0, #96]
    a2d4:	str	w0, [sp, #164]
    a2d8:	ldr	x0, [sp, #168]
    a2dc:	ldr	w0, [x0, #104]
    a2e0:	str	w0, [sp, #160]
    a2e4:	ldr	x0, [sp, #168]
    a2e8:	ldr	w0, [x0, #92]
    a2ec:	str	w0, [sp, #156]
    a2f0:	mov	w0, #0x3                   	// #3
    a2f4:	str	w0, [sp, #152]
    a2f8:	ldr	x0, [sp, #168]
    a2fc:	ldr	x0, [x0, #272]
    a300:	str	x0, [sp, #144]
    a304:	ldr	x0, [sp, #144]
    a308:	ldr	x1, [x0, #48]
    a30c:	ldr	x0, [sp, #144]
    a310:	blr	x1
    a314:	str	w0, [sp, #140]
    a318:	ldr	x0, [sp, #144]
    a31c:	ldr	x1, [x0, #56]
    a320:	ldr	x0, [sp, #144]
    a324:	blr	x1
    a328:	str	w0, [sp, #136]
    a32c:	ldr	x0, [sp, #144]
    a330:	ldr	x1, [x0, #64]
    a334:	ldr	x0, [sp, #144]
    a338:	blr	x1
    a33c:	str	w0, [sp, #132]
    a340:	ldr	x0, [sp, #144]
    a344:	ldr	x1, [x0, #72]
    a348:	ldr	x0, [sp, #144]
    a34c:	blr	x1
    a350:	str	w0, [sp, #128]
    a354:	ldr	x0, [sp, #168]
    a358:	ldr	x0, [x0, #280]
    a35c:	str	x0, [sp, #120]
    a360:	ldr	x0, [sp, #120]
    a364:	ldr	x1, [x0, #56]
    a368:	ldr	x0, [sp, #120]
    a36c:	blr	x1
    a370:	str	w0, [sp, #116]
    a374:	ldr	x0, [sp, #120]
    a378:	ldr	x1, [x0, #72]
    a37c:	ldr	x0, [sp, #120]
    a380:	blr	x1
    a384:	str	w0, [sp, #112]
    a388:	ldr	x0, [sp, #120]
    a38c:	ldr	x1, [x0, #48]
    a390:	ldr	x0, [sp, #120]
    a394:	blr	x1
    a398:	str	w0, [sp, #108]
    a39c:	ldr	x0, [sp, #120]
    a3a0:	ldr	x1, [x0, #64]
    a3a4:	ldr	x0, [sp, #120]
    a3a8:	blr	x1
    a3ac:	str	w0, [sp, #104]
    a3b0:	ldr	x0, [sp, #168]
    a3b4:	ldr	x0, [x0, #288]
    a3b8:	str	x0, [sp, #96]
    a3bc:	ldr	x0, [sp, #96]
    a3c0:	ldr	x1, [x0, #56]
    a3c4:	ldr	x0, [sp, #96]
    a3c8:	blr	x1
    a3cc:	str	w0, [sp, #92]
    a3d0:	ldr	x0, [sp, #96]
    a3d4:	ldr	x1, [x0, #72]
    a3d8:	ldr	x0, [sp, #96]
    a3dc:	blr	x1
    a3e0:	str	w0, [sp, #88]
    a3e4:	ldr	x0, [sp, #96]
    a3e8:	ldr	x1, [x0, #48]
    a3ec:	ldr	x0, [sp, #96]
    a3f0:	blr	x1
    a3f4:	str	w0, [sp, #84]
    a3f8:	ldr	x0, [sp, #96]
    a3fc:	ldr	x1, [x0, #64]
    a400:	ldr	x0, [sp, #96]
    a404:	blr	x1
    a408:	str	w0, [sp, #80]
    a40c:	ldr	w0, [sp, #84]
    a410:	ldr	w2, [sp, #108]
    a414:	ldr	w1, [sp, #108]
    a418:	cmp	w2, w0
    a41c:	csel	w0, w1, w0, ge  // ge = tcont
    a420:	str	w0, [sp, #76]
    a424:	ldr	w0, [sp, #80]
    a428:	ldr	w2, [sp, #104]
    a42c:	ldr	w1, [sp, #104]
    a430:	cmp	w2, w0
    a434:	csel	w0, w1, w0, ge  // ge = tcont
    a438:	str	w0, [sp, #72]
    a43c:	ldr	w0, [sp, #92]
    a440:	ldr	w2, [sp, #116]
    a444:	ldr	w1, [sp, #116]
    a448:	cmp	w2, w0
    a44c:	csel	w0, w1, w0, ge  // ge = tcont
    a450:	str	w0, [sp, #68]
    a454:	ldr	w0, [sp, #88]
    a458:	ldr	w2, [sp, #112]
    a45c:	ldr	w1, [sp, #112]
    a460:	cmp	w2, w0
    a464:	csel	w0, w1, w0, ge  // ge = tcont
    a468:	str	w0, [sp, #64]
    a46c:	ldr	x0, [sp, #168]
    a470:	ldr	x2, [x0, #112]
    a474:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    a478:	add	x0, x0, #0x0
    a47c:	ldr	x1, [x0]
    a480:	mov	x0, x2
    a484:	bl	1dd8 <grub_font_get_string_width>
    a488:	mov	w1, w0
    a48c:	ldr	x0, [sp, #32]
    a490:	str	w1, [x0]
    a494:	ldr	x0, [sp, #168]
    a498:	ldr	x2, [x0, #128]
    a49c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    a4a0:	add	x0, x0, #0x0
    a4a4:	ldr	x1, [x0]
    a4a8:	mov	x0, x2
    a4ac:	bl	1dd8 <grub_font_get_string_width>
    a4b0:	str	w0, [sp, #60]
    a4b4:	ldr	x0, [sp, #32]
    a4b8:	ldr	w0, [x0]
    a4bc:	ldr	w1, [sp, #60]
    a4c0:	cmp	w1, w0
    a4c4:	b.ls	a4d4 <list_get_minimal_size+0x234>  // b.plast
    a4c8:	ldr	x0, [sp, #32]
    a4cc:	ldr	w1, [sp, #60]
    a4d0:	str	w1, [x0]
    a4d4:	ldr	x0, [sp, #32]
    a4d8:	ldr	w0, [x0]
    a4dc:	ldr	w1, [sp, #164]
    a4e0:	lsl	w2, w1, #1
    a4e4:	ldr	w1, [sp, #140]
    a4e8:	add	w2, w2, w1
    a4ec:	ldr	w1, [sp, #132]
    a4f0:	add	w2, w2, w1
    a4f4:	ldr	w1, [sp, #76]
    a4f8:	add	w2, w2, w1
    a4fc:	ldr	w1, [sp, #72]
    a500:	add	w2, w2, w1
    a504:	ldr	x1, [sp, #168]
    a508:	ldr	w1, [x1, #100]
    a50c:	add	w2, w2, w1
    a510:	ldr	x1, [sp, #168]
    a514:	ldr	w1, [x1, #84]
    a518:	add	w1, w2, w1
    a51c:	add	w1, w0, w1
    a520:	ldr	x0, [sp, #32]
    a524:	str	w1, [x0]
    a528:	ldr	x0, [sp, #168]
    a52c:	ldr	w0, [x0, #200]
    a530:	cmp	w0, #0x2
    a534:	b.eq	a5ac <list_get_minimal_size+0x30c>  // b.none
    a538:	cmp	w0, #0x2
    a53c:	b.hi	a5cc <list_get_minimal_size+0x32c>  // b.pmore
    a540:	cmp	w0, #0x0
    a544:	b.eq	a554 <list_get_minimal_size+0x2b4>  // b.none
    a548:	cmp	w0, #0x1
    a54c:	b.eq	a574 <list_get_minimal_size+0x2d4>  // b.none
    a550:	b	a5cc <list_get_minimal_size+0x32c>
    a554:	ldr	x0, [sp, #32]
    a558:	ldr	w0, [x0]
    a55c:	ldr	x1, [sp, #168]
    a560:	ldr	w1, [x1, #208]
    a564:	add	w1, w0, w1
    a568:	ldr	x0, [sp, #32]
    a56c:	str	w1, [x0]
    a570:	b	a5cc <list_get_minimal_size+0x32c>
    a574:	ldr	x0, [sp, #32]
    a578:	ldr	w0, [x0]
    a57c:	ldr	x1, [sp, #168]
    a580:	ldr	w2, [x1, #196]
    a584:	ldr	x1, [sp, #168]
    a588:	ldr	w1, [x1, #204]
    a58c:	add	w2, w2, w1
    a590:	ldr	x1, [sp, #168]
    a594:	ldr	w1, [x1, #208]
    a598:	add	w1, w2, w1
    a59c:	add	w1, w0, w1
    a5a0:	ldr	x0, [sp, #32]
    a5a4:	str	w1, [x0]
    a5a8:	b	a5cc <list_get_minimal_size+0x32c>
    a5ac:	ldr	x0, [sp, #32]
    a5b0:	ldr	w0, [x0]
    a5b4:	ldr	x1, [sp, #168]
    a5b8:	ldr	w1, [x1, #204]
    a5bc:	add	w1, w0, w1
    a5c0:	ldr	x0, [sp, #32]
    a5c4:	str	w1, [x0]
    a5c8:	nop
    a5cc:	ldr	w1, [sp, #156]
    a5d0:	ldr	w0, [sp, #152]
    a5d4:	mul	w1, w1, w0
    a5d8:	ldr	w0, [sp, #152]
    a5dc:	sub	w2, w0, #0x1
    a5e0:	ldr	w0, [sp, #160]
    a5e4:	mul	w0, w2, w0
    a5e8:	add	w1, w1, w0
    a5ec:	ldr	w0, [sp, #164]
    a5f0:	lsl	w0, w0, #1
    a5f4:	add	w1, w1, w0
    a5f8:	ldr	w0, [sp, #136]
    a5fc:	add	w1, w1, w0
    a600:	ldr	w0, [sp, #128]
    a604:	add	w1, w1, w0
    a608:	ldr	w0, [sp, #68]
    a60c:	add	w1, w1, w0
    a610:	ldr	w0, [sp, #64]
    a614:	add	w0, w1, w0
    a618:	mov	w1, w0
    a61c:	ldr	x0, [sp, #24]
    a620:	str	w1, [x0]
    a624:	b	a638 <list_get_minimal_size+0x398>
    a628:	ldr	x0, [sp, #32]
    a62c:	str	wzr, [x0]
    a630:	ldr	x0, [sp, #24]
    a634:	str	wzr, [x0]
    a638:	nop
    a63c:	ldp	x29, x30, [sp], #176
    a640:	ret
    a644:	nop
	...

000000000000a650 <list_set_property>:
    a650:	stp	x29, x30, [sp, #-80]!
    a654:	mov	x29, sp
    a658:	str	x0, [sp, #40]
    a65c:	str	x1, [sp, #32]
    a660:	str	x2, [sp, #24]
    a664:	ldr	x0, [sp, #40]
    a668:	str	x0, [sp, #72]
    a66c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    a670:	add	x0, x0, #0x0
    a674:	ldr	x1, [x0]
    a678:	ldr	x0, [sp, #32]
    a67c:	bl	0 <grub_strcmp>
    a680:	cmp	w0, #0x0
    a684:	b.ne	a6c0 <list_set_property+0x70>  // b.any
    a688:	ldr	x0, [sp, #24]
    a68c:	bl	0 <grub_font_get>
    a690:	mov	x1, x0
    a694:	ldr	x0, [sp, #72]
    a698:	str	x1, [x0, #112]
    a69c:	ldr	x0, [sp, #72]
    a6a0:	ldr	w0, [x0, #120]
    a6a4:	cmp	w0, #0x0
    a6a8:	b.eq	aff0 <list_set_property+0x9a0>  // b.none
    a6ac:	ldr	x0, [sp, #72]
    a6b0:	ldr	x1, [x0, #112]
    a6b4:	ldr	x0, [sp, #72]
    a6b8:	str	x1, [x0, #128]
    a6bc:	b	aff0 <list_set_property+0x9a0>
    a6c0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    a6c4:	add	x0, x0, #0x0
    a6c8:	ldr	x1, [x0]
    a6cc:	ldr	x0, [sp, #32]
    a6d0:	bl	0 <grub_strcmp>
    a6d4:	cmp	w0, #0x0
    a6d8:	b.ne	a744 <list_set_property+0xf4>  // b.any
    a6dc:	ldr	x0, [sp, #24]
    a6e0:	cmp	x0, #0x0
    a6e4:	b.eq	a704 <list_set_property+0xb4>  // b.none
    a6e8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    a6ec:	add	x0, x0, #0x0
    a6f0:	ldr	x1, [x0]
    a6f4:	ldr	x0, [sp, #24]
    a6f8:	bl	0 <grub_strcmp>
    a6fc:	cmp	w0, #0x0
    a700:	b.ne	a724 <list_set_property+0xd4>  // b.any
    a704:	ldr	x0, [sp, #72]
    a708:	ldr	x1, [x0, #112]
    a70c:	ldr	x0, [sp, #72]
    a710:	str	x1, [x0, #128]
    a714:	ldr	x0, [sp, #72]
    a718:	mov	w1, #0x1                   	// #1
    a71c:	str	w1, [x0, #120]
    a720:	b	aff0 <list_set_property+0x9a0>
    a724:	ldr	x0, [sp, #24]
    a728:	bl	0 <grub_font_get>
    a72c:	mov	x1, x0
    a730:	ldr	x0, [sp, #72]
    a734:	str	x1, [x0, #128]
    a738:	ldr	x0, [sp, #72]
    a73c:	str	wzr, [x0, #120]
    a740:	b	aff0 <list_set_property+0x9a0>
    a744:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    a748:	add	x0, x0, #0x0
    a74c:	ldr	x1, [x0]
    a750:	ldr	x0, [sp, #32]
    a754:	bl	0 <grub_strcmp>
    a758:	cmp	w0, #0x0
    a75c:	b.ne	a7a8 <list_set_property+0x158>  // b.any
    a760:	add	x0, sp, #0x38
    a764:	mov	x1, x0
    a768:	ldr	x0, [sp, #24]
    a76c:	bl	0 <grub_video_parse_color>
    a770:	cmp	w0, #0x0
    a774:	b.ne	aff0 <list_set_property+0x9a0>  // b.any
    a778:	ldr	x0, [sp, #72]
    a77c:	ldr	w1, [sp, #56]
    a780:	str	w1, [x0, #136]
    a784:	ldr	x0, [sp, #72]
    a788:	ldr	w0, [x0, #140]
    a78c:	cmp	w0, #0x0
    a790:	b.eq	aff0 <list_set_property+0x9a0>  // b.none
    a794:	ldr	x0, [sp, #72]
    a798:	ldr	x1, [sp, #72]
    a79c:	ldr	w1, [x1, #136]
    a7a0:	str	w1, [x0, #144]
    a7a4:	b	aff0 <list_set_property+0x9a0>
    a7a8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    a7ac:	add	x0, x0, #0x0
    a7b0:	ldr	x1, [x0]
    a7b4:	ldr	x0, [sp, #32]
    a7b8:	bl	0 <grub_strcmp>
    a7bc:	cmp	w0, #0x0
    a7c0:	b.ne	a83c <list_set_property+0x1ec>  // b.any
    a7c4:	ldr	x0, [sp, #24]
    a7c8:	cmp	x0, #0x0
    a7cc:	b.eq	a7ec <list_set_property+0x19c>  // b.none
    a7d0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    a7d4:	add	x0, x0, #0x0
    a7d8:	ldr	x1, [x0]
    a7dc:	ldr	x0, [sp, #24]
    a7e0:	bl	0 <grub_strcmp>
    a7e4:	cmp	w0, #0x0
    a7e8:	b.ne	a80c <list_set_property+0x1bc>  // b.any
    a7ec:	ldr	x0, [sp, #72]
    a7f0:	ldr	x1, [sp, #72]
    a7f4:	ldr	w1, [x1, #136]
    a7f8:	str	w1, [x0, #144]
    a7fc:	ldr	x0, [sp, #72]
    a800:	mov	w1, #0x1                   	// #1
    a804:	str	w1, [x0, #140]
    a808:	b	aff0 <list_set_property+0x9a0>
    a80c:	add	x0, sp, #0x30
    a810:	mov	x1, x0
    a814:	ldr	x0, [sp, #24]
    a818:	bl	0 <grub_video_parse_color>
    a81c:	cmp	w0, #0x0
    a820:	b.ne	aff0 <list_set_property+0x9a0>  // b.any
    a824:	ldr	x0, [sp, #72]
    a828:	ldr	w1, [sp, #48]
    a82c:	str	w1, [x0, #144]
    a830:	ldr	x0, [sp, #72]
    a834:	str	wzr, [x0, #140]
    a838:	b	aff0 <list_set_property+0x9a0>
    a83c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    a840:	add	x0, x0, #0x0
    a844:	ldr	x1, [x0]
    a848:	ldr	x0, [sp, #32]
    a84c:	bl	0 <grub_strcmp>
    a850:	cmp	w0, #0x0
    a854:	b.ne	a89c <list_set_property+0x24c>  // b.any
    a858:	mov	w2, #0xa                   	// #10
    a85c:	mov	x1, #0x0                   	// #0
    a860:	ldr	x0, [sp, #24]
    a864:	bl	89d0 <grub_strtol>
    a868:	mov	w1, w0
    a86c:	ldr	x0, [sp, #72]
    a870:	str	w1, [x0, #84]
    a874:	ldr	x0, [sp, #72]
    a878:	ldr	x3, [x0, #296]
    a87c:	ldr	x0, [sp, #72]
    a880:	ldr	w1, [x0, #84]
    a884:	ldr	x0, [sp, #72]
    a888:	ldr	w0, [x0, #88]
    a88c:	mov	w2, w0
    a890:	mov	x0, x3
    a894:	bl	20e8 <grub_gfxmenu_icon_manager_set_icon_size>
    a898:	b	aff0 <list_set_property+0x9a0>
    a89c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    a8a0:	add	x0, x0, #0x0
    a8a4:	ldr	x1, [x0]
    a8a8:	ldr	x0, [sp, #32]
    a8ac:	bl	0 <grub_strcmp>
    a8b0:	cmp	w0, #0x0
    a8b4:	b.ne	a8fc <list_set_property+0x2ac>  // b.any
    a8b8:	mov	w2, #0xa                   	// #10
    a8bc:	mov	x1, #0x0                   	// #0
    a8c0:	ldr	x0, [sp, #24]
    a8c4:	bl	89d0 <grub_strtol>
    a8c8:	mov	w1, w0
    a8cc:	ldr	x0, [sp, #72]
    a8d0:	str	w1, [x0, #88]
    a8d4:	ldr	x0, [sp, #72]
    a8d8:	ldr	x3, [x0, #296]
    a8dc:	ldr	x0, [sp, #72]
    a8e0:	ldr	w1, [x0, #84]
    a8e4:	ldr	x0, [sp, #72]
    a8e8:	ldr	w0, [x0, #88]
    a8ec:	mov	w2, w0
    a8f0:	mov	x0, x3
    a8f4:	bl	20e8 <grub_gfxmenu_icon_manager_set_icon_size>
    a8f8:	b	aff0 <list_set_property+0x9a0>
    a8fc:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    a900:	add	x0, x0, #0x0
    a904:	ldr	x1, [x0]
    a908:	ldr	x0, [sp, #32]
    a90c:	bl	0 <grub_strcmp>
    a910:	cmp	w0, #0x0
    a914:	b.ne	a938 <list_set_property+0x2e8>  // b.any
    a918:	mov	w2, #0xa                   	// #10
    a91c:	mov	x1, #0x0                   	// #0
    a920:	ldr	x0, [sp, #24]
    a924:	bl	89d0 <grub_strtol>
    a928:	mov	w1, w0
    a92c:	ldr	x0, [sp, #72]
    a930:	str	w1, [x0, #92]
    a934:	b	aff0 <list_set_property+0x9a0>
    a938:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    a93c:	add	x0, x0, #0x0
    a940:	ldr	x1, [x0]
    a944:	ldr	x0, [sp, #32]
    a948:	bl	0 <grub_strcmp>
    a94c:	cmp	w0, #0x0
    a950:	b.ne	a974 <list_set_property+0x324>  // b.any
    a954:	mov	w2, #0xa                   	// #10
    a958:	mov	x1, #0x0                   	// #0
    a95c:	ldr	x0, [sp, #24]
    a960:	bl	89d0 <grub_strtol>
    a964:	mov	w1, w0
    a968:	ldr	x0, [sp, #72]
    a96c:	str	w1, [x0, #96]
    a970:	b	aff0 <list_set_property+0x9a0>
    a974:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    a978:	add	x0, x0, #0x0
    a97c:	ldr	x1, [x0]
    a980:	ldr	x0, [sp, #32]
    a984:	bl	0 <grub_strcmp>
    a988:	cmp	w0, #0x0
    a98c:	b.ne	a9b0 <list_set_property+0x360>  // b.any
    a990:	mov	w2, #0xa                   	// #10
    a994:	mov	x1, #0x0                   	// #0
    a998:	ldr	x0, [sp, #24]
    a99c:	bl	89d0 <grub_strtol>
    a9a0:	mov	w1, w0
    a9a4:	ldr	x0, [sp, #72]
    a9a8:	str	w1, [x0, #100]
    a9ac:	b	aff0 <list_set_property+0x9a0>
    a9b0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    a9b4:	add	x0, x0, #0x0
    a9b8:	ldr	x1, [x0]
    a9bc:	ldr	x0, [sp, #32]
    a9c0:	bl	0 <grub_strcmp>
    a9c4:	cmp	w0, #0x0
    a9c8:	b.ne	a9ec <list_set_property+0x39c>  // b.any
    a9cc:	mov	w2, #0xa                   	// #10
    a9d0:	mov	x1, #0x0                   	// #0
    a9d4:	ldr	x0, [sp, #24]
    a9d8:	bl	89d0 <grub_strtol>
    a9dc:	mov	w1, w0
    a9e0:	ldr	x0, [sp, #72]
    a9e4:	str	w1, [x0, #104]
    a9e8:	b	aff0 <list_set_property+0x9a0>
    a9ec:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    a9f0:	add	x0, x0, #0x0
    a9f4:	ldr	x1, [x0]
    a9f8:	ldr	x0, [sp, #32]
    a9fc:	bl	0 <grub_strcmp>
    aa00:	cmp	w0, #0x0
    aa04:	b.ne	aa38 <list_set_property+0x3e8>  // b.any
    aa08:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    aa0c:	add	x0, x0, #0x0
    aa10:	ldr	x1, [x0]
    aa14:	ldr	x0, [sp, #24]
    aa18:	bl	0 <grub_strcmp>
    aa1c:	cmp	w0, #0x0
    aa20:	cset	w0, ne  // ne = any
    aa24:	and	w0, w0, #0xff
    aa28:	mov	w1, w0
    aa2c:	ldr	x0, [sp, #72]
    aa30:	str	w1, [x0, #80]
    aa34:	b	aff0 <list_set_property+0x9a0>
    aa38:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    aa3c:	add	x0, x0, #0x0
    aa40:	ldr	x1, [x0]
    aa44:	ldr	x0, [sp, #32]
    aa48:	bl	0 <grub_strcmp>
    aa4c:	cmp	w0, #0x0
    aa50:	b.ne	aa98 <list_set_property+0x448>  // b.any
    aa54:	ldr	x0, [sp, #72]
    aa58:	mov	w1, #0x1                   	// #1
    aa5c:	str	w1, [x0, #224]
    aa60:	ldr	x0, [sp, #72]
    aa64:	ldr	x0, [x0, #240]
    aa68:	bl	0 <grub_free>
    aa6c:	ldr	x0, [sp, #24]
    aa70:	cmp	x0, #0x0
    aa74:	b.eq	aa88 <list_set_property+0x438>  // b.none
    aa78:	ldr	x0, [sp, #24]
    aa7c:	bl	0 <grub_strdup>
    aa80:	mov	x1, x0
    aa84:	b	aa8c <list_set_property+0x43c>
    aa88:	mov	x1, #0x0                   	// #0
    aa8c:	ldr	x0, [sp, #72]
    aa90:	str	x1, [x0, #240]
    aa94:	b	aff0 <list_set_property+0x9a0>
    aa98:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    aa9c:	add	x0, x0, #0x0
    aaa0:	ldr	x1, [x0]
    aaa4:	ldr	x0, [sp, #32]
    aaa8:	bl	0 <grub_strcmp>
    aaac:	cmp	w0, #0x0
    aab0:	b.ne	ab3c <list_set_property+0x4ec>  // b.any
    aab4:	ldr	x0, [sp, #72]
    aab8:	mov	w1, #0x1                   	// #1
    aabc:	str	w1, [x0, #224]
    aac0:	ldr	x0, [sp, #72]
    aac4:	ldr	x0, [x0, #248]
    aac8:	bl	0 <grub_free>
    aacc:	ldr	x0, [sp, #24]
    aad0:	cmp	x0, #0x0
    aad4:	b.eq	aae8 <list_set_property+0x498>  // b.none
    aad8:	ldr	x0, [sp, #24]
    aadc:	bl	0 <grub_strdup>
    aae0:	mov	x1, x0
    aae4:	b	aaec <list_set_property+0x49c>
    aae8:	mov	x1, #0x0                   	// #0
    aaec:	ldr	x0, [sp, #72]
    aaf0:	str	x1, [x0, #248]
    aaf4:	ldr	x0, [sp, #72]
    aaf8:	ldr	w0, [x0, #256]
    aafc:	cmp	w0, #0x0
    ab00:	b.eq	aff0 <list_set_property+0x9a0>  // b.none
    ab04:	ldr	x0, [sp, #72]
    ab08:	ldr	x0, [x0, #264]
    ab0c:	bl	0 <grub_free>
    ab10:	ldr	x0, [sp, #24]
    ab14:	cmp	x0, #0x0
    ab18:	b.eq	ab2c <list_set_property+0x4dc>  // b.none
    ab1c:	ldr	x0, [sp, #24]
    ab20:	bl	0 <grub_strdup>
    ab24:	mov	x1, x0
    ab28:	b	ab30 <list_set_property+0x4e0>
    ab2c:	mov	x1, #0x0                   	// #0
    ab30:	ldr	x0, [sp, #72]
    ab34:	str	x1, [x0, #264]
    ab38:	b	aff0 <list_set_property+0x9a0>
    ab3c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    ab40:	add	x0, x0, #0x0
    ab44:	ldr	x1, [x0]
    ab48:	ldr	x0, [sp, #32]
    ab4c:	bl	0 <grub_strcmp>
    ab50:	cmp	w0, #0x0
    ab54:	b.ne	ac1c <list_set_property+0x5cc>  // b.any
    ab58:	ldr	x0, [sp, #24]
    ab5c:	cmp	x0, #0x0
    ab60:	b.eq	ab80 <list_set_property+0x530>  // b.none
    ab64:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    ab68:	add	x0, x0, #0x0
    ab6c:	ldr	x1, [x0]
    ab70:	ldr	x0, [sp, #24]
    ab74:	bl	0 <grub_strcmp>
    ab78:	cmp	w0, #0x0
    ab7c:	b.ne	abd0 <list_set_property+0x580>  // b.any
    ab80:	ldr	x0, [sp, #72]
    ab84:	ldr	x0, [x0, #264]
    ab88:	bl	0 <grub_free>
    ab8c:	ldr	x0, [sp, #72]
    ab90:	ldr	x0, [x0, #248]
    ab94:	str	x0, [sp, #64]
    ab98:	ldr	x0, [sp, #64]
    ab9c:	cmp	x0, #0x0
    aba0:	b.eq	abb4 <list_set_property+0x564>  // b.none
    aba4:	ldr	x0, [sp, #64]
    aba8:	bl	0 <grub_strdup>
    abac:	mov	x1, x0
    abb0:	b	abb8 <list_set_property+0x568>
    abb4:	mov	x1, #0x0                   	// #0
    abb8:	ldr	x0, [sp, #72]
    abbc:	str	x1, [x0, #264]
    abc0:	ldr	x0, [sp, #72]
    abc4:	mov	w1, #0x1                   	// #1
    abc8:	str	w1, [x0, #256]
    abcc:	b	aff0 <list_set_property+0x9a0>
    abd0:	ldr	x0, [sp, #72]
    abd4:	mov	w1, #0x1                   	// #1
    abd8:	str	w1, [x0, #224]
    abdc:	ldr	x0, [sp, #72]
    abe0:	ldr	x0, [x0, #264]
    abe4:	bl	0 <grub_free>
    abe8:	ldr	x0, [sp, #24]
    abec:	cmp	x0, #0x0
    abf0:	b.eq	ac04 <list_set_property+0x5b4>  // b.none
    abf4:	ldr	x0, [sp, #24]
    abf8:	bl	0 <grub_strdup>
    abfc:	mov	x1, x0
    ac00:	b	ac08 <list_set_property+0x5b8>
    ac04:	mov	x1, #0x0                   	// #0
    ac08:	ldr	x0, [sp, #72]
    ac0c:	str	x1, [x0, #264]
    ac10:	ldr	x0, [sp, #72]
    ac14:	str	wzr, [x0, #256]
    ac18:	b	aff0 <list_set_property+0x9a0>
    ac1c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    ac20:	add	x0, x0, #0x0
    ac24:	ldr	x1, [x0]
    ac28:	ldr	x0, [sp, #32]
    ac2c:	bl	0 <grub_strcmp>
    ac30:	cmp	w0, #0x0
    ac34:	b.ne	ac7c <list_set_property+0x62c>  // b.any
    ac38:	ldr	x0, [sp, #72]
    ac3c:	mov	w1, #0x1                   	// #1
    ac40:	str	w1, [x0, #152]
    ac44:	ldr	x0, [sp, #72]
    ac48:	ldr	x0, [x0, #160]
    ac4c:	bl	0 <grub_free>
    ac50:	ldr	x0, [sp, #24]
    ac54:	cmp	x0, #0x0
    ac58:	b.eq	ac6c <list_set_property+0x61c>  // b.none
    ac5c:	ldr	x0, [sp, #24]
    ac60:	bl	0 <grub_strdup>
    ac64:	mov	x1, x0
    ac68:	b	ac70 <list_set_property+0x620>
    ac6c:	mov	x1, #0x0                   	// #0
    ac70:	ldr	x0, [sp, #72]
    ac74:	str	x1, [x0, #160]
    ac78:	b	aff0 <list_set_property+0x9a0>
    ac7c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    ac80:	add	x0, x0, #0x0
    ac84:	ldr	x1, [x0]
    ac88:	ldr	x0, [sp, #32]
    ac8c:	bl	0 <grub_strcmp>
    ac90:	cmp	w0, #0x0
    ac94:	b.ne	acdc <list_set_property+0x68c>  // b.any
    ac98:	ldr	x0, [sp, #72]
    ac9c:	mov	w1, #0x1                   	// #1
    aca0:	str	w1, [x0, #152]
    aca4:	ldr	x0, [sp, #72]
    aca8:	ldr	x0, [x0, #168]
    acac:	bl	0 <grub_free>
    acb0:	ldr	x0, [sp, #24]
    acb4:	cmp	x0, #0x0
    acb8:	b.eq	accc <list_set_property+0x67c>  // b.none
    acbc:	ldr	x0, [sp, #24]
    acc0:	bl	0 <grub_strdup>
    acc4:	mov	x1, x0
    acc8:	b	acd0 <list_set_property+0x680>
    accc:	mov	x1, #0x0                   	// #0
    acd0:	ldr	x0, [sp, #72]
    acd4:	str	x1, [x0, #168]
    acd8:	b	aff0 <list_set_property+0x9a0>
    acdc:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    ace0:	add	x0, x0, #0x0
    ace4:	ldr	x1, [x0]
    ace8:	ldr	x0, [sp, #32]
    acec:	bl	0 <grub_strcmp>
    acf0:	cmp	w0, #0x0
    acf4:	b.ne	ad28 <list_set_property+0x6d8>  // b.any
    acf8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    acfc:	add	x0, x0, #0x0
    ad00:	ldr	x1, [x0]
    ad04:	ldr	x0, [sp, #24]
    ad08:	bl	0 <grub_strcmp>
    ad0c:	cmp	w0, #0x0
    ad10:	cset	w0, eq  // eq = none
    ad14:	and	w0, w0, #0xff
    ad18:	mov	w1, w0
    ad1c:	ldr	x0, [sp, #72]
    ad20:	str	w1, [x0, #192]
    ad24:	b	aff0 <list_set_property+0x9a0>
    ad28:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    ad2c:	add	x0, x0, #0x0
    ad30:	ldr	x1, [x0]
    ad34:	ldr	x0, [sp, #32]
    ad38:	bl	0 <grub_strcmp>
    ad3c:	cmp	w0, #0x0
    ad40:	b.ne	ad64 <list_set_property+0x714>  // b.any
    ad44:	mov	w2, #0xa                   	// #10
    ad48:	mov	x1, #0x0                   	// #0
    ad4c:	ldr	x0, [sp, #24]
    ad50:	bl	89d0 <grub_strtol>
    ad54:	mov	w1, w0
    ad58:	ldr	x0, [sp, #72]
    ad5c:	str	w1, [x0, #196]
    ad60:	b	aff0 <list_set_property+0x9a0>
    ad64:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    ad68:	add	x0, x0, #0x0
    ad6c:	ldr	x1, [x0]
    ad70:	ldr	x0, [sp, #32]
    ad74:	bl	0 <grub_strcmp>
    ad78:	cmp	w0, #0x0
    ad7c:	b.ne	ae00 <list_set_property+0x7b0>  // b.any
    ad80:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    ad84:	add	x0, x0, #0x0
    ad88:	ldr	x1, [x0]
    ad8c:	ldr	x0, [sp, #24]
    ad90:	bl	0 <grub_strcmp>
    ad94:	cmp	w0, #0x0
    ad98:	b.ne	ada8 <list_set_property+0x758>  // b.any
    ad9c:	ldr	x0, [sp, #72]
    ada0:	str	wzr, [x0, #200]
    ada4:	b	aff0 <list_set_property+0x9a0>
    ada8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    adac:	add	x0, x0, #0x0
    adb0:	ldr	x1, [x0]
    adb4:	ldr	x0, [sp, #24]
    adb8:	bl	0 <grub_strcmp>
    adbc:	cmp	w0, #0x0
    adc0:	b.ne	add4 <list_set_property+0x784>  // b.any
    adc4:	ldr	x0, [sp, #72]
    adc8:	mov	w1, #0x1                   	// #1
    adcc:	str	w1, [x0, #200]
    add0:	b	aff0 <list_set_property+0x9a0>
    add4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    add8:	add	x0, x0, #0x0
    addc:	ldr	x1, [x0]
    ade0:	ldr	x0, [sp, #24]
    ade4:	bl	0 <grub_strcmp>
    ade8:	cmp	w0, #0x0
    adec:	b.ne	aff0 <list_set_property+0x9a0>  // b.any
    adf0:	ldr	x0, [sp, #72]
    adf4:	mov	w1, #0x2                   	// #2
    adf8:	str	w1, [x0, #200]
    adfc:	b	aff0 <list_set_property+0x9a0>
    ae00:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    ae04:	add	x0, x0, #0x0
    ae08:	ldr	x1, [x0]
    ae0c:	ldr	x0, [sp, #32]
    ae10:	bl	0 <grub_strcmp>
    ae14:	cmp	w0, #0x0
    ae18:	b.ne	ae3c <list_set_property+0x7ec>  // b.any
    ae1c:	mov	w2, #0xa                   	// #10
    ae20:	mov	x1, #0x0                   	// #0
    ae24:	ldr	x0, [sp, #24]
    ae28:	bl	89d0 <grub_strtol>
    ae2c:	mov	w1, w0
    ae30:	ldr	x0, [sp, #72]
    ae34:	str	w1, [x0, #204]
    ae38:	b	aff0 <list_set_property+0x9a0>
    ae3c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    ae40:	add	x0, x0, #0x0
    ae44:	ldr	x1, [x0]
    ae48:	ldr	x0, [sp, #32]
    ae4c:	bl	0 <grub_strcmp>
    ae50:	cmp	w0, #0x0
    ae54:	b.ne	ae78 <list_set_property+0x828>  // b.any
    ae58:	mov	w2, #0xa                   	// #10
    ae5c:	mov	x1, #0x0                   	// #0
    ae60:	ldr	x0, [sp, #24]
    ae64:	bl	89d0 <grub_strtol>
    ae68:	mov	w1, w0
    ae6c:	ldr	x0, [sp, #72]
    ae70:	str	w1, [x0, #208]
    ae74:	b	aff0 <list_set_property+0x9a0>
    ae78:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    ae7c:	add	x0, x0, #0x0
    ae80:	ldr	x1, [x0]
    ae84:	ldr	x0, [sp, #32]
    ae88:	bl	0 <grub_strcmp>
    ae8c:	cmp	w0, #0x0
    ae90:	b.ne	aeb4 <list_set_property+0x864>  // b.any
    ae94:	mov	w2, #0xa                   	// #10
    ae98:	mov	x1, #0x0                   	// #0
    ae9c:	ldr	x0, [sp, #24]
    aea0:	bl	89d0 <grub_strtol>
    aea4:	mov	w1, w0
    aea8:	ldr	x0, [sp, #72]
    aeac:	str	w1, [x0, #212]
    aeb0:	b	aff0 <list_set_property+0x9a0>
    aeb4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    aeb8:	add	x0, x0, #0x0
    aebc:	ldr	x1, [x0]
    aec0:	ldr	x0, [sp, #32]
    aec4:	bl	0 <grub_strcmp>
    aec8:	cmp	w0, #0x0
    aecc:	b.ne	aef0 <list_set_property+0x8a0>  // b.any
    aed0:	mov	w2, #0xa                   	// #10
    aed4:	mov	x1, #0x0                   	// #0
    aed8:	ldr	x0, [sp, #24]
    aedc:	bl	89d0 <grub_strtol>
    aee0:	mov	w1, w0
    aee4:	ldr	x0, [sp, #72]
    aee8:	str	w1, [x0, #216]
    aeec:	b	aff0 <list_set_property+0x9a0>
    aef0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    aef4:	add	x0, x0, #0x0
    aef8:	ldr	x1, [x0]
    aefc:	ldr	x0, [sp, #32]
    af00:	bl	0 <grub_strcmp>
    af04:	cmp	w0, #0x0
    af08:	b.ne	af3c <list_set_property+0x8ec>  // b.any
    af0c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    af10:	add	x0, x0, #0x0
    af14:	ldr	x1, [x0]
    af18:	ldr	x0, [sp, #24]
    af1c:	bl	0 <grub_strcmp>
    af20:	cmp	w0, #0x0
    af24:	cset	w0, ne  // ne = any
    af28:	and	w0, w0, #0xff
    af2c:	mov	w1, w0
    af30:	ldr	x0, [sp, #72]
    af34:	str	w1, [x0, #148]
    af38:	b	aff0 <list_set_property+0x9a0>
    af3c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    af40:	add	x0, x0, #0x0
    af44:	ldr	x1, [x0]
    af48:	ldr	x0, [sp, #32]
    af4c:	bl	0 <grub_strcmp>
    af50:	cmp	w0, #0x0
    af54:	b.ne	af9c <list_set_property+0x94c>  // b.any
    af58:	ldr	x0, [sp, #72]
    af5c:	mov	w1, #0x1                   	// #1
    af60:	str	w1, [x0, #224]
    af64:	ldr	x0, [sp, #72]
    af68:	ldr	x0, [x0, #232]
    af6c:	bl	0 <grub_free>
    af70:	ldr	x0, [sp, #24]
    af74:	cmp	x0, #0x0
    af78:	b.eq	af8c <list_set_property+0x93c>  // b.none
    af7c:	ldr	x0, [sp, #24]
    af80:	bl	0 <grub_strdup>
    af84:	mov	x1, x0
    af88:	b	af90 <list_set_property+0x940>
    af8c:	mov	x1, #0x0                   	// #0
    af90:	ldr	x0, [sp, #72]
    af94:	str	x1, [x0, #232]
    af98:	b	aff0 <list_set_property+0x9a0>
    af9c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    afa0:	add	x0, x0, #0x0
    afa4:	ldr	x1, [x0]
    afa8:	ldr	x0, [sp, #32]
    afac:	bl	0 <grub_strcmp>
    afb0:	cmp	w0, #0x0
    afb4:	b.ne	aff0 <list_set_property+0x9a0>  // b.any
    afb8:	ldr	x0, [sp, #72]
    afbc:	ldr	x0, [x0, #72]
    afc0:	bl	0 <grub_free>
    afc4:	ldr	x0, [sp, #24]
    afc8:	cmp	x0, #0x0
    afcc:	b.eq	afe8 <list_set_property+0x998>  // b.none
    afd0:	ldr	x0, [sp, #24]
    afd4:	bl	0 <grub_strdup>
    afd8:	mov	x1, x0
    afdc:	ldr	x0, [sp, #72]
    afe0:	str	x1, [x0, #72]
    afe4:	b	aff0 <list_set_property+0x9a0>
    afe8:	ldr	x0, [sp, #72]
    afec:	str	xzr, [x0, #72]
    aff0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    aff4:	add	x0, x0, #0x0
    aff8:	ldr	x0, [x0]
    affc:	ldr	w0, [x0]
    b000:	ldp	x29, x30, [sp], #80
    b004:	ret
	...

000000000000b110 <list_set_view_info>:
    b110:	stp	x29, x30, [sp, #-48]!
    b114:	mov	x29, sp
    b118:	str	x0, [sp, #24]
    b11c:	str	x1, [sp, #16]
    b120:	ldr	x0, [sp, #24]
    b124:	str	x0, [sp, #40]
    b128:	ldr	x0, [sp, #40]
    b12c:	ldr	x2, [x0, #296]
    b130:	ldr	x0, [sp, #16]
    b134:	ldr	x0, [x0, #136]
    b138:	mov	x1, x0
    b13c:	mov	x0, x2
    b140:	bl	203c <grub_gfxmenu_icon_manager_set_theme_path>
    b144:	ldr	x0, [sp, #40]
    b148:	ldr	x1, [sp, #16]
    b14c:	str	x1, [x0, #304]
    b150:	nop
    b154:	ldp	x29, x30, [sp], #48
    b158:	ret

000000000000b15c <list_refresh_info>:
    b15c:	sub	sp, sp, #0x20
    b160:	str	x0, [sp, #8]
    b164:	str	x1, [sp]
    b168:	ldr	x0, [sp, #8]
    b16c:	str	x0, [sp, #24]
    b170:	ldr	x0, [sp]
    b174:	ldr	w0, [x0, #184]
    b178:	cmp	w0, #0x0
    b17c:	b.eq	b188 <list_refresh_info+0x2c>  // b.none
    b180:	ldr	x0, [sp, #24]
    b184:	str	wzr, [x0, #220]
    b188:	nop
    b18c:	add	sp, sp, #0x20
    b190:	ret

000000000000b194 <grub_gui_list_new>:
    b194:	stp	x29, x30, [sp, #-48]!
    b198:	mov	x29, sp
    b19c:	mov	x0, #0x138                 	// #312
    b1a0:	bl	0 <grub_zalloc>
    b1a4:	str	x0, [sp, #40]
    b1a8:	ldr	x0, [sp, #40]
    b1ac:	cmp	x0, #0x0
    b1b0:	b.ne	b1bc <grub_gui_list_new+0x28>  // b.any
    b1b4:	mov	x0, #0x0                   	// #0
    b1b8:	b	b40c <grub_gui_list_new+0x278>
    b1bc:	ldr	x0, [sp, #40]
    b1c0:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    b1c4:	add	x1, x1, #0x0
    b1c8:	ldr	x1, [x1]
    b1cc:	str	x1, [x0, #40]
    b1d0:	ldr	x0, [sp, #40]
    b1d4:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    b1d8:	add	x1, x1, #0x0
    b1dc:	ldr	x1, [x1]
    b1e0:	str	x1, [x0]
    b1e4:	ldr	x0, [sp, #40]
    b1e8:	mov	w1, #0x1                   	// #1
    b1ec:	str	w1, [x0, #80]
    b1f0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    b1f4:	add	x0, x0, #0x0
    b1f8:	ldr	x0, [x0]
    b1fc:	bl	0 <grub_font_get>
    b200:	str	x0, [sp, #32]
    b204:	mov	w2, #0x0                   	// #0
    b208:	mov	w1, #0x0                   	// #0
    b20c:	mov	w0, #0x0                   	// #0
    b210:	bl	8ad8 <grub_video_rgba_color_rgb>
    b214:	str	w0, [sp, #24]
    b218:	ldr	x0, [sp, #40]
    b21c:	mov	w1, #0x20                  	// #32
    b220:	str	w1, [x0, #84]
    b224:	ldr	x0, [sp, #40]
    b228:	mov	w1, #0x20                  	// #32
    b22c:	str	w1, [x0, #88]
    b230:	ldr	x0, [sp, #40]
    b234:	mov	w1, #0x2a                  	// #42
    b238:	str	w1, [x0, #92]
    b23c:	ldr	x0, [sp, #40]
    b240:	mov	w1, #0xe                   	// #14
    b244:	str	w1, [x0, #96]
    b248:	ldr	x0, [sp, #40]
    b24c:	mov	w1, #0x4                   	// #4
    b250:	str	w1, [x0, #100]
    b254:	ldr	x0, [sp, #40]
    b258:	mov	w1, #0x10                  	// #16
    b25c:	str	w1, [x0, #104]
    b260:	ldr	x0, [sp, #40]
    b264:	ldr	x1, [sp, #32]
    b268:	str	x1, [x0, #112]
    b26c:	ldr	x0, [sp, #40]
    b270:	mov	w1, #0x1                   	// #1
    b274:	str	w1, [x0, #120]
    b278:	ldr	x0, [sp, #40]
    b27c:	ldr	x1, [sp, #32]
    b280:	str	x1, [x0, #128]
    b284:	ldr	x0, [sp, #40]
    b288:	ldr	w1, [sp, #24]
    b28c:	str	w1, [x0, #136]
    b290:	ldr	x0, [sp, #40]
    b294:	mov	w1, #0x1                   	// #1
    b298:	str	w1, [x0, #140]
    b29c:	ldr	x0, [sp, #40]
    b2a0:	ldr	w1, [sp, #24]
    b2a4:	str	w1, [x0, #144]
    b2a8:	ldr	x0, [sp, #40]
    b2ac:	mov	w1, #0x1                   	// #1
    b2b0:	str	w1, [x0, #148]
    b2b4:	ldr	x0, [sp, #40]
    b2b8:	mov	w1, #0x1                   	// #1
    b2bc:	str	w1, [x0, #152]
    b2c0:	ldr	x0, [sp, #40]
    b2c4:	str	xzr, [x0, #176]
    b2c8:	ldr	x0, [sp, #40]
    b2cc:	str	xzr, [x0, #184]
    b2d0:	ldr	x0, [sp, #40]
    b2d4:	str	xzr, [x0, #160]
    b2d8:	ldr	x0, [sp, #40]
    b2dc:	str	xzr, [x0, #168]
    b2e0:	ldr	x0, [sp, #40]
    b2e4:	str	wzr, [x0, #192]
    b2e8:	ldr	x0, [sp, #40]
    b2ec:	mov	w1, #0x10                  	// #16
    b2f0:	str	w1, [x0, #196]
    b2f4:	ldr	x0, [sp, #40]
    b2f8:	mov	w1, #0x2                   	// #2
    b2fc:	str	w1, [x0, #200]
    b300:	ldr	x0, [sp, #40]
    b304:	mov	w1, #0x2                   	// #2
    b308:	str	w1, [x0, #204]
    b30c:	ldr	x0, [sp, #40]
    b310:	str	wzr, [x0, #208]
    b314:	ldr	x0, [sp, #40]
    b318:	str	wzr, [x0, #212]
    b31c:	ldr	x0, [sp, #40]
    b320:	str	wzr, [x0, #216]
    b324:	ldr	x0, [sp, #40]
    b328:	str	wzr, [x0, #220]
    b32c:	ldr	x0, [sp, #40]
    b330:	str	wzr, [x0, #224]
    b334:	ldr	x0, [sp, #40]
    b338:	str	xzr, [x0, #232]
    b33c:	ldr	x0, [sp, #40]
    b340:	str	xzr, [x0, #240]
    b344:	ldr	x0, [sp, #40]
    b348:	str	xzr, [x0, #248]
    b34c:	ldr	x0, [sp, #40]
    b350:	mov	w1, #0x1                   	// #1
    b354:	str	w1, [x0, #256]
    b358:	ldr	x0, [sp, #40]
    b35c:	str	xzr, [x0, #264]
    b360:	mov	x1, #0x0                   	// #0
    b364:	mov	x0, #0x0                   	// #0
    b368:	bl	4df0 <grub_gfxmenu_create_box>
    b36c:	mov	x1, x0
    b370:	ldr	x0, [sp, #40]
    b374:	str	x1, [x0, #272]
    b378:	mov	x1, #0x0                   	// #0
    b37c:	mov	x0, #0x0                   	// #0
    b380:	bl	4df0 <grub_gfxmenu_create_box>
    b384:	mov	x1, x0
    b388:	ldr	x0, [sp, #40]
    b38c:	str	x1, [x0, #288]
    b390:	mov	x1, #0x0                   	// #0
    b394:	mov	x0, #0x0                   	// #0
    b398:	bl	4df0 <grub_gfxmenu_create_box>
    b39c:	mov	x1, x0
    b3a0:	ldr	x0, [sp, #40]
    b3a4:	str	x1, [x0, #280]
    b3a8:	bl	1f34 <grub_gfxmenu_icon_manager_new>
    b3ac:	mov	x1, x0
    b3b0:	ldr	x0, [sp, #40]
    b3b4:	str	x1, [x0, #296]
    b3b8:	ldr	x0, [sp, #40]
    b3bc:	ldr	x0, [x0, #296]
    b3c0:	cmp	x0, #0x0
    b3c4:	b.ne	b3e4 <grub_gui_list_new+0x250>  // b.any
    b3c8:	ldr	x0, [sp, #40]
    b3cc:	ldr	x0, [x0]
    b3d0:	ldr	x1, [x0]
    b3d4:	ldr	x0, [sp, #40]
    b3d8:	blr	x1
    b3dc:	mov	x0, #0x0                   	// #0
    b3e0:	b	b40c <grub_gui_list_new+0x278>
    b3e4:	ldr	x0, [sp, #40]
    b3e8:	ldr	x3, [x0, #296]
    b3ec:	ldr	x0, [sp, #40]
    b3f0:	ldr	w1, [x0, #84]
    b3f4:	ldr	x0, [sp, #40]
    b3f8:	ldr	w0, [x0, #88]
    b3fc:	mov	w2, w0
    b400:	mov	x0, x3
    b404:	bl	20e8 <grub_gfxmenu_icon_manager_set_icon_size>
    b408:	ldr	x0, [sp, #40]
    b40c:	ldp	x29, x30, [sp], #48
    b410:	ret
    b414:	nop
	...

000000000000b430 <grub_video_bitmap_get_width>:
    b430:	sub	sp, sp, #0x10
    b434:	str	x0, [sp, #8]
    b438:	ldr	x0, [sp, #8]
    b43c:	cmp	x0, #0x0
    b440:	b.ne	b44c <grub_video_bitmap_get_width+0x1c>  // b.any
    b444:	mov	w0, #0x0                   	// #0
    b448:	b	b454 <grub_video_bitmap_get_width+0x24>
    b44c:	ldr	x0, [sp, #8]
    b450:	ldr	w0, [x0]
    b454:	add	sp, sp, #0x10
    b458:	ret

000000000000b45c <grub_video_bitmap_get_height>:
    b45c:	sub	sp, sp, #0x10
    b460:	str	x0, [sp, #8]
    b464:	ldr	x0, [sp, #8]
    b468:	cmp	x0, #0x0
    b46c:	b.ne	b478 <grub_video_bitmap_get_height+0x1c>  // b.any
    b470:	mov	w0, #0x0                   	// #0
    b474:	b	b480 <grub_video_bitmap_get_height+0x24>
    b478:	ldr	x0, [sp, #8]
    b47c:	ldr	w0, [x0, #4]
    b480:	add	sp, sp, #0x10
    b484:	ret

000000000000b488 <grub_gui_save_viewport>:
    b488:	stp	x29, x30, [sp, #-32]!
    b48c:	mov	x29, sp
    b490:	str	x0, [sp, #24]
    b494:	ldr	x4, [sp, #24]
    b498:	ldr	x0, [sp, #24]
    b49c:	add	x1, x0, #0x4
    b4a0:	ldr	x0, [sp, #24]
    b4a4:	add	x2, x0, #0x8
    b4a8:	ldr	x0, [sp, #24]
    b4ac:	add	x0, x0, #0xc
    b4b0:	mov	x3, x0
    b4b4:	mov	x0, x4
    b4b8:	bl	0 <grub_video_get_viewport>
    b4bc:	nop
    b4c0:	ldp	x29, x30, [sp], #32
    b4c4:	ret

000000000000b4c8 <grub_gui_restore_viewport>:
    b4c8:	stp	x29, x30, [sp, #-32]!
    b4cc:	mov	x29, sp
    b4d0:	str	x0, [sp, #24]
    b4d4:	ldr	x0, [sp, #24]
    b4d8:	ldr	w4, [x0]
    b4dc:	ldr	x0, [sp, #24]
    b4e0:	ldr	w1, [x0, #4]
    b4e4:	ldr	x0, [sp, #24]
    b4e8:	ldr	w2, [x0, #8]
    b4ec:	ldr	x0, [sp, #24]
    b4f0:	ldr	w0, [x0, #12]
    b4f4:	mov	w3, w0
    b4f8:	mov	w0, w4
    b4fc:	bl	0 <grub_video_set_viewport>
    b500:	nop
    b504:	ldp	x29, x30, [sp], #32
    b508:	ret

000000000000b50c <grub_gui_set_viewport>:
    b50c:	stp	x29, x30, [sp, #-32]!
    b510:	mov	x29, sp
    b514:	str	x0, [sp, #24]
    b518:	str	x1, [sp, #16]
    b51c:	ldr	x0, [sp, #16]
    b520:	bl	b488 <grub_gui_save_viewport>
    b524:	ldr	x0, [sp, #16]
    b528:	ldr	w1, [x0]
    b52c:	ldr	x0, [sp, #24]
    b530:	ldr	w0, [x0]
    b534:	add	w4, w1, w0
    b538:	ldr	x0, [sp, #16]
    b53c:	ldr	w1, [x0, #4]
    b540:	ldr	x0, [sp, #24]
    b544:	ldr	w0, [x0, #4]
    b548:	add	w1, w1, w0
    b54c:	ldr	x0, [sp, #24]
    b550:	ldr	w2, [x0, #8]
    b554:	ldr	x0, [sp, #24]
    b558:	ldr	w0, [x0, #12]
    b55c:	mov	w3, w0
    b560:	mov	w0, w4
    b564:	bl	0 <grub_video_set_viewport>
    b568:	nop
    b56c:	ldp	x29, x30, [sp], #32
    b570:	ret

000000000000b574 <grub_video_have_common_points>:
    b574:	sub	sp, sp, #0x10
    b578:	str	x0, [sp, #8]
    b57c:	str	x1, [sp]
    b580:	ldr	x0, [sp, #8]
    b584:	ldr	w1, [x0]
    b588:	ldr	x0, [sp]
    b58c:	ldr	w0, [x0]
    b590:	cmp	w1, w0
    b594:	b.hi	b5bc <grub_video_have_common_points+0x48>  // b.pmore
    b598:	ldr	x0, [sp]
    b59c:	ldr	w1, [x0]
    b5a0:	ldr	x0, [sp, #8]
    b5a4:	ldr	w2, [x0]
    b5a8:	ldr	x0, [sp, #8]
    b5ac:	ldr	w0, [x0, #8]
    b5b0:	add	w0, w2, w0
    b5b4:	cmp	w1, w0
    b5b8:	b.ls	b600 <grub_video_have_common_points+0x8c>  // b.plast
    b5bc:	ldr	x0, [sp]
    b5c0:	ldr	w1, [x0]
    b5c4:	ldr	x0, [sp, #8]
    b5c8:	ldr	w0, [x0]
    b5cc:	cmp	w1, w0
    b5d0:	b.hi	b5f8 <grub_video_have_common_points+0x84>  // b.pmore
    b5d4:	ldr	x0, [sp, #8]
    b5d8:	ldr	w1, [x0]
    b5dc:	ldr	x0, [sp]
    b5e0:	ldr	w2, [x0]
    b5e4:	ldr	x0, [sp]
    b5e8:	ldr	w0, [x0, #8]
    b5ec:	add	w0, w2, w0
    b5f0:	cmp	w1, w0
    b5f4:	b.ls	b600 <grub_video_have_common_points+0x8c>  // b.plast
    b5f8:	mov	w0, #0x0                   	// #0
    b5fc:	b	b684 <grub_video_have_common_points+0x110>
    b600:	ldr	x0, [sp, #8]
    b604:	ldr	w1, [x0, #4]
    b608:	ldr	x0, [sp]
    b60c:	ldr	w0, [x0, #4]
    b610:	cmp	w1, w0
    b614:	b.hi	b63c <grub_video_have_common_points+0xc8>  // b.pmore
    b618:	ldr	x0, [sp]
    b61c:	ldr	w1, [x0, #4]
    b620:	ldr	x0, [sp, #8]
    b624:	ldr	w2, [x0, #4]
    b628:	ldr	x0, [sp, #8]
    b62c:	ldr	w0, [x0, #12]
    b630:	add	w0, w2, w0
    b634:	cmp	w1, w0
    b638:	b.ls	b680 <grub_video_have_common_points+0x10c>  // b.plast
    b63c:	ldr	x0, [sp]
    b640:	ldr	w1, [x0, #4]
    b644:	ldr	x0, [sp, #8]
    b648:	ldr	w0, [x0, #4]
    b64c:	cmp	w1, w0
    b650:	b.hi	b678 <grub_video_have_common_points+0x104>  // b.pmore
    b654:	ldr	x0, [sp, #8]
    b658:	ldr	w1, [x0, #4]
    b65c:	ldr	x0, [sp]
    b660:	ldr	w2, [x0, #4]
    b664:	ldr	x0, [sp]
    b668:	ldr	w0, [x0, #12]
    b66c:	add	w0, w2, w0
    b670:	cmp	w1, w0
    b674:	b.ls	b680 <grub_video_have_common_points+0x10c>  // b.plast
    b678:	mov	w0, #0x0                   	// #0
    b67c:	b	b684 <grub_video_have_common_points+0x110>
    b680:	mov	w0, #0x1                   	// #1
    b684:	add	sp, sp, #0x10
    b688:	ret

000000000000b68c <image_destroy>:
    b68c:	stp	x29, x30, [sp, #-48]!
    b690:	mov	x29, sp
    b694:	str	x0, [sp, #24]
    b698:	ldr	x0, [sp, #24]
    b69c:	str	x0, [sp, #40]
    b6a0:	ldr	x0, [sp, #40]
    b6a4:	ldr	x0, [x0, #88]
    b6a8:	cmp	x0, #0x0
    b6ac:	b.eq	b6d4 <image_destroy+0x48>  // b.none
    b6b0:	ldr	x0, [sp, #40]
    b6b4:	ldr	x1, [x0, #88]
    b6b8:	ldr	x0, [sp, #40]
    b6bc:	ldr	x0, [x0, #80]
    b6c0:	cmp	x1, x0
    b6c4:	b.eq	b6d4 <image_destroy+0x48>  // b.none
    b6c8:	ldr	x0, [sp, #40]
    b6cc:	ldr	x0, [x0, #88]
    b6d0:	bl	0 <grub_video_bitmap_destroy>
    b6d4:	ldr	x0, [sp, #40]
    b6d8:	ldr	x0, [x0, #80]
    b6dc:	cmp	x0, #0x0
    b6e0:	b.eq	b6f0 <image_destroy+0x64>  // b.none
    b6e4:	ldr	x0, [sp, #40]
    b6e8:	ldr	x0, [x0, #80]
    b6ec:	bl	0 <grub_video_bitmap_destroy>
    b6f0:	ldr	x0, [sp, #40]
    b6f4:	bl	0 <grub_free>
    b6f8:	nop
    b6fc:	ldp	x29, x30, [sp], #48
    b700:	ret

000000000000b704 <image_get_id>:
    b704:	sub	sp, sp, #0x20
    b708:	str	x0, [sp, #8]
    b70c:	ldr	x0, [sp, #8]
    b710:	str	x0, [sp, #24]
    b714:	ldr	x0, [sp, #24]
    b718:	ldr	x0, [x0, #64]
    b71c:	add	sp, sp, #0x20
    b720:	ret

000000000000b724 <image_is_instance>:
    b724:	stp	x29, x30, [sp, #-32]!
    b728:	mov	x29, sp
    b72c:	str	x0, [sp, #24]
    b730:	str	x1, [sp, #16]
    b734:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    b738:	add	x0, x0, #0x0
    b73c:	ldr	x1, [x0]
    b740:	ldr	x0, [sp, #16]
    b744:	bl	0 <grub_strcmp>
    b748:	cmp	w0, #0x0
    b74c:	cset	w0, eq  // eq = none
    b750:	and	w0, w0, #0xff
    b754:	ldp	x29, x30, [sp], #32
    b758:	ret
    b75c:	nop
	...

000000000000b768 <image_paint>:
    b768:	stp	x29, x30, [sp, #-80]!
    b76c:	mov	x29, sp
    b770:	stp	x19, x20, [sp, #16]
    b774:	str	x0, [sp, #40]
    b778:	str	x1, [sp, #32]
    b77c:	ldr	x0, [sp, #40]
    b780:	str	x0, [sp, #72]
    b784:	ldr	x0, [sp, #72]
    b788:	ldr	x0, [x0, #88]
    b78c:	cmp	x0, #0x0
    b790:	b.eq	b814 <image_paint+0xac>  // b.none
    b794:	ldr	x0, [sp, #72]
    b798:	add	x0, x0, #0x30
    b79c:	mov	x1, x0
    b7a0:	ldr	x0, [sp, #32]
    b7a4:	bl	b574 <grub_video_have_common_points>
    b7a8:	cmp	w0, #0x0
    b7ac:	b.eq	b81c <image_paint+0xb4>  // b.none
    b7b0:	ldr	x0, [sp, #72]
    b7b4:	add	x0, x0, #0x30
    b7b8:	add	x1, sp, #0x38
    b7bc:	bl	b50c <grub_gui_set_viewport>
    b7c0:	ldr	x0, [sp, #72]
    b7c4:	ldr	x19, [x0, #88]
    b7c8:	ldr	x0, [sp, #72]
    b7cc:	ldr	x0, [x0, #88]
    b7d0:	bl	b430 <grub_video_bitmap_get_width>
    b7d4:	mov	w20, w0
    b7d8:	ldr	x0, [sp, #72]
    b7dc:	ldr	x0, [x0, #88]
    b7e0:	bl	b45c <grub_video_bitmap_get_height>
    b7e4:	mov	w7, w0
    b7e8:	mov	w6, w20
    b7ec:	mov	w5, #0x0                   	// #0
    b7f0:	mov	w4, #0x0                   	// #0
    b7f4:	mov	w3, #0x0                   	// #0
    b7f8:	mov	w2, #0x0                   	// #0
    b7fc:	mov	w1, #0x1                   	// #1
    b800:	mov	x0, x19
    b804:	bl	0 <grub_video_blit_bitmap>
    b808:	add	x0, sp, #0x38
    b80c:	bl	b4c8 <grub_gui_restore_viewport>
    b810:	b	b820 <image_paint+0xb8>
    b814:	nop
    b818:	b	b820 <image_paint+0xb8>
    b81c:	nop
    b820:	ldp	x19, x20, [sp, #16]
    b824:	ldp	x29, x30, [sp], #80
    b828:	ret

000000000000b82c <image_set_parent>:
    b82c:	sub	sp, sp, #0x20
    b830:	str	x0, [sp, #8]
    b834:	str	x1, [sp]
    b838:	ldr	x0, [sp, #8]
    b83c:	str	x0, [sp, #24]
    b840:	ldr	x0, [sp, #24]
    b844:	ldr	x1, [sp]
    b848:	str	x1, [x0, #40]
    b84c:	nop
    b850:	add	sp, sp, #0x20
    b854:	ret

000000000000b858 <image_get_parent>:
    b858:	sub	sp, sp, #0x20
    b85c:	str	x0, [sp, #8]
    b860:	ldr	x0, [sp, #8]
    b864:	str	x0, [sp, #24]
    b868:	ldr	x0, [sp, #24]
    b86c:	ldr	x0, [x0, #40]
    b870:	add	sp, sp, #0x20
    b874:	ret

000000000000b878 <rescale_image>:
    b878:	stp	x29, x30, [sp, #-48]!
    b87c:	mov	x29, sp
    b880:	str	x0, [sp, #24]
    b884:	ldr	x0, [sp, #24]
    b888:	ldr	x0, [x0, #80]
    b88c:	cmp	x0, #0x0
    b890:	b.ne	b8cc <rescale_image+0x54>  // b.any
    b894:	ldr	x0, [sp, #24]
    b898:	ldr	x0, [x0, #88]
    b89c:	cmp	x0, #0x0
    b8a0:	b.eq	b8b8 <rescale_image+0x40>  // b.none
    b8a4:	ldr	x0, [sp, #24]
    b8a8:	ldr	x0, [x0, #88]
    b8ac:	bl	0 <grub_video_bitmap_destroy>
    b8b0:	ldr	x0, [sp, #24]
    b8b4:	str	xzr, [x0, #88]
    b8b8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    b8bc:	add	x0, x0, #0x0
    b8c0:	ldr	x0, [x0]
    b8c4:	ldr	w0, [x0]
    b8c8:	b	ba3c <rescale_image+0x1c4>
    b8cc:	ldr	x0, [sp, #24]
    b8d0:	ldr	w0, [x0, #56]
    b8d4:	str	w0, [sp, #44]
    b8d8:	ldr	x0, [sp, #24]
    b8dc:	ldr	w0, [x0, #60]
    b8e0:	str	w0, [sp, #40]
    b8e4:	ldr	x0, [sp, #24]
    b8e8:	ldr	x0, [x0, #88]
    b8ec:	cmp	x0, #0x0
    b8f0:	b.eq	b940 <rescale_image+0xc8>  // b.none
    b8f4:	ldr	x0, [sp, #24]
    b8f8:	ldr	x0, [x0, #88]
    b8fc:	bl	b430 <grub_video_bitmap_get_width>
    b900:	mov	w1, w0
    b904:	ldr	w0, [sp, #44]
    b908:	cmp	w0, w1
    b90c:	b.ne	b940 <rescale_image+0xc8>  // b.any
    b910:	ldr	x0, [sp, #24]
    b914:	ldr	x0, [x0, #88]
    b918:	bl	b45c <grub_video_bitmap_get_height>
    b91c:	mov	w1, w0
    b920:	ldr	w0, [sp, #40]
    b924:	cmp	w0, w1
    b928:	b.ne	b940 <rescale_image+0xc8>  // b.any
    b92c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    b930:	add	x0, x0, #0x0
    b934:	ldr	x0, [x0]
    b938:	ldr	w0, [x0]
    b93c:	b	ba3c <rescale_image+0x1c4>
    b940:	ldr	x0, [sp, #24]
    b944:	ldr	x0, [x0, #88]
    b948:	cmp	x0, #0x0
    b94c:	b.eq	b974 <rescale_image+0xfc>  // b.none
    b950:	ldr	x0, [sp, #24]
    b954:	ldr	x1, [x0, #88]
    b958:	ldr	x0, [sp, #24]
    b95c:	ldr	x0, [x0, #80]
    b960:	cmp	x1, x0
    b964:	b.eq	b974 <rescale_image+0xfc>  // b.none
    b968:	ldr	x0, [sp, #24]
    b96c:	ldr	x0, [x0, #88]
    b970:	bl	0 <grub_video_bitmap_destroy>
    b974:	ldr	x0, [sp, #24]
    b978:	str	xzr, [x0, #88]
    b97c:	ldr	x0, [sp, #24]
    b980:	ldr	x0, [x0, #80]
    b984:	bl	b430 <grub_video_bitmap_get_width>
    b988:	mov	w1, w0
    b98c:	ldr	w0, [sp, #44]
    b990:	cmp	w0, w1
    b994:	b.ne	b9d8 <rescale_image+0x160>  // b.any
    b998:	ldr	x0, [sp, #24]
    b99c:	ldr	x0, [x0, #80]
    b9a0:	bl	b45c <grub_video_bitmap_get_height>
    b9a4:	mov	w1, w0
    b9a8:	ldr	w0, [sp, #40]
    b9ac:	cmp	w0, w1
    b9b0:	b.ne	b9d8 <rescale_image+0x160>  // b.any
    b9b4:	ldr	x0, [sp, #24]
    b9b8:	ldr	x1, [x0, #80]
    b9bc:	ldr	x0, [sp, #24]
    b9c0:	str	x1, [x0, #88]
    b9c4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    b9c8:	add	x0, x0, #0x0
    b9cc:	ldr	x0, [x0]
    b9d0:	ldr	w0, [x0]
    b9d4:	b	ba3c <rescale_image+0x1c4>
    b9d8:	ldr	w0, [sp, #44]
    b9dc:	cmp	w0, #0x0
    b9e0:	b.le	b9f0 <rescale_image+0x178>
    b9e4:	ldr	w0, [sp, #40]
    b9e8:	cmp	w0, #0x0
    b9ec:	b.gt	ba04 <rescale_image+0x18c>
    b9f0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    b9f4:	add	x0, x0, #0x0
    b9f8:	ldr	x0, [x0]
    b9fc:	ldr	w0, [x0]
    ba00:	b	ba3c <rescale_image+0x1c4>
    ba04:	ldr	x0, [sp, #24]
    ba08:	add	x5, x0, #0x58
    ba0c:	ldr	x0, [sp, #24]
    ba10:	ldr	x0, [x0, #80]
    ba14:	mov	w4, #0x1                   	// #1
    ba18:	mov	x3, x0
    ba1c:	ldr	w2, [sp, #40]
    ba20:	ldr	w1, [sp, #44]
    ba24:	mov	x0, x5
    ba28:	bl	0 <grub_video_bitmap_create_scaled>
    ba2c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    ba30:	add	x0, x0, #0x0
    ba34:	ldr	x0, [x0]
    ba38:	ldr	w0, [x0]
    ba3c:	ldp	x29, x30, [sp], #48
    ba40:	ret
    ba44:	nop
	...

000000000000ba50 <image_set_bounds>:
    ba50:	stp	x29, x30, [sp, #-48]!
    ba54:	mov	x29, sp
    ba58:	str	x0, [sp, #24]
    ba5c:	str	x1, [sp, #16]
    ba60:	ldr	x0, [sp, #24]
    ba64:	str	x0, [sp, #40]
    ba68:	ldr	x2, [sp, #40]
    ba6c:	ldr	x0, [sp, #16]
    ba70:	ldp	x0, x1, [x0]
    ba74:	stp	x0, x1, [x2, #48]
    ba78:	ldr	x0, [sp, #40]
    ba7c:	bl	b878 <rescale_image>
    ba80:	nop
    ba84:	ldp	x29, x30, [sp], #48
    ba88:	ret

000000000000ba8c <image_get_bounds>:
    ba8c:	sub	sp, sp, #0x20
    ba90:	str	x0, [sp, #8]
    ba94:	str	x1, [sp]
    ba98:	ldr	x0, [sp, #8]
    ba9c:	str	x0, [sp, #24]
    baa0:	ldr	x2, [sp]
    baa4:	ldr	x0, [sp, #24]
    baa8:	ldp	x0, x1, [x0, #48]
    baac:	stp	x0, x1, [x2]
    bab0:	nop
    bab4:	add	sp, sp, #0x20
    bab8:	ret

000000000000babc <image_get_minimal_size>:
    babc:	stp	x29, x30, [sp, #-64]!
    bac0:	mov	x29, sp
    bac4:	str	x0, [sp, #40]
    bac8:	str	x1, [sp, #32]
    bacc:	str	x2, [sp, #24]
    bad0:	ldr	x0, [sp, #40]
    bad4:	str	x0, [sp, #56]
    bad8:	ldr	x0, [sp, #56]
    badc:	ldr	x0, [x0, #80]
    bae0:	cmp	x0, #0x0
    bae4:	b.eq	bb1c <image_get_minimal_size+0x60>  // b.none
    bae8:	ldr	x0, [sp, #56]
    baec:	ldr	x0, [x0, #80]
    baf0:	bl	b430 <grub_video_bitmap_get_width>
    baf4:	mov	w1, w0
    baf8:	ldr	x0, [sp, #32]
    bafc:	str	w1, [x0]
    bb00:	ldr	x0, [sp, #56]
    bb04:	ldr	x0, [x0, #80]
    bb08:	bl	b45c <grub_video_bitmap_get_height>
    bb0c:	mov	w1, w0
    bb10:	ldr	x0, [sp, #24]
    bb14:	str	w1, [x0]
    bb18:	b	bb2c <image_get_minimal_size+0x70>
    bb1c:	ldr	x0, [sp, #32]
    bb20:	str	wzr, [x0]
    bb24:	ldr	x0, [sp, #24]
    bb28:	str	wzr, [x0]
    bb2c:	nop
    bb30:	ldp	x29, x30, [sp], #64
    bb34:	ret

000000000000bb38 <load_image>:
    bb38:	stp	x29, x30, [sp, #-48]!
    bb3c:	mov	x29, sp
    bb40:	str	x0, [sp, #24]
    bb44:	str	x1, [sp, #16]
    bb48:	add	x0, sp, #0x28
    bb4c:	ldr	x1, [sp, #16]
    bb50:	bl	0 <grub_video_bitmap_load>
    bb54:	cmp	w0, #0x0
    bb58:	b.eq	bb70 <load_image+0x38>  // b.none
    bb5c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    bb60:	add	x0, x0, #0x0
    bb64:	ldr	x0, [x0]
    bb68:	ldr	w0, [x0]
    bb6c:	b	bbd4 <load_image+0x9c>
    bb70:	ldr	x0, [sp, #24]
    bb74:	ldr	x0, [x0, #88]
    bb78:	cmp	x0, #0x0
    bb7c:	b.eq	bba4 <load_image+0x6c>  // b.none
    bb80:	ldr	x0, [sp, #24]
    bb84:	ldr	x1, [x0, #88]
    bb88:	ldr	x0, [sp, #24]
    bb8c:	ldr	x0, [x0, #80]
    bb90:	cmp	x1, x0
    bb94:	b.eq	bba4 <load_image+0x6c>  // b.none
    bb98:	ldr	x0, [sp, #24]
    bb9c:	ldr	x0, [x0, #88]
    bba0:	bl	0 <grub_video_bitmap_destroy>
    bba4:	ldr	x0, [sp, #24]
    bba8:	ldr	x0, [x0, #80]
    bbac:	cmp	x0, #0x0
    bbb0:	b.eq	bbc0 <load_image+0x88>  // b.none
    bbb4:	ldr	x0, [sp, #24]
    bbb8:	ldr	x0, [x0, #80]
    bbbc:	bl	0 <grub_video_bitmap_destroy>
    bbc0:	ldr	x1, [sp, #40]
    bbc4:	ldr	x0, [sp, #24]
    bbc8:	str	x1, [x0, #80]
    bbcc:	ldr	x0, [sp, #24]
    bbd0:	bl	b878 <rescale_image>
    bbd4:	ldp	x29, x30, [sp], #48
    bbd8:	ret
    bbdc:	nop
	...

000000000000bbe8 <image_set_property>:
    bbe8:	stp	x29, x30, [sp, #-80]!
    bbec:	mov	x29, sp
    bbf0:	str	x0, [sp, #40]
    bbf4:	str	x1, [sp, #32]
    bbf8:	str	x2, [sp, #24]
    bbfc:	ldr	x0, [sp, #40]
    bc00:	str	x0, [sp, #72]
    bc04:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    bc08:	add	x0, x0, #0x0
    bc0c:	ldr	x1, [x0]
    bc10:	ldr	x0, [sp, #32]
    bc14:	bl	0 <grub_strcmp>
    bc18:	cmp	w0, #0x0
    bc1c:	b.ne	bc44 <image_set_property+0x5c>  // b.any
    bc20:	ldr	x0, [sp, #72]
    bc24:	ldr	x0, [x0, #72]
    bc28:	bl	0 <grub_free>
    bc2c:	ldr	x0, [sp, #24]
    bc30:	bl	0 <grub_strdup>
    bc34:	mov	x1, x0
    bc38:	ldr	x0, [sp, #72]
    bc3c:	str	x1, [x0, #72]
    bc40:	b	bd30 <image_set_property+0x148>
    bc44:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    bc48:	add	x0, x0, #0x0
    bc4c:	ldr	x1, [x0]
    bc50:	ldr	x0, [sp, #32]
    bc54:	bl	0 <grub_strcmp>
    bc58:	cmp	w0, #0x0
    bc5c:	b.ne	bcdc <image_set_property+0xf4>  // b.any
    bc60:	ldr	x0, [sp, #72]
    bc64:	ldr	x0, [x0, #72]
    bc68:	cmp	x0, #0x0
    bc6c:	b.ne	bc88 <image_set_property+0xa0>  // b.any
    bc70:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    bc74:	add	x0, x0, #0x0
    bc78:	ldr	x1, [x0]
    bc7c:	mov	w0, #0x26                  	// #38
    bc80:	bl	0 <grub_error>
    bc84:	b	bd40 <image_set_property+0x158>
    bc88:	ldr	x0, [sp, #72]
    bc8c:	ldr	x0, [x0, #72]
    bc90:	ldr	x1, [sp, #24]
    bc94:	bl	d9e0 <grub_resolve_relative_path>
    bc98:	str	x0, [sp, #64]
    bc9c:	ldr	x0, [sp, #64]
    bca0:	cmp	x0, #0x0
    bca4:	b.ne	bcbc <image_set_property+0xd4>  // b.any
    bca8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    bcac:	add	x0, x0, #0x0
    bcb0:	ldr	x0, [x0]
    bcb4:	ldr	w0, [x0]
    bcb8:	b	bd40 <image_set_property+0x158>
    bcbc:	ldr	x1, [sp, #64]
    bcc0:	ldr	x0, [sp, #72]
    bcc4:	bl	bb38 <load_image>
    bcc8:	str	w0, [sp, #60]
    bccc:	ldr	x0, [sp, #64]
    bcd0:	bl	0 <grub_free>
    bcd4:	ldr	w0, [sp, #60]
    bcd8:	b	bd40 <image_set_property+0x158>
    bcdc:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    bce0:	add	x0, x0, #0x0
    bce4:	ldr	x1, [x0]
    bce8:	ldr	x0, [sp, #32]
    bcec:	bl	0 <grub_strcmp>
    bcf0:	cmp	w0, #0x0
    bcf4:	b.ne	bd30 <image_set_property+0x148>  // b.any
    bcf8:	ldr	x0, [sp, #72]
    bcfc:	ldr	x0, [x0, #64]
    bd00:	bl	0 <grub_free>
    bd04:	ldr	x0, [sp, #24]
    bd08:	cmp	x0, #0x0
    bd0c:	b.eq	bd28 <image_set_property+0x140>  // b.none
    bd10:	ldr	x0, [sp, #24]
    bd14:	bl	0 <grub_strdup>
    bd18:	mov	x1, x0
    bd1c:	ldr	x0, [sp, #72]
    bd20:	str	x1, [x0, #64]
    bd24:	b	bd30 <image_set_property+0x148>
    bd28:	ldr	x0, [sp, #72]
    bd2c:	str	xzr, [x0, #64]
    bd30:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    bd34:	add	x0, x0, #0x0
    bd38:	ldr	x0, [x0]
    bd3c:	ldr	w0, [x0]
    bd40:	ldp	x29, x30, [sp], #80
    bd44:	ret
	...

000000000000bd70 <grub_gui_image_new>:
    bd70:	stp	x29, x30, [sp, #-32]!
    bd74:	mov	x29, sp
    bd78:	mov	x0, #0x60                  	// #96
    bd7c:	bl	0 <grub_zalloc>
    bd80:	str	x0, [sp, #24]
    bd84:	ldr	x0, [sp, #24]
    bd88:	cmp	x0, #0x0
    bd8c:	b.ne	bd98 <grub_gui_image_new+0x28>  // b.any
    bd90:	mov	x0, #0x0                   	// #0
    bd94:	b	bdb0 <grub_gui_image_new+0x40>
    bd98:	ldr	x0, [sp, #24]
    bd9c:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    bda0:	add	x1, x1, #0x0
    bda4:	ldr	x1, [x1]
    bda8:	str	x1, [x0]
    bdac:	ldr	x0, [sp, #24]
    bdb0:	ldp	x29, x30, [sp], #32
    bdb4:	ret
	...

000000000000bdc0 <grub_video_map_rgba_color>:
    bdc0:	stp	x29, x30, [sp, #-32]!
    bdc4:	mov	x29, sp
    bdc8:	str	w0, [sp, #24]
    bdcc:	ldrb	w0, [sp, #24]
    bdd0:	ldrb	w1, [sp, #25]
    bdd4:	ldrb	w2, [sp, #26]
    bdd8:	ldrb	w3, [sp, #27]
    bddc:	bl	0 <grub_video_map_rgba>
    bde0:	ldp	x29, x30, [sp], #32
    bde4:	ret

000000000000bde8 <grub_font_get_ascent>:
    bde8:	sub	sp, sp, #0x10
    bdec:	str	x0, [sp, #8]
    bdf0:	ldr	x0, [sp, #8]
    bdf4:	ldrsh	w0, [x0, #32]
    bdf8:	add	sp, sp, #0x10
    bdfc:	ret

000000000000be00 <grub_gfxmenu_timeout_register>:
    be00:	stp	x29, x30, [sp, #-48]!
    be04:	mov	x29, sp
    be08:	str	x0, [sp, #24]
    be0c:	str	x1, [sp, #16]
    be10:	mov	x0, #0x18                  	// #24
    be14:	bl	0 <grub_malloc>
    be18:	str	x0, [sp, #40]
    be1c:	ldr	x0, [sp, #40]
    be20:	cmp	x0, #0x0
    be24:	b.ne	be3c <grub_gfxmenu_timeout_register+0x3c>  // b.any
    be28:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    be2c:	add	x0, x0, #0x0
    be30:	ldr	x0, [x0]
    be34:	ldr	w0, [x0]
    be38:	b	be84 <grub_gfxmenu_timeout_register+0x84>
    be3c:	ldr	x0, [sp, #40]
    be40:	ldr	x1, [sp, #16]
    be44:	str	x1, [x0, #8]
    be48:	ldr	x0, [sp, #40]
    be4c:	ldr	x1, [sp, #24]
    be50:	str	x1, [x0, #16]
    be54:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    be58:	add	x0, x0, #0x0
    be5c:	ldr	x0, [x0]
    be60:	ldr	x1, [x0]
    be64:	ldr	x0, [sp, #40]
    be68:	str	x1, [x0]
    be6c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    be70:	add	x0, x0, #0x0
    be74:	ldr	x0, [x0]
    be78:	ldr	x1, [sp, #40]
    be7c:	str	x1, [x0]
    be80:	mov	w0, #0x0                   	// #0
    be84:	ldp	x29, x30, [sp], #48
    be88:	ret
    be8c:	nop
	...

000000000000bea0 <grub_gfxmenu_timeout_unregister>:
    bea0:	stp	x29, x30, [sp, #-48]!
    bea4:	mov	x29, sp
    bea8:	str	x0, [sp, #24]
    beac:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    beb0:	add	x0, x0, #0x0
    beb4:	ldr	x0, [x0]
    beb8:	str	x0, [sp, #40]
    bebc:	ldr	x0, [sp, #40]
    bec0:	ldr	x0, [x0]
    bec4:	str	x0, [sp, #32]
    bec8:	b	bf10 <grub_gfxmenu_timeout_unregister+0x70>
    becc:	ldr	x0, [sp, #32]
    bed0:	ldr	x0, [x0, #16]
    bed4:	ldr	x1, [sp, #24]
    bed8:	cmp	x1, x0
    bedc:	b.ne	befc <grub_gfxmenu_timeout_unregister+0x5c>  // b.any
    bee0:	ldr	x0, [sp, #32]
    bee4:	ldr	x1, [x0]
    bee8:	ldr	x0, [sp, #40]
    beec:	str	x1, [x0]
    bef0:	ldr	x0, [sp, #32]
    bef4:	bl	0 <grub_free>
    bef8:	b	bf20 <grub_gfxmenu_timeout_unregister+0x80>
    befc:	ldr	x0, [sp, #32]
    bf00:	str	x0, [sp, #40]
    bf04:	ldr	x0, [sp, #32]
    bf08:	ldr	x0, [x0]
    bf0c:	str	x0, [sp, #32]
    bf10:	ldr	x0, [sp, #32]
    bf14:	cmp	x0, #0x0
    bf18:	b.ne	becc <grub_gfxmenu_timeout_unregister+0x2c>  // b.any
    bf1c:	nop
    bf20:	nop
    bf24:	ldp	x29, x30, [sp], #48
    bf28:	ret
    bf2c:	nop
	...

000000000000bf38 <grub_gui_save_viewport>:
    bf38:	stp	x29, x30, [sp, #-32]!
    bf3c:	mov	x29, sp
    bf40:	str	x0, [sp, #24]
    bf44:	ldr	x4, [sp, #24]
    bf48:	ldr	x0, [sp, #24]
    bf4c:	add	x1, x0, #0x4
    bf50:	ldr	x0, [sp, #24]
    bf54:	add	x2, x0, #0x8
    bf58:	ldr	x0, [sp, #24]
    bf5c:	add	x0, x0, #0xc
    bf60:	mov	x3, x0
    bf64:	mov	x0, x4
    bf68:	bl	0 <grub_video_get_viewport>
    bf6c:	nop
    bf70:	ldp	x29, x30, [sp], #32
    bf74:	ret

000000000000bf78 <grub_gui_restore_viewport>:
    bf78:	stp	x29, x30, [sp, #-32]!
    bf7c:	mov	x29, sp
    bf80:	str	x0, [sp, #24]
    bf84:	ldr	x0, [sp, #24]
    bf88:	ldr	w4, [x0]
    bf8c:	ldr	x0, [sp, #24]
    bf90:	ldr	w1, [x0, #4]
    bf94:	ldr	x0, [sp, #24]
    bf98:	ldr	w2, [x0, #8]
    bf9c:	ldr	x0, [sp, #24]
    bfa0:	ldr	w0, [x0, #12]
    bfa4:	mov	w3, w0
    bfa8:	mov	w0, w4
    bfac:	bl	0 <grub_video_set_viewport>
    bfb0:	nop
    bfb4:	ldp	x29, x30, [sp], #32
    bfb8:	ret

000000000000bfbc <grub_gui_set_viewport>:
    bfbc:	stp	x29, x30, [sp, #-32]!
    bfc0:	mov	x29, sp
    bfc4:	str	x0, [sp, #24]
    bfc8:	str	x1, [sp, #16]
    bfcc:	ldr	x0, [sp, #16]
    bfd0:	bl	bf38 <grub_gui_save_viewport>
    bfd4:	ldr	x0, [sp, #16]
    bfd8:	ldr	w1, [x0]
    bfdc:	ldr	x0, [sp, #24]
    bfe0:	ldr	w0, [x0]
    bfe4:	add	w4, w1, w0
    bfe8:	ldr	x0, [sp, #16]
    bfec:	ldr	w1, [x0, #4]
    bff0:	ldr	x0, [sp, #24]
    bff4:	ldr	w0, [x0, #4]
    bff8:	add	w1, w1, w0
    bffc:	ldr	x0, [sp, #24]
    c000:	ldr	w2, [x0, #8]
    c004:	ldr	x0, [sp, #24]
    c008:	ldr	w0, [x0, #12]
    c00c:	mov	w3, w0
    c010:	mov	w0, w4
    c014:	bl	0 <grub_video_set_viewport>
    c018:	nop
    c01c:	ldp	x29, x30, [sp], #32
    c020:	ret

000000000000c024 <grub_video_have_common_points>:
    c024:	sub	sp, sp, #0x10
    c028:	str	x0, [sp, #8]
    c02c:	str	x1, [sp]
    c030:	ldr	x0, [sp, #8]
    c034:	ldr	w1, [x0]
    c038:	ldr	x0, [sp]
    c03c:	ldr	w0, [x0]
    c040:	cmp	w1, w0
    c044:	b.hi	c06c <grub_video_have_common_points+0x48>  // b.pmore
    c048:	ldr	x0, [sp]
    c04c:	ldr	w1, [x0]
    c050:	ldr	x0, [sp, #8]
    c054:	ldr	w2, [x0]
    c058:	ldr	x0, [sp, #8]
    c05c:	ldr	w0, [x0, #8]
    c060:	add	w0, w2, w0
    c064:	cmp	w1, w0
    c068:	b.ls	c0b0 <grub_video_have_common_points+0x8c>  // b.plast
    c06c:	ldr	x0, [sp]
    c070:	ldr	w1, [x0]
    c074:	ldr	x0, [sp, #8]
    c078:	ldr	w0, [x0]
    c07c:	cmp	w1, w0
    c080:	b.hi	c0a8 <grub_video_have_common_points+0x84>  // b.pmore
    c084:	ldr	x0, [sp, #8]
    c088:	ldr	w1, [x0]
    c08c:	ldr	x0, [sp]
    c090:	ldr	w2, [x0]
    c094:	ldr	x0, [sp]
    c098:	ldr	w0, [x0, #8]
    c09c:	add	w0, w2, w0
    c0a0:	cmp	w1, w0
    c0a4:	b.ls	c0b0 <grub_video_have_common_points+0x8c>  // b.plast
    c0a8:	mov	w0, #0x0                   	// #0
    c0ac:	b	c134 <grub_video_have_common_points+0x110>
    c0b0:	ldr	x0, [sp, #8]
    c0b4:	ldr	w1, [x0, #4]
    c0b8:	ldr	x0, [sp]
    c0bc:	ldr	w0, [x0, #4]
    c0c0:	cmp	w1, w0
    c0c4:	b.hi	c0ec <grub_video_have_common_points+0xc8>  // b.pmore
    c0c8:	ldr	x0, [sp]
    c0cc:	ldr	w1, [x0, #4]
    c0d0:	ldr	x0, [sp, #8]
    c0d4:	ldr	w2, [x0, #4]
    c0d8:	ldr	x0, [sp, #8]
    c0dc:	ldr	w0, [x0, #12]
    c0e0:	add	w0, w2, w0
    c0e4:	cmp	w1, w0
    c0e8:	b.ls	c130 <grub_video_have_common_points+0x10c>  // b.plast
    c0ec:	ldr	x0, [sp]
    c0f0:	ldr	w1, [x0, #4]
    c0f4:	ldr	x0, [sp, #8]
    c0f8:	ldr	w0, [x0, #4]
    c0fc:	cmp	w1, w0
    c100:	b.hi	c128 <grub_video_have_common_points+0x104>  // b.pmore
    c104:	ldr	x0, [sp, #8]
    c108:	ldr	w1, [x0, #4]
    c10c:	ldr	x0, [sp]
    c110:	ldr	w2, [x0, #4]
    c114:	ldr	x0, [sp]
    c118:	ldr	w0, [x0, #12]
    c11c:	add	w0, w2, w0
    c120:	cmp	w1, w0
    c124:	b.ls	c130 <grub_video_have_common_points+0x10c>  // b.plast
    c128:	mov	w0, #0x0                   	// #0
    c12c:	b	c134 <grub_video_have_common_points+0x110>
    c130:	mov	w0, #0x1                   	// #1
    c134:	add	sp, sp, #0x10
    c138:	ret

000000000000c13c <progress_bar_destroy>:
    c13c:	stp	x29, x30, [sp, #-48]!
    c140:	mov	x29, sp
    c144:	str	x0, [sp, #24]
    c148:	ldr	x0, [sp, #24]
    c14c:	str	x0, [sp, #40]
    c150:	ldr	x0, [sp, #40]
    c154:	ldr	x0, [x0, #128]
    c158:	bl	0 <grub_free>
    c15c:	ldr	x0, [sp, #40]
    c160:	ldr	x0, [x0, #96]
    c164:	bl	0 <grub_free>
    c168:	ldr	x0, [sp, #40]
    c16c:	ldr	x0, [x0, #72]
    c170:	bl	0 <grub_free>
    c174:	ldr	x0, [sp, #40]
    c178:	bl	bea0 <grub_gfxmenu_timeout_unregister>
    c17c:	ldr	x0, [sp, #40]
    c180:	bl	0 <grub_free>
    c184:	nop
    c188:	ldp	x29, x30, [sp], #48
    c18c:	ret

000000000000c190 <progress_bar_get_id>:
    c190:	sub	sp, sp, #0x20
    c194:	str	x0, [sp, #8]
    c198:	ldr	x0, [sp, #8]
    c19c:	str	x0, [sp, #24]
    c1a0:	ldr	x0, [sp, #24]
    c1a4:	ldr	x0, [x0, #72]
    c1a8:	add	sp, sp, #0x20
    c1ac:	ret

000000000000c1b0 <progress_bar_is_instance>:
    c1b0:	stp	x29, x30, [sp, #-32]!
    c1b4:	mov	x29, sp
    c1b8:	str	x0, [sp, #24]
    c1bc:	str	x1, [sp, #16]
    c1c0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    c1c4:	add	x0, x0, #0x0
    c1c8:	ldr	x1, [x0]
    c1cc:	ldr	x0, [sp, #16]
    c1d0:	bl	0 <grub_strcmp>
    c1d4:	cmp	w0, #0x0
    c1d8:	cset	w0, eq  // eq = none
    c1dc:	and	w0, w0, #0xff
    c1e0:	ldp	x29, x30, [sp], #32
    c1e4:	ret
	...

000000000000c1f0 <check_pixmaps>:
    c1f0:	stp	x29, x30, [sp, #-32]!
    c1f4:	mov	x29, sp
    c1f8:	str	x0, [sp, #24]
    c1fc:	ldr	x0, [sp, #24]
    c200:	ldr	w0, [x0, #140]
    c204:	cmp	w0, #0x0
    c208:	b.ne	c214 <check_pixmaps+0x24>  // b.any
    c20c:	mov	w0, #0x0                   	// #0
    c210:	b	c2a0 <check_pixmaps+0xb0>
    c214:	ldr	x0, [sp, #24]
    c218:	ldr	w0, [x0, #136]
    c21c:	cmp	w0, #0x0
    c220:	b.eq	c274 <check_pixmaps+0x84>  // b.none
    c224:	ldr	x0, [sp, #24]
    c228:	add	x3, x0, #0xa0
    c22c:	ldr	x0, [sp, #24]
    c230:	ldr	x1, [x0, #144]
    c234:	ldr	x0, [sp, #24]
    c238:	ldr	x0, [x0, #128]
    c23c:	mov	x2, x0
    c240:	mov	x0, x3
    c244:	bl	2820 <grub_gui_recreate_box>
    c248:	ldr	x0, [sp, #24]
    c24c:	add	x3, x0, #0xa8
    c250:	ldr	x0, [sp, #24]
    c254:	ldr	x1, [x0, #152]
    c258:	ldr	x0, [sp, #24]
    c25c:	ldr	x0, [x0, #128]
    c260:	mov	x2, x0
    c264:	mov	x0, x3
    c268:	bl	2820 <grub_gui_recreate_box>
    c26c:	ldr	x0, [sp, #24]
    c270:	str	wzr, [x0, #136]
    c274:	ldr	x0, [sp, #24]
    c278:	ldr	x0, [x0, #160]
    c27c:	cmp	x0, #0x0
    c280:	b.eq	c29c <check_pixmaps+0xac>  // b.none
    c284:	ldr	x0, [sp, #24]
    c288:	ldr	x0, [x0, #168]
    c28c:	cmp	x0, #0x0
    c290:	b.eq	c29c <check_pixmaps+0xac>  // b.none
    c294:	mov	w0, #0x1                   	// #1
    c298:	b	c2a0 <check_pixmaps+0xb0>
    c29c:	mov	w0, #0x0                   	// #0
    c2a0:	ldp	x29, x30, [sp], #32
    c2a4:	ret

000000000000c2a8 <draw_filled_rect_bar>:
    c2a8:	stp	x29, x30, [sp, #-64]!
    c2ac:	mov	x29, sp
    c2b0:	str	x0, [sp, #24]
    c2b4:	mov	w0, #0x1                   	// #1
    c2b8:	str	w0, [sp, #40]
    c2bc:	mov	w0, #0x1                   	// #1
    c2c0:	str	w0, [sp, #44]
    c2c4:	ldr	x0, [sp, #24]
    c2c8:	ldr	w0, [x0, #64]
    c2cc:	sub	w0, w0, #0x2
    c2d0:	str	w0, [sp, #48]
    c2d4:	ldr	x0, [sp, #24]
    c2d8:	ldr	w0, [x0, #68]
    c2dc:	sub	w0, w0, #0x2
    c2e0:	str	w0, [sp, #52]
    c2e4:	ldr	x0, [sp, #24]
    c2e8:	ldr	w0, [x0, #116]
    c2ec:	bl	bdc0 <grub_video_map_rgba_color>
    c2f0:	mov	w5, w0
    c2f4:	ldr	w0, [sp, #40]
    c2f8:	sub	w0, w0, #0x1
    c2fc:	mov	w6, w0
    c300:	ldr	w0, [sp, #44]
    c304:	sub	w0, w0, #0x1
    c308:	mov	w2, w0
    c30c:	ldr	w0, [sp, #48]
    c310:	add	w1, w0, #0x2
    c314:	ldr	w0, [sp, #52]
    c318:	add	w0, w0, #0x2
    c31c:	mov	w4, w0
    c320:	mov	w3, w1
    c324:	mov	w1, w6
    c328:	mov	w0, w5
    c32c:	bl	0 <grub_video_fill_rect>
    c330:	ldr	x0, [sp, #24]
    c334:	ldr	w1, [x0, #88]
    c338:	ldr	x0, [sp, #24]
    c33c:	ldr	w0, [x0, #84]
    c340:	cmp	w1, w0
    c344:	b.le	c360 <draw_filled_rect_bar+0xb8>
    c348:	ldr	x0, [sp, #24]
    c34c:	ldr	w1, [x0, #92]
    c350:	ldr	x0, [sp, #24]
    c354:	ldr	w0, [x0, #84]
    c358:	cmp	w1, w0
    c35c:	b.gt	c368 <draw_filled_rect_bar+0xc0>
    c360:	str	wzr, [sp, #60]
    c364:	b	c3a0 <draw_filled_rect_bar+0xf8>
    c368:	ldr	w0, [sp, #48]
    c36c:	ldr	x1, [sp, #24]
    c370:	ldr	w2, [x1, #92]
    c374:	ldr	x1, [sp, #24]
    c378:	ldr	w1, [x1, #84]
    c37c:	sub	w1, w2, w1
    c380:	mul	w0, w0, w1
    c384:	ldr	x1, [sp, #24]
    c388:	ldr	w2, [x1, #88]
    c38c:	ldr	x1, [sp, #24]
    c390:	ldr	w1, [x1, #84]
    c394:	sub	w1, w2, w1
    c398:	udiv	w0, w0, w1
    c39c:	str	w0, [sp, #60]
    c3a0:	ldr	x0, [sp, #24]
    c3a4:	ldr	w0, [x0, #120]
    c3a8:	bl	bdc0 <grub_video_map_rgba_color>
    c3ac:	mov	w5, w0
    c3b0:	ldr	w1, [sp, #40]
    c3b4:	ldr	w0, [sp, #60]
    c3b8:	add	w0, w1, w0
    c3bc:	mov	w6, w0
    c3c0:	ldr	w0, [sp, #44]
    c3c4:	mov	w2, w0
    c3c8:	ldr	w1, [sp, #48]
    c3cc:	ldr	w0, [sp, #60]
    c3d0:	sub	w0, w1, w0
    c3d4:	ldr	w1, [sp, #52]
    c3d8:	mov	w4, w1
    c3dc:	mov	w3, w0
    c3e0:	mov	w1, w6
    c3e4:	mov	w0, w5
    c3e8:	bl	0 <grub_video_fill_rect>
    c3ec:	ldr	x0, [sp, #24]
    c3f0:	ldr	w0, [x0, #124]
    c3f4:	bl	bdc0 <grub_video_map_rgba_color>
    c3f8:	mov	w5, w0
    c3fc:	ldr	w0, [sp, #40]
    c400:	mov	w1, w0
    c404:	ldr	w0, [sp, #44]
    c408:	mov	w2, w0
    c40c:	ldr	w0, [sp, #52]
    c410:	mov	w4, w0
    c414:	ldr	w3, [sp, #60]
    c418:	mov	w0, w5
    c41c:	bl	0 <grub_video_fill_rect>
    c420:	nop
    c424:	ldp	x29, x30, [sp], #64
    c428:	ret

000000000000c42c <draw_pixmap_bar>:
    c42c:	stp	x29, x30, [sp, #-144]!
    c430:	mov	x29, sp
    c434:	str	x0, [sp, #24]
    c438:	ldr	x0, [sp, #24]
    c43c:	ldr	x0, [x0, #160]
    c440:	str	x0, [sp, #112]
    c444:	ldr	x0, [sp, #24]
    c448:	ldr	x0, [x0, #168]
    c44c:	str	x0, [sp, #104]
    c450:	ldr	x0, [sp, #24]
    c454:	ldr	w0, [x0, #64]
    c458:	str	w0, [sp, #100]
    c45c:	ldr	x0, [sp, #24]
    c460:	ldr	w0, [x0, #68]
    c464:	str	w0, [sp, #96]
    c468:	ldr	x0, [sp, #112]
    c46c:	ldr	x1, [x0, #48]
    c470:	ldr	x0, [sp, #112]
    c474:	blr	x1
    c478:	str	w0, [sp, #92]
    c47c:	ldr	x0, [sp, #112]
    c480:	ldr	x1, [x0, #64]
    c484:	ldr	x0, [sp, #112]
    c488:	blr	x1
    c48c:	str	w0, [sp, #88]
    c490:	ldr	x0, [sp, #112]
    c494:	ldr	x1, [x0, #56]
    c498:	ldr	x0, [sp, #112]
    c49c:	blr	x1
    c4a0:	str	w0, [sp, #84]
    c4a4:	ldr	x0, [sp, #112]
    c4a8:	ldr	x1, [x0, #72]
    c4ac:	ldr	x0, [sp, #112]
    c4b0:	blr	x1
    c4b4:	str	w0, [sp, #80]
    c4b8:	ldr	w1, [sp, #92]
    c4bc:	ldr	w0, [sp, #88]
    c4c0:	add	w0, w1, w0
    c4c4:	str	w0, [sp, #76]
    c4c8:	ldr	w1, [sp, #84]
    c4cc:	ldr	w0, [sp, #80]
    c4d0:	add	w0, w1, w0
    c4d4:	str	w0, [sp, #72]
    c4d8:	ldr	x0, [sp, #104]
    c4dc:	ldr	x1, [x0, #48]
    c4e0:	ldr	x0, [sp, #104]
    c4e4:	blr	x1
    c4e8:	str	w0, [sp, #68]
    c4ec:	ldr	x0, [sp, #104]
    c4f0:	ldr	x1, [x0, #64]
    c4f4:	ldr	x0, [sp, #104]
    c4f8:	blr	x1
    c4fc:	str	w0, [sp, #64]
    c500:	ldr	x0, [sp, #104]
    c504:	ldr	x1, [x0, #56]
    c508:	ldr	x0, [sp, #104]
    c50c:	blr	x1
    c510:	str	w0, [sp, #60]
    c514:	ldr	x0, [sp, #104]
    c518:	ldr	x1, [x0, #72]
    c51c:	ldr	x0, [sp, #104]
    c520:	blr	x1
    c524:	str	w0, [sp, #56]
    c528:	ldr	w1, [sp, #68]
    c52c:	ldr	w0, [sp, #64]
    c530:	add	w0, w1, w0
    c534:	str	w0, [sp, #52]
    c538:	ldr	w1, [sp, #60]
    c53c:	ldr	w0, [sp, #56]
    c540:	add	w0, w1, w0
    c544:	str	w0, [sp, #48]
    c548:	ldr	w1, [sp, #100]
    c54c:	ldr	w0, [sp, #76]
    c550:	sub	w0, w1, w0
    c554:	str	w0, [sp, #140]
    c558:	ldr	w1, [sp, #96]
    c55c:	ldr	w0, [sp, #72]
    c560:	sub	w0, w1, w0
    c564:	str	w0, [sp, #44]
    c568:	ldr	w0, [sp, #44]
    c56c:	str	w0, [sp, #132]
    c570:	ldr	w0, [sp, #92]
    c574:	str	w0, [sp, #128]
    c578:	ldr	w0, [sp, #84]
    c57c:	str	w0, [sp, #124]
    c580:	ldr	x0, [sp, #112]
    c584:	ldr	x3, [x0, #32]
    c588:	ldr	w2, [sp, #44]
    c58c:	ldr	w1, [sp, #140]
    c590:	ldr	x0, [sp, #112]
    c594:	blr	x3
    c598:	ldr	x0, [sp, #112]
    c59c:	ldr	x3, [x0, #24]
    c5a0:	mov	w2, #0x0                   	// #0
    c5a4:	mov	w1, #0x0                   	// #0
    c5a8:	ldr	x0, [sp, #112]
    c5ac:	blr	x3
    c5b0:	ldr	x0, [sp, #24]
    c5b4:	ldr	w0, [x0, #176]
    c5b8:	cmp	w0, #0x0
    c5bc:	b.eq	c5f4 <draw_pixmap_bar+0x1c8>  // b.none
    c5c0:	ldr	w1, [sp, #140]
    c5c4:	ldr	w0, [sp, #52]
    c5c8:	add	w0, w1, w0
    c5cc:	str	w0, [sp, #140]
    c5d0:	ldr	w1, [sp, #128]
    c5d4:	ldr	w0, [sp, #68]
    c5d8:	sub	w0, w1, w0
    c5dc:	str	w0, [sp, #128]
    c5e0:	ldr	w1, [sp, #124]
    c5e4:	ldr	w0, [sp, #60]
    c5e8:	sub	w0, w1, w0
    c5ec:	str	w0, [sp, #124]
    c5f0:	b	c604 <draw_pixmap_bar+0x1d8>
    c5f4:	ldr	w1, [sp, #132]
    c5f8:	ldr	w0, [sp, #48]
    c5fc:	sub	w0, w1, w0
    c600:	str	w0, [sp, #132]
    c604:	ldr	x0, [sp, #24]
    c608:	ldr	w1, [x0, #92]
    c60c:	ldr	x0, [sp, #24]
    c610:	ldr	w0, [x0, #84]
    c614:	cmp	w1, w0
    c618:	b.le	c634 <draw_pixmap_bar+0x208>
    c61c:	ldr	x0, [sp, #24]
    c620:	ldr	w1, [x0, #88]
    c624:	ldr	x0, [sp, #24]
    c628:	ldr	w0, [x0, #84]
    c62c:	cmp	w1, w0
    c630:	b.gt	c63c <draw_pixmap_bar+0x210>
    c634:	str	wzr, [sp, #136]
    c638:	b	c678 <draw_pixmap_bar+0x24c>
    c63c:	ldr	x0, [sp, #24]
    c640:	ldr	w1, [x0, #92]
    c644:	ldr	x0, [sp, #24]
    c648:	ldr	w0, [x0, #84]
    c64c:	sub	w1, w1, w0
    c650:	ldr	w0, [sp, #140]
    c654:	mul	w0, w1, w0
    c658:	mov	w2, w0
    c65c:	ldr	x0, [sp, #24]
    c660:	ldr	w1, [x0, #88]
    c664:	ldr	x0, [sp, #24]
    c668:	ldr	w0, [x0, #84]
    c66c:	sub	w0, w1, w0
    c670:	udiv	w0, w2, w0
    c674:	str	w0, [sp, #136]
    c678:	ldr	w1, [sp, #136]
    c67c:	ldr	w0, [sp, #52]
    c680:	cmp	w1, w0
    c684:	b.lt	c6c4 <draw_pixmap_bar+0x298>  // b.tstop
    c688:	ldr	x0, [sp, #104]
    c68c:	ldr	x3, [x0, #32]
    c690:	ldr	w1, [sp, #136]
    c694:	ldr	w0, [sp, #52]
    c698:	sub	w0, w1, w0
    c69c:	ldr	w2, [sp, #132]
    c6a0:	mov	w1, w0
    c6a4:	ldr	x0, [sp, #104]
    c6a8:	blr	x3
    c6ac:	ldr	x0, [sp, #104]
    c6b0:	ldr	x3, [x0, #24]
    c6b4:	ldr	w2, [sp, #124]
    c6b8:	ldr	w1, [sp, #128]
    c6bc:	ldr	x0, [sp, #104]
    c6c0:	blr	x3
    c6c4:	nop
    c6c8:	ldp	x29, x30, [sp], #144
    c6cc:	ret

000000000000c6d0 <draw_text>:
    c6d0:	stp	x29, x30, [sp, #-96]!
    c6d4:	mov	x29, sp
    c6d8:	str	x19, [sp, #16]
    c6dc:	str	x0, [sp, #40]
    c6e0:	ldr	x0, [sp, #40]
    c6e4:	ldr	x0, [x0, #96]
    c6e8:	cmp	x0, #0x0
    c6ec:	b.eq	c7fc <draw_text+0x12c>  // b.none
    c6f0:	ldr	x0, [sp, #40]
    c6f4:	ldr	x0, [x0, #104]
    c6f8:	str	x0, [sp, #88]
    c6fc:	ldr	x0, [sp, #40]
    c700:	ldr	w0, [x0, #112]
    c704:	bl	bdc0 <grub_video_map_rgba_color>
    c708:	str	w0, [sp, #84]
    c70c:	ldr	x0, [sp, #40]
    c710:	ldr	w0, [x0, #64]
    c714:	str	w0, [sp, #80]
    c718:	ldr	x0, [sp, #40]
    c71c:	ldr	w0, [x0, #68]
    c720:	str	w0, [sp, #76]
    c724:	ldr	x0, [sp, #40]
    c728:	ldr	x2, [x0, #96]
    c72c:	ldr	x0, [sp, #40]
    c730:	ldr	w0, [x0, #92]
    c734:	cmp	w0, #0x0
    c738:	cneg	w0, w0, lt  // lt = tstop
    c73c:	mov	w1, w0
    c740:	mov	x0, x2
    c744:	bl	0 <grub_xasprintf>
    c748:	str	x0, [sp, #64]
    c74c:	ldr	x0, [sp, #64]
    c750:	cmp	x0, #0x0
    c754:	b.ne	c770 <draw_text+0xa0>  // b.any
    c758:	bl	0 <grub_print_error>
    c75c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    c760:	add	x0, x0, #0x0
    c764:	ldr	x0, [x0]
    c768:	str	wzr, [x0]
    c76c:	b	c7fc <draw_text+0x12c>
    c770:	ldr	x1, [sp, #64]
    c774:	ldr	x0, [sp, #88]
    c778:	bl	1dd8 <grub_font_get_string_width>
    c77c:	str	w0, [sp, #60]
    c780:	ldr	w1, [sp, #80]
    c784:	ldr	w0, [sp, #60]
    c788:	sub	w0, w1, w0
    c78c:	lsr	w1, w0, #31
    c790:	add	w0, w1, w0
    c794:	asr	w0, w0, #1
    c798:	str	w0, [sp, #56]
    c79c:	ldr	x0, [sp, #88]
    c7a0:	bl	0 <grub_font_get_descent>
    c7a4:	mov	w1, w0
    c7a8:	ldr	w0, [sp, #76]
    c7ac:	sub	w0, w0, w1
    c7b0:	lsr	w1, w0, #31
    c7b4:	add	w0, w1, w0
    c7b8:	asr	w0, w0, #1
    c7bc:	mov	w19, w0
    c7c0:	ldr	x0, [sp, #88]
    c7c4:	bl	bde8 <grub_font_get_ascent>
    c7c8:	lsr	w1, w0, #31
    c7cc:	add	w0, w1, w0
    c7d0:	asr	w0, w0, #1
    c7d4:	add	w0, w19, w0
    c7d8:	str	w0, [sp, #52]
    c7dc:	ldr	w4, [sp, #52]
    c7e0:	ldr	w3, [sp, #56]
    c7e4:	ldr	w2, [sp, #84]
    c7e8:	ldr	x1, [sp, #88]
    c7ec:	ldr	x0, [sp, #64]
    c7f0:	bl	1c14 <grub_font_draw_string>
    c7f4:	ldr	x0, [sp, #64]
    c7f8:	bl	0 <grub_free>
    c7fc:	ldr	x19, [sp, #16]
    c800:	ldp	x29, x30, [sp], #96
    c804:	ret
	...

000000000000c810 <progress_bar_paint>:
    c810:	stp	x29, x30, [sp, #-64]!
    c814:	mov	x29, sp
    c818:	str	x0, [sp, #24]
    c81c:	str	x1, [sp, #16]
    c820:	ldr	x0, [sp, #24]
    c824:	str	x0, [sp, #56]
    c828:	ldr	x0, [sp, #56]
    c82c:	ldr	w0, [x0, #80]
    c830:	cmp	w0, #0x0
    c834:	b.eq	c8b4 <progress_bar_paint+0xa4>  // b.none
    c838:	ldr	x0, [sp, #56]
    c83c:	add	x0, x0, #0x38
    c840:	mov	x1, x0
    c844:	ldr	x0, [sp, #16]
    c848:	bl	c024 <grub_video_have_common_points>
    c84c:	cmp	w0, #0x0
    c850:	b.eq	c8bc <progress_bar_paint+0xac>  // b.none
    c854:	ldr	x0, [sp, #56]
    c858:	ldr	w1, [x0, #88]
    c85c:	ldr	x0, [sp, #56]
    c860:	ldr	w0, [x0, #84]
    c864:	cmp	w1, w0
    c868:	b.eq	c8c4 <progress_bar_paint+0xb4>  // b.none
    c86c:	ldr	x0, [sp, #56]
    c870:	add	x0, x0, #0x38
    c874:	add	x1, sp, #0x28
    c878:	bl	bfbc <grub_gui_set_viewport>
    c87c:	ldr	x0, [sp, #56]
    c880:	bl	c1f0 <check_pixmaps>
    c884:	cmp	w0, #0x0
    c888:	b.eq	c898 <progress_bar_paint+0x88>  // b.none
    c88c:	ldr	x0, [sp, #56]
    c890:	bl	c42c <draw_pixmap_bar>
    c894:	b	c8a0 <progress_bar_paint+0x90>
    c898:	ldr	x0, [sp, #56]
    c89c:	bl	c2a8 <draw_filled_rect_bar>
    c8a0:	ldr	x0, [sp, #56]
    c8a4:	bl	c6d0 <draw_text>
    c8a8:	add	x0, sp, #0x28
    c8ac:	bl	bf78 <grub_gui_restore_viewport>
    c8b0:	b	c8c8 <progress_bar_paint+0xb8>
    c8b4:	nop
    c8b8:	b	c8c8 <progress_bar_paint+0xb8>
    c8bc:	nop
    c8c0:	b	c8c8 <progress_bar_paint+0xb8>
    c8c4:	nop
    c8c8:	ldp	x29, x30, [sp], #64
    c8cc:	ret

000000000000c8d0 <progress_bar_set_parent>:
    c8d0:	sub	sp, sp, #0x20
    c8d4:	str	x0, [sp, #8]
    c8d8:	str	x1, [sp]
    c8dc:	ldr	x0, [sp, #8]
    c8e0:	str	x0, [sp, #24]
    c8e4:	ldr	x0, [sp, #24]
    c8e8:	ldr	x1, [sp]
    c8ec:	str	x1, [x0, #48]
    c8f0:	nop
    c8f4:	add	sp, sp, #0x20
    c8f8:	ret

000000000000c8fc <progress_bar_get_parent>:
    c8fc:	sub	sp, sp, #0x20
    c900:	str	x0, [sp, #8]
    c904:	ldr	x0, [sp, #8]
    c908:	str	x0, [sp, #24]
    c90c:	ldr	x0, [sp, #24]
    c910:	ldr	x0, [x0, #48]
    c914:	add	sp, sp, #0x20
    c918:	ret

000000000000c91c <progress_bar_set_bounds>:
    c91c:	sub	sp, sp, #0x20
    c920:	str	x0, [sp, #8]
    c924:	str	x1, [sp]
    c928:	ldr	x0, [sp, #8]
    c92c:	str	x0, [sp, #24]
    c930:	ldr	x2, [sp, #24]
    c934:	ldr	x0, [sp]
    c938:	ldp	x0, x1, [x0]
    c93c:	stp	x0, x1, [x2, #56]
    c940:	nop
    c944:	add	sp, sp, #0x20
    c948:	ret

000000000000c94c <progress_bar_get_bounds>:
    c94c:	sub	sp, sp, #0x20
    c950:	str	x0, [sp, #8]
    c954:	str	x1, [sp]
    c958:	ldr	x0, [sp, #8]
    c95c:	str	x0, [sp, #24]
    c960:	ldr	x2, [sp]
    c964:	ldr	x0, [sp, #24]
    c968:	ldp	x0, x1, [x0, #56]
    c96c:	stp	x0, x1, [x2]
    c970:	nop
    c974:	add	sp, sp, #0x20
    c978:	ret

000000000000c97c <progress_bar_get_minimal_size>:
    c97c:	stp	x29, x30, [sp, #-96]!
    c980:	mov	x29, sp
    c984:	str	x19, [sp, #16]
    c988:	str	x0, [sp, #56]
    c98c:	str	x1, [sp, #48]
    c990:	str	x2, [sp, #40]
    c994:	str	wzr, [sp, #92]
    c998:	str	wzr, [sp, #88]
    c99c:	ldr	x0, [sp, #56]
    c9a0:	str	x0, [sp, #80]
    c9a4:	ldr	x0, [sp, #80]
    c9a8:	ldr	x0, [x0, #96]
    c9ac:	cmp	x0, #0x0
    c9b0:	b.eq	ca24 <progress_bar_get_minimal_size+0xa8>  // b.none
    c9b4:	ldr	x0, [sp, #80]
    c9b8:	ldr	x2, [x0, #104]
    c9bc:	ldr	x0, [sp, #80]
    c9c0:	ldr	x0, [x0, #96]
    c9c4:	mov	x1, x0
    c9c8:	mov	x0, x2
    c9cc:	bl	1dd8 <grub_font_get_string_width>
    c9d0:	str	w0, [sp, #92]
    c9d4:	ldr	x0, [sp, #80]
    c9d8:	ldr	x2, [x0, #104]
    c9dc:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    c9e0:	add	x0, x0, #0x0
    c9e4:	ldr	x1, [x0]
    c9e8:	mov	x0, x2
    c9ec:	bl	1dd8 <grub_font_get_string_width>
    c9f0:	mov	w1, w0
    c9f4:	ldr	w0, [sp, #92]
    c9f8:	add	w0, w0, w1
    c9fc:	str	w0, [sp, #92]
    ca00:	ldr	x0, [sp, #80]
    ca04:	ldr	x0, [x0, #104]
    ca08:	bl	0 <grub_font_get_descent>
    ca0c:	mov	w19, w0
    ca10:	ldr	x0, [sp, #80]
    ca14:	ldr	x0, [x0, #104]
    ca18:	bl	bde8 <grub_font_get_ascent>
    ca1c:	add	w0, w19, w0
    ca20:	str	w0, [sp, #88]
    ca24:	ldr	x0, [sp, #80]
    ca28:	bl	c1f0 <check_pixmaps>
    ca2c:	cmp	w0, #0x0
    ca30:	b.eq	cb40 <progress_bar_get_minimal_size+0x1c4>  // b.none
    ca34:	ldr	x0, [sp, #80]
    ca38:	ldr	x0, [x0, #160]
    ca3c:	str	x0, [sp, #72]
    ca40:	ldr	x0, [sp, #80]
    ca44:	ldr	x0, [x0, #168]
    ca48:	str	x0, [sp, #64]
    ca4c:	ldr	x0, [sp, #72]
    ca50:	ldr	x1, [x0, #48]
    ca54:	ldr	x0, [sp, #72]
    ca58:	blr	x1
    ca5c:	mov	w19, w0
    ca60:	ldr	x0, [sp, #72]
    ca64:	ldr	x1, [x0, #64]
    ca68:	ldr	x0, [sp, #72]
    ca6c:	blr	x1
    ca70:	add	w0, w19, w0
    ca74:	mov	w1, w0
    ca78:	ldr	w0, [sp, #92]
    ca7c:	add	w0, w0, w1
    ca80:	str	w0, [sp, #92]
    ca84:	ldr	x0, [sp, #72]
    ca88:	ldr	x1, [x0, #56]
    ca8c:	ldr	x0, [sp, #72]
    ca90:	blr	x1
    ca94:	mov	w19, w0
    ca98:	ldr	x0, [sp, #72]
    ca9c:	ldr	x1, [x0, #72]
    caa0:	ldr	x0, [sp, #72]
    caa4:	blr	x1
    caa8:	add	w0, w19, w0
    caac:	mov	w1, w0
    cab0:	ldr	w0, [sp, #88]
    cab4:	add	w0, w0, w1
    cab8:	str	w0, [sp, #88]
    cabc:	ldr	x0, [sp, #80]
    cac0:	ldr	w0, [x0, #176]
    cac4:	cmp	w0, #0x0
    cac8:	b.ne	cb58 <progress_bar_get_minimal_size+0x1dc>  // b.any
    cacc:	ldr	x0, [sp, #64]
    cad0:	ldr	x1, [x0, #48]
    cad4:	ldr	x0, [sp, #64]
    cad8:	blr	x1
    cadc:	mov	w19, w0
    cae0:	ldr	x0, [sp, #64]
    cae4:	ldr	x1, [x0, #64]
    cae8:	ldr	x0, [sp, #64]
    caec:	blr	x1
    caf0:	add	w0, w19, w0
    caf4:	mov	w1, w0
    caf8:	ldr	w0, [sp, #92]
    cafc:	add	w0, w0, w1
    cb00:	str	w0, [sp, #92]
    cb04:	ldr	x0, [sp, #64]
    cb08:	ldr	x1, [x0, #56]
    cb0c:	ldr	x0, [sp, #64]
    cb10:	blr	x1
    cb14:	mov	w19, w0
    cb18:	ldr	x0, [sp, #64]
    cb1c:	ldr	x1, [x0, #72]
    cb20:	ldr	x0, [sp, #64]
    cb24:	blr	x1
    cb28:	add	w0, w19, w0
    cb2c:	mov	w1, w0
    cb30:	ldr	w0, [sp, #88]
    cb34:	add	w0, w0, w1
    cb38:	str	w0, [sp, #88]
    cb3c:	b	cb58 <progress_bar_get_minimal_size+0x1dc>
    cb40:	ldr	w0, [sp, #88]
    cb44:	add	w0, w0, #0x2
    cb48:	str	w0, [sp, #88]
    cb4c:	ldr	w0, [sp, #92]
    cb50:	add	w0, w0, #0x2
    cb54:	str	w0, [sp, #92]
    cb58:	ldr	x0, [sp, #48]
    cb5c:	mov	w1, #0xc8                  	// #200
    cb60:	str	w1, [x0]
    cb64:	ldr	x0, [sp, #48]
    cb68:	ldr	w0, [x0]
    cb6c:	ldr	w1, [sp, #92]
    cb70:	cmp	w1, w0
    cb74:	b.ls	cb84 <progress_bar_get_minimal_size+0x208>  // b.plast
    cb78:	ldr	x0, [sp, #48]
    cb7c:	ldr	w1, [sp, #92]
    cb80:	str	w1, [x0]
    cb84:	ldr	x0, [sp, #40]
    cb88:	mov	w1, #0x1c                  	// #28
    cb8c:	str	w1, [x0]
    cb90:	ldr	x0, [sp, #40]
    cb94:	ldr	w0, [x0]
    cb98:	ldr	w1, [sp, #88]
    cb9c:	cmp	w1, w0
    cba0:	b.ls	cbb0 <progress_bar_get_minimal_size+0x234>  // b.plast
    cba4:	ldr	x0, [sp, #40]
    cba8:	ldr	w1, [sp, #88]
    cbac:	str	w1, [x0]
    cbb0:	nop
    cbb4:	ldr	x19, [sp, #16]
    cbb8:	ldp	x29, x30, [sp], #96
    cbbc:	ret
	...

000000000000cbc8 <progress_bar_set_state>:
    cbc8:	sub	sp, sp, #0x30
    cbcc:	str	x0, [sp, #24]
    cbd0:	str	w1, [sp, #20]
    cbd4:	str	w2, [sp, #16]
    cbd8:	str	w3, [sp, #12]
    cbdc:	str	w4, [sp, #8]
    cbe0:	ldr	x0, [sp, #24]
    cbe4:	str	x0, [sp, #40]
    cbe8:	ldr	x0, [sp, #40]
    cbec:	ldr	w1, [sp, #20]
    cbf0:	str	w1, [x0, #80]
    cbf4:	ldr	x0, [sp, #40]
    cbf8:	ldr	w1, [sp, #16]
    cbfc:	str	w1, [x0, #84]
    cc00:	ldr	x0, [sp, #40]
    cc04:	ldr	w1, [sp, #12]
    cc08:	str	w1, [x0, #92]
    cc0c:	ldr	x0, [sp, #40]
    cc10:	ldr	w1, [sp, #8]
    cc14:	str	w1, [x0, #88]
    cc18:	nop
    cc1c:	add	sp, sp, #0x30
    cc20:	ret

000000000000cc24 <progress_bar_set_property>:
    cc24:	stp	x29, x30, [sp, #-80]!
    cc28:	mov	x29, sp
    cc2c:	str	x0, [sp, #40]
    cc30:	str	x1, [sp, #32]
    cc34:	str	x2, [sp, #24]
    cc38:	ldr	x0, [sp, #40]
    cc3c:	str	x0, [sp, #72]
    cc40:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    cc44:	add	x0, x0, #0x0
    cc48:	ldr	x1, [x0]
    cc4c:	ldr	x0, [sp, #32]
    cc50:	bl	0 <grub_strcmp>
    cc54:	cmp	w0, #0x0
    cc58:	b.ne	cd60 <progress_bar_set_property+0x13c>  // b.any
    cc5c:	ldr	x0, [sp, #72]
    cc60:	ldr	x0, [x0, #96]
    cc64:	bl	0 <grub_free>
    cc68:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    cc6c:	add	x0, x0, #0x0
    cc70:	ldr	x1, [x0]
    cc74:	ldr	x0, [sp, #24]
    cc78:	bl	0 <grub_strcmp>
    cc7c:	cmp	w0, #0x0
    cc80:	b.ne	ccb4 <progress_bar_set_property+0x90>  // b.any
    cc84:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    cc88:	add	x0, x0, #0x0
    cc8c:	ldr	x0, [x0]
    cc90:	str	x0, [sp, #64]
    cc94:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    cc98:	add	x0, x0, #0x0
    cc9c:	ldr	x0, [x0]
    cca0:	ldr	x1, [x0]
    cca4:	ldr	x0, [sp, #64]
    cca8:	blr	x1
    ccac:	str	x0, [sp, #24]
    ccb0:	b	cd48 <progress_bar_set_property+0x124>
    ccb4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    ccb8:	add	x0, x0, #0x0
    ccbc:	ldr	x1, [x0]
    ccc0:	ldr	x0, [sp, #24]
    ccc4:	bl	0 <grub_strcmp>
    ccc8:	cmp	w0, #0x0
    cccc:	b.ne	cd00 <progress_bar_set_property+0xdc>  // b.any
    ccd0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    ccd4:	add	x0, x0, #0x0
    ccd8:	ldr	x0, [x0]
    ccdc:	str	x0, [sp, #56]
    cce0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    cce4:	add	x0, x0, #0x0
    cce8:	ldr	x0, [x0]
    ccec:	ldr	x1, [x0]
    ccf0:	ldr	x0, [sp, #56]
    ccf4:	blr	x1
    ccf8:	str	x0, [sp, #24]
    ccfc:	b	cd48 <progress_bar_set_property+0x124>
    cd00:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    cd04:	add	x0, x0, #0x0
    cd08:	ldr	x1, [x0]
    cd0c:	ldr	x0, [sp, #24]
    cd10:	bl	0 <grub_strcmp>
    cd14:	cmp	w0, #0x0
    cd18:	b.ne	cd48 <progress_bar_set_property+0x124>  // b.any
    cd1c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    cd20:	add	x0, x0, #0x0
    cd24:	ldr	x0, [x0]
    cd28:	str	x0, [sp, #48]
    cd2c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    cd30:	add	x0, x0, #0x0
    cd34:	ldr	x0, [x0]
    cd38:	ldr	x1, [x0]
    cd3c:	ldr	x0, [sp, #48]
    cd40:	blr	x1
    cd44:	str	x0, [sp, #24]
    cd48:	ldr	x0, [sp, #24]
    cd4c:	bl	0 <grub_strdup>
    cd50:	mov	x1, x0
    cd54:	ldr	x0, [sp, #72]
    cd58:	str	x1, [x0, #96]
    cd5c:	b	d08c <progress_bar_set_property+0x468>
    cd60:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    cd64:	add	x0, x0, #0x0
    cd68:	ldr	x1, [x0]
    cd6c:	ldr	x0, [sp, #32]
    cd70:	bl	0 <grub_strcmp>
    cd74:	cmp	w0, #0x0
    cd78:	b.ne	cd94 <progress_bar_set_property+0x170>  // b.any
    cd7c:	ldr	x0, [sp, #24]
    cd80:	bl	0 <grub_font_get>
    cd84:	mov	x1, x0
    cd88:	ldr	x0, [sp, #72]
    cd8c:	str	x1, [x0, #104]
    cd90:	b	d08c <progress_bar_set_property+0x468>
    cd94:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    cd98:	add	x0, x0, #0x0
    cd9c:	ldr	x1, [x0]
    cda0:	ldr	x0, [sp, #32]
    cda4:	bl	0 <grub_strcmp>
    cda8:	cmp	w0, #0x0
    cdac:	b.ne	cdc8 <progress_bar_set_property+0x1a4>  // b.any
    cdb0:	ldr	x0, [sp, #72]
    cdb4:	add	x0, x0, #0x70
    cdb8:	mov	x1, x0
    cdbc:	ldr	x0, [sp, #24]
    cdc0:	bl	0 <grub_video_parse_color>
    cdc4:	b	d08c <progress_bar_set_property+0x468>
    cdc8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    cdcc:	add	x0, x0, #0x0
    cdd0:	ldr	x1, [x0]
    cdd4:	ldr	x0, [sp, #32]
    cdd8:	bl	0 <grub_strcmp>
    cddc:	cmp	w0, #0x0
    cde0:	b.ne	cdfc <progress_bar_set_property+0x1d8>  // b.any
    cde4:	ldr	x0, [sp, #72]
    cde8:	add	x0, x0, #0x74
    cdec:	mov	x1, x0
    cdf0:	ldr	x0, [sp, #24]
    cdf4:	bl	0 <grub_video_parse_color>
    cdf8:	b	d08c <progress_bar_set_property+0x468>
    cdfc:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    ce00:	add	x0, x0, #0x0
    ce04:	ldr	x1, [x0]
    ce08:	ldr	x0, [sp, #32]
    ce0c:	bl	0 <grub_strcmp>
    ce10:	cmp	w0, #0x0
    ce14:	b.ne	ce30 <progress_bar_set_property+0x20c>  // b.any
    ce18:	ldr	x0, [sp, #72]
    ce1c:	add	x0, x0, #0x78
    ce20:	mov	x1, x0
    ce24:	ldr	x0, [sp, #24]
    ce28:	bl	0 <grub_video_parse_color>
    ce2c:	b	d08c <progress_bar_set_property+0x468>
    ce30:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    ce34:	add	x0, x0, #0x0
    ce38:	ldr	x1, [x0]
    ce3c:	ldr	x0, [sp, #32]
    ce40:	bl	0 <grub_strcmp>
    ce44:	cmp	w0, #0x0
    ce48:	b.ne	ce64 <progress_bar_set_property+0x240>  // b.any
    ce4c:	ldr	x0, [sp, #72]
    ce50:	add	x0, x0, #0x7c
    ce54:	mov	x1, x0
    ce58:	ldr	x0, [sp, #24]
    ce5c:	bl	0 <grub_video_parse_color>
    ce60:	b	d08c <progress_bar_set_property+0x468>
    ce64:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    ce68:	add	x0, x0, #0x0
    ce6c:	ldr	x1, [x0]
    ce70:	ldr	x0, [sp, #32]
    ce74:	bl	0 <grub_strcmp>
    ce78:	cmp	w0, #0x0
    ce7c:	b.ne	ced0 <progress_bar_set_property+0x2ac>  // b.any
    ce80:	ldr	x0, [sp, #72]
    ce84:	mov	w1, #0x1                   	// #1
    ce88:	str	w1, [x0, #136]
    ce8c:	ldr	x0, [sp, #72]
    ce90:	mov	w1, #0x1                   	// #1
    ce94:	str	w1, [x0, #140]
    ce98:	ldr	x0, [sp, #72]
    ce9c:	ldr	x0, [x0, #144]
    cea0:	bl	0 <grub_free>
    cea4:	ldr	x0, [sp, #24]
    cea8:	cmp	x0, #0x0
    ceac:	b.eq	cec0 <progress_bar_set_property+0x29c>  // b.none
    ceb0:	ldr	x0, [sp, #24]
    ceb4:	bl	0 <grub_strdup>
    ceb8:	mov	x1, x0
    cebc:	b	cec4 <progress_bar_set_property+0x2a0>
    cec0:	mov	x1, #0x0                   	// #0
    cec4:	ldr	x0, [sp, #72]
    cec8:	str	x1, [x0, #144]
    cecc:	b	d08c <progress_bar_set_property+0x468>
    ced0:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    ced4:	add	x0, x0, #0x0
    ced8:	ldr	x1, [x0]
    cedc:	ldr	x0, [sp, #32]
    cee0:	bl	0 <grub_strcmp>
    cee4:	cmp	w0, #0x0
    cee8:	b.ne	cf3c <progress_bar_set_property+0x318>  // b.any
    ceec:	ldr	x0, [sp, #72]
    cef0:	mov	w1, #0x1                   	// #1
    cef4:	str	w1, [x0, #136]
    cef8:	ldr	x0, [sp, #72]
    cefc:	mov	w1, #0x1                   	// #1
    cf00:	str	w1, [x0, #140]
    cf04:	ldr	x0, [sp, #72]
    cf08:	ldr	x0, [x0, #152]
    cf0c:	bl	0 <grub_free>
    cf10:	ldr	x0, [sp, #24]
    cf14:	cmp	x0, #0x0
    cf18:	b.eq	cf2c <progress_bar_set_property+0x308>  // b.none
    cf1c:	ldr	x0, [sp, #24]
    cf20:	bl	0 <grub_strdup>
    cf24:	mov	x1, x0
    cf28:	b	cf30 <progress_bar_set_property+0x30c>
    cf2c:	mov	x1, #0x0                   	// #0
    cf30:	ldr	x0, [sp, #72]
    cf34:	str	x1, [x0, #152]
    cf38:	b	d08c <progress_bar_set_property+0x468>
    cf3c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    cf40:	add	x0, x0, #0x0
    cf44:	ldr	x1, [x0]
    cf48:	ldr	x0, [sp, #32]
    cf4c:	bl	0 <grub_strcmp>
    cf50:	cmp	w0, #0x0
    cf54:	b.ne	cf88 <progress_bar_set_property+0x364>  // b.any
    cf58:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    cf5c:	add	x0, x0, #0x0
    cf60:	ldr	x1, [x0]
    cf64:	ldr	x0, [sp, #24]
    cf68:	bl	0 <grub_strcmp>
    cf6c:	cmp	w0, #0x0
    cf70:	cset	w0, eq  // eq = none
    cf74:	and	w0, w0, #0xff
    cf78:	mov	w1, w0
    cf7c:	ldr	x0, [sp, #72]
    cf80:	str	w1, [x0, #176]
    cf84:	b	d08c <progress_bar_set_property+0x468>
    cf88:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    cf8c:	add	x0, x0, #0x0
    cf90:	ldr	x1, [x0]
    cf94:	ldr	x0, [sp, #32]
    cf98:	bl	0 <grub_strcmp>
    cf9c:	cmp	w0, #0x0
    cfa0:	b.ne	cfe8 <progress_bar_set_property+0x3c4>  // b.any
    cfa4:	ldr	x0, [sp, #72]
    cfa8:	mov	w1, #0x1                   	// #1
    cfac:	str	w1, [x0, #136]
    cfb0:	ldr	x0, [sp, #72]
    cfb4:	ldr	x0, [x0, #128]
    cfb8:	bl	0 <grub_free>
    cfbc:	ldr	x0, [sp, #24]
    cfc0:	cmp	x0, #0x0
    cfc4:	b.eq	cfd8 <progress_bar_set_property+0x3b4>  // b.none
    cfc8:	ldr	x0, [sp, #24]
    cfcc:	bl	0 <grub_strdup>
    cfd0:	mov	x1, x0
    cfd4:	b	cfdc <progress_bar_set_property+0x3b8>
    cfd8:	mov	x1, #0x0                   	// #0
    cfdc:	ldr	x0, [sp, #72]
    cfe0:	str	x1, [x0, #128]
    cfe4:	b	d08c <progress_bar_set_property+0x468>
    cfe8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    cfec:	add	x0, x0, #0x0
    cff0:	ldr	x1, [x0]
    cff4:	ldr	x0, [sp, #32]
    cff8:	bl	0 <grub_strcmp>
    cffc:	cmp	w0, #0x0
    d000:	b.ne	d08c <progress_bar_set_property+0x468>  // b.any
    d004:	ldr	x0, [sp, #72]
    d008:	bl	bea0 <grub_gfxmenu_timeout_unregister>
    d00c:	ldr	x0, [sp, #72]
    d010:	ldr	x0, [x0, #72]
    d014:	bl	0 <grub_free>
    d018:	ldr	x0, [sp, #24]
    d01c:	cmp	x0, #0x0
    d020:	b.eq	d03c <progress_bar_set_property+0x418>  // b.none
    d024:	ldr	x0, [sp, #24]
    d028:	bl	0 <grub_strdup>
    d02c:	mov	x1, x0
    d030:	ldr	x0, [sp, #72]
    d034:	str	x1, [x0, #72]
    d038:	b	d044 <progress_bar_set_property+0x420>
    d03c:	ldr	x0, [sp, #72]
    d040:	str	xzr, [x0, #72]
    d044:	ldr	x0, [sp, #72]
    d048:	ldr	x0, [x0, #72]
    d04c:	cmp	x0, #0x0
    d050:	b.eq	d08c <progress_bar_set_property+0x468>  // b.none
    d054:	ldr	x0, [sp, #72]
    d058:	ldr	x2, [x0, #72]
    d05c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    d060:	add	x0, x0, #0x0
    d064:	ldr	x1, [x0]
    d068:	mov	x0, x2
    d06c:	bl	0 <grub_strcmp>
    d070:	cmp	w0, #0x0
    d074:	b.ne	d08c <progress_bar_set_property+0x468>  // b.any
    d078:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    d07c:	add	x0, x0, #0x0
    d080:	ldr	x1, [x0]
    d084:	ldr	x0, [sp, #72]
    d088:	bl	be00 <grub_gfxmenu_timeout_register>
    d08c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    d090:	add	x0, x0, #0x0
    d094:	ldr	x0, [x0]
    d098:	ldr	w0, [x0]
    d09c:	ldp	x29, x30, [sp], #80
    d0a0:	ret
    d0a4:	nop
	...

000000000000d158 <grub_gui_progress_bar_new>:
    d158:	stp	x29, x30, [sp, #-48]!
    d15c:	mov	x29, sp
    d160:	mov	x0, #0xb8                  	// #184
    d164:	bl	0 <grub_zalloc>
    d168:	str	x0, [sp, #40]
    d16c:	ldr	x0, [sp, #40]
    d170:	cmp	x0, #0x0
    d174:	b.ne	d180 <grub_gui_progress_bar_new+0x28>  // b.any
    d178:	mov	x0, #0x0                   	// #0
    d17c:	b	d260 <grub_gui_progress_bar_new+0x108>
    d180:	ldr	x0, [sp, #40]
    d184:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    d188:	add	x1, x1, #0x0
    d18c:	ldr	x1, [x1]
    d190:	str	x1, [x0, #40]
    d194:	ldr	x0, [sp, #40]
    d198:	adrp	x1, 0 <grub_gfxmenu_viewer_fini>
    d19c:	add	x1, x1, #0x0
    d1a0:	ldr	x1, [x1]
    d1a4:	str	x1, [x0]
    d1a8:	ldr	x0, [sp, #40]
    d1ac:	mov	w1, #0x1                   	// #1
    d1b0:	str	w1, [x0, #80]
    d1b4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    d1b8:	add	x0, x0, #0x0
    d1bc:	ldr	x0, [x0]
    d1c0:	bl	0 <grub_font_get>
    d1c4:	mov	x1, x0
    d1c8:	ldr	x0, [sp, #40]
    d1cc:	str	x1, [x0, #104]
    d1d0:	strb	wzr, [sp, #32]
    d1d4:	strb	wzr, [sp, #33]
    d1d8:	strb	wzr, [sp, #34]
    d1dc:	mov	w0, #0xffffffff            	// #-1
    d1e0:	strb	w0, [sp, #35]
    d1e4:	mov	w0, #0xffffff80            	// #-128
    d1e8:	strb	w0, [sp, #24]
    d1ec:	mov	w0, #0xffffff80            	// #-128
    d1f0:	strb	w0, [sp, #25]
    d1f4:	mov	w0, #0xffffff80            	// #-128
    d1f8:	strb	w0, [sp, #26]
    d1fc:	mov	w0, #0xffffffff            	// #-1
    d200:	strb	w0, [sp, #27]
    d204:	mov	w0, #0xffffffc8            	// #-56
    d208:	strb	w0, [sp, #16]
    d20c:	mov	w0, #0xffffffc8            	// #-56
    d210:	strb	w0, [sp, #17]
    d214:	mov	w0, #0xffffffc8            	// #-56
    d218:	strb	w0, [sp, #18]
    d21c:	mov	w0, #0xffffffff            	// #-1
    d220:	strb	w0, [sp, #19]
    d224:	ldr	x0, [sp, #40]
    d228:	ldr	w1, [sp, #32]
    d22c:	str	w1, [x0, #112]
    d230:	ldr	x0, [sp, #40]
    d234:	ldr	w1, [sp, #32]
    d238:	str	w1, [x0, #116]
    d23c:	ldr	x0, [sp, #40]
    d240:	ldr	w1, [sp, #24]
    d244:	str	w1, [x0, #120]
    d248:	ldr	x0, [sp, #40]
    d24c:	ldr	w1, [sp, #16]
    d250:	str	w1, [x0, #124]
    d254:	ldr	x0, [sp, #40]
    d258:	str	wzr, [x0, #176]
    d25c:	ldr	x0, [sp, #40]
    d260:	ldp	x29, x30, [sp], #48
    d264:	ret
	...

000000000000d280 <find_by_id_recursively>:
    d280:	stp	x29, x30, [sp, #-64]!
    d284:	mov	x29, sp
    d288:	str	x0, [sp, #24]
    d28c:	str	x1, [sp, #16]
    d290:	ldr	x0, [sp, #16]
    d294:	str	x0, [sp, #56]
    d298:	ldr	x0, [sp, #24]
    d29c:	ldr	x0, [x0]
    d2a0:	ldr	x1, [x0, #8]
    d2a4:	ldr	x0, [sp, #24]
    d2a8:	blr	x1
    d2ac:	str	x0, [sp, #48]
    d2b0:	ldr	x0, [sp, #48]
    d2b4:	cmp	x0, #0x0
    d2b8:	b.eq	d2f4 <find_by_id_recursively+0x74>  // b.none
    d2bc:	ldr	x0, [sp, #56]
    d2c0:	ldr	x0, [x0]
    d2c4:	mov	x1, x0
    d2c8:	ldr	x0, [sp, #48]
    d2cc:	bl	0 <grub_strcmp>
    d2d0:	cmp	w0, #0x0
    d2d4:	b.ne	d2f4 <find_by_id_recursively+0x74>  // b.any
    d2d8:	ldr	x0, [sp, #56]
    d2dc:	ldr	x2, [x0, #8]
    d2e0:	ldr	x0, [sp, #56]
    d2e4:	ldr	x0, [x0, #16]
    d2e8:	mov	x1, x0
    d2ec:	ldr	x0, [sp, #24]
    d2f0:	blr	x2
    d2f4:	ldr	x0, [sp, #24]
    d2f8:	ldr	x0, [x0]
    d2fc:	ldr	x2, [x0, #16]
    d300:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    d304:	add	x0, x0, #0x0
    d308:	ldr	x1, [x0]
    d30c:	ldr	x0, [sp, #24]
    d310:	blr	x2
    d314:	cmp	w0, #0x0
    d318:	b.eq	d348 <find_by_id_recursively+0xc8>  // b.none
    d31c:	ldr	x0, [sp, #24]
    d320:	str	x0, [sp, #40]
    d324:	ldr	x0, [sp, #40]
    d328:	ldr	x0, [x0, #40]
    d32c:	ldr	x3, [x0, #16]
    d330:	ldr	x2, [sp, #56]
    d334:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    d338:	add	x0, x0, #0x0
    d33c:	ldr	x1, [x0]
    d340:	ldr	x0, [sp, #40]
    d344:	blr	x3
    d348:	nop
    d34c:	ldp	x29, x30, [sp], #64
    d350:	ret
    d354:	nop
	...

000000000000d368 <grub_gui_find_by_id>:
    d368:	stp	x29, x30, [sp, #-80]!
    d36c:	mov	x29, sp
    d370:	str	x0, [sp, #40]
    d374:	str	x1, [sp, #32]
    d378:	str	x2, [sp, #24]
    d37c:	str	x3, [sp, #16]
    d380:	ldr	x0, [sp, #32]
    d384:	str	x0, [sp, #56]
    d388:	ldr	x0, [sp, #24]
    d38c:	str	x0, [sp, #64]
    d390:	ldr	x0, [sp, #16]
    d394:	str	x0, [sp, #72]
    d398:	add	x0, sp, #0x38
    d39c:	mov	x1, x0
    d3a0:	ldr	x0, [sp, #40]
    d3a4:	bl	d280 <find_by_id_recursively>
    d3a8:	nop
    d3ac:	ldp	x29, x30, [sp], #80
    d3b0:	ret

000000000000d3b4 <iterate_recursively_cb>:
    d3b4:	stp	x29, x30, [sp, #-48]!
    d3b8:	mov	x29, sp
    d3bc:	str	x0, [sp, #24]
    d3c0:	str	x1, [sp, #16]
    d3c4:	ldr	x0, [sp, #16]
    d3c8:	str	x0, [sp, #40]
    d3cc:	ldr	x0, [sp, #40]
    d3d0:	ldr	x2, [x0]
    d3d4:	ldr	x0, [sp, #40]
    d3d8:	ldr	x0, [x0, #8]
    d3dc:	mov	x1, x0
    d3e0:	ldr	x0, [sp, #24]
    d3e4:	blr	x2
    d3e8:	ldr	x0, [sp, #24]
    d3ec:	ldr	x0, [x0]
    d3f0:	ldr	x2, [x0, #16]
    d3f4:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    d3f8:	add	x0, x0, #0x0
    d3fc:	ldr	x1, [x0]
    d400:	ldr	x0, [sp, #24]
    d404:	blr	x2
    d408:	cmp	w0, #0x0
    d40c:	b.eq	d43c <iterate_recursively_cb+0x88>  // b.none
    d410:	ldr	x0, [sp, #24]
    d414:	str	x0, [sp, #32]
    d418:	ldr	x0, [sp, #32]
    d41c:	ldr	x0, [x0, #40]
    d420:	ldr	x3, [x0, #16]
    d424:	ldr	x2, [sp, #40]
    d428:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    d42c:	add	x0, x0, #0x0
    d430:	ldr	x1, [x0]
    d434:	ldr	x0, [sp, #32]
    d438:	blr	x3
    d43c:	nop
    d440:	ldp	x29, x30, [sp], #48
    d444:	ret
	...

000000000000d458 <grub_gui_iterate_recursively>:
    d458:	stp	x29, x30, [sp, #-64]!
    d45c:	mov	x29, sp
    d460:	str	x0, [sp, #40]
    d464:	str	x1, [sp, #32]
    d468:	str	x2, [sp, #24]
    d46c:	ldr	x0, [sp, #32]
    d470:	str	x0, [sp, #48]
    d474:	ldr	x0, [sp, #24]
    d478:	str	x0, [sp, #56]
    d47c:	add	x0, sp, #0x30
    d480:	mov	x1, x0
    d484:	ldr	x0, [sp, #40]
    d488:	bl	d3b4 <iterate_recursively_cb>
    d48c:	nop
    d490:	ldp	x29, x30, [sp], #64
    d494:	ret

000000000000d498 <grub_stpcpy>:
    d498:	sub	sp, sp, #0x20
    d49c:	str	x0, [sp, #8]
    d4a0:	str	x1, [sp]
    d4a4:	ldr	x0, [sp, #8]
    d4a8:	str	x0, [sp, #24]
    d4ac:	ldr	x0, [sp]
    d4b0:	str	x0, [sp, #16]
    d4b4:	ldr	x0, [sp, #24]
    d4b8:	add	x1, x0, #0x1
    d4bc:	str	x1, [sp, #24]
    d4c0:	ldr	x1, [sp, #16]
    d4c4:	ldrb	w1, [x1]
    d4c8:	strb	w1, [x0]
    d4cc:	ldr	x0, [sp, #16]
    d4d0:	add	x1, x0, #0x1
    d4d4:	str	x1, [sp, #16]
    d4d8:	ldrb	w0, [x0]
    d4dc:	cmp	w0, #0x0
    d4e0:	b.ne	d4b4 <grub_stpcpy+0x1c>  // b.any
    d4e4:	ldr	x0, [sp, #24]
    d4e8:	sub	x0, x0, #0x1
    d4ec:	add	sp, sp, #0x20
    d4f0:	ret

000000000000d4f4 <grub_memcpy>:
    d4f4:	stp	x29, x30, [sp, #-48]!
    d4f8:	mov	x29, sp
    d4fc:	str	x0, [sp, #40]
    d500:	str	x1, [sp, #32]
    d504:	str	x2, [sp, #24]
    d508:	ldr	x2, [sp, #24]
    d50c:	ldr	x1, [sp, #32]
    d510:	ldr	x0, [sp, #40]
    d514:	bl	0 <grub_memmove>
    d518:	ldp	x29, x30, [sp], #48
    d51c:	ret

000000000000d520 <grub_new_substring>:
    d520:	stp	x29, x30, [sp, #-64]!
    d524:	mov	x29, sp
    d528:	str	x0, [sp, #40]
    d52c:	str	x1, [sp, #32]
    d530:	str	x2, [sp, #24]
    d534:	ldr	x1, [sp, #24]
    d538:	ldr	x0, [sp, #32]
    d53c:	cmp	x1, x0
    d540:	b.cs	d54c <grub_new_substring+0x2c>  // b.hs, b.nlast
    d544:	mov	x0, #0x0                   	// #0
    d548:	b	d5b0 <grub_new_substring+0x90>
    d54c:	ldr	x1, [sp, #24]
    d550:	ldr	x0, [sp, #32]
    d554:	sub	x0, x1, x0
    d558:	str	x0, [sp, #56]
    d55c:	ldr	x0, [sp, #56]
    d560:	add	x0, x0, #0x1
    d564:	bl	0 <grub_malloc>
    d568:	str	x0, [sp, #48]
    d56c:	ldr	x0, [sp, #48]
    d570:	cmp	x0, #0x0
    d574:	b.ne	d580 <grub_new_substring+0x60>  // b.any
    d578:	mov	x0, #0x0                   	// #0
    d57c:	b	d5b0 <grub_new_substring+0x90>
    d580:	ldr	x1, [sp, #40]
    d584:	ldr	x0, [sp, #32]
    d588:	add	x0, x1, x0
    d58c:	ldr	x2, [sp, #56]
    d590:	mov	x1, x0
    d594:	ldr	x0, [sp, #48]
    d598:	bl	d4f4 <grub_memcpy>
    d59c:	ldr	x1, [sp, #48]
    d5a0:	ldr	x0, [sp, #56]
    d5a4:	add	x0, x1, x0
    d5a8:	strb	wzr, [x0]
    d5ac:	ldr	x0, [sp, #48]
    d5b0:	ldp	x29, x30, [sp], #64
    d5b4:	ret

000000000000d5b8 <canonicalize_path>:
    d5b8:	stp	x29, x30, [sp, #-128]!
    d5bc:	mov	x29, sp
    d5c0:	str	x19, [sp, #16]
    d5c4:	str	x0, [sp, #40]
    d5c8:	str	xzr, [sp, #104]
    d5cc:	mov	w0, #0x1                   	// #1
    d5d0:	str	w0, [sp, #100]
    d5d4:	ldr	x0, [sp, #40]
    d5d8:	str	x0, [sp, #112]
    d5dc:	b	d608 <canonicalize_path+0x50>
    d5e0:	ldr	x0, [sp, #112]
    d5e4:	ldrb	w0, [x0]
    d5e8:	cmp	w0, #0x2f
    d5ec:	b.ne	d5fc <canonicalize_path+0x44>  // b.any
    d5f0:	ldr	w0, [sp, #100]
    d5f4:	add	w0, w0, #0x1
    d5f8:	str	w0, [sp, #100]
    d5fc:	ldr	x0, [sp, #112]
    d600:	add	x0, x0, #0x1
    d604:	str	x0, [sp, #112]
    d608:	ldr	x0, [sp, #112]
    d60c:	ldrb	w0, [x0]
    d610:	cmp	w0, #0x0
    d614:	b.ne	d5e0 <canonicalize_path+0x28>  // b.any
    d618:	ldrsw	x0, [sp, #100]
    d61c:	lsl	x0, x0, #3
    d620:	bl	0 <grub_malloc>
    d624:	str	x0, [sp, #56]
    d628:	ldr	x0, [sp, #56]
    d62c:	cmp	x0, #0x0
    d630:	b.ne	d63c <canonicalize_path+0x84>  // b.any
    d634:	mov	x0, #0x0                   	// #0
    d638:	b	d9bc <canonicalize_path+0x404>
    d63c:	str	wzr, [sp, #124]
    d640:	b	d664 <canonicalize_path+0xac>
    d644:	ldrsw	x0, [sp, #124]
    d648:	lsl	x0, x0, #3
    d64c:	ldr	x1, [sp, #56]
    d650:	add	x0, x1, x0
    d654:	str	xzr, [x0]
    d658:	ldr	w0, [sp, #124]
    d65c:	add	w0, w0, #0x1
    d660:	str	w0, [sp, #124]
    d664:	ldr	w1, [sp, #124]
    d668:	ldr	w0, [sp, #100]
    d66c:	cmp	w1, w0
    d670:	b.lt	d644 <canonicalize_path+0x8c>  // b.tstop
    d674:	ldr	x0, [sp, #40]
    d678:	str	x0, [sp, #112]
    d67c:	str	wzr, [sp, #124]
    d680:	b	d734 <canonicalize_path+0x17c>
    d684:	mov	w1, #0x2f                  	// #47
    d688:	ldr	x0, [sp, #112]
    d68c:	bl	0 <grub_strchr>
    d690:	str	x0, [sp, #88]
    d694:	ldr	x0, [sp, #88]
    d698:	cmp	x0, #0x0
    d69c:	b.ne	d6b8 <canonicalize_path+0x100>  // b.any
    d6a0:	ldr	x0, [sp, #112]
    d6a4:	bl	0 <grub_strlen>
    d6a8:	mov	x1, x0
    d6ac:	ldr	x0, [sp, #112]
    d6b0:	add	x0, x0, x1
    d6b4:	str	x0, [sp, #88]
    d6b8:	ldr	x1, [sp, #88]
    d6bc:	ldr	x0, [sp, #112]
    d6c0:	sub	x0, x1, x0
    d6c4:	mov	x2, x0
    d6c8:	ldrsw	x0, [sp, #124]
    d6cc:	lsl	x0, x0, #3
    d6d0:	ldr	x1, [sp, #56]
    d6d4:	add	x19, x1, x0
    d6d8:	mov	x1, #0x0                   	// #0
    d6dc:	ldr	x0, [sp, #112]
    d6e0:	bl	d520 <grub_new_substring>
    d6e4:	str	x0, [x19]
    d6e8:	ldrsw	x0, [sp, #124]
    d6ec:	lsl	x0, x0, #3
    d6f0:	ldr	x1, [sp, #56]
    d6f4:	add	x0, x1, x0
    d6f8:	ldr	x0, [x0]
    d6fc:	cmp	x0, #0x0
    d700:	b.eq	d968 <canonicalize_path+0x3b0>  // b.none
    d704:	ldr	x0, [sp, #88]
    d708:	ldrb	w0, [x0]
    d70c:	cmp	w0, #0x0
    d710:	b.eq	d724 <canonicalize_path+0x16c>  // b.none
    d714:	ldr	x0, [sp, #88]
    d718:	add	x0, x0, #0x1
    d71c:	str	x0, [sp, #112]
    d720:	b	d728 <canonicalize_path+0x170>
    d724:	str	xzr, [sp, #112]
    d728:	ldr	w0, [sp, #124]
    d72c:	add	w0, w0, #0x1
    d730:	str	w0, [sp, #124]
    d734:	ldr	w1, [sp, #124]
    d738:	ldr	w0, [sp, #100]
    d73c:	cmp	w1, w0
    d740:	b.ge	d750 <canonicalize_path+0x198>  // b.tcont
    d744:	ldr	x0, [sp, #112]
    d748:	cmp	x0, #0x0
    d74c:	b.ne	d684 <canonicalize_path+0xcc>  // b.any
    d750:	str	wzr, [sp, #84]
    d754:	ldr	w0, [sp, #100]
    d758:	sub	w0, w0, #0x1
    d75c:	str	w0, [sp, #124]
    d760:	b	d8a0 <canonicalize_path+0x2e8>
    d764:	ldrsw	x0, [sp, #124]
    d768:	lsl	x0, x0, #3
    d76c:	ldr	x1, [sp, #56]
    d770:	add	x0, x1, x0
    d774:	ldr	x2, [x0]
    d778:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    d77c:	add	x0, x0, #0x0
    d780:	ldr	x1, [x0]
    d784:	mov	x0, x2
    d788:	bl	0 <grub_strcmp>
    d78c:	cmp	w0, #0x0
    d790:	b.ne	d7c4 <canonicalize_path+0x20c>  // b.any
    d794:	ldrsw	x0, [sp, #124]
    d798:	lsl	x0, x0, #3
    d79c:	ldr	x1, [sp, #56]
    d7a0:	add	x0, x1, x0
    d7a4:	ldr	x0, [x0]
    d7a8:	bl	0 <grub_free>
    d7ac:	ldrsw	x0, [sp, #124]
    d7b0:	lsl	x0, x0, #3
    d7b4:	ldr	x1, [sp, #56]
    d7b8:	add	x0, x1, x0
    d7bc:	str	xzr, [x0]
    d7c0:	b	d894 <canonicalize_path+0x2dc>
    d7c4:	ldrsw	x0, [sp, #124]
    d7c8:	lsl	x0, x0, #3
    d7cc:	ldr	x1, [sp, #56]
    d7d0:	add	x0, x1, x0
    d7d4:	ldr	x2, [x0]
    d7d8:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    d7dc:	add	x0, x0, #0x0
    d7e0:	ldr	x1, [x0]
    d7e4:	mov	x0, x2
    d7e8:	bl	0 <grub_strcmp>
    d7ec:	cmp	w0, #0x0
    d7f0:	b.ne	d868 <canonicalize_path+0x2b0>  // b.any
    d7f4:	ldr	w0, [sp, #124]
    d7f8:	cmp	w0, #0x0
    d7fc:	b.le	d868 <canonicalize_path+0x2b0>
    d800:	ldrsw	x0, [sp, #124]
    d804:	lsl	x0, x0, #3
    d808:	ldr	x1, [sp, #56]
    d80c:	add	x0, x1, x0
    d810:	ldr	x0, [x0]
    d814:	bl	0 <grub_free>
    d818:	ldrsw	x0, [sp, #124]
    d81c:	lsl	x0, x0, #3
    d820:	ldr	x1, [sp, #56]
    d824:	add	x0, x1, x0
    d828:	str	xzr, [x0]
    d82c:	ldr	w0, [sp, #124]
    d830:	sub	w0, w0, #0x1
    d834:	str	w0, [sp, #124]
    d838:	ldrsw	x0, [sp, #124]
    d83c:	lsl	x0, x0, #3
    d840:	ldr	x1, [sp, #56]
    d844:	add	x0, x1, x0
    d848:	ldr	x0, [x0]
    d84c:	bl	0 <grub_free>
    d850:	ldrsw	x0, [sp, #124]
    d854:	lsl	x0, x0, #3
    d858:	ldr	x1, [sp, #56]
    d85c:	add	x0, x1, x0
    d860:	str	xzr, [x0]
    d864:	b	d894 <canonicalize_path+0x2dc>
    d868:	ldrsw	x0, [sp, #124]
    d86c:	lsl	x0, x0, #3
    d870:	ldr	x1, [sp, #56]
    d874:	add	x0, x1, x0
    d878:	ldr	x0, [x0]
    d87c:	bl	0 <grub_strlen>
    d880:	add	x0, x0, #0x1
    d884:	mov	w1, w0
    d888:	ldr	w0, [sp, #84]
    d88c:	add	w0, w1, w0
    d890:	str	w0, [sp, #84]
    d894:	ldr	w0, [sp, #124]
    d898:	sub	w0, w0, #0x1
    d89c:	str	w0, [sp, #124]
    d8a0:	ldr	w0, [sp, #124]
    d8a4:	cmp	w0, #0x0
    d8a8:	b.ge	d764 <canonicalize_path+0x1ac>  // b.tcont
    d8ac:	ldr	w0, [sp, #84]
    d8b0:	add	w0, w0, #0x1
    d8b4:	sxtw	x0, w0
    d8b8:	bl	0 <grub_malloc>
    d8bc:	str	x0, [sp, #104]
    d8c0:	ldr	x0, [sp, #104]
    d8c4:	cmp	x0, #0x0
    d8c8:	b.eq	d970 <canonicalize_path+0x3b8>  // b.none
    d8cc:	ldr	x0, [sp, #104]
    d8d0:	strb	wzr, [x0]
    d8d4:	ldr	x0, [sp, #104]
    d8d8:	str	x0, [sp, #72]
    d8dc:	mov	w0, #0x1                   	// #1
    d8e0:	str	w0, [sp, #68]
    d8e4:	str	wzr, [sp, #124]
    d8e8:	b	d954 <canonicalize_path+0x39c>
    d8ec:	ldrsw	x0, [sp, #124]
    d8f0:	lsl	x0, x0, #3
    d8f4:	ldr	x1, [sp, #56]
    d8f8:	add	x0, x1, x0
    d8fc:	ldr	x0, [x0]
    d900:	str	x0, [sp, #48]
    d904:	ldr	x0, [sp, #48]
    d908:	cmp	x0, #0x0
    d90c:	b.eq	d948 <canonicalize_path+0x390>  // b.none
    d910:	ldr	w0, [sp, #68]
    d914:	cmp	w0, #0x0
    d918:	b.ne	d934 <canonicalize_path+0x37c>  // b.any
    d91c:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    d920:	add	x0, x0, #0x0
    d924:	ldr	x1, [x0]
    d928:	ldr	x0, [sp, #72]
    d92c:	bl	d498 <grub_stpcpy>
    d930:	str	x0, [sp, #72]
    d934:	ldr	x1, [sp, #48]
    d938:	ldr	x0, [sp, #72]
    d93c:	bl	d498 <grub_stpcpy>
    d940:	str	x0, [sp, #72]
    d944:	str	wzr, [sp, #68]
    d948:	ldr	w0, [sp, #124]
    d94c:	add	w0, w0, #0x1
    d950:	str	w0, [sp, #124]
    d954:	ldr	w1, [sp, #124]
    d958:	ldr	w0, [sp, #100]
    d95c:	cmp	w1, w0
    d960:	b.lt	d8ec <canonicalize_path+0x334>  // b.tstop
    d964:	b	d974 <canonicalize_path+0x3bc>
    d968:	nop
    d96c:	b	d974 <canonicalize_path+0x3bc>
    d970:	nop
    d974:	str	wzr, [sp, #124]
    d978:	b	d9a0 <canonicalize_path+0x3e8>
    d97c:	ldrsw	x0, [sp, #124]
    d980:	lsl	x0, x0, #3
    d984:	ldr	x1, [sp, #56]
    d988:	add	x0, x1, x0
    d98c:	ldr	x0, [x0]
    d990:	bl	0 <grub_free>
    d994:	ldr	w0, [sp, #124]
    d998:	add	w0, w0, #0x1
    d99c:	str	w0, [sp, #124]
    d9a0:	ldr	w1, [sp, #124]
    d9a4:	ldr	w0, [sp, #100]
    d9a8:	cmp	w1, w0
    d9ac:	b.lt	d97c <canonicalize_path+0x3c4>  // b.tstop
    d9b0:	ldr	x0, [sp, #56]
    d9b4:	bl	0 <grub_free>
    d9b8:	ldr	x0, [sp, #104]
    d9bc:	ldr	x19, [sp, #16]
    d9c0:	ldp	x29, x30, [sp], #128
    d9c4:	ret
	...

000000000000d9e0 <grub_resolve_relative_path>:
    d9e0:	stp	x29, x30, [sp, #-80]!
    d9e4:	mov	x29, sp
    d9e8:	str	x19, [sp, #16]
    d9ec:	str	x0, [sp, #40]
    d9f0:	str	x1, [sp, #32]
    d9f4:	ldr	x0, [sp, #32]
    d9f8:	ldrb	w0, [x0]
    d9fc:	cmp	w0, #0x2f
    da00:	b.eq	da14 <grub_resolve_relative_path+0x34>  // b.none
    da04:	ldr	x0, [sp, #32]
    da08:	ldrb	w0, [x0]
    da0c:	cmp	w0, #0x28
    da10:	b.ne	da20 <grub_resolve_relative_path+0x40>  // b.any
    da14:	ldr	x0, [sp, #32]
    da18:	bl	d5b8 <canonicalize_path>
    da1c:	b	daf4 <grub_resolve_relative_path+0x114>
    da20:	ldr	x0, [sp, #40]
    da24:	bl	0 <grub_strlen>
    da28:	mov	x19, x0
    da2c:	ldr	x0, [sp, #32]
    da30:	bl	0 <grub_strlen>
    da34:	add	x0, x19, x0
    da38:	add	x0, x0, #0x3
    da3c:	bl	0 <grub_malloc>
    da40:	str	x0, [sp, #64]
    da44:	ldr	x0, [sp, #64]
    da48:	cmp	x0, #0x0
    da4c:	b.ne	da58 <grub_resolve_relative_path+0x78>  // b.any
    da50:	mov	x0, #0x0                   	// #0
    da54:	b	daf4 <grub_resolve_relative_path+0x114>
    da58:	ldr	x1, [sp, #40]
    da5c:	ldr	x0, [sp, #64]
    da60:	bl	d498 <grub_stpcpy>
    da64:	str	x0, [sp, #72]
    da68:	ldr	x0, [sp, #64]
    da6c:	bl	0 <grub_strlen>
    da70:	str	x0, [sp, #56]
    da74:	ldr	x0, [sp, #56]
    da78:	cmp	x0, #0x0
    da7c:	b.eq	da9c <grub_resolve_relative_path+0xbc>  // b.none
    da80:	ldr	x0, [sp, #56]
    da84:	sub	x0, x0, #0x1
    da88:	ldr	x1, [sp, #64]
    da8c:	add	x0, x1, x0
    da90:	ldrb	w0, [x0]
    da94:	cmp	w0, #0x2f
    da98:	b.eq	dabc <grub_resolve_relative_path+0xdc>  // b.none
    da9c:	ldr	x0, [sp, #72]
    daa0:	mov	w1, #0x2f                  	// #47
    daa4:	strb	w1, [x0]
    daa8:	ldr	x0, [sp, #72]
    daac:	add	x0, x0, #0x1
    dab0:	str	x0, [sp, #72]
    dab4:	ldr	x0, [sp, #72]
    dab8:	strb	wzr, [x0]
    dabc:	ldr	x1, [sp, #32]
    dac0:	ldr	x0, [sp, #72]
    dac4:	bl	d498 <grub_stpcpy>
    dac8:	ldr	x0, [sp, #64]
    dacc:	bl	d5b8 <canonicalize_path>
    dad0:	str	x0, [sp, #48]
    dad4:	ldr	x0, [sp, #48]
    dad8:	cmp	x0, #0x0
    dadc:	b.ne	dae8 <grub_resolve_relative_path+0x108>  // b.any
    dae0:	ldr	x0, [sp, #64]
    dae4:	b	daf4 <grub_resolve_relative_path+0x114>
    dae8:	ldr	x0, [sp, #64]
    daec:	bl	0 <grub_free>
    daf0:	ldr	x0, [sp, #48]
    daf4:	ldr	x19, [sp, #16]
    daf8:	ldp	x29, x30, [sp], #80
    dafc:	ret

000000000000db00 <grub_get_dirname>:
    db00:	stp	x29, x30, [sp, #-48]!
    db04:	mov	x29, sp
    db08:	str	x0, [sp, #24]
    db0c:	mov	w0, #0xffffffff            	// #-1
    db10:	str	w0, [sp, #40]
    db14:	ldr	x0, [sp, #24]
    db18:	bl	0 <grub_strlen>
    db1c:	sub	w0, w0, #0x1
    db20:	str	w0, [sp, #44]
    db24:	b	db58 <grub_get_dirname+0x58>
    db28:	ldrsw	x0, [sp, #44]
    db2c:	ldr	x1, [sp, #24]
    db30:	add	x0, x1, x0
    db34:	ldrb	w0, [x0]
    db38:	cmp	w0, #0x2f
    db3c:	b.ne	db4c <grub_get_dirname+0x4c>  // b.any
    db40:	ldr	w0, [sp, #44]
    db44:	str	w0, [sp, #40]
    db48:	b	db64 <grub_get_dirname+0x64>
    db4c:	ldr	w0, [sp, #44]
    db50:	sub	w0, w0, #0x1
    db54:	str	w0, [sp, #44]
    db58:	ldr	w0, [sp, #44]
    db5c:	cmp	w0, #0x0
    db60:	b.ge	db28 <grub_get_dirname+0x28>  // b.tcont
    db64:	ldr	w0, [sp, #40]
    db68:	cmn	w0, #0x1
    db6c:	b.ne	db84 <grub_get_dirname+0x84>  // b.any
    db70:	adrp	x0, 0 <grub_gfxmenu_viewer_fini>
    db74:	add	x0, x0, #0x0
    db78:	ldr	x0, [x0]
    db7c:	bl	0 <grub_strdup>
    db80:	b	dba0 <grub_get_dirname+0xa0>
    db84:	ldr	w0, [sp, #40]
    db88:	add	w0, w0, #0x1
    db8c:	sxtw	x0, w0
    db90:	mov	x2, x0
    db94:	mov	x1, #0x0                   	// #0
    db98:	ldr	x0, [sp, #24]
    db9c:	bl	d520 <grub_new_substring>
    dba0:	ldp	x29, x30, [sp], #48
    dba4:	ret
	...
