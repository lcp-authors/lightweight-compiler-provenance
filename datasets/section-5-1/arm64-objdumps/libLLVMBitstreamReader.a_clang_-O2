In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMBitstreamReader.a_clang_-O2:

BitstreamReader.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>:
       0:	sub	sp, sp, #0xc0
       4:	stp	x29, x30, [sp, #128]
       8:	stp	x24, x23, [sp, #144]
       c:	stp	x22, x21, [sp, #160]
      10:	stp	x20, x19, [sp, #176]
      14:	add	x29, sp, #0x80
      18:	mov	x19, x8
      1c:	ldp	w8, w9, [x0, #72]
      20:	ldr	w24, [x0, #36]
      24:	mov	x21, x2
      28:	mov	w22, w1
      2c:	mov	x20, x0
      30:	cmp	w8, w9
      34:	add	x23, x0, #0x40
      38:	b.cs	350 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x350>  // b.hs, b.nlast
      3c:	ldr	x10, [x23]
      40:	mov	w11, w8
      44:	cmp	w8, w9
      48:	add	x9, x10, x11, lsl #5
      4c:	str	w24, [x9]
      50:	stp	xzr, xzr, [x9, #16]
      54:	str	xzr, [x9, #8]
      58:	b.cs	36c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x36c>  // b.hs, b.nlast
      5c:	mov	x0, x20
      60:	ldr	q0, [x0, #40]!
      64:	add	w8, w8, #0x1
      68:	add	x9, x10, x8, lsl #5
      6c:	str	w8, [x0, #32]
      70:	stur	q0, [x9, #-24]
      74:	ldr	x8, [x0, #16]
      78:	stur	x8, [x9, #-8]
      7c:	ldr	x9, [x0, #296]
      80:	stp	xzr, xzr, [x0]
      84:	str	xzr, [x0, #16]
      88:	cbz	x9, f4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0xf4>
      8c:	ldp	x8, x9, [x9]
      90:	cmp	x8, x9
      94:	b.eq	b8 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0xb8>  // b.none
      98:	mov	x10, x9
      9c:	ldr	w11, [x10, #-88]!
      a0:	cmp	w11, w22
      a4:	b.ne	b8 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0xb8>  // b.any
      a8:	ldp	x2, x3, [x10, #8]
      ac:	mov	x1, xzr
      b0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
      b4:	b	f4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0xf4>
      b8:	sub	x9, x9, x8
      bc:	mov	w10, #0x8ba3                	// #35747
      c0:	lsr	x9, x9, #3
      c4:	movk	w10, #0xba2e, lsl #16
      c8:	mul	w9, w9, w10
      cc:	cbz	w9, f4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0xf4>
      d0:	mov	w11, wzr
      d4:	mov	w12, #0x58                  	// #88
      d8:	umaddl	x10, w11, w12, x8
      dc:	ldr	w13, [x10]
      e0:	cmp	w13, w22
      e4:	b.eq	a8 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0xa8>  // b.none
      e8:	add	w11, w11, #0x1
      ec:	cmp	w9, w11
      f0:	b.ne	d8 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0xd8>  // b.any
      f4:	mov	x8, sp
      f8:	mov	w1, #0x4                   	// #4
      fc:	mov	x0, x20
     100:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     104:	ldrb	w10, [sp, #8]
     108:	ubfiz	w9, w10, #1, #1
     10c:	and	w8, w10, #0xfffffffd
     110:	orr	w11, w9, w8
     114:	strb	w11, [sp, #8]
     118:	tbnz	w10, #0, 200 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x200>
     11c:	cbnz	w9, 364 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x364>
     120:	ldr	w22, [sp]
     124:	cmp	w22, #0x41
     128:	str	w22, [x20, #36]
     12c:	b.cc	250 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x250>  // b.lo, b.ul, b.last
     130:	bl	0 <_ZNSt3_V216generic_categoryEv>
     134:	sturb	wzr, [x29, #-16]
     138:	mov	w9, #0x1                   	// #1
     13c:	stp	xzr, xzr, [sp, #64]
     140:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
     144:	ldr	x10, [x10]
     148:	str	w22, [sp, #32]
     14c:	str	w9, [sp, #80]
     150:	adrp	x9, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     154:	ldr	x9, [x9]
     158:	sub	x8, x29, #0x20
     15c:	adrp	x11, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     160:	add	x10, x10, #0x10
     164:	mov	x20, x0
     168:	add	x11, x11, #0x0
     16c:	stp	x10, xzr, [sp, #48]
     170:	mov	w10, #0x40                  	// #64
     174:	str	x8, [sp, #88]
     178:	add	x22, x8, #0x10
     17c:	add	x8, x9, #0x10
     180:	add	x0, sp, #0x30
     184:	add	x1, sp, #0x10
     188:	stp	x22, xzr, [x29, #-32]
     18c:	stp	x8, x11, [sp, #16]
     190:	str	x10, [sp, #40]
     194:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
     198:	ldr	x8, [sp, #72]
     19c:	ldr	x9, [sp, #56]
     1a0:	cmp	x8, x9
     1a4:	b.eq	1b0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1b0>  // b.none
     1a8:	add	x0, sp, #0x30
     1ac:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     1b0:	ldr	x23, [sp, #88]
     1b4:	mov	w0, #0x40                  	// #64
     1b8:	bl	0 <_Znwm>
     1bc:	mov	w8, #0x104                 	// #260
     1c0:	add	x1, sp, #0x10
     1c4:	mov	w2, #0x54                  	// #84
     1c8:	mov	x3, x20
     1cc:	mov	x21, x0
     1d0:	strh	w8, [sp, #32]
     1d4:	stp	x23, xzr, [sp, #16]
     1d8:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
     1dc:	orr	x8, x21, #0x1
     1e0:	add	x0, sp, #0x30
     1e4:	str	x8, [x19]
     1e8:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     1ec:	ldur	x0, [x29, #-32]
     1f0:	cmp	x0, x22
     1f4:	b.eq	214 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x214>  // b.none
     1f8:	bl	0 <_ZdlPv>
     1fc:	b	214 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x214>
     200:	ldr	x9, [sp]
     204:	strb	w8, [sp, #8]
     208:	str	xzr, [sp]
     20c:	orr	x8, x9, #0x1
     210:	str	x8, [x19]
     214:	ldrb	w8, [sp, #8]
     218:	tbnz	w8, #1, 364 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x364>
     21c:	tbz	w8, #0, 238 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x238>
     220:	ldr	x0, [sp]
     224:	cbz	x0, 234 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x234>
     228:	ldr	x8, [x0]
     22c:	ldr	x8, [x8, #8]
     230:	blr	x8
     234:	str	xzr, [sp]
     238:	ldp	x20, x19, [sp, #176]
     23c:	ldp	x22, x21, [sp, #160]
     240:	ldp	x24, x23, [sp, #144]
     244:	ldp	x29, x30, [sp, #128]
     248:	add	sp, sp, #0xc0
     24c:	ret
     250:	ldr	w8, [x20, #32]
     254:	subs	w8, w8, #0x20
     258:	b.cc	270 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x270>  // b.lo, b.ul, b.last
     25c:	ldr	x9, [x20, #24]
     260:	lsr	x8, x9, x8
     264:	str	x8, [x20, #24]
     268:	mov	w8, #0x20                  	// #32
     26c:	b	274 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x274>
     270:	mov	w8, wzr
     274:	str	w8, [x20, #32]
     278:	add	x8, sp, #0x30
     27c:	mov	w1, #0x20                  	// #32
     280:	mov	x0, x20
     284:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     288:	ldrb	w10, [sp, #56]
     28c:	ubfiz	w9, w10, #1, #1
     290:	and	w8, w10, #0xfffffffd
     294:	orr	w11, w9, w8
     298:	strb	w11, [sp, #56]
     29c:	tbnz	w10, #0, 2d4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2d4>
     2a0:	cbnz	w9, 348 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x348>
     2a4:	cbz	x21, 2b0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2b0>
     2a8:	ldr	x8, [sp, #48]
     2ac:	str	w8, [x21]
     2b0:	ldr	w8, [x20, #36]
     2b4:	cbz	w8, 310 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x310>
     2b8:	ldr	w8, [x20, #32]
     2bc:	cbnz	w8, 2cc <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2cc>
     2c0:	ldp	x8, x9, [x20, #8]
     2c4:	cmp	x8, x9
     2c8:	b.ls	324 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x324>  // b.plast
     2cc:	mov	w8, #0x1                   	// #1
     2d0:	b	2e4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2e4>
     2d4:	ldr	x9, [sp, #48]
     2d8:	strb	w8, [sp, #56]
     2dc:	str	xzr, [sp, #48]
     2e0:	orr	x8, x9, #0x1
     2e4:	str	x8, [x19]
     2e8:	ldrb	w8, [sp, #56]
     2ec:	tbnz	w8, #1, 348 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x348>
     2f0:	tbz	w8, #0, 214 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x214>
     2f4:	ldr	x0, [sp, #48]
     2f8:	cbz	x0, 308 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x308>
     2fc:	ldr	x8, [x0]
     300:	ldr	x8, [x8, #8]
     304:	blr	x8
     308:	str	xzr, [sp, #48]
     30c:	b	214 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x214>
     310:	bl	0 <_ZNSt3_V216generic_categoryEv>
     314:	adrp	x2, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     318:	mov	x1, x0
     31c:	add	x2, x2, #0x0
     320:	b	334 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x334>
     324:	bl	0 <_ZNSt3_V216generic_categoryEv>
     328:	adrp	x2, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     32c:	mov	x1, x0
     330:	add	x2, x2, #0x0
     334:	mov	w0, #0x54                  	// #84
     338:	mov	x8, x19
     33c:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
     340:	ldrb	w8, [sp, #56]
     344:	tbz	w8, #1, 2f0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2f0>
     348:	add	x0, sp, #0x30
     34c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     350:	mov	x0, x23
     354:	mov	x1, xzr
     358:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     35c:	ldp	w8, w9, [x20, #72]
     360:	b	3c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x3c>
     364:	mov	x0, sp
     368:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     36c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     370:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     374:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     378:	add	x0, x0, #0x0
     37c:	add	x1, x1, #0x0
     380:	add	x3, x3, #0x0
     384:	mov	w2, #0x43                  	// #67
     388:	bl	0 <__assert_fail>

000000000000038c <_ZN4llvm15BitstreamCursor10skipRecordEj>:
     38c:	sub	sp, sp, #0xa0
     390:	stp	x29, x30, [sp, #64]
     394:	stp	x28, x27, [sp, #80]
     398:	stp	x26, x25, [sp, #96]
     39c:	stp	x24, x23, [sp, #112]
     3a0:	stp	x22, x21, [sp, #128]
     3a4:	stp	x20, x19, [sp, #144]
     3a8:	add	x29, sp, #0x40
     3ac:	mov	x20, x0
     3b0:	cmp	w1, #0x3
     3b4:	mov	x19, x8
     3b8:	b.ne	4ec <_ZN4llvm15BitstreamCursor10skipRecordEj+0x160>  // b.any
     3bc:	sub	x8, x29, #0x10
     3c0:	mov	w1, #0x6                   	// #6
     3c4:	mov	x0, x20
     3c8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     3cc:	ldurb	w10, [x29, #-8]
     3d0:	ubfiz	w9, w10, #1, #1
     3d4:	and	w8, w10, #0xfffffffd
     3d8:	orr	w11, w9, w8
     3dc:	sturb	w11, [x29, #-8]
     3e0:	tbnz	w10, #0, 580 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1f4>
     3e4:	cbnz	w9, ad8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x74c>
     3e8:	ldur	w21, [x29, #-16]
     3ec:	add	x8, sp, #0x20
     3f0:	mov	w1, #0x6                   	// #6
     3f4:	mov	x0, x20
     3f8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     3fc:	ldrb	w8, [sp, #40]
     400:	lsl	w9, w8, #1
     404:	and	w10, w9, #0x2
     408:	and	w11, w8, #0xfffffffd
     40c:	orr	w10, w10, w11
     410:	strb	w10, [sp, #40]
     414:	tbnz	w9, #1, b00 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x774>
     418:	tbnz	w8, #0, b18 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x78c>
     41c:	ldr	w22, [sp, #32]
     420:	cbz	w22, 4ac <_ZN4llvm15BitstreamCursor10skipRecordEj+0x120>
     424:	add	x8, sp, #0x10
     428:	mov	w1, #0x6                   	// #6
     42c:	mov	x0, x20
     430:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     434:	ldrb	w10, [sp, #24]
     438:	ubfiz	w9, w10, #1, #1
     43c:	and	w8, w10, #0xfffffffd
     440:	orr	w9, w9, w8
     444:	strb	w9, [sp, #24]
     448:	tbnz	w10, #0, 458 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xcc>
     44c:	mov	w23, wzr
     450:	mov	w8, w9
     454:	b	480 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xf4>
     458:	ldrb	w9, [x19, #8]
     45c:	ldr	x10, [sp, #16]
     460:	strb	w8, [sp, #24]
     464:	str	xzr, [sp, #16]
     468:	orr	w11, w9, #0x3
     46c:	ands	x9, x10, #0xfffffffffffffffe
     470:	strb	w11, [x19, #8]
     474:	b.eq	ab0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x724>  // b.none
     478:	mov	w23, #0x1                   	// #1
     47c:	str	x9, [x19]
     480:	tbnz	w8, #1, ad0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x744>
     484:	tbz	w8, #0, 4a0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x114>
     488:	ldr	x0, [sp, #16]
     48c:	cbz	x0, 49c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x110>
     490:	ldr	x8, [x0]
     494:	ldr	x8, [x8, #8]
     498:	blr	x8
     49c:	str	xzr, [sp, #16]
     4a0:	cbnz	w23, 4c0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x134>
     4a4:	subs	w22, w22, #0x1
     4a8:	b.ne	424 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x98>  // b.any
     4ac:	ldrb	w8, [x19, #8]
     4b0:	str	w21, [x19]
     4b4:	and	w8, w8, #0xfc
     4b8:	orr	w8, w8, #0x2
     4bc:	strb	w8, [x19, #8]
     4c0:	ldrb	w8, [sp, #40]
     4c4:	tbnz	w8, #1, b00 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x774>
     4c8:	tbz	w8, #0, 4e4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x158>
     4cc:	ldr	x0, [sp, #32]
     4d0:	cbz	x0, 4e0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x154>
     4d4:	ldr	x8, [x0]
     4d8:	ldr	x8, [x8, #8]
     4dc:	blr	x8
     4e0:	str	xzr, [sp, #32]
     4e4:	ldurb	w8, [x29, #-8]
     4e8:	b	5a4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x218>
     4ec:	ldp	x8, x10, [x20, #40]
     4f0:	sub	w9, w1, #0x4
     4f4:	sub	x10, x10, x8
     4f8:	cmp	x9, x10, asr #4
     4fc:	b.cs	b08 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x77c>  // b.hs, b.nlast
     500:	lsl	x9, x9, #4
     504:	ldr	x21, [x8, x9]
     508:	ldr	w23, [x21, #8]
     50c:	cbz	w23, 9b0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x624>
     510:	ldr	x1, [x21]
     514:	ldrb	w8, [x1, #8]
     518:	tbnz	w8, #0, 5c8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x23c>
     51c:	ubfx	w8, w8, #1, #3
     520:	cmp	w8, #0x5
     524:	b.eq	530 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1a4>  // b.none
     528:	cmp	w8, #0x3
     52c:	b.ne	9d0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x644>  // b.any
     530:	bl	0 <_ZNSt3_V216generic_categoryEv>
     534:	adrp	x2, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     538:	mov	x1, x0
     53c:	add	x2, x2, #0x0
     540:	add	x8, sp, #0x8
     544:	mov	w0, #0x54                  	// #84
     548:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
     54c:	ldr	x9, [sp, #8]
     550:	ldrb	w8, [x19, #8]
     554:	tst	x9, #0xfffffffffffffffe
     558:	orr	w10, w8, #0x3
     55c:	and	x8, x9, #0xfffffffffffffffe
     560:	cset	w9, ne  // ne = any
     564:	orr	x9, x8, x9
     568:	strb	w10, [x19, #8]
     56c:	str	x9, [sp, #8]
     570:	cbz	x8, ab0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x724>
     574:	str	x8, [x19]
     578:	str	xzr, [sp, #8]
     57c:	b	a28 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x69c>
     580:	ldur	x9, [x29, #-16]
     584:	ldrb	w10, [x19, #8]
     588:	sturb	w8, [x29, #-8]
     58c:	stur	xzr, [x29, #-16]
     590:	ands	x9, x9, #0xfffffffffffffffe
     594:	orr	w10, w10, #0x3
     598:	strb	w10, [x19, #8]
     59c:	b.eq	ab0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x724>  // b.none
     5a0:	str	x9, [x19]
     5a4:	tbnz	w8, #1, ad8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x74c>
     5a8:	tbz	w8, #0, a28 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x69c>
     5ac:	ldur	x0, [x29, #-16]
     5b0:	cbz	x0, 5c0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x234>
     5b4:	ldr	x8, [x0]
     5b8:	ldr	x8, [x8, #8]
     5bc:	blr	x8
     5c0:	stur	xzr, [x29, #-16]
     5c4:	b	a28 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x69c>
     5c8:	ldr	x22, [x1]
     5cc:	cmp	w23, #0x2
     5d0:	b.cc	a14 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x688>  // b.lo, b.ul, b.last
     5d4:	mov	w24, #0x1                   	// #1
     5d8:	ldr	x8, [x21]
     5dc:	add	x1, x8, w24, uxtw #4
     5e0:	ldrb	w8, [x1, #8]
     5e4:	tbnz	w8, #0, 998 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x60c>
     5e8:	ubfx	w8, w8, #1, #3
     5ec:	cmp	w8, #0x3
     5f0:	b.eq	64c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x2c0>  // b.none
     5f4:	cmp	w8, #0x5
     5f8:	b.ne	6ec <_ZN4llvm15BitstreamCursor10skipRecordEj+0x360>  // b.any
     5fc:	sub	x8, x29, #0x10
     600:	mov	w1, #0x6                   	// #6
     604:	mov	x0, x20
     608:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     60c:	ldurb	w11, [x29, #-8]
     610:	ubfiz	w10, w11, #1, #1
     614:	and	w9, w11, #0xfffffffd
     618:	orr	w8, w10, w9
     61c:	sturb	w8, [x29, #-8]
     620:	tbnz	w11, #0, 71c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x390>
     624:	cbnz	w10, ad8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x74c>
     628:	ldr	w10, [x20, #32]
     62c:	ldur	w9, [x29, #-16]
     630:	subs	w10, w10, #0x20
     634:	b.cc	7a0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x414>  // b.lo, b.ul, b.last
     638:	ldr	x11, [x20, #24]
     63c:	lsr	x10, x11, x10
     640:	str	x10, [x20, #24]
     644:	mov	w10, #0x20                  	// #32
     648:	b	7a4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x418>
     64c:	sub	x8, x29, #0x10
     650:	mov	w1, #0x6                   	// #6
     654:	mov	x0, x20
     658:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     65c:	ldurb	w10, [x29, #-8]
     660:	ubfiz	w9, w10, #1, #1
     664:	and	w8, w10, #0xfffffffd
     668:	orr	w11, w9, w8
     66c:	sturb	w11, [x29, #-8]
     670:	tbnz	w10, #0, 748 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x3bc>
     674:	cbnz	w9, ad8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x74c>
     678:	add	w8, w24, #0x2
     67c:	cmp	w8, w23
     680:	b.ne	b38 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x7ac>  // b.any
     684:	ldr	w8, [x21, #8]
     688:	add	w24, w24, #0x1
     68c:	cmp	w8, w24
     690:	b.ls	9b0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x624>  // b.plast
     694:	ldr	x8, [x21]
     698:	ldur	w25, [x29, #-16]
     69c:	add	x26, x8, w24, uxtw #4
     6a0:	mov	x27, x26
     6a4:	ldrb	w8, [x27, #8]!
     6a8:	tbnz	w8, #0, b58 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x7cc>
     6ac:	ubfx	w9, w8, #1, #3
     6b0:	cmp	w9, #0x1
     6b4:	b.eq	8d8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x54c>  // b.none
     6b8:	cmp	w9, #0x2
     6bc:	b.eq	820 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x494>  // b.none
     6c0:	cmp	w9, #0x4
     6c4:	b.ne	b78 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x7ec>  // b.any
     6c8:	ldr	x8, [x20, #16]
     6cc:	ldr	w9, [x20, #32]
     6d0:	add	w10, w25, w25, lsl #1
     6d4:	lsl	w10, w10, #1
     6d8:	add	x8, x10, x8, lsl #3
     6dc:	sub	x1, x8, x9
     6e0:	add	x8, sp, #0x20
     6e4:	mov	x0, x20
     6e8:	b	904 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x578>
     6ec:	sub	x8, x29, #0x10
     6f0:	mov	x0, x20
     6f4:	bl	bd0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     6f8:	ldurb	w10, [x29, #-8]
     6fc:	ubfiz	w9, w10, #1, #1
     700:	and	w8, w10, #0xfffffffd
     704:	orr	w9, w9, w8
     708:	sturb	w9, [x29, #-8]
     70c:	tbnz	w10, #0, 770 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x3e4>
     710:	mov	w25, #0x7                   	// #7
     714:	mov	w8, w9
     718:	b	798 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x40c>
     71c:	ldrb	w8, [x19, #8]
     720:	ldur	x10, [x29, #-16]
     724:	sturb	w9, [x29, #-8]
     728:	stur	xzr, [x29, #-16]
     72c:	orr	w11, w8, #0x3
     730:	ands	x8, x10, #0xfffffffffffffffe
     734:	strb	w11, [x19, #8]
     738:	b.eq	ab0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x724>  // b.none
     73c:	str	x8, [x19]
     740:	mov	w25, #0x1                   	// #1
     744:	b	96c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5e0>
     748:	ldrb	w9, [x19, #8]
     74c:	ldur	x10, [x29, #-16]
     750:	sturb	w8, [x29, #-8]
     754:	stur	xzr, [x29, #-16]
     758:	orr	w9, w9, #0x3
     75c:	ands	x8, x10, #0xfffffffffffffffe
     760:	strb	w9, [x19, #8]
     764:	b.eq	ab0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x724>  // b.none
     768:	str	x8, [x19]
     76c:	b	934 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5a8>
     770:	ldrb	w9, [x19, #8]
     774:	ldur	x10, [x29, #-16]
     778:	sturb	w8, [x29, #-8]
     77c:	stur	xzr, [x29, #-16]
     780:	orr	w11, w9, #0x3
     784:	ands	x9, x10, #0xfffffffffffffffe
     788:	strb	w11, [x19, #8]
     78c:	b.eq	ab0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x724>  // b.none
     790:	mov	w25, #0x1                   	// #1
     794:	str	x9, [x19]
     798:	tbz	w8, #1, 954 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5c8>
     79c:	b	af8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x76c>
     7a0:	mov	w10, wzr
     7a4:	lsl	w12, w9, #3
     7a8:	ldp	x9, x11, [x20, #8]
     7ac:	add	w12, w12, #0x18
     7b0:	and	w12, w12, #0xffffffe0
     7b4:	str	w10, [x20, #32]
     7b8:	lsl	x11, x11, #3
     7bc:	sub	x11, x11, x10
     7c0:	add	x1, x11, x12
     7c4:	cmp	x9, x1, lsr #3
     7c8:	b.cs	7dc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x450>  // b.hs, b.nlast
     7cc:	str	x9, [x20, #16]
     7d0:	mov	w25, #0x5                   	// #5
     7d4:	mov	w9, w8
     7d8:	b	96c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5e0>
     7dc:	add	x8, sp, #0x20
     7e0:	mov	x0, x20
     7e4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     7e8:	ldr	x9, [sp, #32]
     7ec:	tst	x9, #0xfffffffffffffffe
     7f0:	and	x8, x9, #0xfffffffffffffffe
     7f4:	cset	w9, ne  // ne = any
     7f8:	orr	x9, x8, x9
     7fc:	str	x9, [sp, #32]
     800:	cbz	x8, 960 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5d4>
     804:	ldrb	w9, [x19, #8]
     808:	str	x8, [x19]
     80c:	str	xzr, [sp, #32]
     810:	mov	w25, #0x1                   	// #1
     814:	orr	w8, w9, #0x3
     818:	strb	w8, [x19, #8]
     81c:	b	968 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5dc>
     820:	ldr	w9, [x26]
     824:	cmp	x9, #0x40
     828:	b.hi	b88 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x7fc>  // b.pmore
     82c:	cbz	w25, 948 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5bc>
     830:	tbnz	w8, #0, a90 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x704>
     834:	ubfx	w8, w8, #1, #3
     838:	sub	w9, w8, #0x1
     83c:	cmp	w9, #0x2
     840:	b.cs	a84 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6f8>  // b.hs, b.nlast
     844:	ldr	w1, [x26]
     848:	add	x8, sp, #0x20
     84c:	mov	x0, x20
     850:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     854:	ldrb	w10, [sp, #40]
     858:	ubfiz	w9, w10, #1, #1
     85c:	and	w8, w10, #0xfffffffd
     860:	orr	w9, w9, w8
     864:	strb	w9, [sp, #40]
     868:	tbnz	w10, #0, 878 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x4ec>
     86c:	mov	w28, wzr
     870:	mov	w8, w9
     874:	b	8a0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x514>
     878:	ldrb	w9, [x19, #8]
     87c:	ldr	x10, [sp, #32]
     880:	strb	w8, [sp, #40]
     884:	str	xzr, [sp, #32]
     888:	orr	w11, w9, #0x3
     88c:	ands	x9, x10, #0xfffffffffffffffe
     890:	strb	w11, [x19, #8]
     894:	b.eq	ab0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x724>  // b.none
     898:	mov	w28, #0x1                   	// #1
     89c:	str	x9, [x19]
     8a0:	tbnz	w8, #1, af0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x764>
     8a4:	tbz	w8, #0, 8c0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x534>
     8a8:	ldr	x0, [sp, #32]
     8ac:	cbz	x0, 8bc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x530>
     8b0:	ldr	x8, [x0]
     8b4:	ldr	x8, [x8, #8]
     8b8:	blr	x8
     8bc:	str	xzr, [sp, #32]
     8c0:	cbnz	w28, 934 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5a8>
     8c4:	sub	w25, w25, #0x1
     8c8:	cbz	w25, 948 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5bc>
     8cc:	ldrb	w8, [x27]
     8d0:	tbz	w8, #0, 834 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x4a8>
     8d4:	b	a90 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x704>
     8d8:	ldr	x8, [x26]
     8dc:	and	x9, x8, #0xffffffff
     8e0:	cmp	x9, #0x41
     8e4:	b.cs	ba8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x81c>  // b.hs, b.nlast
     8e8:	ldr	x9, [x20, #16]
     8ec:	ldr	w10, [x20, #32]
     8f0:	mov	x0, x20
     8f4:	lsl	x9, x9, #3
     8f8:	sub	x9, x9, x10
     8fc:	madd	x1, x8, x25, x9
     900:	add	x8, sp, #0x20
     904:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     908:	ldr	x9, [sp, #32]
     90c:	tst	x9, #0xfffffffffffffffe
     910:	and	x8, x9, #0xfffffffffffffffe
     914:	cset	w9, ne  // ne = any
     918:	orr	x9, x8, x9
     91c:	str	x9, [sp, #32]
     920:	cbz	x8, 944 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5b8>
     924:	ldrb	w9, [x19, #8]
     928:	str	x8, [x19]
     92c:	orr	w8, w9, #0x3
     930:	strb	w8, [x19, #8]
     934:	mov	w25, #0x1                   	// #1
     938:	ldurb	w8, [x29, #-8]
     93c:	tbz	w8, #1, 954 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5c8>
     940:	b	ad8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x74c>
     944:	cbnz	x9, bc8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x83c>
     948:	mov	w25, #0x7                   	// #7
     94c:	ldurb	w8, [x29, #-8]
     950:	tbnz	w8, #1, ad8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x74c>
     954:	tbnz	w8, #0, 974 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5e8>
     958:	cbnz	w25, 990 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x604>
     95c:	b	998 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x60c>
     960:	cbnz	x9, bc8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x83c>
     964:	mov	w25, wzr
     968:	ldurb	w9, [x29, #-8]
     96c:	tbnz	w9, #1, ad8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x74c>
     970:	tbz	w9, #0, 958 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5cc>
     974:	ldur	x0, [x29, #-16]
     978:	cbz	x0, 988 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5fc>
     97c:	ldr	x8, [x0]
     980:	ldr	x8, [x8, #8]
     984:	blr	x8
     988:	stur	xzr, [x29, #-16]
     98c:	cbz	w25, 998 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x60c>
     990:	cmp	w25, #0x7
     994:	b.ne	a0c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x680>  // b.any
     998:	add	w24, w24, #0x1
     99c:	cmp	w24, w23
     9a0:	b.cs	a14 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x688>  // b.hs, b.nlast
     9a4:	ldr	w8, [x21, #8]
     9a8:	cmp	w8, w24
     9ac:	b.hi	5d8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x24c>  // b.pmore
     9b0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     9b4:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     9b8:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     9bc:	add	x0, x0, #0x0
     9c0:	add	x1, x1, #0x0
     9c4:	add	x3, x3, #0x0
     9c8:	mov	w2, #0x99                  	// #153
     9cc:	bl	0 <__assert_fail>
     9d0:	sub	x8, x29, #0x10
     9d4:	mov	x0, x20
     9d8:	bl	bd0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     9dc:	ldurb	w10, [x29, #-8]
     9e0:	ubfiz	w9, w10, #1, #1
     9e4:	and	w8, w10, #0xfffffffd
     9e8:	orr	w11, w9, w8
     9ec:	sturb	w11, [x29, #-8]
     9f0:	tbnz	w10, #0, a48 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6bc>
     9f4:	cbnz	w9, af8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x76c>
     9f8:	ldur	x22, [x29, #-16]
     9fc:	ldr	w23, [x21, #8]
     a00:	cmp	w23, #0x2
     a04:	b.cs	5d4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x248>  // b.hs, b.nlast
     a08:	b	a14 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x688>
     a0c:	cmp	w25, #0x5
     a10:	b.ne	a28 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x69c>  // b.any
     a14:	ldrb	w8, [x19, #8]
     a18:	str	w22, [x19]
     a1c:	and	w8, w8, #0xfc
     a20:	orr	w8, w8, #0x2
     a24:	strb	w8, [x19, #8]
     a28:	ldp	x20, x19, [sp, #144]
     a2c:	ldp	x22, x21, [sp, #128]
     a30:	ldp	x24, x23, [sp, #112]
     a34:	ldp	x26, x25, [sp, #96]
     a38:	ldp	x28, x27, [sp, #80]
     a3c:	ldp	x29, x30, [sp, #64]
     a40:	add	sp, sp, #0xa0
     a44:	ret
     a48:	ldur	x9, [x29, #-16]
     a4c:	ldrb	w10, [x19, #8]
     a50:	sturb	w8, [x29, #-8]
     a54:	stur	xzr, [x29, #-16]
     a58:	ands	x8, x9, #0xfffffffffffffffe
     a5c:	orr	w9, w10, #0x3
     a60:	strb	w9, [x19, #8]
     a64:	b.eq	ab0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x724>  // b.none
     a68:	ldur	x0, [x29, #-16]
     a6c:	str	x8, [x19]
     a70:	cbz	x0, a28 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x69c>
     a74:	ldr	x8, [x0]
     a78:	ldr	x8, [x8, #8]
     a7c:	blr	x8
     a80:	b	a28 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x69c>
     a84:	sub	w8, w8, #0x3
     a88:	cmp	w8, #0x3
     a8c:	b.cs	ae0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x754>  // b.hs, b.nlast
     a90:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     a94:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     a98:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     a9c:	add	x0, x0, #0x0
     aa0:	add	x1, x1, #0x0
     aa4:	add	x3, x3, #0x0
     aa8:	mov	w2, #0x79                  	// #121
     aac:	bl	0 <__assert_fail>
     ab0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     ab4:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     ab8:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     abc:	add	x0, x0, #0x0
     ac0:	add	x1, x1, #0x0
     ac4:	add	x3, x3, #0x0
     ac8:	mov	w2, #0x1ce                 	// #462
     acc:	bl	0 <__assert_fail>
     ad0:	add	x0, sp, #0x10
     ad4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     ad8:	sub	x0, x29, #0x10
     adc:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     ae0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     ae4:	add	x0, x0, #0x0
     ae8:	mov	w1, #0x1                   	// #1
     aec:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
     af0:	add	x0, sp, #0x20
     af4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     af8:	sub	x0, x29, #0x10
     afc:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b00:	add	x0, sp, #0x20
     b04:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b08:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b0c:	add	x0, x0, #0x0
     b10:	mov	w1, #0x1                   	// #1
     b14:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
     b18:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b1c:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b20:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b24:	add	x0, x0, #0x0
     b28:	add	x1, x1, #0x0
     b2c:	add	x3, x3, #0x0
     b30:	mov	w2, #0x272                 	// #626
     b34:	bl	0 <__assert_fail>
     b38:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b3c:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b40:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b44:	add	x0, x0, #0x0
     b48:	add	x1, x1, #0x0
     b4c:	add	x3, x3, #0x0
     b50:	mov	w2, #0x95                  	// #149
     b54:	bl	0 <__assert_fail>
     b58:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b5c:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b60:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b64:	add	x0, x0, #0x0
     b68:	add	x1, x1, #0x0
     b6c:	add	x3, x3, #0x0
     b70:	mov	w2, #0x77                  	// #119
     b74:	bl	0 <__assert_fail>
     b78:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b7c:	add	x0, x0, #0x0
     b80:	mov	w1, #0x1                   	// #1
     b84:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
     b88:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b8c:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b90:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     b94:	add	x0, x0, #0x0
     b98:	add	x1, x1, #0x0
     b9c:	add	x3, x3, #0x0
     ba0:	mov	w2, #0xa4                  	// #164
     ba4:	bl	0 <__assert_fail>
     ba8:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     bac:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     bb0:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     bb4:	add	x0, x0, #0x0
     bb8:	add	x1, x1, #0x0
     bbc:	add	x3, x3, #0x0
     bc0:	mov	w2, #0x9e                  	// #158
     bc4:	bl	0 <__assert_fail>
     bc8:	add	x0, sp, #0x20
     bcc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000000bd0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>:
     bd0:	sub	sp, sp, #0x40
     bd4:	stp	x29, x30, [sp, #32]
     bd8:	str	x19, [sp, #48]
     bdc:	add	x29, sp, #0x20
     be0:	ldrb	w9, [x1, #8]
     be4:	tbnz	w9, #0, d54 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x184>
     be8:	mov	x19, x8
     bec:	ubfx	w8, w9, #1, #3
     bf0:	sub	w8, w8, #0x1
     bf4:	cmp	w8, #0x4
     bf8:	b.hi	d74 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1a4>  // b.pmore
     bfc:	adrp	x9, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     c00:	add	x9, x9, #0x0
     c04:	adr	x10, c14 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x44>
     c08:	ldrb	w11, [x9, x8]
     c0c:	add	x10, x10, x11, lsl #2
     c10:	br	x10
     c14:	ldr	w1, [x1]
     c18:	cmp	x1, #0x41
     c1c:	b.cs	d94 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1c4>  // b.hs, b.nlast
     c20:	mov	x8, x19
     c24:	ldr	x19, [sp, #48]
     c28:	ldp	x29, x30, [sp, #32]
     c2c:	add	sp, sp, #0x40
     c30:	b	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     c34:	ldr	w1, [x1]
     c38:	cmp	x1, #0x41
     c3c:	b.cs	db4 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1e4>  // b.hs, b.nlast
     c40:	mov	x8, x19
     c44:	ldr	x19, [sp, #48]
     c48:	ldp	x29, x30, [sp, #32]
     c4c:	add	sp, sp, #0x40
     c50:	b	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     c54:	mov	x8, sp
     c58:	mov	w1, #0x6                   	// #6
     c5c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     c60:	ldrb	w8, [sp, #8]
     c64:	mov	w9, #0x2                   	// #2
     c68:	bfxil	w9, w8, #0, #1
     c6c:	and	w10, w8, #0xfffffffd
     c70:	strb	w9, [sp, #24]
     c74:	strb	w10, [sp, #8]
     c78:	tbnz	w8, #0, c8c <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0xbc>
     c7c:	ldr	x8, [sp]
     c80:	mov	w9, #0x2                   	// #2
     c84:	str	w8, [sp, #16]
     c88:	b	c98 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0xc8>
     c8c:	ldr	x8, [sp]
     c90:	str	xzr, [sp]
     c94:	str	x8, [sp, #16]
     c98:	and	w8, w9, #0x1
     c9c:	mov	w10, w8
     ca0:	bfi	w10, w9, #1, #1
     ca4:	strb	w10, [sp, #24]
     ca8:	tbnz	w9, #0, ce8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x118>
     cac:	ubfiz	w8, w9, #1, #1
     cb0:	cbnz	w8, d8c <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1bc>
     cb4:	ldr	w8, [sp, #16]
     cb8:	cmp	w8, #0x40
     cbc:	b.cs	dd4 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x204>  // b.hs, b.nlast
     cc0:	ldrb	w9, [x19, #8]
     cc4:	adrp	x11, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     cc8:	add	x11, x11, #0x0
     ccc:	ldrb	w8, [x11, x8]
     cd0:	and	w9, w9, #0xfc
     cd4:	orr	w9, w9, #0x2
     cd8:	strb	w9, [x19, #8]
     cdc:	str	x8, [x19]
     ce0:	mov	w8, w10
     ce4:	b	d0c <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x13c>
     ce8:	ldr	x9, [sp, #16]
     cec:	ldrb	w10, [x19, #8]
     cf0:	strb	w8, [sp, #24]
     cf4:	str	xzr, [sp, #16]
     cf8:	ands	x9, x9, #0xfffffffffffffffe
     cfc:	orr	w10, w10, #0x3
     d00:	strb	w10, [x19, #8]
     d04:	b.eq	df4 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x224>  // b.none
     d08:	str	x9, [x19]
     d0c:	tbnz	w8, #1, d8c <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1bc>
     d10:	tbz	w8, #0, d2c <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x15c>
     d14:	ldr	x0, [sp, #16]
     d18:	cbz	x0, d28 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x158>
     d1c:	ldr	x8, [x0]
     d20:	ldr	x8, [x8, #8]
     d24:	blr	x8
     d28:	str	xzr, [sp, #16]
     d2c:	ldr	x19, [sp, #48]
     d30:	ldp	x29, x30, [sp, #32]
     d34:	add	sp, sp, #0x40
     d38:	ret
     d3c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     d40:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     d44:	add	x0, x0, #0x0
     d48:	add	x1, x1, #0x0
     d4c:	mov	w2, #0x4b                  	// #75
     d50:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     d54:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     d58:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     d5c:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     d60:	add	x0, x0, #0x0
     d64:	add	x1, x1, #0x0
     d68:	add	x3, x3, #0x0
     d6c:	mov	w2, #0x45                  	// #69
     d70:	bl	0 <__assert_fail>
     d74:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     d78:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     d7c:	add	x0, x0, #0x0
     d80:	add	x1, x1, #0x0
     d84:	mov	w2, #0x58                  	// #88
     d88:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     d8c:	add	x0, sp, #0x10
     d90:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     d94:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     d98:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     d9c:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     da0:	add	x0, x0, #0x0
     da4:	add	x1, x1, #0x0
     da8:	add	x3, x3, #0x0
     dac:	mov	w2, #0x4d                  	// #77
     db0:	bl	0 <__assert_fail>
     db4:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     db8:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     dbc:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     dc0:	add	x0, x0, #0x0
     dc4:	add	x1, x1, #0x0
     dc8:	add	x3, x3, #0x0
     dcc:	mov	w2, #0x50                  	// #80
     dd0:	bl	0 <__assert_fail>
     dd4:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     dd8:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     ddc:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     de0:	add	x0, x0, #0x0
     de4:	add	x1, x1, #0x0
     de8:	add	x3, x3, #0x0
     dec:	mov	w2, #0x9d                  	// #157
     df0:	bl	0 <__assert_fail>
     df4:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     df8:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     dfc:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     e00:	add	x0, x0, #0x0
     e04:	add	x1, x1, #0x0
     e08:	add	x3, x3, #0x0
     e0c:	mov	w2, #0x1ce                 	// #462
     e10:	bl	0 <__assert_fail>

0000000000000e14 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE>:
     e14:	sub	sp, sp, #0xb0
     e18:	stp	x29, x30, [sp, #80]
     e1c:	stp	x28, x27, [sp, #96]
     e20:	stp	x26, x25, [sp, #112]
     e24:	stp	x24, x23, [sp, #128]
     e28:	stp	x22, x21, [sp, #144]
     e2c:	stp	x20, x19, [sp, #160]
     e30:	add	x29, sp, #0x50
     e34:	mov	x20, x2
     e38:	mov	x21, x0
     e3c:	cmp	w1, #0x3
     e40:	mov	x19, x8
     e44:	b.ne	f88 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x174>  // b.any
     e48:	sub	x8, x29, #0x10
     e4c:	mov	w1, #0x6                   	// #6
     e50:	mov	x0, x21
     e54:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     e58:	ldurb	w10, [x29, #-8]
     e5c:	ubfiz	w9, w10, #1, #1
     e60:	and	w8, w10, #0xfffffffd
     e64:	orr	w11, w9, w8
     e68:	sturb	w11, [x29, #-8]
     e6c:	tbnz	w10, #0, 1010 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1fc>
     e70:	cbnz	w9, 1904 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaf0>
     e74:	ldur	w23, [x29, #-16]
     e78:	sub	x8, x29, #0x20
     e7c:	mov	w1, #0x6                   	// #6
     e80:	mov	x0, x21
     e84:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     e88:	ldurb	w10, [x29, #-24]
     e8c:	ubfiz	w9, w10, #1, #1
     e90:	and	w8, w10, #0xfffffffd
     e94:	orr	w11, w9, w8
     e98:	sturb	w11, [x29, #-24]
     e9c:	tbnz	w10, #0, 1778 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x964>
     ea0:	cbnz	w9, 1840 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa2c>
     ea4:	ldur	w24, [x29, #-32]
     ea8:	cbz	w24, 1824 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa10>
     eac:	add	x22, x20, #0x10
     eb0:	add	x8, sp, #0x20
     eb4:	mov	w1, #0x6                   	// #6
     eb8:	mov	x0, x21
     ebc:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
     ec0:	ldrb	w10, [sp, #40]
     ec4:	ubfiz	w9, w10, #1, #1
     ec8:	and	w8, w10, #0xfffffffd
     ecc:	orr	w11, w9, w8
     ed0:	strb	w11, [sp, #40]
     ed4:	tbnz	w10, #0, f14 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x100>
     ed8:	cbnz	w9, 191c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb08>
     edc:	ldp	w8, w9, [x20, #8]
     ee0:	cmp	w8, w9
     ee4:	b.cs	f6c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x158>  // b.hs, b.nlast
     ee8:	ldr	x9, [x20]
     eec:	ldr	x10, [sp, #32]
     ef0:	str	x10, [x9, w8, uxtw #3]
     ef4:	ldp	w8, w9, [x20, #8]
     ef8:	cmp	w8, w9
     efc:	b.cs	189c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa88>  // b.hs, b.nlast
     f00:	add	w8, w8, #0x1
     f04:	str	w8, [x20, #8]
     f08:	ldrb	w8, [sp, #40]
     f0c:	mov	w25, wzr
     f10:	b	f3c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x128>
     f14:	ldrb	w9, [x19, #8]
     f18:	ldr	x10, [sp, #32]
     f1c:	strb	w8, [sp, #40]
     f20:	str	xzr, [sp, #32]
     f24:	orr	w11, w9, #0x3
     f28:	ands	x9, x10, #0xfffffffffffffffe
     f2c:	strb	w11, [x19, #8]
     f30:	b.eq	18e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad0>  // b.none
     f34:	mov	w25, #0x1                   	// #1
     f38:	str	x9, [x19]
     f3c:	tbnz	w8, #1, 191c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb08>
     f40:	tbz	w8, #0, f5c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x148>
     f44:	ldr	x0, [sp, #32]
     f48:	cbz	x0, f58 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x144>
     f4c:	ldr	x8, [x0]
     f50:	ldr	x8, [x8, #8]
     f54:	blr	x8
     f58:	str	xzr, [sp, #32]
     f5c:	cbnz	w25, 179c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x988>
     f60:	subs	w24, w24, #0x1
     f64:	b.ne	eb0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9c>  // b.any
     f68:	b	1824 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa10>
     f6c:	mov	w3, #0x8                   	// #8
     f70:	mov	x0, x20
     f74:	mov	x1, x22
     f78:	mov	x2, xzr
     f7c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     f80:	ldr	w8, [x20, #8]
     f84:	b	ee8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd4>
     f88:	ldp	x8, x10, [x21, #40]
     f8c:	sub	w9, w1, #0x4
     f90:	sub	x10, x10, x8
     f94:	cmp	x9, x10, asr #4
     f98:	b.cs	194c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb38>  // b.hs, b.nlast
     f9c:	lsl	x9, x9, #4
     fa0:	ldr	x24, [x8, x9]
     fa4:	ldr	w26, [x24, #8]
     fa8:	cbz	w26, 195c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb48>
     fac:	ldr	x1, [x24]
     fb0:	mov	x22, x3
     fb4:	ldrb	w8, [x1, #8]
     fb8:	tbnz	w8, #0, 1038 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x224>
     fbc:	ubfx	w8, w8, #1, #3
     fc0:	cmp	w8, #0x5
     fc4:	b.eq	197c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb68>  // b.none
     fc8:	cmp	w8, #0x3
     fcc:	b.eq	197c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb68>  // b.none
     fd0:	sub	x8, x29, #0x10
     fd4:	mov	x0, x21
     fd8:	bl	bd0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     fdc:	ldurb	w10, [x29, #-8]
     fe0:	ubfiz	w9, w10, #1, #1
     fe4:	and	w8, w10, #0xfffffffd
     fe8:	orr	w11, w9, w8
     fec:	sturb	w11, [x29, #-8]
     ff0:	tbnz	w10, #0, 17e8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9d4>
     ff4:	cbnz	w9, 1924 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb10>
     ff8:	ldur	x8, [x29, #-16]
     ffc:	stp	x22, x8, [sp, #16]
    1000:	ldr	w26, [x24, #8]
    1004:	cmp	w26, #0x1
    1008:	b.eq	1048 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x234>  // b.none
    100c:	b	1064 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x250>
    1010:	ldur	x9, [x29, #-16]
    1014:	ldrb	w10, [x19, #8]
    1018:	sturb	w8, [x29, #-8]
    101c:	stur	xzr, [x29, #-16]
    1020:	ands	x9, x9, #0xfffffffffffffffe
    1024:	orr	w10, w10, #0x3
    1028:	strb	w10, [x19, #8]
    102c:	b.eq	18e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad0>  // b.none
    1030:	str	x9, [x19]
    1034:	b	17c4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9b0>
    1038:	ldr	x8, [x1]
    103c:	stp	x22, x8, [sp, #16]
    1040:	cmp	w26, #0x1
    1044:	b.ne	1064 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x250>  // b.any
    1048:	ldrb	w8, [x19, #8]
    104c:	and	w8, w8, #0xfc
    1050:	orr	w8, w8, #0x2
    1054:	strb	w8, [x19, #8]
    1058:	ldr	x8, [sp, #24]
    105c:	str	w8, [x19]
    1060:	b	1850 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa3c>
    1064:	cbz	w26, 18c4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xab0>
    1068:	add	x8, x20, #0x10
    106c:	mov	w27, #0x1                   	// #1
    1070:	str	x8, [sp, #8]
    1074:	ldr	x8, [x24]
    1078:	add	x1, x8, w27, uxtw #4
    107c:	ldrb	w8, [x1, #8]
    1080:	tbnz	w8, #0, 10e8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x2d4>
    1084:	ubfx	w8, w8, #1, #3
    1088:	cmp	w8, #0x3
    108c:	b.eq	1118 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x304>  // b.none
    1090:	cmp	w8, #0x5
    1094:	b.ne	1288 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x474>  // b.any
    1098:	sub	x8, x29, #0x10
    109c:	mov	w1, #0x6                   	// #6
    10a0:	mov	x0, x21
    10a4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    10a8:	ldurb	w10, [x29, #-8]
    10ac:	ubfiz	w9, w10, #1, #1
    10b0:	and	w8, w10, #0xfffffffd
    10b4:	orr	w11, w9, w8
    10b8:	sturb	w11, [x29, #-8]
    10bc:	tbnz	w10, #0, 12e8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x4d4>
    10c0:	cbnz	w9, 1904 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaf0>
    10c4:	ldr	w8, [x21, #32]
    10c8:	ldur	w23, [x29, #-16]
    10cc:	subs	w8, w8, #0x20
    10d0:	b.cc	1398 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x584>  // b.lo, b.ul, b.last
    10d4:	ldr	x9, [x21, #24]
    10d8:	lsr	x8, x9, x8
    10dc:	str	x8, [x21, #24]
    10e0:	mov	w8, #0x20                  	// #32
    10e4:	b	139c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x588>
    10e8:	ldp	w8, w9, [x20, #8]
    10ec:	ldr	x22, [x1]
    10f0:	cmp	w8, w9
    10f4:	b.cs	1740 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x92c>  // b.hs, b.nlast
    10f8:	ldr	x9, [x20]
    10fc:	str	x22, [x9, w8, uxtw #3]
    1100:	ldp	w8, w9, [x20, #8]
    1104:	cmp	w8, w9
    1108:	b.cs	189c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa88>  // b.hs, b.nlast
    110c:	add	w8, w8, #0x1
    1110:	str	w8, [x20, #8]
    1114:	b	16a0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x88c>
    1118:	sub	x8, x29, #0x10
    111c:	mov	w1, #0x6                   	// #6
    1120:	mov	x0, x21
    1124:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1128:	ldurb	w10, [x29, #-8]
    112c:	ubfiz	w9, w10, #1, #1
    1130:	and	w8, w10, #0xfffffffd
    1134:	orr	w11, w9, w8
    1138:	sturb	w11, [x29, #-8]
    113c:	tbnz	w10, #0, 1314 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x500>
    1140:	cbnz	w9, 1904 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaf0>
    1144:	add	w8, w27, #0x2
    1148:	cmp	w8, w26
    114c:	b.ne	198c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb78>  // b.any
    1150:	ldr	w8, [x24, #8]
    1154:	add	w27, w27, #0x1
    1158:	cmp	w8, w27
    115c:	b.ls	18c4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xab0>  // b.plast
    1160:	ldr	x8, [x24]
    1164:	ldur	w23, [x29, #-16]
    1168:	add	x25, x8, w27, uxtw #4
    116c:	mov	x28, x25
    1170:	ldrb	w8, [x28, #8]!
    1174:	tbnz	w8, #0, 199c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb88>
    1178:	ubfx	w9, w8, #1, #3
    117c:	cmp	w9, #0x1
    1180:	b.eq	1528 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x714>  // b.none
    1184:	cmp	w9, #0x2
    1188:	b.eq	1430 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x61c>  // b.none
    118c:	cmp	w9, #0x4
    1190:	b.ne	19ac <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb98>  // b.any
    1194:	cbz	w23, 1620 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x80c>
    1198:	sub	x8, x29, #0x20
    119c:	mov	w1, #0x6                   	// #6
    11a0:	mov	x0, x21
    11a4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    11a8:	ldurb	w10, [x29, #-24]
    11ac:	ubfiz	w9, w10, #1, #1
    11b0:	and	w8, w10, #0xfffffffd
    11b4:	orr	w11, w9, w8
    11b8:	sturb	w11, [x29, #-24]
    11bc:	tbnz	w10, #0, 1214 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x400>
    11c0:	cbnz	w9, 18bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaa8>
    11c4:	ldur	x9, [x29, #-32]
    11c8:	cmp	w9, #0x40
    11cc:	b.cs	192c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb18>  // b.hs, b.nlast
    11d0:	adrp	x11, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    11d4:	ldp	w8, w10, [x20, #8]
    11d8:	and	x9, x9, #0xffffffff
    11dc:	add	x11, x11, #0x0
    11e0:	ldrb	w22, [x11, x9]
    11e4:	cmp	w8, w10
    11e8:	b.cs	126c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x458>  // b.hs, b.nlast
    11ec:	ldr	x9, [x20]
    11f0:	str	x22, [x9, w8, uxtw #3]
    11f4:	ldp	w8, w9, [x20, #8]
    11f8:	cmp	w8, w9
    11fc:	b.cs	189c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa88>  // b.hs, b.nlast
    1200:	add	w8, w8, #0x1
    1204:	str	w8, [x20, #8]
    1208:	ldurb	w8, [x29, #-24]
    120c:	mov	w22, wzr
    1210:	b	123c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x428>
    1214:	ldrb	w9, [x19, #8]
    1218:	ldur	x10, [x29, #-32]
    121c:	sturb	w8, [x29, #-24]
    1220:	stur	xzr, [x29, #-32]
    1224:	orr	w11, w9, #0x3
    1228:	ands	x9, x10, #0xfffffffffffffffe
    122c:	strb	w11, [x19, #8]
    1230:	b.eq	18e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad0>  // b.none
    1234:	mov	w22, #0x1                   	// #1
    1238:	str	x9, [x19]
    123c:	tbnz	w8, #1, 18bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaa8>
    1240:	tbz	w8, #0, 125c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x448>
    1244:	ldur	x0, [x29, #-32]
    1248:	cbz	x0, 1258 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x444>
    124c:	ldr	x8, [x0]
    1250:	ldr	x8, [x8, #8]
    1254:	blr	x8
    1258:	stur	xzr, [x29, #-32]
    125c:	cbnz	w22, 1338 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x524>
    1260:	sub	w23, w23, #0x1
    1264:	cbnz	w23, 1198 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x384>
    1268:	b	1620 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x80c>
    126c:	ldr	x1, [sp, #8]
    1270:	mov	w3, #0x8                   	// #8
    1274:	mov	x0, x20
    1278:	mov	x2, xzr
    127c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1280:	ldr	w8, [x20, #8]
    1284:	b	11ec <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3d8>
    1288:	sub	x8, x29, #0x10
    128c:	mov	x0, x21
    1290:	bl	bd0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1294:	ldurb	w10, [x29, #-8]
    1298:	ubfiz	w9, w10, #1, #1
    129c:	and	w8, w10, #0xfffffffd
    12a0:	orr	w11, w9, w8
    12a4:	sturb	w11, [x29, #-8]
    12a8:	tbnz	w10, #0, 1348 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x534>
    12ac:	cbnz	w9, 1924 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb10>
    12b0:	ldp	w8, w9, [x20, #8]
    12b4:	cmp	w8, w9
    12b8:	b.cs	175c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x948>  // b.hs, b.nlast
    12bc:	ldr	x9, [x20]
    12c0:	ldur	x10, [x29, #-16]
    12c4:	str	x10, [x9, w8, uxtw #3]
    12c8:	ldp	w8, w9, [x20, #8]
    12cc:	cmp	w8, w9
    12d0:	b.cs	189c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa88>  // b.hs, b.nlast
    12d4:	add	w8, w8, #0x1
    12d8:	str	w8, [x20, #8]
    12dc:	ldurb	w8, [x29, #-8]
    12e0:	mov	w23, wzr
    12e4:	b	1370 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x55c>
    12e8:	ldrb	w9, [x19, #8]
    12ec:	ldur	x10, [x29, #-16]
    12f0:	sturb	w8, [x29, #-8]
    12f4:	stur	xzr, [x29, #-16]
    12f8:	orr	w9, w9, #0x3
    12fc:	ands	x8, x10, #0xfffffffffffffffe
    1300:	strb	w9, [x19, #8]
    1304:	b.eq	18e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad0>  // b.none
    1308:	str	x8, [x19]
    130c:	mov	w25, #0x1                   	// #1
    1310:	b	1688 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x874>
    1314:	ldrb	w9, [x19, #8]
    1318:	ldur	x10, [x29, #-16]
    131c:	sturb	w8, [x29, #-8]
    1320:	stur	xzr, [x29, #-16]
    1324:	orr	w9, w9, #0x3
    1328:	ands	x8, x10, #0xfffffffffffffffe
    132c:	strb	w9, [x19, #8]
    1330:	b.eq	18e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad0>  // b.none
    1334:	str	x8, [x19]
    1338:	mov	w25, #0x1                   	// #1
    133c:	ldurb	w8, [x29, #-8]
    1340:	tbz	w8, #1, 162c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x818>
    1344:	b	1904 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaf0>
    1348:	ldrb	w9, [x19, #8]
    134c:	ldur	x10, [x29, #-16]
    1350:	sturb	w8, [x29, #-8]
    1354:	stur	xzr, [x29, #-16]
    1358:	orr	w11, w9, #0x3
    135c:	ands	x9, x10, #0xfffffffffffffffe
    1360:	strb	w11, [x19, #8]
    1364:	b.eq	18e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad0>  // b.none
    1368:	mov	w23, #0x1                   	// #1
    136c:	str	x9, [x19]
    1370:	tbnz	w8, #1, 1924 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb10>
    1374:	tbz	w8, #0, 1390 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x57c>
    1378:	ldur	x0, [x29, #-16]
    137c:	cbz	x0, 138c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x578>
    1380:	ldr	x8, [x0]
    1384:	ldr	x8, [x8, #8]
    1388:	blr	x8
    138c:	stur	xzr, [x29, #-16]
    1390:	cbz	w23, 16a0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x88c>
    1394:	b	1850 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa3c>
    1398:	mov	w8, wzr
    139c:	ldp	x11, x9, [x21, #8]
    13a0:	lsl	w10, w23, #3
    13a4:	add	w10, w10, #0x18
    13a8:	str	w8, [x21, #32]
    13ac:	lsl	x9, x9, #3
    13b0:	sub	x22, x9, x8
    13b4:	and	w9, w10, #0xffffffe0
    13b8:	add	x1, x22, x9
    13bc:	cmp	x11, x1, lsr #3
    13c0:	b.cs	13f0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x5dc>  // b.hs, b.nlast
    13c4:	ldp	w25, w8, [x20, #8]
    13c8:	sub	x9, x8, x25
    13cc:	cmp	x9, x23
    13d0:	b.cs	1650 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x83c>  // b.hs, b.nlast
    13d4:	ldr	x1, [sp, #8]
    13d8:	add	x2, x25, x23
    13dc:	mov	w3, #0x8                   	// #8
    13e0:	mov	x0, x20
    13e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    13e8:	ldr	w25, [x20, #8]
    13ec:	b	1654 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x840>
    13f0:	sub	x8, x29, #0x20
    13f4:	mov	x0, x21
    13f8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    13fc:	ldur	x9, [x29, #-32]
    1400:	tst	x9, #0xfffffffffffffffe
    1404:	and	x8, x9, #0xfffffffffffffffe
    1408:	cset	w9, ne  // ne = any
    140c:	orr	x9, x8, x9
    1410:	stur	x9, [x29, #-32]
    1414:	cbz	x8, 16bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8a8>
    1418:	ldrb	w9, [x19, #8]
    141c:	str	x8, [x19]
    1420:	mov	w25, #0x1                   	// #1
    1424:	orr	w8, w9, #0x3
    1428:	strb	w8, [x19, #8]
    142c:	b	1688 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x874>
    1430:	cbz	w23, 1620 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x80c>
    1434:	tbnz	w8, #0, 187c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa68>
    1438:	ubfx	w8, w8, #1, #3
    143c:	sub	w9, w8, #0x1
    1440:	cmp	w9, #0x2
    1444:	b.cs	1870 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa5c>  // b.hs, b.nlast
    1448:	ldr	w1, [x25]
    144c:	sub	x8, x29, #0x20
    1450:	mov	x0, x21
    1454:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1458:	ldurb	w10, [x29, #-24]
    145c:	ubfiz	w9, w10, #1, #1
    1460:	and	w8, w10, #0xfffffffd
    1464:	orr	w11, w9, w8
    1468:	sturb	w11, [x29, #-24]
    146c:	tbnz	w10, #0, 14ac <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x698>
    1470:	cbnz	w9, 18bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaa8>
    1474:	ldp	w8, w9, [x20, #8]
    1478:	cmp	w8, w9
    147c:	b.cs	150c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x6f8>  // b.hs, b.nlast
    1480:	ldr	x9, [x20]
    1484:	ldur	x10, [x29, #-32]
    1488:	str	x10, [x9, w8, uxtw #3]
    148c:	ldp	w8, w9, [x20, #8]
    1490:	cmp	w8, w9
    1494:	b.cs	189c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa88>  // b.hs, b.nlast
    1498:	add	w8, w8, #0x1
    149c:	str	w8, [x20, #8]
    14a0:	ldurb	w8, [x29, #-24]
    14a4:	mov	w22, wzr
    14a8:	b	14d4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x6c0>
    14ac:	ldrb	w9, [x19, #8]
    14b0:	ldur	x10, [x29, #-32]
    14b4:	sturb	w8, [x29, #-24]
    14b8:	stur	xzr, [x29, #-32]
    14bc:	orr	w11, w9, #0x3
    14c0:	ands	x9, x10, #0xfffffffffffffffe
    14c4:	strb	w11, [x19, #8]
    14c8:	b.eq	18e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad0>  // b.none
    14cc:	mov	w22, #0x1                   	// #1
    14d0:	str	x9, [x19]
    14d4:	tbnz	w8, #1, 18bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaa8>
    14d8:	tbz	w8, #0, 14f4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x6e0>
    14dc:	ldur	x0, [x29, #-32]
    14e0:	cbz	x0, 14f0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x6dc>
    14e4:	ldr	x8, [x0]
    14e8:	ldr	x8, [x8, #8]
    14ec:	blr	x8
    14f0:	stur	xzr, [x29, #-32]
    14f4:	cbnz	w22, 1338 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x524>
    14f8:	sub	w23, w23, #0x1
    14fc:	cbz	w23, 1620 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x80c>
    1500:	ldrb	w8, [x28]
    1504:	tbz	w8, #0, 1438 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x624>
    1508:	b	187c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa68>
    150c:	ldr	x1, [sp, #8]
    1510:	mov	w3, #0x8                   	// #8
    1514:	mov	x0, x20
    1518:	mov	x2, xzr
    151c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1520:	ldr	w8, [x20, #8]
    1524:	b	1480 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x66c>
    1528:	cbz	w23, 1620 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x80c>
    152c:	tbnz	w8, #0, 187c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa68>
    1530:	ubfx	w8, w8, #1, #3
    1534:	sub	w9, w8, #0x1
    1538:	cmp	w9, #0x2
    153c:	b.cs	1870 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa5c>  // b.hs, b.nlast
    1540:	ldr	w1, [x25]
    1544:	sub	x8, x29, #0x20
    1548:	mov	x0, x21
    154c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1550:	ldurb	w10, [x29, #-24]
    1554:	ubfiz	w9, w10, #1, #1
    1558:	and	w8, w10, #0xfffffffd
    155c:	orr	w11, w9, w8
    1560:	sturb	w11, [x29, #-24]
    1564:	tbnz	w10, #0, 15a4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x790>
    1568:	cbnz	w9, 18bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaa8>
    156c:	ldp	w8, w9, [x20, #8]
    1570:	cmp	w8, w9
    1574:	b.cs	1604 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7f0>  // b.hs, b.nlast
    1578:	ldr	x9, [x20]
    157c:	ldur	x10, [x29, #-32]
    1580:	str	x10, [x9, w8, uxtw #3]
    1584:	ldp	w8, w9, [x20, #8]
    1588:	cmp	w8, w9
    158c:	b.cs	189c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa88>  // b.hs, b.nlast
    1590:	add	w8, w8, #0x1
    1594:	str	w8, [x20, #8]
    1598:	ldurb	w8, [x29, #-24]
    159c:	mov	w22, wzr
    15a0:	b	15cc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7b8>
    15a4:	ldrb	w9, [x19, #8]
    15a8:	ldur	x10, [x29, #-32]
    15ac:	sturb	w8, [x29, #-24]
    15b0:	stur	xzr, [x29, #-32]
    15b4:	orr	w11, w9, #0x3
    15b8:	ands	x9, x10, #0xfffffffffffffffe
    15bc:	strb	w11, [x19, #8]
    15c0:	b.eq	18e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad0>  // b.none
    15c4:	mov	w22, #0x1                   	// #1
    15c8:	str	x9, [x19]
    15cc:	tbnz	w8, #1, 18bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaa8>
    15d0:	tbz	w8, #0, 15ec <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7d8>
    15d4:	ldur	x0, [x29, #-32]
    15d8:	cbz	x0, 15e8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7d4>
    15dc:	ldr	x8, [x0]
    15e0:	ldr	x8, [x8, #8]
    15e4:	blr	x8
    15e8:	stur	xzr, [x29, #-32]
    15ec:	cbnz	w22, 1338 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x524>
    15f0:	sub	w23, w23, #0x1
    15f4:	cbz	w23, 1620 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x80c>
    15f8:	ldrb	w8, [x28]
    15fc:	tbz	w8, #0, 1530 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x71c>
    1600:	b	187c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa68>
    1604:	ldr	x1, [sp, #8]
    1608:	mov	w3, #0x8                   	// #8
    160c:	mov	x0, x20
    1610:	mov	x2, xzr
    1614:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1618:	ldr	w8, [x20, #8]
    161c:	b	1578 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x764>
    1620:	mov	w25, #0x7                   	// #7
    1624:	ldurb	w8, [x29, #-8]
    1628:	tbnz	w8, #1, 1904 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaf0>
    162c:	tbz	w8, #0, 1694 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x880>
    1630:	ldur	x0, [x29, #-16]
    1634:	cbz	x0, 1644 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x830>
    1638:	ldr	x8, [x0]
    163c:	ldr	x8, [x8, #8]
    1640:	blr	x8
    1644:	stur	xzr, [x29, #-16]
    1648:	cbnz	w25, 1698 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x884>
    164c:	b	16a0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x88c>
    1650:	cbz	w23, 166c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x858>
    1654:	ldr	x8, [x20]
    1658:	lsl	x2, x23, #3
    165c:	mov	w1, wzr
    1660:	add	x0, x8, x25, lsl #3
    1664:	bl	0 <memset>
    1668:	ldr	w8, [x20, #12]
    166c:	add	x9, x25, x23
    1670:	cmp	x9, x8
    1674:	b.hi	189c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa88>  // b.pmore
    1678:	str	w9, [x20, #8]
    167c:	ldr	x8, [x21, #8]
    1680:	mov	w25, #0x5                   	// #5
    1684:	str	x8, [x21, #16]
    1688:	ldurb	w8, [x29, #-8]
    168c:	tbnz	w8, #1, 1904 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaf0>
    1690:	tbnz	w8, #0, 1630 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x81c>
    1694:	cbz	w25, 16a0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x88c>
    1698:	cmp	w25, #0x7
    169c:	b.ne	1848 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa34>  // b.any
    16a0:	add	w27, w27, #0x1
    16a4:	cmp	w27, w26
    16a8:	b.eq	1048 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x234>  // b.none
    16ac:	ldr	w8, [x24, #8]
    16b0:	cmp	w8, w27
    16b4:	b.hi	1074 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x260>  // b.pmore
    16b8:	b	18c4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xab0>
    16bc:	cbnz	x9, 19bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xba8>
    16c0:	ldr	x8, [x21]
    16c4:	add	x28, x8, x22, lsr #3
    16c8:	ldr	x8, [sp, #16]
    16cc:	cbz	x8, 16dc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8c8>
    16d0:	mov	w25, wzr
    16d4:	stp	x28, x23, [x8]
    16d8:	b	1688 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x874>
    16dc:	cbz	w23, 1738 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x924>
    16e0:	ldp	w8, w9, [x20, #8]
    16e4:	ldrb	w22, [x28], #1
    16e8:	cmp	w8, w9
    16ec:	b.cs	171c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x908>  // b.hs, b.nlast
    16f0:	ldr	x9, [x20]
    16f4:	str	x22, [x9, w8, uxtw #3]
    16f8:	ldp	w8, w9, [x20, #8]
    16fc:	cmp	w8, w9
    1700:	b.cs	189c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa88>  // b.hs, b.nlast
    1704:	mov	w25, wzr
    1708:	add	w8, w8, #0x1
    170c:	subs	w23, w23, #0x1
    1710:	str	w8, [x20, #8]
    1714:	b.ne	16e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8d0>  // b.any
    1718:	b	1688 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x874>
    171c:	ldr	x1, [sp, #8]
    1720:	mov	w3, #0x8                   	// #8
    1724:	mov	x0, x20
    1728:	mov	x2, xzr
    172c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1730:	ldr	w8, [x20, #8]
    1734:	b	16f0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8dc>
    1738:	mov	w25, wzr
    173c:	b	1688 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x874>
    1740:	ldr	x1, [sp, #8]
    1744:	mov	w3, #0x8                   	// #8
    1748:	mov	x0, x20
    174c:	mov	x2, xzr
    1750:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1754:	ldr	w8, [x20, #8]
    1758:	b	10f8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x2e4>
    175c:	ldr	x1, [sp, #8]
    1760:	mov	w3, #0x8                   	// #8
    1764:	mov	x0, x20
    1768:	mov	x2, xzr
    176c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1770:	ldr	w8, [x20, #8]
    1774:	b	12bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x4a8>
    1778:	ldur	x9, [x29, #-32]
    177c:	ldrb	w10, [x19, #8]
    1780:	sturb	w8, [x29, #-24]
    1784:	stur	xzr, [x29, #-32]
    1788:	ands	x8, x9, #0xfffffffffffffffe
    178c:	orr	w9, w10, #0x3
    1790:	strb	w9, [x19, #8]
    1794:	b.eq	18e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad0>  // b.none
    1798:	str	x8, [x19]
    179c:	ldurb	w8, [x29, #-24]
    17a0:	tbnz	w8, #1, 1840 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa2c>
    17a4:	tbz	w8, #0, 17c0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9ac>
    17a8:	ldur	x0, [x29, #-32]
    17ac:	cbz	x0, 17bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9a8>
    17b0:	ldr	x8, [x0]
    17b4:	ldr	x8, [x8, #8]
    17b8:	blr	x8
    17bc:	stur	xzr, [x29, #-32]
    17c0:	ldurb	w8, [x29, #-8]
    17c4:	tbnz	w8, #1, 1904 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaf0>
    17c8:	tbz	w8, #0, 1850 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa3c>
    17cc:	ldur	x0, [x29, #-16]
    17d0:	cbz	x0, 17e0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9cc>
    17d4:	ldr	x8, [x0]
    17d8:	ldr	x8, [x8, #8]
    17dc:	blr	x8
    17e0:	stur	xzr, [x29, #-16]
    17e4:	b	1850 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa3c>
    17e8:	ldur	x9, [x29, #-16]
    17ec:	ldrb	w10, [x19, #8]
    17f0:	sturb	w8, [x29, #-8]
    17f4:	stur	xzr, [x29, #-16]
    17f8:	ands	x8, x9, #0xfffffffffffffffe
    17fc:	orr	w9, w10, #0x3
    1800:	strb	w9, [x19, #8]
    1804:	b.eq	18e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xad0>  // b.none
    1808:	ldur	x0, [x29, #-16]
    180c:	str	x8, [x19]
    1810:	cbz	x0, 1850 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa3c>
    1814:	ldr	x8, [x0]
    1818:	ldr	x8, [x8, #8]
    181c:	blr	x8
    1820:	b	1850 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa3c>
    1824:	ldrb	w8, [x19, #8]
    1828:	str	w23, [x19]
    182c:	and	w8, w8, #0xfc
    1830:	orr	w8, w8, #0x2
    1834:	strb	w8, [x19, #8]
    1838:	ldurb	w8, [x29, #-24]
    183c:	tbz	w8, #1, 17a4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x990>
    1840:	sub	x0, x29, #0x20
    1844:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1848:	cmp	w25, #0x5
    184c:	b.eq	1048 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x234>  // b.none
    1850:	ldp	x20, x19, [sp, #160]
    1854:	ldp	x22, x21, [sp, #144]
    1858:	ldp	x24, x23, [sp, #128]
    185c:	ldp	x26, x25, [sp, #112]
    1860:	ldp	x28, x27, [sp, #96]
    1864:	ldp	x29, x30, [sp, #80]
    1868:	add	sp, sp, #0xb0
    186c:	ret
    1870:	sub	w8, w8, #0x3
    1874:	cmp	w8, #0x3
    1878:	b.cs	190c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaf8>  // b.hs, b.nlast
    187c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1880:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1884:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1888:	add	x0, x0, #0x0
    188c:	add	x1, x1, #0x0
    1890:	add	x3, x3, #0x0
    1894:	mov	w2, #0x79                  	// #121
    1898:	bl	0 <__assert_fail>
    189c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    18a0:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    18a4:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    18a8:	add	x0, x0, #0x0
    18ac:	add	x1, x1, #0x0
    18b0:	add	x3, x3, #0x0
    18b4:	mov	w2, #0x43                  	// #67
    18b8:	bl	0 <__assert_fail>
    18bc:	sub	x0, x29, #0x20
    18c0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    18c4:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    18c8:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    18cc:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    18d0:	add	x0, x0, #0x0
    18d4:	add	x1, x1, #0x0
    18d8:	add	x3, x3, #0x0
    18dc:	mov	w2, #0x99                  	// #153
    18e0:	bl	0 <__assert_fail>
    18e4:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    18e8:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    18ec:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    18f0:	add	x0, x0, #0x0
    18f4:	add	x1, x1, #0x0
    18f8:	add	x3, x3, #0x0
    18fc:	mov	w2, #0x1ce                 	// #462
    1900:	bl	0 <__assert_fail>
    1904:	sub	x0, x29, #0x10
    1908:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    190c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1910:	add	x0, x0, #0x0
    1914:	mov	w1, #0x1                   	// #1
    1918:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    191c:	add	x0, sp, #0x20
    1920:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1924:	sub	x0, x29, #0x10
    1928:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    192c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1930:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1934:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1938:	add	x0, x0, #0x0
    193c:	add	x1, x1, #0x0
    1940:	add	x3, x3, #0x0
    1944:	mov	w2, #0x9d                  	// #157
    1948:	bl	0 <__assert_fail>
    194c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1950:	add	x0, x0, #0x0
    1954:	mov	w1, #0x1                   	// #1
    1958:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    195c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1960:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1964:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1968:	add	x0, x0, #0x0
    196c:	add	x1, x1, #0x0
    1970:	add	x3, x3, #0x0
    1974:	mov	w2, #0xe5                  	// #229
    1978:	bl	0 <__assert_fail>
    197c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1980:	add	x0, x0, #0x0
    1984:	mov	w1, #0x1                   	// #1
    1988:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    198c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1990:	add	x0, x0, #0x0
    1994:	mov	w1, #0x1                   	// #1
    1998:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    199c:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    19a0:	add	x0, x0, #0x0
    19a4:	mov	w1, #0x1                   	// #1
    19a8:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    19ac:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    19b0:	add	x0, x0, #0x0
    19b4:	mov	w1, #0x1                   	// #1
    19b8:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    19bc:	sub	x0, x29, #0x20
    19c0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

00000000000019c4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv>:
    19c4:	sub	sp, sp, #0xb0
    19c8:	stp	x29, x30, [sp, #80]
    19cc:	str	x27, [sp, #96]
    19d0:	stp	x26, x25, [sp, #112]
    19d4:	stp	x24, x23, [sp, #128]
    19d8:	stp	x22, x21, [sp, #144]
    19dc:	stp	x20, x19, [sp, #160]
    19e0:	add	x29, sp, #0x50
    19e4:	mov	x20, x0
    19e8:	mov	w0, #0x220                 	// #544
    19ec:	mov	x19, x8
    19f0:	bl	0 <_Znwm>
    19f4:	adrp	x8, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    19f8:	ldr	x8, [x8]
    19fc:	movi	v0.2s, #0x1
    1a00:	adrp	x9, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1a04:	str	d0, [x0, #8]
    1a08:	ldr	d0, [x9]
    1a0c:	movi	v1.2d, #0x0
    1a10:	mov	x9, x0
    1a14:	add	x8, x8, #0x10
    1a18:	stp	q1, q1, [x0, #48]
    1a1c:	stp	q1, q1, [x0, #80]
    1a20:	stp	q1, q1, [x0, #112]
    1a24:	stp	q1, q1, [x0, #144]
    1a28:	stp	q1, q1, [x0, #176]
    1a2c:	stp	q1, q1, [x0, #208]
    1a30:	stp	q1, q1, [x0, #240]
    1a34:	stp	q1, q1, [x0, #272]
    1a38:	stp	q1, q1, [x0, #304]
    1a3c:	stp	q1, q1, [x0, #336]
    1a40:	stp	q1, q1, [x0, #368]
    1a44:	stp	q1, q1, [x0, #400]
    1a48:	stp	q1, q1, [x0, #432]
    1a4c:	stp	q1, q1, [x0, #464]
    1a50:	stp	q1, q1, [x0, #496]
    1a54:	str	x8, [x0]
    1a58:	str	q1, [x9, #32]!
    1a5c:	mov	x21, x0
    1a60:	str	q1, [x0, #528]
    1a64:	str	x9, [x21, #16]!
    1a68:	str	d0, [x0, #24]
    1a6c:	stp	x21, x0, [x29, #-16]
    1a70:	sub	x8, x29, #0x20
    1a74:	mov	w1, #0x5                   	// #5
    1a78:	mov	x0, x20
    1a7c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1a80:	ldurb	w10, [x29, #-24]
    1a84:	ubfiz	w9, w10, #1, #1
    1a88:	and	w8, w10, #0xfffffffd
    1a8c:	orr	w11, w9, w8
    1a90:	sturb	w11, [x29, #-24]
    1a94:	tbnz	w10, #0, 1e80 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x4bc>
    1a98:	cbnz	w9, 1fd0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x60c>
    1a9c:	ldur	w22, [x29, #-32]
    1aa0:	cbz	w22, 1e98 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x4d4>
    1aa4:	add	x8, sp, #0x20
    1aa8:	mov	w1, #0x1                   	// #1
    1aac:	mov	x0, x20
    1ab0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1ab4:	ldrb	w10, [sp, #40]
    1ab8:	ubfiz	w9, w10, #1, #1
    1abc:	and	w8, w10, #0xfffffffd
    1ac0:	orr	w11, w9, w8
    1ac4:	strb	w11, [sp, #40]
    1ac8:	tbnz	w10, #0, 1b5c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x198>
    1acc:	cbnz	w9, 1fc0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5fc>
    1ad0:	ldr	x8, [sp, #32]
    1ad4:	cbz	x8, 1b78 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x1b4>
    1ad8:	add	x8, sp, #0x10
    1adc:	mov	w1, #0x8                   	// #8
    1ae0:	mov	x0, x20
    1ae4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1ae8:	ldrb	w10, [sp, #24]
    1aec:	ubfiz	w9, w10, #1, #1
    1af0:	and	w8, w10, #0xfffffffd
    1af4:	orr	w11, w9, w8
    1af8:	strb	w11, [sp, #24]
    1afc:	tbnz	w10, #0, 1c08 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x244>
    1b00:	cbnz	w9, 1fc8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x604>
    1b04:	ldur	x21, [x29, #-16]
    1b08:	ldr	x27, [sp, #16]
    1b0c:	orr	w23, w23, #0x1
    1b10:	ldp	w8, w9, [x21, #8]
    1b14:	cmp	w8, w9
    1b18:	b.cs	1df8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x434>  // b.hs, b.nlast
    1b1c:	ldr	x9, [x21]
    1b20:	add	x8, x9, w8, uxtw #4
    1b24:	str	x27, [x8]
    1b28:	strb	w23, [x8, #8]
    1b2c:	ldur	w9, [sp, #3]
    1b30:	ldr	w10, [sp]
    1b34:	str	w9, [x8, #12]
    1b38:	stur	w10, [x8, #9]
    1b3c:	ldp	w8, w9, [x21, #8]
    1b40:	cmp	w8, w9
    1b44:	b.cs	1fd8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x614>  // b.hs, b.nlast
    1b48:	add	w8, w8, #0x1
    1b4c:	str	w8, [x21, #8]
    1b50:	ldrb	w8, [sp, #24]
    1b54:	mov	w21, #0x4                   	// #4
    1b58:	b	1c20 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x25c>
    1b5c:	ldr	x9, [sp, #32]
    1b60:	strb	w8, [sp, #40]
    1b64:	str	xzr, [sp, #32]
    1b68:	mov	w21, #0x1                   	// #1
    1b6c:	orr	x8, x9, #0x1
    1b70:	str	x8, [x19]
    1b74:	b	1c64 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2a0>
    1b78:	add	x8, sp, #0x10
    1b7c:	mov	w1, #0x3                   	// #3
    1b80:	mov	x0, x20
    1b84:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1b88:	ldrb	w10, [sp, #24]
    1b8c:	ubfiz	w9, w10, #1, #1
    1b90:	and	w8, w10, #0xfffffffd
    1b94:	orr	w11, w9, w8
    1b98:	strb	w11, [sp, #24]
    1b9c:	tbnz	w10, #0, 1c28 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x264>
    1ba0:	cbnz	w9, 1fc8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x604>
    1ba4:	ldr	x21, [sp, #16]
    1ba8:	sub	w8, w21, #0x3
    1bac:	cmp	w8, #0x3
    1bb0:	b.cs	1ca0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2dc>  // b.hs, b.nlast
    1bb4:	ldur	x8, [x29, #-16]
    1bb8:	and	w24, w24, #0xfffffff0
    1bbc:	bfi	w24, w21, #1, #3
    1bc0:	ldp	w9, w10, [x8, #8]
    1bc4:	cmp	w9, w10
    1bc8:	b.cs	1e14 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x450>  // b.hs, b.nlast
    1bcc:	ldr	x10, [x8]
    1bd0:	add	x9, x10, w9, uxtw #4
    1bd4:	str	xzr, [x9]
    1bd8:	strb	w24, [x9, #8]
    1bdc:	ldur	w10, [sp, #3]
    1be0:	ldr	w11, [sp]
    1be4:	str	w10, [x9, #12]
    1be8:	stur	w11, [x9, #9]
    1bec:	ldp	w9, w10, [x8, #8]
    1bf0:	cmp	w9, w10
    1bf4:	b.cs	1fd8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x614>  // b.hs, b.nlast
    1bf8:	add	w9, w9, #0x1
    1bfc:	str	w9, [x8, #8]
    1c00:	mov	w21, wzr
    1c04:	b	1c40 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x27c>
    1c08:	ldr	x9, [sp, #16]
    1c0c:	strb	w8, [sp, #24]
    1c10:	str	xzr, [sp, #16]
    1c14:	mov	w21, #0x1                   	// #1
    1c18:	orr	x9, x9, #0x1
    1c1c:	str	x9, [x19]
    1c20:	tbz	w8, #1, 1c48 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x284>
    1c24:	b	1fc8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x604>
    1c28:	ldr	x9, [sp, #16]
    1c2c:	strb	w8, [sp, #24]
    1c30:	str	xzr, [sp, #16]
    1c34:	mov	w21, #0x1                   	// #1
    1c38:	orr	x8, x9, #0x1
    1c3c:	str	x8, [x19]
    1c40:	ldrb	w8, [sp, #24]
    1c44:	tbnz	w8, #1, 1fc8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x604>
    1c48:	tbz	w8, #0, 1c64 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2a0>
    1c4c:	ldr	x0, [sp, #16]
    1c50:	cbz	x0, 1c60 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x29c>
    1c54:	ldr	x8, [x0]
    1c58:	ldr	x8, [x8, #8]
    1c5c:	blr	x8
    1c60:	str	xzr, [sp, #16]
    1c64:	ldrb	w8, [sp, #40]
    1c68:	tbnz	w8, #1, 1fc0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5fc>
    1c6c:	tbz	w8, #0, 1c88 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2c4>
    1c70:	ldr	x0, [sp, #32]
    1c74:	cbz	x0, 1c84 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2c0>
    1c78:	ldr	x8, [x0]
    1c7c:	ldr	x8, [x8, #8]
    1c80:	blr	x8
    1c84:	str	xzr, [sp, #32]
    1c88:	orr	w8, w21, #0x4
    1c8c:	cmp	w8, #0x4
    1c90:	b.ne	1edc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x518>  // b.any
    1c94:	subs	w22, w22, #0x1
    1c98:	b.ne	1aa4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xe0>  // b.any
    1c9c:	b	1e94 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x4d0>
    1ca0:	sub	w27, w21, #0x1
    1ca4:	cmp	w27, #0x2
    1ca8:	b.cs	1ff8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x634>  // b.hs, b.nlast
    1cac:	mov	x8, sp
    1cb0:	mov	w1, #0x5                   	// #5
    1cb4:	mov	x0, x20
    1cb8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1cbc:	ldrb	w10, [sp, #8]
    1cc0:	ubfiz	w9, w10, #1, #1
    1cc4:	and	w8, w10, #0xfffffffd
    1cc8:	orr	w11, w9, w8
    1ccc:	strb	w11, [sp, #8]
    1cd0:	tbnz	w10, #0, 1d40 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x37c>
    1cd4:	cbnz	w9, 2018 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x654>
    1cd8:	ldr	x8, [sp]
    1cdc:	cmp	w27, #0x1
    1ce0:	b.hi	1d64 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3a0>  // b.pmore
    1ce4:	cbnz	x8, 1d64 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3a0>
    1ce8:	ldur	x21, [x29, #-16]
    1cec:	orr	w25, w25, #0x1
    1cf0:	ldp	w8, w9, [x21, #8]
    1cf4:	cmp	w8, w9
    1cf8:	b.cs	1e38 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x474>  // b.hs, b.nlast
    1cfc:	ldr	x9, [x21]
    1d00:	add	x8, x9, w8, uxtw #4
    1d04:	str	xzr, [x8]
    1d08:	strb	w25, [x8, #8]
    1d0c:	ldur	w9, [x29, #27]
    1d10:	ldr	w10, [x29, #24]
    1d14:	str	w9, [x8, #12]
    1d18:	stur	w10, [x8, #9]
    1d1c:	ldp	w8, w9, [x21, #8]
    1d20:	cmp	w8, w9
    1d24:	b.cs	1fd8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x614>  // b.hs, b.nlast
    1d28:	add	w8, w8, #0x1
    1d2c:	str	w8, [x21, #8]
    1d30:	mov	w21, #0x4                   	// #4
    1d34:	ldrb	w8, [sp, #8]
    1d38:	tbz	w8, #1, 1dcc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x408>
    1d3c:	b	2018 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x654>
    1d40:	ldr	x9, [sp]
    1d44:	strb	w8, [sp, #8]
    1d48:	str	xzr, [sp]
    1d4c:	mov	w21, #0x1                   	// #1
    1d50:	orr	x8, x9, #0x1
    1d54:	str	x8, [x19]
    1d58:	ldrb	w8, [sp, #8]
    1d5c:	tbz	w8, #1, 1dcc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x408>
    1d60:	b	2018 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x654>
    1d64:	cmp	w27, #0x1
    1d68:	b.hi	1d74 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3b0>  // b.pmore
    1d6c:	cmp	x8, #0x41
    1d70:	b.cs	2008 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x644>  // b.hs, b.nlast
    1d74:	ldur	x9, [x29, #-16]
    1d78:	and	w26, w26, #0xfffffff0
    1d7c:	bfi	w26, w21, #1, #3
    1d80:	ldp	w10, w11, [x9, #8]
    1d84:	cmp	w10, w11
    1d88:	b.cs	1e54 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x490>  // b.hs, b.nlast
    1d8c:	ldr	x11, [x9]
    1d90:	add	x10, x11, w10, uxtw #4
    1d94:	str	x8, [x10]
    1d98:	strb	w26, [x10, #8]
    1d9c:	ldur	w8, [x29, #27]
    1da0:	ldr	w11, [x29, #24]
    1da4:	str	w8, [x10, #12]
    1da8:	stur	w11, [x10, #9]
    1dac:	ldp	w8, w10, [x9, #8]
    1db0:	cmp	w8, w10
    1db4:	b.cs	1fd8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x614>  // b.hs, b.nlast
    1db8:	mov	w21, wzr
    1dbc:	add	w8, w8, #0x1
    1dc0:	str	w8, [x9, #8]
    1dc4:	ldrb	w8, [sp, #8]
    1dc8:	tbnz	w8, #1, 2018 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x654>
    1dcc:	tbnz	w8, #0, 1dd8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x414>
    1dd0:	cbnz	w21, 1c40 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x27c>
    1dd4:	b	1c00 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x23c>
    1dd8:	ldr	x0, [sp]
    1ddc:	cbz	x0, 1dec <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x428>
    1de0:	ldr	x8, [x0]
    1de4:	ldr	x8, [x8, #8]
    1de8:	blr	x8
    1dec:	str	xzr, [sp]
    1df0:	cbnz	w21, 1c40 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x27c>
    1df4:	b	1c00 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x23c>
    1df8:	add	x1, x21, #0x10
    1dfc:	mov	w3, #0x10                  	// #16
    1e00:	mov	x0, x21
    1e04:	mov	x2, xzr
    1e08:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1e0c:	ldr	w8, [x21, #8]
    1e10:	b	1b1c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x158>
    1e14:	add	x1, x8, #0x10
    1e18:	mov	w3, #0x10                  	// #16
    1e1c:	mov	x0, x8
    1e20:	mov	x2, xzr
    1e24:	mov	x21, x8
    1e28:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1e2c:	ldr	w9, [x21, #8]
    1e30:	mov	x8, x21
    1e34:	b	1bcc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x208>
    1e38:	add	x1, x21, #0x10
    1e3c:	mov	w3, #0x10                  	// #16
    1e40:	mov	x0, x21
    1e44:	mov	x2, xzr
    1e48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1e4c:	ldr	w8, [x21, #8]
    1e50:	b	1cfc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x338>
    1e54:	add	x1, x9, #0x10
    1e58:	mov	w3, #0x10                  	// #16
    1e5c:	mov	x0, x9
    1e60:	mov	x2, xzr
    1e64:	mov	x21, x9
    1e68:	mov	x27, x8
    1e6c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1e70:	ldr	w10, [x21, #8]
    1e74:	mov	x8, x27
    1e78:	mov	x9, x21
    1e7c:	b	1d8c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3c8>
    1e80:	ldur	x9, [x29, #-32]
    1e84:	sturb	w8, [x29, #-24]
    1e88:	stur	xzr, [x29, #-32]
    1e8c:	orr	x8, x9, #0x1
    1e90:	b	1ed8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x514>
    1e94:	ldur	x21, [x29, #-16]
    1e98:	ldr	w8, [x21, #8]
    1e9c:	cbz	w8, 2020 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x65c>
    1ea0:	ldp	x1, x8, [x20, #48]
    1ea4:	cmp	x1, x8
    1ea8:	b.eq	1ec8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x504>  // b.none
    1eac:	stp	x21, xzr, [x1]
    1eb0:	ldur	x8, [x29, #-8]
    1eb4:	add	x9, x1, #0x10
    1eb8:	stp	xzr, xzr, [x29, #-16]
    1ebc:	str	x8, [x1, #8]
    1ec0:	str	x9, [x20, #48]
    1ec4:	b	1ed4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x510>
    1ec8:	add	x0, x20, #0x28
    1ecc:	sub	x2, x29, #0x10
    1ed0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1ed4:	mov	w8, #0x1                   	// #1
    1ed8:	str	x8, [x19]
    1edc:	ldurb	w8, [x29, #-24]
    1ee0:	tbnz	w8, #1, 1fd0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x60c>
    1ee4:	tbz	w8, #0, 1f00 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x53c>
    1ee8:	ldur	x0, [x29, #-32]
    1eec:	cbz	x0, 1efc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x538>
    1ef0:	ldr	x8, [x0]
    1ef4:	ldr	x8, [x8, #8]
    1ef8:	blr	x8
    1efc:	stur	xzr, [x29, #-32]
    1f00:	ldur	x19, [x29, #-8]
    1f04:	cbz	x19, 1f88 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5c4>
    1f08:	adrp	x20, 0 <__pthread_key_create>
    1f0c:	ldr	x20, [x20]
    1f10:	add	x8, x19, #0x8
    1f14:	cbz	x20, 1f34 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x570>
    1f18:	ldaxr	w9, [x8]
    1f1c:	sub	w10, w9, #0x1
    1f20:	stlxr	w11, w10, [x8]
    1f24:	cbnz	w11, 1f18 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x554>
    1f28:	cmp	w9, #0x1
    1f2c:	b.eq	1f48 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x584>  // b.none
    1f30:	b	1f88 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5c4>
    1f34:	ldr	w9, [x8]
    1f38:	sub	w10, w9, #0x1
    1f3c:	str	w10, [x8]
    1f40:	cmp	w9, #0x1
    1f44:	b.ne	1f88 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5c4>  // b.any
    1f48:	mov	x21, x19
    1f4c:	ldr	x8, [x21], #12
    1f50:	mov	x0, x19
    1f54:	ldr	x8, [x8, #16]
    1f58:	blr	x8
    1f5c:	cbz	x20, 1fa8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5e4>
    1f60:	ldaxr	w8, [x21]
    1f64:	sub	w9, w8, #0x1
    1f68:	stlxr	w10, w9, [x21]
    1f6c:	cbnz	w10, 1f60 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x59c>
    1f70:	cmp	w8, #0x1
    1f74:	b.ne	1f88 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5c4>  // b.any
    1f78:	ldr	x8, [x19]
    1f7c:	mov	x0, x19
    1f80:	ldr	x8, [x8, #24]
    1f84:	blr	x8
    1f88:	ldp	x20, x19, [sp, #160]
    1f8c:	ldp	x22, x21, [sp, #144]
    1f90:	ldp	x24, x23, [sp, #128]
    1f94:	ldp	x26, x25, [sp, #112]
    1f98:	ldr	x27, [sp, #96]
    1f9c:	ldp	x29, x30, [sp, #80]
    1fa0:	add	sp, sp, #0xb0
    1fa4:	ret
    1fa8:	ldr	w8, [x21]
    1fac:	sub	w9, w8, #0x1
    1fb0:	str	w9, [x21]
    1fb4:	cmp	w8, #0x1
    1fb8:	b.eq	1f78 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5b4>  // b.none
    1fbc:	b	1f88 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5c4>
    1fc0:	add	x0, sp, #0x20
    1fc4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1fc8:	add	x0, sp, #0x10
    1fcc:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1fd0:	sub	x0, x29, #0x20
    1fd4:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1fd8:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1fdc:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1fe0:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1fe4:	add	x0, x0, #0x0
    1fe8:	add	x1, x1, #0x0
    1fec:	add	x3, x3, #0x0
    1ff0:	mov	w2, #0x43                  	// #67
    1ff4:	bl	0 <__assert_fail>
    1ff8:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    1ffc:	add	x0, x0, #0x0
    2000:	mov	w1, #0x1                   	// #1
    2004:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    2008:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    200c:	add	x0, x0, #0x0
    2010:	mov	w1, #0x1                   	// #1
    2014:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    2018:	mov	x0, sp
    201c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    2020:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    2024:	add	x0, x0, #0x0
    2028:	mov	w1, #0x1                   	// #1
    202c:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

0000000000002030 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb>:
    2030:	stp	x29, x30, [sp, #-96]!
    2034:	stp	x28, x27, [sp, #16]
    2038:	stp	x26, x25, [sp, #32]
    203c:	stp	x24, x23, [sp, #48]
    2040:	stp	x22, x21, [sp, #64]
    2044:	stp	x20, x19, [sp, #80]
    2048:	mov	x29, sp
    204c:	sub	sp, sp, #0x2c0
    2050:	mov	w20, w1
    2054:	mov	x19, x8
    2058:	add	x8, sp, #0x80
    205c:	mov	w1, wzr
    2060:	mov	x2, xzr
    2064:	mov	x21, x0
    2068:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    206c:	ldr	x8, [sp, #128]
    2070:	tst	x8, #0xfffffffffffffffe
    2074:	and	x10, x8, #0xfffffffffffffffe
    2078:	cset	w9, ne  // ne = any
    207c:	orr	x9, x10, x9
    2080:	str	x9, [sp, #128]
    2084:	cbz	x10, 20a8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x78>
    2088:	ldrb	w9, [x19, #32]
    208c:	ands	x8, x8, #0xfffffffffffffffe
    2090:	str	xzr, [sp, #128]
    2094:	orr	w9, w9, #0x3
    2098:	strb	w9, [x19, #32]
    209c:	b.eq	27a0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x770>  // b.none
    20a0:	str	x8, [x19]
    20a4:	b	2778 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x748>
    20a8:	cbnz	x9, 27fc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x7cc>
    20ac:	stp	xzr, xzr, [x29, #-48]
    20b0:	stur	xzr, [x29, #-32]
    20b4:	adrp	x9, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    20b8:	adrp	x26, 0 <__pthread_key_create>
    20bc:	ldr	d0, [x9]
    20c0:	ldr	x26, [x26]
    20c4:	add	x8, sp, #0x80
    20c8:	add	x10, sp, #0x40
    20cc:	add	x11, sp, #0x18
    20d0:	mov	x22, xzr
    20d4:	add	x8, x8, #0x10
    20d8:	add	x9, x10, #0x10
    20dc:	add	x28, x11, #0x8
    20e0:	add	x27, x11, #0x18
    20e4:	add	x25, x11, #0x10
    20e8:	str	d0, [sp, #136]
    20ec:	str	x9, [sp, #16]
    20f0:	str	x8, [sp, #128]
    20f4:	b	2108 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xd8>
    20f8:	str	xzr, [sp, #112]
    20fc:	orr	w8, w23, #0x2
    2100:	cmp	w8, #0x2
    2104:	b.ne	2730 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x700>  // b.any
    2108:	add	x8, sp, #0x70
    210c:	mov	w1, #0x2                   	// #2
    2110:	mov	x0, x21
    2114:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    2118:	ldrb	w10, [sp, #120]
    211c:	ubfiz	w9, w10, #1, #1
    2120:	and	w8, w10, #0xfffffffd
    2124:	orr	w11, w9, w8
    2128:	strb	w11, [sp, #120]
    212c:	tbnz	w10, #0, 2168 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x138>
    2130:	cbnz	w9, 2798 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x768>
    2134:	ldr	w8, [sp, #112]
    2138:	cmp	w8, #0x2
    213c:	b.eq	214c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x11c>  // b.none
    2140:	cmp	w8, #0x1
    2144:	b.eq	21b4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x184>  // b.none
    2148:	cbnz	w8, 21e8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1b8>
    214c:	ldrb	w8, [x19, #32]
    2150:	strb	wzr, [x19]
    2154:	strb	wzr, [x19, #24]
    2158:	and	w8, w8, #0xfc
    215c:	orr	w8, w8, #0x2
    2160:	strb	w8, [x19, #32]
    2164:	b	218c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x15c>
    2168:	ldrb	w9, [x19, #32]
    216c:	ldr	x10, [sp, #112]
    2170:	strb	w8, [sp, #120]
    2174:	str	xzr, [sp, #112]
    2178:	orr	w9, w9, #0x3
    217c:	ands	x8, x10, #0xfffffffffffffffe
    2180:	strb	w9, [x19, #32]
    2184:	b.eq	27a0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x770>  // b.none
    2188:	str	x8, [x19]
    218c:	mov	w23, #0x1                   	// #1
    2190:	ldrb	w8, [sp, #120]
    2194:	tbnz	w8, #1, 2798 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x768>
    2198:	tbz	w8, #0, 20fc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xcc>
    219c:	ldr	x0, [sp, #112]
    21a0:	cbz	x0, 20f8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xc8>
    21a4:	ldr	x8, [x0]
    21a8:	ldr	x8, [x8, #8]
    21ac:	blr	x8
    21b0:	b	20f8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0xc8>
    21b4:	ldrb	w8, [x19, #32]
    21b8:	ldur	q0, [x29, #-48]
    21bc:	ldur	x9, [x29, #-32]
    21c0:	mov	w23, #0x1                   	// #1
    21c4:	and	w8, w8, #0xfc
    21c8:	orr	w8, w8, #0x2
    21cc:	stp	xzr, xzr, [x29, #-48]
    21d0:	stur	xzr, [x29, #-32]
    21d4:	str	q0, [x19]
    21d8:	str	x9, [x19, #16]
    21dc:	strb	w8, [x19, #32]
    21e0:	strb	w23, [x19, #24]
    21e4:	b	2190 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x160>
    21e8:	ldr	w1, [sp, #116]
    21ec:	cmp	w1, #0x2
    21f0:	b.ne	2230 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x200>  // b.any
    21f4:	cbz	x22, 214c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x11c>
    21f8:	add	x8, sp, #0x18
    21fc:	mov	x0, x21
    2200:	bl	19c4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv>
    2204:	ldr	x9, [sp, #24]
    2208:	tst	x9, #0xfffffffffffffffe
    220c:	and	x8, x9, #0xfffffffffffffffe
    2210:	cset	w9, ne  // ne = any
    2214:	orr	x9, x8, x9
    2218:	str	x9, [sp, #24]
    221c:	cbz	x8, 2350 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x320>
    2220:	ldrb	w9, [x19, #32]
    2224:	str	x8, [x19]
    2228:	orr	w8, w9, #0x3
    222c:	b	2160 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x130>
    2230:	add	x8, sp, #0x60
    2234:	add	x2, sp, #0x80
    2238:	mov	x0, x21
    223c:	mov	x3, xzr
    2240:	str	wzr, [sp, #136]
    2244:	bl	e14 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE>
    2248:	ldrb	w10, [sp, #104]
    224c:	ubfiz	w9, w10, #1, #1
    2250:	and	w8, w10, #0xfffffffd
    2254:	orr	w11, w9, w8
    2258:	strb	w11, [sp, #104]
    225c:	tbnz	w10, #0, 2324 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2f4>
    2260:	cbnz	w9, 27f4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x7c4>
    2264:	ldr	w8, [sp, #96]
    2268:	cmp	w8, #0x3
    226c:	b.eq	2418 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x3e8>  // b.none
    2270:	cmp	w8, #0x2
    2274:	b.eq	2384 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x354>  // b.none
    2278:	cmp	w8, #0x1
    227c:	b.ne	2704 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6d4>  // b.any
    2280:	ldr	w8, [sp, #136]
    2284:	cbz	w8, 24c0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x490>
    2288:	ldr	x9, [sp, #128]
    228c:	ldp	x8, x1, [x29, #-48]
    2290:	mov	w10, #0x8ba3                	// #35747
    2294:	movk	w10, #0xba2e, lsl #16
    2298:	ldr	w24, [x9]
    229c:	cmp	x8, x1
    22a0:	b.eq	22b4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x284>  // b.none
    22a4:	mov	x22, x1
    22a8:	ldr	w9, [x22, #-88]!
    22ac:	cmp	w9, w24
    22b0:	b.eq	2704 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6d4>  // b.none
    22b4:	sub	x9, x1, x8
    22b8:	lsr	x9, x9, #3
    22bc:	mul	w9, w9, w10
    22c0:	cbz	w9, 22e8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2b8>
    22c4:	mov	w10, wzr
    22c8:	mov	w11, #0x58                  	// #88
    22cc:	umaddl	x22, w10, w11, x8
    22d0:	ldr	w11, [x22]
    22d4:	cmp	w11, w24
    22d8:	b.eq	2704 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6d4>  // b.none
    22dc:	add	w10, w10, #0x1
    22e0:	cmp	w9, w10
    22e4:	b.ne	22c8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x298>  // b.any
    22e8:	ldur	x8, [x29, #-32]
    22ec:	cmp	x1, x8
    22f0:	b.eq	2638 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x608>  // b.none
    22f4:	movi	v0.2d, #0x0
    22f8:	mov	x8, x1
    22fc:	stp	q0, q0, [x1, #16]
    2300:	add	x22, x1, #0x58
    2304:	str	q0, [x8, #48]!
    2308:	str	q0, [x1]
    230c:	stp	x8, xzr, [x1, #32]
    2310:	strb	wzr, [x8]
    2314:	stp	xzr, xzr, [x1, #72]
    2318:	str	xzr, [x1, #64]
    231c:	stur	x22, [x29, #-40]
    2320:	b	2644 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x614>
    2324:	ldrb	w9, [x19, #32]
    2328:	ldr	x10, [sp, #96]
    232c:	strb	w8, [sp, #104]
    2330:	str	xzr, [sp, #96]
    2334:	orr	w9, w9, #0x3
    2338:	ands	x8, x10, #0xfffffffffffffffe
    233c:	strb	w9, [x19, #32]
    2340:	b.eq	27a0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x770>  // b.none
    2344:	str	x8, [x19]
    2348:	mov	w23, #0x1                   	// #1
    234c:	b	2708 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6d8>
    2350:	cbnz	x9, 27c0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x790>
    2354:	ldp	x1, x9, [x22, #16]
    2358:	ldr	x8, [x21, #48]
    235c:	cmp	x1, x9
    2360:	b.eq	24e0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x4b0>  // b.none
    2364:	str	xzr, [x1, #8]
    2368:	ldur	q0, [x8, #-16]
    236c:	add	x9, x1, #0x10
    2370:	stur	xzr, [x8, #-8]
    2374:	str	q0, [x1]
    2378:	stur	xzr, [x8, #-16]
    237c:	str	x9, [x22, #16]
    2380:	b	24ec <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x4bc>
    2384:	cbz	x22, 24c0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x490>
    2388:	tbz	w20, #0, 2704 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6d4>
    238c:	ldr	w8, [sp, #136]
    2390:	stp	x28, x27, [sp]
    2394:	stp	x25, xzr, [sp, #24]
    2398:	strb	wzr, [sp, #40]
    239c:	cbz	w8, 2580 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x550>
    23a0:	mov	x24, xzr
    23a4:	sub	x27, x8, #0x1
    23a8:	ldr	x9, [sp, #128]
    23ac:	ldp	x8, x23, [sp, #24]
    23b0:	ldr	x10, [sp, #40]
    23b4:	ldr	x28, [x9, x24, lsl #3]
    23b8:	cmp	x8, x25
    23bc:	mov	w9, #0xf                   	// #15
    23c0:	add	x26, x23, #0x1
    23c4:	csel	x9, x9, x10, eq  // eq = none
    23c8:	cmp	x26, x9
    23cc:	b.ls	23ec <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x3bc>  // b.plast
    23d0:	add	x0, sp, #0x18
    23d4:	mov	w4, #0x1                   	// #1
    23d8:	mov	x1, x23
    23dc:	mov	x2, xzr
    23e0:	mov	x3, xzr
    23e4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    23e8:	ldr	x8, [sp, #24]
    23ec:	strb	w28, [x8, x23]
    23f0:	ldr	x8, [sp, #24]
    23f4:	cmp	x27, x24
    23f8:	str	x26, [sp, #32]
    23fc:	strb	wzr, [x8, x26]
    2400:	b.eq	2580 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x550>  // b.none
    2404:	ldr	w8, [sp, #136]
    2408:	add	x24, x24, #0x1
    240c:	cmp	x24, x8
    2410:	b.cc	23a8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x378>  // b.lo, b.ul, b.last
    2414:	b	27c8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x798>
    2418:	cbz	x22, 24c0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x490>
    241c:	tbz	w20, #0, 2704 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6d4>
    2420:	ldr	w24, [sp, #136]
    2424:	ldr	x8, [sp, #16]
    2428:	str	x27, [sp, #8]
    242c:	strb	wzr, [sp, #80]
    2430:	cmp	w24, #0x1
    2434:	stp	x8, xzr, [sp, #64]
    2438:	b.eq	25d4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x5a4>  // b.none
    243c:	mov	w8, w24
    2440:	mov	w27, #0x1                   	// #1
    2444:	str	x28, [sp]
    2448:	b	246c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x43c>
    244c:	strb	w28, [x8, x23]
    2450:	ldr	x8, [sp, #64]
    2454:	str	x26, [sp, #72]
    2458:	add	x27, x27, #0x1
    245c:	cmp	w24, w27
    2460:	strb	wzr, [x8, x26]
    2464:	ldr	w8, [sp, #136]
    2468:	b.eq	25c4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x594>  // b.none
    246c:	cmp	x27, w8, uxtw
    2470:	b.cs	27c8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x798>  // b.hs, b.nlast
    2474:	ldr	x9, [sp, #128]
    2478:	ldp	x8, x23, [sp, #64]
    247c:	ldr	x10, [sp, #80]
    2480:	ldr	x28, [x9, x27, lsl #3]
    2484:	ldr	x9, [sp, #16]
    2488:	add	x26, x23, #0x1
    248c:	cmp	x8, x9
    2490:	mov	w9, #0xf                   	// #15
    2494:	csel	x9, x9, x10, eq  // eq = none
    2498:	cmp	x26, x9
    249c:	b.ls	244c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x41c>  // b.plast
    24a0:	add	x0, sp, #0x40
    24a4:	mov	w4, #0x1                   	// #1
    24a8:	mov	x1, x23
    24ac:	mov	x2, xzr
    24b0:	mov	x3, xzr
    24b4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    24b8:	ldr	x8, [sp, #64]
    24bc:	b	244c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x41c>
    24c0:	ldrb	w8, [x19, #32]
    24c4:	strb	wzr, [x19]
    24c8:	strb	wzr, [x19, #24]
    24cc:	mov	w23, #0x1                   	// #1
    24d0:	and	w8, w8, #0xfc
    24d4:	orr	w8, w8, #0x2
    24d8:	strb	w8, [x19, #32]
    24dc:	b	2708 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6d8>
    24e0:	sub	x2, x8, #0x10
    24e4:	add	x0, x22, #0x8
    24e8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    24ec:	ldr	x8, [x21, #48]
    24f0:	sub	x9, x8, #0x10
    24f4:	str	x9, [x21, #48]
    24f8:	ldur	x23, [x8, #-8]
    24fc:	cbz	x23, 2578 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x548>
    2500:	add	x8, x23, #0x8
    2504:	cbz	x26, 2524 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x4f4>
    2508:	ldaxr	w9, [x8]
    250c:	sub	w10, w9, #0x1
    2510:	stlxr	w11, w10, [x8]
    2514:	cbnz	w11, 2508 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x4d8>
    2518:	cmp	w9, #0x1
    251c:	b.ne	2578 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x548>  // b.any
    2520:	b	2538 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x508>
    2524:	ldr	w9, [x8]
    2528:	sub	w10, w9, #0x1
    252c:	str	w10, [x8]
    2530:	cmp	w9, #0x1
    2534:	b.ne	2578 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x548>  // b.any
    2538:	mov	x24, x23
    253c:	ldr	x8, [x24], #12
    2540:	mov	x0, x23
    2544:	ldr	x8, [x8, #16]
    2548:	blr	x8
    254c:	cbz	x26, 25ac <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x57c>
    2550:	ldaxr	w8, [x24]
    2554:	sub	w9, w8, #0x1
    2558:	stlxr	w10, w9, [x24]
    255c:	cbnz	w10, 2550 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x520>
    2560:	cmp	w8, #0x1
    2564:	b.ne	2578 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x548>  // b.any
    2568:	ldr	x8, [x23]
    256c:	mov	x0, x23
    2570:	ldr	x8, [x8, #24]
    2574:	blr	x8
    2578:	mov	w23, #0x2                   	// #2
    257c:	b	2190 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x160>
    2580:	add	x0, x22, #0x20
    2584:	add	x1, sp, #0x18
    2588:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
    258c:	ldr	x0, [sp, #24]
    2590:	cmp	x0, x25
    2594:	b.eq	259c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x56c>  // b.none
    2598:	bl	0 <_ZdlPv>
    259c:	adrp	x26, 0 <__pthread_key_create>
    25a0:	ldr	x26, [x26]
    25a4:	ldp	x28, x27, [sp]
    25a8:	b	2704 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6d4>
    25ac:	ldr	w8, [x24]
    25b0:	sub	w9, w8, #0x1
    25b4:	str	w9, [x24]
    25b8:	cmp	w8, #0x1
    25bc:	b.eq	2568 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x538>  // b.none
    25c0:	b	2578 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x548>
    25c4:	adrp	x26, 0 <__pthread_key_create>
    25c8:	ldr	x26, [x26]
    25cc:	ldr	x28, [sp]
    25d0:	cbz	w8, 27c8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x798>
    25d4:	ldr	x8, [sp, #128]
    25d8:	ldp	x23, x24, [sp, #64]
    25dc:	ldr	x8, [x8]
    25e0:	str	w8, [sp, #24]
    25e4:	ldr	x8, [sp, #8]
    25e8:	str	x8, [sp, #32]
    25ec:	cbnz	x23, 25f4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x5c4>
    25f0:	cbnz	x24, 27e8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x7b8>
    25f4:	ldr	x0, [sp, #8]
    25f8:	cmp	x24, #0x10
    25fc:	stur	x24, [x29, #-16]
    2600:	b.cc	2620 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x5f0>  // b.lo, b.ul, b.last
    2604:	sub	x1, x29, #0x10
    2608:	mov	x0, x28
    260c:	mov	x2, xzr
    2610:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    2614:	ldur	x8, [x29, #-16]
    2618:	str	x0, [sp, #32]
    261c:	str	x8, [sp, #48]
    2620:	cbz	x24, 265c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x62c>
    2624:	cmp	x24, #0x1
    2628:	b.ne	2650 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x620>  // b.any
    262c:	ldrb	w8, [x23]
    2630:	strb	w8, [x0]
    2634:	b	265c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x62c>
    2638:	sub	x0, x29, #0x30
    263c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    2640:	ldur	x22, [x29, #-40]
    2644:	mov	w23, wzr
    2648:	str	w24, [x22, #-88]!
    264c:	b	2708 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6d8>
    2650:	mov	x1, x23
    2654:	mov	x2, x24
    2658:	bl	0 <memcpy>
    265c:	ldur	x8, [x29, #-16]
    2660:	ldr	x9, [sp, #32]
    2664:	str	x8, [sp, #40]
    2668:	strb	wzr, [x9, x8]
    266c:	ldp	x1, x8, [x22, #72]
    2670:	cmp	x1, x8
    2674:	b.eq	26a8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x678>  // b.none
    2678:	ldr	w9, [sp, #24]
    267c:	add	x8, x1, #0x18
    2680:	str	x8, [x1, #8]
    2684:	ldr	x27, [sp, #8]
    2688:	str	w9, [x1]
    268c:	ldr	x9, [sp, #32]
    2690:	cmp	x9, x27
    2694:	b.eq	26cc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x69c>  // b.none
    2698:	str	x9, [x1, #8]
    269c:	ldr	x8, [sp, #48]
    26a0:	str	x8, [x1, #24]
    26a4:	b	26d4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6a4>
    26a8:	add	x0, x22, #0x40
    26ac:	add	x2, sp, #0x18
    26b0:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    26b4:	ldr	x0, [sp, #32]
    26b8:	ldr	x27, [sp, #8]
    26bc:	cmp	x0, x27
    26c0:	b.eq	26f0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6c0>  // b.none
    26c4:	bl	0 <_ZdlPv>
    26c8:	b	26f0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6c0>
    26cc:	ldr	q0, [x27]
    26d0:	str	q0, [x8]
    26d4:	ldr	x8, [sp, #40]
    26d8:	str	x8, [x1, #16]
    26dc:	stp	x27, xzr, [sp, #32]
    26e0:	strb	wzr, [sp, #48]
    26e4:	ldr	x8, [x22, #72]
    26e8:	add	x8, x8, #0x28
    26ec:	str	x8, [x22, #72]
    26f0:	ldr	x0, [sp, #64]
    26f4:	ldr	x8, [sp, #16]
    26f8:	cmp	x0, x8
    26fc:	b.eq	2704 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6d4>  // b.none
    2700:	bl	0 <_ZdlPv>
    2704:	mov	w23, wzr
    2708:	ldrb	w8, [sp, #104]
    270c:	tbnz	w8, #1, 27f4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x7c4>
    2710:	tbz	w8, #0, 2190 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x160>
    2714:	ldr	x0, [sp, #96]
    2718:	cbz	x0, 2728 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6f8>
    271c:	ldr	x8, [x0]
    2720:	ldr	x8, [x8, #8]
    2724:	blr	x8
    2728:	str	xzr, [sp, #96]
    272c:	b	2190 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x160>
    2730:	ldr	x0, [sp, #128]
    2734:	add	x8, sp, #0x80
    2738:	add	x8, x8, #0x10
    273c:	cmp	x0, x8
    2740:	b.eq	2748 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x718>  // b.none
    2744:	bl	0 <free>
    2748:	ldp	x19, x20, [x29, #-48]
    274c:	cmp	x19, x20
    2750:	b.eq	276c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x73c>  // b.none
    2754:	mov	x0, x19
    2758:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    275c:	add	x19, x19, #0x58
    2760:	cmp	x20, x19
    2764:	b.ne	2754 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x724>  // b.any
    2768:	ldur	x19, [x29, #-48]
    276c:	cbz	x19, 2778 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x748>
    2770:	mov	x0, x19
    2774:	bl	0 <_ZdlPv>
    2778:	add	sp, sp, #0x2c0
    277c:	ldp	x20, x19, [sp, #80]
    2780:	ldp	x22, x21, [sp, #64]
    2784:	ldp	x24, x23, [sp, #48]
    2788:	ldp	x26, x25, [sp, #32]
    278c:	ldp	x28, x27, [sp, #16]
    2790:	ldp	x29, x30, [sp], #96
    2794:	ret
    2798:	add	x0, sp, #0x70
    279c:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    27a0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    27a4:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    27a8:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    27ac:	add	x0, x0, #0x0
    27b0:	add	x1, x1, #0x0
    27b4:	add	x3, x3, #0x0
    27b8:	mov	w2, #0x1ce                 	// #462
    27bc:	bl	0 <__assert_fail>
    27c0:	add	x0, sp, #0x18
    27c4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    27c8:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    27cc:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    27d0:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    27d4:	add	x0, x0, #0x0
    27d8:	add	x1, x1, #0x0
    27dc:	add	x3, x3, #0x0
    27e0:	mov	w2, #0x95                  	// #149
    27e4:	bl	0 <__assert_fail>
    27e8:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    27ec:	add	x0, x0, #0x0
    27f0:	bl	0 <_ZSt19__throw_logic_errorPKc>
    27f4:	add	x0, sp, #0x60
    27f8:	bl	0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    27fc:	add	x0, sp, #0x80
    2800:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor7ReadVBREj:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x26, x25, [sp, #64]
   c:	stp	x24, x23, [sp, #80]
  10:	stp	x22, x21, [sp, #96]
  14:	stp	x20, x19, [sp, #112]
  18:	add	x29, sp, #0x30
  1c:	mov	x19, x8
  20:	add	x8, sp, #0x10
  24:	mov	w20, w1
  28:	mov	x21, x0
  2c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
  30:	ldrb	w8, [sp, #24]
  34:	mov	w9, #0x2                   	// #2
  38:	bfxil	w9, w8, #0, #1
  3c:	and	w10, w8, #0xfffffffd
  40:	sturb	w9, [x29, #-8]
  44:	strb	w10, [sp, #24]
  48:	tbnz	w8, #0, 5c <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x5c>
  4c:	ldr	x8, [sp, #16]
  50:	mov	w9, #0x2                   	// #2
  54:	stur	w8, [x29, #-16]
  58:	b	68 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x68>
  5c:	ldr	x8, [sp, #16]
  60:	str	xzr, [sp, #16]
  64:	stur	x8, [x29, #-16]
  68:	and	w8, w9, #0x1
  6c:	mov	w10, w8
  70:	bfi	w10, w9, #1, #1
  74:	sturb	w10, [x29, #-8]
  78:	tbnz	w9, #0, 188 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x188>
  7c:	ubfiz	w8, w9, #1, #1
  80:	cbnz	w8, 238 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x238>
  84:	ldur	w8, [x29, #-16]
  88:	sub	w22, w20, #0x1
  8c:	mov	w9, #0x1                   	// #1
  90:	lsl	w23, w9, w22
  94:	tst	w8, w23
  98:	b.eq	1e8 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x1e8>  // b.none
  9c:	sub	w25, w23, #0x1
  a0:	and	w24, w8, w25
  a4:	mov	w26, w22
  a8:	mov	x8, sp
  ac:	mov	x0, x21
  b0:	mov	w1, w20
  b4:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
  b8:	ldrb	w9, [sp, #24]
  bc:	ldrb	w10, [sp, #8]
  c0:	ldr	x8, [sp]
  c4:	and	w9, w9, #0xfc
  c8:	bfxil	w9, w10, #0, #1
  cc:	and	w11, w10, #0xfffffffd
  d0:	orr	w9, w9, #0x2
  d4:	strb	w9, [sp, #24]
  d8:	strb	w11, [sp, #8]
  dc:	tbnz	w10, #0, e8 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0xe8>
  e0:	str	w8, [sp, #16]
  e4:	b	f0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0xf0>
  e8:	str	xzr, [sp]
  ec:	str	x8, [sp, #16]
  f0:	sub	x0, x29, #0x10
  f4:	add	x1, sp, #0x10
  f8:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
  fc:	ldrb	w8, [sp, #24]
 100:	tbnz	w8, #1, 240 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x240>
 104:	tbz	w8, #0, 120 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x120>
 108:	ldr	x0, [sp, #16]
 10c:	cbz	x0, 11c <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x11c>
 110:	ldr	x8, [x0]
 114:	ldr	x8, [x8, #8]
 118:	blr	x8
 11c:	str	xzr, [sp, #16]
 120:	ldrb	w8, [sp, #8]
 124:	tbnz	w8, #1, 248 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x248>
 128:	tbz	w8, #0, 144 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x144>
 12c:	ldr	x0, [sp]
 130:	cbz	x0, 140 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x140>
 134:	ldr	x8, [x0]
 138:	ldr	x8, [x8, #8]
 13c:	blr	x8
 140:	str	xzr, [sp]
 144:	ldurb	w10, [x29, #-8]
 148:	ubfiz	w11, w10, #1, #1
 14c:	and	w9, w10, #0xfffffffd
 150:	orr	w8, w11, w9
 154:	sturb	w8, [x29, #-8]
 158:	tbnz	w10, #0, 208 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x208>
 15c:	cbnz	w11, 238 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x238>
 160:	ldur	w9, [x29, #-16]
 164:	and	w10, w9, w25
 168:	tst	w9, w23
 16c:	lsl	w9, w10, w26
 170:	orr	w24, w9, w24
 174:	add	w26, w26, w22
 178:	b.ne	a8 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0xa8>  // b.any
 17c:	ldrb	w9, [x19, #8]
 180:	str	w24, [x19]
 184:	b	1f4 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x1f4>
 188:	ldrb	w9, [x19, #8]
 18c:	ldur	x10, [x29, #-16]
 190:	sturb	w8, [x29, #-8]
 194:	stur	xzr, [x29, #-16]
 198:	and	w9, w9, #0xfc
 19c:	orr	w9, w8, w9
 1a0:	orr	w9, w9, #0x2
 1a4:	strb	w9, [x19, #8]
 1a8:	str	x10, [x19]
 1ac:	tbnz	w8, #1, 238 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x238>
 1b0:	tbz	w8, #0, 1cc <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x1cc>
 1b4:	ldur	x0, [x29, #-16]
 1b8:	cbz	x0, 1c8 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x1c8>
 1bc:	ldr	x8, [x0]
 1c0:	ldr	x8, [x8, #8]
 1c4:	blr	x8
 1c8:	stur	xzr, [x29, #-16]
 1cc:	ldp	x20, x19, [sp, #112]
 1d0:	ldp	x22, x21, [sp, #96]
 1d4:	ldp	x24, x23, [sp, #80]
 1d8:	ldp	x26, x25, [sp, #64]
 1dc:	ldp	x29, x30, [sp, #48]
 1e0:	add	sp, sp, #0x80
 1e4:	ret
 1e8:	ldrb	w9, [x19, #8]
 1ec:	str	w8, [x19]
 1f0:	mov	w8, w10
 1f4:	and	w9, w9, #0xfc
 1f8:	orr	w9, w9, #0x2
 1fc:	strb	w9, [x19, #8]
 200:	tbz	w8, #1, 1b0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x1b0>
 204:	b	238 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x238>
 208:	and	w8, w10, #0x1
 20c:	ldrb	w10, [x19, #8]
 210:	ldur	x11, [x29, #-16]
 214:	sturb	w9, [x29, #-8]
 218:	stur	xzr, [x29, #-16]
 21c:	and	w10, w10, #0xfc
 220:	orr	w8, w8, w10
 224:	orr	w8, w8, #0x2
 228:	strb	w8, [x19, #8]
 22c:	str	x11, [x19]
 230:	mov	w8, w9
 234:	tbz	w8, #1, 1b0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj+0x1b0>
 238:	sub	x0, x29, #0x10
 23c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
 240:	add	x0, sp, #0x10
 244:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>
 248:	mov	x0, sp
 24c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor7ReadVBREj>

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor4ReadEj:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>:
   0:	sub	sp, sp, #0xb0
   4:	stp	x29, x30, [sp, #112]
   8:	stp	x24, x23, [sp, #128]
   c:	stp	x22, x21, [sp, #144]
  10:	stp	x20, x19, [sp, #160]
  14:	add	x29, sp, #0x70
  18:	sub	w9, w1, #0x1
  1c:	cmp	w9, #0x3f
  20:	b.hi	214 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x214>  // b.pmore
  24:	ldr	w22, [x0, #32]
  28:	mov	w21, w1
  2c:	mov	x20, x0
  30:	mov	x19, x8
  34:	cmp	w22, w1
  38:	b.cs	48 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x48>  // b.hs, b.nlast
  3c:	cbz	w22, 80 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x80>
  40:	ldr	x23, [x20, #24]
  44:	b	84 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x84>
  48:	ldr	x8, [x20, #24]
  4c:	sub	w10, w22, w21
  50:	str	w10, [x20, #32]
  54:	neg	w9, w21
  58:	lsr	x10, x8, x21
  5c:	str	x10, [x20, #24]
  60:	ldrb	w10, [x19, #8]
  64:	mov	x11, #0xffffffffffffffff    	// #-1
  68:	lsr	x9, x11, x9
  6c:	and	x8, x8, x9
  70:	and	w9, w10, #0xfc
  74:	orr	w9, w9, #0x2
  78:	strb	w9, [x19, #8]
  7c:	b	c4 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0xc4>
  80:	mov	x23, xzr
  84:	add	x8, sp, #0x8
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
  90:	ldr	x8, [sp, #8]
  94:	tst	x8, #0xfffffffffffffffe
  98:	and	x10, x8, #0xfffffffffffffffe
  9c:	cset	w9, ne  // ne = any
  a0:	orr	x9, x10, x9
  a4:	str	x9, [sp, #8]
  a8:	cbz	x10, e0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0xe0>
  ac:	ldrb	w9, [x19, #8]
  b0:	ands	x8, x8, #0xfffffffffffffffe
  b4:	str	xzr, [sp, #8]
  b8:	orr	w9, w9, #0x3
  bc:	strb	w9, [x19, #8]
  c0:	b.eq	1c4 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x1c4>  // b.none
  c4:	str	x8, [x19]
  c8:	ldp	x20, x19, [sp, #160]
  cc:	ldp	x22, x21, [sp, #144]
  d0:	ldp	x24, x23, [sp, #128]
  d4:	ldp	x29, x30, [sp, #112]
  d8:	add	sp, sp, #0xb0
  dc:	ret
  e0:	cbnz	x9, 234 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x234>
  e4:	ldr	w24, [x20, #32]
  e8:	sub	w21, w21, w22
  ec:	subs	w8, w24, w21
  f0:	b.cs	1e4 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x1e4>  // b.hs, b.nlast
  f4:	bl	0 <_ZNSt3_V216generic_categoryEv>
  f8:	strb	wzr, [sp, #72]
  fc:	stp	xzr, xzr, [sp, #24]
 100:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
 104:	ldr	x10, [x10]
 108:	mov	w9, #0x1                   	// #1
 10c:	str	w9, [sp, #40]
 110:	add	x8, sp, #0x38
 114:	add	x10, x10, #0x10
 118:	stp	x10, xzr, [sp, #8]
 11c:	adrp	x10, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 120:	ldr	x10, [x10]
 124:	adrp	x9, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 128:	mov	x20, x0
 12c:	add	x9, x9, #0x0
 130:	str	x8, [sp, #48]
 134:	add	x22, x8, #0x10
 138:	add	x8, x10, #0x10
 13c:	add	x0, sp, #0x8
 140:	sub	x1, x29, #0x18
 144:	stp	x22, xzr, [sp, #56]
 148:	stp	x8, x9, [x29, #-24]
 14c:	stp	w21, w24, [x29, #-8]
 150:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 154:	ldr	x8, [sp, #32]
 158:	ldr	x9, [sp, #16]
 15c:	cmp	x8, x9
 160:	b.eq	16c <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x16c>  // b.none
 164:	add	x0, sp, #0x8
 168:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 16c:	ldr	x23, [sp, #48]
 170:	mov	w0, #0x40                  	// #64
 174:	bl	0 <_Znwm>
 178:	mov	w8, #0x104                 	// #260
 17c:	sub	x1, x29, #0x18
 180:	mov	w2, #0x5                   	// #5
 184:	mov	x3, x20
 188:	mov	x21, x0
 18c:	sturh	w8, [x29, #-8]
 190:	stp	x23, xzr, [x29, #-24]
 194:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
 198:	add	x0, sp, #0x8
 19c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 1a0:	ldr	x0, [sp, #56]
 1a4:	cmp	x0, x22
 1a8:	b.eq	1b0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x1b0>  // b.none
 1ac:	bl	0 <_ZdlPv>
 1b0:	ldrb	w8, [x19, #8]
 1b4:	orr	w9, w8, #0x3
 1b8:	ands	x8, x21, #0xfffffffffffffffe
 1bc:	strb	w9, [x19, #8]
 1c0:	b.ne	c4 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0xc4>  // b.any
 1c4:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 1c8:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 1cc:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x1ce                 	// #462
 1e0:	bl	0 <__assert_fail>
 1e4:	ldr	x9, [x20, #24]
 1e8:	neg	w10, w21
 1ec:	mov	x11, #0xffffffffffffffff    	// #-1
 1f0:	str	w8, [x20, #32]
 1f4:	lsr	x8, x11, x10
 1f8:	lsr	x10, x9, x21
 1fc:	str	x10, [x20, #24]
 200:	ldrb	w10, [x19, #8]
 204:	and	x8, x9, x8
 208:	lsl	x8, x8, x22
 20c:	orr	x8, x8, x23
 210:	b	70 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x70>
 214:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 218:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 21c:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 220:	add	x0, x0, #0x0
 224:	add	x1, x1, #0x0
 228:	add	x3, x3, #0x0
 22c:	mov	w2, #0xc1                  	// #193
 230:	bl	0 <__assert_fail>
 234:	add	x0, sp, #0x8
 238:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x26, x25, [sp, #48]
   c:	stp	x24, x23, [sp, #64]
  10:	stp	x22, x21, [sp, #80]
  14:	stp	x20, x19, [sp, #96]
  18:	add	x29, sp, #0x20
  1c:	mov	x19, x8
  20:	add	x8, sp, #0x10
  24:	mov	w20, w1
  28:	mov	x21, x0
  2c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
  30:	ldrb	w10, [sp, #24]
  34:	ubfiz	w11, w10, #1, #1
  38:	and	w8, w10, #0xfffffffd
  3c:	orr	w9, w11, w8
  40:	strb	w9, [sp, #24]
  44:	tbnz	w10, #0, 104 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x104>
  48:	cbnz	w11, 1b4 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1b4>
  4c:	ldr	x0, [sp, #16]
  50:	sub	w23, w20, #0x1
  54:	mov	w8, #0x1                   	// #1
  58:	lsl	w24, w8, w23
  5c:	tst	w24, w0
  60:	b.eq	168 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x168>  // b.none
  64:	sub	w25, w24, #0x1
  68:	and	w22, w25, w0
  6c:	mov	w26, w23
  70:	mov	x8, sp
  74:	mov	x0, x21
  78:	mov	w1, w20
  7c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
  80:	add	x0, sp, #0x10
  84:	mov	x1, sp
  88:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
  8c:	ldrb	w8, [sp, #8]
  90:	tbnz	w8, #1, 1bc <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1bc>
  94:	tbz	w8, #0, b0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0xb0>
  98:	ldr	x0, [sp]
  9c:	cbz	x0, ac <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0xac>
  a0:	ldr	x8, [x0]
  a4:	ldr	x8, [x8, #8]
  a8:	blr	x8
  ac:	str	xzr, [sp]
  b0:	ldrb	w10, [sp, #24]
  b4:	ubfiz	w11, w10, #1, #1
  b8:	and	w9, w10, #0xfffffffd
  bc:	orr	w8, w11, w9
  c0:	strb	w8, [sp, #24]
  c4:	tbnz	w10, #0, 180 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x180>
  c8:	cbnz	w11, 1b4 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1b4>
  cc:	ldr	x0, [sp, #16]
  d0:	and	w9, w25, w0
  d4:	lsl	x9, x9, x26
  d8:	tst	w24, w0
  dc:	orr	x22, x9, x22
  e0:	add	w26, w26, w23
  e4:	b.ne	70 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x70>  // b.any
  e8:	ldrb	w9, [x19, #8]
  ec:	and	w9, w9, #0xfc
  f0:	orr	w9, w9, #0x2
  f4:	strb	w9, [x19, #8]
  f8:	str	x22, [x19]
  fc:	tbz	w8, #1, 134 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x134>
 100:	b	1b4 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1b4>
 104:	ldrb	w9, [x19, #8]
 108:	and	w10, w10, #0x1
 10c:	ldr	x22, [sp, #16]
 110:	mov	x0, xzr
 114:	and	w9, w9, #0xfc
 118:	orr	w9, w10, w9
 11c:	orr	w9, w9, #0x2
 120:	strb	w8, [sp, #24]
 124:	strb	w9, [x19, #8]
 128:	str	xzr, [sp, #16]
 12c:	str	x22, [x19]
 130:	tbnz	w8, #1, 1b4 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1b4>
 134:	tbz	w8, #0, 14c <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x14c>
 138:	cbz	x0, 148 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x148>
 13c:	ldr	x8, [x0]
 140:	ldr	x8, [x8, #8]
 144:	blr	x8
 148:	str	xzr, [sp, #16]
 14c:	ldp	x20, x19, [sp, #96]
 150:	ldp	x22, x21, [sp, #80]
 154:	ldp	x24, x23, [sp, #64]
 158:	ldp	x26, x25, [sp, #48]
 15c:	ldp	x29, x30, [sp, #32]
 160:	add	sp, sp, #0x70
 164:	ret
 168:	ldrb	w8, [x19, #8]
 16c:	and	x22, x0, #0xffffffff
 170:	and	w8, w8, #0xfc
 174:	orr	w8, w8, #0x2
 178:	strb	w8, [x19, #8]
 17c:	b	1a8 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1a8>
 180:	ldrb	w8, [x19, #8]
 184:	and	w10, w10, #0x1
 188:	ldr	x22, [sp, #16]
 18c:	mov	x0, xzr
 190:	and	w8, w8, #0xfc
 194:	orr	w8, w10, w8
 198:	orr	w8, w8, #0x2
 19c:	strb	w9, [sp, #24]
 1a0:	strb	w8, [x19, #8]
 1a4:	str	xzr, [sp, #16]
 1a8:	mov	w8, w9
 1ac:	str	x22, [x19]
 1b0:	tbz	w8, #1, 134 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x134>
 1b4:	add	x0, sp, #0x10
 1b8:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 1bc:	mov	x0, sp
 1c0:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor9JumpToBitEm:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	str	x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	x10, [x0, #8]
  14:	lsr	x9, x1, #3
  18:	and	x9, x9, #0x1ffffffffffffff8
  1c:	cmp	x10, x9
  20:	b.cc	b8 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0xb8>  // b.lo, b.ul, b.last
  24:	mov	x19, x8
  28:	and	w1, w1, #0x3f
  2c:	str	x9, [x0, #16]
  30:	str	wzr, [x0, #32]
  34:	cbz	w1, 64 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0x64>
  38:	mov	x8, sp
  3c:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>
  40:	ldrb	w10, [sp, #8]
  44:	ubfiz	w8, w10, #1, #1
  48:	and	w9, w10, #0xfffffffd
  4c:	orr	w8, w8, w9
  50:	strb	w8, [sp, #8]
  54:	tbnz	w10, #0, 70 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0x70>
  58:	mov	w9, #0x1                   	// #1
  5c:	str	x9, [x19]
  60:	b	88 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0x88>
  64:	mov	w8, #0x1                   	// #1
  68:	str	x8, [x19]
  6c:	b	a8 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0xa8>
  70:	ldr	x8, [sp]
  74:	strb	w9, [sp, #8]
  78:	str	xzr, [sp]
  7c:	orr	x8, x8, #0x1
  80:	str	x8, [x19]
  84:	mov	w8, w9
  88:	tbnz	w8, #1, d8 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0xd8>
  8c:	tbz	w8, #0, a8 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0xa8>
  90:	ldr	x0, [sp]
  94:	cbz	x0, a4 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm+0xa4>
  98:	ldr	x8, [x0]
  9c:	ldr	x8, [x8, #8]
  a0:	blr	x8
  a4:	str	xzr, [sp]
  a8:	ldr	x19, [sp, #32]
  ac:	ldp	x29, x30, [sp, #16]
  b0:	add	sp, sp, #0x30
  b4:	ret
  b8:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>
  bc:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>
  c0:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x85                  	// #133
  d4:	bl	0 <__assert_fail>
  d8:	mov	x0, sp
  dc:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9JumpToBitEm>

Disassembly of section .text._ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj:

0000000000000000 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x22, x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	mov	w19, w1
  18:	mov	x20, x0
  1c:	mov	x21, x8
  20:	b	2c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x2c>
  24:	str	xzr, [sp, #16]
  28:	cbnz	w22, 124 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x124>
  2c:	add	x8, sp, #0x10
  30:	mov	x0, x20
  34:	mov	w1, w19
  38:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
  3c:	ldrb	w10, [sp, #24]
  40:	ubfiz	w11, w10, #1, #1
  44:	and	w8, w10, #0xfffffffd
  48:	orr	w9, w11, w8
  4c:	strb	w9, [sp, #24]
  50:	tbnz	w10, #0, a8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa8>
  54:	cbnz	w11, 138 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x138>
  58:	ldr	x8, [sp, #16]
  5c:	cmp	w8, #0x2
  60:	b.ne	d8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xd8>  // b.any
  64:	add	x8, sp, #0x8
  68:	mov	x0, x20
  6c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
  70:	ldr	x9, [sp, #8]
  74:	tst	x9, #0xfffffffffffffffe
  78:	and	x8, x9, #0xfffffffffffffffe
  7c:	cset	w9, ne  // ne = any
  80:	orr	x9, x8, x9
  84:	str	x9, [sp, #8]
  88:	cbz	x8, f8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xf8>
  8c:	ldrb	w9, [x21, #8]
  90:	str	x8, [x21]
  94:	str	xzr, [sp, #8]
  98:	mov	w22, #0x1                   	// #1
  9c:	orr	w8, w9, #0x3
  a0:	strb	w8, [x21, #8]
  a4:	b	100 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x100>
  a8:	and	w9, w10, #0x1
  ac:	ldrb	w10, [x21, #8]
  b0:	ldr	x11, [sp, #16]
  b4:	strb	w8, [sp, #24]
  b8:	str	xzr, [sp, #16]
  bc:	and	w10, w10, #0xfc
  c0:	orr	w9, w9, w10
  c4:	orr	w9, w9, #0x2
  c8:	str	x11, [x21]
  cc:	strb	w9, [x21, #8]
  d0:	mov	w22, #0x1                   	// #1
  d4:	b	104 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x104>
  d8:	ldrb	w10, [x21, #8]
  dc:	str	x8, [x21]
  e0:	mov	w22, #0x1                   	// #1
  e4:	and	w8, w10, #0xfc
  e8:	orr	w8, w8, #0x2
  ec:	strb	w8, [x21, #8]
  f0:	mov	w8, w9
  f4:	b	104 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x104>
  f8:	cbnz	x9, 140 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x140>
  fc:	mov	w22, wzr
 100:	ldrb	w8, [sp, #24]
 104:	tbnz	w8, #1, 138 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x138>
 108:	tbz	w8, #0, 28 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x28>
 10c:	ldr	x0, [sp, #16]
 110:	cbz	x0, 24 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x24>
 114:	ldr	x8, [x0]
 118:	ldr	x8, [x8, #8]
 11c:	blr	x8
 120:	b	24 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x24>
 124:	ldp	x20, x19, [sp, #64]
 128:	ldp	x22, x21, [sp, #48]
 12c:	ldp	x29, x30, [sp, #32]
 130:	add	sp, sp, #0x50
 134:	ret
 138:	add	x0, sp, #0x10
 13c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 140:	add	x0, sp, #0x8
 144:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE:

0000000000000000 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #8]
  10:	mov	x19, x0
  14:	tbnz	w8, #1, 98 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE+0x98>
  18:	mov	x20, x1
  1c:	cmp	x19, x1
  20:	b.eq	8c <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE+0x8c>  // b.none
  24:	tbz	w8, #0, 44 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE+0x44>
  28:	ldr	x0, [x19]
  2c:	cbz	x0, 40 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE+0x40>
  30:	ldr	x8, [x0]
  34:	ldr	x8, [x8, #8]
  38:	blr	x8
  3c:	ldrb	w8, [x19, #8]
  40:	str	xzr, [x19]
  44:	ldrb	w9, [x20, #8]
  48:	and	w8, w8, #0xfc
  4c:	bfxil	w8, w9, #0, #1
  50:	orr	w8, w8, #0x2
  54:	strb	w8, [x19, #8]
  58:	ldrb	w8, [x20, #8]
  5c:	and	w9, w8, #0xfffffffd
  60:	strb	w9, [x20, #8]
  64:	ldrb	w9, [x19, #8]
  68:	tbnz	w9, #0, 7c <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE+0x7c>
  6c:	tbnz	w8, #0, a0 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE+0xa0>
  70:	ldr	w8, [x20]
  74:	str	w8, [x19]
  78:	b	8c <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE+0x8c>
  7c:	tbz	w8, #0, c0 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE+0xc0>
  80:	ldr	x8, [x20]
  84:	str	xzr, [x20]
  88:	str	x8, [x19]
  8c:	ldp	x20, x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	ret
  98:	mov	x0, x19
  9c:	bl	0 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE>
  a0:	adrp	x0, 0 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE>
  a4:	adrp	x1, 0 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE>
  a8:	adrp	x3, 0 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE>
  ac:	add	x0, x0, #0x0
  b0:	add	x1, x1, #0x0
  b4:	add	x3, x3, #0x0
  b8:	mov	w2, #0x272                 	// #626
  bc:	bl	0 <__assert_fail>
  c0:	adrp	x0, 0 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE>
  c4:	adrp	x1, 0 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE>
  c8:	adrp	x3, 0 <_ZN4llvm8ExpectedIjE10moveAssignIjEEvONS0_IT_EE>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0x27c                 	// #636
  dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	ldp	x9, x8, [x0, #16]
  18:	sub	x9, x9, x8
  1c:	cmp	x9, #0x39
  20:	b.hi	38 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x38>  // b.pmore
  24:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  28:	add	x1, x1, #0x0
  2c:	mov	w2, #0x3a                  	// #58
  30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  34:	b	64 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x64>
  38:	adrp	x9, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  3c:	add	x9, x9, #0x0
  40:	ldur	q0, [x9, #42]
  44:	ldp	q2, q1, [x9, #16]
  48:	ldr	q3, [x9]
  4c:	stur	q0, [x8, #42]
  50:	stp	q2, q1, [x8, #16]
  54:	str	q3, [x8]
  58:	ldr	x8, [x0, #24]
  5c:	add	x8, x8, #0x3a
  60:	str	x8, [x0, #24]
  64:	ldrb	w20, [x19, #8]
  68:	bl	0 <_ZN4llvm4dbgsEv>
  6c:	ldp	x9, x8, [x0, #16]
  70:	sub	x9, x9, x8
  74:	tbnz	w20, #0, 94 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x94>
  78:	cmp	x9, #0x82
  7c:	b.hi	d4 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0xd4>  // b.pmore
  80:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  84:	add	x1, x1, #0x0
  88:	mov	w2, #0x83                  	// #131
  8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  90:	bl	0 <abort>
  94:	cmp	x9, #0x26
  98:	b.hi	118 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x118>  // b.pmore
  9c:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  a0:	add	x1, x1, #0x0
  a4:	mov	w2, #0x27                  	// #39
  a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  ac:	ldrb	w8, [x19, #8]
  b0:	tbz	w8, #0, 144 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x144>
  b4:	ldr	x19, [x19]
  b8:	bl	0 <_ZN4llvm4dbgsEv>
  bc:	ldr	x8, [x19]
  c0:	mov	x1, x0
  c4:	mov	x0, x19
  c8:	ldr	x8, [x8, #16]
  cc:	blr	x8
  d0:	bl	0 <abort>
  d4:	adrp	x9, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  d8:	add	x9, x9, #0x0
  dc:	ldp	q1, q0, [x9, #32]
  e0:	ldp	q2, q3, [x9]
  e4:	stp	q1, q0, [x8, #32]
  e8:	ldp	q0, q1, [x9, #96]
  ec:	stp	q2, q3, [x8]
  f0:	ldp	q2, q3, [x9, #64]
  f4:	mov	w9, #0x2964                	// #10596
  f8:	movk	w9, #0xa2e, lsl #16
  fc:	stur	w9, [x8, #127]
 100:	stp	q0, q1, [x8, #96]
 104:	stp	q2, q3, [x8, #64]
 108:	ldr	x8, [x0, #24]
 10c:	add	x8, x8, #0x83
 110:	str	x8, [x0, #24]
 114:	bl	0 <abort>
 118:	adrp	x9, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
 11c:	add	x9, x9, #0x0
 120:	ldur	x10, [x9, #31]
 124:	ldp	q1, q0, [x9]
 128:	stur	x10, [x8, #31]
 12c:	stp	q1, q0, [x8]
 130:	ldr	x8, [x0, #24]
 134:	add	x8, x8, #0x27
 138:	str	x8, [x0, #24]
 13c:	ldrb	w8, [x19, #8]
 140:	tbnz	w8, #0, b4 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0xb4>
 144:	adrp	x0, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
 148:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
 14c:	adrp	x3, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x281                 	// #641
 160:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor11fillCurWordEv:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv>:
   0:	sub	sp, sp, #0xb0
   4:	stp	x29, x30, [sp, #112]
   8:	str	x23, [sp, #128]
   c:	stp	x22, x21, [sp, #144]
  10:	stp	x20, x19, [sp, #160]
  14:	add	x29, sp, #0x70
  18:	ldp	x23, x21, [x0, #8]
  1c:	mov	x19, x8
  20:	subs	x9, x23, x21
  24:	b.ls	78 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x78>  // b.plast
  28:	ldr	x8, [x0]
  2c:	add	x10, x21, #0x8
  30:	cmp	x23, x10
  34:	add	x8, x8, x21
  38:	b.cs	140 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x140>  // b.hs, b.nlast
  3c:	str	xzr, [x0, #24]
  40:	cbz	w9, 14c <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x14c>
  44:	and	x12, x9, #0xffffffff
  48:	mov	x10, xzr
  4c:	mov	x11, xzr
  50:	lsl	x12, x12, #3
  54:	ldrb	w13, [x8], #1
  58:	and	x14, x10, #0xfffffff8
  5c:	add	x10, x10, #0x8
  60:	cmp	x12, x10
  64:	lsl	x13, x13, x14
  68:	orr	x11, x13, x11
  6c:	str	x11, [x0, #24]
  70:	b.ne	54 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x54>  // b.any
  74:	b	14c <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x14c>
  78:	bl	0 <_ZNSt3_V216generic_categoryEv>
  7c:	sturb	wzr, [x29, #-16]
  80:	stp	xzr, xzr, [sp, #48]
  84:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
  88:	ldr	x10, [x10]
  8c:	mov	w9, #0x1                   	// #1
  90:	str	w9, [sp, #64]
  94:	sub	x8, x29, #0x20
  98:	add	x10, x10, #0x10
  9c:	stp	x10, xzr, [sp, #32]
  a0:	adrp	x10, 0 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv>
  a4:	ldr	x10, [x10]
  a8:	adrp	x9, 0 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv>
  ac:	mov	x20, x0
  b0:	add	x9, x9, #0x0
  b4:	str	x8, [sp, #72]
  b8:	add	x22, x8, #0x10
  bc:	add	x8, x10, #0x10
  c0:	add	x0, sp, #0x20
  c4:	mov	x1, sp
  c8:	stp	x22, xzr, [x29, #-32]
  cc:	stp	x8, x9, [sp]
  d0:	stp	x23, x21, [sp, #16]
  d4:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
  d8:	ldr	x8, [sp, #56]
  dc:	ldr	x9, [sp, #40]
  e0:	cmp	x8, x9
  e4:	b.eq	f0 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0xf0>  // b.none
  e8:	add	x0, sp, #0x20
  ec:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  f0:	ldr	x23, [sp, #72]
  f4:	mov	w0, #0x40                  	// #64
  f8:	bl	0 <_Znwm>
  fc:	mov	w8, #0x104                 	// #260
 100:	mov	x1, sp
 104:	mov	w2, #0x5                   	// #5
 108:	mov	x3, x20
 10c:	mov	x21, x0
 110:	strh	w8, [sp, #16]
 114:	stp	x23, xzr, [sp]
 118:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
 11c:	orr	x8, x21, #0x1
 120:	add	x0, sp, #0x20
 124:	str	x8, [x19]
 128:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 12c:	ldur	x0, [x29, #-32]
 130:	cmp	x0, x22
 134:	b.eq	164 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x164>  // b.none
 138:	bl	0 <_ZdlPv>
 13c:	b	164 <_ZN4llvm21SimpleBitstreamCursor11fillCurWordEv+0x164>
 140:	ldr	x8, [x8]
 144:	mov	w9, #0x8                   	// #8
 148:	str	x8, [x0, #24]
 14c:	add	x8, x21, w9, uxtw
 150:	lsl	w9, w9, #3
 154:	mov	w10, #0x1                   	// #1
 158:	str	x8, [x0, #16]
 15c:	str	w9, [x0, #32]
 160:	str	x10, [x19]
 164:	ldp	x20, x19, [sp, #160]
 168:	ldp	x22, x21, [sp, #144]
 16c:	ldr	x23, [sp, #128]
 170:	ldp	x29, x30, [sp, #112]
 174:	add	sp, sp, #0xb0
 178:	ret

Disassembly of section .text._ZNK4llvm13format_objectIJmmEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJmmEE7snprintEPcj>:
   0:	ldr	x8, [x0, #8]
   4:	ldp	x4, x3, [x0, #16]
   8:	mov	w9, w2
   c:	mov	x0, x1
  10:	mov	x1, x9
  14:	mov	x2, x8
  18:	b	0 <snprintf>

Disassembly of section .text._ZNK4llvm13format_objectIJjjEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJjjEE7snprintEPcj>:
   0:	ldr	x8, [x0, #8]
   4:	ldp	w4, w3, [x0, #16]
   8:	mov	w9, w2
   c:	mov	x0, x1
  10:	mov	x1, x9
  14:	mov	x2, x8
  18:	b	0 <snprintf>

Disassembly of section .text._ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE:

0000000000000000 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #8]
  10:	mov	x19, x0
  14:	tbnz	w8, #1, 94 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE+0x94>
  18:	mov	x20, x1
  1c:	cmp	x19, x1
  20:	b.eq	88 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE+0x88>  // b.none
  24:	tbz	w8, #0, 44 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE+0x44>
  28:	ldr	x0, [x19]
  2c:	cbz	x0, 40 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE+0x40>
  30:	ldr	x8, [x0]
  34:	ldr	x8, [x8, #8]
  38:	blr	x8
  3c:	ldrb	w8, [x19, #8]
  40:	str	xzr, [x19]
  44:	ldrb	w9, [x20, #8]
  48:	and	w8, w8, #0xfc
  4c:	bfxil	w8, w9, #0, #1
  50:	orr	w8, w8, #0x2
  54:	strb	w8, [x19, #8]
  58:	ldrb	w8, [x20, #8]
  5c:	and	w9, w8, #0xfffffffd
  60:	strb	w9, [x20, #8]
  64:	ldrb	w9, [x19, #8]
  68:	tbnz	w9, #0, 78 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE+0x78>
  6c:	tbnz	w8, #0, 9c <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE+0x9c>
  70:	ldr	x8, [x20]
  74:	b	84 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE+0x84>
  78:	tbz	w8, #0, bc <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE+0xbc>
  7c:	ldr	x8, [x20]
  80:	str	xzr, [x20]
  84:	str	x8, [x19]
  88:	ldp	x20, x19, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	ret
  94:	mov	x0, x19
  98:	bl	0 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE>
  9c:	adrp	x0, 0 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE>
  a0:	adrp	x1, 0 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE>
  a4:	adrp	x3, 0 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x272                 	// #626
  b8:	bl	0 <__assert_fail>
  bc:	adrp	x0, 0 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE>
  c0:	adrp	x1, 0 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE>
  c4:	adrp	x3, 0 <_ZN4llvm8ExpectedImE10moveAssignImEEvONS0_IT_EE>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x27c                 	// #636
  d8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	ldp	x9, x8, [x0, #16]
  18:	sub	x9, x9, x8
  1c:	cmp	x9, #0x39
  20:	b.hi	38 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x38>  // b.pmore
  24:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  28:	add	x1, x1, #0x0
  2c:	mov	w2, #0x3a                  	// #58
  30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  34:	b	64 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x64>
  38:	adrp	x9, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  3c:	add	x9, x9, #0x0
  40:	ldur	q0, [x9, #42]
  44:	ldp	q2, q1, [x9, #16]
  48:	ldr	q3, [x9]
  4c:	stur	q0, [x8, #42]
  50:	stp	q2, q1, [x8, #16]
  54:	str	q3, [x8]
  58:	ldr	x8, [x0, #24]
  5c:	add	x8, x8, #0x3a
  60:	str	x8, [x0, #24]
  64:	ldrb	w20, [x19, #8]
  68:	bl	0 <_ZN4llvm4dbgsEv>
  6c:	ldp	x9, x8, [x0, #16]
  70:	sub	x9, x9, x8
  74:	tbnz	w20, #0, 94 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x94>
  78:	cmp	x9, #0x82
  7c:	b.hi	d4 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0xd4>  // b.pmore
  80:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  84:	add	x1, x1, #0x0
  88:	mov	w2, #0x83                  	// #131
  8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  90:	bl	0 <abort>
  94:	cmp	x9, #0x26
  98:	b.hi	118 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x118>  // b.pmore
  9c:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  a0:	add	x1, x1, #0x0
  a4:	mov	w2, #0x27                  	// #39
  a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  ac:	ldrb	w8, [x19, #8]
  b0:	tbz	w8, #0, 144 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x144>
  b4:	ldr	x19, [x19]
  b8:	bl	0 <_ZN4llvm4dbgsEv>
  bc:	ldr	x8, [x19]
  c0:	mov	x1, x0
  c4:	mov	x0, x19
  c8:	ldr	x8, [x8, #16]
  cc:	blr	x8
  d0:	bl	0 <abort>
  d4:	adrp	x9, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  d8:	add	x9, x9, #0x0
  dc:	ldp	q1, q0, [x9, #32]
  e0:	ldp	q2, q3, [x9]
  e4:	stp	q1, q0, [x8, #32]
  e8:	ldp	q0, q1, [x9, #96]
  ec:	stp	q2, q3, [x8]
  f0:	ldp	q2, q3, [x9, #64]
  f4:	mov	w9, #0x2964                	// #10596
  f8:	movk	w9, #0xa2e, lsl #16
  fc:	stur	w9, [x8, #127]
 100:	stp	q0, q1, [x8, #96]
 104:	stp	q2, q3, [x8, #64]
 108:	ldr	x8, [x0, #24]
 10c:	add	x8, x8, #0x83
 110:	str	x8, [x0, #24]
 114:	bl	0 <abort>
 118:	adrp	x9, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
 11c:	add	x9, x9, #0x0
 120:	ldur	x10, [x9, #31]
 124:	ldp	q1, q0, [x9]
 128:	stur	x10, [x8, #31]
 12c:	stp	q1, q0, [x8]
 130:	ldr	x8, [x0, #24]
 134:	add	x8, x8, #0x27
 138:	str	x8, [x0, #24]
 13c:	ldrb	w8, [x19, #8]
 140:	tbnz	w8, #0, b4 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0xb4>
 144:	adrp	x0, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
 148:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
 14c:	adrp	x3, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x281                 	// #641
 160:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamCursor7advanceEj:

0000000000000000 <_ZN4llvm15BitstreamCursor7advanceEj>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x28, x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	adrp	x25, 0 <__pthread_key_create>
  24:	ldr	x25, [x25]
  28:	mov	w20, w1
  2c:	mov	x21, x0
  30:	mov	x19, x8
  34:	add	x22, x0, #0x40
  38:	b	48 <_ZN4llvm15BitstreamCursor7advanceEj+0x48>
  3c:	str	xzr, [sp]
  40:	cmp	w23, #0x1
  44:	b.eq	378 <_ZN4llvm15BitstreamCursor7advanceEj+0x378>  // b.none
  48:	ldr	w8, [x21, #32]
  4c:	cbnz	w8, 5c <_ZN4llvm15BitstreamCursor7advanceEj+0x5c>
  50:	ldp	x8, x9, [x21, #8]
  54:	cmp	x8, x9
  58:	b.ls	364 <_ZN4llvm15BitstreamCursor7advanceEj+0x364>  // b.plast
  5c:	ldr	w1, [x21, #36]
  60:	add	x8, sp, #0x10
  64:	mov	x0, x21
  68:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
  6c:	ldrb	w10, [sp, #8]
  70:	ldrb	w9, [sp, #24]
  74:	ldr	x8, [sp, #16]
  78:	and	w10, w10, #0xfffffffc
  7c:	bfxil	w10, w9, #0, #1
  80:	and	w11, w9, #0xfffffffd
  84:	orr	w12, w10, #0x2
  88:	strb	w12, [sp, #8]
  8c:	strb	w11, [sp, #24]
  90:	tbnz	w9, #0, ec <_ZN4llvm15BitstreamCursor7advanceEj+0xec>
  94:	lsl	w9, w9, #1
  98:	and	w11, w9, #0x2
  9c:	orr	w10, w10, w11
  a0:	str	w8, [sp]
  a4:	strb	w10, [sp, #8]
  a8:	tbnz	w9, #1, 398 <_ZN4llvm15BitstreamCursor7advanceEj+0x398>
  ac:	cmp	w8, #0x2
  b0:	b.eq	164 <_ZN4llvm15BitstreamCursor7advanceEj+0x164>  // b.none
  b4:	cmp	w8, #0x1
  b8:	b.eq	110 <_ZN4llvm15BitstreamCursor7advanceEj+0x110>  // b.none
  bc:	cbnz	w8, 1a0 <_ZN4llvm15BitstreamCursor7advanceEj+0x1a0>
  c0:	tbnz	w20, #0, 348 <_ZN4llvm15BitstreamCursor7advanceEj+0x348>
  c4:	ldr	w8, [x21, #72]
  c8:	cbz	w8, 238 <_ZN4llvm15BitstreamCursor7advanceEj+0x238>
  cc:	ldr	w9, [x21, #32]
  d0:	subs	w9, w9, #0x20
  d4:	b.cc	248 <_ZN4llvm15BitstreamCursor7advanceEj+0x248>  // b.lo, b.ul, b.last
  d8:	ldr	x10, [x21, #24]
  dc:	lsr	x9, x10, x9
  e0:	str	x9, [x21, #24]
  e4:	mov	w9, #0x20                  	// #32
  e8:	b	24c <_ZN4llvm15BitstreamCursor7advanceEj+0x24c>
  ec:	ldrb	w9, [x19, #8]
  f0:	ands	x8, x8, #0xfffffffffffffffe
  f4:	strb	w10, [sp, #8]
  f8:	str	xzr, [sp]
  fc:	orr	w9, w9, #0x3
 100:	strb	w9, [x19, #8]
 104:	b.eq	3a0 <_ZN4llvm15BitstreamCursor7advanceEj+0x3a0>  // b.none
 108:	str	x8, [x19]
 10c:	b	1bc <_ZN4llvm15BitstreamCursor7advanceEj+0x1bc>
 110:	add	x8, sp, #0x10
 114:	mov	w1, #0x8                   	// #8
 118:	mov	x0, x21
 11c:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
 120:	ldrb	w11, [sp, #24]
 124:	ubfiz	w10, w11, #1, #1
 128:	and	w8, w11, #0xfffffffd
 12c:	orr	w9, w10, w8
 130:	strb	w9, [sp, #24]
 134:	tbnz	w11, #0, 1e4 <_ZN4llvm15BitstreamCursor7advanceEj+0x1e4>
 138:	cbnz	w10, 3c0 <_ZN4llvm15BitstreamCursor7advanceEj+0x3c0>
 13c:	ldr	w8, [sp, #16]
 140:	ldrb	w10, [x19, #8]
 144:	mov	w11, #0x2                   	// #2
 148:	bfi	x11, x8, #32, #32
 14c:	and	w8, w10, #0xfc
 150:	orr	w8, w8, #0x2
 154:	strb	w8, [x19, #8]
 158:	str	x11, [x19]
 15c:	mov	w8, w9
 160:	b	208 <_ZN4llvm15BitstreamCursor7advanceEj+0x208>
 164:	tbnz	w20, #1, 1a0 <_ZN4llvm15BitstreamCursor7advanceEj+0x1a0>
 168:	add	x8, sp, #0x10
 16c:	mov	x0, x21
 170:	bl	19c4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv>
 174:	ldr	x9, [sp, #16]
 178:	tst	x9, #0xfffffffffffffffe
 17c:	and	x8, x9, #0xfffffffffffffffe
 180:	cset	w9, ne  // ne = any
 184:	orr	x9, x8, x9
 188:	str	x9, [sp, #16]
 18c:	cbz	x8, 22c <_ZN4llvm15BitstreamCursor7advanceEj+0x22c>
 190:	ldrb	w9, [x19, #8]
 194:	str	x8, [x19]
 198:	orr	w8, w9, #0x3
 19c:	b	1b8 <_ZN4llvm15BitstreamCursor7advanceEj+0x1b8>
 1a0:	ldrb	w9, [x19, #8]
 1a4:	mov	w10, #0x3                   	// #3
 1a8:	bfi	x10, x8, #32, #32
 1ac:	str	x10, [x19]
 1b0:	and	w8, w9, #0xfc
 1b4:	orr	w8, w8, #0x2
 1b8:	strb	w8, [x19, #8]
 1bc:	mov	w23, #0x1                   	// #1
 1c0:	ldrb	w8, [sp, #8]
 1c4:	tbnz	w8, #1, 398 <_ZN4llvm15BitstreamCursor7advanceEj+0x398>
 1c8:	tbz	w8, #0, 40 <_ZN4llvm15BitstreamCursor7advanceEj+0x40>
 1cc:	ldr	x0, [sp]
 1d0:	cbz	x0, 3c <_ZN4llvm15BitstreamCursor7advanceEj+0x3c>
 1d4:	ldr	x8, [x0]
 1d8:	ldr	x8, [x8, #8]
 1dc:	blr	x8
 1e0:	b	3c <_ZN4llvm15BitstreamCursor7advanceEj+0x3c>
 1e4:	ldrb	w9, [x19, #8]
 1e8:	ldr	x10, [sp, #16]
 1ec:	strb	w8, [sp, #24]
 1f0:	str	xzr, [sp, #16]
 1f4:	orr	w11, w9, #0x3
 1f8:	ands	x9, x10, #0xfffffffffffffffe
 1fc:	strb	w11, [x19, #8]
 200:	b.eq	3a0 <_ZN4llvm15BitstreamCursor7advanceEj+0x3a0>  // b.none
 204:	str	x9, [x19]
 208:	tbnz	w8, #1, 3c0 <_ZN4llvm15BitstreamCursor7advanceEj+0x3c0>
 20c:	tbz	w8, #0, 1bc <_ZN4llvm15BitstreamCursor7advanceEj+0x1bc>
 210:	ldr	x0, [sp, #16]
 214:	cbz	x0, 224 <_ZN4llvm15BitstreamCursor7advanceEj+0x224>
 218:	ldr	x8, [x0]
 21c:	ldr	x8, [x8, #8]
 220:	blr	x8
 224:	str	xzr, [sp, #16]
 228:	b	1bc <_ZN4llvm15BitstreamCursor7advanceEj+0x1bc>
 22c:	cbnz	x9, 3c8 <_ZN4llvm15BitstreamCursor7advanceEj+0x3c8>
 230:	mov	w23, #0x2                   	// #2
 234:	b	1c0 <_ZN4llvm15BitstreamCursor7advanceEj+0x1c0>
 238:	ldrb	w8, [x19, #8]
 23c:	str	xzr, [x19]
 240:	and	w8, w8, #0xfc
 244:	b	1b4 <_ZN4llvm15BitstreamCursor7advanceEj+0x1b4>
 248:	mov	w9, wzr
 24c:	ldr	x10, [x21, #64]
 250:	str	w9, [x21, #32]
 254:	ldp	x23, x26, [x21, #40]
 258:	add	x8, x10, x8, lsl #5
 25c:	ldur	w9, [x8, #-32]
 260:	cmp	x26, x23
 264:	str	w9, [x21, #36]
 268:	ldur	q0, [x8, #-24]
 26c:	stur	q0, [x21, #40]
 270:	ldur	x9, [x8, #-8]
 274:	str	x9, [x21, #56]
 278:	stp	xzr, xzr, [x8, #-24]
 27c:	stur	xzr, [x8, #-8]
 280:	b.eq	334 <_ZN4llvm15BitstreamCursor7advanceEj+0x334>  // b.none
 284:	mov	x27, x23
 288:	b	298 <_ZN4llvm15BitstreamCursor7advanceEj+0x298>
 28c:	add	x27, x27, #0x10
 290:	cmp	x27, x26
 294:	b.eq	334 <_ZN4llvm15BitstreamCursor7advanceEj+0x334>  // b.none
 298:	ldr	x24, [x27, #8]
 29c:	cbz	x24, 28c <_ZN4llvm15BitstreamCursor7advanceEj+0x28c>
 2a0:	add	x8, x24, #0x8
 2a4:	cbz	x25, 2c4 <_ZN4llvm15BitstreamCursor7advanceEj+0x2c4>
 2a8:	ldaxr	w9, [x8]
 2ac:	sub	w10, w9, #0x1
 2b0:	stlxr	w11, w10, [x8]
 2b4:	cbnz	w11, 2a8 <_ZN4llvm15BitstreamCursor7advanceEj+0x2a8>
 2b8:	cmp	w9, #0x1
 2bc:	b.ne	28c <_ZN4llvm15BitstreamCursor7advanceEj+0x28c>  // b.any
 2c0:	b	2d8 <_ZN4llvm15BitstreamCursor7advanceEj+0x2d8>
 2c4:	ldr	w9, [x8]
 2c8:	sub	w10, w9, #0x1
 2cc:	str	w10, [x8]
 2d0:	cmp	w9, #0x1
 2d4:	b.ne	28c <_ZN4llvm15BitstreamCursor7advanceEj+0x28c>  // b.any
 2d8:	mov	x28, x24
 2dc:	ldr	x8, [x28], #12
 2e0:	mov	x0, x24
 2e4:	ldr	x8, [x8, #16]
 2e8:	blr	x8
 2ec:	cbz	x25, 30c <_ZN4llvm15BitstreamCursor7advanceEj+0x30c>
 2f0:	ldaxr	w8, [x28]
 2f4:	sub	w9, w8, #0x1
 2f8:	stlxr	w10, w9, [x28]
 2fc:	cbnz	w10, 2f0 <_ZN4llvm15BitstreamCursor7advanceEj+0x2f0>
 300:	cmp	w8, #0x1
 304:	b.ne	28c <_ZN4llvm15BitstreamCursor7advanceEj+0x28c>  // b.any
 308:	b	320 <_ZN4llvm15BitstreamCursor7advanceEj+0x320>
 30c:	ldr	w8, [x28]
 310:	sub	w9, w8, #0x1
 314:	str	w9, [x28]
 318:	cmp	w8, #0x1
 31c:	b.ne	28c <_ZN4llvm15BitstreamCursor7advanceEj+0x28c>  // b.any
 320:	ldr	x8, [x24]
 324:	mov	x0, x24
 328:	ldr	x8, [x8, #24]
 32c:	blr	x8
 330:	b	28c <_ZN4llvm15BitstreamCursor7advanceEj+0x28c>
 334:	cbz	x23, 340 <_ZN4llvm15BitstreamCursor7advanceEj+0x340>
 338:	mov	x0, x23
 33c:	bl	0 <_ZdlPv>
 340:	mov	x0, x22
 344:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
 348:	ldrb	w8, [x19, #8]
 34c:	mov	w23, #0x1                   	// #1
 350:	str	x23, [x19]
 354:	and	w8, w8, #0xfc
 358:	orr	w8, w8, #0x2
 35c:	strb	w8, [x19, #8]
 360:	b	1c0 <_ZN4llvm15BitstreamCursor7advanceEj+0x1c0>
 364:	ldrb	w8, [x19, #8]
 368:	str	xzr, [x19]
 36c:	and	w8, w8, #0xfc
 370:	orr	w8, w8, #0x2
 374:	strb	w8, [x19, #8]
 378:	ldp	x20, x19, [sp, #112]
 37c:	ldp	x22, x21, [sp, #96]
 380:	ldp	x24, x23, [sp, #80]
 384:	ldp	x26, x25, [sp, #64]
 388:	ldp	x28, x27, [sp, #48]
 38c:	ldp	x29, x30, [sp, #32]
 390:	add	sp, sp, #0x80
 394:	ret
 398:	mov	x0, sp
 39c:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
 3a0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor7advanceEj>
 3a4:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor7advanceEj>
 3a8:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor7advanceEj>
 3ac:	add	x0, x0, #0x0
 3b0:	add	x1, x1, #0x0
 3b4:	add	x3, x3, #0x0
 3b8:	mov	w2, #0x1ce                 	// #462
 3bc:	bl	0 <__assert_fail>
 3c0:	add	x0, sp, #0x10
 3c4:	bl	0 <_ZN4llvm15BitstreamCursor7advanceEj>
 3c8:	add	x0, sp, #0x10
 3cc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm15BitstreamCursor9SkipBlockEv:

0000000000000000 <_ZN4llvm15BitstreamCursor9SkipBlockEv>:
   0:	sub	sp, sp, #0xc0
   4:	stp	x29, x30, [sp, #128]
   8:	str	x23, [sp, #144]
   c:	stp	x22, x21, [sp, #160]
  10:	stp	x20, x19, [sp, #176]
  14:	add	x29, sp, #0x80
  18:	mov	x19, x8
  1c:	add	x8, sp, #0x30
  20:	mov	w1, #0x4                   	// #4
  24:	mov	x20, x0
  28:	bl	0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
  2c:	ldrb	w10, [sp, #56]
  30:	ubfiz	w9, w10, #1, #1
  34:	and	w8, w10, #0xfffffffd
  38:	orr	w11, w9, w8
  3c:	strb	w11, [sp, #56]
  40:	tbnz	w10, #0, 68 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x68>
  44:	cbnz	w9, 294 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x294>
  48:	ldr	w8, [x20, #32]
  4c:	subs	w8, w8, #0x20
  50:	b.cc	80 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x80>  // b.lo, b.ul, b.last
  54:	ldr	x9, [x20, #24]
  58:	lsr	x8, x9, x8
  5c:	str	x8, [x20, #24]
  60:	mov	w8, #0x20                  	// #32
  64:	b	84 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x84>
  68:	ldr	x9, [sp, #48]
  6c:	strb	w8, [sp, #56]
  70:	str	xzr, [sp, #48]
  74:	orr	x8, x9, #0x1
  78:	str	x8, [x19]
  7c:	b	15c <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x15c>
  80:	mov	w8, wzr
  84:	str	w8, [x20, #32]
  88:	add	x8, sp, #0x30
  8c:	mov	w1, #0x20                  	// #32
  90:	mov	x0, x20
  94:	bl	0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
  98:	ldrb	w9, [sp, #56]
  9c:	mov	w8, #0x2                   	// #2
  a0:	bfxil	w8, w9, #0, #1
  a4:	and	w10, w9, #0xfffffffd
  a8:	strb	w8, [sp, #8]
  ac:	strb	w10, [sp, #56]
  b0:	tbnz	w9, #0, c4 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0xc4>
  b4:	ldr	x8, [sp, #48]
  b8:	str	w8, [sp]
  bc:	mov	w8, #0x2                   	// #2
  c0:	b	d0 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0xd0>
  c4:	ldr	x9, [sp, #48]
  c8:	str	xzr, [sp, #48]
  cc:	str	x9, [sp]
  d0:	and	w9, w8, #0x1
  d4:	mov	w10, w9
  d8:	bfi	w10, w8, #1, #1
  dc:	strb	w10, [sp, #8]
  e0:	tbnz	w8, #0, 124 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x124>
  e4:	ubfiz	w8, w8, #1, #1
  e8:	cbnz	w8, 28c <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x28c>
  ec:	ldr	w8, [sp]
  f0:	ldr	w9, [x20, #32]
  f4:	ldp	x10, x11, [x20, #8]
  f8:	cbnz	w9, 174 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x174>
  fc:	cmp	x10, x11
 100:	b.hi	174 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x174>  // b.pmore
 104:	bl	0 <_ZNSt3_V216generic_categoryEv>
 108:	adrp	x2, 0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
 10c:	mov	x1, x0
 110:	add	x2, x2, #0x0
 114:	mov	w0, #0x54                  	// #84
 118:	mov	x8, x19
 11c:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
 120:	b	138 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x138>
 124:	ldr	x8, [sp]
 128:	strb	w9, [sp, #8]
 12c:	str	xzr, [sp]
 130:	orr	x8, x8, #0x1
 134:	str	x8, [x19]
 138:	ldrb	w8, [sp, #8]
 13c:	tbnz	w8, #1, 28c <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x28c>
 140:	tbz	w8, #0, 15c <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x15c>
 144:	ldr	x0, [sp]
 148:	cbz	x0, 158 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x158>
 14c:	ldr	x8, [x0]
 150:	ldr	x8, [x8, #8]
 154:	blr	x8
 158:	str	xzr, [sp]
 15c:	ldp	x20, x19, [sp, #176]
 160:	ldp	x22, x21, [sp, #160]
 164:	ldr	x23, [sp, #144]
 168:	ldp	x29, x30, [sp, #128]
 16c:	add	sp, sp, #0xc0
 170:	ret
 174:	lsl	x11, x11, #3
 178:	sub	x23, x11, x9
 17c:	add	x21, x23, x8, lsl #5
 180:	cmp	x10, x21, lsr #3
 184:	b.cs	250 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x250>  // b.hs, b.nlast
 188:	bl	0 <_ZNSt3_V216generic_categoryEv>
 18c:	sturb	wzr, [x29, #-16]
 190:	stp	xzr, xzr, [sp, #64]
 194:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
 198:	ldr	x10, [x10]
 19c:	mov	w9, #0x1                   	// #1
 1a0:	str	w9, [sp, #80]
 1a4:	sub	x8, x29, #0x20
 1a8:	add	x10, x10, #0x10
 1ac:	stp	x10, xzr, [sp, #48]
 1b0:	adrp	x10, 0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
 1b4:	ldr	x10, [x10]
 1b8:	adrp	x9, 0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
 1bc:	mov	x20, x0
 1c0:	add	x9, x9, #0x0
 1c4:	str	x8, [sp, #88]
 1c8:	add	x22, x8, #0x10
 1cc:	add	x8, x10, #0x10
 1d0:	add	x0, sp, #0x30
 1d4:	add	x1, sp, #0x10
 1d8:	stp	x22, xzr, [x29, #-32]
 1dc:	stp	x8, x9, [sp, #16]
 1e0:	stp	x23, x21, [sp, #32]
 1e4:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 1e8:	ldr	x8, [sp, #72]
 1ec:	ldr	x9, [sp, #56]
 1f0:	cmp	x8, x9
 1f4:	b.eq	200 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x200>  // b.none
 1f8:	add	x0, sp, #0x30
 1fc:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 200:	ldr	x23, [sp, #88]
 204:	mov	w0, #0x40                  	// #64
 208:	bl	0 <_Znwm>
 20c:	mov	w8, #0x104                 	// #260
 210:	add	x1, sp, #0x10
 214:	mov	w2, #0x54                  	// #84
 218:	mov	x3, x20
 21c:	mov	x21, x0
 220:	strh	w8, [sp, #32]
 224:	stp	x23, xzr, [sp, #16]
 228:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
 22c:	orr	x8, x21, #0x1
 230:	add	x0, sp, #0x30
 234:	str	x8, [x19]
 238:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 23c:	ldur	x0, [x29, #-32]
 240:	cmp	x0, x22
 244:	b.eq	138 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x138>  // b.none
 248:	bl	0 <_ZdlPv>
 24c:	b	138 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x138>
 250:	mov	x8, x19
 254:	mov	x0, x20
 258:	mov	x1, x21
 25c:	bl	0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
 260:	ldr	x9, [x19]
 264:	tst	x9, #0xfffffffffffffffe
 268:	and	x8, x9, #0xfffffffffffffffe
 26c:	cset	w9, ne  // ne = any
 270:	orr	x9, x8, x9
 274:	str	x9, [x19]
 278:	cbnz	x8, 280 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x280>
 27c:	cbnz	x9, 29c <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x29c>
 280:	cbnz	x8, 138 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x138>
 284:	mov	w8, #0x1                   	// #1
 288:	b	134 <_ZN4llvm15BitstreamCursor9SkipBlockEv+0x134>
 28c:	mov	x0, sp
 290:	bl	0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
 294:	add	x0, sp, #0x30
 298:	bl	0 <_ZN4llvm15BitstreamCursor9SkipBlockEv>
 29c:	mov	x0, x19
 2a0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldp	w8, w9, [x0, #8]
  18:	sub	x8, x8, #0x1
  1c:	cmp	x8, x9
  20:	b.hi	12c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x12c>  // b.pmore
  24:	ldr	x9, [x0]
  28:	str	w8, [x0, #8]
  2c:	and	x8, x8, #0xffffffff
  30:	add	x21, x9, x8, lsl #5
  34:	ldr	x19, [x21, #8]!
  38:	ldr	x22, [x21, #8]
  3c:	cmp	x19, x22
  40:	b.eq	fc <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0xfc>  // b.none
  44:	adrp	x23, 0 <__pthread_key_create>
  48:	ldr	x23, [x23]
  4c:	b	5c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x5c>
  50:	add	x19, x19, #0x10
  54:	cmp	x19, x22
  58:	b.eq	f8 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0xf8>  // b.none
  5c:	ldr	x20, [x19, #8]
  60:	cbz	x20, 50 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x50>
  64:	add	x8, x20, #0x8
  68:	cbz	x23, 88 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x88>
  6c:	ldaxr	w9, [x8]
  70:	sub	w10, w9, #0x1
  74:	stlxr	w11, w10, [x8]
  78:	cbnz	w11, 6c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x6c>
  7c:	cmp	w9, #0x1
  80:	b.ne	50 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x50>  // b.any
  84:	b	9c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x9c>
  88:	ldr	w9, [x8]
  8c:	sub	w10, w9, #0x1
  90:	str	w10, [x8]
  94:	cmp	w9, #0x1
  98:	b.ne	50 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x50>  // b.any
  9c:	mov	x24, x20
  a0:	ldr	x8, [x24], #12
  a4:	mov	x0, x20
  a8:	ldr	x8, [x8, #16]
  ac:	blr	x8
  b0:	cbz	x23, d0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0xd0>
  b4:	ldaxr	w8, [x24]
  b8:	sub	w9, w8, #0x1
  bc:	stlxr	w10, w9, [x24]
  c0:	cbnz	w10, b4 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0xb4>
  c4:	cmp	w8, #0x1
  c8:	b.ne	50 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x50>  // b.any
  cc:	b	e4 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0xe4>
  d0:	ldr	w8, [x24]
  d4:	sub	w9, w8, #0x1
  d8:	str	w9, [x24]
  dc:	cmp	w8, #0x1
  e0:	b.ne	50 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x50>  // b.any
  e4:	ldr	x8, [x20]
  e8:	mov	x0, x20
  ec:	ldr	x8, [x8, #24]
  f0:	blr	x8
  f4:	b	50 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x50>
  f8:	ldr	x19, [x21]
  fc:	cbz	x19, 118 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv+0x118>
 100:	mov	x0, x19
 104:	ldp	x20, x19, [sp, #48]
 108:	ldp	x22, x21, [sp, #32]
 10c:	ldp	x24, x23, [sp, #16]
 110:	ldp	x29, x30, [sp], #64
 114:	b	0 <_ZdlPv>
 118:	ldp	x20, x19, [sp, #48]
 11c:	ldp	x22, x21, [sp, #32]
 120:	ldp	x24, x23, [sp, #16]
 124:	ldp	x29, x30, [sp], #64
 128:	ret
 12c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv>
 130:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv>
 134:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE8pop_backEv>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x43                  	// #67
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldp	x20, x23, [x0]
  20:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  24:	sub	x8, x23, x20
  28:	cmp	x8, x9
  2c:	b.eq	26c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x26c>  // b.none
  30:	mov	x10, #0x8ba3                	// #35747
  34:	movk	x10, #0xba2e, lsl #16
  38:	movk	x10, #0xa2e8, lsl #32
  3c:	asr	x9, x8, #3
  40:	movk	x10, #0x2e8b, lsl #48
  44:	cmp	x8, #0x0
  48:	mov	x8, #0x745d                	// #29789
  4c:	movk	x8, #0x45d1, lsl #16
  50:	mul	x9, x9, x10
  54:	movk	x8, #0x5d17, lsl #32
  58:	csinc	x11, x9, xzr, ne  // ne = any
  5c:	movk	x8, #0x174, lsl #48
  60:	adds	x9, x11, x9
  64:	cset	w11, cs  // cs = hs, nlast
  68:	cmp	x9, x8
  6c:	cset	w12, hi  // hi = pmore
  70:	orr	w11, w11, w12
  74:	sub	x12, x1, x20
  78:	cmp	w11, #0x0
  7c:	csel	x24, x8, x9, ne  // ne = any
  80:	asr	x8, x12, #3
  84:	mov	x19, x0
  88:	mov	x22, x1
  8c:	mul	x25, x8, x10
  90:	cbz	x24, a8 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xa8>
  94:	mov	w8, #0x58                  	// #88
  98:	mul	x0, x24, x8
  9c:	bl	0 <_Znwm>
  a0:	mov	x21, x0
  a4:	b	ac <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xac>
  a8:	mov	x21, xzr
  ac:	mov	w8, #0x58                  	// #88
  b0:	madd	x8, x25, x8, x21
  b4:	movi	v0.2d, #0x0
  b8:	mov	x9, x8
  bc:	stp	q0, q0, [x8, #16]
  c0:	str	q0, [x9, #48]!
  c4:	cmp	x20, x22
  c8:	str	q0, [x8]
  cc:	stp	x9, xzr, [x8, #32]
  d0:	strb	wzr, [x9]
  d4:	stp	xzr, xzr, [x8, #72]
  d8:	str	xzr, [x8, #64]
  dc:	mov	x8, x21
  e0:	b.eq	188 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x188>  // b.none
  e4:	mov	x9, x21
  e8:	mov	x8, x20
  ec:	b	13c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x13c>
  f0:	str	x9, [x25, #32]
  f4:	ldr	x8, [x8, #48]
  f8:	str	x8, [x25, #48]
  fc:	ldur	x8, [x27, #-8]
 100:	sub	x0, x27, #0x30
 104:	str	x8, [x25, #40]
 108:	ldr	q0, [x27, #16]
 10c:	stp	x27, xzr, [x27, #-16]
 110:	strb	wzr, [x27]
 114:	str	q0, [x25, #64]
 118:	ldr	x8, [x27, #32]
 11c:	str	x8, [x25, #80]
 120:	stp	xzr, xzr, [x27, #16]
 124:	str	xzr, [x27, #32]
 128:	bl	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 12c:	add	x8, x27, #0x28
 130:	cmp	x8, x22
 134:	add	x9, x26, #0x28
 138:	b.eq	184 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x184>  // b.none
 13c:	ldr	w10, [x8]
 140:	mov	x25, x9
 144:	add	x26, x25, #0x30
 148:	add	x27, x8, #0x30
 14c:	str	w10, [x9]
 150:	ldur	q0, [x8, #8]
 154:	stur	q0, [x9, #8]
 158:	ldr	x9, [x8, #24]
 15c:	str	x9, [x25, #24]
 160:	stp	xzr, xzr, [x8, #8]
 164:	str	xzr, [x8, #24]
 168:	str	x26, [x25, #32]
 16c:	ldr	x9, [x8, #32]
 170:	cmp	x9, x27
 174:	b.ne	f0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xf0>  // b.any
 178:	ldr	q0, [x9]
 17c:	str	q0, [x25, #48]
 180:	b	fc <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xfc>
 184:	add	x8, x25, #0x58
 188:	cmp	x23, x22
 18c:	add	x26, x8, #0x58
 190:	b.ne	218 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x218>  // b.any
 194:	cbz	x20, 1a0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1a0>
 198:	mov	x0, x20
 19c:	bl	0 <_ZdlPv>
 1a0:	mov	w8, #0x58                  	// #88
 1a4:	madd	x8, x24, x8, x21
 1a8:	stp	x21, x26, [x19]
 1ac:	str	x8, [x19, #16]
 1b0:	ldp	x20, x19, [sp, #80]
 1b4:	ldp	x22, x21, [sp, #64]
 1b8:	ldp	x24, x23, [sp, #48]
 1bc:	ldp	x26, x25, [sp, #32]
 1c0:	ldr	x27, [sp, #16]
 1c4:	ldp	x29, x30, [sp], #96
 1c8:	ret
 1cc:	str	x8, [x25, #32]
 1d0:	ldr	x8, [x22, #48]
 1d4:	str	x8, [x25, #48]
 1d8:	ldur	x8, [x27, #-8]
 1dc:	sub	x0, x27, #0x30
 1e0:	str	x8, [x25, #40]
 1e4:	ldr	q0, [x27, #16]
 1e8:	stp	x27, xzr, [x27, #-16]
 1ec:	strb	wzr, [x27]
 1f0:	str	q0, [x25, #64]
 1f4:	ldr	x8, [x27, #32]
 1f8:	str	x8, [x25, #80]
 1fc:	stp	xzr, xzr, [x27, #16]
 200:	str	xzr, [x27, #32]
 204:	bl	0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 208:	add	x22, x27, #0x28
 20c:	cmp	x22, x23
 210:	add	x26, x26, #0x28
 214:	b.eq	260 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x260>  // b.none
 218:	ldr	w8, [x22]
 21c:	mov	x25, x26
 220:	add	x27, x22, #0x30
 224:	str	w8, [x26]
 228:	ldur	q0, [x22, #8]
 22c:	stur	q0, [x26, #8]
 230:	ldr	x8, [x22, #24]
 234:	add	x26, x26, #0x30
 238:	str	x8, [x25, #24]
 23c:	stp	xzr, xzr, [x22, #8]
 240:	str	xzr, [x22, #24]
 244:	str	x26, [x25, #32]
 248:	ldr	x8, [x22, #32]
 24c:	cmp	x8, x27
 250:	b.ne	1cc <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1cc>  // b.any
 254:	ldr	q0, [x8]
 258:	str	q0, [x25, #48]
 25c:	b	1d8 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1d8>
 260:	add	x26, x25, #0x58
 264:	cbnz	x20, 198 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x198>
 268:	b	1a0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1a0>
 26c:	adrp	x0, 0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 270:	add	x0, x0, #0x0
 274:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev:

0000000000000000 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldp	x20, x21, [x0, #64]
  18:	mov	x19, x0
  1c:	cmp	x20, x21
  20:	b.ne	68 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x68>  // b.any
  24:	cbz	x20, 30 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x30>
  28:	mov	x0, x20
  2c:	bl	0 <_ZdlPv>
  30:	ldr	x0, [x19, #32]
  34:	add	x8, x19, #0x30
  38:	cmp	x0, x8
  3c:	b.eq	44 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x44>  // b.none
  40:	bl	0 <_ZdlPv>
  44:	ldp	x20, x22, [x19, #8]
  48:	cmp	x20, x22
  4c:	b.eq	138 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x138>  // b.none
  50:	adrp	x23, 0 <__pthread_key_create>
  54:	ldr	x23, [x23]
  58:	b	8c <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x8c>
  5c:	add	x20, x20, #0x28
  60:	cmp	x21, x20
  64:	b.eq	128 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x128>  // b.none
  68:	ldr	x0, [x20, #8]
  6c:	add	x8, x20, #0x18
  70:	cmp	x8, x0
  74:	b.eq	5c <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x5c>  // b.none
  78:	bl	0 <_ZdlPv>
  7c:	b	5c <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x5c>
  80:	add	x20, x20, #0x10
  84:	cmp	x20, x22
  88:	b.eq	134 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x134>  // b.none
  8c:	ldr	x21, [x20, #8]
  90:	cbz	x21, 80 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x80>
  94:	add	x8, x21, #0x8
  98:	cbz	x23, b8 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0xb8>
  9c:	ldaxr	w9, [x8]
  a0:	sub	w10, w9, #0x1
  a4:	stlxr	w11, w10, [x8]
  a8:	cbnz	w11, 9c <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x9c>
  ac:	cmp	w9, #0x1
  b0:	b.ne	80 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x80>  // b.any
  b4:	b	cc <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0xcc>
  b8:	ldr	w9, [x8]
  bc:	sub	w10, w9, #0x1
  c0:	str	w10, [x8]
  c4:	cmp	w9, #0x1
  c8:	b.ne	80 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x80>  // b.any
  cc:	mov	x24, x21
  d0:	ldr	x8, [x24], #12
  d4:	mov	x0, x21
  d8:	ldr	x8, [x8, #16]
  dc:	blr	x8
  e0:	cbz	x23, 100 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x100>
  e4:	ldaxr	w8, [x24]
  e8:	sub	w9, w8, #0x1
  ec:	stlxr	w10, w9, [x24]
  f0:	cbnz	w10, e4 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0xe4>
  f4:	cmp	w8, #0x1
  f8:	b.ne	80 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x80>  // b.any
  fc:	b	114 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x114>
 100:	ldr	w8, [x24]
 104:	sub	w9, w8, #0x1
 108:	str	w9, [x24]
 10c:	cmp	w8, #0x1
 110:	b.ne	80 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x80>  // b.any
 114:	ldr	x8, [x21]
 118:	mov	x0, x21
 11c:	ldr	x8, [x8, #24]
 120:	blr	x8
 124:	b	80 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x80>
 128:	ldr	x20, [x19, #64]
 12c:	cbnz	x20, 28 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x28>
 130:	b	30 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x30>
 134:	ldr	x20, [x19, #8]
 138:	cbz	x20, 154 <_ZN4llvm18BitstreamBlockInfo9BlockInfoD2Ev+0x154>
 13c:	mov	x0, x20
 140:	ldp	x20, x19, [sp, #48]
 144:	ldp	x22, x21, [sp, #32]
 148:	ldp	x24, x23, [sp, #16]
 14c:	ldp	x29, x30, [sp], #64
 150:	b	0 <_ZdlPv>
 154:	ldp	x20, x19, [sp, #48]
 158:	ldp	x22, x21, [sp, #32]
 15c:	ldp	x24, x23, [sp, #16]
 160:	ldp	x29, x30, [sp], #64
 164:	ret

Disassembly of section .text._ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	ldp	x9, x8, [x0, #16]
  18:	sub	x9, x9, x8
  1c:	cmp	x9, #0x39
  20:	b.hi	38 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x38>  // b.pmore
  24:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  28:	add	x1, x1, #0x0
  2c:	mov	w2, #0x3a                  	// #58
  30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  34:	b	64 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x64>
  38:	adrp	x9, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  3c:	add	x9, x9, #0x0
  40:	ldur	q0, [x9, #42]
  44:	ldp	q2, q1, [x9, #16]
  48:	ldr	q3, [x9]
  4c:	stur	q0, [x8, #42]
  50:	stp	q2, q1, [x8, #16]
  54:	str	q3, [x8]
  58:	ldr	x8, [x0, #24]
  5c:	add	x8, x8, #0x3a
  60:	str	x8, [x0, #24]
  64:	ldrb	w20, [x19, #8]
  68:	bl	0 <_ZN4llvm4dbgsEv>
  6c:	ldp	x9, x8, [x0, #16]
  70:	sub	x9, x9, x8
  74:	tbnz	w20, #0, 94 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x94>
  78:	cmp	x9, #0x82
  7c:	b.hi	d4 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0xd4>  // b.pmore
  80:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  84:	add	x1, x1, #0x0
  88:	mov	w2, #0x83                  	// #131
  8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  90:	bl	0 <abort>
  94:	cmp	x9, #0x26
  98:	b.hi	118 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x118>  // b.pmore
  9c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  a0:	add	x1, x1, #0x0
  a4:	mov	w2, #0x27                  	// #39
  a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  ac:	ldrb	w8, [x19, #8]
  b0:	tbz	w8, #0, 144 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x144>
  b4:	ldr	x19, [x19]
  b8:	bl	0 <_ZN4llvm4dbgsEv>
  bc:	ldr	x8, [x19]
  c0:	mov	x1, x0
  c4:	mov	x0, x19
  c8:	ldr	x8, [x8, #16]
  cc:	blr	x8
  d0:	bl	0 <abort>
  d4:	adrp	x9, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  d8:	add	x9, x9, #0x0
  dc:	ldp	q1, q0, [x9, #32]
  e0:	ldp	q2, q3, [x9]
  e4:	stp	q1, q0, [x8, #32]
  e8:	ldp	q0, q1, [x9, #96]
  ec:	stp	q2, q3, [x8]
  f0:	ldp	q2, q3, [x9, #64]
  f4:	mov	w9, #0x2964                	// #10596
  f8:	movk	w9, #0xa2e, lsl #16
  fc:	stur	w9, [x8, #127]
 100:	stp	q0, q1, [x8, #96]
 104:	stp	q2, q3, [x8, #64]
 108:	ldr	x8, [x0, #24]
 10c:	add	x8, x8, #0x83
 110:	str	x8, [x0, #24]
 114:	bl	0 <abort>
 118:	adrp	x9, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
 11c:	add	x9, x9, #0x0
 120:	ldur	x10, [x9, #31]
 124:	ldp	q1, q0, [x9]
 128:	stur	x10, [x8, #31]
 12c:	stp	q1, q0, [x8]
 130:	ldr	x8, [x0, #24]
 134:	add	x8, x8, #0x27
 138:	str	x8, [x0, #24]
 13c:	ldrb	w8, [x19, #8]
 140:	tbnz	w8, #0, b4 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0xb4>
 144:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
 148:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
 14c:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x281                 	// #641
 160:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	mov	x20, x1
  20:	lsr	x8, x1, #32
  24:	mov	x19, x0
  28:	cbz	x8, 3c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x3c>
  2c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>
  30:	add	x0, x0, #0x0
  34:	mov	w1, #0x1                   	// #1
  38:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  3c:	ldr	w8, [x19, #12]
  40:	add	x8, x8, #0x2
  44:	orr	x8, x8, x8, lsr #1
  48:	orr	x8, x8, x8, lsr #2
  4c:	orr	x8, x8, x8, lsr #4
  50:	orr	x8, x8, x8, lsr #8
  54:	orr	x8, x8, x8, lsr #16
  58:	orr	x8, x8, x8, lsr #32
  5c:	add	x9, x8, #0x1
  60:	cmp	x9, x20
  64:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  68:	mov	w9, #0xffffffff            	// #-1
  6c:	cmp	x8, x9
  70:	csel	x24, x8, x9, cc  // cc = lo, ul, last
  74:	lsl	x0, x24, #5
  78:	bl	0 <malloc>
  7c:	mov	x20, x0
  80:	cbnz	x0, c0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0xc0>
  84:	cbz	x24, a0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0xa0>
  88:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>
  8c:	add	x0, x0, #0x0
  90:	mov	w1, #0x1                   	// #1
  94:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  98:	mov	x20, xzr
  9c:	b	c0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0xc0>
  a0:	mov	w0, #0x1                   	// #1
  a4:	bl	0 <malloc>
  a8:	mov	x20, x0
  ac:	cbnz	x0, c0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0xc0>
  b0:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm>
  b4:	add	x0, x0, #0x0
  b8:	mov	w1, #0x1                   	// #1
  bc:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  c0:	ldr	w8, [x19, #8]
  c4:	ldr	x21, [x19]
  c8:	cbz	w8, 204 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x204>
  cc:	add	x8, x21, x8, lsl #5
  d0:	mov	x9, x20
  d4:	ldr	w10, [x21]
  d8:	str	w10, [x9]
  dc:	ldur	q0, [x21, #8]
  e0:	stur	q0, [x9, #8]
  e4:	ldr	x10, [x21, #24]
  e8:	str	x10, [x9, #24]
  ec:	stp	xzr, xzr, [x21, #8]
  f0:	str	xzr, [x21, #24]
  f4:	add	x21, x21, #0x20
  f8:	cmp	x21, x8
  fc:	add	x9, x9, #0x20
 100:	b.ne	d4 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0xd4>  // b.any
 104:	ldr	w8, [x19, #8]
 108:	ldr	x21, [x19]
 10c:	cbz	w8, 204 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x204>
 110:	adrp	x26, 0 <__pthread_key_create>
 114:	ldr	x26, [x26]
 118:	add	x25, x21, x8, lsl #5
 11c:	b	128 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x128>
 120:	cmp	x25, x21
 124:	b.eq	200 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x200>  // b.none
 128:	ldp	x22, x27, [x25, #-24]
 12c:	cmp	x22, x27
 130:	b.ne	14c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x14c>  // b.any
 134:	sub	x25, x25, #0x20
 138:	cbnz	x22, 1f4 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1f4>
 13c:	b	120 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x120>
 140:	add	x22, x22, #0x10
 144:	cmp	x22, x27
 148:	b.eq	1e8 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1e8>  // b.none
 14c:	ldr	x23, [x22, #8]
 150:	cbz	x23, 140 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x140>
 154:	add	x8, x23, #0x8
 158:	cbz	x26, 178 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x178>
 15c:	ldaxr	w9, [x8]
 160:	sub	w10, w9, #0x1
 164:	stlxr	w11, w10, [x8]
 168:	cbnz	w11, 15c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x15c>
 16c:	cmp	w9, #0x1
 170:	b.ne	140 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x140>  // b.any
 174:	b	18c <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x18c>
 178:	ldr	w9, [x8]
 17c:	sub	w10, w9, #0x1
 180:	str	w10, [x8]
 184:	cmp	w9, #0x1
 188:	b.ne	140 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x140>  // b.any
 18c:	mov	x28, x23
 190:	ldr	x8, [x28], #12
 194:	mov	x0, x23
 198:	ldr	x8, [x8, #16]
 19c:	blr	x8
 1a0:	cbz	x26, 1c0 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1c0>
 1a4:	ldaxr	w8, [x28]
 1a8:	sub	w9, w8, #0x1
 1ac:	stlxr	w10, w9, [x28]
 1b0:	cbnz	w10, 1a4 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1a4>
 1b4:	cmp	w8, #0x1
 1b8:	b.ne	140 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x140>  // b.any
 1bc:	b	1d4 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x1d4>
 1c0:	ldr	w8, [x28]
 1c4:	sub	w9, w8, #0x1
 1c8:	str	w9, [x28]
 1cc:	cmp	w8, #0x1
 1d0:	b.ne	140 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x140>  // b.any
 1d4:	ldr	x8, [x23]
 1d8:	mov	x0, x23
 1dc:	ldr	x8, [x8, #24]
 1e0:	blr	x8
 1e4:	b	140 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x140>
 1e8:	ldur	x22, [x25, #-24]
 1ec:	sub	x25, x25, #0x20
 1f0:	cbz	x22, 120 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x120>
 1f4:	mov	x0, x22
 1f8:	bl	0 <_ZdlPv>
 1fc:	b	120 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x120>
 200:	ldr	x21, [x19]
 204:	add	x8, x19, #0x10
 208:	cmp	x21, x8
 20c:	b.eq	218 <_ZN4llvm23SmallVectorTemplateBaseINS_15BitstreamCursor5BlockELb0EE4growEm+0x218>  // b.none
 210:	mov	x0, x21
 214:	bl	0 <free>
 218:	str	x20, [x19]
 21c:	str	w24, [x19, #12]
 220:	ldp	x20, x19, [sp, #80]
 224:	ldp	x22, x21, [sp, #64]
 228:	ldp	x24, x23, [sp, #48]
 22c:	ldp	x26, x25, [sp, #32]
 230:	ldp	x28, x27, [sp, #16]
 234:	ldp	x29, x30, [sp], #96
 238:	ret

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	cmp	x2, x3
  20:	b.eq	358 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x358>  // b.none
  24:	ldp	x22, x9, [x0, #8]
  28:	sub	x24, x3, x2
  2c:	asr	x8, x24, #4
  30:	mov	x23, x3
  34:	sub	x9, x9, x22
  38:	mov	x20, x2
  3c:	mov	x19, x1
  40:	mov	x21, x0
  44:	cmp	x8, x9, asr #4
  48:	b.ls	a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xa8>  // b.plast
  4c:	ldr	x9, [x21]
  50:	sub	x10, x22, x9
  54:	asr	x11, x10, #4
  58:	mov	x10, #0x7ffffffffffffff     	// #576460752303423487
  5c:	sub	x12, x10, x11
  60:	cmp	x12, x8
  64:	b.cc	790 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x790>  // b.lo, b.ul, b.last
  68:	cmp	x11, x8
  6c:	csel	x8, x8, x11, cc  // cc = lo, ul, last
  70:	adds	x8, x8, x11
  74:	lsr	x12, x8, #59
  78:	cset	w11, cs  // cs = hs, nlast
  7c:	cmp	x12, #0x0
  80:	cset	w12, ne  // ne = any
  84:	orr	w11, w11, w12
  88:	cmp	w11, #0x0
  8c:	csel	x24, x10, x8, ne  // ne = any
  90:	cbz	x24, 26c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x26c>
  94:	lsl	x0, x24, #4
  98:	bl	0 <_Znwm>
  9c:	ldr	x9, [x21]
  a0:	mov	x22, x0
  a4:	b	270 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x270>
  a8:	sub	x9, x22, x19
  ac:	asr	x9, x9, #4
  b0:	subs	x10, x8, x9
  b4:	b.cs	200 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x200>  // b.hs, b.nlast
  b8:	sub	x23, x22, x8, lsl #4
  bc:	cbz	x24, 5a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5a4>
  c0:	sub	x10, x24, #0x10
  c4:	lsr	x9, x10, #4
  c8:	cbz	x9, 578 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x578>
  cc:	add	x11, x22, #0x8
  d0:	and	x10, x10, #0xfffffffffffffff0
  d4:	mvn	x11, x11
  d8:	cmp	x10, x11
  dc:	b.hi	578 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x578>  // b.pmore
  e0:	neg	x12, x8
  e4:	add	x11, x22, x12, lsl #4
  e8:	add	x11, x11, #0x8
  ec:	mvn	x11, x11
  f0:	cmp	x10, x11
  f4:	mov	x11, x22
  f8:	mov	x10, x23
  fc:	b.hi	580 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x580>  // b.pmore
 100:	add	x10, x22, x9, lsl #4
 104:	sub	x11, x9, x8
 108:	add	x18, x10, #0x8
 10c:	add	x10, x22, x11, lsl #4
 110:	add	x12, x22, x12, lsl #4
 114:	add	x13, x9, #0x1
 118:	cmp	x22, x10
 11c:	add	x0, x12, #0x8
 120:	sub	x11, x13, x8
 124:	add	x1, x22, x13, lsl #4
 128:	add	x12, x10, #0x8
 12c:	cset	w13, cc  // cc = lo, ul, last
 130:	cmp	x23, x18
 134:	add	x15, x22, x11, lsl #4
 138:	cset	w11, cc  // cc = lo, ul, last
 13c:	cmp	x22, x12
 140:	and	w2, w13, w11
 144:	cset	w13, cc  // cc = lo, ul, last
 148:	cmp	x23, x12
 14c:	add	x17, x22, #0x8
 150:	cset	w12, cc  // cc = lo, ul, last
 154:	cmp	x23, x10
 158:	cset	w14, cc  // cc = lo, ul, last
 15c:	cmp	x17, x15
 160:	cset	w10, cc  // cc = lo, ul, last
 164:	cmp	x0, x18
 168:	cset	w16, cc  // cc = lo, ul, last
 16c:	cmp	x17, x1
 170:	cset	w15, cc  // cc = lo, ul, last
 174:	cmp	x17, x18
 178:	cset	w18, cc  // cc = lo, ul, last
 17c:	cmp	x0, x1
 180:	cset	w17, cc  // cc = lo, ul, last
 184:	tbnz	w2, #0, 578 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x578>
 188:	and	w11, w13, w11
 18c:	tbnz	w11, #0, 578 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x578>
 190:	and	w11, w12, w14
 194:	tbnz	w11, #0, 578 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x578>
 198:	and	w11, w10, w16
 19c:	tbnz	w11, #0, 578 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x578>
 1a0:	and	w11, w15, w18
 1a4:	tbnz	w11, #0, 578 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x578>
 1a8:	and	w12, w17, w10
 1ac:	mov	x11, x22
 1b0:	mov	x10, x23
 1b4:	tbnz	w12, #0, 580 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x580>
 1b8:	add	x9, x9, #0x1
 1bc:	and	x12, x9, #0x1ffffffffffffffe
 1c0:	lsl	x10, x12, #4
 1c4:	neg	x13, x8, lsl #4
 1c8:	add	x11, x22, x10
 1cc:	add	x10, x23, x10
 1d0:	movi	v0.2d, #0x0
 1d4:	mov	x14, x12
 1d8:	mov	x15, x22
 1dc:	add	x16, x15, x13
 1e0:	ldp	q2, q1, [x16]
 1e4:	subs	x14, x14, #0x2
 1e8:	stp	q2, q1, [x15], #32
 1ec:	stp	q0, q0, [x16]
 1f0:	b.ne	1dc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1dc>  // b.any
 1f4:	cmp	x9, x12
 1f8:	b.ne	580 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x580>  // b.any
 1fc:	b	5a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5a4>
 200:	adrp	x24, 0 <__pthread_key_create>
 204:	ldr	x24, [x24]
 208:	add	x9, x20, x9, lsl #4
 20c:	cmp	x9, x23
 210:	mov	x11, x22
 214:	b.eq	42c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x42c>  // b.none
 218:	mov	x12, x9
 21c:	b	23c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x23c>
 220:	ldr	w14, [x13]
 224:	add	w14, w14, #0x1
 228:	str	w14, [x13]
 22c:	add	x12, x12, #0x10
 230:	cmp	x12, x23
 234:	add	x11, x11, #0x10
 238:	b.eq	428 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x428>  // b.none
 23c:	ldr	x13, [x12]
 240:	str	x13, [x11]
 244:	ldr	x13, [x12, #8]
 248:	str	x13, [x11, #8]
 24c:	cbz	x13, 22c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x22c>
 250:	add	x13, x13, #0x8
 254:	cbz	x24, 220 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x220>
 258:	ldaxr	w14, [x13]
 25c:	add	w14, w14, #0x1
 260:	stlxr	w15, w14, [x13]
 264:	cbnz	w15, 258 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x258>
 268:	b	22c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x22c>
 26c:	mov	x22, xzr
 270:	cmp	x9, x19
 274:	mov	x25, x22
 278:	b.eq	29c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x29c>  // b.none
 27c:	mov	x25, x22
 280:	str	xzr, [x25, #8]
 284:	ldr	q0, [x9]
 288:	str	xzr, [x9, #8]
 28c:	str	q0, [x25], #16
 290:	str	xzr, [x9], #16
 294:	cmp	x9, x19
 298:	b.ne	280 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x280>  // b.any
 29c:	adrp	x26, 0 <__pthread_key_create>
 2a0:	ldr	x26, [x26]
 2a4:	b	2c4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2c4>
 2a8:	ldr	w9, [x8]
 2ac:	add	w9, w9, #0x1
 2b0:	str	w9, [x8]
 2b4:	add	x20, x20, #0x10
 2b8:	cmp	x20, x23
 2bc:	add	x25, x25, #0x10
 2c0:	b.eq	2f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2f4>  // b.none
 2c4:	ldr	x8, [x20]
 2c8:	str	x8, [x25]
 2cc:	ldr	x8, [x20, #8]
 2d0:	str	x8, [x25, #8]
 2d4:	cbz	x8, 2b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2b4>
 2d8:	add	x8, x8, #0x8
 2dc:	cbz	x26, 2a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2a8>
 2e0:	ldaxr	w9, [x8]
 2e4:	add	w9, w9, #0x1
 2e8:	stlxr	w10, w9, [x8]
 2ec:	cbnz	w10, 2e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2e0>
 2f0:	b	2b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2b4>
 2f4:	ldr	x20, [x21, #8]
 2f8:	cmp	x20, x19
 2fc:	b.eq	334 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x334>  // b.none
 300:	mov	x8, xzr
 304:	add	x9, x25, x8
 308:	add	x10, x19, x8
 30c:	str	xzr, [x9, #8]
 310:	ldr	q0, [x10]
 314:	add	x11, x10, #0x10
 318:	cmp	x11, x20
 31c:	add	x8, x8, #0x10
 320:	str	xzr, [x10, #8]
 324:	str	q0, [x9]
 328:	str	xzr, [x10]
 32c:	b.ne	304 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x304>  // b.any
 330:	add	x25, x25, x8
 334:	ldr	x23, [x21]
 338:	cmp	x23, x20
 33c:	b.ne	380 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x380>  // b.any
 340:	cbz	x20, 34c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x34c>
 344:	mov	x0, x20
 348:	bl	0 <_ZdlPv>
 34c:	add	x8, x22, x24, lsl #4
 350:	stp	x22, x25, [x21]
 354:	str	x8, [x21, #16]
 358:	ldp	x20, x19, [sp, #80]
 35c:	ldp	x22, x21, [sp, #64]
 360:	ldp	x24, x23, [sp, #48]
 364:	ldp	x26, x25, [sp, #32]
 368:	ldr	x27, [sp, #16]
 36c:	ldp	x29, x30, [sp], #96
 370:	ret
 374:	add	x23, x23, #0x10
 378:	cmp	x23, x20
 37c:	b.eq	41c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x41c>  // b.none
 380:	ldr	x19, [x23, #8]
 384:	cbz	x19, 374 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x374>
 388:	add	x8, x19, #0x8
 38c:	cbz	x26, 3ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3ac>
 390:	ldaxr	w9, [x8]
 394:	sub	w10, w9, #0x1
 398:	stlxr	w11, w10, [x8]
 39c:	cbnz	w11, 390 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x390>
 3a0:	cmp	w9, #0x1
 3a4:	b.ne	374 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x374>  // b.any
 3a8:	b	3c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3c0>
 3ac:	ldr	w9, [x8]
 3b0:	sub	w10, w9, #0x1
 3b4:	str	w10, [x8]
 3b8:	cmp	w9, #0x1
 3bc:	b.ne	374 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x374>  // b.any
 3c0:	mov	x27, x19
 3c4:	ldr	x8, [x27], #12
 3c8:	mov	x0, x19
 3cc:	ldr	x8, [x8, #16]
 3d0:	blr	x8
 3d4:	cbz	x26, 3f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3f4>
 3d8:	ldaxr	w8, [x27]
 3dc:	sub	w9, w8, #0x1
 3e0:	stlxr	w10, w9, [x27]
 3e4:	cbnz	w10, 3d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3d8>
 3e8:	cmp	w8, #0x1
 3ec:	b.ne	374 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x374>  // b.any
 3f0:	b	408 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x408>
 3f4:	ldr	w8, [x27]
 3f8:	sub	w9, w8, #0x1
 3fc:	str	w9, [x27]
 400:	cmp	w8, #0x1
 404:	b.ne	374 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x374>  // b.any
 408:	ldr	x8, [x19]
 40c:	mov	x0, x19
 410:	ldr	x8, [x8, #24]
 414:	blr	x8
 418:	b	374 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x374>
 41c:	ldr	x20, [x21]
 420:	cbnz	x20, 344 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x344>
 424:	b	34c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x34c>
 428:	ldr	x11, [x21, #8]
 42c:	add	x10, x11, x10, lsl #4
 430:	cmp	x22, x19
 434:	str	x10, [x21, #8]
 438:	b.eq	464 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x464>  // b.none
 43c:	add	x10, x10, #0x8
 440:	mov	x12, x19
 444:	str	xzr, [x10]
 448:	ldr	q0, [x12]
 44c:	str	xzr, [x12, #8]
 450:	stur	q0, [x10, #-8]
 454:	str	xzr, [x12], #16
 458:	cmp	x12, x22
 45c:	add	x10, x10, #0x10
 460:	b.ne	444 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x444>  // b.any
 464:	add	x10, x11, x8, lsl #4
 468:	sub	x8, x9, x20
 46c:	cmp	x8, #0x1
 470:	str	x10, [x21, #8]
 474:	b.lt	358 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x358>  // b.tstop
 478:	lsr	x22, x8, #4
 47c:	b	494 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x494>
 480:	str	x23, [x19, #8]
 484:	add	x20, x20, #0x10
 488:	subs	x22, x22, #0x1
 48c:	add	x19, x19, #0x10
 490:	b.le	358 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x358>
 494:	ldr	x8, [x20]
 498:	ldr	x21, [x19, #8]
 49c:	str	x8, [x19]
 4a0:	ldr	x23, [x20, #8]
 4a4:	cmp	x23, x21
 4a8:	b.eq	484 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x484>  // b.none
 4ac:	cbz	x23, 4cc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4cc>
 4b0:	add	x8, x23, #0x8
 4b4:	cbz	x24, 4d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4d4>
 4b8:	ldaxr	w9, [x8]
 4bc:	add	w9, w9, #0x1
 4c0:	stlxr	w10, w9, [x8]
 4c4:	cbnz	w10, 4b8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4b8>
 4c8:	ldr	x21, [x19, #8]
 4cc:	cbnz	x21, 4e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4e4>
 4d0:	b	480 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x480>
 4d4:	ldr	w9, [x8]
 4d8:	add	w9, w9, #0x1
 4dc:	str	w9, [x8]
 4e0:	cbz	x21, 480 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x480>
 4e4:	add	x8, x21, #0x8
 4e8:	cbz	x24, 508 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x508>
 4ec:	ldaxr	w9, [x8]
 4f0:	sub	w10, w9, #0x1
 4f4:	stlxr	w11, w10, [x8]
 4f8:	cbnz	w11, 4ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4ec>
 4fc:	cmp	w9, #0x1
 500:	b.ne	480 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x480>  // b.any
 504:	b	51c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x51c>
 508:	ldr	w9, [x8]
 50c:	sub	w10, w9, #0x1
 510:	str	w10, [x8]
 514:	cmp	w9, #0x1
 518:	b.ne	480 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x480>  // b.any
 51c:	mov	x25, x21
 520:	ldr	x8, [x25], #12
 524:	mov	x0, x21
 528:	ldr	x8, [x8, #16]
 52c:	blr	x8
 530:	cbz	x24, 550 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x550>
 534:	ldaxr	w8, [x25]
 538:	sub	w9, w8, #0x1
 53c:	stlxr	w10, w9, [x25]
 540:	cbnz	w10, 534 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x534>
 544:	cmp	w8, #0x1
 548:	b.ne	480 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x480>  // b.any
 54c:	b	564 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x564>
 550:	ldr	w8, [x25]
 554:	sub	w9, w8, #0x1
 558:	str	w9, [x25]
 55c:	cmp	w8, #0x1
 560:	b.ne	480 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x480>  // b.any
 564:	ldr	x8, [x21]
 568:	mov	x0, x21
 56c:	ldr	x8, [x8, #24]
 570:	blr	x8
 574:	b	480 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x480>
 578:	mov	x11, x22
 57c:	mov	x10, x23
 580:	add	x9, x11, #0x8
 584:	str	xzr, [x9]
 588:	ldr	q0, [x10]
 58c:	str	xzr, [x10, #8]
 590:	stur	q0, [x9, #-8]
 594:	str	xzr, [x10], #16
 598:	cmp	x10, x22
 59c:	add	x9, x9, #0x10
 5a0:	b.ne	584 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x584>  // b.any
 5a4:	add	x9, x22, x8, lsl #4
 5a8:	sub	x8, x23, x19
 5ac:	cmp	x8, #0x1
 5b0:	str	x9, [x21, #8]
 5b4:	b.lt	680 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x680>  // b.tstop
 5b8:	adrp	x26, 0 <__pthread_key_create>
 5bc:	ldr	x26, [x26]
 5c0:	lsr	x25, x8, #4
 5c4:	b	5d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5d0>
 5c8:	subs	x25, x25, #0x1
 5cc:	b.le	680 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x680>
 5d0:	ldr	x8, [x23, #-16]!
 5d4:	ldr	x9, [x23, #8]
 5d8:	stp	xzr, xzr, [x23]
 5dc:	str	x8, [x22, #-16]!
 5e0:	ldr	x21, [x22, #8]
 5e4:	str	x9, [x22, #8]
 5e8:	cbz	x21, 5c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5c8>
 5ec:	add	x8, x21, #0x8
 5f0:	cbz	x26, 610 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x610>
 5f4:	ldaxr	w9, [x8]
 5f8:	sub	w10, w9, #0x1
 5fc:	stlxr	w11, w10, [x8]
 600:	cbnz	w11, 5f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5f4>
 604:	cmp	w9, #0x1
 608:	b.ne	5c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5c8>  // b.any
 60c:	b	624 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x624>
 610:	ldr	w9, [x8]
 614:	sub	w10, w9, #0x1
 618:	str	w10, [x8]
 61c:	cmp	w9, #0x1
 620:	b.ne	5c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5c8>  // b.any
 624:	mov	x27, x21
 628:	ldr	x8, [x27], #12
 62c:	mov	x0, x21
 630:	ldr	x8, [x8, #16]
 634:	blr	x8
 638:	cbz	x26, 658 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x658>
 63c:	ldaxr	w8, [x27]
 640:	sub	w9, w8, #0x1
 644:	stlxr	w10, w9, [x27]
 648:	cbnz	w10, 63c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x63c>
 64c:	cmp	w8, #0x1
 650:	b.ne	5c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5c8>  // b.any
 654:	b	66c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x66c>
 658:	ldr	w8, [x27]
 65c:	sub	w9, w8, #0x1
 660:	str	w9, [x27]
 664:	cmp	w8, #0x1
 668:	b.ne	5c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5c8>  // b.any
 66c:	ldr	x8, [x21]
 670:	mov	x0, x21
 674:	ldr	x8, [x8, #24]
 678:	blr	x8
 67c:	b	5c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5c8>
 680:	cmp	x24, #0x1
 684:	b.lt	358 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x358>  // b.tstop
 688:	adrp	x23, 0 <__pthread_key_create>
 68c:	ldr	x23, [x23]
 690:	lsr	x22, x24, #4
 694:	b	6ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6ac>
 698:	str	x24, [x19, #8]
 69c:	add	x20, x20, #0x10
 6a0:	subs	x22, x22, #0x1
 6a4:	add	x19, x19, #0x10
 6a8:	b.le	358 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x358>
 6ac:	ldr	x8, [x20]
 6b0:	ldr	x21, [x19, #8]
 6b4:	str	x8, [x19]
 6b8:	ldr	x24, [x20, #8]
 6bc:	cmp	x24, x21
 6c0:	b.eq	69c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x69c>  // b.none
 6c4:	cbz	x24, 6e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6e4>
 6c8:	add	x8, x24, #0x8
 6cc:	cbz	x23, 6ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6ec>
 6d0:	ldaxr	w9, [x8]
 6d4:	add	w9, w9, #0x1
 6d8:	stlxr	w10, w9, [x8]
 6dc:	cbnz	w10, 6d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6d0>
 6e0:	ldr	x21, [x19, #8]
 6e4:	cbnz	x21, 6fc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6fc>
 6e8:	b	698 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x698>
 6ec:	ldr	w9, [x8]
 6f0:	add	w9, w9, #0x1
 6f4:	str	w9, [x8]
 6f8:	cbz	x21, 698 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x698>
 6fc:	add	x8, x21, #0x8
 700:	cbz	x23, 720 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x720>
 704:	ldaxr	w9, [x8]
 708:	sub	w10, w9, #0x1
 70c:	stlxr	w11, w10, [x8]
 710:	cbnz	w11, 704 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x704>
 714:	cmp	w9, #0x1
 718:	b.ne	698 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x698>  // b.any
 71c:	b	734 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x734>
 720:	ldr	w9, [x8]
 724:	sub	w10, w9, #0x1
 728:	str	w10, [x8]
 72c:	cmp	w9, #0x1
 730:	b.ne	698 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x698>  // b.any
 734:	mov	x25, x21
 738:	ldr	x8, [x25], #12
 73c:	mov	x0, x21
 740:	ldr	x8, [x8, #16]
 744:	blr	x8
 748:	cbz	x23, 768 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x768>
 74c:	ldaxr	w8, [x25]
 750:	sub	w9, w8, #0x1
 754:	stlxr	w10, w9, [x25]
 758:	cbnz	w10, 74c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x74c>
 75c:	cmp	w8, #0x1
 760:	b.ne	698 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x698>  // b.any
 764:	b	77c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x77c>
 768:	ldr	w8, [x25]
 76c:	sub	w9, w8, #0x1
 770:	str	w9, [x25]
 774:	cmp	w8, #0x1
 778:	b.ne	698 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x698>  // b.any
 77c:	ldr	x8, [x21]
 780:	mov	x0, x21
 784:	ldr	x8, [x8, #24]
 788:	blr	x8
 78c:	b	698 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x698>
 790:	adrp	x0, 0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag>
 794:	add	x0, x0, #0x0
 798:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm13format_objectIJmjEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJmjEE7snprintEPcj>:
   0:	ldr	x8, [x0, #8]
   4:	ldr	x3, [x0, #24]
   8:	ldr	w4, [x0, #16]
   c:	mov	w9, w2
  10:	mov	x0, x1
  14:	mov	x1, x9
  18:	mov	x2, x8
  1c:	b	0 <snprintf>

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED2Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED2Ev>:
   0:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv>:
   0:	mov	x8, x0
   4:	ldr	x0, [x0, #16]
   8:	add	x8, x8, #0x20
   c:	cmp	x0, x8
  10:	b.eq	18 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0x18>  // b.none
  14:	b	0 <free>
  18:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv>:
   0:	cbz	x0, 8 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv+0x8>
   4:	b	0 <_ZdlPv>
   8:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>
  10:	ldr	x8, [x8]
  14:	mov	x19, x0
  18:	cmp	x1, x8
  1c:	b.eq	2c <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x2c>  // b.none
  20:	mov	x0, x1
  24:	bl	0 <_ZNSt19_Sp_make_shared_tag5_S_eqERKSt9type_info>
  28:	tbz	w0, #0, 34 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x34>
  2c:	add	x0, x19, #0x10
  30:	b	38 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x38>
  34:	mov	x0, xzr
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x28, x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	add	x29, sp, #0x10
  20:	ldp	x20, x24, [x0]
  24:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
  28:	sub	x8, x24, x20
  2c:	cmp	x8, x9
  30:	b.eq	290 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x290>  // b.none
  34:	asr	x9, x8, #4
  38:	cmp	x8, #0x0
  3c:	csinc	x10, x9, xzr, ne  // ne = any
  40:	adds	x9, x10, x9
  44:	lsr	x11, x9, #59
  48:	cset	w10, cs  // cs = hs, nlast
  4c:	cmp	x11, #0x0
  50:	cset	w11, ne  // ne = any
  54:	orr	w10, w10, w11
  58:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  5c:	cmp	w10, #0x0
  60:	csel	x9, x8, x9, ne  // ne = any
  64:	sub	x8, x1, x20
  68:	mov	x23, x2
  6c:	mov	x19, x0
  70:	mov	x21, x1
  74:	asr	x25, x8, #4
  78:	str	x9, [sp, #8]
  7c:	cbz	x9, 90 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x90>
  80:	lsl	x0, x9, #4
  84:	bl	0 <_Znwm>
  88:	mov	x22, x0
  8c:	b	94 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x94>
  90:	mov	x22, xzr
  94:	ldr	q0, [x23]
  98:	stp	xzr, xzr, [x23]
  9c:	adrp	x26, 0 <__pthread_key_create>
  a0:	cmp	x20, x21
  a4:	str	q0, [x22, x25, lsl #4]
  a8:	ldr	x26, [x26]
  ac:	mov	x27, x22
  b0:	b.eq	180 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x180>  // b.none
  b4:	mov	x27, x22
  b8:	mov	x28, x20
  bc:	b	d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xd0>
  c0:	add	x28, x28, #0x10
  c4:	cmp	x28, x21
  c8:	add	x27, x27, #0x10
  cc:	b.eq	180 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x180>  // b.none
  d0:	str	xzr, [x27, #8]
  d4:	ldr	q0, [x28]
  d8:	str	xzr, [x28, #8]
  dc:	str	q0, [x27]
  e0:	ldr	x25, [x28, #8]
  e4:	str	xzr, [x28]
  e8:	cbz	x25, c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>
  ec:	add	x8, x25, #0x8
  f0:	cbz	x26, 110 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x110>
  f4:	ldaxr	w9, [x8]
  f8:	sub	w10, w9, #0x1
  fc:	stlxr	w11, w10, [x8]
 100:	cbnz	w11, f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xf4>
 104:	cmp	w9, #0x1
 108:	b.ne	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>  // b.any
 10c:	b	124 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x124>
 110:	ldr	w9, [x8]
 114:	sub	w10, w9, #0x1
 118:	str	w10, [x8]
 11c:	cmp	w9, #0x1
 120:	b.ne	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>  // b.any
 124:	mov	x23, x25
 128:	ldr	x8, [x23], #12
 12c:	mov	x0, x25
 130:	ldr	x8, [x8, #16]
 134:	blr	x8
 138:	cbz	x26, 158 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x158>
 13c:	ldaxr	w8, [x23]
 140:	sub	w9, w8, #0x1
 144:	stlxr	w10, w9, [x23]
 148:	cbnz	w10, 13c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x13c>
 14c:	cmp	w8, #0x1
 150:	b.ne	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>  // b.any
 154:	b	16c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x16c>
 158:	ldr	w8, [x23]
 15c:	sub	w9, w8, #0x1
 160:	str	w9, [x23]
 164:	cmp	w8, #0x1
 168:	b.ne	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>  // b.any
 16c:	ldr	x8, [x25]
 170:	mov	x0, x25
 174:	ldr	x8, [x8, #24]
 178:	blr	x8
 17c:	b	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>
 180:	cmp	x24, x21
 184:	add	x27, x27, #0x10
 188:	b.eq	254 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x254>  // b.none
 18c:	ldr	x28, [sp, #8]
 190:	b	1a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1a4>
 194:	add	x21, x21, #0x10
 198:	cmp	x21, x24
 19c:	add	x27, x27, #0x10
 1a0:	b.eq	258 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x258>  // b.none
 1a4:	str	xzr, [x27, #8]
 1a8:	ldr	q0, [x21]
 1ac:	str	xzr, [x21, #8]
 1b0:	str	q0, [x27]
 1b4:	ldr	x23, [x21, #8]
 1b8:	str	xzr, [x21]
 1bc:	cbz	x23, 194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>
 1c0:	add	x8, x23, #0x8
 1c4:	cbz	x26, 1e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1e4>
 1c8:	ldaxr	w9, [x8]
 1cc:	sub	w10, w9, #0x1
 1d0:	stlxr	w11, w10, [x8]
 1d4:	cbnz	w11, 1c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1c8>
 1d8:	cmp	w9, #0x1
 1dc:	b.ne	194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>  // b.any
 1e0:	b	1f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1f8>
 1e4:	ldr	w9, [x8]
 1e8:	sub	w10, w9, #0x1
 1ec:	str	w10, [x8]
 1f0:	cmp	w9, #0x1
 1f4:	b.ne	194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>  // b.any
 1f8:	mov	x25, x23
 1fc:	ldr	x8, [x25], #12
 200:	mov	x0, x23
 204:	ldr	x8, [x8, #16]
 208:	blr	x8
 20c:	cbz	x26, 22c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x22c>
 210:	ldaxr	w8, [x25]
 214:	sub	w9, w8, #0x1
 218:	stlxr	w10, w9, [x25]
 21c:	cbnz	w10, 210 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x210>
 220:	cmp	w8, #0x1
 224:	b.ne	194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>  // b.any
 228:	b	240 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x240>
 22c:	ldr	w8, [x25]
 230:	sub	w9, w8, #0x1
 234:	str	w9, [x25]
 238:	cmp	w8, #0x1
 23c:	b.ne	194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>  // b.any
 240:	ldr	x8, [x23]
 244:	mov	x0, x23
 248:	ldr	x8, [x8, #24]
 24c:	blr	x8
 250:	b	194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>
 254:	ldr	x28, [sp, #8]
 258:	cbz	x20, 264 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x264>
 25c:	mov	x0, x20
 260:	bl	0 <_ZdlPv>
 264:	add	x8, x22, x28, lsl #4
 268:	stp	x22, x27, [x19]
 26c:	str	x8, [x19, #16]
 270:	ldp	x20, x19, [sp, #96]
 274:	ldp	x22, x21, [sp, #80]
 278:	ldp	x24, x23, [sp, #64]
 27c:	ldp	x26, x25, [sp, #48]
 280:	ldp	x28, x27, [sp, #32]
 284:	ldp	x29, x30, [sp, #16]
 288:	add	sp, sp, #0x70
 28c:	ret
 290:	adrp	x0, 0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 294:	add	x0, x0, #0x0
 298:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldp	x20, x24, [x0]
  20:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  24:	sub	x8, x24, x20
  28:	cmp	x8, x9
  2c:	b.eq	218 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x218>  // b.none
  30:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  34:	asr	x9, x8, #3
  38:	movk	x10, #0xcccd
  3c:	cmp	x8, #0x0
  40:	mul	x9, x9, x10
  44:	mov	x8, #0x3333333333333333    	// #3689348814741910323
  48:	csinc	x11, x9, xzr, ne  // ne = any
  4c:	movk	x8, #0x333, lsl #48
  50:	adds	x9, x11, x9
  54:	cset	w11, cs  // cs = hs, nlast
  58:	cmp	x9, x8
  5c:	cset	w12, hi  // hi = pmore
  60:	orr	w11, w11, w12
  64:	cmp	w11, #0x0
  68:	csel	x25, x8, x9, ne  // ne = any
  6c:	sub	x27, x1, x20
  70:	add	x8, x25, x25, lsl #2
  74:	mov	x19, x0
  78:	asr	x11, x27, #3
  7c:	lsl	x0, x8, #3
  80:	mov	x23, x2
  84:	mov	x22, x1
  88:	mul	x26, x11, x10
  8c:	bl	0 <_Znwm>
  90:	ldr	w8, [x23]
  94:	add	x10, x0, x27
  98:	mov	x9, x10
  9c:	mov	x21, x0
  a0:	str	w8, [x9], #24
  a4:	str	x9, [x10, #8]!
  a8:	ldr	x11, [x23, #8]
  ac:	add	x8, x23, #0x18
  b0:	cmp	x11, x8
  b4:	b.eq	d0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0xd0>  // b.none
  b8:	str	x11, [x10]
  bc:	ldr	x9, [x23, #24]
  c0:	mov	w10, #0x28                  	// #40
  c4:	madd	x10, x26, x10, x21
  c8:	str	x9, [x10, #24]
  cc:	b	d8 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0xd8>
  d0:	ldr	q0, [x11]
  d4:	str	q0, [x9]
  d8:	ldr	x9, [x23, #16]
  dc:	mov	w10, #0x28                  	// #40
  e0:	cmp	x20, x22
  e4:	madd	x10, x26, x10, x21
  e8:	str	x9, [x10, #16]
  ec:	stp	x8, xzr, [x23, #8]
  f0:	strb	wzr, [x23, #24]
  f4:	b.eq	168 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x168>  // b.none
  f8:	mov	x9, x21
  fc:	mov	x11, x20
 100:	b	130 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x130>
 104:	str	x12, [x8, #8]
 108:	ldr	x11, [x11, #24]
 10c:	str	x11, [x8, #24]
 110:	ldur	x12, [x10, #-8]
 114:	add	x11, x10, #0x10
 118:	cmp	x11, x22
 11c:	add	x9, x9, #0x10
 120:	str	x12, [x8, #16]
 124:	stp	x10, xzr, [x10, #-16]
 128:	strb	wzr, [x10]
 12c:	b.eq	160 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x160>  // b.none
 130:	ldr	w10, [x11]
 134:	mov	x8, x9
 138:	add	x9, x9, #0x18
 13c:	str	x9, [x8, #8]
 140:	str	w10, [x8]
 144:	ldr	x12, [x11, #8]
 148:	add	x10, x11, #0x18
 14c:	cmp	x12, x10
 150:	b.ne	104 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x104>  // b.any
 154:	ldr	q0, [x12]
 158:	stur	q0, [x8, #24]
 15c:	b	110 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x110>
 160:	add	x8, x8, #0x28
 164:	b	16c <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x16c>
 168:	mov	x8, x21
 16c:	cmp	x24, x22
 170:	add	x23, x8, #0x28
 174:	b.ne	1dc <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1dc>  // b.any
 178:	cbz	x20, 184 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x184>
 17c:	mov	x0, x20
 180:	bl	0 <_ZdlPv>
 184:	mov	w8, #0x28                  	// #40
 188:	madd	x8, x25, x8, x21
 18c:	stp	x21, x23, [x19]
 190:	str	x8, [x19, #16]
 194:	ldp	x20, x19, [sp, #80]
 198:	ldp	x22, x21, [sp, #64]
 19c:	ldp	x24, x23, [sp, #48]
 1a0:	ldp	x26, x25, [sp, #32]
 1a4:	ldr	x27, [sp, #16]
 1a8:	ldp	x29, x30, [sp], #96
 1ac:	ret
 1b0:	str	x11, [x8, #8]
 1b4:	ldr	x11, [x22, #24]
 1b8:	str	x11, [x8, #24]
 1bc:	ldur	x11, [x10, #-8]
 1c0:	add	x22, x10, #0x10
 1c4:	cmp	x22, x24
 1c8:	add	x23, x9, #0x10
 1cc:	str	x11, [x8, #16]
 1d0:	stp	x10, xzr, [x10, #-16]
 1d4:	strb	wzr, [x10]
 1d8:	b.eq	20c <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x20c>  // b.none
 1dc:	ldr	w10, [x22]
 1e0:	add	x9, x23, #0x18
 1e4:	str	x9, [x23, #8]
 1e8:	mov	x8, x23
 1ec:	str	w10, [x23]
 1f0:	ldr	x11, [x22, #8]
 1f4:	add	x10, x22, #0x18
 1f8:	cmp	x11, x10
 1fc:	b.ne	1b0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1b0>  // b.any
 200:	ldr	q0, [x11]
 204:	stur	q0, [x8, #24]
 208:	b	1bc <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1bc>
 20c:	add	x23, x8, #0x28
 210:	cbnz	x20, 17c <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x17c>
 214:	b	184 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x184>
 218:	adrp	x0, 0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_>
 21c:	add	x0, x0, #0x0
 220:	bl	0 <_ZSt20__throw_length_errorPKc>
