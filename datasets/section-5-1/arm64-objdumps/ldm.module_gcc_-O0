
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ldm.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_swap_bytes16>:
       0:	sub	sp, sp, #0x10
       4:	strh	w0, [sp, #14]
       8:	ldrh	w0, [sp, #14]
       c:	lsl	w0, w0, #8
      10:	sxth	w1, w0
      14:	ldrh	w0, [sp, #14]
      18:	lsr	w0, w0, #8
      1c:	and	w0, w0, #0xffff
      20:	sxth	w0, w0
      24:	orr	w0, w1, w0
      28:	sxth	w0, w0
      2c:	and	w0, w0, #0xffff
      30:	add	sp, sp, #0x10
      34:	ret

0000000000000038 <grub_swap_bytes64>:
      38:	sub	sp, sp, #0x10
      3c:	str	x0, [sp, #8]
      40:	ldr	x0, [sp, #8]
      44:	rev	x0, x0
      48:	add	sp, sp, #0x10
      4c:	ret

0000000000000050 <grub_memcpy>:
      50:	stp	x29, x30, [sp, #-48]!
      54:	mov	x29, sp
      58:	str	x0, [sp, #40]
      5c:	str	x1, [sp, #32]
      60:	str	x2, [sp, #24]
      64:	ldr	x2, [sp, #24]
      68:	ldr	x1, [sp, #32]
      6c:	ldr	x0, [sp, #40]
      70:	bl	0 <grub_memmove>
      74:	ldp	x29, x30, [sp], #48
      78:	ret

000000000000007c <grub_diskfilter_register_back>:
      7c:	sub	sp, sp, #0x20
      80:	str	x0, [sp, #8]
      84:	adrp	x0, 0 <grub_swap_bytes16>
      88:	add	x0, x0, #0x0
      8c:	ldr	x0, [x0]
      90:	str	x0, [sp, #16]
      94:	ldr	x0, [sp, #16]
      98:	ldr	x0, [x0]
      9c:	str	x0, [sp, #24]
      a0:	b	b8 <grub_diskfilter_register_back+0x3c>
      a4:	ldr	x0, [sp, #24]
      a8:	str	x0, [sp, #16]
      ac:	ldr	x0, [sp, #16]
      b0:	ldr	x0, [x0]
      b4:	str	x0, [sp, #24]
      b8:	ldr	x0, [sp, #24]
      bc:	cmp	x0, #0x0
      c0:	b.ne	a4 <grub_diskfilter_register_back+0x28>  // b.any
      c4:	ldr	x0, [sp, #8]
      c8:	str	xzr, [x0]
      cc:	ldr	x0, [sp, #8]
      d0:	ldr	x1, [sp, #16]
      d4:	str	x1, [x0, #8]
      d8:	ldr	x0, [sp, #16]
      dc:	ldr	x1, [sp, #8]
      e0:	str	x1, [x0]
      e4:	nop
      e8:	add	sp, sp, #0x20
      ec:	ret
	...

00000000000000f8 <grub_diskfilter_unregister>:
      f8:	stp	x29, x30, [sp, #-32]!
      fc:	mov	x29, sp
     100:	str	x0, [sp, #24]
     104:	ldr	x0, [sp, #24]
     108:	bl	0 <grub_list_remove>
     10c:	nop
     110:	ldp	x29, x30, [sp], #32
     114:	ret

0000000000000118 <read_int>:
     118:	sub	sp, sp, #0x20
     11c:	str	x0, [sp, #8]
     120:	str	x1, [sp]
     124:	str	xzr, [sp, #16]
     128:	ldr	x0, [sp, #8]
     12c:	str	x0, [sp, #24]
     130:	b	164 <read_int+0x4c>
     134:	ldr	x0, [sp, #16]
     138:	lsl	x0, x0, #8
     13c:	str	x0, [sp, #16]
     140:	ldr	x0, [sp, #24]
     144:	ldrb	w0, [x0]
     148:	and	x0, x0, #0xff
     14c:	ldr	x1, [sp, #16]
     150:	orr	x0, x1, x0
     154:	str	x0, [sp, #16]
     158:	ldr	x0, [sp, #24]
     15c:	add	x0, x0, #0x1
     160:	str	x0, [sp, #24]
     164:	ldr	x1, [sp, #8]
     168:	ldr	x0, [sp]
     16c:	add	x0, x1, x0
     170:	ldr	x1, [sp, #24]
     174:	cmp	x1, x0
     178:	b.cc	134 <read_int+0x1c>  // b.lo, b.ul, b.last
     17c:	ldr	x0, [sp, #16]
     180:	add	sp, sp, #0x20
     184:	ret

0000000000000188 <check_ldm_partition>:
     188:	sub	sp, sp, #0x30
     18c:	str	x0, [sp, #24]
     190:	str	x1, [sp, #16]
     194:	str	x2, [sp, #8]
     198:	ldr	x0, [sp, #8]
     19c:	str	x0, [sp, #40]
     1a0:	ldr	x0, [sp, #16]
     1a4:	ldr	w0, [x0]
     1a8:	cmp	w0, #0x3
     1ac:	b.le	1b8 <check_ldm_partition+0x30>
     1b0:	mov	w0, #0x1                   	// #1
     1b4:	b	1e0 <check_ldm_partition+0x58>
     1b8:	ldr	x0, [sp, #16]
     1bc:	ldrb	w0, [x0, #56]
     1c0:	cmp	w0, #0x42
     1c4:	b.ne	1dc <check_ldm_partition+0x54>  // b.any
     1c8:	ldr	x0, [sp, #40]
     1cc:	mov	w1, #0x1                   	// #1
     1d0:	str	w1, [x0]
     1d4:	mov	w0, #0x1                   	// #1
     1d8:	b	1e0 <check_ldm_partition+0x58>
     1dc:	mov	w0, #0x0                   	// #0
     1e0:	add	sp, sp, #0x30
     1e4:	ret

00000000000001e8 <msdos_has_ldm_partition>:
     1e8:	stp	x29, x30, [sp, #-48]!
     1ec:	mov	x29, sp
     1f0:	str	x0, [sp, #24]
     1f4:	str	wzr, [sp, #40]
     1f8:	add	x0, sp, #0x28
     1fc:	mov	x2, x0
     200:	adrp	x0, 0 <grub_swap_bytes16>
     204:	add	x0, x0, #0x0
     208:	ldr	x1, [x0]
     20c:	ldr	x0, [sp, #24]
     210:	bl	0 <grub_partition_msdos_iterate>
     214:	str	w0, [sp, #44]
     218:	ldr	w0, [sp, #44]
     21c:	cmp	w0, #0x0
     220:	b.eq	23c <msdos_has_ldm_partition+0x54>  // b.none
     224:	adrp	x0, 0 <grub_swap_bytes16>
     228:	add	x0, x0, #0x0
     22c:	ldr	x0, [x0]
     230:	str	wzr, [x0]
     234:	mov	w0, #0x0                   	// #0
     238:	b	240 <msdos_has_ldm_partition+0x58>
     23c:	ldr	w0, [sp, #40]
     240:	ldp	x29, x30, [sp], #48
     244:	ret
	...

0000000000000258 <gpt_ldm_sector_iter>:
     258:	stp	x29, x30, [sp, #-192]!
     25c:	mov	x29, sp
     260:	str	x0, [sp, #40]
     264:	str	x1, [sp, #32]
     268:	str	x2, [sp, #24]
     26c:	ldr	x0, [sp, #24]
     270:	str	x0, [sp, #184]
     274:	ldr	x0, [sp, #40]
     278:	ldr	x0, [x0, #40]
     27c:	str	x0, [sp, #176]
     280:	ldr	x0, [sp, #32]
     284:	ldr	x1, [x0, #40]
     288:	ldr	x0, [sp, #40]
     28c:	str	x1, [x0, #40]
     290:	ldr	x0, [sp, #32]
     294:	ldr	x1, [x0, #24]
     298:	ldr	x0, [sp, #32]
     29c:	ldr	w0, [x0, #32]
     2a0:	sxtw	x0, w0
     2a4:	add	x2, sp, #0x30
     2a8:	mov	x4, x2
     2ac:	mov	x3, #0x80                  	// #128
     2b0:	mov	x2, x0
     2b4:	ldr	x0, [sp, #40]
     2b8:	bl	0 <grub_disk_read>
     2bc:	cmp	w0, #0x0
     2c0:	b.eq	2d8 <gpt_ldm_sector_iter+0x80>  // b.none
     2c4:	ldr	x0, [sp, #40]
     2c8:	ldr	x1, [sp, #176]
     2cc:	str	x1, [x0, #40]
     2d0:	mov	w0, #0x0                   	// #0
     2d4:	b	334 <gpt_ldm_sector_iter+0xdc>
     2d8:	ldr	x0, [sp, #40]
     2dc:	ldr	x1, [sp, #176]
     2e0:	str	x1, [x0, #40]
     2e4:	add	x3, sp, #0x30
     2e8:	mov	x2, #0x10                  	// #16
     2ec:	adrp	x0, 0 <grub_swap_bytes16>
     2f0:	add	x0, x0, #0x0
     2f4:	ldr	x1, [x0]
     2f8:	mov	x0, x3
     2fc:	bl	0 <grub_memcmp>
     300:	cmp	w0, #0x0
     304:	b.ne	330 <gpt_ldm_sector_iter+0xd8>  // b.any
     308:	ldr	x0, [sp, #32]
     30c:	ldr	x1, [x0, #8]
     310:	ldr	x0, [sp, #32]
     314:	ldr	x0, [x0, #16]
     318:	add	x0, x1, x0
     31c:	sub	x1, x0, #0x1
     320:	ldr	x0, [sp, #184]
     324:	str	x1, [x0]
     328:	mov	w0, #0x1                   	// #1
     32c:	b	334 <gpt_ldm_sector_iter+0xdc>
     330:	mov	w0, #0x0                   	// #0
     334:	ldp	x29, x30, [sp], #192
     338:	ret
     33c:	nop
	...

0000000000000348 <gpt_ldm_sector>:
     348:	stp	x29, x30, [sp, #-48]!
     34c:	mov	x29, sp
     350:	str	x0, [sp, #24]
     354:	str	xzr, [sp, #32]
     358:	add	x0, sp, #0x20
     35c:	mov	x2, x0
     360:	adrp	x0, 0 <grub_swap_bytes16>
     364:	add	x0, x0, #0x0
     368:	ldr	x1, [x0]
     36c:	ldr	x0, [sp, #24]
     370:	bl	0 <grub_gpt_partition_map_iterate>
     374:	str	w0, [sp, #44]
     378:	ldr	w0, [sp, #44]
     37c:	cmp	w0, #0x0
     380:	b.eq	39c <gpt_ldm_sector+0x54>  // b.none
     384:	adrp	x0, 0 <grub_swap_bytes16>
     388:	add	x0, x0, #0x0
     38c:	ldr	x0, [x0]
     390:	str	wzr, [x0]
     394:	mov	x0, #0x0                   	// #0
     398:	b	3a0 <gpt_ldm_sector+0x58>
     39c:	ldr	x0, [sp, #32]
     3a0:	ldp	x29, x30, [sp], #48
     3a4:	ret
	...

00000000000003b8 <make_vg>:
     3b8:	sub	sp, sp, #0x340
     3bc:	stp	x29, x30, [sp]
     3c0:	mov	x29, sp
     3c4:	str	x19, [sp, #16]
     3c8:	str	x0, [sp, #40]
     3cc:	str	x1, [sp, #32]
     3d0:	mov	x0, #0x38                  	// #56
     3d4:	bl	0 <grub_malloc>
     3d8:	str	x0, [sp, #744]
     3dc:	ldr	x0, [sp, #744]
     3e0:	cmp	x0, #0x0
     3e4:	b.ne	3f0 <make_vg+0x38>  // b.any
     3e8:	mov	x0, #0x0                   	// #0
     3ec:	b	22b4 <make_vg+0x1efc>
     3f0:	ldr	x0, [sp, #744]
     3f4:	mov	x1, #0x1                   	// #1
     3f8:	str	x1, [x0, #24]
     3fc:	mov	x0, #0x21                  	// #33
     400:	bl	0 <grub_malloc>
     404:	mov	x1, x0
     408:	ldr	x0, [sp, #744]
     40c:	str	x1, [x0, #16]
     410:	mov	x0, #0x41                  	// #65
     414:	bl	0 <grub_malloc>
     418:	mov	x1, x0
     41c:	ldr	x0, [sp, #744]
     420:	str	x1, [x0]
     424:	ldr	x0, [sp, #744]
     428:	ldr	x0, [x0]
     42c:	cmp	x0, #0x0
     430:	b.eq	444 <make_vg+0x8c>  // b.none
     434:	ldr	x0, [sp, #744]
     438:	ldr	x0, [x0, #16]
     43c:	cmp	x0, #0x0
     440:	b.ne	464 <make_vg+0xac>  // b.any
     444:	ldr	x0, [sp, #744]
     448:	ldr	x0, [x0]
     44c:	bl	0 <grub_free>
     450:	ldr	x0, [sp, #744]
     454:	ldr	x0, [x0, #16]
     458:	bl	0 <grub_free>
     45c:	mov	x0, #0x0                   	// #0
     460:	b	22b4 <make_vg+0x1efc>
     464:	ldr	x0, [sp, #744]
     468:	ldr	x3, [x0]
     46c:	ldr	x0, [sp, #32]
     470:	add	x0, x0, #0xb0
     474:	mov	x2, #0x40                  	// #64
     478:	mov	x1, x0
     47c:	mov	x0, x3
     480:	bl	50 <grub_memcpy>
     484:	ldr	x0, [sp, #744]
     488:	ldr	x3, [x0, #16]
     48c:	ldr	x0, [sp, #32]
     490:	add	x0, x0, #0xf0
     494:	mov	x2, #0x20                  	// #32
     498:	mov	x1, x0
     49c:	mov	x0, x3
     4a0:	bl	50 <grub_memcpy>
     4a4:	ldr	x0, [sp, #744]
     4a8:	ldr	x0, [x0, #16]
     4ac:	add	x0, x0, #0x20
     4b0:	strb	wzr, [x0]
     4b4:	ldr	x0, [sp, #744]
     4b8:	ldr	x0, [x0]
     4bc:	add	x0, x0, #0x40
     4c0:	strb	wzr, [x0]
     4c4:	ldr	x0, [sp, #744]
     4c8:	ldr	x0, [x0]
     4cc:	bl	0 <grub_strlen>
     4d0:	mov	x1, x0
     4d4:	ldr	x0, [sp, #744]
     4d8:	str	x1, [x0, #8]
     4dc:	ldr	x0, [sp, #744]
     4e0:	str	xzr, [x0, #40]
     4e4:	ldr	x0, [sp, #744]
     4e8:	str	xzr, [x0, #32]
     4ec:	ldr	x0, [sp, #32]
     4f0:	add	x0, x0, #0x200
     4f4:	ldur	x0, [x0, #-213]
     4f8:	bl	38 <grub_swap_bytes64>
     4fc:	str	x0, [sp, #736]
     500:	ldr	x0, [sp, #32]
     504:	add	x0, x0, #0x200
     508:	ldur	x0, [x0, #-205]
     50c:	bl	38 <grub_swap_bytes64>
     510:	mov	x1, x0
     514:	ldr	x0, [sp, #736]
     518:	add	x0, x0, x1
     51c:	str	x0, [sp, #728]
     520:	ldr	x0, [sp, #736]
     524:	add	x0, x0, #0x12
     528:	str	x0, [sp, #824]
     52c:	b	880 <make_vg+0x4c8>
     530:	add	x0, sp, #0x58
     534:	mov	x4, x0
     538:	mov	x3, #0x200                 	// #512
     53c:	mov	x2, #0x0                   	// #0
     540:	ldr	x1, [sp, #824]
     544:	ldr	x0, [sp, #40]
     548:	bl	0 <grub_disk_read>
     54c:	str	w0, [sp, #724]
     550:	ldr	w0, [sp, #724]
     554:	cmp	w0, #0x0
     558:	b.ne	211c <make_vg+0x1d64>  // b.any
     55c:	str	wzr, [sp, #820]
     560:	b	868 <make_vg+0x4b0>
     564:	add	x1, sp, #0x58
     568:	ldr	w0, [sp, #820]
     56c:	lsl	x0, x0, #7
     570:	add	x3, x1, x0
     574:	mov	x2, #0x4                   	// #4
     578:	adrp	x0, 0 <grub_swap_bytes16>
     57c:	add	x0, x0, #0x0
     580:	ldr	x1, [x0]
     584:	mov	x0, x3
     588:	bl	0 <grub_memcmp>
     58c:	cmp	w0, #0x0
     590:	b.ne	848 <make_vg+0x490>  // b.any
     594:	ldr	w0, [sp, #820]
     598:	lsl	x0, x0, #7
     59c:	add	x1, sp, #0x68
     5a0:	ldrh	w0, [x1, x0]
     5a4:	bl	0 <grub_swap_bytes16>
     5a8:	and	w0, w0, #0xffff
     5ac:	cmp	w0, #0x0
     5b0:	b.eq	5d4 <make_vg+0x21c>  // b.none
     5b4:	ldr	w0, [sp, #820]
     5b8:	lsl	x0, x0, #7
     5bc:	add	x1, sp, #0x68
     5c0:	ldrh	w0, [x1, x0]
     5c4:	bl	0 <grub_swap_bytes16>
     5c8:	and	w0, w0, #0xffff
     5cc:	cmp	w0, #0x1
     5d0:	b.ne	850 <make_vg+0x498>  // b.any
     5d4:	ldr	w0, [sp, #820]
     5d8:	lsl	x0, x0, #7
     5dc:	add	x1, sp, #0x6b
     5e0:	ldrb	w0, [x1, x0]
     5e4:	cmp	w0, #0x34
     5e8:	b.ne	858 <make_vg+0x4a0>  // b.any
     5ec:	mov	x0, #0x48                  	// #72
     5f0:	bl	0 <grub_zalloc>
     5f4:	str	x0, [sp, #624]
     5f8:	ldr	x0, [sp, #624]
     5fc:	cmp	x0, #0x0
     600:	b.eq	2124 <make_vg+0x1d6c>  // b.none
     604:	ldr	x0, [sp, #624]
     608:	str	xzr, [x0, #24]
     60c:	add	x1, sp, #0x58
     610:	ldr	w0, [sp, #820]
     614:	lsl	x0, x0, #7
     618:	add	x0, x0, #0x10
     61c:	add	x0, x1, x0
     620:	add	x0, x0, #0x8
     624:	str	x0, [sp, #616]
     628:	ldr	x0, [sp, #616]
     62c:	ldrb	w0, [x0]
     630:	and	x0, x0, #0xff
     634:	add	x0, x0, #0x1
     638:	ldr	x1, [sp, #616]
     63c:	add	x1, x1, x0
     640:	add	x2, sp, #0x58
     644:	ldr	w0, [sp, #820]
     648:	lsl	x0, x0, #7
     64c:	add	x0, x0, #0x10
     650:	add	x0, x2, x0
     654:	add	x0, x0, #0x8
     658:	add	x0, x0, #0x68
     65c:	cmp	x1, x0
     660:	b.cc	670 <make_vg+0x2b8>  // b.lo, b.ul, b.last
     664:	ldr	x0, [sp, #624]
     668:	bl	0 <grub_free>
     66c:	b	21a0 <make_vg+0x1de8>
     670:	ldr	x0, [sp, #616]
     674:	ldrb	w0, [x0]
     678:	add	w0, w0, #0x2
     67c:	sxtw	x0, w0
     680:	bl	0 <grub_malloc>
     684:	mov	x1, x0
     688:	ldr	x0, [sp, #624]
     68c:	str	x1, [x0, #64]
     690:	ldr	x0, [sp, #624]
     694:	ldr	x0, [x0, #64]
     698:	cmp	x0, #0x0
     69c:	b.ne	6ac <make_vg+0x2f4>  // b.any
     6a0:	ldr	x0, [sp, #624]
     6a4:	bl	0 <grub_free>
     6a8:	b	21a0 <make_vg+0x1de8>
     6ac:	ldr	x0, [sp, #624]
     6b0:	ldr	x3, [x0, #64]
     6b4:	ldr	x0, [sp, #616]
     6b8:	ldrb	w0, [x0]
     6bc:	and	x0, x0, #0xff
     6c0:	add	x0, x0, #0x1
     6c4:	mov	x2, x0
     6c8:	ldr	x1, [sp, #616]
     6cc:	mov	x0, x3
     6d0:	bl	50 <grub_memcpy>
     6d4:	ldr	x0, [sp, #624]
     6d8:	ldr	x1, [x0, #64]
     6dc:	ldr	x0, [sp, #616]
     6e0:	ldrb	w0, [x0]
     6e4:	and	x0, x0, #0xff
     6e8:	add	x0, x0, #0x1
     6ec:	add	x0, x1, x0
     6f0:	strb	wzr, [x0]
     6f4:	ldr	x0, [sp, #616]
     6f8:	ldrb	w0, [x0]
     6fc:	and	x0, x0, #0xff
     700:	add	x0, x0, #0x1
     704:	ldr	x1, [sp, #616]
     708:	add	x0, x1, x0
     70c:	str	x0, [sp, #616]
     710:	ldr	x0, [sp, #616]
     714:	ldrb	w0, [x0]
     718:	and	x0, x0, #0xff
     71c:	add	x0, x0, #0x1
     720:	ldr	x1, [sp, #616]
     724:	add	x1, x1, x0
     728:	add	x2, sp, #0x58
     72c:	ldr	w0, [sp, #820]
     730:	lsl	x0, x0, #7
     734:	add	x0, x0, #0x10
     738:	add	x0, x2, x0
     73c:	add	x0, x0, #0x8
     740:	add	x0, x0, #0x68
     744:	cmp	x1, x0
     748:	b.cc	758 <make_vg+0x3a0>  // b.lo, b.ul, b.last
     74c:	ldr	x0, [sp, #624]
     750:	bl	0 <grub_free>
     754:	b	21a0 <make_vg+0x1de8>
     758:	ldr	x0, [sp, #616]
     75c:	ldrb	w0, [x0]
     760:	and	x0, x0, #0xff
     764:	add	x0, x0, #0x1
     768:	ldr	x1, [sp, #616]
     76c:	add	x0, x1, x0
     770:	str	x0, [sp, #616]
     774:	ldr	x0, [sp, #616]
     778:	ldrb	w0, [x0]
     77c:	and	x0, x0, #0xff
     780:	add	x0, x0, #0x1
     784:	ldr	x1, [sp, #616]
     788:	add	x1, x1, x0
     78c:	add	x2, sp, #0x58
     790:	ldr	w0, [sp, #820]
     794:	lsl	x0, x0, #7
     798:	add	x0, x0, #0x10
     79c:	add	x0, x2, x0
     7a0:	add	x0, x0, #0x8
     7a4:	add	x0, x0, #0x68
     7a8:	cmp	x1, x0
     7ac:	b.cc	7bc <make_vg+0x404>  // b.lo, b.ul, b.last
     7b0:	ldr	x0, [sp, #624]
     7b4:	bl	0 <grub_free>
     7b8:	b	21a0 <make_vg+0x1de8>
     7bc:	ldr	x0, [sp, #616]
     7c0:	ldrb	w0, [x0]
     7c4:	and	x1, x0, #0xff
     7c8:	ldr	x0, [sp, #624]
     7cc:	str	x1, [x0, #8]
     7d0:	ldr	x0, [sp, #624]
     7d4:	ldr	x0, [x0, #8]
     7d8:	add	x0, x0, #0x1
     7dc:	bl	0 <grub_malloc>
     7e0:	mov	x1, x0
     7e4:	ldr	x0, [sp, #624]
     7e8:	str	x1, [x0]
     7ec:	ldr	x0, [sp, #624]
     7f0:	ldr	x3, [x0]
     7f4:	ldr	x0, [sp, #616]
     7f8:	add	x1, x0, #0x1
     7fc:	ldr	x0, [sp, #624]
     800:	ldr	x0, [x0, #8]
     804:	mov	x2, x0
     808:	mov	x0, x3
     80c:	bl	50 <grub_memcpy>
     810:	ldr	x0, [sp, #624]
     814:	ldr	x1, [x0]
     818:	ldr	x0, [sp, #624]
     81c:	ldr	x0, [x0, #8]
     820:	add	x0, x1, x0
     824:	strb	wzr, [x0]
     828:	ldr	x0, [sp, #744]
     82c:	ldr	x1, [x0, #32]
     830:	ldr	x0, [sp, #624]
     834:	str	x1, [x0, #56]
     838:	ldr	x0, [sp, #744]
     83c:	ldr	x1, [sp, #624]
     840:	str	x1, [x0, #32]
     844:	b	85c <make_vg+0x4a4>
     848:	nop
     84c:	b	85c <make_vg+0x4a4>
     850:	nop
     854:	b	85c <make_vg+0x4a4>
     858:	nop
     85c:	ldr	w0, [sp, #820]
     860:	add	w0, w0, #0x1
     864:	str	w0, [sp, #820]
     868:	ldr	w0, [sp, #820]
     86c:	cmp	w0, #0x3
     870:	b.ls	564 <make_vg+0x1ac>  // b.plast
     874:	ldr	x0, [sp, #824]
     878:	add	x0, x0, #0x1
     87c:	str	x0, [sp, #824]
     880:	ldr	x1, [sp, #824]
     884:	ldr	x0, [sp, #728]
     888:	cmp	x1, x0
     88c:	b.cc	530 <make_vg+0x178>  // b.lo, b.ul, b.last
     890:	ldr	x0, [sp, #736]
     894:	add	x0, x0, #0x12
     898:	str	x0, [sp, #824]
     89c:	b	fb0 <make_vg+0xbf8>
     8a0:	add	x0, sp, #0x58
     8a4:	mov	x4, x0
     8a8:	mov	x3, #0x200                 	// #512
     8ac:	mov	x2, #0x0                   	// #0
     8b0:	ldr	x1, [sp, #824]
     8b4:	ldr	x0, [sp, #40]
     8b8:	bl	0 <grub_disk_read>
     8bc:	str	w0, [sp, #724]
     8c0:	ldr	w0, [sp, #724]
     8c4:	cmp	w0, #0x0
     8c8:	b.ne	212c <make_vg+0x1d74>  // b.any
     8cc:	str	wzr, [sp, #816]
     8d0:	b	f98 <make_vg+0xbe0>
     8d4:	add	x1, sp, #0x58
     8d8:	ldr	w0, [sp, #816]
     8dc:	lsl	x0, x0, #7
     8e0:	add	x3, x1, x0
     8e4:	mov	x2, #0x4                   	// #4
     8e8:	adrp	x0, 0 <grub_swap_bytes16>
     8ec:	add	x0, x0, #0x0
     8f0:	ldr	x1, [x0]
     8f4:	mov	x0, x3
     8f8:	bl	0 <grub_memcmp>
     8fc:	cmp	w0, #0x0
     900:	b.ne	f78 <make_vg+0xbc0>  // b.any
     904:	ldr	w0, [sp, #816]
     908:	lsl	x0, x0, #7
     90c:	add	x1, sp, #0x68
     910:	ldrh	w0, [x1, x0]
     914:	bl	0 <grub_swap_bytes16>
     918:	and	w0, w0, #0xffff
     91c:	cmp	w0, #0x0
     920:	b.eq	944 <make_vg+0x58c>  // b.none
     924:	ldr	w0, [sp, #816]
     928:	lsl	x0, x0, #7
     92c:	add	x1, sp, #0x68
     930:	ldrh	w0, [x1, x0]
     934:	bl	0 <grub_swap_bytes16>
     938:	and	w0, w0, #0xffff
     93c:	cmp	w0, #0x1
     940:	b.ne	f80 <make_vg+0xbc8>  // b.any
     944:	ldr	w0, [sp, #816]
     948:	lsl	x0, x0, #7
     94c:	add	x1, sp, #0x6b
     950:	ldrb	w0, [x1, x0]
     954:	cmp	w0, #0x51
     958:	b.ne	f88 <make_vg+0xbd0>  // b.any
     95c:	mov	x0, #0x60                  	// #96
     960:	bl	0 <grub_zalloc>
     964:	str	x0, [sp, #640]
     968:	ldr	x0, [sp, #640]
     96c:	cmp	x0, #0x0
     970:	b.eq	2134 <make_vg+0x1d7c>  // b.none
     974:	ldr	x0, [sp, #640]
     978:	ldr	x1, [sp, #744]
     97c:	str	x1, [x0, #72]
     980:	ldr	x0, [sp, #640]
     984:	mov	w1, #0x1                   	// #1
     988:	str	w1, [x0, #28]
     98c:	ldr	x0, [sp, #640]
     990:	mov	x1, #0x1                   	// #1
     994:	str	x1, [x0, #32]
     998:	ldr	x0, [sp, #640]
     99c:	mov	w1, #0x1                   	// #1
     9a0:	str	w1, [x0, #56]
     9a4:	mov	x0, #0x38                  	// #56
     9a8:	bl	0 <grub_zalloc>
     9ac:	mov	x1, x0
     9b0:	ldr	x0, [sp, #640]
     9b4:	str	x1, [x0, #64]
     9b8:	ldr	x0, [sp, #640]
     9bc:	ldr	x0, [x0, #64]
     9c0:	cmp	x0, #0x0
     9c4:	b.eq	213c <make_vg+0x1d84>  // b.none
     9c8:	ldr	x0, [sp, #640]
     9cc:	ldr	x0, [x0, #64]
     9d0:	str	xzr, [x0]
     9d4:	ldr	x0, [sp, #640]
     9d8:	ldr	x0, [x0, #64]
     9dc:	mov	w1, #0x1                   	// #1
     9e0:	str	w1, [x0, #16]
     9e4:	ldr	x0, [sp, #640]
     9e8:	ldr	x0, [x0, #64]
     9ec:	str	wzr, [x0, #32]
     9f0:	ldr	x0, [sp, #640]
     9f4:	ldr	x0, [x0, #64]
     9f8:	mov	w1, #0x8                   	// #8
     9fc:	str	w1, [x0, #36]
     a00:	ldr	x0, [sp, #640]
     a04:	ldr	x0, [x0, #64]
     a08:	ldr	w0, [x0, #36]
     a0c:	mov	w0, w0
     a10:	lsl	x1, x0, #5
     a14:	ldr	x0, [sp, #640]
     a18:	ldr	x19, [x0, #64]
     a1c:	mov	x0, x1
     a20:	bl	0 <grub_zalloc>
     a24:	str	x0, [x19, #40]
     a28:	ldr	x0, [sp, #640]
     a2c:	ldr	x0, [x0, #64]
     a30:	ldr	x0, [x0, #40]
     a34:	cmp	x0, #0x0
     a38:	b.eq	2144 <make_vg+0x1d8c>  // b.none
     a3c:	add	x1, sp, #0x58
     a40:	ldr	w0, [sp, #816]
     a44:	lsl	x0, x0, #7
     a48:	add	x0, x0, #0x10
     a4c:	add	x0, x1, x0
     a50:	add	x0, x0, #0x8
     a54:	str	x0, [sp, #632]
     a58:	ldr	x0, [sp, #632]
     a5c:	ldrb	w0, [x0]
     a60:	and	x0, x0, #0xff
     a64:	add	x0, x0, #0x1
     a68:	ldr	x1, [sp, #632]
     a6c:	add	x1, x1, x0
     a70:	add	x2, sp, #0x58
     a74:	ldr	w0, [sp, #816]
     a78:	lsl	x0, x0, #7
     a7c:	add	x0, x0, #0x10
     a80:	add	x0, x2, x0
     a84:	add	x0, x0, #0x8
     a88:	add	x0, x0, #0x68
     a8c:	cmp	x1, x0
     a90:	b.cc	aa0 <make_vg+0x6e8>  // b.lo, b.ul, b.last
     a94:	ldr	x0, [sp, #640]
     a98:	bl	0 <grub_free>
     a9c:	b	21a0 <make_vg+0x1de8>
     aa0:	ldr	x0, [sp, #632]
     aa4:	ldrb	w0, [x0]
     aa8:	and	x0, x0, #0xff
     aac:	add	x0, x0, #0x2
     ab0:	bl	0 <grub_malloc>
     ab4:	mov	x1, x0
     ab8:	ldr	x0, [sp, #640]
     abc:	str	x1, [x0, #88]
     ac0:	ldr	x0, [sp, #640]
     ac4:	ldr	x0, [x0, #88]
     ac8:	cmp	x0, #0x0
     acc:	b.ne	adc <make_vg+0x724>  // b.any
     ad0:	ldr	x0, [sp, #640]
     ad4:	bl	0 <grub_free>
     ad8:	b	21a0 <make_vg+0x1de8>
     adc:	ldr	x0, [sp, #640]
     ae0:	ldr	x3, [x0, #88]
     ae4:	ldr	x0, [sp, #632]
     ae8:	ldrb	w0, [x0]
     aec:	add	w0, w0, #0x1
     af0:	sxtw	x0, w0
     af4:	mov	x2, x0
     af8:	ldr	x1, [sp, #632]
     afc:	mov	x0, x3
     b00:	bl	50 <grub_memcpy>
     b04:	ldr	x0, [sp, #640]
     b08:	ldr	x1, [x0, #88]
     b0c:	ldr	x0, [sp, #632]
     b10:	ldrb	w0, [x0]
     b14:	and	x0, x0, #0xff
     b18:	add	x0, x0, #0x1
     b1c:	add	x0, x1, x0
     b20:	strb	wzr, [x0]
     b24:	ldr	x0, [sp, #632]
     b28:	ldrb	w0, [x0]
     b2c:	and	x0, x0, #0xff
     b30:	add	x0, x0, #0x1
     b34:	ldr	x1, [sp, #632]
     b38:	add	x0, x1, x0
     b3c:	str	x0, [sp, #632]
     b40:	ldr	x0, [sp, #632]
     b44:	ldrb	w0, [x0]
     b48:	and	x0, x0, #0xff
     b4c:	add	x0, x0, #0x1
     b50:	ldr	x1, [sp, #632]
     b54:	add	x1, x1, x0
     b58:	add	x2, sp, #0x58
     b5c:	ldr	w0, [sp, #816]
     b60:	lsl	x0, x0, #7
     b64:	add	x0, x0, #0x10
     b68:	add	x0, x2, x0
     b6c:	add	x0, x0, #0x8
     b70:	add	x0, x0, #0x68
     b74:	cmp	x1, x0
     b78:	b.cc	b88 <make_vg+0x7d0>  // b.lo, b.ul, b.last
     b7c:	ldr	x0, [sp, #640]
     b80:	bl	0 <grub_free>
     b84:	b	21a0 <make_vg+0x1de8>
     b88:	ldr	x0, [sp, #632]
     b8c:	ldrb	w0, [x0]
     b90:	add	w0, w0, #0x1
     b94:	sxtw	x0, w0
     b98:	bl	0 <grub_malloc>
     b9c:	mov	x1, x0
     ba0:	ldr	x0, [sp, #640]
     ba4:	str	x1, [x0, #16]
     ba8:	ldr	x0, [sp, #640]
     bac:	ldr	x0, [x0, #16]
     bb0:	cmp	x0, #0x0
     bb4:	b.ne	bd0 <make_vg+0x818>  // b.any
     bb8:	ldr	x0, [sp, #640]
     bbc:	ldr	x0, [x0, #88]
     bc0:	bl	0 <grub_free>
     bc4:	ldr	x0, [sp, #640]
     bc8:	bl	0 <grub_free>
     bcc:	b	21a0 <make_vg+0x1de8>
     bd0:	ldr	x0, [sp, #640]
     bd4:	ldr	x3, [x0, #16]
     bd8:	ldr	x0, [sp, #632]
     bdc:	add	x1, x0, #0x1
     be0:	ldr	x0, [sp, #632]
     be4:	ldrb	w0, [x0]
     be8:	and	x0, x0, #0xff
     bec:	mov	x2, x0
     bf0:	mov	x0, x3
     bf4:	bl	50 <grub_memcpy>
     bf8:	ldr	x0, [sp, #640]
     bfc:	ldr	x1, [x0, #16]
     c00:	ldr	x0, [sp, #632]
     c04:	ldrb	w0, [x0]
     c08:	and	x0, x0, #0xff
     c0c:	add	x0, x1, x0
     c10:	strb	wzr, [x0]
     c14:	ldr	x0, [sp, #744]
     c18:	ldr	x1, [x0]
     c1c:	ldr	x0, [sp, #640]
     c20:	ldr	x0, [x0, #16]
     c24:	mov	x2, x0
     c28:	adrp	x0, 0 <grub_swap_bytes16>
     c2c:	add	x0, x0, #0x0
     c30:	ldr	x0, [x0]
     c34:	bl	0 <grub_xasprintf>
     c38:	mov	x1, x0
     c3c:	ldr	x0, [sp, #640]
     c40:	str	x1, [x0]
     c44:	ldr	x0, [sp, #640]
     c48:	ldr	x0, [x0]
     c4c:	cmp	x0, #0x0
     c50:	b.ne	c78 <make_vg+0x8c0>  // b.any
     c54:	ldr	x0, [sp, #640]
     c58:	ldr	x0, [x0, #88]
     c5c:	bl	0 <grub_free>
     c60:	ldr	x0, [sp, #640]
     c64:	ldr	x0, [x0, #16]
     c68:	bl	0 <grub_free>
     c6c:	ldr	x0, [sp, #640]
     c70:	bl	0 <grub_free>
     c74:	b	21a0 <make_vg+0x1de8>
     c78:	ldr	x0, [sp, #632]
     c7c:	ldrb	w0, [x0]
     c80:	and	x0, x0, #0xff
     c84:	add	x0, x0, #0x1
     c88:	ldr	x1, [sp, #632]
     c8c:	add	x0, x1, x0
     c90:	str	x0, [sp, #632]
     c94:	ldr	x0, [sp, #632]
     c98:	ldrb	w0, [x0]
     c9c:	and	x0, x0, #0xff
     ca0:	add	x0, x0, #0x1
     ca4:	ldr	x1, [sp, #632]
     ca8:	add	x1, x1, x0
     cac:	add	x2, sp, #0x58
     cb0:	ldr	w0, [sp, #816]
     cb4:	lsl	x0, x0, #7
     cb8:	add	x0, x0, #0x10
     cbc:	add	x0, x2, x0
     cc0:	add	x0, x0, #0x8
     cc4:	add	x0, x0, #0x68
     cc8:	cmp	x1, x0
     ccc:	b.cc	cf4 <make_vg+0x93c>  // b.lo, b.ul, b.last
     cd0:	ldr	x0, [sp, #640]
     cd4:	ldr	x0, [x0, #88]
     cd8:	bl	0 <grub_free>
     cdc:	ldr	x0, [sp, #640]
     ce0:	ldr	x0, [x0, #16]
     ce4:	bl	0 <grub_free>
     ce8:	ldr	x0, [sp, #640]
     cec:	bl	0 <grub_free>
     cf0:	b	21a0 <make_vg+0x1de8>
     cf4:	ldr	x0, [sp, #632]
     cf8:	ldrb	w0, [x0]
     cfc:	and	x0, x0, #0xff
     d00:	add	x0, x0, #0x1
     d04:	ldr	x1, [sp, #632]
     d08:	add	x0, x1, x0
     d0c:	str	x0, [sp, #632]
     d10:	add	x1, sp, #0x58
     d14:	ldr	w0, [sp, #816]
     d18:	lsl	x0, x0, #7
     d1c:	add	x0, x0, #0x10
     d20:	add	x0, x1, x0
     d24:	add	x0, x0, #0x8
     d28:	add	x0, x0, #0x68
     d2c:	ldr	x1, [sp, #632]
     d30:	cmp	x1, x0
     d34:	b.cc	d5c <make_vg+0x9a4>  // b.lo, b.ul, b.last
     d38:	ldr	x0, [sp, #640]
     d3c:	ldr	x0, [x0, #88]
     d40:	bl	0 <grub_free>
     d44:	ldr	x0, [sp, #640]
     d48:	ldr	x0, [x0, #16]
     d4c:	bl	0 <grub_free>
     d50:	ldr	x0, [sp, #640]
     d54:	bl	0 <grub_free>
     d58:	b	21a0 <make_vg+0x1de8>
     d5c:	ldr	x0, [sp, #632]
     d60:	ldrb	w0, [x0]
     d64:	and	x0, x0, #0xff
     d68:	add	x0, x0, #0x1
     d6c:	ldr	x1, [sp, #632]
     d70:	add	x0, x1, x0
     d74:	str	x0, [sp, #632]
     d78:	add	x1, sp, #0x58
     d7c:	ldr	w0, [sp, #816]
     d80:	lsl	x0, x0, #7
     d84:	add	x0, x0, #0x10
     d88:	add	x0, x1, x0
     d8c:	add	x0, x0, #0x8
     d90:	add	x0, x0, #0x68
     d94:	ldr	x1, [sp, #632]
     d98:	cmp	x1, x0
     d9c:	b.cc	dc4 <make_vg+0xa0c>  // b.lo, b.ul, b.last
     da0:	ldr	x0, [sp, #640]
     da4:	ldr	x0, [x0, #88]
     da8:	bl	0 <grub_free>
     dac:	ldr	x0, [sp, #640]
     db0:	ldr	x0, [x0, #16]
     db4:	bl	0 <grub_free>
     db8:	ldr	x0, [sp, #640]
     dbc:	bl	0 <grub_free>
     dc0:	b	21a0 <make_vg+0x1de8>
     dc4:	ldr	x0, [sp, #632]
     dc8:	add	x0, x0, #0x15
     dcc:	str	x0, [sp, #632]
     dd0:	add	x1, sp, #0x58
     dd4:	ldr	w0, [sp, #816]
     dd8:	lsl	x0, x0, #7
     ddc:	add	x0, x0, #0x10
     de0:	add	x0, x1, x0
     de4:	add	x0, x0, #0x8
     de8:	add	x0, x0, #0x68
     dec:	ldr	x1, [sp, #632]
     df0:	cmp	x1, x0
     df4:	b.cc	e1c <make_vg+0xa64>  // b.lo, b.ul, b.last
     df8:	ldr	x0, [sp, #640]
     dfc:	ldr	x0, [x0, #88]
     e00:	bl	0 <grub_free>
     e04:	ldr	x0, [sp, #640]
     e08:	ldr	x0, [x0, #16]
     e0c:	bl	0 <grub_free>
     e10:	ldr	x0, [sp, #640]
     e14:	bl	0 <grub_free>
     e18:	b	21a0 <make_vg+0x1de8>
     e1c:	ldr	x0, [sp, #632]
     e20:	ldrb	w0, [x0]
     e24:	and	x0, x0, #0xff
     e28:	add	x0, x0, #0x1
     e2c:	ldr	x1, [sp, #632]
     e30:	add	x0, x1, x0
     e34:	str	x0, [sp, #632]
     e38:	add	x1, sp, #0x58
     e3c:	ldr	w0, [sp, #816]
     e40:	lsl	x0, x0, #7
     e44:	add	x0, x0, #0x10
     e48:	add	x0, x1, x0
     e4c:	add	x0, x0, #0x8
     e50:	add	x0, x0, #0x68
     e54:	ldr	x1, [sp, #632]
     e58:	cmp	x1, x0
     e5c:	b.cc	e84 <make_vg+0xacc>  // b.lo, b.ul, b.last
     e60:	ldr	x0, [sp, #640]
     e64:	ldr	x0, [x0, #88]
     e68:	bl	0 <grub_free>
     e6c:	ldr	x0, [sp, #640]
     e70:	ldr	x0, [x0, #16]
     e74:	bl	0 <grub_free>
     e78:	ldr	x0, [sp, #640]
     e7c:	bl	0 <grub_free>
     e80:	b	21a0 <make_vg+0x1de8>
     e84:	ldr	x0, [sp, #632]
     e88:	add	x0, x0, #0x10
     e8c:	str	x0, [sp, #632]
     e90:	add	x1, sp, #0x58
     e94:	ldr	w0, [sp, #816]
     e98:	lsl	x0, x0, #7
     e9c:	add	x0, x0, #0x10
     ea0:	add	x0, x1, x0
     ea4:	add	x0, x0, #0x8
     ea8:	add	x0, x0, #0x68
     eac:	ldr	x1, [sp, #632]
     eb0:	cmp	x1, x0
     eb4:	b.cs	ef4 <make_vg+0xb3c>  // b.hs, b.nlast
     eb8:	ldr	x0, [sp, #632]
     ebc:	ldrb	w0, [x0]
     ec0:	and	x0, x0, #0xff
     ec4:	add	x0, x0, #0x1
     ec8:	ldr	x1, [sp, #632]
     ecc:	add	x1, x1, x0
     ed0:	add	x2, sp, #0x58
     ed4:	ldr	w0, [sp, #816]
     ed8:	lsl	x0, x0, #7
     edc:	add	x0, x0, #0x10
     ee0:	add	x0, x2, x0
     ee4:	add	x0, x0, #0x8
     ee8:	add	x0, x0, #0x68
     eec:	cmp	x1, x0
     ef0:	b.cc	f18 <make_vg+0xb60>  // b.lo, b.ul, b.last
     ef4:	ldr	x0, [sp, #640]
     ef8:	ldr	x0, [x0, #88]
     efc:	bl	0 <grub_free>
     f00:	ldr	x0, [sp, #640]
     f04:	ldr	x0, [x0, #16]
     f08:	bl	0 <grub_free>
     f0c:	ldr	x0, [sp, #640]
     f10:	bl	0 <grub_free>
     f14:	b	21a0 <make_vg+0x1de8>
     f18:	ldr	x0, [sp, #632]
     f1c:	add	x2, x0, #0x1
     f20:	ldr	x0, [sp, #632]
     f24:	ldrb	w0, [x0]
     f28:	and	x0, x0, #0xff
     f2c:	mov	x1, x0
     f30:	mov	x0, x2
     f34:	bl	118 <read_int>
     f38:	mov	x1, x0
     f3c:	ldr	x0, [sp, #640]
     f40:	str	x1, [x0, #40]
     f44:	ldr	x0, [sp, #640]
     f48:	ldr	x0, [x0, #64]
     f4c:	ldr	x1, [sp, #640]
     f50:	ldr	x1, [x1, #40]
     f54:	str	x1, [x0, #8]
     f58:	ldr	x0, [sp, #744]
     f5c:	ldr	x1, [x0, #40]
     f60:	ldr	x0, [sp, #640]
     f64:	str	x1, [x0, #80]
     f68:	ldr	x0, [sp, #744]
     f6c:	ldr	x1, [sp, #640]
     f70:	str	x1, [x0, #40]
     f74:	b	f8c <make_vg+0xbd4>
     f78:	nop
     f7c:	b	f8c <make_vg+0xbd4>
     f80:	nop
     f84:	b	f8c <make_vg+0xbd4>
     f88:	nop
     f8c:	ldr	w0, [sp, #816]
     f90:	add	w0, w0, #0x1
     f94:	str	w0, [sp, #816]
     f98:	ldr	w0, [sp, #816]
     f9c:	cmp	w0, #0x3
     fa0:	b.ls	8d4 <make_vg+0x51c>  // b.plast
     fa4:	ldr	x0, [sp, #824]
     fa8:	add	x0, x0, #0x1
     fac:	str	x0, [sp, #824]
     fb0:	ldr	x1, [sp, #824]
     fb4:	ldr	x0, [sp, #728]
     fb8:	cmp	x1, x0
     fbc:	b.cc	8a0 <make_vg+0x4e8>  // b.lo, b.ul, b.last
     fc0:	ldr	x0, [sp, #736]
     fc4:	add	x0, x0, #0x12
     fc8:	str	x0, [sp, #824]
     fcc:	b	18b8 <make_vg+0x1500>
     fd0:	add	x0, sp, #0x58
     fd4:	mov	x4, x0
     fd8:	mov	x3, #0x200                 	// #512
     fdc:	mov	x2, #0x0                   	// #0
     fe0:	ldr	x1, [sp, #824]
     fe4:	ldr	x0, [sp, #40]
     fe8:	bl	0 <grub_disk_read>
     fec:	str	w0, [sp, #724]
     ff0:	ldr	w0, [sp, #724]
     ff4:	cmp	w0, #0x0
     ff8:	b.ne	214c <make_vg+0x1d94>  // b.any
     ffc:	str	wzr, [sp, #812]
    1000:	b	18a0 <make_vg+0x14e8>
    1004:	add	x1, sp, #0x58
    1008:	ldr	w0, [sp, #812]
    100c:	lsl	x0, x0, #7
    1010:	add	x3, x1, x0
    1014:	mov	x2, #0x4                   	// #4
    1018:	adrp	x0, 0 <grub_swap_bytes16>
    101c:	add	x0, x0, #0x0
    1020:	ldr	x1, [x0]
    1024:	mov	x0, x3
    1028:	bl	0 <grub_memcmp>
    102c:	cmp	w0, #0x0
    1030:	b.ne	1880 <make_vg+0x14c8>  // b.any
    1034:	ldr	w0, [sp, #812]
    1038:	lsl	x0, x0, #7
    103c:	add	x1, sp, #0x68
    1040:	ldrh	w0, [x1, x0]
    1044:	bl	0 <grub_swap_bytes16>
    1048:	and	w0, w0, #0xffff
    104c:	cmp	w0, #0x0
    1050:	b.eq	1074 <make_vg+0xcbc>  // b.none
    1054:	ldr	w0, [sp, #812]
    1058:	lsl	x0, x0, #7
    105c:	add	x1, sp, #0x68
    1060:	ldrh	w0, [x1, x0]
    1064:	bl	0 <grub_swap_bytes16>
    1068:	and	w0, w0, #0xffff
    106c:	cmp	w0, #0x1
    1070:	b.ne	1888 <make_vg+0x14d0>  // b.any
    1074:	ldr	w0, [sp, #812]
    1078:	lsl	x0, x0, #7
    107c:	add	x1, sp, #0x6b
    1080:	ldrb	w0, [x1, x0]
    1084:	cmp	w0, #0x32
    1088:	b.ne	1890 <make_vg+0x14d8>  // b.any
    108c:	mov	x0, #0x60                  	// #96
    1090:	bl	0 <grub_zalloc>
    1094:	str	x0, [sp, #672]
    1098:	ldr	x0, [sp, #672]
    109c:	cmp	x0, #0x0
    10a0:	b.eq	2154 <make_vg+0x1d9c>  // b.none
    10a4:	ldr	x0, [sp, #672]
    10a8:	str	wzr, [x0, #56]
    10ac:	ldr	x0, [sp, #672]
    10b0:	str	xzr, [x0, #16]
    10b4:	ldr	x0, [sp, #672]
    10b8:	str	xzr, [x0]
    10bc:	add	x1, sp, #0x58
    10c0:	ldr	w0, [sp, #812]
    10c4:	lsl	x0, x0, #7
    10c8:	add	x0, x0, #0x10
    10cc:	add	x0, x1, x0
    10d0:	add	x0, x0, #0x8
    10d4:	str	x0, [sp, #664]
    10d8:	ldr	x0, [sp, #664]
    10dc:	ldrb	w0, [x0]
    10e0:	and	x0, x0, #0xff
    10e4:	add	x0, x0, #0x1
    10e8:	ldr	x1, [sp, #664]
    10ec:	add	x1, x1, x0
    10f0:	add	x2, sp, #0x58
    10f4:	ldr	w0, [sp, #812]
    10f8:	lsl	x0, x0, #7
    10fc:	add	x0, x0, #0x10
    1100:	add	x0, x2, x0
    1104:	add	x0, x0, #0x8
    1108:	add	x0, x0, #0x68
    110c:	cmp	x1, x0
    1110:	b.cs	215c <make_vg+0x1da4>  // b.hs, b.nlast
    1114:	ldr	x0, [sp, #664]
    1118:	ldrb	w0, [x0]
    111c:	and	x0, x0, #0xff
    1120:	add	x0, x0, #0x2
    1124:	bl	0 <grub_malloc>
    1128:	mov	x1, x0
    112c:	ldr	x0, [sp, #672]
    1130:	str	x1, [x0, #88]
    1134:	ldr	x0, [sp, #672]
    1138:	ldr	x0, [x0, #88]
    113c:	cmp	x0, #0x0
    1140:	b.ne	1150 <make_vg+0xd98>  // b.any
    1144:	ldr	x0, [sp, #672]
    1148:	bl	0 <grub_free>
    114c:	b	21a0 <make_vg+0x1de8>
    1150:	ldr	x0, [sp, #672]
    1154:	ldr	x3, [x0, #88]
    1158:	ldr	x0, [sp, #664]
    115c:	ldrb	w0, [x0]
    1160:	add	w0, w0, #0x1
    1164:	sxtw	x0, w0
    1168:	mov	x2, x0
    116c:	ldr	x1, [sp, #664]
    1170:	mov	x0, x3
    1174:	bl	50 <grub_memcpy>
    1178:	ldr	x0, [sp, #672]
    117c:	ldr	x1, [x0, #88]
    1180:	ldr	x0, [sp, #664]
    1184:	ldrb	w0, [x0]
    1188:	and	x0, x0, #0xff
    118c:	add	x0, x0, #0x1
    1190:	add	x0, x1, x0
    1194:	strb	wzr, [x0]
    1198:	ldr	x0, [sp, #664]
    119c:	ldrb	w0, [x0]
    11a0:	and	x0, x0, #0xff
    11a4:	add	x0, x0, #0x1
    11a8:	ldr	x1, [sp, #664]
    11ac:	add	x0, x1, x0
    11b0:	str	x0, [sp, #664]
    11b4:	ldr	x0, [sp, #664]
    11b8:	ldrb	w0, [x0]
    11bc:	and	x0, x0, #0xff
    11c0:	add	x0, x0, #0x1
    11c4:	ldr	x1, [sp, #664]
    11c8:	add	x1, x1, x0
    11cc:	add	x2, sp, #0x58
    11d0:	ldr	w0, [sp, #812]
    11d4:	lsl	x0, x0, #7
    11d8:	add	x0, x0, #0x10
    11dc:	add	x0, x2, x0
    11e0:	add	x0, x0, #0x8
    11e4:	add	x0, x0, #0x68
    11e8:	cmp	x1, x0
    11ec:	b.cc	1208 <make_vg+0xe50>  // b.lo, b.ul, b.last
    11f0:	ldr	x0, [sp, #672]
    11f4:	ldr	x0, [x0, #88]
    11f8:	bl	0 <grub_free>
    11fc:	ldr	x0, [sp, #672]
    1200:	bl	0 <grub_free>
    1204:	b	21a0 <make_vg+0x1de8>
    1208:	ldr	x0, [sp, #664]
    120c:	ldrb	w0, [x0]
    1210:	and	x0, x0, #0xff
    1214:	add	x0, x0, #0x1
    1218:	ldr	x1, [sp, #664]
    121c:	add	x0, x1, x0
    1220:	str	x0, [sp, #664]
    1224:	ldr	x0, [sp, #664]
    1228:	ldrb	w0, [x0]
    122c:	and	x0, x0, #0xff
    1230:	add	x0, x0, #0x1
    1234:	ldr	x1, [sp, #664]
    1238:	add	x1, x1, x0
    123c:	add	x2, sp, #0x58
    1240:	ldr	w0, [sp, #812]
    1244:	lsl	x0, x0, #7
    1248:	add	x0, x0, #0x10
    124c:	add	x0, x2, x0
    1250:	add	x0, x0, #0x8
    1254:	add	x0, x0, #0x68
    1258:	cmp	x1, x0
    125c:	b.cc	1278 <make_vg+0xec0>  // b.lo, b.ul, b.last
    1260:	ldr	x0, [sp, #672]
    1264:	ldr	x0, [x0, #88]
    1268:	bl	0 <grub_free>
    126c:	ldr	x0, [sp, #672]
    1270:	bl	0 <grub_free>
    1274:	b	21a0 <make_vg+0x1de8>
    1278:	ldr	x0, [sp, #664]
    127c:	ldrb	w0, [x0]
    1280:	and	x0, x0, #0xff
    1284:	add	x0, x0, #0x1
    1288:	ldr	x1, [sp, #664]
    128c:	add	x0, x1, x0
    1290:	str	x0, [sp, #664]
    1294:	ldr	x0, [sp, #664]
    1298:	add	x1, x0, #0x1
    129c:	str	x1, [sp, #664]
    12a0:	ldrb	w0, [x0]
    12a4:	strb	w0, [sp, #663]
    12a8:	ldr	x0, [sp, #664]
    12ac:	add	x0, x0, #0x4
    12b0:	str	x0, [sp, #664]
    12b4:	add	x1, sp, #0x58
    12b8:	ldr	w0, [sp, #812]
    12bc:	lsl	x0, x0, #7
    12c0:	add	x0, x0, #0x10
    12c4:	add	x0, x1, x0
    12c8:	add	x0, x0, #0x8
    12cc:	add	x0, x0, #0x68
    12d0:	ldr	x1, [sp, #664]
    12d4:	cmp	x1, x0
    12d8:	b.cc	12f4 <make_vg+0xf3c>  // b.lo, b.ul, b.last
    12dc:	ldr	x0, [sp, #672]
    12e0:	ldr	x0, [x0, #88]
    12e4:	bl	0 <grub_free>
    12e8:	ldr	x0, [sp, #672]
    12ec:	bl	0 <grub_free>
    12f0:	b	21a0 <make_vg+0x1de8>
    12f4:	ldr	x0, [sp, #664]
    12f8:	ldrb	w0, [x0]
    12fc:	and	x0, x0, #0xff
    1300:	add	x0, x0, #0x1
    1304:	ldr	x1, [sp, #664]
    1308:	add	x0, x1, x0
    130c:	str	x0, [sp, #664]
    1310:	add	x1, sp, #0x58
    1314:	ldr	w0, [sp, #812]
    1318:	lsl	x0, x0, #7
    131c:	add	x0, x0, #0x10
    1320:	add	x0, x1, x0
    1324:	add	x0, x0, #0x8
    1328:	add	x0, x0, #0x68
    132c:	ldr	x1, [sp, #664]
    1330:	cmp	x1, x0
    1334:	b.cc	1350 <make_vg+0xf98>  // b.lo, b.ul, b.last
    1338:	ldr	x0, [sp, #672]
    133c:	ldr	x0, [x0, #88]
    1340:	bl	0 <grub_free>
    1344:	ldr	x0, [sp, #672]
    1348:	bl	0 <grub_free>
    134c:	b	21a0 <make_vg+0x1de8>
    1350:	ldr	x0, [sp, #664]
    1354:	add	x0, x0, #0x10
    1358:	str	x0, [sp, #664]
    135c:	ldr	x0, [sp, #664]
    1360:	ldrb	w0, [x0]
    1364:	and	x0, x0, #0xff
    1368:	add	x0, x0, #0x1
    136c:	ldr	x1, [sp, #664]
    1370:	add	x1, x1, x0
    1374:	add	x2, sp, #0x58
    1378:	ldr	w0, [sp, #812]
    137c:	lsl	x0, x0, #7
    1380:	add	x0, x0, #0x10
    1384:	add	x0, x2, x0
    1388:	add	x0, x0, #0x8
    138c:	add	x0, x0, #0x68
    1390:	cmp	x1, x0
    1394:	b.cc	13b0 <make_vg+0xff8>  // b.lo, b.ul, b.last
    1398:	ldr	x0, [sp, #672]
    139c:	ldr	x0, [x0, #88]
    13a0:	bl	0 <grub_free>
    13a4:	ldr	x0, [sp, #672]
    13a8:	bl	0 <grub_free>
    13ac:	b	21a0 <make_vg+0x1de8>
    13b0:	ldr	x0, [sp, #744]
    13b4:	ldr	x0, [x0, #40]
    13b8:	str	x0, [sp, #800]
    13bc:	b	141c <make_vg+0x1064>
    13c0:	ldr	x0, [sp, #800]
    13c4:	ldr	x0, [x0, #88]
    13c8:	ldrb	w1, [x0]
    13cc:	ldr	x0, [sp, #664]
    13d0:	ldrb	w0, [x0]
    13d4:	cmp	w1, w0
    13d8:	b.ne	1410 <make_vg+0x1058>  // b.any
    13dc:	ldr	x0, [sp, #800]
    13e0:	ldr	x0, [x0, #88]
    13e4:	add	x3, x0, #0x1
    13e8:	ldr	x0, [sp, #664]
    13ec:	add	x1, x0, #0x1
    13f0:	ldr	x0, [sp, #664]
    13f4:	ldrb	w0, [x0]
    13f8:	and	x0, x0, #0xff
    13fc:	mov	x2, x0
    1400:	mov	x0, x3
    1404:	bl	0 <grub_memcmp>
    1408:	cmp	w0, #0x0
    140c:	b.eq	142c <make_vg+0x1074>  // b.none
    1410:	ldr	x0, [sp, #800]
    1414:	ldr	x0, [x0, #80]
    1418:	str	x0, [sp, #800]
    141c:	ldr	x0, [sp, #800]
    1420:	cmp	x0, #0x0
    1424:	b.ne	13c0 <make_vg+0x1008>  // b.any
    1428:	b	1430 <make_vg+0x1078>
    142c:	nop
    1430:	ldr	x0, [sp, #800]
    1434:	cmp	x0, #0x0
    1438:	b.ne	1454 <make_vg+0x109c>  // b.any
    143c:	ldr	x0, [sp, #672]
    1440:	ldr	x0, [x0, #88]
    1444:	bl	0 <grub_free>
    1448:	ldr	x0, [sp, #672]
    144c:	bl	0 <grub_free>
    1450:	b	1894 <make_vg+0x14dc>
    1454:	ldr	x0, [sp, #800]
    1458:	ldr	x1, [x0, #40]
    145c:	ldr	x0, [sp, #672]
    1460:	str	x1, [x0, #40]
    1464:	ldrb	w0, [sp, #663]
    1468:	cmp	w0, #0x2
    146c:	b.ne	14c0 <make_vg+0x1108>  // b.any
    1470:	ldr	x0, [sp, #672]
    1474:	mov	x1, #0x8                   	// #8
    1478:	str	x1, [x0, #32]
    147c:	ldr	x0, [sp, #672]
    1480:	str	wzr, [x0, #28]
    1484:	ldr	x0, [sp, #672]
    1488:	ldr	x1, [x0, #32]
    148c:	mov	x0, x1
    1490:	lsl	x0, x0, #3
    1494:	sub	x0, x0, x1
    1498:	lsl	x0, x0, #3
    149c:	bl	0 <grub_malloc>
    14a0:	mov	x1, x0
    14a4:	ldr	x0, [sp, #672]
    14a8:	str	x1, [x0, #64]
    14ac:	ldr	x0, [sp, #672]
    14b0:	ldr	x0, [x0, #64]
    14b4:	cmp	x0, #0x0
    14b8:	b.ne	1754 <make_vg+0x139c>  // b.any
    14bc:	b	21a0 <make_vg+0x1de8>
    14c0:	ldr	x0, [sp, #672]
    14c4:	mov	x1, #0x1                   	// #1
    14c8:	str	x1, [x0, #32]
    14cc:	ldr	x0, [sp, #672]
    14d0:	mov	w1, #0x1                   	// #1
    14d4:	str	w1, [x0, #28]
    14d8:	mov	x0, #0x38                  	// #56
    14dc:	bl	0 <grub_malloc>
    14e0:	mov	x1, x0
    14e4:	ldr	x0, [sp, #672]
    14e8:	str	x1, [x0, #64]
    14ec:	ldr	x0, [sp, #672]
    14f0:	ldr	x0, [x0, #64]
    14f4:	cmp	x0, #0x0
    14f8:	b.eq	2164 <make_vg+0x1dac>  // b.none
    14fc:	ldr	x0, [sp, #672]
    1500:	ldr	x0, [x0, #64]
    1504:	str	xzr, [x0]
    1508:	ldr	x0, [sp, #672]
    150c:	ldr	x0, [x0, #64]
    1510:	ldr	x1, [sp, #800]
    1514:	ldr	x1, [x1, #40]
    1518:	str	x1, [x0, #8]
    151c:	ldr	x0, [sp, #672]
    1520:	ldr	x0, [x0, #64]
    1524:	str	wzr, [x0, #20]
    1528:	ldrb	w0, [sp, #663]
    152c:	cmp	w0, #0x1
    1530:	b.ne	1544 <make_vg+0x118c>  // b.any
    1534:	ldr	x0, [sp, #672]
    1538:	ldr	x0, [x0, #64]
    153c:	str	wzr, [x0, #16]
    1540:	b	1570 <make_vg+0x11b8>
    1544:	ldrb	w0, [sp, #663]
    1548:	cmp	w0, #0x3
    154c:	b.ne	216c <make_vg+0x1db4>  // b.any
    1550:	ldr	x0, [sp, #672]
    1554:	ldr	x0, [x0, #64]
    1558:	mov	w1, #0x5                   	// #5
    155c:	str	w1, [x0, #16]
    1560:	ldr	x0, [sp, #672]
    1564:	ldr	x0, [x0, #64]
    1568:	mov	w1, #0x2                   	// #2
    156c:	str	w1, [x0, #20]
    1570:	ldr	x0, [sp, #664]
    1574:	ldrb	w0, [x0]
    1578:	and	x0, x0, #0xff
    157c:	add	x0, x0, #0x1
    1580:	ldr	x1, [sp, #664]
    1584:	add	x0, x1, x0
    1588:	str	x0, [sp, #664]
    158c:	ldr	x0, [sp, #664]
    1590:	add	x0, x0, #0x1
    1594:	str	x0, [sp, #664]
    1598:	ldr	w0, [sp, #812]
    159c:	lsl	x0, x0, #7
    15a0:	add	x1, sp, #0x6a
    15a4:	ldrb	w0, [x1, x0]
    15a8:	and	w0, w0, #0x10
    15ac:	cmp	w0, #0x0
    15b0:	b.eq	2174 <make_vg+0x1dbc>  // b.none
    15b4:	add	x1, sp, #0x58
    15b8:	ldr	w0, [sp, #812]
    15bc:	lsl	x0, x0, #7
    15c0:	add	x0, x0, #0x10
    15c4:	add	x0, x1, x0
    15c8:	add	x0, x0, #0x8
    15cc:	add	x0, x0, #0x68
    15d0:	ldr	x1, [sp, #664]
    15d4:	cmp	x1, x0
    15d8:	b.cs	1618 <make_vg+0x1260>  // b.hs, b.nlast
    15dc:	ldr	x0, [sp, #664]
    15e0:	ldrb	w0, [x0]
    15e4:	and	x0, x0, #0xff
    15e8:	add	x0, x0, #0x1
    15ec:	ldr	x1, [sp, #664]
    15f0:	add	x1, x1, x0
    15f4:	add	x2, sp, #0x58
    15f8:	ldr	w0, [sp, #812]
    15fc:	lsl	x0, x0, #7
    1600:	add	x0, x0, #0x10
    1604:	add	x0, x2, x0
    1608:	add	x0, x0, #0x8
    160c:	add	x0, x0, #0x68
    1610:	cmp	x1, x0
    1614:	b.cc	1630 <make_vg+0x1278>  // b.lo, b.ul, b.last
    1618:	ldr	x0, [sp, #672]
    161c:	ldr	x0, [x0, #88]
    1620:	bl	0 <grub_free>
    1624:	ldr	x0, [sp, #672]
    1628:	bl	0 <grub_free>
    162c:	b	21a0 <make_vg+0x1de8>
    1630:	ldr	x0, [sp, #664]
    1634:	add	x2, x0, #0x1
    1638:	ldr	x0, [sp, #664]
    163c:	ldrb	w0, [x0]
    1640:	and	x0, x0, #0xff
    1644:	mov	x1, x0
    1648:	mov	x0, x2
    164c:	bl	118 <read_int>
    1650:	mov	x1, x0
    1654:	ldr	x0, [sp, #672]
    1658:	ldr	x0, [x0, #64]
    165c:	str	w1, [x0, #48]
    1660:	ldr	x0, [sp, #664]
    1664:	ldrb	w0, [x0]
    1668:	and	x0, x0, #0xff
    166c:	add	x0, x0, #0x1
    1670:	ldr	x1, [sp, #664]
    1674:	add	x0, x1, x0
    1678:	str	x0, [sp, #664]
    167c:	ldr	x0, [sp, #664]
    1680:	ldrb	w0, [x0]
    1684:	and	x0, x0, #0xff
    1688:	add	x0, x0, #0x1
    168c:	ldr	x1, [sp, #664]
    1690:	add	x1, x1, x0
    1694:	add	x2, sp, #0x58
    1698:	ldr	w0, [sp, #812]
    169c:	lsl	x0, x0, #7
    16a0:	add	x0, x0, #0x10
    16a4:	add	x0, x2, x0
    16a8:	add	x0, x0, #0x8
    16ac:	add	x0, x0, #0x68
    16b0:	cmp	x1, x0
    16b4:	b.cc	16d0 <make_vg+0x1318>  // b.lo, b.ul, b.last
    16b8:	ldr	x0, [sp, #672]
    16bc:	ldr	x0, [x0, #88]
    16c0:	bl	0 <grub_free>
    16c4:	ldr	x0, [sp, #672]
    16c8:	bl	0 <grub_free>
    16cc:	b	21a0 <make_vg+0x1de8>
    16d0:	ldr	x0, [sp, #664]
    16d4:	add	x2, x0, #0x1
    16d8:	ldr	x0, [sp, #664]
    16dc:	ldrb	w0, [x0]
    16e0:	and	x0, x0, #0xff
    16e4:	mov	x1, x0
    16e8:	mov	x0, x2
    16ec:	bl	118 <read_int>
    16f0:	mov	x1, x0
    16f4:	ldr	x0, [sp, #672]
    16f8:	ldr	x0, [x0, #64]
    16fc:	str	w1, [x0, #32]
    1700:	ldr	x0, [sp, #672]
    1704:	ldr	x1, [x0, #64]
    1708:	ldr	x0, [sp, #672]
    170c:	ldr	x0, [x0, #64]
    1710:	ldr	w1, [x1, #32]
    1714:	str	w1, [x0, #36]
    1718:	ldr	x0, [sp, #672]
    171c:	ldr	x0, [x0, #64]
    1720:	ldr	w0, [x0, #36]
    1724:	mov	w0, w0
    1728:	lsl	x1, x0, #5
    172c:	ldr	x0, [sp, #672]
    1730:	ldr	x19, [x0, #64]
    1734:	mov	x0, x1
    1738:	bl	0 <grub_zalloc>
    173c:	str	x0, [x19, #40]
    1740:	ldr	x0, [sp, #800]
    1744:	ldr	x0, [x0, #64]
    1748:	ldr	x0, [x0, #40]
    174c:	cmp	x0, #0x0
    1750:	b.eq	217c <make_vg+0x1dc4>  // b.none
    1754:	ldr	x0, [sp, #800]
    1758:	ldr	x0, [x0, #64]
    175c:	ldr	w1, [x0, #36]
    1760:	ldr	x0, [sp, #800]
    1764:	ldr	x0, [x0, #64]
    1768:	ldr	w0, [x0, #32]
    176c:	cmp	w1, w0
    1770:	b.ne	17dc <make_vg+0x1424>  // b.any
    1774:	ldr	x0, [sp, #800]
    1778:	ldr	x0, [x0, #64]
    177c:	ldr	w1, [x0, #36]
    1780:	ldr	x0, [sp, #800]
    1784:	ldr	x0, [x0, #64]
    1788:	lsl	w1, w1, #1
    178c:	str	w1, [x0, #36]
    1790:	ldr	x0, [sp, #800]
    1794:	ldr	x0, [x0, #64]
    1798:	ldr	x2, [x0, #40]
    179c:	ldr	x0, [sp, #800]
    17a0:	ldr	x0, [x0, #64]
    17a4:	ldr	w0, [x0, #36]
    17a8:	mov	w0, w0
    17ac:	lsl	x0, x0, #5
    17b0:	mov	x1, x0
    17b4:	mov	x0, x2
    17b8:	bl	0 <grub_realloc>
    17bc:	str	x0, [sp, #648]
    17c0:	ldr	x0, [sp, #648]
    17c4:	cmp	x0, #0x0
    17c8:	b.eq	2184 <make_vg+0x1dcc>  // b.none
    17cc:	ldr	x0, [sp, #800]
    17d0:	ldr	x0, [x0, #64]
    17d4:	ldr	x1, [sp, #648]
    17d8:	str	x1, [x0, #40]
    17dc:	ldr	x0, [sp, #800]
    17e0:	ldr	x0, [x0, #64]
    17e4:	ldr	x1, [x0, #40]
    17e8:	ldr	x0, [sp, #800]
    17ec:	ldr	x0, [x0, #64]
    17f0:	ldr	w0, [x0, #32]
    17f4:	mov	w0, w0
    17f8:	lsl	x0, x0, #5
    17fc:	add	x0, x1, x0
    1800:	str	xzr, [x0, #16]
    1804:	ldr	x0, [sp, #800]
    1808:	ldr	x0, [x0, #64]
    180c:	ldr	x1, [x0, #40]
    1810:	ldr	x0, [sp, #800]
    1814:	ldr	x0, [x0, #64]
    1818:	ldr	w0, [x0, #32]
    181c:	mov	w0, w0
    1820:	lsl	x0, x0, #5
    1824:	add	x0, x1, x0
    1828:	str	xzr, [x0]
    182c:	ldr	x0, [sp, #800]
    1830:	ldr	x0, [x0, #64]
    1834:	ldr	x2, [x0, #40]
    1838:	ldr	x0, [sp, #800]
    183c:	ldr	x0, [x0, #64]
    1840:	ldr	w1, [x0, #32]
    1844:	add	w3, w1, #0x1
    1848:	str	w3, [x0, #32]
    184c:	mov	w0, w1
    1850:	lsl	x0, x0, #5
    1854:	add	x0, x2, x0
    1858:	ldr	x1, [sp, #672]
    185c:	str	x1, [x0, #24]
    1860:	ldr	x0, [sp, #744]
    1864:	ldr	x1, [x0, #40]
    1868:	ldr	x0, [sp, #672]
    186c:	str	x1, [x0, #80]
    1870:	ldr	x0, [sp, #744]
    1874:	ldr	x1, [sp, #672]
    1878:	str	x1, [x0, #40]
    187c:	b	1894 <make_vg+0x14dc>
    1880:	nop
    1884:	b	1894 <make_vg+0x14dc>
    1888:	nop
    188c:	b	1894 <make_vg+0x14dc>
    1890:	nop
    1894:	ldr	w0, [sp, #812]
    1898:	add	w0, w0, #0x1
    189c:	str	w0, [sp, #812]
    18a0:	ldr	w0, [sp, #812]
    18a4:	cmp	w0, #0x3
    18a8:	b.ls	1004 <make_vg+0xc4c>  // b.plast
    18ac:	ldr	x0, [sp, #824]
    18b0:	add	x0, x0, #0x1
    18b4:	str	x0, [sp, #824]
    18b8:	ldr	x1, [sp, #824]
    18bc:	ldr	x0, [sp, #728]
    18c0:	cmp	x1, x0
    18c4:	b.cc	fd0 <make_vg+0xc18>  // b.lo, b.ul, b.last
    18c8:	ldr	x0, [sp, #736]
    18cc:	add	x0, x0, #0x12
    18d0:	str	x0, [sp, #824]
    18d4:	b	20f4 <make_vg+0x1d3c>
    18d8:	add	x0, sp, #0x58
    18dc:	mov	x4, x0
    18e0:	mov	x3, #0x200                 	// #512
    18e4:	mov	x2, #0x0                   	// #0
    18e8:	ldr	x1, [sp, #824]
    18ec:	ldr	x0, [sp, #40]
    18f0:	bl	0 <grub_disk_read>
    18f4:	str	w0, [sp, #724]
    18f8:	ldr	w0, [sp, #724]
    18fc:	cmp	w0, #0x0
    1900:	b.ne	218c <make_vg+0x1dd4>  // b.any
    1904:	str	wzr, [sp, #796]
    1908:	b	20dc <make_vg+0x1d24>
    190c:	str	xzr, [sp, #64]
    1910:	add	x1, sp, #0x58
    1914:	ldr	w0, [sp, #796]
    1918:	lsl	x0, x0, #7
    191c:	add	x3, x1, x0
    1920:	mov	x2, #0x4                   	// #4
    1924:	adrp	x0, 0 <grub_swap_bytes16>
    1928:	add	x0, x0, #0x0
    192c:	ldr	x1, [x0]
    1930:	mov	x0, x3
    1934:	bl	0 <grub_memcmp>
    1938:	cmp	w0, #0x0
    193c:	b.ne	20bc <make_vg+0x1d04>  // b.any
    1940:	ldr	w0, [sp, #796]
    1944:	lsl	x0, x0, #7
    1948:	add	x1, sp, #0x68
    194c:	ldrh	w0, [x1, x0]
    1950:	bl	0 <grub_swap_bytes16>
    1954:	and	w0, w0, #0xffff
    1958:	cmp	w0, #0x0
    195c:	b.eq	1980 <make_vg+0x15c8>  // b.none
    1960:	ldr	w0, [sp, #796]
    1964:	lsl	x0, x0, #7
    1968:	add	x1, sp, #0x68
    196c:	ldrh	w0, [x1, x0]
    1970:	bl	0 <grub_swap_bytes16>
    1974:	and	w0, w0, #0xffff
    1978:	cmp	w0, #0x1
    197c:	b.ne	20c4 <make_vg+0x1d0c>  // b.any
    1980:	ldr	w0, [sp, #796]
    1984:	lsl	x0, x0, #7
    1988:	add	x1, sp, #0x6b
    198c:	ldrb	w0, [x1, x0]
    1990:	cmp	w0, #0x33
    1994:	b.ne	20cc <make_vg+0x1d14>  // b.any
    1998:	str	xzr, [sp, #80]
    199c:	str	xzr, [sp, #72]
    19a0:	add	x1, sp, #0x58
    19a4:	ldr	w0, [sp, #796]
    19a8:	lsl	x0, x0, #7
    19ac:	add	x0, x0, #0x10
    19b0:	add	x0, x1, x0
    19b4:	add	x0, x0, #0x8
    19b8:	str	x0, [sp, #712]
    19bc:	ldr	x0, [sp, #712]
    19c0:	ldrb	w0, [x0]
    19c4:	and	x0, x0, #0xff
    19c8:	add	x0, x0, #0x1
    19cc:	ldr	x1, [sp, #712]
    19d0:	add	x1, x1, x0
    19d4:	add	x2, sp, #0x58
    19d8:	ldr	w0, [sp, #796]
    19dc:	lsl	x0, x0, #7
    19e0:	add	x0, x0, #0x10
    19e4:	add	x0, x2, x0
    19e8:	add	x0, x0, #0x8
    19ec:	add	x0, x0, #0x68
    19f0:	cmp	x1, x0
    19f4:	b.cs	2194 <make_vg+0x1ddc>  // b.hs, b.nlast
    19f8:	ldr	x0, [sp, #712]
    19fc:	ldrb	w0, [x0]
    1a00:	and	x0, x0, #0xff
    1a04:	add	x0, x0, #0x1
    1a08:	ldr	x1, [sp, #712]
    1a0c:	add	x0, x1, x0
    1a10:	str	x0, [sp, #712]
    1a14:	add	x1, sp, #0x58
    1a18:	ldr	w0, [sp, #796]
    1a1c:	lsl	x0, x0, #7
    1a20:	add	x0, x0, #0x10
    1a24:	add	x0, x1, x0
    1a28:	add	x0, x0, #0x8
    1a2c:	add	x0, x0, #0x68
    1a30:	ldr	x1, [sp, #712]
    1a34:	cmp	x1, x0
    1a38:	b.cs	2074 <make_vg+0x1cbc>  // b.hs, b.nlast
    1a3c:	ldr	x0, [sp, #712]
    1a40:	ldrb	w0, [x0]
    1a44:	and	x0, x0, #0xff
    1a48:	add	x0, x0, #0x1
    1a4c:	ldr	x1, [sp, #712]
    1a50:	add	x0, x1, x0
    1a54:	str	x0, [sp, #712]
    1a58:	add	x1, sp, #0x58
    1a5c:	ldr	w0, [sp, #796]
    1a60:	lsl	x0, x0, #7
    1a64:	add	x0, x0, #0x10
    1a68:	add	x0, x1, x0
    1a6c:	add	x0, x0, #0x8
    1a70:	add	x0, x0, #0x68
    1a74:	ldr	x1, [sp, #712]
    1a78:	cmp	x1, x0
    1a7c:	b.cs	207c <make_vg+0x1cc4>  // b.hs, b.nlast
    1a80:	ldr	x0, [sp, #712]
    1a84:	add	x0, x0, #0xc
    1a88:	str	x0, [sp, #712]
    1a8c:	ldr	x0, [sp, #712]
    1a90:	add	x1, x0, #0x10
    1a94:	add	x2, sp, #0x58
    1a98:	ldr	w0, [sp, #796]
    1a9c:	lsl	x0, x0, #7
    1aa0:	add	x0, x0, #0x10
    1aa4:	add	x0, x2, x0
    1aa8:	add	x0, x0, #0x8
    1aac:	add	x0, x0, #0x68
    1ab0:	cmp	x1, x0
    1ab4:	b.cs	2084 <make_vg+0x1ccc>  // b.hs, b.nlast
    1ab8:	mov	x1, #0x8                   	// #8
    1abc:	ldr	x0, [sp, #712]
    1ac0:	bl	118 <read_int>
    1ac4:	str	x0, [sp, #56]
    1ac8:	ldr	x0, [sp, #712]
    1acc:	add	x0, x0, #0x8
    1ad0:	mov	x1, #0x8                   	// #8
    1ad4:	bl	118 <read_int>
    1ad8:	str	x0, [sp, #704]
    1adc:	ldr	x0, [sp, #712]
    1ae0:	add	x0, x0, #0x10
    1ae4:	str	x0, [sp, #712]
    1ae8:	add	x1, sp, #0x58
    1aec:	ldr	w0, [sp, #796]
    1af0:	lsl	x0, x0, #7
    1af4:	add	x0, x0, #0x10
    1af8:	add	x0, x1, x0
    1afc:	add	x0, x0, #0x8
    1b00:	add	x0, x0, #0x68
    1b04:	ldr	x1, [sp, #712]
    1b08:	cmp	x1, x0
    1b0c:	b.cs	208c <make_vg+0x1cd4>  // b.hs, b.nlast
    1b10:	ldr	x0, [sp, #712]
    1b14:	ldrb	w0, [x0]
    1b18:	and	x0, x0, #0xff
    1b1c:	add	x0, x0, #0x1
    1b20:	ldr	x1, [sp, #712]
    1b24:	add	x1, x1, x0
    1b28:	add	x2, sp, #0x58
    1b2c:	ldr	w0, [sp, #796]
    1b30:	lsl	x0, x0, #7
    1b34:	add	x0, x0, #0x10
    1b38:	add	x0, x2, x0
    1b3c:	add	x0, x0, #0x8
    1b40:	add	x0, x0, #0x68
    1b44:	cmp	x1, x0
    1b48:	b.cs	208c <make_vg+0x1cd4>  // b.hs, b.nlast
    1b4c:	ldr	x0, [sp, #712]
    1b50:	add	x2, x0, #0x1
    1b54:	ldr	x0, [sp, #712]
    1b58:	ldrb	w0, [x0]
    1b5c:	and	x0, x0, #0xff
    1b60:	mov	x1, x0
    1b64:	mov	x0, x2
    1b68:	bl	118 <read_int>
    1b6c:	str	x0, [sp, #696]
    1b70:	ldr	x0, [sp, #712]
    1b74:	ldrb	w0, [x0]
    1b78:	and	x0, x0, #0xff
    1b7c:	add	x0, x0, #0x1
    1b80:	ldr	x1, [sp, #712]
    1b84:	add	x0, x1, x0
    1b88:	str	x0, [sp, #712]
    1b8c:	add	x1, sp, #0x58
    1b90:	ldr	w0, [sp, #796]
    1b94:	lsl	x0, x0, #7
    1b98:	add	x0, x0, #0x10
    1b9c:	add	x0, x1, x0
    1ba0:	add	x0, x0, #0x8
    1ba4:	add	x0, x0, #0x68
    1ba8:	ldr	x1, [sp, #712]
    1bac:	cmp	x1, x0
    1bb0:	b.cs	2094 <make_vg+0x1cdc>  // b.hs, b.nlast
    1bb4:	ldr	x0, [sp, #712]
    1bb8:	ldrb	w0, [x0]
    1bbc:	and	x0, x0, #0xff
    1bc0:	add	x0, x0, #0x1
    1bc4:	ldr	x1, [sp, #712]
    1bc8:	add	x1, x1, x0
    1bcc:	add	x2, sp, #0x58
    1bd0:	ldr	w0, [sp, #796]
    1bd4:	lsl	x0, x0, #7
    1bd8:	add	x0, x0, #0x10
    1bdc:	add	x0, x2, x0
    1be0:	add	x0, x0, #0x8
    1be4:	add	x0, x0, #0x68
    1be8:	cmp	x1, x0
    1bec:	b.cs	2094 <make_vg+0x1cdc>  // b.hs, b.nlast
    1bf0:	ldr	x0, [sp, #744]
    1bf4:	ldr	x0, [x0, #40]
    1bf8:	str	x0, [sp, #784]
    1bfc:	b	1c60 <make_vg+0x18a8>
    1c00:	ldr	x0, [sp, #784]
    1c04:	ldr	x0, [x0, #88]
    1c08:	ldrb	w1, [x0]
    1c0c:	ldr	x0, [sp, #712]
    1c10:	ldrb	w0, [x0]
    1c14:	cmp	w1, w0
    1c18:	b.ne	1c54 <make_vg+0x189c>  // b.any
    1c1c:	ldr	x0, [sp, #712]
    1c20:	add	x3, x0, #0x1
    1c24:	ldr	x0, [sp, #784]
    1c28:	ldr	x0, [x0, #88]
    1c2c:	add	x1, x0, #0x1
    1c30:	ldr	x0, [sp, #784]
    1c34:	ldr	x0, [x0, #88]
    1c38:	ldrb	w0, [x0]
    1c3c:	and	x0, x0, #0xff
    1c40:	mov	x2, x0
    1c44:	mov	x0, x3
    1c48:	bl	0 <grub_memcmp>
    1c4c:	cmp	w0, #0x0
    1c50:	b.eq	1c70 <make_vg+0x18b8>  // b.none
    1c54:	ldr	x0, [sp, #784]
    1c58:	ldr	x0, [x0, #80]
    1c5c:	str	x0, [sp, #784]
    1c60:	ldr	x0, [sp, #784]
    1c64:	cmp	x0, #0x0
    1c68:	b.ne	1c00 <make_vg+0x1848>  // b.any
    1c6c:	b	20d0 <make_vg+0x1d18>
    1c70:	nop
    1c74:	add	x1, sp, #0x58
    1c78:	ldr	w0, [sp, #796]
    1c7c:	lsl	x0, x0, #7
    1c80:	add	x0, x0, #0x10
    1c84:	add	x0, x1, x0
    1c88:	add	x0, x0, #0x8
    1c8c:	add	x0, x0, #0x68
    1c90:	ldr	x1, [sp, #712]
    1c94:	cmp	x1, x0
    1c98:	b.cs	209c <make_vg+0x1ce4>  // b.hs, b.nlast
    1c9c:	ldr	x0, [sp, #712]
    1ca0:	ldrb	w0, [x0]
    1ca4:	and	x0, x0, #0xff
    1ca8:	add	x0, x0, #0x1
    1cac:	ldr	x1, [sp, #712]
    1cb0:	add	x1, x1, x0
    1cb4:	add	x2, sp, #0x58
    1cb8:	ldr	w0, [sp, #796]
    1cbc:	lsl	x0, x0, #7
    1cc0:	add	x0, x0, #0x10
    1cc4:	add	x0, x2, x0
    1cc8:	add	x0, x0, #0x8
    1ccc:	add	x0, x0, #0x68
    1cd0:	cmp	x1, x0
    1cd4:	b.cs	209c <make_vg+0x1ce4>  // b.hs, b.nlast
    1cd8:	ldr	x0, [sp, #712]
    1cdc:	ldrb	w0, [x0]
    1ce0:	and	x0, x0, #0xff
    1ce4:	add	x0, x0, #0x1
    1ce8:	ldr	x1, [sp, #712]
    1cec:	add	x0, x1, x0
    1cf0:	str	x0, [sp, #712]
    1cf4:	ldr	x0, [sp, #744]
    1cf8:	ldr	x0, [x0, #32]
    1cfc:	str	x0, [sp, #776]
    1d00:	b	1d68 <make_vg+0x19b0>
    1d04:	ldr	x0, [sp, #776]
    1d08:	ldr	x0, [x0, #64]
    1d0c:	ldrb	w1, [x0]
    1d10:	ldr	x0, [sp, #712]
    1d14:	ldrb	w0, [x0]
    1d18:	cmp	w1, w0
    1d1c:	b.ne	1d5c <make_vg+0x19a4>  // b.any
    1d20:	ldr	x0, [sp, #776]
    1d24:	ldr	x0, [x0, #64]
    1d28:	add	x3, x0, #0x1
    1d2c:	ldr	x0, [sp, #712]
    1d30:	add	x1, x0, #0x1
    1d34:	ldr	x0, [sp, #712]
    1d38:	ldrb	w0, [x0]
    1d3c:	and	x0, x0, #0xff
    1d40:	mov	x2, x0
    1d44:	mov	x0, x3
    1d48:	bl	0 <grub_memcmp>
    1d4c:	cmp	w0, #0x0
    1d50:	b.ne	1d5c <make_vg+0x19a4>  // b.any
    1d54:	ldr	x0, [sp, #776]
    1d58:	str	x0, [sp, #72]
    1d5c:	ldr	x0, [sp, #776]
    1d60:	ldr	x0, [x0, #56]
    1d64:	str	x0, [sp, #776]
    1d68:	ldr	x0, [sp, #776]
    1d6c:	cmp	x0, #0x0
    1d70:	b.ne	1d04 <make_vg+0x194c>  // b.any
    1d74:	ldr	x0, [sp, #784]
    1d78:	ldr	x0, [x0, #32]
    1d7c:	cmp	x0, #0x1
    1d80:	b.ne	1e4c <make_vg+0x1a94>  // b.any
    1d84:	ldr	x0, [sp, #712]
    1d88:	ldrb	w0, [x0]
    1d8c:	and	x0, x0, #0xff
    1d90:	add	x0, x0, #0x1
    1d94:	ldr	x1, [sp, #712]
    1d98:	add	x0, x1, x0
    1d9c:	str	x0, [sp, #712]
    1da0:	ldr	x0, [sp, #712]
    1da4:	ldrb	w0, [x0]
    1da8:	and	x0, x0, #0xff
    1dac:	add	x0, x0, #0x1
    1db0:	ldr	x1, [sp, #712]
    1db4:	add	x1, x1, x0
    1db8:	add	x2, sp, #0x58
    1dbc:	ldr	w0, [sp, #796]
    1dc0:	lsl	x0, x0, #7
    1dc4:	add	x0, x0, #0x10
    1dc8:	add	x0, x2, x0
    1dcc:	add	x0, x0, #0x8
    1dd0:	add	x0, x0, #0x68
    1dd4:	cmp	x1, x0
    1dd8:	b.cs	20a4 <make_vg+0x1cec>  // b.hs, b.nlast
    1ddc:	ldr	x0, [sp, #712]
    1de0:	add	x2, x0, #0x1
    1de4:	ldr	x0, [sp, #712]
    1de8:	ldrb	w0, [x0]
    1dec:	and	x0, x0, #0xff
    1df0:	mov	x1, x0
    1df4:	mov	x0, x2
    1df8:	bl	118 <read_int>
    1dfc:	str	w0, [sp, #684]
    1e00:	ldr	x0, [sp, #784]
    1e04:	ldr	x0, [x0, #64]
    1e08:	ldr	w0, [x0, #32]
    1e0c:	ldr	w1, [sp, #684]
    1e10:	cmp	w1, w0
    1e14:	b.cs	20d0 <make_vg+0x1d18>  // b.hs, b.nlast
    1e18:	ldr	x0, [sp, #784]
    1e1c:	ldr	x0, [x0, #64]
    1e20:	ldr	x1, [x0, #40]
    1e24:	ldr	w0, [sp, #684]
    1e28:	lsl	x0, x0, #5
    1e2c:	add	x0, x1, x0
    1e30:	mov	x3, x0
    1e34:	add	x2, sp, #0x38
    1e38:	ldp	x0, x1, [x2]
    1e3c:	stp	x0, x1, [x3]
    1e40:	ldp	x0, x1, [x2, #16]
    1e44:	stp	x0, x1, [x3, #16]
    1e48:	b	20d0 <make_vg+0x1d18>
    1e4c:	ldr	x0, [sp, #784]
    1e50:	ldr	x1, [x0, #32]
    1e54:	ldr	x0, [sp, #784]
    1e58:	ldr	w0, [x0, #28]
    1e5c:	mov	w0, w0
    1e60:	cmp	x1, x0
    1e64:	b.ne	1ec4 <make_vg+0x1b0c>  // b.any
    1e68:	ldr	x0, [sp, #784]
    1e6c:	ldr	x0, [x0, #32]
    1e70:	lsl	x1, x0, #1
    1e74:	ldr	x0, [sp, #784]
    1e78:	str	x1, [x0, #32]
    1e7c:	ldr	x0, [sp, #784]
    1e80:	ldr	x2, [x0, #64]
    1e84:	ldr	x0, [sp, #784]
    1e88:	ldr	x1, [x0, #32]
    1e8c:	mov	x0, x1
    1e90:	lsl	x0, x0, #3
    1e94:	sub	x0, x0, x1
    1e98:	lsl	x0, x0, #3
    1e9c:	mov	x1, x0
    1ea0:	mov	x0, x2
    1ea4:	bl	0 <grub_realloc>
    1ea8:	str	x0, [sp, #688]
    1eac:	ldr	x0, [sp, #688]
    1eb0:	cmp	x0, #0x0
    1eb4:	b.eq	20ac <make_vg+0x1cf4>  // b.none
    1eb8:	ldr	x0, [sp, #784]
    1ebc:	ldr	x1, [sp, #688]
    1ec0:	str	x1, [x0, #64]
    1ec4:	ldr	x0, [sp, #784]
    1ec8:	ldr	x2, [x0, #64]
    1ecc:	ldr	x0, [sp, #784]
    1ed0:	ldr	w0, [x0, #28]
    1ed4:	mov	w1, w0
    1ed8:	mov	x0, x1
    1edc:	lsl	x0, x0, #3
    1ee0:	sub	x0, x0, x1
    1ee4:	lsl	x0, x0, #3
    1ee8:	add	x0, x2, x0
    1eec:	ldr	x1, [sp, #704]
    1ef0:	str	x1, [x0]
    1ef4:	ldr	x0, [sp, #784]
    1ef8:	ldr	x2, [x0, #64]
    1efc:	ldr	x0, [sp, #784]
    1f00:	ldr	w0, [x0, #28]
    1f04:	mov	w1, w0
    1f08:	mov	x0, x1
    1f0c:	lsl	x0, x0, #3
    1f10:	sub	x0, x0, x1
    1f14:	lsl	x0, x0, #3
    1f18:	add	x0, x2, x0
    1f1c:	ldr	x1, [sp, #696]
    1f20:	str	x1, [x0, #8]
    1f24:	ldr	x0, [sp, #784]
    1f28:	ldr	x2, [x0, #64]
    1f2c:	ldr	x0, [sp, #784]
    1f30:	ldr	w0, [x0, #28]
    1f34:	mov	w1, w0
    1f38:	mov	x0, x1
    1f3c:	lsl	x0, x0, #3
    1f40:	sub	x0, x0, x1
    1f44:	lsl	x0, x0, #3
    1f48:	add	x0, x2, x0
    1f4c:	str	wzr, [x0, #16]
    1f50:	ldr	x0, [sp, #784]
    1f54:	ldr	x2, [x0, #64]
    1f58:	ldr	x0, [sp, #784]
    1f5c:	ldr	w0, [x0, #28]
    1f60:	mov	w1, w0
    1f64:	mov	x0, x1
    1f68:	lsl	x0, x0, #3
    1f6c:	sub	x0, x0, x1
    1f70:	lsl	x0, x0, #3
    1f74:	add	x0, x2, x0
    1f78:	mov	w1, #0x1                   	// #1
    1f7c:	str	w1, [x0, #32]
    1f80:	ldr	x0, [sp, #784]
    1f84:	ldr	x2, [x0, #64]
    1f88:	ldr	x0, [sp, #784]
    1f8c:	ldr	w0, [x0, #28]
    1f90:	mov	w1, w0
    1f94:	mov	x0, x1
    1f98:	lsl	x0, x0, #3
    1f9c:	sub	x0, x0, x1
    1fa0:	lsl	x0, x0, #3
    1fa4:	add	x0, x2, x0
    1fa8:	mov	w1, #0x1                   	// #1
    1fac:	str	w1, [x0, #36]
    1fb0:	ldr	x0, [sp, #784]
    1fb4:	ldr	x2, [x0, #64]
    1fb8:	ldr	x0, [sp, #784]
    1fbc:	ldr	w0, [x0, #28]
    1fc0:	mov	w1, w0
    1fc4:	mov	x0, x1
    1fc8:	lsl	x0, x0, #3
    1fcc:	sub	x0, x0, x1
    1fd0:	lsl	x0, x0, #3
    1fd4:	add	x19, x2, x0
    1fd8:	mov	x0, #0x20                  	// #32
    1fdc:	bl	0 <grub_malloc>
    1fe0:	str	x0, [x19, #40]
    1fe4:	ldr	x0, [sp, #784]
    1fe8:	ldr	x2, [x0, #64]
    1fec:	ldr	x0, [sp, #784]
    1ff0:	ldr	w0, [x0, #28]
    1ff4:	mov	w1, w0
    1ff8:	mov	x0, x1
    1ffc:	lsl	x0, x0, #3
    2000:	sub	x0, x0, x1
    2004:	lsl	x0, x0, #3
    2008:	add	x0, x2, x0
    200c:	ldr	x0, [x0, #40]
    2010:	cmp	x0, #0x0
    2014:	b.eq	20b4 <make_vg+0x1cfc>  // b.none
    2018:	ldr	x0, [sp, #784]
    201c:	ldr	x2, [x0, #64]
    2020:	ldr	x0, [sp, #784]
    2024:	ldr	w0, [x0, #28]
    2028:	mov	w1, w0
    202c:	mov	x0, x1
    2030:	lsl	x0, x0, #3
    2034:	sub	x0, x0, x1
    2038:	lsl	x0, x0, #3
    203c:	add	x0, x2, x0
    2040:	ldr	x0, [x0, #40]
    2044:	mov	x3, x0
    2048:	add	x2, sp, #0x38
    204c:	ldp	x0, x1, [x2]
    2050:	stp	x0, x1, [x3]
    2054:	ldp	x0, x1, [x2, #16]
    2058:	stp	x0, x1, [x3, #16]
    205c:	ldr	x0, [sp, #784]
    2060:	ldr	w0, [x0, #28]
    2064:	add	w1, w0, #0x1
    2068:	ldr	x0, [sp, #784]
    206c:	str	w1, [x0, #28]
    2070:	b	20d0 <make_vg+0x1d18>
    2074:	nop
    2078:	b	218c <make_vg+0x1dd4>
    207c:	nop
    2080:	b	218c <make_vg+0x1dd4>
    2084:	nop
    2088:	b	218c <make_vg+0x1dd4>
    208c:	nop
    2090:	b	218c <make_vg+0x1dd4>
    2094:	nop
    2098:	b	218c <make_vg+0x1dd4>
    209c:	nop
    20a0:	b	218c <make_vg+0x1dd4>
    20a4:	nop
    20a8:	b	218c <make_vg+0x1dd4>
    20ac:	nop
    20b0:	b	218c <make_vg+0x1dd4>
    20b4:	nop
    20b8:	b	218c <make_vg+0x1dd4>
    20bc:	nop
    20c0:	b	20d0 <make_vg+0x1d18>
    20c4:	nop
    20c8:	b	20d0 <make_vg+0x1d18>
    20cc:	nop
    20d0:	ldr	w0, [sp, #796]
    20d4:	add	w0, w0, #0x1
    20d8:	str	w0, [sp, #796]
    20dc:	ldr	w0, [sp, #796]
    20e0:	cmp	w0, #0x3
    20e4:	b.ls	190c <make_vg+0x1554>  // b.plast
    20e8:	ldr	x0, [sp, #824]
    20ec:	add	x0, x0, #0x1
    20f0:	str	x0, [sp, #824]
    20f4:	ldr	x1, [sp, #824]
    20f8:	ldr	x0, [sp, #728]
    20fc:	cmp	x1, x0
    2100:	b.cc	18d8 <make_vg+0x1520>  // b.lo, b.ul, b.last
    2104:	ldr	x0, [sp, #744]
    2108:	bl	0 <grub_diskfilter_vg_register>
    210c:	cmp	w0, #0x0
    2110:	b.ne	219c <make_vg+0x1de4>  // b.any
    2114:	ldr	x0, [sp, #744]
    2118:	b	22b4 <make_vg+0x1efc>
    211c:	nop
    2120:	b	21a0 <make_vg+0x1de8>
    2124:	nop
    2128:	b	21a0 <make_vg+0x1de8>
    212c:	nop
    2130:	b	21a0 <make_vg+0x1de8>
    2134:	nop
    2138:	b	21a0 <make_vg+0x1de8>
    213c:	nop
    2140:	b	21a0 <make_vg+0x1de8>
    2144:	nop
    2148:	b	21a0 <make_vg+0x1de8>
    214c:	nop
    2150:	b	21a0 <make_vg+0x1de8>
    2154:	nop
    2158:	b	21a0 <make_vg+0x1de8>
    215c:	nop
    2160:	b	21a0 <make_vg+0x1de8>
    2164:	nop
    2168:	b	21a0 <make_vg+0x1de8>
    216c:	nop
    2170:	b	21a0 <make_vg+0x1de8>
    2174:	nop
    2178:	b	21a0 <make_vg+0x1de8>
    217c:	nop
    2180:	b	21a0 <make_vg+0x1de8>
    2184:	nop
    2188:	b	21a0 <make_vg+0x1de8>
    218c:	nop
    2190:	b	21a0 <make_vg+0x1de8>
    2194:	nop
    2198:	b	21a0 <make_vg+0x1de8>
    219c:	nop
    21a0:	ldr	x0, [sp, #744]
    21a4:	ldr	x0, [x0, #40]
    21a8:	str	x0, [sp, #768]
    21ac:	b	224c <make_vg+0x1e94>
    21b0:	str	wzr, [sp, #756]
    21b4:	b	21ec <make_vg+0x1e34>
    21b8:	ldr	x0, [sp, #768]
    21bc:	ldr	x2, [x0, #64]
    21c0:	ldr	w1, [sp, #756]
    21c4:	mov	x0, x1
    21c8:	lsl	x0, x0, #3
    21cc:	sub	x0, x0, x1
    21d0:	lsl	x0, x0, #3
    21d4:	add	x0, x2, x0
    21d8:	ldr	x0, [x0, #40]
    21dc:	bl	0 <grub_free>
    21e0:	ldr	w0, [sp, #756]
    21e4:	add	w0, w0, #0x1
    21e8:	str	w0, [sp, #756]
    21ec:	ldr	x0, [sp, #768]
    21f0:	ldr	w0, [x0, #28]
    21f4:	ldr	w1, [sp, #756]
    21f8:	cmp	w1, w0
    21fc:	b.cc	21b8 <make_vg+0x1e00>  // b.lo, b.ul, b.last
    2200:	ldr	x0, [sp, #768]
    2204:	ldr	x0, [x0, #80]
    2208:	str	x0, [sp, #600]
    220c:	ldr	x0, [sp, #768]
    2210:	ldr	x0, [x0, #64]
    2214:	bl	0 <grub_free>
    2218:	ldr	x0, [sp, #768]
    221c:	ldr	x0, [x0, #88]
    2220:	bl	0 <grub_free>
    2224:	ldr	x0, [sp, #768]
    2228:	ldr	x0, [x0, #16]
    222c:	bl	0 <grub_free>
    2230:	ldr	x0, [sp, #768]
    2234:	ldr	x0, [x0]
    2238:	bl	0 <grub_free>
    223c:	ldr	x0, [sp, #768]
    2240:	bl	0 <grub_free>
    2244:	ldr	x0, [sp, #600]
    2248:	str	x0, [sp, #768]
    224c:	ldr	x0, [sp, #768]
    2250:	cmp	x0, #0x0
    2254:	b.ne	21b0 <make_vg+0x1df8>  // b.any
    2258:	ldr	x0, [sp, #744]
    225c:	ldr	x0, [x0, #32]
    2260:	str	x0, [sp, #760]
    2264:	b	2290 <make_vg+0x1ed8>
    2268:	ldr	x0, [sp, #760]
    226c:	ldr	x0, [x0, #56]
    2270:	str	x0, [sp, #608]
    2274:	ldr	x0, [sp, #760]
    2278:	ldr	x0, [x0]
    227c:	bl	0 <grub_free>
    2280:	ldr	x0, [sp, #760]
    2284:	bl	0 <grub_free>
    2288:	ldr	x0, [sp, #608]
    228c:	str	x0, [sp, #760]
    2290:	ldr	x0, [sp, #760]
    2294:	cmp	x0, #0x0
    2298:	b.ne	2268 <make_vg+0x1eb0>  // b.any
    229c:	ldr	x0, [sp, #744]
    22a0:	ldr	x0, [x0]
    22a4:	bl	0 <grub_free>
    22a8:	ldr	x0, [sp, #744]
    22ac:	bl	0 <grub_free>
    22b0:	mov	x0, #0x0                   	// #0
    22b4:	ldr	x19, [sp, #16]
    22b8:	ldp	x29, x30, [sp]
    22bc:	add	sp, sp, #0x340
    22c0:	ret
    22c4:	nop
	...

00000000000022d8 <grub_ldm_detect>:
    22d8:	stp	x29, x30, [sp, #-416]!
    22dc:	mov	x29, sp
    22e0:	str	x0, [sp, #40]
    22e4:	str	x1, [sp, #32]
    22e8:	str	x2, [sp, #24]
    22ec:	ldr	x0, [sp, #40]
    22f0:	bl	1e8 <msdos_has_ldm_partition>
    22f4:	str	w0, [sp, #380]
    22f8:	str	wzr, [sp, #404]
    22fc:	b	2474 <grub_ldm_detect+0x19c>
    2300:	mov	x0, #0x6                   	// #6
    2304:	str	x0, [sp, #392]
    2308:	ldr	w0, [sp, #404]
    230c:	cmp	w0, #0x2
    2310:	b.eq	2398 <grub_ldm_detect+0xc0>  // b.none
    2314:	ldr	w0, [sp, #404]
    2318:	cmp	w0, #0x2
    231c:	b.gt	23b4 <grub_ldm_detect+0xdc>
    2320:	ldr	w0, [sp, #404]
    2324:	cmp	w0, #0x0
    2328:	b.eq	233c <grub_ldm_detect+0x64>  // b.none
    232c:	ldr	w0, [sp, #404]
    2330:	cmp	w0, #0x1
    2334:	b.eq	2354 <grub_ldm_detect+0x7c>  // b.none
    2338:	b	23b4 <grub_ldm_detect+0xdc>
    233c:	ldr	w0, [sp, #380]
    2340:	cmp	w0, #0x0
    2344:	b.eq	244c <grub_ldm_detect+0x174>  // b.none
    2348:	mov	x0, #0x6                   	// #6
    234c:	str	x0, [sp, #392]
    2350:	b	23b4 <grub_ldm_detect+0xdc>
    2354:	ldr	w0, [sp, #380]
    2358:	cmp	w0, #0x0
    235c:	b.eq	2454 <grub_ldm_detect+0x17c>  // b.none
    2360:	ldr	x0, [sp, #40]
    2364:	ldr	x0, [x0, #40]
    2368:	cmp	x0, #0x0
    236c:	b.ne	2454 <grub_ldm_detect+0x17c>  // b.any
    2370:	ldr	x0, [sp, #40]
    2374:	bl	0 <grub_disk_get_size>
    2378:	str	x0, [sp, #392]
    237c:	ldr	x0, [sp, #392]
    2380:	cmn	x0, #0x1
    2384:	b.eq	245c <grub_ldm_detect+0x184>  // b.none
    2388:	ldr	x0, [sp, #392]
    238c:	sub	x0, x0, #0x1
    2390:	str	x0, [sp, #392]
    2394:	b	23b4 <grub_ldm_detect+0xdc>
    2398:	ldr	x0, [sp, #40]
    239c:	bl	348 <gpt_ldm_sector>
    23a0:	str	x0, [sp, #392]
    23a4:	ldr	x0, [sp, #392]
    23a8:	cmp	x0, #0x0
    23ac:	b.eq	2464 <grub_ldm_detect+0x18c>  // b.none
    23b0:	nop
    23b4:	add	x0, sp, #0x38
    23b8:	mov	x4, x0
    23bc:	mov	x3, #0x13b                 	// #315
    23c0:	mov	x2, #0x0                   	// #0
    23c4:	ldr	x1, [sp, #392]
    23c8:	ldr	x0, [sp, #40]
    23cc:	bl	0 <grub_disk_read>
    23d0:	str	w0, [sp, #376]
    23d4:	ldr	w0, [sp, #376]
    23d8:	cmp	w0, #0x0
    23dc:	b.eq	23e8 <grub_ldm_detect+0x110>  // b.none
    23e0:	mov	x0, #0x0                   	// #0
    23e4:	b	25b8 <grub_ldm_detect+0x2e0>
    23e8:	add	x3, sp, #0x38
    23ec:	mov	x2, #0x8                   	// #8
    23f0:	adrp	x0, 0 <grub_swap_bytes16>
    23f4:	add	x0, x0, #0x0
    23f8:	ldr	x1, [x0]
    23fc:	mov	x0, x3
    2400:	bl	0 <grub_memcmp>
    2404:	cmp	w0, #0x0
    2408:	b.ne	2468 <grub_ldm_detect+0x190>  // b.any
    240c:	ldrh	w0, [sp, #68]
    2410:	bl	0 <grub_swap_bytes16>
    2414:	and	w0, w0, #0xffff
    2418:	cmp	w0, #0x2
    241c:	b.ne	2468 <grub_ldm_detect+0x190>  // b.any
    2420:	ldrh	w0, [sp, #70]
    2424:	bl	0 <grub_swap_bytes16>
    2428:	and	w0, w0, #0xffff
    242c:	cmp	w0, #0xa
    2430:	b.ls	2468 <grub_ldm_detect+0x190>  // b.plast
    2434:	ldrh	w0, [sp, #70]
    2438:	bl	0 <grub_swap_bytes16>
    243c:	and	w0, w0, #0xffff
    2440:	cmp	w0, #0xc
    2444:	b.ls	2484 <grub_ldm_detect+0x1ac>  // b.plast
    2448:	b	2468 <grub_ldm_detect+0x190>
    244c:	nop
    2450:	b	2468 <grub_ldm_detect+0x190>
    2454:	nop
    2458:	b	2468 <grub_ldm_detect+0x190>
    245c:	nop
    2460:	b	2468 <grub_ldm_detect+0x190>
    2464:	nop
    2468:	ldr	w0, [sp, #404]
    246c:	add	w0, w0, #0x1
    2470:	str	w0, [sp, #404]
    2474:	ldr	w0, [sp, #404]
    2478:	cmp	w0, #0x2
    247c:	b.le	2300 <grub_ldm_detect+0x28>
    2480:	b	2488 <grub_ldm_detect+0x1b0>
    2484:	nop
    2488:	ldr	w0, [sp, #404]
    248c:	cmp	w0, #0x3
    2490:	b.ne	249c <grub_ldm_detect+0x1c4>  // b.any
    2494:	mov	x0, #0x0                   	// #0
    2498:	b	25b8 <grub_ldm_detect+0x2e0>
    249c:	mov	x0, #0x41                  	// #65
    24a0:	bl	0 <grub_malloc>
    24a4:	mov	x1, x0
    24a8:	ldr	x0, [sp, #32]
    24ac:	str	x1, [x0]
    24b0:	ldr	x0, [sp, #32]
    24b4:	ldr	x0, [x0]
    24b8:	cmp	x0, #0x0
    24bc:	b.ne	24c8 <grub_ldm_detect+0x1f0>  // b.any
    24c0:	mov	x0, #0x0                   	// #0
    24c4:	b	25b8 <grub_ldm_detect+0x2e0>
    24c8:	ldr	x0, [sp, #32]
    24cc:	ldr	x3, [x0]
    24d0:	add	x0, sp, #0x38
    24d4:	add	x0, x0, #0x30
    24d8:	mov	x2, #0x40                  	// #64
    24dc:	mov	x1, x0
    24e0:	mov	x0, x3
    24e4:	bl	50 <grub_memcpy>
    24e8:	ldr	x0, [sp, #32]
    24ec:	ldr	x0, [x0]
    24f0:	add	x0, x0, #0x40
    24f4:	strb	wzr, [x0]
    24f8:	ldr	x0, [sp, #32]
    24fc:	ldr	x0, [x0]
    2500:	bl	0 <grub_strlen>
    2504:	mov	x1, x0
    2508:	ldr	x0, [sp, #32]
    250c:	str	x1, [x0, #8]
    2510:	add	x0, sp, #0x200
    2514:	ldur	x0, [x0, #-173]
    2518:	bl	38 <grub_swap_bytes64>
    251c:	mov	x1, x0
    2520:	ldr	x0, [sp, #24]
    2524:	str	x1, [x0]
    2528:	str	xzr, [sp, #384]
    252c:	b	253c <grub_ldm_detect+0x264>
    2530:	ldr	x0, [sp, #384]
    2534:	add	x0, x0, #0x1
    2538:	str	x0, [sp, #384]
    253c:	ldr	x0, [sp, #384]
    2540:	cmp	x0, #0x3f
    2544:	b.hi	255c <grub_ldm_detect+0x284>  // b.pmore
    2548:	ldr	x0, [sp, #384]
    254c:	add	x1, sp, #0xe8
    2550:	ldrb	w0, [x1, x0]
    2554:	cmp	w0, #0x0
    2558:	b.ne	2530 <grub_ldm_detect+0x258>  // b.any
    255c:	add	x0, sp, #0x38
    2560:	add	x0, x0, #0xb0
    2564:	mov	x1, x0
    2568:	ldr	x0, [sp, #384]
    256c:	bl	0 <grub_diskfilter_get_vg_by_uuid>
    2570:	str	x0, [sp, #408]
    2574:	ldr	x0, [sp, #408]
    2578:	cmp	x0, #0x0
    257c:	b.ne	2594 <grub_ldm_detect+0x2bc>  // b.any
    2580:	add	x0, sp, #0x38
    2584:	mov	x1, x0
    2588:	ldr	x0, [sp, #40]
    258c:	bl	3b8 <make_vg>
    2590:	str	x0, [sp, #408]
    2594:	ldr	x0, [sp, #408]
    2598:	cmp	x0, #0x0
    259c:	b.ne	25b4 <grub_ldm_detect+0x2dc>  // b.any
    25a0:	ldr	x0, [sp, #32]
    25a4:	ldr	x0, [x0]
    25a8:	bl	0 <grub_free>
    25ac:	mov	x0, #0x0                   	// #0
    25b0:	b	25b8 <grub_ldm_detect+0x2e0>
    25b4:	ldr	x0, [sp, #408]
    25b8:	ldp	x29, x30, [sp], #416
    25bc:	ret
	...

00000000000025c8 <grub_mod_init>:
    25c8:	stp	x29, x30, [sp, #-32]!
    25cc:	mov	x29, sp
    25d0:	str	x0, [sp, #24]
    25d4:	adrp	x0, 0 <grub_swap_bytes16>
    25d8:	add	x0, x0, #0x0
    25dc:	ldr	x0, [x0]
    25e0:	bl	7c <grub_diskfilter_register_back>
    25e4:	nop
    25e8:	ldp	x29, x30, [sp], #32
    25ec:	ret
	...

00000000000025f8 <grub_mod_fini>:
    25f8:	stp	x29, x30, [sp, #-16]!
    25fc:	mov	x29, sp
    2600:	adrp	x0, 0 <grub_swap_bytes16>
    2604:	add	x0, x0, #0x0
    2608:	ldr	x0, [x0]
    260c:	bl	f8 <grub_diskfilter_unregister>
    2610:	nop
    2614:	ldp	x29, x30, [sp], #16
    2618:	ret
    261c:	nop
	...
