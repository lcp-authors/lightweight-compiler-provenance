
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libman-2.9.0.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

000000000000a690 <.init>:
    a690:	stp	x29, x30, [sp, #-16]!
    a694:	mov	x29, sp
    a698:	bl	b6d0 <xgetcwd@plt+0x10>
    a69c:	ldp	x29, x30, [sp], #16
    a6a0:	ret

Disassembly of section .plt:

000000000000a6b0 <base_len@plt-0x20>:
    a6b0:	stp	x16, x30, [sp, #-16]!
    a6b4:	adrp	x16, 40000 <vasnprintf@@Base+0x1a170>
    a6b8:	ldr	x17, [x16, #4088]
    a6bc:	add	x16, x16, #0xff8
    a6c0:	br	x17
    a6c4:	nop
    a6c8:	nop
    a6cc:	nop

000000000000a6d0 <base_len@plt>:
    a6d0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a6d4:	ldr	x17, [x16]
    a6d8:	add	x16, x16, #0x0
    a6dc:	br	x17

000000000000a6e0 <mbrtowc@plt>:
    a6e0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a6e4:	ldr	x17, [x16, #8]
    a6e8:	add	x16, x16, #0x8
    a6ec:	br	x17

000000000000a6f0 <memcpy@plt>:
    a6f0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a6f4:	ldr	x17, [x16, #16]
    a6f8:	add	x16, x16, #0x10
    a6fc:	br	x17

000000000000a700 <memmove@plt>:
    a700:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a704:	ldr	x17, [x16, #24]
    a708:	add	x16, x16, #0x18
    a70c:	br	x17

000000000000a710 <pthread_rwlockattr_init@plt>:
    a710:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a714:	ldr	x17, [x16, #32]
    a718:	add	x16, x16, #0x20
    a71c:	br	x17

000000000000a720 <gl_list_nx_create_empty@plt>:
    a720:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a724:	ldr	x17, [x16, #40]
    a728:	add	x16, x16, #0x28
    a72c:	br	x17

000000000000a730 <_exit@plt>:
    a730:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a734:	ldr	x17, [x16, #48]
    a738:	add	x16, x16, #0x30
    a73c:	br	x17

000000000000a740 <getcwd@plt>:
    a740:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a744:	ldr	x17, [x16, #56]
    a748:	add	x16, x16, #0x38
    a74c:	br	x17

000000000000a750 <same_nameat@plt>:
    a750:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a754:	ldr	x17, [x16, #64]
    a758:	add	x16, x16, #0x40
    a75c:	br	x17

000000000000a760 <fwrite_unlocked@plt>:
    a760:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a764:	ldr	x17, [x16, #72]
    a768:	add	x16, x16, #0x48
    a76c:	br	x17

000000000000a770 <get_canonical_charset_name@plt>:
    a770:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a774:	ldr	x17, [x16, #80]
    a778:	add	x16, x16, #0x50
    a77c:	br	x17

000000000000a780 <strlen@plt>:
    a780:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a784:	ldr	x17, [x16, #88]
    a788:	add	x16, x16, #0x58
    a78c:	br	x17

000000000000a790 <fputs@plt>:
    a790:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a794:	ldr	x17, [x16, #96]
    a798:	add	x16, x16, #0x60
    a79c:	br	x17

000000000000a7a0 <gl_list_nx_add_last@plt>:
    a7a0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a7a4:	ldr	x17, [x16, #104]
    a7a8:	add	x16, x16, #0x68
    a7ac:	br	x17

000000000000a7b0 <exit@plt>:
    a7b0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a7b4:	ldr	x17, [x16, #112]
    a7b8:	add	x16, x16, #0x70
    a7bc:	br	x17

000000000000a7c0 <error@plt>:
    a7c0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a7c4:	ldr	x17, [x16, #120]
    a7c8:	add	x16, x16, #0x78
    a7cc:	br	x17

000000000000a7d0 <pthread_mutexattr_settype@plt>:
    a7d0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a7d4:	ldr	x17, [x16, #128]
    a7d8:	add	x16, x16, #0x80
    a7dc:	br	x17

000000000000a7e0 <fchdir@plt>:
    a7e0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a7e4:	ldr	x17, [x16, #136]
    a7e8:	add	x16, x16, #0x88
    a7ec:	br	x17

000000000000a7f0 <perror@plt>:
    a7f0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a7f4:	ldr	x17, [x16, #144]
    a7f8:	add	x16, x16, #0x90
    a7fc:	br	x17

000000000000a800 <flockfile@plt>:
    a800:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a804:	ldr	x17, [x16, #152]
    a808:	add	x16, x16, #0x98
    a80c:	br	x17

000000000000a810 <getegid@plt>:
    a810:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a814:	ldr	x17, [x16, #160]
    a818:	add	x16, x16, #0xa0
    a81c:	br	x17

000000000000a820 <wctype@plt>:
    a820:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a824:	ldr	x17, [x16, #168]
    a828:	add	x16, x16, #0xa8
    a82c:	br	x17

000000000000a830 <sigprocmask@plt>:
    a830:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a834:	ldr	x17, [x16, #176]
    a838:	add	x16, x16, #0xb0
    a83c:	br	x17

000000000000a840 <rpl_mbrtowc@plt>:
    a840:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a844:	ldr	x17, [x16, #184]
    a848:	add	x16, x16, #0xb8
    a84c:	br	x17

000000000000a850 <geteuid@plt>:
    a850:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a854:	ldr	x17, [x16, #192]
    a858:	add	x16, x16, #0xc0
    a85c:	br	x17

000000000000a860 <get_roff_encoding@plt>:
    a860:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a864:	ldr	x17, [x16, #200]
    a868:	add	x16, x16, #0xc8
    a86c:	br	x17

000000000000a870 <pthread_rwlock_init@plt>:
    a870:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a874:	ldr	x17, [x16, #208]
    a878:	add	x16, x16, #0xd0
    a87c:	br	x17

000000000000a880 <getresuid@plt>:
    a880:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a884:	ldr	x17, [x16, #216]
    a888:	add	x16, x16, #0xd8
    a88c:	br	x17

000000000000a890 <pthread_rwlockattr_setkind_np@plt>:
    a890:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a894:	ldr	x17, [x16, #224]
    a898:	add	x16, x16, #0xe0
    a89c:	br	x17

000000000000a8a0 <chdir_long@plt>:
    a8a0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a8a4:	ldr	x17, [x16, #232]
    a8a8:	add	x16, x16, #0xe8
    a8ac:	br	x17

000000000000a8b0 <hash_insert@plt>:
    a8b0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a8b4:	ldr	x17, [x16, #240]
    a8b8:	add	x16, x16, #0xf0
    a8bc:	br	x17

000000000000a8c0 <setenv@plt>:
    a8c0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a8c4:	ldr	x17, [x16, #248]
    a8c8:	add	x16, x16, #0xf8
    a8cc:	br	x17

000000000000a8d0 <readlink@plt>:
    a8d0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a8d4:	ldr	x17, [x16, #256]
    a8d8:	add	x16, x16, #0x100
    a8dc:	br	x17

000000000000a8e0 <gl_sortedlist_add@plt>:
    a8e0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a8e4:	ldr	x17, [x16, #264]
    a8e8:	add	x16, x16, #0x108
    a8ec:	br	x17

000000000000a8f0 <__cxa_finalize@plt>:
    a8f0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a8f4:	ldr	x17, [x16, #272]
    a8f8:	add	x16, x16, #0x110
    a8fc:	br	x17

000000000000a900 <sprintf@plt>:
    a900:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a904:	ldr	x17, [x16, #280]
    a908:	add	x16, x16, #0x118
    a90c:	br	x17

000000000000a910 <getuid@plt>:
    a910:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a914:	ldr	x17, [x16, #288]
    a918:	add	x16, x16, #0x120
    a91c:	br	x17

000000000000a920 <pipe@plt>:
    a920:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a924:	ldr	x17, [x16, #296]
    a928:	add	x16, x16, #0x128
    a92c:	br	x17

000000000000a930 <opendir@plt>:
    a930:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a934:	ldr	x17, [x16, #304]
    a938:	add	x16, x16, #0x130
    a93c:	br	x17

000000000000a940 <__cxa_atexit@plt>:
    a940:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a944:	ldr	x17, [x16, #312]
    a948:	add	x16, x16, #0x138
    a94c:	br	x17

000000000000a950 <timespec_cmp@plt>:
    a950:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a954:	ldr	x17, [x16, #320]
    a958:	add	x16, x16, #0x140
    a95c:	br	x17

000000000000a960 <fputc@plt>:
    a960:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a964:	ldr	x17, [x16, #328]
    a968:	add	x16, x16, #0x148
    a96c:	br	x17

000000000000a970 <clock_gettime@plt>:
    a970:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a974:	ldr	x17, [x16, #336]
    a978:	add	x16, x16, #0x150
    a97c:	br	x17

000000000000a980 <qsort@plt>:
    a980:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a984:	ldr	x17, [x16, #344]
    a988:	add	x16, x16, #0x158
    a98c:	br	x17

000000000000a990 <kill@plt>:
    a990:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a994:	ldr	x17, [x16, #352]
    a998:	add	x16, x16, #0x160
    a99c:	br	x17

000000000000a9a0 <argp_fmtstream_set_lmargin@plt>:
    a9a0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a9a4:	ldr	x17, [x16, #360]
    a9a8:	add	x16, x16, #0x168
    a9ac:	br	x17

000000000000a9b0 <_argp_fmtstream_update@plt>:
    a9b0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a9b4:	ldr	x17, [x16, #368]
    a9b8:	add	x16, x16, #0x170
    a9bc:	br	x17

000000000000a9c0 <argp_fmtstream_putc@plt>:
    a9c0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a9c4:	ldr	x17, [x16, #376]
    a9c8:	add	x16, x16, #0x178
    a9cc:	br	x17

000000000000a9d0 <__ctype_tolower_loc@plt>:
    a9d0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a9d4:	ldr	x17, [x16, #384]
    a9d8:	add	x16, x16, #0x180
    a9dc:	br	x17

000000000000a9e0 <snprintf@plt>:
    a9e0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a9e4:	ldr	x17, [x16, #392]
    a9e8:	add	x16, x16, #0x188
    a9ec:	br	x17

000000000000a9f0 <mdir_name@plt>:
    a9f0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    a9f4:	ldr	x17, [x16, #400]
    a9f8:	add	x16, x16, #0x190
    a9fc:	br	x17

000000000000aa00 <triple_free@plt>:
    aa00:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aa04:	ldr	x17, [x16, #408]
    aa08:	add	x16, x16, #0x198
    aa0c:	br	x17

000000000000aa10 <putc_unlocked@plt>:
    aa10:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aa14:	ldr	x17, [x16, #416]
    aa18:	add	x16, x16, #0x1a0
    aa1c:	br	x17

000000000000aa20 <debug@plt>:
    aa20:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aa24:	ldr	x17, [x16, #424]
    aa28:	add	x16, x16, #0x1a8
    aa2c:	br	x17

000000000000aa30 <hash_free@plt>:
    aa30:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aa34:	ldr	x17, [x16, #432]
    aa38:	add	x16, x16, #0x1b0
    aa3c:	br	x17

000000000000aa40 <fclose@plt>:
    aa40:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aa44:	ldr	x17, [x16, #440]
    aa48:	add	x16, x16, #0x1b8
    aa4c:	br	x17

000000000000aa50 <atoi@plt>:
    aa50:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aa54:	ldr	x17, [x16, #448]
    aa58:	add	x16, x16, #0x1c0
    aa5c:	br	x17

000000000000aa60 <rpl_regcomp@plt>:
    aa60:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aa64:	ldr	x17, [x16, #456]
    aa68:	add	x16, x16, #0x1c8
    aa6c:	br	x17

000000000000aa70 <getpid@plt>:
    aa70:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aa74:	ldr	x17, [x16, #464]
    aa78:	add	x16, x16, #0x1d0
    aa7c:	br	x17

000000000000aa80 <nl_langinfo@plt>:
    aa80:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aa84:	ldr	x17, [x16, #472]
    aa88:	add	x16, x16, #0x1d8
    aa8c:	br	x17

000000000000aa90 <fopen@plt>:
    aa90:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aa94:	ldr	x17, [x16, #480]
    aa98:	add	x16, x16, #0x1e0
    aa9c:	br	x17

000000000000aaa0 <iswctype@plt>:
    aaa0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aaa4:	ldr	x17, [x16, #488]
    aaa8:	add	x16, x16, #0x1e8
    aaac:	br	x17

000000000000aab0 <malloc@plt>:
    aab0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aab4:	ldr	x17, [x16, #496]
    aab8:	add	x16, x16, #0x1f0
    aabc:	br	x17

000000000000aac0 <gl_list_node_nx_set_value@plt>:
    aac0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aac4:	ldr	x17, [x16, #504]
    aac8:	add	x16, x16, #0x1f8
    aacc:	br	x17

000000000000aad0 <record_file@plt>:
    aad0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aad4:	ldr	x17, [x16, #512]
    aad8:	add	x16, x16, #0x200
    aadc:	br	x17

000000000000aae0 <toupper@plt>:
    aae0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aae4:	ldr	x17, [x16, #520]
    aae8:	add	x16, x16, #0x208
    aaec:	br	x17

000000000000aaf0 <gl_list_iterator@plt>:
    aaf0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aaf4:	ldr	x17, [x16, #528]
    aaf8:	add	x16, x16, #0x210
    aafc:	br	x17

000000000000ab00 <futimesat@plt>:
    ab00:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ab04:	ldr	x17, [x16, #536]
    ab08:	add	x16, x16, #0x218
    ab0c:	br	x17

000000000000ab10 <gl_list_nx_add_after@plt>:
    ab10:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ab14:	ldr	x17, [x16, #544]
    ab18:	add	x16, x16, #0x220
    ab1c:	br	x17

000000000000ab20 <funlockfile@plt>:
    ab20:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ab24:	ldr	x17, [x16, #552]
    ab28:	add	x16, x16, #0x228
    ab2c:	br	x17

000000000000ab30 <stdopen@plt>:
    ab30:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ab34:	ldr	x17, [x16, #560]
    ab38:	add	x16, x16, #0x230
    ab3c:	br	x17

000000000000ab40 <open@plt>:
    ab40:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ab44:	ldr	x17, [x16, #568]
    ab48:	add	x16, x16, #0x238
    ab4c:	br	x17

000000000000ab50 <argp_failure@plt>:
    ab50:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ab54:	ldr	x17, [x16, #576]
    ab58:	add	x16, x16, #0x240
    ab5c:	br	x17

000000000000ab60 <xrealloc@plt>:
    ab60:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ab64:	ldr	x17, [x16, #584]
    ab68:	add	x16, x16, #0x248
    ab6c:	br	x17

000000000000ab70 <dir_name@plt>:
    ab70:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ab74:	ldr	x17, [x16, #592]
    ab78:	add	x16, x16, #0x250
    ab7c:	br	x17

000000000000ab80 <argp_fmtstream_puts@plt>:
    ab80:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ab84:	ldr	x17, [x16, #600]
    ab88:	add	x16, x16, #0x258
    ab8c:	br	x17

000000000000ab90 <idpriv_temp_drop@plt>:
    ab90:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ab94:	ldr	x17, [x16, #608]
    ab98:	add	x16, x16, #0x260
    ab9c:	br	x17

000000000000aba0 <sigemptyset@plt>:
    aba0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aba4:	ldr	x17, [x16, #616]
    aba8:	add	x16, x16, #0x268
    abac:	br	x17

000000000000abb0 <get_groff_preconv@plt>:
    abb0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    abb4:	ldr	x17, [x16, #624]
    abb8:	add	x16, x16, #0x270
    abbc:	br	x17

000000000000abc0 <futimens@plt>:
    abc0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    abc4:	ldr	x17, [x16, #632]
    abc8:	add	x16, x16, #0x278
    abcc:	br	x17

000000000000abd0 <strncmp@plt>:
    abd0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    abd4:	ldr	x17, [x16, #640]
    abd8:	add	x16, x16, #0x280
    abdc:	br	x17

000000000000abe0 <bindtextdomain@plt>:
    abe0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    abe4:	ldr	x17, [x16, #648]
    abe8:	add	x16, x16, #0x288
    abec:	br	x17

000000000000abf0 <gl_list_nx_set_at@plt>:
    abf0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    abf4:	ldr	x17, [x16, #656]
    abf8:	add	x16, x16, #0x290
    abfc:	br	x17

000000000000ac00 <fstatfs@plt>:
    ac00:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ac04:	ldr	x17, [x16, #664]
    ac08:	add	x16, x16, #0x298
    ac0c:	br	x17

000000000000ac10 <memset@plt>:
    ac10:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ac14:	ldr	x17, [x16, #672]
    ac18:	add	x16, x16, #0x2a0
    ac1c:	br	x17

000000000000ac20 <gettimeofday@plt>:
    ac20:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ac24:	ldr	x17, [x16, #680]
    ac28:	add	x16, x16, #0x2a8
    ac2c:	br	x17

000000000000ac30 <gl_map_nx_put@plt>:
    ac30:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ac34:	ldr	x17, [x16, #688]
    ac38:	add	x16, x16, #0x2b0
    ac3c:	br	x17

000000000000ac40 <xmalloc@plt>:
    ac40:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ac44:	ldr	x17, [x16, #696]
    ac48:	add	x16, x16, #0x2b8
    ac4c:	br	x17

000000000000ac50 <getpwnam@plt>:
    ac50:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ac54:	ldr	x17, [x16, #704]
    ac58:	add	x16, x16, #0x2c0
    ac5c:	br	x17

000000000000ac60 <lstatat@plt>:
    ac60:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ac64:	ldr	x17, [x16, #712]
    ac68:	add	x16, x16, #0x2c8
    ac6c:	br	x17

000000000000ac70 <xstrdup@plt>:
    ac70:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ac74:	ldr	x17, [x16, #720]
    ac78:	add	x16, x16, #0x2d0
    ac7c:	br	x17

000000000000ac80 <sleep@plt>:
    ac80:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ac84:	ldr	x17, [x16, #728]
    ac88:	add	x16, x16, #0x2d8
    ac8c:	br	x17

000000000000ac90 <same_name@plt>:
    ac90:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ac94:	ldr	x17, [x16, #736]
    ac98:	add	x16, x16, #0x2e0
    ac9c:	br	x17

000000000000aca0 <strerror_r@plt>:
    aca0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aca4:	ldr	x17, [x16, #744]
    aca8:	add	x16, x16, #0x2e8
    acac:	br	x17

000000000000acb0 <gl_set_create_empty@plt>:
    acb0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    acb4:	ldr	x17, [x16, #752]
    acb8:	add	x16, x16, #0x2f0
    acbc:	br	x17

000000000000acc0 <gl_list_iterator_next@plt>:
    acc0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    acc4:	ldr	x17, [x16, #760]
    acc8:	add	x16, x16, #0x2f8
    accc:	br	x17

000000000000acd0 <gl_list_nx_add_first@plt>:
    acd0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    acd4:	ldr	x17, [x16, #768]
    acd8:	add	x16, x16, #0x300
    acdc:	br	x17

000000000000ace0 <calloc@plt>:
    ace0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ace4:	ldr	x17, [x16, #776]
    ace8:	add	x16, x16, #0x308
    acec:	br	x17

000000000000acf0 <last_component@plt>:
    acf0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    acf4:	ldr	x17, [x16, #784]
    acf8:	add	x16, x16, #0x310
    acfc:	br	x17

000000000000ad00 <xnrealloc@plt>:
    ad00:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ad04:	ldr	x17, [x16, #792]
    ad08:	add	x16, x16, #0x318
    ad0c:	br	x17

000000000000ad10 <hard_locale@plt>:
    ad10:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ad14:	ldr	x17, [x16, #800]
    ad18:	add	x16, x16, #0x320
    ad1c:	br	x17

000000000000ad20 <hash_insert_if_absent@plt>:
    ad20:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ad24:	ldr	x17, [x16, #808]
    ad28:	add	x16, x16, #0x328
    ad2c:	br	x17

000000000000ad30 <hash_get_n_buckets_used@plt>:
    ad30:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ad34:	ldr	x17, [x16, #816]
    ad38:	add	x16, x16, #0x330
    ad3c:	br	x17

000000000000ad40 <strcasecmp@plt>:
    ad40:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ad44:	ldr	x17, [x16, #824]
    ad48:	add	x16, x16, #0x338
    ad4c:	br	x17

000000000000ad50 <readdir@plt>:
    ad50:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ad54:	ldr	x17, [x16, #832]
    ad58:	add	x16, x16, #0x340
    ad5c:	br	x17

000000000000ad60 <realloc@plt>:
    ad60:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ad64:	ldr	x17, [x16, #840]
    ad68:	add	x16, x16, #0x348
    ad6c:	br	x17

000000000000ad70 <__ctype_toupper_loc@plt>:
    ad70:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ad74:	ldr	x17, [x16, #848]
    ad78:	add	x16, x16, #0x350
    ad7c:	br	x17

000000000000ad80 <hash_initialize@plt>:
    ad80:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ad84:	ldr	x17, [x16, #856]
    ad88:	add	x16, x16, #0x358
    ad8c:	br	x17

000000000000ad90 <try_tempname@plt>:
    ad90:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ad94:	ldr	x17, [x16, #864]
    ad98:	add	x16, x16, #0x360
    ad9c:	br	x17

000000000000ada0 <closedir@plt>:
    ada0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ada4:	ldr	x17, [x16, #872]
    ada8:	add	x16, x16, #0x368
    adac:	br	x17

000000000000adb0 <strerror@plt>:
    adb0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    adb4:	ldr	x17, [x16, #880]
    adb8:	add	x16, x16, #0x370
    adbc:	br	x17

000000000000adc0 <pthread_mutex_init@plt>:
    adc0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    adc4:	ldr	x17, [x16, #888]
    adc8:	add	x16, x16, #0x378
    adcc:	br	x17

000000000000add0 <close@plt>:
    add0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    add4:	ldr	x17, [x16, #896]
    add8:	add	x16, x16, #0x380
    addc:	br	x17

000000000000ade0 <gl_list_nx_create@plt>:
    ade0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ade4:	ldr	x17, [x16, #904]
    ade8:	add	x16, x16, #0x388
    adec:	br	x17

000000000000adf0 <sigaction@plt>:
    adf0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    adf4:	ldr	x17, [x16, #912]
    adf8:	add	x16, x16, #0x390
    adfc:	br	x17

000000000000ae00 <hash_lookup@plt>:
    ae00:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ae04:	ldr	x17, [x16, #920]
    ae08:	add	x16, x16, #0x398
    ae0c:	br	x17

000000000000ae10 <strrchr@plt>:
    ae10:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ae14:	ldr	x17, [x16, #928]
    ae18:	add	x16, x16, #0x3a0
    ae1c:	br	x17

000000000000ae20 <gl_map_get@plt>:
    ae20:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ae24:	ldr	x17, [x16, #936]
    ae28:	add	x16, x16, #0x3a8
    ae2c:	br	x17

000000000000ae30 <xalloc_die@plt>:
    ae30:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ae34:	ldr	x17, [x16, #944]
    ae38:	add	x16, x16, #0x3b0
    ae3c:	br	x17

000000000000ae40 <memmem@plt>:
    ae40:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ae44:	ldr	x17, [x16, #952]
    ae48:	add	x16, x16, #0x3b8
    ae4c:	br	x17

000000000000ae50 <__gmon_start__@plt>:
    ae50:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ae54:	ldr	x17, [x16, #960]
    ae58:	add	x16, x16, #0x3c0
    ae5c:	br	x17

000000000000ae60 <drop_effective_privs@plt>:
    ae60:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ae64:	ldr	x17, [x16, #968]
    ae68:	add	x16, x16, #0x3c8
    ae6c:	br	x17

000000000000ae70 <argp_fmtstream_point@plt>:
    ae70:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ae74:	ldr	x17, [x16, #976]
    ae78:	add	x16, x16, #0x3d0
    ae7c:	br	x17

000000000000ae80 <btowc@plt>:
    ae80:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ae84:	ldr	x17, [x16, #984]
    ae88:	add	x16, x16, #0x3d8
    ae8c:	br	x17

000000000000ae90 <mkdtemp@plt>:
    ae90:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    ae94:	ldr	x17, [x16, #992]
    ae98:	add	x16, x16, #0x3e0
    ae9c:	br	x17

000000000000aea0 <argp_fmtstream_printf@plt>:
    aea0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aea4:	ldr	x17, [x16, #1000]
    aea8:	add	x16, x16, #0x3e8
    aeac:	br	x17

000000000000aeb0 <abort@plt>:
    aeb0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aeb4:	ldr	x17, [x16, #1008]
    aeb8:	add	x16, x16, #0x3f0
    aebc:	br	x17

000000000000aec0 <_option_is_end@plt>:
    aec0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aec4:	ldr	x17, [x16, #1016]
    aec8:	add	x16, x16, #0x3f8
    aecc:	br	x17

000000000000aed0 <_getopt_long_only_r@plt>:
    aed0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aed4:	ldr	x17, [x16, #1024]
    aed8:	add	x16, x16, #0x400
    aedc:	br	x17

000000000000aee0 <hash_rehash@plt>:
    aee0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aee4:	ldr	x17, [x16, #1032]
    aee8:	add	x16, x16, #0x408
    aeec:	br	x17

000000000000aef0 <mbsinit@plt>:
    aef0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aef4:	ldr	x17, [x16, #1040]
    aef8:	add	x16, x16, #0x410
    aefc:	br	x17

000000000000af00 <access@plt>:
    af00:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    af04:	ldr	x17, [x16, #1048]
    af08:	add	x16, x16, #0x418
    af0c:	br	x17

000000000000af10 <fdutimens@plt>:
    af10:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    af14:	ldr	x17, [x16, #1056]
    af18:	add	x16, x16, #0x420
    af1c:	br	x17

000000000000af20 <gl_map_nx_getput@plt>:
    af20:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    af24:	ldr	x17, [x16, #1064]
    af28:	add	x16, x16, #0x428
    af2c:	br	x17

000000000000af30 <gl_map_free@plt>:
    af30:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    af34:	ldr	x17, [x16, #1072]
    af38:	add	x16, x16, #0x430
    af3c:	br	x17

000000000000af40 <memcmp@plt>:
    af40:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    af44:	ldr	x17, [x16, #1080]
    af48:	add	x16, x16, #0x438
    af4c:	br	x17

000000000000af50 <hash_pjw_bare@plt>:
    af50:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    af54:	ldr	x17, [x16, #1088]
    af58:	add	x16, x16, #0x440
    af5c:	br	x17

000000000000af60 <textdomain@plt>:
    af60:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    af64:	ldr	x17, [x16, #1096]
    af68:	add	x16, x16, #0x448
    af6c:	br	x17

000000000000af70 <gl_map_nx_create_empty@plt>:
    af70:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    af74:	ldr	x17, [x16, #1104]
    af78:	add	x16, x16, #0x450
    af7c:	br	x17

000000000000af80 <strsep@plt>:
    af80:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    af84:	ldr	x17, [x16, #1112]
    af88:	add	x16, x16, #0x458
    af8c:	br	x17

000000000000af90 <gl_list_iterator_free@plt>:
    af90:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    af94:	ldr	x17, [x16, #1120]
    af98:	add	x16, x16, #0x460
    af9c:	br	x17

000000000000afa0 <strcmp@plt>:
    afa0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    afa4:	ldr	x17, [x16, #1128]
    afa8:	add	x16, x16, #0x468
    afac:	br	x17

000000000000afb0 <_getopt_long_r@plt>:
    afb0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    afb4:	ldr	x17, [x16, #1136]
    afb8:	add	x16, x16, #0x470
    afbc:	br	x17

000000000000afc0 <__ctype_b_loc@plt>:
    afc0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    afc4:	ldr	x17, [x16, #1144]
    afc8:	add	x16, x16, #0x478
    afcc:	br	x17

000000000000afd0 <rmdir@plt>:
    afd0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    afd4:	ldr	x17, [x16, #1152]
    afd8:	add	x16, x16, #0x480
    afdc:	br	x17

000000000000afe0 <seen_file@plt>:
    afe0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    afe4:	ldr	x17, [x16, #1160]
    afe8:	add	x16, x16, #0x488
    afec:	br	x17

000000000000aff0 <hash_get_max_bucket_length@plt>:
    aff0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    aff4:	ldr	x17, [x16, #1168]
    aff8:	add	x16, x16, #0x490
    affc:	br	x17

000000000000b000 <gl_map_put@plt>:
    b000:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b004:	ldr	x17, [x16, #1176]
    b008:	add	x16, x16, #0x498
    b00c:	br	x17

000000000000b010 <getline@plt>:
    b010:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b014:	ldr	x17, [x16, #1184]
    b018:	add	x16, x16, #0x4a0
    b01c:	br	x17

000000000000b020 <dir_len@plt>:
    b020:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b024:	ldr	x17, [x16, #1192]
    b028:	add	x16, x16, #0x4a8
    b02c:	br	x17

000000000000b030 <chdir@plt>:
    b030:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b034:	ldr	x17, [x16, #1200]
    b038:	add	x16, x16, #0x4b0
    b03c:	br	x17

000000000000b040 <dup_safer@plt>:
    b040:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b044:	ldr	x17, [x16, #1208]
    b048:	add	x16, x16, #0x4b8
    b04c:	br	x17

000000000000b050 <free@plt>:
    b050:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b054:	ldr	x17, [x16, #1216]
    b058:	add	x16, x16, #0x4c0
    b05c:	br	x17

000000000000b060 <renameat2@plt>:
    b060:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b064:	ldr	x17, [x16, #1224]
    b068:	add	x16, x16, #0x4c8
    b06c:	br	x17

000000000000b070 <argp_make_fmtstream@plt>:
    b070:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b074:	ldr	x17, [x16, #1232]
    b078:	add	x16, x16, #0x4d0
    b07c:	br	x17

000000000000b080 <__ctype_get_mb_cur_max@plt>:
    b080:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b084:	ldr	x17, [x16, #1240]
    b088:	add	x16, x16, #0x4d8
    b08c:	br	x17

000000000000b090 <getgid@plt>:
    b090:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b094:	ldr	x17, [x16, #1248]
    b098:	add	x16, x16, #0x4e0
    b09c:	br	x17

000000000000b0a0 <renameat@plt>:
    b0a0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b0a4:	ldr	x17, [x16, #1256]
    b0a8:	add	x16, x16, #0x4e8
    b0ac:	br	x17

000000000000b0b0 <mempcpy@plt>:
    b0b0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b0b4:	ldr	x17, [x16, #1264]
    b0b8:	add	x16, x16, #0x4f0
    b0bc:	br	x17

000000000000b0c0 <xasprintf@plt>:
    b0c0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b0c4:	ldr	x17, [x16, #1272]
    b0c8:	add	x16, x16, #0x4f8
    b0cc:	br	x17

000000000000b0d0 <vasnprintf@plt>:
    b0d0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b0d4:	ldr	x17, [x16, #1280]
    b0d8:	add	x16, x16, #0x500
    b0dc:	br	x17

000000000000b0e0 <gl_sortedlist_nx_add@plt>:
    b0e0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b0e4:	ldr	x17, [x16, #1288]
    b0e8:	add	x16, x16, #0x508
    b0ec:	br	x17

000000000000b0f0 <printf_fetchargs@plt>:
    b0f0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b0f4:	ldr	x17, [x16, #1296]
    b0f8:	add	x16, x16, #0x510
    b0fc:	br	x17

000000000000b100 <hash_get_n_buckets@plt>:
    b100:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b104:	ldr	x17, [x16, #1304]
    b108:	add	x16, x16, #0x518
    b10c:	br	x17

000000000000b110 <nanosleep@plt>:
    b110:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b114:	ldr	x17, [x16, #1312]
    b118:	add	x16, x16, #0x520
    b11c:	br	x17

000000000000b120 <vasprintf@plt>:
    b120:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b124:	ldr	x17, [x16, #1320]
    b128:	add	x16, x16, #0x528
    b12c:	br	x17

000000000000b130 <rpl_getopt_internal@plt>:
    b130:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b134:	ldr	x17, [x16, #1328]
    b138:	add	x16, x16, #0x530
    b13c:	br	x17

000000000000b140 <gl_list_nx_add_at@plt>:
    b140:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b144:	ldr	x17, [x16, #1336]
    b148:	add	x16, x16, #0x538
    b14c:	br	x17

000000000000b150 <strndup@plt>:
    b150:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b154:	ldr	x17, [x16, #1344]
    b158:	add	x16, x16, #0x540
    b15c:	br	x17

000000000000b160 <strspn@plt>:
    b160:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b164:	ldr	x17, [x16, #1352]
    b168:	add	x16, x16, #0x548
    b16c:	br	x17

000000000000b170 <gl_list_nx_add_before@plt>:
    b170:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b174:	ldr	x17, [x16, #1360]
    b178:	add	x16, x16, #0x550
    b17c:	br	x17

000000000000b180 <rpl_ioctl@plt>:
    b180:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b184:	ldr	x17, [x16, #1368]
    b188:	add	x16, x16, #0x558
    b18c:	br	x17

000000000000b190 <strchr@plt>:
    b190:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b194:	ldr	x17, [x16, #1376]
    b198:	add	x16, x16, #0x560
    b19c:	br	x17

000000000000b1a0 <areadlink_with_size@plt>:
    b1a0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b1a4:	ldr	x17, [x16, #1384]
    b1a8:	add	x16, x16, #0x568
    b1ac:	br	x17

000000000000b1b0 <argp_error@plt>:
    b1b0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b1b4:	ldr	x17, [x16, #1392]
    b1b8:	add	x16, x16, #0x570
    b1bc:	br	x17

000000000000b1c0 <memrchr@plt>:
    b1c0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b1c4:	ldr	x17, [x16, #1400]
    b1c8:	add	x16, x16, #0x578
    b1cc:	br	x17

000000000000b1d0 <utimensat@plt>:
    b1d0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b1d4:	ldr	x17, [x16, #1408]
    b1d8:	add	x16, x16, #0x580
    b1dc:	br	x17

000000000000b1e0 <pipeline_peekline@plt>:
    b1e0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b1e4:	ldr	x17, [x16, #1416]
    b1e8:	add	x16, x16, #0x588
    b1ec:	br	x17

000000000000b1f0 <do_cleanups_sigsafe@plt>:
    b1f0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b1f4:	ldr	x17, [x16, #1424]
    b1f8:	add	x16, x16, #0x590
    b1fc:	br	x17

000000000000b200 <rpl_fcntl@plt>:
    b200:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b204:	ldr	x17, [x16, #1432]
    b208:	add	x16, x16, #0x598
    b20c:	br	x17

000000000000b210 <fnmatch@plt>:
    b210:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b214:	ldr	x17, [x16, #1440]
    b218:	add	x16, x16, #0x5a0
    b21c:	br	x17

000000000000b220 <fcntl@plt>:
    b220:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b224:	ldr	x17, [x16, #1448]
    b228:	add	x16, x16, #0x5a8
    b22c:	br	x17

000000000000b230 <idpriv_drop@plt>:
    b230:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b234:	ldr	x17, [x16, #1456]
    b238:	add	x16, x16, #0x5b0
    b23c:	br	x17

000000000000b240 <rpl_regerror@plt>:
    b240:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b244:	ldr	x17, [x16, #1464]
    b248:	add	x16, x16, #0x5b8
    b24c:	br	x17

000000000000b250 <pthread_mutex_destroy@plt>:
    b250:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b254:	ldr	x17, [x16, #1472]
    b258:	add	x16, x16, #0x5c0
    b25c:	br	x17

000000000000b260 <strcpy@plt>:
    b260:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b264:	ldr	x17, [x16, #1480]
    b268:	add	x16, x16, #0x5c8
    b26c:	br	x17

000000000000b270 <hash_pjw@plt>:
    b270:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b274:	ldr	x17, [x16, #1488]
    b278:	add	x16, x16, #0x5d0
    b27c:	br	x17

000000000000b280 <_argp_input@plt>:
    b280:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b284:	ldr	x17, [x16, #1496]
    b288:	add	x16, x16, #0x5d8
    b28c:	br	x17

000000000000b290 <__lxstat@plt>:
    b290:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b294:	ldr	x17, [x16, #1504]
    b298:	add	x16, x16, #0x5e0
    b29c:	br	x17

000000000000b2a0 <dup_safer_flag@plt>:
    b2a0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b2a4:	ldr	x17, [x16, #1512]
    b2a8:	add	x16, x16, #0x5e8
    b2ac:	br	x17

000000000000b2b0 <memchr@plt>:
    b2b0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b2b4:	ldr	x17, [x16, #1520]
    b2b8:	add	x16, x16, #0x5f0
    b2bc:	br	x17

000000000000b2c0 <idpriv_temp_restore@plt>:
    b2c0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b2c4:	ldr	x17, [x16, #1528]
    b2c8:	add	x16, x16, #0x5f8
    b2cc:	br	x17

000000000000b2d0 <new_string_list@plt>:
    b2d0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b2d4:	ldr	x17, [x16, #1536]
    b2d8:	add	x16, x16, #0x600
    b2dc:	br	x17

000000000000b2e0 <getresgid@plt>:
    b2e0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b2e4:	ldr	x17, [x16, #1544]
    b2e8:	add	x16, x16, #0x608
    b2ec:	br	x17

000000000000b2f0 <isatty@plt>:
    b2f0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b2f4:	ldr	x17, [x16, #1552]
    b2f8:	add	x16, x16, #0x610
    b2fc:	br	x17

000000000000b300 <xzalloc@plt>:
    b300:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b304:	ldr	x17, [x16, #1560]
    b308:	add	x16, x16, #0x618
    b30c:	br	x17

000000000000b310 <xstrndup@plt>:
    b310:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b314:	ldr	x17, [x16, #1568]
    b318:	add	x16, x16, #0x620
    b31c:	br	x17

000000000000b320 <pthread_mutexattr_init@plt>:
    b320:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b324:	ldr	x17, [x16, #1576]
    b328:	add	x16, x16, #0x628
    b32c:	br	x17

000000000000b330 <gl_list_free@plt>:
    b330:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b334:	ldr	x17, [x16, #1584]
    b338:	add	x16, x16, #0x630
    b33c:	br	x17

000000000000b340 <gl_set_nx_create_empty@plt>:
    b340:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b344:	ldr	x17, [x16, #1592]
    b348:	add	x16, x16, #0x638
    b34c:	br	x17

000000000000b350 <setresuid@plt>:
    b350:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b354:	ldr	x17, [x16, #1600]
    b358:	add	x16, x16, #0x640
    b35c:	br	x17

000000000000b360 <utimes@plt>:
    b360:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b364:	ldr	x17, [x16, #1608]
    b368:	add	x16, x16, #0x648
    b36c:	br	x17

000000000000b370 <iswalnum@plt>:
    b370:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b374:	ldr	x17, [x16, #1616]
    b378:	add	x16, x16, #0x650
    b37c:	br	x17

000000000000b380 <__fxstat@plt>:
    b380:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b384:	ldr	x17, [x16, #1624]
    b388:	add	x16, x16, #0x658
    b38c:	br	x17

000000000000b390 <pthread_mutexattr_destroy@plt>:
    b390:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b394:	ldr	x17, [x16, #1632]
    b398:	add	x16, x16, #0x660
    b39c:	br	x17

000000000000b3a0 <strchrnul@plt>:
    b3a0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b3a4:	ldr	x17, [x16, #1640]
    b3a8:	add	x16, x16, #0x668
    b3ac:	br	x17

000000000000b3b0 <strstr@plt>:
    b3b0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b3b4:	ldr	x17, [x16, #1648]
    b3b8:	add	x16, x16, #0x670
    b3bc:	br	x17

000000000000b3c0 <_argp_fmtstream_ensure@plt>:
    b3c0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b3c4:	ldr	x17, [x16, #1656]
    b3c8:	add	x16, x16, #0x678
    b3cc:	br	x17

000000000000b3d0 <argp_state_help@plt>:
    b3d0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b3d4:	ldr	x17, [x16, #1664]
    b3d8:	add	x16, x16, #0x680
    b3dc:	br	x17

000000000000b3e0 <_option_is_short@plt>:
    b3e0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b3e4:	ldr	x17, [x16, #1672]
    b3e8:	add	x16, x16, #0x688
    b3ec:	br	x17

000000000000b3f0 <dcgettext@plt>:
    b3f0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b3f4:	ldr	x17, [x16, #1680]
    b3f8:	add	x16, x16, #0x690
    b3fc:	br	x17

000000000000b400 <gl_map_create_empty@plt>:
    b400:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b404:	ldr	x17, [x16, #1688]
    b408:	add	x16, x16, #0x698
    b40c:	br	x17

000000000000b410 <pthread_rwlockattr_destroy@plt>:
    b410:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b414:	ldr	x17, [x16, #1696]
    b418:	add	x16, x16, #0x6a0
    b41c:	br	x17

000000000000b420 <vsnprintf@plt>:
    b420:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b424:	ldr	x17, [x16, #1704]
    b428:	add	x16, x16, #0x6a8
    b42c:	br	x17

000000000000b430 <argp_fmtstream_free@plt>:
    b430:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b434:	ldr	x17, [x16, #1712]
    b438:	add	x16, x16, #0x6b0
    b43c:	br	x17

000000000000b440 <get_locale_charset@plt>:
    b440:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b444:	ldr	x17, [x16, #1720]
    b448:	add	x16, x16, #0x6b8
    b44c:	br	x17

000000000000b450 <xvasprintf@plt>:
    b450:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b454:	ldr	x17, [x16, #1728]
    b458:	add	x16, x16, #0x6c0
    b45c:	br	x17

000000000000b460 <fputs_unlocked@plt>:
    b460:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b464:	ldr	x17, [x16, #1736]
    b468:	add	x16, x16, #0x6c8
    b46c:	br	x17

000000000000b470 <gl_list_create_empty@plt>:
    b470:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b474:	ldr	x17, [x16, #1744]
    b478:	add	x16, x16, #0x6d0
    b47c:	br	x17

000000000000b480 <sigaddset@plt>:
    b480:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b484:	ldr	x17, [x16, #1752]
    b488:	add	x16, x16, #0x6d8
    b48c:	br	x17

000000000000b490 <pathsearch_executable@plt>:
    b490:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b494:	ldr	x17, [x16, #1760]
    b498:	add	x16, x16, #0x6e0
    b49c:	br	x17

000000000000b4a0 <towupper@plt>:
    b4a0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b4a4:	ldr	x17, [x16, #1768]
    b4a8:	add	x16, x16, #0x6e8
    b4ac:	br	x17

000000000000b4b0 <gl_set_nx_add@plt>:
    b4b0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b4b4:	ldr	x17, [x16, #1776]
    b4b8:	add	x16, x16, #0x6f0
    b4bc:	br	x17

000000000000b4c0 <argp_fmtstream_write@plt>:
    b4c0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b4c4:	ldr	x17, [x16, #1784]
    b4c8:	add	x16, x16, #0x6f8
    b4cc:	br	x17

000000000000b4d0 <fd_safer_flag@plt>:
    b4d0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b4d4:	ldr	x17, [x16, #1792]
    b4d8:	add	x16, x16, #0x700
    b4dc:	br	x17

000000000000b4e0 <xmemdup@plt>:
    b4e0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b4e4:	ldr	x17, [x16, #1800]
    b4e8:	add	x16, x16, #0x708
    b4ec:	br	x17

000000000000b4f0 <strcspn@plt>:
    b4f0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b4f4:	ldr	x17, [x16, #1808]
    b4f8:	add	x16, x16, #0x710
    b4fc:	br	x17

000000000000b500 <_getopt_internal_r@plt>:
    b500:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b504:	ldr	x17, [x16, #1816]
    b508:	add	x16, x16, #0x718
    b50c:	br	x17

000000000000b510 <vfprintf@plt>:
    b510:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b514:	ldr	x17, [x16, #1824]
    b518:	add	x16, x16, #0x720
    b51c:	br	x17

000000000000b520 <openat@plt>:
    b520:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b524:	ldr	x17, [x16, #1832]
    b528:	add	x16, x16, #0x728
    b52c:	br	x17

000000000000b530 <__assert_fail@plt>:
    b530:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b534:	ldr	x17, [x16, #1840]
    b538:	add	x16, x16, #0x730
    b53c:	br	x17

000000000000b540 <__errno_location@plt>:
    b540:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b544:	ldr	x17, [x16, #1848]
    b548:	add	x16, x16, #0x738
    b54c:	br	x17

000000000000b550 <tolower@plt>:
    b550:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b554:	ldr	x17, [x16, #1856]
    b558:	add	x16, x16, #0x740
    b55c:	br	x17

000000000000b560 <setresgid@plt>:
    b560:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b564:	ldr	x17, [x16, #1864]
    b568:	add	x16, x16, #0x748
    b56c:	br	x17

000000000000b570 <getenv@plt>:
    b570:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b574:	ldr	x17, [x16, #1872]
    b578:	add	x16, x16, #0x750
    b57c:	br	x17

000000000000b580 <locale_charset@plt>:
    b580:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b584:	ldr	x17, [x16, #1880]
    b588:	add	x16, x16, #0x758
    b58c:	br	x17

000000000000b590 <__xstat@plt>:
    b590:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b594:	ldr	x17, [x16, #1888]
    b598:	add	x16, x16, #0x760
    b59c:	br	x17

000000000000b5a0 <pthread_mutex_lock@plt>:
    b5a0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b5a4:	ldr	x17, [x16, #1896]
    b5a8:	add	x16, x16, #0x768
    b5ac:	br	x17

000000000000b5b0 <printf_parse@plt>:
    b5b0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b5b4:	ldr	x17, [x16, #1904]
    b5b8:	add	x16, x16, #0x770
    b5bc:	br	x17

000000000000b5c0 <fd_safer@plt>:
    b5c0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b5c4:	ldr	x17, [x16, #1912]
    b5c8:	add	x16, x16, #0x778
    b5cc:	br	x17

000000000000b5d0 <pthread_mutex_unlock@plt>:
    b5d0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b5d4:	ldr	x17, [x16, #1920]
    b5d8:	add	x16, x16, #0x780
    b5dc:	br	x17

000000000000b5e0 <argp_fmtstream_set_wmargin@plt>:
    b5e0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b5e4:	ldr	x17, [x16, #1928]
    b5e8:	add	x16, x16, #0x788
    b5ec:	br	x17

000000000000b5f0 <unlink@plt>:
    b5f0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b5f4:	ldr	x17, [x16, #1936]
    b5f8:	add	x16, x16, #0x790
    b5fc:	br	x17

000000000000b600 <mkdir@plt>:
    b600:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b604:	ldr	x17, [x16, #1944]
    b608:	add	x16, x16, #0x798
    b60c:	br	x17

000000000000b610 <towlower@plt>:
    b610:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b614:	ldr	x17, [x16, #1952]
    b618:	add	x16, x16, #0x7a0
    b61c:	br	x17

000000000000b620 <gettime@plt>:
    b620:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b624:	ldr	x17, [x16, #1960]
    b628:	add	x16, x16, #0x7a8
    b62c:	br	x17

000000000000b630 <rpl_re_compile_fastmap@plt>:
    b630:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b634:	ldr	x17, [x16, #1968]
    b638:	add	x16, x16, #0x7b0
    b63c:	br	x17

000000000000b640 <fprintf@plt>:
    b640:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b644:	ldr	x17, [x16, #1976]
    b648:	add	x16, x16, #0x7b8
    b64c:	br	x17

000000000000b650 <hash_get_n_entries@plt>:
    b650:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b654:	ldr	x17, [x16, #1984]
    b658:	add	x16, x16, #0x7c0
    b65c:	br	x17

000000000000b660 <xnmalloc@plt>:
    b660:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b664:	ldr	x17, [x16, #1992]
    b668:	add	x16, x16, #0x7c8
    b66c:	br	x17

000000000000b670 <ioctl@plt>:
    b670:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b674:	ldr	x17, [x16, #2000]
    b678:	add	x16, x16, #0x7d0
    b67c:	br	x17

000000000000b680 <setlocale@plt>:
    b680:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b684:	ldr	x17, [x16, #2008]
    b688:	add	x16, x16, #0x7d8
    b68c:	br	x17

000000000000b690 <__fxstatat@plt>:
    b690:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b694:	ldr	x17, [x16, #2016]
    b698:	add	x16, x16, #0x7e0
    b69c:	br	x17

000000000000b6a0 <wcrtomb@plt>:
    b6a0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b6a4:	ldr	x17, [x16, #2024]
    b6a8:	add	x16, x16, #0x7e8
    b6ac:	br	x17

000000000000b6b0 <xsum4@plt>:
    b6b0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b6b4:	ldr	x17, [x16, #2032]
    b6b8:	add	x16, x16, #0x7f0
    b6bc:	br	x17

000000000000b6c0 <xgetcwd@plt>:
    b6c0:	adrp	x16, 41000 <base_len@@Base+0x2e68c>
    b6c4:	ldr	x17, [x16, #2040]
    b6c8:	add	x16, x16, #0x7f8
    b6cc:	br	x17

Disassembly of section .text:

000000000000b6d0 <appendstr@@Base-0xd4>:
    b6d0:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    b6d4:	ldr	x0, [x0, #3904]
    b6d8:	cbz	x0, b6e0 <xgetcwd@plt+0x20>
    b6dc:	b	ae50 <__gmon_start__@plt>
    b6e0:	ret
    b6e4:	adrp	x0, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
    b6e8:	add	x0, x0, #0x358
    b6ec:	adrp	x1, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
    b6f0:	add	x1, x1, #0x358
    b6f4:	cmp	x1, x0
    b6f8:	b.eq	b710 <xgetcwd@plt+0x50>  // b.none
    b6fc:	adrp	x1, 40000 <vasnprintf@@Base+0x1a170>
    b700:	ldr	x1, [x1, #3776]
    b704:	cbz	x1, b710 <xgetcwd@plt+0x50>
    b708:	mov	x16, x1
    b70c:	br	x16
    b710:	ret
    b714:	adrp	x0, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
    b718:	add	x0, x0, #0x358
    b71c:	adrp	x1, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
    b720:	add	x1, x1, #0x358
    b724:	sub	x1, x1, x0
    b728:	mov	x2, #0x2                   	// #2
    b72c:	asr	x1, x1, #3
    b730:	sdiv	x1, x1, x2
    b734:	cbz	x1, b74c <xgetcwd@plt+0x8c>
    b738:	adrp	x2, 40000 <vasnprintf@@Base+0x1a170>
    b73c:	ldr	x2, [x2, #4024]
    b740:	cbz	x2, b74c <xgetcwd@plt+0x8c>
    b744:	mov	x16, x2
    b748:	br	x16
    b74c:	ret
    b750:	adrp	x0, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
    b754:	ldrb	w1, [x0, #856]
    b758:	cbnz	w1, b79c <xgetcwd@plt+0xdc>
    b75c:	stp	x29, x30, [sp, #-32]!
    b760:	mov	x29, sp
    b764:	str	x19, [sp, #16]
    b768:	mov	x19, x0
    b76c:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    b770:	ldr	x0, [x0, #3800]
    b774:	cbz	x0, b784 <xgetcwd@plt+0xc4>
    b778:	adrp	x0, 41000 <base_len@@Base+0x2e68c>
    b77c:	ldr	x0, [x0, #2048]
    b780:	bl	a8f0 <__cxa_finalize@plt>
    b784:	bl	b6e4 <xgetcwd@plt+0x24>
    b788:	mov	w0, #0x1                   	// #1
    b78c:	strb	w0, [x19, #856]
    b790:	ldr	x19, [sp, #16]
    b794:	ldp	x29, x30, [sp], #32
    b798:	ret
    b79c:	ret
    b7a0:	b	b714 <xgetcwd@plt+0x54>

000000000000b7a4 <appendstr@@Base>:
    b7a4:	stp	x29, x30, [sp, #-160]!
    b7a8:	mov	x29, sp
    b7ac:	stp	x19, x20, [sp, #16]
    b7b0:	mov	x20, x0
    b7b4:	stp	x21, x22, [sp, #32]
    b7b8:	str	x23, [sp, #48]
    b7bc:	stp	x1, x2, [sp, #104]
    b7c0:	stp	x3, x4, [sp, #120]
    b7c4:	stp	x5, x6, [sp, #136]
    b7c8:	str	x7, [sp, #152]
    b7cc:	cbz	x0, b880 <appendstr@@Base+0xdc>
    b7d0:	bl	a780 <strlen@plt>
    b7d4:	mov	x19, x0
    b7d8:	add	x0, sp, #0xa0
    b7dc:	add	x21, x19, #0x1
    b7e0:	add	x23, sp, #0xa0
    b7e4:	add	x22, sp, #0x60
    b7e8:	stp	x0, x0, [sp, #64]
    b7ec:	mov	w0, #0xffffffc8            	// #-56
    b7f0:	str	x22, [sp, #80]
    b7f4:	str	w0, [sp, #88]
    b7f8:	str	wzr, [sp, #92]
    b7fc:	ldr	w1, [sp, #88]
    b800:	ldr	x0, [sp, #64]
    b804:	tbnz	w1, #31, b894 <appendstr@@Base+0xf0>
    b808:	add	x1, x0, #0xf
    b80c:	and	x1, x1, #0xfffffffffffffff8
    b810:	str	x1, [sp, #64]
    b814:	ldr	x0, [x0]
    b818:	cbnz	x0, b888 <appendstr@@Base+0xe4>
    b81c:	mov	x0, x20
    b820:	mov	x1, x21
    b824:	bl	ab60 <xrealloc@plt>
    b828:	mov	x20, x0
    b82c:	add	x19, x0, x19
    b830:	add	x0, sp, #0xa0
    b834:	stp	x0, x0, [sp, #64]
    b838:	mov	w0, #0xffffffc8            	// #-56
    b83c:	str	x22, [sp, #80]
    b840:	str	w0, [sp, #88]
    b844:	str	wzr, [sp, #92]
    b848:	ldr	w0, [sp, #88]
    b84c:	ldr	x1, [sp, #64]
    b850:	tbnz	w0, #31, b8c8 <appendstr@@Base+0x124>
    b854:	add	x0, x1, #0xf
    b858:	and	x0, x0, #0xfffffffffffffff8
    b85c:	str	x0, [sp, #64]
    b860:	ldr	x21, [x1]
    b864:	cbnz	x21, b8ac <appendstr@@Base+0x108>
    b868:	mov	x0, x20
    b86c:	ldp	x19, x20, [sp, #16]
    b870:	ldp	x21, x22, [sp, #32]
    b874:	ldr	x23, [sp, #48]
    b878:	ldp	x29, x30, [sp], #160
    b87c:	ret
    b880:	mov	x19, #0x0                   	// #0
    b884:	b	b7d8 <appendstr@@Base+0x34>
    b888:	bl	a780 <strlen@plt>
    b88c:	add	x21, x21, x0
    b890:	b	b7fc <appendstr@@Base+0x58>
    b894:	add	w2, w1, #0x8
    b898:	str	w2, [sp, #88]
    b89c:	cmp	w2, #0x0
    b8a0:	b.gt	b808 <appendstr@@Base+0x64>
    b8a4:	add	x0, x23, w1, sxtw
    b8a8:	b	b814 <appendstr@@Base+0x70>
    b8ac:	mov	x1, x21
    b8b0:	mov	x0, x19
    b8b4:	bl	b260 <strcpy@plt>
    b8b8:	mov	x0, x21
    b8bc:	bl	a780 <strlen@plt>
    b8c0:	add	x19, x19, x0
    b8c4:	b	b848 <appendstr@@Base+0xa4>
    b8c8:	add	w2, w0, #0x8
    b8cc:	str	w2, [sp, #88]
    b8d0:	cmp	w2, #0x0
    b8d4:	b.gt	b854 <appendstr@@Base+0xb0>
    b8d8:	ldr	x1, [sp, #72]
    b8dc:	add	x1, x1, w0, sxtw
    b8e0:	b	b860 <appendstr@@Base+0xbc>
    b8e4:	stp	x29, x30, [sp, #-192]!
    b8e8:	mov	x29, sp
    b8ec:	add	x2, sp, #0x28
    b8f0:	stp	x19, x20, [sp, #16]
    b8f4:	mov	x20, x1
    b8f8:	mov	w19, w0
    b8fc:	mov	x1, #0x0                   	// #0
    b900:	bl	adf0 <sigaction@plt>
    b904:	cbnz	w0, b938 <appendstr@@Base+0x194>
    b908:	ldr	x2, [sp, #40]
    b90c:	adrp	x1, b000 <gl_map_put@plt>
    b910:	add	x1, x1, #0xaf0
    b914:	cmp	x2, x1
    b918:	b.ne	b92c <appendstr@@Base+0x188>  // b.any
    b91c:	mov	x1, x20
    b920:	mov	w0, w19
    b924:	mov	x2, #0x0                   	// #0
    b928:	bl	adf0 <sigaction@plt>
    b92c:	ldp	x19, x20, [sp, #16]
    b930:	ldp	x29, x30, [sp], #192
    b934:	ret
    b938:	mov	w0, #0xffffffff            	// #-1
    b93c:	b	b92c <appendstr@@Base+0x188>
    b940:	stp	x29, x30, [sp, #-32]!
    b944:	mov	w0, #0x1                   	// #1
    b948:	mov	x29, sp
    b94c:	stp	x19, x20, [sp, #16]
    b950:	adrp	x20, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
    b954:	add	x20, x20, #0x360
    b958:	mov	x1, x20
    b95c:	bl	b8e4 <appendstr@@Base+0x140>
    b960:	mov	w19, w0
    b964:	add	x1, x20, #0x98
    b968:	mov	w0, #0x2                   	// #2
    b96c:	bl	b8e4 <appendstr@@Base+0x140>
    b970:	orr	w19, w19, w0
    b974:	add	x1, x20, #0x130
    b978:	mov	w0, #0xf                   	// #15
    b97c:	bl	b8e4 <appendstr@@Base+0x140>
    b980:	orr	w19, w19, w0
    b984:	cmp	w19, #0x0
    b988:	csetm	w0, ne  // ne = any
    b98c:	ldp	x19, x20, [sp, #16]
    b990:	ldp	x29, x30, [sp], #32
    b994:	ret
    b998:	stp	x29, x30, [sp, #-208]!
    b99c:	mov	x2, x1
    b9a0:	mov	x29, sp
    b9a4:	stp	x19, x20, [sp, #16]
    b9a8:	mov	x19, x1
    b9ac:	mov	w20, w0
    b9b0:	mov	x1, #0x0                   	// #0
    b9b4:	str	x21, [sp, #32]
    b9b8:	bl	adf0 <sigaction@plt>
    b9bc:	cbnz	w0, ba18 <appendstr@@Base+0x274>
    b9c0:	ldr	x1, [x19]
    b9c4:	cbnz	x1, ba08 <appendstr@@Base+0x264>
    b9c8:	add	x3, sp, #0x40
    b9cc:	mov	x2, #0x90                  	// #144
    b9d0:	mov	x0, x3
    b9d4:	add	x21, sp, #0x38
    b9d8:	bl	ac10 <memset@plt>
    b9dc:	mov	x3, x0
    b9e0:	adrp	x0, b000 <gl_map_put@plt>
    b9e4:	add	x0, x0, #0xaf0
    b9e8:	str	x0, [sp, #56]
    b9ec:	mov	x0, x3
    b9f0:	bl	aba0 <sigemptyset@plt>
    b9f4:	str	wzr, [sp, #192]
    b9f8:	mov	x2, x19
    b9fc:	mov	x1, x21
    ba00:	mov	w0, w20
    ba04:	bl	adf0 <sigaction@plt>
    ba08:	ldp	x19, x20, [sp, #16]
    ba0c:	ldr	x21, [sp, #32]
    ba10:	ldp	x29, x30, [sp], #208
    ba14:	ret
    ba18:	mov	w0, #0xffffffff            	// #-1
    ba1c:	b	ba08 <appendstr@@Base+0x264>

000000000000ba20 <do_cleanups_sigsafe@@Base>:
    ba20:	stp	x29, x30, [sp, #-48]!
    ba24:	adrp	x1, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
    ba28:	add	x1, x1, #0x360
    ba2c:	mov	x29, sp
    ba30:	stp	x19, x20, [sp, #16]
    ba34:	ldr	w20, [x1, #456]
    ba38:	stp	x21, x22, [sp, #32]
    ba3c:	mov	w21, w0
    ba40:	ldr	w0, [x1, #460]
    ba44:	cmp	w20, w0
    ba48:	b.hi	ba68 <do_cleanups_sigsafe@@Base+0x48>  // b.pmore
    ba4c:	mov	x19, x1
    ba50:	mov	w22, #0x18                  	// #24
    ba54:	cbnz	w20, ba88 <do_cleanups_sigsafe@@Base+0x68>
    ba58:	ldp	x19, x20, [sp, #16]
    ba5c:	ldp	x21, x22, [sp, #32]
    ba60:	ldp	x29, x30, [sp], #48
    ba64:	ret
    ba68:	adrp	x3, 26000 <vasnprintf@@Base+0x170>
    ba6c:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    ba70:	adrp	x0, 26000 <vasnprintf@@Base+0x170>
    ba74:	add	x3, x3, #0xa35
    ba78:	add	x1, x1, #0xa08
    ba7c:	add	x0, x0, #0xa12
    ba80:	mov	w2, #0xa9                  	// #169
    ba84:	bl	b530 <__assert_fail@plt>
    ba88:	sub	w20, w20, #0x1
    ba8c:	ldr	x2, [x19, #464]
    ba90:	umull	x1, w20, w22
    ba94:	add	x0, x2, x1
    ba98:	cbz	w21, baa4 <do_cleanups_sigsafe@@Base+0x84>
    ba9c:	ldr	w3, [x0, #16]
    baa0:	cbz	w3, ba54 <do_cleanups_sigsafe@@Base+0x34>
    baa4:	ldr	x1, [x2, x1]
    baa8:	ldr	x0, [x0, #8]
    baac:	blr	x1
    bab0:	b	ba54 <do_cleanups_sigsafe@@Base+0x34>

000000000000bab4 <do_cleanups@@Base>:
    bab4:	stp	x29, x30, [sp, #-32]!
    bab8:	mov	w0, #0x0                   	// #0
    babc:	mov	x29, sp
    bac0:	str	x19, [sp, #16]
    bac4:	adrp	x19, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
    bac8:	add	x19, x19, #0x360
    bacc:	bl	b1f0 <do_cleanups_sigsafe@plt>
    bad0:	ldr	x0, [x19, #464]
    bad4:	str	wzr, [x19, #456]
    bad8:	str	wzr, [x19, #460]
    badc:	bl	b050 <free@plt>
    bae0:	str	xzr, [x19, #464]
    bae4:	ldr	x19, [sp, #16]
    bae8:	ldp	x29, x30, [sp], #32
    baec:	ret
    baf0:	stp	x29, x30, [sp, #-320]!
    baf4:	mov	x29, sp
    baf8:	stp	x19, x20, [sp, #16]
    bafc:	mov	w19, w0
    bb00:	mov	w0, #0x1                   	// #1
    bb04:	bl	b1f0 <do_cleanups_sigsafe@plt>
    bb08:	add	x20, sp, #0xa8
    bb0c:	mov	x2, #0x98                  	// #152
    bb10:	mov	w1, #0x0                   	// #0
    bb14:	mov	x0, x20
    bb18:	bl	ac10 <memset@plt>
    bb1c:	add	x0, x20, #0x8
    bb20:	bl	aba0 <sigemptyset@plt>
    bb24:	mov	x1, x20
    bb28:	mov	w0, w19
    bb2c:	mov	x2, #0x0                   	// #0
    bb30:	str	wzr, [sp, #304]
    bb34:	bl	adf0 <sigaction@plt>
    bb38:	cbz	w0, bb44 <do_cleanups@@Base+0x90>
    bb3c:	mov	w0, #0x2                   	// #2
    bb40:	bl	a730 <_exit@plt>
    bb44:	add	x20, sp, #0x28
    bb48:	mov	x0, x20
    bb4c:	bl	aba0 <sigemptyset@plt>
    bb50:	cbnz	w0, bb3c <do_cleanups@@Base+0x88>
    bb54:	mov	w1, w19
    bb58:	mov	x0, x20
    bb5c:	bl	b480 <sigaddset@plt>
    bb60:	cbnz	w0, bb3c <do_cleanups@@Base+0x88>
    bb64:	mov	x1, x20
    bb68:	mov	x2, #0x0                   	// #0
    bb6c:	mov	w0, #0x1                   	// #1
    bb70:	bl	a830 <sigprocmask@plt>
    bb74:	cbnz	w0, bb3c <do_cleanups@@Base+0x88>
    bb78:	bl	aa70 <getpid@plt>
    bb7c:	mov	w1, w19
    bb80:	bl	a990 <kill@plt>
    bb84:	bl	aeb0 <abort@plt>

000000000000bb88 <push_cleanup@@Base>:
    bb88:	stp	x29, x30, [sp, #-80]!
    bb8c:	mov	x29, sp
    bb90:	stp	x19, x20, [sp, #16]
    bb94:	adrp	x19, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
    bb98:	stp	x23, x24, [sp, #48]
    bb9c:	add	x24, x19, #0x360
    bba0:	stp	x21, x22, [sp, #32]
    bba4:	ldr	w20, [x24, #456]
    bba8:	str	x25, [sp, #64]
    bbac:	ldr	w25, [x24, #460]
    bbb0:	cmp	w20, w25
    bbb4:	b.ls	bbdc <push_cleanup@@Base+0x54>  // b.plast
    bbb8:	adrp	x3, 26000 <vasnprintf@@Base+0x170>
    bbbc:	add	x3, x3, #0xa35
    bbc0:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    bbc4:	adrp	x0, 26000 <vasnprintf@@Base+0x170>
    bbc8:	add	x3, x3, #0x14
    bbcc:	add	x1, x1, #0xa08
    bbd0:	add	x0, x0, #0xa12
    bbd4:	mov	w2, #0xc8                  	// #200
    bbd8:	bl	b530 <__assert_fail@plt>
    bbdc:	mov	x23, x0
    bbe0:	ldr	w0, [x24, #472]
    bbe4:	mov	x22, x1
    bbe8:	mov	w21, w2
    bbec:	cbnz	w0, bc28 <push_cleanup@@Base+0xa0>
    bbf0:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    bbf4:	ldr	x0, [x0, #3840]
    bbf8:	bl	26998 <vasnprintf@@Base+0xb08>
    bbfc:	cbz	w0, bc20 <push_cleanup@@Base+0x98>
    bc00:	mov	w20, #0xffffffff            	// #-1
    bc04:	mov	w0, w20
    bc08:	ldp	x19, x20, [sp, #16]
    bc0c:	ldp	x21, x22, [sp, #32]
    bc10:	ldp	x23, x24, [sp, #48]
    bc14:	ldr	x25, [sp, #64]
    bc18:	ldp	x29, x30, [sp], #80
    bc1c:	ret
    bc20:	mov	w0, #0x1                   	// #1
    bc24:	str	w0, [x24, #472]
    bc28:	cmp	w20, w25
    bc2c:	b.ne	bc64 <push_cleanup@@Base+0xdc>  // b.any
    bc30:	add	x0, x19, #0x360
    bc34:	add	w20, w20, #0x1
    bc38:	ldr	x0, [x0, #464]
    bc3c:	cbz	x0, bc9c <push_cleanup@@Base+0x114>
    bc40:	mov	x1, x20
    bc44:	mov	x2, #0x18                  	// #24
    bc48:	bl	ad00 <xnrealloc@plt>
    bc4c:	cbz	x0, bc00 <push_cleanup@@Base+0x78>
    bc50:	add	x1, x19, #0x360
    bc54:	str	x0, [x1, #464]
    bc58:	ldr	w0, [x1, #460]
    bc5c:	add	w0, w0, #0x1
    bc60:	str	w0, [x1, #460]
    bc64:	add	x19, x19, #0x360
    bc68:	ldr	w0, [x19, #456]
    bc6c:	ldr	w1, [x19, #460]
    bc70:	cmp	w0, w1
    bc74:	b.cc	bcac <push_cleanup@@Base+0x124>  // b.lo, b.ul, b.last
    bc78:	adrp	x3, 26000 <vasnprintf@@Base+0x170>
    bc7c:	add	x3, x3, #0xa35
    bc80:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    bc84:	adrp	x0, 26000 <vasnprintf@@Base+0x170>
    bc88:	add	x3, x3, #0x14
    bc8c:	add	x1, x1, #0xa08
    bc90:	add	x0, x0, #0xa20
    bc94:	mov	w2, #0xe0                  	// #224
    bc98:	b	bbd8 <push_cleanup@@Base+0x50>
    bc9c:	mov	x0, x20
    bca0:	mov	x1, #0x18                  	// #24
    bca4:	bl	b660 <xnmalloc@plt>
    bca8:	b	bc4c <push_cleanup@@Base+0xc4>
    bcac:	mov	w1, #0x18                  	// #24
    bcb0:	ldr	x3, [x19, #464]
    bcb4:	umull	x1, w0, w1
    bcb8:	add	w0, w0, #0x1
    bcbc:	str	w0, [x19, #456]
    bcc0:	add	x2, x3, x1
    bcc4:	mov	w0, #0x1                   	// #1
    bcc8:	str	x23, [x3, x1]
    bccc:	mov	x1, x19
    bcd0:	str	x22, [x2, #8]
    bcd4:	str	w21, [x2, #16]
    bcd8:	bl	b998 <appendstr@@Base+0x1f4>
    bcdc:	cbz	w0, bce8 <push_cleanup@@Base+0x160>
    bce0:	mov	w20, #0x0                   	// #0
    bce4:	b	bc04 <push_cleanup@@Base+0x7c>
    bce8:	add	x1, x19, #0x98
    bcec:	mov	w0, #0x2                   	// #2
    bcf0:	bl	b998 <appendstr@@Base+0x1f4>
    bcf4:	mov	w20, w0
    bcf8:	cbnz	w0, bce0 <push_cleanup@@Base+0x158>
    bcfc:	add	x1, x19, #0x130
    bd00:	mov	w0, #0xf                   	// #15
    bd04:	bl	b998 <appendstr@@Base+0x1f4>
    bd08:	b	bc04 <push_cleanup@@Base+0x7c>

000000000000bd0c <pop_cleanup@@Base>:
    bd0c:	adrp	x2, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
    bd10:	add	x4, x2, #0x360
    bd14:	ldr	w5, [x4, #456]
    bd18:	cbnz	w5, bd48 <pop_cleanup@@Base+0x3c>
    bd1c:	stp	x29, x30, [sp, #-16]!
    bd20:	adrp	x3, 26000 <vasnprintf@@Base+0x170>
    bd24:	add	x3, x3, #0xa35
    bd28:	mov	x29, sp
    bd2c:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    bd30:	adrp	x0, 26000 <vasnprintf@@Base+0x170>
    bd34:	add	x3, x3, #0x21
    bd38:	add	x1, x1, #0xa08
    bd3c:	add	x0, x0, #0xa2d
    bd40:	mov	w2, #0xf5                  	// #245
    bd44:	bl	b530 <__assert_fail@plt>
    bd48:	ldr	x8, [x4, #464]
    bd4c:	sub	w9, w5, #0x1
    bd50:	mov	x3, x2
    bd54:	mov	w2, #0x18                  	// #24
    bd58:	mov	w6, w5
    bd5c:	umaddl	x2, w9, w2, x8
    bd60:	ldr	x7, [x2]
    bd64:	mov	w4, w6
    bd68:	sub	w6, w6, #0x1
    bd6c:	cmp	x7, x0
    bd70:	b.ne	bdc4 <pop_cleanup@@Base+0xb8>  // b.any
    bd74:	ldr	x7, [x2, #8]
    bd78:	cmp	x7, x1
    bd7c:	b.ne	bdc4 <pop_cleanup@@Base+0xb8>  // b.any
    bd80:	mov	w1, #0x18                  	// #24
    bd84:	umaddl	x0, w4, w1, x8
    bd88:	cmp	w5, w4
    bd8c:	b.hi	bda0 <pop_cleanup@@Base+0x94>  // b.pmore
    bd90:	add	x2, x3, #0x360
    bd94:	str	w9, [x2, #456]
    bd98:	cbz	w9, bdd0 <pop_cleanup@@Base+0xc4>
    bd9c:	ret
    bda0:	sub	w2, w4, #0x1
    bda4:	add	x0, x0, #0x18
    bda8:	ldp	x6, x7, [x0, #-24]
    bdac:	add	w4, w4, #0x1
    bdb0:	umaddl	x2, w2, w1, x8
    bdb4:	stp	x6, x7, [x2]
    bdb8:	ldur	x6, [x0, #-8]
    bdbc:	str	x6, [x2, #16]
    bdc0:	b	bd88 <pop_cleanup@@Base+0x7c>
    bdc4:	sub	x2, x2, #0x18
    bdc8:	cbnz	w6, bd60 <pop_cleanup@@Base+0x54>
    bdcc:	ret
    bdd0:	b	b940 <appendstr@@Base+0x19c>

000000000000bdd4 <pop_all_cleanups@@Base>:
    bdd4:	adrp	x0, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
    bdd8:	str	wzr, [x0, #1320]
    bddc:	b	b940 <appendstr@@Base+0x19c>

000000000000bde0 <init_debug@@Base>:
    bde0:	stp	x29, x30, [sp, #-16]!
    bde4:	adrp	x0, 26000 <vasnprintf@@Base+0x170>
    bde8:	add	x0, x0, #0xa62
    bdec:	mov	x29, sp
    bdf0:	bl	b570 <getenv@plt>
    bdf4:	cbz	x0, be18 <init_debug@@Base+0x38>
    bdf8:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
    bdfc:	add	x1, x1, #0x18d
    be00:	bl	afa0 <strcmp@plt>
    be04:	cbnz	w0, be18 <init_debug@@Base+0x38>
    be08:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    be0c:	mov	w1, #0x1                   	// #1
    be10:	ldr	x0, [x0, #3808]
    be14:	strb	w1, [x0]
    be18:	ldp	x29, x30, [sp], #16
    be1c:	ret

000000000000be20 <debug@@Base>:
    be20:	stp	x29, x30, [sp, #-304]!
    be24:	mov	x29, sp
    be28:	stp	x1, x2, [sp, #248]
    be2c:	adrp	x1, 40000 <vasnprintf@@Base+0x1a170>
    be30:	ldr	x1, [x1, #3808]
    be34:	str	q0, [sp, #112]
    be38:	str	q1, [sp, #128]
    be3c:	str	q2, [sp, #144]
    be40:	str	q3, [sp, #160]
    be44:	str	q4, [sp, #176]
    be48:	str	q5, [sp, #192]
    be4c:	str	q6, [sp, #208]
    be50:	str	q7, [sp, #224]
    be54:	stp	x3, x4, [sp, #264]
    be58:	stp	x5, x6, [sp, #280]
    be5c:	str	x7, [sp, #296]
    be60:	ldrb	w1, [x1]
    be64:	cbz	w1, beb8 <debug@@Base+0x98>
    be68:	add	x1, sp, #0x130
    be6c:	stp	x1, x1, [sp, #48]
    be70:	add	x1, sp, #0xf0
    be74:	str	x1, [sp, #64]
    be78:	mov	w1, #0xffffffc8            	// #-56
    be7c:	str	w1, [sp, #72]
    be80:	mov	w1, #0xffffff80            	// #-128
    be84:	str	w1, [sp, #76]
    be88:	mov	x1, x0
    be8c:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    be90:	ldp	x4, x5, [sp, #48]
    be94:	stp	x4, x5, [sp, #16]
    be98:	ldr	x0, [x0, #3816]
    be9c:	stp	x4, x5, [sp, #80]
    bea0:	ldp	x2, x3, [sp, #64]
    bea4:	stp	x2, x3, [sp, #32]
    bea8:	ldr	x0, [x0]
    beac:	stp	x2, x3, [sp, #96]
    beb0:	add	x2, sp, #0x10
    beb4:	bl	b510 <vfprintf@plt>
    beb8:	ldp	x29, x30, [sp], #304
    bebc:	ret

000000000000bec0 <debug_error@@Base>:
    bec0:	stp	x29, x30, [sp, #-304]!
    bec4:	mov	x29, sp
    bec8:	stp	x1, x2, [sp, #248]
    becc:	adrp	x1, 40000 <vasnprintf@@Base+0x1a170>
    bed0:	ldr	x1, [x1, #3808]
    bed4:	str	q0, [sp, #112]
    bed8:	str	q1, [sp, #128]
    bedc:	str	q2, [sp, #144]
    bee0:	str	q3, [sp, #160]
    bee4:	str	q4, [sp, #176]
    bee8:	str	q5, [sp, #192]
    beec:	str	q6, [sp, #208]
    bef0:	str	q7, [sp, #224]
    bef4:	stp	x3, x4, [sp, #264]
    bef8:	stp	x5, x6, [sp, #280]
    befc:	str	x7, [sp, #296]
    bf00:	ldrb	w1, [x1]
    bf04:	cbz	w1, bf74 <debug_error@@Base+0xb4>
    bf08:	add	x1, sp, #0x130
    bf0c:	stp	x1, x1, [sp, #48]
    bf10:	add	x1, sp, #0xf0
    bf14:	str	x1, [sp, #64]
    bf18:	mov	w1, #0xffffffc8            	// #-56
    bf1c:	str	w1, [sp, #72]
    bf20:	mov	w1, #0xffffff80            	// #-128
    bf24:	str	w1, [sp, #76]
    bf28:	mov	x1, x0
    bf2c:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    bf30:	ldp	x4, x5, [sp, #48]
    bf34:	stp	x4, x5, [sp, #16]
    bf38:	ldr	x0, [x0, #3816]
    bf3c:	stp	x4, x5, [sp, #80]
    bf40:	ldp	x2, x3, [sp, #64]
    bf44:	stp	x2, x3, [sp, #32]
    bf48:	ldr	x0, [x0]
    bf4c:	stp	x2, x3, [sp, #96]
    bf50:	add	x2, sp, #0x10
    bf54:	bl	b510 <vfprintf@plt>
    bf58:	bl	b540 <__errno_location@plt>
    bf5c:	ldr	w0, [x0]
    bf60:	bl	adb0 <strerror@plt>
    bf64:	mov	x1, x0
    bf68:	adrp	x0, 26000 <vasnprintf@@Base+0x170>
    bf6c:	add	x0, x0, #0xb96
    bf70:	bl	aa20 <debug@plt>
    bf74:	ldp	x29, x30, [sp], #304
    bf78:	ret

000000000000bf7c <get_groff_preconv@@Base>:
    bf7c:	stp	x29, x30, [sp, #-48]!
    bf80:	adrp	x1, 40000 <vasnprintf@@Base+0x1a170>
    bf84:	mov	x29, sp
    bf88:	stp	x19, x20, [sp, #16]
    bf8c:	ldr	x20, [x1, #3832]
    bf90:	ldr	x0, [x20]
    bf94:	str	x21, [sp, #32]
    bf98:	cbz	x0, bfb8 <get_groff_preconv@@Base+0x3c>
    bf9c:	ldrb	w1, [x0]
    bfa0:	cbnz	w1, bfa8 <get_groff_preconv@@Base+0x2c>
    bfa4:	mov	x0, #0x0                   	// #0
    bfa8:	ldp	x19, x20, [sp, #16]
    bfac:	ldr	x21, [sp, #32]
    bfb0:	ldp	x29, x30, [sp], #48
    bfb4:	ret
    bfb8:	adrp	x19, 26000 <vasnprintf@@Base+0x170>
    bfbc:	add	x19, x19, #0xa6c
    bfc0:	mov	x21, x1
    bfc4:	mov	x0, x19
    bfc8:	bl	b490 <pathsearch_executable@plt>
    bfcc:	tst	w0, #0xff
    bfd0:	b.eq	bfe4 <get_groff_preconv@@Base+0x68>  // b.none
    bfd4:	str	x19, [x20]
    bfd8:	ldr	x0, [x21, #3832]
    bfdc:	ldr	x0, [x0]
    bfe0:	b	bf9c <get_groff_preconv@@Base+0x20>
    bfe4:	adrp	x0, 26000 <vasnprintf@@Base+0x170>
    bfe8:	add	x19, x0, #0xa6d
    bfec:	mov	x0, x19
    bff0:	bl	b490 <pathsearch_executable@plt>
    bff4:	tst	w0, #0xff
    bff8:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
    bffc:	add	x0, x0, #0x66
    c000:	csel	x0, x0, x19, eq  // eq = none
    c004:	str	x0, [x20]
    c008:	b	bfd8 <get_groff_preconv@@Base+0x5c>

000000000000c00c <get_source_encoding@@Base>:
    c00c:	stp	x29, x30, [sp, #-48]!
    c010:	mov	x29, sp
    c014:	stp	x19, x20, [sp, #16]
    c018:	str	x21, [sp, #32]
    c01c:	cbz	x0, c02c <get_source_encoding@@Base+0x20>
    c020:	mov	x19, x0
    c024:	ldrb	w0, [x0]
    c028:	cbnz	w0, c058 <get_source_encoding@@Base+0x4c>
    c02c:	mov	x1, #0x0                   	// #0
    c030:	mov	w0, #0x5                   	// #5
    c034:	bl	b680 <setlocale@plt>
    c038:	mov	x19, x0
    c03c:	cbnz	x0, c058 <get_source_encoding@@Base+0x4c>
    c040:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    c044:	add	x0, x0, #0x98
    c048:	ldp	x19, x20, [sp, #16]
    c04c:	ldr	x21, [sp, #32]
    c050:	ldp	x29, x30, [sp], #48
    c054:	ret
    c058:	adrp	x20, 41000 <base_len@@Base+0x2e68c>
    c05c:	add	x20, x20, #0x808
    c060:	ldr	x21, [x20]
    c064:	cbz	x21, c040 <get_source_encoding@@Base+0x34>
    c068:	mov	x0, x21
    c06c:	bl	a780 <strlen@plt>
    c070:	mov	x1, x19
    c074:	mov	x2, x0
    c078:	mov	x0, x21
    c07c:	bl	abd0 <strncmp@plt>
    c080:	cbnz	w0, c08c <get_source_encoding@@Base+0x80>
    c084:	ldr	x0, [x20, #8]
    c088:	b	c048 <get_source_encoding@@Base+0x3c>
    c08c:	add	x20, x20, #0x10
    c090:	b	c060 <get_source_encoding@@Base+0x54>

000000000000c094 <get_canonical_charset_name@@Base>:
    c094:	stp	x29, x30, [sp, #-48]!
    c098:	mov	x29, sp
    c09c:	stp	x19, x20, [sp, #16]
    c0a0:	stp	x21, x22, [sp, #32]
    c0a4:	mov	x21, x0
    c0a8:	bl	ac70 <xstrdup@plt>
    c0ac:	mov	x20, x0
    c0b0:	mov	x22, x0
    c0b4:	ldrb	w19, [x22]
    c0b8:	cbnz	w19, c0dc <get_canonical_charset_name@@Base+0x48>
    c0bc:	adrp	x19, 41000 <base_len@@Base+0x2e68c>
    c0c0:	add	x19, x19, #0x808
    c0c4:	add	x19, x19, #0x2e0
    c0c8:	ldr	x0, [x19]
    c0cc:	cbnz	x0, c0f4 <get_canonical_charset_name@@Base+0x60>
    c0d0:	mov	x0, x20
    c0d4:	bl	b050 <free@plt>
    c0d8:	b	c10c <get_canonical_charset_name@@Base+0x78>
    c0dc:	bl	ad70 <__ctype_toupper_loc@plt>
    c0e0:	ubfiz	x19, x19, #2, #8
    c0e4:	ldr	x0, [x0]
    c0e8:	ldr	w0, [x0, x19]
    c0ec:	strb	w0, [x22], #1
    c0f0:	b	c0b4 <get_canonical_charset_name@@Base+0x20>
    c0f4:	mov	x1, x20
    c0f8:	bl	afa0 <strcmp@plt>
    c0fc:	cbnz	w0, c120 <get_canonical_charset_name@@Base+0x8c>
    c100:	mov	x0, x20
    c104:	bl	b050 <free@plt>
    c108:	ldr	x21, [x19, #8]
    c10c:	mov	x0, x21
    c110:	ldp	x19, x20, [sp, #16]
    c114:	ldp	x21, x22, [sp, #32]
    c118:	ldp	x29, x30, [sp], #48
    c11c:	ret
    c120:	add	x19, x19, #0x10
    c124:	b	c0c8 <get_canonical_charset_name@@Base+0x34>

000000000000c128 <get_page_encoding@@Base>:
    c128:	stp	x29, x30, [sp, #-48]!
    c12c:	mov	x29, sp
    c130:	stp	x19, x20, [sp, #16]
    c134:	str	x21, [sp, #32]
    c138:	cbz	x0, c148 <get_page_encoding@@Base+0x20>
    c13c:	mov	x19, x0
    c140:	ldrb	w0, [x0]
    c144:	cbnz	w0, c168 <get_page_encoding@@Base+0x40>
    c148:	mov	x1, #0x0                   	// #0
    c14c:	mov	w0, #0x5                   	// #5
    c150:	bl	b680 <setlocale@plt>
    c154:	mov	x19, x0
    c158:	cbnz	x0, c168 <get_page_encoding@@Base+0x40>
    c15c:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    c160:	add	x0, x0, #0x98
    c164:	b	c1f0 <get_page_encoding@@Base+0xc8>
    c168:	mov	x0, x19
    c16c:	mov	w1, #0x2e                  	// #46
    c170:	bl	b190 <strchr@plt>
    c174:	cbz	x0, c200 <get_page_encoding@@Base+0xd8>
    c178:	add	x19, x0, #0x1
    c17c:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c180:	add	x1, x1, #0xa75
    c184:	mov	x0, x19
    c188:	bl	b4f0 <strcspn@plt>
    c18c:	mov	x1, x0
    c190:	mov	x0, x19
    c194:	bl	b310 <xstrndup@plt>
    c198:	mov	x20, x0
    c19c:	bl	a770 <get_canonical_charset_name@plt>
    c1a0:	bl	ac70 <xstrdup@plt>
    c1a4:	mov	x19, x0
    c1a8:	mov	x0, x20
    c1ac:	bl	b050 <free@plt>
    c1b0:	mov	x0, x19
    c1b4:	ldp	x19, x20, [sp, #16]
    c1b8:	ldr	x21, [sp, #32]
    c1bc:	ldp	x29, x30, [sp], #48
    c1c0:	ret
    c1c4:	add	x20, x20, #0x10
    c1c8:	ldr	x21, [x20]
    c1cc:	cbz	x21, c15c <get_page_encoding@@Base+0x34>
    c1d0:	mov	x0, x21
    c1d4:	bl	a780 <strlen@plt>
    c1d8:	mov	x1, x19
    c1dc:	mov	x2, x0
    c1e0:	mov	x0, x21
    c1e4:	bl	abd0 <strncmp@plt>
    c1e8:	cbnz	w0, c1c4 <get_page_encoding@@Base+0x9c>
    c1ec:	ldr	x0, [x20, #8]
    c1f0:	ldp	x19, x20, [sp, #16]
    c1f4:	ldr	x21, [sp, #32]
    c1f8:	ldp	x29, x30, [sp], #48
    c1fc:	b	ac70 <xstrdup@plt>
    c200:	adrp	x20, 41000 <base_len@@Base+0x2e68c>
    c204:	add	x20, x20, #0x808
    c208:	b	c1c8 <get_page_encoding@@Base+0xa0>

000000000000c20c <get_locale_charset@@Base>:
    c20c:	stp	x29, x30, [sp, #-32]!
    c210:	mov	x1, #0x0                   	// #0
    c214:	mov	w0, #0x0                   	// #0
    c218:	mov	x29, sp
    c21c:	stp	x19, x20, [sp, #16]
    c220:	bl	b680 <setlocale@plt>
    c224:	cbz	x0, c22c <get_locale_charset@@Base+0x20>
    c228:	bl	ac70 <xstrdup@plt>
    c22c:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
    c230:	add	x1, x1, #0x66
    c234:	mov	x19, x0
    c238:	mov	w0, #0x0                   	// #0
    c23c:	bl	b680 <setlocale@plt>
    c240:	bl	b580 <locale_charset@plt>
    c244:	mov	x20, x0
    c248:	mov	x1, x19
    c24c:	mov	w0, #0x0                   	// #0
    c250:	bl	b680 <setlocale@plt>
    c254:	mov	x0, x19
    c258:	bl	b050 <free@plt>
    c25c:	cbz	x20, c278 <get_locale_charset@@Base+0x6c>
    c260:	ldrb	w0, [x20]
    c264:	cbz	w0, c278 <get_locale_charset@@Base+0x6c>
    c268:	mov	x0, x20
    c26c:	ldp	x19, x20, [sp, #16]
    c270:	ldp	x29, x30, [sp], #32
    c274:	b	a770 <get_canonical_charset_name@plt>
    c278:	mov	x0, #0x0                   	// #0
    c27c:	ldp	x19, x20, [sp, #16]
    c280:	ldp	x29, x30, [sp], #32
    c284:	ret

000000000000c288 <find_charset_locale@@Base>:
    c288:	stp	x29, x30, [sp, #-128]!
    c28c:	mov	x29, sp
    c290:	stp	x19, x20, [sp, #16]
    c294:	mov	x19, x0
    c298:	stp	x21, x22, [sp, #32]
    c29c:	stp	x23, x24, [sp, #48]
    c2a0:	str	x25, [sp, #64]
    c2a4:	bl	a770 <get_canonical_charset_name@plt>
    c2a8:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c2ac:	add	x1, x1, #0xa8c
    c2b0:	mov	x22, x0
    c2b4:	stp	xzr, xzr, [sp, #80]
    c2b8:	ldp	x2, x3, [x1]
    c2bc:	stp	x2, x3, [sp, #96]
    c2c0:	ldr	x0, [x1, #16]
    c2c4:	str	x0, [sp, #112]
    c2c8:	ldrh	w0, [x1, #24]
    c2cc:	strh	w0, [sp, #120]
    c2d0:	bl	b440 <get_locale_charset@plt>
    c2d4:	mov	x1, x0
    c2d8:	mov	x0, x19
    c2dc:	bl	afa0 <strcmp@plt>
    c2e0:	cbz	w0, c48c <find_charset_locale@@Base+0x204>
    c2e4:	mov	x1, #0x0                   	// #0
    c2e8:	mov	w0, #0x0                   	// #0
    c2ec:	bl	b680 <setlocale@plt>
    c2f0:	mov	x20, x0
    c2f4:	cbz	x0, c300 <find_charset_locale@@Base+0x78>
    c2f8:	bl	ac70 <xstrdup@plt>
    c2fc:	mov	x20, x0
    c300:	add	x0, sp, #0x60
    c304:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c308:	add	x25, sp, #0x58
    c30c:	add	x1, x1, #0xe3c
    c310:	add	x24, sp, #0x50
    c314:	bl	aa90 <fopen@plt>
    c318:	mov	x21, x0
    c31c:	cbnz	x21, c358 <find_charset_locale@@Base+0xd0>
    c320:	mov	x0, x22
    c324:	bl	a780 <strlen@plt>
    c328:	cmp	x0, #0x4
    c32c:	b.hi	c420 <find_charset_locale@@Base+0x198>  // b.pmore
    c330:	mov	x19, #0x0                   	// #0
    c334:	b	c3dc <find_charset_locale@@Base+0x154>
    c338:	mov	x0, x19
    c33c:	bl	b050 <free@plt>
    c340:	mov	x0, x23
    c344:	bl	b050 <free@plt>
    c348:	ldr	x0, [sp, #80]
    c34c:	bl	b050 <free@plt>
    c350:	str	xzr, [sp, #80]
    c354:	b	c31c <find_charset_locale@@Base+0x94>
    c358:	mov	x2, x21
    c35c:	mov	x1, x25
    c360:	mov	x0, x24
    c364:	bl	b010 <getline@plt>
    c368:	tbnz	x0, #63, c320 <find_charset_locale@@Base+0x98>
    c36c:	ldr	x0, [sp, #80]
    c370:	mov	w1, #0x20                  	// #32
    c374:	bl	b190 <strchr@plt>
    c378:	mov	x19, x0
    c37c:	cbz	x0, c348 <find_charset_locale@@Base+0xc0>
    c380:	add	x0, x0, #0x1
    c384:	bl	ac70 <xstrdup@plt>
    c388:	mov	w1, #0xa                   	// #10
    c38c:	mov	x23, x0
    c390:	bl	b190 <strchr@plt>
    c394:	cbz	x0, c39c <find_charset_locale@@Base+0x114>
    c398:	strb	wzr, [x0]
    c39c:	mov	x0, x23
    c3a0:	bl	a770 <get_canonical_charset_name@plt>
    c3a4:	mov	x1, x0
    c3a8:	mov	x0, x22
    c3ac:	bl	afa0 <strcmp@plt>
    c3b0:	cbnz	w0, c340 <find_charset_locale@@Base+0xb8>
    c3b4:	ldr	x0, [sp, #80]
    c3b8:	sub	x1, x19, x0
    c3bc:	bl	b310 <xstrndup@plt>
    c3c0:	mov	x19, x0
    c3c4:	mov	x1, x0
    c3c8:	mov	w0, #0x0                   	// #0
    c3cc:	bl	b680 <setlocale@plt>
    c3d0:	cbz	x0, c338 <find_charset_locale@@Base+0xb0>
    c3d4:	mov	x0, x23
    c3d8:	bl	b050 <free@plt>
    c3dc:	ldr	x0, [sp, #80]
    c3e0:	bl	b050 <free@plt>
    c3e4:	mov	x1, x20
    c3e8:	mov	w0, #0x0                   	// #0
    c3ec:	bl	b680 <setlocale@plt>
    c3f0:	mov	x0, x20
    c3f4:	bl	b050 <free@plt>
    c3f8:	cbz	x21, c404 <find_charset_locale@@Base+0x17c>
    c3fc:	mov	x0, x21
    c400:	bl	aa40 <fclose@plt>
    c404:	mov	x0, x19
    c408:	ldp	x19, x20, [sp, #16]
    c40c:	ldp	x21, x22, [sp, #32]
    c410:	ldp	x23, x24, [sp, #48]
    c414:	ldr	x25, [sp, #64]
    c418:	ldp	x29, x30, [sp], #128
    c41c:	ret
    c420:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c424:	mov	x0, x22
    c428:	add	x1, x1, #0xa7a
    c42c:	mov	x2, #0x5                   	// #5
    c430:	bl	abd0 <strncmp@plt>
    c434:	cbnz	w0, c330 <find_charset_locale@@Base+0xa8>
    c438:	adrp	x0, 26000 <vasnprintf@@Base+0x170>
    c43c:	add	x0, x0, #0xa78
    c440:	bl	ac70 <xstrdup@plt>
    c444:	mov	x19, x0
    c448:	mov	x1, x0
    c44c:	mov	w0, #0x0                   	// #0
    c450:	bl	b680 <setlocale@plt>
    c454:	cbnz	x0, c3dc <find_charset_locale@@Base+0x154>
    c458:	mov	x0, x19
    c45c:	bl	b050 <free@plt>
    c460:	adrp	x0, 26000 <vasnprintf@@Base+0x170>
    c464:	add	x0, x0, #0xa80
    c468:	bl	ac70 <xstrdup@plt>
    c46c:	mov	x19, x0
    c470:	mov	x1, x0
    c474:	mov	w0, #0x0                   	// #0
    c478:	bl	b680 <setlocale@plt>
    c47c:	cbnz	x0, c3dc <find_charset_locale@@Base+0x154>
    c480:	mov	x0, x19
    c484:	bl	b050 <free@plt>
    c488:	b	c330 <find_charset_locale@@Base+0xa8>
    c48c:	mov	x19, #0x0                   	// #0
    c490:	b	c404 <find_charset_locale@@Base+0x17c>

000000000000c494 <is_roff_device@@Base>:
    c494:	stp	x29, x30, [sp, #-32]!
    c498:	mov	x29, sp
    c49c:	stp	x19, x20, [sp, #16]
    c4a0:	adrp	x19, 41000 <base_len@@Base+0x2e68c>
    c4a4:	add	x19, x19, #0x808
    c4a8:	mov	x20, x0
    c4ac:	add	x19, x19, #0x5a0
    c4b0:	ldr	x0, [x19]
    c4b4:	cbnz	x0, c4c4 <is_roff_device@@Base+0x30>
    c4b8:	ldp	x19, x20, [sp, #16]
    c4bc:	ldp	x29, x30, [sp], #32
    c4c0:	ret
    c4c4:	mov	x1, x20
    c4c8:	bl	afa0 <strcmp@plt>
    c4cc:	cbz	w0, c4d8 <is_roff_device@@Base+0x44>
    c4d0:	add	x19, x19, #0x18
    c4d4:	b	c4b0 <is_roff_device@@Base+0x1c>
    c4d8:	mov	w0, #0x1                   	// #1
    c4dc:	b	c4b8 <is_roff_device@@Base+0x24>

000000000000c4e0 <get_roff_encoding@@Base>:
    c4e0:	stp	x29, x30, [sp, #-48]!
    c4e4:	mov	x29, sp
    c4e8:	stp	x19, x20, [sp, #16]
    c4ec:	stp	x21, x22, [sp, #32]
    c4f0:	cbnz	x0, c560 <get_roff_encoding@@Base+0x80>
    c4f4:	adrp	x19, 27000 <vasnprintf@@Base+0x1170>
    c4f8:	add	x19, x19, #0x98
    c4fc:	add	x19, x19, #0xb
    c500:	mov	x0, x19
    c504:	ldp	x19, x20, [sp, #16]
    c508:	ldp	x21, x22, [sp, #32]
    c50c:	ldp	x29, x30, [sp], #48
    c510:	ret
    c514:	mov	x1, x20
    c518:	bl	afa0 <strcmp@plt>
    c51c:	cbnz	w0, c544 <get_roff_encoding@@Base+0x64>
    c520:	ldr	x19, [x19, #8]
    c524:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c528:	mov	x0, x20
    c52c:	add	x1, x1, #0xaa6
    c530:	bl	afa0 <strcmp@plt>
    c534:	cbz	w0, c578 <get_roff_encoding@@Base+0x98>
    c538:	cmp	x19, #0x0
    c53c:	csel	x19, x19, x22, ne  // ne = any
    c540:	b	c500 <get_roff_encoding@@Base+0x20>
    c544:	add	x19, x19, #0x18
    c548:	ldr	x0, [x19]
    c54c:	cbnz	x0, c514 <get_roff_encoding@@Base+0x34>
    c550:	adrp	x19, 27000 <vasnprintf@@Base+0x1170>
    c554:	add	x19, x19, #0x98
    c558:	add	x19, x19, #0xb
    c55c:	b	c524 <get_roff_encoding@@Base+0x44>
    c560:	adrp	x19, 41000 <base_len@@Base+0x2e68c>
    c564:	add	x19, x19, #0x808
    c568:	mov	x20, x0
    c56c:	mov	x22, x1
    c570:	add	x19, x19, #0x5a0
    c574:	b	c548 <get_roff_encoding@@Base+0x68>
    c578:	bl	abb0 <get_groff_preconv@plt>
    c57c:	cbnz	x0, c538 <get_roff_encoding@@Base+0x58>
    c580:	adrp	x20, 26000 <vasnprintf@@Base+0x170>
    c584:	bl	b440 <get_locale_charset@plt>
    c588:	add	x20, x20, #0xa7a
    c58c:	mov	x1, x20
    c590:	bl	afa0 <strcmp@plt>
    c594:	cbnz	w0, c538 <get_roff_encoding@@Base+0x58>
    c598:	mov	x1, #0x0                   	// #0
    c59c:	bl	b680 <setlocale@plt>
    c5a0:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c5a4:	mov	x21, x0
    c5a8:	add	x1, x1, #0xaab
    c5ac:	mov	x2, #0x5                   	// #5
    c5b0:	bl	abd0 <strncmp@plt>
    c5b4:	cbz	w0, c630 <get_roff_encoding@@Base+0x150>
    c5b8:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c5bc:	mov	x0, x21
    c5c0:	add	x1, x1, #0xab1
    c5c4:	mov	x2, #0x5                   	// #5
    c5c8:	bl	abd0 <strncmp@plt>
    c5cc:	cbz	w0, c630 <get_roff_encoding@@Base+0x150>
    c5d0:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c5d4:	mov	x0, x21
    c5d8:	add	x1, x1, #0xab7
    c5dc:	mov	x2, #0x5                   	// #5
    c5e0:	bl	abd0 <strncmp@plt>
    c5e4:	cbz	w0, c630 <get_roff_encoding@@Base+0x150>
    c5e8:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c5ec:	mov	x0, x21
    c5f0:	add	x1, x1, #0xabd
    c5f4:	mov	x2, #0x5                   	// #5
    c5f8:	bl	abd0 <strncmp@plt>
    c5fc:	cbz	w0, c630 <get_roff_encoding@@Base+0x150>
    c600:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c604:	mov	x0, x21
    c608:	add	x1, x1, #0xac3
    c60c:	mov	x2, #0x5                   	// #5
    c610:	bl	abd0 <strncmp@plt>
    c614:	cbz	w0, c630 <get_roff_encoding@@Base+0x150>
    c618:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c61c:	mov	x0, x21
    c620:	add	x1, x1, #0xac9
    c624:	mov	x2, #0x5                   	// #5
    c628:	bl	abd0 <strncmp@plt>
    c62c:	cbnz	w0, c538 <get_roff_encoding@@Base+0x58>
    c630:	mov	x19, x20
    c634:	b	c500 <get_roff_encoding@@Base+0x20>

000000000000c638 <get_default_device@@Base>:
    c638:	stp	x29, x30, [sp, #-80]!
    c63c:	mov	x29, sp
    c640:	stp	x19, x20, [sp, #16]
    c644:	mov	x19, x1
    c648:	stp	x21, x22, [sp, #32]
    c64c:	stp	x23, x24, [sp, #48]
    c650:	mov	x23, x0
    c654:	str	x25, [sp, #64]
    c658:	bl	abb0 <get_groff_preconv@plt>
    c65c:	cbz	x0, c6a4 <get_default_device@@Base+0x6c>
    c660:	cbz	x23, c7e0 <get_default_device@@Base+0x1a8>
    c664:	mov	x0, x23
    c668:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c66c:	add	x1, x1, #0xadc
    c670:	bl	afa0 <strcmp@plt>
    c674:	adrp	x2, 26000 <vasnprintf@@Base+0x170>
    c678:	cmp	w0, #0x0
    c67c:	add	x2, x2, #0xad6
    c680:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c684:	add	x0, x1, #0xaa6
    c688:	csel	x0, x0, x2, ne  // ne = any
    c68c:	ldp	x19, x20, [sp, #16]
    c690:	ldp	x21, x22, [sp, #32]
    c694:	ldp	x23, x24, [sp, #48]
    c698:	ldr	x25, [sp, #64]
    c69c:	ldp	x29, x30, [sp], #80
    c6a0:	ret
    c6a4:	cbnz	x23, c7c0 <get_default_device@@Base+0x188>
    c6a8:	adrp	x0, 26000 <vasnprintf@@Base+0x170>
    c6ac:	add	x0, x0, #0xacf
    c6b0:	b	c68c <get_default_device@@Base+0x54>
    c6b4:	add	x20, x20, #0x10
    c6b8:	ldr	x0, [x20]
    c6bc:	cbz	x0, c6a8 <get_default_device@@Base+0x70>
    c6c0:	mov	x1, x23
    c6c4:	bl	afa0 <strcmp@plt>
    c6c8:	cbnz	w0, c6b4 <get_default_device@@Base+0x7c>
    c6cc:	ldr	x0, [x20, #8]
    c6d0:	mov	x1, x19
    c6d4:	bl	a860 <get_roff_encoding@plt>
    c6d8:	mov	x21, x0
    c6dc:	mov	x1, x0
    c6e0:	mov	x0, x19
    c6e4:	bl	afa0 <strcmp@plt>
    c6e8:	cbz	w0, c7b8 <get_default_device@@Base+0x180>
    c6ec:	mov	x1, x22
    c6f0:	mov	x0, x19
    c6f4:	bl	afa0 <strcmp@plt>
    c6f8:	cbz	w0, c7b8 <get_default_device@@Base+0x180>
    c6fc:	add	x1, x24, #0xa7a
    c700:	mov	x0, x19
    c704:	bl	afa0 <strcmp@plt>
    c708:	cbz	w0, c7b8 <get_default_device@@Base+0x180>
    c70c:	mov	x1, x22
    c710:	mov	x0, x21
    c714:	bl	afa0 <strcmp@plt>
    c718:	cbz	w0, c7b8 <get_default_device@@Base+0x180>
    c71c:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c720:	mov	x0, x19
    c724:	add	x1, x1, #0xaeb
    c728:	bl	afa0 <strcmp@plt>
    c72c:	cbz	w0, c7a8 <get_default_device@@Base+0x170>
    c730:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c734:	mov	x0, x19
    c738:	add	x1, x1, #0xaf0
    c73c:	bl	afa0 <strcmp@plt>
    c740:	cbz	w0, c7a8 <get_default_device@@Base+0x170>
    c744:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c748:	mov	x0, x19
    c74c:	add	x1, x1, #0xafa
    c750:	bl	afa0 <strcmp@plt>
    c754:	cbz	w0, c7a8 <get_default_device@@Base+0x170>
    c758:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c75c:	mov	x0, x19
    c760:	add	x1, x1, #0xb01
    c764:	bl	afa0 <strcmp@plt>
    c768:	cbz	w0, c7a8 <get_default_device@@Base+0x170>
    c76c:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c770:	mov	x0, x19
    c774:	add	x1, x1, #0xb08
    c778:	bl	afa0 <strcmp@plt>
    c77c:	cbz	w0, c7a8 <get_default_device@@Base+0x170>
    c780:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c784:	mov	x0, x19
    c788:	add	x1, x1, #0xb0c
    c78c:	bl	afa0 <strcmp@plt>
    c790:	cbz	w0, c7a8 <get_default_device@@Base+0x170>
    c794:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c798:	mov	x0, x19
    c79c:	add	x1, x1, #0xb13
    c7a0:	bl	afa0 <strcmp@plt>
    c7a4:	cbnz	w0, c6b4 <get_default_device@@Base+0x7c>
    c7a8:	mov	x1, x25
    c7ac:	mov	x0, x21
    c7b0:	bl	afa0 <strcmp@plt>
    c7b4:	cbnz	w0, c6b4 <get_default_device@@Base+0x7c>
    c7b8:	ldr	x0, [x20, #8]
    c7bc:	b	c68c <get_default_device@@Base+0x54>
    c7c0:	adrp	x20, 41000 <base_len@@Base+0x2e68c>
    c7c4:	add	x20, x20, #0x808
    c7c8:	adrp	x22, 26000 <vasnprintf@@Base+0x170>
    c7cc:	adrp	x24, 26000 <vasnprintf@@Base+0x170>
    c7d0:	add	x20, x20, #0x708
    c7d4:	add	x22, x22, #0xadc
    c7d8:	add	x25, x24, #0xa7a
    c7dc:	b	c6b8 <get_default_device@@Base+0x80>
    c7e0:	adrp	x0, 26000 <vasnprintf@@Base+0x170>
    c7e4:	add	x0, x0, #0xaa6
    c7e8:	b	c68c <get_default_device@@Base+0x54>

000000000000c7ec <get_output_encoding@@Base>:
    c7ec:	stp	x29, x30, [sp, #-32]!
    c7f0:	mov	x29, sp
    c7f4:	stp	x19, x20, [sp, #16]
    c7f8:	adrp	x19, 41000 <base_len@@Base+0x2e68c>
    c7fc:	add	x19, x19, #0x808
    c800:	mov	x20, x0
    c804:	add	x19, x19, #0x5a0
    c808:	ldr	x0, [x19]
    c80c:	cbz	x0, c820 <get_output_encoding@@Base+0x34>
    c810:	mov	x1, x20
    c814:	bl	afa0 <strcmp@plt>
    c818:	cbnz	w0, c82c <get_output_encoding@@Base+0x40>
    c81c:	ldr	x0, [x19, #16]
    c820:	ldp	x19, x20, [sp, #16]
    c824:	ldp	x29, x30, [sp], #32
    c828:	ret
    c82c:	add	x19, x19, #0x18
    c830:	b	c808 <get_output_encoding@@Base+0x1c>

000000000000c834 <get_less_charset@@Base>:
    c834:	cbnz	x0, c880 <get_less_charset@@Base+0x4c>
    c838:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    c83c:	add	x0, x0, #0x98
    c840:	add	x0, x0, #0x16
    c844:	ret
    c848:	mov	x1, x20
    c84c:	bl	afa0 <strcmp@plt>
    c850:	cbnz	w0, c864 <get_less_charset@@Base+0x30>
    c854:	ldr	x0, [x19, #8]
    c858:	ldp	x19, x20, [sp, #16]
    c85c:	ldp	x29, x30, [sp], #32
    c860:	ret
    c864:	add	x19, x19, #0x18
    c868:	ldr	x0, [x19]
    c86c:	cbnz	x0, c848 <get_less_charset@@Base+0x14>
    c870:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    c874:	add	x0, x0, #0x98
    c878:	add	x0, x0, #0x16
    c87c:	b	c858 <get_less_charset@@Base+0x24>
    c880:	stp	x29, x30, [sp, #-32]!
    c884:	mov	x29, sp
    c888:	stp	x19, x20, [sp, #16]
    c88c:	adrp	x19, 41000 <base_len@@Base+0x2e68c>
    c890:	add	x19, x19, #0x808
    c894:	mov	x20, x0
    c898:	add	x19, x19, #0x7a8
    c89c:	b	c868 <get_less_charset@@Base+0x34>

000000000000c8a0 <get_jless_charset@@Base>:
    c8a0:	cbnz	x0, c8d4 <get_jless_charset@@Base+0x34>
    c8a4:	mov	x0, #0x0                   	// #0
    c8a8:	ret
    c8ac:	add	x19, x19, #0x18
    c8b0:	ldr	x0, [x19]
    c8b4:	cbz	x0, c8c8 <get_jless_charset@@Base+0x28>
    c8b8:	mov	x1, x20
    c8bc:	bl	afa0 <strcmp@plt>
    c8c0:	cbnz	w0, c8ac <get_jless_charset@@Base+0xc>
    c8c4:	ldr	x0, [x19, #16]
    c8c8:	ldp	x19, x20, [sp, #16]
    c8cc:	ldp	x29, x30, [sp], #32
    c8d0:	ret
    c8d4:	stp	x29, x30, [sp, #-32]!
    c8d8:	mov	x29, sp
    c8dc:	stp	x19, x20, [sp, #16]
    c8e0:	adrp	x19, 41000 <base_len@@Base+0x2e68c>
    c8e4:	add	x19, x19, #0x808
    c8e8:	mov	x20, x0
    c8ec:	add	x19, x19, #0x7a8
    c8f0:	b	c8b0 <get_jless_charset@@Base+0x10>

000000000000c8f4 <check_preprocessor_encoding@@Base>:
    c8f4:	stp	x29, x30, [sp, #-96]!
    c8f8:	mov	x29, sp
    c8fc:	stp	x19, x20, [sp, #16]
    c900:	stp	x21, x22, [sp, #32]
    c904:	stp	x23, x24, [sp, #48]
    c908:	stp	x25, x26, [sp, #64]
    c90c:	mov	x25, x1
    c910:	mov	x26, x2
    c914:	stp	x27, x28, [sp, #80]
    c918:	bl	b1e0 <pipeline_peekline@plt>
    c91c:	mov	x24, x0
    c920:	cbz	x0, c9c8 <check_preprocessor_encoding@@Base+0xd4>
    c924:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c928:	mov	x2, #0x4                   	// #4
    c92c:	add	x1, x1, #0xb1a
    c930:	bl	abd0 <strncmp@plt>
    c934:	cbz	w0, c950 <check_preprocessor_encoding@@Base+0x5c>
    c938:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    c93c:	mov	x0, x24
    c940:	add	x1, x1, #0xb1f
    c944:	mov	x2, #0x4                   	// #4
    c948:	bl	abd0 <strncmp@plt>
    c94c:	cbnz	w0, c9c8 <check_preprocessor_encoding@@Base+0xd4>
    c950:	mov	x0, x24
    c954:	mov	w1, #0xa                   	// #10
    c958:	add	x20, x24, #0x4
    c95c:	bl	b190 <strchr@plt>
    c960:	mov	x21, x0
    c964:	cbnz	x0, c974 <check_preprocessor_encoding@@Base+0x80>
    c968:	mov	x0, x20
    c96c:	bl	a780 <strlen@plt>
    c970:	add	x21, x20, x0
    c974:	sub	x1, x21, x20
    c978:	mov	x0, x20
    c97c:	mov	x3, #0x3                   	// #3
    c980:	adrp	x2, 26000 <vasnprintf@@Base+0x170>
    c984:	add	x2, x2, #0xb24
    c988:	bl	ae40 <memmem@plt>
    c98c:	mov	x19, x0
    c990:	cmp	x20, #0x0
    c994:	ccmp	x19, #0x0, #0x4, ne  // ne = any
    c998:	b.eq	c9bc <check_preprocessor_encoding@@Base+0xc8>  // b.none
    c99c:	adrp	x20, 26000 <vasnprintf@@Base+0x170>
    c9a0:	add	x19, x19, #0x3
    c9a4:	add	x20, x20, #0xb28
    c9a8:	cmp	x19, #0x0
    c9ac:	ccmp	x21, x19, #0x0, ne  // ne = any
    c9b0:	b.ls	c9bc <check_preprocessor_encoding@@Base+0xc8>  // b.plast
    c9b4:	ldrb	w0, [x19]
    c9b8:	cbnz	w0, c9d4 <check_preprocessor_encoding@@Base+0xe0>
    c9bc:	mov	x22, #0x0                   	// #0
    c9c0:	mov	x20, #0x0                   	// #0
    c9c4:	b	cad8 <check_preprocessor_encoding@@Base+0x1e4>
    c9c8:	mov	x20, #0x0                   	// #0
    c9cc:	b	c990 <check_preprocessor_encoding@@Base+0x9c>
    c9d0:	add	x19, x19, #0x1
    c9d4:	ldrb	w0, [x19]
    c9d8:	cmp	w0, #0x20
    c9dc:	b.eq	c9d0 <check_preprocessor_encoding@@Base+0xdc>  // b.none
    c9e0:	mov	x1, x20
    c9e4:	mov	x0, x19
    c9e8:	mov	x2, #0x7                   	// #7
    c9ec:	bl	abd0 <strncmp@plt>
    c9f0:	cbnz	w0, cb30 <check_preprocessor_encoding@@Base+0x23c>
    c9f4:	add	x19, x19, #0x7
    c9f8:	ldrb	w0, [x19]
    c9fc:	cmp	w0, #0x20
    ca00:	b.eq	cb20 <check_preprocessor_encoding@@Base+0x22c>  // b.none
    ca04:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    ca08:	add	x1, x1, #0xb30
    ca0c:	mov	x0, x19
    ca10:	bl	b160 <strspn@plt>
    ca14:	mov	x1, x0
    ca18:	mov	x22, x0
    ca1c:	mov	x0, x19
    ca20:	bl	b310 <xstrndup@plt>
    ca24:	mov	x20, x0
    ca28:	bl	a780 <strlen@plt>
    ca2c:	mov	x23, x0
    ca30:	cmp	x0, #0x4
    ca34:	b.ls	ca94 <check_preprocessor_encoding@@Base+0x1a0>  // b.plast
    ca38:	sub	x28, x0, #0x4
    ca3c:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    ca40:	add	x27, x20, x28
    ca44:	add	x1, x1, #0xb76
    ca48:	mov	x0, x27
    ca4c:	bl	ad40 <strcasecmp@plt>
    ca50:	cbnz	w0, ca58 <check_preprocessor_encoding@@Base+0x164>
    ca54:	strb	wzr, [x20, x28]
    ca58:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    ca5c:	mov	x0, x27
    ca60:	add	x1, x1, #0xbbe
    ca64:	bl	ad40 <strcasecmp@plt>
    ca68:	cbnz	w0, ca70 <check_preprocessor_encoding@@Base+0x17c>
    ca6c:	strb	wzr, [x27]
    ca70:	cmp	x23, #0x5
    ca74:	b.eq	ca94 <check_preprocessor_encoding@@Base+0x1a0>  // b.none
    ca78:	sub	x23, x23, #0x5
    ca7c:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    ca80:	add	x0, x20, x23
    ca84:	add	x1, x1, #0xb7b
    ca88:	bl	ad40 <strcasecmp@plt>
    ca8c:	cbnz	w0, ca94 <check_preprocessor_encoding@@Base+0x1a0>
    ca90:	strb	wzr, [x20, x23]
    ca94:	adrp	x23, 41000 <base_len@@Base+0x2e68c>
    ca98:	add	x23, x23, #0x808
    ca9c:	add	x23, x23, #0x868
    caa0:	ldr	x0, [x23]
    caa4:	cbz	x0, cac8 <check_preprocessor_encoding@@Base+0x1d4>
    caa8:	mov	x1, x20
    caac:	bl	ad40 <strcasecmp@plt>
    cab0:	cbnz	w0, cb28 <check_preprocessor_encoding@@Base+0x234>
    cab4:	mov	x0, x20
    cab8:	bl	b050 <free@plt>
    cabc:	ldr	x0, [x23, #8]
    cac0:	bl	ac70 <xstrdup@plt>
    cac4:	mov	x20, x0
    cac8:	adrp	x0, 26000 <vasnprintf@@Base+0x170>
    cacc:	mov	x1, x20
    cad0:	add	x0, x0, #0xb81
    cad4:	bl	aa20 <debug@plt>
    cad8:	cmp	x25, #0x0
    cadc:	ccmp	x26, #0x0, #0x4, ne  // ne = any
    cae0:	b.eq	cb74 <check_preprocessor_encoding@@Base+0x280>  // b.none
    cae4:	cbz	x20, cb74 <check_preprocessor_encoding@@Base+0x280>
    cae8:	mov	x1, x25
    caec:	mov	x0, x20
    caf0:	bl	ad40 <strcasecmp@plt>
    caf4:	cbz	w0, cb74 <check_preprocessor_encoding@@Base+0x280>
    caf8:	cbnz	x19, cb50 <check_preprocessor_encoding@@Base+0x25c>
    cafc:	adrp	x3, 27000 <vasnprintf@@Base+0x1170>
    cb00:	add	x3, x3, #0x98
    cb04:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
    cb08:	adrp	x0, 26000 <vasnprintf@@Base+0x170>
    cb0c:	add	x3, x3, #0x1e
    cb10:	add	x1, x1, #0xb9c
    cb14:	add	x0, x0, #0xba8
    cb18:	mov	w2, #0x39b                 	// #923
    cb1c:	bl	b530 <__assert_fail@plt>
    cb20:	add	x19, x19, #0x1
    cb24:	b	c9f8 <check_preprocessor_encoding@@Base+0x104>
    cb28:	add	x23, x23, #0x10
    cb2c:	b	caa0 <check_preprocessor_encoding@@Base+0x1ac>
    cb30:	sub	x2, x21, x19
    cb34:	mov	x0, x19
    cb38:	mov	w1, #0x3b                  	// #59
    cb3c:	bl	b2b0 <memchr@plt>
    cb40:	mov	x19, x0
    cb44:	cbz	x0, c9a8 <check_preprocessor_encoding@@Base+0xb4>
    cb48:	add	x19, x0, #0x1
    cb4c:	b	c9a8 <check_preprocessor_encoding@@Base+0xb4>
    cb50:	add	x5, x19, x22
    cb54:	mov	x3, x25
    cb58:	sub	w4, w21, w5
    cb5c:	mov	x2, x24
    cb60:	sub	w1, w19, w24
    cb64:	adrp	x0, 26000 <vasnprintf@@Base+0x170>
    cb68:	add	x0, x0, #0xbb2
    cb6c:	bl	b0c0 <xasprintf@plt>
    cb70:	str	x0, [x26]
    cb74:	mov	x0, x20
    cb78:	ldp	x19, x20, [sp, #16]
    cb7c:	ldp	x21, x22, [sp, #32]
    cb80:	ldp	x23, x24, [sp, #48]
    cb84:	ldp	x25, x26, [sp, #64]
    cb88:	ldp	x27, x28, [sp, #80]
    cb8c:	ldp	x29, x30, [sp], #96
    cb90:	ret

000000000000cb94 <string_equals@@Base>:
    cb94:	stp	x29, x30, [sp, #-16]!
    cb98:	mov	x29, sp
    cb9c:	bl	afa0 <strcmp@plt>
    cba0:	cmp	w0, #0x0
    cba4:	cset	w0, eq  // eq = none
    cba8:	ldp	x29, x30, [sp], #16
    cbac:	ret

000000000000cbb0 <string_hash@@Base>:
    cbb0:	stp	x29, x30, [sp, #-32]!
    cbb4:	mov	x29, sp
    cbb8:	str	x19, [sp, #16]
    cbbc:	mov	x19, x0
    cbc0:	bl	a780 <strlen@plt>
    cbc4:	mov	x1, x0
    cbc8:	mov	x0, x19
    cbcc:	ldr	x19, [sp, #16]
    cbd0:	ldp	x29, x30, [sp], #32
    cbd4:	b	af50 <hash_pjw_bare@plt>

000000000000cbd8 <plain_free@@Base>:
    cbd8:	b	b050 <free@plt>

000000000000cbdc <new_string_list@@Base>:
    cbdc:	mov	w4, w1
    cbe0:	adrp	x3, 40000 <vasnprintf@@Base+0x1a170>
    cbe4:	adrp	x2, 40000 <vasnprintf@@Base+0x1a170>
    cbe8:	adrp	x1, 40000 <vasnprintf@@Base+0x1a170>
    cbec:	ldr	x3, [x3, #4000]
    cbf0:	ldr	x2, [x2, #3864]
    cbf4:	ldr	x1, [x1, #3824]
    cbf8:	b	b470 <gl_list_create_empty@plt>

000000000000cbfc <new_string_map@@Base>:
    cbfc:	mov	x4, x1
    cc00:	adrp	x3, 40000 <vasnprintf@@Base+0x1a170>
    cc04:	adrp	x2, 40000 <vasnprintf@@Base+0x1a170>
    cc08:	adrp	x1, 40000 <vasnprintf@@Base+0x1a170>
    cc0c:	ldr	x3, [x3, #4000]
    cc10:	ldr	x2, [x2, #3864]
    cc14:	ldr	x1, [x1, #3824]
    cc18:	b	b400 <gl_map_create_empty@plt>

000000000000cc1c <new_string_set@@Base>:
    cc1c:	adrp	x3, 40000 <vasnprintf@@Base+0x1a170>
    cc20:	adrp	x2, 40000 <vasnprintf@@Base+0x1a170>
    cc24:	adrp	x1, 40000 <vasnprintf@@Base+0x1a170>
    cc28:	ldr	x3, [x3, #4000]
    cc2c:	ldr	x2, [x2, #3864]
    cc30:	ldr	x1, [x1, #3824]
    cc34:	b	acb0 <gl_set_create_empty@plt>

000000000000cc38 <get_line_length@@Base>:
    cc38:	stp	x29, x30, [sp, #-64]!
    cc3c:	mov	x29, sp
    cc40:	stp	x19, x20, [sp, #16]
    cc44:	adrp	x19, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
    cc48:	ldr	w0, [x19, #784]
    cc4c:	str	x21, [sp, #32]
    cc50:	cmn	w0, #0x1
    cc54:	b.ne	cc84 <get_line_length@@Base+0x4c>  // b.any
    cc58:	mov	w0, #0x50                  	// #80
    cc5c:	mov	x21, x19
    cc60:	str	w0, [x19, #784]
    cc64:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    cc68:	add	x0, x0, #0xd2
    cc6c:	bl	b570 <getenv@plt>
    cc70:	cbz	x0, cc94 <get_line_length@@Base+0x5c>
    cc74:	bl	aa50 <atoi@plt>
    cc78:	cmp	w0, #0x0
    cc7c:	b.le	cc94 <get_line_length@@Base+0x5c>
    cc80:	str	w0, [x19, #784]
    cc84:	ldp	x19, x20, [sp, #16]
    cc88:	ldr	x21, [sp, #32]
    cc8c:	ldp	x29, x30, [sp], #64
    cc90:	ret
    cc94:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    cc98:	add	x0, x0, #0xdb
    cc9c:	bl	b570 <getenv@plt>
    cca0:	cbz	x0, ccb8 <get_line_length@@Base+0x80>
    cca4:	bl	aa50 <atoi@plt>
    cca8:	cmp	w0, #0x0
    ccac:	b.le	ccb8 <get_line_length@@Base+0x80>
    ccb0:	str	w0, [x21, #784]
    ccb4:	b	cc84 <get_line_length@@Base+0x4c>
    ccb8:	mov	w1, #0x0                   	// #0
    ccbc:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    ccc0:	add	x0, x0, #0xe3
    ccc4:	bl	ab40 <open@plt>
    ccc8:	mov	w19, w0
    cccc:	tbz	w0, #31, ccf0 <get_line_length@@Base+0xb8>
    ccd0:	mov	w0, #0x1                   	// #1
    ccd4:	bl	b2f0 <isatty@plt>
    ccd8:	mov	w20, w0
    ccdc:	cbnz	w0, cd28 <get_line_length@@Base+0xf0>
    cce0:	bl	b2f0 <isatty@plt>
    cce4:	cbnz	w0, ccf4 <get_line_length@@Base+0xbc>
    cce8:	mov	w0, #0x50                  	// #80
    ccec:	b	ccb0 <get_line_length@@Base+0x78>
    ccf0:	mov	w20, w0
    ccf4:	mov	w0, w20
    ccf8:	add	x2, sp, #0x38
    ccfc:	mov	w1, #0x5413                	// #21523
    cd00:	bl	b180 <rpl_ioctl@plt>
    cd04:	mov	w20, w0
    cd08:	tbnz	w19, #31, cd14 <get_line_length@@Base+0xdc>
    cd0c:	mov	w0, w19
    cd10:	bl	add0 <close@plt>
    cd14:	cbz	w20, cd30 <get_line_length@@Base+0xf8>
    cd18:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    cd1c:	add	x0, x0, #0xec
    cd20:	bl	a7f0 <perror@plt>
    cd24:	b	cce8 <get_line_length@@Base+0xb0>
    cd28:	mov	w20, #0x1                   	// #1
    cd2c:	b	ccf4 <get_line_length@@Base+0xbc>
    cd30:	ldrh	w0, [sp, #58]
    cd34:	cbz	w0, cce8 <get_line_length@@Base+0xb0>
    cd38:	b	ccb0 <get_line_length@@Base+0x78>
    cd3c:	stp	x29, x30, [sp, #-48]!
    cd40:	mov	x29, sp
    cd44:	stp	x19, x20, [sp, #16]
    cd48:	adrp	x20, 40000 <vasnprintf@@Base+0x1a170>
    cd4c:	ldr	x20, [x20, #3984]
    cd50:	str	x21, [sp, #32]
    cd54:	mov	x21, x1
    cd58:	mov	x1, x0
    cd5c:	ldr	x0, [x20]
    cd60:	bl	ae20 <gl_map_get@plt>
    cd64:	mov	x19, x0
    cd68:	ldr	x0, [x20]
    cd6c:	mov	x1, x21
    cd70:	bl	ae20 <gl_map_get@plt>
    cd74:	cbz	x19, cdb8 <get_line_length@@Base+0x180>
    cd78:	ldr	x1, [x19]
    cd7c:	cbnz	x0, cd8c <get_line_length@@Base+0x154>
    cd80:	mov	x0, #0xffffffffffffffff    	// #-1
    cd84:	b	cd90 <get_line_length@@Base+0x158>
    cd88:	mov	x1, #0xffffffffffffffff    	// #-1
    cd8c:	ldr	x0, [x0]
    cd90:	cmp	x0, x1
    cd94:	b.hi	cdb0 <get_line_length@@Base+0x178>  // b.pmore
    cd98:	cmp	x1, x0
    cd9c:	cset	w0, hi  // hi = pmore
    cda0:	ldp	x19, x20, [sp, #16]
    cda4:	ldr	x21, [sp, #32]
    cda8:	ldp	x29, x30, [sp], #48
    cdac:	ret
    cdb0:	mov	w0, #0xffffffff            	// #-1
    cdb4:	b	cda0 <get_line_length@@Base+0x168>
    cdb8:	cbnz	x0, cd88 <get_line_length@@Base+0x150>
    cdbc:	mov	x0, #0xffffffffffffffff    	// #-1
    cdc0:	mov	x1, x0
    cdc4:	b	cd98 <get_line_length@@Base+0x160>

000000000000cdc8 <order_files@@Base>:
    cdc8:	stp	x29, x30, [sp, #-400]!
    cdcc:	mov	x29, sp
    cdd0:	stp	x21, x22, [sp, #32]
    cdd4:	mov	x22, x1
    cdd8:	stp	x25, x26, [sp, #64]
    cddc:	ldr	x26, [x1]
    cde0:	mov	w1, #0x4000                	// #16384
    cde4:	movk	w1, #0x20, lsl #16
    cde8:	stp	x19, x20, [sp, #16]
    cdec:	stp	x23, x24, [sp, #48]
    cdf0:	stp	x27, x28, [sp, #80]
    cdf4:	bl	ab40 <open@plt>
    cdf8:	tbnz	w0, #31, ce14 <order_files@@Base+0x4c>
    cdfc:	mov	w21, w0
    ce00:	add	x1, sp, #0x118
    ce04:	bl	ac00 <fstatfs@plt>
    ce08:	tbz	w0, #31, ce30 <order_files@@Base+0x68>
    ce0c:	mov	w0, w21
    ce10:	bl	add0 <close@plt>
    ce14:	ldp	x19, x20, [sp, #16]
    ce18:	ldp	x21, x22, [sp, #32]
    ce1c:	ldp	x23, x24, [sp, #48]
    ce20:	ldp	x25, x26, [sp, #64]
    ce24:	ldp	x27, x28, [sp, #80]
    ce28:	ldp	x29, x30, [sp], #400
    ce2c:	ret
    ce30:	adrp	x4, 40000 <vasnprintf@@Base+0x1a170>
    ce34:	adrp	x2, 40000 <vasnprintf@@Base+0x1a170>
    ce38:	adrp	x1, 40000 <vasnprintf@@Base+0x1a170>
    ce3c:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    ce40:	ldr	x4, [x4, #4000]
    ce44:	adrp	x19, 40000 <vasnprintf@@Base+0x1a170>
    ce48:	ldr	x2, [x2, #3864]
    ce4c:	mov	x3, #0x0                   	// #0
    ce50:	ldr	x1, [x1, #3824]
    ce54:	add	x25, sp, #0x88
    ce58:	ldr	x0, [x0, #3912]
    ce5c:	mov	w28, #0x660b                	// #26123
    ce60:	add	x27, sp, #0x80
    ce64:	add	x20, sp, #0xc0
    ce68:	movk	w28, #0xc020, lsl #16
    ce6c:	bl	b400 <gl_map_create_empty@plt>
    ce70:	ldr	x1, [x19, #3984]
    ce74:	str	x0, [x1]
    ce78:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    ce7c:	mov	w1, #0x0                   	// #0
    ce80:	ldr	x0, [x0, #3896]
    ce84:	bl	b2d0 <new_string_list@plt>
    ce88:	mov	x23, x0
    ce8c:	mov	x8, x25
    ce90:	mov	x0, x26
    ce94:	bl	aaf0 <gl_list_iterator@plt>
    ce98:	add	x0, sp, #0x78
    ce9c:	str	x0, [sp, #104]
    cea0:	ldr	x1, [sp, #104]
    cea4:	mov	x2, x27
    cea8:	mov	x0, x25
    ceac:	bl	acc0 <gl_list_iterator_next@plt>
    ceb0:	tst	w0, #0xff
    ceb4:	b.ne	cee8 <order_files@@Base+0x120>  // b.any
    ceb8:	mov	x0, x25
    cebc:	bl	af90 <gl_list_iterator_free@plt>
    cec0:	ldr	x19, [x19, #3984]
    cec4:	ldr	x0, [x19]
    cec8:	bl	af30 <gl_map_free@plt>
    cecc:	str	xzr, [x19]
    ced0:	mov	w0, w21
    ced4:	bl	add0 <close@plt>
    ced8:	mov	x0, x26
    cedc:	bl	b330 <gl_list_free@plt>
    cee0:	str	x23, [x22]
    cee4:	b	ce14 <order_files@@Base+0x4c>
    cee8:	ldr	x1, [sp, #120]
    ceec:	mov	w0, w21
    cef0:	mov	w2, #0x0                   	// #0
    cef4:	bl	b520 <openat@plt>
    cef8:	mov	w24, w0
    cefc:	tbnz	w0, #31, cea0 <order_files@@Base+0xd8>
    cf00:	ldr	x1, [sp, #288]
    cf04:	stp	xzr, xzr, [x20]
    cf08:	mov	x2, x20
    cf0c:	stp	xzr, xzr, [x20, #16]
    cf10:	str	x1, [sp, #200]
    cf14:	mov	w1, #0x1                   	// #1
    cf18:	stp	xzr, xzr, [x20, #32]
    cf1c:	stp	xzr, xzr, [x20, #48]
    cf20:	stp	xzr, xzr, [x20, #64]
    cf24:	str	xzr, [x20, #80]
    cf28:	str	w1, [sp, #216]
    cf2c:	mov	w1, w28
    cf30:	bl	b180 <rpl_ioctl@plt>
    cf34:	cbnz	w0, cf5c <order_files@@Base+0x194>
    cf38:	mov	x0, #0x8                   	// #8
    cf3c:	bl	ac40 <xmalloc@plt>
    cf40:	mov	x2, x0
    cf44:	ldr	x0, [sp, #232]
    cf48:	str	x0, [x2]
    cf4c:	ldr	x0, [x19, #3984]
    cf50:	ldr	x1, [sp, #120]
    cf54:	ldr	x0, [x0]
    cf58:	bl	b000 <gl_map_put@plt>
    cf5c:	mov	w0, w24
    cf60:	bl	add0 <close@plt>
    cf64:	ldr	x0, [sp, #120]
    cf68:	bl	ac70 <xstrdup@plt>
    cf6c:	mov	x2, x0
    cf70:	adrp	x1, c000 <get_groff_preconv@@Base+0x84>
    cf74:	mov	x0, x23
    cf78:	add	x1, x1, #0xd3c
    cf7c:	bl	a8e0 <gl_sortedlist_add@plt>
    cf80:	b	cea0 <order_files@@Base+0xd8>

000000000000cf84 <pathsearch_executable@@Base>:
    cf84:	stp	x29, x30, [sp, #-240]!
    cf88:	mov	x29, sp
    cf8c:	stp	x19, x20, [sp, #16]
    cf90:	stp	x21, x22, [sp, #32]
    cf94:	mov	x21, x0
    cf98:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    cf9c:	add	x0, x0, #0xfe
    cfa0:	stp	x23, x24, [sp, #48]
    cfa4:	stp	x25, x26, [sp, #64]
    cfa8:	str	x27, [sp, #80]
    cfac:	bl	b570 <getenv@plt>
    cfb0:	cbz	x0, cffc <pathsearch_executable@@Base+0x78>
    cfb4:	mov	x20, x0
    cfb8:	mov	w1, #0x2f                  	// #47
    cfbc:	mov	x0, x21
    cfc0:	bl	b190 <strchr@plt>
    cfc4:	mov	x19, x0
    cfc8:	cbz	x0, d020 <pathsearch_executable@@Base+0x9c>
    cfcc:	add	x1, sp, #0x70
    cfd0:	mov	x0, x21
    cfd4:	bl	269a8 <vasnprintf@@Base+0xb18>
    cfd8:	cmn	w0, #0x1
    cfdc:	b.eq	cffc <pathsearch_executable@@Base+0x78>  // b.none
    cfe0:	ldr	w0, [sp, #128]
    cfe4:	and	w1, w0, #0xf000
    cfe8:	cmp	w1, #0x8, lsl #12
    cfec:	b.ne	cffc <pathsearch_executable@@Base+0x78>  // b.any
    cff0:	mov	w1, #0x49                  	// #73
    cff4:	tst	w0, w1
    cff8:	b.ne	d0f8 <pathsearch_executable@@Base+0x174>  // b.any
    cffc:	mov	w20, #0x0                   	// #0
    d000:	mov	w0, w20
    d004:	ldp	x19, x20, [sp, #16]
    d008:	ldp	x21, x22, [sp, #32]
    d00c:	ldp	x23, x24, [sp, #48]
    d010:	ldp	x25, x26, [sp, #64]
    d014:	ldr	x27, [sp, #80]
    d018:	ldp	x29, x30, [sp], #240
    d01c:	ret
    d020:	mov	x0, x20
    d024:	adrp	x20, 27000 <vasnprintf@@Base+0x1170>
    d028:	bl	ac70 <xstrdup@plt>
    d02c:	add	x20, x20, #0x487
    d030:	mov	x1, x20
    d034:	add	x24, sp, #0x68
    d038:	mov	x22, x0
    d03c:	adrp	x23, 27000 <vasnprintf@@Base+0x1170>
    d040:	mov	x0, x24
    d044:	add	x23, x23, #0x103
    d048:	add	x25, sp, #0x70
    d04c:	str	x22, [sp, #104]
    d050:	bl	af80 <strsep@plt>
    d054:	mov	x1, x0
    d058:	mov	w26, #0x49                  	// #73
    d05c:	cbnz	x1, d078 <pathsearch_executable@@Base+0xf4>
    d060:	mov	w20, #0x0                   	// #0
    d064:	mov	x0, x22
    d068:	bl	b050 <free@plt>
    d06c:	mov	x0, x19
    d070:	bl	b050 <free@plt>
    d074:	b	d000 <pathsearch_executable@@Base+0x7c>
    d078:	ldrb	w0, [x1]
    d07c:	cbnz	w0, d090 <pathsearch_executable@@Base+0x10c>
    d080:	cbnz	x19, d0cc <pathsearch_executable@@Base+0x148>
    d084:	bl	b6c0 <xgetcwd@plt>
    d088:	mov	x1, x0
    d08c:	mov	x19, x0
    d090:	mov	x2, x21
    d094:	mov	x0, x23
    d098:	bl	b0c0 <xasprintf@plt>
    d09c:	mov	x27, x0
    d0a0:	mov	x1, x25
    d0a4:	bl	269a8 <vasnprintf@@Base+0xb18>
    d0a8:	cmn	w0, #0x1
    d0ac:	mov	x0, x27
    d0b0:	b.ne	d0d4 <pathsearch_executable@@Base+0x150>  // b.any
    d0b4:	bl	b050 <free@plt>
    d0b8:	mov	x1, x20
    d0bc:	mov	x0, x24
    d0c0:	bl	af80 <strsep@plt>
    d0c4:	mov	x1, x0
    d0c8:	b	d05c <pathsearch_executable@@Base+0xd8>
    d0cc:	mov	x1, x19
    d0d0:	b	d090 <pathsearch_executable@@Base+0x10c>
    d0d4:	bl	b050 <free@plt>
    d0d8:	ldr	w0, [sp, #128]
    d0dc:	and	w1, w0, #0xf000
    d0e0:	cmp	w1, #0x8, lsl #12
    d0e4:	b.ne	d0b8 <pathsearch_executable@@Base+0x134>  // b.any
    d0e8:	tst	w0, w26
    d0ec:	b.eq	d0b8 <pathsearch_executable@@Base+0x134>  // b.none
    d0f0:	mov	w20, #0x1                   	// #1
    d0f4:	b	d064 <pathsearch_executable@@Base+0xe0>
    d0f8:	mov	w20, #0x1                   	// #1
    d0fc:	b	d000 <pathsearch_executable@@Base+0x7c>

000000000000d100 <directory_on_path@@Base>:
    d100:	stp	x29, x30, [sp, #-80]!
    d104:	mov	x29, sp
    d108:	stp	x19, x20, [sp, #16]
    d10c:	stp	x21, x22, [sp, #32]
    d110:	mov	x22, x0
    d114:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    d118:	add	x0, x0, #0xfe
    d11c:	str	x23, [sp, #48]
    d120:	bl	b570 <getenv@plt>
    d124:	cbz	x0, d1c0 <directory_on_path@@Base+0xc0>
    d128:	bl	ac70 <xstrdup@plt>
    d12c:	add	x23, sp, #0x48
    d130:	adrp	x19, 27000 <vasnprintf@@Base+0x1170>
    d134:	add	x19, x19, #0x487
    d138:	mov	x21, x0
    d13c:	mov	x1, x19
    d140:	mov	x0, x23
    d144:	mov	x20, #0x0                   	// #0
    d148:	str	x21, [sp, #72]
    d14c:	bl	af80 <strsep@plt>
    d150:	cbnz	x0, d180 <directory_on_path@@Base+0x80>
    d154:	mov	w19, #0x0                   	// #0
    d158:	mov	x0, x21
    d15c:	bl	b050 <free@plt>
    d160:	mov	x0, x20
    d164:	bl	b050 <free@plt>
    d168:	mov	w0, w19
    d16c:	ldp	x19, x20, [sp, #16]
    d170:	ldp	x21, x22, [sp, #32]
    d174:	ldr	x23, [sp, #48]
    d178:	ldp	x29, x30, [sp], #80
    d17c:	ret
    d180:	ldrb	w1, [x0]
    d184:	cbnz	w1, d194 <directory_on_path@@Base+0x94>
    d188:	cbnz	x20, d1b0 <directory_on_path@@Base+0xb0>
    d18c:	bl	b6c0 <xgetcwd@plt>
    d190:	mov	x20, x0
    d194:	mov	x1, x22
    d198:	bl	afa0 <strcmp@plt>
    d19c:	cbz	w0, d1b8 <directory_on_path@@Base+0xb8>
    d1a0:	mov	x1, x19
    d1a4:	mov	x0, x23
    d1a8:	bl	af80 <strsep@plt>
    d1ac:	b	d150 <directory_on_path@@Base+0x50>
    d1b0:	mov	x0, x20
    d1b4:	b	d194 <directory_on_path@@Base+0x94>
    d1b8:	mov	w19, #0x1                   	// #1
    d1bc:	b	d158 <directory_on_path@@Base+0x58>
    d1c0:	mov	w19, #0x0                   	// #0
    d1c4:	b	d168 <directory_on_path@@Base+0x68>

000000000000d1c8 <sandbox_init@@Base>:
    d1c8:	stp	x29, x30, [sp, #-16]!
    d1cc:	mov	x0, #0x1                   	// #1
    d1d0:	mov	x29, sp
    d1d4:	bl	b300 <xzalloc@plt>
    d1d8:	strb	wzr, [x0]
    d1dc:	ldp	x29, x30, [sp], #16
    d1e0:	ret

000000000000d1e4 <sandbox_load@@Base>:
    d1e4:	ret

000000000000d1e8 <sandbox_load_permissive@@Base>:
    d1e8:	ret

000000000000d1ec <sandbox_free@@Base>:
    d1ec:	b	b050 <free@plt>
    d1f0:	stp	x29, x30, [sp, #-32]!
    d1f4:	mov	x29, sp
    d1f8:	str	x19, [sp, #16]
    d1fc:	bl	b540 <__errno_location@plt>
    d200:	ldr	w19, [x0]
    d204:	mov	w2, #0x5                   	// #5
    d208:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    d20c:	mov	x0, #0x0                   	// #0
    d210:	add	x1, x1, #0x109
    d214:	bl	b3f0 <dcgettext@plt>
    d218:	mov	w1, w19
    d21c:	mov	x2, x0
    d220:	ldr	x19, [sp, #16]
    d224:	mov	w0, #0x2                   	// #2
    d228:	ldp	x29, x30, [sp], #32
    d22c:	b	a7c0 <error@plt>

000000000000d230 <running_setuid@@Base>:
    d230:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    d234:	ldr	x0, [x0, #4064]
    d238:	ldr	w1, [x0]
    d23c:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    d240:	ldr	x0, [x0, #3784]
    d244:	ldr	w0, [x0]
    d248:	cmp	w1, w0
    d24c:	cset	w0, ne  // ne = any
    d250:	ret

000000000000d254 <get_man_owner@@Base>:
    d254:	stp	x29, x30, [sp, #-32]!
    d258:	mov	x29, sp
    d25c:	stp	x19, x20, [sp, #16]
    d260:	adrp	x19, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
    d264:	ldr	x0, [x19, #1360]
    d268:	cbnz	x0, d2d0 <get_man_owner@@Base+0x7c>
    d26c:	adrp	x20, 27000 <vasnprintf@@Base+0x1170>
    d270:	add	x20, x20, #0x121
    d274:	mov	x0, x20
    d278:	bl	ac50 <getpwnam@plt>
    d27c:	str	x0, [x19, #1360]
    d280:	cbnz	x0, d2a8 <get_man_owner@@Base+0x54>
    d284:	mov	w2, #0x5                   	// #5
    d288:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    d28c:	add	x1, x1, #0x125
    d290:	bl	b3f0 <dcgettext@plt>
    d294:	mov	x3, x20
    d298:	mov	x2, x0
    d29c:	mov	w1, #0x0                   	// #0
    d2a0:	mov	w0, #0x1                   	// #1
    d2a4:	bl	a7c0 <error@plt>
    d2a8:	ldr	x0, [x19, #1360]
    d2ac:	cbnz	x0, d2d0 <get_man_owner@@Base+0x7c>
    d2b0:	adrp	x3, 27000 <vasnprintf@@Base+0x1170>
    d2b4:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    d2b8:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    d2bc:	add	x3, x3, #0x1e8
    d2c0:	add	x1, x1, #0x14d
    d2c4:	add	x0, x0, #0x158
    d2c8:	mov	w2, #0x78                  	// #120
    d2cc:	bl	b530 <__assert_fail@plt>
    d2d0:	ldp	x19, x20, [sp, #16]
    d2d4:	ldp	x29, x30, [sp], #32
    d2d8:	ret

000000000000d2dc <drop_effective_privs@@Base>:
    d2dc:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    d2e0:	adrp	x1, 40000 <vasnprintf@@Base+0x1a170>
    d2e4:	ldr	x3, [x0, #3952]
    d2e8:	ldr	x2, [x1, #4064]
    d2ec:	ldr	w3, [x3]
    d2f0:	ldr	w2, [x2]
    d2f4:	cmp	w3, w2
    d2f8:	b.eq	d378 <drop_effective_privs@@Base+0x9c>  // b.none
    d2fc:	stp	x29, x30, [sp, #-32]!
    d300:	mov	x29, sp
    d304:	stp	x19, x20, [sp, #16]
    d308:	mov	x19, x0
    d30c:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    d310:	add	x0, x0, #0x162
    d314:	mov	x20, x1
    d318:	bl	aa20 <debug@plt>
    d31c:	bl	ab90 <idpriv_temp_drop@plt>
    d320:	cbz	w0, d328 <drop_effective_privs@@Base+0x4c>
    d324:	bl	d1f0 <sandbox_free@@Base+0x4>
    d328:	ldr	x1, [x20, #4064]
    d32c:	ldr	x0, [x19, #3952]
    d330:	ldr	w1, [x1]
    d334:	ldp	x19, x20, [sp, #16]
    d338:	str	w1, [x0]
    d33c:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    d340:	ldr	x0, [x0, #3960]
    d344:	ldr	w1, [x0]
    d348:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    d34c:	ldr	x0, [x0, #3792]
    d350:	str	w1, [x0]
    d354:	adrp	x0, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
    d358:	add	x0, x0, #0x550
    d35c:	ldr	w1, [x0, #8]
    d360:	add	w1, w1, #0x1
    d364:	str	w1, [x0, #8]
    d368:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    d36c:	add	x0, x0, #0x17a
    d370:	ldp	x29, x30, [sp], #32
    d374:	b	aa20 <debug@plt>
    d378:	adrp	x0, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
    d37c:	add	x0, x0, #0x550
    d380:	ldr	w1, [x0, #8]
    d384:	add	w1, w1, #0x1
    d388:	str	w1, [x0, #8]
    d38c:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    d390:	add	x0, x0, #0x17a
    d394:	b	d374 <drop_effective_privs@@Base+0x98>

000000000000d398 <init_security@@Base>:
    d398:	stp	x29, x30, [sp, #-32]!
    d39c:	mov	x29, sp
    d3a0:	str	x19, [sp, #16]
    d3a4:	adrp	x19, 40000 <vasnprintf@@Base+0x1a170>
    d3a8:	bl	a910 <getuid@plt>
    d3ac:	ldr	x19, [x19, #4064]
    d3b0:	str	w0, [x19]
    d3b4:	bl	a850 <geteuid@plt>
    d3b8:	mov	w2, w0
    d3bc:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    d3c0:	ldr	w1, [x19]
    d3c4:	adrp	x19, 40000 <vasnprintf@@Base+0x1a170>
    d3c8:	ldr	x0, [x0, #3784]
    d3cc:	str	w2, [x0]
    d3d0:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    d3d4:	ldr	x0, [x0, #3952]
    d3d8:	str	w2, [x0]
    d3dc:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    d3e0:	add	x0, x0, #0x192
    d3e4:	bl	aa20 <debug@plt>
    d3e8:	bl	b090 <getgid@plt>
    d3ec:	ldr	x19, [x19, #3960]
    d3f0:	str	w0, [x19]
    d3f4:	bl	a810 <getegid@plt>
    d3f8:	mov	w2, w0
    d3fc:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    d400:	ldr	w1, [x19]
    d404:	ldr	x0, [x0, #3760]
    d408:	str	w2, [x0]
    d40c:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    d410:	ldr	x0, [x0, #3792]
    d414:	str	w2, [x0]
    d418:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    d41c:	add	x0, x0, #0x1a4
    d420:	bl	aa20 <debug@plt>
    d424:	ldr	x19, [sp, #16]
    d428:	adrp	x0, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
    d42c:	ldp	x29, x30, [sp], #32
    d430:	str	wzr, [x0, #1368]
    d434:	b	ae60 <drop_effective_privs@plt>

000000000000d438 <regain_effective_privs@@Base>:
    d438:	stp	x29, x30, [sp, #-32]!
    d43c:	mov	x29, sp
    d440:	stp	x19, x20, [sp, #16]
    d444:	adrp	x19, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
    d448:	add	x19, x19, #0x550
    d44c:	ldr	w1, [x19, #8]
    d450:	cbnz	w1, d4c0 <regain_effective_privs@@Base+0x88>
    d454:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    d458:	adrp	x1, 40000 <vasnprintf@@Base+0x1a170>
    d45c:	mov	x19, x0
    d460:	mov	x20, x1
    d464:	ldr	x3, [x0, #3952]
    d468:	ldr	x2, [x1, #3784]
    d46c:	ldr	w3, [x3]
    d470:	ldr	w2, [x2]
    d474:	cmp	w3, w2
    d478:	b.eq	d4dc <regain_effective_privs@@Base+0xa4>  // b.none
    d47c:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    d480:	add	x0, x0, #0x1ce
    d484:	bl	aa20 <debug@plt>
    d488:	bl	b2c0 <idpriv_temp_restore@plt>
    d48c:	cbz	w0, d494 <regain_effective_privs@@Base+0x5c>
    d490:	bl	d1f0 <sandbox_free@@Base+0x4>
    d494:	ldr	x1, [x20, #3784]
    d498:	ldr	x0, [x19, #3952]
    d49c:	ldr	w1, [x1]
    d4a0:	str	w1, [x0]
    d4a4:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    d4a8:	ldr	x0, [x0, #3760]
    d4ac:	ldr	w1, [x0]
    d4b0:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    d4b4:	ldr	x0, [x0, #3792]
    d4b8:	str	w1, [x0]
    d4bc:	b	d4dc <regain_effective_privs@@Base+0xa4>
    d4c0:	sub	w1, w1, #0x1
    d4c4:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    d4c8:	add	x0, x0, #0x1b6
    d4cc:	str	w1, [x19, #8]
    d4d0:	bl	aa20 <debug@plt>
    d4d4:	ldr	w0, [x19, #8]
    d4d8:	cbz	w0, d454 <regain_effective_privs@@Base+0x1c>
    d4dc:	ldp	x19, x20, [sp, #16]
    d4e0:	ldp	x29, x30, [sp], #32
    d4e4:	ret

000000000000d4e8 <drop_privs@@Base>:
    d4e8:	stp	x29, x30, [sp, #-16]!
    d4ec:	mov	x29, sp
    d4f0:	bl	b230 <idpriv_drop@plt>
    d4f4:	cbz	w0, d500 <drop_privs@@Base+0x18>
    d4f8:	ldp	x29, x30, [sp], #16
    d4fc:	b	d1f0 <sandbox_free@@Base+0x4>
    d500:	ldp	x29, x30, [sp], #16
    d504:	ret

000000000000d508 <create_tempdir@@Base>:
    d508:	stp	x29, x30, [sp, #-48]!
    d50c:	mov	x29, sp
    d510:	stp	x19, x20, [sp, #16]
    d514:	mov	x20, x0
    d518:	str	x21, [sp, #32]
    d51c:	bl	a910 <getuid@plt>
    d520:	mov	w19, w0
    d524:	bl	a850 <geteuid@plt>
    d528:	cmp	w19, w0
    d52c:	b.eq	d550 <create_tempdir@@Base+0x48>  // b.none
    d530:	adrp	x19, 27000 <vasnprintf@@Base+0x1170>
    d534:	add	x21, x19, #0x1f6
    d538:	mov	x0, x21
    d53c:	mov	w1, #0x2                   	// #2
    d540:	bl	af00 <access@plt>
    d544:	cbnz	w0, d5cc <create_tempdir@@Base+0xc4>
    d548:	add	x19, x19, #0x1f6
    d54c:	b	d5a8 <create_tempdir@@Base+0xa0>
    d550:	bl	b090 <getgid@plt>
    d554:	mov	w19, w0
    d558:	bl	a810 <getegid@plt>
    d55c:	cmp	w19, w0
    d560:	b.ne	d530 <create_tempdir@@Base+0x28>  // b.any
    d564:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    d568:	add	x0, x0, #0x1fb
    d56c:	bl	b570 <getenv@plt>
    d570:	mov	x19, x0
    d574:	cbnz	x0, d59c <create_tempdir@@Base+0x94>
    d578:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    d57c:	add	x0, x0, #0x202
    d580:	bl	b570 <getenv@plt>
    d584:	mov	x19, x0
    d588:	cbz	x0, d530 <create_tempdir@@Base+0x28>
    d58c:	mov	w1, #0x2                   	// #2
    d590:	bl	af00 <access@plt>
    d594:	cbnz	w0, d530 <create_tempdir@@Base+0x28>
    d598:	b	d5a8 <create_tempdir@@Base+0xa0>
    d59c:	mov	w1, #0x2                   	// #2
    d5a0:	bl	af00 <access@plt>
    d5a4:	cbnz	w0, d578 <create_tempdir@@Base+0x70>
    d5a8:	mov	x1, x19
    d5ac:	mov	x2, x20
    d5b0:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    d5b4:	add	x0, x0, #0x206
    d5b8:	bl	b0c0 <xasprintf@plt>
    d5bc:	mov	x19, x0
    d5c0:	bl	ae90 <mkdtemp@plt>
    d5c4:	cbnz	x0, d5e0 <create_tempdir@@Base+0xd8>
    d5c8:	b	d5dc <create_tempdir@@Base+0xd4>
    d5cc:	mov	x0, x21
    d5d0:	mov	w1, #0x2                   	// #2
    d5d4:	bl	af00 <access@plt>
    d5d8:	cbz	w0, d548 <create_tempdir@@Base+0x40>
    d5dc:	mov	x19, #0x0                   	// #0
    d5e0:	mov	x0, x19
    d5e4:	ldp	x19, x20, [sp, #16]
    d5e8:	ldr	x21, [sp, #32]
    d5ec:	ldp	x29, x30, [sp], #48
    d5f0:	ret

000000000000d5f4 <is_changed@@Base>:
    d5f4:	stp	x29, x30, [sp, #-304]!
    d5f8:	mov	x2, x1
    d5fc:	mov	x29, sp
    d600:	stp	x19, x20, [sp, #16]
    d604:	mov	x20, x0
    d608:	mov	x19, x1
    d60c:	mov	x1, x0
    d610:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    d614:	add	x0, x0, #0x212
    d618:	str	x21, [sp, #32]
    d61c:	bl	aa20 <debug@plt>
    d620:	adrp	x21, 27000 <vasnprintf@@Base+0x1170>
    d624:	add	x1, sp, #0x30
    d628:	mov	x0, x20
    d62c:	bl	269a8 <vasnprintf@@Base+0xb18>
    d630:	mov	w20, w0
    d634:	add	x1, sp, #0xb0
    d638:	mov	x0, x19
    d63c:	bl	269a8 <vasnprintf@@Base+0xb18>
    d640:	cbz	w0, d674 <is_changed@@Base+0x80>
    d644:	cmp	w20, #0x0
    d648:	cset	w19, ne  // ne = any
    d64c:	orr	w19, w19, #0x2
    d650:	neg	w19, w19
    d654:	mov	w1, w19
    d658:	add	x0, x21, #0x229
    d65c:	bl	aa20 <debug@plt>
    d660:	mov	w0, w19
    d664:	ldp	x19, x20, [sp, #16]
    d668:	ldr	x21, [sp, #32]
    d66c:	ldp	x29, x30, [sp], #304
    d670:	ret
    d674:	cbz	w20, d680 <is_changed@@Base+0x8c>
    d678:	mov	w19, #0x1                   	// #1
    d67c:	b	d650 <is_changed@@Base+0x5c>
    d680:	ldr	x0, [sp, #96]
    d684:	mov	w19, #0x2                   	// #2
    d688:	cmp	x0, #0x0
    d68c:	ldr	x0, [sp, #224]
    d690:	csel	w20, wzr, w19, ne  // ne = any
    d694:	cbnz	x0, d69c <is_changed@@Base+0xa8>
    d698:	orr	w20, w20, #0x4
    d69c:	ldp	x0, x1, [sp, #136]
    d6a0:	ldp	x2, x3, [sp, #264]
    d6a4:	bl	a950 <timespec_cmp@plt>
    d6a8:	cmp	w0, #0x0
    d6ac:	cset	w19, ne  // ne = any
    d6b0:	orr	w19, w19, w20
    d6b4:	b	d654 <is_changed@@Base+0x60>

000000000000d6b8 <is_directory@@Base>:
    d6b8:	stp	x29, x30, [sp, #-144]!
    d6bc:	mov	x29, sp
    d6c0:	add	x1, sp, #0x10
    d6c4:	bl	269a8 <vasnprintf@@Base+0xb18>
    d6c8:	cbnz	w0, d6d4 <is_directory@@Base+0x1c>
    d6cc:	ldr	w0, [sp, #32]
    d6d0:	ubfx	x0, x0, #14, #1
    d6d4:	ldp	x29, x30, [sp], #144
    d6d8:	ret

000000000000d6dc <escape_shell@@Base>:
    d6dc:	stp	x29, x30, [sp, #-64]!
    d6e0:	mov	x29, sp
    d6e4:	stp	x19, x20, [sp, #16]
    d6e8:	mov	x20, x0
    d6ec:	stp	x21, x22, [sp, #32]
    d6f0:	stp	x23, x24, [sp, #48]
    d6f4:	cbz	x0, d72c <escape_shell@@Base+0x50>
    d6f8:	bl	a780 <strlen@plt>
    d6fc:	lsl	x0, x0, #1
    d700:	add	x0, x0, #0x1
    d704:	adrp	x23, 27000 <vasnprintf@@Base+0x1170>
    d708:	bl	ac40 <xmalloc@plt>
    d70c:	add	x23, x23, #0x230
    d710:	mov	x22, x0
    d714:	mov	x19, x0
    d718:	mov	w24, #0x5c                  	// #92
    d71c:	ldrb	w21, [x20]
    d720:	cbnz	w21, d744 <escape_shell@@Base+0x68>
    d724:	mov	x20, x22
    d728:	strb	wzr, [x19]
    d72c:	mov	x0, x20
    d730:	ldp	x19, x20, [sp, #16]
    d734:	ldp	x21, x22, [sp, #32]
    d738:	ldp	x23, x24, [sp, #48]
    d73c:	ldp	x29, x30, [sp], #64
    d740:	ret
    d744:	and	w1, w21, #0xffffffdf
    d748:	sub	w0, w21, #0x30
    d74c:	sub	w1, w1, #0x41
    d750:	and	w0, w0, #0xff
    d754:	and	w1, w1, #0xff
    d758:	cmp	w1, #0x19
    d75c:	ccmp	w0, #0x9, #0x0, hi  // hi = pmore
    d760:	b.ls	d774 <escape_shell@@Base+0x98>  // b.plast
    d764:	mov	w1, w21
    d768:	mov	x0, x23
    d76c:	bl	b190 <strchr@plt>
    d770:	cbz	x0, d780 <escape_shell@@Base+0xa4>
    d774:	strb	w21, [x19], #1
    d778:	add	x20, x20, #0x1
    d77c:	b	d71c <escape_shell@@Base+0x40>
    d780:	mov	x0, x19
    d784:	strb	w24, [x0], #2
    d788:	strb	w21, [x19, #1]
    d78c:	mov	x19, x0
    d790:	b	d778 <escape_shell@@Base+0x9c>

000000000000d794 <remove_directory@@Base>:
    d794:	stp	x29, x30, [sp, #-208]!
    d798:	mov	x29, sp
    d79c:	stp	x19, x20, [sp, #16]
    d7a0:	stp	x21, x22, [sp, #32]
    d7a4:	mov	x21, x0
    d7a8:	mov	w22, w1
    d7ac:	stp	x23, x24, [sp, #48]
    d7b0:	str	x25, [sp, #64]
    d7b4:	bl	a930 <opendir@plt>
    d7b8:	cbz	x0, d86c <remove_directory@@Base+0xd8>
    d7bc:	adrp	x23, 27000 <vasnprintf@@Base+0x1170>
    d7c0:	adrp	x24, 27000 <vasnprintf@@Base+0x1170>
    d7c4:	mov	x19, x0
    d7c8:	add	x23, x23, #0x239
    d7cc:	add	x24, x24, #0x238
    d7d0:	add	x25, sp, #0x50
    d7d4:	mov	x0, x19
    d7d8:	bl	ad50 <readdir@plt>
    d7dc:	cbnz	x0, d810 <remove_directory@@Base+0x7c>
    d7e0:	mov	x0, x19
    d7e4:	bl	ada0 <closedir@plt>
    d7e8:	mov	x0, x21
    d7ec:	bl	afd0 <rmdir@plt>
    d7f0:	cmn	w0, #0x1
    d7f4:	csetm	w0, eq  // eq = none
    d7f8:	ldp	x19, x20, [sp, #16]
    d7fc:	ldp	x21, x22, [sp, #32]
    d800:	ldp	x23, x24, [sp, #48]
    d804:	ldr	x25, [sp, #64]
    d808:	ldp	x29, x30, [sp], #208
    d80c:	ret
    d810:	add	x20, x0, #0x13
    d814:	mov	x1, x23
    d818:	mov	x0, x20
    d81c:	bl	afa0 <strcmp@plt>
    d820:	cbz	w0, d7d4 <remove_directory@@Base+0x40>
    d824:	mov	x1, x24
    d828:	mov	x0, x20
    d82c:	bl	afa0 <strcmp@plt>
    d830:	cbz	w0, d7d4 <remove_directory@@Base+0x40>
    d834:	mov	x2, x20
    d838:	mov	x1, x21
    d83c:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    d840:	add	x0, x0, #0x103
    d844:	bl	b0c0 <xasprintf@plt>
    d848:	mov	x20, x0
    d84c:	mov	x1, x25
    d850:	bl	269a8 <vasnprintf@@Base+0xb18>
    d854:	cmn	w0, #0x1
    d858:	b.ne	d874 <remove_directory@@Base+0xe0>  // b.any
    d85c:	mov	x0, x20
    d860:	bl	b050 <free@plt>
    d864:	mov	x0, x19
    d868:	bl	ada0 <closedir@plt>
    d86c:	mov	w0, #0xffffffff            	// #-1
    d870:	b	d7f8 <remove_directory@@Base+0x64>
    d874:	ldr	w0, [sp, #96]
    d878:	and	w0, w0, #0xf000
    d87c:	cbz	w22, d8a8 <remove_directory@@Base+0x114>
    d880:	cmp	w0, #0x4, lsl #12
    d884:	b.ne	d8a8 <remove_directory@@Base+0x114>  // b.any
    d888:	mov	w1, w22
    d88c:	mov	x0, x20
    d890:	bl	d794 <remove_directory@@Base>
    d894:	cmn	w0, #0x1
    d898:	b.eq	d85c <remove_directory@@Base+0xc8>  // b.none
    d89c:	mov	x0, x20
    d8a0:	bl	b050 <free@plt>
    d8a4:	b	d7d4 <remove_directory@@Base+0x40>
    d8a8:	cmp	w0, #0x8, lsl #12
    d8ac:	b.ne	d89c <remove_directory@@Base+0x108>  // b.any
    d8b0:	mov	x0, x20
    d8b4:	bl	b5f0 <unlink@plt>
    d8b8:	b	d894 <remove_directory@@Base+0x100>

000000000000d8bc <trim_spaces@@Base>:
    d8bc:	stp	x29, x30, [sp, #-32]!
    d8c0:	mov	x29, sp
    d8c4:	str	x19, [sp, #16]
    d8c8:	mov	x19, x0
    d8cc:	ldrb	w0, [x19]
    d8d0:	cmp	w0, #0x20
    d8d4:	b.eq	d90c <trim_spaces@@Base+0x50>  // b.none
    d8d8:	mov	x0, x19
    d8dc:	bl	a780 <strlen@plt>
    d8e0:	sxtw	x0, w0
    d8e4:	sxtw	x1, w0
    d8e8:	cbz	w0, d8fc <trim_spaces@@Base+0x40>
    d8ec:	sub	x0, x0, #0x1
    d8f0:	ldrb	w2, [x19, x0]
    d8f4:	cmp	w2, #0x20
    d8f8:	b.eq	d8e4 <trim_spaces@@Base+0x28>  // b.none
    d8fc:	mov	x0, x19
    d900:	ldr	x19, [sp, #16]
    d904:	ldp	x29, x30, [sp], #32
    d908:	b	b310 <xstrndup@plt>
    d90c:	add	x19, x19, #0x1
    d910:	b	d8cc <trim_spaces@@Base+0x10>

000000000000d914 <lang_dir@@Base>:
    d914:	stp	x29, x30, [sp, #-48]!
    d918:	mov	x29, sp
    d91c:	stp	x19, x20, [sp, #16]
    d920:	mov	x19, x0
    d924:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
    d928:	add	x0, x0, #0x66
    d92c:	stp	x21, x22, [sp, #32]
    d930:	bl	ac70 <xstrdup@plt>
    d934:	mov	x20, x0
    d938:	cbz	x19, da10 <lang_dir@@Base+0xfc>
    d93c:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    d940:	mov	x0, x19
    d944:	add	x1, x1, #0x23c
    d948:	mov	x2, #0x4                   	// #4
    d94c:	bl	abd0 <strncmp@plt>
    d950:	cbz	w0, d96c <lang_dir@@Base+0x58>
    d954:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    d958:	mov	x0, x19
    d95c:	add	x1, x1, #0x23b
    d960:	bl	b3b0 <strstr@plt>
    d964:	cbz	x0, da10 <lang_dir@@Base+0xfc>
    d968:	add	x19, x0, #0x1
    d96c:	add	x0, x19, #0x2
    d970:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    d974:	add	x1, x1, #0x269
    d978:	bl	b3b0 <strstr@plt>
    d97c:	mov	x21, x0
    d980:	cbz	x0, da10 <lang_dir@@Base+0xfc>
    d984:	ldrb	w22, [x21, #5]
    d988:	cmp	w22, #0x2f
    d98c:	b.ne	da10 <lang_dir@@Base+0xfc>  // b.any
    d990:	ldrb	w1, [x21, #4]
    d994:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    d998:	add	x0, x0, #0x241
    d99c:	bl	b190 <strchr@plt>
    d9a0:	cbz	x0, da10 <lang_dir@@Base+0xfc>
    d9a4:	add	x0, x19, #0x3
    d9a8:	cmp	x21, x0
    d9ac:	b.ne	d9d0 <lang_dir@@Base+0xbc>  // b.any
    d9b0:	mov	x0, x20
    d9b4:	bl	b050 <free@plt>
    d9b8:	ldp	x19, x20, [sp, #16]
    d9bc:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    d9c0:	ldp	x21, x22, [sp, #32]
    d9c4:	add	x0, x0, #0x1f
    d9c8:	ldp	x29, x30, [sp], #48
    d9cc:	b	ac70 <xstrdup@plt>
    d9d0:	add	x19, x19, #0x4
    d9d4:	mov	w1, w22
    d9d8:	mov	x0, x19
    d9dc:	bl	b190 <strchr@plt>
    d9e0:	mov	x21, x0
    d9e4:	cbz	x0, da10 <lang_dir@@Base+0xfc>
    d9e8:	mov	x0, x20
    d9ec:	bl	b050 <free@plt>
    d9f0:	sub	x1, x21, x19
    d9f4:	mov	x0, x19
    d9f8:	bl	b310 <xstrndup@plt>
    d9fc:	mov	x20, x0
    da00:	mov	x1, x0
    da04:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    da08:	add	x0, x0, #0x24e
    da0c:	bl	aa20 <debug@plt>
    da10:	mov	x0, x20
    da14:	ldp	x19, x20, [sp, #16]
    da18:	ldp	x21, x22, [sp, #32]
    da1c:	ldp	x29, x30, [sp], #48
    da20:	ret

000000000000da24 <init_locale@@Base>:
    da24:	stp	x29, x30, [sp, #-32]!
    da28:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
    da2c:	mov	w0, #0x6                   	// #6
    da30:	mov	x29, sp
    da34:	add	x1, x1, #0x66
    da38:	stp	x19, x20, [sp, #16]
    da3c:	adrp	x19, 27000 <vasnprintf@@Base+0x1170>
    da40:	bl	b680 <setlocale@plt>
    da44:	cbnz	x0, da74 <init_locale@@Base+0x50>
    da48:	add	x0, x19, #0x26e
    da4c:	bl	b570 <getenv@plt>
    da50:	cbnz	x0, da74 <init_locale@@Base+0x50>
    da54:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    da58:	add	x0, x0, #0x284
    da5c:	bl	b570 <getenv@plt>
    da60:	cbnz	x0, da74 <init_locale@@Base+0x50>
    da64:	adrp	x2, 27000 <vasnprintf@@Base+0x1170>
    da68:	mov	w1, #0x0                   	// #0
    da6c:	add	x2, x2, #0x299
    da70:	bl	a7c0 <error@plt>
    da74:	mov	w2, #0x1                   	// #1
    da78:	add	x0, x19, #0x26e
    da7c:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
    da80:	adrp	x20, 27000 <vasnprintf@@Base+0x1170>
    da84:	add	x1, x1, #0x18d
    da88:	add	x20, x20, #0x2d5
    da8c:	bl	a8c0 <setenv@plt>
    da90:	adrp	x19, 27000 <vasnprintf@@Base+0x1170>
    da94:	add	x19, x19, #0x2e7
    da98:	mov	x1, x20
    da9c:	mov	x0, x19
    daa0:	bl	abe0 <bindtextdomain@plt>
    daa4:	mov	x1, x20
    daa8:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    daac:	add	x0, x0, #0x2ee
    dab0:	bl	abe0 <bindtextdomain@plt>
    dab4:	mov	x0, x19
    dab8:	ldp	x19, x20, [sp, #16]
    dabc:	ldp	x29, x30, [sp], #32
    dac0:	b	af60 <textdomain@plt>

000000000000dac4 <word_fnmatch@@Base>:
    dac4:	stp	x29, x30, [sp, #-64]!
    dac8:	mov	x29, sp
    dacc:	stp	x19, x20, [sp, #16]
    dad0:	stp	x21, x22, [sp, #32]
    dad4:	str	x23, [sp, #48]
    dad8:	mov	x23, x0
    dadc:	mov	x0, x1
    dae0:	bl	ac70 <xstrdup@plt>
    dae4:	mov	x19, x0
    dae8:	mov	x20, x0
    daec:	mov	x21, x0
    daf0:	ldrb	w22, [x20]
    daf4:	cbnz	w22, db08 <word_fnmatch@@Base+0x44>
    daf8:	mov	x0, x19
    dafc:	bl	b050 <free@plt>
    db00:	mov	w0, #0x0                   	// #0
    db04:	b	db54 <word_fnmatch@@Base+0x90>
    db08:	bl	afc0 <__ctype_b_loc@plt>
    db0c:	ldr	x0, [x0]
    db10:	ubfiz	x1, x22, #1, #8
    db14:	ldrh	w0, [x0, x1]
    db18:	tbnz	w0, #10, db6c <word_fnmatch@@Base+0xa8>
    db1c:	cmp	w22, #0x5f
    db20:	b.eq	db6c <word_fnmatch@@Base+0xa8>  // b.none
    db24:	add	x0, x21, #0x1
    db28:	cmp	x0, x20
    db2c:	b.cs	db74 <word_fnmatch@@Base+0xb0>  // b.hs, b.nlast
    db30:	strb	wzr, [x20]
    db34:	mov	x1, x21
    db38:	mov	x0, x23
    db3c:	mov	w2, #0x10                  	// #16
    db40:	bl	b210 <fnmatch@plt>
    db44:	cbnz	w0, db68 <word_fnmatch@@Base+0xa4>
    db48:	mov	x0, x19
    db4c:	bl	b050 <free@plt>
    db50:	mov	w0, #0x1                   	// #1
    db54:	ldp	x19, x20, [sp, #16]
    db58:	ldp	x21, x22, [sp, #32]
    db5c:	ldr	x23, [sp, #48]
    db60:	ldp	x29, x30, [sp], #64
    db64:	ret
    db68:	add	x21, x20, #0x1
    db6c:	add	x20, x20, #0x1
    db70:	b	daf0 <word_fnmatch@@Base+0x2c>
    db74:	mov	x21, x0
    db78:	b	db6c <word_fnmatch@@Base+0xa8>

000000000000db7c <xregcomp@@Base>:
    db7c:	stp	x29, x30, [sp, #-64]!
    db80:	mov	x29, sp
    db84:	stp	x19, x20, [sp, #16]
    db88:	stp	x21, x22, [sp, #32]
    db8c:	mov	x21, x0
    db90:	mov	x22, x1
    db94:	str	x23, [sp, #48]
    db98:	bl	aa60 <rpl_regcomp@plt>
    db9c:	cbz	w0, dc10 <xregcomp@@Base+0x94>
    dba0:	mov	x1, x21
    dba4:	mov	x3, #0x0                   	// #0
    dba8:	mov	x2, #0x0                   	// #0
    dbac:	mov	w20, w0
    dbb0:	bl	b240 <rpl_regerror@plt>
    dbb4:	mov	x23, x0
    dbb8:	bl	ac40 <xmalloc@plt>
    dbbc:	mov	x19, x0
    dbc0:	mov	x3, x23
    dbc4:	mov	x2, x0
    dbc8:	mov	x1, x21
    dbcc:	mov	w0, w20
    dbd0:	bl	b240 <rpl_regerror@plt>
    dbd4:	mov	w2, #0x5                   	// #5
    dbd8:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    dbdc:	mov	x0, #0x0                   	// #0
    dbe0:	add	x1, x1, #0x2fc
    dbe4:	bl	b3f0 <dcgettext@plt>
    dbe8:	mov	x2, x0
    dbec:	mov	x4, x19
    dbf0:	mov	x3, x22
    dbf4:	ldp	x19, x20, [sp, #16]
    dbf8:	mov	w1, #0x0                   	// #0
    dbfc:	ldp	x21, x22, [sp, #32]
    dc00:	mov	w0, #0x2                   	// #2
    dc04:	ldr	x23, [sp, #48]
    dc08:	ldp	x29, x30, [sp], #64
    dc0c:	b	a7c0 <error@plt>
    dc10:	ldp	x19, x20, [sp, #16]
    dc14:	ldp	x21, x22, [sp, #32]
    dc18:	ldr	x23, [sp, #48]
    dc1c:	ldp	x29, x30, [sp], #64
    dc20:	ret

000000000000dc24 <areadlink_with_size@@Base>:
    dc24:	stp	x29, x30, [sp, #-224]!
    dc28:	mov	x29, sp
    dc2c:	stp	x19, x20, [sp, #16]
    dc30:	stp	x21, x22, [sp, #32]
    dc34:	stp	x23, x24, [sp, #48]
    dc38:	mov	x24, x0
    dc3c:	mov	x23, x1
    dc40:	stp	x25, x26, [sp, #64]
    dc44:	str	x27, [sp, #80]
    dc48:	cbz	x1, dcbc <areadlink_with_size@@Base+0x98>
    dc4c:	cmp	x1, #0x401
    dc50:	mov	x20, #0x401                 	// #1025
    dc54:	csinc	x20, x20, x1, cs  // cs = hs, nlast
    dc58:	add	x25, sp, #0x60
    dc5c:	mov	x26, #0x3fffffffffffffff    	// #4611686018427387903
    dc60:	mov	x27, #0x7ffffffffffffffe    	// #9223372036854775806
    dc64:	cmp	x20, #0x80
    dc68:	ccmp	x23, #0x0, #0x0, eq  // eq = none
    dc6c:	b.eq	dcc4 <areadlink_with_size@@Base+0xa0>  // b.none
    dc70:	mov	x0, x20
    dc74:	bl	aab0 <malloc@plt>
    dc78:	mov	x22, x0
    dc7c:	cbz	x0, dcb4 <areadlink_with_size@@Base+0x90>
    dc80:	mov	x19, x0
    dc84:	mov	x2, x20
    dc88:	mov	x1, x22
    dc8c:	mov	x0, x24
    dc90:	bl	a8d0 <readlink@plt>
    dc94:	mov	x21, x0
    dc98:	tbz	x0, #63, dcd0 <areadlink_with_size@@Base+0xac>
    dc9c:	bl	b540 <__errno_location@plt>
    dca0:	ldr	w0, [x0]
    dca4:	cmp	w0, #0x22
    dca8:	b.eq	dcd0 <areadlink_with_size@@Base+0xac>  // b.none
    dcac:	mov	x0, x19
    dcb0:	bl	b050 <free@plt>
    dcb4:	mov	x19, #0x0                   	// #0
    dcb8:	b	dd00 <areadlink_with_size@@Base+0xdc>
    dcbc:	mov	x20, #0x80                  	// #128
    dcc0:	b	dc58 <areadlink_with_size@@Base+0x34>
    dcc4:	mov	x22, x25
    dcc8:	mov	x19, #0x0                   	// #0
    dccc:	b	dc84 <areadlink_with_size@@Base+0x60>
    dcd0:	cmp	x20, x21
    dcd4:	b.ls	dd40 <areadlink_with_size@@Base+0x11c>  // b.plast
    dcd8:	strb	wzr, [x22, x21]
    dcdc:	add	x21, x21, #0x1
    dce0:	cbnz	x19, dd20 <areadlink_with_size@@Base+0xfc>
    dce4:	mov	x0, x21
    dce8:	bl	aab0 <malloc@plt>
    dcec:	cbz	x0, dcb4 <areadlink_with_size@@Base+0x90>
    dcf0:	mov	x2, x21
    dcf4:	mov	x1, x22
    dcf8:	bl	a6f0 <memcpy@plt>
    dcfc:	mov	x19, x0
    dd00:	mov	x0, x19
    dd04:	ldp	x19, x20, [sp, #16]
    dd08:	ldp	x21, x22, [sp, #32]
    dd0c:	ldp	x23, x24, [sp, #48]
    dd10:	ldp	x25, x26, [sp, #64]
    dd14:	ldr	x27, [sp, #80]
    dd18:	ldp	x29, x30, [sp], #224
    dd1c:	ret
    dd20:	cmp	x21, x20
    dd24:	b.cs	dd00 <areadlink_with_size@@Base+0xdc>  // b.hs, b.nlast
    dd28:	mov	x0, x19
    dd2c:	mov	x1, x21
    dd30:	bl	ad60 <realloc@plt>
    dd34:	cmp	x0, #0x0
    dd38:	csel	x19, x19, x0, eq  // eq = none
    dd3c:	b	dd00 <areadlink_with_size@@Base+0xdc>
    dd40:	mov	x0, x19
    dd44:	bl	b050 <free@plt>
    dd48:	cmp	x20, x26
    dd4c:	b.hi	dd58 <areadlink_with_size@@Base+0x134>  // b.pmore
    dd50:	lsl	x20, x20, #1
    dd54:	b	dc64 <areadlink_with_size@@Base+0x40>
    dd58:	cmp	x20, x27
    dd5c:	b.ls	dd70 <areadlink_with_size@@Base+0x14c>  // b.plast
    dd60:	bl	b540 <__errno_location@plt>
    dd64:	mov	w1, #0xc                   	// #12
    dd68:	str	w1, [x0]
    dd6c:	b	dcb4 <areadlink_with_size@@Base+0x90>
    dd70:	mov	x20, #0x7fffffffffffffff    	// #9223372036854775807
    dd74:	b	dc64 <areadlink_with_size@@Base+0x40>

000000000000dd78 <argp_make_fmtstream@@Base>:
    dd78:	stp	x29, x30, [sp, #-64]!
    dd7c:	mov	x29, sp
    dd80:	stp	x19, x20, [sp, #16]
    dd84:	mov	x20, x3
    dd88:	stp	x21, x22, [sp, #32]
    dd8c:	mov	x22, x1
    dd90:	mov	x21, x2
    dd94:	str	x23, [sp, #48]
    dd98:	mov	x23, x0
    dd9c:	mov	x0, #0x48                  	// #72
    dda0:	bl	aab0 <malloc@plt>
    dda4:	mov	x19, x0
    dda8:	cbz	x0, ddd4 <argp_make_fmtstream@@Base+0x5c>
    ddac:	stp	x23, x22, [x19]
    ddb0:	mov	x0, #0xc8                  	// #200
    ddb4:	stp	x21, x20, [x19, #16]
    ddb8:	stp	xzr, xzr, [x19, #32]
    ddbc:	bl	aab0 <malloc@plt>
    ddc0:	str	x0, [x19, #48]
    ddc4:	cbnz	x0, ddec <argp_make_fmtstream@@Base+0x74>
    ddc8:	mov	x0, x19
    ddcc:	mov	x19, #0x0                   	// #0
    ddd0:	bl	b050 <free@plt>
    ddd4:	mov	x0, x19
    ddd8:	ldp	x19, x20, [sp, #16]
    dddc:	ldp	x21, x22, [sp, #32]
    dde0:	ldr	x23, [sp, #48]
    dde4:	ldp	x29, x30, [sp], #64
    dde8:	ret
    ddec:	str	x0, [x19, #56]
    ddf0:	add	x0, x0, #0xc8
    ddf4:	str	x0, [x19, #64]
    ddf8:	b	ddd4 <argp_make_fmtstream@@Base+0x5c>

000000000000ddfc <_argp_fmtstream_update@@Base>:
    ddfc:	stp	x29, x30, [sp, #-96]!
    de00:	mov	x29, sp
    de04:	stp	x19, x20, [sp, #16]
    de08:	mov	x19, x0
    de0c:	ldr	x1, [x0, #48]
    de10:	stp	x27, x28, [sp, #80]
    de14:	ldr	x0, [x0, #32]
    de18:	stp	x21, x22, [sp, #32]
    de1c:	add	x28, x1, x0
    de20:	stp	x23, x24, [sp, #48]
    de24:	mov	w24, #0x20                  	// #32
    de28:	stp	x25, x26, [sp, #64]
    de2c:	ldr	x2, [x19, #56]
    de30:	cmp	x2, x28
    de34:	b.ls	ded4 <_argp_fmtstream_update@@Base+0xd8>  // b.plast
    de38:	ldr	x0, [x19, #40]
    de3c:	cbnz	x0, de90 <_argp_fmtstream_update@@Base+0x94>
    de40:	ldr	x20, [x19, #8]
    de44:	cbz	x20, de90 <_argp_fmtstream_update@@Base+0x94>
    de48:	ldr	x1, [x19, #64]
    de4c:	add	x0, x2, x20
    de50:	cmp	x1, x0
    de54:	b.ls	defc <_argp_fmtstream_update@@Base+0x100>  // b.plast
    de58:	add	x21, x28, x20
    de5c:	sub	x2, x2, x28
    de60:	mov	x1, x28
    de64:	mov	x0, x21
    de68:	bl	a700 <memmove@plt>
    de6c:	ldr	x0, [x19, #56]
    de70:	mov	x2, x20
    de74:	mov	w1, #0x20                  	// #32
    de78:	add	x0, x0, x20
    de7c:	str	x0, [x19, #56]
    de80:	mov	x0, x28
    de84:	mov	x28, x21
    de88:	bl	ac10 <memset@plt>
    de8c:	str	x20, [x19, #40]
    de90:	ldr	x25, [x19, #56]
    de94:	mov	x0, x28
    de98:	mov	w1, #0xa                   	// #10
    de9c:	sub	x22, x25, x28
    dea0:	mov	x2, x22
    dea4:	bl	b2b0 <memchr@plt>
    dea8:	mov	x21, x0
    deac:	ldr	x0, [x19, #40]
    deb0:	tbz	x0, #63, deb8 <_argp_fmtstream_update@@Base+0xbc>
    deb4:	str	xzr, [x19, #40]
    deb8:	ldr	x20, [x19, #16]
    debc:	ldr	x0, [x19, #40]
    dec0:	cbnz	x21, df1c <_argp_fmtstream_update@@Base+0x120>
    dec4:	add	x1, x0, x22
    dec8:	cmp	x1, x20
    decc:	b.cs	df38 <_argp_fmtstream_update@@Base+0x13c>  // b.hs, b.nlast
    ded0:	str	x1, [x19, #40]
    ded4:	ldp	x1, x0, [x19, #48]
    ded8:	ldp	x21, x22, [sp, #32]
    dedc:	ldp	x23, x24, [sp, #48]
    dee0:	sub	x0, x0, x1
    dee4:	ldp	x25, x26, [sp, #64]
    dee8:	ldp	x27, x28, [sp, #80]
    deec:	str	x0, [x19, #32]
    def0:	ldp	x19, x20, [sp, #16]
    def4:	ldp	x29, x30, [sp], #96
    def8:	ret
    defc:	mov	x21, #0x0                   	// #0
    df00:	ldr	x1, [x19]
    df04:	add	x21, x21, #0x1
    df08:	mov	w0, #0x20                  	// #32
    df0c:	bl	aa10 <putc_unlocked@plt>
    df10:	cmp	x20, x21
    df14:	b.ne	df00 <_argp_fmtstream_update@@Base+0x104>  // b.any
    df18:	b	de8c <_argp_fmtstream_update@@Base+0x90>
    df1c:	sub	x1, x21, x28
    df20:	add	x1, x1, x0
    df24:	cmp	x1, x20
    df28:	b.ge	df3c <_argp_fmtstream_update@@Base+0x140>  // b.tcont
    df2c:	add	x21, x21, #0x1
    df30:	str	xzr, [x19, #40]
    df34:	b	df88 <_argp_fmtstream_update@@Base+0x18c>
    df38:	mov	x21, x25
    df3c:	ldr	x27, [x19, #24]
    df40:	tbz	x27, #63, dfa8 <_argp_fmtstream_update@@Base+0x1ac>
    df44:	sub	x26, x20, #0x1
    df48:	cmp	x25, x21
    df4c:	b.ls	df90 <_argp_fmtstream_update@@Base+0x194>  // b.plast
    df50:	sub	x0, x26, x0
    df54:	sub	x2, x25, x21
    df58:	mov	x1, x21
    df5c:	add	x0, x28, x0
    df60:	bl	a700 <memmove@plt>
    df64:	ldr	x25, [x19, #40]
    df68:	str	xzr, [x19, #40]
    df6c:	sub	x26, x26, x25
    df70:	add	x26, x28, x26
    df74:	sub	x26, x26, x21
    df78:	ldr	x21, [x19, #56]
    df7c:	sub	x26, x21, x26
    df80:	add	x21, x28, x20
    df84:	str	x26, [x19, #56]
    df88:	mov	x28, x21
    df8c:	b	de2c <_argp_fmtstream_update@@Base+0x30>
    df90:	add	x22, x22, x0
    df94:	str	x22, [x19, #40]
    df98:	sub	x26, x26, x22
    df9c:	add	x25, x25, x26
    dfa0:	str	x25, [x19, #56]
    dfa4:	b	ded4 <_argp_fmtstream_update@@Base+0xd8>
    dfa8:	sub	x20, x20, x0
    dfac:	add	x20, x28, x20
    dfb0:	mov	x26, x20
    dfb4:	cmp	x28, x26
    dfb8:	b.hi	dfd0 <_argp_fmtstream_update@@Base+0x1d4>  // b.pmore
    dfbc:	bl	afc0 <__ctype_b_loc@plt>
    dfc0:	ldrb	w1, [x26]
    dfc4:	ldr	x0, [x0]
    dfc8:	ldrh	w0, [x0, x1, lsl #1]
    dfcc:	tbz	w0, #0, e034 <_argp_fmtstream_update@@Base+0x238>
    dfd0:	add	x23, x26, #0x1
    dfd4:	cmp	x28, x23
    dfd8:	b.cs	e03c <_argp_fmtstream_update@@Base+0x240>  // b.hs, b.nlast
    dfdc:	cmp	x28, x26
    dfe0:	b.hi	e004 <_argp_fmtstream_update@@Base+0x208>  // b.pmore
    dfe4:	sub	x26, x26, #0x1
    dfe8:	cmp	x28, x26
    dfec:	b.hi	e004 <_argp_fmtstream_update@@Base+0x208>  // b.pmore
    dff0:	bl	afc0 <__ctype_b_loc@plt>
    dff4:	ldrb	w1, [x26]
    dff8:	ldr	x0, [x0]
    dffc:	ldrh	w0, [x0, x1, lsl #1]
    e000:	tbnz	w0, #0, dfe4 <_argp_fmtstream_update@@Base+0x1e8>
    e004:	add	x20, x26, #0x1
    e008:	add	x0, x22, #0x1
    e00c:	add	x0, x28, x0
    e010:	cmp	x23, x0
    e014:	b.ne	e088 <_argp_fmtstream_update@@Base+0x28c>  // b.any
    e018:	ldr	x0, [x19, #64]
    e01c:	sub	x0, x0, x20
    e020:	cmp	x27, x0
    e024:	b.ge	e098 <_argp_fmtstream_update@@Base+0x29c>  // b.tcont
    e028:	mov	w0, #0xa                   	// #10
    e02c:	strb	w0, [x20], #1
    e030:	b	e118 <_argp_fmtstream_update@@Base+0x31c>
    e034:	sub	x26, x26, #0x1
    e038:	b	dfb4 <_argp_fmtstream_update@@Base+0x1b8>
    e03c:	cmp	x21, x20
    e040:	b.ls	e080 <_argp_fmtstream_update@@Base+0x284>  // b.plast
    e044:	add	x20, x20, #0x1
    e048:	cmp	x21, x20
    e04c:	b.eq	df2c <_argp_fmtstream_update@@Base+0x130>  // b.none
    e050:	bl	afc0 <__ctype_b_loc@plt>
    e054:	ldrb	w1, [x20]
    e058:	ldr	x0, [x0]
    e05c:	ldrh	w0, [x0, x1, lsl #1]
    e060:	tbz	w0, #0, e044 <_argp_fmtstream_update@@Base+0x248>
    e064:	bl	afc0 <__ctype_b_loc@plt>
    e068:	mov	x23, x20
    e06c:	ldr	x1, [x0]
    e070:	ldrb	w0, [x23, #1]!
    e074:	ldrh	w0, [x1, x0, lsl #1]
    e078:	tbnz	w0, #0, e070 <_argp_fmtstream_update@@Base+0x274>
    e07c:	b	e008 <_argp_fmtstream_update@@Base+0x20c>
    e080:	b.ne	e064 <_argp_fmtstream_update@@Base+0x268>  // b.any
    e084:	b	df2c <_argp_fmtstream_update@@Base+0x130>
    e088:	add	x0, x20, #0x1
    e08c:	sub	x0, x23, x0
    e090:	cmp	x27, x0
    e094:	b.le	e028 <_argp_fmtstream_update@@Base+0x22c>
    e098:	cmp	x25, x23
    e09c:	b.ls	e028 <_argp_fmtstream_update@@Base+0x22c>  // b.plast
    e0a0:	ldr	x1, [x19, #64]
    e0a4:	add	x0, x27, #0x1
    e0a8:	sub	x1, x1, x25
    e0ac:	cmp	x1, x0
    e0b0:	b.le	e0e0 <_argp_fmtstream_update@@Base+0x2e4>
    e0b4:	sub	x25, x25, x23
    e0b8:	mov	x1, x23
    e0bc:	mov	x2, x25
    e0c0:	add	x0, x20, x0
    e0c4:	bl	a700 <memmove@plt>
    e0c8:	ldr	x1, [x19, #24]
    e0cc:	add	x1, x1, #0x1
    e0d0:	add	x23, x20, x1
    e0d4:	add	x25, x23, x25
    e0d8:	sub	x22, x25, x28
    e0dc:	b	e028 <_argp_fmtstream_update@@Base+0x22c>
    e0e0:	ldr	x0, [x19, #48]
    e0e4:	cmp	x0, x20
    e0e8:	b.cs	e0fc <_argp_fmtstream_update@@Base+0x300>  // b.hs, b.nlast
    e0ec:	ldr	x3, [x19]
    e0f0:	sub	x2, x20, x0
    e0f4:	mov	x1, #0x1                   	// #1
    e0f8:	bl	a760 <fwrite_unlocked@plt>
    e0fc:	ldr	x1, [x19]
    e100:	mov	w0, #0xa                   	// #10
    e104:	bl	aa10 <putc_unlocked@plt>
    e108:	ldr	x20, [x19, #48]
    e10c:	sub	x1, x28, x20
    e110:	mov	x28, x20
    e114:	add	x22, x22, x1
    e118:	ldr	x1, [x19, #24]
    e11c:	sub	x0, x23, x20
    e120:	cmp	x0, x1
    e124:	b.ge	e1a8 <_argp_fmtstream_update@@Base+0x3ac>  // b.tcont
    e128:	add	x0, x22, #0x1
    e12c:	add	x0, x28, x0
    e130:	cmp	x23, x0
    e134:	b.ne	e148 <_argp_fmtstream_update@@Base+0x34c>  // b.any
    e138:	ldr	x0, [x19, #64]
    e13c:	sub	x0, x0, x23
    e140:	cmp	x1, x0
    e144:	b.le	e1a8 <_argp_fmtstream_update@@Base+0x3ac>
    e148:	mov	x21, #0x0                   	// #0
    e14c:	b	e1c0 <_argp_fmtstream_update@@Base+0x3c4>
    e150:	strb	w24, [x20, x0]
    e154:	add	x0, x0, #0x1
    e158:	ldr	x1, [x19, #24]
    e15c:	add	x21, x20, x0
    e160:	cmp	x1, x0
    e164:	b.gt	e150 <_argp_fmtstream_update@@Base+0x354>
    e168:	cmp	x21, x23
    e16c:	b.cs	e184 <_argp_fmtstream_update@@Base+0x388>  // b.hs, b.nlast
    e170:	add	x2, x28, x22
    e174:	mov	x1, x23
    e178:	sub	x2, x2, x23
    e17c:	mov	x0, x21
    e180:	bl	a700 <memmove@plt>
    e184:	ldr	x0, [x19, #24]
    e188:	sub	x1, x23, x28
    e18c:	sub	x1, x22, x1
    e190:	cmp	x0, #0x0
    e194:	add	x1, x21, x1
    e198:	csinv	x0, x0, xzr, ne  // ne = any
    e19c:	str	x0, [x19, #40]
    e1a0:	str	x1, [x19, #56]
    e1a4:	b	df88 <_argp_fmtstream_update@@Base+0x18c>
    e1a8:	mov	x0, #0x0                   	// #0
    e1ac:	b	e158 <_argp_fmtstream_update@@Base+0x35c>
    e1b0:	ldr	x1, [x19]
    e1b4:	add	x21, x21, #0x1
    e1b8:	mov	w0, #0x20                  	// #32
    e1bc:	bl	aa10 <putc_unlocked@plt>
    e1c0:	ldr	x0, [x19, #24]
    e1c4:	cmp	x0, x21
    e1c8:	b.gt	e1b0 <_argp_fmtstream_update@@Base+0x3b4>
    e1cc:	mov	x21, x20
    e1d0:	b	e168 <_argp_fmtstream_update@@Base+0x36c>

000000000000e1d4 <argp_fmtstream_free@@Base>:
    e1d4:	stp	x29, x30, [sp, #-32]!
    e1d8:	mov	x29, sp
    e1dc:	str	x19, [sp, #16]
    e1e0:	mov	x19, x0
    e1e4:	bl	a9b0 <_argp_fmtstream_update@plt>
    e1e8:	ldp	x0, x2, [x19, #48]
    e1ec:	cmp	x2, x0
    e1f0:	b.ls	e204 <argp_fmtstream_free@@Base+0x30>  // b.plast
    e1f4:	ldr	x3, [x19]
    e1f8:	sub	x2, x2, x0
    e1fc:	mov	x1, #0x1                   	// #1
    e200:	bl	a760 <fwrite_unlocked@plt>
    e204:	ldr	x0, [x19, #48]
    e208:	bl	b050 <free@plt>
    e20c:	mov	x0, x19
    e210:	ldr	x19, [sp, #16]
    e214:	ldp	x29, x30, [sp], #32
    e218:	b	b050 <free@plt>

000000000000e21c <_argp_fmtstream_ensure@@Base>:
    e21c:	stp	x29, x30, [sp, #-32]!
    e220:	mov	x29, sp
    e224:	stp	x19, x20, [sp, #16]
    e228:	mov	x20, x1
    e22c:	ldp	x2, x1, [x0, #56]
    e230:	sub	x1, x1, x2
    e234:	cmp	x1, x20
    e238:	b.cc	e244 <_argp_fmtstream_ensure@@Base+0x28>  // b.lo, b.ul, b.last
    e23c:	mov	w0, #0x1                   	// #1
    e240:	b	e2d4 <_argp_fmtstream_ensure@@Base+0xb8>
    e244:	mov	x19, x0
    e248:	bl	a9b0 <_argp_fmtstream_update@plt>
    e24c:	mov	x1, #0x1                   	// #1
    e250:	ldp	x0, x2, [x19, #48]
    e254:	ldr	x3, [x19]
    e258:	sub	x2, x2, x0
    e25c:	bl	a760 <fwrite_unlocked@plt>
    e260:	mov	x1, x0
    e264:	ldp	x0, x2, [x19, #48]
    e268:	sub	x3, x2, x0
    e26c:	cmp	x1, x3
    e270:	b.ne	e2b0 <_argp_fmtstream_ensure@@Base+0x94>  // b.any
    e274:	ldr	x1, [x19, #64]
    e278:	str	xzr, [x19, #32]
    e27c:	str	x0, [x19, #56]
    e280:	sub	x1, x1, x0
    e284:	cmp	x20, x1
    e288:	b.ls	e23c <_argp_fmtstream_ensure@@Base+0x20>  // b.plast
    e28c:	adds	x20, x20, x1
    e290:	b.cs	e2a0 <_argp_fmtstream_ensure@@Base+0x84>  // b.hs, b.nlast
    e294:	mov	x1, x20
    e298:	bl	ad60 <realloc@plt>
    e29c:	cbnz	x0, e2e0 <_argp_fmtstream_ensure@@Base+0xc4>
    e2a0:	bl	b540 <__errno_location@plt>
    e2a4:	mov	w1, #0xc                   	// #12
    e2a8:	str	w1, [x0]
    e2ac:	b	e2d0 <_argp_fmtstream_ensure@@Base+0xb4>
    e2b0:	ldr	x3, [x19, #32]
    e2b4:	sub	x2, x2, x1
    e2b8:	str	x2, [x19, #56]
    e2bc:	sub	x2, x2, x0
    e2c0:	sub	x3, x3, x1
    e2c4:	str	x3, [x19, #32]
    e2c8:	add	x1, x0, x1
    e2cc:	bl	a700 <memmove@plt>
    e2d0:	mov	w0, #0x0                   	// #0
    e2d4:	ldp	x19, x20, [sp, #16]
    e2d8:	ldp	x29, x30, [sp], #32
    e2dc:	ret
    e2e0:	add	x20, x0, x20
    e2e4:	stp	x0, x0, [x19, #48]
    e2e8:	str	x20, [x19, #64]
    e2ec:	b	e23c <_argp_fmtstream_ensure@@Base+0x20>

000000000000e2f0 <argp_fmtstream_printf@@Base>:
    e2f0:	stp	x29, x30, [sp, #-320]!
    e2f4:	mov	x29, sp
    e2f8:	stp	x19, x20, [sp, #16]
    e2fc:	mov	x19, x0
    e300:	mov	x20, x1
    e304:	stp	x21, x22, [sp, #32]
    e308:	add	x21, sp, #0x110
    e30c:	mov	x1, #0x96                  	// #150
    e310:	str	x25, [sp, #64]
    e314:	add	x25, sp, #0x50
    e318:	mov	w22, #0xffffffd0            	// #-48
    e31c:	stp	x23, x24, [sp, #48]
    e320:	mov	w23, #0xffffff80            	// #-128
    e324:	str	q0, [sp, #144]
    e328:	str	q1, [sp, #160]
    e32c:	str	q2, [sp, #176]
    e330:	str	q3, [sp, #192]
    e334:	str	q4, [sp, #208]
    e338:	str	q5, [sp, #224]
    e33c:	str	q6, [sp, #240]
    e340:	str	q7, [sp, #256]
    e344:	stp	x2, x3, [sp, #272]
    e348:	stp	x4, x5, [sp, #288]
    e34c:	stp	x6, x7, [sp, #304]
    e350:	mov	x0, x19
    e354:	bl	b3c0 <_argp_fmtstream_ensure@plt>
    e358:	cbnz	w0, e378 <argp_fmtstream_printf@@Base+0x88>
    e35c:	mov	x0, #0xffffffffffffffff    	// #-1
    e360:	ldp	x19, x20, [sp, #16]
    e364:	ldp	x21, x22, [sp, #32]
    e368:	ldp	x23, x24, [sp, #48]
    e36c:	ldr	x25, [sp, #64]
    e370:	ldp	x29, x30, [sp], #320
    e374:	ret
    e378:	add	x0, sp, #0x140
    e37c:	stp	x0, x0, [sp, #112]
    e380:	str	x21, [sp, #128]
    e384:	stp	w22, w23, [sp, #136]
    e388:	ldp	x2, x3, [sp, #112]
    e38c:	ldr	x24, [x19, #64]
    e390:	stp	x2, x3, [x25]
    e394:	ldp	x2, x3, [sp, #128]
    e398:	stp	x2, x3, [x25, #16]
    e39c:	ldr	x0, [x19, #56]
    e3a0:	mov	x2, x20
    e3a4:	mov	x3, x25
    e3a8:	sub	x24, x24, x0
    e3ac:	mov	x1, x24
    e3b0:	bl	b420 <vsnprintf@plt>
    e3b4:	sxtw	x2, w0
    e3b8:	cmp	x24, w0, sxtw
    e3bc:	b.hi	e3cc <argp_fmtstream_printf@@Base+0xdc>  // b.pmore
    e3c0:	add	w2, w0, #0x1
    e3c4:	sxtw	x1, w2
    e3c8:	b	e350 <argp_fmtstream_printf@@Base+0x60>
    e3cc:	ldr	x0, [x19, #56]
    e3d0:	add	x0, x0, x2
    e3d4:	str	x0, [x19, #56]
    e3d8:	mov	x0, x2
    e3dc:	b	e360 <argp_fmtstream_printf@@Base+0x70>

000000000000e3e0 <argp_fmtstream_write@@Base>:
    e3e0:	stp	x29, x30, [sp, #-48]!
    e3e4:	mov	x29, sp
    e3e8:	str	x21, [sp, #32]
    e3ec:	mov	x21, x1
    e3f0:	ldr	x1, [x0, #56]
    e3f4:	stp	x19, x20, [sp, #16]
    e3f8:	mov	x19, x2
    e3fc:	add	x1, x1, x2
    e400:	mov	x20, x0
    e404:	ldr	x2, [x0, #64]
    e408:	cmp	x2, x1
    e40c:	b.cc	e440 <argp_fmtstream_write@@Base+0x60>  // b.lo, b.ul, b.last
    e410:	ldr	x0, [x20, #56]
    e414:	mov	x2, x19
    e418:	mov	x1, x21
    e41c:	bl	a6f0 <memcpy@plt>
    e420:	ldr	x0, [x20, #56]
    e424:	add	x0, x0, x19
    e428:	str	x0, [x20, #56]
    e42c:	mov	x0, x19
    e430:	ldp	x19, x20, [sp, #16]
    e434:	ldr	x21, [sp, #32]
    e438:	ldp	x29, x30, [sp], #48
    e43c:	ret
    e440:	mov	x1, x19
    e444:	bl	b3c0 <_argp_fmtstream_ensure@plt>
    e448:	cbnz	w0, e410 <argp_fmtstream_write@@Base+0x30>
    e44c:	mov	x19, #0x0                   	// #0
    e450:	b	e42c <argp_fmtstream_write@@Base+0x4c>

000000000000e454 <argp_fmtstream_puts@@Base>:
    e454:	stp	x29, x30, [sp, #-48]!
    e458:	mov	x29, sp
    e45c:	stp	x19, x20, [sp, #16]
    e460:	mov	x20, x1
    e464:	str	x21, [sp, #32]
    e468:	mov	x21, x0
    e46c:	mov	x0, x1
    e470:	bl	a780 <strlen@plt>
    e474:	cbz	x0, e4a4 <argp_fmtstream_puts@@Base+0x50>
    e478:	mov	x19, x0
    e47c:	mov	x2, x0
    e480:	mov	x1, x20
    e484:	mov	x0, x21
    e488:	bl	e3e0 <argp_fmtstream_write@@Base>
    e48c:	cmp	x19, x0
    e490:	csetm	w0, ne  // ne = any
    e494:	ldp	x19, x20, [sp, #16]
    e498:	ldr	x21, [sp, #32]
    e49c:	ldp	x29, x30, [sp], #48
    e4a0:	ret
    e4a4:	mov	w0, #0x0                   	// #0
    e4a8:	b	e494 <argp_fmtstream_puts@@Base+0x40>

000000000000e4ac <argp_fmtstream_putc@@Base>:
    e4ac:	stp	x29, x30, [sp, #-32]!
    e4b0:	mov	x29, sp
    e4b4:	stp	x19, x20, [sp, #16]
    e4b8:	mov	w19, w1
    e4bc:	mov	x20, x0
    e4c0:	ldp	x2, x1, [x0, #56]
    e4c4:	cmp	x2, x1
    e4c8:	b.cs	e4ec <argp_fmtstream_putc@@Base+0x40>  // b.hs, b.nlast
    e4cc:	ldr	x0, [x20, #56]
    e4d0:	add	x1, x0, #0x1
    e4d4:	str	x1, [x20, #56]
    e4d8:	strb	w19, [x0]
    e4dc:	and	w0, w19, #0xff
    e4e0:	ldp	x19, x20, [sp, #16]
    e4e4:	ldp	x29, x30, [sp], #32
    e4e8:	ret
    e4ec:	mov	x1, #0x1                   	// #1
    e4f0:	bl	b3c0 <_argp_fmtstream_ensure@plt>
    e4f4:	cbnz	w0, e4cc <argp_fmtstream_putc@@Base+0x20>
    e4f8:	mov	w0, #0xffffffff            	// #-1
    e4fc:	b	e4e0 <argp_fmtstream_putc@@Base+0x34>

000000000000e500 <argp_fmtstream_set_lmargin@@Base>:
    e500:	stp	x29, x30, [sp, #-32]!
    e504:	mov	x29, sp
    e508:	stp	x19, x20, [sp, #16]
    e50c:	mov	x20, x1
    e510:	mov	x19, x0
    e514:	ldp	x2, x1, [x0, #48]
    e518:	sub	x1, x1, x2
    e51c:	ldr	x2, [x0, #32]
    e520:	cmp	x1, x2
    e524:	b.ls	e52c <argp_fmtstream_set_lmargin@@Base+0x2c>  // b.plast
    e528:	bl	a9b0 <_argp_fmtstream_update@plt>
    e52c:	ldr	x0, [x19, #8]
    e530:	str	x20, [x19, #8]
    e534:	ldp	x19, x20, [sp, #16]
    e538:	ldp	x29, x30, [sp], #32
    e53c:	ret

000000000000e540 <argp_fmtstream_set_rmargin@@Base>:
    e540:	stp	x29, x30, [sp, #-32]!
    e544:	mov	x29, sp
    e548:	stp	x19, x20, [sp, #16]
    e54c:	mov	x20, x1
    e550:	mov	x19, x0
    e554:	ldp	x2, x1, [x0, #48]
    e558:	sub	x1, x1, x2
    e55c:	ldr	x2, [x0, #32]
    e560:	cmp	x1, x2
    e564:	b.ls	e56c <argp_fmtstream_set_rmargin@@Base+0x2c>  // b.plast
    e568:	bl	a9b0 <_argp_fmtstream_update@plt>
    e56c:	ldr	x0, [x19, #16]
    e570:	str	x20, [x19, #16]
    e574:	ldp	x19, x20, [sp, #16]
    e578:	ldp	x29, x30, [sp], #32
    e57c:	ret

000000000000e580 <argp_fmtstream_set_wmargin@@Base>:
    e580:	stp	x29, x30, [sp, #-32]!
    e584:	mov	x29, sp
    e588:	stp	x19, x20, [sp, #16]
    e58c:	mov	x20, x1
    e590:	mov	x19, x0
    e594:	ldp	x2, x1, [x0, #48]
    e598:	sub	x1, x1, x2
    e59c:	ldr	x2, [x0, #32]
    e5a0:	cmp	x1, x2
    e5a4:	b.ls	e5ac <argp_fmtstream_set_wmargin@@Base+0x2c>  // b.plast
    e5a8:	bl	a9b0 <_argp_fmtstream_update@plt>
    e5ac:	ldr	x0, [x19, #24]
    e5b0:	str	x20, [x19, #24]
    e5b4:	ldp	x19, x20, [sp, #16]
    e5b8:	ldp	x29, x30, [sp], #32
    e5bc:	ret

000000000000e5c0 <argp_fmtstream_point@@Base>:
    e5c0:	stp	x29, x30, [sp, #-32]!
    e5c4:	mov	x29, sp
    e5c8:	ldp	x2, x1, [x0, #48]
    e5cc:	sub	x1, x1, x2
    e5d0:	ldr	x2, [x0, #32]
    e5d4:	str	x19, [sp, #16]
    e5d8:	mov	x19, x0
    e5dc:	cmp	x1, x2
    e5e0:	b.ls	e5e8 <argp_fmtstream_point@@Base+0x28>  // b.plast
    e5e4:	bl	a9b0 <_argp_fmtstream_update@plt>
    e5e8:	ldr	x0, [x19, #40]
    e5ec:	ldr	x19, [sp, #16]
    e5f0:	cmp	x0, #0x0
    e5f4:	csel	x0, x0, xzr, ge  // ge = tcont
    e5f8:	ldp	x29, x30, [sp], #32
    e5fc:	ret
    e600:	stp	x29, x30, [sp, #-80]!
    e604:	mov	x29, sp
    e608:	stp	x19, x20, [sp, #16]
    e60c:	ldr	x20, [x0]
    e610:	stp	x21, x22, [sp, #32]
    e614:	mov	x22, x1
    e618:	mov	x19, x20
    e61c:	stp	x23, x24, [sp, #48]
    e620:	mov	x23, x2
    e624:	mov	x24, x3
    e628:	ldr	w21, [x0, #8]
    e62c:	str	x25, [sp, #64]
    e630:	ldr	x25, [x0, #16]
    e634:	mov	w0, #0x0                   	// #0
    e638:	cmp	w21, #0x0
    e63c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    e640:	b.eq	e65c <argp_fmtstream_point@@Base+0x9c>  // b.none
    e644:	ldp	x19, x20, [sp, #16]
    e648:	ldp	x21, x22, [sp, #32]
    e64c:	ldp	x23, x24, [sp, #48]
    e650:	ldr	x25, [sp, #64]
    e654:	ldp	x29, x30, [sp], #80
    e658:	ret
    e65c:	mov	x0, x19
    e660:	bl	b3e0 <_option_is_short@plt>
    e664:	cbz	w0, e6a0 <argp_fmtstream_point@@Base+0xe0>
    e668:	ldrb	w1, [x25]
    e66c:	ldr	w0, [x19, #8]
    e670:	cmp	w1, w0
    e674:	b.ne	e6b4 <argp_fmtstream_point@@Base+0xf4>  // b.any
    e678:	ldr	w0, [x19, #24]
    e67c:	tst	x0, #0x4
    e680:	csel	x20, x20, x19, ne  // ne = any
    e684:	tbnz	w0, #1, e6ac <argp_fmtstream_point@@Base+0xec>
    e688:	mov	x3, x24
    e68c:	mov	x2, x23
    e690:	mov	x1, x20
    e694:	mov	x0, x19
    e698:	blr	x22
    e69c:	add	x25, x25, #0x1
    e6a0:	add	x19, x19, #0x30
    e6a4:	sub	w21, w21, #0x1
    e6a8:	b	e638 <argp_fmtstream_point@@Base+0x78>
    e6ac:	mov	w0, #0x0                   	// #0
    e6b0:	b	e69c <argp_fmtstream_point@@Base+0xdc>
    e6b4:	mov	w0, #0x0                   	// #0
    e6b8:	b	e6a0 <argp_fmtstream_point@@Base+0xe0>
    e6bc:	stp	x29, x30, [sp, #-32]!
    e6c0:	mov	x29, sp
    e6c4:	str	x19, [sp, #16]
    e6c8:	mov	x19, x0
    e6cc:	bl	b3e0 <_option_is_short@plt>
    e6d0:	cbz	w0, e6d8 <argp_fmtstream_point@@Base+0x118>
    e6d4:	ldr	w0, [x19, #8]
    e6d8:	ldr	x19, [sp, #16]
    e6dc:	ldp	x29, x30, [sp], #32
    e6e0:	ret
    e6e4:	ldr	w2, [x0, #8]
    e6e8:	ldr	x1, [x0]
    e6ec:	cbnz	w2, e6f8 <argp_fmtstream_point@@Base+0x138>
    e6f0:	mov	x0, #0x0                   	// #0
    e6f4:	ret
    e6f8:	ldr	x0, [x1]
    e6fc:	cbz	x0, e708 <argp_fmtstream_point@@Base+0x148>
    e700:	ldr	w3, [x1, #24]
    e704:	tbz	w3, #1, e6f4 <argp_fmtstream_point@@Base+0x134>
    e708:	add	x1, x1, #0x30
    e70c:	sub	w2, w2, #0x1
    e710:	b	e6ec <argp_fmtstream_point@@Base+0x12c>
    e714:	mov	w3, w0
    e718:	mov	w0, w2
    e71c:	cmp	w3, w1
    e720:	b.eq	e73c <argp_fmtstream_point@@Base+0x17c>  // b.none
    e724:	mvn	w0, w1
    e728:	sub	w2, w3, w1
    e72c:	sub	w1, w1, w3
    e730:	lsr	w0, w0, #31
    e734:	cmp	w0, w3, lsr #31
    e738:	csel	w0, w1, w2, eq  // eq = none
    e73c:	ret
    e740:	stp	x29, x30, [sp, #-32]!
    e744:	mov	x29, sp
    e748:	stp	x19, x20, [sp, #16]
    e74c:	mov	w19, w1
    e750:	mov	x20, x0
    e754:	bl	ae70 <argp_fmtstream_point@plt>
    e758:	sub	w19, w19, w0
    e75c:	cmp	w19, #0x0
    e760:	b.gt	e770 <argp_fmtstream_point@@Base+0x1b0>
    e764:	ldp	x19, x20, [sp, #16]
    e768:	ldp	x29, x30, [sp], #32
    e76c:	ret
    e770:	mov	x0, x20
    e774:	mov	w1, #0x20                  	// #32
    e778:	sub	w19, w19, #0x1
    e77c:	bl	a9c0 <argp_fmtstream_putc@plt>
    e780:	b	e75c <argp_fmtstream_point@@Base+0x19c>
    e784:	stp	x29, x30, [sp, #-32]!
    e788:	mov	x29, sp
    e78c:	stp	x19, x20, [sp, #16]
    e790:	mov	x19, x0
    e794:	mov	x20, x1
    e798:	bl	ae70 <argp_fmtstream_point@plt>
    e79c:	add	x0, x0, x20
    e7a0:	ldr	x1, [x19, #16]
    e7a4:	cmp	x0, x1
    e7a8:	b.cc	e7c0 <argp_fmtstream_point@@Base+0x200>  // b.lo, b.ul, b.last
    e7ac:	mov	w1, #0xa                   	// #10
    e7b0:	mov	x0, x19
    e7b4:	ldp	x19, x20, [sp, #16]
    e7b8:	ldp	x29, x30, [sp], #32
    e7bc:	b	a9c0 <argp_fmtstream_putc@plt>
    e7c0:	mov	w1, #0x20                  	// #32
    e7c4:	b	e7b0 <argp_fmtstream_point@@Base+0x1f0>
    e7c8:	stp	x29, x30, [sp, #-48]!
    e7cc:	mov	x5, x0
    e7d0:	mov	x29, sp
    e7d4:	stp	x19, x20, [sp, #16]
    e7d8:	mov	x20, x1
    e7dc:	ldr	x1, [x0, #16]
    e7e0:	str	x21, [sp, #32]
    e7e4:	cbz	x1, e834 <argp_fmtstream_point@@Base+0x274>
    e7e8:	mov	x21, x2
    e7ec:	ldr	w2, [x5, #24]
    e7f0:	mov	x0, x3
    e7f4:	mov	x19, x4
    e7f8:	tbz	w2, #0, e820 <argp_fmtstream_point@@Base+0x260>
    e7fc:	mov	w2, #0x5                   	// #5
    e800:	bl	b3f0 <dcgettext@plt>
    e804:	mov	x1, x21
    e808:	mov	x2, x0
    e80c:	mov	x0, x19
    e810:	ldp	x19, x20, [sp, #16]
    e814:	ldr	x21, [sp, #32]
    e818:	ldp	x29, x30, [sp], #48
    e81c:	b	aea0 <argp_fmtstream_printf@plt>
    e820:	mov	w2, #0x5                   	// #5
    e824:	bl	b3f0 <dcgettext@plt>
    e828:	mov	x1, x20
    e82c:	mov	x2, x0
    e830:	b	e80c <argp_fmtstream_point@@Base+0x24c>
    e834:	ldp	x19, x20, [sp, #16]
    e838:	ldr	x21, [sp, #32]
    e83c:	ldp	x29, x30, [sp], #48
    e840:	ret
    e844:	stp	x29, x30, [sp, #-32]!
    e848:	mov	x29, sp
    e84c:	str	x19, [sp, #16]
    e850:	mov	x19, x0
    e854:	bl	afc0 <__ctype_b_loc@plt>
    e858:	ldr	x3, [x0]
    e85c:	ldr	x0, [x19]
    e860:	ldrb	w2, [x0]
    e864:	ldrb	w1, [x0]
    e868:	ldrh	w2, [x3, x2, lsl #1]
    e86c:	tbnz	w2, #13, e89c <argp_fmtstream_point@@Base+0x2dc>
    e870:	cmp	w1, #0x2d
    e874:	cset	w0, ne  // ne = any
    e878:	ldr	x2, [x19]
    e87c:	ldrb	w1, [x2]
    e880:	cbz	w1, e890 <argp_fmtstream_point@@Base+0x2d0>
    e884:	ubfiz	x1, x1, #1, #8
    e888:	ldrh	w1, [x3, x1]
    e88c:	tbz	w1, #3, e8a8 <argp_fmtstream_point@@Base+0x2e8>
    e890:	ldr	x19, [sp, #16]
    e894:	ldp	x29, x30, [sp], #32
    e898:	ret
    e89c:	add	x0, x0, #0x1
    e8a0:	str	x0, [x19]
    e8a4:	b	e85c <argp_fmtstream_point@@Base+0x29c>
    e8a8:	add	x2, x2, #0x1
    e8ac:	str	x2, [x19]
    e8b0:	b	e878 <argp_fmtstream_point@@Base+0x2b8>
    e8b4:	stp	x29, x30, [sp, #-48]!
    e8b8:	mov	x4, x1
    e8bc:	mov	x29, sp
    e8c0:	stp	x19, x20, [sp, #16]
    e8c4:	mov	x19, x0
    e8c8:	mov	x20, x3
    e8cc:	stp	x21, x22, [sp, #32]
    e8d0:	mov	x0, x2
    e8d4:	ldr	x1, [x19, #16]
    e8d8:	cbnz	x1, e8e4 <argp_fmtstream_point@@Base+0x324>
    e8dc:	ldr	x1, [x4, #16]
    e8e0:	cbz	x1, e91c <argp_fmtstream_point@@Base+0x35c>
    e8e4:	ldr	w2, [x4, #24]
    e8e8:	ldr	w22, [x19, #24]
    e8ec:	orr	w22, w22, w2
    e8f0:	tbnz	w22, #4, e91c <argp_fmtstream_point@@Base+0x35c>
    e8f4:	mov	w2, #0x5                   	// #5
    e8f8:	bl	b3f0 <dcgettext@plt>
    e8fc:	mov	x21, x0
    e900:	tbz	w22, #0, e930 <argp_fmtstream_point@@Base+0x370>
    e904:	ldr	w2, [x19, #8]
    e908:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    e90c:	mov	x3, x0
    e910:	add	x1, x1, #0x312
    e914:	mov	x0, x20
    e918:	bl	aea0 <argp_fmtstream_printf@plt>
    e91c:	mov	w0, #0x0                   	// #0
    e920:	ldp	x19, x20, [sp, #16]
    e924:	ldp	x21, x22, [sp, #32]
    e928:	ldp	x29, x30, [sp], #48
    e92c:	ret
    e930:	bl	a780 <strlen@plt>
    e934:	add	x1, x0, #0x6
    e938:	mov	x0, x20
    e93c:	bl	e784 <argp_fmtstream_point@@Base+0x1c4>
    e940:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    e944:	ldr	w2, [x19, #8]
    e948:	mov	x3, x21
    e94c:	add	x1, x1, #0x31d
    e950:	b	e914 <argp_fmtstream_point@@Base+0x354>
    e954:	stp	x29, x30, [sp, #-32]!
    e958:	mov	x29, sp
    e95c:	stp	x19, x20, [sp, #16]
    e960:	mov	x19, x0
    e964:	ldr	x0, [x0, #24]
    e968:	cbnz	x0, e994 <argp_fmtstream_point@@Base+0x3d4>
    e96c:	ldr	w0, [x19, #8]
    e970:	cbz	w0, e984 <argp_fmtstream_point@@Base+0x3c4>
    e974:	ldr	x0, [x19]
    e978:	bl	b050 <free@plt>
    e97c:	ldr	x0, [x19, #16]
    e980:	bl	b050 <free@plt>
    e984:	mov	x0, x19
    e988:	ldp	x19, x20, [sp, #16]
    e98c:	ldp	x29, x30, [sp], #32
    e990:	b	b050 <free@plt>
    e994:	ldr	x20, [x0, #40]
    e998:	bl	b050 <free@plt>
    e99c:	mov	x0, x20
    e9a0:	b	e968 <argp_fmtstream_point@@Base+0x3a8>
    e9a4:	stp	x29, x30, [sp, #-32]!
    e9a8:	mov	x29, sp
    e9ac:	stp	x19, x20, [sp, #16]
    e9b0:	ldr	x20, [x0, #32]
    e9b4:	ldr	x0, [x0, #16]
    e9b8:	cbz	x0, e9e0 <argp_fmtstream_point@@Base+0x420>
    e9bc:	mov	w1, #0xa                   	// #10
    e9c0:	bl	b190 <strchr@plt>
    e9c4:	cmp	x0, #0x0
    e9c8:	cset	x19, ne  // ne = any
    e9cc:	cbnz	x20, e9f4 <argp_fmtstream_point@@Base+0x434>
    e9d0:	mov	x0, x19
    e9d4:	ldp	x19, x20, [sp, #16]
    e9d8:	ldp	x29, x30, [sp], #32
    e9dc:	ret
    e9e0:	mov	x19, #0x0                   	// #0
    e9e4:	b	e9cc <argp_fmtstream_point@@Base+0x40c>
    e9e8:	bl	e9a4 <argp_fmtstream_point@@Base+0x3e4>
    e9ec:	add	x20, x20, #0x20
    e9f0:	add	x19, x19, x0
    e9f4:	ldr	x0, [x20]
    e9f8:	cbnz	x0, e9e8 <argp_fmtstream_point@@Base+0x428>
    e9fc:	b	e9d0 <argp_fmtstream_point@@Base+0x410>
    ea00:	stp	x29, x30, [sp, #-112]!
    ea04:	mov	x29, sp
    ea08:	stp	x25, x26, [sp, #64]
    ea0c:	ldr	x25, [x0, #24]
    ea10:	stp	x19, x20, [sp, #16]
    ea14:	mov	x20, x5
    ea18:	stp	x21, x22, [sp, #32]
    ea1c:	mov	x21, x0
    ea20:	mov	w22, w2
    ea24:	stp	x23, x24, [sp, #48]
    ea28:	stp	x27, x28, [sp, #80]
    ea2c:	mov	x27, x1
    ea30:	stp	w3, w4, [sp, #104]
    ea34:	cbnz	x25, ea44 <argp_fmtstream_point@@Base+0x484>
    ea38:	ldr	x24, [x0, #32]
    ea3c:	mov	x19, #0x0                   	// #0
    ea40:	b	ea8c <argp_fmtstream_point@@Base+0x4cc>
    ea44:	ldr	x0, [x0, #48]
    ea48:	mov	x1, x25
    ea4c:	mov	w2, #0x5                   	// #5
    ea50:	bl	b3f0 <dcgettext@plt>
    ea54:	mov	x19, x0
    ea58:	ldr	x24, [x21, #32]
    ea5c:	cbz	x0, eb40 <argp_fmtstream_point@@Base+0x580>
    ea60:	mov	w1, #0xb                   	// #11
    ea64:	bl	b190 <strchr@plt>
    ea68:	cbz	w22, eb38 <argp_fmtstream_point@@Base+0x578>
    ea6c:	cmp	x0, #0x0
    ea70:	csinc	x25, xzr, x0, eq  // eq = none
    ea74:	cmp	x0, #0x0
    ea78:	eor	w1, w22, #0x1
    ea7c:	cset	w2, ne  // ne = any
    ea80:	sub	x0, x0, x19
    ea84:	tst	w1, w2
    ea88:	csel	x19, x0, xzr, ne  // ne = any
    ea8c:	ldr	x0, [x21, #40]
    ea90:	cbz	x0, eb48 <argp_fmtstream_point@@Base+0x588>
    ea94:	cbz	x19, eaa8 <argp_fmtstream_point@@Base+0x4e8>
    ea98:	mov	x0, x25
    ea9c:	mov	x1, x19
    eaa0:	bl	b150 <strndup@plt>
    eaa4:	mov	x25, x0
    eaa8:	mov	x1, x27
    eaac:	mov	x0, x21
    eab0:	bl	b280 <_argp_input@plt>
    eab4:	mov	x2, x0
    eab8:	ldr	x4, [x21, #40]
    eabc:	mov	x26, x0
    eac0:	mov	w0, #0x1                   	// #1
    eac4:	mov	x1, x25
    eac8:	mov	x23, x25
    eacc:	movk	w0, #0x200, lsl #16
    ead0:	add	w0, w22, w0
    ead4:	blr	x4
    ead8:	mov	x25, x0
    eadc:	cbz	x25, eb64 <argp_fmtstream_point@@Base+0x5a4>
    eae0:	ldr	w0, [sp, #104]
    eae4:	cbz	w0, eaf4 <argp_fmtstream_point@@Base+0x534>
    eae8:	mov	x0, x20
    eaec:	mov	w1, #0xa                   	// #10
    eaf0:	bl	a9c0 <argp_fmtstream_putc@plt>
    eaf4:	cmp	x19, #0x0
    eaf8:	ccmp	x25, x23, #0x0, ne  // ne = any
    eafc:	b.ne	eb54 <argp_fmtstream_point@@Base+0x594>  // b.any
    eb00:	mov	x2, x19
    eb04:	mov	x1, x23
    eb08:	mov	x0, x20
    eb0c:	bl	b4c0 <argp_fmtstream_write@plt>
    eb10:	mov	x0, x20
    eb14:	bl	ae70 <argp_fmtstream_point@plt>
    eb18:	ldr	x1, [x20, #8]
    eb1c:	cmp	x0, x1
    eb20:	b.ls	eb30 <argp_fmtstream_point@@Base+0x570>  // b.plast
    eb24:	mov	x0, x20
    eb28:	mov	w1, #0xa                   	// #10
    eb2c:	bl	a9c0 <argp_fmtstream_putc@plt>
    eb30:	mov	w28, #0x1                   	// #1
    eb34:	b	eb68 <argp_fmtstream_point@@Base+0x5a8>
    eb38:	mov	x25, x19
    eb3c:	b	ea74 <argp_fmtstream_point@@Base+0x4b4>
    eb40:	mov	x25, #0x0                   	// #0
    eb44:	b	ea3c <argp_fmtstream_point@@Base+0x47c>
    eb48:	mov	x23, x25
    eb4c:	mov	x26, #0x0                   	// #0
    eb50:	b	eadc <argp_fmtstream_point@@Base+0x51c>
    eb54:	mov	x1, x25
    eb58:	mov	x0, x20
    eb5c:	bl	ab80 <argp_fmtstream_puts@plt>
    eb60:	b	eb10 <argp_fmtstream_point@@Base+0x550>
    eb64:	mov	w28, #0x0                   	// #0
    eb68:	cmp	x25, #0x0
    eb6c:	ccmp	x25, x23, #0x4, ne  // ne = any
    eb70:	b.eq	eb7c <argp_fmtstream_point@@Base+0x5bc>  // b.none
    eb74:	mov	x0, x25
    eb78:	bl	b050 <free@plt>
    eb7c:	cmp	x23, #0x0
    eb80:	ccmp	x19, #0x0, #0x4, ne  // ne = any
    eb84:	b.eq	eb98 <argp_fmtstream_point@@Base+0x5d8>  // b.none
    eb88:	ldr	x0, [x21, #40]
    eb8c:	cbz	x0, eb98 <argp_fmtstream_point@@Base+0x5d8>
    eb90:	mov	x0, x23
    eb94:	bl	b050 <free@plt>
    eb98:	cbz	w22, ec10 <argp_fmtstream_point@@Base+0x650>
    eb9c:	ldr	x3, [x21, #40]
    eba0:	cbz	x3, ec10 <argp_fmtstream_point@@Base+0x650>
    eba4:	mov	w0, #0x4                   	// #4
    eba8:	mov	x2, x26
    ebac:	mov	x1, #0x0                   	// #0
    ebb0:	movk	w0, #0x200, lsl #16
    ebb4:	blr	x3
    ebb8:	mov	x19, x0
    ebbc:	cbz	x0, ec10 <argp_fmtstream_point@@Base+0x650>
    ebc0:	ldr	w0, [sp, #104]
    ebc4:	orr	w6, w28, w0
    ebc8:	cbz	w6, ebd8 <argp_fmtstream_point@@Base+0x618>
    ebcc:	mov	x0, x20
    ebd0:	mov	w1, #0xa                   	// #10
    ebd4:	bl	a9c0 <argp_fmtstream_putc@plt>
    ebd8:	mov	x1, x19
    ebdc:	mov	x0, x20
    ebe0:	bl	ab80 <argp_fmtstream_puts@plt>
    ebe4:	mov	x0, x19
    ebe8:	bl	b050 <free@plt>
    ebec:	mov	x0, x20
    ebf0:	bl	ae70 <argp_fmtstream_point@plt>
    ebf4:	ldr	x1, [x20, #8]
    ebf8:	cmp	x0, x1
    ebfc:	b.ls	ec0c <argp_fmtstream_point@@Base+0x64c>  // b.plast
    ec00:	mov	x0, x20
    ec04:	mov	w1, #0xa                   	// #10
    ec08:	bl	a9c0 <argp_fmtstream_putc@plt>
    ec0c:	mov	w28, w22
    ec10:	cbz	x24, ec34 <argp_fmtstream_point@@Base+0x674>
    ec14:	ldr	w0, [sp, #108]
    ec18:	eor	w19, w0, #0x1
    ec1c:	and	w19, w19, #0x1
    ec20:	ldr	x0, [x24]
    ec24:	cbz	x0, ec34 <argp_fmtstream_point@@Base+0x674>
    ec28:	cmp	w28, #0x0
    ec2c:	csinc	w1, w19, wzr, ne  // ne = any
    ec30:	cbnz	w1, ec54 <argp_fmtstream_point@@Base+0x694>
    ec34:	mov	w0, w28
    ec38:	ldp	x19, x20, [sp, #16]
    ec3c:	ldp	x21, x22, [sp, #32]
    ec40:	ldp	x23, x24, [sp, #48]
    ec44:	ldp	x25, x26, [sp, #64]
    ec48:	ldp	x27, x28, [sp, #80]
    ec4c:	ldp	x29, x30, [sp], #112
    ec50:	ret
    ec54:	ldp	w1, w4, [sp, #104]
    ec58:	mov	x5, x20
    ec5c:	mov	w2, w22
    ec60:	add	x24, x24, #0x20
    ec64:	orr	w1, w28, w1
    ec68:	cmp	w1, #0x0
    ec6c:	mov	x1, x27
    ec70:	cset	w3, ne  // ne = any
    ec74:	bl	ea00 <argp_fmtstream_point@@Base+0x440>
    ec78:	orr	w28, w28, w0
    ec7c:	b	ec20 <argp_fmtstream_point@@Base+0x660>
    ec80:	ldr	x2, [x0, #16]
    ec84:	cbnz	x2, ecb4 <argp_fmtstream_point@@Base+0x6f4>
    ec88:	ldr	x2, [x1, #16]
    ec8c:	cbnz	x2, ecb4 <argp_fmtstream_point@@Base+0x6f4>
    ec90:	ldr	w2, [x0, #24]
    ec94:	ldr	w1, [x1, #24]
    ec98:	orr	w1, w2, w1
    ec9c:	tbnz	w1, #4, ecb4 <argp_fmtstream_point@@Base+0x6f4>
    eca0:	ldr	w1, [x0, #8]
    eca4:	ldr	x0, [x3]
    eca8:	add	x2, x0, #0x1
    ecac:	str	x2, [x3]
    ecb0:	strb	w1, [x0]
    ecb4:	mov	w0, #0x0                   	// #0
    ecb8:	ret
    ecbc:	stp	x29, x30, [sp, #-112]!
    ecc0:	mov	x29, sp
    ecc4:	stp	x21, x22, [sp, #32]
    ecc8:	ldr	w21, [x0, #8]
    eccc:	stp	x19, x20, [sp, #16]
    ecd0:	stp	x23, x24, [sp, #48]
    ecd4:	stp	x25, x26, [sp, #64]
    ecd8:	stp	x27, x28, [sp, #80]
    ecdc:	cbz	w21, ed94 <argp_fmtstream_point@@Base+0x7d4>
    ece0:	mov	x19, x0
    ece4:	mov	x20, x1
    ece8:	ldr	x0, [x0, #16]
    ecec:	adrp	x24, e000 <_argp_fmtstream_update@@Base+0x204>
    ecf0:	add	x25, x29, #0x68
    ecf4:	add	x24, x24, #0xc80
    ecf8:	bl	a780 <strlen@plt>
    ecfc:	add	x0, x0, #0x10
    ed00:	and	x0, x0, #0xfffffffffffffff0
    ed04:	ldr	x22, [x19]
    ed08:	sub	sp, sp, x0
    ed0c:	mov	x23, sp
    ed10:	str	x23, [x29, #104]
    ed14:	ldr	x0, [x22, #40]
    ed18:	mov	x3, x25
    ed1c:	mov	x1, x24
    ed20:	ldr	x2, [x0, #48]
    ed24:	mov	x0, x22
    ed28:	add	x22, x22, #0x38
    ed2c:	bl	e600 <argp_fmtstream_point@@Base+0x40>
    ed30:	subs	w21, w21, #0x1
    ed34:	b.ne	ed14 <argp_fmtstream_point@@Base+0x754>  // b.any
    ed38:	ldr	x0, [x29, #104]
    ed3c:	cmp	x0, x23
    ed40:	b.ls	ed64 <argp_fmtstream_point@@Base+0x7a4>  // b.plast
    ed44:	add	x1, x0, #0x1
    ed48:	str	x1, [x29, #104]
    ed4c:	strb	wzr, [x0]
    ed50:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    ed54:	mov	x2, x23
    ed58:	add	x1, x1, #0x326
    ed5c:	mov	x0, x20
    ed60:	bl	aea0 <argp_fmtstream_printf@plt>
    ed64:	ldr	w22, [x19, #8]
    ed68:	adrp	x23, e000 <_argp_fmtstream_update@@Base+0x204>
    ed6c:	ldr	x21, [x19]
    ed70:	add	x23, x23, #0x8b4
    ed74:	cbnz	w22, edb4 <argp_fmtstream_point@@Base+0x7f4>
    ed78:	ldr	w23, [x19, #8]
    ed7c:	adrp	x24, 27000 <vasnprintf@@Base+0x1170>
    ed80:	ldr	x21, [x19]
    ed84:	adrp	x25, 27000 <vasnprintf@@Base+0x1170>
    ed88:	add	x24, x24, #0x345
    ed8c:	add	x25, x25, #0x33a
    ed90:	cbnz	w23, edd8 <argp_fmtstream_point@@Base+0x818>
    ed94:	mov	sp, x29
    ed98:	ldp	x19, x20, [sp, #16]
    ed9c:	ldp	x21, x22, [sp, #32]
    eda0:	ldp	x23, x24, [sp, #48]
    eda4:	ldp	x25, x26, [sp, #64]
    eda8:	ldp	x27, x28, [sp, #80]
    edac:	ldp	x29, x30, [sp], #112
    edb0:	ret
    edb4:	ldr	x0, [x21, #40]
    edb8:	mov	x3, x20
    edbc:	mov	x1, x23
    edc0:	sub	w22, w22, #0x1
    edc4:	ldr	x2, [x0, #48]
    edc8:	mov	x0, x21
    edcc:	add	x21, x21, #0x38
    edd0:	bl	e600 <argp_fmtstream_point@@Base+0x40>
    edd4:	b	ed74 <argp_fmtstream_point@@Base+0x7b4>
    edd8:	ldr	x0, [x21, #40]
    eddc:	ldr	x22, [x21]
    ede0:	ldr	w26, [x21, #8]
    ede4:	ldr	x27, [x0, #48]
    ede8:	mov	x19, x22
    edec:	cbnz	w26, edfc <argp_fmtstream_point@@Base+0x83c>
    edf0:	add	x21, x21, #0x38
    edf4:	sub	w23, w23, #0x1
    edf8:	b	ed90 <argp_fmtstream_point@@Base+0x7d0>
    edfc:	ldr	x2, [x19]
    ee00:	cbz	x2, ee58 <argp_fmtstream_point@@Base+0x898>
    ee04:	ldr	w0, [x19, #24]
    ee08:	tst	x0, #0x4
    ee0c:	csel	x22, x22, x19, ne  // ne = any
    ee10:	tbnz	w0, #1, ee58 <argp_fmtstream_point@@Base+0x898>
    ee14:	ldr	x1, [x19, #16]
    ee18:	ldr	w28, [x22, #24]
    ee1c:	orr	w28, w0, w28
    ee20:	cbnz	x1, ee28 <argp_fmtstream_point@@Base+0x868>
    ee24:	ldr	x1, [x22, #16]
    ee28:	tbnz	w28, #4, ee58 <argp_fmtstream_point@@Base+0x898>
    ee2c:	cbz	x1, ee6c <argp_fmtstream_point@@Base+0x8ac>
    ee30:	mov	w2, #0x5                   	// #5
    ee34:	mov	x0, x27
    ee38:	bl	b3f0 <dcgettext@plt>
    ee3c:	mov	x3, x0
    ee40:	ldr	x2, [x19]
    ee44:	tbz	w28, #0, ee64 <argp_fmtstream_point@@Base+0x8a4>
    ee48:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    ee4c:	add	x1, x1, #0x32d
    ee50:	mov	x0, x20
    ee54:	bl	aea0 <argp_fmtstream_printf@plt>
    ee58:	add	x19, x19, #0x30
    ee5c:	sub	w26, w26, #0x1
    ee60:	b	edec <argp_fmtstream_point@@Base+0x82c>
    ee64:	mov	x1, x25
    ee68:	b	ee50 <argp_fmtstream_point@@Base+0x890>
    ee6c:	mov	x1, x24
    ee70:	mov	x0, x20
    ee74:	bl	aea0 <argp_fmtstream_printf@plt>
    ee78:	b	ee58 <argp_fmtstream_point@@Base+0x898>
    ee7c:	stp	x29, x30, [sp, #-48]!
    ee80:	mov	x29, sp
    ee84:	stp	x19, x20, [sp, #16]
    ee88:	mov	x20, x0
    ee8c:	str	x21, [sp, #32]
    ee90:	cbz	x2, eed4 <argp_fmtstream_point@@Base+0x914>
    ee94:	ldr	x0, [x2, #40]
    ee98:	mov	x19, x2
    ee9c:	cbz	x0, eed4 <argp_fmtstream_point@@Base+0x914>
    eea0:	mov	w21, w1
    eea4:	mov	x0, x2
    eea8:	mov	x1, x3
    eeac:	bl	b280 <_argp_input@plt>
    eeb0:	mov	x1, x20
    eeb4:	mov	x2, x0
    eeb8:	mov	w0, w21
    eebc:	ldr	x21, [sp, #32]
    eec0:	ldr	x3, [x19, #40]
    eec4:	ldp	x19, x20, [sp, #16]
    eec8:	mov	x16, x3
    eecc:	ldp	x29, x30, [sp], #48
    eed0:	br	x16
    eed4:	mov	x0, x20
    eed8:	ldp	x19, x20, [sp, #16]
    eedc:	ldr	x21, [sp, #32]
    eee0:	ldp	x29, x30, [sp], #48
    eee4:	ret
    eee8:	stp	x29, x30, [sp, #-112]!
    eeec:	mov	x29, sp
    eef0:	stp	x21, x22, [sp, #32]
    eef4:	mov	x22, x2
    eef8:	ldr	x21, [x0, #16]
    eefc:	stp	x19, x20, [sp, #16]
    ef00:	mov	x19, x0
    ef04:	stp	x23, x24, [sp, #48]
    ef08:	mov	w20, w3
    ef0c:	mov	x24, x4
    ef10:	stp	x25, x26, [sp, #64]
    ef14:	mov	x26, x1
    ef18:	stp	x27, x28, [sp, #80]
    ef1c:	ldr	x25, [x2]
    ef20:	ldr	x23, [x0, #32]
    ef24:	cbz	x21, ef3c <argp_fmtstream_point@@Base+0x97c>
    ef28:	ldr	x0, [x0, #48]
    ef2c:	mov	x1, x21
    ef30:	mov	w2, #0x5                   	// #5
    ef34:	bl	b3f0 <dcgettext@plt>
    ef38:	mov	x21, x0
    ef3c:	mov	w1, #0x6                   	// #6
    ef40:	mov	x3, x26
    ef44:	mov	x2, x19
    ef48:	mov	x0, x21
    ef4c:	movk	w1, #0x200, lsl #16
    ef50:	bl	ee7c <argp_fmtstream_point@@Base+0x8bc>
    ef54:	mov	x27, x0
    ef58:	cbz	x0, f060 <argp_fmtstream_point@@Base+0xaa0>
    ef5c:	mov	w1, #0xa                   	// #10
    ef60:	bl	b3a0 <strchrnul@plt>
    ef64:	mov	x19, x0
    ef68:	ldrb	w0, [x0]
    ef6c:	cbz	w0, f048 <argp_fmtstream_point@@Base+0xa88>
    ef70:	ldrb	w4, [x25]
    ef74:	mov	x3, x27
    ef78:	mov	w28, #0x0                   	// #0
    ef7c:	add	x2, x19, #0x1
    ef80:	cmp	w4, w28
    ef84:	b.gt	f01c <argp_fmtstream_point@@Base+0xa5c>
    ef88:	ldr	x0, [x22]
    ef8c:	mov	w28, #0x1                   	// #1
    ef90:	add	x0, x0, #0x1
    ef94:	str	x0, [x22]
    ef98:	add	x1, x19, #0x1
    ef9c:	mov	x0, x24
    efa0:	sub	x1, x1, x3
    efa4:	str	x3, [sp, #96]
    efa8:	bl	e784 <argp_fmtstream_point@@Base+0x1c4>
    efac:	ldr	x3, [sp, #96]
    efb0:	mov	x0, x24
    efb4:	sub	x2, x19, x3
    efb8:	mov	x1, x3
    efbc:	bl	b4c0 <argp_fmtstream_write@plt>
    efc0:	cmp	x21, x27
    efc4:	b.eq	efd0 <argp_fmtstream_point@@Base+0xa10>  // b.none
    efc8:	mov	x0, x27
    efcc:	bl	b050 <free@plt>
    efd0:	cbnz	x23, f06c <argp_fmtstream_point@@Base+0xaac>
    efd4:	cmp	w20, #0x0
    efd8:	csel	w28, w28, wzr, ne  // ne = any
    efdc:	cbz	w28, eff8 <argp_fmtstream_point@@Base+0xa38>
    efe0:	ldrb	w1, [x19]
    efe4:	ldrb	w0, [x25]
    efe8:	cbz	w1, f054 <argp_fmtstream_point@@Base+0xa94>
    efec:	add	w0, w0, #0x1
    eff0:	mov	w20, #0x0                   	// #0
    eff4:	strb	w0, [x25]
    eff8:	cmp	w20, #0x0
    effc:	cset	w0, eq  // eq = none
    f000:	ldp	x19, x20, [sp, #16]
    f004:	ldp	x21, x22, [sp, #32]
    f008:	ldp	x23, x24, [sp, #48]
    f00c:	ldp	x25, x26, [sp, #64]
    f010:	ldp	x27, x28, [sp, #80]
    f014:	ldp	x29, x30, [sp], #112
    f018:	ret
    f01c:	mov	x0, x2
    f020:	mov	w1, #0xa                   	// #10
    f024:	str	x2, [sp, #96]
    f028:	add	w28, w28, #0x1
    f02c:	str	w4, [sp, #108]
    f030:	bl	b3a0 <strchrnul@plt>
    f034:	ldr	x2, [sp, #96]
    f038:	mov	x19, x0
    f03c:	ldr	w4, [sp, #108]
    f040:	mov	x3, x2
    f044:	b	ef7c <argp_fmtstream_point@@Base+0x9bc>
    f048:	mov	x3, x27
    f04c:	mov	w28, #0x0                   	// #0
    f050:	b	ef98 <argp_fmtstream_point@@Base+0x9d8>
    f054:	cbz	w0, eff8 <argp_fmtstream_point@@Base+0xa38>
    f058:	strb	wzr, [x25]
    f05c:	b	eff8 <argp_fmtstream_point@@Base+0xa38>
    f060:	cbz	x23, eff8 <argp_fmtstream_point@@Base+0xa38>
    f064:	mov	x19, #0x0                   	// #0
    f068:	mov	w28, #0x0                   	// #0
    f06c:	ldr	x0, [x23]
    f070:	cbz	x0, efd4 <argp_fmtstream_point@@Base+0xa14>
    f074:	mov	w3, w20
    f078:	mov	x4, x24
    f07c:	mov	x2, x22
    f080:	mov	x1, x26
    f084:	bl	eee8 <argp_fmtstream_point@@Base+0x928>
    f088:	cmp	w0, #0x0
    f08c:	add	x23, x23, #0x20
    f090:	cset	w20, eq  // eq = none
    f094:	b	f06c <argp_fmtstream_point@@Base+0xaac>
    f098:	stp	x29, x30, [sp, #-48]!
    f09c:	mov	x29, sp
    f0a0:	stp	x19, x20, [sp, #16]
    f0a4:	mov	x20, x0
    f0a8:	mov	x19, x2
    f0ac:	stp	x21, x22, [sp, #32]
    f0b0:	mov	x21, x1
    f0b4:	cbz	x0, f0cc <argp_fmtstream_point@@Base+0xb0c>
    f0b8:	mov	x1, x0
    f0bc:	mov	w2, #0x5                   	// #5
    f0c0:	ldr	x0, [x21, #48]
    f0c4:	bl	b3f0 <dcgettext@plt>
    f0c8:	mov	x20, x0
    f0cc:	ldr	x3, [x19, #32]
    f0d0:	mov	w1, #0x3                   	// #3
    f0d4:	mov	x2, x21
    f0d8:	mov	x0, x20
    f0dc:	movk	w1, #0x200, lsl #16
    f0e0:	bl	ee7c <argp_fmtstream_point@@Base+0x8bc>
    f0e4:	mov	x21, x0
    f0e8:	cbz	x0, f168 <argp_fmtstream_point@@Base+0xba8>
    f0ec:	ldrb	w0, [x0]
    f0f0:	cbz	w0, f15c <argp_fmtstream_point@@Base+0xb9c>
    f0f4:	ldr	x0, [x19, #16]
    f0f8:	ldr	x0, [x0]
    f0fc:	cbz	x0, f10c <argp_fmtstream_point@@Base+0xb4c>
    f100:	ldr	x0, [x19, #8]
    f104:	mov	w1, #0xa                   	// #10
    f108:	bl	a9c0 <argp_fmtstream_putc@plt>
    f10c:	adrp	x22, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
    f110:	add	x22, x22, #0x318
    f114:	ldr	x0, [x19, #8]
    f118:	ldr	w1, [x22, #24]
    f11c:	bl	e740 <argp_fmtstream_point@@Base+0x180>
    f120:	ldrsw	x1, [x22, #24]
    f124:	ldr	x0, [x19, #8]
    f128:	bl	a9a0 <argp_fmtstream_set_lmargin@plt>
    f12c:	ldrsw	x1, [x22, #24]
    f130:	ldr	x0, [x19, #8]
    f134:	bl	b5e0 <argp_fmtstream_set_wmargin@plt>
    f138:	ldr	x0, [x19, #8]
    f13c:	mov	x1, x21
    f140:	bl	ab80 <argp_fmtstream_puts@plt>
    f144:	ldr	x0, [x19, #8]
    f148:	mov	x1, #0x0                   	// #0
    f14c:	bl	a9a0 <argp_fmtstream_set_lmargin@plt>
    f150:	ldr	x0, [x19, #8]
    f154:	mov	w1, #0xa                   	// #10
    f158:	bl	a9c0 <argp_fmtstream_putc@plt>
    f15c:	ldr	x0, [x19, #16]
    f160:	mov	w1, #0x1                   	// #1
    f164:	str	w1, [x0, #8]
    f168:	cmp	x20, x21
    f16c:	b.eq	f184 <argp_fmtstream_point@@Base+0xbc4>  // b.none
    f170:	mov	x0, x21
    f174:	ldp	x19, x20, [sp, #16]
    f178:	ldp	x21, x22, [sp, #32]
    f17c:	ldp	x29, x30, [sp], #48
    f180:	b	b050 <free@plt>
    f184:	ldp	x19, x20, [sp, #16]
    f188:	ldp	x21, x22, [sp, #32]
    f18c:	ldp	x29, x30, [sp], #48
    f190:	ret
    f194:	stp	x29, x30, [sp, #-48]!
    f198:	mov	x29, sp
    f19c:	stp	x19, x20, [sp, #16]
    f1a0:	mov	x19, x1
    f1a4:	stp	x21, x22, [sp, #32]
    f1a8:	mov	w22, w0
    f1ac:	ldr	x0, [x1, #8]
    f1b0:	ldr	w1, [x1, #24]
    f1b4:	cbz	w1, f268 <argp_fmtstream_point@@Base+0xca8>
    f1b8:	ldr	x2, [x19, #16]
    f1bc:	ldr	x1, [x19]
    f1c0:	ldr	x21, [x2]
    f1c4:	ldr	w2, [x2, #8]
    f1c8:	ldr	x20, [x1, #32]
    f1cc:	cbz	w2, f1ec <argp_fmtstream_point@@Base+0xc2c>
    f1d0:	cbz	x21, f1ec <argp_fmtstream_point@@Base+0xc2c>
    f1d4:	ldr	w2, [x1, #24]
    f1d8:	ldr	w1, [x21, #24]
    f1dc:	cmp	w2, w1
    f1e0:	b.eq	f1ec <argp_fmtstream_point@@Base+0xc2c>  // b.none
    f1e4:	mov	w1, #0xa                   	// #10
    f1e8:	bl	a9c0 <argp_fmtstream_putc@plt>
    f1ec:	cbz	x20, f210 <argp_fmtstream_point@@Base+0xc50>
    f1f0:	ldr	x0, [x20]
    f1f4:	cbz	x0, f210 <argp_fmtstream_point@@Base+0xc50>
    f1f8:	ldrb	w1, [x0]
    f1fc:	cbz	w1, f210 <argp_fmtstream_point@@Base+0xc50>
    f200:	cbz	x21, f244 <argp_fmtstream_point@@Base+0xc84>
    f204:	ldr	x1, [x21, #32]
    f208:	cmp	x1, x20
    f20c:	b.ne	f230 <argp_fmtstream_point@@Base+0xc70>  // b.any
    f210:	str	wzr, [x19, #24]
    f214:	mov	w1, w22
    f218:	ldr	x0, [x19, #8]
    f21c:	ldp	x19, x20, [sp, #16]
    f220:	ldp	x21, x22, [sp, #32]
    f224:	ldp	x29, x30, [sp], #48
    f228:	b	e740 <argp_fmtstream_point@@Base+0x180>
    f22c:	ldr	x1, [x1, #16]
    f230:	cmp	x1, #0x0
    f234:	ccmp	x20, x1, #0x4, ne  // ne = any
    f238:	b.ne	f22c <argp_fmtstream_point@@Base+0xc6c>  // b.any
    f23c:	cmp	x20, x1
    f240:	b.eq	f210 <argp_fmtstream_point@@Base+0xc50>  // b.none
    f244:	ldr	x1, [x19, #8]
    f248:	mov	x2, x19
    f24c:	ldr	x21, [x1, #24]
    f250:	ldr	x1, [x20, #24]
    f254:	bl	f098 <argp_fmtstream_point@@Base+0xad8>
    f258:	ldr	x0, [x19, #8]
    f25c:	sxtw	x1, w21
    f260:	bl	b5e0 <argp_fmtstream_set_wmargin@plt>
    f264:	b	f210 <argp_fmtstream_point@@Base+0xc50>
    f268:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    f26c:	add	x1, x1, #0x34d
    f270:	bl	ab80 <argp_fmtstream_puts@plt>
    f274:	b	f214 <argp_fmtstream_point@@Base+0xc54>
    f278:	stp	x29, x30, [sp, #-64]!
    f27c:	mov	x29, sp
    f280:	stp	x21, x22, [sp, #32]
    f284:	mov	x22, x1
    f288:	ldr	w21, [x0, #8]
    f28c:	stp	x19, x20, [sp, #16]
    f290:	ldr	x19, [x0]
    f294:	str	x23, [sp, #48]
    f298:	cbnz	w21, f2b0 <argp_fmtstream_point@@Base+0xcf0>
    f29c:	ldp	x19, x20, [sp, #16]
    f2a0:	ldp	x21, x22, [sp, #32]
    f2a4:	ldr	x23, [sp, #48]
    f2a8:	ldp	x29, x30, [sp], #64
    f2ac:	ret
    f2b0:	ldr	w23, [x19, #8]
    f2b4:	ldr	x20, [x19]
    f2b8:	cbnz	w23, f2c8 <argp_fmtstream_point@@Base+0xd08>
    f2bc:	sub	w21, w21, #0x1
    f2c0:	add	x19, x19, #0x38
    f2c4:	b	f298 <argp_fmtstream_point@@Base+0xcd8>
    f2c8:	ldr	x0, [x20]
    f2cc:	cbz	x0, f2e4 <argp_fmtstream_point@@Base+0xd24>
    f2d0:	ldr	w1, [x20, #24]
    f2d4:	tbnz	w1, #1, f2e4 <argp_fmtstream_point@@Base+0xd24>
    f2d8:	mov	x1, x22
    f2dc:	bl	afa0 <strcmp@plt>
    f2e0:	cbz	w0, f2f0 <argp_fmtstream_point@@Base+0xd30>
    f2e4:	add	x20, x20, #0x30
    f2e8:	sub	w23, w23, #0x1
    f2ec:	b	f2b8 <argp_fmtstream_point@@Base+0xcf8>
    f2f0:	mov	w0, #0xffffffff            	// #-1
    f2f4:	str	w0, [x19, #24]
    f2f8:	b	f29c <argp_fmtstream_point@@Base+0xcdc>
    f2fc:	stp	x29, x30, [sp, #-144]!
    f300:	mov	x29, sp
    f304:	stp	x19, x20, [sp, #16]
    f308:	stp	x21, x22, [sp, #32]
    f30c:	stp	x23, x24, [sp, #48]
    f310:	stp	x25, x26, [sp, #64]
    f314:	mov	x25, x0
    f318:	mov	x26, x1
    f31c:	stp	x27, x28, [sp, #80]
    f320:	ldr	x20, [x0]
    f324:	ldr	x22, [x0, #32]
    f328:	mov	x0, #0x20                  	// #32
    f32c:	bl	aab0 <malloc@plt>
    f330:	cbnz	x0, f354 <argp_fmtstream_point@@Base+0xd94>
    f334:	adrp	x3, 27000 <vasnprintf@@Base+0x1170>
    f338:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    f33c:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    f340:	add	x3, x3, #0x576
    f344:	add	x1, x1, #0x350
    f348:	add	x0, x0, #0x35c
    f34c:	mov	w2, #0x1c3                 	// #451
    f350:	bl	b530 <__assert_fail@plt>
    f354:	str	wzr, [x0, #8]
    f358:	mov	x19, x0
    f35c:	str	xzr, [x0, #24]
    f360:	cbz	x20, f4a8 <argp_fmtstream_point@@Base+0xee8>
    f364:	ldr	w0, [x20, #24]
    f368:	and	w24, w0, #0x4
    f36c:	tbz	w0, #2, f414 <argp_fmtstream_point@@Base+0xe54>
    f370:	adrp	x3, 27000 <vasnprintf@@Base+0x1170>
    f374:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    f378:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    f37c:	add	x3, x3, #0x576
    f380:	add	x1, x1, #0x350
    f384:	add	x0, x0, #0x360
    f388:	mov	w2, #0x1cd                 	// #461
    f38c:	b	f350 <argp_fmtstream_point@@Base+0xd90>
    f390:	ldr	w0, [x21, #24]
    f394:	tbnz	w0, #2, f3a0 <argp_fmtstream_point@@Base+0xde0>
    f398:	add	w1, w1, #0x1
    f39c:	str	w1, [x19, #8]
    f3a0:	mov	x0, x21
    f3a4:	bl	b3e0 <_option_is_short@plt>
    f3a8:	cmp	w0, #0x0
    f3ac:	add	x21, x21, #0x30
    f3b0:	cinc	w23, w23, ne  // ne = any
    f3b4:	mov	x0, x21
    f3b8:	bl	aec0 <_option_is_end@plt>
    f3bc:	ldr	w1, [x19, #8]
    f3c0:	cbz	w0, f390 <argp_fmtstream_point@@Base+0xdd0>
    f3c4:	mov	w0, #0x38                  	// #56
    f3c8:	umull	x0, w1, w0
    f3cc:	bl	aab0 <malloc@plt>
    f3d0:	mov	x21, x0
    f3d4:	str	x21, [x19]
    f3d8:	add	w0, w23, #0x1
    f3dc:	bl	aab0 <malloc@plt>
    f3e0:	str	x0, [x19, #16]
    f3e4:	mov	x27, x0
    f3e8:	cbz	x21, f3f4 <argp_fmtstream_point@@Base+0xe34>
    f3ec:	mov	x23, x0
    f3f0:	cbnz	x0, f498 <argp_fmtstream_point@@Base+0xed8>
    f3f4:	adrp	x3, 27000 <vasnprintf@@Base+0x1170>
    f3f8:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    f3fc:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    f400:	add	x3, x3, #0x576
    f404:	add	x1, x1, #0x350
    f408:	add	x0, x0, #0x370
    f40c:	mov	w2, #0x1db                 	// #475
    f410:	b	f350 <argp_fmtstream_point@@Base+0xd90>
    f414:	mov	x21, x20
    f418:	mov	w23, #0x0                   	// #0
    f41c:	b	f3b4 <argp_fmtstream_point@@Base+0xdf4>
    f420:	str	wzr, [x21, #8]
    f424:	str	x20, [x21]
    f428:	ldr	w0, [x20, #40]
    f42c:	str	x23, [x21, #16]
    f430:	cbnz	w0, f4dc <argp_fmtstream_point@@Base+0xf1c>
    f434:	ldr	x0, [x20]
    f438:	cbnz	x0, f448 <argp_fmtstream_point@@Base+0xe88>
    f43c:	ldr	w0, [x20, #8]
    f440:	cmp	w0, #0x0
    f444:	cinc	w24, w24, eq  // eq = none
    f448:	str	w24, [x21, #24]
    f44c:	stp	x26, x25, [x21, #32]
    f450:	ldr	w0, [x21, #8]
    f454:	add	w0, w0, #0x1
    f458:	str	w0, [x21, #8]
    f45c:	mov	x0, x20
    f460:	bl	b3e0 <_option_is_short@plt>
    f464:	cbz	w0, f47c <argp_fmtstream_point@@Base+0xebc>
    f468:	ldrb	w1, [x20, #8]
    f46c:	mov	x0, x27
    f470:	cmp	x23, x0
    f474:	b.hi	f4e4 <argp_fmtstream_point@@Base+0xf24>  // b.pmore
    f478:	strb	w1, [x23], #1
    f47c:	add	x20, x20, #0x30
    f480:	mov	x0, x20
    f484:	bl	aec0 <_option_is_end@plt>
    f488:	cbnz	w0, f494 <argp_fmtstream_point@@Base+0xed4>
    f48c:	ldr	w0, [x20, #24]
    f490:	tbnz	w0, #2, f450 <argp_fmtstream_point@@Base+0xe90>
    f494:	add	x21, x21, #0x38
    f498:	mov	x0, x20
    f49c:	bl	aec0 <_option_is_end@plt>
    f4a0:	cbz	w0, f420 <argp_fmtstream_point@@Base+0xe60>
    f4a4:	strb	wzr, [x23]
    f4a8:	cbz	x22, f4bc <argp_fmtstream_point@@Base+0xefc>
    f4ac:	add	x0, x19, #0x18
    f4b0:	str	x0, [sp, #104]
    f4b4:	ldr	x21, [x22]
    f4b8:	cbnz	x21, f4f8 <argp_fmtstream_point@@Base+0xf38>
    f4bc:	mov	x0, x19
    f4c0:	ldp	x19, x20, [sp, #16]
    f4c4:	ldp	x21, x22, [sp, #32]
    f4c8:	ldp	x23, x24, [sp, #48]
    f4cc:	ldp	x25, x26, [sp, #64]
    f4d0:	ldp	x27, x28, [sp, #80]
    f4d4:	ldp	x29, x30, [sp], #144
    f4d8:	ret
    f4dc:	mov	w24, w0
    f4e0:	b	f448 <argp_fmtstream_point@@Base+0xe88>
    f4e4:	ldrb	w2, [x0]
    f4e8:	cmp	w2, w1
    f4ec:	b.eq	f47c <argp_fmtstream_point@@Base+0xebc>  // b.none
    f4f0:	add	x0, x0, #0x1
    f4f4:	b	f470 <argp_fmtstream_point@@Base+0xeb0>
    f4f8:	ldr	w24, [x22, #24]
    f4fc:	ldr	x23, [x22, #16]
    f500:	cbnz	w24, f508 <argp_fmtstream_point@@Base+0xf48>
    f504:	cbz	x23, f5b0 <argp_fmtstream_point@@Base+0xff0>
    f508:	ldr	x20, [x25, #32]
    f50c:	mov	x0, #0x30                  	// #48
    f510:	bl	aab0 <malloc@plt>
    f514:	mov	x1, x0
    f518:	sub	x20, x22, x20
    f51c:	asr	x20, x20, #5
    f520:	cbz	x0, f54c <argp_fmtstream_point@@Base+0xf8c>
    f524:	str	x23, [x0]
    f528:	stp	w20, w24, [x0, #8]
    f52c:	stp	x26, x25, [x0, #16]
    f530:	cbz	x26, f5a8 <argp_fmtstream_point@@Base+0xfe8>
    f534:	ldr	w0, [x26, #32]
    f538:	add	w0, w0, #0x1
    f53c:	str	w0, [x1, #32]
    f540:	ldr	x0, [x19, #24]
    f544:	str	x1, [x19, #24]
    f548:	str	x0, [x1, #40]
    f54c:	mov	x0, x21
    f550:	bl	f2fc <argp_fmtstream_point@@Base+0xd3c>
    f554:	mov	x27, x0
    f558:	ldr	x0, [x19, #24]
    f55c:	ldr	x1, [sp, #104]
    f560:	cbnz	x0, f5b8 <argp_fmtstream_point@@Base+0xff8>
    f564:	ldr	w24, [x27, #8]
    f568:	ldr	x0, [x27, #24]
    f56c:	str	x0, [x1]
    f570:	str	xzr, [x27, #24]
    f574:	cbz	w24, f598 <argp_fmtstream_point@@Base+0xfd8>
    f578:	ldr	w4, [x19, #8]
    f57c:	cbnz	w4, f5c4 <argp_fmtstream_point@@Base+0x1004>
    f580:	ldr	x0, [x27]
    f584:	str	x0, [x19]
    f588:	ldr	x0, [x27, #16]
    f58c:	str	w24, [x19, #8]
    f590:	str	x0, [x19, #16]
    f594:	str	wzr, [x27, #8]
    f598:	mov	x0, x27
    f59c:	add	x22, x22, #0x20
    f5a0:	bl	e954 <argp_fmtstream_point@@Base+0x394>
    f5a4:	b	f4b4 <argp_fmtstream_point@@Base+0xef4>
    f5a8:	mov	w0, #0x0                   	// #0
    f5ac:	b	f53c <argp_fmtstream_point@@Base+0xf7c>
    f5b0:	mov	x1, x26
    f5b4:	b	f54c <argp_fmtstream_point@@Base+0xf8c>
    f5b8:	add	x1, x0, #0x28
    f5bc:	ldr	x0, [x0, #40]
    f5c0:	b	f560 <argp_fmtstream_point@@Base+0xfa0>
    f5c4:	add	w0, w24, w4
    f5c8:	mov	w1, #0x38                  	// #56
    f5cc:	str	w0, [sp, #136]
    f5d0:	str	w4, [sp, #112]
    f5d4:	umull	x0, w0, w1
    f5d8:	bl	aab0 <malloc@plt>
    f5dc:	mov	x23, x0
    f5e0:	ldr	x28, [x19, #16]
    f5e4:	mov	x0, x28
    f5e8:	bl	a780 <strlen@plt>
    f5ec:	mov	w21, w0
    f5f0:	ldr	x0, [x27, #16]
    f5f4:	str	x0, [sp, #96]
    f5f8:	bl	a780 <strlen@plt>
    f5fc:	add	x0, x0, #0x1
    f600:	add	x0, x0, x21
    f604:	bl	aab0 <malloc@plt>
    f608:	cmp	x23, #0x0
    f60c:	ldr	w4, [sp, #112]
    f610:	mov	x20, x0
    f614:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    f618:	b.ne	f640 <argp_fmtstream_point@@Base+0x1080>  // b.any
    f61c:	adrp	x3, 27000 <vasnprintf@@Base+0x1170>
    f620:	add	x3, x3, #0x576
    f624:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    f628:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    f62c:	add	x3, x3, #0x9
    f630:	add	x1, x1, #0x350
    f634:	add	x0, x0, #0x393
    f638:	mov	w2, #0x370                 	// #880
    f63c:	b	f350 <argp_fmtstream_point@@Base+0xd90>
    f640:	mov	w0, #0x38                  	// #56
    f644:	str	w4, [sp, #120]
    f648:	ldr	x5, [x19]
    f64c:	umull	x2, w4, w0
    f650:	mov	x0, x23
    f654:	str	x5, [sp, #112]
    f658:	mov	x1, x5
    f65c:	bl	b0b0 <mempcpy@plt>
    f660:	mov	w1, #0x38                  	// #56
    f664:	umull	x2, w24, w1
    f668:	ldr	x1, [x27]
    f66c:	bl	a6f0 <memcpy@plt>
    f670:	mov	x2, x21
    f674:	mov	x1, x28
    f678:	mov	x0, x20
    f67c:	bl	a6f0 <memcpy@plt>
    f680:	ldr	w4, [sp, #120]
    f684:	mov	x1, x23
    f688:	ldr	x5, [sp, #112]
    f68c:	mov	w2, w4
    f690:	ldr	x0, [x1, #16]
    f694:	subs	w2, w2, #0x1
    f698:	add	x1, x1, #0x38
    f69c:	sub	x0, x0, x28
    f6a0:	add	x0, x20, x0
    f6a4:	stur	x0, [x1, #-40]
    f6a8:	b.ne	f690 <argp_fmtstream_point@@Base+0x10d0>  // b.any
    f6ac:	sub	w4, w4, #0x1
    f6b0:	mov	x28, #0x38                  	// #56
    f6b4:	add	x1, x20, x21
    f6b8:	mov	x21, x1
    f6bc:	madd	x28, x4, x28, x28
    f6c0:	add	x28, x23, x28
    f6c4:	ldr	w6, [x28, #8]
    f6c8:	ldr	x2, [x28]
    f6cc:	str	x21, [x28, #16]
    f6d0:	cbnz	w6, f708 <argp_fmtstream_point@@Base+0x1148>
    f6d4:	add	x28, x28, #0x38
    f6d8:	subs	w24, w24, #0x1
    f6dc:	b.ne	f6c4 <argp_fmtstream_point@@Base+0x1104>  // b.any
    f6e0:	strb	wzr, [x21]
    f6e4:	mov	x0, x5
    f6e8:	bl	b050 <free@plt>
    f6ec:	ldr	x0, [x19, #16]
    f6f0:	bl	b050 <free@plt>
    f6f4:	str	x23, [x19]
    f6f8:	ldr	w0, [sp, #136]
    f6fc:	str	w0, [x19, #8]
    f700:	str	x20, [x19, #16]
    f704:	b	f598 <argp_fmtstream_point@@Base+0xfd8>
    f708:	mov	x0, x2
    f70c:	stp	x2, x5, [sp, #112]
    f710:	str	x1, [sp, #128]
    f714:	str	w6, [sp, #140]
    f718:	bl	b3e0 <_option_is_short@plt>
    f71c:	ldr	w6, [sp, #140]
    f720:	ldp	x2, x5, [sp, #112]
    f724:	ldr	x1, [sp, #128]
    f728:	cbz	w0, f770 <argp_fmtstream_point@@Base+0x11b0>
    f72c:	ldr	x0, [sp, #96]
    f730:	ldrb	w4, [x0]
    f734:	ldr	w0, [x2, #8]
    f738:	cmp	w4, w0
    f73c:	b.ne	f770 <argp_fmtstream_point@@Base+0x11b0>  // b.any
    f740:	mov	x0, x20
    f744:	b	f758 <argp_fmtstream_point@@Base+0x1198>
    f748:	ldrb	w7, [x0]
    f74c:	cmp	w7, w4
    f750:	b.eq	f764 <argp_fmtstream_point@@Base+0x11a4>  // b.none
    f754:	add	x0, x0, #0x1
    f758:	cmp	x1, x0
    f75c:	b.hi	f748 <argp_fmtstream_point@@Base+0x1188>  // b.pmore
    f760:	strb	w4, [x21], #1
    f764:	ldr	x0, [sp, #96]
    f768:	add	x0, x0, #0x1
    f76c:	str	x0, [sp, #96]
    f770:	add	x2, x2, #0x30
    f774:	sub	w6, w6, #0x1
    f778:	b	f6d0 <argp_fmtstream_point@@Base+0x1110>
    f77c:	stp	x29, x30, [sp, #-80]!
    f780:	mov	x29, sp
    f784:	stp	x19, x20, [sp, #16]
    f788:	mov	x19, x1
    f78c:	ldr	w4, [x0, #24]
    f790:	ldr	x3, [x0, #32]
    f794:	stp	x21, x22, [sp, #32]
    f798:	ldr	w1, [x1, #24]
    f79c:	ldr	x2, [x19, #32]
    f7a0:	str	x23, [sp, #48]
    f7a4:	cmp	x3, x2
    f7a8:	b.eq	f850 <argp_fmtstream_point@@Base+0x1290>  // b.none
    f7ac:	cbnz	x3, f7cc <argp_fmtstream_point@@Base+0x120c>
    f7b0:	mov	x0, x2
    f7b4:	ldr	x2, [x2, #16]
    f7b8:	cbnz	x2, f7b0 <argp_fmtstream_point@@Base+0x11f0>
    f7bc:	ldr	w1, [x0, #12]
    f7c0:	mov	w2, #0xffffffff            	// #-1
    f7c4:	mov	w0, w4
    f7c8:	b	f83c <argp_fmtstream_point@@Base+0x127c>
    f7cc:	cbz	x2, f828 <argp_fmtstream_point@@Base+0x1268>
    f7d0:	ldr	w0, [x2, #32]
    f7d4:	ldr	w4, [x3, #32]
    f7d8:	mov	x1, x3
    f7dc:	ldr	x3, [x3, #16]
    f7e0:	cmp	w4, w0
    f7e4:	b.gt	f7d4 <argp_fmtstream_point@@Base+0x1214>
    f7e8:	ldr	w3, [x2, #32]
    f7ec:	mov	x0, x2
    f7f0:	ldr	x2, [x2, #16]
    f7f4:	cmp	w4, w3
    f7f8:	b.lt	f7e8 <argp_fmtstream_point@@Base+0x1228>  // b.tstop
    f7fc:	mov	x3, x1
    f800:	mov	x4, x0
    f804:	ldr	x1, [x1, #16]
    f808:	ldr	x0, [x0, #16]
    f80c:	cmp	x1, x0
    f810:	b.ne	f7fc <argp_fmtstream_point@@Base+0x123c>  // b.any
    f814:	ldp	w2, w1, [x4, #8]
    f818:	ldr	w0, [x3, #8]
    f81c:	sub	w2, w2, w0
    f820:	ldr	w0, [x3, #12]
    f824:	b	f83c <argp_fmtstream_point@@Base+0x127c>
    f828:	mov	x0, x3
    f82c:	ldr	x3, [x3, #16]
    f830:	cbnz	x3, f828 <argp_fmtstream_point@@Base+0x1268>
    f834:	ldr	w0, [x0, #12]
    f838:	mov	w2, #0x1                   	// #1
    f83c:	ldp	x19, x20, [sp, #16]
    f840:	ldp	x21, x22, [sp, #32]
    f844:	ldr	x23, [sp, #48]
    f848:	ldp	x29, x30, [sp], #80
    f84c:	b	e714 <argp_fmtstream_point@@Base+0x154>
    f850:	cmp	w4, w1
    f854:	b.ne	f980 <argp_fmtstream_point@@Base+0x13c0>  // b.any
    f858:	ldr	x1, [x0, #40]
    f85c:	adrp	x20, e000 <_argp_fmtstream_update@@Base+0x204>
    f860:	add	x20, x20, #0x6bc
    f864:	mov	x21, x0
    f868:	mov	x3, #0x0                   	// #0
    f86c:	ldr	x2, [x1, #48]
    f870:	mov	x1, x20
    f874:	bl	e600 <argp_fmtstream_point@@Base+0x40>
    f878:	mov	w22, w0
    f87c:	ldr	x0, [x19, #40]
    f880:	mov	x1, x20
    f884:	mov	x3, #0x0                   	// #0
    f888:	ldr	x2, [x0, #48]
    f88c:	mov	x0, x19
    f890:	bl	e600 <argp_fmtstream_point@@Base+0x40>
    f894:	mov	w23, w0
    f898:	ldr	x0, [x21]
    f89c:	ldr	w5, [x0, #24]
    f8a0:	ldr	x0, [x19]
    f8a4:	and	w5, w5, #0x8
    f8a8:	ldr	w20, [x0, #24]
    f8ac:	mov	x0, x21
    f8b0:	bl	e6e4 <argp_fmtstream_point@@Base+0x124>
    f8b4:	mov	x4, x0
    f8b8:	mov	x0, x19
    f8bc:	str	x4, [sp, #64]
    f8c0:	and	w20, w20, #0x8
    f8c4:	bl	e6e4 <argp_fmtstream_point@@Base+0x124>
    f8c8:	str	x0, [sp, #72]
    f8cc:	cbz	w5, f988 <argp_fmtstream_point@@Base+0x13c8>
    f8d0:	cbz	x4, f988 <argp_fmtstream_point@@Base+0x13c8>
    f8d4:	add	x0, sp, #0x40
    f8d8:	bl	e844 <argp_fmtstream_point@@Base+0x284>
    f8dc:	cmp	w0, #0x0
    f8e0:	cset	w19, ne  // ne = any
    f8e4:	cbz	w20, f900 <argp_fmtstream_point@@Base+0x1340>
    f8e8:	ldr	x0, [sp, #72]
    f8ec:	cbz	x0, f928 <argp_fmtstream_point@@Base+0x1368>
    f8f0:	add	x0, sp, #0x48
    f8f4:	bl	e844 <argp_fmtstream_point@@Base+0x284>
    f8f8:	cmp	w0, #0x0
    f8fc:	cset	w20, ne  // ne = any
    f900:	cmp	w20, w19
    f904:	b.eq	f98c <argp_fmtstream_point@@Base+0x13cc>  // b.none
    f908:	sub	w0, w19, w20
    f90c:	ldp	x19, x20, [sp, #16]
    f910:	ldp	x21, x22, [sp, #32]
    f914:	ldr	x23, [sp, #48]
    f918:	ldp	x29, x30, [sp], #80
    f91c:	ret
    f920:	mov	w19, #0x0                   	// #0
    f924:	b	f8e8 <argp_fmtstream_point@@Base+0x1328>
    f928:	mov	w20, #0x0                   	// #0
    f92c:	b	f900 <argp_fmtstream_point@@Base+0x1340>
    f930:	cbnz	w22, f940 <argp_fmtstream_point@@Base+0x1380>
    f934:	ldr	x0, [sp, #64]
    f938:	cbz	x0, f978 <argp_fmtstream_point@@Base+0x13b8>
    f93c:	ldrb	w22, [x0]
    f940:	cbnz	w23, f950 <argp_fmtstream_point@@Base+0x1390>
    f944:	ldr	x0, [sp, #72]
    f948:	cbz	x0, f950 <argp_fmtstream_point@@Base+0x1390>
    f94c:	ldrb	w23, [x0]
    f950:	bl	a9d0 <__ctype_tolower_loc@plt>
    f954:	ldr	x2, [x0]
    f958:	ubfiz	x1, x23, #2, #8
    f95c:	ubfiz	x0, x22, #2, #8
    f960:	ldr	w1, [x2, x1]
    f964:	ldr	w0, [x2, x0]
    f968:	subs	w0, w0, w1
    f96c:	b.ne	f90c <argp_fmtstream_point@@Base+0x134c>  // b.any
    f970:	sub	w0, w23, w22
    f974:	b	f90c <argp_fmtstream_point@@Base+0x134c>
    f978:	mov	w22, #0x0                   	// #0
    f97c:	b	f940 <argp_fmtstream_point@@Base+0x1380>
    f980:	mov	w2, #0x0                   	// #0
    f984:	b	f7c4 <argp_fmtstream_point@@Base+0x1204>
    f988:	cbnz	w20, f920 <argp_fmtstream_point@@Base+0x1360>
    f98c:	and	w22, w22, #0xff
    f990:	and	w23, w23, #0xff
    f994:	orr	w0, w23, w22
    f998:	cbnz	w0, f930 <argp_fmtstream_point@@Base+0x1370>
    f99c:	ldr	x0, [sp, #64]
    f9a0:	cbz	x0, f934 <argp_fmtstream_point@@Base+0x1374>
    f9a4:	ldr	x1, [sp, #72]
    f9a8:	cbz	x1, f934 <argp_fmtstream_point@@Base+0x1374>
    f9ac:	bl	ad40 <strcasecmp@plt>
    f9b0:	b	f90c <argp_fmtstream_point@@Base+0x134c>

000000000000f9b4 <argp_failure@@Base>:
    f9b4:	stp	x29, x30, [sp, #-464]!
    f9b8:	mov	x29, sp
    f9bc:	stp	x19, x20, [sp, #16]
    f9c0:	mov	x20, x0
    f9c4:	stp	x21, x22, [sp, #32]
    f9c8:	mov	w22, w1
    f9cc:	mov	w21, w2
    f9d0:	str	x23, [sp, #48]
    f9d4:	mov	x23, x3
    f9d8:	str	q0, [sp, #304]
    f9dc:	str	q1, [sp, #320]
    f9e0:	str	q2, [sp, #336]
    f9e4:	str	q3, [sp, #352]
    f9e8:	str	q4, [sp, #368]
    f9ec:	str	q5, [sp, #384]
    f9f0:	str	q6, [sp, #400]
    f9f4:	str	q7, [sp, #416]
    f9f8:	stp	x4, x5, [sp, #432]
    f9fc:	stp	x6, x7, [sp, #448]
    fa00:	cbz	x0, fb10 <argp_failure@@Base+0x15c>
    fa04:	ldr	w0, [x0, #28]
    fa08:	tbnz	w0, #1, fb30 <argp_failure@@Base+0x17c>
    fa0c:	ldr	x19, [x20, #72]
    fa10:	cbz	x19, fb30 <argp_failure@@Base+0x17c>
    fa14:	mov	x0, x19
    fa18:	bl	a800 <flockfile@plt>
    fa1c:	cbz	x20, fb20 <argp_failure@@Base+0x16c>
    fa20:	ldr	x0, [x20, #64]
    fa24:	mov	x1, x19
    fa28:	bl	b460 <fputs_unlocked@plt>
    fa2c:	cbz	x23, fa88 <argp_failure@@Base+0xd4>
    fa30:	add	x0, sp, #0x1d0
    fa34:	stp	x0, x0, [sp, #104]
    fa38:	add	x0, sp, #0x1b0
    fa3c:	str	x0, [sp, #120]
    fa40:	mov	w0, #0xffffffe0            	// #-32
    fa44:	str	w0, [sp, #128]
    fa48:	mov	w0, #0xffffff80            	// #-128
    fa4c:	mov	x1, x19
    fa50:	str	w0, [sp, #132]
    fa54:	mov	w0, #0x3a                  	// #58
    fa58:	bl	aa10 <putc_unlocked@plt>
    fa5c:	mov	x1, x19
    fa60:	mov	w0, #0x20                  	// #32
    fa64:	bl	aa10 <putc_unlocked@plt>
    fa68:	ldp	x0, x1, [sp, #104]
    fa6c:	stp	x0, x1, [sp, #64]
    fa70:	add	x2, sp, #0x40
    fa74:	ldp	x0, x1, [sp, #120]
    fa78:	stp	x0, x1, [sp, #80]
    fa7c:	mov	x1, x23
    fa80:	mov	x0, x19
    fa84:	bl	b510 <vfprintf@plt>
    fa88:	cbz	w21, fae4 <argp_failure@@Base+0x130>
    fa8c:	mov	x1, x19
    fa90:	mov	w0, #0x3a                  	// #58
    fa94:	bl	aa10 <putc_unlocked@plt>
    fa98:	mov	x1, x19
    fa9c:	mov	w0, #0x20                  	// #32
    faa0:	bl	aa10 <putc_unlocked@plt>
    faa4:	add	x1, sp, #0x68
    faa8:	mov	w0, w21
    faac:	mov	x2, #0xc8                  	// #200
    fab0:	bl	aca0 <strerror_r@plt>
    fab4:	cbnz	x0, fadc <argp_failure@@Base+0x128>
    fab8:	mov	w0, w21
    fabc:	bl	adb0 <strerror@plt>
    fac0:	cbnz	x0, fadc <argp_failure@@Base+0x128>
    fac4:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    fac8:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    facc:	add	x1, x1, #0x3ac
    fad0:	add	x0, x0, #0x2ee
    fad4:	mov	w2, #0x5                   	// #5
    fad8:	bl	b3f0 <dcgettext@plt>
    fadc:	mov	x1, x19
    fae0:	bl	b460 <fputs_unlocked@plt>
    fae4:	mov	x1, x19
    fae8:	mov	w0, #0xa                   	// #10
    faec:	bl	aa10 <putc_unlocked@plt>
    faf0:	mov	x0, x19
    faf4:	bl	ab20 <funlockfile@plt>
    faf8:	cbz	w22, fb30 <argp_failure@@Base+0x17c>
    fafc:	cbz	x20, fb08 <argp_failure@@Base+0x154>
    fb00:	ldr	w0, [x20, #28]
    fb04:	tbnz	w0, #5, fb30 <argp_failure@@Base+0x17c>
    fb08:	mov	w0, w22
    fb0c:	bl	a7b0 <exit@plt>
    fb10:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    fb14:	ldr	x0, [x0, #3816]
    fb18:	ldr	x19, [x0]
    fb1c:	b	fa10 <argp_failure@@Base+0x5c>
    fb20:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
    fb24:	ldr	x0, [x0, #4008]
    fb28:	ldr	x0, [x0]
    fb2c:	b	fa24 <argp_failure@@Base+0x70>
    fb30:	ldp	x19, x20, [sp, #16]
    fb34:	ldp	x21, x22, [sp, #32]
    fb38:	ldr	x23, [sp, #48]
    fb3c:	ldp	x29, x30, [sp], #464
    fb40:	ret
    fb44:	stp	x29, x30, [sp, #-240]!
    fb48:	mov	x29, sp
    fb4c:	stp	x19, x20, [sp, #16]
    fb50:	stp	x21, x22, [sp, #32]
    fb54:	stp	x23, x24, [sp, #48]
    fb58:	stp	x25, x26, [sp, #64]
    fb5c:	stp	x27, x28, [sp, #80]
    fb60:	str	x4, [x29, #168]
    fb64:	cbz	x2, ff28 <argp_failure@@Base+0x574>
    fb68:	adrp	x21, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
    fb6c:	add	x19, x21, #0x318
    fb70:	mov	x27, x0
    fb74:	mov	x20, x1
    fb78:	mov	x0, x2
    fb7c:	mov	x26, x2
    fb80:	mov	w25, w3
    fb84:	bl	a800 <flockfile@plt>
    fb88:	ldr	w0, [x19, #36]
    fb8c:	cbnz	w0, ff00 <argp_failure@@Base+0x54c>
    fb90:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    fb94:	add	x0, x0, #0x3c1
    fb98:	bl	b570 <getenv@plt>
    fb9c:	mov	x22, x0
    fba0:	ldp	x0, x1, [x19]
    fba4:	stp	x0, x1, [x29, #200]
    fba8:	ldp	x0, x1, [x19, #16]
    fbac:	stp	x0, x1, [x29, #216]
    fbb0:	ldr	x0, [x19, #32]
    fbb4:	str	x0, [x29, #232]
    fbb8:	cbz	x22, ff00 <argp_failure@@Base+0x54c>
    fbbc:	adrp	x23, 27000 <vasnprintf@@Base+0x1170>
    fbc0:	cmp	x20, #0x0
    fbc4:	add	x24, x23, #0x2ee
    fbc8:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    fbcc:	add	x0, x0, #0x576
    fbd0:	csel	x24, x24, xzr, ne  // ne = any
    fbd4:	add	x0, x0, #0xa4
    fbd8:	stp	x0, x23, [x29, #144]
    fbdc:	add	x0, x29, #0xc8
    fbe0:	str	x0, [x29, #136]
    fbe4:	ldrb	w0, [x22]
    fbe8:	cbz	w0, fe50 <argp_failure@@Base+0x49c>
    fbec:	bl	afc0 <__ctype_b_loc@plt>
    fbf0:	ldr	x28, [x0]
    fbf4:	b	fbfc <argp_failure@@Base+0x248>
    fbf8:	add	x22, x22, #0x1
    fbfc:	ldrb	w0, [x22]
    fc00:	ldrb	w1, [x22]
    fc04:	ldrh	w0, [x28, x0, lsl #1]
    fc08:	tbnz	w0, #13, fbf8 <argp_failure@@Base+0x244>
    fc0c:	tbz	w0, #10, fe14 <argp_failure@@Base+0x460>
    fc10:	mov	x23, x22
    fc14:	b	fc1c <argp_failure@@Base+0x268>
    fc18:	add	x23, x23, #0x1
    fc1c:	ldrb	w2, [x23]
    fc20:	ldrb	w0, [x23]
    fc24:	ldrh	w2, [x28, x2, lsl #1]
    fc28:	tbnz	w2, #3, fc18 <argp_failure@@Base+0x264>
    fc2c:	cmp	w0, #0x2d
    fc30:	b.eq	fc18 <argp_failure@@Base+0x264>  // b.none
    fc34:	cmp	w0, #0x5f
    fc38:	b.eq	fc18 <argp_failure@@Base+0x264>  // b.none
    fc3c:	sub	x19, x23, x22
    fc40:	ldrb	w2, [x23]
    fc44:	ldrb	w0, [x23]
    fc48:	ldrh	w2, [x28, x2, lsl #1]
    fc4c:	tbnz	w2, #13, fcac <argp_failure@@Base+0x2f8>
    fc50:	cmp	w0, #0x2c
    fc54:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    fc58:	b.eq	fcb4 <argp_failure@@Base+0x300>  // b.none
    fc5c:	cmp	w0, #0x3d
    fc60:	b.ne	fc74 <argp_failure@@Base+0x2c0>  // b.any
    fc64:	ldrb	w0, [x23, #1]
    fc68:	add	x23, x23, #0x1
    fc6c:	ldrh	w0, [x28, x0, lsl #1]
    fc70:	tbnz	w0, #13, fc64 <argp_failure@@Base+0x2b0>
    fc74:	ldrb	w0, [x23]
    fc78:	ldrh	w0, [x28, x0, lsl #1]
    fc7c:	tbz	w0, #11, fde0 <argp_failure@@Base+0x42c>
    fc80:	mov	x0, x23
    fc84:	bl	aa50 <atoi@plt>
    fc88:	mov	w4, w0
    fc8c:	ldrb	w0, [x23, #1]!
    fc90:	ldrh	w0, [x28, x0, lsl #1]
    fc94:	tbnz	w0, #11, fc8c <argp_failure@@Base+0x2d8>
    fc98:	ldrb	w0, [x23]
    fc9c:	ldrh	w0, [x28, x0, lsl #1]
    fca0:	tbnz	w0, #13, fdcc <argp_failure@@Base+0x418>
    fca4:	mov	w3, #0x0                   	// #0
    fca8:	b	fce4 <argp_failure@@Base+0x330>
    fcac:	add	x23, x23, #0x1
    fcb0:	b	fc40 <argp_failure@@Base+0x28c>
    fcb4:	cmp	w1, #0x6e
    fcb8:	b.ne	fdd4 <argp_failure@@Base+0x420>  // b.any
    fcbc:	ldrb	w0, [x22, #1]
    fcc0:	cmp	w0, #0x6f
    fcc4:	b.ne	fdd4 <argp_failure@@Base+0x420>  // b.any
    fcc8:	ldrb	w0, [x22, #2]
    fccc:	cmp	w0, #0x2d
    fcd0:	b.ne	fdd4 <argp_failure@@Base+0x420>  // b.any
    fcd4:	add	x22, x22, #0x3
    fcd8:	sub	x19, x19, #0x3
    fcdc:	mov	w4, #0x0                   	// #0
    fce0:	mov	w3, #0x1                   	// #1
    fce4:	mov	x0, #0x9                   	// #9
    fce8:	str	x0, [x29, #160]
    fcec:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    fcf0:	add	x7, x0, #0x576
    fcf4:	add	x28, x7, #0x14
    fcf8:	mov	x0, x28
    fcfc:	str	w3, [x29, #120]
    fd00:	str	w4, [x29, #128]
    fd04:	bl	a780 <strlen@plt>
    fd08:	ldr	w3, [x29, #120]
    fd0c:	cmp	x0, x19
    fd10:	ldr	w4, [x29, #128]
    fd14:	b.ne	fdfc <argp_failure@@Base+0x448>  // b.any
    fd18:	mov	x2, x19
    fd1c:	mov	x1, x28
    fd20:	mov	x0, x22
    fd24:	str	w3, [x29, #120]
    fd28:	str	w4, [x29, #128]
    fd2c:	bl	abd0 <strncmp@plt>
    fd30:	ldr	w3, [x29, #120]
    fd34:	ldr	w4, [x29, #128]
    fd38:	cbnz	w0, fdfc <argp_failure@@Base+0x448>
    fd3c:	cbz	w3, fdec <argp_failure@@Base+0x438>
    fd40:	ldrb	w0, [x28, #14]
    fd44:	cbnz	w0, fdec <argp_failure@@Base+0x438>
    fd48:	mov	w2, #0x5                   	// #5
    fd4c:	mov	x0, x24
    fd50:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    fd54:	add	x1, x1, #0x3cf
    fd58:	bl	b3f0 <dcgettext@plt>
    fd5c:	mov	x3, x0
    fd60:	mov	x5, x22
    fd64:	mov	w4, w19
    fd68:	mov	x0, x20
    fd6c:	mov	w2, #0x0                   	// #0
    fd70:	mov	w1, #0x0                   	// #0
    fd74:	bl	ab50 <argp_failure@plt>
    fd78:	ldr	x0, [x29, #144]
    fd7c:	cmp	x28, x0
    fd80:	b.ne	fdb4 <argp_failure@@Base+0x400>  // b.any
    fd84:	mov	w2, #0x5                   	// #5
    fd88:	mov	x0, x24
    fd8c:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    fd90:	add	x1, x1, #0x3fe
    fd94:	bl	b3f0 <dcgettext@plt>
    fd98:	mov	x3, x0
    fd9c:	mov	x5, x22
    fda0:	mov	w4, w19
    fda4:	mov	x0, x20
    fda8:	mov	w2, #0x0                   	// #0
    fdac:	mov	w1, #0x0                   	// #0
    fdb0:	bl	ab50 <argp_failure@plt>
    fdb4:	ldrb	w0, [x23]
    fdb8:	cmp	w0, #0x2c
    fdbc:	b.ne	fdc4 <argp_failure@@Base+0x410>  // b.any
    fdc0:	add	x23, x23, #0x1
    fdc4:	mov	x22, x23
    fdc8:	b	fbe4 <argp_failure@@Base+0x230>
    fdcc:	add	x23, x23, #0x1
    fdd0:	b	fc98 <argp_failure@@Base+0x2e4>
    fdd4:	mov	w3, #0x1                   	// #1
    fdd8:	mov	w4, w3
    fddc:	b	fce4 <argp_failure@@Base+0x330>
    fde0:	mov	w3, #0x0                   	// #0
    fde4:	mov	w4, #0x0                   	// #0
    fde8:	b	fce4 <argp_failure@@Base+0x330>
    fdec:	ldrb	w0, [x28, #15]
    fdf0:	ldr	x1, [x29, #136]
    fdf4:	str	w4, [x1, x0]
    fdf8:	b	fd78 <argp_failure@@Base+0x3c4>
    fdfc:	ldr	x0, [x29, #160]
    fe00:	add	x28, x28, #0x10
    fe04:	subs	x0, x0, #0x1
    fe08:	str	x0, [x29, #160]
    fe0c:	b.ne	fcf8 <argp_failure@@Base+0x344>  // b.any
    fe10:	b	fd78 <argp_failure@@Base+0x3c4>
    fe14:	cbz	w1, fe9c <argp_failure@@Base+0x4e8>
    fe18:	ldr	x0, [x29, #152]
    fe1c:	cmp	x20, #0x0
    fe20:	mov	w2, #0x5                   	// #5
    fe24:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    fe28:	add	x0, x0, #0x2ee
    fe2c:	add	x1, x1, #0x424
    fe30:	csel	x0, x0, xzr, ne  // ne = any
    fe34:	bl	b3f0 <dcgettext@plt>
    fe38:	mov	x4, x22
    fe3c:	mov	x3, x0
    fe40:	mov	w2, #0x0                   	// #0
    fe44:	mov	x0, x20
    fe48:	mov	w1, #0x0                   	// #0
    fe4c:	bl	ab50 <argp_failure@plt>
    fe50:	adrp	x19, 27000 <vasnprintf@@Base+0x1170>
    fe54:	ldr	w2, [x29, #232]
    fe58:	add	x19, x19, #0x576
    fe5c:	add	x3, x29, #0xc8
    fe60:	add	x19, x19, #0x14
    fe64:	mov	x1, #0x9                   	// #9
    fe68:	add	x19, x19, #0x10
    fe6c:	subs	x1, x1, #0x1
    fe70:	b.ne	fea4 <argp_failure@@Base+0x4f0>  // b.any
    fe74:	add	x0, x21, #0x318
    fe78:	ldp	x2, x3, [x29, #200]
    fe7c:	ldr	x1, [x29, #232]
    fe80:	stp	x2, x3, [x0]
    fe84:	str	x1, [x0, #32]
    fe88:	mov	w1, #0x1                   	// #1
    fe8c:	ldp	x2, x3, [x29, #216]
    fe90:	stp	x2, x3, [x0, #16]
    fe94:	str	w1, [x0, #36]
    fe98:	b	ff00 <argp_failure@@Base+0x54c>
    fe9c:	mov	x23, x22
    fea0:	b	fdc4 <argp_failure@@Base+0x410>
    fea4:	ldrb	w0, [x19, #14]
    fea8:	cbnz	w0, fe68 <argp_failure@@Base+0x4b4>
    feac:	ldrb	w0, [x19, #15]
    feb0:	cmp	w0, #0x20
    feb4:	b.eq	fe68 <argp_failure@@Base+0x4b4>  // b.none
    feb8:	and	x0, x0, #0xff
    febc:	ldr	w0, [x3, x0]
    fec0:	cmp	w0, w2
    fec4:	b.lt	fe68 <argp_failure@@Base+0x4b4>  // b.tstop
    fec8:	ldr	x0, [x29, #152]
    fecc:	mov	w2, #0x5                   	// #5
    fed0:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    fed4:	add	x1, x1, #0x441
    fed8:	add	x0, x0, #0x2ee
    fedc:	bl	b3f0 <dcgettext@plt>
    fee0:	adrp	x4, 27000 <vasnprintf@@Base+0x1170>
    fee4:	mov	x3, x0
    fee8:	mov	x5, x19
    feec:	add	x4, x4, #0x475
    fef0:	mov	x0, x20
    fef4:	mov	w2, #0x0                   	// #0
    fef8:	mov	w1, #0x0                   	// #0
    fefc:	bl	ab50 <argp_failure@plt>
    ff00:	add	x0, x21, #0x318
    ff04:	mov	x3, #0x0                   	// #0
    ff08:	mov	x1, #0x0                   	// #0
    ff0c:	ldrsw	x2, [x0, #32]
    ff10:	mov	x0, x26
    ff14:	bl	b070 <argp_make_fmtstream@plt>
    ff18:	mov	x19, x0
    ff1c:	cbnz	x0, ff48 <argp_failure@@Base+0x594>
    ff20:	mov	x0, x26
    ff24:	bl	ab20 <funlockfile@plt>
    ff28:	mov	sp, x29
    ff2c:	ldp	x19, x20, [sp, #16]
    ff30:	ldp	x21, x22, [sp, #32]
    ff34:	ldp	x23, x24, [sp, #48]
    ff38:	ldp	x25, x26, [sp, #64]
    ff3c:	ldp	x27, x28, [sp, #80]
    ff40:	ldp	x29, x30, [sp], #240
    ff44:	ret
    ff48:	mov	w0, #0xb                   	// #11
    ff4c:	tst	w25, w0
    ff50:	b.eq	102c4 <argp_failure@@Base+0x910>  // b.none
    ff54:	mov	x1, #0x0                   	// #0
    ff58:	mov	x0, x27
    ff5c:	bl	f2fc <argp_fmtstream_point@@Base+0xd3c>
    ff60:	mov	x24, x0
    ff64:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    ff68:	add	x1, x1, #0x47d
    ff6c:	bl	f278 <argp_fmtstream_point@@Base+0xcb8>
    ff70:	mov	x0, x24
    ff74:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
    ff78:	add	x1, x1, #0x680
    ff7c:	bl	f278 <argp_fmtstream_point@@Base+0xcb8>
    ff80:	ldr	w1, [x24, #8]
    ff84:	cbz	w1, ffb4 <argp_failure@@Base+0x600>
    ff88:	ldr	x0, [x24]
    ff8c:	mov	x2, #0x0                   	// #0
    ff90:	mov	x4, #0x38                  	// #56
    ff94:	add	x3, x0, #0x30
    ff98:	cmp	w1, w2
    ff9c:	b.hi	102b4 <argp_failure@@Base+0x900>  // b.pmore
    ffa0:	adrp	x3, f000 <argp_fmtstream_point@@Base+0xa40>
    ffa4:	mov	w1, w1
    ffa8:	add	x3, x3, #0x77c
    ffac:	mov	x2, #0x38                  	// #56
    ffb0:	bl	a980 <qsort@plt>
    ffb4:	tst	x25, #0x3
    ffb8:	b.eq	102e8 <argp_failure@@Base+0x934>  // b.none
    ffbc:	mov	x0, x27
    ffc0:	bl	e9a4 <argp_fmtstream_point@@Base+0x3e4>
    ffc4:	mov	x2, x0
    ffc8:	add	x0, x0, #0xf
    ffcc:	and	x0, x0, #0xfffffffffffffff0
    ffd0:	mov	w1, #0x0                   	// #0
    ffd4:	sub	sp, sp, x0
    ffd8:	adrp	x23, 27000 <vasnprintf@@Base+0x1170>
    ffdc:	mov	x28, sp
    ffe0:	add	x23, x23, #0x2ee
    ffe4:	mov	x0, x28
    ffe8:	bl	ac10 <memset@plt>
    ffec:	add	x0, x21, #0x318
    fff0:	mov	w3, #0x1                   	// #1
    fff4:	mov	x22, x0
    fff8:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
    fffc:	add	x0, x0, #0x48f
   10000:	str	x0, [x29, #144]
   10004:	ldrsw	x1, [x22, #28]
   10008:	mov	x0, x19
   1000c:	str	w3, [x29, #152]
   10010:	bl	b5e0 <argp_fmtstream_set_wmargin@plt>
   10014:	str	x0, [x29, #160]
   10018:	ldr	w3, [x29, #152]
   1001c:	mov	w2, #0x5                   	// #5
   10020:	str	x28, [x29, #200]
   10024:	cbz	w3, 102cc <argp_failure@@Base+0x918>
   10028:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   1002c:	add	x1, x1, #0x482
   10030:	mov	x0, x23
   10034:	bl	b3f0 <dcgettext@plt>
   10038:	ldr	x3, [x29, #168]
   1003c:	mov	x2, x0
   10040:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   10044:	add	x1, x0, #0x489
   10048:	mov	x0, x19
   1004c:	bl	aea0 <argp_fmtstream_printf@plt>
   10050:	ldrsw	x1, [x22, #28]
   10054:	mov	x0, x19
   10058:	bl	a9a0 <argp_fmtstream_set_lmargin@plt>
   1005c:	str	x0, [x29, #152]
   10060:	tbz	w25, #1, 102d4 <argp_failure@@Base+0x920>
   10064:	ldr	w0, [x24, #8]
   10068:	cbz	w0, 1008c <argp_failure@@Base+0x6d8>
   1006c:	mov	w2, #0x5                   	// #5
   10070:	mov	x0, x23
   10074:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   10078:	add	x1, x1, #0x496
   1007c:	bl	b3f0 <dcgettext@plt>
   10080:	mov	x1, x0
   10084:	mov	x0, x19
   10088:	bl	ab80 <argp_fmtstream_puts@plt>
   1008c:	mov	w3, #0x1                   	// #1
   10090:	mov	x4, x19
   10094:	add	x2, x29, #0xc8
   10098:	mov	x1, x20
   1009c:	mov	x0, x27
   100a0:	bl	eee8 <argp_fmtstream_point@@Base+0x928>
   100a4:	ldrsw	x1, [x29, #160]
   100a8:	mov	w2, w0
   100ac:	mov	x0, x19
   100b0:	str	w2, [x29, #136]
   100b4:	bl	b5e0 <argp_fmtstream_set_wmargin@plt>
   100b8:	ldrsw	x1, [x29, #152]
   100bc:	mov	x0, x19
   100c0:	bl	a9a0 <argp_fmtstream_set_lmargin@plt>
   100c4:	mov	x0, x19
   100c8:	mov	w1, #0xa                   	// #10
   100cc:	bl	a9c0 <argp_fmtstream_putc@plt>
   100d0:	ldr	w2, [x29, #136]
   100d4:	mov	w3, #0x0                   	// #0
   100d8:	cbnz	w2, 10004 <argp_failure@@Base+0x650>
   100dc:	mov	w23, #0x1                   	// #1
   100e0:	tbz	w25, #4, 10104 <argp_failure@@Base+0x750>
   100e4:	mov	x5, x19
   100e8:	mov	x1, x20
   100ec:	mov	x0, x27
   100f0:	mov	w4, #0x1                   	// #1
   100f4:	mov	w3, #0x0                   	// #0
   100f8:	mov	w2, #0x0                   	// #0
   100fc:	bl	ea00 <argp_fmtstream_point@@Base+0x440>
   10100:	orr	w23, w23, w0
   10104:	tbz	w25, #2, 10138 <argp_failure@@Base+0x784>
   10108:	mov	w2, #0x5                   	// #5
   1010c:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   10110:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   10114:	add	x1, x1, #0x4a3
   10118:	add	x0, x0, #0x2ee
   1011c:	bl	b3f0 <dcgettext@plt>
   10120:	ldr	x3, [x29, #168]
   10124:	mov	x1, x0
   10128:	mov	w23, #0x1                   	// #1
   1012c:	mov	x0, x19
   10130:	mov	x2, x3
   10134:	bl	aea0 <argp_fmtstream_printf@plt>
   10138:	tbz	w25, #3, 1021c <argp_failure@@Base+0x868>
   1013c:	ldr	w0, [x24, #8]
   10140:	cbz	w0, 1021c <argp_failure@@Base+0x868>
   10144:	cbz	w23, 10154 <argp_failure@@Base+0x7a0>
   10148:	mov	x0, x19
   1014c:	mov	w1, #0xa                   	// #10
   10150:	bl	a9c0 <argp_fmtstream_putc@plt>
   10154:	ldr	w0, [x24, #8]
   10158:	str	w0, [x29, #152]
   1015c:	add	x0, x29, #0xc8
   10160:	str	x0, [x29, #160]
   10164:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   10168:	add	x0, x0, #0x4da
   1016c:	str	x0, [x29, #104]
   10170:	ldr	x22, [x24]
   10174:	stp	xzr, xzr, [x29, #184]
   10178:	ldr	w0, [x29, #152]
   1017c:	cbnz	w0, 102f0 <argp_failure@@Base+0x93c>
   10180:	ldr	w0, [x29, #196]
   10184:	cbz	w0, 10218 <argp_failure@@Base+0x864>
   10188:	add	x21, x21, #0x318
   1018c:	ldr	w0, [x21, #4]
   10190:	cbz	w0, 10218 <argp_failure@@Base+0x864>
   10194:	cmp	x20, #0x0
   10198:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   1019c:	add	x0, x0, #0x2ee
   101a0:	mov	w2, #0x5                   	// #5
   101a4:	csel	x0, x0, xzr, ne  // ne = any
   101a8:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   101ac:	add	x1, x1, #0x4ee
   101b0:	bl	b3f0 <dcgettext@plt>
   101b4:	mov	x22, x0
   101b8:	cbz	x20, 10718 <argp_failure@@Base+0xd64>
   101bc:	ldr	x2, [x20]
   101c0:	mov	w1, #0x5                   	// #5
   101c4:	mov	x3, x20
   101c8:	mov	x0, x22
   101cc:	movk	w1, #0x200, lsl #16
   101d0:	bl	ee7c <argp_fmtstream_point@@Base+0x8bc>
   101d4:	mov	x21, x0
   101d8:	cbz	x0, 10218 <argp_failure@@Base+0x864>
   101dc:	ldrb	w0, [x0]
   101e0:	cbz	w0, 10208 <argp_failure@@Base+0x854>
   101e4:	mov	w1, #0xa                   	// #10
   101e8:	mov	x0, x19
   101ec:	bl	a9c0 <argp_fmtstream_putc@plt>
   101f0:	mov	x1, x21
   101f4:	mov	x0, x19
   101f8:	bl	ab80 <argp_fmtstream_puts@plt>
   101fc:	mov	x0, x19
   10200:	mov	w1, #0xa                   	// #10
   10204:	bl	a9c0 <argp_fmtstream_putc@plt>
   10208:	cmp	x22, x21
   1020c:	b.eq	10218 <argp_failure@@Base+0x864>  // b.none
   10210:	mov	x0, x21
   10214:	bl	b050 <free@plt>
   10218:	mov	w23, #0x1                   	// #1
   1021c:	tbz	w25, #5, 10240 <argp_failure@@Base+0x88c>
   10220:	mov	w3, w23
   10224:	mov	x5, x19
   10228:	mov	x1, x20
   1022c:	mov	x0, x27
   10230:	mov	w4, #0x0                   	// #0
   10234:	mov	w2, #0x1                   	// #1
   10238:	bl	ea00 <argp_fmtstream_point@@Base+0x440>
   1023c:	orr	w23, w23, w0
   10240:	tbz	w25, #6, 10294 <argp_failure@@Base+0x8e0>
   10244:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   10248:	mov	x20, x0
   1024c:	ldr	x1, [x0, #3968]
   10250:	ldr	x1, [x1]
   10254:	cbz	x1, 10294 <argp_failure@@Base+0x8e0>
   10258:	cbz	w23, 10268 <argp_failure@@Base+0x8b4>
   1025c:	mov	x0, x19
   10260:	mov	w1, #0xa                   	// #10
   10264:	bl	a9c0 <argp_fmtstream_putc@plt>
   10268:	mov	w2, #0x5                   	// #5
   1026c:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   10270:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   10274:	add	x1, x1, #0x562
   10278:	add	x0, x0, #0x2ee
   1027c:	bl	b3f0 <dcgettext@plt>
   10280:	ldr	x20, [x20, #3968]
   10284:	mov	x1, x0
   10288:	mov	x0, x19
   1028c:	ldr	x2, [x20]
   10290:	bl	aea0 <argp_fmtstream_printf@plt>
   10294:	mov	x0, x26
   10298:	bl	ab20 <funlockfile@plt>
   1029c:	cbz	x24, 102a8 <argp_failure@@Base+0x8f4>
   102a0:	mov	x0, x24
   102a4:	bl	e954 <argp_fmtstream_point@@Base+0x394>
   102a8:	mov	x0, x19
   102ac:	bl	b430 <argp_fmtstream_free@plt>
   102b0:	b	ff28 <argp_failure@@Base+0x574>
   102b4:	mul	x5, x2, x4
   102b8:	str	w2, [x3, x5]
   102bc:	add	x2, x2, #0x1
   102c0:	b	ff98 <argp_failure@@Base+0x5e4>
   102c4:	mov	x24, #0x0                   	// #0
   102c8:	b	ffb4 <argp_failure@@Base+0x600>
   102cc:	ldr	x1, [x29, #144]
   102d0:	b	10030 <argp_failure@@Base+0x67c>
   102d4:	mov	x1, x19
   102d8:	mov	x0, x24
   102dc:	orr	w25, w25, #0x2
   102e0:	bl	ecbc <argp_fmtstream_point@@Base+0x6fc>
   102e4:	b	1008c <argp_failure@@Base+0x6d8>
   102e8:	mov	w23, #0x0                   	// #0
   102ec:	b	100e0 <argp_failure@@Base+0x72c>
   102f0:	ldr	x0, [x22, #16]
   102f4:	mov	x1, #0x0                   	// #0
   102f8:	str	x0, [x29, #168]
   102fc:	mov	x0, x19
   10300:	ldr	x23, [x22]
   10304:	bl	a9a0 <argp_fmtstream_set_lmargin@plt>
   10308:	str	x0, [x29, #128]
   1030c:	ldr	x0, [x19, #24]
   10310:	str	x0, [x29, #120]
   10314:	add	x0, x29, #0xb8
   10318:	str	x0, [x29, #216]
   1031c:	mov	w0, #0x1                   	// #1
   10320:	str	w0, [x29, #224]
   10324:	ldr	w0, [x23, #24]
   10328:	stp	x22, x19, [x29, #200]
   1032c:	and	w1, w0, #0x8
   10330:	str	w1, [x29, #144]
   10334:	str	x20, [x29, #232]
   10338:	tbnz	w0, #3, 104a4 <argp_failure@@Base+0xaf0>
   1033c:	ldr	w1, [x22, #8]
   10340:	mov	x0, x23
   10344:	cbnz	w1, 10488 <argp_failure@@Base+0xad4>
   10348:	add	x0, x21, #0x318
   1034c:	mov	x28, x23
   10350:	ldrsw	x1, [x0, #8]
   10354:	mov	x0, x19
   10358:	bl	b5e0 <argp_fmtstream_set_wmargin@plt>
   1035c:	ldr	w0, [x22, #8]
   10360:	str	w0, [x29, #136]
   10364:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   10368:	add	x0, x0, #0x30e
   1036c:	str	x0, [x29, #112]
   10370:	ldr	w0, [x29, #136]
   10374:	cbnz	w0, 104b8 <argp_failure@@Base+0xb04>
   10378:	ldr	w0, [x23, #24]
   1037c:	tbz	w0, #3, 105e8 <argp_failure@@Base+0xc34>
   10380:	add	x28, x21, #0x318
   10384:	mov	x0, x19
   10388:	ldrsw	x1, [x28, #16]
   1038c:	bl	b5e0 <argp_fmtstream_set_wmargin@plt>
   10390:	ldr	w4, [x22, #8]
   10394:	mov	x3, x23
   10398:	cbnz	w4, 10574 <argp_failure@@Base+0xbc0>
   1039c:	mov	x0, x19
   103a0:	mov	x1, #0x0                   	// #0
   103a4:	bl	a9a0 <argp_fmtstream_set_lmargin@plt>
   103a8:	ldr	w0, [x29, #224]
   103ac:	cbnz	w0, 10694 <argp_failure@@Base+0xce0>
   103b0:	ldr	x28, [x23, #32]
   103b4:	cbz	x28, 103d4 <argp_failure@@Base+0xa20>
   103b8:	cbz	x20, 106e8 <argp_failure@@Base+0xd34>
   103bc:	ldr	x0, [x22, #40]
   103c0:	ldr	x0, [x0, #48]
   103c4:	mov	x1, x28
   103c8:	mov	w2, #0x5                   	// #5
   103cc:	bl	b3f0 <dcgettext@plt>
   103d0:	mov	x28, x0
   103d4:	ldr	w1, [x23, #8]
   103d8:	mov	x3, x20
   103dc:	ldr	x2, [x22, #40]
   103e0:	mov	x0, x28
   103e4:	bl	ee7c <argp_fmtstream_point@@Base+0x8bc>
   103e8:	mov	x23, x0
   103ec:	cbz	x0, 1046c <argp_failure@@Base+0xab8>
   103f0:	ldrb	w0, [x0]
   103f4:	cbz	w0, 1045c <argp_failure@@Base+0xaa8>
   103f8:	mov	x0, x19
   103fc:	bl	ae70 <argp_fmtstream_point@plt>
   10400:	add	x3, x21, #0x318
   10404:	mov	x2, x0
   10408:	mov	x0, x19
   1040c:	str	x2, [x29, #144]
   10410:	str	x3, [x29, #168]
   10414:	ldrsw	x1, [x3, #20]
   10418:	bl	a9a0 <argp_fmtstream_set_lmargin@plt>
   1041c:	ldr	x3, [x29, #168]
   10420:	mov	x0, x19
   10424:	ldrsw	x1, [x3, #20]
   10428:	bl	b5e0 <argp_fmtstream_set_wmargin@plt>
   1042c:	ldr	x3, [x29, #168]
   10430:	ldr	x2, [x29, #144]
   10434:	ldr	w1, [x3, #20]
   10438:	add	w0, w1, #0x3
   1043c:	cmp	w2, w0
   10440:	b.ls	106f0 <argp_failure@@Base+0xd3c>  // b.plast
   10444:	mov	x0, x19
   10448:	mov	w1, #0xa                   	// #10
   1044c:	bl	a9c0 <argp_fmtstream_putc@plt>
   10450:	mov	x1, x23
   10454:	mov	x0, x19
   10458:	bl	ab80 <argp_fmtstream_puts@plt>
   1045c:	cmp	x28, x23
   10460:	b.eq	1046c <argp_failure@@Base+0xab8>  // b.none
   10464:	mov	x0, x23
   10468:	bl	b050 <free@plt>
   1046c:	mov	x0, x19
   10470:	mov	x1, #0x0                   	// #0
   10474:	bl	a9a0 <argp_fmtstream_set_lmargin@plt>
   10478:	mov	x0, x19
   1047c:	mov	w1, #0xa                   	// #10
   10480:	bl	a9c0 <argp_fmtstream_putc@plt>
   10484:	b	106b8 <argp_failure@@Base+0xd04>
   10488:	ldr	x2, [x0]
   1048c:	cbz	x2, 10498 <argp_failure@@Base+0xae4>
   10490:	ldr	w2, [x0, #24]
   10494:	tbz	w2, #1, 104ac <argp_failure@@Base+0xaf8>
   10498:	add	x0, x0, #0x30
   1049c:	sub	w1, w1, #0x1
   104a0:	b	10344 <argp_failure@@Base+0x990>
   104a4:	str	wzr, [x29, #144]
   104a8:	b	10348 <argp_failure@@Base+0x994>
   104ac:	mov	w0, #0x1                   	// #1
   104b0:	str	w0, [x29, #144]
   104b4:	b	10348 <argp_failure@@Base+0x994>
   104b8:	mov	x0, x28
   104bc:	bl	b3e0 <_option_is_short@plt>
   104c0:	cbz	w0, 10544 <argp_failure@@Base+0xb90>
   104c4:	ldr	x0, [x29, #168]
   104c8:	ldr	w1, [x28, #8]
   104cc:	ldrb	w0, [x0]
   104d0:	cmp	w1, w0
   104d4:	b.ne	10544 <argp_failure@@Base+0xb90>  // b.any
   104d8:	ldr	w0, [x28, #24]
   104dc:	tbnz	w0, #1, 10538 <argp_failure@@Base+0xb84>
   104e0:	add	x0, x21, #0x318
   104e4:	ldr	x1, [x29, #160]
   104e8:	ldr	w0, [x0, #8]
   104ec:	bl	f194 <argp_fmtstream_point@@Base+0xbd4>
   104f0:	mov	w1, #0x2d                  	// #45
   104f4:	mov	x0, x19
   104f8:	bl	a9c0 <argp_fmtstream_putc@plt>
   104fc:	ldr	x0, [x29, #168]
   10500:	ldrb	w1, [x0]
   10504:	mov	x0, x19
   10508:	bl	a9c0 <argp_fmtstream_putc@plt>
   1050c:	ldr	w0, [x29, #144]
   10510:	cbz	w0, 1051c <argp_failure@@Base+0xb68>
   10514:	ldr	w0, [x21, #792]
   10518:	cbz	w0, 10560 <argp_failure@@Base+0xbac>
   1051c:	cbz	x20, 10558 <argp_failure@@Base+0xba4>
   10520:	ldr	x0, [x22, #40]
   10524:	ldr	x3, [x0, #48]
   10528:	mov	x4, x19
   1052c:	ldp	x2, x1, [x29, #104]
   10530:	mov	x0, x23
   10534:	bl	e7c8 <argp_fmtstream_point@@Base+0x208>
   10538:	ldr	x0, [x29, #168]
   1053c:	add	x0, x0, #0x1
   10540:	str	x0, [x29, #168]
   10544:	ldr	w0, [x29, #136]
   10548:	add	x28, x28, #0x30
   1054c:	sub	w0, w0, #0x1
   10550:	str	w0, [x29, #136]
   10554:	b	10370 <argp_failure@@Base+0x9bc>
   10558:	mov	x3, #0x0                   	// #0
   1055c:	b	10528 <argp_failure@@Base+0xb74>
   10560:	ldr	x0, [x23, #16]
   10564:	cbz	x0, 10538 <argp_failure@@Base+0xb84>
   10568:	mov	w0, #0x1                   	// #1
   1056c:	str	w0, [x29, #196]
   10570:	b	10538 <argp_failure@@Base+0xb84>
   10574:	ldr	x0, [x3]
   10578:	cbz	x0, 105d4 <argp_failure@@Base+0xc20>
   1057c:	ldr	w0, [x3, #24]
   10580:	tbnz	w0, #1, 105d4 <argp_failure@@Base+0xc20>
   10584:	ldr	w0, [x28, #16]
   10588:	ldr	x1, [x29, #160]
   1058c:	str	w4, [x29, #144]
   10590:	str	x3, [x29, #168]
   10594:	bl	f194 <argp_fmtstream_point@@Base+0xbd4>
   10598:	ldr	w4, [x29, #144]
   1059c:	ldr	x3, [x29, #168]
   105a0:	cbz	x20, 105e0 <argp_failure@@Base+0xc2c>
   105a4:	ldr	x0, [x22, #40]
   105a8:	ldr	x0, [x0, #48]
   105ac:	mov	w2, #0x5                   	// #5
   105b0:	ldr	x1, [x3]
   105b4:	str	w4, [x29, #144]
   105b8:	str	x3, [x29, #168]
   105bc:	bl	b3f0 <dcgettext@plt>
   105c0:	mov	x1, x0
   105c4:	mov	x0, x19
   105c8:	bl	ab80 <argp_fmtstream_puts@plt>
   105cc:	ldr	w4, [x29, #144]
   105d0:	ldr	x3, [x29, #168]
   105d4:	add	x3, x3, #0x30
   105d8:	sub	w4, w4, #0x1
   105dc:	b	10398 <argp_failure@@Base+0x9e4>
   105e0:	mov	x0, #0x0                   	// #0
   105e4:	b	105ac <argp_failure@@Base+0xbf8>
   105e8:	add	x0, x21, #0x318
   105ec:	mov	x28, x23
   105f0:	ldrsw	x1, [x0, #12]
   105f4:	mov	x0, x19
   105f8:	bl	b5e0 <argp_fmtstream_set_wmargin@plt>
   105fc:	ldr	w6, [x22, #8]
   10600:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   10604:	add	x0, x0, #0x4df
   10608:	str	x0, [x29, #168]
   1060c:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   10610:	add	x0, x0, #0x4e4
   10614:	str	x0, [x29, #144]
   10618:	cbz	w6, 1039c <argp_failure@@Base+0x9e8>
   1061c:	ldr	x0, [x28]
   10620:	cbz	x0, 10680 <argp_failure@@Base+0xccc>
   10624:	ldr	w0, [x28, #24]
   10628:	tbnz	w0, #1, 10680 <argp_failure@@Base+0xccc>
   1062c:	add	x0, x21, #0x318
   10630:	str	w6, [x29, #136]
   10634:	ldr	x1, [x29, #160]
   10638:	ldr	w0, [x0, #12]
   1063c:	bl	f194 <argp_fmtstream_point@@Base+0xbd4>
   10640:	ldr	x2, [x28]
   10644:	mov	x0, x19
   10648:	ldr	x1, [x29, #168]
   1064c:	bl	aea0 <argp_fmtstream_printf@plt>
   10650:	ldr	w6, [x29, #136]
   10654:	cbz	x20, 1068c <argp_failure@@Base+0xcd8>
   10658:	ldr	x0, [x22, #40]
   1065c:	ldr	x3, [x0, #48]
   10660:	mov	x4, x19
   10664:	ldr	x2, [x29, #144]
   10668:	mov	x0, x23
   1066c:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   10670:	add	x1, x1, #0x225
   10674:	str	w6, [x29, #136]
   10678:	bl	e7c8 <argp_fmtstream_point@@Base+0x208>
   1067c:	ldr	w6, [x29, #136]
   10680:	add	x28, x28, #0x30
   10684:	sub	w6, w6, #0x1
   10688:	b	10618 <argp_failure@@Base+0xc64>
   1068c:	mov	x3, #0x0                   	// #0
   10690:	b	10660 <argp_failure@@Base+0xcac>
   10694:	mov	x0, x23
   10698:	bl	b3e0 <_option_is_short@plt>
   1069c:	cbnz	w0, 106bc <argp_failure@@Base+0xd08>
   106a0:	ldr	x0, [x23]
   106a4:	cbnz	x0, 106bc <argp_failure@@Base+0xd08>
   106a8:	ldr	x0, [x23, #32]
   106ac:	ldr	x1, [x22, #40]
   106b0:	ldr	x2, [x29, #160]
   106b4:	bl	f098 <argp_fmtstream_point@@Base+0xad8>
   106b8:	str	x22, [x29, #184]
   106bc:	ldrsw	x1, [x29, #128]
   106c0:	mov	x0, x19
   106c4:	add	x22, x22, #0x38
   106c8:	bl	a9a0 <argp_fmtstream_set_lmargin@plt>
   106cc:	ldrsw	x1, [x29, #120]
   106d0:	mov	x0, x19
   106d4:	bl	b5e0 <argp_fmtstream_set_wmargin@plt>
   106d8:	ldr	w0, [x29, #152]
   106dc:	sub	w0, w0, #0x1
   106e0:	str	w0, [x29, #152]
   106e4:	b	10178 <argp_failure@@Base+0x7c4>
   106e8:	mov	x0, #0x0                   	// #0
   106ec:	b	103c4 <argp_failure@@Base+0xa10>
   106f0:	cmp	w2, w1
   106f4:	b.cc	1070c <argp_failure@@Base+0xd58>  // b.lo, b.ul, b.last
   106f8:	mov	x0, x19
   106fc:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   10700:	add	x1, x1, #0x4ea
   10704:	bl	ab80 <argp_fmtstream_puts@plt>
   10708:	b	10450 <argp_failure@@Base+0xa9c>
   1070c:	mov	x0, x19
   10710:	bl	e740 <argp_fmtstream_point@@Base+0x180>
   10714:	b	10450 <argp_failure@@Base+0xa9c>
   10718:	mov	x2, #0x0                   	// #0
   1071c:	b	101c0 <argp_failure@@Base+0x80c>

0000000000010720 <argp_help@@Base>:
   10720:	mov	x4, x3
   10724:	mov	w3, w2
   10728:	mov	x2, x1
   1072c:	mov	x1, #0x0                   	// #0
   10730:	b	fb44 <argp_failure@@Base+0x190>

0000000000010734 <argp_state_help@@Base>:
   10734:	stp	x29, x30, [sp, #-32]!
   10738:	mov	x29, sp
   1073c:	stp	x19, x20, [sp, #16]
   10740:	mov	x19, x0
   10744:	mov	w20, w2
   10748:	cbz	x0, 1076c <argp_state_help@@Base+0x38>
   1074c:	ldr	w0, [x0, #28]
   10750:	tbz	w0, #1, 107b0 <argp_state_help@@Base+0x7c>
   10754:	ldp	x19, x20, [sp, #16]
   10758:	ldp	x29, x30, [sp], #32
   1075c:	ret
   10760:	tbz	w20, #9, 10754 <argp_state_help@@Base+0x20>
   10764:	mov	w0, #0x0                   	// #0
   10768:	b	107ac <argp_state_help@@Base+0x78>
   1076c:	cbz	x1, 10754 <argp_state_help@@Base+0x20>
   10770:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   10774:	ldr	x0, [x0, #4008]
   10778:	ldr	x4, [x0]
   1077c:	mov	x0, #0x0                   	// #0
   10780:	mov	x2, x1
   10784:	mov	w3, w20
   10788:	mov	x1, x19
   1078c:	bl	fb44 <argp_failure@@Base+0x190>
   10790:	cbz	x19, 1079c <argp_state_help@@Base+0x68>
   10794:	ldr	w0, [x19, #28]
   10798:	tbnz	w0, #5, 10754 <argp_state_help@@Base+0x20>
   1079c:	tbz	w20, #8, 10760 <argp_state_help@@Base+0x2c>
   107a0:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   107a4:	ldr	x0, [x0, #4048]
   107a8:	ldr	w0, [x0]
   107ac:	bl	a7b0 <exit@plt>
   107b0:	cbz	x1, 10754 <argp_state_help@@Base+0x20>
   107b4:	tbz	w0, #6, 107bc <argp_state_help@@Base+0x88>
   107b8:	orr	w20, w20, #0x80
   107bc:	ldr	x0, [x19]
   107c0:	ldr	x4, [x19, #64]
   107c4:	b	10780 <argp_state_help@@Base+0x4c>

00000000000107c8 <argp_error@@Base>:
   107c8:	stp	x29, x30, [sp, #-288]!
   107cc:	mov	x29, sp
   107d0:	stp	x19, x20, [sp, #16]
   107d4:	mov	x20, x0
   107d8:	str	x21, [sp, #32]
   107dc:	mov	x21, x1
   107e0:	str	q0, [sp, #112]
   107e4:	str	q1, [sp, #128]
   107e8:	str	q2, [sp, #144]
   107ec:	str	q3, [sp, #160]
   107f0:	str	q4, [sp, #176]
   107f4:	str	q5, [sp, #192]
   107f8:	str	q6, [sp, #208]
   107fc:	str	q7, [sp, #224]
   10800:	stp	x2, x3, [sp, #240]
   10804:	stp	x4, x5, [sp, #256]
   10808:	stp	x6, x7, [sp, #272]
   1080c:	cbz	x0, 108c4 <argp_error@@Base+0xfc>
   10810:	ldr	w0, [x0, #28]
   10814:	tbnz	w0, #1, 108b4 <argp_error@@Base+0xec>
   10818:	ldr	x19, [x20, #72]
   1081c:	cbz	x19, 108b4 <argp_error@@Base+0xec>
   10820:	mov	x0, x19
   10824:	bl	a800 <flockfile@plt>
   10828:	add	x0, sp, #0x120
   1082c:	stp	x0, x0, [sp, #80]
   10830:	add	x0, sp, #0xf0
   10834:	str	x0, [sp, #96]
   10838:	mov	w0, #0xffffffd0            	// #-48
   1083c:	str	w0, [sp, #104]
   10840:	mov	w0, #0xffffff80            	// #-128
   10844:	str	w0, [sp, #108]
   10848:	cbz	x20, 108d4 <argp_error@@Base+0x10c>
   1084c:	ldr	x0, [x20, #64]
   10850:	mov	x1, x19
   10854:	bl	b460 <fputs_unlocked@plt>
   10858:	mov	x1, x19
   1085c:	mov	w0, #0x3a                  	// #58
   10860:	bl	aa10 <putc_unlocked@plt>
   10864:	mov	x1, x19
   10868:	mov	w0, #0x20                  	// #32
   1086c:	bl	aa10 <putc_unlocked@plt>
   10870:	ldp	x0, x1, [sp, #80]
   10874:	stp	x0, x1, [sp, #48]
   10878:	add	x2, sp, #0x30
   1087c:	ldp	x0, x1, [sp, #96]
   10880:	stp	x0, x1, [sp, #64]
   10884:	mov	x1, x21
   10888:	mov	x0, x19
   1088c:	bl	b510 <vfprintf@plt>
   10890:	mov	x1, x19
   10894:	mov	w0, #0xa                   	// #10
   10898:	bl	aa10 <putc_unlocked@plt>
   1089c:	mov	x1, x19
   108a0:	mov	w2, #0x104                 	// #260
   108a4:	mov	x0, x20
   108a8:	bl	b3d0 <argp_state_help@plt>
   108ac:	mov	x0, x19
   108b0:	bl	ab20 <funlockfile@plt>
   108b4:	ldp	x19, x20, [sp, #16]
   108b8:	ldr	x21, [sp, #32]
   108bc:	ldp	x29, x30, [sp], #288
   108c0:	ret
   108c4:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   108c8:	ldr	x0, [x0, #3816]
   108cc:	ldr	x19, [x0]
   108d0:	b	1081c <argp_error@@Base+0x54>
   108d4:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   108d8:	ldr	x0, [x0, #4008]
   108dc:	ldr	x0, [x0]
   108e0:	b	10850 <argp_error@@Base+0x88>
   108e4:	stp	x29, x30, [sp, #-32]!
   108e8:	mov	x29, sp
   108ec:	stp	x19, x20, [sp, #16]
   108f0:	mov	x20, x1
   108f4:	mov	x1, x3
   108f8:	ldr	x3, [x0]
   108fc:	mov	x19, x0
   10900:	cbz	x3, 10944 <argp_error@@Base+0x17c>
   10904:	mov	w0, w2
   10908:	ldr	x2, [x19, #64]
   1090c:	str	x2, [x20, #56]
   10910:	ldr	x2, [x19, #48]
   10914:	str	x2, [x20, #40]
   10918:	ldr	x2, [x19, #56]
   1091c:	str	x2, [x20, #48]
   10920:	ldr	w2, [x19, #24]
   10924:	str	w2, [x20, #32]
   10928:	mov	x2, x20
   1092c:	blr	x3
   10930:	ldr	x1, [x20, #56]
   10934:	str	x1, [x19, #64]
   10938:	ldp	x19, x20, [sp, #16]
   1093c:	ldp	x29, x30, [sp], #32
   10940:	ret
   10944:	mov	w0, #0x7                   	// #7
   10948:	b	10938 <argp_error@@Base+0x170>
   1094c:	stp	x29, x30, [sp, #-48]!
   10950:	mov	x2, x0
   10954:	mov	x29, sp
   10958:	stp	x21, x22, [sp, #32]
   1095c:	ldr	x21, [x0, #32]
   10960:	stp	x19, x20, [sp, #16]
   10964:	mov	x19, x1
   10968:	ldr	x0, [x0]
   1096c:	cbnz	x0, 10978 <argp_error@@Base+0x1b0>
   10970:	ldr	x1, [x2, #8]
   10974:	cbz	x1, 10988 <argp_error@@Base+0x1c0>
   10978:	ldr	x1, [x19, #16]
   1097c:	add	x1, x1, #0x1
   10980:	str	x1, [x19, #16]
   10984:	cbnz	x0, 109d0 <argp_error@@Base+0x208>
   10988:	cbnz	x21, 109f0 <argp_error@@Base+0x228>
   1098c:	ldp	x19, x20, [sp, #16]
   10990:	ldp	x21, x22, [sp, #32]
   10994:	ldp	x29, x30, [sp], #48
   10998:	ret
   1099c:	add	w20, w20, #0x1
   109a0:	mov	x0, x22
   109a4:	add	x22, x0, #0x30
   109a8:	bl	aec0 <_option_is_end@plt>
   109ac:	cbz	w0, 1099c <argp_error@@Base+0x1d4>
   109b0:	ldr	x1, [x19]
   109b4:	add	w0, w20, w20, lsl #1
   109b8:	add	x0, x1, w0, sxtw
   109bc:	str	x0, [x19]
   109c0:	ldr	x0, [x19, #8]
   109c4:	add	x20, x0, w20, sxtw
   109c8:	str	x20, [x19, #8]
   109cc:	b	10988 <argp_error@@Base+0x1c0>
   109d0:	mov	w20, #0x0                   	// #0
   109d4:	b	109a4 <argp_error@@Base+0x1dc>
   109d8:	mov	x1, x19
   109dc:	bl	1094c <argp_error@@Base+0x184>
   109e0:	ldr	x0, [x19, #24]
   109e4:	add	x21, x21, #0x20
   109e8:	add	x0, x0, #0x1
   109ec:	str	x0, [x19, #24]
   109f0:	ldr	x0, [x21]
   109f4:	cbnz	x0, 109d8 <argp_error@@Base+0x210>
   109f8:	b	1098c <argp_error@@Base+0x1c4>
   109fc:	stp	x29, x30, [sp, #-144]!
   10a00:	mov	x29, sp
   10a04:	stp	x21, x22, [sp, #32]
   10a08:	ldr	x21, [x0]
   10a0c:	stp	x19, x20, [sp, #16]
   10a10:	mov	x19, x3
   10a14:	stp	x23, x24, [sp, #48]
   10a18:	mov	x20, x4
   10a1c:	mov	x23, x0
   10a20:	stp	x25, x26, [sp, #64]
   10a24:	mov	w24, w2
   10a28:	stp	x27, x28, [sp, #80]
   10a2c:	str	x1, [sp, #104]
   10a30:	ldr	x22, [x0, #32]
   10a34:	cbnz	x21, 10bc4 <argp_error@@Base+0x3fc>
   10a38:	ldr	x0, [x0, #8]
   10a3c:	cbz	x0, 10a74 <argp_error@@Base+0x2ac>
   10a40:	ldr	x0, [x23, #8]
   10a44:	stp	x0, x23, [x19]
   10a48:	ldr	x0, [x20, #8]
   10a4c:	str	x0, [x19, #16]
   10a50:	ldr	x0, [sp, #104]
   10a54:	str	wzr, [x19, #24]
   10a58:	str	x0, [x19, #32]
   10a5c:	str	w24, [x19, #40]
   10a60:	stp	xzr, xzr, [x19, #48]
   10a64:	str	xzr, [x19, #64]
   10a68:	cbnz	x22, 10c08 <argp_error@@Base+0x440>
   10a6c:	mov	x21, x19
   10a70:	add	x19, x19, #0x48
   10a74:	cbnz	x22, 10c3c <argp_error@@Base+0x474>
   10a78:	mov	x0, x19
   10a7c:	ldp	x19, x20, [sp, #16]
   10a80:	ldp	x21, x22, [sp, #32]
   10a84:	ldp	x23, x24, [sp, #48]
   10a88:	ldp	x25, x26, [sp, #64]
   10a8c:	ldp	x27, x28, [sp, #80]
   10a90:	ldp	x29, x30, [sp], #144
   10a94:	ret
   10a98:	ldr	w0, [x27, #24]
   10a9c:	tst	x0, #0x4
   10aa0:	csel	x21, x21, x27, ne  // ne = any
   10aa4:	ldr	w0, [x21, #24]
   10aa8:	and	w28, w0, #0x8
   10aac:	tbnz	w0, #3, 10ba0 <argp_error@@Base+0x3d8>
   10ab0:	mov	x0, x27
   10ab4:	bl	b3e0 <_option_is_short@plt>
   10ab8:	cbz	w0, 10b08 <argp_error@@Base+0x340>
   10abc:	ldr	x0, [x20, #8]
   10ac0:	ldr	w1, [x27, #8]
   10ac4:	add	x2, x0, #0x1
   10ac8:	str	x2, [x20, #8]
   10acc:	strb	w1, [x0]
   10ad0:	ldr	x0, [x21, #16]
   10ad4:	cbz	x0, 10b00 <argp_error@@Base+0x338>
   10ad8:	ldr	x0, [x20, #8]
   10adc:	add	x1, x0, #0x1
   10ae0:	str	x1, [x20, #8]
   10ae4:	strb	w25, [x0]
   10ae8:	ldr	w0, [x21, #24]
   10aec:	tbz	w0, #0, 10b00 <argp_error@@Base+0x338>
   10af0:	ldr	x0, [x20, #8]
   10af4:	add	x1, x0, #0x1
   10af8:	str	x1, [x20, #8]
   10afc:	strb	w25, [x0]
   10b00:	ldr	x0, [x20, #8]
   10b04:	strb	wzr, [x0]
   10b08:	ldr	x1, [x27]
   10b0c:	cbz	x1, 10ba0 <argp_error@@Base+0x3d8>
   10b10:	ldr	x4, [x20]
   10b14:	ldr	x3, [x4, #16]
   10b18:	mov	x2, x3
   10b1c:	ldr	x0, [x2]
   10b20:	cbz	x0, 10b48 <argp_error@@Base+0x380>
   10b24:	stp	x1, x4, [sp, #112]
   10b28:	stp	x3, x2, [sp, #128]
   10b2c:	bl	afa0 <strcmp@plt>
   10b30:	ldp	x1, x4, [sp, #112]
   10b34:	ldp	x3, x2, [sp, #128]
   10b38:	cbnz	w0, 10bb4 <argp_error@@Base+0x3ec>
   10b3c:	sub	x2, x2, x3
   10b40:	asr	x2, x2, #5
   10b44:	tbz	w2, #31, 10ba0 <argp_error@@Base+0x3d8>
   10b48:	ldr	x2, [x20, #16]
   10b4c:	ldr	x0, [x21, #16]
   10b50:	str	x1, [x2]
   10b54:	cbz	x0, 10b64 <argp_error@@Base+0x39c>
   10b58:	ldr	w28, [x21, #24]
   10b5c:	and	w28, w28, #0x1
   10b60:	add	w28, w28, #0x1
   10b64:	str	w28, [x2, #8]
   10b68:	str	xzr, [x2, #16]
   10b6c:	ldr	w3, [x27, #8]
   10b70:	cbz	w3, 10bbc <argp_error@@Base+0x3f4>
   10b74:	and	w0, w3, #0xffffff
   10b78:	ldr	x3, [x4, #80]
   10b7c:	sub	x3, x19, x3
   10b80:	asr	x3, x3, #3
   10b84:	mul	x3, x3, x26
   10b88:	add	w3, w3, #0x1
   10b8c:	add	w3, w0, w3, lsl #24
   10b90:	str	w3, [x2, #24]
   10b94:	add	x0, x2, #0x20
   10b98:	str	x0, [x20, #16]
   10b9c:	str	xzr, [x2, #32]
   10ba0:	add	x27, x27, #0x30
   10ba4:	mov	x0, x27
   10ba8:	bl	aec0 <_option_is_end@plt>
   10bac:	cbz	w0, 10a98 <argp_error@@Base+0x2d0>
   10bb0:	b	10a40 <argp_error@@Base+0x278>
   10bb4:	add	x2, x2, #0x20
   10bb8:	b	10b1c <argp_error@@Base+0x354>
   10bbc:	ldr	w3, [x21, #8]
   10bc0:	b	10b74 <argp_error@@Base+0x3ac>
   10bc4:	mov	x26, #0x8e39                	// #36409
   10bc8:	mov	x27, x21
   10bcc:	movk	x26, #0x38e3, lsl #16
   10bd0:	mov	w25, #0x3a                  	// #58
   10bd4:	movk	x26, #0xe38e, lsl #32
   10bd8:	movk	x26, #0x8e38, lsl #48
   10bdc:	b	10ba4 <argp_error@@Base+0x3dc>
   10be0:	add	w0, w0, #0x1
   10be4:	ubfiz	x2, x0, #5, #32
   10be8:	mov	w1, w0
   10bec:	ldr	x2, [x22, x2]
   10bf0:	cbnz	x2, 10be0 <argp_error@@Base+0x418>
   10bf4:	ldr	x0, [x20, #24]
   10bf8:	str	x0, [x19, #56]
   10bfc:	add	x0, x0, x1, lsl #3
   10c00:	str	x0, [x20, #24]
   10c04:	b	10a6c <argp_error@@Base+0x2a4>
   10c08:	mov	w0, #0x0                   	// #0
   10c0c:	b	10be4 <argp_error@@Base+0x41c>
   10c10:	mov	x3, x19
   10c14:	mov	x4, x20
   10c18:	mov	x1, x21
   10c1c:	bl	109fc <argp_error@@Base+0x234>
   10c20:	mov	x19, x0
   10c24:	mov	w2, w23
   10c28:	add	x23, x23, #0x1
   10c2c:	lsl	x0, x23, #5
   10c30:	ldr	x0, [x22, x0]
   10c34:	cbnz	x0, 10c10 <argp_error@@Base+0x448>
   10c38:	b	10a78 <argp_error@@Base+0x2b0>
   10c3c:	sub	x22, x22, #0x20
   10c40:	mov	x23, #0x0                   	// #0
   10c44:	b	10c24 <argp_error@@Base+0x45c>
   10c48:	cmp	w0, #0x56
   10c4c:	b.ne	10ce0 <argp_error@@Base+0x518>  // b.any
   10c50:	stp	x29, x30, [sp, #-32]!
   10c54:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   10c58:	mov	x29, sp
   10c5c:	ldr	x0, [x0, #4056]
   10c60:	str	x19, [sp, #16]
   10c64:	mov	x19, x2
   10c68:	ldr	x2, [x0]
   10c6c:	cbz	x2, 10c8c <argp_error@@Base+0x4c4>
   10c70:	ldr	x0, [x19, #80]
   10c74:	mov	x1, x19
   10c78:	blr	x2
   10c7c:	ldr	w0, [x19, #28]
   10c80:	tbnz	w0, #5, 10ce8 <argp_error@@Base+0x520>
   10c84:	mov	w0, #0x0                   	// #0
   10c88:	bl	a7b0 <exit@plt>
   10c8c:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   10c90:	ldr	x0, [x0, #3936]
   10c94:	ldr	x2, [x0]
   10c98:	cbz	x2, 10cb0 <argp_error@@Base+0x4e8>
   10c9c:	ldr	x0, [x19, #80]
   10ca0:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
   10ca4:	add	x1, x1, #0xb98
   10ca8:	bl	b640 <fprintf@plt>
   10cac:	b	10c7c <argp_error@@Base+0x4b4>
   10cb0:	mov	w2, #0x5                   	// #5
   10cb4:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   10cb8:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   10cbc:	add	x1, x1, #0x61a
   10cc0:	add	x0, x0, #0x2ee
   10cc4:	bl	b3f0 <dcgettext@plt>
   10cc8:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   10ccc:	mov	x2, x0
   10cd0:	add	x1, x1, #0x30f
   10cd4:	mov	x0, x19
   10cd8:	bl	b1b0 <argp_error@plt>
   10cdc:	b	10c7c <argp_error@@Base+0x4b4>
   10ce0:	mov	w0, #0x7                   	// #7
   10ce4:	ret
   10ce8:	mov	w0, #0x0                   	// #0
   10cec:	ldr	x19, [sp, #16]
   10cf0:	ldp	x29, x30, [sp], #32
   10cf4:	ret
   10cf8:	stp	x29, x30, [sp, #-32]!
   10cfc:	cmn	w0, #0x2
   10d00:	mov	x29, sp
   10d04:	stp	x19, x20, [sp, #16]
   10d08:	mov	x19, x1
   10d0c:	mov	x20, x2
   10d10:	b.eq	10d64 <argp_error@@Base+0x59c>  // b.none
   10d14:	cmn	w0, #0x1
   10d18:	b.ge	10d34 <argp_error@@Base+0x56c>  // b.tcont
   10d1c:	cmn	w0, #0x4
   10d20:	b.eq	10da4 <argp_error@@Base+0x5dc>  // b.none
   10d24:	cmn	w0, #0x3
   10d28:	b.eq	10d5c <argp_error@@Base+0x594>  // b.none
   10d2c:	mov	w0, #0x7                   	// #7
   10d30:	b	10d50 <argp_error@@Base+0x588>
   10d34:	cmp	w0, #0x3f
   10d38:	b.ne	10d2c <argp_error@@Base+0x564>  // b.any
   10d3c:	mov	w2, #0x27a                 	// #634
   10d40:	ldr	x1, [x20, #80]
   10d44:	mov	x0, x20
   10d48:	bl	b3d0 <argp_state_help@plt>
   10d4c:	mov	w0, #0x0                   	// #0
   10d50:	ldp	x19, x20, [sp, #16]
   10d54:	ldp	x29, x30, [sp], #32
   10d58:	ret
   10d5c:	mov	w2, #0x201                 	// #513
   10d60:	b	10d40 <argp_error@@Base+0x578>
   10d64:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   10d68:	ldr	x0, [x0, #3768]
   10d6c:	str	x1, [x0]
   10d70:	mov	x0, x1
   10d74:	bl	acf0 <last_component@plt>
   10d78:	str	x0, [x20, #64]
   10d7c:	adrp	x1, 40000 <vasnprintf@@Base+0x1a170>
   10d80:	ldr	x1, [x1, #4008]
   10d84:	str	x0, [x1]
   10d88:	ldr	w0, [x20, #28]
   10d8c:	and	w0, w0, #0x3
   10d90:	cmp	w0, #0x1
   10d94:	b.ne	10d4c <argp_error@@Base+0x584>  // b.any
   10d98:	ldr	x0, [x20, #16]
   10d9c:	str	x19, [x0]
   10da0:	b	10d4c <argp_error@@Base+0x584>
   10da4:	cbnz	x1, 10db0 <argp_error@@Base+0x5e8>
   10da8:	adrp	x19, 27000 <vasnprintf@@Base+0x1170>
   10dac:	add	x19, x19, #0x63d
   10db0:	mov	x0, x19
   10db4:	adrp	x19, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
   10db8:	bl	aa50 <atoi@plt>
   10dbc:	str	w0, [x19, #1396]
   10dc0:	add	x19, x19, #0x574
   10dc4:	ldr	w0, [x19]
   10dc8:	sub	w1, w0, #0x1
   10dcc:	str	w1, [x19]
   10dd0:	cmp	w0, #0x0
   10dd4:	b.le	10d4c <argp_error@@Base+0x584>
   10dd8:	mov	w0, #0x1                   	// #1
   10ddc:	bl	ac80 <sleep@plt>
   10de0:	b	10dc4 <argp_error@@Base+0x5fc>

0000000000010de4 <argp_parse@@Base>:
   10de4:	stp	x29, x30, [sp, #-464]!
   10de8:	mov	x29, sp
   10dec:	stp	x19, x20, [sp, #16]
   10df0:	mov	x19, x0
   10df4:	stp	x21, x22, [sp, #32]
   10df8:	mov	w22, w3
   10dfc:	stp	x23, x24, [sp, #48]
   10e00:	mov	x24, x2
   10e04:	mov	x23, x4
   10e08:	stp	x25, x26, [sp, #64]
   10e0c:	mov	w26, w1
   10e10:	stp	x27, x28, [sp, #80]
   10e14:	str	x5, [x29, #120]
   10e18:	tbnz	w22, #0, 10e50 <argp_parse@@Base+0x6c>
   10e1c:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   10e20:	ldr	x0, [x0, #3768]
   10e24:	ldr	x1, [x0]
   10e28:	cbnz	x1, 10e34 <argp_parse@@Base+0x50>
   10e2c:	ldr	x1, [x2]
   10e30:	str	x1, [x0]
   10e34:	adrp	x20, 40000 <vasnprintf@@Base+0x1a170>
   10e38:	ldr	x20, [x20, #4008]
   10e3c:	ldr	x0, [x20]
   10e40:	cbnz	x0, 10e50 <argp_parse@@Base+0x6c>
   10e44:	ldr	x0, [x24]
   10e48:	bl	acf0 <last_component@plt>
   10e4c:	str	x0, [x20]
   10e50:	tbnz	w22, #4, 10ecc <argp_parse@@Base+0xe8>
   10e54:	sub	sp, sp, #0x80
   10e58:	mov	x2, #0x80                  	// #128
   10e5c:	mov	x6, sp
   10e60:	sub	sp, sp, #0x40
   10e64:	mov	x20, sp
   10e68:	mov	x0, x6
   10e6c:	mov	w1, #0x0                   	// #0
   10e70:	stp	xzr, xzr, [x20, #32]
   10e74:	stp	xzr, xzr, [x20]
   10e78:	stp	xzr, xzr, [x20, #16]
   10e7c:	str	x6, [x20, #32]
   10e80:	str	xzr, [x20, #48]
   10e84:	bl	ac10 <memset@plt>
   10e88:	mov	x6, x0
   10e8c:	cbz	x19, 10e94 <argp_parse@@Base+0xb0>
   10e90:	str	x19, [x6], #32
   10e94:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   10e98:	add	x1, x0, #0x798
   10e9c:	str	x1, [x6]
   10ea0:	adrp	x1, 40000 <vasnprintf@@Base+0x1a170>
   10ea4:	ldr	x1, [x1, #3936]
   10ea8:	ldr	x1, [x1]
   10eac:	cbnz	x1, 10f68 <argp_parse@@Base+0x184>
   10eb0:	adrp	x1, 40000 <vasnprintf@@Base+0x1a170>
   10eb4:	ldr	x1, [x1, #4056]
   10eb8:	ldr	x1, [x1]
   10ebc:	cbnz	x1, 10f68 <argp_parse@@Base+0x184>
   10ec0:	add	x1, x6, #0x20
   10ec4:	mov	x19, x20
   10ec8:	str	xzr, [x1]
   10ecc:	ands	w27, w22, #0x4
   10ed0:	stp	xzr, xzr, [x29, #144]
   10ed4:	cset	x0, eq  // eq = none
   10ed8:	stp	x0, xzr, [x29, #128]
   10edc:	stp	xzr, xzr, [x29, #192]
   10ee0:	stp	xzr, xzr, [x29, #208]
   10ee4:	stp	xzr, xzr, [x29, #224]
   10ee8:	str	xzr, [x29, #240]
   10eec:	cbz	x19, 10efc <argp_parse@@Base+0x118>
   10ef0:	add	x1, x29, #0x80
   10ef4:	mov	x0, x19
   10ef8:	bl	1094c <argp_error@@Base+0x184>
   10efc:	ldp	x3, x0, [x29, #136]
   10f00:	mov	x28, #0x48                  	// #72
   10f04:	ldr	x5, [x29, #152]
   10f08:	madd	x28, x0, x28, x28
   10f0c:	add	x3, x3, #0x1
   10f10:	ldr	x0, [x29, #128]
   10f14:	lsl	x21, x5, #3
   10f18:	add	x5, x28, x5, lsl #3
   10f1c:	str	x5, [x29, #112]
   10f20:	add	x25, x5, x3, lsl #5
   10f24:	add	x0, x0, #0x1
   10f28:	add	x0, x0, x25
   10f2c:	bl	aab0 <malloc@plt>
   10f30:	str	x0, [x29, #456]
   10f34:	mov	x20, x0
   10f38:	ldr	x5, [x29, #112]
   10f3c:	cbnz	x0, 10f7c <argp_parse@@Base+0x198>
   10f40:	mov	w19, #0xc                   	// #12
   10f44:	mov	sp, x29
   10f48:	mov	w0, w19
   10f4c:	ldp	x19, x20, [sp, #16]
   10f50:	ldp	x21, x22, [sp, #32]
   10f54:	ldp	x23, x24, [sp, #48]
   10f58:	ldp	x25, x26, [sp, #64]
   10f5c:	ldp	x27, x28, [sp, #80]
   10f60:	ldp	x29, x30, [sp], #464
   10f64:	ret
   10f68:	add	x0, x0, #0x798
   10f6c:	add	x1, x6, #0x40
   10f70:	add	x0, x0, #0x38
   10f74:	str	x0, [x6, #32]
   10f78:	b	10ec4 <argp_parse@@Base+0xe0>
   10f7c:	add	x5, x0, x5
   10f80:	add	x4, x0, x25
   10f84:	add	x28, x0, x28
   10f88:	mov	x0, #0x100000001           	// #4294967297
   10f8c:	add	x1, x29, #0xc0
   10f90:	mov	x2, #0x38                  	// #56
   10f94:	stp	x5, x4, [x29, #104]
   10f98:	str	x0, [x29, #192]
   10f9c:	add	x0, x29, #0x110
   10fa0:	stp	x4, x5, [x29, #256]
   10fa4:	str	x20, [x29, #328]
   10fa8:	str	x28, [x29, #344]
   10fac:	bl	a6f0 <memcpy@plt>
   10fb0:	mov	x2, x21
   10fb4:	mov	x0, x28
   10fb8:	mov	w1, #0x0                   	// #0
   10fbc:	bl	ac10 <memset@plt>
   10fc0:	ldp	x5, x4, [x29, #104]
   10fc4:	add	x21, x29, #0xf8
   10fc8:	stp	x21, x4, [x29, #160]
   10fcc:	stp	x5, x28, [x29, #176]
   10fd0:	tbz	w22, #3, 11104 <argp_parse@@Base+0x320>
   10fd4:	add	x4, x4, #0x1
   10fd8:	mov	w0, #0x2d                  	// #45
   10fdc:	str	x4, [x29, #168]
   10fe0:	strb	w0, [x20, x25]
   10fe4:	ldr	x0, [x29, #168]
   10fe8:	strb	wzr, [x0]
   10fec:	ldr	x0, [x29, #176]
   10ff0:	str	xzr, [x0]
   10ff4:	str	x19, [x29, #248]
   10ff8:	cbz	x19, 11118 <argp_parse@@Base+0x334>
   10ffc:	ldr	x3, [x29, #328]
   11000:	add	x4, x29, #0xa0
   11004:	mov	x0, x19
   11008:	mov	w2, #0x0                   	// #0
   1100c:	mov	x1, #0x0                   	// #0
   11010:	bl	109fc <argp_error@@Base+0x234>
   11014:	str	x0, [x29, #336]
   11018:	ldr	x0, [x29, #248]
   1101c:	str	x0, [x29, #360]
   11020:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   11024:	stp	xzr, xzr, [x29, #368]
   11028:	ldr	x0, [x0, #3816]
   1102c:	stp	xzr, xzr, [x21, #136]
   11030:	stp	xzr, xzr, [x21, #152]
   11034:	ldr	x0, [x0]
   11038:	stp	xzr, xzr, [x21, #168]
   1103c:	str	x0, [x29, #432]
   11040:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   11044:	ldr	x20, [x29, #328]
   11048:	str	w26, [x29, #368]
   1104c:	ldr	x0, [x0, #3872]
   11050:	str	x24, [x29, #376]
   11054:	str	w22, [x29, #388]
   11058:	str	x21, [x29, #448]
   1105c:	ldr	x0, [x0]
   11060:	str	x0, [x29, #440]
   11064:	mov	w0, #0x1                   	// #1
   11068:	str	w0, [x29, #352]
   1106c:	ldr	x0, [x29, #336]
   11070:	cmp	x20, x0
   11074:	b.cs	11080 <argp_parse@@Base+0x29c>  // b.hs, b.nlast
   11078:	ldr	x0, [x29, #120]
   1107c:	str	x0, [x20, #48]
   11080:	mov	w25, #0x3                   	// #3
   11084:	add	x22, x21, #0x70
   11088:	mov	w19, #0x0                   	// #0
   1108c:	movk	w25, #0x100, lsl #16
   11090:	ldr	x0, [x29, #336]
   11094:	cmp	x20, x0
   11098:	b.cs	11120 <argp_parse@@Base+0x33c>  // b.hs, b.nlast
   1109c:	cmp	w19, #0x0
   110a0:	ccmp	w19, #0x7, #0x4, ne  // ne = any
   110a4:	b.ne	10f44 <argp_parse@@Base+0x160>  // b.any
   110a8:	ldr	x0, [x20, #32]
   110ac:	cbz	x0, 110c0 <argp_parse@@Base+0x2dc>
   110b0:	ldr	w1, [x20, #40]
   110b4:	ldr	x0, [x0, #56]
   110b8:	ldr	x0, [x0, x1, lsl #3]
   110bc:	str	x0, [x20, #48]
   110c0:	ldr	x0, [x20]
   110c4:	cbnz	x0, 110e4 <argp_parse@@Base+0x300>
   110c8:	ldr	x0, [x20, #8]
   110cc:	ldr	x0, [x0, #32]
   110d0:	cbz	x0, 110e4 <argp_parse@@Base+0x300>
   110d4:	ldr	x0, [x0]
   110d8:	cbz	x0, 110e4 <argp_parse@@Base+0x300>
   110dc:	ldp	x1, x0, [x20, #48]
   110e0:	str	x1, [x0]
   110e4:	mov	x0, x20
   110e8:	mov	w2, w25
   110ec:	mov	x1, x22
   110f0:	mov	x3, #0x0                   	// #0
   110f4:	add	x20, x20, #0x48
   110f8:	bl	108e4 <argp_error@@Base+0x11c>
   110fc:	mov	w19, w0
   11100:	b	11090 <argp_parse@@Base+0x2ac>
   11104:	cbz	w27, 10fe4 <argp_parse@@Base+0x200>
   11108:	add	x4, x4, #0x1
   1110c:	mov	w0, #0x2b                  	// #43
   11110:	str	x4, [x29, #168]
   11114:	b	10fe0 <argp_parse@@Base+0x1fc>
   11118:	ldr	x0, [x29, #328]
   1111c:	b	11014 <argp_parse@@Base+0x230>
   11120:	cmp	w19, #0x7
   11124:	b.eq	1112c <argp_parse@@Base+0x348>  // b.none
   11128:	cbnz	w19, 10f44 <argp_parse@@Base+0x160>
   1112c:	ldr	w1, [x29, #388]
   11130:	tbz	w1, #1, 112a8 <argp_parse@@Base+0x4c4>
   11134:	str	wzr, [x29, #276]
   11138:	ldr	x0, [x29, #376]
   1113c:	tbz	w1, #0, 11154 <argp_parse@@Base+0x370>
   11140:	sub	x0, x0, #0x8
   11144:	str	x0, [x29, #376]
   11148:	ldr	w0, [x29, #368]
   1114c:	add	w0, w0, #0x1
   11150:	str	w0, [x29, #368]
   11154:	ldr	x0, [x29, #376]
   11158:	cmp	x24, x0
   1115c:	b.ne	112b4 <argp_parse@@Base+0x4d0>  // b.any
   11160:	ldr	x0, [x24]
   11164:	cbz	x0, 112b4 <argp_parse@@Base+0x4d0>
   11168:	bl	acf0 <last_component@plt>
   1116c:	mov	w25, #0x6                   	// #6
   11170:	adrp	x26, 27000 <vasnprintf@@Base+0x1170>
   11174:	add	x24, x21, #0x70
   11178:	add	x26, x26, #0x646
   1117c:	movk	w25, #0x100, lsl #16
   11180:	str	x0, [x29, #424]
   11184:	ldr	w0, [x29, #396]
   11188:	ldr	w1, [x29, #384]
   1118c:	cbz	w0, 1119c <argp_parse@@Base+0x3b8>
   11190:	cmp	w0, w1
   11194:	b.le	1119c <argp_parse@@Base+0x3b8>
   11198:	str	wzr, [x29, #396]
   1119c:	ldr	w0, [x29, #352]
   111a0:	cbz	w0, 11218 <argp_parse@@Base+0x434>
   111a4:	ldr	w22, [x29, #396]
   111a8:	cbnz	w22, 11218 <argp_parse@@Base+0x434>
   111ac:	ldr	w4, [x29, #388]
   111b0:	add	x5, x21, #0x18
   111b4:	str	w1, [x29, #272]
   111b8:	mov	w1, #0xffffffff            	// #-1
   111bc:	str	w1, [x29, #280]
   111c0:	ldr	w0, [x29, #368]
   111c4:	ldp	x2, x3, [x29, #256]
   111c8:	ldr	x1, [x29, #376]
   111cc:	tbz	w4, #6, 112c4 <argp_parse@@Base+0x4e0>
   111d0:	mov	x4, #0x0                   	// #0
   111d4:	bl	aed0 <_getopt_long_only_r@plt>
   111d8:	ldr	w19, [x29, #272]
   111dc:	mov	w20, w0
   111e0:	str	w19, [x29, #384]
   111e4:	cmn	w0, #0x1
   111e8:	b.ne	112d0 <argp_parse@@Base+0x4ec>  // b.any
   111ec:	str	wzr, [x29, #352]
   111f0:	cmp	w19, #0x1
   111f4:	b.le	11218 <argp_parse@@Base+0x434>
   111f8:	mov	x0, #0xfffffffffffffff8    	// #-8
   111fc:	mov	x1, x26
   11200:	ldr	x2, [x29, #376]
   11204:	add	x0, x0, w19, sxtw #3
   11208:	ldr	x0, [x2, x0]
   1120c:	bl	afa0 <strcmp@plt>
   11210:	cbnz	w0, 11218 <argp_parse@@Base+0x434>
   11214:	str	w19, [x29, #396]
   11218:	ldr	w1, [x29, #368]
   1121c:	ldr	w0, [x29, #384]
   11220:	cmp	w0, w1
   11224:	b.ge	11510 <argp_parse@@Base+0x72c>  // b.tcont
   11228:	ldr	w1, [x29, #388]
   1122c:	tbnz	w1, #2, 11510 <argp_parse@@Base+0x72c>
   11230:	add	w1, w0, #0x1
   11234:	str	w1, [x29, #384]
   11238:	ldr	x1, [x29, #376]
   1123c:	ldr	x0, [x1, w0, sxtw #3]
   11240:	str	x0, [x29, #288]
   11244:	ldr	w22, [x29, #384]
   11248:	mov	w0, #0x0                   	// #0
   1124c:	ldr	x27, [x29, #288]
   11250:	sub	w22, w22, #0x1
   11254:	ldr	x20, [x29, #328]
   11258:	mov	w19, #0x7                   	// #7
   1125c:	str	w22, [x29, #384]
   11260:	ldr	x1, [x29, #336]
   11264:	cmp	x20, x1
   11268:	b.cs	11274 <argp_parse@@Base+0x490>  // b.hs, b.nlast
   1126c:	cmp	w19, #0x7
   11270:	b.eq	112ec <argp_parse@@Base+0x508>  // b.none
   11274:	cbnz	w19, 11430 <argp_parse@@Base+0x64c>
   11278:	cmp	w0, w25
   1127c:	b.ne	11288 <argp_parse@@Base+0x4a4>  // b.any
   11280:	ldr	w0, [x29, #368]
   11284:	str	w0, [x29, #384]
   11288:	ldr	w0, [x29, #384]
   1128c:	cmp	w22, w0
   11290:	b.ge	11350 <argp_parse@@Base+0x56c>  // b.tcont
   11294:	sub	w22, w0, w22
   11298:	ldur	w0, [x20, #-48]
   1129c:	add	w22, w0, w22
   112a0:	stur	w22, [x20, #-48]
   112a4:	b	11184 <argp_parse@@Base+0x3a0>
   112a8:	mov	w0, #0x1                   	// #1
   112ac:	str	w0, [x29, #276]
   112b0:	b	11154 <argp_parse@@Base+0x370>
   112b4:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   112b8:	ldr	x0, [x0, #4008]
   112bc:	ldr	x0, [x0]
   112c0:	b	1116c <argp_parse@@Base+0x388>
   112c4:	mov	x4, #0x0                   	// #0
   112c8:	bl	afb0 <_getopt_long_r@plt>
   112cc:	b	111d8 <argp_parse@@Base+0x3f4>
   112d0:	cmp	w0, #0x3f
   112d4:	b.ne	11684 <argp_parse@@Base+0x8a0>  // b.any
   112d8:	ldr	w0, [x29, #280]
   112dc:	cmn	w0, #0x1
   112e0:	b.eq	1168c <argp_parse@@Base+0x8a8>  // b.none
   112e4:	mov	w19, #0x7                   	// #7
   112e8:	b	11444 <argp_parse@@Base+0x660>
   112ec:	ldr	w0, [x29, #384]
   112f0:	mov	x3, x27
   112f4:	mov	x1, x24
   112f8:	mov	w2, #0x0                   	// #0
   112fc:	add	w0, w0, #0x1
   11300:	str	w0, [x29, #384]
   11304:	mov	x0, x20
   11308:	bl	108e4 <argp_error@@Base+0x11c>
   1130c:	mov	w19, w0
   11310:	cmp	w0, #0x7
   11314:	b.ne	11348 <argp_parse@@Base+0x564>  // b.any
   11318:	ldr	w0, [x29, #384]
   1131c:	mov	w2, w25
   11320:	mov	x1, x24
   11324:	mov	x3, #0x0                   	// #0
   11328:	sub	w0, w0, #0x1
   1132c:	str	w0, [x29, #384]
   11330:	mov	x0, x20
   11334:	bl	108e4 <argp_error@@Base+0x11c>
   11338:	mov	w19, w0
   1133c:	mov	w0, w25
   11340:	add	x20, x20, #0x48
   11344:	b	11260 <argp_parse@@Base+0x47c>
   11348:	mov	w0, #0x0                   	// #0
   1134c:	b	11340 <argp_parse@@Base+0x55c>
   11350:	mov	w0, #0x1                   	// #1
   11354:	str	w0, [x29, #352]
   11358:	b	11184 <argp_parse@@Base+0x3a0>
   1135c:	ldp	x0, x2, [x29, #328]
   11360:	cmp	x0, x2
   11364:	b.cs	116ac <argp_parse@@Base+0x8c8>  // b.hs, b.nlast
   11368:	ldr	x3, [x0, #16]
   1136c:	cmp	x1, x3
   11370:	b.cs	113e8 <argp_parse@@Base+0x604>  // b.hs, b.nlast
   11374:	ldr	x3, [x29, #288]
   11378:	mov	w2, w20
   1137c:	mov	x1, x24
   11380:	bl	108e4 <argp_error@@Base+0x11c>
   11384:	mov	w19, w0
   11388:	cmp	w0, #0x7
   1138c:	b.ne	11440 <argp_parse@@Base+0x65c>  // b.any
   11390:	cbz	w27, 116ac <argp_parse@@Base+0x8c8>
   11394:	ldr	x0, [x29, #264]
   11398:	ldr	w1, [x0, #24]
   1139c:	ldr	x19, [x0]
   113a0:	cmp	w20, w1
   113a4:	b.ne	11424 <argp_parse@@Base+0x640>  // b.any
   113a8:	cbnz	x19, 113b4 <argp_parse@@Base+0x5d0>
   113ac:	adrp	x19, 27000 <vasnprintf@@Base+0x1170>
   113b0:	add	x19, x19, #0x642
   113b4:	mov	w2, #0x5                   	// #5
   113b8:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   113bc:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   113c0:	add	x1, x1, #0x713
   113c4:	add	x0, x0, #0x2ee
   113c8:	bl	b3f0 <dcgettext@plt>
   113cc:	mov	x2, x19
   113d0:	mov	x3, x0
   113d4:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   113d8:	add	x0, x21, #0x70
   113dc:	add	x1, x1, #0x651
   113e0:	bl	b1b0 <argp_error@plt>
   113e4:	b	116dc <argp_parse@@Base+0x8f8>
   113e8:	add	x0, x0, #0x48
   113ec:	b	11360 <argp_parse@@Base+0x57c>
   113f0:	mov	w0, #0xff000000            	// #-16777216
   113f4:	ands	w1, w20, #0x800000
   113f8:	csel	w1, w1, w0, eq  // eq = none
   113fc:	mov	x3, #0xffffffffffffffb8    	// #-72
   11400:	mov	w0, #0x48                  	// #72
   11404:	and	w2, w20, #0xffffff
   11408:	ldr	x4, [x29, #328]
   1140c:	smaddl	x0, w27, w0, x3
   11410:	orr	w2, w2, w1
   11414:	mov	x1, x24
   11418:	add	x0, x4, x0
   1141c:	ldr	x3, [x29, #288]
   11420:	b	11380 <argp_parse@@Base+0x59c>
   11424:	cbz	x19, 113ac <argp_parse@@Base+0x5c8>
   11428:	add	x0, x0, #0x20
   1142c:	b	11398 <argp_parse@@Base+0x5b4>
   11430:	cmp	w19, #0x7
   11434:	b.ne	11518 <argp_parse@@Base+0x734>  // b.any
   11438:	mov	w20, #0x1                   	// #1
   1143c:	b	116dc <argp_parse@@Base+0x8f8>
   11440:	cbz	w0, 11184 <argp_parse@@Base+0x3a0>
   11444:	cmp	w19, #0x7
   11448:	and	w22, w22, #0x1
   1144c:	csel	w22, w22, wzr, eq  // eq = none
   11450:	cbz	w22, 1162c <argp_parse@@Base+0x848>
   11454:	ldr	w1, [x29, #368]
   11458:	ldr	w0, [x29, #384]
   1145c:	cmp	w0, w1
   11460:	b.ne	11584 <argp_parse@@Base+0x7a0>  // b.any
   11464:	ldr	x22, [x29, #328]
   11468:	mov	w25, #0x2                   	// #2
   1146c:	add	x24, x21, #0x70
   11470:	mov	w19, #0x0                   	// #0
   11474:	movk	w25, #0x100, lsl #16
   11478:	ldr	x20, [x29, #336]
   1147c:	cmp	x22, x20
   11480:	b.cs	11490 <argp_parse@@Base+0x6ac>  // b.hs, b.nlast
   11484:	cmp	w19, #0x0
   11488:	ccmp	w19, #0x7, #0x4, ne  // ne = any
   1148c:	b.eq	11520 <argp_parse@@Base+0x73c>  // b.none
   11490:	mov	w24, #0x1                   	// #1
   11494:	sub	x20, x20, #0x48
   11498:	add	x22, x21, #0x70
   1149c:	movk	w24, #0x100, lsl #16
   114a0:	ldr	x0, [x29, #328]
   114a4:	cmp	x20, x0
   114a8:	b.cc	11568 <argp_parse@@Base+0x784>  // b.lo, b.ul, b.last
   114ac:	cmp	w19, #0x0
   114b0:	ccmp	w19, #0x7, #0x4, ne  // ne = any
   114b4:	b.eq	11548 <argp_parse@@Base+0x764>  // b.none
   114b8:	cbnz	x23, 11574 <argp_parse@@Base+0x790>
   114bc:	ldr	x20, [x29, #328]
   114c0:	mov	w23, #0x5                   	// #5
   114c4:	add	x22, x21, #0x70
   114c8:	movk	w23, #0x100, lsl #16
   114cc:	ldr	x0, [x29, #336]
   114d0:	cmp	x20, x0
   114d4:	b.cc	11634 <argp_parse@@Base+0x850>  // b.lo, b.ul, b.last
   114d8:	ldr	x20, [x29, #336]
   114dc:	mov	w22, #0x7                   	// #7
   114e0:	add	x21, x21, #0x70
   114e4:	movk	w22, #0x100, lsl #16
   114e8:	sub	x20, x20, #0x48
   114ec:	ldr	x0, [x29, #328]
   114f0:	cmp	x20, x0
   114f4:	b.cs	1165c <argp_parse@@Base+0x878>  // b.hs, b.nlast
   114f8:	cmp	w19, #0x7
   114fc:	mov	w0, #0x16                  	// #22
   11500:	csel	w19, w19, w0, ne  // ne = any
   11504:	ldr	x0, [x29, #456]
   11508:	bl	b050 <free@plt>
   1150c:	b	10f44 <argp_parse@@Base+0x160>
   11510:	mov	w22, #0x1                   	// #1
   11514:	b	112e4 <argp_parse@@Base+0x500>
   11518:	mov	w22, #0x0                   	// #0
   1151c:	b	11444 <argp_parse@@Base+0x660>
   11520:	ldr	w0, [x22, #24]
   11524:	cbnz	w0, 11540 <argp_parse@@Base+0x75c>
   11528:	mov	w2, w25
   1152c:	mov	x1, x24
   11530:	mov	x0, x22
   11534:	mov	x3, #0x0                   	// #0
   11538:	bl	108e4 <argp_error@@Base+0x11c>
   1153c:	mov	w19, w0
   11540:	add	x22, x22, #0x48
   11544:	b	11478 <argp_parse@@Base+0x694>
   11548:	mov	x0, x20
   1154c:	mov	w2, w24
   11550:	mov	x1, x22
   11554:	mov	x3, #0x0                   	// #0
   11558:	sub	x20, x20, #0x48
   1155c:	bl	108e4 <argp_error@@Base+0x11c>
   11560:	mov	w19, w0
   11564:	b	114a0 <argp_parse@@Base+0x6bc>
   11568:	cmp	w19, #0x7
   1156c:	b.eq	11678 <argp_parse@@Base+0x894>  // b.none
   11570:	cbz	x23, 1157c <argp_parse@@Base+0x798>
   11574:	ldr	w0, [x29, #384]
   11578:	str	w0, [x23]
   1157c:	cbz	w19, 1158c <argp_parse@@Base+0x7a8>
   11580:	b	114bc <argp_parse@@Base+0x6d8>
   11584:	cbz	x23, 115dc <argp_parse@@Base+0x7f8>
   11588:	str	w0, [x23]
   1158c:	ldr	x20, [x29, #336]
   11590:	mov	w23, #0x4                   	// #4
   11594:	add	x22, x21, #0x70
   11598:	mov	w19, #0x0                   	// #0
   1159c:	sub	x20, x20, #0x48
   115a0:	movk	w23, #0x100, lsl #16
   115a4:	ldr	x0, [x29, #328]
   115a8:	cmp	x20, x0
   115ac:	b.cc	11650 <argp_parse@@Base+0x86c>  // b.lo, b.ul, b.last
   115b0:	cmp	w19, #0x0
   115b4:	ccmp	w19, #0x7, #0x4, ne  // ne = any
   115b8:	b.ne	114d8 <argp_parse@@Base+0x6f4>  // b.any
   115bc:	mov	x0, x20
   115c0:	mov	w2, w23
   115c4:	mov	x1, x22
   115c8:	mov	x3, #0x0                   	// #0
   115cc:	sub	x20, x20, #0x48
   115d0:	bl	108e4 <argp_error@@Base+0x11c>
   115d4:	mov	w19, w0
   115d8:	b	115a4 <argp_parse@@Base+0x7c0>
   115dc:	ldr	w0, [x29, #388]
   115e0:	tbnz	w0, #1, 11614 <argp_parse@@Base+0x830>
   115e4:	ldr	x19, [x29, #432]
   115e8:	cbz	x19, 11614 <argp_parse@@Base+0x830>
   115ec:	mov	w2, #0x5                   	// #5
   115f0:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   115f4:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   115f8:	add	x1, x1, #0x65a
   115fc:	add	x0, x0, #0x2ee
   11600:	bl	b3f0 <dcgettext@plt>
   11604:	ldr	x2, [x29, #424]
   11608:	mov	x1, x0
   1160c:	mov	x0, x19
   11610:	bl	b640 <fprintf@plt>
   11614:	ldr	x1, [x29, #432]
   11618:	add	x0, x21, #0x70
   1161c:	mov	w2, #0x104                 	// #260
   11620:	mov	w19, #0x7                   	// #7
   11624:	bl	b3d0 <argp_state_help@plt>
   11628:	b	114bc <argp_parse@@Base+0x6d8>
   1162c:	b.ne	114bc <argp_parse@@Base+0x6d8>  // b.any
   11630:	b	11614 <argp_parse@@Base+0x830>
   11634:	mov	x0, x20
   11638:	mov	w2, w23
   1163c:	mov	x1, x22
   11640:	mov	x3, #0x0                   	// #0
   11644:	add	x20, x20, #0x48
   11648:	bl	108e4 <argp_error@@Base+0x11c>
   1164c:	b	114cc <argp_parse@@Base+0x6e8>
   11650:	cmp	w19, #0x7
   11654:	csel	w19, w19, wzr, ne  // ne = any
   11658:	b	114d8 <argp_parse@@Base+0x6f4>
   1165c:	mov	x0, x20
   11660:	mov	w2, w22
   11664:	mov	x1, x21
   11668:	mov	x3, #0x0                   	// #0
   1166c:	sub	x20, x20, #0x48
   11670:	bl	108e4 <argp_error@@Base+0x11c>
   11674:	b	114ec <argp_parse@@Base+0x708>
   11678:	cbz	x23, 1158c <argp_parse@@Base+0x7a8>
   1167c:	mov	w19, #0x0                   	// #0
   11680:	b	11574 <argp_parse@@Base+0x790>
   11684:	cmp	w0, #0x1
   11688:	b.eq	11244 <argp_parse@@Base+0x460>  // b.none
   1168c:	asr	w27, w20, #24
   11690:	cmp	wzr, w20, asr #24
   11694:	b.ne	113f0 <argp_parse@@Base+0x60c>  // b.any
   11698:	ldr	x0, [x29, #256]
   1169c:	mov	w1, w20
   116a0:	bl	b190 <strchr@plt>
   116a4:	mov	x1, x0
   116a8:	cbnz	x0, 1135c <argp_parse@@Base+0x578>
   116ac:	mov	w2, #0x5                   	// #5
   116b0:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   116b4:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   116b8:	add	x1, x1, #0x713
   116bc:	add	x0, x0, #0x2ee
   116c0:	bl	b3f0 <dcgettext@plt>
   116c4:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   116c8:	mov	x3, x0
   116cc:	mov	w2, w20
   116d0:	add	x1, x1, #0x649
   116d4:	add	x0, x21, #0x70
   116d8:	bl	b1b0 <argp_error@plt>
   116dc:	cmp	w20, #0x1
   116e0:	cset	w22, eq  // eq = none
   116e4:	b	112e4 <argp_parse@@Base+0x500>

00000000000116e8 <_argp_input@@Base>:
   116e8:	mov	x2, x0
   116ec:	mov	x0, x1
   116f0:	cbz	x1, 1171c <_argp_input@@Base+0x34>
   116f4:	ldr	x0, [x1, #88]
   116f8:	ldp	x1, x0, [x0, #80]
   116fc:	cmp	x0, x1
   11700:	b.hi	1170c <_argp_input@@Base+0x24>  // b.pmore
   11704:	mov	x0, #0x0                   	// #0
   11708:	b	1171c <_argp_input@@Base+0x34>
   1170c:	ldr	x3, [x1, #8]
   11710:	cmp	x3, x2
   11714:	b.ne	11720 <_argp_input@@Base+0x38>  // b.any
   11718:	ldr	x0, [x1, #48]
   1171c:	ret
   11720:	add	x1, x1, #0x48
   11724:	b	116fc <_argp_input@@Base+0x14>

0000000000011728 <argp_usage@@Base>:
   11728:	adrp	x1, 40000 <vasnprintf@@Base+0x1a170>
   1172c:	mov	w2, #0x106                 	// #262
   11730:	ldr	x1, [x1, #3816]
   11734:	ldr	x1, [x1]
   11738:	b	b3d0 <argp_state_help@plt>

000000000001173c <_option_is_short@@Base>:
   1173c:	ldr	w2, [x0, #24]
   11740:	tbnz	w2, #3, 11784 <_option_is_short@@Base+0x48>
   11744:	stp	x29, x30, [sp, #-32]!
   11748:	mov	x1, x0
   1174c:	and	w0, w2, #0x8
   11750:	mov	x29, sp
   11754:	str	x19, [sp, #16]
   11758:	ldr	w19, [x1, #8]
   1175c:	sub	w1, w19, #0x1
   11760:	cmp	w1, #0xfe
   11764:	b.hi	11778 <_option_is_short@@Base+0x3c>  // b.pmore
   11768:	bl	afc0 <__ctype_b_loc@plt>
   1176c:	ldr	x0, [x0]
   11770:	ldrh	w0, [x0, w19, sxtw #1]
   11774:	ubfx	x0, x0, #14, #1
   11778:	ldr	x19, [sp, #16]
   1177c:	ldp	x29, x30, [sp], #32
   11780:	ret
   11784:	mov	w0, #0x0                   	// #0
   11788:	ret

000000000001178c <_option_is_end@@Base>:
   1178c:	mov	x1, x0
   11790:	ldr	w0, [x0, #8]
   11794:	cbnz	w0, 117b8 <_option_is_end@@Base+0x2c>
   11798:	ldr	x2, [x1]
   1179c:	cbnz	x2, 117b4 <_option_is_end@@Base+0x28>
   117a0:	ldr	x2, [x1, #32]
   117a4:	cbnz	x2, 117b4 <_option_is_end@@Base+0x28>
   117a8:	ldr	w0, [x1, #40]
   117ac:	cmp	w0, #0x0
   117b0:	cset	w0, eq  // eq = none
   117b4:	ret
   117b8:	mov	w0, #0x0                   	// #0
   117bc:	b	117b4 <_option_is_end@@Base+0x28>
   117c0:	ldr	x0, [x0, #48]
   117c4:	ret
   117c8:	ldp	x2, x1, [x0, #40]
   117cc:	stp	x1, x2, [x8, #16]
   117d0:	ldr	x3, [x0]
   117d4:	stp	x3, x0, [x8]
   117d8:	add	x1, x2, x1, lsl #3
   117dc:	str	x1, [x8, #32]
   117e0:	ret
   117e4:	ret
   117e8:	ldp	x4, x5, [x0, #8]
   117ec:	ldr	x3, [x4, #48]
   117f0:	cmp	x5, x3
   117f4:	b.eq	1182c <_option_is_end@@Base+0xa0>  // b.none
   117f8:	add	x6, x3, #0x1
   117fc:	cmp	x5, x6
   11800:	b.eq	11810 <_option_is_end@@Base+0x84>  // b.none
   11804:	stp	x29, x30, [sp, #-16]!
   11808:	mov	x29, sp
   1180c:	bl	aeb0 <abort@plt>
   11810:	str	x3, [x0, #16]
   11814:	ldr	x3, [x0, #24]
   11818:	sub	x3, x3, #0x8
   1181c:	str	x3, [x0, #24]
   11820:	ldr	x3, [x0, #32]
   11824:	sub	x3, x3, #0x8
   11828:	str	x3, [x0, #32]
   1182c:	ldp	x3, x5, [x0, #24]
   11830:	cmp	x3, x5
   11834:	b.cs	11868 <_option_is_end@@Base+0xdc>  // b.hs, b.nlast
   11838:	ldr	x5, [x3]
   1183c:	str	x5, [x1]
   11840:	cbz	x2, 11858 <_option_is_end@@Base+0xcc>
   11844:	ldr	x1, [x4, #40]
   11848:	sub	x1, x3, x1
   1184c:	asr	x1, x1, #3
   11850:	add	x1, x1, #0x1
   11854:	str	x1, [x2]
   11858:	add	x3, x3, #0x8
   1185c:	str	x3, [x0, #24]
   11860:	mov	w0, #0x1                   	// #1
   11864:	ret
   11868:	mov	w0, #0x0                   	// #0
   1186c:	ret
   11870:	cmp	x1, x2
   11874:	b.hi	11884 <_option_is_end@@Base+0xf8>  // b.pmore
   11878:	ldr	x4, [x0, #48]
   1187c:	cmp	x4, x2
   11880:	b.cs	11890 <_option_is_end@@Base+0x104>  // b.hs, b.nlast
   11884:	stp	x29, x30, [sp, #-16]!
   11888:	mov	x29, sp
   1188c:	bl	aeb0 <abort@plt>
   11890:	ldr	x3, [x0, #40]
   11894:	ldr	x5, [x0]
   11898:	stp	x5, x0, [x8]
   1189c:	add	x1, x3, x1, lsl #3
   118a0:	add	x2, x3, x2, lsl #3
   118a4:	stp	x4, x1, [x8, #16]
   118a8:	str	x2, [x8, #32]
   118ac:	ret
   118b0:	stp	x29, x30, [sp, #-48]!
   118b4:	mov	x29, sp
   118b8:	stp	x21, x22, [sp, #32]
   118bc:	ldr	x21, [x0, #48]
   118c0:	stp	x19, x20, [sp, #16]
   118c4:	cmp	x21, x1
   118c8:	b.hi	118d0 <_option_is_end@@Base+0x144>  // b.pmore
   118cc:	bl	aeb0 <abort@plt>
   118d0:	mov	x19, x1
   118d4:	mov	x20, x0
   118d8:	ldr	x1, [x0, #24]
   118dc:	ldr	x22, [x0, #40]
   118e0:	cbz	x1, 118ec <_option_is_end@@Base+0x160>
   118e4:	ldr	x0, [x22, x19, lsl #3]
   118e8:	blr	x1
   118ec:	add	x1, x22, x19, lsl #3
   118f0:	add	x22, x22, x21, lsl #3
   118f4:	add	x1, x1, #0x8
   118f8:	cmp	x1, x22
   118fc:	b.ne	1191c <_option_is_end@@Base+0x190>  // b.any
   11900:	sub	x21, x21, #0x1
   11904:	str	x21, [x20, #48]
   11908:	mov	w0, #0x1                   	// #1
   1190c:	ldp	x19, x20, [sp, #16]
   11910:	ldp	x21, x22, [sp, #32]
   11914:	ldp	x29, x30, [sp], #48
   11918:	ret
   1191c:	ldr	x0, [x1]
   11920:	stur	x0, [x1, #-8]
   11924:	b	118f4 <_option_is_end@@Base+0x168>
   11928:	stp	x29, x30, [sp, #-48]!
   1192c:	mov	x29, sp
   11930:	stp	x21, x22, [sp, #32]
   11934:	ldr	x21, [x0, #48]
   11938:	stp	x19, x20, [sp, #16]
   1193c:	mov	x20, x0
   11940:	sub	x0, x1, #0x1
   11944:	cmp	x21, x0
   11948:	b.hi	11950 <_option_is_end@@Base+0x1c4>  // b.pmore
   1194c:	bl	aeb0 <abort@plt>
   11950:	mov	x19, x1
   11954:	ldr	x1, [x20, #24]
   11958:	ldr	x22, [x20, #40]
   1195c:	cbz	x1, 11968 <_option_is_end@@Base+0x1dc>
   11960:	ldr	x0, [x22, x0, lsl #3]
   11964:	blr	x1
   11968:	add	x1, x22, x19, lsl #3
   1196c:	add	x22, x22, x21, lsl #3
   11970:	cmp	x1, x22
   11974:	b.ne	11994 <_option_is_end@@Base+0x208>  // b.any
   11978:	sub	x21, x21, #0x1
   1197c:	str	x21, [x20, #48]
   11980:	mov	w0, #0x1                   	// #1
   11984:	ldp	x19, x20, [sp, #16]
   11988:	ldp	x21, x22, [sp, #32]
   1198c:	ldp	x29, x30, [sp], #48
   11990:	ret
   11994:	ldr	x0, [x1]
   11998:	add	x1, x1, #0x8
   1199c:	stur	x0, [x1, #-16]
   119a0:	b	11970 <_option_is_end@@Base+0x1e4>
   119a4:	ldr	x3, [x0, #48]
   119a8:	cmp	x3, x1
   119ac:	b.hi	119bc <_option_is_end@@Base+0x230>  // b.pmore
   119b0:	stp	x29, x30, [sp, #-16]!
   119b4:	mov	x29, sp
   119b8:	bl	aeb0 <abort@plt>
   119bc:	ldr	x0, [x0, #40]
   119c0:	str	x2, [x0, x1, lsl #3]
   119c4:	add	x0, x1, #0x1
   119c8:	ret
   119cc:	ldr	x2, [x0, #48]
   119d0:	cmp	x2, x1
   119d4:	b.hi	119e4 <_option_is_end@@Base+0x258>  // b.pmore
   119d8:	stp	x29, x30, [sp, #-16]!
   119dc:	mov	x29, sp
   119e0:	bl	aeb0 <abort@plt>
   119e4:	ldr	x0, [x0, #40]
   119e8:	ldr	x0, [x0, x1, lsl #3]
   119ec:	ret
   119f0:	ldr	x0, [x0, #48]
   119f4:	sub	x1, x1, #0x1
   119f8:	cmp	x0, x1
   119fc:	b.hi	11a0c <_option_is_end@@Base+0x280>  // b.pmore
   11a00:	stp	x29, x30, [sp, #-16]!
   11a04:	mov	x29, sp
   11a08:	bl	aeb0 <abort@plt>
   11a0c:	mov	x0, x1
   11a10:	ret
   11a14:	ldr	x0, [x0, #48]
   11a18:	sub	x2, x1, #0x1
   11a1c:	cmp	x0, x2
   11a20:	b.hi	11a30 <_option_is_end@@Base+0x2a4>  // b.pmore
   11a24:	stp	x29, x30, [sp, #-16]!
   11a28:	mov	x29, sp
   11a2c:	bl	aeb0 <abort@plt>
   11a30:	cmp	x1, x0
   11a34:	csinc	x0, xzr, x1, cs  // cs = hs, nlast
   11a38:	ret
   11a3c:	ldr	x3, [x0, #48]
   11a40:	sub	x1, x1, #0x1
   11a44:	cmp	x3, x1
   11a48:	b.hi	11a58 <_option_is_end@@Base+0x2cc>  // b.pmore
   11a4c:	stp	x29, x30, [sp, #-16]!
   11a50:	mov	x29, sp
   11a54:	bl	aeb0 <abort@plt>
   11a58:	ldr	x0, [x0, #40]
   11a5c:	str	x2, [x0, x1, lsl #3]
   11a60:	mov	w0, #0x0                   	// #0
   11a64:	ret
   11a68:	ldr	x2, [x0, #48]
   11a6c:	sub	x1, x1, #0x1
   11a70:	cmp	x2, x1
   11a74:	b.hi	11a84 <_option_is_end@@Base+0x2f8>  // b.pmore
   11a78:	stp	x29, x30, [sp, #-16]!
   11a7c:	mov	x29, sp
   11a80:	bl	aeb0 <abort@plt>
   11a84:	ldr	x0, [x0, #40]
   11a88:	ldr	x0, [x0, x1, lsl #3]
   11a8c:	ret
   11a90:	stp	x29, x30, [sp, #-64]!
   11a94:	mov	x29, sp
   11a98:	str	x23, [sp, #48]
   11a9c:	ldr	x23, [x0, #40]
   11aa0:	stp	x19, x20, [sp, #16]
   11aa4:	mov	x19, x0
   11aa8:	stp	x21, x22, [sp, #32]
   11aac:	cbz	x23, 11ae0 <_option_is_end@@Base+0x354>
   11ab0:	ldr	x22, [x0, #24]
   11ab4:	cbz	x22, 11ad8 <_option_is_end@@Base+0x34c>
   11ab8:	ldr	x21, [x0, #48]
   11abc:	cbz	x21, 11ad8 <_option_is_end@@Base+0x34c>
   11ac0:	mov	x20, #0x0                   	// #0
   11ac4:	ldr	x0, [x23, x20, lsl #3]
   11ac8:	add	x20, x20, #0x1
   11acc:	blr	x22
   11ad0:	cmp	x21, x20
   11ad4:	b.ne	11ac4 <_option_is_end@@Base+0x338>  // b.any
   11ad8:	ldr	x0, [x19, #40]
   11adc:	bl	b050 <free@plt>
   11ae0:	mov	x0, x19
   11ae4:	ldp	x19, x20, [sp, #16]
   11ae8:	ldp	x21, x22, [sp, #32]
   11aec:	ldr	x23, [sp, #48]
   11af0:	ldp	x29, x30, [sp], #64
   11af4:	b	b050 <free@plt>
   11af8:	stp	x29, x30, [sp, #-32]!
   11afc:	mov	x29, sp
   11b00:	stp	x19, x20, [sp, #16]
   11b04:	mov	x20, x0
   11b08:	ldr	x0, [x0, #56]
   11b0c:	cmp	x0, #0x0
   11b10:	lsl	x19, x0, #1
   11b14:	csinv	x19, x19, xzr, ge  // ge = tcont
   11b18:	adds	x19, x19, #0x1
   11b1c:	b.cs	11b2c <_option_is_end@@Base+0x3a0>  // b.hs, b.nlast
   11b20:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   11b24:	cmp	x19, x0
   11b28:	b.ls	11b3c <_option_is_end@@Base+0x3b0>  // b.plast
   11b2c:	mov	w0, #0xffffffff            	// #-1
   11b30:	ldp	x19, x20, [sp, #16]
   11b34:	ldp	x29, x30, [sp], #32
   11b38:	ret
   11b3c:	ldr	x0, [x20, #40]
   11b40:	lsl	x1, x19, #3
   11b44:	bl	ad60 <realloc@plt>
   11b48:	cbz	x0, 11b2c <_option_is_end@@Base+0x3a0>
   11b4c:	str	x0, [x20, #40]
   11b50:	mov	w0, #0x0                   	// #0
   11b54:	str	x19, [x20, #56]
   11b58:	b	11b30 <_option_is_end@@Base+0x3a4>
   11b5c:	stp	x29, x30, [sp, #-48]!
   11b60:	mov	x29, sp
   11b64:	stp	x21, x22, [sp, #32]
   11b68:	ldr	x21, [x0, #48]
   11b6c:	stp	x19, x20, [sp, #16]
   11b70:	cmp	x21, x1
   11b74:	b.cs	11b7c <_option_is_end@@Base+0x3f0>  // b.hs, b.nlast
   11b78:	bl	aeb0 <abort@plt>
   11b7c:	mov	x19, x1
   11b80:	mov	x20, x0
   11b84:	ldr	x1, [x0, #56]
   11b88:	mov	x22, x2
   11b8c:	cmp	x1, x21
   11b90:	b.eq	11bcc <_option_is_end@@Base+0x440>  // b.none
   11b94:	ldr	x1, [x20, #40]
   11b98:	lsl	x2, x19, #3
   11b9c:	add	x0, x1, x21, lsl #3
   11ba0:	add	x3, x1, x19, lsl #3
   11ba4:	cmp	x0, x3
   11ba8:	b.ne	11bdc <_option_is_end@@Base+0x450>  // b.any
   11bac:	add	x0, x19, #0x1
   11bb0:	str	x22, [x1, x2]
   11bb4:	add	x21, x21, #0x1
   11bb8:	str	x21, [x20, #48]
   11bbc:	ldp	x19, x20, [sp, #16]
   11bc0:	ldp	x21, x22, [sp, #32]
   11bc4:	ldp	x29, x30, [sp], #48
   11bc8:	ret
   11bcc:	bl	11af8 <_option_is_end@@Base+0x36c>
   11bd0:	tbz	w0, #31, 11b94 <_option_is_end@@Base+0x408>
   11bd4:	mov	x0, #0x0                   	// #0
   11bd8:	b	11bbc <_option_is_end@@Base+0x430>
   11bdc:	ldur	x4, [x0, #-8]
   11be0:	str	x4, [x0], #-8
   11be4:	b	11ba4 <_option_is_end@@Base+0x418>
   11be8:	stp	x29, x30, [sp, #-64]!
   11bec:	mov	x29, sp
   11bf0:	stp	x23, x24, [sp, #48]
   11bf4:	mov	x24, x1
   11bf8:	ldr	x23, [x0, #48]
   11bfc:	stp	x19, x20, [sp, #16]
   11c00:	mov	x20, x0
   11c04:	stp	x21, x22, [sp, #32]
   11c08:	mov	x22, x2
   11c0c:	mov	x21, #0x0                   	// #0
   11c10:	cmp	x21, x23
   11c14:	b.cc	11c20 <_option_is_end@@Base+0x494>  // b.lo, b.ul, b.last
   11c18:	mov	x19, x21
   11c1c:	b	11c54 <_option_is_end@@Base+0x4c8>
   11c20:	sub	x19, x23, x21
   11c24:	mov	x1, x22
   11c28:	ldr	x0, [x20, #40]
   11c2c:	add	x19, x21, x19, lsr #1
   11c30:	ldr	x0, [x0, x19, lsl #3]
   11c34:	blr	x24
   11c38:	cmp	w0, #0x0
   11c3c:	b.ge	11c50 <_option_is_end@@Base+0x4c4>  // b.tcont
   11c40:	add	x21, x19, #0x1
   11c44:	mov	x19, x23
   11c48:	mov	x23, x19
   11c4c:	b	11c10 <_option_is_end@@Base+0x484>
   11c50:	b.ne	11c48 <_option_is_end@@Base+0x4bc>  // b.any
   11c54:	mov	x2, x22
   11c58:	mov	x1, x19
   11c5c:	mov	x0, x20
   11c60:	ldp	x19, x20, [sp, #16]
   11c64:	ldp	x21, x22, [sp, #32]
   11c68:	ldp	x23, x24, [sp, #48]
   11c6c:	ldp	x29, x30, [sp], #64
   11c70:	b	11b5c <_option_is_end@@Base+0x3d0>
   11c74:	stp	x29, x30, [sp, #-48]!
   11c78:	mov	x29, sp
   11c7c:	stp	x21, x22, [sp, #32]
   11c80:	ldr	x21, [x0, #48]
   11c84:	stp	x19, x20, [sp, #16]
   11c88:	mov	x19, x1
   11c8c:	sub	x1, x1, #0x1
   11c90:	cmp	x21, x1
   11c94:	b.hi	11c9c <_option_is_end@@Base+0x510>  // b.pmore
   11c98:	bl	aeb0 <abort@plt>
   11c9c:	ldr	x1, [x0, #56]
   11ca0:	mov	x20, x0
   11ca4:	mov	x22, x2
   11ca8:	cmp	x1, x21
   11cac:	b.eq	11ce8 <_option_is_end@@Base+0x55c>  // b.none
   11cb0:	ldr	x1, [x20, #40]
   11cb4:	lsl	x2, x19, #3
   11cb8:	add	x0, x1, x21, lsl #3
   11cbc:	add	x3, x1, x19, lsl #3
   11cc0:	cmp	x0, x3
   11cc4:	b.ne	11cf8 <_option_is_end@@Base+0x56c>  // b.any
   11cc8:	add	x0, x19, #0x1
   11ccc:	str	x22, [x1, x2]
   11cd0:	add	x21, x21, #0x1
   11cd4:	str	x21, [x20, #48]
   11cd8:	ldp	x19, x20, [sp, #16]
   11cdc:	ldp	x21, x22, [sp, #32]
   11ce0:	ldp	x29, x30, [sp], #48
   11ce4:	ret
   11ce8:	bl	11af8 <_option_is_end@@Base+0x36c>
   11cec:	tbz	w0, #31, 11cb0 <_option_is_end@@Base+0x524>
   11cf0:	mov	x0, #0x0                   	// #0
   11cf4:	b	11cd8 <_option_is_end@@Base+0x54c>
   11cf8:	ldur	x4, [x0, #-8]
   11cfc:	str	x4, [x0], #-8
   11d00:	b	11cc0 <_option_is_end@@Base+0x534>
   11d04:	stp	x29, x30, [sp, #-64]!
   11d08:	mov	x29, sp
   11d0c:	stp	x19, x20, [sp, #16]
   11d10:	ldr	x20, [x0, #48]
   11d14:	stp	x21, x22, [sp, #32]
   11d18:	sub	x22, x1, #0x1
   11d1c:	str	x23, [sp, #48]
   11d20:	cmp	x20, x22
   11d24:	b.hi	11d2c <_option_is_end@@Base+0x5a0>  // b.pmore
   11d28:	bl	aeb0 <abort@plt>
   11d2c:	mov	x21, x1
   11d30:	mov	x19, x0
   11d34:	ldr	x1, [x0, #56]
   11d38:	mov	x23, x2
   11d3c:	cmp	x1, x20
   11d40:	b.eq	11d88 <_option_is_end@@Base+0x5fc>  // b.none
   11d44:	ldr	x1, [x19, #40]
   11d48:	mov	x0, x20
   11d4c:	sub	x3, x1, #0x8
   11d50:	ldr	x2, [x3, x0, lsl #3]
   11d54:	str	x2, [x1, x0, lsl #3]
   11d58:	sub	x0, x0, #0x1
   11d5c:	cmp	x22, x0
   11d60:	b.cc	11d50 <_option_is_end@@Base+0x5c4>  // b.lo, b.ul, b.last
   11d64:	str	x23, [x1, x22, lsl #3]
   11d68:	add	x20, x20, #0x1
   11d6c:	str	x20, [x19, #48]
   11d70:	mov	x0, x21
   11d74:	ldp	x19, x20, [sp, #16]
   11d78:	ldp	x21, x22, [sp, #32]
   11d7c:	ldr	x23, [sp, #48]
   11d80:	ldp	x29, x30, [sp], #64
   11d84:	ret
   11d88:	bl	11af8 <_option_is_end@@Base+0x36c>
   11d8c:	tbz	w0, #31, 11d44 <_option_is_end@@Base+0x5b8>
   11d90:	mov	x21, #0x0                   	// #0
   11d94:	b	11d70 <_option_is_end@@Base+0x5e4>
   11d98:	stp	x29, x30, [sp, #-48]!
   11d9c:	mov	x29, sp
   11da0:	stp	x19, x20, [sp, #16]
   11da4:	mov	x20, x0
   11da8:	ldr	x19, [x0, #48]
   11dac:	str	x21, [sp, #32]
   11db0:	mov	x21, x1
   11db4:	ldr	x1, [x0, #56]
   11db8:	cmp	x1, x19
   11dbc:	b.eq	11de0 <_option_is_end@@Base+0x654>  // b.none
   11dc0:	ldr	x0, [x20, #40]
   11dc4:	str	x21, [x0, x19, lsl #3]
   11dc8:	add	x0, x19, #0x1
   11dcc:	str	x0, [x20, #48]
   11dd0:	ldp	x19, x20, [sp, #16]
   11dd4:	ldr	x21, [sp, #32]
   11dd8:	ldp	x29, x30, [sp], #48
   11ddc:	ret
   11de0:	bl	11af8 <_option_is_end@@Base+0x36c>
   11de4:	tbz	w0, #31, 11dc0 <_option_is_end@@Base+0x634>
   11de8:	mov	x0, #0x0                   	// #0
   11dec:	b	11dd0 <_option_is_end@@Base+0x644>
   11df0:	stp	x29, x30, [sp, #-48]!
   11df4:	mov	x29, sp
   11df8:	stp	x19, x20, [sp, #16]
   11dfc:	mov	x19, x0
   11e00:	ldr	x20, [x0, #48]
   11e04:	str	x21, [sp, #32]
   11e08:	mov	x21, x1
   11e0c:	ldr	x1, [x0, #56]
   11e10:	cmp	x1, x20
   11e14:	b.eq	11e48 <_option_is_end@@Base+0x6bc>  // b.none
   11e18:	ldr	x1, [x19, #40]
   11e1c:	add	x0, x1, x20, lsl #3
   11e20:	cmp	x0, x1
   11e24:	b.ne	11e58 <_option_is_end@@Base+0x6cc>  // b.any
   11e28:	str	x21, [x0]
   11e2c:	add	x20, x20, #0x1
   11e30:	mov	x0, #0x1                   	// #1
   11e34:	str	x20, [x19, #48]
   11e38:	ldp	x19, x20, [sp, #16]
   11e3c:	ldr	x21, [sp, #32]
   11e40:	ldp	x29, x30, [sp], #48
   11e44:	ret
   11e48:	bl	11af8 <_option_is_end@@Base+0x36c>
   11e4c:	tbz	w0, #31, 11e18 <_option_is_end@@Base+0x68c>
   11e50:	mov	x0, #0x0                   	// #0
   11e54:	b	11e38 <_option_is_end@@Base+0x6ac>
   11e58:	ldur	x2, [x0, #-8]
   11e5c:	str	x2, [x0], #-8
   11e60:	b	11e20 <_option_is_end@@Base+0x694>
   11e64:	stp	x29, x30, [sp, #-64]!
   11e68:	mov	x29, sp
   11e6c:	stp	x19, x20, [sp, #16]
   11e70:	mov	x20, x2
   11e74:	mov	x19, x3
   11e78:	stp	x21, x22, [sp, #32]
   11e7c:	mov	x22, x0
   11e80:	mov	x21, x1
   11e84:	mov	x0, #0x40                  	// #64
   11e88:	str	x23, [sp, #48]
   11e8c:	and	w23, w4, #0xff
   11e90:	bl	aab0 <malloc@plt>
   11e94:	cbz	x0, 11eac <_option_is_end@@Base+0x720>
   11e98:	stp	x22, x21, [x0]
   11e9c:	stp	x20, x19, [x0, #16]
   11ea0:	strb	w23, [x0, #32]
   11ea4:	stp	xzr, xzr, [x0, #40]
   11ea8:	str	xzr, [x0, #56]
   11eac:	ldp	x19, x20, [sp, #16]
   11eb0:	ldp	x21, x22, [sp, #32]
   11eb4:	ldr	x23, [sp, #48]
   11eb8:	ldp	x29, x30, [sp], #64
   11ebc:	ret
   11ec0:	stp	x29, x30, [sp, #-80]!
   11ec4:	mov	x29, sp
   11ec8:	stp	x19, x20, [sp, #16]
   11ecc:	mov	x20, x5
   11ed0:	stp	x21, x22, [sp, #32]
   11ed4:	mov	x22, x3
   11ed8:	mov	x21, x6
   11edc:	stp	x23, x24, [sp, #48]
   11ee0:	mov	x24, x1
   11ee4:	mov	x23, x2
   11ee8:	stp	x25, x26, [sp, #64]
   11eec:	mov	x25, x0
   11ef0:	and	w26, w4, #0xff
   11ef4:	mov	x0, #0x40                  	// #64
   11ef8:	bl	aab0 <malloc@plt>
   11efc:	mov	x19, x0
   11f00:	cbz	x0, 11f44 <_option_is_end@@Base+0x7b8>
   11f04:	stp	x25, x24, [x0]
   11f08:	stp	x23, x22, [x0, #16]
   11f0c:	strb	w26, [x0, #32]
   11f10:	cbz	x20, 11f60 <_option_is_end@@Base+0x7d4>
   11f14:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   11f18:	cmp	x20, x0
   11f1c:	b.hi	11f68 <_option_is_end@@Base+0x7dc>  // b.pmore
   11f20:	lsl	x22, x20, #3
   11f24:	mov	x0, x22
   11f28:	bl	aab0 <malloc@plt>
   11f2c:	str	x0, [x19, #40]
   11f30:	cbz	x0, 11f68 <_option_is_end@@Base+0x7dc>
   11f34:	mov	x2, x22
   11f38:	mov	x1, x21
   11f3c:	bl	a6f0 <memcpy@plt>
   11f40:	stp	x20, x20, [x19, #48]
   11f44:	mov	x0, x19
   11f48:	ldp	x19, x20, [sp, #16]
   11f4c:	ldp	x21, x22, [sp, #32]
   11f50:	ldp	x23, x24, [sp, #48]
   11f54:	ldp	x25, x26, [sp, #64]
   11f58:	ldp	x29, x30, [sp], #80
   11f5c:	ret
   11f60:	str	xzr, [x0, #40]
   11f64:	b	11f40 <_option_is_end@@Base+0x7b4>
   11f68:	mov	x0, x19
   11f6c:	mov	x19, #0x0                   	// #0
   11f70:	bl	b050 <free@plt>
   11f74:	b	11f44 <_option_is_end@@Base+0x7b8>
   11f78:	stp	x29, x30, [sp, #-64]!
   11f7c:	cmp	x2, x3
   11f80:	mov	x29, sp
   11f84:	stp	x19, x20, [sp, #16]
   11f88:	stp	x21, x22, [sp, #32]
   11f8c:	stp	x23, x24, [sp, #48]
   11f90:	b.hi	11fa8 <_option_is_end@@Base+0x81c>  // b.pmore
   11f94:	mov	x22, x0
   11f98:	mov	x20, x3
   11f9c:	ldr	x0, [x0, #48]
   11fa0:	cmp	x0, x3
   11fa4:	b.cs	11fac <_option_is_end@@Base+0x820>  // b.hs, b.nlast
   11fa8:	bl	aeb0 <abort@plt>
   11fac:	mov	x23, x1
   11fb0:	mov	x19, x2
   11fb4:	mov	x24, x4
   11fb8:	cmp	x19, x20
   11fbc:	b.cs	12054 <_option_is_end@@Base+0x8c8>  // b.hs, b.nlast
   11fc0:	sub	x21, x20, x19
   11fc4:	mov	x1, x24
   11fc8:	ldr	x0, [x22, #40]
   11fcc:	add	x21, x19, x21, lsr #1
   11fd0:	ldr	x0, [x0, x21, lsl #3]
   11fd4:	blr	x23
   11fd8:	cmp	w0, #0x0
   11fdc:	b.ge	11fe8 <_option_is_end@@Base+0x85c>  // b.tcont
   11fe0:	add	x19, x21, #0x1
   11fe4:	b	11fb8 <_option_is_end@@Base+0x82c>
   11fe8:	b.ne	1204c <_option_is_end@@Base+0x8c0>  // b.any
   11fec:	cmp	x21, x19
   11ff0:	b.hi	12010 <_option_is_end@@Base+0x884>  // b.pmore
   11ff4:	mov	x20, x19
   11ff8:	mov	x0, x20
   11ffc:	ldp	x19, x20, [sp, #16]
   12000:	ldp	x21, x22, [sp, #32]
   12004:	ldp	x23, x24, [sp, #48]
   12008:	ldp	x29, x30, [sp], #64
   1200c:	ret
   12010:	sub	x20, x21, x19
   12014:	mov	x1, x24
   12018:	ldr	x0, [x22, #40]
   1201c:	add	x20, x19, x20, lsr #1
   12020:	ldr	x0, [x0, x20, lsl #3]
   12024:	blr	x23
   12028:	cmp	w0, #0x0
   1202c:	b.ge	12038 <_option_is_end@@Base+0x8ac>  // b.tcont
   12030:	add	x19, x20, #0x1
   12034:	b	11fec <_option_is_end@@Base+0x860>
   12038:	b.ne	11fa8 <_option_is_end@@Base+0x81c>  // b.any
   1203c:	cmp	x19, x20
   12040:	b.eq	11ff8 <_option_is_end@@Base+0x86c>  // b.none
   12044:	sub	x21, x20, #0x1
   12048:	b	11fec <_option_is_end@@Base+0x860>
   1204c:	mov	x20, x21
   12050:	b	11fb8 <_option_is_end@@Base+0x82c>
   12054:	mov	x20, #0xffffffffffffffff    	// #-1
   12058:	b	11ff8 <_option_is_end@@Base+0x86c>
   1205c:	ldr	x3, [x0, #48]
   12060:	mov	x4, x2
   12064:	mov	x2, #0x0                   	// #0
   12068:	b	11f78 <_option_is_end@@Base+0x7ec>
   1206c:	stp	x29, x30, [sp, #-32]!
   12070:	mov	x29, sp
   12074:	str	x19, [sp, #16]
   12078:	mov	x19, x0
   1207c:	bl	1205c <_option_is_end@@Base+0x8d0>
   12080:	cmn	x0, #0x1
   12084:	b.eq	1209c <_option_is_end@@Base+0x910>  // b.none
   12088:	mov	x1, x0
   1208c:	mov	x0, x19
   12090:	ldr	x19, [sp, #16]
   12094:	ldp	x29, x30, [sp], #32
   12098:	b	118b0 <_option_is_end@@Base+0x124>
   1209c:	mov	w0, #0x0                   	// #0
   120a0:	ldr	x19, [sp, #16]
   120a4:	ldp	x29, x30, [sp], #32
   120a8:	ret
   120ac:	stp	x29, x30, [sp, #-16]!
   120b0:	mov	x29, sp
   120b4:	bl	11f78 <_option_is_end@@Base+0x7ec>
   120b8:	add	x0, x0, #0x1
   120bc:	ldp	x29, x30, [sp], #16
   120c0:	ret
   120c4:	stp	x29, x30, [sp, #-16]!
   120c8:	mov	x4, x2
   120cc:	mov	x2, #0x0                   	// #0
   120d0:	mov	x29, sp
   120d4:	ldr	x3, [x0, #48]
   120d8:	bl	11f78 <_option_is_end@@Base+0x7ec>
   120dc:	add	x0, x0, #0x1
   120e0:	ldp	x29, x30, [sp], #16
   120e4:	ret
   120e8:	stp	x29, x30, [sp, #-64]!
   120ec:	mov	x29, sp
   120f0:	stp	x21, x22, [sp, #32]
   120f4:	mov	x21, x0
   120f8:	ldr	x0, [x0, #48]
   120fc:	stp	x19, x20, [sp, #16]
   12100:	str	x23, [sp, #48]
   12104:	cmp	x0, x2
   12108:	ccmp	x1, x2, #0x2, cs  // cs = hs, nlast
   1210c:	b.ls	12114 <_option_is_end@@Base+0x988>  // b.plast
   12110:	bl	aeb0 <abort@plt>
   12114:	mov	x19, x1
   12118:	mov	x20, x2
   1211c:	cmp	x1, x2
   12120:	b.cc	12140 <_option_is_end@@Base+0x9b4>  // b.lo, b.ul, b.last
   12124:	mov	x19, #0xffffffffffffffff    	// #-1
   12128:	mov	x0, x19
   1212c:	ldp	x19, x20, [sp, #16]
   12130:	ldp	x21, x22, [sp, #32]
   12134:	ldr	x23, [sp, #48]
   12138:	ldp	x29, x30, [sp], #64
   1213c:	ret
   12140:	ldr	x23, [x21, #8]
   12144:	mov	x22, x3
   12148:	cbz	x23, 12174 <_option_is_end@@Base+0x9e8>
   1214c:	ldr	x0, [x21, #40]
   12150:	ldr	x1, [x0, x19, lsl #3]
   12154:	mov	x0, x22
   12158:	blr	x23
   1215c:	tst	w0, #0xff
   12160:	b.ne	12128 <_option_is_end@@Base+0x99c>  // b.any
   12164:	add	x19, x19, #0x1
   12168:	cmp	x20, x19
   1216c:	b.ne	1214c <_option_is_end@@Base+0x9c0>  // b.any
   12170:	b	12124 <_option_is_end@@Base+0x998>
   12174:	ldr	x0, [x21, #40]
   12178:	ldr	x1, [x0, x19, lsl #3]
   1217c:	cmp	x22, x1
   12180:	b.eq	12128 <_option_is_end@@Base+0x99c>  // b.none
   12184:	add	x19, x19, #0x1
   12188:	cmp	x20, x19
   1218c:	b.ne	12178 <_option_is_end@@Base+0x9ec>  // b.any
   12190:	b	12124 <_option_is_end@@Base+0x998>
   12194:	stp	x29, x30, [sp, #-32]!
   12198:	mov	x3, x1
   1219c:	mov	x1, #0x0                   	// #0
   121a0:	mov	x29, sp
   121a4:	ldr	x2, [x0, #48]
   121a8:	str	x19, [sp, #16]
   121ac:	mov	x19, x0
   121b0:	bl	120e8 <_option_is_end@@Base+0x95c>
   121b4:	cmn	x0, #0x1
   121b8:	b.eq	121d0 <_option_is_end@@Base+0xa44>  // b.none
   121bc:	mov	x1, x0
   121c0:	mov	x0, x19
   121c4:	ldr	x19, [sp, #16]
   121c8:	ldp	x29, x30, [sp], #32
   121cc:	b	118b0 <_option_is_end@@Base+0x124>
   121d0:	mov	w0, #0x0                   	// #0
   121d4:	ldr	x19, [sp, #16]
   121d8:	ldp	x29, x30, [sp], #32
   121dc:	ret
   121e0:	stp	x29, x30, [sp, #-16]!
   121e4:	mov	x29, sp
   121e8:	bl	120e8 <_option_is_end@@Base+0x95c>
   121ec:	add	x0, x0, #0x1
   121f0:	ldp	x29, x30, [sp], #16
   121f4:	ret

00000000000121f8 <rotl64@@Base>:
   121f8:	neg	w1, w1
   121fc:	ror	x0, x0, x1
   12200:	ret

0000000000012204 <rotr64@@Base>:
   12204:	ror	x0, x0, x1
   12208:	ret

000000000001220c <rotl32@@Base>:
   1220c:	neg	w1, w1
   12210:	ror	w0, w0, w1
   12214:	ret

0000000000012218 <rotr32@@Base>:
   12218:	ror	w0, w0, w1
   1221c:	ret

0000000000012220 <rotl_sz@@Base>:
   12220:	neg	w1, w1
   12224:	ror	x0, x0, x1
   12228:	ret

000000000001222c <rotr_sz@@Base>:
   1222c:	ror	x0, x0, x1
   12230:	ret

0000000000012234 <rotl16@@Base>:
   12234:	and	w0, w0, #0xffff
   12238:	lsl	w2, w0, w1
   1223c:	neg	w1, w1
   12240:	and	w1, w1, #0xf
   12244:	lsr	w0, w0, w1
   12248:	orr	w0, w2, w0
   1224c:	ret

0000000000012250 <rotr16@@Base>:
   12250:	and	w0, w0, #0xffff
   12254:	lsr	w2, w0, w1
   12258:	neg	w1, w1
   1225c:	and	w1, w1, #0xf
   12260:	lsl	w0, w0, w1
   12264:	orr	w0, w2, w0
   12268:	ret

000000000001226c <rotl8@@Base>:
   1226c:	and	w0, w0, #0xff
   12270:	lsl	w2, w0, w1
   12274:	neg	w1, w1
   12278:	and	w1, w1, #0x7
   1227c:	lsr	w0, w0, w1
   12280:	orr	w0, w2, w0
   12284:	ret

0000000000012288 <rotr8@@Base>:
   12288:	and	w0, w0, #0xff
   1228c:	lsr	w2, w0, w1
   12290:	neg	w1, w1
   12294:	and	w1, w1, #0x7
   12298:	lsl	w0, w0, w1
   1229c:	orr	w0, w2, w0
   122a0:	ret

00000000000122a4 <canonicalize_filename_mode@@Base>:
   122a4:	stp	x29, x30, [sp, #-272]!
   122a8:	mov	x29, sp
   122ac:	stp	x19, x20, [sp, #16]
   122b0:	stp	x21, x22, [sp, #32]
   122b4:	stp	x23, x24, [sp, #48]
   122b8:	and	w24, w1, #0x3
   122bc:	stp	x25, x26, [sp, #64]
   122c0:	mov	x25, x0
   122c4:	sub	w0, w24, #0x1
   122c8:	stp	x27, x28, [sp, #80]
   122cc:	tst	w0, w24
   122d0:	b.eq	122e8 <canonicalize_filename_mode@@Base+0x44>  // b.none
   122d4:	bl	b540 <__errno_location@plt>
   122d8:	mov	w1, #0x16                  	// #22
   122dc:	str	w1, [x0]
   122e0:	mov	x27, #0x0                   	// #0
   122e4:	b	123c8 <canonicalize_filename_mode@@Base+0x124>
   122e8:	cbz	x25, 122d4 <canonicalize_filename_mode@@Base+0x30>
   122ec:	ldrb	w19, [x25]
   122f0:	cbnz	w19, 12300 <canonicalize_filename_mode@@Base+0x5c>
   122f4:	bl	b540 <__errno_location@plt>
   122f8:	mov	w1, #0x2                   	// #2
   122fc:	b	122dc <canonicalize_filename_mode@@Base+0x38>
   12300:	mov	w20, w1
   12304:	cmp	w19, #0x2f
   12308:	b.eq	12408 <canonicalize_filename_mode@@Base+0x164>  // b.none
   1230c:	bl	b6c0 <xgetcwd@plt>
   12310:	mov	x27, x0
   12314:	cbz	x0, 123c8 <canonicalize_filename_mode@@Base+0x124>
   12318:	bl	a780 <strlen@plt>
   1231c:	mov	x22, x0
   12320:	cmp	x0, #0xfff
   12324:	b.ls	123e8 <canonicalize_filename_mode@@Base+0x144>  // b.plast
   12328:	add	x22, x27, x0
   1232c:	str	x22, [sp, #96]
   12330:	and	w0, w20, #0x4
   12334:	str	w0, [sp, #116]
   12338:	add	x0, sp, #0x90
   1233c:	str	x0, [sp, #104]
   12340:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   12344:	mov	x26, x25
   12348:	mov	x20, #0x0                   	// #0
   1234c:	mov	x23, #0x0                   	// #0
   12350:	ldr	x0, [x0, #3848]
   12354:	str	x0, [sp, #120]
   12358:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   1235c:	mov	x21, #0x0                   	// #0
   12360:	ldr	x0, [x0, #3928]
   12364:	str	x0, [sp, #128]
   12368:	ldrb	w0, [x25]
   1236c:	cbnz	w0, 1242c <canonicalize_filename_mode@@Base+0x188>
   12370:	add	x0, x27, #0x1
   12374:	cmp	x22, x0
   12378:	b.ls	1238c <canonicalize_filename_mode@@Base+0xe8>  // b.plast
   1237c:	ldurb	w0, [x22, #-1]
   12380:	cmp	w0, #0x2f
   12384:	cset	x0, eq  // eq = none
   12388:	sub	x22, x22, x0
   1238c:	mov	x0, x22
   12390:	ldr	x1, [sp, #96]
   12394:	strb	wzr, [x0], #1
   12398:	cmp	x1, x0
   1239c:	b.eq	123b4 <canonicalize_filename_mode@@Base+0x110>  // b.none
   123a0:	sub	x1, x22, x27
   123a4:	mov	x0, x27
   123a8:	add	x1, x1, #0x1
   123ac:	bl	ab60 <xrealloc@plt>
   123b0:	mov	x27, x0
   123b4:	mov	x0, x21
   123b8:	bl	b050 <free@plt>
   123bc:	cbz	x20, 123c8 <canonicalize_filename_mode@@Base+0x124>
   123c0:	mov	x0, x20
   123c4:	bl	aa30 <hash_free@plt>
   123c8:	mov	x0, x27
   123cc:	ldp	x19, x20, [sp, #16]
   123d0:	ldp	x21, x22, [sp, #32]
   123d4:	ldp	x23, x24, [sp, #48]
   123d8:	ldp	x25, x26, [sp, #64]
   123dc:	ldp	x27, x28, [sp, #80]
   123e0:	ldp	x29, x30, [sp], #272
   123e4:	ret
   123e8:	mov	x0, x27
   123ec:	mov	x1, #0x1000                	// #4096
   123f0:	bl	ab60 <xrealloc@plt>
   123f4:	mov	x27, x0
   123f8:	add	x22, x0, x22
   123fc:	add	x0, x0, #0x1, lsl #12
   12400:	str	x0, [sp, #96]
   12404:	b	12330 <canonicalize_filename_mode@@Base+0x8c>
   12408:	mov	x0, #0x1000                	// #4096
   1240c:	bl	ac40 <xmalloc@plt>
   12410:	mov	x27, x0
   12414:	add	x0, x0, #0x1, lsl #12
   12418:	mov	x22, x27
   1241c:	str	x0, [sp, #96]
   12420:	strb	w19, [x22], #1
   12424:	b	12330 <canonicalize_filename_mode@@Base+0x8c>
   12428:	add	x25, x25, #0x1
   1242c:	ldrb	w0, [x25]
   12430:	cmp	w0, #0x2f
   12434:	b.eq	12428 <canonicalize_filename_mode@@Base+0x184>  // b.none
   12438:	mov	x19, x25
   1243c:	ldrb	w1, [x19]
   12440:	cmp	w1, #0x2f
   12444:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   12448:	b.ne	12470 <canonicalize_filename_mode@@Base+0x1cc>  // b.any
   1244c:	cmp	x25, x19
   12450:	b.eq	12370 <canonicalize_filename_mode@@Base+0xcc>  // b.none
   12454:	sub	x28, x19, x25
   12458:	cmp	x28, #0x1
   1245c:	b.ne	12478 <canonicalize_filename_mode@@Base+0x1d4>  // b.any
   12460:	cmp	w0, #0x2e
   12464:	b.ne	124bc <canonicalize_filename_mode@@Base+0x218>  // b.any
   12468:	mov	x25, x19
   1246c:	b	12368 <canonicalize_filename_mode@@Base+0xc4>
   12470:	add	x19, x19, #0x1
   12474:	b	1243c <canonicalize_filename_mode@@Base+0x198>
   12478:	cmp	x28, #0x2
   1247c:	b.ne	124bc <canonicalize_filename_mode@@Base+0x218>  // b.any
   12480:	cmp	w0, #0x2e
   12484:	b.ne	124bc <canonicalize_filename_mode@@Base+0x218>  // b.any
   12488:	ldrb	w0, [x25, #1]
   1248c:	cmp	w0, #0x2e
   12490:	b.ne	124bc <canonicalize_filename_mode@@Base+0x218>  // b.any
   12494:	add	x0, x27, #0x1
   12498:	cmp	x22, x0
   1249c:	b.ls	12468 <canonicalize_filename_mode@@Base+0x1c4>  // b.plast
   124a0:	sub	x22, x22, #0x1
   124a4:	cmp	x27, x22
   124a8:	b.eq	12768 <canonicalize_filename_mode@@Base+0x4c4>  // b.none
   124ac:	ldurb	w0, [x22, #-1]
   124b0:	cmp	w0, #0x2f
   124b4:	b.eq	12468 <canonicalize_filename_mode@@Base+0x1c4>  // b.none
   124b8:	b	124a0 <canonicalize_filename_mode@@Base+0x1fc>
   124bc:	ldurb	w0, [x22, #-1]
   124c0:	cmp	w0, #0x2f
   124c4:	b.eq	124d8 <canonicalize_filename_mode@@Base+0x234>  // b.none
   124c8:	mov	x5, x22
   124cc:	mov	w0, #0x2f                  	// #47
   124d0:	strb	w0, [x5], #1
   124d4:	mov	x22, x5
   124d8:	ldr	x1, [sp, #96]
   124dc:	add	x0, x22, x28
   124e0:	cmp	x1, x0
   124e4:	b.hi	12524 <canonicalize_filename_mode@@Base+0x280>  // b.pmore
   124e8:	sub	x5, x22, x27
   124ec:	cmp	x28, #0x1, lsl #12
   124f0:	sub	x22, x1, x27
   124f4:	str	x5, [sp, #136]
   124f8:	add	x0, x28, x22
   124fc:	add	x22, x22, #0x1, lsl #12
   12500:	csinc	x22, x22, x0, lt  // lt = tstop
   12504:	mov	x0, x27
   12508:	mov	x1, x22
   1250c:	bl	ab60 <xrealloc@plt>
   12510:	ldr	x5, [sp, #136]
   12514:	mov	x27, x0
   12518:	add	x0, x0, x22
   1251c:	str	x0, [sp, #96]
   12520:	add	x22, x27, x5
   12524:	mov	x0, x22
   12528:	mov	x2, x28
   1252c:	mov	x1, x25
   12530:	bl	a6f0 <memcpy@plt>
   12534:	add	x22, x0, x28
   12538:	strb	wzr, [x0, x28]
   1253c:	ldr	w0, [sp, #116]
   12540:	cmp	w0, #0x0
   12544:	ccmp	w24, #0x2, #0x0, ne  // ne = any
   12548:	b.ne	12588 <canonicalize_filename_mode@@Base+0x2e4>  // b.any
   1254c:	str	wzr, [sp, #160]
   12550:	ldr	w0, [sp, #160]
   12554:	and	w0, w0, #0xf000
   12558:	cmp	w0, #0xa, lsl #12
   1255c:	b.ne	12748 <canonicalize_filename_mode@@Base+0x4a4>  // b.any
   12560:	cbnz	x20, 12608 <canonicalize_filename_mode@@Base+0x364>
   12564:	adrp	x2, 40000 <vasnprintf@@Base+0x1a170>
   12568:	mov	x1, #0x0                   	// #0
   1256c:	ldp	x4, x3, [sp, #120]
   12570:	mov	x0, #0x7                   	// #7
   12574:	ldr	x2, [x2, #3888]
   12578:	bl	ad80 <hash_initialize@plt>
   1257c:	mov	x20, x0
   12580:	cbnz	x0, 12608 <canonicalize_filename_mode@@Base+0x364>
   12584:	bl	ae30 <xalloc_die@plt>
   12588:	ldr	w0, [sp, #116]
   1258c:	ldr	x1, [sp, #104]
   12590:	cbz	w0, 125fc <canonicalize_filename_mode@@Base+0x358>
   12594:	mov	x0, x27
   12598:	bl	269a8 <vasnprintf@@Base+0xb18>
   1259c:	cmp	w0, #0x0
   125a0:	cset	w0, ne  // ne = any
   125a4:	cbz	w0, 12550 <canonicalize_filename_mode@@Base+0x2ac>
   125a8:	bl	b540 <__errno_location@plt>
   125ac:	ldr	w25, [x0]
   125b0:	cbz	w24, 125dc <canonicalize_filename_mode@@Base+0x338>
   125b4:	cmp	w24, #0x1
   125b8:	b.ne	1254c <canonicalize_filename_mode@@Base+0x2a8>  // b.any
   125bc:	mov	x0, x19
   125c0:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   125c4:	add	x1, x1, #0xc9
   125c8:	bl	b160 <strspn@plt>
   125cc:	ldrb	w0, [x19, x0]
   125d0:	cbnz	w0, 125dc <canonicalize_filename_mode@@Base+0x338>
   125d4:	cmp	w25, #0x2
   125d8:	b.eq	12468 <canonicalize_filename_mode@@Base+0x1c4>  // b.none
   125dc:	mov	x0, x21
   125e0:	bl	b050 <free@plt>
   125e4:	mov	x0, x27
   125e8:	bl	b050 <free@plt>
   125ec:	cbnz	x20, 12770 <canonicalize_filename_mode@@Base+0x4cc>
   125f0:	bl	b540 <__errno_location@plt>
   125f4:	str	w25, [x0]
   125f8:	b	122e0 <canonicalize_filename_mode@@Base+0x3c>
   125fc:	mov	x0, x27
   12600:	bl	269c8 <vasnprintf@@Base+0xb38>
   12604:	b	1259c <canonicalize_filename_mode@@Base+0x2f8>
   12608:	ldr	x2, [sp, #104]
   1260c:	mov	x1, x26
   12610:	mov	x0, x20
   12614:	bl	afe0 <seen_file@plt>
   12618:	tst	w0, #0xff
   1261c:	b.eq	12630 <canonicalize_filename_mode@@Base+0x38c>  // b.none
   12620:	cmp	w24, #0x2
   12624:	b.eq	12468 <canonicalize_filename_mode@@Base+0x1c4>  // b.none
   12628:	mov	w25, #0x28                  	// #40
   1262c:	b	125dc <canonicalize_filename_mode@@Base+0x338>
   12630:	ldr	x2, [sp, #104]
   12634:	mov	x1, x26
   12638:	mov	x0, x20
   1263c:	bl	aad0 <record_file@plt>
   12640:	ldr	x1, [sp, #192]
   12644:	mov	x0, x27
   12648:	bl	b1a0 <areadlink_with_size@plt>
   1264c:	mov	x25, x0
   12650:	cbnz	x0, 12670 <canonicalize_filename_mode@@Base+0x3cc>
   12654:	bl	b540 <__errno_location@plt>
   12658:	ldr	w25, [x0]
   1265c:	cmp	w24, #0x2
   12660:	b.ne	125dc <canonicalize_filename_mode@@Base+0x338>  // b.any
   12664:	cmp	w25, #0xc
   12668:	b.ne	12468 <canonicalize_filename_mode@@Base+0x1c4>  // b.any
   1266c:	b	125dc <canonicalize_filename_mode@@Base+0x338>
   12670:	bl	a780 <strlen@plt>
   12674:	mov	x26, x0
   12678:	mov	x0, x19
   1267c:	bl	a780 <strlen@plt>
   12680:	mov	x28, x0
   12684:	add	x1, x26, x0
   12688:	cbnz	x23, 126f4 <canonicalize_filename_mode@@Base+0x450>
   1268c:	add	x23, x1, #0x1
   12690:	mov	x0, #0x1000                	// #4096
   12694:	cmp	x23, #0x1, lsl #12
   12698:	csel	x23, x23, x0, cs  // cs = hs, nlast
   1269c:	mov	x0, x23
   126a0:	bl	ac40 <xmalloc@plt>
   126a4:	mov	x21, x0
   126a8:	add	x2, x28, #0x1
   126ac:	mov	x1, x19
   126b0:	add	x0, x21, x26
   126b4:	bl	a700 <memmove@plt>
   126b8:	mov	x2, x26
   126bc:	mov	x1, x25
   126c0:	mov	x0, x21
   126c4:	bl	a6f0 <memcpy@plt>
   126c8:	ldrb	w1, [x25]
   126cc:	mov	x26, x0
   126d0:	add	x0, x27, #0x1
   126d4:	cmp	w1, #0x2f
   126d8:	b.ne	1271c <canonicalize_filename_mode@@Base+0x478>  // b.any
   126dc:	mov	x22, x0
   126e0:	strb	w1, [x27]
   126e4:	mov	x0, x25
   126e8:	mov	x19, x26
   126ec:	bl	b050 <free@plt>
   126f0:	b	12468 <canonicalize_filename_mode@@Base+0x1c4>
   126f4:	add	x1, x1, #0x1
   126f8:	cmp	x1, x23
   126fc:	b.ls	126a8 <canonicalize_filename_mode@@Base+0x404>  // b.plast
   12700:	mov	x0, x21
   12704:	str	x1, [sp, #136]
   12708:	bl	ab60 <xrealloc@plt>
   1270c:	mov	x21, x0
   12710:	ldr	x1, [sp, #136]
   12714:	mov	x23, x1
   12718:	b	126a8 <canonicalize_filename_mode@@Base+0x404>
   1271c:	cmp	x0, x22
   12720:	b.cs	126e4 <canonicalize_filename_mode@@Base+0x440>  // b.hs, b.nlast
   12724:	sub	x22, x22, #0x1
   12728:	cmp	x27, x22
   1272c:	b.eq	12740 <canonicalize_filename_mode@@Base+0x49c>  // b.none
   12730:	ldurb	w0, [x22, #-1]
   12734:	cmp	w0, #0x2f
   12738:	b.eq	126e4 <canonicalize_filename_mode@@Base+0x440>  // b.none
   1273c:	b	12724 <canonicalize_filename_mode@@Base+0x480>
   12740:	mov	x22, x27
   12744:	b	126e4 <canonicalize_filename_mode@@Base+0x440>
   12748:	cmp	w0, #0x4, lsl #12
   1274c:	b.eq	12468 <canonicalize_filename_mode@@Base+0x1c4>  // b.none
   12750:	ldrb	w0, [x19]
   12754:	cbz	w0, 12468 <canonicalize_filename_mode@@Base+0x1c4>
   12758:	cmp	w24, #0x2
   1275c:	b.eq	12468 <canonicalize_filename_mode@@Base+0x1c4>  // b.none
   12760:	mov	w25, #0x14                  	// #20
   12764:	b	125dc <canonicalize_filename_mode@@Base+0x338>
   12768:	mov	x22, x27
   1276c:	b	12468 <canonicalize_filename_mode@@Base+0x1c4>
   12770:	mov	x0, x20
   12774:	bl	aa30 <hash_free@plt>
   12778:	b	125f0 <canonicalize_filename_mode@@Base+0x34c>

000000000001277c <set_cloexec_flag@@Base>:
   1277c:	stp	x29, x30, [sp, #-32]!
   12780:	mov	w2, #0x0                   	// #0
   12784:	mov	x29, sp
   12788:	stp	x19, x20, [sp, #16]
   1278c:	and	w20, w1, #0xff
   12790:	mov	w19, w0
   12794:	mov	w1, #0x1                   	// #1
   12798:	bl	b200 <rpl_fcntl@plt>
   1279c:	tbnz	w0, #31, 127d8 <set_cloexec_flag@@Base+0x5c>
   127a0:	cmp	w20, #0x0
   127a4:	orr	w1, w0, #0x1
   127a8:	and	w2, w0, #0xfffffffe
   127ac:	csel	w2, w2, w1, eq  // eq = none
   127b0:	cmp	w2, w0
   127b4:	b.eq	127e0 <set_cloexec_flag@@Base+0x64>  // b.none
   127b8:	mov	w0, w19
   127bc:	mov	w1, #0x2                   	// #2
   127c0:	bl	b200 <rpl_fcntl@plt>
   127c4:	cmn	w0, #0x1
   127c8:	csetm	w0, eq  // eq = none
   127cc:	ldp	x19, x20, [sp, #16]
   127d0:	ldp	x29, x30, [sp], #32
   127d4:	ret
   127d8:	mov	w0, #0xffffffff            	// #-1
   127dc:	b	127cc <set_cloexec_flag@@Base+0x50>
   127e0:	mov	w0, #0x0                   	// #0
   127e4:	b	127cc <set_cloexec_flag@@Base+0x50>

00000000000127e8 <dup_cloexec@@Base>:
   127e8:	mov	w2, #0x0                   	// #0
   127ec:	mov	w1, #0x406                 	// #1030
   127f0:	b	b200 <rpl_fcntl@plt>

00000000000127f4 <dir_name@@Base>:
   127f4:	stp	x29, x30, [sp, #-16]!
   127f8:	mov	x29, sp
   127fc:	bl	a9f0 <mdir_name@plt>
   12800:	cbnz	x0, 12808 <dir_name@@Base+0x14>
   12804:	bl	ae30 <xalloc_die@plt>
   12808:	ldp	x29, x30, [sp], #16
   1280c:	ret

0000000000012810 <base_name@@Base>:
   12810:	stp	x29, x30, [sp, #-32]!
   12814:	mov	x29, sp
   12818:	stp	x19, x20, [sp, #16]
   1281c:	mov	x20, x0
   12820:	bl	acf0 <last_component@plt>
   12824:	ldrb	w1, [x0]
   12828:	cbnz	w1, 12848 <base_name@@Base+0x38>
   1282c:	mov	x0, x20
   12830:	bl	a6d0 <base_len@plt>
   12834:	mov	x1, x0
   12838:	mov	x0, x20
   1283c:	ldp	x19, x20, [sp, #16]
   12840:	ldp	x29, x30, [sp], #32
   12844:	b	b310 <xstrndup@plt>
   12848:	mov	x19, x0
   1284c:	bl	a6d0 <base_len@plt>
   12850:	mov	x1, x0
   12854:	ldrb	w0, [x19, x0]
   12858:	cmp	w0, #0x2f
   1285c:	b.ne	12864 <base_name@@Base+0x54>  // b.any
   12860:	add	x1, x1, #0x1
   12864:	mov	x0, x19
   12868:	b	1283c <base_name@@Base+0x2c>

000000000001286c <dir_len@@Base>:
   1286c:	stp	x29, x30, [sp, #-32]!
   12870:	mov	x29, sp
   12874:	stp	x19, x20, [sp, #16]
   12878:	mov	x19, x0
   1287c:	ldrb	w1, [x0]
   12880:	cmp	w1, #0x2f
   12884:	cset	x20, eq  // eq = none
   12888:	bl	acf0 <last_component@plt>
   1288c:	sub	x0, x0, x19
   12890:	cmp	x0, x20
   12894:	b.hi	128a4 <dir_len@@Base+0x38>  // b.pmore
   12898:	ldp	x19, x20, [sp, #16]
   1289c:	ldp	x29, x30, [sp], #32
   128a0:	ret
   128a4:	sub	x1, x0, #0x1
   128a8:	ldrb	w2, [x19, x1]
   128ac:	cmp	w2, #0x2f
   128b0:	b.ne	12898 <dir_len@@Base+0x2c>  // b.any
   128b4:	mov	x0, x1
   128b8:	b	12890 <dir_len@@Base+0x24>

00000000000128bc <mdir_name@@Base>:
   128bc:	stp	x29, x30, [sp, #-48]!
   128c0:	mov	x29, sp
   128c4:	stp	x19, x20, [sp, #16]
   128c8:	str	x21, [sp, #32]
   128cc:	mov	x21, x0
   128d0:	bl	b020 <dir_len@plt>
   128d4:	cmp	x0, #0x0
   128d8:	mov	x19, x0
   128dc:	add	x0, x0, #0x1
   128e0:	cinc	x0, x0, eq  // eq = none
   128e4:	bl	aab0 <malloc@plt>
   128e8:	mov	x20, x0
   128ec:	cbz	x0, 12910 <mdir_name@@Base+0x54>
   128f0:	mov	x2, x19
   128f4:	mov	x1, x21
   128f8:	bl	a6f0 <memcpy@plt>
   128fc:	cbnz	x19, 1290c <mdir_name@@Base+0x50>
   12900:	mov	w0, #0x2e                  	// #46
   12904:	mov	x19, #0x1                   	// #1
   12908:	strb	w0, [x20]
   1290c:	strb	wzr, [x20, x19]
   12910:	mov	x0, x20
   12914:	ldp	x19, x20, [sp, #16]
   12918:	ldr	x21, [sp, #32]
   1291c:	ldp	x29, x30, [sp], #48
   12920:	ret

0000000000012924 <last_component@@Base>:
   12924:	ldrb	w1, [x0]
   12928:	cmp	w1, #0x2f
   1292c:	b.eq	12944 <last_component@@Base+0x20>  // b.none
   12930:	mov	x1, x0
   12934:	mov	w2, #0x0                   	// #0
   12938:	ldrb	w3, [x1]
   1293c:	cbnz	w3, 1294c <last_component@@Base+0x28>
   12940:	ret
   12944:	add	x0, x0, #0x1
   12948:	b	12924 <last_component@@Base>
   1294c:	cmp	w3, #0x2f
   12950:	b.eq	12960 <last_component@@Base+0x3c>  // b.none
   12954:	cbnz	w2, 12968 <last_component@@Base+0x44>
   12958:	add	x1, x1, #0x1
   1295c:	b	12938 <last_component@@Base+0x14>
   12960:	mov	w2, #0x1                   	// #1
   12964:	b	12958 <last_component@@Base+0x34>
   12968:	mov	x0, x1
   1296c:	mov	w2, #0x0                   	// #0
   12970:	b	12958 <last_component@@Base+0x34>

0000000000012974 <base_len@@Base>:
   12974:	stp	x29, x30, [sp, #-32]!
   12978:	mov	x29, sp
   1297c:	str	x19, [sp, #16]
   12980:	mov	x19, x0
   12984:	bl	a780 <strlen@plt>
   12988:	cmp	x0, #0x1
   1298c:	b.ls	129a0 <base_len@@Base+0x2c>  // b.plast
   12990:	sub	x1, x0, #0x1
   12994:	ldrb	w2, [x19, x1]
   12998:	cmp	w2, #0x2f
   1299c:	b.eq	129ac <base_len@@Base+0x38>  // b.none
   129a0:	ldr	x19, [sp, #16]
   129a4:	ldp	x29, x30, [sp], #32
   129a8:	ret
   129ac:	mov	x0, x1
   129b0:	b	12988 <base_len@@Base+0x14>

00000000000129b4 <strip_trailing_slashes@@Base>:
   129b4:	stp	x29, x30, [sp, #-32]!
   129b8:	mov	x29, sp
   129bc:	str	x19, [sp, #16]
   129c0:	mov	x19, x0
   129c4:	bl	acf0 <last_component@plt>
   129c8:	ldrb	w1, [x0]
   129cc:	cmp	w1, #0x0
   129d0:	csel	x19, x19, x0, eq  // eq = none
   129d4:	mov	x0, x19
   129d8:	bl	a6d0 <base_len@plt>
   129dc:	ldrb	w1, [x19, x0]
   129e0:	strb	wzr, [x19, x0]
   129e4:	cmp	w1, #0x0
   129e8:	cset	w0, ne  // ne = any
   129ec:	ldr	x19, [sp, #16]
   129f0:	ldp	x29, x30, [sp], #32
   129f4:	ret

00000000000129f8 <fd_safer_flag@@Base>:
   129f8:	stp	x29, x30, [sp, #-48]!
   129fc:	cmp	w0, #0x2
   12a00:	mov	x29, sp
   12a04:	stp	x19, x20, [sp, #16]
   12a08:	mov	w19, w0
   12a0c:	stp	x21, x22, [sp, #32]
   12a10:	b.hi	12a38 <fd_safer_flag@@Base+0x40>  // b.pmore
   12a14:	bl	b2a0 <dup_safer_flag@plt>
   12a18:	mov	w21, w0
   12a1c:	bl	b540 <__errno_location@plt>
   12a20:	mov	x20, x0
   12a24:	mov	w0, w19
   12a28:	mov	w19, w21
   12a2c:	ldr	w22, [x20]
   12a30:	bl	add0 <close@plt>
   12a34:	str	w22, [x20]
   12a38:	mov	w0, w19
   12a3c:	ldp	x19, x20, [sp, #16]
   12a40:	ldp	x21, x22, [sp, #32]
   12a44:	ldp	x29, x30, [sp], #48
   12a48:	ret

0000000000012a4c <dup_safer_flag@@Base>:
   12a4c:	ands	w1, w1, #0x80000
   12a50:	mov	w3, #0x406                 	// #1030
   12a54:	mov	w2, #0x3                   	// #3
   12a58:	csel	w1, w1, w3, eq  // eq = none
   12a5c:	b	b200 <rpl_fcntl@plt>

0000000000012a60 <record_file@@Base>:
   12a60:	cbz	x0, 12ae8 <record_file@@Base+0x88>
   12a64:	stp	x29, x30, [sp, #-48]!
   12a68:	mov	x29, sp
   12a6c:	stp	x19, x20, [sp, #16]
   12a70:	mov	x20, x0
   12a74:	mov	x0, #0x18                  	// #24
   12a78:	stp	x21, x22, [sp, #32]
   12a7c:	mov	x22, x1
   12a80:	mov	x21, x2
   12a84:	bl	ac40 <xmalloc@plt>
   12a88:	mov	x19, x0
   12a8c:	mov	x0, x22
   12a90:	bl	ac70 <xstrdup@plt>
   12a94:	mov	x1, x19
   12a98:	str	x0, [x19]
   12a9c:	ldr	x0, [x21, #8]
   12aa0:	str	x0, [x19, #8]
   12aa4:	ldr	x0, [x21]
   12aa8:	str	x0, [x19, #16]
   12aac:	mov	x0, x20
   12ab0:	bl	a8b0 <hash_insert@plt>
   12ab4:	cbnz	x0, 12abc <record_file@@Base+0x5c>
   12ab8:	bl	ae30 <xalloc_die@plt>
   12abc:	cmp	x19, x0
   12ac0:	b.eq	12ad8 <record_file@@Base+0x78>  // b.none
   12ac4:	mov	x0, x19
   12ac8:	ldp	x19, x20, [sp, #16]
   12acc:	ldp	x21, x22, [sp, #32]
   12ad0:	ldp	x29, x30, [sp], #48
   12ad4:	b	aa00 <triple_free@plt>
   12ad8:	ldp	x19, x20, [sp, #16]
   12adc:	ldp	x21, x22, [sp, #32]
   12ae0:	ldp	x29, x30, [sp], #48
   12ae4:	ret
   12ae8:	ret

0000000000012aec <seen_file@@Base>:
   12aec:	cbz	x0, 12b24 <seen_file@@Base+0x38>
   12af0:	stp	x29, x30, [sp, #-48]!
   12af4:	mov	x29, sp
   12af8:	str	x1, [sp, #24]
   12afc:	ldr	x1, [x2, #8]
   12b00:	str	x1, [sp, #32]
   12b04:	ldr	x1, [x2]
   12b08:	str	x1, [sp, #40]
   12b0c:	add	x1, sp, #0x18
   12b10:	bl	ae00 <hash_lookup@plt>
   12b14:	cmp	x0, #0x0
   12b18:	cset	w0, ne  // ne = any
   12b1c:	ldp	x29, x30, [sp], #48
   12b20:	ret
   12b24:	mov	w0, #0x0                   	// #0
   12b28:	ret

0000000000012b2c <mfile_name_concat@@Base>:
   12b2c:	stp	x29, x30, [sp, #-80]!
   12b30:	mov	x29, sp
   12b34:	stp	x19, x20, [sp, #16]
   12b38:	stp	x21, x22, [sp, #32]
   12b3c:	mov	x21, x1
   12b40:	mov	x22, x2
   12b44:	stp	x23, x24, [sp, #48]
   12b48:	mov	x23, x0
   12b4c:	stp	x25, x26, [sp, #64]
   12b50:	bl	acf0 <last_component@plt>
   12b54:	mov	x19, x0
   12b58:	sub	x19, x19, x23
   12b5c:	bl	a6d0 <base_len@plt>
   12b60:	mov	x20, x0
   12b64:	add	x19, x19, x0
   12b68:	mov	x0, x21
   12b6c:	bl	a780 <strlen@plt>
   12b70:	mov	x24, x0
   12b74:	add	x0, x0, #0x1
   12b78:	cbz	x20, 12c00 <mfile_name_concat@@Base+0xd4>
   12b7c:	add	x1, x23, x19
   12b80:	ldurb	w1, [x1, #-1]
   12b84:	cmp	w1, #0x2f
   12b88:	b.eq	12c14 <mfile_name_concat@@Base+0xe8>  // b.none
   12b8c:	ldrb	w1, [x21]
   12b90:	mov	w20, #0x2f                  	// #47
   12b94:	cmp	w1, #0x2f
   12b98:	csel	w20, wzr, w20, eq  // eq = none
   12b9c:	cmp	w20, #0x0
   12ba0:	cinc	x1, x19, ne  // ne = any
   12ba4:	cset	x26, ne  // ne = any
   12ba8:	add	x0, x1, x0
   12bac:	bl	aab0 <malloc@plt>
   12bb0:	mov	x25, x0
   12bb4:	cbz	x0, 12be4 <mfile_name_concat@@Base+0xb8>
   12bb8:	mov	x2, x19
   12bbc:	mov	x1, x23
   12bc0:	bl	b0b0 <mempcpy@plt>
   12bc4:	strb	w20, [x0]
   12bc8:	add	x0, x0, x26
   12bcc:	cbz	x22, 12bd4 <mfile_name_concat@@Base+0xa8>
   12bd0:	str	x0, [x22]
   12bd4:	mov	x2, x24
   12bd8:	mov	x1, x21
   12bdc:	bl	b0b0 <mempcpy@plt>
   12be0:	strb	wzr, [x0]
   12be4:	mov	x0, x25
   12be8:	ldp	x19, x20, [sp, #16]
   12bec:	ldp	x21, x22, [sp, #32]
   12bf0:	ldp	x23, x24, [sp, #48]
   12bf4:	ldp	x25, x26, [sp, #64]
   12bf8:	ldp	x29, x30, [sp], #80
   12bfc:	ret
   12c00:	ldrb	w1, [x21]
   12c04:	mov	w20, #0x2e                  	// #46
   12c08:	cmp	w1, #0x2f
   12c0c:	csel	w20, wzr, w20, ne  // ne = any
   12c10:	b	12b9c <mfile_name_concat@@Base+0x70>
   12c14:	mov	w20, #0x0                   	// #0
   12c18:	b	12b9c <mfile_name_concat@@Base+0x70>

0000000000012c1c <getprogname@@Base>:
   12c1c:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   12c20:	ldr	x0, [x0, #4008]
   12c24:	ldr	x0, [x0]
   12c28:	ret

0000000000012c2c <gettime@@Base>:
   12c2c:	mov	x1, x0
   12c30:	mov	w0, #0x0                   	// #0
   12c34:	b	a970 <clock_gettime@plt>

0000000000012c38 <current_timespec@@Base>:
   12c38:	stp	x29, x30, [sp, #-32]!
   12c3c:	mov	x29, sp
   12c40:	add	x0, sp, #0x10
   12c44:	bl	b620 <gettime@plt>
   12c48:	ldp	x0, x1, [sp, #16]
   12c4c:	ldp	x29, x30, [sp], #32
   12c50:	ret

0000000000012c54 <hard_locale@@Base>:
   12c54:	stp	x29, x30, [sp, #-32]!
   12c58:	mov	x1, #0x0                   	// #0
   12c5c:	mov	x29, sp
   12c60:	str	x19, [sp, #16]
   12c64:	bl	b680 <setlocale@plt>
   12c68:	cbz	x0, 12ca4 <hard_locale@@Base+0x50>
   12c6c:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   12c70:	mov	x19, x0
   12c74:	add	x1, x1, #0x1f
   12c78:	bl	afa0 <strcmp@plt>
   12c7c:	cbz	w0, 12cac <hard_locale@@Base+0x58>
   12c80:	mov	x0, x19
   12c84:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   12c88:	add	x1, x1, #0x21
   12c8c:	bl	afa0 <strcmp@plt>
   12c90:	cmp	w0, #0x0
   12c94:	cset	w0, ne  // ne = any
   12c98:	ldr	x19, [sp, #16]
   12c9c:	ldp	x29, x30, [sp], #32
   12ca0:	ret
   12ca4:	mov	w0, #0x1                   	// #1
   12ca8:	b	12c98 <hard_locale@@Base+0x44>
   12cac:	mov	w0, #0x0                   	// #0
   12cb0:	b	12c98 <hard_locale@@Base+0x44>
   12cb4:	ror	x2, x0, #3
   12cb8:	udiv	x0, x2, x1
   12cbc:	msub	x0, x0, x1, x2
   12cc0:	ret
   12cc4:	cmp	x1, x0
   12cc8:	cset	w0, eq  // eq = none
   12ccc:	ret
   12cd0:	ldrb	w2, [x1, #16]
   12cd4:	cbnz	w2, 12cf8 <hard_locale@@Base+0xa4>
   12cd8:	ucvtf	s0, x0
   12cdc:	ldr	s1, [x1, #8]
   12ce0:	mov	w0, #0x5f800000            	// #1602224128
   12ce4:	fdiv	s0, s0, s1
   12ce8:	fmov	s1, w0
   12cec:	fcmpe	s0, s1
   12cf0:	b.ge	12d10 <hard_locale@@Base+0xbc>  // b.tcont
   12cf4:	fcvtzu	x0, s0
   12cf8:	cmp	x0, #0xa
   12cfc:	mov	x1, #0xa                   	// #10
   12d00:	csel	x0, x0, x1, cs  // cs = hs, nlast
   12d04:	orr	x0, x0, #0x1
   12d08:	cmn	x0, #0x1
   12d0c:	b.ne	12d40 <hard_locale@@Base+0xec>  // b.any
   12d10:	mov	x0, #0x0                   	// #0
   12d14:	b	12d60 <hard_locale@@Base+0x10c>
   12d18:	add	x2, x1, #0x1
   12d1c:	add	x1, x1, #0x2
   12d20:	add	x3, x3, x2, lsl #2
   12d24:	udiv	x2, x0, x1
   12d28:	cmp	x0, x3
   12d2c:	msub	x2, x2, x1, x0
   12d30:	b.ls	12d4c <hard_locale@@Base+0xf8>  // b.plast
   12d34:	cbnz	x2, 12d18 <hard_locale@@Base+0xc4>
   12d38:	add	x0, x0, #0x2
   12d3c:	b	12d08 <hard_locale@@Base+0xb4>
   12d40:	mov	x3, #0x9                   	// #9
   12d44:	mov	x1, #0x3                   	// #3
   12d48:	b	12d24 <hard_locale@@Base+0xd0>
   12d4c:	cbz	x2, 12d38 <hard_locale@@Base+0xe4>
   12d50:	cmp	xzr, x0, lsr #61
   12d54:	cset	x1, ne  // ne = any
   12d58:	tbnz	x0, #60, 12d10 <hard_locale@@Base+0xbc>
   12d5c:	cbnz	x1, 12d10 <hard_locale@@Base+0xbc>
   12d60:	ret
   12d64:	stp	x29, x30, [sp, #-32]!
   12d68:	mov	x29, sp
   12d6c:	str	x19, [sp, #16]
   12d70:	mov	x19, x0
   12d74:	mov	x0, x1
   12d78:	ldr	x1, [x19, #16]
   12d7c:	ldr	x2, [x19, #48]
   12d80:	blr	x2
   12d84:	ldr	x1, [x19, #16]
   12d88:	cmp	x1, x0
   12d8c:	b.hi	12d94 <hard_locale@@Base+0x140>  // b.pmore
   12d90:	bl	aeb0 <abort@plt>
   12d94:	ldr	x1, [x19]
   12d98:	ldr	x19, [sp, #16]
   12d9c:	add	x0, x1, x0, lsl #4
   12da0:	ldp	x29, x30, [sp], #32
   12da4:	ret
   12da8:	stp	x29, x30, [sp, #-64]!
   12dac:	mov	x29, sp
   12db0:	stp	x21, x22, [sp, #32]
   12db4:	mov	x22, x2
   12db8:	mov	x21, x1
   12dbc:	stp	x19, x20, [sp, #16]
   12dc0:	mov	x20, x0
   12dc4:	str	x23, [sp, #48]
   12dc8:	and	w23, w3, #0xff
   12dcc:	bl	12d64 <hard_locale@@Base+0x110>
   12dd0:	str	x0, [x22]
   12dd4:	ldr	x1, [x0]
   12dd8:	cbnz	x1, 12df4 <hard_locale@@Base+0x1a0>
   12ddc:	mov	x0, #0x0                   	// #0
   12de0:	ldp	x19, x20, [sp, #16]
   12de4:	ldp	x21, x22, [sp, #32]
   12de8:	ldr	x23, [sp, #48]
   12dec:	ldp	x29, x30, [sp], #64
   12df0:	ret
   12df4:	mov	x19, x0
   12df8:	cmp	x1, x21
   12dfc:	b.eq	12e14 <hard_locale@@Base+0x1c0>  // b.none
   12e00:	ldr	x2, [x20, #56]
   12e04:	mov	x0, x21
   12e08:	blr	x2
   12e0c:	tst	w0, #0xff
   12e10:	b.eq	12e60 <hard_locale@@Base+0x20c>  // b.none
   12e14:	ldr	x0, [x19]
   12e18:	cbz	w23, 12de0 <hard_locale@@Base+0x18c>
   12e1c:	ldr	x1, [x19, #8]
   12e20:	cbz	x1, 12e40 <hard_locale@@Base+0x1ec>
   12e24:	ldp	x2, x3, [x1]
   12e28:	stp	x2, x3, [x19]
   12e2c:	str	xzr, [x1]
   12e30:	ldr	x2, [x20, #72]
   12e34:	str	x2, [x1, #8]
   12e38:	str	x1, [x20, #72]
   12e3c:	b	12de0 <hard_locale@@Base+0x18c>
   12e40:	str	xzr, [x19]
   12e44:	b	12de0 <hard_locale@@Base+0x18c>
   12e48:	ldr	x2, [x20, #56]
   12e4c:	mov	x0, x21
   12e50:	blr	x2
   12e54:	tst	w0, #0xff
   12e58:	b.ne	12e74 <hard_locale@@Base+0x220>  // b.any
   12e5c:	ldr	x19, [x19, #8]
   12e60:	ldr	x0, [x19, #8]
   12e64:	cbz	x0, 12ddc <hard_locale@@Base+0x188>
   12e68:	ldr	x1, [x0]
   12e6c:	cmp	x1, x21
   12e70:	b.ne	12e48 <hard_locale@@Base+0x1f4>  // b.any
   12e74:	ldr	x1, [x19, #8]
   12e78:	ldr	x0, [x1]
   12e7c:	cbz	w23, 12de0 <hard_locale@@Base+0x18c>
   12e80:	ldr	x2, [x1, #8]
   12e84:	str	x2, [x19, #8]
   12e88:	b	12e2c <hard_locale@@Base+0x1d8>
   12e8c:	ldr	x2, [x0]
   12e90:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   12e94:	add	x3, x1, #0x7b8
   12e98:	cmp	x2, x3
   12e9c:	b.eq	12f20 <hard_locale@@Base+0x2cc>  // b.none
   12ea0:	adrp	x3, 27000 <vasnprintf@@Base+0x1170>
   12ea4:	ldr	s1, [x2, #8]
   12ea8:	ldr	s2, [x3, #1972]
   12eac:	fcmpe	s1, s2
   12eb0:	b.le	12f10 <hard_locale@@Base+0x2bc>
   12eb4:	mov	w3, #0x6666                	// #26214
   12eb8:	movk	w3, #0x3f66, lsl #16
   12ebc:	fmov	s0, w3
   12ec0:	fcmpe	s1, s0
   12ec4:	b.pl	12f10 <hard_locale@@Base+0x2bc>  // b.nfrst
   12ec8:	mov	w3, #0xcccd                	// #52429
   12ecc:	ldr	s3, [x2, #12]
   12ed0:	movk	w3, #0x3f8c, lsl #16
   12ed4:	fmov	s0, w3
   12ed8:	fcmpe	s3, s0
   12edc:	b.le	12f10 <hard_locale@@Base+0x2bc>
   12ee0:	ldr	s0, [x2]
   12ee4:	fcmpe	s0, #0.0
   12ee8:	b.lt	12f10 <hard_locale@@Base+0x2bc>  // b.tstop
   12eec:	fadd	s0, s0, s2
   12ef0:	ldr	s2, [x2, #4]
   12ef4:	fcmpe	s0, s2
   12ef8:	b.pl	12f10 <hard_locale@@Base+0x2bc>  // b.nfrst
   12efc:	fmov	s3, #1.000000000000000000e+00
   12f00:	fcmpe	s2, s3
   12f04:	b.hi	12f10 <hard_locale@@Base+0x2bc>  // b.pmore
   12f08:	fcmpe	s1, s0
   12f0c:	b.gt	12f20 <hard_locale@@Base+0x2cc>
   12f10:	add	x1, x1, #0x7b8
   12f14:	str	x1, [x0]
   12f18:	mov	w0, #0x0                   	// #0
   12f1c:	ret
   12f20:	mov	w0, #0x1                   	// #1
   12f24:	b	12f1c <hard_locale@@Base+0x2c8>
   12f28:	stp	x29, x30, [sp, #-64]!
   12f2c:	mov	x29, sp
   12f30:	stp	x21, x22, [sp, #32]
   12f34:	mov	x22, x1
   12f38:	ldr	x21, [x1]
   12f3c:	stp	x19, x20, [sp, #16]
   12f40:	mov	x19, x0
   12f44:	stp	x23, x24, [sp, #48]
   12f48:	and	w23, w2, #0xff
   12f4c:	ldr	x0, [x22, #8]
   12f50:	cmp	x0, x21
   12f54:	b.hi	12f60 <hard_locale@@Base+0x30c>  // b.pmore
   12f58:	mov	w23, #0x1                   	// #1
   12f5c:	b	13028 <hard_locale@@Base+0x3d4>
   12f60:	ldr	x0, [x21]
   12f64:	cbz	x0, 12fc0 <hard_locale@@Base+0x36c>
   12f68:	ldr	x20, [x21, #8]
   12f6c:	cbnz	x20, 12fc8 <hard_locale@@Base+0x374>
   12f70:	str	xzr, [x21, #8]
   12f74:	ldr	x24, [x21]
   12f78:	cbnz	w23, 12fc0 <hard_locale@@Base+0x36c>
   12f7c:	mov	x1, x24
   12f80:	mov	x0, x19
   12f84:	bl	12d64 <hard_locale@@Base+0x110>
   12f88:	mov	x20, x0
   12f8c:	ldr	x0, [x0]
   12f90:	cbz	x0, 13040 <hard_locale@@Base+0x3ec>
   12f94:	ldr	x0, [x19, #72]
   12f98:	cbz	x0, 1301c <hard_locale@@Base+0x3c8>
   12f9c:	ldr	x1, [x0, #8]
   12fa0:	str	x1, [x19, #72]
   12fa4:	ldr	x1, [x20, #8]
   12fa8:	stp	x24, x1, [x0]
   12fac:	str	x0, [x20, #8]
   12fb0:	ldr	x0, [x22, #24]
   12fb4:	str	xzr, [x21]
   12fb8:	sub	x0, x0, #0x1
   12fbc:	str	x0, [x22, #24]
   12fc0:	add	x21, x21, #0x10
   12fc4:	b	12f4c <hard_locale@@Base+0x2f8>
   12fc8:	ldr	x24, [x20]
   12fcc:	mov	x0, x19
   12fd0:	mov	x1, x24
   12fd4:	bl	12d64 <hard_locale@@Base+0x110>
   12fd8:	ldr	x2, [x0]
   12fdc:	ldr	x1, [x20, #8]
   12fe0:	cbz	x2, 12ff8 <hard_locale@@Base+0x3a4>
   12fe4:	ldr	x2, [x0, #8]
   12fe8:	str	x2, [x20, #8]
   12fec:	str	x20, [x0, #8]
   12ff0:	mov	x20, x1
   12ff4:	b	12f6c <hard_locale@@Base+0x318>
   12ff8:	str	x24, [x0]
   12ffc:	ldr	x0, [x19, #24]
   13000:	add	x0, x0, #0x1
   13004:	str	x0, [x19, #24]
   13008:	str	xzr, [x20]
   1300c:	ldr	x0, [x19, #72]
   13010:	str	x0, [x20, #8]
   13014:	str	x20, [x19, #72]
   13018:	b	12ff0 <hard_locale@@Base+0x39c>
   1301c:	mov	x0, #0x10                  	// #16
   13020:	bl	aab0 <malloc@plt>
   13024:	cbnz	x0, 12fa4 <hard_locale@@Base+0x350>
   13028:	mov	w0, w23
   1302c:	ldp	x19, x20, [sp, #16]
   13030:	ldp	x21, x22, [sp, #32]
   13034:	ldp	x23, x24, [sp, #48]
   13038:	ldp	x29, x30, [sp], #64
   1303c:	ret
   13040:	ldr	x0, [x19, #24]
   13044:	str	x24, [x20]
   13048:	add	x0, x0, #0x1
   1304c:	str	x0, [x19, #24]
   13050:	b	12fb0 <hard_locale@@Base+0x35c>

0000000000013054 <hash_get_n_buckets@@Base>:
   13054:	ldr	x0, [x0, #16]
   13058:	ret

000000000001305c <hash_get_n_buckets_used@@Base>:
   1305c:	ldr	x0, [x0, #24]
   13060:	ret

0000000000013064 <hash_get_n_entries@@Base>:
   13064:	ldr	x0, [x0, #32]
   13068:	ret

000000000001306c <hash_get_max_bucket_length@@Base>:
   1306c:	ldp	x1, x4, [x0]
   13070:	mov	x0, #0x0                   	// #0
   13074:	cmp	x4, x1
   13078:	b.hi	13080 <hash_get_max_bucket_length@@Base+0x14>  // b.pmore
   1307c:	ret
   13080:	ldr	x2, [x1]
   13084:	cbz	x2, 130a8 <hash_get_max_bucket_length@@Base+0x3c>
   13088:	mov	x3, x1
   1308c:	mov	x2, #0x1                   	// #1
   13090:	b	13098 <hash_get_max_bucket_length@@Base+0x2c>
   13094:	add	x2, x2, #0x1
   13098:	ldr	x3, [x3, #8]
   1309c:	cbnz	x3, 13094 <hash_get_max_bucket_length@@Base+0x28>
   130a0:	cmp	x0, x2
   130a4:	csel	x0, x0, x2, cs  // cs = hs, nlast
   130a8:	add	x1, x1, #0x10
   130ac:	b	13074 <hash_get_max_bucket_length@@Base+0x8>

00000000000130b0 <hash_table_ok@@Base>:
   130b0:	ldp	x2, x5, [x0]
   130b4:	mov	x1, #0x0                   	// #0
   130b8:	mov	x3, #0x0                   	// #0
   130bc:	cmp	x5, x2
   130c0:	b.hi	130e0 <hash_table_ok@@Base+0x30>  // b.pmore
   130c4:	ldr	x2, [x0, #24]
   130c8:	cmp	x2, x3
   130cc:	b.ne	1310c <hash_table_ok@@Base+0x5c>  // b.any
   130d0:	ldr	x0, [x0, #32]
   130d4:	cmp	x0, x1
   130d8:	cset	w0, eq  // eq = none
   130dc:	ret
   130e0:	ldr	x4, [x2]
   130e4:	cbz	x4, 130fc <hash_table_ok@@Base+0x4c>
   130e8:	add	x3, x3, #0x1
   130ec:	add	x1, x1, #0x1
   130f0:	mov	x4, x2
   130f4:	ldr	x4, [x4, #8]
   130f8:	cbnz	x4, 13104 <hash_table_ok@@Base+0x54>
   130fc:	add	x2, x2, #0x10
   13100:	b	130bc <hash_table_ok@@Base+0xc>
   13104:	add	x1, x1, #0x1
   13108:	b	130f4 <hash_table_ok@@Base+0x44>
   1310c:	mov	w0, #0x0                   	// #0
   13110:	b	130dc <hash_table_ok@@Base+0x2c>

0000000000013114 <hash_print_statistics@@Base>:
   13114:	stp	x29, x30, [sp, #-64]!
   13118:	mov	x29, sp
   1311c:	stp	x19, x20, [sp, #16]
   13120:	mov	x19, x1
   13124:	stp	x21, x22, [sp, #32]
   13128:	mov	x21, x0
   1312c:	str	x23, [sp, #48]
   13130:	bl	b650 <hash_get_n_entries@plt>
   13134:	mov	x23, x0
   13138:	mov	x0, x21
   1313c:	bl	b100 <hash_get_n_buckets@plt>
   13140:	mov	x20, x0
   13144:	mov	x0, x21
   13148:	bl	ad30 <hash_get_n_buckets_used@plt>
   1314c:	mov	x22, x0
   13150:	mov	x0, x21
   13154:	bl	aff0 <hash_get_max_bucket_length@plt>
   13158:	mov	x21, x0
   1315c:	mov	x2, x23
   13160:	mov	x0, x19
   13164:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   13168:	add	x1, x1, #0x748
   1316c:	bl	b640 <fprintf@plt>
   13170:	mov	x2, x20
   13174:	mov	x0, x19
   13178:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   1317c:	add	x1, x1, #0x760
   13180:	bl	b640 <fprintf@plt>
   13184:	ucvtf	d1, x22
   13188:	mov	x0, #0x4059000000000000    	// #4636737291354636288
   1318c:	fmov	d0, x0
   13190:	mov	x2, x22
   13194:	mov	x0, x19
   13198:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   1319c:	add	x1, x1, #0x778
   131a0:	fmul	d1, d1, d0
   131a4:	ucvtf	d0, x20
   131a8:	fdiv	d0, d1, d0
   131ac:	bl	b640 <fprintf@plt>
   131b0:	mov	x2, x21
   131b4:	mov	x0, x19
   131b8:	ldp	x19, x20, [sp, #16]
   131bc:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   131c0:	ldp	x21, x22, [sp, #32]
   131c4:	add	x1, x1, #0x799
   131c8:	ldr	x23, [sp, #48]
   131cc:	ldp	x29, x30, [sp], #64
   131d0:	b	b640 <fprintf@plt>

00000000000131d4 <hash_lookup@@Base>:
   131d4:	stp	x29, x30, [sp, #-48]!
   131d8:	mov	x29, sp
   131dc:	stp	x19, x20, [sp, #16]
   131e0:	mov	x20, x1
   131e4:	str	x21, [sp, #32]
   131e8:	mov	x21, x0
   131ec:	bl	12d64 <hard_locale@@Base+0x110>
   131f0:	mov	x19, x0
   131f4:	ldr	x0, [x0]
   131f8:	cbz	x0, 13238 <hash_lookup@@Base+0x64>
   131fc:	ldr	x1, [x19]
   13200:	cmp	x1, x20
   13204:	b.ne	1321c <hash_lookup@@Base+0x48>  // b.any
   13208:	ldr	x0, [x19]
   1320c:	ldp	x19, x20, [sp, #16]
   13210:	ldr	x21, [sp, #32]
   13214:	ldp	x29, x30, [sp], #48
   13218:	ret
   1321c:	ldr	x2, [x21, #56]
   13220:	mov	x0, x20
   13224:	blr	x2
   13228:	tst	w0, #0xff
   1322c:	b.ne	13208 <hash_lookup@@Base+0x34>  // b.any
   13230:	ldr	x19, [x19, #8]
   13234:	cbnz	x19, 131fc <hash_lookup@@Base+0x28>
   13238:	mov	x0, #0x0                   	// #0
   1323c:	b	1320c <hash_lookup@@Base+0x38>

0000000000013240 <hash_get_first@@Base>:
   13240:	ldr	x1, [x0, #32]
   13244:	cbz	x1, 13270 <hash_get_first@@Base+0x30>
   13248:	ldp	x1, x2, [x0]
   1324c:	cmp	x2, x1
   13250:	b.hi	13260 <hash_get_first@@Base+0x20>  // b.pmore
   13254:	stp	x29, x30, [sp, #-16]!
   13258:	mov	x29, sp
   1325c:	bl	aeb0 <abort@plt>
   13260:	ldr	x0, [x1]
   13264:	cbnz	x0, 13274 <hash_get_first@@Base+0x34>
   13268:	add	x1, x1, #0x10
   1326c:	b	1324c <hash_get_first@@Base+0xc>
   13270:	mov	x0, #0x0                   	// #0
   13274:	ret

0000000000013278 <hash_get_next@@Base>:
   13278:	stp	x29, x30, [sp, #-32]!
   1327c:	mov	x29, sp
   13280:	stp	x19, x20, [sp, #16]
   13284:	mov	x19, x0
   13288:	mov	x20, x1
   1328c:	bl	12d64 <hard_locale@@Base+0x110>
   13290:	mov	x2, x0
   13294:	mov	x3, x0
   13298:	ldp	x0, x3, [x3]
   1329c:	cmp	x0, x20
   132a0:	b.ne	132b8 <hash_get_next@@Base+0x40>  // b.any
   132a4:	cbz	x3, 132bc <hash_get_next@@Base+0x44>
   132a8:	ldr	x0, [x3]
   132ac:	ldp	x19, x20, [sp, #16]
   132b0:	ldp	x29, x30, [sp], #32
   132b4:	ret
   132b8:	cbnz	x3, 13298 <hash_get_next@@Base+0x20>
   132bc:	ldr	x1, [x19, #8]
   132c0:	add	x2, x2, #0x10
   132c4:	cmp	x1, x2
   132c8:	b.hi	132d4 <hash_get_next@@Base+0x5c>  // b.pmore
   132cc:	mov	x0, #0x0                   	// #0
   132d0:	b	132ac <hash_get_next@@Base+0x34>
   132d4:	ldr	x0, [x2]
   132d8:	cbz	x0, 132c0 <hash_get_next@@Base+0x48>
   132dc:	b	132ac <hash_get_next@@Base+0x34>

00000000000132e0 <hash_get_entries@@Base>:
   132e0:	mov	x4, x0
   132e4:	sub	x1, x1, #0x8
   132e8:	mov	x0, #0x0                   	// #0
   132ec:	ldr	x3, [x4]
   132f0:	ldr	x5, [x4, #8]
   132f4:	cmp	x5, x3
   132f8:	b.hi	13300 <hash_get_entries@@Base+0x20>  // b.pmore
   132fc:	ret
   13300:	ldr	x5, [x3]
   13304:	cbz	x5, 13328 <hash_get_entries@@Base+0x48>
   13308:	mov	x5, x3
   1330c:	cmp	x2, x0
   13310:	b.ls	132fc <hash_get_entries@@Base+0x1c>  // b.plast
   13314:	add	x0, x0, #0x1
   13318:	ldr	x6, [x5]
   1331c:	str	x6, [x1, x0, lsl #3]
   13320:	ldr	x5, [x5, #8]
   13324:	cbnz	x5, 1330c <hash_get_entries@@Base+0x2c>
   13328:	add	x3, x3, #0x10
   1332c:	b	132f0 <hash_get_entries@@Base+0x10>

0000000000013330 <hash_do_for_each@@Base>:
   13330:	stp	x29, x30, [sp, #-64]!
   13334:	mov	x29, sp
   13338:	stp	x19, x20, [sp, #16]
   1333c:	mov	x20, x0
   13340:	ldr	x19, [x0]
   13344:	stp	x23, x24, [sp, #48]
   13348:	mov	x23, x1
   1334c:	mov	x24, x2
   13350:	stp	x21, x22, [sp, #32]
   13354:	mov	x22, #0x0                   	// #0
   13358:	ldr	x0, [x20, #8]
   1335c:	cmp	x0, x19
   13360:	b.hi	1337c <hash_do_for_each@@Base+0x4c>  // b.pmore
   13364:	mov	x0, x22
   13368:	ldp	x19, x20, [sp, #16]
   1336c:	ldp	x21, x22, [sp, #32]
   13370:	ldp	x23, x24, [sp, #48]
   13374:	ldp	x29, x30, [sp], #64
   13378:	ret
   1337c:	ldr	x0, [x19]
   13380:	cbz	x0, 133a8 <hash_do_for_each@@Base+0x78>
   13384:	mov	x21, x19
   13388:	ldr	x0, [x21]
   1338c:	mov	x1, x24
   13390:	blr	x23
   13394:	tst	w0, #0xff
   13398:	b.eq	13364 <hash_do_for_each@@Base+0x34>  // b.none
   1339c:	ldr	x21, [x21, #8]
   133a0:	add	x22, x22, #0x1
   133a4:	cbnz	x21, 13388 <hash_do_for_each@@Base+0x58>
   133a8:	add	x19, x19, #0x10
   133ac:	b	13358 <hash_do_for_each@@Base+0x28>

00000000000133b0 <hash_string@@Base>:
   133b0:	mov	x3, x0
   133b4:	mov	x4, #0x1f                  	// #31
   133b8:	mov	x0, #0x0                   	// #0
   133bc:	ldrb	w2, [x3]
   133c0:	cbnz	w2, 133c8 <hash_string@@Base+0x18>
   133c4:	ret
   133c8:	and	x2, x2, #0xff
   133cc:	add	x3, x3, #0x1
   133d0:	madd	x2, x0, x4, x2
   133d4:	udiv	x0, x2, x1
   133d8:	msub	x0, x0, x1, x2
   133dc:	b	133bc <hash_string@@Base+0xc>

00000000000133e0 <hash_reset_tuning@@Base>:
   133e0:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   133e4:	add	x1, x1, #0x7b8
   133e8:	ldp	x2, x3, [x1]
   133ec:	stp	x2, x3, [x0]
   133f0:	ldr	w1, [x1, #16]
   133f4:	str	w1, [x0, #16]
   133f8:	ret

00000000000133fc <hash_initialize@@Base>:
   133fc:	stp	x29, x30, [sp, #-64]!
   13400:	mov	x29, sp
   13404:	stp	x19, x20, [sp, #16]
   13408:	mov	x20, x1
   1340c:	stp	x21, x22, [sp, #32]
   13410:	mov	x21, x3
   13414:	stp	x23, x24, [sp, #48]
   13418:	mov	x24, x0
   1341c:	mov	x23, x4
   13420:	cbnz	x2, 134bc <hash_initialize@@Base+0xc0>
   13424:	adrp	x22, 12000 <_option_is_end@@Base+0x874>
   13428:	add	x22, x22, #0xcb4
   1342c:	cbnz	x21, 13438 <hash_initialize@@Base+0x3c>
   13430:	adrp	x21, 12000 <_option_is_end@@Base+0x874>
   13434:	add	x21, x21, #0xcc4
   13438:	mov	x0, #0x50                  	// #80
   1343c:	bl	aab0 <malloc@plt>
   13440:	mov	x19, x0
   13444:	cbz	x0, 134a4 <hash_initialize@@Base+0xa8>
   13448:	cbnz	x20, 13454 <hash_initialize@@Base+0x58>
   1344c:	adrp	x20, 27000 <vasnprintf@@Base+0x1170>
   13450:	add	x20, x20, #0x7b8
   13454:	mov	x0, x19
   13458:	str	x20, [x0, #40]!
   1345c:	bl	12e8c <hard_locale@@Base+0x238>
   13460:	tst	w0, #0xff
   13464:	b.eq	134c4 <hash_initialize@@Base+0xc8>  // b.none
   13468:	mov	x1, x20
   1346c:	mov	x0, x24
   13470:	bl	12cd0 <hard_locale@@Base+0x7c>
   13474:	str	x0, [x19, #16]
   13478:	mov	x20, x0
   1347c:	cbz	x0, 134c4 <hash_initialize@@Base+0xc8>
   13480:	mov	x1, #0x10                  	// #16
   13484:	bl	ace0 <calloc@plt>
   13488:	str	x0, [x19]
   1348c:	cbz	x0, 134c4 <hash_initialize@@Base+0xc8>
   13490:	add	x20, x0, x20, lsl #4
   13494:	str	x20, [x19, #8]
   13498:	stp	xzr, xzr, [x19, #24]
   1349c:	stp	x22, x21, [x19, #48]
   134a0:	stp	x23, xzr, [x19, #64]
   134a4:	mov	x0, x19
   134a8:	ldp	x19, x20, [sp, #16]
   134ac:	ldp	x21, x22, [sp, #32]
   134b0:	ldp	x23, x24, [sp, #48]
   134b4:	ldp	x29, x30, [sp], #64
   134b8:	ret
   134bc:	mov	x22, x2
   134c0:	b	1342c <hash_initialize@@Base+0x30>
   134c4:	mov	x0, x19
   134c8:	mov	x19, #0x0                   	// #0
   134cc:	bl	b050 <free@plt>
   134d0:	b	134a4 <hash_initialize@@Base+0xa8>

00000000000134d4 <hash_clear@@Base>:
   134d4:	stp	x29, x30, [sp, #-48]!
   134d8:	mov	x29, sp
   134dc:	stp	x19, x20, [sp, #16]
   134e0:	mov	x19, x0
   134e4:	ldr	x20, [x0]
   134e8:	str	x21, [sp, #32]
   134ec:	ldr	x0, [x19, #8]
   134f0:	cmp	x0, x20
   134f4:	b.hi	1350c <hash_clear@@Base+0x38>  // b.pmore
   134f8:	ldr	x21, [sp, #32]
   134fc:	stp	xzr, xzr, [x19, #24]
   13500:	ldp	x19, x20, [sp, #16]
   13504:	ldp	x29, x30, [sp], #48
   13508:	ret
   1350c:	ldr	x0, [x20]
   13510:	cbz	x0, 13530 <hash_clear@@Base+0x5c>
   13514:	ldr	x21, [x20, #8]
   13518:	ldr	x1, [x19, #64]
   1351c:	cbnz	x21, 13538 <hash_clear@@Base+0x64>
   13520:	cbz	x1, 1352c <hash_clear@@Base+0x58>
   13524:	ldr	x0, [x20]
   13528:	blr	x1
   1352c:	stp	xzr, xzr, [x20]
   13530:	add	x20, x20, #0x10
   13534:	b	134ec <hash_clear@@Base+0x18>
   13538:	cbz	x1, 13544 <hash_clear@@Base+0x70>
   1353c:	ldr	x0, [x21]
   13540:	blr	x1
   13544:	ldr	x0, [x21, #8]
   13548:	ldr	x1, [x19, #72]
   1354c:	stp	xzr, x1, [x21]
   13550:	str	x21, [x19, #72]
   13554:	mov	x21, x0
   13558:	b	13518 <hash_clear@@Base+0x44>

000000000001355c <hash_free@@Base>:
   1355c:	stp	x29, x30, [sp, #-48]!
   13560:	mov	x29, sp
   13564:	stp	x19, x20, [sp, #16]
   13568:	mov	x19, x0
   1356c:	ldr	x0, [x0, #64]
   13570:	str	x21, [sp, #32]
   13574:	cbnz	x0, 135ac <hash_free@@Base+0x50>
   13578:	ldr	x20, [x19]
   1357c:	ldr	x0, [x19, #8]
   13580:	cmp	x0, x20
   13584:	b.hi	135f0 <hash_free@@Base+0x94>  // b.pmore
   13588:	ldr	x0, [x19, #72]
   1358c:	cbnz	x0, 13610 <hash_free@@Base+0xb4>
   13590:	ldr	x0, [x19]
   13594:	bl	b050 <free@plt>
   13598:	mov	x0, x19
   1359c:	ldp	x19, x20, [sp, #16]
   135a0:	ldr	x21, [sp, #32]
   135a4:	ldp	x29, x30, [sp], #48
   135a8:	b	b050 <free@plt>
   135ac:	ldr	x0, [x19, #32]
   135b0:	cbz	x0, 13578 <hash_free@@Base+0x1c>
   135b4:	ldr	x20, [x19]
   135b8:	ldr	x0, [x19, #8]
   135bc:	cmp	x0, x20
   135c0:	b.ls	13578 <hash_free@@Base+0x1c>  // b.plast
   135c4:	ldr	x0, [x20]
   135c8:	cbnz	x0, 135d4 <hash_free@@Base+0x78>
   135cc:	add	x20, x20, #0x10
   135d0:	b	135b8 <hash_free@@Base+0x5c>
   135d4:	mov	x21, x20
   135d8:	ldr	x0, [x21]
   135dc:	ldr	x1, [x19, #64]
   135e0:	blr	x1
   135e4:	ldr	x21, [x21, #8]
   135e8:	cbnz	x21, 135d8 <hash_free@@Base+0x7c>
   135ec:	b	135cc <hash_free@@Base+0x70>
   135f0:	ldr	x0, [x20, #8]
   135f4:	cbnz	x0, 13600 <hash_free@@Base+0xa4>
   135f8:	add	x20, x20, #0x10
   135fc:	b	1357c <hash_free@@Base+0x20>
   13600:	ldr	x21, [x0, #8]
   13604:	bl	b050 <free@plt>
   13608:	mov	x0, x21
   1360c:	b	135f4 <hash_free@@Base+0x98>
   13610:	ldr	x20, [x0, #8]
   13614:	bl	b050 <free@plt>
   13618:	mov	x0, x20
   1361c:	b	1358c <hash_free@@Base+0x30>

0000000000013620 <hash_rehash@@Base>:
   13620:	stp	x29, x30, [sp, #-128]!
   13624:	mov	x29, sp
   13628:	stp	x19, x20, [sp, #16]
   1362c:	mov	x19, x0
   13630:	mov	x0, x1
   13634:	str	x21, [sp, #32]
   13638:	ldr	x21, [x19, #40]
   1363c:	mov	x1, x21
   13640:	bl	12cd0 <hard_locale@@Base+0x7c>
   13644:	cbnz	x0, 13660 <hash_rehash@@Base+0x40>
   13648:	mov	w20, #0x0                   	// #0
   1364c:	mov	w0, w20
   13650:	ldp	x19, x20, [sp, #16]
   13654:	ldr	x21, [sp, #32]
   13658:	ldp	x29, x30, [sp], #128
   1365c:	ret
   13660:	ldr	x1, [x19, #16]
   13664:	mov	x20, x0
   13668:	cmp	x1, x0
   1366c:	b.eq	13748 <hash_rehash@@Base+0x128>  // b.none
   13670:	mov	x1, #0x10                  	// #16
   13674:	bl	ace0 <calloc@plt>
   13678:	str	x0, [sp, #48]
   1367c:	cbz	x0, 13648 <hash_rehash@@Base+0x28>
   13680:	stp	x20, xzr, [sp, #64]
   13684:	add	x20, x0, x20, lsl #4
   13688:	mov	x1, x19
   1368c:	ldr	x0, [x19, #48]
   13690:	str	x0, [sp, #96]
   13694:	ldr	x0, [x19, #56]
   13698:	str	x0, [sp, #104]
   1369c:	ldr	x0, [x19, #64]
   136a0:	stp	xzr, x21, [sp, #80]
   136a4:	add	x21, sp, #0x30
   136a8:	str	x0, [sp, #112]
   136ac:	mov	w2, #0x0                   	// #0
   136b0:	ldr	x0, [x19, #72]
   136b4:	str	x20, [sp, #56]
   136b8:	str	x0, [sp, #120]
   136bc:	mov	x0, x21
   136c0:	bl	12f28 <hard_locale@@Base+0x2d4>
   136c4:	ands	w20, w0, #0xff
   136c8:	b.eq	13700 <hash_rehash@@Base+0xe0>  // b.none
   136cc:	ldr	x0, [x19]
   136d0:	bl	b050 <free@plt>
   136d4:	ldr	x0, [sp, #48]
   136d8:	str	x0, [x19]
   136dc:	ldr	x0, [sp, #56]
   136e0:	str	x0, [x19, #8]
   136e4:	ldr	x0, [sp, #64]
   136e8:	str	x0, [x19, #16]
   136ec:	ldr	x0, [sp, #72]
   136f0:	str	x0, [x19, #24]
   136f4:	ldr	x0, [sp, #120]
   136f8:	str	x0, [x19, #72]
   136fc:	b	1364c <hash_rehash@@Base+0x2c>
   13700:	ldr	x0, [sp, #120]
   13704:	str	x0, [x19, #72]
   13708:	mov	x1, x21
   1370c:	mov	x0, x19
   13710:	mov	w2, #0x1                   	// #1
   13714:	bl	12f28 <hard_locale@@Base+0x2d4>
   13718:	tst	w0, #0xff
   1371c:	b.ne	13724 <hash_rehash@@Base+0x104>  // b.any
   13720:	bl	aeb0 <abort@plt>
   13724:	mov	x1, x21
   13728:	mov	x0, x19
   1372c:	mov	w2, #0x0                   	// #0
   13730:	bl	12f28 <hard_locale@@Base+0x2d4>
   13734:	tst	w0, #0xff
   13738:	b.eq	13720 <hash_rehash@@Base+0x100>  // b.none
   1373c:	ldr	x0, [sp, #48]
   13740:	bl	b050 <free@plt>
   13744:	b	1364c <hash_rehash@@Base+0x2c>
   13748:	mov	w20, #0x1                   	// #1
   1374c:	b	1364c <hash_rehash@@Base+0x2c>

0000000000013750 <hash_insert_if_absent@@Base>:
   13750:	stp	x29, x30, [sp, #-64]!
   13754:	mov	x29, sp
   13758:	stp	x19, x20, [sp, #16]
   1375c:	stp	x21, x22, [sp, #32]
   13760:	cbnz	x1, 13768 <hash_insert_if_absent@@Base+0x18>
   13764:	bl	aeb0 <abort@plt>
   13768:	add	x22, sp, #0x38
   1376c:	mov	x21, x2
   13770:	mov	x19, x0
   13774:	mov	x20, x1
   13778:	mov	x2, x22
   1377c:	mov	w3, #0x0                   	// #0
   13780:	bl	12da8 <hard_locale@@Base+0x154>
   13784:	cbz	x0, 13798 <hash_insert_if_absent@@Base+0x48>
   13788:	cbz	x21, 13790 <hash_insert_if_absent@@Base+0x40>
   1378c:	str	x0, [x21]
   13790:	mov	w0, #0x0                   	// #0
   13794:	b	13810 <hash_insert_if_absent@@Base+0xc0>
   13798:	ldr	x0, [x19, #24]
   1379c:	ldr	x1, [x19, #40]
   137a0:	ucvtf	s1, x0
   137a4:	ldr	x0, [x19, #16]
   137a8:	ldr	s2, [x1, #8]
   137ac:	ucvtf	s0, x0
   137b0:	fmul	s0, s0, s2
   137b4:	fcmpe	s1, s0
   137b8:	b.le	1384c <hash_insert_if_absent@@Base+0xfc>
   137bc:	add	x0, x19, #0x28
   137c0:	bl	12e8c <hard_locale@@Base+0x238>
   137c4:	ldr	x0, [x19, #16]
   137c8:	ldr	x1, [x19, #40]
   137cc:	ucvtf	s0, x0
   137d0:	ldr	x0, [x19, #24]
   137d4:	ldr	s2, [x1, #8]
   137d8:	ucvtf	s1, x0
   137dc:	fmul	s3, s2, s0
   137e0:	fcmpe	s1, s3
   137e4:	b.le	1384c <hash_insert_if_absent@@Base+0xfc>
   137e8:	ldrb	w0, [x1, #16]
   137ec:	ldr	s1, [x1, #12]
   137f0:	fmul	s0, s0, s1
   137f4:	cbnz	w0, 137fc <hash_insert_if_absent@@Base+0xac>
   137f8:	fmul	s0, s0, s2
   137fc:	mov	w0, #0x5f800000            	// #1602224128
   13800:	fmov	s1, w0
   13804:	fcmpe	s0, s1
   13808:	b.lt	13820 <hash_insert_if_absent@@Base+0xd0>  // b.tstop
   1380c:	mov	w0, #0xffffffff            	// #-1
   13810:	ldp	x19, x20, [sp, #16]
   13814:	ldp	x21, x22, [sp, #32]
   13818:	ldp	x29, x30, [sp], #64
   1381c:	ret
   13820:	fcvtzu	x1, s0
   13824:	mov	x0, x19
   13828:	bl	aee0 <hash_rehash@plt>
   1382c:	tst	w0, #0xff
   13830:	b.eq	1380c <hash_insert_if_absent@@Base+0xbc>  // b.none
   13834:	mov	x2, x22
   13838:	mov	x1, x20
   1383c:	mov	x0, x19
   13840:	mov	w3, #0x0                   	// #0
   13844:	bl	12da8 <hard_locale@@Base+0x154>
   13848:	cbnz	x0, 13764 <hash_insert_if_absent@@Base+0x14>
   1384c:	ldr	x21, [sp, #56]
   13850:	ldr	x0, [x21]
   13854:	cbz	x0, 13898 <hash_insert_if_absent@@Base+0x148>
   13858:	ldr	x0, [x19, #72]
   1385c:	cbz	x0, 13888 <hash_insert_if_absent@@Base+0x138>
   13860:	ldr	x1, [x0, #8]
   13864:	str	x1, [x19, #72]
   13868:	ldr	x1, [x21, #8]
   1386c:	stp	x20, x1, [x0]
   13870:	str	x0, [x21, #8]
   13874:	ldr	x0, [x19, #32]
   13878:	add	x0, x0, #0x1
   1387c:	str	x0, [x19, #32]
   13880:	mov	w0, #0x1                   	// #1
   13884:	b	13810 <hash_insert_if_absent@@Base+0xc0>
   13888:	mov	x0, #0x10                  	// #16
   1388c:	bl	aab0 <malloc@plt>
   13890:	cbz	x0, 1380c <hash_insert_if_absent@@Base+0xbc>
   13894:	b	13868 <hash_insert_if_absent@@Base+0x118>
   13898:	ldr	x0, [x19, #32]
   1389c:	str	x20, [x21]
   138a0:	add	x0, x0, #0x1
   138a4:	str	x0, [x19, #32]
   138a8:	ldr	x0, [x19, #24]
   138ac:	add	x0, x0, #0x1
   138b0:	str	x0, [x19, #24]
   138b4:	b	13880 <hash_insert_if_absent@@Base+0x130>

00000000000138b8 <hash_insert@@Base>:
   138b8:	stp	x29, x30, [sp, #-48]!
   138bc:	mov	x29, sp
   138c0:	add	x2, sp, #0x28
   138c4:	str	x19, [sp, #16]
   138c8:	mov	x19, x1
   138cc:	bl	ad20 <hash_insert_if_absent@plt>
   138d0:	cmn	w0, #0x1
   138d4:	b.eq	138f0 <hash_insert@@Base+0x38>  // b.none
   138d8:	cbnz	w0, 138e0 <hash_insert@@Base+0x28>
   138dc:	ldr	x19, [sp, #40]
   138e0:	mov	x0, x19
   138e4:	ldr	x19, [sp, #16]
   138e8:	ldp	x29, x30, [sp], #48
   138ec:	ret
   138f0:	mov	x19, #0x0                   	// #0
   138f4:	b	138e0 <hash_insert@@Base+0x28>

00000000000138f8 <hash_delete@@Base>:
   138f8:	stp	x29, x30, [sp, #-64]!
   138fc:	mov	w3, #0x1                   	// #1
   13900:	mov	x29, sp
   13904:	add	x2, sp, #0x38
   13908:	stp	x19, x20, [sp, #16]
   1390c:	mov	x19, x0
   13910:	str	x21, [sp, #32]
   13914:	bl	12da8 <hard_locale@@Base+0x154>
   13918:	mov	x20, x0
   1391c:	cbz	x0, 139c0 <hash_delete@@Base+0xc8>
   13920:	ldr	x0, [x19, #32]
   13924:	sub	x0, x0, #0x1
   13928:	str	x0, [x19, #32]
   1392c:	ldr	x0, [sp, #56]
   13930:	ldr	x0, [x0]
   13934:	cbnz	x0, 139c0 <hash_delete@@Base+0xc8>
   13938:	ldr	x1, [x19, #24]
   1393c:	ldr	x0, [x19, #40]
   13940:	sub	x1, x1, #0x1
   13944:	ucvtf	s0, x1
   13948:	ldr	s2, [x0]
   1394c:	str	x1, [x19, #24]
   13950:	ldr	x1, [x19, #16]
   13954:	ucvtf	s1, x1
   13958:	fmul	s1, s1, s2
   1395c:	fcmpe	s0, s1
   13960:	b.pl	139c0 <hash_delete@@Base+0xc8>  // b.nfrst
   13964:	add	x0, x19, #0x28
   13968:	bl	12e8c <hard_locale@@Base+0x238>
   1396c:	ldr	x1, [x19, #16]
   13970:	ldr	x0, [x19, #40]
   13974:	ucvtf	s0, x1
   13978:	ldr	x1, [x19, #24]
   1397c:	ldr	s1, [x0]
   13980:	ucvtf	s2, x1
   13984:	fmul	s1, s0, s1
   13988:	fcmpe	s2, s1
   1398c:	b.pl	139c0 <hash_delete@@Base+0xc8>  // b.nfrst
   13990:	ldrb	w1, [x0, #16]
   13994:	ldr	s1, [x0, #4]
   13998:	fmul	s0, s0, s1
   1399c:	cbz	w1, 139d4 <hash_delete@@Base+0xdc>
   139a0:	fcvtzu	x1, s0
   139a4:	mov	x0, x19
   139a8:	bl	aee0 <hash_rehash@plt>
   139ac:	tst	w0, #0xff
   139b0:	b.ne	139c0 <hash_delete@@Base+0xc8>  // b.any
   139b4:	ldr	x0, [x19, #72]
   139b8:	cbnz	x0, 139e0 <hash_delete@@Base+0xe8>
   139bc:	str	xzr, [x19, #72]
   139c0:	mov	x0, x20
   139c4:	ldp	x19, x20, [sp, #16]
   139c8:	ldr	x21, [sp, #32]
   139cc:	ldp	x29, x30, [sp], #64
   139d0:	ret
   139d4:	ldr	s1, [x0, #8]
   139d8:	fmul	s0, s0, s1
   139dc:	b	139a0 <hash_delete@@Base+0xa8>
   139e0:	ldr	x21, [x0, #8]
   139e4:	bl	b050 <free@plt>
   139e8:	mov	x0, x21
   139ec:	b	139b8 <hash_delete@@Base+0xc0>
   139f0:	ldr	x0, [x0, #56]
   139f4:	ret
   139f8:	stp	x29, x30, [sp, #-64]!
   139fc:	mov	x29, sp
   13a00:	stp	x21, x22, [sp, #32]
   13a04:	mov	x21, x1
   13a08:	mov	x22, x2
   13a0c:	ldr	x1, [x0, #32]
   13a10:	stp	x19, x20, [sp, #16]
   13a14:	mov	x19, x0
   13a18:	str	x23, [sp, #48]
   13a1c:	cbz	x1, 13a50 <hash_delete@@Base+0x158>
   13a20:	mov	x0, x21
   13a24:	blr	x1
   13a28:	mov	x20, x0
   13a2c:	ldr	x1, [x19, #48]
   13a30:	ldr	x23, [x19, #8]
   13a34:	udiv	x0, x20, x1
   13a38:	msub	x0, x0, x1, x20
   13a3c:	ldr	x1, [x19, #40]
   13a40:	ldr	x19, [x1, x0, lsl #3]
   13a44:	cbnz	x19, 13a58 <hash_delete@@Base+0x160>
   13a48:	mov	w0, #0x0                   	// #0
   13a4c:	b	13a84 <hash_delete@@Base+0x18c>
   13a50:	mov	x20, x21
   13a54:	b	13a2c <hash_delete@@Base+0x134>
   13a58:	ldr	x0, [x19, #8]
   13a5c:	cmp	x0, x20
   13a60:	b.ne	13aa4 <hash_delete@@Base+0x1ac>  // b.any
   13a64:	ldr	x1, [x19, #16]
   13a68:	cbz	x23, 13a98 <hash_delete@@Base+0x1a0>
   13a6c:	mov	x0, x21
   13a70:	blr	x23
   13a74:	and	w0, w0, #0xff
   13a78:	cbz	w0, 13aa4 <hash_delete@@Base+0x1ac>
   13a7c:	ldr	x1, [x19, #24]
   13a80:	str	x1, [x22]
   13a84:	ldp	x19, x20, [sp, #16]
   13a88:	ldp	x21, x22, [sp, #32]
   13a8c:	ldr	x23, [sp, #48]
   13a90:	ldp	x29, x30, [sp], #64
   13a94:	ret
   13a98:	cmp	x21, x1
   13a9c:	cset	w0, eq  // eq = none
   13aa0:	b	13a78 <hash_delete@@Base+0x180>
   13aa4:	ldr	x19, [x19]
   13aa8:	b	13a44 <hash_delete@@Base+0x14c>
   13aac:	ldr	x2, [x0]
   13ab0:	stp	x2, x0, [x8]
   13ab4:	ldr	x1, [x0, #48]
   13ab8:	str	xzr, [x8, #24]
   13abc:	stp	xzr, x1, [x8, #40]
   13ac0:	ret
   13ac4:	ret
   13ac8:	stp	x29, x30, [sp, #-80]!
   13acc:	mov	x29, sp
   13ad0:	stp	x19, x20, [sp, #16]
   13ad4:	mov	x19, x0
   13ad8:	ldr	x0, [x0, #56]
   13adc:	stp	x21, x22, [sp, #32]
   13ae0:	stp	x23, x24, [sp, #48]
   13ae4:	str	x25, [sp, #64]
   13ae8:	cbnz	x0, 13b10 <hash_delete@@Base+0x218>
   13aec:	ldr	x0, [x19, #40]
   13af0:	bl	b050 <free@plt>
   13af4:	mov	x0, x19
   13af8:	ldp	x19, x20, [sp, #16]
   13afc:	ldp	x21, x22, [sp, #32]
   13b00:	ldp	x23, x24, [sp, #48]
   13b04:	ldr	x25, [sp, #64]
   13b08:	ldp	x29, x30, [sp], #80
   13b0c:	b	b050 <free@plt>
   13b10:	ldp	x22, x23, [x19, #16]
   13b14:	ldp	x24, x21, [x19, #40]
   13b18:	cbz	x21, 13aec <hash_delete@@Base+0x1f4>
   13b1c:	sub	x21, x21, #0x1
   13b20:	ldr	x20, [x24, x21, lsl #3]
   13b24:	cbz	x20, 13b18 <hash_delete@@Base+0x220>
   13b28:	ldr	x25, [x20]
   13b2c:	cbz	x23, 13b38 <hash_delete@@Base+0x240>
   13b30:	ldr	x0, [x20, #24]
   13b34:	blr	x23
   13b38:	cbz	x22, 13b44 <hash_delete@@Base+0x24c>
   13b3c:	ldr	x0, [x20, #16]
   13b40:	blr	x22
   13b44:	mov	x0, x20
   13b48:	mov	x20, x25
   13b4c:	bl	b050 <free@plt>
   13b50:	b	13b24 <hash_delete@@Base+0x22c>
   13b54:	stp	x29, x30, [sp, #-80]!
   13b58:	mov	x29, sp
   13b5c:	stp	x25, x26, [sp, #64]
   13b60:	mov	x25, x1
   13b64:	ldr	x1, [x0, #32]
   13b68:	stp	x19, x20, [sp, #16]
   13b6c:	mov	x19, x0
   13b70:	stp	x21, x22, [sp, #32]
   13b74:	stp	x23, x24, [sp, #48]
   13b78:	mov	x24, x2
   13b7c:	cbz	x1, 13bb4 <hash_delete@@Base+0x2bc>
   13b80:	mov	x0, x25
   13b84:	blr	x1
   13b88:	mov	x23, x0
   13b8c:	ldr	x0, [x19, #48]
   13b90:	ldr	x26, [x19, #8]
   13b94:	udiv	x20, x23, x0
   13b98:	msub	x20, x20, x0, x23
   13b9c:	ldr	x0, [x19, #40]
   13ba0:	add	x20, x0, x20, lsl #3
   13ba4:	ldr	x21, [x20]
   13ba8:	cbnz	x21, 13bbc <hash_delete@@Base+0x2c4>
   13bac:	mov	w22, #0x0                   	// #0
   13bb0:	b	13c14 <hash_delete@@Base+0x31c>
   13bb4:	mov	x23, x25
   13bb8:	b	13b8c <hash_delete@@Base+0x294>
   13bbc:	ldr	x0, [x21, #8]
   13bc0:	cmp	x0, x23
   13bc4:	b.ne	13c3c <hash_delete@@Base+0x344>  // b.any
   13bc8:	ldr	x1, [x21, #16]
   13bcc:	cbz	x26, 13c30 <hash_delete@@Base+0x338>
   13bd0:	mov	x0, x25
   13bd4:	blr	x26
   13bd8:	and	w22, w0, #0xff
   13bdc:	cbz	w22, 13c3c <hash_delete@@Base+0x344>
   13be0:	ldr	x0, [x21, #24]
   13be4:	str	x0, [x24]
   13be8:	ldr	x0, [x21]
   13bec:	ldr	x1, [x19, #16]
   13bf0:	str	x0, [x20]
   13bf4:	ldr	x0, [x19, #56]
   13bf8:	sub	x0, x0, #0x1
   13bfc:	str	x0, [x19, #56]
   13c00:	cbz	x1, 13c0c <hash_delete@@Base+0x314>
   13c04:	ldr	x0, [x21, #16]
   13c08:	blr	x1
   13c0c:	mov	x0, x21
   13c10:	bl	b050 <free@plt>
   13c14:	mov	w0, w22
   13c18:	ldp	x19, x20, [sp, #16]
   13c1c:	ldp	x21, x22, [sp, #32]
   13c20:	ldp	x23, x24, [sp, #48]
   13c24:	ldp	x25, x26, [sp, #64]
   13c28:	ldp	x29, x30, [sp], #80
   13c2c:	ret
   13c30:	cmp	x25, x1
   13c34:	cset	w22, eq  // eq = none
   13c38:	b	13bdc <hash_delete@@Base+0x2e4>
   13c3c:	ldr	x20, [x20]
   13c40:	b	13ba4 <hash_delete@@Base+0x2ac>
   13c44:	stp	x29, x30, [sp, #-80]!
   13c48:	mov	x29, sp
   13c4c:	stp	x21, x22, [sp, #32]
   13c50:	mov	x22, x1
   13c54:	ldr	x1, [x0, #32]
   13c58:	stp	x19, x20, [sp, #16]
   13c5c:	mov	x19, x0
   13c60:	stp	x23, x24, [sp, #48]
   13c64:	mov	x23, x2
   13c68:	stp	x25, x26, [sp, #64]
   13c6c:	mov	x25, x3
   13c70:	cbz	x1, 13cec <hash_delete@@Base+0x3f4>
   13c74:	mov	x0, x22
   13c78:	blr	x1
   13c7c:	mov	x21, x0
   13c80:	ldr	x0, [x19, #48]
   13c84:	ldr	x26, [x19, #8]
   13c88:	udiv	x20, x21, x0
   13c8c:	msub	x20, x20, x0, x21
   13c90:	ldr	x0, [x19, #40]
   13c94:	lsl	x20, x20, #3
   13c98:	ldr	x24, [x0, x20]
   13c9c:	cbnz	x24, 13cf4 <hash_delete@@Base+0x3fc>
   13ca0:	mov	x0, #0x20                  	// #32
   13ca4:	bl	aab0 <malloc@plt>
   13ca8:	cbz	x0, 13de4 <hash_delete@@Base+0x4ec>
   13cac:	stp	x21, x22, [x0, #8]
   13cb0:	ldp	x22, x21, [x19, #40]
   13cb4:	str	x23, [x0, #24]
   13cb8:	ldr	x1, [x22, x20]
   13cbc:	str	x1, [x0]
   13cc0:	str	x0, [x22, x20]
   13cc4:	ldr	x0, [x19, #56]
   13cc8:	add	x0, x0, #0x1
   13ccc:	str	x0, [x19, #56]
   13cd0:	lsr	x1, x0, #1
   13cd4:	adds	x0, x0, x1
   13cd8:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
   13cdc:	cmp	x21, x0
   13ce0:	b.cc	13d54 <hash_delete@@Base+0x45c>  // b.lo, b.ul, b.last
   13ce4:	mov	w0, #0x1                   	// #1
   13ce8:	b	13d28 <hash_delete@@Base+0x430>
   13cec:	mov	x21, x22
   13cf0:	b	13c80 <hash_delete@@Base+0x388>
   13cf4:	ldr	x0, [x24, #8]
   13cf8:	cmp	x0, x21
   13cfc:	b.ne	13d4c <hash_delete@@Base+0x454>  // b.any
   13d00:	ldr	x1, [x24, #16]
   13d04:	cbz	x26, 13d40 <hash_delete@@Base+0x448>
   13d08:	mov	x0, x22
   13d0c:	blr	x26
   13d10:	and	w0, w0, #0xff
   13d14:	cbz	w0, 13d4c <hash_delete@@Base+0x454>
   13d18:	ldr	x0, [x24, #24]
   13d1c:	str	x0, [x25]
   13d20:	mov	w0, #0x0                   	// #0
   13d24:	str	x23, [x24, #24]
   13d28:	ldp	x19, x20, [sp, #16]
   13d2c:	ldp	x21, x22, [sp, #32]
   13d30:	ldp	x23, x24, [sp, #48]
   13d34:	ldp	x25, x26, [sp, #64]
   13d38:	ldp	x29, x30, [sp], #80
   13d3c:	ret
   13d40:	cmp	x22, x1
   13d44:	cset	w0, eq  // eq = none
   13d48:	b	13d14 <hash_delete@@Base+0x41c>
   13d4c:	ldr	x24, [x24]
   13d50:	b	13c9c <hash_delete@@Base+0x3a4>
   13d54:	adrp	x2, 27000 <vasnprintf@@Base+0x1170>
   13d58:	add	x2, x2, #0x7d0
   13d5c:	mov	x1, #0x0                   	// #0
   13d60:	ldr	x20, [x2, x1, lsl #3]
   13d64:	cmp	x0, x20
   13d68:	b.ls	13d7c <hash_delete@@Base+0x484>  // b.plast
   13d6c:	add	x1, x1, #0x1
   13d70:	cmp	x1, #0xe8
   13d74:	b.ne	13d60 <hash_delete@@Base+0x468>  // b.any
   13d78:	b	13ce4 <hash_delete@@Base+0x3ec>
   13d7c:	cmp	x21, x20
   13d80:	b.cs	13ce4 <hash_delete@@Base+0x3ec>  // b.hs, b.nlast
   13d84:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   13d88:	cmp	x20, x0
   13d8c:	b.hi	13ce4 <hash_delete@@Base+0x3ec>  // b.pmore
   13d90:	mov	x0, x20
   13d94:	mov	x1, #0x8                   	// #8
   13d98:	bl	ace0 <calloc@plt>
   13d9c:	cbz	x0, 13ce4 <hash_delete@@Base+0x3ec>
   13da0:	cbnz	x21, 13db4 <hash_delete@@Base+0x4bc>
   13da4:	stp	x0, x20, [x19, #40]
   13da8:	mov	x0, x22
   13dac:	bl	b050 <free@plt>
   13db0:	b	13ce4 <hash_delete@@Base+0x3ec>
   13db4:	sub	x21, x21, #0x1
   13db8:	ldr	x1, [x22, x21, lsl #3]
   13dbc:	cbz	x1, 13da0 <hash_delete@@Base+0x4a8>
   13dc0:	ldp	x4, x3, [x1]
   13dc4:	udiv	x2, x3, x20
   13dc8:	msub	x2, x2, x20, x3
   13dcc:	lsl	x2, x2, #3
   13dd0:	ldr	x3, [x0, x2]
   13dd4:	str	x3, [x1]
   13dd8:	str	x1, [x0, x2]
   13ddc:	mov	x1, x4
   13de0:	b	13dbc <hash_delete@@Base+0x4c4>
   13de4:	mov	w0, #0xffffffff            	// #-1
   13de8:	b	13d28 <hash_delete@@Base+0x430>
   13dec:	stp	x29, x30, [sp, #-64]!
   13df0:	mov	x29, sp
   13df4:	stp	x19, x20, [sp, #16]
   13df8:	mov	x20, x2
   13dfc:	stp	x21, x22, [sp, #32]
   13e00:	mov	x22, x3
   13e04:	mov	x21, x4
   13e08:	stp	x23, x24, [sp, #48]
   13e0c:	mov	x24, x0
   13e10:	mov	x23, x1
   13e14:	mov	x0, #0x40                  	// #64
   13e18:	bl	aab0 <malloc@plt>
   13e1c:	mov	x19, x0
   13e20:	cbz	x0, 13e54 <hash_delete@@Base+0x55c>
   13e24:	mov	x0, #0xb                   	// #11
   13e28:	stp	x24, x23, [x19]
   13e2c:	mov	x1, #0x8                   	// #8
   13e30:	stp	x22, x21, [x19, #16]
   13e34:	str	x20, [x19, #32]
   13e38:	str	x0, [x19, #48]
   13e3c:	bl	ace0 <calloc@plt>
   13e40:	str	x0, [x19, #40]
   13e44:	cbnz	x0, 13e6c <hash_delete@@Base+0x574>
   13e48:	mov	x0, x19
   13e4c:	mov	x19, #0x0                   	// #0
   13e50:	bl	b050 <free@plt>
   13e54:	mov	x0, x19
   13e58:	ldp	x19, x20, [sp, #16]
   13e5c:	ldp	x21, x22, [sp, #32]
   13e60:	ldp	x23, x24, [sp, #48]
   13e64:	ldp	x29, x30, [sp], #64
   13e68:	ret
   13e6c:	str	xzr, [x19, #56]
   13e70:	b	13e54 <hash_delete@@Base+0x55c>
   13e74:	ldr	x3, [x0, #24]
   13e78:	cbz	x3, 13e9c <hash_delete@@Base+0x5a4>
   13e7c:	ldr	x4, [x3, #16]
   13e80:	str	x4, [x1]
   13e84:	ldr	x1, [x3, #24]
   13e88:	str	x1, [x2]
   13e8c:	ldr	x1, [x3]
   13e90:	str	x1, [x0, #24]
   13e94:	mov	w0, #0x1                   	// #1
   13e98:	ret
   13e9c:	ldp	x3, x5, [x0, #40]
   13ea0:	cmp	x5, x3
   13ea4:	b.ls	13ee8 <hash_delete@@Base+0x5f0>  // b.plast
   13ea8:	ldr	x4, [x0, #8]
   13eac:	ldr	x6, [x4, #40]
   13eb0:	sub	x6, x6, #0x8
   13eb4:	add	x3, x3, #0x1
   13eb8:	ldr	x4, [x6, x3, lsl #3]
   13ebc:	cbz	x4, 13ee0 <hash_delete@@Base+0x5e8>
   13ec0:	ldr	x5, [x4, #16]
   13ec4:	str	x5, [x1]
   13ec8:	ldr	x1, [x4, #24]
   13ecc:	str	x1, [x2]
   13ed0:	ldr	x1, [x4]
   13ed4:	str	x1, [x0, #24]
   13ed8:	str	x3, [x0, #40]
   13edc:	b	13e94 <hash_delete@@Base+0x59c>
   13ee0:	cmp	x5, x3
   13ee4:	b.ne	13eb4 <hash_delete@@Base+0x5bc>  // b.any
   13ee8:	str	x5, [x0, #40]
   13eec:	mov	w0, #0x0                   	// #0
   13ef0:	b	13e98 <hash_delete@@Base+0x5a0>

0000000000013ef4 <hash_pjw@@Base>:
   13ef4:	mov	x2, #0x0                   	// #0
   13ef8:	ldrb	w3, [x0]
   13efc:	cbnz	w3, 13f0c <hash_pjw@@Base+0x18>
   13f00:	udiv	x0, x2, x1
   13f04:	msub	x0, x0, x1, x2
   13f08:	ret
   13f0c:	add	x0, x0, #0x1
   13f10:	ror	x2, x2, #55
   13f14:	add	x2, x2, w3, uxtb
   13f18:	b	13ef8 <hash_pjw@@Base+0x4>

0000000000013f1c <hash_pjw_bare@@Base>:
   13f1c:	mov	x4, x0
   13f20:	mov	w3, #0x0                   	// #0
   13f24:	mov	x0, #0x0                   	// #0
   13f28:	mov	w5, w3
   13f2c:	cmp	x1, w3, uxtw
   13f30:	b.hi	13f38 <hash_pjw_bare@@Base+0x1c>  // b.pmore
   13f34:	ret
   13f38:	add	w3, w3, #0x1
   13f3c:	ror	x2, x0, #55
   13f40:	ldrb	w0, [x4, x5]
   13f44:	add	x0, x0, x2
   13f48:	b	13f28 <hash_pjw_bare@@Base+0xc>
   13f4c:	ldr	x0, [x0, #48]
   13f50:	ret
   13f54:	stp	x29, x30, [sp, #-48]!
   13f58:	mov	x29, sp
   13f5c:	stp	x19, x20, [sp, #16]
   13f60:	mov	x20, x1
   13f64:	ldr	x1, [x0, #24]
   13f68:	stp	x21, x22, [sp, #32]
   13f6c:	mov	x21, x0
   13f70:	cbz	x1, 13fa4 <hash_pjw_bare@@Base+0x88>
   13f74:	mov	x0, x20
   13f78:	blr	x1
   13f7c:	mov	x19, x0
   13f80:	ldr	x1, [x21, #40]
   13f84:	ldr	x22, [x21, #8]
   13f88:	udiv	x0, x19, x1
   13f8c:	msub	x0, x0, x1, x19
   13f90:	ldr	x1, [x21, #32]
   13f94:	ldr	x21, [x1, x0, lsl #3]
   13f98:	cbnz	x21, 13fac <hash_pjw_bare@@Base+0x90>
   13f9c:	mov	w0, #0x0                   	// #0
   13fa0:	b	13fd8 <hash_pjw_bare@@Base+0xbc>
   13fa4:	mov	x19, x20
   13fa8:	b	13f80 <hash_pjw_bare@@Base+0x64>
   13fac:	ldr	x0, [x21, #8]
   13fb0:	cmp	x0, x19
   13fb4:	b.eq	13fc0 <hash_pjw_bare@@Base+0xa4>  // b.none
   13fb8:	ldr	x21, [x21]
   13fbc:	b	13f98 <hash_pjw_bare@@Base+0x7c>
   13fc0:	ldr	x1, [x21, #16]
   13fc4:	cbz	x22, 13fe8 <hash_pjw_bare@@Base+0xcc>
   13fc8:	mov	x0, x20
   13fcc:	blr	x22
   13fd0:	and	w0, w0, #0xff
   13fd4:	cbz	w0, 13fb8 <hash_pjw_bare@@Base+0x9c>
   13fd8:	ldp	x19, x20, [sp, #16]
   13fdc:	ldp	x21, x22, [sp, #32]
   13fe0:	ldp	x29, x30, [sp], #48
   13fe4:	ret
   13fe8:	cmp	x20, x1
   13fec:	cset	w0, eq  // eq = none
   13ff0:	b	13fd4 <hash_pjw_bare@@Base+0xb8>
   13ff4:	ldr	x2, [x0]
   13ff8:	stp	x2, x0, [x8]
   13ffc:	ldr	x1, [x0, #40]
   14000:	str	xzr, [x8, #24]
   14004:	stp	xzr, x1, [x8, #40]
   14008:	ret
   1400c:	ret
   14010:	stp	x29, x30, [sp, #-64]!
   14014:	mov	x29, sp
   14018:	stp	x19, x20, [sp, #16]
   1401c:	mov	x19, x0
   14020:	ldr	x0, [x0, #48]
   14024:	stp	x21, x22, [sp, #32]
   14028:	stp	x23, x24, [sp, #48]
   1402c:	cbnz	x0, 14050 <hash_pjw_bare@@Base+0x134>
   14030:	ldr	x0, [x19, #32]
   14034:	bl	b050 <free@plt>
   14038:	mov	x0, x19
   1403c:	ldp	x19, x20, [sp, #16]
   14040:	ldp	x21, x22, [sp, #32]
   14044:	ldp	x23, x24, [sp, #48]
   14048:	ldp	x29, x30, [sp], #64
   1404c:	b	b050 <free@plt>
   14050:	ldp	x23, x21, [x19, #32]
   14054:	ldr	x22, [x19, #16]
   14058:	cbz	x21, 14030 <hash_pjw_bare@@Base+0x114>
   1405c:	sub	x21, x21, #0x1
   14060:	ldr	x20, [x23, x21, lsl #3]
   14064:	cbz	x20, 14058 <hash_pjw_bare@@Base+0x13c>
   14068:	ldr	x24, [x20]
   1406c:	cbz	x22, 14078 <hash_pjw_bare@@Base+0x15c>
   14070:	ldr	x0, [x20, #16]
   14074:	blr	x22
   14078:	mov	x0, x20
   1407c:	mov	x20, x24
   14080:	bl	b050 <free@plt>
   14084:	b	14064 <hash_pjw_bare@@Base+0x148>
   14088:	stp	x29, x30, [sp, #-80]!
   1408c:	mov	x29, sp
   14090:	stp	x23, x24, [sp, #48]
   14094:	mov	x24, x1
   14098:	ldr	x1, [x0, #24]
   1409c:	stp	x19, x20, [sp, #16]
   140a0:	mov	x19, x0
   140a4:	stp	x21, x22, [sp, #32]
   140a8:	str	x25, [sp, #64]
   140ac:	cbz	x1, 140e4 <hash_pjw_bare@@Base+0x1c8>
   140b0:	mov	x0, x24
   140b4:	blr	x1
   140b8:	mov	x23, x0
   140bc:	ldr	x0, [x19, #40]
   140c0:	ldr	x25, [x19, #8]
   140c4:	udiv	x20, x23, x0
   140c8:	msub	x20, x20, x0, x23
   140cc:	ldr	x0, [x19, #32]
   140d0:	add	x20, x0, x20, lsl #3
   140d4:	ldr	x22, [x20]
   140d8:	cbnz	x22, 140ec <hash_pjw_bare@@Base+0x1d0>
   140dc:	mov	w21, #0x0                   	// #0
   140e0:	b	1413c <hash_pjw_bare@@Base+0x220>
   140e4:	mov	x23, x24
   140e8:	b	140bc <hash_pjw_bare@@Base+0x1a0>
   140ec:	ldr	x0, [x22, #8]
   140f0:	cmp	x0, x23
   140f4:	b.ne	14164 <hash_pjw_bare@@Base+0x248>  // b.any
   140f8:	ldr	x1, [x22, #16]
   140fc:	cbz	x25, 14158 <hash_pjw_bare@@Base+0x23c>
   14100:	mov	x0, x24
   14104:	blr	x25
   14108:	and	w21, w0, #0xff
   1410c:	cbz	w21, 14164 <hash_pjw_bare@@Base+0x248>
   14110:	ldr	x0, [x22]
   14114:	ldr	x1, [x19, #16]
   14118:	str	x0, [x20]
   1411c:	ldr	x0, [x19, #48]
   14120:	sub	x0, x0, #0x1
   14124:	str	x0, [x19, #48]
   14128:	cbz	x1, 14134 <hash_pjw_bare@@Base+0x218>
   1412c:	ldr	x0, [x22, #16]
   14130:	blr	x1
   14134:	mov	x0, x22
   14138:	bl	b050 <free@plt>
   1413c:	mov	w0, w21
   14140:	ldp	x19, x20, [sp, #16]
   14144:	ldp	x21, x22, [sp, #32]
   14148:	ldp	x23, x24, [sp, #48]
   1414c:	ldr	x25, [sp, #64]
   14150:	ldp	x29, x30, [sp], #80
   14154:	ret
   14158:	cmp	x24, x1
   1415c:	cset	w21, eq  // eq = none
   14160:	b	1410c <hash_pjw_bare@@Base+0x1f0>
   14164:	ldr	x20, [x20]
   14168:	b	140d4 <hash_pjw_bare@@Base+0x1b8>
   1416c:	stp	x29, x30, [sp, #-64]!
   14170:	mov	x29, sp
   14174:	stp	x21, x22, [sp, #32]
   14178:	mov	x22, x1
   1417c:	ldr	x1, [x0, #24]
   14180:	stp	x19, x20, [sp, #16]
   14184:	mov	x19, x0
   14188:	stp	x23, x24, [sp, #48]
   1418c:	cbz	x1, 14214 <hash_pjw_bare@@Base+0x2f8>
   14190:	mov	x0, x22
   14194:	blr	x1
   14198:	mov	x21, x0
   1419c:	ldr	x0, [x19, #40]
   141a0:	ldr	x24, [x19, #8]
   141a4:	udiv	x20, x21, x0
   141a8:	msub	x20, x20, x0, x21
   141ac:	ldr	x0, [x19, #32]
   141b0:	lsl	x20, x20, #3
   141b4:	ldr	x23, [x0, x20]
   141b8:	cbnz	x23, 1421c <hash_pjw_bare@@Base+0x300>
   141bc:	mov	x0, #0x18                  	// #24
   141c0:	bl	aab0 <malloc@plt>
   141c4:	cbz	x0, 142ec <hash_pjw_bare@@Base+0x3d0>
   141c8:	stp	x21, x22, [x0, #8]
   141cc:	ldp	x22, x21, [x19, #32]
   141d0:	ldr	x1, [x22, x20]
   141d4:	str	x1, [x0]
   141d8:	str	x0, [x22, x20]
   141dc:	ldr	x0, [x19, #48]
   141e0:	add	x0, x0, #0x1
   141e4:	str	x0, [x19, #48]
   141e8:	lsr	x1, x0, #1
   141ec:	adds	x0, x0, x1
   141f0:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
   141f4:	cmp	x21, x0
   141f8:	b.cc	1425c <hash_pjw_bare@@Base+0x340>  // b.lo, b.ul, b.last
   141fc:	mov	w0, #0x1                   	// #1
   14200:	ldp	x19, x20, [sp, #16]
   14204:	ldp	x21, x22, [sp, #32]
   14208:	ldp	x23, x24, [sp, #48]
   1420c:	ldp	x29, x30, [sp], #64
   14210:	ret
   14214:	mov	x21, x22
   14218:	b	1419c <hash_pjw_bare@@Base+0x280>
   1421c:	ldr	x0, [x23, #8]
   14220:	cmp	x0, x21
   14224:	b.eq	14230 <hash_pjw_bare@@Base+0x314>  // b.none
   14228:	ldr	x23, [x23]
   1422c:	b	141b8 <hash_pjw_bare@@Base+0x29c>
   14230:	ldr	x1, [x23, #16]
   14234:	cbz	x24, 14250 <hash_pjw_bare@@Base+0x334>
   14238:	mov	x0, x22
   1423c:	blr	x24
   14240:	and	w0, w0, #0xff
   14244:	cbz	w0, 14228 <hash_pjw_bare@@Base+0x30c>
   14248:	mov	w0, #0x0                   	// #0
   1424c:	b	14200 <hash_pjw_bare@@Base+0x2e4>
   14250:	cmp	x22, x1
   14254:	cset	w0, eq  // eq = none
   14258:	b	14244 <hash_pjw_bare@@Base+0x328>
   1425c:	adrp	x2, 27000 <vasnprintf@@Base+0x1170>
   14260:	add	x2, x2, #0xf10
   14264:	mov	x1, #0x0                   	// #0
   14268:	ldr	x20, [x2, x1, lsl #3]
   1426c:	cmp	x0, x20
   14270:	b.ls	14284 <hash_pjw_bare@@Base+0x368>  // b.plast
   14274:	add	x1, x1, #0x1
   14278:	cmp	x1, #0xe8
   1427c:	b.ne	14268 <hash_pjw_bare@@Base+0x34c>  // b.any
   14280:	b	141fc <hash_pjw_bare@@Base+0x2e0>
   14284:	cmp	x21, x20
   14288:	b.cs	141fc <hash_pjw_bare@@Base+0x2e0>  // b.hs, b.nlast
   1428c:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   14290:	cmp	x20, x0
   14294:	b.hi	141fc <hash_pjw_bare@@Base+0x2e0>  // b.pmore
   14298:	mov	x0, x20
   1429c:	mov	x1, #0x8                   	// #8
   142a0:	bl	ace0 <calloc@plt>
   142a4:	cbz	x0, 141fc <hash_pjw_bare@@Base+0x2e0>
   142a8:	cbnz	x21, 142bc <hash_pjw_bare@@Base+0x3a0>
   142ac:	stp	x0, x20, [x19, #32]
   142b0:	mov	x0, x22
   142b4:	bl	b050 <free@plt>
   142b8:	b	141fc <hash_pjw_bare@@Base+0x2e0>
   142bc:	sub	x21, x21, #0x1
   142c0:	ldr	x1, [x22, x21, lsl #3]
   142c4:	cbz	x1, 142a8 <hash_pjw_bare@@Base+0x38c>
   142c8:	ldp	x4, x3, [x1]
   142cc:	udiv	x2, x3, x20
   142d0:	msub	x2, x2, x20, x3
   142d4:	lsl	x2, x2, #3
   142d8:	ldr	x3, [x0, x2]
   142dc:	str	x3, [x1]
   142e0:	str	x1, [x0, x2]
   142e4:	mov	x1, x4
   142e8:	b	142c4 <hash_pjw_bare@@Base+0x3a8>
   142ec:	mov	w0, #0xffffffff            	// #-1
   142f0:	b	14200 <hash_pjw_bare@@Base+0x2e4>
   142f4:	stp	x29, x30, [sp, #-64]!
   142f8:	mov	x29, sp
   142fc:	stp	x19, x20, [sp, #16]
   14300:	mov	x20, x2
   14304:	stp	x21, x22, [sp, #32]
   14308:	mov	x22, x1
   1430c:	mov	x21, x3
   14310:	str	x23, [sp, #48]
   14314:	mov	x23, x0
   14318:	mov	x0, #0x38                  	// #56
   1431c:	bl	aab0 <malloc@plt>
   14320:	mov	x19, x0
   14324:	cbz	x0, 14354 <hash_pjw_bare@@Base+0x438>
   14328:	mov	x0, #0xb                   	// #11
   1432c:	stp	x23, x22, [x19]
   14330:	mov	x1, #0x8                   	// #8
   14334:	stp	x21, x20, [x19, #16]
   14338:	str	x0, [x19, #40]
   1433c:	bl	ace0 <calloc@plt>
   14340:	str	x0, [x19, #32]
   14344:	cbnz	x0, 1436c <hash_pjw_bare@@Base+0x450>
   14348:	mov	x0, x19
   1434c:	mov	x19, #0x0                   	// #0
   14350:	bl	b050 <free@plt>
   14354:	mov	x0, x19
   14358:	ldp	x19, x20, [sp, #16]
   1435c:	ldp	x21, x22, [sp, #32]
   14360:	ldr	x23, [sp, #48]
   14364:	ldp	x29, x30, [sp], #64
   14368:	ret
   1436c:	str	xzr, [x19, #48]
   14370:	b	14354 <hash_pjw_bare@@Base+0x438>
   14374:	ldr	x2, [x0, #24]
   14378:	cbz	x2, 14394 <hash_pjw_bare@@Base+0x478>
   1437c:	ldr	x3, [x2, #16]
   14380:	str	x3, [x1]
   14384:	ldr	x1, [x2]
   14388:	str	x1, [x0, #24]
   1438c:	mov	w0, #0x1                   	// #1
   14390:	ret
   14394:	ldp	x2, x3, [x0, #40]
   14398:	cmp	x3, x2
   1439c:	b.ls	143d8 <hash_pjw_bare@@Base+0x4bc>  // b.plast
   143a0:	ldr	x4, [x0, #8]
   143a4:	ldr	x4, [x4, #32]
   143a8:	sub	x4, x4, #0x8
   143ac:	add	x2, x2, #0x1
   143b0:	ldr	x5, [x4, x2, lsl #3]
   143b4:	cbz	x5, 143d0 <hash_pjw_bare@@Base+0x4b4>
   143b8:	ldr	x3, [x5, #16]
   143bc:	str	x3, [x1]
   143c0:	ldr	x1, [x5]
   143c4:	str	x1, [x0, #24]
   143c8:	str	x2, [x0, #40]
   143cc:	b	1438c <hash_pjw_bare@@Base+0x470>
   143d0:	cmp	x3, x2
   143d4:	b.ne	143ac <hash_pjw_bare@@Base+0x490>  // b.any
   143d8:	str	x3, [x0, #40]
   143dc:	mov	w0, #0x0                   	// #0
   143e0:	b	14390 <hash_pjw_bare@@Base+0x474>

00000000000143e4 <triple_hash@@Base>:
   143e4:	stp	x29, x30, [sp, #-32]!
   143e8:	mov	x29, sp
   143ec:	stp	x19, x20, [sp, #16]
   143f0:	mov	x20, x0
   143f4:	mov	x19, x1
   143f8:	ldr	x0, [x0]
   143fc:	bl	b270 <hash_pjw@plt>
   14400:	ldr	x1, [x20, #8]
   14404:	eor	x0, x0, x1
   14408:	udiv	x1, x0, x19
   1440c:	msub	x0, x1, x19, x0
   14410:	ldp	x19, x20, [sp, #16]
   14414:	ldp	x29, x30, [sp], #32
   14418:	ret

000000000001441c <triple_hash_no_name@@Base>:
   1441c:	ldr	x0, [x0, #8]
   14420:	udiv	x2, x0, x1
   14424:	msub	x0, x2, x1, x0
   14428:	ret

000000000001442c <triple_compare@@Base>:
   1442c:	ldr	x3, [x0, #8]
   14430:	ldr	x2, [x1, #8]
   14434:	cmp	x3, x2
   14438:	b.ne	14470 <triple_compare@@Base+0x44>  // b.any
   1443c:	ldr	x3, [x0, #16]
   14440:	ldr	x2, [x1, #16]
   14444:	cmp	x3, x2
   14448:	b.ne	14470 <triple_compare@@Base+0x44>  // b.any
   1444c:	stp	x29, x30, [sp, #-16]!
   14450:	mov	x29, sp
   14454:	ldr	x1, [x1]
   14458:	ldr	x0, [x0]
   1445c:	bl	ac90 <same_name@plt>
   14460:	and	w0, w0, #0xff
   14464:	and	w0, w0, #0x1
   14468:	ldp	x29, x30, [sp], #16
   1446c:	ret
   14470:	mov	w0, #0x0                   	// #0
   14474:	and	w0, w0, #0x1
   14478:	ret

000000000001447c <triple_compare_ino_str@@Base>:
   1447c:	ldr	x3, [x0, #8]
   14480:	ldr	x2, [x1, #8]
   14484:	cmp	x3, x2
   14488:	b.ne	144c0 <triple_compare_ino_str@@Base+0x44>  // b.any
   1448c:	ldr	x3, [x0, #16]
   14490:	ldr	x2, [x1, #16]
   14494:	cmp	x3, x2
   14498:	b.ne	144c0 <triple_compare_ino_str@@Base+0x44>  // b.any
   1449c:	stp	x29, x30, [sp, #-16]!
   144a0:	mov	x29, sp
   144a4:	ldr	x0, [x0]
   144a8:	ldr	x1, [x1]
   144ac:	bl	afa0 <strcmp@plt>
   144b0:	cmp	w0, #0x0
   144b4:	cset	w0, eq  // eq = none
   144b8:	ldp	x29, x30, [sp], #16
   144bc:	ret
   144c0:	mov	w0, #0x0                   	// #0
   144c4:	ret

00000000000144c8 <triple_free@@Base>:
   144c8:	stp	x29, x30, [sp, #-32]!
   144cc:	mov	x29, sp
   144d0:	str	x19, [sp, #16]
   144d4:	mov	x19, x0
   144d8:	ldr	x0, [x0]
   144dc:	bl	b050 <free@plt>
   144e0:	mov	x0, x19
   144e4:	ldr	x19, [sp, #16]
   144e8:	ldp	x29, x30, [sp], #32
   144ec:	b	b050 <free@plt>

00000000000144f0 <idpriv_drop@@Base>:
   144f0:	stp	x29, x30, [sp, #-64]!
   144f4:	mov	x29, sp
   144f8:	stp	x19, x20, [sp, #16]
   144fc:	bl	a910 <getuid@plt>
   14500:	mov	w19, w0
   14504:	bl	b090 <getgid@plt>
   14508:	mov	w20, w0
   1450c:	mov	w2, w0
   14510:	mov	w1, w0
   14514:	bl	b560 <setresgid@plt>
   14518:	tbz	w0, #31, 1452c <idpriv_drop@@Base+0x3c>
   1451c:	mov	w0, #0xffffffff            	// #-1
   14520:	ldp	x19, x20, [sp, #16]
   14524:	ldp	x29, x30, [sp], #64
   14528:	ret
   1452c:	mov	w2, w19
   14530:	mov	w1, w19
   14534:	mov	w0, w19
   14538:	bl	b350 <setresuid@plt>
   1453c:	tbnz	w0, #31, 1451c <idpriv_drop@@Base+0x2c>
   14540:	add	x2, sp, #0x30
   14544:	add	x1, sp, #0x2c
   14548:	add	x0, sp, #0x28
   1454c:	bl	a880 <getresuid@plt>
   14550:	tbz	w0, #31, 14558 <idpriv_drop@@Base+0x68>
   14554:	bl	aeb0 <abort@plt>
   14558:	ldr	w0, [sp, #40]
   1455c:	cmp	w19, w0
   14560:	b.ne	14554 <idpriv_drop@@Base+0x64>  // b.any
   14564:	ldr	w0, [sp, #44]
   14568:	cmp	w19, w0
   1456c:	b.ne	14554 <idpriv_drop@@Base+0x64>  // b.any
   14570:	ldr	w0, [sp, #48]
   14574:	cmp	w19, w0
   14578:	b.ne	14554 <idpriv_drop@@Base+0x64>  // b.any
   1457c:	add	x2, sp, #0x3c
   14580:	add	x1, sp, #0x38
   14584:	add	x0, sp, #0x34
   14588:	bl	b2e0 <getresgid@plt>
   1458c:	tbnz	w0, #31, 14554 <idpriv_drop@@Base+0x64>
   14590:	ldr	w0, [sp, #52]
   14594:	cmp	w20, w0
   14598:	b.ne	14554 <idpriv_drop@@Base+0x64>  // b.any
   1459c:	ldr	w0, [sp, #56]
   145a0:	cmp	w20, w0
   145a4:	b.ne	14554 <idpriv_drop@@Base+0x64>  // b.any
   145a8:	ldr	w0, [sp, #60]
   145ac:	cmp	w20, w0
   145b0:	b.ne	14554 <idpriv_drop@@Base+0x64>  // b.any
   145b4:	mov	w0, #0x0                   	// #0
   145b8:	b	14520 <idpriv_drop@@Base+0x30>

00000000000145bc <idpriv_temp_drop@@Base>:
   145bc:	stp	x29, x30, [sp, #-80]!
   145c0:	mov	x29, sp
   145c4:	stp	x19, x20, [sp, #16]
   145c8:	adrp	x19, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
   145cc:	stp	x21, x22, [sp, #32]
   145d0:	bl	a910 <getuid@plt>
   145d4:	mov	w21, w0
   145d8:	bl	b090 <getgid@plt>
   145dc:	mov	w20, w0
   145e0:	ldr	w0, [x19, #836]
   145e4:	cmn	w0, #0x1
   145e8:	b.ne	145f4 <idpriv_temp_drop@@Base+0x38>  // b.any
   145ec:	bl	a850 <geteuid@plt>
   145f0:	str	w0, [x19, #836]
   145f4:	add	x22, x19, #0x344
   145f8:	ldr	w0, [x22, #4]
   145fc:	cmn	w0, #0x1
   14600:	b.ne	1460c <idpriv_temp_drop@@Base+0x50>  // b.any
   14604:	bl	a810 <getegid@plt>
   14608:	str	w0, [x22, #4]
   1460c:	add	x0, x19, #0x344
   14610:	mov	w1, w20
   14614:	ldr	w22, [x0, #4]
   14618:	mov	w0, #0xffffffff            	// #-1
   1461c:	mov	w2, w22
   14620:	bl	b560 <setresgid@plt>
   14624:	tbz	w0, #31, 1463c <idpriv_temp_drop@@Base+0x80>
   14628:	mov	w0, #0xffffffff            	// #-1
   1462c:	ldp	x19, x20, [sp, #16]
   14630:	ldp	x21, x22, [sp, #32]
   14634:	ldp	x29, x30, [sp], #80
   14638:	ret
   1463c:	ldr	w19, [x19, #836]
   14640:	mov	w1, w21
   14644:	mov	w0, #0xffffffff            	// #-1
   14648:	mov	w2, w19
   1464c:	bl	b350 <setresuid@plt>
   14650:	tbnz	w0, #31, 14628 <idpriv_temp_drop@@Base+0x6c>
   14654:	add	x2, sp, #0x40
   14658:	add	x1, sp, #0x3c
   1465c:	add	x0, sp, #0x38
   14660:	bl	a880 <getresuid@plt>
   14664:	tbz	w0, #31, 1466c <idpriv_temp_drop@@Base+0xb0>
   14668:	bl	aeb0 <abort@plt>
   1466c:	ldr	w0, [sp, #56]
   14670:	cmp	w21, w0
   14674:	b.ne	14668 <idpriv_temp_drop@@Base+0xac>  // b.any
   14678:	ldr	w0, [sp, #60]
   1467c:	cmp	w21, w0
   14680:	b.ne	14668 <idpriv_temp_drop@@Base+0xac>  // b.any
   14684:	ldr	w0, [sp, #64]
   14688:	cmp	w19, w0
   1468c:	b.ne	14668 <idpriv_temp_drop@@Base+0xac>  // b.any
   14690:	add	x2, sp, #0x4c
   14694:	add	x1, sp, #0x48
   14698:	add	x0, sp, #0x44
   1469c:	bl	b2e0 <getresgid@plt>
   146a0:	tbnz	w0, #31, 14668 <idpriv_temp_drop@@Base+0xac>
   146a4:	ldr	w0, [sp, #68]
   146a8:	cmp	w20, w0
   146ac:	b.ne	14668 <idpriv_temp_drop@@Base+0xac>  // b.any
   146b0:	ldr	w0, [sp, #72]
   146b4:	cmp	w20, w0
   146b8:	b.ne	14668 <idpriv_temp_drop@@Base+0xac>  // b.any
   146bc:	ldr	w0, [sp, #76]
   146c0:	cmp	w22, w0
   146c4:	b.ne	14668 <idpriv_temp_drop@@Base+0xac>  // b.any
   146c8:	mov	w0, #0x0                   	// #0
   146cc:	b	1462c <idpriv_temp_drop@@Base+0x70>

00000000000146d0 <idpriv_temp_restore@@Base>:
   146d0:	stp	x29, x30, [sp, #-80]!
   146d4:	mov	x29, sp
   146d8:	stp	x19, x20, [sp, #16]
   146dc:	stp	x21, x22, [sp, #32]
   146e0:	bl	a910 <getuid@plt>
   146e4:	mov	w22, w0
   146e8:	bl	b090 <getgid@plt>
   146ec:	mov	w21, w0
   146f0:	adrp	x0, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
   146f4:	ldr	w20, [x0, #836]
   146f8:	cmn	w20, #0x1
   146fc:	b.ne	14704 <idpriv_temp_restore@@Base+0x34>  // b.any
   14700:	bl	aeb0 <abort@plt>
   14704:	add	x1, x0, #0x344
   14708:	ldr	w19, [x1, #4]
   1470c:	cmn	w19, #0x1
   14710:	b.eq	14700 <idpriv_temp_restore@@Base+0x30>  // b.none
   14714:	mov	w2, #0xffffffff            	// #-1
   14718:	mov	w1, w20
   1471c:	mov	w0, w2
   14720:	bl	b350 <setresuid@plt>
   14724:	tbz	w0, #31, 1473c <idpriv_temp_restore@@Base+0x6c>
   14728:	mov	w0, #0xffffffff            	// #-1
   1472c:	ldp	x19, x20, [sp, #16]
   14730:	ldp	x21, x22, [sp, #32]
   14734:	ldp	x29, x30, [sp], #80
   14738:	ret
   1473c:	mov	w2, #0xffffffff            	// #-1
   14740:	mov	w1, w19
   14744:	mov	w0, w2
   14748:	bl	b560 <setresgid@plt>
   1474c:	tbnz	w0, #31, 14728 <idpriv_temp_restore@@Base+0x58>
   14750:	add	x2, sp, #0x40
   14754:	add	x1, sp, #0x3c
   14758:	add	x0, sp, #0x38
   1475c:	bl	a880 <getresuid@plt>
   14760:	tbnz	w0, #31, 14700 <idpriv_temp_restore@@Base+0x30>
   14764:	ldr	w0, [sp, #56]
   14768:	cmp	w22, w0
   1476c:	b.ne	14700 <idpriv_temp_restore@@Base+0x30>  // b.any
   14770:	ldr	w0, [sp, #60]
   14774:	cmp	w20, w0
   14778:	b.ne	14700 <idpriv_temp_restore@@Base+0x30>  // b.any
   1477c:	ldr	w0, [sp, #64]
   14780:	cmp	w20, w0
   14784:	b.ne	14700 <idpriv_temp_restore@@Base+0x30>  // b.any
   14788:	add	x2, sp, #0x4c
   1478c:	add	x1, sp, #0x48
   14790:	add	x0, sp, #0x44
   14794:	bl	b2e0 <getresgid@plt>
   14798:	tbnz	w0, #31, 14700 <idpriv_temp_restore@@Base+0x30>
   1479c:	ldr	w0, [sp, #68]
   147a0:	cmp	w21, w0
   147a4:	b.ne	14700 <idpriv_temp_restore@@Base+0x30>  // b.any
   147a8:	ldr	w0, [sp, #72]
   147ac:	cmp	w19, w0
   147b0:	b.ne	14700 <idpriv_temp_restore@@Base+0x30>  // b.any
   147b4:	ldr	w0, [sp, #76]
   147b8:	cmp	w19, w0
   147bc:	b.ne	14700 <idpriv_temp_restore@@Base+0x30>  // b.any
   147c0:	mov	w0, #0x0                   	// #0
   147c4:	b	1472c <idpriv_temp_restore@@Base+0x5c>
   147c8:	ldr	x4, [x1, #8]
   147cc:	ldr	x3, [x0, #48]
   147d0:	ldr	x0, [x0, #40]
   147d4:	udiv	x2, x4, x3
   147d8:	msub	x2, x2, x3, x4
   147dc:	lsl	x2, x2, #3
   147e0:	ldr	x3, [x0, x2]
   147e4:	str	x3, [x1]
   147e8:	str	x1, [x0, x2]
   147ec:	ret
   147f0:	ldr	x0, [x0, #96]
   147f4:	ret
   147f8:	ldr	x0, [x1, #32]
   147fc:	ret
   14800:	ldr	x1, [x1, #16]
   14804:	add	x0, x0, #0x38
   14808:	cmp	x1, x0
   1480c:	csel	x0, x1, xzr, ne  // ne = any
   14810:	ret
   14814:	ldr	x1, [x1, #24]
   14818:	add	x0, x0, #0x38
   1481c:	cmp	x1, x0
   14820:	csel	x0, x1, xzr, ne  // ne = any
   14824:	ret
   14828:	ldr	x2, [x0]
   1482c:	stp	x2, x0, [x8]
   14830:	add	x0, x0, #0x38
   14834:	ldr	x1, [x0, #16]
   14838:	str	x1, [x8, #24]
   1483c:	str	x0, [x8, #32]
   14840:	ret
   14844:	ldp	x3, x4, [x0, #24]
   14848:	cmp	x3, x4
   1484c:	b.eq	14870 <idpriv_temp_restore@@Base+0x1a0>  // b.none
   14850:	ldr	x4, [x3, #32]
   14854:	str	x4, [x1]
   14858:	cbz	x2, 14860 <idpriv_temp_restore@@Base+0x190>
   1485c:	str	x3, [x2]
   14860:	ldr	x1, [x3, #16]
   14864:	str	x1, [x0, #24]
   14868:	mov	w0, #0x1                   	// #1
   1486c:	ret
   14870:	mov	w0, #0x0                   	// #0
   14874:	b	1486c <idpriv_temp_restore@@Base+0x19c>
   14878:	ret
   1487c:	stp	x29, x30, [sp, #-48]!
   14880:	mov	x29, sp
   14884:	stp	x19, x20, [sp, #16]
   14888:	add	x20, x0, #0x38
   1488c:	ldr	x19, [x0, #72]
   14890:	stp	x21, x22, [sp, #32]
   14894:	mov	x21, x1
   14898:	mov	x22, x2
   1489c:	cmp	x19, x20
   148a0:	b.eq	148b8 <idpriv_temp_restore@@Base+0x1e8>  // b.none
   148a4:	ldr	x0, [x19, #32]
   148a8:	mov	x1, x22
   148ac:	blr	x21
   148b0:	cmp	w0, #0x0
   148b4:	b.le	148d0 <idpriv_temp_restore@@Base+0x200>
   148b8:	mov	x19, #0x0                   	// #0
   148bc:	mov	x0, x19
   148c0:	ldp	x19, x20, [sp, #16]
   148c4:	ldp	x21, x22, [sp, #32]
   148c8:	ldp	x29, x30, [sp], #48
   148cc:	ret
   148d0:	b.eq	148bc <idpriv_temp_restore@@Base+0x1ec>  // b.none
   148d4:	ldr	x19, [x19, #16]
   148d8:	b	1489c <idpriv_temp_restore@@Base+0x1cc>
   148dc:	stp	x29, x30, [sp, #-64]!
   148e0:	mov	x29, sp
   148e4:	stp	x19, x20, [sp, #16]
   148e8:	add	x19, x0, #0x38
   148ec:	mov	x20, #0x0                   	// #0
   148f0:	stp	x21, x22, [sp, #32]
   148f4:	mov	x22, x1
   148f8:	ldr	x21, [x0, #72]
   148fc:	str	x23, [sp, #48]
   14900:	mov	x23, x2
   14904:	cmp	x21, x19
   14908:	b.eq	14920 <idpriv_temp_restore@@Base+0x250>  // b.none
   1490c:	ldr	x0, [x21, #32]
   14910:	mov	x1, x23
   14914:	blr	x22
   14918:	cmp	w0, #0x0
   1491c:	b.le	1493c <idpriv_temp_restore@@Base+0x26c>
   14920:	mov	x20, #0xffffffffffffffff    	// #-1
   14924:	mov	x0, x20
   14928:	ldp	x19, x20, [sp, #16]
   1492c:	ldp	x21, x22, [sp, #32]
   14930:	ldr	x23, [sp, #48]
   14934:	ldp	x29, x30, [sp], #64
   14938:	ret
   1493c:	b.eq	14924 <idpriv_temp_restore@@Base+0x254>  // b.none
   14940:	add	x20, x20, #0x1
   14944:	ldr	x21, [x21, #16]
   14948:	b	14904 <idpriv_temp_restore@@Base+0x234>
   1494c:	stp	x29, x30, [sp, #-64]!
   14950:	cmp	x2, x3
   14954:	mov	x29, sp
   14958:	stp	x19, x20, [sp, #16]
   1495c:	stp	x21, x22, [sp, #32]
   14960:	mov	x22, x1
   14964:	ldr	x1, [x0, #96]
   14968:	str	x23, [sp, #48]
   1496c:	b.hi	1497c <idpriv_temp_restore@@Base+0x2ac>  // b.pmore
   14970:	mov	x21, x3
   14974:	cmp	x1, x3
   14978:	b.cs	14980 <idpriv_temp_restore@@Base+0x2b0>  // b.hs, b.nlast
   1497c:	bl	aeb0 <abort@plt>
   14980:	cmp	x3, x2
   14984:	b.eq	149d0 <idpriv_temp_restore@@Base+0x300>  // b.none
   14988:	sub	x3, x1, #0x1
   1498c:	mov	x23, x4
   14990:	cmp	x2, x3, lsr #1
   14994:	b.hi	149f8 <idpriv_temp_restore@@Base+0x328>  // b.pmore
   14998:	ldr	x20, [x0, #72]
   1499c:	mov	x0, x2
   149a0:	cbnz	x0, 149ec <idpriv_temp_restore@@Base+0x31c>
   149a4:	mov	x19, x2
   149a8:	ldr	x0, [x20, #32]
   149ac:	mov	x1, x23
   149b0:	blr	x22
   149b4:	cmp	w0, #0x0
   149b8:	b.gt	149d0 <idpriv_temp_restore@@Base+0x300>
   149bc:	b.eq	149d4 <idpriv_temp_restore@@Base+0x304>  // b.none
   149c0:	add	x19, x19, #0x1
   149c4:	cmp	x21, x19
   149c8:	ldr	x20, [x20, #16]
   149cc:	b.ne	149a8 <idpriv_temp_restore@@Base+0x2d8>  // b.any
   149d0:	mov	x19, #0xffffffffffffffff    	// #-1
   149d4:	mov	x0, x19
   149d8:	ldp	x19, x20, [sp, #16]
   149dc:	ldp	x21, x22, [sp, #32]
   149e0:	ldr	x23, [sp, #48]
   149e4:	ldp	x29, x30, [sp], #64
   149e8:	ret
   149ec:	sub	x0, x0, #0x1
   149f0:	ldr	x20, [x20, #16]
   149f4:	b	149a0 <idpriv_temp_restore@@Base+0x2d0>
   149f8:	mvn	x3, x2
   149fc:	ldr	x20, [x0, #80]
   14a00:	add	x3, x3, x1
   14a04:	cbz	x3, 149a4 <idpriv_temp_restore@@Base+0x2d4>
   14a08:	sub	x3, x3, #0x1
   14a0c:	ldr	x20, [x20, #24]
   14a10:	b	14a04 <idpriv_temp_restore@@Base+0x334>
   14a14:	stp	x29, x30, [sp, #-48]!
   14a18:	cmp	x2, x3
   14a1c:	mov	x29, sp
   14a20:	stp	x19, x20, [sp, #16]
   14a24:	stp	x21, x22, [sp, #32]
   14a28:	mov	x21, x1
   14a2c:	ldr	x1, [x0, #96]
   14a30:	b.hi	14a3c <idpriv_temp_restore@@Base+0x36c>  // b.pmore
   14a34:	cmp	x1, x3
   14a38:	b.cs	14a40 <idpriv_temp_restore@@Base+0x370>  // b.hs, b.nlast
   14a3c:	bl	aeb0 <abort@plt>
   14a40:	subs	x20, x3, x2
   14a44:	b.eq	14a84 <idpriv_temp_restore@@Base+0x3b4>  // b.none
   14a48:	sub	x3, x1, #0x1
   14a4c:	mov	x22, x4
   14a50:	cmp	x2, x3, lsr #1
   14a54:	b.hi	14aa8 <idpriv_temp_restore@@Base+0x3d8>  // b.pmore
   14a58:	ldr	x19, [x0, #72]
   14a5c:	cbnz	x2, 14a9c <idpriv_temp_restore@@Base+0x3cc>
   14a60:	ldr	x0, [x19, #32]
   14a64:	mov	x1, x22
   14a68:	blr	x21
   14a6c:	cmp	w0, #0x0
   14a70:	b.gt	14a84 <idpriv_temp_restore@@Base+0x3b4>
   14a74:	b.eq	14a88 <idpriv_temp_restore@@Base+0x3b8>  // b.none
   14a78:	subs	x20, x20, #0x1
   14a7c:	ldr	x19, [x19, #16]
   14a80:	b.ne	14a60 <idpriv_temp_restore@@Base+0x390>  // b.any
   14a84:	mov	x19, #0x0                   	// #0
   14a88:	mov	x0, x19
   14a8c:	ldp	x19, x20, [sp, #16]
   14a90:	ldp	x21, x22, [sp, #32]
   14a94:	ldp	x29, x30, [sp], #48
   14a98:	ret
   14a9c:	sub	x2, x2, #0x1
   14aa0:	ldr	x19, [x19, #16]
   14aa4:	b	14a5c <idpriv_temp_restore@@Base+0x38c>
   14aa8:	mvn	x2, x2
   14aac:	ldr	x19, [x0, #80]
   14ab0:	add	x2, x2, x1
   14ab4:	cbz	x2, 14a60 <idpriv_temp_restore@@Base+0x390>
   14ab8:	sub	x2, x2, #0x1
   14abc:	ldr	x19, [x19, #24]
   14ac0:	b	14ab4 <idpriv_temp_restore@@Base+0x3e4>
   14ac4:	cmp	x1, x2
   14ac8:	b.hi	14ad8 <idpriv_temp_restore@@Base+0x408>  // b.pmore
   14acc:	ldr	x3, [x0, #96]
   14ad0:	cmp	x3, x2
   14ad4:	b.cs	14ae4 <idpriv_temp_restore@@Base+0x414>  // b.hs, b.nlast
   14ad8:	stp	x29, x30, [sp, #-16]!
   14adc:	mov	x29, sp
   14ae0:	bl	aeb0 <abort@plt>
   14ae4:	sub	x4, x2, x1
   14ae8:	sub	x2, x3, x2
   14aec:	cmp	x4, x2
   14af0:	csel	x3, x4, x2, cs  // cs = hs, nlast
   14af4:	cmp	x1, x3
   14af8:	ldr	x5, [x0]
   14afc:	b.ls	14b34 <idpriv_temp_restore@@Base+0x464>  // b.plast
   14b00:	add	x1, x0, #0x38
   14b04:	cbnz	x2, 14b1c <idpriv_temp_restore@@Base+0x44c>
   14b08:	mov	x3, x1
   14b0c:	cbnz	x4, 14b28 <idpriv_temp_restore@@Base+0x458>
   14b10:	stp	x5, x0, [x8]
   14b14:	stp	x3, x1, [x8, #24]
   14b18:	ret
   14b1c:	sub	x2, x2, #0x1
   14b20:	ldr	x1, [x1, #24]
   14b24:	b	14b04 <idpriv_temp_restore@@Base+0x434>
   14b28:	sub	x4, x4, #0x1
   14b2c:	ldr	x3, [x3, #24]
   14b30:	b	14b0c <idpriv_temp_restore@@Base+0x43c>
   14b34:	cmp	x4, x2
   14b38:	ldr	x3, [x0, #72]
   14b3c:	b.hi	14b60 <idpriv_temp_restore@@Base+0x490>  // b.pmore
   14b40:	cbnz	x1, 14b78 <idpriv_temp_restore@@Base+0x4a8>
   14b44:	mov	x1, x3
   14b48:	cbz	x4, 14b10 <idpriv_temp_restore@@Base+0x440>
   14b4c:	sub	x4, x4, #0x1
   14b50:	ldr	x1, [x1, #16]
   14b54:	b	14b48 <idpriv_temp_restore@@Base+0x478>
   14b58:	ldr	x3, [x3, #16]
   14b5c:	sub	x1, x1, #0x1
   14b60:	cbnz	x1, 14b58 <idpriv_temp_restore@@Base+0x488>
   14b64:	add	x1, x0, #0x38
   14b68:	cbz	x2, 14b10 <idpriv_temp_restore@@Base+0x440>
   14b6c:	sub	x2, x2, #0x1
   14b70:	ldr	x1, [x1, #24]
   14b74:	b	14b68 <idpriv_temp_restore@@Base+0x498>
   14b78:	sub	x1, x1, #0x1
   14b7c:	ldr	x3, [x3, #16]
   14b80:	b	14b40 <idpriv_temp_restore@@Base+0x470>
   14b84:	ldr	x4, [x1, #8]
   14b88:	ldr	x3, [x0, #48]
   14b8c:	ldr	x0, [x0, #40]
   14b90:	udiv	x2, x4, x3
   14b94:	msub	x2, x2, x3, x4
   14b98:	add	x0, x0, x2, lsl #3
   14b9c:	ldr	x2, [x0]
   14ba0:	cmp	x2, x1
   14ba4:	b.ne	14bb4 <idpriv_temp_restore@@Base+0x4e4>  // b.any
   14ba8:	ldr	x1, [x1]
   14bac:	str	x1, [x0]
   14bb0:	ret
   14bb4:	cbnz	x2, 14bc4 <idpriv_temp_restore@@Base+0x4f4>
   14bb8:	stp	x29, x30, [sp, #-16]!
   14bbc:	mov	x29, sp
   14bc0:	bl	aeb0 <abort@plt>
   14bc4:	mov	x0, x2
   14bc8:	b	14b9c <idpriv_temp_restore@@Base+0x4cc>
   14bcc:	stp	x29, x30, [sp, #-48]!
   14bd0:	mov	x29, sp
   14bd4:	stp	x21, x22, [sp, #32]
   14bd8:	mov	x21, x0
   14bdc:	ldr	x0, [x1, #32]
   14be0:	stp	x19, x20, [sp, #16]
   14be4:	cmp	x0, x2
   14be8:	b.eq	14c34 <idpriv_temp_restore@@Base+0x564>  // b.none
   14bec:	mov	x19, x1
   14bf0:	mov	x20, x2
   14bf4:	ldr	x1, [x21, #16]
   14bf8:	cbz	x1, 14c48 <idpriv_temp_restore@@Base+0x578>
   14bfc:	mov	x0, x2
   14c00:	blr	x1
   14c04:	mov	x22, x0
   14c08:	ldr	x0, [x19, #8]
   14c0c:	cmp	x0, x22
   14c10:	b.eq	14c50 <idpriv_temp_restore@@Base+0x580>  // b.none
   14c14:	mov	x1, x19
   14c18:	mov	x0, x21
   14c1c:	bl	14b84 <idpriv_temp_restore@@Base+0x4b4>
   14c20:	str	x22, [x19, #8]
   14c24:	str	x20, [x19, #32]
   14c28:	mov	x1, x19
   14c2c:	mov	x0, x21
   14c30:	bl	147c8 <idpriv_temp_restore@@Base+0xf8>
   14c34:	mov	w0, #0x0                   	// #0
   14c38:	ldp	x19, x20, [sp, #16]
   14c3c:	ldp	x21, x22, [sp, #32]
   14c40:	ldp	x29, x30, [sp], #48
   14c44:	ret
   14c48:	mov	x22, x2
   14c4c:	b	14c08 <idpriv_temp_restore@@Base+0x538>
   14c50:	str	x20, [x19, #32]
   14c54:	b	14c34 <idpriv_temp_restore@@Base+0x564>
   14c58:	stp	x29, x30, [sp, #-80]!
   14c5c:	mov	x29, sp
   14c60:	stp	x19, x20, [sp, #16]
   14c64:	mov	x20, x0
   14c68:	ldr	x0, [x0, #96]
   14c6c:	stp	x21, x22, [sp, #32]
   14c70:	stp	x23, x24, [sp, #48]
   14c74:	cmp	x0, x2
   14c78:	ccmp	x1, x2, #0x2, cs  // cs = hs, nlast
   14c7c:	stp	x25, x26, [sp, #64]
   14c80:	b.ls	14c88 <idpriv_temp_restore@@Base+0x5b8>  // b.plast
   14c84:	bl	aeb0 <abort@plt>
   14c88:	mov	x22, x1
   14c8c:	mov	x23, x2
   14c90:	ldr	x1, [x20, #16]
   14c94:	mov	x24, x3
   14c98:	cbz	x1, 14cd0 <idpriv_temp_restore@@Base+0x600>
   14c9c:	mov	x0, x3
   14ca0:	blr	x1
   14ca4:	mov	x25, x0
   14ca8:	ldp	x0, x2, [x20, #40]
   14cac:	ldr	x26, [x20, #8]
   14cb0:	udiv	x1, x25, x2
   14cb4:	msub	x1, x1, x2, x25
   14cb8:	ldr	x19, [x0, x1, lsl #3]
   14cbc:	ldrb	w0, [x20, #32]
   14cc0:	cbnz	w0, 14d7c <idpriv_temp_restore@@Base+0x6ac>
   14cc4:	cbnz	x19, 14cd8 <idpriv_temp_restore@@Base+0x608>
   14cc8:	mov	x21, #0xffffffffffffffff    	// #-1
   14ccc:	b	14dd0 <idpriv_temp_restore@@Base+0x700>
   14cd0:	mov	x25, x3
   14cd4:	b	14ca8 <idpriv_temp_restore@@Base+0x5d8>
   14cd8:	ldr	x0, [x19, #8]
   14cdc:	cmp	x0, x25
   14ce0:	b.eq	14cec <idpriv_temp_restore@@Base+0x61c>  // b.none
   14ce4:	ldr	x19, [x19]
   14ce8:	b	14cc4 <idpriv_temp_restore@@Base+0x5f4>
   14cec:	ldr	x1, [x19, #32]
   14cf0:	cbz	x26, 14d28 <idpriv_temp_restore@@Base+0x658>
   14cf4:	mov	x0, x24
   14cf8:	blr	x26
   14cfc:	and	w1, w0, #0xff
   14d00:	cbz	w1, 14ce4 <idpriv_temp_restore@@Base+0x614>
   14d04:	add	x20, x20, #0x38
   14d08:	mov	x21, #0x0                   	// #0
   14d0c:	ldr	x19, [x19, #24]
   14d10:	cmp	x19, x20
   14d14:	b.ne	14df8 <idpriv_temp_restore@@Base+0x728>  // b.any
   14d18:	cmp	x21, x22
   14d1c:	ccmp	x21, x23, #0x2, cs  // cs = hs, nlast
   14d20:	b.cc	14dd0 <idpriv_temp_restore@@Base+0x700>  // b.lo, b.ul, b.last
   14d24:	b	14cc8 <idpriv_temp_restore@@Base+0x5f8>
   14d28:	cmp	x24, x1
   14d2c:	cset	w1, eq  // eq = none
   14d30:	b	14d00 <idpriv_temp_restore@@Base+0x630>
   14d34:	ldr	x0, [x21, #8]
   14d38:	cmp	x0, x25
   14d3c:	b.ne	14d60 <idpriv_temp_restore@@Base+0x690>  // b.any
   14d40:	ldr	x1, [x21, #32]
   14d44:	cbz	x26, 14d70 <idpriv_temp_restore@@Base+0x6a0>
   14d48:	mov	x0, x24
   14d4c:	blr	x26
   14d50:	and	w1, w0, #0xff
   14d54:	cbz	w1, 14d60 <idpriv_temp_restore@@Base+0x690>
   14d58:	cbnz	x19, 14e00 <idpriv_temp_restore@@Base+0x730>
   14d5c:	mov	x19, x21
   14d60:	ldr	x21, [x21]
   14d64:	cbnz	x21, 14d34 <idpriv_temp_restore@@Base+0x664>
   14d68:	cbnz	x19, 14d04 <idpriv_temp_restore@@Base+0x634>
   14d6c:	b	14cc8 <idpriv_temp_restore@@Base+0x5f8>
   14d70:	cmp	x24, x1
   14d74:	cset	w1, eq  // eq = none
   14d78:	b	14d54 <idpriv_temp_restore@@Base+0x684>
   14d7c:	mov	x21, x19
   14d80:	mov	x19, #0x0                   	// #0
   14d84:	b	14d64 <idpriv_temp_restore@@Base+0x694>
   14d88:	ldr	x19, [x19, #16]
   14d8c:	sub	x1, x1, #0x1
   14d90:	cbnz	x1, 14d88 <idpriv_temp_restore@@Base+0x6b8>
   14d94:	mov	x21, x22
   14d98:	cmp	x21, x23
   14d9c:	b.cs	14cc8 <idpriv_temp_restore@@Base+0x5f8>  // b.hs, b.nlast
   14da0:	ldr	x0, [x19, #8]
   14da4:	cmp	x0, x25
   14da8:	b.eq	14db8 <idpriv_temp_restore@@Base+0x6e8>  // b.none
   14dac:	add	x21, x21, #0x1
   14db0:	ldr	x19, [x19, #16]
   14db4:	b	14d98 <idpriv_temp_restore@@Base+0x6c8>
   14db8:	ldr	x1, [x19, #32]
   14dbc:	cbz	x26, 14dec <idpriv_temp_restore@@Base+0x71c>
   14dc0:	mov	x0, x24
   14dc4:	blr	x26
   14dc8:	and	w1, w0, #0xff
   14dcc:	cbz	w1, 14dac <idpriv_temp_restore@@Base+0x6dc>
   14dd0:	mov	x0, x21
   14dd4:	ldp	x19, x20, [sp, #16]
   14dd8:	ldp	x21, x22, [sp, #32]
   14ddc:	ldp	x23, x24, [sp, #48]
   14de0:	ldp	x25, x26, [sp, #64]
   14de4:	ldp	x29, x30, [sp], #80
   14de8:	ret
   14dec:	cmp	x24, x1
   14df0:	cset	w1, eq  // eq = none
   14df4:	b	14dcc <idpriv_temp_restore@@Base+0x6fc>
   14df8:	add	x21, x21, #0x1
   14dfc:	b	14d0c <idpriv_temp_restore@@Base+0x63c>
   14e00:	mov	x1, x22
   14e04:	ldr	x19, [x20, #72]
   14e08:	b	14d90 <idpriv_temp_restore@@Base+0x6c0>
   14e0c:	stp	x29, x30, [sp, #-80]!
   14e10:	cmp	x1, x2
   14e14:	mov	x29, sp
   14e18:	stp	x23, x24, [sp, #48]
   14e1c:	ldr	x24, [x0, #96]
   14e20:	stp	x19, x20, [sp, #16]
   14e24:	stp	x21, x22, [sp, #32]
   14e28:	ccmp	x24, x2, #0x0, ls  // ls = plast
   14e2c:	stp	x25, x26, [sp, #64]
   14e30:	b.cs	14e38 <idpriv_temp_restore@@Base+0x768>  // b.hs, b.nlast
   14e34:	bl	aeb0 <abort@plt>
   14e38:	mov	x21, x1
   14e3c:	mov	x20, x0
   14e40:	ldr	x1, [x0, #16]
   14e44:	mov	x22, x2
   14e48:	mov	x26, x3
   14e4c:	cbz	x1, 14e94 <idpriv_temp_restore@@Base+0x7c4>
   14e50:	mov	x0, x3
   14e54:	blr	x1
   14e58:	mov	x23, x0
   14e5c:	ldr	x1, [x20, #48]
   14e60:	ldr	x25, [x20, #8]
   14e64:	udiv	x0, x23, x1
   14e68:	msub	x0, x0, x1, x23
   14e6c:	ldr	x1, [x20, #40]
   14e70:	ldr	x19, [x1, x0, lsl #3]
   14e74:	ldrb	w0, [x20, #32]
   14e78:	cbnz	w0, 14f88 <idpriv_temp_restore@@Base+0x8b8>
   14e7c:	cbz	x19, 14eb4 <idpriv_temp_restore@@Base+0x7e4>
   14e80:	ldr	x0, [x19, #8]
   14e84:	cmp	x0, x23
   14e88:	b.eq	14e9c <idpriv_temp_restore@@Base+0x7cc>  // b.none
   14e8c:	ldr	x19, [x19]
   14e90:	b	14e7c <idpriv_temp_restore@@Base+0x7ac>
   14e94:	mov	x23, x3
   14e98:	b	14e5c <idpriv_temp_restore@@Base+0x78c>
   14e9c:	ldr	x1, [x19, #32]
   14ea0:	cbz	x25, 14ed4 <idpriv_temp_restore@@Base+0x804>
   14ea4:	mov	x0, x26
   14ea8:	blr	x25
   14eac:	and	w0, w0, #0xff
   14eb0:	cbz	w0, 14e8c <idpriv_temp_restore@@Base+0x7bc>
   14eb4:	cbz	x21, 14ee0 <idpriv_temp_restore@@Base+0x810>
   14eb8:	ldr	x0, [x20, #72]
   14ebc:	cmp	x19, x0
   14ec0:	b.eq	14fa4 <idpriv_temp_restore@@Base+0x8d4>  // b.none
   14ec4:	subs	x21, x21, #0x1
   14ec8:	b.eq	14ee0 <idpriv_temp_restore@@Base+0x810>  // b.none
   14ecc:	ldr	x0, [x0, #16]
   14ed0:	b	14ebc <idpriv_temp_restore@@Base+0x7ec>
   14ed4:	cmp	x26, x1
   14ed8:	cset	w0, eq  // eq = none
   14edc:	b	14eb0 <idpriv_temp_restore@@Base+0x7e0>
   14ee0:	cmp	x24, x22
   14ee4:	b.ls	14fdc <idpriv_temp_restore@@Base+0x90c>  // b.plast
   14ee8:	ldr	x0, [x20, #80]
   14eec:	sub	x22, x24, x22
   14ef0:	cmp	x19, x0
   14ef4:	b.eq	14fa4 <idpriv_temp_restore@@Base+0x8d4>  // b.none
   14ef8:	subs	x22, x22, #0x1
   14efc:	b.eq	14fdc <idpriv_temp_restore@@Base+0x90c>  // b.none
   14f00:	ldr	x0, [x0, #24]
   14f04:	b	14ef0 <idpriv_temp_restore@@Base+0x820>
   14f08:	ldr	x0, [x24, #8]
   14f0c:	cmp	x0, x23
   14f10:	b.ne	14f34 <idpriv_temp_restore@@Base+0x864>  // b.any
   14f14:	ldr	x1, [x24, #32]
   14f18:	cbz	x25, 14f7c <idpriv_temp_restore@@Base+0x8ac>
   14f1c:	mov	x0, x26
   14f20:	blr	x25
   14f24:	and	w0, w0, #0xff
   14f28:	cbz	w0, 14f34 <idpriv_temp_restore@@Base+0x864>
   14f2c:	cbnz	x19, 1501c <idpriv_temp_restore@@Base+0x94c>
   14f30:	mov	x19, x24
   14f34:	ldr	x24, [x24]
   14f38:	cbnz	x24, 14f08 <idpriv_temp_restore@@Base+0x838>
   14f3c:	cbz	x21, 14f50 <idpriv_temp_restore@@Base+0x880>
   14f40:	ldr	x0, [x20, #72]
   14f44:	add	x1, x20, #0x38
   14f48:	cmp	x0, x1
   14f4c:	b.ne	15004 <idpriv_temp_restore@@Base+0x934>  // b.any
   14f50:	ldr	x2, [x20, #96]
   14f54:	cmp	x2, x22
   14f58:	b.ls	14fdc <idpriv_temp_restore@@Base+0x90c>  // b.plast
   14f5c:	ldr	x0, [x20, #80]
   14f60:	sub	x22, x2, x22
   14f64:	cmp	x19, x0
   14f68:	b.eq	14fa4 <idpriv_temp_restore@@Base+0x8d4>  // b.none
   14f6c:	subs	x22, x22, #0x1
   14f70:	b.eq	14fdc <idpriv_temp_restore@@Base+0x90c>  // b.none
   14f74:	ldr	x0, [x0, #24]
   14f78:	b	14f64 <idpriv_temp_restore@@Base+0x894>
   14f7c:	cmp	x26, x1
   14f80:	cset	w0, eq  // eq = none
   14f84:	b	14f28 <idpriv_temp_restore@@Base+0x858>
   14f88:	mov	x24, x19
   14f8c:	mov	x19, #0x0                   	// #0
   14f90:	b	14f38 <idpriv_temp_restore@@Base+0x868>
   14f94:	ldr	x19, [x19, #16]
   14f98:	sub	x21, x21, #0x1
   14f9c:	cbnz	x21, 14f94 <idpriv_temp_restore@@Base+0x8c4>
   14fa0:	cbnz	x22, 14fac <idpriv_temp_restore@@Base+0x8dc>
   14fa4:	mov	x19, #0x0                   	// #0
   14fa8:	b	14fdc <idpriv_temp_restore@@Base+0x90c>
   14fac:	ldr	x0, [x19, #8]
   14fb0:	cmp	x0, x23
   14fb4:	b.eq	14fc4 <idpriv_temp_restore@@Base+0x8f4>  // b.none
   14fb8:	sub	x22, x22, #0x1
   14fbc:	ldr	x19, [x19, #16]
   14fc0:	b	14fa0 <idpriv_temp_restore@@Base+0x8d0>
   14fc4:	ldr	x1, [x19, #32]
   14fc8:	cbz	x25, 14ff8 <idpriv_temp_restore@@Base+0x928>
   14fcc:	mov	x0, x26
   14fd0:	blr	x25
   14fd4:	and	w0, w0, #0xff
   14fd8:	cbz	w0, 14fb8 <idpriv_temp_restore@@Base+0x8e8>
   14fdc:	mov	x0, x19
   14fe0:	ldp	x19, x20, [sp, #16]
   14fe4:	ldp	x21, x22, [sp, #32]
   14fe8:	ldp	x23, x24, [sp, #48]
   14fec:	ldp	x25, x26, [sp, #64]
   14ff0:	ldp	x29, x30, [sp], #80
   14ff4:	ret
   14ff8:	cmp	x26, x1
   14ffc:	cset	w0, eq  // eq = none
   15000:	b	14fd8 <idpriv_temp_restore@@Base+0x908>
   15004:	cmp	x19, x0
   15008:	b.eq	14fa4 <idpriv_temp_restore@@Base+0x8d4>  // b.none
   1500c:	subs	x21, x21, #0x1
   15010:	b.eq	14f50 <idpriv_temp_restore@@Base+0x880>  // b.none
   15014:	ldr	x0, [x0, #16]
   15018:	b	14f48 <idpriv_temp_restore@@Base+0x878>
   1501c:	sub	x22, x22, x21
   15020:	ldr	x19, [x20, #72]
   15024:	b	14f9c <idpriv_temp_restore@@Base+0x8cc>
   15028:	stp	x29, x30, [sp, #-48]!
   1502c:	mov	x29, sp
   15030:	stp	x19, x20, [sp, #16]
   15034:	mov	x20, x0
   15038:	ldr	x0, [x0, #96]
   1503c:	stp	x21, x22, [sp, #32]
   15040:	cmp	x0, x1
   15044:	b.hi	1504c <idpriv_temp_restore@@Base+0x97c>  // b.pmore
   15048:	bl	aeb0 <abort@plt>
   1504c:	mov	x21, x2
   15050:	sub	x2, x0, #0x1
   15054:	cmp	x1, x2, lsr #1
   15058:	b.hi	150d0 <idpriv_temp_restore@@Base+0xa00>  // b.pmore
   1505c:	ldr	x19, [x20, #72]
   15060:	cbnz	x1, 150c4 <idpriv_temp_restore@@Base+0x9f4>
   15064:	ldr	x0, [x19, #32]
   15068:	cmp	x0, x21
   1506c:	b.eq	150b0 <idpriv_temp_restore@@Base+0x9e0>  // b.none
   15070:	ldr	x1, [x20, #16]
   15074:	cbz	x1, 150ec <idpriv_temp_restore@@Base+0xa1c>
   15078:	mov	x0, x21
   1507c:	blr	x1
   15080:	mov	x22, x0
   15084:	ldr	x0, [x19, #8]
   15088:	cmp	x0, x22
   1508c:	b.eq	150f4 <idpriv_temp_restore@@Base+0xa24>  // b.none
   15090:	mov	x1, x19
   15094:	mov	x0, x20
   15098:	bl	14b84 <idpriv_temp_restore@@Base+0x4b4>
   1509c:	str	x22, [x19, #8]
   150a0:	str	x21, [x19, #32]
   150a4:	mov	x1, x19
   150a8:	mov	x0, x20
   150ac:	bl	147c8 <idpriv_temp_restore@@Base+0xf8>
   150b0:	mov	x0, x19
   150b4:	ldp	x19, x20, [sp, #16]
   150b8:	ldp	x21, x22, [sp, #32]
   150bc:	ldp	x29, x30, [sp], #48
   150c0:	ret
   150c4:	sub	x1, x1, #0x1
   150c8:	ldr	x19, [x19, #16]
   150cc:	b	15060 <idpriv_temp_restore@@Base+0x990>
   150d0:	mvn	x1, x1
   150d4:	ldr	x19, [x20, #80]
   150d8:	add	x1, x0, x1
   150dc:	cbz	x1, 15064 <idpriv_temp_restore@@Base+0x994>
   150e0:	sub	x1, x1, #0x1
   150e4:	ldr	x19, [x19, #24]
   150e8:	b	150dc <idpriv_temp_restore@@Base+0xa0c>
   150ec:	mov	x22, x21
   150f0:	b	15084 <idpriv_temp_restore@@Base+0x9b4>
   150f4:	str	x21, [x19, #32]
   150f8:	b	150b0 <idpriv_temp_restore@@Base+0x9e0>
   150fc:	ldr	x2, [x0, #96]
   15100:	cmp	x2, x1
   15104:	b.hi	15114 <idpriv_temp_restore@@Base+0xa44>  // b.pmore
   15108:	stp	x29, x30, [sp, #-16]!
   1510c:	mov	x29, sp
   15110:	bl	aeb0 <abort@plt>
   15114:	sub	x3, x2, #0x1
   15118:	cmp	x1, x3, lsr #1
   1511c:	b.hi	1513c <idpriv_temp_restore@@Base+0xa6c>  // b.pmore
   15120:	ldr	x0, [x0, #72]
   15124:	cbnz	x1, 15130 <idpriv_temp_restore@@Base+0xa60>
   15128:	ldr	x0, [x0, #32]
   1512c:	ret
   15130:	sub	x1, x1, #0x1
   15134:	ldr	x0, [x0, #16]
   15138:	b	15124 <idpriv_temp_restore@@Base+0xa54>
   1513c:	mvn	x1, x1
   15140:	ldr	x0, [x0, #80]
   15144:	add	x1, x2, x1
   15148:	cbz	x1, 15128 <idpriv_temp_restore@@Base+0xa58>
   1514c:	sub	x1, x1, #0x1
   15150:	ldr	x0, [x0, #24]
   15154:	b	15148 <idpriv_temp_restore@@Base+0xa78>
   15158:	stp	x29, x30, [sp, #-64]!
   1515c:	mov	x29, sp
   15160:	stp	x19, x20, [sp, #16]
   15164:	mov	x19, x0
   15168:	stp	x21, x22, [sp, #32]
   1516c:	add	x22, x0, #0x38
   15170:	ldr	x21, [x0, #24]
   15174:	ldr	x20, [x0, #72]
   15178:	str	x23, [sp, #48]
   1517c:	cmp	x20, x22
   15180:	b.ne	151a4 <idpriv_temp_restore@@Base+0xad4>  // b.any
   15184:	ldr	x0, [x19, #40]
   15188:	bl	b050 <free@plt>
   1518c:	mov	x0, x19
   15190:	ldp	x19, x20, [sp, #16]
   15194:	ldp	x21, x22, [sp, #32]
   15198:	ldr	x23, [sp, #48]
   1519c:	ldp	x29, x30, [sp], #64
   151a0:	b	b050 <free@plt>
   151a4:	ldr	x23, [x20, #16]
   151a8:	cbz	x21, 151b4 <idpriv_temp_restore@@Base+0xae4>
   151ac:	ldr	x0, [x20, #32]
   151b0:	blr	x21
   151b4:	mov	x0, x20
   151b8:	mov	x20, x23
   151bc:	bl	b050 <free@plt>
   151c0:	b	1517c <idpriv_temp_restore@@Base+0xaac>
   151c4:	stp	x29, x30, [sp, #-32]!
   151c8:	mov	x2, x1
   151cc:	mov	x29, sp
   151d0:	ldr	x1, [x0, #96]
   151d4:	stp	x19, x20, [sp, #16]
   151d8:	cmp	x1, x2
   151dc:	b.hi	151e4 <idpriv_temp_restore@@Base+0xb14>  // b.pmore
   151e0:	bl	aeb0 <abort@plt>
   151e4:	sub	x3, x1, #0x1
   151e8:	mov	x20, x0
   151ec:	add	x0, x0, #0x38
   151f0:	cmp	x2, x3, lsr #1
   151f4:	b.ls	15220 <idpriv_temp_restore@@Base+0xb50>  // b.plast
   151f8:	mvn	x2, x2
   151fc:	add	x2, x2, x1
   15200:	ldr	x19, [x0, #24]
   15204:	cbnz	x2, 15274 <idpriv_temp_restore@@Base+0xba4>
   15208:	ldr	x1, [x19, #24]
   1520c:	str	x1, [x0, #24]
   15210:	str	x0, [x1, #16]
   15214:	b	15234 <idpriv_temp_restore@@Base+0xb64>
   15218:	sub	x2, x2, #0x1
   1521c:	mov	x0, x19
   15220:	ldr	x19, [x0, #16]
   15224:	cbnz	x2, 15218 <idpriv_temp_restore@@Base+0xb48>
   15228:	ldr	x1, [x19, #16]
   1522c:	str	x1, [x0, #16]
   15230:	str	x0, [x1, #24]
   15234:	mov	x1, x19
   15238:	mov	x0, x20
   1523c:	bl	14b84 <idpriv_temp_restore@@Base+0x4b4>
   15240:	ldr	x0, [x20, #96]
   15244:	ldr	x1, [x20, #24]
   15248:	sub	x0, x0, #0x1
   1524c:	str	x0, [x20, #96]
   15250:	cbz	x1, 1525c <idpriv_temp_restore@@Base+0xb8c>
   15254:	ldr	x0, [x19, #32]
   15258:	blr	x1
   1525c:	mov	x0, x19
   15260:	bl	b050 <free@plt>
   15264:	mov	w0, #0x1                   	// #1
   15268:	ldp	x19, x20, [sp, #16]
   1526c:	ldp	x29, x30, [sp], #32
   15270:	ret
   15274:	sub	x2, x2, #0x1
   15278:	mov	x0, x19
   1527c:	b	15200 <idpriv_temp_restore@@Base+0xb30>
   15280:	stp	x29, x30, [sp, #-32]!
   15284:	mov	x29, sp
   15288:	stp	x19, x20, [sp, #16]
   1528c:	mov	x19, x1
   15290:	mov	x20, x0
   15294:	bl	14b84 <idpriv_temp_restore@@Base+0x4b4>
   15298:	ldp	x0, x1, [x19, #16]
   1529c:	str	x0, [x1, #16]
   152a0:	str	x1, [x0, #24]
   152a4:	ldr	x0, [x20, #96]
   152a8:	ldr	x1, [x20, #24]
   152ac:	sub	x0, x0, #0x1
   152b0:	str	x0, [x20, #96]
   152b4:	cbz	x1, 152c0 <idpriv_temp_restore@@Base+0xbf0>
   152b8:	ldr	x0, [x19, #32]
   152bc:	blr	x1
   152c0:	mov	x0, x19
   152c4:	bl	b050 <free@plt>
   152c8:	mov	w0, #0x1                   	// #1
   152cc:	ldp	x19, x20, [sp, #16]
   152d0:	ldp	x29, x30, [sp], #32
   152d4:	ret
   152d8:	stp	x29, x30, [sp, #-64]!
   152dc:	mov	x29, sp
   152e0:	stp	x19, x20, [sp, #16]
   152e4:	mov	x20, x0
   152e8:	stp	x21, x22, [sp, #32]
   152ec:	mov	x21, x1
   152f0:	mov	x22, x2
   152f4:	ldr	x19, [x0, #72]
   152f8:	str	x23, [sp, #48]
   152fc:	add	x23, x0, #0x38
   15300:	cmp	x19, x23
   15304:	b.ne	15320 <idpriv_temp_restore@@Base+0xc50>  // b.any
   15308:	mov	w0, #0x0                   	// #0
   1530c:	ldp	x19, x20, [sp, #16]
   15310:	ldp	x21, x22, [sp, #32]
   15314:	ldr	x23, [sp, #48]
   15318:	ldp	x29, x30, [sp], #64
   1531c:	ret
   15320:	ldr	x0, [x19, #32]
   15324:	mov	x1, x22
   15328:	blr	x21
   1532c:	cmp	w0, #0x0
   15330:	b.gt	15308 <idpriv_temp_restore@@Base+0xc38>
   15334:	b.ne	15354 <idpriv_temp_restore@@Base+0xc84>  // b.any
   15338:	mov	x1, x19
   1533c:	mov	x0, x20
   15340:	ldp	x19, x20, [sp, #16]
   15344:	ldp	x21, x22, [sp, #32]
   15348:	ldr	x23, [sp, #48]
   1534c:	ldp	x29, x30, [sp], #64
   15350:	b	15280 <idpriv_temp_restore@@Base+0xbb0>
   15354:	ldr	x19, [x19, #16]
   15358:	b	15300 <idpriv_temp_restore@@Base+0xc30>
   1535c:	stp	x29, x30, [sp, #-32]!
   15360:	mov	x3, x1
   15364:	mov	x1, #0x0                   	// #0
   15368:	mov	x29, sp
   1536c:	ldr	x2, [x0, #96]
   15370:	str	x19, [sp, #16]
   15374:	mov	x19, x0
   15378:	bl	14e0c <idpriv_temp_restore@@Base+0x73c>
   1537c:	cbz	x0, 15394 <idpriv_temp_restore@@Base+0xcc4>
   15380:	mov	x1, x0
   15384:	mov	x0, x19
   15388:	ldr	x19, [sp, #16]
   1538c:	ldp	x29, x30, [sp], #32
   15390:	b	15280 <idpriv_temp_restore@@Base+0xbb0>
   15394:	mov	w0, #0x0                   	// #0
   15398:	ldr	x19, [sp, #16]
   1539c:	ldp	x29, x30, [sp], #32
   153a0:	ret
   153a4:	stp	x29, x30, [sp, #-80]!
   153a8:	mov	x29, sp
   153ac:	stp	x19, x20, [sp, #16]
   153b0:	mov	x20, x5
   153b4:	stp	x21, x22, [sp, #32]
   153b8:	mov	x22, x2
   153bc:	mov	x21, x3
   153c0:	stp	x23, x24, [sp, #48]
   153c4:	mov	x24, x1
   153c8:	mov	x23, x6
   153cc:	stp	x25, x26, [sp, #64]
   153d0:	mov	x25, x0
   153d4:	and	w26, w4, #0xff
   153d8:	mov	x0, #0x68                  	// #104
   153dc:	bl	aab0 <malloc@plt>
   153e0:	mov	x19, x0
   153e4:	cbz	x0, 15474 <idpriv_temp_restore@@Base+0xda4>
   153e8:	strb	w26, [x0, #32]
   153ec:	lsr	x0, x20, #1
   153f0:	stp	x25, x24, [x19]
   153f4:	adds	x0, x0, x20
   153f8:	stp	x22, x21, [x19, #16]
   153fc:	b.cs	15490 <idpriv_temp_restore@@Base+0xdc0>  // b.hs, b.nlast
   15400:	cmp	x0, #0xa
   15404:	mov	x1, #0xa                   	// #10
   15408:	csel	x1, x0, x1, cs  // cs = hs, nlast
   1540c:	adrp	x3, 28000 <vasnprintf@@Base+0x2170>
   15410:	add	x3, x3, #0x650
   15414:	mov	x2, #0x0                   	// #0
   15418:	ldr	x0, [x3, x2, lsl #3]
   1541c:	cmp	x1, x0
   15420:	b.ls	15434 <idpriv_temp_restore@@Base+0xd64>  // b.plast
   15424:	add	x2, x2, #0x1
   15428:	cmp	x2, #0xe8
   1542c:	b.ne	15418 <idpriv_temp_restore@@Base+0xd48>  // b.any
   15430:	mov	x0, #0xffffffffffffffff    	// #-1
   15434:	str	x0, [x19, #48]
   15438:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
   1543c:	cmp	x0, x1
   15440:	b.hi	15504 <idpriv_temp_restore@@Base+0xe34>  // b.pmore
   15444:	mov	x1, #0x8                   	// #8
   15448:	bl	ace0 <calloc@plt>
   1544c:	str	x0, [x19, #40]
   15450:	cbz	x0, 15504 <idpriv_temp_restore@@Base+0xe34>
   15454:	add	x24, x19, #0x38
   15458:	add	x23, x23, x20, lsl #3
   1545c:	mov	x21, x24
   15460:	mov	x25, #0xfffffffffffffff8    	// #-8
   15464:	str	x20, [x19, #96]
   15468:	cbnz	x20, 15498 <idpriv_temp_restore@@Base+0xdc8>
   1546c:	str	x24, [x21, #16]
   15470:	str	x21, [x19, #80]
   15474:	mov	x0, x19
   15478:	ldp	x19, x20, [sp, #16]
   1547c:	ldp	x21, x22, [sp, #32]
   15480:	ldp	x23, x24, [sp, #48]
   15484:	ldp	x25, x26, [sp, #64]
   15488:	ldp	x29, x30, [sp], #80
   1548c:	ret
   15490:	mov	x1, #0xffffffffffffffff    	// #-1
   15494:	b	1540c <idpriv_temp_restore@@Base+0xd3c>
   15498:	mov	x0, #0x28                  	// #40
   1549c:	bl	aab0 <malloc@plt>
   154a0:	mov	x22, x0
   154a4:	cbz	x0, 154f4 <idpriv_temp_restore@@Base+0xe24>
   154a8:	mul	x0, x20, x25
   154ac:	ldr	x1, [x19, #16]
   154b0:	ldr	x0, [x23, x0]
   154b4:	str	x0, [x22, #32]
   154b8:	cbz	x1, 154c0 <idpriv_temp_restore@@Base+0xdf0>
   154bc:	blr	x1
   154c0:	str	x0, [x22, #8]
   154c4:	mov	x1, x22
   154c8:	mov	x0, x19
   154cc:	sub	x20, x20, #0x1
   154d0:	bl	147c8 <idpriv_temp_restore@@Base+0xf8>
   154d4:	str	x21, [x22, #24]
   154d8:	str	x22, [x21, #16]
   154dc:	mov	x21, x22
   154e0:	b	15468 <idpriv_temp_restore@@Base+0xd98>
   154e4:	ldr	x20, [x21, #24]
   154e8:	mov	x0, x21
   154ec:	bl	b050 <free@plt>
   154f0:	mov	x21, x20
   154f4:	cmp	x21, x24
   154f8:	b.ne	154e4 <idpriv_temp_restore@@Base+0xe14>  // b.any
   154fc:	ldr	x0, [x19, #40]
   15500:	bl	b050 <free@plt>
   15504:	mov	x0, x19
   15508:	mov	x19, #0x0                   	// #0
   1550c:	bl	b050 <free@plt>
   15510:	b	15474 <idpriv_temp_restore@@Base+0xda4>
   15514:	stp	x29, x30, [sp, #-64]!
   15518:	mov	x29, sp
   1551c:	stp	x19, x20, [sp, #16]
   15520:	mov	x20, x3
   15524:	stp	x21, x22, [sp, #32]
   15528:	mov	x22, x1
   1552c:	mov	x21, x2
   15530:	stp	x23, x24, [sp, #48]
   15534:	mov	x23, x0
   15538:	and	w24, w4, #0xff
   1553c:	mov	x0, #0x68                  	// #104
   15540:	bl	aab0 <malloc@plt>
   15544:	mov	x19, x0
   15548:	cbz	x0, 1557c <idpriv_temp_restore@@Base+0xeac>
   1554c:	strb	w24, [x0, #32]
   15550:	mov	x0, #0xb                   	// #11
   15554:	stp	x23, x22, [x19]
   15558:	mov	x1, #0x8                   	// #8
   1555c:	stp	x21, x20, [x19, #16]
   15560:	str	x0, [x19, #48]
   15564:	bl	ace0 <calloc@plt>
   15568:	str	x0, [x19, #40]
   1556c:	cbnz	x0, 15594 <idpriv_temp_restore@@Base+0xec4>
   15570:	mov	x0, x19
   15574:	mov	x19, #0x0                   	// #0
   15578:	bl	b050 <free@plt>
   1557c:	mov	x0, x19
   15580:	ldp	x19, x20, [sp, #16]
   15584:	ldp	x21, x22, [sp, #32]
   15588:	ldp	x23, x24, [sp, #48]
   1558c:	ldp	x29, x30, [sp], #64
   15590:	ret
   15594:	add	x0, x19, #0x38
   15598:	stp	x0, x0, [x19, #72]
   1559c:	str	xzr, [x19, #96]
   155a0:	b	1557c <idpriv_temp_restore@@Base+0xeac>
   155a4:	stp	x29, x30, [sp, #-48]!
   155a8:	mov	x29, sp
   155ac:	stp	x19, x20, [sp, #16]
   155b0:	mov	x19, x0
   155b4:	ldr	x0, [x0, #96]
   155b8:	stp	x21, x22, [sp, #32]
   155bc:	ldr	x21, [x19, #48]
   155c0:	lsr	x1, x0, #1
   155c4:	adds	x1, x1, x0
   155c8:	csinv	x1, x1, xzr, cc  // cc = lo, ul, last
   155cc:	cmp	x21, x1
   155d0:	b.cs	155f8 <idpriv_temp_restore@@Base+0xf28>  // b.hs, b.nlast
   155d4:	adrp	x2, 28000 <vasnprintf@@Base+0x2170>
   155d8:	add	x2, x2, #0x650
   155dc:	mov	x0, #0x0                   	// #0
   155e0:	ldr	x20, [x2, x0, lsl #3]
   155e4:	cmp	x1, x20
   155e8:	b.ls	15608 <idpriv_temp_restore@@Base+0xf38>  // b.plast
   155ec:	add	x0, x0, #0x1
   155f0:	cmp	x0, #0xe8
   155f4:	b.ne	155e0 <idpriv_temp_restore@@Base+0xf10>  // b.any
   155f8:	ldp	x19, x20, [sp, #16]
   155fc:	ldp	x21, x22, [sp, #32]
   15600:	ldp	x29, x30, [sp], #48
   15604:	ret
   15608:	cmp	x21, x20
   1560c:	b.cs	155f8 <idpriv_temp_restore@@Base+0xf28>  // b.hs, b.nlast
   15610:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   15614:	cmp	x20, x0
   15618:	b.hi	155f8 <idpriv_temp_restore@@Base+0xf28>  // b.pmore
   1561c:	mov	x0, x20
   15620:	mov	x1, #0x8                   	// #8
   15624:	ldr	x22, [x19, #40]
   15628:	bl	ace0 <calloc@plt>
   1562c:	cbz	x0, 155f8 <idpriv_temp_restore@@Base+0xf28>
   15630:	cbnz	x21, 1564c <idpriv_temp_restore@@Base+0xf7c>
   15634:	stp	x0, x20, [x19, #40]
   15638:	mov	x0, x22
   1563c:	ldp	x19, x20, [sp, #16]
   15640:	ldp	x21, x22, [sp, #32]
   15644:	ldp	x29, x30, [sp], #48
   15648:	b	b050 <free@plt>
   1564c:	sub	x21, x21, #0x1
   15650:	ldr	x1, [x22, x21, lsl #3]
   15654:	cbz	x1, 15630 <idpriv_temp_restore@@Base+0xf60>
   15658:	ldp	x4, x3, [x1]
   1565c:	udiv	x2, x3, x20
   15660:	msub	x2, x2, x20, x3
   15664:	lsl	x2, x2, #3
   15668:	ldr	x3, [x0, x2]
   1566c:	str	x3, [x1]
   15670:	str	x1, [x0, x2]
   15674:	mov	x1, x4
   15678:	b	15654 <idpriv_temp_restore@@Base+0xf84>
   1567c:	stp	x29, x30, [sp, #-64]!
   15680:	mov	x29, sp
   15684:	str	x23, [sp, #48]
   15688:	ldr	x23, [x0, #96]
   1568c:	stp	x19, x20, [sp, #16]
   15690:	stp	x21, x22, [sp, #32]
   15694:	cmp	x23, x1
   15698:	b.cs	156a0 <idpriv_temp_restore@@Base+0xfd0>  // b.hs, b.nlast
   1569c:	bl	aeb0 <abort@plt>
   156a0:	mov	x21, x0
   156a4:	mov	x22, x1
   156a8:	mov	x20, x2
   156ac:	mov	x0, #0x28                  	// #40
   156b0:	bl	aab0 <malloc@plt>
   156b4:	mov	x19, x0
   156b8:	cbz	x0, 1573c <idpriv_temp_restore@@Base+0x106c>
   156bc:	ldr	x1, [x21, #16]
   156c0:	str	x20, [x0, #32]
   156c4:	cbz	x1, 156d4 <idpriv_temp_restore@@Base+0x1004>
   156c8:	mov	x0, x20
   156cc:	blr	x1
   156d0:	mov	x20, x0
   156d4:	mov	x0, x21
   156d8:	mov	x1, x19
   156dc:	str	x20, [x19, #8]
   156e0:	bl	147c8 <idpriv_temp_restore@@Base+0xf8>
   156e4:	add	x0, x21, #0x38
   156e8:	cmp	x22, x23, lsr #1
   156ec:	b.ls	15714 <idpriv_temp_restore@@Base+0x1044>  // b.plast
   156f0:	sub	x22, x23, x22
   156f4:	ldr	x1, [x0, #24]
   156f8:	cbnz	x22, 15754 <idpriv_temp_restore@@Base+0x1084>
   156fc:	stp	x0, x1, [x19, #16]
   15700:	str	x19, [x1, #16]
   15704:	str	x19, [x0, #24]
   15708:	b	15728 <idpriv_temp_restore@@Base+0x1058>
   1570c:	sub	x22, x22, #0x1
   15710:	mov	x0, x1
   15714:	ldr	x1, [x0, #16]
   15718:	cbnz	x22, 1570c <idpriv_temp_restore@@Base+0x103c>
   1571c:	stp	x1, x0, [x19, #16]
   15720:	str	x19, [x1, #24]
   15724:	str	x19, [x0, #16]
   15728:	ldr	x0, [x21, #96]
   1572c:	add	x0, x0, #0x1
   15730:	str	x0, [x21, #96]
   15734:	mov	x0, x21
   15738:	bl	155a4 <idpriv_temp_restore@@Base+0xed4>
   1573c:	mov	x0, x19
   15740:	ldp	x19, x20, [sp, #16]
   15744:	ldp	x21, x22, [sp, #32]
   15748:	ldr	x23, [sp, #48]
   1574c:	ldp	x29, x30, [sp], #64
   15750:	ret
   15754:	sub	x22, x22, #0x1
   15758:	mov	x0, x1
   1575c:	b	156f4 <idpriv_temp_restore@@Base+0x1024>
   15760:	stp	x29, x30, [sp, #-48]!
   15764:	mov	x29, sp
   15768:	stp	x19, x20, [sp, #16]
   1576c:	mov	x20, x2
   15770:	stp	x21, x22, [sp, #32]
   15774:	mov	x21, x0
   15778:	mov	x22, x1
   1577c:	mov	x0, #0x28                  	// #40
   15780:	bl	aab0 <malloc@plt>
   15784:	mov	x19, x0
   15788:	cbz	x0, 157d8 <idpriv_temp_restore@@Base+0x1108>
   1578c:	ldr	x1, [x21, #16]
   15790:	str	x20, [x0, #32]
   15794:	cbz	x1, 157a4 <idpriv_temp_restore@@Base+0x10d4>
   15798:	mov	x0, x20
   1579c:	blr	x1
   157a0:	mov	x20, x0
   157a4:	mov	x0, x21
   157a8:	mov	x1, x19
   157ac:	str	x20, [x19, #8]
   157b0:	bl	147c8 <idpriv_temp_restore@@Base+0xf8>
   157b4:	ldr	x0, [x22, #16]
   157b8:	stp	x0, x22, [x19, #16]
   157bc:	str	x19, [x0, #24]
   157c0:	ldr	x0, [x21, #96]
   157c4:	str	x19, [x22, #16]
   157c8:	add	x0, x0, #0x1
   157cc:	str	x0, [x21, #96]
   157d0:	mov	x0, x21
   157d4:	bl	155a4 <idpriv_temp_restore@@Base+0xed4>
   157d8:	mov	x0, x19
   157dc:	ldp	x19, x20, [sp, #16]
   157e0:	ldp	x21, x22, [sp, #32]
   157e4:	ldp	x29, x30, [sp], #48
   157e8:	ret
   157ec:	stp	x29, x30, [sp, #-48]!
   157f0:	mov	x29, sp
   157f4:	stp	x19, x20, [sp, #16]
   157f8:	mov	x20, x2
   157fc:	stp	x21, x22, [sp, #32]
   15800:	mov	x21, x0
   15804:	mov	x22, x1
   15808:	mov	x0, #0x28                  	// #40
   1580c:	bl	aab0 <malloc@plt>
   15810:	mov	x19, x0
   15814:	cbz	x0, 15864 <idpriv_temp_restore@@Base+0x1194>
   15818:	ldr	x1, [x21, #16]
   1581c:	str	x20, [x0, #32]
   15820:	cbz	x1, 15830 <idpriv_temp_restore@@Base+0x1160>
   15824:	mov	x0, x20
   15828:	blr	x1
   1582c:	mov	x20, x0
   15830:	mov	x0, x21
   15834:	mov	x1, x19
   15838:	str	x20, [x19, #8]
   1583c:	bl	147c8 <idpriv_temp_restore@@Base+0xf8>
   15840:	ldr	x0, [x22, #24]
   15844:	stp	x22, x0, [x19, #16]
   15848:	str	x19, [x0, #16]
   1584c:	ldr	x0, [x21, #96]
   15850:	str	x19, [x22, #24]
   15854:	add	x0, x0, #0x1
   15858:	str	x0, [x21, #96]
   1585c:	mov	x0, x21
   15860:	bl	155a4 <idpriv_temp_restore@@Base+0xed4>
   15864:	mov	x0, x19
   15868:	ldp	x19, x20, [sp, #16]
   1586c:	ldp	x21, x22, [sp, #32]
   15870:	ldp	x29, x30, [sp], #48
   15874:	ret
   15878:	stp	x29, x30, [sp, #-48]!
   1587c:	mov	x29, sp
   15880:	stp	x19, x20, [sp, #16]
   15884:	mov	x20, x0
   15888:	mov	x0, #0x28                  	// #40
   1588c:	str	x21, [sp, #32]
   15890:	mov	x21, x1
   15894:	bl	aab0 <malloc@plt>
   15898:	mov	x19, x0
   1589c:	cbz	x0, 158f4 <idpriv_temp_restore@@Base+0x1224>
   158a0:	ldr	x1, [x20, #16]
   158a4:	str	x21, [x0, #32]
   158a8:	cbz	x1, 158b8 <idpriv_temp_restore@@Base+0x11e8>
   158ac:	mov	x0, x21
   158b0:	blr	x1
   158b4:	mov	x21, x0
   158b8:	mov	x0, x20
   158bc:	mov	x1, x19
   158c0:	str	x21, [x19, #8]
   158c4:	bl	147c8 <idpriv_temp_restore@@Base+0xf8>
   158c8:	add	x0, x20, #0x38
   158cc:	str	x0, [x19, #16]
   158d0:	ldr	x0, [x20, #80]
   158d4:	str	x0, [x19, #24]
   158d8:	str	x19, [x0, #16]
   158dc:	ldr	x0, [x20, #96]
   158e0:	str	x19, [x20, #80]
   158e4:	add	x0, x0, #0x1
   158e8:	str	x0, [x20, #96]
   158ec:	mov	x0, x20
   158f0:	bl	155a4 <idpriv_temp_restore@@Base+0xed4>
   158f4:	mov	x0, x19
   158f8:	ldp	x19, x20, [sp, #16]
   158fc:	ldr	x21, [sp, #32]
   15900:	ldp	x29, x30, [sp], #48
   15904:	ret
   15908:	stp	x29, x30, [sp, #-64]!
   1590c:	mov	x29, sp
   15910:	stp	x19, x20, [sp, #16]
   15914:	mov	x19, x0
   15918:	mov	x20, x2
   1591c:	stp	x21, x22, [sp, #32]
   15920:	mov	x22, x1
   15924:	ldr	x21, [x0, #72]
   15928:	str	x23, [sp, #48]
   1592c:	add	x23, x0, #0x38
   15930:	mov	x1, x20
   15934:	cmp	x21, x23
   15938:	b.ne	15954 <idpriv_temp_restore@@Base+0x1284>  // b.any
   1593c:	mov	x0, x19
   15940:	ldp	x19, x20, [sp, #16]
   15944:	ldp	x21, x22, [sp, #32]
   15948:	ldr	x23, [sp, #48]
   1594c:	ldp	x29, x30, [sp], #64
   15950:	b	15878 <idpriv_temp_restore@@Base+0x11a8>
   15954:	ldr	x0, [x21, #32]
   15958:	blr	x22
   1595c:	tbnz	w0, #31, 15980 <idpriv_temp_restore@@Base+0x12b0>
   15960:	mov	x2, x20
   15964:	mov	x1, x21
   15968:	mov	x0, x19
   1596c:	ldp	x19, x20, [sp, #16]
   15970:	ldp	x21, x22, [sp, #32]
   15974:	ldr	x23, [sp, #48]
   15978:	ldp	x29, x30, [sp], #64
   1597c:	b	157ec <idpriv_temp_restore@@Base+0x111c>
   15980:	ldr	x21, [x21, #16]
   15984:	b	15930 <idpriv_temp_restore@@Base+0x1260>
   15988:	stp	x29, x30, [sp, #-48]!
   1598c:	mov	x29, sp
   15990:	stp	x19, x20, [sp, #16]
   15994:	mov	x20, x0
   15998:	mov	x0, #0x28                  	// #40
   1599c:	str	x21, [sp, #32]
   159a0:	mov	x21, x1
   159a4:	bl	aab0 <malloc@plt>
   159a8:	mov	x19, x0
   159ac:	cbz	x0, 15a04 <idpriv_temp_restore@@Base+0x1334>
   159b0:	ldr	x1, [x20, #16]
   159b4:	str	x21, [x0, #32]
   159b8:	cbz	x1, 159c8 <idpriv_temp_restore@@Base+0x12f8>
   159bc:	mov	x0, x21
   159c0:	blr	x1
   159c4:	mov	x21, x0
   159c8:	mov	x0, x20
   159cc:	mov	x1, x19
   159d0:	str	x21, [x19, #8]
   159d4:	bl	147c8 <idpriv_temp_restore@@Base+0xf8>
   159d8:	add	x0, x20, #0x38
   159dc:	str	x0, [x19, #24]
   159e0:	ldr	x0, [x20, #72]
   159e4:	str	x0, [x19, #16]
   159e8:	str	x19, [x0, #24]
   159ec:	ldr	x0, [x20, #96]
   159f0:	str	x19, [x20, #72]
   159f4:	add	x0, x0, #0x1
   159f8:	str	x0, [x20, #96]
   159fc:	mov	x0, x20
   15a00:	bl	155a4 <idpriv_temp_restore@@Base+0xed4>
   15a04:	mov	x0, x19
   15a08:	ldp	x19, x20, [sp, #16]
   15a0c:	ldr	x21, [sp, #32]
   15a10:	ldp	x29, x30, [sp], #48
   15a14:	ret

0000000000015a18 <gl_list_nx_create_empty@@Base>:
   15a18:	ldr	x5, [x0]
   15a1c:	mov	x16, x5
   15a20:	br	x16

0000000000015a24 <gl_list_nx_create@@Base>:
   15a24:	ldr	x7, [x0, #8]
   15a28:	mov	x16, x7
   15a2c:	br	x16

0000000000015a30 <gl_list_size@@Base>:
   15a30:	ldr	x1, [x0]
   15a34:	ldr	x1, [x1, #16]
   15a38:	mov	x16, x1
   15a3c:	br	x16

0000000000015a40 <gl_list_node_value@@Base>:
   15a40:	ldr	x2, [x0]
   15a44:	ldr	x2, [x2, #24]
   15a48:	mov	x16, x2
   15a4c:	br	x16

0000000000015a50 <gl_list_node_nx_set_value@@Base>:
   15a50:	ldr	x3, [x0]
   15a54:	ldr	x3, [x3, #32]
   15a58:	mov	x16, x3
   15a5c:	br	x16

0000000000015a60 <gl_list_next_node@@Base>:
   15a60:	ldr	x2, [x0]
   15a64:	ldr	x2, [x2, #40]
   15a68:	mov	x16, x2
   15a6c:	br	x16

0000000000015a70 <gl_list_previous_node@@Base>:
   15a70:	ldr	x2, [x0]
   15a74:	ldr	x2, [x2, #48]
   15a78:	mov	x16, x2
   15a7c:	br	x16

0000000000015a80 <gl_list_get_at@@Base>:
   15a80:	ldr	x2, [x0]
   15a84:	ldr	x2, [x2, #56]
   15a88:	mov	x16, x2
   15a8c:	br	x16

0000000000015a90 <gl_list_nx_set_at@@Base>:
   15a90:	ldr	x3, [x0]
   15a94:	ldr	x3, [x3, #64]
   15a98:	mov	x16, x3
   15a9c:	br	x16

0000000000015aa0 <gl_list_search@@Base>:
   15aa0:	stp	x29, x30, [sp, #-32]!
   15aa4:	mov	x29, sp
   15aa8:	stp	x19, x20, [sp, #16]
   15aac:	mov	x20, x1
   15ab0:	mov	x19, x0
   15ab4:	ldr	x1, [x0]
   15ab8:	ldr	x1, [x1, #16]
   15abc:	blr	x1
   15ac0:	mov	x2, x0
   15ac4:	ldr	x1, [x19]
   15ac8:	mov	x3, x20
   15acc:	mov	x0, x19
   15ad0:	ldp	x19, x20, [sp, #16]
   15ad4:	ldp	x29, x30, [sp], #32
   15ad8:	ldr	x4, [x1, #72]
   15adc:	mov	x1, #0x0                   	// #0
   15ae0:	mov	x16, x4
   15ae4:	br	x16

0000000000015ae8 <gl_list_search_from@@Base>:
   15ae8:	stp	x29, x30, [sp, #-48]!
   15aec:	mov	x29, sp
   15af0:	stp	x19, x20, [sp, #16]
   15af4:	mov	x20, x1
   15af8:	mov	x19, x0
   15afc:	ldr	x1, [x0]
   15b00:	ldr	x1, [x1, #16]
   15b04:	str	x21, [sp, #32]
   15b08:	mov	x21, x2
   15b0c:	blr	x1
   15b10:	mov	x2, x0
   15b14:	ldr	x1, [x19]
   15b18:	mov	x3, x21
   15b1c:	mov	x0, x19
   15b20:	ldr	x21, [sp, #32]
   15b24:	ldr	x4, [x1, #72]
   15b28:	mov	x1, x20
   15b2c:	ldp	x19, x20, [sp, #16]
   15b30:	mov	x16, x4
   15b34:	ldp	x29, x30, [sp], #48
   15b38:	br	x16

0000000000015b3c <gl_list_search_from_to@@Base>:
   15b3c:	ldr	x4, [x0]
   15b40:	ldr	x4, [x4, #72]
   15b44:	mov	x16, x4
   15b48:	br	x16

0000000000015b4c <gl_list_indexof@@Base>:
   15b4c:	stp	x29, x30, [sp, #-32]!
   15b50:	mov	x29, sp
   15b54:	stp	x19, x20, [sp, #16]
   15b58:	mov	x20, x1
   15b5c:	mov	x19, x0
   15b60:	ldr	x1, [x0]
   15b64:	ldr	x1, [x1, #16]
   15b68:	blr	x1
   15b6c:	mov	x2, x0
   15b70:	ldr	x1, [x19]
   15b74:	mov	x3, x20
   15b78:	mov	x0, x19
   15b7c:	ldp	x19, x20, [sp, #16]
   15b80:	ldp	x29, x30, [sp], #32
   15b84:	ldr	x4, [x1, #80]
   15b88:	mov	x1, #0x0                   	// #0
   15b8c:	mov	x16, x4
   15b90:	br	x16

0000000000015b94 <gl_list_indexof_from@@Base>:
   15b94:	stp	x29, x30, [sp, #-48]!
   15b98:	mov	x29, sp
   15b9c:	stp	x19, x20, [sp, #16]
   15ba0:	mov	x20, x1
   15ba4:	mov	x19, x0
   15ba8:	ldr	x1, [x0]
   15bac:	ldr	x1, [x1, #16]
   15bb0:	str	x21, [sp, #32]
   15bb4:	mov	x21, x2
   15bb8:	blr	x1
   15bbc:	mov	x2, x0
   15bc0:	ldr	x1, [x19]
   15bc4:	mov	x3, x21
   15bc8:	mov	x0, x19
   15bcc:	ldr	x21, [sp, #32]
   15bd0:	ldr	x4, [x1, #80]
   15bd4:	mov	x1, x20
   15bd8:	ldp	x19, x20, [sp, #16]
   15bdc:	mov	x16, x4
   15be0:	ldp	x29, x30, [sp], #48
   15be4:	br	x16

0000000000015be8 <gl_list_indexof_from_to@@Base>:
   15be8:	ldr	x4, [x0]
   15bec:	ldr	x4, [x4, #80]
   15bf0:	mov	x16, x4
   15bf4:	br	x16

0000000000015bf8 <gl_list_nx_add_first@@Base>:
   15bf8:	ldr	x2, [x0]
   15bfc:	ldr	x2, [x2, #88]
   15c00:	mov	x16, x2
   15c04:	br	x16

0000000000015c08 <gl_list_nx_add_last@@Base>:
   15c08:	ldr	x2, [x0]
   15c0c:	ldr	x2, [x2, #96]
   15c10:	mov	x16, x2
   15c14:	br	x16

0000000000015c18 <gl_list_nx_add_before@@Base>:
   15c18:	ldr	x3, [x0]
   15c1c:	ldr	x3, [x3, #104]
   15c20:	mov	x16, x3
   15c24:	br	x16

0000000000015c28 <gl_list_nx_add_after@@Base>:
   15c28:	ldr	x3, [x0]
   15c2c:	ldr	x3, [x3, #112]
   15c30:	mov	x16, x3
   15c34:	br	x16

0000000000015c38 <gl_list_nx_add_at@@Base>:
   15c38:	ldr	x3, [x0]
   15c3c:	ldr	x3, [x3, #120]
   15c40:	mov	x16, x3
   15c44:	br	x16

0000000000015c48 <gl_list_remove_node@@Base>:
   15c48:	ldr	x2, [x0]
   15c4c:	ldr	x2, [x2, #128]
   15c50:	mov	x16, x2
   15c54:	br	x16

0000000000015c58 <gl_list_remove_at@@Base>:
   15c58:	ldr	x2, [x0]
   15c5c:	ldr	x2, [x2, #136]
   15c60:	mov	x16, x2
   15c64:	br	x16

0000000000015c68 <gl_list_remove@@Base>:
   15c68:	ldr	x2, [x0]
   15c6c:	ldr	x2, [x2, #144]
   15c70:	mov	x16, x2
   15c74:	br	x16

0000000000015c78 <gl_list_free@@Base>:
   15c78:	ldr	x1, [x0]
   15c7c:	ldr	x1, [x1, #152]
   15c80:	mov	x16, x1
   15c84:	br	x16

0000000000015c88 <gl_list_iterator@@Base>:
   15c88:	stp	x29, x30, [sp, #-16]!
   15c8c:	mov	x29, sp
   15c90:	ldr	x1, [x0]
   15c94:	ldr	x1, [x1, #160]
   15c98:	blr	x1
   15c9c:	ldp	x29, x30, [sp], #16
   15ca0:	ret

0000000000015ca4 <gl_list_iterator_from_to@@Base>:
   15ca4:	stp	x29, x30, [sp, #-16]!
   15ca8:	mov	x29, sp
   15cac:	ldr	x3, [x0]
   15cb0:	ldr	x3, [x3, #168]
   15cb4:	blr	x3
   15cb8:	ldp	x29, x30, [sp], #16
   15cbc:	ret

0000000000015cc0 <gl_list_iterator_next@@Base>:
   15cc0:	ldr	x3, [x0]
   15cc4:	ldr	x3, [x3, #176]
   15cc8:	mov	x16, x3
   15ccc:	br	x16

0000000000015cd0 <gl_list_iterator_free@@Base>:
   15cd0:	ldr	x1, [x0]
   15cd4:	ldr	x1, [x1, #184]
   15cd8:	mov	x16, x1
   15cdc:	br	x16

0000000000015ce0 <gl_sortedlist_search@@Base>:
   15ce0:	ldr	x3, [x0]
   15ce4:	ldr	x3, [x3, #192]
   15ce8:	mov	x16, x3
   15cec:	br	x16

0000000000015cf0 <gl_sortedlist_search_from_to@@Base>:
   15cf0:	ldr	x5, [x0]
   15cf4:	ldr	x5, [x5, #200]
   15cf8:	mov	x16, x5
   15cfc:	br	x16

0000000000015d00 <gl_sortedlist_indexof@@Base>:
   15d00:	ldr	x3, [x0]
   15d04:	ldr	x3, [x3, #208]
   15d08:	mov	x16, x3
   15d0c:	br	x16

0000000000015d10 <gl_sortedlist_indexof_from_to@@Base>:
   15d10:	ldr	x5, [x0]
   15d14:	ldr	x5, [x5, #216]
   15d18:	mov	x16, x5
   15d1c:	br	x16

0000000000015d20 <gl_sortedlist_nx_add@@Base>:
   15d20:	ldr	x3, [x0]
   15d24:	ldr	x3, [x3, #224]
   15d28:	mov	x16, x3
   15d2c:	br	x16

0000000000015d30 <gl_sortedlist_remove@@Base>:
   15d30:	ldr	x3, [x0]
   15d34:	ldr	x3, [x3, #232]
   15d38:	mov	x16, x3
   15d3c:	br	x16

0000000000015d40 <locale_charset@@Base>:
   15d40:	stp	x29, x30, [sp, #-16]!
   15d44:	mov	w0, #0xe                   	// #14
   15d48:	mov	x29, sp
   15d4c:	bl	aa80 <nl_langinfo@plt>
   15d50:	cbz	x0, 15d5c <locale_charset@@Base+0x1c>
   15d54:	ldrb	w1, [x0]
   15d58:	cbnz	w1, 15d64 <locale_charset@@Base+0x24>
   15d5c:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   15d60:	add	x0, x0, #0x14
   15d64:	ldp	x29, x30, [sp], #16
   15d68:	ret

0000000000015d6c <glthread_rwlock_init_for_glibc@@Base>:
   15d6c:	stp	x29, x30, [sp, #-64]!
   15d70:	mov	x29, sp
   15d74:	stp	x19, x20, [sp, #16]
   15d78:	add	x20, sp, #0x38
   15d7c:	str	x21, [sp, #32]
   15d80:	mov	x21, x0
   15d84:	mov	x0, x20
   15d88:	bl	a710 <pthread_rwlockattr_init@plt>
   15d8c:	cbnz	w0, 15dd0 <glthread_rwlock_init_for_glibc@@Base+0x64>
   15d90:	mov	x0, x20
   15d94:	mov	w1, #0x2                   	// #2
   15d98:	bl	a890 <pthread_rwlockattr_setkind_np@plt>
   15d9c:	mov	w19, w0
   15da0:	cbnz	w0, 15db4 <glthread_rwlock_init_for_glibc@@Base+0x48>
   15da4:	mov	x1, x20
   15da8:	mov	x0, x21
   15dac:	bl	a870 <pthread_rwlock_init@plt>
   15db0:	mov	w19, w0
   15db4:	mov	x0, x20
   15db8:	bl	b410 <pthread_rwlockattr_destroy@plt>
   15dbc:	mov	w0, w19
   15dc0:	ldp	x19, x20, [sp, #16]
   15dc4:	ldr	x21, [sp, #32]
   15dc8:	ldp	x29, x30, [sp], #64
   15dcc:	ret
   15dd0:	mov	w19, w0
   15dd4:	b	15dbc <glthread_rwlock_init_for_glibc@@Base+0x50>

0000000000015dd8 <glthread_recursive_lock_init_multithreaded@@Base>:
   15dd8:	stp	x29, x30, [sp, #-64]!
   15ddc:	mov	x29, sp
   15de0:	stp	x19, x20, [sp, #16]
   15de4:	add	x20, sp, #0x38
   15de8:	str	x21, [sp, #32]
   15dec:	mov	x21, x0
   15df0:	mov	x0, x20
   15df4:	bl	b320 <pthread_mutexattr_init@plt>
   15df8:	mov	w19, w0
   15dfc:	cbnz	w0, 15e1c <glthread_recursive_lock_init_multithreaded@@Base+0x44>
   15e00:	mov	x0, x20
   15e04:	mov	w1, #0x1                   	// #1
   15e08:	bl	a7d0 <pthread_mutexattr_settype@plt>
   15e0c:	mov	w19, w0
   15e10:	cbz	w0, 15e30 <glthread_recursive_lock_init_multithreaded@@Base+0x58>
   15e14:	mov	x0, x20
   15e18:	bl	b390 <pthread_mutexattr_destroy@plt>
   15e1c:	mov	w0, w19
   15e20:	ldp	x19, x20, [sp, #16]
   15e24:	ldr	x21, [sp, #32]
   15e28:	ldp	x29, x30, [sp], #64
   15e2c:	ret
   15e30:	mov	x1, x20
   15e34:	mov	x0, x21
   15e38:	bl	adc0 <pthread_mutex_init@plt>
   15e3c:	mov	w19, w0
   15e40:	mov	x0, x20
   15e44:	cbnz	w19, 15e18 <glthread_recursive_lock_init_multithreaded@@Base+0x40>
   15e48:	bl	b390 <pthread_mutexattr_destroy@plt>
   15e4c:	mov	w19, w0
   15e50:	b	15e1c <glthread_recursive_lock_init_multithreaded@@Base+0x44>

0000000000015e54 <glthread_once_singlethreaded@@Base>:
   15e54:	ldrb	w1, [x0]
   15e58:	cbnz	w1, 15e6c <glthread_once_singlethreaded@@Base+0x18>
   15e5c:	mov	w1, #0xffffffff            	// #-1
   15e60:	strb	w1, [x0]
   15e64:	mov	w0, #0x1                   	// #1
   15e68:	ret
   15e6c:	mov	w0, #0x0                   	// #0
   15e70:	b	15e68 <glthread_once_singlethreaded@@Base+0x14>

0000000000015e74 <mmalloca@@Base>:
   15e74:	adds	x0, x0, #0x20
   15e78:	b.cs	15eb4 <mmalloca@@Base+0x40>  // b.hs, b.nlast
   15e7c:	stp	x29, x30, [sp, #-16]!
   15e80:	mov	x29, sp
   15e84:	bl	aab0 <malloc@plt>
   15e88:	mov	x2, x0
   15e8c:	cbnz	x0, 15e9c <mmalloca@@Base+0x28>
   15e90:	mov	x0, #0x0                   	// #0
   15e94:	ldp	x29, x30, [sp], #16
   15e98:	ret
   15e9c:	add	x1, x0, #0x10
   15ea0:	and	x1, x1, #0xffffffffffffffe0
   15ea4:	add	x0, x1, #0x10
   15ea8:	sub	x2, x0, x2
   15eac:	sturb	w2, [x0, #-1]
   15eb0:	b	15e94 <mmalloca@@Base+0x20>
   15eb4:	mov	x0, #0x0                   	// #0
   15eb8:	ret

0000000000015ebc <freea@@Base>:
   15ebc:	tst	x0, #0xf
   15ec0:	b.eq	15ed0 <freea@@Base+0x14>  // b.none
   15ec4:	stp	x29, x30, [sp, #-16]!
   15ec8:	mov	x29, sp
   15ecc:	bl	aeb0 <abort@plt>
   15ed0:	tbz	w0, #4, 15ee0 <freea@@Base+0x24>
   15ed4:	ldurb	w1, [x0, #-1]
   15ed8:	sub	x0, x0, x1
   15edc:	b	b050 <free@plt>
   15ee0:	ret

0000000000015ee4 <gl_map_nx_create_empty@@Base>:
   15ee4:	ldr	x5, [x0]
   15ee8:	mov	x16, x5
   15eec:	br	x16

0000000000015ef0 <gl_map_size@@Base>:
   15ef0:	ldr	x1, [x0]
   15ef4:	ldr	x1, [x1, #8]
   15ef8:	mov	x16, x1
   15efc:	br	x16

0000000000015f00 <gl_map_search@@Base>:
   15f00:	ldr	x3, [x0]
   15f04:	ldr	x3, [x3, #16]
   15f08:	mov	x16, x3
   15f0c:	br	x16

0000000000015f10 <gl_map_nx_getput@@Base>:
   15f10:	ldr	x4, [x0]
   15f14:	ldr	x4, [x4, #24]
   15f18:	mov	x16, x4
   15f1c:	br	x16

0000000000015f20 <gl_map_getremove@@Base>:
   15f20:	ldr	x3, [x0]
   15f24:	ldr	x3, [x3, #32]
   15f28:	mov	x16, x3
   15f2c:	br	x16

0000000000015f30 <gl_map_free@@Base>:
   15f30:	ldr	x1, [x0]
   15f34:	ldr	x1, [x1, #40]
   15f38:	mov	x16, x1
   15f3c:	br	x16

0000000000015f40 <gl_map_iterator@@Base>:
   15f40:	stp	x29, x30, [sp, #-16]!
   15f44:	mov	x29, sp
   15f48:	ldr	x1, [x0]
   15f4c:	ldr	x1, [x1, #48]
   15f50:	blr	x1
   15f54:	ldp	x29, x30, [sp], #16
   15f58:	ret

0000000000015f5c <gl_map_iterator_next@@Base>:
   15f5c:	ldr	x3, [x0]
   15f60:	ldr	x3, [x3, #56]
   15f64:	mov	x16, x3
   15f68:	br	x16

0000000000015f6c <gl_map_iterator_free@@Base>:
   15f6c:	ldr	x1, [x0]
   15f70:	ldr	x1, [x1, #64]
   15f74:	mov	x16, x1
   15f78:	br	x16

0000000000015f7c <gl_map_get@@Base>:
   15f7c:	stp	x29, x30, [sp, #-32]!
   15f80:	mov	x29, sp
   15f84:	add	x2, sp, #0x18
   15f88:	str	xzr, [sp, #24]
   15f8c:	bl	15f00 <gl_map_search@@Base>
   15f90:	ldr	x0, [sp, #24]
   15f94:	ldp	x29, x30, [sp], #32
   15f98:	ret

0000000000015f9c <gl_map_nx_put@@Base>:
   15f9c:	stp	x29, x30, [sp, #-48]!
   15fa0:	mov	x29, sp
   15fa4:	add	x3, sp, #0x28
   15fa8:	stp	x19, x20, [sp, #16]
   15fac:	mov	x20, x0
   15fb0:	bl	15f10 <gl_map_nx_getput@@Base>
   15fb4:	mov	w19, w0
   15fb8:	cbnz	w0, 15fcc <gl_map_nx_put@@Base+0x30>
   15fbc:	ldr	x1, [x20, #24]
   15fc0:	cbz	x1, 15fcc <gl_map_nx_put@@Base+0x30>
   15fc4:	ldr	x0, [sp, #40]
   15fc8:	blr	x1
   15fcc:	mov	w0, w19
   15fd0:	ldp	x19, x20, [sp, #16]
   15fd4:	ldp	x29, x30, [sp], #48
   15fd8:	ret

0000000000015fdc <gl_map_remove@@Base>:
   15fdc:	stp	x29, x30, [sp, #-48]!
   15fe0:	mov	x29, sp
   15fe4:	add	x2, sp, #0x28
   15fe8:	stp	x19, x20, [sp, #16]
   15fec:	mov	x20, x0
   15ff0:	bl	15f20 <gl_map_getremove@@Base>
   15ff4:	mov	w19, w0
   15ff8:	tst	w0, #0xff
   15ffc:	b.eq	16010 <gl_map_remove@@Base+0x34>  // b.none
   16000:	ldr	x1, [x20, #24]
   16004:	cbz	x1, 16010 <gl_map_remove@@Base+0x34>
   16008:	ldr	x0, [sp, #40]
   1600c:	blr	x1
   16010:	mov	w0, w19
   16014:	ldp	x19, x20, [sp, #16]
   16018:	ldp	x29, x30, [sp], #48
   1601c:	ret

0000000000016020 <get_nonblocking_flag@@Base>:
   16020:	stp	x29, x30, [sp, #-16]!
   16024:	mov	w1, #0x3                   	// #3
   16028:	mov	w2, #0x0                   	// #0
   1602c:	mov	x29, sp
   16030:	bl	b220 <fcntl@plt>
   16034:	ubfx	x1, x0, #11, #1
   16038:	cmp	w0, #0x0
   1603c:	csinv	w0, w1, wzr, ge  // ge = tcont
   16040:	ldp	x29, x30, [sp], #16
   16044:	ret

0000000000016048 <set_nonblocking_flag@@Base>:
   16048:	stp	x29, x30, [sp, #-32]!
   1604c:	mov	w2, #0x0                   	// #0
   16050:	mov	x29, sp
   16054:	stp	x19, x20, [sp, #16]
   16058:	and	w20, w1, #0xff
   1605c:	mov	w19, w0
   16060:	mov	w1, #0x3                   	// #3
   16064:	bl	b220 <fcntl@plt>
   16068:	tbnz	w0, #31, 1609c <set_nonblocking_flag@@Base+0x54>
   1606c:	ubfx	x1, x0, #11, #1
   16070:	cmp	w1, w20
   16074:	b.eq	160ac <set_nonblocking_flag@@Base+0x64>  // b.none
   16078:	cmp	w20, #0x0
   1607c:	orr	w2, w0, #0x800
   16080:	and	w0, w0, #0xfffff7ff
   16084:	mov	w1, #0x4                   	// #4
   16088:	csel	w2, w0, w2, eq  // eq = none
   1608c:	mov	w0, w19
   16090:	ldp	x19, x20, [sp, #16]
   16094:	ldp	x29, x30, [sp], #32
   16098:	b	b220 <fcntl@plt>
   1609c:	mov	w0, #0xffffffff            	// #-1
   160a0:	ldp	x19, x20, [sp, #16]
   160a4:	ldp	x29, x30, [sp], #32
   160a8:	ret
   160ac:	mov	w0, #0x0                   	// #0
   160b0:	b	160a0 <set_nonblocking_flag@@Base+0x58>

00000000000160b4 <openat_save_fail@@Base>:
   160b4:	stp	x29, x30, [sp, #-32]!
   160b8:	mov	w2, #0x5                   	// #5
   160bc:	adrp	x1, 28000 <vasnprintf@@Base+0x2170>
   160c0:	mov	x29, sp
   160c4:	stp	x19, x20, [sp, #16]
   160c8:	mov	w19, w0
   160cc:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   160d0:	add	x1, x1, #0xd90
   160d4:	ldr	x0, [x0, #3976]
   160d8:	ldr	w20, [x0]
   160dc:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   160e0:	add	x0, x0, #0x2ee
   160e4:	bl	b3f0 <dcgettext@plt>
   160e8:	mov	w1, w19
   160ec:	mov	x2, x0
   160f0:	mov	w0, w20
   160f4:	bl	a7c0 <error@plt>
   160f8:	bl	aeb0 <abort@plt>

00000000000160fc <openat_restore_fail@@Base>:
   160fc:	stp	x29, x30, [sp, #-32]!
   16100:	mov	w2, #0x5                   	// #5
   16104:	adrp	x1, 28000 <vasnprintf@@Base+0x2170>
   16108:	mov	x29, sp
   1610c:	stp	x19, x20, [sp, #16]
   16110:	mov	w19, w0
   16114:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   16118:	add	x1, x1, #0xdbb
   1611c:	ldr	x0, [x0, #3976]
   16120:	ldr	w20, [x0]
   16124:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   16128:	add	x0, x0, #0x2ee
   1612c:	bl	b3f0 <dcgettext@plt>
   16130:	mov	w1, w19
   16134:	mov	x2, x0
   16138:	mov	w0, w20
   1613c:	bl	a7c0 <error@plt>
   16140:	bl	aeb0 <abort@plt>

0000000000016144 <set_program_name@@Base>:
   16144:	stp	x29, x30, [sp, #-48]!
   16148:	mov	x29, sp
   1614c:	stp	x19, x20, [sp, #16]
   16150:	str	x21, [sp, #32]
   16154:	cbnz	x0, 16174 <set_program_name@@Base+0x30>
   16158:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   1615c:	ldr	x0, [x0, #3816]
   16160:	ldr	x1, [x0]
   16164:	adrp	x0, 28000 <vasnprintf@@Base+0x2170>
   16168:	add	x0, x0, #0xde9
   1616c:	bl	a790 <fputs@plt>
   16170:	bl	aeb0 <abort@plt>
   16174:	mov	x19, x0
   16178:	mov	w1, #0x2f                  	// #47
   1617c:	bl	ae10 <strrchr@plt>
   16180:	mov	x20, x0
   16184:	cbz	x0, 161d8 <set_program_name@@Base+0x94>
   16188:	add	x21, x0, #0x1
   1618c:	sub	x0, x21, x19
   16190:	cmp	x0, #0x6
   16194:	b.le	161d8 <set_program_name@@Base+0x94>
   16198:	adrp	x1, 28000 <vasnprintf@@Base+0x2170>
   1619c:	sub	x0, x20, #0x6
   161a0:	add	x1, x1, #0xe21
   161a4:	mov	x2, #0x7                   	// #7
   161a8:	bl	abd0 <strncmp@plt>
   161ac:	cbnz	w0, 161d8 <set_program_name@@Base+0x94>
   161b0:	adrp	x1, 28000 <vasnprintf@@Base+0x2170>
   161b4:	mov	x0, x21
   161b8:	add	x1, x1, #0xe29
   161bc:	mov	x2, #0x3                   	// #3
   161c0:	bl	abd0 <strncmp@plt>
   161c4:	cbnz	w0, 16200 <set_program_name@@Base+0xbc>
   161c8:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   161cc:	add	x19, x20, #0x4
   161d0:	ldr	x0, [x0, #4008]
   161d4:	str	x19, [x0]
   161d8:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   161dc:	ldr	x21, [sp, #32]
   161e0:	ldr	x0, [x0, #3992]
   161e4:	str	x19, [x0]
   161e8:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   161ec:	ldr	x0, [x0, #3768]
   161f0:	str	x19, [x0]
   161f4:	ldp	x19, x20, [sp, #16]
   161f8:	ldp	x29, x30, [sp], #48
   161fc:	ret
   16200:	mov	x19, x21
   16204:	b	161d8 <set_program_name@@Base+0x94>
   16208:	mov	x3, x0
   1620c:	mov	x0, x1
   16210:	ldp	x4, x5, [x1]
   16214:	str	x4, [x3, #8]
   16218:	ldr	x2, [x3, #16]
   1621c:	ldr	x1, [x3]
   16220:	str	x3, [x0]
   16224:	str	x2, [x0, #16]
   16228:	str	x0, [x3, #16]
   1622c:	cbz	x4, 1627c <set_program_name@@Base+0x138>
   16230:	str	x3, [x4, #16]
   16234:	cbz	x1, 1624c <set_program_name@@Base+0x108>
   16238:	ldr	x2, [x1, #32]
   1623c:	add	x1, x2, #0x1
   16240:	cbnz	x4, 16250 <set_program_name@@Base+0x10c>
   16244:	mov	x2, #0x0                   	// #0
   16248:	b	16254 <set_program_name@@Base+0x110>
   1624c:	mov	x1, #0x1                   	// #1
   16250:	ldr	x2, [x4, #32]
   16254:	add	x2, x2, x1
   16258:	str	x2, [x3, #32]
   1625c:	cbz	x5, 16274 <set_program_name@@Base+0x130>
   16260:	ldr	x1, [x5, #32]
   16264:	add	x2, x2, #0x1
   16268:	add	x2, x2, x1
   1626c:	str	x2, [x0, #32]
   16270:	ret
   16274:	mov	x1, #0x0                   	// #0
   16278:	b	16264 <set_program_name@@Base+0x120>
   1627c:	cbnz	x1, 16238 <set_program_name@@Base+0xf4>
   16280:	mov	x1, #0x1                   	// #1
   16284:	b	16244 <set_program_name@@Base+0x100>
   16288:	ldp	x3, x2, [x0]
   1628c:	str	x2, [x1]
   16290:	ldp	x4, x5, [x1, #8]
   16294:	stp	x1, x5, [x0, #8]
   16298:	str	x0, [x1, #16]
   1629c:	cbz	x2, 162d4 <set_program_name@@Base+0x190>
   162a0:	str	x1, [x2, #16]
   162a4:	ldr	x2, [x2, #32]
   162a8:	add	x2, x2, #0x1
   162ac:	cbz	x4, 162dc <set_program_name@@Base+0x198>
   162b0:	ldr	x4, [x4, #32]
   162b4:	add	x2, x2, x4
   162b8:	str	x2, [x1, #32]
   162bc:	cbz	x3, 162e4 <set_program_name@@Base+0x1a0>
   162c0:	ldr	x1, [x3, #32]
   162c4:	add	x1, x1, #0x1
   162c8:	add	x2, x2, x1
   162cc:	str	x2, [x0, #32]
   162d0:	ret
   162d4:	mov	x2, #0x1                   	// #1
   162d8:	b	162ac <set_program_name@@Base+0x168>
   162dc:	mov	x4, #0x0                   	// #0
   162e0:	b	162b4 <set_program_name@@Base+0x170>
   162e4:	mov	x1, #0x1                   	// #1
   162e8:	b	162c8 <set_program_name@@Base+0x184>
   162ec:	ldr	x0, [x0, #40]
   162f0:	cbz	x0, 162fc <set_program_name@@Base+0x1b8>
   162f4:	ldr	x0, [x0, #32]
   162f8:	ret
   162fc:	mov	x0, #0x0                   	// #0
   16300:	b	162f8 <set_program_name@@Base+0x1b4>
   16304:	ldr	x0, [x1, #40]
   16308:	ret
   1630c:	mov	w0, #0x0                   	// #0
   16310:	str	x2, [x1, #40]
   16314:	ret
   16318:	ldr	x2, [x0]
   1631c:	cbz	x2, 16330 <set_program_name@@Base+0x1ec>
   16320:	ldr	x3, [x2, #32]
   16324:	cmp	x3, x1
   16328:	b.hi	1633c <set_program_name@@Base+0x1f8>  // b.pmore
   1632c:	sub	x1, x1, x3
   16330:	cbz	x1, 16344 <set_program_name@@Base+0x200>
   16334:	ldr	x2, [x0, #8]
   16338:	sub	x1, x1, #0x1
   1633c:	mov	x0, x2
   16340:	b	16318 <set_program_name@@Base+0x1d4>
   16344:	ret
   16348:	ldr	x1, [x0, #40]
   1634c:	ldr	x2, [x0]
   16350:	cbz	x1, 16364 <set_program_name@@Base+0x220>
   16354:	mov	x3, x1
   16358:	ldr	x1, [x1]
   1635c:	cbnz	x1, 16354 <set_program_name@@Base+0x210>
   16360:	mov	x1, x3
   16364:	stp	x2, x0, [x8]
   16368:	stp	x1, xzr, [x8, #24]
   1636c:	ret
   16370:	ldp	x3, x4, [x0, #24]
   16374:	cmp	x3, x4
   16378:	b.eq	163c8 <set_program_name@@Base+0x284>  // b.none
   1637c:	ldr	x4, [x3, #40]
   16380:	str	x4, [x1]
   16384:	cbz	x2, 1638c <set_program_name@@Base+0x248>
   16388:	str	x3, [x2]
   1638c:	ldr	x1, [x3, #8]
   16390:	cbz	x1, 163ac <set_program_name@@Base+0x268>
   16394:	mov	x3, x1
   16398:	ldr	x1, [x1]
   1639c:	cbnz	x1, 16394 <set_program_name@@Base+0x250>
   163a0:	str	x3, [x0, #24]
   163a4:	mov	w0, #0x1                   	// #1
   163a8:	ret
   163ac:	mov	x1, x3
   163b0:	ldr	x3, [x3, #16]
   163b4:	cbz	x3, 163a0 <set_program_name@@Base+0x25c>
   163b8:	ldr	x2, [x3, #8]
   163bc:	cmp	x2, x1
   163c0:	b.eq	163ac <set_program_name@@Base+0x268>  // b.none
   163c4:	b	163a0 <set_program_name@@Base+0x25c>
   163c8:	mov	w0, #0x0                   	// #0
   163cc:	b	163a8 <set_program_name@@Base+0x264>
   163d0:	ret
   163d4:	stp	x29, x30, [sp, #-64]!
   163d8:	mov	x29, sp
   163dc:	str	x23, [sp, #48]
   163e0:	ldr	x23, [x0]
   163e4:	stp	x19, x20, [sp, #16]
   163e8:	mov	x19, x0
   163ec:	stp	x21, x22, [sp, #32]
   163f0:	mov	x21, x1
   163f4:	cbz	x23, 1642c <set_program_name@@Base+0x2e8>
   163f8:	mov	x1, x0
   163fc:	mov	x0, x23
   16400:	bl	163d4 <set_program_name@@Base+0x290>
   16404:	mov	w20, w0
   16408:	ldr	x22, [x19, #8]
   1640c:	cbz	x22, 16434 <set_program_name@@Base+0x2f0>
   16410:	mov	x1, x19
   16414:	mov	x0, x22
   16418:	bl	163d4 <set_program_name@@Base+0x290>
   1641c:	ldr	x1, [x19, #16]
   16420:	cmp	x1, x21
   16424:	b.eq	1643c <set_program_name@@Base+0x2f8>  // b.none
   16428:	bl	aeb0 <abort@plt>
   1642c:	mov	w20, #0x0                   	// #0
   16430:	b	16408 <set_program_name@@Base+0x2c4>
   16434:	mov	w0, #0x0                   	// #0
   16438:	b	1641c <set_program_name@@Base+0x2d8>
   1643c:	ldr	x3, [x19, #32]
   16440:	cbz	x23, 16498 <set_program_name@@Base+0x354>
   16444:	ldr	x2, [x23, #32]
   16448:	add	x2, x2, #0x1
   1644c:	cbz	x22, 164a0 <set_program_name@@Base+0x35c>
   16450:	ldr	x1, [x22, #32]
   16454:	add	x2, x2, x1
   16458:	cmp	x3, x2
   1645c:	b.ne	16428 <set_program_name@@Base+0x2e4>  // b.any
   16460:	ldr	w2, [x19, #24]
   16464:	cmp	w2, #0x1
   16468:	b.hi	16428 <set_program_name@@Base+0x2e4>  // b.pmore
   1646c:	cbnz	x21, 16474 <set_program_name@@Base+0x330>
   16470:	cbnz	w2, 16428 <set_program_name@@Base+0x2e4>
   16474:	cmp	w20, w0
   16478:	b.ne	16428 <set_program_name@@Base+0x2e4>  // b.any
   1647c:	eor	w0, w2, #0x1
   16480:	add	w0, w0, w20
   16484:	ldp	x19, x20, [sp, #16]
   16488:	ldp	x21, x22, [sp, #32]
   1648c:	ldr	x23, [sp, #48]
   16490:	ldp	x29, x30, [sp], #64
   16494:	ret
   16498:	mov	x2, #0x1                   	// #1
   1649c:	b	1644c <set_program_name@@Base+0x308>
   164a0:	mov	x1, #0x0                   	// #0
   164a4:	b	16454 <set_program_name@@Base+0x310>
   164a8:	stp	x29, x30, [sp, #-80]!
   164ac:	cmp	x2, x3
   164b0:	mov	x29, sp
   164b4:	stp	x19, x20, [sp, #16]
   164b8:	stp	x21, x22, [sp, #32]
   164bc:	stp	x23, x24, [sp, #48]
   164c0:	str	x25, [sp, #64]
   164c4:	b.hi	164f0 <set_program_name@@Base+0x3ac>  // b.pmore
   164c8:	ldr	x19, [x0, #40]
   164cc:	mov	x20, x3
   164d0:	cbz	x19, 16610 <set_program_name@@Base+0x4cc>
   164d4:	ldr	x0, [x19, #32]
   164d8:	mov	x22, x1
   164dc:	mov	x23, x2
   164e0:	mov	x25, x4
   164e4:	cmp	x3, x0
   164e8:	mov	x21, #0x0                   	// #0
   164ec:	b.ls	164f4 <set_program_name@@Base+0x3b0>  // b.plast
   164f0:	bl	aeb0 <abort@plt>
   164f4:	ldr	x0, [x19]
   164f8:	cbz	x0, 16530 <set_program_name@@Base+0x3ec>
   164fc:	ldr	x24, [x0, #32]
   16500:	cmp	x24, x23
   16504:	b.cs	16538 <set_program_name@@Base+0x3f4>  // b.hs, b.nlast
   16508:	sub	x23, x23, #0x1
   1650c:	sub	x20, x20, #0x1
   16510:	add	x21, x21, #0x1
   16514:	sub	x23, x23, x24
   16518:	ldr	x19, [x19, #8]
   1651c:	sub	x20, x20, x24
   16520:	add	x21, x24, x21
   16524:	cbnz	x19, 164f4 <set_program_name@@Base+0x3b0>
   16528:	mov	x20, #0xffffffffffffffff    	// #-1
   1652c:	b	16588 <set_program_name@@Base+0x444>
   16530:	mov	x24, #0x0                   	// #0
   16534:	b	16500 <set_program_name@@Base+0x3bc>
   16538:	cmp	x24, x20
   1653c:	b.cs	16608 <set_program_name@@Base+0x4c4>  // b.hs, b.nlast
   16540:	ldr	x0, [x19, #40]
   16544:	mov	x1, x25
   16548:	blr	x22
   1654c:	cmp	w0, #0x0
   16550:	b.ge	16570 <set_program_name@@Base+0x42c>  // b.tcont
   16554:	sub	x20, x20, #0x1
   16558:	add	x21, x21, #0x1
   1655c:	sub	x20, x20, x24
   16560:	add	x21, x24, x21
   16564:	mov	x23, #0x0                   	// #0
   16568:	ldr	x19, [x19, #8]
   1656c:	b	16524 <set_program_name@@Base+0x3e0>
   16570:	ldr	x19, [x19]
   16574:	b.ne	16524 <set_program_name@@Base+0x3e0>  // b.any
   16578:	cbz	x19, 165a4 <set_program_name@@Base+0x460>
   1657c:	ldr	x20, [x19, #32]
   16580:	add	x20, x20, x21
   16584:	cbnz	x19, 165ac <set_program_name@@Base+0x468>
   16588:	mov	x0, x20
   1658c:	ldp	x19, x20, [sp, #16]
   16590:	ldp	x21, x22, [sp, #32]
   16594:	ldp	x23, x24, [sp, #48]
   16598:	ldr	x25, [sp, #64]
   1659c:	ldp	x29, x30, [sp], #80
   165a0:	ret
   165a4:	mov	x20, #0x0                   	// #0
   165a8:	b	16580 <set_program_name@@Base+0x43c>
   165ac:	ldr	x0, [x19]
   165b0:	cbz	x0, 165d0 <set_program_name@@Base+0x48c>
   165b4:	ldr	x24, [x0, #32]
   165b8:	cmp	x23, x24
   165bc:	b.ls	165d8 <set_program_name@@Base+0x494>  // b.plast
   165c0:	sub	x23, x23, #0x1
   165c4:	sub	x23, x23, x24
   165c8:	ldr	x19, [x19, #8]
   165cc:	b	16584 <set_program_name@@Base+0x440>
   165d0:	mov	x24, #0x0                   	// #0
   165d4:	b	165b8 <set_program_name@@Base+0x474>
   165d8:	ldr	x0, [x19, #40]
   165dc:	mov	x1, x25
   165e0:	blr	x22
   165e4:	cmp	w0, #0x0
   165e8:	b.ge	165f8 <set_program_name@@Base+0x4b4>  // b.tcont
   165ec:	add	x21, x21, #0x1
   165f0:	add	x21, x24, x21
   165f4:	b	165c8 <set_program_name@@Base+0x484>
   165f8:	b.ne	164f0 <set_program_name@@Base+0x3ac>  // b.any
   165fc:	add	x20, x21, x24
   16600:	ldr	x19, [x19]
   16604:	b	16584 <set_program_name@@Base+0x440>
   16608:	mov	x19, x0
   1660c:	b	16524 <set_program_name@@Base+0x3e0>
   16610:	cbz	x3, 16528 <set_program_name@@Base+0x3e4>
   16614:	b	164f0 <set_program_name@@Base+0x3ac>
   16618:	stp	x29, x30, [sp, #-64]!
   1661c:	mov	x29, sp
   16620:	stp	x19, x20, [sp, #16]
   16624:	mov	x20, #0x0                   	// #0
   16628:	stp	x21, x22, [sp, #32]
   1662c:	mov	x22, x1
   16630:	ldr	x19, [x0, #40]
   16634:	str	x23, [sp, #48]
   16638:	mov	x23, x2
   1663c:	cbnz	x19, 16648 <set_program_name@@Base+0x504>
   16640:	mov	x21, #0xffffffffffffffff    	// #-1
   16644:	b	166c0 <set_program_name@@Base+0x57c>
   16648:	ldr	x0, [x19, #40]
   1664c:	mov	x1, x23
   16650:	blr	x22
   16654:	cmp	w0, #0x0
   16658:	ldr	x0, [x19]
   1665c:	b.ge	16678 <set_program_name@@Base+0x534>  // b.tcont
   16660:	cbz	x0, 1666c <set_program_name@@Base+0x528>
   16664:	ldr	x0, [x0, #32]
   16668:	add	x20, x20, x0
   1666c:	add	x20, x20, #0x1
   16670:	ldr	x19, [x19, #8]
   16674:	b	1663c <set_program_name@@Base+0x4f8>
   16678:	mov	x19, x0
   1667c:	b.ne	1663c <set_program_name@@Base+0x4f8>  // b.any
   16680:	cbz	x19, 166e8 <set_program_name@@Base+0x5a4>
   16684:	ldr	x21, [x19, #32]
   16688:	add	x21, x20, x21
   1668c:	b	166bc <set_program_name@@Base+0x578>
   16690:	ldr	x0, [x19, #40]
   16694:	mov	x1, x23
   16698:	blr	x22
   1669c:	cmp	w0, #0x0
   166a0:	b.ge	166d8 <set_program_name@@Base+0x594>  // b.tcont
   166a4:	ldr	x0, [x19]
   166a8:	cbz	x0, 166b4 <set_program_name@@Base+0x570>
   166ac:	ldr	x0, [x0, #32]
   166b0:	add	x20, x20, x0
   166b4:	ldr	x19, [x19, #8]
   166b8:	add	x20, x20, #0x1
   166bc:	cbnz	x19, 16690 <set_program_name@@Base+0x54c>
   166c0:	mov	x0, x21
   166c4:	ldp	x19, x20, [sp, #16]
   166c8:	ldp	x21, x22, [sp, #32]
   166cc:	ldr	x23, [sp, #48]
   166d0:	ldp	x29, x30, [sp], #64
   166d4:	ret
   166d8:	b.eq	166e0 <set_program_name@@Base+0x59c>  // b.none
   166dc:	bl	aeb0 <abort@plt>
   166e0:	ldr	x19, [x19]
   166e4:	b	16680 <set_program_name@@Base+0x53c>
   166e8:	mov	x21, #0x0                   	// #0
   166ec:	b	16688 <set_program_name@@Base+0x544>
   166f0:	stp	x29, x30, [sp, #-80]!
   166f4:	cmp	x2, x3
   166f8:	mov	x29, sp
   166fc:	stp	x19, x20, [sp, #16]
   16700:	stp	x21, x22, [sp, #32]
   16704:	stp	x23, x24, [sp, #48]
   16708:	str	x25, [sp, #64]
   1670c:	b.hi	16734 <set_program_name@@Base+0x5f0>  // b.pmore
   16710:	ldr	x23, [x0, #40]
   16714:	mov	x21, x3
   16718:	cbz	x23, 1682c <set_program_name@@Base+0x6e8>
   1671c:	ldr	x0, [x23, #32]
   16720:	mov	x22, x1
   16724:	mov	x20, x2
   16728:	mov	x25, x4
   1672c:	cmp	x3, x0
   16730:	b.ls	1673c <set_program_name@@Base+0x5f8>  // b.plast
   16734:	bl	aeb0 <abort@plt>
   16738:	mov	x23, x19
   1673c:	ldr	x19, [x23]
   16740:	cbz	x19, 16770 <set_program_name@@Base+0x62c>
   16744:	ldr	x24, [x19, #32]
   16748:	cmp	x24, x20
   1674c:	b.cs	16778 <set_program_name@@Base+0x634>  // b.hs, b.nlast
   16750:	sub	x20, x20, #0x1
   16754:	sub	x21, x21, #0x1
   16758:	ldr	x19, [x23, #8]
   1675c:	sub	x20, x20, x24
   16760:	sub	x21, x21, x24
   16764:	cbnz	x19, 16738 <set_program_name@@Base+0x5f4>
   16768:	mov	x23, #0x0                   	// #0
   1676c:	b	167b4 <set_program_name@@Base+0x670>
   16770:	mov	x24, #0x0                   	// #0
   16774:	b	16748 <set_program_name@@Base+0x604>
   16778:	cmp	x24, x21
   1677c:	b.cs	16764 <set_program_name@@Base+0x620>  // b.hs, b.nlast
   16780:	ldr	x0, [x23, #40]
   16784:	mov	x1, x25
   16788:	blr	x22
   1678c:	cmp	w0, #0x0
   16790:	b.ge	167a8 <set_program_name@@Base+0x664>  // b.tcont
   16794:	sub	x21, x21, #0x1
   16798:	mov	x20, #0x0                   	// #0
   1679c:	sub	x21, x21, x24
   167a0:	ldr	x19, [x23, #8]
   167a4:	b	16764 <set_program_name@@Base+0x620>
   167a8:	ldr	x19, [x23]
   167ac:	b.ne	16764 <set_program_name@@Base+0x620>  // b.any
   167b0:	cbnz	x19, 167d0 <set_program_name@@Base+0x68c>
   167b4:	mov	x0, x23
   167b8:	ldp	x19, x20, [sp, #16]
   167bc:	ldp	x21, x22, [sp, #32]
   167c0:	ldp	x23, x24, [sp, #48]
   167c4:	ldr	x25, [sp, #64]
   167c8:	ldp	x29, x30, [sp], #80
   167cc:	ret
   167d0:	ldr	x0, [x19]
   167d4:	cbz	x0, 167f4 <set_program_name@@Base+0x6b0>
   167d8:	ldr	x0, [x0, #32]
   167dc:	cmp	x20, x0
   167e0:	b.ls	167fc <set_program_name@@Base+0x6b8>  // b.plast
   167e4:	sub	x20, x20, #0x1
   167e8:	sub	x20, x20, x0
   167ec:	ldr	x19, [x19, #8]
   167f0:	b	167b0 <set_program_name@@Base+0x66c>
   167f4:	mov	x0, #0x0                   	// #0
   167f8:	b	167dc <set_program_name@@Base+0x698>
   167fc:	ldr	x0, [x19, #40]
   16800:	mov	x1, x25
   16804:	blr	x22
   16808:	cmp	w0, #0x0
   1680c:	b.ge	1681c <set_program_name@@Base+0x6d8>  // b.tcont
   16810:	mov	x20, #0x0                   	// #0
   16814:	ldr	x19, [x19, #8]
   16818:	b	167b0 <set_program_name@@Base+0x66c>
   1681c:	b.ne	16734 <set_program_name@@Base+0x5f0>  // b.any
   16820:	mov	x23, x19
   16824:	ldr	x19, [x19]
   16828:	b	167b0 <set_program_name@@Base+0x66c>
   1682c:	cbz	x3, 16768 <set_program_name@@Base+0x624>
   16830:	b	16734 <set_program_name@@Base+0x5f0>
   16834:	stp	x29, x30, [sp, #-48]!
   16838:	mov	x29, sp
   1683c:	stp	x19, x20, [sp, #16]
   16840:	ldr	x20, [x0, #40]
   16844:	stp	x21, x22, [sp, #32]
   16848:	mov	x21, x1
   1684c:	mov	x22, x2
   16850:	cbz	x20, 16880 <set_program_name@@Base+0x73c>
   16854:	ldr	x0, [x20, #40]
   16858:	mov	x1, x22
   1685c:	blr	x21
   16860:	cmp	w0, #0x0
   16864:	b.ge	16874 <set_program_name@@Base+0x730>  // b.tcont
   16868:	ldr	x19, [x20, #8]
   1686c:	mov	x20, x19
   16870:	b	16850 <set_program_name@@Base+0x70c>
   16874:	ldr	x19, [x20]
   16878:	b.ne	1686c <set_program_name@@Base+0x728>  // b.any
   1687c:	cbnz	x19, 16894 <set_program_name@@Base+0x750>
   16880:	mov	x0, x20
   16884:	ldp	x19, x20, [sp, #16]
   16888:	ldp	x21, x22, [sp, #32]
   1688c:	ldp	x29, x30, [sp], #48
   16890:	ret
   16894:	ldr	x0, [x19, #40]
   16898:	mov	x1, x22
   1689c:	blr	x21
   168a0:	cmp	w0, #0x0
   168a4:	b.ge	168b0 <set_program_name@@Base+0x76c>  // b.tcont
   168a8:	ldr	x19, [x19, #8]
   168ac:	b	1687c <set_program_name@@Base+0x738>
   168b0:	b.eq	168b8 <set_program_name@@Base+0x774>  // b.none
   168b4:	bl	aeb0 <abort@plt>
   168b8:	mov	x20, x19
   168bc:	ldr	x19, [x19]
   168c0:	b	1687c <set_program_name@@Base+0x738>
   168c4:	stp	x29, x30, [sp, #-16]!
   168c8:	mov	x5, x0
   168cc:	mov	x4, x2
   168d0:	mov	x29, sp
   168d4:	ldr	x7, [x0, #40]
   168d8:	cbz	x7, 168f0 <set_program_name@@Base+0x7ac>
   168dc:	ldr	x9, [x7, #32]
   168e0:	cmp	x1, x4
   168e4:	ccmp	x9, x4, #0x0, ls  // ls = plast
   168e8:	b.cs	168f8 <set_program_name@@Base+0x7b4>  // b.hs, b.nlast
   168ec:	bl	aeb0 <abort@plt>
   168f0:	mov	x9, #0x0                   	// #0
   168f4:	b	168e0 <set_program_name@@Base+0x79c>
   168f8:	cmp	x9, x1
   168fc:	ldr	x10, [x5]
   16900:	b.ls	16934 <set_program_name@@Base+0x7f0>  // b.plast
   16904:	mov	x0, x7
   16908:	bl	16318 <set_program_name@@Base+0x1d4>
   1690c:	mov	x6, x0
   16910:	cmp	x9, x4
   16914:	b.ls	1693c <set_program_name@@Base+0x7f8>  // b.plast
   16918:	mov	x1, x4
   1691c:	mov	x0, x7
   16920:	bl	16318 <set_program_name@@Base+0x1d4>
   16924:	stp	x10, x5, [x8]
   16928:	stp	x6, x0, [x8, #24]
   1692c:	ldp	x29, x30, [sp], #16
   16930:	ret
   16934:	mov	x6, #0x0                   	// #0
   16938:	b	16910 <set_program_name@@Base+0x7cc>
   1693c:	mov	x0, #0x0                   	// #0
   16940:	b	16924 <set_program_name@@Base+0x7e0>
   16944:	mov	x6, x2
   16948:	add	x11, x0, #0x28
   1694c:	stp	x29, x30, [sp, #-16]!
   16950:	mov	w10, #0x1                   	// #1
   16954:	mov	x29, sp
   16958:	ldr	x7, [x6, #16]
   1695c:	cbnz	x7, 169d8 <set_program_name@@Base+0x894>
   16960:	mov	x7, x11
   16964:	ldp	x8, x9, [x6]
   16968:	cmp	x8, x1
   1696c:	b.ne	16a7c <set_program_name@@Base+0x938>  // b.any
   16970:	ldr	w8, [x9, #24]
   16974:	cmp	w8, #0x1
   16978:	b.ne	1699c <set_program_name@@Base+0x858>  // b.any
   1697c:	mov	x1, x9
   16980:	mov	x0, x6
   16984:	bl	16208 <set_program_name@@Base+0xc4>
   16988:	str	x0, [x7]
   1698c:	str	w8, [x6, #24]
   16990:	mov	x7, x9
   16994:	str	wzr, [x9, #24]
   16998:	ldr	x9, [x6, #8]
   1699c:	ldr	x0, [x9, #8]
   169a0:	cbz	x0, 169fc <set_program_name@@Base+0x8b8>
   169a4:	ldr	w0, [x0, #24]
   169a8:	cmp	w0, #0x1
   169ac:	b.ne	169fc <set_program_name@@Base+0x8b8>  // b.any
   169b0:	mov	x1, x9
   169b4:	mov	x0, x6
   169b8:	bl	16208 <set_program_name@@Base+0xc4>
   169bc:	str	x0, [x7]
   169c0:	ldr	w0, [x6, #24]
   169c4:	str	w0, [x9, #24]
   169c8:	ldr	x0, [x9, #8]
   169cc:	str	wzr, [x6, #24]
   169d0:	str	wzr, [x0, #24]
   169d4:	b	16a74 <set_program_name@@Base+0x930>
   169d8:	ldr	x0, [x7]
   169dc:	cmp	x0, x6
   169e0:	b.eq	16964 <set_program_name@@Base+0x820>  // b.none
   169e4:	ldr	x0, [x7, #8]
   169e8:	cmp	x0, x6
   169ec:	b.ne	169f8 <set_program_name@@Base+0x8b4>  // b.any
   169f0:	add	x7, x7, #0x8
   169f4:	b	16964 <set_program_name@@Base+0x820>
   169f8:	bl	aeb0 <abort@plt>
   169fc:	ldr	x0, [x9]
   16a00:	cbz	x0, 16a4c <set_program_name@@Base+0x908>
   16a04:	ldr	w12, [x0, #24]
   16a08:	cmp	w12, #0x1
   16a0c:	b.ne	16a4c <set_program_name@@Base+0x908>  // b.any
   16a10:	mov	x1, x9
   16a14:	bl	16288 <set_program_name@@Base+0x144>
   16a18:	mov	x8, x0
   16a1c:	str	x8, [x6, #8]
   16a20:	str	w12, [x9, #24]
   16a24:	mov	x1, x0
   16a28:	mov	x0, x6
   16a2c:	str	wzr, [x8, #24]
   16a30:	bl	16208 <set_program_name@@Base+0xc4>
   16a34:	str	x0, [x7]
   16a38:	ldr	w0, [x6, #24]
   16a3c:	str	w0, [x8, #24]
   16a40:	ldr	x0, [x8, #8]
   16a44:	str	wzr, [x6, #24]
   16a48:	b	169d0 <set_program_name@@Base+0x88c>
   16a4c:	ldr	w0, [x6, #24]
   16a50:	cbnz	w0, 16a6c <set_program_name@@Base+0x928>
   16a54:	str	w10, [x9, #24]
   16a58:	ldr	x0, [x6, #16]
   16a5c:	mov	x1, x6
   16a60:	cbz	x0, 16a74 <set_program_name@@Base+0x930>
   16a64:	mov	x6, x0
   16a68:	b	16958 <set_program_name@@Base+0x814>
   16a6c:	str	wzr, [x6, #24]
   16a70:	str	w10, [x9, #24]
   16a74:	ldp	x29, x30, [sp], #16
   16a78:	ret
   16a7c:	cmp	x1, x9
   16a80:	b.ne	169f8 <set_program_name@@Base+0x8b4>  // b.any
   16a84:	ldr	w9, [x8, #24]
   16a88:	cmp	w9, #0x1
   16a8c:	b.ne	16ab0 <set_program_name@@Base+0x96c>  // b.any
   16a90:	mov	x0, x8
   16a94:	mov	x1, x6
   16a98:	bl	16288 <set_program_name@@Base+0x144>
   16a9c:	str	x0, [x7]
   16aa0:	str	w9, [x6, #24]
   16aa4:	add	x7, x8, #0x8
   16aa8:	str	wzr, [x8, #24]
   16aac:	ldr	x8, [x6]
   16ab0:	ldr	x0, [x8]
   16ab4:	cbz	x0, 16ae8 <set_program_name@@Base+0x9a4>
   16ab8:	ldr	w0, [x0, #24]
   16abc:	cmp	w0, #0x1
   16ac0:	b.ne	16ae8 <set_program_name@@Base+0x9a4>  // b.any
   16ac4:	mov	x1, x6
   16ac8:	mov	x0, x8
   16acc:	bl	16288 <set_program_name@@Base+0x144>
   16ad0:	str	x0, [x7]
   16ad4:	ldr	w0, [x6, #24]
   16ad8:	str	w0, [x8, #24]
   16adc:	ldr	x0, [x8]
   16ae0:	str	wzr, [x6, #24]
   16ae4:	b	169d0 <set_program_name@@Base+0x88c>
   16ae8:	ldr	x1, [x8, #8]
   16aec:	cbz	x1, 16b34 <set_program_name@@Base+0x9f0>
   16af0:	ldr	w12, [x1, #24]
   16af4:	cmp	w12, #0x1
   16af8:	b.ne	16b34 <set_program_name@@Base+0x9f0>  // b.any
   16afc:	mov	x0, x8
   16b00:	bl	16208 <set_program_name@@Base+0xc4>
   16b04:	str	x0, [x6]
   16b08:	mov	x9, x0
   16b0c:	str	w12, [x8, #24]
   16b10:	mov	x1, x6
   16b14:	str	wzr, [x0, #24]
   16b18:	bl	16288 <set_program_name@@Base+0x144>
   16b1c:	str	x0, [x7]
   16b20:	ldr	w0, [x6, #24]
   16b24:	str	w0, [x9, #24]
   16b28:	ldr	x0, [x9]
   16b2c:	str	wzr, [x6, #24]
   16b30:	b	169d0 <set_program_name@@Base+0x88c>
   16b34:	ldr	w0, [x6, #24]
   16b38:	cbnz	w0, 16b44 <set_program_name@@Base+0xa00>
   16b3c:	str	w10, [x8, #24]
   16b40:	b	16a58 <set_program_name@@Base+0x914>
   16b44:	str	wzr, [x6, #24]
   16b48:	str	w10, [x8, #24]
   16b4c:	b	16a74 <set_program_name@@Base+0x930>
   16b50:	mov	x8, x1
   16b54:	ldr	w1, [x2, #24]
   16b58:	mov	x6, x2
   16b5c:	cbnz	w1, 16c6c <set_program_name@@Base+0xb28>
   16b60:	mov	w0, #0x1                   	// #1
   16b64:	str	w0, [x8, #24]
   16b68:	ret
   16b6c:	mov	x2, x3
   16b70:	ldr	x1, [x7, #16]
   16b74:	cbz	x2, 16bb4 <set_program_name@@Base+0xa70>
   16b78:	ldr	w4, [x2, #24]
   16b7c:	cmp	w4, #0x1
   16b80:	b.ne	16bb4 <set_program_name@@Base+0xa70>  // b.any
   16b84:	str	w4, [x8, #24]
   16b88:	str	wzr, [x2, #24]
   16b8c:	str	wzr, [x6, #24]
   16b90:	cbz	x1, 16c64 <set_program_name@@Base+0xb20>
   16b94:	mov	x6, x1
   16b98:	ldr	w1, [x1, #24]
   16b9c:	mov	x8, x7
   16ba0:	cbnz	w1, 16c74 <set_program_name@@Base+0xb30>
   16ba4:	mov	w0, #0x1                   	// #1
   16ba8:	str	w0, [x8, #24]
   16bac:	ldp	x29, x30, [sp], #16
   16bb0:	ret
   16bb4:	cbnz	x1, 16c08 <set_program_name@@Base+0xac4>
   16bb8:	add	x9, x0, #0x28
   16bbc:	cmp	x3, x6
   16bc0:	b.ne	16c30 <set_program_name@@Base+0xaec>  // b.any
   16bc4:	ldr	x0, [x6, #8]
   16bc8:	cmp	x0, x8
   16bcc:	b.ne	16be8 <set_program_name@@Base+0xaa4>  // b.any
   16bd0:	mov	x1, x8
   16bd4:	mov	x0, x6
   16bd8:	bl	16208 <set_program_name@@Base+0xc4>
   16bdc:	mov	x8, x6
   16be0:	mov	x6, x0
   16be4:	str	x0, [x7]
   16be8:	mov	x1, x7
   16bec:	mov	x0, x6
   16bf0:	bl	16288 <set_program_name@@Base+0x144>
   16bf4:	str	x0, [x9]
   16bf8:	mov	w0, #0x1                   	// #1
   16bfc:	str	wzr, [x6, #24]
   16c00:	str	w0, [x7, #24]
   16c04:	b	16ba8 <set_program_name@@Base+0xa64>
   16c08:	ldr	x0, [x1]
   16c0c:	cmp	x0, x7
   16c10:	b.ne	16c1c <set_program_name@@Base+0xad8>  // b.any
   16c14:	mov	x9, x1
   16c18:	b	16bbc <set_program_name@@Base+0xa78>
   16c1c:	ldr	x0, [x1, #8]
   16c20:	cmp	x0, x7
   16c24:	b.ne	16c8c <set_program_name@@Base+0xb48>  // b.any
   16c28:	add	x9, x1, #0x8
   16c2c:	b	16bbc <set_program_name@@Base+0xa78>
   16c30:	ldr	x0, [x6]
   16c34:	cmp	x0, x8
   16c38:	b.ne	16c54 <set_program_name@@Base+0xb10>  // b.any
   16c3c:	mov	x1, x6
   16c40:	mov	x0, x8
   16c44:	bl	16288 <set_program_name@@Base+0x144>
   16c48:	mov	x8, x6
   16c4c:	mov	x6, x0
   16c50:	str	x0, [x7, #8]
   16c54:	mov	x1, x6
   16c58:	mov	x0, x7
   16c5c:	bl	16208 <set_program_name@@Base+0xc4>
   16c60:	b	16bf4 <set_program_name@@Base+0xab0>
   16c64:	str	wzr, [x7, #24]
   16c68:	b	16bac <set_program_name@@Base+0xa68>
   16c6c:	stp	x29, x30, [sp, #-16]!
   16c70:	mov	x29, sp
   16c74:	ldr	x7, [x6, #16]
   16c78:	ldp	x3, x2, [x7]
   16c7c:	cmp	x3, x6
   16c80:	b.eq	16b70 <set_program_name@@Base+0xa2c>  // b.none
   16c84:	cmp	x6, x2
   16c88:	b.eq	16b6c <set_program_name@@Base+0xa28>  // b.none
   16c8c:	bl	aeb0 <abort@plt>
   16c90:	sub	sp, sp, #0x7a0
   16c94:	cmp	x1, x2
   16c98:	stp	x29, x30, [sp]
   16c9c:	mov	x29, sp
   16ca0:	stp	x19, x20, [sp, #16]
   16ca4:	stp	x21, x22, [sp, #32]
   16ca8:	stp	x23, x24, [sp, #48]
   16cac:	stp	x25, x26, [sp, #64]
   16cb0:	stp	x27, x28, [sp, #80]
   16cb4:	b.hi	16cd8 <set_program_name@@Base+0xb94>  // b.pmore
   16cb8:	mov	x19, x1
   16cbc:	mov	x22, x2
   16cc0:	ldr	x1, [x0, #40]
   16cc4:	mov	x23, x3
   16cc8:	cbz	x1, 16cdc <set_program_name@@Base+0xb98>
   16ccc:	ldr	x2, [x1, #32]
   16cd0:	cmp	x2, x22
   16cd4:	b.cs	16ce4 <set_program_name@@Base+0xba0>  // b.hs, b.nlast
   16cd8:	bl	aeb0 <abort@plt>
   16cdc:	mov	x2, #0x0                   	// #0
   16ce0:	b	16cd0 <set_program_name@@Base+0xb8c>
   16ce4:	add	x26, sp, #0x60
   16ce8:	ldr	x25, [x0, #8]
   16cec:	cbz	x19, 16d18 <set_program_name@@Base+0xbd4>
   16cf0:	mov	x20, x26
   16cf4:	mov	x24, #0x0                   	// #0
   16cf8:	cbz	x1, 16d8c <set_program_name@@Base+0xc48>
   16cfc:	ldr	x0, [x1, #32]
   16d00:	cmp	x0, x19
   16d04:	b.ls	16d8c <set_program_name@@Base+0xc48>  // b.plast
   16d08:	stp	x1, xzr, [x20]
   16d0c:	add	x20, x20, #0x10
   16d10:	ldr	x1, [x1]
   16d14:	b	16cf8 <set_program_name@@Base+0xbb4>
   16d18:	mov	x20, x26
   16d1c:	mov	x27, #0x1                   	// #1
   16d20:	cbz	x1, 16d38 <set_program_name@@Base+0xbf4>
   16d24:	stp	x1, xzr, [x20]
   16d28:	add	x20, x20, #0x10
   16d2c:	ldr	x1, [x1]
   16d30:	b	16d20 <set_program_name@@Base+0xbdc>
   16d34:	mov	x20, x21
   16d38:	cmp	x20, x26
   16d3c:	b.eq	16e14 <set_program_name@@Base+0xcd0>  // b.none
   16d40:	ldur	x0, [x20, #-8]
   16d44:	sub	x21, x20, #0x10
   16d48:	cbnz	x0, 16d34 <set_program_name@@Base+0xbf0>
   16d4c:	ldr	x24, [x21]
   16d50:	ldr	x1, [x24, #40]
   16d54:	cbz	x25, 16d80 <set_program_name@@Base+0xc3c>
   16d58:	mov	x0, x23
   16d5c:	blr	x25
   16d60:	and	w0, w0, #0xff
   16d64:	cbnz	w0, 16e18 <set_program_name@@Base+0xcd4>
   16d68:	add	x19, x19, #0x1
   16d6c:	cmp	x22, x19
   16d70:	b.ls	16e14 <set_program_name@@Base+0xcd0>  // b.plast
   16d74:	str	x27, [x21, #8]
   16d78:	ldr	x1, [x24, #8]
   16d7c:	b	16d20 <set_program_name@@Base+0xbdc>
   16d80:	cmp	x23, x1
   16d84:	cset	w0, eq  // eq = none
   16d88:	b	16d64 <set_program_name@@Base+0xc20>
   16d8c:	cmp	x20, x26
   16d90:	b.eq	16e14 <set_program_name@@Base+0xcd0>  // b.none
   16d94:	ldur	x0, [x20, #-8]
   16d98:	sub	x28, x20, #0x10
   16d9c:	cbz	x0, 16dac <set_program_name@@Base+0xc68>
   16da0:	add	x19, x19, x0
   16da4:	mov	x20, x28
   16da8:	b	16d8c <set_program_name@@Base+0xc48>
   16dac:	ldr	x27, [x28]
   16db0:	ldr	x0, [x27]
   16db4:	cbz	x0, 16e00 <set_program_name@@Base+0xcbc>
   16db8:	ldr	x21, [x0, #32]
   16dbc:	add	x21, x21, #0x1
   16dc0:	cmp	x19, x21
   16dc4:	b.cs	16de4 <set_program_name@@Base+0xca0>  // b.hs, b.nlast
   16dc8:	ldr	x1, [x27, #40]
   16dcc:	cbz	x25, 16e08 <set_program_name@@Base+0xcc4>
   16dd0:	mov	x0, x23
   16dd4:	blr	x25
   16dd8:	and	w0, w0, #0xff
   16ddc:	cbnz	w0, 16e3c <set_program_name@@Base+0xcf8>
   16de0:	mov	x19, x21
   16de4:	add	x24, x24, #0x1
   16de8:	cmp	x22, x24
   16dec:	b.ls	16e14 <set_program_name@@Base+0xcd0>  // b.plast
   16df0:	sub	x19, x19, x21
   16df4:	str	x21, [x28, #8]
   16df8:	ldr	x1, [x27, #8]
   16dfc:	b	16cf8 <set_program_name@@Base+0xbb4>
   16e00:	mov	x21, #0x1                   	// #1
   16e04:	b	16dc0 <set_program_name@@Base+0xc7c>
   16e08:	cmp	x1, x23
   16e0c:	cset	w0, eq  // eq = none
   16e10:	b	16ddc <set_program_name@@Base+0xc98>
   16e14:	mov	x19, #0xffffffffffffffff    	// #-1
   16e18:	mov	x0, x19
   16e1c:	ldp	x29, x30, [sp]
   16e20:	ldp	x19, x20, [sp, #16]
   16e24:	ldp	x21, x22, [sp, #32]
   16e28:	ldp	x23, x24, [sp, #48]
   16e2c:	ldp	x25, x26, [sp, #64]
   16e30:	ldp	x27, x28, [sp, #80]
   16e34:	add	sp, sp, #0x7a0
   16e38:	ret
   16e3c:	mov	x19, x24
   16e40:	b	16e18 <set_program_name@@Base+0xcd4>
   16e44:	sub	sp, sp, #0x7a0
   16e48:	cmp	x1, x2
   16e4c:	stp	x29, x30, [sp]
   16e50:	mov	x29, sp
   16e54:	stp	x19, x20, [sp, #16]
   16e58:	stp	x21, x22, [sp, #32]
   16e5c:	stp	x23, x24, [sp, #48]
   16e60:	stp	x25, x26, [sp, #64]
   16e64:	stp	x27, x28, [sp, #80]
   16e68:	b.hi	16e8c <set_program_name@@Base+0xd48>  // b.pmore
   16e6c:	mov	x19, x1
   16e70:	mov	x23, x2
   16e74:	ldr	x1, [x0, #40]
   16e78:	mov	x24, x3
   16e7c:	cbz	x1, 16e90 <set_program_name@@Base+0xd4c>
   16e80:	ldr	x2, [x1, #32]
   16e84:	cmp	x2, x23
   16e88:	b.cs	16e98 <set_program_name@@Base+0xd54>  // b.hs, b.nlast
   16e8c:	bl	aeb0 <abort@plt>
   16e90:	mov	x2, #0x0                   	// #0
   16e94:	b	16e84 <set_program_name@@Base+0xd40>
   16e98:	add	x26, sp, #0x60
   16e9c:	ldr	x25, [x0, #8]
   16ea0:	cbz	x19, 16ecc <set_program_name@@Base+0xd88>
   16ea4:	mov	x21, x26
   16ea8:	mov	x28, #0x0                   	// #0
   16eac:	cbz	x1, 16f40 <set_program_name@@Base+0xdfc>
   16eb0:	ldr	x0, [x1, #32]
   16eb4:	cmp	x0, x19
   16eb8:	b.ls	16f40 <set_program_name@@Base+0xdfc>  // b.plast
   16ebc:	stp	x1, xzr, [x21]
   16ec0:	add	x21, x21, #0x10
   16ec4:	ldr	x1, [x1]
   16ec8:	b	16eac <set_program_name@@Base+0xd68>
   16ecc:	mov	x21, x26
   16ed0:	mov	x27, #0x1                   	// #1
   16ed4:	cbz	x1, 16eec <set_program_name@@Base+0xda8>
   16ed8:	stp	x1, xzr, [x21]
   16edc:	add	x21, x21, #0x10
   16ee0:	ldr	x1, [x1]
   16ee4:	b	16ed4 <set_program_name@@Base+0xd90>
   16ee8:	mov	x21, x22
   16eec:	cmp	x21, x26
   16ef0:	b.eq	16fc8 <set_program_name@@Base+0xe84>  // b.none
   16ef4:	ldur	x0, [x21, #-8]
   16ef8:	sub	x22, x21, #0x10
   16efc:	cbnz	x0, 16ee8 <set_program_name@@Base+0xda4>
   16f00:	ldr	x20, [x22]
   16f04:	ldr	x1, [x20, #40]
   16f08:	cbz	x25, 16f34 <set_program_name@@Base+0xdf0>
   16f0c:	mov	x0, x24
   16f10:	blr	x25
   16f14:	and	w0, w0, #0xff
   16f18:	cbnz	w0, 16fcc <set_program_name@@Base+0xe88>
   16f1c:	add	x19, x19, #0x1
   16f20:	cmp	x23, x19
   16f24:	b.ls	16fc8 <set_program_name@@Base+0xe84>  // b.plast
   16f28:	str	x27, [x22, #8]
   16f2c:	ldr	x1, [x20, #8]
   16f30:	b	16ed4 <set_program_name@@Base+0xd90>
   16f34:	cmp	x1, x24
   16f38:	cset	w0, eq  // eq = none
   16f3c:	b	16f18 <set_program_name@@Base+0xdd4>
   16f40:	cmp	x21, x26
   16f44:	b.eq	16fc8 <set_program_name@@Base+0xe84>  // b.none
   16f48:	ldur	x0, [x21, #-8]
   16f4c:	sub	x27, x21, #0x10
   16f50:	cbz	x0, 16f60 <set_program_name@@Base+0xe1c>
   16f54:	add	x19, x19, x0
   16f58:	mov	x21, x27
   16f5c:	b	16f40 <set_program_name@@Base+0xdfc>
   16f60:	ldr	x20, [x27]
   16f64:	ldr	x0, [x20]
   16f68:	cbz	x0, 16fb4 <set_program_name@@Base+0xe70>
   16f6c:	ldr	x22, [x0, #32]
   16f70:	add	x22, x22, #0x1
   16f74:	cmp	x19, x22
   16f78:	b.cs	16f98 <set_program_name@@Base+0xe54>  // b.hs, b.nlast
   16f7c:	ldr	x1, [x20, #40]
   16f80:	cbz	x25, 16fbc <set_program_name@@Base+0xe78>
   16f84:	mov	x0, x24
   16f88:	blr	x25
   16f8c:	and	w0, w0, #0xff
   16f90:	cbnz	w0, 16fcc <set_program_name@@Base+0xe88>
   16f94:	mov	x19, x22
   16f98:	add	x28, x28, #0x1
   16f9c:	cmp	x23, x28
   16fa0:	b.ls	16fc8 <set_program_name@@Base+0xe84>  // b.plast
   16fa4:	sub	x19, x19, x22
   16fa8:	str	x22, [x27, #8]
   16fac:	ldr	x1, [x20, #8]
   16fb0:	b	16eac <set_program_name@@Base+0xd68>
   16fb4:	mov	x22, #0x1                   	// #1
   16fb8:	b	16f74 <set_program_name@@Base+0xe30>
   16fbc:	cmp	x1, x24
   16fc0:	cset	w0, eq  // eq = none
   16fc4:	b	16f90 <set_program_name@@Base+0xe4c>
   16fc8:	mov	x20, #0x0                   	// #0
   16fcc:	mov	x0, x20
   16fd0:	ldp	x29, x30, [sp]
   16fd4:	ldp	x19, x20, [sp, #16]
   16fd8:	ldp	x21, x22, [sp, #32]
   16fdc:	ldp	x23, x24, [sp, #48]
   16fe0:	ldp	x25, x26, [sp, #64]
   16fe4:	ldp	x27, x28, [sp, #80]
   16fe8:	add	sp, sp, #0x7a0
   16fec:	ret
   16ff0:	stp	x29, x30, [sp, #-16]!
   16ff4:	mov	x29, sp
   16ff8:	ldr	x0, [x0, #40]
   16ffc:	cbz	x0, 17010 <set_program_name@@Base+0xecc>
   17000:	mov	x4, x2
   17004:	ldr	x2, [x0, #32]
   17008:	cmp	x2, x1
   1700c:	b.hi	17014 <set_program_name@@Base+0xed0>  // b.pmore
   17010:	bl	aeb0 <abort@plt>
   17014:	bl	16318 <set_program_name@@Base+0x1d4>
   17018:	str	x4, [x0, #40]
   1701c:	ldp	x29, x30, [sp], #16
   17020:	ret
   17024:	stp	x29, x30, [sp, #-16]!
   17028:	mov	x29, sp
   1702c:	ldr	x0, [x0, #40]
   17030:	cbz	x0, 17040 <set_program_name@@Base+0xefc>
   17034:	ldr	x3, [x0, #32]
   17038:	cmp	x3, x1
   1703c:	b.hi	17044 <set_program_name@@Base+0xf00>  // b.pmore
   17040:	bl	aeb0 <abort@plt>
   17044:	bl	16318 <set_program_name@@Base+0x1d4>
   17048:	ldp	x29, x30, [sp], #16
   1704c:	ldr	x0, [x0, #40]
   17050:	ret
   17054:	sub	sp, sp, #0x780
   17058:	add	x1, sp, #0x40
   1705c:	stp	x29, x30, [sp]
   17060:	mov	x29, sp
   17064:	ldr	x2, [x0, #40]
   17068:	stp	x19, x20, [sp, #16]
   1706c:	mov	x19, x0
   17070:	str	x23, [sp, #48]
   17074:	mov	x23, x1
   17078:	stp	x21, x22, [sp, #32]
   1707c:	mov	x22, #0x1                   	// #1
   17080:	cbz	x2, 170bc <set_program_name@@Base+0xf78>
   17084:	stp	x2, xzr, [x1]
   17088:	add	x1, x1, #0x10
   1708c:	ldr	x2, [x2]
   17090:	b	17080 <set_program_name@@Base+0xf3c>
   17094:	ldp	x20, x0, [x1, #-16]
   17098:	sub	x21, x1, #0x10
   1709c:	cbz	x0, 170e0 <set_program_name@@Base+0xf9c>
   170a0:	ldr	x1, [x19, #24]
   170a4:	cbz	x1, 170b0 <set_program_name@@Base+0xf6c>
   170a8:	ldr	x0, [x20, #40]
   170ac:	blr	x1
   170b0:	mov	x0, x20
   170b4:	bl	b050 <free@plt>
   170b8:	mov	x1, x21
   170bc:	cmp	x1, x23
   170c0:	b.ne	17094 <set_program_name@@Base+0xf50>  // b.any
   170c4:	mov	x0, x19
   170c8:	ldp	x29, x30, [sp]
   170cc:	ldp	x19, x20, [sp, #16]
   170d0:	ldp	x21, x22, [sp, #32]
   170d4:	ldr	x23, [sp, #48]
   170d8:	add	sp, sp, #0x780
   170dc:	b	b050 <free@plt>
   170e0:	str	x22, [x21, #8]
   170e4:	ldr	x2, [x20, #8]
   170e8:	b	17080 <set_program_name@@Base+0xf3c>
   170ec:	stp	x29, x30, [sp, #-32]!
   170f0:	mov	x29, sp
   170f4:	stp	x19, x20, [sp, #16]
   170f8:	mov	x20, x0
   170fc:	mov	x19, x1
   17100:	ldp	x4, x0, [x1]
   17104:	ldr	x2, [x1, #16]
   17108:	cbnz	x4, 17190 <set_program_name@@Base+0x104c>
   1710c:	cbz	x0, 17118 <set_program_name@@Base+0xfd4>
   17110:	str	x2, [x0, #16]
   17114:	str	wzr, [x0, #24]
   17118:	cbnz	x2, 17148 <set_program_name@@Base+0x1004>
   1711c:	str	x0, [x20, #40]
   17120:	ldr	x1, [x20, #24]
   17124:	cbz	x1, 17130 <set_program_name@@Base+0xfec>
   17128:	ldr	x0, [x19, #40]
   1712c:	blr	x1
   17130:	mov	x0, x19
   17134:	bl	b050 <free@plt>
   17138:	mov	w0, #0x1                   	// #1
   1713c:	ldp	x19, x20, [sp, #16]
   17140:	ldp	x29, x30, [sp], #32
   17144:	ret
   17148:	ldr	x1, [x2]
   1714c:	cmp	x19, x1
   17150:	b.ne	17188 <set_program_name@@Base+0x1044>  // b.any
   17154:	str	x0, [x2]
   17158:	mov	x1, x2
   1715c:	ldr	x3, [x1, #32]
   17160:	sub	x3, x3, #0x1
   17164:	str	x3, [x1, #32]
   17168:	ldr	x1, [x1, #16]
   1716c:	cbnz	x1, 1715c <set_program_name@@Base+0x1018>
   17170:	cbnz	x0, 17120 <set_program_name@@Base+0xfdc>
   17174:	ldr	w0, [x19, #24]
   17178:	cbnz	w0, 17120 <set_program_name@@Base+0xfdc>
   1717c:	mov	x0, x20
   17180:	bl	16944 <set_program_name@@Base+0x800>
   17184:	b	17120 <set_program_name@@Base+0xfdc>
   17188:	str	x0, [x2, #8]
   1718c:	b	17158 <set_program_name@@Base+0x1014>
   17190:	cbnz	x0, 171d8 <set_program_name@@Base+0x1094>
   17194:	str	x2, [x4, #16]
   17198:	str	wzr, [x4, #24]
   1719c:	cbnz	x2, 171a8 <set_program_name@@Base+0x1064>
   171a0:	str	x4, [x20, #40]
   171a4:	b	17120 <set_program_name@@Base+0xfdc>
   171a8:	ldr	x0, [x2]
   171ac:	cmp	x1, x0
   171b0:	b.ne	171d0 <set_program_name@@Base+0x108c>  // b.any
   171b4:	str	x4, [x2]
   171b8:	ldr	x0, [x2, #32]
   171bc:	sub	x0, x0, #0x1
   171c0:	str	x0, [x2, #32]
   171c4:	ldr	x2, [x2, #16]
   171c8:	cbnz	x2, 171b8 <set_program_name@@Base+0x1074>
   171cc:	b	17120 <set_program_name@@Base+0xfdc>
   171d0:	str	x4, [x2, #8]
   171d4:	b	171b8 <set_program_name@@Base+0x1074>
   171d8:	mov	x0, x4
   171dc:	mov	x3, x0
   171e0:	ldr	x0, [x0, #8]
   171e4:	cbnz	x0, 171dc <set_program_name@@Base+0x1098>
   171e8:	ldr	x0, [x3, #16]
   171ec:	ldr	w7, [x3, #24]
   171f0:	cmp	x19, x0
   171f4:	ldr	x1, [x3]
   171f8:	b.eq	17208 <set_program_name@@Base+0x10c4>  // b.none
   171fc:	cbz	x1, 17204 <set_program_name@@Base+0x10c0>
   17200:	str	x0, [x1, #16]
   17204:	str	x1, [x0, #8]
   17208:	mov	x5, x0
   1720c:	cbnz	x5, 17264 <set_program_name@@Base+0x1120>
   17210:	cmp	x19, x0
   17214:	b.eq	17220 <set_program_name@@Base+0x10dc>  // b.none
   17218:	str	x4, [x3]
   1721c:	str	x3, [x4, #16]
   17220:	ldr	x4, [x19, #8]
   17224:	str	x4, [x3, #8]
   17228:	str	x3, [x4, #16]
   1722c:	ldr	w4, [x19, #24]
   17230:	str	w4, [x3, #24]
   17234:	ldr	x4, [x19, #32]
   17238:	str	x2, [x3, #16]
   1723c:	str	x4, [x3, #32]
   17240:	cbnz	x2, 17278 <set_program_name@@Base+0x1134>
   17244:	str	x3, [x20, #40]
   17248:	cbnz	w7, 17120 <set_program_name@@Base+0xfdc>
   1724c:	cbz	x1, 17294 <set_program_name@@Base+0x1150>
   17250:	ldr	w2, [x1, #24]
   17254:	cmp	w2, #0x1
   17258:	b.ne	17294 <set_program_name@@Base+0x1150>  // b.any
   1725c:	str	wzr, [x1, #24]
   17260:	b	17120 <set_program_name@@Base+0xfdc>
   17264:	ldr	x6, [x5, #32]
   17268:	sub	x6, x6, #0x1
   1726c:	str	x6, [x5, #32]
   17270:	ldr	x5, [x5, #16]
   17274:	b	1720c <set_program_name@@Base+0x10c8>
   17278:	ldr	x4, [x2]
   1727c:	cmp	x19, x4
   17280:	b.ne	1728c <set_program_name@@Base+0x1148>  // b.any
   17284:	str	x3, [x2]
   17288:	b	17248 <set_program_name@@Base+0x1104>
   1728c:	str	x3, [x2, #8]
   17290:	b	17248 <set_program_name@@Base+0x1104>
   17294:	cmp	x19, x0
   17298:	csel	x2, x0, x3, ne  // ne = any
   1729c:	b	1717c <set_program_name@@Base+0x1038>
   172a0:	stp	x29, x30, [sp, #-32]!
   172a4:	mov	x29, sp
   172a8:	str	x19, [sp, #16]
   172ac:	mov	x19, x0
   172b0:	bl	16834 <set_program_name@@Base+0x6f0>
   172b4:	cbz	x0, 172cc <set_program_name@@Base+0x1188>
   172b8:	mov	x1, x0
   172bc:	mov	x0, x19
   172c0:	ldr	x19, [sp, #16]
   172c4:	ldp	x29, x30, [sp], #32
   172c8:	b	170ec <set_program_name@@Base+0xfa8>
   172cc:	mov	w0, #0x0                   	// #0
   172d0:	ldr	x19, [sp, #16]
   172d4:	ldp	x29, x30, [sp], #32
   172d8:	ret
   172dc:	mov	x3, x1
   172e0:	ldr	x1, [x0, #40]
   172e4:	cbz	x1, 1732c <set_program_name@@Base+0x11e8>
   172e8:	stp	x29, x30, [sp, #-32]!
   172ec:	mov	x29, sp
   172f0:	ldr	x2, [x1, #32]
   172f4:	mov	x1, #0x0                   	// #0
   172f8:	str	x19, [sp, #16]
   172fc:	mov	x19, x0
   17300:	bl	16e44 <set_program_name@@Base+0xd00>
   17304:	mov	x1, x0
   17308:	cbz	x0, 1731c <set_program_name@@Base+0x11d8>
   1730c:	mov	x0, x19
   17310:	ldr	x19, [sp, #16]
   17314:	ldp	x29, x30, [sp], #32
   17318:	b	170ec <set_program_name@@Base+0xfa8>
   1731c:	mov	w0, #0x0                   	// #0
   17320:	ldr	x19, [sp, #16]
   17324:	ldp	x29, x30, [sp], #32
   17328:	ret
   1732c:	mov	w0, #0x0                   	// #0
   17330:	ret
   17334:	stp	x29, x30, [sp, #-16]!
   17338:	mov	x4, x0
   1733c:	mov	x29, sp
   17340:	ldr	x0, [x0, #40]
   17344:	cbz	x0, 17354 <set_program_name@@Base+0x1210>
   17348:	ldr	x3, [x0, #32]
   1734c:	cmp	x3, x1
   17350:	b.hi	17358 <set_program_name@@Base+0x1214>  // b.pmore
   17354:	bl	aeb0 <abort@plt>
   17358:	bl	16318 <set_program_name@@Base+0x1d4>
   1735c:	mov	x1, x0
   17360:	ldp	x29, x30, [sp], #16
   17364:	mov	x0, x4
   17368:	b	170ec <set_program_name@@Base+0xfa8>
   1736c:	stp	x29, x30, [sp, #-32]!
   17370:	mov	x29, sp
   17374:	str	x19, [sp, #16]
   17378:	mov	x19, x0
   1737c:	ldr	x0, [x0]
   17380:	cbz	x0, 17388 <set_program_name@@Base+0x1244>
   17384:	bl	1736c <set_program_name@@Base+0x1228>
   17388:	ldr	x0, [x19, #8]
   1738c:	cbz	x0, 17394 <set_program_name@@Base+0x1250>
   17390:	bl	1736c <set_program_name@@Base+0x1228>
   17394:	mov	x0, x19
   17398:	ldr	x19, [sp, #16]
   1739c:	ldp	x29, x30, [sp], #32
   173a0:	b	b050 <free@plt>
   173a4:	stp	x29, x30, [sp, #-48]!
   173a8:	mov	x29, sp
   173ac:	stp	x19, x20, [sp, #16]
   173b0:	mov	x20, x1
   173b4:	stp	x21, x22, [sp, #32]
   173b8:	mov	x21, x0
   173bc:	mov	x22, x2
   173c0:	mov	x0, #0x30                  	// #48
   173c4:	bl	aab0 <malloc@plt>
   173c8:	mov	x19, x0
   173cc:	cbz	x0, 17414 <set_program_name@@Base+0x12d0>
   173d0:	ldr	x1, [x20, #8]
   173d4:	mov	x0, #0x1                   	// #1
   173d8:	stp	xzr, xzr, [x19]
   173dc:	stp	x0, x22, [x19, #32]
   173e0:	cbnz	x1, 17428 <set_program_name@@Base+0x12e4>
   173e4:	str	x19, [x20, #8]
   173e8:	mov	x1, x20
   173ec:	str	x20, [x19, #16]
   173f0:	ldr	x0, [x1, #32]
   173f4:	add	x0, x0, #0x1
   173f8:	str	x0, [x1, #32]
   173fc:	ldr	x1, [x1, #16]
   17400:	cbnz	x1, 173f0 <set_program_name@@Base+0x12ac>
   17404:	mov	x2, x20
   17408:	mov	x1, x19
   1740c:	mov	x0, x21
   17410:	bl	16b50 <set_program_name@@Base+0xa0c>
   17414:	mov	x0, x19
   17418:	ldp	x19, x20, [sp, #16]
   1741c:	ldp	x21, x22, [sp, #32]
   17420:	ldp	x29, x30, [sp], #48
   17424:	ret
   17428:	mov	x20, x1
   1742c:	ldr	x1, [x1]
   17430:	cbnz	x1, 17428 <set_program_name@@Base+0x12e4>
   17434:	str	x19, [x20]
   17438:	b	173e8 <set_program_name@@Base+0x12a4>
   1743c:	stp	x29, x30, [sp, #-48]!
   17440:	mov	x29, sp
   17444:	stp	x19, x20, [sp, #16]
   17448:	mov	x20, x1
   1744c:	stp	x21, x22, [sp, #32]
   17450:	mov	x21, x0
   17454:	mov	x22, x2
   17458:	mov	x0, #0x30                  	// #48
   1745c:	bl	aab0 <malloc@plt>
   17460:	mov	x19, x0
   17464:	cbz	x0, 174ac <set_program_name@@Base+0x1368>
   17468:	ldr	x1, [x20]
   1746c:	mov	x0, #0x1                   	// #1
   17470:	stp	xzr, xzr, [x19]
   17474:	stp	x0, x22, [x19, #32]
   17478:	cbnz	x1, 174c0 <set_program_name@@Base+0x137c>
   1747c:	str	x19, [x20]
   17480:	mov	x1, x20
   17484:	str	x20, [x19, #16]
   17488:	ldr	x0, [x1, #32]
   1748c:	add	x0, x0, #0x1
   17490:	str	x0, [x1, #32]
   17494:	ldr	x1, [x1, #16]
   17498:	cbnz	x1, 17488 <set_program_name@@Base+0x1344>
   1749c:	mov	x2, x20
   174a0:	mov	x1, x19
   174a4:	mov	x0, x21
   174a8:	bl	16b50 <set_program_name@@Base+0xa0c>
   174ac:	mov	x0, x19
   174b0:	ldp	x19, x20, [sp, #16]
   174b4:	ldp	x21, x22, [sp, #32]
   174b8:	ldp	x29, x30, [sp], #48
   174bc:	ret
   174c0:	mov	x20, x1
   174c4:	ldr	x1, [x1, #8]
   174c8:	cbnz	x1, 174c0 <set_program_name@@Base+0x137c>
   174cc:	str	x19, [x20, #8]
   174d0:	b	17480 <set_program_name@@Base+0x133c>
   174d4:	stp	x29, x30, [sp, #-48]!
   174d8:	mov	x29, sp
   174dc:	stp	x19, x20, [sp, #16]
   174e0:	mov	x20, x0
   174e4:	mov	x0, #0x30                  	// #48
   174e8:	str	x21, [sp, #32]
   174ec:	mov	x21, x1
   174f0:	bl	aab0 <malloc@plt>
   174f4:	mov	x19, x0
   174f8:	cbz	x0, 1751c <set_program_name@@Base+0x13d8>
   174fc:	mov	x0, #0x1                   	// #1
   17500:	stp	x0, x21, [x19, #32]
   17504:	ldr	x0, [x20, #40]
   17508:	stp	xzr, xzr, [x19]
   1750c:	cbnz	x0, 17530 <set_program_name@@Base+0x13ec>
   17510:	str	xzr, [x19, #16]
   17514:	str	wzr, [x19, #24]
   17518:	str	x19, [x20, #40]
   1751c:	mov	x0, x19
   17520:	ldp	x19, x20, [sp, #16]
   17524:	ldr	x21, [sp, #32]
   17528:	ldp	x29, x30, [sp], #48
   1752c:	ret
   17530:	mov	x2, x0
   17534:	ldr	x0, [x0, #8]
   17538:	cbnz	x0, 17530 <set_program_name@@Base+0x13ec>
   1753c:	mov	x0, x2
   17540:	str	x19, [x2, #8]
   17544:	str	x2, [x19, #16]
   17548:	ldr	x1, [x0, #32]
   1754c:	add	x1, x1, #0x1
   17550:	str	x1, [x0, #32]
   17554:	ldr	x0, [x0, #16]
   17558:	cbnz	x0, 17548 <set_program_name@@Base+0x1404>
   1755c:	mov	x1, x19
   17560:	mov	x0, x20
   17564:	bl	16b50 <set_program_name@@Base+0xa0c>
   17568:	b	1751c <set_program_name@@Base+0x13d8>
   1756c:	stp	x29, x30, [sp, #-16]!
   17570:	mov	x4, x0
   17574:	mov	x5, x2
   17578:	mov	x29, sp
   1757c:	ldr	x0, [x0, #40]
   17580:	cbz	x0, 17594 <set_program_name@@Base+0x1450>
   17584:	ldr	x2, [x0, #32]
   17588:	cmp	x2, x1
   1758c:	b.cs	1759c <set_program_name@@Base+0x1458>  // b.hs, b.nlast
   17590:	bl	aeb0 <abort@plt>
   17594:	mov	x2, #0x0                   	// #0
   17598:	b	17588 <set_program_name@@Base+0x1444>
   1759c:	b.ne	175b0 <set_program_name@@Base+0x146c>  // b.any
   175a0:	ldp	x29, x30, [sp], #16
   175a4:	mov	x1, x5
   175a8:	mov	x0, x4
   175ac:	b	174d4 <set_program_name@@Base+0x1390>
   175b0:	bl	16318 <set_program_name@@Base+0x1d4>
   175b4:	mov	x1, x0
   175b8:	ldp	x29, x30, [sp], #16
   175bc:	mov	x2, x5
   175c0:	mov	x0, x4
   175c4:	b	1743c <set_program_name@@Base+0x12f8>
   175c8:	stp	x29, x30, [sp, #-48]!
   175cc:	mov	x29, sp
   175d0:	stp	x19, x20, [sp, #16]
   175d4:	mov	x20, x0
   175d8:	mov	x0, #0x30                  	// #48
   175dc:	str	x21, [sp, #32]
   175e0:	mov	x21, x1
   175e4:	bl	aab0 <malloc@plt>
   175e8:	mov	x19, x0
   175ec:	cbz	x0, 17610 <set_program_name@@Base+0x14cc>
   175f0:	mov	x0, #0x1                   	// #1
   175f4:	stp	x0, x21, [x19, #32]
   175f8:	ldr	x0, [x20, #40]
   175fc:	stp	xzr, xzr, [x19]
   17600:	cbnz	x0, 17624 <set_program_name@@Base+0x14e0>
   17604:	str	xzr, [x19, #16]
   17608:	str	wzr, [x19, #24]
   1760c:	str	x19, [x20, #40]
   17610:	mov	x0, x19
   17614:	ldp	x19, x20, [sp, #16]
   17618:	ldr	x21, [sp, #32]
   1761c:	ldp	x29, x30, [sp], #48
   17620:	ret
   17624:	mov	x2, x0
   17628:	ldr	x0, [x0]
   1762c:	cbnz	x0, 17624 <set_program_name@@Base+0x14e0>
   17630:	mov	x0, x2
   17634:	str	x19, [x2]
   17638:	str	x2, [x19, #16]
   1763c:	ldr	x1, [x0, #32]
   17640:	add	x1, x1, #0x1
   17644:	str	x1, [x0, #32]
   17648:	ldr	x0, [x0, #16]
   1764c:	cbnz	x0, 1763c <set_program_name@@Base+0x14f8>
   17650:	mov	x1, x19
   17654:	mov	x0, x20
   17658:	bl	16b50 <set_program_name@@Base+0xa0c>
   1765c:	b	17610 <set_program_name@@Base+0x14cc>
   17660:	stp	x29, x30, [sp, #-48]!
   17664:	mov	x29, sp
   17668:	stp	x19, x20, [sp, #16]
   1766c:	mov	x20, x2
   17670:	ldr	x19, [x0, #40]
   17674:	stp	x21, x22, [sp, #32]
   17678:	cbnz	x19, 176cc <set_program_name@@Base+0x1588>
   1767c:	ldp	x19, x20, [sp, #16]
   17680:	mov	x1, x2
   17684:	ldp	x21, x22, [sp, #32]
   17688:	ldp	x29, x30, [sp], #48
   1768c:	b	175c8 <set_program_name@@Base+0x1484>
   17690:	mov	x19, x0
   17694:	ldr	x0, [x19, #40]
   17698:	mov	x1, x20
   1769c:	blr	x22
   176a0:	cmp	w0, #0x0
   176a4:	b.ge	176d8 <set_program_name@@Base+0x1594>  // b.tcont
   176a8:	ldr	x0, [x19, #8]
   176ac:	cbnz	x0, 17690 <set_program_name@@Base+0x154c>
   176b0:	mov	x2, x20
   176b4:	mov	x1, x19
   176b8:	mov	x0, x21
   176bc:	ldp	x19, x20, [sp, #16]
   176c0:	ldp	x21, x22, [sp, #32]
   176c4:	ldp	x29, x30, [sp], #48
   176c8:	b	173a4 <set_program_name@@Base+0x1260>
   176cc:	mov	x21, x0
   176d0:	mov	x22, x1
   176d4:	b	17694 <set_program_name@@Base+0x1550>
   176d8:	b.eq	176e4 <set_program_name@@Base+0x15a0>  // b.none
   176dc:	ldr	x0, [x19]
   176e0:	cbnz	x0, 17690 <set_program_name@@Base+0x154c>
   176e4:	mov	x2, x20
   176e8:	mov	x1, x19
   176ec:	mov	x0, x21
   176f0:	ldp	x19, x20, [sp, #16]
   176f4:	ldp	x21, x22, [sp, #32]
   176f8:	ldp	x29, x30, [sp], #48
   176fc:	b	1743c <set_program_name@@Base+0x12f8>
   17700:	stp	x29, x30, [sp, #-64]!
   17704:	mov	x29, sp
   17708:	stp	x19, x20, [sp, #16]
   1770c:	stp	x21, x22, [sp, #32]
   17710:	mov	w22, w0
   17714:	mov	x21, x1
   17718:	mov	x0, #0x30                  	// #48
   1771c:	stp	x23, x24, [sp, #48]
   17720:	mov	x23, x2
   17724:	sub	x24, x1, #0x1
   17728:	bl	aab0 <malloc@plt>
   1772c:	mov	x19, x0
   17730:	cbz	x0, 177c0 <set_program_name@@Base+0x167c>
   17734:	lsr	x20, x24, #1
   17738:	cmp	x24, #0x1
   1773c:	b.ls	177a4 <set_program_name@@Base+0x1660>  // b.plast
   17740:	mov	x2, x23
   17744:	mov	x1, x20
   17748:	sub	w0, w22, #0x1
   1774c:	bl	17700 <set_program_name@@Base+0x15bc>
   17750:	str	x0, [x19]
   17754:	cbz	x0, 17794 <set_program_name@@Base+0x1650>
   17758:	str	x19, [x0, #16]
   1775c:	lsl	x20, x20, #3
   17760:	cmp	x21, #0x1
   17764:	ldr	x0, [x23, x20]
   17768:	str	x0, [x19, #40]
   1776c:	b.ls	177d8 <set_program_name@@Base+0x1694>  // b.plast
   17770:	add	x20, x20, #0x8
   17774:	lsr	x1, x21, #1
   17778:	add	x2, x23, x20
   1777c:	sub	w0, w22, #0x1
   17780:	bl	17700 <set_program_name@@Base+0x15bc>
   17784:	str	x0, [x19, #8]
   17788:	cbnz	x0, 177ac <set_program_name@@Base+0x1668>
   1778c:	ldr	x0, [x19]
   17790:	cbnz	x0, 177e0 <set_program_name@@Base+0x169c>
   17794:	mov	x0, x19
   17798:	mov	x19, #0x0                   	// #0
   1779c:	bl	b050 <free@plt>
   177a0:	b	177c0 <set_program_name@@Base+0x167c>
   177a4:	str	xzr, [x0]
   177a8:	b	1775c <set_program_name@@Base+0x1618>
   177ac:	str	x19, [x0, #16]
   177b0:	cmp	w22, #0x0
   177b4:	str	x21, [x19, #32]
   177b8:	cset	w0, eq  // eq = none
   177bc:	str	w0, [x19, #24]
   177c0:	mov	x0, x19
   177c4:	ldp	x19, x20, [sp, #16]
   177c8:	ldp	x21, x22, [sp, #32]
   177cc:	ldp	x23, x24, [sp, #48]
   177d0:	ldp	x29, x30, [sp], #64
   177d4:	ret
   177d8:	str	xzr, [x19, #8]
   177dc:	b	177b0 <set_program_name@@Base+0x166c>
   177e0:	bl	1736c <set_program_name@@Base+0x1228>
   177e4:	b	17794 <set_program_name@@Base+0x1650>
   177e8:	stp	x29, x30, [sp, #-80]!
   177ec:	mov	x29, sp
   177f0:	stp	x19, x20, [sp, #16]
   177f4:	mov	x20, x5
   177f8:	stp	x21, x22, [sp, #32]
   177fc:	mov	x22, x3
   17800:	mov	x21, x6
   17804:	stp	x23, x24, [sp, #48]
   17808:	mov	x24, x1
   1780c:	mov	x23, x2
   17810:	stp	x25, x26, [sp, #64]
   17814:	mov	x25, x0
   17818:	and	w26, w4, #0xff
   1781c:	mov	x0, #0x30                  	// #48
   17820:	bl	aab0 <malloc@plt>
   17824:	mov	x19, x0
   17828:	cbz	x0, 1786c <set_program_name@@Base+0x1728>
   1782c:	stp	x25, x24, [x0]
   17830:	stp	x23, x22, [x0, #16]
   17834:	strb	w26, [x0, #32]
   17838:	cbz	x20, 1789c <set_program_name@@Base+0x1758>
   1783c:	add	x1, x20, #0x1
   17840:	mov	w0, #0x0                   	// #0
   17844:	cmp	x1, #0x1
   17848:	b.hi	17888 <set_program_name@@Base+0x1744>  // b.pmore
   1784c:	mov	x2, x21
   17850:	mov	x1, x20
   17854:	bl	17700 <set_program_name@@Base+0x15bc>
   17858:	str	x0, [x19, #40]
   1785c:	cbnz	x0, 17894 <set_program_name@@Base+0x1750>
   17860:	mov	x0, x19
   17864:	mov	x19, #0x0                   	// #0
   17868:	bl	b050 <free@plt>
   1786c:	mov	x0, x19
   17870:	ldp	x19, x20, [sp, #16]
   17874:	ldp	x21, x22, [sp, #32]
   17878:	ldp	x23, x24, [sp, #48]
   1787c:	ldp	x25, x26, [sp, #64]
   17880:	ldp	x29, x30, [sp], #80
   17884:	ret
   17888:	add	w0, w0, #0x1
   1788c:	lsr	x1, x1, #1
   17890:	b	17844 <set_program_name@@Base+0x1700>
   17894:	str	xzr, [x0, #16]
   17898:	b	1786c <set_program_name@@Base+0x1728>
   1789c:	str	xzr, [x0, #40]
   178a0:	b	1786c <set_program_name@@Base+0x1728>
   178a4:	stp	x29, x30, [sp, #-64]!
   178a8:	mov	x29, sp
   178ac:	stp	x19, x20, [sp, #16]
   178b0:	mov	x20, x2
   178b4:	mov	x19, x3
   178b8:	stp	x21, x22, [sp, #32]
   178bc:	mov	x22, x0
   178c0:	mov	x21, x1
   178c4:	mov	x0, #0x30                  	// #48
   178c8:	str	x23, [sp, #48]
   178cc:	and	w23, w4, #0xff
   178d0:	bl	aab0 <malloc@plt>
   178d4:	cbz	x0, 178e8 <set_program_name@@Base+0x17a4>
   178d8:	stp	x22, x21, [x0]
   178dc:	stp	x20, x19, [x0, #16]
   178e0:	strb	w23, [x0, #32]
   178e4:	str	xzr, [x0, #40]
   178e8:	ldp	x19, x20, [sp, #16]
   178ec:	ldp	x21, x22, [sp, #32]
   178f0:	ldr	x23, [sp, #48]
   178f4:	ldp	x29, x30, [sp], #64
   178f8:	ret
   178fc:	mov	x0, x1
   17900:	ldr	x1, [x1, #8]
   17904:	cbz	x1, 17918 <set_program_name@@Base+0x17d4>
   17908:	mov	x0, x1
   1790c:	ldr	x1, [x1]
   17910:	cbnz	x1, 17908 <set_program_name@@Base+0x17c4>
   17914:	ret
   17918:	mov	x2, x0
   1791c:	ldr	x0, [x0, #16]
   17920:	cbz	x0, 17914 <set_program_name@@Base+0x17d0>
   17924:	ldr	x1, [x0, #8]
   17928:	cmp	x2, x1
   1792c:	b.eq	17918 <set_program_name@@Base+0x17d4>  // b.none
   17930:	b	17914 <set_program_name@@Base+0x17d0>
   17934:	mov	x0, x1
   17938:	ldr	x1, [x1]
   1793c:	cbz	x1, 17950 <set_program_name@@Base+0x180c>
   17940:	mov	x0, x1
   17944:	ldr	x1, [x1, #8]
   17948:	cbnz	x1, 17940 <set_program_name@@Base+0x17fc>
   1794c:	ret
   17950:	mov	x2, x0
   17954:	ldr	x0, [x0, #16]
   17958:	cbz	x0, 1794c <set_program_name@@Base+0x1808>
   1795c:	ldr	x1, [x0]
   17960:	cmp	x2, x1
   17964:	b.eq	17950 <set_program_name@@Base+0x180c>  // b.none
   17968:	b	1794c <set_program_name@@Base+0x1808>

000000000001796c <gl_rbtree_list_check_invariants@@Base>:
   1796c:	ldr	x0, [x0, #40]
   17970:	cbz	x0, 1797c <gl_rbtree_list_check_invariants@@Base+0x10>
   17974:	mov	x1, #0x0                   	// #0
   17978:	b	163d4 <set_program_name@@Base+0x290>
   1797c:	ret

0000000000017980 <renameatu@@Base>:
   17980:	stp	x29, x30, [sp, #-336]!
   17984:	mov	x29, sp
   17988:	stp	x19, x20, [sp, #16]
   1798c:	stp	x21, x22, [sp, #32]
   17990:	mov	x22, x1
   17994:	mov	x21, x3
   17998:	stp	x23, x24, [sp, #48]
   1799c:	mov	w24, w0
   179a0:	mov	w23, w2
   179a4:	str	x25, [sp, #64]
   179a8:	mov	w25, w4
   179ac:	bl	b060 <renameat2@plt>
   179b0:	mov	w19, w0
   179b4:	tbz	w0, #31, 17a24 <renameatu@@Base+0xa4>
   179b8:	bl	b540 <__errno_location@plt>
   179bc:	mov	x20, x0
   179c0:	ldr	w0, [x0]
   179c4:	cmp	w0, #0x26
   179c8:	ccmp	w0, #0x16, #0x4, ne  // ne = any
   179cc:	b.eq	179d8 <renameatu@@Base+0x58>  // b.none
   179d0:	cmp	w0, #0x5f
   179d4:	b.ne	17a24 <renameatu@@Base+0xa4>  // b.any
   179d8:	cbz	w25, 17a40 <renameatu@@Base+0xc0>
   179dc:	tst	w25, #0xfffffffe
   179e0:	b.eq	179f0 <renameatu@@Base+0x70>  // b.none
   179e4:	mov	w0, #0x5f                  	// #95
   179e8:	str	w0, [x20]
   179ec:	b	17a20 <renameatu@@Base+0xa0>
   179f0:	add	x2, sp, #0xd0
   179f4:	mov	x1, x21
   179f8:	mov	w0, w23
   179fc:	bl	ac60 <lstatat@plt>
   17a00:	cbz	w0, 17a10 <renameatu@@Base+0x90>
   17a04:	ldr	w0, [x20]
   17a08:	cmp	w0, #0x4b
   17a0c:	b.ne	17a18 <renameatu@@Base+0x98>  // b.any
   17a10:	mov	w0, #0x11                  	// #17
   17a14:	b	179e8 <renameatu@@Base+0x68>
   17a18:	cmp	w0, #0x2
   17a1c:	b.eq	17a80 <renameatu@@Base+0x100>  // b.none
   17a20:	mov	w19, #0xffffffff            	// #-1
   17a24:	mov	w0, w19
   17a28:	ldp	x19, x20, [sp, #16]
   17a2c:	ldp	x21, x22, [sp, #32]
   17a30:	ldp	x23, x24, [sp, #48]
   17a34:	ldr	x25, [sp, #64]
   17a38:	ldp	x29, x30, [sp], #336
   17a3c:	ret
   17a40:	mov	w25, #0x0                   	// #0
   17a44:	mov	x0, x22
   17a48:	bl	a780 <strlen@plt>
   17a4c:	mov	x19, x0
   17a50:	mov	x0, x21
   17a54:	bl	a780 <strlen@plt>
   17a58:	cmp	x19, #0x0
   17a5c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   17a60:	b.ne	17a88 <renameatu@@Base+0x108>  // b.any
   17a64:	mov	x3, x21
   17a68:	mov	w2, w23
   17a6c:	mov	x1, x22
   17a70:	mov	w0, w24
   17a74:	bl	b0a0 <renameat@plt>
   17a78:	mov	w19, w0
   17a7c:	b	17a24 <renameatu@@Base+0xa4>
   17a80:	mov	w25, #0x1                   	// #1
   17a84:	b	17a44 <renameatu@@Base+0xc4>
   17a88:	add	x19, x22, x19
   17a8c:	add	x0, x21, x0
   17a90:	ldurb	w2, [x19, #-1]
   17a94:	ldurb	w1, [x0, #-1]
   17a98:	mov	w0, #0x2f                  	// #47
   17a9c:	cmp	w2, #0x2f
   17aa0:	ccmp	w1, w0, #0x4, ne  // ne = any
   17aa4:	b.ne	17a64 <renameatu@@Base+0xe4>  // b.any
   17aa8:	add	x2, sp, #0x50
   17aac:	mov	x1, x22
   17ab0:	mov	w0, w24
   17ab4:	bl	ac60 <lstatat@plt>
   17ab8:	cbnz	w0, 17a20 <renameatu@@Base+0xa0>
   17abc:	cbz	w25, 17ad8 <renameatu@@Base+0x158>
   17ac0:	ldr	w0, [sp, #96]
   17ac4:	and	w0, w0, #0xf000
   17ac8:	cmp	w0, #0x4, lsl #12
   17acc:	b.eq	17a64 <renameatu@@Base+0xe4>  // b.none
   17ad0:	mov	w0, #0x2                   	// #2
   17ad4:	b	179e8 <renameatu@@Base+0x68>
   17ad8:	add	x2, sp, #0xd0
   17adc:	mov	x1, x21
   17ae0:	mov	w0, w23
   17ae4:	bl	ac60 <lstatat@plt>
   17ae8:	cbz	w0, 17b0c <renameatu@@Base+0x18c>
   17aec:	ldr	w0, [x20]
   17af0:	cmp	w0, #0x2
   17af4:	b.ne	17a20 <renameatu@@Base+0xa0>  // b.any
   17af8:	ldr	w0, [sp, #96]
   17afc:	and	w0, w0, #0xf000
   17b00:	cmp	w0, #0x4, lsl #12
   17b04:	b.ne	17a20 <renameatu@@Base+0xa0>  // b.any
   17b08:	b	17a64 <renameatu@@Base+0xe4>
   17b0c:	ldr	w0, [sp, #224]
   17b10:	and	w0, w0, #0xf000
   17b14:	cmp	w0, #0x4, lsl #12
   17b18:	b.eq	17b24 <renameatu@@Base+0x1a4>  // b.none
   17b1c:	mov	w0, #0x14                  	// #20
   17b20:	b	179e8 <renameatu@@Base+0x68>
   17b24:	ldr	w0, [sp, #96]
   17b28:	and	w0, w0, #0xf000
   17b2c:	cmp	w0, #0x4, lsl #12
   17b30:	b.eq	17a64 <renameatu@@Base+0xe4>  // b.none
   17b34:	mov	w0, #0x15                  	// #21
   17b38:	b	179e8 <renameatu@@Base+0x68>

0000000000017b3c <same_nameat@@Base>:
   17b3c:	stp	x29, x30, [sp, #-336]!
   17b40:	mov	x29, sp
   17b44:	stp	x19, x20, [sp, #16]
   17b48:	mov	x20, x1
   17b4c:	stp	x21, x22, [sp, #32]
   17b50:	mov	x21, x3
   17b54:	mov	w22, w2
   17b58:	stp	x23, x24, [sp, #48]
   17b5c:	mov	w23, w0
   17b60:	mov	x0, x1
   17b64:	str	x25, [sp, #64]
   17b68:	bl	acf0 <last_component@plt>
   17b6c:	mov	x19, x0
   17b70:	mov	x0, x21
   17b74:	bl	acf0 <last_component@plt>
   17b78:	mov	x24, x0
   17b7c:	mov	x0, x19
   17b80:	bl	a6d0 <base_len@plt>
   17b84:	mov	x25, x0
   17b88:	mov	x0, x24
   17b8c:	bl	a6d0 <base_len@plt>
   17b90:	cmp	x25, x0
   17b94:	b.ne	17c80 <same_nameat@@Base+0x144>  // b.any
   17b98:	mov	x0, x19
   17b9c:	mov	x2, x25
   17ba0:	mov	x1, x24
   17ba4:	bl	af40 <memcmp@plt>
   17ba8:	mov	w19, w0
   17bac:	cbnz	w0, 17c80 <same_nameat@@Base+0x144>
   17bb0:	mov	x0, x20
   17bb4:	bl	ab70 <dir_name@plt>
   17bb8:	add	x2, sp, #0x50
   17bbc:	mov	x20, x0
   17bc0:	mov	x1, x0
   17bc4:	mov	w3, #0x100                 	// #256
   17bc8:	mov	w0, w23
   17bcc:	bl	269d8 <vasnprintf@@Base+0xb48>
   17bd0:	cbz	w0, 17bf0 <same_nameat@@Base+0xb4>
   17bd4:	bl	b540 <__errno_location@plt>
   17bd8:	ldr	w1, [x0]
   17bdc:	adrp	x2, 27000 <vasnprintf@@Base+0x1170>
   17be0:	mov	x3, x20
   17be4:	add	x2, x2, #0x30f
   17be8:	mov	w0, #0x1                   	// #1
   17bec:	bl	a7c0 <error@plt>
   17bf0:	mov	x0, x20
   17bf4:	bl	b050 <free@plt>
   17bf8:	mov	x0, x21
   17bfc:	bl	ab70 <dir_name@plt>
   17c00:	add	x2, sp, #0xd0
   17c04:	mov	x20, x0
   17c08:	mov	x1, x0
   17c0c:	mov	w3, #0x100                 	// #256
   17c10:	mov	w0, w22
   17c14:	bl	269d8 <vasnprintf@@Base+0xb48>
   17c18:	cbz	w0, 17c38 <same_nameat@@Base+0xfc>
   17c1c:	bl	b540 <__errno_location@plt>
   17c20:	ldr	w1, [x0]
   17c24:	adrp	x2, 27000 <vasnprintf@@Base+0x1170>
   17c28:	mov	x3, x20
   17c2c:	add	x2, x2, #0x30f
   17c30:	mov	w0, #0x1                   	// #1
   17c34:	bl	a7c0 <error@plt>
   17c38:	ldr	x1, [sp, #88]
   17c3c:	ldr	x0, [sp, #216]
   17c40:	cmp	x1, x0
   17c44:	b.ne	17c58 <same_nameat@@Base+0x11c>  // b.any
   17c48:	ldr	x1, [sp, #80]
   17c4c:	ldr	x0, [sp, #208]
   17c50:	cmp	x1, x0
   17c54:	cset	w19, eq  // eq = none
   17c58:	and	w19, w19, #0x1
   17c5c:	mov	x0, x20
   17c60:	bl	b050 <free@plt>
   17c64:	mov	w0, w19
   17c68:	ldp	x19, x20, [sp, #16]
   17c6c:	ldp	x21, x22, [sp, #32]
   17c70:	ldp	x23, x24, [sp, #48]
   17c74:	ldr	x25, [sp, #64]
   17c78:	ldp	x29, x30, [sp], #336
   17c7c:	ret
   17c80:	mov	w19, #0x0                   	// #0
   17c84:	b	17c64 <same_nameat@@Base+0x128>

0000000000017c88 <same_name@@Base>:
   17c88:	mov	x3, x1
   17c8c:	mov	w2, #0xffffff9c            	// #-100
   17c90:	mov	x1, x0
   17c94:	mov	w0, w2
   17c98:	b	a750 <same_nameat@plt>

0000000000017c9c <save_cwd@@Base>:
   17c9c:	stp	x29, x30, [sp, #-32]!
   17ca0:	mov	w1, #0x80000               	// #524288
   17ca4:	mov	x29, sp
   17ca8:	str	x19, [sp, #16]
   17cac:	mov	x19, x0
   17cb0:	str	xzr, [x0, #8]
   17cb4:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   17cb8:	add	x0, x0, #0x239
   17cbc:	bl	ab40 <open@plt>
   17cc0:	str	w0, [x19]
   17cc4:	mov	w1, #0x80000               	// #524288
   17cc8:	bl	b4d0 <fd_safer_flag@plt>
   17ccc:	str	w0, [x19]
   17cd0:	tbz	w0, #31, 17cf8 <save_cwd@@Base+0x5c>
   17cd4:	mov	x1, #0x0                   	// #0
   17cd8:	mov	x0, #0x0                   	// #0
   17cdc:	bl	a740 <getcwd@plt>
   17ce0:	cmp	x0, #0x0
   17ce4:	str	x0, [x19, #8]
   17ce8:	csetm	w0, eq  // eq = none
   17cec:	ldr	x19, [sp, #16]
   17cf0:	ldp	x29, x30, [sp], #32
   17cf4:	ret
   17cf8:	mov	w0, #0x0                   	// #0
   17cfc:	b	17cec <save_cwd@@Base+0x50>

0000000000017d00 <restore_cwd@@Base>:
   17d00:	mov	x1, x0
   17d04:	ldr	w0, [x0]
   17d08:	tbnz	w0, #31, 17d10 <restore_cwd@@Base+0x10>
   17d0c:	b	a7e0 <fchdir@plt>
   17d10:	ldr	x0, [x1, #8]
   17d14:	b	a8a0 <chdir_long@plt>

0000000000017d18 <free_cwd@@Base>:
   17d18:	stp	x29, x30, [sp, #-32]!
   17d1c:	mov	x29, sp
   17d20:	str	x19, [sp, #16]
   17d24:	mov	x19, x0
   17d28:	ldr	w0, [x0]
   17d2c:	tbnz	w0, #31, 17d34 <free_cwd@@Base+0x1c>
   17d30:	bl	add0 <close@plt>
   17d34:	ldr	x0, [x19, #8]
   17d38:	ldr	x19, [sp, #16]
   17d3c:	ldp	x29, x30, [sp], #32
   17d40:	b	b050 <free@plt>

0000000000017d44 <gl_scratch_buffer_grow@@Base>:
   17d44:	stp	x29, x30, [sp, #-48]!
   17d48:	mov	x29, sp
   17d4c:	stp	x19, x20, [sp, #16]
   17d50:	mov	x19, x0
   17d54:	ldr	x20, [x0, #8]
   17d58:	str	x21, [sp, #32]
   17d5c:	mov	x21, x0
   17d60:	lsl	x20, x20, #1
   17d64:	ldr	x0, [x21], #16
   17d68:	cmp	x0, x21
   17d6c:	b.eq	17d74 <gl_scratch_buffer_grow@@Base+0x30>  // b.none
   17d70:	bl	b050 <free@plt>
   17d74:	ldr	x0, [x19, #8]
   17d78:	cmp	x0, x20
   17d7c:	b.hi	17da8 <gl_scratch_buffer_grow@@Base+0x64>  // b.pmore
   17d80:	mov	x0, x20
   17d84:	bl	aab0 <malloc@plt>
   17d88:	cbnz	x0, 17db8 <gl_scratch_buffer_grow@@Base+0x74>
   17d8c:	mov	x0, #0x400                 	// #1024
   17d90:	stp	x21, x0, [x19]
   17d94:	mov	w0, #0x0                   	// #0
   17d98:	ldp	x19, x20, [sp, #16]
   17d9c:	ldr	x21, [sp, #32]
   17da0:	ldp	x29, x30, [sp], #48
   17da4:	ret
   17da8:	bl	b540 <__errno_location@plt>
   17dac:	mov	w1, #0xc                   	// #12
   17db0:	str	w1, [x0]
   17db4:	b	17d8c <gl_scratch_buffer_grow@@Base+0x48>
   17db8:	stp	x0, x20, [x19]
   17dbc:	mov	w0, #0x1                   	// #1
   17dc0:	b	17d98 <gl_scratch_buffer_grow@@Base+0x54>

0000000000017dc4 <gl_scratch_buffer_grow_preserve@@Base>:
   17dc4:	stp	x29, x30, [sp, #-64]!
   17dc8:	mov	x29, sp
   17dcc:	stp	x21, x22, [sp, #32]
   17dd0:	mov	x22, x0
   17dd4:	stp	x23, x24, [sp, #48]
   17dd8:	ldr	x24, [x0, #8]
   17ddc:	stp	x19, x20, [sp, #16]
   17de0:	mov	x19, x0
   17de4:	ldr	x23, [x22], #16
   17de8:	lsl	x21, x24, #1
   17dec:	cmp	x23, x22
   17df0:	b.ne	17e2c <gl_scratch_buffer_grow_preserve@@Base+0x68>  // b.any
   17df4:	mov	x0, x21
   17df8:	bl	aab0 <malloc@plt>
   17dfc:	mov	x20, x0
   17e00:	cbz	x0, 17e58 <gl_scratch_buffer_grow_preserve@@Base+0x94>
   17e04:	mov	x2, x24
   17e08:	mov	x1, x23
   17e0c:	bl	a6f0 <memcpy@plt>
   17e10:	mov	w0, #0x1                   	// #1
   17e14:	stp	x20, x21, [x19]
   17e18:	ldp	x19, x20, [sp, #16]
   17e1c:	ldp	x21, x22, [sp, #32]
   17e20:	ldp	x23, x24, [sp, #48]
   17e24:	ldp	x29, x30, [sp], #64
   17e28:	ret
   17e2c:	cmp	x24, x21
   17e30:	b.hi	17e60 <gl_scratch_buffer_grow_preserve@@Base+0x9c>  // b.pmore
   17e34:	mov	x1, x21
   17e38:	mov	x0, x23
   17e3c:	bl	ad60 <realloc@plt>
   17e40:	mov	x20, x0
   17e44:	cbnz	x0, 17e10 <gl_scratch_buffer_grow_preserve@@Base+0x4c>
   17e48:	ldr	x0, [x19]
   17e4c:	bl	b050 <free@plt>
   17e50:	mov	x0, #0x400                 	// #1024
   17e54:	stp	x22, x0, [x19]
   17e58:	mov	w0, #0x0                   	// #0
   17e5c:	b	17e18 <gl_scratch_buffer_grow_preserve@@Base+0x54>
   17e60:	bl	b540 <__errno_location@plt>
   17e64:	mov	w1, #0xc                   	// #12
   17e68:	str	w1, [x0]
   17e6c:	b	17e48 <gl_scratch_buffer_grow_preserve@@Base+0x84>

0000000000017e70 <gl_scratch_buffer_set_array_size@@Base>:
   17e70:	stp	x29, x30, [sp, #-48]!
   17e74:	mov	x29, sp
   17e78:	stp	x19, x20, [sp, #16]
   17e7c:	mov	x19, x0
   17e80:	orr	x0, x1, x2
   17e84:	str	x21, [sp, #32]
   17e88:	mul	x20, x1, x2
   17e8c:	cmp	xzr, x0, lsr #32
   17e90:	b.eq	17ee0 <gl_scratch_buffer_set_array_size@@Base+0x70>  // b.none
   17e94:	cbz	x1, 17f1c <gl_scratch_buffer_set_array_size@@Base+0xac>
   17e98:	udiv	x1, x20, x1
   17e9c:	cmp	x1, x2
   17ea0:	b.eq	17ee0 <gl_scratch_buffer_set_array_size@@Base+0x70>  // b.none
   17ea4:	mov	x20, x19
   17ea8:	ldr	x0, [x20], #16
   17eac:	cmp	x0, x20
   17eb0:	b.eq	17eb8 <gl_scratch_buffer_set_array_size@@Base+0x48>  // b.none
   17eb4:	bl	b050 <free@plt>
   17eb8:	mov	x0, #0x400                 	// #1024
   17ebc:	stp	x20, x0, [x19]
   17ec0:	bl	b540 <__errno_location@plt>
   17ec4:	mov	w1, #0xc                   	// #12
   17ec8:	str	w1, [x0]
   17ecc:	mov	w0, #0x0                   	// #0
   17ed0:	ldp	x19, x20, [sp, #16]
   17ed4:	ldr	x21, [sp, #32]
   17ed8:	ldp	x29, x30, [sp], #48
   17edc:	ret
   17ee0:	ldr	x0, [x19, #8]
   17ee4:	cmp	x0, x20
   17ee8:	b.cs	17f1c <gl_scratch_buffer_set_array_size@@Base+0xac>  // b.hs, b.nlast
   17eec:	mov	x21, x19
   17ef0:	ldr	x0, [x21], #16
   17ef4:	cmp	x0, x21
   17ef8:	b.eq	17f00 <gl_scratch_buffer_set_array_size@@Base+0x90>  // b.none
   17efc:	bl	b050 <free@plt>
   17f00:	mov	x0, x20
   17f04:	bl	aab0 <malloc@plt>
   17f08:	cbnz	x0, 17f18 <gl_scratch_buffer_set_array_size@@Base+0xa8>
   17f0c:	mov	x0, #0x400                 	// #1024
   17f10:	stp	x21, x0, [x19]
   17f14:	b	17ecc <gl_scratch_buffer_set_array_size@@Base+0x5c>
   17f18:	stp	x0, x20, [x19]
   17f1c:	mov	w0, #0x1                   	// #1
   17f20:	b	17ed0 <gl_scratch_buffer_set_array_size@@Base+0x60>

0000000000017f24 <gl_set_nx_create_empty@@Base>:
   17f24:	ldr	x4, [x0]
   17f28:	mov	x16, x4
   17f2c:	br	x16

0000000000017f30 <gl_set_size@@Base>:
   17f30:	ldr	x1, [x0]
   17f34:	ldr	x1, [x1, #8]
   17f38:	mov	x16, x1
   17f3c:	br	x16

0000000000017f40 <gl_set_search@@Base>:
   17f40:	ldr	x2, [x0]
   17f44:	ldr	x2, [x2, #16]
   17f48:	mov	x16, x2
   17f4c:	br	x16

0000000000017f50 <gl_set_nx_add@@Base>:
   17f50:	ldr	x2, [x0]
   17f54:	ldr	x2, [x2, #24]
   17f58:	mov	x16, x2
   17f5c:	br	x16

0000000000017f60 <gl_set_remove@@Base>:
   17f60:	ldr	x2, [x0]
   17f64:	ldr	x2, [x2, #32]
   17f68:	mov	x16, x2
   17f6c:	br	x16

0000000000017f70 <gl_set_free@@Base>:
   17f70:	ldr	x1, [x0]
   17f74:	ldr	x1, [x1, #40]
   17f78:	mov	x16, x1
   17f7c:	br	x16

0000000000017f80 <gl_set_iterator@@Base>:
   17f80:	stp	x29, x30, [sp, #-16]!
   17f84:	mov	x29, sp
   17f88:	ldr	x1, [x0]
   17f8c:	ldr	x1, [x1, #48]
   17f90:	blr	x1
   17f94:	ldp	x29, x30, [sp], #16
   17f98:	ret

0000000000017f9c <gl_set_iterator_next@@Base>:
   17f9c:	ldr	x2, [x0]
   17fa0:	ldr	x2, [x2, #56]
   17fa4:	mov	x16, x2
   17fa8:	br	x16

0000000000017fac <gl_set_iterator_free@@Base>:
   17fac:	ldr	x1, [x0]
   17fb0:	ldr	x1, [x1, #64]
   17fb4:	mov	x16, x1
   17fb8:	br	x16

0000000000017fbc <get_handler@@Base>:
   17fbc:	ldr	x0, [x0]
   17fc0:	ret

0000000000017fc4 <gl_sockets_startup@@Base>:
   17fc4:	mov	w0, #0x0                   	// #0
   17fc8:	ret

0000000000017fcc <gl_sockets_cleanup@@Base>:
   17fcc:	mov	w0, #0x0                   	// #0
   17fd0:	ret

0000000000017fd4 <get_stat_atime_ns@@Base>:
   17fd4:	ldr	x0, [x0, #80]
   17fd8:	ret

0000000000017fdc <get_stat_ctime_ns@@Base>:
   17fdc:	ldr	x0, [x0, #112]
   17fe0:	ret

0000000000017fe4 <get_stat_mtime_ns@@Base>:
   17fe4:	ldr	x0, [x0, #96]
   17fe8:	ret

0000000000017fec <get_stat_birthtime_ns@@Base>:
   17fec:	mov	x0, #0x0                   	// #0
   17ff0:	ret

0000000000017ff4 <get_stat_atime@@Base>:
   17ff4:	ldp	x0, x1, [x0, #72]
   17ff8:	ret

0000000000017ffc <get_stat_ctime@@Base>:
   17ffc:	ldp	x0, x1, [x0, #104]
   18000:	ret

0000000000018004 <get_stat_mtime@@Base>:
   18004:	ldp	x0, x1, [x0, #88]
   18008:	ret

000000000001800c <get_stat_birthtime@@Base>:
   1800c:	mov	x0, #0xffffffffffffffff    	// #-1
   18010:	mov	x1, x0
   18014:	ret

0000000000018018 <stat_time_normalize@@Base>:
   18018:	ret

000000000001801c <statat@@Base>:
   1801c:	mov	w3, #0x0                   	// #0
   18020:	b	269d8 <vasnprintf@@Base+0xb48>

0000000000018024 <lstatat@@Base>:
   18024:	mov	w3, #0x100                 	// #256
   18028:	b	269d8 <vasnprintf@@Base+0xb48>

000000000001802c <stdopen@@Base>:
   1802c:	stp	x29, x30, [sp, #-48]!
   18030:	mov	x29, sp
   18034:	stp	x19, x20, [sp, #16]
   18038:	adrp	x20, 28000 <vasnprintf@@Base+0x2170>
   1803c:	add	x20, x20, #0xe37
   18040:	stp	x21, x22, [sp, #32]
   18044:	adrp	x21, 28000 <vasnprintf@@Base+0x2170>
   18048:	add	x21, x21, #0xe2d
   1804c:	mov	w19, #0x0                   	// #0
   18050:	mov	w0, w19
   18054:	mov	w1, #0x1                   	// #1
   18058:	bl	b200 <rpl_fcntl@plt>
   1805c:	tbz	w0, #31, 180b8 <stdopen@@Base+0x8c>
   18060:	cmp	w19, #0x0
   18064:	cset	w22, eq  // eq = none
   18068:	cbz	w19, 18094 <stdopen@@Base+0x68>
   1806c:	mov	w1, w22
   18070:	mov	x0, x21
   18074:	bl	ab40 <open@plt>
   18078:	tbz	w0, #31, 180a4 <stdopen@@Base+0x78>
   1807c:	bl	b540 <__errno_location@plt>
   18080:	ldr	w0, [x0]
   18084:	ldp	x19, x20, [sp, #16]
   18088:	ldp	x21, x22, [sp, #32]
   1808c:	ldp	x29, x30, [sp], #48
   18090:	ret
   18094:	mov	x0, x20
   18098:	mov	w1, #0x1                   	// #1
   1809c:	bl	ab40 <open@plt>
   180a0:	tbnz	w0, #31, 1806c <stdopen@@Base+0x40>
   180a4:	cmp	w0, #0x2
   180a8:	b.le	180b8 <stdopen@@Base+0x8c>
   180ac:	bl	add0 <close@plt>
   180b0:	mov	w0, #0x0                   	// #0
   180b4:	b	18084 <stdopen@@Base+0x58>
   180b8:	add	w19, w19, #0x1
   180bc:	cmp	w19, #0x3
   180c0:	b.ne	18050 <stdopen@@Base+0x24>  // b.any
   180c4:	b	180b0 <stdopen@@Base+0x84>

00000000000180c8 <strnlen1@@Base>:
   180c8:	stp	x29, x30, [sp, #-32]!
   180cc:	mov	x2, x1
   180d0:	mov	x29, sp
   180d4:	stp	x19, x20, [sp, #16]
   180d8:	mov	x19, x1
   180dc:	mov	x20, x0
   180e0:	mov	w1, #0x0                   	// #0
   180e4:	bl	b2b0 <memchr@plt>
   180e8:	cbz	x0, 180f4 <strnlen1@@Base+0x2c>
   180ec:	sub	x0, x0, x20
   180f0:	add	x19, x0, #0x1
   180f4:	mov	x0, x19
   180f8:	ldp	x19, x20, [sp, #16]
   180fc:	ldp	x29, x30, [sp], #32
   18100:	ret
   18104:	stp	x29, x30, [sp, #-160]!
   18108:	add	x1, sp, #0x20
   1810c:	mov	x29, sp
   18110:	str	x19, [sp, #16]
   18114:	bl	269c8 <vasnprintf@@Base+0xb38>
   18118:	mov	w19, w0
   1811c:	bl	b540 <__errno_location@plt>
   18120:	cbz	w19, 18130 <strnlen1@@Base+0x68>
   18124:	ldr	w1, [x0]
   18128:	cmp	w1, #0x4b
   1812c:	b.ne	18138 <strnlen1@@Base+0x70>  // b.any
   18130:	mov	w1, #0x11                  	// #17
   18134:	str	w1, [x0]
   18138:	ldr	w0, [x0]
   1813c:	ldr	x19, [sp, #16]
   18140:	cmp	w0, #0x2
   18144:	csetm	w0, ne  // ne = any
   18148:	ldp	x29, x30, [sp], #160
   1814c:	ret
   18150:	mov	w1, #0x1c0                 	// #448
   18154:	b	b600 <mkdir@plt>
   18158:	ldr	w1, [x1]
   1815c:	mov	w2, #0xffffff3c            	// #-196
   18160:	mov	w3, #0xc2                  	// #194
   18164:	and	w1, w1, w2
   18168:	mov	w2, #0x180                 	// #384
   1816c:	orr	w1, w1, w3
   18170:	b	ab40 <open@plt>

0000000000018174 <try_tempname@@Base>:
   18174:	stp	x29, x30, [sp, #-112]!
   18178:	mov	x29, sp
   1817c:	stp	x19, x20, [sp, #16]
   18180:	mov	w19, w1
   18184:	stp	x21, x22, [sp, #32]
   18188:	stp	x23, x24, [sp, #48]
   1818c:	mov	x23, x0
   18190:	mov	x24, x2
   18194:	stp	x25, x26, [sp, #64]
   18198:	mov	x25, x3
   1819c:	stp	x27, x28, [sp, #80]
   181a0:	bl	b540 <__errno_location@plt>
   181a4:	ldr	w26, [x0]
   181a8:	mov	x22, x0
   181ac:	mov	x0, x23
   181b0:	bl	a780 <strlen@plt>
   181b4:	add	w1, w19, #0x5
   181b8:	cmp	w1, w0
   181bc:	b.ge	181e4 <try_tempname@@Base+0x70>  // b.tcont
   181c0:	sub	w0, w0, #0x6
   181c4:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   181c8:	sub	w19, w0, w19
   181cc:	add	x1, x1, #0x20b
   181d0:	mov	x2, #0x6                   	// #6
   181d4:	add	x19, x23, w19, sxtw
   181d8:	mov	x0, x19
   181dc:	bl	af40 <memcmp@plt>
   181e0:	cbz	w0, 181f4 <try_tempname@@Base+0x80>
   181e4:	mov	w0, #0x16                  	// #22
   181e8:	str	w0, [x22]
   181ec:	mov	w0, #0xffffffff            	// #-1
   181f0:	b	182b4 <try_tempname@@Base+0x140>
   181f4:	mov	x1, #0x0                   	// #0
   181f8:	add	x0, sp, #0x60
   181fc:	bl	ac20 <gettimeofday@plt>
   18200:	adrp	x27, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
   18204:	ldp	x20, x0, [sp, #96]
   18208:	mov	w28, #0xa2f8                	// #41720
   1820c:	adrp	x21, 28000 <vasnprintf@@Base+0x2170>
   18210:	add	x21, x21, #0xe6f
   18214:	movk	w28, #0x3, lsl #16
   18218:	eor	x20, x20, x0, lsl #16
   1821c:	bl	aa70 <getpid@plt>
   18220:	ldr	x1, [x27, #1416]
   18224:	sxtw	x0, w0
   18228:	eor	x0, x0, x20
   1822c:	mov	x20, #0x3e                  	// #62
   18230:	add	x0, x1, x0
   18234:	str	x0, [x27, #1416]
   18238:	ldr	x0, [x27, #1416]
   1823c:	udiv	x1, x0, x20
   18240:	msub	x0, x1, x20, x0
   18244:	ldrb	w0, [x21, x0]
   18248:	strb	w0, [x19]
   1824c:	udiv	x0, x1, x20
   18250:	msub	x1, x0, x20, x1
   18254:	ldrb	w1, [x21, x1]
   18258:	strb	w1, [x19, #1]
   1825c:	udiv	x1, x0, x20
   18260:	msub	x0, x1, x20, x0
   18264:	ldrb	w0, [x21, x0]
   18268:	strb	w0, [x19, #2]
   1826c:	udiv	x0, x1, x20
   18270:	msub	x1, x0, x20, x1
   18274:	ldrb	w1, [x21, x1]
   18278:	strb	w1, [x19, #3]
   1827c:	udiv	x1, x0, x20
   18280:	msub	x0, x1, x20, x0
   18284:	ldrb	w0, [x21, x0]
   18288:	strb	w0, [x19, #4]
   1828c:	udiv	x0, x1, x20
   18290:	msub	x0, x0, x20, x1
   18294:	mov	x1, x24
   18298:	ldrb	w0, [x21, x0]
   1829c:	strb	w0, [x19, #5]
   182a0:	mov	x0, x23
   182a4:	blr	x25
   182a8:	mov	x2, #0x1e61                	// #7777
   182ac:	tbnz	w0, #31, 182d0 <try_tempname@@Base+0x15c>
   182b0:	str	w26, [x22]
   182b4:	ldp	x19, x20, [sp, #16]
   182b8:	ldp	x21, x22, [sp, #32]
   182bc:	ldp	x23, x24, [sp, #48]
   182c0:	ldp	x25, x26, [sp, #64]
   182c4:	ldp	x27, x28, [sp, #80]
   182c8:	ldp	x29, x30, [sp], #112
   182cc:	ret
   182d0:	ldr	w0, [x22]
   182d4:	cmp	w0, #0x11
   182d8:	b.ne	181ec <try_tempname@@Base+0x78>  // b.any
   182dc:	ldr	x0, [x27, #1416]
   182e0:	subs	w28, w28, #0x1
   182e4:	add	x0, x0, x2
   182e8:	str	x0, [x27, #1416]
   182ec:	b.ne	18238 <try_tempname@@Base+0xc4>  // b.any
   182f0:	b	181ec <try_tempname@@Base+0x78>

00000000000182f4 <gen_tempname@@Base>:
   182f4:	stp	x29, x30, [sp, #-32]!
   182f8:	cmp	w3, #0x1
   182fc:	mov	x29, sp
   18300:	str	w2, [sp, #28]
   18304:	b.eq	18338 <gen_tempname@@Base+0x44>  // b.none
   18308:	cmp	w3, #0x2
   1830c:	b.eq	18350 <gen_tempname@@Base+0x5c>  // b.none
   18310:	cbz	w3, 1835c <gen_tempname@@Base+0x68>
   18314:	adrp	x3, 28000 <vasnprintf@@Base+0x2170>
   18318:	add	x3, x3, #0xe6f
   1831c:	adrp	x1, 28000 <vasnprintf@@Base+0x2170>
   18320:	adrp	x0, 28000 <vasnprintf@@Base+0x2170>
   18324:	add	x3, x3, #0x3f
   18328:	add	x1, x1, #0xe41
   1832c:	add	x0, x0, #0xe4c
   18330:	mov	w2, #0x13f                 	// #319
   18334:	bl	b530 <__assert_fail@plt>
   18338:	adrp	x3, 18000 <get_stat_ctime@@Base+0x4>
   1833c:	add	x3, x3, #0x150
   18340:	add	x2, sp, #0x1c
   18344:	bl	ad90 <try_tempname@plt>
   18348:	ldp	x29, x30, [sp], #32
   1834c:	ret
   18350:	adrp	x3, 18000 <get_stat_ctime@@Base+0x4>
   18354:	add	x3, x3, #0x104
   18358:	b	18340 <gen_tempname@@Base+0x4c>
   1835c:	adrp	x3, 18000 <get_stat_ctime@@Base+0x4>
   18360:	add	x3, x3, #0x158
   18364:	b	18340 <gen_tempname@@Base+0x4c>

0000000000018368 <make_timespec@@Base>:
   18368:	ret

000000000001836c <timespec_cmp@@Base>:
   1836c:	cmp	x0, x2
   18370:	sub	w1, w1, w3
   18374:	csinc	w1, w1, wzr, le
   18378:	csinv	w0, w1, wzr, ge  // ge = tcont
   1837c:	ret

0000000000018380 <timespec_sign@@Base>:
   18380:	tbnz	x0, #63, 18394 <timespec_sign@@Base+0x14>
   18384:	orr	x0, x0, x1
   18388:	cmp	x0, #0x0
   1838c:	cset	w0, ne  // ne = any
   18390:	ret
   18394:	mov	w0, #0xffffffff            	// #-1
   18398:	b	18390 <timespec_sign@@Base+0x10>

000000000001839c <timespectod@@Base>:
   1839c:	scvtf	d0, x1
   183a0:	mov	x1, #0xcd6500000000        	// #225833675390976
   183a4:	movk	x1, #0x41cd, lsl #48
   183a8:	fmov	d1, x1
   183ac:	fdiv	d0, d0, d1
   183b0:	scvtf	d1, x0
   183b4:	fadd	d0, d0, d1
   183b8:	ret

00000000000183bc <dup_safer@@Base>:
   183bc:	mov	w2, #0x3                   	// #3
   183c0:	mov	w1, #0x0                   	// #0
   183c4:	b	b200 <rpl_fcntl@plt>

00000000000183c8 <fd_safer@@Base>:
   183c8:	stp	x29, x30, [sp, #-48]!
   183cc:	cmp	w0, #0x2
   183d0:	mov	x29, sp
   183d4:	stp	x19, x20, [sp, #16]
   183d8:	mov	w19, w0
   183dc:	stp	x21, x22, [sp, #32]
   183e0:	b.hi	18408 <fd_safer@@Base+0x40>  // b.pmore
   183e4:	bl	b040 <dup_safer@plt>
   183e8:	mov	w21, w0
   183ec:	bl	b540 <__errno_location@plt>
   183f0:	mov	x20, x0
   183f4:	mov	w0, w19
   183f8:	mov	w19, w21
   183fc:	ldr	w22, [x20]
   18400:	bl	add0 <close@plt>
   18404:	str	w22, [x20]
   18408:	mov	w0, w19
   1840c:	ldp	x19, x20, [sp, #16]
   18410:	ldp	x21, x22, [sp, #32]
   18414:	ldp	x29, x30, [sp], #48
   18418:	ret

000000000001841c <pipe_safer@@Base>:
   1841c:	stp	x29, x30, [sp, #-48]!
   18420:	mov	x29, sp
   18424:	stp	x19, x20, [sp, #16]
   18428:	mov	x20, x0
   1842c:	stp	x21, x22, [sp, #32]
   18430:	bl	a920 <pipe@plt>
   18434:	cbnz	w0, 18480 <pipe_safer@@Base+0x64>
   18438:	mov	w19, w0
   1843c:	ldr	w0, [x20]
   18440:	bl	b5c0 <fd_safer@plt>
   18444:	str	w0, [x20]
   18448:	tbnz	w0, #31, 18460 <pipe_safer@@Base+0x44>
   1844c:	ldr	w0, [x20, #4]
   18450:	bl	b5c0 <fd_safer@plt>
   18454:	str	w0, [x20, #4]
   18458:	tbz	w0, #31, 18484 <pipe_safer@@Base+0x68>
   1845c:	mov	w19, #0x1                   	// #1
   18460:	bl	b540 <__errno_location@plt>
   18464:	mov	x21, x0
   18468:	mov	w0, #0x1                   	// #1
   1846c:	sub	w19, w0, w19
   18470:	ldr	w22, [x21]
   18474:	ldr	w0, [x20, w19, sxtw #2]
   18478:	bl	add0 <close@plt>
   1847c:	str	w22, [x21]
   18480:	mov	w19, #0xffffffff            	// #-1
   18484:	mov	w0, w19
   18488:	ldp	x19, x20, [sp, #16]
   1848c:	ldp	x21, x22, [sp, #32]
   18490:	ldp	x29, x30, [sp], #48
   18494:	ret
   18498:	stp	x29, x30, [sp, #-32]!
   1849c:	mov	x3, #0x3ffffffe            	// #1073741822
   184a0:	mov	x29, sp
   184a4:	stp	x19, x20, [sp, #16]
   184a8:	mov	x20, x0
   184ac:	ldr	x19, [x1]
   184b0:	ldr	x0, [x19, #8]
   184b4:	ldr	x2, [x19, #24]
   184b8:	cmp	x0, x3
   184bc:	b.ne	184d8 <pipe_safer@@Base+0xbc>  // b.any
   184c0:	cmp	x2, x0
   184c4:	b.ne	184f8 <pipe_safer@@Base+0xdc>  // b.any
   184c8:	mov	w0, #0x1                   	// #1
   184cc:	ldp	x19, x20, [sp, #16]
   184d0:	ldp	x29, x30, [sp], #32
   184d4:	ret
   184d8:	mov	x3, #0x3fffffff            	// #1073741823
   184dc:	cmp	x0, x3
   184e0:	b.ne	18500 <pipe_safer@@Base+0xe4>  // b.any
   184e4:	cmp	x2, x0
   184e8:	b.ne	1851c <pipe_safer@@Base+0x100>  // b.any
   184ec:	str	xzr, [x1]
   184f0:	mov	w0, #0x0                   	// #0
   184f4:	b	184cc <pipe_safer@@Base+0xb0>
   184f8:	ldp	x1, x0, [x20, #72]
   184fc:	stp	x1, x0, [x19]
   18500:	mov	x1, #0x3ffffffe            	// #1073741822
   18504:	ldr	x0, [x19, #24]
   18508:	cmp	x0, x1
   1850c:	b.ne	18528 <pipe_safer@@Base+0x10c>  // b.any
   18510:	ldp	x1, x0, [x20, #88]
   18514:	stp	x1, x0, [x19, #16]
   18518:	b	184f0 <pipe_safer@@Base+0xd4>
   1851c:	mov	x0, x19
   18520:	bl	b620 <gettime@plt>
   18524:	b	18500 <pipe_safer@@Base+0xe4>
   18528:	mov	x1, #0x3fffffff            	// #1073741823
   1852c:	cmp	x0, x1
   18530:	b.ne	184f0 <pipe_safer@@Base+0xd4>  // b.any
   18534:	add	x0, x19, #0x10
   18538:	bl	b620 <gettime@plt>
   1853c:	b	184f0 <pipe_safer@@Base+0xd4>
   18540:	ldr	x1, [x0, #8]
   18544:	mov	x2, #0xffffffffffff0002    	// #-65534
   18548:	movk	x2, #0xc000, lsl #16
   1854c:	mov	x5, #0xc9ff                	// #51711
   18550:	add	x3, x1, x2
   18554:	movk	x5, #0x3b9a, lsl #16
   18558:	cmp	x3, #0x1
   1855c:	ccmp	x1, x5, #0x0, hi  // hi = pmore
   18560:	b.hi	18578 <pipe_safer@@Base+0x15c>  // b.pmore
   18564:	ldr	x4, [x0, #24]
   18568:	add	x2, x4, x2
   1856c:	cmp	x2, #0x1
   18570:	ccmp	x4, x5, #0x0, hi  // hi = pmore
   18574:	b.ls	18598 <pipe_safer@@Base+0x17c>  // b.plast
   18578:	stp	x29, x30, [sp, #-16]!
   1857c:	mov	x29, sp
   18580:	bl	b540 <__errno_location@plt>
   18584:	mov	w1, #0x16                  	// #22
   18588:	str	w1, [x0]
   1858c:	mov	w0, #0xffffffff            	// #-1
   18590:	ldp	x29, x30, [sp], #16
   18594:	ret
   18598:	cmp	x3, #0x1
   1859c:	b.hi	185e0 <pipe_safer@@Base+0x1c4>  // b.pmore
   185a0:	mov	x3, #0x3ffffffe            	// #1073741822
   185a4:	cmp	x1, x3
   185a8:	cset	w3, eq  // eq = none
   185ac:	mov	w1, #0x1                   	// #1
   185b0:	str	xzr, [x0]
   185b4:	cmp	x2, #0x1
   185b8:	b.hi	185d4 <pipe_safer@@Base+0x1b8>  // b.pmore
   185bc:	str	xzr, [x0, #16]
   185c0:	mov	x0, #0x3ffffffe            	// #1073741822
   185c4:	cmp	x4, x0
   185c8:	b.ne	185d0 <pipe_safer@@Base+0x1b4>  // b.any
   185cc:	add	w3, w3, #0x1
   185d0:	mov	w1, #0x1                   	// #1
   185d4:	cmp	w3, #0x1
   185d8:	cinc	w0, w1, eq  // eq = none
   185dc:	ret
   185e0:	mov	w3, #0x0                   	// #0
   185e4:	mov	w1, #0x0                   	// #0
   185e8:	b	185b4 <pipe_safer@@Base+0x198>

00000000000185ec <fdutimens@@Base>:
   185ec:	stp	x29, x30, [sp, #-304]!
   185f0:	mov	x29, sp
   185f4:	stp	x19, x20, [sp, #16]
   185f8:	stp	x21, x22, [sp, #32]
   185fc:	mov	w21, w0
   18600:	mov	x22, x1
   18604:	str	x23, [sp, #48]
   18608:	cbnz	x2, 18630 <fdutimens@@Base+0x44>
   1860c:	mov	w23, #0x0                   	// #0
   18610:	str	xzr, [sp, #72]
   18614:	cmp	w21, #0x0
   18618:	ccmp	x22, #0x0, #0x0, lt  // lt = tstop
   1861c:	b.ne	1865c <fdutimens@@Base+0x70>  // b.any
   18620:	bl	b540 <__errno_location@plt>
   18624:	mov	w1, #0x9                   	// #9
   18628:	str	w1, [x0]
   1862c:	b	18654 <fdutimens@@Base+0x68>
   18630:	ldp	x4, x5, [x2]
   18634:	add	x0, sp, #0x50
   18638:	ldp	x2, x3, [x2, #16]
   1863c:	str	x0, [sp, #72]
   18640:	stp	x4, x5, [sp, #80]
   18644:	stp	x2, x3, [sp, #96]
   18648:	bl	18540 <pipe_safer@@Base+0x124>
   1864c:	mov	w23, w0
   18650:	tbz	w0, #31, 18614 <fdutimens@@Base+0x28>
   18654:	mov	w19, #0xffffffff            	// #-1
   18658:	b	18758 <fdutimens@@Base+0x16c>
   1865c:	adrp	x20, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
   18660:	ldr	w0, [x20, #1424]
   18664:	tbnz	w0, #31, 186f0 <fdutimens@@Base+0x104>
   18668:	cmp	w23, #0x2
   1866c:	b.ne	186ac <fdutimens@@Base+0xc0>  // b.any
   18670:	add	x1, sp, #0xb0
   18674:	tbz	w21, #31, 18728 <fdutimens@@Base+0x13c>
   18678:	mov	x0, x22
   1867c:	bl	269a8 <vasnprintf@@Base+0xb18>
   18680:	cmp	w0, #0x0
   18684:	cset	w0, ne  // ne = any
   18688:	cbnz	w0, 18654 <fdutimens@@Base+0x68>
   1868c:	ldr	x0, [sp, #72]
   18690:	mov	x1, #0x3ffffffe            	// #1073741822
   18694:	ldr	x2, [x0, #8]
   18698:	cmp	x2, x1
   1869c:	b.ne	18734 <fdutimens@@Base+0x148>  // b.any
   186a0:	ldp	x2, x1, [sp, #248]
   186a4:	stp	x2, x1, [x0]
   186a8:	mov	w23, #0x3                   	// #3
   186ac:	ldr	x1, [sp, #72]
   186b0:	tbz	w21, #31, 188dc <fdutimens@@Base+0x2f0>
   186b4:	mov	x2, x1
   186b8:	mov	w3, #0x0                   	// #0
   186bc:	mov	x1, x22
   186c0:	mov	w0, #0xffffff9c            	// #-100
   186c4:	bl	b1d0 <utimensat@plt>
   186c8:	mov	w19, w0
   186cc:	cmp	w0, #0x0
   186d0:	b.le	1874c <fdutimens@@Base+0x160>
   186d4:	bl	b540 <__errno_location@plt>
   186d8:	mov	w1, #0x26                  	// #38
   186dc:	str	w1, [x0]
   186e0:	bl	b540 <__errno_location@plt>
   186e4:	ldr	w0, [x0]
   186e8:	cmp	w0, #0x26
   186ec:	b.ne	18750 <fdutimens@@Base+0x164>  // b.any
   186f0:	add	x0, x20, #0x590
   186f4:	mov	w1, #0xffffffff            	// #-1
   186f8:	str	w1, [x20, #1424]
   186fc:	str	w1, [x0, #4]
   18700:	cbnz	w23, 18770 <fdutimens@@Base+0x184>
   18704:	ldr	x20, [sp, #72]
   18708:	cbnz	x20, 187c8 <fdutimens@@Base+0x1dc>
   1870c:	mov	x2, x20
   18710:	tbz	w21, #31, 187f4 <fdutimens@@Base+0x208>
   18714:	mov	x1, x22
   18718:	mov	w0, #0xffffff9c            	// #-100
   1871c:	bl	ab00 <futimesat@plt>
   18720:	mov	w19, w0
   18724:	b	18758 <fdutimens@@Base+0x16c>
   18728:	mov	w0, w21
   1872c:	bl	269b8 <vasnprintf@@Base+0xb28>
   18730:	b	18680 <fdutimens@@Base+0x94>
   18734:	ldr	x2, [x0, #24]
   18738:	cmp	x2, x1
   1873c:	b.ne	186a8 <fdutimens@@Base+0xbc>  // b.any
   18740:	ldp	x2, x1, [sp, #264]
   18744:	stp	x2, x1, [x0, #16]
   18748:	b	186a8 <fdutimens@@Base+0xbc>
   1874c:	b.ne	186e0 <fdutimens@@Base+0xf4>  // b.any
   18750:	mov	w0, #0x1                   	// #1
   18754:	str	w0, [x20, #1424]
   18758:	mov	w0, w19
   1875c:	ldp	x19, x20, [sp, #16]
   18760:	ldp	x21, x22, [sp, #32]
   18764:	ldr	x23, [sp, #48]
   18768:	ldp	x29, x30, [sp], #304
   1876c:	ret
   18770:	cmp	w23, #0x3
   18774:	b.ne	1879c <fdutimens@@Base+0x1b0>  // b.any
   18778:	ldr	x0, [sp, #72]
   1877c:	cbz	x0, 18704 <fdutimens@@Base+0x118>
   18780:	add	x1, sp, #0x48
   18784:	add	x0, sp, #0xb0
   18788:	bl	18498 <pipe_safer@@Base+0x7c>
   1878c:	tst	w0, #0xff
   18790:	b.eq	18704 <fdutimens@@Base+0x118>  // b.none
   18794:	mov	w19, #0x0                   	// #0
   18798:	b	18758 <fdutimens@@Base+0x16c>
   1879c:	add	x1, sp, #0xb0
   187a0:	tbz	w21, #31, 187bc <fdutimens@@Base+0x1d0>
   187a4:	mov	x0, x22
   187a8:	bl	269a8 <vasnprintf@@Base+0xb18>
   187ac:	cmp	w0, #0x0
   187b0:	cset	w0, ne  // ne = any
   187b4:	cbz	w0, 18778 <fdutimens@@Base+0x18c>
   187b8:	b	18654 <fdutimens@@Base+0x68>
   187bc:	mov	w0, w21
   187c0:	bl	269b8 <vasnprintf@@Base+0xb28>
   187c4:	b	187ac <fdutimens@@Base+0x1c0>
   187c8:	ldp	x0, x1, [x20]
   187cc:	mov	x2, #0x3e8                 	// #1000
   187d0:	sdiv	x1, x1, x2
   187d4:	stp	x0, x1, [sp, #112]
   187d8:	ldr	x0, [x20, #16]
   187dc:	str	x0, [sp, #128]
   187e0:	ldr	x0, [x20, #24]
   187e4:	add	x20, sp, #0x70
   187e8:	sdiv	x0, x0, x2
   187ec:	str	x0, [sp, #136]
   187f0:	b	1870c <fdutimens@@Base+0x120>
   187f4:	mov	w0, w21
   187f8:	mov	x1, #0x0                   	// #0
   187fc:	bl	ab00 <futimesat@plt>
   18800:	cbnz	w0, 188c8 <fdutimens@@Base+0x2dc>
   18804:	cbz	x20, 18794 <fdutimens@@Base+0x1a8>
   18808:	ldr	x1, [x20, #8]
   1880c:	mov	x0, #0xa11f                	// #41247
   18810:	movk	x0, #0x7, lsl #16
   18814:	cmp	x1, x0
   18818:	ldr	x1, [x20, #24]
   1881c:	cset	w23, gt
   18820:	cmp	x1, x0
   18824:	cset	w22, gt
   18828:	cmp	w23, #0x0
   1882c:	ccmp	w22, #0x0, #0x0, eq  // eq = none
   18830:	b.eq	18794 <fdutimens@@Base+0x1a8>  // b.none
   18834:	add	x1, sp, #0xb0
   18838:	mov	w0, w21
   1883c:	bl	269b8 <vasnprintf@@Base+0xb28>
   18840:	mov	w19, w0
   18844:	cbnz	w0, 18794 <fdutimens@@Base+0x1a8>
   18848:	ldr	x0, [x20]
   1884c:	cmp	w23, #0x0
   18850:	ldr	x1, [sp, #248]
   18854:	ldr	x2, [x20, #16]
   18858:	sub	x1, x1, x0
   1885c:	ldr	x0, [sp, #264]
   18860:	ccmp	x1, #0x1, #0x0, ne  // ne = any
   18864:	sub	x0, x0, x2
   18868:	ldp	x2, x3, [x20]
   1886c:	stp	x2, x3, [sp, #144]
   18870:	ldp	x2, x3, [x20, #16]
   18874:	stp	x2, x3, [sp, #160]
   18878:	b.ne	188b8 <fdutimens@@Base+0x2cc>  // b.any
   1887c:	ldr	x1, [sp, #256]
   18880:	cbnz	x1, 188b8 <fdutimens@@Base+0x2cc>
   18884:	add	x2, sp, #0x90
   18888:	str	xzr, [sp, #152]
   1888c:	cmp	w22, #0x0
   18890:	ccmp	x0, #0x1, #0x0, ne  // ne = any
   18894:	b.ne	188c0 <fdutimens@@Base+0x2d4>  // b.any
   18898:	ldr	x0, [sp, #272]
   1889c:	cbnz	x0, 188c0 <fdutimens@@Base+0x2d4>
   188a0:	add	x2, sp, #0x90
   188a4:	str	xzr, [sp, #168]
   188a8:	mov	w0, w21
   188ac:	mov	x1, #0x0                   	// #0
   188b0:	bl	ab00 <futimesat@plt>
   188b4:	b	18758 <fdutimens@@Base+0x16c>
   188b8:	mov	x2, #0x0                   	// #0
   188bc:	b	1888c <fdutimens@@Base+0x2a0>
   188c0:	cbz	x2, 18758 <fdutimens@@Base+0x16c>
   188c4:	b	188a8 <fdutimens@@Base+0x2bc>
   188c8:	cbz	x22, 18654 <fdutimens@@Base+0x68>
   188cc:	mov	x1, x20
   188d0:	mov	x0, x22
   188d4:	bl	b360 <utimes@plt>
   188d8:	b	18720 <fdutimens@@Base+0x134>
   188dc:	mov	w0, w21
   188e0:	bl	abc0 <futimens@plt>
   188e4:	b	186c8 <fdutimens@@Base+0xdc>

00000000000188e8 <utimens@@Base>:
   188e8:	mov	x2, x1
   188ec:	mov	x1, x0
   188f0:	mov	w0, #0xffffffff            	// #-1
   188f4:	b	af10 <fdutimens@plt>

00000000000188f8 <lutimens@@Base>:
   188f8:	stp	x29, x30, [sp, #-224]!
   188fc:	mov	x29, sp
   18900:	stp	x19, x20, [sp, #16]
   18904:	stp	x21, x22, [sp, #32]
   18908:	mov	x22, x0
   1890c:	cbnz	x1, 189dc <lutimens@@Base+0xe4>
   18910:	mov	w20, #0x0                   	// #0
   18914:	str	xzr, [sp, #56]
   18918:	adrp	x21, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
   1891c:	add	x0, x21, #0x590
   18920:	ldr	w0, [x0, #4]
   18924:	tbnz	w0, #31, 1899c <lutimens@@Base+0xa4>
   18928:	cmp	w20, #0x2
   1892c:	b.ne	18960 <lutimens@@Base+0x68>  // b.any
   18930:	add	x1, sp, #0x60
   18934:	mov	x0, x22
   18938:	bl	269c8 <vasnprintf@@Base+0xb38>
   1893c:	cbnz	w0, 18a00 <lutimens@@Base+0x108>
   18940:	ldr	x1, [sp, #56]
   18944:	mov	x0, #0x3ffffffe            	// #1073741822
   18948:	ldr	x2, [x1, #8]
   1894c:	cmp	x2, x0
   18950:	b.ne	18a08 <lutimens@@Base+0x110>  // b.any
   18954:	ldp	x2, x0, [sp, #168]
   18958:	stp	x2, x0, [x1]
   1895c:	mov	w20, #0x3                   	// #3
   18960:	ldr	x2, [sp, #56]
   18964:	mov	x1, x22
   18968:	mov	w3, #0x100                 	// #256
   1896c:	mov	w0, #0xffffff9c            	// #-100
   18970:	bl	b1d0 <utimensat@plt>
   18974:	mov	w19, w0
   18978:	cmp	w0, #0x0
   1897c:	b.le	18a20 <lutimens@@Base+0x128>
   18980:	bl	b540 <__errno_location@plt>
   18984:	mov	w1, #0x26                  	// #38
   18988:	str	w1, [x0]
   1898c:	bl	b540 <__errno_location@plt>
   18990:	ldr	w0, [x0]
   18994:	cmp	w0, #0x26
   18998:	b.ne	18a24 <lutimens@@Base+0x12c>  // b.any
   1899c:	add	x21, x21, #0x590
   189a0:	mov	w0, #0xffffffff            	// #-1
   189a4:	str	w0, [x21, #4]
   189a8:	cbz	w20, 18a90 <lutimens@@Base+0x198>
   189ac:	cmp	w20, #0x3
   189b0:	b.ne	18a48 <lutimens@@Base+0x150>  // b.any
   189b4:	ldr	x0, [sp, #56]
   189b8:	cbnz	x0, 18a5c <lutimens@@Base+0x164>
   189bc:	ldr	w0, [sp, #112]
   189c0:	and	w0, w0, #0xf000
   189c4:	cmp	w0, #0xa, lsl #12
   189c8:	b.ne	18a78 <lutimens@@Base+0x180>  // b.any
   189cc:	bl	b540 <__errno_location@plt>
   189d0:	mov	w1, #0x26                  	// #38
   189d4:	str	w1, [x0]
   189d8:	b	18a00 <lutimens@@Base+0x108>
   189dc:	ldp	x2, x3, [x1]
   189e0:	stp	x2, x3, [sp, #64]
   189e4:	add	x0, sp, #0x40
   189e8:	ldp	x2, x3, [x1, #16]
   189ec:	str	x0, [sp, #56]
   189f0:	stp	x2, x3, [sp, #80]
   189f4:	bl	18540 <pipe_safer@@Base+0x124>
   189f8:	mov	w20, w0
   189fc:	tbz	w0, #31, 18918 <lutimens@@Base+0x20>
   18a00:	mov	w19, #0xffffffff            	// #-1
   18a04:	b	18a34 <lutimens@@Base+0x13c>
   18a08:	ldr	x2, [x1, #24]
   18a0c:	cmp	x2, x0
   18a10:	b.ne	1895c <lutimens@@Base+0x64>  // b.any
   18a14:	ldp	x2, x0, [sp, #184]
   18a18:	stp	x2, x0, [x1, #16]
   18a1c:	b	1895c <lutimens@@Base+0x64>
   18a20:	b.ne	1898c <lutimens@@Base+0x94>  // b.any
   18a24:	add	x1, x21, #0x590
   18a28:	mov	w0, #0x1                   	// #1
   18a2c:	str	w0, [x21, #1424]
   18a30:	str	w0, [x1, #4]
   18a34:	mov	w0, w19
   18a38:	ldp	x19, x20, [sp, #16]
   18a3c:	ldp	x21, x22, [sp, #32]
   18a40:	ldp	x29, x30, [sp], #224
   18a44:	ret
   18a48:	add	x1, sp, #0x60
   18a4c:	mov	x0, x22
   18a50:	bl	269c8 <vasnprintf@@Base+0xb38>
   18a54:	cbz	w0, 189b4 <lutimens@@Base+0xbc>
   18a58:	b	18a00 <lutimens@@Base+0x108>
   18a5c:	add	x1, sp, #0x38
   18a60:	add	x0, sp, #0x60
   18a64:	bl	18498 <pipe_safer@@Base+0x7c>
   18a68:	tst	w0, #0xff
   18a6c:	b.eq	189bc <lutimens@@Base+0xc4>  // b.none
   18a70:	mov	w19, #0x0                   	// #0
   18a74:	b	18a34 <lutimens@@Base+0x13c>
   18a78:	ldr	x2, [sp, #56]
   18a7c:	mov	x1, x22
   18a80:	mov	w0, #0xffffffff            	// #-1
   18a84:	bl	af10 <fdutimens@plt>
   18a88:	mov	w19, w0
   18a8c:	b	18a34 <lutimens@@Base+0x13c>
   18a90:	add	x1, sp, #0x60
   18a94:	mov	x0, x22
   18a98:	bl	269c8 <vasnprintf@@Base+0xb38>
   18a9c:	cbz	w0, 189bc <lutimens@@Base+0xc4>
   18aa0:	b	18a00 <lutimens@@Base+0x108>

0000000000018aa4 <xmalloc@@Base>:
   18aa4:	stp	x29, x30, [sp, #-32]!
   18aa8:	mov	x29, sp
   18aac:	str	x19, [sp, #16]
   18ab0:	mov	x19, x0
   18ab4:	bl	aab0 <malloc@plt>
   18ab8:	cmp	x0, #0x0
   18abc:	ccmp	x19, #0x0, #0x4, eq  // eq = none
   18ac0:	b.eq	18ac8 <xmalloc@@Base+0x24>  // b.none
   18ac4:	bl	ae30 <xalloc_die@plt>
   18ac8:	ldr	x19, [sp, #16]
   18acc:	ldp	x29, x30, [sp], #32
   18ad0:	ret

0000000000018ad4 <xnmalloc@@Base>:
   18ad4:	mov	x2, x0
   18ad8:	mul	x0, x0, x1
   18adc:	umulh	x2, x2, x1
   18ae0:	cmp	x2, #0x0
   18ae4:	cset	x1, ne  // ne = any
   18ae8:	tbnz	x0, #63, 18af0 <xnmalloc@@Base+0x1c>
   18aec:	cbz	x1, 18afc <xnmalloc@@Base+0x28>
   18af0:	stp	x29, x30, [sp, #-16]!
   18af4:	mov	x29, sp
   18af8:	bl	ae30 <xalloc_die@plt>
   18afc:	b	ac40 <xmalloc@plt>

0000000000018b00 <xcharalloc@@Base>:
   18b00:	b	ac40 <xmalloc@plt>

0000000000018b04 <xrealloc@@Base>:
   18b04:	stp	x29, x30, [sp, #-32]!
   18b08:	cmp	x1, #0x0
   18b0c:	ccmp	x0, #0x0, #0x4, eq  // eq = none
   18b10:	mov	x29, sp
   18b14:	str	x19, [sp, #16]
   18b18:	b.eq	18b30 <xrealloc@@Base+0x2c>  // b.none
   18b1c:	bl	b050 <free@plt>
   18b20:	mov	x0, #0x0                   	// #0
   18b24:	ldr	x19, [sp, #16]
   18b28:	ldp	x29, x30, [sp], #32
   18b2c:	ret
   18b30:	mov	x19, x1
   18b34:	bl	ad60 <realloc@plt>
   18b38:	cmp	x0, #0x0
   18b3c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
   18b40:	b.eq	18b24 <xrealloc@@Base+0x20>  // b.none
   18b44:	bl	ae30 <xalloc_die@plt>

0000000000018b48 <xnrealloc@@Base>:
   18b48:	mov	x3, x1
   18b4c:	mul	x1, x1, x2
   18b50:	umulh	x3, x3, x2
   18b54:	cmp	x3, #0x0
   18b58:	cset	x2, ne  // ne = any
   18b5c:	tbnz	x1, #63, 18b64 <xnrealloc@@Base+0x1c>
   18b60:	cbz	x2, 18b70 <xnrealloc@@Base+0x28>
   18b64:	stp	x29, x30, [sp, #-16]!
   18b68:	mov	x29, sp
   18b6c:	bl	ae30 <xalloc_die@plt>
   18b70:	b	ab60 <xrealloc@plt>

0000000000018b74 <x2nrealloc@@Base>:
   18b74:	ldr	x3, [x1]
   18b78:	cbnz	x0, 18bb4 <x2nrealloc@@Base+0x40>
   18b7c:	cbnz	x3, 18b90 <x2nrealloc@@Base+0x1c>
   18b80:	mov	x3, #0x80                  	// #128
   18b84:	cmp	x2, #0x80
   18b88:	udiv	x3, x3, x2
   18b8c:	cinc	x3, x3, hi  // hi = pmore
   18b90:	umulh	x5, x3, x2
   18b94:	mul	x4, x3, x2
   18b98:	cmp	x5, #0x0
   18b9c:	cset	x5, ne  // ne = any
   18ba0:	tbnz	x4, #63, 18ba8 <x2nrealloc@@Base+0x34>
   18ba4:	cbz	x5, 18bd0 <x2nrealloc@@Base+0x5c>
   18ba8:	stp	x29, x30, [sp, #-16]!
   18bac:	mov	x29, sp
   18bb0:	bl	ae30 <xalloc_die@plt>
   18bb4:	mov	x4, #0x5555555555555555    	// #6148914691236517205
   18bb8:	movk	x4, #0x5554
   18bbc:	udiv	x4, x4, x2
   18bc0:	cmp	x4, x3
   18bc4:	b.ls	18ba8 <x2nrealloc@@Base+0x34>  // b.plast
   18bc8:	add	x4, x3, #0x1
   18bcc:	add	x3, x4, x3, lsr #1
   18bd0:	str	x3, [x1]
   18bd4:	mul	x1, x3, x2
   18bd8:	b	ab60 <xrealloc@plt>

0000000000018bdc <x2realloc@@Base>:
   18bdc:	mov	x2, #0x1                   	// #1
   18be0:	b	18b74 <x2nrealloc@@Base>

0000000000018be4 <xzalloc@@Base>:
   18be4:	stp	x29, x30, [sp, #-32]!
   18be8:	mov	x29, sp
   18bec:	str	x19, [sp, #16]
   18bf0:	mov	x19, x0
   18bf4:	bl	ac40 <xmalloc@plt>
   18bf8:	mov	x2, x19
   18bfc:	mov	w1, #0x0                   	// #0
   18c00:	ldr	x19, [sp, #16]
   18c04:	ldp	x29, x30, [sp], #32
   18c08:	b	ac10 <memset@plt>

0000000000018c0c <xcalloc@@Base>:
   18c0c:	umulh	x2, x0, x1
   18c10:	stp	x29, x30, [sp, #-16]!
   18c14:	mul	x4, x0, x1
   18c18:	cmp	x2, #0x0
   18c1c:	mov	x29, sp
   18c20:	cset	x2, ne  // ne = any
   18c24:	tbnz	x4, #63, 18c2c <xcalloc@@Base+0x20>
   18c28:	cbz	x2, 18c30 <xcalloc@@Base+0x24>
   18c2c:	bl	ae30 <xalloc_die@plt>
   18c30:	bl	ace0 <calloc@plt>
   18c34:	cbz	x0, 18c2c <xcalloc@@Base+0x20>
   18c38:	ldp	x29, x30, [sp], #16
   18c3c:	ret

0000000000018c40 <xmemdup@@Base>:
   18c40:	stp	x29, x30, [sp, #-32]!
   18c44:	mov	x29, sp
   18c48:	stp	x19, x20, [sp, #16]
   18c4c:	mov	x19, x1
   18c50:	mov	x20, x0
   18c54:	mov	x0, x1
   18c58:	bl	ac40 <xmalloc@plt>
   18c5c:	mov	x2, x19
   18c60:	mov	x1, x20
   18c64:	ldp	x19, x20, [sp, #16]
   18c68:	ldp	x29, x30, [sp], #32
   18c6c:	b	a6f0 <memcpy@plt>

0000000000018c70 <xstrdup@@Base>:
   18c70:	stp	x29, x30, [sp, #-32]!
   18c74:	mov	x29, sp
   18c78:	str	x19, [sp, #16]
   18c7c:	mov	x19, x0
   18c80:	bl	a780 <strlen@plt>
   18c84:	add	x1, x0, #0x1
   18c88:	mov	x0, x19
   18c8c:	ldr	x19, [sp, #16]
   18c90:	ldp	x29, x30, [sp], #32
   18c94:	b	b4e0 <xmemdup@plt>

0000000000018c98 <xalloc_die@@Base>:
   18c98:	stp	x29, x30, [sp, #-32]!
   18c9c:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   18ca0:	mov	w2, #0x5                   	// #5
   18ca4:	mov	x29, sp
   18ca8:	ldr	x0, [x0, #3976]
   18cac:	str	x19, [sp, #16]
   18cb0:	adrp	x1, 28000 <vasnprintf@@Base+0x2170>
   18cb4:	add	x1, x1, #0xebb
   18cb8:	ldr	w19, [x0]
   18cbc:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   18cc0:	add	x0, x0, #0x2ee
   18cc4:	bl	b3f0 <dcgettext@plt>
   18cc8:	adrp	x2, 27000 <vasnprintf@@Base+0x1170>
   18ccc:	mov	x3, x0
   18cd0:	add	x2, x2, #0x30f
   18cd4:	mov	w0, w19
   18cd8:	mov	w1, #0x0                   	// #0
   18cdc:	bl	a7c0 <error@plt>
   18ce0:	bl	aeb0 <abort@plt>

0000000000018ce4 <xgetcwd@@Base>:
   18ce4:	stp	x29, x30, [sp, #-32]!
   18ce8:	mov	x1, #0x0                   	// #0
   18cec:	mov	x0, #0x0                   	// #0
   18cf0:	mov	x29, sp
   18cf4:	str	x19, [sp, #16]
   18cf8:	bl	a740 <getcwd@plt>
   18cfc:	mov	x19, x0
   18d00:	cbnz	x0, 18d18 <xgetcwd@@Base+0x34>
   18d04:	bl	b540 <__errno_location@plt>
   18d08:	ldr	w0, [x0]
   18d0c:	cmp	w0, #0xc
   18d10:	b.ne	18d18 <xgetcwd@@Base+0x34>  // b.any
   18d14:	bl	ae30 <xalloc_die@plt>
   18d18:	mov	x0, x19
   18d1c:	ldr	x19, [sp, #16]
   18d20:	ldp	x29, x30, [sp], #32
   18d24:	ret

0000000000018d28 <gl_list_create_empty@@Base>:
   18d28:	stp	x29, x30, [sp, #-16]!
   18d2c:	mov	x29, sp
   18d30:	bl	a720 <gl_list_nx_create_empty@plt>
   18d34:	cbnz	x0, 18d3c <gl_list_create_empty@@Base+0x14>
   18d38:	bl	ae30 <xalloc_die@plt>
   18d3c:	ldp	x29, x30, [sp], #16
   18d40:	ret

0000000000018d44 <gl_list_create@@Base>:
   18d44:	stp	x29, x30, [sp, #-16]!
   18d48:	mov	x29, sp
   18d4c:	bl	ade0 <gl_list_nx_create@plt>
   18d50:	cbnz	x0, 18d58 <gl_list_create@@Base+0x14>
   18d54:	bl	ae30 <xalloc_die@plt>
   18d58:	ldp	x29, x30, [sp], #16
   18d5c:	ret

0000000000018d60 <gl_list_node_set_value@@Base>:
   18d60:	stp	x29, x30, [sp, #-16]!
   18d64:	mov	x29, sp
   18d68:	bl	aac0 <gl_list_node_nx_set_value@plt>
   18d6c:	tbz	w0, #31, 18d74 <gl_list_node_set_value@@Base+0x14>
   18d70:	bl	ae30 <xalloc_die@plt>
   18d74:	ldp	x29, x30, [sp], #16
   18d78:	ret

0000000000018d7c <gl_list_set_at@@Base>:
   18d7c:	stp	x29, x30, [sp, #-16]!
   18d80:	mov	x29, sp
   18d84:	bl	abf0 <gl_list_nx_set_at@plt>
   18d88:	cbnz	x0, 18d90 <gl_list_set_at@@Base+0x14>
   18d8c:	bl	ae30 <xalloc_die@plt>
   18d90:	ldp	x29, x30, [sp], #16
   18d94:	ret

0000000000018d98 <gl_list_add_first@@Base>:
   18d98:	stp	x29, x30, [sp, #-16]!
   18d9c:	mov	x29, sp
   18da0:	bl	acd0 <gl_list_nx_add_first@plt>
   18da4:	cbnz	x0, 18dac <gl_list_add_first@@Base+0x14>
   18da8:	bl	ae30 <xalloc_die@plt>
   18dac:	ldp	x29, x30, [sp], #16
   18db0:	ret

0000000000018db4 <gl_list_add_last@@Base>:
   18db4:	stp	x29, x30, [sp, #-16]!
   18db8:	mov	x29, sp
   18dbc:	bl	a7a0 <gl_list_nx_add_last@plt>
   18dc0:	cbnz	x0, 18dc8 <gl_list_add_last@@Base+0x14>
   18dc4:	bl	ae30 <xalloc_die@plt>
   18dc8:	ldp	x29, x30, [sp], #16
   18dcc:	ret

0000000000018dd0 <gl_list_add_before@@Base>:
   18dd0:	stp	x29, x30, [sp, #-16]!
   18dd4:	mov	x29, sp
   18dd8:	bl	b170 <gl_list_nx_add_before@plt>
   18ddc:	cbnz	x0, 18de4 <gl_list_add_before@@Base+0x14>
   18de0:	bl	ae30 <xalloc_die@plt>
   18de4:	ldp	x29, x30, [sp], #16
   18de8:	ret

0000000000018dec <gl_list_add_after@@Base>:
   18dec:	stp	x29, x30, [sp, #-16]!
   18df0:	mov	x29, sp
   18df4:	bl	ab10 <gl_list_nx_add_after@plt>
   18df8:	cbnz	x0, 18e00 <gl_list_add_after@@Base+0x14>
   18dfc:	bl	ae30 <xalloc_die@plt>
   18e00:	ldp	x29, x30, [sp], #16
   18e04:	ret

0000000000018e08 <gl_list_add_at@@Base>:
   18e08:	stp	x29, x30, [sp, #-16]!
   18e0c:	mov	x29, sp
   18e10:	bl	b140 <gl_list_nx_add_at@plt>
   18e14:	cbnz	x0, 18e1c <gl_list_add_at@@Base+0x14>
   18e18:	bl	ae30 <xalloc_die@plt>
   18e1c:	ldp	x29, x30, [sp], #16
   18e20:	ret

0000000000018e24 <gl_sortedlist_add@@Base>:
   18e24:	stp	x29, x30, [sp, #-16]!
   18e28:	mov	x29, sp
   18e2c:	bl	b0e0 <gl_sortedlist_nx_add@plt>
   18e30:	cbnz	x0, 18e38 <gl_sortedlist_add@@Base+0x14>
   18e34:	bl	ae30 <xalloc_die@plt>
   18e38:	ldp	x29, x30, [sp], #16
   18e3c:	ret

0000000000018e40 <gl_map_create_empty@@Base>:
   18e40:	stp	x29, x30, [sp, #-16]!
   18e44:	mov	x29, sp
   18e48:	bl	af70 <gl_map_nx_create_empty@plt>
   18e4c:	cbnz	x0, 18e54 <gl_map_create_empty@@Base+0x14>
   18e50:	bl	ae30 <xalloc_die@plt>
   18e54:	ldp	x29, x30, [sp], #16
   18e58:	ret

0000000000018e5c <gl_map_put@@Base>:
   18e5c:	stp	x29, x30, [sp, #-16]!
   18e60:	mov	x29, sp
   18e64:	bl	ac30 <gl_map_nx_put@plt>
   18e68:	cmp	w0, #0x0
   18e6c:	b.ge	18e74 <gl_map_put@@Base+0x18>  // b.tcont
   18e70:	bl	ae30 <xalloc_die@plt>
   18e74:	cset	w0, ne  // ne = any
   18e78:	ldp	x29, x30, [sp], #16
   18e7c:	ret

0000000000018e80 <gl_map_getput@@Base>:
   18e80:	stp	x29, x30, [sp, #-16]!
   18e84:	mov	x29, sp
   18e88:	bl	af20 <gl_map_nx_getput@plt>
   18e8c:	cmp	w0, #0x0
   18e90:	b.ge	18e98 <gl_map_getput@@Base+0x18>  // b.tcont
   18e94:	bl	ae30 <xalloc_die@plt>
   18e98:	cset	w0, ne  // ne = any
   18e9c:	ldp	x29, x30, [sp], #16
   18ea0:	ret

0000000000018ea4 <gl_set_create_empty@@Base>:
   18ea4:	stp	x29, x30, [sp, #-16]!
   18ea8:	mov	x29, sp
   18eac:	bl	b340 <gl_set_nx_create_empty@plt>
   18eb0:	cbnz	x0, 18eb8 <gl_set_create_empty@@Base+0x14>
   18eb4:	bl	ae30 <xalloc_die@plt>
   18eb8:	ldp	x29, x30, [sp], #16
   18ebc:	ret

0000000000018ec0 <gl_set_add@@Base>:
   18ec0:	stp	x29, x30, [sp, #-16]!
   18ec4:	mov	x29, sp
   18ec8:	bl	b4b0 <gl_set_nx_add@plt>
   18ecc:	cmp	w0, #0x0
   18ed0:	b.ge	18ed8 <gl_set_add@@Base+0x18>  // b.tcont
   18ed4:	bl	ae30 <xalloc_die@plt>
   18ed8:	cset	w0, ne  // ne = any
   18edc:	ldp	x29, x30, [sp], #16
   18ee0:	ret

0000000000018ee4 <xsum@@Base>:
   18ee4:	adds	x0, x0, x1
   18ee8:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
   18eec:	ret

0000000000018ef0 <xsum3@@Base>:
   18ef0:	adds	x1, x0, x1
   18ef4:	mov	x3, #0xffffffffffffffff    	// #-1
   18ef8:	csel	x1, x1, x3, cc  // cc = lo, ul, last
   18efc:	adds	x1, x2, x1
   18f00:	csel	x0, x1, x3, cc  // cc = lo, ul, last
   18f04:	ret

0000000000018f08 <xsum4@@Base>:
   18f08:	adds	x1, x0, x1
   18f0c:	mov	x4, #0xffffffffffffffff    	// #-1
   18f10:	csel	x1, x1, x4, cc  // cc = lo, ul, last
   18f14:	adds	x2, x2, x1
   18f18:	csel	x2, x2, x4, cc  // cc = lo, ul, last
   18f1c:	adds	x2, x3, x2
   18f20:	csel	x0, x2, x4, cc  // cc = lo, ul, last
   18f24:	ret

0000000000018f28 <xmax@@Base>:
   18f28:	cmp	x0, x1
   18f2c:	csel	x0, x0, x1, cs  // cs = hs, nlast
   18f30:	ret

0000000000018f34 <xstdopen@@Base>:
   18f34:	stp	x29, x30, [sp, #-32]!
   18f38:	mov	x29, sp
   18f3c:	stp	x19, x20, [sp, #16]
   18f40:	bl	ab30 <stdopen@plt>
   18f44:	cbz	w0, 18f88 <xstdopen@@Base+0x54>
   18f48:	mov	w19, w0
   18f4c:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   18f50:	mov	w2, #0x5                   	// #5
   18f54:	adrp	x1, 28000 <vasnprintf@@Base+0x2170>
   18f58:	ldr	x0, [x0, #3976]
   18f5c:	add	x1, x1, #0xecc
   18f60:	ldr	w20, [x0]
   18f64:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   18f68:	add	x0, x0, #0x2ee
   18f6c:	bl	b3f0 <dcgettext@plt>
   18f70:	mov	w1, w19
   18f74:	mov	x2, x0
   18f78:	mov	w0, w20
   18f7c:	ldp	x19, x20, [sp, #16]
   18f80:	ldp	x29, x30, [sp], #32
   18f84:	b	a7c0 <error@plt>
   18f88:	ldp	x19, x20, [sp, #16]
   18f8c:	ldp	x29, x30, [sp], #32
   18f90:	ret

0000000000018f94 <xstrndup@@Base>:
   18f94:	stp	x29, x30, [sp, #-16]!
   18f98:	mov	x29, sp
   18f9c:	bl	b150 <strndup@plt>
   18fa0:	cbnz	x0, 18fa8 <xstrndup@@Base+0x14>
   18fa4:	bl	ae30 <xalloc_die@plt>
   18fa8:	ldp	x29, x30, [sp], #16
   18fac:	ret
   18fb0:	stp	x29, x30, [sp, #-112]!
   18fb4:	mov	x29, sp
   18fb8:	stp	x19, x20, [sp, #16]
   18fbc:	mov	x19, x1
   18fc0:	mov	x20, #0x0                   	// #0
   18fc4:	stp	x21, x22, [sp, #32]
   18fc8:	mov	x21, x0
   18fcc:	stp	x23, x24, [sp, #48]
   18fd0:	mov	x23, x0
   18fd4:	ldr	w24, [x1, #24]
   18fd8:	ldr	x22, [x1]
   18fdc:	stp	x25, x26, [sp, #64]
   18fe0:	mov	x26, #0xffffffffffffffff    	// #-1
   18fe4:	ldp	x0, x1, [x1]
   18fe8:	stp	x0, x1, [sp, #80]
   18fec:	ldr	x25, [sp, #88]
   18ff0:	ldp	x0, x1, [x19, #16]
   18ff4:	stp	x0, x1, [sp, #96]
   18ff8:	cbnz	x23, 19030 <xstrndup@@Base+0x9c>
   18ffc:	mov	x0, #0x7fffffff            	// #2147483647
   19000:	cmp	x20, x0
   19004:	b.ls	19078 <xstrndup@@Base+0xe4>  // b.plast
   19008:	bl	b540 <__errno_location@plt>
   1900c:	mov	w1, #0x4b                  	// #75
   19010:	str	w1, [x0]
   19014:	mov	x0, x23
   19018:	ldp	x19, x20, [sp, #16]
   1901c:	ldp	x21, x22, [sp, #32]
   19020:	ldp	x23, x24, [sp, #48]
   19024:	ldp	x25, x26, [sp, #64]
   19028:	ldp	x29, x30, [sp], #112
   1902c:	ret
   19030:	ldr	w1, [sp, #104]
   19034:	ldr	x0, [sp, #80]
   19038:	tbnz	w1, #31, 19060 <xstrndup@@Base+0xcc>
   1903c:	add	x1, x0, #0xf
   19040:	and	x1, x1, #0xfffffffffffffff8
   19044:	str	x1, [sp, #80]
   19048:	ldr	x0, [x0]
   1904c:	sub	x23, x23, #0x1
   19050:	bl	a780 <strlen@plt>
   19054:	adds	x20, x0, x20
   19058:	csel	x20, x20, x26, cc  // cc = lo, ul, last
   1905c:	b	18ff8 <xstrndup@@Base+0x64>
   19060:	add	w2, w1, #0x8
   19064:	str	w2, [sp, #104]
   19068:	cmp	w2, #0x0
   1906c:	b.gt	1903c <xstrndup@@Base+0xa8>
   19070:	add	x0, x25, w1, sxtw
   19074:	b	19048 <xstrndup@@Base+0xb4>
   19078:	add	x0, x20, #0x1
   1907c:	bl	ac40 <xmalloc@plt>
   19080:	mov	x23, x0
   19084:	mov	x25, x0
   19088:	cbnz	x21, 19094 <xstrndup@@Base+0x100>
   1908c:	strb	wzr, [x25]
   19090:	b	19014 <xstrndup@@Base+0x80>
   19094:	tbnz	w24, #31, 190d8 <xstrndup@@Base+0x144>
   19098:	add	x20, x22, #0xf
   1909c:	mov	w26, w24
   190a0:	and	x20, x20, #0xfffffffffffffff8
   190a4:	ldr	x24, [x22]
   190a8:	sub	x21, x21, #0x1
   190ac:	mov	x0, x24
   190b0:	bl	a780 <strlen@plt>
   190b4:	mov	x22, x0
   190b8:	mov	x2, x0
   190bc:	mov	x1, x24
   190c0:	mov	x0, x25
   190c4:	mov	w24, w26
   190c8:	add	x25, x25, x22
   190cc:	bl	a6f0 <memcpy@plt>
   190d0:	mov	x22, x20
   190d4:	b	19088 <xstrndup@@Base+0xf4>
   190d8:	add	w26, w24, #0x8
   190dc:	cmp	w26, #0x0
   190e0:	b.le	190f0 <xstrndup@@Base+0x15c>
   190e4:	add	x20, x22, #0xf
   190e8:	and	x20, x20, #0xfffffffffffffff8
   190ec:	b	190a4 <xstrndup@@Base+0x110>
   190f0:	ldr	x0, [x19, #8]
   190f4:	mov	x20, x22
   190f8:	add	x22, x0, w24, sxtw
   190fc:	b	190a4 <xstrndup@@Base+0x110>

0000000000019100 <xvasprintf@@Base>:
   19100:	stp	x29, x30, [sp, #-64]!
   19104:	mov	x3, x0
   19108:	mov	x2, x0
   1910c:	mov	x0, #0x0                   	// #0
   19110:	mov	x29, sp
   19114:	ldrb	w4, [x2]
   19118:	cbnz	w4, 1913c <xvasprintf@@Base+0x3c>
   1911c:	ldp	x2, x3, [x1]
   19120:	stp	x2, x3, [sp, #16]
   19124:	ldp	x2, x3, [x1, #16]
   19128:	add	x1, sp, #0x10
   1912c:	stp	x2, x3, [sp, #32]
   19130:	bl	18fb0 <xstrndup@@Base+0x1c>
   19134:	ldp	x29, x30, [sp], #64
   19138:	ret
   1913c:	cmp	w4, #0x25
   19140:	b.ne	1915c <xvasprintf@@Base+0x5c>  // b.any
   19144:	ldrb	w4, [x2, #1]
   19148:	cmp	w4, #0x73
   1914c:	b.ne	1915c <xvasprintf@@Base+0x5c>  // b.any
   19150:	add	x2, x2, #0x2
   19154:	add	x0, x0, #0x1
   19158:	b	19114 <xvasprintf@@Base+0x14>
   1915c:	ldp	x4, x5, [x1]
   19160:	stp	x4, x5, [sp, #16]
   19164:	add	x2, sp, #0x10
   19168:	ldp	x0, x1, [x1, #16]
   1916c:	stp	x0, x1, [sp, #32]
   19170:	mov	x1, x3
   19174:	add	x0, sp, #0x38
   19178:	bl	b120 <vasprintf@plt>
   1917c:	tbz	w0, #31, 19198 <xvasprintf@@Base+0x98>
   19180:	bl	b540 <__errno_location@plt>
   19184:	ldr	w1, [x0]
   19188:	mov	x0, #0x0                   	// #0
   1918c:	cmp	w1, #0xc
   19190:	b.ne	19134 <xvasprintf@@Base+0x34>  // b.any
   19194:	bl	ae30 <xalloc_die@plt>
   19198:	ldr	x0, [sp, #56]
   1919c:	b	19134 <xvasprintf@@Base+0x34>

00000000000191a0 <xasprintf@@Base>:
   191a0:	stp	x29, x30, [sp, #-272]!
   191a4:	mov	x29, sp
   191a8:	stp	x1, x2, [sp, #216]
   191ac:	add	x1, sp, #0x110
   191b0:	stp	x1, x1, [sp, #48]
   191b4:	add	x1, sp, #0xd0
   191b8:	str	x1, [sp, #64]
   191bc:	mov	w1, #0xffffffc8            	// #-56
   191c0:	str	w1, [sp, #72]
   191c4:	mov	w1, #0xffffff80            	// #-128
   191c8:	str	w1, [sp, #76]
   191cc:	add	x1, sp, #0x10
   191d0:	stp	x3, x4, [sp, #232]
   191d4:	ldp	x2, x3, [sp, #48]
   191d8:	stp	x2, x3, [sp, #16]
   191dc:	ldp	x2, x3, [sp, #64]
   191e0:	stp	x2, x3, [sp, #32]
   191e4:	str	q0, [sp, #80]
   191e8:	str	q1, [sp, #96]
   191ec:	str	q2, [sp, #112]
   191f0:	str	q3, [sp, #128]
   191f4:	str	q4, [sp, #144]
   191f8:	str	q5, [sp, #160]
   191fc:	str	q6, [sp, #176]
   19200:	str	q7, [sp, #192]
   19204:	stp	x5, x6, [sp, #248]
   19208:	str	x7, [sp, #264]
   1920c:	bl	b450 <xvasprintf@plt>
   19210:	ldp	x29, x30, [sp], #272
   19214:	ret

0000000000019218 <asnprintf@@Base>:
   19218:	stp	x29, x30, [sp, #-256]!
   1921c:	mov	x29, sp
   19220:	stp	x3, x4, [sp, #216]
   19224:	add	x3, sp, #0x100
   19228:	stp	x3, x3, [sp, #48]
   1922c:	add	x3, sp, #0xd0
   19230:	str	x3, [sp, #64]
   19234:	mov	w3, #0xffffffd8            	// #-40
   19238:	str	w3, [sp, #72]
   1923c:	mov	w3, #0xffffff80            	// #-128
   19240:	str	w3, [sp, #76]
   19244:	add	x3, sp, #0x10
   19248:	stp	x5, x6, [sp, #232]
   1924c:	ldp	x4, x5, [sp, #48]
   19250:	stp	x4, x5, [sp, #16]
   19254:	ldp	x4, x5, [sp, #64]
   19258:	stp	x4, x5, [sp, #32]
   1925c:	str	q0, [sp, #80]
   19260:	str	q1, [sp, #96]
   19264:	str	q2, [sp, #112]
   19268:	str	q3, [sp, #128]
   1926c:	str	q4, [sp, #144]
   19270:	str	q5, [sp, #160]
   19274:	str	q6, [sp, #176]
   19278:	str	q7, [sp, #192]
   1927c:	str	x7, [sp, #248]
   19280:	bl	b0d0 <vasnprintf@plt>
   19284:	ldp	x29, x30, [sp], #256
   19288:	ret
   1928c:	tbnz	w0, #31, 192c8 <asnprintf@@Base+0xb0>
   19290:	stp	x29, x30, [sp, #-16]!
   19294:	mov	x29, sp
   19298:	bl	add0 <close@plt>
   1929c:	cbz	w0, 192c0 <asnprintf@@Base+0xa8>
   192a0:	adrp	x3, 28000 <vasnprintf@@Base+0x2170>
   192a4:	adrp	x1, 28000 <vasnprintf@@Base+0x2170>
   192a8:	adrp	x0, 28000 <vasnprintf@@Base+0x2170>
   192ac:	add	x3, x3, #0xf42
   192b0:	add	x1, x1, #0xee6
   192b4:	add	x0, x0, #0xef3
   192b8:	mov	w2, #0x40                  	// #64
   192bc:	bl	b530 <__assert_fail@plt>
   192c0:	ldp	x29, x30, [sp], #16
   192c4:	ret
   192c8:	ret
   192cc:	stp	x29, x30, [sp, #-32]!
   192d0:	mov	w2, #0x4900                	// #18688
   192d4:	mov	x29, sp
   192d8:	stp	x19, x20, [sp, #16]
   192dc:	mov	x19, x0
   192e0:	ldr	w0, [x0]
   192e4:	bl	b520 <openat@plt>
   192e8:	tbnz	w0, #31, 1930c <asnprintf@@Base+0xf4>
   192ec:	mov	w20, w0
   192f0:	ldr	w0, [x19]
   192f4:	bl	1928c <asnprintf@@Base+0x74>
   192f8:	str	w20, [x19]
   192fc:	mov	w0, #0x0                   	// #0
   19300:	ldp	x19, x20, [sp, #16]
   19304:	ldp	x29, x30, [sp], #32
   19308:	ret
   1930c:	mov	w0, #0xffffffff            	// #-1
   19310:	b	19300 <asnprintf@@Base+0xe8>

0000000000019314 <chdir_long@@Base>:
   19314:	stp	x29, x30, [sp, #-96]!
   19318:	mov	x29, sp
   1931c:	stp	x19, x20, [sp, #16]
   19320:	stp	x21, x22, [sp, #32]
   19324:	mov	x21, x0
   19328:	stp	x23, x24, [sp, #48]
   1932c:	str	x25, [sp, #64]
   19330:	bl	b030 <chdir@plt>
   19334:	mov	w19, w0
   19338:	cbz	w0, 194c0 <chdir_long@@Base+0x1ac>
   1933c:	bl	b540 <__errno_location@plt>
   19340:	mov	x20, x0
   19344:	ldr	w0, [x0]
   19348:	cmp	w0, #0x24
   1934c:	b.ne	194c0 <chdir_long@@Base+0x1ac>  // b.any
   19350:	mov	x0, x21
   19354:	bl	a780 <strlen@plt>
   19358:	mov	x22, x0
   1935c:	mov	w0, #0xffffff9c            	// #-100
   19360:	str	w0, [sp, #88]
   19364:	cbnz	x22, 1938c <chdir_long@@Base+0x78>
   19368:	adrp	x3, 28000 <vasnprintf@@Base+0x2170>
   1936c:	add	x3, x3, #0xf42
   19370:	adrp	x1, 28000 <vasnprintf@@Base+0x2170>
   19374:	adrp	x0, 28000 <vasnprintf@@Base+0x2170>
   19378:	add	x3, x3, #0x9
   1937c:	add	x1, x1, #0xee6
   19380:	add	x0, x0, #0xf00
   19384:	mov	w2, #0x7e                  	// #126
   19388:	bl	b530 <__assert_fail@plt>
   1938c:	cmp	x22, #0xfff
   19390:	b.hi	193b8 <chdir_long@@Base+0xa4>  // b.pmore
   19394:	adrp	x3, 28000 <vasnprintf@@Base+0x2170>
   19398:	add	x3, x3, #0xf42
   1939c:	adrp	x1, 28000 <vasnprintf@@Base+0x2170>
   193a0:	adrp	x0, 28000 <vasnprintf@@Base+0x2170>
   193a4:	add	x3, x3, #0x9
   193a8:	add	x1, x1, #0xee6
   193ac:	add	x0, x0, #0xf08
   193b0:	mov	w2, #0x7f                  	// #127
   193b4:	b	19388 <chdir_long@@Base+0x74>
   193b8:	adrp	x23, 29000 <vasnprintf@@Base+0x3170>
   193bc:	add	x24, x23, #0xc9
   193c0:	mov	x1, x24
   193c4:	mov	x0, x21
   193c8:	bl	b160 <strspn@plt>
   193cc:	mov	x19, x0
   193d0:	cmp	x0, #0x2
   193d4:	b.ne	19458 <chdir_long@@Base+0x144>  // b.any
   193d8:	sub	x2, x22, #0x3
   193dc:	add	x0, x21, #0x3
   193e0:	mov	w1, #0x2f                  	// #47
   193e4:	bl	b2b0 <memchr@plt>
   193e8:	mov	x19, x0
   193ec:	cbnz	x0, 193f8 <chdir_long@@Base+0xe4>
   193f0:	mov	w19, #0xffffffff            	// #-1
   193f4:	b	194c0 <chdir_long@@Base+0x1ac>
   193f8:	strb	wzr, [x0]
   193fc:	mov	x1, x21
   19400:	add	x0, sp, #0x58
   19404:	bl	192cc <asnprintf@@Base+0xb4>
   19408:	mov	w1, #0x2f                  	// #47
   1940c:	strb	w1, [x19]
   19410:	cbnz	w0, 19594 <chdir_long@@Base+0x280>
   19414:	add	x19, x19, #0x1
   19418:	mov	x1, x24
   1941c:	mov	x0, x19
   19420:	bl	b160 <strspn@plt>
   19424:	add	x19, x19, x0
   19428:	ldrb	w0, [x19]
   1942c:	cmp	w0, #0x2f
   19430:	b.ne	1947c <chdir_long@@Base+0x168>  // b.any
   19434:	adrp	x3, 28000 <vasnprintf@@Base+0x2170>
   19438:	add	x3, x3, #0xf42
   1943c:	adrp	x1, 28000 <vasnprintf@@Base+0x2170>
   19440:	adrp	x0, 28000 <vasnprintf@@Base+0x2170>
   19444:	add	x3, x3, #0x9
   19448:	add	x1, x1, #0xee6
   1944c:	add	x0, x0, #0xf14
   19450:	mov	w2, #0xa2                  	// #162
   19454:	b	19388 <chdir_long@@Base+0x74>
   19458:	cbz	x0, 19474 <chdir_long@@Base+0x160>
   1945c:	mov	x1, x24
   19460:	add	x0, sp, #0x58
   19464:	bl	192cc <asnprintf@@Base+0xb4>
   19468:	cbnz	w0, 19594 <chdir_long@@Base+0x280>
   1946c:	add	x19, x21, x19
   19470:	b	19428 <chdir_long@@Base+0x114>
   19474:	mov	x19, x21
   19478:	b	19428 <chdir_long@@Base+0x114>
   1947c:	add	x21, x21, x22
   19480:	cmp	x19, x21
   19484:	b.hi	194dc <chdir_long@@Base+0x1c8>  // b.pmore
   19488:	add	x22, sp, #0x58
   1948c:	add	x25, x23, #0xc9
   19490:	mov	w24, #0x2f                  	// #47
   19494:	sub	x0, x21, x19
   19498:	cmp	x0, #0xfff
   1949c:	b.gt	19500 <chdir_long@@Base+0x1ec>
   194a0:	cmp	x19, x21
   194a4:	b.cc	19584 <chdir_long@@Base+0x270>  // b.lo, b.ul, b.last
   194a8:	ldr	w0, [sp, #88]
   194ac:	bl	a7e0 <fchdir@plt>
   194b0:	mov	w19, w0
   194b4:	cbnz	w0, 19594 <chdir_long@@Base+0x280>
   194b8:	ldr	w0, [sp, #88]
   194bc:	bl	1928c <asnprintf@@Base+0x74>
   194c0:	mov	w0, w19
   194c4:	ldp	x19, x20, [sp, #16]
   194c8:	ldp	x21, x22, [sp, #32]
   194cc:	ldp	x23, x24, [sp, #48]
   194d0:	ldr	x25, [sp, #64]
   194d4:	ldp	x29, x30, [sp], #96
   194d8:	ret
   194dc:	adrp	x3, 28000 <vasnprintf@@Base+0x2170>
   194e0:	add	x3, x3, #0xf42
   194e4:	adrp	x1, 28000 <vasnprintf@@Base+0x2170>
   194e8:	adrp	x0, 28000 <vasnprintf@@Base+0x2170>
   194ec:	add	x3, x3, #0x9
   194f0:	add	x1, x1, #0xee6
   194f4:	add	x0, x0, #0xf20
   194f8:	mov	w2, #0xa3                  	// #163
   194fc:	b	19388 <chdir_long@@Base+0x74>
   19500:	mov	x0, x19
   19504:	mov	x2, #0x1000                	// #4096
   19508:	mov	w1, #0x2f                  	// #47
   1950c:	bl	b1c0 <memrchr@plt>
   19510:	mov	x23, x0
   19514:	cbnz	x0, 19524 <chdir_long@@Base+0x210>
   19518:	mov	w0, #0x24                  	// #36
   1951c:	str	w0, [x20]
   19520:	b	193f0 <chdir_long@@Base+0xdc>
   19524:	strb	wzr, [x0]
   19528:	sub	x0, x0, x19
   1952c:	cmp	x0, #0xfff
   19530:	b.le	19558 <chdir_long@@Base+0x244>
   19534:	adrp	x3, 28000 <vasnprintf@@Base+0x2170>
   19538:	add	x3, x3, #0xf42
   1953c:	adrp	x1, 28000 <vasnprintf@@Base+0x2170>
   19540:	adrp	x0, 28000 <vasnprintf@@Base+0x2170>
   19544:	add	x3, x3, #0x9
   19548:	add	x1, x1, #0xee6
   1954c:	add	x0, x0, #0xf2f
   19550:	mov	w2, #0xb3                  	// #179
   19554:	b	19388 <chdir_long@@Base+0x74>
   19558:	mov	x1, x19
   1955c:	mov	x0, x22
   19560:	bl	192cc <asnprintf@@Base+0xb4>
   19564:	strb	w24, [x23]
   19568:	cbnz	w0, 19594 <chdir_long@@Base+0x280>
   1956c:	add	x19, x23, #0x1
   19570:	mov	x1, x25
   19574:	mov	x0, x19
   19578:	bl	b160 <strspn@plt>
   1957c:	add	x19, x19, x0
   19580:	b	19494 <chdir_long@@Base+0x180>
   19584:	mov	x1, x19
   19588:	add	x0, sp, #0x58
   1958c:	bl	192cc <asnprintf@@Base+0xb4>
   19590:	cbz	w0, 194a8 <chdir_long@@Base+0x194>
   19594:	ldr	w0, [sp, #88]
   19598:	ldr	w19, [x20]
   1959c:	bl	1928c <asnprintf@@Base+0x74>
   195a0:	str	w19, [x20]
   195a4:	b	193f0 <chdir_long@@Base+0xdc>

00000000000195a8 <rpl_fcntl@@Base>:
   195a8:	stp	x29, x30, [sp, #-128]!
   195ac:	mov	x29, sp
   195b0:	stp	x2, x3, [sp, #96]
   195b4:	add	x2, sp, #0x80
   195b8:	stp	x2, x2, [sp, #64]
   195bc:	add	x2, sp, #0x60
   195c0:	stp	x19, x20, [sp, #16]
   195c4:	stp	x21, x22, [sp, #32]
   195c8:	str	x23, [sp, #48]
   195cc:	str	x2, [sp, #80]
   195d0:	mov	w2, #0xffffffe0            	// #-32
   195d4:	str	w2, [sp, #88]
   195d8:	str	wzr, [sp, #92]
   195dc:	stp	x4, x5, [sp, #112]
   195e0:	cbz	w1, 19628 <rpl_fcntl@@Base+0x80>
   195e4:	mov	w20, w0
   195e8:	mov	w6, w1
   195ec:	cmp	w1, #0x406
   195f0:	b.eq	19634 <rpl_fcntl@@Base+0x8c>  // b.none
   195f4:	cmp	w1, #0xb
   195f8:	b.gt	19738 <rpl_fcntl@@Base+0x190>
   195fc:	cmp	w1, #0x0
   19600:	b.le	19744 <rpl_fcntl@@Base+0x19c>
   19604:	sub	w1, w1, #0x1
   19608:	cmp	w1, #0xa
   1960c:	b.hi	19744 <rpl_fcntl@@Base+0x19c>  // b.pmore
   19610:	adrp	x0, 28000 <vasnprintf@@Base+0x2170>
   19614:	add	x0, x0, #0xf58
   19618:	ldrb	w0, [x0, w1, uxtw]
   1961c:	adr	x1, 19628 <rpl_fcntl@@Base+0x80>
   19620:	add	x0, x1, w0, sxtb #2
   19624:	br	x0
   19628:	ldr	w2, [sp, #96]
   1962c:	bl	b220 <fcntl@plt>
   19630:	b	19780 <rpl_fcntl@@Base+0x1d8>
   19634:	adrp	x21, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
   19638:	mov	w2, #0xffffffe8            	// #-24
   1963c:	str	w2, [sp, #88]
   19640:	mov	x23, x21
   19644:	ldr	w2, [x21, #1432]
   19648:	ldr	w22, [sp, #96]
   1964c:	tbnz	w2, #31, 196e0 <rpl_fcntl@@Base+0x138>
   19650:	mov	w2, w22
   19654:	bl	b220 <fcntl@plt>
   19658:	mov	w19, w0
   1965c:	tbz	w0, #31, 19670 <rpl_fcntl@@Base+0xc8>
   19660:	bl	b540 <__errno_location@plt>
   19664:	ldr	w0, [x0]
   19668:	cmp	w0, #0x16
   1966c:	b.eq	19690 <rpl_fcntl@@Base+0xe8>  // b.none
   19670:	mov	w0, #0x1                   	// #1
   19674:	str	w0, [x23, #1432]
   19678:	mov	w0, w19
   1967c:	ldp	x19, x20, [sp, #16]
   19680:	ldp	x21, x22, [sp, #32]
   19684:	ldr	x23, [sp, #48]
   19688:	ldp	x29, x30, [sp], #128
   1968c:	ret
   19690:	mov	w2, w22
   19694:	mov	w0, w20
   19698:	mov	w1, #0x0                   	// #0
   1969c:	bl	b220 <fcntl@plt>
   196a0:	mov	w19, w0
   196a4:	tbnz	w0, #31, 19678 <rpl_fcntl@@Base+0xd0>
   196a8:	mov	w0, #0xffffffff            	// #-1
   196ac:	str	w0, [x21, #1432]
   196b0:	mov	w0, w19
   196b4:	mov	w1, #0x1                   	// #1
   196b8:	bl	b220 <fcntl@plt>
   196bc:	tbz	w0, #31, 19704 <rpl_fcntl@@Base+0x15c>
   196c0:	bl	b540 <__errno_location@plt>
   196c4:	mov	x20, x0
   196c8:	mov	w0, w19
   196cc:	mov	w19, #0xffffffff            	// #-1
   196d0:	ldr	w21, [x20]
   196d4:	bl	add0 <close@plt>
   196d8:	str	w21, [x20]
   196dc:	b	19678 <rpl_fcntl@@Base+0xd0>
   196e0:	mov	w2, w22
   196e4:	mov	w1, #0x0                   	// #0
   196e8:	bl	b220 <fcntl@plt>
   196ec:	mov	w19, w0
   196f0:	tbnz	w0, #31, 19678 <rpl_fcntl@@Base+0xd0>
   196f4:	ldr	w0, [x21, #1432]
   196f8:	cmn	w0, #0x1
   196fc:	b.ne	19678 <rpl_fcntl@@Base+0xd0>  // b.any
   19700:	b	196b0 <rpl_fcntl@@Base+0x108>
   19704:	orr	w2, w0, #0x1
   19708:	mov	w1, #0x2                   	// #2
   1970c:	mov	w0, w19
   19710:	bl	b220 <fcntl@plt>
   19714:	cmn	w0, #0x1
   19718:	b.ne	19678 <rpl_fcntl@@Base+0xd0>  // b.any
   1971c:	b	196c0 <rpl_fcntl@@Base+0x118>
   19720:	adrp	x0, 28000 <vasnprintf@@Base+0x2170>
   19724:	add	x0, x0, #0xf64
   19728:	ldrb	w0, [x0, w1, uxtw]
   1972c:	adr	x1, 19738 <rpl_fcntl@@Base+0x190>
   19730:	add	x0, x1, w0, sxtb #2
   19734:	br	x0
   19738:	sub	w1, w1, #0x400
   1973c:	cmp	w1, #0xa
   19740:	b.ls	19720 <rpl_fcntl@@Base+0x178>  // b.plast
   19744:	ldr	w1, [sp, #88]
   19748:	ldr	x0, [sp, #64]
   1974c:	tbz	w1, #31, 19760 <rpl_fcntl@@Base+0x1b8>
   19750:	cmn	w1, #0x7
   19754:	b.ge	19760 <rpl_fcntl@@Base+0x1b8>  // b.tcont
   19758:	ldr	x0, [sp, #72]
   1975c:	add	x0, x0, w1, sxtw
   19760:	ldr	x2, [x0]
   19764:	mov	w1, w6
   19768:	mov	w0, w20
   1976c:	bl	b220 <fcntl@plt>
   19770:	b	19780 <rpl_fcntl@@Base+0x1d8>
   19774:	mov	w1, w6
   19778:	mov	w0, w20
   1977c:	bl	b220 <fcntl@plt>
   19780:	mov	w19, w0
   19784:	b	19678 <rpl_fcntl@@Base+0xd0>
   19788:	ldr	w1, [sp, #88]
   1978c:	ldr	x0, [sp, #64]
   19790:	tbz	w1, #31, 197a4 <rpl_fcntl@@Base+0x1fc>
   19794:	cmn	w1, #0x7
   19798:	b.ge	197a4 <rpl_fcntl@@Base+0x1fc>  // b.tcont
   1979c:	ldr	x0, [sp, #72]
   197a0:	add	x0, x0, w1, sxtw
   197a4:	ldr	w2, [x0]
   197a8:	mov	w1, w6
   197ac:	mov	w0, w20
   197b0:	b	1962c <rpl_fcntl@@Base+0x84>
   197b4:	ldp	w10, w2, [x1, #44]
   197b8:	ldr	w8, [x1]
   197bc:	mov	w6, w10
   197c0:	add	x11, x0, w2, sxtw #3
   197c4:	mov	w4, w8
   197c8:	cmp	w4, w2
   197cc:	ccmp	w6, w2, #0x0, gt
   197d0:	b.lt	197e4 <rpl_fcntl@@Base+0x23c>  // b.tstop
   197d4:	sub	w2, w8, w2
   197d8:	add	w2, w2, w10
   197dc:	stp	w2, w8, [x1, #44]
   197e0:	ret
   197e4:	sxtw	x3, w6
   197e8:	sub	w5, w4, w2
   197ec:	sub	w7, w2, w6
   197f0:	cmp	w5, w7
   197f4:	add	x3, x0, x3, lsl #3
   197f8:	b.le	19830 <rpl_fcntl@@Base+0x288>
   197fc:	sxtw	x5, w4
   19800:	sub	w4, w4, w7
   19804:	sub	x5, x5, w7, sxtw
   19808:	mov	w9, #0x0                   	// #0
   1980c:	add	x5, x0, x5, lsl #3
   19810:	ldr	x13, [x5]
   19814:	add	w9, w9, #0x1
   19818:	ldr	x12, [x3]
   1981c:	str	x13, [x3], #8
   19820:	str	x12, [x5], #8
   19824:	cmp	w7, w9
   19828:	b.ne	19810 <rpl_fcntl@@Base+0x268>  // b.any
   1982c:	b	197c8 <rpl_fcntl@@Base+0x220>
   19830:	mov	x9, x11
   19834:	mov	w7, #0x0                   	// #0
   19838:	ldr	x13, [x9]
   1983c:	add	w7, w7, #0x1
   19840:	ldr	x12, [x3]
   19844:	str	x13, [x3], #8
   19848:	str	x12, [x9], #8
   1984c:	cmp	w5, w7
   19850:	b.ne	19838 <rpl_fcntl@@Base+0x290>  // b.any
   19854:	add	w6, w6, w5
   19858:	b	197c8 <rpl_fcntl@@Base+0x220>
   1985c:	stp	x29, x30, [sp, #-176]!
   19860:	mov	x29, sp
   19864:	stp	x25, x26, [sp, #64]
   19868:	ldr	x25, [x6, #32]
   1986c:	stp	x23, x24, [sp, #48]
   19870:	ldr	x23, [sp, #176]
   19874:	stp	x19, x20, [sp, #16]
   19878:	mov	x20, x1
   1987c:	mov	x19, x6
   19880:	stp	x21, x22, [sp, #32]
   19884:	mov	w22, w7
   19888:	mov	x21, x25
   1988c:	stp	x27, x28, [sp, #80]
   19890:	stp	x3, x2, [sp, #128]
   19894:	str	x4, [sp, #144]
   19898:	str	w5, [sp, #156]
   1989c:	str	w0, [sp, #168]
   198a0:	ldrb	w0, [x21]
   198a4:	cmp	w0, #0x3d
   198a8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   198ac:	b.ne	19998 <rpl_fcntl@@Base+0x3f0>  // b.any
   198b0:	ldr	x28, [sp, #128]
   198b4:	sub	x0, x21, x25
   198b8:	mov	w24, #0x0                   	// #0
   198bc:	str	x0, [sp, #120]
   198c0:	ldr	x26, [x28]
   198c4:	cbnz	x26, 199a0 <rpl_fcntl@@Base+0x3f8>
   198c8:	ldr	x27, [sp, #128]
   198cc:	mov	w0, #0xffffffff            	// #-1
   198d0:	mov	x28, #0x0                   	// #0
   198d4:	mov	w4, #0x0                   	// #0
   198d8:	str	xzr, [sp, #104]
   198dc:	str	w0, [sp, #116]
   198e0:	sxtw	x0, w24
   198e4:	str	wzr, [sp, #152]
   198e8:	str	x0, [sp, #160]
   198ec:	ldr	x0, [x27]
   198f0:	cbnz	x0, 199d4 <rpl_fcntl@@Base+0x42c>
   198f4:	cmp	x26, #0x0
   198f8:	ccmp	w4, #0x0, #0x0, eq  // eq = none
   198fc:	b.eq	19b1c <rpl_fcntl@@Base+0x574>  // b.none
   19900:	cbz	w22, 19944 <rpl_fcntl@@Base+0x39c>
   19904:	adrp	x21, 40000 <vasnprintf@@Base+0x1a170>
   19908:	adrp	x22, 27000 <vasnprintf@@Base+0x1170>
   1990c:	ldr	x21, [x21, #3816]
   19910:	ldr	x25, [x21]
   19914:	cbz	w4, 19a8c <rpl_fcntl@@Base+0x4e4>
   19918:	mov	w2, #0x5                   	// #5
   1991c:	add	x0, x22, #0x2ee
   19920:	adrp	x1, 28000 <vasnprintf@@Base+0x2170>
   19924:	add	x1, x1, #0xf6f
   19928:	bl	b3f0 <dcgettext@plt>
   1992c:	mov	x1, x0
   19930:	ldr	x2, [x20]
   19934:	mov	x3, x23
   19938:	ldr	x4, [x19, #32]
   1993c:	mov	x0, x25
   19940:	bl	b640 <fprintf@plt>
   19944:	ldr	w0, [sp, #152]
   19948:	cbz	w0, 19954 <rpl_fcntl@@Base+0x3ac>
   1994c:	mov	x0, x26
   19950:	bl	b050 <free@plt>
   19954:	ldr	x20, [x19, #32]
   19958:	mov	x0, x20
   1995c:	bl	a780 <strlen@plt>
   19960:	add	x20, x20, x0
   19964:	str	x20, [x19, #32]
   19968:	ldr	w0, [x19]
   1996c:	str	wzr, [x19, #8]
   19970:	add	w0, w0, #0x1
   19974:	str	w0, [x19]
   19978:	mov	w0, #0x3f                  	// #63
   1997c:	ldp	x19, x20, [sp, #16]
   19980:	ldp	x21, x22, [sp, #32]
   19984:	ldp	x23, x24, [sp, #48]
   19988:	ldp	x25, x26, [sp, #64]
   1998c:	ldp	x27, x28, [sp, #80]
   19990:	ldp	x29, x30, [sp], #176
   19994:	ret
   19998:	add	x21, x21, #0x1
   1999c:	b	198a0 <rpl_fcntl@@Base+0x2f8>
   199a0:	ldr	x2, [sp, #120]
   199a4:	mov	x1, x25
   199a8:	mov	x0, x26
   199ac:	bl	abd0 <strncmp@plt>
   199b0:	cbnz	w0, 199c8 <rpl_fcntl@@Base+0x420>
   199b4:	mov	x0, x26
   199b8:	bl	a780 <strlen@plt>
   199bc:	ldr	x1, [sp, #120]
   199c0:	cmp	x0, x1
   199c4:	b.eq	19b94 <rpl_fcntl@@Base+0x5ec>  // b.none
   199c8:	add	x28, x28, #0x20
   199cc:	add	w24, w24, #0x1
   199d0:	b	198c0 <rpl_fcntl@@Base+0x318>
   199d4:	ldr	x2, [sp, #120]
   199d8:	mov	x1, x25
   199dc:	str	w4, [sp, #172]
   199e0:	bl	abd0 <strncmp@plt>
   199e4:	ldr	w4, [sp, #172]
   199e8:	cbnz	w0, 19a68 <rpl_fcntl@@Base+0x4c0>
   199ec:	cbz	x28, 19a7c <rpl_fcntl@@Base+0x4d4>
   199f0:	ldr	w0, [sp, #156]
   199f4:	cbnz	w0, 19a28 <rpl_fcntl@@Base+0x480>
   199f8:	ldr	w0, [x27, #8]
   199fc:	ldr	w1, [x28, #8]
   19a00:	cmp	w1, w0
   19a04:	b.ne	19a28 <rpl_fcntl@@Base+0x480>  // b.any
   19a08:	ldr	x0, [x27, #16]
   19a0c:	ldr	x1, [x28, #16]
   19a10:	cmp	x1, x0
   19a14:	b.ne	19a28 <rpl_fcntl@@Base+0x480>  // b.any
   19a18:	ldr	w0, [x27, #24]
   19a1c:	ldr	w1, [x28, #24]
   19a20:	cmp	w1, w0
   19a24:	b.eq	19a68 <rpl_fcntl@@Base+0x4c0>  // b.none
   19a28:	cbnz	w4, 19a68 <rpl_fcntl@@Base+0x4c0>
   19a2c:	cbz	w22, 19a54 <rpl_fcntl@@Base+0x4ac>
   19a30:	cbnz	x26, 19a5c <rpl_fcntl@@Base+0x4b4>
   19a34:	ldr	x0, [sp, #160]
   19a38:	str	w4, [sp, #172]
   19a3c:	bl	aab0 <malloc@plt>
   19a40:	mov	x26, x0
   19a44:	ldr	w4, [sp, #172]
   19a48:	cbnz	x0, 19cc8 <rpl_fcntl@@Base+0x720>
   19a4c:	mov	w4, #0x1                   	// #1
   19a50:	b	19a68 <rpl_fcntl@@Base+0x4c0>
   19a54:	mov	w4, #0x1                   	// #1
   19a58:	cbz	x26, 19a68 <rpl_fcntl@@Base+0x4c0>
   19a5c:	ldr	x0, [sp, #104]
   19a60:	mov	w1, #0x1                   	// #1
   19a64:	strb	w1, [x26, x0]
   19a68:	ldr	x0, [sp, #104]
   19a6c:	add	x27, x27, #0x20
   19a70:	add	x0, x0, #0x1
   19a74:	str	x0, [sp, #104]
   19a78:	b	198ec <rpl_fcntl@@Base+0x344>
   19a7c:	ldr	w0, [sp, #104]
   19a80:	mov	x28, x27
   19a84:	str	w0, [sp, #116]
   19a88:	b	19a68 <rpl_fcntl@@Base+0x4c0>
   19a8c:	mov	x0, x25
   19a90:	bl	a800 <flockfile@plt>
   19a94:	add	x0, x22, #0x2ee
   19a98:	mov	w2, #0x5                   	// #5
   19a9c:	adrp	x1, 28000 <vasnprintf@@Base+0x2170>
   19aa0:	add	x1, x1, #0xf8f
   19aa4:	ldr	x25, [x21]
   19aa8:	bl	b3f0 <dcgettext@plt>
   19aac:	ldr	x2, [x20]
   19ab0:	adrp	x22, 28000 <vasnprintf@@Base+0x2170>
   19ab4:	ldr	x4, [x19, #32]
   19ab8:	add	x22, x22, #0xfbe
   19abc:	mov	x20, #0x0                   	// #0
   19ac0:	mov	x1, x0
   19ac4:	mov	x3, x23
   19ac8:	mov	x0, x25
   19acc:	bl	b640 <fprintf@plt>
   19ad0:	cmp	w24, w20
   19ad4:	ldr	x0, [x21]
   19ad8:	b.gt	19af4 <rpl_fcntl@@Base+0x54c>
   19adc:	mov	x1, x0
   19ae0:	mov	w0, #0xa                   	// #10
   19ae4:	bl	a960 <fputc@plt>
   19ae8:	ldr	x0, [x21]
   19aec:	bl	ab20 <funlockfile@plt>
   19af0:	b	19944 <rpl_fcntl@@Base+0x39c>
   19af4:	ldrb	w1, [x26, x20]
   19af8:	cbz	w1, 19b14 <rpl_fcntl@@Base+0x56c>
   19afc:	ldr	x2, [sp, #128]
   19b00:	lsl	x1, x20, #5
   19b04:	ldr	x3, [x2, x1]
   19b08:	mov	x2, x23
   19b0c:	mov	x1, x22
   19b10:	bl	b640 <fprintf@plt>
   19b14:	add	x20, x20, #0x1
   19b18:	b	19ad0 <rpl_fcntl@@Base+0x528>
   19b1c:	cbnz	x28, 19b98 <rpl_fcntl@@Base+0x5f0>
   19b20:	ldr	w0, [sp, #156]
   19b24:	cbz	w0, 19b4c <rpl_fcntl@@Base+0x5a4>
   19b28:	ldrsw	x0, [x19]
   19b2c:	ldr	x0, [x20, x0, lsl #3]
   19b30:	ldrb	w0, [x0, #1]
   19b34:	cmp	w0, #0x2d
   19b38:	b.eq	19b4c <rpl_fcntl@@Base+0x5a4>  // b.none
   19b3c:	ldrb	w1, [x25]
   19b40:	ldr	x0, [sp, #136]
   19b44:	bl	b190 <strchr@plt>
   19b48:	cbnz	x0, 19cc0 <rpl_fcntl@@Base+0x718>
   19b4c:	cbz	w22, 19b8c <rpl_fcntl@@Base+0x5e4>
   19b50:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   19b54:	mov	w2, #0x5                   	// #5
   19b58:	adrp	x1, 28000 <vasnprintf@@Base+0x2170>
   19b5c:	add	x1, x1, #0xfc6
   19b60:	ldr	x0, [x0, #3816]
   19b64:	ldr	x21, [x0]
   19b68:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   19b6c:	add	x0, x0, #0x2ee
   19b70:	bl	b3f0 <dcgettext@plt>
   19b74:	ldr	x2, [x20]
   19b78:	mov	x1, x0
   19b7c:	ldr	x4, [x19, #32]
   19b80:	mov	x3, x23
   19b84:	mov	x0, x21
   19b88:	bl	b640 <fprintf@plt>
   19b8c:	str	xzr, [x19, #32]
   19b90:	b	19968 <rpl_fcntl@@Base+0x3c0>
   19b94:	str	w24, [sp, #116]
   19b98:	ldr	w0, [x19]
   19b9c:	ldr	w2, [x28, #8]
   19ba0:	add	w1, w0, #0x1
   19ba4:	str	w1, [x19]
   19ba8:	str	xzr, [x19, #32]
   19bac:	ldrb	w3, [x21]
   19bb0:	cbz	w3, 19c34 <rpl_fcntl@@Base+0x68c>
   19bb4:	cbz	w2, 19be8 <rpl_fcntl@@Base+0x640>
   19bb8:	add	x21, x21, #0x1
   19bbc:	str	x21, [x19, #16]
   19bc0:	ldr	x0, [sp, #144]
   19bc4:	cbz	x0, 19bd0 <rpl_fcntl@@Base+0x628>
   19bc8:	ldr	w1, [sp, #116]
   19bcc:	str	w1, [x0]
   19bd0:	ldr	x1, [x28, #16]
   19bd4:	ldr	w0, [x28, #24]
   19bd8:	cbz	x1, 1997c <rpl_fcntl@@Base+0x3d4>
   19bdc:	str	w0, [x1]
   19be0:	mov	w0, #0x0                   	// #0
   19be4:	b	1997c <rpl_fcntl@@Base+0x3d4>
   19be8:	cbz	w22, 19c28 <rpl_fcntl@@Base+0x680>
   19bec:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   19bf0:	mov	w2, #0x5                   	// #5
   19bf4:	adrp	x1, 28000 <vasnprintf@@Base+0x2170>
   19bf8:	add	x1, x1, #0xfe6
   19bfc:	ldr	x0, [x0, #3816]
   19c00:	ldr	x21, [x0]
   19c04:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   19c08:	add	x0, x0, #0x2ee
   19c0c:	bl	b3f0 <dcgettext@plt>
   19c10:	ldr	x2, [x20]
   19c14:	mov	x1, x0
   19c18:	ldr	x4, [x28]
   19c1c:	mov	x3, x23
   19c20:	mov	x0, x21
   19c24:	bl	b640 <fprintf@plt>
   19c28:	ldr	w0, [x28, #24]
   19c2c:	str	w0, [x19, #8]
   19c30:	b	19978 <rpl_fcntl@@Base+0x3d0>
   19c34:	cmp	w2, #0x1
   19c38:	b.ne	19bc0 <rpl_fcntl@@Base+0x618>  // b.any
   19c3c:	ldr	w2, [sp, #168]
   19c40:	cmp	w1, w2
   19c44:	b.ge	19c5c <rpl_fcntl@@Base+0x6b4>  // b.tcont
   19c48:	add	w0, w0, #0x2
   19c4c:	str	w0, [x19]
   19c50:	ldr	x0, [x20, w1, sxtw #3]
   19c54:	str	x0, [x19, #16]
   19c58:	b	19bc0 <rpl_fcntl@@Base+0x618>
   19c5c:	cbz	w22, 19c9c <rpl_fcntl@@Base+0x6f4>
   19c60:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   19c64:	mov	w2, #0x5                   	// #5
   19c68:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   19c6c:	add	x1, x1, #0x13
   19c70:	ldr	x0, [x0, #3816]
   19c74:	ldr	x21, [x0]
   19c78:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   19c7c:	add	x0, x0, #0x2ee
   19c80:	bl	b3f0 <dcgettext@plt>
   19c84:	ldr	x2, [x20]
   19c88:	mov	x1, x0
   19c8c:	ldr	x4, [x28]
   19c90:	mov	x3, x23
   19c94:	mov	x0, x21
   19c98:	bl	b640 <fprintf@plt>
   19c9c:	ldr	w0, [x28, #24]
   19ca0:	mov	w1, #0x3f                  	// #63
   19ca4:	str	w0, [x19, #8]
   19ca8:	ldr	x0, [sp, #136]
   19cac:	ldrb	w0, [x0]
   19cb0:	cmp	w0, #0x3a
   19cb4:	mov	w0, #0x3a                  	// #58
   19cb8:	csel	w0, w0, w1, eq  // eq = none
   19cbc:	b	1997c <rpl_fcntl@@Base+0x3d4>
   19cc0:	mov	w0, #0xffffffff            	// #-1
   19cc4:	b	1997c <rpl_fcntl@@Base+0x3d4>
   19cc8:	ldr	x2, [sp, #160]
   19ccc:	mov	w1, #0x0                   	// #0
   19cd0:	str	w4, [sp, #172]
   19cd4:	bl	ac10 <memset@plt>
   19cd8:	ldr	w0, [sp, #116]
   19cdc:	mov	w1, #0x1                   	// #1
   19ce0:	ldr	w4, [sp, #172]
   19ce4:	strb	w1, [x26, w0, sxtw]
   19ce8:	mov	w0, #0x1                   	// #1
   19cec:	str	w0, [sp, #152]
   19cf0:	b	19a5c <rpl_fcntl@@Base+0x4b4>

0000000000019cf4 <_getopt_internal_r@@Base>:
   19cf4:	sub	sp, sp, #0x70
   19cf8:	cmp	w0, #0x0
   19cfc:	stp	x29, x30, [sp, #16]
   19d00:	add	x29, sp, #0x10
   19d04:	stp	x19, x20, [sp, #32]
   19d08:	stp	x21, x22, [sp, #48]
   19d0c:	stp	x23, x24, [sp, #64]
   19d10:	ldr	w24, [x6, #4]
   19d14:	stp	x25, x26, [sp, #80]
   19d18:	stp	x27, x28, [sp, #96]
   19d1c:	b.gt	19d44 <_getopt_internal_r@@Base+0x50>
   19d20:	mov	w0, #0xffffffff            	// #-1
   19d24:	ldp	x29, x30, [sp, #16]
   19d28:	ldp	x19, x20, [sp, #32]
   19d2c:	ldp	x21, x22, [sp, #48]
   19d30:	ldp	x23, x24, [sp, #64]
   19d34:	ldp	x25, x26, [sp, #80]
   19d38:	ldp	x27, x28, [sp, #96]
   19d3c:	add	sp, sp, #0x70
   19d40:	ret
   19d44:	mov	w23, w0
   19d48:	ldr	w0, [x6]
   19d4c:	str	xzr, [x6, #16]
   19d50:	mov	x22, x1
   19d54:	mov	x21, x2
   19d58:	mov	x25, x3
   19d5c:	mov	x26, x4
   19d60:	mov	w27, w5
   19d64:	mov	x19, x6
   19d68:	cbz	w0, 19d90 <_getopt_internal_r@@Base+0x9c>
   19d6c:	ldr	w0, [x6, #24]
   19d70:	cbz	w0, 19d98 <_getopt_internal_r@@Base+0xa4>
   19d74:	ldrb	w0, [x2]
   19d78:	mov	w1, #0x2b                  	// #43
   19d7c:	cmp	w0, #0x2d
   19d80:	ccmp	w0, w1, #0x4, ne  // ne = any
   19d84:	cset	x0, eq  // eq = none
   19d88:	add	x21, x2, x0
   19d8c:	b	19dc4 <_getopt_internal_r@@Base+0xd0>
   19d90:	mov	w0, #0x1                   	// #1
   19d94:	str	w0, [x6]
   19d98:	ldr	w0, [x19]
   19d9c:	str	xzr, [x19, #32]
   19da0:	stp	w0, w0, [x19, #44]
   19da4:	ldrb	w0, [x21]
   19da8:	cmp	w0, #0x2d
   19dac:	b.ne	19ec8 <_getopt_internal_r@@Base+0x1d4>  // b.any
   19db0:	mov	w0, #0x2                   	// #2
   19db4:	str	w0, [x19, #40]
   19db8:	add	x21, x21, #0x1
   19dbc:	mov	w0, #0x1                   	// #1
   19dc0:	str	w0, [x19, #24]
   19dc4:	ldrb	w0, [x21]
   19dc8:	cmp	w0, #0x3a
   19dcc:	ldr	x0, [x19, #32]
   19dd0:	csel	w24, w24, wzr, ne  // ne = any
   19dd4:	cbz	x0, 19de0 <_getopt_internal_r@@Base+0xec>
   19dd8:	ldrb	w0, [x0]
   19ddc:	cbnz	w0, 19f6c <_getopt_internal_r@@Base+0x278>
   19de0:	ldr	w0, [x19]
   19de4:	ldr	w1, [x19, #48]
   19de8:	cmp	w1, w0
   19dec:	b.le	19df4 <_getopt_internal_r@@Base+0x100>
   19df0:	str	w0, [x19, #48]
   19df4:	ldr	w1, [x19, #44]
   19df8:	cmp	w0, w1
   19dfc:	b.ge	19e04 <_getopt_internal_r@@Base+0x110>  // b.tcont
   19e00:	str	w0, [x19, #44]
   19e04:	ldr	w1, [x19, #40]
   19e08:	cmp	w1, #0x1
   19e0c:	b.ne	19e58 <_getopt_internal_r@@Base+0x164>  // b.any
   19e10:	ldp	w1, w2, [x19, #44]
   19e14:	cmp	w1, w2
   19e18:	b.eq	19f00 <_getopt_internal_r@@Base+0x20c>  // b.none
   19e1c:	cmp	w0, w2
   19e20:	b.eq	19e30 <_getopt_internal_r@@Base+0x13c>  // b.none
   19e24:	mov	x1, x19
   19e28:	mov	x0, x22
   19e2c:	bl	197b4 <rpl_fcntl@@Base+0x20c>
   19e30:	ldr	w0, [x19]
   19e34:	cmp	w0, w23
   19e38:	b.ge	19e54 <_getopt_internal_r@@Base+0x160>  // b.tcont
   19e3c:	ldr	x1, [x22, w0, sxtw #3]
   19e40:	ldrb	w2, [x1]
   19e44:	cmp	w2, #0x2d
   19e48:	b.ne	19f10 <_getopt_internal_r@@Base+0x21c>  // b.any
   19e4c:	ldrb	w1, [x1, #1]
   19e50:	cbz	w1, 19f10 <_getopt_internal_r@@Base+0x21c>
   19e54:	str	w0, [x19, #48]
   19e58:	ldr	w20, [x19]
   19e5c:	cmp	w20, w23
   19e60:	b.eq	19ea8 <_getopt_internal_r@@Base+0x1b4>  // b.none
   19e64:	ldr	x0, [x22, w20, sxtw #3]
   19e68:	adrp	x1, 27000 <vasnprintf@@Base+0x1170>
   19e6c:	add	x1, x1, #0x646
   19e70:	bl	afa0 <strcmp@plt>
   19e74:	cbnz	w0, 19ea8 <_getopt_internal_r@@Base+0x1b4>
   19e78:	ldp	w1, w0, [x19, #44]
   19e7c:	add	w20, w20, #0x1
   19e80:	str	w20, [x19]
   19e84:	cmp	w1, w0
   19e88:	b.eq	19f1c <_getopt_internal_r@@Base+0x228>  // b.none
   19e8c:	cmp	w20, w0
   19e90:	b.eq	19ea0 <_getopt_internal_r@@Base+0x1ac>  // b.none
   19e94:	mov	x1, x19
   19e98:	mov	x0, x22
   19e9c:	bl	197b4 <rpl_fcntl@@Base+0x20c>
   19ea0:	str	w23, [x19]
   19ea4:	str	w23, [x19, #48]
   19ea8:	ldr	w0, [x19]
   19eac:	cmp	w0, w23
   19eb0:	b.ne	19f24 <_getopt_internal_r@@Base+0x230>  // b.any
   19eb4:	ldp	w0, w1, [x19, #44]
   19eb8:	cmp	w0, w1
   19ebc:	b.eq	19d20 <_getopt_internal_r@@Base+0x2c>  // b.none
   19ec0:	str	w0, [x19]
   19ec4:	b	19d20 <_getopt_internal_r@@Base+0x2c>
   19ec8:	cmp	w0, #0x2b
   19ecc:	b.ne	19ed8 <_getopt_internal_r@@Base+0x1e4>  // b.any
   19ed0:	str	wzr, [x19, #40]
   19ed4:	b	19db8 <_getopt_internal_r@@Base+0xc4>
   19ed8:	cbz	w7, 19ee4 <_getopt_internal_r@@Base+0x1f0>
   19edc:	str	wzr, [x19, #40]
   19ee0:	b	19dbc <_getopt_internal_r@@Base+0xc8>
   19ee4:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   19ee8:	add	x0, x0, #0x3b
   19eec:	bl	b570 <getenv@plt>
   19ef0:	cbnz	x0, 19edc <_getopt_internal_r@@Base+0x1e8>
   19ef4:	mov	w0, #0x1                   	// #1
   19ef8:	str	w0, [x19, #40]
   19efc:	b	19dbc <_getopt_internal_r@@Base+0xc8>
   19f00:	cmp	w0, w1
   19f04:	b.eq	19e30 <_getopt_internal_r@@Base+0x13c>  // b.none
   19f08:	str	w0, [x19, #44]
   19f0c:	b	19e30 <_getopt_internal_r@@Base+0x13c>
   19f10:	add	w0, w0, #0x1
   19f14:	str	w0, [x19]
   19f18:	b	19e30 <_getopt_internal_r@@Base+0x13c>
   19f1c:	str	w20, [x19, #44]
   19f20:	b	19ea0 <_getopt_internal_r@@Base+0x1ac>
   19f24:	ldr	x20, [x22, w0, sxtw #3]
   19f28:	ldrb	w1, [x20]
   19f2c:	cmp	w1, #0x2d
   19f30:	b.ne	19f3c <_getopt_internal_r@@Base+0x248>  // b.any
   19f34:	ldrb	w1, [x20, #1]
   19f38:	cbnz	w1, 19f58 <_getopt_internal_r@@Base+0x264>
   19f3c:	ldr	w1, [x19, #40]
   19f40:	cbz	w1, 19d20 <_getopt_internal_r@@Base+0x2c>
   19f44:	add	w0, w0, #0x1
   19f48:	str	w0, [x19]
   19f4c:	mov	w0, #0x1                   	// #1
   19f50:	str	x20, [x19, #16]
   19f54:	b	19d24 <_getopt_internal_r@@Base+0x30>
   19f58:	cbnz	x25, 19ff8 <_getopt_internal_r@@Base+0x304>
   19f5c:	ldrsw	x0, [x19]
   19f60:	ldr	x0, [x22, x0, lsl #3]
   19f64:	add	x0, x0, #0x1
   19f68:	str	x0, [x19, #32]
   19f6c:	ldr	x27, [x19, #32]
   19f70:	mov	x0, x21
   19f74:	add	x28, x27, #0x1
   19f78:	str	x28, [x19, #32]
   19f7c:	ldrb	w20, [x27]
   19f80:	mov	w1, w20
   19f84:	bl	b190 <strchr@plt>
   19f88:	ldrb	w1, [x27, #1]
   19f8c:	cbnz	w1, 19f9c <_getopt_internal_r@@Base+0x2a8>
   19f90:	ldr	w1, [x19]
   19f94:	add	w1, w1, #0x1
   19f98:	str	w1, [x19]
   19f9c:	sub	w1, w20, #0x3a
   19fa0:	cmp	x0, #0x0
   19fa4:	and	w1, w1, #0xff
   19fa8:	ccmp	w1, #0x1, #0x0, ne  // ne = any
   19fac:	b.hi	1a098 <_getopt_internal_r@@Base+0x3a4>  // b.pmore
   19fb0:	cbz	w24, 19fec <_getopt_internal_r@@Base+0x2f8>
   19fb4:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   19fb8:	mov	w2, #0x5                   	// #5
   19fbc:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   19fc0:	add	x1, x1, #0x4b
   19fc4:	ldr	x0, [x0, #3816]
   19fc8:	ldr	x21, [x0]
   19fcc:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   19fd0:	add	x0, x0, #0x2ee
   19fd4:	bl	b3f0 <dcgettext@plt>
   19fd8:	ldr	x2, [x22]
   19fdc:	mov	x1, x0
   19fe0:	mov	w3, w20
   19fe4:	mov	x0, x21
   19fe8:	bl	b640 <fprintf@plt>
   19fec:	mov	w0, #0x3f                  	// #63
   19ff0:	str	w20, [x19, #8]
   19ff4:	b	19d24 <_getopt_internal_r@@Base+0x30>
   19ff8:	cmp	w1, #0x2d
   19ffc:	b.ne	1a03c <_getopt_internal_r@@Base+0x348>  // b.any
   1a000:	add	x20, x20, #0x2
   1a004:	mov	w7, w24
   1a008:	mov	x6, x19
   1a00c:	mov	w5, w27
   1a010:	str	x20, [x19, #32]
   1a014:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   1a018:	add	x0, x0, #0x646
   1a01c:	str	x0, [sp]
   1a020:	mov	x4, x26
   1a024:	mov	x3, x25
   1a028:	mov	x2, x21
   1a02c:	mov	x1, x22
   1a030:	mov	w0, w23
   1a034:	bl	1985c <rpl_fcntl@@Base+0x2b4>
   1a038:	b	19d24 <_getopt_internal_r@@Base+0x30>
   1a03c:	cbz	w27, 19f5c <_getopt_internal_r@@Base+0x268>
   1a040:	ldrb	w0, [x20, #2]
   1a044:	cbnz	w0, 1a054 <_getopt_internal_r@@Base+0x360>
   1a048:	mov	x0, x21
   1a04c:	bl	b190 <strchr@plt>
   1a050:	cbnz	x0, 19f5c <_getopt_internal_r@@Base+0x268>
   1a054:	add	x20, x20, #0x1
   1a058:	str	x20, [x19, #32]
   1a05c:	adrp	x0, 26000 <vasnprintf@@Base+0x170>
   1a060:	add	x0, x0, #0xb26
   1a064:	str	x0, [sp]
   1a068:	mov	w7, w24
   1a06c:	mov	x6, x19
   1a070:	mov	w5, w27
   1a074:	mov	x4, x26
   1a078:	mov	x3, x25
   1a07c:	mov	x2, x21
   1a080:	mov	x1, x22
   1a084:	mov	w0, w23
   1a088:	bl	1985c <rpl_fcntl@@Base+0x2b4>
   1a08c:	cmn	w0, #0x1
   1a090:	b.ne	19d24 <_getopt_internal_r@@Base+0x30>  // b.any
   1a094:	b	19f5c <_getopt_internal_r@@Base+0x268>
   1a098:	ldrb	w2, [x0]
   1a09c:	ldrb	w1, [x0, #1]
   1a0a0:	cmp	w2, #0x57
   1a0a4:	b.ne	1a154 <_getopt_internal_r@@Base+0x460>  // b.any
   1a0a8:	cmp	w1, #0x3b
   1a0ac:	b.ne	1a154 <_getopt_internal_r@@Base+0x460>  // b.any
   1a0b0:	cbz	x25, 1a18c <_getopt_internal_r@@Base+0x498>
   1a0b4:	ldrb	w0, [x27, #1]
   1a0b8:	cbz	w0, 1a0e8 <_getopt_internal_r@@Base+0x3f4>
   1a0bc:	str	x28, [x19, #16]
   1a0c0:	ldr	x0, [x19, #16]
   1a0c4:	str	xzr, [x19, #16]
   1a0c8:	str	x0, [x19, #32]
   1a0cc:	mov	w7, w24
   1a0d0:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   1a0d4:	mov	x6, x19
   1a0d8:	add	x0, x0, #0x90
   1a0dc:	mov	w5, #0x0                   	// #0
   1a0e0:	str	x0, [sp]
   1a0e4:	b	1a020 <_getopt_internal_r@@Base+0x32c>
   1a0e8:	ldr	w0, [x19]
   1a0ec:	cmp	w0, w23
   1a0f0:	b.ne	1a148 <_getopt_internal_r@@Base+0x454>  // b.any
   1a0f4:	cbz	w24, 1a130 <_getopt_internal_r@@Base+0x43c>
   1a0f8:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   1a0fc:	mov	w2, #0x5                   	// #5
   1a100:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1a104:	add	x1, x1, #0x67
   1a108:	ldr	x0, [x0, #3816]
   1a10c:	ldr	x23, [x0]
   1a110:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   1a114:	add	x0, x0, #0x2ee
   1a118:	bl	b3f0 <dcgettext@plt>
   1a11c:	ldr	x2, [x22]
   1a120:	mov	x1, x0
   1a124:	mov	w3, w20
   1a128:	mov	x0, x23
   1a12c:	bl	b640 <fprintf@plt>
   1a130:	str	w20, [x19, #8]
   1a134:	mov	w20, #0x3f                  	// #63
   1a138:	ldrb	w0, [x21]
   1a13c:	cmp	w0, #0x3a
   1a140:	csel	w0, w0, w20, eq  // eq = none
   1a144:	b	19d24 <_getopt_internal_r@@Base+0x30>
   1a148:	ldr	x0, [x22, w0, sxtw #3]
   1a14c:	str	x0, [x19, #16]
   1a150:	b	1a0c0 <_getopt_internal_r@@Base+0x3cc>
   1a154:	cmp	w1, #0x3a
   1a158:	b.ne	1a18c <_getopt_internal_r@@Base+0x498>  // b.any
   1a15c:	ldrb	w0, [x0, #2]
   1a160:	ldrb	w1, [x27, #1]
   1a164:	cmp	w0, #0x3a
   1a168:	b.ne	1a194 <_getopt_internal_r@@Base+0x4a0>  // b.any
   1a16c:	cbz	w1, 1a184 <_getopt_internal_r@@Base+0x490>
   1a170:	ldr	w0, [x19]
   1a174:	str	x28, [x19, #16]
   1a178:	add	w0, w0, #0x1
   1a17c:	str	w0, [x19]
   1a180:	b	1a188 <_getopt_internal_r@@Base+0x494>
   1a184:	str	xzr, [x19, #16]
   1a188:	str	xzr, [x19, #32]
   1a18c:	mov	w0, w20
   1a190:	b	19d24 <_getopt_internal_r@@Base+0x30>
   1a194:	ldr	w0, [x19]
   1a198:	cbz	w1, 1a1a4 <_getopt_internal_r@@Base+0x4b0>
   1a19c:	str	x28, [x19, #16]
   1a1a0:	b	1a178 <_getopt_internal_r@@Base+0x484>
   1a1a4:	cmp	w23, w0
   1a1a8:	b.ne	1a200 <_getopt_internal_r@@Base+0x50c>  // b.any
   1a1ac:	cbz	w24, 1a1e8 <_getopt_internal_r@@Base+0x4f4>
   1a1b0:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   1a1b4:	mov	w2, #0x5                   	// #5
   1a1b8:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1a1bc:	add	x1, x1, #0x67
   1a1c0:	ldr	x0, [x0, #3816]
   1a1c4:	ldr	x23, [x0]
   1a1c8:	adrp	x0, 27000 <vasnprintf@@Base+0x1170>
   1a1cc:	add	x0, x0, #0x2ee
   1a1d0:	bl	b3f0 <dcgettext@plt>
   1a1d4:	ldr	x2, [x22]
   1a1d8:	mov	x1, x0
   1a1dc:	mov	w3, w20
   1a1e0:	mov	x0, x23
   1a1e4:	bl	b640 <fprintf@plt>
   1a1e8:	str	w20, [x19, #8]
   1a1ec:	mov	w0, #0x3f                  	// #63
   1a1f0:	ldrb	w20, [x21]
   1a1f4:	cmp	w20, #0x3a
   1a1f8:	csel	w20, w20, w0, eq  // eq = none
   1a1fc:	b	1a188 <_getopt_internal_r@@Base+0x494>
   1a200:	add	w1, w0, #0x1
   1a204:	ldr	x0, [x22, w0, sxtw #3]
   1a208:	str	w1, [x19]
   1a20c:	str	x0, [x19, #16]
   1a210:	b	1a188 <_getopt_internal_r@@Base+0x494>

000000000001a214 <rpl_getopt_internal@@Base>:
   1a214:	stp	x29, x30, [sp, #-48]!
   1a218:	adrp	x8, 40000 <vasnprintf@@Base+0x1a170>
   1a21c:	mov	x29, sp
   1a220:	stp	x19, x20, [sp, #16]
   1a224:	adrp	x20, 40000 <vasnprintf@@Base+0x1a170>
   1a228:	ldr	x20, [x20, #4032]
   1a22c:	ldr	x8, [x8, #3856]
   1a230:	ldr	w7, [x20]
   1a234:	str	x21, [sp, #32]
   1a238:	adrp	x21, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
   1a23c:	add	x19, x21, #0x5a0
   1a240:	str	w7, [x21, #1440]
   1a244:	ldr	w7, [x8]
   1a248:	str	w7, [x19, #4]
   1a24c:	mov	w7, w6
   1a250:	mov	x6, x19
   1a254:	bl	b500 <_getopt_internal_r@plt>
   1a258:	ldr	w1, [x21, #1440]
   1a25c:	ldr	x21, [sp, #32]
   1a260:	str	w1, [x20]
   1a264:	adrp	x1, 40000 <vasnprintf@@Base+0x1a170>
   1a268:	ldr	x2, [x19, #16]
   1a26c:	ldr	x1, [x1, #4016]
   1a270:	str	x2, [x1]
   1a274:	adrp	x1, 40000 <vasnprintf@@Base+0x1a170>
   1a278:	ldr	w2, [x19, #8]
   1a27c:	ldr	x1, [x1, #3880]
   1a280:	ldp	x19, x20, [sp, #16]
   1a284:	str	w2, [x1]
   1a288:	ldp	x29, x30, [sp], #48
   1a28c:	ret

000000000001a290 <rpl_getopt@@Base>:
   1a290:	mov	w6, #0x1                   	// #1
   1a294:	mov	w5, #0x0                   	// #0
   1a298:	mov	x4, #0x0                   	// #0
   1a29c:	mov	x3, #0x0                   	// #0
   1a2a0:	b	b130 <rpl_getopt_internal@plt>

000000000001a2a4 <rpl_getopt_long@@Base>:
   1a2a4:	mov	w6, #0x0                   	// #0
   1a2a8:	mov	w5, #0x0                   	// #0
   1a2ac:	b	b130 <rpl_getopt_internal@plt>

000000000001a2b0 <_getopt_long_r@@Base>:
   1a2b0:	mov	x6, x5
   1a2b4:	mov	w7, #0x0                   	// #0
   1a2b8:	mov	w5, #0x0                   	// #0
   1a2bc:	b	b500 <_getopt_internal_r@plt>

000000000001a2c0 <rpl_getopt_long_only@@Base>:
   1a2c0:	mov	w6, #0x0                   	// #0
   1a2c4:	mov	w5, #0x1                   	// #1
   1a2c8:	b	b130 <rpl_getopt_internal@plt>

000000000001a2cc <_getopt_long_only_r@@Base>:
   1a2cc:	mov	x6, x5
   1a2d0:	mov	w7, #0x0                   	// #0
   1a2d4:	mov	w5, #0x1                   	// #1
   1a2d8:	b	b500 <_getopt_internal_r@plt>

000000000001a2dc <rpl_ioctl@@Base>:
   1a2dc:	stp	x29, x30, [sp, #-64]!
   1a2e0:	mov	w1, w1
   1a2e4:	mov	x29, sp
   1a2e8:	add	x3, sp, #0x40
   1a2ec:	stp	x3, x3, [sp, #16]
   1a2f0:	add	x3, sp, #0x30
   1a2f4:	str	x3, [sp, #32]
   1a2f8:	mov	w3, #0xfffffff8            	// #-8
   1a2fc:	str	w3, [sp, #40]
   1a300:	str	wzr, [sp, #44]
   1a304:	str	x2, [sp, #56]
   1a308:	bl	b670 <ioctl@plt>
   1a30c:	ldp	x29, x30, [sp], #64
   1a310:	ret

000000000001a314 <rpl_mbrtowc@@Base>:
   1a314:	stp	x29, x30, [sp, #-64]!
   1a318:	mov	x29, sp
   1a31c:	stp	x19, x20, [sp, #16]
   1a320:	stp	x21, x22, [sp, #32]
   1a324:	mov	x21, x1
   1a328:	mov	x22, x2
   1a32c:	cbnz	x0, 1a384 <rpl_mbrtowc@@Base+0x70>
   1a330:	add	x19, sp, #0x3c
   1a334:	mov	x2, x22
   1a338:	mov	x1, x21
   1a33c:	mov	x0, x19
   1a340:	bl	a6e0 <mbrtowc@plt>
   1a344:	cmp	x22, #0x0
   1a348:	mov	x20, x0
   1a34c:	ccmn	x0, #0x3, #0x0, ne  // ne = any
   1a350:	b.ls	1a370 <rpl_mbrtowc@@Base+0x5c>  // b.plast
   1a354:	mov	w0, #0x0                   	// #0
   1a358:	bl	ad10 <hard_locale@plt>
   1a35c:	tst	w0, #0xff
   1a360:	b.ne	1a370 <rpl_mbrtowc@@Base+0x5c>  // b.any
   1a364:	ldrb	w0, [x21]
   1a368:	mov	x20, #0x1                   	// #1
   1a36c:	str	w0, [x19]
   1a370:	mov	x0, x20
   1a374:	ldp	x19, x20, [sp, #16]
   1a378:	ldp	x21, x22, [sp, #32]
   1a37c:	ldp	x29, x30, [sp], #64
   1a380:	ret
   1a384:	mov	x19, x0
   1a388:	b	1a334 <rpl_mbrtowc@@Base+0x20>

000000000001a38c <rpl_nanosleep@@Base>:
   1a38c:	stp	x29, x30, [sp, #-64]!
   1a390:	mov	x2, #0xc9ff                	// #51711
   1a394:	movk	x2, #0x3b9a, lsl #16
   1a398:	mov	x29, sp
   1a39c:	stp	x19, x20, [sp, #16]
   1a3a0:	mov	x19, x1
   1a3a4:	ldr	x1, [x0, #8]
   1a3a8:	stp	x21, x22, [sp, #32]
   1a3ac:	cmp	x1, x2
   1a3b0:	b.ls	1a3d4 <rpl_nanosleep@@Base+0x48>  // b.plast
   1a3b4:	bl	b540 <__errno_location@plt>
   1a3b8:	mov	w1, #0x16                  	// #22
   1a3bc:	str	w1, [x0]
   1a3c0:	mov	w0, #0xffffffff            	// #-1
   1a3c4:	ldp	x19, x20, [sp, #16]
   1a3c8:	ldp	x21, x22, [sp, #32]
   1a3cc:	ldp	x29, x30, [sp], #64
   1a3d0:	ret
   1a3d4:	ldr	x20, [x0]
   1a3d8:	mov	x21, #0xa400                	// #41984
   1a3dc:	add	x22, sp, #0x30
   1a3e0:	movk	x21, #0x1f, lsl #16
   1a3e4:	str	x1, [sp, #56]
   1a3e8:	cmp	x20, x21
   1a3ec:	b.gt	1a404 <rpl_nanosleep@@Base+0x78>
   1a3f0:	mov	x1, x19
   1a3f4:	mov	x0, x22
   1a3f8:	str	x20, [sp, #48]
   1a3fc:	bl	b110 <nanosleep@plt>
   1a400:	b	1a3c4 <rpl_nanosleep@@Base+0x38>
   1a404:	mov	x1, x19
   1a408:	mov	x0, x22
   1a40c:	sub	x20, x20, x21
   1a410:	str	x21, [sp, #48]
   1a414:	bl	b110 <nanosleep@plt>
   1a418:	cbz	w0, 1a430 <rpl_nanosleep@@Base+0xa4>
   1a41c:	cbz	x19, 1a3c4 <rpl_nanosleep@@Base+0x38>
   1a420:	ldr	x1, [x19]
   1a424:	add	x20, x1, x20
   1a428:	str	x20, [x19]
   1a42c:	b	1a3c4 <rpl_nanosleep@@Base+0x38>
   1a430:	str	xzr, [sp, #56]
   1a434:	b	1a3e8 <rpl_nanosleep@@Base+0x5c>

000000000001a438 <openat_proc_name@@Base>:
   1a438:	stp	x29, x30, [sp, #-96]!
   1a43c:	mov	x29, sp
   1a440:	stp	x19, x20, [sp, #16]
   1a444:	mov	x19, x0
   1a448:	stp	x21, x22, [sp, #32]
   1a44c:	stp	x23, x24, [sp, #48]
   1a450:	ldrb	w0, [x2]
   1a454:	cbnz	w0, 1a474 <openat_proc_name@@Base+0x3c>
   1a458:	strb	wzr, [x19]
   1a45c:	mov	x0, x19
   1a460:	ldp	x19, x20, [sp, #16]
   1a464:	ldp	x21, x22, [sp, #32]
   1a468:	ldp	x23, x24, [sp, #48]
   1a46c:	ldp	x29, x30, [sp], #96
   1a470:	ret
   1a474:	adrp	x23, 42000 <gl_rbtree_list_implementation@@Base+0x1438>
   1a478:	mov	w22, w1
   1a47c:	mov	x20, x2
   1a480:	mov	x24, x23
   1a484:	ldr	w0, [x23, #1496]
   1a488:	cbnz	w0, 1a4f0 <openat_proc_name@@Base+0xb8>
   1a48c:	mov	w1, #0x4900                	// #18688
   1a490:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   1a494:	add	x0, x0, #0x94
   1a498:	bl	ab40 <open@plt>
   1a49c:	mov	w21, w0
   1a4a0:	tbz	w0, #31, 1a4b4 <openat_proc_name@@Base+0x7c>
   1a4a4:	mov	w0, #0xffffffff            	// #-1
   1a4a8:	str	w0, [x23, #1496]
   1a4ac:	mov	x19, #0x0                   	// #0
   1a4b0:	b	1a45c <openat_proc_name@@Base+0x24>
   1a4b4:	mov	w2, w0
   1a4b8:	add	x23, sp, #0x40
   1a4bc:	mov	x0, x23
   1a4c0:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1a4c4:	add	x1, x1, #0xa2
   1a4c8:	bl	a900 <sprintf@plt>
   1a4cc:	mov	x0, x23
   1a4d0:	mov	w1, #0x0                   	// #0
   1a4d4:	bl	af00 <access@plt>
   1a4d8:	cmp	w0, #0x0
   1a4dc:	mov	w2, #0x1                   	// #1
   1a4e0:	cneg	w2, w2, ne  // ne = any
   1a4e4:	mov	w0, w21
   1a4e8:	str	w2, [x24, #1496]
   1a4ec:	bl	add0 <close@plt>
   1a4f0:	ldr	w0, [x24, #1496]
   1a4f4:	tbnz	w0, #31, 1a4ac <openat_proc_name@@Base+0x74>
   1a4f8:	mov	x0, x20
   1a4fc:	bl	a780 <strlen@plt>
   1a500:	add	x0, x0, #0x1b
   1a504:	cmp	x0, #0xfc0
   1a508:	b.ls	1a518 <openat_proc_name@@Base+0xe0>  // b.plast
   1a50c:	bl	aab0 <malloc@plt>
   1a510:	mov	x19, x0
   1a514:	cbz	x0, 1a4ac <openat_proc_name@@Base+0x74>
   1a518:	mov	w2, w22
   1a51c:	mov	x0, x19
   1a520:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1a524:	add	x1, x1, #0xb9
   1a528:	bl	a900 <sprintf@plt>
   1a52c:	add	x0, x19, w0, sxtw
   1a530:	mov	x1, x20
   1a534:	bl	b260 <strcpy@plt>
   1a538:	b	1a45c <openat_proc_name@@Base+0x24>

000000000001a53c <printf_fetchargs@@Base>:
   1a53c:	ldp	x11, x4, [x0]
   1a540:	adrp	x6, 29000 <vasnprintf@@Base+0x3170>
   1a544:	ldp	w13, w10, [x0, #24]
   1a548:	adrp	x7, 29000 <vasnprintf@@Base+0x3170>
   1a54c:	ldr	x3, [x1, #8]
   1a550:	adrp	x9, 29000 <vasnprintf@@Base+0x3170>
   1a554:	ldr	x8, [x0, #16]
   1a558:	add	x6, x6, #0xd4
   1a55c:	add	x7, x7, #0x100
   1a560:	add	x9, x9, #0xcb
   1a564:	mov	x5, #0x0                   	// #0
   1a568:	ldr	x2, [x1]
   1a56c:	cmp	x2, x5
   1a570:	b.hi	1a57c <printf_fetchargs@@Base+0x40>  // b.pmore
   1a574:	mov	w0, #0x0                   	// #0
   1a578:	ret
   1a57c:	ldr	w2, [x3]
   1a580:	sub	w2, w2, #0x1
   1a584:	cmp	w2, #0x15
   1a588:	b.hi	1a7f4 <printf_fetchargs@@Base+0x2b8>  // b.pmore
   1a58c:	ldrh	w0, [x6, w2, uxtw #1]
   1a590:	adr	x2, 1a59c <printf_fetchargs@@Base+0x60>
   1a594:	add	x0, x2, w0, sxth #2
   1a598:	br	x0
   1a59c:	tbnz	w13, #31, 1a5c8 <printf_fetchargs@@Base+0x8c>
   1a5a0:	add	x0, x11, #0xb
   1a5a4:	mov	w12, w13
   1a5a8:	and	x0, x0, #0xfffffffffffffff8
   1a5ac:	ldr	w2, [x11]
   1a5b0:	strb	w2, [x3, #16]
   1a5b4:	add	x5, x5, #0x1
   1a5b8:	add	x3, x3, #0x20
   1a5bc:	mov	w13, w12
   1a5c0:	mov	x11, x0
   1a5c4:	b	1a568 <printf_fetchargs@@Base+0x2c>
   1a5c8:	add	w12, w13, #0x8
   1a5cc:	cmp	w12, #0x0
   1a5d0:	b.le	1a5e0 <printf_fetchargs@@Base+0xa4>
   1a5d4:	add	x0, x11, #0xb
   1a5d8:	and	x0, x0, #0xfffffffffffffff8
   1a5dc:	b	1a5ac <printf_fetchargs@@Base+0x70>
   1a5e0:	mov	x0, x11
   1a5e4:	add	x11, x4, w13, sxtw
   1a5e8:	b	1a5ac <printf_fetchargs@@Base+0x70>
   1a5ec:	tbnz	w13, #31, 1a608 <printf_fetchargs@@Base+0xcc>
   1a5f0:	add	x0, x11, #0xb
   1a5f4:	mov	w12, w13
   1a5f8:	and	x0, x0, #0xfffffffffffffff8
   1a5fc:	ldr	w2, [x11]
   1a600:	strh	w2, [x3, #16]
   1a604:	b	1a5b4 <printf_fetchargs@@Base+0x78>
   1a608:	add	w12, w13, #0x8
   1a60c:	cmp	w12, #0x0
   1a610:	b.le	1a620 <printf_fetchargs@@Base+0xe4>
   1a614:	add	x0, x11, #0xb
   1a618:	and	x0, x0, #0xfffffffffffffff8
   1a61c:	b	1a5fc <printf_fetchargs@@Base+0xc0>
   1a620:	mov	x0, x11
   1a624:	add	x11, x4, w13, sxtw
   1a628:	b	1a5fc <printf_fetchargs@@Base+0xc0>
   1a62c:	tbnz	w13, #31, 1a640 <printf_fetchargs@@Base+0x104>
   1a630:	add	x0, x11, #0xf
   1a634:	and	x0, x0, #0xfffffffffffffff8
   1a638:	mov	w12, w13
   1a63c:	b	1a654 <printf_fetchargs@@Base+0x118>
   1a640:	add	w12, w13, #0x8
   1a644:	cmp	w12, #0x0
   1a648:	b.le	1a7e8 <printf_fetchargs@@Base+0x2ac>
   1a64c:	add	x0, x11, #0xf
   1a650:	and	x0, x0, #0xfffffffffffffff8
   1a654:	ldr	x2, [x11]
   1a658:	b	1a750 <printf_fetchargs@@Base+0x214>
   1a65c:	tbnz	w10, #31, 1a680 <printf_fetchargs@@Base+0x144>
   1a660:	add	x0, x11, #0xf
   1a664:	mov	w2, w10
   1a668:	and	x0, x0, #0xfffffffffffffff8
   1a66c:	ldr	d0, [x11]
   1a670:	mov	w10, w2
   1a674:	mov	w12, w13
   1a678:	str	d0, [x3, #16]
   1a67c:	b	1a5b4 <printf_fetchargs@@Base+0x78>
   1a680:	add	w2, w10, #0x10
   1a684:	cmp	w2, #0x0
   1a688:	b.le	1a698 <printf_fetchargs@@Base+0x15c>
   1a68c:	add	x0, x11, #0xf
   1a690:	and	x0, x0, #0xfffffffffffffff8
   1a694:	b	1a66c <printf_fetchargs@@Base+0x130>
   1a698:	mov	x0, x11
   1a69c:	add	x11, x8, w10, sxtw
   1a6a0:	b	1a66c <printf_fetchargs@@Base+0x130>
   1a6a4:	tbnz	w10, #31, 1a6d0 <printf_fetchargs@@Base+0x194>
   1a6a8:	add	x0, x11, #0xf
   1a6ac:	mov	w2, w10
   1a6b0:	and	x0, x0, #0xfffffffffffffff0
   1a6b4:	add	x11, x0, #0x10
   1a6b8:	ldr	q0, [x0]
   1a6bc:	mov	w10, w2
   1a6c0:	mov	w12, w13
   1a6c4:	mov	x0, x11
   1a6c8:	str	q0, [x3, #16]
   1a6cc:	b	1a5b4 <printf_fetchargs@@Base+0x78>
   1a6d0:	add	w2, w10, #0x10
   1a6d4:	cmp	w2, #0x0
   1a6d8:	b.le	1a6ec <printf_fetchargs@@Base+0x1b0>
   1a6dc:	add	x0, x11, #0xf
   1a6e0:	and	x0, x0, #0xfffffffffffffff0
   1a6e4:	add	x11, x0, #0x10
   1a6e8:	b	1a6b8 <printf_fetchargs@@Base+0x17c>
   1a6ec:	add	x0, x8, w10, sxtw
   1a6f0:	b	1a6b8 <printf_fetchargs@@Base+0x17c>
   1a6f4:	tbnz	w13, #31, 1a710 <printf_fetchargs@@Base+0x1d4>
   1a6f8:	add	x0, x11, #0xb
   1a6fc:	mov	w12, w13
   1a700:	and	x0, x0, #0xfffffffffffffff8
   1a704:	ldr	w2, [x11]
   1a708:	str	w2, [x3, #16]
   1a70c:	b	1a5b4 <printf_fetchargs@@Base+0x78>
   1a710:	add	w12, w13, #0x8
   1a714:	cmp	w12, #0x0
   1a718:	b.le	1a728 <printf_fetchargs@@Base+0x1ec>
   1a71c:	add	x0, x11, #0xb
   1a720:	and	x0, x0, #0xfffffffffffffff8
   1a724:	b	1a704 <printf_fetchargs@@Base+0x1c8>
   1a728:	mov	x0, x11
   1a72c:	add	x11, x4, w13, sxtw
   1a730:	b	1a704 <printf_fetchargs@@Base+0x1c8>
   1a734:	tbnz	w13, #31, 1a758 <printf_fetchargs@@Base+0x21c>
   1a738:	add	x0, x11, #0xf
   1a73c:	mov	w12, w13
   1a740:	and	x0, x0, #0xfffffffffffffff8
   1a744:	ldr	x2, [x11]
   1a748:	cmp	x2, #0x0
   1a74c:	csel	x2, x9, x2, eq  // eq = none
   1a750:	str	x2, [x3, #16]
   1a754:	b	1a5b4 <printf_fetchargs@@Base+0x78>
   1a758:	add	w12, w13, #0x8
   1a75c:	cmp	w12, #0x0
   1a760:	b.le	1a770 <printf_fetchargs@@Base+0x234>
   1a764:	add	x0, x11, #0xf
   1a768:	and	x0, x0, #0xfffffffffffffff8
   1a76c:	b	1a744 <printf_fetchargs@@Base+0x208>
   1a770:	mov	x0, x11
   1a774:	add	x11, x4, w13, sxtw
   1a778:	b	1a744 <printf_fetchargs@@Base+0x208>
   1a77c:	tbnz	w13, #31, 1a79c <printf_fetchargs@@Base+0x260>
   1a780:	add	x0, x11, #0xf
   1a784:	mov	w12, w13
   1a788:	and	x0, x0, #0xfffffffffffffff8
   1a78c:	ldr	x2, [x11]
   1a790:	cmp	x2, #0x0
   1a794:	csel	x2, x7, x2, eq  // eq = none
   1a798:	b	1a750 <printf_fetchargs@@Base+0x214>
   1a79c:	add	w12, w13, #0x8
   1a7a0:	cmp	w12, #0x0
   1a7a4:	b.le	1a7b4 <printf_fetchargs@@Base+0x278>
   1a7a8:	add	x0, x11, #0xf
   1a7ac:	and	x0, x0, #0xfffffffffffffff8
   1a7b0:	b	1a78c <printf_fetchargs@@Base+0x250>
   1a7b4:	mov	x0, x11
   1a7b8:	add	x11, x4, w13, sxtw
   1a7bc:	b	1a78c <printf_fetchargs@@Base+0x250>
   1a7c0:	tbnz	w13, #31, 1a7d0 <printf_fetchargs@@Base+0x294>
   1a7c4:	add	x2, x11, #0xf
   1a7c8:	and	x0, x2, #0xfffffffffffffff8
   1a7cc:	b	1a638 <printf_fetchargs@@Base+0xfc>
   1a7d0:	add	w12, w13, #0x8
   1a7d4:	cmp	w12, #0x0
   1a7d8:	b.le	1a7e8 <printf_fetchargs@@Base+0x2ac>
   1a7dc:	add	x2, x11, #0xf
   1a7e0:	and	x0, x2, #0xfffffffffffffff8
   1a7e4:	b	1a654 <printf_fetchargs@@Base+0x118>
   1a7e8:	mov	x0, x11
   1a7ec:	add	x11, x4, w13, sxtw
   1a7f0:	b	1a654 <printf_fetchargs@@Base+0x118>
   1a7f4:	mov	w0, #0xffffffff            	// #-1
   1a7f8:	b	1a578 <printf_fetchargs@@Base+0x3c>

000000000001a7fc <printf_parse@@Base>:
   1a7fc:	stp	x29, x30, [sp, #-144]!
   1a800:	mov	x29, sp
   1a804:	stp	x21, x22, [sp, #32]
   1a808:	mov	x22, x1
   1a80c:	mov	x21, #0xffffffffffffffff    	// #-1
   1a810:	stp	x19, x20, [sp, #16]
   1a814:	mov	x20, x2
   1a818:	mov	x19, x1
   1a81c:	stp	x23, x24, [sp, #48]
   1a820:	mov	x23, x0
   1a824:	mov	x24, #0x7                   	// #7
   1a828:	stp	x25, x26, [sp, #64]
   1a82c:	mov	x26, x2
   1a830:	mov	x25, #0x0                   	// #0
   1a834:	stp	x27, x28, [sp, #80]
   1a838:	str	xzr, [x22], #32
   1a83c:	stp	xzr, xzr, [sp, #104]
   1a840:	str	x22, [x1, #8]
   1a844:	str	xzr, [x20], #16
   1a848:	str	x24, [sp, #120]
   1a84c:	str	x20, [x2, #8]
   1a850:	ldrb	w1, [x23]
   1a854:	cbnz	w1, 1a898 <printf_parse@@Base+0x9c>
   1a858:	ldp	x0, x1, [x19]
   1a85c:	mov	x2, #0x58                  	// #88
   1a860:	mul	x0, x0, x2
   1a864:	str	x23, [x1, x0]
   1a868:	ldr	x0, [sp, #104]
   1a86c:	str	x0, [x19, #16]
   1a870:	ldr	x0, [sp, #112]
   1a874:	str	x0, [x19, #24]
   1a878:	mov	w0, #0x0                   	// #0
   1a87c:	ldp	x19, x20, [sp, #16]
   1a880:	ldp	x21, x22, [sp, #32]
   1a884:	ldp	x23, x24, [sp, #48]
   1a888:	ldp	x25, x26, [sp, #64]
   1a88c:	ldp	x27, x28, [sp, #80]
   1a890:	ldp	x29, x30, [sp], #144
   1a894:	ret
   1a898:	add	x0, x23, #0x1
   1a89c:	cmp	w1, #0x25
   1a8a0:	b.ne	1b1e0 <printf_parse@@Base+0x9e4>  // b.any
   1a8a4:	ldr	x1, [x19]
   1a8a8:	mov	x2, #0x58                  	// #88
   1a8ac:	mul	x1, x1, x2
   1a8b0:	ldr	x2, [x19, #8]
   1a8b4:	add	x28, x2, x1
   1a8b8:	str	x23, [x2, x1]
   1a8bc:	str	wzr, [x28, #16]
   1a8c0:	stp	xzr, xzr, [x28, #24]
   1a8c4:	stp	x21, xzr, [x28, #40]
   1a8c8:	stp	xzr, x21, [x28, #56]
   1a8cc:	str	x21, [x28, #80]
   1a8d0:	ldrb	w1, [x23, #1]
   1a8d4:	sub	w1, w1, #0x30
   1a8d8:	and	w1, w1, #0xff
   1a8dc:	cmp	w1, #0x9
   1a8e0:	b.ls	1a938 <printf_parse@@Base+0x13c>  // b.plast
   1a8e4:	mov	x27, #0xffffffffffffffff    	// #-1
   1a8e8:	mov	x3, x0
   1a8ec:	ldrb	w1, [x3], #1
   1a8f0:	cmp	w1, #0x27
   1a8f4:	b.ne	1a98c <printf_parse@@Base+0x190>  // b.any
   1a8f8:	ldr	w0, [x28, #16]
   1a8fc:	orr	w0, w0, #0x1
   1a900:	str	w0, [x28, #16]
   1a904:	mov	x0, x3
   1a908:	b	1a8e8 <printf_parse@@Base+0xec>
   1a90c:	add	x2, x2, #0x1
   1a910:	ldrb	w3, [x2]
   1a914:	sub	w1, w3, #0x30
   1a918:	and	w1, w1, #0xff
   1a91c:	cmp	w1, #0x9
   1a920:	b.ls	1a90c <printf_parse@@Base+0x110>  // b.plast
   1a924:	cmp	w3, #0x24
   1a928:	b.ne	1a8e4 <printf_parse@@Base+0xe8>  // b.any
   1a92c:	mov	x27, #0x0                   	// #0
   1a930:	mov	x3, #0xa                   	// #10
   1a934:	b	1a964 <printf_parse@@Base+0x168>
   1a938:	mov	x2, x0
   1a93c:	b	1a910 <printf_parse@@Base+0x114>
   1a940:	mul	x2, x27, x3
   1a944:	mov	x4, #0x9999999999999999    	// #-7378697629483820647
   1a948:	movk	x4, #0x1999, lsl #48
   1a94c:	cmp	x27, x4
   1a950:	csel	x2, x2, x21, ls  // ls = plast
   1a954:	sxtw	x27, w1
   1a958:	adds	x27, x27, x2
   1a95c:	add	x0, x0, #0x1
   1a960:	csel	x27, x27, x21, cc  // cc = lo, ul, last
   1a964:	ldrb	w1, [x0]
   1a968:	sub	w1, w1, #0x30
   1a96c:	and	w2, w1, #0xff
   1a970:	cmp	w2, #0x9
   1a974:	b.ls	1a940 <printf_parse@@Base+0x144>  // b.plast
   1a978:	sub	x27, x27, #0x1
   1a97c:	cmn	x27, #0x3
   1a980:	b.hi	1ac00 <printf_parse@@Base+0x404>  // b.pmore
   1a984:	add	x0, x0, #0x1
   1a988:	b	1a8e8 <printf_parse@@Base+0xec>
   1a98c:	cmp	w1, #0x2d
   1a990:	b.ne	1a9a0 <printf_parse@@Base+0x1a4>  // b.any
   1a994:	ldr	w0, [x28, #16]
   1a998:	orr	w0, w0, #0x2
   1a99c:	b	1a900 <printf_parse@@Base+0x104>
   1a9a0:	cmp	w1, #0x2b
   1a9a4:	b.ne	1a9b4 <printf_parse@@Base+0x1b8>  // b.any
   1a9a8:	ldr	w0, [x28, #16]
   1a9ac:	orr	w0, w0, #0x4
   1a9b0:	b	1a900 <printf_parse@@Base+0x104>
   1a9b4:	cmp	w1, #0x20
   1a9b8:	b.ne	1a9c8 <printf_parse@@Base+0x1cc>  // b.any
   1a9bc:	ldr	w0, [x28, #16]
   1a9c0:	orr	w0, w0, #0x8
   1a9c4:	b	1a900 <printf_parse@@Base+0x104>
   1a9c8:	cmp	w1, #0x23
   1a9cc:	b.ne	1a9dc <printf_parse@@Base+0x1e0>  // b.any
   1a9d0:	ldr	w0, [x28, #16]
   1a9d4:	orr	w0, w0, #0x10
   1a9d8:	b	1a900 <printf_parse@@Base+0x104>
   1a9dc:	cmp	w1, #0x30
   1a9e0:	b.ne	1a9f0 <printf_parse@@Base+0x1f4>  // b.any
   1a9e4:	ldr	w0, [x28, #16]
   1a9e8:	orr	w0, w0, #0x20
   1a9ec:	b	1a900 <printf_parse@@Base+0x104>
   1a9f0:	cmp	w1, #0x49
   1a9f4:	b.ne	1aa04 <printf_parse@@Base+0x208>  // b.any
   1a9f8:	ldr	w0, [x28, #16]
   1a9fc:	orr	w0, w0, #0x40
   1aa00:	b	1a900 <printf_parse@@Base+0x104>
   1aa04:	cmp	w1, #0x2a
   1aa08:	b.ne	1ac34 <printf_parse@@Base+0x438>  // b.any
   1aa0c:	stp	x0, x3, [x28, #24]
   1aa10:	ldr	x1, [sp, #104]
   1aa14:	ldrb	w0, [x0, #1]
   1aa18:	cmp	x1, #0x0
   1aa1c:	csinc	x1, x1, xzr, ne  // ne = any
   1aa20:	sub	w0, w0, #0x30
   1aa24:	str	x1, [sp, #104]
   1aa28:	and	w0, w0, #0xff
   1aa2c:	cmp	w0, #0x9
   1aa30:	b.hi	1aab4 <printf_parse@@Base+0x2b8>  // b.pmore
   1aa34:	mov	x1, x3
   1aa38:	b	1aa40 <printf_parse@@Base+0x244>
   1aa3c:	add	x1, x1, #0x1
   1aa40:	ldrb	w2, [x1]
   1aa44:	sub	w0, w2, #0x30
   1aa48:	and	w0, w0, #0xff
   1aa4c:	cmp	w0, #0x9
   1aa50:	b.ls	1aa3c <printf_parse@@Base+0x240>  // b.plast
   1aa54:	cmp	w2, #0x24
   1aa58:	b.ne	1aab4 <printf_parse@@Base+0x2b8>  // b.any
   1aa5c:	mov	x1, #0x0                   	// #0
   1aa60:	mov	x6, #0xa                   	// #10
   1aa64:	b	1aa8c <printf_parse@@Base+0x290>
   1aa68:	mul	x2, x1, x6
   1aa6c:	mov	x4, #0x9999999999999999    	// #-7378697629483820647
   1aa70:	movk	x4, #0x1999, lsl #48
   1aa74:	cmp	x1, x4
   1aa78:	csel	x1, x2, x21, ls  // ls = plast
   1aa7c:	sxtw	x0, w0
   1aa80:	adds	x0, x0, x1
   1aa84:	add	x3, x3, #0x1
   1aa88:	csel	x1, x0, x21, cc  // cc = lo, ul, last
   1aa8c:	ldrb	w0, [x3]
   1aa90:	sub	w0, w0, #0x30
   1aa94:	and	w2, w0, #0xff
   1aa98:	cmp	w2, #0x9
   1aa9c:	b.ls	1aa68 <printf_parse@@Base+0x26c>  // b.plast
   1aaa0:	sub	x0, x1, #0x1
   1aaa4:	cmn	x0, #0x3
   1aaa8:	b.hi	1ac00 <printf_parse@@Base+0x404>  // b.pmore
   1aaac:	add	x3, x3, #0x1
   1aab0:	str	x0, [x28, #40]
   1aab4:	ldr	x0, [x28, #40]
   1aab8:	cmn	x0, #0x1
   1aabc:	b.ne	1aad0 <printf_parse@@Base+0x2d4>  // b.any
   1aac0:	str	x25, [x28, #40]
   1aac4:	adds	x0, x25, #0x1
   1aac8:	b.eq	1ac00 <printf_parse@@Base+0x404>  // b.none
   1aacc:	mov	x25, x0
   1aad0:	ldr	x6, [x28, #40]
   1aad4:	cmp	x24, x6
   1aad8:	b.hi	1ab58 <printf_parse@@Base+0x35c>  // b.pmore
   1aadc:	tbnz	x24, #63, 1b228 <printf_parse@@Base+0xa2c>
   1aae0:	lsl	x24, x24, #1
   1aae4:	cmp	x6, x24
   1aae8:	b.cc	1aaf8 <printf_parse@@Base+0x2fc>  // b.lo, b.ul, b.last
   1aaec:	adds	x4, x6, #0x1
   1aaf0:	mov	x24, x4
   1aaf4:	b.cs	1b1f0 <printf_parse@@Base+0x9f4>  // b.hs, b.nlast
   1aaf8:	mov	x1, #0x7ffffffffffffff     	// #576460752303423487
   1aafc:	cmp	x24, x1
   1ab00:	ldr	x0, [x26, #8]
   1ab04:	b.hi	1b1f0 <printf_parse@@Base+0x9f4>  // b.pmore
   1ab08:	stp	x3, x6, [sp, #128]
   1ab0c:	lsl	x1, x24, #5
   1ab10:	cmp	x20, x0
   1ab14:	b.eq	1ab60 <printf_parse@@Base+0x364>  // b.none
   1ab18:	bl	ad60 <realloc@plt>
   1ab1c:	mov	x7, x0
   1ab20:	ldp	x3, x6, [sp, #128]
   1ab24:	ldr	x0, [x26, #8]
   1ab28:	cbz	x7, 1b1f0 <printf_parse@@Base+0x9f4>
   1ab2c:	cmp	x20, x0
   1ab30:	b.ne	1ab54 <printf_parse@@Base+0x358>  // b.any
   1ab34:	ldr	x2, [x26]
   1ab38:	mov	x0, x7
   1ab3c:	mov	x1, x20
   1ab40:	stp	x3, x6, [sp, #128]
   1ab44:	lsl	x2, x2, #5
   1ab48:	bl	a6f0 <memcpy@plt>
   1ab4c:	ldp	x3, x6, [sp, #128]
   1ab50:	mov	x7, x0
   1ab54:	str	x7, [x26, #8]
   1ab58:	ldr	x1, [x26, #8]
   1ab5c:	b	1ab84 <printf_parse@@Base+0x388>
   1ab60:	mov	x0, x1
   1ab64:	bl	aab0 <malloc@plt>
   1ab68:	mov	x7, x0
   1ab6c:	ldp	x3, x6, [sp, #128]
   1ab70:	b	1ab24 <printf_parse@@Base+0x328>
   1ab74:	add	x2, x0, #0x1
   1ab78:	lsl	x0, x0, #5
   1ab7c:	str	x2, [x26]
   1ab80:	str	wzr, [x1, x0]
   1ab84:	ldr	x0, [x26]
   1ab88:	cmp	x0, x6
   1ab8c:	b.ls	1ab74 <printf_parse@@Base+0x378>  // b.plast
   1ab90:	lsl	x6, x6, #5
   1ab94:	ldr	w0, [x1, x6]
   1ab98:	cbnz	w0, 1abf8 <printf_parse@@Base+0x3fc>
   1ab9c:	mov	w0, #0x5                   	// #5
   1aba0:	str	w0, [x1, x6]
   1aba4:	ldrb	w0, [x3]
   1aba8:	cmp	w0, #0x2e
   1abac:	b.ne	1ae5c <printf_parse@@Base+0x660>  // b.any
   1abb0:	ldrb	w0, [x3, #1]
   1abb4:	cmp	w0, #0x2a
   1abb8:	b.ne	1ae1c <printf_parse@@Base+0x620>  // b.any
   1abbc:	ldr	x0, [sp, #112]
   1abc0:	add	x23, x3, #0x2
   1abc4:	ldr	x1, [sp, #112]
   1abc8:	cmp	x0, #0x2
   1abcc:	stp	x3, x23, [x28, #48]
   1abd0:	mov	x0, #0x2                   	// #2
   1abd4:	csel	x0, x1, x0, cs  // cs = hs, nlast
   1abd8:	str	x0, [sp, #112]
   1abdc:	ldrb	w0, [x3, #2]
   1abe0:	sub	w0, w0, #0x30
   1abe4:	and	w0, w0, #0xff
   1abe8:	cmp	w0, #0x9
   1abec:	b.hi	1ad04 <printf_parse@@Base+0x508>  // b.pmore
   1abf0:	mov	x1, x23
   1abf4:	b	1ac90 <printf_parse@@Base+0x494>
   1abf8:	cmp	w0, #0x5
   1abfc:	b.eq	1aba4 <printf_parse@@Base+0x3a8>  // b.none
   1ac00:	ldr	x0, [x26, #8]
   1ac04:	cmp	x20, x0
   1ac08:	b.eq	1ac10 <printf_parse@@Base+0x414>  // b.none
   1ac0c:	bl	b050 <free@plt>
   1ac10:	ldr	x0, [x19, #8]
   1ac14:	cmp	x22, x0
   1ac18:	b.eq	1ac20 <printf_parse@@Base+0x424>  // b.none
   1ac1c:	bl	b050 <free@plt>
   1ac20:	bl	b540 <__errno_location@plt>
   1ac24:	mov	w1, #0x16                  	// #22
   1ac28:	str	w1, [x0]
   1ac2c:	mov	w0, #0xffffffff            	// #-1
   1ac30:	b	1a87c <printf_parse@@Base+0x80>
   1ac34:	sub	w1, w1, #0x30
   1ac38:	and	w1, w1, #0xff
   1ac3c:	cmp	w1, #0x9
   1ac40:	b.hi	1ac84 <printf_parse@@Base+0x488>  // b.pmore
   1ac44:	mov	x2, x0
   1ac48:	str	x0, [x28, #24]
   1ac4c:	ldrb	w1, [x2]
   1ac50:	mov	x3, x2
   1ac54:	add	x2, x2, #0x1
   1ac58:	sub	w1, w1, #0x30
   1ac5c:	and	w1, w1, #0xff
   1ac60:	cmp	w1, #0x9
   1ac64:	b.ls	1ac4c <printf_parse@@Base+0x450>  // b.plast
   1ac68:	ldr	x1, [sp, #104]
   1ac6c:	sub	x0, x3, x0
   1ac70:	str	x3, [x28, #32]
   1ac74:	cmp	x1, x0
   1ac78:	csel	x0, x1, x0, cs  // cs = hs, nlast
   1ac7c:	str	x0, [sp, #104]
   1ac80:	b	1aba4 <printf_parse@@Base+0x3a8>
   1ac84:	mov	x3, x0
   1ac88:	b	1aba4 <printf_parse@@Base+0x3a8>
   1ac8c:	add	x1, x1, #0x1
   1ac90:	ldrb	w2, [x1]
   1ac94:	sub	w0, w2, #0x30
   1ac98:	and	w0, w0, #0xff
   1ac9c:	cmp	w0, #0x9
   1aca0:	b.ls	1ac8c <printf_parse@@Base+0x490>  // b.plast
   1aca4:	cmp	w2, #0x24
   1aca8:	b.ne	1ad04 <printf_parse@@Base+0x508>  // b.any
   1acac:	mov	x1, #0x0                   	// #0
   1acb0:	mov	x3, #0xa                   	// #10
   1acb4:	b	1acdc <printf_parse@@Base+0x4e0>
   1acb8:	mul	x2, x1, x3
   1acbc:	mov	x4, #0x9999999999999999    	// #-7378697629483820647
   1acc0:	movk	x4, #0x1999, lsl #48
   1acc4:	cmp	x1, x4
   1acc8:	csel	x1, x2, x21, ls  // ls = plast
   1accc:	sxtw	x0, w0
   1acd0:	adds	x0, x0, x1
   1acd4:	add	x23, x23, #0x1
   1acd8:	csel	x1, x0, x21, cc  // cc = lo, ul, last
   1acdc:	ldrb	w0, [x23]
   1ace0:	sub	w0, w0, #0x30
   1ace4:	and	w2, w0, #0xff
   1ace8:	cmp	w2, #0x9
   1acec:	b.ls	1acb8 <printf_parse@@Base+0x4bc>  // b.plast
   1acf0:	sub	x0, x1, #0x1
   1acf4:	cmn	x0, #0x3
   1acf8:	b.hi	1ac00 <printf_parse@@Base+0x404>  // b.pmore
   1acfc:	add	x23, x23, #0x1
   1ad00:	str	x0, [x28, #64]
   1ad04:	ldr	x0, [x28, #64]
   1ad08:	cmn	x0, #0x1
   1ad0c:	b.ne	1ad20 <printf_parse@@Base+0x524>  // b.any
   1ad10:	str	x25, [x28, #64]
   1ad14:	adds	x0, x25, #0x1
   1ad18:	b.eq	1ac00 <printf_parse@@Base+0x404>  // b.none
   1ad1c:	mov	x25, x0
   1ad20:	ldr	x7, [x28, #64]
   1ad24:	cmp	x24, x7
   1ad28:	b.hi	1ada8 <printf_parse@@Base+0x5ac>  // b.pmore
   1ad2c:	tbnz	x24, #63, 1b21c <printf_parse@@Base+0xa20>
   1ad30:	lsl	x24, x24, #1
   1ad34:	cmp	x7, x24
   1ad38:	b.cc	1ad48 <printf_parse@@Base+0x54c>  // b.lo, b.ul, b.last
   1ad3c:	adds	x4, x7, #0x1
   1ad40:	mov	x24, x4
   1ad44:	b.cs	1b1f0 <printf_parse@@Base+0x9f4>  // b.hs, b.nlast
   1ad48:	mov	x1, #0x7ffffffffffffff     	// #576460752303423487
   1ad4c:	cmp	x24, x1
   1ad50:	ldr	x0, [x26, #8]
   1ad54:	b.hi	1b1f0 <printf_parse@@Base+0x9f4>  // b.pmore
   1ad58:	str	x7, [sp, #128]
   1ad5c:	lsl	x1, x24, #5
   1ad60:	cmp	x20, x0
   1ad64:	b.eq	1adb0 <printf_parse@@Base+0x5b4>  // b.none
   1ad68:	bl	ad60 <realloc@plt>
   1ad6c:	mov	x3, x0
   1ad70:	ldr	x0, [x26, #8]
   1ad74:	ldr	x7, [sp, #128]
   1ad78:	cbz	x3, 1b1f0 <printf_parse@@Base+0x9f4>
   1ad7c:	cmp	x20, x0
   1ad80:	b.ne	1ada4 <printf_parse@@Base+0x5a8>  // b.any
   1ad84:	ldr	x2, [x26]
   1ad88:	mov	x0, x3
   1ad8c:	mov	x1, x20
   1ad90:	str	x7, [sp, #128]
   1ad94:	lsl	x2, x2, #5
   1ad98:	bl	a6f0 <memcpy@plt>
   1ad9c:	ldr	x7, [sp, #128]
   1ada0:	mov	x3, x0
   1ada4:	str	x3, [x26, #8]
   1ada8:	ldr	x1, [x26, #8]
   1adac:	b	1adcc <printf_parse@@Base+0x5d0>
   1adb0:	mov	x0, x1
   1adb4:	bl	aab0 <malloc@plt>
   1adb8:	b	1ad6c <printf_parse@@Base+0x570>
   1adbc:	add	x2, x0, #0x1
   1adc0:	lsl	x0, x0, #5
   1adc4:	str	x2, [x26]
   1adc8:	str	wzr, [x1, x0]
   1adcc:	ldr	x0, [x26]
   1add0:	cmp	x0, x7
   1add4:	b.ls	1adbc <printf_parse@@Base+0x5c0>  // b.plast
   1add8:	lsl	x2, x7, #5
   1addc:	ldr	w0, [x1, x2]
   1ade0:	cbnz	w0, 1ae10 <printf_parse@@Base+0x614>
   1ade4:	mov	w0, #0x5                   	// #5
   1ade8:	str	w0, [x1, x2]
   1adec:	mov	w1, #0x0                   	// #0
   1adf0:	mov	w2, #0x1                   	// #1
   1adf4:	ldrb	w7, [x23], #1
   1adf8:	cmp	w7, #0x68
   1adfc:	b.ne	1ae64 <printf_parse@@Base+0x668>  // b.any
   1ae00:	and	w0, w1, #0x1
   1ae04:	lsl	w0, w2, w0
   1ae08:	orr	w1, w1, w0
   1ae0c:	b	1adf4 <printf_parse@@Base+0x5f8>
   1ae10:	cmp	w0, #0x5
   1ae14:	b.eq	1adec <printf_parse@@Base+0x5f0>  // b.none
   1ae18:	b	1ac00 <printf_parse@@Base+0x404>
   1ae1c:	add	x1, x3, #0x1
   1ae20:	str	x3, [x28, #48]
   1ae24:	ldrb	w0, [x1]
   1ae28:	mov	x23, x1
   1ae2c:	add	x1, x1, #0x1
   1ae30:	sub	w0, w0, #0x30
   1ae34:	and	w0, w0, #0xff
   1ae38:	cmp	w0, #0x9
   1ae3c:	b.ls	1ae24 <printf_parse@@Base+0x628>  // b.plast
   1ae40:	ldr	x0, [sp, #112]
   1ae44:	sub	x3, x23, x3
   1ae48:	str	x23, [x28, #56]
   1ae4c:	cmp	x0, x3
   1ae50:	csel	x0, x0, x3, cs  // cs = hs, nlast
   1ae54:	str	x0, [sp, #112]
   1ae58:	b	1adec <printf_parse@@Base+0x5f0>
   1ae5c:	mov	x23, x3
   1ae60:	b	1adec <printf_parse@@Base+0x5f0>
   1ae64:	cmp	w7, #0x4c
   1ae68:	b.ne	1ae74 <printf_parse@@Base+0x678>  // b.any
   1ae6c:	orr	w1, w1, #0x4
   1ae70:	b	1adf4 <printf_parse@@Base+0x5f8>
   1ae74:	cmp	w7, #0x6c
   1ae78:	b.ne	1ae84 <printf_parse@@Base+0x688>  // b.any
   1ae7c:	add	w1, w1, #0x8
   1ae80:	b	1adf4 <printf_parse@@Base+0x5f8>
   1ae84:	cmp	w7, #0x6a
   1ae88:	b.eq	1ae7c <printf_parse@@Base+0x680>  // b.none
   1ae8c:	and	w0, w7, #0xffffffdf
   1ae90:	cmp	w0, #0x5a
   1ae94:	b.eq	1ae7c <printf_parse@@Base+0x680>  // b.none
   1ae98:	cmp	w7, #0x74
   1ae9c:	b.eq	1ae7c <printf_parse@@Base+0x680>  // b.none
   1aea0:	cmp	w7, #0x78
   1aea4:	b.hi	1ac00 <printf_parse@@Base+0x404>  // b.pmore
   1aea8:	cmp	w7, #0x52
   1aeac:	b.hi	1aee0 <printf_parse@@Base+0x6e4>  // b.pmore
   1aeb0:	cmp	w7, #0x43
   1aeb4:	b.eq	1b074 <printf_parse@@Base+0x878>  // b.none
   1aeb8:	b.hi	1afbc <printf_parse@@Base+0x7c0>  // b.pmore
   1aebc:	cmp	w7, #0x25
   1aec0:	b.eq	1b1cc <printf_parse@@Base+0x9d0>  // b.none
   1aec4:	cmp	w7, #0x41
   1aec8:	b.ne	1ac00 <printf_parse@@Base+0x404>  // b.any
   1aecc:	cmp	w1, #0xf
   1aed0:	b.gt	1b0b8 <printf_parse@@Base+0x8bc>
   1aed4:	ubfx	x3, x1, #2, #1
   1aed8:	add	w3, w3, #0xb
   1aedc:	b	1af0c <printf_parse@@Base+0x710>
   1aee0:	sub	w2, w7, #0x53
   1aee4:	cmp	w2, #0x25
   1aee8:	b.hi	1ac00 <printf_parse@@Base+0x404>  // b.pmore
   1aeec:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   1aef0:	add	x0, x0, #0x11c
   1aef4:	ldrh	w0, [x0, w2, uxtw #1]
   1aef8:	adr	x2, 1af04 <printf_parse@@Base+0x708>
   1aefc:	add	x0, x2, w0, sxth #2
   1af00:	br	x0
   1af04:	mov	w3, #0x10                  	// #16
   1af08:	mov	w7, #0x73                  	// #115
   1af0c:	cmn	x27, #0x1
   1af10:	b.eq	1b0d0 <printf_parse@@Base+0x8d4>  // b.none
   1af14:	str	x27, [x28, #80]
   1af18:	mov	x27, x25
   1af1c:	ldr	x25, [x28, #80]
   1af20:	cmp	x24, x25
   1af24:	b.hi	1afb4 <printf_parse@@Base+0x7b8>  // b.pmore
   1af28:	tbnz	x24, #63, 1b1e8 <printf_parse@@Base+0x9ec>
   1af2c:	lsl	x24, x24, #1
   1af30:	cmp	x25, x24
   1af34:	b.cc	1af44 <printf_parse@@Base+0x748>  // b.lo, b.ul, b.last
   1af38:	adds	x4, x25, #0x1
   1af3c:	mov	x24, x4
   1af40:	b.cs	1b1f0 <printf_parse@@Base+0x9f4>  // b.hs, b.nlast
   1af44:	mov	x1, #0x7ffffffffffffff     	// #576460752303423487
   1af48:	cmp	x24, x1
   1af4c:	ldr	x0, [x26, #8]
   1af50:	b.hi	1b1f0 <printf_parse@@Base+0x9f4>  // b.pmore
   1af54:	str	w7, [sp, #128]
   1af58:	lsl	x1, x24, #5
   1af5c:	str	w3, [sp, #136]
   1af60:	cmp	x20, x0
   1af64:	b.eq	1b0e0 <printf_parse@@Base+0x8e4>  // b.none
   1af68:	bl	ad60 <realloc@plt>
   1af6c:	mov	x9, x0
   1af70:	ldr	w7, [sp, #128]
   1af74:	ldr	w3, [sp, #136]
   1af78:	ldr	x0, [x26, #8]
   1af7c:	cbz	x9, 1b1f0 <printf_parse@@Base+0x9f4>
   1af80:	cmp	x20, x0
   1af84:	b.ne	1afb0 <printf_parse@@Base+0x7b4>  // b.any
   1af88:	ldr	x2, [x26]
   1af8c:	mov	x0, x9
   1af90:	mov	x1, x20
   1af94:	str	w7, [sp, #128]
   1af98:	str	w3, [sp, #136]
   1af9c:	lsl	x2, x2, #5
   1afa0:	bl	a6f0 <memcpy@plt>
   1afa4:	ldr	w7, [sp, #128]
   1afa8:	mov	x9, x0
   1afac:	ldr	w3, [sp, #136]
   1afb0:	str	x9, [x26, #8]
   1afb4:	ldr	x1, [x26, #8]
   1afb8:	b	1b108 <printf_parse@@Base+0x90c>
   1afbc:	sub	w0, w7, #0x45
   1afc0:	and	w0, w0, #0xff
   1afc4:	cmp	w0, #0x2
   1afc8:	b.hi	1ac00 <printf_parse@@Base+0x404>  // b.pmore
   1afcc:	b	1aecc <printf_parse@@Base+0x6d0>
   1afd0:	cmp	w1, #0xf
   1afd4:	b.gt	1b088 <printf_parse@@Base+0x88c>
   1afd8:	tbnz	w1, #2, 1b088 <printf_parse@@Base+0x88c>
   1afdc:	cmp	w1, #0x7
   1afe0:	b.gt	1b090 <printf_parse@@Base+0x894>
   1afe4:	tbnz	w1, #1, 1b098 <printf_parse@@Base+0x89c>
   1afe8:	tst	x1, #0x1
   1afec:	mov	w3, #0x3                   	// #3
   1aff0:	mov	w0, #0x5                   	// #5
   1aff4:	csel	w3, w3, w0, ne  // ne = any
   1aff8:	b	1af0c <printf_parse@@Base+0x710>
   1affc:	cmp	w1, #0xf
   1b000:	b.gt	1b0a0 <printf_parse@@Base+0x8a4>
   1b004:	tbnz	w1, #2, 1b0a0 <printf_parse@@Base+0x8a4>
   1b008:	cmp	w1, #0x7
   1b00c:	b.gt	1b0a8 <printf_parse@@Base+0x8ac>
   1b010:	tbnz	w1, #1, 1b0b0 <printf_parse@@Base+0x8b4>
   1b014:	tst	x1, #0x1
   1b018:	mov	w3, #0x4                   	// #4
   1b01c:	mov	w0, #0x6                   	// #6
   1b020:	b	1aff4 <printf_parse@@Base+0x7f8>
   1b024:	cmp	w1, #0x7
   1b028:	cset	w3, gt
   1b02c:	add	w3, w3, #0xd
   1b030:	b	1af0c <printf_parse@@Base+0x710>
   1b034:	cmp	w1, #0x7
   1b038:	cset	w3, gt
   1b03c:	add	w3, w3, #0xf
   1b040:	b	1af0c <printf_parse@@Base+0x710>
   1b044:	cmp	w1, #0xf
   1b048:	b.gt	1b0c0 <printf_parse@@Base+0x8c4>
   1b04c:	tbnz	w1, #2, 1b0c0 <printf_parse@@Base+0x8c4>
   1b050:	cmp	w1, #0x7
   1b054:	b.gt	1b0c8 <printf_parse@@Base+0x8cc>
   1b058:	and	w0, w1, #0x1
   1b05c:	tst	x1, #0x2
   1b060:	mov	w3, #0x14                  	// #20
   1b064:	sub	w3, w3, w0
   1b068:	mov	w0, #0x12                  	// #18
   1b06c:	csel	w3, w3, w0, eq  // eq = none
   1b070:	b	1af0c <printf_parse@@Base+0x710>
   1b074:	mov	w3, #0xe                   	// #14
   1b078:	mov	w7, #0x63                  	// #99
   1b07c:	b	1af0c <printf_parse@@Base+0x710>
   1b080:	mov	w3, #0x11                  	// #17
   1b084:	b	1af0c <printf_parse@@Base+0x710>
   1b088:	mov	w3, #0x9                   	// #9
   1b08c:	b	1af0c <printf_parse@@Base+0x710>
   1b090:	mov	w3, #0x7                   	// #7
   1b094:	b	1af0c <printf_parse@@Base+0x710>
   1b098:	mov	w3, #0x1                   	// #1
   1b09c:	b	1af0c <printf_parse@@Base+0x710>
   1b0a0:	mov	w3, #0xa                   	// #10
   1b0a4:	b	1af0c <printf_parse@@Base+0x710>
   1b0a8:	mov	w3, #0x8                   	// #8
   1b0ac:	b	1af0c <printf_parse@@Base+0x710>
   1b0b0:	mov	w3, #0x2                   	// #2
   1b0b4:	b	1af0c <printf_parse@@Base+0x710>
   1b0b8:	mov	w3, #0xc                   	// #12
   1b0bc:	b	1af0c <printf_parse@@Base+0x710>
   1b0c0:	mov	w3, #0x16                  	// #22
   1b0c4:	b	1af0c <printf_parse@@Base+0x710>
   1b0c8:	mov	w3, #0x15                  	// #21
   1b0cc:	b	1af0c <printf_parse@@Base+0x710>
   1b0d0:	str	x25, [x28, #80]
   1b0d4:	adds	x27, x25, #0x1
   1b0d8:	b.ne	1af1c <printf_parse@@Base+0x720>  // b.any
   1b0dc:	b	1ac00 <printf_parse@@Base+0x404>
   1b0e0:	mov	x0, x1
   1b0e4:	bl	aab0 <malloc@plt>
   1b0e8:	ldr	w7, [sp, #128]
   1b0ec:	mov	x9, x0
   1b0f0:	ldr	w3, [sp, #136]
   1b0f4:	b	1af78 <printf_parse@@Base+0x77c>
   1b0f8:	add	x2, x0, #0x1
   1b0fc:	lsl	x0, x0, #5
   1b100:	str	x2, [x26]
   1b104:	str	wzr, [x1, x0]
   1b108:	ldr	x0, [x26]
   1b10c:	cmp	x0, x25
   1b110:	b.ls	1b0f8 <printf_parse@@Base+0x8fc>  // b.plast
   1b114:	lsl	x8, x25, #5
   1b118:	ldr	w0, [x1, x8]
   1b11c:	cbnz	w0, 1b1c0 <printf_parse@@Base+0x9c4>
   1b120:	str	w3, [x1, x8]
   1b124:	strb	w7, [x28, #72]
   1b128:	ldr	x1, [sp, #120]
   1b12c:	ldr	x0, [x19]
   1b130:	str	x23, [x28, #8]
   1b134:	add	x0, x0, #0x1
   1b138:	str	x0, [x19]
   1b13c:	cmp	x1, x0
   1b140:	b.hi	1b1b8 <printf_parse@@Base+0x9bc>  // b.pmore
   1b144:	mov	x0, x1
   1b148:	tbnz	x1, #63, 1b1f0 <printf_parse@@Base+0x9f4>
   1b14c:	lsl	x28, x1, #1
   1b150:	mov	x1, #0xe8ba                	// #59578
   1b154:	movk	x1, #0x8ba2, lsl #16
   1b158:	movk	x1, #0xba2e, lsl #32
   1b15c:	movk	x1, #0x2e8, lsl #48
   1b160:	cmp	x1, x0, lsl #1
   1b164:	b.cc	1b1f0 <printf_parse@@Base+0x9f4>  // b.lo, b.ul, b.last
   1b168:	mov	x1, #0xb0                  	// #176
   1b16c:	mul	x1, x0, x1
   1b170:	ldr	x0, [x19, #8]
   1b174:	cmp	x22, x0
   1b178:	b.eq	1b1d4 <printf_parse@@Base+0x9d8>  // b.none
   1b17c:	bl	ad60 <realloc@plt>
   1b180:	mov	x3, x0
   1b184:	cbz	x0, 1b1f0 <printf_parse@@Base+0x9f4>
   1b188:	ldr	x0, [x19, #8]
   1b18c:	cmp	x22, x0
   1b190:	b.ne	1b1b0 <printf_parse@@Base+0x9b4>  // b.any
   1b194:	ldr	x2, [x19]
   1b198:	mov	x0, #0x58                  	// #88
   1b19c:	mov	x1, x22
   1b1a0:	mul	x2, x2, x0
   1b1a4:	mov	x0, x3
   1b1a8:	bl	a6f0 <memcpy@plt>
   1b1ac:	mov	x3, x0
   1b1b0:	str	x3, [x19, #8]
   1b1b4:	str	x28, [sp, #120]
   1b1b8:	mov	x25, x27
   1b1bc:	b	1a850 <printf_parse@@Base+0x54>
   1b1c0:	cmp	w0, w3
   1b1c4:	b.eq	1b124 <printf_parse@@Base+0x928>  // b.none
   1b1c8:	b	1ac00 <printf_parse@@Base+0x404>
   1b1cc:	mov	x27, x25
   1b1d0:	b	1b124 <printf_parse@@Base+0x928>
   1b1d4:	mov	x0, x1
   1b1d8:	bl	aab0 <malloc@plt>
   1b1dc:	b	1b180 <printf_parse@@Base+0x984>
   1b1e0:	mov	x23, x0
   1b1e4:	b	1a850 <printf_parse@@Base+0x54>
   1b1e8:	cmn	x25, #0x1
   1b1ec:	b.eq	1af38 <printf_parse@@Base+0x73c>  // b.none
   1b1f0:	ldr	x0, [x26, #8]
   1b1f4:	cmp	x20, x0
   1b1f8:	b.eq	1b200 <printf_parse@@Base+0xa04>  // b.none
   1b1fc:	bl	b050 <free@plt>
   1b200:	ldr	x0, [x19, #8]
   1b204:	cmp	x22, x0
   1b208:	b.eq	1b210 <printf_parse@@Base+0xa14>  // b.none
   1b20c:	bl	b050 <free@plt>
   1b210:	bl	b540 <__errno_location@plt>
   1b214:	mov	w1, #0xc                   	// #12
   1b218:	b	1ac28 <printf_parse@@Base+0x42c>
   1b21c:	cmn	x7, #0x1
   1b220:	b.eq	1ad3c <printf_parse@@Base+0x540>  // b.none
   1b224:	b	1b1f0 <printf_parse@@Base+0x9f4>
   1b228:	cmn	x6, #0x1
   1b22c:	b.eq	1aaec <printf_parse@@Base+0x2f0>  // b.none
   1b230:	b	1b1f0 <printf_parse@@Base+0x9f4>
   1b234:	asr	x2, x1, #6
   1b238:	mov	x3, #0x1                   	// #1
   1b23c:	lsl	x3, x3, x1
   1b240:	lsl	x2, x2, #3
   1b244:	ldr	x1, [x0, x2]
   1b248:	orr	x1, x1, x3
   1b24c:	str	x1, [x0, x2]
   1b250:	ret
   1b254:	mov	x1, #0x0                   	// #0
   1b258:	ldr	x2, [x0, x1, lsl #3]
   1b25c:	mvn	x2, x2
   1b260:	str	x2, [x0, x1, lsl #3]
   1b264:	add	x1, x1, #0x1
   1b268:	cmp	x1, #0x4
   1b26c:	b.ne	1b258 <printf_parse@@Base+0xa5c>  // b.any
   1b270:	ret
   1b274:	mov	x2, #0x0                   	// #0
   1b278:	ldr	x3, [x0, x2]
   1b27c:	ldr	x4, [x1, x2]
   1b280:	orr	x3, x3, x4
   1b284:	str	x3, [x0, x2]
   1b288:	add	x2, x2, #0x8
   1b28c:	cmp	x2, #0x20
   1b290:	b.ne	1b278 <printf_parse@@Base+0xa7c>  // b.any
   1b294:	ret
   1b298:	mov	x2, #0x0                   	// #0
   1b29c:	ldr	x3, [x0, x2]
   1b2a0:	ldr	x4, [x1, x2]
   1b2a4:	and	x3, x3, x4
   1b2a8:	str	x3, [x0, x2]
   1b2ac:	add	x2, x2, #0x8
   1b2b0:	cmp	x2, #0x20
   1b2b4:	b.ne	1b29c <printf_parse@@Base+0xaa0>  // b.any
   1b2b8:	ret
   1b2bc:	ldr	w2, [x0, #144]
   1b2c0:	cmp	w2, #0x1
   1b2c4:	b.ne	1b2d4 <printf_parse@@Base+0xad8>  // b.any
   1b2c8:	ldr	x0, [x0, #8]
   1b2cc:	ldrb	w0, [x0, x1]
   1b2d0:	ret
   1b2d4:	ldr	x0, [x0, #16]
   1b2d8:	ldr	w0, [x0, x1, lsl #2]
   1b2dc:	b	1b2d0 <printf_parse@@Base+0xad4>
   1b2e0:	ldr	x2, [x0, #64]
   1b2e4:	ldr	x1, [x0, #88]
   1b2e8:	cmp	x2, x1
   1b2ec:	csel	x2, x2, x1, le
   1b2f0:	ldr	x1, [x0, #48]
   1b2f4:	mov	x3, x1
   1b2f8:	cmp	x3, x2
   1b2fc:	b.lt	1b314 <printf_parse@@Base+0xb18>  // b.tstop
   1b300:	subs	x3, x2, x1
   1b304:	csel	x3, x3, xzr, ge  // ge = tcont
   1b308:	add	x1, x1, x3
   1b30c:	stp	x1, x1, [x0, #48]
   1b310:	ret
   1b314:	ldr	x4, [x0]
   1b318:	ldr	x5, [x0, #40]
   1b31c:	add	x4, x4, x3
   1b320:	ldrb	w4, [x4, x5]
   1b324:	ldr	x5, [x0, #120]
   1b328:	ldrb	w5, [x5, x4]
   1b32c:	ldr	x4, [x0, #8]
   1b330:	strb	w5, [x4, x3]
   1b334:	add	x3, x3, #0x1
   1b338:	b	1b2f8 <printf_parse@@Base+0xafc>
   1b33c:	cmp	x0, #0x0
   1b340:	mov	x3, x0
   1b344:	cset	w2, eq  // eq = none
   1b348:	cmp	x1, #0x0
   1b34c:	csinc	w0, w2, wzr, ne  // ne = any
   1b350:	cbnz	w0, 1b390 <printf_parse@@Base+0xb94>
   1b354:	ldr	x4, [x1, #8]
   1b358:	ldr	x2, [x3, #8]
   1b35c:	cmp	x2, x4
   1b360:	b.ne	1b370 <printf_parse@@Base+0xb74>  // b.any
   1b364:	subs	x2, x2, #0x1
   1b368:	b.pl	1b374 <printf_parse@@Base+0xb78>  // b.nfrst
   1b36c:	mov	w0, #0x1                   	// #1
   1b370:	ret
   1b374:	ldr	x6, [x1, #16]
   1b378:	lsl	x4, x2, #3
   1b37c:	ldr	x5, [x3, #16]
   1b380:	ldr	x5, [x5, x4]
   1b384:	ldr	x4, [x6, x4]
   1b388:	cmp	x5, x4
   1b38c:	b	1b360 <printf_parse@@Base+0xb64>
   1b390:	mov	w0, #0x0                   	// #0
   1b394:	b	1b370 <printf_parse@@Base+0xb74>
   1b398:	ldr	x2, [x0, #8]
   1b39c:	cmp	x2, #0x0
   1b3a0:	b.le	1b3ec <printf_parse@@Base+0xbf0>
   1b3a4:	sub	x2, x2, #0x1
   1b3a8:	ldr	x4, [x0, #16]
   1b3ac:	mov	x0, #0x0                   	// #0
   1b3b0:	cmp	x0, x2
   1b3b4:	b.cc	1b3c8 <printf_parse@@Base+0xbcc>  // b.lo, b.ul, b.last
   1b3b8:	ldr	x2, [x4, x0, lsl #3]
   1b3bc:	cmp	x2, x1
   1b3c0:	csinc	x0, xzr, x0, ne  // ne = any
   1b3c4:	ret
   1b3c8:	add	x3, x0, x2
   1b3cc:	lsr	x3, x3, #1
   1b3d0:	ldr	x5, [x4, x3, lsl #3]
   1b3d4:	cmp	x5, x1
   1b3d8:	b.ge	1b3e4 <printf_parse@@Base+0xbe8>  // b.tcont
   1b3dc:	add	x0, x3, #0x1
   1b3e0:	b	1b3b0 <printf_parse@@Base+0xbb4>
   1b3e4:	mov	x2, x3
   1b3e8:	b	1b3b0 <printf_parse@@Base+0xbb4>
   1b3ec:	mov	x0, #0x0                   	// #0
   1b3f0:	b	1b3c4 <printf_parse@@Base+0xbc8>
   1b3f4:	ldr	x3, [x1, #72]
   1b3f8:	ldr	x4, [x1, #104]
   1b3fc:	cmp	x4, x3
   1b400:	b.gt	1b414 <printf_parse@@Base+0xc18>
   1b404:	mov	w1, #0x2                   	// #2
   1b408:	strb	w1, [x0, #8]
   1b40c:	mov	w0, #0x0                   	// #0
   1b410:	ret
   1b414:	ldr	x5, [x1, #8]
   1b418:	ldr	w6, [x1, #144]
   1b41c:	ldrb	w4, [x5, x3]
   1b420:	cmp	w6, #0x1
   1b424:	strb	w4, [x0]
   1b428:	b.le	1b450 <printf_parse@@Base+0xc54>
   1b42c:	ldr	x6, [x1, #48]
   1b430:	cmp	x3, x6
   1b434:	b.eq	1b450 <printf_parse@@Base+0xc54>  // b.none
   1b438:	ldr	x6, [x1, #16]
   1b43c:	ldr	w6, [x6, x3, lsl #2]
   1b440:	cmn	w6, #0x1
   1b444:	b.ne	1b450 <printf_parse@@Base+0xc54>  // b.any
   1b448:	mov	w1, #0x1                   	// #1
   1b44c:	b	1b510 <printf_parse@@Base+0xd14>
   1b450:	cmp	w4, #0x5c
   1b454:	b.ne	1b47c <printf_parse@@Base+0xc80>  // b.any
   1b458:	tbz	w2, #0, 1b448 <printf_parse@@Base+0xc4c>
   1b45c:	ldr	x2, [x1, #88]
   1b460:	add	x3, x3, #0x1
   1b464:	cmp	x3, x2
   1b468:	b.ge	1b448 <printf_parse@@Base+0xc4c>  // b.tcont
   1b46c:	str	x3, [x1, #72]
   1b470:	ldrb	w1, [x5, x3]
   1b474:	strb	w1, [x0]
   1b478:	b	1b448 <printf_parse@@Base+0xc4c>
   1b47c:	cmp	w4, #0x5b
   1b480:	b.ne	1b4f4 <printf_parse@@Base+0xcf8>  // b.any
   1b484:	ldr	x6, [x1, #88]
   1b488:	add	x4, x3, #0x1
   1b48c:	cmp	x4, x6
   1b490:	b.ge	1b4dc <printf_parse@@Base+0xce0>  // b.tcont
   1b494:	add	x3, x5, x3
   1b498:	ldrb	w1, [x3, #1]
   1b49c:	strb	w1, [x0]
   1b4a0:	cmp	w1, #0x3a
   1b4a4:	b.eq	1b4d0 <printf_parse@@Base+0xcd4>  // b.none
   1b4a8:	cmp	w1, #0x3d
   1b4ac:	b.eq	1b4c8 <printf_parse@@Base+0xccc>  // b.none
   1b4b0:	cmp	w1, #0x2e
   1b4b4:	b.ne	1b4dc <printf_parse@@Base+0xce0>  // b.any
   1b4b8:	mov	w1, #0x1a                  	// #26
   1b4bc:	strb	w1, [x0, #8]
   1b4c0:	mov	w0, #0x2                   	// #2
   1b4c4:	b	1b410 <printf_parse@@Base+0xc14>
   1b4c8:	mov	w1, #0x1c                  	// #28
   1b4cc:	b	1b4bc <printf_parse@@Base+0xcc0>
   1b4d0:	tbz	w2, #2, 1b4dc <printf_parse@@Base+0xce0>
   1b4d4:	mov	w1, #0x1e                  	// #30
   1b4d8:	b	1b4bc <printf_parse@@Base+0xcc0>
   1b4dc:	mov	w1, #0x1                   	// #1
   1b4e0:	strb	w1, [x0, #8]
   1b4e4:	mov	w1, #0x5b                  	// #91
   1b4e8:	strb	w1, [x0]
   1b4ec:	mov	w0, #0x1                   	// #1
   1b4f0:	b	1b410 <printf_parse@@Base+0xc14>
   1b4f4:	cmp	w4, #0x5d
   1b4f8:	b.eq	1b518 <printf_parse@@Base+0xd1c>  // b.none
   1b4fc:	cmp	w4, #0x5e
   1b500:	b.eq	1b520 <printf_parse@@Base+0xd24>  // b.none
   1b504:	cmp	w4, #0x2d
   1b508:	b.ne	1b448 <printf_parse@@Base+0xc4c>  // b.any
   1b50c:	mov	w1, #0x16                  	// #22
   1b510:	strb	w1, [x0, #8]
   1b514:	b	1b4ec <printf_parse@@Base+0xcf0>
   1b518:	mov	w1, #0x15                  	// #21
   1b51c:	b	1b510 <printf_parse@@Base+0xd14>
   1b520:	mov	w1, #0x19                  	// #25
   1b524:	b	1b510 <printf_parse@@Base+0xd14>
   1b528:	ldrb	w2, [x1, #48]
   1b52c:	cmp	w2, #0x11
   1b530:	b.ne	1b54c <printf_parse@@Base+0xd50>  // b.any
   1b534:	ldr	x2, [x1, #40]
   1b538:	cmp	x0, x2
   1b53c:	b.ne	1b54c <printf_parse@@Base+0xd50>  // b.any
   1b540:	ldrb	w0, [x1, #50]
   1b544:	orr	w0, w0, #0x8
   1b548:	strb	w0, [x1, #50]
   1b54c:	mov	w0, #0x0                   	// #0
   1b550:	ret
   1b554:	stp	x29, x30, [sp, #-144]!
   1b558:	mov	x6, #0x28                  	// #40
   1b55c:	and	w10, w1, #0x1
   1b560:	mov	x29, sp
   1b564:	ldr	x8, [x0, #152]
   1b568:	stp	x25, x26, [sp, #64]
   1b56c:	mov	x26, #0x1                   	// #1
   1b570:	stp	x27, x28, [sp, #80]
   1b574:	mov	x28, #0x18                  	// #24
   1b578:	lsl	x26, x26, x2
   1b57c:	ldr	x25, [x8, #48]
   1b580:	mvn	w7, w26
   1b584:	mul	x6, x4, x6
   1b588:	mov	x27, x3
   1b58c:	and	w7, w7, #0xffff
   1b590:	and	w9, w1, #0x2
   1b594:	madd	x25, x3, x28, x25
   1b598:	stp	x19, x20, [sp, #16]
   1b59c:	mov	w19, w1
   1b5a0:	stp	x21, x22, [sp, #32]
   1b5a4:	mov	x22, x0
   1b5a8:	mov	x21, x2
   1b5ac:	stp	x23, x24, [sp, #48]
   1b5b0:	mov	x23, x4
   1b5b4:	mov	x24, #0x0                   	// #0
   1b5b8:	ldr	x0, [x25, #8]
   1b5bc:	cmp	x0, x24
   1b5c0:	b.gt	1b5cc <printf_parse@@Base+0xdd0>
   1b5c4:	asr	w0, w19, #1
   1b5c8:	b	1b64c <printf_parse@@Base+0xe50>
   1b5cc:	ldr	x0, [x25, #16]
   1b5d0:	ldr	x5, [x0, x24, lsl #3]
   1b5d4:	ldr	x0, [x8]
   1b5d8:	lsl	x2, x5, #4
   1b5dc:	add	x1, x0, x5, lsl #4
   1b5e0:	ldrb	w1, [x1, #8]
   1b5e4:	cmp	w1, #0x8
   1b5e8:	b.eq	1b6e4 <printf_parse@@Base+0xee8>  // b.none
   1b5ec:	cmp	w1, #0x9
   1b5f0:	b.eq	1b6f8 <printf_parse@@Base+0xefc>  // b.none
   1b5f4:	cmp	w1, #0x4
   1b5f8:	b.ne	1b6dc <printf_parse@@Base+0xee0>  // b.any
   1b5fc:	cmn	x23, #0x1
   1b600:	b.eq	1b6dc <printf_parse@@Base+0xee0>  // b.none
   1b604:	ldr	x20, [x22, #216]
   1b608:	mul	x11, x5, x28
   1b60c:	add	x20, x20, x6
   1b610:	ldr	x0, [x20]
   1b614:	cmp	x0, x5
   1b618:	b.ne	1b6d0 <printf_parse@@Base+0xed4>  // b.any
   1b61c:	cmp	x21, #0x3f
   1b620:	b.gt	1b630 <printf_parse@@Base+0xe34>
   1b624:	ldrh	w0, [x20, #34]
   1b628:	tst	x0, x26
   1b62c:	b.eq	1b6d0 <printf_parse@@Base+0xed4>  // b.none
   1b630:	ldr	x0, [x8, #40]
   1b634:	add	x0, x0, x11
   1b638:	ldr	x0, [x0, #16]
   1b63c:	ldr	x3, [x0]
   1b640:	cmp	x27, x3
   1b644:	b.ne	1b668 <printf_parse@@Base+0xe6c>  // b.any
   1b648:	sbfx	x0, x19, #0, #1
   1b64c:	ldp	x19, x20, [sp, #16]
   1b650:	ldp	x21, x22, [sp, #32]
   1b654:	ldp	x23, x24, [sp, #48]
   1b658:	ldp	x25, x26, [sp, #64]
   1b65c:	ldp	x27, x28, [sp, #80]
   1b660:	ldp	x29, x30, [sp], #144
   1b664:	ret
   1b668:	mov	x4, x23
   1b66c:	mov	x2, x21
   1b670:	mov	w1, w19
   1b674:	mov	x0, x22
   1b678:	stp	x6, x11, [sp, #96]
   1b67c:	str	w7, [sp, #116]
   1b680:	stp	x8, x5, [sp, #120]
   1b684:	stp	w10, w9, [sp, #136]
   1b688:	bl	1b554 <printf_parse@@Base+0xd58>
   1b68c:	ldr	w7, [sp, #116]
   1b690:	cmn	w0, #0x1
   1b694:	ldp	w10, w9, [sp, #136]
   1b698:	ldp	x6, x11, [sp, #96]
   1b69c:	ldp	x8, x5, [sp, #120]
   1b6a0:	b.ne	1b6ac <printf_parse@@Base+0xeb0>  // b.any
   1b6a4:	mov	w0, #0xffffffff            	// #-1
   1b6a8:	b	1b64c <printf_parse@@Base+0xe50>
   1b6ac:	cbnz	w0, 1b6bc <printf_parse@@Base+0xec0>
   1b6b0:	cbz	w9, 1b6bc <printf_parse@@Base+0xec0>
   1b6b4:	mov	w0, #0x0                   	// #0
   1b6b8:	b	1b64c <printf_parse@@Base+0xe50>
   1b6bc:	cmp	x21, #0x3f
   1b6c0:	b.gt	1b6d0 <printf_parse@@Base+0xed4>
   1b6c4:	ldrh	w0, [x20, #34]
   1b6c8:	and	w0, w7, w0
   1b6cc:	strh	w0, [x20, #34]
   1b6d0:	ldrb	w0, [x20, #32]
   1b6d4:	add	x20, x20, #0x28
   1b6d8:	cbnz	w0, 1b610 <printf_parse@@Base+0xe14>
   1b6dc:	add	x24, x24, #0x1
   1b6e0:	b	1b5b8 <printf_parse@@Base+0xdbc>
   1b6e4:	cbz	w10, 1b6dc <printf_parse@@Base+0xee0>
   1b6e8:	ldr	x0, [x0, x2]
   1b6ec:	cmp	x0, x21
   1b6f0:	b.ne	1b6dc <printf_parse@@Base+0xee0>  // b.any
   1b6f4:	b	1b6a4 <printf_parse@@Base+0xea8>
   1b6f8:	cbz	w9, 1b6dc <printf_parse@@Base+0xee0>
   1b6fc:	ldr	x0, [x0, x2]
   1b700:	cmp	x0, x21
   1b704:	b.ne	1b6dc <printf_parse@@Base+0xee0>  // b.any
   1b708:	b	1b6b4 <printf_parse@@Base+0xeb8>
   1b70c:	mov	x6, x4
   1b710:	mov	x4, x5
   1b714:	ldr	x5, [x0, #216]
   1b718:	mov	x7, #0x28                  	// #40
   1b71c:	madd	x1, x1, x7, x5
   1b720:	ldr	x7, [x1, #16]
   1b724:	cmp	x7, x6
   1b728:	b.gt	1b754 <printf_parse@@Base+0xf58>
   1b72c:	ldr	x5, [x1, #24]
   1b730:	cmp	x5, x6
   1b734:	b.lt	1b760 <printf_parse@@Base+0xf64>  // b.tstop
   1b738:	cmp	x7, x6
   1b73c:	cset	w7, eq  // eq = none
   1b740:	cmp	x5, x6
   1b744:	cset	w1, eq  // eq = none
   1b748:	orr	w1, w7, w1, lsl #1
   1b74c:	cbz	w1, 1b758 <printf_parse@@Base+0xf5c>
   1b750:	b	1b554 <printf_parse@@Base+0xd58>
   1b754:	mov	w1, #0xffffffff            	// #-1
   1b758:	mov	w0, w1
   1b75c:	ret
   1b760:	mov	w1, #0x1                   	// #1
   1b764:	b	1b758 <printf_parse@@Base+0xf5c>
   1b768:	mov	x2, x0
   1b76c:	mov	x7, #0x28                  	// #40
   1b770:	mov	x0, #0x0                   	// #0
   1b774:	ldr	x6, [x2, #200]
   1b778:	mov	x4, x6
   1b77c:	cmp	x4, x0
   1b780:	b.gt	1b7a8 <printf_parse@@Base+0xfac>
   1b784:	cmp	x6, x0
   1b788:	b.le	1b7d4 <printf_parse@@Base+0xfd8>
   1b78c:	ldr	x3, [x2, #216]
   1b790:	mov	x2, #0x28                  	// #40
   1b794:	madd	x2, x0, x2, x3
   1b798:	ldr	x2, [x2, #8]
   1b79c:	cmp	x2, x1
   1b7a0:	csinv	x0, x0, xzr, eq  // eq = none
   1b7a4:	ret
   1b7a8:	add	x3, x4, x0
   1b7ac:	ldr	x5, [x2, #216]
   1b7b0:	asr	x3, x3, #1
   1b7b4:	madd	x5, x3, x7, x5
   1b7b8:	ldr	x5, [x5, #8]
   1b7bc:	cmp	x5, x1
   1b7c0:	b.ge	1b7cc <printf_parse@@Base+0xfd0>  // b.tcont
   1b7c4:	add	x0, x3, #0x1
   1b7c8:	b	1b77c <printf_parse@@Base+0xf80>
   1b7cc:	mov	x4, x3
   1b7d0:	b	1b77c <printf_parse@@Base+0xf80>
   1b7d4:	mov	x0, #0xffffffffffffffff    	// #-1
   1b7d8:	b	1b7a4 <printf_parse@@Base+0xfa8>
   1b7dc:	stp	x29, x30, [sp, #-96]!
   1b7e0:	mov	x12, x0
   1b7e4:	mov	x13, x1
   1b7e8:	mov	x18, x5
   1b7ec:	mov	x15, x3
   1b7f0:	mov	x29, sp
   1b7f4:	mov	x1, x3
   1b7f8:	stp	x19, x20, [sp, #16]
   1b7fc:	stp	x21, x22, [sp, #32]
   1b800:	mov	x22, x2
   1b804:	stp	x23, x24, [sp, #48]
   1b808:	mov	x23, x4
   1b80c:	stp	x25, x26, [sp, #64]
   1b810:	ldr	x25, [x0, #152]
   1b814:	str	x27, [sp, #80]
   1b818:	bl	1b768 <printf_parse@@Base+0xf6c>
   1b81c:	mov	x20, x0
   1b820:	mov	x1, x18
   1b824:	mov	x0, x12
   1b828:	bl	1b768 <printf_parse@@Base+0xf6c>
   1b82c:	mov	x21, x0
   1b830:	mov	x14, #0x0                   	// #0
   1b834:	mov	x27, #0x28                  	// #40
   1b838:	ldr	x0, [x13, #8]
   1b83c:	cmp	x0, x14
   1b840:	b.gt	1b864 <printf_parse@@Base+0x1068>
   1b844:	mov	w0, #0x0                   	// #0
   1b848:	ldp	x19, x20, [sp, #16]
   1b84c:	ldp	x21, x22, [sp, #32]
   1b850:	ldp	x23, x24, [sp, #48]
   1b854:	ldp	x25, x26, [sp, #64]
   1b858:	ldr	x27, [sp, #80]
   1b85c:	ldp	x29, x30, [sp], #96
   1b860:	ret
   1b864:	ldr	x0, [x13, #16]
   1b868:	lsl	x19, x14, #3
   1b86c:	ldr	x2, [x12, #216]
   1b870:	mov	x4, x15
   1b874:	ldr	x1, [x0, x19]
   1b878:	mov	x5, x20
   1b87c:	mov	x3, x22
   1b880:	mul	x0, x1, x27
   1b884:	ldr	x0, [x2, x0]
   1b888:	ldr	x2, [x25]
   1b88c:	lsl	x0, x0, #4
   1b890:	ldr	x26, [x2, x0]
   1b894:	mov	x0, x12
   1b898:	mov	x2, x26
   1b89c:	bl	1b70c <printf_parse@@Base+0xf10>
   1b8a0:	mov	w24, w0
   1b8a4:	mov	x5, x21
   1b8a8:	ldr	x0, [x13, #16]
   1b8ac:	mov	x4, x18
   1b8b0:	mov	x3, x23
   1b8b4:	mov	x2, x26
   1b8b8:	ldr	x1, [x0, x19]
   1b8bc:	mov	x0, x12
   1b8c0:	bl	1b70c <printf_parse@@Base+0xf10>
   1b8c4:	cmp	w24, w0
   1b8c8:	b.ne	1b8d4 <printf_parse@@Base+0x10d8>  // b.any
   1b8cc:	add	x14, x14, #0x1
   1b8d0:	b	1b838 <printf_parse@@Base+0x103c>
   1b8d4:	mov	w0, #0x1                   	// #1
   1b8d8:	b	1b848 <printf_parse@@Base+0x104c>
   1b8dc:	stp	x29, x30, [sp, #-48]!
   1b8e0:	mov	x29, sp
   1b8e4:	stp	x19, x20, [sp, #16]
   1b8e8:	mov	x20, x1
   1b8ec:	str	x21, [sp, #32]
   1b8f0:	mov	x21, x2
   1b8f4:	mov	x19, x0
   1b8f8:	ldr	x0, [x0, #8]
   1b8fc:	cbnz	x0, 1b8f4 <printf_parse@@Base+0x10f8>
   1b900:	ldr	x0, [x19, #16]
   1b904:	cbnz	x0, 1b8f4 <printf_parse@@Base+0x10f8>
   1b908:	mov	x1, x19
   1b90c:	mov	x0, x21
   1b910:	blr	x20
   1b914:	cbnz	w0, 1b938 <printf_parse@@Base+0x113c>
   1b918:	ldr	x1, [x19]
   1b91c:	cbz	x1, 1b938 <printf_parse@@Base+0x113c>
   1b920:	ldr	x0, [x1, #16]
   1b924:	cmp	x0, x19
   1b928:	b.eq	1b930 <printf_parse@@Base+0x1134>  // b.none
   1b92c:	cbnz	x0, 1b8f4 <printf_parse@@Base+0x10f8>
   1b930:	mov	x19, x1
   1b934:	b	1b908 <printf_parse@@Base+0x110c>
   1b938:	ldp	x19, x20, [sp, #16]
   1b93c:	ldr	x21, [sp, #32]
   1b940:	ldp	x29, x30, [sp], #48
   1b944:	ret
   1b948:	stp	x29, x30, [sp, #-48]!
   1b94c:	mov	x29, sp
   1b950:	stp	x19, x20, [sp, #16]
   1b954:	mov	x19, x0
   1b958:	mov	x20, x1
   1b95c:	str	x21, [sp, #32]
   1b960:	mov	x21, x2
   1b964:	mov	x1, x19
   1b968:	mov	x0, x21
   1b96c:	blr	x20
   1b970:	cbnz	w0, 1b9ac <printf_parse@@Base+0x11b0>
   1b974:	ldr	x3, [x19, #8]
   1b978:	cbnz	x3, 1b990 <printf_parse@@Base+0x1194>
   1b97c:	mov	x1, #0x0                   	// #0
   1b980:	ldr	x3, [x19, #16]
   1b984:	cmp	x3, x1
   1b988:	b.eq	1b998 <printf_parse@@Base+0x119c>  // b.none
   1b98c:	cbz	x3, 1b998 <printf_parse@@Base+0x119c>
   1b990:	mov	x19, x3
   1b994:	b	1b964 <printf_parse@@Base+0x1168>
   1b998:	ldr	x2, [x19]
   1b99c:	mov	x1, x19
   1b9a0:	cbz	x2, 1b9ac <printf_parse@@Base+0x11b0>
   1b9a4:	mov	x19, x2
   1b9a8:	b	1b980 <printf_parse@@Base+0x1184>
   1b9ac:	ldp	x19, x20, [sp, #16]
   1b9b0:	ldr	x21, [sp, #32]
   1b9b4:	ldp	x29, x30, [sp], #48
   1b9b8:	ret
   1b9bc:	stp	x29, x30, [sp, #-32]!
   1b9c0:	mov	x29, sp
   1b9c4:	stp	x19, x20, [sp, #16]
   1b9c8:	mov	x19, x0
   1b9cc:	ldr	w0, [x0, #144]
   1b9d0:	mov	x20, x1
   1b9d4:	cmp	w0, #0x1
   1b9d8:	b.le	1ba24 <printf_parse@@Base+0x1228>
   1b9dc:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   1b9e0:	cmp	x1, x0
   1b9e4:	b.ls	1b9f8 <printf_parse@@Base+0x11fc>  // b.plast
   1b9e8:	mov	w0, #0xc                   	// #12
   1b9ec:	ldp	x19, x20, [sp, #16]
   1b9f0:	ldp	x29, x30, [sp], #32
   1b9f4:	ret
   1b9f8:	ldr	x0, [x19, #16]
   1b9fc:	lsl	x1, x1, #2
   1ba00:	bl	ad60 <realloc@plt>
   1ba04:	cbz	x0, 1b9e8 <printf_parse@@Base+0x11ec>
   1ba08:	str	x0, [x19, #16]
   1ba0c:	ldr	x0, [x19, #24]
   1ba10:	cbz	x0, 1ba24 <printf_parse@@Base+0x1228>
   1ba14:	lsl	x1, x20, #3
   1ba18:	bl	ad60 <realloc@plt>
   1ba1c:	cbz	x0, 1b9e8 <printf_parse@@Base+0x11ec>
   1ba20:	str	x0, [x19, #24]
   1ba24:	ldrb	w0, [x19, #139]
   1ba28:	cbz	w0, 1ba40 <printf_parse@@Base+0x1244>
   1ba2c:	ldr	x0, [x19, #8]
   1ba30:	mov	x1, x20
   1ba34:	bl	ad60 <realloc@plt>
   1ba38:	cbz	x0, 1b9e8 <printf_parse@@Base+0x11ec>
   1ba3c:	str	x0, [x19, #8]
   1ba40:	mov	w0, #0x0                   	// #0
   1ba44:	str	x20, [x19, #64]
   1ba48:	b	1b9ec <printf_parse@@Base+0x11f0>
   1ba4c:	stp	x29, x30, [sp, #-32]!
   1ba50:	mov	x29, sp
   1ba54:	stp	x19, x20, [sp, #16]
   1ba58:	mov	x19, x0
   1ba5c:	mov	x20, x1
   1ba60:	ldr	x0, [x0]
   1ba64:	ldr	x1, [x19, #8]
   1ba68:	cmp	x0, x1
   1ba6c:	b.ne	1ba90 <printf_parse@@Base+0x1294>  // b.any
   1ba70:	add	x0, x0, #0x1
   1ba74:	lsl	x1, x0, #1
   1ba78:	str	x1, [x19]
   1ba7c:	lsl	x1, x0, #4
   1ba80:	ldr	x0, [x19, #16]
   1ba84:	bl	ad60 <realloc@plt>
   1ba88:	cbz	x0, 1bab0 <printf_parse@@Base+0x12b4>
   1ba8c:	str	x0, [x19, #16]
   1ba90:	ldp	x0, x1, [x19, #8]
   1ba94:	add	x2, x0, #0x1
   1ba98:	str	x2, [x19, #8]
   1ba9c:	str	x20, [x1, x0, lsl #3]
   1baa0:	mov	w0, #0x1                   	// #1
   1baa4:	ldp	x19, x20, [sp, #16]
   1baa8:	ldp	x29, x30, [sp], #32
   1baac:	ret
   1bab0:	mov	w0, #0x0                   	// #0
   1bab4:	b	1baa4 <printf_parse@@Base+0x12a8>
   1bab8:	stp	xzr, xzr, [x0]
   1babc:	stp	xzr, xzr, [x0, #16]
   1bac0:	ret
   1bac4:	stp	x29, x30, [sp, #-32]!
   1bac8:	mov	x29, sp
   1bacc:	stp	x19, x20, [sp, #16]
   1bad0:	mov	x19, x0
   1bad4:	mov	x0, #0x1                   	// #1
   1bad8:	mov	x20, x1
   1badc:	stp	x0, x0, [x19]
   1bae0:	mov	x0, #0x8                   	// #8
   1bae4:	bl	aab0 <malloc@plt>
   1bae8:	str	x0, [x19, #16]
   1baec:	cbnz	x0, 1bb04 <printf_parse@@Base+0x1308>
   1baf0:	mov	w0, #0xc                   	// #12
   1baf4:	stp	xzr, xzr, [x19]
   1baf8:	ldp	x19, x20, [sp, #16]
   1bafc:	ldp	x29, x30, [sp], #32
   1bb00:	ret
   1bb04:	str	x20, [x0]
   1bb08:	mov	w0, #0x0                   	// #0
   1bb0c:	b	1baf8 <printf_parse@@Base+0x12fc>
   1bb10:	stp	x29, x30, [sp, #-32]!
   1bb14:	mov	x29, sp
   1bb18:	str	x19, [sp, #16]
   1bb1c:	mov	x19, x0
   1bb20:	lsl	x0, x1, #3
   1bb24:	stp	x1, xzr, [x19]
   1bb28:	bl	aab0 <malloc@plt>
   1bb2c:	str	x0, [x19, #16]
   1bb30:	cmp	x0, #0x0
   1bb34:	mov	w0, #0xc                   	// #12
   1bb38:	csel	w0, w0, wzr, eq  // eq = none
   1bb3c:	ldr	x19, [sp, #16]
   1bb40:	ldp	x29, x30, [sp], #32
   1bb44:	ret
   1bb48:	stp	x29, x30, [sp, #-96]!
   1bb4c:	mov	x29, sp
   1bb50:	stp	x19, x20, [sp, #16]
   1bb54:	mov	x19, x0
   1bb58:	mov	x20, #0x0                   	// #0
   1bb5c:	stp	x21, x22, [sp, #32]
   1bb60:	mov	x21, x1
   1bb64:	stp	x23, x24, [sp, #48]
   1bb68:	mov	x23, x2
   1bb6c:	stp	x25, x26, [sp, #64]
   1bb70:	ldr	x25, [x0, #152]
   1bb74:	str	x27, [sp, #80]
   1bb78:	ldr	x0, [x21, #8]
   1bb7c:	cmp	x0, x20
   1bb80:	b.gt	1bb8c <printf_parse@@Base+0x1390>
   1bb84:	mov	w0, #0x0                   	// #0
   1bb88:	b	1bbe8 <printf_parse@@Base+0x13ec>
   1bb8c:	ldr	x0, [x21, #16]
   1bb90:	ldr	x24, [x0, x20, lsl #3]
   1bb94:	ldr	x0, [x25]
   1bb98:	lsl	x1, x24, #4
   1bb9c:	add	x2, x0, x24, lsl #4
   1bba0:	ldrb	w2, [x2, #8]
   1bba4:	cmp	w2, #0x8
   1bba8:	b.ne	1bc34 <printf_parse@@Base+0x1438>  // b.any
   1bbac:	ldr	x1, [x0, x1]
   1bbb0:	cmp	x1, #0x3f
   1bbb4:	b.gt	1bc34 <printf_parse@@Base+0x1438>
   1bbb8:	ldr	x0, [x25, #160]
   1bbbc:	lsr	x0, x0, x1
   1bbc0:	tbz	w0, #0, 1bc34 <printf_parse@@Base+0x1438>
   1bbc4:	ldp	x1, x0, [x19, #232]
   1bbc8:	cmp	x1, x0
   1bbcc:	b.ne	1bc08 <printf_parse@@Base+0x140c>  // b.any
   1bbd0:	ldr	x0, [x19, #248]
   1bbd4:	lsl	x22, x1, #1
   1bbd8:	lsl	x1, x1, #4
   1bbdc:	bl	ad60 <realloc@plt>
   1bbe0:	cbnz	x0, 1bc04 <printf_parse@@Base+0x1408>
   1bbe4:	mov	w0, #0xc                   	// #12
   1bbe8:	ldp	x19, x20, [sp, #16]
   1bbec:	ldp	x21, x22, [sp, #32]
   1bbf0:	ldp	x23, x24, [sp, #48]
   1bbf4:	ldp	x25, x26, [sp, #64]
   1bbf8:	ldr	x27, [sp, #80]
   1bbfc:	ldp	x29, x30, [sp], #96
   1bc00:	ret
   1bc04:	stp	x22, x0, [x19, #240]
   1bc08:	mov	x1, #0x30                  	// #48
   1bc0c:	ldr	x22, [x19, #232]
   1bc10:	mov	x0, #0x1                   	// #1
   1bc14:	ldr	x27, [x19, #248]
   1bc18:	bl	ace0 <calloc@plt>
   1bc1c:	lsl	x26, x22, #3
   1bc20:	str	x0, [x27, x26]
   1bc24:	cbz	x0, 1bbe4 <printf_parse@@Base+0x13e8>
   1bc28:	add	x22, x22, #0x1
   1bc2c:	stp	x23, x24, [x0]
   1bc30:	str	x22, [x19, #232]
   1bc34:	add	x20, x20, #0x1
   1bc38:	b	1bb78 <printf_parse@@Base+0x137c>
   1bc3c:	stp	x29, x30, [sp, #-160]!
   1bc40:	mov	x29, sp
   1bc44:	stp	x19, x20, [sp, #16]
   1bc48:	mov	x19, x0
   1bc4c:	stp	x21, x22, [sp, #32]
   1bc50:	add	x22, sp, #0x60
   1bc54:	ldr	x21, [x19, #64]
   1bc58:	stp	x23, x24, [sp, #48]
   1bc5c:	add	x23, sp, #0x5c
   1bc60:	ldr	x0, [x0, #88]
   1bc64:	mov	w24, #0xffffffff            	// #-1
   1bc68:	ldr	x20, [x19, #48]
   1bc6c:	cmp	x21, x0
   1bc70:	csel	x21, x21, x0, le
   1bc74:	str	x25, [sp, #64]
   1bc78:	cmp	x20, x21
   1bc7c:	b.ge	1bd90 <printf_parse@@Base+0x1594>  // b.tcont
   1bc80:	ldr	x0, [x19, #120]
   1bc84:	sub	x2, x21, x20
   1bc88:	ldr	x25, [x19, #32]
   1bc8c:	cbz	x0, 1bce4 <printf_parse@@Base+0x14e8>
   1bc90:	mov	x0, #0x0                   	// #0
   1bc94:	ldr	w1, [x19, #144]
   1bc98:	cmp	w1, w0
   1bc9c:	b.le	1bca8 <printf_parse@@Base+0x14ac>
   1bca0:	cmp	x2, x0
   1bca4:	b.ne	1bcb0 <printf_parse@@Base+0x14b4>  // b.any
   1bca8:	mov	x1, x22
   1bcac:	b	1bcf4 <printf_parse@@Base+0x14f8>
   1bcb0:	ldr	x1, [x19]
   1bcb4:	ldr	x3, [x19, #40]
   1bcb8:	add	x1, x1, x0
   1bcbc:	add	x1, x1, x20
   1bcc0:	ldrb	w1, [x1, x3]
   1bcc4:	ldr	x3, [x19, #120]
   1bcc8:	ldrb	w3, [x3, x1]
   1bccc:	ldr	x1, [x19, #8]
   1bcd0:	add	x1, x1, x20
   1bcd4:	strb	w3, [x1, x0]
   1bcd8:	strb	w3, [x22, x0]
   1bcdc:	add	x0, x0, #0x1
   1bce0:	b	1bc94 <printf_parse@@Base+0x1498>
   1bce4:	ldr	x1, [x19, #40]
   1bce8:	add	x0, x20, x1
   1bcec:	ldr	x1, [x19]
   1bcf0:	add	x1, x1, x0
   1bcf4:	add	x3, x19, #0x20
   1bcf8:	mov	x0, x23
   1bcfc:	bl	a840 <rpl_mbrtowc@plt>
   1bd00:	sub	x1, x0, #0x1
   1bd04:	cmn	x1, #0x3
   1bd08:	b.hi	1bd24 <printf_parse@@Base+0x1528>  // b.pmore
   1bd0c:	cmn	x0, #0x2
   1bd10:	b.ne	1bd54 <printf_parse@@Base+0x1558>  // b.any
   1bd14:	ldr	x1, [x19, #64]
   1bd18:	ldr	x0, [x19, #88]
   1bd1c:	cmp	x1, x0
   1bd20:	b.lt	1bd8c <printf_parse@@Base+0x1590>  // b.tstop
   1bd24:	ldr	x0, [x19]
   1bd28:	ldr	x1, [x19, #40]
   1bd2c:	add	x0, x0, x20
   1bd30:	ldrb	w0, [x0, x1]
   1bd34:	ldr	x1, [x19, #120]
   1bd38:	str	w0, [sp, #92]
   1bd3c:	cbz	x1, 1bd4c <printf_parse@@Base+0x1550>
   1bd40:	and	x0, x0, #0xff
   1bd44:	ldrb	w0, [x1, x0]
   1bd48:	str	w0, [sp, #92]
   1bd4c:	mov	x0, #0x1                   	// #1
   1bd50:	str	x25, [x19, #32]
   1bd54:	ldr	x3, [x19, #16]
   1bd58:	add	x2, x20, #0x1
   1bd5c:	ldr	w1, [sp, #92]
   1bd60:	add	x0, x20, x0
   1bd64:	str	w1, [x3, x20, lsl #2]
   1bd68:	mov	x1, x2
   1bd6c:	cmp	x1, x0
   1bd70:	b.lt	1bdac <printf_parse@@Base+0x15b0>  // b.tstop
   1bd74:	mvn	x1, x20
   1bd78:	cmp	x20, x0
   1bd7c:	add	x1, x1, x0
   1bd80:	csel	x1, x1, xzr, lt  // lt = tstop
   1bd84:	add	x20, x1, x2
   1bd88:	b	1bc78 <printf_parse@@Base+0x147c>
   1bd8c:	str	x25, [x19, #32]
   1bd90:	ldp	x21, x22, [sp, #32]
   1bd94:	ldp	x23, x24, [sp, #48]
   1bd98:	ldr	x25, [sp, #64]
   1bd9c:	stp	x20, x20, [x19, #48]
   1bda0:	ldp	x19, x20, [sp, #16]
   1bda4:	ldp	x29, x30, [sp], #160
   1bda8:	ret
   1bdac:	str	w24, [x3, x1, lsl #2]
   1bdb0:	add	x1, x1, #0x1
   1bdb4:	b	1bd6c <printf_parse@@Base+0x1570>
   1bdb8:	stp	x29, x30, [sp, #-192]!
   1bdbc:	mov	x29, sp
   1bdc0:	stp	x19, x20, [sp, #16]
   1bdc4:	mov	x19, x0
   1bdc8:	stp	x23, x24, [sp, #48]
   1bdcc:	ldr	x20, [x0, #48]
   1bdd0:	stp	x21, x22, [sp, #32]
   1bdd4:	ldr	x24, [x19, #64]
   1bdd8:	stp	x25, x26, [sp, #64]
   1bddc:	ldr	x0, [x0, #88]
   1bde0:	stp	x27, x28, [sp, #80]
   1bde4:	cmp	x24, x0
   1bde8:	csel	x24, x24, x0, le
   1bdec:	ldrb	w0, [x19, #138]
   1bdf0:	cbnz	w0, 1c08c <printf_parse@@Base+0x1890>
   1bdf4:	ldr	x0, [x19, #120]
   1bdf8:	cbnz	x0, 1c08c <printf_parse@@Base+0x1890>
   1bdfc:	ldrb	w0, [x19, #140]
   1be00:	cbnz	w0, 1c08c <printf_parse@@Base+0x1890>
   1be04:	add	x23, sp, #0x74
   1be08:	add	x26, sp, #0x78
   1be0c:	add	x22, sp, #0x80
   1be10:	mov	w25, #0xffffffff            	// #-1
   1be14:	cmp	x20, x24
   1be18:	b.ge	1c07c <printf_parse@@Base+0x1880>  // b.tcont
   1be1c:	ldr	x1, [x19]
   1be20:	add	x3, x19, #0x20
   1be24:	ldr	x21, [x19, #40]
   1be28:	mov	x27, x20
   1be2c:	add	x0, x1, x21
   1be30:	ldrb	w28, [x0, x20]
   1be34:	tbnz	w28, #7, 1be78 <printf_parse@@Base+0x167c>
   1be38:	mov	x0, x3
   1be3c:	stp	x3, x1, [sp, #96]
   1be40:	bl	aef0 <mbsinit@plt>
   1be44:	ldp	x3, x1, [sp, #96]
   1be48:	cbz	w0, 1be78 <printf_parse@@Base+0x167c>
   1be4c:	bl	ad70 <__ctype_toupper_loc@plt>
   1be50:	ubfiz	x28, x28, #2, #8
   1be54:	ldr	x0, [x0]
   1be58:	ldr	x1, [x19, #8]
   1be5c:	ldr	w0, [x0, x28]
   1be60:	strb	w0, [x1, x20]
   1be64:	ldp	x1, x0, [x19, #8]
   1be68:	ldrb	w1, [x1, x20]
   1be6c:	str	w1, [x0, x20, lsl #2]
   1be70:	add	x20, x20, #0x1
   1be74:	b	1be14 <printf_parse@@Base+0x1618>
   1be78:	add	x21, x21, x20
   1be7c:	sub	x2, x24, x20
   1be80:	ldr	x0, [x19, #32]
   1be84:	add	x1, x1, x21
   1be88:	str	x0, [sp, #120]
   1be8c:	mov	x0, x23
   1be90:	bl	a840 <rpl_mbrtowc@plt>
   1be94:	mov	x21, x0
   1be98:	sub	x0, x0, #0x1
   1be9c:	cmn	x0, #0x4
   1bea0:	b.hi	1c024 <printf_parse@@Base+0x1828>  // b.pmore
   1bea4:	ldr	w28, [sp, #116]
   1bea8:	mov	w0, w28
   1beac:	bl	b4a0 <towupper@plt>
   1beb0:	mov	w27, w0
   1beb4:	cmp	w28, w0
   1beb8:	b.eq	1c000 <printf_parse@@Base+0x1804>  // b.none
   1bebc:	mov	w1, w0
   1bec0:	mov	x2, x26
   1bec4:	mov	x0, x22
   1bec8:	bl	b6a0 <wcrtomb@plt>
   1becc:	cmp	x21, x0
   1bed0:	b.ne	1bf1c <printf_parse@@Base+0x1720>  // b.any
   1bed4:	ldr	x0, [x19, #8]
   1bed8:	mov	x2, x21
   1bedc:	mov	x1, x22
   1bee0:	add	x0, x0, x20
   1bee4:	bl	a6f0 <memcpy@plt>
   1bee8:	ldr	x2, [x19, #16]
   1beec:	add	x1, x20, #0x1
   1bef0:	add	x21, x20, x21
   1bef4:	mov	x0, x1
   1bef8:	str	w27, [x2, x20, lsl #2]
   1befc:	cmp	x21, x0
   1bf00:	b.gt	1c018 <printf_parse@@Base+0x181c>
   1bf04:	mvn	x0, x20
   1bf08:	cmp	x20, x21
   1bf0c:	add	x0, x0, x21
   1bf10:	csel	x0, x0, xzr, lt  // lt = tstop
   1bf14:	add	x20, x0, x1
   1bf18:	b	1be14 <printf_parse@@Base+0x1618>
   1bf1c:	mov	x21, x20
   1bf20:	ldr	x3, [x19, #120]
   1bf24:	sub	x2, x24, x21
   1bf28:	ldr	x0, [x19, #32]
   1bf2c:	str	x0, [sp, #120]
   1bf30:	cbz	x3, 1c0c4 <printf_parse@@Base+0x18c8>
   1bf34:	ldr	w4, [x19, #144]
   1bf38:	add	x23, sp, #0x80
   1bf3c:	mov	x0, #0x0                   	// #0
   1bf40:	cmp	w4, w0
   1bf44:	b.le	1bf50 <printf_parse@@Base+0x1754>
   1bf48:	cmp	x0, x2
   1bf4c:	b.lt	1c0a0 <printf_parse@@Base+0x18a4>  // b.tstop
   1bf50:	add	x3, x19, #0x20
   1bf54:	mov	x1, x23
   1bf58:	add	x0, sp, #0x74
   1bf5c:	bl	a840 <rpl_mbrtowc@plt>
   1bf60:	sub	x26, x0, #0x1
   1bf64:	mov	x22, x0
   1bf68:	cmn	x26, #0x4
   1bf6c:	b.hi	1c23c <printf_parse@@Base+0x1a40>  // b.pmore
   1bf70:	ldr	w25, [sp, #116]
   1bf74:	mov	w0, w25
   1bf78:	bl	b4a0 <towupper@plt>
   1bf7c:	mov	w27, w0
   1bf80:	cmp	w25, w0
   1bf84:	b.eq	1c1fc <printf_parse@@Base+0x1a00>  // b.none
   1bf88:	add	x28, sp, #0x80
   1bf8c:	mov	w1, w0
   1bf90:	add	x2, sp, #0x78
   1bf94:	mov	x0, x28
   1bf98:	bl	b6a0 <wcrtomb@plt>
   1bf9c:	mov	x25, x0
   1bfa0:	cmp	x22, x0
   1bfa4:	b.ne	1c0d8 <printf_parse@@Base+0x18dc>  // b.any
   1bfa8:	ldr	x0, [x19, #8]
   1bfac:	mov	x2, x22
   1bfb0:	mov	x1, x28
   1bfb4:	add	x0, x0, x21
   1bfb8:	bl	a6f0 <memcpy@plt>
   1bfbc:	ldrb	w0, [x19, #140]
   1bfc0:	cbnz	w0, 1c20c <printf_parse@@Base+0x1a10>
   1bfc4:	ldr	x2, [x19, #16]
   1bfc8:	add	x0, x21, #0x1
   1bfcc:	add	x20, x20, x22
   1bfd0:	mov	x1, x0
   1bfd4:	add	x22, x21, x22
   1bfd8:	mov	w3, #0xffffffff            	// #-1
   1bfdc:	str	w27, [x2, x21, lsl #2]
   1bfe0:	cmp	x1, x22
   1bfe4:	b.lt	1c230 <printf_parse@@Base+0x1a34>  // b.tstop
   1bfe8:	mvn	x1, x21
   1bfec:	cmp	x21, x22
   1bff0:	add	x1, x1, x22
   1bff4:	csel	x1, x1, xzr, lt  // lt = tstop
   1bff8:	add	x21, x1, x0
   1bffc:	b	1c094 <printf_parse@@Base+0x1898>
   1c000:	ldp	x3, x0, [x19]
   1c004:	mov	x2, x21
   1c008:	ldr	x1, [x19, #40]
   1c00c:	add	x1, x20, x1
   1c010:	add	x1, x3, x1
   1c014:	b	1bee0 <printf_parse@@Base+0x16e4>
   1c018:	str	w25, [x2, x0, lsl #2]
   1c01c:	add	x0, x0, #0x1
   1c020:	b	1befc <printf_parse@@Base+0x1700>
   1c024:	cmn	x0, #0x3
   1c028:	b.ne	1c03c <printf_parse@@Base+0x1840>  // b.any
   1c02c:	ldr	x1, [x19, #64]
   1c030:	ldr	x0, [x19, #88]
   1c034:	cmp	x1, x0
   1c038:	b.lt	1c074 <printf_parse@@Base+0x1878>  // b.tstop
   1c03c:	ldr	x0, [x19]
   1c040:	cmn	x21, #0x1
   1c044:	ldr	x1, [x19, #40]
   1c048:	add	x0, x0, x20
   1c04c:	ldrb	w0, [x0, x1]
   1c050:	ldr	x1, [x19, #8]
   1c054:	strb	w0, [x1, x20]
   1c058:	add	x20, x20, #0x1
   1c05c:	ldr	x1, [x19, #16]
   1c060:	str	w0, [x1, x27, lsl #2]
   1c064:	b.ne	1be14 <printf_parse@@Base+0x1618>  // b.any
   1c068:	ldr	x0, [sp, #120]
   1c06c:	str	x0, [x19, #32]
   1c070:	b	1be14 <printf_parse@@Base+0x1618>
   1c074:	ldr	x0, [sp, #120]
   1c078:	str	x0, [x19, #32]
   1c07c:	str	x20, [x19, #48]
   1c080:	mov	w0, #0x0                   	// #0
   1c084:	str	x20, [x19, #56]
   1c088:	b	1c11c <printf_parse@@Base+0x1920>
   1c08c:	mov	x21, x20
   1c090:	ldr	x20, [x19, #56]
   1c094:	cmp	x24, x21
   1c098:	b.gt	1bf20 <printf_parse@@Base+0x1724>
   1c09c:	b	1c0f8 <printf_parse@@Base+0x18fc>
   1c0a0:	ldr	x1, [x19]
   1c0a4:	ldr	x5, [x19, #40]
   1c0a8:	add	x1, x1, x20
   1c0ac:	add	x1, x1, x0
   1c0b0:	ldrb	w1, [x1, x5]
   1c0b4:	ldrb	w1, [x3, x1]
   1c0b8:	strb	w1, [x23, x0]
   1c0bc:	add	x0, x0, #0x1
   1c0c0:	b	1bf40 <printf_parse@@Base+0x1744>
   1c0c4:	ldr	x23, [x19, #40]
   1c0c8:	add	x0, x20, x23
   1c0cc:	ldr	x23, [x19]
   1c0d0:	add	x23, x23, x0
   1c0d4:	b	1bf50 <printf_parse@@Base+0x1754>
   1c0d8:	cmn	x0, #0x1
   1c0dc:	b.eq	1c1fc <printf_parse@@Base+0x1a00>  // b.none
   1c0e0:	add	x23, x21, x0
   1c0e4:	ldr	x0, [x19, #64]
   1c0e8:	cmp	x23, x0
   1c0ec:	b.ls	1c100 <printf_parse@@Base+0x1904>  // b.plast
   1c0f0:	ldr	x0, [sp, #120]
   1c0f4:	str	x0, [x19, #32]
   1c0f8:	str	x21, [x19, #48]
   1c0fc:	b	1c080 <printf_parse@@Base+0x1884>
   1c100:	ldr	x1, [x19, #24]
   1c104:	cbnz	x1, 1c138 <printf_parse@@Base+0x193c>
   1c108:	lsl	x0, x0, #3
   1c10c:	bl	aab0 <malloc@plt>
   1c110:	str	x0, [x19, #24]
   1c114:	cbnz	x0, 1c138 <printf_parse@@Base+0x193c>
   1c118:	mov	w0, #0xc                   	// #12
   1c11c:	ldp	x19, x20, [sp, #16]
   1c120:	ldp	x21, x22, [sp, #32]
   1c124:	ldp	x23, x24, [sp, #48]
   1c128:	ldp	x25, x26, [sp, #64]
   1c12c:	ldp	x27, x28, [sp, #80]
   1c130:	ldp	x29, x30, [sp], #192
   1c134:	ret
   1c138:	ldrb	w0, [x19, #140]
   1c13c:	cbz	w0, 1c1d8 <printf_parse@@Base+0x19dc>
   1c140:	ldr	x0, [x19, #8]
   1c144:	mov	x2, x25
   1c148:	mov	x1, x28
   1c14c:	add	x0, x0, x21
   1c150:	bl	a6f0 <memcpy@plt>
   1c154:	ldr	x0, [x19, #16]
   1c158:	mov	w4, #0xffffffff            	// #-1
   1c15c:	add	x2, x0, x21, lsl #2
   1c160:	str	w27, [x0, x21, lsl #2]
   1c164:	ldr	x0, [x19, #24]
   1c168:	add	x3, x0, x21, lsl #3
   1c16c:	str	x20, [x0, x21, lsl #3]
   1c170:	mov	x0, #0x1                   	// #1
   1c174:	cmp	x0, x25
   1c178:	b.cc	1c1e0 <printf_parse@@Base+0x19e4>  // b.lo, b.ul, b.last
   1c17c:	ldp	x24, x0, [x19, #88]
   1c180:	sub	x25, x25, x22
   1c184:	add	x1, x25, x24
   1c188:	str	x1, [x19, #88]
   1c18c:	cmp	x20, x0
   1c190:	b.ge	1c1a0 <printf_parse@@Base+0x19a4>  // b.tcont
   1c194:	ldr	x2, [x19, #104]
   1c198:	add	x25, x2, x25
   1c19c:	str	x25, [x19, #104]
   1c1a0:	ldr	x24, [x19, #64]
   1c1a4:	mov	x21, x23
   1c1a8:	add	x20, x20, x22
   1c1ac:	cmp	x24, x1
   1c1b0:	csel	x24, x24, x1, le
   1c1b4:	b	1c094 <printf_parse@@Base+0x1898>
   1c1b8:	ldr	x1, [x19, #24]
   1c1bc:	str	x0, [x1, x0, lsl #3]
   1c1c0:	add	x0, x0, #0x1
   1c1c4:	cmp	x0, x21
   1c1c8:	b.ne	1c1b8 <printf_parse@@Base+0x19bc>  // b.any
   1c1cc:	mov	w0, #0x1                   	// #1
   1c1d0:	strb	w0, [x19, #140]
   1c1d4:	b	1c140 <printf_parse@@Base+0x1944>
   1c1d8:	mov	x0, #0x0                   	// #0
   1c1dc:	b	1c1c4 <printf_parse@@Base+0x19c8>
   1c1e0:	cmp	x0, x22
   1c1e4:	csel	x1, x26, x0, cs  // cs = hs, nlast
   1c1e8:	add	x1, x20, x1
   1c1ec:	str	x1, [x3, x0, lsl #3]
   1c1f0:	str	w4, [x2, x0, lsl #2]
   1c1f4:	add	x0, x0, #0x1
   1c1f8:	b	1c174 <printf_parse@@Base+0x1978>
   1c1fc:	mov	x2, x22
   1c200:	mov	x1, x23
   1c204:	ldr	x0, [x19, #8]
   1c208:	b	1bfb4 <printf_parse@@Base+0x17b8>
   1c20c:	ldr	x1, [x19, #24]
   1c210:	mov	x0, #0x0                   	// #0
   1c214:	add	x1, x1, x21, lsl #3
   1c218:	add	x2, x20, x0
   1c21c:	str	x2, [x1, x0, lsl #3]
   1c220:	add	x0, x0, #0x1
   1c224:	cmp	x22, x0
   1c228:	b.ne	1c218 <printf_parse@@Base+0x1a1c>  // b.any
   1c22c:	b	1bfc4 <printf_parse@@Base+0x17c8>
   1c230:	str	w3, [x2, x1, lsl #2]
   1c234:	add	x1, x1, #0x1
   1c238:	b	1bfe0 <printf_parse@@Base+0x17e4>
   1c23c:	cmn	x26, #0x3
   1c240:	b.ne	1c254 <printf_parse@@Base+0x1a58>  // b.any
   1c244:	ldr	x1, [x19, #64]
   1c248:	ldr	x0, [x19, #88]
   1c24c:	cmp	x1, x0
   1c250:	b.lt	1c0f0 <printf_parse@@Base+0x18f4>  // b.tstop
   1c254:	ldr	x0, [x19]
   1c258:	ldr	x1, [x19, #40]
   1c25c:	add	x0, x0, x20
   1c260:	ldrb	w0, [x0, x1]
   1c264:	ldr	x1, [x19, #120]
   1c268:	cbz	x1, 1c274 <printf_parse@@Base+0x1a78>
   1c26c:	and	x0, x0, #0xff
   1c270:	ldrb	w0, [x1, x0]
   1c274:	ldr	x1, [x19, #8]
   1c278:	mov	x2, x21
   1c27c:	strb	w0, [x1, x21]
   1c280:	ldrb	w1, [x19, #140]
   1c284:	cbz	w1, 1c290 <printf_parse@@Base+0x1a94>
   1c288:	ldr	x1, [x19, #24]
   1c28c:	str	x20, [x1, x21, lsl #3]
   1c290:	ldr	x1, [x19, #16]
   1c294:	add	x20, x20, #0x1
   1c298:	add	x21, x21, #0x1
   1c29c:	cmn	x22, #0x1
   1c2a0:	str	w0, [x1, x2, lsl #2]
   1c2a4:	b.ne	1c094 <printf_parse@@Base+0x1898>  // b.any
   1c2a8:	ldr	x0, [sp, #120]
   1c2ac:	str	x0, [x19, #32]
   1c2b0:	b	1c094 <printf_parse@@Base+0x1898>
   1c2b4:	stp	x29, x30, [sp, #-48]!
   1c2b8:	mov	x29, sp
   1c2bc:	stp	x19, x20, [sp, #16]
   1c2c0:	mov	x19, x0
   1c2c4:	ldr	x0, [x0, #88]
   1c2c8:	stp	x21, x22, [sp, #32]
   1c2cc:	ldr	x20, [x19, #64]
   1c2d0:	ldr	x22, [x19, #48]
   1c2d4:	cmp	x20, x0
   1c2d8:	csel	x20, x20, x0, le
   1c2dc:	mov	x21, x22
   1c2e0:	cmp	x21, x20
   1c2e4:	b.lt	1c308 <printf_parse@@Base+0x1b0c>  // b.tstop
   1c2e8:	subs	x0, x20, x22
   1c2ec:	csel	x0, x0, xzr, ge  // ge = tcont
   1c2f0:	add	x0, x0, x22
   1c2f4:	ldp	x21, x22, [sp, #32]
   1c2f8:	stp	x0, x0, [x19, #48]
   1c2fc:	ldp	x19, x20, [sp, #16]
   1c300:	ldp	x29, x30, [sp], #48
   1c304:	ret
   1c308:	ldr	x0, [x19]
   1c30c:	ldr	x1, [x19, #40]
   1c310:	add	x0, x0, x21
   1c314:	ldrb	w0, [x0, x1]
   1c318:	ldr	x1, [x19, #120]
   1c31c:	cbz	x1, 1c328 <printf_parse@@Base+0x1b2c>
   1c320:	and	x0, x0, #0xff
   1c324:	ldrb	w0, [x1, x0]
   1c328:	bl	aae0 <toupper@plt>
   1c32c:	ldr	x1, [x19, #8]
   1c330:	strb	w0, [x1, x21]
   1c334:	add	x21, x21, #0x1
   1c338:	b	1c2e0 <printf_parse@@Base+0x1ae4>
   1c33c:	stp	x29, x30, [sp, #-32]!
   1c340:	mov	x3, #0xffffffffffffffe     	// #1152921504606846974
   1c344:	mov	x29, sp
   1c348:	ldr	x2, [x0, #64]
   1c34c:	stp	x19, x20, [sp, #16]
   1c350:	cmp	x2, x3
   1c354:	b.ls	1c36c <printf_parse@@Base+0x1b70>  // b.plast
   1c358:	mov	w20, #0xc                   	// #12
   1c35c:	mov	w0, w20
   1c360:	ldp	x19, x20, [sp, #16]
   1c364:	ldp	x29, x30, [sp], #32
   1c368:	ret
   1c36c:	ldr	x3, [x0, #88]
   1c370:	lsl	x2, x2, #1
   1c374:	mov	x19, x0
   1c378:	cmp	x2, x3
   1c37c:	csel	x2, x2, x3, le
   1c380:	sxtw	x3, w1
   1c384:	cmp	x2, w1, sxtw
   1c388:	csel	x1, x2, x3, ge  // ge = tcont
   1c38c:	bl	1b9bc <printf_parse@@Base+0x11c0>
   1c390:	mov	w20, w0
   1c394:	cbnz	w0, 1c35c <printf_parse@@Base+0x1b60>
   1c398:	ldr	x0, [x19, #184]
   1c39c:	cbz	x0, 1c3b8 <printf_parse@@Base+0x1bbc>
   1c3a0:	ldr	x1, [x19, #64]
   1c3a4:	add	x1, x1, #0x1
   1c3a8:	lsl	x1, x1, #3
   1c3ac:	bl	ad60 <realloc@plt>
   1c3b0:	cbz	x0, 1c358 <printf_parse@@Base+0x1b5c>
   1c3b4:	str	x0, [x19, #184]
   1c3b8:	ldrb	w1, [x19, #136]
   1c3bc:	ldr	w0, [x19, #144]
   1c3c0:	cmp	w0, #0x1
   1c3c4:	cbz	w1, 1c3e4 <printf_parse@@Base+0x1be8>
   1c3c8:	mov	x0, x19
   1c3cc:	b.le	1c3dc <printf_parse@@Base+0x1be0>
   1c3d0:	ldp	x19, x20, [sp, #16]
   1c3d4:	ldp	x29, x30, [sp], #32
   1c3d8:	b	1bdb8 <printf_parse@@Base+0x15bc>
   1c3dc:	bl	1c2b4 <printf_parse@@Base+0x1ab8>
   1c3e0:	b	1c35c <printf_parse@@Base+0x1b60>
   1c3e4:	b.le	1c3f4 <printf_parse@@Base+0x1bf8>
   1c3e8:	mov	x0, x19
   1c3ec:	bl	1bc3c <printf_parse@@Base+0x1440>
   1c3f0:	b	1c35c <printf_parse@@Base+0x1b60>
   1c3f4:	ldr	x0, [x19, #120]
   1c3f8:	cbz	x0, 1c35c <printf_parse@@Base+0x1b60>
   1c3fc:	mov	x0, x19
   1c400:	bl	1b2e0 <printf_parse@@Base+0xae4>
   1c404:	b	1c35c <printf_parse@@Base+0x1b60>
   1c408:	stp	x29, x30, [sp, #-48]!
   1c40c:	mov	x29, sp
   1c410:	stp	x19, x20, [sp, #16]
   1c414:	mov	x19, x0
   1c418:	mov	x20, x1
   1c41c:	str	x21, [sp, #32]
   1c420:	ldr	x21, [x0, #192]
   1c424:	ldr	x0, [x0, #64]
   1c428:	cmp	x0, x1
   1c42c:	b.gt	1c43c <printf_parse@@Base+0x1c40>
   1c430:	ldr	x1, [x19, #88]
   1c434:	cmp	x0, x1
   1c438:	b.lt	1c464 <printf_parse@@Base+0x1c68>  // b.tstop
   1c43c:	ldr	x0, [x19, #48]
   1c440:	cmp	x0, x20
   1c444:	b.le	1c458 <printf_parse@@Base+0x1c5c>
   1c448:	cmp	x21, x20
   1c44c:	b.lt	1c484 <printf_parse@@Base+0x1c88>  // b.tstop
   1c450:	mov	w0, #0x0                   	// #0
   1c454:	b	1c474 <printf_parse@@Base+0x1c78>
   1c458:	ldr	x1, [x19, #88]
   1c45c:	cmp	x0, x1
   1c460:	b.ge	1c448 <printf_parse@@Base+0x1c4c>  // b.tcont
   1c464:	add	w1, w20, #0x1
   1c468:	mov	x0, x19
   1c46c:	bl	1c33c <printf_parse@@Base+0x1b40>
   1c470:	cbz	w0, 1c448 <printf_parse@@Base+0x1c4c>
   1c474:	ldp	x19, x20, [sp, #16]
   1c478:	ldr	x21, [sp, #32]
   1c47c:	ldp	x29, x30, [sp], #48
   1c480:	ret
   1c484:	ldr	x0, [x19, #184]
   1c488:	sub	x2, x20, x21
   1c48c:	add	x21, x21, #0x1
   1c490:	mov	w1, #0x0                   	// #0
   1c494:	lsl	x2, x2, #3
   1c498:	add	x0, x0, x21, lsl #3
   1c49c:	bl	ac10 <memset@plt>
   1c4a0:	str	x20, [x19, #192]
   1c4a4:	b	1c450 <printf_parse@@Base+0x1c54>
   1c4a8:	stp	x29, x30, [sp, #-32]!
   1c4ac:	mov	x29, sp
   1c4b0:	str	x19, [sp, #16]
   1c4b4:	mov	x19, x0
   1c4b8:	ldr	x0, [x0]
   1c4bc:	bl	b050 <free@plt>
   1c4c0:	ldr	x0, [x19, #8]
   1c4c4:	bl	b050 <free@plt>
   1c4c8:	ldr	x0, [x19, #16]
   1c4cc:	bl	b050 <free@plt>
   1c4d0:	ldr	x0, [x19, #24]
   1c4d4:	bl	b050 <free@plt>
   1c4d8:	mov	x0, x19
   1c4dc:	ldr	x19, [sp, #16]
   1c4e0:	ldp	x29, x30, [sp], #32
   1c4e4:	b	b050 <free@plt>
   1c4e8:	ldr	w1, [x0, #8]
   1c4ec:	and	w1, w1, #0x7ffff
   1c4f0:	and	w1, w1, #0xfffc00ff
   1c4f4:	cmp	w1, #0x6
   1c4f8:	b.ne	1c504 <printf_parse@@Base+0x1d08>  // b.any
   1c4fc:	ldr	x0, [x0]
   1c500:	b	1c4a8 <printf_parse@@Base+0x1cac>
   1c504:	cmp	w1, #0x3
   1c508:	b.ne	1c514 <printf_parse@@Base+0x1d18>  // b.any
   1c50c:	ldr	x0, [x0]
   1c510:	b	b050 <free@plt>
   1c514:	ret
   1c518:	stp	x29, x30, [sp, #-16]!
   1c51c:	add	x0, x1, #0x28
   1c520:	mov	x29, sp
   1c524:	bl	1c4e8 <printf_parse@@Base+0x1cec>
   1c528:	mov	w0, #0x0                   	// #0
   1c52c:	ldp	x29, x30, [sp], #16
   1c530:	ret
   1c534:	stp	x29, x30, [sp, #-96]!
   1c538:	mov	x29, sp
   1c53c:	stp	x19, x20, [sp, #16]
   1c540:	mov	x19, x0
   1c544:	ldp	x20, x0, [x0, #8]
   1c548:	stp	x21, x22, [sp, #32]
   1c54c:	mov	x21, x2
   1c550:	stp	x23, x24, [sp, #48]
   1c554:	mov	x23, x1
   1c558:	and	w24, w2, #0xff
   1c55c:	stp	x25, x26, [sp, #64]
   1c560:	cmp	x0, x20
   1c564:	str	x27, [sp, #80]
   1c568:	b.cc	1c648 <printf_parse@@Base+0x1e4c>  // b.lo, b.ul, b.last
   1c56c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1c570:	lsl	x25, x20, #1
   1c574:	movk	x0, #0xaaa, lsl #48
   1c578:	cmp	x0, x20, lsl #1
   1c57c:	b.cs	1c5a0 <printf_parse@@Base+0x1da4>  // b.hs, b.nlast
   1c580:	mov	x0, #0xffffffffffffffff    	// #-1
   1c584:	ldp	x19, x20, [sp, #16]
   1c588:	ldp	x21, x22, [sp, #32]
   1c58c:	ldp	x23, x24, [sp, #48]
   1c590:	ldp	x25, x26, [sp, #64]
   1c594:	ldr	x27, [sp, #80]
   1c598:	ldp	x29, x30, [sp], #96
   1c59c:	ret
   1c5a0:	ldr	x0, [x19]
   1c5a4:	lsl	x1, x20, #5
   1c5a8:	bl	ad60 <realloc@plt>
   1c5ac:	cbz	x0, 1c580 <printf_parse@@Base+0x1d84>
   1c5b0:	str	x0, [x19]
   1c5b4:	lsl	x22, x20, #4
   1c5b8:	ldr	x0, [x19, #24]
   1c5bc:	mov	x1, x22
   1c5c0:	bl	ad60 <realloc@plt>
   1c5c4:	mov	x27, x0
   1c5c8:	ldr	x0, [x19, #32]
   1c5cc:	mov	x1, x22
   1c5d0:	bl	ad60 <realloc@plt>
   1c5d4:	mov	x26, x0
   1c5d8:	mov	x1, #0x30                  	// #48
   1c5dc:	ldr	x0, [x19, #40]
   1c5e0:	mul	x20, x20, x1
   1c5e4:	mov	x1, x20
   1c5e8:	bl	ad60 <realloc@plt>
   1c5ec:	mov	x22, x0
   1c5f0:	ldr	x0, [x19, #48]
   1c5f4:	mov	x1, x20
   1c5f8:	bl	ad60 <realloc@plt>
   1c5fc:	mov	x20, x0
   1c600:	cmp	x27, #0x0
   1c604:	ccmp	x26, #0x0, #0x4, ne  // ne = any
   1c608:	b.eq	1c618 <printf_parse@@Base+0x1e1c>  // b.none
   1c60c:	cmp	x22, #0x0
   1c610:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   1c614:	b.ne	1c63c <printf_parse@@Base+0x1e40>  // b.any
   1c618:	mov	x0, x27
   1c61c:	bl	b050 <free@plt>
   1c620:	mov	x0, x26
   1c624:	bl	b050 <free@plt>
   1c628:	mov	x0, x22
   1c62c:	bl	b050 <free@plt>
   1c630:	mov	x0, x20
   1c634:	bl	b050 <free@plt>
   1c638:	b	1c580 <printf_parse@@Base+0x1d84>
   1c63c:	str	x25, [x19, #8]
   1c640:	stp	x27, x26, [x19, #24]
   1c644:	stp	x22, x0, [x19, #40]
   1c648:	cmp	w24, #0x5
   1c64c:	ldr	x1, [x19, #16]
   1c650:	ldr	x2, [x19]
   1c654:	lsl	x3, x1, #4
   1c658:	add	x0, x2, x1, lsl #4
   1c65c:	str	x23, [x2, x3]
   1c660:	str	x21, [x0, #8]
   1c664:	and	w21, w21, #0xfffc00ff
   1c668:	str	w21, [x0, #8]
   1c66c:	b.ne	1c6d0 <printf_parse@@Base+0x1ed4>  // b.any
   1c670:	ldr	w2, [x19, #180]
   1c674:	cmp	w2, #0x1
   1c678:	cset	w3, gt
   1c67c:	ldrb	w2, [x0, #10]
   1c680:	bfi	w2, w3, #4, #1
   1c684:	strb	w2, [x0, #10]
   1c688:	mov	x2, #0xffffffffffffffff    	// #-1
   1c68c:	ldr	x0, [x19, #24]
   1c690:	str	x2, [x0, x1, lsl #3]
   1c694:	mov	x2, #0x18                  	// #24
   1c698:	ldr	x0, [x19, #40]
   1c69c:	ldr	x1, [x19, #16]
   1c6a0:	madd	x1, x1, x2, x0
   1c6a4:	stp	xzr, xzr, [x1]
   1c6a8:	str	xzr, [x1, #16]
   1c6ac:	ldr	x0, [x19, #16]
   1c6b0:	ldr	x1, [x19, #48]
   1c6b4:	madd	x0, x0, x2, x1
   1c6b8:	stp	xzr, xzr, [x0]
   1c6bc:	str	xzr, [x0, #16]
   1c6c0:	ldr	x0, [x19, #16]
   1c6c4:	add	x1, x0, #0x1
   1c6c8:	str	x1, [x19, #16]
   1c6cc:	b	1c584 <printf_parse@@Base+0x1d88>
   1c6d0:	cmp	w24, #0x6
   1c6d4:	cset	w3, eq  // eq = none
   1c6d8:	b	1c67c <printf_parse@@Base+0x1e80>
   1c6dc:	stp	x29, x30, [sp, #-48]!
   1c6e0:	mov	x29, sp
   1c6e4:	stp	x19, x20, [sp, #16]
   1c6e8:	mov	x20, x1
   1c6ec:	mov	w19, w2
   1c6f0:	stp	x21, x22, [sp, #32]
   1c6f4:	lsl	x22, x1, #4
   1c6f8:	mov	x21, x0
   1c6fc:	ldr	x1, [x0]
   1c700:	add	x1, x1, x20, lsl #4
   1c704:	ldp	x1, x2, [x1]
   1c708:	bl	1c534 <printf_parse@@Base+0x1d38>
   1c70c:	cmn	x0, #0x1
   1c710:	b.eq	1c758 <printf_parse@@Base+0x1f5c>  // b.none
   1c714:	ldr	x2, [x21]
   1c718:	and	w3, w19, #0x3ff
   1c71c:	add	x4, x2, x0, lsl #4
   1c720:	add	x2, x2, x22
   1c724:	ldr	w1, [x4, #8]
   1c728:	bfi	w1, w3, #8, #10
   1c72c:	str	w1, [x4, #8]
   1c730:	and	w1, w1, #0xfff800ff
   1c734:	ldr	w2, [x2, #8]
   1c738:	ubfx	x2, x2, #8, #10
   1c73c:	orr	w2, w2, w3
   1c740:	lsl	w2, w2, #8
   1c744:	orr	w2, w2, #0x40000
   1c748:	orr	w2, w2, w1
   1c74c:	ldr	x1, [x21, #32]
   1c750:	str	w2, [x4, #8]
   1c754:	str	x20, [x1, x0, lsl #3]
   1c758:	ldp	x19, x20, [sp, #16]
   1c75c:	ldp	x21, x22, [sp, #32]
   1c760:	ldp	x29, x30, [sp], #48
   1c764:	ret
   1c768:	stp	x29, x30, [sp, #-32]!
   1c76c:	mov	x29, sp
   1c770:	str	x19, [sp, #16]
   1c774:	mov	x19, x0
   1c778:	ldr	x0, [x0, #48]
   1c77c:	bl	b050 <free@plt>
   1c780:	ldr	x0, [x19, #72]
   1c784:	bl	b050 <free@plt>
   1c788:	ldr	x0, [x19, #80]
   1c78c:	add	x1, x19, #0x8
   1c790:	cmp	x0, x1
   1c794:	b.eq	1c7a8 <printf_parse@@Base+0x1fac>  // b.none
   1c798:	ldr	x0, [x0, #16]
   1c79c:	bl	b050 <free@plt>
   1c7a0:	ldr	x0, [x19, #80]
   1c7a4:	bl	b050 <free@plt>
   1c7a8:	ldr	x0, [x19, #24]
   1c7ac:	bl	b050 <free@plt>
   1c7b0:	ldr	x0, [x19, #96]
   1c7b4:	bl	b050 <free@plt>
   1c7b8:	ldr	x0, [x19, #88]
   1c7bc:	bl	b050 <free@plt>
   1c7c0:	mov	x0, x19
   1c7c4:	ldr	x19, [sp, #16]
   1c7c8:	ldp	x29, x30, [sp], #32
   1c7cc:	b	b050 <free@plt>
   1c7d0:	stp	x29, x30, [sp, #-32]!
   1c7d4:	mov	x29, sp
   1c7d8:	str	x19, [sp, #16]
   1c7dc:	mov	x19, x0
   1c7e0:	ldr	x0, [x0, #16]
   1c7e4:	bl	b050 <free@plt>
   1c7e8:	ldr	x0, [x19, #24]
   1c7ec:	bl	b050 <free@plt>
   1c7f0:	ldrb	w0, [x19, #139]
   1c7f4:	cbz	w0, 1c808 <printf_parse@@Base+0x200c>
   1c7f8:	ldr	x0, [x19, #8]
   1c7fc:	ldr	x19, [sp, #16]
   1c800:	ldp	x29, x30, [sp], #32
   1c804:	b	b050 <free@plt>
   1c808:	ldr	x19, [sp, #16]
   1c80c:	ldp	x29, x30, [sp], #32
   1c810:	ret
   1c814:	stp	x29, x30, [sp, #-64]!
   1c818:	mov	x29, sp
   1c81c:	stp	x19, x20, [sp, #16]
   1c820:	mov	x19, x0
   1c824:	ldr	x0, [x0]
   1c828:	stp	x21, x22, [sp, #32]
   1c82c:	str	x23, [sp, #48]
   1c830:	cbnz	x0, 1c8d4 <printf_parse@@Base+0x20d8>
   1c834:	ldr	x0, [x19, #24]
   1c838:	mov	x20, #0x0                   	// #0
   1c83c:	mov	x21, #0x18                  	// #24
   1c840:	bl	b050 <free@plt>
   1c844:	ldr	x0, [x19, #16]
   1c848:	cmp	x0, x20
   1c84c:	b.hi	1c8dc <printf_parse@@Base+0x20e0>  // b.pmore
   1c850:	ldr	x0, [x19, #40]
   1c854:	bl	b050 <free@plt>
   1c858:	ldr	x0, [x19, #48]
   1c85c:	bl	b050 <free@plt>
   1c860:	ldr	x0, [x19, #56]
   1c864:	bl	b050 <free@plt>
   1c868:	ldr	x0, [x19]
   1c86c:	bl	b050 <free@plt>
   1c870:	ldr	x0, [x19, #64]
   1c874:	cbnz	x0, 1c964 <printf_parse@@Base+0x2168>
   1c878:	ldr	x0, [x19, #64]
   1c87c:	bl	b050 <free@plt>
   1c880:	ldr	x0, [x19, #120]
   1c884:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1c888:	add	x1, x1, #0x338
   1c88c:	cmp	x0, x1
   1c890:	b.ne	1c970 <printf_parse@@Base+0x2174>  // b.any
   1c894:	ldr	x0, [x19, #224]
   1c898:	bl	b050 <free@plt>
   1c89c:	mov	x0, x19
   1c8a0:	ldp	x19, x20, [sp, #16]
   1c8a4:	ldp	x21, x22, [sp, #32]
   1c8a8:	ldr	x23, [sp, #48]
   1c8ac:	ldp	x29, x30, [sp], #64
   1c8b0:	b	b050 <free@plt>
   1c8b4:	ldr	x0, [x19]
   1c8b8:	add	x0, x0, x20, lsl #4
   1c8bc:	add	x20, x20, #0x1
   1c8c0:	bl	1c4e8 <printf_parse@@Base+0x1cec>
   1c8c4:	ldr	x0, [x19, #16]
   1c8c8:	cmp	x0, x20
   1c8cc:	b.hi	1c8b4 <printf_parse@@Base+0x20b8>  // b.pmore
   1c8d0:	b	1c834 <printf_parse@@Base+0x2038>
   1c8d4:	mov	x20, #0x0                   	// #0
   1c8d8:	b	1c8c4 <printf_parse@@Base+0x20c8>
   1c8dc:	ldr	x0, [x19, #48]
   1c8e0:	cbz	x0, 1c8f0 <printf_parse@@Base+0x20f4>
   1c8e4:	madd	x0, x20, x21, x0
   1c8e8:	ldr	x0, [x0, #16]
   1c8ec:	bl	b050 <free@plt>
   1c8f0:	ldr	x0, [x19, #56]
   1c8f4:	cbz	x0, 1c904 <printf_parse@@Base+0x2108>
   1c8f8:	madd	x0, x20, x21, x0
   1c8fc:	ldr	x0, [x0, #16]
   1c900:	bl	b050 <free@plt>
   1c904:	ldr	x0, [x19, #40]
   1c908:	cbz	x0, 1c918 <printf_parse@@Base+0x211c>
   1c90c:	madd	x0, x20, x21, x0
   1c910:	ldr	x0, [x0, #16]
   1c914:	bl	b050 <free@plt>
   1c918:	add	x20, x20, #0x1
   1c91c:	b	1c844 <printf_parse@@Base+0x2048>
   1c920:	madd	x21, x20, x23, x21
   1c924:	mov	x22, #0x0                   	// #0
   1c928:	ldr	x1, [x21]
   1c92c:	ldr	x0, [x21, #16]
   1c930:	cmp	x1, x22
   1c934:	b.gt	1c954 <printf_parse@@Base+0x2158>
   1c938:	add	x20, x20, #0x1
   1c93c:	bl	b050 <free@plt>
   1c940:	ldr	x0, [x19, #136]
   1c944:	ldr	x21, [x19, #64]
   1c948:	cmp	x20, x0
   1c94c:	b.ls	1c920 <printf_parse@@Base+0x2124>  // b.plast
   1c950:	b	1c878 <printf_parse@@Base+0x207c>
   1c954:	ldr	x0, [x0, x22, lsl #3]
   1c958:	add	x22, x22, #0x1
   1c95c:	bl	1c768 <printf_parse@@Base+0x1f6c>
   1c960:	b	1c928 <printf_parse@@Base+0x212c>
   1c964:	mov	x20, #0x0                   	// #0
   1c968:	mov	x23, #0x18                  	// #24
   1c96c:	b	1c940 <printf_parse@@Base+0x2144>
   1c970:	bl	b050 <free@plt>
   1c974:	b	1c894 <printf_parse@@Base+0x2098>
   1c978:	stp	x29, x30, [sp, #-64]!
   1c97c:	mov	x29, sp
   1c980:	stp	x19, x20, [sp, #16]
   1c984:	mov	x19, x0
   1c988:	stp	x21, x22, [sp, #32]
   1c98c:	mov	x21, #0x0                   	// #0
   1c990:	str	x23, [sp, #48]
   1c994:	ldr	x0, [x19, #232]
   1c998:	cmp	x0, x21
   1c99c:	b.gt	1c9bc <printf_parse@@Base+0x21c0>
   1c9a0:	ldp	x21, x22, [sp, #32]
   1c9a4:	ldr	x23, [sp, #48]
   1c9a8:	str	xzr, [x19, #200]
   1c9ac:	str	xzr, [x19, #232]
   1c9b0:	ldp	x19, x20, [sp, #16]
   1c9b4:	ldp	x29, x30, [sp], #64
   1c9b8:	ret
   1c9bc:	ldr	x0, [x19, #248]
   1c9c0:	mov	x22, #0x0                   	// #0
   1c9c4:	ldr	x20, [x0, x21, lsl #3]
   1c9c8:	ldp	x1, x0, [x20, #32]
   1c9cc:	cmp	x1, x22
   1c9d0:	b.gt	1ca00 <printf_parse@@Base+0x2204>
   1c9d4:	bl	b050 <free@plt>
   1c9d8:	ldr	x0, [x20, #16]
   1c9dc:	cbz	x0, 1c9f0 <printf_parse@@Base+0x21f4>
   1c9e0:	ldr	x0, [x0, #16]
   1c9e4:	bl	b050 <free@plt>
   1c9e8:	ldr	x0, [x20, #16]
   1c9ec:	bl	b050 <free@plt>
   1c9f0:	mov	x0, x20
   1c9f4:	add	x21, x21, #0x1
   1c9f8:	bl	b050 <free@plt>
   1c9fc:	b	1c994 <printf_parse@@Base+0x2198>
   1ca00:	ldr	x23, [x0, x22, lsl #3]
   1ca04:	add	x22, x22, #0x1
   1ca08:	ldr	x0, [x23, #32]
   1ca0c:	bl	b050 <free@plt>
   1ca10:	mov	x0, x23
   1ca14:	bl	b050 <free@plt>
   1ca18:	b	1c9c8 <printf_parse@@Base+0x21cc>
   1ca1c:	stp	x29, x30, [sp, #-48]!
   1ca20:	mov	x2, x1
   1ca24:	mov	x29, sp
   1ca28:	ldrb	w4, [x1, #48]
   1ca2c:	stp	x19, x20, [sp, #16]
   1ca30:	sub	w5, w4, #0x2
   1ca34:	stp	x21, x22, [sp, #32]
   1ca38:	cmp	w5, #0xe
   1ca3c:	ldr	x3, [x1, #56]
   1ca40:	b.hi	1cbc8 <printf_parse@@Base+0x23cc>  // b.pmore
   1ca44:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1ca48:	add	x1, x1, #0x278
   1ca4c:	ldrb	w1, [x1, w5, uxtw]
   1ca50:	adr	x5, 1ca5c <printf_parse@@Base+0x2260>
   1ca54:	add	x1, x5, w1, sxtb #2
   1ca58:	br	x1
   1ca5c:	ldr	x0, [x2, #32]
   1ca60:	cbnz	x0, 1ca78 <printf_parse@@Base+0x227c>
   1ca64:	mov	w0, #0x0                   	// #0
   1ca68:	ldp	x19, x20, [sp, #16]
   1ca6c:	ldp	x21, x22, [sp, #32]
   1ca70:	ldp	x29, x30, [sp], #48
   1ca74:	ret
   1ca78:	adrp	x3, 29000 <vasnprintf@@Base+0x3170>
   1ca7c:	add	x3, x3, #0x338
   1ca80:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1ca84:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   1ca88:	add	x3, x3, #0x20
   1ca8c:	add	x1, x1, #0x168
   1ca90:	add	x0, x0, #0x172
   1ca94:	mov	w2, #0x59f                 	// #1439
   1ca98:	bl	b530 <__assert_fail@plt>
   1ca9c:	ldrb	w1, [x0, #176]
   1caa0:	orr	w1, w1, #0x1
   1caa4:	strb	w1, [x0, #176]
   1caa8:	ldr	x1, [x2, #8]
   1caac:	cbz	x1, 1caf0 <printf_parse@@Base+0x22f4>
   1cab0:	ldr	x1, [x1, #24]
   1cab4:	ldr	x19, [x1, #56]
   1cab8:	ldr	x1, [x2, #16]
   1cabc:	cbz	x1, 1caf8 <printf_parse@@Base+0x22fc>
   1cac0:	ldr	x1, [x1, #24]
   1cac4:	ldr	x20, [x1, #56]
   1cac8:	tbz	x19, #63, 1cb00 <printf_parse@@Base+0x2304>
   1cacc:	adrp	x3, 29000 <vasnprintf@@Base+0x3170>
   1cad0:	add	x3, x3, #0x338
   1cad4:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1cad8:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   1cadc:	add	x3, x3, #0x20
   1cae0:	add	x1, x1, #0x168
   1cae4:	add	x0, x0, #0x185
   1cae8:	mov	w2, #0x5af                 	// #1455
   1caec:	b	1ca98 <printf_parse@@Base+0x229c>
   1caf0:	ldr	x1, [x2, #32]
   1caf4:	b	1cab4 <printf_parse@@Base+0x22b8>
   1caf8:	ldr	x1, [x2, #32]
   1cafc:	b	1cac4 <printf_parse@@Base+0x22c8>
   1cb00:	tbz	x20, #63, 1cb28 <printf_parse@@Base+0x232c>
   1cb04:	adrp	x3, 29000 <vasnprintf@@Base+0x3170>
   1cb08:	add	x3, x3, #0x338
   1cb0c:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1cb10:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   1cb14:	add	x3, x3, #0x20
   1cb18:	add	x1, x1, #0x168
   1cb1c:	add	x0, x0, #0x18f
   1cb20:	mov	w2, #0x5b0                 	// #1456
   1cb24:	b	1ca98 <printf_parse@@Base+0x229c>
   1cb28:	mov	x1, #0x18                  	// #24
   1cb2c:	mov	x22, #0x2                   	// #2
   1cb30:	ldr	x0, [x0, #40]
   1cb34:	mul	x3, x3, x1
   1cb38:	add	x21, x0, x3
   1cb3c:	str	x22, [x0, x3]
   1cb40:	mov	x0, #0x10                  	// #16
   1cb44:	bl	aab0 <malloc@plt>
   1cb48:	str	x0, [x21, #16]
   1cb4c:	cbz	x0, 1cc04 <printf_parse@@Base+0x2408>
   1cb50:	cmp	x19, x20
   1cb54:	b.ne	1cb68 <printf_parse@@Base+0x236c>  // b.any
   1cb58:	mov	x1, #0x1                   	// #1
   1cb5c:	str	x1, [x21, #8]
   1cb60:	str	x19, [x0]
   1cb64:	b	1ca64 <printf_parse@@Base+0x2268>
   1cb68:	str	x22, [x21, #8]
   1cb6c:	b.ge	1cb78 <printf_parse@@Base+0x237c>  // b.tcont
   1cb70:	stp	x19, x20, [x0]
   1cb74:	b	1ca64 <printf_parse@@Base+0x2268>
   1cb78:	stp	x20, x19, [x0]
   1cb7c:	b	1ca64 <printf_parse@@Base+0x2268>
   1cb80:	ldr	x1, [x2, #32]
   1cb84:	ldr	x0, [x0, #40]
   1cb88:	ldr	x1, [x1, #56]
   1cb8c:	mov	x2, #0x18                  	// #24
   1cb90:	ldp	x19, x20, [sp, #16]
   1cb94:	madd	x0, x3, x2, x0
   1cb98:	ldp	x21, x22, [sp, #32]
   1cb9c:	ldp	x29, x30, [sp], #48
   1cba0:	b	1bac4 <printf_parse@@Base+0x12c8>
   1cba4:	ldr	x1, [x2, #32]
   1cba8:	ldr	x4, [x0, #24]
   1cbac:	ldr	x1, [x1, #56]
   1cbb0:	str	x1, [x4, x3, lsl #3]
   1cbb4:	ldrb	w2, [x2, #48]
   1cbb8:	cmp	w2, #0x4
   1cbbc:	b.ne	1ca64 <printf_parse@@Base+0x2268>  // b.any
   1cbc0:	ldr	x0, [x0, #40]
   1cbc4:	b	1cb8c <printf_parse@@Base+0x2390>
   1cbc8:	tbz	w4, #3, 1cbf0 <printf_parse@@Base+0x23f4>
   1cbcc:	adrp	x3, 29000 <vasnprintf@@Base+0x3170>
   1cbd0:	add	x3, x3, #0x338
   1cbd4:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1cbd8:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   1cbdc:	add	x3, x3, #0x20
   1cbe0:	add	x1, x1, #0x168
   1cbe4:	add	x0, x0, #0x19a
   1cbe8:	mov	w2, #0x5c2                 	// #1474
   1cbec:	b	1ca98 <printf_parse@@Base+0x229c>
   1cbf0:	ldr	x1, [x2, #32]
   1cbf4:	ldr	x0, [x0, #24]
   1cbf8:	ldr	x1, [x1, #56]
   1cbfc:	str	x1, [x0, x3, lsl #3]
   1cc00:	b	1ca64 <printf_parse@@Base+0x2268>
   1cc04:	mov	w0, #0xc                   	// #12
   1cc08:	b	1ca68 <printf_parse@@Base+0x226c>
   1cc0c:	stp	x29, x30, [sp, #-64]!
   1cc10:	mov	x29, sp
   1cc14:	stp	x19, x20, [sp, #16]
   1cc18:	mov	x20, x0
   1cc1c:	mov	x19, x1
   1cc20:	stp	x21, x22, [sp, #32]
   1cc24:	mov	x22, x2
   1cc28:	mov	x21, x4
   1cc2c:	stp	x23, x24, [sp, #48]
   1cc30:	mov	x24, x3
   1cc34:	tbz	w5, #22, 1cc68 <printf_parse@@Base+0x246c>
   1cc38:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1cc3c:	mov	x0, x4
   1cc40:	add	x1, x1, #0x1c4
   1cc44:	bl	afa0 <strcmp@plt>
   1cc48:	cbz	w0, 1cc60 <printf_parse@@Base+0x2464>
   1cc4c:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1cc50:	mov	x0, x21
   1cc54:	add	x1, x1, #0x1ca
   1cc58:	bl	afa0 <strcmp@plt>
   1cc5c:	cbnz	w0, 1cc68 <printf_parse@@Base+0x246c>
   1cc60:	adrp	x21, 29000 <vasnprintf@@Base+0x3170>
   1cc64:	add	x21, x21, #0x1be
   1cc68:	ldr	x23, [x24]
   1cc6c:	ldr	x0, [x22, #72]
   1cc70:	cmp	x23, x0
   1cc74:	b.ne	1cc98 <printf_parse@@Base+0x249c>  // b.any
   1cc78:	ldr	x0, [x22, #24]
   1cc7c:	lsl	x23, x23, #1
   1cc80:	add	x23, x23, #0x1
   1cc84:	lsl	x1, x23, #3
   1cc88:	bl	ad60 <realloc@plt>
   1cc8c:	cbz	x0, 1d23c <printf_parse@@Base+0x2a40>
   1cc90:	str	x0, [x22, #24]
   1cc94:	str	x23, [x24]
   1cc98:	ldr	x0, [x22, #72]
   1cc9c:	ldr	x23, [x22, #24]
   1cca0:	add	x1, x0, #0x1
   1cca4:	str	x1, [x22, #72]
   1cca8:	lsl	x22, x0, #3
   1ccac:	mov	x0, x21
   1ccb0:	bl	a820 <wctype@plt>
   1ccb4:	str	x0, [x23, x22]
   1ccb8:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1ccbc:	mov	x0, x21
   1ccc0:	add	x1, x1, #0x1d0
   1ccc4:	bl	afa0 <strcmp@plt>
   1ccc8:	cbnz	w0, 1cd40 <printf_parse@@Base+0x2544>
   1cccc:	bl	afc0 <__ctype_b_loc@plt>
   1ccd0:	mov	x5, x0
   1ccd4:	mov	x4, #0x0                   	// #0
   1ccd8:	cbz	x20, 1cd18 <printf_parse@@Base+0x251c>
   1ccdc:	ldr	x0, [x5]
   1cce0:	ldrh	w0, [x0, x4, lsl #1]
   1cce4:	tbz	w0, #3, 1ccf4 <printf_parse@@Base+0x24f8>
   1cce8:	ldrb	w1, [x20, x4]
   1ccec:	mov	x0, x19
   1ccf0:	bl	1b234 <printf_parse@@Base+0xa38>
   1ccf4:	add	x4, x4, #0x1
   1ccf8:	cmp	x4, #0x100
   1ccfc:	b.ne	1ccdc <printf_parse@@Base+0x24e0>  // b.any
   1cd00:	mov	w0, #0x0                   	// #0
   1cd04:	ldp	x19, x20, [sp, #16]
   1cd08:	ldp	x21, x22, [sp, #32]
   1cd0c:	ldp	x23, x24, [sp, #48]
   1cd10:	ldp	x29, x30, [sp], #64
   1cd14:	ret
   1cd18:	ldr	x0, [x5]
   1cd1c:	ldrh	w0, [x0, x4, lsl #1]
   1cd20:	tbz	w0, #3, 1cd30 <printf_parse@@Base+0x2534>
   1cd24:	mov	x1, x4
   1cd28:	mov	x0, x19
   1cd2c:	bl	1b234 <printf_parse@@Base+0xa38>
   1cd30:	add	x4, x4, #0x1
   1cd34:	cmp	x4, #0x100
   1cd38:	b.ne	1cd18 <printf_parse@@Base+0x251c>  // b.any
   1cd3c:	b	1cd00 <printf_parse@@Base+0x2504>
   1cd40:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1cd44:	mov	x0, x21
   1cd48:	add	x1, x1, #0x1d6
   1cd4c:	bl	afa0 <strcmp@plt>
   1cd50:	cbnz	w0, 1cdb4 <printf_parse@@Base+0x25b8>
   1cd54:	bl	afc0 <__ctype_b_loc@plt>
   1cd58:	mov	x5, x0
   1cd5c:	mov	x4, #0x0                   	// #0
   1cd60:	cbz	x20, 1cd8c <printf_parse@@Base+0x2590>
   1cd64:	ldr	x0, [x5]
   1cd68:	ldrh	w0, [x0, x4, lsl #1]
   1cd6c:	tbz	w0, #1, 1cd7c <printf_parse@@Base+0x2580>
   1cd70:	ldrb	w1, [x20, x4]
   1cd74:	mov	x0, x19
   1cd78:	bl	1b234 <printf_parse@@Base+0xa38>
   1cd7c:	add	x4, x4, #0x1
   1cd80:	cmp	x4, #0x100
   1cd84:	b.ne	1cd64 <printf_parse@@Base+0x2568>  // b.any
   1cd88:	b	1cd00 <printf_parse@@Base+0x2504>
   1cd8c:	ldr	x0, [x5]
   1cd90:	ldrh	w0, [x0, x4, lsl #1]
   1cd94:	tbz	w0, #1, 1cda4 <printf_parse@@Base+0x25a8>
   1cd98:	mov	x1, x4
   1cd9c:	mov	x0, x19
   1cda0:	bl	1b234 <printf_parse@@Base+0xa38>
   1cda4:	add	x4, x4, #0x1
   1cda8:	cmp	x4, #0x100
   1cdac:	b.ne	1cd8c <printf_parse@@Base+0x2590>  // b.any
   1cdb0:	b	1cd00 <printf_parse@@Base+0x2504>
   1cdb4:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1cdb8:	mov	x0, x21
   1cdbc:	add	x1, x1, #0x1ca
   1cdc0:	bl	afa0 <strcmp@plt>
   1cdc4:	cbnz	w0, 1ce28 <printf_parse@@Base+0x262c>
   1cdc8:	bl	afc0 <__ctype_b_loc@plt>
   1cdcc:	mov	x5, x0
   1cdd0:	mov	x4, #0x0                   	// #0
   1cdd4:	cbz	x20, 1ce00 <printf_parse@@Base+0x2604>
   1cdd8:	ldr	x0, [x5]
   1cddc:	ldrh	w0, [x0, x4, lsl #1]
   1cde0:	tbz	w0, #9, 1cdf0 <printf_parse@@Base+0x25f4>
   1cde4:	ldrb	w1, [x20, x4]
   1cde8:	mov	x0, x19
   1cdec:	bl	1b234 <printf_parse@@Base+0xa38>
   1cdf0:	add	x4, x4, #0x1
   1cdf4:	cmp	x4, #0x100
   1cdf8:	b.ne	1cdd8 <printf_parse@@Base+0x25dc>  // b.any
   1cdfc:	b	1cd00 <printf_parse@@Base+0x2504>
   1ce00:	ldr	x0, [x5]
   1ce04:	ldrh	w0, [x0, x4, lsl #1]
   1ce08:	tbz	w0, #9, 1ce18 <printf_parse@@Base+0x261c>
   1ce0c:	mov	x1, x4
   1ce10:	mov	x0, x19
   1ce14:	bl	1b234 <printf_parse@@Base+0xa38>
   1ce18:	add	x4, x4, #0x1
   1ce1c:	cmp	x4, #0x100
   1ce20:	b.ne	1ce00 <printf_parse@@Base+0x2604>  // b.any
   1ce24:	b	1cd00 <printf_parse@@Base+0x2504>
   1ce28:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1ce2c:	mov	x0, x21
   1ce30:	add	x1, x1, #0x1dc
   1ce34:	bl	afa0 <strcmp@plt>
   1ce38:	cbnz	w0, 1ce9c <printf_parse@@Base+0x26a0>
   1ce3c:	bl	afc0 <__ctype_b_loc@plt>
   1ce40:	mov	x5, x0
   1ce44:	mov	x4, #0x0                   	// #0
   1ce48:	cbz	x20, 1ce74 <printf_parse@@Base+0x2678>
   1ce4c:	ldr	x0, [x5]
   1ce50:	ldrh	w0, [x0, x4, lsl #1]
   1ce54:	tbz	w0, #13, 1ce64 <printf_parse@@Base+0x2668>
   1ce58:	ldrb	w1, [x20, x4]
   1ce5c:	mov	x0, x19
   1ce60:	bl	1b234 <printf_parse@@Base+0xa38>
   1ce64:	add	x4, x4, #0x1
   1ce68:	cmp	x4, #0x100
   1ce6c:	b.ne	1ce4c <printf_parse@@Base+0x2650>  // b.any
   1ce70:	b	1cd00 <printf_parse@@Base+0x2504>
   1ce74:	ldr	x0, [x5]
   1ce78:	ldrh	w0, [x0, x4, lsl #1]
   1ce7c:	tbz	w0, #13, 1ce8c <printf_parse@@Base+0x2690>
   1ce80:	mov	x1, x4
   1ce84:	mov	x0, x19
   1ce88:	bl	1b234 <printf_parse@@Base+0xa38>
   1ce8c:	add	x4, x4, #0x1
   1ce90:	cmp	x4, #0x100
   1ce94:	b.ne	1ce74 <printf_parse@@Base+0x2678>  // b.any
   1ce98:	b	1cd00 <printf_parse@@Base+0x2504>
   1ce9c:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1cea0:	mov	x0, x21
   1cea4:	add	x1, x1, #0x1be
   1cea8:	bl	afa0 <strcmp@plt>
   1ceac:	cbnz	w0, 1cf10 <printf_parse@@Base+0x2714>
   1ceb0:	bl	afc0 <__ctype_b_loc@plt>
   1ceb4:	mov	x5, x0
   1ceb8:	mov	x4, #0x0                   	// #0
   1cebc:	cbz	x20, 1cee8 <printf_parse@@Base+0x26ec>
   1cec0:	ldr	x0, [x5]
   1cec4:	ldrh	w0, [x0, x4, lsl #1]
   1cec8:	tbz	w0, #10, 1ced8 <printf_parse@@Base+0x26dc>
   1cecc:	ldrb	w1, [x20, x4]
   1ced0:	mov	x0, x19
   1ced4:	bl	1b234 <printf_parse@@Base+0xa38>
   1ced8:	add	x4, x4, #0x1
   1cedc:	cmp	x4, #0x100
   1cee0:	b.ne	1cec0 <printf_parse@@Base+0x26c4>  // b.any
   1cee4:	b	1cd00 <printf_parse@@Base+0x2504>
   1cee8:	ldr	x0, [x5]
   1ceec:	ldrh	w0, [x0, x4, lsl #1]
   1cef0:	tbz	w0, #10, 1cf00 <printf_parse@@Base+0x2704>
   1cef4:	mov	x1, x4
   1cef8:	mov	x0, x19
   1cefc:	bl	1b234 <printf_parse@@Base+0xa38>
   1cf00:	add	x4, x4, #0x1
   1cf04:	cmp	x4, #0x100
   1cf08:	b.ne	1cee8 <printf_parse@@Base+0x26ec>  // b.any
   1cf0c:	b	1cd00 <printf_parse@@Base+0x2504>
   1cf10:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1cf14:	mov	x0, x21
   1cf18:	add	x1, x1, #0x1fb
   1cf1c:	bl	afa0 <strcmp@plt>
   1cf20:	cbnz	w0, 1cf84 <printf_parse@@Base+0x2788>
   1cf24:	bl	afc0 <__ctype_b_loc@plt>
   1cf28:	mov	x5, x0
   1cf2c:	mov	x4, #0x0                   	// #0
   1cf30:	cbz	x20, 1cf5c <printf_parse@@Base+0x2760>
   1cf34:	ldr	x0, [x5]
   1cf38:	ldrh	w0, [x0, x4, lsl #1]
   1cf3c:	tbz	w0, #11, 1cf4c <printf_parse@@Base+0x2750>
   1cf40:	ldrb	w1, [x20, x4]
   1cf44:	mov	x0, x19
   1cf48:	bl	1b234 <printf_parse@@Base+0xa38>
   1cf4c:	add	x4, x4, #0x1
   1cf50:	cmp	x4, #0x100
   1cf54:	b.ne	1cf34 <printf_parse@@Base+0x2738>  // b.any
   1cf58:	b	1cd00 <printf_parse@@Base+0x2504>
   1cf5c:	ldr	x0, [x5]
   1cf60:	ldrh	w0, [x0, x4, lsl #1]
   1cf64:	tbz	w0, #11, 1cf74 <printf_parse@@Base+0x2778>
   1cf68:	mov	x1, x4
   1cf6c:	mov	x0, x19
   1cf70:	bl	1b234 <printf_parse@@Base+0xa38>
   1cf74:	add	x4, x4, #0x1
   1cf78:	cmp	x4, #0x100
   1cf7c:	b.ne	1cf5c <printf_parse@@Base+0x2760>  // b.any
   1cf80:	b	1cd00 <printf_parse@@Base+0x2504>
   1cf84:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1cf88:	mov	x0, x21
   1cf8c:	add	x1, x1, #0x1e2
   1cf90:	bl	afa0 <strcmp@plt>
   1cf94:	cbnz	w0, 1cff8 <printf_parse@@Base+0x27fc>
   1cf98:	bl	afc0 <__ctype_b_loc@plt>
   1cf9c:	mov	x5, x0
   1cfa0:	mov	x4, #0x0                   	// #0
   1cfa4:	cbz	x20, 1cfd0 <printf_parse@@Base+0x27d4>
   1cfa8:	ldr	x0, [x5]
   1cfac:	ldrh	w0, [x0, x4, lsl #1]
   1cfb0:	tbz	w0, #14, 1cfc0 <printf_parse@@Base+0x27c4>
   1cfb4:	ldrb	w1, [x20, x4]
   1cfb8:	mov	x0, x19
   1cfbc:	bl	1b234 <printf_parse@@Base+0xa38>
   1cfc0:	add	x4, x4, #0x1
   1cfc4:	cmp	x4, #0x100
   1cfc8:	b.ne	1cfa8 <printf_parse@@Base+0x27ac>  // b.any
   1cfcc:	b	1cd00 <printf_parse@@Base+0x2504>
   1cfd0:	ldr	x0, [x5]
   1cfd4:	ldrh	w0, [x0, x4, lsl #1]
   1cfd8:	tbz	w0, #14, 1cfe8 <printf_parse@@Base+0x27ec>
   1cfdc:	mov	x1, x4
   1cfe0:	mov	x0, x19
   1cfe4:	bl	1b234 <printf_parse@@Base+0xa38>
   1cfe8:	add	x4, x4, #0x1
   1cfec:	cmp	x4, #0x100
   1cff0:	b.ne	1cfd0 <printf_parse@@Base+0x27d4>  // b.any
   1cff4:	b	1cd00 <printf_parse@@Base+0x2504>
   1cff8:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1cffc:	mov	x0, x21
   1d000:	add	x1, x1, #0x1c4
   1d004:	bl	afa0 <strcmp@plt>
   1d008:	cbnz	w0, 1d06c <printf_parse@@Base+0x2870>
   1d00c:	bl	afc0 <__ctype_b_loc@plt>
   1d010:	mov	x5, x0
   1d014:	mov	x4, #0x0                   	// #0
   1d018:	cbz	x20, 1d044 <printf_parse@@Base+0x2848>
   1d01c:	ldr	x0, [x5]
   1d020:	ldrh	w0, [x0, x4, lsl #1]
   1d024:	tbz	w0, #8, 1d034 <printf_parse@@Base+0x2838>
   1d028:	ldrb	w1, [x20, x4]
   1d02c:	mov	x0, x19
   1d030:	bl	1b234 <printf_parse@@Base+0xa38>
   1d034:	add	x4, x4, #0x1
   1d038:	cmp	x4, #0x100
   1d03c:	b.ne	1d01c <printf_parse@@Base+0x2820>  // b.any
   1d040:	b	1cd00 <printf_parse@@Base+0x2504>
   1d044:	ldr	x0, [x5]
   1d048:	ldrh	w0, [x0, x4, lsl #1]
   1d04c:	tbz	w0, #8, 1d05c <printf_parse@@Base+0x2860>
   1d050:	mov	x1, x4
   1d054:	mov	x0, x19
   1d058:	bl	1b234 <printf_parse@@Base+0xa38>
   1d05c:	add	x4, x4, #0x1
   1d060:	cmp	x4, #0x100
   1d064:	b.ne	1d044 <printf_parse@@Base+0x2848>  // b.any
   1d068:	b	1cd00 <printf_parse@@Base+0x2504>
   1d06c:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1d070:	mov	x0, x21
   1d074:	add	x1, x1, #0x1e8
   1d078:	bl	afa0 <strcmp@plt>
   1d07c:	cbnz	w0, 1d0e0 <printf_parse@@Base+0x28e4>
   1d080:	bl	afc0 <__ctype_b_loc@plt>
   1d084:	mov	x5, x0
   1d088:	mov	x4, #0x0                   	// #0
   1d08c:	cbz	x20, 1d0b8 <printf_parse@@Base+0x28bc>
   1d090:	ldr	x0, [x5]
   1d094:	ldrh	w0, [x0, x4, lsl #1]
   1d098:	tbz	w0, #0, 1d0a8 <printf_parse@@Base+0x28ac>
   1d09c:	ldrb	w1, [x20, x4]
   1d0a0:	mov	x0, x19
   1d0a4:	bl	1b234 <printf_parse@@Base+0xa38>
   1d0a8:	add	x4, x4, #0x1
   1d0ac:	cmp	x4, #0x100
   1d0b0:	b.ne	1d090 <printf_parse@@Base+0x2894>  // b.any
   1d0b4:	b	1cd00 <printf_parse@@Base+0x2504>
   1d0b8:	ldr	x0, [x5]
   1d0bc:	ldrh	w0, [x0, x4, lsl #1]
   1d0c0:	tbz	w0, #0, 1d0d0 <printf_parse@@Base+0x28d4>
   1d0c4:	mov	x1, x4
   1d0c8:	mov	x0, x19
   1d0cc:	bl	1b234 <printf_parse@@Base+0xa38>
   1d0d0:	add	x4, x4, #0x1
   1d0d4:	cmp	x4, #0x100
   1d0d8:	b.ne	1d0b8 <printf_parse@@Base+0x28bc>  // b.any
   1d0dc:	b	1cd00 <printf_parse@@Base+0x2504>
   1d0e0:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1d0e4:	mov	x0, x21
   1d0e8:	add	x1, x1, #0x1ee
   1d0ec:	bl	afa0 <strcmp@plt>
   1d0f0:	cbnz	w0, 1d154 <printf_parse@@Base+0x2958>
   1d0f4:	bl	afc0 <__ctype_b_loc@plt>
   1d0f8:	mov	x5, x0
   1d0fc:	mov	x4, #0x0                   	// #0
   1d100:	cbz	x20, 1d12c <printf_parse@@Base+0x2930>
   1d104:	ldr	x0, [x5]
   1d108:	ldrsh	w0, [x0, x4, lsl #1]
   1d10c:	tbz	w0, #31, 1d11c <printf_parse@@Base+0x2920>
   1d110:	ldrb	w1, [x20, x4]
   1d114:	mov	x0, x19
   1d118:	bl	1b234 <printf_parse@@Base+0xa38>
   1d11c:	add	x4, x4, #0x1
   1d120:	cmp	x4, #0x100
   1d124:	b.ne	1d104 <printf_parse@@Base+0x2908>  // b.any
   1d128:	b	1cd00 <printf_parse@@Base+0x2504>
   1d12c:	ldr	x0, [x5]
   1d130:	ldrsh	w0, [x0, x4, lsl #1]
   1d134:	tbz	w0, #31, 1d144 <printf_parse@@Base+0x2948>
   1d138:	mov	x1, x4
   1d13c:	mov	x0, x19
   1d140:	bl	1b234 <printf_parse@@Base+0xa38>
   1d144:	add	x4, x4, #0x1
   1d148:	cmp	x4, #0x100
   1d14c:	b.ne	1d12c <printf_parse@@Base+0x2930>  // b.any
   1d150:	b	1cd00 <printf_parse@@Base+0x2504>
   1d154:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1d158:	mov	x0, x21
   1d15c:	add	x1, x1, #0x1f4
   1d160:	bl	afa0 <strcmp@plt>
   1d164:	cbnz	w0, 1d1c8 <printf_parse@@Base+0x29cc>
   1d168:	bl	afc0 <__ctype_b_loc@plt>
   1d16c:	mov	x5, x0
   1d170:	mov	x4, #0x0                   	// #0
   1d174:	cbz	x20, 1d1a0 <printf_parse@@Base+0x29a4>
   1d178:	ldr	x0, [x5]
   1d17c:	ldrh	w0, [x0, x4, lsl #1]
   1d180:	tbz	w0, #2, 1d190 <printf_parse@@Base+0x2994>
   1d184:	ldrb	w1, [x20, x4]
   1d188:	mov	x0, x19
   1d18c:	bl	1b234 <printf_parse@@Base+0xa38>
   1d190:	add	x4, x4, #0x1
   1d194:	cmp	x4, #0x100
   1d198:	b.ne	1d178 <printf_parse@@Base+0x297c>  // b.any
   1d19c:	b	1cd00 <printf_parse@@Base+0x2504>
   1d1a0:	ldr	x0, [x5]
   1d1a4:	ldrh	w0, [x0, x4, lsl #1]
   1d1a8:	tbz	w0, #2, 1d1b8 <printf_parse@@Base+0x29bc>
   1d1ac:	mov	x1, x4
   1d1b0:	mov	x0, x19
   1d1b4:	bl	1b234 <printf_parse@@Base+0xa38>
   1d1b8:	add	x4, x4, #0x1
   1d1bc:	cmp	x4, #0x100
   1d1c0:	b.ne	1d1a0 <printf_parse@@Base+0x29a4>  // b.any
   1d1c4:	b	1cd00 <printf_parse@@Base+0x2504>
   1d1c8:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1d1cc:	mov	x0, x21
   1d1d0:	add	x1, x1, #0x1fa
   1d1d4:	bl	afa0 <strcmp@plt>
   1d1d8:	cbnz	w0, 1d244 <printf_parse@@Base+0x2a48>
   1d1dc:	bl	afc0 <__ctype_b_loc@plt>
   1d1e0:	mov	x5, x0
   1d1e4:	mov	x4, #0x0                   	// #0
   1d1e8:	cbz	x20, 1d214 <printf_parse@@Base+0x2a18>
   1d1ec:	ldr	x0, [x5]
   1d1f0:	ldrh	w0, [x0, x4, lsl #1]
   1d1f4:	tbz	w0, #12, 1d204 <printf_parse@@Base+0x2a08>
   1d1f8:	ldrb	w1, [x20, x4]
   1d1fc:	mov	x0, x19
   1d200:	bl	1b234 <printf_parse@@Base+0xa38>
   1d204:	add	x4, x4, #0x1
   1d208:	cmp	x4, #0x100
   1d20c:	b.ne	1d1ec <printf_parse@@Base+0x29f0>  // b.any
   1d210:	b	1cd00 <printf_parse@@Base+0x2504>
   1d214:	ldr	x0, [x5]
   1d218:	ldrh	w0, [x0, x4, lsl #1]
   1d21c:	tbz	w0, #12, 1d22c <printf_parse@@Base+0x2a30>
   1d220:	mov	x1, x4
   1d224:	mov	x0, x19
   1d228:	bl	1b234 <printf_parse@@Base+0xa38>
   1d22c:	add	x4, x4, #0x1
   1d230:	cmp	x4, #0x100
   1d234:	b.ne	1d214 <printf_parse@@Base+0x2a18>  // b.any
   1d238:	b	1cd00 <printf_parse@@Base+0x2504>
   1d23c:	mov	w0, #0xc                   	// #12
   1d240:	b	1cd04 <printf_parse@@Base+0x2508>
   1d244:	mov	w0, #0x4                   	// #4
   1d248:	b	1cd04 <printf_parse@@Base+0x2508>
   1d24c:	stp	x29, x30, [sp, #-400]!
   1d250:	mov	x29, sp
   1d254:	stp	x27, x28, [sp, #80]
   1d258:	ldr	x28, [x0]
   1d25c:	stp	x19, x20, [sp, #16]
   1d260:	mov	x20, x0
   1d264:	stp	x21, x22, [sp, #32]
   1d268:	mov	x19, x2
   1d26c:	ldr	w0, [x28, #180]
   1d270:	stp	x23, x24, [sp, #48]
   1d274:	cmp	w0, #0x1
   1d278:	stp	x25, x26, [sp, #64]
   1d27c:	mov	x25, x1
   1d280:	b.ne	1d39c <printf_parse@@Base+0x2ba0>  // b.any
   1d284:	ldr	x23, [x20, #24]
   1d288:	ubfx	w23, w23, #22, #1
   1d28c:	add	x22, sp, #0x88
   1d290:	add	x21, sp, #0x90
   1d294:	mov	x24, #0x0                   	// #0
   1d298:	ldr	x0, [x25, #16]
   1d29c:	cmp	x0, x24
   1d2a0:	b.le	1d588 <printf_parse@@Base+0x2d8c>
   1d2a4:	ldr	x0, [x25, #24]
   1d2a8:	ldr	x2, [x28]
   1d2ac:	ldr	x27, [x0, x24, lsl #3]
   1d2b0:	add	x0, x2, x27, lsl #4
   1d2b4:	lsl	x1, x27, #4
   1d2b8:	ldrb	w26, [x0, #8]
   1d2bc:	cmp	w26, #0x1
   1d2c0:	b.ne	1d3b0 <printf_parse@@Base+0x2bb4>  // b.any
   1d2c4:	ldrb	w0, [x2, x1]
   1d2c8:	ldrb	w2, [x2, x1]
   1d2cc:	strb	w26, [x19, x2]
   1d2d0:	cbz	w23, 1d2e4 <printf_parse@@Base+0x2ae8>
   1d2d4:	str	x1, [sp, #96]
   1d2d8:	bl	b550 <tolower@plt>
   1d2dc:	ldr	x1, [sp, #96]
   1d2e0:	strb	w26, [x19, w0, sxtw]
   1d2e4:	ldr	x0, [x20, #24]
   1d2e8:	tbz	w0, #22, 1d394 <printf_parse@@Base+0x2b98>
   1d2ec:	ldr	w0, [x28, #180]
   1d2f0:	cmp	w0, #0x1
   1d2f4:	b.le	1d394 <printf_parse@@Base+0x2b98>
   1d2f8:	ldr	x0, [x28]
   1d2fc:	mov	w3, #0x1                   	// #1
   1d300:	add	x2, x21, #0x1
   1d304:	movk	w3, #0x20, lsl #16
   1d308:	ldrb	w0, [x0, x1]
   1d30c:	strb	w0, [sp, #144]
   1d310:	ldr	x0, [x28, #16]
   1d314:	add	x27, x27, #0x1
   1d318:	cmp	x0, x27
   1d31c:	b.ls	1d344 <printf_parse@@Base+0x2b48>  // b.plast
   1d320:	ldr	x1, [x28]
   1d324:	mov	w4, #0xff                  	// #255
   1d328:	movk	w4, #0x20, lsl #16
   1d32c:	lsl	x5, x27, #4
   1d330:	add	x0, x1, x27, lsl #4
   1d334:	ldr	w0, [x0, #8]
   1d338:	and	w0, w0, w4
   1d33c:	cmp	w0, w3
   1d340:	b.eq	1d3a4 <printf_parse@@Base+0x2ba8>  // b.none
   1d344:	sub	x26, x2, x21
   1d348:	mov	x3, x22
   1d34c:	mov	x2, x26
   1d350:	mov	x1, x21
   1d354:	add	x0, sp, #0x84
   1d358:	str	xzr, [x22]
   1d35c:	bl	a840 <rpl_mbrtowc@plt>
   1d360:	cmp	x26, x0
   1d364:	b.ne	1d394 <printf_parse@@Base+0x2b98>  // b.any
   1d368:	ldr	w0, [sp, #132]
   1d36c:	bl	b610 <towlower@plt>
   1d370:	mov	w1, w0
   1d374:	mov	x2, x22
   1d378:	mov	x0, x21
   1d37c:	bl	b6a0 <wcrtomb@plt>
   1d380:	cmn	x0, #0x1
   1d384:	b.eq	1d394 <printf_parse@@Base+0x2b98>  // b.none
   1d388:	ldrb	w0, [sp, #144]
   1d38c:	mov	w1, #0x1                   	// #1
   1d390:	strb	w1, [x19, x0]
   1d394:	add	x24, x24, #0x1
   1d398:	b	1d298 <printf_parse@@Base+0x2a9c>
   1d39c:	mov	w23, #0x0                   	// #0
   1d3a0:	b	1d28c <printf_parse@@Base+0x2a90>
   1d3a4:	ldrb	w0, [x1, x5]
   1d3a8:	strb	w0, [x2], #1
   1d3ac:	b	1d310 <printf_parse@@Base+0x2b14>
   1d3b0:	cmp	w26, #0x3
   1d3b4:	b.ne	1d428 <printf_parse@@Base+0x2c2c>  // b.any
   1d3b8:	mov	x26, #0x0                   	// #0
   1d3bc:	mov	w3, #0x1                   	// #1
   1d3c0:	ldr	x0, [x28]
   1d3c4:	lsl	x2, x26, #3
   1d3c8:	mov	w27, #0x0                   	// #0
   1d3cc:	ldr	x0, [x0, x1]
   1d3d0:	ldr	x5, [x0, x26]
   1d3d4:	lsr	x0, x5, x27
   1d3d8:	tbz	w0, #0, 1d408 <printf_parse@@Base+0x2c0c>
   1d3dc:	strb	w3, [x19, x2]
   1d3e0:	cbz	w23, 1d408 <printf_parse@@Base+0x2c0c>
   1d3e4:	mov	w0, w2
   1d3e8:	stp	x2, x1, [sp, #96]
   1d3ec:	str	x5, [sp, #112]
   1d3f0:	str	w3, [sp, #124]
   1d3f4:	bl	b550 <tolower@plt>
   1d3f8:	ldp	x2, x1, [sp, #96]
   1d3fc:	ldr	x5, [sp, #112]
   1d400:	ldr	w3, [sp, #124]
   1d404:	strb	w3, [x19, w0, sxtw]
   1d408:	add	w27, w27, #0x1
   1d40c:	add	x2, x2, #0x1
   1d410:	cmp	w27, #0x40
   1d414:	b.ne	1d3d4 <printf_parse@@Base+0x2bd8>  // b.any
   1d418:	add	x26, x26, #0x8
   1d41c:	cmp	x26, #0x20
   1d420:	b.ne	1d3c0 <printf_parse@@Base+0x2bc4>  // b.any
   1d424:	b	1d394 <printf_parse@@Base+0x2b98>
   1d428:	cmp	w26, #0x6
   1d42c:	b.ne	1d550 <printf_parse@@Base+0x2d54>  // b.any
   1d430:	ldr	w0, [x28, #180]
   1d434:	ldr	x26, [x2, x1]
   1d438:	cmp	w0, #0x1
   1d43c:	b.le	1d548 <printf_parse@@Base+0x2d4c>
   1d440:	ldr	x0, [x26, #72]
   1d444:	cbnz	x0, 1d458 <printf_parse@@Base+0x2c5c>
   1d448:	ldrb	w0, [x26, #32]
   1d44c:	tbnz	w0, #0, 1d458 <printf_parse@@Base+0x2c5c>
   1d450:	ldr	x27, [x26, #64]
   1d454:	cbz	x27, 1d538 <printf_parse@@Base+0x2d3c>
   1d458:	mov	w26, #0x1                   	// #1
   1d45c:	strb	wzr, [sp, #136]
   1d460:	mov	x3, x21
   1d464:	mov	x1, x22
   1d468:	mov	x2, #0x1                   	// #1
   1d46c:	mov	x0, #0x0                   	// #0
   1d470:	str	xzr, [x21]
   1d474:	bl	a840 <rpl_mbrtowc@plt>
   1d478:	cmn	x0, #0x2
   1d47c:	b.ne	1d488 <printf_parse@@Base+0x2c8c>  // b.any
   1d480:	ldrb	w0, [sp, #136]
   1d484:	strb	w26, [x19, x0]
   1d488:	ldrb	w0, [sp, #136]
   1d48c:	add	w0, w0, #0x1
   1d490:	and	w0, w0, #0xff
   1d494:	strb	w0, [sp, #136]
   1d498:	cbnz	w0, 1d460 <printf_parse@@Base+0x2c64>
   1d49c:	b	1d394 <printf_parse@@Base+0x2b98>
   1d4a0:	str	xzr, [x22]
   1d4a4:	lsl	x0, x27, #2
   1d4a8:	str	x0, [sp, #96]
   1d4ac:	lsl	x1, x27, #2
   1d4b0:	ldr	x0, [x26]
   1d4b4:	mov	x2, x22
   1d4b8:	ldr	w1, [x0, x1]
   1d4bc:	mov	x0, x21
   1d4c0:	bl	b6a0 <wcrtomb@plt>
   1d4c4:	cmn	x0, #0x1
   1d4c8:	b.eq	1d4ec <printf_parse@@Base+0x2cf0>  // b.none
   1d4cc:	ldrb	w1, [sp, #144]
   1d4d0:	mov	w2, #0x1                   	// #1
   1d4d4:	ldrb	w0, [sp, #144]
   1d4d8:	strb	w2, [x19, x1]
   1d4dc:	cbz	w23, 1d4ec <printf_parse@@Base+0x2cf0>
   1d4e0:	bl	b550 <tolower@plt>
   1d4e4:	mov	w1, #0x1                   	// #1
   1d4e8:	strb	w1, [x19, w0, sxtw]
   1d4ec:	ldr	x0, [x20, #24]
   1d4f0:	tbz	w0, #22, 1d534 <printf_parse@@Base+0x2d38>
   1d4f4:	ldr	w0, [x28, #180]
   1d4f8:	cmp	w0, #0x1
   1d4fc:	b.le	1d534 <printf_parse@@Base+0x2d38>
   1d500:	ldr	x0, [x26]
   1d504:	lsl	x1, x27, #2
   1d508:	ldr	w0, [x0, x1]
   1d50c:	bl	b610 <towlower@plt>
   1d510:	mov	w1, w0
   1d514:	mov	x2, x22
   1d518:	mov	x0, x21
   1d51c:	bl	b6a0 <wcrtomb@plt>
   1d520:	cmn	x0, #0x1
   1d524:	b.eq	1d534 <printf_parse@@Base+0x2d38>  // b.none
   1d528:	ldrb	w0, [sp, #144]
   1d52c:	mov	w1, #0x1                   	// #1
   1d530:	strb	w1, [x19, x0]
   1d534:	add	x27, x27, #0x1
   1d538:	ldr	x0, [x26, #40]
   1d53c:	cmp	x0, x27
   1d540:	b.gt	1d4a0 <printf_parse@@Base+0x2ca4>
   1d544:	b	1d394 <printf_parse@@Base+0x2b98>
   1d548:	mov	x27, #0x0                   	// #0
   1d54c:	b	1d538 <printf_parse@@Base+0x2d3c>
   1d550:	and	w0, w26, #0xfffffffd
   1d554:	cmp	w0, #0x5
   1d558:	b.eq	1d564 <printf_parse@@Base+0x2d68>  // b.none
   1d55c:	cmp	w26, #0x2
   1d560:	b.ne	1d394 <printf_parse@@Base+0x2b98>  // b.any
   1d564:	mov	x0, x19
   1d568:	mov	x2, #0x100                 	// #256
   1d56c:	mov	w1, #0x1                   	// #1
   1d570:	bl	ac10 <memset@plt>
   1d574:	cmp	w26, #0x2
   1d578:	b.ne	1d588 <printf_parse@@Base+0x2d8c>  // b.any
   1d57c:	ldrb	w0, [x20, #56]
   1d580:	orr	w0, w0, #0x1
   1d584:	strb	w0, [x20, #56]
   1d588:	ldp	x19, x20, [sp, #16]
   1d58c:	ldp	x21, x22, [sp, #32]
   1d590:	ldp	x23, x24, [sp, #48]
   1d594:	ldp	x25, x26, [sp, #64]
   1d598:	ldp	x27, x28, [sp, #80]
   1d59c:	ldp	x29, x30, [sp], #400
   1d5a0:	ret
   1d5a4:	mov	x3, x0
   1d5a8:	ldr	w0, [x0, #144]
   1d5ac:	cmp	w0, #0x1
   1d5b0:	b.eq	1d5dc <printf_parse@@Base+0x2de0>  // b.none
   1d5b4:	ldr	x4, [x3, #48]
   1d5b8:	add	x2, x1, #0x1
   1d5bc:	sub	w0, w2, w1
   1d5c0:	cmp	x4, x2
   1d5c4:	b.le	1d5dc <printf_parse@@Base+0x2de0>
   1d5c8:	ldr	x5, [x3, #16]
   1d5cc:	ldr	w5, [x5, x2, lsl #2]
   1d5d0:	add	x2, x2, #0x1
   1d5d4:	cmn	w5, #0x1
   1d5d8:	b.eq	1d5bc <printf_parse@@Base+0x2dc0>  // b.none
   1d5dc:	ret
   1d5e0:	mov	x7, x0
   1d5e4:	stp	x29, x30, [sp, #-48]!
   1d5e8:	mov	x0, x1
   1d5ec:	mov	x29, sp
   1d5f0:	ldr	x9, [x7]
   1d5f4:	lsl	x10, x0, #4
   1d5f8:	stp	x19, x20, [sp, #16]
   1d5fc:	mov	x6, x2
   1d600:	mov	x1, x3
   1d604:	add	x0, x9, x0, lsl #4
   1d608:	stp	x21, x22, [sp, #32]
   1d60c:	ldrb	w8, [x0, #8]
   1d610:	cmp	w8, #0x7
   1d614:	b.ne	1d724 <printf_parse@@Base+0x2f28>  // b.any
   1d618:	ldr	x0, [x2, #8]
   1d61c:	add	x4, x0, x3
   1d620:	ldrb	w0, [x0, x3]
   1d624:	cmp	w0, #0xc1
   1d628:	b.ls	1d768 <printf_parse@@Base+0x2f6c>  // b.plast
   1d62c:	ldr	x5, [x6, #88]
   1d630:	add	x2, x3, #0x1
   1d634:	cmp	x2, x5
   1d638:	b.ge	1d768 <printf_parse@@Base+0x2f6c>  // b.tcont
   1d63c:	ldrb	w2, [x4, #1]
   1d640:	cmp	w0, #0xdf
   1d644:	b.hi	1d670 <printf_parse@@Base+0x2e74>  // b.pmore
   1d648:	sub	w2, w2, #0x80
   1d64c:	and	w2, w2, #0xff
   1d650:	cmp	w2, #0x3f
   1d654:	b.hi	1d768 <printf_parse@@Base+0x2f6c>  // b.pmore
   1d658:	mov	w19, #0x2                   	// #2
   1d65c:	mov	w0, w19
   1d660:	ldp	x19, x20, [sp, #16]
   1d664:	ldp	x21, x22, [sp, #32]
   1d668:	ldp	x29, x30, [sp], #48
   1d66c:	ret
   1d670:	cmp	w0, #0xef
   1d674:	b.hi	1d6c4 <printf_parse@@Base+0x2ec8>  // b.pmore
   1d678:	cmp	w0, #0xe0
   1d67c:	mov	w0, #0x9f                  	// #159
   1d680:	ccmp	w2, w0, #0x2, eq  // eq = none
   1d684:	b.ls	1d768 <printf_parse@@Base+0x2f6c>  // b.plast
   1d688:	mov	w19, #0x3                   	// #3
   1d68c:	add	x1, x1, w19, sxtw
   1d690:	sxtw	x2, w19
   1d694:	cmp	x5, x1
   1d698:	b.lt	1d768 <printf_parse@@Base+0x2f6c>  // b.tstop
   1d69c:	mov	x1, #0x1                   	// #1
   1d6a0:	ldrb	w0, [x4, x1]
   1d6a4:	sub	w0, w0, #0x80
   1d6a8:	and	w0, w0, #0xff
   1d6ac:	cmp	w0, #0x3f
   1d6b0:	b.hi	1d768 <printf_parse@@Base+0x2f6c>  // b.pmore
   1d6b4:	add	x1, x1, #0x1
   1d6b8:	cmp	x2, x1
   1d6bc:	b.gt	1d6a0 <printf_parse@@Base+0x2ea4>
   1d6c0:	b	1d65c <printf_parse@@Base+0x2e60>
   1d6c4:	cmp	w0, #0xf7
   1d6c8:	b.hi	1d6e4 <printf_parse@@Base+0x2ee8>  // b.pmore
   1d6cc:	cmp	w0, #0xf0
   1d6d0:	mov	w0, #0x8f                  	// #143
   1d6d4:	ccmp	w2, w0, #0x2, eq  // eq = none
   1d6d8:	b.ls	1d768 <printf_parse@@Base+0x2f6c>  // b.plast
   1d6dc:	mov	w19, #0x4                   	// #4
   1d6e0:	b	1d68c <printf_parse@@Base+0x2e90>
   1d6e4:	cmp	w0, #0xfb
   1d6e8:	b.hi	1d704 <printf_parse@@Base+0x2f08>  // b.pmore
   1d6ec:	cmp	w0, #0xf8
   1d6f0:	mov	w0, #0x87                  	// #135
   1d6f4:	ccmp	w2, w0, #0x2, eq  // eq = none
   1d6f8:	b.ls	1d768 <printf_parse@@Base+0x2f6c>  // b.plast
   1d6fc:	mov	w19, #0x5                   	// #5
   1d700:	b	1d68c <printf_parse@@Base+0x2e90>
   1d704:	cmp	w0, #0xfd
   1d708:	b.hi	1d768 <printf_parse@@Base+0x2f6c>  // b.pmore
   1d70c:	cmp	w0, #0xfc
   1d710:	mov	w0, #0x83                  	// #131
   1d714:	ccmp	w2, w0, #0x2, eq  // eq = none
   1d718:	b.ls	1d768 <printf_parse@@Base+0x2f6c>  // b.plast
   1d71c:	mov	w19, #0x6                   	// #6
   1d720:	b	1d68c <printf_parse@@Base+0x2e90>
   1d724:	mov	x0, x2
   1d728:	bl	1d5a4 <printf_parse@@Base+0x2da8>
   1d72c:	mov	w19, w0
   1d730:	cmp	w8, #0x5
   1d734:	b.ne	1d770 <printf_parse@@Base+0x2f74>  // b.any
   1d738:	cmp	w0, #0x1
   1d73c:	b.le	1d768 <printf_parse@@Base+0x2f6c>
   1d740:	ldr	x0, [x7, #216]
   1d744:	tbnz	w0, #6, 1d758 <printf_parse@@Base+0x2f5c>
   1d748:	ldr	x2, [x6, #8]
   1d74c:	ldrb	w2, [x2, x1]
   1d750:	cmp	w2, #0xa
   1d754:	b.eq	1d768 <printf_parse@@Base+0x2f6c>  // b.none
   1d758:	tbz	w0, #7, 1d65c <printf_parse@@Base+0x2e60>
   1d75c:	ldr	x0, [x6, #8]
   1d760:	ldrb	w0, [x0, x1]
   1d764:	cbnz	w0, 1d65c <printf_parse@@Base+0x2e60>
   1d768:	mov	w19, #0x0                   	// #0
   1d76c:	b	1d65c <printf_parse@@Base+0x2e60>
   1d770:	cmp	w0, #0x1
   1d774:	b.le	1d768 <printf_parse@@Base+0x2f6c>
   1d778:	cmp	w8, #0x6
   1d77c:	b.ne	1d768 <printf_parse@@Base+0x2f6c>  // b.any
   1d780:	ldr	x20, [x9, x10]
   1d784:	ldr	x0, [x20, #64]
   1d788:	ldr	x3, [x20, #40]
   1d78c:	cbnz	x0, 1d79c <printf_parse@@Base+0x2fa0>
   1d790:	ldr	x0, [x20, #72]
   1d794:	cbnz	x0, 1d79c <printf_parse@@Base+0x2fa0>
   1d798:	cbz	x3, 1d81c <printf_parse@@Base+0x3020>
   1d79c:	mov	x0, x6
   1d7a0:	bl	1b2bc <printf_parse@@Base+0xac0>
   1d7a4:	mov	w21, w0
   1d7a8:	mov	x0, #0x0                   	// #0
   1d7ac:	cmp	x3, x0
   1d7b0:	b.gt	1d7e8 <printf_parse@@Base+0x2fec>
   1d7b4:	mov	x22, #0x0                   	// #0
   1d7b8:	ldr	x0, [x20, #72]
   1d7bc:	cmp	x0, x22
   1d7c0:	b.gt	1d800 <printf_parse@@Base+0x3004>
   1d7c4:	ldr	x2, [x20, #64]
   1d7c8:	mov	x0, #0x0                   	// #0
   1d7cc:	cmp	x2, x0
   1d7d0:	b.gt	1d824 <printf_parse@@Base+0x3028>
   1d7d4:	mov	w0, #0x0                   	// #0
   1d7d8:	ldrb	w1, [x20, #32]
   1d7dc:	tbz	w1, #0, 1d858 <printf_parse@@Base+0x305c>
   1d7e0:	cbz	w0, 1d65c <printf_parse@@Base+0x2e60>
   1d7e4:	b	1d768 <printf_parse@@Base+0x2f6c>
   1d7e8:	ldr	x1, [x20]
   1d7ec:	ldr	w1, [x1, x0, lsl #2]
   1d7f0:	cmp	w1, w21
   1d7f4:	b.eq	1d850 <printf_parse@@Base+0x3054>  // b.none
   1d7f8:	add	x0, x0, #0x1
   1d7fc:	b	1d7ac <printf_parse@@Base+0x2fb0>
   1d800:	ldr	x0, [x20, #24]
   1d804:	ldr	x1, [x0, x22, lsl #3]
   1d808:	mov	w0, w21
   1d80c:	bl	aaa0 <iswctype@plt>
   1d810:	cbnz	w0, 1d850 <printf_parse@@Base+0x3054>
   1d814:	add	x22, x22, #0x1
   1d818:	b	1d7b8 <printf_parse@@Base+0x2fbc>
   1d81c:	mov	w21, #0x0                   	// #0
   1d820:	b	1d7c4 <printf_parse@@Base+0x2fc8>
   1d824:	ldr	x3, [x20, #8]
   1d828:	lsl	x1, x0, #2
   1d82c:	ldr	w3, [x3, x1]
   1d830:	cmp	w21, w3
   1d834:	b.cc	1d848 <printf_parse@@Base+0x304c>  // b.lo, b.ul, b.last
   1d838:	ldr	x3, [x20, #16]
   1d83c:	ldr	w1, [x3, x1]
   1d840:	cmp	w21, w1
   1d844:	b.ls	1d850 <printf_parse@@Base+0x3054>  // b.plast
   1d848:	add	x0, x0, #0x1
   1d84c:	b	1d7cc <printf_parse@@Base+0x2fd0>
   1d850:	mov	w0, w19
   1d854:	b	1d7d8 <printf_parse@@Base+0x2fdc>
   1d858:	mov	w19, w0
   1d85c:	b	1d65c <printf_parse@@Base+0x2e60>
   1d860:	tbnz	x1, #63, 1d884 <printf_parse@@Base+0x3088>
   1d864:	ldr	x2, [x0, #8]
   1d868:	cmp	x2, x1
   1d86c:	b.le	1d884 <printf_parse@@Base+0x3088>
   1d870:	sub	x2, x2, #0x1
   1d874:	str	x2, [x0, #8]
   1d878:	ldr	x2, [x0, #8]
   1d87c:	cmp	x1, x2
   1d880:	b.lt	1d888 <printf_parse@@Base+0x308c>  // b.tstop
   1d884:	ret
   1d888:	add	x1, x1, #0x1
   1d88c:	ldr	x2, [x0, #16]
   1d890:	lsl	x3, x1, #3
   1d894:	ldr	x4, [x2, x3]
   1d898:	add	x2, x2, x3
   1d89c:	stur	x4, [x2, #-8]
   1d8a0:	b	1d878 <printf_parse@@Base+0x307c>
   1d8a4:	ldrb	w2, [x1, #48]
   1d8a8:	cmp	w2, #0x4
   1d8ac:	b.ne	1d8e4 <printf_parse@@Base+0x30e8>  // b.any
   1d8b0:	ldr	x2, [x0, #224]
   1d8b4:	cbz	x2, 1d8dc <printf_parse@@Base+0x30e0>
   1d8b8:	ldrsw	x3, [x1, #40]
   1d8bc:	ldr	x2, [x2, x3, lsl #3]
   1d8c0:	str	x2, [x1, #40]
   1d8c4:	mov	w1, #0x1                   	// #1
   1d8c8:	lsl	w1, w1, w2
   1d8cc:	ldr	x2, [x0, #160]
   1d8d0:	sxtw	x1, w1
   1d8d4:	orr	x1, x2, x1
   1d8d8:	str	x1, [x0, #160]
   1d8dc:	mov	w0, #0x0                   	// #0
   1d8e0:	ret
   1d8e4:	cmp	w2, #0x11
   1d8e8:	b.ne	1d8dc <printf_parse@@Base+0x30e0>  // b.any
   1d8ec:	ldr	x2, [x1, #8]
   1d8f0:	cbz	x2, 1d8dc <printf_parse@@Base+0x30e0>
   1d8f4:	ldrb	w3, [x2, #48]
   1d8f8:	cmp	w3, #0x11
   1d8fc:	b.ne	1d8dc <printf_parse@@Base+0x30e0>  // b.any
   1d900:	ldr	x3, [x2, #40]
   1d904:	ldr	x2, [x2, #8]
   1d908:	str	x2, [x1, #8]
   1d90c:	cbz	x2, 1d914 <printf_parse@@Base+0x3118>
   1d910:	str	x1, [x2]
   1d914:	ldr	x1, [x1, #40]
   1d918:	cmp	x3, #0x3f
   1d91c:	ldr	x2, [x0, #224]
   1d920:	ldr	x1, [x2, x1, lsl #3]
   1d924:	str	x1, [x2, x3, lsl #3]
   1d928:	b.gt	1d8dc <printf_parse@@Base+0x30e0>
   1d92c:	ldr	x2, [x0, #160]
   1d930:	mov	x1, #0x1                   	// #1
   1d934:	lsl	x1, x1, x3
   1d938:	bic	x1, x2, x1
   1d93c:	b	1d8d8 <printf_parse@@Base+0x30dc>
   1d940:	ldrb	w0, [x1, #48]
   1d944:	ldr	x2, [x1, #8]
   1d948:	cmp	w0, #0xb
   1d94c:	b.eq	1d970 <printf_parse@@Base+0x3174>  // b.none
   1d950:	cmp	w0, #0x10
   1d954:	ldr	x0, [x1, #16]
   1d958:	b.eq	1d97c <printf_parse@@Base+0x3180>  // b.none
   1d95c:	cbz	x2, 1d968 <printf_parse@@Base+0x316c>
   1d960:	ldr	x3, [x1, #32]
   1d964:	str	x3, [x2, #32]
   1d968:	cbnz	x0, 1d984 <printf_parse@@Base+0x3188>
   1d96c:	b	1d974 <printf_parse@@Base+0x3178>
   1d970:	str	x1, [x2, #32]
   1d974:	mov	w0, #0x0                   	// #0
   1d978:	ret
   1d97c:	ldr	x3, [x0, #24]
   1d980:	str	x3, [x2, #32]
   1d984:	ldr	x1, [x1, #32]
   1d988:	str	x1, [x0, #32]
   1d98c:	b	1d974 <printf_parse@@Base+0x3178>
   1d990:	stp	x29, x30, [sp, #-48]!
   1d994:	mov	x29, sp
   1d998:	stp	x19, x20, [sp, #16]
   1d99c:	mov	x19, x0
   1d9a0:	ldr	w0, [x0, #128]
   1d9a4:	stp	x21, x22, [sp, #32]
   1d9a8:	mov	x20, x2
   1d9ac:	mov	x21, x1
   1d9b0:	mov	x22, x3
   1d9b4:	cmp	w0, #0xf
   1d9b8:	b.ne	1d9dc <printf_parse@@Base+0x31e0>  // b.any
   1d9bc:	mov	x0, #0x3c8                 	// #968
   1d9c0:	bl	aab0 <malloc@plt>
   1d9c4:	mov	x4, x0
   1d9c8:	cbz	x0, 1da3c <printf_parse@@Base+0x3240>
   1d9cc:	ldr	x0, [x19, #112]
   1d9d0:	str	x0, [x4]
   1d9d4:	str	x4, [x19, #112]
   1d9d8:	str	wzr, [x19, #128]
   1d9dc:	ldr	w4, [x19, #128]
   1d9e0:	ldr	x6, [x19, #112]
   1d9e4:	add	w0, w4, #0x1
   1d9e8:	sbfiz	x4, x4, #6, #32
   1d9ec:	str	w0, [x19, #128]
   1d9f0:	add	x5, x6, x4
   1d9f4:	add	x0, x4, #0x8
   1d9f8:	add	x4, x4, #0x20
   1d9fc:	add	x0, x6, x0
   1da00:	add	x4, x6, x4
   1da04:	stp	xzr, x21, [x5, #8]
   1da08:	str	x20, [x5, #24]
   1da0c:	ldp	x2, x3, [x22]
   1da10:	stp	x2, x3, [x5, #48]
   1da14:	ldrb	w1, [x4, #26]
   1da18:	and	w1, w1, #0xfffffff3
   1da1c:	strb	w1, [x4, #26]
   1da20:	mov	x1, #0xffffffffffffffff    	// #-1
   1da24:	stp	xzr, xzr, [x5, #32]
   1da28:	str	x1, [x5, #64]
   1da2c:	cbz	x21, 1da34 <printf_parse@@Base+0x3238>
   1da30:	str	x0, [x21]
   1da34:	cbz	x20, 1da3c <printf_parse@@Base+0x3240>
   1da38:	str	x0, [x20]
   1da3c:	ldp	x19, x20, [sp, #16]
   1da40:	ldp	x21, x22, [sp, #32]
   1da44:	ldp	x29, x30, [sp], #48
   1da48:	ret
   1da4c:	stp	x29, x30, [sp, #-64]!
   1da50:	mov	x29, sp
   1da54:	stp	x19, x20, [sp, #16]
   1da58:	mov	x19, x0
   1da5c:	ldr	x20, [x0]
   1da60:	stp	x21, x22, [sp, #32]
   1da64:	mov	x22, x1
   1da68:	add	x21, sp, #0x38
   1da6c:	add	x3, x19, #0x28
   1da70:	mov	x0, x22
   1da74:	mov	x2, #0x0                   	// #0
   1da78:	mov	x1, #0x0                   	// #0
   1da7c:	bl	1d990 <printf_parse@@Base+0x3194>
   1da80:	str	x0, [x21]
   1da84:	cbz	x0, 1dac4 <printf_parse@@Base+0x32c8>
   1da88:	str	x20, [x0]
   1da8c:	ldr	x20, [x21]
   1da90:	ldrb	w0, [x20, #50]
   1da94:	orr	w0, w0, #0x4
   1da98:	strb	w0, [x20, #50]
   1da9c:	ldr	x0, [x19, #8]
   1daa0:	cbz	x0, 1dad8 <printf_parse@@Base+0x32dc>
   1daa4:	add	x21, x20, #0x8
   1daa8:	mov	x19, x0
   1daac:	b	1da6c <printf_parse@@Base+0x3270>
   1dab0:	ldr	x1, [x19]
   1dab4:	mov	x0, x19
   1dab8:	ldr	x20, [x20]
   1dabc:	cbnz	x1, 1dad4 <printf_parse@@Base+0x32d8>
   1dac0:	ldr	x0, [sp, #56]
   1dac4:	ldp	x19, x20, [sp, #16]
   1dac8:	ldp	x21, x22, [sp, #32]
   1dacc:	ldp	x29, x30, [sp], #64
   1dad0:	ret
   1dad4:	mov	x19, x1
   1dad8:	ldr	x2, [x19, #16]
   1dadc:	cmp	x2, x0
   1dae0:	b.eq	1dab0 <printf_parse@@Base+0x32b4>  // b.none
   1dae4:	cbz	x2, 1dab0 <printf_parse@@Base+0x32b4>
   1dae8:	add	x21, x20, #0x10
   1daec:	mov	x0, x2
   1daf0:	b	1daa8 <printf_parse@@Base+0x32ac>
   1daf4:	stp	x29, x30, [sp, #-32]!
   1daf8:	mov	x29, sp
   1dafc:	strb	w3, [sp, #24]
   1db00:	add	x3, sp, #0x10
   1db04:	bl	1d990 <printf_parse@@Base+0x3194>
   1db08:	ldp	x29, x30, [sp], #32
   1db0c:	ret
   1db10:	stp	x29, x30, [sp, #-80]!
   1db14:	mov	x29, sp
   1db18:	stp	x23, x24, [sp, #48]
   1db1c:	mov	x24, x0
   1db20:	ldrb	w0, [x1, #56]
   1db24:	stp	x19, x20, [sp, #16]
   1db28:	stp	x21, x22, [sp, #32]
   1db2c:	mov	x22, x2
   1db30:	ldr	x19, [x2, #8]
   1db34:	str	x25, [sp, #64]
   1db38:	ldr	x25, [x1]
   1db3c:	tbz	w0, #4, 1db5c <printf_parse@@Base+0x3360>
   1db40:	cbz	x19, 1db5c <printf_parse@@Base+0x3360>
   1db44:	ldr	x1, [x2, #40]
   1db48:	cmp	x1, #0x3f
   1db4c:	b.gt	1dbe4 <printf_parse@@Base+0x33e8>
   1db50:	ldr	x0, [x25, #160]
   1db54:	lsr	x0, x0, x1
   1db58:	tbz	w0, #0, 1dbe4 <printf_parse@@Base+0x33e8>
   1db5c:	mov	w3, #0x8                   	// #8
   1db60:	mov	x2, #0x0                   	// #0
   1db64:	mov	x1, #0x0                   	// #0
   1db68:	mov	x0, x25
   1db6c:	bl	1daf4 <printf_parse@@Base+0x32f8>
   1db70:	mov	x21, x0
   1db74:	mov	w3, #0x9                   	// #9
   1db78:	mov	x0, x25
   1db7c:	mov	x2, #0x0                   	// #0
   1db80:	mov	x1, #0x0                   	// #0
   1db84:	bl	1daf4 <printf_parse@@Base+0x32f8>
   1db88:	mov	x20, x0
   1db8c:	cbz	x19, 1dc00 <printf_parse@@Base+0x3404>
   1db90:	mov	x2, x0
   1db94:	mov	x1, x19
   1db98:	mov	x0, x25
   1db9c:	mov	w3, #0x10                  	// #16
   1dba0:	bl	1daf4 <printf_parse@@Base+0x32f8>
   1dba4:	mov	x23, x0
   1dba8:	mov	x2, x23
   1dbac:	mov	x1, x21
   1dbb0:	mov	x0, x25
   1dbb4:	mov	w3, #0x10                  	// #16
   1dbb8:	bl	1daf4 <printf_parse@@Base+0x32f8>
   1dbbc:	cmp	x0, #0x0
   1dbc0:	mov	x19, x0
   1dbc4:	ccmp	x23, #0x0, #0x4, ne  // ne = any
   1dbc8:	b.eq	1dbd8 <printf_parse@@Base+0x33dc>  // b.none
   1dbcc:	cmp	x21, #0x0
   1dbd0:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   1dbd4:	b.ne	1dc08 <printf_parse@@Base+0x340c>  // b.any
   1dbd8:	mov	w0, #0xc                   	// #12
   1dbdc:	mov	x19, #0x0                   	// #0
   1dbe0:	str	w0, [x24]
   1dbe4:	mov	x0, x19
   1dbe8:	ldp	x19, x20, [sp, #16]
   1dbec:	ldp	x21, x22, [sp, #32]
   1dbf0:	ldp	x23, x24, [sp, #48]
   1dbf4:	ldr	x25, [sp, #64]
   1dbf8:	ldp	x29, x30, [sp], #80
   1dbfc:	ret
   1dc00:	mov	x23, x0
   1dc04:	b	1dba8 <printf_parse@@Base+0x33ac>
   1dc08:	ldr	x0, [x22, #40]
   1dc0c:	str	x0, [x20, #40]
   1dc10:	str	x0, [x21, #40]
   1dc14:	ldrb	w0, [x22, #50]
   1dc18:	ldrb	w1, [x20, #50]
   1dc1c:	ubfx	x0, x0, #3, #1
   1dc20:	bfi	w1, w0, #3, #1
   1dc24:	strb	w1, [x20, #50]
   1dc28:	ldrb	w1, [x21, #50]
   1dc2c:	bfi	w1, w0, #3, #1
   1dc30:	strb	w1, [x21, #50]
   1dc34:	b	1dbe4 <printf_parse@@Base+0x33e8>
   1dc38:	stp	x29, x30, [sp, #-48]!
   1dc3c:	mov	x29, sp
   1dc40:	ldr	x2, [x1, #8]
   1dc44:	stp	x19, x20, [sp, #16]
   1dc48:	mov	x20, x0
   1dc4c:	str	wzr, [sp, #44]
   1dc50:	mov	x19, x1
   1dc54:	cbz	x2, 1dc7c <printf_parse@@Base+0x3480>
   1dc58:	ldrb	w0, [x2, #48]
   1dc5c:	cmp	w0, #0x11
   1dc60:	b.ne	1dc7c <printf_parse@@Base+0x3480>  // b.any
   1dc64:	mov	x1, x20
   1dc68:	add	x0, sp, #0x2c
   1dc6c:	bl	1db10 <printf_parse@@Base+0x3314>
   1dc70:	str	x0, [x19, #8]
   1dc74:	cbz	x0, 1dc7c <printf_parse@@Base+0x3480>
   1dc78:	str	x19, [x0]
   1dc7c:	ldr	x2, [x19, #16]
   1dc80:	cbz	x2, 1dca8 <printf_parse@@Base+0x34ac>
   1dc84:	ldrb	w0, [x2, #48]
   1dc88:	cmp	w0, #0x11
   1dc8c:	b.ne	1dca8 <printf_parse@@Base+0x34ac>  // b.any
   1dc90:	mov	x1, x20
   1dc94:	add	x0, sp, #0x2c
   1dc98:	bl	1db10 <printf_parse@@Base+0x3314>
   1dc9c:	str	x0, [x19, #16]
   1dca0:	cbz	x0, 1dca8 <printf_parse@@Base+0x34ac>
   1dca4:	str	x19, [x0]
   1dca8:	ldr	w0, [sp, #44]
   1dcac:	ldp	x19, x20, [sp, #16]
   1dcb0:	ldp	x29, x30, [sp], #48
   1dcb4:	ret
   1dcb8:	stp	x29, x30, [sp, #-112]!
   1dcbc:	mov	x29, sp
   1dcc0:	stp	x19, x20, [sp, #16]
   1dcc4:	stp	x21, x22, [sp, #32]
   1dcc8:	mov	x21, x0
   1dccc:	mov	x22, x5
   1dcd0:	mov	x0, #0x20                  	// #32
   1dcd4:	stp	x23, x24, [sp, #48]
   1dcd8:	mov	x24, x1
   1dcdc:	mov	x23, x3
   1dce0:	mov	x1, #0x1                   	// #1
   1dce4:	stp	x25, x26, [sp, #64]
   1dce8:	mov	x25, x2
   1dcec:	and	w26, w4, #0xff
   1dcf0:	str	xzr, [sp, #88]
   1dcf4:	bl	ace0 <calloc@plt>
   1dcf8:	mov	x19, x0
   1dcfc:	cbnz	x0, 1dd24 <printf_parse@@Base+0x3528>
   1dd00:	mov	w0, #0xc                   	// #12
   1dd04:	str	w0, [x22]
   1dd08:	mov	x0, x19
   1dd0c:	ldp	x19, x20, [sp, #16]
   1dd10:	ldp	x21, x22, [sp, #32]
   1dd14:	ldp	x23, x24, [sp, #48]
   1dd18:	ldp	x25, x26, [sp, #64]
   1dd1c:	ldp	x29, x30, [sp], #112
   1dd20:	ret
   1dd24:	mov	x1, #0x1                   	// #1
   1dd28:	mov	x0, #0x50                  	// #80
   1dd2c:	bl	ace0 <calloc@plt>
   1dd30:	mov	x20, x0
   1dd34:	cbnz	x0, 1dd4c <printf_parse@@Base+0x3550>
   1dd38:	mov	x0, x19
   1dd3c:	bl	b050 <free@plt>
   1dd40:	mov	w0, #0xc                   	// #12
   1dd44:	str	w0, [x22]
   1dd48:	b	1dd90 <printf_parse@@Base+0x3594>
   1dd4c:	ldrb	w0, [x0, #32]
   1dd50:	mov	x4, x25
   1dd54:	add	x3, sp, #0x58
   1dd58:	mov	x2, x20
   1dd5c:	mov	x1, x19
   1dd60:	mov	x5, #0x0                   	// #0
   1dd64:	bfxil	w0, w26, #0, #1
   1dd68:	strb	w0, [x20, #32]
   1dd6c:	mov	x0, x24
   1dd70:	bl	1cc0c <printf_parse@@Base+0x2410>
   1dd74:	mov	w24, w0
   1dd78:	cbz	w0, 1dda8 <printf_parse@@Base+0x35ac>
   1dd7c:	mov	x0, x19
   1dd80:	bl	b050 <free@plt>
   1dd84:	mov	x0, x20
   1dd88:	bl	1c4a8 <printf_parse@@Base+0x1cac>
   1dd8c:	str	w24, [x22]
   1dd90:	mov	x19, #0x0                   	// #0
   1dd94:	b	1dd08 <printf_parse@@Base+0x350c>
   1dd98:	add	x23, x23, #0x1
   1dd9c:	and	x1, x1, #0xff
   1dda0:	mov	x0, x19
   1dda4:	bl	1b234 <printf_parse@@Base+0xa38>
   1dda8:	ldrb	w1, [x23]
   1ddac:	cbnz	w1, 1dd98 <printf_parse@@Base+0x359c>
   1ddb0:	cbz	w26, 1ddbc <printf_parse@@Base+0x35c0>
   1ddb4:	mov	x0, x19
   1ddb8:	bl	1b254 <printf_parse@@Base+0xa58>
   1ddbc:	ldr	w0, [x21, #180]
   1ddc0:	cmp	w0, #0x1
   1ddc4:	b.le	1ddd4 <printf_parse@@Base+0x35d8>
   1ddc8:	ldr	x1, [x21, #120]
   1ddcc:	mov	x0, x19
   1ddd0:	bl	1b298 <printf_parse@@Base+0xa9c>
   1ddd4:	mov	w0, #0x3                   	// #3
   1ddd8:	add	x24, sp, #0x60
   1dddc:	mov	x3, x24
   1dde0:	mov	x2, #0x0                   	// #0
   1dde4:	mov	x1, #0x0                   	// #0
   1dde8:	str	x19, [sp, #96]
   1ddec:	strb	w0, [sp, #104]
   1ddf0:	mov	x0, x21
   1ddf4:	bl	1d990 <printf_parse@@Base+0x3194>
   1ddf8:	mov	x23, x0
   1ddfc:	cbz	x0, 1de68 <printf_parse@@Base+0x366c>
   1de00:	ldr	w0, [x21, #180]
   1de04:	cmp	w0, #0x1
   1de08:	b.le	1de58 <printf_parse@@Base+0x365c>
   1de0c:	mov	w0, #0x6                   	// #6
   1de10:	strb	w0, [sp, #104]
   1de14:	ldrb	w0, [x21, #176]
   1de18:	mov	x2, #0x0                   	// #0
   1de1c:	mov	x3, x24
   1de20:	mov	x1, #0x0                   	// #0
   1de24:	orr	w0, w0, #0x2
   1de28:	strb	w0, [x21, #176]
   1de2c:	mov	x0, x21
   1de30:	str	x20, [sp, #96]
   1de34:	bl	1d990 <printf_parse@@Base+0x3194>
   1de38:	mov	x2, x0
   1de3c:	cbz	x0, 1de68 <printf_parse@@Base+0x366c>
   1de40:	mov	x1, x23
   1de44:	mov	x0, x21
   1de48:	mov	w3, #0xa                   	// #10
   1de4c:	bl	1daf4 <printf_parse@@Base+0x32f8>
   1de50:	mov	x19, x0
   1de54:	b	1dd08 <printf_parse@@Base+0x350c>
   1de58:	mov	x0, x20
   1de5c:	mov	x19, x23
   1de60:	bl	1c4a8 <printf_parse@@Base+0x1cac>
   1de64:	b	1dd08 <printf_parse@@Base+0x350c>
   1de68:	mov	x0, x19
   1de6c:	bl	b050 <free@plt>
   1de70:	mov	x0, x20
   1de74:	bl	1c4a8 <printf_parse@@Base+0x1cac>
   1de78:	b	1dd40 <printf_parse@@Base+0x3544>
   1de7c:	stp	x29, x30, [sp, #-32]!
   1de80:	mov	x29, sp
   1de84:	ldr	x2, [x0]
   1de88:	stp	x19, x20, [sp, #16]
   1de8c:	cbnz	x2, 1dea8 <printf_parse@@Base+0x36ac>
   1de90:	bl	1bac4 <printf_parse@@Base+0x12c8>
   1de94:	cmp	w0, #0x0
   1de98:	cset	w0, eq  // eq = none
   1de9c:	ldp	x19, x20, [sp, #16]
   1dea0:	ldp	x29, x30, [sp], #32
   1dea4:	ret
   1dea8:	mov	x19, x0
   1deac:	mov	x20, x1
   1deb0:	ldp	x1, x0, [x0, #8]
   1deb4:	cbnz	x1, 1ded0 <printf_parse@@Base+0x36d4>
   1deb8:	str	x20, [x0]
   1debc:	ldr	x0, [x19, #8]
   1dec0:	add	x0, x0, #0x1
   1dec4:	str	x0, [x19, #8]
   1dec8:	mov	w0, #0x1                   	// #1
   1decc:	b	1de9c <printf_parse@@Base+0x36a0>
   1ded0:	cmp	x2, x1
   1ded4:	b.ne	1def0 <printf_parse@@Base+0x36f4>  // b.any
   1ded8:	lsl	x1, x2, #1
   1dedc:	str	x1, [x19]
   1dee0:	lsl	x1, x2, #4
   1dee4:	bl	ad60 <realloc@plt>
   1dee8:	cbz	x0, 1df50 <printf_parse@@Base+0x3754>
   1deec:	str	x0, [x19, #16]
   1def0:	ldp	x0, x2, [x19, #8]
   1def4:	ldr	x1, [x2]
   1def8:	cmp	x20, x1
   1defc:	b.lt	1df44 <printf_parse@@Base+0x3748>  // b.tstop
   1df00:	sub	x3, x2, #0x8
   1df04:	ldr	x1, [x3, x0, lsl #3]
   1df08:	cmp	x20, x1
   1df0c:	b.ge	1df3c <printf_parse@@Base+0x3740>  // b.tcont
   1df10:	str	x1, [x2, x0, lsl #3]
   1df14:	sub	x0, x0, #0x1
   1df18:	b	1df04 <printf_parse@@Base+0x3708>
   1df1c:	ldr	x4, [x3, x1, lsl #3]
   1df20:	str	x4, [x2, x1, lsl #3]
   1df24:	sub	x1, x1, #0x1
   1df28:	cmp	x1, #0x0
   1df2c:	b.gt	1df1c <printf_parse@@Base+0x3720>
   1df30:	cmp	x0, #0x0
   1df34:	csel	x1, x0, xzr, ge  // ge = tcont
   1df38:	sub	x0, x0, x1
   1df3c:	str	x20, [x2, x0, lsl #3]
   1df40:	b	1debc <printf_parse@@Base+0x36c0>
   1df44:	mov	x1, x0
   1df48:	sub	x3, x2, #0x8
   1df4c:	b	1df28 <printf_parse@@Base+0x372c>
   1df50:	mov	w0, #0x0                   	// #0
   1df54:	b	1de9c <printf_parse@@Base+0x36a0>
   1df58:	stp	x29, x30, [sp, #-64]!
   1df5c:	mov	x29, sp
   1df60:	stp	x19, x20, [sp, #16]
   1df64:	mov	x20, x1
   1df68:	mov	x19, x2
   1df6c:	stp	x21, x22, [sp, #32]
   1df70:	mov	x21, x0
   1df74:	mov	w22, w4
   1df78:	stp	x23, x24, [sp, #48]
   1df7c:	mov	x23, x3
   1df80:	mov	x24, #0x18                  	// #24
   1df84:	mov	x1, x19
   1df88:	mov	x0, x20
   1df8c:	bl	1b398 <printf_parse@@Base+0xb9c>
   1df90:	cbz	x0, 1df9c <printf_parse@@Base+0x37a0>
   1df94:	mov	w0, #0x0                   	// #0
   1df98:	b	1dfe0 <printf_parse@@Base+0x37e4>
   1df9c:	ldr	x0, [x21]
   1dfa0:	lsl	x1, x19, #4
   1dfa4:	add	x2, x0, x19, lsl #4
   1dfa8:	ldrb	w2, [x2, #8]
   1dfac:	cmp	w2, w22
   1dfb0:	b.ne	1dff4 <printf_parse@@Base+0x37f8>  // b.any
   1dfb4:	ldr	x0, [x0, x1]
   1dfb8:	cmp	x0, x23
   1dfbc:	b.ne	1dff4 <printf_parse@@Base+0x37f8>  // b.any
   1dfc0:	cmp	w22, #0x9
   1dfc4:	b.ne	1df94 <printf_parse@@Base+0x3798>  // b.any
   1dfc8:	mov	x1, x19
   1dfcc:	mov	x0, x20
   1dfd0:	bl	1de7c <printf_parse@@Base+0x3680>
   1dfd4:	tst	w0, #0xff
   1dfd8:	b.ne	1df94 <printf_parse@@Base+0x3798>  // b.any
   1dfdc:	mov	w0, #0xc                   	// #12
   1dfe0:	ldp	x19, x20, [sp, #16]
   1dfe4:	ldp	x21, x22, [sp, #32]
   1dfe8:	ldp	x23, x24, [sp, #48]
   1dfec:	ldp	x29, x30, [sp], #64
   1dff0:	ret
   1dff4:	mov	x1, x19
   1dff8:	mov	x0, x20
   1dffc:	bl	1de7c <printf_parse@@Base+0x3680>
   1e000:	tst	w0, #0xff
   1e004:	b.eq	1dfdc <printf_parse@@Base+0x37e0>  // b.none
   1e008:	ldr	x0, [x21, #40]
   1e00c:	mul	x19, x19, x24
   1e010:	add	x0, x0, x19
   1e014:	ldr	x1, [x0, #8]
   1e018:	cbz	x1, 1df94 <printf_parse@@Base+0x3798>
   1e01c:	cmp	x1, #0x2
   1e020:	b.eq	1e038 <printf_parse@@Base+0x383c>  // b.none
   1e024:	ldr	x1, [x21, #40]
   1e028:	add	x19, x1, x19
   1e02c:	ldr	x0, [x19, #16]
   1e030:	ldr	x19, [x0]
   1e034:	b	1df84 <printf_parse@@Base+0x3788>
   1e038:	ldr	x0, [x0, #16]
   1e03c:	mov	w4, w22
   1e040:	mov	x3, x23
   1e044:	mov	x1, x20
   1e048:	ldr	x2, [x0, #8]
   1e04c:	mov	x0, x21
   1e050:	bl	1df58 <printf_parse@@Base+0x375c>
   1e054:	cbz	w0, 1e024 <printf_parse@@Base+0x3828>
   1e058:	b	1dfe0 <printf_parse@@Base+0x37e4>
   1e05c:	stp	x29, x30, [sp, #-96]!
   1e060:	mov	x29, sp
   1e064:	stp	x19, x20, [sp, #16]
   1e068:	mov	x20, x0
   1e06c:	mov	x19, x2
   1e070:	stp	x21, x22, [sp, #32]
   1e074:	mov	w22, w4
   1e078:	stp	x23, x24, [sp, #48]
   1e07c:	mov	x24, x3
   1e080:	stp	x25, x26, [sp, #64]
   1e084:	mov	x25, #0x18                  	// #24
   1e088:	str	x27, [sp, #80]
   1e08c:	ldr	x3, [x20]
   1e090:	mov	x27, x19
   1e094:	ldr	x0, [x20, #40]
   1e098:	add	x2, x3, x1, lsl #4
   1e09c:	ldrb	w4, [x2, #8]
   1e0a0:	cmp	w4, #0x4
   1e0a4:	b.ne	1e128 <printf_parse@@Base+0x392c>  // b.any
   1e0a8:	mul	x26, x19, x25
   1e0ac:	lsl	x21, x1, #3
   1e0b0:	ldr	x1, [x20, #24]
   1e0b4:	add	x0, x0, x26
   1e0b8:	mov	w2, w22
   1e0bc:	ldr	x23, [x1, x21]
   1e0c0:	str	xzr, [x0, #8]
   1e0c4:	mov	x0, x20
   1e0c8:	mov	x1, x23
   1e0cc:	bl	1c6dc <printf_parse@@Base+0x1ee0>
   1e0d0:	mov	x19, x0
   1e0d4:	cmn	x0, #0x1
   1e0d8:	b.ne	1e0fc <printf_parse@@Base+0x3900>  // b.any
   1e0dc:	mov	w0, #0xc                   	// #12
   1e0e0:	ldp	x19, x20, [sp, #16]
   1e0e4:	ldp	x21, x22, [sp, #32]
   1e0e8:	ldp	x23, x24, [sp, #48]
   1e0ec:	ldp	x25, x26, [sp, #64]
   1e0f0:	ldr	x27, [sp, #80]
   1e0f4:	ldp	x29, x30, [sp], #96
   1e0f8:	ret
   1e0fc:	ldr	x0, [x20, #24]
   1e100:	ldr	x1, [x0, x21]
   1e104:	str	x1, [x0, x27, lsl #3]
   1e108:	ldr	x0, [x20, #40]
   1e10c:	mov	x1, x19
   1e110:	add	x0, x0, x26
   1e114:	bl	1de7c <printf_parse@@Base+0x3680>
   1e118:	tst	w0, #0xff
   1e11c:	b.eq	1e0dc <printf_parse@@Base+0x38e0>  // b.none
   1e120:	mov	x1, x23
   1e124:	b	1e08c <printf_parse@@Base+0x3890>
   1e128:	mul	x26, x1, x25
   1e12c:	add	x5, x0, x26
   1e130:	ldr	x4, [x5, #8]
   1e134:	cbnz	x4, 1e14c <printf_parse@@Base+0x3950>
   1e138:	ldr	x0, [x20, #24]
   1e13c:	ldr	x1, [x0, x1, lsl #3]
   1e140:	str	x1, [x0, x19, lsl #3]
   1e144:	mov	w0, #0x0                   	// #0
   1e148:	b	1e0e0 <printf_parse@@Base+0x38e4>
   1e14c:	mul	x21, x19, x25
   1e150:	cmp	x4, #0x1
   1e154:	ldr	x5, [x5, #16]
   1e158:	add	x0, x0, x21
   1e15c:	ldr	x23, [x5]
   1e160:	str	xzr, [x0, #8]
   1e164:	b.ne	1e1c8 <printf_parse@@Base+0x39cc>  // b.any
   1e168:	cmp	x1, x24
   1e16c:	ccmp	x1, x19, #0x4, eq  // eq = none
   1e170:	b.eq	1e190 <printf_parse@@Base+0x3994>  // b.none
   1e174:	mov	x1, x23
   1e178:	bl	1de7c <printf_parse@@Base+0x3680>
   1e17c:	mov	w1, w0
   1e180:	mov	w0, #0x0                   	// #0
   1e184:	tst	w1, #0xff
   1e188:	b.ne	1e0e0 <printf_parse@@Base+0x38e4>  // b.any
   1e18c:	b	1e0dc <printf_parse@@Base+0x38e0>
   1e190:	ldr	w0, [x2, #8]
   1e194:	ubfx	x0, x0, #8, #10
   1e198:	orr	w22, w22, w0
   1e19c:	mov	w2, w22
   1e1a0:	mov	x1, x23
   1e1a4:	mov	x0, x20
   1e1a8:	bl	1c6dc <printf_parse@@Base+0x1ee0>
   1e1ac:	mov	x19, x0
   1e1b0:	cmn	x0, #0x1
   1e1b4:	b.eq	1e0dc <printf_parse@@Base+0x38e0>  // b.none
   1e1b8:	mov	x1, x0
   1e1bc:	ldr	x0, [x20, #40]
   1e1c0:	add	x0, x0, x21
   1e1c4:	b	1e114 <printf_parse@@Base+0x3918>
   1e1c8:	ldr	x1, [x20, #16]
   1e1cc:	sub	x1, x1, #0x1
   1e1d0:	add	x2, x3, x1, lsl #4
   1e1d4:	ldrb	w4, [x2, #10]
   1e1d8:	tbz	w4, #2, 1e1e4 <printf_parse@@Base+0x39e8>
   1e1dc:	cmp	x1, #0x0
   1e1e0:	b.gt	1e248 <printf_parse@@Base+0x3a4c>
   1e1e4:	mov	w2, w22
   1e1e8:	mov	x1, x23
   1e1ec:	mov	x0, x20
   1e1f0:	bl	1c6dc <printf_parse@@Base+0x1ee0>
   1e1f4:	mov	x19, x0
   1e1f8:	cmn	x0, #0x1
   1e1fc:	b.eq	1e0dc <printf_parse@@Base+0x38e0>  // b.none
   1e200:	ldr	x0, [x20, #40]
   1e204:	mov	x1, x19
   1e208:	add	x0, x0, x21
   1e20c:	bl	1de7c <printf_parse@@Base+0x3680>
   1e210:	tst	w0, #0xff
   1e214:	b.eq	1e0dc <printf_parse@@Base+0x38e0>  // b.none
   1e218:	mov	w4, w22
   1e21c:	mov	x3, x24
   1e220:	mov	x2, x19
   1e224:	mov	x1, x23
   1e228:	mov	x0, x20
   1e22c:	bl	1e05c <printf_parse@@Base+0x3860>
   1e230:	cbnz	w0, 1e0e0 <printf_parse@@Base+0x38e4>
   1e234:	ldr	x0, [x20, #40]
   1e238:	add	x26, x0, x26
   1e23c:	ldr	x0, [x26, #16]
   1e240:	ldr	x23, [x0, #8]
   1e244:	b	1e19c <printf_parse@@Base+0x39a0>
   1e248:	ldr	x4, [x20, #32]
   1e24c:	ldr	x4, [x4, x1, lsl #3]
   1e250:	cmp	x4, x23
   1e254:	b.ne	1e1cc <printf_parse@@Base+0x39d0>  // b.any
   1e258:	ldr	w2, [x2, #8]
   1e25c:	ubfx	x2, x2, #8, #10
   1e260:	cmp	w22, w2
   1e264:	b.ne	1e1cc <printf_parse@@Base+0x39d0>  // b.any
   1e268:	bl	1de7c <printf_parse@@Base+0x3680>
   1e26c:	tst	w0, #0xff
   1e270:	b.ne	1e234 <printf_parse@@Base+0x3a38>  // b.any
   1e274:	b	1e0dc <printf_parse@@Base+0x38e0>
   1e278:	stp	x29, x30, [sp, #-64]!
   1e27c:	mov	x29, sp
   1e280:	stp	x23, x24, [sp, #48]
   1e284:	mov	x24, x1
   1e288:	stp	x19, x20, [sp, #16]
   1e28c:	mov	x20, x1
   1e290:	mov	x19, x2
   1e294:	ldr	x1, [x1, #16]
   1e298:	stp	x21, x22, [sp, #32]
   1e29c:	mov	x22, x0
   1e2a0:	str	x2, [x24], #32
   1e2a4:	mov	x0, x24
   1e2a8:	bl	1bb10 <printf_parse@@Base+0x1314>
   1e2ac:	cbz	w0, 1e364 <printf_parse@@Base+0x3b68>
   1e2b0:	mov	w21, #0xc                   	// #12
   1e2b4:	mov	w0, w21
   1e2b8:	ldp	x19, x20, [sp, #16]
   1e2bc:	ldp	x21, x22, [sp, #32]
   1e2c0:	ldp	x23, x24, [sp, #48]
   1e2c4:	ldp	x29, x30, [sp], #64
   1e2c8:	ret
   1e2cc:	ldr	x0, [x20, #24]
   1e2d0:	ldr	x1, [x0, x23, lsl #3]
   1e2d4:	ldr	x0, [x22]
   1e2d8:	add	x0, x0, x1, lsl #4
   1e2dc:	ldrb	w0, [x0, #8]
   1e2e0:	tbz	w0, #3, 1e350 <printf_parse@@Base+0x3b54>
   1e2e4:	add	x23, x23, #0x1
   1e2e8:	ldr	x0, [x20, #16]
   1e2ec:	cmp	x0, x23
   1e2f0:	b.gt	1e2cc <printf_parse@@Base+0x3ad0>
   1e2f4:	ldr	x2, [x22, #136]
   1e2f8:	ldr	x23, [x22, #64]
   1e2fc:	and	x19, x19, x2
   1e300:	mov	x2, #0x18                  	// #24
   1e304:	mul	x19, x19, x2
   1e308:	add	x22, x23, x19
   1e30c:	ldr	x1, [x23, x19]
   1e310:	ldr	x0, [x22, #8]
   1e314:	cmp	x0, x1
   1e318:	b.gt	1e338 <printf_parse@@Base+0x3b3c>
   1e31c:	ldr	x0, [x22, #16]
   1e320:	add	x1, x1, #0x1
   1e324:	lsl	x24, x1, #1
   1e328:	lsl	x1, x1, #4
   1e32c:	bl	ad60 <realloc@plt>
   1e330:	cbz	x0, 1e2b0 <printf_parse@@Base+0x3ab4>
   1e334:	stp	x24, x0, [x22, #8]
   1e338:	ldr	x0, [x23, x19]
   1e33c:	ldr	x1, [x22, #16]
   1e340:	add	x2, x0, #0x1
   1e344:	str	x2, [x23, x19]
   1e348:	str	x20, [x1, x0, lsl #3]
   1e34c:	b	1e2b4 <printf_parse@@Base+0x3ab8>
   1e350:	mov	x0, x24
   1e354:	bl	1ba4c <printf_parse@@Base+0x1250>
   1e358:	tst	w0, #0xff
   1e35c:	b.ne	1e2e4 <printf_parse@@Base+0x3ae8>  // b.any
   1e360:	b	1e2b0 <printf_parse@@Base+0x3ab4>
   1e364:	mov	w21, w0
   1e368:	mov	x23, #0x0                   	// #0
   1e36c:	b	1e2e8 <printf_parse@@Base+0x3aec>
   1e370:	cbnz	x1, 1e37c <printf_parse@@Base+0x3b80>
   1e374:	mov	w0, #0x0                   	// #0
   1e378:	ret
   1e37c:	stp	x29, x30, [sp, #-48]!
   1e380:	mov	x29, sp
   1e384:	stp	x19, x20, [sp, #16]
   1e388:	mov	x20, x1
   1e38c:	ldr	x1, [x1, #8]
   1e390:	str	x21, [sp, #32]
   1e394:	cbz	x1, 1e4a8 <printf_parse@@Base+0x3cac>
   1e398:	mov	x19, x0
   1e39c:	ldp	x2, x0, [x0]
   1e3a0:	add	x0, x0, x1, lsl #1
   1e3a4:	cmp	x2, x0
   1e3a8:	b.ge	1e3cc <printf_parse@@Base+0x3bd0>  // b.tcont
   1e3ac:	ldr	x0, [x19, #16]
   1e3b0:	add	x1, x1, x2
   1e3b4:	lsl	x21, x1, #1
   1e3b8:	lsl	x1, x1, #4
   1e3bc:	bl	ad60 <realloc@plt>
   1e3c0:	cbz	x0, 1e4d4 <printf_parse@@Base+0x3cd8>
   1e3c4:	str	x21, [x19]
   1e3c8:	str	x0, [x19, #16]
   1e3cc:	ldr	x0, [x19, #8]
   1e3d0:	ldr	x2, [x20, #8]
   1e3d4:	cbnz	x0, 1e3f4 <printf_parse@@Base+0x3bf8>
   1e3d8:	ldr	x1, [x20, #16]
   1e3dc:	str	x2, [x19, #8]
   1e3e0:	ldr	x0, [x19, #16]
   1e3e4:	ldr	x2, [x20, #8]
   1e3e8:	lsl	x2, x2, #3
   1e3ec:	bl	a6f0 <memcpy@plt>
   1e3f0:	b	1e4a8 <printf_parse@@Base+0x3cac>
   1e3f4:	add	x21, x0, x2, lsl #1
   1e3f8:	sub	x2, x2, #0x1
   1e3fc:	sub	x0, x0, #0x1
   1e400:	b	1e42c <printf_parse@@Base+0x3c30>
   1e404:	ldr	x1, [x19, #16]
   1e408:	ldr	x3, [x20, #16]
   1e40c:	ldr	x4, [x1, x0, lsl #3]
   1e410:	ldr	x3, [x3, x2, lsl #3]
   1e414:	cmp	x4, x3
   1e418:	b.eq	1e3f8 <printf_parse@@Base+0x3bfc>  // b.none
   1e41c:	b.ge	1e3fc <printf_parse@@Base+0x3c00>  // b.tcont
   1e420:	sub	x21, x21, #0x1
   1e424:	sub	x2, x2, #0x1
   1e428:	str	x3, [x1, x21, lsl #3]
   1e42c:	cmp	x2, #0x0
   1e430:	ccmp	x0, #0x0, #0x1, ge  // ge = tcont
   1e434:	b.ge	1e404 <printf_parse@@Base+0x3c08>  // b.tcont
   1e438:	tbnz	x2, #63, 1e458 <printf_parse@@Base+0x3c5c>
   1e43c:	ldr	x0, [x19, #16]
   1e440:	add	x2, x2, #0x1
   1e444:	ldr	x1, [x20, #16]
   1e448:	sub	x21, x21, x2
   1e44c:	lsl	x2, x2, #3
   1e450:	add	x0, x0, x21, lsl #3
   1e454:	bl	a6f0 <memcpy@plt>
   1e458:	ldr	x0, [x19, #8]
   1e45c:	ldr	x2, [x20, #8]
   1e460:	add	x2, x0, x2, lsl #1
   1e464:	sub	x4, x2, #0x1
   1e468:	subs	x2, x2, x21
   1e46c:	b.eq	1e4a8 <printf_parse@@Base+0x3cac>  // b.none
   1e470:	sub	x1, x0, #0x1
   1e474:	add	x0, x0, x2
   1e478:	str	x0, [x19, #8]
   1e47c:	ldr	x0, [x19, #16]
   1e480:	add	x3, x1, x2
   1e484:	ldr	x6, [x0, x4, lsl #3]
   1e488:	lsl	x3, x3, #3
   1e48c:	ldr	x5, [x0, x1, lsl #3]
   1e490:	cmp	x6, x5
   1e494:	b.le	1e4bc <printf_parse@@Base+0x3cc0>
   1e498:	str	x6, [x0, x3]
   1e49c:	sub	x4, x4, #0x1
   1e4a0:	subs	x2, x2, #0x1
   1e4a4:	b.ne	1e480 <printf_parse@@Base+0x3c84>  // b.any
   1e4a8:	mov	w0, #0x0                   	// #0
   1e4ac:	ldp	x19, x20, [sp, #16]
   1e4b0:	ldr	x21, [sp, #32]
   1e4b4:	ldp	x29, x30, [sp], #48
   1e4b8:	ret
   1e4bc:	str	x5, [x0, x3]
   1e4c0:	subs	x1, x1, #0x1
   1e4c4:	b.pl	1e480 <printf_parse@@Base+0x3c84>  // b.nfrst
   1e4c8:	lsl	x2, x2, #3
   1e4cc:	add	x1, x0, x21, lsl #3
   1e4d0:	b	1e3ec <printf_parse@@Base+0x3bf0>
   1e4d4:	mov	w0, #0xc                   	// #12
   1e4d8:	b	1e4ac <printf_parse@@Base+0x3cb0>
   1e4dc:	stp	x29, x30, [sp, #-160]!
   1e4e0:	mov	x29, sp
   1e4e4:	stp	x21, x22, [sp, #32]
   1e4e8:	mov	x21, #0x18                  	// #24
   1e4ec:	add	x22, sp, #0x70
   1e4f0:	stp	x23, x24, [sp, #48]
   1e4f4:	mov	x23, x0
   1e4f8:	and	w0, w3, #0xff
   1e4fc:	str	w0, [sp, #108]
   1e500:	mul	x21, x2, x21
   1e504:	ldr	x0, [x1, #40]
   1e508:	stp	x19, x20, [sp, #16]
   1e50c:	mov	x19, x1
   1e510:	add	x0, x0, x21
   1e514:	stp	x25, x26, [sp, #64]
   1e518:	stp	x27, x28, [sp, #80]
   1e51c:	mov	x28, x2
   1e520:	ldr	x1, [x0, #8]
   1e524:	mov	x0, x22
   1e528:	add	x1, x1, #0x1
   1e52c:	bl	1bb10 <printf_parse@@Base+0x1314>
   1e530:	mov	w20, w0
   1e534:	cbnz	w0, 1e5b4 <printf_parse@@Base+0x3db8>
   1e538:	ldr	x0, [x19, #48]
   1e53c:	mov	x1, #0xffffffffffffffff    	// #-1
   1e540:	lsl	x24, x28, #4
   1e544:	add	x0, x0, x21
   1e548:	str	x1, [x0, #8]
   1e54c:	ldr	x1, [x19]
   1e550:	add	x0, x1, x28, lsl #4
   1e554:	ldr	w4, [x0, #8]
   1e558:	tst	w4, #0x3ff00
   1e55c:	b.ne	1e5d4 <printf_parse@@Base+0x3dd8>  // b.any
   1e560:	ldr	x0, [x19]
   1e564:	add	x0, x0, x24
   1e568:	mov	w24, #0x0                   	// #0
   1e56c:	ldrb	w0, [x0, #8]
   1e570:	tbnz	w0, #3, 1e6b8 <printf_parse@@Base+0x3ebc>
   1e574:	mov	x1, x28
   1e578:	mov	x0, x22
   1e57c:	bl	1de7c <printf_parse@@Base+0x3680>
   1e580:	tst	w0, #0xff
   1e584:	b.eq	1e6d8 <printf_parse@@Base+0x3edc>  // b.none
   1e588:	ldr	x0, [x19, #48]
   1e58c:	add	x21, x0, x21
   1e590:	ldr	w0, [sp, #108]
   1e594:	eor	w26, w0, #0x1
   1e598:	tst	w24, w26
   1e59c:	b.eq	1e6c4 <printf_parse@@Base+0x3ec8>  // b.none
   1e5a0:	str	xzr, [x21, #8]
   1e5a4:	ldp	x0, x1, [sp, #112]
   1e5a8:	stp	x0, x1, [x23]
   1e5ac:	ldr	x0, [sp, #128]
   1e5b0:	str	x0, [x23, #16]
   1e5b4:	mov	w0, w20
   1e5b8:	ldp	x19, x20, [sp, #16]
   1e5bc:	ldp	x21, x22, [sp, #32]
   1e5c0:	ldp	x23, x24, [sp, #48]
   1e5c4:	ldp	x25, x26, [sp, #64]
   1e5c8:	ldp	x27, x28, [sp, #80]
   1e5cc:	ldp	x29, x30, [sp], #160
   1e5d0:	ret
   1e5d4:	ldr	x0, [x19, #40]
   1e5d8:	add	x0, x0, x21
   1e5dc:	ldr	x2, [x0, #8]
   1e5e0:	cbz	x2, 1e560 <printf_parse@@Base+0x3d64>
   1e5e4:	ldr	x0, [x0, #16]
   1e5e8:	ldr	x0, [x0]
   1e5ec:	add	x0, x1, x0, lsl #4
   1e5f0:	ldrb	w0, [x0, #10]
   1e5f4:	tbnz	w0, #2, 1e560 <printf_parse@@Base+0x3d64>
   1e5f8:	ubfx	x4, x4, #8, #10
   1e5fc:	mov	x3, x28
   1e600:	mov	x2, x28
   1e604:	mov	x1, x28
   1e608:	mov	x0, x19
   1e60c:	bl	1e05c <printf_parse@@Base+0x3860>
   1e610:	cbz	w0, 1e560 <printf_parse@@Base+0x3d64>
   1e614:	mov	w20, w0
   1e618:	b	1e5b4 <printf_parse@@Base+0x3db8>
   1e61c:	ldr	x0, [x0, #16]
   1e620:	ldr	x2, [x0, x25, lsl #3]
   1e624:	mov	x0, #0x18                  	// #24
   1e628:	mul	x27, x2, x0
   1e62c:	ldr	x0, [x19, #48]
   1e630:	add	x0, x0, x27
   1e634:	ldr	x1, [x0, #8]
   1e638:	cmn	x1, #0x1
   1e63c:	b.ne	1e660 <printf_parse@@Base+0x3e64>  // b.any
   1e640:	mov	w24, #0x1                   	// #1
   1e644:	add	x25, x25, #0x1
   1e648:	ldr	x0, [x19, #40]
   1e64c:	add	x0, x0, x21
   1e650:	ldr	x1, [x0, #8]
   1e654:	cmp	x1, x25
   1e658:	b.gt	1e61c <printf_parse@@Base+0x3e20>
   1e65c:	b	1e574 <printf_parse@@Base+0x3d78>
   1e660:	cbnz	x1, 1e6a4 <printf_parse@@Base+0x3ea8>
   1e664:	mov	x1, x19
   1e668:	mov	x0, x26
   1e66c:	mov	w3, #0x0                   	// #0
   1e670:	bl	1e4dc <printf_parse@@Base+0x3ce0>
   1e674:	cbnz	w0, 1e614 <printf_parse@@Base+0x3e18>
   1e678:	mov	x1, x26
   1e67c:	mov	x0, x22
   1e680:	bl	1e370 <printf_parse@@Base+0x3b74>
   1e684:	cbnz	w0, 1e614 <printf_parse@@Base+0x3e18>
   1e688:	ldr	x0, [x19, #48]
   1e68c:	add	x27, x0, x27
   1e690:	ldr	x0, [x27, #8]
   1e694:	cbnz	x0, 1e644 <printf_parse@@Base+0x3e48>
   1e698:	ldr	x0, [sp, #152]
   1e69c:	bl	b050 <free@plt>
   1e6a0:	b	1e640 <printf_parse@@Base+0x3e44>
   1e6a4:	ldp	x2, x3, [x0]
   1e6a8:	stp	x2, x3, [x26]
   1e6ac:	ldr	x0, [x0, #16]
   1e6b0:	str	x0, [x26, #16]
   1e6b4:	b	1e678 <printf_parse@@Base+0x3e7c>
   1e6b8:	add	x26, sp, #0x88
   1e6bc:	mov	x25, #0x0                   	// #0
   1e6c0:	b	1e648 <printf_parse@@Base+0x3e4c>
   1e6c4:	ldp	x0, x1, [x22]
   1e6c8:	stp	x0, x1, [x21]
   1e6cc:	ldr	x0, [x22, #16]
   1e6d0:	str	x0, [x21, #16]
   1e6d4:	b	1e5a4 <printf_parse@@Base+0x3da8>
   1e6d8:	mov	w20, #0xc                   	// #12
   1e6dc:	b	1e5b4 <printf_parse@@Base+0x3db8>
   1e6e0:	stp	x29, x30, [sp, #-48]!
   1e6e4:	mov	x29, sp
   1e6e8:	stp	x19, x20, [sp, #16]
   1e6ec:	mov	x19, x0
   1e6f0:	ldr	x2, [x1, #8]
   1e6f4:	str	x21, [sp, #32]
   1e6f8:	str	x2, [x0, #8]
   1e6fc:	cmp	x2, #0x0
   1e700:	b.le	1e74c <printf_parse@@Base+0x3f50>
   1e704:	str	x2, [x19]
   1e708:	lsl	x20, x2, #3
   1e70c:	mov	x21, x1
   1e710:	mov	x0, x20
   1e714:	bl	aab0 <malloc@plt>
   1e718:	str	x0, [x19, #16]
   1e71c:	cbnz	x0, 1e738 <printf_parse@@Base+0x3f3c>
   1e720:	mov	w0, #0xc                   	// #12
   1e724:	stp	xzr, xzr, [x19]
   1e728:	ldp	x19, x20, [sp, #16]
   1e72c:	ldr	x21, [sp, #32]
   1e730:	ldp	x29, x30, [sp], #48
   1e734:	ret
   1e738:	ldr	x1, [x21, #16]
   1e73c:	mov	x2, x20
   1e740:	bl	a6f0 <memcpy@plt>
   1e744:	mov	w0, #0x0                   	// #0
   1e748:	b	1e728 <printf_parse@@Base+0x3f2c>
   1e74c:	stp	xzr, xzr, [x0]
   1e750:	str	xzr, [x0, #16]
   1e754:	b	1e744 <printf_parse@@Base+0x3f48>
   1e758:	stp	x29, x30, [sp, #-64]!
   1e75c:	mov	x29, sp
   1e760:	stp	x19, x20, [sp, #16]
   1e764:	mov	x19, x0
   1e768:	stp	x21, x22, [sp, #32]
   1e76c:	mov	x21, x2
   1e770:	str	x23, [sp, #48]
   1e774:	cbz	x1, 1e7d4 <printf_parse@@Base+0x3fd8>
   1e778:	ldr	x22, [x1, #8]
   1e77c:	mov	x23, x1
   1e780:	cmp	x22, #0x0
   1e784:	b.le	1e7d4 <printf_parse@@Base+0x3fd8>
   1e788:	cbz	x2, 1e7b8 <printf_parse@@Base+0x3fbc>
   1e78c:	ldr	x20, [x2, #8]
   1e790:	cmp	x20, #0x0
   1e794:	b.le	1e7b8 <printf_parse@@Base+0x3fbc>
   1e798:	add	x0, x22, x20
   1e79c:	str	x0, [x19]
   1e7a0:	lsl	x0, x0, #3
   1e7a4:	bl	aab0 <malloc@plt>
   1e7a8:	str	x0, [x19, #16]
   1e7ac:	cbnz	x0, 1e80c <printf_parse@@Base+0x4010>
   1e7b0:	mov	w0, #0xc                   	// #12
   1e7b4:	b	1e7f8 <printf_parse@@Base+0x3ffc>
   1e7b8:	mov	x1, x23
   1e7bc:	mov	x0, x19
   1e7c0:	ldp	x19, x20, [sp, #16]
   1e7c4:	ldp	x21, x22, [sp, #32]
   1e7c8:	ldr	x23, [sp, #48]
   1e7cc:	ldp	x29, x30, [sp], #64
   1e7d0:	b	1e6e0 <printf_parse@@Base+0x3ee4>
   1e7d4:	cbz	x21, 1e7ec <printf_parse@@Base+0x3ff0>
   1e7d8:	ldr	x0, [x21, #8]
   1e7dc:	cmp	x0, #0x0
   1e7e0:	b.le	1e7ec <printf_parse@@Base+0x3ff0>
   1e7e4:	mov	x1, x21
   1e7e8:	b	1e7bc <printf_parse@@Base+0x3fc0>
   1e7ec:	stp	xzr, xzr, [x19]
   1e7f0:	str	xzr, [x19, #16]
   1e7f4:	mov	w0, #0x0                   	// #0
   1e7f8:	ldp	x19, x20, [sp, #16]
   1e7fc:	ldp	x21, x22, [sp, #32]
   1e800:	ldr	x23, [sp, #48]
   1e804:	ldp	x29, x30, [sp], #64
   1e808:	ret
   1e80c:	ldr	x5, [x23, #16]
   1e810:	mov	x3, #0x0                   	// #0
   1e814:	mov	x4, #0x0                   	// #0
   1e818:	ldr	x1, [x21, #16]
   1e81c:	mov	x21, #0x0                   	// #0
   1e820:	ldr	x7, [x5, x4, lsl #3]
   1e824:	mov	x6, x21
   1e828:	ldr	x8, [x1, x3, lsl #3]
   1e82c:	add	x21, x21, #0x1
   1e830:	mov	x2, x21
   1e834:	cmp	x7, x8
   1e838:	b.le	1e874 <printf_parse@@Base+0x4078>
   1e83c:	add	x3, x3, #0x1
   1e840:	str	x8, [x0, x6, lsl #3]
   1e844:	cmp	x22, x4
   1e848:	b.le	1e888 <printf_parse@@Base+0x408c>
   1e84c:	cmp	x20, x3
   1e850:	b.gt	1e820 <printf_parse@@Base+0x4024>
   1e854:	sub	x22, x22, x4
   1e858:	add	x1, x5, x4, lsl #3
   1e85c:	add	x0, x0, x21, lsl #3
   1e860:	lsl	x2, x22, #3
   1e864:	bl	a6f0 <memcpy@plt>
   1e868:	add	x2, x21, x22
   1e86c:	str	x2, [x19, #8]
   1e870:	b	1e7f4 <printf_parse@@Base+0x3ff8>
   1e874:	cset	x8, eq  // eq = none
   1e878:	add	x4, x4, #0x1
   1e87c:	add	x3, x3, x8
   1e880:	str	x7, [x0, x6, lsl #3]
   1e884:	b	1e844 <printf_parse@@Base+0x4048>
   1e888:	cmp	x20, x3
   1e88c:	b.le	1e86c <printf_parse@@Base+0x4070>
   1e890:	sub	x20, x20, x3
   1e894:	add	x1, x1, x3, lsl #3
   1e898:	add	x0, x0, x21, lsl #3
   1e89c:	lsl	x2, x20, #3
   1e8a0:	bl	a6f0 <memcpy@plt>
   1e8a4:	add	x2, x21, x20
   1e8a8:	b	1e86c <printf_parse@@Base+0x4070>
   1e8ac:	stp	x29, x30, [sp, #-112]!
   1e8b0:	mov	x29, sp
   1e8b4:	stp	x21, x22, [sp, #32]
   1e8b8:	mov	x21, x1
   1e8bc:	ldr	x1, [x2, #8]
   1e8c0:	stp	x19, x20, [sp, #16]
   1e8c4:	stp	x23, x24, [sp, #48]
   1e8c8:	mov	x23, x0
   1e8cc:	stp	x25, x26, [sp, #64]
   1e8d0:	stp	x27, x28, [sp, #80]
   1e8d4:	cbnz	x1, 1e8e4 <printf_parse@@Base+0x40e8>
   1e8d8:	str	wzr, [x0]
   1e8dc:	mov	x19, #0x0                   	// #0
   1e8e0:	b	1e9fc <printf_parse@@Base+0x4200>
   1e8e4:	mov	x27, x2
   1e8e8:	mov	w20, w3
   1e8ec:	add	x22, x1, w3, uxtw
   1e8f0:	mov	x0, #0x0                   	// #0
   1e8f4:	cmp	x1, x0
   1e8f8:	b.gt	1e960 <printf_parse@@Base+0x4164>
   1e8fc:	ldr	x0, [x21, #136]
   1e900:	mov	x1, #0x18                  	// #24
   1e904:	mov	x7, #0x0                   	// #0
   1e908:	and	x0, x22, x0
   1e90c:	mul	x0, x0, x1
   1e910:	ldr	x1, [x21, #64]
   1e914:	add	x9, x1, x0
   1e918:	ldr	x8, [x1, x0]
   1e91c:	cmp	x8, x7
   1e920:	b.gt	1e974 <printf_parse@@Base+0x4178>
   1e924:	mov	x1, #0x1                   	// #1
   1e928:	mov	x0, #0x70                  	// #112
   1e92c:	bl	ace0 <calloc@plt>
   1e930:	mov	x19, x0
   1e934:	cbz	x0, 1e954 <printf_parse@@Base+0x4158>
   1e938:	add	x24, x0, #0x8
   1e93c:	mov	x1, x27
   1e940:	mov	x0, x24
   1e944:	bl	1e6e0 <printf_parse@@Base+0x3ee4>
   1e948:	cbz	w0, 1e9b4 <printf_parse@@Base+0x41b8>
   1e94c:	mov	x0, x19
   1e950:	bl	b050 <free@plt>
   1e954:	mov	w0, #0xc                   	// #12
   1e958:	str	w0, [x23]
   1e95c:	b	1e8dc <printf_parse@@Base+0x40e0>
   1e960:	ldr	x2, [x27, #16]
   1e964:	ldr	x2, [x2, x0, lsl #3]
   1e968:	add	x0, x0, #0x1
   1e96c:	add	x22, x22, x2
   1e970:	b	1e8f4 <printf_parse@@Base+0x40f8>
   1e974:	ldr	x0, [x9, #16]
   1e978:	ldr	x19, [x0, x7, lsl #3]
   1e97c:	ldr	x0, [x19]
   1e980:	cmp	x0, x22
   1e984:	b.ne	1e9ac <printf_parse@@Base+0x41b0>  // b.any
   1e988:	ldrb	w0, [x19, #104]
   1e98c:	and	w0, w0, #0xf
   1e990:	cmp	w0, w20
   1e994:	b.ne	1e9ac <printf_parse@@Base+0x41b0>  // b.any
   1e998:	ldr	x0, [x19, #80]
   1e99c:	mov	x1, x27
   1e9a0:	bl	1b33c <printf_parse@@Base+0xb40>
   1e9a4:	tst	w0, #0xff
   1e9a8:	b.ne	1e9fc <printf_parse@@Base+0x4200>  // b.any
   1e9ac:	add	x7, x7, #0x1
   1e9b0:	b	1e91c <printf_parse@@Base+0x4120>
   1e9b4:	ldrb	w0, [x19, #104]
   1e9b8:	and	w26, w20, #0x2
   1e9bc:	mov	x5, #0x0                   	// #0
   1e9c0:	mov	x25, #0x0                   	// #0
   1e9c4:	str	x24, [x19, #80]
   1e9c8:	bfxil	w0, w20, #0, #4
   1e9cc:	strb	w0, [x19, #104]
   1e9d0:	and	w0, w20, #0x4
   1e9d4:	and	w20, w20, #0x1
   1e9d8:	str	w0, [sp, #108]
   1e9dc:	ldr	x0, [x27, #8]
   1e9e0:	cmp	x25, x0
   1e9e4:	b.lt	1ea1c <printf_parse@@Base+0x4220>  // b.tstop
   1e9e8:	mov	x2, x22
   1e9ec:	mov	x1, x19
   1e9f0:	mov	x0, x21
   1e9f4:	bl	1e278 <printf_parse@@Base+0x3a7c>
   1e9f8:	cbnz	w0, 1ea8c <printf_parse@@Base+0x4290>
   1e9fc:	mov	x0, x19
   1ea00:	ldp	x19, x20, [sp, #16]
   1ea04:	ldp	x21, x22, [sp, #32]
   1ea08:	ldp	x23, x24, [sp, #48]
   1ea0c:	ldp	x25, x26, [sp, #64]
   1ea10:	ldp	x27, x28, [sp, #80]
   1ea14:	ldp	x29, x30, [sp], #112
   1ea18:	ret
   1ea1c:	ldr	x0, [x27, #16]
   1ea20:	ldr	x1, [x21]
   1ea24:	ldr	x0, [x0, x25, lsl #3]
   1ea28:	add	x0, x1, x0, lsl #4
   1ea2c:	ldr	w28, [x0, #8]
   1ea30:	ldrb	w1, [x0, #8]
   1ea34:	ubfx	x28, x28, #8, #10
   1ea38:	cmp	w28, #0x0
   1ea3c:	ccmp	w1, #0x1, #0x0, eq  // eq = none
   1ea40:	b.eq	1eafc <printf_parse@@Base+0x4300>  // b.none
   1ea44:	ldrb	w3, [x19, #104]
   1ea48:	cmp	w1, #0x2
   1ea4c:	ldrb	w0, [x0, #10]
   1ea50:	ubfx	x4, x3, #5, #1
   1ea54:	ubfx	x0, x0, #4, #1
   1ea58:	orr	w0, w4, w0
   1ea5c:	bfi	w3, w0, #5, #1
   1ea60:	strb	w3, [x19, #104]
   1ea64:	b.ne	1ea98 <printf_parse@@Base+0x429c>  // b.any
   1ea68:	orr	w3, w3, #0x10
   1ea6c:	strb	w3, [x19, #104]
   1ea70:	cbz	w28, 1eafc <printf_parse@@Base+0x4300>
   1ea74:	ldr	x0, [x19, #80]
   1ea78:	cmp	x24, x0
   1ea7c:	b.ne	1eac8 <printf_parse@@Base+0x42cc>  // b.any
   1ea80:	mov	x0, #0x18                  	// #24
   1ea84:	bl	aab0 <malloc@plt>
   1ea88:	cbnz	x0, 1eaa8 <printf_parse@@Base+0x42ac>
   1ea8c:	mov	x0, x19
   1ea90:	bl	1c768 <printf_parse@@Base+0x1f6c>
   1ea94:	b	1e954 <printf_parse@@Base+0x4158>
   1ea98:	cmp	w1, #0x4
   1ea9c:	b.ne	1ea70 <printf_parse@@Base+0x4274>  // b.any
   1eaa0:	orr	w3, w3, #0x40
   1eaa4:	b	1ea6c <printf_parse@@Base+0x4270>
   1eaa8:	str	x0, [x19, #80]
   1eaac:	mov	x1, x27
   1eab0:	bl	1e6e0 <printf_parse@@Base+0x3ee4>
   1eab4:	cbnz	w0, 1ea8c <printf_parse@@Base+0x4290>
   1eab8:	ldrb	w0, [x19, #104]
   1eabc:	mov	x5, #0x0                   	// #0
   1eac0:	orr	w0, w0, #0xffffff80
   1eac4:	strb	w0, [x19, #104]
   1eac8:	tbz	w28, #0, 1ead0 <printf_parse@@Base+0x42d4>
   1eacc:	cbz	w20, 1eaec <printf_parse@@Base+0x42f0>
   1ead0:	tbz	w28, #1, 1ead8 <printf_parse@@Base+0x42dc>
   1ead4:	cbnz	w20, 1eaec <printf_parse@@Base+0x42f0>
   1ead8:	tbz	w28, #4, 1eae0 <printf_parse@@Base+0x42e4>
   1eadc:	cbz	w26, 1eaec <printf_parse@@Base+0x42f0>
   1eae0:	tbz	w28, #6, 1eafc <printf_parse@@Base+0x4300>
   1eae4:	ldr	w0, [sp, #108]
   1eae8:	cbnz	w0, 1eafc <printf_parse@@Base+0x4300>
   1eaec:	sub	x1, x25, x5
   1eaf0:	mov	x0, x24
   1eaf4:	bl	1d860 <printf_parse@@Base+0x3064>
   1eaf8:	add	x5, x5, #0x1
   1eafc:	add	x25, x25, #0x1
   1eb00:	b	1e9dc <printf_parse@@Base+0x41e0>
   1eb04:	stp	x29, x30, [sp, #-48]!
   1eb08:	mov	x29, sp
   1eb0c:	stp	x19, x20, [sp, #16]
   1eb10:	ldr	x20, [x1, #8]
   1eb14:	stp	x21, x22, [sp, #32]
   1eb18:	cbz	x20, 1ec2c <printf_parse@@Base+0x4430>
   1eb1c:	mov	x19, x0
   1eb20:	mov	x22, x2
   1eb24:	ldr	x0, [x2, #8]
   1eb28:	cbz	x0, 1ec2c <printf_parse@@Base+0x4430>
   1eb2c:	add	x20, x20, x0
   1eb30:	mov	x21, x1
   1eb34:	ldp	x1, x0, [x19]
   1eb38:	add	x0, x20, x0
   1eb3c:	cmp	x0, x1
   1eb40:	b.le	1eb60 <printf_parse@@Base+0x4364>
   1eb44:	ldr	x0, [x19, #16]
   1eb48:	add	x20, x20, x1
   1eb4c:	lsl	x1, x20, #3
   1eb50:	bl	ad60 <realloc@plt>
   1eb54:	cbz	x0, 1ec68 <printf_parse@@Base+0x446c>
   1eb58:	str	x20, [x19]
   1eb5c:	str	x0, [x19, #16]
   1eb60:	ldp	x0, x6, [x21, #8]
   1eb64:	ldp	x3, x7, [x22, #8]
   1eb68:	ldr	x5, [x19, #8]
   1eb6c:	add	x4, x5, x0
   1eb70:	sub	x0, x0, #0x1
   1eb74:	add	x4, x4, x3
   1eb78:	sub	x5, x5, #0x1
   1eb7c:	sub	x3, x3, #0x1
   1eb80:	ldr	x1, [x6, x0, lsl #3]
   1eb84:	ldr	x2, [x7, x3, lsl #3]
   1eb88:	cmp	x1, x2
   1eb8c:	b.ne	1ec48 <printf_parse@@Base+0x444c>  // b.any
   1eb90:	ldr	x2, [x19, #16]
   1eb94:	tbnz	x5, #63, 1eba8 <printf_parse@@Base+0x43ac>
   1eb98:	ldr	x8, [x2, x5, lsl #3]
   1eb9c:	cmp	x1, x8
   1eba0:	b.lt	1ec40 <printf_parse@@Base+0x4444>  // b.tstop
   1eba4:	b.eq	1ebb0 <printf_parse@@Base+0x43b4>  // b.none
   1eba8:	sub	x4, x4, #0x1
   1ebac:	str	x1, [x2, x4, lsl #3]
   1ebb0:	subs	x0, x0, #0x1
   1ebb4:	b.mi	1ebc0 <printf_parse@@Base+0x43c4>  // b.first
   1ebb8:	subs	x3, x3, #0x1
   1ebbc:	b.pl	1eb80 <printf_parse@@Base+0x4384>  // b.nfrst
   1ebc0:	ldr	x0, [x19, #8]
   1ebc4:	ldr	x3, [x21, #8]
   1ebc8:	sub	x1, x0, #0x1
   1ebcc:	ldr	x2, [x22, #8]
   1ebd0:	add	x3, x0, x3
   1ebd4:	add	x2, x3, x2
   1ebd8:	sub	x5, x2, #0x1
   1ebdc:	sub	x2, x2, x4
   1ebe0:	add	x0, x0, x2
   1ebe4:	str	x0, [x19, #8]
   1ebe8:	cmp	x2, #0x0
   1ebec:	ccmp	x1, #0x0, #0x1, gt
   1ebf0:	ldr	x0, [x19, #16]
   1ebf4:	b.lt	1ec20 <printf_parse@@Base+0x4424>  // b.tstop
   1ebf8:	ldr	x7, [x0, x5, lsl #3]
   1ebfc:	add	x3, x1, x2
   1ec00:	ldr	x6, [x0, x1, lsl #3]
   1ec04:	lsl	x3, x3, #3
   1ec08:	cmp	x7, x6
   1ec0c:	b.le	1ec54 <printf_parse@@Base+0x4458>
   1ec10:	str	x7, [x0, x3]
   1ec14:	sub	x5, x5, #0x1
   1ec18:	subs	x2, x2, #0x1
   1ec1c:	b.ne	1ebf8 <printf_parse@@Base+0x43fc>  // b.any
   1ec20:	lsl	x2, x2, #3
   1ec24:	add	x1, x0, x4, lsl #3
   1ec28:	bl	a6f0 <memcpy@plt>
   1ec2c:	mov	w0, #0x0                   	// #0
   1ec30:	ldp	x19, x20, [sp, #16]
   1ec34:	ldp	x21, x22, [sp, #32]
   1ec38:	ldp	x29, x30, [sp], #48
   1ec3c:	ret
   1ec40:	sub	x5, x5, #0x1
   1ec44:	b	1eb94 <printf_parse@@Base+0x4398>
   1ec48:	b.lt	1ebb8 <printf_parse@@Base+0x43bc>  // b.tstop
   1ec4c:	subs	x0, x0, #0x1
   1ec50:	b	1ebbc <printf_parse@@Base+0x43c0>
   1ec54:	str	x6, [x0, x3]
   1ec58:	sub	x1, x1, #0x1
   1ec5c:	cmn	x1, #0x1
   1ec60:	b.ne	1ebf8 <printf_parse@@Base+0x43fc>  // b.any
   1ec64:	b	1ec20 <printf_parse@@Base+0x4424>
   1ec68:	mov	w0, #0xc                   	// #12
   1ec6c:	b	1ec30 <printf_parse@@Base+0x4434>
   1ec70:	stp	x29, x30, [sp, #-128]!
   1ec74:	mov	x29, sp
   1ec78:	stp	x19, x20, [sp, #16]
   1ec7c:	mov	x20, x2
   1ec80:	ldr	x19, [x0, #56]
   1ec84:	stp	x23, x24, [sp, #48]
   1ec88:	mov	x24, #0x18                  	// #24
   1ec8c:	mov	x23, x1
   1ec90:	stp	x21, x22, [sp, #32]
   1ec94:	madd	x19, x1, x24, x19
   1ec98:	mov	x21, x0
   1ec9c:	stp	x25, x26, [sp, #64]
   1eca0:	mov	x25, x3
   1eca4:	add	x26, sp, #0x68
   1eca8:	mov	x22, #0x0                   	// #0
   1ecac:	str	x27, [sp, #80]
   1ecb0:	stp	xzr, xzr, [sp, #104]
   1ecb4:	str	xzr, [sp, #120]
   1ecb8:	ldr	x0, [x19, #8]
   1ecbc:	cmp	x0, x22
   1ecc0:	b.gt	1ece8 <printf_parse@@Base+0x44ec>
   1ecc4:	add	x7, sp, #0x68
   1ecc8:	mov	x6, #0x0                   	// #0
   1eccc:	ldr	x0, [x19, #8]
   1ecd0:	cmp	x0, x6
   1ecd4:	b.gt	1edbc <printf_parse@@Base+0x45c0>
   1ecd8:	ldr	x0, [sp, #120]
   1ecdc:	mov	w27, #0x0                   	// #0
   1ece0:	bl	b050 <free@plt>
   1ece4:	b	1ed8c <printf_parse@@Base+0x4590>
   1ece8:	ldr	x0, [x19, #16]
   1ecec:	ldr	x2, [x0, x22, lsl #3]
   1ecf0:	cmp	x23, x2
   1ecf4:	b.eq	1edb4 <printf_parse@@Base+0x45b8>  // b.none
   1ecf8:	ldr	x0, [x21]
   1ecfc:	add	x0, x0, x2, lsl #4
   1ed00:	ldrb	w0, [x0, #8]
   1ed04:	tbz	w0, #3, 1edb4 <printf_parse@@Base+0x45b8>
   1ed08:	ldr	x0, [x21, #40]
   1ed0c:	mul	x6, x2, x24
   1ed10:	add	x0, x0, x6
   1ed14:	ldr	x2, [x0, #16]
   1ed18:	ldr	x0, [x0, #8]
   1ed1c:	ldr	x1, [x2]
   1ed20:	cmp	x0, #0x1
   1ed24:	b.le	1edac <printf_parse@@Base+0x45b0>
   1ed28:	ldr	x7, [x2, #8]
   1ed2c:	mov	x0, x19
   1ed30:	bl	1b398 <printf_parse@@Base+0xb9c>
   1ed34:	cbnz	x0, 1ed44 <printf_parse@@Base+0x4548>
   1ed38:	mov	x0, x20
   1ed3c:	bl	1b398 <printf_parse@@Base+0xb9c>
   1ed40:	cbnz	x0, 1ed68 <printf_parse@@Base+0x456c>
   1ed44:	cmp	x7, #0x0
   1ed48:	b.le	1edb4 <printf_parse@@Base+0x45b8>
   1ed4c:	mov	x1, x7
   1ed50:	mov	x0, x19
   1ed54:	bl	1b398 <printf_parse@@Base+0xb9c>
   1ed58:	cbnz	x0, 1edb4 <printf_parse@@Base+0x45b8>
   1ed5c:	mov	x0, x20
   1ed60:	bl	1b398 <printf_parse@@Base+0xb9c>
   1ed64:	cbz	x0, 1edb4 <printf_parse@@Base+0x45b8>
   1ed68:	ldr	x2, [x21, #56]
   1ed6c:	mov	x1, x25
   1ed70:	mov	x0, x26
   1ed74:	add	x2, x2, x6
   1ed78:	bl	1eb04 <printf_parse@@Base+0x4308>
   1ed7c:	mov	w27, w0
   1ed80:	cbz	w0, 1edb4 <printf_parse@@Base+0x45b8>
   1ed84:	ldr	x0, [sp, #120]
   1ed88:	bl	b050 <free@plt>
   1ed8c:	mov	w0, w27
   1ed90:	ldp	x19, x20, [sp, #16]
   1ed94:	ldp	x21, x22, [sp, #32]
   1ed98:	ldp	x23, x24, [sp, #48]
   1ed9c:	ldp	x25, x26, [sp, #64]
   1eda0:	ldr	x27, [sp, #80]
   1eda4:	ldp	x29, x30, [sp], #128
   1eda8:	ret
   1edac:	mov	x7, #0xffffffffffffffff    	// #-1
   1edb0:	b	1ed2c <printf_parse@@Base+0x4530>
   1edb4:	add	x22, x22, #0x1
   1edb8:	b	1ecb8 <printf_parse@@Base+0x44bc>
   1edbc:	ldr	x0, [x19, #16]
   1edc0:	ldr	x1, [x0, x6, lsl #3]
   1edc4:	mov	x0, x7
   1edc8:	bl	1b398 <printf_parse@@Base+0xb9c>
   1edcc:	cbnz	x0, 1ede4 <printf_parse@@Base+0x45e8>
   1edd0:	mov	x0, x20
   1edd4:	bl	1b398 <printf_parse@@Base+0xb9c>
   1edd8:	sub	x1, x0, #0x1
   1eddc:	mov	x0, x20
   1ede0:	bl	1d860 <printf_parse@@Base+0x3064>
   1ede4:	add	x6, x6, #0x1
   1ede8:	b	1eccc <printf_parse@@Base+0x44d0>
   1edec:	stp	x29, x30, [sp, #-32]!
   1edf0:	mov	x29, sp
   1edf4:	stp	x19, x20, [sp, #16]
   1edf8:	mov	x19, x1
   1edfc:	ldrb	w1, [x1, #48]
   1ee00:	cmp	w1, #0x10
   1ee04:	b.ne	1ee24 <printf_parse@@Base+0x4628>  // b.any
   1ee08:	ldr	x0, [x19, #8]
   1ee0c:	ldr	x1, [x0, #24]
   1ee10:	ldr	x0, [x0, #56]
   1ee14:	str	x1, [x19, #24]
   1ee18:	str	x0, [x19, #56]
   1ee1c:	mov	w0, #0x0                   	// #0
   1ee20:	b	1ee6c <printf_parse@@Base+0x4670>
   1ee24:	ldp	x1, x2, [x19, #40]
   1ee28:	str	x19, [x19, #24]
   1ee2c:	mov	x20, x0
   1ee30:	bl	1c534 <printf_parse@@Base+0x1d38>
   1ee34:	str	x0, [x19, #56]
   1ee38:	cmn	x0, #0x1
   1ee3c:	b.eq	1ee68 <printf_parse@@Base+0x466c>  // b.none
   1ee40:	ldrb	w1, [x19, #48]
   1ee44:	cmp	w1, #0xc
   1ee48:	b.ne	1ee1c <printf_parse@@Base+0x4620>  // b.any
   1ee4c:	ldr	x1, [x20]
   1ee50:	ldr	w2, [x19, #40]
   1ee54:	add	x0, x1, x0, lsl #4
   1ee58:	ldr	w1, [x0, #8]
   1ee5c:	bfi	w1, w2, #8, #10
   1ee60:	str	w1, [x0, #8]
   1ee64:	b	1ee1c <printf_parse@@Base+0x4620>
   1ee68:	mov	w0, #0xc                   	// #12
   1ee6c:	ldp	x19, x20, [sp, #16]
   1ee70:	ldp	x29, x30, [sp], #32
   1ee74:	ret
   1ee78:	cbnz	x0, 1eed0 <printf_parse@@Base+0x46d4>
   1ee7c:	mov	w0, #0x0                   	// #0
   1ee80:	ret
   1ee84:	mul	x21, x20, x22
   1ee88:	add	x20, x20, #0x1
   1ee8c:	add	x0, x0, x21
   1ee90:	ldr	x0, [x0, #40]
   1ee94:	bl	b050 <free@plt>
   1ee98:	ldr	x0, [x19, #16]
   1ee9c:	add	x0, x0, x21
   1eea0:	ldr	x0, [x0, #16]
   1eea4:	bl	b050 <free@plt>
   1eea8:	ldr	x1, [x19]
   1eeac:	ldr	x0, [x19, #16]
   1eeb0:	cmp	x20, x1
   1eeb4:	b.lt	1ee84 <printf_parse@@Base+0x4688>  // b.tstop
   1eeb8:	bl	b050 <free@plt>
   1eebc:	mov	w0, #0x0                   	// #0
   1eec0:	ldp	x19, x20, [sp, #16]
   1eec4:	ldp	x21, x22, [sp, #32]
   1eec8:	ldp	x29, x30, [sp], #48
   1eecc:	ret
   1eed0:	stp	x29, x30, [sp, #-48]!
   1eed4:	mov	x29, sp
   1eed8:	stp	x19, x20, [sp, #16]
   1eedc:	mov	x19, x0
   1eee0:	mov	x20, #0x0                   	// #0
   1eee4:	stp	x21, x22, [sp, #32]
   1eee8:	mov	x22, #0x30                  	// #48
   1eeec:	b	1eea8 <printf_parse@@Base+0x46ac>
   1eef0:	stp	x29, x30, [sp, #-48]!
   1eef4:	mov	x29, sp
   1eef8:	stp	x19, x20, [sp, #16]
   1eefc:	mov	x20, x0
   1ef00:	ldr	x19, [x0]
   1ef04:	sub	x19, x19, #0x1
   1ef08:	str	x19, [x0]
   1ef0c:	str	x21, [sp, #32]
   1ef10:	tbz	x19, #63, 1ef38 <printf_parse@@Base+0x473c>
   1ef14:	adrp	x3, 29000 <vasnprintf@@Base+0x3170>
   1ef18:	add	x3, x3, #0x338
   1ef1c:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   1ef20:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   1ef24:	add	x3, x3, #0x2f
   1ef28:	add	x1, x1, #0x201
   1ef2c:	add	x0, x0, #0x20b
   1ef30:	mov	w2, #0x555                 	// #1365
   1ef34:	bl	b530 <__assert_fail@plt>
   1ef38:	mov	x0, x3
   1ef3c:	mov	x3, #0x30                  	// #48
   1ef40:	mov	x21, x4
   1ef44:	lsl	x2, x2, #4
   1ef48:	mul	x19, x19, x3
   1ef4c:	ldr	x3, [x20, #16]
   1ef50:	add	x4, x3, x19
   1ef54:	ldr	x3, [x3, x19]
   1ef58:	str	x3, [x1]
   1ef5c:	ldr	x1, [x4, #16]
   1ef60:	bl	a6f0 <memcpy@plt>
   1ef64:	ldr	x0, [x21, #16]
   1ef68:	bl	b050 <free@plt>
   1ef6c:	ldr	x0, [x20, #16]
   1ef70:	add	x0, x0, x19
   1ef74:	ldr	x0, [x0, #16]
   1ef78:	bl	b050 <free@plt>
   1ef7c:	ldr	x0, [x20, #16]
   1ef80:	add	x19, x0, x19
   1ef84:	ldp	x0, x1, [x19, #24]
   1ef88:	stp	x0, x1, [x21]
   1ef8c:	ldr	x0, [x19, #40]
   1ef90:	str	x0, [x21, #16]
   1ef94:	ldr	x0, [x19, #8]
   1ef98:	ldp	x19, x20, [sp, #16]
   1ef9c:	ldr	x21, [sp, #32]
   1efa0:	ldp	x29, x30, [sp], #48
   1efa4:	ret
   1efa8:	stp	x29, x30, [sp, #-32]!
   1efac:	mov	x7, x0
   1efb0:	mov	x6, x1
   1efb4:	mov	x29, sp
   1efb8:	mov	x0, x1
   1efbc:	ldr	x1, [x1, #72]
   1efc0:	mov	x9, x2
   1efc4:	mov	w8, w3
   1efc8:	mov	x11, x4
   1efcc:	and	w12, w5, #0xff
   1efd0:	bl	1d5a4 <printf_parse@@Base+0x2da8>
   1efd4:	cmp	w0, #0x1
   1efd8:	b.le	1f004 <printf_parse@@Base+0x4808>
   1efdc:	mov	w10, w0
   1efe0:	mov	w0, #0x1                   	// #1
   1efe4:	str	w0, [x7]
   1efe8:	mov	x0, x6
   1efec:	bl	1b2bc <printf_parse@@Base+0xac0>
   1eff0:	str	w0, [x7, #8]
   1eff4:	add	x10, x1, w10, sxtw
   1eff8:	str	x10, [x6, #72]
   1effc:	mov	w0, #0x0                   	// #0
   1f000:	b	1f034 <printf_parse@@Base+0x4838>
   1f004:	ldrb	w0, [x9, #8]
   1f008:	add	x1, x1, w8, sxtw
   1f00c:	str	x1, [x6, #72]
   1f010:	and	w2, w0, #0xfffffffb
   1f014:	cmp	w2, #0x1a
   1f018:	b.eq	1f024 <printf_parse@@Base+0x4828>  // b.none
   1f01c:	cmp	w0, #0x1c
   1f020:	b.ne	1f160 <printf_parse@@Base+0x4964>  // b.any
   1f024:	ldr	x0, [x6, #104]
   1f028:	cmp	x1, x0
   1f02c:	b.lt	1f03c <printf_parse@@Base+0x4840>  // b.tstop
   1f030:	mov	w0, #0x7                   	// #7
   1f034:	ldp	x29, x30, [sp], #32
   1f038:	ret
   1f03c:	ldrb	w12, [x9]
   1f040:	mov	x10, #0x0                   	// #0
   1f044:	ldrb	w0, [x9, #8]
   1f048:	mov	w11, w10
   1f04c:	ldr	x1, [x6, #72]
   1f050:	cmp	w0, #0x1e
   1f054:	b.ne	1f060 <printf_parse@@Base+0x4864>  // b.any
   1f058:	ldrb	w0, [x6, #139]
   1f05c:	cbnz	w0, 1f070 <printf_parse@@Base+0x4874>
   1f060:	add	x2, x1, #0x1
   1f064:	str	x2, [x6, #72]
   1f068:	ldr	x0, [x6, #8]
   1f06c:	b	1f114 <printf_parse@@Base+0x4918>
   1f070:	ldrb	w0, [x6, #140]
   1f074:	cbz	w0, 1f100 <printf_parse@@Base+0x4904>
   1f078:	ldr	x0, [x6, #48]
   1f07c:	cmp	x0, x1
   1f080:	b.eq	1f094 <printf_parse@@Base+0x4898>  // b.none
   1f084:	ldr	x0, [x6, #16]
   1f088:	ldr	w0, [x0, x1, lsl #2]
   1f08c:	cmn	w0, #0x1
   1f090:	b.eq	1f060 <printf_parse@@Base+0x4864>  // b.none
   1f094:	ldr	x2, [x6, #24]
   1f098:	ldr	x0, [x6]
   1f09c:	ldr	x3, [x2, x1, lsl #3]
   1f0a0:	ldr	x2, [x6, #40]
   1f0a4:	add	x0, x0, x3
   1f0a8:	ldrb	w8, [x0, x2]
   1f0ac:	tbnz	w8, #7, 1f060 <printf_parse@@Base+0x4864>
   1f0b0:	mov	x0, x6
   1f0b4:	bl	1d5a4 <printf_parse@@Base+0x2da8>
   1f0b8:	add	x1, x1, w0, sxtw
   1f0bc:	str	x1, [x6, #72]
   1f0c0:	ldr	x0, [x6, #72]
   1f0c4:	ldr	x1, [x6, #104]
   1f0c8:	cmp	x1, x0
   1f0cc:	b.le	1f030 <printf_parse@@Base+0x4834>
   1f0d0:	cmp	w12, w8
   1f0d4:	ldr	x1, [x7, #8]
   1f0d8:	b.ne	1f0ec <printf_parse@@Base+0x48f0>  // b.any
   1f0dc:	ldr	x2, [x6, #8]
   1f0e0:	ldrb	w2, [x2, x0]
   1f0e4:	cmp	w2, #0x5d
   1f0e8:	b.eq	1f11c <printf_parse@@Base+0x4920>  // b.none
   1f0ec:	strb	w8, [x1, x10]
   1f0f0:	add	x10, x10, #0x1
   1f0f4:	cmp	x10, #0x20
   1f0f8:	b.ne	1f044 <printf_parse@@Base+0x4848>  // b.any
   1f0fc:	b	1f030 <printf_parse@@Base+0x4834>
   1f100:	ldr	x0, [x6]
   1f104:	add	x3, x1, #0x1
   1f108:	ldr	x2, [x6, #40]
   1f10c:	str	x3, [x6, #72]
   1f110:	add	x0, x0, x2
   1f114:	ldrb	w8, [x0, x1]
   1f118:	b	1f0c0 <printf_parse@@Base+0x48c4>
   1f11c:	add	x0, x0, #0x1
   1f120:	str	x0, [x6, #72]
   1f124:	strb	wzr, [x1, w11, sxtw]
   1f128:	ldrb	w0, [x9, #8]
   1f12c:	cmp	w0, #0x1c
   1f130:	b.eq	1f150 <printf_parse@@Base+0x4954>  // b.none
   1f134:	cmp	w0, #0x1e
   1f138:	b.eq	1f158 <printf_parse@@Base+0x495c>  // b.none
   1f13c:	cmp	w0, #0x1a
   1f140:	b.ne	1effc <printf_parse@@Base+0x4800>  // b.any
   1f144:	mov	w0, #0x3                   	// #3
   1f148:	str	w0, [x7]
   1f14c:	b	1effc <printf_parse@@Base+0x4800>
   1f150:	mov	w0, #0x2                   	// #2
   1f154:	b	1f148 <printf_parse@@Base+0x494c>
   1f158:	mov	w0, #0x4                   	// #4
   1f15c:	b	1f148 <printf_parse@@Base+0x494c>
   1f160:	cmp	w0, #0x16
   1f164:	b.ne	1f190 <printf_parse@@Base+0x4994>  // b.any
   1f168:	cbnz	w12, 1f190 <printf_parse@@Base+0x4994>
   1f16c:	mov	x2, x11
   1f170:	mov	x1, x6
   1f174:	add	x0, sp, #0x10
   1f178:	bl	1b3f4 <printf_parse@@Base+0xbf8>
   1f17c:	ldrb	w0, [sp, #24]
   1f180:	cmp	w0, #0x15
   1f184:	b.eq	1f190 <printf_parse@@Base+0x4994>  // b.none
   1f188:	mov	w0, #0xb                   	// #11
   1f18c:	b	1f034 <printf_parse@@Base+0x4838>
   1f190:	ldrb	w0, [x9]
   1f194:	str	wzr, [x7]
   1f198:	strb	w0, [x7, #8]
   1f19c:	b	1effc <printf_parse@@Base+0x4800>
   1f1a0:	stp	x29, x30, [sp, #-96]!
   1f1a4:	mov	x29, sp
   1f1a8:	stp	x19, x20, [sp, #16]
   1f1ac:	mov	x19, x0
   1f1b0:	stp	x25, x26, [sp, #64]
   1f1b4:	ldr	x25, [x1, #72]
   1f1b8:	stp	x21, x22, [sp, #32]
   1f1bc:	ldr	x0, [x1, #104]
   1f1c0:	stp	x23, x24, [sp, #48]
   1f1c4:	cmp	x0, x25
   1f1c8:	b.gt	1f1f0 <printf_parse@@Base+0x49f4>
   1f1cc:	mov	w0, #0x2                   	// #2
   1f1d0:	strb	w0, [x19, #8]
   1f1d4:	mov	w0, #0x0                   	// #0
   1f1d8:	ldp	x19, x20, [sp, #16]
   1f1dc:	ldp	x21, x22, [sp, #32]
   1f1e0:	ldp	x23, x24, [sp, #48]
   1f1e4:	ldp	x25, x26, [sp, #64]
   1f1e8:	ldp	x29, x30, [sp], #96
   1f1ec:	ret
   1f1f0:	ldr	x26, [x1, #8]
   1f1f4:	mov	x21, x1
   1f1f8:	ldrb	w0, [x19, #10]
   1f1fc:	mov	x20, x2
   1f200:	ldrb	w22, [x26, x25]
   1f204:	and	w0, w0, #0xffffff9f
   1f208:	strb	w22, [x19]
   1f20c:	strb	w0, [x19, #10]
   1f210:	ldr	w0, [x1, #144]
   1f214:	cmp	w0, #0x1
   1f218:	b.le	1f25c <printf_parse@@Base+0x4a60>
   1f21c:	ldr	x1, [x1, #48]
   1f220:	cmp	x25, x1
   1f224:	b.eq	1f25c <printf_parse@@Base+0x4a60>  // b.none
   1f228:	ldr	x1, [x21, #16]
   1f22c:	ldr	w1, [x1, x25, lsl #2]
   1f230:	cmn	w1, #0x1
   1f234:	b.ne	1f25c <printf_parse@@Base+0x4a60>  // b.any
   1f238:	ldr	w0, [x19, #8]
   1f23c:	mov	w1, #0x1                   	// #1
   1f240:	movk	w1, #0x20, lsl #16
   1f244:	and	w0, w0, #0xffffff00
   1f248:	and	w0, w0, #0xffdfffff
   1f24c:	orr	w0, w0, w1
   1f250:	str	w0, [x19, #8]
   1f254:	mov	w0, #0x1                   	// #1
   1f258:	b	1f1d8 <printf_parse@@Base+0x49dc>
   1f25c:	cmp	w22, #0x5c
   1f260:	b.ne	1f54c <printf_parse@@Base+0x4d50>  // b.any
   1f264:	ldr	x2, [x21, #88]
   1f268:	add	x1, x25, #0x1
   1f26c:	cmp	x1, x2
   1f270:	b.lt	1f280 <printf_parse@@Base+0x4a84>  // b.tstop
   1f274:	mov	w0, #0x24                  	// #36
   1f278:	strb	w0, [x19, #8]
   1f27c:	b	1f254 <printf_parse@@Base+0x4a58>
   1f280:	ldrb	w2, [x21, #139]
   1f284:	cbnz	w2, 1f290 <printf_parse@@Base+0x4a94>
   1f288:	ldrb	w22, [x26, x1]
   1f28c:	b	1f2f4 <printf_parse@@Base+0x4af8>
   1f290:	cmp	w0, #0x1
   1f294:	b.le	1f2cc <printf_parse@@Base+0x4ad0>
   1f298:	ldr	x2, [x21, #16]
   1f29c:	lsl	x3, x1, #2
   1f2a0:	ldr	w4, [x2, x3]
   1f2a4:	cmn	w4, #0x1
   1f2a8:	b.eq	1f288 <printf_parse@@Base+0x4a8c>  // b.none
   1f2ac:	ldr	x4, [x21, #48]
   1f2b0:	add	x25, x25, #0x2
   1f2b4:	cmp	x4, x25
   1f2b8:	b.eq	1f2cc <printf_parse@@Base+0x4ad0>  // b.none
   1f2bc:	add	x2, x2, x3
   1f2c0:	ldr	w2, [x2, #4]
   1f2c4:	cmn	w2, #0x1
   1f2c8:	b.eq	1f288 <printf_parse@@Base+0x4a8c>  // b.none
   1f2cc:	ldrb	w3, [x21, #140]
   1f2d0:	cbz	w3, 1f358 <printf_parse@@Base+0x4b5c>
   1f2d4:	ldr	x2, [x21, #24]
   1f2d8:	ldr	x4, [x2, x1, lsl #3]
   1f2dc:	ldr	x2, [x21]
   1f2e0:	ldr	x5, [x21, #40]
   1f2e4:	add	x2, x2, x4
   1f2e8:	ldrb	w22, [x2, x5]
   1f2ec:	cbz	w3, 1f2f4 <printf_parse@@Base+0x4af8>
   1f2f0:	tbnz	w22, #7, 1f288 <printf_parse@@Base+0x4a8c>
   1f2f4:	mov	w2, #0x1                   	// #1
   1f2f8:	strb	w22, [x19]
   1f2fc:	strb	w2, [x19, #8]
   1f300:	cmp	w0, #0x1
   1f304:	ldrb	w23, [x19, #10]
   1f308:	b.le	1f360 <printf_parse@@Base+0x4b64>
   1f30c:	mov	x0, x21
   1f310:	bl	1b2bc <printf_parse@@Base+0xac0>
   1f314:	mov	w21, w0
   1f318:	bl	b370 <iswalnum@plt>
   1f31c:	cbnz	w0, 1f37c <printf_parse@@Base+0x4b80>
   1f320:	cmp	w21, #0x5f
   1f324:	cset	w1, eq  // eq = none
   1f328:	mov	w0, w23
   1f32c:	cmp	w22, #0x53
   1f330:	bfi	w0, w1, #6, #1
   1f334:	strb	w0, [x19, #10]
   1f338:	b.eq	1f49c <printf_parse@@Base+0x4ca0>  // b.none
   1f33c:	b.hi	1f3c8 <printf_parse@@Base+0x4bcc>  // b.pmore
   1f340:	sub	w1, w22, #0x27
   1f344:	and	w0, w1, #0xff
   1f348:	cmp	w0, #0x1b
   1f34c:	b.ls	1f3a8 <printf_parse@@Base+0x4bac>  // b.plast
   1f350:	mov	w0, #0x2                   	// #2
   1f354:	b	1f1d8 <printf_parse@@Base+0x49dc>
   1f358:	mov	x4, x1
   1f35c:	b	1f2dc <printf_parse@@Base+0x4ae0>
   1f360:	bl	afc0 <__ctype_b_loc@plt>
   1f364:	ldr	x0, [x0]
   1f368:	ubfiz	x1, x22, #1, #8
   1f36c:	ldrh	w0, [x0, x1]
   1f370:	tbnz	w0, #3, 1f37c <printf_parse@@Base+0x4b80>
   1f374:	cmp	w22, #0x5f
   1f378:	b	1f324 <printf_parse@@Base+0x4b28>
   1f37c:	mov	w1, #0x1                   	// #1
   1f380:	b	1f328 <printf_parse@@Base+0x4b2c>
   1f384:	sub	w22, w22, #0x73
   1f388:	cmp	w22, #0xa
   1f38c:	b.hi	1f350 <printf_parse@@Base+0x4b54>  // b.pmore
   1f390:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   1f394:	add	x0, x0, #0x288
   1f398:	ldrb	w0, [x0, w22, uxtw]
   1f39c:	adr	x1, 1f3a8 <printf_parse@@Base+0x4bac>
   1f3a0:	add	x0, x1, w0, sxtb #2
   1f3a4:	br	x0
   1f3a8:	cmp	w1, #0x1b
   1f3ac:	b.hi	1f350 <printf_parse@@Base+0x4b54>  // b.pmore
   1f3b0:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   1f3b4:	add	x0, x0, #0x294
   1f3b8:	ldrb	w0, [x0, w1, uxtw]
   1f3bc:	adr	x1, 1f3c8 <printf_parse@@Base+0x4bcc>
   1f3c0:	add	x0, x1, w0, sxtb #2
   1f3c4:	br	x0
   1f3c8:	cmp	w22, #0x7d
   1f3cc:	b.hi	1f350 <printf_parse@@Base+0x4b54>  // b.pmore
   1f3d0:	cmp	w22, #0x72
   1f3d4:	b.hi	1f384 <printf_parse@@Base+0x4b88>  // b.pmore
   1f3d8:	cmp	w22, #0x60
   1f3dc:	b.eq	1f4a8 <printf_parse@@Base+0x4cac>  // b.none
   1f3e0:	cmp	w22, #0x62
   1f3e4:	b.eq	1f45c <printf_parse@@Base+0x4c60>  // b.none
   1f3e8:	cmp	w22, #0x57
   1f3ec:	b.ne	1f350 <printf_parse@@Base+0x4b54>  // b.any
   1f3f0:	tbnz	w20, #19, 1f350 <printf_parse@@Base+0x4b54>
   1f3f4:	mov	w0, #0x21                  	// #33
   1f3f8:	b	1f40c <printf_parse@@Base+0x4c10>
   1f3fc:	mov	x0, #0x8400                	// #33792
   1f400:	tst	x20, x0
   1f404:	b.ne	1f350 <printf_parse@@Base+0x4b54>  // b.any
   1f408:	mov	w0, #0xa                   	// #10
   1f40c:	strb	w0, [x19, #8]
   1f410:	b	1f350 <printf_parse@@Base+0x4b54>
   1f414:	tbnz	w20, #14, 1f350 <printf_parse@@Base+0x4b54>
   1f418:	sub	w22, w22, #0x31
   1f41c:	mov	w0, #0x4                   	// #4
   1f420:	strb	w0, [x19, #8]
   1f424:	sxtw	x22, w22
   1f428:	str	x22, [x19]
   1f42c:	b	1f350 <printf_parse@@Base+0x4b54>
   1f430:	tbnz	w20, #19, 1f350 <printf_parse@@Base+0x4b54>
   1f434:	mov	w0, #0xc                   	// #12
   1f438:	strb	w0, [x19, #8]
   1f43c:	mov	w0, #0x6                   	// #6
   1f440:	str	w0, [x19]
   1f444:	b	1f350 <printf_parse@@Base+0x4b54>
   1f448:	tbnz	w20, #19, 1f350 <printf_parse@@Base+0x4b54>
   1f44c:	mov	w0, #0xc                   	// #12
   1f450:	strb	w0, [x19, #8]
   1f454:	mov	w0, #0x9                   	// #9
   1f458:	b	1f440 <printf_parse@@Base+0x4c44>
   1f45c:	tbnz	w20, #19, 1f350 <printf_parse@@Base+0x4b54>
   1f460:	mov	w0, #0xc                   	// #12
   1f464:	strb	w0, [x19, #8]
   1f468:	mov	w0, #0x100                 	// #256
   1f46c:	b	1f440 <printf_parse@@Base+0x4c44>
   1f470:	tbnz	w20, #19, 1f350 <printf_parse@@Base+0x4b54>
   1f474:	mov	w0, #0xc                   	// #12
   1f478:	strb	w0, [x19, #8]
   1f47c:	mov	w0, #0x200                 	// #512
   1f480:	b	1f440 <printf_parse@@Base+0x4c44>
   1f484:	tbnz	w20, #19, 1f350 <printf_parse@@Base+0x4b54>
   1f488:	mov	w0, #0x20                  	// #32
   1f48c:	b	1f40c <printf_parse@@Base+0x4c10>
   1f490:	tbnz	w20, #19, 1f350 <printf_parse@@Base+0x4b54>
   1f494:	mov	w0, #0x22                  	// #34
   1f498:	b	1f40c <printf_parse@@Base+0x4c10>
   1f49c:	tbnz	w20, #19, 1f350 <printf_parse@@Base+0x4b54>
   1f4a0:	mov	w0, #0x23                  	// #35
   1f4a4:	b	1f40c <printf_parse@@Base+0x4c10>
   1f4a8:	tbnz	w20, #19, 1f350 <printf_parse@@Base+0x4b54>
   1f4ac:	mov	w0, #0xc                   	// #12
   1f4b0:	strb	w0, [x19, #8]
   1f4b4:	mov	w0, #0x40                  	// #64
   1f4b8:	b	1f440 <printf_parse@@Base+0x4c44>
   1f4bc:	tbnz	w20, #19, 1f350 <printf_parse@@Base+0x4b54>
   1f4c0:	mov	w0, #0xc                   	// #12
   1f4c4:	strb	w0, [x19, #8]
   1f4c8:	mov	w0, #0x80                  	// #128
   1f4cc:	b	1f440 <printf_parse@@Base+0x4c44>
   1f4d0:	tbnz	w20, #13, 1f350 <printf_parse@@Base+0x4b54>
   1f4d4:	mov	w0, #0x8                   	// #8
   1f4d8:	b	1f40c <printf_parse@@Base+0x4c10>
   1f4dc:	tbnz	w20, #13, 1f350 <printf_parse@@Base+0x4b54>
   1f4e0:	mov	w0, #0x9                   	// #9
   1f4e4:	b	1f40c <printf_parse@@Base+0x4c10>
   1f4e8:	mov	x0, #0x402                 	// #1026
   1f4ec:	and	x0, x20, x0
   1f4f0:	cmp	x0, #0x2
   1f4f4:	b.ne	1f350 <printf_parse@@Base+0x4b54>  // b.any
   1f4f8:	mov	w1, #0x12                  	// #18
   1f4fc:	strb	w1, [x19, #8]
   1f500:	b	1f1d8 <printf_parse@@Base+0x49dc>
   1f504:	mov	x1, #0x402                 	// #1026
   1f508:	and	x0, x20, x1
   1f50c:	cmp	x0, #0x2
   1f510:	b.ne	1f350 <printf_parse@@Base+0x4b54>  // b.any
   1f514:	mov	w1, #0x13                  	// #19
   1f518:	b	1f4fc <printf_parse@@Base+0x4d00>
   1f51c:	mov	x0, #0x1200                	// #4608
   1f520:	and	x0, x20, x0
   1f524:	cmp	x0, #0x200
   1f528:	b.ne	1f350 <printf_parse@@Base+0x4b54>  // b.any
   1f52c:	mov	w0, #0x17                  	// #23
   1f530:	b	1f40c <printf_parse@@Base+0x4c10>
   1f534:	mov	x0, #0x1200                	// #4608
   1f538:	and	x0, x20, x0
   1f53c:	cmp	x0, #0x200
   1f540:	b.ne	1f350 <printf_parse@@Base+0x4b54>  // b.any
   1f544:	mov	w0, #0x18                  	// #24
   1f548:	b	1f40c <printf_parse@@Base+0x4c10>
   1f54c:	mov	w1, #0x1                   	// #1
   1f550:	strb	w1, [x19, #8]
   1f554:	ldrb	w24, [x19, #10]
   1f558:	cmp	w0, #0x1
   1f55c:	b.le	1f5b0 <printf_parse@@Base+0x4db4>
   1f560:	mov	x1, x25
   1f564:	mov	x0, x21
   1f568:	bl	1b2bc <printf_parse@@Base+0xac0>
   1f56c:	mov	w23, w0
   1f570:	bl	b370 <iswalnum@plt>
   1f574:	cbnz	w0, 1f5cc <printf_parse@@Base+0x4dd0>
   1f578:	cmp	w23, #0x5f
   1f57c:	cset	w2, eq  // eq = none
   1f580:	mov	w0, w24
   1f584:	cmp	w22, #0x2e
   1f588:	bfi	w0, w2, #6, #1
   1f58c:	strb	w0, [x19, #10]
   1f590:	b.hi	1f5f8 <printf_parse@@Base+0x4dfc>  // b.pmore
   1f594:	cmp	w22, #0x23
   1f598:	b.hi	1f5d4 <printf_parse@@Base+0x4dd8>  // b.pmore
   1f59c:	cmp	w22, #0xa
   1f5a0:	b.ne	1f254 <printf_parse@@Base+0x4a58>  // b.any
   1f5a4:	tbz	w20, #11, 1f254 <printf_parse@@Base+0x4a58>
   1f5a8:	mov	w0, #0xa                   	// #10
   1f5ac:	b	1f278 <printf_parse@@Base+0x4a7c>
   1f5b0:	bl	afc0 <__ctype_b_loc@plt>
   1f5b4:	ldr	x0, [x0]
   1f5b8:	ubfiz	x2, x22, #1, #8
   1f5bc:	ldrh	w0, [x0, x2]
   1f5c0:	tbnz	w0, #3, 1f5cc <printf_parse@@Base+0x4dd0>
   1f5c4:	cmp	w22, #0x5f
   1f5c8:	b	1f57c <printf_parse@@Base+0x4d80>
   1f5cc:	mov	w2, #0x1                   	// #1
   1f5d0:	b	1f580 <printf_parse@@Base+0x4d84>
   1f5d4:	sub	w22, w22, #0x24
   1f5d8:	cmp	w22, #0xa
   1f5dc:	b.hi	1f254 <printf_parse@@Base+0x4a58>  // b.pmore
   1f5e0:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   1f5e4:	add	x0, x0, #0x2b0
   1f5e8:	ldrh	w0, [x0, w22, uxtw #1]
   1f5ec:	adr	x1, 1f5f8 <printf_parse@@Base+0x4dfc>
   1f5f0:	add	x0, x1, w0, sxth #2
   1f5f4:	br	x0
   1f5f8:	cmp	w22, #0x7b
   1f5fc:	b.eq	1f684 <printf_parse@@Base+0x4e88>  // b.none
   1f600:	b.hi	1f630 <printf_parse@@Base+0x4e34>  // b.pmore
   1f604:	cmp	w22, #0x5b
   1f608:	b.eq	1f6b0 <printf_parse@@Base+0x4eb4>  // b.none
   1f60c:	cmp	w22, #0x5e
   1f610:	b.eq	1f6c0 <printf_parse@@Base+0x4ec4>  // b.none
   1f614:	cmp	w22, #0x3f
   1f618:	b.ne	1f254 <printf_parse@@Base+0x4a58>  // b.any
   1f61c:	mov	x0, #0x402                 	// #1026
   1f620:	tst	x20, x0
   1f624:	b.ne	1f254 <printf_parse@@Base+0x4a58>  // b.any
   1f628:	mov	w0, #0x13                  	// #19
   1f62c:	b	1f278 <printf_parse@@Base+0x4a7c>
   1f630:	cmp	w22, #0x7c
   1f634:	b.eq	1f654 <printf_parse@@Base+0x4e58>  // b.none
   1f638:	cmp	w22, #0x7d
   1f63c:	b.ne	1f254 <printf_parse@@Base+0x4a58>  // b.any
   1f640:	mov	x0, #0x1200                	// #4608
   1f644:	bics	xzr, x0, x20
   1f648:	b.ne	1f254 <printf_parse@@Base+0x4a58>  // b.any
   1f64c:	mov	w0, #0x18                  	// #24
   1f650:	b	1f278 <printf_parse@@Base+0x4a7c>
   1f654:	mov	x0, #0x8400                	// #33792
   1f658:	and	x0, x20, x0
   1f65c:	cmp	x0, #0x8, lsl #12
   1f660:	b.ne	1f254 <printf_parse@@Base+0x4a58>  // b.any
   1f664:	b	1f5a8 <printf_parse@@Base+0x4dac>
   1f668:	mov	w0, #0xb                   	// #11
   1f66c:	b	1f278 <printf_parse@@Base+0x4a7c>
   1f670:	mov	x0, #0x402                 	// #1026
   1f674:	tst	x20, x0
   1f678:	b.ne	1f254 <printf_parse@@Base+0x4a58>  // b.any
   1f67c:	mov	w0, #0x12                  	// #18
   1f680:	b	1f278 <printf_parse@@Base+0x4a7c>
   1f684:	mov	x0, #0x1200                	// #4608
   1f688:	bics	xzr, x0, x20
   1f68c:	b.ne	1f254 <printf_parse@@Base+0x4a58>  // b.any
   1f690:	mov	w0, #0x17                  	// #23
   1f694:	b	1f278 <printf_parse@@Base+0x4a7c>
   1f698:	tbz	w20, #13, 1f254 <printf_parse@@Base+0x4a58>
   1f69c:	mov	w0, #0x8                   	// #8
   1f6a0:	b	1f278 <printf_parse@@Base+0x4a7c>
   1f6a4:	tbz	w20, #13, 1f254 <printf_parse@@Base+0x4a58>
   1f6a8:	mov	w0, #0x9                   	// #9
   1f6ac:	b	1f278 <printf_parse@@Base+0x4a7c>
   1f6b0:	mov	w0, #0x14                  	// #20
   1f6b4:	b	1f278 <printf_parse@@Base+0x4a7c>
   1f6b8:	mov	w0, #0x5                   	// #5
   1f6bc:	b	1f278 <printf_parse@@Base+0x4a7c>
   1f6c0:	and	x0, x20, #0xfffff8
   1f6c4:	and	x0, x0, #0xffffffffff80000f
   1f6c8:	cbnz	x0, 1f6e4 <printf_parse@@Base+0x4ee8>
   1f6cc:	cbz	x25, 1f6e4 <printf_parse@@Base+0x4ee8>
   1f6d0:	add	x1, x26, x25
   1f6d4:	ldurb	w0, [x1, #-1]
   1f6d8:	tbz	w20, #11, 1f254 <printf_parse@@Base+0x4a58>
   1f6dc:	cmp	w0, #0xa
   1f6e0:	b.ne	1f254 <printf_parse@@Base+0x4a58>  // b.any
   1f6e4:	mov	w0, #0xc                   	// #12
   1f6e8:	strb	w0, [x19, #8]
   1f6ec:	mov	w0, #0x10                  	// #16
   1f6f0:	str	w0, [x19]
   1f6f4:	b	1f254 <printf_parse@@Base+0x4a58>
   1f6f8:	tbnz	w20, #3, 1f740 <printf_parse@@Base+0x4f44>
   1f6fc:	ldr	x0, [x21, #88]
   1f700:	add	x1, x25, #0x1
   1f704:	cmp	x1, x0
   1f708:	b.eq	1f740 <printf_parse@@Base+0x4f44>  // b.none
   1f70c:	str	x1, [x21, #72]
   1f710:	mov	x2, x20
   1f714:	add	x0, sp, #0x50
   1f718:	mov	x1, x21
   1f71c:	bl	1f1a0 <printf_parse@@Base+0x49a4>
   1f720:	ldr	x0, [x21, #72]
   1f724:	sub	x0, x0, #0x1
   1f728:	str	x0, [x21, #72]
   1f72c:	ldrb	w0, [sp, #88]
   1f730:	sub	w0, w0, #0x9
   1f734:	and	w0, w0, #0xff
   1f738:	cmp	w0, #0x1
   1f73c:	b.hi	1f254 <printf_parse@@Base+0x4a58>  // b.pmore
   1f740:	mov	w0, #0xc                   	// #12
   1f744:	strb	w0, [x19, #8]
   1f748:	mov	w0, #0x20                  	// #32
   1f74c:	b	1f6f0 <printf_parse@@Base+0x4ef4>
   1f750:	stp	x29, x30, [sp, #-32]!
   1f754:	mov	x29, sp
   1f758:	str	x19, [sp, #16]
   1f75c:	mov	x19, x1
   1f760:	bl	1f1a0 <printf_parse@@Base+0x49a4>
   1f764:	ldr	x1, [x19, #72]
   1f768:	add	x0, x1, w0, sxtw
   1f76c:	str	x0, [x19, #72]
   1f770:	ldr	x19, [sp, #16]
   1f774:	ldp	x29, x30, [sp], #32
   1f778:	ret
   1f77c:	stp	x29, x30, [sp, #-64]!
   1f780:	mov	x29, sp
   1f784:	stp	x19, x20, [sp, #16]
   1f788:	mov	x20, x1
   1f78c:	mov	x19, #0xffffffffffffffff    	// #-1
   1f790:	stp	x21, x22, [sp, #32]
   1f794:	mov	x21, x0
   1f798:	mov	x22, x2
   1f79c:	stp	x23, x24, [sp, #48]
   1f7a0:	mov	x24, #0xa                   	// #10
   1f7a4:	mov	x23, #0x8030                	// #32816
   1f7a8:	mov	x0, x20
   1f7ac:	mov	x2, x22
   1f7b0:	mov	x1, x21
   1f7b4:	bl	1f750 <printf_parse@@Base+0x4f54>
   1f7b8:	ldrb	w0, [x20, #8]
   1f7bc:	ldrb	w3, [x20]
   1f7c0:	cmp	w0, #0x2
   1f7c4:	b.eq	1f828 <printf_parse@@Base+0x502c>  // b.none
   1f7c8:	cmp	w0, #0x18
   1f7cc:	b.eq	1f82c <printf_parse@@Base+0x5030>  // b.none
   1f7d0:	cmp	w3, #0x2c
   1f7d4:	b.eq	1f82c <printf_parse@@Base+0x5030>  // b.none
   1f7d8:	cmp	w0, #0x1
   1f7dc:	b.ne	1f808 <printf_parse@@Base+0x500c>  // b.any
   1f7e0:	sub	w0, w3, #0x30
   1f7e4:	and	w1, w0, #0xff
   1f7e8:	cmp	w1, #0x9
   1f7ec:	b.hi	1f808 <printf_parse@@Base+0x500c>  // b.pmore
   1f7f0:	cmn	x19, #0x2
   1f7f4:	b.eq	1f7a8 <printf_parse@@Base+0x4fac>  // b.none
   1f7f8:	cmn	x19, #0x1
   1f7fc:	b.ne	1f810 <printf_parse@@Base+0x5014>  // b.any
   1f800:	sxtw	x19, w0
   1f804:	b	1f7a8 <printf_parse@@Base+0x4fac>
   1f808:	mov	x19, #0xfffffffffffffffe    	// #-2
   1f80c:	b	1f7a8 <printf_parse@@Base+0x4fac>
   1f810:	and	x3, x3, #0xff
   1f814:	madd	x19, x19, x24, x3
   1f818:	cmp	x19, x23
   1f81c:	csel	x19, x19, x23, le
   1f820:	sub	x19, x19, #0x30
   1f824:	b	1f7a8 <printf_parse@@Base+0x4fac>
   1f828:	mov	x19, #0xfffffffffffffffe    	// #-2
   1f82c:	mov	x0, x19
   1f830:	ldp	x19, x20, [sp, #16]
   1f834:	ldp	x21, x22, [sp, #32]
   1f838:	ldp	x23, x24, [sp, #48]
   1f83c:	ldp	x29, x30, [sp], #64
   1f840:	ret
   1f844:	stp	x29, x30, [sp, #-256]!
   1f848:	mov	x29, sp
   1f84c:	stp	x19, x20, [sp, #16]
   1f850:	stp	x21, x22, [sp, #32]
   1f854:	mov	x21, x0
   1f858:	mov	x0, #0x3800                	// #14336
   1f85c:	stp	x23, x24, [sp, #48]
   1f860:	stp	x25, x26, [sp, #64]
   1f864:	stp	x27, x28, [sp, #80]
   1f868:	str	x1, [sp, #104]
   1f86c:	bl	aab0 <malloc@plt>
   1f870:	cbnz	x0, 1f87c <printf_parse@@Base+0x5080>
   1f874:	mov	w0, #0x0                   	// #0
   1f878:	b	1f8f4 <printf_parse@@Base+0x50f8>
   1f87c:	mov	x22, x0
   1f880:	mov	x0, #0x1800                	// #6144
   1f884:	add	x26, x22, x0
   1f888:	add	x20, sp, #0xa0
   1f88c:	ldr	x0, [sp, #104]
   1f890:	add	x24, sp, #0xc0
   1f894:	add	x28, sp, #0xe0
   1f898:	mov	x19, #0x0                   	// #0
   1f89c:	stp	xzr, xzr, [x0, #88]
   1f8a0:	mov	x0, x20
   1f8a4:	bl	1bab8 <printf_parse@@Base+0x12bc>
   1f8a8:	str	xzr, [sp, #112]
   1f8ac:	ldr	x0, [sp, #104]
   1f8b0:	add	x27, x0, #0x8
   1f8b4:	ldr	x0, [x27, #8]
   1f8b8:	ldr	x1, [sp, #112]
   1f8bc:	cmp	x1, x0
   1f8c0:	b.lt	1f910 <printf_parse@@Base+0x5114>  // b.tstop
   1f8c4:	cmp	x19, #0x0
   1f8c8:	b.gt	1fd04 <printf_parse@@Base+0x5508>
   1f8cc:	mov	x0, x22
   1f8d0:	bl	b050 <free@plt>
   1f8d4:	cbnz	x19, 1f874 <printf_parse@@Base+0x5078>
   1f8d8:	mov	x1, #0x100                 	// #256
   1f8dc:	mov	x0, #0x8                   	// #8
   1f8e0:	bl	ace0 <calloc@plt>
   1f8e4:	cmp	x0, #0x0
   1f8e8:	ldr	x1, [sp, #104]
   1f8ec:	str	x0, [x1, #88]
   1f8f0:	cset	w0, ne  // ne = any
   1f8f4:	ldp	x19, x20, [sp, #16]
   1f8f8:	ldp	x21, x22, [sp, #32]
   1f8fc:	ldp	x23, x24, [sp, #48]
   1f900:	ldp	x25, x26, [sp, #64]
   1f904:	ldp	x27, x28, [sp, #80]
   1f908:	ldp	x29, x30, [sp], #256
   1f90c:	ret
   1f910:	ldr	x0, [sp, #112]
   1f914:	lsl	x0, x0, #3
   1f918:	str	x0, [sp, #120]
   1f91c:	ldr	x0, [x27, #16]
   1f920:	ldr	x1, [sp, #120]
   1f924:	ldr	x23, [x0, x1]
   1f928:	ldr	x0, [x21]
   1f92c:	lsl	x1, x23, #4
   1f930:	add	x23, x0, x23, lsl #4
   1f934:	ldr	w5, [x23, #8]
   1f938:	ldrb	w25, [x23, #8]
   1f93c:	ubfx	x5, x5, #8, #10
   1f940:	cmp	w25, #0x1
   1f944:	b.ne	1f98c <printf_parse@@Base+0x5190>  // b.any
   1f948:	ldrb	w1, [x0, x1]
   1f94c:	mov	x0, x20
   1f950:	bl	1b234 <printf_parse@@Base+0xa38>
   1f954:	cbz	w5, 1fa34 <printf_parse@@Base+0x5238>
   1f958:	tbz	w5, #5, 1f97c <printf_parse@@Base+0x5180>
   1f95c:	ldr	x1, [sp, #160]
   1f960:	mov	x0, x20
   1f964:	ubfx	w1, w1, #10, #1
   1f968:	bl	1bab8 <printf_parse@@Base+0x12bc>
   1f96c:	cbz	w1, 1fa9c <printf_parse@@Base+0x52a0>
   1f970:	ldr	x0, [sp, #160]
   1f974:	orr	x0, x0, #0x400
   1f978:	str	x0, [sp, #160]
   1f97c:	tbz	w5, #7, 1fa2c <printf_parse@@Base+0x5230>
   1f980:	mov	x0, x20
   1f984:	bl	1bab8 <printf_parse@@Base+0x12bc>
   1f988:	b	1fa9c <printf_parse@@Base+0x52a0>
   1f98c:	cmp	w25, #0x3
   1f990:	b.ne	1f9a4 <printf_parse@@Base+0x51a8>  // b.any
   1f994:	ldr	x1, [x0, x1]
   1f998:	mov	x0, x20
   1f99c:	bl	1b274 <printf_parse@@Base+0xa78>
   1f9a0:	b	1f954 <printf_parse@@Base+0x5158>
   1f9a4:	cmp	w25, #0x5
   1f9a8:	b.ne	1fa00 <printf_parse@@Base+0x5204>  // b.any
   1f9ac:	ldr	w0, [x21, #180]
   1f9b0:	cmp	w0, #0x1
   1f9b4:	b.le	1f9ec <printf_parse@@Base+0x51f0>
   1f9b8:	ldr	x1, [x21, #120]
   1f9bc:	mov	x0, x20
   1f9c0:	bl	1b274 <printf_parse@@Base+0xa78>
   1f9c4:	ldr	x1, [x21, #216]
   1f9c8:	tbnz	w1, #6, 1f9d8 <printf_parse@@Base+0x51dc>
   1f9cc:	ldr	x0, [sp, #160]
   1f9d0:	and	x0, x0, #0xfffffffffffffbff
   1f9d4:	str	x0, [sp, #160]
   1f9d8:	tbz	w1, #7, 1f954 <printf_parse@@Base+0x5158>
   1f9dc:	ldr	x0, [sp, #160]
   1f9e0:	and	x0, x0, #0xfffffffffffffffe
   1f9e4:	str	x0, [sp, #160]
   1f9e8:	b	1f954 <printf_parse@@Base+0x5158>
   1f9ec:	mov	x0, #0xffffffffffffffff    	// #-1
   1f9f0:	mov	x1, #0xffffffffffffffff    	// #-1
   1f9f4:	stp	x0, x1, [x20]
   1f9f8:	stp	x0, x1, [x20, #16]
   1f9fc:	b	1f9c4 <printf_parse@@Base+0x51c8>
   1fa00:	cmp	w25, #0x7
   1fa04:	b.ne	1fa9c <printf_parse@@Base+0x52a0>  // b.any
   1fa08:	mov	x0, #0xffffffffffffffff    	// #-1
   1fa0c:	mov	x1, #0xffffffffffffffff    	// #-1
   1fa10:	stp	x0, x1, [x20]
   1fa14:	ldr	x0, [x21, #216]
   1fa18:	tbnz	w0, #6, 1fa24 <printf_parse@@Base+0x5228>
   1fa1c:	mov	x1, #0xfffffffffffffbff    	// #-1025
   1fa20:	str	x1, [sp, #160]
   1fa24:	tbz	w0, #7, 1f954 <printf_parse@@Base+0x5158>
   1fa28:	b	1f9dc <printf_parse@@Base+0x51e0>
   1fa2c:	tbnz	w5, #2, 1fa40 <printf_parse@@Base+0x5244>
   1fa30:	tbnz	w5, #3, 1fadc <printf_parse@@Base+0x52e0>
   1fa34:	mov	x3, x26
   1fa38:	mov	x2, #0x0                   	// #0
   1fa3c:	b	1fc8c <printf_parse@@Base+0x5490>
   1fa40:	cmp	w25, #0x1
   1fa44:	b.ne	1fa50 <printf_parse@@Base+0x5254>  // b.any
   1fa48:	ldrb	w0, [x23, #10]
   1fa4c:	tbz	w0, #6, 1f980 <printf_parse@@Base+0x5184>
   1fa50:	ldr	w0, [x21, #180]
   1fa54:	add	x4, x21, #0xb8
   1fa58:	cmp	w0, #0x1
   1fa5c:	b.le	1faac <printf_parse@@Base+0x52b0>
   1fa60:	ldr	x7, [x21, #120]
   1fa64:	mov	x3, x20
   1fa68:	mov	x0, #0x0                   	// #0
   1fa6c:	mov	x2, #0x0                   	// #0
   1fa70:	ldr	x1, [x7, x2, lsl #3]
   1fa74:	ldr	x6, [x4, x2, lsl #3]
   1fa78:	add	x2, x2, #0x1
   1fa7c:	cmp	x2, #0x4
   1fa80:	orn	x1, x6, x1
   1fa84:	ldr	x6, [x3]
   1fa88:	and	x1, x1, x6
   1fa8c:	str	x1, [x3], #8
   1fa90:	orr	x0, x0, x1
   1fa94:	b.ne	1fa70 <printf_parse@@Base+0x5274>  // b.any
   1fa98:	cbnz	x0, 1fa30 <printf_parse@@Base+0x5234>
   1fa9c:	ldr	x0, [sp, #112]
   1faa0:	add	x0, x0, #0x1
   1faa4:	str	x0, [sp, #112]
   1faa8:	b	1f8b4 <printf_parse@@Base+0x50b8>
   1faac:	mov	x3, x20
   1fab0:	mov	x0, #0x0                   	// #0
   1fab4:	mov	x1, #0x0                   	// #0
   1fab8:	ldr	x2, [x4, x1, lsl #3]
   1fabc:	add	x1, x1, #0x1
   1fac0:	ldr	x6, [x3]
   1fac4:	cmp	x1, #0x4
   1fac8:	and	x2, x2, x6
   1facc:	str	x2, [x3], #8
   1fad0:	orr	x0, x0, x2
   1fad4:	b.ne	1fab8 <printf_parse@@Base+0x52bc>  // b.any
   1fad8:	b	1fa98 <printf_parse@@Base+0x529c>
   1fadc:	cmp	w25, #0x1
   1fae0:	b.ne	1faec <printf_parse@@Base+0x52f0>  // b.any
   1fae4:	ldrb	w0, [x23, #10]
   1fae8:	tbnz	w0, #6, 1f980 <printf_parse@@Base+0x5184>
   1faec:	ldr	w0, [x21, #180]
   1faf0:	add	x4, x21, #0xb8
   1faf4:	cmp	w0, #0x1
   1faf8:	b.le	1fb3c <printf_parse@@Base+0x5340>
   1fafc:	ldr	x6, [x21, #120]
   1fb00:	mov	x3, x20
   1fb04:	mov	x0, #0x0                   	// #0
   1fb08:	mov	x2, #0x0                   	// #0
   1fb0c:	ldr	x5, [x6, x2, lsl #3]
   1fb10:	ldr	x1, [x4, x2, lsl #3]
   1fb14:	add	x2, x2, #0x1
   1fb18:	cmp	x2, #0x4
   1fb1c:	and	x1, x1, x5
   1fb20:	ldr	x5, [x3]
   1fb24:	bic	x1, x5, x1
   1fb28:	str	x1, [x3], #8
   1fb2c:	orr	x0, x0, x1
   1fb30:	b.ne	1fb0c <printf_parse@@Base+0x5310>  // b.any
   1fb34:	cbz	x0, 1fa9c <printf_parse@@Base+0x52a0>
   1fb38:	b	1fa34 <printf_parse@@Base+0x5238>
   1fb3c:	mov	x3, x20
   1fb40:	mov	x0, #0x0                   	// #0
   1fb44:	mov	x1, #0x0                   	// #0
   1fb48:	ldr	x2, [x4, x1, lsl #3]
   1fb4c:	add	x1, x1, #0x1
   1fb50:	ldr	x5, [x3]
   1fb54:	cmp	x1, #0x4
   1fb58:	bic	x2, x5, x2
   1fb5c:	str	x2, [x3], #8
   1fb60:	orr	x0, x0, x2
   1fb64:	b.ne	1fb48 <printf_parse@@Base+0x534c>  // b.any
   1fb68:	b	1fb34 <printf_parse@@Base+0x5338>
   1fb6c:	lsl	x4, x2, #5
   1fb70:	cmp	w25, #0x1
   1fb74:	b.ne	1fb94 <printf_parse@@Base+0x5398>  // b.any
   1fb78:	ldrb	w0, [x23]
   1fb7c:	ldrb	w1, [x23]
   1fb80:	asr	x0, x0, #6
   1fb84:	add	x0, x26, x0, lsl #3
   1fb88:	ldr	x0, [x0, x4]
   1fb8c:	lsr	x0, x0, x1
   1fb90:	tbz	w0, #0, 1fc84 <printf_parse@@Base+0x5488>
   1fb94:	mov	x4, #0x0                   	// #0
   1fb98:	mov	x0, #0x0                   	// #0
   1fb9c:	ldr	x5, [x3, x0, lsl #3]
   1fba0:	ldr	x1, [x20, x0, lsl #3]
   1fba4:	and	x1, x1, x5
   1fba8:	str	x1, [x24, x0, lsl #3]
   1fbac:	add	x0, x0, #0x1
   1fbb0:	orr	x4, x4, x1
   1fbb4:	cmp	x0, #0x4
   1fbb8:	b.ne	1fb9c <printf_parse@@Base+0x53a0>  // b.any
   1fbbc:	cbz	x4, 1fc84 <printf_parse@@Base+0x5488>
   1fbc0:	mov	x5, x20
   1fbc4:	mov	x6, #0x0                   	// #0
   1fbc8:	mov	x4, #0x0                   	// #0
   1fbcc:	mov	x0, #0x0                   	// #0
   1fbd0:	ldr	x1, [x3, x0, lsl #3]
   1fbd4:	ldr	x7, [x5]
   1fbd8:	bic	x8, x1, x7
   1fbdc:	bic	x1, x7, x1
   1fbe0:	str	x8, [x28, x0, lsl #3]
   1fbe4:	add	x0, x0, #0x1
   1fbe8:	str	x1, [x5], #8
   1fbec:	orr	x4, x4, x8
   1fbf0:	orr	x6, x6, x1
   1fbf4:	cmp	x0, #0x4
   1fbf8:	b.ne	1fbd0 <printf_parse@@Base+0x53d4>  // b.any
   1fbfc:	mov	x0, #0x18                  	// #24
   1fc00:	madd	x7, x2, x0, x22
   1fc04:	cbz	x4, 1fc54 <printf_parse@@Base+0x5458>
   1fc08:	add	x0, x26, x19, lsl #5
   1fc0c:	stp	x7, x3, [sp, #128]
   1fc10:	ldp	x4, x5, [x28]
   1fc14:	stp	x4, x5, [x0]
   1fc18:	ldp	x4, x5, [x28, #16]
   1fc1c:	stp	x4, x5, [x0, #16]
   1fc20:	ldp	x0, x1, [x24]
   1fc24:	stp	x0, x1, [x3]
   1fc28:	ldp	x0, x1, [x24, #16]
   1fc2c:	stp	x0, x1, [x3, #16]
   1fc30:	mov	x1, x7
   1fc34:	stp	x2, x6, [sp, #144]
   1fc38:	mov	x0, #0x18                  	// #24
   1fc3c:	madd	x0, x19, x0, x22
   1fc40:	bl	1e6e0 <printf_parse@@Base+0x3ee4>
   1fc44:	cbnz	w0, 1fcd4 <printf_parse@@Base+0x54d8>
   1fc48:	ldp	x7, x3, [sp, #128]
   1fc4c:	add	x19, x19, #0x1
   1fc50:	ldp	x2, x6, [sp, #144]
   1fc54:	stp	x2, x6, [sp, #128]
   1fc58:	ldr	x0, [x27, #16]
   1fc5c:	str	x3, [sp, #144]
   1fc60:	ldr	x1, [sp, #120]
   1fc64:	ldr	x1, [x0, x1]
   1fc68:	mov	x0, x7
   1fc6c:	bl	1de7c <printf_parse@@Base+0x3680>
   1fc70:	tst	w0, #0xff
   1fc74:	b.eq	1fcd4 <printf_parse@@Base+0x54d8>  // b.none
   1fc78:	ldp	x2, x6, [sp, #128]
   1fc7c:	ldr	x3, [sp, #144]
   1fc80:	cbz	x6, 1fc94 <printf_parse@@Base+0x5498>
   1fc84:	add	x2, x2, #0x1
   1fc88:	add	x3, x3, #0x20
   1fc8c:	cmp	x2, x19
   1fc90:	b.lt	1fb6c <printf_parse@@Base+0x5370>  // b.tstop
   1fc94:	cmp	x2, x19
   1fc98:	b.ne	1fa9c <printf_parse@@Base+0x52a0>  // b.any
   1fc9c:	add	x0, x26, x19, lsl #5
   1fca0:	ldp	x2, x3, [x20]
   1fca4:	stp	x2, x3, [x0]
   1fca8:	ldp	x2, x3, [x20, #16]
   1fcac:	stp	x2, x3, [x0, #16]
   1fcb0:	ldr	x0, [x27, #16]
   1fcb4:	ldr	x1, [sp, #120]
   1fcb8:	ldr	x1, [x0, x1]
   1fcbc:	mov	x0, #0x18                  	// #24
   1fcc0:	madd	x0, x19, x0, x22
   1fcc4:	bl	1bac4 <printf_parse@@Base+0x12c8>
   1fcc8:	cbnz	w0, 1fcd4 <printf_parse@@Base+0x54d8>
   1fccc:	add	x19, x19, #0x1
   1fcd0:	b	1f980 <printf_parse@@Base+0x5184>
   1fcd4:	add	x21, x22, #0x10
   1fcd8:	mov	x20, #0x0                   	// #0
   1fcdc:	mov	x23, #0x18                  	// #24
   1fce0:	cmp	x20, x19
   1fce4:	b.ne	1fcf0 <printf_parse@@Base+0x54f4>  // b.any
   1fce8:	mov	x19, #0xffffffffffffffff    	// #-1
   1fcec:	b	1f8cc <printf_parse@@Base+0x50d0>
   1fcf0:	mul	x0, x20, x23
   1fcf4:	add	x20, x20, #0x1
   1fcf8:	ldr	x0, [x21, x0]
   1fcfc:	bl	b050 <free@plt>
   1fd00:	b	1fce0 <printf_parse@@Base+0x54e4>
   1fd04:	add	x23, sp, #0xc0
   1fd08:	add	x1, x19, #0x1
   1fd0c:	mov	x0, x23
   1fd10:	bl	1bb10 <printf_parse@@Base+0x1314>
   1fd14:	str	w0, [sp, #160]
   1fd18:	cbnz	w0, 1fd48 <printf_parse@@Base+0x554c>
   1fd1c:	mov	x0, #0xa855                	// #43093
   1fd20:	movk	x0, #0xaaaa, lsl #16
   1fd24:	movk	x0, #0xaaaa, lsl #32
   1fd28:	movk	x0, #0xaaa, lsl #48
   1fd2c:	cmp	x19, x0
   1fd30:	b.gt	1fd48 <printf_parse@@Base+0x554c>
   1fd34:	mov	x0, #0x18                  	// #24
   1fd38:	mul	x0, x19, x0
   1fd3c:	bl	aab0 <malloc@plt>
   1fd40:	mov	x27, x0
   1fd44:	cbnz	x0, 1fd80 <printf_parse@@Base+0x5584>
   1fd48:	ldr	x0, [sp, #208]
   1fd4c:	add	x21, x22, #0x10
   1fd50:	mov	x20, #0x0                   	// #0
   1fd54:	mov	x23, #0x18                  	// #24
   1fd58:	bl	b050 <free@plt>
   1fd5c:	mul	x0, x20, x23
   1fd60:	add	x20, x20, #0x1
   1fd64:	ldr	x0, [x21, x0]
   1fd68:	bl	b050 <free@plt>
   1fd6c:	cmp	x20, x19
   1fd70:	b.ne	1fd5c <printf_parse@@Base+0x5560>  // b.any
   1fd74:	mov	x0, x22
   1fd78:	bl	b050 <free@plt>
   1fd7c:	b	1f874 <printf_parse@@Base+0x5078>
   1fd80:	add	x25, x0, x19, lsl #3
   1fd84:	add	x0, x0, x19, lsl #4
   1fd88:	add	x28, x22, #0x8
   1fd8c:	str	x0, [sp, #128]
   1fd90:	add	x0, sp, #0xe0
   1fd94:	str	x0, [sp, #120]
   1fd98:	bl	1bab8 <printf_parse@@Base+0x12bc>
   1fd9c:	mov	x24, #0x0                   	// #0
   1fda0:	mov	x0, #0x18                  	// #24
   1fda4:	str	wzr, [sp, #112]
   1fda8:	str	x0, [sp, #136]
   1fdac:	mov	x2, #0x0                   	// #0
   1fdb0:	str	xzr, [sp, #200]
   1fdb4:	ldr	x0, [x28]
   1fdb8:	cmp	x0, x2
   1fdbc:	b.gt	1ff38 <printf_parse@@Base+0x573c>
   1fdc0:	mov	x2, x23
   1fdc4:	mov	x1, x21
   1fdc8:	mov	x0, x20
   1fdcc:	mov	w3, #0x0                   	// #0
   1fdd0:	bl	1e8ac <printf_parse@@Base+0x40b0>
   1fdd4:	str	x0, [x27, x24, lsl #3]
   1fdd8:	cbnz	x0, 1fde4 <printf_parse@@Base+0x55e8>
   1fddc:	ldr	w1, [sp, #160]
   1fde0:	cbnz	w1, 1ff7c <printf_parse@@Base+0x5780>
   1fde4:	ldrsb	w1, [x0, #104]
   1fde8:	tbz	w1, #31, 1ff88 <printf_parse@@Base+0x578c>
   1fdec:	mov	x2, x23
   1fdf0:	mov	x1, x21
   1fdf4:	mov	x0, x20
   1fdf8:	mov	w3, #0x1                   	// #1
   1fdfc:	bl	1e8ac <printf_parse@@Base+0x40b0>
   1fe00:	str	x0, [x25, x24, lsl #3]
   1fe04:	cbnz	x0, 1fe10 <printf_parse@@Base+0x5614>
   1fe08:	ldr	w1, [sp, #160]
   1fe0c:	cbnz	w1, 1ff7c <printf_parse@@Base+0x5780>
   1fe10:	ldr	x1, [x27, x24, lsl #3]
   1fe14:	cmp	x0, x1
   1fe18:	b.eq	1fe30 <printf_parse@@Base+0x5634>  // b.none
   1fe1c:	ldr	w0, [x21, #180]
   1fe20:	cmp	w0, #0x2
   1fe24:	ldr	w0, [sp, #112]
   1fe28:	csinc	w0, w0, wzr, lt  // lt = tstop
   1fe2c:	str	w0, [sp, #112]
   1fe30:	mov	x1, x21
   1fe34:	mov	x2, x23
   1fe38:	mov	x0, x20
   1fe3c:	mov	w3, #0x2                   	// #2
   1fe40:	bl	1e8ac <printf_parse@@Base+0x40b0>
   1fe44:	ldr	x1, [sp, #128]
   1fe48:	str	x0, [x1, x24, lsl #3]
   1fe4c:	cbnz	x0, 1fe58 <printf_parse@@Base+0x565c>
   1fe50:	ldr	w0, [sp, #160]
   1fe54:	cbnz	w0, 1ff7c <printf_parse@@Base+0x5780>
   1fe58:	ldr	x0, [sp, #120]
   1fe5c:	add	x1, x26, x24, lsl #5
   1fe60:	add	x24, x24, #0x1
   1fe64:	add	x28, x28, #0x18
   1fe68:	bl	1b274 <printf_parse@@Base+0xa78>
   1fe6c:	cmp	x24, x19
   1fe70:	b.ne	1fdac <printf_parse@@Base+0x55b0>  // b.any
   1fe74:	ldr	w0, [sp, #112]
   1fe78:	cbnz	w0, 1fff0 <printf_parse@@Base+0x57f4>
   1fe7c:	mov	x1, #0x100                 	// #256
   1fe80:	mov	x0, #0x8                   	// #8
   1fe84:	bl	ace0 <calloc@plt>
   1fe88:	ldr	x1, [sp, #104]
   1fe8c:	str	x0, [x1, #88]
   1fe90:	cbz	x0, 1ff7c <printf_parse@@Base+0x5780>
   1fe94:	add	x21, x21, #0xb8
   1fe98:	mov	x1, #0x0                   	// #0
   1fe9c:	ldr	x2, [sp, #120]
   1fea0:	lsl	x6, x1, #3
   1fea4:	mov	x5, #0x1                   	// #1
   1fea8:	ldr	x3, [x2, x1]
   1feac:	cbnz	x3, 1ff9c <printf_parse@@Base+0x57a0>
   1feb0:	add	x1, x1, #0x8
   1feb4:	cmp	x1, #0x20
   1feb8:	b.ne	1fe9c <printf_parse@@Base+0x56a0>  // b.any
   1febc:	ldr	x1, [sp, #224]
   1fec0:	tst	w1, #0x400
   1fec4:	b.eq	1fef4 <printf_parse@@Base+0x56f8>  // b.none
   1fec8:	mov	x1, #0x0                   	// #0
   1fecc:	lsl	x2, x1, #5
   1fed0:	ldr	x2, [x26, x2]
   1fed4:	tst	w2, #0x400
   1fed8:	b.eq	20078 <printf_parse@@Base+0x587c>  // b.none
   1fedc:	ldr	x2, [sp, #128]
   1fee0:	ldr	x1, [x2, x1, lsl #3]
   1fee4:	str	x1, [x0, #80]
   1fee8:	ldr	w2, [sp, #112]
   1feec:	cbz	w2, 1fef4 <printf_parse@@Base+0x56f8>
   1fef0:	str	x1, [x0, #2128]
   1fef4:	mov	x0, x27
   1fef8:	bl	b050 <free@plt>
   1fefc:	ldr	x0, [sp, #208]
   1ff00:	add	x23, x22, #0x10
   1ff04:	mov	x20, #0x0                   	// #0
   1ff08:	mov	x21, #0x18                  	// #24
   1ff0c:	bl	b050 <free@plt>
   1ff10:	mul	x0, x20, x21
   1ff14:	add	x20, x20, #0x1
   1ff18:	ldr	x0, [x23, x0]
   1ff1c:	bl	b050 <free@plt>
   1ff20:	cmp	x20, x19
   1ff24:	b.ne	1ff10 <printf_parse@@Base+0x5714>  // b.any
   1ff28:	mov	x0, x22
   1ff2c:	bl	b050 <free@plt>
   1ff30:	mov	w0, #0x1                   	// #1
   1ff34:	b	1f8f4 <printf_parse@@Base+0x50f8>
   1ff38:	ldr	x0, [x28, #8]
   1ff3c:	ldr	x1, [x0, x2, lsl #3]
   1ff40:	ldr	x0, [x21, #24]
   1ff44:	ldr	x0, [x0, x1, lsl #3]
   1ff48:	cmn	x0, #0x1
   1ff4c:	b.ne	1ff58 <printf_parse@@Base+0x575c>  // b.any
   1ff50:	add	x2, x2, #0x1
   1ff54:	b	1fdb4 <printf_parse@@Base+0x55b8>
   1ff58:	str	x2, [sp, #144]
   1ff5c:	ldr	x1, [x21, #48]
   1ff60:	ldr	x2, [sp, #136]
   1ff64:	madd	x1, x0, x2, x1
   1ff68:	mov	x0, x23
   1ff6c:	bl	1e370 <printf_parse@@Base+0x3b74>
   1ff70:	str	w0, [sp, #160]
   1ff74:	ldr	x2, [sp, #144]
   1ff78:	cbz	w0, 1ff50 <printf_parse@@Base+0x5754>
   1ff7c:	mov	x0, x27
   1ff80:	bl	b050 <free@plt>
   1ff84:	b	1fd48 <printf_parse@@Base+0x554c>
   1ff88:	ldr	x1, [sp, #128]
   1ff8c:	str	x0, [x25, x24, lsl #3]
   1ff90:	ldr	x0, [x27, x24, lsl #3]
   1ff94:	str	x0, [x1, x24, lsl #3]
   1ff98:	b	1fe58 <printf_parse@@Base+0x565c>
   1ff9c:	tbz	w3, #0, 1ffd0 <printf_parse@@Base+0x57d4>
   1ffa0:	add	x7, x22, x1
   1ffa4:	mov	x2, #0x0                   	// #0
   1ffa8:	ldr	x8, [x7, #6144]
   1ffac:	add	x7, x7, #0x20
   1ffb0:	tst	x5, x8
   1ffb4:	b.eq	1ffe0 <printf_parse@@Base+0x57e4>  // b.none
   1ffb8:	ldr	x7, [x21, x1]
   1ffbc:	lsl	x2, x2, #3
   1ffc0:	tst	x5, x7
   1ffc4:	b.eq	1ffe8 <printf_parse@@Base+0x57ec>  // b.none
   1ffc8:	ldr	x2, [x25, x2]
   1ffcc:	str	x2, [x0, x6, lsl #3]
   1ffd0:	lsl	x5, x5, #1
   1ffd4:	lsr	x3, x3, #1
   1ffd8:	add	x6, x6, #0x1
   1ffdc:	b	1feac <printf_parse@@Base+0x56b0>
   1ffe0:	add	x2, x2, #0x1
   1ffe4:	b	1ffa8 <printf_parse@@Base+0x57ac>
   1ffe8:	ldr	x2, [x27, x2]
   1ffec:	b	1ffcc <printf_parse@@Base+0x57d0>
   1fff0:	mov	x1, #0x200                 	// #512
   1fff4:	mov	x0, #0x8                   	// #8
   1fff8:	bl	ace0 <calloc@plt>
   1fffc:	ldr	x1, [sp, #104]
   20000:	str	x0, [x1, #96]
   20004:	cbz	x0, 1ff7c <printf_parse@@Base+0x5780>
   20008:	mov	x1, #0x0                   	// #0
   2000c:	ldr	x2, [sp, #120]
   20010:	add	x5, x0, x1, lsl #6
   20014:	mov	x6, #0x1                   	// #1
   20018:	ldr	x3, [x2, x1]
   2001c:	cbnz	x3, 20030 <printf_parse@@Base+0x5834>
   20020:	add	x1, x1, #0x8
   20024:	cmp	x1, #0x20
   20028:	b.ne	2000c <printf_parse@@Base+0x5810>  // b.any
   2002c:	b	1febc <printf_parse@@Base+0x56c0>
   20030:	tbz	w3, #0, 20060 <printf_parse@@Base+0x5864>
   20034:	add	x7, x22, x1
   20038:	mov	x2, #0x0                   	// #0
   2003c:	ldr	x8, [x7, #6144]
   20040:	add	x7, x7, #0x20
   20044:	tst	x6, x8
   20048:	b.eq	20070 <printf_parse@@Base+0x5874>  // b.none
   2004c:	lsl	x2, x2, #3
   20050:	ldr	x7, [x27, x2]
   20054:	str	x7, [x5]
   20058:	ldr	x2, [x25, x2]
   2005c:	str	x2, [x5, #2048]
   20060:	lsl	x6, x6, #1
   20064:	lsr	x3, x3, #1
   20068:	add	x5, x5, #0x8
   2006c:	b	2001c <printf_parse@@Base+0x5820>
   20070:	add	x2, x2, #0x1
   20074:	b	2003c <printf_parse@@Base+0x5840>
   20078:	add	x1, x1, #0x1
   2007c:	cmp	x1, x19
   20080:	b.ne	1fecc <printf_parse@@Base+0x56d0>  // b.any
   20084:	b	1fef4 <printf_parse@@Base+0x56f8>
   20088:	stp	x29, x30, [sp, #-32]!
   2008c:	mov	x29, sp
   20090:	stp	x19, x20, [sp, #16]
   20094:	mov	x19, x0
   20098:	tbz	x1, #63, 200ac <printf_parse@@Base+0x58b0>
   2009c:	ldr	w0, [x19, #112]
   200a0:	ldp	x19, x20, [sp, #16]
   200a4:	ldp	x29, x30, [sp], #32
   200a8:	ret
   200ac:	ldr	x0, [x0, #88]
   200b0:	cmp	x0, x1
   200b4:	b.ne	200cc <printf_parse@@Base+0x58d0>  // b.any
   200b8:	tst	x2, #0x2
   200bc:	mov	w0, #0x8                   	// #8
   200c0:	mov	w1, #0xa                   	// #10
   200c4:	csel	w0, w0, w1, ne  // ne = any
   200c8:	b	200a0 <printf_parse@@Base+0x58a4>
   200cc:	ldr	w0, [x19, #144]
   200d0:	cmp	w0, #0x1
   200d4:	b.gt	20150 <printf_parse@@Base+0x5954>
   200d8:	ldr	x0, [x19, #8]
   200dc:	ldrb	w2, [x0, x1]
   200e0:	ldrb	w0, [x0, x1]
   200e4:	ldr	x1, [x19, #128]
   200e8:	asr	x0, x0, #6
   200ec:	ldr	x0, [x1, x0, lsl #3]
   200f0:	lsr	x0, x0, x2
   200f4:	tbnz	w0, #0, 20160 <printf_parse@@Base+0x5964>
   200f8:	cmp	w2, #0xa
   200fc:	b	20138 <printf_parse@@Base+0x593c>
   20100:	sub	x1, x1, #0x1
   20104:	cmn	x1, #0x1
   20108:	b.eq	2009c <printf_parse@@Base+0x58a0>  // b.none
   2010c:	ldr	w20, [x0, x1, lsl #2]
   20110:	cmn	w20, #0x1
   20114:	b.eq	20100 <printf_parse@@Base+0x5904>  // b.none
   20118:	ldrb	w0, [x19, #142]
   2011c:	cbz	w0, 20134 <printf_parse@@Base+0x5938>
   20120:	mov	w0, w20
   20124:	bl	b370 <iswalnum@plt>
   20128:	cbnz	w0, 20160 <printf_parse@@Base+0x5964>
   2012c:	cmp	w20, #0x5f
   20130:	b.eq	20160 <printf_parse@@Base+0x5964>  // b.none
   20134:	cmp	w20, #0xa
   20138:	b.ne	20158 <printf_parse@@Base+0x595c>  // b.any
   2013c:	ldrb	w0, [x19, #141]
   20140:	cmp	w0, #0x0
   20144:	cset	w0, ne  // ne = any
   20148:	lsl	w0, w0, #1
   2014c:	b	200a0 <printf_parse@@Base+0x58a4>
   20150:	ldr	x0, [x19, #16]
   20154:	b	2010c <printf_parse@@Base+0x5910>
   20158:	mov	w0, #0x0                   	// #0
   2015c:	b	200a0 <printf_parse@@Base+0x58a4>
   20160:	mov	w0, #0x1                   	// #1
   20164:	b	200a0 <printf_parse@@Base+0x58a4>
   20168:	stp	x29, x30, [sp, #-32]!
   2016c:	mov	x29, sp
   20170:	stp	x19, x20, [sp, #16]
   20174:	mov	x20, x1
   20178:	mov	x1, x2
   2017c:	ldr	w2, [x0, #160]
   20180:	mov	x19, x0
   20184:	bl	20088 <printf_parse@@Base+0x588c>
   20188:	and	w6, w0, #0x8
   2018c:	ldr	x5, [x20, #16]
   20190:	and	w7, w0, #0x2
   20194:	and	w2, w0, #0x1
   20198:	mov	x4, #0x0                   	// #0
   2019c:	cmp	x5, x4
   201a0:	b.gt	201b4 <printf_parse@@Base+0x59b8>
   201a4:	mov	x0, #0x0                   	// #0
   201a8:	ldp	x19, x20, [sp, #16]
   201ac:	ldp	x29, x30, [sp], #32
   201b0:	ret
   201b4:	ldr	x0, [x20, #24]
   201b8:	ldr	x1, [x19, #152]
   201bc:	ldr	x0, [x0, x4, lsl #3]
   201c0:	ldr	x1, [x1]
   201c4:	add	x1, x1, x0, lsl #4
   201c8:	ldr	w3, [x1, #8]
   201cc:	ldrb	w1, [x1, #8]
   201d0:	ubfx	x3, x3, #8, #10
   201d4:	cmp	w1, #0x2
   201d8:	b.ne	20200 <printf_parse@@Base+0x5a04>  // b.any
   201dc:	cbz	w3, 201a8 <printf_parse@@Base+0x59ac>
   201e0:	tbz	w3, #2, 201e8 <printf_parse@@Base+0x59ec>
   201e4:	cbz	w2, 20200 <printf_parse@@Base+0x5a04>
   201e8:	tbz	w3, #3, 201f0 <printf_parse@@Base+0x59f4>
   201ec:	cbnz	w2, 20200 <printf_parse@@Base+0x5a04>
   201f0:	tbz	w3, #5, 201f8 <printf_parse@@Base+0x59fc>
   201f4:	cbz	w7, 20200 <printf_parse@@Base+0x5a04>
   201f8:	tbz	w3, #7, 201a8 <printf_parse@@Base+0x59ac>
   201fc:	cbnz	w6, 201a8 <printf_parse@@Base+0x59ac>
   20200:	add	x4, x4, #0x1
   20204:	b	2019c <printf_parse@@Base+0x59a0>
   20208:	stp	x29, x30, [sp, #-144]!
   2020c:	mov	x29, sp
   20210:	stp	x19, x20, [sp, #16]
   20214:	mov	x19, x0
   20218:	ldr	x20, [x0, #40]
   2021c:	stp	x21, x22, [sp, #32]
   20220:	mov	x22, x1
   20224:	stp	x23, x24, [sp, #48]
   20228:	cmp	x20, x1
   2022c:	stp	x25, x26, [sp, #64]
   20230:	mov	w25, w2
   20234:	stp	x27, x28, [sp, #80]
   20238:	b.gt	20388 <printf_parse@@Base+0x5b8c>
   2023c:	sub	x20, x1, x20
   20240:	cbz	x20, 20330 <printf_parse@@Base+0x5b34>
   20244:	ldp	x23, x1, [x19, #48]
   20248:	ldrb	w0, [x19, #140]
   2024c:	cmp	x1, x20
   20250:	b.le	20524 <printf_parse@@Base+0x5d28>
   20254:	cbz	w0, 204b8 <printf_parse@@Base+0x5cbc>
   20258:	ldr	x24, [x19, #24]
   2025c:	mov	x0, x23
   20260:	mov	x1, #0x0                   	// #0
   20264:	mov	x3, #0x2                   	// #2
   20268:	add	x21, x1, x0
   2026c:	sdiv	x21, x21, x3
   20270:	ldr	x2, [x24, x21, lsl #3]
   20274:	cmp	x2, x20
   20278:	b.gt	203e0 <printf_parse@@Base+0x5be4>
   2027c:	b.ge	20298 <printf_parse@@Base+0x5a9c>  // b.tcont
   20280:	add	x1, x21, #0x1
   20284:	cmp	x1, x0
   20288:	b.lt	20268 <printf_parse@@Base+0x5a6c>  // b.tstop
   2028c:	cmp	x2, x20
   20290:	b.ge	20298 <printf_parse@@Base+0x5a9c>  // b.tcont
   20294:	add	x21, x21, #0x1
   20298:	mov	w2, w25
   2029c:	sub	x1, x21, #0x1
   202a0:	mov	x0, x19
   202a4:	bl	20088 <printf_parse@@Base+0x588c>
   202a8:	str	w0, [x19, #112]
   202ac:	cmp	x20, x23
   202b0:	b.ge	20404 <printf_parse@@Base+0x5c08>  // b.tcont
   202b4:	cmp	x20, x21
   202b8:	b.ne	20404 <printf_parse@@Base+0x5c08>  // b.any
   202bc:	ldr	x0, [x24, x20, lsl #3]
   202c0:	cmp	x0, x20
   202c4:	b.ne	20404 <printf_parse@@Base+0x5c08>  // b.any
   202c8:	ldr	x0, [x19, #16]
   202cc:	sub	x2, x23, x20
   202d0:	lsl	x2, x2, #2
   202d4:	add	x1, x0, x20, lsl #2
   202d8:	bl	a700 <memmove@plt>
   202dc:	ldr	x0, [x19, #8]
   202e0:	ldr	x2, [x19, #48]
   202e4:	add	x1, x0, x20
   202e8:	sub	x2, x2, x20
   202ec:	bl	a700 <memmove@plt>
   202f0:	ldr	x0, [x19, #48]
   202f4:	lsl	x1, x20, #3
   202f8:	sub	x0, x0, x20
   202fc:	str	x0, [x19, #48]
   20300:	ldr	x0, [x19, #56]
   20304:	sub	x0, x0, x20
   20308:	str	x0, [x19, #56]
   2030c:	mov	x0, #0x0                   	// #0
   20310:	ldr	x2, [x19, #48]
   20314:	cmp	x2, x0
   20318:	b.gt	203e8 <printf_parse@@Base+0x5bec>
   2031c:	ldrb	w0, [x19, #139]
   20320:	cbnz	w0, 20330 <printf_parse@@Base+0x5b34>
   20324:	ldr	x0, [x19, #8]
   20328:	add	x0, x0, x20
   2032c:	str	x0, [x19, #8]
   20330:	ldr	x0, [x19, #88]
   20334:	str	x22, [x19, #40]
   20338:	ldr	x1, [x19, #104]
   2033c:	sub	x0, x0, x20
   20340:	str	x0, [x19, #88]
   20344:	sub	x20, x1, x20
   20348:	ldr	w1, [x19, #144]
   2034c:	str	x20, [x19, #104]
   20350:	cmp	w1, #0x1
   20354:	b.le	207d0 <printf_parse@@Base+0x5fd4>
   20358:	ldrb	w0, [x19, #136]
   2035c:	cbz	w0, 207bc <printf_parse@@Base+0x5fc0>
   20360:	mov	x0, x19
   20364:	bl	1bdb8 <printf_parse@@Base+0x15bc>
   20368:	cbz	w0, 207c4 <printf_parse@@Base+0x5fc8>
   2036c:	ldp	x19, x20, [sp, #16]
   20370:	ldp	x21, x22, [sp, #32]
   20374:	ldp	x23, x24, [sp, #48]
   20378:	ldp	x25, x26, [sp, #64]
   2037c:	ldp	x27, x28, [sp, #80]
   20380:	ldp	x29, x30, [sp], #144
   20384:	ret
   20388:	ldr	w0, [x0, #144]
   2038c:	cmp	w0, #0x1
   20390:	b.le	20398 <printf_parse@@Base+0x5b9c>
   20394:	str	xzr, [x19, #32]
   20398:	ldr	x0, [x19, #80]
   2039c:	str	x0, [x19, #88]
   203a0:	ldr	x0, [x19, #96]
   203a4:	tst	x25, #0x1
   203a8:	mov	w1, #0x6                   	// #6
   203ac:	str	x0, [x19, #104]
   203b0:	mov	w0, #0x4                   	// #4
   203b4:	csel	w0, w0, w1, ne  // ne = any
   203b8:	str	w0, [x19, #112]
   203bc:	ldrb	w0, [x19, #139]
   203c0:	stp	xzr, xzr, [x19, #40]
   203c4:	str	xzr, [x19, #56]
   203c8:	strb	wzr, [x19, #140]
   203cc:	cbnz	w0, 203d8 <printf_parse@@Base+0x5bdc>
   203d0:	ldr	x0, [x19]
   203d4:	str	x0, [x19, #8]
   203d8:	mov	x20, x22
   203dc:	b	20240 <printf_parse@@Base+0x5a44>
   203e0:	mov	x0, x21
   203e4:	b	20284 <printf_parse@@Base+0x5a88>
   203e8:	ldr	x3, [x19, #24]
   203ec:	ldr	x2, [x3, x1]
   203f0:	add	x1, x1, #0x8
   203f4:	sub	x2, x2, x20
   203f8:	str	x2, [x3, x0, lsl #3]
   203fc:	add	x0, x0, #0x1
   20400:	b	20310 <printf_parse@@Base+0x5b14>
   20404:	ldr	x0, [x19, #80]
   20408:	sub	x1, x24, #0x8
   2040c:	strb	wzr, [x19, #140]
   20410:	sub	x0, x0, x22
   20414:	add	x0, x0, x20
   20418:	str	x0, [x19, #88]
   2041c:	ldr	x0, [x19, #96]
   20420:	sub	x0, x0, x22
   20424:	add	x0, x0, x20
   20428:	str	x0, [x19, #104]
   2042c:	cmp	x21, #0x0
   20430:	b.le	20440 <printf_parse@@Base+0x5c44>
   20434:	ldr	x0, [x1, x21, lsl #3]
   20438:	cmp	x0, x20
   2043c:	b.eq	20458 <printf_parse@@Base+0x5c5c>  // b.none
   20440:	cmp	x21, x23
   20444:	b.lt	20460 <printf_parse@@Base+0x5c64>  // b.tstop
   20448:	b.ne	20478 <printf_parse@@Base+0x5c7c>  // b.any
   2044c:	str	xzr, [x19, #48]
   20450:	ldr	x0, [x19, #48]
   20454:	b	2051c <printf_parse@@Base+0x5d20>
   20458:	sub	x21, x21, #0x1
   2045c:	b	2042c <printf_parse@@Base+0x5c30>
   20460:	ldr	x0, [x19, #16]
   20464:	ldr	w0, [x0, x21, lsl #2]
   20468:	cmn	w0, #0x1
   2046c:	b.ne	20478 <printf_parse@@Base+0x5c7c>  // b.any
   20470:	add	x21, x21, #0x1
   20474:	b	20440 <printf_parse@@Base+0x5c44>
   20478:	ldr	x2, [x24, x21, lsl #3]
   2047c:	sub	x2, x2, x20
   20480:	str	x2, [x19, #48]
   20484:	cbz	x2, 20450 <printf_parse@@Base+0x5c54>
   20488:	mov	x0, #0x0                   	// #0
   2048c:	mov	w1, #0xffffffff            	// #-1
   20490:	b	204a0 <printf_parse@@Base+0x5ca4>
   20494:	ldr	x3, [x19, #16]
   20498:	str	w1, [x3, x0, lsl #2]
   2049c:	add	x0, x0, #0x1
   204a0:	cmp	x2, x0
   204a4:	b.gt	20494 <printf_parse@@Base+0x5c98>
   204a8:	ldr	x0, [x19, #8]
   204ac:	mov	w1, #0xff                  	// #255
   204b0:	bl	ac10 <memset@plt>
   204b4:	b	20450 <printf_parse@@Base+0x5c54>
   204b8:	mov	w2, w25
   204bc:	sub	x1, x20, #0x1
   204c0:	mov	x0, x19
   204c4:	bl	20088 <printf_parse@@Base+0x588c>
   204c8:	str	w0, [x19, #112]
   204cc:	ldr	w0, [x19, #144]
   204d0:	cmp	w0, #0x1
   204d4:	b.le	204ec <printf_parse@@Base+0x5cf0>
   204d8:	ldr	x0, [x19, #16]
   204dc:	sub	x2, x23, x20
   204e0:	lsl	x2, x2, #2
   204e4:	add	x1, x0, x20, lsl #2
   204e8:	bl	a700 <memmove@plt>
   204ec:	ldrb	w0, [x19, #139]
   204f0:	cbz	w0, 20508 <printf_parse@@Base+0x5d0c>
   204f4:	ldr	x0, [x19, #8]
   204f8:	ldr	x2, [x19, #48]
   204fc:	add	x1, x0, x20
   20500:	sub	x2, x2, x20
   20504:	bl	a700 <memmove@plt>
   20508:	ldr	x0, [x19, #48]
   2050c:	sub	x0, x0, x20
   20510:	str	x0, [x19, #48]
   20514:	ldr	x0, [x19, #56]
   20518:	sub	x0, x0, x20
   2051c:	str	x0, [x19, #56]
   20520:	b	2031c <printf_parse@@Base+0x5b20>
   20524:	cbz	w0, 2054c <printf_parse@@Base+0x5d50>
   20528:	ldr	x0, [x19, #80]
   2052c:	strb	wzr, [x19, #140]
   20530:	sub	x0, x0, x22
   20534:	add	x0, x0, x20
   20538:	str	x0, [x19, #88]
   2053c:	ldr	x0, [x19, #96]
   20540:	sub	x0, x0, x22
   20544:	add	x0, x0, x20
   20548:	str	x0, [x19, #104]
   2054c:	ldr	w0, [x19, #144]
   20550:	str	xzr, [x19, #48]
   20554:	cmp	w0, #0x1
   20558:	ldr	x21, [x19, #40]
   2055c:	b.le	20754 <printf_parse@@Base+0x5f58>
   20560:	ldrb	w1, [x19, #137]
   20564:	cbz	w1, 20614 <printf_parse@@Base+0x5e18>
   20568:	ldr	x1, [x19]
   2056c:	sub	x0, x20, w0, sxtw
   20570:	sub	x24, x20, #0x1
   20574:	add	x21, x1, x21
   20578:	add	x0, x21, x0
   2057c:	add	x24, x21, x24
   20580:	cmp	x1, x0
   20584:	csel	x0, x1, x0, cs  // cs = hs, nlast
   20588:	cmp	x0, x24
   2058c:	b.hi	20614 <printf_parse@@Base+0x5e18>  // b.pmore
   20590:	ldrb	w1, [x24]
   20594:	and	w1, w1, #0xc0
   20598:	cmp	w1, #0x80
   2059c:	b.eq	2067c <printf_parse@@Base+0x5e80>  // b.none
   205a0:	ldr	x0, [x19, #88]
   205a4:	mov	x1, x24
   205a8:	ldr	x3, [x19, #120]
   205ac:	add	x0, x21, x0
   205b0:	sub	x2, x0, x24
   205b4:	cbz	x3, 205d4 <printf_parse@@Base+0x5dd8>
   205b8:	cmp	x2, #0x6
   205bc:	mov	x0, #0x6                   	// #6
   205c0:	csel	x0, x2, x0, le
   205c4:	add	x1, sp, #0x80
   205c8:	sxtw	x0, w0
   205cc:	sub	x0, x0, #0x1
   205d0:	tbz	w0, #31, 2066c <printf_parse@@Base+0x5e70>
   205d4:	add	x21, x21, x20
   205d8:	add	x3, sp, #0x88
   205dc:	sub	x24, x21, x24
   205e0:	add	x0, sp, #0x7c
   205e4:	str	xzr, [sp, #136]
   205e8:	bl	a840 <rpl_mbrtowc@plt>
   205ec:	cmp	x24, x0
   205f0:	b.hi	20614 <printf_parse@@Base+0x5e18>  // b.pmore
   205f4:	cmn	x0, #0x3
   205f8:	b.hi	20614 <printf_parse@@Base+0x5e18>  // b.pmore
   205fc:	sub	x0, x0, x24
   20600:	ldr	w24, [sp, #124]
   20604:	str	xzr, [x19, #32]
   20608:	str	x0, [x19, #48]
   2060c:	cmn	w24, #0x1
   20610:	b.ne	206ec <printf_parse@@Base+0x5ef0>  // b.any
   20614:	ldr	x21, [x19, #40]
   20618:	add	x27, x19, #0x20
   2061c:	ldr	x0, [x19, #56]
   20620:	add	x28, sp, #0x88
   20624:	mov	w24, #0xffffffff            	// #-1
   20628:	add	x21, x21, x0
   2062c:	cmp	x22, x21
   20630:	b.gt	20684 <printf_parse@@Base+0x5e88>
   20634:	sub	x21, x21, x22
   20638:	str	x21, [x19, #48]
   2063c:	cmn	w24, #0x1
   20640:	b.ne	206ec <printf_parse@@Base+0x5ef0>  // b.any
   20644:	mov	w2, w25
   20648:	sub	x1, x23, #0x1
   2064c:	mov	x0, x19
   20650:	bl	20088 <printf_parse@@Base+0x588c>
   20654:	ldr	x2, [x19, #48]
   20658:	str	w0, [x19, #112]
   2065c:	cbz	x2, 20450 <printf_parse@@Base+0x5c54>
   20660:	mov	x0, #0x0                   	// #0
   20664:	mov	w1, #0xffffffff            	// #-1
   20668:	b	20740 <printf_parse@@Base+0x5f44>
   2066c:	ldrb	w4, [x24, x0]
   20670:	ldrb	w4, [x3, x4]
   20674:	strb	w4, [x1, x0]
   20678:	b	205cc <printf_parse@@Base+0x5dd0>
   2067c:	sub	x24, x24, #0x1
   20680:	b	20588 <printf_parse@@Base+0x5d8c>
   20684:	ldr	x1, [x19]
   20688:	mov	x3, x27
   2068c:	ldr	x4, [x19, #32]
   20690:	add	x1, x1, x21
   20694:	ldr	x26, [x19, #80]
   20698:	mov	x0, x28
   2069c:	str	x4, [sp, #104]
   206a0:	sub	x26, x26, x21
   206a4:	mov	x2, x26
   206a8:	bl	a840 <rpl_mbrtowc@plt>
   206ac:	sub	x1, x0, #0x1
   206b0:	ldr	w24, [sp, #136]
   206b4:	cmn	x1, #0x4
   206b8:	ldr	x4, [sp, #104]
   206bc:	b.ls	206dc <printf_parse@@Base+0x5ee0>  // b.plast
   206c0:	cmp	x0, #0x0
   206c4:	ccmp	x26, #0x0, #0x4, ne  // ne = any
   206c8:	b.eq	206e4 <printf_parse@@Base+0x5ee8>  // b.none
   206cc:	ldr	x0, [x19]
   206d0:	ldrb	w24, [x0, x21]
   206d4:	mov	x0, #0x1                   	// #1
   206d8:	str	x4, [x19, #32]
   206dc:	add	x21, x21, x0
   206e0:	b	2062c <printf_parse@@Base+0x5e30>
   206e4:	mov	w24, #0x0                   	// #0
   206e8:	b	206d4 <printf_parse@@Base+0x5ed8>
   206ec:	ldrb	w0, [x19, #142]
   206f0:	cbz	w0, 20708 <printf_parse@@Base+0x5f0c>
   206f4:	mov	w0, w24
   206f8:	bl	b370 <iswalnum@plt>
   206fc:	cbnz	w0, 20724 <printf_parse@@Base+0x5f28>
   20700:	cmp	w24, #0x5f
   20704:	b.eq	20724 <printf_parse@@Base+0x5f28>  // b.none
   20708:	cmp	w24, #0xa
   2070c:	b.ne	2072c <printf_parse@@Base+0x5f30>  // b.any
   20710:	ldrb	w0, [x19, #141]
   20714:	cmp	w0, #0x0
   20718:	cset	w0, ne  // ne = any
   2071c:	lsl	w0, w0, #1
   20720:	b	20654 <printf_parse@@Base+0x5e58>
   20724:	mov	w0, #0x1                   	// #1
   20728:	b	20654 <printf_parse@@Base+0x5e58>
   2072c:	mov	w0, #0x0                   	// #0
   20730:	b	20654 <printf_parse@@Base+0x5e58>
   20734:	ldr	x3, [x19, #16]
   20738:	str	w1, [x3, x0, lsl #2]
   2073c:	add	x0, x0, #0x1
   20740:	cmp	x2, x0
   20744:	b.gt	20734 <printf_parse@@Base+0x5f38>
   20748:	ldrb	w0, [x19, #139]
   2074c:	cbz	w0, 20450 <printf_parse@@Base+0x5c54>
   20750:	b	204a8 <printf_parse@@Base+0x5cac>
   20754:	ldr	x0, [x19]
   20758:	ldr	x1, [x19, #120]
   2075c:	add	x0, x0, x20
   20760:	add	x21, x0, x21
   20764:	ldurb	w0, [x21, #-1]
   20768:	str	xzr, [x19, #56]
   2076c:	cbz	x1, 20778 <printf_parse@@Base+0x5f7c>
   20770:	and	x0, x0, #0xff
   20774:	ldrb	w0, [x1, x0]
   20778:	ldr	x2, [x19, #128]
   2077c:	ubfx	x1, x0, #6, #2
   20780:	ldr	x1, [x2, x1, lsl #3]
   20784:	lsr	x1, x1, x0
   20788:	tbnz	w1, #0, 207ac <printf_parse@@Base+0x5fb0>
   2078c:	cmp	w0, #0xa
   20790:	b.ne	207b4 <printf_parse@@Base+0x5fb8>  // b.any
   20794:	ldrb	w0, [x19, #141]
   20798:	cmp	w0, #0x0
   2079c:	cset	w0, ne  // ne = any
   207a0:	lsl	w0, w0, #1
   207a4:	str	w0, [x19, #112]
   207a8:	b	2031c <printf_parse@@Base+0x5b20>
   207ac:	mov	w0, #0x1                   	// #1
   207b0:	b	207a4 <printf_parse@@Base+0x5fa8>
   207b4:	mov	w0, #0x0                   	// #0
   207b8:	b	207a4 <printf_parse@@Base+0x5fa8>
   207bc:	mov	x0, x19
   207c0:	bl	1bc3c <printf_parse@@Base+0x1440>
   207c4:	mov	w0, #0x0                   	// #0
   207c8:	str	xzr, [x19, #72]
   207cc:	b	2036c <printf_parse@@Base+0x5b70>
   207d0:	ldrb	w1, [x19, #139]
   207d4:	cbz	w1, 20800 <printf_parse@@Base+0x6004>
   207d8:	ldrb	w0, [x19, #136]
   207dc:	cbz	w0, 207ec <printf_parse@@Base+0x5ff0>
   207e0:	mov	x0, x19
   207e4:	bl	1c2b4 <printf_parse@@Base+0x1ab8>
   207e8:	b	207c4 <printf_parse@@Base+0x5fc8>
   207ec:	ldr	x0, [x19, #120]
   207f0:	cbz	x0, 207c4 <printf_parse@@Base+0x5fc8>
   207f4:	mov	x0, x19
   207f8:	bl	1b2e0 <printf_parse@@Base+0xae4>
   207fc:	b	207c4 <printf_parse@@Base+0x5fc8>
   20800:	str	x0, [x19, #48]
   20804:	b	207c4 <printf_parse@@Base+0x5fc8>
   20808:	stp	x29, x30, [sp, #-128]!
   2080c:	mov	x29, sp
   20810:	stp	x19, x20, [sp, #16]
   20814:	mov	x19, x1
   20818:	ldr	x1, [x1, #8]
   2081c:	str	x27, [sp, #80]
   20820:	add	x27, sp, #0x68
   20824:	stp	x21, x22, [sp, #32]
   20828:	mov	x21, x0
   2082c:	mov	x0, x27
   20830:	stp	x23, x24, [sp, #48]
   20834:	mov	x23, x2
   20838:	mov	w24, w3
   2083c:	stp	x25, x26, [sp, #64]
   20840:	bl	1bb10 <printf_parse@@Base+0x1314>
   20844:	mov	w20, w0
   20848:	cbnz	w0, 208ac <printf_parse@@Base+0x60b0>
   2084c:	mov	x22, #0x0                   	// #0
   20850:	mov	x26, #0x18                  	// #24
   20854:	ldp	x1, x0, [x19, #8]
   20858:	cmp	x1, x22
   2085c:	b.gt	20878 <printf_parse@@Base+0x607c>
   20860:	bl	b050 <free@plt>
   20864:	ldp	x0, x1, [sp, #104]
   20868:	stp	x0, x1, [x19]
   2086c:	ldr	x0, [sp, #120]
   20870:	str	x0, [x19, #16]
   20874:	b	208ac <printf_parse@@Base+0x60b0>
   20878:	ldr	x2, [x0, x22, lsl #3]
   2087c:	mov	x0, #0x0                   	// #0
   20880:	ldr	x1, [x21, #48]
   20884:	madd	x1, x2, x26, x1
   20888:	ldr	x5, [x1, #8]
   2088c:	cmp	x0, x5
   20890:	b.lt	208cc <printf_parse@@Base+0x60d0>  // b.tstop
   20894:	mov	x0, x27
   20898:	bl	1e370 <printf_parse@@Base+0x3b74>
   2089c:	cbz	w0, 20920 <printf_parse@@Base+0x6124>
   208a0:	mov	w20, w0
   208a4:	ldr	x0, [sp, #120]
   208a8:	bl	b050 <free@plt>
   208ac:	mov	w0, w20
   208b0:	ldp	x19, x20, [sp, #16]
   208b4:	ldp	x21, x22, [sp, #32]
   208b8:	ldp	x23, x24, [sp, #48]
   208bc:	ldp	x25, x26, [sp, #64]
   208c0:	ldr	x27, [sp, #80]
   208c4:	ldp	x29, x30, [sp], #128
   208c8:	ret
   208cc:	ldr	x3, [x1, #16]
   208d0:	ldr	x4, [x21]
   208d4:	ldr	x3, [x3, x0, lsl #3]
   208d8:	add	x7, x4, x3, lsl #4
   208dc:	lsl	x6, x3, #4
   208e0:	ldrb	w7, [x7, #8]
   208e4:	cmp	w24, w7
   208e8:	b.ne	208f8 <printf_parse@@Base+0x60fc>  // b.any
   208ec:	ldr	x4, [x4, x6]
   208f0:	cmp	x23, x4
   208f4:	b.eq	20900 <printf_parse@@Base+0x6104>  // b.none
   208f8:	add	x0, x0, #0x1
   208fc:	b	2088c <printf_parse@@Base+0x6090>
   20900:	cmn	x3, #0x1
   20904:	b.eq	20894 <printf_parse@@Base+0x6098>  // b.none
   20908:	mov	w4, w24
   2090c:	mov	x3, x23
   20910:	mov	x1, x27
   20914:	mov	x0, x21
   20918:	bl	1df58 <printf_parse@@Base+0x375c>
   2091c:	b	2089c <printf_parse@@Base+0x60a0>
   20920:	add	x22, x22, #0x1
   20924:	b	20854 <printf_parse@@Base+0x6058>
   20928:	mov	x4, x1
   2092c:	mov	x1, x2
   20930:	ldr	x2, [x0, #8]
   20934:	ldrb	w3, [x2, x1]
   20938:	ldrb	w2, [x4, #8]
   2093c:	sub	w2, w2, #0x1
   20940:	cmp	w2, #0x6
   20944:	b.hi	209fc <printf_parse@@Base+0x6200>  // b.pmore
   20948:	adrp	x5, 29000 <vasnprintf@@Base+0x3170>
   2094c:	add	x5, x5, #0x2c8
   20950:	ldrb	w2, [x5, w2, uxtw]
   20954:	adr	x5, 20960 <printf_parse@@Base+0x6164>
   20958:	add	x2, x5, w2, sxtb #2
   2095c:	br	x2
   20960:	ldrb	w2, [x4]
   20964:	cmp	w2, w3
   20968:	b.ne	209fc <printf_parse@@Base+0x6200>  // b.any
   2096c:	stp	x29, x30, [sp, #-32]!
   20970:	mov	x29, sp
   20974:	str	x19, [sp, #16]
   20978:	ldr	w19, [x4, #8]
   2097c:	tst	w19, #0x3ff00
   20980:	b.eq	20a18 <printf_parse@@Base+0x621c>  // b.none
   20984:	ldr	w2, [x0, #160]
   20988:	bl	20088 <printf_parse@@Base+0x588c>
   2098c:	ubfx	x1, x19, #8, #10
   20990:	tbz	w19, #10, 20998 <printf_parse@@Base+0x619c>
   20994:	tbz	w0, #0, 20a20 <printf_parse@@Base+0x6224>
   20998:	tbz	w1, #3, 209a0 <printf_parse@@Base+0x61a4>
   2099c:	tbnz	w0, #0, 20a20 <printf_parse@@Base+0x6224>
   209a0:	tbz	w1, #5, 209a8 <printf_parse@@Base+0x61ac>
   209a4:	tbz	w0, #1, 20a20 <printf_parse@@Base+0x6224>
   209a8:	ubfx	x0, x0, #3, #1
   209ac:	tst	x1, #0x80
   209b0:	csinc	w3, w0, wzr, ne  // ne = any
   209b4:	mov	w0, w3
   209b8:	ldr	x19, [sp, #16]
   209bc:	ldp	x29, x30, [sp], #32
   209c0:	ret
   209c4:	ldr	x2, [x4]
   209c8:	ubfx	x5, x3, #6, #2
   209cc:	ldr	x2, [x2, x5, lsl #3]
   209d0:	lsr	x2, x2, x3
   209d4:	and	w3, w2, #0x1
   209d8:	tbnz	w2, #0, 2096c <printf_parse@@Base+0x6170>
   209dc:	mov	w0, w3
   209e0:	ret
   209e4:	tbnz	w3, #7, 209fc <printf_parse@@Base+0x6200>
   209e8:	cmp	w3, #0xa
   209ec:	b.ne	20a04 <printf_parse@@Base+0x6208>  // b.any
   209f0:	ldr	x2, [x0, #152]
   209f4:	ldr	x2, [x2, #216]
   209f8:	tbnz	w2, #6, 2096c <printf_parse@@Base+0x6170>
   209fc:	mov	w3, #0x0                   	// #0
   20a00:	b	209dc <printf_parse@@Base+0x61e0>
   20a04:	cbnz	w3, 2096c <printf_parse@@Base+0x6170>
   20a08:	ldr	x2, [x0, #152]
   20a0c:	ldr	x2, [x2, #216]
   20a10:	tbz	w2, #7, 2096c <printf_parse@@Base+0x6170>
   20a14:	b	209fc <printf_parse@@Base+0x6200>
   20a18:	mov	w3, #0x1                   	// #1
   20a1c:	b	209b4 <printf_parse@@Base+0x61b8>
   20a20:	mov	w3, #0x0                   	// #0
   20a24:	b	209b4 <printf_parse@@Base+0x61b8>
   20a28:	stp	x29, x30, [sp, #-192]!
   20a2c:	tst	w4, #0xff
   20a30:	mov	x29, sp
   20a34:	ldr	x0, [x0]
   20a38:	stp	x19, x20, [sp, #16]
   20a3c:	mov	x20, x3
   20a40:	stp	x21, x22, [sp, #32]
   20a44:	mov	x22, x1
   20a48:	stp	x23, x24, [sp, #48]
   20a4c:	mov	x23, x2
   20a50:	stp	x25, x26, [sp, #64]
   20a54:	stp	x27, x28, [sp, #80]
   20a58:	str	x0, [x29, #120]
   20a5c:	mov	x0, #0x2                   	// #2
   20a60:	str	xzr, [x29, #168]
   20a64:	str	x0, [x29, #176]
   20a68:	str	xzr, [x29, #184]
   20a6c:	b.eq	20b88 <printf_parse@@Base+0x638c>  // b.none
   20a70:	mov	x0, #0x60                  	// #96
   20a74:	bl	aab0 <malloc@plt>
   20a78:	str	x0, [x29, #184]
   20a7c:	cbz	x0, 20bac <printf_parse@@Base+0x63b0>
   20a80:	add	x19, x29, #0xa8
   20a84:	ldr	x0, [x29, #120]
   20a88:	stp	xzr, xzr, [x29, #144]
   20a8c:	lsl	x24, x23, #4
   20a90:	str	xzr, [x29, #160]
   20a94:	cmp	x24, #0xfbf
   20a98:	ldr	x28, [x0, #144]
   20a9c:	b.hi	20b90 <printf_parse@@Base+0x6394>  // b.pmore
   20aa0:	sub	sp, sp, x24
   20aa4:	mov	w26, #0x0                   	// #0
   20aa8:	mov	x21, sp
   20aac:	mov	x2, x24
   20ab0:	mov	x1, x20
   20ab4:	mov	x0, x21
   20ab8:	bl	a6f0 <memcpy@plt>
   20abc:	add	x25, x29, #0x90
   20ac0:	ldr	x0, [x20]
   20ac4:	str	x0, [x29, #136]
   20ac8:	add	x0, x29, #0x88
   20acc:	str	x0, [x29, #104]
   20ad0:	ldr	x0, [x20, #8]
   20ad4:	ldr	x27, [x29, #136]
   20ad8:	cmp	x0, x27
   20adc:	b.lt	20b4c <printf_parse@@Base+0x6350>  // b.tstop
   20ae0:	ldr	x0, [x29, #120]
   20ae4:	lsl	x1, x28, #4
   20ae8:	ldr	x0, [x0]
   20aec:	add	x2, x0, x28, lsl #4
   20af0:	ldrb	w4, [x2, #8]
   20af4:	cmp	w4, #0x8
   20af8:	b.ne	20bb4 <printf_parse@@Base+0x63b8>  // b.any
   20afc:	ldr	x0, [x0, x1]
   20b00:	add	x0, x0, #0x1
   20b04:	cmp	x23, x0
   20b08:	b.le	20b20 <printf_parse@@Base+0x6324>
   20b0c:	lsl	x1, x0, #4
   20b10:	add	x0, x20, x0, lsl #4
   20b14:	str	x27, [x20, x1]
   20b18:	mov	x1, #0xffffffffffffffff    	// #-1
   20b1c:	str	x1, [x0, #8]
   20b20:	ldr	x0, [x20, #8]
   20b24:	cmp	x0, x27
   20b28:	b.ne	20c54 <printf_parse@@Base+0x6458>  // b.any
   20b2c:	ldr	x0, [x22, #176]
   20b30:	cmp	x0, x28
   20b34:	b.ne	20c54 <printf_parse@@Base+0x6458>  // b.any
   20b38:	cbz	x19, 20ce0 <printf_parse@@Base+0x64e4>
   20b3c:	mov	x0, x20
   20b40:	mov	x1, #0x0                   	// #0
   20b44:	cmp	x23, x1
   20b48:	b.ne	20c24 <printf_parse@@Base+0x6428>  // b.any
   20b4c:	ldr	x0, [x29, #160]
   20b50:	bl	b050 <free@plt>
   20b54:	cbz	w26, 20b60 <printf_parse@@Base+0x6364>
   20b58:	mov	x0, x21
   20b5c:	bl	b050 <free@plt>
   20b60:	mov	x0, x19
   20b64:	bl	1ee78 <printf_parse@@Base+0x467c>
   20b68:	mov	sp, x29
   20b6c:	ldp	x19, x20, [sp, #16]
   20b70:	ldp	x21, x22, [sp, #32]
   20b74:	ldp	x23, x24, [sp, #48]
   20b78:	ldp	x25, x26, [sp, #64]
   20b7c:	ldp	x27, x28, [sp, #80]
   20b80:	ldp	x29, x30, [sp], #192
   20b84:	ret
   20b88:	mov	x19, #0x0                   	// #0
   20b8c:	b	20a84 <printf_parse@@Base+0x6288>
   20b90:	mov	x0, x24
   20b94:	mov	w26, #0x1                   	// #1
   20b98:	bl	aab0 <malloc@plt>
   20b9c:	mov	x21, x0
   20ba0:	cbnz	x0, 20aac <printf_parse@@Base+0x62b0>
   20ba4:	mov	x0, x19
   20ba8:	bl	1ee78 <printf_parse@@Base+0x467c>
   20bac:	mov	w0, #0xc                   	// #12
   20bb0:	b	20b68 <printf_parse@@Base+0x636c>
   20bb4:	cmp	w4, #0x9
   20bb8:	b.ne	20b20 <printf_parse@@Base+0x6324>  // b.any
   20bbc:	ldr	x0, [x0, x1]
   20bc0:	add	x0, x0, #0x1
   20bc4:	cmp	x23, x0
   20bc8:	b.le	20b20 <printf_parse@@Base+0x6324>
   20bcc:	lsl	x1, x0, #4
   20bd0:	add	x0, x20, x0, lsl #4
   20bd4:	ldr	x4, [x20, x1]
   20bd8:	cmp	x27, x4
   20bdc:	b.le	20bf8 <printf_parse@@Base+0x63fc>
   20be0:	mov	x2, x24
   20be4:	mov	x1, x20
   20be8:	str	x27, [x0, #8]
   20bec:	mov	x0, x21
   20bf0:	bl	a6f0 <memcpy@plt>
   20bf4:	b	20b20 <printf_parse@@Base+0x6324>
   20bf8:	ldrb	w2, [x2, #10]
   20bfc:	tbz	w2, #3, 20c1c <printf_parse@@Base+0x6420>
   20c00:	ldr	x1, [x21, x1]
   20c04:	cmn	x1, #0x1
   20c08:	b.eq	20c1c <printf_parse@@Base+0x6420>  // b.none
   20c0c:	mov	x2, x24
   20c10:	mov	x1, x21
   20c14:	mov	x0, x20
   20c18:	b	20bf0 <printf_parse@@Base+0x63f4>
   20c1c:	str	x27, [x0, #8]
   20c20:	b	20b20 <printf_parse@@Base+0x6324>
   20c24:	ldr	x2, [x0]
   20c28:	tbnz	x2, #63, 20cd4 <printf_parse@@Base+0x64d8>
   20c2c:	ldr	x2, [x0, #8]
   20c30:	cmn	x2, #0x1
   20c34:	b.ne	20cd4 <printf_parse@@Base+0x64d8>  // b.any
   20c38:	ldr	x1, [x29, #104]
   20c3c:	mov	x4, x25
   20c40:	mov	x3, x20
   20c44:	mov	x2, x23
   20c48:	mov	x0, x19
   20c4c:	bl	1eef0 <printf_parse@@Base+0x46f4>
   20c50:	mov	x28, x0
   20c54:	ldr	x27, [x22, #152]
   20c58:	lsl	x0, x28, #4
   20c5c:	str	x0, [x29, #96]
   20c60:	str	x28, [x29, #112]
   20c64:	ldr	x0, [x27]
   20c68:	add	x2, x0, x28, lsl #4
   20c6c:	ldrb	w1, [x2, #8]
   20c70:	tbz	w1, #3, 20df4 <printf_parse@@Base+0x65f8>
   20c74:	ldr	x1, [x29, #136]
   20c78:	ldr	x0, [x22, #184]
   20c7c:	ldr	x2, [x27, #40]
   20c80:	ldr	x0, [x0, x1, lsl #3]
   20c84:	mov	x1, x28
   20c88:	add	x0, x0, #0x8
   20c8c:	str	x0, [x29, #112]
   20c90:	mov	x0, #0x18                  	// #24
   20c94:	madd	x2, x28, x0, x2
   20c98:	mov	x0, x25
   20c9c:	str	x2, [x29, #96]
   20ca0:	bl	1de7c <printf_parse@@Base+0x3680>
   20ca4:	tst	w0, #0xff
   20ca8:	b.eq	20dd0 <printf_parse@@Base+0x65d4>  // b.none
   20cac:	ldr	x2, [x29, #96]
   20cb0:	mov	x28, #0xffffffffffffffff    	// #-1
   20cb4:	mov	x6, #0x0                   	// #0
   20cb8:	ldr	x7, [x2, #8]
   20cbc:	cmp	x6, x7
   20cc0:	b.lt	20cfc <printf_parse@@Base+0x6500>  // b.tstop
   20cc4:	tbz	x28, #63, 20ad0 <printf_parse@@Base+0x62d4>
   20cc8:	cmn	x28, #0x2
   20ccc:	b.ne	20e38 <printf_parse@@Base+0x663c>  // b.any
   20cd0:	b	20dd0 <printf_parse@@Base+0x65d4>
   20cd4:	add	x1, x1, #0x1
   20cd8:	add	x0, x0, #0x10
   20cdc:	b	20b44 <printf_parse@@Base+0x6348>
   20ce0:	ldr	x0, [x29, #160]
   20ce4:	bl	b050 <free@plt>
   20ce8:	cbz	w26, 20cf4 <printf_parse@@Base+0x64f8>
   20cec:	mov	x0, x21
   20cf0:	bl	b050 <free@plt>
   20cf4:	mov	w0, #0x0                   	// #0
   20cf8:	b	20b68 <printf_parse@@Base+0x636c>
   20cfc:	ldr	x0, [x2, #16]
   20d00:	str	x2, [x29, #96]
   20d04:	ldr	x27, [x0, x6, lsl #3]
   20d08:	ldr	x0, [x29, #112]
   20d0c:	mov	x1, x27
   20d10:	bl	1b398 <printf_parse@@Base+0xb9c>
   20d14:	ldr	x2, [x29, #96]
   20d18:	cbz	x0, 20dec <printf_parse@@Base+0x65f0>
   20d1c:	cmn	x28, #0x1
   20d20:	b.eq	20de8 <printf_parse@@Base+0x65ec>  // b.none
   20d24:	mov	x1, x28
   20d28:	mov	x0, x25
   20d2c:	bl	1b398 <printf_parse@@Base+0xb9c>
   20d30:	cbnz	x0, 20f8c <printf_parse@@Base+0x6790>
   20d34:	cbz	x19, 20cc4 <printf_parse@@Base+0x64c8>
   20d38:	ldp	x2, x1, [x19]
   20d3c:	ldr	x5, [x29, #136]
   20d40:	add	x0, x2, #0x1
   20d44:	str	x0, [x19]
   20d48:	cmp	x0, x1
   20d4c:	b.ne	20d80 <printf_parse@@Base+0x6584>  // b.any
   20d50:	mov	x1, #0x60                  	// #96
   20d54:	str	x2, [x29, #96]
   20d58:	str	x5, [x29, #112]
   20d5c:	mul	x1, x0, x1
   20d60:	ldr	x0, [x19, #16]
   20d64:	bl	ad60 <realloc@plt>
   20d68:	cbz	x0, 20dd0 <printf_parse@@Base+0x65d4>
   20d6c:	ldr	x1, [x19, #8]
   20d70:	ldr	x2, [x29, #96]
   20d74:	ldr	x5, [x29, #112]
   20d78:	lsl	x1, x1, #1
   20d7c:	stp	x1, x0, [x19, #8]
   20d80:	mov	x0, #0x30                  	// #48
   20d84:	mul	x2, x2, x0
   20d88:	ldr	x0, [x19, #16]
   20d8c:	add	x4, x0, x2
   20d90:	str	x4, [x29, #112]
   20d94:	str	x5, [x0, x2]
   20d98:	mov	x0, x24
   20d9c:	str	x27, [x4, #8]
   20da0:	bl	aab0 <malloc@plt>
   20da4:	ldr	x4, [x29, #112]
   20da8:	str	x0, [x4, #16]
   20dac:	cbz	x0, 20dd0 <printf_parse@@Base+0x65d4>
   20db0:	mov	x1, x20
   20db4:	mov	x2, x24
   20db8:	bl	a6f0 <memcpy@plt>
   20dbc:	ldr	x4, [x29, #112]
   20dc0:	mov	x1, x25
   20dc4:	add	x0, x4, #0x18
   20dc8:	bl	1e6e0 <printf_parse@@Base+0x3ee4>
   20dcc:	cbz	w0, 20cc4 <printf_parse@@Base+0x64c8>
   20dd0:	ldr	x0, [x29, #160]
   20dd4:	bl	b050 <free@plt>
   20dd8:	cbz	w26, 20ba4 <printf_parse@@Base+0x63a8>
   20ddc:	mov	x0, x21
   20de0:	bl	b050 <free@plt>
   20de4:	b	20ba4 <printf_parse@@Base+0x63a8>
   20de8:	mov	x28, x27
   20dec:	add	x6, x6, #0x1
   20df0:	b	20cbc <printf_parse@@Base+0x64c0>
   20df4:	ldrb	w2, [x2, #10]
   20df8:	tbz	w2, #4, 20e58 <printf_parse@@Base+0x665c>
   20dfc:	ldr	x1, [x29, #112]
   20e00:	mov	x2, x22
   20e04:	ldr	x3, [x29, #136]
   20e08:	mov	x0, x27
   20e0c:	bl	1d5e0 <printf_parse@@Base+0x2de4>
   20e10:	sxtw	x2, w0
   20e14:	cbnz	w0, 20f38 <printf_parse@@Base+0x673c>
   20e18:	ldr	x2, [x29, #136]
   20e1c:	ldr	x1, [x27]
   20e20:	ldr	x0, [x29, #96]
   20e24:	add	x1, x1, x0
   20e28:	mov	x0, x22
   20e2c:	bl	20928 <printf_parse@@Base+0x612c>
   20e30:	tst	w0, #0xff
   20e34:	b.ne	20f34 <printf_parse@@Base+0x6738>  // b.any
   20e38:	cbnz	x19, 20ec8 <printf_parse@@Base+0x66cc>
   20e3c:	ldr	x0, [x29, #160]
   20e40:	bl	b050 <free@plt>
   20e44:	cbz	w26, 20e50 <printf_parse@@Base+0x6654>
   20e48:	mov	x0, x21
   20e4c:	bl	b050 <free@plt>
   20e50:	mov	w0, #0x1                   	// #1
   20e54:	b	20b68 <printf_parse@@Base+0x636c>
   20e58:	cmp	w1, #0x4
   20e5c:	b.ne	20e18 <printf_parse@@Base+0x661c>  // b.any
   20e60:	lsl	x1, x28, #4
   20e64:	ldr	x0, [x0, x1]
   20e68:	add	x0, x0, #0x1
   20e6c:	lsl	x2, x0, #4
   20e70:	add	x0, x20, x0, lsl #4
   20e74:	ldr	x1, [x0, #8]
   20e78:	ldr	x0, [x20, x2]
   20e7c:	sub	x2, x1, x0
   20e80:	cbz	x19, 20ee8 <printf_parse@@Base+0x66ec>
   20e84:	cmn	x0, #0x1
   20e88:	b.eq	20ec8 <printf_parse@@Base+0x66cc>  // b.none
   20e8c:	cmn	x1, #0x1
   20e90:	b.eq	20ec8 <printf_parse@@Base+0x66cc>  // b.none
   20e94:	cbz	x2, 20eec <printf_parse@@Base+0x66f0>
   20e98:	ldr	x3, [x22, #48]
   20e9c:	ldr	x1, [x29, #136]
   20ea0:	ldr	x4, [x22, #8]
   20ea4:	sub	x3, x3, x1
   20ea8:	cmp	x2, x3
   20eac:	b.gt	20ec8 <printf_parse@@Base+0x66cc>
   20eb0:	add	x1, x4, x1
   20eb4:	add	x0, x4, x0
   20eb8:	str	x2, [x29, #96]
   20ebc:	bl	af40 <memcmp@plt>
   20ec0:	ldr	x2, [x29, #96]
   20ec4:	cbz	w0, 20f38 <printf_parse@@Base+0x673c>
   20ec8:	ldr	x1, [x29, #104]
   20ecc:	mov	x4, x25
   20ed0:	mov	x3, x20
   20ed4:	mov	x2, x23
   20ed8:	mov	x0, x19
   20edc:	bl	1eef0 <printf_parse@@Base+0x46f4>
   20ee0:	mov	x28, x0
   20ee4:	b	20ad0 <printf_parse@@Base+0x62d4>
   20ee8:	cbnz	x2, 20f38 <printf_parse@@Base+0x673c>
   20eec:	mov	x1, x28
   20ef0:	mov	x0, x25
   20ef4:	bl	1de7c <printf_parse@@Base+0x3680>
   20ef8:	tst	w0, #0xff
   20efc:	b.eq	20dd0 <printf_parse@@Base+0x65d4>  // b.none
   20f00:	ldr	x0, [x27, #40]
   20f04:	mov	x1, #0x18                  	// #24
   20f08:	madd	x3, x28, x1, x0
   20f0c:	ldr	x1, [x29, #136]
   20f10:	ldr	x0, [x3, #16]
   20f14:	ldr	x28, [x0]
   20f18:	ldr	x0, [x22, #184]
   20f1c:	ldr	x0, [x0, x1, lsl #3]
   20f20:	mov	x1, x28
   20f24:	add	x0, x0, #0x8
   20f28:	bl	1b398 <printf_parse@@Base+0xb9c>
   20f2c:	cbz	x0, 20e18 <printf_parse@@Base+0x661c>
   20f30:	b	20cc4 <printf_parse@@Base+0x64c8>
   20f34:	mov	x2, #0x0                   	// #0
   20f38:	ldr	x0, [x27, #24]
   20f3c:	cmp	x2, #0x0
   20f40:	ldr	x1, [x29, #112]
   20f44:	ldr	x28, [x0, x1, lsl #3]
   20f48:	ldr	x0, [x29, #136]
   20f4c:	add	x1, x0, x2
   20f50:	csinc	x0, x1, x0, ne  // ne = any
   20f54:	str	x0, [x29, #136]
   20f58:	cbz	x19, 20f84 <printf_parse@@Base+0x6788>
   20f5c:	ldr	x1, [x22, #168]
   20f60:	cmp	x0, x1
   20f64:	b.gt	20ec8 <printf_parse@@Base+0x66cc>
   20f68:	ldr	x1, [x22, #184]
   20f6c:	ldr	x0, [x1, x0, lsl #3]
   20f70:	cbz	x0, 20ec8 <printf_parse@@Base+0x66cc>
   20f74:	mov	x1, x28
   20f78:	add	x0, x0, #0x8
   20f7c:	bl	1b398 <printf_parse@@Base+0xb9c>
   20f80:	cbz	x0, 20ec8 <printf_parse@@Base+0x66cc>
   20f84:	str	xzr, [x29, #152]
   20f88:	b	20cc4 <printf_parse@@Base+0x64c8>
   20f8c:	mov	x28, x27
   20f90:	b	20cc4 <printf_parse@@Base+0x64c8>
   20f94:	stp	x29, x30, [sp, #-64]!
   20f98:	mov	x29, sp
   20f9c:	stp	x21, x22, [sp, #32]
   20fa0:	mov	x21, x1
   20fa4:	mov	x22, x0
   20fa8:	ldr	x1, [x2, #8]
   20fac:	stp	x19, x20, [sp, #16]
   20fb0:	stp	x23, x24, [sp, #48]
   20fb4:	cbnz	x1, 20fd8 <printf_parse@@Base+0x67dc>
   20fb8:	str	wzr, [x0]
   20fbc:	mov	x19, #0x0                   	// #0
   20fc0:	mov	x0, x19
   20fc4:	ldp	x19, x20, [sp, #16]
   20fc8:	ldp	x21, x22, [sp, #32]
   20fcc:	ldp	x23, x24, [sp, #48]
   20fd0:	ldp	x29, x30, [sp], #64
   20fd4:	ret
   20fd8:	mov	x20, x2
   20fdc:	mov	x23, x1
   20fe0:	mov	x0, #0x0                   	// #0
   20fe4:	cmp	x1, x0
   20fe8:	b.gt	21050 <printf_parse@@Base+0x6854>
   20fec:	ldr	x0, [x21, #136]
   20ff0:	mov	x1, #0x18                  	// #24
   20ff4:	mov	x7, #0x0                   	// #0
   20ff8:	and	x0, x23, x0
   20ffc:	mul	x0, x0, x1
   21000:	ldr	x1, [x21, #64]
   21004:	add	x9, x1, x0
   21008:	ldr	x8, [x1, x0]
   2100c:	cmp	x8, x7
   21010:	b.gt	21064 <printf_parse@@Base+0x6868>
   21014:	mov	x1, #0x1                   	// #1
   21018:	mov	x0, #0x70                  	// #112
   2101c:	bl	ace0 <calloc@plt>
   21020:	mov	x19, x0
   21024:	cbz	x0, 21044 <printf_parse@@Base+0x6848>
   21028:	add	x24, x0, #0x8
   2102c:	mov	x1, x20
   21030:	mov	x0, x24
   21034:	bl	1e6e0 <printf_parse@@Base+0x3ee4>
   21038:	cbz	w0, 21094 <printf_parse@@Base+0x6898>
   2103c:	mov	x0, x19
   21040:	bl	b050 <free@plt>
   21044:	mov	w0, #0xc                   	// #12
   21048:	str	w0, [x22]
   2104c:	b	20fbc <printf_parse@@Base+0x67c0>
   21050:	ldr	x2, [x20, #16]
   21054:	ldr	x2, [x2, x0, lsl #3]
   21058:	add	x0, x0, #0x1
   2105c:	add	x23, x23, x2
   21060:	b	20fe4 <printf_parse@@Base+0x67e8>
   21064:	ldr	x0, [x9, #16]
   21068:	ldr	x19, [x0, x7, lsl #3]
   2106c:	ldr	x0, [x19]
   21070:	cmp	x0, x23
   21074:	b.ne	2108c <printf_parse@@Base+0x6890>  // b.any
   21078:	mov	x1, x20
   2107c:	add	x0, x19, #0x8
   21080:	bl	1b33c <printf_parse@@Base+0xb40>
   21084:	tst	w0, #0xff
   21088:	b.ne	20fc0 <printf_parse@@Base+0x67c4>  // b.any
   2108c:	add	x7, x7, #0x1
   21090:	b	2100c <printf_parse@@Base+0x6810>
   21094:	ldr	x6, [x20, #8]
   21098:	mov	x0, #0x0                   	// #0
   2109c:	str	x24, [x19, #80]
   210a0:	cmp	x0, x6
   210a4:	b.lt	210c8 <printf_parse@@Base+0x68cc>  // b.tstop
   210a8:	mov	x2, x23
   210ac:	mov	x1, x19
   210b0:	mov	x0, x21
   210b4:	bl	1e278 <printf_parse@@Base+0x3a7c>
   210b8:	cbz	w0, 20fc0 <printf_parse@@Base+0x67c4>
   210bc:	mov	x0, x19
   210c0:	bl	1c768 <printf_parse@@Base+0x1f6c>
   210c4:	b	21044 <printf_parse@@Base+0x6848>
   210c8:	ldr	x1, [x20, #16]
   210cc:	ldr	x2, [x21]
   210d0:	ldr	x1, [x1, x0, lsl #3]
   210d4:	add	x1, x2, x1, lsl #4
   210d8:	ldrb	w2, [x1, #8]
   210dc:	cmp	w2, #0x1
   210e0:	b.ne	210f0 <printf_parse@@Base+0x68f4>  // b.any
   210e4:	ldr	w3, [x1, #8]
   210e8:	tst	w3, #0x3ff00
   210ec:	b.eq	2111c <printf_parse@@Base+0x6920>  // b.none
   210f0:	ldrb	w3, [x19, #104]
   210f4:	cmp	w2, #0x2
   210f8:	ldrb	w5, [x1, #10]
   210fc:	ubfx	x4, x3, #5, #1
   21100:	ubfx	x5, x5, #4, #1
   21104:	orr	w4, w4, w5
   21108:	bfi	w3, w4, #5, #1
   2110c:	strb	w3, [x19, #104]
   21110:	b.ne	21124 <printf_parse@@Base+0x6928>  // b.any
   21114:	orr	w3, w3, #0x10
   21118:	strb	w3, [x19, #104]
   2111c:	add	x0, x0, #0x1
   21120:	b	210a0 <printf_parse@@Base+0x68a4>
   21124:	cmp	w2, #0x4
   21128:	b.ne	21134 <printf_parse@@Base+0x6938>  // b.any
   2112c:	orr	w3, w3, #0x40
   21130:	b	21118 <printf_parse@@Base+0x691c>
   21134:	cmp	w2, #0xc
   21138:	b.eq	21148 <printf_parse@@Base+0x694c>  // b.none
   2113c:	ldr	w1, [x1, #8]
   21140:	tst	w1, #0x3ff00
   21144:	b.eq	2111c <printf_parse@@Base+0x6920>  // b.none
   21148:	ldrb	w1, [x19, #104]
   2114c:	orr	w1, w1, #0xffffff80
   21150:	strb	w1, [x19, #104]
   21154:	b	2111c <printf_parse@@Base+0x6920>
   21158:	stp	x29, x30, [sp, #-144]!
   2115c:	mov	x29, sp
   21160:	stp	x19, x20, [sp, #16]
   21164:	stp	x21, x22, [sp, #32]
   21168:	mov	x21, x0
   2116c:	stp	x23, x24, [sp, #48]
   21170:	mov	x23, x1
   21174:	mov	x24, x2
   21178:	mov	x1, x2
   2117c:	stp	x25, x26, [sp, #64]
   21180:	stp	x27, x28, [sp, #80]
   21184:	mov	w27, w4
   21188:	str	x3, [sp, #104]
   2118c:	bl	1b768 <printf_parse@@Base+0xf6c>
   21190:	cmn	x0, #0x1
   21194:	b.ne	211b8 <printf_parse@@Base+0x69bc>  // b.any
   21198:	mov	w0, #0x0                   	// #0
   2119c:	ldp	x19, x20, [sp, #16]
   211a0:	ldp	x21, x22, [sp, #32]
   211a4:	ldp	x23, x24, [sp, #48]
   211a8:	ldp	x25, x26, [sp, #64]
   211ac:	ldp	x27, x28, [sp, #80]
   211b0:	ldp	x29, x30, [sp], #144
   211b4:	ret
   211b8:	mov	x1, #0x28                  	// #40
   211bc:	add	x22, sp, #0x78
   211c0:	ldr	x25, [x21, #152]
   211c4:	mul	x0, x0, x1
   211c8:	add	x28, sp, #0x74
   211cc:	str	x0, [sp, #96]
   211d0:	ldr	x0, [sp, #96]
   211d4:	ldr	x20, [x21, #216]
   211d8:	add	x20, x20, x0
   211dc:	ldr	x1, [x20]
   211e0:	mov	x0, x23
   211e4:	bl	1b398 <printf_parse@@Base+0xb9c>
   211e8:	cbz	x0, 21314 <printf_parse@@Base+0x6b18>
   211ec:	ldp	x0, x19, [x20, #16]
   211f0:	add	x19, x24, x19
   211f4:	sub	x19, x19, x0
   211f8:	cmp	x24, x19
   211fc:	b.ne	2127c <printf_parse@@Base+0x6a80>  // b.any
   21200:	ldr	x0, [x25, #40]
   21204:	mov	x2, #0x18                  	// #24
   21208:	madd	x1, x1, x2, x0
   2120c:	ldr	x0, [x1, #16]
   21210:	ldr	x1, [x0]
   21214:	mov	x0, x23
   21218:	bl	1b398 <printf_parse@@Base+0xb9c>
   2121c:	cbnz	x0, 21314 <printf_parse@@Base+0x6b18>
   21220:	mov	x0, x22
   21224:	bl	1bac4 <printf_parse@@Base+0x12c8>
   21228:	ldr	x2, [sp, #104]
   2122c:	mov	w3, w27
   21230:	mov	x1, x22
   21234:	str	w0, [sp, #116]
   21238:	mov	x0, x25
   2123c:	bl	20808 <printf_parse@@Base+0x600c>
   21240:	mov	w19, w0
   21244:	mov	x1, x22
   21248:	mov	x0, x23
   2124c:	bl	1e370 <printf_parse@@Base+0x3b74>
   21250:	mov	w20, w0
   21254:	ldr	x0, [sp, #136]
   21258:	bl	b050 <free@plt>
   2125c:	ldr	w0, [sp, #116]
   21260:	orr	w1, w19, w20
   21264:	orr	w1, w1, w0
   21268:	cbz	w1, 211d0 <printf_parse@@Base+0x69d4>
   2126c:	cbnz	w0, 2119c <printf_parse@@Base+0x69a0>
   21270:	cmp	w19, #0x0
   21274:	csel	w0, w19, w20, ne  // ne = any
   21278:	b	2119c <printf_parse@@Base+0x69a0>
   2127c:	ldr	x0, [x25, #24]
   21280:	lsl	x19, x19, #3
   21284:	ldr	x26, [x0, x1, lsl #3]
   21288:	ldr	x0, [x21, #184]
   2128c:	ldr	x6, [x0, x19]
   21290:	cbz	x6, 21340 <printf_parse@@Base+0x6b44>
   21294:	add	x6, x6, #0x8
   21298:	mov	x1, x26
   2129c:	mov	x0, x6
   212a0:	bl	1b398 <printf_parse@@Base+0xb9c>
   212a4:	cbnz	x0, 21314 <printf_parse@@Base+0x6b18>
   212a8:	mov	x1, x6
   212ac:	mov	x0, x22
   212b0:	bl	1e6e0 <printf_parse@@Base+0x3ee4>
   212b4:	str	w0, [sp, #116]
   212b8:	mov	x1, x26
   212bc:	mov	x0, x22
   212c0:	bl	1de7c <printf_parse@@Base+0x3680>
   212c4:	and	w0, w0, #0xff
   212c8:	ldr	w1, [sp, #116]
   212cc:	eor	w0, w0, #0x1
   212d0:	cmp	w1, #0x0
   212d4:	cset	w1, ne  // ne = any
   212d8:	orr	w0, w1, w0
   212dc:	cbnz	w0, 21324 <printf_parse@@Base+0x6b28>
   212e0:	ldr	x26, [x21, #184]
   212e4:	mov	x2, x22
   212e8:	mov	x1, x25
   212ec:	mov	x0, x28
   212f0:	bl	20f94 <printf_parse@@Base+0x6798>
   212f4:	str	x0, [x26, x19]
   212f8:	ldr	x0, [sp, #136]
   212fc:	bl	b050 <free@plt>
   21300:	ldr	x0, [x21, #184]
   21304:	ldr	x0, [x0, x19]
   21308:	cbnz	x0, 21314 <printf_parse@@Base+0x6b18>
   2130c:	ldr	w0, [sp, #116]
   21310:	cbnz	w0, 2119c <printf_parse@@Base+0x69a0>
   21314:	ldrb	w0, [x20, #32]
   21318:	add	x20, x20, #0x28
   2131c:	cbnz	w0, 211dc <printf_parse@@Base+0x69e0>
   21320:	b	21198 <printf_parse@@Base+0x699c>
   21324:	ldr	x0, [sp, #136]
   21328:	bl	b050 <free@plt>
   2132c:	ldr	w0, [sp, #116]
   21330:	mov	w1, #0xc                   	// #12
   21334:	cmp	w0, #0x0
   21338:	csel	w0, w0, w1, ne  // ne = any
   2133c:	b	2119c <printf_parse@@Base+0x69a0>
   21340:	mov	x1, x26
   21344:	mov	x0, x22
   21348:	bl	1bac4 <printf_parse@@Base+0x12c8>
   2134c:	str	w0, [sp, #116]
   21350:	cbz	w0, 212e0 <printf_parse@@Base+0x6ae4>
   21354:	b	2119c <printf_parse@@Base+0x69a0>
   21358:	stp	x29, x30, [sp, #-112]!
   2135c:	mov	x29, sp
   21360:	stp	x19, x20, [sp, #16]
   21364:	mov	x20, x1
   21368:	mov	x19, #0x0                   	// #0
   2136c:	stp	x21, x22, [sp, #32]
   21370:	mov	x22, x0
   21374:	mov	x21, x3
   21378:	stp	x23, x24, [sp, #48]
   2137c:	mov	x23, x2
   21380:	add	x24, sp, #0x58
   21384:	str	x25, [sp, #64]
   21388:	add	x25, sp, #0x54
   2138c:	cmp	x19, x21
   21390:	b.lt	2139c <printf_parse@@Base+0x6ba0>  // b.tstop
   21394:	mov	w0, #0x0                   	// #0
   21398:	b	213f4 <printf_parse@@Base+0x6bf8>
   2139c:	ldr	x1, [x20, x19, lsl #3]
   213a0:	ldr	x2, [x23, x19, lsl #3]
   213a4:	cbnz	x1, 213b4 <printf_parse@@Base+0x6bb8>
   213a8:	str	x2, [x20, x19, lsl #3]
   213ac:	add	x19, x19, #0x1
   213b0:	b	2138c <printf_parse@@Base+0x6b90>
   213b4:	cbz	x2, 213ac <printf_parse@@Base+0x6bb0>
   213b8:	add	x2, x2, #0x8
   213bc:	add	x1, x1, #0x8
   213c0:	mov	x0, x24
   213c4:	bl	1e758 <printf_parse@@Base+0x3f5c>
   213c8:	str	w0, [sp, #84]
   213cc:	cbnz	w0, 213f4 <printf_parse@@Base+0x6bf8>
   213d0:	mov	x2, x24
   213d4:	mov	x1, x22
   213d8:	mov	x0, x25
   213dc:	bl	20f94 <printf_parse@@Base+0x6798>
   213e0:	str	x0, [x20, x19, lsl #3]
   213e4:	ldr	x0, [sp, #104]
   213e8:	bl	b050 <free@plt>
   213ec:	ldr	w0, [sp, #84]
   213f0:	cbz	w0, 213ac <printf_parse@@Base+0x6bb0>
   213f4:	ldp	x19, x20, [sp, #16]
   213f8:	ldp	x21, x22, [sp, #32]
   213fc:	ldp	x23, x24, [sp, #48]
   21400:	ldr	x25, [sp, #64]
   21404:	ldp	x29, x30, [sp], #112
   21408:	ret
   2140c:	stp	x29, x30, [sp, #-256]!
   21410:	mov	x29, sp
   21414:	stp	x23, x24, [sp, #48]
   21418:	mov	w23, w6
   2141c:	ldr	x24, [x0, #152]
   21420:	stp	x21, x22, [sp, #32]
   21424:	mov	x22, x1
   21428:	stp	x25, x26, [sp, #64]
   2142c:	mov	x26, x3
   21430:	ldrsw	x21, [x0, #224]
   21434:	ldr	x25, [x1, #8]
   21438:	stp	x19, x20, [sp, #16]
   2143c:	mov	x19, x0
   21440:	ldr	x1, [x24]
   21444:	lsl	x0, x2, #4
   21448:	stp	x27, x28, [sp, #80]
   2144c:	add	x21, x21, x5
   21450:	mov	x20, x2
   21454:	str	x5, [sp, #128]
   21458:	cmp	x21, x25
   2145c:	str	x4, [sp, #168]
   21460:	ldr	x28, [x1, x0]
   21464:	str	wzr, [sp, #200]
   21468:	b.lt	214d4 <printf_parse@@Base+0x6cd8>  // b.tstop
   2146c:	add	x21, x21, #0x1
   21470:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   21474:	sub	x0, x0, x25
   21478:	cmp	x0, x21
   2147c:	b.ge	214a0 <printf_parse@@Base+0x6ca4>  // b.tcont
   21480:	mov	w0, #0xc                   	// #12
   21484:	ldp	x19, x20, [sp, #16]
   21488:	ldp	x21, x22, [sp, #32]
   2148c:	ldp	x23, x24, [sp, #48]
   21490:	ldp	x25, x26, [sp, #64]
   21494:	ldp	x27, x28, [sp, #80]
   21498:	ldp	x29, x30, [sp], #256
   2149c:	ret
   214a0:	add	x27, x25, x21
   214a4:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   214a8:	cmp	x27, x0
   214ac:	b.hi	21480 <printf_parse@@Base+0x6c84>  // b.pmore
   214b0:	ldr	x0, [x22, #16]
   214b4:	lsl	x1, x27, #3
   214b8:	bl	ad60 <realloc@plt>
   214bc:	cbz	x0, 21480 <printf_parse@@Base+0x6c84>
   214c0:	stp	x27, x0, [x22, #8]
   214c4:	lsl	x2, x21, #3
   214c8:	add	x0, x0, x25, lsl #3
   214cc:	mov	w1, #0x0                   	// #0
   214d0:	bl	ac10 <memset@plt>
   214d4:	ldr	x21, [x22]
   214d8:	ldr	w2, [x19, #160]
   214dc:	cmp	x21, #0x0
   214e0:	ldr	x27, [x22, #16]
   214e4:	csel	x21, x21, x26, ne  // ne = any
   214e8:	ldr	x0, [x19, #184]
   214ec:	str	x0, [sp, #152]
   214f0:	str	x27, [x19, #184]
   214f4:	sub	x1, x21, #0x1
   214f8:	ldr	x0, [x19, #72]
   214fc:	str	x21, [x19, #72]
   21500:	str	x0, [sp, #160]
   21504:	mov	x0, x19
   21508:	bl	20088 <printf_parse@@Base+0x588c>
   2150c:	mov	w25, w0
   21510:	cmp	x21, x26
   21514:	b.ne	21588 <printf_parse@@Base+0x6d8c>  // b.any
   21518:	add	x26, sp, #0xd0
   2151c:	mov	x1, x20
   21520:	mov	x0, x26
   21524:	bl	1bac4 <printf_parse@@Base+0x12c8>
   21528:	str	w0, [sp, #200]
   2152c:	cbnz	w0, 21484 <printf_parse@@Base+0x6c88>
   21530:	mov	w3, w23
   21534:	mov	x2, x28
   21538:	mov	x1, x26
   2153c:	mov	x0, x24
   21540:	bl	20808 <printf_parse@@Base+0x600c>
   21544:	str	w0, [sp, #200]
   21548:	cbnz	w0, 215fc <printf_parse@@Base+0x6e00>
   2154c:	ldr	x0, [sp, #216]
   21550:	add	x20, sp, #0xd0
   21554:	cbnz	x0, 215dc <printf_parse@@Base+0x6de0>
   21558:	mov	x2, x20
   2155c:	mov	w3, w25
   21560:	mov	x1, x24
   21564:	add	x0, sp, #0xc8
   21568:	bl	1e8ac <printf_parse@@Base+0x40b0>
   2156c:	mov	x20, x0
   21570:	cbnz	x0, 2157c <printf_parse@@Base+0x6d80>
   21574:	ldr	w0, [sp, #200]
   21578:	cbnz	w0, 215fc <printf_parse@@Base+0x6e00>
   2157c:	ldr	x0, [x19, #184]
   21580:	str	x20, [x0, x21, lsl #3]
   21584:	b	215b4 <printf_parse@@Base+0x6db8>
   21588:	ldr	x20, [x27, x21, lsl #3]
   2158c:	cbz	x20, 215cc <printf_parse@@Base+0x6dd0>
   21590:	ldrb	w0, [x20, #104]
   21594:	tbz	w0, #6, 215cc <printf_parse@@Base+0x6dd0>
   21598:	add	x1, x20, #0x8
   2159c:	add	x0, sp, #0xd0
   215a0:	bl	1e6e0 <printf_parse@@Base+0x3ee4>
   215a4:	str	w0, [sp, #200]
   215a8:	cbnz	w0, 21484 <printf_parse@@Base+0x6c88>
   215ac:	ldrb	w0, [x20, #104]
   215b0:	tbnz	w0, #6, 2154c <printf_parse@@Base+0x6d50>
   215b4:	add	x0, sp, #0xcc
   215b8:	add	x25, sp, #0xd0
   215bc:	add	x26, sp, #0xe8
   215c0:	str	xzr, [sp, #112]
   215c4:	str	x0, [sp, #176]
   215c8:	b	217e8 <printf_parse@@Base+0x6fec>
   215cc:	stp	xzr, xzr, [sp, #208]
   215d0:	str	xzr, [sp, #224]
   215d4:	cbnz	x20, 215ac <printf_parse@@Base+0x6db0>
   215d8:	b	215b4 <printf_parse@@Base+0x6db8>
   215dc:	mov	w4, w23
   215e0:	mov	x3, x28
   215e4:	mov	x2, x21
   215e8:	mov	x1, x20
   215ec:	mov	x0, x19
   215f0:	bl	21158 <printf_parse@@Base+0x695c>
   215f4:	str	w0, [sp, #200]
   215f8:	cbz	w0, 21558 <printf_parse@@Base+0x6d5c>
   215fc:	ldr	x0, [sp, #224]
   21600:	bl	b050 <free@plt>
   21604:	ldr	w0, [sp, #200]
   21608:	b	21484 <printf_parse@@Base+0x6c88>
   2160c:	add	x0, x21, #0x1
   21610:	str	x0, [sp, #144]
   21614:	str	xzr, [sp, #216]
   21618:	lsl	x0, x0, #3
   2161c:	str	x0, [sp, #136]
   21620:	ldr	x0, [x19, #184]
   21624:	ldr	x1, [sp, #136]
   21628:	ldr	x1, [x0, x1]
   2162c:	cbz	x1, 21644 <printf_parse@@Base+0x6e48>
   21630:	add	x1, x1, #0x8
   21634:	mov	x0, x25
   21638:	bl	1e370 <printf_parse@@Base+0x3b74>
   2163c:	str	w0, [sp, #200]
   21640:	cbnz	w0, 215fc <printf_parse@@Base+0x6e00>
   21644:	cbz	x20, 21754 <printf_parse@@Base+0x6f58>
   21648:	ldr	x27, [x19, #152]
   2164c:	stp	xzr, xzr, [x26]
   21650:	str	xzr, [x26, #16]
   21654:	str	xzr, [sp, #104]
   21658:	str	wzr, [sp, #204]
   2165c:	ldr	x1, [x20, #40]
   21660:	add	x0, x20, #0x20
   21664:	ldr	x2, [sp, #104]
   21668:	cmp	x2, x1
   2166c:	b.lt	21680 <printf_parse@@Base+0x6e84>  // b.tstop
   21670:	ldr	x0, [sp, #248]
   21674:	bl	b050 <free@plt>
   21678:	str	wzr, [sp, #200]
   2167c:	b	21754 <printf_parse@@Base+0x6f58>
   21680:	ldr	x0, [x0, #16]
   21684:	ldr	x1, [sp, #104]
   21688:	ldr	x0, [x0, x1, lsl #3]
   2168c:	str	x0, [sp, #96]
   21690:	ldr	x1, [sp, #96]
   21694:	lsl	x5, x0, #4
   21698:	ldr	x0, [x27]
   2169c:	add	x0, x0, x1, lsl #4
   216a0:	ldrb	w0, [x0, #10]
   216a4:	tbnz	w0, #4, 216d4 <printf_parse@@Base+0x6ed8>
   216a8:	ldr	x1, [x27]
   216ac:	mov	x2, x21
   216b0:	mov	x0, x19
   216b4:	add	x1, x1, x5
   216b8:	bl	20928 <printf_parse@@Base+0x612c>
   216bc:	tst	w0, #0xff
   216c0:	b.ne	218a4 <printf_parse@@Base+0x70a8>  // b.any
   216c4:	ldr	x0, [sp, #104]
   216c8:	add	x0, x0, #0x1
   216cc:	str	x0, [sp, #104]
   216d0:	b	2165c <printf_parse@@Base+0x6e60>
   216d4:	ldr	x1, [sp, #96]
   216d8:	mov	x3, x21
   216dc:	mov	x2, x19
   216e0:	mov	x0, x27
   216e4:	str	x5, [sp, #120]
   216e8:	bl	1d5e0 <printf_parse@@Base+0x2de4>
   216ec:	cmp	w0, #0x1
   216f0:	ldr	x5, [sp, #120]
   216f4:	b.le	218d0 <printf_parse@@Base+0x70d4>
   216f8:	add	x0, x21, w0, sxtw
   216fc:	ldr	x1, [x27, #24]
   21700:	lsl	x0, x0, #3
   21704:	ldr	x2, [sp, #96]
   21708:	str	x0, [sp, #120]
   2170c:	ldr	x0, [x19, #184]
   21710:	ldr	x2, [x1, x2, lsl #3]
   21714:	ldr	x1, [sp, #120]
   21718:	ldr	x1, [x0, x1]
   2171c:	str	xzr, [sp, #240]
   21720:	cbz	x1, 2184c <printf_parse@@Base+0x7050>
   21724:	add	x1, x1, #0x8
   21728:	mov	x0, x26
   2172c:	str	x2, [sp, #184]
   21730:	bl	1e370 <printf_parse@@Base+0x3b74>
   21734:	str	w0, [sp, #204]
   21738:	ldr	x2, [sp, #184]
   2173c:	cbz	w0, 2184c <printf_parse@@Base+0x7050>
   21740:	ldr	x0, [sp, #248]
   21744:	bl	b050 <free@plt>
   21748:	ldr	w0, [sp, #204]
   2174c:	str	w0, [sp, #200]
   21750:	cbnz	w0, 215fc <printf_parse@@Base+0x6e00>
   21754:	ldr	x0, [sp, #216]
   21758:	cbz	x0, 21798 <printf_parse@@Base+0x6f9c>
   2175c:	mov	w3, w23
   21760:	mov	x2, x28
   21764:	mov	x1, x25
   21768:	mov	x0, x24
   2176c:	bl	20808 <printf_parse@@Base+0x600c>
   21770:	str	w0, [sp, #200]
   21774:	cbnz	w0, 215fc <printf_parse@@Base+0x6e00>
   21778:	ldr	x2, [sp, #144]
   2177c:	mov	w4, w23
   21780:	mov	x3, x28
   21784:	mov	x1, x25
   21788:	mov	x0, x19
   2178c:	bl	21158 <printf_parse@@Base+0x695c>
   21790:	str	w0, [sp, #200]
   21794:	cbnz	w0, 215fc <printf_parse@@Base+0x6e00>
   21798:	ldr	w2, [x19, #160]
   2179c:	mov	x1, x21
   217a0:	mov	x0, x19
   217a4:	bl	20088 <printf_parse@@Base+0x588c>
   217a8:	mov	w3, w0
   217ac:	mov	x2, x25
   217b0:	mov	x1, x24
   217b4:	add	x0, sp, #0xc8
   217b8:	bl	1e8ac <printf_parse@@Base+0x40b0>
   217bc:	mov	x20, x0
   217c0:	cbnz	x0, 217cc <printf_parse@@Base+0x6fd0>
   217c4:	ldr	w0, [sp, #200]
   217c8:	cbnz	w0, 215fc <printf_parse@@Base+0x6e00>
   217cc:	ldr	x0, [x19, #184]
   217d0:	cmp	x20, #0x0
   217d4:	ldp	x1, x21, [sp, #136]
   217d8:	str	x20, [x0, x1]
   217dc:	ldr	x0, [sp, #112]
   217e0:	csinc	x0, xzr, x0, ne  // ne = any
   217e4:	str	x0, [sp, #112]
   217e8:	ldr	x0, [sp, #128]
   217ec:	cmp	x21, x0
   217f0:	b.ge	21804 <printf_parse@@Base+0x7008>  // b.tcont
   217f4:	ldr	x1, [sp, #112]
   217f8:	ldrsw	x0, [x19, #224]
   217fc:	cmp	x0, x1
   21800:	b.ge	2160c <printf_parse@@Base+0x6e10>  // b.tcont
   21804:	ldr	x0, [sp, #224]
   21808:	bl	b050 <free@plt>
   2180c:	ldr	x1, [sp, #128]
   21810:	ldr	x0, [x19, #184]
   21814:	ldr	x0, [x0, x1, lsl #3]
   21818:	cbz	x0, 21820 <printf_parse@@Base+0x7024>
   2181c:	add	x0, x0, #0x8
   21820:	str	x21, [x22]
   21824:	ldr	x1, [sp, #152]
   21828:	str	x1, [x19, #184]
   2182c:	ldr	x1, [sp, #160]
   21830:	str	x1, [x19, #72]
   21834:	cbz	x0, 218d8 <printf_parse@@Base+0x70dc>
   21838:	ldr	x1, [sp, #168]
   2183c:	bl	1b398 <printf_parse@@Base+0xb9c>
   21840:	cmp	x0, #0x0
   21844:	cset	w0, eq  // eq = none
   21848:	b	21484 <printf_parse@@Base+0x6c88>
   2184c:	mov	x1, x2
   21850:	mov	x0, x26
   21854:	bl	1de7c <printf_parse@@Base+0x3680>
   21858:	tst	w0, #0xff
   2185c:	b.ne	21874 <printf_parse@@Base+0x7078>  // b.any
   21860:	ldr	x0, [sp, #248]
   21864:	bl	b050 <free@plt>
   21868:	mov	w0, #0xc                   	// #12
   2186c:	str	w0, [sp, #200]
   21870:	b	215fc <printf_parse@@Base+0x6e00>
   21874:	ldr	x0, [sp, #176]
   21878:	mov	x1, x27
   2187c:	ldr	x3, [x19, #184]
   21880:	mov	x2, x26
   21884:	str	x3, [sp, #184]
   21888:	bl	20f94 <printf_parse@@Base+0x6798>
   2188c:	ldr	x1, [sp, #120]
   21890:	ldr	x3, [sp, #184]
   21894:	str	x0, [x3, x1]
   21898:	ldr	x0, [x19, #184]
   2189c:	ldr	x0, [x0, x1]
   218a0:	cbz	x0, 218c4 <printf_parse@@Base+0x70c8>
   218a4:	ldr	x0, [x27, #24]
   218a8:	ldr	x1, [sp, #96]
   218ac:	ldr	x1, [x0, x1, lsl #3]
   218b0:	mov	x0, x25
   218b4:	bl	1de7c <printf_parse@@Base+0x3680>
   218b8:	tst	w0, #0xff
   218bc:	b.ne	216c4 <printf_parse@@Base+0x6ec8>  // b.any
   218c0:	b	21860 <printf_parse@@Base+0x7064>
   218c4:	ldr	w0, [sp, #204]
   218c8:	cbz	w0, 218a4 <printf_parse@@Base+0x70a8>
   218cc:	b	21740 <printf_parse@@Base+0x6f44>
   218d0:	cbz	w0, 216a8 <printf_parse@@Base+0x6eac>
   218d4:	b	218a4 <printf_parse@@Base+0x70a8>
   218d8:	mov	w0, #0x1                   	// #1
   218dc:	b	21484 <printf_parse@@Base+0x6c88>
   218e0:	stp	x29, x30, [sp, #-80]!
   218e4:	mov	x5, x4
   218e8:	mov	w6, #0x8                   	// #8
   218ec:	mov	x29, sp
   218f0:	stp	x19, x20, [sp, #16]
   218f4:	mov	x20, x4
   218f8:	mov	x4, x3
   218fc:	stp	x21, x22, [sp, #32]
   21900:	mov	x21, x2
   21904:	mov	x19, x0
   21908:	stp	x23, x24, [sp, #48]
   2190c:	mov	x23, x1
   21910:	mov	x24, x3
   21914:	add	x1, x2, #0x10
   21918:	ldr	x3, [x2, #8]
   2191c:	ldr	x2, [x2]
   21920:	str	x25, [sp, #64]
   21924:	bl	2140c <printf_parse@@Base+0x6c10>
   21928:	cbnz	w0, 21960 <printf_parse@@Base+0x7164>
   2192c:	ldp	x1, x0, [x19, #200]
   21930:	ldr	x25, [x23]
   21934:	ldr	x22, [x21, #8]
   21938:	cmp	x1, x0
   2193c:	b.lt	219a0 <printf_parse@@Base+0x71a4>  // b.tstop
   21940:	mov	x1, #0x50                  	// #80
   21944:	mul	x1, x0, x1
   21948:	ldr	x0, [x19, #216]
   2194c:	bl	ad60 <realloc@plt>
   21950:	cbnz	x0, 21978 <printf_parse@@Base+0x717c>
   21954:	ldr	x0, [x19, #216]
   21958:	bl	b050 <free@plt>
   2195c:	mov	w0, #0xc                   	// #12
   21960:	ldp	x19, x20, [sp, #16]
   21964:	ldp	x21, x22, [sp, #32]
   21968:	ldp	x23, x24, [sp, #48]
   2196c:	ldr	x25, [sp, #64]
   21970:	ldp	x29, x30, [sp], #80
   21974:	ret
   21978:	ldp	x4, x2, [x19, #200]
   2197c:	mov	x3, #0x28                  	// #40
   21980:	str	x0, [x19, #216]
   21984:	mov	w1, #0x0                   	// #0
   21988:	mul	x2, x2, x3
   2198c:	madd	x0, x4, x3, x0
   21990:	bl	ac10 <memset@plt>
   21994:	ldr	x0, [x19, #208]
   21998:	lsl	x0, x0, #1
   2199c:	str	x0, [x19, #208]
   219a0:	ldr	x1, [x19, #200]
   219a4:	mov	x2, #0x28                  	// #40
   219a8:	ldr	x3, [x19, #216]
   219ac:	cmp	x1, #0x0
   219b0:	mul	x2, x1, x2
   219b4:	b.le	219d4 <printf_parse@@Base+0x71d8>
   219b8:	sub	x0, x2, #0x28
   219bc:	add	x0, x3, x0
   219c0:	ldr	x4, [x0, #8]
   219c4:	cmp	x20, x4
   219c8:	b.ne	219d4 <printf_parse@@Base+0x71d8>  // b.any
   219cc:	mov	w4, #0x1                   	// #1
   219d0:	strb	w4, [x0, #32]
   219d4:	add	x0, x3, x2
   219d8:	cmp	x25, x22
   219dc:	str	x24, [x3, x2]
   219e0:	csetm	w2, eq  // eq = none
   219e4:	add	x1, x1, #0x1
   219e8:	stp	x20, x25, [x0, #8]
   219ec:	str	x22, [x0, #24]
   219f0:	strh	w2, [x0, #34]
   219f4:	str	x1, [x19, #200]
   219f8:	strb	wzr, [x0, #32]
   219fc:	sub	x0, x22, x25
   21a00:	ldrsw	x1, [x19, #224]
   21a04:	cmp	x1, x0
   21a08:	b.ge	21a14 <printf_parse@@Base+0x7218>  // b.tcont
   21a0c:	sub	w22, w22, w25
   21a10:	str	w22, [x19, #224]
   21a14:	ldr	x5, [x21, #8]
   21a18:	mov	x0, x19
   21a1c:	ldr	x1, [x23]
   21a20:	add	x20, x20, x5
   21a24:	ldp	x21, x22, [sp, #32]
   21a28:	sub	x1, x20, x1
   21a2c:	ldp	x19, x20, [sp, #16]
   21a30:	ldp	x23, x24, [sp, #48]
   21a34:	ldr	x25, [sp, #64]
   21a38:	ldp	x29, x30, [sp], #80
   21a3c:	b	1c408 <printf_parse@@Base+0x1c0c>
   21a40:	stp	x29, x30, [sp, #-224]!
   21a44:	mov	x29, sp
   21a48:	stp	x19, x20, [sp, #16]
   21a4c:	ldr	x19, [x0, #72]
   21a50:	stp	x21, x22, [sp, #32]
   21a54:	stp	x23, x24, [sp, #48]
   21a58:	mov	x24, x0
   21a5c:	ldr	x22, [x0, #152]
   21a60:	lsl	x0, x19, #3
   21a64:	str	x0, [sp, #128]
   21a68:	add	x0, sp, #0xc8
   21a6c:	stp	x25, x26, [sp, #64]
   21a70:	stp	x27, x28, [sp, #80]
   21a74:	str	xzr, [sp, #96]
   21a78:	str	x1, [sp, #160]
   21a7c:	str	x0, [sp, #168]
   21a80:	add	x0, sp, #0xc4
   21a84:	str	x0, [sp, #176]
   21a88:	ldr	x0, [sp, #160]
   21a8c:	ldr	x1, [sp, #96]
   21a90:	ldr	x0, [x0, #8]
   21a94:	cmp	x0, x1
   21a98:	b.gt	21aa4 <printf_parse@@Base+0x72a8>
   21a9c:	str	wzr, [sp, #196]
   21aa0:	b	21c6c <printf_parse@@Base+0x7470>
   21aa4:	ldr	x0, [sp, #160]
   21aa8:	ldr	x1, [sp, #96]
   21aac:	ldr	x0, [x0, #16]
   21ab0:	ldr	x21, [x0, x1, lsl #3]
   21ab4:	ldr	x0, [x22]
   21ab8:	lsl	x20, x21, #4
   21abc:	add	x0, x0, x21, lsl #4
   21ac0:	ldrb	w1, [x0, #8]
   21ac4:	cmp	w1, #0x4
   21ac8:	b.eq	21adc <printf_parse@@Base+0x72e0>  // b.none
   21acc:	ldr	x0, [sp, #96]
   21ad0:	add	x0, x0, #0x1
   21ad4:	str	x0, [sp, #96]
   21ad8:	b	21a88 <printf_parse@@Base+0x728c>
   21adc:	ldr	w23, [x0, #8]
   21ae0:	tst	w23, #0x3ff00
   21ae4:	b.eq	21b1c <printf_parse@@Base+0x7320>  // b.none
   21ae8:	ldr	w2, [x24, #160]
   21aec:	mov	x1, x19
   21af0:	mov	x0, x24
   21af4:	bl	20088 <printf_parse@@Base+0x588c>
   21af8:	ubfx	x1, x23, #8, #10
   21afc:	tbz	w23, #10, 21b04 <printf_parse@@Base+0x7308>
   21b00:	tbz	w0, #0, 21acc <printf_parse@@Base+0x72d0>
   21b04:	tbz	w1, #3, 21b0c <printf_parse@@Base+0x7310>
   21b08:	tbnz	w0, #0, 21acc <printf_parse@@Base+0x72d0>
   21b0c:	tbz	w1, #5, 21b14 <printf_parse@@Base+0x7318>
   21b10:	tbz	w0, #1, 21acc <printf_parse@@Base+0x72d0>
   21b14:	tbz	w1, #7, 21b1c <printf_parse@@Base+0x7320>
   21b18:	tbz	w0, #3, 21acc <printf_parse@@Base+0x72d0>
   21b1c:	ldr	x0, [x24, #200]
   21b20:	mov	x1, x19
   21b24:	str	x0, [sp, #104]
   21b28:	mov	x0, x24
   21b2c:	bl	1b768 <printf_parse@@Base+0xf6c>
   21b30:	cmn	x0, #0x1
   21b34:	b.eq	21bb4 <printf_parse@@Base+0x73b8>  // b.none
   21b38:	ldr	x1, [x24, #216]
   21b3c:	mov	x2, #0x28                  	// #40
   21b40:	madd	x0, x0, x2, x1
   21b44:	ldr	x1, [x0]
   21b48:	cmp	x21, x1
   21b4c:	b.ne	21ba8 <printf_parse@@Base+0x73ac>  // b.any
   21b50:	lsl	x0, x21, #3
   21b54:	str	wzr, [sp, #196]
   21b58:	mov	x26, x0
   21b5c:	mov	x0, #0x18                  	// #24
   21b60:	mul	x0, x21, x0
   21b64:	mov	x25, x0
   21b68:	ldr	x1, [sp, #104]
   21b6c:	ldr	x0, [x24, #200]
   21b70:	cmp	x0, x1
   21b74:	b.le	21acc <printf_parse@@Base+0x72d0>
   21b78:	ldr	x0, [sp, #104]
   21b7c:	mov	x1, #0x28                  	// #40
   21b80:	ldr	x2, [x24, #216]
   21b84:	mul	x0, x0, x1
   21b88:	add	x1, x2, x0
   21b8c:	ldr	x0, [x2, x0]
   21b90:	cmp	x0, x21
   21b94:	b.eq	21e98 <printf_parse@@Base+0x769c>  // b.none
   21b98:	ldr	x0, [sp, #104]
   21b9c:	add	x0, x0, #0x1
   21ba0:	str	x0, [sp, #104]
   21ba4:	b	21b68 <printf_parse@@Base+0x736c>
   21ba8:	ldrb	w1, [x0, #32]
   21bac:	add	x0, x0, #0x28
   21bb0:	cbnz	w1, 21b44 <printf_parse@@Base+0x7348>
   21bb4:	ldr	x28, [x24, #152]
   21bb8:	str	xzr, [sp, #112]
   21bbc:	ldr	x25, [x24, #8]
   21bc0:	ldr	x0, [x28]
   21bc4:	ldr	x0, [x0, x20]
   21bc8:	str	x0, [sp, #136]
   21bcc:	ldr	x1, [sp, #112]
   21bd0:	ldr	x0, [x24, #232]
   21bd4:	cmp	x1, x0
   21bd8:	b.ge	21b50 <printf_parse@@Base+0x7354>  // b.tcont
   21bdc:	ldr	x1, [sp, #112]
   21be0:	ldr	x0, [x24, #248]
   21be4:	ldr	x27, [x0, x1, lsl #3]
   21be8:	ldr	x1, [x28]
   21bec:	ldr	x0, [x27, #8]
   21bf0:	lsl	x0, x0, #4
   21bf4:	ldr	x0, [x1, x0]
   21bf8:	ldr	x1, [sp, #136]
   21bfc:	cmp	x1, x0
   21c00:	b.ne	21cf0 <printf_parse@@Base+0x74f4>  // b.any
   21c04:	ldr	x26, [x27]
   21c08:	mov	x20, x19
   21c0c:	mov	x23, #0x0                   	// #0
   21c10:	ldr	x0, [x27, #32]
   21c14:	cmp	x23, x0
   21c18:	b.ge	21cd4 <printf_parse@@Base+0x74d8>  // b.tcont
   21c1c:	ldr	x0, [x27, #40]
   21c20:	ldr	x0, [x0, x23, lsl #3]
   21c24:	str	x0, [sp, #144]
   21c28:	ldr	x0, [x0, #8]
   21c2c:	str	x0, [sp, #152]
   21c30:	sub	x2, x0, x26
   21c34:	add	x0, x2, x20
   21c38:	str	x0, [sp, #120]
   21c3c:	cmp	x2, #0x0
   21c40:	b.gt	21c8c <printf_parse@@Base+0x7490>
   21c44:	ldr	x2, [sp, #144]
   21c48:	mov	x4, x19
   21c4c:	mov	x3, x21
   21c50:	mov	x1, x27
   21c54:	mov	x0, x24
   21c58:	bl	218e0 <printf_parse@@Base+0x70e4>
   21c5c:	cmp	w0, #0x1
   21c60:	ldr	x25, [x24, #8]
   21c64:	b.ls	21d00 <printf_parse@@Base+0x7504>  // b.plast
   21c68:	str	w0, [sp, #196]
   21c6c:	ldr	w0, [sp, #196]
   21c70:	ldp	x19, x20, [sp, #16]
   21c74:	ldp	x21, x22, [sp, #32]
   21c78:	ldp	x23, x24, [sp, #48]
   21c7c:	ldp	x25, x26, [sp, #64]
   21c80:	ldp	x27, x28, [sp, #80]
   21c84:	ldp	x29, x30, [sp], #224
   21c88:	ret
   21c8c:	ldr	x0, [x24, #48]
   21c90:	add	x1, x2, x20
   21c94:	cmp	x0, x1
   21c98:	b.ge	21cc4 <printf_parse@@Base+0x74c8>  // b.tcont
   21c9c:	ldr	x0, [x24, #88]
   21ca0:	str	x2, [sp, #184]
   21ca4:	ldr	x1, [sp, #120]
   21ca8:	cmp	x0, x1
   21cac:	b.lt	21cd4 <printf_parse@@Base+0x74d8>  // b.tstop
   21cb0:	mov	x0, x24
   21cb4:	bl	1c408 <printf_parse@@Base+0x1c0c>
   21cb8:	cbnz	w0, 21c68 <printf_parse@@Base+0x746c>
   21cbc:	ldr	x25, [x24, #8]
   21cc0:	ldr	x2, [sp, #184]
   21cc4:	add	x1, x25, x26
   21cc8:	add	x0, x25, x20
   21ccc:	bl	af40 <memcmp@plt>
   21cd0:	cbz	w0, 21c44 <printf_parse@@Base+0x7448>
   21cd4:	ldr	x0, [x27, #32]
   21cd8:	cmp	x23, x0
   21cdc:	b.lt	21cf0 <printf_parse@@Base+0x74f4>  // b.tstop
   21ce0:	cbz	x23, 21ce8 <printf_parse@@Base+0x74ec>
   21ce4:	add	x26, x26, #0x1
   21ce8:	cmp	x19, x26
   21cec:	b.ge	21d10 <printf_parse@@Base+0x7514>  // b.tcont
   21cf0:	ldr	x0, [sp, #112]
   21cf4:	add	x0, x0, #0x1
   21cf8:	str	x0, [sp, #112]
   21cfc:	b	21bcc <printf_parse@@Base+0x73d0>
   21d00:	add	x23, x23, #0x1
   21d04:	ldr	x20, [sp, #120]
   21d08:	ldr	x26, [sp, #152]
   21d0c:	b	21c10 <printf_parse@@Base+0x7414>
   21d10:	ldr	x0, [x27]
   21d14:	sub	x0, x26, x0
   21d18:	cmp	x0, #0x0
   21d1c:	b.le	21d68 <printf_parse@@Base+0x756c>
   21d20:	ldr	x0, [x24, #48]
   21d24:	cmp	x0, x20
   21d28:	b.gt	21d4c <printf_parse@@Base+0x7550>
   21d2c:	ldr	x0, [x24, #88]
   21d30:	cmp	x20, x0
   21d34:	b.ge	21cf0 <printf_parse@@Base+0x74f4>  // b.tcont
   21d38:	add	w1, w20, #0x1
   21d3c:	mov	x0, x24
   21d40:	bl	1c33c <printf_parse@@Base+0x1b40>
   21d44:	cbnz	w0, 21c68 <printf_parse@@Base+0x746c>
   21d48:	ldr	x25, [x24, #8]
   21d4c:	add	x0, x25, x26
   21d50:	ldrb	w2, [x25, x20]
   21d54:	add	x1, x20, #0x1
   21d58:	ldurb	w0, [x0, #-1]
   21d5c:	cmp	w2, w0
   21d60:	b.ne	21cf0 <printf_parse@@Base+0x74f4>  // b.any
   21d64:	mov	x20, x1
   21d68:	ldr	x0, [x24, #184]
   21d6c:	ldr	x0, [x0, x26, lsl #3]
   21d70:	cbz	x0, 21ce4 <printf_parse@@Base+0x74e8>
   21d74:	ldr	x3, [x0, #16]
   21d78:	add	x0, x0, #0x8
   21d7c:	mov	x1, #0x0                   	// #0
   21d80:	cmp	x1, x3
   21d84:	b.ge	21ce4 <printf_parse@@Base+0x74e8>  // b.tcont
   21d88:	ldr	x2, [x0, #16]
   21d8c:	ldr	x23, [x2, x1, lsl #3]
   21d90:	ldr	x2, [x28]
   21d94:	lsl	x4, x23, #4
   21d98:	add	x6, x2, x23, lsl #4
   21d9c:	ldrb	w6, [x6, #8]
   21da0:	cmp	w6, #0x9
   21da4:	b.ne	21db8 <printf_parse@@Base+0x75bc>  // b.any
   21da8:	ldr	x2, [x2, x4]
   21dac:	ldr	x4, [sp, #136]
   21db0:	cmp	x4, x2
   21db4:	b.eq	21dc0 <printf_parse@@Base+0x75c4>  // b.none
   21db8:	add	x1, x1, #0x1
   21dbc:	b	21d80 <printf_parse@@Base+0x7584>
   21dc0:	cmn	x23, #0x1
   21dc4:	b.eq	21ce4 <printf_parse@@Base+0x74e8>  // b.none
   21dc8:	ldr	x0, [x27, #16]
   21dcc:	ldr	x3, [x27]
   21dd0:	cbz	x0, 21e70 <printf_parse@@Base+0x7674>
   21dd4:	ldp	x2, x1, [x27, #8]
   21dd8:	mov	x5, x26
   21ddc:	mov	x4, x23
   21de0:	mov	x0, x24
   21de4:	mov	w6, #0x9                   	// #9
   21de8:	bl	2140c <printf_parse@@Base+0x6c10>
   21dec:	cmp	w0, #0x1
   21df0:	b.eq	21ce4 <printf_parse@@Base+0x74e8>  // b.none
   21df4:	cbnz	w0, 21c68 <printf_parse@@Base+0x746c>
   21df8:	ldp	x0, x2, [x27, #24]
   21dfc:	cmp	x2, x0
   21e00:	b.ne	21e24 <printf_parse@@Base+0x7628>  // b.any
   21e04:	ldr	x0, [x27, #40]
   21e08:	lsl	x2, x2, #1
   21e0c:	add	x25, x2, #0x1
   21e10:	lsl	x1, x25, #3
   21e14:	bl	ad60 <realloc@plt>
   21e18:	cbz	x0, 21e90 <printf_parse@@Base+0x7694>
   21e1c:	str	x25, [x27, #24]
   21e20:	str	x0, [x27, #40]
   21e24:	mov	x1, #0x28                  	// #40
   21e28:	mov	x0, #0x1                   	// #1
   21e2c:	bl	ace0 <calloc@plt>
   21e30:	mov	x2, x0
   21e34:	cbz	x0, 21e90 <printf_parse@@Base+0x7694>
   21e38:	ldp	x0, x1, [x27, #32]
   21e3c:	mov	x4, x19
   21e40:	mov	x3, x21
   21e44:	str	x2, [x1, x0, lsl #3]
   21e48:	add	x0, x0, #0x1
   21e4c:	stp	x23, x26, [x2]
   21e50:	mov	x1, x27
   21e54:	str	x0, [x27, #32]
   21e58:	mov	x0, x24
   21e5c:	bl	218e0 <printf_parse@@Base+0x70e4>
   21e60:	cmp	w0, #0x1
   21e64:	ldr	x25, [x24, #8]
   21e68:	b.ls	21ce4 <printf_parse@@Base+0x74e8>  // b.plast
   21e6c:	b	21c68 <printf_parse@@Base+0x746c>
   21e70:	sub	x1, x26, x3
   21e74:	mov	x0, #0x18                  	// #24
   21e78:	add	x1, x1, #0x1
   21e7c:	str	x3, [sp, #120]
   21e80:	bl	ace0 <calloc@plt>
   21e84:	str	x0, [x27, #16]
   21e88:	ldr	x3, [sp, #120]
   21e8c:	cbnz	x0, 21dd4 <printf_parse@@Base+0x75d8>
   21e90:	mov	w0, #0xc                   	// #12
   21e94:	b	21c68 <printf_parse@@Base+0x746c>
   21e98:	ldr	x0, [x1, #8]
   21e9c:	cmp	x0, x19
   21ea0:	b.ne	21b98 <printf_parse@@Base+0x739c>  // b.any
   21ea4:	ldr	x0, [x1, #24]
   21ea8:	ldr	x1, [x1, #16]
   21eac:	ldr	x23, [x22, #48]
   21eb0:	subs	x28, x0, x1
   21eb4:	b.ne	21f88 <printf_parse@@Base+0x778c>  // b.any
   21eb8:	ldr	x2, [x22, #40]
   21ebc:	add	x2, x2, x25
   21ec0:	ldr	x2, [x2, #16]
   21ec4:	ldr	x2, [x2]
   21ec8:	mov	x3, #0x18                  	// #24
   21ecc:	add	x20, x0, x19
   21ed0:	mov	x0, x24
   21ed4:	madd	x23, x2, x3, x23
   21ed8:	ldr	w2, [x24, #160]
   21edc:	sub	x20, x20, x1
   21ee0:	sub	x1, x20, #0x1
   21ee4:	lsl	x20, x20, #3
   21ee8:	bl	20088 <printf_parse@@Base+0x588c>
   21eec:	mov	w3, w0
   21ef0:	ldr	x1, [sp, #128]
   21ef4:	ldr	x4, [x24, #184]
   21ef8:	ldr	x1, [x4, x1]
   21efc:	ldr	x0, [x4, x20]
   21f00:	cbz	x1, 21f94 <printf_parse@@Base+0x7798>
   21f04:	ldr	x27, [x1, #16]
   21f08:	cbnz	x0, 21f9c <printf_parse@@Base+0x77a0>
   21f0c:	ldr	x0, [sp, #176]
   21f10:	mov	x2, x23
   21f14:	mov	x1, x22
   21f18:	str	x4, [sp, #112]
   21f1c:	bl	1e8ac <printf_parse@@Base+0x40b0>
   21f20:	ldr	x4, [sp, #112]
   21f24:	str	x0, [x4, x20]
   21f28:	ldr	x0, [x24, #184]
   21f2c:	ldr	x0, [x0, x20]
   21f30:	cbnz	x0, 21f3c <printf_parse@@Base+0x7740>
   21f34:	ldr	w0, [sp, #196]
   21f38:	cbnz	w0, 21c6c <printf_parse@@Base+0x7470>
   21f3c:	cbnz	x28, 21b98 <printf_parse@@Base+0x739c>
   21f40:	ldr	x1, [sp, #128]
   21f44:	ldr	x0, [x24, #184]
   21f48:	ldr	x0, [x0, x1]
   21f4c:	ldr	x0, [x0, #16]
   21f50:	cmp	x0, x27
   21f54:	b.le	21b98 <printf_parse@@Base+0x739c>
   21f58:	mov	x2, x19
   21f5c:	mov	x1, x23
   21f60:	mov	x0, x24
   21f64:	bl	1bb48 <printf_parse@@Base+0x134c>
   21f68:	str	w0, [sp, #196]
   21f6c:	cbnz	w0, 21c6c <printf_parse@@Base+0x7470>
   21f70:	mov	x1, x23
   21f74:	mov	x0, x24
   21f78:	bl	21a40 <printf_parse@@Base+0x7244>
   21f7c:	str	w0, [sp, #196]
   21f80:	cbz	w0, 21b98 <printf_parse@@Base+0x739c>
   21f84:	b	21c6c <printf_parse@@Base+0x7470>
   21f88:	ldr	x2, [x22, #24]
   21f8c:	ldr	x2, [x2, x26]
   21f90:	b	21ec8 <printf_parse@@Base+0x76cc>
   21f94:	mov	x27, #0x0                   	// #0
   21f98:	b	21f08 <printf_parse@@Base+0x770c>
   21f9c:	ldr	x1, [x0, #80]
   21fa0:	mov	x2, x23
   21fa4:	ldr	x0, [sp, #168]
   21fa8:	str	w3, [sp, #112]
   21fac:	bl	1e758 <printf_parse@@Base+0x3f5c>
   21fb0:	str	w0, [sp, #196]
   21fb4:	ldr	w3, [sp, #112]
   21fb8:	cbz	w0, 21fc8 <printf_parse@@Base+0x77cc>
   21fbc:	ldr	x0, [sp, #216]
   21fc0:	bl	b050 <free@plt>
   21fc4:	b	21c6c <printf_parse@@Base+0x7470>
   21fc8:	ldp	x2, x0, [sp, #168]
   21fcc:	mov	x1, x22
   21fd0:	ldr	x4, [x24, #184]
   21fd4:	str	x4, [sp, #112]
   21fd8:	bl	1e8ac <printf_parse@@Base+0x40b0>
   21fdc:	ldr	x4, [sp, #112]
   21fe0:	str	x0, [x4, x20]
   21fe4:	ldr	x0, [sp, #216]
   21fe8:	bl	b050 <free@plt>
   21fec:	b	21f28 <printf_parse@@Base+0x772c>
   21ff0:	stp	x29, x30, [sp, #-128]!
   21ff4:	mov	x29, sp
   21ff8:	stp	x19, x20, [sp, #16]
   21ffc:	mov	x20, x1
   22000:	mov	x19, x2
   22004:	stp	x21, x22, [sp, #32]
   22008:	mov	x21, x0
   2200c:	stp	x23, x24, [sp, #48]
   22010:	stp	x25, x26, [sp, #64]
   22014:	ldr	x23, [x1, #72]
   22018:	ldr	x25, [x1, #152]
   2201c:	ldp	x0, x1, [x1, #184]
   22020:	str	x27, [sp, #80]
   22024:	lsl	x22, x23, #3
   22028:	cmp	x1, x23
   2202c:	b.ge	22088 <printf_parse@@Base+0x788c>  // b.tcont
   22030:	str	x2, [x0, x22]
   22034:	str	x23, [x20, #192]
   22038:	ldr	x0, [x25, #152]
   2203c:	cbz	x0, 220c0 <printf_parse@@Base+0x78c4>
   22040:	cbz	x19, 220bc <printf_parse@@Base+0x78c0>
   22044:	add	x24, x19, #0x8
   22048:	mov	x2, x23
   2204c:	mov	x1, x24
   22050:	mov	x0, x20
   22054:	bl	1bb48 <printf_parse@@Base+0x134c>
   22058:	str	w0, [x21]
   2205c:	cbnz	w0, 220bc <printf_parse@@Base+0x78c0>
   22060:	ldrb	w0, [x19, #104]
   22064:	tbz	w0, #6, 220c0 <printf_parse@@Base+0x78c4>
   22068:	mov	x1, x24
   2206c:	mov	x0, x20
   22070:	bl	21a40 <printf_parse@@Base+0x7244>
   22074:	str	w0, [x21]
   22078:	cbnz	w0, 220bc <printf_parse@@Base+0x78c0>
   2207c:	ldr	x0, [x20, #184]
   22080:	ldr	x19, [x0, x22]
   22084:	b	220c0 <printf_parse@@Base+0x78c4>
   22088:	ldr	x1, [x0, x22]
   2208c:	cbnz	x1, 22098 <printf_parse@@Base+0x789c>
   22090:	str	x2, [x0, x22]
   22094:	b	22038 <printf_parse@@Base+0x783c>
   22098:	add	x26, sp, #0x68
   2209c:	ldr	x2, [x1, #80]
   220a0:	cbz	x19, 220e0 <printf_parse@@Base+0x78e4>
   220a4:	ldr	x24, [x19, #80]
   220a8:	mov	x0, x26
   220ac:	mov	x1, x24
   220b0:	bl	1e758 <printf_parse@@Base+0x3f5c>
   220b4:	str	w0, [x21]
   220b8:	cbz	w0, 220f4 <printf_parse@@Base+0x78f8>
   220bc:	mov	x19, #0x0                   	// #0
   220c0:	mov	x0, x19
   220c4:	ldp	x19, x20, [sp, #16]
   220c8:	ldp	x21, x22, [sp, #32]
   220cc:	ldp	x23, x24, [sp, #48]
   220d0:	ldp	x25, x26, [sp, #64]
   220d4:	ldr	x27, [sp, #80]
   220d8:	ldp	x29, x30, [sp], #128
   220dc:	ret
   220e0:	ldp	x0, x1, [x2]
   220e4:	stp	x0, x1, [sp, #104]
   220e8:	mov	x24, #0x0                   	// #0
   220ec:	ldr	x0, [x2, #16]
   220f0:	str	x0, [sp, #120]
   220f4:	ldr	w2, [x20, #160]
   220f8:	mov	x0, x20
   220fc:	ldr	x1, [x20, #72]
   22100:	sub	x1, x1, #0x1
   22104:	bl	20088 <printf_parse@@Base+0x588c>
   22108:	ldr	x27, [x20, #184]
   2210c:	mov	w3, w0
   22110:	mov	x2, x26
   22114:	mov	x1, x25
   22118:	mov	x0, x21
   2211c:	bl	1e8ac <printf_parse@@Base+0x40b0>
   22120:	str	x0, [x27, x22]
   22124:	mov	x19, x0
   22128:	cbz	x24, 22038 <printf_parse@@Base+0x783c>
   2212c:	ldr	x0, [sp, #120]
   22130:	bl	b050 <free@plt>
   22134:	b	22038 <printf_parse@@Base+0x783c>
   22138:	stp	x29, x30, [sp, #-224]!
   2213c:	mov	x29, sp
   22140:	stp	x19, x20, [sp, #16]
   22144:	mov	x20, x0
   22148:	mov	x19, x1
   2214c:	stp	x23, x24, [sp, #48]
   22150:	lsl	x24, x2, #3
   22154:	ldr	x23, [x0, #152]
   22158:	stp	x21, x22, [sp, #32]
   2215c:	mov	x21, x2
   22160:	ldr	x0, [x0, #184]
   22164:	stp	x25, x26, [sp, #64]
   22168:	stp	x27, x28, [sp, #80]
   2216c:	mov	x28, x3
   22170:	ldr	x22, [x0, x24]
   22174:	str	wzr, [sp, #164]
   22178:	cbz	x22, 22180 <printf_parse@@Base+0x7984>
   2217c:	add	x22, x22, #0x8
   22180:	ldr	x0, [x28, #8]
   22184:	cbnz	x0, 221c4 <printf_parse@@Base+0x79c8>
   22188:	ldr	x0, [x19]
   2218c:	str	xzr, [x0, x24]
   22190:	cbz	x22, 221bc <printf_parse@@Base+0x79c0>
   22194:	ldr	x0, [x20, #184]
   22198:	ldr	x0, [x0, x24]
   2219c:	ldrb	w0, [x0, #104]
   221a0:	tbz	w0, #6, 221bc <printf_parse@@Base+0x79c0>
   221a4:	mov	x1, x21
   221a8:	mov	x0, x20
   221ac:	bl	1b768 <printf_parse@@Base+0xf6c>
   221b0:	str	x0, [sp, #104]
   221b4:	cmn	x0, #0x1
   221b8:	b.ne	22494 <printf_parse@@Base+0x7c98>  // b.any
   221bc:	mov	w1, #0x0                   	// #0
   221c0:	b	221e8 <printf_parse@@Base+0x79ec>
   221c4:	cbnz	x22, 22208 <printf_parse@@Base+0x7a0c>
   221c8:	ldr	x25, [x19]
   221cc:	mov	x1, x23
   221d0:	mov	x2, x28
   221d4:	add	x0, sp, #0xa4
   221d8:	bl	20f94 <printf_parse@@Base+0x6798>
   221dc:	ldr	w1, [sp, #164]
   221e0:	str	x0, [x25, x24]
   221e4:	cbz	w1, 22190 <printf_parse@@Base+0x7994>
   221e8:	mov	w0, w1
   221ec:	ldp	x19, x20, [sp, #16]
   221f0:	ldp	x21, x22, [sp, #32]
   221f4:	ldp	x23, x24, [sp, #48]
   221f8:	ldp	x25, x26, [sp, #64]
   221fc:	ldp	x27, x28, [sp, #80]
   22200:	ldp	x29, x30, [sp], #224
   22204:	ret
   22208:	mov	x2, x28
   2220c:	mov	x1, x23
   22210:	add	x0, sp, #0xa8
   22214:	str	wzr, [sp, #168]
   22218:	bl	20f94 <printf_parse@@Base+0x6798>
   2221c:	mov	x25, x0
   22220:	ldr	w0, [sp, #168]
   22224:	cbnz	w0, 22240 <printf_parse@@Base+0x7a44>
   22228:	ldr	x26, [x25, #56]!
   2222c:	cbz	x26, 22274 <printf_parse@@Base+0x7a78>
   22230:	mov	x2, x25
   22234:	mov	x1, x22
   22238:	mov	x0, x28
   2223c:	bl	1eb04 <printf_parse@@Base+0x4308>
   22240:	str	w0, [sp, #164]
   22244:	cbnz	w0, 226d4 <printf_parse@@Base+0x7ed8>
   22248:	ldr	x0, [x19, #40]
   2224c:	cbz	x0, 221c8 <printf_parse@@Base+0x79cc>
   22250:	ldr	x0, [x20, #216]
   22254:	mov	x25, #0x0                   	// #0
   22258:	str	x0, [sp, #96]
   2225c:	ldr	x1, [x19, #40]
   22260:	add	x0, x19, #0x20
   22264:	cmp	x25, x1
   22268:	b.lt	222d0 <printf_parse@@Base+0x7ad4>  // b.tstop
   2226c:	mov	w1, #0x0                   	// #0
   22270:	b	223b0 <printf_parse@@Base+0x7bb4>
   22274:	ldr	x1, [x28, #8]
   22278:	mov	x0, x25
   2227c:	bl	1bb10 <printf_parse@@Base+0x1314>
   22280:	str	w0, [sp, #168]
   22284:	cbnz	w0, 222c0 <printf_parse@@Base+0x7ac4>
   22288:	mov	x27, #0x18                  	// #24
   2228c:	ldr	x0, [x28, #8]
   22290:	cmp	x26, x0
   22294:	b.ge	22230 <printf_parse@@Base+0x7a34>  // b.tcont
   22298:	ldr	x0, [x28, #16]
   2229c:	ldr	x1, [x0, x26, lsl #3]
   222a0:	ldr	x0, [x23, #56]
   222a4:	madd	x1, x1, x27, x0
   222a8:	mov	x0, x25
   222ac:	bl	1e370 <printf_parse@@Base+0x3b74>
   222b0:	str	w0, [sp, #168]
   222b4:	cbnz	w0, 222c8 <printf_parse@@Base+0x7acc>
   222b8:	add	x26, x26, #0x1
   222bc:	b	2228c <printf_parse@@Base+0x7a90>
   222c0:	mov	w1, #0xc                   	// #12
   222c4:	b	221e8 <printf_parse@@Base+0x79ec>
   222c8:	mov	w0, #0xc                   	// #12
   222cc:	b	22240 <printf_parse@@Base+0x7a44>
   222d0:	ldr	x0, [x0, #16]
   222d4:	mov	x1, #0x28                  	// #40
   222d8:	ldr	x0, [x0, x25, lsl #3]
   222dc:	mul	x0, x0, x1
   222e0:	ldr	x1, [sp, #96]
   222e4:	add	x1, x1, x0
   222e8:	ldr	x2, [x1, #16]
   222ec:	cmp	x21, x2
   222f0:	b.gt	222fc <printf_parse@@Base+0x7b00>
   222f4:	add	x25, x25, #0x1
   222f8:	b	2225c <printf_parse@@Base+0x7a60>
   222fc:	ldr	x2, [x1, #8]
   22300:	cmp	x21, x2
   22304:	b.gt	222f4 <printf_parse@@Base+0x7af8>
   22308:	ldr	x3, [sp, #96]
   2230c:	ldr	x2, [x23]
   22310:	ldr	x0, [x3, x0]
   22314:	lsl	x0, x0, #4
   22318:	ldr	x7, [x2, x0]
   2231c:	ldr	x0, [x1, #24]
   22320:	cmp	x21, x0
   22324:	b.ne	2248c <printf_parse@@Base+0x7c90>  // b.any
   22328:	ldr	x9, [x28, #8]
   2232c:	mov	x26, #0xffffffffffffffff    	// #-1
   22330:	mov	x1, x26
   22334:	mov	x0, #0x0                   	// #0
   22338:	cmp	x0, x9
   2233c:	b.lt	22350 <printf_parse@@Base+0x7b54>  // b.tstop
   22340:	tbz	x1, #63, 22398 <printf_parse@@Base+0x7b9c>
   22344:	tbnz	x26, #63, 222f4 <printf_parse@@Base+0x7af8>
   22348:	mov	x27, #0x0                   	// #0
   2234c:	b	22414 <printf_parse@@Base+0x7c18>
   22350:	ldr	x3, [x28, #16]
   22354:	ldr	x3, [x3, x0, lsl #3]
   22358:	add	x8, x2, x3, lsl #4
   2235c:	lsl	x5, x3, #4
   22360:	ldrb	w8, [x8, #8]
   22364:	cmp	w8, #0x8
   22368:	b.ne	22380 <printf_parse@@Base+0x7b84>  // b.any
   2236c:	ldr	x5, [x2, x5]
   22370:	cmp	x7, x5
   22374:	csel	x1, x1, x3, ne  // ne = any
   22378:	add	x0, x0, #0x1
   2237c:	b	22338 <printf_parse@@Base+0x7b3c>
   22380:	cmp	w8, #0x9
   22384:	b.ne	22378 <printf_parse@@Base+0x7b7c>  // b.any
   22388:	ldr	x5, [x2, x5]
   2238c:	cmp	x7, x5
   22390:	csel	x26, x26, x3, ne  // ne = any
   22394:	b	22378 <printf_parse@@Base+0x7b7c>
   22398:	mov	x3, x22
   2239c:	mov	x2, x28
   223a0:	mov	x0, x23
   223a4:	bl	1ec70 <printf_parse@@Base+0x4474>
   223a8:	mov	w1, w0
   223ac:	cbz	w0, 22344 <printf_parse@@Base+0x7b48>
   223b0:	str	w1, [sp, #164]
   223b4:	cbz	w1, 221c8 <printf_parse@@Base+0x79cc>
   223b8:	b	221e8 <printf_parse@@Base+0x79ec>
   223bc:	ldr	x0, [x28, #16]
   223c0:	mov	x1, x26
   223c4:	ldr	x7, [x0, x27, lsl #3]
   223c8:	mov	x0, #0x18                  	// #24
   223cc:	mul	x8, x7, x0
   223d0:	ldr	x0, [x23, #56]
   223d4:	add	x0, x0, x8
   223d8:	bl	1b398 <printf_parse@@Base+0xb9c>
   223dc:	cbnz	x0, 22410 <printf_parse@@Base+0x7c14>
   223e0:	ldr	x0, [x23, #48]
   223e4:	add	x0, x0, x8
   223e8:	bl	1b398 <printf_parse@@Base+0xb9c>
   223ec:	cbnz	x0, 22410 <printf_parse@@Base+0x7c14>
   223f0:	mov	x1, x7
   223f4:	mov	x3, x22
   223f8:	mov	x2, x28
   223fc:	mov	x0, x23
   22400:	bl	1ec70 <printf_parse@@Base+0x4474>
   22404:	mov	w1, w0
   22408:	cbnz	w0, 223b0 <printf_parse@@Base+0x7bb4>
   2240c:	sub	x27, x27, #0x1
   22410:	add	x27, x27, #0x1
   22414:	ldr	x0, [x28, #8]
   22418:	cmp	x27, x0
   2241c:	b.lt	223bc <printf_parse@@Base+0x7bc0>  // b.tstop
   22420:	b	222f4 <printf_parse@@Base+0x7af8>
   22424:	ldr	x0, [x28, #16]
   22428:	ldr	x2, [x23]
   2242c:	ldr	x1, [x0, x5, lsl #3]
   22430:	add	x0, x2, x1, lsl #4
   22434:	lsl	x3, x1, #4
   22438:	ldrb	w0, [x0, #8]
   2243c:	sub	w0, w0, #0x8
   22440:	cmp	w0, #0x1
   22444:	b.ls	2245c <printf_parse@@Base+0x7c60>  // b.plast
   22448:	add	x5, x5, #0x1
   2244c:	ldr	x0, [x28, #8]
   22450:	cmp	x5, x0
   22454:	b.lt	22424 <printf_parse@@Base+0x7c28>  // b.tstop
   22458:	b	222f4 <printf_parse@@Base+0x7af8>
   2245c:	ldr	x0, [x2, x3]
   22460:	cmp	x7, x0
   22464:	b.ne	22448 <printf_parse@@Base+0x7c4c>  // b.any
   22468:	mov	x3, x22
   2246c:	mov	x2, x28
   22470:	mov	x0, x23
   22474:	stp	x7, x5, [sp, #104]
   22478:	bl	1ec70 <printf_parse@@Base+0x4474>
   2247c:	mov	w1, w0
   22480:	ldp	x7, x5, [sp, #104]
   22484:	cbz	w0, 22448 <printf_parse@@Base+0x7c4c>
   22488:	b	223b0 <printf_parse@@Base+0x7bb4>
   2248c:	mov	x5, #0x0                   	// #0
   22490:	b	2244c <printf_parse@@Base+0x7c50>
   22494:	ldr	x1, [sp, #104]
   22498:	mov	x0, #0x28                  	// #40
   2249c:	add	x28, sp, #0xa8
   224a0:	str	xzr, [sp, #96]
   224a4:	ldr	x26, [x20, #152]
   224a8:	mul	x0, x1, x0
   224ac:	add	x27, x28, #0x20
   224b0:	str	x0, [sp, #120]
   224b4:	add	x0, x19, #0x20
   224b8:	str	x0, [sp, #112]
   224bc:	str	xzr, [sp, #168]
   224c0:	ldr	x0, [x22, #8]
   224c4:	ldr	x1, [sp, #96]
   224c8:	cmp	x1, x0
   224cc:	b.lt	224d8 <printf_parse@@Base+0x7cdc>  // b.tstop
   224d0:	mov	w1, #0x0                   	// #0
   224d4:	b	225ec <printf_parse@@Base+0x7df0>
   224d8:	ldr	x0, [x22, #16]
   224dc:	ldr	x1, [sp, #96]
   224e0:	ldr	x23, [x0, x1, lsl #3]
   224e4:	ldr	x0, [x26]
   224e8:	ldr	x1, [x19, #16]
   224ec:	add	x0, x0, x23, lsl #4
   224f0:	cmp	x23, x1
   224f4:	ldrb	w0, [x0, #8]
   224f8:	b.ne	22518 <printf_parse@@Base+0x7d1c>  // b.any
   224fc:	ldr	x1, [x19, #24]
   22500:	cmp	x21, x1
   22504:	b.ne	22518 <printf_parse@@Base+0x7d1c>  // b.any
   22508:	ldr	x0, [sp, #96]
   2250c:	add	x0, x0, #0x1
   22510:	str	x0, [sp, #96]
   22514:	b	224c0 <printf_parse@@Base+0x7cc4>
   22518:	cmp	w0, #0x4
   2251c:	b.ne	22508 <printf_parse@@Base+0x7d0c>  // b.any
   22520:	ldr	x0, [sp, #120]
   22524:	ldr	x6, [x20, #216]
   22528:	ldr	x25, [sp, #104]
   2252c:	add	x6, x6, x0
   22530:	mov	x0, #0x18                  	// #24
   22534:	mul	x0, x23, x0
   22538:	str	x0, [sp, #136]
   2253c:	lsl	x0, x23, #3
   22540:	str	x0, [sp, #128]
   22544:	add	x0, x21, #0x1
   22548:	str	x0, [sp, #152]
   2254c:	ldr	x0, [x6]
   22550:	cmp	x23, x0
   22554:	b.ne	226a0 <printf_parse@@Base+0x7ea4>  // b.any
   22558:	ldp	x1, x0, [x6, #16]
   2255c:	sub	x0, x0, x1
   22560:	add	x7, x21, x0
   22564:	cbz	x0, 22608 <printf_parse@@Base+0x7e0c>
   22568:	ldr	x0, [x26, #24]
   2256c:	ldr	x1, [sp, #128]
   22570:	ldr	x1, [x0, x1]
   22574:	ldr	x0, [x19, #24]
   22578:	cmp	x7, x0
   2257c:	b.gt	226a0 <printf_parse@@Base+0x7ea4>
   22580:	ldr	x0, [x19]
   22584:	ldr	x0, [x0, x7, lsl #3]
   22588:	cbz	x0, 226a0 <printf_parse@@Base+0x7ea4>
   2258c:	add	x0, x0, #0x8
   22590:	str	x6, [sp, #144]
   22594:	bl	1b398 <printf_parse@@Base+0xb9c>
   22598:	ldr	x6, [sp, #144]
   2259c:	cbz	x0, 226a0 <printf_parse@@Base+0x7ea4>
   225a0:	mov	x4, x1
   225a4:	mov	x5, x7
   225a8:	ldr	x1, [sp, #112]
   225ac:	mov	x3, x21
   225b0:	mov	x2, x23
   225b4:	mov	x0, x20
   225b8:	bl	1b7dc <printf_parse@@Base+0xfe0>
   225bc:	tst	w0, #0xff
   225c0:	ldr	x6, [sp, #144]
   225c4:	b.ne	226a0 <printf_parse@@Base+0x7ea4>  // b.any
   225c8:	ldr	x0, [sp, #168]
   225cc:	cbz	x0, 22620 <printf_parse@@Base+0x7e24>
   225d0:	mov	x1, x25
   225d4:	mov	x0, x27
   225d8:	stp	x23, x21, [sp, #184]
   225dc:	bl	1de7c <printf_parse@@Base+0x3680>
   225e0:	tst	w0, #0xff
   225e4:	b.ne	22648 <printf_parse@@Base+0x7e4c>  // b.any
   225e8:	mov	w1, #0xc                   	// #12
   225ec:	ldr	x0, [sp, #168]
   225f0:	cbz	x0, 221e8 <printf_parse@@Base+0x79ec>
   225f4:	ldr	x0, [sp, #216]
   225f8:	str	w1, [sp, #96]
   225fc:	bl	b050 <free@plt>
   22600:	ldr	w1, [sp, #96]
   22604:	b	221e8 <printf_parse@@Base+0x79ec>
   22608:	ldr	x0, [x26, #40]
   2260c:	ldr	x1, [sp, #136]
   22610:	add	x0, x0, x1
   22614:	ldr	x0, [x0, #16]
   22618:	ldr	x1, [x0]
   2261c:	b	22574 <printf_parse@@Base+0x7d78>
   22620:	mov	x1, x19
   22624:	mov	x2, #0x38                  	// #56
   22628:	mov	x0, x28
   2262c:	bl	a6f0 <memcpy@plt>
   22630:	ldr	x1, [sp, #112]
   22634:	mov	x0, x27
   22638:	bl	1e6e0 <printf_parse@@Base+0x3ee4>
   2263c:	mov	w1, w0
   22640:	cbz	w0, 225d0 <printf_parse@@Base+0x7dd4>
   22644:	b	225ec <printf_parse@@Base+0x7df0>
   22648:	ldr	x0, [sp, #168]
   2264c:	mov	x1, x28
   22650:	ldr	x0, [x0, x24]
   22654:	str	x0, [sp, #144]
   22658:	mov	x0, x20
   2265c:	bl	226dc <printf_parse@@Base+0x7ee0>
   22660:	mov	w1, w0
   22664:	cbnz	w0, 225ec <printf_parse@@Base+0x7df0>
   22668:	ldr	x1, [x19, #8]
   2266c:	cbnz	x1, 226b8 <printf_parse@@Base+0x7ebc>
   22670:	ldr	x0, [sp, #168]
   22674:	ldr	x1, [sp, #144]
   22678:	str	x1, [x0, x24]
   2267c:	mov	x1, x25
   22680:	mov	x0, x27
   22684:	bl	1b398 <printf_parse@@Base+0xb9c>
   22688:	sub	x1, x0, #0x1
   2268c:	mov	x0, x27
   22690:	bl	1d860 <printf_parse@@Base+0x3064>
   22694:	ldr	x0, [x20, #216]
   22698:	mov	x6, #0x28                  	// #40
   2269c:	madd	x6, x25, x6, x0
   226a0:	ldrb	w0, [x6, #32]
   226a4:	add	x25, x25, #0x1
   226a8:	add	x1, x6, #0x28
   226ac:	cbz	w0, 22508 <printf_parse@@Base+0x7d0c>
   226b0:	mov	x6, x1
   226b4:	b	2254c <printf_parse@@Base+0x7d50>
   226b8:	ldr	x3, [sp, #152]
   226bc:	mov	x0, x26
   226c0:	ldr	x2, [sp, #168]
   226c4:	bl	21358 <printf_parse@@Base+0x6b5c>
   226c8:	mov	w1, w0
   226cc:	cbz	w0, 22670 <printf_parse@@Base+0x7e74>
   226d0:	b	225ec <printf_parse@@Base+0x7df0>
   226d4:	mov	w1, w0
   226d8:	b	221e8 <printf_parse@@Base+0x79ec>
   226dc:	stp	x29, x30, [sp, #-160]!
   226e0:	mov	x29, sp
   226e4:	stp	x19, x20, [sp, #16]
   226e8:	mov	x19, x1
   226ec:	ldr	x20, [x1, #24]
   226f0:	stp	x23, x24, [sp, #48]
   226f4:	add	x23, sp, #0x88
   226f8:	ldr	x1, [x1, #16]
   226fc:	stp	x21, x22, [sp, #32]
   22700:	mov	x21, x0
   22704:	mov	x0, x23
   22708:	stp	x25, x26, [sp, #64]
   2270c:	stp	x27, x28, [sp, #80]
   22710:	bl	1bac4 <printf_parse@@Base+0x12c8>
   22714:	mov	w22, w0
   22718:	cbnz	w0, 22780 <printf_parse@@Base+0x7f84>
   2271c:	mov	x3, x23
   22720:	mov	x2, x20
   22724:	mov	x1, x19
   22728:	mov	x0, x21
   2272c:	bl	22138 <printf_parse@@Base+0x793c>
   22730:	mov	w22, w0
   22734:	cbnz	w0, 22778 <printf_parse@@Base+0x7f7c>
   22738:	add	x0, x19, #0x20
   2273c:	mov	w27, #0x0                   	// #0
   22740:	str	x0, [sp, #104]
   22744:	cmp	x20, #0x0
   22748:	b.le	22778 <printf_parse@@Base+0x7f7c>
   2274c:	ldr	x0, [x19]
   22750:	lsl	x25, x20, #3
   22754:	ldr	x1, [x0, x25]
   22758:	cmp	x1, #0x0
   2275c:	ldr	w1, [x21, #224]
   22760:	csinc	w27, wzr, w27, ne  // ne = any
   22764:	cmp	w1, w27
   22768:	b.ge	227a0 <printf_parse@@Base+0x7fa4>  // b.tcont
   2276c:	mov	x2, x25
   22770:	mov	w1, #0x0                   	// #0
   22774:	bl	ac10 <memset@plt>
   22778:	ldr	x0, [sp, #152]
   2277c:	bl	b050 <free@plt>
   22780:	mov	w0, w22
   22784:	ldp	x19, x20, [sp, #16]
   22788:	ldp	x21, x22, [sp, #32]
   2278c:	ldp	x23, x24, [sp, #48]
   22790:	ldp	x25, x26, [sp, #64]
   22794:	ldp	x27, x28, [sp, #80]
   22798:	ldp	x29, x30, [sp], #160
   2279c:	ret
   227a0:	ldr	x0, [x21, #184]
   227a4:	sub	x20, x20, #0x1
   227a8:	add	x0, x0, x25
   227ac:	ldur	x0, [x0, #-8]
   227b0:	str	x0, [sp, #96]
   227b4:	str	xzr, [sp, #144]
   227b8:	cbnz	x0, 227dc <printf_parse@@Base+0x7fe0>
   227bc:	mov	x3, x23
   227c0:	mov	x2, x20
   227c4:	mov	x1, x19
   227c8:	mov	x0, x21
   227cc:	bl	22138 <printf_parse@@Base+0x793c>
   227d0:	cbz	w0, 22744 <printf_parse@@Base+0x7f48>
   227d4:	mov	w22, w0
   227d8:	b	22778 <printf_parse@@Base+0x7f7c>
   227dc:	ldr	x26, [x21, #152]
   227e0:	mov	x24, #0x0                   	// #0
   227e4:	ldr	x0, [sp, #96]
   227e8:	add	x0, x0, #0x20
   227ec:	ldr	x1, [x0, #8]
   227f0:	cmp	x24, x1
   227f4:	b.ge	227bc <printf_parse@@Base+0x7fc0>  // b.tcont
   227f8:	ldr	x0, [x0, #16]
   227fc:	ldr	x28, [x0, x24, lsl #3]
   22800:	lsl	x0, x28, #4
   22804:	str	x0, [sp, #112]
   22808:	ldr	x0, [x26]
   2280c:	add	x0, x0, x28, lsl #4
   22810:	ldrb	w0, [x0, #10]
   22814:	tbnz	w0, #4, 22840 <printf_parse@@Base+0x8044>
   22818:	ldr	x1, [x26]
   2281c:	lsl	x0, x28, #4
   22820:	mov	x2, x20
   22824:	add	x1, x1, x0
   22828:	mov	x0, x21
   2282c:	bl	20928 <printf_parse@@Base+0x612c>
   22830:	tst	w0, #0xff
   22834:	b.ne	228cc <printf_parse@@Base+0x80d0>  // b.any
   22838:	add	x24, x24, #0x1
   2283c:	b	227e4 <printf_parse@@Base+0x7fe8>
   22840:	ldr	x7, [x19, #24]
   22844:	mov	x3, x20
   22848:	ldr	x5, [x21, #152]
   2284c:	mov	x2, x21
   22850:	mov	x1, x28
   22854:	stp	x5, x7, [sp, #112]
   22858:	mov	x0, x5
   2285c:	bl	1d5e0 <printf_parse@@Base+0x2de4>
   22860:	mov	w6, w0
   22864:	cmp	w0, #0x0
   22868:	b.le	228c4 <printf_parse@@Base+0x80c8>
   2286c:	ldr	x7, [sp, #120]
   22870:	add	x0, x20, w0, sxtw
   22874:	cmp	x7, x0
   22878:	b.lt	228a0 <printf_parse@@Base+0x80a4>  // b.tstop
   2287c:	ldr	x1, [x19]
   22880:	ldr	x0, [x1, x0, lsl #3]
   22884:	cbz	x0, 22818 <printf_parse@@Base+0x801c>
   22888:	ldr	x5, [sp, #112]
   2288c:	add	x0, x0, #0x8
   22890:	ldr	x1, [x5, #24]
   22894:	ldr	x1, [x1, x28, lsl #3]
   22898:	bl	1b398 <printf_parse@@Base+0xb9c>
   2289c:	cbz	x0, 22818 <printf_parse@@Base+0x801c>
   228a0:	ldr	x0, [x19, #40]
   228a4:	cbnz	x0, 228f4 <printf_parse@@Base+0x80f8>
   228a8:	mov	x1, x28
   228ac:	mov	x0, x23
   228b0:	bl	1de7c <printf_parse@@Base+0x3680>
   228b4:	tst	w0, #0xff
   228b8:	b.ne	22838 <printf_parse@@Base+0x803c>  // b.any
   228bc:	mov	w22, #0xc                   	// #12
   228c0:	b	22778 <printf_parse@@Base+0x7f7c>
   228c4:	b.eq	22818 <printf_parse@@Base+0x801c>  // b.none
   228c8:	b	228a0 <printf_parse@@Base+0x80a4>
   228cc:	ldr	x0, [x19]
   228d0:	ldr	x0, [x0, x25]
   228d4:	cbz	x0, 22838 <printf_parse@@Base+0x803c>
   228d8:	ldr	x1, [x26, #24]
   228dc:	add	x0, x0, #0x8
   228e0:	ldr	x1, [x1, x28, lsl #3]
   228e4:	bl	1b398 <printf_parse@@Base+0xb9c>
   228e8:	cbz	x0, 22838 <printf_parse@@Base+0x803c>
   228ec:	mov	w6, #0x1                   	// #1
   228f0:	b	228a0 <printf_parse@@Base+0x80a4>
   228f4:	ldr	x0, [x26, #24]
   228f8:	mov	x5, x20
   228fc:	ldr	x1, [sp, #104]
   22900:	mov	x4, x28
   22904:	ldr	x2, [x0, x28, lsl #3]
   22908:	add	x3, x20, w6, sxtw
   2290c:	mov	x0, x21
   22910:	bl	1b7dc <printf_parse@@Base+0xfe0>
   22914:	tst	w0, #0xff
   22918:	b.eq	228a8 <printf_parse@@Base+0x80ac>  // b.none
   2291c:	b	22838 <printf_parse@@Base+0x803c>
   22920:	sub	sp, sp, #0x260
   22924:	stp	x29, x30, [sp]
   22928:	mov	x29, sp
   2292c:	stp	x23, x24, [sp, #48]
   22930:	mov	x24, x0
   22934:	mov	x23, x3
   22938:	add	x3, sp, #0x160
   2293c:	ldr	w0, [sp, #608]
   22940:	stp	x19, x20, [sp, #16]
   22944:	mov	x20, x5
   22948:	stp	x21, x22, [sp, #32]
   2294c:	mov	x22, x6
   22950:	stp	x25, x26, [sp, #64]
   22954:	mov	x25, x4
   22958:	stp	x27, x28, [sp, #80]
   2295c:	stp	x2, x7, [sp, #104]
   22960:	mov	x2, #0x100                 	// #256
   22964:	str	x1, [sp, #128]
   22968:	mov	w1, #0x0                   	// #0
   2296c:	str	w0, [sp, #184]
   22970:	mov	x0, x3
   22974:	ldr	x21, [x24]
   22978:	bl	ac10 <memset@plt>
   2297c:	ldr	x28, [x24, #32]
   22980:	str	x21, [sp, #504]
   22984:	mov	x3, x0
   22988:	cbz	x28, 229a4 <printf_parse@@Base+0x81a8>
   2298c:	ldrb	w0, [x24, #56]
   22990:	tbz	w0, #3, 22ce4 <printf_parse@@Base+0x84e8>
   22994:	cmp	x23, x25
   22998:	b.eq	22ce4 <printf_parse@@Base+0x84e8>  // b.none
   2299c:	tst	x0, #0x1
   229a0:	csel	x28, x28, xzr, eq  // eq = none
   229a4:	ldr	x1, [x24, #48]
   229a8:	sub	x0, x22, #0x1
   229ac:	sub	x0, x0, x1
   229b0:	cmp	x1, x22
   229b4:	csel	x0, x0, xzr, cc  // cc = lo, ul, last
   229b8:	str	x0, [sp, #216]
   229bc:	ldr	x0, [x24, #16]
   229c0:	cbz	x0, 23858 <printf_parse@@Base+0x905c>
   229c4:	ldr	x2, [x21, #72]
   229c8:	cbz	x2, 23858 <printf_parse@@Base+0x905c>
   229cc:	ldr	x1, [x21, #80]
   229d0:	cbz	x1, 23858 <printf_parse@@Base+0x905c>
   229d4:	ldr	x0, [x21, #88]
   229d8:	cbz	x0, 23858 <printf_parse@@Base+0x905c>
   229dc:	ldr	x4, [x21, #96]
   229e0:	cbz	x4, 23858 <printf_parse@@Base+0x905c>
   229e4:	ldr	x2, [x2, #16]
   229e8:	cbnz	x2, 22a18 <printf_parse@@Base+0x821c>
   229ec:	ldr	x1, [x1, #16]
   229f0:	cbnz	x1, 22a18 <printf_parse@@Base+0x821c>
   229f4:	ldr	x0, [x0, #16]
   229f8:	cbz	x0, 22a04 <printf_parse@@Base+0x8208>
   229fc:	ldrsb	w0, [x24, #56]
   22a00:	tbnz	w0, #31, 22a18 <printf_parse@@Base+0x821c>
   22a04:	cmp	x23, #0x0
   22a08:	ccmp	x25, #0x0, #0x4, ne  // ne = any
   22a0c:	b.ne	23858 <printf_parse@@Base+0x905c>  // b.any
   22a10:	mov	x25, #0x0                   	// #0
   22a14:	mov	x23, #0x0                   	// #0
   22a18:	ldr	x0, [sp, #216]
   22a1c:	subs	x22, x22, x0
   22a20:	b.ne	22cec <printf_parse@@Base+0x84f0>  // b.any
   22a24:	ldr	x0, [x21, #152]
   22a28:	cmp	x0, #0x0
   22a2c:	cset	w0, ne  // ne = any
   22a30:	ldr	x1, [x21, #16]
   22a34:	str	w0, [sp, #164]
   22a38:	ldr	w2, [x21, #180]
   22a3c:	add	x1, x1, #0x1
   22a40:	str	w2, [sp, #496]
   22a44:	ldr	x0, [x24, #40]
   22a48:	sxtw	x4, w2
   22a4c:	cmp	x1, w2, sxtw
   22a50:	str	x0, [sp, #96]
   22a54:	csel	x1, x1, x4, ge  // ge = tcont
   22a58:	ldr	x4, [sp, #104]
   22a5c:	ldr	x0, [x24, #24]
   22a60:	add	x4, x4, #0x1
   22a64:	cmp	x1, x4
   22a68:	csel	x1, x1, x4, le
   22a6c:	ldr	x4, [sp, #128]
   22a70:	str	x4, [sp, #352]
   22a74:	ldr	x4, [sp, #104]
   22a78:	stp	x4, x4, [sp, #432]
   22a7c:	ldr	x4, [sp, #96]
   22a80:	str	x4, [sp, #472]
   22a84:	and	x4, x0, #0x400000
   22a88:	ubfx	w0, w0, #22, #1
   22a8c:	strb	w0, [sp, #488]
   22a90:	ldr	x0, [sp, #96]
   22a94:	orr	x0, x0, x4
   22a98:	cmp	x0, #0x0
   22a9c:	cset	w0, ne  // ne = any
   22aa0:	strb	w0, [sp, #491]
   22aa4:	ldrb	w0, [x21, #176]
   22aa8:	ubfx	x2, x0, #2, #1
   22aac:	ubfx	x0, x0, #3, #1
   22ab0:	strb	w0, [sp, #490]
   22ab4:	ldr	x0, [sp, #104]
   22ab8:	stp	x0, x0, [sp, #448]
   22abc:	mov	x0, x3
   22ac0:	strb	w2, [sp, #489]
   22ac4:	bl	1b9bc <printf_parse@@Base+0x11c0>
   22ac8:	cbnz	w0, 2357c <printf_parse@@Base+0x8d80>
   22acc:	add	x0, x21, #0xb8
   22ad0:	str	x0, [sp, #480]
   22ad4:	ldrb	w0, [x21, #176]
   22ad8:	ldrb	w1, [sp, #491]
   22adc:	ldr	x2, [sp, #128]
   22ae0:	ubfx	x0, x0, #4, #1
   22ae4:	strb	w0, [sp, #494]
   22ae8:	cmp	w1, #0x0
   22aec:	ldr	x0, [sp, #360]
   22af0:	csel	x0, x0, x2, ne  // ne = any
   22af4:	str	x0, [sp, #360]
   22af8:	cbnz	w1, 22cf4 <printf_parse@@Base+0x84f8>
   22afc:	ldr	w0, [x21, #180]
   22b00:	cmp	w0, #0x1
   22b04:	ldr	x0, [sp, #104]
   22b08:	csel	x0, x0, xzr, le
   22b0c:	stp	x0, x0, [sp, #400]
   22b10:	ldrb	w0, [x24, #56]
   22b14:	ldr	x26, [x21, #152]
   22b18:	stp	x20, x20, [sp, #448]
   22b1c:	ubfx	x0, x0, #7, #1
   22b20:	strb	w0, [sp, #493]
   22b24:	ldr	w0, [sp, #184]
   22b28:	lsl	x19, x26, #1
   22b2c:	str	w0, [sp, #512]
   22b30:	cmp	xzr, x26, lsl #1
   22b34:	mov	x0, #0xffffffffffffffff    	// #-1
   22b38:	str	x0, [sp, #520]
   22b3c:	b.lt	22cfc <printf_parse@@Base+0x8500>  // b.tstop
   22b40:	mov	w0, #0x1                   	// #1
   22b44:	str	x19, [sp, #560]
   22b48:	str	w0, [sp, #576]
   22b4c:	cmp	x22, #0x1
   22b50:	str	x19, [sp, #592]
   22b54:	b.hi	22b60 <printf_parse@@Base+0x8364>  // b.pmore
   22b58:	ldrb	w0, [x21, #176]
   22b5c:	tbz	w0, #1, 22d40 <printf_parse@@Base+0x8544>
   22b60:	ldr	x0, [sp, #416]
   22b64:	mov	x1, #0x1ffffffffffffffe    	// #2305843009213693950
   22b68:	cmp	x0, x1
   22b6c:	b.hi	22d0c <printf_parse@@Base+0x8510>  // b.pmore
   22b70:	add	x0, x0, #0x1
   22b74:	lsl	x0, x0, #3
   22b78:	bl	aab0 <malloc@plt>
   22b7c:	str	x0, [sp, #536]
   22b80:	cbz	x0, 22d0c <printf_parse@@Base+0x8510>
   22b84:	ldr	x1, [sp, #184]
   22b88:	mov	w0, #0x4                   	// #4
   22b8c:	str	x23, [sp, #288]
   22b90:	tst	x1, #0x1
   22b94:	mov	w1, #0x6                   	// #6
   22b98:	csel	w1, w0, w1, ne  // ne = any
   22b9c:	cmp	x23, x25
   22ba0:	str	w1, [sp, #464]
   22ba4:	mov	w1, #0x1                   	// #1
   22ba8:	cneg	w1, w1, gt
   22bac:	str	w1, [sp, #228]
   22bb0:	csel	x1, x23, x25, le
   22bb4:	str	x1, [sp, #200]
   22bb8:	csel	x1, x23, x25, ge  // ge = tcont
   22bbc:	str	x1, [sp, #120]
   22bc0:	ldr	w1, [x21, #180]
   22bc4:	str	w1, [sp, #224]
   22bc8:	cbz	x28, 22d50 <printf_parse@@Base+0x8554>
   22bcc:	mov	w1, w1
   22bd0:	cmp	w1, #0x1
   22bd4:	b.eq	22bf0 <printf_parse@@Base+0x83f4>  // b.none
   22bd8:	ldr	x0, [x24, #24]
   22bdc:	tbnz	w0, #22, 22d48 <printf_parse@@Base+0x854c>
   22be0:	ldr	x0, [sp, #96]
   22be4:	cmp	x0, #0x0
   22be8:	cset	w0, eq  // eq = none
   22bec:	lsl	w0, w0, #2
   22bf0:	ldr	x1, [sp, #96]
   22bf4:	cmp	x23, x25
   22bf8:	cset	w2, le
   22bfc:	cmp	x1, #0x0
   22c00:	cset	w1, ne  // ne = any
   22c04:	orr	w0, w1, w0
   22c08:	orr	w0, w0, w2, lsl #1
   22c0c:	cmp	x23, x25
   22c10:	str	w0, [sp, #240]
   22c14:	add	x0, sp, #0x120
   22c18:	add	x23, sp, #0x160
   22c1c:	csel	x0, x0, xzr, le
   22c20:	str	x0, [sp, #232]
   22c24:	cmp	x0, #0x0
   22c28:	cset	w0, ne  // ne = any
   22c2c:	str	w0, [sp, #244]
   22c30:	add	x0, sp, #0x11c
   22c34:	str	x0, [sp, #248]
   22c38:	ldr	x1, [sp, #200]
   22c3c:	ldr	x0, [sp, #288]
   22c40:	ldr	x2, [sp, #120]
   22c44:	cmp	x0, x1
   22c48:	cset	w1, lt  // lt = tstop
   22c4c:	cmp	x0, x2
   22c50:	cset	w2, gt
   22c54:	orr	w1, w1, w2
   22c58:	cbnz	w1, 22dc8 <printf_parse@@Base+0x85cc>
   22c5c:	ldr	w1, [sp, #240]
   22c60:	sub	w2, w1, #0x4
   22c64:	cmp	w2, #0x4
   22c68:	b.ls	22d58 <printf_parse@@Base+0x855c>  // b.plast
   22c6c:	ldrsw	x25, [sp, #228]
   22c70:	ldr	x20, [sp, #288]
   22c74:	ldr	x0, [sp, #392]
   22c78:	ldr	x1, [sp, #408]
   22c7c:	sub	x0, x20, x0
   22c80:	cmp	x1, x0
   22c84:	b.hi	22ca8 <printf_parse@@Base+0x84ac>  // b.pmore
   22c88:	ldr	w2, [sp, #184]
   22c8c:	mov	x1, x20
   22c90:	mov	x0, x23
   22c94:	bl	20208 <printf_parse@@Base+0x5a0c>
   22c98:	mov	w19, w0
   22c9c:	cbnz	w0, 22dcc <printf_parse@@Base+0x85d0>
   22ca0:	ldr	x0, [sp, #392]
   22ca4:	sub	x0, x20, x0
   22ca8:	ldr	x1, [sp, #104]
   22cac:	cmp	x20, x1
   22cb0:	b.ge	22ee8 <printf_parse@@Base+0x86ec>  // b.tcont
   22cb4:	ldr	x1, [sp, #360]
   22cb8:	ldrb	w0, [x1, x0]
   22cbc:	ldrb	w0, [x28, w0, sxtw]
   22cc0:	cbnz	w0, 22ef8 <printf_parse@@Base+0x86fc>
   22cc4:	ldr	x0, [sp, #200]
   22cc8:	add	x20, x25, x20
   22ccc:	str	x20, [sp, #288]
   22cd0:	cmp	x20, x0
   22cd4:	ldr	x0, [sp, #120]
   22cd8:	ccmp	x20, x0, #0x0, ge  // ge = tcont
   22cdc:	b.le	22c70 <printf_parse@@Base+0x8474>
   22ce0:	b	22dc8 <printf_parse@@Base+0x85cc>
   22ce4:	mov	x28, #0x0                   	// #0
   22ce8:	b	229a4 <printf_parse@@Base+0x81a8>
   22cec:	mov	w0, #0x1                   	// #1
   22cf0:	b	22a30 <printf_parse@@Base+0x8234>
   22cf4:	mov	x0, #0x0                   	// #0
   22cf8:	b	22b0c <printf_parse@@Base+0x8310>
   22cfc:	mov	x0, #0x6666666666666666    	// #7378697629483820646
   22d00:	movk	x0, #0x666, lsl #48
   22d04:	cmp	x19, x0
   22d08:	b.le	22d14 <printf_parse@@Base+0x8518>
   22d0c:	mov	w19, #0xc                   	// #12
   22d10:	b	22dcc <printf_parse@@Base+0x85d0>
   22d14:	mov	x0, #0x28                  	// #40
   22d18:	mul	x0, x19, x0
   22d1c:	bl	aab0 <malloc@plt>
   22d20:	mov	x20, x0
   22d24:	lsl	x0, x26, #4
   22d28:	str	x20, [sp, #568]
   22d2c:	bl	aab0 <malloc@plt>
   22d30:	str	x0, [sp, #600]
   22d34:	cbz	x20, 22d0c <printf_parse@@Base+0x8510>
   22d38:	cbnz	x0, 22b40 <printf_parse@@Base+0x8344>
   22d3c:	b	22d0c <printf_parse@@Base+0x8510>
   22d40:	str	xzr, [sp, #536]
   22d44:	b	22b84 <printf_parse@@Base+0x8388>
   22d48:	mov	w0, #0x0                   	// #0
   22d4c:	b	22bf0 <printf_parse@@Base+0x83f4>
   22d50:	mov	w0, #0x8                   	// #8
   22d54:	b	22c0c <printf_parse@@Base+0x8410>
   22d58:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   22d5c:	add	x1, x1, #0x2d0
   22d60:	ldrb	w1, [x1, w2, uxtw]
   22d64:	adr	x2, 22d70 <printf_parse@@Base+0x8574>
   22d68:	add	x1, x2, w1, sxtb #2
   22d6c:	br	x1
   22d70:	mov	w1, #0x0                   	// #0
   22d74:	ldr	x3, [sp, #120]
   22d78:	mov	x2, x0
   22d7c:	cmp	x3, x0
   22d80:	b.gt	22e7c <printf_parse@@Base+0x8680>
   22d84:	cbz	w1, 22d8c <printf_parse@@Base+0x8590>
   22d88:	str	x0, [sp, #288]
   22d8c:	ldr	x1, [sp, #120]
   22d90:	ldr	x0, [sp, #288]
   22d94:	cmp	x0, x1
   22d98:	b.ne	22ef8 <printf_parse@@Base+0x86fc>  // b.any
   22d9c:	mov	x0, x1
   22da0:	ldr	x1, [sp, #104]
   22da4:	cmp	x0, x1
   22da8:	b.ge	22ea4 <printf_parse@@Base+0x86a8>  // b.tcont
   22dac:	ldp	x1, x0, [sp, #120]
   22db0:	ldrb	w0, [x0, x1]
   22db4:	ldr	x1, [sp, #96]
   22db8:	cbz	x1, 22dc0 <printf_parse@@Base+0x85c4>
   22dbc:	ldrb	w0, [x1, x0]
   22dc0:	ldrb	w0, [x28, x0]
   22dc4:	cbnz	w0, 22ef8 <printf_parse@@Base+0x86fc>
   22dc8:	mov	w19, #0x1                   	// #1
   22dcc:	ldr	x0, [sp, #536]
   22dd0:	add	x20, sp, #0x160
   22dd4:	bl	b050 <free@plt>
   22dd8:	ldr	x0, [x21, #152]
   22ddc:	cbz	x0, 22df8 <printf_parse@@Base+0x85fc>
   22de0:	mov	x0, x20
   22de4:	bl	1c978 <printf_parse@@Base+0x217c>
   22de8:	ldr	x0, [sp, #600]
   22dec:	bl	b050 <free@plt>
   22df0:	ldr	x0, [sp, #568]
   22df4:	bl	b050 <free@plt>
   22df8:	mov	x0, x20
   22dfc:	bl	1c7d0 <printf_parse@@Base+0x1fd4>
   22e00:	mov	w0, w19
   22e04:	ldp	x29, x30, [sp]
   22e08:	ldp	x19, x20, [sp, #16]
   22e0c:	ldp	x21, x22, [sp, #32]
   22e10:	ldp	x23, x24, [sp, #48]
   22e14:	ldp	x25, x26, [sp, #64]
   22e18:	ldp	x27, x28, [sp, #80]
   22e1c:	add	sp, sp, #0x260
   22e20:	ret
   22e24:	mov	w1, #0x0                   	// #0
   22e28:	ldr	x3, [sp, #120]
   22e2c:	mov	x2, x0
   22e30:	cmp	x3, x0
   22e34:	b.le	22d84 <printf_parse@@Base+0x8588>
   22e38:	ldr	x3, [sp, #128]
   22e3c:	ldrb	w3, [x3, x0]
   22e40:	add	x0, x0, #0x1
   22e44:	ldrb	w3, [x28, x3]
   22e48:	cbnz	w3, 22e98 <printf_parse@@Base+0x869c>
   22e4c:	mov	w1, #0x1                   	// #1
   22e50:	b	22e28 <printf_parse@@Base+0x862c>
   22e54:	mov	w2, #0x0                   	// #0
   22e58:	ldr	x1, [sp, #200]
   22e5c:	mov	x3, x0
   22e60:	cmp	x0, x1
   22e64:	b.ge	22eac <printf_parse@@Base+0x86b0>  // b.tcont
   22e68:	cbz	w2, 22dc8 <printf_parse@@Base+0x85cc>
   22e6c:	str	x0, [sp, #288]
   22e70:	b	22dc8 <printf_parse@@Base+0x85cc>
   22e74:	mov	w1, #0x1                   	// #1
   22e78:	b	22d74 <printf_parse@@Base+0x8578>
   22e7c:	ldr	x3, [sp, #128]
   22e80:	ldr	x4, [sp, #96]
   22e84:	ldrb	w3, [x3, x0]
   22e88:	add	x0, x0, #0x1
   22e8c:	ldrb	w3, [x4, x3]
   22e90:	ldrb	w3, [x28, x3]
   22e94:	cbz	w3, 22e74 <printf_parse@@Base+0x8678>
   22e98:	cbz	w1, 22d8c <printf_parse@@Base+0x8590>
   22e9c:	str	x2, [sp, #288]
   22ea0:	b	22d8c <printf_parse@@Base+0x8590>
   22ea4:	mov	x0, #0x0                   	// #0
   22ea8:	b	22db4 <printf_parse@@Base+0x85b8>
   22eac:	ldr	x1, [sp, #104]
   22eb0:	cmp	x0, x1
   22eb4:	b.ge	22ee0 <printf_parse@@Base+0x86e4>  // b.tcont
   22eb8:	ldr	x1, [sp, #128]
   22ebc:	ldrb	w1, [x1, x0]
   22ec0:	ldr	x4, [sp, #96]
   22ec4:	cbz	x4, 22ecc <printf_parse@@Base+0x86d0>
   22ec8:	ldrb	w1, [x4, x1]
   22ecc:	ldrb	w1, [x28, x1]
   22ed0:	sub	x0, x0, #0x1
   22ed4:	cbnz	w1, 22ef0 <printf_parse@@Base+0x86f4>
   22ed8:	mov	w2, #0x1                   	// #1
   22edc:	b	22e58 <printf_parse@@Base+0x865c>
   22ee0:	mov	x1, #0x0                   	// #0
   22ee4:	b	22ec0 <printf_parse@@Base+0x86c4>
   22ee8:	mov	w0, #0x0                   	// #0
   22eec:	b	22cbc <printf_parse@@Base+0x84c0>
   22ef0:	cbz	w2, 22ef8 <printf_parse@@Base+0x86fc>
   22ef4:	str	x3, [sp, #288]
   22ef8:	ldr	w2, [sp, #184]
   22efc:	mov	x0, x23
   22f00:	ldr	x1, [sp, #288]
   22f04:	bl	20208 <printf_parse@@Base+0x5a0c>
   22f08:	mov	w19, w0
   22f0c:	cbnz	w0, 22dcc <printf_parse@@Base+0x85d0>
   22f10:	ldr	w0, [sp, #224]
   22f14:	cmp	w0, #0x1
   22f18:	b.eq	22f34 <printf_parse@@Base+0x8738>  // b.none
   22f1c:	ldr	x0, [sp, #400]
   22f20:	cbz	x0, 22f34 <printf_parse@@Base+0x8738>
   22f24:	ldr	x0, [sp, #368]
   22f28:	ldr	w0, [x0]
   22f2c:	cmn	w0, #0x1
   22f30:	b.eq	23034 <printf_parse@@Base+0x8838>  // b.none
   22f34:	ldr	x26, [sp, #504]
   22f38:	str	wzr, [sp, #280]
   22f3c:	ldr	x20, [sp, #424]
   22f40:	ldr	x25, [x26, #72]
   22f44:	ldrsb	w0, [x25, #104]
   22f48:	str	xzr, [sp, #544]
   22f4c:	str	xzr, [sp, #552]
   22f50:	str	wzr, [sp, #576]
   22f54:	tbz	w0, #31, 22fe8 <printf_parse@@Base+0x87ec>
   22f58:	ldr	w2, [sp, #512]
   22f5c:	sub	x1, x20, #0x1
   22f60:	mov	x0, x23
   22f64:	bl	20088 <printf_parse@@Base+0x588c>
   22f68:	mov	w3, w0
   22f6c:	tbz	w3, #0, 22fa8 <printf_parse@@Base+0x87ac>
   22f70:	ldr	x25, [x26, #80]
   22f74:	cbnz	x25, 22fe8 <printf_parse@@Base+0x87ec>
   22f78:	ldr	w0, [sp, #280]
   22f7c:	cmp	w0, #0xc
   22f80:	b.eq	22d0c <printf_parse@@Base+0x8510>  // b.none
   22f84:	adrp	x3, 29000 <vasnprintf@@Base+0x3170>
   22f88:	add	x3, x3, #0x338
   22f8c:	add	x3, x3, #0x3e
   22f90:	mov	w2, #0x435                 	// #1077
   22f94:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   22f98:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   22f9c:	add	x1, x1, #0x201
   22fa0:	add	x0, x0, #0x214
   22fa4:	bl	b530 <__assert_fail@plt>
   22fa8:	cbz	w0, 22fe8 <printf_parse@@Base+0x87ec>
   22fac:	and	w0, w0, #0x6
   22fb0:	cmp	w0, #0x6
   22fb4:	b.ne	22fc0 <printf_parse@@Base+0x87c4>  // b.any
   22fb8:	ldr	x25, [x26, #96]
   22fbc:	b	22f74 <printf_parse@@Base+0x8778>
   22fc0:	tbz	w3, #1, 22fcc <printf_parse@@Base+0x87d0>
   22fc4:	ldr	x25, [x26, #88]
   22fc8:	b	22f74 <printf_parse@@Base+0x8778>
   22fcc:	tbz	w3, #2, 22fe8 <printf_parse@@Base+0x87ec>
   22fd0:	ldr	x2, [x25, #80]
   22fd4:	mov	x1, x26
   22fd8:	add	x0, sp, #0x118
   22fdc:	bl	1e8ac <printf_parse@@Base+0x40b0>
   22fe0:	mov	x25, x0
   22fe4:	b	22f74 <printf_parse@@Base+0x8778>
   22fe8:	ldr	x0, [sp, #536]
   22fec:	cbz	x0, 230ac <printf_parse@@Base+0x88b0>
   22ff0:	str	x25, [x0, x20, lsl #3]
   22ff4:	ldr	x0, [x26, #152]
   22ff8:	ldr	w1, [sp, #244]
   22ffc:	str	w1, [sp, #144]
   23000:	cbz	x0, 23054 <printf_parse@@Base+0x8858>
   23004:	add	x26, x25, #0x8
   23008:	mov	x0, x23
   2300c:	mov	x1, x26
   23010:	mov	x2, #0x0                   	// #0
   23014:	bl	1bb48 <printf_parse@@Base+0x134c>
   23018:	str	w0, [sp, #280]
   2301c:	cbz	w0, 23048 <printf_parse@@Base+0x884c>
   23020:	sxtw	x20, w0
   23024:	cmn	x20, #0x1
   23028:	b.ne	234c0 <printf_parse@@Base+0x8cc4>  // b.any
   2302c:	mov	x0, x23
   23030:	bl	1c978 <printf_parse@@Base+0x217c>
   23034:	ldr	x0, [sp, #288]
   23038:	ldr	w1, [sp, #228]
   2303c:	add	x0, x0, w1, sxtw
   23040:	str	x0, [sp, #288]
   23044:	b	22c38 <printf_parse@@Base+0x843c>
   23048:	ldrb	w0, [x25, #104]
   2304c:	tbnz	w0, #6, 23094 <printf_parse@@Base+0x8898>
   23050:	str	wzr, [sp, #144]
   23054:	ldrb	w0, [x25, #104]
   23058:	tbz	w0, #4, 23414 <printf_parse@@Base+0x8c18>
   2305c:	ldrsb	w0, [x25, #104]
   23060:	tbz	w0, #31, 2307c <printf_parse@@Base+0x8880>
   23064:	mov	x2, x20
   23068:	mov	x1, x25
   2306c:	mov	x0, x23
   23070:	bl	20168 <printf_parse@@Base+0x596c>
   23074:	str	x0, [sp, #136]
   23078:	cbz	x0, 234b8 <printf_parse@@Base+0x8cbc>
   2307c:	ldr	w0, [sp, #164]
   23080:	cbz	w0, 23024 <printf_parse@@Base+0x8828>
   23084:	mov	x1, #0x1                   	// #1
   23088:	mov	x0, x20
   2308c:	str	x1, [sp, #136]
   23090:	b	2341c <printf_parse@@Base+0x8c20>
   23094:	mov	x1, x26
   23098:	mov	x0, x23
   2309c:	bl	21a40 <printf_parse@@Base+0x7244>
   230a0:	str	w0, [sp, #280]
   230a4:	cbz	w0, 23050 <printf_parse@@Base+0x8854>
   230a8:	b	23020 <printf_parse@@Base+0x8824>
   230ac:	ldr	w0, [sp, #244]
   230b0:	str	w0, [sp, #144]
   230b4:	b	23054 <printf_parse@@Base+0x8858>
   230b8:	ldrb	w0, [x25, #104]
   230bc:	tbnz	w0, #5, 23174 <printf_parse@@Base+0x8978>
   230c0:	ldr	x0, [sp, #424]
   230c4:	add	x1, x0, #0x1
   230c8:	str	x1, [sp, #424]
   230cc:	ldr	x1, [sp, #360]
   230d0:	ldrb	w27, [x1, x0]
   230d4:	ldr	x0, [x25, #88]
   230d8:	cbz	x0, 23318 <printf_parse@@Base+0x8b1c>
   230dc:	ubfiz	x27, x27, #3, #8
   230e0:	ldr	x26, [x0, x27]
   230e4:	ldr	x0, [sp, #536]
   230e8:	cbz	x0, 23100 <printf_parse@@Base+0x8904>
   230ec:	mov	x2, x26
   230f0:	mov	x1, x23
   230f4:	add	x0, sp, #0x118
   230f8:	bl	21ff0 <printf_parse@@Base+0x77f4>
   230fc:	mov	x26, x0
   23100:	cbnz	x26, 233a4 <printf_parse@@Base+0x8ba8>
   23104:	ldr	w1, [sp, #280]
   23108:	ldr	x0, [sp, #536]
   2310c:	cbnz	w1, 22d0c <printf_parse@@Base+0x8510>
   23110:	cbz	x0, 23154 <printf_parse@@Base+0x8958>
   23114:	ldr	w0, [sp, #164]
   23118:	ldr	w1, [sp, #136]
   2311c:	eor	w0, w0, #0x1
   23120:	tst	w0, w1
   23124:	b.ne	23154 <printf_parse@@Base+0x8958>  // b.any
   23128:	add	x27, sp, #0x118
   2312c:	ldr	x0, [sp, #424]
   23130:	mov	w1, #0x0                   	// #0
   23134:	ldr	x3, [sp, #536]
   23138:	ldr	x4, [sp, #544]
   2313c:	mov	x2, x0
   23140:	add	x0, x0, #0x1
   23144:	cmp	x4, x0
   23148:	b.ge	23374 <printf_parse@@Base+0x8b78>  // b.tcont
   2314c:	cbz	w1, 23154 <printf_parse@@Base+0x8958>
   23150:	str	x2, [sp, #424]
   23154:	ldr	x0, [sp, #152]
   23158:	cbz	x0, 23024 <printf_parse@@Base+0x8828>
   2315c:	ldr	x0, [x0]
   23160:	ldr	x1, [sp, #208]
   23164:	add	x0, x0, x1
   23168:	ldr	x1, [sp, #152]
   2316c:	str	x0, [x1]
   23170:	b	23024 <printf_parse@@Base+0x8828>
   23174:	ldr	x26, [sp, #504]
   23178:	str	xzr, [sp, #176]
   2317c:	ldr	x0, [x25, #16]
   23180:	ldr	x1, [sp, #176]
   23184:	cmp	x1, x0
   23188:	b.lt	23194 <printf_parse@@Base+0x8998>  // b.tstop
   2318c:	mov	w0, #0x0                   	// #0
   23190:	b	23308 <printf_parse@@Base+0x8b0c>
   23194:	ldr	x0, [x25, #24]
   23198:	ldr	x1, [sp, #176]
   2319c:	ldr	x27, [x0, x1, lsl #3]
   231a0:	ldr	x0, [x26]
   231a4:	add	x0, x0, x27, lsl #4
   231a8:	ldrb	w1, [x0, #10]
   231ac:	tbz	w1, #4, 232dc <printf_parse@@Base+0x8ae0>
   231b0:	ldr	w4, [x0, #8]
   231b4:	str	w4, [sp, #264]
   231b8:	tst	w4, #0x3ff00
   231bc:	ldr	x3, [sp, #424]
   231c0:	b.eq	23204 <printf_parse@@Base+0x8a08>  // b.none
   231c4:	ldr	w2, [sp, #512]
   231c8:	mov	x1, x3
   231cc:	mov	x0, x23
   231d0:	str	x3, [sp, #256]
   231d4:	bl	20088 <printf_parse@@Base+0x588c>
   231d8:	ldr	w4, [sp, #264]
   231dc:	ldr	x3, [sp, #256]
   231e0:	ubfx	x2, x4, #8, #10
   231e4:	tbz	w4, #10, 231ec <printf_parse@@Base+0x89f0>
   231e8:	tbz	w0, #0, 232dc <printf_parse@@Base+0x8ae0>
   231ec:	tbz	w2, #3, 231f4 <printf_parse@@Base+0x89f8>
   231f0:	tbnz	w0, #0, 232dc <printf_parse@@Base+0x8ae0>
   231f4:	tbz	w2, #5, 231fc <printf_parse@@Base+0x8a00>
   231f8:	tbz	w0, #1, 232dc <printf_parse@@Base+0x8ae0>
   231fc:	tbz	w2, #7, 23204 <printf_parse@@Base+0x8a08>
   23200:	tbz	w0, #3, 232dc <printf_parse@@Base+0x8ae0>
   23204:	mov	x2, x23
   23208:	mov	x1, x27
   2320c:	mov	x0, x26
   23210:	bl	1d5e0 <printf_parse@@Base+0x2de4>
   23214:	cbz	w0, 232dc <printf_parse@@Base+0x8ae0>
   23218:	ldr	x3, [sp, #424]
   2321c:	ldr	w1, [sp, #576]
   23220:	add	x3, x3, w0, sxtw
   23224:	cmp	w1, w0
   23228:	csel	w0, w1, w0, ge  // ge = tcont
   2322c:	mov	x1, x3
   23230:	str	x3, [sp, #256]
   23234:	str	w0, [sp, #576]
   23238:	mov	x0, x23
   2323c:	bl	1c408 <printf_parse@@Base+0x1c0c>
   23240:	str	w0, [sp, #284]
   23244:	cbnz	w0, 23308 <printf_parse@@Base+0x8b0c>
   23248:	ldr	x0, [x26, #24]
   2324c:	mov	x1, #0x18                  	// #24
   23250:	ldr	x3, [sp, #256]
   23254:	ldr	x2, [x0, x27, lsl #3]
   23258:	ldr	x0, [x26, #48]
   2325c:	lsl	x27, x3, #3
   23260:	madd	x2, x2, x1, x0
   23264:	ldr	x0, [sp, #536]
   23268:	ldr	x4, [x0, x27]
   2326c:	cbnz	x4, 232ec <printf_parse@@Base+0x8af0>
   23270:	ldr	x5, [sp, #192]
   23274:	ldp	x0, x1, [x2]
   23278:	stp	x0, x1, [x5]
   2327c:	ldr	x0, [x2, #16]
   23280:	str	x0, [x5, #16]
   23284:	ldr	w2, [sp, #512]
   23288:	sub	x1, x3, #0x1
   2328c:	mov	x0, x23
   23290:	str	x4, [sp, #264]
   23294:	bl	20088 <printf_parse@@Base+0x588c>
   23298:	mov	w3, w0
   2329c:	ldr	x2, [sp, #192]
   232a0:	mov	x1, x26
   232a4:	ldr	x0, [sp, #248]
   232a8:	ldr	x5, [sp, #536]
   232ac:	str	x5, [sp, #256]
   232b0:	bl	1e8ac <printf_parse@@Base+0x40b0>
   232b4:	ldp	x5, x4, [sp, #256]
   232b8:	str	x0, [x5, x27]
   232bc:	cbz	x4, 232c8 <printf_parse@@Base+0x8acc>
   232c0:	ldr	x0, [sp, #312]
   232c4:	bl	b050 <free@plt>
   232c8:	ldr	x0, [sp, #536]
   232cc:	ldr	x0, [x0, x27]
   232d0:	cbnz	x0, 232dc <printf_parse@@Base+0x8ae0>
   232d4:	ldr	w0, [sp, #284]
   232d8:	cbnz	w0, 23308 <printf_parse@@Base+0x8b0c>
   232dc:	ldr	x0, [sp, #176]
   232e0:	add	x0, x0, #0x1
   232e4:	str	x0, [sp, #176]
   232e8:	b	2317c <printf_parse@@Base+0x8980>
   232ec:	ldr	x1, [x4, #80]
   232f0:	stp	x4, x3, [sp, #256]
   232f4:	ldr	x0, [sp, #192]
   232f8:	bl	1e758 <printf_parse@@Base+0x3f5c>
   232fc:	str	w0, [sp, #284]
   23300:	ldp	x4, x3, [sp, #256]
   23304:	cbz	w0, 23284 <printf_parse@@Base+0x8a88>
   23308:	str	w0, [sp, #280]
   2330c:	cbz	w0, 230c0 <printf_parse@@Base+0x88c4>
   23310:	mov	x26, #0x0                   	// #0
   23314:	b	230e4 <printf_parse@@Base+0x88e8>
   23318:	ldr	x26, [x25, #96]
   2331c:	cbz	x26, 23354 <printf_parse@@Base+0x8b58>
   23320:	ldr	w2, [sp, #512]
   23324:	mov	x0, x23
   23328:	ldr	x1, [sp, #424]
   2332c:	sub	x1, x1, #0x1
   23330:	bl	20088 <printf_parse@@Base+0x588c>
   23334:	and	x1, x27, #0xff
   23338:	tbz	w0, #0, 23348 <printf_parse@@Base+0x8b4c>
   2333c:	add	x1, x1, #0x100
   23340:	ldr	x26, [x26, x1, lsl #3]
   23344:	b	230e4 <printf_parse@@Base+0x88e8>
   23348:	ubfiz	x27, x27, #3, #8
   2334c:	ldr	x26, [x26, x27]
   23350:	b	230e4 <printf_parse@@Base+0x88e8>
   23354:	ldr	x0, [sp, #504]
   23358:	mov	x1, x25
   2335c:	bl	1f844 <printf_parse@@Base+0x5048>
   23360:	tst	w0, #0xff
   23364:	b.ne	230d4 <printf_parse@@Base+0x88d8>  // b.any
   23368:	mov	w0, #0xc                   	// #12
   2336c:	str	w0, [sp, #280]
   23370:	b	230e4 <printf_parse@@Base+0x88e8>
   23374:	ldr	x2, [x3, x0, lsl #3]
   23378:	mov	w1, #0x1                   	// #1
   2337c:	cbz	x2, 2313c <printf_parse@@Base+0x8940>
   23380:	mov	x1, x23
   23384:	mov	x2, #0x0                   	// #0
   23388:	str	x0, [sp, #424]
   2338c:	mov	x0, x27
   23390:	bl	21ff0 <printf_parse@@Base+0x77f4>
   23394:	mov	x26, x0
   23398:	ldr	w0, [sp, #280]
   2339c:	cbnz	w0, 2340c <printf_parse@@Base+0x8c10>
   233a0:	cbz	x26, 2312c <printf_parse@@Base+0x8930>
   233a4:	ldr	w0, [sp, #144]
   233a8:	cbz	w0, 233c8 <printf_parse@@Base+0x8bcc>
   233ac:	cmp	x25, x26
   233b0:	csel	w0, w0, wzr, eq  // eq = none
   233b4:	str	w0, [sp, #144]
   233b8:	ldr	x0, [sp, #168]
   233bc:	ldr	x1, [sp, #208]
   233c0:	csel	x0, x0, x1, eq  // eq = none
   233c4:	str	x0, [sp, #208]
   233c8:	ldrb	w0, [x26, #104]
   233cc:	tbz	w0, #4, 23404 <printf_parse@@Base+0x8c08>
   233d0:	ldr	x25, [sp, #424]
   233d4:	tbz	w0, #7, 233ec <printf_parse@@Base+0x8bf0>
   233d8:	mov	x2, x25
   233dc:	mov	x1, x26
   233e0:	mov	x0, x23
   233e4:	bl	20168 <printf_parse@@Base+0x596c>
   233e8:	cbz	x0, 23404 <printf_parse@@Base+0x8c08>
   233ec:	ldr	w0, [sp, #164]
   233f0:	mov	x20, x25
   233f4:	cbz	w0, 23024 <printf_parse@@Base+0x8828>
   233f8:	mov	x0, #0x1                   	// #1
   233fc:	str	x0, [sp, #136]
   23400:	str	xzr, [sp, #152]
   23404:	mov	x25, x26
   23408:	b	23434 <printf_parse@@Base+0x8c38>
   2340c:	cbnz	x26, 233a4 <printf_parse@@Base+0x8ba8>
   23410:	b	23154 <printf_parse@@Base+0x8958>
   23414:	mov	x0, #0xffffffffffffffff    	// #-1
   23418:	str	xzr, [sp, #136]
   2341c:	str	x20, [sp, #208]
   23420:	mov	x20, x0
   23424:	ldr	x0, [sp, #232]
   23428:	str	x0, [sp, #152]
   2342c:	add	x0, sp, #0x128
   23430:	str	x0, [sp, #192]
   23434:	ldr	x0, [sp, #424]
   23438:	ldr	x1, [sp, #456]
   2343c:	cmp	x0, x1
   23440:	b.ge	23154 <printf_parse@@Base+0x8958>  // b.tcont
   23444:	add	x0, x0, #0x1
   23448:	str	x0, [sp, #168]
   2344c:	ldr	x0, [sp, #416]
   23450:	ldr	x1, [sp, #168]
   23454:	cmp	x1, x0
   23458:	b.lt	23468 <printf_parse@@Base+0x8c6c>  // b.tstop
   2345c:	ldr	x1, [sp, #440]
   23460:	cmp	x0, x1
   23464:	b.lt	23484 <printf_parse@@Base+0x8c88>  // b.tstop
   23468:	ldr	x1, [sp, #168]
   2346c:	ldr	x0, [sp, #400]
   23470:	cmp	x1, x0
   23474:	b.lt	230b8 <printf_parse@@Base+0x88bc>  // b.tstop
   23478:	ldr	x1, [sp, #440]
   2347c:	cmp	x0, x1
   23480:	b.ge	230b8 <printf_parse@@Base+0x88bc>  // b.tcont
   23484:	ldr	w0, [sp, #168]
   23488:	add	w1, w0, #0x1
   2348c:	mov	x0, x23
   23490:	bl	1c33c <printf_parse@@Base+0x1b40>
   23494:	str	w0, [sp, #280]
   23498:	cbz	w0, 230b8 <printf_parse@@Base+0x88bc>
   2349c:	cmp	w0, #0xc
   234a0:	b.eq	22d0c <printf_parse@@Base+0x8510>  // b.none
   234a4:	adrp	x3, 29000 <vasnprintf@@Base+0x3170>
   234a8:	add	x3, x3, #0x338
   234ac:	add	x3, x3, #0x3e
   234b0:	mov	w2, #0x46c                 	// #1132
   234b4:	b	22f94 <printf_parse@@Base+0x8798>
   234b8:	mov	x0, #0xffffffffffffffff    	// #-1
   234bc:	b	2341c <printf_parse@@Base+0x8c20>
   234c0:	cmn	x20, #0x2
   234c4:	b.eq	22d0c <printf_parse@@Base+0x8510>  // b.none
   234c8:	ldrb	w0, [x24, #56]
   234cc:	str	x20, [sp, #520]
   234d0:	and	w25, w0, #0x10
   234d4:	tbnz	w0, #4, 234e0 <printf_parse@@Base+0x8ce4>
   234d8:	cmp	x22, #0x1
   234dc:	b.hi	234e8 <printf_parse@@Base+0x8cec>  // b.pmore
   234e0:	ldr	x0, [x21, #152]
   234e4:	cbz	x0, 23860 <printf_parse@@Base+0x9064>
   234e8:	ldr	x0, [sp, #536]
   234ec:	mov	x2, x20
   234f0:	ldr	x1, [x0, x20, lsl #3]
   234f4:	mov	x0, x23
   234f8:	bl	20168 <printf_parse@@Base+0x596c>
   234fc:	str	x0, [sp, #528]
   23500:	cbz	w25, 23584 <printf_parse@@Base+0x8d88>
   23504:	ldr	x0, [x21, #152]
   23508:	cbnz	x0, 23594 <printf_parse@@Base+0x8d98>
   2350c:	cbz	x22, 22dcc <printf_parse@@Base+0x85d0>
   23510:	ldr	x0, [sp, #112]
   23514:	mov	x2, #0xffffffffffffffff    	// #-1
   23518:	add	x20, x0, #0x10
   2351c:	mov	x0, #0x1                   	// #1
   23520:	mov	x1, x20
   23524:	cmp	x22, x0
   23528:	b.ne	23740 <printf_parse@@Base+0x8f44>  // b.any
   2352c:	ldr	x0, [sp, #112]
   23530:	ldr	x1, [sp, #112]
   23534:	str	xzr, [x0]
   23538:	ldr	x0, [sp, #520]
   2353c:	str	x0, [x1, #8]
   23540:	ldrb	w0, [x24, #56]
   23544:	tbnz	w0, #4, 23768 <printf_parse@@Base+0x8f6c>
   23548:	cmp	x22, #0x1
   2354c:	b.eq	23768 <printf_parse@@Base+0x8f6c>  // b.none
   23550:	ldrb	w0, [x21, #176]
   23554:	tbz	w0, #0, 23750 <printf_parse@@Base+0x8f54>
   23558:	ldr	x0, [x21, #152]
   2355c:	cmp	x0, #0x0
   23560:	cset	w4, gt
   23564:	ldr	x3, [sp, #112]
   23568:	mov	x2, x22
   2356c:	add	x1, sp, #0x160
   23570:	mov	x0, x24
   23574:	bl	20a28 <printf_parse@@Base+0x622c>
   23578:	cbz	w0, 23768 <printf_parse@@Base+0x8f6c>
   2357c:	mov	w19, w0
   23580:	b	22dcc <printf_parse@@Base+0x85d0>
   23584:	cmp	x22, #0x1
   23588:	b.ls	23504 <printf_parse@@Base+0x8d08>  // b.plast
   2358c:	ldrb	w0, [x21, #176]
   23590:	tbz	w0, #0, 23504 <printf_parse@@Base+0x8d08>
   23594:	ldr	x0, [sp, #504]
   23598:	str	x0, [sp, #152]
   2359c:	ldr	x0, [sp, #528]
   235a0:	str	x0, [sp, #136]
   235a4:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
   235a8:	cmp	x20, x0
   235ac:	b.hi	22d0c <printf_parse@@Base+0x8510>  // b.pmore
   235b0:	add	x27, x20, #0x1
   235b4:	lsl	x27, x27, #3
   235b8:	mov	x0, x27
   235bc:	bl	aab0 <malloc@plt>
   235c0:	mov	x25, x0
   235c4:	cbz	x0, 2372c <printf_parse@@Base+0x8f30>
   235c8:	ldr	x0, [sp, #152]
   235cc:	ldr	x0, [x0, #152]
   235d0:	cbz	x0, 236a8 <printf_parse@@Base+0x8eac>
   235d4:	mov	x0, x27
   235d8:	bl	aab0 <malloc@plt>
   235dc:	mov	x26, x0
   235e0:	cbz	x0, 23730 <printf_parse@@Base+0x8f34>
   235e4:	add	x0, sp, #0x128
   235e8:	str	x0, [sp, #144]
   235ec:	add	x3, x20, #0x1
   235f0:	mov	w1, #0x0                   	// #0
   235f4:	mov	x0, x26
   235f8:	str	x3, [sp, #168]
   235fc:	lsl	x2, x3, #3
   23600:	bl	ac10 <memset@plt>
   23604:	stp	x25, x26, [sp, #296]
   23608:	ldr	x0, [sp, #136]
   2360c:	stp	x0, x20, [sp, #312]
   23610:	ldr	x0, [sp, #144]
   23614:	mov	x1, x0
   23618:	stp	xzr, xzr, [x0, #32]
   2361c:	str	xzr, [x0, #48]
   23620:	mov	x0, x23
   23624:	bl	226dc <printf_parse@@Base+0x7ee0>
   23628:	mov	w27, w0
   2362c:	ldr	x0, [sp, #344]
   23630:	bl	b050 <free@plt>
   23634:	cbnz	w27, 23708 <printf_parse@@Base+0x8f0c>
   23638:	ldr	x0, [x25]
   2363c:	ldr	x3, [sp, #168]
   23640:	cbnz	x0, 23680 <printf_parse@@Base+0x8e84>
   23644:	ldr	x0, [x26]
   23648:	cbnz	x0, 23680 <printf_parse@@Base+0x8e84>
   2364c:	ldr	x2, [sp, #536]
   23650:	sub	x20, x20, #0x1
   23654:	cmn	x20, #0x1
   23658:	b.eq	23738 <printf_parse@@Base+0x8f3c>  // b.none
   2365c:	ldr	x1, [x2, x20, lsl #3]
   23660:	cbz	x1, 23650 <printf_parse@@Base+0x8e54>
   23664:	ldrb	w0, [x1, #104]
   23668:	tbz	w0, #4, 23650 <printf_parse@@Base+0x8e54>
   2366c:	mov	x2, x20
   23670:	mov	x0, x23
   23674:	bl	20168 <printf_parse@@Base+0x596c>
   23678:	str	x0, [sp, #136]
   2367c:	b	235ec <printf_parse@@Base+0x8df0>
   23680:	ldr	x0, [sp, #152]
   23684:	mov	x2, x26
   23688:	mov	x1, x25
   2368c:	bl	21358 <printf_parse@@Base+0x6b5c>
   23690:	mov	w27, w0
   23694:	mov	x0, x26
   23698:	bl	b050 <free@plt>
   2369c:	cbz	w27, 236e4 <printf_parse@@Base+0x8ee8>
   236a0:	mov	x26, #0x0                   	// #0
   236a4:	b	23708 <printf_parse@@Base+0x8f0c>
   236a8:	ldr	x0, [sp, #136]
   236ac:	stp	x0, x20, [sp, #312]
   236b0:	add	x0, sp, #0x200
   236b4:	add	x1, sp, #0x128
   236b8:	stp	x25, xzr, [sp, #296]
   236bc:	stp	xzr, xzr, [x0, #-184]
   236c0:	mov	x0, x23
   236c4:	str	xzr, [x1, #48]
   236c8:	bl	226dc <printf_parse@@Base+0x7ee0>
   236cc:	mov	w27, w0
   236d0:	ldr	x0, [sp, #344]
   236d4:	bl	b050 <free@plt>
   236d8:	cbnz	w27, 236a0 <printf_parse@@Base+0x8ea4>
   236dc:	ldr	x26, [x25]
   236e0:	cbz	x26, 23738 <printf_parse@@Base+0x8f3c>
   236e4:	ldr	x0, [sp, #536]
   236e8:	mov	w27, #0x0                   	// #0
   236ec:	mov	x26, #0x0                   	// #0
   236f0:	bl	b050 <free@plt>
   236f4:	str	x20, [sp, #520]
   236f8:	ldr	x0, [sp, #136]
   236fc:	str	x0, [sp, #528]
   23700:	str	x25, [sp, #536]
   23704:	mov	x25, #0x0                   	// #0
   23708:	mov	x0, x25
   2370c:	bl	b050 <free@plt>
   23710:	mov	x0, x26
   23714:	bl	b050 <free@plt>
   23718:	cbz	w27, 2350c <printf_parse@@Base+0x8d10>
   2371c:	cmp	w27, #0x1
   23720:	b.eq	2302c <printf_parse@@Base+0x8830>  // b.none
   23724:	mov	w19, w27
   23728:	b	22dcc <printf_parse@@Base+0x85d0>
   2372c:	mov	x26, #0x0                   	// #0
   23730:	mov	w27, #0xc                   	// #12
   23734:	b	23708 <printf_parse@@Base+0x8f0c>
   23738:	mov	w27, #0x1                   	// #1
   2373c:	b	23708 <printf_parse@@Base+0x8f0c>
   23740:	str	x2, [x1, #8]
   23744:	add	x0, x0, #0x1
   23748:	str	x2, [x1], #16
   2374c:	b	23524 <printf_parse@@Base+0x8d28>
   23750:	mov	w4, #0x0                   	// #0
   23754:	b	23564 <printf_parse@@Base+0x8d68>
   23758:	mov	x2, x4
   2375c:	b	2379c <printf_parse@@Base+0x8fa0>
   23760:	mov	x2, x4
   23764:	b	237b0 <printf_parse@@Base+0x8fb4>
   23768:	ldp	x6, x4, [sp, #400]
   2376c:	mov	x1, #0x0                   	// #0
   23770:	ldrb	w7, [sp, #492]
   23774:	ldr	x0, [sp, #112]
   23778:	ldr	x3, [sp, #288]
   2377c:	ldr	x5, [sp, #376]
   23780:	ldr	x2, [x0]
   23784:	cmn	x2, #0x1
   23788:	b.eq	237cc <printf_parse@@Base+0x8fd0>  // b.none
   2378c:	cbz	w7, 237b4 <printf_parse@@Base+0x8fb8>
   23790:	cmp	x2, x6
   23794:	b.eq	23758 <printf_parse@@Base+0x8f5c>  // b.none
   23798:	ldr	x2, [x5, x2, lsl #3]
   2379c:	str	x2, [x0]
   237a0:	ldr	x2, [x0, #8]
   237a4:	cmp	x6, x2
   237a8:	b.eq	23760 <printf_parse@@Base+0x8f64>  // b.none
   237ac:	ldr	x2, [x5, x2, lsl #3]
   237b0:	str	x2, [x0, #8]
   237b4:	ldr	x2, [x0]
   237b8:	add	x2, x2, x3
   237bc:	str	x2, [x0]
   237c0:	ldr	x2, [x0, #8]
   237c4:	add	x2, x2, x3
   237c8:	str	x2, [x0, #8]
   237cc:	add	x1, x1, #0x1
   237d0:	add	x0, x0, #0x10
   237d4:	cmp	x22, x1
   237d8:	b.ne	23780 <printf_parse@@Base+0x8f84>  // b.any
   237dc:	ldr	x0, [sp, #112]
   237e0:	mov	x1, #0x0                   	// #0
   237e4:	mov	x2, #0xffffffffffffffff    	// #-1
   237e8:	add	x0, x0, x22, lsl #4
   237ec:	ldr	x3, [sp, #216]
   237f0:	cmp	x1, x3
   237f4:	b.lt	23848 <printf_parse@@Base+0x904c>  // b.tstop
   237f8:	ldr	x2, [x21, #224]
   237fc:	cbz	x2, 22dcc <printf_parse@@Base+0x85d0>
   23800:	sub	x22, x22, #0x1
   23804:	mov	x0, #0x0                   	// #0
   23808:	cmp	x22, x0
   2380c:	b.eq	22dcc <printf_parse@@Base+0x85d0>  // b.none
   23810:	ldr	x1, [x2, x0, lsl #3]
   23814:	cmp	x1, x0
   23818:	b.eq	2383c <printf_parse@@Base+0x9040>  // b.none
   2381c:	ldr	x3, [sp, #112]
   23820:	add	x1, x3, x1, lsl #4
   23824:	ldr	x1, [x1, #16]
   23828:	str	x1, [x20]
   2382c:	ldr	x1, [x2, x0, lsl #3]
   23830:	add	x1, x3, x1, lsl #4
   23834:	ldr	x1, [x1, #24]
   23838:	str	x1, [x20, #8]
   2383c:	add	x0, x0, #0x1
   23840:	add	x20, x20, #0x10
   23844:	b	23808 <printf_parse@@Base+0x900c>
   23848:	add	x1, x1, #0x1
   2384c:	stp	x2, x2, [x0]
   23850:	add	x0, x0, #0x10
   23854:	b	237ec <printf_parse@@Base+0x8ff0>
   23858:	mov	w19, #0x1                   	// #1
   2385c:	b	22e00 <printf_parse@@Base+0x8604>
   23860:	cbnz	w25, 2350c <printf_parse@@Base+0x8d10>
   23864:	cmp	x22, #0x1
   23868:	b.hi	2358c <printf_parse@@Base+0x8d90>  // b.pmore
   2386c:	b	2350c <printf_parse@@Base+0x8d10>
   23870:	stp	x29, x30, [sp, #-320]!
   23874:	mov	x29, sp
   23878:	stp	x19, x20, [sp, #16]
   2387c:	mov	x19, x2
   23880:	stp	x21, x22, [sp, #32]
   23884:	mov	x21, x0
   23888:	mov	x22, x5
   2388c:	stp	x23, x24, [sp, #48]
   23890:	mov	x23, x3
   23894:	mov	x24, x1
   23898:	stp	x25, x26, [sp, #64]
   2389c:	adrp	x25, 29000 <vasnprintf@@Base+0x3170>
   238a0:	mov	x26, x4
   238a4:	add	x25, x25, #0x2d8
   238a8:	stp	x27, x28, [sp, #80]
   238ac:	and	x27, x3, #0x1000000
   238b0:	and	x28, x3, #0x20
   238b4:	and	x3, x3, #0x10
   238b8:	ldrb	w0, [x19, #8]
   238bc:	ldr	x20, [x24]
   238c0:	sub	w1, w0, #0x1
   238c4:	cmp	w1, #0x23
   238c8:	b.hi	23afc <printf_parse@@Base+0x9300>  // b.pmore
   238cc:	ldrh	w1, [x25, w1, uxtw #1]
   238d0:	adr	x2, 238dc <printf_parse@@Base+0x90e0>
   238d4:	add	x1, x2, w1, sxth #2
   238d8:	br	x1
   238dc:	mov	x3, x19
   238e0:	mov	x0, x20
   238e4:	mov	x2, #0x0                   	// #0
   238e8:	mov	x1, #0x0                   	// #0
   238ec:	bl	1d990 <printf_parse@@Base+0x3194>
   238f0:	mov	x27, x0
   238f4:	cbnz	x0, 23904 <printf_parse@@Base+0x9108>
   238f8:	mov	w0, #0xc                   	// #12
   238fc:	str	w0, [x22]
   23900:	b	23afc <printf_parse@@Base+0x9300>
   23904:	ldr	w0, [x20, #180]
   23908:	cmp	w0, #0x1
   2390c:	b.gt	239fc <printf_parse@@Base+0x9200>
   23910:	mov	x0, x19
   23914:	mov	x2, x23
   23918:	mov	x1, x21
   2391c:	bl	1f750 <printf_parse@@Base+0x4f54>
   23920:	adrp	x26, 1b000 <printf_parse@@Base+0x804>
   23924:	add	x0, x26, #0x528
   23928:	str	x0, [sp, #104]
   2392c:	adrp	x0, 1c000 <printf_parse@@Base+0x1804>
   23930:	add	x0, x0, #0x518
   23934:	str	x0, [sp, #112]
   23938:	ldrb	w1, [x19, #8]
   2393c:	cmp	w1, #0x12
   23940:	cset	w0, eq  // eq = none
   23944:	cmp	w0, #0x0
   23948:	and	x5, x0, #0xff
   2394c:	ccmp	w1, #0xb, #0x4, eq  // eq = none
   23950:	b.eq	23960 <printf_parse@@Base+0x9164>  // b.none
   23954:	and	w0, w1, #0xfffffffb
   23958:	cmp	w0, #0x13
   2395c:	b.ne	24330 <printf_parse@@Base+0x9b34>  // b.any
   23960:	cmp	w1, #0x17
   23964:	ldp	x24, x25, [x19]
   23968:	ldr	x28, [x21, #72]
   2396c:	b.ne	24594 <printf_parse@@Base+0x9d98>  // b.any
   23970:	mov	x2, x23
   23974:	mov	x1, x19
   23978:	mov	x0, x21
   2397c:	bl	1f77c <printf_parse@@Base+0x4f80>
   23980:	mov	x5, x0
   23984:	cmn	x0, #0x1
   23988:	b.ne	24494 <printf_parse@@Base+0x9c98>  // b.any
   2398c:	ldrb	w0, [x19, #8]
   23990:	cmp	w0, #0x1
   23994:	b.ne	239a4 <printf_parse@@Base+0x91a8>  // b.any
   23998:	ldrb	w0, [x19]
   2399c:	cmp	w0, #0x2c
   239a0:	b.eq	244a4 <printf_parse@@Base+0x9ca8>  // b.none
   239a4:	mov	w0, #0xa                   	// #10
   239a8:	str	w0, [x22]
   239ac:	b	245d4 <printf_parse@@Base+0x9dd8>
   239b0:	mov	x2, x23
   239b4:	mov	x1, x21
   239b8:	mov	x0, x19
   239bc:	bl	1f750 <printf_parse@@Base+0x4f54>
   239c0:	mov	x3, x19
   239c4:	mov	x2, #0x0                   	// #0
   239c8:	mov	x1, #0x0                   	// #0
   239cc:	mov	x0, x20
   239d0:	bl	1d990 <printf_parse@@Base+0x3194>
   239d4:	mov	x24, x0
   239d8:	mov	x2, x0
   239dc:	mov	x1, x27
   239e0:	mov	x0, x20
   239e4:	mov	w3, #0x10                  	// #16
   239e8:	bl	1daf4 <printf_parse@@Base+0x32f8>
   239ec:	mov	x27, x0
   239f0:	cmp	x24, #0x0
   239f4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   239f8:	b.eq	238f8 <printf_parse@@Base+0x90fc>  // b.none
   239fc:	ldr	x0, [x21, #72]
   23a00:	ldr	x1, [x21, #104]
   23a04:	cmp	x1, x0
   23a08:	b.le	23910 <printf_parse@@Base+0x9114>
   23a0c:	ldr	x1, [x21, #48]
   23a10:	cmp	x0, x1
   23a14:	b.eq	23910 <printf_parse@@Base+0x9114>  // b.none
   23a18:	ldr	x1, [x21, #16]
   23a1c:	ldr	w0, [x1, x0, lsl #2]
   23a20:	cmn	w0, #0x1
   23a24:	b.eq	239b0 <printf_parse@@Base+0x91b4>  // b.none
   23a28:	b	23910 <printf_parse@@Base+0x9114>
   23a2c:	ldr	x25, [x24, #48]
   23a30:	orr	x2, x23, #0x800000
   23a34:	mov	x1, x21
   23a38:	add	x0, x25, #0x1
   23a3c:	str	x0, [x24, #48]
   23a40:	mov	x0, x19
   23a44:	bl	1f750 <printf_parse@@Base+0x4f54>
   23a48:	ldrb	w0, [x19, #8]
   23a4c:	cmp	w0, #0x9
   23a50:	b.eq	23aac <printf_parse@@Base+0x92b0>  // b.none
   23a54:	mov	x2, x19
   23a58:	mov	x1, x24
   23a5c:	mov	x5, x22
   23a60:	add	x4, x26, #0x1
   23a64:	mov	x3, x23
   23a68:	mov	x0, x21
   23a6c:	bl	24924 <printf_parse@@Base+0xa128>
   23a70:	mov	x1, x0
   23a74:	ldr	w2, [x22]
   23a78:	cbnz	w2, 23aa4 <printf_parse@@Base+0x92a8>
   23a7c:	ldrb	w2, [x19, #8]
   23a80:	cmp	w2, #0x9
   23a84:	b.eq	23ab0 <printf_parse@@Base+0x92b4>  // b.none
   23a88:	cbz	x0, 23a9c <printf_parse@@Base+0x92a0>
   23a8c:	adrp	x1, 1c000 <printf_parse@@Base+0x1804>
   23a90:	mov	x2, #0x0                   	// #0
   23a94:	add	x1, x1, #0x518
   23a98:	bl	1b8dc <printf_parse@@Base+0x10e0>
   23a9c:	mov	w0, #0x8                   	// #8
   23aa0:	str	w0, [x22]
   23aa4:	mov	x27, #0x0                   	// #0
   23aa8:	b	23af0 <printf_parse@@Base+0x92f4>
   23aac:	mov	x1, #0x0                   	// #0
   23ab0:	cmp	x25, #0x8
   23ab4:	b.hi	23ad0 <printf_parse@@Base+0x92d4>  // b.pmore
   23ab8:	mov	w0, #0x1                   	// #1
   23abc:	ldr	x2, [x20, #168]
   23ac0:	lsl	w0, w0, w25
   23ac4:	sxtw	x0, w0
   23ac8:	orr	x0, x2, x0
   23acc:	str	x0, [x20, #168]
   23ad0:	mov	x0, x20
   23ad4:	mov	w3, #0x11                  	// #17
   23ad8:	mov	x2, #0x0                   	// #0
   23adc:	bl	1daf4 <printf_parse@@Base+0x32f8>
   23ae0:	mov	x27, x0
   23ae4:	cbnz	x0, 23b04 <printf_parse@@Base+0x9308>
   23ae8:	mov	w0, #0xc                   	// #12
   23aec:	str	w0, [x22]
   23af0:	ldr	w0, [x22]
   23af4:	cbz	w0, 23910 <printf_parse@@Base+0x9114>
   23af8:	cbnz	x27, 23910 <printf_parse@@Base+0x9114>
   23afc:	mov	x27, #0x0                   	// #0
   23b00:	b	24330 <printf_parse@@Base+0x9b34>
   23b04:	str	x25, [x0, #40]
   23b08:	b	23af0 <printf_parse@@Base+0x92f4>
   23b0c:	mov	x1, #0x1                   	// #1
   23b10:	mov	x0, #0x20                  	// #32
   23b14:	str	xzr, [sp, #200]
   23b18:	bl	ace0 <calloc@plt>
   23b1c:	mov	x1, #0x1                   	// #1
   23b20:	mov	x25, x0
   23b24:	mov	x0, #0x50                  	// #80
   23b28:	bl	ace0 <calloc@plt>
   23b2c:	cmp	x25, #0x0
   23b30:	mov	x24, x0
   23b34:	cset	w0, eq  // eq = none
   23b38:	cmp	x24, #0x0
   23b3c:	csinc	w0, w0, wzr, ne  // ne = any
   23b40:	cbz	w0, 23b5c <printf_parse@@Base+0x9360>
   23b44:	mov	x0, x25
   23b48:	bl	b050 <free@plt>
   23b4c:	mov	x0, x24
   23b50:	bl	b050 <free@plt>
   23b54:	mov	w0, #0xc                   	// #12
   23b58:	b	23aa0 <printf_parse@@Base+0x92a4>
   23b5c:	mov	x2, x23
   23b60:	mov	x1, x21
   23b64:	mov	x0, x19
   23b68:	bl	1b3f4 <printf_parse@@Base+0xbf8>
   23b6c:	str	w0, [sp, #104]
   23b70:	ldrb	w0, [x19, #8]
   23b74:	cmp	w0, #0x2
   23b78:	b.ne	23b88 <printf_parse@@Base+0x938c>  // b.any
   23b7c:	mov	w0, #0x2                   	// #2
   23b80:	str	w0, [x22]
   23b84:	b	23d04 <printf_parse@@Base+0x9508>
   23b88:	cmp	w0, #0x19
   23b8c:	b.ne	23c88 <printf_parse@@Base+0x948c>  // b.any
   23b90:	ldrb	w0, [x24, #32]
   23b94:	orr	w0, w0, #0x1
   23b98:	strb	w0, [x24, #32]
   23b9c:	tbz	w23, #8, 23bac <printf_parse@@Base+0x93b0>
   23ba0:	mov	x0, x25
   23ba4:	mov	x1, #0xa                   	// #10
   23ba8:	bl	1b234 <printf_parse@@Base+0xa38>
   23bac:	ldr	x0, [x21, #72]
   23bb0:	mov	x2, x23
   23bb4:	ldr	w1, [sp, #104]
   23bb8:	add	x0, x0, w1, sxtw
   23bbc:	str	x0, [x21, #72]
   23bc0:	mov	x1, x21
   23bc4:	mov	x0, x19
   23bc8:	bl	1b3f4 <printf_parse@@Base+0xbf8>
   23bcc:	str	w0, [sp, #104]
   23bd0:	ldrb	w0, [x19, #8]
   23bd4:	cmp	w0, #0x2
   23bd8:	b.eq	23b7c <printf_parse@@Base+0x9380>  // b.none
   23bdc:	mov	w0, #0x1                   	// #1
   23be0:	str	w0, [sp, #184]
   23be4:	ldrb	w0, [x19, #8]
   23be8:	cmp	w0, #0x15
   23bec:	b.ne	23bf8 <printf_parse@@Base+0x93fc>  // b.any
   23bf0:	mov	w0, #0x1                   	// #1
   23bf4:	strb	w0, [x19, #8]
   23bf8:	add	x0, sp, #0x100
   23bfc:	str	x0, [sp, #136]
   23c00:	add	x0, sp, #0xd0
   23c04:	str	x0, [sp, #144]
   23c08:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   23c0c:	add	x0, x0, #0x320
   23c10:	mov	w5, #0x1                   	// #1
   23c14:	stp	xzr, xzr, [sp, #112]
   23c18:	str	x0, [sp, #152]
   23c1c:	add	x0, sp, #0xc8
   23c20:	str	x0, [sp, #160]
   23c24:	ldr	x0, [sp, #136]
   23c28:	str	x0, [sp, #216]
   23c2c:	ldr	w3, [sp, #104]
   23c30:	mov	w13, #0x3                   	// #3
   23c34:	ldr	x0, [sp, #144]
   23c38:	mov	x4, x23
   23c3c:	mov	x2, x19
   23c40:	mov	x1, x21
   23c44:	str	w13, [sp, #208]
   23c48:	bl	1efa8 <printf_parse@@Base+0x47ac>
   23c4c:	cbnz	w0, 23b80 <printf_parse@@Base+0x9384>
   23c50:	mov	x2, x23
   23c54:	mov	x1, x21
   23c58:	mov	x0, x19
   23c5c:	bl	1b3f4 <printf_parse@@Base+0xbf8>
   23c60:	str	w0, [sp, #104]
   23c64:	ldr	w0, [sp, #208]
   23c68:	cmp	w0, #0x4
   23c6c:	ccmp	w0, #0x2, #0x4, ne  // ne = any
   23c70:	b.eq	23d34 <printf_parse@@Base+0x9538>  // b.none
   23c74:	ldrb	w0, [x19, #8]
   23c78:	cmp	w0, #0x2
   23c7c:	b.ne	23c90 <printf_parse@@Base+0x9494>  // b.any
   23c80:	mov	w0, #0x7                   	// #7
   23c84:	b	23b80 <printf_parse@@Base+0x9384>
   23c88:	str	wzr, [sp, #184]
   23c8c:	b	23be4 <printf_parse@@Base+0x93e8>
   23c90:	cmp	w0, #0x16
   23c94:	b.ne	23d34 <printf_parse@@Base+0x9538>  // b.any
   23c98:	ldr	x0, [x21, #72]
   23c9c:	add	x7, sp, #0xf0
   23ca0:	ldr	w1, [sp, #104]
   23ca4:	mov	x2, x23
   23ca8:	add	x0, x0, w1, sxtw
   23cac:	str	x0, [x21, #72]
   23cb0:	mov	x1, x21
   23cb4:	mov	x0, x7
   23cb8:	bl	1b3f4 <printf_parse@@Base+0xbf8>
   23cbc:	mov	w3, w0
   23cc0:	ldrb	w0, [sp, #248]
   23cc4:	cmp	w0, #0x2
   23cc8:	b.eq	23c80 <printf_parse@@Base+0x9484>  // b.none
   23ccc:	cmp	w0, #0x15
   23cd0:	b.eq	23d18 <printf_parse@@Base+0x951c>  // b.none
   23cd4:	add	x0, sp, #0x120
   23cd8:	mov	x4, x23
   23cdc:	mov	x2, x7
   23ce0:	mov	x1, x21
   23ce4:	mov	w5, #0x1                   	// #1
   23ce8:	str	w13, [sp, #224]
   23cec:	str	x0, [sp, #232]
   23cf0:	add	x0, sp, #0xe0
   23cf4:	bl	1efa8 <printf_parse@@Base+0x47ac>
   23cf8:	mov	w27, w0
   23cfc:	cbz	w0, 23d54 <printf_parse@@Base+0x9558>
   23d00:	str	w0, [x22]
   23d04:	mov	x0, x25
   23d08:	bl	b050 <free@plt>
   23d0c:	mov	x0, x24
   23d10:	bl	1c4a8 <printf_parse@@Base+0x1cac>
   23d14:	b	23aa4 <printf_parse@@Base+0x92a8>
   23d18:	ldr	w0, [sp, #104]
   23d1c:	ldr	x1, [x21, #72]
   23d20:	neg	w0, w0
   23d24:	add	x0, x1, w0, sxtw
   23d28:	str	x0, [x21, #72]
   23d2c:	mov	w0, #0x1                   	// #1
   23d30:	strb	w0, [x19, #8]
   23d34:	ldr	w0, [sp, #208]
   23d38:	cmp	w0, #0x4
   23d3c:	b.hi	24064 <printf_parse@@Base+0x9868>  // b.pmore
   23d40:	ldr	x1, [sp, #152]
   23d44:	ldrh	w0, [x1, w0, uxtw #1]
   23d48:	adr	x1, 23d54 <printf_parse@@Base+0x9558>
   23d4c:	add	x0, x1, w0, sxth #2
   23d50:	br	x0
   23d54:	mov	x1, x21
   23d58:	mov	x2, x23
   23d5c:	mov	x0, x19
   23d60:	bl	1b3f4 <printf_parse@@Base+0xbf8>
   23d64:	str	w0, [sp, #104]
   23d68:	ldr	w0, [x20, #180]
   23d6c:	ldr	w1, [sp, #208]
   23d70:	cmp	w0, #0x2
   23d74:	csel	x26, x24, xzr, ge  // ge = tcont
   23d78:	cmp	w1, #0x2
   23d7c:	ccmp	w1, #0x4, #0x4, ne  // ne = any
   23d80:	b.eq	23fa8 <printf_parse@@Base+0x97ac>  // b.none
   23d84:	ldr	w4, [sp, #224]
   23d88:	cmp	w4, #0x2
   23d8c:	b.eq	23fa8 <printf_parse@@Base+0x97ac>  // b.none
   23d90:	cmp	w4, #0x4
   23d94:	b.eq	23fa8 <printf_parse@@Base+0x97ac>  // b.none
   23d98:	cmp	w1, #0x3
   23d9c:	cset	w0, eq  // eq = none
   23da0:	str	w0, [sp, #128]
   23da4:	b.ne	23dd0 <printf_parse@@Base+0x95d4>  // b.any
   23da8:	ldr	x0, [sp, #216]
   23dac:	str	w1, [sp, #168]
   23db0:	str	w4, [sp, #176]
   23db4:	bl	a780 <strlen@plt>
   23db8:	cmp	x0, #0x1
   23dbc:	ldr	w1, [sp, #168]
   23dc0:	ldr	w4, [sp, #176]
   23dc4:	b.ls	247d0 <printf_parse@@Base+0x9fd4>  // b.plast
   23dc8:	mov	w27, #0x3                   	// #3
   23dcc:	b	23ee4 <printf_parse@@Base+0x96e8>
   23dd0:	cmp	w4, #0x3
   23dd4:	b.ne	247dc <printf_parse@@Base+0x9fe0>  // b.any
   23dd8:	ldr	x0, [sp, #232]
   23ddc:	str	w1, [sp, #168]
   23de0:	str	w4, [sp, #176]
   23de4:	bl	a780 <strlen@plt>
   23de8:	cmp	x0, #0x1
   23dec:	b.hi	23dc8 <printf_parse@@Base+0x95cc>  // b.pmore
   23df0:	ldr	w1, [sp, #168]
   23df4:	ldr	w4, [sp, #176]
   23df8:	cbnz	w1, 23f08 <printf_parse@@Base+0x970c>
   23dfc:	ldrb	w28, [sp, #216]
   23e00:	cbnz	w4, 23f2c <printf_parse@@Base+0x9730>
   23e04:	ldrb	w4, [sp, #232]
   23e08:	ldr	w0, [sp, #128]
   23e0c:	cmp	w1, #0x0
   23e10:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   23e14:	b.eq	23f3c <printf_parse@@Base+0x9740>  // b.none
   23e18:	cbz	x26, 23e30 <printf_parse@@Base+0x9634>
   23e1c:	mov	w0, w28
   23e20:	str	w4, [sp, #128]
   23e24:	bl	ae80 <btowc@plt>
   23e28:	mov	w28, w0
   23e2c:	ldr	w4, [sp, #128]
   23e30:	ldr	w0, [sp, #224]
   23e34:	cmp	w0, #0x0
   23e38:	ccmp	w0, #0x3, #0x4, ne  // ne = any
   23e3c:	b.ne	23f44 <printf_parse@@Base+0x9748>  // b.any
   23e40:	cbz	x26, 23e50 <printf_parse@@Base+0x9654>
   23e44:	mov	w0, w4
   23e48:	bl	ae80 <btowc@plt>
   23e4c:	mov	w4, w0
   23e50:	cmn	w28, #0x1
   23e54:	ccmn	w4, #0x1, #0x4, ne  // ne = any
   23e58:	b.eq	23dc8 <printf_parse@@Base+0x95cc>  // b.none
   23e5c:	tbz	w23, #16, 23e68 <printf_parse@@Base+0x966c>
   23e60:	cmp	w28, w4
   23e64:	b.hi	23fa8 <printf_parse@@Base+0x97ac>  // b.pmore
   23e68:	cbz	x26, 23f74 <printf_parse@@Base+0x9778>
   23e6c:	ldr	x0, [x26, #64]
   23e70:	ldr	x1, [sp, #120]
   23e74:	cmp	x0, x1
   23e78:	b.ne	23f54 <printf_parse@@Base+0x9758>  // b.any
   23e7c:	lsl	x6, x1, #1
   23e80:	str	w4, [sp, #188]
   23e84:	ldr	x0, [x26, #8]
   23e88:	add	x6, x6, #0x1
   23e8c:	lsl	x1, x6, #2
   23e90:	stp	x1, x6, [sp, #168]
   23e94:	bl	ad60 <realloc@plt>
   23e98:	mov	x5, x0
   23e9c:	str	x5, [sp, #128]
   23ea0:	ldr	x0, [x26, #16]
   23ea4:	ldr	x1, [sp, #168]
   23ea8:	bl	ad60 <realloc@plt>
   23eac:	mov	x1, x0
   23eb0:	ldr	x5, [sp, #128]
   23eb4:	ldr	w4, [sp, #188]
   23eb8:	cmp	x5, #0x0
   23ebc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   23ec0:	ldr	x6, [sp, #176]
   23ec4:	b.ne	23f4c <printf_parse@@Base+0x9750>  // b.any
   23ec8:	mov	x0, x5
   23ecc:	str	x1, [sp, #128]
   23ed0:	bl	b050 <free@plt>
   23ed4:	mov	w27, #0xc                   	// #12
   23ed8:	ldr	x1, [sp, #128]
   23edc:	mov	x0, x1
   23ee0:	bl	b050 <free@plt>
   23ee4:	str	w27, [x22]
   23ee8:	cbnz	w27, 23d04 <printf_parse@@Base+0x9508>
   23eec:	ldrb	w0, [x19, #8]
   23ef0:	cmp	w0, #0x2
   23ef4:	b.eq	23c80 <printf_parse@@Base+0x9484>  // b.none
   23ef8:	cmp	w0, #0x15
   23efc:	b.eq	24088 <printf_parse@@Base+0x988c>  // b.none
   23f00:	mov	w5, #0x0                   	// #0
   23f04:	b	23c24 <printf_parse@@Base+0x9428>
   23f08:	cmp	w1, #0x3
   23f0c:	b.ne	23f1c <printf_parse@@Base+0x9720>  // b.any
   23f10:	ldr	x0, [sp, #216]
   23f14:	ldrb	w28, [x0]
   23f18:	b	23e00 <printf_parse@@Base+0x9604>
   23f1c:	mov	w28, #0x0                   	// #0
   23f20:	ldr	x0, [sp, #232]
   23f24:	ldrb	w4, [x0]
   23f28:	b	23e08 <printf_parse@@Base+0x960c>
   23f2c:	cmp	w4, #0x3
   23f30:	b.eq	23f20 <printf_parse@@Base+0x9724>  // b.none
   23f34:	mov	w4, #0x0                   	// #0
   23f38:	b	23e08 <printf_parse@@Base+0x960c>
   23f3c:	ldr	w28, [sp, #216]
   23f40:	b	23e30 <printf_parse@@Base+0x9634>
   23f44:	ldr	w4, [sp, #232]
   23f48:	b	23e50 <printf_parse@@Base+0x9654>
   23f4c:	stp	x5, x0, [x26, #8]
   23f50:	str	x6, [sp, #120]
   23f54:	ldr	x0, [x26, #64]
   23f58:	ldr	x5, [x26, #8]
   23f5c:	lsl	x1, x0, #2
   23f60:	add	x0, x0, #0x1
   23f64:	str	w28, [x5, x1]
   23f68:	ldr	x5, [x26, #16]
   23f6c:	str	x0, [x26, #64]
   23f70:	str	w4, [x5, x1]
   23f74:	mov	x5, #0x0                   	// #0
   23f78:	cmp	w5, w28
   23f7c:	ccmp	w5, w4, #0x2, cs  // cs = hs, nlast
   23f80:	b.hi	23f98 <printf_parse@@Base+0x979c>  // b.pmore
   23f84:	mov	x1, x5
   23f88:	mov	x0, x25
   23f8c:	str	w4, [sp, #128]
   23f90:	bl	1b234 <printf_parse@@Base+0xa38>
   23f94:	ldr	w4, [sp, #128]
   23f98:	add	x5, x5, #0x1
   23f9c:	cmp	x5, #0x100
   23fa0:	b.ne	23f78 <printf_parse@@Base+0x977c>  // b.any
   23fa4:	b	23ee4 <printf_parse@@Base+0x96e8>
   23fa8:	mov	w27, #0xb                   	// #11
   23fac:	b	23ee4 <printf_parse@@Base+0x96e8>
   23fb0:	ldrb	w1, [sp, #216]
   23fb4:	mov	x0, x25
   23fb8:	bl	1b234 <printf_parse@@Base+0xa38>
   23fbc:	b	23eec <printf_parse@@Base+0x96f0>
   23fc0:	ldr	x0, [x24, #40]
   23fc4:	ldr	x1, [sp, #112]
   23fc8:	cmp	x0, x1
   23fcc:	b.ne	23ff0 <printf_parse@@Base+0x97f4>  // b.any
   23fd0:	lsl	x28, x1, #1
   23fd4:	add	x0, x28, #0x1
   23fd8:	str	x0, [sp, #112]
   23fdc:	lsl	x1, x0, #2
   23fe0:	ldr	x0, [x24]
   23fe4:	bl	ad60 <realloc@plt>
   23fe8:	cbz	x0, 247c8 <printf_parse@@Base+0x9fcc>
   23fec:	str	x0, [x24]
   23ff0:	ldr	x0, [x24, #40]
   23ff4:	ldr	x1, [x24]
   23ff8:	add	x2, x0, #0x1
   23ffc:	str	x2, [x24, #40]
   24000:	ldr	w2, [sp, #216]
   24004:	str	w2, [x1, x0, lsl #2]
   24008:	b	23eec <printf_parse@@Base+0x96f0>
   2400c:	ldr	x27, [sp, #216]
   24010:	mov	x0, x27
   24014:	bl	a780 <strlen@plt>
   24018:	cmp	x0, #0x1
   2401c:	b.eq	24028 <printf_parse@@Base+0x982c>  // b.none
   24020:	mov	w0, #0x3                   	// #3
   24024:	b	23b80 <printf_parse@@Base+0x9384>
   24028:	ldrb	w1, [x27]
   2402c:	mov	x0, x25
   24030:	bl	1b234 <printf_parse@@Base+0xa38>
   24034:	str	wzr, [x22]
   24038:	b	23eec <printf_parse@@Base+0x96f0>
   2403c:	ldr	x0, [x21, #120]
   24040:	mov	x5, x23
   24044:	ldr	x3, [sp, #160]
   24048:	mov	x2, x24
   2404c:	ldr	x4, [sp, #216]
   24050:	mov	x1, x25
   24054:	bl	1cc0c <printf_parse@@Base+0x2410>
   24058:	str	w0, [x22]
   2405c:	cbz	w0, 23eec <printf_parse@@Base+0x96f0>
   24060:	b	23d04 <printf_parse@@Base+0x9508>
   24064:	adrp	x3, 29000 <vasnprintf@@Base+0x3170>
   24068:	add	x3, x3, #0x338
   2406c:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   24070:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   24074:	add	x3, x3, #0x4d
   24078:	add	x1, x1, #0x168
   2407c:	add	x0, x0, #0x212
   24080:	mov	w2, #0xced                 	// #3309
   24084:	bl	b530 <__assert_fail@plt>
   24088:	ldr	x0, [x21, #72]
   2408c:	ldr	w1, [sp, #104]
   24090:	add	x0, x0, w1, sxtw
   24094:	str	x0, [x21, #72]
   24098:	ldr	w0, [sp, #184]
   2409c:	cbz	w0, 240a8 <printf_parse@@Base+0x98ac>
   240a0:	mov	x0, x25
   240a4:	bl	1b254 <printf_parse@@Base+0xa58>
   240a8:	ldr	w0, [x20, #180]
   240ac:	cmp	w0, #0x1
   240b0:	b.le	240c0 <printf_parse@@Base+0x98c4>
   240b4:	ldr	x1, [x20, #120]
   240b8:	mov	x0, x25
   240bc:	bl	1b298 <printf_parse@@Base+0xa9c>
   240c0:	ldr	x0, [x24, #40]
   240c4:	add	x26, sp, #0x120
   240c8:	cbnz	x0, 24100 <printf_parse@@Base+0x9904>
   240cc:	ldr	x0, [x24, #48]
   240d0:	cbnz	x0, 24100 <printf_parse@@Base+0x9904>
   240d4:	ldr	x0, [x24, #56]
   240d8:	cbnz	x0, 24100 <printf_parse@@Base+0x9904>
   240dc:	ldr	x0, [x24, #64]
   240e0:	cbnz	x0, 24100 <printf_parse@@Base+0x9904>
   240e4:	ldr	w0, [x20, #180]
   240e8:	cmp	w0, #0x1
   240ec:	b.le	24158 <printf_parse@@Base+0x995c>
   240f0:	ldr	x0, [x24, #72]
   240f4:	cbnz	x0, 24100 <printf_parse@@Base+0x9904>
   240f8:	ldrb	w0, [x24, #32]
   240fc:	tbz	w0, #0, 24158 <printf_parse@@Base+0x995c>
   24100:	ldrb	w0, [x20, #176]
   24104:	mov	x3, x26
   24108:	mov	x2, #0x0                   	// #0
   2410c:	mov	x1, #0x0                   	// #0
   24110:	orr	w0, w0, #0x2
   24114:	strb	w0, [x20, #176]
   24118:	mov	w0, #0x6                   	// #6
   2411c:	str	x24, [sp, #288]
   24120:	strb	w0, [sp, #296]
   24124:	mov	x0, x20
   24128:	bl	1d990 <printf_parse@@Base+0x3194>
   2412c:	mov	x27, x0
   24130:	mov	x0, #0x0                   	// #0
   24134:	cbz	x27, 247c8 <printf_parse@@Base+0x9fcc>
   24138:	ldr	x1, [x25, x0, lsl #3]
   2413c:	cbnz	x1, 24788 <printf_parse@@Base+0x9f8c>
   24140:	add	x0, x0, #0x1
   24144:	cmp	x0, #0x4
   24148:	b.ne	24138 <printf_parse@@Base+0x993c>  // b.any
   2414c:	mov	x0, x25
   24150:	bl	b050 <free@plt>
   24154:	b	23af0 <printf_parse@@Base+0x92f4>
   24158:	mov	x0, x24
   2415c:	bl	1c4a8 <printf_parse@@Base+0x1cac>
   24160:	mov	w0, #0x3                   	// #3
   24164:	mov	x3, x26
   24168:	mov	x2, #0x0                   	// #0
   2416c:	mov	x1, #0x0                   	// #0
   24170:	str	x25, [sp, #288]
   24174:	strb	w0, [sp, #296]
   24178:	mov	x0, x20
   2417c:	bl	1d990 <printf_parse@@Base+0x3194>
   24180:	b	247c0 <printf_parse@@Base+0x9fc4>
   24184:	ldr	x1, [x19]
   24188:	mov	w0, #0x1                   	// #1
   2418c:	lsl	w0, w0, w1
   24190:	ldr	x1, [x20, #168]
   24194:	sxtw	x0, w0
   24198:	tst	x0, x1
   2419c:	b.ne	241a8 <printf_parse@@Base+0x99ac>  // b.any
   241a0:	mov	w0, #0x6                   	// #6
   241a4:	b	238fc <printf_parse@@Base+0x9100>
   241a8:	ldr	x1, [x20, #160]
   241ac:	mov	x3, x19
   241b0:	mov	x2, #0x0                   	// #0
   241b4:	orr	x0, x1, x0
   241b8:	str	x0, [x20, #160]
   241bc:	mov	x1, #0x0                   	// #0
   241c0:	mov	x0, x20
   241c4:	bl	1d990 <printf_parse@@Base+0x3194>
   241c8:	mov	x27, x0
   241cc:	cbz	x0, 238f8 <printf_parse@@Base+0x90fc>
   241d0:	ldr	x0, [x20, #152]
   241d4:	add	x0, x0, #0x1
   241d8:	str	x0, [x20, #152]
   241dc:	ldrb	w0, [x20, #176]
   241e0:	orr	w0, w0, #0x2
   241e4:	strb	w0, [x20, #176]
   241e8:	b	23910 <printf_parse@@Base+0x9114>
   241ec:	cbz	x27, 241f8 <printf_parse@@Base+0x99fc>
   241f0:	mov	w0, #0xd                   	// #13
   241f4:	b	238fc <printf_parse@@Base+0x9100>
   241f8:	cbnz	x28, 241f0 <printf_parse@@Base+0x99f4>
   241fc:	str	x3, [sp, #104]
   24200:	cbz	x3, 2421c <printf_parse@@Base+0x9a20>
   24204:	mov	x2, x23
   24208:	mov	x1, x21
   2420c:	mov	x0, x19
   24210:	bl	1f750 <printf_parse@@Base+0x4f54>
   24214:	ldr	x3, [sp, #104]
   24218:	b	238b8 <printf_parse@@Base+0x90bc>
   2421c:	cmp	w0, #0x9
   24220:	b.ne	24230 <printf_parse@@Base+0x9a34>  // b.any
   24224:	tbnz	w23, #17, 24230 <printf_parse@@Base+0x9a34>
   24228:	mov	w0, #0x10                  	// #16
   2422c:	b	238fc <printf_parse@@Base+0x9100>
   24230:	mov	w0, #0x1                   	// #1
   24234:	strb	w0, [x19, #8]
   24238:	mov	x3, x19
   2423c:	mov	x0, x20
   24240:	mov	x2, #0x0                   	// #0
   24244:	mov	x1, #0x0                   	// #0
   24248:	bl	1d990 <printf_parse@@Base+0x3194>
   2424c:	mov	x27, x0
   24250:	cbnz	x0, 23910 <printf_parse@@Base+0x9114>
   24254:	b	238f8 <printf_parse@@Base+0x90fc>
   24258:	ldr	w1, [x19]
   2425c:	mov	w0, #0x30f                 	// #783
   24260:	tst	w1, w0
   24264:	b.eq	2429c <printf_parse@@Base+0x9aa0>  // b.none
   24268:	ldrb	w0, [x20, #176]
   2426c:	tbnz	w0, #4, 2429c <printf_parse@@Base+0x9aa0>
   24270:	orr	w0, w0, #0x10
   24274:	strb	w0, [x20, #176]
   24278:	mov	w1, w0
   2427c:	tbnz	w0, #3, 2439c <printf_parse@@Base+0x9ba0>
   24280:	mov	x0, #0x3ff000000000000     	// #287948901175001088
   24284:	str	x0, [x20, #184]
   24288:	mov	x0, #0x7fffffe07fffffe     	// #576460743847706622
   2428c:	movk	x0, #0x87ff, lsl #16
   24290:	str	x0, [x20, #192]
   24294:	tbz	w1, #2, 243c0 <printf_parse@@Base+0x9bc4>
   24298:	stp	xzr, xzr, [x20, #200]
   2429c:	ldr	w0, [x19]
   242a0:	mov	w1, #0x200                 	// #512
   242a4:	cmp	w0, #0x100
   242a8:	ccmp	w0, w1, #0x4, ne  // ne = any
   242ac:	b.ne	243f4 <printf_parse@@Base+0x9bf8>  // b.any
   242b0:	cmp	w0, #0x100
   242b4:	b.ne	243cc <printf_parse@@Base+0x9bd0>  // b.any
   242b8:	mov	w0, #0x6                   	// #6
   242bc:	str	w0, [x19]
   242c0:	mov	x3, x19
   242c4:	mov	x0, x20
   242c8:	mov	x2, #0x0                   	// #0
   242cc:	mov	x1, #0x0                   	// #0
   242d0:	bl	1d990 <printf_parse@@Base+0x3194>
   242d4:	mov	x24, x0
   242d8:	mov	w0, #0x9                   	// #9
   242dc:	str	w0, [x19]
   242e0:	mov	x3, x19
   242e4:	mov	x2, #0x0                   	// #0
   242e8:	mov	x1, #0x0                   	// #0
   242ec:	mov	x0, x20
   242f0:	bl	1d990 <printf_parse@@Base+0x3194>
   242f4:	mov	x1, x24
   242f8:	mov	x25, x0
   242fc:	mov	x2, x0
   24300:	mov	w3, #0xa                   	// #10
   24304:	mov	x0, x20
   24308:	bl	1daf4 <printf_parse@@Base+0x32f8>
   2430c:	cmp	x24, #0x0
   24310:	mov	x27, x0
   24314:	ccmp	x25, #0x0, #0x4, ne  // ne = any
   24318:	b.eq	238f8 <printf_parse@@Base+0x90fc>  // b.none
   2431c:	cbz	x27, 238f8 <printf_parse@@Base+0x90fc>
   24320:	mov	x2, x23
   24324:	mov	x1, x21
   24328:	mov	x0, x19
   2432c:	bl	1f750 <printf_parse@@Base+0x4f54>
   24330:	mov	x0, x27
   24334:	ldp	x19, x20, [sp, #16]
   24338:	ldp	x21, x22, [sp, #32]
   2433c:	ldp	x23, x24, [sp, #48]
   24340:	ldp	x25, x26, [sp, #64]
   24344:	ldp	x27, x28, [sp, #80]
   24348:	ldp	x29, x30, [sp], #320
   2434c:	ret
   24350:	ldrh	w4, [x7, x3, lsl #1]
   24354:	tbnz	w4, #3, 24360 <printf_parse@@Base+0x9b64>
   24358:	cmp	w3, #0x5f
   2435c:	b.ne	24370 <printf_parse@@Base+0x9b74>  // b.any
   24360:	ldr	x5, [x6, x0, lsl #3]
   24364:	lsl	x4, x8, x2
   24368:	orr	x4, x5, x4
   2436c:	str	x4, [x6, x0, lsl #3]
   24370:	add	w2, w2, #0x1
   24374:	add	x3, x3, #0x1
   24378:	cmp	w2, #0x40
   2437c:	b.ne	24350 <printf_parse@@Base+0x9b54>  // b.any
   24380:	add	x0, x0, #0x1
   24384:	add	x1, x1, #0x40
   24388:	cmp	w0, #0x3
   2438c:	b.gt	2429c <printf_parse@@Base+0x9aa0>
   24390:	mov	x3, x1
   24394:	mov	w2, #0x0                   	// #0
   24398:	b	24350 <printf_parse@@Base+0x9b54>
   2439c:	mov	w25, #0x0                   	// #0
   243a0:	mov	w24, #0x0                   	// #0
   243a4:	bl	afc0 <__ctype_b_loc@plt>
   243a8:	sxtw	x1, w25
   243ac:	add	x6, x20, #0xb8
   243b0:	mov	x8, #0x1                   	// #1
   243b4:	ldr	x7, [x0]
   243b8:	sxtw	x0, w24
   243bc:	b	24390 <printf_parse@@Base+0x9b94>
   243c0:	mov	w25, #0x80                  	// #128
   243c4:	mov	w24, #0x2                   	// #2
   243c8:	b	243a4 <printf_parse@@Base+0x9ba8>
   243cc:	mov	w0, #0x5                   	// #5
   243d0:	str	w0, [x19]
   243d4:	mov	x3, x19
   243d8:	mov	x0, x20
   243dc:	mov	x2, #0x0                   	// #0
   243e0:	mov	x1, #0x0                   	// #0
   243e4:	bl	1d990 <printf_parse@@Base+0x3194>
   243e8:	mov	x24, x0
   243ec:	mov	w0, #0xa                   	// #10
   243f0:	b	242dc <printf_parse@@Base+0x9ae0>
   243f4:	mov	x3, x19
   243f8:	mov	x0, x20
   243fc:	mov	x2, #0x0                   	// #0
   24400:	mov	x1, #0x0                   	// #0
   24404:	bl	1d990 <printf_parse@@Base+0x3194>
   24408:	mov	x27, x0
   2440c:	b	2431c <printf_parse@@Base+0x9b20>
   24410:	mov	x3, x19
   24414:	mov	x0, x20
   24418:	mov	x2, #0x0                   	// #0
   2441c:	mov	x1, #0x0                   	// #0
   24420:	bl	1d990 <printf_parse@@Base+0x3194>
   24424:	mov	x27, x0
   24428:	cbz	x0, 238f8 <printf_parse@@Base+0x90fc>
   2442c:	ldr	w0, [x20, #180]
   24430:	cmp	w0, #0x1
   24434:	b.gt	241dc <printf_parse@@Base+0x99e0>
   24438:	b	23910 <printf_parse@@Base+0x9114>
   2443c:	cmp	w0, #0x21
   24440:	adrp	x3, 27000 <vasnprintf@@Base+0x1170>
   24444:	adrp	x2, 29000 <vasnprintf@@Base+0x3170>
   24448:	mov	x5, x22
   2444c:	cset	w4, eq  // eq = none
   24450:	add	x3, x3, #0x236
   24454:	add	x2, x2, #0x1d0
   24458:	ldr	x1, [x21, #120]
   2445c:	mov	x0, x20
   24460:	bl	1dcb8 <printf_parse@@Base+0x34bc>
   24464:	mov	x27, x0
   24468:	b	23af0 <printf_parse@@Base+0x92f4>
   2446c:	cmp	w0, #0x23
   24470:	adrp	x3, 29000 <vasnprintf@@Base+0x3170>
   24474:	adrp	x2, 29000 <vasnprintf@@Base+0x3170>
   24478:	mov	x5, x22
   2447c:	cset	w4, eq  // eq = none
   24480:	add	x3, x3, #0x66
   24484:	add	x2, x2, #0x1dc
   24488:	b	24458 <printf_parse@@Base+0x9c5c>
   2448c:	mov	w0, #0x5                   	// #5
   24490:	b	238fc <printf_parse@@Base+0x9100>
   24494:	cmn	x0, #0x2
   24498:	b.ne	244a8 <printf_parse@@Base+0x9cac>  // b.any
   2449c:	mov	x26, #0x0                   	// #0
   244a0:	b	244e4 <printf_parse@@Base+0x9ce8>
   244a4:	mov	x5, #0x0                   	// #0
   244a8:	ldrb	w0, [x19, #8]
   244ac:	cmp	w0, #0x18
   244b0:	b.eq	24508 <printf_parse@@Base+0x9d0c>  // b.none
   244b4:	cmp	w0, #0x1
   244b8:	b.ne	24510 <printf_parse@@Base+0x9d14>  // b.any
   244bc:	ldrb	w0, [x19]
   244c0:	cmp	w0, #0x2c
   244c4:	b.ne	24510 <printf_parse@@Base+0x9d14>  // b.any
   244c8:	mov	x2, x23
   244cc:	mov	x1, x19
   244d0:	mov	x0, x21
   244d4:	str	x5, [sp, #120]
   244d8:	bl	1f77c <printf_parse@@Base+0x4f80>
   244dc:	mov	x26, x0
   244e0:	ldr	x5, [sp, #120]
   244e4:	cmn	x5, #0x2
   244e8:	ccmn	x26, #0x2, #0x4, ne  // ne = any
   244ec:	b.ne	24554 <printf_parse@@Base+0x9d58>  // b.any
   244f0:	tbnz	w23, #21, 24518 <printf_parse@@Base+0x9d1c>
   244f4:	ldrb	w0, [x19, #8]
   244f8:	cmp	w0, #0x2
   244fc:	b.ne	239a4 <printf_parse@@Base+0x91a8>  // b.any
   24500:	mov	w0, #0x9                   	// #9
   24504:	b	239a8 <printf_parse@@Base+0x91ac>
   24508:	mov	x26, x5
   2450c:	b	244e4 <printf_parse@@Base+0x9ce8>
   24510:	mov	x26, #0xfffffffffffffffe    	// #-2
   24514:	b	244e4 <printf_parse@@Base+0x9ce8>
   24518:	str	x28, [x21, #72]
   2451c:	mov	w0, #0x1                   	// #1
   24520:	stp	x24, x25, [x19]
   24524:	mov	x24, x27
   24528:	strb	w0, [x19, #8]
   2452c:	ldr	w0, [x22]
   24530:	cbz	w0, 24750 <printf_parse@@Base+0x9f54>
   24534:	cbnz	x24, 24750 <printf_parse@@Base+0x9f54>
   24538:	cbz	x27, 23afc <printf_parse@@Base+0x9300>
   2453c:	mov	x0, x27
   24540:	mov	x2, #0x0                   	// #0
   24544:	adrp	x1, 1c000 <printf_parse@@Base+0x1804>
   24548:	add	x1, x1, #0x518
   2454c:	bl	1b8dc <printf_parse@@Base+0x10e0>
   24550:	b	23afc <printf_parse@@Base+0x9300>
   24554:	cmp	x5, x26
   24558:	ccmn	x26, #0x1, #0x4, gt
   2455c:	b.ne	239a4 <printf_parse@@Base+0x91a8>  // b.any
   24560:	ldrb	w0, [x19, #8]
   24564:	cmp	w0, #0x18
   24568:	b.ne	239a4 <printf_parse@@Base+0x91a8>  // b.any
   2456c:	cmn	x26, #0x1
   24570:	mov	x0, #0x7fff                	// #32767
   24574:	b.ne	2458c <printf_parse@@Base+0x9d90>  // b.any
   24578:	cmp	x5, x0
   2457c:	cset	x0, gt
   24580:	cbz	x0, 245a0 <printf_parse@@Base+0x9da4>
   24584:	mov	w0, #0xf                   	// #15
   24588:	b	239a8 <printf_parse@@Base+0x91ac>
   2458c:	cmp	x26, x0
   24590:	b	2457c <printf_parse@@Base+0x9d80>
   24594:	cmp	w1, #0x13
   24598:	mov	x6, #0xffffffffffffffff    	// #-1
   2459c:	cneg	x26, x6, eq  // eq = none
   245a0:	mov	x2, x23
   245a4:	mov	x1, x21
   245a8:	mov	x0, x19
   245ac:	str	x5, [sp, #120]
   245b0:	bl	1f750 <printf_parse@@Base+0x4f54>
   245b4:	cbz	x27, 245d4 <printf_parse@@Base+0x9dd8>
   245b8:	ldr	x5, [sp, #120]
   245bc:	orr	x0, x5, x26
   245c0:	cbnz	x0, 245dc <printf_parse@@Base+0x9de0>
   245c4:	ldr	x1, [sp, #112]
   245c8:	mov	x0, x27
   245cc:	mov	x2, #0x0                   	// #0
   245d0:	bl	1b8dc <printf_parse@@Base+0x10e0>
   245d4:	mov	x24, #0x0                   	// #0
   245d8:	b	2452c <printf_parse@@Base+0x9d30>
   245dc:	cmp	x5, #0x0
   245e0:	b.gt	246dc <printf_parse@@Base+0x9ee0>
   245e4:	mov	x28, x27
   245e8:	mov	x25, #0x0                   	// #0
   245ec:	ldrb	w0, [x28, #48]
   245f0:	cmp	w0, #0x11
   245f4:	b.ne	24610 <printf_parse@@Base+0x9e14>  // b.any
   245f8:	ldr	x2, [x28, #40]
   245fc:	mov	x0, x28
   24600:	ldr	x1, [sp, #104]
   24604:	str	x5, [sp, #120]
   24608:	bl	1b8dc <printf_parse@@Base+0x10e0>
   2460c:	ldr	x5, [sp, #120]
   24610:	cmn	x26, #0x1
   24614:	cset	w3, eq  // eq = none
   24618:	mov	x1, x28
   2461c:	add	w3, w3, #0xa
   24620:	mov	x0, x20
   24624:	mov	x2, #0x0                   	// #0
   24628:	str	x5, [sp, #120]
   2462c:	bl	1daf4 <printf_parse@@Base+0x32f8>
   24630:	mov	x24, x0
   24634:	cbz	x0, 24748 <printf_parse@@Base+0x9f4c>
   24638:	ldr	x5, [sp, #120]
   2463c:	add	x4, x5, #0x2
   24640:	cmp	x26, x4
   24644:	b.ge	246ec <printf_parse@@Base+0x9ef0>  // b.tcont
   24648:	cbz	x25, 2452c <printf_parse@@Base+0x9d30>
   2464c:	mov	x2, x24
   24650:	mov	x1, x25
   24654:	mov	x0, x20
   24658:	mov	w3, #0x10                  	// #16
   2465c:	bl	1daf4 <printf_parse@@Base+0x32f8>
   24660:	mov	x24, x0
   24664:	b	2452c <printf_parse@@Base+0x9d30>
   24668:	mov	x1, x20
   2466c:	mov	x0, x25
   24670:	str	x5, [sp, #120]
   24674:	bl	1da4c <printf_parse@@Base+0x3250>
   24678:	mov	x1, x24
   2467c:	mov	x25, x0
   24680:	mov	x2, x0
   24684:	mov	w3, #0x10                  	// #16
   24688:	mov	x0, x20
   2468c:	bl	1daf4 <printf_parse@@Base+0x32f8>
   24690:	cmp	x25, #0x0
   24694:	mov	x24, x0
   24698:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   2469c:	b.eq	24748 <printf_parse@@Base+0x9f4c>  // b.none
   246a0:	ldr	x5, [sp, #120]
   246a4:	add	x28, x28, #0x1
   246a8:	cmp	x5, x28
   246ac:	b.ge	24668 <printf_parse@@Base+0x9e6c>  // b.tcont
   246b0:	str	x5, [sp, #120]
   246b4:	cmp	x5, x26
   246b8:	b.eq	2452c <printf_parse@@Base+0x9d30>  // b.none
   246bc:	mov	x1, x20
   246c0:	mov	x0, x25
   246c4:	bl	1da4c <printf_parse@@Base+0x3250>
   246c8:	mov	x28, x0
   246cc:	cbz	x0, 24748 <printf_parse@@Base+0x9f4c>
   246d0:	mov	x25, x24
   246d4:	ldr	x5, [sp, #120]
   246d8:	b	245ec <printf_parse@@Base+0x9df0>
   246dc:	mov	x24, x27
   246e0:	mov	x25, x27
   246e4:	mov	x28, #0x2                   	// #2
   246e8:	b	246a8 <printf_parse@@Base+0x9eac>
   246ec:	mov	x1, x20
   246f0:	mov	x0, x28
   246f4:	str	x4, [sp, #120]
   246f8:	bl	1da4c <printf_parse@@Base+0x3250>
   246fc:	mov	x1, x24
   24700:	mov	x28, x0
   24704:	mov	x2, x0
   24708:	mov	w3, #0x10                  	// #16
   2470c:	mov	x0, x20
   24710:	bl	1daf4 <printf_parse@@Base+0x32f8>
   24714:	cmp	x28, #0x0
   24718:	mov	x1, x0
   2471c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   24720:	b.eq	24748 <printf_parse@@Base+0x9f4c>  // b.none
   24724:	mov	x0, x20
   24728:	mov	w3, #0xa                   	// #10
   2472c:	mov	x2, #0x0                   	// #0
   24730:	bl	1daf4 <printf_parse@@Base+0x32f8>
   24734:	mov	x24, x0
   24738:	cbz	x0, 24748 <printf_parse@@Base+0x9f4c>
   2473c:	ldr	x4, [sp, #120]
   24740:	add	x4, x4, #0x1
   24744:	b	24640 <printf_parse@@Base+0x9e44>
   24748:	mov	w0, #0xc                   	// #12
   2474c:	b	239a8 <printf_parse@@Base+0x91ac>
   24750:	tbz	w23, #24, 24780 <printf_parse@@Base+0x9f84>
   24754:	ldrb	w0, [x19, #8]
   24758:	cmp	w0, #0xb
   2475c:	ccmp	w0, #0x17, #0x4, ne  // ne = any
   24760:	b.ne	24780 <printf_parse@@Base+0x9f84>  // b.any
   24764:	cbz	x24, 241f0 <printf_parse@@Base+0x99f4>
   24768:	mov	x0, x24
   2476c:	mov	x2, #0x0                   	// #0
   24770:	adrp	x1, 1c000 <printf_parse@@Base+0x1804>
   24774:	add	x1, x1, #0x518
   24778:	bl	1b8dc <printf_parse@@Base+0x10e0>
   2477c:	b	241f0 <printf_parse@@Base+0x99f4>
   24780:	mov	x27, x24
   24784:	b	23938 <printf_parse@@Base+0x913c>
   24788:	mov	w0, #0x3                   	// #3
   2478c:	mov	x1, #0x0                   	// #0
   24790:	mov	x3, x26
   24794:	mov	x2, #0x0                   	// #0
   24798:	str	x25, [sp, #288]
   2479c:	strb	w0, [sp, #296]
   247a0:	mov	x0, x20
   247a4:	bl	1d990 <printf_parse@@Base+0x3194>
   247a8:	mov	x1, x0
   247ac:	cbz	x0, 247c8 <printf_parse@@Base+0x9fcc>
   247b0:	mov	x2, x27
   247b4:	mov	x0, x20
   247b8:	mov	w3, #0xa                   	// #10
   247bc:	bl	1daf4 <printf_parse@@Base+0x32f8>
   247c0:	mov	x27, x0
   247c4:	cbnz	x0, 23af0 <printf_parse@@Base+0x92f4>
   247c8:	mov	w0, #0xc                   	// #12
   247cc:	b	23b80 <printf_parse@@Base+0x9384>
   247d0:	cmp	w4, #0x3
   247d4:	b.ne	23f10 <printf_parse@@Base+0x9714>  // b.any
   247d8:	b	23dd8 <printf_parse@@Base+0x95dc>
   247dc:	cbz	w1, 23dfc <printf_parse@@Base+0x9600>
   247e0:	mov	w28, #0x0                   	// #0
   247e4:	b	23e00 <printf_parse@@Base+0x9604>
   247e8:	stp	x29, x30, [sp, #-96]!
   247ec:	mov	x29, sp
   247f0:	stp	x21, x22, [sp, #32]
   247f4:	mov	x21, x5
   247f8:	mov	x22, x1
   247fc:	stp	x19, x20, [sp, #16]
   24800:	stp	x23, x24, [sp, #48]
   24804:	mov	x23, x2
   24808:	mov	x24, x4
   2480c:	stp	x25, x26, [sp, #64]
   24810:	mov	x25, x0
   24814:	mov	x26, x3
   24818:	str	x27, [sp, #80]
   2481c:	ldr	x27, [x1]
   24820:	bl	23870 <printf_parse@@Base+0x9074>
   24824:	mov	x19, x0
   24828:	ldr	w0, [x21]
   2482c:	cbz	w0, 248b8 <printf_parse@@Base+0xa0bc>
   24830:	cbnz	x19, 248b8 <printf_parse@@Base+0xa0bc>
   24834:	mov	x19, #0x0                   	// #0
   24838:	mov	x0, x19
   2483c:	ldp	x19, x20, [sp, #16]
   24840:	ldp	x21, x22, [sp, #32]
   24844:	ldp	x23, x24, [sp, #48]
   24848:	ldp	x25, x26, [sp, #64]
   2484c:	ldr	x27, [sp, #80]
   24850:	ldp	x29, x30, [sp], #96
   24854:	ret
   24858:	cmp	x19, #0x0
   2485c:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   24860:	b.eq	248b0 <printf_parse@@Base+0xa0b4>  // b.none
   24864:	mov	x2, x20
   24868:	mov	x1, x19
   2486c:	mov	x0, x27
   24870:	mov	w3, #0x10                  	// #16
   24874:	bl	1daf4 <printf_parse@@Base+0x32f8>
   24878:	cbnz	x0, 2491c <printf_parse@@Base+0xa120>
   2487c:	adrp	x22, 1c000 <printf_parse@@Base+0x1804>
   24880:	add	x22, x22, #0x518
   24884:	mov	x1, x22
   24888:	mov	x2, #0x0                   	// #0
   2488c:	mov	x0, x20
   24890:	bl	1b8dc <printf_parse@@Base+0x10e0>
   24894:	mov	x1, x22
   24898:	mov	x0, x19
   2489c:	mov	x2, #0x0                   	// #0
   248a0:	bl	1b8dc <printf_parse@@Base+0x10e0>
   248a4:	mov	w0, #0xc                   	// #12
   248a8:	str	w0, [x21]
   248ac:	b	24834 <printf_parse@@Base+0xa038>
   248b0:	cmp	x19, #0x0
   248b4:	csel	x19, x19, x20, ne  // ne = any
   248b8:	ldrb	w0, [x23, #8]
   248bc:	and	w1, w0, #0xfffffff7
   248c0:	cmp	w1, #0x2
   248c4:	b.eq	24838 <printf_parse@@Base+0xa03c>  // b.none
   248c8:	cbz	x24, 248d4 <printf_parse@@Base+0xa0d8>
   248cc:	cmp	w0, #0x9
   248d0:	b.eq	24838 <printf_parse@@Base+0xa03c>  // b.none
   248d4:	mov	x5, x21
   248d8:	mov	x4, x24
   248dc:	mov	x3, x26
   248e0:	mov	x2, x23
   248e4:	mov	x1, x22
   248e8:	mov	x0, x25
   248ec:	bl	23870 <printf_parse@@Base+0x9074>
   248f0:	mov	x20, x0
   248f4:	ldr	w0, [x21]
   248f8:	cbz	w0, 24858 <printf_parse@@Base+0xa05c>
   248fc:	cbnz	x20, 24858 <printf_parse@@Base+0xa05c>
   24900:	cbz	x19, 24834 <printf_parse@@Base+0xa038>
   24904:	mov	x0, x19
   24908:	mov	x2, #0x0                   	// #0
   2490c:	adrp	x1, 1c000 <printf_parse@@Base+0x1804>
   24910:	add	x1, x1, #0x518
   24914:	bl	1b8dc <printf_parse@@Base+0x10e0>
   24918:	b	24834 <printf_parse@@Base+0xa038>
   2491c:	mov	x19, x0
   24920:	b	248b8 <printf_parse@@Base+0xa0bc>
   24924:	stp	x29, x30, [sp, #-112]!
   24928:	mov	x29, sp
   2492c:	stp	x21, x22, [sp, #32]
   24930:	mov	x22, x5
   24934:	ldr	x21, [x1]
   24938:	stp	x19, x20, [sp, #16]
   2493c:	mov	x20, x2
   24940:	stp	x23, x24, [sp, #48]
   24944:	mov	x23, x0
   24948:	mov	x24, x1
   2494c:	stp	x25, x26, [sp, #64]
   24950:	mov	x25, x3
   24954:	mov	x26, x4
   24958:	stp	x27, x28, [sp, #80]
   2495c:	ldr	x27, [x21, #168]
   24960:	bl	247e8 <printf_parse@@Base+0x9fec>
   24964:	mov	x19, x0
   24968:	ldr	w0, [x22]
   2496c:	cbz	w0, 249d0 <printf_parse@@Base+0xa1d4>
   24970:	cbnz	x19, 249d0 <printf_parse@@Base+0xa1d4>
   24974:	mov	x19, #0x0                   	// #0
   24978:	mov	x0, x19
   2497c:	ldp	x19, x20, [sp, #16]
   24980:	ldp	x21, x22, [sp, #32]
   24984:	ldp	x23, x24, [sp, #48]
   24988:	ldp	x25, x26, [sp, #64]
   2498c:	ldp	x27, x28, [sp, #80]
   24990:	ldp	x29, x30, [sp], #112
   24994:	ret
   24998:	ldr	x0, [x21, #168]
   2499c:	orr	x0, x0, x6
   249a0:	str	x0, [x21, #168]
   249a4:	mov	x1, x19
   249a8:	mov	x0, x21
   249ac:	mov	w3, #0xa                   	// #10
   249b0:	bl	1daf4 <printf_parse@@Base+0x32f8>
   249b4:	mov	x19, x0
   249b8:	cbnz	x0, 249d4 <printf_parse@@Base+0xa1d8>
   249bc:	mov	w0, #0xc                   	// #12
   249c0:	str	w0, [x22]
   249c4:	b	24978 <printf_parse@@Base+0xa17c>
   249c8:	mov	x2, #0x0                   	// #0
   249cc:	b	249a4 <printf_parse@@Base+0xa1a8>
   249d0:	orr	x28, x25, #0x800000
   249d4:	ldrb	w0, [x20, #8]
   249d8:	cmp	w0, #0xa
   249dc:	b.ne	24978 <printf_parse@@Base+0xa17c>  // b.any
   249e0:	mov	x1, x23
   249e4:	mov	x0, x20
   249e8:	mov	x2, x28
   249ec:	bl	1f750 <printf_parse@@Base+0x4f54>
   249f0:	ldrb	w0, [x20, #8]
   249f4:	and	w1, w0, #0xfffffff7
   249f8:	cmp	w1, #0x2
   249fc:	b.eq	249c8 <printf_parse@@Base+0xa1cc>  // b.none
   24a00:	cbz	x26, 24a0c <printf_parse@@Base+0xa210>
   24a04:	cmp	w0, #0x9
   24a08:	b.eq	249c8 <printf_parse@@Base+0xa1cc>  // b.none
   24a0c:	ldr	x6, [x21, #168]
   24a10:	str	x27, [x21, #168]
   24a14:	mov	x2, x20
   24a18:	mov	x5, x22
   24a1c:	mov	x4, x26
   24a20:	mov	x3, x25
   24a24:	mov	x1, x24
   24a28:	mov	x0, x23
   24a2c:	str	x6, [sp, #104]
   24a30:	bl	247e8 <printf_parse@@Base+0x9fec>
   24a34:	mov	x2, x0
   24a38:	ldr	w0, [x22]
   24a3c:	ldr	x6, [sp, #104]
   24a40:	cbz	w0, 24998 <printf_parse@@Base+0xa19c>
   24a44:	cbnz	x2, 24998 <printf_parse@@Base+0xa19c>
   24a48:	cbz	x19, 24974 <printf_parse@@Base+0xa178>
   24a4c:	mov	x0, x19
   24a50:	adrp	x1, 1c000 <printf_parse@@Base+0x1804>
   24a54:	add	x1, x1, #0x518
   24a58:	bl	1b8dc <printf_parse@@Base+0x10e0>
   24a5c:	b	24974 <printf_parse@@Base+0xa178>
   24a60:	stp	x29, x30, [sp, #-320]!
   24a64:	mov	x29, sp
   24a68:	stp	x19, x20, [sp, #16]
   24a6c:	mov	x20, x0
   24a70:	stp	x21, x22, [sp, #32]
   24a74:	mov	x21, x2
   24a78:	mov	x22, x3
   24a7c:	stp	x23, x24, [sp, #48]
   24a80:	stp	x25, x26, [sp, #64]
   24a84:	mov	x26, x1
   24a88:	mov	w1, #0xffffff90            	// #-112
   24a8c:	stp	x27, x28, [sp, #80]
   24a90:	str	xzr, [x0, #16]
   24a94:	str	x3, [x0, #24]
   24a98:	str	xzr, [x0, #48]
   24a9c:	ldr	x19, [x0]
   24aa0:	str	wzr, [sp, #136]
   24aa4:	ldrb	w0, [x0, #56]
   24aa8:	and	w0, w0, w1
   24aac:	strb	w0, [x20, #56]
   24ab0:	ldr	x0, [x20, #8]
   24ab4:	cmp	x0, #0x117
   24ab8:	b.hi	24ad8 <printf_parse@@Base+0xa2dc>  // b.pmore
   24abc:	mov	x0, x19
   24ac0:	mov	x1, #0x118                 	// #280
   24ac4:	bl	ad60 <realloc@plt>
   24ac8:	mov	x19, x0
   24acc:	cbz	x0, 254fc <printf_parse@@Base+0xad00>
   24ad0:	mov	x0, #0x118                 	// #280
   24ad4:	stp	x19, x0, [x20]
   24ad8:	mov	x2, #0x118                 	// #280
   24adc:	str	x2, [x20, #16]
   24ae0:	mov	x0, x19
   24ae4:	mov	w1, #0x0                   	// #0
   24ae8:	bl	ac10 <memset@plt>
   24aec:	mov	w0, #0xf                   	// #15
   24af0:	str	w0, [x19, #128]
   24af4:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   24af8:	movk	x0, #0x555, lsl #48
   24afc:	cmp	x21, x0
   24b00:	b.cs	24bf8 <printf_parse@@Base+0xa3fc>  // b.hs, b.nlast
   24b04:	add	x28, x21, #0x1
   24b08:	str	x28, [x19, #8]
   24b0c:	mov	x23, #0x1                   	// #1
   24b10:	lsl	x0, x28, #4
   24b14:	bl	aab0 <malloc@plt>
   24b18:	str	x0, [x19]
   24b1c:	cmp	x21, x23
   24b20:	b.cc	24b2c <printf_parse@@Base+0xa330>  // b.lo, b.ul, b.last
   24b24:	lsl	x23, x23, #1
   24b28:	b	24b1c <printf_parse@@Base+0xa320>
   24b2c:	mov	x1, x23
   24b30:	mov	x0, #0x18                  	// #24
   24b34:	sub	x23, x23, #0x1
   24b38:	bl	ace0 <calloc@plt>
   24b3c:	str	x0, [x19, #64]
   24b40:	str	x23, [x19, #136]
   24b44:	bl	b080 <__ctype_get_mb_cur_max@plt>
   24b48:	str	w0, [x19, #180]
   24b4c:	mov	w0, #0xe                   	// #14
   24b50:	bl	aa80 <nl_langinfo@plt>
   24b54:	ldrb	w1, [x0]
   24b58:	and	w1, w1, #0xffffffdf
   24b5c:	and	w1, w1, #0xff
   24b60:	cmp	w1, #0x55
   24b64:	b.ne	24bc0 <printf_parse@@Base+0xa3c4>  // b.any
   24b68:	ldrb	w1, [x0, #1]
   24b6c:	and	w1, w1, #0xffffffdf
   24b70:	and	w1, w1, #0xff
   24b74:	cmp	w1, #0x54
   24b78:	b.ne	24bc0 <printf_parse@@Base+0xa3c4>  // b.any
   24b7c:	ldrb	w1, [x0, #2]
   24b80:	and	w1, w1, #0xffffffdf
   24b84:	and	w1, w1, #0xff
   24b88:	cmp	w1, #0x46
   24b8c:	b.ne	24bc0 <printf_parse@@Base+0xa3c4>  // b.any
   24b90:	ldrb	w1, [x0, #3]
   24b94:	cmp	w1, #0x2d
   24b98:	adrp	x1, 26000 <vasnprintf@@Base+0x170>
   24b9c:	cset	x2, eq  // eq = none
   24ba0:	add	x1, x1, #0xed9
   24ba4:	add	x2, x2, #0x3
   24ba8:	add	x0, x0, x2
   24bac:	bl	afa0 <strcmp@plt>
   24bb0:	cbnz	w0, 24bc0 <printf_parse@@Base+0xa3c4>
   24bb4:	ldrb	w0, [x19, #176]
   24bb8:	orr	w0, w0, #0x4
   24bbc:	strb	w0, [x19, #176]
   24bc0:	ldrb	w0, [x19, #176]
   24bc4:	and	w1, w0, #0xfffffff7
   24bc8:	strb	w1, [x19, #176]
   24bcc:	ldr	w1, [x19, #180]
   24bd0:	cmp	w1, #0x1
   24bd4:	b.le	24be8 <printf_parse@@Base+0xa3ec>
   24bd8:	tbz	w0, #2, 24c10 <printf_parse@@Base+0xa414>
   24bdc:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   24be0:	add	x0, x0, #0x338
   24be4:	str	x0, [x19, #120]
   24be8:	ldr	x0, [x19]
   24bec:	cbz	x0, 24bf8 <printf_parse@@Base+0xa3fc>
   24bf0:	ldr	x0, [x19, #64]
   24bf4:	cbnz	x0, 24c98 <printf_parse@@Base+0xa49c>
   24bf8:	mov	w0, #0xc                   	// #12
   24bfc:	str	w0, [sp, #136]
   24c00:	mov	x0, x19
   24c04:	bl	1c814 <printf_parse@@Base+0x2018>
   24c08:	stp	xzr, xzr, [x20]
   24c0c:	b	25314 <printf_parse@@Base+0xab18>
   24c10:	mov	x1, #0x1                   	// #1
   24c14:	mov	x0, #0x20                  	// #32
   24c18:	bl	ace0 <calloc@plt>
   24c1c:	str	x0, [x19, #120]
   24c20:	cbz	x0, 24bf8 <printf_parse@@Base+0xa3fc>
   24c24:	mov	x25, #0x0                   	// #0
   24c28:	mov	w24, #0x0                   	// #0
   24c2c:	mov	w23, #0x0                   	// #0
   24c30:	add	w27, w24, w23
   24c34:	mov	w0, w27
   24c38:	bl	ae80 <btowc@plt>
   24c3c:	mov	x4, #0x1                   	// #1
   24c40:	cmn	w0, #0x1
   24c44:	b.eq	24c5c <printf_parse@@Base+0xa460>  // b.none
   24c48:	ldr	x3, [x19, #120]
   24c4c:	lsl	x1, x4, x23
   24c50:	ldr	x2, [x3, x25]
   24c54:	orr	x1, x2, x1
   24c58:	str	x1, [x3, x25]
   24c5c:	tst	w27, #0xffffff80
   24c60:	b.ne	24c78 <printf_parse@@Base+0xa47c>  // b.any
   24c64:	cmp	w0, w27
   24c68:	b.eq	24c78 <printf_parse@@Base+0xa47c>  // b.none
   24c6c:	ldrb	w0, [x19, #176]
   24c70:	orr	w0, w0, #0x8
   24c74:	strb	w0, [x19, #176]
   24c78:	add	w23, w23, #0x1
   24c7c:	cmp	w23, #0x40
   24c80:	b.ne	24c30 <printf_parse@@Base+0xa434>  // b.any
   24c84:	add	w24, w24, #0x40
   24c88:	add	x25, x25, #0x8
   24c8c:	cmp	w24, #0x100
   24c90:	b.ne	24c2c <printf_parse@@Base+0xa430>  // b.any
   24c94:	b	24be8 <printf_parse@@Base+0xa3ec>
   24c98:	adrp	x24, 40000 <vasnprintf@@Base+0x1a170>
   24c9c:	str	x24, [sp, #96]
   24ca0:	str	wzr, [sp, #136]
   24ca4:	ldr	x0, [x24, #4040]
   24ca8:	cbnz	x0, 24cb8 <printf_parse@@Base+0xa4bc>
   24cac:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   24cb0:	ldr	x0, [x0, #3944]
   24cb4:	cbz	x0, 24cd0 <printf_parse@@Base+0xa4d4>
   24cb8:	add	x0, x19, #0xe8
   24cbc:	mov	x1, #0x0                   	// #0
   24cc0:	bl	adc0 <pthread_mutex_init@plt>
   24cc4:	cbnz	w0, 24bf8 <printf_parse@@Base+0xa3fc>
   24cc8:	ldr	w0, [sp, #136]
   24ccc:	cbnz	w0, 24c00 <printf_parse@@Base+0xa404>
   24cd0:	ldr	x24, [x20, #40]
   24cd4:	add	x23, sp, #0xa8
   24cd8:	and	x25, x22, #0x400000
   24cdc:	mov	w1, #0x0                   	// #0
   24ce0:	add	x0, x23, #0x8
   24ce4:	mov	x2, #0x90                  	// #144
   24ce8:	bl	ac10 <memset@plt>
   24cec:	orr	x27, x24, x25
   24cf0:	cmp	x25, #0x0
   24cf4:	str	x26, [sp, #168]
   24cf8:	cset	w0, ne  // ne = any
   24cfc:	cmp	x27, #0x0
   24d00:	strb	w0, [sp, #304]
   24d04:	cset	w0, ne  // ne = any
   24d08:	strb	w0, [sp, #307]
   24d0c:	ldr	w0, [x19, #180]
   24d10:	str	w0, [sp, #312]
   24d14:	ldrb	w0, [x19, #176]
   24d18:	stp	x21, x21, [sp, #248]
   24d1c:	ubfx	x1, x0, #2, #1
   24d20:	ubfx	x0, x0, #3, #1
   24d24:	stp	x21, x21, [sp, #264]
   24d28:	str	x24, [sp, #288]
   24d2c:	strb	w1, [sp, #305]
   24d30:	strb	w0, [sp, #306]
   24d34:	cbnz	x21, 24d98 <printf_parse@@Base+0xa59c>
   24d38:	ldrb	w0, [sp, #307]
   24d3c:	cbnz	w0, 24e00 <printf_parse@@Base+0xa604>
   24d40:	ldr	w0, [x19, #180]
   24d44:	str	x26, [sp, #176]
   24d48:	cmp	w0, #0x1
   24d4c:	cbz	x25, 24eb8 <printf_parse@@Base+0xa6bc>
   24d50:	b.le	24e08 <printf_parse@@Base+0xa60c>
   24d54:	mov	x0, x23
   24d58:	bl	1bdb8 <printf_parse@@Base+0x15bc>
   24d5c:	cbnz	w0, 24da8 <printf_parse@@Base+0xa5ac>
   24d60:	ldr	x1, [sp, #224]
   24d64:	cmp	x21, x1
   24d68:	b.le	24da8 <printf_parse@@Base+0xa5ac>
   24d6c:	ldr	x3, [sp, #216]
   24d70:	ldrsw	x2, [x19, #180]
   24d74:	ldr	x1, [sp, #232]
   24d78:	add	x2, x2, x3
   24d7c:	cmp	x1, x2
   24d80:	b.gt	24da8 <printf_parse@@Base+0xa5ac>
   24d84:	lsl	x1, x1, #1
   24d88:	mov	x0, x23
   24d8c:	bl	1b9bc <printf_parse@@Base+0x11c0>
   24d90:	cbz	w0, 24d54 <printf_parse@@Base+0xa558>
   24d94:	b	24da8 <printf_parse@@Base+0xa5ac>
   24d98:	mov	x1, x28
   24d9c:	mov	x0, x23
   24da0:	bl	1b9bc <printf_parse@@Base+0x11c0>
   24da4:	cbz	w0, 24d38 <printf_parse@@Base+0xa53c>
   24da8:	str	w0, [sp, #136]
   24dac:	cbz	w0, 24e14 <printf_parse@@Base+0xa618>
   24db0:	ldr	x21, [x20]
   24db4:	ldr	x0, [x21, #112]
   24db8:	cbnz	x0, 24ee4 <printf_parse@@Base+0xa6e8>
   24dbc:	mov	w0, #0xf                   	// #15
   24dc0:	str	w0, [x21, #128]
   24dc4:	ldr	x0, [x21, #32]
   24dc8:	stp	xzr, xzr, [x21, #104]
   24dcc:	bl	b050 <free@plt>
   24dd0:	str	xzr, [x21, #32]
   24dd4:	mov	x0, x23
   24dd8:	bl	1c7d0 <printf_parse@@Base+0x1fd4>
   24ddc:	ldr	x0, [sp, #96]
   24de0:	ldr	x24, [x0, #4040]
   24de4:	cbnz	x24, 24df4 <printf_parse@@Base+0xa5f8>
   24de8:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   24dec:	ldr	x0, [x0, #3944]
   24df0:	cbz	x0, 24c00 <printf_parse@@Base+0xa404>
   24df4:	add	x0, x19, #0xe8
   24df8:	bl	b250 <pthread_mutex_destroy@plt>
   24dfc:	b	24c00 <printf_parse@@Base+0xa404>
   24e00:	ldr	x26, [sp, #176]
   24e04:	b	24d40 <printf_parse@@Base+0xa544>
   24e08:	mov	x0, x23
   24e0c:	bl	1c2b4 <printf_parse@@Base+0x1ab8>
   24e10:	str	wzr, [sp, #136]
   24e14:	ldr	x27, [x20]
   24e18:	str	xzr, [x20, #48]
   24e1c:	add	x26, sp, #0x90
   24e20:	orr	x2, x22, #0x800000
   24e24:	mov	x1, x23
   24e28:	mov	x0, x26
   24e2c:	str	x22, [x27, #216]
   24e30:	bl	1f750 <printf_parse@@Base+0x4f54>
   24e34:	mov	x3, x22
   24e38:	add	x5, sp, #0x88
   24e3c:	mov	x2, x26
   24e40:	mov	x1, x20
   24e44:	mov	x0, x23
   24e48:	mov	x4, #0x0                   	// #0
   24e4c:	bl	24924 <printf_parse@@Base+0xa128>
   24e50:	mov	x22, x0
   24e54:	ldr	w0, [sp, #136]
   24e58:	cbz	w0, 24e60 <printf_parse@@Base+0xa664>
   24e5c:	cbz	x22, 24eb0 <printf_parse@@Base+0xa6b4>
   24e60:	mov	x0, x27
   24e64:	mov	w3, #0x2                   	// #2
   24e68:	mov	x2, #0x0                   	// #0
   24e6c:	mov	x1, #0x0                   	// #0
   24e70:	bl	1daf4 <printf_parse@@Base+0x32f8>
   24e74:	mov	x21, x0
   24e78:	cbz	x22, 24e90 <printf_parse@@Base+0xa694>
   24e7c:	mov	x2, x0
   24e80:	mov	x1, x22
   24e84:	mov	x0, x27
   24e88:	mov	w3, #0x10                  	// #16
   24e8c:	bl	1daf4 <printf_parse@@Base+0x32f8>
   24e90:	cmp	x21, #0x0
   24e94:	cset	w27, eq  // eq = none
   24e98:	cmp	x0, #0x0
   24e9c:	csinc	w27, w27, wzr, ne  // ne = any
   24ea0:	ldr	x21, [x20]
   24ea4:	cbz	w27, 24ef4 <printf_parse@@Base+0xa6f8>
   24ea8:	mov	w0, #0xc                   	// #12
   24eac:	str	w0, [sp, #136]
   24eb0:	str	xzr, [x19, #104]
   24eb4:	b	24db0 <printf_parse@@Base+0xa5b4>
   24eb8:	b.le	24ec8 <printf_parse@@Base+0xa6cc>
   24ebc:	mov	x0, x23
   24ec0:	bl	1bc3c <printf_parse@@Base+0x1440>
   24ec4:	b	24e10 <printf_parse@@Base+0xa614>
   24ec8:	cbz	x27, 24ed8 <printf_parse@@Base+0xa6dc>
   24ecc:	mov	x0, x23
   24ed0:	bl	1b2e0 <printf_parse@@Base+0xae4>
   24ed4:	b	24e10 <printf_parse@@Base+0xa614>
   24ed8:	ldr	x0, [sp, #232]
   24edc:	stp	x0, x0, [sp, #216]
   24ee0:	b	24e10 <printf_parse@@Base+0xa614>
   24ee4:	ldr	x22, [x0]
   24ee8:	bl	b050 <free@plt>
   24eec:	mov	x0, x22
   24ef0:	b	24db8 <printf_parse@@Base+0xa5bc>
   24ef4:	ldr	x22, [x21, #8]
   24ef8:	str	x0, [x19, #104]
   24efc:	lsl	x28, x22, #3
   24f00:	mov	x0, x28
   24f04:	bl	aab0 <malloc@plt>
   24f08:	mov	x3, x0
   24f0c:	str	x3, [x21, #24]
   24f10:	mov	x0, x28
   24f14:	str	x3, [sp, #104]
   24f18:	bl	aab0 <malloc@plt>
   24f1c:	mov	x24, x0
   24f20:	mov	x0, #0x18                  	// #24
   24f24:	str	x24, [x21, #32]
   24f28:	mul	x22, x22, x0
   24f2c:	mov	x0, x22
   24f30:	bl	aab0 <malloc@plt>
   24f34:	mov	x28, x0
   24f38:	str	x28, [x21, #40]
   24f3c:	mov	x0, x22
   24f40:	bl	aab0 <malloc@plt>
   24f44:	str	x0, [x21, #48]
   24f48:	ldr	x3, [sp, #104]
   24f4c:	cbnz	x3, 24f5c <printf_parse@@Base+0xa760>
   24f50:	mov	w0, #0xc                   	// #12
   24f54:	str	w0, [sp, #136]
   24f58:	b	24db0 <printf_parse@@Base+0xa5b4>
   24f5c:	cbz	x24, 24f50 <printf_parse@@Base+0xa754>
   24f60:	cbz	x28, 24f50 <printf_parse@@Base+0xa754>
   24f64:	cbz	x0, 24f50 <printf_parse@@Base+0xa754>
   24f68:	ldr	x22, [x20, #48]
   24f6c:	lsl	x0, x22, #3
   24f70:	bl	aab0 <malloc@plt>
   24f74:	str	x0, [x21, #224]
   24f78:	cbz	x0, 24fb8 <printf_parse@@Base+0xa7bc>
   24f7c:	mov	x1, #0x0                   	// #0
   24f80:	cmp	x1, x22
   24f84:	b.ne	25090 <printf_parse@@Base+0xa894>  // b.any
   24f88:	ldr	x0, [x21, #104]
   24f8c:	mov	x2, x21
   24f90:	adrp	x1, 1d000 <printf_parse@@Base+0x2804>
   24f94:	add	x1, x1, #0x8a4
   24f98:	bl	1b948 <printf_parse@@Base+0x114c>
   24f9c:	ldr	x1, [x20, #48]
   24fa0:	mov	x0, #0x0                   	// #0
   24fa4:	cmp	x0, x1
   24fa8:	b.ne	2509c <printf_parse@@Base+0xa8a0>  // b.any
   24fac:	ldr	x0, [x21, #224]
   24fb0:	bl	b050 <free@plt>
   24fb4:	str	xzr, [x21, #224]
   24fb8:	ldr	x0, [x21, #104]
   24fbc:	mov	x2, x20
   24fc0:	adrp	x1, 1d000 <printf_parse@@Base+0x2804>
   24fc4:	add	x1, x1, #0xc38
   24fc8:	bl	1b8dc <printf_parse@@Base+0x10e0>
   24fcc:	mov	w22, w0
   24fd0:	cbnz	w0, 25084 <printf_parse@@Base+0xa888>
   24fd4:	ldr	x0, [x21, #104]
   24fd8:	mov	x2, x21
   24fdc:	adrp	x1, 1e000 <printf_parse@@Base+0x3804>
   24fe0:	add	x1, x1, #0xdec
   24fe4:	bl	1b8dc <printf_parse@@Base+0x10e0>
   24fe8:	mov	w22, w0
   24fec:	cbnz	w0, 25084 <printf_parse@@Base+0xa888>
   24ff0:	ldr	x0, [x21, #104]
   24ff4:	mov	x2, x21
   24ff8:	adrp	x1, 1d000 <printf_parse@@Base+0x2804>
   24ffc:	add	x1, x1, #0x940
   25000:	bl	1b948 <printf_parse@@Base+0x114c>
   25004:	ldr	x0, [x21, #104]
   25008:	mov	x2, x21
   2500c:	adrp	x1, 1c000 <printf_parse@@Base+0x1804>
   25010:	add	x1, x1, #0xa1c
   25014:	bl	1b948 <printf_parse@@Base+0x114c>
   25018:	mov	w22, w0
   2501c:	cbnz	w0, 25084 <printf_parse@@Base+0xa888>
   25020:	mov	w4, #0x0                   	// #0
   25024:	mov	x24, #0x0                   	// #0
   25028:	mov	x28, #0x18                  	// #24
   2502c:	ldr	x0, [x21, #16]
   25030:	cmp	x0, x24
   25034:	b.ne	25044 <printf_parse@@Base+0xa848>  // b.any
   25038:	cbz	w4, 250d8 <printf_parse@@Base+0xa8dc>
   2503c:	mov	w4, #0x0                   	// #0
   25040:	mov	x24, #0x0                   	// #0
   25044:	ldr	x0, [x21, #48]
   25048:	mul	x5, x24, x28
   2504c:	str	x5, [sp, #112]
   25050:	add	x0, x0, x5
   25054:	ldr	x0, [x0, #8]
   25058:	cbnz	x0, 250d0 <printf_parse@@Base+0xa8d4>
   2505c:	mov	x2, x24
   25060:	mov	x1, x21
   25064:	mov	x0, x26
   25068:	mov	w3, #0x1                   	// #1
   2506c:	str	w4, [sp, #104]
   25070:	bl	1e4dc <printf_parse@@Base+0x3ce0>
   25074:	ldr	w4, [sp, #104]
   25078:	ldr	x5, [sp, #112]
   2507c:	cbz	w0, 250b4 <printf_parse@@Base+0xa8b8>
   25080:	mov	w22, w0
   25084:	str	w22, [sp, #136]
   25088:	cbz	w22, 250ec <printf_parse@@Base+0xa8f0>
   2508c:	b	24db0 <printf_parse@@Base+0xa5b4>
   25090:	str	x1, [x0, x1, lsl #3]
   25094:	add	x1, x1, #0x1
   25098:	b	24f80 <printf_parse@@Base+0xa784>
   2509c:	ldr	x2, [x21, #224]
   250a0:	ldr	x2, [x2, x0, lsl #3]
   250a4:	cmp	x2, x0
   250a8:	b.ne	24fb8 <printf_parse@@Base+0xa7bc>  // b.any
   250ac:	add	x0, x0, #0x1
   250b0:	b	24fa4 <printf_parse@@Base+0xa7a8>
   250b4:	ldr	x0, [x21, #48]
   250b8:	add	x0, x0, x5
   250bc:	ldr	x0, [x0, #8]
   250c0:	cbnz	x0, 250d0 <printf_parse@@Base+0xa8d4>
   250c4:	ldr	x0, [sp, #160]
   250c8:	bl	b050 <free@plt>
   250cc:	mov	w4, #0x1                   	// #1
   250d0:	add	x24, x24, #0x1
   250d4:	b	2502c <printf_parse@@Base+0xa830>
   250d8:	ldrb	w0, [x20, #56]
   250dc:	tbz	w0, #4, 25160 <printf_parse@@Base+0xa964>
   250e0:	ldr	x0, [x21, #152]
   250e4:	cbnz	x0, 25170 <printf_parse@@Base+0xa974>
   250e8:	str	wzr, [sp, #136]
   250ec:	ldrb	w0, [x19, #176]
   250f0:	tbz	w0, #2, 2527c <printf_parse@@Base+0xaa80>
   250f4:	cbnz	x25, 2527c <printf_parse@@Base+0xaa80>
   250f8:	ldr	x0, [x20, #40]
   250fc:	cbnz	x0, 2527c <printf_parse@@Base+0xaa80>
   25100:	ldr	x6, [x19, #16]
   25104:	adrp	x4, 29000 <vasnprintf@@Base+0x3170>
   25108:	mov	x7, #0x1                   	// #1
   2510c:	mov	w8, #0x10001               	// #65537
   25110:	add	x4, x4, #0x32c
   25114:	mov	w9, w7
   25118:	mov	w1, #0x0                   	// #0
   2511c:	mov	x2, #0x0                   	// #0
   25120:	movk	x8, #0x1, lsl #48
   25124:	cmp	x2, x6
   25128:	b.ne	25230 <printf_parse@@Base+0xaa34>  // b.any
   2512c:	cmp	w27, #0x0
   25130:	ccmp	w1, #0x0, #0x0, eq  // eq = none
   25134:	b.ne	253b0 <printf_parse@@Base+0xabb4>  // b.any
   25138:	ldr	x3, [x19, #152]
   2513c:	mov	w2, #0x1                   	// #1
   25140:	ldrb	w0, [x19, #176]
   25144:	cmp	x3, #0x0
   25148:	str	w2, [x19, #180]
   2514c:	and	w0, w0, #0xfffffffb
   25150:	csel	w1, w1, w2, le
   25154:	bfi	w0, w1, #1, #1
   25158:	strb	w0, [x19, #176]
   2515c:	b	2527c <printf_parse@@Base+0xaa80>
   25160:	ldr	x0, [x20, #48]
   25164:	cbz	x0, 250e0 <printf_parse@@Base+0xa8e4>
   25168:	ldrb	w0, [x21, #176]
   2516c:	tbz	w0, #0, 250e0 <printf_parse@@Base+0xa8e4>
   25170:	mov	x28, #0x18                  	// #24
   25174:	mul	x0, x24, x28
   25178:	bl	aab0 <malloc@plt>
   2517c:	str	x0, [x21, #56]
   25180:	cbz	x0, 24f50 <printf_parse@@Base+0xa754>
   25184:	mov	x0, #0x0                   	// #0
   25188:	ldr	x1, [x21, #16]
   2518c:	cmp	x1, x0
   25190:	b.hi	251d8 <printf_parse@@Base+0xa9dc>  // b.pmore
   25194:	mov	x28, #0x0                   	// #0
   25198:	mov	x3, #0x18                  	// #24
   2519c:	ldr	x0, [x21, #16]
   251a0:	cmp	x0, x28
   251a4:	b.ls	25084 <printf_parse@@Base+0xa888>  // b.plast
   251a8:	ldr	x0, [x21, #48]
   251ac:	mul	x4, x28, x3
   251b0:	mov	x2, #0x0                   	// #0
   251b4:	add	x0, x0, x4
   251b8:	ldr	x5, [x0, #16]
   251bc:	ldr	x0, [x21, #48]
   251c0:	add	x0, x0, x4
   251c4:	ldr	x0, [x0, #8]
   251c8:	cmp	x2, x0
   251cc:	b.lt	251f0 <printf_parse@@Base+0xa9f4>  // b.tstop
   251d0:	add	x28, x28, #0x1
   251d4:	b	2519c <printf_parse@@Base+0xa9a0>
   251d8:	ldr	x1, [x21, #56]
   251dc:	madd	x1, x0, x28, x1
   251e0:	add	x0, x0, #0x1
   251e4:	stp	xzr, xzr, [x1]
   251e8:	str	xzr, [x1, #16]
   251ec:	b	25188 <printf_parse@@Base+0xa98c>
   251f0:	ldr	x6, [x5, x2, lsl #3]
   251f4:	mov	x1, x28
   251f8:	ldr	x0, [x21, #56]
   251fc:	stp	x2, x5, [sp, #104]
   25200:	str	x4, [sp, #120]
   25204:	madd	x0, x6, x3, x0
   25208:	bl	1ba4c <printf_parse@@Base+0x1250>
   2520c:	tst	w0, #0xff
   25210:	b.eq	25228 <printf_parse@@Base+0xaa2c>  // b.none
   25214:	ldp	x2, x5, [sp, #104]
   25218:	mov	x3, #0x18                  	// #24
   2521c:	ldr	x4, [sp, #120]
   25220:	add	x2, x2, #0x1
   25224:	b	251bc <printf_parse@@Base+0xa9c0>
   25228:	mov	w22, #0xc                   	// #12
   2522c:	b	25084 <printf_parse@@Base+0xa888>
   25230:	ldr	x0, [x19]
   25234:	lsl	x5, x2, #4
   25238:	add	x3, x0, x2, lsl #4
   2523c:	ldrb	w3, [x3, #8]
   25240:	sub	w3, w3, #0x1
   25244:	cmp	w3, #0xb
   25248:	b.hi	25360 <printf_parse@@Base+0xab64>  // b.pmore
   2524c:	ldrb	w3, [x4, w3, uxtw]
   25250:	adr	x10, 2525c <printf_parse@@Base+0xaa60>
   25254:	add	x3, x10, w3, sxtb #2
   25258:	br	x3
   2525c:	mov	w1, #0x1                   	// #1
   25260:	add	x2, x2, #0x1
   25264:	b	25124 <printf_parse@@Base+0xa928>
   25268:	ldr	x0, [x0, x5]
   2526c:	ldr	x3, [x0, #16]
   25270:	cbnz	x3, 2527c <printf_parse@@Base+0xaa80>
   25274:	ldr	x0, [x0, #24]
   25278:	cbz	x0, 25260 <printf_parse@@Base+0xaa64>
   2527c:	ldr	x0, [x19, #104]
   25280:	mov	x22, #0x18                  	// #24
   25284:	ldr	x1, [x19, #48]
   25288:	ldr	x0, [x0, #24]
   2528c:	ldr	x0, [x0, #56]
   25290:	str	x0, [x19, #144]
   25294:	madd	x1, x0, x22, x1
   25298:	mov	x0, x26
   2529c:	bl	1e6e0 <printf_parse@@Base+0x3ee4>
   252a0:	str	w0, [sp, #140]
   252a4:	mov	w21, w0
   252a8:	cbnz	w0, 252dc <printf_parse@@Base+0xaae0>
   252ac:	ldr	x0, [x19, #152]
   252b0:	cmp	x0, #0x0
   252b4:	b.gt	25460 <printf_parse@@Base+0xac64>
   252b8:	add	x22, sp, #0x8c
   252bc:	mov	x2, x26
   252c0:	mov	x1, x19
   252c4:	mov	x0, x22
   252c8:	mov	w3, #0x0                   	// #0
   252cc:	bl	1e8ac <printf_parse@@Base+0x40b0>
   252d0:	str	x0, [x19, #72]
   252d4:	cbnz	x0, 25468 <printf_parse@@Base+0xac6c>
   252d8:	ldr	w21, [sp, #140]
   252dc:	str	w21, [sp, #136]
   252e0:	ldr	x21, [x20]
   252e4:	ldr	x0, [x21, #112]
   252e8:	cbnz	x0, 254ec <printf_parse@@Base+0xacf0>
   252ec:	mov	w0, #0xf                   	// #15
   252f0:	str	w0, [x21, #128]
   252f4:	ldr	x0, [x21, #32]
   252f8:	stp	xzr, xzr, [x21, #104]
   252fc:	bl	b050 <free@plt>
   25300:	str	xzr, [x21, #32]
   25304:	mov	x0, x23
   25308:	bl	1c7d0 <printf_parse@@Base+0x1fd4>
   2530c:	ldr	w0, [sp, #136]
   25310:	cbnz	w0, 24ddc <printf_parse@@Base+0xa5e0>
   25314:	ldr	w0, [sp, #136]
   25318:	b	25500 <printf_parse@@Base+0xad04>
   2531c:	ldrsb	w0, [x0, x5]
   25320:	cmp	w0, #0x0
   25324:	csel	w27, w27, w9, ge  // ge = tcont
   25328:	b	25260 <printf_parse@@Base+0xaa64>
   2532c:	ldr	w0, [x0, x5]
   25330:	cmp	w0, #0x40
   25334:	b.hi	25354 <printf_parse@@Base+0xab58>  // b.pmore
   25338:	cmp	w0, #0xf
   2533c:	b.ls	2527c <printf_parse@@Base+0xaa80>  // b.plast
   25340:	sub	w0, w0, #0x10
   25344:	lsl	x0, x7, x0
   25348:	tst	x0, x8
   2534c:	b.eq	2527c <printf_parse@@Base+0xaa80>  // b.none
   25350:	b	25260 <printf_parse@@Base+0xaa64>
   25354:	cmp	w0, #0x80
   25358:	b.eq	25260 <printf_parse@@Base+0xaa64>  // b.none
   2535c:	b	2527c <printf_parse@@Base+0xaa80>
   25360:	bl	aeb0 <abort@plt>
   25364:	ldr	x4, [x19]
   25368:	lsl	x7, x0, #4
   2536c:	add	x2, x4, x0, lsl #4
   25370:	ldrb	w3, [x2, #8]
   25374:	cmp	w3, #0x1
   25378:	b.ne	253a0 <printf_parse@@Base+0xaba4>  // b.any
   2537c:	ldrsb	w3, [x4, x7]
   25380:	tbz	w3, #31, 25390 <printf_parse@@Base+0xab94>
   25384:	ldrb	w3, [x2, #10]
   25388:	and	w3, w3, #0xffffffdf
   2538c:	strb	w3, [x2, #10]
   25390:	add	x0, x0, #0x1
   25394:	cmp	x0, x6
   25398:	b.ne	25364 <printf_parse@@Base+0xab68>  // b.any
   2539c:	b	25138 <printf_parse@@Base+0xa93c>
   253a0:	cmp	w3, #0x5
   253a4:	b.ne	25390 <printf_parse@@Base+0xab94>  // b.any
   253a8:	strb	w5, [x2, #8]
   253ac:	b	25390 <printf_parse@@Base+0xab94>
   253b0:	mov	x0, #0x0                   	// #0
   253b4:	mov	w5, #0x7                   	// #7
   253b8:	b	25394 <printf_parse@@Base+0xab98>
   253bc:	ldr	x5, [sp, #160]
   253c0:	ldr	x3, [x19]
   253c4:	ldr	x0, [x5, x6, lsl #3]
   253c8:	add	x7, x3, x0, lsl #4
   253cc:	ldrb	w1, [x7, #8]
   253d0:	cmp	w1, #0x4
   253d4:	b.ne	2541c <printf_parse@@Base+0xac20>  // b.any
   253d8:	mov	x1, #0x0                   	// #0
   253dc:	cmp	x1, x4
   253e0:	b.lt	25430 <printf_parse@@Base+0xac34>  // b.tstop
   253e4:	b.eq	2541c <printf_parse@@Base+0xac20>  // b.none
   253e8:	ldr	x1, [x19, #40]
   253ec:	madd	x0, x0, x22, x1
   253f0:	ldr	x0, [x0, #16]
   253f4:	ldr	x1, [x0]
   253f8:	mov	x0, x26
   253fc:	bl	1b398 <printf_parse@@Base+0xb9c>
   25400:	cbnz	x0, 2541c <printf_parse@@Base+0xac20>
   25404:	ldr	x0, [x19, #48]
   25408:	madd	x1, x1, x22, x0
   2540c:	mov	x0, x26
   25410:	bl	1e370 <printf_parse@@Base+0x3b74>
   25414:	cbnz	w0, 254e4 <printf_parse@@Base+0xace8>
   25418:	mov	x6, #0x0                   	// #0
   2541c:	add	x6, x6, #0x1
   25420:	ldr	x4, [sp, #152]
   25424:	cmp	x6, x4
   25428:	b.lt	253bc <printf_parse@@Base+0xabc0>  // b.tstop
   2542c:	b	252b8 <printf_parse@@Base+0xaabc>
   25430:	ldr	x2, [x5, x1, lsl #3]
   25434:	lsl	x8, x2, #4
   25438:	add	x2, x3, x2, lsl #4
   2543c:	ldrb	w2, [x2, #8]
   25440:	cmp	w2, #0x9
   25444:	b.ne	25458 <printf_parse@@Base+0xac5c>  // b.any
   25448:	ldr	x8, [x3, x8]
   2544c:	ldr	x2, [x7]
   25450:	cmp	x8, x2
   25454:	b.eq	253e8 <printf_parse@@Base+0xabec>  // b.none
   25458:	add	x1, x1, #0x1
   2545c:	b	253dc <printf_parse@@Base+0xabe0>
   25460:	mov	x6, #0x0                   	// #0
   25464:	b	25420 <printf_parse@@Base+0xac24>
   25468:	ldrsb	w1, [x0, #104]
   2546c:	tbz	w1, #31, 254d8 <printf_parse@@Base+0xacdc>
   25470:	mov	x2, x26
   25474:	mov	x1, x19
   25478:	mov	w3, #0x1                   	// #1
   2547c:	mov	x0, x22
   25480:	bl	1e8ac <printf_parse@@Base+0x40b0>
   25484:	str	x0, [x19, #80]
   25488:	mov	x2, x26
   2548c:	mov	x1, x19
   25490:	mov	w3, #0x2                   	// #2
   25494:	mov	x0, x22
   25498:	bl	1e8ac <printf_parse@@Base+0x40b0>
   2549c:	str	x0, [x19, #88]
   254a0:	mov	x1, x19
   254a4:	mov	x2, x26
   254a8:	mov	x0, x22
   254ac:	mov	w3, #0x6                   	// #6
   254b0:	bl	1e8ac <printf_parse@@Base+0x40b0>
   254b4:	str	x0, [x19, #96]
   254b8:	ldr	x1, [x19, #80]
   254bc:	cbz	x1, 252d8 <printf_parse@@Base+0xaadc>
   254c0:	ldr	x1, [x19, #88]
   254c4:	cbz	x1, 252d8 <printf_parse@@Base+0xaadc>
   254c8:	cbz	x0, 252d8 <printf_parse@@Base+0xaadc>
   254cc:	ldr	x0, [sp, #160]
   254d0:	bl	b050 <free@plt>
   254d4:	b	252dc <printf_parse@@Base+0xaae0>
   254d8:	stp	x0, x0, [x19, #80]
   254dc:	str	x0, [x19, #96]
   254e0:	b	254cc <printf_parse@@Base+0xacd0>
   254e4:	mov	w21, w0
   254e8:	b	252dc <printf_parse@@Base+0xaae0>
   254ec:	ldr	x22, [x0]
   254f0:	bl	b050 <free@plt>
   254f4:	mov	x0, x22
   254f8:	b	252e8 <printf_parse@@Base+0xaaec>
   254fc:	mov	w0, #0xc                   	// #12
   25500:	ldp	x19, x20, [sp, #16]
   25504:	ldp	x21, x22, [sp, #32]
   25508:	ldp	x23, x24, [sp, #48]
   2550c:	ldp	x25, x26, [sp, #64]
   25510:	ldp	x27, x28, [sp, #80]
   25514:	ldp	x29, x30, [sp], #320
   25518:	ret

000000000002551c <rpl_re_compile_pattern@@Base>:
   2551c:	stp	x29, x30, [sp, #-16]!
   25520:	mov	x5, x0
   25524:	mov	x0, x2
   25528:	adrp	x2, 40000 <vasnprintf@@Base+0x1a170>
   2552c:	mov	x29, sp
   25530:	mov	w6, #0x6f                  	// #111
   25534:	ldr	x2, [x2, #3920]
   25538:	ldr	x3, [x2]
   2553c:	ldrb	w2, [x0, #56]
   25540:	ubfx	w4, w3, #25, #1
   25544:	and	w2, w2, w6
   25548:	ubfiz	w4, w4, #4, #4
   2554c:	orr	w4, w4, #0xffffff80
   25550:	orr	w4, w4, w2
   25554:	strb	w4, [x0, #56]
   25558:	mov	x2, x1
   2555c:	mov	x1, x5
   25560:	bl	24a60 <printf_parse@@Base+0xa264>
   25564:	cbz	w0, 25590 <rpl_re_compile_pattern@@Base+0x74>
   25568:	adrp	x2, 29000 <vasnprintf@@Base+0x3170>
   2556c:	add	x2, x2, #0x338
   25570:	add	x1, x2, #0x5f
   25574:	add	x2, x2, #0x1e0
   25578:	ldp	x29, x30, [sp], #16
   2557c:	ldr	x0, [x2, w0, sxtw #3]
   25580:	mov	w2, #0x5                   	// #5
   25584:	add	x1, x1, x0
   25588:	mov	x0, #0x0                   	// #0
   2558c:	b	b3f0 <dcgettext@plt>
   25590:	mov	x0, #0x0                   	// #0
   25594:	ldp	x29, x30, [sp], #16
   25598:	ret

000000000002559c <rpl_re_set_syntax@@Base>:
   2559c:	adrp	x1, 40000 <vasnprintf@@Base+0x1a170>
   255a0:	mov	x2, x0
   255a4:	ldr	x1, [x1, #3920]
   255a8:	ldr	x0, [x1]
   255ac:	str	x2, [x1]
   255b0:	ret

00000000000255b4 <rpl_re_compile_fastmap@@Base>:
   255b4:	stp	x29, x30, [sp, #-48]!
   255b8:	mov	x2, #0x100                 	// #256
   255bc:	mov	w1, #0x0                   	// #0
   255c0:	mov	x29, sp
   255c4:	stp	x19, x20, [sp, #16]
   255c8:	mov	x19, x0
   255cc:	ldr	x20, [x0]
   255d0:	str	x21, [sp, #32]
   255d4:	ldr	x21, [x0, #32]
   255d8:	mov	x0, x21
   255dc:	bl	ac10 <memset@plt>
   255e0:	ldr	x1, [x20, #72]
   255e4:	mov	x0, x19
   255e8:	mov	x2, x21
   255ec:	bl	1d24c <printf_parse@@Base+0x2a50>
   255f0:	ldp	x0, x1, [x20, #72]
   255f4:	cmp	x0, x1
   255f8:	b.eq	25608 <rpl_re_compile_fastmap@@Base+0x54>  // b.none
   255fc:	mov	x2, x21
   25600:	mov	x0, x19
   25604:	bl	1d24c <printf_parse@@Base+0x2a50>
   25608:	ldr	x0, [x20, #72]
   2560c:	ldr	x1, [x20, #88]
   25610:	cmp	x0, x1
   25614:	b.eq	25624 <rpl_re_compile_fastmap@@Base+0x70>  // b.none
   25618:	mov	x2, x21
   2561c:	mov	x0, x19
   25620:	bl	1d24c <printf_parse@@Base+0x2a50>
   25624:	ldr	x0, [x20, #72]
   25628:	ldr	x1, [x20, #96]
   2562c:	cmp	x0, x1
   25630:	b.eq	25640 <rpl_re_compile_fastmap@@Base+0x8c>  // b.none
   25634:	mov	x2, x21
   25638:	mov	x0, x19
   2563c:	bl	1d24c <printf_parse@@Base+0x2a50>
   25640:	ldrb	w0, [x19, #56]
   25644:	ldr	x21, [sp, #32]
   25648:	orr	w0, w0, #0x8
   2564c:	strb	w0, [x19, #56]
   25650:	mov	w0, #0x0                   	// #0
   25654:	ldp	x19, x20, [sp, #16]
   25658:	ldp	x29, x30, [sp], #48
   2565c:	ret
   25660:	sub	sp, sp, #0x90
   25664:	cmp	x3, #0x0
   25668:	ccmp	x3, x2, #0x0, ge  // ge = tcont
   2566c:	stp	x29, x30, [sp, #16]
   25670:	add	x29, sp, #0x10
   25674:	stp	x19, x20, [sp, #32]
   25678:	mov	x20, x0
   2567c:	stp	x21, x22, [sp, #48]
   25680:	stp	x23, x24, [sp, #64]
   25684:	add	x24, x3, x4
   25688:	stp	x25, x26, [sp, #80]
   2568c:	stp	x27, x28, [sp, #96]
   25690:	str	x1, [sp, #128]
   25694:	and	w1, w7, #0xff
   25698:	str	w1, [sp, #140]
   2569c:	ldr	x26, [x0]
   256a0:	b.gt	259e8 <rpl_re_compile_fastmap@@Base+0x434>
   256a4:	mov	x28, x2
   256a8:	mov	x21, x3
   256ac:	mov	x25, x5
   256b0:	mov	x19, x6
   256b4:	cmp	x24, x2
   256b8:	b.gt	25760 <rpl_re_compile_fastmap@@Base+0x1ac>
   256bc:	cmp	x4, #0x0
   256c0:	ccmp	x3, x24, #0x4, ge  // ge = tcont
   256c4:	b.gt	25760 <rpl_re_compile_fastmap@@Base+0x1ac>
   256c8:	tbnz	x24, #63, 25768 <rpl_re_compile_fastmap@@Base+0x1b4>
   256cc:	cmp	x4, #0x0
   256d0:	ccmp	x3, x24, #0x0, lt  // lt = tstop
   256d4:	csel	x24, x24, xzr, gt
   256d8:	adrp	x23, 40000 <vasnprintf@@Base+0x1a170>
   256dc:	ldr	x0, [x23, #4040]
   256e0:	cbnz	x0, 256f0 <rpl_re_compile_fastmap@@Base+0x13c>
   256e4:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   256e8:	ldr	x0, [x0, #3944]
   256ec:	cbz	x0, 256f8 <rpl_re_compile_fastmap@@Base+0x144>
   256f0:	add	x0, x26, #0xe8
   256f4:	bl	b5a0 <pthread_mutex_lock@plt>
   256f8:	ldrb	w0, [x20, #56]
   256fc:	cmp	x24, x21
   25700:	ubfx	x1, x0, #5, #2
   25704:	str	x1, [sp, #120]
   25708:	b.le	25720 <rpl_re_compile_fastmap@@Base+0x16c>
   2570c:	ldr	x1, [x20, #32]
   25710:	cbz	x1, 25720 <rpl_re_compile_fastmap@@Base+0x16c>
   25714:	tbnz	w0, #3, 25720 <rpl_re_compile_fastmap@@Base+0x16c>
   25718:	mov	x0, x20
   2571c:	bl	b630 <rpl_re_compile_fastmap@plt>
   25720:	ldrb	w0, [x20, #56]
   25724:	tbnz	w0, #4, 25754 <rpl_re_compile_fastmap@@Base+0x1a0>
   25728:	cbz	x19, 25808 <rpl_re_compile_fastmap@@Base+0x254>
   2572c:	and	w0, w0, #0x6
   25730:	cmp	w0, #0x4
   25734:	ldr	x1, [x20, #48]
   25738:	b.ne	25770 <rpl_re_compile_fastmap@@Base+0x1bc>  // b.any
   2573c:	ldr	x6, [x19]
   25740:	cmp	x1, x6
   25744:	b.cc	25770 <rpl_re_compile_fastmap@@Base+0x1bc>  // b.lo, b.ul, b.last
   25748:	mov	x27, x6
   2574c:	cmp	x6, #0x0
   25750:	b.gt	25774 <rpl_re_compile_fastmap@@Base+0x1c0>
   25754:	mov	x27, #0x1                   	// #1
   25758:	mov	x19, #0x0                   	// #0
   2575c:	b	25774 <rpl_re_compile_fastmap@@Base+0x1c0>
   25760:	mov	x24, x28
   25764:	b	256d8 <rpl_re_compile_fastmap@@Base+0x124>
   25768:	mov	x24, #0x0                   	// #0
   2576c:	b	256d8 <rpl_re_compile_fastmap@@Base+0x124>
   25770:	add	x27, x1, #0x1
   25774:	lsl	x0, x27, #4
   25778:	bl	aab0 <malloc@plt>
   2577c:	mov	x22, x0
   25780:	cbz	x0, 259e0 <rpl_re_compile_fastmap@@Base+0x42c>
   25784:	ldr	x1, [sp, #128]
   25788:	mov	x7, x0
   2578c:	ldr	w0, [sp, #120]
   25790:	mov	x6, x27
   25794:	str	w0, [sp]
   25798:	mov	x5, x25
   2579c:	mov	x4, x24
   257a0:	mov	x3, x21
   257a4:	mov	x2, x28
   257a8:	mov	x0, x20
   257ac:	bl	22920 <printf_parse@@Base+0x8124>
   257b0:	cbz	w0, 25810 <rpl_re_compile_fastmap@@Base+0x25c>
   257b4:	cmp	w0, #0x1
   257b8:	b.eq	259d8 <rpl_re_compile_fastmap@@Base+0x424>  // b.none
   257bc:	mov	x19, #0xfffffffffffffffe    	// #-2
   257c0:	mov	x0, x22
   257c4:	bl	b050 <free@plt>
   257c8:	ldr	x23, [x23, #4040]
   257cc:	cbnz	x23, 257dc <rpl_re_compile_fastmap@@Base+0x228>
   257d0:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   257d4:	ldr	x0, [x0, #3944]
   257d8:	cbz	x0, 257e4 <rpl_re_compile_fastmap@@Base+0x230>
   257dc:	add	x0, x26, #0xe8
   257e0:	bl	b5d0 <pthread_mutex_unlock@plt>
   257e4:	mov	x0, x19
   257e8:	ldp	x29, x30, [sp, #16]
   257ec:	ldp	x19, x20, [sp, #32]
   257f0:	ldp	x21, x22, [sp, #48]
   257f4:	ldp	x23, x24, [sp, #64]
   257f8:	ldp	x25, x26, [sp, #80]
   257fc:	ldp	x27, x28, [sp, #96]
   25800:	add	sp, sp, #0x90
   25804:	ret
   25808:	mov	x27, #0x1                   	// #1
   2580c:	b	25774 <rpl_re_compile_fastmap@@Base+0x1c0>
   25810:	cbnz	x19, 2584c <rpl_re_compile_fastmap@@Base+0x298>
   25814:	ldr	w0, [sp, #140]
   25818:	ldr	x19, [x22]
   2581c:	cbz	w0, 257c0 <rpl_re_compile_fastmap@@Base+0x20c>
   25820:	cmp	x21, x19
   25824:	b.eq	259cc <rpl_re_compile_fastmap@@Base+0x418>  // b.none
   25828:	adrp	x3, 29000 <vasnprintf@@Base+0x3170>
   2582c:	add	x3, x3, #0x338
   25830:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   25834:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   25838:	add	x3, x3, #0x275
   2583c:	add	x1, x1, #0x201
   25840:	add	x0, x0, #0x25b
   25844:	mov	w2, #0x1be                 	// #446
   25848:	b	25970 <rpl_re_compile_fastmap@@Base+0x3bc>
   2584c:	ldrb	w24, [x20, #56]
   25850:	add	x25, x27, #0x1
   25854:	ubfx	x24, x24, #1, #2
   25858:	cbnz	w24, 258f8 <rpl_re_compile_fastmap@@Base+0x344>
   2585c:	lsl	x28, x25, #3
   25860:	mov	x0, x28
   25864:	bl	aab0 <malloc@plt>
   25868:	str	x0, [x19, #8]
   2586c:	mov	x24, x0
   25870:	cbnz	x0, 25890 <rpl_re_compile_fastmap@@Base+0x2dc>
   25874:	mov	w24, #0x0                   	// #0
   25878:	ldrb	w0, [x20, #56]
   2587c:	bfi	w0, w24, #1, #2
   25880:	strb	w0, [x20, #56]
   25884:	tst	w0, #0x6
   25888:	b.ne	25814 <rpl_re_compile_fastmap@@Base+0x260>  // b.any
   2588c:	b	257bc <rpl_re_compile_fastmap@@Base+0x208>
   25890:	mov	x0, x28
   25894:	bl	aab0 <malloc@plt>
   25898:	str	x0, [x19, #16]
   2589c:	cbnz	x0, 258ac <rpl_re_compile_fastmap@@Base+0x2f8>
   258a0:	mov	x0, x24
   258a4:	bl	b050 <free@plt>
   258a8:	b	25874 <rpl_re_compile_fastmap@@Base+0x2c0>
   258ac:	mov	w24, #0x1                   	// #1
   258b0:	str	x25, [x19]
   258b4:	mov	x1, x22
   258b8:	mov	x0, #0x0                   	// #0
   258bc:	cmp	x27, x0
   258c0:	b.gt	259a4 <rpl_re_compile_fastmap@@Base+0x3f0>
   258c4:	cmp	x27, #0x0
   258c8:	mov	x0, #0xffffffffffffffff    	// #-1
   258cc:	csel	x6, x27, xzr, ge  // ge = tcont
   258d0:	ldr	x1, [x19]
   258d4:	cmp	x6, x1
   258d8:	b.cs	25878 <rpl_re_compile_fastmap@@Base+0x2c4>  // b.hs, b.nlast
   258dc:	ldr	x2, [x19, #16]
   258e0:	lsl	x1, x6, #3
   258e4:	add	x6, x6, #0x1
   258e8:	str	x0, [x2, x1]
   258ec:	ldr	x2, [x19, #8]
   258f0:	str	x0, [x2, x1]
   258f4:	b	258d0 <rpl_re_compile_fastmap@@Base+0x31c>
   258f8:	cmp	w24, #0x1
   258fc:	b.ne	25948 <rpl_re_compile_fastmap@@Base+0x394>  // b.any
   25900:	ldr	x0, [x19]
   25904:	cmp	x0, x25
   25908:	b.cs	258b4 <rpl_re_compile_fastmap@@Base+0x300>  // b.hs, b.nlast
   2590c:	ldr	x0, [x19, #8]
   25910:	lsl	x1, x25, #3
   25914:	str	x1, [sp, #120]
   25918:	bl	ad60 <realloc@plt>
   2591c:	mov	x28, x0
   25920:	cbz	x0, 25874 <rpl_re_compile_fastmap@@Base+0x2c0>
   25924:	ldr	x0, [x19, #16]
   25928:	ldr	x1, [sp, #120]
   2592c:	bl	ad60 <realloc@plt>
   25930:	cbnz	x0, 2593c <rpl_re_compile_fastmap@@Base+0x388>
   25934:	mov	x0, x28
   25938:	b	258a4 <rpl_re_compile_fastmap@@Base+0x2f0>
   2593c:	stp	x25, x28, [x19]
   25940:	str	x0, [x19, #16]
   25944:	b	258b4 <rpl_re_compile_fastmap@@Base+0x300>
   25948:	cmp	w24, #0x2
   2594c:	b.eq	25974 <rpl_re_compile_fastmap@@Base+0x3c0>  // b.none
   25950:	adrp	x3, 29000 <vasnprintf@@Base+0x3170>
   25954:	add	x3, x3, #0x338
   25958:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   2595c:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   25960:	add	x3, x3, #0x268
   25964:	add	x1, x1, #0x201
   25968:	add	x0, x0, #0x226
   2596c:	mov	w2, #0x1f9                 	// #505
   25970:	bl	b530 <__assert_fail@plt>
   25974:	ldr	x0, [x19]
   25978:	cmp	x27, x0
   2597c:	b.ls	258b4 <rpl_re_compile_fastmap@@Base+0x300>  // b.plast
   25980:	adrp	x3, 29000 <vasnprintf@@Base+0x3170>
   25984:	add	x3, x3, #0x338
   25988:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   2598c:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   25990:	add	x3, x3, #0x268
   25994:	add	x1, x1, #0x201
   25998:	add	x0, x0, #0x243
   2599c:	mov	w2, #0x1fb                 	// #507
   259a0:	b	25970 <rpl_re_compile_fastmap@@Base+0x3bc>
   259a4:	ldr	x3, [x19, #8]
   259a8:	lsl	x2, x0, #3
   259ac:	ldr	x4, [x1]
   259b0:	add	x0, x0, #0x1
   259b4:	str	x4, [x3, x2]
   259b8:	add	x1, x1, #0x10
   259bc:	ldr	x3, [x19, #16]
   259c0:	ldur	x4, [x1, #-8]
   259c4:	str	x4, [x3, x2]
   259c8:	b	258bc <rpl_re_compile_fastmap@@Base+0x308>
   259cc:	ldr	x0, [x22, #8]
   259d0:	sub	x19, x0, x19
   259d4:	b	257c0 <rpl_re_compile_fastmap@@Base+0x20c>
   259d8:	mov	x19, #0xffffffffffffffff    	// #-1
   259dc:	b	257c0 <rpl_re_compile_fastmap@@Base+0x20c>
   259e0:	mov	x19, #0xfffffffffffffffe    	// #-2
   259e4:	b	257c8 <rpl_re_compile_fastmap@@Base+0x214>
   259e8:	mov	x19, #0xffffffffffffffff    	// #-1
   259ec:	b	257e4 <rpl_re_compile_fastmap@@Base+0x230>
   259f0:	stp	x29, x30, [sp, #-96]!
   259f4:	cmp	x2, #0x0
   259f8:	ccmp	x4, #0x0, #0x1, ge  // ge = tcont
   259fc:	mov	x29, sp
   25a00:	stp	x19, x20, [sp, #16]
   25a04:	stp	x21, x22, [sp, #32]
   25a08:	stp	x23, x24, [sp, #48]
   25a0c:	stp	x25, x26, [sp, #64]
   25a10:	stp	x27, x28, [sp, #80]
   25a14:	b.ge	25a3c <rpl_re_compile_fastmap@@Base+0x488>  // b.tcont
   25a18:	mov	x19, #0xfffffffffffffffe    	// #-2
   25a1c:	mov	x0, x19
   25a20:	ldp	x19, x20, [sp, #16]
   25a24:	ldp	x21, x22, [sp, #32]
   25a28:	ldp	x23, x24, [sp, #48]
   25a2c:	ldp	x25, x26, [sp, #64]
   25a30:	ldp	x27, x28, [sp, #80]
   25a34:	ldp	x29, x30, [sp], #96
   25a38:	ret
   25a3c:	mov	x23, x0
   25a40:	ldr	x0, [sp, #96]
   25a44:	tbnz	x0, #63, 25a18 <rpl_re_compile_fastmap@@Base+0x464>
   25a48:	mov	x19, x2
   25a4c:	mov	x21, x4
   25a50:	adds	x27, x2, x4
   25a54:	b.vs	25a18 <rpl_re_compile_fastmap@@Base+0x464>
   25a58:	mov	x28, x1
   25a5c:	mov	x24, x5
   25a60:	mov	x25, x6
   25a64:	mov	x26, x7
   25a68:	cbz	x4, 25adc <rpl_re_compile_fastmap@@Base+0x528>
   25a6c:	mov	x22, x3
   25a70:	cbz	x2, 25ad8 <rpl_re_compile_fastmap@@Base+0x524>
   25a74:	mov	x0, x27
   25a78:	bl	aab0 <malloc@plt>
   25a7c:	mov	x20, x0
   25a80:	cbz	x0, 25a18 <rpl_re_compile_fastmap@@Base+0x464>
   25a84:	mov	x1, x28
   25a88:	mov	x28, x20
   25a8c:	mov	x2, x19
   25a90:	bl	a6f0 <memcpy@plt>
   25a94:	mov	x2, x21
   25a98:	mov	x1, x22
   25a9c:	add	x0, x20, x19
   25aa0:	bl	a6f0 <memcpy@plt>
   25aa4:	ldrb	w7, [sp, #104]
   25aa8:	mov	x6, x26
   25aac:	ldr	x5, [sp, #96]
   25ab0:	mov	x4, x25
   25ab4:	mov	x3, x24
   25ab8:	mov	x2, x27
   25abc:	mov	x1, x28
   25ac0:	mov	x0, x23
   25ac4:	bl	25660 <rpl_re_compile_fastmap@@Base+0xac>
   25ac8:	mov	x19, x0
   25acc:	mov	x0, x20
   25ad0:	bl	b050 <free@plt>
   25ad4:	b	25a1c <rpl_re_compile_fastmap@@Base+0x468>
   25ad8:	mov	x28, x3
   25adc:	mov	x20, #0x0                   	// #0
   25ae0:	b	25aa4 <rpl_re_compile_fastmap@@Base+0x4f0>

0000000000025ae4 <rpl_regcomp@@Base>:
   25ae4:	stp	x29, x30, [sp, #-64]!
   25ae8:	mov	x29, sp
   25aec:	stp	x19, x20, [sp, #16]
   25af0:	mov	w20, w2
   25af4:	mov	x19, x0
   25af8:	tst	x20, #0x1
   25afc:	stp	x21, x22, [sp, #32]
   25b00:	mov	x21, #0xb2fc                	// #45820
   25b04:	str	x23, [sp, #48]
   25b08:	mov	x23, #0x2c6                 	// #710
   25b0c:	stp	xzr, xzr, [x0]
   25b10:	mov	x22, x1
   25b14:	movk	x21, #0x3, lsl #16
   25b18:	str	xzr, [x0, #16]
   25b1c:	movk	x23, #0x101, lsl #16
   25b20:	mov	x0, #0x100                 	// #256
   25b24:	csel	x23, x21, x23, ne  // ne = any
   25b28:	bl	aab0 <malloc@plt>
   25b2c:	str	x0, [x19, #32]
   25b30:	cbz	x0, 25bdc <rpl_regcomp@@Base+0xf8>
   25b34:	sbfiz	x21, x20, #21, #32
   25b38:	and	x21, x21, #0x400000
   25b3c:	orr	x21, x21, x23
   25b40:	tbz	w20, #2, 25bc0 <rpl_regcomp@@Base+0xdc>
   25b44:	and	x21, x21, #0xffffffffffffffbf
   25b48:	mov	w0, #0x1                   	// #1
   25b4c:	orr	x21, x21, #0x100
   25b50:	ubfx	x20, x20, #3, #1
   25b54:	ubfiz	w0, w0, #7, #1
   25b58:	mov	w1, #0x6f                  	// #111
   25b5c:	str	xzr, [x19, #40]
   25b60:	orr	w20, w0, w20, lsl #4
   25b64:	ldrb	w0, [x19, #56]
   25b68:	and	w0, w0, w1
   25b6c:	orr	w20, w20, w0
   25b70:	strb	w20, [x19, #56]
   25b74:	mov	x0, x22
   25b78:	bl	a780 <strlen@plt>
   25b7c:	mov	x2, x0
   25b80:	mov	x3, x21
   25b84:	mov	x1, x22
   25b88:	mov	x0, x19
   25b8c:	bl	24a60 <printf_parse@@Base+0xa264>
   25b90:	mov	w20, w0
   25b94:	cmp	w0, #0x10
   25b98:	b.eq	25bc8 <rpl_regcomp@@Base+0xe4>  // b.none
   25b9c:	cbnz	w0, 25bcc <rpl_regcomp@@Base+0xe8>
   25ba0:	mov	x0, x19
   25ba4:	bl	b630 <rpl_re_compile_fastmap@plt>
   25ba8:	mov	w0, w20
   25bac:	ldp	x19, x20, [sp, #16]
   25bb0:	ldp	x21, x22, [sp, #32]
   25bb4:	ldr	x23, [sp, #48]
   25bb8:	ldp	x29, x30, [sp], #64
   25bbc:	ret
   25bc0:	mov	w0, #0x0                   	// #0
   25bc4:	b	25b50 <rpl_regcomp@@Base+0x6c>
   25bc8:	mov	w20, #0x8                   	// #8
   25bcc:	ldr	x0, [x19, #32]
   25bd0:	bl	b050 <free@plt>
   25bd4:	str	xzr, [x19, #32]
   25bd8:	b	25ba8 <rpl_regcomp@@Base+0xc4>
   25bdc:	mov	w20, #0xc                   	// #12
   25be0:	b	25ba8 <rpl_regcomp@@Base+0xc4>

0000000000025be4 <rpl_regerror@@Base>:
   25be4:	stp	x29, x30, [sp, #-48]!
   25be8:	cmp	w0, #0x10
   25bec:	mov	x29, sp
   25bf0:	stp	x19, x20, [sp, #16]
   25bf4:	stp	x21, x22, [sp, #32]
   25bf8:	b.ls	25c00 <rpl_regerror@@Base+0x1c>  // b.plast
   25bfc:	bl	aeb0 <abort@plt>
   25c00:	adrp	x4, 29000 <vasnprintf@@Base+0x3170>
   25c04:	add	x4, x4, #0x338
   25c08:	add	x1, x4, #0x5f
   25c0c:	add	x4, x4, #0x1e0
   25c10:	mov	x21, x2
   25c14:	mov	w2, #0x5                   	// #5
   25c18:	mov	x20, x3
   25c1c:	ldr	x0, [x4, w0, sxtw #3]
   25c20:	add	x1, x1, x0
   25c24:	mov	x0, #0x0                   	// #0
   25c28:	bl	b3f0 <dcgettext@plt>
   25c2c:	mov	x22, x0
   25c30:	bl	a780 <strlen@plt>
   25c34:	add	x19, x0, #0x1
   25c38:	cbz	x20, 25c5c <rpl_regerror@@Base+0x78>
   25c3c:	mov	x2, x19
   25c40:	cmp	x19, x20
   25c44:	b.ls	25c50 <rpl_regerror@@Base+0x6c>  // b.plast
   25c48:	sub	x2, x20, #0x1
   25c4c:	strb	wzr, [x21, x2]
   25c50:	mov	x1, x22
   25c54:	mov	x0, x21
   25c58:	bl	a6f0 <memcpy@plt>
   25c5c:	mov	x0, x19
   25c60:	ldp	x19, x20, [sp, #16]
   25c64:	ldp	x21, x22, [sp, #32]
   25c68:	ldp	x29, x30, [sp], #48
   25c6c:	ret

0000000000025c70 <rpl_regfree@@Base>:
   25c70:	stp	x29, x30, [sp, #-32]!
   25c74:	mov	x29, sp
   25c78:	stp	x19, x20, [sp, #16]
   25c7c:	mov	x19, x0
   25c80:	ldr	x20, [x0]
   25c84:	cbz	x20, 25cb0 <rpl_regfree@@Base+0x40>
   25c88:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   25c8c:	ldr	x0, [x0, #4040]
   25c90:	cbnz	x0, 25ca0 <rpl_regfree@@Base+0x30>
   25c94:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   25c98:	ldr	x0, [x0, #3944]
   25c9c:	cbz	x0, 25ca8 <rpl_regfree@@Base+0x38>
   25ca0:	add	x0, x20, #0xe8
   25ca4:	bl	b250 <pthread_mutex_destroy@plt>
   25ca8:	mov	x0, x20
   25cac:	bl	1c814 <printf_parse@@Base+0x2018>
   25cb0:	ldr	x0, [x19, #32]
   25cb4:	stp	xzr, xzr, [x19]
   25cb8:	bl	b050 <free@plt>
   25cbc:	str	xzr, [x19, #32]
   25cc0:	ldr	x0, [x19, #40]
   25cc4:	bl	b050 <free@plt>
   25cc8:	str	xzr, [x19, #40]
   25ccc:	ldp	x19, x20, [sp, #16]
   25cd0:	ldp	x29, x30, [sp], #32
   25cd4:	ret

0000000000025cd8 <rpl_regexec@@Base>:
   25cd8:	tst	w4, #0xfffffff8
   25cdc:	b.ne	25dd8 <rpl_regexec@@Base+0x100>  // b.any
   25ce0:	sub	sp, sp, #0x70
   25ce4:	stp	x29, x30, [sp, #16]
   25ce8:	add	x29, sp, #0x10
   25cec:	stp	x19, x20, [sp, #32]
   25cf0:	mov	x19, x0
   25cf4:	stp	x21, x22, [sp, #48]
   25cf8:	mov	x22, x1
   25cfc:	mov	w21, w4
   25d00:	stp	x23, x24, [sp, #64]
   25d04:	mov	x24, x3
   25d08:	stp	x25, x26, [sp, #80]
   25d0c:	mov	x26, x2
   25d10:	str	x27, [sp, #96]
   25d14:	tbz	w21, #2, 25db8 <rpl_regexec@@Base+0xe0>
   25d18:	ldp	x27, x23, [x3]
   25d1c:	adrp	x20, 40000 <vasnprintf@@Base+0x1a170>
   25d20:	ldr	x25, [x19]
   25d24:	ldr	x0, [x20, #4040]
   25d28:	cbnz	x0, 25d38 <rpl_regexec@@Base+0x60>
   25d2c:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   25d30:	ldr	x0, [x0, #3944]
   25d34:	cbz	x0, 25d40 <rpl_regexec@@Base+0x68>
   25d38:	add	x0, x25, #0xe8
   25d3c:	bl	b5a0 <pthread_mutex_lock@plt>
   25d40:	ldrb	w0, [x19, #56]
   25d44:	str	w21, [sp]
   25d48:	tbz	w0, #4, 25dcc <rpl_regexec@@Base+0xf4>
   25d4c:	mov	x7, #0x0                   	// #0
   25d50:	mov	x6, #0x0                   	// #0
   25d54:	mov	x0, x19
   25d58:	mov	x5, x23
   25d5c:	mov	x4, x23
   25d60:	mov	x3, x27
   25d64:	mov	x2, x23
   25d68:	mov	x1, x22
   25d6c:	bl	22920 <printf_parse@@Base+0x8124>
   25d70:	mov	w19, w0
   25d74:	ldr	x20, [x20, #4040]
   25d78:	cbnz	x20, 25d88 <rpl_regexec@@Base+0xb0>
   25d7c:	adrp	x0, 40000 <vasnprintf@@Base+0x1a170>
   25d80:	ldr	x0, [x0, #3944]
   25d84:	cbz	x0, 25d90 <rpl_regexec@@Base+0xb8>
   25d88:	add	x0, x25, #0xe8
   25d8c:	bl	b5d0 <pthread_mutex_unlock@plt>
   25d90:	cmp	w19, #0x0
   25d94:	cset	w0, ne  // ne = any
   25d98:	ldp	x29, x30, [sp, #16]
   25d9c:	ldp	x19, x20, [sp, #32]
   25da0:	ldp	x21, x22, [sp, #48]
   25da4:	ldp	x23, x24, [sp, #64]
   25da8:	ldp	x25, x26, [sp, #80]
   25dac:	ldr	x27, [sp, #96]
   25db0:	add	sp, sp, #0x70
   25db4:	ret
   25db8:	mov	x0, x1
   25dbc:	mov	x27, #0x0                   	// #0
   25dc0:	bl	a780 <strlen@plt>
   25dc4:	mov	x23, x0
   25dc8:	b	25d1c <rpl_regexec@@Base+0x44>
   25dcc:	mov	x7, x24
   25dd0:	mov	x6, x26
   25dd4:	b	25d54 <rpl_regexec@@Base+0x7c>
   25dd8:	mov	w0, #0x2                   	// #2
   25ddc:	ret

0000000000025de0 <rpl_re_match@@Base>:
   25de0:	mov	x6, x4
   25de4:	mov	x5, x2
   25de8:	mov	w7, #0x1                   	// #1
   25dec:	mov	x4, #0x0                   	// #0
   25df0:	b	25660 <rpl_re_compile_fastmap@@Base+0xac>

0000000000025df4 <rpl_re_search@@Base>:
   25df4:	mov	x6, x5
   25df8:	mov	w7, #0x0                   	// #0
   25dfc:	mov	x5, x2
   25e00:	b	25660 <rpl_re_compile_fastmap@@Base+0xac>

0000000000025e04 <rpl_re_match_2@@Base>:
   25e04:	sub	sp, sp, #0x20
   25e08:	mov	w8, #0x1                   	// #1
   25e0c:	stp	x29, x30, [sp, #16]
   25e10:	add	x29, sp, #0x10
   25e14:	str	x7, [sp]
   25e18:	mov	x7, x6
   25e1c:	strb	w8, [sp, #8]
   25e20:	mov	x6, #0x0                   	// #0
   25e24:	bl	259f0 <rpl_re_compile_fastmap@@Base+0x43c>
   25e28:	ldp	x29, x30, [sp, #16]
   25e2c:	add	sp, sp, #0x20
   25e30:	ret

0000000000025e34 <rpl_re_search_2@@Base>:
   25e34:	sub	sp, sp, #0x20
   25e38:	stp	x29, x30, [sp, #16]
   25e3c:	add	x29, sp, #0x10
   25e40:	ldr	x8, [sp, #32]
   25e44:	str	x8, [sp]
   25e48:	strb	wzr, [sp, #8]
   25e4c:	bl	259f0 <rpl_re_compile_fastmap@@Base+0x43c>
   25e50:	ldp	x29, x30, [sp, #16]
   25e54:	add	sp, sp, #0x20
   25e58:	ret

0000000000025e5c <rpl_re_set_registers@@Base>:
   25e5c:	ldrb	w5, [x0, #56]
   25e60:	cbz	x2, 25e7c <rpl_re_set_registers@@Base+0x20>
   25e64:	mov	w6, #0x1                   	// #1
   25e68:	bfi	w5, w6, #1, #2
   25e6c:	strb	w5, [x0, #56]
   25e70:	stp	x2, x3, [x1]
   25e74:	str	x4, [x1, #16]
   25e78:	ret
   25e7c:	and	w5, w5, #0xfffffff9
   25e80:	strb	w5, [x0, #56]
   25e84:	stp	xzr, xzr, [x1]
   25e88:	str	xzr, [x1, #16]
   25e8c:	b	25e78 <rpl_re_set_registers@@Base+0x1c>

0000000000025e90 <vasnprintf@@Base>:
   25e90:	sub	sp, sp, #0x460
   25e94:	stp	x29, x30, [sp]
   25e98:	mov	x29, sp
   25e9c:	str	x0, [x29, #168]
   25ea0:	add	x0, x29, #0xe0
   25ea4:	str	x0, [x29, #152]
   25ea8:	add	x0, x29, #0x1d8
   25eac:	stp	x19, x20, [sp, #16]
   25eb0:	mov	x19, x2
   25eb4:	mov	x20, x3
   25eb8:	ldr	x2, [x29, #152]
   25ebc:	stp	x21, x22, [sp, #32]
   25ec0:	stp	x23, x24, [sp, #48]
   25ec4:	stp	x25, x26, [sp, #64]
   25ec8:	stp	x27, x28, [sp, #80]
   25ecc:	str	x1, [x29, #128]
   25ed0:	mov	x1, x0
   25ed4:	str	x0, [x29, #144]
   25ed8:	mov	x0, x19
   25edc:	bl	b5b0 <printf_parse@plt>
   25ee0:	tbnz	w0, #31, 2670c <vasnprintf@@Base+0x87c>
   25ee4:	ldp	x0, x1, [x20]
   25ee8:	stp	x0, x1, [x29, #176]
   25eec:	ldp	x0, x1, [x20, #16]
   25ef0:	stp	x0, x1, [x29, #192]
   25ef4:	ldr	x1, [x29, #152]
   25ef8:	add	x0, x29, #0xb0
   25efc:	bl	b0f0 <printf_fetchargs@plt>
   25f00:	tbz	w0, #31, 25f44 <vasnprintf@@Base+0xb4>
   25f04:	ldr	x1, [x29, #144]
   25f08:	ldr	x0, [x29, #480]
   25f0c:	add	x1, x1, #0x20
   25f10:	cmp	x0, x1
   25f14:	b.eq	25f1c <vasnprintf@@Base+0x8c>  // b.none
   25f18:	bl	b050 <free@plt>
   25f1c:	ldr	x1, [x29, #152]
   25f20:	ldr	x0, [x29, #232]
   25f24:	add	x1, x1, #0x10
   25f28:	cmp	x0, x1
   25f2c:	b.eq	25f34 <vasnprintf@@Base+0xa4>  // b.none
   25f30:	bl	b050 <free@plt>
   25f34:	bl	b540 <__errno_location@plt>
   25f38:	mov	w1, #0x16                  	// #22
   25f3c:	str	w1, [x0]
   25f40:	b	2670c <vasnprintf@@Base+0x87c>
   25f44:	ldp	x1, x2, [x29, #488]
   25f48:	mov	x3, #0x6                   	// #6
   25f4c:	mov	x0, #0x7                   	// #7
   25f50:	bl	b6b0 <xsum4@plt>
   25f54:	cmp	x0, #0xf9f
   25f58:	b.hi	26078 <vasnprintf@@Base+0x1e8>  // b.pmore
   25f5c:	add	x1, x0, #0xf
   25f60:	str	xzr, [x29, #160]
   25f64:	and	x1, x1, #0xfffffffffffffff0
   25f68:	sub	sp, sp, x1
   25f6c:	mov	x20, sp
   25f70:	ldr	x0, [x29, #168]
   25f74:	cbz	x0, 26094 <vasnprintf@@Base+0x204>
   25f78:	ldr	x0, [x29, #128]
   25f7c:	ldr	x22, [x0]
   25f80:	add	x21, x29, #0xd4
   25f84:	ldr	x27, [x29, #168]
   25f88:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   25f8c:	ldr	x26, [x29, #480]
   25f90:	add	x0, x0, #0x5d0
   25f94:	mov	x23, #0x0                   	// #0
   25f98:	str	x0, [x29, #112]
   25f9c:	str	xzr, [x29, #136]
   25fa0:	ldr	x25, [x26]
   25fa4:	cmp	x25, x19
   25fa8:	b.eq	260c8 <vasnprintf@@Base+0x238>  // b.none
   25fac:	sub	x25, x25, x19
   25fb0:	mov	x1, #0xffffffffffffffff    	// #-1
   25fb4:	adds	x24, x23, x25
   25fb8:	csel	x24, x24, x1, cc  // cc = lo, ul, last
   25fbc:	cmp	x22, x24
   25fc0:	b.cs	26110 <vasnprintf@@Base+0x280>  // b.hs, b.nlast
   25fc4:	cmp	x22, #0x0
   25fc8:	lsl	x0, x22, #1
   25fcc:	csel	x0, x0, x1, ge  // ge = tcont
   25fd0:	mov	x22, #0xc                   	// #12
   25fd4:	csel	x22, x0, x22, ne  // ne = any
   25fd8:	cmp	x22, x24
   25fdc:	csel	x22, x22, x24, cs  // cs = hs, nlast
   25fe0:	cmp	x22, x1
   25fe4:	b.eq	26018 <vasnprintf@@Base+0x188>  // b.none
   25fe8:	ldr	x0, [x29, #168]
   25fec:	cmp	x27, x0
   25ff0:	cset	w1, eq  // eq = none
   25ff4:	str	w1, [x29, #124]
   25ff8:	cmp	x27, #0x0
   25ffc:	ccmp	w1, #0x0, #0x0, ne  // ne = any
   26000:	b.eq	2609c <vasnprintf@@Base+0x20c>  // b.none
   26004:	mov	x0, x22
   26008:	bl	aab0 <malloc@plt>
   2600c:	ldr	w1, [x29, #124]
   26010:	mov	x28, x0
   26014:	cbnz	x0, 260f4 <vasnprintf@@Base+0x264>
   26018:	ldr	x0, [x29, #168]
   2601c:	cmp	x27, #0x0
   26020:	ccmp	x27, x0, #0x4, ne  // ne = any
   26024:	b.eq	26030 <vasnprintf@@Base+0x1a0>  // b.none
   26028:	mov	x0, x27
   2602c:	bl	b050 <free@plt>
   26030:	ldr	x0, [x29, #160]
   26034:	cbz	x0, 2603c <vasnprintf@@Base+0x1ac>
   26038:	bl	b050 <free@plt>
   2603c:	ldr	x1, [x29, #144]
   26040:	ldr	x0, [x29, #480]
   26044:	add	x1, x1, #0x20
   26048:	cmp	x0, x1
   2604c:	b.eq	26054 <vasnprintf@@Base+0x1c4>  // b.none
   26050:	bl	b050 <free@plt>
   26054:	ldr	x1, [x29, #152]
   26058:	ldr	x0, [x29, #232]
   2605c:	add	x1, x1, #0x10
   26060:	cmp	x0, x1
   26064:	b.eq	2606c <vasnprintf@@Base+0x1dc>  // b.none
   26068:	bl	b050 <free@plt>
   2606c:	bl	b540 <__errno_location@plt>
   26070:	mov	w1, #0xc                   	// #12
   26074:	b	25f3c <vasnprintf@@Base+0xac>
   26078:	cmn	x0, #0x1
   2607c:	b.eq	2603c <vasnprintf@@Base+0x1ac>  // b.none
   26080:	bl	aab0 <malloc@plt>
   26084:	mov	x20, x0
   26088:	cbz	x0, 2603c <vasnprintf@@Base+0x1ac>
   2608c:	str	x0, [x29, #160]
   26090:	b	25f70 <vasnprintf@@Base+0xe0>
   26094:	mov	x22, #0x0                   	// #0
   26098:	b	25f80 <vasnprintf@@Base+0xf0>
   2609c:	mov	x1, x22
   260a0:	mov	x0, x27
   260a4:	bl	ad60 <realloc@plt>
   260a8:	mov	x28, x0
   260ac:	cbz	x0, 26018 <vasnprintf@@Base+0x188>
   260b0:	add	x0, x28, x23
   260b4:	mov	x27, x28
   260b8:	mov	x23, x24
   260bc:	mov	x2, x25
   260c0:	mov	x1, x19
   260c4:	bl	a6f0 <memcpy@plt>
   260c8:	ldr	x1, [x29, #136]
   260cc:	ldr	x0, [x29, #472]
   260d0:	cmp	x0, x1
   260d4:	b.eq	26848 <vasnprintf@@Base+0x9b8>  // b.none
   260d8:	ldrb	w1, [x26, #72]
   260dc:	ldr	x0, [x26, #80]
   260e0:	cmp	w1, #0x25
   260e4:	b.ne	261d4 <vasnprintf@@Base+0x344>  // b.any
   260e8:	cmn	x0, #0x1
   260ec:	b.eq	26118 <vasnprintf@@Base+0x288>  // b.none
   260f0:	bl	aeb0 <abort@plt>
   260f4:	cmp	x23, #0x0
   260f8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   260fc:	b.eq	260b0 <vasnprintf@@Base+0x220>  // b.none
   26100:	mov	x2, x23
   26104:	mov	x1, x27
   26108:	bl	a6f0 <memcpy@plt>
   2610c:	b	260b0 <vasnprintf@@Base+0x220>
   26110:	mov	x28, x27
   26114:	b	260b0 <vasnprintf@@Base+0x220>
   26118:	adds	x19, x23, #0x1
   2611c:	csel	x19, x19, x0, cc  // cc = lo, ul, last
   26120:	cmp	x22, x19
   26124:	b.cs	261cc <vasnprintf@@Base+0x33c>  // b.hs, b.nlast
   26128:	cmp	x22, #0x0
   2612c:	lsl	x1, x22, #1
   26130:	csel	x1, x1, x0, ge  // ge = tcont
   26134:	mov	x0, #0xc                   	// #12
   26138:	csel	x0, x1, x0, ne  // ne = any
   2613c:	cmp	x0, x19
   26140:	csel	x22, x0, x19, cs  // cs = hs, nlast
   26144:	cmn	x22, #0x1
   26148:	b.eq	26018 <vasnprintf@@Base+0x188>  // b.none
   2614c:	ldr	x0, [x29, #168]
   26150:	cmp	x27, x0
   26154:	cset	w25, eq  // eq = none
   26158:	cmp	x27, #0x0
   2615c:	ccmp	w25, #0x0, #0x0, ne  // ne = any
   26160:	b.eq	26190 <vasnprintf@@Base+0x300>  // b.none
   26164:	mov	x0, x22
   26168:	bl	aab0 <malloc@plt>
   2616c:	mov	x24, x0
   26170:	cbz	x0, 26018 <vasnprintf@@Base+0x188>
   26174:	cmp	x23, #0x0
   26178:	ccmp	w25, #0x0, #0x4, ne  // ne = any
   2617c:	b.eq	261a4 <vasnprintf@@Base+0x314>  // b.none
   26180:	mov	x2, x23
   26184:	mov	x1, x27
   26188:	bl	a6f0 <memcpy@plt>
   2618c:	b	261a4 <vasnprintf@@Base+0x314>
   26190:	mov	x1, x22
   26194:	mov	x0, x27
   26198:	bl	ad60 <realloc@plt>
   2619c:	mov	x24, x0
   261a0:	cbz	x0, 26018 <vasnprintf@@Base+0x188>
   261a4:	mov	w0, #0x25                  	// #37
   261a8:	mov	x27, x24
   261ac:	strb	w0, [x24, x23]
   261b0:	mov	x23, x19
   261b4:	ldr	x0, [x29, #136]
   261b8:	add	x26, x26, #0x58
   261bc:	ldur	x19, [x26, #-80]
   261c0:	add	x0, x0, #0x1
   261c4:	str	x0, [x29, #136]
   261c8:	b	25fa0 <vasnprintf@@Base+0x110>
   261cc:	mov	x24, x27
   261d0:	b	261a4 <vasnprintf@@Base+0x314>
   261d4:	cmn	x0, #0x1
   261d8:	b.eq	260f0 <vasnprintf@@Base+0x260>  // b.none
   261dc:	ldr	x25, [x29, #232]
   261e0:	lsl	x2, x0, #5
   261e4:	cmp	w1, #0x6e
   261e8:	ldr	w28, [x25, x2]
   261ec:	add	x0, x25, x0, lsl #5
   261f0:	b.ne	2623c <vasnprintf@@Base+0x3ac>  // b.any
   261f4:	sub	w28, w28, #0x12
   261f8:	cmp	w28, #0x4
   261fc:	b.hi	260f0 <vasnprintf@@Base+0x260>  // b.pmore
   26200:	adrp	x1, 29000 <vasnprintf@@Base+0x3170>
   26204:	add	x1, x1, #0x5bc
   26208:	ldr	x0, [x0, #16]
   2620c:	ldrb	w1, [x1, w28, uxtw]
   26210:	adr	x2, 2621c <vasnprintf@@Base+0x38c>
   26214:	add	x1, x2, w1, sxtb #2
   26218:	br	x1
   2621c:	strb	w23, [x0]
   26220:	b	261b4 <vasnprintf@@Base+0x324>
   26224:	strh	w23, [x0]
   26228:	b	261b4 <vasnprintf@@Base+0x324>
   2622c:	str	w23, [x0]
   26230:	b	261b4 <vasnprintf@@Base+0x324>
   26234:	str	x23, [x0]
   26238:	b	261b4 <vasnprintf@@Base+0x324>
   2623c:	ldr	w0, [x26, #16]
   26240:	mov	w1, #0x25                  	// #37
   26244:	strb	w1, [x20]
   26248:	tbnz	w0, #0, 262fc <vasnprintf@@Base+0x46c>
   2624c:	add	x19, x20, #0x1
   26250:	tbz	w0, #1, 2625c <vasnprintf@@Base+0x3cc>
   26254:	mov	w1, #0x2d                  	// #45
   26258:	strb	w1, [x19], #1
   2625c:	tbz	w0, #2, 26268 <vasnprintf@@Base+0x3d8>
   26260:	mov	w1, #0x2b                  	// #43
   26264:	strb	w1, [x19], #1
   26268:	tbz	w0, #3, 26274 <vasnprintf@@Base+0x3e4>
   2626c:	mov	w1, #0x20                  	// #32
   26270:	strb	w1, [x19], #1
   26274:	tbz	w0, #4, 26280 <vasnprintf@@Base+0x3f0>
   26278:	mov	w1, #0x23                  	// #35
   2627c:	strb	w1, [x19], #1
   26280:	tbz	w0, #6, 2628c <vasnprintf@@Base+0x3fc>
   26284:	mov	w1, #0x49                  	// #73
   26288:	strb	w1, [x19], #1
   2628c:	tbz	w0, #5, 26298 <vasnprintf@@Base+0x408>
   26290:	mov	w0, #0x30                  	// #48
   26294:	strb	w0, [x19], #1
   26298:	ldp	x1, x24, [x26, #24]
   2629c:	cmp	x1, x24
   262a0:	b.eq	262b8 <vasnprintf@@Base+0x428>  // b.none
   262a4:	sub	x24, x24, x1
   262a8:	mov	x0, x19
   262ac:	add	x19, x19, x24
   262b0:	mov	x2, x24
   262b4:	bl	a6f0 <memcpy@plt>
   262b8:	ldp	x1, x24, [x26, #48]
   262bc:	cmp	x1, x24
   262c0:	b.eq	262d8 <vasnprintf@@Base+0x448>  // b.none
   262c4:	sub	x24, x24, x1
   262c8:	mov	x0, x19
   262cc:	add	x19, x19, x24
   262d0:	mov	x2, x24
   262d4:	bl	a6f0 <memcpy@plt>
   262d8:	sub	w1, w28, #0x7
   262dc:	cmp	w1, #0x9
   262e0:	b.hi	2631c <vasnprintf@@Base+0x48c>  // b.pmore
   262e4:	adrp	x0, 29000 <vasnprintf@@Base+0x3170>
   262e8:	add	x0, x0, #0x5c4
   262ec:	ldrb	w0, [x0, w1, uxtw]
   262f0:	adr	x1, 262fc <vasnprintf@@Base+0x46c>
   262f4:	add	x0, x1, w0, sxtb #2
   262f8:	br	x0
   262fc:	mov	w1, #0x27                  	// #39
   26300:	add	x19, x20, #0x2
   26304:	strb	w1, [x20, #1]
   26308:	b	26250 <vasnprintf@@Base+0x3c0>
   2630c:	mov	w0, #0x6c                  	// #108
   26310:	strb	w0, [x19], #1
   26314:	mov	w0, #0x6c                  	// #108
   26318:	strb	w0, [x19], #1
   2631c:	ldrb	w0, [x26, #72]
   26320:	strb	w0, [x19]
   26324:	strb	wzr, [x19, #1]
   26328:	ldr	x0, [x26, #40]
   2632c:	cmn	x0, #0x1
   26330:	b.eq	26418 <vasnprintf@@Base+0x588>  // b.none
   26334:	lsl	x1, x0, #5
   26338:	add	x0, x25, x0, lsl #5
   2633c:	ldr	w1, [x25, x1]
   26340:	cmp	w1, #0x5
   26344:	b.ne	260f0 <vasnprintf@@Base+0x260>  // b.any
   26348:	ldr	w0, [x0, #16]
   2634c:	mov	w24, #0x1                   	// #1
   26350:	str	w0, [x29, #216]
   26354:	ldr	x0, [x26, #64]
   26358:	cmn	x0, #0x1
   2635c:	b.eq	26384 <vasnprintf@@Base+0x4f4>  // b.none
   26360:	lsl	x1, x0, #5
   26364:	add	x0, x25, x0, lsl #5
   26368:	ldr	w1, [x25, x1]
   2636c:	cmp	w1, #0x5
   26370:	b.ne	260f0 <vasnprintf@@Base+0x260>  // b.any
   26374:	ldr	w1, [x0, #16]
   26378:	add	x0, x29, #0xd8
   2637c:	str	w1, [x0, w24, uxtw #2]
   26380:	add	w24, w24, #0x1
   26384:	adds	x0, x23, #0x2
   26388:	mov	x2, #0x0                   	// #0
   2638c:	b.cs	26420 <vasnprintf@@Base+0x590>  // b.hs, b.nlast
   26390:	mov	x1, x0
   26394:	cmp	x22, x1
   26398:	b.cs	264b8 <vasnprintf@@Base+0x628>  // b.hs, b.nlast
   2639c:	cmp	x22, #0x0
   263a0:	cbz	x22, 2642c <vasnprintf@@Base+0x59c>
   263a4:	b.lt	26018 <vasnprintf@@Base+0x188>  // b.tstop
   263a8:	lsl	x22, x22, #1
   263ac:	cmp	x22, x1
   263b0:	b.cs	263c4 <vasnprintf@@Base+0x534>  // b.hs, b.nlast
   263b4:	cbnz	x2, 26018 <vasnprintf@@Base+0x188>
   263b8:	cmn	x0, #0x1
   263bc:	b.eq	26018 <vasnprintf@@Base+0x188>  // b.none
   263c0:	mov	x22, x0
   263c4:	ldr	x0, [x29, #168]
   263c8:	cmp	x27, x0
   263cc:	cset	w1, eq  // eq = none
   263d0:	str	w1, [x29, #124]
   263d4:	cmp	x27, #0x0
   263d8:	ccmp	w1, #0x0, #0x0, ne  // ne = any
   263dc:	b.eq	26434 <vasnprintf@@Base+0x5a4>  // b.none
   263e0:	mov	x0, x22
   263e4:	bl	aab0 <malloc@plt>
   263e8:	ldr	w1, [x29, #124]
   263ec:	mov	x25, x0
   263f0:	cbz	x0, 26018 <vasnprintf@@Base+0x188>
   263f4:	cmp	x23, #0x0
   263f8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   263fc:	b.eq	26448 <vasnprintf@@Base+0x5b8>  // b.none
   26400:	mov	x2, x23
   26404:	mov	x1, x27
   26408:	bl	a6f0 <memcpy@plt>
   2640c:	b	26448 <vasnprintf@@Base+0x5b8>
   26410:	mov	w0, #0x4c                  	// #76
   26414:	b	26318 <vasnprintf@@Base+0x488>
   26418:	mov	w24, #0x0                   	// #0
   2641c:	b	26354 <vasnprintf@@Base+0x4c4>
   26420:	mov	x2, #0x1                   	// #1
   26424:	mov	x1, #0xffffffffffffffff    	// #-1
   26428:	b	26394 <vasnprintf@@Base+0x504>
   2642c:	mov	x22, #0xc                   	// #12
   26430:	b	263ac <vasnprintf@@Base+0x51c>
   26434:	mov	x1, x22
   26438:	mov	x0, x27
   2643c:	bl	ad60 <realloc@plt>
   26440:	mov	x25, x0
   26444:	cbz	x0, 26018 <vasnprintf@@Base+0x188>
   26448:	strb	wzr, [x25, x23]
   2644c:	bl	b540 <__errno_location@plt>
   26450:	mov	x27, x0
   26454:	ldr	w0, [x0]
   26458:	str	w0, [x29, #120]
   2645c:	sub	w0, w28, #0x1
   26460:	str	w0, [x29, #124]
   26464:	mov	w0, #0xffffffff            	// #-1
   26468:	str	w0, [x29, #212]
   2646c:	sub	x0, x22, x23
   26470:	mov	x1, #0x7fffffff            	// #2147483647
   26474:	cmp	x0, x1
   26478:	str	wzr, [x27]
   2647c:	csel	x28, x0, x1, ls  // ls = plast
   26480:	str	x0, [x29, #104]
   26484:	ldr	w0, [x29, #124]
   26488:	cmp	w0, #0x10
   2648c:	b.hi	260f0 <vasnprintf@@Base+0x260>  // b.pmore
   26490:	ldr	w4, [x29, #124]
   26494:	add	x0, x25, x23
   26498:	ldr	x2, [x26, #80]
   2649c:	ldr	x1, [x29, #112]
   264a0:	ldr	x3, [x29, #232]
   264a4:	add	x2, x3, x2, lsl #5
   264a8:	ldrb	w1, [x1, w4, uxtw]
   264ac:	adr	x4, 264b8 <vasnprintf@@Base+0x628>
   264b0:	add	x1, x4, w1, sxtb #2
   264b4:	br	x1
   264b8:	mov	x25, x27
   264bc:	b	26448 <vasnprintf@@Base+0x5b8>
   264c0:	ldrsb	w3, [x2, #16]
   264c4:	cmp	w24, #0x1
   264c8:	b.eq	265e4 <vasnprintf@@Base+0x754>  // b.none
   264cc:	cmp	w24, #0x2
   264d0:	b.eq	26600 <vasnprintf@@Base+0x770>  // b.none
   264d4:	mov	x4, x21
   264d8:	mov	x2, x20
   264dc:	mov	x1, x28
   264e0:	bl	a9e0 <snprintf@plt>
   264e4:	b	26524 <vasnprintf@@Base+0x694>
   264e8:	ldrb	w3, [x2, #16]
   264ec:	b	264c4 <vasnprintf@@Base+0x634>
   264f0:	ldrsh	w3, [x2, #16]
   264f4:	b	264c4 <vasnprintf@@Base+0x634>
   264f8:	ldrh	w3, [x2, #16]
   264fc:	b	264c4 <vasnprintf@@Base+0x634>
   26500:	cmp	w24, #0x1
   26504:	ldr	d0, [x2, #16]
   26508:	b.eq	26554 <vasnprintf@@Base+0x6c4>  // b.none
   2650c:	cmp	w24, #0x2
   26510:	b.eq	2656c <vasnprintf@@Base+0x6dc>  // b.none
   26514:	mov	x3, x21
   26518:	mov	x2, x20
   2651c:	mov	x1, x28
   26520:	bl	a9e0 <snprintf@plt>
   26524:	ldr	w2, [x29, #212]
   26528:	tbnz	w2, #31, 2667c <vasnprintf@@Base+0x7ec>
   2652c:	sxtw	x3, w2
   26530:	cmp	x28, w2, sxtw
   26534:	b.ls	26544 <vasnprintf@@Base+0x6b4>  // b.plast
   26538:	add	x3, x25, x3
   2653c:	ldrb	w3, [x3, x23]
   26540:	cbnz	w3, 260f0 <vasnprintf@@Base+0x260>
   26544:	cmp	w2, w0
   26548:	b.ge	26690 <vasnprintf@@Base+0x800>  // b.tcont
   2654c:	str	w0, [x29, #212]
   26550:	b	26690 <vasnprintf@@Base+0x800>
   26554:	ldr	w3, [x29, #216]
   26558:	mov	x4, x21
   2655c:	mov	x2, x20
   26560:	mov	x1, x28
   26564:	bl	a9e0 <snprintf@plt>
   26568:	b	26524 <vasnprintf@@Base+0x694>
   2656c:	ldp	w3, w4, [x29, #216]
   26570:	mov	x5, x21
   26574:	mov	x2, x20
   26578:	mov	x1, x28
   2657c:	bl	a9e0 <snprintf@plt>
   26580:	b	26524 <vasnprintf@@Base+0x694>
   26584:	cmp	w24, #0x1
   26588:	ldr	q0, [x2, #16]
   2658c:	b.eq	265ac <vasnprintf@@Base+0x71c>  // b.none
   26590:	cmp	w24, #0x2
   26594:	b.eq	265c4 <vasnprintf@@Base+0x734>  // b.none
   26598:	mov	x3, x21
   2659c:	mov	x2, x20
   265a0:	mov	x1, x28
   265a4:	bl	a9e0 <snprintf@plt>
   265a8:	b	26524 <vasnprintf@@Base+0x694>
   265ac:	ldr	w3, [x29, #216]
   265b0:	mov	x4, x21
   265b4:	mov	x2, x20
   265b8:	mov	x1, x28
   265bc:	bl	a9e0 <snprintf@plt>
   265c0:	b	26524 <vasnprintf@@Base+0x694>
   265c4:	ldp	w3, w4, [x29, #216]
   265c8:	mov	x5, x21
   265cc:	mov	x2, x20
   265d0:	mov	x1, x28
   265d4:	bl	a9e0 <snprintf@plt>
   265d8:	b	26524 <vasnprintf@@Base+0x694>
   265dc:	ldr	w3, [x2, #16]
   265e0:	b	264c4 <vasnprintf@@Base+0x634>
   265e4:	mov	w4, w3
   265e8:	ldr	w3, [x29, #216]
   265ec:	mov	x5, x21
   265f0:	mov	x2, x20
   265f4:	mov	x1, x28
   265f8:	bl	a9e0 <snprintf@plt>
   265fc:	b	26524 <vasnprintf@@Base+0x694>
   26600:	mov	w5, w3
   26604:	mov	x6, x21
   26608:	ldp	w3, w4, [x29, #216]
   2660c:	mov	x2, x20
   26610:	mov	x1, x28
   26614:	bl	a9e0 <snprintf@plt>
   26618:	b	26524 <vasnprintf@@Base+0x694>
   2661c:	cmp	w24, #0x1
   26620:	ldr	x3, [x2, #16]
   26624:	b.eq	26644 <vasnprintf@@Base+0x7b4>  // b.none
   26628:	cmp	w24, #0x2
   2662c:	b.eq	26660 <vasnprintf@@Base+0x7d0>  // b.none
   26630:	mov	x4, x21
   26634:	mov	x2, x20
   26638:	mov	x1, x28
   2663c:	bl	a9e0 <snprintf@plt>
   26640:	b	26524 <vasnprintf@@Base+0x694>
   26644:	mov	x4, x3
   26648:	ldr	w3, [x29, #216]
   2664c:	mov	x5, x21
   26650:	mov	x2, x20
   26654:	mov	x1, x28
   26658:	bl	a9e0 <snprintf@plt>
   2665c:	b	26524 <vasnprintf@@Base+0x694>
   26660:	mov	x5, x3
   26664:	mov	x6, x21
   26668:	ldp	w3, w4, [x29, #216]
   2666c:	mov	x2, x20
   26670:	mov	x1, x28
   26674:	bl	a9e0 <snprintf@plt>
   26678:	b	26524 <vasnprintf@@Base+0x694>
   2667c:	ldrb	w2, [x19, #1]
   26680:	cbz	w2, 2668c <vasnprintf@@Base+0x7fc>
   26684:	strb	wzr, [x19, #1]
   26688:	b	26464 <vasnprintf@@Base+0x5d4>
   2668c:	tbz	w0, #31, 2654c <vasnprintf@@Base+0x6bc>
   26690:	ldr	w0, [x29, #212]
   26694:	tbz	w0, #31, 26714 <vasnprintf@@Base+0x884>
   26698:	ldr	w19, [x27]
   2669c:	cbnz	w19, 266bc <vasnprintf@@Base+0x82c>
   266a0:	ldrb	w0, [x26, #72]
   266a4:	mov	w19, #0x54                  	// #84
   266a8:	and	w0, w0, #0xffffffef
   266ac:	and	w0, w0, #0xff
   266b0:	cmp	w0, #0x63
   266b4:	mov	w0, #0x16                  	// #22
   266b8:	csel	w19, w19, w0, eq  // eq = none
   266bc:	ldr	x0, [x29, #168]
   266c0:	cmp	x25, #0x0
   266c4:	ccmp	x25, x0, #0x4, ne  // ne = any
   266c8:	b.eq	266d4 <vasnprintf@@Base+0x844>  // b.none
   266cc:	mov	x0, x25
   266d0:	bl	b050 <free@plt>
   266d4:	ldr	x0, [x29, #160]
   266d8:	cbz	x0, 266e0 <vasnprintf@@Base+0x850>
   266dc:	bl	b050 <free@plt>
   266e0:	ldr	x0, [x29, #480]
   266e4:	add	x1, x29, #0x1f8
   266e8:	cmp	x0, x1
   266ec:	b.eq	266f4 <vasnprintf@@Base+0x864>  // b.none
   266f0:	bl	b050 <free@plt>
   266f4:	ldr	x0, [x29, #232]
   266f8:	add	x1, x29, #0xf0
   266fc:	cmp	x0, x1
   26700:	b.eq	26708 <vasnprintf@@Base+0x878>  // b.none
   26704:	bl	b050 <free@plt>
   26708:	str	w19, [x27]
   2670c:	mov	x19, #0x0                   	// #0
   26710:	b	26964 <vasnprintf@@Base+0xad4>
   26714:	add	w2, w0, #0x1
   26718:	cmp	x2, x28
   2671c:	b.cc	26834 <vasnprintf@@Base+0x9a4>  // b.lo, b.ul, b.last
   26720:	sub	x2, x22, x23
   26724:	mov	x1, #0x7ffffffe            	// #2147483646
   26728:	cmp	x2, x1
   2672c:	b.ls	26788 <vasnprintf@@Base+0x8f8>  // b.plast
   26730:	ldr	x0, [x29, #168]
   26734:	cmp	x25, #0x0
   26738:	ccmp	x25, x0, #0x4, ne  // ne = any
   2673c:	b.eq	26748 <vasnprintf@@Base+0x8b8>  // b.none
   26740:	mov	x0, x25
   26744:	bl	b050 <free@plt>
   26748:	ldr	x0, [x29, #160]
   2674c:	cbz	x0, 26754 <vasnprintf@@Base+0x8c4>
   26750:	bl	b050 <free@plt>
   26754:	ldr	x0, [x29, #480]
   26758:	add	x1, x29, #0x1f8
   2675c:	cmp	x0, x1
   26760:	b.eq	26768 <vasnprintf@@Base+0x8d8>  // b.none
   26764:	bl	b050 <free@plt>
   26768:	ldr	x0, [x29, #232]
   2676c:	add	x1, x29, #0xf0
   26770:	cmp	x0, x1
   26774:	b.eq	2677c <vasnprintf@@Base+0x8ec>  // b.none
   26778:	bl	b050 <free@plt>
   2677c:	mov	w0, #0x4b                  	// #75
   26780:	str	w0, [x27]
   26784:	b	2670c <vasnprintf@@Base+0x87c>
   26788:	add	w0, w0, #0x2
   2678c:	mov	x2, #0xffffffffffffffff    	// #-1
   26790:	adds	x0, x0, x23
   26794:	lsl	x1, x22, #1
   26798:	csel	x0, x0, x2, cc  // cc = lo, ul, last
   2679c:	cmp	x22, #0x0
   267a0:	csel	x1, x1, x2, ge  // ge = tcont
   267a4:	cmp	x1, x0
   267a8:	csel	x0, x1, x0, cs  // cs = hs, nlast
   267ac:	cmp	x22, x0
   267b0:	b.cs	26464 <vasnprintf@@Base+0x5d4>  // b.hs, b.nlast
   267b4:	cmp	x1, x0
   267b8:	csel	x22, x1, x0, cs  // cs = hs, nlast
   267bc:	cmp	x22, x2
   267c0:	b.eq	267f4 <vasnprintf@@Base+0x964>  // b.none
   267c4:	ldr	x0, [x29, #168]
   267c8:	cmp	x25, x0
   267cc:	cset	w1, eq  // eq = none
   267d0:	str	w1, [x29, #104]
   267d4:	cmp	x25, #0x0
   267d8:	ccmp	w1, #0x0, #0x0, ne  // ne = any
   267dc:	b.eq	267fc <vasnprintf@@Base+0x96c>  // b.none
   267e0:	mov	x0, x22
   267e4:	bl	aab0 <malloc@plt>
   267e8:	ldr	w1, [x29, #104]
   267ec:	mov	x28, x0
   267f0:	cbnz	x0, 26814 <vasnprintf@@Base+0x984>
   267f4:	mov	x27, x25
   267f8:	b	26018 <vasnprintf@@Base+0x188>
   267fc:	mov	x1, x22
   26800:	mov	x0, x25
   26804:	bl	ad60 <realloc@plt>
   26808:	cbz	x0, 267f4 <vasnprintf@@Base+0x964>
   2680c:	mov	x25, x0
   26810:	b	26464 <vasnprintf@@Base+0x5d4>
   26814:	cmp	x23, #0x0
   26818:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   2681c:	b.eq	2682c <vasnprintf@@Base+0x99c>  // b.none
   26820:	mov	x2, x23
   26824:	mov	x1, x25
   26828:	bl	a6f0 <memcpy@plt>
   2682c:	mov	x25, x28
   26830:	b	26464 <vasnprintf@@Base+0x5d4>
   26834:	add	x23, x23, w0, sxtw
   26838:	ldr	w0, [x29, #120]
   2683c:	str	w0, [x27]
   26840:	mov	x27, x25
   26844:	b	261b4 <vasnprintf@@Base+0x324>
   26848:	adds	x20, x23, #0x1
   2684c:	mov	x1, #0x0                   	// #0
   26850:	b.cs	268cc <vasnprintf@@Base+0xa3c>  // b.hs, b.nlast
   26854:	mov	x0, x20
   26858:	cmp	x22, x0
   2685c:	b.cs	2698c <vasnprintf@@Base+0xafc>  // b.hs, b.nlast
   26860:	cmp	x22, #0x0
   26864:	cbz	x22, 268d8 <vasnprintf@@Base+0xa48>
   26868:	b.lt	26018 <vasnprintf@@Base+0x188>  // b.tstop
   2686c:	lsl	x22, x22, #1
   26870:	cmp	x22, x0
   26874:	b.cs	26888 <vasnprintf@@Base+0x9f8>  // b.hs, b.nlast
   26878:	cbnz	x1, 26018 <vasnprintf@@Base+0x188>
   2687c:	cmn	x20, #0x1
   26880:	b.eq	26018 <vasnprintf@@Base+0x188>  // b.none
   26884:	mov	x22, x20
   26888:	ldr	x0, [x29, #168]
   2688c:	cmp	x27, x0
   26890:	cset	w21, eq  // eq = none
   26894:	cmp	x27, #0x0
   26898:	ccmp	w21, #0x0, #0x0, ne  // ne = any
   2689c:	b.eq	268e0 <vasnprintf@@Base+0xa50>  // b.none
   268a0:	mov	x0, x22
   268a4:	bl	aab0 <malloc@plt>
   268a8:	mov	x19, x0
   268ac:	cbz	x0, 26018 <vasnprintf@@Base+0x188>
   268b0:	cmp	x23, #0x0
   268b4:	ccmp	w21, #0x0, #0x4, ne  // ne = any
   268b8:	b.eq	268f4 <vasnprintf@@Base+0xa64>  // b.none
   268bc:	mov	x2, x23
   268c0:	mov	x1, x27
   268c4:	bl	a6f0 <memcpy@plt>
   268c8:	b	268f4 <vasnprintf@@Base+0xa64>
   268cc:	mov	x1, #0x1                   	// #1
   268d0:	mov	x0, #0xffffffffffffffff    	// #-1
   268d4:	b	26858 <vasnprintf@@Base+0x9c8>
   268d8:	mov	x22, #0xc                   	// #12
   268dc:	b	26870 <vasnprintf@@Base+0x9e0>
   268e0:	mov	x1, x22
   268e4:	mov	x0, x27
   268e8:	bl	ad60 <realloc@plt>
   268ec:	mov	x19, x0
   268f0:	cbz	x0, 26018 <vasnprintf@@Base+0x188>
   268f4:	ldr	x0, [x29, #168]
   268f8:	strb	wzr, [x19, x23]
   268fc:	cmp	x19, x0
   26900:	b.eq	26920 <vasnprintf@@Base+0xa90>  // b.none
   26904:	cmp	x22, x20
   26908:	b.ls	26920 <vasnprintf@@Base+0xa90>  // b.plast
   2690c:	mov	x0, x19
   26910:	mov	x1, x20
   26914:	bl	ad60 <realloc@plt>
   26918:	cmp	x0, #0x0
   2691c:	csel	x19, x19, x0, eq  // eq = none
   26920:	ldr	x0, [x29, #160]
   26924:	cbz	x0, 2692c <vasnprintf@@Base+0xa9c>
   26928:	bl	b050 <free@plt>
   2692c:	ldr	x1, [x29, #144]
   26930:	ldr	x0, [x29, #480]
   26934:	add	x1, x1, #0x20
   26938:	cmp	x0, x1
   2693c:	b.eq	26944 <vasnprintf@@Base+0xab4>  // b.none
   26940:	bl	b050 <free@plt>
   26944:	ldr	x1, [x29, #152]
   26948:	ldr	x0, [x29, #232]
   2694c:	add	x1, x1, #0x10
   26950:	cmp	x0, x1
   26954:	b.eq	2695c <vasnprintf@@Base+0xacc>  // b.none
   26958:	bl	b050 <free@plt>
   2695c:	ldr	x0, [x29, #128]
   26960:	str	x23, [x0]
   26964:	mov	sp, x29
   26968:	mov	x0, x19
   2696c:	ldp	x29, x30, [sp]
   26970:	ldp	x19, x20, [sp, #16]
   26974:	ldp	x21, x22, [sp, #32]
   26978:	ldp	x23, x24, [sp, #48]
   2697c:	ldp	x25, x26, [sp, #64]
   26980:	ldp	x27, x28, [sp, #80]
   26984:	add	sp, sp, #0x460
   26988:	ret
   2698c:	mov	x19, x27
   26990:	b	268f4 <vasnprintf@@Base+0xa64>
   26994:	nop
   26998:	adrp	x2, 41000 <base_len@@Base+0x2e68c>
   2699c:	mov	x1, #0x0                   	// #0
   269a0:	ldr	x2, [x2, #2048]
   269a4:	b	a940 <__cxa_atexit@plt>
   269a8:	mov	x2, x1
   269ac:	mov	x1, x0
   269b0:	mov	w0, #0x0                   	// #0
   269b4:	b	b590 <__xstat@plt>
   269b8:	mov	x2, x1
   269bc:	mov	w1, w0
   269c0:	mov	w0, #0x0                   	// #0
   269c4:	b	b380 <__fxstat@plt>
   269c8:	mov	x2, x1
   269cc:	mov	x1, x0
   269d0:	mov	w0, #0x0                   	// #0
   269d4:	b	b290 <__lxstat@plt>
   269d8:	mov	x4, x1
   269dc:	mov	x5, x2
   269e0:	mov	w1, w0
   269e4:	mov	x2, x4
   269e8:	mov	w0, #0x0                   	// #0
   269ec:	mov	w4, w3
   269f0:	mov	x3, x5
   269f4:	b	b690 <__fxstatat@plt>

Disassembly of section .fini:

00000000000269f8 <.fini>:
   269f8:	stp	x29, x30, [sp, #-16]!
   269fc:	mov	x29, sp
   26a00:	ldp	x29, x30, [sp], #16
   26a04:	ret
